
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libzstd.so.1.4.4_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000043c0 <.init>:
    43c0:	stp	x29, x30, [sp, #-16]!
    43c4:	mov	x29, sp
    43c8:	bl	4b20 <ZSTD_initDStream_usingDDict@plt+0x10>
    43cc:	ldp	x29, x30, [sp], #16
    43d0:	ret

Disassembly of section .plt:

00000000000043e0 <ZSTD_createDStream_advanced@plt-0x20>:
    43e0:	stp	x16, x30, [sp, #-16]!
    43e4:	adrp	x16, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
    43e8:	ldr	x17, [x16, #4088]
    43ec:	add	x16, x16, #0xff8
    43f0:	br	x17
    43f4:	nop
    43f8:	nop
    43fc:	nop

0000000000004400 <ZSTD_createDStream_advanced@plt>:
    4400:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4404:	ldr	x17, [x16]
    4408:	add	x16, x16, #0x0
    440c:	br	x17

0000000000004410 <ZSTD_CCtx_refCDict@plt>:
    4410:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4414:	ldr	x17, [x16, #8]
    4418:	add	x16, x16, #0x8
    441c:	br	x17

0000000000004420 <memcpy@plt>:
    4420:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4424:	ldr	x17, [x16, #16]
    4428:	add	x16, x16, #0x10
    442c:	br	x17

0000000000004430 <ZSTD_decompressBegin_usingDict@plt>:
    4430:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4434:	ldr	x17, [x16, #24]
    4438:	add	x16, x16, #0x18
    443c:	br	x17

0000000000004440 <ZSTD_estimateCDictSize_advanced@plt>:
    4440:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4444:	ldr	x17, [x16, #32]
    4448:	add	x16, x16, #0x20
    444c:	br	x17

0000000000004450 <memmove@plt>:
    4450:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4454:	ldr	x17, [x16, #40]
    4458:	add	x16, x16, #0x28
    445c:	br	x17

0000000000004460 <ZSTD_CStreamInSize@plt>:
    4460:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4464:	ldr	x17, [x16, #48]
    4468:	add	x16, x16, #0x30
    446c:	br	x17

0000000000004470 <ZSTD_compressStream@plt>:
    4470:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4474:	ldr	x17, [x16, #56]
    4478:	add	x16, x16, #0x38
    447c:	br	x17

0000000000004480 <clock@plt>:
    4480:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4484:	ldr	x17, [x16, #64]
    4488:	add	x16, x16, #0x40
    448c:	br	x17

0000000000004490 <ZSTD_createDStream@plt>:
    4490:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4494:	ldr	x17, [x16, #72]
    4498:	add	x16, x16, #0x48
    449c:	br	x17

00000000000044a0 <ZSTD_estimateCStreamSize_usingCCtxParams@plt>:
    44a0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    44a4:	ldr	x17, [x16, #80]
    44a8:	add	x16, x16, #0x50
    44ac:	br	x17

00000000000044b0 <ZSTD_createCCtx_advanced@plt>:
    44b0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    44b4:	ldr	x17, [x16, #88]
    44b8:	add	x16, x16, #0x58
    44bc:	br	x17

00000000000044c0 <ZSTD_decompressDCtx@plt>:
    44c0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    44c4:	ldr	x17, [x16, #96]
    44c8:	add	x16, x16, #0x60
    44cc:	br	x17

00000000000044d0 <ZSTD_DCtx_setParameter@plt>:
    44d0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    44d4:	ldr	x17, [x16, #104]
    44d8:	add	x16, x16, #0x68
    44dc:	br	x17

00000000000044e0 <ZSTD_compressEnd@plt>:
    44e0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    44e4:	ldr	x17, [x16, #112]
    44e8:	add	x16, x16, #0x70
    44ec:	br	x17

00000000000044f0 <ZSTD_initCStream@plt>:
    44f0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    44f4:	ldr	x17, [x16, #120]
    44f8:	add	x16, x16, #0x78
    44fc:	br	x17

0000000000004500 <ZSTD_CCtx_setParameter@plt>:
    4500:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4504:	ldr	x17, [x16, #128]
    4508:	add	x16, x16, #0x80
    450c:	br	x17

0000000000004510 <__cxa_finalize@plt>:
    4510:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4514:	ldr	x17, [x16, #136]
    4518:	add	x16, x16, #0x88
    451c:	br	x17

0000000000004520 <ZSTD_estimateDStreamSize@plt>:
    4520:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4524:	ldr	x17, [x16, #144]
    4528:	add	x16, x16, #0x90
    452c:	br	x17

0000000000004530 <ZSTD_CCtx_reset@plt>:
    4530:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4534:	ldr	x17, [x16, #152]
    4538:	add	x16, x16, #0x98
    453c:	br	x17

0000000000004540 <fputc@plt>:
    4540:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4544:	ldr	x17, [x16, #160]
    4548:	add	x16, x16, #0xa0
    454c:	br	x17

0000000000004550 <qsort@plt>:
    4550:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4554:	ldr	x17, [x16, #168]
    4558:	add	x16, x16, #0xa8
    455c:	br	x17

0000000000004560 <ZSTD_freeCDict@plt>:
    4560:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4564:	ldr	x17, [x16, #176]
    4568:	add	x16, x16, #0xb0
    456c:	br	x17

0000000000004570 <ZSTD_compress_usingCDict_advanced@plt>:
    4570:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4574:	ldr	x17, [x16, #184]
    4578:	add	x16, x16, #0xb8
    457c:	br	x17

0000000000004580 <ZSTD_initCStream_advanced@plt>:
    4580:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4584:	ldr	x17, [x16, #192]
    4588:	add	x16, x16, #0xc0
    458c:	br	x17

0000000000004590 <ZSTD_freeCCtx@plt>:
    4590:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4594:	ldr	x17, [x16, #200]
    4598:	add	x16, x16, #0xc8
    459c:	br	x17

00000000000045a0 <ZSTD_getFrameHeader_advanced@plt>:
    45a0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    45a4:	ldr	x17, [x16, #208]
    45a8:	add	x16, x16, #0xd0
    45ac:	br	x17

00000000000045b0 <ZSTD_flushStream@plt>:
    45b0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    45b4:	ldr	x17, [x16, #216]
    45b8:	add	x16, x16, #0xd8
    45bc:	br	x17

00000000000045c0 <ZSTD_getCParams@plt>:
    45c0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    45c4:	ldr	x17, [x16, #224]
    45c8:	add	x16, x16, #0xe0
    45cc:	br	x17

00000000000045d0 <ZSTD_getFrameContentSize@plt>:
    45d0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    45d4:	ldr	x17, [x16, #232]
    45d8:	add	x16, x16, #0xe8
    45dc:	br	x17

00000000000045e0 <ZSTD_decompressBegin_usingDDict@plt>:
    45e0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    45e4:	ldr	x17, [x16, #240]
    45e8:	add	x16, x16, #0xf0
    45ec:	br	x17

00000000000045f0 <ZSTD_freeDCtx@plt>:
    45f0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    45f4:	ldr	x17, [x16, #248]
    45f8:	add	x16, x16, #0xf8
    45fc:	br	x17

0000000000004600 <ZSTD_dParam_getBounds@plt>:
    4600:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4604:	ldr	x17, [x16, #256]
    4608:	add	x16, x16, #0x100
    460c:	br	x17

0000000000004610 <ZDICT_optimizeTrainFromBuffer_fastCover@plt>:
    4610:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4614:	ldr	x17, [x16, #264]
    4618:	add	x16, x16, #0x108
    461c:	br	x17

0000000000004620 <ZSTD_CCtx_loadDictionary@plt>:
    4620:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4624:	ldr	x17, [x16, #272]
    4628:	add	x16, x16, #0x110
    462c:	br	x17

0000000000004630 <ZSTD_DCtx_loadDictionary@plt>:
    4630:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4634:	ldr	x17, [x16, #280]
    4638:	add	x16, x16, #0x118
    463c:	br	x17

0000000000004640 <malloc@plt>:
    4640:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4644:	ldr	x17, [x16, #288]
    4648:	add	x16, x16, #0x120
    464c:	br	x17

0000000000004650 <ZSTD_compressStream2@plt>:
    4650:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4654:	ldr	x17, [x16, #296]
    4658:	add	x16, x16, #0x128
    465c:	br	x17

0000000000004660 <ZSTD_CCtxParams_getParameter@plt>:
    4660:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4664:	ldr	x17, [x16, #304]
    4668:	add	x16, x16, #0x130
    466c:	br	x17

0000000000004670 <ZSTD_DCtx_refPrefix_advanced@plt>:
    4670:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4674:	ldr	x17, [x16, #312]
    4678:	add	x16, x16, #0x138
    467c:	br	x17

0000000000004680 <ZSTD_initDStream_usingDict@plt>:
    4680:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4684:	ldr	x17, [x16, #320]
    4688:	add	x16, x16, #0x140
    468c:	br	x17

0000000000004690 <ZSTD_compressStream2_simpleArgs@plt>:
    4690:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4694:	ldr	x17, [x16, #328]
    4698:	add	x16, x16, #0x148
    469c:	br	x17

00000000000046a0 <memset@plt>:
    46a0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    46a4:	ldr	x17, [x16, #336]
    46a8:	add	x16, x16, #0x150
    46ac:	br	x17

00000000000046b0 <ZDICT_finalizeDictionary@plt>:
    46b0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    46b4:	ldr	x17, [x16, #344]
    46b8:	add	x16, x16, #0x158
    46bc:	br	x17

00000000000046c0 <ZSTD_createCCtx@plt>:
    46c0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    46c4:	ldr	x17, [x16, #352]
    46c8:	add	x16, x16, #0x160
    46cc:	br	x17

00000000000046d0 <ZSTD_initCStream_usingDict@plt>:
    46d0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    46d4:	ldr	x17, [x16, #360]
    46d8:	add	x16, x16, #0x168
    46dc:	br	x17

00000000000046e0 <ZSTD_estimateCCtxSize_usingCParams@plt>:
    46e0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    46e4:	ldr	x17, [x16, #368]
    46e8:	add	x16, x16, #0x170
    46ec:	br	x17

00000000000046f0 <ZSTD_DStreamOutSize@plt>:
    46f0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    46f4:	ldr	x17, [x16, #376]
    46f8:	add	x16, x16, #0x178
    46fc:	br	x17

0000000000004700 <calloc@plt>:
    4700:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4704:	ldr	x17, [x16, #384]
    4708:	add	x16, x16, #0x180
    470c:	br	x17

0000000000004710 <ZSTD_freeCStream@plt>:
    4710:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4714:	ldr	x17, [x16, #392]
    4718:	add	x16, x16, #0x188
    471c:	br	x17

0000000000004720 <ZSTD_CCtx_refPrefix_advanced@plt>:
    4720:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4724:	ldr	x17, [x16, #400]
    4728:	add	x16, x16, #0x190
    472c:	br	x17

0000000000004730 <ZSTD_decompress_usingDDict@plt>:
    4730:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4734:	ldr	x17, [x16, #408]
    4738:	add	x16, x16, #0x198
    473c:	br	x17

0000000000004740 <ZSTD_sizeof_CCtx@plt>:
    4740:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4744:	ldr	x17, [x16, #416]
    4748:	add	x16, x16, #0x1a0
    474c:	br	x17

0000000000004750 <ZSTD_compress_usingCDict@plt>:
    4750:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4754:	ldr	x17, [x16, #424]
    4758:	add	x16, x16, #0x1a8
    475c:	br	x17

0000000000004760 <ZSTD_createDDict_advanced@plt>:
    4760:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4764:	ldr	x17, [x16, #432]
    4768:	add	x16, x16, #0x1b0
    476c:	br	x17

0000000000004770 <ZSTD_DCtx_loadDictionary_advanced@plt>:
    4770:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4774:	ldr	x17, [x16, #440]
    4778:	add	x16, x16, #0x1b8
    477c:	br	x17

0000000000004780 <ZSTD_compressBegin_usingDict@plt>:
    4780:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4784:	ldr	x17, [x16, #448]
    4788:	add	x16, x16, #0x1c0
    478c:	br	x17

0000000000004790 <ZSTD_compressCCtx@plt>:
    4790:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4794:	ldr	x17, [x16, #456]
    4798:	add	x16, x16, #0x1c8
    479c:	br	x17

00000000000047a0 <__gmon_start__@plt>:
    47a0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    47a4:	ldr	x17, [x16, #464]
    47a8:	add	x16, x16, #0x1d0
    47ac:	br	x17

00000000000047b0 <ZSTD_createCDict_advanced@plt>:
    47b0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    47b4:	ldr	x17, [x16, #472]
    47b8:	add	x16, x16, #0x1d8
    47bc:	br	x17

00000000000047c0 <ZSTD_decompressBegin@plt>:
    47c0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    47c4:	ldr	x17, [x16, #480]
    47c8:	add	x16, x16, #0x1e0
    47cc:	br	x17

00000000000047d0 <ZSTD_sizeof_DCtx@plt>:
    47d0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    47d4:	ldr	x17, [x16, #488]
    47d8:	add	x16, x16, #0x1e8
    47dc:	br	x17

00000000000047e0 <ZSTD_decodingBufferSize_min@plt>:
    47e0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    47e4:	ldr	x17, [x16, #496]
    47e8:	add	x16, x16, #0x1f0
    47ec:	br	x17

00000000000047f0 <ZSTD_CCtxParams_setParameter@plt>:
    47f0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    47f4:	ldr	x17, [x16, #504]
    47f8:	add	x16, x16, #0x1f8
    47fc:	br	x17

0000000000004800 <ZSTD_sizeof_CDict@plt>:
    4800:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4804:	ldr	x17, [x16, #512]
    4808:	add	x16, x16, #0x200
    480c:	br	x17

0000000000004810 <ZSTD_initDStream@plt>:
    4810:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4814:	ldr	x17, [x16, #520]
    4818:	add	x16, x16, #0x208
    481c:	br	x17

0000000000004820 <ZSTD_createDCtx@plt>:
    4820:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4824:	ldr	x17, [x16, #528]
    4828:	add	x16, x16, #0x210
    482c:	br	x17

0000000000004830 <ZSTD_compress_usingDict@plt>:
    4830:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4834:	ldr	x17, [x16, #536]
    4838:	add	x16, x16, #0x218
    483c:	br	x17

0000000000004840 <memcmp@plt>:
    4840:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4844:	ldr	x17, [x16, #544]
    4848:	add	x16, x16, #0x220
    484c:	br	x17

0000000000004850 <ZSTD_getFrameHeader@plt>:
    4850:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4854:	ldr	x17, [x16, #552]
    4858:	add	x16, x16, #0x228
    485c:	br	x17

0000000000004860 <ZSTD_createCDict@plt>:
    4860:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4864:	ldr	x17, [x16, #560]
    4868:	add	x16, x16, #0x230
    486c:	br	x17

0000000000004870 <ZSTD_getBlockSize@plt>:
    4870:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4874:	ldr	x17, [x16, #568]
    4878:	add	x16, x16, #0x238
    487c:	br	x17

0000000000004880 <free@plt>:
    4880:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4884:	ldr	x17, [x16, #576]
    4888:	add	x16, x16, #0x240
    488c:	br	x17

0000000000004890 <ZSTD_DCtx_reset@plt>:
    4890:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4894:	ldr	x17, [x16, #584]
    4898:	add	x16, x16, #0x248
    489c:	br	x17

00000000000048a0 <ZSTD_compressBlock@plt>:
    48a0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    48a4:	ldr	x17, [x16, #592]
    48a8:	add	x16, x16, #0x250
    48ac:	br	x17

00000000000048b0 <ZSTD_CStreamOutSize@plt>:
    48b0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    48b4:	ldr	x17, [x16, #600]
    48b8:	add	x16, x16, #0x258
    48bc:	br	x17

00000000000048c0 <ZSTD_checkCParams@plt>:
    48c0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    48c4:	ldr	x17, [x16, #608]
    48c8:	add	x16, x16, #0x260
    48cc:	br	x17

00000000000048d0 <ZSTD_decompressContinue@plt>:
    48d0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    48d4:	ldr	x17, [x16, #616]
    48d8:	add	x16, x16, #0x268
    48dc:	br	x17

00000000000048e0 <fwrite@plt>:
    48e0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    48e4:	ldr	x17, [x16, #624]
    48e8:	add	x16, x16, #0x270
    48ec:	br	x17

00000000000048f0 <ZSTD_decompressStream@plt>:
    48f0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    48f4:	ldr	x17, [x16, #632]
    48f8:	add	x16, x16, #0x278
    48fc:	br	x17

0000000000004900 <ZSTD_CCtxParams_init@plt>:
    4900:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4904:	ldr	x17, [x16, #640]
    4908:	add	x16, x16, #0x280
    490c:	br	x17

0000000000004910 <ZSTD_estimateCCtxSize_usingCCtxParams@plt>:
    4910:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4914:	ldr	x17, [x16, #648]
    4918:	add	x16, x16, #0x288
    491c:	br	x17

0000000000004920 <fflush@plt>:
    4920:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4924:	ldr	x17, [x16, #656]
    4928:	add	x16, x16, #0x290
    492c:	br	x17

0000000000004930 <ZSTD_compressBound@plt>:
    4930:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4934:	ldr	x17, [x16, #664]
    4938:	add	x16, x16, #0x298
    493c:	br	x17

0000000000004940 <ZSTD_compressBegin_usingCDict_advanced@plt>:
    4940:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4944:	ldr	x17, [x16, #672]
    4948:	add	x16, x16, #0x2a0
    494c:	br	x17

0000000000004950 <ZSTD_compress2@plt>:
    4950:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4954:	ldr	x17, [x16, #680]
    4958:	add	x16, x16, #0x2a8
    495c:	br	x17

0000000000004960 <ZSTD_cParam_getBounds@plt>:
    4960:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4964:	ldr	x17, [x16, #688]
    4968:	add	x16, x16, #0x2b0
    496c:	br	x17

0000000000004970 <ZSTD_endStream@plt>:
    4970:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4974:	ldr	x17, [x16, #696]
    4978:	add	x16, x16, #0x2b8
    497c:	br	x17

0000000000004980 <ZSTD_DStreamInSize@plt>:
    4980:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4984:	ldr	x17, [x16, #704]
    4988:	add	x16, x16, #0x2c0
    498c:	br	x17

0000000000004990 <ZSTD_compressBegin_usingCDict@plt>:
    4990:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4994:	ldr	x17, [x16, #712]
    4998:	add	x16, x16, #0x2c8
    499c:	br	x17

00000000000049a0 <ZSTD_CCtx_loadDictionary_advanced@plt>:
    49a0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    49a4:	ldr	x17, [x16, #720]
    49a8:	add	x16, x16, #0x2d0
    49ac:	br	x17

00000000000049b0 <ZSTD_sizeof_DDict@plt>:
    49b0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    49b4:	ldr	x17, [x16, #728]
    49b8:	add	x16, x16, #0x2d8
    49bc:	br	x17

00000000000049c0 <ZSTD_nextSrcSizeToDecompress@plt>:
    49c0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    49c4:	ldr	x17, [x16, #736]
    49c8:	add	x16, x16, #0x2e0
    49cc:	br	x17

00000000000049d0 <ZSTD_createCStream_advanced@plt>:
    49d0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    49d4:	ldr	x17, [x16, #744]
    49d8:	add	x16, x16, #0x2e8
    49dc:	br	x17

00000000000049e0 <ZSTD_getDictID_fromDict@plt>:
    49e0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    49e4:	ldr	x17, [x16, #752]
    49e8:	add	x16, x16, #0x2f0
    49ec:	br	x17

00000000000049f0 <ZSTD_findFrameCompressedSize@plt>:
    49f0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    49f4:	ldr	x17, [x16, #760]
    49f8:	add	x16, x16, #0x2f8
    49fc:	br	x17

0000000000004a00 <ZSTD_freeDDict@plt>:
    4a00:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a04:	ldr	x17, [x16, #768]
    4a08:	add	x16, x16, #0x300
    4a0c:	br	x17

0000000000004a10 <ZSTD_createCStream@plt>:
    4a10:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a14:	ldr	x17, [x16, #776]
    4a18:	add	x16, x16, #0x308
    4a1c:	br	x17

0000000000004a20 <ZSTD_getParams@plt>:
    4a20:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a24:	ldr	x17, [x16, #784]
    4a28:	add	x16, x16, #0x310
    4a2c:	br	x17

0000000000004a30 <ZSTD_initStaticCCtx@plt>:
    4a30:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a34:	ldr	x17, [x16, #792]
    4a38:	add	x16, x16, #0x318
    4a3c:	br	x17

0000000000004a40 <__assert_fail@plt>:
    4a40:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a44:	ldr	x17, [x16, #800]
    4a48:	add	x16, x16, #0x320
    4a4c:	br	x17

0000000000004a50 <ZSTD_CCtxParams_reset@plt>:
    4a50:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a54:	ldr	x17, [x16, #808]
    4a58:	add	x16, x16, #0x328
    4a5c:	br	x17

0000000000004a60 <ZSTD_CCtx_setPledgedSrcSize@plt>:
    4a60:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a64:	ldr	x17, [x16, #816]
    4a68:	add	x16, x16, #0x330
    4a6c:	br	x17

0000000000004a70 <ZSTD_DCtx_refDDict@plt>:
    4a70:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a74:	ldr	x17, [x16, #824]
    4a78:	add	x16, x16, #0x338
    4a7c:	br	x17

0000000000004a80 <ZSTD_estimateCStreamSize_usingCParams@plt>:
    4a80:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a84:	ldr	x17, [x16, #832]
    4a88:	add	x16, x16, #0x340
    4a8c:	br	x17

0000000000004a90 <ZSTD_compressContinue@plt>:
    4a90:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4a94:	ldr	x17, [x16, #840]
    4a98:	add	x16, x16, #0x348
    4a9c:	br	x17

0000000000004aa0 <ZSTD_freeDStream@plt>:
    4aa0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4aa4:	ldr	x17, [x16, #848]
    4aa8:	add	x16, x16, #0x350
    4aac:	br	x17

0000000000004ab0 <ZSTD_initStaticDCtx@plt>:
    4ab0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4ab4:	ldr	x17, [x16, #856]
    4ab8:	add	x16, x16, #0x358
    4abc:	br	x17

0000000000004ac0 <ZSTD_getErrorCode@plt>:
    4ac0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4ac4:	ldr	x17, [x16, #864]
    4ac8:	add	x16, x16, #0x360
    4acc:	br	x17

0000000000004ad0 <ZSTD_createDCtx_advanced@plt>:
    4ad0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4ad4:	ldr	x17, [x16, #872]
    4ad8:	add	x16, x16, #0x368
    4adc:	br	x17

0000000000004ae0 <fprintf@plt>:
    4ae0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4ae4:	ldr	x17, [x16, #880]
    4ae8:	add	x16, x16, #0x370
    4aec:	br	x17

0000000000004af0 <ZDICT_isError@plt>:
    4af0:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4af4:	ldr	x17, [x16, #888]
    4af8:	add	x16, x16, #0x378
    4afc:	br	x17

0000000000004b00 <ZSTD_nextInputType@plt>:
    4b00:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4b04:	ldr	x17, [x16, #896]
    4b08:	add	x16, x16, #0x380
    4b0c:	br	x17

0000000000004b10 <ZSTD_initDStream_usingDDict@plt>:
    4b10:	adrp	x16, 7d000 <ZSTD_createDStream_advanced@@Base+0x32e68>
    4b14:	ldr	x17, [x16, #904]
    4b18:	add	x16, x16, #0x388
    4b1c:	br	x17

Disassembly of section .text:

0000000000004b20 <ZSTD_versionNumber@@Base-0x2330>:
    4b20:	adrp	x0, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
    4b24:	ldr	x0, [x0, #4056]
    4b28:	cbz	x0, 4b30 <ZSTD_initDStream_usingDDict@plt+0x20>
    4b2c:	b	47a0 <__gmon_start__@plt>
    4b30:	ret
    4b34:	nop
    4b38:	adrp	x0, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    4b3c:	add	x0, x0, #0x3a0
    4b40:	adrp	x1, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    4b44:	add	x1, x1, #0x3a0
    4b48:	cmp	x1, x0
    4b4c:	b.eq	4b64 <ZSTD_initDStream_usingDDict@plt+0x54>  // b.none
    4b50:	adrp	x1, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
    4b54:	ldr	x1, [x1, #4032]
    4b58:	cbz	x1, 4b64 <ZSTD_initDStream_usingDDict@plt+0x54>
    4b5c:	mov	x16, x1
    4b60:	br	x16
    4b64:	ret
    4b68:	adrp	x0, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    4b6c:	add	x0, x0, #0x3a0
    4b70:	adrp	x1, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    4b74:	add	x1, x1, #0x3a0
    4b78:	sub	x1, x1, x0
    4b7c:	lsr	x2, x1, #63
    4b80:	add	x1, x2, x1, asr #3
    4b84:	cmp	xzr, x1, asr #1
    4b88:	asr	x1, x1, #1
    4b8c:	b.eq	4ba4 <ZSTD_initDStream_usingDDict@plt+0x94>  // b.none
    4b90:	adrp	x2, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
    4b94:	ldr	x2, [x2, #4064]
    4b98:	cbz	x2, 4ba4 <ZSTD_initDStream_usingDDict@plt+0x94>
    4b9c:	mov	x16, x2
    4ba0:	br	x16
    4ba4:	ret
    4ba8:	stp	x29, x30, [sp, #-32]!
    4bac:	mov	x29, sp
    4bb0:	str	x19, [sp, #16]
    4bb4:	adrp	x19, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    4bb8:	ldrb	w0, [x19, #928]
    4bbc:	cbnz	w0, 4be4 <ZSTD_initDStream_usingDDict@plt+0xd4>
    4bc0:	adrp	x0, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
    4bc4:	ldr	x0, [x0, #4040]
    4bc8:	cbz	x0, 4bd8 <ZSTD_initDStream_usingDDict@plt+0xc8>
    4bcc:	adrp	x0, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    4bd0:	ldr	x0, [x0, #912]
    4bd4:	bl	4510 <__cxa_finalize@plt>
    4bd8:	bl	4b38 <ZSTD_initDStream_usingDDict@plt+0x28>
    4bdc:	mov	w0, #0x1                   	// #1
    4be0:	strb	w0, [x19, #928]
    4be4:	ldr	x19, [sp, #16]
    4be8:	ldp	x29, x30, [sp], #32
    4bec:	ret
    4bf0:	b	4b68 <ZSTD_initDStream_usingDDict@plt+0x58>
    4bf4:	mov	w0, #0x384                 	// #900
    4bf8:	ret
    4bfc:	stp	x29, x30, [sp, #-16]!
    4c00:	mov	x29, sp
    4c04:	bl	4c10 <ZSTD_initDStream_usingDDict@plt+0x100>
    4c08:	ldp	x29, x30, [sp], #16
    4c0c:	ret
    4c10:	cmn	x0, #0x78
    4c14:	cset	w0, hi  // hi = pmore
    4c18:	ret
    4c1c:	stp	x29, x30, [sp, #-16]!
    4c20:	mov	x29, sp
    4c24:	bl	4c30 <ZSTD_initDStream_usingDDict@plt+0x120>
    4c28:	ldp	x29, x30, [sp], #16
    4c2c:	ret
    4c30:	stp	x29, x30, [sp, #-16]!
    4c34:	mov	x29, sp
    4c38:	bl	5234 <ZSTD_initDStream_usingDDict@plt+0x724>
    4c3c:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
    4c40:	ldp	x29, x30, [sp], #16
    4c44:	ret
    4c48:	stp	x29, x30, [sp, #-16]!
    4c4c:	mov	x29, sp
    4c50:	bl	4c10 <ZSTD_initDStream_usingDDict@plt+0x100>
    4c54:	ldp	x29, x30, [sp], #16
    4c58:	ret
    4c5c:	stp	x29, x30, [sp, #-16]!
    4c60:	mov	x29, sp
    4c64:	bl	4c30 <ZSTD_initDStream_usingDDict@plt+0x120>
    4c68:	ldp	x29, x30, [sp], #16
    4c6c:	ret
    4c70:	sub	sp, sp, #0x90
    4c74:	stp	x24, x23, [sp, #96]
    4c78:	stp	x22, x21, [sp, #112]
    4c7c:	stp	x20, x19, [sp, #128]
    4c80:	mov	x22, x4
    4c84:	mov	x21, x3
    4c88:	mov	x23, x2
    4c8c:	mov	x19, x1
    4c90:	cmp	x4, #0x3
    4c94:	mov	x20, x0
    4c98:	stp	x29, x30, [sp, #48]
    4c9c:	stp	x28, x27, [sp, #64]
    4ca0:	stp	x26, x25, [sp, #80]
    4ca4:	add	x29, sp, #0x30
    4ca8:	b.hi	4cf4 <ZSTD_initDStream_usingDDict@plt+0x1e4>  // b.pmore
    4cac:	sub	x0, x29, #0x4
    4cb0:	mov	x1, x21
    4cb4:	mov	x2, x22
    4cb8:	stur	wzr, [x29, #-4]
    4cbc:	bl	4420 <memcpy@plt>
    4cc0:	sub	x3, x29, #0x4
    4cc4:	mov	w4, #0x4                   	// #4
    4cc8:	mov	x0, x20
    4ccc:	mov	x1, x19
    4cd0:	mov	x2, x23
    4cd4:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
    4cd8:	mov	x19, x0
    4cdc:	bl	4bfc <ZSTD_initDStream_usingDDict@plt+0xec>
    4ce0:	cmp	w0, #0x0
    4ce4:	ccmp	x19, x22, #0x0, eq  // eq = none
    4ce8:	mov	x8, #0xffffffffffffffec    	// #-20
    4cec:	csel	x0, x8, x19, hi  // hi = pmore
    4cf0:	b	4fc0 <ZSTD_initDStream_usingDDict@plt+0x4b0>
    4cf4:	ldr	w8, [x19]
    4cf8:	mov	x0, x20
    4cfc:	mov	w1, wzr
    4d00:	add	w8, w8, #0x1
    4d04:	lsl	x2, x8, #1
    4d08:	bl	46a0 <memset@plt>
    4d0c:	mov	x0, x21
    4d10:	bl	4fe0 <ZSTD_initDStream_usingDDict@plt+0x4d0>
    4d14:	and	w8, w0, #0xf
    4d18:	cmp	w8, #0xa
    4d1c:	b.ls	4d28 <ZSTD_initDStream_usingDDict@plt+0x218>  // b.plast
    4d20:	mov	x0, #0xffffffffffffffd4    	// #-44
    4d24:	b	4fc0 <ZSTD_initDStream_usingDDict@plt+0x4b0>
    4d28:	mov	w10, #0x20                  	// #32
    4d2c:	add	w9, w8, #0x5
    4d30:	lsl	w24, w10, w8
    4d34:	str	w9, [x23]
    4d38:	cmp	w24, #0x2
    4d3c:	orr	w23, w24, #0x1
    4d40:	str	x19, [sp, #16]
    4d44:	str	x21, [sp]
    4d48:	b.cc	4f7c <ZSTD_initDStream_usingDDict@plt+0x46c>  // b.lo, b.ul, b.last
    4d4c:	add	x9, x21, x22
    4d50:	mov	x22, x21
    4d54:	ldr	w21, [x19]
    4d58:	add	w25, w8, #0x6
    4d5c:	sub	x8, x9, #0x7
    4d60:	str	x20, [sp, #24]
    4d64:	mov	w10, wzr
    4d68:	mov	w27, wzr
    4d6c:	lsr	w28, w0, #4
    4d70:	sub	x26, x9, #0x5
    4d74:	stur	x8, [x29, #-16]
    4d78:	sub	x8, x9, #0x4
    4d7c:	mov	w20, #0x4                   	// #4
    4d80:	str	x8, [sp, #8]
    4d84:	cbz	w10, 4e10 <ZSTD_initDStream_usingDDict@plt+0x300>
    4d88:	mvn	w8, w28
    4d8c:	tst	w8, #0xffff
    4d90:	mov	w19, w27
    4d94:	b.eq	4df0 <ZSTD_initDStream_usingDDict@plt+0x2e0>  // b.none
    4d98:	and	w8, w28, #0x3
    4d9c:	cmp	w8, #0x3
    4da0:	b.ne	4dbc <ZSTD_initDStream_usingDDict@plt+0x2ac>  // b.any
    4da4:	ubfx	w8, w28, #2, #2
    4da8:	add	w19, w19, #0x3
    4dac:	lsr	w28, w28, #2
    4db0:	cmp	w8, #0x3
    4db4:	add	w20, w20, #0x2
    4db8:	b.eq	4da4 <ZSTD_initDStream_usingDDict@plt+0x294>  // b.none
    4dbc:	add	w8, w19, w8
    4dc0:	cmp	w8, w21
    4dc4:	add	w20, w20, #0x2
    4dc8:	b.ls	4e18 <ZSTD_initDStream_usingDDict@plt+0x308>  // b.plast
    4dcc:	mov	w8, wzr
    4dd0:	mov	w19, w27
    4dd4:	cbnz	w8, 4e98 <ZSTD_initDStream_usingDDict@plt+0x388>
    4dd8:	b	4fbc <ZSTD_initDStream_usingDDict@plt+0x4ac>
    4ddc:	lsr	w28, w28, #16
    4de0:	add	w20, w20, #0x10
    4de4:	mvn	w8, w28
    4de8:	tst	w8, #0xffff
    4dec:	b.ne	4d98 <ZSTD_initDStream_usingDDict@plt+0x288>  // b.any
    4df0:	cmp	x22, x26
    4df4:	add	w19, w19, #0x18
    4df8:	b.cs	4ddc <ZSTD_initDStream_usingDDict@plt+0x2cc>  // b.hs, b.nlast
    4dfc:	add	x22, x22, #0x2
    4e00:	mov	x0, x22
    4e04:	bl	4fe0 <ZSTD_initDStream_usingDDict@plt+0x4d0>
    4e08:	lsr	w28, w0, w20
    4e0c:	b	4de4 <ZSTD_initDStream_usingDDict@plt+0x2d4>
    4e10:	mov	w19, w27
    4e14:	b	4e98 <ZSTD_initDStream_usingDDict@plt+0x388>
    4e18:	cmp	w27, w8
    4e1c:	b.cs	4e50 <ZSTD_initDStream_usingDDict@plt+0x340>  // b.hs, b.nlast
    4e20:	mov	w21, w8
    4e24:	ldr	x8, [sp, #24]
    4e28:	mov	w19, w27
    4e2c:	mov	w1, wzr
    4e30:	add	x0, x8, w27, uxtw #1
    4e34:	sub	x8, x21, x19
    4e38:	lsl	x2, x8, #1
    4e3c:	bl	46a0 <memset@plt>
    4e40:	add	x19, x19, #0x1
    4e44:	cmp	x21, x19
    4e48:	b.ne	4e40 <ZSTD_initDStream_usingDDict@plt+0x330>  // b.any
    4e4c:	mov	w27, w19
    4e50:	ldur	x8, [x29, #-16]
    4e54:	cmp	x22, x8
    4e58:	asr	w8, w20, #3
    4e5c:	b.ls	4e78 <ZSTD_initDStream_usingDDict@plt+0x368>  // b.plast
    4e60:	ldr	x10, [sp, #8]
    4e64:	add	x9, x22, w8, sxtw
    4e68:	cmp	x9, x10
    4e6c:	b.ls	4e78 <ZSTD_initDStream_usingDDict@plt+0x368>  // b.plast
    4e70:	lsr	w28, w28, #2
    4e74:	b	4e8c <ZSTD_initDStream_usingDDict@plt+0x37c>
    4e78:	add	x22, x22, w8, sxtw
    4e7c:	mov	x0, x22
    4e80:	and	w20, w20, #0x7
    4e84:	bl	4fe0 <ZSTD_initDStream_usingDDict@plt+0x4d0>
    4e88:	lsr	w28, w0, w20
    4e8c:	mov	w8, #0x1                   	// #1
    4e90:	mov	w19, w27
    4e94:	cbz	w8, 4fbc <ZSTD_initDStream_usingDDict@plt+0x4ac>
    4e98:	lsl	w8, w24, #1
    4e9c:	sub	w9, w24, #0x1
    4ea0:	sub	w10, w8, #0x1
    4ea4:	sub	w8, w10, w23
    4ea8:	and	w9, w28, w9
    4eac:	cmp	w9, w8
    4eb0:	b.cs	4ebc <ZSTD_initDStream_usingDDict@plt+0x3ac>  // b.hs, b.nlast
    4eb4:	sub	w8, w25, #0x1
    4eb8:	b	4ed0 <ZSTD_initDStream_usingDDict@plt+0x3c0>
    4ebc:	and	w9, w28, w10
    4ec0:	cmp	w9, w24
    4ec4:	csel	w8, wzr, w8, lt  // lt = tstop
    4ec8:	sub	w9, w9, w8
    4ecc:	mov	w8, w25
    4ed0:	mov	w10, #0x1                   	// #1
    4ed4:	ldr	x11, [sp, #24]
    4ed8:	sub	w10, w10, w9
    4edc:	subs	w9, w9, #0x1
    4ee0:	csel	w10, w10, w9, lt  // lt = tstop
    4ee4:	sub	w23, w23, w10
    4ee8:	add	w8, w8, w20
    4eec:	cset	w10, eq  // eq = none
    4ef0:	cmp	w23, w24
    4ef4:	strh	w9, [x11, w19, uxtw #1]
    4ef8:	stur	w10, [x29, #-8]
    4efc:	b.ge	4f10 <ZSTD_initDStream_usingDDict@plt+0x400>  // b.tcont
    4f00:	asr	w24, w24, #1
    4f04:	cmp	w23, w24
    4f08:	sub	w25, w25, #0x1
    4f0c:	b.lt	4f00 <ZSTD_initDStream_usingDDict@plt+0x3f0>  // b.tstop
    4f10:	ldur	x9, [x29, #-16]
    4f14:	cmp	x22, x9
    4f18:	asr	w9, w8, #3
    4f1c:	b.ls	4f44 <ZSTD_initDStream_usingDDict@plt+0x434>  // b.plast
    4f20:	ldr	x11, [sp, #8]
    4f24:	add	x10, x22, w9, sxtw
    4f28:	cmp	x10, x11
    4f2c:	b.ls	4f44 <ZSTD_initDStream_usingDDict@plt+0x434>  // b.plast
    4f30:	ldr	x10, [sp, #8]
    4f34:	sub	w9, w10, w22
    4f38:	sub	w20, w8, w9, lsl #3
    4f3c:	mov	x22, x10
    4f40:	b	4f4c <ZSTD_initDStream_usingDDict@plt+0x43c>
    4f44:	add	x22, x22, w9, sxtw
    4f48:	and	w20, w8, #0x7
    4f4c:	mov	x0, x22
    4f50:	bl	4fe0 <ZSTD_initDStream_usingDDict@plt+0x4d0>
    4f54:	cmp	w23, #0x2
    4f58:	b.lt	4f88 <ZSTD_initDStream_usingDDict@plt+0x478>  // b.tstop
    4f5c:	ldr	x8, [sp, #16]
    4f60:	ldur	w10, [x29, #-8]
    4f64:	add	w27, w19, #0x1
    4f68:	lsr	w28, w0, w20
    4f6c:	ldr	w21, [x8]
    4f70:	cmp	w27, w21
    4f74:	b.ls	4d84 <ZSTD_initDStream_usingDDict@plt+0x274>  // b.plast
    4f78:	b	4f88 <ZSTD_initDStream_usingDDict@plt+0x478>
    4f7c:	mov	w19, #0xffffffff            	// #-1
    4f80:	mov	w20, #0x4                   	// #4
    4f84:	mov	x22, x21
    4f88:	cmp	w23, #0x1
    4f8c:	mov	x0, #0xffffffffffffffec    	// #-20
    4f90:	b.ne	4fc0 <ZSTD_initDStream_usingDDict@plt+0x4b0>  // b.any
    4f94:	cmp	w20, #0x20
    4f98:	b.gt	4fc0 <ZSTD_initDStream_usingDDict@plt+0x4b0>
    4f9c:	ldr	x8, [sp, #16]
    4fa0:	ldr	x9, [sp]
    4fa4:	str	w19, [x8]
    4fa8:	add	w8, w20, #0x7
    4fac:	asr	w8, w8, #3
    4fb0:	add	x8, x22, w8, sxtw
    4fb4:	sub	x0, x8, x9
    4fb8:	b	4fc0 <ZSTD_initDStream_usingDDict@plt+0x4b0>
    4fbc:	mov	x0, #0xffffffffffffffd0    	// #-48
    4fc0:	ldp	x20, x19, [sp, #128]
    4fc4:	ldp	x22, x21, [sp, #112]
    4fc8:	ldp	x24, x23, [sp, #96]
    4fcc:	ldp	x26, x25, [sp, #80]
    4fd0:	ldp	x28, x27, [sp, #64]
    4fd4:	ldp	x29, x30, [sp, #48]
    4fd8:	add	sp, sp, #0x90
    4fdc:	ret
    4fe0:	stp	x29, x30, [sp, #-16]!
    4fe4:	mov	x29, sp
    4fe8:	bl	525c <ZSTD_initDStream_usingDDict@plt+0x74c>
    4fec:	ldp	x29, x30, [sp], #16
    4ff0:	ret
    4ff4:	sub	sp, sp, #0x170
    4ff8:	stp	x29, x30, [sp, #272]
    4ffc:	stp	x28, x27, [sp, #288]
    5000:	stp	x26, x25, [sp, #304]
    5004:	stp	x24, x23, [sp, #320]
    5008:	stp	x22, x21, [sp, #336]
    500c:	stp	x20, x19, [sp, #352]
    5010:	add	x29, sp, #0x110
    5014:	cbz	x6, 50dc <ZSTD_initDStream_usingDDict@plt+0x5cc>
    5018:	ldrsb	w8, [x5]
    501c:	mov	x24, x4
    5020:	mov	x19, x3
    5024:	mov	x20, x2
    5028:	mov	x23, x0
    502c:	and	x22, x8, #0xff
    5030:	tbnz	w8, #31, 5074 <ZSTD_initDStream_usingDDict@plt+0x564>
    5034:	cmp	x22, x6
    5038:	b.cs	50e4 <ZSTD_initDStream_usingDDict@plt+0x5d4>  // b.hs, b.nlast
    503c:	sub	x1, x1, #0x1
    5040:	add	x2, x5, #0x1
    5044:	add	x4, sp, #0xc
    5048:	mov	w5, #0x6                   	// #6
    504c:	mov	x0, x23
    5050:	mov	x3, x22
    5054:	bl	58d0 <ZSTD_initDStream_usingDDict@plt+0xdc0>
    5058:	mov	x21, x0
    505c:	bl	4bfc <ZSTD_initDStream_usingDDict@plt+0xec>
    5060:	cmp	w0, #0x0
    5064:	cset	w8, eq  // eq = none
    5068:	mov	x25, x21
    506c:	cbnz	w8, 50f0 <ZSTD_initDStream_usingDDict@plt+0x5e0>
    5070:	b	5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    5074:	sub	x8, x22, #0x7e
    5078:	lsr	x8, x8, #1
    507c:	cmp	x8, x6
    5080:	b.cs	50dc <ZSTD_initDStream_usingDDict@plt+0x5cc>  // b.hs, b.nlast
    5084:	sub	x21, x22, #0x7f
    5088:	cmp	x21, x1
    508c:	b.cs	51d0 <ZSTD_initDStream_usingDDict@plt+0x6c0>  // b.hs, b.nlast
    5090:	cbz	x21, 50d4 <ZSTD_initDStream_usingDDict@plt+0x5c4>
    5094:	mov	x11, xzr
    5098:	add	x9, x5, #0x1
    509c:	mov	w10, #0x2                   	// #2
    50a0:	sub	w12, w10, #0x2
    50a4:	lsr	x12, x12, #1
    50a8:	ldrb	w13, [x9, x12]
    50ac:	lsr	w13, w13, #4
    50b0:	strb	w13, [x23, x11]
    50b4:	ldrb	w12, [x9, x12]
    50b8:	mov	w11, w10
    50bc:	sub	w13, w10, #0x1
    50c0:	cmp	x21, x11
    50c4:	and	w12, w12, #0xf
    50c8:	add	w10, w10, #0x2
    50cc:	strb	w12, [x23, w13, uxtw]
    50d0:	b.hi	50a0 <ZSTD_initDStream_usingDDict@plt+0x590>  // b.pmore
    50d4:	mov	x22, x8
    50d8:	b	50f0 <ZSTD_initDStream_usingDDict@plt+0x5e0>
    50dc:	mov	x25, #0xffffffffffffffb8    	// #-72
    50e0:	b	5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    50e4:	mov	w8, wzr
    50e8:	mov	x25, #0xffffffffffffffb8    	// #-72
    50ec:	cbz	w8, 5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    50f0:	movi	v0.2d, #0x0
    50f4:	str	wzr, [x20, #48]
    50f8:	stp	q0, q0, [x20, #16]
    50fc:	str	q0, [x20]
    5100:	cbz	x21, 5154 <ZSTD_initDStream_usingDDict@plt+0x644>
    5104:	mov	x10, xzr
    5108:	mov	w26, wzr
    510c:	mov	w9, #0x1                   	// #1
    5110:	ldrb	w8, [x23, x10]
    5114:	cmp	x8, #0xb
    5118:	b.hi	5164 <ZSTD_initDStream_usingDDict@plt+0x654>  // b.pmore
    511c:	lsl	x8, x8, #2
    5120:	ldr	w11, [x20, x8]
    5124:	add	w11, w11, #0x1
    5128:	str	w11, [x20, x8]
    512c:	ldrb	w11, [x23, x10]
    5130:	mov	w8, #0x1                   	// #1
    5134:	mov	w10, w9
    5138:	cmp	x21, x10
    513c:	lsl	w11, w8, w11
    5140:	add	w26, w26, w11, asr #1
    5144:	add	w9, w9, #0x1
    5148:	b.hi	5110 <ZSTD_initDStream_usingDDict@plt+0x600>  // b.pmore
    514c:	cbnz	w8, 5170 <ZSTD_initDStream_usingDDict@plt+0x660>
    5150:	b	5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    5154:	mov	w26, wzr
    5158:	mov	w8, #0x1                   	// #1
    515c:	cbnz	w8, 5170 <ZSTD_initDStream_usingDDict@plt+0x660>
    5160:	b	5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    5164:	mov	w8, wzr
    5168:	mov	x25, #0xffffffffffffffec    	// #-20
    516c:	cbz	w8, 5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    5170:	cbz	w26, 51d0 <ZSTD_initDStream_usingDDict@plt+0x6c0>
    5174:	mov	w0, w26
    5178:	bl	5228 <ZSTD_initDStream_usingDDict@plt+0x718>
    517c:	add	w8, w0, #0x1
    5180:	cmp	w8, #0xc
    5184:	b.hi	51d8 <ZSTD_initDStream_usingDDict@plt+0x6c8>  // b.pmore
    5188:	mov	w27, #0x1                   	// #1
    518c:	str	w8, [x24]
    5190:	lsl	w8, w27, w8
    5194:	sub	w24, w8, w26
    5198:	mov	w0, w24
    519c:	bl	5228 <ZSTD_initDStream_usingDDict@plt+0x718>
    51a0:	lsl	w8, w27, w0
    51a4:	cmp	w8, w24
    51a8:	b.ne	51d8 <ZSTD_initDStream_usingDDict@plt+0x6c8>  // b.any
    51ac:	add	w8, w0, #0x1
    51b0:	strb	w8, [x23, x21]
    51b4:	mov	w8, w8
    51b8:	lsl	x8, x8, #2
    51bc:	ldr	w9, [x20, x8]
    51c0:	add	w9, w9, #0x1
    51c4:	str	w9, [x20, x8]
    51c8:	mov	w8, #0x1                   	// #1
    51cc:	b	51e0 <ZSTD_initDStream_usingDDict@plt+0x6d0>
    51d0:	mov	x25, #0xffffffffffffffec    	// #-20
    51d4:	b	5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    51d8:	mov	w8, wzr
    51dc:	mov	x25, #0xffffffffffffffec    	// #-20
    51e0:	cbz	w8, 5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    51e4:	ldr	w8, [x20, #4]
    51e8:	mov	x25, #0xffffffffffffffec    	// #-20
    51ec:	cmp	w8, #0x2
    51f0:	b.cc	5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>  // b.lo, b.ul, b.last
    51f4:	tbnz	w8, #0, 5204 <ZSTD_initDStream_usingDDict@plt+0x6f4>
    51f8:	add	w8, w21, #0x1
    51fc:	add	x25, x22, #0x1
    5200:	str	w8, [x19]
    5204:	mov	x0, x25
    5208:	ldp	x20, x19, [sp, #352]
    520c:	ldp	x22, x21, [sp, #336]
    5210:	ldp	x24, x23, [sp, #320]
    5214:	ldp	x26, x25, [sp, #304]
    5218:	ldp	x28, x27, [sp, #288]
    521c:	ldp	x29, x30, [sp, #272]
    5220:	add	sp, sp, #0x170
    5224:	ret
    5228:	clz	w8, w0
    522c:	eor	w0, w8, #0x1f
    5230:	ret
    5234:	stp	x29, x30, [sp, #-32]!
    5238:	str	x19, [sp, #16]
    523c:	mov	x29, sp
    5240:	mov	x19, x0
    5244:	bl	4c10 <ZSTD_initDStream_usingDDict@plt+0x100>
    5248:	cmp	w0, #0x0
    524c:	csneg	w0, wzr, w19, eq  // eq = none
    5250:	ldr	x19, [sp, #16]
    5254:	ldp	x29, x30, [sp], #32
    5258:	ret
    525c:	ldr	w0, [x0]
    5260:	ret
    5264:	cmp	w0, #0x66
    5268:	b.hi	529c <ZSTD_initDStream_usingDDict@plt+0x78c>  // b.pmore
    526c:	adrp	x9, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5270:	mov	w8, w0
    5274:	add	x9, x9, #0x248
    5278:	adr	x10, 5290 <ZSTD_initDStream_usingDDict@plt+0x780>
    527c:	ldrb	w11, [x9, x8]
    5280:	add	x10, x10, x11, lsl #2
    5284:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5288:	add	x0, x0, #0x2c6
    528c:	br	x10
    5290:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5294:	add	x0, x0, #0x2d8
    5298:	ret
    529c:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52a0:	add	x0, x0, #0x2af
    52a4:	ret
    52a8:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52ac:	add	x0, x0, #0x2e8
    52b0:	ret
    52b4:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52b8:	add	x0, x0, #0x301
    52bc:	ret
    52c0:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52c4:	add	x0, x0, #0x317
    52c8:	ret
    52cc:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52d0:	add	x0, x0, #0x333
    52d4:	ret
    52d8:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52dc:	add	x0, x0, #0x35f
    52e0:	ret
    52e4:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52e8:	add	x0, x0, #0x378
    52ec:	ret
    52f0:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    52f4:	add	x0, x0, #0x4e8
    52f8:	ret
    52fc:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5300:	add	x0, x0, #0x500
    5304:	ret
    5308:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    530c:	add	x0, x0, #0x514
    5310:	ret
    5314:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5318:	add	x0, x0, #0x39d
    531c:	ret
    5320:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5324:	add	x0, x0, #0x3b3
    5328:	ret
    532c:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5330:	add	x0, x0, #0x469
    5334:	ret
    5338:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    533c:	add	x0, x0, #0x499
    5340:	ret
    5344:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5348:	add	x0, x0, #0x4c2
    534c:	ret
    5350:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5354:	add	x0, x0, #0x434
    5358:	ret
    535c:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5360:	add	x0, x0, #0x3cd
    5364:	ret
    5368:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    536c:	add	x0, x0, #0x3ea
    5370:	ret
    5374:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5378:	add	x0, x0, #0x40f
    537c:	ret
    5380:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5384:	add	x0, x0, #0x543
    5388:	ret
    538c:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5390:	add	x0, x0, #0x563
    5394:	ret
    5398:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    539c:	add	x0, x0, #0x579
    53a0:	ret
    53a4:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    53a8:	add	x0, x0, #0x59e
    53ac:	ret
    53b0:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    53b4:	add	x0, x0, #0x5b7
    53b8:	ret
    53bc:	stp	x29, x30, [sp, #-16]!
    53c0:	cmp	w0, #0xf
    53c4:	mov	w8, #0xf                   	// #15
    53c8:	csel	w8, w0, w8, cc  // cc = lo, ul, last
    53cc:	mov	w9, #0x4                   	// #4
    53d0:	lsl	w8, w9, w8
    53d4:	add	w0, w8, #0x4
    53d8:	mov	x29, sp
    53dc:	bl	4640 <malloc@plt>
    53e0:	ldp	x29, x30, [sp], #16
    53e4:	ret
    53e8:	stp	x29, x30, [sp, #-16]!
    53ec:	mov	x29, sp
    53f0:	bl	4880 <free@plt>
    53f4:	ldp	x29, x30, [sp], #16
    53f8:	ret
    53fc:	stp	x29, x30, [sp, #-80]!
    5400:	stp	x28, x25, [sp, #16]
    5404:	stp	x24, x23, [sp, #32]
    5408:	stp	x22, x21, [sp, #48]
    540c:	stp	x20, x19, [sp, #64]
    5410:	mov	x29, sp
    5414:	sub	sp, sp, #0x200
    5418:	cmp	w2, #0xff
    541c:	b.ls	5428 <ZSTD_initDStream_usingDDict@plt+0x918>  // b.plast
    5420:	mov	x0, #0xffffffffffffffd2    	// #-46
    5424:	b	5594 <ZSTD_initDStream_usingDDict@plt+0xa84>
    5428:	mov	w19, w3
    542c:	cmp	w3, #0xc
    5430:	b.ls	543c <ZSTD_initDStream_usingDDict@plt+0x92c>  // b.plast
    5434:	mov	x0, #0xffffffffffffffd4    	// #-44
    5438:	b	5594 <ZSTD_initDStream_usingDDict@plt+0xa84>
    543c:	mov	w9, #0x1                   	// #1
    5440:	lsl	w21, w9, w19
    5444:	add	x8, x0, #0x4
    5448:	add	w11, w2, #0x1
    544c:	sub	w9, w21, #0x1
    5450:	cbz	w11, 54b8 <ZSTD_initDStream_usingDDict@plt+0x9a8>
    5454:	sub	w10, w19, #0x1
    5458:	mov	w15, #0x10000               	// #65536
    545c:	lsl	w10, w15, w10
    5460:	mov	x13, xzr
    5464:	mov	w14, w11
    5468:	mov	w12, #0x1                   	// #1
    546c:	asr	w15, w10, #16
    5470:	mov	x16, sp
    5474:	mov	w10, w9
    5478:	b	5498 <ZSTD_initDStream_usingDDict@plt+0x988>
    547c:	cmp	w15, w18
    5480:	and	w17, w18, #0xffff
    5484:	csel	w12, w12, wzr, gt
    5488:	strh	w17, [x16, x13, lsl #1]
    548c:	add	x13, x13, #0x1
    5490:	cmp	x14, x13
    5494:	b.eq	54c0 <ZSTD_initDStream_usingDDict@plt+0x9b0>  // b.none
    5498:	ldrsh	w18, [x1, x13, lsl #1]
    549c:	cmn	w18, #0x1
    54a0:	b.ne	547c <ZSTD_initDStream_usingDDict@plt+0x96c>  // b.any
    54a4:	add	x17, x8, w10, uxtw #2
    54a8:	sub	w10, w10, #0x1
    54ac:	strb	w13, [x17, #2]
    54b0:	mov	w17, #0x1                   	// #1
    54b4:	b	5488 <ZSTD_initDStream_usingDDict@plt+0x978>
    54b8:	mov	w12, #0x1                   	// #1
    54bc:	mov	w10, w9
    54c0:	strh	w19, [x0]
    54c4:	strh	w12, [x0, #2]
    54c8:	cbz	w11, 5530 <ZSTD_initDStream_usingDDict@plt+0xa20>
    54cc:	lsr	w14, w21, #3
    54d0:	add	w14, w14, w21, lsr #1
    54d4:	mov	x13, xzr
    54d8:	mov	w12, wzr
    54dc:	add	w14, w14, #0x3
    54e0:	mov	w11, w11
    54e4:	b	54f4 <ZSTD_initDStream_usingDDict@plt+0x9e4>
    54e8:	add	x13, x13, #0x1
    54ec:	cmp	x13, x11
    54f0:	b.eq	5534 <ZSTD_initDStream_usingDDict@plt+0xa24>  // b.none
    54f4:	ldrsh	w15, [x1, x13, lsl #1]
    54f8:	cmp	w15, #0x1
    54fc:	b.lt	54e8 <ZSTD_initDStream_usingDDict@plt+0x9d8>  // b.tstop
    5500:	ldrsh	w15, [x1, x13, lsl #1]
    5504:	mov	w16, wzr
    5508:	add	x17, x8, w12, uxtw #2
    550c:	strb	w13, [x17, #2]
    5510:	add	w12, w14, w12
    5514:	and	w12, w12, w9
    5518:	cmp	w12, w10
    551c:	b.hi	5510 <ZSTD_initDStream_usingDDict@plt+0xa00>  // b.pmore
    5520:	add	w16, w16, #0x1
    5524:	cmp	w16, w15
    5528:	b.lt	5508 <ZSTD_initDStream_usingDDict@plt+0x9f8>  // b.tstop
    552c:	b	54e8 <ZSTD_initDStream_usingDDict@plt+0x9d8>
    5530:	mov	w12, wzr
    5534:	cbz	w12, 5540 <ZSTD_initDStream_usingDDict@plt+0xa30>
    5538:	mov	x0, #0xffffffffffffffff    	// #-1
    553c:	b	5594 <ZSTD_initDStream_usingDDict@plt+0xa84>
    5540:	mov	x22, xzr
    5544:	mov	w23, w21
    5548:	add	x24, x0, #0x7
    554c:	mov	x25, sp
    5550:	ldurb	w8, [x24, #-1]
    5554:	lsl	x8, x8, #1
    5558:	ldrh	w20, [x25, x8]
    555c:	add	w9, w20, #0x1
    5560:	mov	w0, w20
    5564:	strh	w9, [x25, x8]
    5568:	bl	55b0 <ZSTD_initDStream_usingDDict@plt+0xaa0>
    556c:	sub	w8, w19, w0
    5570:	strb	w8, [x24]
    5574:	lsl	w8, w20, w8
    5578:	add	x22, x22, #0x1
    557c:	sub	w8, w8, w21
    5580:	cmp	x22, x23
    5584:	sturh	w8, [x24, #-3]
    5588:	add	x24, x24, #0x4
    558c:	b.cc	5550 <ZSTD_initDStream_usingDDict@plt+0xa40>  // b.lo, b.ul, b.last
    5590:	mov	x0, xzr
    5594:	add	sp, sp, #0x200
    5598:	ldp	x20, x19, [sp, #64]
    559c:	ldp	x22, x21, [sp, #48]
    55a0:	ldp	x24, x23, [sp, #32]
    55a4:	ldp	x28, x25, [sp, #16]
    55a8:	ldp	x29, x30, [sp], #80
    55ac:	ret
    55b0:	clz	w8, w0
    55b4:	eor	w0, w8, #0x1f
    55b8:	ret
    55bc:	str	wzr, [x0]
    55c0:	strh	wzr, [x0, #4]
    55c4:	strb	w1, [x0, #6]
    55c8:	strb	wzr, [x0, #7]
    55cc:	mov	x0, xzr
    55d0:	ret
    55d4:	cbz	w1, 5610 <ZSTD_initDStream_usingDDict@plt+0xb00>
    55d8:	add	x8, x0, #0x4
    55dc:	mov	w9, #0x1                   	// #1
    55e0:	strh	w1, [x0]
    55e4:	strh	w9, [x0, #2]
    55e8:	sub	w10, w9, #0x1
    55ec:	lsr	w11, w9, w1
    55f0:	add	x12, x8, w10, uxtw #2
    55f4:	add	w9, w9, #0x1
    55f8:	strh	wzr, [x12]
    55fc:	strb	w10, [x12, #2]
    5600:	strb	w1, [x12, #3]
    5604:	cbz	w11, 55e8 <ZSTD_initDStream_usingDDict@plt+0xad8>
    5608:	mov	x0, xzr
    560c:	ret
    5610:	mov	x0, #0xffffffffffffffff    	// #-1
    5614:	ret
    5618:	sub	sp, sp, #0x90
    561c:	stp	x29, x30, [sp, #80]
    5620:	stp	x22, x21, [sp, #112]
    5624:	stp	x20, x19, [sp, #128]
    5628:	ldrh	w8, [x4, #2]
    562c:	add	x22, x0, x1
    5630:	str	x23, [sp, #96]
    5634:	mov	x20, x4
    5638:	mov	x19, x0
    563c:	sub	x23, x22, #0x3
    5640:	add	x0, sp, #0x28
    5644:	mov	x1, x2
    5648:	mov	x2, x3
    564c:	add	x29, sp, #0x50
    5650:	cbz	w8, 5764 <ZSTD_initDStream_usingDDict@plt+0xc54>
    5654:	bl	59e8 <ZSTD_initDStream_usingDDict@plt+0xed8>
    5658:	mov	x21, x0
    565c:	bl	59a8 <ZSTD_initDStream_usingDDict@plt+0xe98>
    5660:	cbnz	w0, 58b4 <ZSTD_initDStream_usingDDict@plt+0xda4>
    5664:	add	x0, sp, #0x18
    5668:	add	x1, sp, #0x28
    566c:	mov	x2, x20
    5670:	bl	5b4c <ZSTD_initDStream_usingDDict@plt+0x103c>
    5674:	add	x0, sp, #0x8
    5678:	add	x1, sp, #0x28
    567c:	mov	x2, x20
    5680:	bl	5b4c <ZSTD_initDStream_usingDDict@plt+0x103c>
    5684:	add	x0, sp, #0x28
    5688:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    568c:	cmp	x23, x19
    5690:	mov	x20, x19
    5694:	b.ls	56fc <ZSTD_initDStream_usingDDict@plt+0xbec>  // b.plast
    5698:	mov	x20, x19
    569c:	cbnz	w0, 56fc <ZSTD_initDStream_usingDDict@plt+0xbec>
    56a0:	mov	x20, x19
    56a4:	add	x0, sp, #0x18
    56a8:	add	x1, sp, #0x28
    56ac:	bl	5c40 <ZSTD_initDStream_usingDDict@plt+0x1130>
    56b0:	strb	w0, [x20]
    56b4:	add	x0, sp, #0x8
    56b8:	add	x1, sp, #0x28
    56bc:	bl	5c40 <ZSTD_initDStream_usingDDict@plt+0x1130>
    56c0:	strb	w0, [x20, #1]
    56c4:	add	x0, sp, #0x18
    56c8:	add	x1, sp, #0x28
    56cc:	bl	5c40 <ZSTD_initDStream_usingDDict@plt+0x1130>
    56d0:	strb	w0, [x20, #2]
    56d4:	add	x0, sp, #0x8
    56d8:	add	x1, sp, #0x28
    56dc:	bl	5c40 <ZSTD_initDStream_usingDDict@plt+0x1130>
    56e0:	strb	w0, [x20, #3]
    56e4:	add	x0, sp, #0x28
    56e8:	add	x20, x20, #0x4
    56ec:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    56f0:	cmp	x20, x23
    56f4:	b.cs	56fc <ZSTD_initDStream_usingDDict@plt+0xbec>  // b.hs, b.nlast
    56f8:	cbz	w0, 56a4 <ZSTD_initDStream_usingDDict@plt+0xb94>
    56fc:	sub	x23, x22, #0x2
    5700:	mov	w22, #0x3                   	// #3
    5704:	cmp	x20, x23
    5708:	b.hi	5874 <ZSTD_initDStream_usingDDict@plt+0xd64>  // b.pmore
    570c:	add	x0, sp, #0x18
    5710:	add	x1, sp, #0x28
    5714:	mov	x21, x20
    5718:	bl	5c40 <ZSTD_initDStream_usingDDict@plt+0x1130>
    571c:	strb	w0, [x20], #1
    5720:	add	x0, sp, #0x28
    5724:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    5728:	cmp	w0, #0x3
    572c:	b.eq	587c <ZSTD_initDStream_usingDDict@plt+0xd6c>  // b.none
    5730:	cmp	x20, x23
    5734:	b.hi	5874 <ZSTD_initDStream_usingDDict@plt+0xd64>  // b.pmore
    5738:	add	x0, sp, #0x8
    573c:	add	x1, sp, #0x28
    5740:	bl	5c40 <ZSTD_initDStream_usingDDict@plt+0x1130>
    5744:	strb	w0, [x21, #1]
    5748:	add	x0, sp, #0x28
    574c:	add	x20, x21, #0x2
    5750:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    5754:	cmp	w0, #0x3
    5758:	b.ne	5704 <ZSTD_initDStream_usingDDict@plt+0xbf4>  // b.any
    575c:	add	x0, sp, #0x18
    5760:	b	5888 <ZSTD_initDStream_usingDDict@plt+0xd78>
    5764:	bl	59e8 <ZSTD_initDStream_usingDDict@plt+0xed8>
    5768:	mov	x21, x0
    576c:	bl	59a8 <ZSTD_initDStream_usingDDict@plt+0xe98>
    5770:	cbnz	w0, 58b4 <ZSTD_initDStream_usingDDict@plt+0xda4>
    5774:	add	x0, sp, #0x18
    5778:	add	x1, sp, #0x28
    577c:	mov	x2, x20
    5780:	bl	5b4c <ZSTD_initDStream_usingDDict@plt+0x103c>
    5784:	add	x0, sp, #0x8
    5788:	add	x1, sp, #0x28
    578c:	mov	x2, x20
    5790:	bl	5b4c <ZSTD_initDStream_usingDDict@plt+0x103c>
    5794:	add	x0, sp, #0x28
    5798:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    579c:	cmp	x23, x19
    57a0:	mov	x20, x19
    57a4:	b.ls	580c <ZSTD_initDStream_usingDDict@plt+0xcfc>  // b.plast
    57a8:	mov	x20, x19
    57ac:	cbnz	w0, 580c <ZSTD_initDStream_usingDDict@plt+0xcfc>
    57b0:	mov	x20, x19
    57b4:	add	x0, sp, #0x18
    57b8:	add	x1, sp, #0x28
    57bc:	bl	5c90 <ZSTD_initDStream_usingDDict@plt+0x1180>
    57c0:	strb	w0, [x20]
    57c4:	add	x0, sp, #0x8
    57c8:	add	x1, sp, #0x28
    57cc:	bl	5c90 <ZSTD_initDStream_usingDDict@plt+0x1180>
    57d0:	strb	w0, [x20, #1]
    57d4:	add	x0, sp, #0x18
    57d8:	add	x1, sp, #0x28
    57dc:	bl	5c90 <ZSTD_initDStream_usingDDict@plt+0x1180>
    57e0:	strb	w0, [x20, #2]
    57e4:	add	x0, sp, #0x8
    57e8:	add	x1, sp, #0x28
    57ec:	bl	5c90 <ZSTD_initDStream_usingDDict@plt+0x1180>
    57f0:	strb	w0, [x20, #3]
    57f4:	add	x0, sp, #0x28
    57f8:	add	x20, x20, #0x4
    57fc:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    5800:	cmp	x20, x23
    5804:	b.cs	580c <ZSTD_initDStream_usingDDict@plt+0xcfc>  // b.hs, b.nlast
    5808:	cbz	w0, 57b4 <ZSTD_initDStream_usingDDict@plt+0xca4>
    580c:	sub	x23, x22, #0x2
    5810:	mov	w22, #0x3                   	// #3
    5814:	cmp	x20, x23
    5818:	b.hi	5874 <ZSTD_initDStream_usingDDict@plt+0xd64>  // b.pmore
    581c:	add	x0, sp, #0x18
    5820:	add	x1, sp, #0x28
    5824:	mov	x21, x20
    5828:	bl	5c90 <ZSTD_initDStream_usingDDict@plt+0x1180>
    582c:	strb	w0, [x20], #1
    5830:	add	x0, sp, #0x28
    5834:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    5838:	cmp	w0, #0x3
    583c:	b.eq	5894 <ZSTD_initDStream_usingDDict@plt+0xd84>  // b.none
    5840:	cmp	x20, x23
    5844:	b.hi	5874 <ZSTD_initDStream_usingDDict@plt+0xd64>  // b.pmore
    5848:	add	x0, sp, #0x8
    584c:	add	x1, sp, #0x28
    5850:	bl	5c90 <ZSTD_initDStream_usingDDict@plt+0x1180>
    5854:	strb	w0, [x21, #1]
    5858:	add	x0, sp, #0x28
    585c:	add	x20, x21, #0x2
    5860:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    5864:	cmp	w0, #0x3
    5868:	b.ne	5814 <ZSTD_initDStream_usingDDict@plt+0xd04>  // b.any
    586c:	add	x0, sp, #0x18
    5870:	b	58a0 <ZSTD_initDStream_usingDDict@plt+0xd90>
    5874:	mov	x21, #0xffffffffffffffba    	// #-70
    5878:	b	58b4 <ZSTD_initDStream_usingDDict@plt+0xda4>
    587c:	add	x20, x21, #0x1
    5880:	add	x0, sp, #0x8
    5884:	mov	w22, #0x2                   	// #2
    5888:	add	x1, sp, #0x28
    588c:	bl	5c40 <ZSTD_initDStream_usingDDict@plt+0x1130>
    5890:	b	58a8 <ZSTD_initDStream_usingDDict@plt+0xd98>
    5894:	add	x20, x21, #0x1
    5898:	add	x0, sp, #0x8
    589c:	mov	w22, #0x2                   	// #2
    58a0:	add	x1, sp, #0x28
    58a4:	bl	5c90 <ZSTD_initDStream_usingDDict@plt+0x1180>
    58a8:	add	x8, x21, x22
    58ac:	sub	x21, x8, x19
    58b0:	strb	w0, [x20]
    58b4:	mov	x0, x21
    58b8:	ldp	x20, x19, [sp, #128]
    58bc:	ldp	x22, x21, [sp, #112]
    58c0:	ldr	x23, [sp, #96]
    58c4:	ldp	x29, x30, [sp, #80]
    58c8:	add	sp, sp, #0x90
    58cc:	ret
    58d0:	stp	x29, x30, [sp, #-96]!
    58d4:	str	x28, [sp, #16]
    58d8:	stp	x26, x25, [sp, #32]
    58dc:	stp	x24, x23, [sp, #48]
    58e0:	stp	x22, x21, [sp, #64]
    58e4:	stp	x20, x19, [sp, #80]
    58e8:	mov	x29, sp
    58ec:	sub	sp, sp, #0x200
    58f0:	mov	x23, x3
    58f4:	mov	x22, x2
    58f8:	mov	x19, x4
    58fc:	mov	x20, x1
    5900:	mov	x21, x0
    5904:	mov	w8, #0xff                  	// #255
    5908:	mov	x0, sp
    590c:	add	x1, x29, #0x18
    5910:	add	x2, x29, #0x1c
    5914:	mov	x3, x22
    5918:	mov	x4, x23
    591c:	mov	w25, w5
    5920:	str	w8, [x29, #24]
    5924:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
    5928:	mov	x24, x0
    592c:	bl	59a8 <ZSTD_initDStream_usingDDict@plt+0xe98>
    5930:	mov	x26, x24
    5934:	cbnz	w0, 5984 <ZSTD_initDStream_usingDDict@plt+0xe74>
    5938:	ldr	w3, [x29, #28]
    593c:	cmp	w3, w25
    5940:	b.ls	594c <ZSTD_initDStream_usingDDict@plt+0xe3c>  // b.plast
    5944:	mov	x26, #0xffffffffffffffd4    	// #-44
    5948:	b	5984 <ZSTD_initDStream_usingDDict@plt+0xe74>
    594c:	ldr	w2, [x29, #24]
    5950:	mov	x1, sp
    5954:	mov	x0, x19
    5958:	bl	53fc <ZSTD_initDStream_usingDDict@plt+0x8ec>
    595c:	mov	x26, x0
    5960:	bl	59a8 <ZSTD_initDStream_usingDDict@plt+0xe98>
    5964:	cbnz	w0, 5984 <ZSTD_initDStream_usingDDict@plt+0xe74>
    5968:	sub	x3, x23, x24
    596c:	add	x2, x22, x24
    5970:	mov	x0, x21
    5974:	mov	x1, x20
    5978:	mov	x4, x19
    597c:	bl	5618 <ZSTD_initDStream_usingDDict@plt+0xb08>
    5980:	mov	x26, x0
    5984:	mov	x0, x26
    5988:	add	sp, sp, #0x200
    598c:	ldp	x20, x19, [sp, #80]
    5990:	ldp	x22, x21, [sp, #64]
    5994:	ldp	x24, x23, [sp, #48]
    5998:	ldp	x26, x25, [sp, #32]
    599c:	ldr	x28, [sp, #16]
    59a0:	ldp	x29, x30, [sp], #96
    59a4:	ret
    59a8:	cmn	x0, #0x78
    59ac:	cset	w0, hi  // hi = pmore
    59b0:	ret
    59b4:	stp	x29, x30, [sp, #-32]!
    59b8:	str	x28, [sp, #16]
    59bc:	mov	x29, sp
    59c0:	sub	sp, sp, #0x4, lsl #12
    59c4:	sub	sp, sp, #0x10
    59c8:	add	x4, sp, #0xc
    59cc:	mov	w5, #0xc                   	// #12
    59d0:	bl	58d0 <ZSTD_initDStream_usingDDict@plt+0xdc0>
    59d4:	add	sp, sp, #0x4, lsl #12
    59d8:	add	sp, sp, #0x10
    59dc:	ldr	x28, [sp, #16]
    59e0:	ldp	x29, x30, [sp], #32
    59e4:	ret
    59e8:	stp	x29, x30, [sp, #-48]!
    59ec:	stp	x20, x19, [sp, #32]
    59f0:	mov	x20, x0
    59f4:	str	x21, [sp, #16]
    59f8:	mov	x29, sp
    59fc:	cbz	x2, 5a44 <ZSTD_initDStream_usingDDict@plt+0xf34>
    5a00:	mov	x19, x2
    5a04:	add	x8, x1, #0x8
    5a08:	cmp	x2, #0x8
    5a0c:	stp	x1, x8, [x20, #24]
    5a10:	b.cc	5a58 <ZSTD_initDStream_usingDDict@plt+0xf48>  // b.lo, b.ul, b.last
    5a14:	add	x21, x1, x19
    5a18:	sub	x0, x21, #0x8
    5a1c:	str	x0, [x20, #16]
    5a20:	bl	5ce0 <ZSTD_initDStream_usingDDict@plt+0x11d0>
    5a24:	str	x0, [x20]
    5a28:	ldurb	w0, [x21, #-1]
    5a2c:	cbz	w0, 5b1c <ZSTD_initDStream_usingDDict@plt+0x100c>
    5a30:	bl	55b0 <ZSTD_initDStream_usingDDict@plt+0xaa0>
    5a34:	mov	w8, #0x8                   	// #8
    5a38:	sub	w8, w8, w0
    5a3c:	str	w8, [x20, #8]
    5a40:	b	5b38 <ZSTD_initDStream_usingDDict@plt+0x1028>
    5a44:	movi	v0.2d, #0x0
    5a48:	str	xzr, [x20, #32]
    5a4c:	stp	q0, q0, [x20]
    5a50:	mov	x19, #0xffffffffffffffb8    	// #-72
    5a54:	b	5b38 <ZSTD_initDStream_usingDDict@plt+0x1028>
    5a58:	ldr	x8, [x20, #24]
    5a5c:	sub	x9, x19, #0x2
    5a60:	cmp	x9, #0x5
    5a64:	str	x8, [x20, #16]
    5a68:	ldrb	w8, [x8]
    5a6c:	str	x8, [x20]
    5a70:	b.hi	5ae8 <ZSTD_initDStream_usingDDict@plt+0xfd8>  // b.pmore
    5a74:	adrp	x10, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5a78:	add	x10, x10, #0x5e4
    5a7c:	adr	x11, 5a8c <ZSTD_initDStream_usingDDict@plt+0xf7c>
    5a80:	ldrb	w12, [x10, x9]
    5a84:	add	x11, x11, x12, lsl #2
    5a88:	br	x11
    5a8c:	ldrb	w9, [x1, #6]
    5a90:	bfi	x8, x9, #48, #8
    5a94:	str	x8, [x20]
    5a98:	ldrb	w8, [x1, #5]
    5a9c:	ldr	x9, [x20]
    5aa0:	add	x8, x9, x8, lsl #40
    5aa4:	str	x8, [x20]
    5aa8:	ldrb	w8, [x1, #4]
    5aac:	ldr	x9, [x20]
    5ab0:	add	x8, x9, x8, lsl #32
    5ab4:	str	x8, [x20]
    5ab8:	ldrb	w8, [x1, #3]
    5abc:	ldr	x9, [x20]
    5ac0:	add	x8, x9, x8, lsl #24
    5ac4:	str	x8, [x20]
    5ac8:	ldrb	w8, [x1, #2]
    5acc:	ldr	x9, [x20]
    5ad0:	add	x8, x9, x8, lsl #16
    5ad4:	str	x8, [x20]
    5ad8:	ldrb	w8, [x1, #1]
    5adc:	ldr	x9, [x20]
    5ae0:	add	x8, x9, x8, lsl #8
    5ae4:	str	x8, [x20]
    5ae8:	add	x8, x19, x1
    5aec:	ldurb	w21, [x8, #-1]
    5af0:	cbz	w21, 5b28 <ZSTD_initDStream_usingDDict@plt+0x1018>
    5af4:	mov	w0, w21
    5af8:	bl	55b0 <ZSTD_initDStream_usingDDict@plt+0xaa0>
    5afc:	mov	w8, #0x8                   	// #8
    5b00:	sub	w8, w8, w0
    5b04:	str	w8, [x20, #8]
    5b08:	cbz	w21, 5b34 <ZSTD_initDStream_usingDDict@plt+0x1024>
    5b0c:	sub	w8, w8, w19, lsl #3
    5b10:	add	w8, w8, #0x40
    5b14:	str	w8, [x20, #8]
    5b18:	b	5b38 <ZSTD_initDStream_usingDDict@plt+0x1028>
    5b1c:	mov	x19, #0xffffffffffffffff    	// #-1
    5b20:	str	wzr, [x20, #8]
    5b24:	b	5b38 <ZSTD_initDStream_usingDDict@plt+0x1028>
    5b28:	mov	w8, wzr
    5b2c:	str	w8, [x20, #8]
    5b30:	cbnz	w21, 5b0c <ZSTD_initDStream_usingDDict@plt+0xffc>
    5b34:	mov	x19, #0xffffffffffffffec    	// #-20
    5b38:	mov	x0, x19
    5b3c:	ldp	x20, x19, [sp, #32]
    5b40:	ldr	x21, [sp, #16]
    5b44:	ldp	x29, x30, [sp], #48
    5b48:	ret
    5b4c:	stp	x29, x30, [sp, #-48]!
    5b50:	str	x21, [sp, #16]
    5b54:	stp	x20, x19, [sp, #32]
    5b58:	mov	x19, x2
    5b5c:	mov	x20, x1
    5b60:	ldrh	w1, [x19], #4
    5b64:	mov	x21, x0
    5b68:	mov	x0, x20
    5b6c:	mov	x29, sp
    5b70:	bl	5d10 <ZSTD_initDStream_usingDDict@plt+0x1200>
    5b74:	str	x0, [x21]
    5b78:	mov	x0, x20
    5b7c:	bl	5b94 <ZSTD_initDStream_usingDDict@plt+0x1084>
    5b80:	str	x19, [x21, #8]
    5b84:	ldp	x20, x19, [sp, #32]
    5b88:	ldr	x21, [sp, #16]
    5b8c:	ldp	x29, x30, [sp], #48
    5b90:	ret
    5b94:	stp	x29, x30, [sp, #-32]!
    5b98:	stp	x20, x19, [sp, #16]
    5b9c:	ldr	w8, [x0, #8]
    5ba0:	mov	x29, sp
    5ba4:	cmp	w8, #0x40
    5ba8:	b.ls	5bb4 <ZSTD_initDStream_usingDDict@plt+0x10a4>  // b.plast
    5bac:	mov	w20, #0x3                   	// #3
    5bb0:	b	5c30 <ZSTD_initDStream_usingDDict@plt+0x1120>
    5bb4:	ldr	x9, [x0, #16]
    5bb8:	ldr	x10, [x0, #32]
    5bbc:	mov	x19, x0
    5bc0:	cmp	x9, x10
    5bc4:	b.cs	5c04 <ZSTD_initDStream_usingDDict@plt+0x10f4>  // b.hs, b.nlast
    5bc8:	ldr	x10, [x19, #24]
    5bcc:	cmp	x9, x10
    5bd0:	b.eq	5c24 <ZSTD_initDStream_usingDDict@plt+0x1114>  // b.none
    5bd4:	lsr	x11, x8, #3
    5bd8:	sub	x13, x9, x11
    5bdc:	sub	w12, w9, w10
    5be0:	cmp	x13, x10
    5be4:	csel	w10, w12, w11, cc  // cc = lo, ul, last
    5be8:	sub	x0, x9, x10
    5bec:	sub	w8, w8, w10, lsl #3
    5bf0:	cset	w20, cc  // cc = lo, ul, last
    5bf4:	str	x0, [x19, #16]
    5bf8:	str	w8, [x19, #8]
    5bfc:	bl	5ce0 <ZSTD_initDStream_usingDDict@plt+0x11d0>
    5c00:	b	5c1c <ZSTD_initDStream_usingDDict@plt+0x110c>
    5c04:	sub	x0, x9, x8, lsr #3
    5c08:	and	w8, w8, #0x7
    5c0c:	str	x0, [x19, #16]
    5c10:	str	w8, [x19, #8]
    5c14:	bl	5ce0 <ZSTD_initDStream_usingDDict@plt+0x11d0>
    5c18:	mov	w20, wzr
    5c1c:	str	x0, [x19]
    5c20:	b	5c30 <ZSTD_initDStream_usingDDict@plt+0x1120>
    5c24:	cmp	w8, #0x40
    5c28:	mov	w8, #0x1                   	// #1
    5c2c:	cinc	w20, w8, cs  // cs = hs, nlast
    5c30:	mov	w0, w20
    5c34:	ldp	x20, x19, [sp, #16]
    5c38:	ldp	x29, x30, [sp], #32
    5c3c:	ret
    5c40:	stp	x29, x30, [sp, #-48]!
    5c44:	str	x21, [sp, #16]
    5c48:	stp	x20, x19, [sp, #32]
    5c4c:	ldp	x9, x8, [x0]
    5c50:	mov	x19, x0
    5c54:	mov	x0, x1
    5c58:	mov	x29, sp
    5c5c:	add	x9, x8, x9, lsl #2
    5c60:	ldrb	w8, [x9, #3]
    5c64:	ldrh	w21, [x9]
    5c68:	ldrb	w20, [x9, #2]
    5c6c:	mov	w1, w8
    5c70:	bl	5da4 <ZSTD_initDStream_usingDDict@plt+0x1294>
    5c74:	add	x8, x0, x21
    5c78:	str	x8, [x19]
    5c7c:	mov	w0, w20
    5c80:	ldp	x20, x19, [sp, #32]
    5c84:	ldr	x21, [sp, #16]
    5c88:	ldp	x29, x30, [sp], #48
    5c8c:	ret
    5c90:	stp	x29, x30, [sp, #-48]!
    5c94:	str	x21, [sp, #16]
    5c98:	stp	x20, x19, [sp, #32]
    5c9c:	ldp	x9, x8, [x0]
    5ca0:	mov	x19, x0
    5ca4:	mov	x0, x1
    5ca8:	mov	x29, sp
    5cac:	add	x9, x8, x9, lsl #2
    5cb0:	ldrb	w8, [x9, #3]
    5cb4:	ldrh	w21, [x9]
    5cb8:	ldrb	w20, [x9, #2]
    5cbc:	mov	w1, w8
    5cc0:	bl	5d10 <ZSTD_initDStream_usingDDict@plt+0x1200>
    5cc4:	add	x8, x0, x21
    5cc8:	str	x8, [x19]
    5ccc:	mov	w0, w20
    5cd0:	ldp	x20, x19, [sp, #32]
    5cd4:	ldr	x21, [sp, #16]
    5cd8:	ldp	x29, x30, [sp], #48
    5cdc:	ret
    5ce0:	stp	x29, x30, [sp, #-16]!
    5ce4:	mov	x29, sp
    5ce8:	bl	5cf4 <ZSTD_initDStream_usingDDict@plt+0x11e4>
    5cec:	ldp	x29, x30, [sp], #16
    5cf0:	ret
    5cf4:	stp	x29, x30, [sp, #-16]!
    5cf8:	mov	x29, sp
    5cfc:	bl	5d08 <ZSTD_initDStream_usingDDict@plt+0x11f8>
    5d00:	ldp	x29, x30, [sp], #16
    5d04:	ret
    5d08:	ldr	x0, [x0]
    5d0c:	ret
    5d10:	stp	x29, x30, [sp, #-48]!
    5d14:	str	x21, [sp, #16]
    5d18:	stp	x20, x19, [sp, #32]
    5d1c:	mov	x29, sp
    5d20:	mov	w19, w1
    5d24:	mov	x20, x0
    5d28:	bl	5d50 <ZSTD_initDStream_usingDDict@plt+0x1240>
    5d2c:	mov	x21, x0
    5d30:	mov	x0, x20
    5d34:	mov	w1, w19
    5d38:	bl	5d7c <ZSTD_initDStream_usingDDict@plt+0x126c>
    5d3c:	mov	x0, x21
    5d40:	ldp	x20, x19, [sp, #32]
    5d44:	ldr	x21, [sp, #16]
    5d48:	ldp	x29, x30, [sp], #48
    5d4c:	ret
    5d50:	stp	x29, x30, [sp, #-16]!
    5d54:	ldr	w8, [x0, #8]
    5d58:	ldr	x0, [x0]
    5d5c:	mov	w9, #0x40                  	// #64
    5d60:	mov	w2, w1
    5d64:	add	w8, w1, w8
    5d68:	sub	w1, w9, w8
    5d6c:	mov	x29, sp
    5d70:	bl	5d8c <ZSTD_initDStream_usingDDict@plt+0x127c>
    5d74:	ldp	x29, x30, [sp], #16
    5d78:	ret
    5d7c:	ldr	w8, [x0, #8]
    5d80:	add	w8, w8, w1
    5d84:	str	w8, [x0, #8]
    5d88:	ret
    5d8c:	adrp	x8, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    5d90:	add	x8, x8, #0x5ec
    5d94:	ldr	w8, [x8, w2, uxtw #2]
    5d98:	lsr	x9, x0, x1
    5d9c:	and	x0, x9, x8
    5da0:	ret
    5da4:	stp	x29, x30, [sp, #-48]!
    5da8:	str	x21, [sp, #16]
    5dac:	stp	x20, x19, [sp, #32]
    5db0:	mov	x29, sp
    5db4:	mov	w19, w1
    5db8:	mov	x20, x0
    5dbc:	bl	5de4 <ZSTD_initDStream_usingDDict@plt+0x12d4>
    5dc0:	mov	x21, x0
    5dc4:	mov	x0, x20
    5dc8:	mov	w1, w19
    5dcc:	bl	5d7c <ZSTD_initDStream_usingDDict@plt+0x126c>
    5dd0:	mov	x0, x21
    5dd4:	ldp	x20, x19, [sp, #32]
    5dd8:	ldr	x21, [sp, #16]
    5ddc:	ldp	x29, x30, [sp], #48
    5de0:	ret
    5de4:	ldr	x8, [x0]
    5de8:	ldr	w9, [x0, #8]
    5dec:	lsl	x8, x8, x9
    5df0:	neg	w9, w1
    5df4:	lsr	x0, x8, x9
    5df8:	ret
    5dfc:	adrp	x0, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    5e00:	add	x0, x0, #0x3a8
    5e04:	ret
    5e08:	adrp	x0, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
    5e0c:	add	x0, x0, #0x3a8
    5e10:	ret
    5e14:	ret
    5e18:	mov	w0, wzr
    5e1c:	ret
    5e20:	stp	x29, x30, [sp, #-16]!
    5e24:	mov	x0, x2
    5e28:	mov	x29, sp
    5e2c:	blr	x1
    5e30:	ldp	x29, x30, [sp], #16
    5e34:	ret
    5e38:	stp	x29, x30, [sp, #-16]!
    5e3c:	mov	x0, x2
    5e40:	mov	x29, sp
    5e44:	blr	x1
    5e48:	mov	w0, #0x1                   	// #1
    5e4c:	ldp	x29, x30, [sp], #16
    5e50:	ret
    5e54:	cmp	x0, #0x0
    5e58:	cset	w8, ne  // ne = any
    5e5c:	lsl	x0, x8, #2
    5e60:	ret
    5e64:	mov	w0, #0x25a                 	// #602
    5e68:	ret
    5e6c:	ldp	q1, q0, [x1, #16]
    5e70:	ldr	q2, [x1]
    5e74:	stp	q1, q0, [x0, #16]
    5e78:	str	q2, [x0]
    5e7c:	ret
    5e80:	ldp	q0, q1, [x1]
    5e84:	ldp	q2, q3, [x1, #32]
    5e88:	ldr	x8, [x1, #80]
    5e8c:	ldr	q4, [x1, #64]
    5e90:	stp	q0, q1, [x0]
    5e94:	str	q2, [x0, #32]
    5e98:	str	x8, [x0, #80]
    5e9c:	stp	q3, q4, [x0, #48]
    5ea0:	ret
    5ea4:	stp	x29, x30, [sp, #-96]!
    5ea8:	stp	x26, x25, [sp, #32]
    5eac:	stp	x22, x21, [sp, #64]
    5eb0:	mov	w25, #0xae3d                	// #44605
    5eb4:	mov	w22, #0xca77                	// #51831
    5eb8:	stp	x28, x27, [sp, #16]
    5ebc:	stp	x20, x19, [sp, #80]
    5ec0:	mov	w21, w2
    5ec4:	mov	x20, x1
    5ec8:	mov	x19, x0
    5ecc:	movk	w25, #0xc2b2, lsl #16
    5ed0:	movk	w22, #0x85eb, lsl #16
    5ed4:	tst	x0, #0x3
    5ed8:	add	x27, x0, x1
    5edc:	stp	x24, x23, [sp, #48]
    5ee0:	mov	x29, sp
    5ee4:	b.eq	5fb4 <ZSTD_initDStream_usingDDict@plt+0x14a4>  // b.none
    5ee8:	mov	w28, #0x67b1                	// #26545
    5eec:	cmp	x20, #0x10
    5ef0:	movk	w28, #0x1656, lsl #16
    5ef4:	b.cc	6060 <ZSTD_initDStream_usingDDict@plt+0x1550>  // b.lo, b.ul, b.last
    5ef8:	mov	w9, #0xca77                	// #51831
    5efc:	movk	w9, #0x85eb, lsl #16
    5f00:	mov	w8, #0x4428                	// #17448
    5f04:	add	w22, w21, w9
    5f08:	mov	w9, #0x864f                	// #34383
    5f0c:	movk	w8, #0x2423, lsl #16
    5f10:	movk	w9, #0x61c8, lsl #16
    5f14:	sub	x26, x27, #0x10
    5f18:	add	w23, w21, w8
    5f1c:	add	w24, w21, w9
    5f20:	mov	x0, x19
    5f24:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    5f28:	mov	w1, w0
    5f2c:	mov	w0, w23
    5f30:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    5f34:	mov	w23, w0
    5f38:	add	x0, x19, #0x4
    5f3c:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    5f40:	mov	w1, w0
    5f44:	mov	w0, w22
    5f48:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    5f4c:	mov	w22, w0
    5f50:	add	x0, x19, #0x8
    5f54:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    5f58:	mov	w1, w0
    5f5c:	mov	w0, w21
    5f60:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    5f64:	mov	w21, w0
    5f68:	add	x0, x19, #0xc
    5f6c:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    5f70:	mov	w1, w0
    5f74:	mov	w0, w24
    5f78:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    5f7c:	add	x19, x19, #0x10
    5f80:	cmp	x19, x26
    5f84:	mov	w24, w0
    5f88:	b.ls	5f20 <ZSTD_initDStream_usingDDict@plt+0x1410>  // b.plast
    5f8c:	ror	w8, w23, #31
    5f90:	ror	w9, w22, #25
    5f94:	ror	w10, w21, #20
    5f98:	add	w8, w9, w8
    5f9c:	add	w8, w8, w10
    5fa0:	ror	w9, w24, #14
    5fa4:	mov	w22, #0xca77                	// #51831
    5fa8:	add	w8, w8, w9
    5fac:	movk	w22, #0x85eb, lsl #16
    5fb0:	b	6064 <ZSTD_initDStream_usingDDict@plt+0x1554>
    5fb4:	mov	w28, #0x67b1                	// #26545
    5fb8:	cmp	x20, #0x10
    5fbc:	movk	w28, #0x1656, lsl #16
    5fc0:	b.cc	60d8 <ZSTD_initDStream_usingDDict@plt+0x15c8>  // b.lo, b.ul, b.last
    5fc4:	mov	w9, #0xca77                	// #51831
    5fc8:	movk	w9, #0x85eb, lsl #16
    5fcc:	mov	w8, #0x4428                	// #17448
    5fd0:	add	w22, w21, w9
    5fd4:	mov	w9, #0x864f                	// #34383
    5fd8:	movk	w8, #0x2423, lsl #16
    5fdc:	movk	w9, #0x61c8, lsl #16
    5fe0:	sub	x26, x27, #0x10
    5fe4:	add	w24, w21, w8
    5fe8:	add	w23, w21, w9
    5fec:	ldr	w1, [x19]
    5ff0:	mov	w0, w24
    5ff4:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    5ff8:	ldr	w1, [x19, #4]
    5ffc:	mov	w24, w0
    6000:	mov	w0, w22
    6004:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    6008:	ldr	w1, [x19, #8]
    600c:	mov	w22, w0
    6010:	mov	w0, w21
    6014:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    6018:	ldr	w1, [x19, #12]
    601c:	mov	w21, w0
    6020:	mov	w0, w23
    6024:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    6028:	add	x19, x19, #0x10
    602c:	cmp	x19, x26
    6030:	mov	w23, w0
    6034:	b.ls	5fec <ZSTD_initDStream_usingDDict@plt+0x14dc>  // b.plast
    6038:	ror	w8, w24, #31
    603c:	ror	w9, w22, #25
    6040:	ror	w10, w21, #20
    6044:	add	w8, w9, w8
    6048:	add	w8, w8, w10
    604c:	ror	w9, w23, #14
    6050:	mov	w22, #0xca77                	// #51831
    6054:	add	w8, w8, w9
    6058:	movk	w22, #0x85eb, lsl #16
    605c:	b	60dc <ZSTD_initDStream_usingDDict@plt+0x15cc>
    6060:	add	w8, w21, w28
    6064:	add	x9, x19, #0x4
    6068:	cmp	x9, x27
    606c:	add	w20, w8, w20
    6070:	b.ls	607c <ZSTD_initDStream_usingDDict@plt+0x156c>  // b.plast
    6074:	mov	x8, x19
    6078:	b	60ac <ZSTD_initDStream_usingDDict@plt+0x159c>
    607c:	mov	w21, #0xeb2f                	// #60207
    6080:	movk	w21, #0x27d4, lsl #16
    6084:	mov	x0, x19
    6088:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    608c:	madd	w9, w0, w25, w20
    6090:	add	x8, x19, #0x4
    6094:	add	x10, x19, #0x8
    6098:	ror	w9, w9, #15
    609c:	cmp	x10, x27
    60a0:	mul	w20, w9, w21
    60a4:	mov	x19, x8
    60a8:	b.ls	6084 <ZSTD_initDStream_usingDDict@plt+0x1574>  // b.plast
    60ac:	cmp	x8, x27
    60b0:	b.cs	6144 <ZSTD_initDStream_usingDDict@plt+0x1634>  // b.hs, b.nlast
    60b4:	mov	w9, #0x79b1                	// #31153
    60b8:	movk	w9, #0x9e37, lsl #16
    60bc:	ldrb	w10, [x8], #1
    60c0:	madd	w10, w10, w28, w20
    60c4:	ror	w10, w10, #21
    60c8:	cmp	x27, x8
    60cc:	mul	w20, w10, w9
    60d0:	b.ne	60bc <ZSTD_initDStream_usingDDict@plt+0x15ac>  // b.any
    60d4:	b	6144 <ZSTD_initDStream_usingDDict@plt+0x1634>
    60d8:	add	w8, w21, w28
    60dc:	add	x9, x19, #0x4
    60e0:	cmp	x9, x27
    60e4:	add	w20, w8, w20
    60e8:	b.ls	60f4 <ZSTD_initDStream_usingDDict@plt+0x15e4>  // b.plast
    60ec:	mov	x8, x19
    60f0:	b	611c <ZSTD_initDStream_usingDDict@plt+0x160c>
    60f4:	mov	w9, #0xeb2f                	// #60207
    60f8:	movk	w9, #0x27d4, lsl #16
    60fc:	add	x8, x19, #0x4
    6100:	ldr	w10, [x19], #8
    6104:	madd	w10, w10, w25, w20
    6108:	ror	w10, w10, #15
    610c:	cmp	x19, x27
    6110:	mul	w20, w10, w9
    6114:	mov	x19, x8
    6118:	b.ls	60fc <ZSTD_initDStream_usingDDict@plt+0x15ec>  // b.plast
    611c:	cmp	x8, x27
    6120:	b.cs	6144 <ZSTD_initDStream_usingDDict@plt+0x1634>  // b.hs, b.nlast
    6124:	mov	w9, #0x79b1                	// #31153
    6128:	movk	w9, #0x9e37, lsl #16
    612c:	ldrb	w10, [x8], #1
    6130:	madd	w10, w10, w28, w20
    6134:	ror	w10, w10, #21
    6138:	cmp	x27, x8
    613c:	mul	w20, w10, w9
    6140:	b.ne	612c <ZSTD_initDStream_usingDDict@plt+0x161c>  // b.any
    6144:	eor	w8, w20, w20, lsr #15
    6148:	mul	w8, w8, w22
    614c:	eor	w8, w8, w8, lsr #13
    6150:	mul	w8, w8, w25
    6154:	ldp	x20, x19, [sp, #80]
    6158:	ldp	x22, x21, [sp, #64]
    615c:	ldp	x24, x23, [sp, #48]
    6160:	ldp	x26, x25, [sp, #32]
    6164:	ldp	x28, x27, [sp, #16]
    6168:	eor	w0, w8, w8, lsr #16
    616c:	ldp	x29, x30, [sp], #96
    6170:	ret
    6174:	stp	x29, x30, [sp, #-96]!
    6178:	stp	x26, x25, [sp, #32]
    617c:	stp	x24, x23, [sp, #48]
    6180:	mov	x26, #0xeb4f                	// #60239
    6184:	mov	x24, #0x79f9                	// #31225
    6188:	movk	x26, #0x27d4, lsl #16
    618c:	movk	x24, #0x9e37, lsl #16
    6190:	movk	x26, #0xae3d, lsl #32
    6194:	movk	x24, #0x67b1, lsl #32
    6198:	stp	x28, x27, [sp, #16]
    619c:	stp	x22, x21, [sp, #64]
    61a0:	stp	x20, x19, [sp, #80]
    61a4:	mov	x21, x2
    61a8:	mov	x20, x1
    61ac:	mov	x19, x0
    61b0:	movk	x26, #0xc2b2, lsl #48
    61b4:	movk	x24, #0x1656, lsl #48
    61b8:	tst	x0, #0x7
    61bc:	add	x27, x0, x1
    61c0:	mov	x29, sp
    61c4:	b.eq	62cc <ZSTD_initDStream_usingDDict@plt+0x17bc>  // b.none
    61c8:	mov	x28, #0x67c5                	// #26565
    61cc:	movk	x28, #0x1656, lsl #16
    61d0:	movk	x28, #0xeb2f, lsl #32
    61d4:	cmp	x20, #0x20
    61d8:	movk	x28, #0x27d4, lsl #48
    61dc:	b.cc	63b0 <ZSTD_initDStream_usingDDict@plt+0x18a0>  // b.lo, b.ul, b.last
    61e0:	mov	x8, #0xb5d6                	// #46550
    61e4:	mov	x9, #0x3579                	// #13689
    61e8:	movk	x8, #0xadc0, lsl #16
    61ec:	movk	x9, #0x7a14, lsl #16
    61f0:	movk	x8, #0x27ee, lsl #32
    61f4:	movk	x9, #0x864e, lsl #32
    61f8:	movk	x8, #0x60ea, lsl #48
    61fc:	movk	x9, #0x61c8, lsl #48
    6200:	sub	x25, x27, #0x20
    6204:	add	x23, x21, x26
    6208:	add	x24, x21, x8
    620c:	add	x22, x21, x9
    6210:	mov	x0, x19
    6214:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6218:	mov	x1, x0
    621c:	mov	x0, x24
    6220:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6224:	mov	x24, x0
    6228:	add	x0, x19, #0x8
    622c:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6230:	mov	x1, x0
    6234:	mov	x0, x23
    6238:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    623c:	mov	x23, x0
    6240:	add	x0, x19, #0x10
    6244:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6248:	mov	x1, x0
    624c:	mov	x0, x21
    6250:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6254:	mov	x21, x0
    6258:	add	x0, x19, #0x18
    625c:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6260:	mov	x1, x0
    6264:	mov	x0, x22
    6268:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    626c:	add	x19, x19, #0x20
    6270:	cmp	x19, x25
    6274:	mov	x22, x0
    6278:	b.ls	6210 <ZSTD_initDStream_usingDDict@plt+0x1700>  // b.plast
    627c:	ror	x8, x24, #63
    6280:	ror	x9, x23, #57
    6284:	ror	x10, x21, #52
    6288:	add	x8, x9, x8
    628c:	add	x8, x8, x10
    6290:	ror	x9, x22, #46
    6294:	add	x0, x8, x9
    6298:	mov	x1, x24
    629c:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    62a0:	mov	x1, x23
    62a4:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    62a8:	mov	x1, x21
    62ac:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    62b0:	mov	x1, x22
    62b4:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    62b8:	mov	x24, #0x79f9                	// #31225
    62bc:	movk	x24, #0x9e37, lsl #16
    62c0:	movk	x24, #0x67b1, lsl #32
    62c4:	movk	x24, #0x1656, lsl #48
    62c8:	b	63b4 <ZSTD_initDStream_usingDDict@plt+0x18a4>
    62cc:	mov	x28, #0x67c5                	// #26565
    62d0:	movk	x28, #0x1656, lsl #16
    62d4:	movk	x28, #0xeb2f, lsl #32
    62d8:	cmp	x20, #0x20
    62dc:	movk	x28, #0x27d4, lsl #48
    62e0:	b.cc	6470 <ZSTD_initDStream_usingDDict@plt+0x1960>  // b.lo, b.ul, b.last
    62e4:	mov	x8, #0xb5d6                	// #46550
    62e8:	mov	x9, #0x3579                	// #13689
    62ec:	movk	x8, #0xadc0, lsl #16
    62f0:	movk	x9, #0x7a14, lsl #16
    62f4:	movk	x8, #0x27ee, lsl #32
    62f8:	movk	x9, #0x864e, lsl #32
    62fc:	movk	x8, #0x60ea, lsl #48
    6300:	movk	x9, #0x61c8, lsl #48
    6304:	sub	x25, x27, #0x20
    6308:	add	x23, x21, x26
    630c:	add	x24, x21, x8
    6310:	add	x22, x21, x9
    6314:	ldr	x1, [x19]
    6318:	mov	x0, x24
    631c:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6320:	ldr	x1, [x19, #8]
    6324:	mov	x24, x0
    6328:	mov	x0, x23
    632c:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6330:	ldr	x1, [x19, #16]
    6334:	mov	x23, x0
    6338:	mov	x0, x21
    633c:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6340:	ldr	x1, [x19, #24]
    6344:	mov	x21, x0
    6348:	mov	x0, x22
    634c:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6350:	add	x19, x19, #0x20
    6354:	cmp	x19, x25
    6358:	mov	x22, x0
    635c:	b.ls	6314 <ZSTD_initDStream_usingDDict@plt+0x1804>  // b.plast
    6360:	ror	x8, x24, #63
    6364:	ror	x9, x23, #57
    6368:	ror	x10, x21, #52
    636c:	add	x8, x9, x8
    6370:	add	x8, x8, x10
    6374:	ror	x9, x22, #46
    6378:	add	x0, x8, x9
    637c:	mov	x1, x24
    6380:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    6384:	mov	x1, x23
    6388:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    638c:	mov	x1, x21
    6390:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    6394:	mov	x1, x22
    6398:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    639c:	mov	x24, #0x79f9                	// #31225
    63a0:	movk	x24, #0x9e37, lsl #16
    63a4:	movk	x24, #0x67b1, lsl #32
    63a8:	movk	x24, #0x1656, lsl #48
    63ac:	b	6474 <ZSTD_initDStream_usingDDict@plt+0x1964>
    63b0:	add	x0, x21, x28
    63b4:	mov	x21, #0xca87                	// #51847
    63b8:	movk	x21, #0x85eb, lsl #16
    63bc:	movk	x21, #0x79b1, lsl #32
    63c0:	add	x8, x19, #0x8
    63c4:	movk	x21, #0x9e37, lsl #48
    63c8:	cmp	x8, x27
    63cc:	add	x20, x0, x20
    63d0:	b.ls	63dc <ZSTD_initDStream_usingDDict@plt+0x18cc>  // b.plast
    63d4:	mov	x0, x19
    63d8:	b	6420 <ZSTD_initDStream_usingDDict@plt+0x1910>
    63dc:	mov	x22, #0xae63                	// #44643
    63e0:	movk	x22, #0xc2b2, lsl #16
    63e4:	movk	x22, #0xca77, lsl #32
    63e8:	movk	x22, #0x85eb, lsl #48
    63ec:	mov	x0, x19
    63f0:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    63f4:	mov	x1, x0
    63f8:	mov	x0, xzr
    63fc:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6400:	eor	x8, x0, x20
    6404:	add	x0, x19, #0x8
    6408:	add	x9, x19, #0x10
    640c:	ror	x8, x8, #37
    6410:	cmp	x9, x27
    6414:	madd	x20, x8, x21, x22
    6418:	mov	x19, x0
    641c:	b.ls	63ec <ZSTD_initDStream_usingDDict@plt+0x18dc>  // b.plast
    6420:	add	x19, x0, #0x4
    6424:	cmp	x19, x27
    6428:	b.hi	6448 <ZSTD_initDStream_usingDDict@plt+0x1938>  // b.pmore
    642c:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    6430:	mov	w8, w0
    6434:	mul	x8, x8, x21
    6438:	eor	x8, x8, x20
    643c:	ror	x8, x8, #41
    6440:	madd	x20, x8, x26, x24
    6444:	mov	x0, x19
    6448:	cmp	x0, x27
    644c:	b.cs	6514 <ZSTD_initDStream_usingDDict@plt+0x1a04>  // b.hs, b.nlast
    6450:	ldrb	w8, [x0], #1
    6454:	mul	x8, x8, x28
    6458:	eor	x8, x8, x20
    645c:	ror	x8, x8, #53
    6460:	cmp	x27, x0
    6464:	mul	x20, x8, x21
    6468:	b.ne	6450 <ZSTD_initDStream_usingDDict@plt+0x1940>  // b.any
    646c:	b	6514 <ZSTD_initDStream_usingDDict@plt+0x1a04>
    6470:	add	x0, x21, x28
    6474:	mov	x21, #0xca87                	// #51847
    6478:	movk	x21, #0x85eb, lsl #16
    647c:	movk	x21, #0x79b1, lsl #32
    6480:	add	x8, x19, #0x8
    6484:	movk	x21, #0x9e37, lsl #48
    6488:	cmp	x8, x27
    648c:	add	x20, x0, x20
    6490:	b.hi	64cc <ZSTD_initDStream_usingDDict@plt+0x19bc>  // b.pmore
    6494:	mov	x22, #0xae63                	// #44643
    6498:	movk	x22, #0xc2b2, lsl #16
    649c:	movk	x22, #0xca77, lsl #32
    64a0:	movk	x22, #0x85eb, lsl #48
    64a4:	mov	x23, x19
    64a8:	ldr	x1, [x23], #16
    64ac:	mov	x0, xzr
    64b0:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    64b4:	eor	x8, x0, x20
    64b8:	ror	x8, x8, #37
    64bc:	cmp	x23, x27
    64c0:	madd	x20, x8, x21, x22
    64c4:	add	x19, x19, #0x8
    64c8:	b.ls	64a4 <ZSTD_initDStream_usingDDict@plt+0x1994>  // b.plast
    64cc:	add	x8, x19, #0x4
    64d0:	cmp	x8, x27
    64d4:	b.hi	64f0 <ZSTD_initDStream_usingDDict@plt+0x19e0>  // b.pmore
    64d8:	ldr	w9, [x19]
    64dc:	mov	x19, x8
    64e0:	mul	x8, x9, x21
    64e4:	eor	x8, x8, x20
    64e8:	ror	x8, x8, #41
    64ec:	madd	x20, x8, x26, x24
    64f0:	cmp	x19, x27
    64f4:	b.cs	6514 <ZSTD_initDStream_usingDDict@plt+0x1a04>  // b.hs, b.nlast
    64f8:	ldrb	w8, [x19], #1
    64fc:	mul	x8, x8, x28
    6500:	eor	x8, x8, x20
    6504:	ror	x8, x8, #53
    6508:	cmp	x27, x19
    650c:	mul	x20, x8, x21
    6510:	b.ne	64f8 <ZSTD_initDStream_usingDDict@plt+0x19e8>  // b.any
    6514:	eor	x8, x20, x20, lsr #33
    6518:	mul	x8, x8, x26
    651c:	eor	x8, x8, x8, lsr #29
    6520:	mul	x8, x8, x24
    6524:	ldp	x20, x19, [sp, #80]
    6528:	ldp	x22, x21, [sp, #64]
    652c:	ldp	x24, x23, [sp, #48]
    6530:	ldp	x26, x25, [sp, #32]
    6534:	ldp	x28, x27, [sp, #16]
    6538:	eor	x0, x8, x8, lsr #32
    653c:	ldp	x29, x30, [sp], #96
    6540:	ret
    6544:	stp	x29, x30, [sp, #-16]!
    6548:	mov	w0, #0x30                  	// #48
    654c:	mov	x29, sp
    6550:	bl	655c <ZSTD_initDStream_usingDDict@plt+0x1a4c>
    6554:	ldp	x29, x30, [sp], #16
    6558:	ret
    655c:	stp	x29, x30, [sp, #-16]!
    6560:	mov	x29, sp
    6564:	bl	4640 <malloc@plt>
    6568:	ldp	x29, x30, [sp], #16
    656c:	ret
    6570:	stp	x29, x30, [sp, #-16]!
    6574:	mov	x29, sp
    6578:	bl	6588 <ZSTD_initDStream_usingDDict@plt+0x1a78>
    657c:	mov	w0, wzr
    6580:	ldp	x29, x30, [sp], #16
    6584:	ret
    6588:	stp	x29, x30, [sp, #-16]!
    658c:	mov	x29, sp
    6590:	bl	4880 <free@plt>
    6594:	ldp	x29, x30, [sp], #16
    6598:	ret
    659c:	stp	x29, x30, [sp, #-16]!
    65a0:	mov	w0, #0x58                  	// #88
    65a4:	mov	x29, sp
    65a8:	bl	655c <ZSTD_initDStream_usingDDict@plt+0x1a4c>
    65ac:	ldp	x29, x30, [sp], #16
    65b0:	ret
    65b4:	stp	x29, x30, [sp, #-16]!
    65b8:	mov	x29, sp
    65bc:	bl	6588 <ZSTD_initDStream_usingDDict@plt+0x1a78>
    65c0:	mov	w0, wzr
    65c4:	ldp	x29, x30, [sp], #16
    65c8:	ret
    65cc:	mov	w8, #0x4428                	// #17448
    65d0:	mov	w9, #0xca77                	// #51831
    65d4:	mov	w10, #0x864f                	// #34383
    65d8:	movk	w8, #0x2423, lsl #16
    65dc:	movk	w9, #0x85eb, lsl #16
    65e0:	movk	w10, #0x61c8, lsl #16
    65e4:	add	w8, w1, w8
    65e8:	add	w9, w1, w9
    65ec:	add	w10, w1, w10
    65f0:	str	xzr, [x0]
    65f4:	stp	xzr, xzr, [x0, #24]
    65f8:	stp	w8, w9, [x0, #8]
    65fc:	stp	w1, w10, [x0, #16]
    6600:	str	wzr, [x0, #40]
    6604:	mov	w0, wzr
    6608:	ret
    660c:	mov	x8, #0xb5d6                	// #46550
    6610:	mov	x9, #0xeb4f                	// #60239
    6614:	mov	x10, #0x3579                	// #13689
    6618:	movk	x8, #0xadc0, lsl #16
    661c:	movk	x9, #0x27d4, lsl #16
    6620:	movk	x10, #0x7a14, lsl #16
    6624:	movk	x8, #0x27ee, lsl #32
    6628:	movk	x9, #0xae3d, lsl #32
    662c:	movk	x10, #0x864e, lsl #32
    6630:	movk	x8, #0x60ea, lsl #48
    6634:	movk	x9, #0xc2b2, lsl #48
    6638:	movk	x10, #0x61c8, lsl #48
    663c:	movi	v0.2d, #0x0
    6640:	add	x8, x1, x8
    6644:	add	x9, x1, x9
    6648:	add	x10, x1, x10
    664c:	stur	q0, [x0, #40]
    6650:	stur	q0, [x0, #56]
    6654:	stp	xzr, x8, [x0]
    6658:	stp	x9, x1, [x0, #16]
    665c:	str	x10, [x0, #32]
    6660:	str	xzr, [x0, #72]
    6664:	mov	w0, wzr
    6668:	ret
    666c:	stp	x29, x30, [sp, #-80]!
    6670:	stp	x26, x25, [sp, #16]
    6674:	stp	x24, x23, [sp, #32]
    6678:	stp	x22, x21, [sp, #48]
    667c:	stp	x20, x19, [sp, #64]
    6680:	ldp	w9, w10, [x0]
    6684:	mov	x21, x2
    6688:	cmp	x2, #0xf
    668c:	ldr	w8, [x0, #40]
    6690:	add	w9, w9, w21
    6694:	cset	w11, hi  // hi = pmore
    6698:	cmp	w9, #0xf
    669c:	str	w9, [x0]
    66a0:	cset	w9, hi  // hi = pmore
    66a4:	orr	w9, w11, w9
    66a8:	orr	w9, w10, w9
    66ac:	add	x10, x8, x2
    66b0:	mov	x20, x1
    66b4:	mov	x19, x0
    66b8:	cmp	x10, #0xf
    66bc:	mov	x29, sp
    66c0:	str	w9, [x0, #4]
    66c4:	b.hi	66e8 <ZSTD_initDStream_usingDDict@plt+0x1bd8>  // b.pmore
    66c8:	add	x8, x19, x8
    66cc:	add	x0, x8, #0x18
    66d0:	mov	x1, x20
    66d4:	mov	x2, x21
    66d8:	bl	6e3c <ZSTD_initDStream_usingDDict@plt+0x232c>
    66dc:	ldr	w8, [x19, #40]
    66e0:	add	w21, w8, w21
    66e4:	b	682c <ZSTD_initDStream_usingDDict@plt+0x1d1c>
    66e8:	add	x25, x20, x21
    66ec:	cbz	w8, 6788 <ZSTD_initDStream_usingDDict@plt+0x1c78>
    66f0:	add	x21, x19, #0x18
    66f4:	mov	w23, #0x10                  	// #16
    66f8:	add	x0, x21, x8
    66fc:	sub	w2, w23, w8
    6700:	mov	x1, x20
    6704:	bl	6e3c <ZSTD_initDStream_usingDDict@plt+0x232c>
    6708:	ldr	w22, [x19, #8]
    670c:	mov	x0, x21
    6710:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    6714:	mov	w1, w0
    6718:	mov	w0, w22
    671c:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    6720:	ldr	w21, [x19, #12]
    6724:	str	w0, [x19, #8]
    6728:	add	x0, x19, #0x1c
    672c:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    6730:	mov	w1, w0
    6734:	mov	w0, w21
    6738:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    673c:	ldr	w21, [x19, #16]
    6740:	str	w0, [x19, #12]
    6744:	add	x0, x19, #0x20
    6748:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    674c:	mov	w1, w0
    6750:	mov	w0, w21
    6754:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    6758:	ldr	w21, [x19, #20]
    675c:	str	w0, [x19, #16]
    6760:	add	x0, x19, #0x24
    6764:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    6768:	mov	w1, w0
    676c:	mov	w0, w21
    6770:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    6774:	ldr	w8, [x19, #40]
    6778:	str	w0, [x19, #20]
    677c:	str	wzr, [x19, #40]
    6780:	sub	w8, w23, w8
    6784:	add	x20, x20, x8
    6788:	sub	x26, x25, #0x10
    678c:	cmp	x20, x26
    6790:	b.hi	6810 <ZSTD_initDStream_usingDDict@plt+0x1d00>  // b.pmore
    6794:	ldp	w21, w22, [x19, #8]
    6798:	ldp	w23, w24, [x19, #16]
    679c:	mov	x0, x20
    67a0:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    67a4:	mov	w1, w0
    67a8:	mov	w0, w21
    67ac:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    67b0:	mov	w21, w0
    67b4:	add	x0, x20, #0x4
    67b8:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    67bc:	mov	w1, w0
    67c0:	mov	w0, w22
    67c4:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    67c8:	mov	w22, w0
    67cc:	add	x0, x20, #0x8
    67d0:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    67d4:	mov	w1, w0
    67d8:	mov	w0, w23
    67dc:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    67e0:	mov	w23, w0
    67e4:	add	x0, x20, #0xc
    67e8:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    67ec:	mov	w1, w0
    67f0:	mov	w0, w24
    67f4:	bl	6d90 <ZSTD_initDStream_usingDDict@plt+0x2280>
    67f8:	add	x20, x20, #0x10
    67fc:	cmp	x20, x26
    6800:	mov	w24, w0
    6804:	b.ls	679c <ZSTD_initDStream_usingDDict@plt+0x1c8c>  // b.plast
    6808:	stp	w21, w22, [x19, #8]
    680c:	stp	w23, w24, [x19, #16]
    6810:	cmp	x20, x25
    6814:	b.cs	6830 <ZSTD_initDStream_usingDDict@plt+0x1d20>  // b.hs, b.nlast
    6818:	sub	x21, x25, x20
    681c:	add	x0, x19, #0x18
    6820:	mov	x1, x20
    6824:	mov	x2, x21
    6828:	bl	6e3c <ZSTD_initDStream_usingDDict@plt+0x232c>
    682c:	str	w21, [x19, #40]
    6830:	ldp	x20, x19, [sp, #64]
    6834:	ldp	x22, x21, [sp, #48]
    6838:	ldp	x24, x23, [sp, #32]
    683c:	ldp	x26, x25, [sp, #16]
    6840:	mov	w0, wzr
    6844:	ldp	x29, x30, [sp], #80
    6848:	ret
    684c:	stp	x29, x30, [sp, #-80]!
    6850:	stp	x24, x23, [sp, #32]
    6854:	stp	x22, x21, [sp, #48]
    6858:	stp	x20, x19, [sp, #64]
    685c:	ldr	w21, [x0, #40]
    6860:	ldr	w9, [x0, #4]
    6864:	add	x8, x0, #0x18
    6868:	mov	x19, x0
    686c:	add	x23, x8, x21
    6870:	str	x25, [sp, #16]
    6874:	mov	x29, sp
    6878:	cbz	w9, 68a0 <ZSTD_initDStream_usingDDict@plt+0x1d90>
    687c:	ldp	w9, w10, [x19, #8]
    6880:	ldp	w11, w12, [x19, #16]
    6884:	ror	w9, w9, #31
    6888:	ror	w10, w10, #25
    688c:	ror	w11, w11, #20
    6890:	add	w9, w10, w9
    6894:	add	w9, w9, w11
    6898:	ror	w10, w12, #14
    689c:	b	68ac <ZSTD_initDStream_usingDDict@plt+0x1d9c>
    68a0:	ldr	w9, [x19, #16]
    68a4:	mov	w10, #0x67b1                	// #26545
    68a8:	movk	w10, #0x1656, lsl #16
    68ac:	add	w9, w9, w10
    68b0:	mov	x10, x19
    68b4:	ldr	w11, [x10], #28
    68b8:	mov	w22, #0xae3d                	// #44605
    68bc:	movk	w22, #0xc2b2, lsl #16
    68c0:	cmp	x23, x10
    68c4:	add	w24, w11, w9
    68c8:	b.cc	6900 <ZSTD_initDStream_usingDDict@plt+0x1df0>  // b.lo, b.ul, b.last
    68cc:	mov	w25, #0xeb2f                	// #60207
    68d0:	add	x20, x19, #0x18
    68d4:	movk	w25, #0x27d4, lsl #16
    68d8:	mov	x0, x20
    68dc:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    68e0:	madd	w9, w0, w22, w24
    68e4:	add	x8, x20, #0x4
    68e8:	add	x10, x20, #0x8
    68ec:	ror	w9, w9, #15
    68f0:	cmp	x10, x23
    68f4:	mul	w24, w9, w25
    68f8:	mov	x20, x8
    68fc:	b.ls	68d8 <ZSTD_initDStream_usingDDict@plt+0x1dc8>  // b.plast
    6900:	cmp	x8, x23
    6904:	b.cs	6938 <ZSTD_initDStream_usingDDict@plt+0x1e28>  // b.hs, b.nlast
    6908:	mov	w9, #0x67b1                	// #26545
    690c:	add	x10, x21, x19
    6910:	mov	w11, #0x79b1                	// #31153
    6914:	movk	w9, #0x1656, lsl #16
    6918:	add	x10, x10, #0x18
    691c:	movk	w11, #0x9e37, lsl #16
    6920:	ldrb	w12, [x8], #1
    6924:	madd	w12, w12, w9, w24
    6928:	ror	w12, w12, #21
    692c:	cmp	x10, x8
    6930:	mul	w24, w12, w11
    6934:	b.ne	6920 <ZSTD_initDStream_usingDDict@plt+0x1e10>  // b.any
    6938:	mov	w9, #0xca77                	// #51831
    693c:	eor	w8, w24, w24, lsr #15
    6940:	movk	w9, #0x85eb, lsl #16
    6944:	mul	w8, w8, w9
    6948:	eor	w8, w8, w8, lsr #13
    694c:	mul	w8, w8, w22
    6950:	ldp	x20, x19, [sp, #64]
    6954:	ldp	x22, x21, [sp, #48]
    6958:	ldp	x24, x23, [sp, #32]
    695c:	ldr	x25, [sp, #16]
    6960:	eor	w0, w8, w8, lsr #16
    6964:	ldp	x29, x30, [sp], #80
    6968:	ret
    696c:	stp	x29, x30, [sp, #-80]!
    6970:	stp	x26, x25, [sp, #16]
    6974:	stp	x24, x23, [sp, #32]
    6978:	stp	x22, x21, [sp, #48]
    697c:	stp	x20, x19, [sp, #64]
    6980:	ldr	w8, [x0, #72]
    6984:	ldr	x9, [x0]
    6988:	mov	x21, x2
    698c:	mov	x20, x1
    6990:	add	x10, x8, x2
    6994:	mov	x19, x0
    6998:	add	x9, x9, x2
    699c:	cmp	x10, #0x1f
    69a0:	mov	x29, sp
    69a4:	str	x9, [x0]
    69a8:	b.hi	69cc <ZSTD_initDStream_usingDDict@plt+0x1ebc>  // b.pmore
    69ac:	add	x8, x19, x8
    69b0:	add	x0, x8, #0x28
    69b4:	mov	x1, x20
    69b8:	mov	x2, x21
    69bc:	bl	6e3c <ZSTD_initDStream_usingDDict@plt+0x232c>
    69c0:	ldr	w8, [x19, #72]
    69c4:	add	w21, w8, w21
    69c8:	b	6b14 <ZSTD_initDStream_usingDDict@plt+0x2004>
    69cc:	add	x25, x20, x21
    69d0:	cbz	w8, 6a6c <ZSTD_initDStream_usingDDict@plt+0x1f5c>
    69d4:	add	x21, x19, #0x28
    69d8:	mov	w23, #0x20                  	// #32
    69dc:	add	x0, x21, x8
    69e0:	sub	w2, w23, w8
    69e4:	mov	x1, x20
    69e8:	bl	6e3c <ZSTD_initDStream_usingDDict@plt+0x232c>
    69ec:	ldr	x22, [x19, #8]
    69f0:	mov	x0, x21
    69f4:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    69f8:	mov	x1, x0
    69fc:	mov	x0, x22
    6a00:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6a04:	ldr	x21, [x19, #16]
    6a08:	str	x0, [x19, #8]
    6a0c:	add	x0, x19, #0x30
    6a10:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6a14:	mov	x1, x0
    6a18:	mov	x0, x21
    6a1c:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6a20:	ldr	x21, [x19, #24]
    6a24:	str	x0, [x19, #16]
    6a28:	add	x0, x19, #0x38
    6a2c:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6a30:	mov	x1, x0
    6a34:	mov	x0, x21
    6a38:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6a3c:	ldr	x21, [x19, #32]
    6a40:	str	x0, [x19, #24]
    6a44:	add	x0, x19, #0x40
    6a48:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6a4c:	mov	x1, x0
    6a50:	mov	x0, x21
    6a54:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6a58:	ldr	w8, [x19, #72]
    6a5c:	str	x0, [x19, #32]
    6a60:	str	wzr, [x19, #72]
    6a64:	sub	w8, w23, w8
    6a68:	add	x20, x20, x8
    6a6c:	add	x8, x20, #0x20
    6a70:	cmp	x8, x25
    6a74:	b.hi	6af8 <ZSTD_initDStream_usingDDict@plt+0x1fe8>  // b.pmore
    6a78:	ldp	x21, x22, [x19, #8]
    6a7c:	ldp	x23, x24, [x19, #24]
    6a80:	sub	x26, x25, #0x20
    6a84:	mov	x0, x20
    6a88:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6a8c:	mov	x1, x0
    6a90:	mov	x0, x21
    6a94:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6a98:	mov	x21, x0
    6a9c:	add	x0, x20, #0x8
    6aa0:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6aa4:	mov	x1, x0
    6aa8:	mov	x0, x22
    6aac:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6ab0:	mov	x22, x0
    6ab4:	add	x0, x20, #0x10
    6ab8:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6abc:	mov	x1, x0
    6ac0:	mov	x0, x23
    6ac4:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6ac8:	mov	x23, x0
    6acc:	add	x0, x20, #0x18
    6ad0:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6ad4:	mov	x1, x0
    6ad8:	mov	x0, x24
    6adc:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6ae0:	add	x20, x20, #0x20
    6ae4:	cmp	x20, x26
    6ae8:	mov	x24, x0
    6aec:	b.ls	6a84 <ZSTD_initDStream_usingDDict@plt+0x1f74>  // b.plast
    6af0:	stp	x21, x22, [x19, #8]
    6af4:	stp	x23, x24, [x19, #24]
    6af8:	cmp	x20, x25
    6afc:	b.cs	6b18 <ZSTD_initDStream_usingDDict@plt+0x2008>  // b.hs, b.nlast
    6b00:	sub	x21, x25, x20
    6b04:	add	x0, x19, #0x28
    6b08:	mov	x1, x20
    6b0c:	mov	x2, x21
    6b10:	bl	6e3c <ZSTD_initDStream_usingDDict@plt+0x232c>
    6b14:	str	w21, [x19, #72]
    6b18:	ldp	x20, x19, [sp, #64]
    6b1c:	ldp	x22, x21, [sp, #48]
    6b20:	ldp	x24, x23, [sp, #32]
    6b24:	ldp	x26, x25, [sp, #16]
    6b28:	mov	w0, wzr
    6b2c:	ldp	x29, x30, [sp], #80
    6b30:	ret
    6b34:	stp	x29, x30, [sp, #-96]!
    6b38:	stp	x28, x27, [sp, #16]
    6b3c:	stp	x26, x25, [sp, #32]
    6b40:	stp	x24, x23, [sp, #48]
    6b44:	stp	x22, x21, [sp, #64]
    6b48:	stp	x20, x19, [sp, #80]
    6b4c:	ldr	x27, [x0]
    6b50:	ldr	w25, [x0, #72]
    6b54:	mov	x24, #0x67c5                	// #26565
    6b58:	movk	x24, #0x1656, lsl #16
    6b5c:	movk	x24, #0xeb2f, lsl #32
    6b60:	add	x20, x0, #0x28
    6b64:	mov	x19, x0
    6b68:	movk	x24, #0x27d4, lsl #48
    6b6c:	cmp	x27, #0x20
    6b70:	add	x26, x20, x25
    6b74:	mov	x29, sp
    6b78:	b.cc	6bc0 <ZSTD_initDStream_usingDDict@plt+0x20b0>  // b.lo, b.ul, b.last
    6b7c:	ldp	x1, x21, [x19, #8]
    6b80:	ldp	x22, x23, [x19, #24]
    6b84:	ror	x8, x1, #63
    6b88:	ror	x9, x21, #57
    6b8c:	ror	x10, x22, #52
    6b90:	add	x8, x9, x8
    6b94:	add	x8, x8, x10
    6b98:	ror	x9, x23, #46
    6b9c:	add	x0, x8, x9
    6ba0:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    6ba4:	mov	x1, x21
    6ba8:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    6bac:	mov	x1, x22
    6bb0:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    6bb4:	mov	x1, x23
    6bb8:	bl	6de8 <ZSTD_initDStream_usingDDict@plt+0x22d8>
    6bbc:	b	6bc8 <ZSTD_initDStream_usingDDict@plt+0x20b8>
    6bc0:	ldr	x8, [x19, #24]
    6bc4:	add	x0, x8, x24
    6bc8:	mov	x22, #0xca87                	// #51847
    6bcc:	movk	x22, #0x85eb, lsl #16
    6bd0:	movk	x22, #0x79b1, lsl #32
    6bd4:	add	x8, x19, #0x30
    6bd8:	movk	x22, #0x9e37, lsl #48
    6bdc:	cmp	x26, x8
    6be0:	add	x23, x0, x27
    6be4:	b.cc	6c30 <ZSTD_initDStream_usingDDict@plt+0x2120>  // b.lo, b.ul, b.last
    6be8:	mov	x27, #0xae63                	// #44643
    6bec:	movk	x27, #0xc2b2, lsl #16
    6bf0:	movk	x27, #0xca77, lsl #32
    6bf4:	add	x21, x19, #0x28
    6bf8:	movk	x27, #0x85eb, lsl #48
    6bfc:	mov	x0, x21
    6c00:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6c04:	mov	x1, x0
    6c08:	mov	x0, xzr
    6c0c:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6c10:	eor	x8, x0, x23
    6c14:	add	x20, x21, #0x8
    6c18:	add	x9, x21, #0x10
    6c1c:	ror	x8, x8, #37
    6c20:	cmp	x9, x26
    6c24:	madd	x23, x8, x22, x27
    6c28:	mov	x21, x20
    6c2c:	b.ls	6bfc <ZSTD_initDStream_usingDDict@plt+0x20ec>  // b.plast
    6c30:	mov	x21, #0xeb4f                	// #60239
    6c34:	mov	x27, #0x79f9                	// #31225
    6c38:	movk	x21, #0x27d4, lsl #16
    6c3c:	movk	x27, #0x9e37, lsl #16
    6c40:	movk	x21, #0xae3d, lsl #32
    6c44:	add	x28, x20, #0x4
    6c48:	movk	x27, #0x67b1, lsl #32
    6c4c:	movk	x21, #0xc2b2, lsl #48
    6c50:	cmp	x28, x26
    6c54:	movk	x27, #0x1656, lsl #48
    6c58:	b.hi	6c7c <ZSTD_initDStream_usingDDict@plt+0x216c>  // b.pmore
    6c5c:	mov	x0, x20
    6c60:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    6c64:	mov	w8, w0
    6c68:	mul	x8, x8, x22
    6c6c:	eor	x8, x8, x23
    6c70:	ror	x8, x8, #41
    6c74:	madd	x23, x8, x21, x27
    6c78:	mov	x20, x28
    6c7c:	cmp	x20, x26
    6c80:	b.cs	6ca8 <ZSTD_initDStream_usingDDict@plt+0x2198>  // b.hs, b.nlast
    6c84:	add	x8, x25, x19
    6c88:	add	x8, x8, #0x28
    6c8c:	ldrb	w9, [x20], #1
    6c90:	mul	x9, x9, x24
    6c94:	eor	x9, x9, x23
    6c98:	ror	x9, x9, #53
    6c9c:	cmp	x8, x20
    6ca0:	mul	x23, x9, x22
    6ca4:	b.ne	6c8c <ZSTD_initDStream_usingDDict@plt+0x217c>  // b.any
    6ca8:	eor	x8, x23, x23, lsr #33
    6cac:	mul	x8, x8, x21
    6cb0:	eor	x8, x8, x8, lsr #29
    6cb4:	mul	x8, x8, x27
    6cb8:	ldp	x20, x19, [sp, #80]
    6cbc:	ldp	x22, x21, [sp, #64]
    6cc0:	ldp	x24, x23, [sp, #48]
    6cc4:	ldp	x26, x25, [sp, #32]
    6cc8:	ldp	x28, x27, [sp, #16]
    6ccc:	eor	x0, x8, x8, lsr #32
    6cd0:	ldp	x29, x30, [sp], #96
    6cd4:	ret
    6cd8:	stp	x29, x30, [sp, #-32]!
    6cdc:	str	x19, [sp, #16]
    6ce0:	mov	x19, x0
    6ce4:	mov	w0, w1
    6ce8:	mov	x29, sp
    6cec:	bl	6d00 <ZSTD_initDStream_usingDDict@plt+0x21f0>
    6cf0:	str	w0, [x19]
    6cf4:	ldr	x19, [sp, #16]
    6cf8:	ldp	x29, x30, [sp], #32
    6cfc:	ret
    6d00:	rev	w0, w0
    6d04:	ret
    6d08:	stp	x29, x30, [sp, #-32]!
    6d0c:	str	x19, [sp, #16]
    6d10:	mov	x19, x0
    6d14:	mov	x0, x1
    6d18:	mov	x29, sp
    6d1c:	bl	6d30 <ZSTD_initDStream_usingDDict@plt+0x2220>
    6d20:	str	x0, [x19]
    6d24:	ldr	x19, [sp, #16]
    6d28:	ldp	x29, x30, [sp], #32
    6d2c:	ret
    6d30:	rev	x0, x0
    6d34:	ret
    6d38:	stp	x29, x30, [sp, #-16]!
    6d3c:	mov	x29, sp
    6d40:	bl	6d4c <ZSTD_initDStream_usingDDict@plt+0x223c>
    6d44:	ldp	x29, x30, [sp], #16
    6d48:	ret
    6d4c:	stp	x29, x30, [sp, #-16]!
    6d50:	mov	x29, sp
    6d54:	bl	6db0 <ZSTD_initDStream_usingDDict@plt+0x22a0>
    6d58:	bl	6d00 <ZSTD_initDStream_usingDDict@plt+0x21f0>
    6d5c:	ldp	x29, x30, [sp], #16
    6d60:	ret
    6d64:	stp	x29, x30, [sp, #-16]!
    6d68:	mov	x29, sp
    6d6c:	bl	6d78 <ZSTD_initDStream_usingDDict@plt+0x2268>
    6d70:	ldp	x29, x30, [sp], #16
    6d74:	ret
    6d78:	stp	x29, x30, [sp, #-16]!
    6d7c:	mov	x29, sp
    6d80:	bl	6e34 <ZSTD_initDStream_usingDDict@plt+0x2324>
    6d84:	bl	6d30 <ZSTD_initDStream_usingDDict@plt+0x2220>
    6d88:	ldp	x29, x30, [sp], #16
    6d8c:	ret
    6d90:	mov	w8, #0xca77                	// #51831
    6d94:	movk	w8, #0x85eb, lsl #16
    6d98:	madd	w8, w1, w8, w0
    6d9c:	mov	w9, #0x79b1                	// #31153
    6da0:	ror	w8, w8, #19
    6da4:	movk	w9, #0x9e37, lsl #16
    6da8:	mul	w0, w8, w9
    6dac:	ret
    6db0:	ldr	w0, [x0]
    6db4:	ret
    6db8:	mov	x8, #0xeb4f                	// #60239
    6dbc:	movk	x8, #0x27d4, lsl #16
    6dc0:	movk	x8, #0xae3d, lsl #32
    6dc4:	mov	x9, #0xca87                	// #51847
    6dc8:	movk	x8, #0xc2b2, lsl #48
    6dcc:	movk	x9, #0x85eb, lsl #16
    6dd0:	madd	x8, x1, x8, x0
    6dd4:	movk	x9, #0x79b1, lsl #32
    6dd8:	ror	x8, x8, #33
    6ddc:	movk	x9, #0x9e37, lsl #48
    6de0:	mul	x0, x8, x9
    6de4:	ret
    6de8:	stp	x29, x30, [sp, #-32]!
    6dec:	str	x19, [sp, #16]
    6df0:	mov	x19, x0
    6df4:	mov	x0, xzr
    6df8:	mov	x29, sp
    6dfc:	bl	6db8 <ZSTD_initDStream_usingDDict@plt+0x22a8>
    6e00:	mov	x9, #0xca87                	// #51847
    6e04:	mov	x10, #0xae63                	// #44643
    6e08:	eor	x8, x0, x19
    6e0c:	movk	x9, #0x85eb, lsl #16
    6e10:	movk	x10, #0xc2b2, lsl #16
    6e14:	ldr	x19, [sp, #16]
    6e18:	movk	x9, #0x79b1, lsl #32
    6e1c:	movk	x10, #0xca77, lsl #32
    6e20:	movk	x9, #0x9e37, lsl #48
    6e24:	movk	x10, #0x85eb, lsl #48
    6e28:	madd	x0, x8, x9, x10
    6e2c:	ldp	x29, x30, [sp], #32
    6e30:	ret
    6e34:	ldr	x0, [x0]
    6e38:	ret
    6e3c:	stp	x29, x30, [sp, #-16]!
    6e40:	mov	x29, sp
    6e44:	bl	4420 <memcpy@plt>
    6e48:	ldp	x29, x30, [sp], #16
    6e4c:	ret

0000000000006e50 <ZSTD_versionNumber@@Base>:
    6e50:	mov	w0, #0x28a4                	// #10404
    6e54:	ret

0000000000006e58 <ZSTD_versionString@@Base>:
    6e58:	adrp	x0, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    6e5c:	add	x0, x0, #0x66c
    6e60:	ret

0000000000006e64 <ZSTD_isError@@Base>:
    6e64:	stp	x29, x30, [sp, #-16]!
    6e68:	mov	x29, sp
    6e6c:	bl	6e78 <ZSTD_isError@@Base+0x14>
    6e70:	ldp	x29, x30, [sp], #16
    6e74:	ret
    6e78:	cmn	x0, #0x78
    6e7c:	cset	w0, hi  // hi = pmore
    6e80:	ret

0000000000006e84 <ZSTD_getErrorName@@Base>:
    6e84:	stp	x29, x30, [sp, #-16]!
    6e88:	mov	x29, sp
    6e8c:	bl	6e98 <ZSTD_getErrorName@@Base+0x14>
    6e90:	ldp	x29, x30, [sp], #16
    6e94:	ret
    6e98:	stp	x29, x30, [sp, #-16]!
    6e9c:	mov	x29, sp
    6ea0:	bl	6ec4 <ZSTD_getErrorCode@@Base+0x14>
    6ea4:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
    6ea8:	ldp	x29, x30, [sp], #16
    6eac:	ret

0000000000006eb0 <ZSTD_getErrorCode@@Base>:
    6eb0:	stp	x29, x30, [sp, #-16]!
    6eb4:	mov	x29, sp
    6eb8:	bl	6ec4 <ZSTD_getErrorCode@@Base+0x14>
    6ebc:	ldp	x29, x30, [sp], #16
    6ec0:	ret
    6ec4:	stp	x29, x30, [sp, #-32]!
    6ec8:	str	x19, [sp, #16]
    6ecc:	mov	x29, sp
    6ed0:	mov	x19, x0
    6ed4:	bl	6e78 <ZSTD_isError@@Base+0x14>
    6ed8:	cmp	w0, #0x0
    6edc:	csneg	w0, wzr, w19, eq  // eq = none
    6ee0:	ldr	x19, [sp, #16]
    6ee4:	ldp	x29, x30, [sp], #32
    6ee8:	ret

0000000000006eec <ZSTD_getErrorString@@Base>:
    6eec:	stp	x29, x30, [sp, #-16]!
    6ef0:	mov	x29, sp
    6ef4:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
    6ef8:	ldp	x29, x30, [sp], #16
    6efc:	ret
    6f00:	stp	x29, x30, [sp, #-16]!
    6f04:	ldr	x9, [x1]
    6f08:	mov	x8, x0
    6f0c:	mov	x29, sp
    6f10:	cbz	x9, 6f28 <ZSTD_getErrorString@@Base+0x3c>
    6f14:	ldr	x0, [x1, #16]
    6f18:	mov	x1, x8
    6f1c:	blr	x9
    6f20:	ldp	x29, x30, [sp], #16
    6f24:	ret
    6f28:	mov	x0, x8
    6f2c:	bl	4640 <malloc@plt>
    6f30:	ldp	x29, x30, [sp], #16
    6f34:	ret
    6f38:	stp	x29, x30, [sp, #-32]!
    6f3c:	stp	x20, x19, [sp, #16]
    6f40:	ldr	x8, [x1]
    6f44:	mov	x19, x0
    6f48:	mov	x29, sp
    6f4c:	cbz	x8, 6f70 <ZSTD_getErrorString@@Base+0x84>
    6f50:	ldr	x0, [x1, #16]
    6f54:	mov	x1, x19
    6f58:	blr	x8
    6f5c:	mov	w1, wzr
    6f60:	mov	x2, x19
    6f64:	mov	x20, x0
    6f68:	bl	46a0 <memset@plt>
    6f6c:	b	6f80 <ZSTD_getErrorString@@Base+0x94>
    6f70:	mov	w0, #0x1                   	// #1
    6f74:	mov	x1, x19
    6f78:	bl	4700 <calloc@plt>
    6f7c:	mov	x20, x0
    6f80:	mov	x0, x20
    6f84:	ldp	x20, x19, [sp, #16]
    6f88:	ldp	x29, x30, [sp], #32
    6f8c:	ret
    6f90:	stp	x29, x30, [sp, #-16]!
    6f94:	mov	x29, sp
    6f98:	cbz	x0, 6fc4 <ZSTD_getErrorString@@Base+0xd8>
    6f9c:	ldr	x9, [x1, #8]
    6fa0:	mov	x8, x0
    6fa4:	cbz	x9, 6fbc <ZSTD_getErrorString@@Base+0xd0>
    6fa8:	ldr	x0, [x1, #16]
    6fac:	mov	x1, x8
    6fb0:	blr	x9
    6fb4:	ldp	x29, x30, [sp], #16
    6fb8:	ret
    6fbc:	mov	x0, x8
    6fc0:	bl	4880 <free@plt>
    6fc4:	ldp	x29, x30, [sp], #16
    6fc8:	ret
    6fcc:	stp	x29, x30, [sp, #-96]!
    6fd0:	stp	x28, x27, [sp, #16]
    6fd4:	stp	x26, x25, [sp, #32]
    6fd8:	stp	x24, x23, [sp, #48]
    6fdc:	stp	x22, x21, [sp, #64]
    6fe0:	stp	x20, x19, [sp, #80]
    6fe4:	mov	x29, sp
    6fe8:	sub	sp, sp, #0x410
    6fec:	mov	w8, #0x1                   	// #1
    6ff0:	lsl	w8, w8, w3
    6ff4:	mov	w19, w3
    6ff8:	cmp	w3, #0x0
    6ffc:	lsr	w12, w8, #1
    7000:	lsr	x9, x5, x19
    7004:	csinc	w14, w12, wzr, ne  // ne = any
    7008:	cbz	x9, 715c <ZSTD_getErrorString@@Base+0x270>
    700c:	mov	w20, w2
    7010:	mov	x21, x1
    7014:	sub	w10, w8, #0x1
    7018:	add	x9, x0, #0x4
    701c:	lsr	w16, w8, #3
    7020:	adds	w17, w2, #0x1
    7024:	strh	w19, [x0]
    7028:	strh	w2, [x0, #2]
    702c:	str	wzr, [sp, #12]
    7030:	b.cc	7180 <ZSTD_getErrorString@@Base+0x294>  // b.lo, b.ul, b.last
    7034:	mov	w11, w10
    7038:	add	w12, w16, w12
    703c:	mov	w13, wzr
    7040:	mov	w15, wzr
    7044:	add	x22, x9, w14, uxtw #2
    7048:	add	w14, w8, #0x1
    704c:	add	x18, sp, #0xc
    7050:	add	w12, w12, #0x3
    7054:	str	w14, [x18, w17, uxtw #2]
    7058:	b	7068 <ZSTD_getErrorString@@Base+0x17c>
    705c:	add	w13, w13, #0x1
    7060:	cmp	w13, w20
    7064:	b.hi	709c <ZSTD_getErrorString@@Base+0x1b0>  // b.pmore
    7068:	ldrsh	w14, [x21, w13, uxtw #1]
    706c:	cmp	w14, #0x1
    7070:	b.lt	705c <ZSTD_getErrorString@@Base+0x170>  // b.tstop
    7074:	mov	w16, wzr
    7078:	strb	w13, [x4, w15, uxtw]
    707c:	add	w15, w12, w15
    7080:	and	w15, w15, w10
    7084:	cmp	w15, w11
    7088:	b.hi	707c <ZSTD_getErrorString@@Base+0x190>  // b.pmore
    708c:	add	w16, w16, #0x1
    7090:	cmp	w16, w14
    7094:	b.ne	7078 <ZSTD_getErrorString@@Base+0x18c>  // b.any
    7098:	b	705c <ZSTD_getErrorString@@Base+0x170>
    709c:	mov	x10, xzr
    70a0:	mov	w11, w8
    70a4:	add	x12, sp, #0xc
    70a8:	ldrb	w13, [x4, x10]
    70ac:	add	w15, w11, w10
    70b0:	add	x10, x10, #0x1
    70b4:	cmp	x10, x11
    70b8:	lsl	x13, x13, #2
    70bc:	ldr	w14, [x12, x13]
    70c0:	add	w16, w14, #0x1
    70c4:	str	w16, [x12, x13]
    70c8:	strh	w15, [x9, x14, lsl #1]
    70cc:	b.cc	70a8 <ZSTD_getErrorString@@Base+0x1bc>  // b.lo, b.ul, b.last
    70d0:	lsl	w10, w19, #16
    70d4:	sub	w24, w10, w8
    70d8:	mov	w9, wzr
    70dc:	mov	w23, wzr
    70e0:	add	w25, w24, #0x10, lsl #12
    70e4:	b	7104 <ZSTD_getErrorString@@Base+0x218>
    70e8:	add	x8, x22, x26, lsl #3
    70ec:	sub	w9, w23, #0x1
    70f0:	stp	w9, w24, [x8]
    70f4:	add	w23, w23, #0x1
    70f8:	add	w9, w26, #0x1
    70fc:	cmp	w9, w20
    7100:	b.hi	7154 <ZSTD_getErrorString@@Base+0x268>  // b.pmore
    7104:	ldrsh	w27, [x21, w9, uxtw #1]
    7108:	mov	w26, w9
    710c:	cmn	w27, #0x1
    7110:	b.eq	70e8 <ZSTD_getErrorString@@Base+0x1fc>  // b.none
    7114:	subs	w0, w27, #0x1
    7118:	b.eq	70e8 <ZSTD_getErrorString@@Base+0x1fc>  // b.none
    711c:	cbnz	w27, 712c <ZSTD_getErrorString@@Base+0x240>
    7120:	add	x8, x22, x26, lsl #3
    7124:	str	w25, [x8, #4]
    7128:	b	70f8 <ZSTD_getErrorString@@Base+0x20c>
    712c:	bl	71d0 <ZSTD_getErrorString@@Base+0x2e4>
    7130:	sub	w8, w19, w0
    7134:	lsl	w11, w27, w8
    7138:	lsl	w8, w8, #16
    713c:	add	x9, x22, x26, lsl #3
    7140:	sub	w10, w23, w27
    7144:	sub	w8, w8, w11
    7148:	add	w23, w23, w27
    714c:	stp	w10, w8, [x9]
    7150:	b	70f8 <ZSTD_getErrorString@@Base+0x20c>
    7154:	mov	x0, xzr
    7158:	b	7160 <ZSTD_getErrorString@@Base+0x274>
    715c:	mov	x0, #0xffffffffffffffd4    	// #-44
    7160:	add	sp, sp, #0x410
    7164:	ldp	x20, x19, [sp, #80]
    7168:	ldp	x22, x21, [sp, #64]
    716c:	ldp	x24, x23, [sp, #48]
    7170:	ldp	x26, x25, [sp, #32]
    7174:	ldp	x28, x27, [sp, #16]
    7178:	ldp	x29, x30, [sp], #96
    717c:	ret
    7180:	mov	w13, #0x1                   	// #1
    7184:	add	x15, sp, #0xc
    7188:	mov	w11, w10
    718c:	b	71a4 <ZSTD_getErrorString@@Base+0x2b8>
    7190:	add	w18, w0, w1
    7194:	str	w18, [x15, w13, uxtw #2]
    7198:	add	w13, w13, #0x1
    719c:	cmp	w13, w17
    71a0:	b.hi	7038 <ZSTD_getErrorString@@Base+0x14c>  // b.pmore
    71a4:	sub	w18, w13, #0x1
    71a8:	ldrsh	w1, [x21, w18, uxtw #1]
    71ac:	ldr	w0, [x15, w18, uxtw #2]
    71b0:	cmn	w1, #0x1
    71b4:	b.ne	7190 <ZSTD_getErrorString@@Base+0x2a4>  // b.any
    71b8:	add	w0, w0, #0x1
    71bc:	str	w0, [x15, w13, uxtw #2]
    71c0:	sub	w0, w11, #0x1
    71c4:	strb	w18, [x4, w11, uxtw]
    71c8:	mov	w11, w0
    71cc:	b	7198 <ZSTD_getErrorString@@Base+0x2ac>
    71d0:	clz	w8, w0
    71d4:	eor	w0, w8, #0x1f
    71d8:	ret
    71dc:	stp	x29, x30, [sp, #-32]!
    71e0:	str	x28, [sp, #16]
    71e4:	mov	x29, sp
    71e8:	sub	sp, sp, #0x1, lsl #12
    71ec:	mov	x4, sp
    71f0:	mov	w5, #0x1000                	// #4096
    71f4:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
    71f8:	add	sp, sp, #0x1, lsl #12
    71fc:	ldr	x28, [sp, #16]
    7200:	ldp	x29, x30, [sp], #32
    7204:	ret
    7208:	add	w8, w0, #0x1
    720c:	mul	w8, w8, w1
    7210:	lsr	w8, w8, #3
    7214:	cmp	w0, #0x0
    7218:	add	w8, w8, #0x3
    721c:	mov	w9, #0x200                 	// #512
    7220:	csel	w0, w9, w8, eq  // eq = none
    7224:	ret
    7228:	stp	x29, x30, [sp, #-64]!
    722c:	cmp	w4, #0xc
    7230:	str	x23, [sp, #16]
    7234:	stp	x22, x21, [sp, #32]
    7238:	stp	x20, x19, [sp, #48]
    723c:	mov	x29, sp
    7240:	b.ls	724c <ZSTD_getErrorString@@Base+0x360>  // b.plast
    7244:	mov	x0, #0xffffffffffffffd4    	// #-44
    7248:	b	72bc <ZSTD_getErrorString@@Base+0x3d0>
    724c:	mov	w19, w4
    7250:	cmp	w4, #0x5
    7254:	b.cs	7260 <ZSTD_getErrorString@@Base+0x374>  // b.hs, b.nlast
    7258:	mov	x0, #0xffffffffffffffff    	// #-1
    725c:	b	72bc <ZSTD_getErrorString@@Base+0x3d0>
    7260:	mov	x22, x1
    7264:	mov	x23, x0
    7268:	mov	w0, w3
    726c:	mov	w1, w19
    7270:	mov	w20, w3
    7274:	mov	x21, x2
    7278:	bl	7208 <ZSTD_getErrorString@@Base+0x31c>
    727c:	cmp	x0, x22
    7280:	b.ls	72a0 <ZSTD_getErrorString@@Base+0x3b4>  // b.plast
    7284:	mov	x0, x23
    7288:	mov	x1, x22
    728c:	mov	x2, x21
    7290:	mov	w3, w20
    7294:	mov	w4, w19
    7298:	mov	w5, wzr
    729c:	b	72b8 <ZSTD_getErrorString@@Base+0x3cc>
    72a0:	mov	w5, #0x1                   	// #1
    72a4:	mov	x0, x23
    72a8:	mov	x1, x22
    72ac:	mov	x2, x21
    72b0:	mov	w3, w20
    72b4:	mov	w4, w19
    72b8:	bl	72d0 <ZSTD_getErrorString@@Base+0x3e4>
    72bc:	ldp	x20, x19, [sp, #48]
    72c0:	ldp	x22, x21, [sp, #32]
    72c4:	ldr	x23, [sp, #16]
    72c8:	ldp	x29, x30, [sp], #64
    72cc:	ret
    72d0:	stp	x20, x19, [sp, #-16]!
    72d4:	mov	w8, #0x1                   	// #1
    72d8:	lsl	w14, w8, w4
    72dc:	add	x10, x0, x1
    72e0:	sub	w9, w4, #0x5
    72e4:	cmp	w4, #0x1f
    72e8:	add	w11, w14, #0x1
    72ec:	mov	w12, #0x4                   	// #4
    72f0:	b.eq	750c <ZSTD_getErrorString@@Base+0x620>  // b.none
    72f4:	add	w15, w3, #0x1
    72f8:	cbz	w15, 750c <ZSTD_getErrorString@@Base+0x620>
    72fc:	mov	w6, wzr
    7300:	mov	w3, wzr
    7304:	add	w1, w4, #0x1
    7308:	sub	x16, x10, #0x2
    730c:	mov	w12, #0x4                   	// #4
    7310:	mov	w17, #0x3                   	// #3
    7314:	mov	w18, #0xffff                	// #65535
    7318:	mov	x13, x0
    731c:	cbz	w6, 7438 <ZSTD_getErrorString@@Base+0x54c>
    7320:	cmp	w3, w15
    7324:	mov	w4, w3
    7328:	b.cs	7348 <ZSTD_getErrorString@@Base+0x45c>  // b.hs, b.nlast
    732c:	mov	w4, w3
    7330:	ldrh	w6, [x2, w4, uxtw #1]
    7334:	cbnz	w6, 7348 <ZSTD_getErrorString@@Base+0x45c>
    7338:	add	w4, w4, #0x1
    733c:	cmp	w15, w4
    7340:	b.ne	7330 <ZSTD_getErrorString@@Base+0x444>  // b.any
    7344:	mov	w4, w15
    7348:	cmp	w4, w15
    734c:	b.ne	735c <ZSTD_getErrorString@@Base+0x470>  // b.any
    7350:	mov	w3, #0x3                   	// #3
    7354:	cbz	w3, 7434 <ZSTD_getErrorString@@Base+0x548>
    7358:	b	755c <ZSTD_getErrorString@@Base+0x670>
    735c:	add	w6, w3, #0x18
    7360:	cmp	w4, w6
    7364:	b.cs	73cc <ZSTD_getErrorString@@Base+0x4e0>  // b.hs, b.nlast
    7368:	mov	w6, w3
    736c:	add	w3, w6, #0x3
    7370:	cmp	w4, w3
    7374:	b.cc	7394 <ZSTD_getErrorString@@Base+0x4a8>  // b.lo, b.ul, b.last
    7378:	lsl	w3, w17, w12
    737c:	add	w7, w6, #0x6
    7380:	add	w6, w6, #0x3
    7384:	add	w9, w3, w9
    7388:	cmp	w4, w7
    738c:	add	w12, w12, #0x2
    7390:	b.cs	7378 <ZSTD_getErrorString@@Base+0x48c>  // b.hs, b.nlast
    7394:	sub	w3, w4, w6
    7398:	lsl	w3, w3, w12
    739c:	cmp	w12, #0xf
    73a0:	add	w9, w3, w9
    73a4:	add	w6, w12, #0x2
    73a8:	b.lt	7410 <ZSTD_getErrorString@@Base+0x524>  // b.tstop
    73ac:	cbnz	w5, 7420 <ZSTD_getErrorString@@Base+0x534>
    73b0:	cmp	x13, x16
    73b4:	b.ls	7420 <ZSTD_getErrorString@@Base+0x534>  // b.plast
    73b8:	mov	x8, #0xffffffffffffffba    	// #-70
    73bc:	mov	w3, #0x1                   	// #1
    73c0:	mov	w12, w6
    73c4:	cbz	w3, 7434 <ZSTD_getErrorString@@Base+0x548>
    73c8:	b	755c <ZSTD_getErrorString@@Base+0x670>
    73cc:	lsl	w7, w18, w12
    73d0:	b	73f0 <ZSTD_getErrorString@@Base+0x504>
    73d4:	add	w6, w3, #0x18
    73d8:	add	w3, w3, #0x30
    73dc:	strh	w9, [x13], #2
    73e0:	cmp	w4, w3
    73e4:	lsr	w9, w9, #16
    73e8:	mov	w3, w6
    73ec:	b.cc	736c <ZSTD_getErrorString@@Base+0x480>  // b.lo, b.ul, b.last
    73f0:	add	w9, w9, w7
    73f4:	cbnz	w5, 73d4 <ZSTD_getErrorString@@Base+0x4e8>
    73f8:	cmp	x13, x16
    73fc:	b.ls	73d4 <ZSTD_getErrorString@@Base+0x4e8>  // b.plast
    7400:	mov	x8, #0xffffffffffffffba    	// #-70
    7404:	mov	w3, #0x1                   	// #1
    7408:	cbz	w3, 7434 <ZSTD_getErrorString@@Base+0x548>
    740c:	b	755c <ZSTD_getErrorString@@Base+0x670>
    7410:	mov	w3, wzr
    7414:	mov	w12, w6
    7418:	cbz	w3, 7434 <ZSTD_getErrorString@@Base+0x548>
    741c:	b	755c <ZSTD_getErrorString@@Base+0x670>
    7420:	mov	w3, wzr
    7424:	strh	w9, [x13], #2
    7428:	lsr	w9, w9, #16
    742c:	sub	w12, w12, #0xe
    7430:	cbnz	w3, 755c <ZSTD_getErrorString@@Base+0x670>
    7434:	mov	w3, w4
    7438:	ldrsh	w4, [x2, w3, uxtw #1]
    743c:	mvn	w6, w11
    7440:	add	w6, w6, w14, lsl #1
    7444:	cmp	w4, #0x0
    7448:	add	w7, w4, #0x1
    744c:	cneg	w4, w4, mi  // mi = first
    7450:	cmp	w7, w14
    7454:	sub	w11, w11, w4
    7458:	csel	w4, wzr, w6, lt  // lt = tstop
    745c:	add	w19, w4, w7
    7460:	cmp	w19, w6
    7464:	cset	w7, lt  // lt = tstop
    7468:	cmp	w19, #0x1
    746c:	cset	w6, eq  // eq = none
    7470:	cmp	w11, #0x1
    7474:	b.lt	74a0 <ZSTD_getErrorString@@Base+0x5b4>  // b.tstop
    7478:	cmp	w11, w14
    747c:	b.ge	74b4 <ZSTD_getErrorString@@Base+0x5c8>  // b.tcont
    7480:	mov	w4, w1
    7484:	asr	w14, w14, #1
    7488:	cmp	w11, w14
    748c:	sub	w4, w4, #0x1
    7490:	b.lt	7484 <ZSTD_getErrorString@@Base+0x598>  // b.tstop
    7494:	mov	w20, #0x1                   	// #1
    7498:	cbnz	w20, 74c0 <ZSTD_getErrorString@@Base+0x5d4>
    749c:	b	7564 <ZSTD_getErrorString@@Base+0x678>
    74a0:	mov	w20, wzr
    74a4:	mov	x8, #0xffffffffffffffff    	// #-1
    74a8:	mov	w4, w1
    74ac:	cbnz	w20, 74c0 <ZSTD_getErrorString@@Base+0x5d4>
    74b0:	b	7564 <ZSTD_getErrorString@@Base+0x678>
    74b4:	mov	w20, #0x1                   	// #1
    74b8:	mov	w4, w1
    74bc:	cbz	w20, 7564 <ZSTD_getErrorString@@Base+0x678>
    74c0:	lsl	w19, w19, w12
    74c4:	add	w12, w12, w1
    74c8:	sub	w12, w12, w7
    74cc:	cmp	w12, #0x11
    74d0:	add	w9, w19, w9
    74d4:	b.lt	74f0 <ZSTD_getErrorString@@Base+0x604>  // b.tstop
    74d8:	cbnz	w5, 74e4 <ZSTD_getErrorString@@Base+0x5f8>
    74dc:	cmp	x13, x16
    74e0:	b.hi	7528 <ZSTD_getErrorString@@Base+0x63c>  // b.pmore
    74e4:	strh	w9, [x13], #2
    74e8:	lsr	w9, w9, #16
    74ec:	sub	w12, w12, #0x10
    74f0:	cmp	w11, #0x2
    74f4:	b.lt	7510 <ZSTD_getErrorString@@Base+0x624>  // b.tstop
    74f8:	add	w3, w3, #0x1
    74fc:	cmp	w3, w15
    7500:	mov	w1, w4
    7504:	b.cc	731c <ZSTD_getErrorString@@Base+0x430>  // b.lo, b.ul, b.last
    7508:	b	7510 <ZSTD_getErrorString@@Base+0x624>
    750c:	mov	x13, x0
    7510:	cmp	w11, #0x1
    7514:	b.ne	7530 <ZSTD_getErrorString@@Base+0x644>  // b.any
    7518:	cbnz	w5, 7538 <ZSTD_getErrorString@@Base+0x64c>
    751c:	sub	x8, x10, #0x2
    7520:	cmp	x13, x8
    7524:	b.ls	7538 <ZSTD_getErrorString@@Base+0x64c>  // b.plast
    7528:	mov	x8, #0xffffffffffffffba    	// #-70
    752c:	b	7564 <ZSTD_getErrorString@@Base+0x678>
    7530:	mov	x8, #0xffffffffffffffff    	// #-1
    7534:	b	7564 <ZSTD_getErrorString@@Base+0x678>
    7538:	add	w8, w12, #0x7
    753c:	strh	w9, [x13]
    7540:	add	w9, w12, #0xe
    7544:	cmp	w8, #0x0
    7548:	csel	w8, w9, w8, lt  // lt = tstop
    754c:	asr	w8, w8, #3
    7550:	add	x8, x13, w8, sxtw
    7554:	sub	x8, x8, x0
    7558:	b	7564 <ZSTD_getErrorString@@Base+0x678>
    755c:	cmp	w3, #0x3
    7560:	b.eq	7510 <ZSTD_getErrorString@@Base+0x624>  // b.none
    7564:	mov	x0, x8
    7568:	ldp	x20, x19, [sp], #16
    756c:	ret
    7570:	stp	x29, x30, [sp, #-16]!
    7574:	cmp	w1, #0xf
    7578:	mov	w8, #0xf                   	// #15
    757c:	csel	w8, w1, w8, cc  // cc = lo, ul, last
    7580:	sub	w8, w8, #0x1
    7584:	mov	w9, #0x1                   	// #1
    7588:	lsl	w8, w9, w8
    758c:	add	w8, w8, w0, lsl #1
    7590:	add	w8, w8, #0x3
    7594:	lsl	x0, x8, #2
    7598:	mov	x29, sp
    759c:	bl	4640 <malloc@plt>
    75a0:	ldp	x29, x30, [sp], #16
    75a4:	ret
    75a8:	stp	x29, x30, [sp, #-16]!
    75ac:	mov	x29, sp
    75b0:	bl	4880 <free@plt>
    75b4:	ldp	x29, x30, [sp], #16
    75b8:	ret
    75bc:	stp	x29, x30, [sp, #-48]!
    75c0:	stp	x22, x21, [sp, #16]
    75c4:	mov	x21, x1
    75c8:	mov	w22, w0
    75cc:	sub	w0, w21, #0x1
    75d0:	stp	x20, x19, [sp, #32]
    75d4:	mov	x29, sp
    75d8:	mov	w19, w3
    75dc:	mov	w20, w2
    75e0:	bl	71d0 <ZSTD_getErrorString@@Base+0x2e4>
    75e4:	sub	w19, w0, w19
    75e8:	mov	x0, x21
    75ec:	mov	w1, w20
    75f0:	bl	7638 <ZSTD_getErrorString@@Base+0x74c>
    75f4:	cmp	w22, #0x0
    75f8:	mov	w8, #0xb                   	// #11
    75fc:	csel	w8, w8, w22, eq  // eq = none
    7600:	cmp	w19, w8
    7604:	csel	w8, w19, w8, cc  // cc = lo, ul, last
    7608:	cmp	w0, w8
    760c:	csel	w8, w0, w8, hi  // hi = pmore
    7610:	mov	w9, #0x5                   	// #5
    7614:	cmp	w8, #0x5
    7618:	ldp	x20, x19, [sp, #32]
    761c:	ldp	x22, x21, [sp, #16]
    7620:	csel	w8, w8, w9, hi  // hi = pmore
    7624:	cmp	w8, #0xc
    7628:	mov	w9, #0xc                   	// #12
    762c:	csel	w0, w8, w9, cc  // cc = lo, ul, last
    7630:	ldp	x29, x30, [sp], #48
    7634:	ret
    7638:	stp	x29, x30, [sp, #-48]!
    763c:	str	x21, [sp, #16]
    7640:	stp	x20, x19, [sp, #32]
    7644:	mov	x29, sp
    7648:	mov	w19, w1
    764c:	bl	71d0 <ZSTD_getErrorString@@Base+0x2e4>
    7650:	mov	w20, w0
    7654:	add	w21, w0, #0x1
    7658:	mov	w0, w19
    765c:	bl	71d0 <ZSTD_getErrorString@@Base+0x2e4>
    7660:	add	w8, w0, #0x2
    7664:	cmp	w21, w8
    7668:	csinc	w0, w8, w20, cs  // cs = hs, nlast
    766c:	ldp	x20, x19, [sp, #32]
    7670:	ldr	x21, [sp, #16]
    7674:	ldp	x29, x30, [sp], #48
    7678:	ret
    767c:	stp	x29, x30, [sp, #-16]!
    7680:	mov	w3, #0x2                   	// #2
    7684:	mov	x29, sp
    7688:	bl	75bc <ZSTD_getErrorString@@Base+0x6d0>
    768c:	ldp	x29, x30, [sp], #16
    7690:	ret
    7694:	stp	x29, x30, [sp, #-64]!
    7698:	cmp	w1, #0x0
    769c:	mov	w8, #0xb                   	// #11
    76a0:	stp	x24, x23, [sp, #16]
    76a4:	csel	w23, w8, w1, eq  // eq = none
    76a8:	cmp	w23, #0x5
    76ac:	stp	x22, x21, [sp, #32]
    76b0:	stp	x20, x19, [sp, #48]
    76b4:	mov	x29, sp
    76b8:	b.cs	76c4 <ZSTD_getErrorString@@Base+0x7d8>  // b.hs, b.nlast
    76bc:	mov	x0, #0xffffffffffffffff    	// #-1
    76c0:	b	7828 <ZSTD_getErrorString@@Base+0x93c>
    76c4:	cmp	w23, #0xc
    76c8:	b.ls	76d4 <ZSTD_getErrorString@@Base+0x7e8>  // b.plast
    76cc:	mov	x0, #0xffffffffffffffd4    	// #-44
    76d0:	b	7828 <ZSTD_getErrorString@@Base+0x93c>
    76d4:	mov	x22, x0
    76d8:	mov	x0, x3
    76dc:	mov	w1, w4
    76e0:	mov	w19, w4
    76e4:	mov	x20, x3
    76e8:	mov	x21, x2
    76ec:	bl	7638 <ZSTD_getErrorString@@Base+0x74c>
    76f0:	cmp	w23, w0
    76f4:	b.cc	76bc <ZSTD_getErrorString@@Base+0x7d0>  // b.lo, b.ul, b.last
    76f8:	mov	w10, #0x3e                  	// #62
    76fc:	mov	x14, #0x4000000000000000    	// #4611686018427387904
    7700:	mov	w15, #0x1                   	// #1
    7704:	adrp	x12, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    7708:	sub	w13, w10, w23
    770c:	mov	w9, wzr
    7710:	mov	w8, wzr
    7714:	mov	w17, wzr
    7718:	mov	w24, w23
    771c:	lsr	x11, x20, x23
    7720:	add	x12, x12, #0x674
    7724:	udiv	x14, x14, x20
    7728:	lsl	w10, w15, w23
    772c:	sub	x15, x13, #0x14
    7730:	mov	w16, #0xffff                	// #65535
    7734:	b	7748 <ZSTD_getErrorString@@Base+0x85c>
    7738:	strh	wzr, [x22, x17, lsl #1]
    773c:	add	w17, w17, #0x1
    7740:	cmp	w17, w19
    7744:	b.hi	77c0 <ZSTD_getErrorString@@Base+0x8d4>  // b.pmore
    7748:	ldr	w18, [x21, w17, uxtw #2]
    774c:	cmp	x18, x20
    7750:	b.eq	77e4 <ZSTD_getErrorString@@Base+0x8f8>  // b.none
    7754:	mov	w17, w17
    7758:	cbz	w18, 7738 <ZSTD_getErrorString@@Base+0x84c>
    775c:	cmp	w18, w11
    7760:	b.ls	77b4 <ZSTD_getErrorString@@Base+0x8c8>  // b.plast
    7764:	mul	x0, x14, x18
    7768:	lsr	x1, x0, x13
    776c:	sxth	w18, w1
    7770:	cmp	w18, #0x7
    7774:	b.gt	7798 <ZSTD_getErrorString@@Base+0x8ac>
    7778:	sbfiz	x2, x1, #2, #16
    777c:	ldr	w2, [x12, x2]
    7780:	sxth	x1, w1
    7784:	lsl	x1, x1, x13
    7788:	sub	x0, x0, x1
    778c:	lsl	x2, x2, x15
    7790:	cmp	x0, x2
    7794:	cinc	w18, w18, hi  // hi = pmore
    7798:	sxth	w0, w18
    779c:	cmp	w0, w9, sxth
    77a0:	csel	w8, w17, w8, gt
    77a4:	csel	w9, w18, w9, gt
    77a8:	sub	w10, w10, w0
    77ac:	strh	w18, [x22, x17, lsl #1]
    77b0:	b	773c <ZSTD_getErrorString@@Base+0x850>
    77b4:	strh	w16, [x22, x17, lsl #1]
    77b8:	sub	w10, w10, #0x1
    77bc:	b	773c <ZSTD_getErrorString@@Base+0x850>
    77c0:	ldrh	w9, [x22, w8, uxtw #1]
    77c4:	neg	w11, w10
    77c8:	sxth	w12, w9
    77cc:	cmp	w11, w12, asr #1
    77d0:	b.ge	77f0 <ZSTD_getErrorString@@Base+0x904>  // b.tcont
    77d4:	mov	w8, w8
    77d8:	add	w9, w9, w10
    77dc:	strh	w9, [x22, x8, lsl #1]
    77e0:	b	781c <ZSTD_getErrorString@@Base+0x930>
    77e4:	mov	x19, xzr
    77e8:	mov	w8, #0x1                   	// #1
    77ec:	b	7820 <ZSTD_getErrorString@@Base+0x934>
    77f0:	mov	x0, x22
    77f4:	mov	w1, w23
    77f8:	mov	x2, x21
    77fc:	mov	x3, x20
    7800:	mov	w4, w19
    7804:	bl	783c <ZSTD_getErrorString@@Base+0x950>
    7808:	mov	x19, x0
    780c:	bl	7a4c <ZSTD_getErrorString@@Base+0xb60>
    7810:	cmp	w0, #0x0
    7814:	cset	w8, ne  // ne = any
    7818:	cbnz	w0, 7820 <ZSTD_getErrorString@@Base+0x934>
    781c:	mov	w8, wzr
    7820:	cmp	w8, #0x0
    7824:	csel	x0, x24, x19, eq  // eq = none
    7828:	ldp	x20, x19, [sp, #48]
    782c:	ldp	x22, x21, [sp, #32]
    7830:	ldp	x24, x23, [sp, #16]
    7834:	ldp	x29, x30, [sp], #64
    7838:	ret
    783c:	add	x10, x3, x3, lsl #1
    7840:	add	w13, w1, #0x1
    7844:	mov	w14, wzr
    7848:	mov	w8, wzr
    784c:	lsr	x9, x3, x1
    7850:	mov	w11, #0xfffe                	// #65534
    7854:	mov	w12, #0x1                   	// #1
    7858:	lsr	x10, x10, x13
    785c:	mov	w13, #0xffff                	// #65535
    7860:	b	7874 <ZSTD_getErrorString@@Base+0x988>
    7864:	strh	wzr, [x0, x14, lsl #1]
    7868:	add	w14, w14, #0x1
    786c:	cmp	w14, w4
    7870:	b.hi	78b0 <ZSTD_getErrorString@@Base+0x9c4>  // b.pmore
    7874:	ldr	w15, [x2, w14, uxtw #2]
    7878:	mov	w14, w14
    787c:	cbz	w15, 7864 <ZSTD_getErrorString@@Base+0x978>
    7880:	cmp	w15, w9
    7884:	b.ls	7898 <ZSTD_getErrorString@@Base+0x9ac>  // b.plast
    7888:	cmp	w15, w10
    788c:	b.ls	78a0 <ZSTD_getErrorString@@Base+0x9b4>  // b.plast
    7890:	strh	w11, [x0, x14, lsl #1]
    7894:	b	7868 <ZSTD_getErrorString@@Base+0x97c>
    7898:	strh	w13, [x0, x14, lsl #1]
    789c:	b	78a4 <ZSTD_getErrorString@@Base+0x9b8>
    78a0:	strh	w12, [x0, x14, lsl #1]
    78a4:	add	w8, w8, #0x1
    78a8:	sub	x3, x3, x15
    78ac:	b	7868 <ZSTD_getErrorString@@Base+0x97c>
    78b0:	mov	w9, #0x1                   	// #1
    78b4:	lsl	w11, w9, w1
    78b8:	subs	w9, w11, w8
    78bc:	b.eq	7a44 <ZSTD_getErrorString@@Base+0xb58>  // b.none
    78c0:	mov	w12, w9
    78c4:	udiv	x12, x3, x12
    78c8:	cmp	x12, w10, uxtw
    78cc:	b.ls	7924 <ZSTD_getErrorString@@Base+0xa38>  // b.plast
    78d0:	add	x10, x3, x3, lsl #1
    78d4:	lsl	w9, w9, #1
    78d8:	mov	w12, wzr
    78dc:	udiv	x9, x10, x9
    78e0:	mov	w10, #0x1                   	// #1
    78e4:	b	78f4 <ZSTD_getErrorString@@Base+0xa08>
    78e8:	add	w12, w12, #0x1
    78ec:	cmp	w12, w4
    78f0:	b.hi	7920 <ZSTD_getErrorString@@Base+0xa34>  // b.pmore
    78f4:	ldrsh	w13, [x0, w12, uxtw #1]
    78f8:	mov	w12, w12
    78fc:	cmn	w13, #0x2
    7900:	b.ne	78e8 <ZSTD_getErrorString@@Base+0x9fc>  // b.any
    7904:	ldr	w13, [x2, x12, lsl #2]
    7908:	cmp	w13, w9
    790c:	b.hi	78e8 <ZSTD_getErrorString@@Base+0x9fc>  // b.pmore
    7910:	add	w8, w8, #0x1
    7914:	sub	x3, x3, x13
    7918:	strh	w10, [x0, x12, lsl #1]
    791c:	b	78e8 <ZSTD_getErrorString@@Base+0x9fc>
    7920:	sub	w9, w11, w8
    7924:	add	w10, w4, #0x1
    7928:	cmp	w8, w10
    792c:	b.ne	7974 <ZSTD_getErrorString@@Base+0xa88>  // b.any
    7930:	mov	w8, wzr
    7934:	mov	w11, wzr
    7938:	mov	w10, wzr
    793c:	ldr	w12, [x2, w8, uxtw #2]
    7940:	cmp	w12, w11
    7944:	csel	w10, w8, w10, hi  // hi = pmore
    7948:	add	w8, w8, #0x1
    794c:	csel	w11, w12, w11, hi  // hi = pmore
    7950:	cmp	w8, w4
    7954:	b.ls	793c <ZSTD_getErrorString@@Base+0xa50>  // b.plast
    7958:	mov	w8, w10
    795c:	lsl	x8, x8, #1
    7960:	ldrh	w10, [x0, x8]
    7964:	add	w9, w10, w9
    7968:	strh	w9, [x0, x8]
    796c:	mov	x0, xzr
    7970:	ret
    7974:	cbz	x3, 7a08 <ZSTD_getErrorString@@Base+0xb1c>
    7978:	mov	w8, #0x3e                  	// #62
    797c:	sub	w8, w8, w1
    7980:	mov	x10, #0xffffffffffffffff    	// #-1
    7984:	sub	x12, x8, #0x1
    7988:	mov	w9, w9
    798c:	lsl	x10, x10, x12
    7990:	mvn	x10, x10
    7994:	lsl	x9, x9, x8
    7998:	add	x9, x9, x10
    799c:	mov	w11, wzr
    79a0:	udiv	x9, x9, x3
    79a4:	b	79b4 <ZSTD_getErrorString@@Base+0xac8>
    79a8:	mov	w12, #0x1                   	// #1
    79ac:	cbz	w12, 79ec <ZSTD_getErrorString@@Base+0xb00>
    79b0:	b	79fc <ZSTD_getErrorString@@Base+0xb10>
    79b4:	ldrsh	w12, [x0, w11, uxtw #1]
    79b8:	mov	w11, w11
    79bc:	cmn	w12, #0x2
    79c0:	b.ne	79ec <ZSTD_getErrorString@@Base+0xb00>  // b.any
    79c4:	ldr	w12, [x2, x11, lsl #2]
    79c8:	madd	x13, x9, x12, x10
    79cc:	lsr	x12, x10, x8
    79d0:	lsr	x14, x13, x8
    79d4:	subs	w14, w14, w12
    79d8:	b.eq	79a8 <ZSTD_getErrorString@@Base+0xabc>  // b.none
    79dc:	mov	w12, wzr
    79e0:	mov	x10, x13
    79e4:	strh	w14, [x0, x11, lsl #1]
    79e8:	cbnz	w12, 79fc <ZSTD_getErrorString@@Base+0xb10>
    79ec:	add	w11, w11, #0x1
    79f0:	cmp	w11, w4
    79f4:	b.ls	79b4 <ZSTD_getErrorString@@Base+0xac8>  // b.plast
    79f8:	mov	w12, wzr
    79fc:	cmp	w12, #0x0
    7a00:	csetm	x0, ne  // ne = any
    7a04:	ret
    7a08:	cbz	w9, 7a44 <ZSTD_getErrorString@@Base+0xb58>
    7a0c:	mov	w8, wzr
    7a10:	b	7a24 <ZSTD_getErrorString@@Base+0xb38>
    7a14:	add	w8, w8, #0x1
    7a18:	udiv	w11, w8, w10
    7a1c:	msub	w8, w11, w10, w8
    7a20:	cbz	w9, 7a44 <ZSTD_getErrorString@@Base+0xb58>
    7a24:	ldrsh	w11, [x0, w8, uxtw #1]
    7a28:	mov	w8, w8
    7a2c:	cmp	w11, #0x1
    7a30:	b.lt	7a14 <ZSTD_getErrorString@@Base+0xb28>  // b.tstop
    7a34:	sub	w9, w9, #0x1
    7a38:	add	w11, w11, #0x1
    7a3c:	strh	w11, [x0, x8, lsl #1]
    7a40:	b	7a14 <ZSTD_getErrorString@@Base+0xb28>
    7a44:	mov	x0, xzr
    7a48:	ret
    7a4c:	cmn	x0, #0x78
    7a50:	cset	w0, hi  // hi = pmore
    7a54:	ret
    7a58:	cbz	w1, 7ac4 <ZSTD_getErrorString@@Base+0xbd8>
    7a5c:	mov	w8, #0x1                   	// #1
    7a60:	lsl	w12, w8, w1
    7a64:	add	x11, x0, #0x4
    7a68:	lsr	w9, w12, #1
    7a6c:	mov	x10, xzr
    7a70:	sub	w8, w12, #0x1
    7a74:	add	x9, x11, w9, uxtw #2
    7a78:	mov	w13, w12
    7a7c:	strh	w1, [x0]
    7a80:	strh	w8, [x0, #2]
    7a84:	add	w14, w13, w10
    7a88:	strh	w14, [x11, x10, lsl #1]
    7a8c:	add	x10, x10, #0x1
    7a90:	cmp	x10, x13
    7a94:	b.cc	7a84 <ZSTD_getErrorString@@Base+0xb98>  // b.lo, b.ul, b.last
    7a98:	lsl	w11, w1, #16
    7a9c:	mov	w10, wzr
    7aa0:	sub	w11, w11, w12
    7aa4:	add	x12, x9, w10, uxtw #3
    7aa8:	sub	w13, w10, #0x1
    7aac:	add	w10, w10, #0x1
    7ab0:	cmp	w10, w8
    7ab4:	stp	w13, w11, [x12]
    7ab8:	b.ls	7aa4 <ZSTD_getErrorString@@Base+0xbb8>  // b.plast
    7abc:	mov	x0, xzr
    7ac0:	ret
    7ac4:	mov	x0, #0xffffffffffffffff    	// #-1
    7ac8:	ret
    7acc:	and	w9, w1, #0xff
    7ad0:	add	x8, x0, w1, uxtb #3
    7ad4:	strh	wzr, [x0]
    7ad8:	str	wzr, [x0, #4]
    7adc:	strh	w9, [x0, #2]
    7ae0:	mov	x0, xzr
    7ae4:	str	xzr, [x8, #8]
    7ae8:	ret
    7aec:	stp	x29, x30, [sp, #-16]!
    7af0:	add	x8, x3, x3, lsr #7
    7af4:	add	x8, x8, #0xc
    7af8:	cmp	x8, x1
    7afc:	cset	w5, ls  // ls = plast
    7b00:	mov	x29, sp
    7b04:	bl	7b10 <ZSTD_getErrorString@@Base+0xc24>
    7b08:	ldp	x29, x30, [sp], #16
    7b0c:	ret
    7b10:	sub	sp, sp, #0xb0
    7b14:	cmp	x3, #0x3
    7b18:	stp	x29, x30, [sp, #112]
    7b1c:	str	x23, [sp, #128]
    7b20:	stp	x22, x21, [sp, #144]
    7b24:	stp	x20, x19, [sp, #160]
    7b28:	add	x29, sp, #0x70
    7b2c:	b.cc	7b58 <ZSTD_getErrorString@@Base+0xc6c>  // b.lo, b.ul, b.last
    7b30:	mov	x20, x2
    7b34:	mov	x2, x1
    7b38:	mov	x1, x0
    7b3c:	sub	x0, x29, #0x28
    7b40:	mov	w19, w5
    7b44:	mov	x22, x4
    7b48:	mov	x21, x3
    7b4c:	bl	7f44 <ZSTD_getErrorString@@Base+0x1058>
    7b50:	bl	7a4c <ZSTD_getErrorString@@Base+0xb60>
    7b54:	cbz	w0, 7b74 <ZSTD_getErrorString@@Base+0xc88>
    7b58:	mov	x0, xzr
    7b5c:	ldp	x20, x19, [sp, #160]
    7b60:	ldp	x22, x21, [sp, #144]
    7b64:	ldr	x23, [sp, #128]
    7b68:	ldp	x29, x30, [sp, #112]
    7b6c:	add	sp, sp, #0xb0
    7b70:	ret
    7b74:	add	x23, x20, x21
    7b78:	ldrb	w2, [x23, #-1]!
    7b7c:	tbnz	w21, #0, 7ba4 <ZSTD_getErrorString@@Base+0xcb8>
    7b80:	add	x0, sp, #0x8
    7b84:	mov	x1, x22
    7b88:	bl	7f70 <ZSTD_getErrorString@@Base+0x1084>
    7b8c:	ldrb	w2, [x23, #-1]!
    7b90:	add	x0, sp, #0x28
    7b94:	mov	x1, x22
    7b98:	bl	7f70 <ZSTD_getErrorString@@Base+0x1084>
    7b9c:	tbnz	w21, #1, 7c28 <ZSTD_getErrorString@@Base+0xd3c>
    7ba0:	b	7bec <ZSTD_getErrorString@@Base+0xd00>
    7ba4:	add	x0, sp, #0x28
    7ba8:	mov	x1, x22
    7bac:	bl	7f70 <ZSTD_getErrorString@@Base+0x1084>
    7bb0:	ldurb	w2, [x23, #-1]
    7bb4:	add	x0, sp, #0x8
    7bb8:	mov	x1, x22
    7bbc:	bl	7f70 <ZSTD_getErrorString@@Base+0x1084>
    7bc0:	ldrb	w2, [x23, #-2]!
    7bc4:	sub	x0, x29, #0x28
    7bc8:	add	x1, sp, #0x28
    7bcc:	bl	7fc8 <ZSTD_getErrorString@@Base+0x10dc>
    7bd0:	sub	x0, x29, #0x28
    7bd4:	cbz	w19, 7be4 <ZSTD_getErrorString@@Base+0xcf8>
    7bd8:	bl	8028 <ZSTD_getErrorString@@Base+0x113c>
    7bdc:	tbnz	w21, #1, 7c28 <ZSTD_getErrorString@@Base+0xd3c>
    7be0:	b	7bec <ZSTD_getErrorString@@Base+0xd00>
    7be4:	bl	8080 <ZSTD_getErrorString@@Base+0x1194>
    7be8:	tbnz	w21, #1, 7c28 <ZSTD_getErrorString@@Base+0xd3c>
    7bec:	ldurb	w2, [x23, #-1]
    7bf0:	sub	x0, x29, #0x28
    7bf4:	add	x1, sp, #0x8
    7bf8:	bl	7fc8 <ZSTD_getErrorString@@Base+0x10dc>
    7bfc:	ldrb	w2, [x23, #-2]!
    7c00:	sub	x0, x29, #0x28
    7c04:	add	x1, sp, #0x28
    7c08:	bl	7fc8 <ZSTD_getErrorString@@Base+0x10dc>
    7c0c:	sub	x0, x29, #0x28
    7c10:	cbz	w19, 7c24 <ZSTD_getErrorString@@Base+0xd38>
    7c14:	bl	8028 <ZSTD_getErrorString@@Base+0x113c>
    7c18:	cmp	x23, x20
    7c1c:	b.hi	7c30 <ZSTD_getErrorString@@Base+0xd44>  // b.pmore
    7c20:	b	7c84 <ZSTD_getErrorString@@Base+0xd98>
    7c24:	bl	8080 <ZSTD_getErrorString@@Base+0x1194>
    7c28:	cmp	x23, x20
    7c2c:	b.ls	7c84 <ZSTD_getErrorString@@Base+0xd98>  // b.plast
    7c30:	ldurb	w2, [x23, #-1]
    7c34:	sub	x0, x29, #0x28
    7c38:	add	x1, sp, #0x8
    7c3c:	bl	7fc8 <ZSTD_getErrorString@@Base+0x10dc>
    7c40:	ldurb	w2, [x23, #-2]
    7c44:	sub	x0, x29, #0x28
    7c48:	add	x1, sp, #0x28
    7c4c:	bl	7fc8 <ZSTD_getErrorString@@Base+0x10dc>
    7c50:	ldurb	w2, [x23, #-3]
    7c54:	sub	x0, x29, #0x28
    7c58:	add	x1, sp, #0x8
    7c5c:	bl	7fc8 <ZSTD_getErrorString@@Base+0x10dc>
    7c60:	ldrb	w2, [x23, #-4]!
    7c64:	sub	x0, x29, #0x28
    7c68:	add	x1, sp, #0x28
    7c6c:	bl	7fc8 <ZSTD_getErrorString@@Base+0x10dc>
    7c70:	sub	x0, x29, #0x28
    7c74:	cbz	w19, 7c24 <ZSTD_getErrorString@@Base+0xd38>
    7c78:	bl	8028 <ZSTD_getErrorString@@Base+0x113c>
    7c7c:	cmp	x23, x20
    7c80:	b.hi	7c30 <ZSTD_getErrorString@@Base+0xd44>  // b.pmore
    7c84:	sub	x0, x29, #0x28
    7c88:	add	x1, sp, #0x8
    7c8c:	bl	80e0 <ZSTD_getErrorString@@Base+0x11f4>
    7c90:	sub	x0, x29, #0x28
    7c94:	add	x1, sp, #0x28
    7c98:	bl	80e0 <ZSTD_getErrorString@@Base+0x11f4>
    7c9c:	sub	x0, x29, #0x28
    7ca0:	bl	8114 <ZSTD_getErrorString@@Base+0x1228>
    7ca4:	b	7b5c <ZSTD_getErrorString@@Base+0xc70>
    7ca8:	add	x8, x0, x0, lsr #7
    7cac:	add	x0, x8, #0x20c
    7cb0:	ret
    7cb4:	stp	x29, x30, [sp, #-96]!
    7cb8:	stp	x28, x27, [sp, #16]
    7cbc:	stp	x26, x25, [sp, #32]
    7cc0:	stp	x24, x23, [sp, #48]
    7cc4:	stp	x22, x21, [sp, #64]
    7cc8:	stp	x20, x19, [sp, #80]
    7ccc:	mov	x29, sp
    7cd0:	sub	sp, sp, #0x620
    7cd4:	sub	w8, w5, #0x1
    7cd8:	mov	w9, #0x1                   	// #1
    7cdc:	sub	w10, w5, #0x2
    7ce0:	lsl	w8, w9, w8
    7ce4:	cmp	w5, #0xc
    7ce8:	lsl	w9, w9, w10
    7cec:	mov	w10, #0x400                 	// #1024
    7cf0:	add	w8, w8, w4, lsl #1
    7cf4:	add	w8, w8, #0x3
    7cf8:	csel	w9, w9, w10, hi  // hi = pmore
    7cfc:	add	w9, w8, w9
    7d00:	cmp	x9, x7
    7d04:	stur	w4, [x29, #-12]
    7d08:	b.ls	7d14 <ZSTD_getErrorString@@Base+0xe28>  // b.plast
    7d0c:	mov	x24, #0xffffffffffffffd4    	// #-44
    7d10:	b	7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7d14:	mov	x19, x3
    7d18:	cmp	x3, #0x2
    7d1c:	b.cs	7d28 <ZSTD_getErrorString@@Base+0xe3c>  // b.hs, b.nlast
    7d20:	mov	x24, xzr
    7d24:	b	7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7d28:	lsl	x8, x8, #2
    7d2c:	mov	x21, x6
    7d30:	mov	x22, x2
    7d34:	mov	x23, x1
    7d38:	mov	x20, x0
    7d3c:	add	x25, x6, x8
    7d40:	sub	x26, x7, x8
    7d44:	cbnz	w4, 7d50 <ZSTD_getErrorString@@Base+0xe64>
    7d48:	mov	w8, #0xff                  	// #255
    7d4c:	stur	w8, [x29, #-12]
    7d50:	cmp	w5, #0x0
    7d54:	mov	w8, #0xb                   	// #11
    7d58:	csel	w27, w8, w5, eq  // eq = none
    7d5c:	add	x0, sp, #0x214
    7d60:	sub	x1, x29, #0xc
    7d64:	mov	x2, x22
    7d68:	mov	x3, x19
    7d6c:	mov	x4, x25
    7d70:	mov	x5, x26
    7d74:	bl	86f0 <ZSTD_getErrorString@@Base+0x1804>
    7d78:	mov	x24, x0
    7d7c:	bl	7a4c <ZSTD_getErrorString@@Base+0xb60>
    7d80:	cbz	w0, 7d8c <ZSTD_getErrorString@@Base+0xea0>
    7d84:	mov	w8, wzr
    7d88:	b	7dc0 <ZSTD_getErrorString@@Base+0xed4>
    7d8c:	cmp	x24, x19
    7d90:	b.ne	7da0 <ZSTD_getErrorString@@Base+0xeb4>  // b.any
    7d94:	mov	w8, wzr
    7d98:	mov	w24, #0x1                   	// #1
    7d9c:	b	7dc0 <ZSTD_getErrorString@@Base+0xed4>
    7da0:	cmp	x24, #0x1
    7da4:	b.ne	7db4 <ZSTD_getErrorString@@Base+0xec8>  // b.any
    7da8:	mov	w8, wzr
    7dac:	mov	x24, xzr
    7db0:	b	7dc0 <ZSTD_getErrorString@@Base+0xed4>
    7db4:	cmp	x24, x19, lsr #7
    7db8:	mov	x24, xzr
    7dbc:	cset	w8, cs  // cs = hs, nlast
    7dc0:	cbz	w8, 7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7dc4:	str	x25, [sp, #8]
    7dc8:	ldur	w25, [x29, #-12]
    7dcc:	mov	w0, w27
    7dd0:	mov	x1, x19
    7dd4:	mov	w2, w25
    7dd8:	bl	767c <ZSTD_getErrorString@@Base+0x790>
    7ddc:	mov	w28, w0
    7de0:	add	x0, sp, #0x14
    7de4:	add	x2, sp, #0x214
    7de8:	mov	w1, w28
    7dec:	mov	x3, x19
    7df0:	mov	w4, w25
    7df4:	bl	7694 <ZSTD_getErrorString@@Base+0x7a8>
    7df8:	mov	x25, x0
    7dfc:	bl	7a4c <ZSTD_getErrorString@@Base+0xb60>
    7e00:	cmp	w0, #0x0
    7e04:	csel	x24, x24, x25, eq  // eq = none
    7e08:	cbnz	w0, 7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7e0c:	ldur	w3, [x29, #-12]
    7e10:	add	x2, sp, #0x14
    7e14:	mov	x0, x20
    7e18:	mov	x1, x23
    7e1c:	mov	w4, w28
    7e20:	bl	7228 <ZSTD_getErrorString@@Base+0x33c>
    7e24:	mov	x25, x0
    7e28:	bl	7a4c <ZSTD_getErrorString@@Base+0xb60>
    7e2c:	add	x8, x20, x25
    7e30:	cmp	w0, #0x0
    7e34:	csel	x27, x8, x20, eq  // eq = none
    7e38:	csel	x24, x24, x25, eq  // eq = none
    7e3c:	cbnz	w0, 7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7e40:	ldur	w2, [x29, #-12]
    7e44:	ldr	x4, [sp, #8]
    7e48:	add	x1, sp, #0x14
    7e4c:	mov	x0, x21
    7e50:	mov	w3, w28
    7e54:	mov	x5, x26
    7e58:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
    7e5c:	mov	x25, x0
    7e60:	bl	7a4c <ZSTD_getErrorString@@Base+0xb60>
    7e64:	cmp	w0, #0x0
    7e68:	csel	x24, x24, x25, eq  // eq = none
    7e6c:	cbnz	w0, 7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7e70:	add	x8, x20, x23
    7e74:	sub	x1, x8, x27
    7e78:	mov	x0, x27
    7e7c:	mov	x2, x22
    7e80:	mov	x3, x19
    7e84:	mov	x4, x21
    7e88:	bl	7aec <ZSTD_getErrorString@@Base+0xc00>
    7e8c:	mov	x21, x0
    7e90:	bl	7a4c <ZSTD_getErrorString@@Base+0xb60>
    7e94:	cmp	x21, #0x0
    7e98:	csel	x8, xzr, x24, eq  // eq = none
    7e9c:	cmp	w0, #0x0
    7ea0:	csel	x24, x8, x21, eq  // eq = none
    7ea4:	cbnz	w0, 7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7ea8:	cbz	x21, 7ec0 <ZSTD_getErrorString@@Base+0xfd4>
    7eac:	add	x8, x27, x21
    7eb0:	sub	x8, x8, x20
    7eb4:	sub	x9, x19, #0x1
    7eb8:	cmp	x8, x9
    7ebc:	csel	x24, x8, xzr, cc  // cc = lo, ul, last
    7ec0:	mov	x0, x24
    7ec4:	add	sp, sp, #0x620
    7ec8:	ldp	x20, x19, [sp, #80]
    7ecc:	ldp	x22, x21, [sp, #64]
    7ed0:	ldp	x24, x23, [sp, #48]
    7ed4:	ldp	x26, x25, [sp, #32]
    7ed8:	ldp	x28, x27, [sp, #16]
    7edc:	ldp	x29, x30, [sp], #96
    7ee0:	ret
    7ee4:	cmp	w5, #0xc
    7ee8:	b.ls	7ef4 <ZSTD_getErrorString@@Base+0x1008>  // b.plast
    7eec:	mov	x0, #0xffffffffffffffd4    	// #-44
    7ef0:	ret
    7ef4:	stp	x29, x30, [sp, #-32]!
    7ef8:	str	x28, [sp, #16]
    7efc:	mov	x29, sp
    7f00:	sub	sp, sp, #0x3, lsl #12
    7f04:	sub	sp, sp, #0x810
    7f08:	add	x6, sp, #0x8
    7f0c:	mov	w7, #0x3804                	// #14340
    7f10:	bl	7cb4 <ZSTD_getErrorString@@Base+0xdc8>
    7f14:	add	sp, sp, #0x3, lsl #12
    7f18:	add	sp, sp, #0x810
    7f1c:	ldr	x28, [sp, #16]
    7f20:	ldp	x29, x30, [sp], #32
    7f24:	ret
    7f28:	stp	x29, x30, [sp, #-16]!
    7f2c:	mov	w4, #0xff                  	// #255
    7f30:	mov	w5, #0xb                   	// #11
    7f34:	mov	x29, sp
    7f38:	bl	7ee4 <ZSTD_getErrorString@@Base+0xff8>
    7f3c:	ldp	x29, x30, [sp], #16
    7f40:	ret
    7f44:	add	x8, x1, x2
    7f48:	cmp	x2, #0x9
    7f4c:	mov	x9, #0xffffffffffffffba    	// #-70
    7f50:	sub	x10, x8, #0x8
    7f54:	csel	x8, x9, xzr, cc  // cc = lo, ul, last
    7f58:	str	xzr, [x0]
    7f5c:	str	wzr, [x0, #8]
    7f60:	stp	x1, x1, [x0, #16]
    7f64:	str	x10, [x0, #32]
    7f68:	mov	x0, x8
    7f6c:	ret
    7f70:	stp	x29, x30, [sp, #-32]!
    7f74:	stp	x20, x19, [sp, #16]
    7f78:	mov	x29, sp
    7f7c:	mov	w19, w2
    7f80:	mov	x20, x0
    7f84:	bl	8164 <ZSTD_getErrorString@@Base+0x1278>
    7f88:	ldp	x9, x8, [x20, #8]
    7f8c:	add	x8, x8, w19, uxtw #3
    7f90:	ldp	w8, w10, [x8]
    7f94:	sxtw	x8, w8
    7f98:	add	w11, w10, #0x8, lsl #12
    7f9c:	lsr	w12, w11, #16
    7fa0:	and	w11, w11, #0xffff0000
    7fa4:	sub	w10, w11, w10
    7fa8:	str	x10, [x20]
    7fac:	lsr	x10, x10, x12
    7fb0:	add	x8, x10, x8
    7fb4:	ldrh	w8, [x9, x8, lsl #1]
    7fb8:	str	x8, [x20]
    7fbc:	ldp	x20, x19, [sp, #16]
    7fc0:	ldp	x29, x30, [sp], #32
    7fc4:	ret
    7fc8:	stp	x29, x30, [sp, #-48]!
    7fcc:	stp	x22, x21, [sp, #16]
    7fd0:	stp	x20, x19, [sp, #32]
    7fd4:	ldr	x8, [x1, #16]
    7fd8:	mov	x19, x1
    7fdc:	ldr	x1, [x1]
    7fe0:	ldr	x22, [x19, #8]
    7fe4:	add	x8, x8, w2, uxtw #3
    7fe8:	ldp	w21, w9, [x8]
    7fec:	mov	x29, sp
    7ff0:	sxtw	x21, w21
    7ff4:	add	x8, x1, x9
    7ff8:	lsr	x20, x8, #16
    7ffc:	mov	w2, w20
    8000:	bl	81c8 <ZSTD_getErrorString@@Base+0x12dc>
    8004:	ldr	x8, [x19]
    8008:	asr	x8, x8, x20
    800c:	add	x8, x8, x21
    8010:	ldrh	w8, [x22, x8, lsl #1]
    8014:	str	x8, [x19]
    8018:	ldp	x20, x19, [sp, #32]
    801c:	ldp	x22, x21, [sp, #16]
    8020:	ldp	x29, x30, [sp], #48
    8024:	ret
    8028:	stp	x29, x30, [sp, #-32]!
    802c:	stp	x20, x19, [sp, #16]
    8030:	mov	x19, x0
    8034:	ldr	w8, [x0, #8]
    8038:	ldr	x0, [x0, #24]
    803c:	ldr	x1, [x19]
    8040:	mov	x29, sp
    8044:	lsr	x20, x8, #3
    8048:	bl	81f8 <ZSTD_getErrorString@@Base+0x130c>
    804c:	ldr	x8, [x19, #24]
    8050:	ldr	w9, [x19, #8]
    8054:	ldr	x10, [x19]
    8058:	lsl	x11, x20, #3
    805c:	add	x8, x8, x20
    8060:	and	w9, w9, #0x7
    8064:	lsr	x10, x10, x11
    8068:	str	x8, [x19, #24]
    806c:	str	w9, [x19, #8]
    8070:	str	x10, [x19]
    8074:	ldp	x20, x19, [sp, #16]
    8078:	ldp	x29, x30, [sp], #32
    807c:	ret
    8080:	stp	x29, x30, [sp, #-32]!
    8084:	stp	x20, x19, [sp, #16]
    8088:	mov	x19, x0
    808c:	ldr	w8, [x0, #8]
    8090:	ldr	x0, [x0, #24]
    8094:	ldr	x1, [x19]
    8098:	mov	x29, sp
    809c:	lsr	x20, x8, #3
    80a0:	bl	81f8 <ZSTD_getErrorString@@Base+0x130c>
    80a4:	ldp	x8, x9, [x19, #24]
    80a8:	ldr	w10, [x19, #8]
    80ac:	ldr	x11, [x19]
    80b0:	lsl	x12, x20, #3
    80b4:	add	x8, x8, x20
    80b8:	cmp	x8, x9
    80bc:	and	w10, w10, #0x7
    80c0:	lsr	x11, x11, x12
    80c4:	csel	x8, x9, x8, hi  // hi = pmore
    80c8:	str	w10, [x19, #8]
    80cc:	str	x8, [x19, #24]
    80d0:	str	x11, [x19]
    80d4:	ldp	x20, x19, [sp, #16]
    80d8:	ldp	x29, x30, [sp], #32
    80dc:	ret
    80e0:	stp	x29, x30, [sp, #-32]!
    80e4:	ldr	x8, [x1]
    80e8:	ldr	w2, [x1, #24]
    80ec:	str	x19, [sp, #16]
    80f0:	mov	x29, sp
    80f4:	mov	x1, x8
    80f8:	mov	x19, x0
    80fc:	bl	81c8 <ZSTD_getErrorString@@Base+0x12dc>
    8100:	mov	x0, x19
    8104:	bl	8080 <ZSTD_getErrorString@@Base+0x1194>
    8108:	ldr	x19, [sp, #16]
    810c:	ldp	x29, x30, [sp], #32
    8110:	ret
    8114:	stp	x29, x30, [sp, #-32]!
    8118:	str	x19, [sp, #16]
    811c:	mov	x29, sp
    8120:	mov	x19, x0
    8124:	bl	8228 <ZSTD_getErrorString@@Base+0x133c>
    8128:	mov	x0, x19
    812c:	bl	8080 <ZSTD_getErrorString@@Base+0x1194>
    8130:	ldp	x8, x9, [x19, #24]
    8134:	cmp	x8, x9
    8138:	b.cs	8154 <ZSTD_getErrorString@@Base+0x1268>  // b.hs, b.nlast
    813c:	ldr	x9, [x19, #16]
    8140:	ldr	w10, [x19, #8]
    8144:	sub	x8, x8, x9
    8148:	cmp	w10, #0x0
    814c:	cinc	x0, x8, ne  // ne = any
    8150:	b	8158 <ZSTD_getErrorString@@Base+0x126c>
    8154:	mov	x0, xzr
    8158:	ldr	x19, [sp, #16]
    815c:	ldp	x29, x30, [sp], #32
    8160:	ret
    8164:	stp	x29, x30, [sp, #-32]!
    8168:	stp	x20, x19, [sp, #16]
    816c:	mov	x20, x0
    8170:	mov	x0, x1
    8174:	mov	x29, sp
    8178:	mov	x19, x1
    817c:	bl	81c0 <ZSTD_getErrorString@@Base+0x12d4>
    8180:	and	w8, w0, #0xffff
    8184:	mov	w9, #0x1                   	// #1
    8188:	sub	w12, w8, #0x1
    818c:	lsl	x11, x9, x0
    8190:	lsl	w9, w9, w12
    8194:	tst	w0, #0xffff
    8198:	sxtw	x9, w9
    819c:	add	x10, x19, #0x4
    81a0:	csinc	x9, x9, xzr, ne  // ne = any
    81a4:	add	x9, x10, x9, lsl #2
    81a8:	stp	x11, x10, [x20]
    81ac:	str	x9, [x20, #16]
    81b0:	str	w8, [x20, #24]
    81b4:	ldp	x20, x19, [sp, #16]
    81b8:	ldp	x29, x30, [sp], #32
    81bc:	ret
    81c0:	ldrh	w0, [x0]
    81c4:	ret
    81c8:	adrp	x8, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    81cc:	add	x8, x8, #0x694
    81d0:	ldr	w8, [x8, w2, uxtw #2]
    81d4:	ldr	w9, [x0, #8]
    81d8:	ldr	x10, [x0]
    81dc:	and	x8, x8, x1
    81e0:	lsl	x8, x8, x9
    81e4:	add	w11, w9, w2
    81e8:	orr	x8, x8, x10
    81ec:	str	x8, [x0]
    81f0:	str	w11, [x0, #8]
    81f4:	ret
    81f8:	stp	x29, x30, [sp, #-16]!
    81fc:	mov	x29, sp
    8200:	bl	820c <ZSTD_getErrorString@@Base+0x1320>
    8204:	ldp	x29, x30, [sp], #16
    8208:	ret
    820c:	stp	x29, x30, [sp, #-16]!
    8210:	mov	x29, sp
    8214:	bl	8220 <ZSTD_getErrorString@@Base+0x1334>
    8218:	ldp	x29, x30, [sp], #16
    821c:	ret
    8220:	str	x1, [x0]
    8224:	ret
    8228:	ldr	w8, [x0, #8]
    822c:	ldr	x9, [x0]
    8230:	mov	w10, #0x1                   	// #1
    8234:	lsl	x10, x10, x8
    8238:	add	w8, w8, #0x1
    823c:	orr	x9, x10, x9
    8240:	str	x9, [x0]
    8244:	str	w8, [x0, #8]
    8248:	ret
    824c:	stp	x29, x30, [sp, #-16]!
    8250:	mov	x29, sp
    8254:	bl	8260 <ZSTD_getErrorString@@Base+0x1374>
    8258:	ldp	x29, x30, [sp], #16
    825c:	ret
    8260:	cmn	x0, #0x78
    8264:	cset	w0, hi  // hi = pmore
    8268:	ret
    826c:	stp	x29, x30, [sp, #-64]!
    8270:	stp	x22, x21, [sp, #32]
    8274:	stp	x20, x19, [sp, #48]
    8278:	str	x23, [sp, #16]
    827c:	ldr	w23, [x1]
    8280:	mov	x21, x2
    8284:	mov	x20, x1
    8288:	mov	w1, wzr
    828c:	add	w8, w23, #0x1
    8290:	lsl	x2, x8, #2
    8294:	mov	x29, sp
    8298:	mov	x22, x3
    829c:	mov	x19, x0
    82a0:	bl	46a0 <memset@plt>
    82a4:	cbz	x22, 8308 <ZSTD_getErrorString@@Base+0x141c>
    82a8:	cmp	x22, #0x1
    82ac:	b.lt	82d0 <ZSTD_getErrorString@@Base+0x13e4>  // b.tstop
    82b0:	add	x8, x21, x22
    82b4:	ldrb	w9, [x21], #1
    82b8:	lsl	x9, x9, #2
    82bc:	ldr	w10, [x19, x9]
    82c0:	cmp	x21, x8
    82c4:	add	w10, w10, #0x1
    82c8:	str	w10, [x19, x9]
    82cc:	b.cc	82b4 <ZSTD_getErrorString@@Base+0x13c8>  // b.lo, b.ul, b.last
    82d0:	ldr	w8, [x19, w23, uxtw #2]
    82d4:	sub	w23, w23, #0x1
    82d8:	cbz	w8, 82d0 <ZSTD_getErrorString@@Base+0x13e4>
    82dc:	mov	w8, wzr
    82e0:	mov	w0, wzr
    82e4:	add	w9, w23, #0x1
    82e8:	str	w9, [x20]
    82ec:	ldr	w10, [x19, w8, uxtw #2]
    82f0:	add	w8, w8, #0x1
    82f4:	cmp	w10, w0
    82f8:	csel	w0, w10, w0, hi  // hi = pmore
    82fc:	cmp	w8, w9
    8300:	b.ls	82ec <ZSTD_getErrorString@@Base+0x1400>  // b.plast
    8304:	b	8310 <ZSTD_getErrorString@@Base+0x1424>
    8308:	mov	w0, wzr
    830c:	str	wzr, [x20]
    8310:	ldp	x20, x19, [sp, #48]
    8314:	ldp	x22, x21, [sp, #32]
    8318:	ldr	x23, [sp, #16]
    831c:	ldp	x29, x30, [sp], #64
    8320:	ret
    8324:	stp	x29, x30, [sp, #-16]!
    8328:	cmp	x3, #0x5db
    832c:	mov	x29, sp
    8330:	b.hi	8344 <ZSTD_getErrorString@@Base+0x1458>  // b.pmore
    8334:	bl	826c <ZSTD_getErrorString@@Base+0x1380>
    8338:	mov	w0, w0
    833c:	ldp	x29, x30, [sp], #16
    8340:	ret
    8344:	mov	x8, x4
    8348:	tst	x4, #0x3
    834c:	b.eq	835c <ZSTD_getErrorString@@Base+0x1470>  // b.none
    8350:	mov	x0, #0xffffffffffffffff    	// #-1
    8354:	ldp	x29, x30, [sp], #16
    8358:	ret
    835c:	cmp	x5, #0x1, lsl #12
    8360:	b.cs	8370 <ZSTD_getErrorString@@Base+0x1484>  // b.hs, b.nlast
    8364:	mov	x0, #0xffffffffffffffbe    	// #-66
    8368:	ldp	x29, x30, [sp], #16
    836c:	ret
    8370:	mov	w4, wzr
    8374:	mov	x5, x8
    8378:	bl	8384 <ZSTD_getErrorString@@Base+0x1498>
    837c:	ldp	x29, x30, [sp], #16
    8380:	ret
    8384:	sub	sp, sp, #0x80
    8388:	stp	x29, x30, [sp, #32]
    838c:	stp	x28, x27, [sp, #48]
    8390:	stp	x26, x25, [sp, #64]
    8394:	stp	x24, x23, [sp, #80]
    8398:	stp	x22, x21, [sp, #96]
    839c:	stp	x20, x19, [sp, #112]
    83a0:	ldr	w19, [x1]
    83a4:	mov	x23, x2
    83a8:	mov	x22, x1
    83ac:	mov	x20, x0
    83b0:	mov	w2, #0x1000                	// #4096
    83b4:	mov	x0, x5
    83b8:	mov	w1, wzr
    83bc:	add	x29, sp, #0x20
    83c0:	mov	x21, x5
    83c4:	mov	w25, w4
    83c8:	mov	x24, x3
    83cc:	bl	46a0 <memset@plt>
    83d0:	cbz	x24, 85a0 <ZSTD_getErrorString@@Base+0x16b4>
    83d4:	cmp	w19, #0x0
    83d8:	mov	w8, #0xff                  	// #255
    83dc:	add	x9, x23, x24
    83e0:	add	x27, x21, #0x400
    83e4:	add	x28, x21, #0x800
    83e8:	csel	w8, w8, w19, eq  // eq = none
    83ec:	cmp	x24, #0x14
    83f0:	add	x19, x21, #0xc00
    83f4:	str	x22, [sp, #8]
    83f8:	stp	w25, w8, [x29, #-8]
    83fc:	str	x9, [sp, #16]
    8400:	b.lt	85bc <ZSTD_getErrorString@@Base+0x16d0>  // b.tstop
    8404:	add	x8, x24, x23
    8408:	mov	x0, x23
    840c:	sub	x22, x8, #0xf
    8410:	bl	8788 <ZSTD_getErrorString@@Base+0x189c>
    8414:	mov	w24, w0
    8418:	add	x0, x23, #0x4
    841c:	bl	8788 <ZSTD_getErrorString@@Base+0x189c>
    8420:	and	w8, w24, #0xff
    8424:	lsl	x8, x8, #2
    8428:	ldr	w9, [x21, x8]
    842c:	ubfx	w10, w24, #8, #8
    8430:	lsl	x10, x10, #2
    8434:	mov	w25, w0
    8438:	add	w9, w9, #0x1
    843c:	str	w9, [x21, x8]
    8440:	ldr	w8, [x27, x10]
    8444:	ubfx	w9, w24, #16, #8
    8448:	lsl	x9, x9, #2
    844c:	add	x0, x23, #0x8
    8450:	add	w8, w8, #0x1
    8454:	str	w8, [x27, x10]
    8458:	ldr	w8, [x28, x9]
    845c:	lsr	w10, w24, #24
    8460:	add	w8, w8, #0x1
    8464:	str	w8, [x28, x9]
    8468:	lsl	x8, x10, #2
    846c:	ldr	w9, [x19, x8]
    8470:	add	w9, w9, #0x1
    8474:	str	w9, [x19, x8]
    8478:	bl	8788 <ZSTD_getErrorString@@Base+0x189c>
    847c:	and	w8, w25, #0xff
    8480:	lsl	x8, x8, #2
    8484:	ldr	w9, [x21, x8]
    8488:	ubfx	w10, w25, #8, #8
    848c:	lsl	x10, x10, #2
    8490:	mov	w24, w0
    8494:	add	w9, w9, #0x1
    8498:	str	w9, [x21, x8]
    849c:	ldr	w8, [x27, x10]
    84a0:	ubfx	w9, w25, #16, #8
    84a4:	lsl	x9, x9, #2
    84a8:	add	x0, x23, #0xc
    84ac:	add	w8, w8, #0x1
    84b0:	str	w8, [x27, x10]
    84b4:	ldr	w8, [x28, x9]
    84b8:	lsr	w10, w25, #24
    84bc:	add	w8, w8, #0x1
    84c0:	str	w8, [x28, x9]
    84c4:	lsl	x8, x10, #2
    84c8:	ldr	w9, [x19, x8]
    84cc:	add	w9, w9, #0x1
    84d0:	str	w9, [x19, x8]
    84d4:	bl	8788 <ZSTD_getErrorString@@Base+0x189c>
    84d8:	and	w8, w24, #0xff
    84dc:	lsl	x8, x8, #2
    84e0:	ldr	w9, [x21, x8]
    84e4:	ubfx	w10, w24, #8, #8
    84e8:	lsl	x10, x10, #2
    84ec:	add	x25, x23, #0x10
    84f0:	add	w9, w9, #0x1
    84f4:	str	w9, [x21, x8]
    84f8:	ldr	w8, [x27, x10]
    84fc:	ubfx	w9, w24, #16, #8
    8500:	lsl	x9, x9, #2
    8504:	mov	w26, w0
    8508:	add	w8, w8, #0x1
    850c:	str	w8, [x27, x10]
    8510:	ldr	w8, [x28, x9]
    8514:	lsr	w10, w24, #24
    8518:	mov	x0, x25
    851c:	add	w8, w8, #0x1
    8520:	str	w8, [x28, x9]
    8524:	lsl	x8, x10, #2
    8528:	ldr	w9, [x19, x8]
    852c:	add	w9, w9, #0x1
    8530:	str	w9, [x19, x8]
    8534:	bl	8788 <ZSTD_getErrorString@@Base+0x189c>
    8538:	and	w8, w26, #0xff
    853c:	lsl	x8, x8, #2
    8540:	ldr	w9, [x21, x8]
    8544:	lsr	w10, w26, #24
    8548:	lsl	x10, x10, #2
    854c:	mov	w24, w0
    8550:	add	w9, w9, #0x1
    8554:	str	w9, [x21, x8]
    8558:	ubfx	w8, w26, #8, #8
    855c:	lsl	x8, x8, #2
    8560:	ldr	w9, [x27, x8]
    8564:	add	w9, w9, #0x1
    8568:	str	w9, [x27, x8]
    856c:	ubfx	w8, w26, #16, #8
    8570:	lsl	x8, x8, #2
    8574:	ldr	w9, [x28, x8]
    8578:	add	w9, w9, #0x1
    857c:	str	w9, [x28, x8]
    8580:	ldr	w8, [x19, x10]
    8584:	add	x9, x23, #0x14
    8588:	cmp	x9, x22
    858c:	mov	x23, x25
    8590:	add	w8, w8, #0x1
    8594:	str	w8, [x19, x10]
    8598:	b.cc	8418 <ZSTD_getErrorString@@Base+0x152c>  // b.lo, b.ul, b.last
    859c:	b	85c0 <ZSTD_getErrorString@@Base+0x16d4>
    85a0:	add	w2, w19, #0x1
    85a4:	mov	x0, x20
    85a8:	mov	w1, wzr
    85ac:	bl	46a0 <memset@plt>
    85b0:	mov	x0, xzr
    85b4:	str	wzr, [x22]
    85b8:	b	86a4 <ZSTD_getErrorString@@Base+0x17b8>
    85bc:	mov	x25, x23
    85c0:	ldr	x10, [sp, #16]
    85c4:	cmp	x25, x10
    85c8:	b.cs	85e8 <ZSTD_getErrorString@@Base+0x16fc>  // b.hs, b.nlast
    85cc:	ldrb	w8, [x25], #1
    85d0:	lsl	x8, x8, #2
    85d4:	ldr	w9, [x21, x8]
    85d8:	cmp	x10, x25
    85dc:	add	w9, w9, #0x1
    85e0:	str	w9, [x21, x8]
    85e4:	b.ne	85cc <ZSTD_getErrorString@@Base+0x16e0>  // b.any
    85e8:	ldp	w8, w14, [x29, #-8]
    85ec:	cbz	w8, 8634 <ZSTD_getErrorString@@Base+0x1748>
    85f0:	cmp	w14, #0xfe
    85f4:	b.hi	8634 <ZSTD_getErrorString@@Base+0x1748>  // b.pmore
    85f8:	mov	w8, #0xff                  	// #255
    85fc:	mov	w9, w8
    8600:	lsl	x9, x9, #2
    8604:	ldr	w10, [x27, x9]
    8608:	ldr	w11, [x28, x9]
    860c:	ldr	w12, [x19, x9]
    8610:	ldr	w13, [x21, x9]
    8614:	add	w10, w11, w10
    8618:	add	w10, w10, w12
    861c:	add	w10, w10, w13
    8620:	str	w10, [x21, x9]
    8624:	cbnz	w10, 86a0 <ZSTD_getErrorString@@Base+0x17b4>
    8628:	sub	w8, w8, #0x1
    862c:	cmp	w8, w14
    8630:	b.hi	85fc <ZSTD_getErrorString@@Base+0x1710>  // b.pmore
    8634:	cmp	w14, #0xff
    8638:	mov	w9, #0xff                  	// #255
    863c:	mov	x10, xzr
    8640:	mov	w8, wzr
    8644:	csel	w9, w14, w9, cc  // cc = lo, ul, last
    8648:	ldr	w11, [x21]
    864c:	ldr	w12, [x21, #1024]
    8650:	ldr	w13, [x21, #2048]
    8654:	ldr	w14, [x21, #3072]
    8658:	add	x21, x21, #0x4
    865c:	add	w11, w12, w11
    8660:	add	w11, w11, w13
    8664:	add	w11, w11, w14
    8668:	cmp	w11, w8
    866c:	str	w11, [x20, x10, lsl #2]
    8670:	csel	w8, w11, w8, hi  // hi = pmore
    8674:	cmp	x10, x9
    8678:	add	x10, x10, #0x1
    867c:	b.cc	8648 <ZSTD_getErrorString@@Base+0x175c>  // b.lo, b.ul, b.last
    8680:	ldr	x11, [sp, #8]
    8684:	ldr	w10, [x20, w9, uxtw #2]
    8688:	sub	w9, w9, #0x1
    868c:	cbz	w10, 8684 <ZSTD_getErrorString@@Base+0x1798>
    8690:	add	w9, w9, #0x1
    8694:	mov	w0, w8
    8698:	str	w9, [x11]
    869c:	b	86a4 <ZSTD_getErrorString@@Base+0x17b8>
    86a0:	mov	x0, #0xffffffffffffffd0    	// #-48
    86a4:	ldp	x20, x19, [sp, #112]
    86a8:	ldp	x22, x21, [sp, #96]
    86ac:	ldp	x24, x23, [sp, #80]
    86b0:	ldp	x26, x25, [sp, #64]
    86b4:	ldp	x28, x27, [sp, #48]
    86b8:	ldp	x29, x30, [sp, #32]
    86bc:	add	sp, sp, #0x80
    86c0:	ret
    86c4:	stp	x29, x30, [sp, #-32]!
    86c8:	str	x28, [sp, #16]
    86cc:	mov	x29, sp
    86d0:	sub	sp, sp, #0x1, lsl #12
    86d4:	mov	x4, sp
    86d8:	mov	w5, #0x1000                	// #4096
    86dc:	bl	8324 <ZSTD_getErrorString@@Base+0x1438>
    86e0:	add	sp, sp, #0x1, lsl #12
    86e4:	ldr	x28, [sp, #16]
    86e8:	ldp	x29, x30, [sp], #32
    86ec:	ret
    86f0:	stp	x29, x30, [sp, #-16]!
    86f4:	tst	x4, #0x3
    86f8:	mov	x29, sp
    86fc:	b.eq	870c <ZSTD_getErrorString@@Base+0x1820>  // b.none
    8700:	mov	x0, #0xffffffffffffffff    	// #-1
    8704:	ldp	x29, x30, [sp], #16
    8708:	ret
    870c:	cmp	x5, #0x1, lsl #12
    8710:	b.cs	8720 <ZSTD_getErrorString@@Base+0x1834>  // b.hs, b.nlast
    8714:	mov	x0, #0xffffffffffffffbe    	// #-66
    8718:	ldp	x29, x30, [sp], #16
    871c:	ret
    8720:	ldr	w9, [x1]
    8724:	mov	x8, x4
    8728:	cmp	w9, #0xfe
    872c:	b.hi	8744 <ZSTD_getErrorString@@Base+0x1858>  // b.pmore
    8730:	mov	w4, #0x1                   	// #1
    8734:	mov	x5, x8
    8738:	bl	8384 <ZSTD_getErrorString@@Base+0x1498>
    873c:	ldp	x29, x30, [sp], #16
    8740:	ret
    8744:	mov	w9, #0xff                  	// #255
    8748:	mov	x4, x8
    874c:	str	w9, [x1]
    8750:	bl	8324 <ZSTD_getErrorString@@Base+0x1438>
    8754:	ldp	x29, x30, [sp], #16
    8758:	ret
    875c:	stp	x29, x30, [sp, #-32]!
    8760:	str	x28, [sp, #16]
    8764:	mov	x29, sp
    8768:	sub	sp, sp, #0x1, lsl #12
    876c:	mov	x4, sp
    8770:	mov	w5, #0x1000                	// #4096
    8774:	bl	86f0 <ZSTD_getErrorString@@Base+0x1804>
    8778:	add	sp, sp, #0x1, lsl #12
    877c:	ldr	x28, [sp, #16]
    8780:	ldp	x29, x30, [sp], #32
    8784:	ret
    8788:	ldr	w0, [x0]
    878c:	ret
    8790:	stp	x29, x30, [sp, #-16]!
    8794:	mov	w3, #0x1                   	// #1
    8798:	mov	x29, sp
    879c:	bl	75bc <ZSTD_getErrorString@@Base+0x6d0>
    87a0:	ldp	x29, x30, [sp], #16
    87a4:	ret
    87a8:	sub	sp, sp, #0x150
    87ac:	cmp	w3, #0xff
    87b0:	stp	x29, x30, [sp, #272]
    87b4:	stp	x28, x23, [sp, #288]
    87b8:	stp	x22, x21, [sp, #304]
    87bc:	stp	x20, x19, [sp, #320]
    87c0:	add	x29, sp, #0x110
    87c4:	b.ls	87d0 <ZSTD_getErrorString@@Base+0x18e4>  // b.plast
    87c8:	mov	x22, #0xffffffffffffffd2    	// #-46
    87cc:	b	88fc <ZSTD_getErrorString@@Base+0x1a10>
    87d0:	add	w8, w4, #0x1
    87d4:	mov	w19, w3
    87d8:	mov	x21, x1
    87dc:	mov	x20, x0
    87e0:	cmp	w8, #0x2
    87e4:	sturb	wzr, [x29, #-16]
    87e8:	b.cc	8808 <ZSTD_getErrorString@@Base+0x191c>  // b.lo, b.ul, b.last
    87ec:	mov	w9, w8
    87f0:	sub	x8, x29, #0x10
    87f4:	orr	x8, x8, #0x1
    87f8:	sub	x9, x9, #0x1
    87fc:	strb	w9, [x8], #1
    8800:	subs	x9, x9, #0x1
    8804:	b.ne	87fc <ZSTD_getErrorString@@Base+0x1910>  // b.any
    8808:	cbz	w19, 8830 <ZSTD_getErrorString@@Base+0x1944>
    880c:	mov	w8, w19
    8810:	add	x9, x2, #0x2
    8814:	mov	x10, sp
    8818:	sub	x11, x29, #0x10
    881c:	ldrb	w12, [x9], #4
    8820:	subs	x8, x8, #0x1
    8824:	ldrb	w12, [x11, x12]
    8828:	strb	w12, [x10], #1
    882c:	b.ne	881c <ZSTD_getErrorString@@Base+0x1930>  // b.any
    8830:	mov	w23, w19
    8834:	add	x0, x20, #0x1
    8838:	sub	x1, x21, #0x1
    883c:	mov	x2, sp
    8840:	mov	x3, x23
    8844:	bl	8918 <ZSTD_getErrorString@@Base+0x1a2c>
    8848:	mov	x22, x0
    884c:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    8850:	cbz	w0, 8860 <ZSTD_getErrorString@@Base+0x1974>
    8854:	mov	w8, wzr
    8858:	cbnz	w8, 8888 <ZSTD_getErrorString@@Base+0x199c>
    885c:	b	88fc <ZSTD_getErrorString@@Base+0x1a10>
    8860:	cmp	x22, #0x2
    8864:	mov	w8, #0x1                   	// #1
    8868:	b.cc	88f8 <ZSTD_getErrorString@@Base+0x1a0c>  // b.lo, b.ul, b.last
    886c:	lsr	w9, w19, #1
    8870:	cmp	x22, x9
    8874:	b.cs	8884 <ZSTD_getErrorString@@Base+0x1998>  // b.hs, b.nlast
    8878:	mov	w8, wzr
    887c:	strb	w22, [x20]
    8880:	add	x22, x22, #0x1
    8884:	cbz	w8, 88fc <ZSTD_getErrorString@@Base+0x1a10>
    8888:	cmp	w19, #0x80
    888c:	b.ls	8898 <ZSTD_getErrorString@@Base+0x19ac>  // b.plast
    8890:	mov	x22, #0xffffffffffffffff    	// #-1
    8894:	b	88fc <ZSTD_getErrorString@@Base+0x1a10>
    8898:	add	w8, w19, #0x1
    889c:	lsr	w8, w8, #1
    88a0:	add	w22, w8, #0x1
    88a4:	cmp	x22, x21
    88a8:	b.ls	88b4 <ZSTD_getErrorString@@Base+0x19c8>  // b.plast
    88ac:	mov	x22, #0xffffffffffffffba    	// #-70
    88b0:	b	88fc <ZSTD_getErrorString@@Base+0x1a10>
    88b4:	add	w9, w19, #0x7f
    88b8:	mov	x8, sp
    88bc:	strb	w9, [x20]
    88c0:	strb	wzr, [x8, x23]
    88c4:	cbz	w19, 88fc <ZSTD_getErrorString@@Base+0x1a10>
    88c8:	mov	w9, wzr
    88cc:	add	w11, w9, #0x1
    88d0:	ldrb	w10, [x8, w9, uxtw]
    88d4:	ldrb	w11, [x8, w11, uxtw]
    88d8:	lsr	w12, w9, #1
    88dc:	add	w9, w9, #0x2
    88e0:	add	x12, x12, x20
    88e4:	add	w10, w11, w10, lsl #4
    88e8:	cmp	w9, w19
    88ec:	strb	w10, [x12, #1]
    88f0:	b.cc	88cc <ZSTD_getErrorString@@Base+0x19e0>  // b.lo, b.ul, b.last
    88f4:	b	88fc <ZSTD_getErrorString@@Base+0x1a10>
    88f8:	cbnz	w8, 8888 <ZSTD_getErrorString@@Base+0x199c>
    88fc:	mov	x0, x22
    8900:	ldp	x20, x19, [sp, #320]
    8904:	ldp	x22, x21, [sp, #304]
    8908:	ldp	x28, x23, [sp, #288]
    890c:	ldp	x29, x30, [sp, #272]
    8910:	add	sp, sp, #0x150
    8914:	ret
    8918:	sub	sp, sp, #0x1e0
    891c:	stp	x29, x30, [sp, #384]
    8920:	add	x29, sp, #0x180
    8924:	mov	w8, #0xc                   	// #12
    8928:	cmp	x3, #0x2
    892c:	str	x28, [sp, #400]
    8930:	stp	x26, x25, [sp, #416]
    8934:	stp	x24, x23, [sp, #432]
    8938:	stp	x22, x21, [sp, #448]
    893c:	stp	x20, x19, [sp, #464]
    8940:	str	w8, [x29, #28]
    8944:	b.cs	8950 <ZSTD_getErrorString@@Base+0x1a64>  // b.hs, b.nlast
    8948:	mov	x20, xzr
    894c:	b	8a70 <ZSTD_getErrorString@@Base+0x1b84>
    8950:	mov	x23, x1
    8954:	mov	x19, x0
    8958:	add	x0, sp, #0x20
    895c:	add	x1, x29, #0x1c
    8960:	mov	x21, x3
    8964:	mov	x22, x2
    8968:	bl	826c <ZSTD_getErrorString@@Base+0x1380>
    896c:	mov	w8, w0
    8970:	cmp	x8, x21
    8974:	cset	w20, eq  // eq = none
    8978:	cmp	w0, #0x1
    897c:	b.eq	8a70 <ZSTD_getErrorString@@Base+0x1b84>  // b.none
    8980:	cmp	x8, x21
    8984:	b.eq	8a70 <ZSTD_getErrorString@@Base+0x1b84>  // b.none
    8988:	ldr	w2, [x29, #28]
    898c:	mov	w0, #0x6                   	// #6
    8990:	mov	x1, x21
    8994:	bl	767c <ZSTD_getErrorString@@Base+0x790>
    8998:	ldr	w4, [x29, #28]
    899c:	mov	w25, w0
    89a0:	add	x0, sp, #0x4
    89a4:	add	x2, sp, #0x20
    89a8:	mov	w1, w25
    89ac:	mov	x3, x21
    89b0:	bl	7694 <ZSTD_getErrorString@@Base+0x7a8>
    89b4:	mov	x24, x0
    89b8:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    89bc:	cmp	w0, #0x0
    89c0:	csel	x20, x20, x24, eq  // eq = none
    89c4:	cbnz	w0, 8a70 <ZSTD_getErrorString@@Base+0x1b84>
    89c8:	ldr	w3, [x29, #28]
    89cc:	add	x2, sp, #0x4
    89d0:	mov	x0, x19
    89d4:	mov	x1, x23
    89d8:	mov	w4, w25
    89dc:	bl	7228 <ZSTD_getErrorString@@Base+0x33c>
    89e0:	mov	x26, x0
    89e4:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    89e8:	add	x8, x19, x26
    89ec:	cmp	w0, #0x0
    89f0:	csel	x24, x8, x19, eq  // eq = none
    89f4:	csel	x20, x20, x26, eq  // eq = none
    89f8:	cbnz	w0, 8a70 <ZSTD_getErrorString@@Base+0x1b84>
    89fc:	ldr	w2, [x29, #28]
    8a00:	add	x0, sp, #0x94
    8a04:	add	x1, sp, #0x4
    8a08:	add	x4, sp, #0x54
    8a0c:	mov	w5, #0x40                  	// #64
    8a10:	mov	w3, w25
    8a14:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
    8a18:	mov	x25, x0
    8a1c:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    8a20:	cmp	w0, #0x0
    8a24:	csel	x20, x20, x25, eq  // eq = none
    8a28:	cbnz	w0, 8a70 <ZSTD_getErrorString@@Base+0x1b84>
    8a2c:	add	x8, x19, x23
    8a30:	sub	x1, x8, x24
    8a34:	add	x4, sp, #0x94
    8a38:	mov	x0, x24
    8a3c:	mov	x2, x22
    8a40:	mov	x3, x21
    8a44:	bl	7aec <ZSTD_getErrorString@@Base+0xc00>
    8a48:	mov	x21, x0
    8a4c:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    8a50:	cmp	x21, #0x0
    8a54:	csel	x8, xzr, x20, eq  // eq = none
    8a58:	cmp	w0, #0x0
    8a5c:	csel	x20, x8, x21, eq  // eq = none
    8a60:	cbnz	w0, 8a70 <ZSTD_getErrorString@@Base+0x1b84>
    8a64:	cbz	x21, 8a70 <ZSTD_getErrorString@@Base+0x1b84>
    8a68:	add	x8, x24, x21
    8a6c:	sub	x20, x8, x19
    8a70:	mov	x0, x20
    8a74:	ldp	x20, x19, [sp, #464]
    8a78:	ldp	x22, x21, [sp, #448]
    8a7c:	ldp	x24, x23, [sp, #432]
    8a80:	ldp	x26, x25, [sp, #416]
    8a84:	ldr	x28, [sp, #400]
    8a88:	ldp	x29, x30, [sp, #384]
    8a8c:	add	sp, sp, #0x1e0
    8a90:	ret
    8a94:	cmn	x0, #0x78
    8a98:	cset	w0, hi  // hi = pmore
    8a9c:	ret
    8aa0:	sub	sp, sp, #0x1c0
    8aa4:	stp	x28, x21, [sp, #416]
    8aa8:	stp	x20, x19, [sp, #432]
    8aac:	mov	x6, x3
    8ab0:	mov	x5, x2
    8ab4:	mov	x19, x1
    8ab8:	mov	x21, x0
    8abc:	add	x0, sp, #0x90
    8ac0:	add	x2, sp, #0x50
    8ac4:	add	x3, sp, #0x48
    8ac8:	add	x4, sp, #0x4c
    8acc:	mov	w1, #0x100                 	// #256
    8ad0:	stp	x29, x30, [sp, #400]
    8ad4:	add	x29, sp, #0x190
    8ad8:	str	xzr, [sp, #72]
    8adc:	bl	4ff4 <ZSTD_initDStream_usingDDict@plt+0x4e4>
    8ae0:	mov	x20, x0
    8ae4:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    8ae8:	cbnz	w0, 8c34 <ZSTD_getErrorString@@Base+0x1d48>
    8aec:	ldr	w9, [sp, #76]
    8af0:	cmp	w9, #0xc
    8af4:	b.ls	8b00 <ZSTD_getErrorString@@Base+0x1c14>  // b.plast
    8af8:	mov	x20, #0xffffffffffffffd4    	// #-44
    8afc:	b	8c34 <ZSTD_getErrorString@@Base+0x1d48>
    8b00:	ldr	w10, [x19]
    8b04:	ldr	w8, [sp, #72]
    8b08:	add	w10, w10, #0x1
    8b0c:	cmp	w8, w10
    8b10:	b.ls	8b1c <ZSTD_getErrorString@@Base+0x1c30>  // b.plast
    8b14:	mov	x20, #0xffffffffffffffd0    	// #-48
    8b18:	b	8c34 <ZSTD_getErrorString@@Base+0x1d48>
    8b1c:	cbz	w9, 8b58 <ZSTD_getErrorString@@Base+0x1c6c>
    8b20:	mov	w10, wzr
    8b24:	mov	w11, #0x1                   	// #1
    8b28:	add	x12, sp, #0x50
    8b2c:	mov	w13, w11
    8b30:	lsl	x13, x13, #2
    8b34:	ldr	w14, [x12, x13]
    8b38:	sub	w15, w11, #0x1
    8b3c:	add	w11, w11, #0x1
    8b40:	cmp	w11, w9
    8b44:	lsl	w14, w14, w15
    8b48:	add	w14, w14, w10
    8b4c:	str	w10, [x12, x13]
    8b50:	mov	w10, w14
    8b54:	b.ls	8b2c <ZSTD_getErrorString@@Base+0x1c40>  // b.plast
    8b58:	cbz	w8, 8b80 <ZSTD_getErrorString@@Base+0x1c94>
    8b5c:	add	w10, w9, #0x1
    8b60:	add	x11, x21, #0x2
    8b64:	add	x12, sp, #0x90
    8b68:	mov	x13, x8
    8b6c:	ldrb	w14, [x12], #1
    8b70:	subs	x13, x13, #0x1
    8b74:	sub	w14, w10, w14
    8b78:	strb	w14, [x11], #4
    8b7c:	b.ne	8b6c <ZSTD_getErrorString@@Base+0x1c80>  // b.any
    8b80:	stp	xzr, xzr, [sp, #40]
    8b84:	str	wzr, [sp, #64]
    8b88:	str	xzr, [sp, #56]
    8b8c:	stp	xzr, xzr, [sp, #8]
    8b90:	str	wzr, [sp, #32]
    8b94:	str	xzr, [sp, #24]
    8b98:	cbz	w8, 8bc4 <ZSTD_getErrorString@@Base+0x1cd8>
    8b9c:	add	x10, x21, #0x2
    8ba0:	add	x11, sp, #0x28
    8ba4:	mov	x12, x8
    8ba8:	ldrb	w13, [x10], #4
    8bac:	subs	x12, x12, #0x1
    8bb0:	lsl	x13, x13, #1
    8bb4:	ldrh	w14, [x11, x13]
    8bb8:	add	w14, w14, #0x1
    8bbc:	strh	w14, [x11, x13]
    8bc0:	b.ne	8ba8 <ZSTD_getErrorString@@Base+0x1cbc>  // b.any
    8bc4:	add	w11, w9, #0x1
    8bc8:	add	x10, sp, #0x8
    8bcc:	strh	wzr, [x10, w11, uxtw #1]
    8bd0:	cbz	w9, 8bf8 <ZSTD_getErrorString@@Base+0x1d0c>
    8bd4:	mov	w12, wzr
    8bd8:	add	x11, sp, #0x28
    8bdc:	lsl	x13, x9, #1
    8be0:	ldrh	w14, [x11, x13]
    8be4:	strh	w12, [x10, x13]
    8be8:	sub	x9, x9, #0x1
    8bec:	add	w12, w14, w12
    8bf0:	ubfx	w12, w12, #1, #15
    8bf4:	cbnz	w9, 8bdc <ZSTD_getErrorString@@Base+0x1cf0>
    8bf8:	cbz	w8, 8c2c <ZSTD_getErrorString@@Base+0x1d40>
    8bfc:	add	x9, x21, #0x2
    8c00:	add	x10, sp, #0x8
    8c04:	mov	x11, x8
    8c08:	ldrb	w12, [x9]
    8c0c:	subs	x11, x11, #0x1
    8c10:	lsl	x12, x12, #1
    8c14:	ldrh	w13, [x10, x12]
    8c18:	add	w14, w13, #0x1
    8c1c:	strh	w14, [x10, x12]
    8c20:	sturh	w13, [x9, #-2]
    8c24:	add	x9, x9, #0x4
    8c28:	b.ne	8c08 <ZSTD_getErrorString@@Base+0x1d1c>  // b.any
    8c2c:	sub	w8, w8, #0x1
    8c30:	str	w8, [x19]
    8c34:	mov	x0, x20
    8c38:	ldp	x20, x19, [sp, #432]
    8c3c:	ldp	x28, x21, [sp, #416]
    8c40:	ldp	x29, x30, [sp, #400]
    8c44:	add	sp, sp, #0x1c0
    8c48:	ret
    8c4c:	add	x8, x0, w1, uxtw #2
    8c50:	ldrb	w0, [x8, #2]
    8c54:	ret
    8c58:	sub	sp, sp, #0x80
    8c5c:	tst	x4, #0x3
    8c60:	stp	x29, x30, [sp, #64]
    8c64:	stp	x24, x23, [sp, #80]
    8c68:	stp	x22, x21, [sp, #96]
    8c6c:	stp	x20, x19, [sp, #112]
    8c70:	add	x29, sp, #0x40
    8c74:	b.eq	8c80 <ZSTD_getErrorString@@Base+0x1d94>  // b.none
    8c78:	mov	x0, #0xffffffffffffffff    	// #-1
    8c7c:	b	8f40 <ZSTD_getErrorString@@Base+0x2054>
    8c80:	cmp	x5, #0x1, lsl #12
    8c84:	b.cs	8c90 <ZSTD_getErrorString@@Base+0x1da4>  // b.hs, b.nlast
    8c88:	mov	x0, #0xffffffffffffffbe    	// #-66
    8c8c:	b	8f40 <ZSTD_getErrorString@@Base+0x2054>
    8c90:	cmp	w3, #0x0
    8c94:	mov	w8, #0xb                   	// #11
    8c98:	mov	w19, w2
    8c9c:	csel	w23, w8, w3, eq  // eq = none
    8ca0:	cmp	w2, #0xff
    8ca4:	b.ls	8cb0 <ZSTD_getErrorString@@Base+0x1dc4>  // b.plast
    8ca8:	mov	x0, #0xffffffffffffffd2    	// #-46
    8cac:	b	8f40 <ZSTD_getErrorString@@Base+0x2054>
    8cb0:	mov	x22, x1
    8cb4:	mov	x20, x0
    8cb8:	mov	w2, #0x1000                	// #4096
    8cbc:	mov	x0, x4
    8cc0:	mov	w1, wzr
    8cc4:	mov	x24, x4
    8cc8:	add	x21, x4, #0x8
    8ccc:	bl	46a0 <memset@plt>
    8cd0:	mov	x0, x21
    8cd4:	mov	x1, x22
    8cd8:	mov	w2, w19
    8cdc:	bl	8f58 <ZSTD_getErrorString@@Base+0x206c>
    8ce0:	add	w8, w19, #0xff
    8ce4:	sub	w9, w8, #0xff
    8ce8:	lsl	x9, x9, #3
    8cec:	ldr	w9, [x21, x9]
    8cf0:	sub	w8, w8, #0x1
    8cf4:	cbz	w9, 8ce4 <ZSTD_getErrorString@@Base+0x1df8>
    8cf8:	sub	w22, w8, #0xfe
    8cfc:	sub	w9, w8, #0xff
    8d00:	add	x10, x21, w22, sxtw #3
    8d04:	add	x11, x21, w9, sxtw #3
    8d08:	ldr	w12, [x10]
    8d0c:	ldr	w13, [x11]
    8d10:	add	w9, w8, #0x1
    8d14:	mov	w14, #0x100                 	// #256
    8d18:	cmp	w9, #0x101
    8d1c:	add	w12, w13, w12
    8d20:	str	w12, [x24, #2056]
    8d24:	strh	w14, [x11, #4]
    8d28:	strh	w14, [x10, #4]
    8d2c:	b.cc	8d50 <ZSTD_getErrorString@@Base+0x1e64>  // b.lo, b.ul, b.last
    8d30:	mov	w10, #0x101                 	// #257
    8d34:	mov	w11, #0x40000000            	// #1073741824
    8d38:	mov	w12, w10
    8d3c:	add	w10, w10, #0x1
    8d40:	lsl	x12, x12, #3
    8d44:	cmp	w10, w9
    8d48:	str	w11, [x21, x12]
    8d4c:	b.ls	8d38 <ZSTD_getErrorString@@Base+0x1e4c>  // b.plast
    8d50:	mov	w10, #0x80000000            	// #-2147483648
    8d54:	cmp	w9, #0x101
    8d58:	str	w10, [x24]
    8d5c:	b.cc	8de8 <ZSTD_getErrorString@@Base+0x1efc>  // b.lo, b.ul, b.last
    8d60:	sub	w12, w8, #0x100
    8d64:	mov	w11, #0x100                 	// #256
    8d68:	mov	w10, #0x101                 	// #257
    8d6c:	sbfiz	x13, x12, #3, #32
    8d70:	sbfiz	x14, x11, #3, #32
    8d74:	ldr	w13, [x21, x13]
    8d78:	ldr	w14, [x21, x14]
    8d7c:	cmp	w13, w14
    8d80:	cset	w13, cc  // cc = lo, ul, last
    8d84:	cinc	w14, w11, cs  // cs = hs, nlast
    8d88:	sub	w13, w12, w13
    8d8c:	sbfiz	x15, x14, #3, #32
    8d90:	sbfiz	x16, x13, #3, #32
    8d94:	ldr	w15, [x21, x15]
    8d98:	ldr	w16, [x21, x16]
    8d9c:	csel	w11, w12, w11, cc  // cc = lo, ul, last
    8da0:	add	x12, x21, w11, uxtw #3
    8da4:	ldr	w11, [x12]
    8da8:	cmp	w16, w15
    8dac:	csel	w15, w13, w14, cc  // cc = lo, ul, last
    8db0:	add	x15, x21, w15, uxtw #3
    8db4:	ldr	w16, [x15]
    8db8:	add	w11, w16, w11
    8dbc:	and	x16, x10, #0xffff
    8dc0:	lsl	x16, x16, #3
    8dc4:	str	w11, [x21, x16]
    8dc8:	cset	w16, cc  // cc = lo, ul, last
    8dcc:	strh	w10, [x15, #4]
    8dd0:	strh	w10, [x12, #4]
    8dd4:	add	w10, w10, #0x1
    8dd8:	cinc	w11, w14, cs  // cs = hs, nlast
    8ddc:	cmp	w9, w10, uxth
    8de0:	sub	w12, w13, w16
    8de4:	b.cs	8d6c <ZSTD_getErrorString@@Base+0x1e80>  // b.hs, b.nlast
    8de8:	add	x9, x21, w9, uxtw #3
    8dec:	cmp	w8, #0x100
    8df0:	strb	wzr, [x9, #7]
    8df4:	b.cc	8e24 <ZSTD_getErrorString@@Base+0x1f38>  // b.lo, b.ul, b.last
    8df8:	add	x9, x24, w8, uxtw #3
    8dfc:	add	x9, x9, #0xc
    8e00:	ldrh	w10, [x9]
    8e04:	sub	w8, w8, #0x1
    8e08:	cmp	w8, #0xff
    8e0c:	add	x10, x21, x10, lsl #3
    8e10:	ldrb	w10, [x10, #7]
    8e14:	add	w10, w10, #0x1
    8e18:	strb	w10, [x9, #3]
    8e1c:	sub	x9, x9, #0x8
    8e20:	b.hi	8e00 <ZSTD_getErrorString@@Base+0x1f14>  // b.pmore
    8e24:	mov	w8, wzr
    8e28:	add	x9, x21, w8, uxtw #3
    8e2c:	ldrh	w10, [x9, #4]
    8e30:	add	w8, w8, #0x1
    8e34:	cmp	w8, w22
    8e38:	add	x10, x21, x10, lsl #3
    8e3c:	ldrb	w10, [x10, #7]
    8e40:	add	w10, w10, #0x1
    8e44:	strb	w10, [x9, #7]
    8e48:	b.ls	8e28 <ZSTD_getErrorString@@Base+0x1f3c>  // b.plast
    8e4c:	mov	x0, x21
    8e50:	mov	w1, w22
    8e54:	mov	w2, w23
    8e58:	bl	90bc <ZSTD_getErrorString@@Base+0x21d0>
    8e5c:	mov	w8, wzr
    8e60:	cmp	w0, #0xc
    8e64:	stp	xzr, xzr, [sp, #32]
    8e68:	strh	wzr, [sp, #56]
    8e6c:	str	xzr, [sp, #48]
    8e70:	stp	xzr, xzr, [sp]
    8e74:	strh	wzr, [sp, #24]
    8e78:	str	xzr, [sp, #16]
    8e7c:	b.hi	8f34 <ZSTD_getErrorString@@Base+0x2048>  // b.pmore
    8e80:	mov	w8, wzr
    8e84:	add	x9, sp, #0x20
    8e88:	add	x10, x21, w8, uxtw #3
    8e8c:	ldrb	w10, [x10, #7]
    8e90:	add	w8, w8, #0x1
    8e94:	cmp	w8, w22
    8e98:	lsl	x10, x10, #1
    8e9c:	ldrh	w11, [x9, x10]
    8ea0:	add	w11, w11, #0x1
    8ea4:	strh	w11, [x9, x10]
    8ea8:	b.ls	8e88 <ZSTD_getErrorString@@Base+0x1f9c>  // b.plast
    8eac:	cbz	w0, 8edc <ZSTD_getErrorString@@Base+0x1ff0>
    8eb0:	mov	w9, wzr
    8eb4:	mov	w8, w0
    8eb8:	mov	x10, sp
    8ebc:	add	x11, sp, #0x20
    8ec0:	lsl	x12, x8, #1
    8ec4:	ldrh	w13, [x11, x12]
    8ec8:	strh	w9, [x10, x12]
    8ecc:	sub	x8, x8, #0x1
    8ed0:	add	w9, w13, w9
    8ed4:	ubfx	w9, w9, #1, #15
    8ed8:	cbnz	w8, 8ec0 <ZSTD_getErrorString@@Base+0x1fd4>
    8edc:	mov	w8, wzr
    8ee0:	add	x9, x21, w8, uxtw #3
    8ee4:	ldrb	w10, [x9, #6]
    8ee8:	ldrb	w9, [x9, #7]
    8eec:	add	w8, w8, #0x1
    8ef0:	cmp	w8, w19
    8ef4:	add	x10, x20, x10, lsl #2
    8ef8:	strb	w9, [x10, #2]
    8efc:	b.ls	8ee0 <ZSTD_getErrorString@@Base+0x1ff4>  // b.plast
    8f00:	mov	w8, wzr
    8f04:	mov	x9, sp
    8f08:	add	x10, x20, w8, uxtw #2
    8f0c:	ldrb	w11, [x10, #2]
    8f10:	add	w8, w8, #0x1
    8f14:	cmp	w8, w19
    8f18:	lsl	x11, x11, #1
    8f1c:	ldrh	w12, [x9, x11]
    8f20:	add	w13, w12, #0x1
    8f24:	strh	w13, [x9, x11]
    8f28:	strh	w12, [x10]
    8f2c:	b.ls	8f08 <ZSTD_getErrorString@@Base+0x201c>  // b.plast
    8f30:	mov	w8, #0x1                   	// #1
    8f34:	mov	w9, w0
    8f38:	cmp	w8, #0x0
    8f3c:	csinv	x0, x9, xzr, ne  // ne = any
    8f40:	ldp	x20, x19, [sp, #112]
    8f44:	ldp	x22, x21, [sp, #96]
    8f48:	ldp	x24, x23, [sp, #80]
    8f4c:	ldp	x29, x30, [sp, #64]
    8f50:	add	sp, sp, #0x80
    8f54:	ret
    8f58:	sub	sp, sp, #0x150
    8f5c:	stp	x24, x23, [sp, #288]
    8f60:	stp	x22, x21, [sp, #304]
    8f64:	stp	x20, x19, [sp, #320]
    8f68:	mov	w19, w2
    8f6c:	mov	x20, x1
    8f70:	mov	x21, x0
    8f74:	mov	w22, wzr
    8f78:	movi	v0.2d, #0x0
    8f7c:	mov	x23, sp
    8f80:	stp	x29, x30, [sp, #256]
    8f84:	str	x28, [sp, #272]
    8f88:	add	x29, sp, #0x100
    8f8c:	stp	q0, q0, [sp, #224]
    8f90:	stp	q0, q0, [sp, #192]
    8f94:	stp	q0, q0, [sp, #160]
    8f98:	stp	q0, q0, [sp, #128]
    8f9c:	stp	q0, q0, [sp, #96]
    8fa0:	stp	q0, q0, [sp, #64]
    8fa4:	stp	q0, q0, [sp, #32]
    8fa8:	stp	q0, q0, [sp]
    8fac:	ldr	w8, [x20, w22, uxtw #2]
    8fb0:	add	w0, w8, #0x1
    8fb4:	bl	9bc4 <ZSTD_getErrorString@@Base+0x2cd8>
    8fb8:	mov	w8, w0
    8fbc:	lsl	x8, x8, #3
    8fc0:	ldr	w9, [x23, x8]
    8fc4:	add	w22, w22, #0x1
    8fc8:	cmp	w22, w19
    8fcc:	add	w9, w9, #0x1
    8fd0:	str	w9, [x23, x8]
    8fd4:	b.ls	8fac <ZSTD_getErrorString@@Base+0x20c0>  // b.plast
    8fd8:	mov	x8, xzr
    8fdc:	mov	x9, sp
    8fe0:	add	x10, x9, x8
    8fe4:	ldr	w11, [x10, #240]
    8fe8:	ldr	w12, [x10, #232]
    8fec:	sub	x8, x8, #0x8
    8ff0:	cmn	x8, #0xf0
    8ff4:	add	w11, w12, w11
    8ff8:	str	w11, [x10, #232]
    8ffc:	b.ne	8fe0 <ZSTD_getErrorString@@Base+0x20f4>  // b.any
    9000:	mov	x8, xzr
    9004:	mov	x9, sp
    9008:	add	x10, x9, x8
    900c:	ldr	w11, [x10]
    9010:	add	x8, x8, #0x8
    9014:	cmp	x8, #0x100
    9018:	str	w11, [x10, #4]
    901c:	b.ne	9008 <ZSTD_getErrorString@@Base+0x211c>  // b.any
    9020:	mov	w22, wzr
    9024:	mov	x23, sp
    9028:	b	9048 <ZSTD_getErrorString@@Base+0x215c>
    902c:	mov	w10, w9
    9030:	add	x8, x21, w10, uxtw #3
    9034:	strb	w22, [x8, #6]
    9038:	add	w22, w22, #0x1
    903c:	cmp	w22, w19
    9040:	str	w24, [x8]
    9044:	b.hi	90a0 <ZSTD_getErrorString@@Base+0x21b4>  // b.pmore
    9048:	ldr	w24, [x20, w22, uxtw #2]
    904c:	add	w0, w24, #0x1
    9050:	bl	9bc4 <ZSTD_getErrorString@@Base+0x2cd8>
    9054:	add	w8, w0, #0x1
    9058:	add	x8, x23, w8, uxtw #3
    905c:	ldp	w10, w9, [x8]
    9060:	add	w11, w9, #0x1
    9064:	cmp	w9, w10
    9068:	str	w11, [x8, #4]
    906c:	b.ls	902c <ZSTD_getErrorString@@Base+0x2140>  // b.plast
    9070:	sub	w10, w9, #0x1
    9074:	add	x11, x21, w10, uxtw #3
    9078:	ldr	w12, [x11]
    907c:	cmp	w24, w12
    9080:	b.ls	902c <ZSTD_getErrorString@@Base+0x2140>  // b.plast
    9084:	ldr	x11, [x11]
    9088:	str	x11, [x21, w9, uxtw #3]
    908c:	ldr	w9, [x8]
    9090:	cmp	w10, w9
    9094:	mov	w9, w10
    9098:	b.hi	9070 <ZSTD_getErrorString@@Base+0x2184>  // b.pmore
    909c:	b	9030 <ZSTD_getErrorString@@Base+0x2144>
    90a0:	ldp	x20, x19, [sp, #320]
    90a4:	ldp	x22, x21, [sp, #304]
    90a8:	ldp	x24, x23, [sp, #288]
    90ac:	ldr	x28, [sp, #272]
    90b0:	ldp	x29, x30, [sp, #256]
    90b4:	add	sp, sp, #0x150
    90b8:	ret
    90bc:	sub	sp, sp, #0x90
    90c0:	stp	x29, x30, [sp, #64]
    90c4:	stp	x26, x25, [sp, #80]
    90c8:	stp	x24, x23, [sp, #96]
    90cc:	stp	x22, x21, [sp, #112]
    90d0:	stp	x20, x19, [sp, #128]
    90d4:	add	x10, x0, w1, uxtw #3
    90d8:	mov	x20, x0
    90dc:	ldrb	w0, [x10, #7]
    90e0:	add	x29, sp, #0x40
    90e4:	subs	w8, w0, w2
    90e8:	b.ls	9360 <ZSTD_getErrorString@@Base+0x2474>  // b.plast
    90ec:	ldrb	w13, [x10, #7]!
    90f0:	mov	w19, w2
    90f4:	cmp	w13, w2
    90f8:	b.ls	9138 <ZSTD_getErrorString@@Base+0x224c>  // b.plast
    90fc:	mov	w11, #0x1                   	// #1
    9100:	mov	w9, wzr
    9104:	lsl	w11, w11, w8
    9108:	mov	w12, #0xffffffff            	// #-1
    910c:	sub	w1, w1, #0x1
    9110:	strb	w19, [x10]
    9114:	add	x10, x20, w1, uxtw #3
    9118:	sub	w14, w0, w13
    911c:	ldrb	w13, [x10, #7]!
    9120:	lsl	w14, w12, w14
    9124:	add	w9, w9, w11
    9128:	add	w9, w9, w14
    912c:	cmp	w13, w19
    9130:	b.hi	910c <ZSTD_getErrorString@@Base+0x2220>  // b.pmore
    9134:	b	913c <ZSTD_getErrorString@@Base+0x2250>
    9138:	mov	w9, wzr
    913c:	add	x10, x20, w1, uxtw #3
    9140:	ldrb	w10, [x10, #7]
    9144:	sub	w1, w1, #0x1
    9148:	cmp	w10, w19
    914c:	b.eq	913c <ZSTD_getErrorString@@Base+0x2250>  // b.none
    9150:	asr	w21, w9, w8
    9154:	mov	x8, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
    9158:	movi	v0.16b, #0xf0
    915c:	adds	w22, w1, #0x1
    9160:	str	x8, [sp, #48]
    9164:	stp	q0, q0, [sp, #16]
    9168:	str	q0, [sp]
    916c:	b.mi	91c0 <ZSTD_getErrorString@@Base+0x22d4>  // b.first
    9170:	sxtw	x8, w22
    9174:	add	x9, x20, w22, sxtw #3
    9178:	add	x8, x8, #0x1
    917c:	add	x9, x9, #0x7
    9180:	mov	x10, sp
    9184:	mov	w11, w22
    9188:	mov	w12, w19
    918c:	b	91a4 <ZSTD_getErrorString@@Base+0x22b8>
    9190:	sub	x8, x8, #0x1
    9194:	sub	w11, w11, #0x1
    9198:	cmp	x8, #0x0
    919c:	sub	x9, x9, #0x8
    91a0:	b.le	91c0 <ZSTD_getErrorString@@Base+0x22d4>
    91a4:	ldrb	w13, [x9]
    91a8:	cmp	w12, w13
    91ac:	b.ls	9190 <ZSTD_getErrorString@@Base+0x22a4>  // b.plast
    91b0:	sub	w12, w19, w13
    91b4:	str	w11, [x10, w12, uxtw #2]
    91b8:	mov	w12, w13
    91bc:	b	9190 <ZSTD_getErrorString@@Base+0x22a4>
    91c0:	cmp	w21, #0x1
    91c4:	b.lt	92d8 <ZSTD_getErrorString@@Base+0x23ec>  // b.tstop
    91c8:	mov	w23, #0xf0f0f0f0            	// #-252645136
    91cc:	mov	x24, sp
    91d0:	mov	w25, #0xb                   	// #11
    91d4:	mov	w26, #0x1                   	// #1
    91d8:	b	91e8 <ZSTD_getErrorString@@Base+0x22fc>
    91dc:	cmp	w21, #0x0
    91e0:	str	w11, [x24, x9, lsl #2]
    91e4:	b.le	92d8 <ZSTD_getErrorString@@Base+0x23ec>
    91e8:	mov	w0, w21
    91ec:	bl	9bc4 <ZSTD_getErrorString@@Base+0x2cd8>
    91f0:	add	w9, w0, #0x1
    91f4:	b	9208 <ZSTD_getErrorString@@Base+0x231c>
    91f8:	mov	w9, #0xd                   	// #13
    91fc:	cmp	w9, #0xb
    9200:	sub	x9, x8, #0x1
    9204:	b.eq	9254 <ZSTD_getErrorString@@Base+0x2368>  // b.none
    9208:	mov	x8, x9
    920c:	cmp	x9, #0x2
    9210:	b.cc	9254 <ZSTD_getErrorString@@Base+0x2368>  // b.lo, b.ul, b.last
    9214:	ldr	w9, [x24, x8, lsl #2]
    9218:	cmp	w9, w23
    921c:	b.eq	91f8 <ZSTD_getErrorString@@Base+0x230c>  // b.none
    9220:	sub	w10, w8, #0x1
    9224:	ldr	w10, [x24, w10, uxtw #2]
    9228:	cmp	w10, w23
    922c:	b.ne	9238 <ZSTD_getErrorString@@Base+0x234c>  // b.any
    9230:	mov	w9, #0xb                   	// #11
    9234:	b	91fc <ZSTD_getErrorString@@Base+0x2310>
    9238:	lsl	x9, x9, #3
    923c:	lsl	x10, x10, #3
    9240:	ldr	w9, [x20, x9]
    9244:	ldr	w10, [x20, x10]
    9248:	cmp	w9, w10, lsl #1
    924c:	csel	w9, wzr, w25, hi  // hi = pmore
    9250:	b	91fc <ZSTD_getErrorString@@Base+0x2310>
    9254:	cmp	w8, #0xd
    9258:	b.cs	9278 <ZSTD_getErrorString@@Base+0x238c>  // b.hs, b.nlast
    925c:	ldr	w9, [x24, w8, uxtw #2]
    9260:	cmp	w9, w23
    9264:	b.ne	9278 <ZSTD_getErrorString@@Base+0x238c>  // b.any
    9268:	add	w8, w8, #0x1
    926c:	cmp	w8, #0xd
    9270:	b.ne	925c <ZSTD_getErrorString@@Base+0x2370>  // b.any
    9274:	mov	w8, #0xd                   	// #13
    9278:	sub	w10, w8, #0x1
    927c:	ldr	w9, [x24, w10, uxtw #2]
    9280:	cmp	w9, w23
    9284:	lsl	w9, w26, w10
    9288:	b.ne	9294 <ZSTD_getErrorString@@Base+0x23a8>  // b.any
    928c:	ldr	w11, [x24, w8, uxtw #2]
    9290:	str	w11, [x24, x10, lsl #2]
    9294:	ldr	w10, [x24, w8, uxtw #2]
    9298:	sub	w21, w21, w9
    929c:	mov	w9, w8
    92a0:	add	x11, x20, x10, lsl #3
    92a4:	ldrb	w12, [x11, #7]
    92a8:	add	w12, w12, #0x1
    92ac:	strb	w12, [x11, #7]
    92b0:	mov	w11, #0xf0f0f0f0            	// #-252645136
    92b4:	cbz	w10, 91dc <ZSTD_getErrorString@@Base+0x22f0>
    92b8:	sub	w10, w10, #0x1
    92bc:	str	w10, [x24, x9, lsl #2]
    92c0:	add	x11, x20, w10, uxtw #3
    92c4:	ldrb	w11, [x11, #7]
    92c8:	sub	w8, w19, w8
    92cc:	cmp	w8, w11
    92d0:	csel	w11, w10, w23, eq  // eq = none
    92d4:	b	91dc <ZSTD_getErrorString@@Base+0x22f0>
    92d8:	tbz	w21, #31, 935c <ZSTD_getErrorString@@Base+0x2470>
    92dc:	mov	w8, #0xf0f0f0f0            	// #-252645136
    92e0:	ldr	w10, [sp, #4]
    92e4:	mov	w9, w21
    92e8:	cmp	w8, w10
    92ec:	b.eq	9314 <ZSTD_getErrorString@@Base+0x2428>  // b.none
    92f0:	add	w10, w10, #0x1
    92f4:	add	x11, x20, w10, uxtw #3
    92f8:	ldrb	w12, [x11, #7]
    92fc:	cmn	w9, #0x1
    9300:	add	w9, w9, #0x1
    9304:	sub	w12, w12, #0x1
    9308:	strb	w12, [x11, #7]
    930c:	b.lt	92e8 <ZSTD_getErrorString@@Base+0x23fc>  // b.tstop
    9310:	b	9358 <ZSTD_getErrorString@@Base+0x246c>
    9314:	str	w10, [sp, #4]
    9318:	add	x10, x20, w22, uxtw #3
    931c:	ldrb	w10, [x10, #7]
    9320:	sub	w22, w22, #0x1
    9324:	cmp	w10, w19
    9328:	b.eq	9318 <ZSTD_getErrorString@@Base+0x242c>  // b.none
    932c:	add	w10, w22, #0x2
    9330:	add	x11, x20, w10, uxtw #3
    9334:	ldrb	w12, [x11, #7]
    9338:	add	w21, w9, #0x1
    933c:	cmn	w9, #0x2
    9340:	add	w22, w22, #0x1
    9344:	sub	w9, w12, #0x1
    9348:	strb	w9, [x11, #7]
    934c:	str	w10, [sp, #4]
    9350:	b.le	92e0 <ZSTD_getErrorString@@Base+0x23f4>
    9354:	b	935c <ZSTD_getErrorString@@Base+0x2470>
    9358:	str	w10, [sp, #4]
    935c:	mov	w0, w19
    9360:	ldp	x20, x19, [sp, #128]
    9364:	ldp	x22, x21, [sp, #112]
    9368:	ldp	x24, x23, [sp, #96]
    936c:	ldp	x26, x25, [sp, #80]
    9370:	ldp	x29, x30, [sp, #64]
    9374:	add	sp, sp, #0x90
    9378:	ret
    937c:	stp	x29, x30, [sp, #-32]!
    9380:	str	x28, [sp, #16]
    9384:	mov	x29, sp
    9388:	sub	sp, sp, #0x1, lsl #12
    938c:	mov	x4, sp
    9390:	mov	w5, #0x1000                	// #4096
    9394:	bl	8c58 <ZSTD_getErrorString@@Base+0x1d6c>
    9398:	add	sp, sp, #0x1, lsl #12
    939c:	ldr	x28, [sp, #16]
    93a0:	ldp	x29, x30, [sp], #32
    93a4:	ret
    93a8:	add	x8, x0, x0, lsr #8
    93ac:	add	x0, x8, #0x89
    93b0:	ret
    93b4:	stp	x29, x30, [sp, #-16]!
    93b8:	mov	x29, sp
    93bc:	bl	93c8 <ZSTD_getErrorString@@Base+0x24dc>
    93c0:	ldp	x29, x30, [sp], #16
    93c4:	ret
    93c8:	sub	sp, sp, #0x60
    93cc:	cmp	x1, #0x8
    93d0:	stp	x29, x30, [sp, #48]
    93d4:	stp	x22, x21, [sp, #64]
    93d8:	stp	x20, x19, [sp, #80]
    93dc:	add	x29, sp, #0x30
    93e0:	b.cc	9408 <ZSTD_getErrorString@@Base+0x251c>  // b.lo, b.ul, b.last
    93e4:	mov	x20, x2
    93e8:	mov	x2, x1
    93ec:	mov	x1, x0
    93f0:	add	x0, sp, #0x8
    93f4:	mov	x19, x4
    93f8:	mov	x21, x3
    93fc:	bl	9bd0 <ZSTD_getErrorString@@Base+0x2ce4>
    9400:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    9404:	cbz	w0, 9420 <ZSTD_getErrorString@@Base+0x2534>
    9408:	mov	x0, xzr
    940c:	ldp	x20, x19, [sp, #80]
    9410:	ldp	x22, x21, [sp, #64]
    9414:	ldp	x29, x30, [sp, #48]
    9418:	add	sp, sp, #0x60
    941c:	ret
    9420:	adrp	x9, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    9424:	and	x8, x21, #0x3
    9428:	add	x9, x9, #0x714
    942c:	adr	x10, 9440 <ZSTD_getErrorString@@Base+0x2554>
    9430:	ldrb	w11, [x9, x8]
    9434:	add	x10, x10, x11, lsl #2
    9438:	and	x21, x21, #0xfffffffffffffffc
    943c:	br	x10
    9440:	orr	x8, x21, #0x2
    9444:	ldrb	w8, [x20, x8]
    9448:	add	x0, sp, #0x8
    944c:	add	x8, x19, x8, lsl #2
    9450:	ldrh	w1, [x8]
    9454:	ldrb	w2, [x8, #2]
    9458:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    945c:	orr	x8, x21, #0x1
    9460:	ldrb	w8, [x20, x8]
    9464:	add	x0, sp, #0x8
    9468:	add	x8, x19, x8, lsl #2
    946c:	ldrh	w1, [x8]
    9470:	ldrb	w2, [x8, #2]
    9474:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    9478:	ldrb	w8, [x20, x21]
    947c:	add	x0, sp, #0x8
    9480:	add	x8, x19, x8, lsl #2
    9484:	ldrh	w1, [x8]
    9488:	ldrb	w2, [x8, #2]
    948c:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    9490:	add	x0, sp, #0x8
    9494:	bl	9bfc <ZSTD_getErrorString@@Base+0x2d10>
    9498:	cbz	x21, 9514 <ZSTD_getErrorString@@Base+0x2628>
    949c:	sub	x20, x20, #0x2
    94a0:	add	x22, x20, x21
    94a4:	ldrb	w8, [x22, #1]
    94a8:	add	x0, sp, #0x8
    94ac:	add	x8, x19, x8, lsl #2
    94b0:	ldrh	w1, [x8]
    94b4:	ldrb	w2, [x8, #2]
    94b8:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    94bc:	ldrb	w8, [x22]
    94c0:	add	x0, sp, #0x8
    94c4:	add	x8, x19, x8, lsl #2
    94c8:	ldrh	w1, [x8]
    94cc:	ldrb	w2, [x8, #2]
    94d0:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    94d4:	ldurb	w8, [x22, #-1]
    94d8:	add	x0, sp, #0x8
    94dc:	add	x8, x19, x8, lsl #2
    94e0:	ldrh	w1, [x8]
    94e4:	ldrb	w2, [x8, #2]
    94e8:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    94ec:	ldurb	w8, [x22, #-2]
    94f0:	add	x0, sp, #0x8
    94f4:	sub	x21, x21, #0x4
    94f8:	add	x8, x19, x8, lsl #2
    94fc:	ldrh	w1, [x8]
    9500:	ldrb	w2, [x8, #2]
    9504:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    9508:	add	x0, sp, #0x8
    950c:	bl	9bfc <ZSTD_getErrorString@@Base+0x2d10>
    9510:	cbnz	x21, 94a0 <ZSTD_getErrorString@@Base+0x25b4>
    9514:	add	x0, sp, #0x8
    9518:	bl	9c5c <ZSTD_getErrorString@@Base+0x2d70>
    951c:	b	940c <ZSTD_getErrorString@@Base+0x2520>
    9520:	stp	x29, x30, [sp, #-16]!
    9524:	mov	x29, sp
    9528:	bl	9534 <ZSTD_getErrorString@@Base+0x2648>
    952c:	ldp	x29, x30, [sp], #16
    9530:	ret
    9534:	stp	x29, x30, [sp, #-96]!
    9538:	stp	x26, x25, [sp, #32]
    953c:	cmp	x1, #0x11
    9540:	mov	x25, xzr
    9544:	stp	x28, x27, [sp, #16]
    9548:	stp	x24, x23, [sp, #48]
    954c:	stp	x22, x21, [sp, #64]
    9550:	stp	x20, x19, [sp, #80]
    9554:	mov	x29, sp
    9558:	b.cc	96bc <ZSTD_getErrorString@@Base+0x27d0>  // b.lo, b.ul, b.last
    955c:	mov	x22, x3
    9560:	cmp	x3, #0xc
    9564:	b.cc	96bc <ZSTD_getErrorString@@Base+0x27d0>  // b.lo, b.ul, b.last
    9568:	add	x8, x22, #0x3
    956c:	add	x20, x0, #0x6
    9570:	lsr	x24, x8, #2
    9574:	mov	x26, x1
    9578:	mov	x19, x0
    957c:	sub	x1, x1, #0x6
    9580:	mov	x0, x20
    9584:	mov	x3, x24
    9588:	mov	x21, x4
    958c:	mov	x23, x2
    9590:	bl	93c8 <ZSTD_getErrorString@@Base+0x24dc>
    9594:	mov	x25, x0
    9598:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    959c:	cbz	w0, 95ac <ZSTD_getErrorString@@Base+0x26c0>
    95a0:	mov	w8, wzr
    95a4:	cbz	w8, 96bc <ZSTD_getErrorString@@Base+0x27d0>
    95a8:	b	95c8 <ZSTD_getErrorString@@Base+0x26dc>
    95ac:	cbz	x25, 95a0 <ZSTD_getErrorString@@Base+0x26b4>
    95b0:	mov	x0, x19
    95b4:	mov	w1, w25
    95b8:	bl	9d04 <ZSTD_getErrorString@@Base+0x2e18>
    95bc:	add	x20, x20, x25
    95c0:	mov	w8, #0x1                   	// #1
    95c4:	cbz	w8, 96bc <ZSTD_getErrorString@@Base+0x27d0>
    95c8:	add	x28, x19, x26
    95cc:	add	x27, x23, x24
    95d0:	sub	x1, x28, x20
    95d4:	mov	x0, x20
    95d8:	mov	x2, x27
    95dc:	mov	x3, x24
    95e0:	mov	x4, x21
    95e4:	bl	93c8 <ZSTD_getErrorString@@Base+0x24dc>
    95e8:	mov	x26, x0
    95ec:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    95f0:	cbz	w0, 9630 <ZSTD_getErrorString@@Base+0x2744>
    95f4:	mov	w8, wzr
    95f8:	cbz	w8, 9650 <ZSTD_getErrorString@@Base+0x2764>
    95fc:	add	x27, x27, x24
    9600:	sub	x1, x28, x20
    9604:	mov	x0, x20
    9608:	mov	x2, x27
    960c:	mov	x3, x24
    9610:	mov	x4, x21
    9614:	bl	93c8 <ZSTD_getErrorString@@Base+0x24dc>
    9618:	mov	x25, x0
    961c:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    9620:	cbz	w0, 9658 <ZSTD_getErrorString@@Base+0x276c>
    9624:	mov	w8, wzr
    9628:	cbz	w8, 96bc <ZSTD_getErrorString@@Base+0x27d0>
    962c:	b	9678 <ZSTD_getErrorString@@Base+0x278c>
    9630:	cbz	x26, 95f4 <ZSTD_getErrorString@@Base+0x2708>
    9634:	add	x0, x19, #0x2
    9638:	mov	w1, w26
    963c:	bl	9d04 <ZSTD_getErrorString@@Base+0x2e18>
    9640:	add	x20, x20, x26
    9644:	mov	w8, #0x1                   	// #1
    9648:	mov	x26, x25
    964c:	cbnz	w8, 95fc <ZSTD_getErrorString@@Base+0x2710>
    9650:	mov	x25, x26
    9654:	b	96bc <ZSTD_getErrorString@@Base+0x27d0>
    9658:	cbz	x25, 9624 <ZSTD_getErrorString@@Base+0x2738>
    965c:	add	x0, x19, #0x4
    9660:	mov	w1, w25
    9664:	bl	9d04 <ZSTD_getErrorString@@Base+0x2e18>
    9668:	add	x20, x20, x25
    966c:	mov	w8, #0x1                   	// #1
    9670:	mov	x25, x26
    9674:	cbz	w8, 96bc <ZSTD_getErrorString@@Base+0x27d0>
    9678:	add	x8, x23, x22
    967c:	add	x2, x27, x24
    9680:	sub	x1, x28, x20
    9684:	sub	x3, x8, x2
    9688:	mov	x0, x20
    968c:	mov	x4, x21
    9690:	bl	93c8 <ZSTD_getErrorString@@Base+0x24dc>
    9694:	mov	x21, x0
    9698:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    969c:	cmp	x21, #0x0
    96a0:	csel	x8, xzr, x25, eq  // eq = none
    96a4:	cmp	w0, #0x0
    96a8:	csel	x25, x8, x21, eq  // eq = none
    96ac:	cbnz	w0, 96bc <ZSTD_getErrorString@@Base+0x27d0>
    96b0:	cbz	x21, 96bc <ZSTD_getErrorString@@Base+0x27d0>
    96b4:	add	x8, x20, x21
    96b8:	sub	x25, x8, x19
    96bc:	mov	x0, x25
    96c0:	ldp	x20, x19, [sp, #80]
    96c4:	ldp	x22, x21, [sp, #64]
    96c8:	ldp	x24, x23, [sp, #48]
    96cc:	ldp	x26, x25, [sp, #32]
    96d0:	ldp	x28, x27, [sp, #16]
    96d4:	ldp	x29, x30, [sp], #96
    96d8:	ret
    96dc:	sub	sp, sp, #0x30
    96e0:	mov	x8, x6
    96e4:	str	x7, [sp]
    96e8:	mov	w6, wzr
    96ec:	mov	x7, x8
    96f0:	stp	x29, x30, [sp, #32]
    96f4:	add	x29, sp, #0x20
    96f8:	stp	xzr, xzr, [sp, #8]
    96fc:	str	wzr, [sp, #24]
    9700:	bl	9710 <ZSTD_getErrorString@@Base+0x2824>
    9704:	ldp	x29, x30, [sp, #32]
    9708:	add	sp, sp, #0x30
    970c:	ret
    9710:	sub	sp, sp, #0x90
    9714:	stp	x29, x30, [sp, #48]
    9718:	add	x29, sp, #0x30
    971c:	tst	x7, #0x3
    9720:	stp	x28, x27, [sp, #64]
    9724:	stp	x26, x25, [sp, #80]
    9728:	stp	x24, x23, [sp, #96]
    972c:	stp	x22, x21, [sp, #112]
    9730:	stp	x20, x19, [sp, #128]
    9734:	stur	w4, [x29, #-4]
    9738:	b.eq	9744 <ZSTD_getErrorString@@Base+0x2858>  // b.none
    973c:	mov	x24, #0xffffffffffffffff    	// #-1
    9740:	b	9980 <ZSTD_getErrorString@@Base+0x2a94>
    9744:	mov	w8, w5
    9748:	ldr	x5, [x29, #96]
    974c:	lsr	x9, x5, #11
    9750:	cmp	x9, #0x3
    9754:	b.cs	9760 <ZSTD_getErrorString@@Base+0x2874>  // b.hs, b.nlast
    9758:	mov	x24, #0xffffffffffffffbe    	// #-66
    975c:	b	9980 <ZSTD_getErrorString@@Base+0x2a94>
    9760:	mov	x27, x1
    9764:	mov	x24, xzr
    9768:	cbz	x1, 9980 <ZSTD_getErrorString@@Base+0x2a94>
    976c:	mov	x20, x3
    9770:	cbz	x3, 9980 <ZSTD_getErrorString@@Base+0x2a94>
    9774:	cmp	x20, #0x20, lsl #12
    9778:	b.ls	9784 <ZSTD_getErrorString@@Base+0x2898>  // b.plast
    977c:	mov	x24, #0xffffffffffffffb8    	// #-72
    9780:	b	9980 <ZSTD_getErrorString@@Base+0x2a94>
    9784:	cmp	w8, #0xc
    9788:	b.ls	9794 <ZSTD_getErrorString@@Base+0x28a8>  // b.plast
    978c:	mov	x24, #0xffffffffffffffd4    	// #-44
    9790:	b	9980 <ZSTD_getErrorString@@Base+0x2a94>
    9794:	cmp	w4, #0xff
    9798:	b.ls	97a4 <ZSTD_getErrorString@@Base+0x28b8>  // b.plast
    979c:	mov	x24, #0xffffffffffffffd2    	// #-46
    97a0:	b	9980 <ZSTD_getErrorString@@Base+0x2a94>
    97a4:	ldr	w9, [x29, #120]
    97a8:	ldr	x25, [x29, #112]
    97ac:	mov	x26, x7
    97b0:	mov	w19, w6
    97b4:	mov	x21, x2
    97b8:	mov	x22, x0
    97bc:	add	x2, x0, x27
    97c0:	cbnz	w4, 97cc <ZSTD_getErrorString@@Base+0x28e0>
    97c4:	mov	w10, #0xff                  	// #255
    97c8:	stur	w10, [x29, #-4]
    97cc:	cmp	w8, #0x0
    97d0:	mov	w10, #0xb                   	// #11
    97d4:	csel	w28, w10, w8, eq  // eq = none
    97d8:	cmp	w9, #0x0
    97dc:	ldr	x6, [x29, #104]
    97e0:	cset	w8, ne  // ne = any
    97e4:	cmp	x25, #0x0
    97e8:	cset	w9, ne  // ne = any
    97ec:	and	w23, w9, w8
    97f0:	cmp	w23, #0x1
    97f4:	b.ne	9804 <ZSTD_getErrorString@@Base+0x2918>  // b.any
    97f8:	ldr	w8, [x25]
    97fc:	cmp	w8, #0x2
    9800:	b.eq	98a8 <ZSTD_getErrorString@@Base+0x29bc>  // b.none
    9804:	str	x2, [sp, #24]
    9808:	sub	x1, x29, #0x4
    980c:	mov	x0, x26
    9810:	mov	x2, x21
    9814:	mov	x3, x20
    9818:	mov	x4, x26
    981c:	stur	x6, [x29, #-16]
    9820:	bl	86f0 <ZSTD_getErrorString@@Base+0x1804>
    9824:	mov	x24, x0
    9828:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    982c:	cbz	w0, 9838 <ZSTD_getErrorString@@Base+0x294c>
    9830:	mov	w8, wzr
    9834:	b	9868 <ZSTD_getErrorString@@Base+0x297c>
    9838:	cmp	x24, x20
    983c:	b.ne	9854 <ZSTD_getErrorString@@Base+0x2968>  // b.any
    9840:	ldrb	w9, [x21]
    9844:	mov	w8, wzr
    9848:	mov	w24, #0x1                   	// #1
    984c:	strb	w9, [x22]
    9850:	b	9868 <ZSTD_getErrorString@@Base+0x297c>
    9854:	lsr	x8, x20, #7
    9858:	add	x8, x8, #0x4
    985c:	cmp	x24, x8
    9860:	mov	x24, xzr
    9864:	cset	w8, hi  // hi = pmore
    9868:	cbz	w8, 9980 <ZSTD_getErrorString@@Base+0x2a94>
    986c:	cbz	x25, 9894 <ZSTD_getErrorString@@Base+0x29a8>
    9870:	ldr	w8, [x25]
    9874:	cmp	w8, #0x1
    9878:	b.ne	9894 <ZSTD_getErrorString@@Base+0x29a8>  // b.any
    987c:	ldur	w2, [x29, #-4]
    9880:	ldur	x0, [x29, #-16]
    9884:	mov	x1, x26
    9888:	bl	9d98 <ZSTD_getErrorString@@Base+0x2eac>
    988c:	cbnz	w0, 9894 <ZSTD_getErrorString@@Base+0x29a8>
    9890:	str	wzr, [x25]
    9894:	cbz	w23, 98c8 <ZSTD_getErrorString@@Base+0x29dc>
    9898:	ldr	w8, [x25]
    989c:	cbz	w8, 98c8 <ZSTD_getErrorString@@Base+0x29dc>
    98a0:	ldr	x2, [sp, #24]
    98a4:	ldur	x6, [x29, #-16]
    98a8:	mov	x0, x22
    98ac:	mov	x1, x22
    98b0:	mov	x3, x21
    98b4:	mov	x4, x20
    98b8:	mov	w5, w19
    98bc:	bl	9d20 <ZSTD_getErrorString@@Base+0x2e34>
    98c0:	mov	x24, x0
    98c4:	b	9980 <ZSTD_getErrorString@@Base+0x2a94>
    98c8:	ldur	w2, [x29, #-4]
    98cc:	mov	w0, w28
    98d0:	mov	x1, x20
    98d4:	bl	8790 <ZSTD_getErrorString@@Base+0x18a4>
    98d8:	ldur	w2, [x29, #-4]
    98dc:	add	x28, x26, #0x400
    98e0:	mov	w3, w0
    98e4:	add	x4, x26, #0x800
    98e8:	mov	w5, #0x1000                	// #4096
    98ec:	mov	x0, x28
    98f0:	mov	x1, x26
    98f4:	str	w3, [sp, #20]
    98f8:	bl	8c58 <ZSTD_getErrorString@@Base+0x1d6c>
    98fc:	mov	x23, x0
    9900:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    9904:	cmp	w0, #0x0
    9908:	cset	w8, ne  // ne = any
    990c:	csel	x24, x24, x23, eq  // eq = none
    9910:	str	x28, [sp, #8]
    9914:	cbz	w0, 9920 <ZSTD_getErrorString@@Base+0x2a34>
    9918:	ldr	w4, [sp, #20]
    991c:	b	9948 <ZSTD_getErrorString@@Base+0x2a5c>
    9920:	ldur	w8, [x29, #-4]
    9924:	mov	w9, #0x400                 	// #1024
    9928:	mov	w1, wzr
    992c:	add	w8, w8, #0x1
    9930:	lsl	x8, x8, #2
    9934:	add	x0, x28, x8
    9938:	sub	x2, x9, x8
    993c:	bl	46a0 <memset@plt>
    9940:	mov	w8, wzr
    9944:	mov	w4, w23
    9948:	cbnz	w8, 9980 <ZSTD_getErrorString@@Base+0x2a94>
    994c:	ldr	x23, [sp, #8]
    9950:	ldur	w3, [x29, #-4]
    9954:	mov	x0, x22
    9958:	mov	x1, x27
    995c:	mov	x2, x23
    9960:	bl	87a8 <ZSTD_getErrorString@@Base+0x18bc>
    9964:	mov	x27, x0
    9968:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    996c:	cbz	w0, 99a4 <ZSTD_getErrorString@@Base+0x2ab8>
    9970:	mov	w8, #0x1                   	// #1
    9974:	mov	x26, x22
    9978:	mov	x24, x27
    997c:	cbz	w8, 99fc <ZSTD_getErrorString@@Base+0x2b10>
    9980:	mov	x0, x24
    9984:	ldp	x20, x19, [sp, #128]
    9988:	ldp	x22, x21, [sp, #112]
    998c:	ldp	x24, x23, [sp, #96]
    9990:	ldp	x26, x25, [sp, #80]
    9994:	ldp	x28, x27, [sp, #64]
    9998:	ldp	x29, x30, [sp, #48]
    999c:	add	sp, sp, #0x90
    99a0:	ret
    99a4:	cbz	x25, 9a50 <ZSTD_getErrorString@@Base+0x2b64>
    99a8:	ldr	w8, [x25]
    99ac:	cbz	w8, 9a50 <ZSTD_getErrorString@@Base+0x2b64>
    99b0:	ldur	w28, [x29, #-4]
    99b4:	ldur	x0, [x29, #-16]
    99b8:	mov	x1, x26
    99bc:	mov	w2, w28
    99c0:	bl	9de4 <ZSTD_getErrorString@@Base+0x2ef8>
    99c4:	mov	x8, x23
    99c8:	mov	x23, x0
    99cc:	mov	x0, x8
    99d0:	mov	x1, x26
    99d4:	mov	w2, w28
    99d8:	bl	9de4 <ZSTD_getErrorString@@Base+0x2ef8>
    99dc:	add	x8, x27, #0xc
    99e0:	cmp	x8, x20
    99e4:	b.cs	9a1c <ZSTD_getErrorString@@Base+0x2b30>  // b.hs, b.nlast
    99e8:	add	x8, x0, x27
    99ec:	cmp	x23, x8
    99f0:	b.ls	9a1c <ZSTD_getErrorString@@Base+0x2b30>  // b.plast
    99f4:	mov	w8, wzr
    99f8:	b	9a44 <ZSTD_getErrorString@@Base+0x2b58>
    99fc:	ldr	x2, [sp, #24]
    9a00:	mov	x0, x22
    9a04:	mov	x1, x26
    9a08:	mov	x3, x21
    9a0c:	mov	x4, x20
    9a10:	mov	w5, w19
    9a14:	mov	x6, x23
    9a18:	b	98bc <ZSTD_getErrorString@@Base+0x29d0>
    9a1c:	ldr	x2, [sp, #24]
    9a20:	ldur	x6, [x29, #-16]
    9a24:	mov	x0, x22
    9a28:	mov	x1, x22
    9a2c:	mov	x3, x21
    9a30:	mov	x4, x20
    9a34:	mov	w5, w19
    9a38:	bl	9d20 <ZSTD_getErrorString@@Base+0x2e34>
    9a3c:	mov	x24, x0
    9a40:	mov	w8, #0x1                   	// #1
    9a44:	ldr	x23, [sp, #8]
    9a48:	mov	x26, x22
    9a4c:	cbnz	w8, 997c <ZSTD_getErrorString@@Base+0x2a90>
    9a50:	add	x8, x27, #0xc
    9a54:	cmp	x8, x20
    9a58:	b.cs	9a84 <ZSTD_getErrorString@@Base+0x2b98>  // b.hs, b.nlast
    9a5c:	add	x26, x22, x27
    9a60:	cbz	x25, 9a68 <ZSTD_getErrorString@@Base+0x2b7c>
    9a64:	str	wzr, [x25]
    9a68:	ldur	x0, [x29, #-16]
    9a6c:	cbz	x0, 9a7c <ZSTD_getErrorString@@Base+0x2b90>
    9a70:	mov	w2, #0x400                 	// #1024
    9a74:	mov	x1, x23
    9a78:	bl	4420 <memcpy@plt>
    9a7c:	mov	w8, wzr
    9a80:	b	997c <ZSTD_getErrorString@@Base+0x2a90>
    9a84:	mov	x24, xzr
    9a88:	mov	w8, #0x1                   	// #1
    9a8c:	mov	x26, x22
    9a90:	b	997c <ZSTD_getErrorString@@Base+0x2a90>
    9a94:	sub	sp, sp, #0x30
    9a98:	stp	x29, x30, [sp, #32]
    9a9c:	add	x29, sp, #0x20
    9aa0:	ldp	x9, x10, [x29, #16]
    9aa4:	ldr	w11, [x29, #32]
    9aa8:	mov	x8, x6
    9aac:	str	x7, [sp]
    9ab0:	mov	w6, wzr
    9ab4:	mov	x7, x8
    9ab8:	str	w11, [sp, #24]
    9abc:	stp	x9, x10, [sp, #8]
    9ac0:	bl	9710 <ZSTD_getErrorString@@Base+0x2824>
    9ac4:	ldp	x29, x30, [sp, #32]
    9ac8:	add	sp, sp, #0x30
    9acc:	ret
    9ad0:	stp	x29, x30, [sp, #-32]!
    9ad4:	str	x28, [sp, #16]
    9ad8:	mov	x29, sp
    9adc:	sub	sp, sp, #0x1, lsl #12
    9ae0:	sub	sp, sp, #0x800
    9ae4:	mov	x6, sp
    9ae8:	mov	w7, #0x1800                	// #6144
    9aec:	bl	96dc <ZSTD_getErrorString@@Base+0x27f0>
    9af0:	add	sp, sp, #0x1, lsl #12
    9af4:	add	sp, sp, #0x800
    9af8:	ldr	x28, [sp, #16]
    9afc:	ldp	x29, x30, [sp], #32
    9b00:	ret
    9b04:	sub	sp, sp, #0x30
    9b08:	mov	x8, x6
    9b0c:	mov	w6, #0x1                   	// #1
    9b10:	str	x7, [sp]
    9b14:	mov	x7, x8
    9b18:	stp	x29, x30, [sp, #32]
    9b1c:	add	x29, sp, #0x20
    9b20:	stp	xzr, xzr, [sp, #8]
    9b24:	str	wzr, [sp, #24]
    9b28:	bl	9710 <ZSTD_getErrorString@@Base+0x2824>
    9b2c:	ldp	x29, x30, [sp, #32]
    9b30:	add	sp, sp, #0x30
    9b34:	ret
    9b38:	sub	sp, sp, #0x30
    9b3c:	stp	x29, x30, [sp, #32]
    9b40:	add	x29, sp, #0x20
    9b44:	ldp	x9, x10, [x29, #16]
    9b48:	ldr	w11, [x29, #32]
    9b4c:	mov	x8, x6
    9b50:	mov	w6, #0x1                   	// #1
    9b54:	str	x7, [sp]
    9b58:	mov	x7, x8
    9b5c:	str	w11, [sp, #24]
    9b60:	stp	x9, x10, [sp, #8]
    9b64:	bl	9710 <ZSTD_getErrorString@@Base+0x2824>
    9b68:	ldp	x29, x30, [sp, #32]
    9b6c:	add	sp, sp, #0x30
    9b70:	ret
    9b74:	stp	x29, x30, [sp, #-32]!
    9b78:	str	x28, [sp, #16]
    9b7c:	mov	x29, sp
    9b80:	sub	sp, sp, #0x1, lsl #12
    9b84:	sub	sp, sp, #0x800
    9b88:	mov	x6, sp
    9b8c:	mov	w7, #0x1800                	// #6144
    9b90:	bl	9b04 <ZSTD_getErrorString@@Base+0x2c18>
    9b94:	add	sp, sp, #0x1, lsl #12
    9b98:	add	sp, sp, #0x800
    9b9c:	ldr	x28, [sp, #16]
    9ba0:	ldp	x29, x30, [sp], #32
    9ba4:	ret
    9ba8:	stp	x29, x30, [sp, #-16]!
    9bac:	mov	w4, #0xff                  	// #255
    9bb0:	mov	w5, #0xb                   	// #11
    9bb4:	mov	x29, sp
    9bb8:	bl	9b74 <ZSTD_getErrorString@@Base+0x2c88>
    9bbc:	ldp	x29, x30, [sp], #16
    9bc0:	ret
    9bc4:	clz	w8, w0
    9bc8:	eor	w0, w8, #0x1f
    9bcc:	ret
    9bd0:	add	x8, x1, x2
    9bd4:	cmp	x2, #0x9
    9bd8:	mov	x9, #0xffffffffffffffba    	// #-70
    9bdc:	sub	x10, x8, #0x8
    9be0:	csel	x8, x9, xzr, cc  // cc = lo, ul, last
    9be4:	str	xzr, [x0]
    9be8:	str	wzr, [x0, #8]
    9bec:	stp	x1, x1, [x0, #16]
    9bf0:	str	x10, [x0, #32]
    9bf4:	mov	x0, x8
    9bf8:	ret
    9bfc:	stp	x29, x30, [sp, #-32]!
    9c00:	stp	x20, x19, [sp, #16]
    9c04:	mov	x19, x0
    9c08:	ldr	w8, [x0, #8]
    9c0c:	ldr	x0, [x0, #24]
    9c10:	ldr	x1, [x19]
    9c14:	mov	x29, sp
    9c18:	lsr	x20, x8, #3
    9c1c:	bl	9cd4 <ZSTD_getErrorString@@Base+0x2de8>
    9c20:	ldp	x8, x9, [x19, #24]
    9c24:	ldr	w10, [x19, #8]
    9c28:	ldr	x11, [x19]
    9c2c:	lsl	x12, x20, #3
    9c30:	add	x8, x8, x20
    9c34:	cmp	x8, x9
    9c38:	and	w10, w10, #0x7
    9c3c:	lsr	x11, x11, x12
    9c40:	csel	x8, x9, x8, hi  // hi = pmore
    9c44:	str	w10, [x19, #8]
    9c48:	str	x8, [x19, #24]
    9c4c:	str	x11, [x19]
    9c50:	ldp	x20, x19, [sp, #16]
    9c54:	ldp	x29, x30, [sp], #32
    9c58:	ret
    9c5c:	stp	x29, x30, [sp, #-32]!
    9c60:	mov	w1, #0x1                   	// #1
    9c64:	mov	w2, #0x1                   	// #1
    9c68:	str	x19, [sp, #16]
    9c6c:	mov	x29, sp
    9c70:	mov	x19, x0
    9c74:	bl	9cb4 <ZSTD_getErrorString@@Base+0x2dc8>
    9c78:	mov	x0, x19
    9c7c:	bl	9bfc <ZSTD_getErrorString@@Base+0x2d10>
    9c80:	ldp	x8, x9, [x19, #24]
    9c84:	cmp	x8, x9
    9c88:	b.cs	9ca4 <ZSTD_getErrorString@@Base+0x2db8>  // b.hs, b.nlast
    9c8c:	ldr	x9, [x19, #16]
    9c90:	ldr	w10, [x19, #8]
    9c94:	sub	x8, x8, x9
    9c98:	cmp	w10, #0x0
    9c9c:	cinc	x0, x8, ne  // ne = any
    9ca0:	b	9ca8 <ZSTD_getErrorString@@Base+0x2dbc>
    9ca4:	mov	x0, xzr
    9ca8:	ldr	x19, [sp, #16]
    9cac:	ldp	x29, x30, [sp], #32
    9cb0:	ret
    9cb4:	ldr	w8, [x0, #8]
    9cb8:	ldr	x9, [x0]
    9cbc:	lsl	x10, x1, x8
    9cc0:	add	w8, w8, w2
    9cc4:	orr	x9, x10, x9
    9cc8:	str	x9, [x0]
    9ccc:	str	w8, [x0, #8]
    9cd0:	ret
    9cd4:	stp	x29, x30, [sp, #-16]!
    9cd8:	mov	x29, sp
    9cdc:	bl	9ce8 <ZSTD_getErrorString@@Base+0x2dfc>
    9ce0:	ldp	x29, x30, [sp], #16
    9ce4:	ret
    9ce8:	stp	x29, x30, [sp, #-16]!
    9cec:	mov	x29, sp
    9cf0:	bl	9cfc <ZSTD_getErrorString@@Base+0x2e10>
    9cf4:	ldp	x29, x30, [sp], #16
    9cf8:	ret
    9cfc:	str	x1, [x0]
    9d00:	ret
    9d04:	stp	x29, x30, [sp, #-16]!
    9d08:	mov	x29, sp
    9d0c:	bl	9d18 <ZSTD_getErrorString@@Base+0x2e2c>
    9d10:	ldp	x29, x30, [sp], #16
    9d14:	ret
    9d18:	strh	w1, [x0]
    9d1c:	ret
    9d20:	stp	x29, x30, [sp, #-48]!
    9d24:	stp	x22, x21, [sp, #16]
    9d28:	mov	x21, x1
    9d2c:	stp	x20, x19, [sp, #32]
    9d30:	mov	x19, x4
    9d34:	mov	x20, x0
    9d38:	sub	x1, x2, x1
    9d3c:	mov	x0, x21
    9d40:	mov	x2, x3
    9d44:	mov	x3, x4
    9d48:	mov	x4, x6
    9d4c:	mov	x29, sp
    9d50:	cbz	w5, 9d5c <ZSTD_getErrorString@@Base+0x2e70>
    9d54:	bl	9534 <ZSTD_getErrorString@@Base+0x2648>
    9d58:	b	9d60 <ZSTD_getErrorString@@Base+0x2e74>
    9d5c:	bl	93c8 <ZSTD_getErrorString@@Base+0x24dc>
    9d60:	mov	x22, x0
    9d64:	bl	8a94 <ZSTD_getErrorString@@Base+0x1ba8>
    9d68:	cbnz	w0, 9d84 <ZSTD_getErrorString@@Base+0x2e98>
    9d6c:	cbz	x22, 9d84 <ZSTD_getErrorString@@Base+0x2e98>
    9d70:	add	x8, x21, x22
    9d74:	sub	x8, x8, x20
    9d78:	sub	x9, x19, #0x1
    9d7c:	cmp	x8, x9
    9d80:	csel	x22, x8, xzr, cc  // cc = lo, ul, last
    9d84:	mov	x0, x22
    9d88:	ldp	x20, x19, [sp, #32]
    9d8c:	ldp	x22, x21, [sp, #16]
    9d90:	ldp	x29, x30, [sp], #48
    9d94:	ret
    9d98:	tbnz	w2, #31, 9ddc <ZSTD_getErrorString@@Base+0x2ef0>
    9d9c:	mov	w8, wzr
    9da0:	add	w9, w2, #0x1
    9da4:	add	x10, x0, #0x2
    9da8:	ldr	w11, [x1], #4
    9dac:	ldrb	w12, [x10], #4
    9db0:	cmp	w11, #0x0
    9db4:	cset	w11, ne  // ne = any
    9db8:	cmp	w12, #0x0
    9dbc:	cset	w12, eq  // eq = none
    9dc0:	and	w11, w11, w12
    9dc4:	subs	x9, x9, #0x1
    9dc8:	orr	w8, w8, w11
    9dcc:	b.ne	9da8 <ZSTD_getErrorString@@Base+0x2ebc>  // b.any
    9dd0:	cmp	w8, #0x0
    9dd4:	cset	w0, eq  // eq = none
    9dd8:	ret
    9ddc:	mov	w0, #0x1                   	// #1
    9de0:	ret
    9de4:	tbnz	w2, #31, 9e14 <ZSTD_getErrorString@@Base+0x2f28>
    9de8:	mov	x8, xzr
    9dec:	add	w9, w2, #0x1
    9df0:	add	x10, x0, #0x2
    9df4:	ldrb	w11, [x10], #4
    9df8:	ldr	w12, [x1], #4
    9dfc:	subs	x9, x9, #0x1
    9e00:	mul	w11, w12, w11
    9e04:	add	x8, x8, x11
    9e08:	b.ne	9df4 <ZSTD_getErrorString@@Base+0x2f08>  // b.any
    9e0c:	lsr	x0, x8, #3
    9e10:	ret
    9e14:	mov	x0, xzr
    9e18:	ret

0000000000009e1c <ZSTD_compressBound@@Base>:
    9e1c:	mov	w9, #0x20000               	// #131072
    9e20:	sub	x9, x9, x0
    9e24:	lsr	x9, x9, #11
    9e28:	cmp	x0, #0x20, lsl #12
    9e2c:	add	x8, x0, x0, lsr #8
    9e30:	csel	x9, x9, xzr, cc  // cc = lo, ul, last
    9e34:	add	x0, x8, x9
    9e38:	ret

0000000000009e3c <ZSTD_createCCtx@@Base>:
    9e3c:	sub	sp, sp, #0x30
    9e40:	add	x0, sp, #0x8
    9e44:	stp	x29, x30, [sp, #32]
    9e48:	add	x29, sp, #0x20
    9e4c:	stp	xzr, xzr, [sp, #8]
    9e50:	str	xzr, [sp, #24]
    9e54:	bl	44b0 <ZSTD_createCCtx_advanced@plt>
    9e58:	ldp	x29, x30, [sp, #32]
    9e5c:	add	sp, sp, #0x30
    9e60:	ret

0000000000009e64 <ZSTD_createCCtx_advanced@@Base>:
    9e64:	sub	sp, sp, #0x40
    9e68:	stp	x29, x30, [sp, #32]
    9e6c:	stp	x20, x19, [sp, #48]
    9e70:	ldp	x8, x9, [x0]
    9e74:	add	x29, sp, #0x20
    9e78:	cmp	x8, #0x0
    9e7c:	cset	w8, eq  // eq = none
    9e80:	cmp	x9, #0x0
    9e84:	cset	w9, eq  // eq = none
    9e88:	eor	w8, w8, w9
    9e8c:	tbz	w8, #0, 9e98 <ZSTD_createCCtx_advanced@@Base+0x34>
    9e90:	mov	x20, xzr
    9e94:	b	9edc <ZSTD_createCCtx_advanced@@Base+0x78>
    9e98:	ldr	x8, [x0, #16]
    9e9c:	ldr	q0, [x0]
    9ea0:	mov	x19, x0
    9ea4:	mov	x1, sp
    9ea8:	mov	w0, #0x478                 	// #1144
    9eac:	str	x8, [sp, #16]
    9eb0:	str	q0, [sp]
    9eb4:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
    9eb8:	mov	x20, x0
    9ebc:	cbz	x0, 9edc <ZSTD_createCCtx_advanced@@Base+0x78>
    9ec0:	ldr	x8, [x19, #16]
    9ec4:	ldr	q0, [x19]
    9ec8:	mov	x1, sp
    9ecc:	mov	x0, x20
    9ed0:	str	x8, [sp, #16]
    9ed4:	str	q0, [sp]
    9ed8:	bl	9ef0 <ZSTD_createCCtx_advanced@@Base+0x8c>
    9edc:	mov	x0, x20
    9ee0:	ldp	x20, x19, [sp, #48]
    9ee4:	ldp	x29, x30, [sp, #32]
    9ee8:	add	sp, sp, #0x40
    9eec:	ret
    9ef0:	stp	x29, x30, [sp, #-32]!
    9ef4:	stp	x20, x19, [sp, #16]
    9ef8:	mov	x19, x1
    9efc:	mov	w2, #0x478                 	// #1144
    9f00:	mov	w1, wzr
    9f04:	mov	x29, sp
    9f08:	mov	x20, x0
    9f0c:	bl	46a0 <memset@plt>
    9f10:	ldr	q0, [x19]
    9f14:	ldr	x8, [x19, #16]
    9f18:	str	q0, [x20, #496]
    9f1c:	str	x8, [x20, #512]
    9f20:	bl	a0f8 <ZSTD_initStaticCCtx@@Base+0x1b8>
    9f24:	str	w0, [x20, #8]
    9f28:	mov	w1, #0x2                   	// #2
    9f2c:	mov	x0, x20
    9f30:	bl	4530 <ZSTD_CCtx_reset@plt>
    9f34:	ldp	x20, x19, [sp, #16]
    9f38:	ldp	x29, x30, [sp], #32
    9f3c:	ret

0000000000009f40 <ZSTD_initStaticCCtx@@Base>:
    9f40:	sub	sp, sp, #0x70
    9f44:	cmp	x1, #0x479
    9f48:	stp	x29, x30, [sp, #64]
    9f4c:	str	x21, [sp, #80]
    9f50:	stp	x20, x19, [sp, #96]
    9f54:	add	x29, sp, #0x40
    9f58:	b.cc	9f6c <ZSTD_initStaticCCtx@@Base+0x2c>  // b.lo, b.ul, b.last
    9f5c:	mov	x20, x1
    9f60:	mov	x1, x0
    9f64:	tst	x0, #0x7
    9f68:	b.eq	9f88 <ZSTD_initStaticCCtx@@Base+0x48>  // b.none
    9f6c:	mov	x19, xzr
    9f70:	mov	x0, x19
    9f74:	ldp	x20, x19, [sp, #96]
    9f78:	ldr	x21, [sp, #80]
    9f7c:	ldp	x29, x30, [sp, #64]
    9f80:	add	sp, sp, #0x70
    9f84:	ret
    9f88:	mov	x0, sp
    9f8c:	mov	x2, x20
    9f90:	bl	a018 <ZSTD_initStaticCCtx@@Base+0xd8>
    9f94:	mov	x0, sp
    9f98:	mov	w1, #0x478                 	// #1144
    9f9c:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    9fa0:	mov	x19, x0
    9fa4:	cbz	x0, 9f70 <ZSTD_initStaticCCtx@@Base+0x30>
    9fa8:	mov	w2, #0x478                 	// #1144
    9fac:	mov	x0, x19
    9fb0:	mov	w1, wzr
    9fb4:	bl	46a0 <memset@plt>
    9fb8:	add	x21, x19, #0x138
    9fbc:	mov	x1, sp
    9fc0:	mov	x0, x21
    9fc4:	bl	a0b0 <ZSTD_initStaticCCtx@@Base+0x170>
    9fc8:	mov	w1, #0x3be0                	// #15328
    9fcc:	mov	x0, x21
    9fd0:	str	x20, [x19, #520]
    9fd4:	bl	a0d0 <ZSTD_initStaticCCtx@@Base+0x190>
    9fd8:	cbz	w0, 9f6c <ZSTD_initStaticCCtx@@Base+0x2c>
    9fdc:	mov	w1, #0x11f0                	// #4592
    9fe0:	mov	x0, x21
    9fe4:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    9fe8:	str	x0, [x19, #752]
    9fec:	mov	w1, #0x11f0                	// #4592
    9ff0:	mov	x0, x21
    9ff4:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    9ff8:	str	x0, [x19, #760]
    9ffc:	mov	w1, #0x1800                	// #6144
    a000:	mov	x0, x21
    a004:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    a008:	str	x0, [x19, #984]
    a00c:	bl	a0f8 <ZSTD_initStaticCCtx@@Base+0x1b8>
    a010:	str	w0, [x19, #8]
    a014:	b	9f70 <ZSTD_initStaticCCtx@@Base+0x30>
    a018:	stp	x29, x30, [sp, #-32]!
    a01c:	add	x8, x1, x2
    a020:	str	x19, [sp, #16]
    a024:	mov	x29, sp
    a028:	mov	x19, x0
    a02c:	stp	x8, x1, [x0, #8]
    a030:	str	x1, [x0, #32]
    a034:	str	x1, [x0]
    a038:	str	wzr, [x0, #56]
    a03c:	bl	dfd0 <ZSTD_endStream@@Base+0x7c>
    a040:	str	wzr, [x19, #52]
    a044:	ldr	x19, [sp, #16]
    a048:	ldp	x29, x30, [sp], #32
    a04c:	ret
    a050:	stp	x29, x30, [sp, #-32]!
    a054:	mov	x8, x1
    a058:	str	x19, [sp, #16]
    a05c:	mov	x19, x0
    a060:	mov	w1, #0x8                   	// #8
    a064:	mov	x0, x8
    a068:	mov	x29, sp
    a06c:	bl	c934 <ZSTD_estimateCDictSize_advanced@@Base+0x58>
    a070:	ldr	w9, [x19, #56]
    a074:	cbnz	w9, a08c <ZSTD_initStaticCCtx@@Base+0x14c>
    a078:	mov	x8, x0
    a07c:	ldp	x9, x0, [x19, #8]
    a080:	add	x8, x0, x8
    a084:	cmp	x8, x9
    a088:	b.ls	a09c <ZSTD_initStaticCCtx@@Base+0x15c>  // b.plast
    a08c:	mov	w8, #0x1                   	// #1
    a090:	mov	x0, xzr
    a094:	str	w8, [x19, #48]
    a098:	b	a0a4 <ZSTD_initStaticCCtx@@Base+0x164>
    a09c:	stp	x8, x8, [x19, #16]
    a0a0:	str	x8, [x19, #32]
    a0a4:	ldr	x19, [sp, #16]
    a0a8:	ldp	x29, x30, [sp], #32
    a0ac:	ret
    a0b0:	ldp	q0, q1, [x1, #32]
    a0b4:	ldp	q2, q3, [x1]
    a0b8:	movi	v4.2d, #0x0
    a0bc:	stp	q0, q1, [x0, #32]
    a0c0:	stp	q2, q3, [x0]
    a0c4:	stp	q4, q4, [x1, #32]
    a0c8:	stp	q4, q4, [x1]
    a0cc:	ret
    a0d0:	stp	x29, x30, [sp, #-32]!
    a0d4:	str	x19, [sp, #16]
    a0d8:	mov	x29, sp
    a0dc:	mov	x19, x1
    a0e0:	bl	dff8 <ZSTD_endStream@@Base+0xa4>
    a0e4:	cmp	x0, x19
    a0e8:	ldr	x19, [sp, #16]
    a0ec:	cset	w0, cs  // cs = hs, nlast
    a0f0:	ldp	x29, x30, [sp], #32
    a0f4:	ret
    a0f8:	mov	w0, wzr
    a0fc:	ret

000000000000a100 <ZSTD_freeCCtx@@Base>:
    a100:	sub	sp, sp, #0x40
    a104:	stp	x29, x30, [sp, #32]
    a108:	stp	x20, x19, [sp, #48]
    a10c:	add	x29, sp, #0x20
    a110:	cbz	x0, a164 <ZSTD_freeCCtx@@Base+0x64>
    a114:	ldr	x8, [x0, #520]
    a118:	mov	x19, x0
    a11c:	cbz	x8, a128 <ZSTD_freeCCtx@@Base+0x28>
    a120:	mov	x0, #0xffffffffffffffc0    	// #-64
    a124:	b	a164 <ZSTD_freeCCtx@@Base+0x64>
    a128:	add	x0, x19, #0x138
    a12c:	mov	x1, x19
    a130:	bl	a174 <ZSTD_freeCCtx@@Base+0x74>
    a134:	mov	w20, w0
    a138:	mov	x0, x19
    a13c:	bl	a19c <ZSTD_freeCCtx@@Base+0x9c>
    a140:	cbnz	w20, a160 <ZSTD_freeCCtx@@Base+0x60>
    a144:	ldr	x8, [x19, #512]
    a148:	ldr	q0, [x19, #496]
    a14c:	mov	x1, sp
    a150:	mov	x0, x19
    a154:	str	x8, [sp, #16]
    a158:	str	q0, [sp]
    a15c:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
    a160:	mov	x0, xzr
    a164:	ldp	x20, x19, [sp, #48]
    a168:	ldp	x29, x30, [sp, #32]
    a16c:	add	sp, sp, #0x40
    a170:	ret
    a174:	cbz	x1, a184 <ZSTD_freeCCtx@@Base+0x84>
    a178:	ldr	x8, [x0]
    a17c:	cmp	x8, x1
    a180:	b.ls	a18c <ZSTD_freeCCtx@@Base+0x8c>  // b.plast
    a184:	mov	w0, wzr
    a188:	ret
    a18c:	ldr	x8, [x0, #8]
    a190:	cmp	x8, x1
    a194:	cset	w0, cs  // cs = hs, nlast
    a198:	ret
    a19c:	sub	sp, sp, #0x40
    a1a0:	stp	x29, x30, [sp, #32]
    a1a4:	str	x19, [sp, #48]
    a1a8:	add	x29, sp, #0x20
    a1ac:	mov	x19, x0
    a1b0:	bl	ae48 <ZSTD_CCtx_loadDictionary_advanced@@Base+0xc8>
    a1b4:	ldr	x8, [x19, #512]
    a1b8:	ldr	q0, [x19, #496]
    a1bc:	add	x0, x19, #0x138
    a1c0:	mov	x1, sp
    a1c4:	str	x8, [sp, #16]
    a1c8:	str	q0, [sp]
    a1cc:	bl	ce6c <ZSTD_createCDict_byReference@@Base+0x70>
    a1d0:	ldr	x19, [sp, #48]
    a1d4:	ldp	x29, x30, [sp, #32]
    a1d8:	add	sp, sp, #0x40
    a1dc:	ret

000000000000a1e0 <ZSTD_sizeof_CCtx@@Base>:
    a1e0:	cbz	x0, a240 <ZSTD_sizeof_CCtx@@Base+0x60>
    a1e4:	sub	sp, sp, #0x50
    a1e8:	stp	x29, x30, [sp, #48]
    a1ec:	stp	x20, x19, [sp, #64]
    a1f0:	ldr	x8, [x0, #312]
    a1f4:	mov	x19, x0
    a1f8:	add	x0, x0, #0x138
    a1fc:	add	x29, sp, #0x30
    a200:	cmp	x8, x19
    a204:	mov	w8, #0x478                 	// #1144
    a208:	csel	x20, xzr, x8, eq  // eq = none
    a20c:	bl	a244 <ZSTD_sizeof_CCtx@@Base+0x64>
    a210:	ldr	x8, [x19, #1104]
    a214:	ldr	q0, [x19, #1088]
    a218:	ldr	q1, [x19, #1072]
    a21c:	add	x19, x20, x0
    a220:	mov	x0, sp
    a224:	str	x8, [sp, #32]
    a228:	stp	q1, q0, [sp]
    a22c:	bl	a250 <ZSTD_sizeof_CCtx@@Base+0x70>
    a230:	add	x0, x19, x0
    a234:	ldp	x20, x19, [sp, #64]
    a238:	ldp	x29, x30, [sp, #48]
    a23c:	add	sp, sp, #0x50
    a240:	ret
    a244:	ldp	x9, x8, [x0]
    a248:	sub	x0, x8, x9
    a24c:	ret
    a250:	stp	x29, x30, [sp, #-32]!
    a254:	ldr	x8, [x0]
    a258:	str	x19, [sp, #16]
    a25c:	mov	x29, sp
    a260:	cbz	x8, a26c <ZSTD_sizeof_CCtx@@Base+0x8c>
    a264:	ldr	x19, [x0, #16]
    a268:	b	a270 <ZSTD_sizeof_CCtx@@Base+0x90>
    a26c:	mov	x19, xzr
    a270:	ldr	x0, [x0, #32]
    a274:	bl	4800 <ZSTD_sizeof_CDict@plt>
    a278:	add	x0, x0, x19
    a27c:	ldr	x19, [sp, #16]
    a280:	ldp	x29, x30, [sp], #32
    a284:	ret

000000000000a288 <ZSTD_sizeof_CStream@@Base>:
    a288:	stp	x29, x30, [sp, #-16]!
    a28c:	mov	x29, sp
    a290:	bl	4740 <ZSTD_sizeof_CCtx@plt>
    a294:	ldp	x29, x30, [sp], #16
    a298:	ret
    a29c:	add	x0, x0, #0x238
    a2a0:	ret

000000000000a2a4 <ZSTD_createCCtxParams@@Base>:
    a2a4:	sub	sp, sp, #0x30
    a2a8:	add	x0, sp, #0x8
    a2ac:	stp	x29, x30, [sp, #32]
    a2b0:	add	x29, sp, #0x20
    a2b4:	stp	xzr, xzr, [sp, #8]
    a2b8:	str	xzr, [sp, #24]
    a2bc:	bl	a2cc <ZSTD_createCCtxParams@@Base+0x28>
    a2c0:	ldp	x29, x30, [sp, #32]
    a2c4:	add	sp, sp, #0x30
    a2c8:	ret
    a2cc:	sub	sp, sp, #0x40
    a2d0:	stp	x29, x30, [sp, #32]
    a2d4:	str	x19, [sp, #48]
    a2d8:	ldp	x8, x9, [x0]
    a2dc:	add	x29, sp, #0x20
    a2e0:	cmp	x8, #0x0
    a2e4:	cset	w8, eq  // eq = none
    a2e8:	cmp	x9, #0x0
    a2ec:	cset	w9, eq  // eq = none
    a2f0:	eor	w8, w8, w9
    a2f4:	tbz	w8, #0, a300 <ZSTD_createCCtxParams@@Base+0x5c>
    a2f8:	mov	x0, xzr
    a2fc:	b	a344 <ZSTD_createCCtxParams@@Base+0xa0>
    a300:	ldr	x8, [x0, #16]
    a304:	ldr	q0, [x0]
    a308:	mov	x19, x0
    a30c:	mov	x1, sp
    a310:	mov	w0, #0x90                  	// #144
    a314:	str	x8, [sp, #16]
    a318:	str	q0, [sp]
    a31c:	bl	6f38 <ZSTD_getErrorString@@Base+0x4c>
    a320:	cbz	x0, a344 <ZSTD_createCCtxParams@@Base+0xa0>
    a324:	ldr	q0, [x19]
    a328:	ldr	x8, [x19, #16]
    a32c:	mov	w9, #0x3                   	// #3
    a330:	mov	w10, #0x1                   	// #1
    a334:	str	w9, [x0, #44]
    a338:	str	x8, [x0, #136]
    a33c:	stur	q0, [x0, #120]
    a340:	str	w10, [x0, #32]
    a344:	ldr	x19, [sp, #48]
    a348:	ldp	x29, x30, [sp, #32]
    a34c:	add	sp, sp, #0x40
    a350:	ret

000000000000a354 <ZSTD_freeCCtxParams@@Base>:
    a354:	cbz	x0, a384 <ZSTD_freeCCtxParams@@Base+0x30>
    a358:	sub	sp, sp, #0x30
    a35c:	stp	x29, x30, [sp, #32]
    a360:	ldr	x8, [x0, #136]
    a364:	ldur	q0, [x0, #120]
    a368:	mov	x1, sp
    a36c:	add	x29, sp, #0x20
    a370:	str	x8, [sp, #16]
    a374:	str	q0, [sp]
    a378:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
    a37c:	ldp	x29, x30, [sp, #32]
    a380:	add	sp, sp, #0x30
    a384:	mov	x0, xzr
    a388:	ret

000000000000a38c <ZSTD_CCtxParams_reset@@Base>:
    a38c:	stp	x29, x30, [sp, #-16]!
    a390:	mov	w1, #0x3                   	// #3
    a394:	mov	x29, sp
    a398:	bl	4900 <ZSTD_CCtxParams_init@plt>
    a39c:	ldp	x29, x30, [sp], #16
    a3a0:	ret

000000000000a3a4 <ZSTD_CCtxParams_init@@Base>:
    a3a4:	cbz	x0, a3d8 <ZSTD_CCtxParams_init@@Base+0x34>
    a3a8:	mov	x8, x0
    a3ac:	mov	x0, xzr
    a3b0:	movi	v0.2d, #0x0
    a3b4:	mov	w9, #0x1                   	// #1
    a3b8:	stp	q0, q0, [x8, #112]
    a3bc:	stp	q0, q0, [x8, #80]
    a3c0:	stp	q0, q0, [x8, #48]
    a3c4:	stp	q0, q0, [x8, #16]
    a3c8:	str	q0, [x8]
    a3cc:	str	w1, [x8, #44]
    a3d0:	str	w9, [x8, #32]
    a3d4:	ret
    a3d8:	mov	x0, #0xffffffffffffffff    	// #-1
    a3dc:	ret

000000000000a3e0 <ZSTD_CCtxParams_init_advanced@@Base>:
    a3e0:	sub	sp, sp, #0x50
    a3e4:	stp	x29, x30, [sp, #32]
    a3e8:	str	x21, [sp, #48]
    a3ec:	stp	x20, x19, [sp, #64]
    a3f0:	add	x29, sp, #0x20
    a3f4:	cbz	x0, a468 <ZSTD_CCtxParams_init_advanced@@Base+0x88>
    a3f8:	ldur	q0, [x1, #12]
    a3fc:	ldr	q1, [x1]
    a400:	mov	x19, x0
    a404:	mov	x0, sp
    a408:	mov	x21, x1
    a40c:	stur	q0, [sp, #12]
    a410:	str	q1, [sp]
    a414:	bl	48c0 <ZSTD_checkCParams@plt>
    a418:	mov	x20, x0
    a41c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    a420:	cbnz	w0, a46c <ZSTD_CCtxParams_init_advanced@@Base+0x8c>
    a424:	movi	v0.2d, #0x0
    a428:	stp	q0, q0, [x19, #112]
    a42c:	stp	q0, q0, [x19, #80]
    a430:	stp	q0, q0, [x19, #48]
    a434:	stp	q0, q0, [x19, #16]
    a438:	str	q0, [x19]
    a43c:	ldur	q0, [x21, #12]
    a440:	ldr	q1, [x21]
    a444:	mov	x20, xzr
    a448:	str	q0, [x19, #16]
    a44c:	stur	q1, [x19, #4]
    a450:	ldur	x8, [x21, #28]
    a454:	ldr	w9, [x21, #36]
    a458:	str	x8, [x19, #32]
    a45c:	mov	w8, #0x3                   	// #3
    a460:	stp	w9, w8, [x19, #40]
    a464:	b	a46c <ZSTD_CCtxParams_init_advanced@@Base+0x8c>
    a468:	mov	x20, #0xffffffffffffffff    	// #-1
    a46c:	mov	x0, x20
    a470:	ldp	x20, x19, [sp, #64]
    a474:	ldr	x21, [sp, #48]
    a478:	ldp	x29, x30, [sp, #32]
    a47c:	add	sp, sp, #0x50
    a480:	ret

000000000000a484 <ZSTD_checkCParams@@Base>:
    a484:	stp	x29, x30, [sp, #-32]!
    a488:	stp	x20, x19, [sp, #16]
    a48c:	ldr	w1, [x0]
    a490:	mov	x19, x0
    a494:	mov	w0, #0x65                  	// #101
    a498:	mov	x29, sp
    a49c:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a4a0:	cbz	w0, a510 <ZSTD_checkCParams@@Base+0x8c>
    a4a4:	ldr	w1, [x19, #4]
    a4a8:	mov	w0, #0x67                  	// #103
    a4ac:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a4b0:	cbz	w0, a510 <ZSTD_checkCParams@@Base+0x8c>
    a4b4:	ldr	w1, [x19, #8]
    a4b8:	mov	w0, #0x66                  	// #102
    a4bc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a4c0:	cbz	w0, a510 <ZSTD_checkCParams@@Base+0x8c>
    a4c4:	ldr	w1, [x19, #12]
    a4c8:	mov	w0, #0x68                  	// #104
    a4cc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a4d0:	cbz	w0, a510 <ZSTD_checkCParams@@Base+0x8c>
    a4d4:	ldr	w1, [x19, #16]
    a4d8:	mov	w0, #0x69                  	// #105
    a4dc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a4e0:	cbz	w0, a510 <ZSTD_checkCParams@@Base+0x8c>
    a4e4:	ldr	w1, [x19, #20]
    a4e8:	mov	w0, #0x6a                  	// #106
    a4ec:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a4f0:	mov	x20, #0xffffffffffffffd6    	// #-42
    a4f4:	cbz	w0, a514 <ZSTD_checkCParams@@Base+0x90>
    a4f8:	ldr	w1, [x19, #24]
    a4fc:	mov	w0, #0x6b                  	// #107
    a500:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a504:	cmp	w0, #0x0
    a508:	csel	x20, x20, xzr, eq  // eq = none
    a50c:	b	a514 <ZSTD_checkCParams@@Base+0x90>
    a510:	mov	x20, #0xffffffffffffffd6    	// #-42
    a514:	mov	x0, x20
    a518:	ldp	x20, x19, [sp, #16]
    a51c:	ldp	x29, x30, [sp], #32
    a520:	ret
    a524:	cmn	x0, #0x78
    a528:	cset	w0, hi  // hi = pmore
    a52c:	ret

000000000000a530 <ZSTD_cParam_getBounds@@Base>:
    a530:	cmp	w0, #0x18f
    a534:	b.gt	a574 <ZSTD_cParam_getBounds@@Base+0x44>
    a538:	sub	w8, w0, #0x64
    a53c:	cmp	w8, #0x66
    a540:	b.hi	a5ec <ZSTD_cParam_getBounds@@Base+0xbc>  // b.pmore
    a544:	adrp	x9, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    a548:	add	x9, x9, #0x718
    a54c:	adr	x10, a568 <ZSTD_cParam_getBounds@@Base+0x38>
    a550:	ldrb	w11, [x9, x8]
    a554:	add	x10, x10, x11, lsl #2
    a558:	mov	x1, #0xa                   	// #10
    a55c:	mov	x0, xzr
    a560:	movk	x1, #0x1f, lsl #32
    a564:	br	x10
    a568:	mov	x0, xzr
    a56c:	mov	x1, #0x100000000           	// #4294967296
    a570:	ret
    a574:	cmp	w0, #0x1f3
    a578:	b.le	a5ac <ZSTD_cParam_getBounds@@Base+0x7c>
    a57c:	sub	w8, w0, #0x3e8
    a580:	cmp	w8, #0x4
    a584:	b.hi	a674 <ZSTD_cParam_getBounds@@Base+0x144>  // b.pmore
    a588:	adrp	x9, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    a58c:	add	x9, x9, #0x77f
    a590:	adr	x10, a568 <ZSTD_cParam_getBounds@@Base+0x38>
    a594:	ldrb	w11, [x9, x8]
    a598:	add	x10, x10, x11, lsl #2
    a59c:	br	x10
    a5a0:	mov	x0, xzr
    a5a4:	mov	x1, #0x300000000           	// #12884901888
    a5a8:	ret
    a5ac:	cmp	w0, #0x190
    a5b0:	b.eq	a5e0 <ZSTD_cParam_getBounds@@Base+0xb0>  // b.none
    a5b4:	cmp	w0, #0x191
    a5b8:	b.eq	a5e0 <ZSTD_cParam_getBounds@@Base+0xb0>  // b.none
    a5bc:	cmp	w0, #0x192
    a5c0:	b.ne	a67c <ZSTD_cParam_getBounds@@Base+0x14c>  // b.any
    a5c4:	mov	x0, xzr
    a5c8:	mov	x1, #0x900000000           	// #38654705664
    a5cc:	ret
    a5d0:	mov	x1, #0x6                   	// #6
    a5d4:	mov	x0, xzr
    a5d8:	movk	x1, #0x1e, lsl #32
    a5dc:	ret
    a5e0:	mov	x0, xzr
    a5e4:	mov	x1, xzr
    a5e8:	ret
    a5ec:	cmp	w0, #0xa
    a5f0:	b.eq	a568 <ZSTD_cParam_getBounds@@Base+0x38>  // b.none
    a5f4:	b	a67c <ZSTD_cParam_getBounds@@Base+0x14c>
    a5f8:	mov	x1, #0xfffe0000            	// #4294836224
    a5fc:	mov	x0, xzr
    a600:	movk	x1, #0x16, lsl #32
    a604:	ret
    a608:	mov	x8, #0x6                   	// #6
    a60c:	movk	x8, #0x1e, lsl #32
    a610:	mov	x0, xzr
    a614:	sub	x1, x8, #0x5
    a618:	ret
    a61c:	mov	x1, #0x3                   	// #3
    a620:	mov	x0, xzr
    a624:	movk	x1, #0x7, lsl #32
    a628:	ret
    a62c:	mov	x0, xzr
    a630:	mov	x1, #0x2000000000000       	// #562949953421312
    a634:	ret
    a638:	mov	x1, #0x1                   	// #1
    a63c:	mov	x0, xzr
    a640:	movk	x1, #0x9, lsl #32
    a644:	ret
    a648:	mov	x1, #0x4                   	// #4
    a64c:	mov	x0, xzr
    a650:	movk	x1, #0x1000, lsl #32
    a654:	ret
    a658:	mov	x1, #0x1                   	// #1
    a65c:	mov	x0, xzr
    a660:	movk	x1, #0x8, lsl #32
    a664:	ret
    a668:	mov	x0, xzr
    a66c:	mov	x1, #0x1900000000          	// #107374182400
    a670:	ret
    a674:	cmp	w0, #0x1f4
    a678:	b.eq	a568 <ZSTD_cParam_getBounds@@Base+0x38>  // b.none
    a67c:	mov	x1, xzr
    a680:	mov	x0, #0xffffffffffffffd8    	// #-40
    a684:	ret
    a688:	mov	x0, xzr
    a68c:	mov	x1, #0x200000000           	// #8589934592
    a690:	ret
    a694:	mov	x1, #0x40                  	// #64
    a698:	mov	x0, xzr
    a69c:	movk	x1, #0x2, lsl #48
    a6a0:	ret
    a6a4:	mov	x0, xzr
    a6a8:	mov	x1, #0x7fffffff00000000    	// #9223372032559808512
    a6ac:	ret

000000000000a6b0 <ZSTD_minCLevel@@Base>:
    a6b0:	mov	w0, #0xfffe0000            	// #-131072
    a6b4:	ret

000000000000a6b8 <ZSTD_maxCLevel@@Base>:
    a6b8:	mov	w0, #0x16                  	// #22
    a6bc:	ret

000000000000a6c0 <ZSTD_CCtx_setParameter@@Base>:
    a6c0:	stp	x29, x30, [sp, #-48]!
    a6c4:	stp	x20, x19, [sp, #32]
    a6c8:	ldr	w8, [x0, #1064]
    a6cc:	str	x21, [sp, #16]
    a6d0:	mov	w19, w2
    a6d4:	mov	x21, x0
    a6d8:	mov	w20, w1
    a6dc:	mov	x29, sp
    a6e0:	cbz	w8, a6f8 <ZSTD_CCtx_setParameter@@Base+0x38>
    a6e4:	mov	w0, w20
    a6e8:	bl	a7b0 <ZSTD_CCtx_setParameter@@Base+0xf0>
    a6ec:	cbz	w0, a748 <ZSTD_CCtx_setParameter@@Base+0x88>
    a6f0:	mov	w8, #0x1                   	// #1
    a6f4:	str	w8, [x21, #4]
    a6f8:	cmp	w20, #0x9f
    a6fc:	mov	x0, #0xffffffffffffffd8    	// #-40
    a700:	b.le	a730 <ZSTD_CCtx_setParameter@@Base+0x70>
    a704:	cmp	w20, #0x190
    a708:	b.le	a750 <ZSTD_CCtx_setParameter@@Base+0x90>
    a70c:	sub	w8, w20, #0x3e8
    a710:	cmp	w8, #0x5
    a714:	b.cc	a774 <ZSTD_CCtx_setParameter@@Base+0xb4>  // b.lo, b.ul, b.last
    a718:	sub	w8, w20, #0x191
    a71c:	cmp	w8, #0x2
    a720:	b.cc	a774 <ZSTD_CCtx_setParameter@@Base+0xb4>  // b.lo, b.ul, b.last
    a724:	cmp	w20, #0x1f4
    a728:	b.eq	a774 <ZSTD_CCtx_setParameter@@Base+0xb4>  // b.none
    a72c:	b	a784 <ZSTD_CCtx_setParameter@@Base+0xc4>
    a730:	sub	w8, w20, #0x64
    a734:	cmp	w8, #0x8
    a738:	b.cc	a774 <ZSTD_CCtx_setParameter@@Base+0xb4>  // b.lo, b.ul, b.last
    a73c:	cmp	w20, #0xa
    a740:	b.eq	a774 <ZSTD_CCtx_setParameter@@Base+0xb4>  // b.none
    a744:	b	a784 <ZSTD_CCtx_setParameter@@Base+0xc4>
    a748:	mov	x0, #0xffffffffffffffc4    	// #-60
    a74c:	b	a784 <ZSTD_CCtx_setParameter@@Base+0xc4>
    a750:	sub	w8, w20, #0xa0
    a754:	cmp	w8, #0x2a
    a758:	b.hi	a794 <ZSTD_CCtx_setParameter@@Base+0xd4>  // b.pmore
    a75c:	mov	w9, #0x1                   	// #1
    a760:	lsl	x8, x9, x8
    a764:	mov	x9, #0x1f                  	// #31
    a768:	movk	x9, #0x700, lsl #32
    a76c:	tst	x8, x9
    a770:	b.eq	a794 <ZSTD_CCtx_setParameter@@Base+0xd4>  // b.none
    a774:	add	x0, x21, #0x10
    a778:	mov	w1, w20
    a77c:	mov	w2, w19
    a780:	bl	47f0 <ZSTD_CCtxParams_setParameter@plt>
    a784:	ldp	x20, x19, [sp, #32]
    a788:	ldr	x21, [sp, #16]
    a78c:	ldp	x29, x30, [sp], #48
    a790:	ret
    a794:	cmp	w20, #0x190
    a798:	b.ne	a784 <ZSTD_CCtx_setParameter@@Base+0xc4>  // b.any
    a79c:	cbz	w19, a774 <ZSTD_CCtx_setParameter@@Base+0xb4>
    a7a0:	ldr	x8, [x21, #520]
    a7a4:	cbz	x8, a774 <ZSTD_CCtx_setParameter@@Base+0xb4>
    a7a8:	mov	x0, #0xffffffffffffffd8    	// #-40
    a7ac:	b	a784 <ZSTD_CCtx_setParameter@@Base+0xc4>
    a7b0:	sub	w8, w0, #0x64
    a7b4:	cmp	w8, #0x7
    a7b8:	b.hi	a7cc <ZSTD_CCtx_setParameter@@Base+0x10c>  // b.pmore
    a7bc:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    a7c0:	add	x9, x9, #0x480
    a7c4:	ldr	w0, [x9, w8, sxtw #2]
    a7c8:	ret
    a7cc:	mov	w0, wzr
    a7d0:	ret

000000000000a7d4 <ZSTD_CCtxParams_setParameter@@Base>:
    a7d4:	stp	x29, x30, [sp, #-48]!
    a7d8:	str	x21, [sp, #16]
    a7dc:	stp	x20, x19, [sp, #32]
    a7e0:	mov	x29, sp
    a7e4:	mov	w19, w2
    a7e8:	mov	w8, w1
    a7ec:	mov	x20, x0
    a7f0:	cmp	w1, #0x18f
    a7f4:	mov	x21, #0xffffffffffffffd8    	// #-40
    a7f8:	str	w2, [x29, #28]
    a7fc:	b.gt	a854 <ZSTD_CCtxParams_setParameter@@Base+0x80>
    a800:	sub	w9, w8, #0x64
    a804:	cmp	w9, #0x66
    a808:	b.hi	a8ac <ZSTD_CCtxParams_setParameter@@Base+0xd8>  // b.pmore
    a80c:	adrp	x10, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    a810:	add	x10, x10, #0x784
    a814:	adr	x11, a824 <ZSTD_CCtxParams_setParameter@@Base+0x50>
    a818:	ldrb	w12, [x10, x9]
    a81c:	add	x11, x11, x12, lsl #2
    a820:	br	x11
    a824:	add	x1, x29, #0x1c
    a828:	mov	w0, w8
    a82c:	bl	ab54 <ZSTD_CCtxParams_setParameter@@Base+0x380>
    a830:	mov	x21, x0
    a834:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    a838:	cbnz	w0, aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a83c:	ldr	w8, [x29, #28]
    a840:	cbz	w8, a848 <ZSTD_CCtxParams_setParameter@@Base+0x74>
    a844:	str	w8, [x20, #44]
    a848:	ldrsw	x8, [x20, #44]
    a84c:	bic	x0, x8, x8, asr #63
    a850:	b	aaf8 <ZSTD_CCtxParams_setParameter@@Base+0x324>
    a854:	cmp	w8, #0x1f3
    a858:	b.le	a890 <ZSTD_CCtxParams_setParameter@@Base+0xbc>
    a85c:	sub	w9, w8, #0x3e8
    a860:	cmp	w9, #0x4
    a864:	b.hi	a8d0 <ZSTD_CCtxParams_setParameter@@Base+0xfc>  // b.pmore
    a868:	adrp	x8, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    a86c:	add	x8, x8, #0x7eb
    a870:	adr	x10, a880 <ZSTD_CCtxParams_setParameter@@Base+0xac>
    a874:	ldrb	w11, [x8, x9]
    a878:	add	x10, x10, x11, lsl #2
    a87c:	br	x10
    a880:	cmp	w19, #0x0
    a884:	cset	w21, ne  // ne = any
    a888:	str	w21, [x20, #48]
    a88c:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a890:	cmp	w8, #0x190
    a894:	b.eq	a8d8 <ZSTD_CCtxParams_setParameter@@Base+0x104>  // b.none
    a898:	cmp	w8, #0x191
    a89c:	b.eq	a8d8 <ZSTD_CCtxParams_setParameter@@Base+0x104>  // b.none
    a8a0:	cmp	w8, #0x192
    a8a4:	b.eq	a8d8 <ZSTD_CCtxParams_setParameter@@Base+0x104>  // b.none
    a8a8:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a8ac:	cmp	w8, #0xa
    a8b0:	b.ne	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>  // b.any
    a8b4:	mov	w0, #0xa                   	// #10
    a8b8:	mov	w1, w19
    a8bc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a8c0:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a8c4:	str	w19, [x20]
    a8c8:	mov	w21, w19
    a8cc:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a8d0:	cmp	w8, #0x1f4
    a8d4:	b.ne	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>  // b.any
    a8d8:	cmp	w19, #0x0
    a8dc:	mov	x8, #0xffffffffffffffd8    	// #-40
    a8e0:	csel	x21, xzr, x8, eq  // eq = none
    a8e4:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a8e8:	cbz	w19, a8fc <ZSTD_CCtxParams_setParameter@@Base+0x128>
    a8ec:	mov	w0, #0x65                  	// #101
    a8f0:	mov	w1, w19
    a8f4:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a8f8:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a8fc:	str	w19, [x20, #4]
    a900:	mov	w21, w19
    a904:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a908:	cbz	w19, a91c <ZSTD_CCtxParams_setParameter@@Base+0x148>
    a90c:	mov	w0, #0x66                  	// #102
    a910:	mov	w1, w19
    a914:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a918:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a91c:	str	w19, [x20, #12]
    a920:	mov	w21, w19
    a924:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a928:	cbz	w19, a93c <ZSTD_CCtxParams_setParameter@@Base+0x168>
    a92c:	mov	w0, #0x67                  	// #103
    a930:	mov	w1, w19
    a934:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a938:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a93c:	str	w19, [x20, #8]
    a940:	mov	w21, w19
    a944:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a948:	cbz	w19, a95c <ZSTD_CCtxParams_setParameter@@Base+0x188>
    a94c:	mov	w0, #0x68                  	// #104
    a950:	mov	w1, w19
    a954:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a958:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a95c:	str	w19, [x20, #16]
    a960:	b	aae8 <ZSTD_CCtxParams_setParameter@@Base+0x314>
    a964:	cbz	w19, a978 <ZSTD_CCtxParams_setParameter@@Base+0x1a4>
    a968:	mov	w0, #0x69                  	// #105
    a96c:	mov	w1, w19
    a970:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a974:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a978:	str	w19, [x20, #20]
    a97c:	mov	w21, w19
    a980:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a984:	mov	w0, #0x6a                  	// #106
    a988:	mov	w1, w19
    a98c:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a990:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a994:	str	w19, [x20, #24]
    a998:	mov	w21, w19
    a99c:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a9a0:	cbz	w19, a9b4 <ZSTD_CCtxParams_setParameter@@Base+0x1e0>
    a9a4:	mov	w0, #0x6b                  	// #107
    a9a8:	mov	w1, w19
    a9ac:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a9b0:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a9b4:	str	w19, [x20, #28]
    a9b8:	mov	w21, w19
    a9bc:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a9c0:	cmp	w19, #0x0
    a9c4:	cset	w21, ne  // ne = any
    a9c8:	str	w21, [x20, #96]
    a9cc:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a9d0:	cbz	w19, a9e4 <ZSTD_CCtxParams_setParameter@@Base+0x210>
    a9d4:	mov	w0, #0xa1                  	// #161
    a9d8:	mov	w1, w19
    a9dc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    a9e0:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    a9e4:	str	w19, [x20, #100]
    a9e8:	mov	w21, w19
    a9ec:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    a9f0:	cbz	w19, aa04 <ZSTD_CCtxParams_setParameter@@Base+0x230>
    a9f4:	mov	w0, #0xa2                  	// #162
    a9f8:	mov	w1, w19
    a9fc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    aa00:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    aa04:	str	w19, [x20, #108]
    aa08:	mov	w21, w19
    aa0c:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aa10:	cbz	w19, aa24 <ZSTD_CCtxParams_setParameter@@Base+0x250>
    aa14:	mov	w0, #0xa3                  	// #163
    aa18:	mov	w1, w19
    aa1c:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    aa20:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    aa24:	str	w19, [x20, #104]
    aa28:	mov	w21, w19
    aa2c:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aa30:	cmp	w19, #0x19
    aa34:	b.gt	aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    aa38:	str	w19, [x20, #112]
    aa3c:	mov	w21, w19
    aa40:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aa44:	cmp	w19, #0x0
    aa48:	cset	w21, ne  // ne = any
    aa4c:	str	w21, [x20, #32]
    aa50:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aa54:	cmp	w19, #0x0
    aa58:	cset	w21, ne  // ne = any
    aa5c:	str	w21, [x20, #36]
    aa60:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aa64:	cmp	w19, #0x0
    aa68:	cset	w8, eq  // eq = none
    aa6c:	cset	w21, ne  // ne = any
    aa70:	str	w8, [x20, #40]
    aa74:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aa78:	mov	w0, #0x3e9                 	// #1001
    aa7c:	mov	w1, w19
    aa80:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    aa84:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    aa88:	str	w19, [x20, #68]
    aa8c:	mov	w21, w19
    aa90:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aa94:	mov	w0, #0x3ea                 	// #1002
    aa98:	mov	w1, w19
    aa9c:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    aaa0:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    aaa4:	str	w19, [x20, #72]
    aaa8:	mov	w21, w19
    aaac:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aab0:	cbz	w19, aac4 <ZSTD_CCtxParams_setParameter@@Base+0x2f0>
    aab4:	mov	w0, #0x3eb                 	// #1003
    aab8:	mov	w1, w19
    aabc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    aac0:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    aac4:	sxtw	x21, w19
    aac8:	str	x21, [x20, #56]
    aacc:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aad0:	cbz	w19, aae4 <ZSTD_CCtxParams_setParameter@@Base+0x310>
    aad4:	mov	w0, #0x3ec                 	// #1004
    aad8:	mov	w1, w19
    aadc:	bl	ab08 <ZSTD_CCtxParams_setParameter@@Base+0x334>
    aae0:	cbz	w0, aaf0 <ZSTD_CCtxParams_setParameter@@Base+0x31c>
    aae4:	str	w19, [x20, #64]
    aae8:	sxtw	x21, w19
    aaec:	b	aaf4 <ZSTD_CCtxParams_setParameter@@Base+0x320>
    aaf0:	mov	x21, #0xffffffffffffffd6    	// #-42
    aaf4:	mov	x0, x21
    aaf8:	ldp	x20, x19, [sp, #32]
    aafc:	ldr	x21, [sp, #16]
    ab00:	ldp	x29, x30, [sp], #48
    ab04:	ret
    ab08:	stp	x29, x30, [sp, #-32]!
    ab0c:	stp	x20, x19, [sp, #16]
    ab10:	mov	x29, sp
    ab14:	mov	w19, w1
    ab18:	bl	4960 <ZSTD_cParam_getBounds@plt>
    ab1c:	mov	x20, x1
    ab20:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    ab24:	cmp	w0, #0x0
    ab28:	lsr	x8, x20, #32
    ab2c:	cset	w9, eq  // eq = none
    ab30:	cmp	w20, w19
    ab34:	cset	w10, le
    ab38:	cmp	w8, w19
    ab3c:	ldp	x20, x19, [sp, #16]
    ab40:	cset	w8, ge  // ge = tcont
    ab44:	and	w9, w9, w10
    ab48:	and	w0, w8, w9
    ab4c:	ldp	x29, x30, [sp], #32
    ab50:	ret
    ab54:	stp	x29, x30, [sp, #-48]!
    ab58:	str	x21, [sp, #16]
    ab5c:	stp	x20, x19, [sp, #32]
    ab60:	mov	x29, sp
    ab64:	mov	x19, x1
    ab68:	bl	4960 <ZSTD_cParam_getBounds@plt>
    ab6c:	mov	x21, x0
    ab70:	mov	x20, x1
    ab74:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    ab78:	cbnz	w0, abac <ZSTD_CCtxParams_setParameter@@Base+0x3d8>
    ab7c:	ldr	w8, [x19]
    ab80:	cmp	w8, w20
    ab84:	b.ge	ab8c <ZSTD_CCtxParams_setParameter@@Base+0x3b8>  // b.tcont
    ab88:	str	w20, [x19]
    ab8c:	ldr	w9, [x19]
    ab90:	lsr	x8, x20, #32
    ab94:	cmp	w9, w8
    ab98:	b.le	aba8 <ZSTD_CCtxParams_setParameter@@Base+0x3d4>
    ab9c:	mov	x21, xzr
    aba0:	str	w8, [x19]
    aba4:	b	abac <ZSTD_CCtxParams_setParameter@@Base+0x3d8>
    aba8:	mov	x21, xzr
    abac:	mov	x0, x21
    abb0:	ldp	x20, x19, [sp, #32]
    abb4:	ldr	x21, [sp, #16]
    abb8:	ldp	x29, x30, [sp], #48
    abbc:	ret

000000000000abc0 <ZSTD_CCtx_getParameter@@Base>:
    abc0:	stp	x29, x30, [sp, #-16]!
    abc4:	add	x0, x0, #0x10
    abc8:	mov	x29, sp
    abcc:	bl	4660 <ZSTD_CCtxParams_getParameter@plt>
    abd0:	ldp	x29, x30, [sp], #16
    abd4:	ret

000000000000abd8 <ZSTD_CCtxParams_getParameter@@Base>:
    abd8:	cmp	w1, #0x18f
    abdc:	mov	x8, #0xffffffffffffffd8    	// #-40
    abe0:	b.gt	ac10 <ZSTD_CCtxParams_getParameter@@Base+0x38>
    abe4:	sub	w9, w1, #0x64
    abe8:	cmp	w9, #0x66
    abec:	b.hi	ac4c <ZSTD_CCtxParams_getParameter@@Base+0x74>  // b.pmore
    abf0:	adrp	x10, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    abf4:	add	x10, x10, #0x7f0
    abf8:	adr	x11, ac08 <ZSTD_CCtxParams_getParameter@@Base+0x30>
    abfc:	ldrb	w12, [x10, x9]
    ac00:	add	x11, x11, x12, lsl #2
    ac04:	br	x11
    ac08:	ldr	w9, [x0, #44]
    ac0c:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac10:	sub	w9, w1, #0x3e8
    ac14:	cmp	w9, #0x4
    ac18:	b.hi	ac3c <ZSTD_CCtxParams_getParameter@@Base+0x64>  // b.pmore
    ac1c:	adrp	x8, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    ac20:	add	x8, x8, #0x857
    ac24:	adr	x10, ac34 <ZSTD_CCtxParams_getParameter@@Base+0x5c>
    ac28:	ldrb	w11, [x8, x9]
    ac2c:	add	x10, x10, x11, lsl #2
    ac30:	br	x10
    ac34:	ldr	w9, [x0, #48]
    ac38:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac3c:	cmp	w1, #0x190
    ac40:	b.ne	ad00 <ZSTD_CCtxParams_getParameter@@Base+0x128>  // b.any
    ac44:	ldr	w9, [x0, #76]
    ac48:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac4c:	cmp	w1, #0xa
    ac50:	b.ne	ad00 <ZSTD_CCtxParams_getParameter@@Base+0x128>  // b.any
    ac54:	ldr	w9, [x0]
    ac58:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac5c:	ldr	w9, [x0, #4]
    ac60:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac64:	ldr	w9, [x0, #12]
    ac68:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac6c:	ldr	w9, [x0, #8]
    ac70:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac74:	ldr	w9, [x0, #16]
    ac78:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac7c:	ldr	w9, [x0, #20]
    ac80:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac84:	ldr	w9, [x0, #24]
    ac88:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac8c:	ldr	w9, [x0, #28]
    ac90:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac94:	ldr	w9, [x0, #96]
    ac98:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ac9c:	ldr	w9, [x0, #100]
    aca0:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    aca4:	ldr	w9, [x0, #108]
    aca8:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    acac:	ldr	w9, [x0, #104]
    acb0:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    acb4:	ldr	w9, [x0, #112]
    acb8:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    acbc:	ldr	w9, [x0, #32]
    acc0:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    acc4:	ldr	w9, [x0, #36]
    acc8:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    accc:	ldr	w8, [x0, #40]
    acd0:	cmp	w8, #0x0
    acd4:	cset	w9, eq  // eq = none
    acd8:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    acdc:	ldr	w9, [x0, #68]
    ace0:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    ace4:	ldr	w9, [x0, #72]
    ace8:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    acec:	ldr	w9, [x0, #56]
    acf0:	b	acf8 <ZSTD_CCtxParams_getParameter@@Base+0x120>
    acf4:	ldr	w9, [x0, #64]
    acf8:	mov	x8, xzr
    acfc:	str	w9, [x2]
    ad00:	mov	x0, x8
    ad04:	ret

000000000000ad08 <ZSTD_CCtx_setParametersUsingCCtxParams@@Base>:
    ad08:	ldr	w9, [x0, #1064]
    ad0c:	cbz	w9, ad18 <ZSTD_CCtx_setParametersUsingCCtxParams@@Base+0x10>
    ad10:	mov	x0, #0xffffffffffffffc4    	// #-60
    ad14:	ret
    ad18:	ldr	x9, [x0, #1112]
    ad1c:	mov	x8, x0
    ad20:	cbz	x9, ad2c <ZSTD_CCtx_setParametersUsingCCtxParams@@Base+0x24>
    ad24:	mov	x0, #0xffffffffffffffc4    	// #-60
    ad28:	ret
    ad2c:	ldr	q0, [x1]
    ad30:	mov	x0, xzr
    ad34:	str	q0, [x8, #16]
    ad38:	ldp	q1, q0, [x1, #48]
    ad3c:	ldp	q3, q2, [x1, #16]
    ad40:	stp	q1, q0, [x8, #64]
    ad44:	stp	q3, q2, [x8, #32]
    ad48:	ldp	q1, q0, [x1, #112]
    ad4c:	ldp	q3, q2, [x1, #80]
    ad50:	stp	q1, q0, [x8, #128]
    ad54:	stp	q3, q2, [x8, #96]
    ad58:	ret

000000000000ad5c <ZSTD_CCtx_setPledgedSrcSize@@Base>:
    ad5c:	ldr	w9, [x0, #1064]
    ad60:	cbz	w9, ad6c <ZSTD_CCtx_setPledgedSrcSize@@Base+0x10>
    ad64:	mov	x0, #0xffffffffffffffc4    	// #-60
    ad68:	ret
    ad6c:	mov	x8, x0
    ad70:	mov	x0, xzr
    ad74:	add	x9, x1, #0x1
    ad78:	str	x9, [x8, #384]
    ad7c:	ret

000000000000ad80 <ZSTD_CCtx_loadDictionary_advanced@@Base>:
    ad80:	sub	sp, sp, #0x60
    ad84:	stp	x29, x30, [sp, #32]
    ad88:	stp	x22, x21, [sp, #64]
    ad8c:	stp	x20, x19, [sp, #80]
    ad90:	ldr	w8, [x0, #1064]
    ad94:	str	x23, [sp, #48]
    ad98:	add	x29, sp, #0x20
    ad9c:	cbz	w8, ada8 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x28>
    ada0:	mov	x0, #0xffffffffffffffc4    	// #-60
    ada4:	b	adb8 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x38>
    ada8:	ldr	x8, [x0, #520]
    adac:	mov	x21, x0
    adb0:	cbz	x8, add0 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x50>
    adb4:	mov	x0, #0xffffffffffffffc0    	// #-64
    adb8:	ldp	x20, x19, [sp, #80]
    adbc:	ldp	x22, x21, [sp, #64]
    adc0:	ldr	x23, [sp, #48]
    adc4:	ldp	x29, x30, [sp, #32]
    adc8:	add	sp, sp, #0x60
    adcc:	ret
    add0:	mov	x0, x21
    add4:	mov	w19, w4
    add8:	mov	w23, w3
    addc:	mov	x20, x2
    ade0:	mov	x22, x1
    ade4:	bl	ae48 <ZSTD_CCtx_loadDictionary_advanced@@Base+0xc8>
    ade8:	mov	x0, xzr
    adec:	cbz	x22, adb8 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x38>
    adf0:	cbz	x20, adb8 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x38>
    adf4:	cmp	w23, #0x1
    adf8:	b.eq	ae34 <ZSTD_CCtx_loadDictionary_advanced@@Base+0xb4>  // b.none
    adfc:	ldr	x8, [x21, #512]
    ae00:	ldr	q0, [x21, #496]
    ae04:	mov	x1, sp
    ae08:	mov	x0, x20
    ae0c:	str	x8, [sp, #16]
    ae10:	str	q0, [sp]
    ae14:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
    ae18:	cbz	x0, adb4 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x34>
    ae1c:	mov	x1, x22
    ae20:	mov	x2, x20
    ae24:	mov	x23, x0
    ae28:	bl	4420 <memcpy@plt>
    ae2c:	mov	x22, x23
    ae30:	str	x23, [x21, #1072]
    ae34:	mov	x0, xzr
    ae38:	str	x22, [x21, #1080]
    ae3c:	str	x20, [x21, #1088]
    ae40:	str	w19, [x21, #1096]
    ae44:	b	adb8 <ZSTD_CCtx_loadDictionary_advanced@@Base+0x38>
    ae48:	sub	sp, sp, #0x40
    ae4c:	stp	x29, x30, [sp, #32]
    ae50:	str	x19, [sp, #48]
    ae54:	mov	x19, x0
    ae58:	ldr	x8, [x0, #512]
    ae5c:	ldr	q0, [x0, #496]
    ae60:	ldr	x0, [x0, #1072]
    ae64:	mov	x1, sp
    ae68:	add	x29, sp, #0x20
    ae6c:	str	x8, [sp, #16]
    ae70:	str	q0, [sp]
    ae74:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
    ae78:	ldr	x0, [x19, #1104]
    ae7c:	bl	4560 <ZSTD_freeCDict@plt>
    ae80:	movi	v0.2d, #0x0
    ae84:	str	q0, [x19, #1072]
    ae88:	str	q0, [x19, #1088]
    ae8c:	str	q0, [x19, #1104]
    ae90:	str	q0, [x19, #1120]
    ae94:	str	xzr, [x19, #1136]
    ae98:	ldr	x19, [sp, #48]
    ae9c:	ldp	x29, x30, [sp, #32]
    aea0:	add	sp, sp, #0x40
    aea4:	ret

000000000000aea8 <ZSTD_CCtx_loadDictionary_byReference@@Base>:
    aea8:	stp	x29, x30, [sp, #-16]!
    aeac:	mov	w3, #0x1                   	// #1
    aeb0:	mov	w4, wzr
    aeb4:	mov	x29, sp
    aeb8:	bl	49a0 <ZSTD_CCtx_loadDictionary_advanced@plt>
    aebc:	ldp	x29, x30, [sp], #16
    aec0:	ret

000000000000aec4 <ZSTD_CCtx_loadDictionary@@Base>:
    aec4:	stp	x29, x30, [sp, #-16]!
    aec8:	mov	w3, wzr
    aecc:	mov	w4, wzr
    aed0:	mov	x29, sp
    aed4:	bl	49a0 <ZSTD_CCtx_loadDictionary_advanced@plt>
    aed8:	ldp	x29, x30, [sp], #16
    aedc:	ret

000000000000aee0 <ZSTD_CCtx_refCDict@@Base>:
    aee0:	stp	x29, x30, [sp, #-32]!
    aee4:	stp	x20, x19, [sp, #16]
    aee8:	ldr	w8, [x0, #1064]
    aeec:	mov	x29, sp
    aef0:	cbz	w8, aefc <ZSTD_CCtx_refCDict@@Base+0x1c>
    aef4:	mov	x0, #0xffffffffffffffc4    	// #-60
    aef8:	b	af10 <ZSTD_CCtx_refCDict@@Base+0x30>
    aefc:	mov	x19, x0
    af00:	mov	x20, x1
    af04:	bl	ae48 <ZSTD_CCtx_loadDictionary_advanced@@Base+0xc8>
    af08:	mov	x0, xzr
    af0c:	str	x20, [x19, #1112]
    af10:	ldp	x20, x19, [sp, #16]
    af14:	ldp	x29, x30, [sp], #32
    af18:	ret

000000000000af1c <ZSTD_CCtx_refPrefix@@Base>:
    af1c:	stp	x29, x30, [sp, #-16]!
    af20:	mov	w3, #0x1                   	// #1
    af24:	mov	x29, sp
    af28:	bl	4720 <ZSTD_CCtx_refPrefix_advanced@plt>
    af2c:	ldp	x29, x30, [sp], #16
    af30:	ret

000000000000af34 <ZSTD_CCtx_refPrefix_advanced@@Base>:
    af34:	stp	x29, x30, [sp, #-48]!
    af38:	stp	x22, x21, [sp, #16]
    af3c:	stp	x20, x19, [sp, #32]
    af40:	ldr	w8, [x0, #1064]
    af44:	mov	x29, sp
    af48:	cbz	w8, af54 <ZSTD_CCtx_refPrefix_advanced@@Base+0x20>
    af4c:	mov	x0, #0xffffffffffffffc4    	// #-60
    af50:	b	af78 <ZSTD_CCtx_refPrefix_advanced@@Base+0x44>
    af54:	mov	w19, w3
    af58:	mov	x20, x2
    af5c:	mov	x21, x0
    af60:	mov	x22, x1
    af64:	bl	ae48 <ZSTD_CCtx_loadDictionary_advanced@@Base+0xc8>
    af68:	mov	x0, xzr
    af6c:	str	x22, [x21, #1120]
    af70:	str	x20, [x21, #1128]
    af74:	str	w19, [x21, #1136]
    af78:	ldp	x20, x19, [sp, #32]
    af7c:	ldp	x22, x21, [sp, #16]
    af80:	ldp	x29, x30, [sp], #48
    af84:	ret

000000000000af88 <ZSTD_CCtx_reset@@Base>:
    af88:	stp	x29, x30, [sp, #-32]!
    af8c:	orr	w8, w1, #0x2
    af90:	str	x19, [sp, #16]
    af94:	cmp	w8, #0x3
    af98:	mov	x19, x0
    af9c:	mov	x29, sp
    afa0:	b.ne	afac <ZSTD_CCtx_reset@@Base+0x24>  // b.any
    afa4:	str	wzr, [x19, #1064]
    afa8:	str	xzr, [x19, #384]
    afac:	orr	w8, w1, #0x1
    afb0:	cmp	w8, #0x3
    afb4:	b.ne	afc8 <ZSTD_CCtx_reset@@Base+0x40>  // b.any
    afb8:	ldr	w8, [x19, #1064]
    afbc:	cbz	w8, afd0 <ZSTD_CCtx_reset@@Base+0x48>
    afc0:	mov	x0, #0xffffffffffffffc4    	// #-60
    afc4:	b	afe0 <ZSTD_CCtx_reset@@Base+0x58>
    afc8:	mov	x0, xzr
    afcc:	b	afe0 <ZSTD_CCtx_reset@@Base+0x58>
    afd0:	mov	x0, x19
    afd4:	bl	ae48 <ZSTD_CCtx_loadDictionary_advanced@@Base+0xc8>
    afd8:	add	x0, x19, #0x10
    afdc:	bl	4a50 <ZSTD_CCtxParams_reset@plt>
    afe0:	ldr	x19, [sp, #16]
    afe4:	ldp	x29, x30, [sp], #32
    afe8:	ret

000000000000afec <ZSTD_adjustCParams@@Base>:
    afec:	sub	sp, sp, #0x70
    aff0:	stp	x29, x30, [sp, #64]
    aff4:	stp	x22, x21, [sp, #80]
    aff8:	stp	x20, x19, [sp, #96]
    affc:	ldur	q0, [x0, #12]
    b000:	ldr	q1, [x0]
    b004:	mov	x21, x0
    b008:	mov	x22, x8
    b00c:	add	x8, sp, #0x20
    b010:	mov	x0, sp
    b014:	add	x29, sp, #0x40
    b018:	mov	x19, x2
    b01c:	mov	x20, x1
    b020:	stur	q0, [sp, #12]
    b024:	str	q1, [sp]
    b028:	bl	b074 <ZSTD_adjustCParams@@Base+0x88>
    b02c:	ldur	q0, [sp, #44]
    b030:	ldr	q1, [sp, #32]
    b034:	add	x0, sp, #0x20
    b038:	mov	x8, x22
    b03c:	stur	q0, [x21, #12]
    b040:	str	q1, [x21]
    b044:	ldur	q0, [x21, #12]
    b048:	ldr	q1, [x21]
    b04c:	mov	x1, x20
    b050:	mov	x2, x19
    b054:	stur	q0, [sp, #44]
    b058:	str	q1, [sp, #32]
    b05c:	bl	b1a0 <ZSTD_adjustCParams@@Base+0x1b4>
    b060:	ldp	x20, x19, [sp, #96]
    b064:	ldp	x22, x21, [sp, #80]
    b068:	ldp	x29, x30, [sp, #64]
    b06c:	add	sp, sp, #0x70
    b070:	ret
    b074:	stp	x29, x30, [sp, #-32]!
    b078:	stp	x20, x19, [sp, #16]
    b07c:	mov	x20, x0
    b080:	mov	w0, #0x65                  	// #101
    b084:	mov	x29, sp
    b088:	mov	x19, x8
    b08c:	bl	4960 <ZSTD_cParam_getBounds@plt>
    b090:	ldr	w8, [x20]
    b094:	cmp	w8, w1
    b098:	b.lt	b0a8 <ZSTD_adjustCParams@@Base+0xbc>  // b.tstop
    b09c:	lsr	x1, x1, #32
    b0a0:	cmp	w8, w1
    b0a4:	b.le	b0ac <ZSTD_adjustCParams@@Base+0xc0>
    b0a8:	str	w1, [x20]
    b0ac:	mov	w0, #0x67                  	// #103
    b0b0:	bl	4960 <ZSTD_cParam_getBounds@plt>
    b0b4:	ldr	w8, [x20, #4]
    b0b8:	cmp	w8, w1
    b0bc:	b.lt	b0cc <ZSTD_adjustCParams@@Base+0xe0>  // b.tstop
    b0c0:	lsr	x1, x1, #32
    b0c4:	cmp	w8, w1
    b0c8:	b.le	b0d0 <ZSTD_adjustCParams@@Base+0xe4>
    b0cc:	str	w1, [x20, #4]
    b0d0:	mov	w0, #0x66                  	// #102
    b0d4:	bl	4960 <ZSTD_cParam_getBounds@plt>
    b0d8:	ldr	w8, [x20, #8]
    b0dc:	cmp	w8, w1
    b0e0:	b.lt	b0f0 <ZSTD_adjustCParams@@Base+0x104>  // b.tstop
    b0e4:	lsr	x1, x1, #32
    b0e8:	cmp	w8, w1
    b0ec:	b.le	b0f4 <ZSTD_adjustCParams@@Base+0x108>
    b0f0:	str	w1, [x20, #8]
    b0f4:	mov	w0, #0x68                  	// #104
    b0f8:	bl	4960 <ZSTD_cParam_getBounds@plt>
    b0fc:	ldr	w8, [x20, #12]
    b100:	cmp	w8, w1
    b104:	b.lt	b114 <ZSTD_adjustCParams@@Base+0x128>  // b.tstop
    b108:	lsr	x1, x1, #32
    b10c:	cmp	w8, w1
    b110:	b.le	b118 <ZSTD_adjustCParams@@Base+0x12c>
    b114:	str	w1, [x20, #12]
    b118:	mov	w0, #0x69                  	// #105
    b11c:	bl	4960 <ZSTD_cParam_getBounds@plt>
    b120:	ldr	w8, [x20, #16]
    b124:	cmp	w8, w1
    b128:	b.lt	b138 <ZSTD_adjustCParams@@Base+0x14c>  // b.tstop
    b12c:	lsr	x1, x1, #32
    b130:	cmp	w8, w1
    b134:	b.le	b13c <ZSTD_adjustCParams@@Base+0x150>
    b138:	str	w1, [x20, #16]
    b13c:	mov	w0, #0x6a                  	// #106
    b140:	bl	4960 <ZSTD_cParam_getBounds@plt>
    b144:	ldr	w8, [x20, #20]
    b148:	cmp	w8, w1
    b14c:	b.lt	b15c <ZSTD_adjustCParams@@Base+0x170>  // b.tstop
    b150:	lsr	x1, x1, #32
    b154:	cmp	w8, w1
    b158:	b.le	b160 <ZSTD_adjustCParams@@Base+0x174>
    b15c:	str	w1, [x20, #20]
    b160:	mov	w0, #0x6b                  	// #107
    b164:	bl	4960 <ZSTD_cParam_getBounds@plt>
    b168:	ldr	w8, [x20, #24]
    b16c:	cmp	w8, w1
    b170:	b.lt	b180 <ZSTD_adjustCParams@@Base+0x194>  // b.tstop
    b174:	lsr	x1, x1, #32
    b178:	cmp	w8, w1
    b17c:	b.le	b184 <ZSTD_adjustCParams@@Base+0x198>
    b180:	str	w1, [x20, #24]
    b184:	ldur	q0, [x20, #12]
    b188:	ldr	q1, [x20]
    b18c:	stur	q0, [x19, #12]
    b190:	str	q1, [x19]
    b194:	ldp	x20, x19, [sp, #16]
    b198:	ldp	x29, x30, [sp], #32
    b19c:	ret
    b1a0:	stp	x29, x30, [sp, #-48]!
    b1a4:	add	x9, x1, #0x1
    b1a8:	cmp	x1, #0x0
    b1ac:	csinv	x10, x1, xzr, ne  // ne = any
    b1b0:	cmp	x9, #0x2
    b1b4:	ccmp	x2, #0x0, #0x4, cc  // cc = lo, ul, last
    b1b8:	mov	w9, #0x201                 	// #513
    b1bc:	csel	x9, x9, x10, ne  // ne = any
    b1c0:	orr	x10, x9, x2
    b1c4:	stp	x20, x19, [sp, #32]
    b1c8:	mov	x19, x0
    b1cc:	lsr	x10, x10, #30
    b1d0:	mov	x20, x8
    b1d4:	stp	x22, x21, [sp, #16]
    b1d8:	mov	x29, sp
    b1dc:	cbnz	x10, b210 <ZSTD_adjustCParams@@Base+0x224>
    b1e0:	add	w8, w9, w2
    b1e4:	cmp	w8, #0x40
    b1e8:	b.cs	b1f4 <ZSTD_adjustCParams@@Base+0x208>  // b.hs, b.nlast
    b1ec:	mov	w8, #0x6                   	// #6
    b1f0:	b	b200 <ZSTD_adjustCParams@@Base+0x214>
    b1f4:	sub	w0, w8, #0x1
    b1f8:	bl	bb80 <ZSTD_copyCCtx@@Base+0x2ec>
    b1fc:	add	w8, w0, #0x1
    b200:	ldr	w9, [x19]
    b204:	cmp	w9, w8
    b208:	b.ls	b210 <ZSTD_adjustCParams@@Base+0x224>  // b.plast
    b20c:	str	w8, [x19]
    b210:	ldr	w22, [x19]
    b214:	ldr	w9, [x19, #8]
    b218:	add	w8, w22, #0x1
    b21c:	cmp	w9, w8
    b220:	b.ls	b228 <ZSTD_adjustCParams@@Base+0x23c>  // b.plast
    b224:	str	w8, [x19, #8]
    b228:	ldr	w21, [x19, #4]
    b22c:	ldr	w1, [x19, #24]
    b230:	mov	w0, w21
    b234:	bl	e008 <ZSTD_endStream@@Base+0xb4>
    b238:	cmp	w22, w0
    b23c:	b.cs	b24c <ZSTD_adjustCParams@@Base+0x260>  // b.hs, b.nlast
    b240:	add	w8, w21, w22
    b244:	sub	w8, w8, w0
    b248:	str	w8, [x19, #4]
    b24c:	cmp	w22, #0x9
    b250:	b.hi	b25c <ZSTD_adjustCParams@@Base+0x270>  // b.pmore
    b254:	mov	w8, #0xa                   	// #10
    b258:	str	w8, [x19]
    b25c:	ldur	q0, [x19, #12]
    b260:	ldr	q1, [x19]
    b264:	ldp	x22, x21, [sp, #16]
    b268:	stur	q0, [x20, #12]
    b26c:	str	q1, [x20]
    b270:	ldp	x20, x19, [sp, #32]
    b274:	ldp	x29, x30, [sp], #48
    b278:	ret
    b27c:	sub	sp, sp, #0x50
    b280:	stp	x22, x21, [sp, #48]
    b284:	stp	x20, x19, [sp, #64]
    b288:	mov	x19, x2
    b28c:	mov	x21, x1
    b290:	mov	x22, x0
    b294:	cmn	x1, #0x1
    b298:	mov	x20, x8
    b29c:	stp	x29, x30, [sp, #32]
    b2a0:	add	x29, sp, #0x20
    b2a4:	b.ne	b2b8 <ZSTD_adjustCParams@@Base+0x2cc>  // b.any
    b2a8:	ldr	w8, [x22, #64]
    b2ac:	cmp	w8, #0x0
    b2b0:	csinv	w8, w8, wzr, gt
    b2b4:	sxtw	x21, w8
    b2b8:	ldr	w0, [x22, #44]
    b2bc:	mov	x8, sp
    b2c0:	mov	x1, x21
    b2c4:	mov	x2, x19
    b2c8:	bl	45c0 <ZSTD_getCParams@plt>
    b2cc:	ldr	w12, [x22, #96]
    b2d0:	ldp	w8, w9, [sp]
    b2d4:	mov	w15, #0x1b                  	// #27
    b2d8:	ldp	w10, w11, [sp, #8]
    b2dc:	cmp	w12, #0x0
    b2e0:	ldp	w12, w16, [x22, #4]
    b2e4:	csel	w8, w8, w15, eq  // eq = none
    b2e8:	ldp	w13, w14, [sp, #16]
    b2ec:	ldr	w17, [x22, #28]
    b2f0:	cmp	w12, #0x0
    b2f4:	csel	w8, w8, w12, eq  // eq = none
    b2f8:	ldp	w15, w12, [x22, #12]
    b2fc:	mov	x0, sp
    b300:	mov	x1, x21
    b304:	mov	x2, x19
    b308:	cmp	w15, #0x0
    b30c:	csel	w10, w10, w15, eq  // eq = none
    b310:	cmp	w16, #0x0
    b314:	csel	w9, w9, w16, eq  // eq = none
    b318:	cmp	w12, #0x0
    b31c:	csel	w11, w11, w12, eq  // eq = none
    b320:	ldp	w16, w12, [x22, #20]
    b324:	ldr	w15, [sp, #24]
    b328:	stp	w8, w9, [sp]
    b32c:	stp	w10, w11, [sp, #8]
    b330:	cmp	w16, #0x0
    b334:	csel	w8, w13, w16, eq  // eq = none
    b338:	cmp	w12, #0x0
    b33c:	csel	w9, w14, w12, eq  // eq = none
    b340:	cmp	w17, #0x0
    b344:	csel	w10, w15, w17, eq  // eq = none
    b348:	stp	w8, w9, [sp, #16]
    b34c:	mov	x8, x20
    b350:	str	w10, [sp, #24]
    b354:	bl	b1a0 <ZSTD_adjustCParams@@Base+0x1b4>
    b358:	ldp	x20, x19, [sp, #64]
    b35c:	ldp	x22, x21, [sp, #48]
    b360:	ldp	x29, x30, [sp, #32]
    b364:	add	sp, sp, #0x50
    b368:	ret

000000000000b36c <ZSTD_getCParams@@Base>:
    b36c:	sub	sp, sp, #0x30
    b370:	cmp	x1, #0x0
    b374:	mov	w10, #0x1f4                 	// #500
    b378:	add	x9, x2, x1
    b37c:	csel	x10, x10, xzr, eq  // eq = none
    b380:	mov	w11, #0x1                   	// #1
    b384:	cmp	x9, #0x0
    b388:	add	x9, x9, x10
    b38c:	movk	w11, #0x2, lsl #16
    b390:	csinv	x9, x9, xzr, ne  // ne = any
    b394:	mov	w12, #0x2                   	// #2
    b398:	add	x11, x11, #0x20, lsl #12
    b39c:	cmp	x9, #0x20, lsl #12
    b3a0:	cset	w10, ls  // ls = plast
    b3a4:	csinc	x12, x12, xzr, ls  // ls = plast
    b3a8:	cmp	x9, x11
    b3ac:	csel	x10, x10, x12, cs  // cs = hs, nlast
    b3b0:	cmp	x9, #0x4, lsl #12
    b3b4:	mov	w11, #0x3                   	// #3
    b3b8:	adrp	x9, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
    b3bc:	cinc	x10, x10, ls  // ls = plast
    b3c0:	cmp	w0, #0x0
    b3c4:	mov	w12, #0x284                 	// #644
    b3c8:	add	x9, x9, #0x868
    b3cc:	csel	w11, w11, w0, eq  // eq = none
    b3d0:	madd	x9, x10, x12, x9
    b3d4:	mov	w10, #0x16                  	// #22
    b3d8:	csel	w11, wzr, w11, lt  // lt = tstop
    b3dc:	cmp	w0, #0x16
    b3e0:	mov	w12, #0x1c                  	// #28
    b3e4:	csel	w10, w10, w11, gt
    b3e8:	smaddl	x9, w10, w12, x9
    b3ec:	ldp	w11, w10, [x9, #16]
    b3f0:	ldr	q0, [x9]
    b3f4:	ldr	w9, [x9, #24]
    b3f8:	cmp	w0, #0x0
    b3fc:	csneg	w10, w10, w0, ge  // ge = tcont
    b400:	mov	x0, sp
    b404:	stp	x29, x30, [sp, #32]
    b408:	add	x29, sp, #0x20
    b40c:	str	q0, [sp]
    b410:	stp	w11, w10, [sp, #16]
    b414:	str	w9, [sp, #24]
    b418:	bl	b1a0 <ZSTD_adjustCParams@@Base+0x1b4>
    b41c:	ldp	x29, x30, [sp, #32]
    b420:	add	sp, sp, #0x30
    b424:	ret

000000000000b428 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base>:
    b428:	sub	sp, sp, #0x90
    b42c:	stp	x29, x30, [sp, #64]
    b430:	stp	x24, x23, [sp, #96]
    b434:	stp	x22, x21, [sp, #112]
    b438:	stp	x20, x19, [sp, #128]
    b43c:	ldr	w8, [x0, #76]
    b440:	str	x25, [sp, #80]
    b444:	add	x29, sp, #0x40
    b448:	cmp	w8, #0x0
    b44c:	b.le	b458 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x30>
    b450:	mov	x0, #0xffffffffffffffff    	// #-1
    b454:	b	b52c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x104>
    b458:	add	x8, sp, #0x20
    b45c:	mov	x1, xzr
    b460:	mov	x2, xzr
    b464:	mov	x19, x0
    b468:	bl	b27c <ZSTD_adjustCParams@@Base+0x290>
    b46c:	ldr	w9, [sp, #32]
    b470:	mov	w8, #0x1                   	// #1
    b474:	ldr	w11, [sp, #48]
    b478:	mov	w10, #0x20000               	// #131072
    b47c:	lsl	x8, x8, x9
    b480:	cmp	x8, #0x20, lsl #12
    b484:	csel	x20, x8, x10, cc  // cc = lo, ul, last
    b488:	mov	w12, #0x3                   	// #3
    b48c:	cmp	w11, #0x3
    b490:	add	x22, x20, #0x20
    b494:	cinc	x8, x12, ne  // ne = any
    b498:	mov	x0, x22
    b49c:	udiv	x21, x20, x8
    b4a0:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    b4a4:	lsl	x23, x21, #3
    b4a8:	mov	x0, x23
    b4ac:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    b4b0:	mov	x0, x21
    b4b4:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    b4b8:	add	x0, sp, #0x20
    b4bc:	mov	w1, #0x1                   	// #1
    b4c0:	add	x25, x21, x21, lsl #1
    b4c4:	bl	b54c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x124>
    b4c8:	ldr	x8, [x19, #112]
    b4cc:	ldr	q0, [x19, #96]
    b4d0:	mov	x21, x0
    b4d4:	mov	x0, sp
    b4d8:	str	x8, [sp, #16]
    b4dc:	str	q0, [sp]
    b4e0:	bl	25f90 <ZSTD_endStream@@Base+0x1803c>
    b4e4:	ldr	x8, [x19, #112]
    b4e8:	ldr	q0, [x19, #96]
    b4ec:	mov	x24, x0
    b4f0:	mov	x0, sp
    b4f4:	mov	x1, x20
    b4f8:	str	x8, [sp, #16]
    b4fc:	str	q0, [sp]
    b500:	bl	25ff4 <ZSTD_endStream@@Base+0x180a0>
    b504:	add	x8, x0, x0, lsl #1
    b508:	lsl	x0, x8, #2
    b50c:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    b510:	add	x8, x22, x23
    b514:	add	x8, x8, x25
    b518:	add	x8, x8, x21
    b51c:	add	x8, x8, x24
    b520:	add	x8, x8, x0
    b524:	mov	w9, #0x4058                	// #16472
    b528:	add	x0, x8, x9
    b52c:	ldp	x20, x19, [sp, #128]
    b530:	ldp	x22, x21, [sp, #112]
    b534:	ldp	x24, x23, [sp, #96]
    b538:	ldr	x25, [sp, #80]
    b53c:	ldp	x29, x30, [sp, #64]
    b540:	add	sp, sp, #0x90
    b544:	ret
    b548:	ret
    b54c:	ldr	w8, [x0, #24]
    b550:	cmp	w8, #0x1
    b554:	b.ne	b568 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x140>  // b.any
    b558:	mov	x9, xzr
    b55c:	ldr	w10, [x0, #8]
    b560:	cbnz	w1, b57c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x154>
    b564:	b	b59c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x174>
    b568:	ldr	w9, [x0, #4]
    b56c:	mov	w10, #0x4                   	// #4
    b570:	lsl	x9, x10, x9
    b574:	ldr	w10, [x0, #8]
    b578:	cbz	w1, b59c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x174>
    b57c:	ldr	w11, [x0, #16]
    b580:	cmp	w11, #0x3
    b584:	b.ne	b59c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x174>  // b.any
    b588:	ldr	w11, [x0]
    b58c:	mov	w12, #0x11                  	// #17
    b590:	cmp	w11, #0x11
    b594:	csel	w11, w11, w12, cc  // cc = lo, ul, last
    b598:	b	b5a0 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x178>
    b59c:	mov	w11, wzr
    b5a0:	mov	w12, #0x4                   	// #4
    b5a4:	cmp	w11, #0x0
    b5a8:	lsl	x11, x12, x11
    b5ac:	csel	x11, xzr, x11, eq  // eq = none
    b5b0:	cmp	w8, #0x6
    b5b4:	mov	w8, #0x4608                	// #17928
    b5b8:	ccmp	w1, #0x0, #0x4, hi  // hi = pmore
    b5bc:	movk	w8, #0x2, lsl #16
    b5c0:	csel	x8, x8, xzr, ne  // ne = any
    b5c4:	lsl	x10, x12, x10
    b5c8:	add	x8, x9, x8
    b5cc:	add	x8, x8, x10
    b5d0:	add	x0, x8, x11
    b5d4:	ret

000000000000b5d8 <ZSTD_estimateCCtxSize_usingCParams@@Base>:
    b5d8:	sub	sp, sp, #0xc0
    b5dc:	stp	x29, x30, [sp, #176]
    b5e0:	ldur	q0, [x0, #12]
    b5e4:	ldr	q1, [x0]
    b5e8:	add	x8, sp, #0x20
    b5ec:	mov	x0, sp
    b5f0:	add	x29, sp, #0xb0
    b5f4:	stur	q0, [sp, #12]
    b5f8:	str	q1, [sp]
    b5fc:	bl	b614 <ZSTD_estimateCCtxSize_usingCParams@@Base+0x3c>
    b600:	add	x0, sp, #0x20
    b604:	bl	4910 <ZSTD_estimateCCtxSize_usingCCtxParams@plt>
    b608:	ldp	x29, x30, [sp, #176]
    b60c:	add	sp, sp, #0xc0
    b610:	ret
    b614:	movi	v0.2d, #0x0
    b618:	stp	q0, q0, [x8, #112]
    b61c:	stp	q0, q0, [x8, #80]
    b620:	stp	q0, q0, [x8, #48]
    b624:	stp	q0, q0, [x8, #16]
    b628:	str	q0, [x8]
    b62c:	ldr	q0, [x0]
    b630:	ldur	q1, [x0, #12]
    b634:	mov	w9, #0x3                   	// #3
    b638:	str	w9, [x8, #44]
    b63c:	mov	w9, #0x1                   	// #1
    b640:	str	q1, [x8, #16]
    b644:	stur	q0, [x8, #4]
    b648:	str	w9, [x8, #32]
    b64c:	ret

000000000000b650 <ZSTD_estimateCCtxSize@@Base>:
    b650:	stp	x29, x30, [sp, #-48]!
    b654:	cmp	w0, #0x1
    b658:	str	x21, [sp, #16]
    b65c:	stp	x20, x19, [sp, #32]
    b660:	mov	w20, w0
    b664:	mov	x19, xzr
    b668:	csinc	w21, w0, wzr, lt  // lt = tstop
    b66c:	mov	x29, sp
    b670:	mov	w0, w21
    b674:	bl	b6a0 <ZSTD_estimateCCtxSize@@Base+0x50>
    b678:	cmp	x0, x19
    b67c:	csel	x19, x0, x19, hi  // hi = pmore
    b680:	cmp	w21, w20
    b684:	add	w21, w21, #0x1
    b688:	b.lt	b670 <ZSTD_estimateCCtxSize@@Base+0x20>  // b.tstop
    b68c:	mov	x0, x19
    b690:	ldp	x20, x19, [sp, #32]
    b694:	ldr	x21, [sp, #16]
    b698:	ldp	x29, x30, [sp], #48
    b69c:	ret
    b6a0:	sub	sp, sp, #0x50
    b6a4:	add	x8, sp, #0x20
    b6a8:	mov	x1, xzr
    b6ac:	mov	x2, xzr
    b6b0:	stp	x29, x30, [sp, #64]
    b6b4:	add	x29, sp, #0x40
    b6b8:	bl	45c0 <ZSTD_getCParams@plt>
    b6bc:	ldr	q0, [sp, #32]
    b6c0:	ldur	q1, [sp, #44]
    b6c4:	mov	x0, sp
    b6c8:	str	q0, [sp]
    b6cc:	stur	q1, [sp, #12]
    b6d0:	bl	46e0 <ZSTD_estimateCCtxSize_usingCParams@plt>
    b6d4:	ldp	x29, x30, [sp, #64]
    b6d8:	add	sp, sp, #0x50
    b6dc:	ret

000000000000b6e0 <ZSTD_estimateCStreamSize_usingCCtxParams@@Base>:
    b6e0:	sub	sp, sp, #0x50
    b6e4:	stp	x29, x30, [sp, #32]
    b6e8:	stp	x20, x19, [sp, #64]
    b6ec:	ldr	w8, [x0, #76]
    b6f0:	str	x21, [sp, #48]
    b6f4:	add	x29, sp, #0x20
    b6f8:	cmp	w8, #0x0
    b6fc:	b.le	b708 <ZSTD_estimateCStreamSize_usingCCtxParams@@Base+0x28>
    b700:	mov	x0, #0xffffffffffffffff    	// #-1
    b704:	b	b764 <ZSTD_estimateCStreamSize_usingCCtxParams@@Base+0x84>
    b708:	mov	x8, sp
    b70c:	mov	x1, xzr
    b710:	mov	x2, xzr
    b714:	mov	x19, x0
    b718:	bl	b27c <ZSTD_adjustCParams@@Base+0x290>
    b71c:	mov	x0, x19
    b720:	bl	4910 <ZSTD_estimateCCtxSize_usingCCtxParams@plt>
    b724:	ldr	w8, [sp]
    b728:	mov	w9, #0x1                   	// #1
    b72c:	mov	x19, x0
    b730:	lsl	x8, x9, x8
    b734:	cmp	x8, #0x20, lsl #12
    b738:	mov	w9, #0x20000               	// #131072
    b73c:	csel	x0, x8, x9, cc  // cc = lo, ul, last
    b740:	add	x20, x0, x8
    b744:	bl	4930 <ZSTD_compressBound@plt>
    b748:	add	x21, x0, #0x1
    b74c:	mov	x0, x20
    b750:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    b754:	mov	x0, x21
    b758:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    b75c:	add	x8, x20, x19
    b760:	add	x0, x8, x21
    b764:	ldp	x20, x19, [sp, #64]
    b768:	ldr	x21, [sp, #48]
    b76c:	ldp	x29, x30, [sp, #32]
    b770:	add	sp, sp, #0x50
    b774:	ret

000000000000b778 <ZSTD_estimateCStreamSize_usingCParams@@Base>:
    b778:	sub	sp, sp, #0xc0
    b77c:	stp	x29, x30, [sp, #176]
    b780:	ldur	q0, [x0, #12]
    b784:	ldr	q1, [x0]
    b788:	add	x8, sp, #0x20
    b78c:	mov	x0, sp
    b790:	add	x29, sp, #0xb0
    b794:	stur	q0, [sp, #12]
    b798:	str	q1, [sp]
    b79c:	bl	b614 <ZSTD_estimateCCtxSize_usingCParams@@Base+0x3c>
    b7a0:	add	x0, sp, #0x20
    b7a4:	bl	44a0 <ZSTD_estimateCStreamSize_usingCCtxParams@plt>
    b7a8:	ldp	x29, x30, [sp, #176]
    b7ac:	add	sp, sp, #0xc0
    b7b0:	ret

000000000000b7b4 <ZSTD_estimateCStreamSize@@Base>:
    b7b4:	stp	x29, x30, [sp, #-48]!
    b7b8:	cmp	w0, #0x1
    b7bc:	str	x21, [sp, #16]
    b7c0:	stp	x20, x19, [sp, #32]
    b7c4:	mov	w20, w0
    b7c8:	mov	x19, xzr
    b7cc:	csinc	w21, w0, wzr, lt  // lt = tstop
    b7d0:	mov	x29, sp
    b7d4:	mov	w0, w21
    b7d8:	bl	b804 <ZSTD_estimateCStreamSize@@Base+0x50>
    b7dc:	cmp	x0, x19
    b7e0:	csel	x19, x0, x19, hi  // hi = pmore
    b7e4:	cmp	w21, w20
    b7e8:	add	w21, w21, #0x1
    b7ec:	b.lt	b7d4 <ZSTD_estimateCStreamSize@@Base+0x20>  // b.tstop
    b7f0:	mov	x0, x19
    b7f4:	ldp	x20, x19, [sp, #32]
    b7f8:	ldr	x21, [sp, #16]
    b7fc:	ldp	x29, x30, [sp], #48
    b800:	ret
    b804:	sub	sp, sp, #0x50
    b808:	add	x8, sp, #0x20
    b80c:	mov	x1, xzr
    b810:	mov	x2, xzr
    b814:	stp	x29, x30, [sp, #64]
    b818:	add	x29, sp, #0x40
    b81c:	bl	45c0 <ZSTD_getCParams@plt>
    b820:	ldr	q0, [sp, #32]
    b824:	ldur	q1, [sp, #44]
    b828:	mov	x0, sp
    b82c:	str	q0, [sp]
    b830:	stur	q1, [sp, #12]
    b834:	bl	4a80 <ZSTD_estimateCStreamSize_usingCParams@plt>
    b838:	ldp	x29, x30, [sp, #64]
    b83c:	add	sp, sp, #0x50
    b840:	ret

000000000000b844 <ZSTD_getFrameProgression@@Base>:
    b844:	ldr	x9, [x0, #992]
    b848:	cbz	x9, b858 <ZSTD_getFrameProgression@@Base+0x14>
    b84c:	ldr	x9, [x0, #1016]
    b850:	ldr	x10, [x0, #1008]
    b854:	sub	x9, x9, x10
    b858:	ldr	x10, [x0, #392]
    b85c:	add	x9, x10, x9
    b860:	stp	x9, x10, [x8]
    b864:	ldr	x9, [x0, #400]
    b868:	str	xzr, [x8, #32]
    b86c:	stp	x9, x9, [x8, #16]
    b870:	ret

000000000000b874 <ZSTD_toFlushNow@@Base>:
    b874:	mov	x0, xzr
    b878:	ret
    b87c:	ldr	x8, [x0, #752]
    b880:	mov	w9, #0x11e4                	// #4580
    b884:	add	x8, x8, x9
    b888:	str	wzr, [x8, #8]
    b88c:	str	xzr, [x8]
    b890:	ret

000000000000b894 <ZSTD_copyCCtx@@Base>:
    b894:	stp	x29, x30, [sp, #-16]!
    b898:	ldr	x8, [x1, #1000]
    b89c:	mov	x3, xzr
    b8a0:	mov	x29, sp
    b8a4:	cmp	x8, #0x0
    b8a8:	cset	w5, ne  // ne = any
    b8ac:	cmp	x2, #0x0
    b8b0:	csinv	x4, x2, xzr, ne  // ne = any
    b8b4:	cmn	x4, #0x1
    b8b8:	cset	w2, ne  // ne = any
    b8bc:	bl	b8c8 <ZSTD_copyCCtx@@Base+0x34>
    b8c0:	ldp	x29, x30, [sp], #16
    b8c4:	ret
    b8c8:	sub	sp, sp, #0x180
    b8cc:	stp	x29, x30, [sp, #288]
    b8d0:	stp	x26, x25, [sp, #320]
    b8d4:	stp	x24, x23, [sp, #336]
    b8d8:	stp	x22, x21, [sp, #352]
    b8dc:	stp	x20, x19, [sp, #368]
    b8e0:	ldr	w8, [x1]
    b8e4:	str	x28, [sp, #304]
    b8e8:	add	x29, sp, #0x120
    b8ec:	cmp	w8, #0x1
    b8f0:	b.ne	b9c8 <ZSTD_copyCCtx@@Base+0x134>  // b.any
    b8f4:	ldr	x8, [x1, #512]
    b8f8:	ldr	q0, [x1, #496]
    b8fc:	ldp	q2, q1, [x0, #16]
    b900:	mov	x19, x1
    b904:	str	x8, [x0, #512]
    b908:	str	q0, [x0, #496]
    b90c:	stp	q2, q1, [x29, #-32]
    b910:	ldr	w8, [x0, #156]
    b914:	ldur	q0, [x0, #140]
    b918:	ldur	q1, [x0, #108]
    b91c:	ldur	q2, [x0, #124]
    b920:	str	w8, [sp, #240]
    b924:	mov	w8, w8
    b928:	str	q1, [sp, #192]
    b92c:	stp	q2, q0, [sp, #208]
    b930:	ldur	q0, [x0, #92]
    b934:	ldur	q1, [x0, #60]
    b938:	ldur	q2, [x0, #76]
    b93c:	mov	x20, x0
    b940:	str	q1, [sp, #144]
    b944:	stp	q2, q0, [sp, #160]
    b948:	ldp	q3, q0, [sp, #192]
    b94c:	ldr	q2, [x1, #176]
    b950:	ldur	q1, [x1, #164]
    b954:	str	x2, [sp, #32]
    b958:	stur	q0, [sp, #108]
    b95c:	stur	q2, [x29, #-16]
    b960:	ldp	q0, q2, [sp, #144]
    b964:	stur	q1, [x29, #-28]
    b968:	stur	q3, [sp, #92]
    b96c:	ldr	q3, [sp, #224]
    b970:	stur	q0, [sp, #44]
    b974:	stur	q2, [sp, #60]
    b978:	ldp	q1, q0, [x29, #-32]
    b97c:	ldr	q2, [sp, #176]
    b980:	str	w3, [sp, #40]
    b984:	mov	x1, sp
    b988:	mov	w3, #0x1                   	// #1
    b98c:	mov	x2, x4
    b990:	mov	w4, w5
    b994:	stur	q3, [sp, #124]
    b998:	str	w8, [sp, #140]
    b99c:	stp	q1, q0, [sp]
    b9a0:	stur	q2, [sp, #76]
    b9a4:	bl	e018 <ZSTD_endStream@@Base+0xc4>
    b9a8:	add	x21, x20, #0x138
    b9ac:	mov	x0, x21
    b9b0:	bl	e524 <ZSTD_endStream@@Base+0x5d0>
    b9b4:	ldr	w8, [x19, #188]
    b9b8:	cmp	w8, #0x1
    b9bc:	b.ne	b9d0 <ZSTD_copyCCtx@@Base+0x13c>  // b.any
    b9c0:	mov	x22, xzr
    b9c4:	b	b9dc <ZSTD_copyCCtx@@Base+0x148>
    b9c8:	mov	x0, #0xffffffffffffffc4    	// #-60
    b9cc:	b	ba64 <ZSTD_copyCCtx@@Base+0x1d0>
    b9d0:	ldr	w8, [x19, #168]
    b9d4:	mov	w9, #0x4                   	// #4
    b9d8:	lsl	x22, x9, x8
    b9dc:	ldr	w8, [x19, #172]
    b9e0:	ldr	x0, [x20, #816]
    b9e4:	ldr	x1, [x19, #816]
    b9e8:	ldr	w24, [x19, #808]
    b9ec:	mov	w26, #0x4                   	// #4
    b9f0:	lsl	x2, x26, x8
    b9f4:	add	x23, x19, #0x2f0
    b9f8:	add	x25, x20, #0x2f0
    b9fc:	bl	4420 <memcpy@plt>
    ba00:	ldr	x0, [x20, #832]
    ba04:	ldr	x1, [x19, #832]
    ba08:	mov	x2, x22
    ba0c:	bl	4420 <memcpy@plt>
    ba10:	ldr	x0, [x20, #824]
    ba14:	ldr	x1, [x19, #824]
    ba18:	lsl	x8, x26, x24
    ba1c:	cmp	w24, #0x0
    ba20:	csel	x2, xzr, x8, eq  // eq = none
    ba24:	bl	4420 <memcpy@plt>
    ba28:	mov	x0, x21
    ba2c:	bl	e530 <ZSTD_endStream@@Base+0x5dc>
    ba30:	ldp	q1, q0, [x19, #768]
    ba34:	mov	w2, #0x11f0                	// #4592
    ba38:	stp	q1, q0, [x20, #768]
    ba3c:	ldr	w8, [x23, #52]
    ba40:	str	w8, [x25, #52]
    ba44:	ldr	w8, [x19, #800]
    ba48:	ldr	x0, [x20, #752]
    ba4c:	str	w8, [x20, #800]
    ba50:	ldr	w8, [x19, #304]
    ba54:	str	w8, [x20, #304]
    ba58:	ldr	x1, [x19, #752]
    ba5c:	bl	4420 <memcpy@plt>
    ba60:	mov	x0, xzr
    ba64:	ldp	x20, x19, [sp, #368]
    ba68:	ldp	x22, x21, [sp, #352]
    ba6c:	ldp	x24, x23, [sp, #336]
    ba70:	ldp	x26, x25, [sp, #320]
    ba74:	ldr	x28, [sp, #304]
    ba78:	ldp	x29, x30, [sp, #288]
    ba7c:	add	sp, sp, #0x180
    ba80:	ret
    ba84:	stp	x29, x30, [sp, #-96]!
    ba88:	str	x27, [sp, #16]
    ba8c:	stp	x26, x25, [sp, #32]
    ba90:	stp	x24, x23, [sp, #48]
    ba94:	stp	x22, x21, [sp, #64]
    ba98:	stp	x20, x19, [sp, #80]
    ba9c:	ldp	x8, x9, [x0]
    baa0:	ldp	x22, x21, [x0, #32]
    baa4:	mov	x19, x0
    baa8:	mov	x29, sp
    baac:	sub	x9, x9, x8
    bab0:	lsr	x10, x9, #3
    bab4:	cbz	w10, bb00 <ZSTD_copyCCtx@@Base+0x26c>
    bab8:	ldr	x23, [x19, #48]
    babc:	ubfx	x24, x9, #3, #32
    bac0:	add	x25, x8, #0x4
    bac4:	mov	x26, x21
    bac8:	mov	x27, x22
    bacc:	ldrh	w0, [x25]
    bad0:	ldrh	w20, [x25, #2]
    bad4:	bl	bb4c <ZSTD_copyCCtx@@Base+0x2b8>
    bad8:	strb	w0, [x27], #1
    badc:	ldur	w0, [x25, #-4]
    bae0:	bl	bb80 <ZSTD_copyCCtx@@Base+0x2ec>
    bae4:	strb	w0, [x23], #1
    bae8:	mov	w0, w20
    baec:	bl	bb8c <ZSTD_copyCCtx@@Base+0x2f8>
    baf0:	strb	w0, [x26], #1
    baf4:	subs	x24, x24, #0x1
    baf8:	add	x25, x25, #0x8
    bafc:	b.ne	bacc <ZSTD_copyCCtx@@Base+0x238>  // b.any
    bb00:	ldr	w8, [x19, #72]
    bb04:	cmp	w8, #0x1
    bb08:	b.ne	bb18 <ZSTD_copyCCtx@@Base+0x284>  // b.any
    bb0c:	ldr	w8, [x19, #76]
    bb10:	mov	w9, #0x23                  	// #35
    bb14:	strb	w9, [x22, x8]
    bb18:	ldr	w8, [x19, #72]
    bb1c:	cmp	w8, #0x2
    bb20:	b.ne	bb30 <ZSTD_copyCCtx@@Base+0x29c>  // b.any
    bb24:	ldr	w8, [x19, #76]
    bb28:	mov	w9, #0x34                  	// #52
    bb2c:	strb	w9, [x21, x8]
    bb30:	ldp	x20, x19, [sp, #80]
    bb34:	ldp	x22, x21, [sp, #64]
    bb38:	ldp	x24, x23, [sp, #48]
    bb3c:	ldp	x26, x25, [sp, #32]
    bb40:	ldr	x27, [sp, #16]
    bb44:	ldp	x29, x30, [sp], #96
    bb48:	ret
    bb4c:	stp	x29, x30, [sp, #-16]!
    bb50:	cmp	w0, #0x40
    bb54:	mov	x29, sp
    bb58:	b.cc	bb6c <ZSTD_copyCCtx@@Base+0x2d8>  // b.lo, b.ul, b.last
    bb5c:	bl	bb80 <ZSTD_copyCCtx@@Base+0x2ec>
    bb60:	add	w0, w0, #0x13
    bb64:	ldp	x29, x30, [sp], #16
    bb68:	ret
    bb6c:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    bb70:	add	x8, x8, #0x284
    bb74:	ldrb	w0, [x8, w0, uxtw]
    bb78:	ldp	x29, x30, [sp], #16
    bb7c:	ret
    bb80:	clz	w8, w0
    bb84:	eor	w0, w8, #0x1f
    bb88:	ret
    bb8c:	stp	x29, x30, [sp, #-16]!
    bb90:	cmp	w0, #0x80
    bb94:	mov	x29, sp
    bb98:	b.cc	bbac <ZSTD_copyCCtx@@Base+0x318>  // b.lo, b.ul, b.last
    bb9c:	bl	bb80 <ZSTD_copyCCtx@@Base+0x2ec>
    bba0:	add	w0, w0, #0x24
    bba4:	ldp	x29, x30, [sp], #16
    bba8:	ret
    bbac:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    bbb0:	add	x8, x8, #0x2c4
    bbb4:	ldrb	w0, [x8, w0, uxtw]
    bbb8:	ldp	x29, x30, [sp], #16
    bbbc:	ret
    bbc0:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
    bbc4:	add	x8, x8, #0xc80
    bbc8:	mov	w9, #0x50                  	// #80
    bbcc:	smaddl	x8, w1, w9, x8
    bbd0:	ldr	x0, [x8, w0, sxtw #3]
    bbd4:	ret
    bbd8:	ldr	x8, [x0, #16]
    bbdc:	ldr	x9, [x0]
    bbe0:	str	wzr, [x0, #72]
    bbe4:	str	x8, [x0, #24]
    bbe8:	str	x9, [x0, #8]
    bbec:	ret

000000000000bbf0 <ZSTD_getSequences@@Base>:
    bbf0:	sub	sp, sp, #0x70
    bbf4:	stp	x20, x19, [sp, #96]
    bbf8:	mov	x19, x0
    bbfc:	mov	x0, x4
    bc00:	stp	x29, x30, [sp, #32]
    bc04:	str	x25, [sp, #48]
    bc08:	stp	x24, x23, [sp, #64]
    bc0c:	stp	x22, x21, [sp, #80]
    bc10:	add	x29, sp, #0x20
    bc14:	mov	x20, x4
    bc18:	mov	x21, x3
    bc1c:	mov	x22, x2
    bc20:	mov	x25, x1
    bc24:	bl	4930 <ZSTD_compressBound@plt>
    bc28:	add	x1, sp, #0x8
    bc2c:	mov	x24, x0
    bc30:	stp	xzr, xzr, [sp, #8]
    bc34:	str	xzr, [sp, #24]
    bc38:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
    bc3c:	cbz	x0, bc8c <ZSTD_getSequences@@Base+0x9c>
    bc40:	mov	x23, x0
    bc44:	mov	w8, #0x1                   	// #1
    bc48:	mov	x0, x19
    bc4c:	mov	x1, x23
    bc50:	mov	x2, x24
    bc54:	mov	x3, x21
    bc58:	mov	x4, x20
    bc5c:	str	x25, [x19, #536]
    bc60:	str	xzr, [x19, #544]
    bc64:	str	w8, [x19, #528]
    bc68:	str	x22, [x19, #552]
    bc6c:	bl	4950 <ZSTD_compress2@plt>
    bc70:	add	x1, sp, #0x8
    bc74:	mov	x0, x23
    bc78:	stp	xzr, xzr, [sp, #8]
    bc7c:	str	xzr, [sp, #24]
    bc80:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
    bc84:	ldr	x0, [x19, #544]
    bc88:	b	bc90 <ZSTD_getSequences@@Base+0xa0>
    bc8c:	mov	x0, #0xffffffffffffffc0    	// #-64
    bc90:	ldp	x20, x19, [sp, #96]
    bc94:	ldp	x22, x21, [sp, #80]
    bc98:	ldp	x24, x23, [sp, #64]
    bc9c:	ldr	x25, [sp, #48]
    bca0:	ldp	x29, x30, [sp, #32]
    bca4:	add	sp, sp, #0x70
    bca8:	ret

000000000000bcac <ZSTD_compress2@@Base>:
    bcac:	sub	sp, sp, #0x50
    bcb0:	stp	x22, x21, [sp, #48]
    bcb4:	mov	x22, x1
    bcb8:	mov	w1, #0x1                   	// #1
    bcbc:	stp	x29, x30, [sp, #16]
    bcc0:	str	x23, [sp, #32]
    bcc4:	stp	x20, x19, [sp, #64]
    bcc8:	add	x29, sp, #0x10
    bccc:	mov	x19, x4
    bcd0:	mov	x20, x3
    bcd4:	mov	x21, x2
    bcd8:	mov	x23, x0
    bcdc:	bl	4530 <ZSTD_CCtx_reset@plt>
    bce0:	add	x3, x29, #0x18
    bce4:	add	x6, sp, #0x8
    bce8:	mov	w7, #0x2                   	// #2
    bcec:	mov	x0, x23
    bcf0:	mov	x1, x22
    bcf4:	mov	x2, x21
    bcf8:	mov	x4, x20
    bcfc:	mov	x5, x19
    bd00:	str	xzr, [x29, #24]
    bd04:	str	xzr, [sp, #8]
    bd08:	bl	4690 <ZSTD_compressStream2_simpleArgs@plt>
    bd0c:	mov	x19, x0
    bd10:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    bd14:	ldr	x8, [x29, #24]
    bd18:	cmp	x19, #0x0
    bd1c:	mov	x9, #0xffffffffffffffba    	// #-70
    bd20:	ldp	x22, x21, [sp, #48]
    bd24:	csel	x8, x8, x9, eq  // eq = none
    bd28:	cmp	w0, #0x0
    bd2c:	csel	x0, x8, x19, eq  // eq = none
    bd30:	ldp	x20, x19, [sp, #64]
    bd34:	ldr	x23, [sp, #32]
    bd38:	ldp	x29, x30, [sp, #16]
    bd3c:	add	sp, sp, #0x50
    bd40:	ret
    bd44:	cmp	x1, #0x3
    bd48:	b.cs	bd54 <ZSTD_compress2@@Base+0xa8>  // b.hs, b.nlast
    bd4c:	mov	x0, #0xffffffffffffffba    	// #-70
    bd50:	ret
    bd54:	stp	x29, x30, [sp, #-16]!
    bd58:	mov	w1, #0x1                   	// #1
    bd5c:	mov	x29, sp
    bd60:	bl	bd70 <ZSTD_compress2@@Base+0xc4>
    bd64:	mov	w0, #0x3                   	// #3
    bd68:	ldp	x29, x30, [sp], #16
    bd6c:	ret
    bd70:	stp	x29, x30, [sp, #-32]!
    bd74:	stp	x20, x19, [sp, #16]
    bd78:	mov	x29, sp
    bd7c:	mov	w19, w1
    bd80:	mov	x20, x0
    bd84:	bl	eaa8 <ZSTD_endStream@@Base+0xb54>
    bd88:	lsr	w8, w19, #16
    bd8c:	strb	w8, [x20, #2]
    bd90:	ldp	x20, x19, [sp, #16]
    bd94:	ldp	x29, x30, [sp], #32
    bd98:	ret
    bd9c:	ldr	w9, [x0]
    bda0:	cmp	w9, #0x1
    bda4:	b.ne	bdbc <ZSTD_compress2@@Base+0x110>  // b.any
    bda8:	ldr	w9, [x0, #256]
    bdac:	mov	x8, x0
    bdb0:	cbz	w9, bdc4 <ZSTD_compress2@@Base+0x118>
    bdb4:	mov	x0, #0xffffffffffffffd8    	// #-40
    bdb8:	ret
    bdbc:	mov	x0, #0xffffffffffffffc4    	// #-60
    bdc0:	ret
    bdc4:	mov	x0, xzr
    bdc8:	str	x1, [x8, #720]
    bdcc:	str	x2, [x8, #736]
    bdd0:	str	x2, [x8, #744]
    bdd4:	str	xzr, [x8, #728]
    bdd8:	ret

000000000000bddc <ZSTD_compressContinue@@Base>:
    bddc:	stp	x29, x30, [sp, #-16]!
    bde0:	mov	w5, #0x1                   	// #1
    bde4:	mov	w6, wzr
    bde8:	mov	x29, sp
    bdec:	bl	bdf8 <ZSTD_compressContinue@@Base+0x1c>
    bdf0:	ldp	x29, x30, [sp], #16
    bdf4:	ret
    bdf8:	stp	x29, x30, [sp, #-96]!
    bdfc:	stp	x26, x25, [sp, #32]
    be00:	stp	x24, x23, [sp, #48]
    be04:	stp	x22, x21, [sp, #64]
    be08:	stp	x20, x19, [sp, #80]
    be0c:	ldr	w8, [x0]
    be10:	str	x27, [sp, #16]
    be14:	mov	x29, sp
    be18:	cbz	w8, bee0 <ZSTD_compressContinue@@Base+0x104>
    be1c:	mov	w25, w6
    be20:	mov	w26, w5
    be24:	mov	x20, x4
    be28:	mov	x22, x3
    be2c:	mov	x23, x2
    be30:	mov	x19, x0
    be34:	mov	x24, x1
    be38:	mov	x21, xzr
    be3c:	cbz	w5, be80 <ZSTD_compressContinue@@Base+0xa4>
    be40:	cmp	w8, #0x1
    be44:	b.ne	be80 <ZSTD_compressContinue@@Base+0xa4>  // b.any
    be48:	ldr	x8, [x19, #384]
    be4c:	ldr	w4, [x19, #304]
    be50:	add	x2, x19, #0xa0
    be54:	mov	x0, x24
    be58:	sub	x3, x8, #0x1
    be5c:	mov	x1, x23
    be60:	bl	eac4 <ZSTD_endStream@@Base+0xb70>
    be64:	mov	x21, x0
    be68:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    be6c:	cbnz	w0, bf34 <ZSTD_compressContinue@@Base+0x158>
    be70:	sub	x23, x23, x21
    be74:	add	x24, x24, x21
    be78:	mov	w8, #0x2                   	// #2
    be7c:	str	w8, [x19]
    be80:	cbz	x20, bf34 <ZSTD_compressContinue@@Base+0x158>
    be84:	add	x27, x19, #0x300
    be88:	mov	x0, x27
    be8c:	mov	x1, x22
    be90:	mov	x2, x20
    be94:	bl	ecbc <ZSTD_endStream@@Base+0xd68>
    be98:	cbnz	w0, bea4 <ZSTD_compressContinue@@Base+0xc8>
    be9c:	ldr	w8, [x19, #792]
    bea0:	str	w8, [x19, #804]
    bea4:	ldr	w8, [x19, #256]
    bea8:	cbz	w8, bebc <ZSTD_compressContinue@@Base+0xe0>
    beac:	add	x0, x19, #0x288
    beb0:	mov	x1, x22
    beb4:	mov	x2, x20
    beb8:	bl	ecbc <ZSTD_endStream@@Base+0xd68>
    bebc:	cbz	w26, bee8 <ZSTD_compressContinue@@Base+0x10c>
    bec0:	mov	x0, x19
    bec4:	mov	x1, x24
    bec8:	mov	x2, x23
    becc:	mov	x3, x22
    bed0:	mov	x4, x20
    bed4:	mov	w5, w25
    bed8:	bl	edfc <ZSTD_endStream@@Base+0xea8>
    bedc:	b	bf1c <ZSTD_compressContinue@@Base+0x140>
    bee0:	mov	x21, #0xffffffffffffffc4    	// #-60
    bee4:	b	bf34 <ZSTD_compressContinue@@Base+0x158>
    bee8:	add	x2, x19, #0xa0
    beec:	add	x1, x19, #0x138
    bef0:	add	x4, x22, x20
    bef4:	mov	x0, x27
    bef8:	mov	x3, x22
    befc:	bl	ed44 <ZSTD_endStream@@Base+0xdf0>
    bf00:	mov	x0, x19
    bf04:	mov	x1, x24
    bf08:	mov	x2, x23
    bf0c:	mov	x3, x22
    bf10:	mov	x4, x20
    bf14:	mov	w5, wzr
    bf18:	bl	f00c <ZSTD_endStream@@Base+0x10b8>
    bf1c:	mov	x22, x0
    bf20:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    bf24:	cmp	w0, #0x0
    bf28:	csel	x8, x21, x22, eq  // eq = none
    bf2c:	cbz	w0, bf54 <ZSTD_compressContinue@@Base+0x178>
    bf30:	mov	x21, x8
    bf34:	mov	x0, x21
    bf38:	ldp	x20, x19, [sp, #80]
    bf3c:	ldp	x22, x21, [sp, #64]
    bf40:	ldp	x24, x23, [sp, #48]
    bf44:	ldp	x26, x25, [sp, #32]
    bf48:	ldr	x27, [sp, #16]
    bf4c:	ldp	x29, x30, [sp], #96
    bf50:	ret
    bf54:	ldp	x8, x9, [x19, #392]
    bf58:	ldr	x11, [x19, #384]
    bf5c:	add	x10, x22, x21
    bf60:	add	x8, x8, x20
    bf64:	add	x9, x9, x10
    bf68:	stp	x8, x9, [x19, #392]
    bf6c:	add	x8, x8, #0x1
    bf70:	cmp	x8, x11
    bf74:	ccmp	x11, #0x0, #0x4, hi  // hi = pmore
    bf78:	mov	x8, #0xffffffffffffffb8    	// #-72
    bf7c:	csel	x0, x8, x10, ne  // ne = any
    bf80:	b	bf38 <ZSTD_compressContinue@@Base+0x15c>

000000000000bf84 <ZSTD_getBlockSize@@Base>:
    bf84:	ldr	w8, [x0, #164]
    bf88:	mov	w9, #0x1                   	// #1
    bf8c:	lsl	w8, w9, w8
    bf90:	cmp	w8, #0x20, lsl #12
    bf94:	mov	w9, #0x20000               	// #131072
    bf98:	csel	w0, w8, w9, cc  // cc = lo, ul, last
    bf9c:	ret

000000000000bfa0 <ZSTD_compressBlock@@Base>:
    bfa0:	stp	x29, x30, [sp, #-64]!
    bfa4:	str	x23, [sp, #16]
    bfa8:	stp	x22, x21, [sp, #32]
    bfac:	stp	x20, x19, [sp, #48]
    bfb0:	mov	x29, sp
    bfb4:	mov	x19, x4
    bfb8:	mov	x20, x3
    bfbc:	mov	x21, x2
    bfc0:	mov	x22, x1
    bfc4:	mov	x23, x0
    bfc8:	bl	4870 <ZSTD_getBlockSize@plt>
    bfcc:	cmp	x0, x19
    bfd0:	b.cs	bfdc <ZSTD_compressBlock@@Base+0x3c>  // b.hs, b.nlast
    bfd4:	mov	x0, #0xffffffffffffffb8    	// #-72
    bfd8:	b	bffc <ZSTD_compressBlock@@Base+0x5c>
    bfdc:	mov	x0, x23
    bfe0:	mov	x1, x22
    bfe4:	mov	x2, x21
    bfe8:	mov	x3, x20
    bfec:	mov	x4, x19
    bff0:	mov	w5, wzr
    bff4:	mov	w6, wzr
    bff8:	bl	bdf8 <ZSTD_compressContinue@@Base+0x1c>
    bffc:	ldp	x20, x19, [sp, #48]
    c000:	ldp	x22, x21, [sp, #32]
    c004:	ldr	x23, [sp, #16]
    c008:	ldp	x29, x30, [sp], #64
    c00c:	ret
    c010:	sub	sp, sp, #0x90
    c014:	stp	x29, x30, [sp, #48]
    c018:	stp	x26, x25, [sp, #80]
    c01c:	stp	x24, x23, [sp, #96]
    c020:	stp	x22, x21, [sp, #112]
    c024:	stp	x20, x19, [sp, #128]
    c028:	ldr	q0, [x6, #16]
    c02c:	ldur	q1, [x6, #4]
    c030:	mov	x26, x0
    c034:	add	x0, sp, #0x10
    c038:	str	x27, [sp, #64]
    c03c:	add	x29, sp, #0x30
    c040:	mov	x19, x7
    c044:	mov	x20, x6
    c048:	mov	x21, x5
    c04c:	mov	w22, w4
    c050:	mov	w23, w3
    c054:	mov	x24, x2
    c058:	mov	x25, x1
    c05c:	stur	q0, [sp, #28]
    c060:	str	q1, [sp, #16]
    c064:	bl	48c0 <ZSTD_checkCParams@plt>
    c068:	mov	x27, x0
    c06c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c070:	cbnz	w0, c0a0 <ZSTD_compressBlock@@Base+0x100>
    c074:	mov	x0, x26
    c078:	mov	x1, x25
    c07c:	mov	x2, x24
    c080:	mov	w3, w23
    c084:	mov	w4, w22
    c088:	mov	x5, x21
    c08c:	mov	x6, x20
    c090:	mov	x7, x19
    c094:	str	wzr, [sp]
    c098:	bl	c0c4 <ZSTD_compressBlock@@Base+0x124>
    c09c:	mov	x27, x0
    c0a0:	mov	x0, x27
    c0a4:	ldp	x20, x19, [sp, #128]
    c0a8:	ldp	x22, x21, [sp, #112]
    c0ac:	ldp	x24, x23, [sp, #96]
    c0b0:	ldp	x26, x25, [sp, #80]
    c0b4:	ldr	x27, [sp, #64]
    c0b8:	ldp	x29, x30, [sp, #48]
    c0bc:	add	sp, sp, #0x90
    c0c0:	ret
    c0c4:	sub	sp, sp, #0xf0
    c0c8:	stp	x29, x30, [sp, #160]
    c0cc:	add	x29, sp, #0xa0
    c0d0:	stp	x20, x19, [sp, #224]
    c0d4:	mov	w20, w4
    c0d8:	ldr	w4, [x29, #80]
    c0dc:	stp	x26, x25, [sp, #176]
    c0e0:	stp	x24, x23, [sp, #192]
    c0e4:	stp	x22, x21, [sp, #208]
    c0e8:	mov	x21, x6
    c0ec:	mov	x24, x5
    c0f0:	mov	w22, w3
    c0f4:	mov	x23, x2
    c0f8:	mov	x25, x1
    c0fc:	mov	x19, x0
    c100:	cbz	x5, c140 <ZSTD_compressBlock@@Base+0x1a0>
    c104:	ldr	x8, [x24, #8]
    c108:	cbz	x8, c140 <ZSTD_compressBlock@@Base+0x1a0>
    c10c:	cmp	x7, #0x20, lsl #12
    c110:	b.cc	c134 <ZSTD_compressBlock@@Base+0x194>  // b.lo, b.ul, b.last
    c114:	cmn	x7, #0x1
    c118:	b.eq	c134 <ZSTD_compressBlock@@Base+0x194>  // b.none
    c11c:	add	x8, x8, x8, lsl #1
    c120:	lsl	x8, x8, #1
    c124:	cmp	x8, x7
    c128:	b.hi	c134 <ZSTD_compressBlock@@Base+0x194>  // b.pmore
    c12c:	ldr	w8, [x24, #4924]
    c130:	cbnz	w8, c140 <ZSTD_compressBlock@@Base+0x1a0>
    c134:	ldr	w8, [x21, #68]
    c138:	cmp	w8, #0x3
    c13c:	b.ne	c1a8 <ZSTD_compressBlock@@Base+0x208>  // b.any
    c140:	ldp	q0, q3, [x21]
    c144:	add	x1, sp, #0x10
    c148:	mov	x0, x19
    c14c:	mov	x2, x7
    c150:	stp	q0, q3, [sp, #16]
    c154:	ldp	q1, q0, [x21, #48]
    c158:	ldr	q2, [x21, #32]
    c15c:	mov	w3, wzr
    c160:	stp	q1, q0, [sp, #64]
    c164:	str	q2, [sp, #48]
    c168:	ldp	q1, q0, [x21, #112]
    c16c:	ldp	q3, q2, [x21, #80]
    c170:	stp	q1, q0, [sp, #128]
    c174:	stp	q3, q2, [sp, #96]
    c178:	bl	e018 <ZSTD_endStream@@Base+0xc4>
    c17c:	mov	x26, x0
    c180:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c184:	cbnz	w0, c1c0 <ZSTD_compressBlock@@Base+0x220>
    c188:	ldr	x0, [x19, #752]
    c18c:	add	x1, x19, #0x300
    c190:	add	x2, x19, #0x138
    c194:	cbz	x24, c1c8 <ZSTD_compressBlock@@Base+0x228>
    c198:	ldr	x8, [x19, #984]
    c19c:	ldp	x4, x5, [x24]
    c1a0:	mov	x3, x21
    c1a4:	b	c1d8 <ZSTD_compressBlock@@Base+0x238>
    c1a8:	mov	x0, x19
    c1ac:	mov	x1, x24
    c1b0:	mov	x2, x21
    c1b4:	mov	x3, x7
    c1b8:	bl	fe74 <ZSTD_endStream@@Base+0x1f20>
    c1bc:	mov	x26, x0
    c1c0:	mov	x0, x26
    c1c4:	b	c210 <ZSTD_compressBlock@@Base+0x270>
    c1c8:	ldr	x8, [x19, #984]
    c1cc:	mov	x3, x21
    c1d0:	mov	x4, x25
    c1d4:	mov	x5, x23
    c1d8:	str	x8, [sp]
    c1dc:	mov	w6, w22
    c1e0:	mov	w7, w20
    c1e4:	bl	ff50 <ZSTD_endStream@@Base+0x1ffc>
    c1e8:	mov	x20, x0
    c1ec:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c1f0:	cmp	w0, #0x0
    c1f4:	cset	w9, ne  // ne = any
    c1f8:	csel	x8, x26, x20, eq  // eq = none
    c1fc:	cbnz	w0, c208 <ZSTD_compressBlock@@Base+0x268>
    c200:	mov	w9, wzr
    c204:	str	w20, [x19, #304]
    c208:	cmp	w9, #0x0
    c20c:	csel	x0, xzr, x8, eq  // eq = none
    c210:	ldp	x20, x19, [sp, #224]
    c214:	ldp	x22, x21, [sp, #208]
    c218:	ldp	x24, x23, [sp, #192]
    c21c:	ldp	x26, x25, [sp, #176]
    c220:	ldp	x29, x30, [sp, #160]
    c224:	add	sp, sp, #0xf0
    c228:	ret

000000000000c22c <ZSTD_compressBegin_advanced@@Base>:
    c22c:	sub	sp, sp, #0xf0
    c230:	stp	x29, x30, [sp, #192]
    c234:	stp	x22, x21, [sp, #208]
    c238:	stp	x20, x19, [sp, #224]
    c23c:	ldr	x8, [x3, #32]
    c240:	ldp	q1, q0, [x3]
    c244:	mov	x21, x1
    c248:	mov	x22, x0
    c24c:	add	x0, x0, #0x10
    c250:	str	x8, [sp, #32]
    c254:	add	x8, sp, #0x30
    c258:	mov	x1, sp
    c25c:	add	x29, sp, #0xc0
    c260:	mov	x19, x4
    c264:	mov	x20, x2
    c268:	stp	q1, q0, [sp]
    c26c:	bl	c2a8 <ZSTD_compressBegin_advanced@@Base+0x7c>
    c270:	add	x6, sp, #0x30
    c274:	mov	x0, x22
    c278:	mov	x1, x21
    c27c:	mov	x2, x20
    c280:	mov	w3, wzr
    c284:	mov	w4, wzr
    c288:	mov	x5, xzr
    c28c:	mov	x7, x19
    c290:	bl	c010 <ZSTD_compressBlock@@Base+0x70>
    c294:	ldp	x20, x19, [sp, #224]
    c298:	ldp	x22, x21, [sp, #208]
    c29c:	ldp	x29, x30, [sp, #192]
    c2a0:	add	sp, sp, #0xf0
    c2a4:	ret
    c2a8:	ldp	q0, q3, [x0]
    c2ac:	stp	q0, q3, [x8]
    c2b0:	ldp	q1, q0, [x0, #48]
    c2b4:	ldr	q2, [x0, #32]
    c2b8:	stp	q1, q0, [x8, #48]
    c2bc:	str	q2, [x8, #32]
    c2c0:	ldp	q1, q0, [x0, #112]
    c2c4:	ldp	q3, q2, [x0, #80]
    c2c8:	stp	q1, q0, [x8, #112]
    c2cc:	stp	q3, q2, [x8, #80]
    c2d0:	ldur	q0, [x1, #12]
    c2d4:	ldr	q1, [x1]
    c2d8:	str	q0, [x8, #16]
    c2dc:	stur	q1, [x8, #4]
    c2e0:	ldur	x9, [x1, #28]
    c2e4:	ldr	w10, [x1, #36]
    c2e8:	str	x9, [x8, #32]
    c2ec:	mov	w9, #0x3                   	// #3
    c2f0:	stp	w10, w9, [x8, #40]
    c2f4:	ret

000000000000c2f8 <ZSTD_compressBegin_usingDict@@Base>:
    c2f8:	sub	sp, sp, #0x130
    c2fc:	stp	x29, x30, [sp, #240]
    c300:	add	x29, sp, #0xf0
    c304:	stp	x22, x21, [sp, #272]
    c308:	stp	x20, x19, [sp, #288]
    c30c:	mov	x20, x1
    c310:	mov	x21, x0
    c314:	sub	x8, x29, #0x28
    c318:	mov	x1, #0xffffffffffffffff    	// #-1
    c31c:	mov	w0, w3
    c320:	str	x28, [sp, #256]
    c324:	mov	x19, x2
    c328:	sub	x22, x29, #0x28
    c32c:	bl	4a20 <ZSTD_getParams@plt>
    c330:	ldur	x8, [x29, #-8]
    c334:	ldp	q0, q1, [x22]
    c338:	add	x0, x21, #0x10
    c33c:	add	x1, sp, #0x10
    c340:	str	x8, [sp, #48]
    c344:	add	x8, sp, #0x38
    c348:	stp	q0, q1, [sp, #16]
    c34c:	bl	c2a8 <ZSTD_compressBegin_advanced@@Base+0x7c>
    c350:	add	x6, sp, #0x38
    c354:	mov	x7, #0xffffffffffffffff    	// #-1
    c358:	mov	x0, x21
    c35c:	mov	x1, x20
    c360:	mov	x2, x19
    c364:	mov	w3, wzr
    c368:	mov	w4, wzr
    c36c:	mov	x5, xzr
    c370:	str	wzr, [sp]
    c374:	bl	c0c4 <ZSTD_compressBlock@@Base+0x124>
    c378:	ldp	x20, x19, [sp, #288]
    c37c:	ldp	x22, x21, [sp, #272]
    c380:	ldr	x28, [sp, #256]
    c384:	ldp	x29, x30, [sp, #240]
    c388:	add	sp, sp, #0x130
    c38c:	ret

000000000000c390 <ZSTD_getParams@@Base>:
    c390:	stp	x29, x30, [sp, #-32]!
    c394:	str	x19, [sp, #16]
    c398:	mov	x29, sp
    c39c:	mov	x19, x8
    c3a0:	bl	45c0 <ZSTD_getCParams@plt>
    c3a4:	mov	w8, #0x1                   	// #1
    c3a8:	stur	xzr, [x19, #28]
    c3ac:	str	wzr, [x19, #36]
    c3b0:	str	w8, [x19, #28]
    c3b4:	ldr	x19, [sp, #16]
    c3b8:	ldp	x29, x30, [sp], #32
    c3bc:	ret

000000000000c3c0 <ZSTD_compressBegin@@Base>:
    c3c0:	stp	x29, x30, [sp, #-16]!
    c3c4:	mov	w3, w1
    c3c8:	mov	x1, xzr
    c3cc:	mov	x2, xzr
    c3d0:	mov	x29, sp
    c3d4:	bl	4780 <ZSTD_compressBegin_usingDict@plt>
    c3d8:	ldp	x29, x30, [sp], #16
    c3dc:	ret

000000000000c3e0 <ZSTD_compressEnd@@Base>:
    c3e0:	stp	x29, x30, [sp, #-48]!
    c3e4:	mov	w5, #0x1                   	// #1
    c3e8:	mov	w6, #0x1                   	// #1
    c3ec:	stp	x22, x21, [sp, #16]
    c3f0:	stp	x20, x19, [sp, #32]
    c3f4:	mov	x29, sp
    c3f8:	mov	x21, x2
    c3fc:	mov	x22, x1
    c400:	mov	x20, x0
    c404:	bl	bdf8 <ZSTD_compressContinue@@Base+0x1c>
    c408:	mov	x19, x0
    c40c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c410:	cbnz	w0, c464 <ZSTD_compressEnd@@Base+0x84>
    c414:	add	x1, x22, x19
    c418:	sub	x2, x21, x19
    c41c:	mov	x0, x20
    c420:	bl	c478 <ZSTD_compressEnd@@Base+0x98>
    c424:	mov	x21, x0
    c428:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c42c:	cmp	w0, #0x0
    c430:	csel	x8, x19, x21, eq  // eq = none
    c434:	cbz	w0, c440 <ZSTD_compressEnd@@Base+0x60>
    c438:	mov	x19, x8
    c43c:	b	c464 <ZSTD_compressEnd@@Base+0x84>
    c440:	ldr	x8, [x20, #384]
    c444:	cbz	x8, c458 <ZSTD_compressEnd@@Base+0x78>
    c448:	ldr	x9, [x20, #392]
    c44c:	add	x9, x9, #0x1
    c450:	cmp	x8, x9
    c454:	b.ne	c460 <ZSTD_compressEnd@@Base+0x80>  // b.any
    c458:	add	x19, x21, x19
    c45c:	b	c464 <ZSTD_compressEnd@@Base+0x84>
    c460:	mov	x19, #0xffffffffffffffb8    	// #-72
    c464:	mov	x0, x19
    c468:	ldp	x20, x19, [sp, #32]
    c46c:	ldp	x22, x21, [sp, #16]
    c470:	ldp	x29, x30, [sp], #48
    c474:	ret
    c478:	stp	x29, x30, [sp, #-64]!
    c47c:	stp	x24, x23, [sp, #16]
    c480:	stp	x22, x21, [sp, #32]
    c484:	stp	x20, x19, [sp, #48]
    c488:	ldr	w8, [x0]
    c48c:	mov	x29, sp
    c490:	cbz	w8, c4e0 <ZSTD_compressEnd@@Base+0x100>
    c494:	mov	x23, x2
    c498:	mov	x19, x0
    c49c:	mov	x20, x1
    c4a0:	cmp	w8, #0x1
    c4a4:	b.ne	c4e8 <ZSTD_compressEnd@@Base+0x108>  // b.any
    c4a8:	add	x2, x19, #0xa0
    c4ac:	mov	x0, x20
    c4b0:	mov	x1, x23
    c4b4:	mov	x3, xzr
    c4b8:	mov	w4, wzr
    c4bc:	bl	eac4 <ZSTD_endStream@@Base+0xb70>
    c4c0:	mov	x21, x0
    c4c4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c4c8:	cbnz	w0, c558 <ZSTD_compressEnd@@Base+0x178>
    c4cc:	sub	x23, x23, x21
    c4d0:	add	x22, x20, x21
    c4d4:	mov	w8, #0x2                   	// #2
    c4d8:	str	w8, [x19]
    c4dc:	b	c4ec <ZSTD_compressEnd@@Base+0x10c>
    c4e0:	mov	x21, #0xffffffffffffffc4    	// #-60
    c4e4:	b	c558 <ZSTD_compressEnd@@Base+0x178>
    c4e8:	mov	x22, x20
    c4ec:	ldr	w8, [x19]
    c4f0:	cmp	w8, #0x3
    c4f4:	b.eq	c52c <ZSTD_compressEnd@@Base+0x14c>  // b.none
    c4f8:	cmp	x23, #0x4
    c4fc:	b.cs	c510 <ZSTD_compressEnd@@Base+0x130>  // b.hs, b.nlast
    c500:	mov	w24, wzr
    c504:	mov	x21, #0xffffffffffffffba    	// #-70
    c508:	cbnz	w24, c52c <ZSTD_compressEnd@@Base+0x14c>
    c50c:	b	c558 <ZSTD_compressEnd@@Base+0x178>
    c510:	mov	w1, #0x1                   	// #1
    c514:	mov	x0, x22
    c518:	mov	w24, #0x1                   	// #1
    c51c:	bl	f154 <ZSTD_endStream@@Base+0x1200>
    c520:	add	x22, x22, #0x3
    c524:	sub	x23, x23, #0x3
    c528:	cbz	w24, c558 <ZSTD_compressEnd@@Base+0x178>
    c52c:	ldr	w8, [x19, #196]
    c530:	cbz	w8, c550 <ZSTD_compressEnd@@Base+0x170>
    c534:	add	x0, x19, #0x198
    c538:	bl	6b34 <ZSTD_initDStream_usingDDict@plt+0x2024>
    c53c:	cmp	x23, #0x4
    c540:	b.cs	c570 <ZSTD_compressEnd@@Base+0x190>  // b.hs, b.nlast
    c544:	mov	w8, wzr
    c548:	mov	x21, #0xffffffffffffffba    	// #-70
    c54c:	cbz	w8, c558 <ZSTD_compressEnd@@Base+0x178>
    c550:	sub	x21, x22, x20
    c554:	str	wzr, [x19]
    c558:	mov	x0, x21
    c55c:	ldp	x20, x19, [sp, #48]
    c560:	ldp	x22, x21, [sp, #32]
    c564:	ldp	x24, x23, [sp, #16]
    c568:	ldp	x29, x30, [sp], #64
    c56c:	ret
    c570:	mov	x1, x0
    c574:	mov	x0, x22
    c578:	bl	f154 <ZSTD_endStream@@Base+0x1200>
    c57c:	add	x22, x22, #0x4
    c580:	mov	w8, #0x1                   	// #1
    c584:	cbnz	w8, c550 <ZSTD_compressEnd@@Base+0x170>
    c588:	b	c558 <ZSTD_compressEnd@@Base+0x178>

000000000000c58c <ZSTD_compress_advanced@@Base>:
    c58c:	sub	sp, sp, #0x90
    c590:	stp	x29, x30, [sp, #48]
    c594:	stp	x26, x25, [sp, #80]
    c598:	stp	x24, x23, [sp, #96]
    c59c:	stp	x22, x21, [sp, #112]
    c5a0:	stp	x20, x19, [sp, #128]
    c5a4:	ldur	q0, [x7, #12]
    c5a8:	ldr	q1, [x7]
    c5ac:	mov	x25, x0
    c5b0:	mov	x0, sp
    c5b4:	str	x27, [sp, #64]
    c5b8:	add	x29, sp, #0x30
    c5bc:	mov	x26, x7
    c5c0:	mov	x19, x6
    c5c4:	mov	x20, x5
    c5c8:	mov	x21, x4
    c5cc:	mov	x22, x3
    c5d0:	mov	x23, x2
    c5d4:	mov	x24, x1
    c5d8:	stur	q0, [sp, #12]
    c5dc:	str	q1, [sp]
    c5e0:	bl	48c0 <ZSTD_checkCParams@plt>
    c5e4:	mov	x27, x0
    c5e8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c5ec:	cbnz	w0, c628 <ZSTD_compress_advanced@@Base+0x9c>
    c5f0:	ldr	x8, [x26, #32]
    c5f4:	ldp	q1, q0, [x26]
    c5f8:	mov	x7, sp
    c5fc:	mov	x0, x25
    c600:	mov	x1, x24
    c604:	mov	x2, x23
    c608:	mov	x3, x22
    c60c:	mov	x4, x21
    c610:	mov	x5, x20
    c614:	mov	x6, x19
    c618:	str	x8, [sp, #32]
    c61c:	stp	q1, q0, [sp]
    c620:	bl	c64c <ZSTD_compress_advanced@@Base+0xc0>
    c624:	mov	x27, x0
    c628:	mov	x0, x27
    c62c:	ldp	x20, x19, [sp, #128]
    c630:	ldp	x22, x21, [sp, #112]
    c634:	ldp	x24, x23, [sp, #96]
    c638:	ldp	x26, x25, [sp, #80]
    c63c:	ldr	x27, [sp, #64]
    c640:	ldp	x29, x30, [sp, #48]
    c644:	add	sp, sp, #0x90
    c648:	ret
    c64c:	sub	sp, sp, #0x110
    c650:	stp	x29, x30, [sp, #192]
    c654:	stp	x28, x25, [sp, #208]
    c658:	stp	x24, x23, [sp, #224]
    c65c:	stp	x22, x21, [sp, #240]
    c660:	stp	x20, x19, [sp, #256]
    c664:	ldr	x8, [x7, #32]
    c668:	ldp	q1, q0, [x7]
    c66c:	mov	x24, x1
    c670:	mov	x25, x0
    c674:	add	x0, x0, #0x10
    c678:	str	x8, [sp, #32]
    c67c:	add	x8, sp, #0x30
    c680:	mov	x1, sp
    c684:	add	x29, sp, #0xc0
    c688:	mov	x19, x6
    c68c:	mov	x20, x5
    c690:	mov	x21, x4
    c694:	mov	x22, x3
    c698:	mov	x23, x2
    c69c:	stp	q1, q0, [sp]
    c6a0:	bl	c2a8 <ZSTD_compressBegin_advanced@@Base+0x7c>
    c6a4:	add	x7, sp, #0x30
    c6a8:	mov	x0, x25
    c6ac:	mov	x1, x24
    c6b0:	mov	x2, x23
    c6b4:	mov	x3, x22
    c6b8:	mov	x4, x21
    c6bc:	mov	x5, x20
    c6c0:	mov	x6, x19
    c6c4:	bl	c6e4 <ZSTD_compress_advanced@@Base+0x158>
    c6c8:	ldp	x20, x19, [sp, #256]
    c6cc:	ldp	x22, x21, [sp, #240]
    c6d0:	ldp	x24, x23, [sp, #224]
    c6d4:	ldp	x28, x25, [sp, #208]
    c6d8:	ldp	x29, x30, [sp, #192]
    c6dc:	add	sp, sp, #0x110
    c6e0:	ret
    c6e4:	sub	sp, sp, #0x50
    c6e8:	stp	x20, x19, [sp, #64]
    c6ec:	mov	x19, x4
    c6f0:	stp	x22, x21, [sp, #48]
    c6f4:	mov	x20, x3
    c6f8:	mov	x21, x2
    c6fc:	mov	x22, x1
    c700:	mov	x1, x5
    c704:	mov	x2, x6
    c708:	mov	w3, wzr
    c70c:	mov	w4, wzr
    c710:	mov	x5, xzr
    c714:	mov	x6, x7
    c718:	mov	x7, x19
    c71c:	stp	x29, x30, [sp, #16]
    c720:	stp	x24, x23, [sp, #32]
    c724:	add	x29, sp, #0x10
    c728:	mov	x23, x0
    c72c:	str	wzr, [sp]
    c730:	bl	c0c4 <ZSTD_compressBlock@@Base+0x124>
    c734:	mov	x24, x0
    c738:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    c73c:	cbnz	w0, c75c <ZSTD_compress_advanced@@Base+0x1d0>
    c740:	mov	x0, x23
    c744:	mov	x1, x22
    c748:	mov	x2, x21
    c74c:	mov	x3, x20
    c750:	mov	x4, x19
    c754:	bl	44e0 <ZSTD_compressEnd@plt>
    c758:	mov	x24, x0
    c75c:	mov	x0, x24
    c760:	ldp	x20, x19, [sp, #64]
    c764:	ldp	x22, x21, [sp, #48]
    c768:	ldp	x24, x23, [sp, #32]
    c76c:	ldp	x29, x30, [sp, #16]
    c770:	add	sp, sp, #0x50
    c774:	ret

000000000000c778 <ZSTD_compress_usingDict@@Base>:
    c778:	sub	sp, sp, #0x140
    c77c:	cmp	x4, #0x0
    c780:	stp	x29, x30, [sp, #224]
    c784:	stp	x24, x23, [sp, #272]
    c788:	add	x29, sp, #0xe0
    c78c:	mov	x24, x1
    c790:	cinc	x1, x4, eq  // eq = none
    c794:	cmp	x5, #0x0
    c798:	stp	x26, x25, [sp, #256]
    c79c:	mov	x23, x2
    c7a0:	mov	x25, x0
    c7a4:	csel	x2, xzr, x6, eq  // eq = none
    c7a8:	sub	x8, x29, #0x28
    c7ac:	mov	w0, w7
    c7b0:	str	x28, [sp, #240]
    c7b4:	stp	x22, x21, [sp, #288]
    c7b8:	stp	x20, x19, [sp, #304]
    c7bc:	mov	x19, x6
    c7c0:	mov	x20, x5
    c7c4:	mov	x21, x4
    c7c8:	mov	x22, x3
    c7cc:	sub	x26, x29, #0x28
    c7d0:	bl	4a20 <ZSTD_getParams@plt>
    c7d4:	ldur	x8, [x29, #-8]
    c7d8:	ldp	q0, q1, [x26]
    c7dc:	add	x0, x25, #0x10
    c7e0:	mov	x1, sp
    c7e4:	str	x8, [sp, #32]
    c7e8:	add	x8, sp, #0x28
    c7ec:	stp	q0, q1, [sp]
    c7f0:	bl	c2a8 <ZSTD_compressBegin_advanced@@Base+0x7c>
    c7f4:	add	x7, sp, #0x28
    c7f8:	mov	x0, x25
    c7fc:	mov	x1, x24
    c800:	mov	x2, x23
    c804:	mov	x3, x22
    c808:	mov	x4, x21
    c80c:	mov	x5, x20
    c810:	mov	x6, x19
    c814:	bl	c6e4 <ZSTD_compress_advanced@@Base+0x158>
    c818:	ldp	x20, x19, [sp, #304]
    c81c:	ldp	x22, x21, [sp, #288]
    c820:	ldp	x24, x23, [sp, #272]
    c824:	ldp	x26, x25, [sp, #256]
    c828:	ldr	x28, [sp, #240]
    c82c:	ldp	x29, x30, [sp, #224]
    c830:	add	sp, sp, #0x140
    c834:	ret

000000000000c838 <ZSTD_compressCCtx@@Base>:
    c838:	stp	x29, x30, [sp, #-16]!
    c83c:	mov	w7, w5
    c840:	mov	x5, xzr
    c844:	mov	x6, xzr
    c848:	mov	x29, sp
    c84c:	bl	4830 <ZSTD_compress_usingDict@plt>
    c850:	ldp	x29, x30, [sp], #16
    c854:	ret

000000000000c858 <ZSTD_compress@@Base>:
    c858:	stp	x29, x30, [sp, #-64]!
    c85c:	stp	x28, x23, [sp, #16]
    c860:	stp	x22, x21, [sp, #32]
    c864:	stp	x20, x19, [sp, #48]
    c868:	mov	x29, sp
    c86c:	sub	sp, sp, #0x490
    c870:	mov	x22, x1
    c874:	mov	x23, x0
    c878:	add	x0, sp, #0x18
    c87c:	mov	x1, sp
    c880:	mov	w19, w4
    c884:	mov	x20, x3
    c888:	mov	x21, x2
    c88c:	stp	xzr, xzr, [sp]
    c890:	str	xzr, [sp, #16]
    c894:	bl	9ef0 <ZSTD_createCCtx_advanced@@Base+0x8c>
    c898:	add	x0, sp, #0x18
    c89c:	mov	x1, x23
    c8a0:	mov	x2, x22
    c8a4:	mov	x3, x21
    c8a8:	mov	x4, x20
    c8ac:	mov	w5, w19
    c8b0:	bl	4790 <ZSTD_compressCCtx@plt>
    c8b4:	mov	x19, x0
    c8b8:	add	x0, sp, #0x18
    c8bc:	bl	a19c <ZSTD_freeCCtx@@Base+0x9c>
    c8c0:	mov	x0, x19
    c8c4:	add	sp, sp, #0x490
    c8c8:	ldp	x20, x19, [sp, #48]
    c8cc:	ldp	x22, x21, [sp, #32]
    c8d0:	ldp	x28, x23, [sp, #16]
    c8d4:	ldp	x29, x30, [sp], #64
    c8d8:	ret

000000000000c8dc <ZSTD_estimateCDictSize_advanced@@Base>:
    c8dc:	stp	x29, x30, [sp, #-32]!
    c8e0:	stp	x20, x19, [sp, #16]
    c8e4:	mov	x19, x0
    c8e8:	mov	x0, x1
    c8ec:	mov	w1, wzr
    c8f0:	mov	x29, sp
    c8f4:	mov	w20, w2
    c8f8:	bl	b54c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x124>
    c8fc:	mov	w8, #0x2b40                	// #11072
    c900:	cmp	w20, #0x1
    c904:	add	x20, x0, x8
    c908:	b.ne	c914 <ZSTD_estimateCDictSize_advanced@@Base+0x38>  // b.any
    c90c:	mov	x0, xzr
    c910:	b	c924 <ZSTD_estimateCDictSize_advanced@@Base+0x48>
    c914:	mov	w1, #0x8                   	// #8
    c918:	mov	x0, x19
    c91c:	bl	c934 <ZSTD_estimateCDictSize_advanced@@Base+0x58>
    c920:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    c924:	add	x0, x20, x0
    c928:	ldp	x20, x19, [sp, #16]
    c92c:	ldp	x29, x30, [sp], #32
    c930:	ret
    c934:	add	x8, x0, x1
    c938:	sub	x8, x8, #0x1
    c93c:	neg	x9, x1
    c940:	and	x0, x8, x9
    c944:	ret

000000000000c948 <ZSTD_estimateCDictSize@@Base>:
    c948:	sub	sp, sp, #0x60
    c94c:	str	x19, [sp, #80]
    c950:	mov	x19, x0
    c954:	add	x8, sp, #0x20
    c958:	mov	w0, w1
    c95c:	mov	x1, xzr
    c960:	mov	x2, x19
    c964:	stp	x29, x30, [sp, #64]
    c968:	add	x29, sp, #0x40
    c96c:	bl	45c0 <ZSTD_getCParams@plt>
    c970:	ldr	q0, [sp, #32]
    c974:	ldur	q1, [sp, #44]
    c978:	mov	x1, sp
    c97c:	mov	x0, x19
    c980:	mov	w2, wzr
    c984:	str	q0, [sp]
    c988:	stur	q1, [sp, #12]
    c98c:	bl	4440 <ZSTD_estimateCDictSize_advanced@plt>
    c990:	ldr	x19, [sp, #80]
    c994:	ldp	x29, x30, [sp, #64]
    c998:	add	sp, sp, #0x60
    c99c:	ret

000000000000c9a0 <ZSTD_sizeof_CDict@@Base>:
    c9a0:	cbz	x0, c9d8 <ZSTD_sizeof_CDict@@Base+0x38>
    c9a4:	stp	x29, x30, [sp, #-32]!
    c9a8:	str	x19, [sp, #16]
    c9ac:	mov	x8, x0
    c9b0:	ldr	x9, [x8, #24]!
    c9b4:	mov	x29, sp
    c9b8:	cmp	x9, x0
    c9bc:	mov	w9, #0x1340                	// #4928
    c9c0:	mov	x0, x8
    c9c4:	csel	x19, xzr, x9, eq  // eq = none
    c9c8:	bl	a244 <ZSTD_sizeof_CCtx@@Base+0x64>
    c9cc:	add	x0, x19, x0
    c9d0:	ldr	x19, [sp, #16]
    c9d4:	ldp	x29, x30, [sp], #32
    c9d8:	ret

000000000000c9dc <ZSTD_createCDict_advanced@@Base>:
    c9dc:	sub	sp, sp, #0xb0
    c9e0:	stp	x29, x30, [sp, #96]
    c9e4:	str	x25, [sp, #112]
    c9e8:	stp	x24, x23, [sp, #128]
    c9ec:	stp	x22, x21, [sp, #144]
    c9f0:	stp	x20, x19, [sp, #160]
    c9f4:	ldp	x8, x9, [x5]
    c9f8:	add	x29, sp, #0x60
    c9fc:	cmp	x8, #0x0
    ca00:	cset	w8, eq  // eq = none
    ca04:	cmp	x9, #0x0
    ca08:	cset	w9, eq  // eq = none
    ca0c:	eor	w8, w8, w9
    ca10:	tbnz	w8, #0, cb1c <ZSTD_createCDict_advanced@@Base+0x140>
    ca14:	mov	x21, x1
    ca18:	mov	x23, x0
    ca1c:	mov	x0, x4
    ca20:	mov	w1, wzr
    ca24:	mov	x24, x5
    ca28:	mov	x22, x4
    ca2c:	mov	w19, w3
    ca30:	mov	w20, w2
    ca34:	bl	b54c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x124>
    ca38:	mov	w8, #0x2b40                	// #11072
    ca3c:	cmp	w20, #0x1
    ca40:	add	x25, x0, x8
    ca44:	b.ne	ca50 <ZSTD_createCDict_advanced@@Base+0x74>  // b.any
    ca48:	mov	x0, xzr
    ca4c:	b	ca60 <ZSTD_createCDict_advanced@@Base+0x84>
    ca50:	mov	w1, #0x8                   	// #8
    ca54:	mov	x0, x21
    ca58:	bl	c934 <ZSTD_estimateCDictSize_advanced@@Base+0x58>
    ca5c:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    ca60:	ldr	x8, [x24, #16]
    ca64:	ldr	q0, [x24]
    ca68:	add	x25, x25, x0
    ca6c:	add	x1, sp, #0x20
    ca70:	mov	x0, x25
    ca74:	str	x8, [sp, #48]
    ca78:	str	q0, [sp, #32]
    ca7c:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
    ca80:	cbz	x0, cb04 <ZSTD_createCDict_advanced@@Base+0x128>
    ca84:	mov	x1, x0
    ca88:	add	x0, sp, #0x20
    ca8c:	mov	x2, x25
    ca90:	bl	a018 <ZSTD_initStaticCCtx@@Base+0xd8>
    ca94:	add	x0, sp, #0x20
    ca98:	mov	w1, #0x1340                	// #4928
    ca9c:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    caa0:	mov	x25, x0
    caa4:	add	x0, x0, #0x18
    caa8:	add	x1, sp, #0x20
    caac:	bl	a0b0 <ZSTD_initStaticCCtx@@Base+0x170>
    cab0:	ldr	x8, [x24, #16]
    cab4:	ldr	q0, [x24]
    cab8:	str	wzr, [x25, #4924]
    cabc:	mov	x5, sp
    cac0:	str	x8, [x25, #4912]
    cac4:	str	q0, [x25, #4896]
    cac8:	ldur	q0, [x22, #12]
    cacc:	ldr	q1, [x22]
    cad0:	mov	x0, x25
    cad4:	mov	x1, x23
    cad8:	mov	x2, x21
    cadc:	mov	w3, w20
    cae0:	mov	w4, w19
    cae4:	stur	q0, [sp, #12]
    cae8:	str	q1, [sp]
    caec:	bl	cb40 <ZSTD_createCDict_advanced@@Base+0x164>
    caf0:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    caf4:	cbz	w0, cb20 <ZSTD_createCDict_advanced@@Base+0x144>
    caf8:	mov	x0, x25
    cafc:	bl	4560 <ZSTD_freeCDict@plt>
    cb00:	b	cb1c <ZSTD_createCDict_advanced@@Base+0x140>
    cb04:	ldr	x8, [x24, #16]
    cb08:	ldr	q0, [x24]
    cb0c:	add	x1, sp, #0x20
    cb10:	str	x8, [sp, #48]
    cb14:	str	q0, [sp, #32]
    cb18:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
    cb1c:	mov	x25, xzr
    cb20:	mov	x0, x25
    cb24:	ldp	x20, x19, [sp, #160]
    cb28:	ldp	x22, x21, [sp, #144]
    cb2c:	ldp	x24, x23, [sp, #128]
    cb30:	ldr	x25, [sp, #112]
    cb34:	ldp	x29, x30, [sp, #96]
    cb38:	add	sp, sp, #0xb0
    cb3c:	ret
    cb40:	sub	sp, sp, #0xf0
    cb44:	stp	x29, x30, [sp, #160]
    cb48:	stp	x26, x25, [sp, #176]
    cb4c:	stp	x24, x23, [sp, #192]
    cb50:	stp	x22, x21, [sp, #208]
    cb54:	stp	x20, x19, [sp, #224]
    cb58:	ldur	q0, [x5, #12]
    cb5c:	ldr	q1, [x5]
    cb60:	mov	x21, x5
    cb64:	mov	w20, w4
    cb68:	mov	x23, x2
    cb6c:	mov	x22, x1
    cb70:	mov	x19, x0
    cb74:	add	x8, x0, #0x11c
    cb78:	add	x29, sp, #0xa0
    cb7c:	str	q0, [x8]
    cb80:	str	q1, [x0, #272]
    cb84:	cbz	x2, cbc8 <ZSTD_createCDict_advanced@@Base+0x1ec>
    cb88:	cbz	x22, cbc8 <ZSTD_createCDict_advanced@@Base+0x1ec>
    cb8c:	cmp	w3, #0x1
    cb90:	b.eq	cbc8 <ZSTD_createCDict_advanced@@Base+0x1ec>  // b.none
    cb94:	mov	w1, #0x8                   	// #8
    cb98:	mov	x0, x23
    cb9c:	add	x24, x19, #0x18
    cba0:	bl	c934 <ZSTD_estimateCDictSize_advanced@@Base+0x58>
    cba4:	mov	x1, x0
    cba8:	mov	x0, x24
    cbac:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    cbb0:	cbz	x0, ccb4 <ZSTD_createCDict_advanced@@Base+0x2d8>
    cbb4:	mov	x1, x22
    cbb8:	mov	x2, x23
    cbbc:	str	x0, [x19]
    cbc0:	bl	4420 <memcpy@plt>
    cbc4:	b	cbcc <ZSTD_createCDict_advanced@@Base+0x1f0>
    cbc8:	str	x22, [x19]
    cbcc:	str	x23, [x19, #8]
    cbd0:	add	x23, x19, #0x18
    cbd4:	mov	w1, #0x1800                	// #6144
    cbd8:	mov	x0, x23
    cbdc:	add	x22, x19, #0x58
    cbe0:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    cbe4:	add	x24, x19, #0x130
    cbe8:	str	x0, [x19, #16]
    cbec:	mov	x0, x24
    cbf0:	bl	e644 <ZSTD_endStream@@Base+0x6f0>
    cbf4:	mov	w4, #0x1                   	// #1
    cbf8:	mov	x0, x22
    cbfc:	mov	x1, x23
    cc00:	mov	x2, x21
    cc04:	mov	w3, wzr
    cc08:	mov	w5, wzr
    cc0c:	mov	w26, #0x1                   	// #1
    cc10:	bl	e6d0 <ZSTD_endStream@@Base+0x77c>
    cc14:	mov	x25, x0
    cc18:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    cc1c:	cmp	w0, #0x0
    cc20:	mov	x8, #0xffffffffffffffc0    	// #-64
    cc24:	csel	x25, x8, x25, eq  // eq = none
    cc28:	cbnz	w0, ccb8 <ZSTD_createCDict_advanced@@Base+0x2dc>
    cc2c:	movi	v0.2d, #0x0
    cc30:	mov	w8, #0x3                   	// #3
    cc34:	stp	q0, q0, [sp, #128]
    cc38:	stp	q0, q0, [sp, #96]
    cc3c:	stp	q0, q0, [sp, #64]
    cc40:	stp	q0, q0, [sp, #32]
    cc44:	str	q0, [sp, #16]
    cc48:	str	w8, [sp, #60]
    cc4c:	str	w26, [sp, #48]
    cc50:	ldur	q0, [x21, #12]
    cc54:	ldr	q1, [x21]
    cc58:	add	x3, sp, #0x10
    cc5c:	mov	w7, #0x1                   	// #1
    cc60:	str	q0, [sp, #32]
    cc64:	stur	q1, [sp, #20]
    cc68:	ldp	x4, x5, [x19]
    cc6c:	ldr	x8, [x19, #16]
    cc70:	mov	x0, x24
    cc74:	mov	x1, x22
    cc78:	mov	x2, x23
    cc7c:	mov	w6, w20
    cc80:	str	x8, [sp]
    cc84:	bl	ff50 <ZSTD_endStream@@Base+0x1ffc>
    cc88:	mov	x20, x0
    cc8c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    cc90:	cmp	w0, #0x0
    cc94:	cset	w9, ne  // ne = any
    cc98:	csel	x8, x25, x20, eq  // eq = none
    cc9c:	cbnz	w0, cca8 <ZSTD_createCDict_advanced@@Base+0x2cc>
    cca0:	mov	w9, wzr
    cca4:	str	w20, [x19, #4920]
    cca8:	cmp	w9, #0x0
    ccac:	csel	x0, xzr, x8, eq  // eq = none
    ccb0:	b	ccbc <ZSTD_createCDict_advanced@@Base+0x2e0>
    ccb4:	mov	x25, #0xffffffffffffffc0    	// #-64
    ccb8:	mov	x0, x25
    ccbc:	ldp	x20, x19, [sp, #224]
    ccc0:	ldp	x22, x21, [sp, #208]
    ccc4:	ldp	x24, x23, [sp, #192]
    ccc8:	ldp	x26, x25, [sp, #176]
    cccc:	ldp	x29, x30, [sp, #160]
    ccd0:	add	sp, sp, #0xf0
    ccd4:	ret

000000000000ccd8 <ZSTD_freeCDict@@Base>:
    ccd8:	cbz	x0, cd64 <ZSTD_freeCDict@@Base+0x8c>
    ccdc:	sub	sp, sp, #0x70
    cce0:	stp	x29, x30, [sp, #64]
    cce4:	stp	x20, x19, [sp, #96]
    cce8:	ldr	x8, [x0, #4912]
    ccec:	ldr	q0, [x0, #4896]
    ccf0:	mov	x19, x0
    ccf4:	add	x20, x0, #0x18
    ccf8:	mov	x0, x20
    ccfc:	mov	x1, x19
    cd00:	str	x21, [sp, #80]
    cd04:	add	x29, sp, #0x40
    cd08:	str	x8, [sp, #48]
    cd0c:	str	q0, [sp, #32]
    cd10:	bl	a174 <ZSTD_freeCCtx@@Base+0x74>
    cd14:	ldr	q0, [sp, #32]
    cd18:	ldr	x8, [sp, #48]
    cd1c:	mov	w21, w0
    cd20:	mov	x1, sp
    cd24:	mov	x0, x20
    cd28:	str	q0, [sp]
    cd2c:	str	x8, [sp, #16]
    cd30:	bl	ce6c <ZSTD_createCDict_byReference@@Base+0x70>
    cd34:	cbnz	w21, cd54 <ZSTD_freeCDict@@Base+0x7c>
    cd38:	ldr	q0, [sp, #32]
    cd3c:	ldr	x8, [sp, #48]
    cd40:	mov	x1, sp
    cd44:	mov	x0, x19
    cd48:	str	q0, [sp]
    cd4c:	str	x8, [sp, #16]
    cd50:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
    cd54:	ldp	x20, x19, [sp, #96]
    cd58:	ldr	x21, [sp, #80]
    cd5c:	ldp	x29, x30, [sp, #64]
    cd60:	add	sp, sp, #0x70
    cd64:	mov	x0, xzr
    cd68:	ret

000000000000cd6c <ZSTD_createCDict@@Base>:
    cd6c:	sub	sp, sp, #0x90
    cd70:	stp	x29, x30, [sp, #96]
    cd74:	stp	x20, x19, [sp, #128]
    cd78:	add	x29, sp, #0x60
    cd7c:	mov	x20, x1
    cd80:	str	x21, [sp, #112]
    cd84:	mov	w19, w2
    cd88:	mov	x21, x0
    cd8c:	sub	x8, x29, #0x20
    cd90:	mov	w0, w2
    cd94:	mov	x1, xzr
    cd98:	mov	x2, x20
    cd9c:	bl	45c0 <ZSTD_getCParams@plt>
    cda0:	ldur	q0, [x29, #-32]
    cda4:	ldur	q1, [x29, #-20]
    cda8:	add	x4, sp, #0x20
    cdac:	add	x5, sp, #0x8
    cdb0:	mov	x0, x21
    cdb4:	mov	x1, x20
    cdb8:	mov	w2, wzr
    cdbc:	mov	w3, wzr
    cdc0:	stp	xzr, xzr, [sp, #8]
    cdc4:	str	q0, [sp, #32]
    cdc8:	stur	q1, [sp, #44]
    cdcc:	str	xzr, [sp, #24]
    cdd0:	bl	47b0 <ZSTD_createCDict_advanced@plt>
    cdd4:	cbz	x0, cde8 <ZSTD_createCDict@@Base+0x7c>
    cdd8:	cmp	w19, #0x0
    cddc:	mov	w8, #0x3                   	// #3
    cde0:	csel	w8, w8, w19, eq  // eq = none
    cde4:	str	w8, [x0, #4924]
    cde8:	ldp	x20, x19, [sp, #128]
    cdec:	ldr	x21, [sp, #112]
    cdf0:	ldp	x29, x30, [sp, #96]
    cdf4:	add	sp, sp, #0x90
    cdf8:	ret

000000000000cdfc <ZSTD_createCDict_byReference@@Base>:
    cdfc:	sub	sp, sp, #0x80
    ce00:	stp	x29, x30, [sp, #96]
    ce04:	stp	x20, x19, [sp, #112]
    ce08:	add	x29, sp, #0x60
    ce0c:	mov	x19, x1
    ce10:	mov	x20, x0
    ce14:	sub	x8, x29, #0x20
    ce18:	mov	w0, w2
    ce1c:	mov	x1, xzr
    ce20:	mov	x2, x19
    ce24:	bl	45c0 <ZSTD_getCParams@plt>
    ce28:	ldur	q0, [x29, #-32]
    ce2c:	ldur	q1, [x29, #-20]
    ce30:	add	x4, sp, #0x20
    ce34:	add	x5, sp, #0x8
    ce38:	mov	w2, #0x1                   	// #1
    ce3c:	mov	x0, x20
    ce40:	mov	x1, x19
    ce44:	mov	w3, wzr
    ce48:	stp	xzr, xzr, [sp, #8]
    ce4c:	str	q0, [sp, #32]
    ce50:	stur	q1, [sp, #44]
    ce54:	str	xzr, [sp, #24]
    ce58:	bl	47b0 <ZSTD_createCDict_advanced@plt>
    ce5c:	ldp	x20, x19, [sp, #112]
    ce60:	ldp	x29, x30, [sp, #96]
    ce64:	add	sp, sp, #0x80
    ce68:	ret
    ce6c:	sub	sp, sp, #0x30
    ce70:	stp	x29, x30, [sp, #32]
    ce74:	movi	v0.2d, #0x0
    ce78:	ldr	x8, [x0]
    ce7c:	stp	q0, q0, [x0, #16]
    ce80:	str	q0, [x0, #48]
    ce84:	str	q0, [x0]
    ce88:	ldr	x9, [x1, #16]
    ce8c:	ldr	q0, [x1]
    ce90:	mov	x1, sp
    ce94:	mov	x0, x8
    ce98:	add	x29, sp, #0x20
    ce9c:	str	x9, [sp, #16]
    cea0:	str	q0, [sp]
    cea4:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
    cea8:	ldp	x29, x30, [sp, #32]
    ceac:	add	sp, sp, #0x30
    ceb0:	ret

000000000000ceb4 <ZSTD_initStaticCDict@@Base>:
    ceb4:	sub	sp, sp, #0xa0
    ceb8:	stp	x26, x25, [sp, #96]
    cebc:	stp	x24, x23, [sp, #112]
    cec0:	mov	x24, x1
    cec4:	mov	x26, x0
    cec8:	mov	x0, x6
    cecc:	mov	w1, wzr
    ced0:	stp	x29, x30, [sp, #64]
    ced4:	str	x27, [sp, #80]
    ced8:	stp	x22, x21, [sp, #128]
    cedc:	stp	x20, x19, [sp, #144]
    cee0:	add	x29, sp, #0x40
    cee4:	mov	x23, x6
    cee8:	mov	w19, w5
    ceec:	mov	w20, w4
    cef0:	mov	x21, x3
    cef4:	mov	x22, x2
    cef8:	bl	b54c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x124>
    cefc:	cmp	w20, #0x1
    cf00:	mov	x25, x0
    cf04:	b.ne	cf18 <ZSTD_initStaticCDict@@Base+0x64>  // b.any
    cf08:	mov	w27, #0x2b40                	// #11072
    cf0c:	tst	x26, #0x7
    cf10:	b.ne	cf74 <ZSTD_initStaticCDict@@Base+0xc0>  // b.any
    cf14:	b	cf38 <ZSTD_initStaticCDict@@Base+0x84>
    cf18:	mov	w1, #0x8                   	// #8
    cf1c:	mov	x0, x21
    cf20:	bl	c934 <ZSTD_estimateCDictSize_advanced@@Base+0x58>
    cf24:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    cf28:	mov	w8, #0x2b40                	// #11072
    cf2c:	add	x27, x0, x8
    cf30:	tst	x26, #0x7
    cf34:	b.ne	cf74 <ZSTD_initStaticCDict@@Base+0xc0>  // b.any
    cf38:	mov	x0, sp
    cf3c:	mov	x1, x26
    cf40:	mov	x2, x24
    cf44:	bl	a018 <ZSTD_initStaticCCtx@@Base+0xd8>
    cf48:	mov	x0, sp
    cf4c:	mov	w1, #0x1340                	// #4928
    cf50:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    cf54:	cbz	x0, cf78 <ZSTD_initStaticCDict@@Base+0xc4>
    cf58:	mov	x26, x0
    cf5c:	add	x0, x0, #0x18
    cf60:	mov	x1, sp
    cf64:	add	x25, x27, x25
    cf68:	bl	a0b0 <ZSTD_initStaticCCtx@@Base+0x170>
    cf6c:	cmp	x25, x24
    cf70:	b.ls	cf98 <ZSTD_initStaticCDict@@Base+0xe4>  // b.plast
    cf74:	mov	x0, xzr
    cf78:	ldp	x20, x19, [sp, #144]
    cf7c:	ldp	x22, x21, [sp, #128]
    cf80:	ldp	x24, x23, [sp, #112]
    cf84:	ldp	x26, x25, [sp, #96]
    cf88:	ldr	x27, [sp, #80]
    cf8c:	ldp	x29, x30, [sp, #64]
    cf90:	add	sp, sp, #0xa0
    cf94:	ret
    cf98:	ldur	q0, [x23, #12]
    cf9c:	ldr	q1, [x23]
    cfa0:	mov	x5, sp
    cfa4:	mov	x0, x26
    cfa8:	mov	x1, x22
    cfac:	mov	x2, x21
    cfb0:	mov	w3, w20
    cfb4:	mov	w4, w19
    cfb8:	stur	q0, [sp, #12]
    cfbc:	str	q1, [sp]
    cfc0:	bl	cb40 <ZSTD_createCDict_advanced@@Base+0x164>
    cfc4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    cfc8:	cmp	w0, #0x0
    cfcc:	csel	x0, x26, xzr, eq  // eq = none
    cfd0:	b	cf78 <ZSTD_initStaticCDict@@Base+0xc4>
    cfd4:	add	x9, x0, #0x11c
    cfd8:	ldr	q0, [x9]
    cfdc:	ldr	q1, [x0, #272]
    cfe0:	stur	q0, [x8, #12]
    cfe4:	str	q1, [x8]
    cfe8:	ret

000000000000cfec <ZSTD_compressBegin_usingCDict_advanced@@Base>:
    cfec:	cbz	x1, d09c <ZSTD_compressBegin_usingCDict_advanced@@Base+0xb0>
    cff0:	sub	sp, sp, #0x100
    cff4:	stp	x29, x30, [sp, #192]
    cff8:	stp	x24, x23, [sp, #208]
    cffc:	stp	x22, x21, [sp, #224]
    d000:	stp	x20, x19, [sp, #240]
    d004:	ldp	q0, q2, [x0, #16]
    d008:	add	x8, sp, #0x30
    d00c:	mov	x19, x4
    d010:	mov	x22, x3
    d014:	stp	q0, q2, [sp, #48]
    d018:	ldp	q0, q1, [x0, #64]
    d01c:	ldr	q3, [x0, #48]
    d020:	mov	x23, x2
    d024:	mov	x20, x1
    d028:	stp	q0, q1, [sp, #96]
    d02c:	str	q3, [sp, #80]
    d030:	ldp	q0, q1, [x0, #128]
    d034:	ldp	q2, q3, [x0, #96]
    d038:	mov	x21, x0
    d03c:	cmp	x4, #0x20, lsl #12
    d040:	orr	x24, x8, #0x4
    d044:	add	x29, sp, #0xc0
    d048:	stp	q0, q1, [sp, #160]
    d04c:	stp	q2, q3, [sp, #128]
    d050:	b.cc	d078 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x8c>  // b.lo, b.ul, b.last
    d054:	cmn	x19, #0x1
    d058:	b.eq	d078 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x8c>  // b.none
    d05c:	ldr	x8, [x20, #8]
    d060:	add	x8, x8, x8, lsl #1
    d064:	lsl	x8, x8, #1
    d068:	cmp	x8, x19
    d06c:	b.hi	d078 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x8c>  // b.pmore
    d070:	ldr	w8, [x20, #4924]
    d074:	cbnz	w8, d084 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x98>
    d078:	ldr	w8, [sp, #116]
    d07c:	cmp	w8, #0x3
    d080:	b.ne	d0a4 <ZSTD_compressBegin_usingCDict_advanced@@Base+0xb8>  // b.any
    d084:	ldr	w0, [x20, #4924]
    d088:	ldr	x2, [x20, #8]
    d08c:	add	x8, sp, #0x10
    d090:	mov	x1, x19
    d094:	bl	45c0 <ZSTD_getCParams@plt>
    d098:	b	d0b0 <ZSTD_compressBegin_usingCDict_advanced@@Base+0xc4>
    d09c:	mov	x0, #0xffffffffffffffe0    	// #-32
    d0a0:	ret
    d0a4:	add	x8, sp, #0x10
    d0a8:	mov	x0, x20
    d0ac:	bl	cfd4 <ZSTD_initStaticCDict@@Base+0x120>
    d0b0:	ldur	q0, [sp, #28]
    d0b4:	ldr	q1, [sp, #16]
    d0b8:	cmn	x19, #0x1
    d0bc:	stur	q0, [x24, #12]
    d0c0:	str	q1, [x24]
    d0c4:	b.eq	d100 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x114>  // b.none
    d0c8:	cmp	x19, #0x80, lsl #12
    d0cc:	mov	w8, #0x80000               	// #524288
    d0d0:	csel	w8, w19, w8, cc  // cc = lo, ul, last
    d0d4:	cmp	w8, #0x2
    d0d8:	b.cc	d0ec <ZSTD_compressBegin_usingCDict_advanced@@Base+0x100>  // b.lo, b.ul, b.last
    d0dc:	sub	w0, w8, #0x1
    d0e0:	bl	bb80 <ZSTD_copyCCtx@@Base+0x2ec>
    d0e4:	add	w8, w0, #0x1
    d0e8:	b	d0f0 <ZSTD_compressBegin_usingCDict_advanced@@Base+0x104>
    d0ec:	mov	w8, #0x1                   	// #1
    d0f0:	ldr	w9, [sp, #52]
    d0f4:	cmp	w9, w8
    d0f8:	csel	w8, w9, w8, hi  // hi = pmore
    d0fc:	str	w8, [sp, #52]
    d100:	add	x6, sp, #0x30
    d104:	mov	x0, x21
    d108:	mov	x1, xzr
    d10c:	mov	x2, xzr
    d110:	mov	w3, wzr
    d114:	mov	w4, wzr
    d118:	mov	x5, x20
    d11c:	mov	x7, x19
    d120:	str	x23, [sp, #80]
    d124:	str	w22, [sp, #88]
    d128:	str	wzr, [sp]
    d12c:	bl	c0c4 <ZSTD_compressBlock@@Base+0x124>
    d130:	ldp	x20, x19, [sp, #240]
    d134:	ldp	x22, x21, [sp, #224]
    d138:	ldp	x24, x23, [sp, #208]
    d13c:	ldp	x29, x30, [sp, #192]
    d140:	add	sp, sp, #0x100
    d144:	ret

000000000000d148 <ZSTD_compressBegin_usingCDict@@Base>:
    d148:	stp	x29, x30, [sp, #-16]!
    d14c:	mov	x4, #0xffffffffffffffff    	// #-1
    d150:	mov	x2, xzr
    d154:	mov	x3, xzr
    d158:	mov	x29, sp
    d15c:	bl	4940 <ZSTD_compressBegin_usingCDict_advanced@plt>
    d160:	ldp	x29, x30, [sp], #16
    d164:	ret

000000000000d168 <ZSTD_compress_usingCDict_advanced@@Base>:
    d168:	stp	x29, x30, [sp, #-64]!
    d16c:	stp	x22, x21, [sp, #32]
    d170:	stp	x20, x19, [sp, #48]
    d174:	mov	x20, x3
    d178:	mov	x21, x2
    d17c:	mov	x22, x1
    d180:	and	x3, x7, #0xffffffff
    d184:	mov	x1, x5
    d188:	mov	x2, x6
    d18c:	stp	x24, x23, [sp, #16]
    d190:	mov	x29, sp
    d194:	mov	x19, x4
    d198:	mov	x23, x0
    d19c:	bl	4940 <ZSTD_compressBegin_usingCDict_advanced@plt>
    d1a0:	mov	x24, x0
    d1a4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d1a8:	cbnz	w0, d1c8 <ZSTD_compress_usingCDict_advanced@@Base+0x60>
    d1ac:	mov	x0, x23
    d1b0:	mov	x1, x22
    d1b4:	mov	x2, x21
    d1b8:	mov	x3, x20
    d1bc:	mov	x4, x19
    d1c0:	bl	44e0 <ZSTD_compressEnd@plt>
    d1c4:	mov	x24, x0
    d1c8:	mov	x0, x24
    d1cc:	ldp	x20, x19, [sp, #48]
    d1d0:	ldp	x22, x21, [sp, #32]
    d1d4:	ldp	x24, x23, [sp, #16]
    d1d8:	ldp	x29, x30, [sp], #64
    d1dc:	ret

000000000000d1e0 <ZSTD_compress_usingCDict@@Base>:
    d1e0:	stp	x29, x30, [sp, #-16]!
    d1e4:	mov	w6, #0x1                   	// #1
    d1e8:	mov	x7, xzr
    d1ec:	mov	x29, sp
    d1f0:	bl	4570 <ZSTD_compress_usingCDict_advanced@plt>
    d1f4:	ldp	x29, x30, [sp], #16
    d1f8:	ret

000000000000d1fc <ZSTD_createCStream@@Base>:
    d1fc:	sub	sp, sp, #0x30
    d200:	add	x0, sp, #0x8
    d204:	stp	x29, x30, [sp, #32]
    d208:	add	x29, sp, #0x20
    d20c:	stp	xzr, xzr, [sp, #8]
    d210:	str	xzr, [sp, #24]
    d214:	bl	49d0 <ZSTD_createCStream_advanced@plt>
    d218:	ldp	x29, x30, [sp, #32]
    d21c:	add	sp, sp, #0x30
    d220:	ret

000000000000d224 <ZSTD_createCStream_advanced@@Base>:
    d224:	sub	sp, sp, #0x30
    d228:	stp	x29, x30, [sp, #32]
    d22c:	ldr	x8, [x0, #16]
    d230:	ldr	q0, [x0]
    d234:	mov	x0, sp
    d238:	add	x29, sp, #0x20
    d23c:	str	x8, [sp, #16]
    d240:	str	q0, [sp]
    d244:	bl	44b0 <ZSTD_createCCtx_advanced@plt>
    d248:	ldp	x29, x30, [sp, #32]
    d24c:	add	sp, sp, #0x30
    d250:	ret

000000000000d254 <ZSTD_initStaticCStream@@Base>:
    d254:	stp	x29, x30, [sp, #-16]!
    d258:	mov	x29, sp
    d25c:	bl	4a30 <ZSTD_initStaticCCtx@plt>
    d260:	ldp	x29, x30, [sp], #16
    d264:	ret

000000000000d268 <ZSTD_freeCStream@@Base>:
    d268:	stp	x29, x30, [sp, #-16]!
    d26c:	mov	x29, sp
    d270:	bl	4590 <ZSTD_freeCCtx@plt>
    d274:	ldp	x29, x30, [sp], #16
    d278:	ret

000000000000d27c <ZSTD_CStreamInSize@@Base>:
    d27c:	mov	w0, #0x20000               	// #131072
    d280:	ret

000000000000d284 <ZSTD_CStreamOutSize@@Base>:
    d284:	stp	x29, x30, [sp, #-16]!
    d288:	mov	w0, #0x20000               	// #131072
    d28c:	mov	x29, sp
    d290:	bl	4930 <ZSTD_compressBound@plt>
    d294:	add	x0, x0, #0x7
    d298:	ldp	x29, x30, [sp], #16
    d29c:	ret

000000000000d2a0 <ZSTD_resetCStream@@Base>:
    d2a0:	stp	x29, x30, [sp, #-48]!
    d2a4:	stp	x20, x19, [sp, #32]
    d2a8:	mov	x20, x1
    d2ac:	mov	w1, #0x1                   	// #1
    d2b0:	str	x21, [sp, #16]
    d2b4:	mov	x29, sp
    d2b8:	mov	x19, x0
    d2bc:	bl	4530 <ZSTD_CCtx_reset@plt>
    d2c0:	mov	x21, x0
    d2c4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d2c8:	cbz	w0, d2d4 <ZSTD_resetCStream@@Base+0x34>
    d2cc:	mov	x0, x21
    d2d0:	b	d2f4 <ZSTD_resetCStream@@Base+0x54>
    d2d4:	cmp	x20, #0x0
    d2d8:	csinv	x1, x20, xzr, ne  // ne = any
    d2dc:	mov	x0, x19
    d2e0:	bl	4a60 <ZSTD_CCtx_setPledgedSrcSize@plt>
    d2e4:	mov	x19, x0
    d2e8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d2ec:	cmp	w0, #0x0
    d2f0:	csel	x0, xzr, x19, eq  // eq = none
    d2f4:	ldp	x20, x19, [sp, #32]
    d2f8:	ldr	x21, [sp, #16]
    d2fc:	ldp	x29, x30, [sp], #48
    d300:	ret
    d304:	stp	x29, x30, [sp, #-80]!
    d308:	stp	x24, x23, [sp, #32]
    d30c:	mov	x23, x1
    d310:	mov	w1, #0x1                   	// #1
    d314:	str	x25, [sp, #16]
    d318:	stp	x22, x21, [sp, #48]
    d31c:	stp	x20, x19, [sp, #64]
    d320:	mov	x29, sp
    d324:	mov	x25, x5
    d328:	mov	x24, x4
    d32c:	mov	x21, x3
    d330:	mov	x20, x2
    d334:	mov	x22, x0
    d338:	bl	4530 <ZSTD_CCtx_reset@plt>
    d33c:	mov	x19, x0
    d340:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d344:	cbnz	w0, d3c8 <ZSTD_resetCStream@@Base+0x128>
    d348:	mov	x0, x22
    d34c:	mov	x1, x25
    d350:	bl	4a60 <ZSTD_CCtx_setPledgedSrcSize@plt>
    d354:	mov	x25, x0
    d358:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d35c:	cmp	w0, #0x0
    d360:	csel	x19, x19, x25, eq  // eq = none
    d364:	cbnz	w0, d3c8 <ZSTD_resetCStream@@Base+0x128>
    d368:	ldr	q0, [x24]
    d36c:	mov	x0, x22
    d370:	str	q0, [x22, #16]
    d374:	ldp	q1, q0, [x24, #48]
    d378:	ldp	q3, q2, [x24, #16]
    d37c:	stp	q1, q0, [x22, #64]
    d380:	stp	q3, q2, [x22, #32]
    d384:	ldp	q1, q0, [x24, #112]
    d388:	ldp	q3, q2, [x24, #80]
    d38c:	stp	q1, q0, [x22, #128]
    d390:	stp	q3, q2, [x22, #96]
    d394:	cbz	x23, d3a8 <ZSTD_resetCStream@@Base+0x108>
    d398:	mov	x1, x23
    d39c:	mov	x2, x20
    d3a0:	bl	4620 <ZSTD_CCtx_loadDictionary@plt>
    d3a4:	b	d3b0 <ZSTD_resetCStream@@Base+0x110>
    d3a8:	mov	x1, x21
    d3ac:	bl	4410 <ZSTD_CCtx_refCDict@plt>
    d3b0:	mov	x20, x0
    d3b4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d3b8:	cmp	w0, #0x0
    d3bc:	csel	x19, x19, x20, eq  // eq = none
    d3c0:	cbnz	w0, d3c8 <ZSTD_resetCStream@@Base+0x128>
    d3c4:	mov	x19, xzr
    d3c8:	mov	x0, x19
    d3cc:	ldp	x20, x19, [sp, #64]
    d3d0:	ldp	x22, x21, [sp, #48]
    d3d4:	ldp	x24, x23, [sp, #32]
    d3d8:	ldr	x25, [sp, #16]
    d3dc:	ldp	x29, x30, [sp], #80
    d3e0:	ret

000000000000d3e4 <ZSTD_initCStream_usingCDict_advanced@@Base>:
    d3e4:	stp	x29, x30, [sp, #-64]!
    d3e8:	stp	x20, x19, [sp, #48]
    d3ec:	mov	x19, x1
    d3f0:	mov	w1, #0x1                   	// #1
    d3f4:	stp	x24, x23, [sp, #16]
    d3f8:	stp	x22, x21, [sp, #32]
    d3fc:	mov	x29, sp
    d400:	mov	x24, x4
    d404:	mov	x20, x3
    d408:	mov	x22, x2
    d40c:	mov	x21, x0
    d410:	bl	4530 <ZSTD_CCtx_reset@plt>
    d414:	mov	x23, x0
    d418:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d41c:	cbnz	w0, d440 <ZSTD_initCStream_usingCDict_advanced@@Base+0x5c>
    d420:	mov	x0, x21
    d424:	mov	x1, x24
    d428:	bl	4a60 <ZSTD_CCtx_setPledgedSrcSize@plt>
    d42c:	mov	x24, x0
    d430:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d434:	cmp	w0, #0x0
    d438:	csel	x23, x23, x24, eq  // eq = none
    d43c:	cbz	w0, d458 <ZSTD_initCStream_usingCDict_advanced@@Base+0x74>
    d440:	mov	x0, x23
    d444:	ldp	x20, x19, [sp, #48]
    d448:	ldp	x22, x21, [sp, #32]
    d44c:	ldp	x24, x23, [sp, #16]
    d450:	ldp	x29, x30, [sp], #64
    d454:	ret
    d458:	mov	x0, x21
    d45c:	mov	x1, x19
    d460:	str	x22, [x21, #48]
    d464:	str	w20, [x21, #56]
    d468:	bl	4410 <ZSTD_CCtx_refCDict@plt>
    d46c:	mov	x19, x0
    d470:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d474:	cmp	w0, #0x0
    d478:	csel	x0, xzr, x19, eq  // eq = none
    d47c:	b	d444 <ZSTD_initCStream_usingCDict_advanced@@Base+0x60>

000000000000d480 <ZSTD_initCStream_usingCDict@@Base>:
    d480:	stp	x29, x30, [sp, #-48]!
    d484:	stp	x20, x19, [sp, #32]
    d488:	mov	x19, x1
    d48c:	mov	w1, #0x1                   	// #1
    d490:	str	x21, [sp, #16]
    d494:	mov	x29, sp
    d498:	mov	x20, x0
    d49c:	bl	4530 <ZSTD_CCtx_reset@plt>
    d4a0:	mov	x21, x0
    d4a4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d4a8:	cbz	w0, d4b4 <ZSTD_initCStream_usingCDict@@Base+0x34>
    d4ac:	mov	x0, x21
    d4b0:	b	d4d0 <ZSTD_initCStream_usingCDict@@Base+0x50>
    d4b4:	mov	x0, x20
    d4b8:	mov	x1, x19
    d4bc:	bl	4410 <ZSTD_CCtx_refCDict@plt>
    d4c0:	mov	x19, x0
    d4c4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d4c8:	cmp	w0, #0x0
    d4cc:	csel	x0, xzr, x19, eq  // eq = none
    d4d0:	ldp	x20, x19, [sp, #32]
    d4d4:	ldr	x21, [sp, #16]
    d4d8:	ldp	x29, x30, [sp], #48
    d4dc:	ret

000000000000d4e0 <ZSTD_initCStream_advanced@@Base>:
    d4e0:	sub	sp, sp, #0x100
    d4e4:	stp	x24, x23, [sp, #208]
    d4e8:	stp	x22, x21, [sp, #224]
    d4ec:	stp	x20, x19, [sp, #240]
    d4f0:	mov	x24, x4
    d4f4:	mov	x22, x3
    d4f8:	mov	x19, x2
    d4fc:	mov	x20, x1
    d500:	mov	x21, x0
    d504:	stp	x29, x30, [sp, #192]
    d508:	add	x29, sp, #0xc0
    d50c:	cbnz	x4, d51c <ZSTD_initCStream_advanced@@Base+0x3c>
    d510:	ldr	w8, [x22, #28]
    d514:	cbnz	w8, d51c <ZSTD_initCStream_advanced@@Base+0x3c>
    d518:	mov	x24, #0xffffffffffffffff    	// #-1
    d51c:	mov	w1, #0x1                   	// #1
    d520:	mov	x0, x21
    d524:	bl	4530 <ZSTD_CCtx_reset@plt>
    d528:	mov	x23, x0
    d52c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d530:	cbnz	w0, d580 <ZSTD_initCStream_advanced@@Base+0xa0>
    d534:	mov	x0, x21
    d538:	mov	x1, x24
    d53c:	bl	4a60 <ZSTD_CCtx_setPledgedSrcSize@plt>
    d540:	mov	x24, x0
    d544:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d548:	cmp	w0, #0x0
    d54c:	csel	x23, x23, x24, eq  // eq = none
    d550:	cbnz	w0, d580 <ZSTD_initCStream_advanced@@Base+0xa0>
    d554:	ldur	q0, [x22, #12]
    d558:	ldr	q1, [x22]
    d55c:	add	x0, sp, #0x30
    d560:	stur	q0, [sp, #60]
    d564:	str	q1, [sp, #48]
    d568:	bl	48c0 <ZSTD_checkCParams@plt>
    d56c:	mov	x24, x0
    d570:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d574:	cmp	w0, #0x0
    d578:	csel	x23, x23, x24, eq  // eq = none
    d57c:	cbz	w0, d59c <ZSTD_initCStream_advanced@@Base+0xbc>
    d580:	mov	x0, x23
    d584:	ldp	x20, x19, [sp, #240]
    d588:	ldp	x22, x21, [sp, #224]
    d58c:	ldp	x24, x23, [sp, #208]
    d590:	ldp	x29, x30, [sp, #192]
    d594:	add	sp, sp, #0x100
    d598:	ret
    d59c:	ldr	x8, [x22, #32]
    d5a0:	ldp	q1, q0, [x22]
    d5a4:	add	x0, x21, #0x10
    d5a8:	mov	x1, sp
    d5ac:	str	x8, [sp, #32]
    d5b0:	add	x8, sp, #0x30
    d5b4:	stp	q1, q0, [sp]
    d5b8:	bl	c2a8 <ZSTD_compressBegin_advanced@@Base+0x7c>
    d5bc:	ldp	q0, q3, [sp, #48]
    d5c0:	mov	x0, x21
    d5c4:	mov	x1, x20
    d5c8:	mov	x2, x19
    d5cc:	stp	q0, q3, [x21, #16]
    d5d0:	ldp	q1, q0, [sp, #96]
    d5d4:	ldr	q2, [sp, #80]
    d5d8:	stp	q1, q0, [x21, #64]
    d5dc:	str	q2, [x21, #48]
    d5e0:	ldp	q1, q0, [sp, #160]
    d5e4:	ldp	q3, q2, [sp, #128]
    d5e8:	stp	q1, q0, [x21, #128]
    d5ec:	stp	q3, q2, [x21, #96]
    d5f0:	bl	4620 <ZSTD_CCtx_loadDictionary@plt>
    d5f4:	mov	x19, x0
    d5f8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d5fc:	cmp	w0, #0x0
    d600:	csel	x0, xzr, x19, eq  // eq = none
    d604:	b	d584 <ZSTD_initCStream_advanced@@Base+0xa4>

000000000000d608 <ZSTD_initCStream_usingDict@@Base>:
    d608:	stp	x29, x30, [sp, #-64]!
    d60c:	stp	x20, x19, [sp, #48]
    d610:	mov	x20, x1
    d614:	mov	w1, #0x1                   	// #1
    d618:	str	x23, [sp, #16]
    d61c:	stp	x22, x21, [sp, #32]
    d620:	mov	x29, sp
    d624:	mov	w23, w3
    d628:	mov	x19, x2
    d62c:	mov	x21, x0
    d630:	bl	4530 <ZSTD_CCtx_reset@plt>
    d634:	mov	x22, x0
    d638:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d63c:	cbnz	w0, d664 <ZSTD_initCStream_usingDict@@Base+0x5c>
    d640:	mov	w1, #0x64                  	// #100
    d644:	mov	x0, x21
    d648:	mov	w2, w23
    d64c:	bl	4500 <ZSTD_CCtx_setParameter@plt>
    d650:	mov	x23, x0
    d654:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d658:	cmp	w0, #0x0
    d65c:	csel	x22, x22, x23, eq  // eq = none
    d660:	cbz	w0, d67c <ZSTD_initCStream_usingDict@@Base+0x74>
    d664:	mov	x0, x22
    d668:	ldp	x20, x19, [sp, #48]
    d66c:	ldp	x22, x21, [sp, #32]
    d670:	ldr	x23, [sp, #16]
    d674:	ldp	x29, x30, [sp], #64
    d678:	ret
    d67c:	mov	x0, x21
    d680:	mov	x1, x20
    d684:	mov	x2, x19
    d688:	bl	4620 <ZSTD_CCtx_loadDictionary@plt>
    d68c:	mov	x19, x0
    d690:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d694:	cmp	w0, #0x0
    d698:	csel	x0, xzr, x19, eq  // eq = none
    d69c:	b	d668 <ZSTD_initCStream_usingDict@@Base+0x60>

000000000000d6a0 <ZSTD_initCStream_srcSize@@Base>:
    d6a0:	stp	x29, x30, [sp, #-64]!
    d6a4:	stp	x22, x21, [sp, #32]
    d6a8:	mov	w22, w1
    d6ac:	cmp	x2, #0x0
    d6b0:	mov	w1, #0x1                   	// #1
    d6b4:	str	x23, [sp, #16]
    d6b8:	stp	x20, x19, [sp, #48]
    d6bc:	mov	x29, sp
    d6c0:	mov	x19, x0
    d6c4:	csinv	x20, x2, xzr, ne  // ne = any
    d6c8:	bl	4530 <ZSTD_CCtx_reset@plt>
    d6cc:	mov	x21, x0
    d6d0:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d6d4:	cbnz	w0, d71c <ZSTD_initCStream_srcSize@@Base+0x7c>
    d6d8:	mov	x0, x19
    d6dc:	mov	x1, xzr
    d6e0:	bl	4410 <ZSTD_CCtx_refCDict@plt>
    d6e4:	mov	x23, x0
    d6e8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d6ec:	cmp	w0, #0x0
    d6f0:	csel	x21, x21, x23, eq  // eq = none
    d6f4:	cbnz	w0, d71c <ZSTD_initCStream_srcSize@@Base+0x7c>
    d6f8:	mov	w1, #0x64                  	// #100
    d6fc:	mov	x0, x19
    d700:	mov	w2, w22
    d704:	bl	4500 <ZSTD_CCtx_setParameter@plt>
    d708:	mov	x22, x0
    d70c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d710:	cmp	w0, #0x0
    d714:	csel	x21, x21, x22, eq  // eq = none
    d718:	cbz	w0, d734 <ZSTD_initCStream_srcSize@@Base+0x94>
    d71c:	mov	x0, x21
    d720:	ldp	x20, x19, [sp, #48]
    d724:	ldp	x22, x21, [sp, #32]
    d728:	ldr	x23, [sp, #16]
    d72c:	ldp	x29, x30, [sp], #64
    d730:	ret
    d734:	mov	x0, x19
    d738:	mov	x1, x20
    d73c:	bl	4a60 <ZSTD_CCtx_setPledgedSrcSize@plt>
    d740:	mov	x19, x0
    d744:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d748:	cmp	w0, #0x0
    d74c:	csel	x0, xzr, x19, eq  // eq = none
    d750:	b	d720 <ZSTD_initCStream_srcSize@@Base+0x80>

000000000000d754 <ZSTD_initCStream@@Base>:
    d754:	stp	x29, x30, [sp, #-48]!
    d758:	stp	x20, x19, [sp, #32]
    d75c:	mov	w19, w1
    d760:	mov	w1, #0x1                   	// #1
    d764:	stp	x22, x21, [sp, #16]
    d768:	mov	x29, sp
    d76c:	mov	x20, x0
    d770:	bl	4530 <ZSTD_CCtx_reset@plt>
    d774:	mov	x21, x0
    d778:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d77c:	cbnz	w0, d7a0 <ZSTD_initCStream@@Base+0x4c>
    d780:	mov	x0, x20
    d784:	mov	x1, xzr
    d788:	bl	4410 <ZSTD_CCtx_refCDict@plt>
    d78c:	mov	x22, x0
    d790:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d794:	cmp	w0, #0x0
    d798:	csel	x21, x21, x22, eq  // eq = none
    d79c:	cbz	w0, d7b4 <ZSTD_initCStream@@Base+0x60>
    d7a0:	mov	x0, x21
    d7a4:	ldp	x20, x19, [sp, #32]
    d7a8:	ldp	x22, x21, [sp, #16]
    d7ac:	ldp	x29, x30, [sp], #48
    d7b0:	ret
    d7b4:	mov	w1, #0x64                  	// #100
    d7b8:	mov	x0, x20
    d7bc:	mov	w2, w19
    d7c0:	bl	4500 <ZSTD_CCtx_setParameter@plt>
    d7c4:	mov	x19, x0
    d7c8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d7cc:	cmp	w0, #0x0
    d7d0:	csel	x0, xzr, x19, eq  // eq = none
    d7d4:	b	d7a4 <ZSTD_initCStream@@Base+0x50>

000000000000d7d8 <ZSTD_compressStream@@Base>:
    d7d8:	stp	x29, x30, [sp, #-32]!
    d7dc:	mov	w3, wzr
    d7e0:	stp	x20, x19, [sp, #16]
    d7e4:	mov	x29, sp
    d7e8:	mov	x19, x0
    d7ec:	bl	4650 <ZSTD_compressStream2@plt>
    d7f0:	mov	x20, x0
    d7f4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d7f8:	cbnz	w0, d808 <ZSTD_compressStream@@Base+0x30>
    d7fc:	mov	x0, x19
    d800:	bl	d9c4 <ZSTD_compressStream2@@Base+0x1ac>
    d804:	mov	x20, x0
    d808:	mov	x0, x20
    d80c:	ldp	x20, x19, [sp, #16]
    d810:	ldp	x29, x30, [sp], #32
    d814:	ret

000000000000d818 <ZSTD_compressStream2@@Base>:
    d818:	sub	sp, sp, #0x180
    d81c:	stp	x29, x30, [sp, #288]
    d820:	str	x28, [sp, #304]
    d824:	stp	x26, x25, [sp, #320]
    d828:	stp	x24, x23, [sp, #336]
    d82c:	stp	x22, x21, [sp, #352]
    d830:	stp	x20, x19, [sp, #368]
    d834:	ldp	x9, x8, [x1, #8]
    d838:	add	x29, sp, #0x120
    d83c:	cmp	x8, x9
    d840:	b.hi	d854 <ZSTD_compressStream2@@Base+0x3c>  // b.pmore
    d844:	ldp	x9, x8, [x2, #8]
    d848:	mov	x21, x2
    d84c:	cmp	x8, x9
    d850:	b.ls	d87c <ZSTD_compressStream2@@Base+0x64>  // b.plast
    d854:	mov	x23, #0xffffffffffffffff    	// #-1
    d858:	mov	x0, x23
    d85c:	ldp	x20, x19, [sp, #368]
    d860:	ldp	x22, x21, [sp, #352]
    d864:	ldp	x24, x23, [sp, #336]
    d868:	ldp	x26, x25, [sp, #320]
    d86c:	ldr	x28, [sp, #304]
    d870:	ldp	x29, x30, [sp, #288]
    d874:	add	sp, sp, #0x180
    d878:	ret
    d87c:	ldr	w8, [x0, #1064]
    d880:	mov	w20, w3
    d884:	mov	x22, x1
    d888:	mov	x19, x0
    d88c:	cbnz	w8, d98c <ZSTD_compressStream2@@Base+0x174>
    d890:	ldp	q0, q3, [x19, #16]
    d894:	mov	x0, x19
    d898:	stp	q0, q3, [sp, #144]
    d89c:	ldp	q1, q0, [x19, #64]
    d8a0:	ldr	q2, [x19, #48]
    d8a4:	stp	q1, q0, [sp, #192]
    d8a8:	str	q2, [sp, #176]
    d8ac:	ldp	q1, q0, [x19, #128]
    d8b0:	ldp	q3, q2, [x19, #96]
    d8b4:	stp	q1, q0, [sp, #256]
    d8b8:	stp	q3, q2, [sp, #224]
    d8bc:	ldr	x24, [x19, #1120]
    d8c0:	ldr	x25, [x19, #1128]
    d8c4:	ldr	w26, [x19, #1136]
    d8c8:	bl	d9d8 <ZSTD_compressStream2@@Base+0x1c0>
    d8cc:	mov	x23, x0
    d8d0:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d8d4:	cmp	w0, #0x0
    d8d8:	cset	w8, eq  // eq = none
    d8dc:	cbnz	w0, d988 <ZSTD_compressStream2@@Base+0x170>
    d8e0:	add	x0, x19, #0x10
    d8e4:	movi	v0.2d, #0x0
    d8e8:	cmp	w20, #0x2
    d8ec:	str	xzr, [x19, #1136]
    d8f0:	str	q0, [x19, #1120]
    d8f4:	b.ne	d904 <ZSTD_compressStream2@@Base+0xec>  // b.any
    d8f8:	ldr	x8, [x21, #8]
    d8fc:	add	x8, x8, #0x1
    d900:	str	x8, [x19, #384]
    d904:	ldr	x8, [x19, #384]
    d908:	mov	x2, xzr
    d90c:	sub	x1, x8, #0x1
    d910:	mov	x8, sp
    d914:	bl	b27c <ZSTD_adjustCParams@@Base+0x290>
    d918:	ldur	q0, [sp, #12]
    d91c:	ldr	q1, [sp]
    d920:	ldp	q2, q3, [sp, #240]
    d924:	ldr	q4, [sp, #272]
    d928:	str	q0, [sp, #160]
    d92c:	stur	q1, [sp, #148]
    d930:	ldp	q0, q1, [sp, #176]
    d934:	ldr	x8, [x19, #384]
    d938:	ldr	x4, [x19, #1112]
    d93c:	stp	q2, q3, [sp, #96]
    d940:	ldp	q3, q2, [sp, #208]
    d944:	stp	q0, q1, [sp, #32]
    d948:	ldp	q1, q0, [sp, #144]
    d94c:	sub	x6, x8, #0x1
    d950:	mov	x5, sp
    d954:	mov	x0, x19
    d958:	mov	x1, x24
    d95c:	mov	x2, x25
    d960:	mov	w3, w26
    d964:	str	q4, [sp, #128]
    d968:	stp	q3, q2, [sp, #64]
    d96c:	stp	q1, q0, [sp]
    d970:	bl	da7c <ZSTD_compressStream2@@Base+0x264>
    d974:	mov	x24, x0
    d978:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d97c:	cmp	w0, #0x0
    d980:	cset	w8, eq  // eq = none
    d984:	csel	x23, x23, x24, eq  // eq = none
    d988:	cbz	w8, d858 <ZSTD_compressStream2@@Base+0x40>
    d98c:	mov	x0, x19
    d990:	mov	x1, x22
    d994:	mov	x2, x21
    d998:	mov	w3, w20
    d99c:	bl	db58 <ZSTD_compressStream2@@Base+0x340>
    d9a0:	mov	x20, x0
    d9a4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    d9a8:	cmp	w0, #0x0
    d9ac:	csel	x23, x23, x20, eq  // eq = none
    d9b0:	cbnz	w0, d858 <ZSTD_compressStream2@@Base+0x40>
    d9b4:	ldr	x8, [x19, #1048]
    d9b8:	ldr	x9, [x19, #1056]
    d9bc:	sub	x23, x8, x9
    d9c0:	b	d858 <ZSTD_compressStream2@@Base+0x40>
    d9c4:	stp	x29, x30, [sp, #-16]!
    d9c8:	mov	x29, sp
    d9cc:	bl	10864 <ZSTD_endStream@@Base+0x2910>
    d9d0:	ldp	x29, x30, [sp], #16
    d9d4:	ret
    d9d8:	sub	sp, sp, #0x80
    d9dc:	stp	x29, x30, [sp, #96]
    d9e0:	ldr	x2, [x0, #1088]
    d9e4:	add	x29, sp, #0x60
    d9e8:	str	x19, [sp, #112]
    d9ec:	mov	x19, x0
    d9f0:	add	x0, x0, #0x10
    d9f4:	sub	x8, x29, #0x20
    d9f8:	mov	x1, xzr
    d9fc:	bl	b27c <ZSTD_adjustCParams@@Base+0x290>
    da00:	ldr	x0, [x19, #1080]
    da04:	cbz	x0, da6c <ZSTD_compressStream2@@Base+0x254>
    da08:	ldr	x8, [x19, #1104]
    da0c:	cbz	x8, da18 <ZSTD_compressStream2@@Base+0x200>
    da10:	mov	x0, xzr
    da14:	b	da6c <ZSTD_compressStream2@@Base+0x254>
    da18:	ldur	q0, [x29, #-32]
    da1c:	ldur	q1, [x29, #-20]
    da20:	ldr	x1, [x19, #1088]
    da24:	ldr	w3, [x19, #1096]
    da28:	str	q0, [sp, #32]
    da2c:	stur	q1, [sp, #44]
    da30:	ldr	x8, [x19, #512]
    da34:	ldr	q0, [x19, #496]
    da38:	add	x4, sp, #0x20
    da3c:	mov	x5, sp
    da40:	mov	w2, #0x1                   	// #1
    da44:	str	x8, [sp, #16]
    da48:	str	q0, [sp]
    da4c:	bl	47b0 <ZSTD_createCDict_advanced@plt>
    da50:	str	x0, [x19, #1104]
    da54:	cbz	x0, da68 <ZSTD_compressStream2@@Base+0x250>
    da58:	mov	x8, x0
    da5c:	mov	x0, xzr
    da60:	str	x8, [x19, #1112]
    da64:	b	da6c <ZSTD_compressStream2@@Base+0x254>
    da68:	mov	x0, #0xffffffffffffffc0    	// #-64
    da6c:	ldr	x19, [sp, #112]
    da70:	ldp	x29, x30, [sp, #96]
    da74:	add	sp, sp, #0x80
    da78:	ret
    da7c:	sub	sp, sp, #0x80
    da80:	str	x25, [sp, #64]
    da84:	stp	x20, x19, [sp, #112]
    da88:	mov	x25, x1
    da8c:	mov	x20, x0
    da90:	add	x8, sp, #0x10
    da94:	mov	x0, x5
    da98:	mov	x1, x6
    da9c:	stp	x29, x30, [sp, #48]
    daa0:	stp	x24, x23, [sp, #80]
    daa4:	stp	x22, x21, [sp, #96]
    daa8:	add	x29, sp, #0x30
    daac:	mov	x19, x6
    dab0:	mov	x21, x5
    dab4:	mov	x22, x4
    dab8:	mov	w23, w3
    dabc:	mov	x24, x2
    dac0:	bl	b27c <ZSTD_adjustCParams@@Base+0x290>
    dac4:	ldur	q0, [sp, #28]
    dac8:	ldr	q1, [sp, #16]
    dacc:	mov	w8, #0x1                   	// #1
    dad0:	mov	x0, x20
    dad4:	mov	x1, x25
    dad8:	mov	x2, x24
    dadc:	mov	w3, w23
    dae0:	mov	w4, wzr
    dae4:	mov	x5, x22
    dae8:	mov	x6, x21
    daec:	mov	x7, x19
    daf0:	str	q0, [x21, #16]
    daf4:	stur	q1, [x21, #4]
    daf8:	str	w8, [sp]
    dafc:	bl	c0c4 <ZSTD_compressBlock@@Base+0x124>
    db00:	mov	x21, x0
    db04:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    db08:	cbnz	w0, db38 <ZSTD_compressStream2@@Base+0x320>
    db0c:	ldr	x8, [x20, #376]
    db10:	mov	x21, xzr
    db14:	movi	v0.2d, #0x0
    db18:	add	x9, x20, #0x418
    db1c:	cmp	x8, x19
    db20:	mov	w10, #0x1                   	// #1
    db24:	cinc	x8, x8, eq  // eq = none
    db28:	str	q0, [x20, #1008]
    db2c:	str	x8, [x20, #1024]
    db30:	str	q0, [x9]
    db34:	str	x10, [x20, #1064]
    db38:	mov	x0, x21
    db3c:	ldp	x20, x19, [sp, #112]
    db40:	ldp	x22, x21, [sp, #96]
    db44:	ldp	x24, x23, [sp, #80]
    db48:	ldr	x25, [sp, #64]
    db4c:	ldp	x29, x30, [sp, #48]
    db50:	add	sp, sp, #0x80
    db54:	ret
    db58:	sub	sp, sp, #0xa0
    db5c:	stp	x29, x30, [sp, #64]
    db60:	stp	x28, x27, [sp, #80]
    db64:	stp	x26, x25, [sp, #96]
    db68:	stp	x24, x23, [sp, #112]
    db6c:	stp	x22, x21, [sp, #128]
    db70:	stp	x20, x19, [sp, #144]
    db74:	ldp	x12, x8, [x2]
    db78:	stp	x1, x2, [sp, #16]
    db7c:	ldr	x9, [x2, #16]
    db80:	ldp	x13, x10, [x1]
    db84:	ldr	x11, [x1, #16]
    db88:	add	x29, sp, #0x40
    db8c:	mov	w28, w3
    db90:	mov	x19, x0
    db94:	add	x14, x0, #0x418
    db98:	add	x22, x12, x8
    db9c:	add	x25, x12, x9
    dba0:	add	x21, x13, x10
    dba4:	add	x24, x13, x11
    dba8:	mov	w23, #0x1                   	// #1
    dbac:	stur	x14, [x29, #-16]
    dbb0:	stp	x13, x12, [sp]
    dbb4:	stur	w3, [x29, #-28]
    dbb8:	stur	x21, [x29, #-24]
    dbbc:	b	dbc8 <ZSTD_compressStream2@@Base+0x3b0>
    dbc0:	cbz	w8, de64 <ZSTD_compressStream2@@Base+0x64c>
    dbc4:	cbz	w23, de6c <ZSTD_compressStream2@@Base+0x654>
    dbc8:	ldr	w8, [x19, #1064]
    dbcc:	cmp	w8, #0x1
    dbd0:	b.eq	dc3c <ZSTD_compressStream2@@Base+0x424>  // b.none
    dbd4:	cmp	w8, #0x2
    dbd8:	b.ne	dbc0 <ZSTD_compressStream2@@Base+0x3a8>  // b.any
    dbdc:	ldr	x8, [x19, #1048]
    dbe0:	ldr	x9, [x19, #1056]
    dbe4:	ldr	x10, [x19, #1032]
    dbe8:	sub	x1, x21, x24
    dbec:	mov	x0, x24
    dbf0:	sub	x26, x8, x9
    dbf4:	add	x2, x10, x9
    dbf8:	mov	x3, x26
    dbfc:	bl	10884 <ZSTD_endStream@@Base+0x2930>
    dc00:	ldr	x8, [x19, #1056]
    dc04:	add	x24, x24, x0
    dc08:	cmp	x26, x0
    dc0c:	add	x8, x8, x0
    dc10:	str	x8, [x19, #1056]
    dc14:	b.ne	dcd0 <ZSTD_compressStream2@@Base+0x4b8>  // b.any
    dc18:	ldur	x8, [x29, #-16]
    dc1c:	stp	xzr, xzr, [x8]
    dc20:	ldr	w8, [x19, #1068]
    dc24:	cbz	w8, dd48 <ZSTD_compressStream2@@Base+0x530>
    dc28:	mov	w1, #0x1                   	// #1
    dc2c:	mov	x0, x19
    dc30:	bl	4530 <ZSTD_CCtx_reset@plt>
    dc34:	mov	w23, wzr
    dc38:	b	dbc4 <ZSTD_compressStream2@@Base+0x3ac>
    dc3c:	cmp	w28, #0x2
    dc40:	b.ne	dc64 <ZSTD_compressStream2@@Base+0x44c>  // b.any
    dc44:	sub	x26, x22, x25
    dc48:	mov	x0, x26
    dc4c:	sub	x27, x21, x24
    dc50:	bl	4930 <ZSTD_compressBound@plt>
    dc54:	cmp	x27, x0
    dc58:	b.cc	dc64 <ZSTD_compressStream2@@Base+0x44c>  // b.lo, b.ul, b.last
    dc5c:	ldr	x8, [x19, #1016]
    dc60:	cbz	x8, ddc8 <ZSTD_compressStream2@@Base+0x5b0>
    dc64:	ldr	x8, [x19, #1024]
    dc68:	ldr	x9, [x19, #1016]
    dc6c:	ldr	x10, [x19, #992]
    dc70:	sub	x3, x22, x25
    dc74:	mov	x2, x25
    dc78:	sub	x1, x8, x9
    dc7c:	add	x0, x10, x9
    dc80:	bl	10884 <ZSTD_endStream@@Base+0x2930>
    dc84:	ldr	x8, [x19, #1016]
    dc88:	cmp	w28, #0x1
    dc8c:	add	x25, x25, x0
    dc90:	add	x8, x8, x0
    dc94:	str	x8, [x19, #1016]
    dc98:	b.eq	dcb4 <ZSTD_compressStream2@@Base+0x49c>  // b.none
    dc9c:	cbnz	w28, dcd8 <ZSTD_compressStream2@@Base+0x4c0>
    dca0:	ldr	x9, [x19, #1024]
    dca4:	cmp	x8, x9
    dca8:	b.cc	dcc0 <ZSTD_compressStream2@@Base+0x4a8>  // b.lo, b.ul, b.last
    dcac:	cmp	w28, #0x1
    dcb0:	b.ne	dcd8 <ZSTD_compressStream2@@Base+0x4c0>  // b.any
    dcb4:	ldr	x9, [x19, #1008]
    dcb8:	cmp	x8, x9
    dcbc:	b.ne	dcd8 <ZSTD_compressStream2@@Base+0x4c0>  // b.any
    dcc0:	mov	w9, wzr
    dcc4:	mov	w23, wzr
    dcc8:	cbz	w9, dbc4 <ZSTD_compressStream2@@Base+0x3ac>
    dccc:	b	dce0 <ZSTD_compressStream2@@Base+0x4c8>
    dcd0:	mov	w23, wzr
    dcd4:	b	dbc4 <ZSTD_compressStream2@@Base+0x3ac>
    dcd8:	mov	w9, #0x1                   	// #1
    dcdc:	cbz	w9, dbc4 <ZSTD_compressStream2@@Base+0x3ac>
    dce0:	stur	x20, [x29, #-8]
    dce4:	ldr	x20, [x19, #1008]
    dce8:	cmp	w28, #0x2
    dcec:	cset	w9, eq  // eq = none
    dcf0:	cmp	x25, x22
    dcf4:	sub	x27, x8, x20
    dcf8:	cset	w10, eq  // eq = none
    dcfc:	mov	x0, x27
    dd00:	sub	x28, x21, x24
    dd04:	mov	x21, x22
    dd08:	and	w22, w9, w10
    dd0c:	bl	4930 <ZSTD_compressBound@plt>
    dd10:	cmp	x28, x0
    dd14:	mov	x26, x24
    dd18:	b.cs	dd24 <ZSTD_compressStream2@@Base+0x50c>  // b.hs, b.nlast
    dd1c:	ldr	x26, [x19, #1032]
    dd20:	ldr	x28, [x19, #1040]
    dd24:	ldr	x8, [x19, #992]
    dd28:	mov	x0, x19
    dd2c:	mov	x1, x26
    dd30:	mov	x2, x28
    dd34:	add	x3, x8, x20
    dd38:	mov	x4, x27
    dd3c:	cbz	w22, dd54 <ZSTD_compressStream2@@Base+0x53c>
    dd40:	bl	44e0 <ZSTD_compressEnd@plt>
    dd44:	b	dd58 <ZSTD_compressStream2@@Base+0x540>
    dd48:	mov	w8, #0x1                   	// #1
    dd4c:	str	w8, [x19, #1064]
    dd50:	b	dbc4 <ZSTD_compressStream2@@Base+0x3ac>
    dd54:	bl	4a90 <ZSTD_compressContinue@plt>
    dd58:	ldur	x20, [x29, #-8]
    dd5c:	ldur	w28, [x29, #-28]
    dd60:	mov	x27, x0
    dd64:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    dd68:	cmp	w0, #0x0
    dd6c:	cset	w8, ne  // ne = any
    dd70:	csel	x20, x20, x27, eq  // eq = none
    dd74:	cbnz	w0, de44 <ZSTD_compressStream2@@Base+0x62c>
    dd78:	ldr	x9, [x19, #1016]
    dd7c:	ldr	x8, [x19, #376]
    dd80:	ldr	x10, [x19, #1000]
    dd84:	str	w22, [x19, #1068]
    dd88:	add	x9, x8, x9
    dd8c:	cmp	x9, x10
    dd90:	str	x9, [x19, #1024]
    dd94:	b.ls	dda0 <ZSTD_compressStream2@@Base+0x588>  // b.plast
    dd98:	str	xzr, [x19, #1016]
    dd9c:	str	x8, [x19, #1024]
    dda0:	ldr	x8, [x19, #1016]
    dda4:	cmp	x26, x24
    dda8:	str	x8, [x19, #1008]
    ddac:	b.eq	de28 <ZSTD_compressStream2@@Base+0x610>  // b.none
    ddb0:	mov	w8, wzr
    ddb4:	mov	w9, #0x2                   	// #2
    ddb8:	str	x27, [x19, #1048]
    ddbc:	str	xzr, [x19, #1056]
    ddc0:	str	w9, [x19, #1064]
    ddc4:	b	de44 <ZSTD_compressStream2@@Base+0x62c>
    ddc8:	mov	x0, x19
    ddcc:	mov	x1, x24
    ddd0:	mov	x2, x27
    ddd4:	mov	x3, x25
    ddd8:	mov	x4, x26
    dddc:	bl	44e0 <ZSTD_compressEnd@plt>
    dde0:	mov	x26, x0
    dde4:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    dde8:	cmp	w0, #0x0
    ddec:	cset	w8, ne  // ne = any
    ddf0:	csel	x20, x20, x26, eq  // eq = none
    ddf4:	cbnz	w0, de1c <ZSTD_compressStream2@@Base+0x604>
    ddf8:	mov	w8, #0x1                   	// #1
    ddfc:	mov	w1, #0x1                   	// #1
    de00:	mov	x0, x19
    de04:	add	x24, x24, x26
    de08:	str	w8, [x19, #1068]
    de0c:	bl	4530 <ZSTD_CCtx_reset@plt>
    de10:	mov	w23, wzr
    de14:	mov	w8, #0x4                   	// #4
    de18:	mov	x25, x22
    de1c:	cmp	w8, #0x4
    de20:	b.eq	dbc4 <ZSTD_compressStream2@@Base+0x3ac>  // b.none
    de24:	b	dea4 <ZSTD_compressStream2@@Base+0x68c>
    de28:	add	x24, x24, x27
    de2c:	cbz	w22, de40 <ZSTD_compressStream2@@Base+0x628>
    de30:	mov	w1, #0x1                   	// #1
    de34:	mov	x0, x19
    de38:	bl	4530 <ZSTD_CCtx_reset@plt>
    de3c:	mov	w23, wzr
    de40:	mov	w8, #0x4                   	// #4
    de44:	cmp	w8, #0x4
    de48:	mov	x22, x21
    de4c:	b.eq	de5c <ZSTD_compressStream2@@Base+0x644>  // b.none
    de50:	ldur	x21, [x29, #-24]
    de54:	cbz	w8, dbdc <ZSTD_compressStream2@@Base+0x3c4>
    de58:	b	dea4 <ZSTD_compressStream2@@Base+0x68c>
    de5c:	ldur	x21, [x29, #-24]
    de60:	b	dbc4 <ZSTD_compressStream2@@Base+0x3ac>
    de64:	mov	x20, #0xffffffffffffffc2    	// #-62
    de68:	b	dea4 <ZSTD_compressStream2@@Base+0x68c>
    de6c:	ldp	x9, x8, [sp]
    de70:	ldr	x10, [sp, #24]
    de74:	sub	x8, x25, x8
    de78:	str	x8, [x10, #16]
    de7c:	ldr	x8, [sp, #16]
    de80:	sub	x9, x24, x9
    de84:	str	x9, [x8, #16]
    de88:	ldr	w8, [x19, #1068]
    de8c:	cbz	w8, de98 <ZSTD_compressStream2@@Base+0x680>
    de90:	mov	x20, xzr
    de94:	b	dea4 <ZSTD_compressStream2@@Base+0x68c>
    de98:	mov	x0, x19
    de9c:	bl	10864 <ZSTD_endStream@@Base+0x2910>
    dea0:	mov	x20, x0
    dea4:	mov	x0, x20
    dea8:	ldp	x20, x19, [sp, #144]
    deac:	ldp	x22, x21, [sp, #128]
    deb0:	ldp	x24, x23, [sp, #112]
    deb4:	ldp	x26, x25, [sp, #96]
    deb8:	ldp	x28, x27, [sp, #80]
    debc:	ldp	x29, x30, [sp, #64]
    dec0:	add	sp, sp, #0xa0
    dec4:	ret

000000000000dec8 <ZSTD_compressStream2_simpleArgs@@Base>:
    dec8:	sub	sp, sp, #0x50
    decc:	stp	x29, x30, [sp, #48]
    ded0:	stp	x20, x19, [sp, #64]
    ded4:	stp	x1, x2, [sp, #24]
    ded8:	ldr	x8, [x3]
    dedc:	stp	x4, x5, [sp]
    dee0:	mov	x20, x3
    dee4:	add	x1, sp, #0x18
    dee8:	str	x8, [sp, #40]
    deec:	ldr	x8, [x6]
    def0:	mov	x2, sp
    def4:	mov	w3, w7
    def8:	add	x29, sp, #0x30
    defc:	mov	x19, x6
    df00:	str	x8, [sp, #16]
    df04:	bl	4650 <ZSTD_compressStream2@plt>
    df08:	ldr	x8, [sp, #40]
    df0c:	str	x8, [x20]
    df10:	ldr	x8, [sp, #16]
    df14:	str	x8, [x19]
    df18:	ldp	x20, x19, [sp, #64]
    df1c:	ldp	x29, x30, [sp, #48]
    df20:	add	sp, sp, #0x50
    df24:	ret

000000000000df28 <ZSTD_flushStream@@Base>:
    df28:	sub	sp, sp, #0x30
    df2c:	add	x2, sp, #0x8
    df30:	mov	w3, #0x1                   	// #1
    df34:	stp	x29, x30, [sp, #32]
    df38:	add	x29, sp, #0x20
    df3c:	stp	xzr, xzr, [sp, #8]
    df40:	str	xzr, [sp, #24]
    df44:	bl	4650 <ZSTD_compressStream2@plt>
    df48:	ldp	x29, x30, [sp, #32]
    df4c:	add	sp, sp, #0x30
    df50:	ret

000000000000df54 <ZSTD_endStream@@Base>:
    df54:	sub	sp, sp, #0x40
    df58:	add	x2, sp, #0x8
    df5c:	mov	w3, #0x2                   	// #2
    df60:	stp	x29, x30, [sp, #32]
    df64:	stp	x20, x19, [sp, #48]
    df68:	add	x29, sp, #0x20
    df6c:	mov	x19, x0
    df70:	stp	xzr, xzr, [sp, #8]
    df74:	str	xzr, [sp, #24]
    df78:	bl	4650 <ZSTD_compressStream2@plt>
    df7c:	mov	x20, x0
    df80:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    df84:	cbnz	w0, dfbc <ZSTD_endStream@@Base+0x68>
    df88:	ldr	w8, [x19, #236]
    df8c:	cmp	w8, #0x0
    df90:	b.gt	dfbc <ZSTD_endStream@@Base+0x68>
    df94:	ldr	w10, [x19, #1068]
    df98:	mov	w9, #0x3                   	// #3
    df9c:	mov	x8, xzr
    dfa0:	cmp	w10, #0x0
    dfa4:	csel	x9, xzr, x9, ne  // ne = any
    dfa8:	cbnz	w10, dfb4 <ZSTD_endStream@@Base+0x60>
    dfac:	ldrsw	x8, [x19, #196]
    dfb0:	lsl	x8, x8, #2
    dfb4:	add	x9, x9, x20
    dfb8:	add	x20, x9, x8
    dfbc:	mov	x0, x20
    dfc0:	ldp	x20, x19, [sp, #48]
    dfc4:	ldp	x29, x30, [sp, #32]
    dfc8:	add	sp, sp, #0x40
    dfcc:	ret
    dfd0:	ldr	w10, [x0, #56]
    dfd4:	ldp	x9, x8, [x0, #8]
    dfd8:	str	wzr, [x0, #48]
    dfdc:	cmp	w10, #0x2
    dfe0:	str	x8, [x0, #24]
    dfe4:	str	x9, [x0, #40]
    dfe8:	b.cc	dff4 <ZSTD_endStream@@Base+0xa0>  // b.lo, b.ul, b.last
    dfec:	mov	w8, #0x1                   	// #1
    dff0:	str	w8, [x0, #56]
    dff4:	ret
    dff8:	ldr	x8, [x0, #40]
    dffc:	ldr	x9, [x0, #24]
    e000:	sub	x0, x8, x9
    e004:	ret
    e008:	cmp	w1, #0x5
    e00c:	cset	w8, hi  // hi = pmore
    e010:	sub	w0, w0, w8
    e014:	ret
    e018:	sub	sp, sp, #0xd0
    e01c:	mov	w8, #0x1                   	// #1
    e020:	stp	x29, x30, [sp, #112]
    e024:	stp	x28, x27, [sp, #128]
    e028:	stp	x26, x25, [sp, #144]
    e02c:	stp	x24, x23, [sp, #160]
    e030:	stp	x22, x21, [sp, #176]
    e034:	stp	x20, x19, [sp, #192]
    e038:	str	w3, [sp, #32]
    e03c:	str	w8, [x0, #560]
    e040:	mov	x22, x1
    e044:	ldr	w8, [x22, #96]!
    e048:	mov	w28, w4
    e04c:	mov	x21, x2
    e050:	mov	x24, x1
    e054:	mov	x19, x0
    e058:	add	x20, x0, #0x138
    e05c:	add	x29, sp, #0x70
    e060:	cbz	w8, e07c <ZSTD_endStream@@Base+0x128>
    e064:	add	x1, x24, #0x4
    e068:	mov	x0, x22
    e06c:	bl	25ee0 <ZSTD_endStream@@Base+0x17f8c>
    e070:	ldr	w0, [x24, #108]
    e074:	bl	e544 <ZSTD_endStream@@Base+0x5f0>
    e078:	str	x0, [x19, #696]
    e07c:	stur	x22, [x29, #-48]
    e080:	str	x24, [sp, #40]
    e084:	ldr	w8, [x24, #4]!
    e088:	mov	w9, #0x1                   	// #1
    e08c:	mov	w10, #0x20000               	// #131072
    e090:	mov	w11, #0x3                   	// #3
    e094:	lsl	x8, x9, x8
    e098:	ldr	w9, [x24, #16]
    e09c:	cmp	x8, x21
    e0a0:	csel	x8, x8, x21, cc  // cc = lo, ul, last
    e0a4:	cmp	x21, #0x0
    e0a8:	csinc	x26, x8, xzr, ne  // ne = any
    e0ac:	cmp	x26, #0x20, lsl #12
    e0b0:	csel	x25, x26, x10, cc  // cc = lo, ul, last
    e0b4:	cmp	w9, #0x3
    e0b8:	cinc	x8, x11, ne  // ne = any
    e0bc:	add	x0, x25, #0x20
    e0c0:	str	x21, [sp, #16]
    e0c4:	udiv	x21, x25, x8
    e0c8:	stur	x0, [x29, #-40]
    e0cc:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    e0d0:	lsl	x27, x21, #3
    e0d4:	mov	x0, x27
    e0d8:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    e0dc:	mov	x0, x21
    e0e0:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    e0e4:	cmp	w28, #0x1
    e0e8:	str	x21, [sp, #24]
    e0ec:	add	x8, x21, x21, lsl #1
    e0f0:	mov	x21, x27
    e0f4:	str	x8, [sp, #56]
    e0f8:	b.ne	e10c <ZSTD_endStream@@Base+0x1b8>  // b.any
    e0fc:	mov	x0, x25
    e100:	bl	4930 <ZSTD_compressBound@plt>
    e104:	add	x23, x0, #0x1
    e108:	b	e110 <ZSTD_endStream@@Base+0x1bc>
    e10c:	mov	x23, xzr
    e110:	add	x8, x25, x26
    e114:	cmp	w28, #0x1
    e118:	mov	w1, #0x1                   	// #1
    e11c:	mov	x0, x24
    e120:	csel	x22, x8, xzr, eq  // eq = none
    e124:	str	x24, [sp, #48]
    e128:	bl	b54c <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x124>
    e12c:	ldur	x28, [x29, #-48]
    e130:	mov	x26, x0
    e134:	sub	x0, x29, #0x20
    e138:	mov	x1, x25
    e13c:	ldr	x8, [x28, #16]
    e140:	ldr	q0, [x28]
    e144:	stur	x8, [x29, #-16]
    e148:	stur	q0, [x29, #-32]
    e14c:	bl	25ff4 <ZSTD_endStream@@Base+0x180a0>
    e150:	ldp	q1, q0, [x19, #768]
    e154:	mov	x24, x0
    e158:	sub	x0, x29, #0x20
    e15c:	stp	q1, q0, [x29, #-32]
    e160:	bl	e55c <ZSTD_endStream@@Base+0x608>
    e164:	cmp	w0, #0x0
    e168:	cset	w8, ne  // ne = any
    e16c:	mov	x0, x20
    e170:	str	w8, [sp, #36]
    e174:	bl	e574 <ZSTD_endStream@@Base+0x620>
    e178:	ldr	x27, [x19, #520]
    e17c:	mov	x0, x22
    e180:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    e184:	mov	x0, x23
    e188:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    e18c:	ldr	x8, [x28, #16]
    e190:	ldr	q0, [x28]
    e194:	sub	x0, x29, #0x20
    e198:	stur	x8, [x29, #-16]
    e19c:	stur	q0, [x29, #-32]
    e1a0:	bl	25f90 <ZSTD_endStream@@Base+0x1803c>
    e1a4:	add	x8, x24, x24, lsl #1
    e1a8:	str	x24, [sp, #8]
    e1ac:	lsl	x24, x8, #2
    e1b0:	mov	x28, x0
    e1b4:	mov	x0, x24
    e1b8:	bl	b548 <ZSTD_estimateCCtxSize_usingCCtxParams@@Base+0x120>
    e1bc:	cmp	x27, #0x0
    e1c0:	mov	w8, #0x4058                	// #16472
    e1c4:	mov	w9, #0x3be0                	// #15328
    e1c8:	ldur	x10, [x29, #-40]
    e1cc:	csel	x8, x9, x8, eq  // eq = none
    e1d0:	ldr	x9, [sp, #56]
    e1d4:	mov	x0, x20
    e1d8:	add	x10, x21, x10
    e1dc:	mov	x27, x21
    e1e0:	add	x9, x10, x9
    e1e4:	add	x9, x9, x26
    e1e8:	add	x9, x9, x22
    e1ec:	add	x9, x9, x23
    e1f0:	add	x8, x9, x8
    e1f4:	add	x8, x8, x28
    e1f8:	add	x26, x8, x24
    e1fc:	bl	a244 <ZSTD_sizeof_CCtx@@Base+0x64>
    e200:	mov	x28, x0
    e204:	mov	x0, x20
    e208:	mov	x1, x26
    e20c:	bl	e5b0 <ZSTD_endStream@@Base+0x65c>
    e210:	cmp	x28, x26
    e214:	b.cc	e22c <ZSTD_endStream@@Base+0x2d8>  // b.lo, b.ul, b.last
    e218:	cbnz	w0, e22c <ZSTD_endStream@@Base+0x2d8>
    e21c:	mov	x28, x24
    e220:	ldp	x21, x24, [sp, #40]
    e224:	mov	w8, wzr
    e228:	b	e2a4 <ZSTD_endStream@@Base+0x350>
    e22c:	ldr	x8, [x19, #520]
    e230:	cbz	x8, e244 <ZSTD_endStream@@Base+0x2f0>
    e234:	mov	x28, x24
    e238:	mov	x26, #0xffffffffffffffc0    	// #-64
    e23c:	mov	w8, #0x1                   	// #1
    e240:	b	e2a0 <ZSTD_endStream@@Base+0x34c>
    e244:	ldr	x8, [x19, #512]
    e248:	ldr	q0, [x19, #496]
    e24c:	sub	x1, x29, #0x20
    e250:	mov	x0, x20
    e254:	mov	x28, x24
    e258:	stur	x8, [x29, #-16]
    e25c:	stur	q0, [x29, #-32]
    e260:	bl	ce6c <ZSTD_createCDict_byReference@@Base+0x70>
    e264:	ldr	x8, [x19, #512]
    e268:	ldr	q0, [x19, #496]
    e26c:	sub	x2, x29, #0x20
    e270:	mov	x0, x20
    e274:	mov	x1, x26
    e278:	stur	x8, [x29, #-16]
    e27c:	stur	q0, [x29, #-32]
    e280:	bl	e5e0 <ZSTD_endStream@@Base+0x68c>
    e284:	mov	x26, x0
    e288:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    e28c:	cmp	w0, #0x0
    e290:	cset	w8, ne  // ne = any
    e294:	cbz	w0, e4b0 <ZSTD_endStream@@Base+0x55c>
    e298:	mov	w9, #0x1                   	// #1
    e29c:	str	w9, [sp, #36]
    e2a0:	ldp	x21, x24, [sp, #40]
    e2a4:	cbnz	w8, e48c <ZSTD_endStream@@Base+0x538>
    e2a8:	add	x8, x19, #0x300
    e2ac:	mov	x0, x20
    e2b0:	str	x8, [sp, #56]
    e2b4:	bl	dfd0 <ZSTD_endStream@@Base+0x7c>
    e2b8:	ldr	q0, [x21]
    e2bc:	add	x8, x19, #0x3b8
    e2c0:	add	x9, x19, #0x3c4
    e2c4:	str	q0, [x19, #160]
    e2c8:	ldp	q1, q0, [x21, #48]
    e2cc:	ldp	q3, q2, [x21, #16]
    e2d0:	stp	q1, q0, [x19, #208]
    e2d4:	stp	q3, q2, [x19, #176]
    e2d8:	ldp	q0, q1, [x21, #112]
    e2dc:	ldp	q2, q3, [x21, #80]
    e2e0:	stp	q0, q1, [x19, #272]
    e2e4:	stp	q2, q3, [x19, #240]
    e2e8:	ldr	x10, [sp, #16]
    e2ec:	ldur	q0, [x24, #12]
    e2f0:	ldr	q1, [x24]
    e2f4:	adds	x10, x10, #0x1
    e2f8:	str	q0, [x9]
    e2fc:	str	q1, [x8]
    e300:	stp	xzr, xzr, [x19, #392]
    e304:	str	x10, [x19, #384]
    e308:	b.cc	e310 <ZSTD_endStream@@Base+0x3bc>  // b.lo, b.ul, b.last
    e30c:	str	wzr, [x19, #192]
    e310:	add	x0, x19, #0x198
    e314:	mov	x1, xzr
    e318:	str	x25, [x19, #376]
    e31c:	bl	660c <ZSTD_initDStream_usingDDict@plt+0x1afc>
    e320:	ldr	x0, [x19, #752]
    e324:	mov	w8, #0x1                   	// #1
    e328:	str	w8, [x19]
    e32c:	str	wzr, [x19, #304]
    e330:	bl	e644 <ZSTD_endStream@@Base+0x6f0>
    e334:	ldur	x1, [x29, #-40]
    e338:	mov	x0, x20
    e33c:	bl	e67c <ZSTD_endStream@@Base+0x728>
    e340:	str	x0, [x19, #584]
    e344:	mov	x0, x20
    e348:	mov	x1, x22
    e34c:	str	x25, [x19, #632]
    e350:	str	x22, [x19, #1000]
    e354:	bl	e67c <ZSTD_endStream@@Base+0x728>
    e358:	str	x0, [x19, #992]
    e35c:	mov	x0, x20
    e360:	mov	x1, x23
    e364:	str	x23, [x19, #1040]
    e368:	bl	e67c <ZSTD_endStream@@Base+0x728>
    e36c:	ldur	x22, [x29, #-48]
    e370:	str	x0, [x19, #1032]
    e374:	ldr	w8, [x22]
    e378:	cbz	w8, e3a8 <ZSTD_endStream@@Base+0x454>
    e37c:	ldp	w8, w9, [x21, #100]
    e380:	mov	x0, x20
    e384:	sub	w8, w8, w9
    e388:	mov	w9, #0x1                   	// #1
    e38c:	lsl	x23, x9, x8
    e390:	mov	x1, x23
    e394:	bl	e67c <ZSTD_endStream@@Base+0x728>
    e398:	mov	w1, wzr
    e39c:	mov	x2, x23
    e3a0:	str	x0, [x19, #688]
    e3a4:	bl	46a0 <memset@plt>
    e3a8:	mov	x0, x19
    e3ac:	mov	x1, xzr
    e3b0:	mov	x2, xzr
    e3b4:	bl	bd9c <ZSTD_compress2@@Base+0xf0>
    e3b8:	ldr	x23, [sp, #24]
    e3bc:	mov	x0, x20
    e3c0:	mov	x1, x23
    e3c4:	str	x23, [x19, #624]
    e3c8:	bl	e67c <ZSTD_endStream@@Base+0x728>
    e3cc:	str	x0, [x19, #600]
    e3d0:	mov	x0, x20
    e3d4:	mov	x1, x23
    e3d8:	bl	e67c <ZSTD_endStream@@Base+0x728>
    e3dc:	str	x0, [x19, #608]
    e3e0:	mov	x0, x20
    e3e4:	mov	x1, x23
    e3e8:	bl	e67c <ZSTD_endStream@@Base+0x728>
    e3ec:	str	x0, [x19, #616]
    e3f0:	mov	x0, x20
    e3f4:	mov	x1, x27
    e3f8:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e3fc:	str	x0, [x19, #568]
    e400:	ldr	x0, [sp, #56]
    e404:	ldp	w3, w4, [sp, #32]
    e408:	mov	w5, #0x1                   	// #1
    e40c:	mov	x1, x20
    e410:	mov	x2, x24
    e414:	bl	e6d0 <ZSTD_endStream@@Base+0x77c>
    e418:	mov	x23, x0
    e41c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    e420:	cmp	w0, #0x0
    e424:	csel	x26, x26, x23, eq  // eq = none
    e428:	cbnz	w0, e48c <ZSTD_endStream@@Base+0x538>
    e42c:	ldr	w8, [x22]
    e430:	cbz	w8, e488 <ZSTD_endStream@@Base+0x534>
    e434:	ldr	w8, [x21, #100]
    e438:	mov	w9, #0x8                   	// #8
    e43c:	mov	x0, x20
    e440:	lsl	x21, x9, x8
    e444:	mov	x1, x21
    e448:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e44c:	add	x22, x19, #0x288
    e450:	mov	w1, wzr
    e454:	mov	x2, x21
    e458:	str	x0, [x22, #32]
    e45c:	bl	46a0 <memset@plt>
    e460:	mov	x0, x20
    e464:	mov	x1, x28
    e468:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e46c:	ldr	x8, [sp, #8]
    e470:	str	x0, [x19, #704]
    e474:	movi	v0.2d, #0x0
    e478:	mov	x0, x22
    e47c:	str	x8, [x19, #712]
    e480:	stp	q0, q0, [x22]
    e484:	bl	e8ac <ZSTD_endStream@@Base+0x958>
    e488:	mov	x26, xzr
    e48c:	mov	x0, x26
    e490:	ldp	x20, x19, [sp, #192]
    e494:	ldp	x22, x21, [sp, #176]
    e498:	ldp	x24, x23, [sp, #160]
    e49c:	ldp	x26, x25, [sp, #144]
    e4a0:	ldp	x28, x27, [sp, #128]
    e4a4:	ldp	x29, x30, [sp, #112]
    e4a8:	add	sp, sp, #0xd0
    e4ac:	ret
    e4b0:	mov	w1, #0x11f0                	// #4592
    e4b4:	mov	x0, x20
    e4b8:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    e4bc:	str	x0, [x19, #752]
    e4c0:	ldp	x21, x24, [sp, #40]
    e4c4:	cbz	x0, e508 <ZSTD_endStream@@Base+0x5b4>
    e4c8:	mov	w1, #0x11f0                	// #4592
    e4cc:	mov	x0, x20
    e4d0:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    e4d4:	str	x0, [x19, #760]
    e4d8:	cbz	x0, e508 <ZSTD_endStream@@Base+0x5b4>
    e4dc:	mov	w1, #0x1800                	// #6144
    e4e0:	mov	x0, x20
    e4e4:	bl	a050 <ZSTD_initStaticCCtx@@Base+0x110>
    e4e8:	ldr	x9, [x19, #760]
    e4ec:	mov	w8, #0x1                   	// #1
    e4f0:	str	x0, [x19, #984]
    e4f4:	cbz	x9, e51c <ZSTD_endStream@@Base+0x5c8>
    e4f8:	mov	w8, #0x1                   	// #1
    e4fc:	str	w8, [sp, #36]
    e500:	mov	w8, wzr
    e504:	b	e2a4 <ZSTD_endStream@@Base+0x350>
    e508:	mov	x26, #0xffffffffffffffc0    	// #-64
    e50c:	mov	w8, #0x1                   	// #1
    e510:	mov	w9, #0x1                   	// #1
    e514:	str	w9, [sp, #36]
    e518:	b	e2a4 <ZSTD_endStream@@Base+0x350>
    e51c:	mov	x26, #0xffffffffffffffc0    	// #-64
    e520:	b	e510 <ZSTD_endStream@@Base+0x5bc>
    e524:	ldr	x8, [x0, #16]
    e528:	str	x8, [x0, #32]
    e52c:	ret
    e530:	ldp	x8, x9, [x0, #24]
    e534:	cmp	x9, x8
    e538:	b.cs	e540 <ZSTD_endStream@@Base+0x5ec>  // b.hs, b.nlast
    e53c:	str	x8, [x0, #32]
    e540:	ret
    e544:	stp	x29, x30, [sp, #-16]!
    e548:	sub	w0, w0, #0x1
    e54c:	mov	x29, sp
    e550:	bl	e8c0 <ZSTD_endStream@@Base+0x96c>
    e554:	ldp	x29, x30, [sp], #16
    e558:	ret
    e55c:	ldp	x8, x9, [x0]
    e560:	sub	x8, x8, x9
    e564:	mov	w9, #0xdf000000            	// #-553648128
    e568:	cmp	x8, x9
    e56c:	cset	w0, hi  // hi = pmore
    e570:	ret
    e574:	stp	x29, x30, [sp, #-32]!
    e578:	mov	x1, xzr
    e57c:	str	x19, [sp, #16]
    e580:	mov	x29, sp
    e584:	mov	x19, x0
    e588:	bl	e900 <ZSTD_endStream@@Base+0x9ac>
    e58c:	cbz	w0, e59c <ZSTD_endStream@@Base+0x648>
    e590:	ldr	w8, [x19, #52]
    e594:	add	w8, w8, #0x1
    e598:	b	e5a0 <ZSTD_endStream@@Base+0x64c>
    e59c:	mov	w8, wzr
    e5a0:	str	w8, [x19, #52]
    e5a4:	ldr	x19, [sp, #16]
    e5a8:	ldp	x29, x30, [sp], #32
    e5ac:	ret
    e5b0:	stp	x29, x30, [sp, #-32]!
    e5b4:	str	x19, [sp, #16]
    e5b8:	mov	x29, sp
    e5bc:	mov	x19, x0
    e5c0:	bl	e900 <ZSTD_endStream@@Base+0x9ac>
    e5c4:	cbz	w0, e5d4 <ZSTD_endStream@@Base+0x680>
    e5c8:	ldr	w8, [x19, #52]
    e5cc:	cmp	w8, #0x80
    e5d0:	cset	w0, gt
    e5d4:	ldr	x19, [sp, #16]
    e5d8:	ldp	x29, x30, [sp], #32
    e5dc:	ret
    e5e0:	sub	sp, sp, #0x40
    e5e4:	stp	x29, x30, [sp, #32]
    e5e8:	stp	x20, x19, [sp, #48]
    e5ec:	ldr	x8, [x2, #16]
    e5f0:	ldr	q0, [x2]
    e5f4:	mov	x19, x1
    e5f8:	mov	x20, x0
    e5fc:	mov	x1, sp
    e600:	mov	x0, x19
    e604:	add	x29, sp, #0x20
    e608:	str	x8, [sp, #16]
    e60c:	str	q0, [sp]
    e610:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
    e614:	cbz	x0, e630 <ZSTD_endStream@@Base+0x6dc>
    e618:	mov	x1, x0
    e61c:	mov	x0, x20
    e620:	mov	x2, x19
    e624:	bl	a018 <ZSTD_initStaticCCtx@@Base+0xd8>
    e628:	mov	x0, xzr
    e62c:	b	e634 <ZSTD_endStream@@Base+0x6e0>
    e630:	mov	x0, #0xffffffffffffffc0    	// #-64
    e634:	ldp	x20, x19, [sp, #48]
    e638:	ldp	x29, x30, [sp, #32]
    e63c:	add	sp, sp, #0x40
    e640:	ret
    e644:	mov	w9, #0x11e4                	// #4580
    e648:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    e64c:	mov	x8, xzr
    e650:	add	x9, x0, x9
    e654:	add	x10, x10, #0x278
    e658:	ldr	w11, [x10, x8]
    e65c:	str	w11, [x9, x8]
    e660:	add	x8, x8, #0x4
    e664:	cmp	x8, #0xc
    e668:	b.ne	e658 <ZSTD_endStream@@Base+0x704>  // b.any
    e66c:	str	wzr, [x0, #1024]
    e670:	str	xzr, [x0, #4568]
    e674:	str	wzr, [x0, #4576]
    e678:	ret
    e67c:	stp	x29, x30, [sp, #-16]!
    e680:	mov	w2, #0x1                   	// #1
    e684:	mov	x29, sp
    e688:	bl	e918 <ZSTD_endStream@@Base+0x9c4>
    e68c:	ldp	x29, x30, [sp], #16
    e690:	ret
    e694:	stp	x29, x30, [sp, #-32]!
    e698:	mov	x8, x1
    e69c:	str	x19, [sp, #16]
    e6a0:	mov	x19, x0
    e6a4:	mov	w1, #0x4                   	// #4
    e6a8:	mov	x0, x8
    e6ac:	mov	x29, sp
    e6b0:	bl	c934 <ZSTD_estimateCDictSize_advanced@@Base+0x58>
    e6b4:	mov	x1, x0
    e6b8:	mov	w2, #0x2                   	// #2
    e6bc:	mov	x0, x19
    e6c0:	bl	e918 <ZSTD_endStream@@Base+0x9c4>
    e6c4:	ldr	x19, [sp, #16]
    e6c8:	ldp	x29, x30, [sp], #32
    e6cc:	ret
    e6d0:	stp	x29, x30, [sp, #-96]!
    e6d4:	stp	x28, x27, [sp, #16]
    e6d8:	stp	x26, x25, [sp, #32]
    e6dc:	stp	x24, x23, [sp, #48]
    e6e0:	stp	x22, x21, [sp, #64]
    e6e4:	stp	x20, x19, [sp, #80]
    e6e8:	ldr	w8, [x2, #24]
    e6ec:	mov	w22, w5
    e6f0:	mov	w23, w3
    e6f4:	mov	x20, x2
    e6f8:	mov	x19, x1
    e6fc:	cmp	w8, #0x1
    e700:	mov	x21, x0
    e704:	mov	x29, sp
    e708:	b.ne	e714 <ZSTD_endStream@@Base+0x7c0>  // b.any
    e70c:	mov	x24, xzr
    e710:	b	e720 <ZSTD_endStream@@Base+0x7cc>
    e714:	ldr	w8, [x20, #4]
    e718:	mov	w9, #0x4                   	// #4
    e71c:	lsl	x24, x9, x8
    e720:	ldr	w25, [x20, #8]
    e724:	cmp	w22, #0x1
    e728:	b.ne	e74c <ZSTD_endStream@@Base+0x7f8>  // b.any
    e72c:	ldr	w8, [x20, #16]
    e730:	cmp	w8, #0x3
    e734:	b.ne	e74c <ZSTD_endStream@@Base+0x7f8>  // b.any
    e738:	ldr	w8, [x20]
    e73c:	mov	w9, #0x11                  	// #17
    e740:	cmp	w8, #0x11
    e744:	csel	w26, w8, w9, cc  // cc = lo, ul, last
    e748:	b	e750 <ZSTD_endStream@@Base+0x7fc>
    e74c:	mov	w26, wzr
    e750:	cmp	w4, #0x1
    e754:	mov	w27, w26
    e758:	b.ne	e780 <ZSTD_endStream@@Base+0x82c>  // b.any
    e75c:	movi	v0.2d, #0x0
    e760:	stp	q0, q0, [x21]
    e764:	ldr	x8, [x21, #8]
    e768:	mov	x9, #0x100000001           	// #4294967297
    e76c:	mov	x0, x19
    e770:	str	x9, [x21, #24]
    e774:	add	x8, x8, #0x1
    e778:	str	x8, [x21]
    e77c:	bl	e524 <ZSTD_endStream@@Base+0x5d0>
    e780:	mov	x0, x21
    e784:	str	w26, [x21, #40]
    e788:	bl	e9cc <ZSTD_endStream@@Base+0xa78>
    e78c:	mov	x0, x19
    e790:	bl	e9fc <ZSTD_endStream@@Base+0xaa8>
    e794:	mov	w28, #0x4                   	// #4
    e798:	lsl	x1, x28, x25
    e79c:	mov	x0, x19
    e7a0:	bl	ea08 <ZSTD_endStream@@Base+0xab4>
    e7a4:	str	x0, [x21, #48]
    e7a8:	mov	x0, x19
    e7ac:	mov	x1, x24
    e7b0:	bl	ea08 <ZSTD_endStream@@Base+0xab4>
    e7b4:	lsl	x8, x28, x27
    e7b8:	cmp	w26, #0x0
    e7bc:	str	x0, [x21, #64]
    e7c0:	csel	x1, xzr, x8, eq  // eq = none
    e7c4:	mov	x0, x19
    e7c8:	bl	ea08 <ZSTD_endStream@@Base+0xab4>
    e7cc:	str	x0, [x21, #56]
    e7d0:	mov	x0, x19
    e7d4:	bl	ea60 <ZSTD_endStream@@Base+0xb0c>
    e7d8:	cbz	w0, e7e4 <ZSTD_endStream@@Base+0x890>
    e7dc:	mov	x0, #0xffffffffffffffc0    	// #-64
    e7e0:	b	e890 <ZSTD_endStream@@Base+0x93c>
    e7e4:	cmp	w23, #0x1
    e7e8:	b.eq	e7f4 <ZSTD_endStream@@Base+0x8a0>  // b.none
    e7ec:	mov	x0, x19
    e7f0:	bl	ea68 <ZSTD_endStream@@Base+0xb14>
    e7f4:	cmp	w22, #0x1
    e7f8:	b.ne	e86c <ZSTD_endStream@@Base+0x918>  // b.any
    e7fc:	ldr	w8, [x20, #24]
    e800:	cmp	w8, #0x7
    e804:	b.cc	e86c <ZSTD_endStream@@Base+0x918>  // b.lo, b.ul, b.last
    e808:	mov	w1, #0x400                 	// #1024
    e80c:	mov	x0, x19
    e810:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e814:	str	x0, [x21, #72]
    e818:	mov	w1, #0x90                  	// #144
    e81c:	mov	x0, x19
    e820:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e824:	str	x0, [x21, #80]
    e828:	mov	w1, #0xd4                  	// #212
    e82c:	mov	x0, x19
    e830:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e834:	str	x0, [x21, #88]
    e838:	mov	w1, #0x80                  	// #128
    e83c:	mov	x0, x19
    e840:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e844:	str	x0, [x21, #96]
    e848:	mov	w1, #0x8008                	// #32776
    e84c:	mov	x0, x19
    e850:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e854:	mov	w1, #0xc01c                	// #49180
    e858:	str	x0, [x21, #104]
    e85c:	movk	w1, #0x1, lsl #16
    e860:	mov	x0, x19
    e864:	bl	e694 <ZSTD_endStream@@Base+0x740>
    e868:	str	x0, [x21, #112]
    e86c:	ldur	q0, [x20, #12]
    e870:	ldr	q1, [x20]
    e874:	mov	x0, x19
    e878:	stur	q0, [x21, #196]
    e87c:	stur	q1, [x21, #184]
    e880:	bl	ea60 <ZSTD_endStream@@Base+0xb0c>
    e884:	cmp	w0, #0x0
    e888:	mov	x8, #0xffffffffffffffc0    	// #-64
    e88c:	csel	x0, xzr, x8, eq  // eq = none
    e890:	ldp	x20, x19, [sp, #80]
    e894:	ldp	x22, x21, [sp, #64]
    e898:	ldp	x24, x23, [sp, #48]
    e89c:	ldp	x26, x25, [sp, #32]
    e8a0:	ldp	x28, x27, [sp, #16]
    e8a4:	ldp	x29, x30, [sp], #96
    e8a8:	ret
    e8ac:	ldr	w8, [x0]
    e8b0:	ldr	w9, [x0, #8]
    e8b4:	sub	w8, w8, w9
    e8b8:	stp	w8, w8, [x0, #24]
    e8bc:	ret
    e8c0:	cbz	x0, e8f8 <ZSTD_endStream@@Base+0x9a4>
    e8c4:	mov	x9, #0x6463                	// #25699
    e8c8:	movk	x9, #0xb7a5, lsl #16
    e8cc:	movk	x9, #0xbcdc, lsl #32
    e8d0:	mov	x8, x0
    e8d4:	movk	x9, #0xcf1b, lsl #48
    e8d8:	mov	w0, #0x1                   	// #1
    e8dc:	tst	x8, #0x1
    e8e0:	csinc	x10, x9, xzr, ne  // ne = any
    e8e4:	lsr	x8, x8, #1
    e8e8:	mul	x0, x10, x0
    e8ec:	mul	x9, x9, x9
    e8f0:	cbnz	x8, e8dc <ZSTD_endStream@@Base+0x988>
    e8f4:	ret
    e8f8:	mov	w0, #0x1                   	// #1
    e8fc:	ret
    e900:	stp	x29, x30, [sp, #-16]!
    e904:	add	x1, x1, x1, lsl #1
    e908:	mov	x29, sp
    e90c:	bl	a0d0 <ZSTD_initStaticCCtx@@Base+0x190>
    e910:	ldp	x29, x30, [sp], #16
    e914:	ret
    e918:	stp	x29, x30, [sp, #-48]!
    e91c:	stp	x20, x19, [sp, #32]
    e920:	str	x21, [sp, #16]
    e924:	ldr	x21, [x0, #24]
    e928:	mov	x20, x1
    e92c:	mov	w1, w2
    e930:	mov	x29, sp
    e934:	mov	x19, x0
    e938:	bl	e980 <ZSTD_endStream@@Base+0xa2c>
    e93c:	ldr	x8, [x19, #40]
    e940:	sub	x0, x8, x20
    e944:	cmp	x0, x21
    e948:	b.cs	e95c <ZSTD_endStream@@Base+0xa08>  // b.hs, b.nlast
    e94c:	mov	w8, #0x1                   	// #1
    e950:	mov	x0, xzr
    e954:	str	w8, [x19, #48]
    e958:	b	e970 <ZSTD_endStream@@Base+0xa1c>
    e95c:	ldr	x8, [x19, #32]
    e960:	cmp	x0, x8
    e964:	b.cs	e96c <ZSTD_endStream@@Base+0xa18>  // b.hs, b.nlast
    e968:	str	x0, [x19, #32]
    e96c:	str	x0, [x19, #40]
    e970:	ldp	x20, x19, [sp, #32]
    e974:	ldr	x21, [sp, #16]
    e978:	ldp	x29, x30, [sp], #48
    e97c:	ret
    e980:	ldr	w8, [x0, #56]
    e984:	cmp	w8, w1
    e988:	b.cs	e9c8 <ZSTD_endStream@@Base+0xa74>  // b.hs, b.nlast
    e98c:	cbz	w1, e99c <ZSTD_endStream@@Base+0xa48>
    e990:	cbnz	w8, e99c <ZSTD_endStream@@Base+0xa48>
    e994:	ldr	x9, [x0, #16]
    e998:	str	x9, [x0, #32]
    e99c:	cmp	w1, #0x2
    e9a0:	b.cc	e9c4 <ZSTD_endStream@@Base+0xa70>  // b.lo, b.ul, b.last
    e9a4:	cmp	w8, #0x1
    e9a8:	b.hi	e9c4 <ZSTD_endStream@@Base+0xa70>  // b.pmore
    e9ac:	ldp	x9, x8, [x0, #32]
    e9b0:	and	x8, x8, #0xfffffffffffffffc
    e9b4:	cmp	x8, x9
    e9b8:	str	x8, [x0, #40]
    e9bc:	b.cs	e9c4 <ZSTD_endStream@@Base+0xa70>  // b.hs, b.nlast
    e9c0:	str	x8, [x0, #32]
    e9c4:	str	w1, [x0, #56]
    e9c8:	ret
    e9cc:	stp	x29, x30, [sp, #-32]!
    e9d0:	str	x19, [sp, #16]
    e9d4:	mov	x29, sp
    e9d8:	mov	x19, x0
    e9dc:	bl	e8ac <ZSTD_endStream@@Base+0x958>
    e9e0:	ldr	w8, [x19, #24]
    e9e4:	str	wzr, [x19, #124]
    e9e8:	str	xzr, [x19, #176]
    e9ec:	stp	wzr, w8, [x19, #32]
    e9f0:	ldr	x19, [sp, #16]
    e9f4:	ldp	x29, x30, [sp], #32
    e9f8:	ret
    e9fc:	ldr	x8, [x0, #16]
    ea00:	str	x8, [x0, #24]
    ea04:	ret
    ea08:	stp	x29, x30, [sp, #-48]!
    ea0c:	stp	x22, x21, [sp, #16]
    ea10:	stp	x20, x19, [sp, #32]
    ea14:	ldr	x19, [x0, #24]
    ea18:	ldr	x22, [x0, #40]
    ea1c:	mov	x29, sp
    ea20:	mov	x20, x0
    ea24:	add	x21, x19, x1
    ea28:	mov	w1, #0x2                   	// #2
    ea2c:	bl	e980 <ZSTD_endStream@@Base+0xa2c>
    ea30:	cmp	x21, x22
    ea34:	b.ls	ea48 <ZSTD_endStream@@Base+0xaf4>  // b.plast
    ea38:	mov	w8, #0x1                   	// #1
    ea3c:	mov	x19, xzr
    ea40:	str	w8, [x20, #48]
    ea44:	b	ea4c <ZSTD_endStream@@Base+0xaf8>
    ea48:	str	x21, [x20, #24]
    ea4c:	mov	x0, x19
    ea50:	ldp	x20, x19, [sp, #32]
    ea54:	ldp	x22, x21, [sp, #16]
    ea58:	ldp	x29, x30, [sp], #48
    ea5c:	ret
    ea60:	ldr	w0, [x0, #48]
    ea64:	ret
    ea68:	stp	x29, x30, [sp, #-32]!
    ea6c:	str	x19, [sp, #16]
    ea70:	mov	x19, x0
    ea74:	ldr	x0, [x0, #32]
    ea78:	ldr	x8, [x19, #24]
    ea7c:	mov	x29, sp
    ea80:	cmp	x0, x8
    ea84:	b.cs	ea94 <ZSTD_endStream@@Base+0xb40>  // b.hs, b.nlast
    ea88:	sub	x2, x8, x0
    ea8c:	mov	w1, wzr
    ea90:	bl	46a0 <memset@plt>
    ea94:	mov	x0, x19
    ea98:	bl	e530 <ZSTD_endStream@@Base+0x5dc>
    ea9c:	ldr	x19, [sp, #16]
    eaa0:	ldp	x29, x30, [sp], #32
    eaa4:	ret
    eaa8:	stp	x29, x30, [sp, #-16]!
    eaac:	mov	x29, sp
    eab0:	bl	eabc <ZSTD_endStream@@Base+0xb68>
    eab4:	ldp	x29, x30, [sp], #16
    eab8:	ret
    eabc:	strh	w1, [x0]
    eac0:	ret
    eac4:	stp	x29, x30, [sp, #-96]!
    eac8:	cmp	w4, #0xff
    eacc:	mov	w8, #0x2                   	// #2
    ead0:	str	x27, [sp, #16]
    ead4:	stp	x26, x25, [sp, #32]
    ead8:	stp	x24, x23, [sp, #48]
    eadc:	stp	x22, x21, [sp, #64]
    eae0:	stp	x20, x19, [sp, #80]
    eae4:	lsr	w9, w4, #16
    eae8:	cset	w12, hi  // hi = pmore
    eaec:	csinc	w13, w8, wzr, hi  // hi = pmore
    eaf0:	cmp	w4, #0x0
    eaf4:	csel	w12, w12, w13, eq  // eq = none
    eaf8:	cmp	w9, #0x0
    eafc:	ldp	w9, w10, [x2, #36]
    eb00:	ldr	w26, [x2, #4]
    eb04:	ldr	w13, [x2, #32]
    eb08:	mov	w11, #0x1                   	// #1
    eb0c:	cinc	w12, w12, ne  // ne = any
    eb10:	cmp	w10, #0x0
    eb14:	lsl	w10, w11, w26
    eb18:	csel	w25, w12, wzr, eq  // eq = none
    eb1c:	cmp	w13, #0x0
    eb20:	cset	w11, ne  // ne = any
    eb24:	cmp	x10, x3
    eb28:	cset	w10, cs  // cs = hs, nlast
    eb2c:	mov	w22, w4
    eb30:	mov	x19, x3
    eb34:	mov	x20, x0
    eb38:	and	w23, w11, w10
    eb3c:	mov	x29, sp
    eb40:	cbz	w13, eb6c <ZSTD_endStream@@Base+0xc18>
    eb44:	lsr	x10, x19, #8
    eb48:	cmp	x10, #0x100
    eb4c:	mov	w11, #0xfffffffe            	// #-2
    eb50:	cset	w10, hi  // hi = pmore
    eb54:	csinc	w8, w8, wzr, hi  // hi = pmore
    eb58:	cmp	x19, #0xff
    eb5c:	csel	w8, w10, w8, ls  // ls = plast
    eb60:	cmp	x19, x11
    eb64:	cinc	w24, w8, hi  // hi = pmore
    eb68:	b	eb70 <ZSTD_endStream@@Base+0xc1c>
    eb6c:	mov	w24, wzr
    eb70:	cmp	w9, #0x0
    eb74:	mov	w9, #0x20                  	// #32
    eb78:	cset	w8, gt
    eb7c:	cmp	w23, #0x0
    eb80:	csel	w9, w9, wzr, ne  // ne = any
    eb84:	cmp	x1, #0x12
    eb88:	b.cs	eb94 <ZSTD_endStream@@Base+0xc40>  // b.hs, b.nlast
    eb8c:	mov	x21, #0xffffffffffffffba    	// #-70
    eb90:	b	ec9c <ZSTD_endStream@@Base+0xd48>
    eb94:	ldr	w10, [x2]
    eb98:	add	w8, w25, w8, lsl #2
    eb9c:	orr	w27, w9, w8
    eba0:	bfi	w27, w24, #6, #3
    eba4:	cbz	w10, ebb0 <ZSTD_endStream@@Base+0xc5c>
    eba8:	mov	x8, xzr
    ebac:	b	ebc4 <ZSTD_endStream@@Base+0xc70>
    ebb0:	mov	w1, #0xb528                	// #46376
    ebb4:	movk	w1, #0xfd2f, lsl #16
    ebb8:	mov	x0, x20
    ebbc:	bl	f154 <ZSTD_endStream@@Base+0x1200>
    ebc0:	mov	w8, #0x4                   	// #4
    ebc4:	orr	x21, x8, #0x1
    ebc8:	strb	w27, [x20, x8]
    ebcc:	tbnz	w23, #0, ebe4 <ZSTD_endStream@@Base+0xc90>
    ebd0:	lsl	w8, w26, #3
    ebd4:	sub	w8, w8, #0x50
    ebd8:	add	x9, x21, #0x1
    ebdc:	strb	w8, [x20, x21]
    ebe0:	mov	x21, x9
    ebe4:	cmp	w25, #0x3
    ebe8:	b.eq	ec10 <ZSTD_endStream@@Base+0xcbc>  // b.none
    ebec:	cmp	w25, #0x2
    ebf0:	b.eq	ec4c <ZSTD_endStream@@Base+0xcf8>  // b.none
    ebf4:	cmp	w25, #0x1
    ebf8:	b.ne	ec20 <ZSTD_endStream@@Base+0xccc>  // b.any
    ebfc:	strb	w22, [x20, x21]
    ec00:	add	x21, x21, #0x1
    ec04:	cmp	w24, #0x1
    ec08:	b.ne	ec28 <ZSTD_endStream@@Base+0xcd4>  // b.any
    ec0c:	b	ec64 <ZSTD_endStream@@Base+0xd10>
    ec10:	add	x0, x20, x21
    ec14:	mov	w1, w22
    ec18:	bl	f154 <ZSTD_endStream@@Base+0x1200>
    ec1c:	add	x21, x21, #0x4
    ec20:	cmp	w24, #0x1
    ec24:	b.eq	ec64 <ZSTD_endStream@@Base+0xd10>  // b.none
    ec28:	cmp	w24, #0x2
    ec2c:	b.eq	ec78 <ZSTD_endStream@@Base+0xd24>  // b.none
    ec30:	cmp	w24, #0x3
    ec34:	b.ne	ec8c <ZSTD_endStream@@Base+0xd38>  // b.any
    ec38:	add	x0, x20, x21
    ec3c:	mov	x1, x19
    ec40:	bl	f168 <ZSTD_endStream@@Base+0x1214>
    ec44:	add	x21, x21, #0x8
    ec48:	b	ec9c <ZSTD_endStream@@Base+0xd48>
    ec4c:	add	x0, x20, x21
    ec50:	mov	w1, w22
    ec54:	bl	eaa8 <ZSTD_endStream@@Base+0xb54>
    ec58:	add	x21, x21, #0x2
    ec5c:	cmp	w24, #0x1
    ec60:	b.ne	ec28 <ZSTD_endStream@@Base+0xcd4>  // b.any
    ec64:	add	x0, x20, x21
    ec68:	sub	w1, w19, #0x100
    ec6c:	bl	eaa8 <ZSTD_endStream@@Base+0xb54>
    ec70:	add	x21, x21, #0x2
    ec74:	b	ec9c <ZSTD_endStream@@Base+0xd48>
    ec78:	add	x0, x20, x21
    ec7c:	mov	w1, w19
    ec80:	bl	f154 <ZSTD_endStream@@Base+0x1200>
    ec84:	add	x21, x21, #0x4
    ec88:	b	ec9c <ZSTD_endStream@@Base+0xd48>
    ec8c:	cbz	w23, ec9c <ZSTD_endStream@@Base+0xd48>
    ec90:	add	x8, x21, #0x1
    ec94:	strb	w19, [x20, x21]
    ec98:	mov	x21, x8
    ec9c:	mov	x0, x21
    eca0:	ldp	x20, x19, [sp, #80]
    eca4:	ldp	x22, x21, [sp, #64]
    eca8:	ldp	x24, x23, [sp, #48]
    ecac:	ldp	x26, x25, [sp, #32]
    ecb0:	ldr	x27, [sp, #16]
    ecb4:	ldp	x29, x30, [sp], #96
    ecb8:	ret
    ecbc:	ldr	x8, [x0]
    ecc0:	cmp	x8, x1
    ecc4:	b.eq	ecfc <ZSTD_endStream@@Base+0xda8>  // b.none
    ecc8:	ldr	x10, [x0, #8]
    eccc:	ldr	w11, [x0, #24]
    ecd0:	sub	x9, x8, x10
    ecd4:	str	x10, [x0, #16]
    ecd8:	sub	x8, x1, x9
    ecdc:	sub	w10, w9, w11
    ece0:	cmp	w10, #0x7
    ece4:	str	x8, [x0, #8]
    ece8:	mov	w8, wzr
    ecec:	stp	w9, w11, [x0, #24]
    ecf0:	b.hi	ed00 <ZSTD_endStream@@Base+0xdac>  // b.pmore
    ecf4:	str	w9, [x0, #28]
    ecf8:	b	ed00 <ZSTD_endStream@@Base+0xdac>
    ecfc:	mov	w8, #0x1                   	// #1
    ed00:	ldr	x9, [x0, #16]
    ed04:	ldr	w11, [x0, #28]
    ed08:	add	x10, x1, x2
    ed0c:	str	x10, [x0]
    ed10:	add	x11, x9, x11
    ed14:	cmp	x10, x11
    ed18:	b.ls	ed3c <ZSTD_endStream@@Base+0xde8>  // b.plast
    ed1c:	ldr	w11, [x0, #24]
    ed20:	add	x12, x9, x11
    ed24:	cmp	x12, x1
    ed28:	b.ls	ed3c <ZSTD_endStream@@Base+0xde8>  // b.plast
    ed2c:	sub	x9, x10, x9
    ed30:	cmp	x9, x11
    ed34:	csel	w9, w11, w9, gt
    ed38:	str	w9, [x0, #28]
    ed3c:	mov	w0, w8
    ed40:	ret
    ed44:	sub	sp, sp, #0x60
    ed48:	stp	x29, x30, [sp, #32]
    ed4c:	str	x23, [sp, #48]
    ed50:	stp	x22, x21, [sp, #64]
    ed54:	stp	x20, x19, [sp, #80]
    ed58:	ldp	q1, q0, [x0]
    ed5c:	mov	x20, x1
    ed60:	mov	x19, x0
    ed64:	mov	x0, sp
    ed68:	mov	x1, x4
    ed6c:	add	x29, sp, #0x20
    ed70:	mov	x22, x3
    ed74:	mov	x21, x2
    ed78:	stp	q1, q0, [sp]
    ed7c:	bl	f18c <ZSTD_endStream@@Base+0x1238>
    ed80:	cbz	w0, ede4 <ZSTD_endStream@@Base+0xe90>
    ed84:	ldp	w8, w0, [x21, #4]
    ed88:	ldr	w1, [x21, #28]
    ed8c:	mov	w9, #0x1                   	// #1
    ed90:	lsl	w23, w9, w8
    ed94:	bl	e008 <ZSTD_endStream@@Base+0xb4>
    ed98:	mov	w1, w0
    ed9c:	mov	x0, x19
    eda0:	mov	w2, w23
    eda4:	mov	x3, x22
    eda8:	bl	f1a4 <ZSTD_endStream@@Base+0x1250>
    edac:	mov	w22, w0
    edb0:	mov	x0, x20
    edb4:	bl	e524 <ZSTD_endStream@@Base+0x5d0>
    edb8:	mov	x0, x19
    edbc:	mov	x1, x21
    edc0:	mov	w2, w22
    edc4:	bl	f1e8 <ZSTD_endStream@@Base+0x1294>
    edc8:	mov	x0, x20
    edcc:	bl	e530 <ZSTD_endStream@@Base+0x5dc>
    edd0:	ldr	w8, [x19, #36]
    edd4:	str	xzr, [x19, #176]
    edd8:	subs	w8, w8, w22
    eddc:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
    ede0:	stp	wzr, w8, [x19, #32]
    ede4:	ldp	x20, x19, [sp, #80]
    ede8:	ldp	x22, x21, [sp, #64]
    edec:	ldr	x23, [sp, #48]
    edf0:	ldp	x29, x30, [sp, #32]
    edf4:	add	sp, sp, #0x60
    edf8:	ret
    edfc:	sub	sp, sp, #0xa0
    ee00:	stp	x29, x30, [sp, #64]
    ee04:	stp	x28, x27, [sp, #80]
    ee08:	stp	x26, x25, [sp, #96]
    ee0c:	stp	x24, x23, [sp, #112]
    ee10:	stp	x22, x21, [sp, #128]
    ee14:	stp	x20, x19, [sp, #144]
    ee18:	ldr	w8, [x0, #164]
    ee1c:	ldr	x24, [x0, #376]
    ee20:	add	x29, sp, #0x40
    ee24:	add	x9, x0, #0xa0
    ee28:	stur	x9, [x29, #-8]
    ee2c:	mov	w9, #0x1                   	// #1
    ee30:	mov	x22, x4
    ee34:	mov	x21, x3
    ee38:	mov	x23, x2
    ee3c:	mov	x27, x1
    ee40:	mov	x20, x0
    ee44:	lsl	w8, w9, w8
    ee48:	str	w5, [sp, #12]
    ee4c:	stur	w8, [x29, #-12]
    ee50:	cbz	x4, ee6c <ZSTD_endStream@@Base+0xf18>
    ee54:	ldr	w8, [x20, #196]
    ee58:	cbz	w8, ee6c <ZSTD_endStream@@Base+0xf18>
    ee5c:	add	x0, x20, #0x198
    ee60:	mov	x1, x21
    ee64:	mov	x2, x22
    ee68:	bl	696c <ZSTD_initDStream_usingDDict@plt+0x1e5c>
    ee6c:	add	x8, x20, #0x300
    ee70:	stur	x8, [x29, #-24]
    ee74:	add	x8, x20, #0x138
    ee78:	str	x8, [sp, #32]
    ee7c:	add	x8, x20, #0x320
    ee80:	str	x8, [sp, #24]
    ee84:	add	x8, x20, #0x3b0
    ee88:	str	x8, [sp, #16]
    ee8c:	str	x27, [sp]
    ee90:	b	eea0 <ZSTD_endStream@@Base+0xf4c>
    ee94:	mov	x26, #0xffffffffffffffba    	// #-70
    ee98:	mov	w8, #0x1                   	// #1
    ee9c:	cbnz	w8, efe8 <ZSTD_endStream@@Base+0x1094>
    eea0:	cbz	x22, efc8 <ZSTD_endStream@@Base+0x1074>
    eea4:	cmp	x24, x22
    eea8:	cset	w28, cs  // cs = hs, nlast
    eeac:	cmp	x23, #0x6
    eeb0:	b.cc	ee94 <ZSTD_endStream@@Base+0xf40>  // b.lo, b.ul, b.last
    eeb4:	ldur	x25, [x29, #-24]
    eeb8:	cmp	x22, x24
    eebc:	ldr	x1, [sp, #32]
    eec0:	ldur	x2, [x29, #-8]
    eec4:	csel	x24, x22, x24, cc  // cc = lo, ul, last
    eec8:	add	x19, x21, x24
    eecc:	mov	x0, x25
    eed0:	mov	x3, x21
    eed4:	mov	x4, x19
    eed8:	bl	ed44 <ZSTD_endStream@@Base+0xdf0>
    eedc:	ldur	w2, [x29, #-12]
    eee0:	ldp	x4, x3, [sp, #16]
    eee4:	mov	x0, x25
    eee8:	mov	x1, x19
    eeec:	bl	f340 <ZSTD_endStream@@Base+0x13ec>
    eef0:	ldr	w9, [x20, #804]
    eef4:	ldr	w8, [x20, #796]
    eef8:	cmp	w9, w8
    eefc:	b.cs	ef04 <ZSTD_endStream@@Base+0xfb0>  // b.hs, b.nlast
    ef00:	str	w8, [x20, #804]
    ef04:	add	x1, x27, #0x3
    ef08:	sub	x2, x23, #0x3
    ef0c:	mov	w5, #0x1                   	// #1
    ef10:	mov	x0, x20
    ef14:	mov	x3, x21
    ef18:	mov	x4, x24
    ef1c:	bl	f00c <ZSTD_endStream@@Base+0x10b8>
    ef20:	mov	x25, x0
    ef24:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    ef28:	cmp	w0, #0x0
    ef2c:	cset	w8, ne  // ne = any
    ef30:	csel	x26, x26, x25, eq  // eq = none
    ef34:	cbnz	w0, ef78 <ZSTD_endStream@@Base+0x1024>
    ef38:	ldr	w8, [sp, #12]
    ef3c:	cmp	x25, #0x1
    ef40:	and	w4, w28, w8
    ef44:	b.eq	ef80 <ZSTD_endStream@@Base+0x102c>  // b.none
    ef48:	cbnz	x25, ef8c <ZSTD_endStream@@Base+0x1038>
    ef4c:	mov	x0, x27
    ef50:	mov	x1, x23
    ef54:	mov	x2, x21
    ef58:	mov	x3, x24
    ef5c:	bl	f364 <ZSTD_endStream@@Base+0x1410>
    ef60:	mov	x25, x0
    ef64:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    ef68:	cmp	w0, #0x0
    ef6c:	cset	w8, ne  // ne = any
    ef70:	csel	x26, x26, x25, eq  // eq = none
    ef74:	cbz	w0, efa8 <ZSTD_endStream@@Base+0x1054>
    ef78:	cbz	w8, eea0 <ZSTD_endStream@@Base+0xf4c>
    ef7c:	b	efe8 <ZSTD_endStream@@Base+0x1094>
    ef80:	mov	w8, #0x2                   	// #2
    ef84:	mov	x9, x24
    ef88:	b	ef94 <ZSTD_endStream@@Base+0x1040>
    ef8c:	mov	w8, #0x4                   	// #4
    ef90:	mov	x9, x25
    ef94:	bfi	w4, w9, #3, #29
    ef98:	orr	w1, w4, w8
    ef9c:	mov	x0, x27
    efa0:	bl	bd70 <ZSTD_compress2@@Base+0xc4>
    efa4:	add	x25, x25, #0x3
    efa8:	mov	w8, wzr
    efac:	sub	x22, x22, x24
    efb0:	add	x27, x27, x25
    efb4:	sub	x23, x23, x25
    efb8:	mov	x21, x19
    efbc:	str	wzr, [x20, #560]
    efc0:	cbz	w8, eea0 <ZSTD_endStream@@Base+0xf4c>
    efc4:	b	efe8 <ZSTD_endStream@@Base+0x1094>
    efc8:	ldr	x9, [sp]
    efcc:	ldr	w8, [sp, #12]
    efd0:	cbz	w8, efe4 <ZSTD_endStream@@Base+0x1090>
    efd4:	cmp	x27, x9
    efd8:	b.ls	efe4 <ZSTD_endStream@@Base+0x1090>  // b.plast
    efdc:	mov	w8, #0x3                   	// #3
    efe0:	str	w8, [x20]
    efe4:	sub	x26, x27, x9
    efe8:	mov	x0, x26
    efec:	ldp	x20, x19, [sp, #144]
    eff0:	ldp	x22, x21, [sp, #128]
    eff4:	ldp	x24, x23, [sp, #112]
    eff8:	ldp	x26, x25, [sp, #96]
    effc:	ldp	x28, x27, [sp, #80]
    f000:	ldp	x29, x30, [sp, #64]
    f004:	add	sp, sp, #0xa0
    f008:	ret
    f00c:	sub	sp, sp, #0x60
    f010:	stp	x26, x25, [sp, #32]
    f014:	stp	x22, x21, [sp, #64]
    f018:	mov	x25, x2
    f01c:	mov	x22, x1
    f020:	mov	x1, x3
    f024:	mov	x2, x4
    f028:	stp	x29, x30, [sp, #16]
    f02c:	stp	x24, x23, [sp, #48]
    f030:	stp	x20, x19, [sp, #80]
    f034:	add	x29, sp, #0x10
    f038:	mov	w24, w5
    f03c:	mov	x23, x4
    f040:	mov	x21, x3
    f044:	mov	x19, x0
    f048:	bl	f3c0 <ZSTD_endStream@@Base+0x146c>
    f04c:	cmp	x0, #0x1
    f050:	mov	x20, x0
    f054:	cset	w26, eq  // eq = none
    f058:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    f05c:	cmp	w0, #0x0
    f060:	cset	w8, ne  // ne = any
    f064:	lsl	w9, w26, #2
    f068:	csel	w8, w9, w8, eq  // eq = none
    f06c:	cmp	w8, #0x4
    f070:	b.eq	f090 <ZSTD_endStream@@Base+0x113c>  // b.none
    f074:	cbnz	w8, f0d0 <ZSTD_endStream@@Base+0x117c>
    f078:	ldr	w8, [x19, #528]
    f07c:	cbz	w8, f0f0 <ZSTD_endStream@@Base+0x119c>
    f080:	mov	x0, x19
    f084:	bl	f5b8 <ZSTD_endStream@@Base+0x1664>
    f088:	mov	x20, xzr
    f08c:	b	f0d0 <ZSTD_endStream@@Base+0x117c>
    f090:	mov	x20, xzr
    f094:	mov	x0, x20
    f098:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    f09c:	cmp	x20, #0x2
    f0a0:	b.cc	f0b8 <ZSTD_endStream@@Base+0x1164>  // b.lo, b.ul, b.last
    f0a4:	cbnz	w0, f0b8 <ZSTD_endStream@@Base+0x1164>
    f0a8:	ldr	x8, [x19, #760]
    f0ac:	ldr	x9, [x19, #752]
    f0b0:	str	x8, [x19, #752]
    f0b4:	str	x9, [x19, #760]
    f0b8:	ldr	x8, [x19, #752]
    f0bc:	ldr	w9, [x8, #4568]
    f0c0:	cmp	w9, #0x2
    f0c4:	b.ne	f0d0 <ZSTD_endStream@@Base+0x117c>  // b.any
    f0c8:	mov	w9, #0x1                   	// #1
    f0cc:	str	w9, [x8, #4568]
    f0d0:	mov	x0, x20
    f0d4:	ldp	x20, x19, [sp, #80]
    f0d8:	ldp	x22, x21, [sp, #64]
    f0dc:	ldp	x24, x23, [sp, #48]
    f0e0:	ldp	x26, x25, [sp, #32]
    f0e4:	ldp	x29, x30, [sp, #16]
    f0e8:	add	sp, sp, #0x60
    f0ec:	ret
    f0f0:	ldr	x1, [x19, #752]
    f0f4:	ldr	x2, [x19, #760]
    f0f8:	ldr	x7, [x19, #984]
    f0fc:	ldr	w8, [x19, #8]
    f100:	add	x0, x19, #0x238
    f104:	add	x3, x19, #0xa0
    f108:	mov	x4, x22
    f10c:	mov	x5, x25
    f110:	mov	x6, x23
    f114:	str	w8, [sp]
    f118:	bl	f70c <ZSTD_endStream@@Base+0x17b8>
    f11c:	mov	x20, x0
    f120:	cbz	w24, f094 <ZSTD_endStream@@Base+0x1140>
    f124:	cmp	x20, #0x18
    f128:	b.hi	f094 <ZSTD_endStream@@Base+0x1140>  // b.pmore
    f12c:	ldr	w8, [x19, #560]
    f130:	cbnz	w8, f094 <ZSTD_endStream@@Base+0x1140>
    f134:	mov	x0, x21
    f138:	mov	x1, x23
    f13c:	bl	f794 <ZSTD_endStream@@Base+0x1840>
    f140:	cbz	w0, f094 <ZSTD_endStream@@Base+0x1140>
    f144:	ldrb	w8, [x21]
    f148:	mov	w20, #0x1                   	// #1
    f14c:	strb	w8, [x22]
    f150:	b	f094 <ZSTD_endStream@@Base+0x1140>
    f154:	stp	x29, x30, [sp, #-16]!
    f158:	mov	x29, sp
    f15c:	bl	f17c <ZSTD_endStream@@Base+0x1228>
    f160:	ldp	x29, x30, [sp], #16
    f164:	ret
    f168:	stp	x29, x30, [sp, #-16]!
    f16c:	mov	x29, sp
    f170:	bl	f184 <ZSTD_endStream@@Base+0x1230>
    f174:	ldp	x29, x30, [sp], #16
    f178:	ret
    f17c:	str	w1, [x0]
    f180:	ret
    f184:	str	x1, [x0]
    f188:	ret
    f18c:	ldr	w8, [x0, #8]
    f190:	mov	w9, #0xe0000000            	// #-536870912
    f194:	sub	w8, w1, w8
    f198:	cmp	w8, w9
    f19c:	cset	w0, hi  // hi = pmore
    f1a0:	ret
    f1a4:	ldp	x9, x10, [x0, #8]
    f1a8:	mov	w8, #0xffffffff            	// #-1
    f1ac:	lsl	w8, w8, w1
    f1b0:	sub	w11, w3, w9
    f1b4:	bic	w8, w11, w8
    f1b8:	sub	w11, w11, w2
    f1bc:	sub	w8, w11, w8
    f1c0:	ldp	w12, w11, [x0, #24]
    f1c4:	add	x9, x9, x8
    f1c8:	str	x9, [x0, #8]
    f1cc:	add	x9, x10, x8
    f1d0:	sub	w10, w11, w8
    f1d4:	sub	w11, w12, w8
    f1d8:	str	x9, [x0, #16]
    f1dc:	stp	w11, w10, [x0, #24]
    f1e0:	mov	w0, w8
    f1e4:	ret
    f1e8:	stp	x29, x30, [sp, #-48]!
    f1ec:	stp	x22, x21, [sp, #16]
    f1f0:	stp	x20, x19, [sp, #32]
    f1f4:	ldr	w8, [x1, #12]
    f1f8:	mov	x20, x0
    f1fc:	ldr	x0, [x0, #48]
    f200:	mov	w22, #0x1                   	// #1
    f204:	mov	x21, x1
    f208:	lsl	w1, w22, w8
    f20c:	mov	x29, sp
    f210:	mov	w19, w2
    f214:	bl	f27c <ZSTD_endStream@@Base+0x1328>
    f218:	ldr	w8, [x21, #28]
    f21c:	cmp	w8, #0x1
    f220:	b.eq	f240 <ZSTD_endStream@@Base+0x12ec>  // b.none
    f224:	ldr	w9, [x21, #8]
    f228:	ldr	x0, [x20, #64]
    f22c:	cmp	w8, #0x6
    f230:	mov	w2, w19
    f234:	lsl	w1, w22, w9
    f238:	b.ne	f26c <ZSTD_endStream@@Base+0x1318>  // b.any
    f23c:	bl	f2d8 <ZSTD_endStream@@Base+0x1384>
    f240:	ldr	w8, [x20, #40]
    f244:	cbz	w8, f25c <ZSTD_endStream@@Base+0x1308>
    f248:	ldr	x0, [x20, #56]
    f24c:	mov	w9, #0x1                   	// #1
    f250:	lsl	w1, w9, w8
    f254:	mov	w2, w19
    f258:	bl	f27c <ZSTD_endStream@@Base+0x1328>
    f25c:	ldp	x20, x19, [sp, #32]
    f260:	ldp	x22, x21, [sp, #16]
    f264:	ldp	x29, x30, [sp], #48
    f268:	ret
    f26c:	bl	f27c <ZSTD_endStream@@Base+0x1328>
    f270:	ldr	w8, [x20, #40]
    f274:	cbnz	w8, f248 <ZSTD_endStream@@Base+0x12f4>
    f278:	b	f25c <ZSTD_endStream@@Base+0x1308>
    f27c:	add	w8, w1, #0xf
    f280:	cmp	w1, #0x0
    f284:	csel	w10, w8, w1, lt  // lt = tstop
    f288:	cmp	w1, #0x10
    f28c:	b.lt	f2d4 <ZSTD_endStream@@Base+0x1380>  // b.tstop
    f290:	mov	w8, wzr
    f294:	mov	w9, wzr
    f298:	asr	w10, w10, #4
    f29c:	mov	x11, xzr
    f2a0:	add	x12, x0, w8, sxtw #2
    f2a4:	lsl	x13, x11, #2
    f2a8:	ldr	w14, [x12, x13]
    f2ac:	add	x11, x11, #0x1
    f2b0:	subs	w14, w14, w2
    f2b4:	csel	w14, wzr, w14, cc  // cc = lo, ul, last
    f2b8:	cmp	w11, #0x10
    f2bc:	str	w14, [x12, x13]
    f2c0:	b.ne	f2a4 <ZSTD_endStream@@Base+0x1350>  // b.any
    f2c4:	add	w9, w9, #0x1
    f2c8:	cmp	w9, w10
    f2cc:	add	w8, w8, w11
    f2d0:	b.ne	f29c <ZSTD_endStream@@Base+0x1348>  // b.any
    f2d4:	ret
    f2d8:	add	w8, w1, #0xf
    f2dc:	cmp	w1, #0x0
    f2e0:	csel	w10, w8, w1, lt  // lt = tstop
    f2e4:	cmp	w1, #0x10
    f2e8:	b.lt	f33c <ZSTD_endStream@@Base+0x13e8>  // b.tstop
    f2ec:	mov	w8, wzr
    f2f0:	mov	w9, wzr
    f2f4:	asr	w10, w10, #4
    f2f8:	mov	x11, xzr
    f2fc:	add	x12, x0, w8, sxtw #2
    f300:	lsl	x13, x11, #2
    f304:	ldr	w14, [x12, x13]
    f308:	add	x11, x11, #0x1
    f30c:	cmp	w14, #0x1
    f310:	csel	w15, w2, wzr, eq  // eq = none
    f314:	add	w14, w15, w14
    f318:	subs	w14, w14, w2
    f31c:	csel	w14, wzr, w14, cc  // cc = lo, ul, last
    f320:	cmp	w11, #0x10
    f324:	str	w14, [x12, x13]
    f328:	b.ne	f300 <ZSTD_endStream@@Base+0x13ac>  // b.any
    f32c:	add	w9, w9, #0x1
    f330:	cmp	w9, w10
    f334:	add	w8, w8, w11
    f338:	b.ne	f2f8 <ZSTD_endStream@@Base+0x13a4>  // b.any
    f33c:	ret
    f340:	ldr	w8, [x0, #8]
    f344:	ldr	w9, [x3]
    f348:	sub	w8, w1, w8
    f34c:	add	w9, w9, w2
    f350:	cmp	w9, w8
    f354:	b.cs	f360 <ZSTD_endStream@@Base+0x140c>  // b.hs, b.nlast
    f358:	str	wzr, [x3]
    f35c:	str	xzr, [x4]
    f360:	ret
    f364:	stp	x29, x30, [sp, #-48]!
    f368:	stp	x20, x19, [sp, #32]
    f36c:	add	x19, x3, #0x3
    f370:	cmp	x19, x1
    f374:	stp	x22, x21, [sp, #16]
    f378:	mov	x29, sp
    f37c:	b.ls	f388 <ZSTD_endStream@@Base+0x1434>  // b.plast
    f380:	mov	x19, #0xffffffffffffffba    	// #-70
    f384:	b	f3ac <ZSTD_endStream@@Base+0x1458>
    f388:	mov	x20, x3
    f38c:	add	w1, w4, w20, lsl #3
    f390:	mov	x21, x2
    f394:	mov	x22, x0
    f398:	bl	bd70 <ZSTD_compress2@@Base+0xc4>
    f39c:	add	x0, x22, #0x3
    f3a0:	mov	x1, x21
    f3a4:	mov	x2, x20
    f3a8:	bl	4420 <memcpy@plt>
    f3ac:	mov	x0, x19
    f3b0:	ldp	x20, x19, [sp, #32]
    f3b4:	ldp	x22, x21, [sp, #16]
    f3b8:	ldp	x29, x30, [sp], #48
    f3bc:	ret
    f3c0:	sub	sp, sp, #0x60
    f3c4:	stp	x24, x23, [sp, #48]
    f3c8:	stp	x20, x19, [sp, #80]
    f3cc:	mov	x19, x2
    f3d0:	cmp	x2, #0x6
    f3d4:	mov	x23, x0
    f3d8:	stp	x29, x30, [sp, #32]
    f3dc:	stp	x22, x21, [sp, #64]
    f3e0:	add	x29, sp, #0x20
    f3e4:	b.hi	f400 <ZSTD_endStream@@Base+0x14ac>  // b.pmore
    f3e8:	ldr	w2, [x23, #180]
    f3ec:	add	x0, x23, #0x2d0
    f3f0:	mov	x1, x19
    f3f4:	bl	26740 <ZSTD_endStream@@Base+0x187ec>
    f3f8:	mov	w0, #0x1                   	// #1
    f3fc:	b	f56c <ZSTD_endStream@@Base+0x1618>
    f400:	add	x21, x23, #0x238
    f404:	mov	x0, x21
    f408:	mov	x20, x1
    f40c:	add	x22, x23, #0x300
    f410:	bl	bbd8 <ZSTD_copyCCtx@@Base+0x344>
    f414:	ldr	x8, [x23, #752]
    f418:	ldr	w9, [x23, #232]
    f41c:	add	x10, x23, #0x2f0
    f420:	str	x8, [x23, #928]
    f424:	str	w9, [x23, #936]
    f428:	ldr	w8, [x23, #776]
    f42c:	ldr	w9, [x10, #52]
    f430:	sub	w8, w20, w8
    f434:	add	w10, w9, #0x180
    f438:	cmp	w10, w8
    f43c:	b.cs	f45c <ZSTD_endStream@@Base+0x1508>  // b.hs, b.nlast
    f440:	sub	w9, w8, w9
    f444:	sub	w9, w9, #0x180
    f448:	cmp	w9, #0xc0
    f44c:	mov	w10, #0xc0                  	// #192
    f450:	csel	w9, w9, w10, cc  // cc = lo, ul, last
    f454:	sub	w8, w8, w9
    f458:	str	w8, [x23, #804]
    f45c:	mov	x0, x22
    f460:	bl	f7cc <ZSTD_endStream@@Base+0x1878>
    f464:	ldr	x9, [x23, #752]
    f468:	ldr	x10, [x23, #760]
    f46c:	mov	w11, #0x11e4                	// #4580
    f470:	mov	w1, w0
    f474:	mov	x8, xzr
    f478:	add	x9, x9, x11
    f47c:	add	x10, x10, x11
    f480:	ldr	w11, [x9, x8]
    f484:	str	w11, [x10, x8]
    f488:	add	x8, x8, #0x4
    f48c:	cmp	x8, #0xc
    f490:	b.ne	f480 <ZSTD_endStream@@Base+0x152c>  // b.any
    f494:	ldr	x8, [x23, #728]
    f498:	ldr	x9, [x23, #736]
    f49c:	cmp	x8, x9
    f4a0:	b.cs	f4cc <ZSTD_endStream@@Base+0x1578>  // b.hs, b.nlast
    f4a4:	ldr	x8, [x23, #760]
    f4a8:	mov	w9, #0x11e4                	// #4580
    f4ac:	add	x0, x23, #0x2d0
    f4b0:	mov	x1, x22
    f4b4:	add	x3, x8, x9
    f4b8:	mov	x2, x21
    f4bc:	mov	x4, x20
    f4c0:	mov	x5, x19
    f4c4:	bl	267f8 <ZSTD_endStream@@Base+0x188a4>
    f4c8:	b	f54c <ZSTD_endStream@@Base+0x15f8>
    f4cc:	ldr	w8, [x23, #256]
    f4d0:	cbz	w8, f520 <ZSTD_endStream@@Base+0x15cc>
    f4d4:	movi	v0.2d, #0x0
    f4d8:	stp	q0, q0, [sp]
    f4dc:	ldr	x8, [x23, #704]
    f4e0:	add	x2, x23, #0x100
    f4e4:	add	x0, x23, #0x288
    f4e8:	mov	x1, sp
    f4ec:	str	x8, [sp]
    f4f0:	ldr	x8, [x23, #712]
    f4f4:	mov	x3, x20
    f4f8:	mov	x4, x19
    f4fc:	str	x8, [sp, #24]
    f500:	bl	26010 <ZSTD_endStream@@Base+0x180bc>
    f504:	mov	x24, x0
    f508:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    f50c:	cmp	w0, #0x0
    f510:	cset	w8, ne  // ne = any
    f514:	cbz	w0, f584 <ZSTD_endStream@@Base+0x1630>
    f518:	cbnz	w8, f564 <ZSTD_endStream@@Base+0x1610>
    f51c:	b	f550 <ZSTD_endStream@@Base+0x15fc>
    f520:	ldr	w0, [x23, #188]
    f524:	bl	bbc0 <ZSTD_copyCCtx@@Base+0x32c>
    f528:	ldr	x9, [x23, #760]
    f52c:	mov	w10, #0x11e4                	// #4580
    f530:	mov	x8, x0
    f534:	mov	x0, x22
    f538:	add	x2, x9, x10
    f53c:	mov	x1, x21
    f540:	mov	x3, x20
    f544:	mov	x4, x19
    f548:	blr	x8
    f54c:	mov	x2, x0
    f550:	add	x8, x20, x19
    f554:	sub	x1, x8, x2
    f558:	mov	x0, x21
    f55c:	bl	f81c <ZSTD_endStream@@Base+0x18c8>
    f560:	mov	w8, wzr
    f564:	cmp	w8, #0x0
    f568:	csel	x0, xzr, x24, eq  // eq = none
    f56c:	ldp	x20, x19, [sp, #80]
    f570:	ldp	x22, x21, [sp, #64]
    f574:	ldp	x24, x23, [sp, #48]
    f578:	ldp	x29, x30, [sp, #32]
    f57c:	add	sp, sp, #0x60
    f580:	ret
    f584:	ldr	x8, [x23, #760]
    f588:	mov	w9, #0x11e4                	// #4580
    f58c:	mov	x0, sp
    f590:	mov	x1, x22
    f594:	add	x3, x8, x9
    f598:	mov	x2, x21
    f59c:	mov	x4, x20
    f5a0:	mov	x5, x19
    f5a4:	bl	267f8 <ZSTD_endStream@@Base+0x188a4>
    f5a8:	mov	x2, x0
    f5ac:	mov	w8, wzr
    f5b0:	cbnz	wzr, f564 <ZSTD_endStream@@Base+0x1610>
    f5b4:	b	f550 <ZSTD_endStream@@Base+0x15fc>
    f5b8:	stp	x29, x30, [sp, #-32]!
    f5bc:	str	x19, [sp, #16]
    f5c0:	mov	x29, sp
    f5c4:	mov	x19, x0
    f5c8:	bl	a29c <ZSTD_sizeof_CStream@@Base+0x14>
    f5cc:	ldp	x14, x9, [x0]
    f5d0:	ldr	x8, [x19, #544]
    f5d4:	subs	x9, x9, x14
    f5d8:	asr	x9, x9, #3
    f5dc:	b.eq	f6f8 <ZSTD_endStream@@Base+0x17a4>  // b.none
    f5e0:	ldr	x17, [x19, #536]
    f5e4:	ldr	w13, [x0, #76]
    f5e8:	mov	w12, #0x14                  	// #20
    f5ec:	mov	w15, #0x3                   	// #3
    f5f0:	madd	x16, x8, x12, x17
    f5f4:	madd	x17, x8, x12, x17
    f5f8:	adrp	x18, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    f5fc:	mov	x11, xzr
    f600:	mov	x10, xzr
    f604:	add	x14, x14, #0x6
    f608:	movk	w15, #0x1, lsl #16
    f60c:	add	x17, x17, #0x8
    f610:	add	x18, x18, #0x278
    f614:	b	f640 <ZSTD_endStream@@Base+0x16ec>
    f618:	stur	w2, [x17, #-4]
    f61c:	ldp	w1, w2, [x17]
    f620:	add	x10, x10, #0x1
    f624:	add	x14, x14, #0x8
    f628:	cmp	x10, x9
    f62c:	add	x11, x11, x1
    f630:	stur	w11, [x17, #-8]
    f634:	add	x11, x11, x2
    f638:	add	x17, x17, #0x14
    f63c:	b.cs	f6f8 <ZSTD_endStream@@Base+0x17a4>  // b.hs, b.nlast
    f640:	ldur	w1, [x14, #-6]
    f644:	cmp	x13, x10
    f648:	stur	w1, [x17, #-4]
    f64c:	ldurh	w2, [x14, #-2]
    f650:	str	w2, [x17]
    f654:	ldrh	w3, [x14]
    f658:	add	w4, w3, #0x3
    f65c:	str	w4, [x17, #4]
    f660:	b.ne	f680 <ZSTD_endStream@@Base+0x172c>  // b.any
    f664:	ldr	w4, [x0, #72]
    f668:	cmp	w4, #0x2
    f66c:	b.eq	f6e4 <ZSTD_endStream@@Base+0x1790>  // b.none
    f670:	cmp	w4, #0x1
    f674:	b.ne	f680 <ZSTD_endStream@@Base+0x172c>  // b.any
    f678:	orr	w2, w2, #0x10000
    f67c:	str	w2, [x17]
    f680:	subs	w2, w1, #0x3
    f684:	b.hi	f618 <ZSTD_endStream@@Base+0x16c4>  // b.pmore
    f688:	ldr	w3, [x17]
    f68c:	neg	w2, w1
    f690:	add	x2, x10, x2
    f694:	str	w1, [x17, #8]
    f698:	cbnz	w3, f6b0 <ZSTD_endStream@@Base+0x175c>
    f69c:	cmp	w1, #0x3
    f6a0:	csel	w2, w2, w10, cc  // cc = lo, ul, last
    f6a4:	add	w1, w1, #0x1
    f6a8:	sub	w2, w2, #0x1
    f6ac:	str	w1, [x17, #8]
    f6b0:	smaddl	x1, w2, w12, x16
    f6b4:	mvn	w3, w2
    f6b8:	cmp	w2, #0x0
    f6bc:	add	x1, x1, #0x4
    f6c0:	add	x2, x18, w3, sxtw #2
    f6c4:	csel	x1, x1, x2, ge  // ge = tcont
    f6c8:	ldr	w2, [x17, #8]
    f6cc:	ldr	w1, [x1]
    f6d0:	cmp	w2, #0x4
    f6d4:	stur	w1, [x17, #-4]
    f6d8:	b.ne	f61c <ZSTD_endStream@@Base+0x16c8>  // b.any
    f6dc:	sub	w2, w1, #0x1
    f6e0:	b	f618 <ZSTD_endStream@@Base+0x16c4>
    f6e4:	add	w2, w3, w15
    f6e8:	str	w2, [x17, #4]
    f6ec:	subs	w2, w1, #0x3
    f6f0:	b.hi	f618 <ZSTD_endStream@@Base+0x16c4>  // b.pmore
    f6f4:	b	f688 <ZSTD_endStream@@Base+0x1734>
    f6f8:	add	x8, x8, x9
    f6fc:	str	x8, [x19, #544]
    f700:	ldr	x19, [sp, #16]
    f704:	ldp	x29, x30, [sp], #32
    f708:	ret
    f70c:	stp	x29, x30, [sp, #-48]!
    f710:	mov	x29, sp
    f714:	mov	x8, x7
    f718:	ldr	w7, [x29, #48]
    f71c:	stp	x20, x19, [sp, #32]
    f720:	mov	x19, x6
    f724:	mov	x6, x8
    f728:	stp	x22, x21, [sp, #16]
    f72c:	mov	x22, x5
    f730:	mov	x20, x3
    f734:	bl	f860 <ZSTD_endStream@@Base+0x190c>
    f738:	mov	x21, x0
    f73c:	cbz	x0, f764 <ZSTD_endStream@@Base+0x1810>
    f740:	cmp	x19, x22
    f744:	b.hi	f758 <ZSTD_endStream@@Base+0x1804>  // b.pmore
    f748:	cmn	x21, #0x46
    f74c:	b.ne	f758 <ZSTD_endStream@@Base+0x1804>  // b.any
    f750:	mov	x21, xzr
    f754:	b	f764 <ZSTD_endStream@@Base+0x1810>
    f758:	mov	x0, x21
    f75c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    f760:	cbz	w0, f778 <ZSTD_endStream@@Base+0x1824>
    f764:	mov	x0, x21
    f768:	ldp	x20, x19, [sp, #32]
    f76c:	ldp	x22, x21, [sp, #16]
    f770:	ldp	x29, x30, [sp], #48
    f774:	ret
    f778:	ldr	w1, [x20, #28]
    f77c:	mov	x0, x19
    f780:	bl	fe18 <ZSTD_endStream@@Base+0x1ec4>
    f784:	sub	x8, x19, x0
    f788:	cmp	x21, x8
    f78c:	csel	x0, x21, xzr, cc  // cc = lo, ul, last
    f790:	b	f768 <ZSTD_endStream@@Base+0x1814>
    f794:	cmp	x1, #0x2
    f798:	b.cc	f7bc <ZSTD_endStream@@Base+0x1868>  // b.lo, b.ul, b.last
    f79c:	ldrb	w8, [x0], #1
    f7a0:	sub	x9, x1, #0x1
    f7a4:	ldrb	w10, [x0]
    f7a8:	cmp	w8, w10
    f7ac:	b.ne	f7c4 <ZSTD_endStream@@Base+0x1870>  // b.any
    f7b0:	subs	x9, x9, #0x1
    f7b4:	add	x0, x0, #0x1
    f7b8:	b.ne	f7a4 <ZSTD_endStream@@Base+0x1850>  // b.any
    f7bc:	mov	w0, #0x1                   	// #1
    f7c0:	ret
    f7c4:	mov	w0, wzr
    f7c8:	ret
    f7cc:	sub	sp, sp, #0x40
    f7d0:	stp	x29, x30, [sp, #32]
    f7d4:	str	x19, [sp, #48]
    f7d8:	ldp	q1, q0, [x0]
    f7dc:	mov	x19, x0
    f7e0:	mov	x0, sp
    f7e4:	add	x29, sp, #0x20
    f7e8:	stp	q1, q0, [sp]
    f7ec:	bl	f850 <ZSTD_endStream@@Base+0x18fc>
    f7f0:	cbz	w0, f7fc <ZSTD_endStream@@Base+0x18a8>
    f7f4:	mov	w0, #0x1                   	// #1
    f7f8:	b	f80c <ZSTD_endStream@@Base+0x18b8>
    f7fc:	ldr	x8, [x19, #176]
    f800:	cmp	x8, #0x0
    f804:	cset	w8, ne  // ne = any
    f808:	lsl	w0, w8, #1
    f80c:	ldr	x19, [sp, #48]
    f810:	ldp	x29, x30, [sp, #32]
    f814:	add	sp, sp, #0x40
    f818:	ret
    f81c:	stp	x29, x30, [sp, #-32]!
    f820:	stp	x20, x19, [sp, #16]
    f824:	mov	x20, x0
    f828:	ldr	x0, [x0, #24]
    f82c:	mov	x29, sp
    f830:	mov	x19, x2
    f834:	bl	4420 <memcpy@plt>
    f838:	ldr	x8, [x20, #24]
    f83c:	add	x8, x8, x19
    f840:	str	x8, [x20, #24]
    f844:	ldp	x20, x19, [sp, #16]
    f848:	ldp	x29, x30, [sp], #32
    f84c:	ret
    f850:	ldp	w9, w8, [x0, #24]
    f854:	cmp	w8, w9
    f858:	cset	w0, cc  // cc = lo, ul, last
    f85c:	ret
    f860:	stp	x29, x30, [sp, #-96]!
    f864:	stp	x28, x27, [sp, #16]
    f868:	stp	x26, x25, [sp, #32]
    f86c:	stp	x24, x23, [sp, #48]
    f870:	stp	x22, x21, [sp, #64]
    f874:	stp	x20, x19, [sp, #80]
    f878:	mov	x29, sp
    f87c:	sub	sp, sp, #0x1a0
    f880:	ldr	x9, [x0, #48]
    f884:	ldr	x10, [x0]
    f888:	ldr	w8, [x3, #4]
    f88c:	ldr	w26, [x3, #28]
    f890:	str	x9, [sp, #160]
    f894:	ldr	x9, [x0, #32]
    f898:	cmp	w8, #0x39
    f89c:	mov	x23, x0
    f8a0:	cset	w8, hi  // hi = pmore
    f8a4:	str	x9, [sp, #184]
    f8a8:	ldr	x9, [x0, #40]
    f8ac:	mov	w21, w7
    f8b0:	mov	x24, x6
    f8b4:	mov	x27, x5
    f8b8:	str	x9, [sp, #152]
    f8bc:	ldp	x20, x9, [x0, #16]
    f8c0:	str	x10, [sp, #168]
    f8c4:	ldr	x10, [x0, #8]
    f8c8:	mov	x0, x3
    f8cc:	mov	x25, x4
    f8d0:	mov	x28, x2
    f8d4:	mov	x19, x1
    f8d8:	str	x10, [sp, #176]
    f8dc:	str	w8, [sp, #144]
    f8e0:	sub	x22, x9, x20
    f8e4:	bl	fe34 <ZSTD_endStream@@Base+0x1ee0>
    f8e8:	mov	w3, w0
    f8ec:	mov	w8, #0x1800                	// #6144
    f8f0:	mov	x0, x19
    f8f4:	mov	x1, x28
    f8f8:	mov	w2, w26
    f8fc:	mov	x4, x25
    f900:	mov	x5, x27
    f904:	mov	x6, x20
    f908:	mov	x7, x22
    f90c:	str	w21, [sp, #148]
    f910:	str	w21, [sp, #16]
    f914:	stp	x24, x8, [sp]
    f918:	bl	10a2c <ZSTD_endStream@@Base+0x2ad8>
    f91c:	mov	x20, x0
    f920:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    f924:	add	x9, x25, x20
    f928:	cmp	w0, #0x0
    f92c:	csel	x8, x20, xzr, eq  // eq = none
    f930:	csel	x21, x9, x25, eq  // eq = none
    f934:	cbnz	w0, fde0 <ZSTD_endStream@@Base+0x1e8c>
    f938:	mov	x12, x25
    f93c:	mov	w25, w26
    f940:	mov	x26, x24
    f944:	ldp	x11, x24, [sp, #176]
    f948:	add	x10, x12, x27
    f94c:	sub	x9, x10, x21
    f950:	cmp	x9, #0x4
    f954:	b.ge	f960 <ZSTD_endStream@@Base+0x1a0c>  // b.tcont
    f958:	mov	x20, #0xffffffffffffffba    	// #-70
    f95c:	b	fde0 <ZSTD_endStream@@Base+0x1e8c>
    f960:	ldr	x9, [sp, #168]
    f964:	add	x0, x28, #0x404
    f968:	str	x10, [sp, #136]
    f96c:	sub	x22, x11, x9
    f970:	asr	x9, x22, #3
    f974:	cmp	x9, #0x7f
    f978:	mov	x11, x28
    f97c:	str	x9, [sp, #176]
    f980:	b.hi	f994 <ZSTD_endStream@@Base+0x1a40>  // b.pmore
    f984:	lsr	x9, x22, #3
    f988:	add	x21, x21, #0x1
    f98c:	strb	w9, [x12, x8]
    f990:	b	f9f8 <ZSTD_endStream@@Base+0x1aa4>
    f994:	ldr	x9, [sp, #176]
    f998:	lsr	x9, x9, #8
    f99c:	cmp	x9, #0x7e
    f9a0:	b.hi	f9c4 <ZSTD_endStream@@Base+0x1a70>  // b.pmore
    f9a4:	ldr	x10, [sp, #176]
    f9a8:	lsr	x9, x22, #3
    f9ac:	ubfx	x10, x10, #8, #24
    f9b0:	eor	w10, w10, #0x80
    f9b4:	strb	w10, [x12, x8]
    f9b8:	strb	w9, [x21, #1]
    f9bc:	add	x21, x21, #0x2
    f9c0:	b	f9f8 <ZSTD_endStream@@Base+0x1aa4>
    f9c4:	lsr	x9, x22, #3
    f9c8:	mov	w11, #0xffff8100            	// #-32512
    f9cc:	mov	w10, #0xff                  	// #255
    f9d0:	str	x0, [sp, #128]
    f9d4:	add	x0, x21, #0x1
    f9d8:	add	w1, w9, w11
    f9dc:	strb	w10, [x12, x8]
    f9e0:	mov	x27, x12
    f9e4:	bl	eaa8 <ZSTD_endStream@@Base+0xb54>
    f9e8:	ldr	x0, [sp, #128]
    f9ec:	mov	x11, x28
    f9f0:	mov	x12, x27
    f9f4:	add	x21, x21, #0x3
    f9f8:	mov	x28, x26
    f9fc:	mov	w26, w25
    fa00:	cbz	x22, fdcc <ZSTD_endStream@@Base+0x1e78>
    fa04:	str	x0, [sp, #128]
    fa08:	mov	x0, x23
    fa0c:	add	x27, x11, #0xcb4
    fa10:	add	x25, x21, #0x1
    fa14:	str	x12, [sp, #88]
    fa18:	mov	x22, x11
    fa1c:	bl	ba84 <ZSTD_copyCCtx@@Base+0x1f0>
    fa20:	ldr	x23, [sp, #176]
    fa24:	mov	w8, #0x23                  	// #35
    fa28:	add	x0, sp, #0xc4
    fa2c:	add	x1, sp, #0xc0
    fa30:	mov	w5, #0x1800                	// #6144
    fa34:	mov	x2, x24
    fa38:	mov	x3, x23
    fa3c:	mov	x4, x28
    fa40:	str	w8, [sp, #192]
    fa44:	bl	8324 <ZSTD_getErrorString@@Base+0x1438>
    fa48:	ldr	w8, [x19, #4576]
    fa4c:	mov	x3, x0
    fa50:	str	x22, [sp, #120]
    fa54:	adrp	x7, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    fa58:	str	w8, [x22, #4576]
    fa5c:	ldr	w2, [sp, #192]
    fa60:	mov	w8, #0x11e0                	// #4576
    fa64:	add	x0, x22, x8
    fa68:	add	x22, x19, #0xcb4
    fa6c:	mov	w8, #0x1                   	// #1
    fa70:	mov	w9, #0x6                   	// #6
    fa74:	add	x7, x7, #0x344
    fa78:	add	x1, sp, #0xc4
    fa7c:	mov	w5, #0x9                   	// #9
    fa80:	mov	x4, x23
    fa84:	mov	x6, x22
    fa88:	str	w26, [sp, #16]
    fa8c:	str	w8, [sp, #8]
    fa90:	str	w9, [sp]
    fa94:	bl	10d40 <ZSTD_endStream@@Base+0x2dec>
    fa98:	str	w26, [sp, #116]
    fa9c:	ldr	x26, [sp, #136]
    faa0:	ldr	w6, [sp, #192]
    faa4:	mov	w8, #0x1800                	// #6144
    faa8:	stp	x28, x8, [sp, #48]
    faac:	mov	w8, #0x524                 	// #1316
    fab0:	mov	w9, #0x23                  	// #35
    fab4:	stp	x22, x8, [sp, #32]
    fab8:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    fabc:	mov	w4, w0
    fac0:	sub	x1, x26, x25
    fac4:	str	w9, [sp, #24]
    fac8:	mov	w9, #0x6                   	// #6
    facc:	add	x5, sp, #0xc4
    fad0:	add	x8, x8, #0x344
    fad4:	mov	w3, #0x9                   	// #9
    fad8:	mov	x0, x25
    fadc:	mov	x2, x27
    fae0:	mov	x7, x24
    fae4:	str	w9, [sp, #16]
    fae8:	stp	x23, x8, [sp]
    faec:	str	x27, [sp, #96]
    faf0:	mov	x27, x25
    faf4:	str	w4, [sp, #112]
    faf8:	bl	110e4 <ZSTD_endStream@@Base+0x3190>
    fafc:	mov	x22, x0
    fb00:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    fb04:	add	x8, x25, x22
    fb08:	ldr	x25, [sp, #160]
    fb0c:	cmp	w0, #0x0
    fb10:	csel	x20, x20, x22, eq  // eq = none
    fb14:	str	x21, [sp, #104]
    fb18:	csinc	x21, x8, x21, eq  // eq = none
    fb1c:	cbnz	w0, fde0 <ZSTD_endStream@@Base+0x1e8c>
    fb20:	ldr	x24, [sp, #176]
    fb24:	mov	w23, w0
    fb28:	mov	w8, #0x1f                  	// #31
    fb2c:	add	x0, sp, #0xc4
    fb30:	add	x1, sp, #0xc0
    fb34:	mov	w5, #0x1800                	// #6144
    fb38:	mov	x2, x25
    fb3c:	mov	x3, x24
    fb40:	mov	x4, x28
    fb44:	str	w8, [sp, #192]
    fb48:	bl	8324 <ZSTD_getErrorString@@Base+0x1438>
    fb4c:	ldr	w8, [x19, #4568]
    fb50:	ldr	x10, [sp, #120]
    fb54:	ldr	w2, [sp, #192]
    fb58:	add	x22, x19, #0x404
    fb5c:	mov	w9, #0x11d8                	// #4568
    fb60:	str	w8, [x10, #4568]
    fb64:	ldr	w8, [sp, #116]
    fb68:	cmp	w2, #0x1d
    fb6c:	adrp	x7, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    fb70:	mov	x3, x0
    fb74:	add	x0, x10, x9
    fb78:	cset	w9, cc  // cc = lo, ul, last
    fb7c:	mov	w25, #0x5                   	// #5
    fb80:	add	x7, x7, #0x38c
    fb84:	add	x1, sp, #0xc4
    fb88:	mov	w5, #0x8                   	// #8
    fb8c:	mov	x4, x24
    fb90:	mov	x6, x22
    fb94:	str	w8, [sp, #16]
    fb98:	str	w9, [sp, #8]
    fb9c:	str	w25, [sp]
    fba0:	bl	10d40 <ZSTD_endStream@@Base+0x2dec>
    fba4:	ldr	w6, [sp, #192]
    fba8:	mov	w8, #0x1800                	// #6144
    fbac:	ldr	x2, [sp, #128]
    fbb0:	ldr	x7, [sp, #160]
    fbb4:	stp	x28, x8, [sp, #48]
    fbb8:	mov	w8, #0x304                 	// #772
    fbbc:	stp	x22, x8, [sp, #32]
    fbc0:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    fbc4:	mov	w4, w0
    fbc8:	sub	x1, x26, x21
    fbcc:	mov	w9, #0x1c                  	// #28
    fbd0:	add	x5, sp, #0xc4
    fbd4:	add	x8, x8, #0x38c
    fbd8:	mov	w3, #0x8                   	// #8
    fbdc:	mov	x0, x21
    fbe0:	str	w25, [sp, #16]
    fbe4:	str	w9, [sp, #24]
    fbe8:	stp	x24, x8, [sp]
    fbec:	str	w4, [sp, #84]
    fbf0:	bl	110e4 <ZSTD_endStream@@Base+0x3190>
    fbf4:	mov	x22, x0
    fbf8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    fbfc:	cmp	w0, #0x0
    fc00:	add	x8, x21, x22
    fc04:	csel	x20, x20, x22, eq  // eq = none
    fc08:	csel	x8, x8, x21, eq  // eq = none
    fc0c:	cbnz	w0, fde0 <ZSTD_endStream@@Base+0x1e8c>
    fc10:	cmp	w23, #0x0
    fc14:	mov	x23, x8
    fc18:	ldr	w8, [sp, #112]
    fc1c:	ldr	w9, [sp, #84]
    fc20:	ldr	x25, [sp, #152]
    fc24:	ldr	x22, [sp, #120]
    fc28:	ccmp	w8, #0x2, #0x0, eq  // eq = none
    fc2c:	csel	x8, x27, xzr, eq  // eq = none
    fc30:	ldr	x27, [sp, #176]
    fc34:	cmp	w0, #0x0
    fc38:	ccmp	w9, #0x2, #0x0, eq  // eq = none
    fc3c:	mov	w10, #0x34                  	// #52
    fc40:	csel	x8, x21, x8, eq  // eq = none
    fc44:	add	x0, sp, #0xc4
    fc48:	add	x1, sp, #0xc0
    fc4c:	mov	w5, #0x1800                	// #6144
    fc50:	mov	x2, x25
    fc54:	mov	x3, x27
    fc58:	mov	x4, x28
    fc5c:	add	x24, x22, #0x708
    fc60:	str	x8, [sp, #72]
    fc64:	str	w10, [sp, #192]
    fc68:	bl	8324 <ZSTD_getErrorString@@Base+0x1438>
    fc6c:	ldr	w8, [x19, #4572]
    fc70:	mov	x3, x0
    fc74:	adrp	x7, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    fc78:	mov	w21, #0x6                   	// #6
    fc7c:	str	w8, [x22, #4572]
    fc80:	mov	w8, #0x11dc                	// #4572
    fc84:	add	x0, x22, x8
    fc88:	ldr	w8, [sp, #116]
    fc8c:	ldr	w2, [sp, #192]
    fc90:	add	x22, x19, #0x708
    fc94:	add	x7, x7, #0x3c6
    fc98:	str	w8, [sp, #16]
    fc9c:	mov	w8, #0x1                   	// #1
    fca0:	add	x1, sp, #0xc4
    fca4:	mov	w5, #0x9                   	// #9
    fca8:	mov	x4, x27
    fcac:	mov	x6, x22
    fcb0:	mov	x19, x24
    fcb4:	str	w8, [sp, #8]
    fcb8:	str	w21, [sp]
    fcbc:	bl	10d40 <ZSTD_endStream@@Base+0x2dec>
    fcc0:	ldr	w6, [sp, #192]
    fcc4:	mov	w8, #0x1800                	// #6144
    fcc8:	stp	x28, x8, [sp, #48]
    fccc:	mov	w8, #0x5ac                 	// #1452
    fcd0:	str	w21, [sp, #16]
    fcd4:	ldr	x21, [sp, #160]
    fcd8:	mov	w24, w0
    fcdc:	stp	x22, x8, [sp, #32]
    fce0:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
    fce4:	sub	x1, x26, x23
    fce8:	mov	w9, #0x34                  	// #52
    fcec:	add	x5, sp, #0xc4
    fcf0:	add	x8, x8, #0x3c6
    fcf4:	mov	w3, #0x9                   	// #9
    fcf8:	mov	x0, x23
    fcfc:	mov	x2, x19
    fd00:	mov	w4, w24
    fd04:	mov	x7, x25
    fd08:	str	w9, [sp, #24]
    fd0c:	stp	x27, x8, [sp]
    fd10:	bl	110e4 <ZSTD_endStream@@Base+0x3190>
    fd14:	mov	x22, x0
    fd18:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    fd1c:	cmp	w0, #0x0
    fd20:	add	x8, x23, x22
    fd24:	csel	x25, x8, x23, eq  // eq = none
    fd28:	ldr	x8, [sp, #72]
    fd2c:	csel	x20, x20, x22, eq  // eq = none
    fd30:	ccmp	w24, #0x2, #0x0, eq  // eq = none
    fd34:	csel	x22, x23, x8, eq  // eq = none
    fd38:	cbnz	w0, fde0 <ZSTD_endStream@@Base+0x1e8c>
    fd3c:	ldr	w8, [sp, #84]
    fd40:	ldr	w9, [sp, #112]
    fd44:	ldr	x3, [sp, #152]
    fd48:	ldr	x4, [sp, #128]
    fd4c:	lsl	w8, w8, #4
    fd50:	add	w8, w8, w9, lsl #6
    fd54:	ldp	x6, x9, [sp, #96]
    fd58:	add	w8, w8, w24, lsl #2
    fd5c:	sub	x1, x26, x25
    fd60:	mov	x0, x25
    fd64:	strb	w8, [x9]
    fd68:	ldr	w8, [sp, #148]
    fd6c:	mov	x2, x19
    fd70:	mov	x5, x21
    fd74:	str	w8, [sp, #24]
    fd78:	ldr	w8, [sp, #144]
    fd7c:	str	w8, [sp, #16]
    fd80:	ldp	x8, x7, [sp, #176]
    fd84:	str	x8, [sp, #8]
    fd88:	ldr	x8, [sp, #168]
    fd8c:	str	x8, [sp]
    fd90:	bl	112a8 <ZSTD_endStream@@Base+0x3354>
    fd94:	mov	x21, x0
    fd98:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
    fd9c:	cmp	w0, #0x0
    fda0:	cset	w8, ne  // ne = any
    fda4:	csel	x20, x20, x21, eq  // eq = none
    fda8:	cbnz	w0, fe08 <ZSTD_endStream@@Base+0x1eb4>
    fdac:	add	x25, x25, x21
    fdb0:	cbz	x22, fe04 <ZSTD_endStream@@Base+0x1eb0>
    fdb4:	sub	x8, x25, x22
    fdb8:	cmp	x8, #0x4
    fdbc:	b.ge	fe04 <ZSTD_endStream@@Base+0x1eb0>  // b.tcont
    fdc0:	mov	x20, xzr
    fdc4:	mov	w8, #0x1                   	// #1
    fdc8:	b	fe08 <ZSTD_endStream@@Base+0x1eb4>
    fdcc:	add	x1, x19, #0x404
    fdd0:	mov	w2, #0xde0                 	// #3552
    fdd4:	mov	x19, x12
    fdd8:	bl	4420 <memcpy@plt>
    fddc:	sub	x20, x21, x19
    fde0:	mov	x0, x20
    fde4:	add	sp, sp, #0x1a0
    fde8:	ldp	x20, x19, [sp, #80]
    fdec:	ldp	x22, x21, [sp, #64]
    fdf0:	ldp	x24, x23, [sp, #48]
    fdf4:	ldp	x26, x25, [sp, #32]
    fdf8:	ldp	x28, x27, [sp, #16]
    fdfc:	ldp	x29, x30, [sp], #96
    fe00:	ret
    fe04:	mov	w8, wzr
    fe08:	ldr	x9, [sp, #88]
    fe0c:	cbnz	w8, fde0 <ZSTD_endStream@@Base+0x1e8c>
    fe10:	sub	x20, x25, x9
    fe14:	b	fde0 <ZSTD_endStream@@Base+0x1e8c>
    fe18:	sub	w8, w1, #0x1
    fe1c:	cmp	w1, #0x7
    fe20:	mov	w9, #0x6                   	// #6
    fe24:	csel	w8, w8, w9, hi  // hi = pmore
    fe28:	lsr	x8, x0, x8
    fe2c:	add	x0, x8, #0x2
    fe30:	ret
    fe34:	ldr	w8, [x0, #72]
    fe38:	cmp	w8, #0x1
    fe3c:	b.eq	fe6c <ZSTD_endStream@@Base+0x1f18>  // b.none
    fe40:	cmp	w8, #0x2
    fe44:	b.ne	fe50 <ZSTD_endStream@@Base+0x1efc>  // b.any
    fe48:	mov	w0, #0x1                   	// #1
    fe4c:	ret
    fe50:	ldr	w8, [x0, #28]
    fe54:	cmp	w8, #0x1
    fe58:	b.ne	fe6c <ZSTD_endStream@@Base+0x1f18>  // b.any
    fe5c:	ldr	w8, [x0, #24]
    fe60:	cmp	w8, #0x0
    fe64:	cset	w0, ne  // ne = any
    fe68:	ret
    fe6c:	mov	w0, wzr
    fe70:	ret
    fe74:	sub	sp, sp, #0xd0
    fe78:	str	x23, [sp, #160]
    fe7c:	stp	x22, x21, [sp, #176]
    fe80:	mov	x23, x2
    fe84:	mov	x21, x1
    fe88:	mov	x22, x0
    fe8c:	mov	x0, x1
    fe90:	mov	x1, x2
    fe94:	mov	x2, x3
    fe98:	stp	x29, x30, [sp, #144]
    fe9c:	stp	x20, x19, [sp, #192]
    fea0:	add	x29, sp, #0x90
    fea4:	mov	w19, w4
    fea8:	mov	x20, x3
    feac:	bl	1003c <ZSTD_endStream@@Base+0x20e8>
    feb0:	cbz	w0, fef8 <ZSTD_endStream@@Base+0x1fa4>
    feb4:	ldp	q0, q3, [x23]
    feb8:	mov	x2, sp
    febc:	mov	x0, x22
    fec0:	mov	x1, x21
    fec4:	stp	q0, q3, [sp]
    fec8:	ldp	q1, q0, [x23, #48]
    fecc:	ldr	q2, [x23, #32]
    fed0:	mov	x3, x20
    fed4:	mov	w4, w19
    fed8:	stp	q1, q0, [sp, #48]
    fedc:	str	q2, [sp, #32]
    fee0:	ldp	q1, q0, [x23, #112]
    fee4:	ldp	q3, q2, [x23, #80]
    fee8:	stp	q1, q0, [sp, #112]
    feec:	stp	q3, q2, [sp, #80]
    fef0:	bl	1008c <ZSTD_endStream@@Base+0x2138>
    fef4:	b	ff38 <ZSTD_endStream@@Base+0x1fe4>
    fef8:	ldp	q0, q3, [x23]
    fefc:	mov	x2, sp
    ff00:	mov	x0, x22
    ff04:	mov	x1, x21
    ff08:	stp	q0, q3, [sp]
    ff0c:	ldp	q1, q0, [x23, #48]
    ff10:	ldr	q2, [x23, #32]
    ff14:	mov	x3, x20
    ff18:	mov	w4, w19
    ff1c:	stp	q1, q0, [sp, #48]
    ff20:	str	q2, [sp, #32]
    ff24:	ldp	q1, q0, [x23, #112]
    ff28:	ldp	q3, q2, [x23, #80]
    ff2c:	stp	q1, q0, [sp, #112]
    ff30:	stp	q3, q2, [sp, #80]
    ff34:	bl	101c0 <ZSTD_endStream@@Base+0x226c>
    ff38:	ldp	x20, x19, [sp, #192]
    ff3c:	ldp	x22, x21, [sp, #176]
    ff40:	ldr	x23, [sp, #160]
    ff44:	ldp	x29, x30, [sp, #144]
    ff48:	add	sp, sp, #0xd0
    ff4c:	ret
    ff50:	stp	x29, x30, [sp, #-80]!
    ff54:	stp	x26, x25, [sp, #16]
    ff58:	mov	w25, w6
    ff5c:	stp	x24, x23, [sp, #32]
    ff60:	stp	x22, x21, [sp, #48]
    ff64:	stp	x20, x19, [sp, #64]
    ff68:	mov	x29, sp
    ff6c:	cbz	x4, ffc4 <ZSTD_endStream@@Base+0x2070>
    ff70:	mov	x20, x5
    ff74:	cmp	x5, #0x7
    ff78:	b.ls	ffc4 <ZSTD_endStream@@Base+0x2070>  // b.plast
    ff7c:	mov	w19, w7
    ff80:	mov	x21, x4
    ff84:	mov	x22, x3
    ff88:	mov	x23, x2
    ff8c:	mov	x24, x1
    ff90:	mov	x26, x0
    ff94:	bl	e644 <ZSTD_endStream@@Base+0x6f0>
    ff98:	cmp	w25, #0x1
    ff9c:	b.ne	ffd4 <ZSTD_endStream@@Base+0x2080>  // b.any
    ffa0:	mov	x0, x24
    ffa4:	mov	x1, x23
    ffa8:	mov	x2, x22
    ffac:	mov	x3, x21
    ffb0:	mov	x4, x20
    ffb4:	mov	w5, w19
    ffb8:	bl	1031c <ZSTD_endStream@@Base+0x23c8>
    ffbc:	mov	x0, xzr
    ffc0:	b	10024 <ZSTD_endStream@@Base+0x20d0>
    ffc4:	cmp	w25, #0x2
    ffc8:	mov	x8, #0xffffffffffffffe0    	// #-32
    ffcc:	csel	x0, x8, xzr, eq  // eq = none
    ffd0:	b	10024 <ZSTD_endStream@@Base+0x20d0>
    ffd4:	mov	x0, x21
    ffd8:	bl	10468 <ZSTD_endStream@@Base+0x2514>
    ffdc:	mov	w8, #0xa437                	// #42039
    ffe0:	movk	w8, #0xec30, lsl #16
    ffe4:	cmp	w0, w8
    ffe8:	b.eq	fff8 <ZSTD_endStream@@Base+0x20a4>  // b.none
    ffec:	cmp	w25, #0x2
    fff0:	b.eq	10020 <ZSTD_endStream@@Base+0x20cc>  // b.none
    fff4:	cbz	w25, ffa0 <ZSTD_endStream@@Base+0x204c>
    fff8:	ldr	x7, [x29, #80]
    fffc:	mov	x0, x26
   10000:	mov	x1, x24
   10004:	mov	x2, x23
   10008:	mov	x3, x22
   1000c:	mov	x4, x21
   10010:	mov	x5, x20
   10014:	mov	w6, w19
   10018:	bl	1047c <ZSTD_endStream@@Base+0x2528>
   1001c:	b	10024 <ZSTD_endStream@@Base+0x20d0>
   10020:	mov	x0, #0xffffffffffffffe0    	// #-32
   10024:	ldp	x20, x19, [sp, #64]
   10028:	ldp	x22, x21, [sp, #48]
   1002c:	ldp	x24, x23, [sp, #32]
   10030:	ldp	x26, x25, [sp, #16]
   10034:	ldp	x29, x30, [sp], #80
   10038:	ret
   1003c:	cmn	x2, #0x1
   10040:	b.eq	10068 <ZSTD_endStream@@Base+0x2114>  // b.none
   10044:	ldr	w8, [x0, #296]
   10048:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   1004c:	add	x9, x9, #0x430
   10050:	ldr	x8, [x9, x8, lsl #3]
   10054:	cmp	x8, x2
   10058:	b.cs	10068 <ZSTD_endStream@@Base+0x2114>  // b.hs, b.nlast
   1005c:	ldr	w8, [x1, #68]
   10060:	cmp	w8, #0x1
   10064:	b.ne	10074 <ZSTD_endStream@@Base+0x2120>  // b.any
   10068:	ldr	w8, [x1, #68]
   1006c:	cmp	w8, #0x2
   10070:	b.ne	1007c <ZSTD_endStream@@Base+0x2128>  // b.any
   10074:	mov	w0, wzr
   10078:	ret
   1007c:	ldr	w8, [x1, #48]
   10080:	cmp	w8, #0x0
   10084:	cset	w0, eq  // eq = none
   10088:	ret
   1008c:	sub	sp, sp, #0xf0
   10090:	stp	x29, x30, [sp, #176]
   10094:	stp	x24, x23, [sp, #192]
   10098:	stp	x22, x21, [sp, #208]
   1009c:	stp	x20, x19, [sp, #224]
   100a0:	add	x8, x1, #0x11c
   100a4:	ldr	q0, [x8]
   100a8:	ldr	q1, [x1, #272]
   100ac:	ldr	w24, [x2, #4]
   100b0:	add	x29, sp, #0xb0
   100b4:	mov	x23, x2
   100b8:	mov	x19, x1
   100bc:	mov	x20, x0
   100c0:	mov	x8, sp
   100c4:	sub	x0, x29, #0x20
   100c8:	mov	x1, x3
   100cc:	mov	x2, xzr
   100d0:	mov	w21, w4
   100d4:	mov	x22, x3
   100d8:	stur	q0, [x29, #-20]
   100dc:	stur	q1, [x29, #-32]
   100e0:	bl	b1a0 <ZSTD_adjustCParams@@Base+0x1b4>
   100e4:	ldur	q0, [sp, #12]
   100e8:	ldr	q1, [sp]
   100ec:	mov	x1, sp
   100f0:	mov	x0, x20
   100f4:	str	q0, [x23, #16]
   100f8:	stur	q1, [x23, #4]
   100fc:	str	w24, [x23, #4]
   10100:	ldp	q0, q3, [x23]
   10104:	mov	x2, x22
   10108:	mov	w3, wzr
   1010c:	mov	w4, w21
   10110:	stp	q0, q3, [sp]
   10114:	ldp	q1, q0, [x23, #48]
   10118:	ldr	q2, [x23, #32]
   1011c:	stp	q1, q0, [sp, #48]
   10120:	str	q2, [sp, #32]
   10124:	ldp	q1, q0, [x23, #112]
   10128:	ldp	q3, q2, [x23, #80]
   1012c:	stp	q1, q0, [sp, #112]
   10130:	stp	q3, q2, [sp, #80]
   10134:	bl	e018 <ZSTD_endStream@@Base+0xc4>
   10138:	mov	x21, x0
   1013c:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   10140:	cbnz	w0, 101a4 <ZSTD_endStream@@Base+0x2250>
   10144:	ldp	x8, x9, [x19, #88]
   10148:	ldr	w10, [x19, #112]
   1014c:	sub	x8, x8, x9
   10150:	cmp	w10, w8
   10154:	b.eq	10188 <ZSTD_endStream@@Base+0x2234>  // b.none
   10158:	ldr	w9, [x20, #792]
   1015c:	add	x10, x19, #0x58
   10160:	str	x10, [x20, #944]
   10164:	cmp	w9, w8
   10168:	b.cs	10180 <ZSTD_endStream@@Base+0x222c>  // b.hs, b.nlast
   1016c:	ldr	x9, [x20, #776]
   10170:	add	x0, x20, #0x300
   10174:	add	x8, x9, w8, uxtw
   10178:	str	x8, [x20, #768]
   1017c:	bl	e8ac <ZSTD_endStream@@Base+0x958>
   10180:	ldr	w8, [x20, #792]
   10184:	str	w8, [x20, #800]
   10188:	ldr	w8, [x19, #4920]
   1018c:	ldr	x0, [x20, #752]
   10190:	add	x1, x19, #0x130
   10194:	mov	w2, #0x11f0                	// #4592
   10198:	str	w8, [x20, #304]
   1019c:	bl	4420 <memcpy@plt>
   101a0:	mov	x21, xzr
   101a4:	mov	x0, x21
   101a8:	ldp	x20, x19, [sp, #224]
   101ac:	ldp	x22, x21, [sp, #208]
   101b0:	ldp	x24, x23, [sp, #192]
   101b4:	ldp	x29, x30, [sp, #176]
   101b8:	add	sp, sp, #0xf0
   101bc:	ret
   101c0:	sub	sp, sp, #0xe0
   101c4:	stp	x29, x30, [sp, #144]
   101c8:	stp	x24, x23, [sp, #176]
   101cc:	stp	x22, x21, [sp, #192]
   101d0:	stp	x20, x19, [sp, #208]
   101d4:	ldr	q0, [x1, #272]
   101d8:	ldr	w9, [x2, #4]
   101dc:	add	x10, x1, #0x11c
   101e0:	ldr	q1, [x10]
   101e4:	stur	q0, [x2, #4]
   101e8:	str	w9, [x2, #4]
   101ec:	ldr	q0, [x2]
   101f0:	str	x25, [sp, #160]
   101f4:	str	q1, [x2, #16]
   101f8:	mov	x8, x3
   101fc:	str	q0, [sp]
   10200:	ldp	q1, q0, [x2, #48]
   10204:	ldp	q3, q2, [x2, #16]
   10208:	mov	x19, x1
   1020c:	mov	x1, sp
   10210:	stp	q1, q0, [sp, #48]
   10214:	stp	q3, q2, [sp, #16]
   10218:	ldp	q1, q0, [x2, #112]
   1021c:	ldp	q3, q2, [x2, #80]
   10220:	mov	w3, #0x1                   	// #1
   10224:	mov	x2, x8
   10228:	add	x29, sp, #0x90
   1022c:	mov	x20, x0
   10230:	stp	q1, q0, [sp, #112]
   10234:	stp	q3, q2, [sp, #80]
   10238:	bl	e018 <ZSTD_endStream@@Base+0xc4>
   1023c:	mov	x21, x0
   10240:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   10244:	cbnz	w0, 102fc <ZSTD_endStream@@Base+0x23a8>
   10248:	add	x21, x20, #0x138
   1024c:	mov	x0, x21
   10250:	add	x23, x19, #0x58
   10254:	bl	e524 <ZSTD_endStream@@Base+0x5d0>
   10258:	ldr	w8, [x19, #296]
   1025c:	cmp	w8, #0x1
   10260:	b.ne	1026c <ZSTD_endStream@@Base+0x2318>  // b.any
   10264:	mov	x22, xzr
   10268:	b	10278 <ZSTD_endStream@@Base+0x2324>
   1026c:	ldr	w8, [x19, #276]
   10270:	mov	w9, #0x4                   	// #4
   10274:	lsl	x22, x9, x8
   10278:	ldr	w8, [x19, #280]
   1027c:	ldr	x0, [x20, #816]
   10280:	ldr	x1, [x19, #136]
   10284:	mov	w25, #0x4                   	// #4
   10288:	lsl	x2, x25, x8
   1028c:	add	x24, x20, #0x2f0
   10290:	bl	4420 <memcpy@plt>
   10294:	ldr	x0, [x20, #832]
   10298:	ldr	x1, [x19, #152]
   1029c:	mov	x2, x22
   102a0:	bl	4420 <memcpy@plt>
   102a4:	ldr	w8, [x20, #808]
   102a8:	ldr	x0, [x20, #824]
   102ac:	mov	w1, wzr
   102b0:	lsl	x9, x25, x8
   102b4:	cmp	w8, #0x0
   102b8:	csel	x2, xzr, x9, eq  // eq = none
   102bc:	bl	46a0 <memset@plt>
   102c0:	mov	x0, x21
   102c4:	bl	e530 <ZSTD_endStream@@Base+0x5dc>
   102c8:	ldp	q1, q0, [x23]
   102cc:	add	x1, x19, #0x130
   102d0:	mov	w2, #0x11f0                	// #4592
   102d4:	stp	q1, q0, [x20, #768]
   102d8:	ldr	w8, [x19, #124]
   102dc:	str	w8, [x24, #52]
   102e0:	ldr	w8, [x19, #120]
   102e4:	ldr	x0, [x20, #752]
   102e8:	str	w8, [x20, #800]
   102ec:	ldr	w8, [x19, #4920]
   102f0:	str	w8, [x20, #304]
   102f4:	bl	4420 <memcpy@plt>
   102f8:	mov	x21, xzr
   102fc:	mov	x0, x21
   10300:	ldp	x20, x19, [sp, #208]
   10304:	ldp	x22, x21, [sp, #192]
   10308:	ldp	x24, x23, [sp, #176]
   1030c:	ldr	x25, [sp, #160]
   10310:	ldp	x29, x30, [sp, #144]
   10314:	add	sp, sp, #0xe0
   10318:	ret
   1031c:	stp	x29, x30, [sp, #-96]!
   10320:	stp	x22, x21, [sp, #64]
   10324:	mov	x21, x2
   10328:	mov	x22, x1
   1032c:	mov	x1, x3
   10330:	mov	x2, x4
   10334:	str	x27, [sp, #16]
   10338:	stp	x26, x25, [sp, #32]
   1033c:	stp	x24, x23, [sp, #48]
   10340:	stp	x20, x19, [sp, #80]
   10344:	mov	x29, sp
   10348:	mov	w20, w5
   1034c:	mov	x24, x4
   10350:	mov	x23, x3
   10354:	mov	x19, x0
   10358:	add	x25, x3, x4
   1035c:	bl	ecbc <ZSTD_endStream@@Base+0xd68>
   10360:	ldr	w8, [x21, #48]
   10364:	cbz	w8, 10370 <ZSTD_endStream@@Base+0x241c>
   10368:	mov	w8, wzr
   1036c:	b	10378 <ZSTD_endStream@@Base+0x2424>
   10370:	ldr	w8, [x19, #8]
   10374:	sub	w8, w25, w8
   10378:	cmp	x24, #0x9
   1037c:	str	w8, [x19, #32]
   10380:	b.cc	1044c <ZSTD_endStream@@Base+0x24f8>  // b.lo, b.ul, b.last
   10384:	b.lt	10440 <ZSTD_endStream@@Base+0x24ec>  // b.tstop
   10388:	adrp	x27, 67000 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2dc>
   1038c:	mov	w26, #0x1fffffff            	// #536870911
   10390:	add	x27, x27, #0x85c
   10394:	b	103b4 <ZSTD_endStream@@Base+0x2460>
   10398:	mov	x0, x19
   1039c:	mov	x1, x23
   103a0:	mov	w2, w20
   103a4:	bl	1188c <ZSTD_endStream@@Base+0x3938>
   103a8:	sub	x24, x25, x23
   103ac:	cmp	x24, #0x8
   103b0:	b.le	10440 <ZSTD_endStream@@Base+0x24ec>
   103b4:	cmp	x24, x26
   103b8:	csel	x24, x24, x26, cc  // cc = lo, ul, last
   103bc:	mov	x3, x23
   103c0:	add	x23, x23, x24
   103c4:	mov	x0, x19
   103c8:	mov	x1, x22
   103cc:	mov	x2, x21
   103d0:	mov	x4, x23
   103d4:	bl	ed44 <ZSTD_endStream@@Base+0xdf0>
   103d8:	ldr	w8, [x21, #28]
   103dc:	sub	w8, w8, #0x1
   103e0:	cmp	w8, #0x8
   103e4:	b.hi	103a8 <ZSTD_endStream@@Base+0x2454>  // b.pmore
   103e8:	adr	x9, 10398 <ZSTD_endStream@@Base+0x2444>
   103ec:	ldrb	w10, [x27, x8]
   103f0:	add	x9, x9, x10, lsl #2
   103f4:	br	x9
   103f8:	cmp	x24, #0x8
   103fc:	b.cc	103a8 <ZSTD_endStream@@Base+0x2454>  // b.lo, b.ul, b.last
   10400:	sub	x1, x23, #0x8
   10404:	mov	x0, x19
   10408:	mov	x2, x23
   1040c:	bl	271ac <ZSTD_endStream@@Base+0x19258>
   10410:	b	103a8 <ZSTD_endStream@@Base+0x2454>
   10414:	cmp	x24, #0x8
   10418:	b.cc	103a8 <ZSTD_endStream@@Base+0x2454>  // b.lo, b.ul, b.last
   1041c:	sub	x1, x23, #0x8
   10420:	mov	x0, x19
   10424:	bl	1c204 <ZSTD_endStream@@Base+0xe2b0>
   10428:	b	103a8 <ZSTD_endStream@@Base+0x2454>
   1042c:	mov	x0, x19
   10430:	mov	x1, x23
   10434:	mov	w2, w20
   10438:	bl	17c3c <ZSTD_endStream@@Base+0x9ce8>
   1043c:	b	103a8 <ZSTD_endStream@@Base+0x2454>
   10440:	ldr	w8, [x19, #8]
   10444:	sub	w8, w25, w8
   10448:	str	w8, [x19, #36]
   1044c:	ldp	x20, x19, [sp, #80]
   10450:	ldp	x22, x21, [sp, #64]
   10454:	ldp	x24, x23, [sp, #48]
   10458:	ldp	x26, x25, [sp, #32]
   1045c:	ldr	x27, [sp, #16]
   10460:	ldp	x29, x30, [sp], #96
   10464:	ret
   10468:	stp	x29, x30, [sp, #-16]!
   1046c:	mov	x29, sp
   10470:	bl	1082c <ZSTD_endStream@@Base+0x28d8>
   10474:	ldp	x29, x30, [sp], #16
   10478:	ret
   1047c:	sub	sp, sp, #0x140
   10480:	stp	x29, x30, [sp, #224]
   10484:	add	x29, sp, #0xe0
   10488:	mov	w8, #0x1f                  	// #31
   1048c:	stp	x28, x27, [sp, #240]
   10490:	stp	x26, x25, [sp, #256]
   10494:	stp	x24, x23, [sp, #272]
   10498:	stp	x22, x21, [sp, #288]
   1049c:	stp	x20, x19, [sp, #304]
   104a0:	stur	w8, [x29, #-76]
   104a4:	ldr	w8, [x3, #40]
   104a8:	mov	x25, x7
   104ac:	mov	w21, w6
   104b0:	mov	x27, x5
   104b4:	mov	x28, x4
   104b8:	mov	x20, x3
   104bc:	mov	x22, x2
   104c0:	mov	x23, x0
   104c4:	str	x1, [sp, #24]
   104c8:	cbz	w8, 104d4 <ZSTD_endStream@@Base+0x2580>
   104cc:	str	xzr, [sp, #16]
   104d0:	b	104e4 <ZSTD_endStream@@Base+0x2590>
   104d4:	add	x0, x28, #0x4
   104d8:	bl	10468 <ZSTD_endStream@@Base+0x2514>
   104dc:	mov	w8, w0
   104e0:	str	x8, [sp, #16]
   104e4:	add	x19, x28, #0x8
   104e8:	mov	w8, #0xff                  	// #255
   104ec:	sub	x3, x27, #0x8
   104f0:	add	x1, sp, #0x28
   104f4:	mov	x0, x23
   104f8:	mov	x2, x19
   104fc:	str	w8, [sp, #40]
   10500:	bl	8aa0 <ZSTD_getErrorString@@Base+0x1bb4>
   10504:	mov	x24, x0
   10508:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   1050c:	ldr	w8, [sp, #40]
   10510:	add	x9, x19, x24
   10514:	mov	x26, #0xffffffffffffffe2    	// #-30
   10518:	cmp	w8, #0xff
   1051c:	ccmp	w0, #0x0, #0x0, cs  // cs = hs, nlast
   10520:	csel	x24, x19, x9, ne  // ne = any
   10524:	cbnz	w0, 10714 <ZSTD_endStream@@Base+0x27c0>
   10528:	cmp	w8, #0xff
   1052c:	b.cc	10714 <ZSTD_endStream@@Base+0x27c0>  // b.lo, b.ul, b.last
   10530:	str	x22, [sp, #8]
   10534:	add	x22, x28, x27
   10538:	sub	x4, x22, x24
   1053c:	sub	x0, x29, #0x48
   10540:	sub	x1, x29, #0x4c
   10544:	add	x2, sp, #0x28
   10548:	mov	x3, x24
   1054c:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
   10550:	mov	x26, x0
   10554:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   10558:	cbnz	w0, 10568 <ZSTD_endStream@@Base+0x2614>
   1055c:	ldr	w3, [sp, #40]
   10560:	cmp	w3, #0x8
   10564:	b.ls	106d0 <ZSTD_endStream@@Base+0x277c>  // b.plast
   10568:	mov	w8, wzr
   1056c:	cbz	w8, 10710 <ZSTD_endStream@@Base+0x27bc>
   10570:	mov	w8, #0x34                  	// #52
   10574:	sub	x4, x22, x24
   10578:	add	x0, sp, #0x28
   1057c:	add	x1, sp, #0x24
   10580:	add	x2, sp, #0x20
   10584:	mov	x3, x24
   10588:	str	w8, [sp, #36]
   1058c:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
   10590:	mov	x27, x0
   10594:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   10598:	mov	x26, #0xffffffffffffffe2    	// #-30
   1059c:	mov	w8, #0x1                   	// #1
   105a0:	cbnz	w0, 10618 <ZSTD_endStream@@Base+0x26c4>
   105a4:	ldr	w28, [sp, #32]
   105a8:	cmp	w28, #0x9
   105ac:	b.hi	10618 <ZSTD_endStream@@Base+0x26c4>  // b.pmore
   105b0:	ldr	w19, [sp, #36]
   105b4:	add	x0, sp, #0x28
   105b8:	mov	w2, #0x34                  	// #52
   105bc:	mov	w1, w19
   105c0:	bl	10834 <ZSTD_endStream@@Base+0x28e0>
   105c4:	mov	x26, x0
   105c8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   105cc:	cmp	w0, #0x0
   105d0:	mov	x9, #0xffffffffffffffe2    	// #-30
   105d4:	cset	w8, ne  // ne = any
   105d8:	csel	x26, x9, x26, eq  // eq = none
   105dc:	cbnz	w0, 10618 <ZSTD_endStream@@Base+0x26c4>
   105e0:	add	x0, x23, #0x708
   105e4:	add	x1, sp, #0x28
   105e8:	mov	w5, #0x1800                	// #6144
   105ec:	mov	w2, w19
   105f0:	mov	w3, w28
   105f4:	mov	x4, x25
   105f8:	mov	x19, #0xffffffffffffffe2    	// #-30
   105fc:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
   10600:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   10604:	cmp	w0, #0x0
   10608:	add	x9, x24, x27
   1060c:	cset	w8, ne  // ne = any
   10610:	csel	x24, x9, x24, eq  // eq = none
   10614:	csel	x26, x26, x19, eq  // eq = none
   10618:	tbnz	w8, #0, 10714 <ZSTD_endStream@@Base+0x27c0>
   1061c:	mov	w8, #0x23                  	// #35
   10620:	sub	x4, x22, x24
   10624:	add	x0, sp, #0x28
   10628:	add	x1, sp, #0x24
   1062c:	add	x2, sp, #0x20
   10630:	mov	x3, x24
   10634:	str	w21, [sp, #4]
   10638:	str	w8, [sp, #36]
   1063c:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
   10640:	mov	x27, x0
   10644:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   10648:	mov	x21, #0xffffffffffffffe2    	// #-30
   1064c:	mov	w8, #0x1                   	// #1
   10650:	cbnz	w0, 106c4 <ZSTD_endStream@@Base+0x2770>
   10654:	ldr	w28, [sp, #32]
   10658:	cmp	w28, #0x9
   1065c:	b.hi	106c4 <ZSTD_endStream@@Base+0x2770>  // b.pmore
   10660:	ldr	w19, [sp, #36]
   10664:	add	x0, sp, #0x28
   10668:	mov	w2, #0x23                  	// #35
   1066c:	mov	w1, w19
   10670:	bl	10834 <ZSTD_endStream@@Base+0x28e0>
   10674:	mov	x21, x0
   10678:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   1067c:	cmp	w0, #0x0
   10680:	cset	w8, ne  // ne = any
   10684:	csel	x21, x26, x21, eq  // eq = none
   10688:	cbnz	w0, 106c4 <ZSTD_endStream@@Base+0x2770>
   1068c:	add	x0, x23, #0xcb4
   10690:	add	x1, sp, #0x28
   10694:	mov	w5, #0x1800                	// #6144
   10698:	mov	w2, w19
   1069c:	mov	w3, w28
   106a0:	mov	x4, x25
   106a4:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
   106a8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   106ac:	cmp	w0, #0x0
   106b0:	add	x9, x24, x27
   106b4:	mov	x10, #0xffffffffffffffe2    	// #-30
   106b8:	cset	w8, ne  // ne = any
   106bc:	csel	x24, x9, x24, eq  // eq = none
   106c0:	csel	x21, x21, x10, eq  // eq = none
   106c4:	tbz	w8, #0, 10704 <ZSTD_endStream@@Base+0x27b0>
   106c8:	mov	x26, x21
   106cc:	b	10714 <ZSTD_endStream@@Base+0x27c0>
   106d0:	add	x0, x23, #0x404
   106d4:	sub	x1, x29, #0x48
   106d8:	mov	w2, #0x1f                  	// #31
   106dc:	mov	w5, #0x1800                	// #6144
   106e0:	mov	x4, x25
   106e4:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
   106e8:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   106ec:	cmp	w0, #0x0
   106f0:	add	x9, x24, x26
   106f4:	cset	w8, eq  // eq = none
   106f8:	csel	x24, x9, x24, eq  // eq = none
   106fc:	cbz	w8, 10710 <ZSTD_endStream@@Base+0x27bc>
   10700:	b	10570 <ZSTD_endStream@@Base+0x261c>
   10704:	add	x25, x24, #0xc
   10708:	cmp	x25, x22
   1070c:	b.ls	10738 <ZSTD_endStream@@Base+0x27e4>  // b.plast
   10710:	mov	x26, #0xffffffffffffffe2    	// #-30
   10714:	mov	x0, x26
   10718:	ldp	x20, x19, [sp, #304]
   1071c:	ldp	x22, x21, [sp, #288]
   10720:	ldp	x24, x23, [sp, #272]
   10724:	ldp	x26, x25, [sp, #256]
   10728:	ldp	x28, x27, [sp, #240]
   1072c:	ldp	x29, x30, [sp, #224]
   10730:	add	sp, sp, #0x140
   10734:	ret
   10738:	mov	x0, x24
   1073c:	bl	10468 <ZSTD_endStream@@Base+0x2514>
   10740:	str	w0, [x23, #4580]
   10744:	add	x0, x24, #0x4
   10748:	bl	10468 <ZSTD_endStream@@Base+0x2514>
   1074c:	str	w0, [x23, #4584]
   10750:	add	x0, x24, #0x8
   10754:	bl	10468 <ZSTD_endStream@@Base+0x2514>
   10758:	sub	x24, x22, x25
   1075c:	mov	w8, #0xfffdffff            	// #-131073
   10760:	str	w0, [x23, #4588]
   10764:	mov	w19, #0x1f                  	// #31
   10768:	cmp	x24, x8
   1076c:	mov	w0, #0x1f                  	// #31
   10770:	b.hi	1077c <ZSTD_endStream@@Base+0x2828>  // b.pmore
   10774:	add	w0, w24, #0x20, lsl #12
   10778:	bl	bb80 <ZSTD_copyCCtx@@Base+0x2ec>
   1077c:	ldur	w1, [x29, #-76]
   10780:	cmp	w0, #0x1f
   10784:	csel	w2, w0, w19, cc  // cc = lo, ul, last
   10788:	sub	x0, x29, #0x48
   1078c:	bl	10834 <ZSTD_endStream@@Base+0x28e0>
   10790:	mov	x19, x0
   10794:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   10798:	ldr	x1, [sp, #8]
   1079c:	cmp	w0, #0x0
   107a0:	csel	x26, x21, x19, eq  // eq = none
   107a4:	cbnz	w0, 10714 <ZSTD_endStream@@Base+0x27c0>
   107a8:	ldr	w5, [sp, #4]
   107ac:	mov	w9, #0x11e4                	// #4580
   107b0:	mov	x8, xzr
   107b4:	add	x9, x23, x9
   107b8:	mov	x11, #0xffffffffffffffe2    	// #-30
   107bc:	ldr	w12, [x9, x8]
   107c0:	mov	w10, wzr
   107c4:	cbz	w12, 107e4 <ZSTD_endStream@@Base+0x2890>
   107c8:	cmp	x24, x12
   107cc:	b.cc	107e4 <ZSTD_endStream@@Base+0x2890>  // b.lo, b.ul, b.last
   107d0:	add	x8, x8, #0x4
   107d4:	cmp	w8, #0xc
   107d8:	b.ne	107bc <ZSTD_endStream@@Base+0x2868>  // b.any
   107dc:	mov	w10, #0x1                   	// #1
   107e0:	mov	x11, x26
   107e4:	mov	x26, x11
   107e8:	cbz	w10, 10714 <ZSTD_endStream@@Base+0x27c0>
   107ec:	ldr	x0, [sp, #24]
   107f0:	mov	w8, #0x2                   	// #2
   107f4:	mov	x9, #0x200000002           	// #8589934594
   107f8:	mov	x2, x20
   107fc:	mov	x3, x25
   10800:	mov	x4, x24
   10804:	str	w8, [x23, #1024]
   10808:	str	x9, [x23, #4568]
   1080c:	str	w8, [x23, #4576]
   10810:	bl	1031c <ZSTD_endStream@@Base+0x23c8>
   10814:	mov	x0, xzr
   10818:	bl	a524 <ZSTD_checkCParams@@Base+0xa0>
   1081c:	ldr	x8, [sp, #16]
   10820:	cmp	w0, #0x0
   10824:	csel	x26, x8, xzr, eq  // eq = none
   10828:	b	10714 <ZSTD_endStream@@Base+0x27c0>
   1082c:	ldr	w0, [x0]
   10830:	ret
   10834:	cmp	w1, w2
   10838:	b.cs	10844 <ZSTD_endStream@@Base+0x28f0>  // b.hs, b.nlast
   1083c:	mov	x0, #0xffffffffffffffe2    	// #-30
   10840:	ret
   10844:	mov	w8, wzr
   10848:	ldrh	w9, [x0, w8, uxtw #1]
   1084c:	cbz	w9, 1083c <ZSTD_endStream@@Base+0x28e8>
   10850:	add	w8, w8, #0x1
   10854:	cmp	w8, w2
   10858:	b.ls	10848 <ZSTD_endStream@@Base+0x28f4>  // b.plast
   1085c:	mov	x0, xzr
   10860:	ret
   10864:	ldr	x9, [x0, #1024]
   10868:	ldr	x10, [x0, #1016]
   1086c:	mov	x8, x0
   10870:	subs	x0, x9, x10
   10874:	b.eq	1087c <ZSTD_endStream@@Base+0x2928>  // b.none
   10878:	ret
   1087c:	ldr	x0, [x8, #376]
   10880:	ret
   10884:	stp	x29, x30, [sp, #-32]!
   10888:	cmp	x1, x3
   1088c:	str	x19, [sp, #16]
   10890:	csel	x19, x1, x3, cc  // cc = lo, ul, last
   10894:	mov	x29, sp
   10898:	cbz	x19, 108a8 <ZSTD_endStream@@Base+0x2954>
   1089c:	mov	x1, x2
   108a0:	mov	x2, x19
   108a4:	bl	4420 <memcpy@plt>
   108a8:	mov	x0, x19
   108ac:	ldr	x19, [sp, #16]
   108b0:	ldp	x29, x30, [sp], #32
   108b4:	ret
   108b8:	stp	x29, x30, [sp, #-64]!
   108bc:	cmp	x3, #0x1f
   108c0:	mov	w8, #0x1                   	// #1
   108c4:	cinc	w8, w8, hi  // hi = pmore
   108c8:	cmp	x3, #0xfff
   108cc:	str	x23, [sp, #16]
   108d0:	cinc	w23, w8, hi  // hi = pmore
   108d4:	stp	x20, x19, [sp, #48]
   108d8:	add	x20, x23, x3
   108dc:	cmp	x20, x1
   108e0:	stp	x22, x21, [sp, #32]
   108e4:	mov	x29, sp
   108e8:	b.ls	108f4 <ZSTD_endStream@@Base+0x29a0>  // b.plast
   108ec:	mov	x20, #0xffffffffffffffba    	// #-70
   108f0:	b	10958 <ZSTD_endStream@@Base+0x2a04>
   108f4:	mov	x19, x3
   108f8:	mov	x21, x2
   108fc:	mov	x22, x0
   10900:	cmp	w23, #0x3
   10904:	b.eq	10924 <ZSTD_endStream@@Base+0x29d0>  // b.none
   10908:	cmp	w23, #0x2
   1090c:	b.eq	10938 <ZSTD_endStream@@Base+0x29e4>  // b.none
   10910:	cmp	w23, #0x1
   10914:	b.ne	10948 <ZSTD_endStream@@Base+0x29f4>  // b.any
   10918:	lsl	w8, w19, #3
   1091c:	strb	w8, [x22]
   10920:	b	10948 <ZSTD_endStream@@Base+0x29f4>
   10924:	mov	w1, #0xc                   	// #12
   10928:	bfi	w1, w19, #4, #28
   1092c:	mov	x0, x22
   10930:	bl	10984 <ZSTD_endStream@@Base+0x2a30>
   10934:	b	10948 <ZSTD_endStream@@Base+0x29f4>
   10938:	mov	w1, #0x4                   	// #4
   1093c:	bfi	w1, w19, #4, #28
   10940:	mov	x0, x22
   10944:	bl	10970 <ZSTD_endStream@@Base+0x2a1c>
   10948:	add	x0, x22, x23
   1094c:	mov	x1, x21
   10950:	mov	x2, x19
   10954:	bl	4420 <memcpy@plt>
   10958:	mov	x0, x20
   1095c:	ldp	x20, x19, [sp, #48]
   10960:	ldp	x22, x21, [sp, #32]
   10964:	ldr	x23, [sp, #16]
   10968:	ldp	x29, x30, [sp], #64
   1096c:	ret
   10970:	stp	x29, x30, [sp, #-16]!
   10974:	mov	x29, sp
   10978:	bl	10d30 <ZSTD_endStream@@Base+0x2ddc>
   1097c:	ldp	x29, x30, [sp], #16
   10980:	ret
   10984:	stp	x29, x30, [sp, #-16]!
   10988:	mov	x29, sp
   1098c:	bl	10d38 <ZSTD_endStream@@Base+0x2de4>
   10990:	ldp	x29, x30, [sp], #16
   10994:	ret
   10998:	stp	x29, x30, [sp, #-48]!
   1099c:	cmp	x3, #0x1f
   109a0:	mov	w8, #0x1                   	// #1
   109a4:	cinc	w8, w8, hi  // hi = pmore
   109a8:	cmp	x3, #0xfff
   109ac:	str	x21, [sp, #16]
   109b0:	cinc	x21, x8, hi  // hi = pmore
   109b4:	stp	x20, x19, [sp, #32]
   109b8:	mov	x19, x2
   109bc:	cmp	w21, #0x3
   109c0:	mov	x20, x0
   109c4:	mov	x29, sp
   109c8:	b.eq	109ec <ZSTD_endStream@@Base+0x2a98>  // b.none
   109cc:	cmp	w21, #0x2
   109d0:	b.eq	10a00 <ZSTD_endStream@@Base+0x2aac>  // b.none
   109d4:	cmp	w21, #0x1
   109d8:	b.ne	10a10 <ZSTD_endStream@@Base+0x2abc>  // b.any
   109dc:	mov	w8, #0x1                   	// #1
   109e0:	bfi	w8, w3, #3, #29
   109e4:	strb	w8, [x20]
   109e8:	b	10a10 <ZSTD_endStream@@Base+0x2abc>
   109ec:	mov	w1, #0xd                   	// #13
   109f0:	bfi	w1, w3, #4, #28
   109f4:	mov	x0, x20
   109f8:	bl	10984 <ZSTD_endStream@@Base+0x2a30>
   109fc:	b	10a10 <ZSTD_endStream@@Base+0x2abc>
   10a00:	mov	w1, #0x5                   	// #5
   10a04:	bfi	w1, w3, #4, #28
   10a08:	mov	x0, x20
   10a0c:	bl	10970 <ZSTD_endStream@@Base+0x2a1c>
   10a10:	ldrb	w8, [x19]
   10a14:	add	w0, w21, #0x1
   10a18:	strb	w8, [x20, x21]
   10a1c:	ldp	x20, x19, [sp, #32]
   10a20:	ldr	x21, [sp, #16]
   10a24:	ldp	x29, x30, [sp], #48
   10a28:	ret
   10a2c:	sub	sp, sp, #0x90
   10a30:	stp	x24, x23, [sp, #96]
   10a34:	stp	x22, x21, [sp, #112]
   10a38:	mov	x22, x1
   10a3c:	mov	x24, x0
   10a40:	mov	x0, x7
   10a44:	mov	w1, w2
   10a48:	stp	x29, x30, [sp, #48]
   10a4c:	stp	x28, x27, [sp, #64]
   10a50:	stp	x26, x25, [sp, #80]
   10a54:	stp	x20, x19, [sp, #128]
   10a58:	add	x29, sp, #0x30
   10a5c:	mov	x20, x7
   10a60:	mov	x21, x6
   10a64:	mov	x23, x5
   10a68:	mov	x19, x4
   10a6c:	mov	w27, w3
   10a70:	mov	w26, w2
   10a74:	bl	10cdc <ZSTD_endStream@@Base+0x2d88>
   10a78:	cmp	x20, #0x3ff
   10a7c:	mov	w8, #0x3                   	// #3
   10a80:	lsr	x9, x20, #14
   10a84:	mov	x25, x0
   10a88:	cinc	x8, x8, hi  // hi = pmore
   10a8c:	cmp	x9, #0x0
   10a90:	mov	w2, #0x404                 	// #1028
   10a94:	mov	x0, x22
   10a98:	mov	x1, x24
   10a9c:	cinc	x28, x8, ne  // ne = any
   10aa0:	bl	4420 <memcpy@plt>
   10aa4:	cbz	w27, 10ac0 <ZSTD_endStream@@Base+0x2b6c>
   10aa8:	mov	x0, x19
   10aac:	mov	x1, x23
   10ab0:	mov	x2, x21
   10ab4:	mov	x3, x20
   10ab8:	bl	108b8 <ZSTD_endStream@@Base+0x2964>
   10abc:	b	10b90 <ZSTD_endStream@@Base+0x2c3c>
   10ac0:	ldr	w8, [x24, #1024]
   10ac4:	mov	w9, #0x3f                  	// #63
   10ac8:	cmp	w8, #0x2
   10acc:	mov	w8, #0x6                   	// #6
   10ad0:	csel	x8, x8, x9, eq  // eq = none
   10ad4:	cmp	x8, x20
   10ad8:	b.cs	10ae8 <ZSTD_endStream@@Base+0x2b94>  // b.hs, b.nlast
   10adc:	mov	w8, #0x1                   	// #1
   10ae0:	cbnz	w8, 10b04 <ZSTD_endStream@@Base+0x2bb0>
   10ae4:	b	10b90 <ZSTD_endStream@@Base+0x2c3c>
   10ae8:	mov	x0, x19
   10aec:	mov	x1, x23
   10af0:	mov	x2, x21
   10af4:	mov	x3, x20
   10af8:	bl	108b8 <ZSTD_endStream@@Base+0x2964>
   10afc:	mov	w8, wzr
   10b00:	cbz	w8, 10b90 <ZSTD_endStream@@Base+0x2c3c>
   10b04:	cmp	x28, x23
   10b08:	b.cs	10b8c <ZSTD_endStream@@Base+0x2c38>  // b.hs, b.nlast
   10b0c:	ldr	w10, [x24, #1024]
   10b10:	cmp	x20, #0x100
   10b14:	cset	w11, cc  // cc = lo, ul, last
   10b18:	cmp	w26, #0x4
   10b1c:	cset	w9, cc  // cc = lo, ul, last
   10b20:	cmp	x20, #0x401
   10b24:	cset	w12, cc  // cc = lo, ul, last
   10b28:	cmp	w10, #0x2
   10b2c:	stur	w10, [x29, #-4]
   10b30:	cset	w10, eq  // eq = none
   10b34:	cmp	x28, #0x3
   10b38:	ldp	x6, x7, [x29, #96]
   10b3c:	ldr	w8, [x29, #112]
   10b40:	and	w9, w9, w12
   10b44:	cset	w12, eq  // eq = none
   10b48:	and	w10, w12, w10
   10b4c:	orr	w10, w11, w10
   10b50:	add	x0, x19, x28
   10b54:	cmp	w10, #0x1
   10b58:	sub	x1, x23, x28
   10b5c:	stur	w10, [x29, #-12]
   10b60:	b.ne	10bb0 <ZSTD_endStream@@Base+0x2c5c>  // b.any
   10b64:	str	w8, [sp, #24]
   10b68:	sub	x8, x29, #0x4
   10b6c:	mov	w4, #0xff                  	// #255
   10b70:	mov	w5, #0xb                   	// #11
   10b74:	mov	x2, x21
   10b78:	mov	x3, x20
   10b7c:	str	w9, [sp, #16]
   10b80:	stp	x22, x8, [sp]
   10b84:	bl	9a94 <ZSTD_getErrorString@@Base+0x2ba8>
   10b88:	b	10bd4 <ZSTD_endStream@@Base+0x2c80>
   10b8c:	mov	x0, #0xffffffffffffffba    	// #-70
   10b90:	ldp	x20, x19, [sp, #128]
   10b94:	ldp	x22, x21, [sp, #112]
   10b98:	ldp	x24, x23, [sp, #96]
   10b9c:	ldp	x26, x25, [sp, #80]
   10ba0:	ldp	x28, x27, [sp, #64]
   10ba4:	ldp	x29, x30, [sp, #48]
   10ba8:	add	sp, sp, #0x90
   10bac:	ret
   10bb0:	str	w8, [sp, #24]
   10bb4:	sub	x8, x29, #0x4
   10bb8:	mov	w4, #0xff                  	// #255
   10bbc:	mov	w5, #0xb                   	// #11
   10bc0:	mov	x2, x21
   10bc4:	mov	x3, x20
   10bc8:	str	w9, [sp, #16]
   10bcc:	stp	x22, x8, [sp]
   10bd0:	bl	9b38 <ZSTD_getErrorString@@Base+0x2c4c>
   10bd4:	ldur	w27, [x29, #-4]
   10bd8:	mov	w8, #0x2                   	// #2
   10bdc:	sub	x9, x20, x25
   10be0:	mov	x26, x0
   10be4:	cmp	w27, #0x0
   10be8:	cinc	w8, w8, ne  // ne = any
   10bec:	cmp	x0, #0x0
   10bf0:	stur	w8, [x29, #-8]
   10bf4:	cset	w8, eq  // eq = none
   10bf8:	cmp	x0, x9
   10bfc:	cset	w9, cs  // cs = hs, nlast
   10c00:	orr	w25, w8, w9
   10c04:	bl	10cf8 <ZSTD_endStream@@Base+0x2da4>
   10c08:	orr	w8, w0, w25
   10c0c:	cbz	w8, 10c24 <ZSTD_endStream@@Base+0x2cd0>
   10c10:	mov	w2, #0x404                 	// #1028
   10c14:	mov	x0, x22
   10c18:	mov	x1, x24
   10c1c:	bl	4420 <memcpy@plt>
   10c20:	b	10aa8 <ZSTD_endStream@@Base+0x2b54>
   10c24:	ldur	w9, [x29, #-8]
   10c28:	cmp	x26, #0x1
   10c2c:	b.ne	10c54 <ZSTD_endStream@@Base+0x2d00>  // b.any
   10c30:	mov	w2, #0x404                 	// #1028
   10c34:	mov	x0, x22
   10c38:	mov	x1, x24
   10c3c:	bl	4420 <memcpy@plt>
   10c40:	mov	x0, x19
   10c44:	mov	x2, x21
   10c48:	mov	x3, x20
   10c4c:	bl	10998 <ZSTD_endStream@@Base+0x2a44>
   10c50:	b	10b90 <ZSTD_endStream@@Base+0x2c3c>
   10c54:	cbnz	w27, 10c60 <ZSTD_endStream@@Base+0x2d0c>
   10c58:	mov	w8, #0x1                   	// #1
   10c5c:	str	w8, [x22, #1024]
   10c60:	cmp	x28, #0x5
   10c64:	b.eq	10ca0 <ZSTD_endStream@@Base+0x2d4c>  // b.none
   10c68:	cmp	x28, #0x4
   10c6c:	b.eq	10cc0 <ZSTD_endStream@@Base+0x2d6c>  // b.none
   10c70:	cmp	x28, #0x3
   10c74:	b.ne	10cd4 <ZSTD_endStream@@Base+0x2d80>  // b.any
   10c78:	ldur	w8, [x29, #-12]
   10c7c:	mov	x0, x19
   10c80:	cmp	w8, #0x0
   10c84:	mov	w8, #0x4                   	// #4
   10c88:	csel	w8, wzr, w8, ne  // ne = any
   10c8c:	bfi	w8, w20, #4, #28
   10c90:	orr	w8, w8, w9
   10c94:	add	w1, w8, w26, lsl #14
   10c98:	bl	10d04 <ZSTD_endStream@@Base+0x2db0>
   10c9c:	b	10cd4 <ZSTD_endStream@@Base+0x2d80>
   10ca0:	orr	w8, w9, w20, lsl #4
   10ca4:	orr	w8, w8, #0xc
   10ca8:	add	w1, w8, w26, lsl #22
   10cac:	mov	x0, x19
   10cb0:	bl	10984 <ZSTD_endStream@@Base+0x2a30>
   10cb4:	lsr	x8, x26, #10
   10cb8:	strb	w8, [x19, #4]
   10cbc:	b	10cd4 <ZSTD_endStream@@Base+0x2d80>
   10cc0:	orr	w8, w9, w20, lsl #4
   10cc4:	orr	w8, w8, #0x8
   10cc8:	add	w1, w8, w26, lsl #18
   10ccc:	mov	x0, x19
   10cd0:	bl	10984 <ZSTD_endStream@@Base+0x2a30>
   10cd4:	add	x0, x26, x28
   10cd8:	b	10b90 <ZSTD_endStream@@Base+0x2c3c>
   10cdc:	sub	w8, w1, #0x1
   10ce0:	cmp	w1, #0x7
   10ce4:	mov	w9, #0x6                   	// #6
   10ce8:	csel	w8, w8, w9, hi  // hi = pmore
   10cec:	lsr	x8, x0, x8
   10cf0:	add	x0, x8, #0x2
   10cf4:	ret
   10cf8:	cmn	x0, #0x78
   10cfc:	cset	w0, hi  // hi = pmore
   10d00:	ret
   10d04:	stp	x29, x30, [sp, #-32]!
   10d08:	stp	x20, x19, [sp, #16]
   10d0c:	mov	x29, sp
   10d10:	mov	w19, w1
   10d14:	mov	x20, x0
   10d18:	bl	10970 <ZSTD_endStream@@Base+0x2a1c>
   10d1c:	lsr	w8, w19, #16
   10d20:	strb	w8, [x20, #2]
   10d24:	ldp	x20, x19, [sp, #16]
   10d28:	ldp	x29, x30, [sp], #32
   10d2c:	ret
   10d30:	strh	w1, [x0]
   10d34:	ret
   10d38:	str	w1, [x0]
   10d3c:	ret
   10d40:	stp	x29, x30, [sp, #-80]!
   10d44:	mov	x29, sp
   10d48:	ldr	w9, [x29, #88]
   10d4c:	stp	x20, x19, [sp, #64]
   10d50:	mov	x20, x4
   10d54:	cmp	x3, x4
   10d58:	mov	x19, x0
   10d5c:	str	x25, [sp, #16]
   10d60:	stp	x24, x23, [sp, #32]
   10d64:	stp	x22, x21, [sp, #48]
   10d68:	b.ne	10d88 <ZSTD_endStream@@Base+0x2e34>  // b.any
   10d6c:	cmp	w9, #0x0
   10d70:	cset	w8, eq  // eq = none
   10d74:	cmp	x20, #0x2
   10d78:	cset	w9, hi  // hi = pmore
   10d7c:	str	wzr, [x19]
   10d80:	orr	w0, w9, w8
   10d84:	b	10e84 <ZSTD_endStream@@Base+0x2f30>
   10d88:	ldr	w8, [x29, #96]
   10d8c:	mov	x22, x1
   10d90:	ldr	w1, [x29, #80]
   10d94:	cmp	w8, #0x3
   10d98:	b.hi	10dc4 <ZSTD_endStream@@Base+0x2e70>  // b.pmore
   10d9c:	cbz	w9, 10e78 <ZSTD_endStream@@Base+0x2f24>
   10da0:	cmp	x20, #0x3e7
   10da4:	b.hi	10e9c <ZSTD_endStream@@Base+0x2f48>  // b.pmore
   10da8:	ldr	w9, [x19]
   10dac:	cmp	w9, #0x2
   10db0:	b.ne	10e9c <ZSTD_endStream@@Base+0x2f48>  // b.any
   10db4:	mov	w0, #0x3                   	// #3
   10db8:	mov	w8, wzr
   10dbc:	tbnz	wzr, #0, 10e78 <ZSTD_endStream@@Base+0x2f24>
   10dc0:	b	10e84 <ZSTD_endStream@@Base+0x2f30>
   10dc4:	mov	x25, x6
   10dc8:	mov	w23, w5
   10dcc:	mov	w21, w2
   10dd0:	cbz	w9, 10e08 <ZSTD_endStream@@Base+0x2eb4>
   10dd4:	mov	x0, x7
   10dd8:	mov	x2, x22
   10ddc:	mov	w3, w21
   10de0:	bl	10ee0 <ZSTD_endStream@@Base+0x2f8c>
   10de4:	mov	x24, x0
   10de8:	ldr	w8, [x19]
   10dec:	cbz	w8, 10e14 <ZSTD_endStream@@Base+0x2ec0>
   10df0:	mov	x0, x25
   10df4:	mov	x1, x22
   10df8:	mov	w2, w21
   10dfc:	bl	10f34 <ZSTD_endStream@@Base+0x2fe0>
   10e00:	mov	x25, x0
   10e04:	b	10e18 <ZSTD_endStream@@Base+0x2ec4>
   10e08:	mov	x24, #0xffffffffffffffff    	// #-1
   10e0c:	ldr	w8, [x19]
   10e10:	cbnz	w8, 10df0 <ZSTD_endStream@@Base+0x2e9c>
   10e14:	mov	x25, #0xffffffffffffffff    	// #-1
   10e18:	mov	x0, x22
   10e1c:	mov	w1, w21
   10e20:	mov	x2, x20
   10e24:	mov	w3, w23
   10e28:	bl	1100c <ZSTD_endStream@@Base+0x30b8>
   10e2c:	mov	x23, x0
   10e30:	mov	x0, x22
   10e34:	mov	w1, w21
   10e38:	mov	x2, x20
   10e3c:	bl	110a0 <ZSTD_endStream@@Base+0x314c>
   10e40:	cmp	x24, x25
   10e44:	add	x8, x0, x23, lsl #3
   10e48:	b.hi	10e68 <ZSTD_endStream@@Base+0x2f14>  // b.pmore
   10e4c:	cmp	x24, x8
   10e50:	b.hi	10e68 <ZSTD_endStream@@Base+0x2f14>  // b.pmore
   10e54:	mov	w8, wzr
   10e58:	mov	w0, wzr
   10e5c:	str	wzr, [x19]
   10e60:	cbnz	w8, 10e78 <ZSTD_endStream@@Base+0x2f24>
   10e64:	b	10e84 <ZSTD_endStream@@Base+0x2f30>
   10e68:	cmp	x25, x8
   10e6c:	cset	w8, hi  // hi = pmore
   10e70:	mov	w0, #0x3                   	// #3
   10e74:	cbz	w8, 10e84 <ZSTD_endStream@@Base+0x2f30>
   10e78:	mov	w8, #0x1                   	// #1
   10e7c:	mov	w0, #0x2                   	// #2
   10e80:	str	w8, [x19]
   10e84:	ldp	x20, x19, [sp, #64]
   10e88:	ldp	x22, x21, [sp, #48]
   10e8c:	ldp	x24, x23, [sp, #32]
   10e90:	ldr	x25, [sp, #16]
   10e94:	ldp	x29, x30, [sp], #80
   10e98:	ret
   10e9c:	mov	w9, #0xa                   	// #10
   10ea0:	sub	w8, w9, w8
   10ea4:	lsl	x8, x8, x1
   10ea8:	cmp	x20, x8, lsr #3
   10eac:	b.cc	10ec0 <ZSTD_endStream@@Base+0x2f6c>  // b.lo, b.ul, b.last
   10eb0:	sub	w8, w1, #0x1
   10eb4:	lsr	x8, x20, x8
   10eb8:	cmp	x8, x3
   10ebc:	b.ls	10ed4 <ZSTD_endStream@@Base+0x2f80>  // b.plast
   10ec0:	mov	w0, wzr
   10ec4:	mov	w8, wzr
   10ec8:	str	wzr, [x19]
   10ecc:	tbnz	wzr, #0, 10e78 <ZSTD_endStream@@Base+0x2f24>
   10ed0:	b	10e84 <ZSTD_endStream@@Base+0x2f30>
   10ed4:	mov	w8, #0x1                   	// #1
   10ed8:	tbnz	w8, #0, 10e78 <ZSTD_endStream@@Base+0x2f24>
   10edc:	b	10e84 <ZSTD_endStream@@Base+0x2f30>
   10ee0:	mov	w11, #0x8                   	// #8
   10ee4:	adrp	x12, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   10ee8:	mov	x8, xzr
   10eec:	mov	w9, wzr
   10ef0:	mov	w10, #0xffff                	// #65535
   10ef4:	sub	w11, w11, w1
   10ef8:	add	x12, x12, #0x4a4
   10efc:	ldrh	w13, [x0, w9, uxtw #1]
   10f00:	ldr	w14, [x2, w9, uxtw #2]
   10f04:	add	w9, w9, #0x1
   10f08:	cmp	w13, w10
   10f0c:	csinc	w13, w13, wzr, ne  // ne = any
   10f10:	sxth	w13, w13
   10f14:	lsl	w13, w13, w11
   10f18:	ldr	w13, [x12, w13, uxtw #2]
   10f1c:	cmp	w9, w3
   10f20:	mul	w13, w13, w14
   10f24:	add	x8, x8, x13
   10f28:	b.ls	10efc <ZSTD_endStream@@Base+0x2fa8>  // b.plast
   10f2c:	lsr	x0, x8, #8
   10f30:	ret
   10f34:	sub	sp, sp, #0x70
   10f38:	stp	x22, x21, [sp, #80]
   10f3c:	mov	x21, x0
   10f40:	stp	x20, x19, [sp, #96]
   10f44:	mov	x20, x1
   10f48:	mov	x0, sp
   10f4c:	mov	x1, x21
   10f50:	stp	x29, x30, [sp, #32]
   10f54:	str	x25, [sp, #48]
   10f58:	stp	x24, x23, [sp, #64]
   10f5c:	add	x29, sp, #0x20
   10f60:	mov	w19, w2
   10f64:	bl	1158c <ZSTD_endStream@@Base+0x3638>
   10f68:	mov	x0, x21
   10f6c:	bl	115e8 <ZSTD_endStream@@Base+0x3694>
   10f70:	cmp	w0, w19
   10f74:	b.cs	10f80 <ZSTD_endStream@@Base+0x302c>  // b.hs, b.nlast
   10f78:	mov	x0, #0xffffffffffffffff    	// #-1
   10f7c:	b	10ff0 <ZSTD_endStream@@Base+0x309c>
   10f80:	ldr	w22, [sp, #24]
   10f84:	ldr	x23, [sp, #16]
   10f88:	mov	x24, xzr
   10f8c:	mov	w21, wzr
   10f90:	lsl	w8, w22, #8
   10f94:	add	w25, w8, #0x100
   10f98:	mov	x0, x23
   10f9c:	mov	w1, w22
   10fa0:	mov	w2, w21
   10fa4:	bl	11604 <ZSTD_endStream@@Base+0x36b0>
   10fa8:	ldr	w9, [x20, w21, uxtw #2]
   10fac:	cbz	w9, 10fc8 <ZSTD_endStream@@Base+0x3074>
   10fb0:	cmp	w0, w25
   10fb4:	b.cs	10fd0 <ZSTD_endStream@@Base+0x307c>  // b.hs, b.nlast
   10fb8:	mul	w9, w9, w0
   10fbc:	mov	w8, wzr
   10fc0:	add	x24, x24, x9
   10fc4:	b	10fd4 <ZSTD_endStream@@Base+0x3080>
   10fc8:	mov	w8, #0x4                   	// #4
   10fcc:	b	10fd4 <ZSTD_endStream@@Base+0x3080>
   10fd0:	mov	w8, #0x1                   	// #1
   10fd4:	orr	w8, w8, #0x4
   10fd8:	cmp	w8, #0x4
   10fdc:	b.ne	10f78 <ZSTD_endStream@@Base+0x3024>  // b.any
   10fe0:	add	w21, w21, #0x1
   10fe4:	cmp	w21, w19
   10fe8:	b.ls	10f98 <ZSTD_endStream@@Base+0x3044>  // b.plast
   10fec:	lsr	x0, x24, #8
   10ff0:	ldp	x20, x19, [sp, #96]
   10ff4:	ldp	x22, x21, [sp, #80]
   10ff8:	ldp	x24, x23, [sp, #64]
   10ffc:	ldr	x25, [sp, #48]
   11000:	ldp	x29, x30, [sp, #32]
   11004:	add	sp, sp, #0x70
   11008:	ret
   1100c:	stp	x29, x30, [sp, #-64]!
   11010:	str	x28, [sp, #16]
   11014:	stp	x22, x21, [sp, #32]
   11018:	stp	x20, x19, [sp, #48]
   1101c:	mov	x29, sp
   11020:	sub	sp, sp, #0x270
   11024:	mov	w19, w1
   11028:	mov	x21, x2
   1102c:	mov	x22, x0
   11030:	mov	w0, w3
   11034:	mov	x1, x2
   11038:	mov	w2, w19
   1103c:	bl	767c <ZSTD_getErrorString@@Base+0x790>
   11040:	mov	w20, w0
   11044:	add	x0, sp, #0x4
   11048:	mov	w1, w20
   1104c:	mov	x2, x22
   11050:	mov	x3, x21
   11054:	mov	w4, w19
   11058:	bl	7694 <ZSTD_getErrorString@@Base+0x7a8>
   1105c:	mov	x21, x0
   11060:	bl	1129c <ZSTD_endStream@@Base+0x3348>
   11064:	cbnz	w0, 11084 <ZSTD_endStream@@Base+0x3130>
   11068:	add	x0, sp, #0x70
   1106c:	add	x2, sp, #0x4
   11070:	mov	w1, #0x200                 	// #512
   11074:	mov	w3, w19
   11078:	mov	w4, w20
   1107c:	bl	7228 <ZSTD_getErrorString@@Base+0x33c>
   11080:	mov	x21, x0
   11084:	mov	x0, x21
   11088:	add	sp, sp, #0x270
   1108c:	ldp	x20, x19, [sp, #48]
   11090:	ldp	x22, x21, [sp, #32]
   11094:	ldr	x28, [sp, #16]
   11098:	ldp	x29, x30, [sp], #64
   1109c:	ret
   110a0:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   110a4:	mov	w9, wzr
   110a8:	mov	w8, wzr
   110ac:	add	x10, x10, #0x4a4
   110b0:	ldr	w11, [x0, w9, uxtw #2]
   110b4:	add	w9, w9, #0x1
   110b8:	lsl	w12, w11, #8
   110bc:	cmp	x12, x2
   110c0:	udiv	x13, x12, x2
   110c4:	ccmp	w11, #0x0, #0x4, cc  // cc = lo, ul, last
   110c8:	csinc	x12, x13, xzr, eq  // eq = none
   110cc:	ldr	w12, [x10, x12, lsl #2]
   110d0:	cmp	w9, w1
   110d4:	madd	w8, w12, w11, w8
   110d8:	b.ls	110b0 <ZSTD_endStream@@Base+0x315c>  // b.plast
   110dc:	lsr	w0, w8, #8
   110e0:	ret
   110e4:	sub	sp, sp, #0xd0
   110e8:	cmp	w4, #0x3
   110ec:	stp	x29, x30, [sp, #112]
   110f0:	str	x27, [sp, #128]
   110f4:	stp	x26, x25, [sp, #144]
   110f8:	stp	x24, x23, [sp, #160]
   110fc:	stp	x22, x21, [sp, #176]
   11100:	stp	x20, x19, [sp, #192]
   11104:	add	x29, sp, #0x70
   11108:	b.hi	11170 <ZSTD_endStream@@Base+0x321c>  // b.pmore
   1110c:	ldp	x22, x20, [x29, #144]
   11110:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   11114:	mov	w8, w4
   11118:	add	x9, x9, #0x4a0
   1111c:	adr	x10, 11140 <ZSTD_endStream@@Base+0x31ec>
   11120:	ldrb	w11, [x9, x8]
   11124:	add	x10, x10, x11, lsl #2
   11128:	mov	x26, x7
   1112c:	mov	w21, w6
   11130:	mov	x19, x2
   11134:	mov	x24, x1
   11138:	mov	x23, x0
   1113c:	br	x10
   11140:	ldr	w2, [x29, #120]
   11144:	ldr	w3, [x29, #112]
   11148:	ldr	x1, [x29, #104]
   1114c:	mov	x0, x19
   11150:	mov	x4, x22
   11154:	mov	x5, x20
   11158:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
   1115c:	mov	x19, x0
   11160:	bl	1129c <ZSTD_endStream@@Base+0x3348>
   11164:	cmp	w0, #0x0
   11168:	csel	x0, xzr, x19, eq  // eq = none
   1116c:	b	11274 <ZSTD_endStream@@Base+0x3320>
   11170:	mov	x25, #0xffffffffffffffff    	// #-1
   11174:	b	11270 <ZSTD_endStream@@Base+0x331c>
   11178:	mov	x0, x19
   1117c:	mov	w1, w21
   11180:	bl	7acc <ZSTD_getErrorString@@Base+0xbe0>
   11184:	mov	x25, x0
   11188:	bl	1129c <ZSTD_endStream@@Base+0x3348>
   1118c:	cbnz	w0, 11270 <ZSTD_endStream@@Base+0x331c>
   11190:	cbz	x24, 11294 <ZSTD_endStream@@Base+0x3340>
   11194:	ldrb	w8, [x26]
   11198:	mov	w25, #0x1                   	// #1
   1119c:	strb	w8, [x23]
   111a0:	b	11270 <ZSTD_endStream@@Base+0x331c>
   111a4:	ldr	x27, [x29, #96]
   111a8:	mov	w0, w3
   111ac:	mov	w2, w21
   111b0:	mov	x25, x5
   111b4:	mov	x1, x27
   111b8:	bl	767c <ZSTD_getErrorString@@Base+0x790>
   111bc:	sub	x8, x27, #0x1
   111c0:	ldrb	w9, [x26, x8]
   111c4:	mov	w26, w0
   111c8:	ldr	w10, [x25, x9, lsl #2]
   111cc:	cmp	w10, #0x2
   111d0:	b.cc	111e0 <ZSTD_endStream@@Base+0x328c>  // b.lo, b.ul, b.last
   111d4:	sub	w10, w10, #0x1
   111d8:	mov	x27, x8
   111dc:	str	w10, [x25, x9, lsl #2]
   111e0:	add	x0, sp, #0x4
   111e4:	mov	w1, w26
   111e8:	mov	x2, x25
   111ec:	mov	x3, x27
   111f0:	mov	w4, w21
   111f4:	bl	7694 <ZSTD_getErrorString@@Base+0x7a8>
   111f8:	mov	x25, x0
   111fc:	bl	1129c <ZSTD_endStream@@Base+0x3348>
   11200:	cbnz	w0, 11270 <ZSTD_endStream@@Base+0x331c>
   11204:	add	x2, sp, #0x4
   11208:	mov	x0, x23
   1120c:	mov	x1, x24
   11210:	mov	w3, w21
   11214:	mov	w4, w26
   11218:	bl	7228 <ZSTD_getErrorString@@Base+0x33c>
   1121c:	mov	x23, x0
   11220:	bl	1129c <ZSTD_endStream@@Base+0x3348>
   11224:	cmp	w0, #0x0
   11228:	csel	x25, x25, x23, eq  // eq = none
   1122c:	cbnz	w0, 11270 <ZSTD_endStream@@Base+0x331c>
   11230:	add	x1, sp, #0x4
   11234:	mov	x0, x19
   11238:	mov	w2, w21
   1123c:	mov	w3, w26
   11240:	mov	x4, x22
   11244:	mov	x5, x20
   11248:	bl	6fcc <ZSTD_getErrorString@@Base+0xe0>
   1124c:	mov	x19, x0
   11250:	bl	1129c <ZSTD_endStream@@Base+0x3348>
   11254:	cmp	w0, #0x0
   11258:	csel	x25, x23, x19, eq  // eq = none
   1125c:	b	11270 <ZSTD_endStream@@Base+0x331c>
   11260:	ldp	x1, x2, [x29, #128]
   11264:	mov	x0, x19
   11268:	bl	4420 <memcpy@plt>
   1126c:	mov	x25, xzr
   11270:	mov	x0, x25
   11274:	ldp	x20, x19, [sp, #192]
   11278:	ldp	x22, x21, [sp, #176]
   1127c:	ldp	x24, x23, [sp, #160]
   11280:	ldp	x26, x25, [sp, #144]
   11284:	ldr	x27, [sp, #128]
   11288:	ldp	x29, x30, [sp, #112]
   1128c:	add	sp, sp, #0xd0
   11290:	ret
   11294:	mov	x25, #0xffffffffffffffba    	// #-70
   11298:	b	11270 <ZSTD_endStream@@Base+0x331c>
   1129c:	cmn	x0, #0x78
   112a0:	cset	w0, hi  // hi = pmore
   112a4:	ret
   112a8:	sub	sp, sp, #0x30
   112ac:	stp	x29, x30, [sp, #32]
   112b0:	add	x29, sp, #0x20
   112b4:	ldp	x8, x9, [x29, #16]
   112b8:	ldr	w10, [x29, #32]
   112bc:	stp	x8, x9, [sp]
   112c0:	str	w10, [sp, #16]
   112c4:	bl	112d4 <ZSTD_endStream@@Base+0x3380>
   112c8:	ldp	x29, x30, [sp, #32]
   112cc:	add	sp, sp, #0x30
   112d0:	ret
   112d4:	sub	sp, sp, #0x100
   112d8:	stp	x29, x30, [sp, #160]
   112dc:	add	x29, sp, #0xa0
   112e0:	stp	x24, x23, [sp, #208]
   112e4:	mov	x24, x2
   112e8:	mov	x2, x1
   112ec:	mov	x1, x0
   112f0:	sub	x0, x29, #0x28
   112f4:	stp	x28, x27, [sp, #176]
   112f8:	stp	x26, x25, [sp, #192]
   112fc:	stp	x22, x21, [sp, #224]
   11300:	stp	x20, x19, [sp, #240]
   11304:	mov	x19, x7
   11308:	mov	x22, x6
   1130c:	mov	x20, x5
   11310:	mov	x23, x4
   11314:	mov	x21, x3
   11318:	bl	11640 <ZSTD_endStream@@Base+0x36ec>
   1131c:	bl	1129c <ZSTD_endStream@@Base+0x3348>
   11320:	cbz	w0, 1132c <ZSTD_endStream@@Base+0x33d8>
   11324:	mov	x0, #0xffffffffffffffba    	// #-70
   11328:	b	1156c <ZSTD_endStream@@Base+0x3618>
   1132c:	ldp	x25, x8, [x29, #96]
   11330:	ldr	w27, [x29, #112]
   11334:	sub	x0, x29, #0x48
   11338:	mov	x1, x24
   1133c:	sub	x26, x8, #0x1
   11340:	ldrb	w2, [x21, x26]
   11344:	str	x8, [sp, #16]
   11348:	bl	1166c <ZSTD_endStream@@Base+0x3718>
   1134c:	ldrb	w2, [x20, x26]
   11350:	add	x0, sp, #0x38
   11354:	mov	x1, x23
   11358:	bl	1166c <ZSTD_endStream@@Base+0x3718>
   1135c:	ldrb	w2, [x19, x26]
   11360:	add	x0, sp, #0x18
   11364:	mov	x1, x22
   11368:	bl	1166c <ZSTD_endStream@@Base+0x3718>
   1136c:	ldrb	w8, [x19, x26]
   11370:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   11374:	add	x24, x25, x26, lsl #3
   11378:	add	x9, x9, #0x8a4
   1137c:	ldrh	w1, [x24, #4]
   11380:	ldr	w2, [x9, x8, lsl #2]
   11384:	sub	x0, x29, #0x28
   11388:	str	x19, [sp, #8]
   1138c:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   11390:	ldrb	w8, [x21, x26]
   11394:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   11398:	add	x9, x9, #0x934
   1139c:	ldrh	w1, [x24, #6]
   113a0:	ldr	w2, [x9, x8, lsl #2]
   113a4:	sub	x0, x29, #0x28
   113a8:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   113ac:	mov	w19, w27
   113b0:	cbz	w27, 113f8 <ZSTD_endStream@@Base+0x34a4>
   113b4:	ldrb	w8, [x20, x26]
   113b8:	mov	w9, #0x38                  	// #56
   113bc:	cmp	w8, #0x38
   113c0:	csel	w22, w8, w9, cc  // cc = lo, ul, last
   113c4:	subs	w23, w8, w22
   113c8:	b.eq	113e4 <ZSTD_endStream@@Base+0x3490>  // b.none
   113cc:	ldr	w1, [x24]
   113d0:	sub	x0, x29, #0x28
   113d4:	mov	w2, w23
   113d8:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   113dc:	sub	x0, x29, #0x28
   113e0:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   113e4:	ldr	w8, [x24]
   113e8:	sub	x0, x29, #0x28
   113ec:	mov	w2, w22
   113f0:	lsr	x1, x8, x23
   113f4:	b	11404 <ZSTD_endStream@@Base+0x34b0>
   113f8:	ldr	w1, [x24]
   113fc:	ldrb	w2, [x20, x26]
   11400:	sub	x0, x29, #0x28
   11404:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   11408:	sub	x0, x29, #0x28
   1140c:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   11410:	ldr	x8, [sp, #16]
   11414:	subs	x28, x8, #0x2
   11418:	b.cc	11534 <ZSTD_endStream@@Base+0x35e0>  // b.lo, b.ul, b.last
   1141c:	add	x27, x25, x28, lsl #3
   11420:	b	11458 <ZSTD_endStream@@Base+0x3504>
   11424:	ldr	w8, [x27]
   11428:	mov	w23, w22
   1142c:	mov	w1, w8
   11430:	sub	x0, x29, #0x28
   11434:	mov	w2, w23
   11438:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   1143c:	sub	x0, x29, #0x28
   11440:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   11444:	ldr	x8, [sp, #16]
   11448:	sub	x28, x28, #0x1
   1144c:	sub	x27, x27, #0x8
   11450:	cmp	x28, x8
   11454:	b.cs	11534 <ZSTD_endStream@@Base+0x35e0>  // b.hs, b.nlast
   11458:	ldr	x8, [sp, #8]
   1145c:	ldrb	w26, [x21, x28]
   11460:	ldrb	w22, [x20, x28]
   11464:	sub	x0, x29, #0x28
   11468:	ldrb	w25, [x8, x28]
   1146c:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   11470:	add	x8, x8, #0x8a4
   11474:	add	x1, sp, #0x38
   11478:	ldr	w24, [x8, w25, uxtw #2]
   1147c:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   11480:	add	x8, x8, #0x934
   11484:	ldr	w23, [x8, w26, uxtw #2]
   11488:	mov	w2, w22
   1148c:	bl	11754 <ZSTD_endStream@@Base+0x3800>
   11490:	sub	x0, x29, #0x28
   11494:	sub	x1, x29, #0x48
   11498:	mov	w2, w26
   1149c:	bl	11754 <ZSTD_endStream@@Base+0x3800>
   114a0:	sub	x0, x29, #0x28
   114a4:	add	x1, sp, #0x18
   114a8:	mov	w2, w25
   114ac:	bl	11754 <ZSTD_endStream@@Base+0x3800>
   114b0:	add	w8, w24, w22
   114b4:	add	w25, w8, w23
   114b8:	cmp	w25, #0x1f
   114bc:	b.cc	114c8 <ZSTD_endStream@@Base+0x3574>  // b.lo, b.ul, b.last
   114c0:	sub	x0, x29, #0x28
   114c4:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   114c8:	ldrh	w1, [x27, #4]
   114cc:	sub	x0, x29, #0x28
   114d0:	mov	w2, w24
   114d4:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   114d8:	ldrh	w1, [x27, #6]
   114dc:	sub	x0, x29, #0x28
   114e0:	mov	w2, w23
   114e4:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   114e8:	cmp	w25, #0x39
   114ec:	b.cc	114f8 <ZSTD_endStream@@Base+0x35a4>  // b.lo, b.ul, b.last
   114f0:	sub	x0, x29, #0x28
   114f4:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   114f8:	cbz	w19, 11424 <ZSTD_endStream@@Base+0x34d0>
   114fc:	cmp	w22, #0x38
   11500:	mov	w8, #0x38                  	// #56
   11504:	csel	w23, w22, w8, cc  // cc = lo, ul, last
   11508:	subs	w22, w22, w23
   1150c:	b.eq	11528 <ZSTD_endStream@@Base+0x35d4>  // b.none
   11510:	ldr	w1, [x27]
   11514:	sub	x0, x29, #0x28
   11518:	mov	w2, w22
   1151c:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   11520:	sub	x0, x29, #0x28
   11524:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   11528:	ldr	w8, [x27]
   1152c:	lsr	w8, w8, w22
   11530:	b	1142c <ZSTD_endStream@@Base+0x34d8>
   11534:	sub	x0, x29, #0x28
   11538:	sub	x1, x29, #0x48
   1153c:	bl	117b4 <ZSTD_endStream@@Base+0x3860>
   11540:	sub	x0, x29, #0x28
   11544:	add	x1, sp, #0x38
   11548:	bl	117b4 <ZSTD_endStream@@Base+0x3860>
   1154c:	sub	x0, x29, #0x28
   11550:	add	x1, sp, #0x18
   11554:	bl	117b4 <ZSTD_endStream@@Base+0x3860>
   11558:	sub	x0, x29, #0x28
   1155c:	bl	117e8 <ZSTD_endStream@@Base+0x3894>
   11560:	cmp	x0, #0x0
   11564:	mov	x8, #0xffffffffffffffba    	// #-70
   11568:	csel	x0, x8, x0, eq  // eq = none
   1156c:	ldp	x20, x19, [sp, #240]
   11570:	ldp	x22, x21, [sp, #224]
   11574:	ldp	x24, x23, [sp, #208]
   11578:	ldp	x26, x25, [sp, #192]
   1157c:	ldp	x28, x27, [sp, #176]
   11580:	ldp	x29, x30, [sp, #160]
   11584:	add	sp, sp, #0x100
   11588:	ret
   1158c:	stp	x29, x30, [sp, #-32]!
   11590:	stp	x20, x19, [sp, #16]
   11594:	mov	x20, x0
   11598:	mov	x0, x1
   1159c:	mov	x29, sp
   115a0:	mov	x19, x1
   115a4:	bl	11638 <ZSTD_endStream@@Base+0x36e4>
   115a8:	and	w8, w0, #0xffff
   115ac:	mov	w9, #0x1                   	// #1
   115b0:	sub	w12, w8, #0x1
   115b4:	lsl	x11, x9, x0
   115b8:	lsl	w9, w9, w12
   115bc:	tst	w0, #0xffff
   115c0:	sxtw	x9, w9
   115c4:	add	x10, x19, #0x4
   115c8:	csinc	x9, x9, xzr, ne  // ne = any
   115cc:	add	x9, x10, x9, lsl #2
   115d0:	stp	x11, x10, [x20]
   115d4:	str	x9, [x20, #16]
   115d8:	str	w8, [x20, #24]
   115dc:	ldp	x20, x19, [sp, #16]
   115e0:	ldp	x29, x30, [sp], #32
   115e4:	ret
   115e8:	stp	x29, x30, [sp, #-16]!
   115ec:	add	x0, x0, #0x2
   115f0:	mov	x29, sp
   115f4:	bl	11638 <ZSTD_endStream@@Base+0x36e4>
   115f8:	and	w0, w0, #0xffff
   115fc:	ldp	x29, x30, [sp], #16
   11600:	ret
   11604:	add	x8, x0, w2, uxtw #3
   11608:	ldr	w8, [x8, #4]
   1160c:	mov	w9, #0xffffffff            	// #-1
   11610:	lsl	w9, w9, w1
   11614:	lsr	w10, w8, #16
   11618:	sub	w8, w9, w8
   1161c:	add	w9, w10, #0x1
   11620:	add	w8, w8, w9, lsl #16
   11624:	lsl	w8, w8, #8
   11628:	lsr	w8, w8, w1
   1162c:	lsl	w9, w9, #8
   11630:	sub	w0, w9, w8
   11634:	ret
   11638:	ldrh	w0, [x0]
   1163c:	ret
   11640:	add	x8, x1, x2
   11644:	cmp	x2, #0x9
   11648:	mov	x9, #0xffffffffffffffba    	// #-70
   1164c:	sub	x10, x8, #0x8
   11650:	csel	x8, x9, xzr, cc  // cc = lo, ul, last
   11654:	str	xzr, [x0]
   11658:	str	wzr, [x0, #8]
   1165c:	stp	x1, x1, [x0, #16]
   11660:	str	x10, [x0, #32]
   11664:	mov	x0, x8
   11668:	ret
   1166c:	stp	x29, x30, [sp, #-32]!
   11670:	stp	x20, x19, [sp, #16]
   11674:	mov	x29, sp
   11678:	mov	w19, w2
   1167c:	mov	x20, x0
   11680:	bl	1158c <ZSTD_endStream@@Base+0x3638>
   11684:	ldp	x9, x8, [x20, #8]
   11688:	add	x8, x8, w19, uxtw #3
   1168c:	ldp	w8, w10, [x8]
   11690:	sxtw	x8, w8
   11694:	add	w11, w10, #0x8, lsl #12
   11698:	lsr	w12, w11, #16
   1169c:	and	w11, w11, #0xffff0000
   116a0:	sub	w10, w11, w10
   116a4:	str	x10, [x20]
   116a8:	lsr	x10, x10, x12
   116ac:	add	x8, x10, x8
   116b0:	ldrh	w8, [x9, x8, lsl #1]
   116b4:	str	x8, [x20]
   116b8:	ldp	x20, x19, [sp, #16]
   116bc:	ldp	x29, x30, [sp], #32
   116c0:	ret
   116c4:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   116c8:	add	x8, x8, #0xa08
   116cc:	ldr	w8, [x8, w2, uxtw #2]
   116d0:	ldr	w9, [x0, #8]
   116d4:	ldr	x10, [x0]
   116d8:	and	x8, x8, x1
   116dc:	lsl	x8, x8, x9
   116e0:	add	w11, w9, w2
   116e4:	orr	x8, x8, x10
   116e8:	str	x8, [x0]
   116ec:	str	w11, [x0, #8]
   116f0:	ret
   116f4:	stp	x29, x30, [sp, #-32]!
   116f8:	stp	x20, x19, [sp, #16]
   116fc:	mov	x19, x0
   11700:	ldr	w8, [x0, #8]
   11704:	ldr	x0, [x0, #24]
   11708:	ldr	x1, [x19]
   1170c:	mov	x29, sp
   11710:	lsr	x20, x8, #3
   11714:	bl	11838 <ZSTD_endStream@@Base+0x38e4>
   11718:	ldp	x8, x9, [x19, #24]
   1171c:	ldr	w10, [x19, #8]
   11720:	ldr	x11, [x19]
   11724:	lsl	x12, x20, #3
   11728:	add	x8, x8, x20
   1172c:	cmp	x8, x9
   11730:	and	w10, w10, #0x7
   11734:	lsr	x11, x11, x12
   11738:	csel	x8, x9, x8, hi  // hi = pmore
   1173c:	str	w10, [x19, #8]
   11740:	str	x8, [x19, #24]
   11744:	str	x11, [x19]
   11748:	ldp	x20, x19, [sp, #16]
   1174c:	ldp	x29, x30, [sp], #32
   11750:	ret
   11754:	stp	x29, x30, [sp, #-48]!
   11758:	stp	x22, x21, [sp, #16]
   1175c:	stp	x20, x19, [sp, #32]
   11760:	ldr	x8, [x1, #16]
   11764:	mov	x19, x1
   11768:	ldr	x1, [x1]
   1176c:	ldr	x22, [x19, #8]
   11770:	add	x8, x8, w2, uxtw #3
   11774:	ldp	w21, w9, [x8]
   11778:	mov	x29, sp
   1177c:	sxtw	x21, w21
   11780:	add	x8, x1, x9
   11784:	lsr	x20, x8, #16
   11788:	mov	w2, w20
   1178c:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   11790:	ldr	x8, [x19]
   11794:	asr	x8, x8, x20
   11798:	add	x8, x8, x21
   1179c:	ldrh	w8, [x22, x8, lsl #1]
   117a0:	str	x8, [x19]
   117a4:	ldp	x20, x19, [sp, #32]
   117a8:	ldp	x22, x21, [sp, #16]
   117ac:	ldp	x29, x30, [sp], #48
   117b0:	ret
   117b4:	stp	x29, x30, [sp, #-32]!
   117b8:	ldr	x8, [x1]
   117bc:	ldr	w2, [x1, #24]
   117c0:	str	x19, [sp, #16]
   117c4:	mov	x29, sp
   117c8:	mov	x1, x8
   117cc:	mov	x19, x0
   117d0:	bl	116c4 <ZSTD_endStream@@Base+0x3770>
   117d4:	mov	x0, x19
   117d8:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   117dc:	ldr	x19, [sp, #16]
   117e0:	ldp	x29, x30, [sp], #32
   117e4:	ret
   117e8:	stp	x29, x30, [sp, #-32]!
   117ec:	str	x19, [sp, #16]
   117f0:	mov	x29, sp
   117f4:	mov	x19, x0
   117f8:	bl	11868 <ZSTD_endStream@@Base+0x3914>
   117fc:	mov	x0, x19
   11800:	bl	116f4 <ZSTD_endStream@@Base+0x37a0>
   11804:	ldp	x8, x9, [x19, #24]
   11808:	cmp	x8, x9
   1180c:	b.cs	11828 <ZSTD_endStream@@Base+0x38d4>  // b.hs, b.nlast
   11810:	ldr	x9, [x19, #16]
   11814:	ldr	w10, [x19, #8]
   11818:	sub	x8, x8, x9
   1181c:	cmp	w10, #0x0
   11820:	cinc	x0, x8, ne  // ne = any
   11824:	b	1182c <ZSTD_endStream@@Base+0x38d8>
   11828:	mov	x0, xzr
   1182c:	ldr	x19, [sp, #16]
   11830:	ldp	x29, x30, [sp], #32
   11834:	ret
   11838:	stp	x29, x30, [sp, #-16]!
   1183c:	mov	x29, sp
   11840:	bl	1184c <ZSTD_endStream@@Base+0x38f8>
   11844:	ldp	x29, x30, [sp], #16
   11848:	ret
   1184c:	stp	x29, x30, [sp, #-16]!
   11850:	mov	x29, sp
   11854:	bl	11860 <ZSTD_endStream@@Base+0x390c>
   11858:	ldp	x29, x30, [sp], #16
   1185c:	ret
   11860:	str	x1, [x0]
   11864:	ret
   11868:	ldr	w8, [x0, #8]
   1186c:	ldr	x9, [x0]
   11870:	mov	w10, #0x1                   	// #1
   11874:	lsl	x10, x10, x8
   11878:	add	w8, w8, #0x1
   1187c:	orr	x9, x10, x9
   11880:	str	x9, [x0]
   11884:	str	w8, [x0, #8]
   11888:	ret
   1188c:	sub	sp, sp, #0x80
   11890:	stp	x29, x30, [sp, #32]
   11894:	stp	x28, x27, [sp, #48]
   11898:	stp	x26, x25, [sp, #64]
   1189c:	stp	x24, x23, [sp, #80]
   118a0:	stp	x22, x21, [sp, #96]
   118a4:	stp	x20, x19, [sp, #112]
   118a8:	ldr	x9, [x0, #8]
   118ac:	ldr	w8, [x0, #36]
   118b0:	add	x29, sp, #0x20
   118b4:	str	x9, [sp, #8]
   118b8:	add	x27, x9, x8
   118bc:	sub	x9, x1, #0x8
   118c0:	add	x8, x27, #0x2
   118c4:	cmp	x8, x9
   118c8:	str	x9, [sp]
   118cc:	b.ls	118f0 <ZSTD_endStream@@Base+0x399c>  // b.plast
   118d0:	ldp	x20, x19, [sp, #112]
   118d4:	ldp	x22, x21, [sp, #96]
   118d8:	ldp	x24, x23, [sp, #80]
   118dc:	ldp	x26, x25, [sp, #64]
   118e0:	ldp	x28, x27, [sp, #48]
   118e4:	ldp	x29, x30, [sp, #32]
   118e8:	add	sp, sp, #0x80
   118ec:	ret
   118f0:	ldr	w8, [x0, #200]
   118f4:	ldr	x28, [x0, #48]
   118f8:	mov	w19, w2
   118fc:	stur	w8, [x29, #-4]
   11900:	ldr	x8, [x0, #64]
   11904:	str	x8, [sp, #16]
   11908:	ldp	w22, w21, [x0, #188]
   1190c:	b	11924 <ZSTD_endStream@@Base+0x39d0>
   11910:	ldr	x9, [sp]
   11914:	add	x8, x27, #0x5
   11918:	add	x27, x27, #0x3
   1191c:	cmp	x8, x9
   11920:	b.hi	118d0 <ZSTD_endStream@@Base+0x397c>  // b.pmore
   11924:	ldr	x8, [sp, #8]
   11928:	mov	x26, xzr
   1192c:	sub	x20, x27, x8
   11930:	and	x25, x20, #0xffffffff
   11934:	add	x24, x27, x26
   11938:	mov	w2, #0x8                   	// #8
   1193c:	mov	x0, x24
   11940:	mov	w1, w21
   11944:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   11948:	mov	x23, x0
   1194c:	cbz	x26, 11960 <ZSTD_endStream@@Base+0x3a0c>
   11950:	ldr	w8, [x28, x23, lsl #2]
   11954:	cbz	w8, 11978 <ZSTD_endStream@@Base+0x3a24>
   11958:	cbnz	w19, 11984 <ZSTD_endStream@@Base+0x3a30>
   1195c:	b	11910 <ZSTD_endStream@@Base+0x39bc>
   11960:	ldur	w2, [x29, #-4]
   11964:	mov	x0, x24
   11968:	mov	w1, w22
   1196c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   11970:	ldr	x8, [sp, #16]
   11974:	str	w20, [x8, x0, lsl #2]
   11978:	add	w8, w25, w26
   1197c:	str	w8, [x28, x23, lsl #2]
   11980:	cbz	w19, 11910 <ZSTD_endStream@@Base+0x39bc>
   11984:	cmp	x26, #0x2
   11988:	add	x26, x26, #0x1
   1198c:	b.cc	11934 <ZSTD_endStream@@Base+0x39e0>  // b.lo, b.ul, b.last
   11990:	b	11910 <ZSTD_endStream@@Base+0x39bc>
   11994:	stp	x29, x30, [sp, #-16]!
   11998:	sub	w8, w2, #0x5
   1199c:	cmp	w8, #0x3
   119a0:	mov	x29, sp
   119a4:	b.hi	119cc <ZSTD_endStream@@Base+0x3a78>  // b.pmore
   119a8:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   119ac:	add	x9, x9, #0xa88
   119b0:	adr	x10, 119c0 <ZSTD_endStream@@Base+0x3a6c>
   119b4:	ldrb	w11, [x9, x8]
   119b8:	add	x10, x10, x11, lsl #2
   119bc:	br	x10
   119c0:	bl	1780c <ZSTD_endStream@@Base+0x98b8>
   119c4:	ldp	x29, x30, [sp], #16
   119c8:	ret
   119cc:	bl	177e0 <ZSTD_endStream@@Base+0x988c>
   119d0:	ldp	x29, x30, [sp], #16
   119d4:	ret
   119d8:	bl	17834 <ZSTD_endStream@@Base+0x98e0>
   119dc:	ldp	x29, x30, [sp], #16
   119e0:	ret
   119e4:	bl	1785c <ZSTD_endStream@@Base+0x9908>
   119e8:	ldp	x29, x30, [sp], #16
   119ec:	ret
   119f0:	bl	17884 <ZSTD_endStream@@Base+0x9930>
   119f4:	ldp	x29, x30, [sp], #16
   119f8:	ret
   119fc:	sub	sp, sp, #0x100
   11a00:	stp	x29, x30, [sp, #160]
   11a04:	stp	x28, x27, [sp, #176]
   11a08:	stp	x26, x25, [sp, #192]
   11a0c:	stp	x24, x23, [sp, #208]
   11a10:	stp	x22, x21, [sp, #224]
   11a14:	stp	x20, x19, [sp, #240]
   11a18:	ldr	w8, [x0, #200]
   11a1c:	mov	x22, x3
   11a20:	mov	x21, x1
   11a24:	add	x29, sp, #0xa0
   11a28:	cmp	w8, #0x5
   11a2c:	str	x2, [sp, #56]
   11a30:	b.eq	12194 <ZSTD_endStream@@Base+0x4240>  // b.none
   11a34:	cmp	w8, #0x6
   11a38:	b.eq	128e4 <ZSTD_endStream@@Base+0x4990>  // b.none
   11a3c:	cmp	w8, #0x7
   11a40:	b.ne	13034 <ZSTD_endStream@@Base+0x50e0>  // b.any
   11a44:	ldr	x8, [x0, #48]
   11a48:	ldr	x15, [x0, #8]
   11a4c:	ldr	w9, [x0, #184]
   11a50:	add	x14, x22, x4
   11a54:	stur	x8, [x29, #-32]
   11a58:	ldp	w25, w8, [x0, #188]
   11a5c:	mov	w24, #0x1                   	// #1
   11a60:	sub	w12, w14, w15
   11a64:	lsl	w9, w24, w9
   11a68:	stur	w8, [x29, #-36]
   11a6c:	ldr	x8, [x0, #64]
   11a70:	ldr	w10, [x2]
   11a74:	sub	x16, x14, #0x8
   11a78:	stur	x8, [x29, #-48]
   11a7c:	ldr	w8, [x0, #24]
   11a80:	ldr	w11, [x2, #4]!
   11a84:	stur	x16, [x29, #-24]
   11a88:	stur	x14, [x29, #-8]
   11a8c:	sub	w13, w12, w8
   11a90:	sub	w12, w12, w9
   11a94:	cmp	w13, w9
   11a98:	csel	w8, w12, w8, hi  // hi = pmore
   11a9c:	str	x8, [sp, #80]
   11aa0:	add	x8, x15, x8
   11aa4:	cmp	w22, w8
   11aa8:	cinc	x27, x22, eq  // eq = none
   11aac:	str	x8, [sp, #32]
   11ab0:	sub	w8, w27, w8
   11ab4:	cmp	w11, w8
   11ab8:	csel	w9, w11, wzr, hi  // hi = pmore
   11abc:	csel	w11, wzr, w11, hi  // hi = pmore
   11ac0:	cmp	w10, w8
   11ac4:	csel	w8, w10, w9, hi  // hi = pmore
   11ac8:	csel	w23, wzr, w10, hi  // hi = pmore
   11acc:	cmp	x27, x16
   11ad0:	str	x2, [sp, #48]
   11ad4:	str	w11, [sp, #76]
   11ad8:	str	w8, [sp, #20]
   11adc:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   11ae0:	sub	x8, x14, #0x20
   11ae4:	stur	x8, [x29, #-56]
   11ae8:	sub	x8, x15, #0x1
   11aec:	str	x8, [sp, #8]
   11af0:	stur	x15, [x29, #-16]
   11af4:	b	11b10 <ZSTD_endStream@@Base+0x3bbc>
   11af8:	str	w28, [sp, #76]
   11afc:	mov	w23, w27
   11b00:	mov	x27, x22
   11b04:	ldur	x8, [x29, #-24]
   11b08:	cmp	x27, x8
   11b0c:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   11b10:	ldur	w1, [x29, #-36]
   11b14:	mov	w2, #0x8                   	// #8
   11b18:	mov	x0, x27
   11b1c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   11b20:	mov	x19, x0
   11b24:	mov	w2, #0x7                   	// #7
   11b28:	mov	x0, x27
   11b2c:	mov	w1, w25
   11b30:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   11b34:	ldur	x8, [x29, #-16]
   11b38:	ldur	x11, [x29, #-48]
   11b3c:	ldur	x10, [x29, #-32]
   11b40:	lsl	x9, x0, #2
   11b44:	sub	w12, w27, w8
   11b48:	lsl	x8, x19, #2
   11b4c:	ldr	w13, [x11, x9]
   11b50:	ldr	w20, [x10, x8]
   11b54:	add	x26, x27, #0x1
   11b58:	mov	w28, w23
   11b5c:	sub	x0, x26, x28
   11b60:	stur	x13, [x29, #-72]
   11b64:	str	w12, [x11, x9]
   11b68:	stur	w12, [x29, #-60]
   11b6c:	str	w12, [x10, x8]
   11b70:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   11b74:	mov	w19, w0
   11b78:	mov	x0, x26
   11b7c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   11b80:	cbz	w23, 11bc8 <ZSTD_endStream@@Base+0x3c74>
   11b84:	cmp	w19, w0
   11b88:	b.ne	11bc8 <ZSTD_endStream@@Base+0x3c74>  // b.any
   11b8c:	ldur	x2, [x29, #-8]
   11b90:	neg	x8, x28
   11b94:	add	x0, x27, #0x5
   11b98:	add	x1, x0, x8
   11b9c:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   11ba0:	ldur	x3, [x29, #-56]
   11ba4:	mov	x27, x0
   11ba8:	ldr	x0, [x21, #24]
   11bac:	sub	x28, x26, x22
   11bb0:	cmp	x26, x3
   11bb4:	b.ls	11d70 <ZSTD_endStream@@Base+0x3e1c>  // b.plast
   11bb8:	mov	x1, x22
   11bbc:	mov	x2, x26
   11bc0:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   11bc4:	b	11dd8 <ZSTD_endStream@@Base+0x3e84>
   11bc8:	ldr	x8, [sp, #80]
   11bcc:	cmp	w20, w8
   11bd0:	b.ls	11c68 <ZSTD_endStream@@Base+0x3d14>  // b.plast
   11bd4:	ldur	x8, [x29, #-16]
   11bd8:	add	x28, x8, x20
   11bdc:	mov	x0, x28
   11be0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   11be4:	mov	x19, x0
   11be8:	mov	x0, x27
   11bec:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   11bf0:	cmp	x19, x0
   11bf4:	b.ne	11c68 <ZSTD_endStream@@Base+0x3d14>  // b.any
   11bf8:	ldur	x2, [x29, #-8]
   11bfc:	add	x0, x27, #0x8
   11c00:	add	x1, x28, #0x8
   11c04:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   11c08:	add	x13, x0, #0x8
   11c0c:	cmp	x27, x22
   11c10:	sub	w8, w27, w28
   11c14:	str	w8, [sp, #44]
   11c18:	b.ls	11ec8 <ZSTD_endStream@@Base+0x3f74>  // b.plast
   11c1c:	ldr	x8, [sp, #8]
   11c20:	ldr	x12, [sp, #32]
   11c24:	sub	x9, x27, #0x1
   11c28:	add	x8, x8, x20
   11c2c:	ldrb	w10, [x9]
   11c30:	ldrb	w11, [x8]
   11c34:	cmp	w10, w11
   11c38:	b.ne	11ed4 <ZSTD_endStream@@Base+0x3f80>  // b.any
   11c3c:	add	x13, x13, #0x1
   11c40:	cmp	x9, x22
   11c44:	sub	x10, x9, #0x1
   11c48:	b.ls	11c5c <ZSTD_endStream@@Base+0x3d08>  // b.plast
   11c4c:	cmp	x8, x12
   11c50:	sub	x8, x8, #0x1
   11c54:	mov	x9, x10
   11c58:	b.hi	11c2c <ZSTD_endStream@@Base+0x3cd8>  // b.pmore
   11c5c:	mov	x28, x13
   11c60:	add	x26, x10, #0x1
   11c64:	b	11edc <ZSTD_endStream@@Base+0x3f88>
   11c68:	ldr	x8, [sp, #80]
   11c6c:	ldur	x9, [x29, #-72]
   11c70:	cmp	w9, w8
   11c74:	b.ls	11d60 <ZSTD_endStream@@Base+0x3e0c>  // b.plast
   11c78:	ldur	x8, [x29, #-16]
   11c7c:	add	x20, x8, x9
   11c80:	mov	x0, x20
   11c84:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   11c88:	mov	w19, w0
   11c8c:	mov	x0, x27
   11c90:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   11c94:	cmp	w19, w0
   11c98:	b.ne	11d60 <ZSTD_endStream@@Base+0x3e0c>  // b.any
   11c9c:	ldur	w8, [x29, #-60]
   11ca0:	ldur	w1, [x29, #-36]
   11ca4:	mov	w2, #0x8                   	// #8
   11ca8:	mov	x0, x26
   11cac:	str	x20, [sp, #24]
   11cb0:	add	w19, w8, #0x1
   11cb4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   11cb8:	ldur	x9, [x29, #-32]
   11cbc:	lsl	x8, x0, #2
   11cc0:	ldr	x10, [sp, #80]
   11cc4:	ldr	w20, [x9, x8]
   11cc8:	str	w19, [x9, x8]
   11ccc:	cmp	w20, w10
   11cd0:	b.ls	11e30 <ZSTD_endStream@@Base+0x3edc>  // b.plast
   11cd4:	ldur	x8, [x29, #-16]
   11cd8:	add	x19, x8, x20
   11cdc:	mov	x0, x19
   11ce0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   11ce4:	mov	x28, x0
   11ce8:	mov	x0, x26
   11cec:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   11cf0:	cmp	x28, x0
   11cf4:	b.ne	11e30 <ZSTD_endStream@@Base+0x3edc>  // b.any
   11cf8:	ldur	x2, [x29, #-8]
   11cfc:	add	x0, x27, #0x9
   11d00:	add	x1, x19, #0x8
   11d04:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   11d08:	add	x28, x0, #0x8
   11d0c:	cmp	x26, x22
   11d10:	sub	w8, w26, w19
   11d14:	str	w8, [sp, #44]
   11d18:	b.ls	1217c <ZSTD_endStream@@Base+0x4228>  // b.plast
   11d1c:	ldr	x8, [sp, #8]
   11d20:	add	x8, x8, x20
   11d24:	ldrb	w9, [x27]
   11d28:	ldrb	w10, [x8]
   11d2c:	cmp	w9, w10
   11d30:	b.ne	12188 <ZSTD_endStream@@Base+0x4234>  // b.any
   11d34:	add	x28, x28, #0x1
   11d38:	cmp	x27, x22
   11d3c:	sub	x9, x27, #0x1
   11d40:	b.ls	11d58 <ZSTD_endStream@@Base+0x3e04>  // b.plast
   11d44:	ldr	x10, [sp, #32]
   11d48:	mov	x27, x9
   11d4c:	cmp	x8, x10
   11d50:	sub	x8, x8, #0x1
   11d54:	b.hi	11d24 <ZSTD_endStream@@Base+0x3dd0>  // b.pmore
   11d58:	add	x27, x9, #0x1
   11d5c:	b	1218c <ZSTD_endStream@@Base+0x4238>
   11d60:	sub	x8, x27, x22
   11d64:	add	x8, x27, x8, asr #8
   11d68:	add	x27, x8, #0x1
   11d6c:	b	11b04 <ZSTD_endStream@@Base+0x3bb0>
   11d70:	mov	x1, x22
   11d74:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11d78:	cmp	x28, #0x11
   11d7c:	b.cc	11dd8 <ZSTD_endStream@@Base+0x3e84>  // b.lo, b.ul, b.last
   11d80:	ldr	x19, [x21, #24]
   11d84:	add	x1, x22, #0x10
   11d88:	add	x0, x19, #0x10
   11d8c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11d90:	add	x0, x19, #0x20
   11d94:	add	x1, x22, #0x20
   11d98:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11d9c:	cmp	x28, #0x31
   11da0:	b.lt	11dd8 <ZSTD_endStream@@Base+0x3e84>  // b.tstop
   11da4:	add	x20, x19, x28
   11da8:	add	x19, x19, #0x30
   11dac:	add	x22, x22, #0x40
   11db0:	sub	x1, x22, #0x10
   11db4:	mov	x0, x19
   11db8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11dbc:	add	x0, x19, #0x10
   11dc0:	mov	x1, x22
   11dc4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11dc8:	add	x19, x19, #0x20
   11dcc:	cmp	x19, x20
   11dd0:	add	x22, x22, #0x20
   11dd4:	b.cc	11db0 <ZSTD_endStream@@Base+0x3e5c>  // b.lo, b.ul, b.last
   11dd8:	ldr	x9, [x21, #24]
   11ddc:	add	x13, x27, #0x4
   11de0:	add	x8, x27, #0x1
   11de4:	cmp	x28, #0x10, lsl #12
   11de8:	add	x9, x9, x28
   11dec:	str	x9, [x21, #24]
   11df0:	b.cc	11e04 <ZSTD_endStream@@Base+0x3eb0>  // b.lo, b.ul, b.last
   11df4:	ldp	x10, x9, [x21]
   11df8:	sub	x9, x9, x10
   11dfc:	lsr	x9, x9, #3
   11e00:	stp	w24, w9, [x21, #72]
   11e04:	ldr	x9, [x21, #8]
   11e08:	cmp	x8, #0x10, lsl #12
   11e0c:	strh	w28, [x9, #4]
   11e10:	str	w24, [x9]
   11e14:	b.cc	11fcc <ZSTD_endStream@@Base+0x4078>  // b.lo, b.ul, b.last
   11e18:	ldp	x11, x10, [x21]
   11e1c:	sub	x10, x10, x11
   11e20:	lsr	x10, x10, #3
   11e24:	mov	w11, #0x2                   	// #2
   11e28:	stp	w11, w10, [x21, #72]
   11e2c:	b	11fcc <ZSTD_endStream@@Base+0x4078>
   11e30:	ldr	x28, [sp, #64]
   11e34:	mov	w8, wzr
   11e38:	cmp	w8, #0x7
   11e3c:	b.eq	11ecc <ZSTD_endStream@@Base+0x3f78>  // b.none
   11e40:	cbnz	w8, 12174 <ZSTD_endStream@@Base+0x4220>
   11e44:	ldr	x19, [sp, #24]
   11e48:	ldur	x2, [x29, #-8]
   11e4c:	add	x0, x27, #0x4
   11e50:	add	x1, x19, #0x4
   11e54:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   11e58:	ldr	x8, [sp, #80]
   11e5c:	ldur	x9, [x29, #-72]
   11e60:	add	x28, x0, #0x4
   11e64:	cmp	w9, w8
   11e68:	sub	w8, w27, w19
   11e6c:	str	w8, [sp, #44]
   11e70:	b.ls	11ecc <ZSTD_endStream@@Base+0x3f78>  // b.plast
   11e74:	cmp	x27, x22
   11e78:	b.ls	11ecc <ZSTD_endStream@@Base+0x3f78>  // b.plast
   11e7c:	ldr	x8, [sp, #8]
   11e80:	ldur	x10, [x29, #-72]
   11e84:	ldr	x12, [sp, #32]
   11e88:	sub	x9, x27, #0x1
   11e8c:	add	x8, x8, x10
   11e90:	ldrb	w10, [x9]
   11e94:	ldrb	w11, [x8]
   11e98:	cmp	w10, w11
   11e9c:	b.ne	11ed8 <ZSTD_endStream@@Base+0x3f84>  // b.any
   11ea0:	add	x28, x28, #0x1
   11ea4:	cmp	x9, x22
   11ea8:	sub	x10, x9, #0x1
   11eac:	b.ls	11ec0 <ZSTD_endStream@@Base+0x3f6c>  // b.plast
   11eb0:	cmp	x8, x12
   11eb4:	sub	x8, x8, #0x1
   11eb8:	mov	x9, x10
   11ebc:	b.hi	11e90 <ZSTD_endStream@@Base+0x3f3c>  // b.pmore
   11ec0:	add	x26, x10, #0x1
   11ec4:	b	11edc <ZSTD_endStream@@Base+0x3f88>
   11ec8:	mov	x28, x13
   11ecc:	mov	x26, x27
   11ed0:	b	11edc <ZSTD_endStream@@Base+0x3f88>
   11ed4:	mov	x28, x13
   11ed8:	add	x26, x9, #0x1
   11edc:	ldur	x3, [x29, #-56]
   11ee0:	ldr	x0, [x21, #24]
   11ee4:	sub	x27, x26, x22
   11ee8:	cmp	x26, x3
   11eec:	b.ls	11f00 <ZSTD_endStream@@Base+0x3fac>  // b.plast
   11ef0:	mov	x1, x22
   11ef4:	mov	x2, x26
   11ef8:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   11efc:	b	11f68 <ZSTD_endStream@@Base+0x4014>
   11f00:	mov	x1, x22
   11f04:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11f08:	cmp	x27, #0x11
   11f0c:	b.cc	11f68 <ZSTD_endStream@@Base+0x4014>  // b.lo, b.ul, b.last
   11f10:	ldr	x19, [x21, #24]
   11f14:	add	x1, x22, #0x10
   11f18:	add	x0, x19, #0x10
   11f1c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11f20:	add	x0, x19, #0x20
   11f24:	add	x1, x22, #0x20
   11f28:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11f2c:	cmp	x27, #0x31
   11f30:	b.lt	11f68 <ZSTD_endStream@@Base+0x4014>  // b.tstop
   11f34:	add	x20, x19, x27
   11f38:	add	x19, x19, #0x30
   11f3c:	add	x22, x22, #0x40
   11f40:	sub	x1, x22, #0x10
   11f44:	mov	x0, x19
   11f48:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11f4c:	add	x0, x19, #0x10
   11f50:	mov	x1, x22
   11f54:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   11f58:	add	x19, x19, #0x20
   11f5c:	cmp	x19, x20
   11f60:	add	x22, x22, #0x20
   11f64:	b.cc	11f40 <ZSTD_endStream@@Base+0x3fec>  // b.lo, b.ul, b.last
   11f68:	ldr	x9, [x21, #24]
   11f6c:	mov	x13, x28
   11f70:	sub	x8, x28, #0x3
   11f74:	cmp	x27, #0x10, lsl #12
   11f78:	add	x9, x9, x27
   11f7c:	str	x9, [x21, #24]
   11f80:	b.cc	11f94 <ZSTD_endStream@@Base+0x4040>  // b.lo, b.ul, b.last
   11f84:	ldp	x10, x9, [x21]
   11f88:	sub	x9, x9, x10
   11f8c:	lsr	x9, x9, #3
   11f90:	stp	w24, w9, [x21, #72]
   11f94:	ldr	w12, [sp, #44]
   11f98:	ldr	x9, [x21, #8]
   11f9c:	cmp	x8, #0x10, lsl #12
   11fa0:	add	w10, w12, #0x3
   11fa4:	strh	w27, [x9, #4]
   11fa8:	str	w10, [x9]
   11fac:	b.cc	11fc4 <ZSTD_endStream@@Base+0x4070>  // b.lo, b.ul, b.last
   11fb0:	ldp	x11, x10, [x21]
   11fb4:	sub	x10, x10, x11
   11fb8:	lsr	x10, x10, #3
   11fbc:	mov	w11, #0x2                   	// #2
   11fc0:	stp	w11, w10, [x21, #72]
   11fc4:	str	w23, [sp, #76]
   11fc8:	mov	w23, w12
   11fcc:	strh	w8, [x9, #6]
   11fd0:	add	x8, x9, #0x8
   11fd4:	ldur	x9, [x29, #-24]
   11fd8:	add	x22, x26, x13
   11fdc:	str	x8, [x21, #8]
   11fe0:	str	x13, [sp, #64]
   11fe4:	cmp	x22, x9
   11fe8:	b.hi	11b00 <ZSTD_endStream@@Base+0x3bac>  // b.pmore
   11fec:	ldur	w8, [x29, #-60]
   11ff0:	mov	w24, w25
   11ff4:	ldur	x25, [x29, #-16]
   11ff8:	ldur	w28, [x29, #-36]
   11ffc:	add	w20, w8, #0x2
   12000:	mov	w2, #0x8                   	// #8
   12004:	add	x19, x25, x20
   12008:	mov	x0, x19
   1200c:	mov	w1, w28
   12010:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12014:	ldur	x27, [x29, #-32]
   12018:	mov	w2, #0x8                   	// #8
   1201c:	mov	w1, w28
   12020:	str	w20, [x27, x0, lsl #2]
   12024:	sub	x0, x22, #0x2
   12028:	sub	w26, w0, w25
   1202c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12030:	str	w26, [x27, x0, lsl #2]
   12034:	mov	w2, #0x7                   	// #7
   12038:	mov	x0, x19
   1203c:	mov	w1, w24
   12040:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12044:	ldur	x26, [x29, #-48]
   12048:	mov	w2, #0x7                   	// #7
   1204c:	str	w20, [x26, x0, lsl #2]
   12050:	sub	x0, x22, #0x1
   12054:	sub	w19, w0, w25
   12058:	mov	w25, w24
   1205c:	mov	w1, w25
   12060:	mov	w24, #0x1                   	// #1
   12064:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12068:	ldr	w27, [sp, #76]
   1206c:	str	w19, [x26, x0, lsl #2]
   12070:	b	12094 <ZSTD_endStream@@Base+0x4140>
   12074:	add	x22, x22, x8
   12078:	ldur	x8, [x29, #-24]
   1207c:	strh	w19, [x9, #6]
   12080:	add	x9, x9, #0x8
   12084:	mov	w23, w28
   12088:	cmp	x22, x8
   1208c:	str	x9, [x21, #8]
   12090:	b.hi	12168 <ZSTD_endStream@@Base+0x4214>  // b.pmore
   12094:	mov	x0, x22
   12098:	mov	w28, w27
   1209c:	mov	w27, w23
   120a0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   120a4:	mov	w20, w28
   120a8:	mov	w19, w0
   120ac:	sub	x0, x22, x20
   120b0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   120b4:	cbz	w28, 11af8 <ZSTD_endStream@@Base+0x3ba4>
   120b8:	cmp	w19, w0
   120bc:	b.ne	11af8 <ZSTD_endStream@@Base+0x3ba4>  // b.any
   120c0:	ldur	x2, [x29, #-8]
   120c4:	neg	x8, x20
   120c8:	add	x0, x22, #0x4
   120cc:	add	x1, x0, x8
   120d0:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   120d4:	ldur	x8, [x29, #-16]
   120d8:	mov	x26, x0
   120dc:	mov	w2, #0x7                   	// #7
   120e0:	mov	x0, x22
   120e4:	mov	w1, w25
   120e8:	sub	w19, w22, w8
   120ec:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   120f0:	ldur	x8, [x29, #-48]
   120f4:	ldur	w1, [x29, #-36]
   120f8:	mov	w2, #0x8                   	// #8
   120fc:	str	w19, [x8, x0, lsl #2]
   12100:	mov	x0, x22
   12104:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12108:	ldur	x8, [x29, #-32]
   1210c:	ldur	x3, [x29, #-56]
   12110:	mov	x1, x22
   12114:	str	w19, [x8, x0, lsl #2]
   12118:	ldr	x0, [x21, #24]
   1211c:	cmp	x22, x3
   12120:	add	x19, x26, #0x1
   12124:	b.ls	12134 <ZSTD_endStream@@Base+0x41e0>  // b.plast
   12128:	mov	x2, x22
   1212c:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   12130:	b	12138 <ZSTD_endStream@@Base+0x41e4>
   12134:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12138:	ldr	x9, [x21, #8]
   1213c:	add	x8, x26, #0x4
   12140:	cmp	x19, #0x10, lsl #12
   12144:	strh	wzr, [x9, #4]
   12148:	str	w24, [x9]
   1214c:	b.cc	12074 <ZSTD_endStream@@Base+0x4120>  // b.lo, b.ul, b.last
   12150:	ldp	x11, x10, [x21]
   12154:	sub	x10, x10, x11
   12158:	lsr	x10, x10, #3
   1215c:	mov	w11, #0x2                   	// #2
   12160:	stp	w11, w10, [x21, #72]
   12164:	b	12074 <ZSTD_endStream@@Base+0x4120>
   12168:	mov	w23, w28
   1216c:	str	w27, [sp, #76]
   12170:	b	11b00 <ZSTD_endStream@@Base+0x3bac>
   12174:	str	x28, [sp, #64]
   12178:	b	11b04 <ZSTD_endStream@@Base+0x3bb0>
   1217c:	mov	w8, #0x7                   	// #7
   12180:	mov	x27, x26
   12184:	b	11e38 <ZSTD_endStream@@Base+0x3ee4>
   12188:	add	x27, x27, #0x1
   1218c:	mov	w8, #0x7                   	// #7
   12190:	b	11e38 <ZSTD_endStream@@Base+0x3ee4>
   12194:	ldr	x8, [x0, #48]
   12198:	ldr	x15, [x0, #8]
   1219c:	ldr	w9, [x0, #184]
   121a0:	add	x14, x22, x4
   121a4:	stur	x8, [x29, #-32]
   121a8:	ldp	w25, w8, [x0, #188]
   121ac:	mov	w24, #0x1                   	// #1
   121b0:	sub	w12, w14, w15
   121b4:	lsl	w9, w24, w9
   121b8:	stur	w8, [x29, #-36]
   121bc:	ldr	x8, [x0, #64]
   121c0:	ldr	w10, [x2]
   121c4:	sub	x16, x14, #0x8
   121c8:	stur	x8, [x29, #-48]
   121cc:	ldr	w8, [x0, #24]
   121d0:	ldr	w11, [x2, #4]!
   121d4:	stur	x16, [x29, #-24]
   121d8:	stur	x14, [x29, #-8]
   121dc:	sub	w13, w12, w8
   121e0:	sub	w12, w12, w9
   121e4:	cmp	w13, w9
   121e8:	csel	w8, w12, w8, hi  // hi = pmore
   121ec:	str	x8, [sp, #80]
   121f0:	add	x8, x15, x8
   121f4:	cmp	w22, w8
   121f8:	cinc	x27, x22, eq  // eq = none
   121fc:	str	x8, [sp, #32]
   12200:	sub	w8, w27, w8
   12204:	cmp	w11, w8
   12208:	csel	w9, w11, wzr, hi  // hi = pmore
   1220c:	csel	w11, wzr, w11, hi  // hi = pmore
   12210:	cmp	w10, w8
   12214:	csel	w8, w10, w9, hi  // hi = pmore
   12218:	csel	w23, wzr, w10, hi  // hi = pmore
   1221c:	cmp	x27, x16
   12220:	str	x2, [sp, #48]
   12224:	str	w11, [sp, #76]
   12228:	str	w8, [sp, #20]
   1222c:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   12230:	sub	x8, x14, #0x20
   12234:	stur	x8, [x29, #-56]
   12238:	sub	x8, x15, #0x1
   1223c:	str	x8, [sp, #8]
   12240:	stur	x15, [x29, #-16]
   12244:	b	12260 <ZSTD_endStream@@Base+0x430c>
   12248:	str	w28, [sp, #76]
   1224c:	mov	w23, w27
   12250:	mov	x27, x22
   12254:	ldur	x8, [x29, #-24]
   12258:	cmp	x27, x8
   1225c:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   12260:	ldur	w1, [x29, #-36]
   12264:	mov	w2, #0x8                   	// #8
   12268:	mov	x0, x27
   1226c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12270:	mov	x19, x0
   12274:	mov	w2, #0x5                   	// #5
   12278:	mov	x0, x27
   1227c:	mov	w1, w25
   12280:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12284:	ldur	x8, [x29, #-16]
   12288:	ldur	x11, [x29, #-48]
   1228c:	ldur	x10, [x29, #-32]
   12290:	lsl	x9, x0, #2
   12294:	sub	w12, w27, w8
   12298:	lsl	x8, x19, #2
   1229c:	ldr	w13, [x11, x9]
   122a0:	ldr	w20, [x10, x8]
   122a4:	add	x26, x27, #0x1
   122a8:	mov	w28, w23
   122ac:	sub	x0, x26, x28
   122b0:	stur	x13, [x29, #-72]
   122b4:	str	w12, [x11, x9]
   122b8:	stur	w12, [x29, #-60]
   122bc:	str	w12, [x10, x8]
   122c0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   122c4:	mov	w19, w0
   122c8:	mov	x0, x26
   122cc:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   122d0:	cbz	w23, 12318 <ZSTD_endStream@@Base+0x43c4>
   122d4:	cmp	w19, w0
   122d8:	b.ne	12318 <ZSTD_endStream@@Base+0x43c4>  // b.any
   122dc:	ldur	x2, [x29, #-8]
   122e0:	neg	x8, x28
   122e4:	add	x0, x27, #0x5
   122e8:	add	x1, x0, x8
   122ec:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   122f0:	ldur	x3, [x29, #-56]
   122f4:	mov	x27, x0
   122f8:	ldr	x0, [x21, #24]
   122fc:	sub	x28, x26, x22
   12300:	cmp	x26, x3
   12304:	b.ls	124c0 <ZSTD_endStream@@Base+0x456c>  // b.plast
   12308:	mov	x1, x22
   1230c:	mov	x2, x26
   12310:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   12314:	b	12528 <ZSTD_endStream@@Base+0x45d4>
   12318:	ldr	x8, [sp, #80]
   1231c:	cmp	w20, w8
   12320:	b.ls	123b8 <ZSTD_endStream@@Base+0x4464>  // b.plast
   12324:	ldur	x8, [x29, #-16]
   12328:	add	x28, x8, x20
   1232c:	mov	x0, x28
   12330:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12334:	mov	x19, x0
   12338:	mov	x0, x27
   1233c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12340:	cmp	x19, x0
   12344:	b.ne	123b8 <ZSTD_endStream@@Base+0x4464>  // b.any
   12348:	ldur	x2, [x29, #-8]
   1234c:	add	x0, x27, #0x8
   12350:	add	x1, x28, #0x8
   12354:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12358:	add	x13, x0, #0x8
   1235c:	cmp	x27, x22
   12360:	sub	w8, w27, w28
   12364:	str	w8, [sp, #44]
   12368:	b.ls	12618 <ZSTD_endStream@@Base+0x46c4>  // b.plast
   1236c:	ldr	x8, [sp, #8]
   12370:	ldr	x12, [sp, #32]
   12374:	sub	x9, x27, #0x1
   12378:	add	x8, x8, x20
   1237c:	ldrb	w10, [x9]
   12380:	ldrb	w11, [x8]
   12384:	cmp	w10, w11
   12388:	b.ne	12624 <ZSTD_endStream@@Base+0x46d0>  // b.any
   1238c:	add	x13, x13, #0x1
   12390:	cmp	x9, x22
   12394:	sub	x10, x9, #0x1
   12398:	b.ls	123ac <ZSTD_endStream@@Base+0x4458>  // b.plast
   1239c:	cmp	x8, x12
   123a0:	sub	x8, x8, #0x1
   123a4:	mov	x9, x10
   123a8:	b.hi	1237c <ZSTD_endStream@@Base+0x4428>  // b.pmore
   123ac:	mov	x28, x13
   123b0:	add	x26, x10, #0x1
   123b4:	b	1262c <ZSTD_endStream@@Base+0x46d8>
   123b8:	ldr	x8, [sp, #80]
   123bc:	ldur	x9, [x29, #-72]
   123c0:	cmp	w9, w8
   123c4:	b.ls	124b0 <ZSTD_endStream@@Base+0x455c>  // b.plast
   123c8:	ldur	x8, [x29, #-16]
   123cc:	add	x20, x8, x9
   123d0:	mov	x0, x20
   123d4:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   123d8:	mov	w19, w0
   123dc:	mov	x0, x27
   123e0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   123e4:	cmp	w19, w0
   123e8:	b.ne	124b0 <ZSTD_endStream@@Base+0x455c>  // b.any
   123ec:	ldur	w8, [x29, #-60]
   123f0:	ldur	w1, [x29, #-36]
   123f4:	mov	w2, #0x8                   	// #8
   123f8:	mov	x0, x26
   123fc:	str	x20, [sp, #24]
   12400:	add	w19, w8, #0x1
   12404:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12408:	ldur	x9, [x29, #-32]
   1240c:	lsl	x8, x0, #2
   12410:	ldr	x10, [sp, #80]
   12414:	ldr	w20, [x9, x8]
   12418:	str	w19, [x9, x8]
   1241c:	cmp	w20, w10
   12420:	b.ls	12580 <ZSTD_endStream@@Base+0x462c>  // b.plast
   12424:	ldur	x8, [x29, #-16]
   12428:	add	x19, x8, x20
   1242c:	mov	x0, x19
   12430:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12434:	mov	x28, x0
   12438:	mov	x0, x26
   1243c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12440:	cmp	x28, x0
   12444:	b.ne	12580 <ZSTD_endStream@@Base+0x462c>  // b.any
   12448:	ldur	x2, [x29, #-8]
   1244c:	add	x0, x27, #0x9
   12450:	add	x1, x19, #0x8
   12454:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12458:	add	x28, x0, #0x8
   1245c:	cmp	x26, x22
   12460:	sub	w8, w26, w19
   12464:	str	w8, [sp, #44]
   12468:	b.ls	128cc <ZSTD_endStream@@Base+0x4978>  // b.plast
   1246c:	ldr	x8, [sp, #8]
   12470:	add	x8, x8, x20
   12474:	ldrb	w9, [x27]
   12478:	ldrb	w10, [x8]
   1247c:	cmp	w9, w10
   12480:	b.ne	128d8 <ZSTD_endStream@@Base+0x4984>  // b.any
   12484:	add	x28, x28, #0x1
   12488:	cmp	x27, x22
   1248c:	sub	x9, x27, #0x1
   12490:	b.ls	124a8 <ZSTD_endStream@@Base+0x4554>  // b.plast
   12494:	ldr	x10, [sp, #32]
   12498:	mov	x27, x9
   1249c:	cmp	x8, x10
   124a0:	sub	x8, x8, #0x1
   124a4:	b.hi	12474 <ZSTD_endStream@@Base+0x4520>  // b.pmore
   124a8:	add	x27, x9, #0x1
   124ac:	b	128dc <ZSTD_endStream@@Base+0x4988>
   124b0:	sub	x8, x27, x22
   124b4:	add	x8, x27, x8, asr #8
   124b8:	add	x27, x8, #0x1
   124bc:	b	12254 <ZSTD_endStream@@Base+0x4300>
   124c0:	mov	x1, x22
   124c4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   124c8:	cmp	x28, #0x11
   124cc:	b.cc	12528 <ZSTD_endStream@@Base+0x45d4>  // b.lo, b.ul, b.last
   124d0:	ldr	x19, [x21, #24]
   124d4:	add	x1, x22, #0x10
   124d8:	add	x0, x19, #0x10
   124dc:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   124e0:	add	x0, x19, #0x20
   124e4:	add	x1, x22, #0x20
   124e8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   124ec:	cmp	x28, #0x31
   124f0:	b.lt	12528 <ZSTD_endStream@@Base+0x45d4>  // b.tstop
   124f4:	add	x20, x19, x28
   124f8:	add	x19, x19, #0x30
   124fc:	add	x22, x22, #0x40
   12500:	sub	x1, x22, #0x10
   12504:	mov	x0, x19
   12508:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1250c:	add	x0, x19, #0x10
   12510:	mov	x1, x22
   12514:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12518:	add	x19, x19, #0x20
   1251c:	cmp	x19, x20
   12520:	add	x22, x22, #0x20
   12524:	b.cc	12500 <ZSTD_endStream@@Base+0x45ac>  // b.lo, b.ul, b.last
   12528:	ldr	x9, [x21, #24]
   1252c:	add	x13, x27, #0x4
   12530:	add	x8, x27, #0x1
   12534:	cmp	x28, #0x10, lsl #12
   12538:	add	x9, x9, x28
   1253c:	str	x9, [x21, #24]
   12540:	b.cc	12554 <ZSTD_endStream@@Base+0x4600>  // b.lo, b.ul, b.last
   12544:	ldp	x10, x9, [x21]
   12548:	sub	x9, x9, x10
   1254c:	lsr	x9, x9, #3
   12550:	stp	w24, w9, [x21, #72]
   12554:	ldr	x9, [x21, #8]
   12558:	cmp	x8, #0x10, lsl #12
   1255c:	strh	w28, [x9, #4]
   12560:	str	w24, [x9]
   12564:	b.cc	1271c <ZSTD_endStream@@Base+0x47c8>  // b.lo, b.ul, b.last
   12568:	ldp	x11, x10, [x21]
   1256c:	sub	x10, x10, x11
   12570:	lsr	x10, x10, #3
   12574:	mov	w11, #0x2                   	// #2
   12578:	stp	w11, w10, [x21, #72]
   1257c:	b	1271c <ZSTD_endStream@@Base+0x47c8>
   12580:	ldr	x28, [sp, #64]
   12584:	mov	w8, wzr
   12588:	cmp	w8, #0x7
   1258c:	b.eq	1261c <ZSTD_endStream@@Base+0x46c8>  // b.none
   12590:	cbnz	w8, 128c4 <ZSTD_endStream@@Base+0x4970>
   12594:	ldr	x19, [sp, #24]
   12598:	ldur	x2, [x29, #-8]
   1259c:	add	x0, x27, #0x4
   125a0:	add	x1, x19, #0x4
   125a4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   125a8:	ldr	x8, [sp, #80]
   125ac:	ldur	x9, [x29, #-72]
   125b0:	add	x28, x0, #0x4
   125b4:	cmp	w9, w8
   125b8:	sub	w8, w27, w19
   125bc:	str	w8, [sp, #44]
   125c0:	b.ls	1261c <ZSTD_endStream@@Base+0x46c8>  // b.plast
   125c4:	cmp	x27, x22
   125c8:	b.ls	1261c <ZSTD_endStream@@Base+0x46c8>  // b.plast
   125cc:	ldr	x8, [sp, #8]
   125d0:	ldur	x10, [x29, #-72]
   125d4:	ldr	x12, [sp, #32]
   125d8:	sub	x9, x27, #0x1
   125dc:	add	x8, x8, x10
   125e0:	ldrb	w10, [x9]
   125e4:	ldrb	w11, [x8]
   125e8:	cmp	w10, w11
   125ec:	b.ne	12628 <ZSTD_endStream@@Base+0x46d4>  // b.any
   125f0:	add	x28, x28, #0x1
   125f4:	cmp	x9, x22
   125f8:	sub	x10, x9, #0x1
   125fc:	b.ls	12610 <ZSTD_endStream@@Base+0x46bc>  // b.plast
   12600:	cmp	x8, x12
   12604:	sub	x8, x8, #0x1
   12608:	mov	x9, x10
   1260c:	b.hi	125e0 <ZSTD_endStream@@Base+0x468c>  // b.pmore
   12610:	add	x26, x10, #0x1
   12614:	b	1262c <ZSTD_endStream@@Base+0x46d8>
   12618:	mov	x28, x13
   1261c:	mov	x26, x27
   12620:	b	1262c <ZSTD_endStream@@Base+0x46d8>
   12624:	mov	x28, x13
   12628:	add	x26, x9, #0x1
   1262c:	ldur	x3, [x29, #-56]
   12630:	ldr	x0, [x21, #24]
   12634:	sub	x27, x26, x22
   12638:	cmp	x26, x3
   1263c:	b.ls	12650 <ZSTD_endStream@@Base+0x46fc>  // b.plast
   12640:	mov	x1, x22
   12644:	mov	x2, x26
   12648:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   1264c:	b	126b8 <ZSTD_endStream@@Base+0x4764>
   12650:	mov	x1, x22
   12654:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12658:	cmp	x27, #0x11
   1265c:	b.cc	126b8 <ZSTD_endStream@@Base+0x4764>  // b.lo, b.ul, b.last
   12660:	ldr	x19, [x21, #24]
   12664:	add	x1, x22, #0x10
   12668:	add	x0, x19, #0x10
   1266c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12670:	add	x0, x19, #0x20
   12674:	add	x1, x22, #0x20
   12678:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1267c:	cmp	x27, #0x31
   12680:	b.lt	126b8 <ZSTD_endStream@@Base+0x4764>  // b.tstop
   12684:	add	x20, x19, x27
   12688:	add	x19, x19, #0x30
   1268c:	add	x22, x22, #0x40
   12690:	sub	x1, x22, #0x10
   12694:	mov	x0, x19
   12698:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1269c:	add	x0, x19, #0x10
   126a0:	mov	x1, x22
   126a4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   126a8:	add	x19, x19, #0x20
   126ac:	cmp	x19, x20
   126b0:	add	x22, x22, #0x20
   126b4:	b.cc	12690 <ZSTD_endStream@@Base+0x473c>  // b.lo, b.ul, b.last
   126b8:	ldr	x9, [x21, #24]
   126bc:	mov	x13, x28
   126c0:	sub	x8, x28, #0x3
   126c4:	cmp	x27, #0x10, lsl #12
   126c8:	add	x9, x9, x27
   126cc:	str	x9, [x21, #24]
   126d0:	b.cc	126e4 <ZSTD_endStream@@Base+0x4790>  // b.lo, b.ul, b.last
   126d4:	ldp	x10, x9, [x21]
   126d8:	sub	x9, x9, x10
   126dc:	lsr	x9, x9, #3
   126e0:	stp	w24, w9, [x21, #72]
   126e4:	ldr	w12, [sp, #44]
   126e8:	ldr	x9, [x21, #8]
   126ec:	cmp	x8, #0x10, lsl #12
   126f0:	add	w10, w12, #0x3
   126f4:	strh	w27, [x9, #4]
   126f8:	str	w10, [x9]
   126fc:	b.cc	12714 <ZSTD_endStream@@Base+0x47c0>  // b.lo, b.ul, b.last
   12700:	ldp	x11, x10, [x21]
   12704:	sub	x10, x10, x11
   12708:	lsr	x10, x10, #3
   1270c:	mov	w11, #0x2                   	// #2
   12710:	stp	w11, w10, [x21, #72]
   12714:	str	w23, [sp, #76]
   12718:	mov	w23, w12
   1271c:	strh	w8, [x9, #6]
   12720:	add	x8, x9, #0x8
   12724:	ldur	x9, [x29, #-24]
   12728:	add	x22, x26, x13
   1272c:	str	x8, [x21, #8]
   12730:	str	x13, [sp, #64]
   12734:	cmp	x22, x9
   12738:	b.hi	12250 <ZSTD_endStream@@Base+0x42fc>  // b.pmore
   1273c:	ldur	w8, [x29, #-60]
   12740:	mov	w24, w25
   12744:	ldur	x25, [x29, #-16]
   12748:	ldur	w28, [x29, #-36]
   1274c:	add	w20, w8, #0x2
   12750:	mov	w2, #0x8                   	// #8
   12754:	add	x19, x25, x20
   12758:	mov	x0, x19
   1275c:	mov	w1, w28
   12760:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12764:	ldur	x27, [x29, #-32]
   12768:	mov	w2, #0x8                   	// #8
   1276c:	mov	w1, w28
   12770:	str	w20, [x27, x0, lsl #2]
   12774:	sub	x0, x22, #0x2
   12778:	sub	w26, w0, w25
   1277c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12780:	str	w26, [x27, x0, lsl #2]
   12784:	mov	w2, #0x5                   	// #5
   12788:	mov	x0, x19
   1278c:	mov	w1, w24
   12790:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12794:	ldur	x26, [x29, #-48]
   12798:	mov	w2, #0x5                   	// #5
   1279c:	str	w20, [x26, x0, lsl #2]
   127a0:	sub	x0, x22, #0x1
   127a4:	sub	w19, w0, w25
   127a8:	mov	w25, w24
   127ac:	mov	w1, w25
   127b0:	mov	w24, #0x1                   	// #1
   127b4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   127b8:	ldr	w27, [sp, #76]
   127bc:	str	w19, [x26, x0, lsl #2]
   127c0:	b	127e4 <ZSTD_endStream@@Base+0x4890>
   127c4:	add	x22, x22, x8
   127c8:	ldur	x8, [x29, #-24]
   127cc:	strh	w19, [x9, #6]
   127d0:	add	x9, x9, #0x8
   127d4:	mov	w23, w28
   127d8:	cmp	x22, x8
   127dc:	str	x9, [x21, #8]
   127e0:	b.hi	128b8 <ZSTD_endStream@@Base+0x4964>  // b.pmore
   127e4:	mov	x0, x22
   127e8:	mov	w28, w27
   127ec:	mov	w27, w23
   127f0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   127f4:	mov	w20, w28
   127f8:	mov	w19, w0
   127fc:	sub	x0, x22, x20
   12800:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   12804:	cbz	w28, 12248 <ZSTD_endStream@@Base+0x42f4>
   12808:	cmp	w19, w0
   1280c:	b.ne	12248 <ZSTD_endStream@@Base+0x42f4>  // b.any
   12810:	ldur	x2, [x29, #-8]
   12814:	neg	x8, x20
   12818:	add	x0, x22, #0x4
   1281c:	add	x1, x0, x8
   12820:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12824:	ldur	x8, [x29, #-16]
   12828:	mov	x26, x0
   1282c:	mov	w2, #0x5                   	// #5
   12830:	mov	x0, x22
   12834:	mov	w1, w25
   12838:	sub	w19, w22, w8
   1283c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12840:	ldur	x8, [x29, #-48]
   12844:	ldur	w1, [x29, #-36]
   12848:	mov	w2, #0x8                   	// #8
   1284c:	str	w19, [x8, x0, lsl #2]
   12850:	mov	x0, x22
   12854:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12858:	ldur	x8, [x29, #-32]
   1285c:	ldur	x3, [x29, #-56]
   12860:	mov	x1, x22
   12864:	str	w19, [x8, x0, lsl #2]
   12868:	ldr	x0, [x21, #24]
   1286c:	cmp	x22, x3
   12870:	add	x19, x26, #0x1
   12874:	b.ls	12884 <ZSTD_endStream@@Base+0x4930>  // b.plast
   12878:	mov	x2, x22
   1287c:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   12880:	b	12888 <ZSTD_endStream@@Base+0x4934>
   12884:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12888:	ldr	x9, [x21, #8]
   1288c:	add	x8, x26, #0x4
   12890:	cmp	x19, #0x10, lsl #12
   12894:	strh	wzr, [x9, #4]
   12898:	str	w24, [x9]
   1289c:	b.cc	127c4 <ZSTD_endStream@@Base+0x4870>  // b.lo, b.ul, b.last
   128a0:	ldp	x11, x10, [x21]
   128a4:	sub	x10, x10, x11
   128a8:	lsr	x10, x10, #3
   128ac:	mov	w11, #0x2                   	// #2
   128b0:	stp	w11, w10, [x21, #72]
   128b4:	b	127c4 <ZSTD_endStream@@Base+0x4870>
   128b8:	mov	w23, w28
   128bc:	str	w27, [sp, #76]
   128c0:	b	12250 <ZSTD_endStream@@Base+0x42fc>
   128c4:	str	x28, [sp, #64]
   128c8:	b	12254 <ZSTD_endStream@@Base+0x4300>
   128cc:	mov	w8, #0x7                   	// #7
   128d0:	mov	x27, x26
   128d4:	b	12588 <ZSTD_endStream@@Base+0x4634>
   128d8:	add	x27, x27, #0x1
   128dc:	mov	w8, #0x7                   	// #7
   128e0:	b	12588 <ZSTD_endStream@@Base+0x4634>
   128e4:	ldr	x8, [x0, #48]
   128e8:	ldr	x15, [x0, #8]
   128ec:	ldr	w9, [x0, #184]
   128f0:	add	x14, x22, x4
   128f4:	stur	x8, [x29, #-32]
   128f8:	ldp	w25, w8, [x0, #188]
   128fc:	mov	w24, #0x1                   	// #1
   12900:	sub	w12, w14, w15
   12904:	lsl	w9, w24, w9
   12908:	stur	w8, [x29, #-36]
   1290c:	ldr	x8, [x0, #64]
   12910:	ldr	w10, [x2]
   12914:	sub	x16, x14, #0x8
   12918:	stur	x8, [x29, #-48]
   1291c:	ldr	w8, [x0, #24]
   12920:	ldr	w11, [x2, #4]!
   12924:	stur	x16, [x29, #-24]
   12928:	stur	x14, [x29, #-8]
   1292c:	sub	w13, w12, w8
   12930:	sub	w12, w12, w9
   12934:	cmp	w13, w9
   12938:	csel	w8, w12, w8, hi  // hi = pmore
   1293c:	str	x8, [sp, #80]
   12940:	add	x8, x15, x8
   12944:	cmp	w22, w8
   12948:	cinc	x27, x22, eq  // eq = none
   1294c:	str	x8, [sp, #32]
   12950:	sub	w8, w27, w8
   12954:	cmp	w11, w8
   12958:	csel	w9, w11, wzr, hi  // hi = pmore
   1295c:	csel	w11, wzr, w11, hi  // hi = pmore
   12960:	cmp	w10, w8
   12964:	csel	w8, w10, w9, hi  // hi = pmore
   12968:	csel	w23, wzr, w10, hi  // hi = pmore
   1296c:	cmp	x27, x16
   12970:	str	x2, [sp, #48]
   12974:	str	w11, [sp, #76]
   12978:	str	w8, [sp, #20]
   1297c:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   12980:	sub	x8, x14, #0x20
   12984:	stur	x8, [x29, #-56]
   12988:	sub	x8, x15, #0x1
   1298c:	str	x8, [sp, #8]
   12990:	stur	x15, [x29, #-16]
   12994:	b	129b0 <ZSTD_endStream@@Base+0x4a5c>
   12998:	str	w28, [sp, #76]
   1299c:	mov	w23, w27
   129a0:	mov	x27, x22
   129a4:	ldur	x8, [x29, #-24]
   129a8:	cmp	x27, x8
   129ac:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   129b0:	ldur	w1, [x29, #-36]
   129b4:	mov	w2, #0x8                   	// #8
   129b8:	mov	x0, x27
   129bc:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   129c0:	mov	x19, x0
   129c4:	mov	w2, #0x6                   	// #6
   129c8:	mov	x0, x27
   129cc:	mov	w1, w25
   129d0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   129d4:	ldur	x8, [x29, #-16]
   129d8:	ldur	x11, [x29, #-48]
   129dc:	ldur	x10, [x29, #-32]
   129e0:	lsl	x9, x0, #2
   129e4:	sub	w12, w27, w8
   129e8:	lsl	x8, x19, #2
   129ec:	ldr	w13, [x11, x9]
   129f0:	ldr	w20, [x10, x8]
   129f4:	add	x26, x27, #0x1
   129f8:	mov	w28, w23
   129fc:	sub	x0, x26, x28
   12a00:	stur	x13, [x29, #-72]
   12a04:	str	w12, [x11, x9]
   12a08:	stur	w12, [x29, #-60]
   12a0c:	str	w12, [x10, x8]
   12a10:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   12a14:	mov	w19, w0
   12a18:	mov	x0, x26
   12a1c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   12a20:	cbz	w23, 12a68 <ZSTD_endStream@@Base+0x4b14>
   12a24:	cmp	w19, w0
   12a28:	b.ne	12a68 <ZSTD_endStream@@Base+0x4b14>  // b.any
   12a2c:	ldur	x2, [x29, #-8]
   12a30:	neg	x8, x28
   12a34:	add	x0, x27, #0x5
   12a38:	add	x1, x0, x8
   12a3c:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12a40:	ldur	x3, [x29, #-56]
   12a44:	mov	x27, x0
   12a48:	ldr	x0, [x21, #24]
   12a4c:	sub	x28, x26, x22
   12a50:	cmp	x26, x3
   12a54:	b.ls	12c10 <ZSTD_endStream@@Base+0x4cbc>  // b.plast
   12a58:	mov	x1, x22
   12a5c:	mov	x2, x26
   12a60:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   12a64:	b	12c78 <ZSTD_endStream@@Base+0x4d24>
   12a68:	ldr	x8, [sp, #80]
   12a6c:	cmp	w20, w8
   12a70:	b.ls	12b08 <ZSTD_endStream@@Base+0x4bb4>  // b.plast
   12a74:	ldur	x8, [x29, #-16]
   12a78:	add	x28, x8, x20
   12a7c:	mov	x0, x28
   12a80:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12a84:	mov	x19, x0
   12a88:	mov	x0, x27
   12a8c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12a90:	cmp	x19, x0
   12a94:	b.ne	12b08 <ZSTD_endStream@@Base+0x4bb4>  // b.any
   12a98:	ldur	x2, [x29, #-8]
   12a9c:	add	x0, x27, #0x8
   12aa0:	add	x1, x28, #0x8
   12aa4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12aa8:	add	x13, x0, #0x8
   12aac:	cmp	x27, x22
   12ab0:	sub	w8, w27, w28
   12ab4:	str	w8, [sp, #44]
   12ab8:	b.ls	12d68 <ZSTD_endStream@@Base+0x4e14>  // b.plast
   12abc:	ldr	x8, [sp, #8]
   12ac0:	ldr	x12, [sp, #32]
   12ac4:	sub	x9, x27, #0x1
   12ac8:	add	x8, x8, x20
   12acc:	ldrb	w10, [x9]
   12ad0:	ldrb	w11, [x8]
   12ad4:	cmp	w10, w11
   12ad8:	b.ne	12d74 <ZSTD_endStream@@Base+0x4e20>  // b.any
   12adc:	add	x13, x13, #0x1
   12ae0:	cmp	x9, x22
   12ae4:	sub	x10, x9, #0x1
   12ae8:	b.ls	12afc <ZSTD_endStream@@Base+0x4ba8>  // b.plast
   12aec:	cmp	x8, x12
   12af0:	sub	x8, x8, #0x1
   12af4:	mov	x9, x10
   12af8:	b.hi	12acc <ZSTD_endStream@@Base+0x4b78>  // b.pmore
   12afc:	mov	x28, x13
   12b00:	add	x26, x10, #0x1
   12b04:	b	12d7c <ZSTD_endStream@@Base+0x4e28>
   12b08:	ldr	x8, [sp, #80]
   12b0c:	ldur	x9, [x29, #-72]
   12b10:	cmp	w9, w8
   12b14:	b.ls	12c00 <ZSTD_endStream@@Base+0x4cac>  // b.plast
   12b18:	ldur	x8, [x29, #-16]
   12b1c:	add	x20, x8, x9
   12b20:	mov	x0, x20
   12b24:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   12b28:	mov	w19, w0
   12b2c:	mov	x0, x27
   12b30:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   12b34:	cmp	w19, w0
   12b38:	b.ne	12c00 <ZSTD_endStream@@Base+0x4cac>  // b.any
   12b3c:	ldur	w8, [x29, #-60]
   12b40:	ldur	w1, [x29, #-36]
   12b44:	mov	w2, #0x8                   	// #8
   12b48:	mov	x0, x26
   12b4c:	str	x20, [sp, #24]
   12b50:	add	w19, w8, #0x1
   12b54:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12b58:	ldur	x9, [x29, #-32]
   12b5c:	lsl	x8, x0, #2
   12b60:	ldr	x10, [sp, #80]
   12b64:	ldr	w20, [x9, x8]
   12b68:	str	w19, [x9, x8]
   12b6c:	cmp	w20, w10
   12b70:	b.ls	12cd0 <ZSTD_endStream@@Base+0x4d7c>  // b.plast
   12b74:	ldur	x8, [x29, #-16]
   12b78:	add	x19, x8, x20
   12b7c:	mov	x0, x19
   12b80:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12b84:	mov	x28, x0
   12b88:	mov	x0, x26
   12b8c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   12b90:	cmp	x28, x0
   12b94:	b.ne	12cd0 <ZSTD_endStream@@Base+0x4d7c>  // b.any
   12b98:	ldur	x2, [x29, #-8]
   12b9c:	add	x0, x27, #0x9
   12ba0:	add	x1, x19, #0x8
   12ba4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12ba8:	add	x28, x0, #0x8
   12bac:	cmp	x26, x22
   12bb0:	sub	w8, w26, w19
   12bb4:	str	w8, [sp, #44]
   12bb8:	b.ls	1301c <ZSTD_endStream@@Base+0x50c8>  // b.plast
   12bbc:	ldr	x8, [sp, #8]
   12bc0:	add	x8, x8, x20
   12bc4:	ldrb	w9, [x27]
   12bc8:	ldrb	w10, [x8]
   12bcc:	cmp	w9, w10
   12bd0:	b.ne	13028 <ZSTD_endStream@@Base+0x50d4>  // b.any
   12bd4:	add	x28, x28, #0x1
   12bd8:	cmp	x27, x22
   12bdc:	sub	x9, x27, #0x1
   12be0:	b.ls	12bf8 <ZSTD_endStream@@Base+0x4ca4>  // b.plast
   12be4:	ldr	x10, [sp, #32]
   12be8:	mov	x27, x9
   12bec:	cmp	x8, x10
   12bf0:	sub	x8, x8, #0x1
   12bf4:	b.hi	12bc4 <ZSTD_endStream@@Base+0x4c70>  // b.pmore
   12bf8:	add	x27, x9, #0x1
   12bfc:	b	1302c <ZSTD_endStream@@Base+0x50d8>
   12c00:	sub	x8, x27, x22
   12c04:	add	x8, x27, x8, asr #8
   12c08:	add	x27, x8, #0x1
   12c0c:	b	129a4 <ZSTD_endStream@@Base+0x4a50>
   12c10:	mov	x1, x22
   12c14:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12c18:	cmp	x28, #0x11
   12c1c:	b.cc	12c78 <ZSTD_endStream@@Base+0x4d24>  // b.lo, b.ul, b.last
   12c20:	ldr	x19, [x21, #24]
   12c24:	add	x1, x22, #0x10
   12c28:	add	x0, x19, #0x10
   12c2c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12c30:	add	x0, x19, #0x20
   12c34:	add	x1, x22, #0x20
   12c38:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12c3c:	cmp	x28, #0x31
   12c40:	b.lt	12c78 <ZSTD_endStream@@Base+0x4d24>  // b.tstop
   12c44:	add	x20, x19, x28
   12c48:	add	x19, x19, #0x30
   12c4c:	add	x22, x22, #0x40
   12c50:	sub	x1, x22, #0x10
   12c54:	mov	x0, x19
   12c58:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12c5c:	add	x0, x19, #0x10
   12c60:	mov	x1, x22
   12c64:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12c68:	add	x19, x19, #0x20
   12c6c:	cmp	x19, x20
   12c70:	add	x22, x22, #0x20
   12c74:	b.cc	12c50 <ZSTD_endStream@@Base+0x4cfc>  // b.lo, b.ul, b.last
   12c78:	ldr	x9, [x21, #24]
   12c7c:	add	x13, x27, #0x4
   12c80:	add	x8, x27, #0x1
   12c84:	cmp	x28, #0x10, lsl #12
   12c88:	add	x9, x9, x28
   12c8c:	str	x9, [x21, #24]
   12c90:	b.cc	12ca4 <ZSTD_endStream@@Base+0x4d50>  // b.lo, b.ul, b.last
   12c94:	ldp	x10, x9, [x21]
   12c98:	sub	x9, x9, x10
   12c9c:	lsr	x9, x9, #3
   12ca0:	stp	w24, w9, [x21, #72]
   12ca4:	ldr	x9, [x21, #8]
   12ca8:	cmp	x8, #0x10, lsl #12
   12cac:	strh	w28, [x9, #4]
   12cb0:	str	w24, [x9]
   12cb4:	b.cc	12e6c <ZSTD_endStream@@Base+0x4f18>  // b.lo, b.ul, b.last
   12cb8:	ldp	x11, x10, [x21]
   12cbc:	sub	x10, x10, x11
   12cc0:	lsr	x10, x10, #3
   12cc4:	mov	w11, #0x2                   	// #2
   12cc8:	stp	w11, w10, [x21, #72]
   12ccc:	b	12e6c <ZSTD_endStream@@Base+0x4f18>
   12cd0:	ldr	x28, [sp, #64]
   12cd4:	mov	w8, wzr
   12cd8:	cmp	w8, #0x7
   12cdc:	b.eq	12d6c <ZSTD_endStream@@Base+0x4e18>  // b.none
   12ce0:	cbnz	w8, 13014 <ZSTD_endStream@@Base+0x50c0>
   12ce4:	ldr	x19, [sp, #24]
   12ce8:	ldur	x2, [x29, #-8]
   12cec:	add	x0, x27, #0x4
   12cf0:	add	x1, x19, #0x4
   12cf4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12cf8:	ldr	x8, [sp, #80]
   12cfc:	ldur	x9, [x29, #-72]
   12d00:	add	x28, x0, #0x4
   12d04:	cmp	w9, w8
   12d08:	sub	w8, w27, w19
   12d0c:	str	w8, [sp, #44]
   12d10:	b.ls	12d6c <ZSTD_endStream@@Base+0x4e18>  // b.plast
   12d14:	cmp	x27, x22
   12d18:	b.ls	12d6c <ZSTD_endStream@@Base+0x4e18>  // b.plast
   12d1c:	ldr	x8, [sp, #8]
   12d20:	ldur	x10, [x29, #-72]
   12d24:	ldr	x12, [sp, #32]
   12d28:	sub	x9, x27, #0x1
   12d2c:	add	x8, x8, x10
   12d30:	ldrb	w10, [x9]
   12d34:	ldrb	w11, [x8]
   12d38:	cmp	w10, w11
   12d3c:	b.ne	12d78 <ZSTD_endStream@@Base+0x4e24>  // b.any
   12d40:	add	x28, x28, #0x1
   12d44:	cmp	x9, x22
   12d48:	sub	x10, x9, #0x1
   12d4c:	b.ls	12d60 <ZSTD_endStream@@Base+0x4e0c>  // b.plast
   12d50:	cmp	x8, x12
   12d54:	sub	x8, x8, #0x1
   12d58:	mov	x9, x10
   12d5c:	b.hi	12d30 <ZSTD_endStream@@Base+0x4ddc>  // b.pmore
   12d60:	add	x26, x10, #0x1
   12d64:	b	12d7c <ZSTD_endStream@@Base+0x4e28>
   12d68:	mov	x28, x13
   12d6c:	mov	x26, x27
   12d70:	b	12d7c <ZSTD_endStream@@Base+0x4e28>
   12d74:	mov	x28, x13
   12d78:	add	x26, x9, #0x1
   12d7c:	ldur	x3, [x29, #-56]
   12d80:	ldr	x0, [x21, #24]
   12d84:	sub	x27, x26, x22
   12d88:	cmp	x26, x3
   12d8c:	b.ls	12da0 <ZSTD_endStream@@Base+0x4e4c>  // b.plast
   12d90:	mov	x1, x22
   12d94:	mov	x2, x26
   12d98:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   12d9c:	b	12e08 <ZSTD_endStream@@Base+0x4eb4>
   12da0:	mov	x1, x22
   12da4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12da8:	cmp	x27, #0x11
   12dac:	b.cc	12e08 <ZSTD_endStream@@Base+0x4eb4>  // b.lo, b.ul, b.last
   12db0:	ldr	x19, [x21, #24]
   12db4:	add	x1, x22, #0x10
   12db8:	add	x0, x19, #0x10
   12dbc:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12dc0:	add	x0, x19, #0x20
   12dc4:	add	x1, x22, #0x20
   12dc8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12dcc:	cmp	x27, #0x31
   12dd0:	b.lt	12e08 <ZSTD_endStream@@Base+0x4eb4>  // b.tstop
   12dd4:	add	x20, x19, x27
   12dd8:	add	x19, x19, #0x30
   12ddc:	add	x22, x22, #0x40
   12de0:	sub	x1, x22, #0x10
   12de4:	mov	x0, x19
   12de8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12dec:	add	x0, x19, #0x10
   12df0:	mov	x1, x22
   12df4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12df8:	add	x19, x19, #0x20
   12dfc:	cmp	x19, x20
   12e00:	add	x22, x22, #0x20
   12e04:	b.cc	12de0 <ZSTD_endStream@@Base+0x4e8c>  // b.lo, b.ul, b.last
   12e08:	ldr	x9, [x21, #24]
   12e0c:	mov	x13, x28
   12e10:	sub	x8, x28, #0x3
   12e14:	cmp	x27, #0x10, lsl #12
   12e18:	add	x9, x9, x27
   12e1c:	str	x9, [x21, #24]
   12e20:	b.cc	12e34 <ZSTD_endStream@@Base+0x4ee0>  // b.lo, b.ul, b.last
   12e24:	ldp	x10, x9, [x21]
   12e28:	sub	x9, x9, x10
   12e2c:	lsr	x9, x9, #3
   12e30:	stp	w24, w9, [x21, #72]
   12e34:	ldr	w12, [sp, #44]
   12e38:	ldr	x9, [x21, #8]
   12e3c:	cmp	x8, #0x10, lsl #12
   12e40:	add	w10, w12, #0x3
   12e44:	strh	w27, [x9, #4]
   12e48:	str	w10, [x9]
   12e4c:	b.cc	12e64 <ZSTD_endStream@@Base+0x4f10>  // b.lo, b.ul, b.last
   12e50:	ldp	x11, x10, [x21]
   12e54:	sub	x10, x10, x11
   12e58:	lsr	x10, x10, #3
   12e5c:	mov	w11, #0x2                   	// #2
   12e60:	stp	w11, w10, [x21, #72]
   12e64:	str	w23, [sp, #76]
   12e68:	mov	w23, w12
   12e6c:	strh	w8, [x9, #6]
   12e70:	add	x8, x9, #0x8
   12e74:	ldur	x9, [x29, #-24]
   12e78:	add	x22, x26, x13
   12e7c:	str	x8, [x21, #8]
   12e80:	str	x13, [sp, #64]
   12e84:	cmp	x22, x9
   12e88:	b.hi	129a0 <ZSTD_endStream@@Base+0x4a4c>  // b.pmore
   12e8c:	ldur	w8, [x29, #-60]
   12e90:	mov	w24, w25
   12e94:	ldur	x25, [x29, #-16]
   12e98:	ldur	w28, [x29, #-36]
   12e9c:	add	w20, w8, #0x2
   12ea0:	mov	w2, #0x8                   	// #8
   12ea4:	add	x19, x25, x20
   12ea8:	mov	x0, x19
   12eac:	mov	w1, w28
   12eb0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12eb4:	ldur	x27, [x29, #-32]
   12eb8:	mov	w2, #0x8                   	// #8
   12ebc:	mov	w1, w28
   12ec0:	str	w20, [x27, x0, lsl #2]
   12ec4:	sub	x0, x22, #0x2
   12ec8:	sub	w26, w0, w25
   12ecc:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12ed0:	str	w26, [x27, x0, lsl #2]
   12ed4:	mov	w2, #0x6                   	// #6
   12ed8:	mov	x0, x19
   12edc:	mov	w1, w24
   12ee0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12ee4:	ldur	x26, [x29, #-48]
   12ee8:	mov	w2, #0x6                   	// #6
   12eec:	str	w20, [x26, x0, lsl #2]
   12ef0:	sub	x0, x22, #0x1
   12ef4:	sub	w19, w0, w25
   12ef8:	mov	w25, w24
   12efc:	mov	w1, w25
   12f00:	mov	w24, #0x1                   	// #1
   12f04:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12f08:	ldr	w27, [sp, #76]
   12f0c:	str	w19, [x26, x0, lsl #2]
   12f10:	b	12f34 <ZSTD_endStream@@Base+0x4fe0>
   12f14:	add	x22, x22, x8
   12f18:	ldur	x8, [x29, #-24]
   12f1c:	strh	w19, [x9, #6]
   12f20:	add	x9, x9, #0x8
   12f24:	mov	w23, w28
   12f28:	cmp	x22, x8
   12f2c:	str	x9, [x21, #8]
   12f30:	b.hi	13008 <ZSTD_endStream@@Base+0x50b4>  // b.pmore
   12f34:	mov	x0, x22
   12f38:	mov	w28, w27
   12f3c:	mov	w27, w23
   12f40:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   12f44:	mov	w20, w28
   12f48:	mov	w19, w0
   12f4c:	sub	x0, x22, x20
   12f50:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   12f54:	cbz	w28, 12998 <ZSTD_endStream@@Base+0x4a44>
   12f58:	cmp	w19, w0
   12f5c:	b.ne	12998 <ZSTD_endStream@@Base+0x4a44>  // b.any
   12f60:	ldur	x2, [x29, #-8]
   12f64:	neg	x8, x20
   12f68:	add	x0, x22, #0x4
   12f6c:	add	x1, x0, x8
   12f70:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   12f74:	ldur	x8, [x29, #-16]
   12f78:	mov	x26, x0
   12f7c:	mov	w2, #0x6                   	// #6
   12f80:	mov	x0, x22
   12f84:	mov	w1, w25
   12f88:	sub	w19, w22, w8
   12f8c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12f90:	ldur	x8, [x29, #-48]
   12f94:	ldur	w1, [x29, #-36]
   12f98:	mov	w2, #0x8                   	// #8
   12f9c:	str	w19, [x8, x0, lsl #2]
   12fa0:	mov	x0, x22
   12fa4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   12fa8:	ldur	x8, [x29, #-32]
   12fac:	ldur	x3, [x29, #-56]
   12fb0:	mov	x1, x22
   12fb4:	str	w19, [x8, x0, lsl #2]
   12fb8:	ldr	x0, [x21, #24]
   12fbc:	cmp	x22, x3
   12fc0:	add	x19, x26, #0x1
   12fc4:	b.ls	12fd4 <ZSTD_endStream@@Base+0x5080>  // b.plast
   12fc8:	mov	x2, x22
   12fcc:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   12fd0:	b	12fd8 <ZSTD_endStream@@Base+0x5084>
   12fd4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   12fd8:	ldr	x9, [x21, #8]
   12fdc:	add	x8, x26, #0x4
   12fe0:	cmp	x19, #0x10, lsl #12
   12fe4:	strh	wzr, [x9, #4]
   12fe8:	str	w24, [x9]
   12fec:	b.cc	12f14 <ZSTD_endStream@@Base+0x4fc0>  // b.lo, b.ul, b.last
   12ff0:	ldp	x11, x10, [x21]
   12ff4:	sub	x10, x10, x11
   12ff8:	lsr	x10, x10, #3
   12ffc:	mov	w11, #0x2                   	// #2
   13000:	stp	w11, w10, [x21, #72]
   13004:	b	12f14 <ZSTD_endStream@@Base+0x4fc0>
   13008:	mov	w23, w28
   1300c:	str	w27, [sp, #76]
   13010:	b	129a0 <ZSTD_endStream@@Base+0x4a4c>
   13014:	str	x28, [sp, #64]
   13018:	b	129a4 <ZSTD_endStream@@Base+0x4a50>
   1301c:	mov	w8, #0x7                   	// #7
   13020:	mov	x27, x26
   13024:	b	12cd8 <ZSTD_endStream@@Base+0x4d84>
   13028:	add	x27, x27, #0x1
   1302c:	mov	w8, #0x7                   	// #7
   13030:	b	12cd8 <ZSTD_endStream@@Base+0x4d84>
   13034:	ldr	x8, [x0, #48]
   13038:	ldr	x15, [x0, #8]
   1303c:	ldr	w9, [x0, #184]
   13040:	add	x14, x22, x4
   13044:	stur	x8, [x29, #-32]
   13048:	ldp	w25, w8, [x0, #188]
   1304c:	mov	w24, #0x1                   	// #1
   13050:	sub	w12, w14, w15
   13054:	lsl	w9, w24, w9
   13058:	stur	w8, [x29, #-36]
   1305c:	ldr	x8, [x0, #64]
   13060:	ldr	w10, [x2]
   13064:	sub	x16, x14, #0x8
   13068:	stur	x8, [x29, #-48]
   1306c:	ldr	w8, [x0, #24]
   13070:	ldr	w11, [x2, #4]!
   13074:	stur	x16, [x29, #-24]
   13078:	stur	x14, [x29, #-8]
   1307c:	sub	w13, w12, w8
   13080:	sub	w12, w12, w9
   13084:	cmp	w13, w9
   13088:	csel	w8, w12, w8, hi  // hi = pmore
   1308c:	str	x8, [sp, #80]
   13090:	add	x8, x15, x8
   13094:	cmp	w22, w8
   13098:	cinc	x27, x22, eq  // eq = none
   1309c:	str	x8, [sp, #32]
   130a0:	sub	w8, w27, w8
   130a4:	cmp	w11, w8
   130a8:	csel	w9, w11, wzr, hi  // hi = pmore
   130ac:	csel	w11, wzr, w11, hi  // hi = pmore
   130b0:	cmp	w10, w8
   130b4:	csel	w8, w10, w9, hi  // hi = pmore
   130b8:	csel	w23, wzr, w10, hi  // hi = pmore
   130bc:	cmp	x27, x16
   130c0:	str	x2, [sp, #48]
   130c4:	str	w11, [sp, #76]
   130c8:	str	w8, [sp, #20]
   130cc:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   130d0:	sub	x8, x14, #0x20
   130d4:	stur	x8, [x29, #-56]
   130d8:	sub	x8, x15, #0x1
   130dc:	str	x8, [sp, #8]
   130e0:	stur	x15, [x29, #-16]
   130e4:	b	13100 <ZSTD_endStream@@Base+0x51ac>
   130e8:	str	w28, [sp, #76]
   130ec:	mov	w23, w27
   130f0:	mov	x27, x22
   130f4:	ldur	x8, [x29, #-24]
   130f8:	cmp	x27, x8
   130fc:	b.cs	13784 <ZSTD_endStream@@Base+0x5830>  // b.hs, b.nlast
   13100:	ldur	w1, [x29, #-36]
   13104:	mov	w2, #0x8                   	// #8
   13108:	mov	x0, x27
   1310c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13110:	mov	x19, x0
   13114:	mov	w2, #0x4                   	// #4
   13118:	mov	x0, x27
   1311c:	mov	w1, w25
   13120:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13124:	ldur	x8, [x29, #-16]
   13128:	ldur	x11, [x29, #-48]
   1312c:	ldur	x10, [x29, #-32]
   13130:	lsl	x9, x0, #2
   13134:	sub	w12, w27, w8
   13138:	lsl	x8, x19, #2
   1313c:	ldr	w13, [x11, x9]
   13140:	ldr	w20, [x10, x8]
   13144:	add	x26, x27, #0x1
   13148:	mov	w28, w23
   1314c:	sub	x0, x26, x28
   13150:	stur	x13, [x29, #-72]
   13154:	str	w12, [x11, x9]
   13158:	stur	w12, [x29, #-60]
   1315c:	str	w12, [x10, x8]
   13160:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13164:	mov	w19, w0
   13168:	mov	x0, x26
   1316c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13170:	cbz	w23, 131b8 <ZSTD_endStream@@Base+0x5264>
   13174:	cmp	w19, w0
   13178:	b.ne	131b8 <ZSTD_endStream@@Base+0x5264>  // b.any
   1317c:	ldur	x2, [x29, #-8]
   13180:	neg	x8, x28
   13184:	add	x0, x27, #0x5
   13188:	add	x1, x0, x8
   1318c:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   13190:	ldur	x3, [x29, #-56]
   13194:	mov	x27, x0
   13198:	ldr	x0, [x21, #24]
   1319c:	sub	x28, x26, x22
   131a0:	cmp	x26, x3
   131a4:	b.ls	13360 <ZSTD_endStream@@Base+0x540c>  // b.plast
   131a8:	mov	x1, x22
   131ac:	mov	x2, x26
   131b0:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   131b4:	b	133c8 <ZSTD_endStream@@Base+0x5474>
   131b8:	ldr	x8, [sp, #80]
   131bc:	cmp	w20, w8
   131c0:	b.ls	13258 <ZSTD_endStream@@Base+0x5304>  // b.plast
   131c4:	ldur	x8, [x29, #-16]
   131c8:	add	x28, x8, x20
   131cc:	mov	x0, x28
   131d0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   131d4:	mov	x19, x0
   131d8:	mov	x0, x27
   131dc:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   131e0:	cmp	x19, x0
   131e4:	b.ne	13258 <ZSTD_endStream@@Base+0x5304>  // b.any
   131e8:	ldur	x2, [x29, #-8]
   131ec:	add	x0, x27, #0x8
   131f0:	add	x1, x28, #0x8
   131f4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   131f8:	add	x13, x0, #0x8
   131fc:	cmp	x27, x22
   13200:	sub	w8, w27, w28
   13204:	str	w8, [sp, #44]
   13208:	b.ls	134b8 <ZSTD_endStream@@Base+0x5564>  // b.plast
   1320c:	ldr	x8, [sp, #8]
   13210:	ldr	x12, [sp, #32]
   13214:	sub	x9, x27, #0x1
   13218:	add	x8, x8, x20
   1321c:	ldrb	w10, [x9]
   13220:	ldrb	w11, [x8]
   13224:	cmp	w10, w11
   13228:	b.ne	134c4 <ZSTD_endStream@@Base+0x5570>  // b.any
   1322c:	add	x13, x13, #0x1
   13230:	cmp	x9, x22
   13234:	sub	x10, x9, #0x1
   13238:	b.ls	1324c <ZSTD_endStream@@Base+0x52f8>  // b.plast
   1323c:	cmp	x8, x12
   13240:	sub	x8, x8, #0x1
   13244:	mov	x9, x10
   13248:	b.hi	1321c <ZSTD_endStream@@Base+0x52c8>  // b.pmore
   1324c:	mov	x28, x13
   13250:	add	x26, x10, #0x1
   13254:	b	134cc <ZSTD_endStream@@Base+0x5578>
   13258:	ldr	x8, [sp, #80]
   1325c:	ldur	x9, [x29, #-72]
   13260:	cmp	w9, w8
   13264:	b.ls	13350 <ZSTD_endStream@@Base+0x53fc>  // b.plast
   13268:	ldur	x8, [x29, #-16]
   1326c:	add	x20, x8, x9
   13270:	mov	x0, x20
   13274:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13278:	mov	w19, w0
   1327c:	mov	x0, x27
   13280:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13284:	cmp	w19, w0
   13288:	b.ne	13350 <ZSTD_endStream@@Base+0x53fc>  // b.any
   1328c:	ldur	w8, [x29, #-60]
   13290:	ldur	w1, [x29, #-36]
   13294:	mov	w2, #0x8                   	// #8
   13298:	mov	x0, x26
   1329c:	str	x20, [sp, #24]
   132a0:	add	w19, w8, #0x1
   132a4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   132a8:	ldur	x9, [x29, #-32]
   132ac:	lsl	x8, x0, #2
   132b0:	ldr	x10, [sp, #80]
   132b4:	ldr	w20, [x9, x8]
   132b8:	str	w19, [x9, x8]
   132bc:	cmp	w20, w10
   132c0:	b.ls	13420 <ZSTD_endStream@@Base+0x54cc>  // b.plast
   132c4:	ldur	x8, [x29, #-16]
   132c8:	add	x19, x8, x20
   132cc:	mov	x0, x19
   132d0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   132d4:	mov	x28, x0
   132d8:	mov	x0, x26
   132dc:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   132e0:	cmp	x28, x0
   132e4:	b.ne	13420 <ZSTD_endStream@@Base+0x54cc>  // b.any
   132e8:	ldur	x2, [x29, #-8]
   132ec:	add	x0, x27, #0x9
   132f0:	add	x1, x19, #0x8
   132f4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   132f8:	add	x28, x0, #0x8
   132fc:	cmp	x26, x22
   13300:	sub	w8, w26, w19
   13304:	str	w8, [sp, #44]
   13308:	b.ls	1376c <ZSTD_endStream@@Base+0x5818>  // b.plast
   1330c:	ldr	x8, [sp, #8]
   13310:	add	x8, x8, x20
   13314:	ldrb	w9, [x27]
   13318:	ldrb	w10, [x8]
   1331c:	cmp	w9, w10
   13320:	b.ne	13778 <ZSTD_endStream@@Base+0x5824>  // b.any
   13324:	add	x28, x28, #0x1
   13328:	cmp	x27, x22
   1332c:	sub	x9, x27, #0x1
   13330:	b.ls	13348 <ZSTD_endStream@@Base+0x53f4>  // b.plast
   13334:	ldr	x10, [sp, #32]
   13338:	mov	x27, x9
   1333c:	cmp	x8, x10
   13340:	sub	x8, x8, #0x1
   13344:	b.hi	13314 <ZSTD_endStream@@Base+0x53c0>  // b.pmore
   13348:	add	x27, x9, #0x1
   1334c:	b	1377c <ZSTD_endStream@@Base+0x5828>
   13350:	sub	x8, x27, x22
   13354:	add	x8, x27, x8, asr #8
   13358:	add	x27, x8, #0x1
   1335c:	b	130f4 <ZSTD_endStream@@Base+0x51a0>
   13360:	mov	x1, x22
   13364:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13368:	cmp	x28, #0x11
   1336c:	b.cc	133c8 <ZSTD_endStream@@Base+0x5474>  // b.lo, b.ul, b.last
   13370:	ldr	x19, [x21, #24]
   13374:	add	x1, x22, #0x10
   13378:	add	x0, x19, #0x10
   1337c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13380:	add	x0, x19, #0x20
   13384:	add	x1, x22, #0x20
   13388:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1338c:	cmp	x28, #0x31
   13390:	b.lt	133c8 <ZSTD_endStream@@Base+0x5474>  // b.tstop
   13394:	add	x20, x19, x28
   13398:	add	x19, x19, #0x30
   1339c:	add	x22, x22, #0x40
   133a0:	sub	x1, x22, #0x10
   133a4:	mov	x0, x19
   133a8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   133ac:	add	x0, x19, #0x10
   133b0:	mov	x1, x22
   133b4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   133b8:	add	x19, x19, #0x20
   133bc:	cmp	x19, x20
   133c0:	add	x22, x22, #0x20
   133c4:	b.cc	133a0 <ZSTD_endStream@@Base+0x544c>  // b.lo, b.ul, b.last
   133c8:	ldr	x9, [x21, #24]
   133cc:	add	x13, x27, #0x4
   133d0:	add	x8, x27, #0x1
   133d4:	cmp	x28, #0x10, lsl #12
   133d8:	add	x9, x9, x28
   133dc:	str	x9, [x21, #24]
   133e0:	b.cc	133f4 <ZSTD_endStream@@Base+0x54a0>  // b.lo, b.ul, b.last
   133e4:	ldp	x10, x9, [x21]
   133e8:	sub	x9, x9, x10
   133ec:	lsr	x9, x9, #3
   133f0:	stp	w24, w9, [x21, #72]
   133f4:	ldr	x9, [x21, #8]
   133f8:	cmp	x8, #0x10, lsl #12
   133fc:	strh	w28, [x9, #4]
   13400:	str	w24, [x9]
   13404:	b.cc	135bc <ZSTD_endStream@@Base+0x5668>  // b.lo, b.ul, b.last
   13408:	ldp	x11, x10, [x21]
   1340c:	sub	x10, x10, x11
   13410:	lsr	x10, x10, #3
   13414:	mov	w11, #0x2                   	// #2
   13418:	stp	w11, w10, [x21, #72]
   1341c:	b	135bc <ZSTD_endStream@@Base+0x5668>
   13420:	ldr	x28, [sp, #64]
   13424:	mov	w8, wzr
   13428:	cmp	w8, #0x7
   1342c:	b.eq	134bc <ZSTD_endStream@@Base+0x5568>  // b.none
   13430:	cbnz	w8, 13764 <ZSTD_endStream@@Base+0x5810>
   13434:	ldr	x19, [sp, #24]
   13438:	ldur	x2, [x29, #-8]
   1343c:	add	x0, x27, #0x4
   13440:	add	x1, x19, #0x4
   13444:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   13448:	ldr	x8, [sp, #80]
   1344c:	ldur	x9, [x29, #-72]
   13450:	add	x28, x0, #0x4
   13454:	cmp	w9, w8
   13458:	sub	w8, w27, w19
   1345c:	str	w8, [sp, #44]
   13460:	b.ls	134bc <ZSTD_endStream@@Base+0x5568>  // b.plast
   13464:	cmp	x27, x22
   13468:	b.ls	134bc <ZSTD_endStream@@Base+0x5568>  // b.plast
   1346c:	ldr	x8, [sp, #8]
   13470:	ldur	x10, [x29, #-72]
   13474:	ldr	x12, [sp, #32]
   13478:	sub	x9, x27, #0x1
   1347c:	add	x8, x8, x10
   13480:	ldrb	w10, [x9]
   13484:	ldrb	w11, [x8]
   13488:	cmp	w10, w11
   1348c:	b.ne	134c8 <ZSTD_endStream@@Base+0x5574>  // b.any
   13490:	add	x28, x28, #0x1
   13494:	cmp	x9, x22
   13498:	sub	x10, x9, #0x1
   1349c:	b.ls	134b0 <ZSTD_endStream@@Base+0x555c>  // b.plast
   134a0:	cmp	x8, x12
   134a4:	sub	x8, x8, #0x1
   134a8:	mov	x9, x10
   134ac:	b.hi	13480 <ZSTD_endStream@@Base+0x552c>  // b.pmore
   134b0:	add	x26, x10, #0x1
   134b4:	b	134cc <ZSTD_endStream@@Base+0x5578>
   134b8:	mov	x28, x13
   134bc:	mov	x26, x27
   134c0:	b	134cc <ZSTD_endStream@@Base+0x5578>
   134c4:	mov	x28, x13
   134c8:	add	x26, x9, #0x1
   134cc:	ldur	x3, [x29, #-56]
   134d0:	ldr	x0, [x21, #24]
   134d4:	sub	x27, x26, x22
   134d8:	cmp	x26, x3
   134dc:	b.ls	134f0 <ZSTD_endStream@@Base+0x559c>  // b.plast
   134e0:	mov	x1, x22
   134e4:	mov	x2, x26
   134e8:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   134ec:	b	13558 <ZSTD_endStream@@Base+0x5604>
   134f0:	mov	x1, x22
   134f4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   134f8:	cmp	x27, #0x11
   134fc:	b.cc	13558 <ZSTD_endStream@@Base+0x5604>  // b.lo, b.ul, b.last
   13500:	ldr	x19, [x21, #24]
   13504:	add	x1, x22, #0x10
   13508:	add	x0, x19, #0x10
   1350c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13510:	add	x0, x19, #0x20
   13514:	add	x1, x22, #0x20
   13518:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1351c:	cmp	x27, #0x31
   13520:	b.lt	13558 <ZSTD_endStream@@Base+0x5604>  // b.tstop
   13524:	add	x20, x19, x27
   13528:	add	x19, x19, #0x30
   1352c:	add	x22, x22, #0x40
   13530:	sub	x1, x22, #0x10
   13534:	mov	x0, x19
   13538:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1353c:	add	x0, x19, #0x10
   13540:	mov	x1, x22
   13544:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13548:	add	x19, x19, #0x20
   1354c:	cmp	x19, x20
   13550:	add	x22, x22, #0x20
   13554:	b.cc	13530 <ZSTD_endStream@@Base+0x55dc>  // b.lo, b.ul, b.last
   13558:	ldr	x9, [x21, #24]
   1355c:	mov	x13, x28
   13560:	sub	x8, x28, #0x3
   13564:	cmp	x27, #0x10, lsl #12
   13568:	add	x9, x9, x27
   1356c:	str	x9, [x21, #24]
   13570:	b.cc	13584 <ZSTD_endStream@@Base+0x5630>  // b.lo, b.ul, b.last
   13574:	ldp	x10, x9, [x21]
   13578:	sub	x9, x9, x10
   1357c:	lsr	x9, x9, #3
   13580:	stp	w24, w9, [x21, #72]
   13584:	ldr	w12, [sp, #44]
   13588:	ldr	x9, [x21, #8]
   1358c:	cmp	x8, #0x10, lsl #12
   13590:	add	w10, w12, #0x3
   13594:	strh	w27, [x9, #4]
   13598:	str	w10, [x9]
   1359c:	b.cc	135b4 <ZSTD_endStream@@Base+0x5660>  // b.lo, b.ul, b.last
   135a0:	ldp	x11, x10, [x21]
   135a4:	sub	x10, x10, x11
   135a8:	lsr	x10, x10, #3
   135ac:	mov	w11, #0x2                   	// #2
   135b0:	stp	w11, w10, [x21, #72]
   135b4:	str	w23, [sp, #76]
   135b8:	mov	w23, w12
   135bc:	strh	w8, [x9, #6]
   135c0:	add	x8, x9, #0x8
   135c4:	ldur	x9, [x29, #-24]
   135c8:	add	x22, x26, x13
   135cc:	str	x8, [x21, #8]
   135d0:	str	x13, [sp, #64]
   135d4:	cmp	x22, x9
   135d8:	b.hi	130f0 <ZSTD_endStream@@Base+0x519c>  // b.pmore
   135dc:	ldur	w8, [x29, #-60]
   135e0:	mov	w24, w25
   135e4:	ldur	x25, [x29, #-16]
   135e8:	ldur	w28, [x29, #-36]
   135ec:	add	w20, w8, #0x2
   135f0:	mov	w2, #0x8                   	// #8
   135f4:	add	x19, x25, x20
   135f8:	mov	x0, x19
   135fc:	mov	w1, w28
   13600:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13604:	ldur	x27, [x29, #-32]
   13608:	mov	w2, #0x8                   	// #8
   1360c:	mov	w1, w28
   13610:	str	w20, [x27, x0, lsl #2]
   13614:	sub	x0, x22, #0x2
   13618:	sub	w26, w0, w25
   1361c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13620:	str	w26, [x27, x0, lsl #2]
   13624:	mov	w2, #0x4                   	// #4
   13628:	mov	x0, x19
   1362c:	mov	w1, w24
   13630:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13634:	ldur	x26, [x29, #-48]
   13638:	mov	w2, #0x4                   	// #4
   1363c:	str	w20, [x26, x0, lsl #2]
   13640:	sub	x0, x22, #0x1
   13644:	sub	w19, w0, w25
   13648:	mov	w25, w24
   1364c:	mov	w1, w25
   13650:	mov	w24, #0x1                   	// #1
   13654:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13658:	ldr	w27, [sp, #76]
   1365c:	str	w19, [x26, x0, lsl #2]
   13660:	b	13684 <ZSTD_endStream@@Base+0x5730>
   13664:	add	x22, x22, x8
   13668:	ldur	x8, [x29, #-24]
   1366c:	strh	w19, [x9, #6]
   13670:	add	x9, x9, #0x8
   13674:	mov	w23, w28
   13678:	cmp	x22, x8
   1367c:	str	x9, [x21, #8]
   13680:	b.hi	13758 <ZSTD_endStream@@Base+0x5804>  // b.pmore
   13684:	mov	x0, x22
   13688:	mov	w28, w27
   1368c:	mov	w27, w23
   13690:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13694:	mov	w20, w28
   13698:	mov	w19, w0
   1369c:	sub	x0, x22, x20
   136a0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   136a4:	cbz	w28, 130e8 <ZSTD_endStream@@Base+0x5194>
   136a8:	cmp	w19, w0
   136ac:	b.ne	130e8 <ZSTD_endStream@@Base+0x5194>  // b.any
   136b0:	ldur	x2, [x29, #-8]
   136b4:	neg	x8, x20
   136b8:	add	x0, x22, #0x4
   136bc:	add	x1, x0, x8
   136c0:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   136c4:	ldur	x8, [x29, #-16]
   136c8:	mov	x26, x0
   136cc:	mov	w2, #0x4                   	// #4
   136d0:	mov	x0, x22
   136d4:	mov	w1, w25
   136d8:	sub	w19, w22, w8
   136dc:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   136e0:	ldur	x8, [x29, #-48]
   136e4:	ldur	w1, [x29, #-36]
   136e8:	mov	w2, #0x8                   	// #8
   136ec:	str	w19, [x8, x0, lsl #2]
   136f0:	mov	x0, x22
   136f4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   136f8:	ldur	x8, [x29, #-32]
   136fc:	ldur	x3, [x29, #-56]
   13700:	mov	x1, x22
   13704:	str	w19, [x8, x0, lsl #2]
   13708:	ldr	x0, [x21, #24]
   1370c:	cmp	x22, x3
   13710:	add	x19, x26, #0x1
   13714:	b.ls	13724 <ZSTD_endStream@@Base+0x57d0>  // b.plast
   13718:	mov	x2, x22
   1371c:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   13720:	b	13728 <ZSTD_endStream@@Base+0x57d4>
   13724:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13728:	ldr	x9, [x21, #8]
   1372c:	add	x8, x26, #0x4
   13730:	cmp	x19, #0x10, lsl #12
   13734:	strh	wzr, [x9, #4]
   13738:	str	w24, [x9]
   1373c:	b.cc	13664 <ZSTD_endStream@@Base+0x5710>  // b.lo, b.ul, b.last
   13740:	ldp	x11, x10, [x21]
   13744:	sub	x10, x10, x11
   13748:	lsr	x10, x10, #3
   1374c:	mov	w11, #0x2                   	// #2
   13750:	stp	w11, w10, [x21, #72]
   13754:	b	13664 <ZSTD_endStream@@Base+0x5710>
   13758:	mov	w23, w28
   1375c:	str	w27, [sp, #76]
   13760:	b	130f0 <ZSTD_endStream@@Base+0x519c>
   13764:	str	x28, [sp, #64]
   13768:	b	130f4 <ZSTD_endStream@@Base+0x51a0>
   1376c:	mov	w8, #0x7                   	// #7
   13770:	mov	x27, x26
   13774:	b	13428 <ZSTD_endStream@@Base+0x54d4>
   13778:	add	x27, x27, #0x1
   1377c:	mov	w8, #0x7                   	// #7
   13780:	b	13428 <ZSTD_endStream@@Base+0x54d4>
   13784:	ldr	w10, [sp, #20]
   13788:	ldr	w11, [sp, #76]
   1378c:	ldr	x9, [sp, #56]
   13790:	cmp	w23, #0x0
   13794:	csel	w8, w10, w23, eq  // eq = none
   13798:	cmp	w11, #0x0
   1379c:	str	w8, [x9]
   137a0:	csel	w8, w10, w11, eq  // eq = none
   137a4:	ldr	x10, [sp, #48]
   137a8:	ldur	x9, [x29, #-8]
   137ac:	str	w8, [x10]
   137b0:	sub	x0, x9, x22
   137b4:	ldp	x20, x19, [sp, #240]
   137b8:	ldp	x22, x21, [sp, #224]
   137bc:	ldp	x24, x23, [sp, #208]
   137c0:	ldp	x26, x25, [sp, #192]
   137c4:	ldp	x28, x27, [sp, #176]
   137c8:	ldp	x29, x30, [sp, #160]
   137cc:	add	sp, sp, #0x100
   137d0:	ret
   137d4:	sub	sp, sp, #0x140
   137d8:	stp	x29, x30, [sp, #224]
   137dc:	stp	x28, x27, [sp, #240]
   137e0:	stp	x26, x25, [sp, #256]
   137e4:	stp	x24, x23, [sp, #272]
   137e8:	stp	x22, x21, [sp, #288]
   137ec:	stp	x20, x19, [sp, #304]
   137f0:	ldr	w8, [x0, #200]
   137f4:	add	x29, sp, #0xe0
   137f8:	mov	x22, x3
   137fc:	stur	x1, [x29, #-72]
   13800:	cmp	w8, #0x5
   13804:	str	x2, [sp, #40]
   13808:	b.eq	143a8 <ZSTD_endStream@@Base+0x6454>  // b.none
   1380c:	cmp	w8, #0x6
   13810:	b.eq	14f34 <ZSTD_endStream@@Base+0x6fe0>  // b.none
   13814:	cmp	w8, #0x7
   13818:	b.ne	15ac0 <ZSTD_endStream@@Base+0x7b6c>  // b.any
   1381c:	ldr	w8, [x2]
   13820:	ldr	x14, [x0, #8]
   13824:	ldr	w9, [x0, #24]
   13828:	ldr	w10, [x0, #184]
   1382c:	stur	w8, [x29, #-52]
   13830:	ldr	w8, [x2, #4]
   13834:	add	x13, x22, x4
   13838:	mov	w12, #0x1                   	// #1
   1383c:	sub	w11, w13, w14
   13840:	str	w8, [sp, #88]
   13844:	ldr	x8, [x0, #176]
   13848:	lsl	w10, w12, w10
   1384c:	sub	w12, w11, w9
   13850:	sub	w11, w11, w10
   13854:	ldr	w16, [x8, #24]
   13858:	ldp	x18, x17, [x8]
   1385c:	cmp	w12, w10
   13860:	csel	w9, w11, w9, hi  // hi = pmore
   13864:	stur	x9, [x29, #-16]
   13868:	add	x9, x14, x9
   1386c:	stur	x9, [x29, #-64]
   13870:	sub	w9, w22, w9
   13874:	add	x10, x17, x16
   13878:	add	w9, w18, w9
   1387c:	cmp	w9, w10
   13880:	sub	x15, x13, #0x8
   13884:	cinc	x28, x22, eq  // eq = none
   13888:	cmp	x28, x15
   1388c:	str	x16, [sp, #48]
   13890:	str	x10, [sp, #24]
   13894:	stur	x15, [x29, #-40]
   13898:	stur	x13, [x29, #-24]
   1389c:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   138a0:	ldr	x9, [x0, #48]
   138a4:	str	x18, [sp, #112]
   138a8:	sub	x27, x13, #0x20
   138ac:	stur	x9, [x29, #-80]
   138b0:	ldr	x9, [x0, #64]
   138b4:	stur	x9, [x29, #-96]
   138b8:	ldr	w9, [x0, #192]
   138bc:	stur	w9, [x29, #-84]
   138c0:	ldr	w9, [x0, #188]
   138c4:	stur	w9, [x29, #-100]
   138c8:	ldr	x9, [x8, #48]
   138cc:	str	x9, [sp, #32]
   138d0:	ldr	x9, [x8, #64]
   138d4:	str	x9, [sp, #16]
   138d8:	ldp	w8, w10, [x8, #188]
   138dc:	sub	w9, w17, w18
   138e0:	str	x17, [sp, #104]
   138e4:	stur	x14, [x29, #-32]
   138e8:	str	w8, [sp, #64]
   138ec:	sub	x8, x17, #0x1
   138f0:	str	x8, [sp]
   138f4:	ldur	x8, [x29, #-16]
   138f8:	str	w10, [sp, #84]
   138fc:	str	x27, [sp, #96]
   13900:	add	w8, w8, w9
   13904:	str	w8, [sp, #92]
   13908:	sub	x8, x17, w8, uxtw
   1390c:	stur	x8, [x29, #-48]
   13910:	sub	x8, x14, #0x1
   13914:	str	x8, [sp, #8]
   13918:	b	13930 <ZSTD_endStream@@Base+0x59dc>
   1391c:	str	w25, [sp, #88]
   13920:	mov	x28, x22
   13924:	ldur	x8, [x29, #-40]
   13928:	cmp	x28, x8
   1392c:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   13930:	ldur	w1, [x29, #-84]
   13934:	mov	w2, #0x8                   	// #8
   13938:	mov	x0, x28
   1393c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13940:	ldur	w1, [x29, #-100]
   13944:	mov	x26, x0
   13948:	mov	w2, #0x7                   	// #7
   1394c:	mov	x0, x28
   13950:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13954:	ldr	w1, [sp, #84]
   13958:	mov	x27, x0
   1395c:	mov	w2, #0x8                   	// #8
   13960:	mov	x0, x28
   13964:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13968:	ldr	w1, [sp, #64]
   1396c:	mov	x19, x0
   13970:	mov	w2, #0x7                   	// #7
   13974:	mov	x0, x28
   13978:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   1397c:	ldur	x10, [x29, #-32]
   13980:	ldur	x13, [x29, #-80]
   13984:	ldur	x11, [x29, #-96]
   13988:	lsl	x8, x26, #2
   1398c:	sub	w14, w28, w10
   13990:	lsl	x9, x27, #2
   13994:	ldr	w27, [x13, x8]
   13998:	ldr	w24, [x11, x9]
   1399c:	str	w14, [x11, x9]
   139a0:	ldur	w9, [x29, #-52]
   139a4:	add	w12, w14, #0x1
   139a8:	str	w12, [sp, #68]
   139ac:	ldur	x15, [x29, #-16]
   139b0:	sub	w20, w12, w9
   139b4:	ldr	w9, [sp, #92]
   139b8:	ldr	x12, [sp, #104]
   139bc:	mvn	w11, w20
   139c0:	add	x10, x10, x20
   139c4:	sub	w9, w20, w9
   139c8:	cmp	w20, w15
   139cc:	add	x9, x12, x9
   139d0:	add	w11, w15, w11
   139d4:	csel	x26, x9, x10, cc  // cc = lo, ul, last
   139d8:	cmp	w11, #0x3
   139dc:	str	x0, [sp, #72]
   139e0:	stur	w14, [x29, #-104]
   139e4:	str	w14, [x13, x8]
   139e8:	b.cc	13a64 <ZSTD_endStream@@Base+0x5b10>  // b.lo, b.ul, b.last
   139ec:	mov	x0, x26
   139f0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   139f4:	add	x23, x28, #0x1
   139f8:	mov	w25, w0
   139fc:	mov	x0, x23
   13a00:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13a04:	cmp	w25, w0
   13a08:	b.ne	13a64 <ZSTD_endStream@@Base+0x5b10>  // b.any
   13a0c:	ldp	x2, x8, [x29, #-24]
   13a10:	ldur	x4, [x29, #-64]
   13a14:	add	x0, x28, #0x5
   13a18:	add	x1, x26, #0x4
   13a1c:	cmp	w20, w8
   13a20:	ldr	x8, [sp, #112]
   13a24:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   13a28:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   13a2c:	ldur	x28, [x29, #-72]
   13a30:	ldr	x27, [sp, #96]
   13a34:	mov	x25, x0
   13a38:	sub	x26, x23, x22
   13a3c:	ldr	x0, [x28, #24]
   13a40:	cmp	x23, x27
   13a44:	b.ls	13d4c <ZSTD_endStream@@Base+0x5df8>  // b.plast
   13a48:	mov	x1, x22
   13a4c:	mov	x2, x23
   13a50:	mov	x3, x27
   13a54:	mov	x20, x23
   13a58:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   13a5c:	ldur	w23, [x29, #-104]
   13a60:	b	13dbc <ZSTD_endStream@@Base+0x5e68>
   13a64:	ldur	x8, [x29, #-16]
   13a68:	cmp	w27, w8
   13a6c:	b.ls	13b0c <ZSTD_endStream@@Base+0x5bb8>  // b.plast
   13a70:	ldur	x8, [x29, #-32]
   13a74:	add	x19, x8, x27
   13a78:	mov	x0, x19
   13a7c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13a80:	mov	x25, x0
   13a84:	mov	x0, x28
   13a88:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13a8c:	cmp	x25, x0
   13a90:	b.ne	13be4 <ZSTD_endStream@@Base+0x5c90>  // b.any
   13a94:	ldur	x2, [x29, #-24]
   13a98:	ldur	w20, [x29, #-104]
   13a9c:	add	x0, x28, #0x8
   13aa0:	add	x1, x19, #0x8
   13aa4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   13aa8:	add	x21, x0, #0x8
   13aac:	cmp	x28, x22
   13ab0:	sub	w8, w28, w19
   13ab4:	str	w8, [sp, #60]
   13ab8:	b.ls	13e48 <ZSTD_endStream@@Base+0x5ef4>  // b.plast
   13abc:	ldr	x8, [sp, #8]
   13ac0:	sub	x9, x28, #0x1
   13ac4:	ldur	x28, [x29, #-72]
   13ac8:	add	x8, x8, x27
   13acc:	ldr	x27, [sp, #96]
   13ad0:	ldrb	w10, [x9]
   13ad4:	ldrb	w11, [x8]
   13ad8:	cmp	w10, w11
   13adc:	b.ne	140c0 <ZSTD_endStream@@Base+0x616c>  // b.any
   13ae0:	add	x21, x21, #0x1
   13ae4:	cmp	x9, x22
   13ae8:	sub	x10, x9, #0x1
   13aec:	b.ls	13b04 <ZSTD_endStream@@Base+0x5bb0>  // b.plast
   13af0:	ldur	x9, [x29, #-64]
   13af4:	cmp	x8, x9
   13af8:	sub	x8, x8, #0x1
   13afc:	mov	x9, x10
   13b00:	b.hi	13ad0 <ZSTD_endStream@@Base+0x5b7c>  // b.pmore
   13b04:	add	x26, x10, #0x1
   13b08:	b	140c4 <ZSTD_endStream@@Base+0x6170>
   13b0c:	ldr	x8, [sp, #32]
   13b10:	ldr	w26, [x8, x19, lsl #2]
   13b14:	ldr	x8, [sp, #48]
   13b18:	cmp	w26, w8
   13b1c:	b.ls	13bc8 <ZSTD_endStream@@Base+0x5c74>  // b.plast
   13b20:	ldr	x8, [sp, #104]
   13b24:	add	x19, x8, x26
   13b28:	mov	x0, x19
   13b2c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13b30:	mov	x25, x0
   13b34:	mov	x0, x28
   13b38:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13b3c:	cmp	x25, x0
   13b40:	b.ne	13bc8 <ZSTD_endStream@@Base+0x5c74>  // b.any
   13b44:	ldur	x2, [x29, #-24]
   13b48:	ldr	x3, [sp, #112]
   13b4c:	ldur	x4, [x29, #-64]
   13b50:	add	x0, x28, #0x8
   13b54:	add	x1, x19, #0x8
   13b58:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   13b5c:	ldur	w23, [x29, #-104]
   13b60:	ldr	w9, [sp, #92]
   13b64:	ldr	x27, [sp, #96]
   13b68:	add	x21, x0, #0x8
   13b6c:	sub	w8, w23, w26
   13b70:	cmp	x28, x22
   13b74:	sub	w8, w8, w9
   13b78:	str	w8, [sp, #60]
   13b7c:	b.ls	13f40 <ZSTD_endStream@@Base+0x5fec>  // b.plast
   13b80:	ldr	x8, [sp]
   13b84:	ldr	x12, [sp, #24]
   13b88:	sub	x9, x28, #0x1
   13b8c:	add	x8, x8, x26
   13b90:	ldrb	w10, [x9]
   13b94:	ldrb	w11, [x8]
   13b98:	cmp	w10, w11
   13b9c:	b.ne	13f3c <ZSTD_endStream@@Base+0x5fe8>  // b.any
   13ba0:	add	x21, x21, #0x1
   13ba4:	cmp	x9, x22
   13ba8:	sub	x10, x9, #0x1
   13bac:	b.ls	13bc0 <ZSTD_endStream@@Base+0x5c6c>  // b.plast
   13bb0:	cmp	x8, x12
   13bb4:	sub	x8, x8, #0x1
   13bb8:	mov	x9, x10
   13bbc:	b.hi	13b90 <ZSTD_endStream@@Base+0x5c3c>  // b.pmore
   13bc0:	add	x28, x10, #0x1
   13bc4:	b	13f40 <ZSTD_endStream@@Base+0x5fec>
   13bc8:	ldr	x27, [sp, #96]
   13bcc:	ldur	w23, [x29, #-104]
   13bd0:	mov	w8, wzr
   13bd4:	cmp	w8, #0x7
   13bd8:	b.eq	13f4c <ZSTD_endStream@@Base+0x5ff8>  // b.none
   13bdc:	cbz	w8, 13be8 <ZSTD_endStream@@Base+0x5c94>
   13be0:	b	13924 <ZSTD_endStream@@Base+0x59d0>
   13be4:	ldur	w23, [x29, #-104]
   13be8:	ldur	x8, [x29, #-16]
   13bec:	cmp	w24, w8
   13bf0:	b.ls	13c1c <ZSTD_endStream@@Base+0x5cc8>  // b.plast
   13bf4:	ldur	x8, [x29, #-32]
   13bf8:	add	x26, x8, x24
   13bfc:	mov	x0, x26
   13c00:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13c04:	mov	w19, w0
   13c08:	mov	x0, x28
   13c0c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13c10:	cmp	w19, w0
   13c14:	b.eq	13c6c <ZSTD_endStream@@Base+0x5d18>  // b.none
   13c18:	b	13e38 <ZSTD_endStream@@Base+0x5ee4>
   13c1c:	ldr	x8, [sp, #16]
   13c20:	ldr	x9, [sp, #72]
   13c24:	ldr	w25, [x8, x9, lsl #2]
   13c28:	ldr	x8, [sp, #48]
   13c2c:	cmp	w25, w8
   13c30:	ldr	x8, [sp, #104]
   13c34:	add	x26, x8, x25
   13c38:	b.ls	13e28 <ZSTD_endStream@@Base+0x5ed4>  // b.plast
   13c3c:	mov	x0, x26
   13c40:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13c44:	mov	w19, w0
   13c48:	mov	x0, x28
   13c4c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   13c50:	cmp	w19, w0
   13c54:	b.ne	13e28 <ZSTD_endStream@@Base+0x5ed4>  // b.any
   13c58:	mov	w8, #0xa                   	// #10
   13c5c:	cmp	w8, #0xa
   13c60:	b.ne	13e34 <ZSTD_endStream@@Base+0x5ee0>  // b.any
   13c64:	ldr	w8, [sp, #92]
   13c68:	add	w24, w25, w8
   13c6c:	ldur	w1, [x29, #-84]
   13c70:	add	x20, x28, #0x1
   13c74:	mov	w2, #0x8                   	// #8
   13c78:	mov	x0, x20
   13c7c:	str	x24, [sp, #72]
   13c80:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13c84:	ldr	w1, [sp, #84]
   13c88:	mov	x19, x0
   13c8c:	mov	w2, #0x8                   	// #8
   13c90:	mov	x0, x20
   13c94:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   13c98:	ldur	x9, [x29, #-80]
   13c9c:	lsl	x8, x19, #2
   13ca0:	ldur	x10, [x29, #-16]
   13ca4:	ldr	w24, [sp, #68]
   13ca8:	ldr	w27, [x9, x8]
   13cac:	str	w24, [x9, x8]
   13cb0:	cmp	w27, w10
   13cb4:	b.ls	13e58 <ZSTD_endStream@@Base+0x5f04>  // b.plast
   13cb8:	ldur	x8, [x29, #-32]
   13cbc:	add	x19, x8, x27
   13cc0:	mov	x0, x19
   13cc4:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13cc8:	mov	x25, x0
   13ccc:	mov	x0, x20
   13cd0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13cd4:	cmp	x25, x0
   13cd8:	b.ne	13f28 <ZSTD_endStream@@Base+0x5fd4>  // b.any
   13cdc:	ldur	x2, [x29, #-24]
   13ce0:	add	x0, x28, #0x9
   13ce4:	add	x1, x19, #0x8
   13ce8:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   13cec:	add	x21, x0, #0x8
   13cf0:	cmp	x20, x22
   13cf4:	sub	w8, w20, w19
   13cf8:	str	w8, [sp, #60]
   13cfc:	b.ls	13f5c <ZSTD_endStream@@Base+0x6008>  // b.plast
   13d00:	ldr	x8, [sp, #8]
   13d04:	ldr	x20, [sp, #72]
   13d08:	add	x8, x8, x27
   13d0c:	ldr	x27, [sp, #96]
   13d10:	ldrb	w9, [x28]
   13d14:	ldrb	w10, [x8]
   13d18:	cmp	w9, w10
   13d1c:	b.ne	13f70 <ZSTD_endStream@@Base+0x601c>  // b.any
   13d20:	add	x21, x21, #0x1
   13d24:	cmp	x28, x22
   13d28:	sub	x9, x28, #0x1
   13d2c:	b.ls	13d44 <ZSTD_endStream@@Base+0x5df0>  // b.plast
   13d30:	ldur	x10, [x29, #-64]
   13d34:	mov	x28, x9
   13d38:	cmp	x8, x10
   13d3c:	sub	x8, x8, #0x1
   13d40:	b.hi	13d10 <ZSTD_endStream@@Base+0x5dbc>  // b.pmore
   13d44:	add	x19, x9, #0x1
   13d48:	b	13f74 <ZSTD_endStream@@Base+0x6020>
   13d4c:	mov	x1, x22
   13d50:	mov	x20, x23
   13d54:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13d58:	ldur	w23, [x29, #-104]
   13d5c:	cmp	x26, #0x11
   13d60:	b.cc	13dbc <ZSTD_endStream@@Base+0x5e68>  // b.lo, b.ul, b.last
   13d64:	ldr	x19, [x28, #24]
   13d68:	add	x1, x22, #0x10
   13d6c:	add	x0, x19, #0x10
   13d70:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13d74:	add	x0, x19, #0x20
   13d78:	add	x1, x22, #0x20
   13d7c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13d80:	cmp	x26, #0x31
   13d84:	b.lt	13dbc <ZSTD_endStream@@Base+0x5e68>  // b.tstop
   13d88:	add	x21, x19, x26
   13d8c:	add	x19, x19, #0x30
   13d90:	add	x22, x22, #0x40
   13d94:	sub	x1, x22, #0x10
   13d98:	mov	x0, x19
   13d9c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13da0:	add	x0, x19, #0x10
   13da4:	mov	x1, x22
   13da8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   13dac:	add	x19, x19, #0x20
   13db0:	cmp	x19, x21
   13db4:	add	x22, x22, #0x20
   13db8:	b.cc	13d94 <ZSTD_endStream@@Base+0x5e40>  // b.lo, b.ul, b.last
   13dbc:	ldr	x9, [x28, #24]
   13dc0:	add	x21, x25, #0x4
   13dc4:	add	x8, x25, #0x1
   13dc8:	cmp	x26, #0x10, lsl #12
   13dcc:	add	x9, x9, x26
   13dd0:	str	x9, [x28, #24]
   13dd4:	b.cc	13dec <ZSTD_endStream@@Base+0x5e98>  // b.lo, b.ul, b.last
   13dd8:	ldp	x10, x9, [x28]
   13ddc:	sub	x9, x9, x10
   13de0:	lsr	x9, x9, #3
   13de4:	mov	w10, #0x1                   	// #1
   13de8:	stp	w10, w9, [x28, #72]
   13dec:	ldr	x9, [x28, #8]
   13df0:	cmp	x8, #0x10, lsl #12
   13df4:	mov	w10, #0x1                   	// #1
   13df8:	strh	w26, [x9, #4]
   13dfc:	str	w10, [x9]
   13e00:	b.cc	13e20 <ZSTD_endStream@@Base+0x5ecc>  // b.lo, b.ul, b.last
   13e04:	ldp	x11, x10, [x28]
   13e08:	mov	x26, x20
   13e0c:	sub	x10, x10, x11
   13e10:	lsr	x10, x10, #3
   13e14:	mov	w11, #0x2                   	// #2
   13e18:	stp	w11, w10, [x28, #72]
   13e1c:	b	141bc <ZSTD_endStream@@Base+0x6268>
   13e20:	mov	x26, x20
   13e24:	b	141bc <ZSTD_endStream@@Base+0x6268>
   13e28:	mov	w8, wzr
   13e2c:	cmp	w8, #0xa
   13e30:	b.eq	13c64 <ZSTD_endStream@@Base+0x5d10>  // b.none
   13e34:	cbnz	w8, 13924 <ZSTD_endStream@@Base+0x59d0>
   13e38:	sub	x8, x28, x22
   13e3c:	add	x8, x28, x8, asr #8
   13e40:	add	x28, x8, #0x1
   13e44:	b	13924 <ZSTD_endStream@@Base+0x59d0>
   13e48:	mov	x26, x28
   13e4c:	ldur	x28, [x29, #-72]
   13e50:	ldr	x27, [sp, #96]
   13e54:	b	140c4 <ZSTD_endStream@@Base+0x6170>
   13e58:	ldr	x8, [sp, #32]
   13e5c:	ldr	w27, [x8, x0, lsl #2]
   13e60:	ldr	x8, [sp, #48]
   13e64:	cmp	w27, w8
   13e68:	b.ls	13f10 <ZSTD_endStream@@Base+0x5fbc>  // b.plast
   13e6c:	ldr	x8, [sp, #104]
   13e70:	add	x19, x8, x27
   13e74:	mov	x0, x19
   13e78:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13e7c:	mov	x25, x0
   13e80:	mov	x0, x20
   13e84:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   13e88:	cmp	x25, x0
   13e8c:	b.ne	13f10 <ZSTD_endStream@@Base+0x5fbc>  // b.any
   13e90:	ldur	x2, [x29, #-24]
   13e94:	ldr	x3, [sp, #112]
   13e98:	ldur	x4, [x29, #-64]
   13e9c:	add	x0, x28, #0x9
   13ea0:	add	x1, x19, #0x8
   13ea4:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   13ea8:	ldr	w9, [sp, #92]
   13eac:	sub	w8, w24, w27
   13eb0:	add	x21, x0, #0x8
   13eb4:	cmp	x20, x22
   13eb8:	sub	w8, w8, w9
   13ebc:	str	w8, [sp, #60]
   13ec0:	b.ls	13f7c <ZSTD_endStream@@Base+0x6028>  // b.plast
   13ec4:	ldr	x8, [sp]
   13ec8:	ldr	x20, [sp, #72]
   13ecc:	add	x8, x8, x27
   13ed0:	ldr	x27, [sp, #96]
   13ed4:	ldrb	w9, [x28]
   13ed8:	ldrb	w10, [x8]
   13edc:	cmp	w9, w10
   13ee0:	b.ne	13f88 <ZSTD_endStream@@Base+0x6034>  // b.any
   13ee4:	add	x21, x21, #0x1
   13ee8:	cmp	x28, x22
   13eec:	sub	x9, x28, #0x1
   13ef0:	b.ls	13f08 <ZSTD_endStream@@Base+0x5fb4>  // b.plast
   13ef4:	ldr	x10, [sp, #24]
   13ef8:	mov	x28, x9
   13efc:	cmp	x8, x10
   13f00:	sub	x8, x8, #0x1
   13f04:	b.hi	13ed4 <ZSTD_endStream@@Base+0x5f80>  // b.pmore
   13f08:	add	x28, x9, #0x1
   13f0c:	b	13f8c <ZSTD_endStream@@Base+0x6038>
   13f10:	mov	w8, wzr
   13f14:	ldr	x27, [sp, #96]
   13f18:	ldr	x20, [sp, #72]
   13f1c:	mov	x19, x28
   13f20:	cbnz	w8, 13f98 <ZSTD_endStream@@Base+0x6044>
   13f24:	b	13f30 <ZSTD_endStream@@Base+0x5fdc>
   13f28:	ldr	x27, [sp, #96]
   13f2c:	ldr	x20, [sp, #72]
   13f30:	mov	w8, wzr
   13f34:	mov	x19, x28
   13f38:	b	13f98 <ZSTD_endStream@@Base+0x6044>
   13f3c:	add	x28, x9, #0x1
   13f40:	mov	w8, #0x7                   	// #7
   13f44:	cmp	w8, #0x7
   13f48:	b.ne	13bdc <ZSTD_endStream@@Base+0x5c88>  // b.any
   13f4c:	mov	x26, x28
   13f50:	ldur	x28, [x29, #-72]
   13f54:	mov	w20, w23
   13f58:	b	140c4 <ZSTD_endStream@@Base+0x6170>
   13f5c:	mov	x19, x20
   13f60:	ldr	x27, [sp, #96]
   13f64:	ldr	x20, [sp, #72]
   13f68:	mov	w8, #0x7                   	// #7
   13f6c:	b	13f98 <ZSTD_endStream@@Base+0x6044>
   13f70:	add	x19, x28, #0x1
   13f74:	mov	w8, #0x7                   	// #7
   13f78:	b	13f98 <ZSTD_endStream@@Base+0x6044>
   13f7c:	mov	w8, #0x7                   	// #7
   13f80:	mov	x28, x20
   13f84:	b	13f14 <ZSTD_endStream@@Base+0x5fc0>
   13f88:	add	x28, x28, #0x1
   13f8c:	mov	w8, #0x7                   	// #7
   13f90:	mov	x19, x28
   13f94:	cbz	w8, 13f30 <ZSTD_endStream@@Base+0x5fdc>
   13f98:	cmp	w8, #0x7
   13f9c:	b.eq	14034 <ZSTD_endStream@@Base+0x60e0>  // b.none
   13fa0:	cbnz	w8, 14044 <ZSTD_endStream@@Base+0x60f0>
   13fa4:	ldur	x8, [x29, #-16]
   13fa8:	add	x0, x19, #0x4
   13fac:	add	x1, x26, #0x4
   13fb0:	cmp	w20, w8
   13fb4:	b.cs	1404c <ZSTD_endStream@@Base+0x60f8>  // b.hs, b.nlast
   13fb8:	ldur	x2, [x29, #-24]
   13fbc:	ldr	x3, [sp, #112]
   13fc0:	ldur	x4, [x29, #-64]
   13fc4:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   13fc8:	ldr	x8, [sp, #24]
   13fcc:	ldur	x28, [x29, #-72]
   13fd0:	add	x21, x0, #0x4
   13fd4:	cmp	x26, x8
   13fd8:	mov	x8, x20
   13fdc:	ldur	w20, [x29, #-104]
   13fe0:	sub	w8, w20, w8
   13fe4:	str	w8, [sp, #60]
   13fe8:	b.ls	143a0 <ZSTD_endStream@@Base+0x644c>  // b.plast
   13fec:	cmp	x19, x22
   13ff0:	b.ls	143a0 <ZSTD_endStream@@Base+0x644c>  // b.plast
   13ff4:	sub	x9, x19, #0x1
   13ff8:	sub	x8, x26, #0x1
   13ffc:	ldrb	w10, [x9]
   14000:	ldrb	w11, [x8]
   14004:	cmp	w10, w11
   14008:	b.ne	140c0 <ZSTD_endStream@@Base+0x616c>  // b.any
   1400c:	add	x21, x21, #0x1
   14010:	cmp	x9, x22
   14014:	sub	x10, x9, #0x1
   14018:	b.ls	13b04 <ZSTD_endStream@@Base+0x5bb0>  // b.plast
   1401c:	ldr	x9, [sp, #24]
   14020:	cmp	x8, x9
   14024:	sub	x8, x8, #0x1
   14028:	mov	x9, x10
   1402c:	b.hi	13ffc <ZSTD_endStream@@Base+0x60a8>  // b.pmore
   14030:	b	13b04 <ZSTD_endStream@@Base+0x5bb0>
   14034:	ldur	x28, [x29, #-72]
   14038:	mov	w20, w23
   1403c:	mov	x26, x19
   14040:	b	140c4 <ZSTD_endStream@@Base+0x6170>
   14044:	mov	x28, x19
   14048:	b	13924 <ZSTD_endStream@@Base+0x59d0>
   1404c:	ldur	x2, [x29, #-24]
   14050:	mov	x23, x19
   14054:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   14058:	ldur	x8, [x29, #-64]
   1405c:	ldur	x28, [x29, #-72]
   14060:	add	x21, x0, #0x4
   14064:	cmp	x26, x8
   14068:	sub	w8, w23, w26
   1406c:	str	w8, [sp, #60]
   14070:	b.ls	14394 <ZSTD_endStream@@Base+0x6440>  // b.plast
   14074:	cmp	x23, x22
   14078:	b.ls	14394 <ZSTD_endStream@@Base+0x6440>  // b.plast
   1407c:	ldur	w20, [x29, #-104]
   14080:	sub	x9, x23, #0x1
   14084:	sub	x8, x26, #0x1
   14088:	ldrb	w10, [x9]
   1408c:	ldrb	w11, [x8]
   14090:	cmp	w10, w11
   14094:	b.ne	140c0 <ZSTD_endStream@@Base+0x616c>  // b.any
   14098:	add	x21, x21, #0x1
   1409c:	cmp	x9, x22
   140a0:	sub	x10, x9, #0x1
   140a4:	b.ls	13b04 <ZSTD_endStream@@Base+0x5bb0>  // b.plast
   140a8:	ldur	x9, [x29, #-64]
   140ac:	cmp	x8, x9
   140b0:	sub	x8, x8, #0x1
   140b4:	mov	x9, x10
   140b8:	b.hi	14088 <ZSTD_endStream@@Base+0x6134>  // b.pmore
   140bc:	b	13b04 <ZSTD_endStream@@Base+0x5bb0>
   140c0:	add	x26, x9, #0x1
   140c4:	ldr	x0, [x28, #24]
   140c8:	cmp	x26, x27
   140cc:	sub	x23, x26, x22
   140d0:	b.ls	140e8 <ZSTD_endStream@@Base+0x6194>  // b.plast
   140d4:	mov	x1, x22
   140d8:	mov	x2, x26
   140dc:	mov	x3, x27
   140e0:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   140e4:	b	14150 <ZSTD_endStream@@Base+0x61fc>
   140e8:	mov	x1, x22
   140ec:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   140f0:	cmp	x23, #0x11
   140f4:	b.cc	14150 <ZSTD_endStream@@Base+0x61fc>  // b.lo, b.ul, b.last
   140f8:	ldr	x19, [x28, #24]
   140fc:	add	x1, x22, #0x10
   14100:	add	x0, x19, #0x10
   14104:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14108:	add	x0, x19, #0x20
   1410c:	add	x1, x22, #0x20
   14110:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14114:	cmp	x23, #0x31
   14118:	b.lt	14150 <ZSTD_endStream@@Base+0x61fc>  // b.tstop
   1411c:	add	x25, x19, x23
   14120:	add	x19, x19, #0x30
   14124:	add	x22, x22, #0x40
   14128:	sub	x1, x22, #0x10
   1412c:	mov	x0, x19
   14130:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14134:	add	x0, x19, #0x10
   14138:	mov	x1, x22
   1413c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14140:	add	x19, x19, #0x20
   14144:	cmp	x19, x25
   14148:	add	x22, x22, #0x20
   1414c:	b.cc	14128 <ZSTD_endStream@@Base+0x61d4>  // b.lo, b.ul, b.last
   14150:	ldr	x9, [x28, #24]
   14154:	sub	x8, x21, #0x3
   14158:	cmp	x23, #0x10, lsl #12
   1415c:	add	x9, x9, x23
   14160:	str	x9, [x28, #24]
   14164:	b.cc	1417c <ZSTD_endStream@@Base+0x6228>  // b.lo, b.ul, b.last
   14168:	ldp	x10, x9, [x28]
   1416c:	sub	x9, x9, x10
   14170:	lsr	x9, x9, #3
   14174:	mov	w10, #0x1                   	// #1
   14178:	stp	w10, w9, [x28, #72]
   1417c:	ldr	w12, [sp, #60]
   14180:	ldr	x9, [x28, #8]
   14184:	cmp	x8, #0x10, lsl #12
   14188:	add	w10, w12, #0x3
   1418c:	strh	w23, [x9, #4]
   14190:	str	w10, [x9]
   14194:	b.cc	141ac <ZSTD_endStream@@Base+0x6258>  // b.lo, b.ul, b.last
   14198:	ldp	x11, x10, [x28]
   1419c:	sub	x10, x10, x11
   141a0:	lsr	x10, x10, #3
   141a4:	mov	w11, #0x2                   	// #2
   141a8:	stp	w11, w10, [x28, #72]
   141ac:	ldur	w10, [x29, #-52]
   141b0:	mov	w23, w20
   141b4:	stur	w12, [x29, #-52]
   141b8:	str	w10, [sp, #88]
   141bc:	strh	w8, [x9, #6]
   141c0:	add	x8, x9, #0x8
   141c4:	ldur	x9, [x29, #-40]
   141c8:	add	x22, x26, x21
   141cc:	str	x8, [x28, #8]
   141d0:	cmp	x22, x9
   141d4:	b.hi	13920 <ZSTD_endStream@@Base+0x59cc>  // b.pmore
   141d8:	ldur	x26, [x29, #-32]
   141dc:	ldur	w24, [x29, #-84]
   141e0:	add	w20, w23, #0x2
   141e4:	mov	w2, #0x8                   	// #8
   141e8:	add	x19, x26, x20
   141ec:	mov	x0, x19
   141f0:	mov	w1, w24
   141f4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   141f8:	ldur	x27, [x29, #-80]
   141fc:	mov	w2, #0x8                   	// #8
   14200:	mov	w1, w24
   14204:	str	w20, [x27, x0, lsl #2]
   14208:	sub	x0, x22, #0x2
   1420c:	sub	w25, w0, w26
   14210:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14214:	ldur	w23, [x29, #-100]
   14218:	str	w25, [x27, x0, lsl #2]
   1421c:	ldr	x27, [sp, #96]
   14220:	mov	w2, #0x7                   	// #7
   14224:	mov	x0, x19
   14228:	mov	w1, w23
   1422c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14230:	ldur	x25, [x29, #-96]
   14234:	mov	w2, #0x7                   	// #7
   14238:	mov	w1, w23
   1423c:	str	w20, [x25, x0, lsl #2]
   14240:	sub	x0, x22, #0x1
   14244:	sub	w19, w0, w26
   14248:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   1424c:	ldr	w9, [sp, #88]
   14250:	str	w19, [x25, x0, lsl #2]
   14254:	b	14264 <ZSTD_endStream@@Base+0x6310>
   14258:	mov	w8, wzr
   1425c:	mov	w9, w25
   14260:	tbz	w8, #0, 1438c <ZSTD_endStream@@Base+0x6438>
   14264:	ldur	x8, [x29, #-40]
   14268:	mov	w25, w9
   1426c:	cmp	x22, x8
   14270:	b.hi	1391c <ZSTD_endStream@@Base+0x59c8>  // b.pmore
   14274:	ldur	x8, [x29, #-32]
   14278:	ldur	x11, [x29, #-16]
   1427c:	ldur	x10, [x29, #-48]
   14280:	sub	w26, w22, w8
   14284:	sub	w20, w26, w25
   14288:	mvn	w9, w20
   1428c:	cmp	w20, w11
   14290:	add	w9, w11, w9
   14294:	csel	x8, x10, x8, cc  // cc = lo, ul, last
   14298:	cmp	w9, #0x3
   1429c:	b.cc	14258 <ZSTD_endStream@@Base+0x6304>  // b.lo, b.ul, b.last
   142a0:	add	x19, x8, x20
   142a4:	mov	x0, x19
   142a8:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   142ac:	mov	w23, w0
   142b0:	mov	x0, x22
   142b4:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   142b8:	cmp	w23, w0
   142bc:	b.ne	14258 <ZSTD_endStream@@Base+0x6304>  // b.any
   142c0:	ldp	x2, x8, [x29, #-24]
   142c4:	ldur	x4, [x29, #-64]
   142c8:	add	x0, x22, #0x4
   142cc:	add	x1, x19, #0x4
   142d0:	cmp	w20, w8
   142d4:	ldr	x8, [sp, #112]
   142d8:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   142dc:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   142e0:	mov	x19, x0
   142e4:	ldr	x0, [x28, #24]
   142e8:	cmp	x22, x27
   142ec:	add	x23, x19, #0x1
   142f0:	mov	x1, x22
   142f4:	b.ls	14308 <ZSTD_endStream@@Base+0x63b4>  // b.plast
   142f8:	mov	x2, x22
   142fc:	mov	x3, x27
   14300:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   14304:	b	1430c <ZSTD_endStream@@Base+0x63b8>
   14308:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1430c:	ldr	x8, [x28, #8]
   14310:	add	x19, x19, #0x4
   14314:	cmp	x23, #0x10, lsl #12
   14318:	mov	w9, #0x1                   	// #1
   1431c:	strh	wzr, [x8, #4]
   14320:	str	w9, [x8]
   14324:	b.cc	1433c <ZSTD_endStream@@Base+0x63e8>  // b.lo, b.ul, b.last
   14328:	ldp	x10, x9, [x28]
   1432c:	sub	x9, x9, x10
   14330:	lsr	x9, x9, #3
   14334:	mov	w10, #0x2                   	// #2
   14338:	stp	w10, w9, [x28, #72]
   1433c:	ldur	w1, [x29, #-100]
   14340:	strh	w23, [x8, #6]
   14344:	add	x8, x8, #0x8
   14348:	mov	w2, #0x7                   	// #7
   1434c:	mov	x0, x22
   14350:	str	x8, [x28, #8]
   14354:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14358:	ldur	x8, [x29, #-96]
   1435c:	ldur	w1, [x29, #-84]
   14360:	mov	w2, #0x8                   	// #8
   14364:	str	w26, [x8, x0, lsl #2]
   14368:	mov	x0, x22
   1436c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14370:	ldur	x8, [x29, #-80]
   14374:	ldur	w9, [x29, #-52]
   14378:	add	x22, x22, x19
   1437c:	stur	w25, [x29, #-52]
   14380:	str	w26, [x8, x0, lsl #2]
   14384:	mov	w8, #0x1                   	// #1
   14388:	tbnz	w8, #0, 14264 <ZSTD_endStream@@Base+0x6310>
   1438c:	str	w9, [sp, #88]
   14390:	b	13920 <ZSTD_endStream@@Base+0x59cc>
   14394:	ldur	w20, [x29, #-104]
   14398:	mov	x26, x23
   1439c:	b	140c4 <ZSTD_endStream@@Base+0x6170>
   143a0:	mov	x26, x19
   143a4:	b	140c4 <ZSTD_endStream@@Base+0x6170>
   143a8:	ldr	w8, [x2]
   143ac:	ldr	x14, [x0, #8]
   143b0:	ldr	w9, [x0, #24]
   143b4:	ldr	w10, [x0, #184]
   143b8:	stur	w8, [x29, #-52]
   143bc:	ldr	w8, [x2, #4]
   143c0:	add	x13, x22, x4
   143c4:	mov	w12, #0x1                   	// #1
   143c8:	sub	w11, w13, w14
   143cc:	str	w8, [sp, #88]
   143d0:	ldr	x8, [x0, #176]
   143d4:	lsl	w10, w12, w10
   143d8:	sub	w12, w11, w9
   143dc:	sub	w11, w11, w10
   143e0:	ldr	w16, [x8, #24]
   143e4:	ldp	x18, x17, [x8]
   143e8:	cmp	w12, w10
   143ec:	csel	w9, w11, w9, hi  // hi = pmore
   143f0:	stur	x9, [x29, #-16]
   143f4:	add	x9, x14, x9
   143f8:	stur	x9, [x29, #-64]
   143fc:	sub	w9, w22, w9
   14400:	add	x10, x17, x16
   14404:	add	w9, w18, w9
   14408:	cmp	w9, w10
   1440c:	sub	x15, x13, #0x8
   14410:	cinc	x28, x22, eq  // eq = none
   14414:	cmp	x28, x15
   14418:	str	x16, [sp, #48]
   1441c:	str	x10, [sp, #24]
   14420:	stur	x15, [x29, #-40]
   14424:	stur	x13, [x29, #-24]
   14428:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   1442c:	ldr	x9, [x0, #48]
   14430:	str	x18, [sp, #112]
   14434:	sub	x27, x13, #0x20
   14438:	stur	x9, [x29, #-80]
   1443c:	ldr	x9, [x0, #64]
   14440:	stur	x9, [x29, #-96]
   14444:	ldr	w9, [x0, #192]
   14448:	stur	w9, [x29, #-84]
   1444c:	ldr	w9, [x0, #188]
   14450:	stur	w9, [x29, #-100]
   14454:	ldr	x9, [x8, #48]
   14458:	str	x9, [sp, #32]
   1445c:	ldr	x9, [x8, #64]
   14460:	str	x9, [sp, #16]
   14464:	ldp	w8, w10, [x8, #188]
   14468:	sub	w9, w17, w18
   1446c:	str	x17, [sp, #104]
   14470:	stur	x14, [x29, #-32]
   14474:	str	w8, [sp, #64]
   14478:	sub	x8, x17, #0x1
   1447c:	str	x8, [sp]
   14480:	ldur	x8, [x29, #-16]
   14484:	str	w10, [sp, #84]
   14488:	str	x27, [sp, #96]
   1448c:	add	w8, w8, w9
   14490:	str	w8, [sp, #92]
   14494:	sub	x8, x17, w8, uxtw
   14498:	stur	x8, [x29, #-48]
   1449c:	sub	x8, x14, #0x1
   144a0:	str	x8, [sp, #8]
   144a4:	b	144bc <ZSTD_endStream@@Base+0x6568>
   144a8:	str	w25, [sp, #88]
   144ac:	mov	x28, x22
   144b0:	ldur	x8, [x29, #-40]
   144b4:	cmp	x28, x8
   144b8:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   144bc:	ldur	w1, [x29, #-84]
   144c0:	mov	w2, #0x8                   	// #8
   144c4:	mov	x0, x28
   144c8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   144cc:	ldur	w1, [x29, #-100]
   144d0:	mov	x26, x0
   144d4:	mov	w2, #0x5                   	// #5
   144d8:	mov	x0, x28
   144dc:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   144e0:	ldr	w1, [sp, #84]
   144e4:	mov	x27, x0
   144e8:	mov	w2, #0x8                   	// #8
   144ec:	mov	x0, x28
   144f0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   144f4:	ldr	w1, [sp, #64]
   144f8:	mov	x19, x0
   144fc:	mov	w2, #0x5                   	// #5
   14500:	mov	x0, x28
   14504:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14508:	ldur	x10, [x29, #-32]
   1450c:	ldur	x13, [x29, #-80]
   14510:	ldur	x11, [x29, #-96]
   14514:	lsl	x8, x26, #2
   14518:	sub	w14, w28, w10
   1451c:	lsl	x9, x27, #2
   14520:	ldr	w27, [x13, x8]
   14524:	ldr	w24, [x11, x9]
   14528:	str	w14, [x11, x9]
   1452c:	ldur	w9, [x29, #-52]
   14530:	add	w12, w14, #0x1
   14534:	str	w12, [sp, #68]
   14538:	ldur	x15, [x29, #-16]
   1453c:	sub	w20, w12, w9
   14540:	ldr	w9, [sp, #92]
   14544:	ldr	x12, [sp, #104]
   14548:	mvn	w11, w20
   1454c:	add	x10, x10, x20
   14550:	sub	w9, w20, w9
   14554:	cmp	w20, w15
   14558:	add	x9, x12, x9
   1455c:	add	w11, w15, w11
   14560:	csel	x26, x9, x10, cc  // cc = lo, ul, last
   14564:	cmp	w11, #0x3
   14568:	str	x0, [sp, #72]
   1456c:	stur	w14, [x29, #-104]
   14570:	str	w14, [x13, x8]
   14574:	b.cc	145f0 <ZSTD_endStream@@Base+0x669c>  // b.lo, b.ul, b.last
   14578:	mov	x0, x26
   1457c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   14580:	add	x23, x28, #0x1
   14584:	mov	w25, w0
   14588:	mov	x0, x23
   1458c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   14590:	cmp	w25, w0
   14594:	b.ne	145f0 <ZSTD_endStream@@Base+0x669c>  // b.any
   14598:	ldp	x2, x8, [x29, #-24]
   1459c:	ldur	x4, [x29, #-64]
   145a0:	add	x0, x28, #0x5
   145a4:	add	x1, x26, #0x4
   145a8:	cmp	w20, w8
   145ac:	ldr	x8, [sp, #112]
   145b0:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   145b4:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   145b8:	ldur	x28, [x29, #-72]
   145bc:	ldr	x27, [sp, #96]
   145c0:	mov	x25, x0
   145c4:	sub	x26, x23, x22
   145c8:	ldr	x0, [x28, #24]
   145cc:	cmp	x23, x27
   145d0:	b.ls	148d8 <ZSTD_endStream@@Base+0x6984>  // b.plast
   145d4:	mov	x1, x22
   145d8:	mov	x2, x23
   145dc:	mov	x3, x27
   145e0:	mov	x20, x23
   145e4:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   145e8:	ldur	w23, [x29, #-104]
   145ec:	b	14948 <ZSTD_endStream@@Base+0x69f4>
   145f0:	ldur	x8, [x29, #-16]
   145f4:	cmp	w27, w8
   145f8:	b.ls	14698 <ZSTD_endStream@@Base+0x6744>  // b.plast
   145fc:	ldur	x8, [x29, #-32]
   14600:	add	x19, x8, x27
   14604:	mov	x0, x19
   14608:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   1460c:	mov	x25, x0
   14610:	mov	x0, x28
   14614:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   14618:	cmp	x25, x0
   1461c:	b.ne	14770 <ZSTD_endStream@@Base+0x681c>  // b.any
   14620:	ldur	x2, [x29, #-24]
   14624:	ldur	w20, [x29, #-104]
   14628:	add	x0, x28, #0x8
   1462c:	add	x1, x19, #0x8
   14630:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   14634:	add	x21, x0, #0x8
   14638:	cmp	x28, x22
   1463c:	sub	w8, w28, w19
   14640:	str	w8, [sp, #60]
   14644:	b.ls	149d4 <ZSTD_endStream@@Base+0x6a80>  // b.plast
   14648:	ldr	x8, [sp, #8]
   1464c:	sub	x9, x28, #0x1
   14650:	ldur	x28, [x29, #-72]
   14654:	add	x8, x8, x27
   14658:	ldr	x27, [sp, #96]
   1465c:	ldrb	w10, [x9]
   14660:	ldrb	w11, [x8]
   14664:	cmp	w10, w11
   14668:	b.ne	14c4c <ZSTD_endStream@@Base+0x6cf8>  // b.any
   1466c:	add	x21, x21, #0x1
   14670:	cmp	x9, x22
   14674:	sub	x10, x9, #0x1
   14678:	b.ls	14690 <ZSTD_endStream@@Base+0x673c>  // b.plast
   1467c:	ldur	x9, [x29, #-64]
   14680:	cmp	x8, x9
   14684:	sub	x8, x8, #0x1
   14688:	mov	x9, x10
   1468c:	b.hi	1465c <ZSTD_endStream@@Base+0x6708>  // b.pmore
   14690:	add	x26, x10, #0x1
   14694:	b	14c50 <ZSTD_endStream@@Base+0x6cfc>
   14698:	ldr	x8, [sp, #32]
   1469c:	ldr	w26, [x8, x19, lsl #2]
   146a0:	ldr	x8, [sp, #48]
   146a4:	cmp	w26, w8
   146a8:	b.ls	14754 <ZSTD_endStream@@Base+0x6800>  // b.plast
   146ac:	ldr	x8, [sp, #104]
   146b0:	add	x19, x8, x26
   146b4:	mov	x0, x19
   146b8:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   146bc:	mov	x25, x0
   146c0:	mov	x0, x28
   146c4:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   146c8:	cmp	x25, x0
   146cc:	b.ne	14754 <ZSTD_endStream@@Base+0x6800>  // b.any
   146d0:	ldur	x2, [x29, #-24]
   146d4:	ldr	x3, [sp, #112]
   146d8:	ldur	x4, [x29, #-64]
   146dc:	add	x0, x28, #0x8
   146e0:	add	x1, x19, #0x8
   146e4:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   146e8:	ldur	w23, [x29, #-104]
   146ec:	ldr	w9, [sp, #92]
   146f0:	ldr	x27, [sp, #96]
   146f4:	add	x21, x0, #0x8
   146f8:	sub	w8, w23, w26
   146fc:	cmp	x28, x22
   14700:	sub	w8, w8, w9
   14704:	str	w8, [sp, #60]
   14708:	b.ls	14acc <ZSTD_endStream@@Base+0x6b78>  // b.plast
   1470c:	ldr	x8, [sp]
   14710:	ldr	x12, [sp, #24]
   14714:	sub	x9, x28, #0x1
   14718:	add	x8, x8, x26
   1471c:	ldrb	w10, [x9]
   14720:	ldrb	w11, [x8]
   14724:	cmp	w10, w11
   14728:	b.ne	14ac8 <ZSTD_endStream@@Base+0x6b74>  // b.any
   1472c:	add	x21, x21, #0x1
   14730:	cmp	x9, x22
   14734:	sub	x10, x9, #0x1
   14738:	b.ls	1474c <ZSTD_endStream@@Base+0x67f8>  // b.plast
   1473c:	cmp	x8, x12
   14740:	sub	x8, x8, #0x1
   14744:	mov	x9, x10
   14748:	b.hi	1471c <ZSTD_endStream@@Base+0x67c8>  // b.pmore
   1474c:	add	x28, x10, #0x1
   14750:	b	14acc <ZSTD_endStream@@Base+0x6b78>
   14754:	ldr	x27, [sp, #96]
   14758:	ldur	w23, [x29, #-104]
   1475c:	mov	w8, wzr
   14760:	cmp	w8, #0x7
   14764:	b.eq	14ad8 <ZSTD_endStream@@Base+0x6b84>  // b.none
   14768:	cbz	w8, 14774 <ZSTD_endStream@@Base+0x6820>
   1476c:	b	144b0 <ZSTD_endStream@@Base+0x655c>
   14770:	ldur	w23, [x29, #-104]
   14774:	ldur	x8, [x29, #-16]
   14778:	cmp	w24, w8
   1477c:	b.ls	147a8 <ZSTD_endStream@@Base+0x6854>  // b.plast
   14780:	ldur	x8, [x29, #-32]
   14784:	add	x26, x8, x24
   14788:	mov	x0, x26
   1478c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   14790:	mov	w19, w0
   14794:	mov	x0, x28
   14798:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   1479c:	cmp	w19, w0
   147a0:	b.eq	147f8 <ZSTD_endStream@@Base+0x68a4>  // b.none
   147a4:	b	149c4 <ZSTD_endStream@@Base+0x6a70>
   147a8:	ldr	x8, [sp, #16]
   147ac:	ldr	x9, [sp, #72]
   147b0:	ldr	w25, [x8, x9, lsl #2]
   147b4:	ldr	x8, [sp, #48]
   147b8:	cmp	w25, w8
   147bc:	ldr	x8, [sp, #104]
   147c0:	add	x26, x8, x25
   147c4:	b.ls	149b4 <ZSTD_endStream@@Base+0x6a60>  // b.plast
   147c8:	mov	x0, x26
   147cc:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   147d0:	mov	w19, w0
   147d4:	mov	x0, x28
   147d8:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   147dc:	cmp	w19, w0
   147e0:	b.ne	149b4 <ZSTD_endStream@@Base+0x6a60>  // b.any
   147e4:	mov	w8, #0xa                   	// #10
   147e8:	cmp	w8, #0xa
   147ec:	b.ne	149c0 <ZSTD_endStream@@Base+0x6a6c>  // b.any
   147f0:	ldr	w8, [sp, #92]
   147f4:	add	w24, w25, w8
   147f8:	ldur	w1, [x29, #-84]
   147fc:	add	x20, x28, #0x1
   14800:	mov	w2, #0x8                   	// #8
   14804:	mov	x0, x20
   14808:	str	x24, [sp, #72]
   1480c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14810:	ldr	w1, [sp, #84]
   14814:	mov	x19, x0
   14818:	mov	w2, #0x8                   	// #8
   1481c:	mov	x0, x20
   14820:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14824:	ldur	x9, [x29, #-80]
   14828:	lsl	x8, x19, #2
   1482c:	ldur	x10, [x29, #-16]
   14830:	ldr	w24, [sp, #68]
   14834:	ldr	w27, [x9, x8]
   14838:	str	w24, [x9, x8]
   1483c:	cmp	w27, w10
   14840:	b.ls	149e4 <ZSTD_endStream@@Base+0x6a90>  // b.plast
   14844:	ldur	x8, [x29, #-32]
   14848:	add	x19, x8, x27
   1484c:	mov	x0, x19
   14850:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   14854:	mov	x25, x0
   14858:	mov	x0, x20
   1485c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   14860:	cmp	x25, x0
   14864:	b.ne	14ab4 <ZSTD_endStream@@Base+0x6b60>  // b.any
   14868:	ldur	x2, [x29, #-24]
   1486c:	add	x0, x28, #0x9
   14870:	add	x1, x19, #0x8
   14874:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   14878:	add	x21, x0, #0x8
   1487c:	cmp	x20, x22
   14880:	sub	w8, w20, w19
   14884:	str	w8, [sp, #60]
   14888:	b.ls	14ae8 <ZSTD_endStream@@Base+0x6b94>  // b.plast
   1488c:	ldr	x8, [sp, #8]
   14890:	ldr	x20, [sp, #72]
   14894:	add	x8, x8, x27
   14898:	ldr	x27, [sp, #96]
   1489c:	ldrb	w9, [x28]
   148a0:	ldrb	w10, [x8]
   148a4:	cmp	w9, w10
   148a8:	b.ne	14afc <ZSTD_endStream@@Base+0x6ba8>  // b.any
   148ac:	add	x21, x21, #0x1
   148b0:	cmp	x28, x22
   148b4:	sub	x9, x28, #0x1
   148b8:	b.ls	148d0 <ZSTD_endStream@@Base+0x697c>  // b.plast
   148bc:	ldur	x10, [x29, #-64]
   148c0:	mov	x28, x9
   148c4:	cmp	x8, x10
   148c8:	sub	x8, x8, #0x1
   148cc:	b.hi	1489c <ZSTD_endStream@@Base+0x6948>  // b.pmore
   148d0:	add	x19, x9, #0x1
   148d4:	b	14b00 <ZSTD_endStream@@Base+0x6bac>
   148d8:	mov	x1, x22
   148dc:	mov	x20, x23
   148e0:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   148e4:	ldur	w23, [x29, #-104]
   148e8:	cmp	x26, #0x11
   148ec:	b.cc	14948 <ZSTD_endStream@@Base+0x69f4>  // b.lo, b.ul, b.last
   148f0:	ldr	x19, [x28, #24]
   148f4:	add	x1, x22, #0x10
   148f8:	add	x0, x19, #0x10
   148fc:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14900:	add	x0, x19, #0x20
   14904:	add	x1, x22, #0x20
   14908:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1490c:	cmp	x26, #0x31
   14910:	b.lt	14948 <ZSTD_endStream@@Base+0x69f4>  // b.tstop
   14914:	add	x21, x19, x26
   14918:	add	x19, x19, #0x30
   1491c:	add	x22, x22, #0x40
   14920:	sub	x1, x22, #0x10
   14924:	mov	x0, x19
   14928:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1492c:	add	x0, x19, #0x10
   14930:	mov	x1, x22
   14934:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14938:	add	x19, x19, #0x20
   1493c:	cmp	x19, x21
   14940:	add	x22, x22, #0x20
   14944:	b.cc	14920 <ZSTD_endStream@@Base+0x69cc>  // b.lo, b.ul, b.last
   14948:	ldr	x9, [x28, #24]
   1494c:	add	x21, x25, #0x4
   14950:	add	x8, x25, #0x1
   14954:	cmp	x26, #0x10, lsl #12
   14958:	add	x9, x9, x26
   1495c:	str	x9, [x28, #24]
   14960:	b.cc	14978 <ZSTD_endStream@@Base+0x6a24>  // b.lo, b.ul, b.last
   14964:	ldp	x10, x9, [x28]
   14968:	sub	x9, x9, x10
   1496c:	lsr	x9, x9, #3
   14970:	mov	w10, #0x1                   	// #1
   14974:	stp	w10, w9, [x28, #72]
   14978:	ldr	x9, [x28, #8]
   1497c:	cmp	x8, #0x10, lsl #12
   14980:	mov	w10, #0x1                   	// #1
   14984:	strh	w26, [x9, #4]
   14988:	str	w10, [x9]
   1498c:	b.cc	149ac <ZSTD_endStream@@Base+0x6a58>  // b.lo, b.ul, b.last
   14990:	ldp	x11, x10, [x28]
   14994:	mov	x26, x20
   14998:	sub	x10, x10, x11
   1499c:	lsr	x10, x10, #3
   149a0:	mov	w11, #0x2                   	// #2
   149a4:	stp	w11, w10, [x28, #72]
   149a8:	b	14d48 <ZSTD_endStream@@Base+0x6df4>
   149ac:	mov	x26, x20
   149b0:	b	14d48 <ZSTD_endStream@@Base+0x6df4>
   149b4:	mov	w8, wzr
   149b8:	cmp	w8, #0xa
   149bc:	b.eq	147f0 <ZSTD_endStream@@Base+0x689c>  // b.none
   149c0:	cbnz	w8, 144b0 <ZSTD_endStream@@Base+0x655c>
   149c4:	sub	x8, x28, x22
   149c8:	add	x8, x28, x8, asr #8
   149cc:	add	x28, x8, #0x1
   149d0:	b	144b0 <ZSTD_endStream@@Base+0x655c>
   149d4:	mov	x26, x28
   149d8:	ldur	x28, [x29, #-72]
   149dc:	ldr	x27, [sp, #96]
   149e0:	b	14c50 <ZSTD_endStream@@Base+0x6cfc>
   149e4:	ldr	x8, [sp, #32]
   149e8:	ldr	w27, [x8, x0, lsl #2]
   149ec:	ldr	x8, [sp, #48]
   149f0:	cmp	w27, w8
   149f4:	b.ls	14a9c <ZSTD_endStream@@Base+0x6b48>  // b.plast
   149f8:	ldr	x8, [sp, #104]
   149fc:	add	x19, x8, x27
   14a00:	mov	x0, x19
   14a04:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   14a08:	mov	x25, x0
   14a0c:	mov	x0, x20
   14a10:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   14a14:	cmp	x25, x0
   14a18:	b.ne	14a9c <ZSTD_endStream@@Base+0x6b48>  // b.any
   14a1c:	ldur	x2, [x29, #-24]
   14a20:	ldr	x3, [sp, #112]
   14a24:	ldur	x4, [x29, #-64]
   14a28:	add	x0, x28, #0x9
   14a2c:	add	x1, x19, #0x8
   14a30:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   14a34:	ldr	w9, [sp, #92]
   14a38:	sub	w8, w24, w27
   14a3c:	add	x21, x0, #0x8
   14a40:	cmp	x20, x22
   14a44:	sub	w8, w8, w9
   14a48:	str	w8, [sp, #60]
   14a4c:	b.ls	14b08 <ZSTD_endStream@@Base+0x6bb4>  // b.plast
   14a50:	ldr	x8, [sp]
   14a54:	ldr	x20, [sp, #72]
   14a58:	add	x8, x8, x27
   14a5c:	ldr	x27, [sp, #96]
   14a60:	ldrb	w9, [x28]
   14a64:	ldrb	w10, [x8]
   14a68:	cmp	w9, w10
   14a6c:	b.ne	14b14 <ZSTD_endStream@@Base+0x6bc0>  // b.any
   14a70:	add	x21, x21, #0x1
   14a74:	cmp	x28, x22
   14a78:	sub	x9, x28, #0x1
   14a7c:	b.ls	14a94 <ZSTD_endStream@@Base+0x6b40>  // b.plast
   14a80:	ldr	x10, [sp, #24]
   14a84:	mov	x28, x9
   14a88:	cmp	x8, x10
   14a8c:	sub	x8, x8, #0x1
   14a90:	b.hi	14a60 <ZSTD_endStream@@Base+0x6b0c>  // b.pmore
   14a94:	add	x28, x9, #0x1
   14a98:	b	14b18 <ZSTD_endStream@@Base+0x6bc4>
   14a9c:	mov	w8, wzr
   14aa0:	ldr	x27, [sp, #96]
   14aa4:	ldr	x20, [sp, #72]
   14aa8:	mov	x19, x28
   14aac:	cbnz	w8, 14b24 <ZSTD_endStream@@Base+0x6bd0>
   14ab0:	b	14abc <ZSTD_endStream@@Base+0x6b68>
   14ab4:	ldr	x27, [sp, #96]
   14ab8:	ldr	x20, [sp, #72]
   14abc:	mov	w8, wzr
   14ac0:	mov	x19, x28
   14ac4:	b	14b24 <ZSTD_endStream@@Base+0x6bd0>
   14ac8:	add	x28, x9, #0x1
   14acc:	mov	w8, #0x7                   	// #7
   14ad0:	cmp	w8, #0x7
   14ad4:	b.ne	14768 <ZSTD_endStream@@Base+0x6814>  // b.any
   14ad8:	mov	x26, x28
   14adc:	ldur	x28, [x29, #-72]
   14ae0:	mov	w20, w23
   14ae4:	b	14c50 <ZSTD_endStream@@Base+0x6cfc>
   14ae8:	mov	x19, x20
   14aec:	ldr	x27, [sp, #96]
   14af0:	ldr	x20, [sp, #72]
   14af4:	mov	w8, #0x7                   	// #7
   14af8:	b	14b24 <ZSTD_endStream@@Base+0x6bd0>
   14afc:	add	x19, x28, #0x1
   14b00:	mov	w8, #0x7                   	// #7
   14b04:	b	14b24 <ZSTD_endStream@@Base+0x6bd0>
   14b08:	mov	w8, #0x7                   	// #7
   14b0c:	mov	x28, x20
   14b10:	b	14aa0 <ZSTD_endStream@@Base+0x6b4c>
   14b14:	add	x28, x28, #0x1
   14b18:	mov	w8, #0x7                   	// #7
   14b1c:	mov	x19, x28
   14b20:	cbz	w8, 14abc <ZSTD_endStream@@Base+0x6b68>
   14b24:	cmp	w8, #0x7
   14b28:	b.eq	14bc0 <ZSTD_endStream@@Base+0x6c6c>  // b.none
   14b2c:	cbnz	w8, 14bd0 <ZSTD_endStream@@Base+0x6c7c>
   14b30:	ldur	x8, [x29, #-16]
   14b34:	add	x0, x19, #0x4
   14b38:	add	x1, x26, #0x4
   14b3c:	cmp	w20, w8
   14b40:	b.cs	14bd8 <ZSTD_endStream@@Base+0x6c84>  // b.hs, b.nlast
   14b44:	ldur	x2, [x29, #-24]
   14b48:	ldr	x3, [sp, #112]
   14b4c:	ldur	x4, [x29, #-64]
   14b50:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   14b54:	ldr	x8, [sp, #24]
   14b58:	ldur	x28, [x29, #-72]
   14b5c:	add	x21, x0, #0x4
   14b60:	cmp	x26, x8
   14b64:	mov	x8, x20
   14b68:	ldur	w20, [x29, #-104]
   14b6c:	sub	w8, w20, w8
   14b70:	str	w8, [sp, #60]
   14b74:	b.ls	14f2c <ZSTD_endStream@@Base+0x6fd8>  // b.plast
   14b78:	cmp	x19, x22
   14b7c:	b.ls	14f2c <ZSTD_endStream@@Base+0x6fd8>  // b.plast
   14b80:	sub	x9, x19, #0x1
   14b84:	sub	x8, x26, #0x1
   14b88:	ldrb	w10, [x9]
   14b8c:	ldrb	w11, [x8]
   14b90:	cmp	w10, w11
   14b94:	b.ne	14c4c <ZSTD_endStream@@Base+0x6cf8>  // b.any
   14b98:	add	x21, x21, #0x1
   14b9c:	cmp	x9, x22
   14ba0:	sub	x10, x9, #0x1
   14ba4:	b.ls	14690 <ZSTD_endStream@@Base+0x673c>  // b.plast
   14ba8:	ldr	x9, [sp, #24]
   14bac:	cmp	x8, x9
   14bb0:	sub	x8, x8, #0x1
   14bb4:	mov	x9, x10
   14bb8:	b.hi	14b88 <ZSTD_endStream@@Base+0x6c34>  // b.pmore
   14bbc:	b	14690 <ZSTD_endStream@@Base+0x673c>
   14bc0:	ldur	x28, [x29, #-72]
   14bc4:	mov	w20, w23
   14bc8:	mov	x26, x19
   14bcc:	b	14c50 <ZSTD_endStream@@Base+0x6cfc>
   14bd0:	mov	x28, x19
   14bd4:	b	144b0 <ZSTD_endStream@@Base+0x655c>
   14bd8:	ldur	x2, [x29, #-24]
   14bdc:	mov	x23, x19
   14be0:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   14be4:	ldur	x8, [x29, #-64]
   14be8:	ldur	x28, [x29, #-72]
   14bec:	add	x21, x0, #0x4
   14bf0:	cmp	x26, x8
   14bf4:	sub	w8, w23, w26
   14bf8:	str	w8, [sp, #60]
   14bfc:	b.ls	14f20 <ZSTD_endStream@@Base+0x6fcc>  // b.plast
   14c00:	cmp	x23, x22
   14c04:	b.ls	14f20 <ZSTD_endStream@@Base+0x6fcc>  // b.plast
   14c08:	ldur	w20, [x29, #-104]
   14c0c:	sub	x9, x23, #0x1
   14c10:	sub	x8, x26, #0x1
   14c14:	ldrb	w10, [x9]
   14c18:	ldrb	w11, [x8]
   14c1c:	cmp	w10, w11
   14c20:	b.ne	14c4c <ZSTD_endStream@@Base+0x6cf8>  // b.any
   14c24:	add	x21, x21, #0x1
   14c28:	cmp	x9, x22
   14c2c:	sub	x10, x9, #0x1
   14c30:	b.ls	14690 <ZSTD_endStream@@Base+0x673c>  // b.plast
   14c34:	ldur	x9, [x29, #-64]
   14c38:	cmp	x8, x9
   14c3c:	sub	x8, x8, #0x1
   14c40:	mov	x9, x10
   14c44:	b.hi	14c14 <ZSTD_endStream@@Base+0x6cc0>  // b.pmore
   14c48:	b	14690 <ZSTD_endStream@@Base+0x673c>
   14c4c:	add	x26, x9, #0x1
   14c50:	ldr	x0, [x28, #24]
   14c54:	cmp	x26, x27
   14c58:	sub	x23, x26, x22
   14c5c:	b.ls	14c74 <ZSTD_endStream@@Base+0x6d20>  // b.plast
   14c60:	mov	x1, x22
   14c64:	mov	x2, x26
   14c68:	mov	x3, x27
   14c6c:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   14c70:	b	14cdc <ZSTD_endStream@@Base+0x6d88>
   14c74:	mov	x1, x22
   14c78:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14c7c:	cmp	x23, #0x11
   14c80:	b.cc	14cdc <ZSTD_endStream@@Base+0x6d88>  // b.lo, b.ul, b.last
   14c84:	ldr	x19, [x28, #24]
   14c88:	add	x1, x22, #0x10
   14c8c:	add	x0, x19, #0x10
   14c90:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14c94:	add	x0, x19, #0x20
   14c98:	add	x1, x22, #0x20
   14c9c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14ca0:	cmp	x23, #0x31
   14ca4:	b.lt	14cdc <ZSTD_endStream@@Base+0x6d88>  // b.tstop
   14ca8:	add	x25, x19, x23
   14cac:	add	x19, x19, #0x30
   14cb0:	add	x22, x22, #0x40
   14cb4:	sub	x1, x22, #0x10
   14cb8:	mov	x0, x19
   14cbc:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14cc0:	add	x0, x19, #0x10
   14cc4:	mov	x1, x22
   14cc8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14ccc:	add	x19, x19, #0x20
   14cd0:	cmp	x19, x25
   14cd4:	add	x22, x22, #0x20
   14cd8:	b.cc	14cb4 <ZSTD_endStream@@Base+0x6d60>  // b.lo, b.ul, b.last
   14cdc:	ldr	x9, [x28, #24]
   14ce0:	sub	x8, x21, #0x3
   14ce4:	cmp	x23, #0x10, lsl #12
   14ce8:	add	x9, x9, x23
   14cec:	str	x9, [x28, #24]
   14cf0:	b.cc	14d08 <ZSTD_endStream@@Base+0x6db4>  // b.lo, b.ul, b.last
   14cf4:	ldp	x10, x9, [x28]
   14cf8:	sub	x9, x9, x10
   14cfc:	lsr	x9, x9, #3
   14d00:	mov	w10, #0x1                   	// #1
   14d04:	stp	w10, w9, [x28, #72]
   14d08:	ldr	w12, [sp, #60]
   14d0c:	ldr	x9, [x28, #8]
   14d10:	cmp	x8, #0x10, lsl #12
   14d14:	add	w10, w12, #0x3
   14d18:	strh	w23, [x9, #4]
   14d1c:	str	w10, [x9]
   14d20:	b.cc	14d38 <ZSTD_endStream@@Base+0x6de4>  // b.lo, b.ul, b.last
   14d24:	ldp	x11, x10, [x28]
   14d28:	sub	x10, x10, x11
   14d2c:	lsr	x10, x10, #3
   14d30:	mov	w11, #0x2                   	// #2
   14d34:	stp	w11, w10, [x28, #72]
   14d38:	ldur	w10, [x29, #-52]
   14d3c:	mov	w23, w20
   14d40:	stur	w12, [x29, #-52]
   14d44:	str	w10, [sp, #88]
   14d48:	strh	w8, [x9, #6]
   14d4c:	add	x8, x9, #0x8
   14d50:	ldur	x9, [x29, #-40]
   14d54:	add	x22, x26, x21
   14d58:	str	x8, [x28, #8]
   14d5c:	cmp	x22, x9
   14d60:	b.hi	144ac <ZSTD_endStream@@Base+0x6558>  // b.pmore
   14d64:	ldur	x26, [x29, #-32]
   14d68:	ldur	w24, [x29, #-84]
   14d6c:	add	w20, w23, #0x2
   14d70:	mov	w2, #0x8                   	// #8
   14d74:	add	x19, x26, x20
   14d78:	mov	x0, x19
   14d7c:	mov	w1, w24
   14d80:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14d84:	ldur	x27, [x29, #-80]
   14d88:	mov	w2, #0x8                   	// #8
   14d8c:	mov	w1, w24
   14d90:	str	w20, [x27, x0, lsl #2]
   14d94:	sub	x0, x22, #0x2
   14d98:	sub	w25, w0, w26
   14d9c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14da0:	ldur	w23, [x29, #-100]
   14da4:	str	w25, [x27, x0, lsl #2]
   14da8:	ldr	x27, [sp, #96]
   14dac:	mov	w2, #0x5                   	// #5
   14db0:	mov	x0, x19
   14db4:	mov	w1, w23
   14db8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14dbc:	ldur	x25, [x29, #-96]
   14dc0:	mov	w2, #0x5                   	// #5
   14dc4:	mov	w1, w23
   14dc8:	str	w20, [x25, x0, lsl #2]
   14dcc:	sub	x0, x22, #0x1
   14dd0:	sub	w19, w0, w26
   14dd4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14dd8:	ldr	w9, [sp, #88]
   14ddc:	str	w19, [x25, x0, lsl #2]
   14de0:	b	14df0 <ZSTD_endStream@@Base+0x6e9c>
   14de4:	mov	w8, wzr
   14de8:	mov	w9, w25
   14dec:	tbz	w8, #0, 14f18 <ZSTD_endStream@@Base+0x6fc4>
   14df0:	ldur	x8, [x29, #-40]
   14df4:	mov	w25, w9
   14df8:	cmp	x22, x8
   14dfc:	b.hi	144a8 <ZSTD_endStream@@Base+0x6554>  // b.pmore
   14e00:	ldur	x8, [x29, #-32]
   14e04:	ldur	x11, [x29, #-16]
   14e08:	ldur	x10, [x29, #-48]
   14e0c:	sub	w26, w22, w8
   14e10:	sub	w20, w26, w25
   14e14:	mvn	w9, w20
   14e18:	cmp	w20, w11
   14e1c:	add	w9, w11, w9
   14e20:	csel	x8, x10, x8, cc  // cc = lo, ul, last
   14e24:	cmp	w9, #0x3
   14e28:	b.cc	14de4 <ZSTD_endStream@@Base+0x6e90>  // b.lo, b.ul, b.last
   14e2c:	add	x19, x8, x20
   14e30:	mov	x0, x19
   14e34:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   14e38:	mov	w23, w0
   14e3c:	mov	x0, x22
   14e40:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   14e44:	cmp	w23, w0
   14e48:	b.ne	14de4 <ZSTD_endStream@@Base+0x6e90>  // b.any
   14e4c:	ldp	x2, x8, [x29, #-24]
   14e50:	ldur	x4, [x29, #-64]
   14e54:	add	x0, x22, #0x4
   14e58:	add	x1, x19, #0x4
   14e5c:	cmp	w20, w8
   14e60:	ldr	x8, [sp, #112]
   14e64:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   14e68:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   14e6c:	mov	x19, x0
   14e70:	ldr	x0, [x28, #24]
   14e74:	cmp	x22, x27
   14e78:	add	x23, x19, #0x1
   14e7c:	mov	x1, x22
   14e80:	b.ls	14e94 <ZSTD_endStream@@Base+0x6f40>  // b.plast
   14e84:	mov	x2, x22
   14e88:	mov	x3, x27
   14e8c:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   14e90:	b	14e98 <ZSTD_endStream@@Base+0x6f44>
   14e94:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   14e98:	ldr	x8, [x28, #8]
   14e9c:	add	x19, x19, #0x4
   14ea0:	cmp	x23, #0x10, lsl #12
   14ea4:	mov	w9, #0x1                   	// #1
   14ea8:	strh	wzr, [x8, #4]
   14eac:	str	w9, [x8]
   14eb0:	b.cc	14ec8 <ZSTD_endStream@@Base+0x6f74>  // b.lo, b.ul, b.last
   14eb4:	ldp	x10, x9, [x28]
   14eb8:	sub	x9, x9, x10
   14ebc:	lsr	x9, x9, #3
   14ec0:	mov	w10, #0x2                   	// #2
   14ec4:	stp	w10, w9, [x28, #72]
   14ec8:	ldur	w1, [x29, #-100]
   14ecc:	strh	w23, [x8, #6]
   14ed0:	add	x8, x8, #0x8
   14ed4:	mov	w2, #0x5                   	// #5
   14ed8:	mov	x0, x22
   14edc:	str	x8, [x28, #8]
   14ee0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14ee4:	ldur	x8, [x29, #-96]
   14ee8:	ldur	w1, [x29, #-84]
   14eec:	mov	w2, #0x8                   	// #8
   14ef0:	str	w26, [x8, x0, lsl #2]
   14ef4:	mov	x0, x22
   14ef8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   14efc:	ldur	x8, [x29, #-80]
   14f00:	ldur	w9, [x29, #-52]
   14f04:	add	x22, x22, x19
   14f08:	stur	w25, [x29, #-52]
   14f0c:	str	w26, [x8, x0, lsl #2]
   14f10:	mov	w8, #0x1                   	// #1
   14f14:	tbnz	w8, #0, 14df0 <ZSTD_endStream@@Base+0x6e9c>
   14f18:	str	w9, [sp, #88]
   14f1c:	b	144ac <ZSTD_endStream@@Base+0x6558>
   14f20:	ldur	w20, [x29, #-104]
   14f24:	mov	x26, x23
   14f28:	b	14c50 <ZSTD_endStream@@Base+0x6cfc>
   14f2c:	mov	x26, x19
   14f30:	b	14c50 <ZSTD_endStream@@Base+0x6cfc>
   14f34:	ldr	w8, [x2]
   14f38:	ldr	x14, [x0, #8]
   14f3c:	ldr	w9, [x0, #24]
   14f40:	ldr	w10, [x0, #184]
   14f44:	stur	w8, [x29, #-52]
   14f48:	ldr	w8, [x2, #4]
   14f4c:	add	x13, x22, x4
   14f50:	mov	w12, #0x1                   	// #1
   14f54:	sub	w11, w13, w14
   14f58:	str	w8, [sp, #88]
   14f5c:	ldr	x8, [x0, #176]
   14f60:	lsl	w10, w12, w10
   14f64:	sub	w12, w11, w9
   14f68:	sub	w11, w11, w10
   14f6c:	ldr	w16, [x8, #24]
   14f70:	ldp	x18, x17, [x8]
   14f74:	cmp	w12, w10
   14f78:	csel	w9, w11, w9, hi  // hi = pmore
   14f7c:	stur	x9, [x29, #-16]
   14f80:	add	x9, x14, x9
   14f84:	stur	x9, [x29, #-64]
   14f88:	sub	w9, w22, w9
   14f8c:	add	x10, x17, x16
   14f90:	add	w9, w18, w9
   14f94:	cmp	w9, w10
   14f98:	sub	x15, x13, #0x8
   14f9c:	cinc	x28, x22, eq  // eq = none
   14fa0:	cmp	x28, x15
   14fa4:	str	x16, [sp, #48]
   14fa8:	str	x10, [sp, #24]
   14fac:	stur	x15, [x29, #-40]
   14fb0:	stur	x13, [x29, #-24]
   14fb4:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   14fb8:	ldr	x9, [x0, #48]
   14fbc:	str	x18, [sp, #112]
   14fc0:	sub	x27, x13, #0x20
   14fc4:	stur	x9, [x29, #-80]
   14fc8:	ldr	x9, [x0, #64]
   14fcc:	stur	x9, [x29, #-96]
   14fd0:	ldr	w9, [x0, #192]
   14fd4:	stur	w9, [x29, #-84]
   14fd8:	ldr	w9, [x0, #188]
   14fdc:	stur	w9, [x29, #-100]
   14fe0:	ldr	x9, [x8, #48]
   14fe4:	str	x9, [sp, #32]
   14fe8:	ldr	x9, [x8, #64]
   14fec:	str	x9, [sp, #16]
   14ff0:	ldp	w8, w10, [x8, #188]
   14ff4:	sub	w9, w17, w18
   14ff8:	str	x17, [sp, #104]
   14ffc:	stur	x14, [x29, #-32]
   15000:	str	w8, [sp, #64]
   15004:	sub	x8, x17, #0x1
   15008:	str	x8, [sp]
   1500c:	ldur	x8, [x29, #-16]
   15010:	str	w10, [sp, #84]
   15014:	str	x27, [sp, #96]
   15018:	add	w8, w8, w9
   1501c:	str	w8, [sp, #92]
   15020:	sub	x8, x17, w8, uxtw
   15024:	stur	x8, [x29, #-48]
   15028:	sub	x8, x14, #0x1
   1502c:	str	x8, [sp, #8]
   15030:	b	15048 <ZSTD_endStream@@Base+0x70f4>
   15034:	str	w25, [sp, #88]
   15038:	mov	x28, x22
   1503c:	ldur	x8, [x29, #-40]
   15040:	cmp	x28, x8
   15044:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   15048:	ldur	w1, [x29, #-84]
   1504c:	mov	w2, #0x8                   	// #8
   15050:	mov	x0, x28
   15054:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15058:	ldur	w1, [x29, #-100]
   1505c:	mov	x26, x0
   15060:	mov	w2, #0x6                   	// #6
   15064:	mov	x0, x28
   15068:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   1506c:	ldr	w1, [sp, #84]
   15070:	mov	x27, x0
   15074:	mov	w2, #0x8                   	// #8
   15078:	mov	x0, x28
   1507c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15080:	ldr	w1, [sp, #64]
   15084:	mov	x19, x0
   15088:	mov	w2, #0x6                   	// #6
   1508c:	mov	x0, x28
   15090:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15094:	ldur	x10, [x29, #-32]
   15098:	ldur	x13, [x29, #-80]
   1509c:	ldur	x11, [x29, #-96]
   150a0:	lsl	x8, x26, #2
   150a4:	sub	w14, w28, w10
   150a8:	lsl	x9, x27, #2
   150ac:	ldr	w27, [x13, x8]
   150b0:	ldr	w24, [x11, x9]
   150b4:	str	w14, [x11, x9]
   150b8:	ldur	w9, [x29, #-52]
   150bc:	add	w12, w14, #0x1
   150c0:	str	w12, [sp, #68]
   150c4:	ldur	x15, [x29, #-16]
   150c8:	sub	w20, w12, w9
   150cc:	ldr	w9, [sp, #92]
   150d0:	ldr	x12, [sp, #104]
   150d4:	mvn	w11, w20
   150d8:	add	x10, x10, x20
   150dc:	sub	w9, w20, w9
   150e0:	cmp	w20, w15
   150e4:	add	x9, x12, x9
   150e8:	add	w11, w15, w11
   150ec:	csel	x26, x9, x10, cc  // cc = lo, ul, last
   150f0:	cmp	w11, #0x3
   150f4:	str	x0, [sp, #72]
   150f8:	stur	w14, [x29, #-104]
   150fc:	str	w14, [x13, x8]
   15100:	b.cc	1517c <ZSTD_endStream@@Base+0x7228>  // b.lo, b.ul, b.last
   15104:	mov	x0, x26
   15108:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   1510c:	add	x23, x28, #0x1
   15110:	mov	w25, w0
   15114:	mov	x0, x23
   15118:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   1511c:	cmp	w25, w0
   15120:	b.ne	1517c <ZSTD_endStream@@Base+0x7228>  // b.any
   15124:	ldp	x2, x8, [x29, #-24]
   15128:	ldur	x4, [x29, #-64]
   1512c:	add	x0, x28, #0x5
   15130:	add	x1, x26, #0x4
   15134:	cmp	w20, w8
   15138:	ldr	x8, [sp, #112]
   1513c:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   15140:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   15144:	ldur	x28, [x29, #-72]
   15148:	ldr	x27, [sp, #96]
   1514c:	mov	x25, x0
   15150:	sub	x26, x23, x22
   15154:	ldr	x0, [x28, #24]
   15158:	cmp	x23, x27
   1515c:	b.ls	15464 <ZSTD_endStream@@Base+0x7510>  // b.plast
   15160:	mov	x1, x22
   15164:	mov	x2, x23
   15168:	mov	x3, x27
   1516c:	mov	x20, x23
   15170:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   15174:	ldur	w23, [x29, #-104]
   15178:	b	154d4 <ZSTD_endStream@@Base+0x7580>
   1517c:	ldur	x8, [x29, #-16]
   15180:	cmp	w27, w8
   15184:	b.ls	15224 <ZSTD_endStream@@Base+0x72d0>  // b.plast
   15188:	ldur	x8, [x29, #-32]
   1518c:	add	x19, x8, x27
   15190:	mov	x0, x19
   15194:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15198:	mov	x25, x0
   1519c:	mov	x0, x28
   151a0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   151a4:	cmp	x25, x0
   151a8:	b.ne	152fc <ZSTD_endStream@@Base+0x73a8>  // b.any
   151ac:	ldur	x2, [x29, #-24]
   151b0:	ldur	w20, [x29, #-104]
   151b4:	add	x0, x28, #0x8
   151b8:	add	x1, x19, #0x8
   151bc:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   151c0:	add	x21, x0, #0x8
   151c4:	cmp	x28, x22
   151c8:	sub	w8, w28, w19
   151cc:	str	w8, [sp, #60]
   151d0:	b.ls	15560 <ZSTD_endStream@@Base+0x760c>  // b.plast
   151d4:	ldr	x8, [sp, #8]
   151d8:	sub	x9, x28, #0x1
   151dc:	ldur	x28, [x29, #-72]
   151e0:	add	x8, x8, x27
   151e4:	ldr	x27, [sp, #96]
   151e8:	ldrb	w10, [x9]
   151ec:	ldrb	w11, [x8]
   151f0:	cmp	w10, w11
   151f4:	b.ne	157d8 <ZSTD_endStream@@Base+0x7884>  // b.any
   151f8:	add	x21, x21, #0x1
   151fc:	cmp	x9, x22
   15200:	sub	x10, x9, #0x1
   15204:	b.ls	1521c <ZSTD_endStream@@Base+0x72c8>  // b.plast
   15208:	ldur	x9, [x29, #-64]
   1520c:	cmp	x8, x9
   15210:	sub	x8, x8, #0x1
   15214:	mov	x9, x10
   15218:	b.hi	151e8 <ZSTD_endStream@@Base+0x7294>  // b.pmore
   1521c:	add	x26, x10, #0x1
   15220:	b	157dc <ZSTD_endStream@@Base+0x7888>
   15224:	ldr	x8, [sp, #32]
   15228:	ldr	w26, [x8, x19, lsl #2]
   1522c:	ldr	x8, [sp, #48]
   15230:	cmp	w26, w8
   15234:	b.ls	152e0 <ZSTD_endStream@@Base+0x738c>  // b.plast
   15238:	ldr	x8, [sp, #104]
   1523c:	add	x19, x8, x26
   15240:	mov	x0, x19
   15244:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15248:	mov	x25, x0
   1524c:	mov	x0, x28
   15250:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15254:	cmp	x25, x0
   15258:	b.ne	152e0 <ZSTD_endStream@@Base+0x738c>  // b.any
   1525c:	ldur	x2, [x29, #-24]
   15260:	ldr	x3, [sp, #112]
   15264:	ldur	x4, [x29, #-64]
   15268:	add	x0, x28, #0x8
   1526c:	add	x1, x19, #0x8
   15270:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   15274:	ldur	w23, [x29, #-104]
   15278:	ldr	w9, [sp, #92]
   1527c:	ldr	x27, [sp, #96]
   15280:	add	x21, x0, #0x8
   15284:	sub	w8, w23, w26
   15288:	cmp	x28, x22
   1528c:	sub	w8, w8, w9
   15290:	str	w8, [sp, #60]
   15294:	b.ls	15658 <ZSTD_endStream@@Base+0x7704>  // b.plast
   15298:	ldr	x8, [sp]
   1529c:	ldr	x12, [sp, #24]
   152a0:	sub	x9, x28, #0x1
   152a4:	add	x8, x8, x26
   152a8:	ldrb	w10, [x9]
   152ac:	ldrb	w11, [x8]
   152b0:	cmp	w10, w11
   152b4:	b.ne	15654 <ZSTD_endStream@@Base+0x7700>  // b.any
   152b8:	add	x21, x21, #0x1
   152bc:	cmp	x9, x22
   152c0:	sub	x10, x9, #0x1
   152c4:	b.ls	152d8 <ZSTD_endStream@@Base+0x7384>  // b.plast
   152c8:	cmp	x8, x12
   152cc:	sub	x8, x8, #0x1
   152d0:	mov	x9, x10
   152d4:	b.hi	152a8 <ZSTD_endStream@@Base+0x7354>  // b.pmore
   152d8:	add	x28, x10, #0x1
   152dc:	b	15658 <ZSTD_endStream@@Base+0x7704>
   152e0:	ldr	x27, [sp, #96]
   152e4:	ldur	w23, [x29, #-104]
   152e8:	mov	w8, wzr
   152ec:	cmp	w8, #0x7
   152f0:	b.eq	15664 <ZSTD_endStream@@Base+0x7710>  // b.none
   152f4:	cbz	w8, 15300 <ZSTD_endStream@@Base+0x73ac>
   152f8:	b	1503c <ZSTD_endStream@@Base+0x70e8>
   152fc:	ldur	w23, [x29, #-104]
   15300:	ldur	x8, [x29, #-16]
   15304:	cmp	w24, w8
   15308:	b.ls	15334 <ZSTD_endStream@@Base+0x73e0>  // b.plast
   1530c:	ldur	x8, [x29, #-32]
   15310:	add	x26, x8, x24
   15314:	mov	x0, x26
   15318:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   1531c:	mov	w19, w0
   15320:	mov	x0, x28
   15324:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15328:	cmp	w19, w0
   1532c:	b.eq	15384 <ZSTD_endStream@@Base+0x7430>  // b.none
   15330:	b	15550 <ZSTD_endStream@@Base+0x75fc>
   15334:	ldr	x8, [sp, #16]
   15338:	ldr	x9, [sp, #72]
   1533c:	ldr	w25, [x8, x9, lsl #2]
   15340:	ldr	x8, [sp, #48]
   15344:	cmp	w25, w8
   15348:	ldr	x8, [sp, #104]
   1534c:	add	x26, x8, x25
   15350:	b.ls	15540 <ZSTD_endStream@@Base+0x75ec>  // b.plast
   15354:	mov	x0, x26
   15358:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   1535c:	mov	w19, w0
   15360:	mov	x0, x28
   15364:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15368:	cmp	w19, w0
   1536c:	b.ne	15540 <ZSTD_endStream@@Base+0x75ec>  // b.any
   15370:	mov	w8, #0xa                   	// #10
   15374:	cmp	w8, #0xa
   15378:	b.ne	1554c <ZSTD_endStream@@Base+0x75f8>  // b.any
   1537c:	ldr	w8, [sp, #92]
   15380:	add	w24, w25, w8
   15384:	ldur	w1, [x29, #-84]
   15388:	add	x20, x28, #0x1
   1538c:	mov	w2, #0x8                   	// #8
   15390:	mov	x0, x20
   15394:	str	x24, [sp, #72]
   15398:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   1539c:	ldr	w1, [sp, #84]
   153a0:	mov	x19, x0
   153a4:	mov	w2, #0x8                   	// #8
   153a8:	mov	x0, x20
   153ac:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   153b0:	ldur	x9, [x29, #-80]
   153b4:	lsl	x8, x19, #2
   153b8:	ldur	x10, [x29, #-16]
   153bc:	ldr	w24, [sp, #68]
   153c0:	ldr	w27, [x9, x8]
   153c4:	str	w24, [x9, x8]
   153c8:	cmp	w27, w10
   153cc:	b.ls	15570 <ZSTD_endStream@@Base+0x761c>  // b.plast
   153d0:	ldur	x8, [x29, #-32]
   153d4:	add	x19, x8, x27
   153d8:	mov	x0, x19
   153dc:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   153e0:	mov	x25, x0
   153e4:	mov	x0, x20
   153e8:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   153ec:	cmp	x25, x0
   153f0:	b.ne	15640 <ZSTD_endStream@@Base+0x76ec>  // b.any
   153f4:	ldur	x2, [x29, #-24]
   153f8:	add	x0, x28, #0x9
   153fc:	add	x1, x19, #0x8
   15400:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   15404:	add	x21, x0, #0x8
   15408:	cmp	x20, x22
   1540c:	sub	w8, w20, w19
   15410:	str	w8, [sp, #60]
   15414:	b.ls	15674 <ZSTD_endStream@@Base+0x7720>  // b.plast
   15418:	ldr	x8, [sp, #8]
   1541c:	ldr	x20, [sp, #72]
   15420:	add	x8, x8, x27
   15424:	ldr	x27, [sp, #96]
   15428:	ldrb	w9, [x28]
   1542c:	ldrb	w10, [x8]
   15430:	cmp	w9, w10
   15434:	b.ne	15688 <ZSTD_endStream@@Base+0x7734>  // b.any
   15438:	add	x21, x21, #0x1
   1543c:	cmp	x28, x22
   15440:	sub	x9, x28, #0x1
   15444:	b.ls	1545c <ZSTD_endStream@@Base+0x7508>  // b.plast
   15448:	ldur	x10, [x29, #-64]
   1544c:	mov	x28, x9
   15450:	cmp	x8, x10
   15454:	sub	x8, x8, #0x1
   15458:	b.hi	15428 <ZSTD_endStream@@Base+0x74d4>  // b.pmore
   1545c:	add	x19, x9, #0x1
   15460:	b	1568c <ZSTD_endStream@@Base+0x7738>
   15464:	mov	x1, x22
   15468:	mov	x20, x23
   1546c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   15470:	ldur	w23, [x29, #-104]
   15474:	cmp	x26, #0x11
   15478:	b.cc	154d4 <ZSTD_endStream@@Base+0x7580>  // b.lo, b.ul, b.last
   1547c:	ldr	x19, [x28, #24]
   15480:	add	x1, x22, #0x10
   15484:	add	x0, x19, #0x10
   15488:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1548c:	add	x0, x19, #0x20
   15490:	add	x1, x22, #0x20
   15494:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   15498:	cmp	x26, #0x31
   1549c:	b.lt	154d4 <ZSTD_endStream@@Base+0x7580>  // b.tstop
   154a0:	add	x21, x19, x26
   154a4:	add	x19, x19, #0x30
   154a8:	add	x22, x22, #0x40
   154ac:	sub	x1, x22, #0x10
   154b0:	mov	x0, x19
   154b4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   154b8:	add	x0, x19, #0x10
   154bc:	mov	x1, x22
   154c0:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   154c4:	add	x19, x19, #0x20
   154c8:	cmp	x19, x21
   154cc:	add	x22, x22, #0x20
   154d0:	b.cc	154ac <ZSTD_endStream@@Base+0x7558>  // b.lo, b.ul, b.last
   154d4:	ldr	x9, [x28, #24]
   154d8:	add	x21, x25, #0x4
   154dc:	add	x8, x25, #0x1
   154e0:	cmp	x26, #0x10, lsl #12
   154e4:	add	x9, x9, x26
   154e8:	str	x9, [x28, #24]
   154ec:	b.cc	15504 <ZSTD_endStream@@Base+0x75b0>  // b.lo, b.ul, b.last
   154f0:	ldp	x10, x9, [x28]
   154f4:	sub	x9, x9, x10
   154f8:	lsr	x9, x9, #3
   154fc:	mov	w10, #0x1                   	// #1
   15500:	stp	w10, w9, [x28, #72]
   15504:	ldr	x9, [x28, #8]
   15508:	cmp	x8, #0x10, lsl #12
   1550c:	mov	w10, #0x1                   	// #1
   15510:	strh	w26, [x9, #4]
   15514:	str	w10, [x9]
   15518:	b.cc	15538 <ZSTD_endStream@@Base+0x75e4>  // b.lo, b.ul, b.last
   1551c:	ldp	x11, x10, [x28]
   15520:	mov	x26, x20
   15524:	sub	x10, x10, x11
   15528:	lsr	x10, x10, #3
   1552c:	mov	w11, #0x2                   	// #2
   15530:	stp	w11, w10, [x28, #72]
   15534:	b	158d4 <ZSTD_endStream@@Base+0x7980>
   15538:	mov	x26, x20
   1553c:	b	158d4 <ZSTD_endStream@@Base+0x7980>
   15540:	mov	w8, wzr
   15544:	cmp	w8, #0xa
   15548:	b.eq	1537c <ZSTD_endStream@@Base+0x7428>  // b.none
   1554c:	cbnz	w8, 1503c <ZSTD_endStream@@Base+0x70e8>
   15550:	sub	x8, x28, x22
   15554:	add	x8, x28, x8, asr #8
   15558:	add	x28, x8, #0x1
   1555c:	b	1503c <ZSTD_endStream@@Base+0x70e8>
   15560:	mov	x26, x28
   15564:	ldur	x28, [x29, #-72]
   15568:	ldr	x27, [sp, #96]
   1556c:	b	157dc <ZSTD_endStream@@Base+0x7888>
   15570:	ldr	x8, [sp, #32]
   15574:	ldr	w27, [x8, x0, lsl #2]
   15578:	ldr	x8, [sp, #48]
   1557c:	cmp	w27, w8
   15580:	b.ls	15628 <ZSTD_endStream@@Base+0x76d4>  // b.plast
   15584:	ldr	x8, [sp, #104]
   15588:	add	x19, x8, x27
   1558c:	mov	x0, x19
   15590:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15594:	mov	x25, x0
   15598:	mov	x0, x20
   1559c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   155a0:	cmp	x25, x0
   155a4:	b.ne	15628 <ZSTD_endStream@@Base+0x76d4>  // b.any
   155a8:	ldur	x2, [x29, #-24]
   155ac:	ldr	x3, [sp, #112]
   155b0:	ldur	x4, [x29, #-64]
   155b4:	add	x0, x28, #0x9
   155b8:	add	x1, x19, #0x8
   155bc:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   155c0:	ldr	w9, [sp, #92]
   155c4:	sub	w8, w24, w27
   155c8:	add	x21, x0, #0x8
   155cc:	cmp	x20, x22
   155d0:	sub	w8, w8, w9
   155d4:	str	w8, [sp, #60]
   155d8:	b.ls	15694 <ZSTD_endStream@@Base+0x7740>  // b.plast
   155dc:	ldr	x8, [sp]
   155e0:	ldr	x20, [sp, #72]
   155e4:	add	x8, x8, x27
   155e8:	ldr	x27, [sp, #96]
   155ec:	ldrb	w9, [x28]
   155f0:	ldrb	w10, [x8]
   155f4:	cmp	w9, w10
   155f8:	b.ne	156a0 <ZSTD_endStream@@Base+0x774c>  // b.any
   155fc:	add	x21, x21, #0x1
   15600:	cmp	x28, x22
   15604:	sub	x9, x28, #0x1
   15608:	b.ls	15620 <ZSTD_endStream@@Base+0x76cc>  // b.plast
   1560c:	ldr	x10, [sp, #24]
   15610:	mov	x28, x9
   15614:	cmp	x8, x10
   15618:	sub	x8, x8, #0x1
   1561c:	b.hi	155ec <ZSTD_endStream@@Base+0x7698>  // b.pmore
   15620:	add	x28, x9, #0x1
   15624:	b	156a4 <ZSTD_endStream@@Base+0x7750>
   15628:	mov	w8, wzr
   1562c:	ldr	x27, [sp, #96]
   15630:	ldr	x20, [sp, #72]
   15634:	mov	x19, x28
   15638:	cbnz	w8, 156b0 <ZSTD_endStream@@Base+0x775c>
   1563c:	b	15648 <ZSTD_endStream@@Base+0x76f4>
   15640:	ldr	x27, [sp, #96]
   15644:	ldr	x20, [sp, #72]
   15648:	mov	w8, wzr
   1564c:	mov	x19, x28
   15650:	b	156b0 <ZSTD_endStream@@Base+0x775c>
   15654:	add	x28, x9, #0x1
   15658:	mov	w8, #0x7                   	// #7
   1565c:	cmp	w8, #0x7
   15660:	b.ne	152f4 <ZSTD_endStream@@Base+0x73a0>  // b.any
   15664:	mov	x26, x28
   15668:	ldur	x28, [x29, #-72]
   1566c:	mov	w20, w23
   15670:	b	157dc <ZSTD_endStream@@Base+0x7888>
   15674:	mov	x19, x20
   15678:	ldr	x27, [sp, #96]
   1567c:	ldr	x20, [sp, #72]
   15680:	mov	w8, #0x7                   	// #7
   15684:	b	156b0 <ZSTD_endStream@@Base+0x775c>
   15688:	add	x19, x28, #0x1
   1568c:	mov	w8, #0x7                   	// #7
   15690:	b	156b0 <ZSTD_endStream@@Base+0x775c>
   15694:	mov	w8, #0x7                   	// #7
   15698:	mov	x28, x20
   1569c:	b	1562c <ZSTD_endStream@@Base+0x76d8>
   156a0:	add	x28, x28, #0x1
   156a4:	mov	w8, #0x7                   	// #7
   156a8:	mov	x19, x28
   156ac:	cbz	w8, 15648 <ZSTD_endStream@@Base+0x76f4>
   156b0:	cmp	w8, #0x7
   156b4:	b.eq	1574c <ZSTD_endStream@@Base+0x77f8>  // b.none
   156b8:	cbnz	w8, 1575c <ZSTD_endStream@@Base+0x7808>
   156bc:	ldur	x8, [x29, #-16]
   156c0:	add	x0, x19, #0x4
   156c4:	add	x1, x26, #0x4
   156c8:	cmp	w20, w8
   156cc:	b.cs	15764 <ZSTD_endStream@@Base+0x7810>  // b.hs, b.nlast
   156d0:	ldur	x2, [x29, #-24]
   156d4:	ldr	x3, [sp, #112]
   156d8:	ldur	x4, [x29, #-64]
   156dc:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   156e0:	ldr	x8, [sp, #24]
   156e4:	ldur	x28, [x29, #-72]
   156e8:	add	x21, x0, #0x4
   156ec:	cmp	x26, x8
   156f0:	mov	x8, x20
   156f4:	ldur	w20, [x29, #-104]
   156f8:	sub	w8, w20, w8
   156fc:	str	w8, [sp, #60]
   15700:	b.ls	15ab8 <ZSTD_endStream@@Base+0x7b64>  // b.plast
   15704:	cmp	x19, x22
   15708:	b.ls	15ab8 <ZSTD_endStream@@Base+0x7b64>  // b.plast
   1570c:	sub	x9, x19, #0x1
   15710:	sub	x8, x26, #0x1
   15714:	ldrb	w10, [x9]
   15718:	ldrb	w11, [x8]
   1571c:	cmp	w10, w11
   15720:	b.ne	157d8 <ZSTD_endStream@@Base+0x7884>  // b.any
   15724:	add	x21, x21, #0x1
   15728:	cmp	x9, x22
   1572c:	sub	x10, x9, #0x1
   15730:	b.ls	1521c <ZSTD_endStream@@Base+0x72c8>  // b.plast
   15734:	ldr	x9, [sp, #24]
   15738:	cmp	x8, x9
   1573c:	sub	x8, x8, #0x1
   15740:	mov	x9, x10
   15744:	b.hi	15714 <ZSTD_endStream@@Base+0x77c0>  // b.pmore
   15748:	b	1521c <ZSTD_endStream@@Base+0x72c8>
   1574c:	ldur	x28, [x29, #-72]
   15750:	mov	w20, w23
   15754:	mov	x26, x19
   15758:	b	157dc <ZSTD_endStream@@Base+0x7888>
   1575c:	mov	x28, x19
   15760:	b	1503c <ZSTD_endStream@@Base+0x70e8>
   15764:	ldur	x2, [x29, #-24]
   15768:	mov	x23, x19
   1576c:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   15770:	ldur	x8, [x29, #-64]
   15774:	ldur	x28, [x29, #-72]
   15778:	add	x21, x0, #0x4
   1577c:	cmp	x26, x8
   15780:	sub	w8, w23, w26
   15784:	str	w8, [sp, #60]
   15788:	b.ls	15aac <ZSTD_endStream@@Base+0x7b58>  // b.plast
   1578c:	cmp	x23, x22
   15790:	b.ls	15aac <ZSTD_endStream@@Base+0x7b58>  // b.plast
   15794:	ldur	w20, [x29, #-104]
   15798:	sub	x9, x23, #0x1
   1579c:	sub	x8, x26, #0x1
   157a0:	ldrb	w10, [x9]
   157a4:	ldrb	w11, [x8]
   157a8:	cmp	w10, w11
   157ac:	b.ne	157d8 <ZSTD_endStream@@Base+0x7884>  // b.any
   157b0:	add	x21, x21, #0x1
   157b4:	cmp	x9, x22
   157b8:	sub	x10, x9, #0x1
   157bc:	b.ls	1521c <ZSTD_endStream@@Base+0x72c8>  // b.plast
   157c0:	ldur	x9, [x29, #-64]
   157c4:	cmp	x8, x9
   157c8:	sub	x8, x8, #0x1
   157cc:	mov	x9, x10
   157d0:	b.hi	157a0 <ZSTD_endStream@@Base+0x784c>  // b.pmore
   157d4:	b	1521c <ZSTD_endStream@@Base+0x72c8>
   157d8:	add	x26, x9, #0x1
   157dc:	ldr	x0, [x28, #24]
   157e0:	cmp	x26, x27
   157e4:	sub	x23, x26, x22
   157e8:	b.ls	15800 <ZSTD_endStream@@Base+0x78ac>  // b.plast
   157ec:	mov	x1, x22
   157f0:	mov	x2, x26
   157f4:	mov	x3, x27
   157f8:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   157fc:	b	15868 <ZSTD_endStream@@Base+0x7914>
   15800:	mov	x1, x22
   15804:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   15808:	cmp	x23, #0x11
   1580c:	b.cc	15868 <ZSTD_endStream@@Base+0x7914>  // b.lo, b.ul, b.last
   15810:	ldr	x19, [x28, #24]
   15814:	add	x1, x22, #0x10
   15818:	add	x0, x19, #0x10
   1581c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   15820:	add	x0, x19, #0x20
   15824:	add	x1, x22, #0x20
   15828:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1582c:	cmp	x23, #0x31
   15830:	b.lt	15868 <ZSTD_endStream@@Base+0x7914>  // b.tstop
   15834:	add	x25, x19, x23
   15838:	add	x19, x19, #0x30
   1583c:	add	x22, x22, #0x40
   15840:	sub	x1, x22, #0x10
   15844:	mov	x0, x19
   15848:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1584c:	add	x0, x19, #0x10
   15850:	mov	x1, x22
   15854:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   15858:	add	x19, x19, #0x20
   1585c:	cmp	x19, x25
   15860:	add	x22, x22, #0x20
   15864:	b.cc	15840 <ZSTD_endStream@@Base+0x78ec>  // b.lo, b.ul, b.last
   15868:	ldr	x9, [x28, #24]
   1586c:	sub	x8, x21, #0x3
   15870:	cmp	x23, #0x10, lsl #12
   15874:	add	x9, x9, x23
   15878:	str	x9, [x28, #24]
   1587c:	b.cc	15894 <ZSTD_endStream@@Base+0x7940>  // b.lo, b.ul, b.last
   15880:	ldp	x10, x9, [x28]
   15884:	sub	x9, x9, x10
   15888:	lsr	x9, x9, #3
   1588c:	mov	w10, #0x1                   	// #1
   15890:	stp	w10, w9, [x28, #72]
   15894:	ldr	w12, [sp, #60]
   15898:	ldr	x9, [x28, #8]
   1589c:	cmp	x8, #0x10, lsl #12
   158a0:	add	w10, w12, #0x3
   158a4:	strh	w23, [x9, #4]
   158a8:	str	w10, [x9]
   158ac:	b.cc	158c4 <ZSTD_endStream@@Base+0x7970>  // b.lo, b.ul, b.last
   158b0:	ldp	x11, x10, [x28]
   158b4:	sub	x10, x10, x11
   158b8:	lsr	x10, x10, #3
   158bc:	mov	w11, #0x2                   	// #2
   158c0:	stp	w11, w10, [x28, #72]
   158c4:	ldur	w10, [x29, #-52]
   158c8:	mov	w23, w20
   158cc:	stur	w12, [x29, #-52]
   158d0:	str	w10, [sp, #88]
   158d4:	strh	w8, [x9, #6]
   158d8:	add	x8, x9, #0x8
   158dc:	ldur	x9, [x29, #-40]
   158e0:	add	x22, x26, x21
   158e4:	str	x8, [x28, #8]
   158e8:	cmp	x22, x9
   158ec:	b.hi	15038 <ZSTD_endStream@@Base+0x70e4>  // b.pmore
   158f0:	ldur	x26, [x29, #-32]
   158f4:	ldur	w24, [x29, #-84]
   158f8:	add	w20, w23, #0x2
   158fc:	mov	w2, #0x8                   	// #8
   15900:	add	x19, x26, x20
   15904:	mov	x0, x19
   15908:	mov	w1, w24
   1590c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15910:	ldur	x27, [x29, #-80]
   15914:	mov	w2, #0x8                   	// #8
   15918:	mov	w1, w24
   1591c:	str	w20, [x27, x0, lsl #2]
   15920:	sub	x0, x22, #0x2
   15924:	sub	w25, w0, w26
   15928:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   1592c:	ldur	w23, [x29, #-100]
   15930:	str	w25, [x27, x0, lsl #2]
   15934:	ldr	x27, [sp, #96]
   15938:	mov	w2, #0x6                   	// #6
   1593c:	mov	x0, x19
   15940:	mov	w1, w23
   15944:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15948:	ldur	x25, [x29, #-96]
   1594c:	mov	w2, #0x6                   	// #6
   15950:	mov	w1, w23
   15954:	str	w20, [x25, x0, lsl #2]
   15958:	sub	x0, x22, #0x1
   1595c:	sub	w19, w0, w26
   15960:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15964:	ldr	w9, [sp, #88]
   15968:	str	w19, [x25, x0, lsl #2]
   1596c:	b	1597c <ZSTD_endStream@@Base+0x7a28>
   15970:	mov	w8, wzr
   15974:	mov	w9, w25
   15978:	tbz	w8, #0, 15aa4 <ZSTD_endStream@@Base+0x7b50>
   1597c:	ldur	x8, [x29, #-40]
   15980:	mov	w25, w9
   15984:	cmp	x22, x8
   15988:	b.hi	15034 <ZSTD_endStream@@Base+0x70e0>  // b.pmore
   1598c:	ldur	x8, [x29, #-32]
   15990:	ldur	x11, [x29, #-16]
   15994:	ldur	x10, [x29, #-48]
   15998:	sub	w26, w22, w8
   1599c:	sub	w20, w26, w25
   159a0:	mvn	w9, w20
   159a4:	cmp	w20, w11
   159a8:	add	w9, w11, w9
   159ac:	csel	x8, x10, x8, cc  // cc = lo, ul, last
   159b0:	cmp	w9, #0x3
   159b4:	b.cc	15970 <ZSTD_endStream@@Base+0x7a1c>  // b.lo, b.ul, b.last
   159b8:	add	x19, x8, x20
   159bc:	mov	x0, x19
   159c0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   159c4:	mov	w23, w0
   159c8:	mov	x0, x22
   159cc:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   159d0:	cmp	w23, w0
   159d4:	b.ne	15970 <ZSTD_endStream@@Base+0x7a1c>  // b.any
   159d8:	ldp	x2, x8, [x29, #-24]
   159dc:	ldur	x4, [x29, #-64]
   159e0:	add	x0, x22, #0x4
   159e4:	add	x1, x19, #0x4
   159e8:	cmp	w20, w8
   159ec:	ldr	x8, [sp, #112]
   159f0:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   159f4:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   159f8:	mov	x19, x0
   159fc:	ldr	x0, [x28, #24]
   15a00:	cmp	x22, x27
   15a04:	add	x23, x19, #0x1
   15a08:	mov	x1, x22
   15a0c:	b.ls	15a20 <ZSTD_endStream@@Base+0x7acc>  // b.plast
   15a10:	mov	x2, x22
   15a14:	mov	x3, x27
   15a18:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   15a1c:	b	15a24 <ZSTD_endStream@@Base+0x7ad0>
   15a20:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   15a24:	ldr	x8, [x28, #8]
   15a28:	add	x19, x19, #0x4
   15a2c:	cmp	x23, #0x10, lsl #12
   15a30:	mov	w9, #0x1                   	// #1
   15a34:	strh	wzr, [x8, #4]
   15a38:	str	w9, [x8]
   15a3c:	b.cc	15a54 <ZSTD_endStream@@Base+0x7b00>  // b.lo, b.ul, b.last
   15a40:	ldp	x10, x9, [x28]
   15a44:	sub	x9, x9, x10
   15a48:	lsr	x9, x9, #3
   15a4c:	mov	w10, #0x2                   	// #2
   15a50:	stp	w10, w9, [x28, #72]
   15a54:	ldur	w1, [x29, #-100]
   15a58:	strh	w23, [x8, #6]
   15a5c:	add	x8, x8, #0x8
   15a60:	mov	w2, #0x6                   	// #6
   15a64:	mov	x0, x22
   15a68:	str	x8, [x28, #8]
   15a6c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15a70:	ldur	x8, [x29, #-96]
   15a74:	ldur	w1, [x29, #-84]
   15a78:	mov	w2, #0x8                   	// #8
   15a7c:	str	w26, [x8, x0, lsl #2]
   15a80:	mov	x0, x22
   15a84:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15a88:	ldur	x8, [x29, #-80]
   15a8c:	ldur	w9, [x29, #-52]
   15a90:	add	x22, x22, x19
   15a94:	stur	w25, [x29, #-52]
   15a98:	str	w26, [x8, x0, lsl #2]
   15a9c:	mov	w8, #0x1                   	// #1
   15aa0:	tbnz	w8, #0, 1597c <ZSTD_endStream@@Base+0x7a28>
   15aa4:	str	w9, [sp, #88]
   15aa8:	b	15038 <ZSTD_endStream@@Base+0x70e4>
   15aac:	ldur	w20, [x29, #-104]
   15ab0:	mov	x26, x23
   15ab4:	b	157dc <ZSTD_endStream@@Base+0x7888>
   15ab8:	mov	x26, x19
   15abc:	b	157dc <ZSTD_endStream@@Base+0x7888>
   15ac0:	ldr	w8, [x2]
   15ac4:	ldr	x14, [x0, #8]
   15ac8:	ldr	w9, [x0, #24]
   15acc:	ldr	w10, [x0, #184]
   15ad0:	stur	w8, [x29, #-52]
   15ad4:	ldr	w8, [x2, #4]
   15ad8:	add	x13, x22, x4
   15adc:	mov	w12, #0x1                   	// #1
   15ae0:	sub	w11, w13, w14
   15ae4:	str	w8, [sp, #88]
   15ae8:	ldr	x8, [x0, #176]
   15aec:	lsl	w10, w12, w10
   15af0:	sub	w12, w11, w9
   15af4:	sub	w11, w11, w10
   15af8:	ldr	w16, [x8, #24]
   15afc:	ldp	x18, x17, [x8]
   15b00:	cmp	w12, w10
   15b04:	csel	w9, w11, w9, hi  // hi = pmore
   15b08:	stur	x9, [x29, #-16]
   15b0c:	add	x9, x14, x9
   15b10:	stur	x9, [x29, #-64]
   15b14:	sub	w9, w22, w9
   15b18:	add	x10, x17, x16
   15b1c:	add	w9, w18, w9
   15b20:	cmp	w9, w10
   15b24:	sub	x15, x13, #0x8
   15b28:	cinc	x28, x22, eq  // eq = none
   15b2c:	cmp	x28, x15
   15b30:	str	x16, [sp, #48]
   15b34:	str	x10, [sp, #24]
   15b38:	stur	x15, [x29, #-40]
   15b3c:	stur	x13, [x29, #-24]
   15b40:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   15b44:	ldr	x9, [x0, #48]
   15b48:	str	x18, [sp, #112]
   15b4c:	sub	x27, x13, #0x20
   15b50:	stur	x9, [x29, #-80]
   15b54:	ldr	x9, [x0, #64]
   15b58:	stur	x9, [x29, #-96]
   15b5c:	ldr	w9, [x0, #192]
   15b60:	stur	w9, [x29, #-84]
   15b64:	ldr	w9, [x0, #188]
   15b68:	stur	w9, [x29, #-100]
   15b6c:	ldr	x9, [x8, #48]
   15b70:	str	x9, [sp, #32]
   15b74:	ldr	x9, [x8, #64]
   15b78:	str	x9, [sp, #16]
   15b7c:	ldp	w8, w10, [x8, #188]
   15b80:	sub	w9, w17, w18
   15b84:	str	x17, [sp, #104]
   15b88:	stur	x14, [x29, #-32]
   15b8c:	str	w8, [sp, #64]
   15b90:	sub	x8, x17, #0x1
   15b94:	str	x8, [sp]
   15b98:	ldur	x8, [x29, #-16]
   15b9c:	str	w10, [sp, #84]
   15ba0:	str	x27, [sp, #96]
   15ba4:	add	w8, w8, w9
   15ba8:	str	w8, [sp, #92]
   15bac:	sub	x8, x17, w8, uxtw
   15bb0:	stur	x8, [x29, #-48]
   15bb4:	sub	x8, x14, #0x1
   15bb8:	str	x8, [sp, #8]
   15bbc:	b	15bd4 <ZSTD_endStream@@Base+0x7c80>
   15bc0:	str	w25, [sp, #88]
   15bc4:	mov	x28, x22
   15bc8:	ldur	x8, [x29, #-40]
   15bcc:	cmp	x28, x8
   15bd0:	b.cs	1664c <ZSTD_endStream@@Base+0x86f8>  // b.hs, b.nlast
   15bd4:	ldur	w1, [x29, #-84]
   15bd8:	mov	w2, #0x8                   	// #8
   15bdc:	mov	x0, x28
   15be0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15be4:	ldur	w1, [x29, #-100]
   15be8:	mov	x26, x0
   15bec:	mov	w2, #0x4                   	// #4
   15bf0:	mov	x0, x28
   15bf4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15bf8:	ldr	w1, [sp, #84]
   15bfc:	mov	x27, x0
   15c00:	mov	w2, #0x8                   	// #8
   15c04:	mov	x0, x28
   15c08:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15c0c:	ldr	w1, [sp, #64]
   15c10:	mov	x19, x0
   15c14:	mov	w2, #0x4                   	// #4
   15c18:	mov	x0, x28
   15c1c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15c20:	ldur	x10, [x29, #-32]
   15c24:	ldur	x13, [x29, #-80]
   15c28:	ldur	x11, [x29, #-96]
   15c2c:	lsl	x8, x26, #2
   15c30:	sub	w14, w28, w10
   15c34:	lsl	x9, x27, #2
   15c38:	ldr	w27, [x13, x8]
   15c3c:	ldr	w24, [x11, x9]
   15c40:	str	w14, [x11, x9]
   15c44:	ldur	w9, [x29, #-52]
   15c48:	add	w12, w14, #0x1
   15c4c:	str	w12, [sp, #68]
   15c50:	ldur	x15, [x29, #-16]
   15c54:	sub	w20, w12, w9
   15c58:	ldr	w9, [sp, #92]
   15c5c:	ldr	x12, [sp, #104]
   15c60:	mvn	w11, w20
   15c64:	add	x10, x10, x20
   15c68:	sub	w9, w20, w9
   15c6c:	cmp	w20, w15
   15c70:	add	x9, x12, x9
   15c74:	add	w11, w15, w11
   15c78:	csel	x26, x9, x10, cc  // cc = lo, ul, last
   15c7c:	cmp	w11, #0x3
   15c80:	str	x0, [sp, #72]
   15c84:	stur	w14, [x29, #-104]
   15c88:	str	w14, [x13, x8]
   15c8c:	b.cc	15d08 <ZSTD_endStream@@Base+0x7db4>  // b.lo, b.ul, b.last
   15c90:	mov	x0, x26
   15c94:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15c98:	add	x23, x28, #0x1
   15c9c:	mov	w25, w0
   15ca0:	mov	x0, x23
   15ca4:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15ca8:	cmp	w25, w0
   15cac:	b.ne	15d08 <ZSTD_endStream@@Base+0x7db4>  // b.any
   15cb0:	ldp	x2, x8, [x29, #-24]
   15cb4:	ldur	x4, [x29, #-64]
   15cb8:	add	x0, x28, #0x5
   15cbc:	add	x1, x26, #0x4
   15cc0:	cmp	w20, w8
   15cc4:	ldr	x8, [sp, #112]
   15cc8:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   15ccc:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   15cd0:	ldur	x28, [x29, #-72]
   15cd4:	ldr	x27, [sp, #96]
   15cd8:	mov	x25, x0
   15cdc:	sub	x26, x23, x22
   15ce0:	ldr	x0, [x28, #24]
   15ce4:	cmp	x23, x27
   15ce8:	b.ls	15ff0 <ZSTD_endStream@@Base+0x809c>  // b.plast
   15cec:	mov	x1, x22
   15cf0:	mov	x2, x23
   15cf4:	mov	x3, x27
   15cf8:	mov	x20, x23
   15cfc:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   15d00:	ldur	w23, [x29, #-104]
   15d04:	b	16060 <ZSTD_endStream@@Base+0x810c>
   15d08:	ldur	x8, [x29, #-16]
   15d0c:	cmp	w27, w8
   15d10:	b.ls	15db0 <ZSTD_endStream@@Base+0x7e5c>  // b.plast
   15d14:	ldur	x8, [x29, #-32]
   15d18:	add	x19, x8, x27
   15d1c:	mov	x0, x19
   15d20:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15d24:	mov	x25, x0
   15d28:	mov	x0, x28
   15d2c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15d30:	cmp	x25, x0
   15d34:	b.ne	15e88 <ZSTD_endStream@@Base+0x7f34>  // b.any
   15d38:	ldur	x2, [x29, #-24]
   15d3c:	ldur	w20, [x29, #-104]
   15d40:	add	x0, x28, #0x8
   15d44:	add	x1, x19, #0x8
   15d48:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   15d4c:	add	x21, x0, #0x8
   15d50:	cmp	x28, x22
   15d54:	sub	w8, w28, w19
   15d58:	str	w8, [sp, #60]
   15d5c:	b.ls	160ec <ZSTD_endStream@@Base+0x8198>  // b.plast
   15d60:	ldr	x8, [sp, #8]
   15d64:	sub	x9, x28, #0x1
   15d68:	ldur	x28, [x29, #-72]
   15d6c:	add	x8, x8, x27
   15d70:	ldr	x27, [sp, #96]
   15d74:	ldrb	w10, [x9]
   15d78:	ldrb	w11, [x8]
   15d7c:	cmp	w10, w11
   15d80:	b.ne	16364 <ZSTD_endStream@@Base+0x8410>  // b.any
   15d84:	add	x21, x21, #0x1
   15d88:	cmp	x9, x22
   15d8c:	sub	x10, x9, #0x1
   15d90:	b.ls	15da8 <ZSTD_endStream@@Base+0x7e54>  // b.plast
   15d94:	ldur	x9, [x29, #-64]
   15d98:	cmp	x8, x9
   15d9c:	sub	x8, x8, #0x1
   15da0:	mov	x9, x10
   15da4:	b.hi	15d74 <ZSTD_endStream@@Base+0x7e20>  // b.pmore
   15da8:	add	x26, x10, #0x1
   15dac:	b	16368 <ZSTD_endStream@@Base+0x8414>
   15db0:	ldr	x8, [sp, #32]
   15db4:	ldr	w26, [x8, x19, lsl #2]
   15db8:	ldr	x8, [sp, #48]
   15dbc:	cmp	w26, w8
   15dc0:	b.ls	15e6c <ZSTD_endStream@@Base+0x7f18>  // b.plast
   15dc4:	ldr	x8, [sp, #104]
   15dc8:	add	x19, x8, x26
   15dcc:	mov	x0, x19
   15dd0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15dd4:	mov	x25, x0
   15dd8:	mov	x0, x28
   15ddc:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15de0:	cmp	x25, x0
   15de4:	b.ne	15e6c <ZSTD_endStream@@Base+0x7f18>  // b.any
   15de8:	ldur	x2, [x29, #-24]
   15dec:	ldr	x3, [sp, #112]
   15df0:	ldur	x4, [x29, #-64]
   15df4:	add	x0, x28, #0x8
   15df8:	add	x1, x19, #0x8
   15dfc:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   15e00:	ldur	w23, [x29, #-104]
   15e04:	ldr	w9, [sp, #92]
   15e08:	ldr	x27, [sp, #96]
   15e0c:	add	x21, x0, #0x8
   15e10:	sub	w8, w23, w26
   15e14:	cmp	x28, x22
   15e18:	sub	w8, w8, w9
   15e1c:	str	w8, [sp, #60]
   15e20:	b.ls	161e4 <ZSTD_endStream@@Base+0x8290>  // b.plast
   15e24:	ldr	x8, [sp]
   15e28:	ldr	x12, [sp, #24]
   15e2c:	sub	x9, x28, #0x1
   15e30:	add	x8, x8, x26
   15e34:	ldrb	w10, [x9]
   15e38:	ldrb	w11, [x8]
   15e3c:	cmp	w10, w11
   15e40:	b.ne	161e0 <ZSTD_endStream@@Base+0x828c>  // b.any
   15e44:	add	x21, x21, #0x1
   15e48:	cmp	x9, x22
   15e4c:	sub	x10, x9, #0x1
   15e50:	b.ls	15e64 <ZSTD_endStream@@Base+0x7f10>  // b.plast
   15e54:	cmp	x8, x12
   15e58:	sub	x8, x8, #0x1
   15e5c:	mov	x9, x10
   15e60:	b.hi	15e34 <ZSTD_endStream@@Base+0x7ee0>  // b.pmore
   15e64:	add	x28, x10, #0x1
   15e68:	b	161e4 <ZSTD_endStream@@Base+0x8290>
   15e6c:	ldr	x27, [sp, #96]
   15e70:	ldur	w23, [x29, #-104]
   15e74:	mov	w8, wzr
   15e78:	cmp	w8, #0x7
   15e7c:	b.eq	161f0 <ZSTD_endStream@@Base+0x829c>  // b.none
   15e80:	cbz	w8, 15e8c <ZSTD_endStream@@Base+0x7f38>
   15e84:	b	15bc8 <ZSTD_endStream@@Base+0x7c74>
   15e88:	ldur	w23, [x29, #-104]
   15e8c:	ldur	x8, [x29, #-16]
   15e90:	cmp	w24, w8
   15e94:	b.ls	15ec0 <ZSTD_endStream@@Base+0x7f6c>  // b.plast
   15e98:	ldur	x8, [x29, #-32]
   15e9c:	add	x26, x8, x24
   15ea0:	mov	x0, x26
   15ea4:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15ea8:	mov	w19, w0
   15eac:	mov	x0, x28
   15eb0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15eb4:	cmp	w19, w0
   15eb8:	b.eq	15f10 <ZSTD_endStream@@Base+0x7fbc>  // b.none
   15ebc:	b	160dc <ZSTD_endStream@@Base+0x8188>
   15ec0:	ldr	x8, [sp, #16]
   15ec4:	ldr	x9, [sp, #72]
   15ec8:	ldr	w25, [x8, x9, lsl #2]
   15ecc:	ldr	x8, [sp, #48]
   15ed0:	cmp	w25, w8
   15ed4:	ldr	x8, [sp, #104]
   15ed8:	add	x26, x8, x25
   15edc:	b.ls	160cc <ZSTD_endStream@@Base+0x8178>  // b.plast
   15ee0:	mov	x0, x26
   15ee4:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15ee8:	mov	w19, w0
   15eec:	mov	x0, x28
   15ef0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   15ef4:	cmp	w19, w0
   15ef8:	b.ne	160cc <ZSTD_endStream@@Base+0x8178>  // b.any
   15efc:	mov	w8, #0xa                   	// #10
   15f00:	cmp	w8, #0xa
   15f04:	b.ne	160d8 <ZSTD_endStream@@Base+0x8184>  // b.any
   15f08:	ldr	w8, [sp, #92]
   15f0c:	add	w24, w25, w8
   15f10:	ldur	w1, [x29, #-84]
   15f14:	add	x20, x28, #0x1
   15f18:	mov	w2, #0x8                   	// #8
   15f1c:	mov	x0, x20
   15f20:	str	x24, [sp, #72]
   15f24:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15f28:	ldr	w1, [sp, #84]
   15f2c:	mov	x19, x0
   15f30:	mov	w2, #0x8                   	// #8
   15f34:	mov	x0, x20
   15f38:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   15f3c:	ldur	x9, [x29, #-80]
   15f40:	lsl	x8, x19, #2
   15f44:	ldur	x10, [x29, #-16]
   15f48:	ldr	w24, [sp, #68]
   15f4c:	ldr	w27, [x9, x8]
   15f50:	str	w24, [x9, x8]
   15f54:	cmp	w27, w10
   15f58:	b.ls	160fc <ZSTD_endStream@@Base+0x81a8>  // b.plast
   15f5c:	ldur	x8, [x29, #-32]
   15f60:	add	x19, x8, x27
   15f64:	mov	x0, x19
   15f68:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15f6c:	mov	x25, x0
   15f70:	mov	x0, x20
   15f74:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   15f78:	cmp	x25, x0
   15f7c:	b.ne	161cc <ZSTD_endStream@@Base+0x8278>  // b.any
   15f80:	ldur	x2, [x29, #-24]
   15f84:	add	x0, x28, #0x9
   15f88:	add	x1, x19, #0x8
   15f8c:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   15f90:	add	x21, x0, #0x8
   15f94:	cmp	x20, x22
   15f98:	sub	w8, w20, w19
   15f9c:	str	w8, [sp, #60]
   15fa0:	b.ls	16200 <ZSTD_endStream@@Base+0x82ac>  // b.plast
   15fa4:	ldr	x8, [sp, #8]
   15fa8:	ldr	x20, [sp, #72]
   15fac:	add	x8, x8, x27
   15fb0:	ldr	x27, [sp, #96]
   15fb4:	ldrb	w9, [x28]
   15fb8:	ldrb	w10, [x8]
   15fbc:	cmp	w9, w10
   15fc0:	b.ne	16214 <ZSTD_endStream@@Base+0x82c0>  // b.any
   15fc4:	add	x21, x21, #0x1
   15fc8:	cmp	x28, x22
   15fcc:	sub	x9, x28, #0x1
   15fd0:	b.ls	15fe8 <ZSTD_endStream@@Base+0x8094>  // b.plast
   15fd4:	ldur	x10, [x29, #-64]
   15fd8:	mov	x28, x9
   15fdc:	cmp	x8, x10
   15fe0:	sub	x8, x8, #0x1
   15fe4:	b.hi	15fb4 <ZSTD_endStream@@Base+0x8060>  // b.pmore
   15fe8:	add	x19, x9, #0x1
   15fec:	b	16218 <ZSTD_endStream@@Base+0x82c4>
   15ff0:	mov	x1, x22
   15ff4:	mov	x20, x23
   15ff8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   15ffc:	ldur	w23, [x29, #-104]
   16000:	cmp	x26, #0x11
   16004:	b.cc	16060 <ZSTD_endStream@@Base+0x810c>  // b.lo, b.ul, b.last
   16008:	ldr	x19, [x28, #24]
   1600c:	add	x1, x22, #0x10
   16010:	add	x0, x19, #0x10
   16014:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16018:	add	x0, x19, #0x20
   1601c:	add	x1, x22, #0x20
   16020:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16024:	cmp	x26, #0x31
   16028:	b.lt	16060 <ZSTD_endStream@@Base+0x810c>  // b.tstop
   1602c:	add	x21, x19, x26
   16030:	add	x19, x19, #0x30
   16034:	add	x22, x22, #0x40
   16038:	sub	x1, x22, #0x10
   1603c:	mov	x0, x19
   16040:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16044:	add	x0, x19, #0x10
   16048:	mov	x1, x22
   1604c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16050:	add	x19, x19, #0x20
   16054:	cmp	x19, x21
   16058:	add	x22, x22, #0x20
   1605c:	b.cc	16038 <ZSTD_endStream@@Base+0x80e4>  // b.lo, b.ul, b.last
   16060:	ldr	x9, [x28, #24]
   16064:	add	x21, x25, #0x4
   16068:	add	x8, x25, #0x1
   1606c:	cmp	x26, #0x10, lsl #12
   16070:	add	x9, x9, x26
   16074:	str	x9, [x28, #24]
   16078:	b.cc	16090 <ZSTD_endStream@@Base+0x813c>  // b.lo, b.ul, b.last
   1607c:	ldp	x10, x9, [x28]
   16080:	sub	x9, x9, x10
   16084:	lsr	x9, x9, #3
   16088:	mov	w10, #0x1                   	// #1
   1608c:	stp	w10, w9, [x28, #72]
   16090:	ldr	x9, [x28, #8]
   16094:	cmp	x8, #0x10, lsl #12
   16098:	mov	w10, #0x1                   	// #1
   1609c:	strh	w26, [x9, #4]
   160a0:	str	w10, [x9]
   160a4:	b.cc	160c4 <ZSTD_endStream@@Base+0x8170>  // b.lo, b.ul, b.last
   160a8:	ldp	x11, x10, [x28]
   160ac:	mov	x26, x20
   160b0:	sub	x10, x10, x11
   160b4:	lsr	x10, x10, #3
   160b8:	mov	w11, #0x2                   	// #2
   160bc:	stp	w11, w10, [x28, #72]
   160c0:	b	16460 <ZSTD_endStream@@Base+0x850c>
   160c4:	mov	x26, x20
   160c8:	b	16460 <ZSTD_endStream@@Base+0x850c>
   160cc:	mov	w8, wzr
   160d0:	cmp	w8, #0xa
   160d4:	b.eq	15f08 <ZSTD_endStream@@Base+0x7fb4>  // b.none
   160d8:	cbnz	w8, 15bc8 <ZSTD_endStream@@Base+0x7c74>
   160dc:	sub	x8, x28, x22
   160e0:	add	x8, x28, x8, asr #8
   160e4:	add	x28, x8, #0x1
   160e8:	b	15bc8 <ZSTD_endStream@@Base+0x7c74>
   160ec:	mov	x26, x28
   160f0:	ldur	x28, [x29, #-72]
   160f4:	ldr	x27, [sp, #96]
   160f8:	b	16368 <ZSTD_endStream@@Base+0x8414>
   160fc:	ldr	x8, [sp, #32]
   16100:	ldr	w27, [x8, x0, lsl #2]
   16104:	ldr	x8, [sp, #48]
   16108:	cmp	w27, w8
   1610c:	b.ls	161b4 <ZSTD_endStream@@Base+0x8260>  // b.plast
   16110:	ldr	x8, [sp, #104]
   16114:	add	x19, x8, x27
   16118:	mov	x0, x19
   1611c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   16120:	mov	x25, x0
   16124:	mov	x0, x20
   16128:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   1612c:	cmp	x25, x0
   16130:	b.ne	161b4 <ZSTD_endStream@@Base+0x8260>  // b.any
   16134:	ldur	x2, [x29, #-24]
   16138:	ldr	x3, [sp, #112]
   1613c:	ldur	x4, [x29, #-64]
   16140:	add	x0, x28, #0x9
   16144:	add	x1, x19, #0x8
   16148:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   1614c:	ldr	w9, [sp, #92]
   16150:	sub	w8, w24, w27
   16154:	add	x21, x0, #0x8
   16158:	cmp	x20, x22
   1615c:	sub	w8, w8, w9
   16160:	str	w8, [sp, #60]
   16164:	b.ls	16220 <ZSTD_endStream@@Base+0x82cc>  // b.plast
   16168:	ldr	x8, [sp]
   1616c:	ldr	x20, [sp, #72]
   16170:	add	x8, x8, x27
   16174:	ldr	x27, [sp, #96]
   16178:	ldrb	w9, [x28]
   1617c:	ldrb	w10, [x8]
   16180:	cmp	w9, w10
   16184:	b.ne	1622c <ZSTD_endStream@@Base+0x82d8>  // b.any
   16188:	add	x21, x21, #0x1
   1618c:	cmp	x28, x22
   16190:	sub	x9, x28, #0x1
   16194:	b.ls	161ac <ZSTD_endStream@@Base+0x8258>  // b.plast
   16198:	ldr	x10, [sp, #24]
   1619c:	mov	x28, x9
   161a0:	cmp	x8, x10
   161a4:	sub	x8, x8, #0x1
   161a8:	b.hi	16178 <ZSTD_endStream@@Base+0x8224>  // b.pmore
   161ac:	add	x28, x9, #0x1
   161b0:	b	16230 <ZSTD_endStream@@Base+0x82dc>
   161b4:	mov	w8, wzr
   161b8:	ldr	x27, [sp, #96]
   161bc:	ldr	x20, [sp, #72]
   161c0:	mov	x19, x28
   161c4:	cbnz	w8, 1623c <ZSTD_endStream@@Base+0x82e8>
   161c8:	b	161d4 <ZSTD_endStream@@Base+0x8280>
   161cc:	ldr	x27, [sp, #96]
   161d0:	ldr	x20, [sp, #72]
   161d4:	mov	w8, wzr
   161d8:	mov	x19, x28
   161dc:	b	1623c <ZSTD_endStream@@Base+0x82e8>
   161e0:	add	x28, x9, #0x1
   161e4:	mov	w8, #0x7                   	// #7
   161e8:	cmp	w8, #0x7
   161ec:	b.ne	15e80 <ZSTD_endStream@@Base+0x7f2c>  // b.any
   161f0:	mov	x26, x28
   161f4:	ldur	x28, [x29, #-72]
   161f8:	mov	w20, w23
   161fc:	b	16368 <ZSTD_endStream@@Base+0x8414>
   16200:	mov	x19, x20
   16204:	ldr	x27, [sp, #96]
   16208:	ldr	x20, [sp, #72]
   1620c:	mov	w8, #0x7                   	// #7
   16210:	b	1623c <ZSTD_endStream@@Base+0x82e8>
   16214:	add	x19, x28, #0x1
   16218:	mov	w8, #0x7                   	// #7
   1621c:	b	1623c <ZSTD_endStream@@Base+0x82e8>
   16220:	mov	w8, #0x7                   	// #7
   16224:	mov	x28, x20
   16228:	b	161b8 <ZSTD_endStream@@Base+0x8264>
   1622c:	add	x28, x28, #0x1
   16230:	mov	w8, #0x7                   	// #7
   16234:	mov	x19, x28
   16238:	cbz	w8, 161d4 <ZSTD_endStream@@Base+0x8280>
   1623c:	cmp	w8, #0x7
   16240:	b.eq	162d8 <ZSTD_endStream@@Base+0x8384>  // b.none
   16244:	cbnz	w8, 162e8 <ZSTD_endStream@@Base+0x8394>
   16248:	ldur	x8, [x29, #-16]
   1624c:	add	x0, x19, #0x4
   16250:	add	x1, x26, #0x4
   16254:	cmp	w20, w8
   16258:	b.cs	162f0 <ZSTD_endStream@@Base+0x839c>  // b.hs, b.nlast
   1625c:	ldur	x2, [x29, #-24]
   16260:	ldr	x3, [sp, #112]
   16264:	ldur	x4, [x29, #-64]
   16268:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   1626c:	ldr	x8, [sp, #24]
   16270:	ldur	x28, [x29, #-72]
   16274:	add	x21, x0, #0x4
   16278:	cmp	x26, x8
   1627c:	mov	x8, x20
   16280:	ldur	w20, [x29, #-104]
   16284:	sub	w8, w20, w8
   16288:	str	w8, [sp, #60]
   1628c:	b.ls	16644 <ZSTD_endStream@@Base+0x86f0>  // b.plast
   16290:	cmp	x19, x22
   16294:	b.ls	16644 <ZSTD_endStream@@Base+0x86f0>  // b.plast
   16298:	sub	x9, x19, #0x1
   1629c:	sub	x8, x26, #0x1
   162a0:	ldrb	w10, [x9]
   162a4:	ldrb	w11, [x8]
   162a8:	cmp	w10, w11
   162ac:	b.ne	16364 <ZSTD_endStream@@Base+0x8410>  // b.any
   162b0:	add	x21, x21, #0x1
   162b4:	cmp	x9, x22
   162b8:	sub	x10, x9, #0x1
   162bc:	b.ls	15da8 <ZSTD_endStream@@Base+0x7e54>  // b.plast
   162c0:	ldr	x9, [sp, #24]
   162c4:	cmp	x8, x9
   162c8:	sub	x8, x8, #0x1
   162cc:	mov	x9, x10
   162d0:	b.hi	162a0 <ZSTD_endStream@@Base+0x834c>  // b.pmore
   162d4:	b	15da8 <ZSTD_endStream@@Base+0x7e54>
   162d8:	ldur	x28, [x29, #-72]
   162dc:	mov	w20, w23
   162e0:	mov	x26, x19
   162e4:	b	16368 <ZSTD_endStream@@Base+0x8414>
   162e8:	mov	x28, x19
   162ec:	b	15bc8 <ZSTD_endStream@@Base+0x7c74>
   162f0:	ldur	x2, [x29, #-24]
   162f4:	mov	x23, x19
   162f8:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   162fc:	ldur	x8, [x29, #-64]
   16300:	ldur	x28, [x29, #-72]
   16304:	add	x21, x0, #0x4
   16308:	cmp	x26, x8
   1630c:	sub	w8, w23, w26
   16310:	str	w8, [sp, #60]
   16314:	b.ls	16638 <ZSTD_endStream@@Base+0x86e4>  // b.plast
   16318:	cmp	x23, x22
   1631c:	b.ls	16638 <ZSTD_endStream@@Base+0x86e4>  // b.plast
   16320:	ldur	w20, [x29, #-104]
   16324:	sub	x9, x23, #0x1
   16328:	sub	x8, x26, #0x1
   1632c:	ldrb	w10, [x9]
   16330:	ldrb	w11, [x8]
   16334:	cmp	w10, w11
   16338:	b.ne	16364 <ZSTD_endStream@@Base+0x8410>  // b.any
   1633c:	add	x21, x21, #0x1
   16340:	cmp	x9, x22
   16344:	sub	x10, x9, #0x1
   16348:	b.ls	15da8 <ZSTD_endStream@@Base+0x7e54>  // b.plast
   1634c:	ldur	x9, [x29, #-64]
   16350:	cmp	x8, x9
   16354:	sub	x8, x8, #0x1
   16358:	mov	x9, x10
   1635c:	b.hi	1632c <ZSTD_endStream@@Base+0x83d8>  // b.pmore
   16360:	b	15da8 <ZSTD_endStream@@Base+0x7e54>
   16364:	add	x26, x9, #0x1
   16368:	ldr	x0, [x28, #24]
   1636c:	cmp	x26, x27
   16370:	sub	x23, x26, x22
   16374:	b.ls	1638c <ZSTD_endStream@@Base+0x8438>  // b.plast
   16378:	mov	x1, x22
   1637c:	mov	x2, x26
   16380:	mov	x3, x27
   16384:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   16388:	b	163f4 <ZSTD_endStream@@Base+0x84a0>
   1638c:	mov	x1, x22
   16390:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16394:	cmp	x23, #0x11
   16398:	b.cc	163f4 <ZSTD_endStream@@Base+0x84a0>  // b.lo, b.ul, b.last
   1639c:	ldr	x19, [x28, #24]
   163a0:	add	x1, x22, #0x10
   163a4:	add	x0, x19, #0x10
   163a8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   163ac:	add	x0, x19, #0x20
   163b0:	add	x1, x22, #0x20
   163b4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   163b8:	cmp	x23, #0x31
   163bc:	b.lt	163f4 <ZSTD_endStream@@Base+0x84a0>  // b.tstop
   163c0:	add	x25, x19, x23
   163c4:	add	x19, x19, #0x30
   163c8:	add	x22, x22, #0x40
   163cc:	sub	x1, x22, #0x10
   163d0:	mov	x0, x19
   163d4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   163d8:	add	x0, x19, #0x10
   163dc:	mov	x1, x22
   163e0:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   163e4:	add	x19, x19, #0x20
   163e8:	cmp	x19, x25
   163ec:	add	x22, x22, #0x20
   163f0:	b.cc	163cc <ZSTD_endStream@@Base+0x8478>  // b.lo, b.ul, b.last
   163f4:	ldr	x9, [x28, #24]
   163f8:	sub	x8, x21, #0x3
   163fc:	cmp	x23, #0x10, lsl #12
   16400:	add	x9, x9, x23
   16404:	str	x9, [x28, #24]
   16408:	b.cc	16420 <ZSTD_endStream@@Base+0x84cc>  // b.lo, b.ul, b.last
   1640c:	ldp	x10, x9, [x28]
   16410:	sub	x9, x9, x10
   16414:	lsr	x9, x9, #3
   16418:	mov	w10, #0x1                   	// #1
   1641c:	stp	w10, w9, [x28, #72]
   16420:	ldr	w12, [sp, #60]
   16424:	ldr	x9, [x28, #8]
   16428:	cmp	x8, #0x10, lsl #12
   1642c:	add	w10, w12, #0x3
   16430:	strh	w23, [x9, #4]
   16434:	str	w10, [x9]
   16438:	b.cc	16450 <ZSTD_endStream@@Base+0x84fc>  // b.lo, b.ul, b.last
   1643c:	ldp	x11, x10, [x28]
   16440:	sub	x10, x10, x11
   16444:	lsr	x10, x10, #3
   16448:	mov	w11, #0x2                   	// #2
   1644c:	stp	w11, w10, [x28, #72]
   16450:	ldur	w10, [x29, #-52]
   16454:	mov	w23, w20
   16458:	stur	w12, [x29, #-52]
   1645c:	str	w10, [sp, #88]
   16460:	strh	w8, [x9, #6]
   16464:	add	x8, x9, #0x8
   16468:	ldur	x9, [x29, #-40]
   1646c:	add	x22, x26, x21
   16470:	str	x8, [x28, #8]
   16474:	cmp	x22, x9
   16478:	b.hi	15bc4 <ZSTD_endStream@@Base+0x7c70>  // b.pmore
   1647c:	ldur	x26, [x29, #-32]
   16480:	ldur	w24, [x29, #-84]
   16484:	add	w20, w23, #0x2
   16488:	mov	w2, #0x8                   	// #8
   1648c:	add	x19, x26, x20
   16490:	mov	x0, x19
   16494:	mov	w1, w24
   16498:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   1649c:	ldur	x27, [x29, #-80]
   164a0:	mov	w2, #0x8                   	// #8
   164a4:	mov	w1, w24
   164a8:	str	w20, [x27, x0, lsl #2]
   164ac:	sub	x0, x22, #0x2
   164b0:	sub	w25, w0, w26
   164b4:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   164b8:	ldur	w23, [x29, #-100]
   164bc:	str	w25, [x27, x0, lsl #2]
   164c0:	ldr	x27, [sp, #96]
   164c4:	mov	w2, #0x4                   	// #4
   164c8:	mov	x0, x19
   164cc:	mov	w1, w23
   164d0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   164d4:	ldur	x25, [x29, #-96]
   164d8:	mov	w2, #0x4                   	// #4
   164dc:	mov	w1, w23
   164e0:	str	w20, [x25, x0, lsl #2]
   164e4:	sub	x0, x22, #0x1
   164e8:	sub	w19, w0, w26
   164ec:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   164f0:	ldr	w9, [sp, #88]
   164f4:	str	w19, [x25, x0, lsl #2]
   164f8:	b	16508 <ZSTD_endStream@@Base+0x85b4>
   164fc:	mov	w8, wzr
   16500:	mov	w9, w25
   16504:	tbz	w8, #0, 16630 <ZSTD_endStream@@Base+0x86dc>
   16508:	ldur	x8, [x29, #-40]
   1650c:	mov	w25, w9
   16510:	cmp	x22, x8
   16514:	b.hi	15bc0 <ZSTD_endStream@@Base+0x7c6c>  // b.pmore
   16518:	ldur	x8, [x29, #-32]
   1651c:	ldur	x11, [x29, #-16]
   16520:	ldur	x10, [x29, #-48]
   16524:	sub	w26, w22, w8
   16528:	sub	w20, w26, w25
   1652c:	mvn	w9, w20
   16530:	cmp	w20, w11
   16534:	add	w9, w11, w9
   16538:	csel	x8, x10, x8, cc  // cc = lo, ul, last
   1653c:	cmp	w9, #0x3
   16540:	b.cc	164fc <ZSTD_endStream@@Base+0x85a8>  // b.lo, b.ul, b.last
   16544:	add	x19, x8, x20
   16548:	mov	x0, x19
   1654c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   16550:	mov	w23, w0
   16554:	mov	x0, x22
   16558:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   1655c:	cmp	w23, w0
   16560:	b.ne	164fc <ZSTD_endStream@@Base+0x85a8>  // b.any
   16564:	ldp	x2, x8, [x29, #-24]
   16568:	ldur	x4, [x29, #-64]
   1656c:	add	x0, x22, #0x4
   16570:	add	x1, x19, #0x4
   16574:	cmp	w20, w8
   16578:	ldr	x8, [sp, #112]
   1657c:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   16580:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   16584:	mov	x19, x0
   16588:	ldr	x0, [x28, #24]
   1658c:	cmp	x22, x27
   16590:	add	x23, x19, #0x1
   16594:	mov	x1, x22
   16598:	b.ls	165ac <ZSTD_endStream@@Base+0x8658>  // b.plast
   1659c:	mov	x2, x22
   165a0:	mov	x3, x27
   165a4:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   165a8:	b	165b0 <ZSTD_endStream@@Base+0x865c>
   165ac:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   165b0:	ldr	x8, [x28, #8]
   165b4:	add	x19, x19, #0x4
   165b8:	cmp	x23, #0x10, lsl #12
   165bc:	mov	w9, #0x1                   	// #1
   165c0:	strh	wzr, [x8, #4]
   165c4:	str	w9, [x8]
   165c8:	b.cc	165e0 <ZSTD_endStream@@Base+0x868c>  // b.lo, b.ul, b.last
   165cc:	ldp	x10, x9, [x28]
   165d0:	sub	x9, x9, x10
   165d4:	lsr	x9, x9, #3
   165d8:	mov	w10, #0x2                   	// #2
   165dc:	stp	w10, w9, [x28, #72]
   165e0:	ldur	w1, [x29, #-100]
   165e4:	strh	w23, [x8, #6]
   165e8:	add	x8, x8, #0x8
   165ec:	mov	w2, #0x4                   	// #4
   165f0:	mov	x0, x22
   165f4:	str	x8, [x28, #8]
   165f8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   165fc:	ldur	x8, [x29, #-96]
   16600:	ldur	w1, [x29, #-84]
   16604:	mov	w2, #0x8                   	// #8
   16608:	str	w26, [x8, x0, lsl #2]
   1660c:	mov	x0, x22
   16610:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   16614:	ldur	x8, [x29, #-80]
   16618:	ldur	w9, [x29, #-52]
   1661c:	add	x22, x22, x19
   16620:	stur	w25, [x29, #-52]
   16624:	str	w26, [x8, x0, lsl #2]
   16628:	mov	w8, #0x1                   	// #1
   1662c:	tbnz	w8, #0, 16508 <ZSTD_endStream@@Base+0x85b4>
   16630:	str	w9, [sp, #88]
   16634:	b	15bc4 <ZSTD_endStream@@Base+0x7c70>
   16638:	ldur	w20, [x29, #-104]
   1663c:	mov	x26, x23
   16640:	b	16368 <ZSTD_endStream@@Base+0x8414>
   16644:	mov	x26, x19
   16648:	b	16368 <ZSTD_endStream@@Base+0x8414>
   1664c:	ldr	x8, [sp, #40]
   16650:	ldur	w9, [x29, #-52]
   16654:	str	w9, [x8]
   16658:	ldr	w9, [sp, #88]
   1665c:	str	w9, [x8, #4]
   16660:	ldur	x8, [x29, #-24]
   16664:	ldp	x20, x19, [sp, #304]
   16668:	ldp	x24, x23, [sp, #272]
   1666c:	ldp	x26, x25, [sp, #256]
   16670:	sub	x0, x8, x22
   16674:	ldp	x22, x21, [sp, #288]
   16678:	ldp	x28, x27, [sp, #240]
   1667c:	ldp	x29, x30, [sp, #224]
   16680:	add	sp, sp, #0x140
   16684:	ret
   16688:	stp	x29, x30, [sp, #-16]!
   1668c:	ldr	w8, [x0, #200]
   16690:	mov	x29, sp
   16694:	sub	w9, w8, #0x5
   16698:	cmp	w9, #0x3
   1669c:	mov	w9, #0x4                   	// #4
   166a0:	csel	w5, w8, w9, cc  // cc = lo, ul, last
   166a4:	bl	166b0 <ZSTD_endStream@@Base+0x875c>
   166a8:	ldp	x29, x30, [sp], #16
   166ac:	ret
   166b0:	sub	sp, sp, #0x130
   166b4:	stp	x29, x30, [sp, #208]
   166b8:	stp	x28, x27, [sp, #224]
   166bc:	stp	x26, x25, [sp, #240]
   166c0:	stp	x24, x23, [sp, #256]
   166c4:	stp	x22, x21, [sp, #272]
   166c8:	stp	x20, x19, [sp, #288]
   166cc:	ldr	x8, [x0, #48]
   166d0:	add	x29, sp, #0xd0
   166d4:	mov	x20, x2
   166d8:	mov	x22, x1
   166dc:	stur	x8, [x29, #-16]
   166e0:	ldr	w8, [x0, #192]
   166e4:	mov	x27, x4
   166e8:	mov	x25, x3
   166ec:	mov	x19, x0
   166f0:	stp	w5, w8, [x29, #-24]
   166f4:	ldr	x8, [x0, #64]
   166f8:	ldr	x21, [x0, #8]
   166fc:	stur	x8, [x29, #-88]
   16700:	ldp	w28, w8, [x0, #184]
   16704:	stur	w8, [x29, #-28]
   16708:	add	x8, x3, x4
   1670c:	sub	w1, w8, w21
   16710:	mov	w2, w28
   16714:	sub	x23, x8, #0x8
   16718:	stur	x8, [x29, #-40]
   1671c:	bl	17c18 <ZSTD_endStream@@Base+0x9cc4>
   16720:	ldr	w8, [x19, #24]
   16724:	ldp	w26, w24, [x20]
   16728:	stp	x23, x21, [x29, #-56]
   1672c:	str	x20, [sp, #8]
   16730:	cmp	w8, w0
   16734:	csel	w9, w8, w0, hi  // hi = pmore
   16738:	b.ls	17070 <ZSTD_endStream@@Base+0x911c>  // b.plast
   1673c:	cmp	x23, x25
   16740:	stur	x9, [x29, #-64]
   16744:	b.ls	177a4 <ZSTD_endStream@@Base+0x9850>  // b.plast
   16748:	ldur	x27, [x29, #-48]
   1674c:	ldur	x21, [x29, #-64]
   16750:	ldr	x28, [x19, #16]
   16754:	mov	x19, x25
   16758:	stur	w0, [x29, #-68]
   1675c:	add	x8, x27, x21
   16760:	str	x8, [sp, #96]
   16764:	sub	w8, w21, #0x1
   16768:	stur	w8, [x29, #-80]
   1676c:	ldur	x8, [x29, #-40]
   16770:	str	x28, [sp, #32]
   16774:	sub	x8, x8, #0x20
   16778:	str	x8, [sp, #80]
   1677c:	add	x8, x22, #0x8
   16780:	str	x8, [sp, #48]
   16784:	add	x8, x28, w0, uxtw
   16788:	str	x8, [sp, #16]
   1678c:	add	x8, x28, x21
   16790:	str	x8, [sp, #88]
   16794:	b	167bc <ZSTD_endStream@@Base+0x8868>
   16798:	ldur	x27, [x29, #-48]
   1679c:	ldur	x21, [x29, #-64]
   167a0:	ldr	x28, [sp, #32]
   167a4:	sub	x8, x25, x19
   167a8:	add	x8, x25, x8, asr #8
   167ac:	add	x25, x8, #0x1
   167b0:	ldur	x8, [x29, #-56]
   167b4:	cmp	x25, x8
   167b8:	b.cs	177a8 <ZSTD_endStream@@Base+0x9854>  // b.hs, b.nlast
   167bc:	ldp	w1, w2, [x29, #-28]
   167c0:	mov	x0, x25
   167c4:	stur	x19, [x29, #-96]
   167c8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   167cc:	ldur	x19, [x29, #-88]
   167d0:	lsl	x20, x0, #2
   167d4:	ldur	w1, [x29, #-20]
   167d8:	mov	w2, #0x8                   	// #8
   167dc:	ldr	w23, [x19, x20]
   167e0:	mov	x0, x25
   167e4:	cmp	w23, w21
   167e8:	csel	x8, x28, x27, cc  // cc = lo, ul, last
   167ec:	str	x8, [sp, #56]
   167f0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   167f4:	ldur	x9, [x29, #-16]
   167f8:	lsl	x8, x0, #2
   167fc:	ldur	w0, [x29, #-68]
   16800:	sub	w10, w25, w27
   16804:	ldr	w11, [x9, x8]
   16808:	add	w12, w10, #0x1
   1680c:	str	w10, [x9, x8]
   16810:	mov	x8, x27
   16814:	sub	w27, w12, w26
   16818:	cmp	w11, w21
   1681c:	csel	x9, x28, x8, cc  // cc = lo, ul, last
   16820:	cmp	w27, w21
   16824:	csel	x8, x28, x8, cc  // cc = lo, ul, last
   16828:	cmp	w27, w0
   1682c:	str	w12, [sp, #44]
   16830:	str	x11, [sp, #104]
   16834:	str	x9, [sp, #64]
   16838:	str	w10, [sp, #76]
   1683c:	str	w10, [x19, x20]
   16840:	b.ls	168d0 <ZSTD_endStream@@Base+0x897c>  // b.plast
   16844:	ldur	w9, [x29, #-80]
   16848:	sub	w9, w9, w27
   1684c:	cmp	w9, #0x3
   16850:	b.cc	168d0 <ZSTD_endStream@@Base+0x897c>  // b.lo, b.ul, b.last
   16854:	add	x28, x8, x27
   16858:	mov	x0, x28
   1685c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   16860:	add	x20, x25, #0x1
   16864:	mov	w21, w0
   16868:	mov	x0, x20
   1686c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   16870:	cmp	w21, w0
   16874:	ldur	w0, [x29, #-68]
   16878:	b.ne	168d0 <ZSTD_endStream@@Base+0x897c>  // b.any
   1687c:	ldur	x8, [x29, #-64]
   16880:	ldur	x2, [x29, #-40]
   16884:	add	x0, x25, #0x5
   16888:	add	x1, x28, #0x4
   1688c:	cmp	w27, w8
   16890:	ldp	x8, x4, [sp, #88]
   16894:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   16898:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   1689c:	ldr	x3, [sp, #80]
   168a0:	ldur	x19, [x29, #-96]
   168a4:	mov	x25, x0
   168a8:	ldr	x0, [x22, #24]
   168ac:	cmp	x20, x3
   168b0:	mov	x2, x20
   168b4:	sub	x20, x20, x19
   168b8:	str	x2, [sp, #24]
   168bc:	b.ls	16ac4 <ZSTD_endStream@@Base+0x8b70>  // b.plast
   168c0:	mov	x1, x19
   168c4:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   168c8:	ldur	x27, [x29, #-48]
   168cc:	b	16b30 <ZSTD_endStream@@Base+0x8bdc>
   168d0:	ldr	x20, [sp, #104]
   168d4:	cmp	w20, w0
   168d8:	b.ls	16994 <ZSTD_endStream@@Base+0x8a40>  // b.plast
   168dc:	ldr	x8, [sp, #64]
   168e0:	add	x27, x8, x20
   168e4:	mov	x0, x27
   168e8:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   168ec:	mov	x21, x0
   168f0:	mov	x0, x25
   168f4:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   168f8:	cmp	x21, x0
   168fc:	ldur	w0, [x29, #-68]
   16900:	b.ne	16994 <ZSTD_endStream@@Base+0x8a40>  // b.any
   16904:	ldur	x8, [x29, #-64]
   16908:	ldur	x2, [x29, #-40]
   1690c:	add	x0, x25, #0x8
   16910:	add	x1, x27, #0x8
   16914:	cmp	w20, w8
   16918:	ldp	x8, x4, [sp, #88]
   1691c:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   16920:	ldr	x8, [sp, #16]
   16924:	csel	x23, x8, x4, cc  // cc = lo, ul, last
   16928:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   1692c:	ldur	x19, [x29, #-96]
   16930:	cmp	x27, x23
   16934:	add	x21, x0, #0x8
   16938:	b.ls	16c34 <ZSTD_endStream@@Base+0x8ce0>  // b.plast
   1693c:	ldr	x28, [sp, #32]
   16940:	cmp	x25, x19
   16944:	b.ls	16c40 <ZSTD_endStream@@Base+0x8cec>  // b.plast
   16948:	ldr	x9, [sp, #64]
   1694c:	ldur	x27, [x29, #-48]
   16950:	sub	x8, x25, #0x1
   16954:	add	x9, x9, x20
   16958:	sub	x9, x9, #0x1
   1695c:	ldrb	w10, [x8]
   16960:	ldrb	w11, [x9]
   16964:	cmp	w10, w11
   16968:	b.ne	16c2c <ZSTD_endStream@@Base+0x8cd8>  // b.any
   1696c:	add	x21, x21, #0x1
   16970:	cmp	x9, x23
   16974:	sub	x10, x8, #0x1
   16978:	b.ls	1698c <ZSTD_endStream@@Base+0x8a38>  // b.plast
   1697c:	cmp	x8, x19
   16980:	sub	x9, x9, #0x1
   16984:	mov	x8, x10
   16988:	b.hi	1695c <ZSTD_endStream@@Base+0x8a08>  // b.pmore
   1698c:	add	x20, x10, #0x1
   16990:	b	16c48 <ZSTD_endStream@@Base+0x8cf4>
   16994:	ldur	x19, [x29, #-96]
   16998:	cmp	w23, w0
   1699c:	b.ls	16798 <ZSTD_endStream@@Base+0x8844>  // b.plast
   169a0:	ldr	x8, [sp, #56]
   169a4:	add	x28, x8, x23
   169a8:	mov	x0, x28
   169ac:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   169b0:	mov	w21, w0
   169b4:	mov	x0, x25
   169b8:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   169bc:	cmp	w21, w0
   169c0:	ldur	w0, [x29, #-68]
   169c4:	b.ne	16798 <ZSTD_endStream@@Base+0x8844>  // b.any
   169c8:	ldur	w1, [x29, #-20]
   169cc:	add	x21, x25, #0x1
   169d0:	mov	w2, #0x8                   	// #8
   169d4:	mov	w20, w0
   169d8:	mov	x0, x21
   169dc:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   169e0:	ldur	x9, [x29, #-16]
   169e4:	lsl	x8, x0, #2
   169e8:	ldur	x10, [x29, #-64]
   169ec:	ldur	x27, [x29, #-48]
   169f0:	ldr	w24, [x9, x8]
   169f4:	ldr	x11, [sp, #32]
   169f8:	cmp	w24, w10
   169fc:	csel	x12, x11, x27, cc  // cc = lo, ul, last
   16a00:	ldr	w11, [sp, #44]
   16a04:	cmp	w24, w20
   16a08:	str	w11, [x9, x8]
   16a0c:	b.ls	16b9c <ZSTD_endStream@@Base+0x8c48>  // b.plast
   16a10:	add	x0, x12, x24
   16a14:	str	x0, [sp, #104]
   16a18:	str	x12, [sp, #64]
   16a1c:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   16a20:	mov	x20, x0
   16a24:	mov	x0, x21
   16a28:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   16a2c:	ldur	x10, [x29, #-64]
   16a30:	cmp	x20, x0
   16a34:	b.ne	16b9c <ZSTD_endStream@@Base+0x8c48>  // b.any
   16a38:	ldur	x2, [x29, #-40]
   16a3c:	ldp	x8, x4, [sp, #88]
   16a40:	cmp	w24, w10
   16a44:	ldr	x28, [sp, #104]
   16a48:	add	x0, x25, #0x9
   16a4c:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   16a50:	ldr	x8, [sp, #16]
   16a54:	add	x1, x28, #0x8
   16a58:	mov	x23, x21
   16a5c:	csel	x20, x8, x4, cc  // cc = lo, ul, last
   16a60:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   16a64:	ldr	w8, [sp, #44]
   16a68:	add	x21, x0, #0x8
   16a6c:	cmp	x28, x20
   16a70:	sub	w28, w8, w24
   16a74:	b.ls	16d50 <ZSTD_endStream@@Base+0x8dfc>  // b.plast
   16a78:	cmp	x23, x19
   16a7c:	b.ls	16d50 <ZSTD_endStream@@Base+0x8dfc>  // b.plast
   16a80:	ldr	x8, [sp, #64]
   16a84:	add	x8, x8, x24
   16a88:	sub	x8, x8, #0x1
   16a8c:	ldrb	w9, [x25]
   16a90:	ldrb	w10, [x8]
   16a94:	cmp	w9, w10
   16a98:	b.ne	16d5c <ZSTD_endStream@@Base+0x8e08>  // b.any
   16a9c:	add	x21, x21, #0x1
   16aa0:	cmp	x8, x20
   16aa4:	sub	x9, x25, #0x1
   16aa8:	b.ls	16abc <ZSTD_endStream@@Base+0x8b68>  // b.plast
   16aac:	cmp	x25, x19
   16ab0:	sub	x8, x8, #0x1
   16ab4:	mov	x25, x9
   16ab8:	b.hi	16a8c <ZSTD_endStream@@Base+0x8b38>  // b.pmore
   16abc:	add	x2, x9, #0x1
   16ac0:	b	16d60 <ZSTD_endStream@@Base+0x8e0c>
   16ac4:	mov	x1, x19
   16ac8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16acc:	ldur	x27, [x29, #-48]
   16ad0:	cmp	x20, #0x11
   16ad4:	b.cc	16b30 <ZSTD_endStream@@Base+0x8bdc>  // b.lo, b.ul, b.last
   16ad8:	ldr	x23, [x22, #24]
   16adc:	add	x1, x19, #0x10
   16ae0:	add	x0, x23, #0x10
   16ae4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16ae8:	add	x0, x23, #0x20
   16aec:	add	x1, x19, #0x20
   16af0:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16af4:	cmp	x20, #0x31
   16af8:	b.lt	16b30 <ZSTD_endStream@@Base+0x8bdc>  // b.tstop
   16afc:	add	x21, x23, x20
   16b00:	add	x28, x23, #0x30
   16b04:	add	x19, x19, #0x40
   16b08:	sub	x1, x19, #0x10
   16b0c:	mov	x0, x28
   16b10:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16b14:	add	x0, x28, #0x10
   16b18:	mov	x1, x19
   16b1c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16b20:	add	x28, x28, #0x20
   16b24:	cmp	x28, x21
   16b28:	add	x19, x19, #0x20
   16b2c:	b.cc	16b08 <ZSTD_endStream@@Base+0x8bb4>  // b.lo, b.ul, b.last
   16b30:	ldr	x9, [x22, #24]
   16b34:	add	x21, x25, #0x4
   16b38:	add	x8, x25, #0x1
   16b3c:	cmp	x20, #0x10, lsl #12
   16b40:	add	x9, x9, x20
   16b44:	str	x9, [x22, #24]
   16b48:	b.cc	16b60 <ZSTD_endStream@@Base+0x8c0c>  // b.lo, b.ul, b.last
   16b4c:	ldp	x10, x9, [x22]
   16b50:	sub	x9, x9, x10
   16b54:	lsr	x9, x9, #3
   16b58:	mov	w10, #0x1                   	// #1
   16b5c:	stp	w10, w9, [x22, #72]
   16b60:	ldr	x9, [sp, #48]
   16b64:	ldr	x28, [sp, #32]
   16b68:	cmp	x8, #0x10, lsl #12
   16b6c:	mov	w10, #0x1                   	// #1
   16b70:	ldr	x9, [x9]
   16b74:	strh	w20, [x9, #4]
   16b78:	str	w10, [x9]
   16b7c:	b.cc	16b94 <ZSTD_endStream@@Base+0x8c40>  // b.lo, b.ul, b.last
   16b80:	ldp	x11, x10, [x22]
   16b84:	sub	x10, x10, x11
   16b88:	lsr	x10, x10, #3
   16b8c:	mov	w11, #0x2                   	// #2
   16b90:	stp	w11, w10, [x22, #72]
   16b94:	ldr	x20, [sp, #24]
   16b98:	b	16e54 <ZSTD_endStream@@Base+0x8f00>
   16b9c:	ldur	x2, [x29, #-40]
   16ba0:	ldp	x8, x4, [sp, #88]
   16ba4:	cmp	w23, w10
   16ba8:	add	x0, x25, #0x4
   16bac:	add	x1, x28, #0x4
   16bb0:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   16bb4:	ldr	x8, [sp, #16]
   16bb8:	csel	x20, x8, x4, cc  // cc = lo, ul, last
   16bbc:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   16bc0:	ldr	w8, [sp, #76]
   16bc4:	add	x21, x0, #0x4
   16bc8:	cmp	x28, x20
   16bcc:	sub	w28, w8, w23
   16bd0:	b.ls	16c24 <ZSTD_endStream@@Base+0x8cd0>  // b.plast
   16bd4:	cmp	x25, x19
   16bd8:	b.ls	16c24 <ZSTD_endStream@@Base+0x8cd0>  // b.plast
   16bdc:	ldr	x9, [sp, #56]
   16be0:	sub	x8, x25, #0x1
   16be4:	add	x9, x9, x23
   16be8:	sub	x9, x9, #0x1
   16bec:	ldrb	w10, [x8]
   16bf0:	ldrb	w11, [x9]
   16bf4:	cmp	w10, w11
   16bf8:	b.ne	16d48 <ZSTD_endStream@@Base+0x8df4>  // b.any
   16bfc:	add	x21, x21, #0x1
   16c00:	cmp	x9, x20
   16c04:	sub	x10, x8, #0x1
   16c08:	b.ls	16c1c <ZSTD_endStream@@Base+0x8cc8>  // b.plast
   16c0c:	cmp	x8, x19
   16c10:	sub	x9, x9, #0x1
   16c14:	mov	x8, x10
   16c18:	b.hi	16bec <ZSTD_endStream@@Base+0x8c98>  // b.pmore
   16c1c:	add	x2, x10, #0x1
   16c20:	b	16d60 <ZSTD_endStream@@Base+0x8e0c>
   16c24:	mov	x2, x25
   16c28:	b	16d60 <ZSTD_endStream@@Base+0x8e0c>
   16c2c:	add	x20, x8, #0x1
   16c30:	b	16c48 <ZSTD_endStream@@Base+0x8cf4>
   16c34:	ldur	x27, [x29, #-48]
   16c38:	ldr	x28, [sp, #32]
   16c3c:	b	16c44 <ZSTD_endStream@@Base+0x8cf0>
   16c40:	ldur	x27, [x29, #-48]
   16c44:	mov	x20, x25
   16c48:	ldr	x3, [sp, #80]
   16c4c:	ldr	x0, [x22, #24]
   16c50:	sub	x23, x20, x19
   16c54:	cmp	x20, x3
   16c58:	b.ls	16c6c <ZSTD_endStream@@Base+0x8d18>  // b.plast
   16c5c:	mov	x1, x19
   16c60:	mov	x2, x20
   16c64:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   16c68:	b	16cd4 <ZSTD_endStream@@Base+0x8d80>
   16c6c:	mov	x1, x19
   16c70:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16c74:	cmp	x23, #0x11
   16c78:	b.cc	16cd4 <ZSTD_endStream@@Base+0x8d80>  // b.lo, b.ul, b.last
   16c7c:	ldr	x25, [x22, #24]
   16c80:	add	x1, x19, #0x10
   16c84:	add	x0, x25, #0x10
   16c88:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16c8c:	add	x0, x25, #0x20
   16c90:	add	x1, x19, #0x20
   16c94:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16c98:	cmp	x23, #0x31
   16c9c:	b.lt	16cd4 <ZSTD_endStream@@Base+0x8d80>  // b.tstop
   16ca0:	add	x24, x25, x23
   16ca4:	add	x25, x25, #0x30
   16ca8:	add	x19, x19, #0x40
   16cac:	sub	x1, x19, #0x10
   16cb0:	mov	x0, x25
   16cb4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16cb8:	add	x0, x25, #0x10
   16cbc:	mov	x1, x19
   16cc0:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16cc4:	add	x25, x25, #0x20
   16cc8:	cmp	x25, x24
   16ccc:	add	x19, x19, #0x20
   16cd0:	b.cc	16cac <ZSTD_endStream@@Base+0x8d58>  // b.lo, b.ul, b.last
   16cd4:	ldr	x9, [x22, #24]
   16cd8:	ldr	w8, [sp, #76]
   16cdc:	ldr	x10, [sp, #104]
   16ce0:	cmp	x23, #0x10, lsl #12
   16ce4:	add	x9, x9, x23
   16ce8:	str	x9, [x22, #24]
   16cec:	sub	w10, w8, w10
   16cf0:	sub	x8, x21, #0x3
   16cf4:	b.cc	16d0c <ZSTD_endStream@@Base+0x8db8>  // b.lo, b.ul, b.last
   16cf8:	ldp	x11, x9, [x22]
   16cfc:	sub	x9, x9, x11
   16d00:	lsr	x9, x9, #3
   16d04:	mov	w11, #0x1                   	// #1
   16d08:	stp	w11, w9, [x22, #72]
   16d0c:	ldr	x9, [sp, #48]
   16d10:	add	w11, w10, #0x3
   16d14:	cmp	x8, #0x10, lsl #12
   16d18:	ldr	x9, [x9]
   16d1c:	strh	w23, [x9, #4]
   16d20:	str	w11, [x9]
   16d24:	b.cc	16d3c <ZSTD_endStream@@Base+0x8de8>  // b.lo, b.ul, b.last
   16d28:	ldp	x12, x11, [x22]
   16d2c:	sub	x11, x11, x12
   16d30:	lsr	x11, x11, #3
   16d34:	mov	w12, #0x2                   	// #2
   16d38:	stp	w12, w11, [x22, #72]
   16d3c:	mov	w24, w26
   16d40:	mov	w26, w10
   16d44:	b	16e54 <ZSTD_endStream@@Base+0x8f00>
   16d48:	add	x2, x8, #0x1
   16d4c:	b	16d60 <ZSTD_endStream@@Base+0x8e0c>
   16d50:	ldr	x3, [sp, #80]
   16d54:	mov	x2, x23
   16d58:	b	16d64 <ZSTD_endStream@@Base+0x8e10>
   16d5c:	add	x2, x25, #0x1
   16d60:	ldr	x3, [sp, #80]
   16d64:	ldr	x0, [x22, #24]
   16d68:	cmp	x2, x3
   16d6c:	sub	x20, x2, x19
   16d70:	str	x2, [sp, #24]
   16d74:	b.ls	16d84 <ZSTD_endStream@@Base+0x8e30>  // b.plast
   16d78:	mov	x1, x19
   16d7c:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   16d80:	b	16dec <ZSTD_endStream@@Base+0x8e98>
   16d84:	mov	x1, x19
   16d88:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16d8c:	cmp	x20, #0x11
   16d90:	b.cc	16dec <ZSTD_endStream@@Base+0x8e98>  // b.lo, b.ul, b.last
   16d94:	ldr	x24, [x22, #24]
   16d98:	add	x1, x19, #0x10
   16d9c:	add	x0, x24, #0x10
   16da0:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16da4:	add	x0, x24, #0x20
   16da8:	add	x1, x19, #0x20
   16dac:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16db0:	cmp	x20, #0x31
   16db4:	b.lt	16dec <ZSTD_endStream@@Base+0x8e98>  // b.tstop
   16db8:	add	x23, x24, x20
   16dbc:	add	x25, x24, #0x30
   16dc0:	add	x19, x19, #0x40
   16dc4:	sub	x1, x19, #0x10
   16dc8:	mov	x0, x25
   16dcc:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16dd0:	add	x0, x25, #0x10
   16dd4:	mov	x1, x19
   16dd8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16ddc:	add	x25, x25, #0x20
   16de0:	cmp	x25, x23
   16de4:	add	x19, x19, #0x20
   16de8:	b.cc	16dc4 <ZSTD_endStream@@Base+0x8e70>  // b.lo, b.ul, b.last
   16dec:	ldr	x9, [x22, #24]
   16df0:	sub	x8, x21, #0x3
   16df4:	cmp	x20, #0x10, lsl #12
   16df8:	add	x9, x9, x20
   16dfc:	str	x9, [x22, #24]
   16e00:	b.cc	16e18 <ZSTD_endStream@@Base+0x8ec4>  // b.lo, b.ul, b.last
   16e04:	ldp	x10, x9, [x22]
   16e08:	sub	x9, x9, x10
   16e0c:	lsr	x9, x9, #3
   16e10:	mov	w10, #0x1                   	// #1
   16e14:	stp	w10, w9, [x22, #72]
   16e18:	ldr	x9, [sp, #48]
   16e1c:	add	w10, w28, #0x3
   16e20:	cmp	x8, #0x10, lsl #12
   16e24:	ldr	x9, [x9]
   16e28:	strh	w20, [x9, #4]
   16e2c:	str	w10, [x9]
   16e30:	b.cc	16e48 <ZSTD_endStream@@Base+0x8ef4>  // b.lo, b.ul, b.last
   16e34:	ldp	x11, x10, [x22]
   16e38:	sub	x10, x10, x11
   16e3c:	lsr	x10, x10, #3
   16e40:	mov	w11, #0x2                   	// #2
   16e44:	stp	w11, w10, [x22, #72]
   16e48:	mov	w24, w26
   16e4c:	mov	w26, w28
   16e50:	ldp	x20, x28, [sp, #24]
   16e54:	strh	w8, [x9, #6]
   16e58:	add	x8, x9, #0x8
   16e5c:	ldur	x9, [x29, #-56]
   16e60:	add	x19, x20, x21
   16e64:	cmp	x19, x9
   16e68:	ldr	x9, [sp, #48]
   16e6c:	str	x8, [x9]
   16e70:	b.ls	16e80 <ZSTD_endStream@@Base+0x8f2c>  // b.plast
   16e74:	ldur	x21, [x29, #-64]
   16e78:	mov	x25, x19
   16e7c:	b	167b0 <ZSTD_endStream@@Base+0x885c>
   16e80:	ldr	w8, [sp, #76]
   16e84:	mov	w2, #0x8                   	// #8
   16e88:	add	w20, w8, #0x2
   16e8c:	add	x21, x27, x20
   16e90:	ldur	w27, [x29, #-20]
   16e94:	mov	x0, x21
   16e98:	mov	w1, w27
   16e9c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   16ea0:	ldur	x25, [x29, #-16]
   16ea4:	ldur	x8, [x29, #-48]
   16ea8:	mov	w1, w27
   16eac:	ldur	x27, [x29, #-48]
   16eb0:	str	w20, [x25, x0, lsl #2]
   16eb4:	sub	x0, x19, #0x2
   16eb8:	mov	w2, #0x8                   	// #8
   16ebc:	sub	w23, w0, w8
   16ec0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   16ec4:	str	w23, [x25, x0, lsl #2]
   16ec8:	mov	x0, x21
   16ecc:	ldp	w23, w21, [x29, #-28]
   16ed0:	mov	w1, w23
   16ed4:	mov	w2, w21
   16ed8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   16edc:	mov	x25, x19
   16ee0:	ldur	x19, [x29, #-88]
   16ee4:	mov	w1, w23
   16ee8:	mov	w2, w21
   16eec:	str	w20, [x19, x0, lsl #2]
   16ef0:	sub	x0, x25, #0x1
   16ef4:	sub	w20, w0, w27
   16ef8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   16efc:	str	w20, [x19, x0, lsl #2]
   16f00:	ldur	w0, [x29, #-68]
   16f04:	ldur	x21, [x29, #-64]
   16f08:	mov	x19, x25
   16f0c:	mov	w20, w24
   16f10:	b	16f28 <ZSTD_endStream@@Base+0x8fd4>
   16f14:	mov	w24, w20
   16f18:	mov	w20, w26
   16f1c:	mov	w26, w20
   16f20:	mov	w20, w24
   16f24:	tbz	w8, #0, 167b0 <ZSTD_endStream@@Base+0x885c>
   16f28:	ldur	x8, [x29, #-56]
   16f2c:	cmp	x25, x8
   16f30:	b.hi	17068 <ZSTD_endStream@@Base+0x9114>  // b.pmore
   16f34:	sub	w23, w25, w27
   16f38:	sub	w24, w23, w20
   16f3c:	cmp	w24, w21
   16f40:	csel	x9, x28, x27, cc  // cc = lo, ul, last
   16f44:	cmp	w24, w0
   16f48:	mov	w8, wzr
   16f4c:	b.ls	16f14 <ZSTD_endStream@@Base+0x8fc0>  // b.plast
   16f50:	ldur	w10, [x29, #-80]
   16f54:	sub	w10, w10, w24
   16f58:	cmp	w10, #0x3
   16f5c:	b.cc	16f14 <ZSTD_endStream@@Base+0x8fc0>  // b.lo, b.ul, b.last
   16f60:	add	x27, x9, x24
   16f64:	mov	x0, x27
   16f68:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   16f6c:	mov	w21, w0
   16f70:	mov	x0, x25
   16f74:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   16f78:	cmp	w21, w0
   16f7c:	b.ne	16fc8 <ZSTD_endStream@@Base+0x9074>  // b.any
   16f80:	ldur	x8, [x29, #-64]
   16f84:	ldur	x2, [x29, #-40]
   16f88:	add	x0, x25, #0x4
   16f8c:	add	x1, x27, #0x4
   16f90:	cmp	w24, w8
   16f94:	ldp	x8, x4, [sp, #88]
   16f98:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   16f9c:	bl	17960 <ZSTD_endStream@@Base+0x9a0c>
   16fa0:	ldr	x3, [sp, #80]
   16fa4:	mov	x27, x0
   16fa8:	ldr	x0, [x22, #24]
   16fac:	add	x21, x27, #0x1
   16fb0:	cmp	x19, x3
   16fb4:	b.ls	16fd8 <ZSTD_endStream@@Base+0x9084>  // b.plast
   16fb8:	mov	x1, x19
   16fbc:	mov	x2, x19
   16fc0:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   16fc4:	b	16fe0 <ZSTD_endStream@@Base+0x908c>
   16fc8:	mov	w8, wzr
   16fcc:	mov	w24, w20
   16fd0:	mov	w20, w26
   16fd4:	b	17058 <ZSTD_endStream@@Base+0x9104>
   16fd8:	mov	x1, x19
   16fdc:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   16fe0:	ldr	x8, [x22, #8]
   16fe4:	add	x19, x27, #0x4
   16fe8:	cmp	x21, #0x10, lsl #12
   16fec:	mov	w9, #0x1                   	// #1
   16ff0:	strh	wzr, [x8, #4]
   16ff4:	str	w9, [x8]
   16ff8:	b.cc	17010 <ZSTD_endStream@@Base+0x90bc>  // b.lo, b.ul, b.last
   16ffc:	ldp	x10, x9, [x22]
   17000:	sub	x9, x9, x10
   17004:	lsr	x9, x9, #3
   17008:	mov	w10, #0x2                   	// #2
   1700c:	stp	w10, w9, [x22, #72]
   17010:	strh	w21, [x8, #6]
   17014:	add	x8, x8, #0x8
   17018:	str	x8, [x22, #8]
   1701c:	ldp	w1, w2, [x29, #-28]
   17020:	mov	x0, x25
   17024:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17028:	ldur	x8, [x29, #-88]
   1702c:	ldur	w1, [x29, #-20]
   17030:	mov	w2, #0x8                   	// #8
   17034:	str	w23, [x8, x0, lsl #2]
   17038:	mov	x0, x25
   1703c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17040:	ldur	x8, [x29, #-16]
   17044:	add	x19, x25, x19
   17048:	mov	w24, w26
   1704c:	mov	x25, x19
   17050:	str	w23, [x8, x0, lsl #2]
   17054:	mov	w8, #0x1                   	// #1
   17058:	ldur	x27, [x29, #-48]
   1705c:	ldur	w0, [x29, #-68]
   17060:	ldur	x21, [x29, #-64]
   17064:	b	16f1c <ZSTD_endStream@@Base+0x8fc8>
   17068:	mov	w24, w20
   1706c:	b	167b0 <ZSTD_endStream@@Base+0x885c>
   17070:	add	w9, w25, w27
   17074:	mov	w10, #0x1                   	// #1
   17078:	sub	w9, w9, w21
   1707c:	lsl	w10, w10, w28
   17080:	sub	w11, w9, w8
   17084:	sub	w9, w9, w10
   17088:	cmp	w11, w10
   1708c:	csel	w8, w9, w8, hi  // hi = pmore
   17090:	stur	x8, [x29, #-96]
   17094:	add	x8, x21, x8
   17098:	cmp	w25, w8
   1709c:	cinc	x27, x25, eq  // eq = none
   170a0:	str	x8, [sp, #88]
   170a4:	sub	w8, w27, w8
   170a8:	cmp	w24, w8
   170ac:	csel	w9, w24, wzr, hi  // hi = pmore
   170b0:	csel	w10, wzr, w24, hi  // hi = pmore
   170b4:	cmp	w26, w8
   170b8:	csel	w8, w26, w9, hi  // hi = pmore
   170bc:	csel	w24, wzr, w26, hi  // hi = pmore
   170c0:	cmp	x27, x23
   170c4:	str	w10, [sp, #104]
   170c8:	str	w8, [sp, #76]
   170cc:	b.cs	17780 <ZSTD_endStream@@Base+0x982c>  // b.hs, b.nlast
   170d0:	ldur	x8, [x29, #-40]
   170d4:	ldur	x28, [x29, #-88]
   170d8:	mov	x26, x23
   170dc:	sub	x9, x21, #0x1
   170e0:	sub	x8, x8, #0x20
   170e4:	str	x9, [sp, #64]
   170e8:	stur	x8, [x29, #-64]
   170ec:	b	17104 <ZSTD_endStream@@Base+0x91b0>
   170f0:	str	w23, [sp, #104]
   170f4:	mov	w24, w21
   170f8:	mov	x27, x25
   170fc:	cmp	x27, x26
   17100:	b.cs	17780 <ZSTD_endStream@@Base+0x982c>  // b.hs, b.nlast
   17104:	ldur	w1, [x29, #-20]
   17108:	mov	w2, #0x8                   	// #8
   1710c:	mov	x0, x27
   17110:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17114:	ldp	w1, w2, [x29, #-28]
   17118:	mov	x19, x0
   1711c:	mov	x0, x27
   17120:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17124:	ldur	x8, [x29, #-48]
   17128:	ldur	x10, [x29, #-16]
   1712c:	lsl	x9, x0, #2
   17130:	ldr	w12, [x28, x9]
   17134:	sub	w11, w27, w8
   17138:	lsl	x8, x19, #2
   1713c:	ldr	w23, [x10, x8]
   17140:	add	x19, x27, #0x1
   17144:	mov	w21, w24
   17148:	sub	x0, x19, x21
   1714c:	stur	x12, [x29, #-80]
   17150:	str	w11, [x28, x9]
   17154:	stur	w11, [x29, #-68]
   17158:	str	w11, [x10, x8]
   1715c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   17160:	mov	w28, w0
   17164:	mov	x0, x19
   17168:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   1716c:	cbz	w24, 171b4 <ZSTD_endStream@@Base+0x9260>
   17170:	cmp	w28, w0
   17174:	b.ne	171b4 <ZSTD_endStream@@Base+0x9260>  // b.any
   17178:	ldur	x2, [x29, #-40]
   1717c:	neg	x8, x21
   17180:	add	x0, x27, #0x5
   17184:	add	x1, x0, x8
   17188:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   1718c:	ldur	x3, [x29, #-64]
   17190:	mov	x27, x0
   17194:	ldr	x0, [x22, #24]
   17198:	sub	x21, x19, x25
   1719c:	cmp	x19, x3
   171a0:	b.ls	17364 <ZSTD_endStream@@Base+0x9410>  // b.plast
   171a4:	mov	x1, x25
   171a8:	mov	x2, x19
   171ac:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   171b0:	b	173cc <ZSTD_endStream@@Base+0x9478>
   171b4:	ldur	x8, [x29, #-96]
   171b8:	cmp	w23, w8
   171bc:	b.ls	17254 <ZSTD_endStream@@Base+0x9300>  // b.plast
   171c0:	ldur	x8, [x29, #-48]
   171c4:	add	x28, x8, x23
   171c8:	mov	x0, x28
   171cc:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   171d0:	mov	x21, x0
   171d4:	mov	x0, x27
   171d8:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   171dc:	cmp	x21, x0
   171e0:	b.ne	17254 <ZSTD_endStream@@Base+0x9300>  // b.any
   171e4:	ldur	x2, [x29, #-40]
   171e8:	add	x0, x27, #0x8
   171ec:	add	x1, x28, #0x8
   171f0:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   171f4:	add	x20, x0, #0x8
   171f8:	cmp	x27, x25
   171fc:	sub	w8, w27, w28
   17200:	str	w8, [sp, #96]
   17204:	b.ls	174c8 <ZSTD_endStream@@Base+0x9574>  // b.plast
   17208:	ldr	x8, [sp, #64]
   1720c:	ldur	x28, [x29, #-88]
   17210:	ldr	x12, [sp, #88]
   17214:	sub	x9, x27, #0x1
   17218:	add	x8, x8, x23
   1721c:	ldrb	w10, [x9]
   17220:	ldrb	w11, [x8]
   17224:	cmp	w10, w11
   17228:	b.ne	174d4 <ZSTD_endStream@@Base+0x9580>  // b.any
   1722c:	add	x20, x20, #0x1
   17230:	cmp	x9, x25
   17234:	sub	x10, x9, #0x1
   17238:	b.ls	1724c <ZSTD_endStream@@Base+0x92f8>  // b.plast
   1723c:	cmp	x8, x12
   17240:	sub	x8, x8, #0x1
   17244:	mov	x9, x10
   17248:	b.hi	1721c <ZSTD_endStream@@Base+0x92c8>  // b.pmore
   1724c:	add	x19, x10, #0x1
   17250:	b	174d8 <ZSTD_endStream@@Base+0x9584>
   17254:	ldur	x8, [x29, #-96]
   17258:	ldur	x9, [x29, #-80]
   1725c:	cmp	w9, w8
   17260:	b.ls	17350 <ZSTD_endStream@@Base+0x93fc>  // b.plast
   17264:	ldur	x8, [x29, #-48]
   17268:	add	x23, x8, x9
   1726c:	mov	x0, x23
   17270:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   17274:	mov	w21, w0
   17278:	mov	x0, x27
   1727c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   17280:	cmp	w21, w0
   17284:	b.ne	17350 <ZSTD_endStream@@Base+0x93fc>  // b.any
   17288:	ldur	w8, [x29, #-68]
   1728c:	ldur	w1, [x29, #-20]
   17290:	mov	w2, #0x8                   	// #8
   17294:	mov	x0, x19
   17298:	str	x23, [sp, #80]
   1729c:	add	w21, w8, #0x1
   172a0:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   172a4:	ldur	x9, [x29, #-16]
   172a8:	lsl	x8, x0, #2
   172ac:	ldur	x10, [x29, #-96]
   172b0:	ldr	w23, [x9, x8]
   172b4:	str	w21, [x9, x8]
   172b8:	cmp	w23, w10
   172bc:	b.ls	17434 <ZSTD_endStream@@Base+0x94e0>  // b.plast
   172c0:	ldur	x8, [x29, #-48]
   172c4:	add	x28, x8, x23
   172c8:	mov	x0, x28
   172cc:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   172d0:	mov	x21, x0
   172d4:	mov	x0, x19
   172d8:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   172dc:	cmp	x21, x0
   172e0:	b.ne	17434 <ZSTD_endStream@@Base+0x94e0>  // b.any
   172e4:	ldur	x2, [x29, #-40]
   172e8:	add	x0, x27, #0x9
   172ec:	add	x1, x28, #0x8
   172f0:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   172f4:	add	x20, x0, #0x8
   172f8:	cmp	x19, x25
   172fc:	sub	w8, w19, w28
   17300:	str	w8, [sp, #96]
   17304:	b.ls	17760 <ZSTD_endStream@@Base+0x980c>  // b.plast
   17308:	ldr	x8, [sp, #64]
   1730c:	ldur	x28, [x29, #-88]
   17310:	ldr	x19, [sp, #88]
   17314:	add	x8, x8, x23
   17318:	ldrb	w9, [x27]
   1731c:	ldrb	w10, [x8]
   17320:	cmp	w9, w10
   17324:	b.ne	1776c <ZSTD_endStream@@Base+0x9818>  // b.any
   17328:	add	x20, x20, #0x1
   1732c:	cmp	x27, x25
   17330:	sub	x9, x27, #0x1
   17334:	b.ls	17348 <ZSTD_endStream@@Base+0x93f4>  // b.plast
   17338:	cmp	x8, x19
   1733c:	sub	x8, x8, #0x1
   17340:	mov	x27, x9
   17344:	b.hi	17318 <ZSTD_endStream@@Base+0x93c4>  // b.pmore
   17348:	add	x27, x9, #0x1
   1734c:	b	17770 <ZSTD_endStream@@Base+0x981c>
   17350:	ldur	x28, [x29, #-88]
   17354:	sub	x8, x27, x25
   17358:	add	x8, x27, x8, asr #8
   1735c:	add	x27, x8, #0x1
   17360:	b	170fc <ZSTD_endStream@@Base+0x91a8>
   17364:	mov	x1, x25
   17368:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1736c:	cmp	x21, #0x11
   17370:	b.cc	173cc <ZSTD_endStream@@Base+0x9478>  // b.lo, b.ul, b.last
   17374:	ldr	x23, [x22, #24]
   17378:	add	x1, x25, #0x10
   1737c:	add	x0, x23, #0x10
   17380:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17384:	add	x0, x23, #0x20
   17388:	add	x1, x25, #0x20
   1738c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17390:	cmp	x21, #0x31
   17394:	b.lt	173cc <ZSTD_endStream@@Base+0x9478>  // b.tstop
   17398:	add	x20, x23, x21
   1739c:	add	x28, x23, #0x30
   173a0:	add	x25, x25, #0x40
   173a4:	sub	x1, x25, #0x10
   173a8:	mov	x0, x28
   173ac:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   173b0:	add	x0, x28, #0x10
   173b4:	mov	x1, x25
   173b8:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   173bc:	add	x28, x28, #0x20
   173c0:	cmp	x28, x20
   173c4:	add	x25, x25, #0x20
   173c8:	b.cc	173a4 <ZSTD_endStream@@Base+0x9450>  // b.lo, b.ul, b.last
   173cc:	ldr	x9, [x22, #24]
   173d0:	add	x20, x27, #0x4
   173d4:	add	x8, x27, #0x1
   173d8:	cmp	x21, #0x10, lsl #12
   173dc:	add	x9, x9, x21
   173e0:	str	x9, [x22, #24]
   173e4:	b.cc	173fc <ZSTD_endStream@@Base+0x94a8>  // b.lo, b.ul, b.last
   173e8:	ldp	x10, x9, [x22]
   173ec:	sub	x9, x9, x10
   173f0:	lsr	x9, x9, #3
   173f4:	mov	w10, #0x1                   	// #1
   173f8:	stp	w10, w9, [x22, #72]
   173fc:	ldr	x9, [x22, #8]
   17400:	ldur	x28, [x29, #-88]
   17404:	ldur	x12, [x29, #-48]
   17408:	cmp	x8, #0x10, lsl #12
   1740c:	mov	w10, #0x1                   	// #1
   17410:	strh	w21, [x9, #4]
   17414:	str	w10, [x9]
   17418:	b.cc	175cc <ZSTD_endStream@@Base+0x9678>  // b.lo, b.ul, b.last
   1741c:	ldp	x11, x10, [x22]
   17420:	sub	x10, x10, x11
   17424:	lsr	x10, x10, #3
   17428:	mov	w11, #0x2                   	// #2
   1742c:	stp	w11, w10, [x22, #72]
   17430:	b	175cc <ZSTD_endStream@@Base+0x9678>
   17434:	mov	w8, wzr
   17438:	ldur	x28, [x29, #-88]
   1743c:	ldr	x19, [sp, #88]
   17440:	cmp	w8, #0x7
   17444:	b.eq	174cc <ZSTD_endStream@@Base+0x9578>  // b.none
   17448:	cbnz	w8, 170fc <ZSTD_endStream@@Base+0x91a8>
   1744c:	ldr	x21, [sp, #80]
   17450:	ldur	x2, [x29, #-40]
   17454:	add	x0, x27, #0x4
   17458:	add	x1, x21, #0x4
   1745c:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   17460:	ldur	x8, [x29, #-96]
   17464:	ldur	x9, [x29, #-80]
   17468:	add	x20, x0, #0x4
   1746c:	cmp	w9, w8
   17470:	sub	w8, w27, w21
   17474:	str	w8, [sp, #96]
   17478:	b.ls	174cc <ZSTD_endStream@@Base+0x9578>  // b.plast
   1747c:	cmp	x27, x25
   17480:	b.ls	174cc <ZSTD_endStream@@Base+0x9578>  // b.plast
   17484:	ldr	x8, [sp, #64]
   17488:	ldur	x10, [x29, #-80]
   1748c:	sub	x9, x27, #0x1
   17490:	add	x8, x8, x10
   17494:	ldrb	w10, [x9]
   17498:	ldrb	w11, [x8]
   1749c:	cmp	w10, w11
   174a0:	b.ne	174d4 <ZSTD_endStream@@Base+0x9580>  // b.any
   174a4:	add	x20, x20, #0x1
   174a8:	cmp	x9, x25
   174ac:	sub	x10, x9, #0x1
   174b0:	b.ls	1724c <ZSTD_endStream@@Base+0x92f8>  // b.plast
   174b4:	cmp	x8, x19
   174b8:	sub	x8, x8, #0x1
   174bc:	mov	x9, x10
   174c0:	b.hi	17494 <ZSTD_endStream@@Base+0x9540>  // b.pmore
   174c4:	b	1724c <ZSTD_endStream@@Base+0x92f8>
   174c8:	ldur	x28, [x29, #-88]
   174cc:	mov	x19, x27
   174d0:	b	174d8 <ZSTD_endStream@@Base+0x9584>
   174d4:	add	x19, x9, #0x1
   174d8:	ldur	x3, [x29, #-64]
   174dc:	ldr	x0, [x22, #24]
   174e0:	sub	x21, x19, x25
   174e4:	cmp	x19, x3
   174e8:	b.ls	174fc <ZSTD_endStream@@Base+0x95a8>  // b.plast
   174ec:	mov	x1, x25
   174f0:	mov	x2, x19
   174f4:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   174f8:	b	17564 <ZSTD_endStream@@Base+0x9610>
   174fc:	mov	x1, x25
   17500:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17504:	cmp	x21, #0x11
   17508:	b.cc	17564 <ZSTD_endStream@@Base+0x9610>  // b.lo, b.ul, b.last
   1750c:	ldr	x27, [x22, #24]
   17510:	add	x1, x25, #0x10
   17514:	add	x0, x27, #0x10
   17518:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   1751c:	add	x0, x27, #0x20
   17520:	add	x1, x25, #0x20
   17524:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17528:	cmp	x21, #0x31
   1752c:	b.lt	17564 <ZSTD_endStream@@Base+0x9610>  // b.tstop
   17530:	add	x23, x27, x21
   17534:	add	x27, x27, #0x30
   17538:	add	x25, x25, #0x40
   1753c:	sub	x1, x25, #0x10
   17540:	mov	x0, x27
   17544:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17548:	add	x0, x27, #0x10
   1754c:	mov	x1, x25
   17550:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17554:	add	x27, x27, #0x20
   17558:	cmp	x27, x23
   1755c:	add	x25, x25, #0x20
   17560:	b.cc	1753c <ZSTD_endStream@@Base+0x95e8>  // b.lo, b.ul, b.last
   17564:	ldr	x9, [x22, #24]
   17568:	sub	x8, x20, #0x3
   1756c:	cmp	x21, #0x10, lsl #12
   17570:	add	x9, x9, x21
   17574:	str	x9, [x22, #24]
   17578:	b.cc	17590 <ZSTD_endStream@@Base+0x963c>  // b.lo, b.ul, b.last
   1757c:	ldp	x10, x9, [x22]
   17580:	sub	x9, x9, x10
   17584:	lsr	x9, x9, #3
   17588:	mov	w10, #0x1                   	// #1
   1758c:	stp	w10, w9, [x22, #72]
   17590:	ldr	w13, [sp, #96]
   17594:	ldr	x9, [x22, #8]
   17598:	ldur	x12, [x29, #-48]
   1759c:	cmp	x8, #0x10, lsl #12
   175a0:	add	w10, w13, #0x3
   175a4:	strh	w21, [x9, #4]
   175a8:	str	w10, [x9]
   175ac:	b.cc	175c4 <ZSTD_endStream@@Base+0x9670>  // b.lo, b.ul, b.last
   175b0:	ldp	x11, x10, [x22]
   175b4:	sub	x10, x10, x11
   175b8:	lsr	x10, x10, #3
   175bc:	mov	w11, #0x2                   	// #2
   175c0:	stp	w11, w10, [x22, #72]
   175c4:	str	w24, [sp, #104]
   175c8:	mov	w24, w13
   175cc:	add	x25, x19, x20
   175d0:	strh	w8, [x9, #6]
   175d4:	add	x8, x9, #0x8
   175d8:	cmp	x25, x26
   175dc:	str	x8, [x22, #8]
   175e0:	b.hi	170f8 <ZSTD_endStream@@Base+0x91a4>  // b.pmore
   175e4:	ldur	w8, [x29, #-68]
   175e8:	ldur	w28, [x29, #-20]
   175ec:	mov	w2, #0x8                   	// #8
   175f0:	add	w21, w8, #0x2
   175f4:	add	x19, x12, x21
   175f8:	mov	x0, x19
   175fc:	mov	w1, w28
   17600:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17604:	ldur	x27, [x29, #-16]
   17608:	ldur	x8, [x29, #-48]
   1760c:	mov	w1, w28
   17610:	ldur	x28, [x29, #-88]
   17614:	str	w21, [x27, x0, lsl #2]
   17618:	sub	x0, x25, #0x2
   1761c:	mov	w2, #0x8                   	// #8
   17620:	sub	w23, w0, w8
   17624:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17628:	str	w23, [x27, x0, lsl #2]
   1762c:	ldp	w26, w23, [x29, #-28]
   17630:	ldur	x27, [x29, #-48]
   17634:	mov	x0, x19
   17638:	mov	w1, w26
   1763c:	mov	w2, w23
   17640:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17644:	mov	w1, w26
   17648:	ldur	x26, [x29, #-56]
   1764c:	str	w21, [x28, x0, lsl #2]
   17650:	sub	x0, x25, #0x1
   17654:	mov	w2, w23
   17658:	sub	w19, w0, w27
   1765c:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   17660:	ldr	w21, [sp, #104]
   17664:	str	w19, [x28, x0, lsl #2]
   17668:	b	17688 <ZSTD_endStream@@Base+0x9734>
   1766c:	add	x25, x25, x8
   17670:	strh	w24, [x9, #6]
   17674:	add	x9, x9, #0x8
   17678:	cmp	x25, x26
   1767c:	mov	w24, w23
   17680:	str	x9, [x22, #8]
   17684:	b.hi	17754 <ZSTD_endStream@@Base+0x9800>  // b.pmore
   17688:	mov	x0, x25
   1768c:	mov	w23, w21
   17690:	mov	w21, w24
   17694:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   17698:	mov	w24, w23
   1769c:	mov	w19, w0
   176a0:	sub	x0, x25, x24
   176a4:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   176a8:	cbz	w23, 170f0 <ZSTD_endStream@@Base+0x919c>
   176ac:	cmp	w19, w0
   176b0:	b.ne	170f0 <ZSTD_endStream@@Base+0x919c>  // b.any
   176b4:	ldur	x2, [x29, #-40]
   176b8:	neg	x8, x24
   176bc:	add	x0, x25, #0x4
   176c0:	add	x1, x0, x8
   176c4:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   176c8:	ldp	w1, w2, [x29, #-28]
   176cc:	mov	x19, x0
   176d0:	mov	x0, x25
   176d4:	sub	w24, w25, w27
   176d8:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   176dc:	ldur	w1, [x29, #-20]
   176e0:	str	w24, [x28, x0, lsl #2]
   176e4:	mov	w2, #0x8                   	// #8
   176e8:	mov	x0, x25
   176ec:	bl	11994 <ZSTD_endStream@@Base+0x3a40>
   176f0:	ldur	x8, [x29, #-16]
   176f4:	ldur	x3, [x29, #-64]
   176f8:	mov	x1, x25
   176fc:	str	w24, [x8, x0, lsl #2]
   17700:	ldr	x0, [x22, #24]
   17704:	cmp	x25, x3
   17708:	add	x24, x19, #0x1
   1770c:	b.ls	1771c <ZSTD_endStream@@Base+0x97c8>  // b.plast
   17710:	mov	x2, x25
   17714:	bl	17b40 <ZSTD_endStream@@Base+0x9bec>
   17718:	b	17720 <ZSTD_endStream@@Base+0x97cc>
   1771c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17720:	ldr	x9, [x22, #8]
   17724:	add	x8, x19, #0x4
   17728:	cmp	x24, #0x10, lsl #12
   1772c:	mov	w10, #0x1                   	// #1
   17730:	strh	wzr, [x9, #4]
   17734:	str	w10, [x9]
   17738:	b.cc	1766c <ZSTD_endStream@@Base+0x9718>  // b.lo, b.ul, b.last
   1773c:	ldp	x11, x10, [x22]
   17740:	sub	x10, x10, x11
   17744:	lsr	x10, x10, #3
   17748:	mov	w11, #0x2                   	// #2
   1774c:	stp	w11, w10, [x22, #72]
   17750:	b	1766c <ZSTD_endStream@@Base+0x9718>
   17754:	mov	w24, w23
   17758:	str	w21, [sp, #104]
   1775c:	b	170f8 <ZSTD_endStream@@Base+0x91a4>
   17760:	mov	w8, #0x7                   	// #7
   17764:	mov	x27, x19
   17768:	b	17438 <ZSTD_endStream@@Base+0x94e4>
   1776c:	add	x27, x27, #0x1
   17770:	mov	w8, #0x7                   	// #7
   17774:	cmp	w8, #0x7
   17778:	b.ne	17448 <ZSTD_endStream@@Base+0x94f4>  // b.any
   1777c:	b	174cc <ZSTD_endStream@@Base+0x9578>
   17780:	ldr	w10, [sp, #76]
   17784:	ldr	w11, [sp, #104]
   17788:	ldr	x9, [sp, #8]
   1778c:	cmp	w24, #0x0
   17790:	csel	w8, w10, w24, eq  // eq = none
   17794:	cmp	w11, #0x0
   17798:	str	w8, [x9]
   1779c:	csel	w24, w10, w11, eq  // eq = none
   177a0:	b	177b4 <ZSTD_endStream@@Base+0x9860>
   177a4:	mov	x19, x25
   177a8:	ldr	x9, [sp, #8]
   177ac:	mov	x25, x19
   177b0:	str	w26, [x9]
   177b4:	ldur	x8, [x29, #-40]
   177b8:	str	w24, [x9, #4]
   177bc:	ldp	x20, x19, [sp, #288]
   177c0:	ldp	x22, x21, [sp, #272]
   177c4:	sub	x0, x8, x25
   177c8:	ldp	x24, x23, [sp, #256]
   177cc:	ldp	x26, x25, [sp, #240]
   177d0:	ldp	x28, x27, [sp, #224]
   177d4:	ldp	x29, x30, [sp, #208]
   177d8:	add	sp, sp, #0x130
   177dc:	ret
   177e0:	stp	x29, x30, [sp, #-32]!
   177e4:	str	x19, [sp, #16]
   177e8:	mov	x29, sp
   177ec:	mov	w19, w1
   177f0:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   177f4:	mov	w1, w19
   177f8:	bl	178ac <ZSTD_endStream@@Base+0x9958>
   177fc:	ldr	x19, [sp, #16]
   17800:	mov	w0, w0
   17804:	ldp	x29, x30, [sp], #32
   17808:	ret
   1780c:	stp	x29, x30, [sp, #-32]!
   17810:	str	x19, [sp, #16]
   17814:	mov	x29, sp
   17818:	mov	w19, w1
   1781c:	bl	178e8 <ZSTD_endStream@@Base+0x9994>
   17820:	mov	w1, w19
   17824:	bl	178cc <ZSTD_endStream@@Base+0x9978>
   17828:	ldr	x19, [sp, #16]
   1782c:	ldp	x29, x30, [sp], #32
   17830:	ret
   17834:	stp	x29, x30, [sp, #-32]!
   17838:	str	x19, [sp, #16]
   1783c:	mov	x29, sp
   17840:	mov	w19, w1
   17844:	bl	178e8 <ZSTD_endStream@@Base+0x9994>
   17848:	mov	w1, w19
   1784c:	bl	17904 <ZSTD_endStream@@Base+0x99b0>
   17850:	ldr	x19, [sp, #16]
   17854:	ldp	x29, x30, [sp], #32
   17858:	ret
   1785c:	stp	x29, x30, [sp, #-32]!
   17860:	str	x19, [sp, #16]
   17864:	mov	x29, sp
   17868:	mov	w19, w1
   1786c:	bl	178e8 <ZSTD_endStream@@Base+0x9994>
   17870:	mov	w1, w19
   17874:	bl	17920 <ZSTD_endStream@@Base+0x99cc>
   17878:	ldr	x19, [sp, #16]
   1787c:	ldp	x29, x30, [sp], #32
   17880:	ret
   17884:	stp	x29, x30, [sp, #-32]!
   17888:	str	x19, [sp, #16]
   1788c:	mov	x29, sp
   17890:	mov	w19, w1
   17894:	bl	178e8 <ZSTD_endStream@@Base+0x9994>
   17898:	mov	w1, w19
   1789c:	bl	17940 <ZSTD_endStream@@Base+0x99ec>
   178a0:	ldr	x19, [sp, #16]
   178a4:	ldp	x29, x30, [sp], #32
   178a8:	ret
   178ac:	mov	w8, #0x79b1                	// #31153
   178b0:	movk	w8, #0x9e37, lsl #16
   178b4:	mul	w8, w0, w8
   178b8:	neg	w9, w1
   178bc:	lsr	w0, w8, w9
   178c0:	ret
   178c4:	ldr	w0, [x0]
   178c8:	ret
   178cc:	mov	x8, #0xbb000000            	// #3137339392
   178d0:	movk	x8, #0xbcdc, lsl #32
   178d4:	movk	x8, #0xcf1b, lsl #48
   178d8:	mul	x8, x0, x8
   178dc:	neg	w9, w1
   178e0:	lsr	x0, x8, x9
   178e4:	ret
   178e8:	stp	x29, x30, [sp, #-16]!
   178ec:	mov	x29, sp
   178f0:	bl	178fc <ZSTD_endStream@@Base+0x99a8>
   178f4:	ldp	x29, x30, [sp], #16
   178f8:	ret
   178fc:	ldr	x0, [x0]
   17900:	ret
   17904:	mov	x8, #0xbf9b0000            	// #3214606336
   17908:	movk	x8, #0xbcdc, lsl #32
   1790c:	movk	x8, #0xcf1b, lsl #48
   17910:	mul	x8, x0, x8
   17914:	neg	w9, w1
   17918:	lsr	x0, x8, x9
   1791c:	ret
   17920:	mov	x8, #0x6300                	// #25344
   17924:	movk	x8, #0xbfa5, lsl #16
   17928:	movk	x8, #0xbcdc, lsl #32
   1792c:	movk	x8, #0xcf1b, lsl #48
   17930:	mul	x8, x0, x8
   17934:	neg	w9, w1
   17938:	lsr	x0, x8, x9
   1793c:	ret
   17940:	mov	x8, #0x6463                	// #25699
   17944:	movk	x8, #0xb7a5, lsl #16
   17948:	movk	x8, #0xbcdc, lsl #32
   1794c:	movk	x8, #0xcf1b, lsl #48
   17950:	mul	x8, x0, x8
   17954:	neg	w9, w1
   17958:	lsr	x0, x8, x9
   1795c:	ret
   17960:	stp	x29, x30, [sp, #-64]!
   17964:	sub	x8, x3, x1
   17968:	add	x8, x0, x8
   1796c:	cmp	x8, x2
   17970:	stp	x20, x19, [sp, #48]
   17974:	mov	x20, x2
   17978:	csel	x2, x8, x2, cc  // cc = lo, ul, last
   1797c:	stp	x24, x23, [sp, #16]
   17980:	stp	x22, x21, [sp, #32]
   17984:	mov	x29, sp
   17988:	mov	x19, x4
   1798c:	mov	x23, x3
   17990:	mov	x24, x1
   17994:	mov	x22, x0
   17998:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   1799c:	add	x8, x24, x0
   179a0:	mov	x21, x0
   179a4:	cmp	x8, x23
   179a8:	b.ne	179c0 <ZSTD_endStream@@Base+0x9a6c>  // b.any
   179ac:	add	x0, x22, x21
   179b0:	mov	x1, x19
   179b4:	mov	x2, x20
   179b8:	bl	179d8 <ZSTD_endStream@@Base+0x9a84>
   179bc:	add	x21, x0, x21
   179c0:	mov	x0, x21
   179c4:	ldp	x20, x19, [sp, #48]
   179c8:	ldp	x22, x21, [sp, #32]
   179cc:	ldp	x24, x23, [sp, #16]
   179d0:	ldp	x29, x30, [sp], #64
   179d4:	ret
   179d8:	stp	x29, x30, [sp, #-80]!
   179dc:	stp	x26, x25, [sp, #16]
   179e0:	sub	x25, x2, #0x7
   179e4:	stp	x22, x21, [sp, #48]
   179e8:	stp	x20, x19, [sp, #64]
   179ec:	mov	x20, x2
   179f0:	mov	x19, x0
   179f4:	cmp	x25, x0
   179f8:	mov	x21, x1
   179fc:	stp	x24, x23, [sp, #32]
   17a00:	mov	x29, sp
   17a04:	b.ls	17a38 <ZSTD_endStream@@Base+0x9ae4>  // b.plast
   17a08:	mov	x0, x21
   17a0c:	bl	17bf8 <ZSTD_endStream@@Base+0x9ca4>
   17a10:	mov	x22, x0
   17a14:	mov	x0, x19
   17a18:	bl	17bf8 <ZSTD_endStream@@Base+0x9ca4>
   17a1c:	eor	x0, x0, x22
   17a20:	cbz	x0, 17ad8 <ZSTD_endStream@@Base+0x9b84>
   17a24:	bl	17c00 <ZSTD_endStream@@Base+0x9cac>
   17a28:	mov	w8, wzr
   17a2c:	mov	w23, w0
   17a30:	cbz	w8, 17abc <ZSTD_endStream@@Base+0x9b68>
   17a34:	b	17ae0 <ZSTD_endStream@@Base+0x9b8c>
   17a38:	mov	x22, x19
   17a3c:	sub	x8, x20, #0x3
   17a40:	cmp	x22, x8
   17a44:	b.cs	17a6c <ZSTD_endStream@@Base+0x9b18>  // b.hs, b.nlast
   17a48:	mov	x0, x21
   17a4c:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   17a50:	mov	w23, w0
   17a54:	mov	x0, x22
   17a58:	bl	178c4 <ZSTD_endStream@@Base+0x9970>
   17a5c:	cmp	w23, w0
   17a60:	b.ne	17a6c <ZSTD_endStream@@Base+0x9b18>  // b.any
   17a64:	add	x22, x22, #0x4
   17a68:	add	x21, x21, #0x4
   17a6c:	sub	x8, x20, #0x1
   17a70:	cmp	x22, x8
   17a74:	b.cs	17a9c <ZSTD_endStream@@Base+0x9b48>  // b.hs, b.nlast
   17a78:	mov	x0, x21
   17a7c:	bl	17c10 <ZSTD_endStream@@Base+0x9cbc>
   17a80:	and	w23, w0, #0xffff
   17a84:	mov	x0, x22
   17a88:	bl	17c10 <ZSTD_endStream@@Base+0x9cbc>
   17a8c:	cmp	w23, w0, uxth
   17a90:	b.ne	17a9c <ZSTD_endStream@@Base+0x9b48>  // b.any
   17a94:	add	x22, x22, #0x2
   17a98:	add	x21, x21, #0x2
   17a9c:	cmp	x22, x20
   17aa0:	b.cs	17ab8 <ZSTD_endStream@@Base+0x9b64>  // b.hs, b.nlast
   17aa4:	mov	x9, x22
   17aa8:	ldrb	w8, [x21]
   17aac:	ldrb	w10, [x9], #1
   17ab0:	cmp	w8, w10
   17ab4:	csel	x22, x9, x22, eq  // eq = none
   17ab8:	sub	x23, x22, x19
   17abc:	mov	x0, x23
   17ac0:	ldp	x20, x19, [sp, #64]
   17ac4:	ldp	x22, x21, [sp, #48]
   17ac8:	ldp	x24, x23, [sp, #32]
   17acc:	ldp	x26, x25, [sp, #16]
   17ad0:	ldp	x29, x30, [sp], #80
   17ad4:	ret
   17ad8:	mov	w8, #0x1                   	// #1
   17adc:	cbz	w8, 17abc <ZSTD_endStream@@Base+0x9b68>
   17ae0:	add	x22, x19, #0x8
   17ae4:	add	x21, x21, #0x8
   17ae8:	mov	w26, #0x1                   	// #1
   17aec:	b	17afc <ZSTD_endStream@@Base+0x9ba8>
   17af0:	add	x22, x22, #0x8
   17af4:	add	x21, x21, #0x8
   17af8:	tbz	w26, #0, 17abc <ZSTD_endStream@@Base+0x9b68>
   17afc:	cmp	x22, x25
   17b00:	b.cs	17a3c <ZSTD_endStream@@Base+0x9ae8>  // b.hs, b.nlast
   17b04:	mov	x0, x21
   17b08:	bl	17bf8 <ZSTD_endStream@@Base+0x9ca4>
   17b0c:	mov	x24, x0
   17b10:	mov	x0, x22
   17b14:	bl	17bf8 <ZSTD_endStream@@Base+0x9ca4>
   17b18:	eor	x0, x0, x24
   17b1c:	cbz	x0, 17af0 <ZSTD_endStream@@Base+0x9b9c>
   17b20:	bl	17c00 <ZSTD_endStream@@Base+0x9cac>
   17b24:	add	x22, x22, w0, uxtw
   17b28:	sub	x23, x22, x19
   17b2c:	tbnz	wzr, #0, 17afc <ZSTD_endStream@@Base+0x9ba8>
   17b30:	b	17abc <ZSTD_endStream@@Base+0x9b68>
   17b34:	ldr	q0, [x1]
   17b38:	str	q0, [x0]
   17b3c:	ret
   17b40:	stp	x29, x30, [sp, #-64]!
   17b44:	stp	x22, x21, [sp, #32]
   17b48:	stp	x20, x19, [sp, #48]
   17b4c:	mov	x19, x2
   17b50:	mov	x20, x1
   17b54:	cmp	x1, x3
   17b58:	mov	x22, x0
   17b5c:	stp	x24, x23, [sp, #16]
   17b60:	mov	x29, sp
   17b64:	b.hi	17bcc <ZSTD_endStream@@Base+0x9c78>  // b.pmore
   17b68:	sub	x24, x3, x20
   17b6c:	mov	x0, x22
   17b70:	mov	x1, x20
   17b74:	mov	x21, x3
   17b78:	add	x23, x22, x24
   17b7c:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17b80:	add	x0, x22, #0x10
   17b84:	add	x1, x20, #0x10
   17b88:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17b8c:	cmp	x24, #0x21
   17b90:	b.lt	17bc4 <ZSTD_endStream@@Base+0x9c70>  // b.tstop
   17b94:	add	x22, x22, #0x20
   17b98:	add	x20, x20, #0x30
   17b9c:	sub	x1, x20, #0x10
   17ba0:	mov	x0, x22
   17ba4:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17ba8:	add	x0, x22, #0x10
   17bac:	mov	x1, x20
   17bb0:	bl	17b34 <ZSTD_endStream@@Base+0x9be0>
   17bb4:	add	x22, x22, #0x20
   17bb8:	cmp	x22, x23
   17bbc:	add	x20, x20, #0x20
   17bc0:	b.cc	17b9c <ZSTD_endStream@@Base+0x9c48>  // b.lo, b.ul, b.last
   17bc4:	mov	x20, x21
   17bc8:	mov	x22, x23
   17bcc:	cmp	x20, x19
   17bd0:	b.cs	17be4 <ZSTD_endStream@@Base+0x9c90>  // b.hs, b.nlast
   17bd4:	ldrb	w8, [x20], #1
   17bd8:	cmp	x19, x20
   17bdc:	strb	w8, [x22], #1
   17be0:	b.ne	17bd4 <ZSTD_endStream@@Base+0x9c80>  // b.any
   17be4:	ldp	x20, x19, [sp, #48]
   17be8:	ldp	x22, x21, [sp, #32]
   17bec:	ldp	x24, x23, [sp, #16]
   17bf0:	ldp	x29, x30, [sp], #64
   17bf4:	ret
   17bf8:	ldr	x0, [x0]
   17bfc:	ret
   17c00:	rbit	x8, x0
   17c04:	clz	x8, x8
   17c08:	ubfx	x0, x8, #3, #29
   17c0c:	ret
   17c10:	ldrh	w0, [x0]
   17c14:	ret
   17c18:	ldp	w8, w10, [x0, #28]
   17c1c:	mov	w9, #0x1                   	// #1
   17c20:	lsl	w9, w9, w2
   17c24:	sub	w12, w1, w9
   17c28:	sub	w11, w1, w8
   17c2c:	cmp	w11, w9
   17c30:	ccmp	w10, #0x0, #0x0, hi  // hi = pmore
   17c34:	csel	w0, w12, w8, eq  // eq = none
   17c38:	ret
   17c3c:	stp	x29, x30, [sp, #-96]!
   17c40:	stp	x28, x27, [sp, #16]
   17c44:	stp	x26, x25, [sp, #32]
   17c48:	stp	x24, x23, [sp, #48]
   17c4c:	stp	x22, x21, [sp, #64]
   17c50:	stp	x20, x19, [sp, #80]
   17c54:	ldr	x23, [x0, #8]
   17c58:	ldr	w8, [x0, #36]
   17c5c:	sub	x25, x1, #0x6
   17c60:	mov	x29, sp
   17c64:	add	x19, x23, x8
   17c68:	add	x24, x19, #0x3
   17c6c:	cmp	x24, x25
   17c70:	b.cs	17cf0 <ZSTD_endStream@@Base+0x9d9c>  // b.hs, b.nlast
   17c74:	ldr	x26, [x0, #48]
   17c78:	ldr	w21, [x0, #192]
   17c7c:	ldr	w22, [x0, #200]
   17c80:	mov	w20, w2
   17c84:	b	17c98 <ZSTD_endStream@@Base+0x9d44>
   17c88:	add	x24, x24, #0x3
   17c8c:	cmp	x24, x25
   17c90:	add	x19, x19, #0x3
   17c94:	b.cs	17cf0 <ZSTD_endStream@@Base+0x9d9c>  // b.hs, b.nlast
   17c98:	mov	x0, x19
   17c9c:	mov	w1, w21
   17ca0:	mov	w2, w22
   17ca4:	sub	w27, w19, w23
   17ca8:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   17cac:	str	w27, [x26, x0, lsl #2]
   17cb0:	cbz	w20, 17c88 <ZSTD_endStream@@Base+0x9d34>
   17cb4:	mov	w27, w27
   17cb8:	mov	w28, #0x1                   	// #1
   17cbc:	b	17ccc <ZSTD_endStream@@Base+0x9d78>
   17cc0:	add	x28, x28, #0x1
   17cc4:	cmp	x28, #0x3
   17cc8:	b.eq	17c88 <ZSTD_endStream@@Base+0x9d34>  // b.none
   17ccc:	add	x0, x19, x28
   17cd0:	mov	w1, w21
   17cd4:	mov	w2, w22
   17cd8:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   17cdc:	ldr	w8, [x26, x0, lsl #2]
   17ce0:	cbnz	w8, 17cc0 <ZSTD_endStream@@Base+0x9d6c>
   17ce4:	add	w8, w27, w28
   17ce8:	str	w8, [x26, x0, lsl #2]
   17cec:	b	17cc0 <ZSTD_endStream@@Base+0x9d6c>
   17cf0:	ldp	x20, x19, [sp, #80]
   17cf4:	ldp	x22, x21, [sp, #64]
   17cf8:	ldp	x24, x23, [sp, #48]
   17cfc:	ldp	x26, x25, [sp, #32]
   17d00:	ldp	x28, x27, [sp, #16]
   17d04:	ldp	x29, x30, [sp], #96
   17d08:	ret
   17d0c:	stp	x29, x30, [sp, #-16]!
   17d10:	sub	w8, w2, #0x5
   17d14:	cmp	w8, #0x3
   17d18:	mov	x29, sp
   17d1c:	b.hi	17d44 <ZSTD_endStream@@Base+0x9df0>  // b.pmore
   17d20:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   17d24:	add	x9, x9, #0xa8c
   17d28:	adr	x10, 17d38 <ZSTD_endStream@@Base+0x9de4>
   17d2c:	ldrb	w11, [x9, x8]
   17d30:	add	x10, x10, x11, lsl #2
   17d34:	br	x10
   17d38:	bl	1bdd4 <ZSTD_endStream@@Base+0xde80>
   17d3c:	ldp	x29, x30, [sp], #16
   17d40:	ret
   17d44:	bl	1bda8 <ZSTD_endStream@@Base+0xde54>
   17d48:	ldp	x29, x30, [sp], #16
   17d4c:	ret
   17d50:	bl	1bdfc <ZSTD_endStream@@Base+0xdea8>
   17d54:	ldp	x29, x30, [sp], #16
   17d58:	ret
   17d5c:	bl	1be24 <ZSTD_endStream@@Base+0xded0>
   17d60:	ldp	x29, x30, [sp], #16
   17d64:	ret
   17d68:	bl	1be4c <ZSTD_endStream@@Base+0xdef8>
   17d6c:	ldp	x29, x30, [sp], #16
   17d70:	ret
   17d74:	sub	sp, sp, #0xe0
   17d78:	stp	x29, x30, [sp, #128]
   17d7c:	stp	x28, x27, [sp, #144]
   17d80:	stp	x26, x25, [sp, #160]
   17d84:	stp	x24, x23, [sp, #176]
   17d88:	stp	x22, x21, [sp, #192]
   17d8c:	stp	x20, x19, [sp, #208]
   17d90:	ldr	w8, [x0, #200]
   17d94:	mov	x22, x3
   17d98:	mov	x21, x1
   17d9c:	add	x29, sp, #0x80
   17da0:	cmp	w8, #0x5
   17da4:	str	x2, [sp, #40]
   17da8:	b.eq	182d0 <ZSTD_endStream@@Base+0xa37c>  // b.none
   17dac:	cmp	w8, #0x6
   17db0:	b.eq	187e4 <ZSTD_endStream@@Base+0xa890>  // b.none
   17db4:	cmp	w8, #0x7
   17db8:	b.ne	18cf8 <ZSTD_endStream@@Base+0xada4>  // b.any
   17dbc:	ldr	x16, [x0, #8]
   17dc0:	ldr	w8, [x0, #204]
   17dc4:	ldr	w9, [x0, #184]
   17dc8:	ldr	w10, [x0, #24]
   17dcc:	add	x27, x22, x4
   17dd0:	mov	w14, #0x1                   	// #1
   17dd4:	sub	w13, w27, w16
   17dd8:	cmp	w8, #0x0
   17ddc:	lsl	w9, w14, w9
   17de0:	sub	w14, w13, w10
   17de4:	cinc	w8, w8, eq  // eq = none
   17de8:	sub	w13, w13, w9
   17dec:	cmp	w14, w9
   17df0:	mov	x15, x2
   17df4:	csel	w13, w13, w10, hi  // hi = pmore
   17df8:	ldr	x28, [x0, #48]
   17dfc:	ldr	w19, [x0, #192]
   17e00:	ldr	w11, [x2]
   17e04:	ldr	w12, [x15, #4]!
   17e08:	add	x14, x16, x13
   17e0c:	cmp	x14, x22
   17e10:	cinc	x25, x22, eq  // eq = none
   17e14:	sub	w9, w25, w14
   17e18:	cmp	w12, w9
   17e1c:	sub	x24, x27, #0x8
   17e20:	add	x26, x25, #0x1
   17e24:	csel	w10, w12, wzr, hi  // hi = pmore
   17e28:	csel	w12, wzr, w12, hi  // hi = pmore
   17e2c:	cmp	w11, w9
   17e30:	csel	w9, w11, w10, hi  // hi = pmore
   17e34:	csel	w23, wzr, w11, hi  // hi = pmore
   17e38:	cmp	x26, x24
   17e3c:	stur	w12, [x29, #-44]
   17e40:	str	x15, [sp, #32]
   17e44:	str	w9, [sp, #4]
   17e48:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   17e4c:	add	w8, w8, #0x1
   17e50:	stp	x14, x8, [sp, #8]
   17e54:	sub	x8, x27, #0x20
   17e58:	stur	x8, [x29, #-40]
   17e5c:	add	x8, x16, #0x2
   17e60:	str	x13, [sp, #48]
   17e64:	stur	x16, [x29, #-16]
   17e68:	str	x8, [sp, #24]
   17e6c:	stur	x27, [x29, #-8]
   17e70:	str	x28, [sp, #56]
   17e74:	stur	w19, [x29, #-28]
   17e78:	stur	x24, [x29, #-24]
   17e7c:	b	17eac <ZSTD_endStream@@Base+0x9f58>
   17e80:	ldr	x9, [sp, #16]
   17e84:	ldur	x27, [x29, #-8]
   17e88:	ldr	x28, [sp, #56]
   17e8c:	ldur	x24, [x29, #-24]
   17e90:	sub	x8, x25, x22
   17e94:	add	x8, x9, x8, lsr #7
   17e98:	add	x25, x25, x8
   17e9c:	add	x26, x26, x8
   17ea0:	ldur	w19, [x29, #-28]
   17ea4:	cmp	x26, x24
   17ea8:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   17eac:	mov	w2, #0x7                   	// #7
   17eb0:	mov	x0, x25
   17eb4:	mov	w1, w19
   17eb8:	add	x27, x25, #0x2
   17ebc:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   17ec0:	mov	x20, x0
   17ec4:	mov	x0, x25
   17ec8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   17ecc:	stur	w0, [x29, #-60]
   17ed0:	mov	w2, #0x7                   	// #7
   17ed4:	mov	x0, x26
   17ed8:	mov	w1, w19
   17edc:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   17ee0:	mov	x24, x0
   17ee4:	mov	x0, x26
   17ee8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   17eec:	ldur	x8, [x29, #-16]
   17ef0:	lsl	x9, x20, #2
   17ef4:	lsl	x10, x24, #2
   17ef8:	ldr	w19, [x28, x9]
   17efc:	mov	x11, x28
   17f00:	ldr	w28, [x28, x10]
   17f04:	sub	x20, x27, w23, uxtw
   17f08:	str	w0, [sp, #64]
   17f0c:	sub	x12, x25, x8
   17f10:	sub	w8, w26, w8
   17f14:	mov	x0, x20
   17f18:	stur	x12, [x29, #-56]
   17f1c:	str	w12, [x11, x9]
   17f20:	str	w8, [x11, x10]
   17f24:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   17f28:	mov	w24, w0
   17f2c:	mov	x0, x27
   17f30:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   17f34:	cbz	w23, 17f68 <ZSTD_endStream@@Base+0xa014>
   17f38:	cmp	w24, w0
   17f3c:	b.ne	17f68 <ZSTD_endStream@@Base+0xa014>  // b.any
   17f40:	ldrb	w8, [x25, #1]
   17f44:	ldurb	w9, [x20, #-1]
   17f48:	ldur	x2, [x29, #-8]
   17f4c:	mov	w26, wzr
   17f50:	mov	w24, w23
   17f54:	cmp	w8, w9
   17f58:	cset	w19, eq  // eq = none
   17f5c:	sub	x25, x27, x19
   17f60:	sub	x27, x20, x19
   17f64:	b	18034 <ZSTD_endStream@@Base+0xa0e0>
   17f68:	ldr	x20, [sp, #48]
   17f6c:	cmp	w19, w20
   17f70:	b.ls	17f90 <ZSTD_endStream@@Base+0xa03c>  // b.plast
   17f74:	ldur	x8, [x29, #-16]
   17f78:	add	x27, x8, x19
   17f7c:	mov	x0, x27
   17f80:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   17f84:	ldur	w8, [x29, #-60]
   17f88:	cmp	w0, w8
   17f8c:	b.eq	17fb8 <ZSTD_endStream@@Base+0xa064>  // b.none
   17f90:	cmp	w28, w20
   17f94:	b.ls	17e80 <ZSTD_endStream@@Base+0x9f2c>  // b.plast
   17f98:	ldur	x8, [x29, #-16]
   17f9c:	add	x27, x8, x28
   17fa0:	mov	x0, x27
   17fa4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   17fa8:	ldr	w8, [sp, #64]
   17fac:	cmp	w0, w8
   17fb0:	b.ne	17e80 <ZSTD_endStream@@Base+0x9f2c>  // b.any
   17fb4:	mov	x25, x26
   17fb8:	ldr	x12, [sp, #8]
   17fbc:	ldur	x2, [x29, #-8]
   17fc0:	sub	w24, w25, w27
   17fc4:	mov	x19, xzr
   17fc8:	cmp	x27, x12
   17fcc:	add	w26, w24, #0x2
   17fd0:	b.ls	18030 <ZSTD_endStream@@Base+0xa0dc>  // b.plast
   17fd4:	cmp	x25, x22
   17fd8:	b.ls	18030 <ZSTD_endStream@@Base+0xa0dc>  // b.plast
   17fdc:	mov	x19, xzr
   17fe0:	sub	x9, x25, #0x1
   17fe4:	sub	x8, x27, #0x1
   17fe8:	ldrb	w10, [x9]
   17fec:	ldrb	w11, [x8]
   17ff0:	cmp	w10, w11
   17ff4:	b.ne	18028 <ZSTD_endStream@@Base+0xa0d4>  // b.any
   17ff8:	add	x19, x19, #0x1
   17ffc:	sub	x10, x9, #0x1
   18000:	cmp	x9, x22
   18004:	sub	x11, x8, #0x1
   18008:	b.ls	1801c <ZSTD_endStream@@Base+0xa0c8>  // b.plast
   1800c:	cmp	x8, x12
   18010:	mov	x8, x11
   18014:	mov	x9, x10
   18018:	b.hi	17fe8 <ZSTD_endStream@@Base+0xa094>  // b.pmore
   1801c:	add	x25, x10, #0x1
   18020:	add	x27, x11, #0x1
   18024:	b	18030 <ZSTD_endStream@@Base+0xa0dc>
   18028:	add	x25, x9, #0x1
   1802c:	add	x27, x8, #0x1
   18030:	stur	w23, [x29, #-44]
   18034:	add	x8, x25, x19
   18038:	add	x9, x27, x19
   1803c:	add	x0, x8, #0x4
   18040:	add	x1, x9, #0x4
   18044:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   18048:	ldur	x3, [x29, #-40]
   1804c:	mov	x8, x0
   18050:	ldr	x0, [x21, #24]
   18054:	add	x27, x19, x8
   18058:	cmp	x25, x3
   1805c:	sub	x23, x25, x22
   18060:	b.ls	18074 <ZSTD_endStream@@Base+0xa120>  // b.plast
   18064:	mov	x1, x22
   18068:	mov	x2, x25
   1806c:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   18070:	b	180dc <ZSTD_endStream@@Base+0xa188>
   18074:	mov	x1, x22
   18078:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1807c:	cmp	x23, #0x11
   18080:	b.cc	180dc <ZSTD_endStream@@Base+0xa188>  // b.lo, b.ul, b.last
   18084:	ldr	x19, [x21, #24]
   18088:	add	x1, x22, #0x10
   1808c:	add	x0, x19, #0x10
   18090:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18094:	add	x0, x19, #0x20
   18098:	add	x1, x22, #0x20
   1809c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   180a0:	cmp	x23, #0x31
   180a4:	b.lt	180dc <ZSTD_endStream@@Base+0xa188>  // b.tstop
   180a8:	add	x28, x19, x23
   180ac:	add	x19, x19, #0x30
   180b0:	add	x20, x22, #0x40
   180b4:	sub	x1, x20, #0x10
   180b8:	mov	x0, x19
   180bc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   180c0:	add	x0, x19, #0x10
   180c4:	mov	x1, x20
   180c8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   180cc:	add	x19, x19, #0x20
   180d0:	cmp	x19, x28
   180d4:	add	x20, x20, #0x20
   180d8:	b.cc	180b4 <ZSTD_endStream@@Base+0xa160>  // b.lo, b.ul, b.last
   180dc:	ldr	x9, [x21, #24]
   180e0:	add	x8, x27, #0x1
   180e4:	cmp	x23, #0x10, lsl #12
   180e8:	add	x9, x9, x23
   180ec:	str	x9, [x21, #24]
   180f0:	b.cc	18108 <ZSTD_endStream@@Base+0xa1b4>  // b.lo, b.ul, b.last
   180f4:	ldp	x10, x9, [x21]
   180f8:	sub	x9, x9, x10
   180fc:	lsr	x9, x9, #3
   18100:	mov	w10, #0x1                   	// #1
   18104:	stp	w10, w9, [x21, #72]
   18108:	ldr	x10, [x21, #8]
   1810c:	ldr	x28, [sp, #56]
   18110:	add	x9, x27, #0x4
   18114:	add	w11, w26, #0x1
   18118:	cmp	x8, #0x10, lsl #12
   1811c:	strh	w23, [x10, #4]
   18120:	str	w11, [x10]
   18124:	b.cc	1813c <ZSTD_endStream@@Base+0xa1e8>  // b.lo, b.ul, b.last
   18128:	ldp	x12, x11, [x21]
   1812c:	sub	x11, x11, x12
   18130:	lsr	x11, x11, #3
   18134:	mov	w12, #0x2                   	// #2
   18138:	stp	w12, w11, [x21, #72]
   1813c:	strh	w8, [x10, #6]
   18140:	add	x8, x10, #0x8
   18144:	str	x8, [x21, #8]
   18148:	ldur	x8, [x29, #-24]
   1814c:	ldur	x27, [x29, #-8]
   18150:	add	x22, x25, x9
   18154:	add	x26, x22, #0x1
   18158:	cmp	x22, x8
   1815c:	b.hi	182c0 <ZSTD_endStream@@Base+0xa36c>  // b.pmore
   18160:	ldur	x9, [x29, #-56]
   18164:	ldr	x8, [sp, #24]
   18168:	ldur	w20, [x29, #-28]
   1816c:	mov	w2, #0x7                   	// #7
   18170:	add	w19, w9, #0x2
   18174:	add	x0, x8, w9, uxtw
   18178:	mov	w1, w20
   1817c:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18180:	ldur	x8, [x29, #-16]
   18184:	str	w19, [x28, x0, lsl #2]
   18188:	sub	x0, x22, #0x2
   1818c:	mov	w2, #0x7                   	// #7
   18190:	mov	w1, w20
   18194:	sub	w19, w0, w8
   18198:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1819c:	ldur	w23, [x29, #-44]
   181a0:	str	w19, [x28, x0, lsl #2]
   181a4:	cbz	w23, 182c0 <ZSTD_endStream@@Base+0xa36c>
   181a8:	mov	x0, x22
   181ac:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   181b0:	mov	w20, w23
   181b4:	mov	w19, w0
   181b8:	sub	x0, x22, x20
   181bc:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   181c0:	cmp	w19, w0
   181c4:	b.ne	182c0 <ZSTD_endStream@@Base+0xa36c>  // b.any
   181c8:	neg	x20, x20
   181cc:	mov	w0, w23
   181d0:	mov	w23, w24
   181d4:	mov	w25, w23
   181d8:	mov	w23, w0
   181dc:	add	x0, x22, #0x4
   181e0:	add	x1, x0, x20
   181e4:	mov	x2, x27
   181e8:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   181ec:	ldur	x8, [x29, #-16]
   181f0:	ldur	w1, [x29, #-28]
   181f4:	mov	x19, x0
   181f8:	add	x20, x0, x22
   181fc:	mov	w2, #0x7                   	// #7
   18200:	mov	x0, x22
   18204:	sub	w24, w22, w8
   18208:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1820c:	str	w24, [x28, x0, lsl #2]
   18210:	ldur	x3, [x29, #-40]
   18214:	ldr	x0, [x21, #24]
   18218:	add	x19, x19, #0x1
   1821c:	cmp	x22, x3
   18220:	b.ls	18234 <ZSTD_endStream@@Base+0xa2e0>  // b.plast
   18224:	mov	x1, x22
   18228:	mov	x2, x22
   1822c:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   18230:	b	1823c <ZSTD_endStream@@Base+0xa2e8>
   18234:	mov	x1, x22
   18238:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1823c:	ldr	x8, [x21, #8]
   18240:	ldur	x24, [x29, #-24]
   18244:	mov	w9, #0x1                   	// #1
   18248:	add	x22, x20, #0x4
   1824c:	add	x26, x20, #0x5
   18250:	cmp	x19, #0x10, lsl #12
   18254:	strh	wzr, [x8, #4]
   18258:	str	w9, [x8]
   1825c:	b.cc	18274 <ZSTD_endStream@@Base+0xa320>  // b.lo, b.ul, b.last
   18260:	ldp	x10, x9, [x21]
   18264:	sub	x9, x9, x10
   18268:	lsr	x9, x9, #3
   1826c:	mov	w10, #0x2                   	// #2
   18270:	stp	w10, w9, [x21, #72]
   18274:	strh	w19, [x8, #6]
   18278:	add	x8, x8, #0x8
   1827c:	str	x8, [x21, #8]
   18280:	stur	w25, [x29, #-44]
   18284:	cbz	w25, 182c8 <ZSTD_endStream@@Base+0xa374>
   18288:	cmp	x22, x24
   1828c:	b.hi	182c8 <ZSTD_endStream@@Base+0xa374>  // b.pmore
   18290:	mov	x0, x22
   18294:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18298:	mov	w8, w25
   1829c:	mov	w19, w0
   182a0:	sub	x0, x22, x8
   182a4:	neg	x20, x8
   182a8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   182ac:	cmp	w19, w0
   182b0:	mov	w0, w25
   182b4:	mov	x25, x22
   182b8:	b.eq	181d4 <ZSTD_endStream@@Base+0xa280>  // b.none
   182bc:	b	17ea0 <ZSTD_endStream@@Base+0x9f4c>
   182c0:	mov	w23, w24
   182c4:	ldur	x24, [x29, #-24]
   182c8:	mov	x25, x22
   182cc:	b	17ea0 <ZSTD_endStream@@Base+0x9f4c>
   182d0:	ldr	x16, [x0, #8]
   182d4:	ldr	w8, [x0, #204]
   182d8:	ldr	w9, [x0, #184]
   182dc:	ldr	w10, [x0, #24]
   182e0:	add	x27, x22, x4
   182e4:	mov	w14, #0x1                   	// #1
   182e8:	sub	w13, w27, w16
   182ec:	cmp	w8, #0x0
   182f0:	lsl	w9, w14, w9
   182f4:	sub	w14, w13, w10
   182f8:	cinc	w8, w8, eq  // eq = none
   182fc:	sub	w13, w13, w9
   18300:	cmp	w14, w9
   18304:	mov	x15, x2
   18308:	csel	w13, w13, w10, hi  // hi = pmore
   1830c:	ldr	x28, [x0, #48]
   18310:	ldr	w19, [x0, #192]
   18314:	ldr	w11, [x2]
   18318:	ldr	w12, [x15, #4]!
   1831c:	add	x14, x16, x13
   18320:	cmp	x14, x22
   18324:	cinc	x25, x22, eq  // eq = none
   18328:	sub	w9, w25, w14
   1832c:	cmp	w12, w9
   18330:	sub	x24, x27, #0x8
   18334:	add	x26, x25, #0x1
   18338:	csel	w10, w12, wzr, hi  // hi = pmore
   1833c:	csel	w12, wzr, w12, hi  // hi = pmore
   18340:	cmp	w11, w9
   18344:	csel	w9, w11, w10, hi  // hi = pmore
   18348:	csel	w23, wzr, w11, hi  // hi = pmore
   1834c:	cmp	x26, x24
   18350:	stur	w12, [x29, #-44]
   18354:	str	x15, [sp, #32]
   18358:	str	w9, [sp, #4]
   1835c:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   18360:	add	w8, w8, #0x1
   18364:	stp	x14, x8, [sp, #8]
   18368:	sub	x8, x27, #0x20
   1836c:	stur	x8, [x29, #-40]
   18370:	add	x8, x16, #0x2
   18374:	str	x13, [sp, #48]
   18378:	stur	x16, [x29, #-16]
   1837c:	str	x8, [sp, #24]
   18380:	stur	x27, [x29, #-8]
   18384:	str	x28, [sp, #56]
   18388:	stur	w19, [x29, #-28]
   1838c:	stur	x24, [x29, #-24]
   18390:	b	183c0 <ZSTD_endStream@@Base+0xa46c>
   18394:	ldr	x9, [sp, #16]
   18398:	ldur	x27, [x29, #-8]
   1839c:	ldr	x28, [sp, #56]
   183a0:	ldur	x24, [x29, #-24]
   183a4:	sub	x8, x25, x22
   183a8:	add	x8, x9, x8, lsr #7
   183ac:	add	x25, x25, x8
   183b0:	add	x26, x26, x8
   183b4:	ldur	w19, [x29, #-28]
   183b8:	cmp	x26, x24
   183bc:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   183c0:	mov	w2, #0x5                   	// #5
   183c4:	mov	x0, x25
   183c8:	mov	w1, w19
   183cc:	add	x27, x25, #0x2
   183d0:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   183d4:	mov	x20, x0
   183d8:	mov	x0, x25
   183dc:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   183e0:	stur	w0, [x29, #-60]
   183e4:	mov	w2, #0x5                   	// #5
   183e8:	mov	x0, x26
   183ec:	mov	w1, w19
   183f0:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   183f4:	mov	x24, x0
   183f8:	mov	x0, x26
   183fc:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18400:	ldur	x8, [x29, #-16]
   18404:	lsl	x9, x20, #2
   18408:	lsl	x10, x24, #2
   1840c:	ldr	w19, [x28, x9]
   18410:	mov	x11, x28
   18414:	ldr	w28, [x28, x10]
   18418:	sub	x20, x27, w23, uxtw
   1841c:	str	w0, [sp, #64]
   18420:	sub	x12, x25, x8
   18424:	sub	w8, w26, w8
   18428:	mov	x0, x20
   1842c:	stur	x12, [x29, #-56]
   18430:	str	w12, [x11, x9]
   18434:	str	w8, [x11, x10]
   18438:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1843c:	mov	w24, w0
   18440:	mov	x0, x27
   18444:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18448:	cbz	w23, 1847c <ZSTD_endStream@@Base+0xa528>
   1844c:	cmp	w24, w0
   18450:	b.ne	1847c <ZSTD_endStream@@Base+0xa528>  // b.any
   18454:	ldrb	w8, [x25, #1]
   18458:	ldurb	w9, [x20, #-1]
   1845c:	ldur	x2, [x29, #-8]
   18460:	mov	w26, wzr
   18464:	mov	w24, w23
   18468:	cmp	w8, w9
   1846c:	cset	w19, eq  // eq = none
   18470:	sub	x25, x27, x19
   18474:	sub	x27, x20, x19
   18478:	b	18548 <ZSTD_endStream@@Base+0xa5f4>
   1847c:	ldr	x20, [sp, #48]
   18480:	cmp	w19, w20
   18484:	b.ls	184a4 <ZSTD_endStream@@Base+0xa550>  // b.plast
   18488:	ldur	x8, [x29, #-16]
   1848c:	add	x27, x8, x19
   18490:	mov	x0, x27
   18494:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18498:	ldur	w8, [x29, #-60]
   1849c:	cmp	w0, w8
   184a0:	b.eq	184cc <ZSTD_endStream@@Base+0xa578>  // b.none
   184a4:	cmp	w28, w20
   184a8:	b.ls	18394 <ZSTD_endStream@@Base+0xa440>  // b.plast
   184ac:	ldur	x8, [x29, #-16]
   184b0:	add	x27, x8, x28
   184b4:	mov	x0, x27
   184b8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   184bc:	ldr	w8, [sp, #64]
   184c0:	cmp	w0, w8
   184c4:	b.ne	18394 <ZSTD_endStream@@Base+0xa440>  // b.any
   184c8:	mov	x25, x26
   184cc:	ldr	x12, [sp, #8]
   184d0:	ldur	x2, [x29, #-8]
   184d4:	sub	w24, w25, w27
   184d8:	mov	x19, xzr
   184dc:	cmp	x27, x12
   184e0:	add	w26, w24, #0x2
   184e4:	b.ls	18544 <ZSTD_endStream@@Base+0xa5f0>  // b.plast
   184e8:	cmp	x25, x22
   184ec:	b.ls	18544 <ZSTD_endStream@@Base+0xa5f0>  // b.plast
   184f0:	mov	x19, xzr
   184f4:	sub	x9, x25, #0x1
   184f8:	sub	x8, x27, #0x1
   184fc:	ldrb	w10, [x9]
   18500:	ldrb	w11, [x8]
   18504:	cmp	w10, w11
   18508:	b.ne	1853c <ZSTD_endStream@@Base+0xa5e8>  // b.any
   1850c:	add	x19, x19, #0x1
   18510:	sub	x10, x9, #0x1
   18514:	cmp	x9, x22
   18518:	sub	x11, x8, #0x1
   1851c:	b.ls	18530 <ZSTD_endStream@@Base+0xa5dc>  // b.plast
   18520:	cmp	x8, x12
   18524:	mov	x8, x11
   18528:	mov	x9, x10
   1852c:	b.hi	184fc <ZSTD_endStream@@Base+0xa5a8>  // b.pmore
   18530:	add	x25, x10, #0x1
   18534:	add	x27, x11, #0x1
   18538:	b	18544 <ZSTD_endStream@@Base+0xa5f0>
   1853c:	add	x25, x9, #0x1
   18540:	add	x27, x8, #0x1
   18544:	stur	w23, [x29, #-44]
   18548:	add	x8, x25, x19
   1854c:	add	x9, x27, x19
   18550:	add	x0, x8, #0x4
   18554:	add	x1, x9, #0x4
   18558:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1855c:	ldur	x3, [x29, #-40]
   18560:	mov	x8, x0
   18564:	ldr	x0, [x21, #24]
   18568:	add	x27, x19, x8
   1856c:	cmp	x25, x3
   18570:	sub	x23, x25, x22
   18574:	b.ls	18588 <ZSTD_endStream@@Base+0xa634>  // b.plast
   18578:	mov	x1, x22
   1857c:	mov	x2, x25
   18580:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   18584:	b	185f0 <ZSTD_endStream@@Base+0xa69c>
   18588:	mov	x1, x22
   1858c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18590:	cmp	x23, #0x11
   18594:	b.cc	185f0 <ZSTD_endStream@@Base+0xa69c>  // b.lo, b.ul, b.last
   18598:	ldr	x19, [x21, #24]
   1859c:	add	x1, x22, #0x10
   185a0:	add	x0, x19, #0x10
   185a4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   185a8:	add	x0, x19, #0x20
   185ac:	add	x1, x22, #0x20
   185b0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   185b4:	cmp	x23, #0x31
   185b8:	b.lt	185f0 <ZSTD_endStream@@Base+0xa69c>  // b.tstop
   185bc:	add	x28, x19, x23
   185c0:	add	x19, x19, #0x30
   185c4:	add	x20, x22, #0x40
   185c8:	sub	x1, x20, #0x10
   185cc:	mov	x0, x19
   185d0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   185d4:	add	x0, x19, #0x10
   185d8:	mov	x1, x20
   185dc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   185e0:	add	x19, x19, #0x20
   185e4:	cmp	x19, x28
   185e8:	add	x20, x20, #0x20
   185ec:	b.cc	185c8 <ZSTD_endStream@@Base+0xa674>  // b.lo, b.ul, b.last
   185f0:	ldr	x9, [x21, #24]
   185f4:	add	x8, x27, #0x1
   185f8:	cmp	x23, #0x10, lsl #12
   185fc:	add	x9, x9, x23
   18600:	str	x9, [x21, #24]
   18604:	b.cc	1861c <ZSTD_endStream@@Base+0xa6c8>  // b.lo, b.ul, b.last
   18608:	ldp	x10, x9, [x21]
   1860c:	sub	x9, x9, x10
   18610:	lsr	x9, x9, #3
   18614:	mov	w10, #0x1                   	// #1
   18618:	stp	w10, w9, [x21, #72]
   1861c:	ldr	x10, [x21, #8]
   18620:	ldr	x28, [sp, #56]
   18624:	add	x9, x27, #0x4
   18628:	add	w11, w26, #0x1
   1862c:	cmp	x8, #0x10, lsl #12
   18630:	strh	w23, [x10, #4]
   18634:	str	w11, [x10]
   18638:	b.cc	18650 <ZSTD_endStream@@Base+0xa6fc>  // b.lo, b.ul, b.last
   1863c:	ldp	x12, x11, [x21]
   18640:	sub	x11, x11, x12
   18644:	lsr	x11, x11, #3
   18648:	mov	w12, #0x2                   	// #2
   1864c:	stp	w12, w11, [x21, #72]
   18650:	strh	w8, [x10, #6]
   18654:	add	x8, x10, #0x8
   18658:	str	x8, [x21, #8]
   1865c:	ldur	x8, [x29, #-24]
   18660:	ldur	x27, [x29, #-8]
   18664:	add	x22, x25, x9
   18668:	add	x26, x22, #0x1
   1866c:	cmp	x22, x8
   18670:	b.hi	187d4 <ZSTD_endStream@@Base+0xa880>  // b.pmore
   18674:	ldur	x9, [x29, #-56]
   18678:	ldr	x8, [sp, #24]
   1867c:	ldur	w20, [x29, #-28]
   18680:	mov	w2, #0x5                   	// #5
   18684:	add	w19, w9, #0x2
   18688:	add	x0, x8, w9, uxtw
   1868c:	mov	w1, w20
   18690:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18694:	ldur	x8, [x29, #-16]
   18698:	str	w19, [x28, x0, lsl #2]
   1869c:	sub	x0, x22, #0x2
   186a0:	mov	w2, #0x5                   	// #5
   186a4:	mov	w1, w20
   186a8:	sub	w19, w0, w8
   186ac:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   186b0:	ldur	w23, [x29, #-44]
   186b4:	str	w19, [x28, x0, lsl #2]
   186b8:	cbz	w23, 187d4 <ZSTD_endStream@@Base+0xa880>
   186bc:	mov	x0, x22
   186c0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   186c4:	mov	w20, w23
   186c8:	mov	w19, w0
   186cc:	sub	x0, x22, x20
   186d0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   186d4:	cmp	w19, w0
   186d8:	b.ne	187d4 <ZSTD_endStream@@Base+0xa880>  // b.any
   186dc:	neg	x20, x20
   186e0:	mov	w0, w23
   186e4:	mov	w23, w24
   186e8:	mov	w25, w23
   186ec:	mov	w23, w0
   186f0:	add	x0, x22, #0x4
   186f4:	add	x1, x0, x20
   186f8:	mov	x2, x27
   186fc:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   18700:	ldur	x8, [x29, #-16]
   18704:	ldur	w1, [x29, #-28]
   18708:	mov	x19, x0
   1870c:	add	x20, x0, x22
   18710:	mov	w2, #0x5                   	// #5
   18714:	mov	x0, x22
   18718:	sub	w24, w22, w8
   1871c:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18720:	str	w24, [x28, x0, lsl #2]
   18724:	ldur	x3, [x29, #-40]
   18728:	ldr	x0, [x21, #24]
   1872c:	add	x19, x19, #0x1
   18730:	cmp	x22, x3
   18734:	b.ls	18748 <ZSTD_endStream@@Base+0xa7f4>  // b.plast
   18738:	mov	x1, x22
   1873c:	mov	x2, x22
   18740:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   18744:	b	18750 <ZSTD_endStream@@Base+0xa7fc>
   18748:	mov	x1, x22
   1874c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18750:	ldr	x8, [x21, #8]
   18754:	ldur	x24, [x29, #-24]
   18758:	mov	w9, #0x1                   	// #1
   1875c:	add	x22, x20, #0x4
   18760:	add	x26, x20, #0x5
   18764:	cmp	x19, #0x10, lsl #12
   18768:	strh	wzr, [x8, #4]
   1876c:	str	w9, [x8]
   18770:	b.cc	18788 <ZSTD_endStream@@Base+0xa834>  // b.lo, b.ul, b.last
   18774:	ldp	x10, x9, [x21]
   18778:	sub	x9, x9, x10
   1877c:	lsr	x9, x9, #3
   18780:	mov	w10, #0x2                   	// #2
   18784:	stp	w10, w9, [x21, #72]
   18788:	strh	w19, [x8, #6]
   1878c:	add	x8, x8, #0x8
   18790:	str	x8, [x21, #8]
   18794:	stur	w25, [x29, #-44]
   18798:	cbz	w25, 187dc <ZSTD_endStream@@Base+0xa888>
   1879c:	cmp	x22, x24
   187a0:	b.hi	187dc <ZSTD_endStream@@Base+0xa888>  // b.pmore
   187a4:	mov	x0, x22
   187a8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   187ac:	mov	w8, w25
   187b0:	mov	w19, w0
   187b4:	sub	x0, x22, x8
   187b8:	neg	x20, x8
   187bc:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   187c0:	cmp	w19, w0
   187c4:	mov	w0, w25
   187c8:	mov	x25, x22
   187cc:	b.eq	186e8 <ZSTD_endStream@@Base+0xa794>  // b.none
   187d0:	b	183b4 <ZSTD_endStream@@Base+0xa460>
   187d4:	mov	w23, w24
   187d8:	ldur	x24, [x29, #-24]
   187dc:	mov	x25, x22
   187e0:	b	183b4 <ZSTD_endStream@@Base+0xa460>
   187e4:	ldr	x16, [x0, #8]
   187e8:	ldr	w8, [x0, #204]
   187ec:	ldr	w9, [x0, #184]
   187f0:	ldr	w10, [x0, #24]
   187f4:	add	x27, x22, x4
   187f8:	mov	w14, #0x1                   	// #1
   187fc:	sub	w13, w27, w16
   18800:	cmp	w8, #0x0
   18804:	lsl	w9, w14, w9
   18808:	sub	w14, w13, w10
   1880c:	cinc	w8, w8, eq  // eq = none
   18810:	sub	w13, w13, w9
   18814:	cmp	w14, w9
   18818:	mov	x15, x2
   1881c:	csel	w13, w13, w10, hi  // hi = pmore
   18820:	ldr	x28, [x0, #48]
   18824:	ldr	w19, [x0, #192]
   18828:	ldr	w11, [x2]
   1882c:	ldr	w12, [x15, #4]!
   18830:	add	x14, x16, x13
   18834:	cmp	x14, x22
   18838:	cinc	x25, x22, eq  // eq = none
   1883c:	sub	w9, w25, w14
   18840:	cmp	w12, w9
   18844:	sub	x24, x27, #0x8
   18848:	add	x26, x25, #0x1
   1884c:	csel	w10, w12, wzr, hi  // hi = pmore
   18850:	csel	w12, wzr, w12, hi  // hi = pmore
   18854:	cmp	w11, w9
   18858:	csel	w9, w11, w10, hi  // hi = pmore
   1885c:	csel	w23, wzr, w11, hi  // hi = pmore
   18860:	cmp	x26, x24
   18864:	stur	w12, [x29, #-44]
   18868:	str	x15, [sp, #32]
   1886c:	str	w9, [sp, #4]
   18870:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   18874:	add	w8, w8, #0x1
   18878:	stp	x14, x8, [sp, #8]
   1887c:	sub	x8, x27, #0x20
   18880:	stur	x8, [x29, #-40]
   18884:	add	x8, x16, #0x2
   18888:	str	x13, [sp, #48]
   1888c:	stur	x16, [x29, #-16]
   18890:	str	x8, [sp, #24]
   18894:	stur	x27, [x29, #-8]
   18898:	str	x28, [sp, #56]
   1889c:	stur	w19, [x29, #-28]
   188a0:	stur	x24, [x29, #-24]
   188a4:	b	188d4 <ZSTD_endStream@@Base+0xa980>
   188a8:	ldr	x9, [sp, #16]
   188ac:	ldur	x27, [x29, #-8]
   188b0:	ldr	x28, [sp, #56]
   188b4:	ldur	x24, [x29, #-24]
   188b8:	sub	x8, x25, x22
   188bc:	add	x8, x9, x8, lsr #7
   188c0:	add	x25, x25, x8
   188c4:	add	x26, x26, x8
   188c8:	ldur	w19, [x29, #-28]
   188cc:	cmp	x26, x24
   188d0:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   188d4:	mov	w2, #0x6                   	// #6
   188d8:	mov	x0, x25
   188dc:	mov	w1, w19
   188e0:	add	x27, x25, #0x2
   188e4:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   188e8:	mov	x20, x0
   188ec:	mov	x0, x25
   188f0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   188f4:	stur	w0, [x29, #-60]
   188f8:	mov	w2, #0x6                   	// #6
   188fc:	mov	x0, x26
   18900:	mov	w1, w19
   18904:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18908:	mov	x24, x0
   1890c:	mov	x0, x26
   18910:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18914:	ldur	x8, [x29, #-16]
   18918:	lsl	x9, x20, #2
   1891c:	lsl	x10, x24, #2
   18920:	ldr	w19, [x28, x9]
   18924:	mov	x11, x28
   18928:	ldr	w28, [x28, x10]
   1892c:	sub	x20, x27, w23, uxtw
   18930:	str	w0, [sp, #64]
   18934:	sub	x12, x25, x8
   18938:	sub	w8, w26, w8
   1893c:	mov	x0, x20
   18940:	stur	x12, [x29, #-56]
   18944:	str	w12, [x11, x9]
   18948:	str	w8, [x11, x10]
   1894c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18950:	mov	w24, w0
   18954:	mov	x0, x27
   18958:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1895c:	cbz	w23, 18990 <ZSTD_endStream@@Base+0xaa3c>
   18960:	cmp	w24, w0
   18964:	b.ne	18990 <ZSTD_endStream@@Base+0xaa3c>  // b.any
   18968:	ldrb	w8, [x25, #1]
   1896c:	ldurb	w9, [x20, #-1]
   18970:	ldur	x2, [x29, #-8]
   18974:	mov	w26, wzr
   18978:	mov	w24, w23
   1897c:	cmp	w8, w9
   18980:	cset	w19, eq  // eq = none
   18984:	sub	x25, x27, x19
   18988:	sub	x27, x20, x19
   1898c:	b	18a5c <ZSTD_endStream@@Base+0xab08>
   18990:	ldr	x20, [sp, #48]
   18994:	cmp	w19, w20
   18998:	b.ls	189b8 <ZSTD_endStream@@Base+0xaa64>  // b.plast
   1899c:	ldur	x8, [x29, #-16]
   189a0:	add	x27, x8, x19
   189a4:	mov	x0, x27
   189a8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   189ac:	ldur	w8, [x29, #-60]
   189b0:	cmp	w0, w8
   189b4:	b.eq	189e0 <ZSTD_endStream@@Base+0xaa8c>  // b.none
   189b8:	cmp	w28, w20
   189bc:	b.ls	188a8 <ZSTD_endStream@@Base+0xa954>  // b.plast
   189c0:	ldur	x8, [x29, #-16]
   189c4:	add	x27, x8, x28
   189c8:	mov	x0, x27
   189cc:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   189d0:	ldr	w8, [sp, #64]
   189d4:	cmp	w0, w8
   189d8:	b.ne	188a8 <ZSTD_endStream@@Base+0xa954>  // b.any
   189dc:	mov	x25, x26
   189e0:	ldr	x12, [sp, #8]
   189e4:	ldur	x2, [x29, #-8]
   189e8:	sub	w24, w25, w27
   189ec:	mov	x19, xzr
   189f0:	cmp	x27, x12
   189f4:	add	w26, w24, #0x2
   189f8:	b.ls	18a58 <ZSTD_endStream@@Base+0xab04>  // b.plast
   189fc:	cmp	x25, x22
   18a00:	b.ls	18a58 <ZSTD_endStream@@Base+0xab04>  // b.plast
   18a04:	mov	x19, xzr
   18a08:	sub	x9, x25, #0x1
   18a0c:	sub	x8, x27, #0x1
   18a10:	ldrb	w10, [x9]
   18a14:	ldrb	w11, [x8]
   18a18:	cmp	w10, w11
   18a1c:	b.ne	18a50 <ZSTD_endStream@@Base+0xaafc>  // b.any
   18a20:	add	x19, x19, #0x1
   18a24:	sub	x10, x9, #0x1
   18a28:	cmp	x9, x22
   18a2c:	sub	x11, x8, #0x1
   18a30:	b.ls	18a44 <ZSTD_endStream@@Base+0xaaf0>  // b.plast
   18a34:	cmp	x8, x12
   18a38:	mov	x8, x11
   18a3c:	mov	x9, x10
   18a40:	b.hi	18a10 <ZSTD_endStream@@Base+0xaabc>  // b.pmore
   18a44:	add	x25, x10, #0x1
   18a48:	add	x27, x11, #0x1
   18a4c:	b	18a58 <ZSTD_endStream@@Base+0xab04>
   18a50:	add	x25, x9, #0x1
   18a54:	add	x27, x8, #0x1
   18a58:	stur	w23, [x29, #-44]
   18a5c:	add	x8, x25, x19
   18a60:	add	x9, x27, x19
   18a64:	add	x0, x8, #0x4
   18a68:	add	x1, x9, #0x4
   18a6c:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   18a70:	ldur	x3, [x29, #-40]
   18a74:	mov	x8, x0
   18a78:	ldr	x0, [x21, #24]
   18a7c:	add	x27, x19, x8
   18a80:	cmp	x25, x3
   18a84:	sub	x23, x25, x22
   18a88:	b.ls	18a9c <ZSTD_endStream@@Base+0xab48>  // b.plast
   18a8c:	mov	x1, x22
   18a90:	mov	x2, x25
   18a94:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   18a98:	b	18b04 <ZSTD_endStream@@Base+0xabb0>
   18a9c:	mov	x1, x22
   18aa0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18aa4:	cmp	x23, #0x11
   18aa8:	b.cc	18b04 <ZSTD_endStream@@Base+0xabb0>  // b.lo, b.ul, b.last
   18aac:	ldr	x19, [x21, #24]
   18ab0:	add	x1, x22, #0x10
   18ab4:	add	x0, x19, #0x10
   18ab8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18abc:	add	x0, x19, #0x20
   18ac0:	add	x1, x22, #0x20
   18ac4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18ac8:	cmp	x23, #0x31
   18acc:	b.lt	18b04 <ZSTD_endStream@@Base+0xabb0>  // b.tstop
   18ad0:	add	x28, x19, x23
   18ad4:	add	x19, x19, #0x30
   18ad8:	add	x20, x22, #0x40
   18adc:	sub	x1, x20, #0x10
   18ae0:	mov	x0, x19
   18ae4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18ae8:	add	x0, x19, #0x10
   18aec:	mov	x1, x20
   18af0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18af4:	add	x19, x19, #0x20
   18af8:	cmp	x19, x28
   18afc:	add	x20, x20, #0x20
   18b00:	b.cc	18adc <ZSTD_endStream@@Base+0xab88>  // b.lo, b.ul, b.last
   18b04:	ldr	x9, [x21, #24]
   18b08:	add	x8, x27, #0x1
   18b0c:	cmp	x23, #0x10, lsl #12
   18b10:	add	x9, x9, x23
   18b14:	str	x9, [x21, #24]
   18b18:	b.cc	18b30 <ZSTD_endStream@@Base+0xabdc>  // b.lo, b.ul, b.last
   18b1c:	ldp	x10, x9, [x21]
   18b20:	sub	x9, x9, x10
   18b24:	lsr	x9, x9, #3
   18b28:	mov	w10, #0x1                   	// #1
   18b2c:	stp	w10, w9, [x21, #72]
   18b30:	ldr	x10, [x21, #8]
   18b34:	ldr	x28, [sp, #56]
   18b38:	add	x9, x27, #0x4
   18b3c:	add	w11, w26, #0x1
   18b40:	cmp	x8, #0x10, lsl #12
   18b44:	strh	w23, [x10, #4]
   18b48:	str	w11, [x10]
   18b4c:	b.cc	18b64 <ZSTD_endStream@@Base+0xac10>  // b.lo, b.ul, b.last
   18b50:	ldp	x12, x11, [x21]
   18b54:	sub	x11, x11, x12
   18b58:	lsr	x11, x11, #3
   18b5c:	mov	w12, #0x2                   	// #2
   18b60:	stp	w12, w11, [x21, #72]
   18b64:	strh	w8, [x10, #6]
   18b68:	add	x8, x10, #0x8
   18b6c:	str	x8, [x21, #8]
   18b70:	ldur	x8, [x29, #-24]
   18b74:	ldur	x27, [x29, #-8]
   18b78:	add	x22, x25, x9
   18b7c:	add	x26, x22, #0x1
   18b80:	cmp	x22, x8
   18b84:	b.hi	18ce8 <ZSTD_endStream@@Base+0xad94>  // b.pmore
   18b88:	ldur	x9, [x29, #-56]
   18b8c:	ldr	x8, [sp, #24]
   18b90:	ldur	w20, [x29, #-28]
   18b94:	mov	w2, #0x6                   	// #6
   18b98:	add	w19, w9, #0x2
   18b9c:	add	x0, x8, w9, uxtw
   18ba0:	mov	w1, w20
   18ba4:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18ba8:	ldur	x8, [x29, #-16]
   18bac:	str	w19, [x28, x0, lsl #2]
   18bb0:	sub	x0, x22, #0x2
   18bb4:	mov	w2, #0x6                   	// #6
   18bb8:	mov	w1, w20
   18bbc:	sub	w19, w0, w8
   18bc0:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18bc4:	ldur	w23, [x29, #-44]
   18bc8:	str	w19, [x28, x0, lsl #2]
   18bcc:	cbz	w23, 18ce8 <ZSTD_endStream@@Base+0xad94>
   18bd0:	mov	x0, x22
   18bd4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18bd8:	mov	w20, w23
   18bdc:	mov	w19, w0
   18be0:	sub	x0, x22, x20
   18be4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18be8:	cmp	w19, w0
   18bec:	b.ne	18ce8 <ZSTD_endStream@@Base+0xad94>  // b.any
   18bf0:	neg	x20, x20
   18bf4:	mov	w0, w23
   18bf8:	mov	w23, w24
   18bfc:	mov	w25, w23
   18c00:	mov	w23, w0
   18c04:	add	x0, x22, #0x4
   18c08:	add	x1, x0, x20
   18c0c:	mov	x2, x27
   18c10:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   18c14:	ldur	x8, [x29, #-16]
   18c18:	ldur	w1, [x29, #-28]
   18c1c:	mov	x19, x0
   18c20:	add	x20, x0, x22
   18c24:	mov	w2, #0x6                   	// #6
   18c28:	mov	x0, x22
   18c2c:	sub	w24, w22, w8
   18c30:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18c34:	str	w24, [x28, x0, lsl #2]
   18c38:	ldur	x3, [x29, #-40]
   18c3c:	ldr	x0, [x21, #24]
   18c40:	add	x19, x19, #0x1
   18c44:	cmp	x22, x3
   18c48:	b.ls	18c5c <ZSTD_endStream@@Base+0xad08>  // b.plast
   18c4c:	mov	x1, x22
   18c50:	mov	x2, x22
   18c54:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   18c58:	b	18c64 <ZSTD_endStream@@Base+0xad10>
   18c5c:	mov	x1, x22
   18c60:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18c64:	ldr	x8, [x21, #8]
   18c68:	ldur	x24, [x29, #-24]
   18c6c:	mov	w9, #0x1                   	// #1
   18c70:	add	x22, x20, #0x4
   18c74:	add	x26, x20, #0x5
   18c78:	cmp	x19, #0x10, lsl #12
   18c7c:	strh	wzr, [x8, #4]
   18c80:	str	w9, [x8]
   18c84:	b.cc	18c9c <ZSTD_endStream@@Base+0xad48>  // b.lo, b.ul, b.last
   18c88:	ldp	x10, x9, [x21]
   18c8c:	sub	x9, x9, x10
   18c90:	lsr	x9, x9, #3
   18c94:	mov	w10, #0x2                   	// #2
   18c98:	stp	w10, w9, [x21, #72]
   18c9c:	strh	w19, [x8, #6]
   18ca0:	add	x8, x8, #0x8
   18ca4:	str	x8, [x21, #8]
   18ca8:	stur	w25, [x29, #-44]
   18cac:	cbz	w25, 18cf0 <ZSTD_endStream@@Base+0xad9c>
   18cb0:	cmp	x22, x24
   18cb4:	b.hi	18cf0 <ZSTD_endStream@@Base+0xad9c>  // b.pmore
   18cb8:	mov	x0, x22
   18cbc:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18cc0:	mov	w8, w25
   18cc4:	mov	w19, w0
   18cc8:	sub	x0, x22, x8
   18ccc:	neg	x20, x8
   18cd0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18cd4:	cmp	w19, w0
   18cd8:	mov	w0, w25
   18cdc:	mov	x25, x22
   18ce0:	b.eq	18bfc <ZSTD_endStream@@Base+0xaca8>  // b.none
   18ce4:	b	188c8 <ZSTD_endStream@@Base+0xa974>
   18ce8:	mov	w23, w24
   18cec:	ldur	x24, [x29, #-24]
   18cf0:	mov	x25, x22
   18cf4:	b	188c8 <ZSTD_endStream@@Base+0xa974>
   18cf8:	ldr	x16, [x0, #8]
   18cfc:	ldr	w8, [x0, #204]
   18d00:	ldr	w9, [x0, #184]
   18d04:	ldr	w10, [x0, #24]
   18d08:	add	x27, x22, x4
   18d0c:	mov	w14, #0x1                   	// #1
   18d10:	sub	w13, w27, w16
   18d14:	cmp	w8, #0x0
   18d18:	lsl	w9, w14, w9
   18d1c:	sub	w14, w13, w10
   18d20:	cinc	w8, w8, eq  // eq = none
   18d24:	sub	w13, w13, w9
   18d28:	cmp	w14, w9
   18d2c:	mov	x15, x2
   18d30:	csel	w13, w13, w10, hi  // hi = pmore
   18d34:	ldr	x28, [x0, #48]
   18d38:	ldr	w19, [x0, #192]
   18d3c:	ldr	w11, [x2]
   18d40:	ldr	w12, [x15, #4]!
   18d44:	add	x14, x16, x13
   18d48:	cmp	x14, x22
   18d4c:	cinc	x25, x22, eq  // eq = none
   18d50:	sub	w9, w25, w14
   18d54:	cmp	w12, w9
   18d58:	sub	x24, x27, #0x8
   18d5c:	add	x26, x25, #0x1
   18d60:	csel	w10, w12, wzr, hi  // hi = pmore
   18d64:	csel	w12, wzr, w12, hi  // hi = pmore
   18d68:	cmp	w11, w9
   18d6c:	csel	w9, w11, w10, hi  // hi = pmore
   18d70:	csel	w23, wzr, w11, hi  // hi = pmore
   18d74:	cmp	x26, x24
   18d78:	stur	w12, [x29, #-44]
   18d7c:	str	x15, [sp, #32]
   18d80:	str	w9, [sp, #4]
   18d84:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   18d88:	add	w8, w8, #0x1
   18d8c:	stp	x14, x8, [sp, #8]
   18d90:	sub	x8, x27, #0x20
   18d94:	stur	x8, [x29, #-40]
   18d98:	add	x8, x16, #0x2
   18d9c:	str	x13, [sp, #48]
   18da0:	stur	x16, [x29, #-16]
   18da4:	str	x8, [sp, #24]
   18da8:	stur	x27, [x29, #-8]
   18dac:	str	x28, [sp, #56]
   18db0:	stur	w19, [x29, #-28]
   18db4:	stur	x24, [x29, #-24]
   18db8:	b	18de8 <ZSTD_endStream@@Base+0xae94>
   18dbc:	ldr	x9, [sp, #16]
   18dc0:	ldur	x27, [x29, #-8]
   18dc4:	ldr	x28, [sp, #56]
   18dc8:	ldur	x24, [x29, #-24]
   18dcc:	sub	x8, x25, x22
   18dd0:	add	x8, x9, x8, lsr #7
   18dd4:	add	x25, x25, x8
   18dd8:	add	x26, x26, x8
   18ddc:	ldur	w19, [x29, #-28]
   18de0:	cmp	x26, x24
   18de4:	b.cs	1920c <ZSTD_endStream@@Base+0xb2b8>  // b.hs, b.nlast
   18de8:	mov	w2, #0x4                   	// #4
   18dec:	mov	x0, x25
   18df0:	mov	w1, w19
   18df4:	add	x27, x25, #0x2
   18df8:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18dfc:	mov	x20, x0
   18e00:	mov	x0, x25
   18e04:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18e08:	stur	w0, [x29, #-60]
   18e0c:	mov	w2, #0x4                   	// #4
   18e10:	mov	x0, x26
   18e14:	mov	w1, w19
   18e18:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   18e1c:	mov	x24, x0
   18e20:	mov	x0, x26
   18e24:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18e28:	ldur	x8, [x29, #-16]
   18e2c:	lsl	x9, x20, #2
   18e30:	lsl	x10, x24, #2
   18e34:	ldr	w19, [x28, x9]
   18e38:	mov	x11, x28
   18e3c:	ldr	w28, [x28, x10]
   18e40:	sub	x20, x27, w23, uxtw
   18e44:	str	w0, [sp, #64]
   18e48:	sub	x12, x25, x8
   18e4c:	sub	w8, w26, w8
   18e50:	mov	x0, x20
   18e54:	stur	x12, [x29, #-56]
   18e58:	str	w12, [x11, x9]
   18e5c:	str	w8, [x11, x10]
   18e60:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18e64:	mov	w24, w0
   18e68:	mov	x0, x27
   18e6c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18e70:	cbz	w23, 18ea4 <ZSTD_endStream@@Base+0xaf50>
   18e74:	cmp	w24, w0
   18e78:	b.ne	18ea4 <ZSTD_endStream@@Base+0xaf50>  // b.any
   18e7c:	ldrb	w8, [x25, #1]
   18e80:	ldurb	w9, [x20, #-1]
   18e84:	ldur	x2, [x29, #-8]
   18e88:	mov	w26, wzr
   18e8c:	mov	w24, w23
   18e90:	cmp	w8, w9
   18e94:	cset	w19, eq  // eq = none
   18e98:	sub	x25, x27, x19
   18e9c:	sub	x27, x20, x19
   18ea0:	b	18f70 <ZSTD_endStream@@Base+0xb01c>
   18ea4:	ldr	x20, [sp, #48]
   18ea8:	cmp	w19, w20
   18eac:	b.ls	18ecc <ZSTD_endStream@@Base+0xaf78>  // b.plast
   18eb0:	ldur	x8, [x29, #-16]
   18eb4:	add	x27, x8, x19
   18eb8:	mov	x0, x27
   18ebc:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18ec0:	ldur	w8, [x29, #-60]
   18ec4:	cmp	w0, w8
   18ec8:	b.eq	18ef4 <ZSTD_endStream@@Base+0xafa0>  // b.none
   18ecc:	cmp	w28, w20
   18ed0:	b.ls	18dbc <ZSTD_endStream@@Base+0xae68>  // b.plast
   18ed4:	ldur	x8, [x29, #-16]
   18ed8:	add	x27, x8, x28
   18edc:	mov	x0, x27
   18ee0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   18ee4:	ldr	w8, [sp, #64]
   18ee8:	cmp	w0, w8
   18eec:	b.ne	18dbc <ZSTD_endStream@@Base+0xae68>  // b.any
   18ef0:	mov	x25, x26
   18ef4:	ldr	x12, [sp, #8]
   18ef8:	ldur	x2, [x29, #-8]
   18efc:	sub	w24, w25, w27
   18f00:	mov	x19, xzr
   18f04:	cmp	x27, x12
   18f08:	add	w26, w24, #0x2
   18f0c:	b.ls	18f6c <ZSTD_endStream@@Base+0xb018>  // b.plast
   18f10:	cmp	x25, x22
   18f14:	b.ls	18f6c <ZSTD_endStream@@Base+0xb018>  // b.plast
   18f18:	mov	x19, xzr
   18f1c:	sub	x9, x25, #0x1
   18f20:	sub	x8, x27, #0x1
   18f24:	ldrb	w10, [x9]
   18f28:	ldrb	w11, [x8]
   18f2c:	cmp	w10, w11
   18f30:	b.ne	18f64 <ZSTD_endStream@@Base+0xb010>  // b.any
   18f34:	add	x19, x19, #0x1
   18f38:	sub	x10, x9, #0x1
   18f3c:	cmp	x9, x22
   18f40:	sub	x11, x8, #0x1
   18f44:	b.ls	18f58 <ZSTD_endStream@@Base+0xb004>  // b.plast
   18f48:	cmp	x8, x12
   18f4c:	mov	x8, x11
   18f50:	mov	x9, x10
   18f54:	b.hi	18f24 <ZSTD_endStream@@Base+0xafd0>  // b.pmore
   18f58:	add	x25, x10, #0x1
   18f5c:	add	x27, x11, #0x1
   18f60:	b	18f6c <ZSTD_endStream@@Base+0xb018>
   18f64:	add	x25, x9, #0x1
   18f68:	add	x27, x8, #0x1
   18f6c:	stur	w23, [x29, #-44]
   18f70:	add	x8, x25, x19
   18f74:	add	x9, x27, x19
   18f78:	add	x0, x8, #0x4
   18f7c:	add	x1, x9, #0x4
   18f80:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   18f84:	ldur	x3, [x29, #-40]
   18f88:	mov	x8, x0
   18f8c:	ldr	x0, [x21, #24]
   18f90:	add	x27, x19, x8
   18f94:	cmp	x25, x3
   18f98:	sub	x23, x25, x22
   18f9c:	b.ls	18fb0 <ZSTD_endStream@@Base+0xb05c>  // b.plast
   18fa0:	mov	x1, x22
   18fa4:	mov	x2, x25
   18fa8:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   18fac:	b	19018 <ZSTD_endStream@@Base+0xb0c4>
   18fb0:	mov	x1, x22
   18fb4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18fb8:	cmp	x23, #0x11
   18fbc:	b.cc	19018 <ZSTD_endStream@@Base+0xb0c4>  // b.lo, b.ul, b.last
   18fc0:	ldr	x19, [x21, #24]
   18fc4:	add	x1, x22, #0x10
   18fc8:	add	x0, x19, #0x10
   18fcc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18fd0:	add	x0, x19, #0x20
   18fd4:	add	x1, x22, #0x20
   18fd8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18fdc:	cmp	x23, #0x31
   18fe0:	b.lt	19018 <ZSTD_endStream@@Base+0xb0c4>  // b.tstop
   18fe4:	add	x28, x19, x23
   18fe8:	add	x19, x19, #0x30
   18fec:	add	x20, x22, #0x40
   18ff0:	sub	x1, x20, #0x10
   18ff4:	mov	x0, x19
   18ff8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   18ffc:	add	x0, x19, #0x10
   19000:	mov	x1, x20
   19004:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19008:	add	x19, x19, #0x20
   1900c:	cmp	x19, x28
   19010:	add	x20, x20, #0x20
   19014:	b.cc	18ff0 <ZSTD_endStream@@Base+0xb09c>  // b.lo, b.ul, b.last
   19018:	ldr	x9, [x21, #24]
   1901c:	add	x8, x27, #0x1
   19020:	cmp	x23, #0x10, lsl #12
   19024:	add	x9, x9, x23
   19028:	str	x9, [x21, #24]
   1902c:	b.cc	19044 <ZSTD_endStream@@Base+0xb0f0>  // b.lo, b.ul, b.last
   19030:	ldp	x10, x9, [x21]
   19034:	sub	x9, x9, x10
   19038:	lsr	x9, x9, #3
   1903c:	mov	w10, #0x1                   	// #1
   19040:	stp	w10, w9, [x21, #72]
   19044:	ldr	x10, [x21, #8]
   19048:	ldr	x28, [sp, #56]
   1904c:	add	x9, x27, #0x4
   19050:	add	w11, w26, #0x1
   19054:	cmp	x8, #0x10, lsl #12
   19058:	strh	w23, [x10, #4]
   1905c:	str	w11, [x10]
   19060:	b.cc	19078 <ZSTD_endStream@@Base+0xb124>  // b.lo, b.ul, b.last
   19064:	ldp	x12, x11, [x21]
   19068:	sub	x11, x11, x12
   1906c:	lsr	x11, x11, #3
   19070:	mov	w12, #0x2                   	// #2
   19074:	stp	w12, w11, [x21, #72]
   19078:	strh	w8, [x10, #6]
   1907c:	add	x8, x10, #0x8
   19080:	str	x8, [x21, #8]
   19084:	ldur	x8, [x29, #-24]
   19088:	ldur	x27, [x29, #-8]
   1908c:	add	x22, x25, x9
   19090:	add	x26, x22, #0x1
   19094:	cmp	x22, x8
   19098:	b.hi	191fc <ZSTD_endStream@@Base+0xb2a8>  // b.pmore
   1909c:	ldur	x9, [x29, #-56]
   190a0:	ldr	x8, [sp, #24]
   190a4:	ldur	w20, [x29, #-28]
   190a8:	mov	w2, #0x4                   	// #4
   190ac:	add	w19, w9, #0x2
   190b0:	add	x0, x8, w9, uxtw
   190b4:	mov	w1, w20
   190b8:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   190bc:	ldur	x8, [x29, #-16]
   190c0:	str	w19, [x28, x0, lsl #2]
   190c4:	sub	x0, x22, #0x2
   190c8:	mov	w2, #0x4                   	// #4
   190cc:	mov	w1, w20
   190d0:	sub	w19, w0, w8
   190d4:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   190d8:	ldur	w23, [x29, #-44]
   190dc:	str	w19, [x28, x0, lsl #2]
   190e0:	cbz	w23, 191fc <ZSTD_endStream@@Base+0xb2a8>
   190e4:	mov	x0, x22
   190e8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   190ec:	mov	w20, w23
   190f0:	mov	w19, w0
   190f4:	sub	x0, x22, x20
   190f8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   190fc:	cmp	w19, w0
   19100:	b.ne	191fc <ZSTD_endStream@@Base+0xb2a8>  // b.any
   19104:	neg	x20, x20
   19108:	mov	w0, w23
   1910c:	mov	w23, w24
   19110:	mov	w25, w23
   19114:	mov	w23, w0
   19118:	add	x0, x22, #0x4
   1911c:	add	x1, x0, x20
   19120:	mov	x2, x27
   19124:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   19128:	ldur	x8, [x29, #-16]
   1912c:	ldur	w1, [x29, #-28]
   19130:	mov	x19, x0
   19134:	add	x20, x0, x22
   19138:	mov	w2, #0x4                   	// #4
   1913c:	mov	x0, x22
   19140:	sub	w24, w22, w8
   19144:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   19148:	str	w24, [x28, x0, lsl #2]
   1914c:	ldur	x3, [x29, #-40]
   19150:	ldr	x0, [x21, #24]
   19154:	add	x19, x19, #0x1
   19158:	cmp	x22, x3
   1915c:	b.ls	19170 <ZSTD_endStream@@Base+0xb21c>  // b.plast
   19160:	mov	x1, x22
   19164:	mov	x2, x22
   19168:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1916c:	b	19178 <ZSTD_endStream@@Base+0xb224>
   19170:	mov	x1, x22
   19174:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19178:	ldr	x8, [x21, #8]
   1917c:	ldur	x24, [x29, #-24]
   19180:	mov	w9, #0x1                   	// #1
   19184:	add	x22, x20, #0x4
   19188:	add	x26, x20, #0x5
   1918c:	cmp	x19, #0x10, lsl #12
   19190:	strh	wzr, [x8, #4]
   19194:	str	w9, [x8]
   19198:	b.cc	191b0 <ZSTD_endStream@@Base+0xb25c>  // b.lo, b.ul, b.last
   1919c:	ldp	x10, x9, [x21]
   191a0:	sub	x9, x9, x10
   191a4:	lsr	x9, x9, #3
   191a8:	mov	w10, #0x2                   	// #2
   191ac:	stp	w10, w9, [x21, #72]
   191b0:	strh	w19, [x8, #6]
   191b4:	add	x8, x8, #0x8
   191b8:	str	x8, [x21, #8]
   191bc:	stur	w25, [x29, #-44]
   191c0:	cbz	w25, 19204 <ZSTD_endStream@@Base+0xb2b0>
   191c4:	cmp	x22, x24
   191c8:	b.hi	19204 <ZSTD_endStream@@Base+0xb2b0>  // b.pmore
   191cc:	mov	x0, x22
   191d0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   191d4:	mov	w8, w25
   191d8:	mov	w19, w0
   191dc:	sub	x0, x22, x8
   191e0:	neg	x20, x8
   191e4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   191e8:	cmp	w19, w0
   191ec:	mov	w0, w25
   191f0:	mov	x25, x22
   191f4:	b.eq	19110 <ZSTD_endStream@@Base+0xb1bc>  // b.none
   191f8:	b	18ddc <ZSTD_endStream@@Base+0xae88>
   191fc:	mov	w23, w24
   19200:	ldur	x24, [x29, #-24]
   19204:	mov	x25, x22
   19208:	b	18ddc <ZSTD_endStream@@Base+0xae88>
   1920c:	ldr	w10, [sp, #4]
   19210:	ldr	x9, [sp, #40]
   19214:	cmp	w23, #0x0
   19218:	ldur	w11, [x29, #-44]
   1921c:	csel	w8, w10, w23, eq  // eq = none
   19220:	str	w8, [x9]
   19224:	ldr	x9, [sp, #32]
   19228:	cmp	w11, #0x0
   1922c:	csel	w8, w10, w11, eq  // eq = none
   19230:	sub	x0, x27, x22
   19234:	str	w8, [x9]
   19238:	ldp	x20, x19, [sp, #208]
   1923c:	ldp	x22, x21, [sp, #192]
   19240:	ldp	x24, x23, [sp, #176]
   19244:	ldp	x26, x25, [sp, #160]
   19248:	ldp	x28, x27, [sp, #144]
   1924c:	ldp	x29, x30, [sp, #128]
   19250:	add	sp, sp, #0xe0
   19254:	ret
   19258:	sub	sp, sp, #0x130
   1925c:	stp	x29, x30, [sp, #208]
   19260:	stp	x28, x27, [sp, #224]
   19264:	stp	x26, x25, [sp, #240]
   19268:	stp	x24, x23, [sp, #256]
   1926c:	stp	x22, x21, [sp, #272]
   19270:	stp	x20, x19, [sp, #288]
   19274:	ldr	w8, [x0, #200]
   19278:	mov	x22, x3
   1927c:	mov	x21, x1
   19280:	add	x29, sp, #0xd0
   19284:	cmp	w8, #0x5
   19288:	str	x2, [sp, #56]
   1928c:	b.eq	19a70 <ZSTD_endStream@@Base+0xbb1c>  // b.none
   19290:	cmp	w8, #0x6
   19294:	b.eq	1a224 <ZSTD_endStream@@Base+0xc2d0>  // b.none
   19298:	cmp	w8, #0x7
   1929c:	b.ne	1a9f0 <ZSTD_endStream@@Base+0xca9c>  // b.any
   192a0:	ldp	w9, w20, [x2]
   192a4:	ldr	x8, [x0, #176]
   192a8:	ldr	x27, [x0, #8]
   192ac:	ldr	w23, [x0, #24]
   192b0:	stur	w9, [x29, #-44]
   192b4:	ldr	w12, [x8, #24]
   192b8:	ldp	x14, x13, [x8]
   192bc:	add	x9, x27, x23
   192c0:	stur	x9, [x29, #-64]
   192c4:	sub	w9, w22, w9
   192c8:	str	x12, [sp, #48]
   192cc:	add	x12, x13, x12
   192d0:	add	w9, w14, w9
   192d4:	add	x11, x22, x4
   192d8:	cmp	w9, w12
   192dc:	sub	x10, x11, #0x8
   192e0:	cinc	x28, x22, eq  // eq = none
   192e4:	cmp	x28, x10
   192e8:	str	x12, [sp, #8]
   192ec:	stur	x10, [x29, #-16]
   192f0:	stur	x11, [x29, #-56]
   192f4:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   192f8:	ldr	x9, [x0, #48]
   192fc:	ldr	x10, [x8, #48]
   19300:	ldr	w8, [x8, #192]
   19304:	str	x14, [sp, #104]
   19308:	stur	x9, [x29, #-72]
   1930c:	ldr	w9, [x0, #192]
   19310:	str	w8, [sp, #32]
   19314:	sub	w8, w23, #0x1
   19318:	stur	w8, [x29, #-20]
   1931c:	sub	x8, x11, #0x20
   19320:	stur	w9, [x29, #-76]
   19324:	ldr	w9, [x0, #204]
   19328:	stur	x8, [x29, #-88]
   1932c:	add	x8, x27, #0x2
   19330:	str	x8, [sp, #24]
   19334:	sub	x8, x13, #0x1
   19338:	str	x10, [sp, #40]
   1933c:	sub	w10, w13, w14
   19340:	str	x8, [sp]
   19344:	sub	x8, x27, #0x1
   19348:	str	x8, [sp, #16]
   1934c:	add	w8, w23, w10
   19350:	str	w8, [sp, #72]
   19354:	sub	x8, x13, w8, uxtw
   19358:	cmp	w9, #0x0
   1935c:	stur	x8, [x29, #-40]
   19360:	cinc	w8, w9, eq  // eq = none
   19364:	str	x13, [sp, #80]
   19368:	str	x8, [sp, #64]
   1936c:	stur	x23, [x29, #-32]
   19370:	str	x27, [sp, #88]
   19374:	b	1938c <ZSTD_endStream@@Base+0xb438>
   19378:	mov	w20, w26
   1937c:	mov	x28, x22
   19380:	ldur	x8, [x29, #-16]
   19384:	cmp	x28, x8
   19388:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   1938c:	ldur	w1, [x29, #-76]
   19390:	mov	w2, #0x7                   	// #7
   19394:	mov	x0, x28
   19398:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1939c:	ldur	w9, [x29, #-44]
   193a0:	sub	x14, x28, x27
   193a4:	ldur	x13, [x29, #-72]
   193a8:	ldur	w11, [x29, #-20]
   193ac:	sub	w9, w14, w9
   193b0:	add	w19, w9, #0x1
   193b4:	ldr	w9, [sp, #72]
   193b8:	ldr	x12, [sp, #80]
   193bc:	lsl	x8, x0, #2
   193c0:	mov	x10, x27
   193c4:	ldr	w27, [x13, x8]
   193c8:	sub	w9, w19, w9
   193cc:	add	x10, x10, x19
   193d0:	cmp	w19, w23
   193d4:	sub	w11, w11, w19
   193d8:	add	x9, x12, x9
   193dc:	csel	x23, x9, x10, cc  // cc = lo, ul, last
   193e0:	cmp	w11, #0x3
   193e4:	str	x14, [sp, #96]
   193e8:	str	w14, [x13, x8]
   193ec:	b.cc	1945c <ZSTD_endStream@@Base+0xb508>  // b.lo, b.ul, b.last
   193f0:	mov	x0, x23
   193f4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   193f8:	add	x25, x28, #0x1
   193fc:	mov	w26, w0
   19400:	mov	x0, x25
   19404:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19408:	cmp	w26, w0
   1940c:	b.ne	1945c <ZSTD_endStream@@Base+0xb508>  // b.any
   19410:	ldur	x8, [x29, #-32]
   19414:	ldp	x4, x2, [x29, #-64]
   19418:	add	x0, x28, #0x5
   1941c:	add	x1, x23, #0x4
   19420:	cmp	w19, w8
   19424:	ldr	x8, [sp, #104]
   19428:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1942c:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   19430:	ldur	x3, [x29, #-88]
   19434:	mov	x26, x0
   19438:	ldr	x0, [x21, #24]
   1943c:	sub	x23, x25, x22
   19440:	cmp	x25, x3
   19444:	b.ls	195dc <ZSTD_endStream@@Base+0xb688>  // b.plast
   19448:	mov	x1, x22
   1944c:	mov	x2, x25
   19450:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   19454:	ldr	x27, [sp, #88]
   19458:	b	19648 <ZSTD_endStream@@Base+0xb6f4>
   1945c:	ldur	x23, [x29, #-32]
   19460:	cmp	w27, w23
   19464:	b.ls	194f4 <ZSTD_endStream@@Base+0xb5a0>  // b.plast
   19468:	ldr	x8, [sp, #88]
   1946c:	add	x26, x8, x27
   19470:	mov	x0, x26
   19474:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19478:	mov	w19, w0
   1947c:	mov	x0, x28
   19480:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19484:	cmp	w19, w0
   19488:	b.ne	195c4 <ZSTD_endStream@@Base+0xb670>  // b.any
   1948c:	ldur	x2, [x29, #-56]
   19490:	add	x0, x28, #0x4
   19494:	add	x1, x26, #0x4
   19498:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1949c:	cmp	x28, x22
   194a0:	add	x24, x0, #0x4
   194a4:	b.ls	196ac <ZSTD_endStream@@Base+0xb758>  // b.plast
   194a8:	ldr	x8, [sp, #16]
   194ac:	sub	x9, x28, #0x1
   194b0:	add	x8, x8, x27
   194b4:	ldr	x27, [sp, #88]
   194b8:	ldrb	w10, [x9]
   194bc:	ldrb	w11, [x8]
   194c0:	cmp	w10, w11
   194c4:	b.ne	196bc <ZSTD_endStream@@Base+0xb768>  // b.any
   194c8:	add	x24, x24, #0x1
   194cc:	cmp	x9, x22
   194d0:	sub	x10, x9, #0x1
   194d4:	b.ls	194ec <ZSTD_endStream@@Base+0xb598>  // b.plast
   194d8:	ldur	x9, [x29, #-64]
   194dc:	cmp	x8, x9
   194e0:	sub	x8, x8, #0x1
   194e4:	mov	x9, x10
   194e8:	b.hi	194b8 <ZSTD_endStream@@Base+0xb564>  // b.pmore
   194ec:	add	x25, x10, #0x1
   194f0:	b	196c0 <ZSTD_endStream@@Base+0xb76c>
   194f4:	ldr	w1, [sp, #32]
   194f8:	mov	w2, #0x7                   	// #7
   194fc:	mov	x0, x28
   19500:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   19504:	ldr	x8, [sp, #40]
   19508:	ldr	w26, [x8, x0, lsl #2]
   1950c:	ldr	x8, [sp, #48]
   19510:	cmp	w26, w8
   19514:	b.ls	195a4 <ZSTD_endStream@@Base+0xb650>  // b.plast
   19518:	ldr	x8, [sp, #80]
   1951c:	add	x19, x8, x26
   19520:	mov	x0, x19
   19524:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19528:	mov	w23, w0
   1952c:	mov	x0, x28
   19530:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19534:	cmp	w23, w0
   19538:	ldur	x23, [x29, #-32]
   1953c:	b.ne	195a4 <ZSTD_endStream@@Base+0xb650>  // b.any
   19540:	ldp	x4, x2, [x29, #-64]
   19544:	ldr	x3, [sp, #104]
   19548:	add	x0, x28, #0x4
   1954c:	add	x1, x19, #0x4
   19550:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   19554:	cmp	x28, x22
   19558:	add	x24, x0, #0x4
   1955c:	b.ls	19950 <ZSTD_endStream@@Base+0xb9fc>  // b.plast
   19560:	ldp	x8, x12, [sp]
   19564:	sub	x9, x28, #0x1
   19568:	add	x8, x8, x26
   1956c:	ldrb	w10, [x9]
   19570:	ldrb	w11, [x8]
   19574:	cmp	w10, w11
   19578:	b.ne	1994c <ZSTD_endStream@@Base+0xb9f8>  // b.any
   1957c:	add	x24, x24, #0x1
   19580:	cmp	x9, x22
   19584:	sub	x10, x9, #0x1
   19588:	b.ls	1959c <ZSTD_endStream@@Base+0xb648>  // b.plast
   1958c:	cmp	x8, x12
   19590:	sub	x8, x8, #0x1
   19594:	mov	x9, x10
   19598:	b.hi	1956c <ZSTD_endStream@@Base+0xb618>  // b.pmore
   1959c:	add	x28, x10, #0x1
   195a0:	b	19950 <ZSTD_endStream@@Base+0xb9fc>
   195a4:	ldr	x9, [sp, #64]
   195a8:	sub	x8, x28, x22
   195ac:	ldr	x27, [sp, #88]
   195b0:	add	x8, x9, x8, asr #8
   195b4:	add	x25, x28, x8
   195b8:	mov	x28, x25
   195bc:	tbz	wzr, #0, 19380 <ZSTD_endStream@@Base+0xb42c>
   195c0:	b	197c0 <ZSTD_endStream@@Base+0xb86c>
   195c4:	ldr	x9, [sp, #64]
   195c8:	ldr	x27, [sp, #88]
   195cc:	sub	x8, x28, x22
   195d0:	add	x8, x9, x8, asr #8
   195d4:	add	x28, x28, x8
   195d8:	b	19380 <ZSTD_endStream@@Base+0xb42c>
   195dc:	mov	x1, x22
   195e0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   195e4:	ldr	x27, [sp, #88]
   195e8:	cmp	x23, #0x11
   195ec:	b.cc	19648 <ZSTD_endStream@@Base+0xb6f4>  // b.lo, b.ul, b.last
   195f0:	ldr	x24, [x21, #24]
   195f4:	add	x1, x22, #0x10
   195f8:	add	x0, x24, #0x10
   195fc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19600:	add	x0, x24, #0x20
   19604:	add	x1, x22, #0x20
   19608:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1960c:	cmp	x23, #0x31
   19610:	b.lt	19648 <ZSTD_endStream@@Base+0xb6f4>  // b.tstop
   19614:	add	x19, x24, x23
   19618:	add	x28, x24, #0x30
   1961c:	add	x22, x22, #0x40
   19620:	sub	x1, x22, #0x10
   19624:	mov	x0, x28
   19628:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1962c:	add	x0, x28, #0x10
   19630:	mov	x1, x22
   19634:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19638:	add	x28, x28, #0x20
   1963c:	cmp	x28, x19
   19640:	add	x22, x22, #0x20
   19644:	b.cc	19620 <ZSTD_endStream@@Base+0xb6cc>  // b.lo, b.ul, b.last
   19648:	ldr	x9, [x21, #24]
   1964c:	add	x24, x26, #0x4
   19650:	add	x8, x26, #0x1
   19654:	cmp	x23, #0x10, lsl #12
   19658:	add	x9, x9, x23
   1965c:	str	x9, [x21, #24]
   19660:	b.cc	19678 <ZSTD_endStream@@Base+0xb724>  // b.lo, b.ul, b.last
   19664:	ldp	x10, x9, [x21]
   19668:	sub	x9, x9, x10
   1966c:	lsr	x9, x9, #3
   19670:	mov	w10, #0x1                   	// #1
   19674:	stp	w10, w9, [x21, #72]
   19678:	ldr	x9, [x21, #8]
   1967c:	cmp	x8, #0x10, lsl #12
   19680:	mov	w10, #0x1                   	// #1
   19684:	strh	w23, [x9, #4]
   19688:	str	w10, [x9]
   1968c:	b.cc	196a4 <ZSTD_endStream@@Base+0xb750>  // b.lo, b.ul, b.last
   19690:	ldp	x11, x10, [x21]
   19694:	sub	x10, x10, x11
   19698:	lsr	x10, x10, #3
   1969c:	mov	w11, #0x2                   	// #2
   196a0:	stp	w11, w10, [x21, #72]
   196a4:	ldur	x23, [x29, #-32]
   196a8:	b	197b4 <ZSTD_endStream@@Base+0xb860>
   196ac:	ldur	x3, [x29, #-88]
   196b0:	ldr	x27, [sp, #88]
   196b4:	mov	x25, x28
   196b8:	b	196c4 <ZSTD_endStream@@Base+0xb770>
   196bc:	add	x25, x9, #0x1
   196c0:	ldur	x3, [x29, #-88]
   196c4:	ldr	x0, [x21, #24]
   196c8:	cmp	x25, x3
   196cc:	sub	x20, x25, x22
   196d0:	b.ls	196e4 <ZSTD_endStream@@Base+0xb790>  // b.plast
   196d4:	mov	x1, x22
   196d8:	mov	x2, x25
   196dc:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   196e0:	b	1974c <ZSTD_endStream@@Base+0xb7f8>
   196e4:	mov	x1, x22
   196e8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   196ec:	cmp	x20, #0x11
   196f0:	b.cc	1974c <ZSTD_endStream@@Base+0xb7f8>  // b.lo, b.ul, b.last
   196f4:	ldr	x23, [x21, #24]
   196f8:	add	x1, x22, #0x10
   196fc:	add	x0, x23, #0x10
   19700:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19704:	add	x0, x23, #0x20
   19708:	add	x1, x22, #0x20
   1970c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19710:	cmp	x20, #0x31
   19714:	b.lt	1974c <ZSTD_endStream@@Base+0xb7f8>  // b.tstop
   19718:	add	x19, x23, x20
   1971c:	add	x23, x23, #0x30
   19720:	add	x22, x22, #0x40
   19724:	sub	x1, x22, #0x10
   19728:	mov	x0, x23
   1972c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19730:	add	x0, x23, #0x10
   19734:	mov	x1, x22
   19738:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1973c:	add	x23, x23, #0x20
   19740:	cmp	x23, x19
   19744:	add	x22, x22, #0x20
   19748:	b.cc	19724 <ZSTD_endStream@@Base+0xb7d0>  // b.lo, b.ul, b.last
   1974c:	ldr	x9, [x21, #24]
   19750:	sub	w10, w28, w26
   19754:	sub	x8, x24, #0x3
   19758:	cmp	x20, #0x10, lsl #12
   1975c:	add	x9, x9, x20
   19760:	str	x9, [x21, #24]
   19764:	b.cc	1977c <ZSTD_endStream@@Base+0xb828>  // b.lo, b.ul, b.last
   19768:	ldp	x11, x9, [x21]
   1976c:	sub	x9, x9, x11
   19770:	lsr	x9, x9, #3
   19774:	mov	w11, #0x1                   	// #1
   19778:	stp	w11, w9, [x21, #72]
   1977c:	ldr	x9, [x21, #8]
   19780:	ldur	x23, [x29, #-32]
   19784:	add	w11, w10, #0x3
   19788:	cmp	x8, #0x10, lsl #12
   1978c:	strh	w20, [x9, #4]
   19790:	str	w11, [x9]
   19794:	b.cc	197ac <ZSTD_endStream@@Base+0xb858>  // b.lo, b.ul, b.last
   19798:	ldp	x12, x11, [x21]
   1979c:	sub	x11, x11, x12
   197a0:	lsr	x11, x11, #3
   197a4:	mov	w12, #0x2                   	// #2
   197a8:	stp	w12, w11, [x21, #72]
   197ac:	ldur	w20, [x29, #-44]
   197b0:	stur	w10, [x29, #-44]
   197b4:	strh	w8, [x9, #6]
   197b8:	add	x8, x9, #0x8
   197bc:	str	x8, [x21, #8]
   197c0:	ldur	x8, [x29, #-16]
   197c4:	add	x22, x25, x24
   197c8:	cmp	x22, x8
   197cc:	b.hi	1937c <ZSTD_endStream@@Base+0xb428>  // b.pmore
   197d0:	ldr	x9, [sp, #96]
   197d4:	ldr	x8, [sp, #24]
   197d8:	ldur	w26, [x29, #-76]
   197dc:	mov	w2, #0x7                   	// #7
   197e0:	add	w19, w9, #0x2
   197e4:	add	x0, x8, w9, uxtw
   197e8:	mov	w1, w26
   197ec:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   197f0:	ldur	x25, [x29, #-72]
   197f4:	mov	w2, #0x7                   	// #7
   197f8:	mov	w1, w26
   197fc:	str	w19, [x25, x0, lsl #2]
   19800:	sub	x0, x22, #0x2
   19804:	sub	w19, w0, w27
   19808:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1980c:	ldur	x28, [x29, #-56]
   19810:	str	w19, [x25, x0, lsl #2]
   19814:	b	19824 <ZSTD_endStream@@Base+0xb8d0>
   19818:	mov	w8, wzr
   1981c:	mov	w20, w26
   19820:	tbz	w8, #0, 1937c <ZSTD_endStream@@Base+0xb428>
   19824:	ldur	x8, [x29, #-16]
   19828:	mov	w26, w20
   1982c:	cmp	x22, x8
   19830:	b.hi	19378 <ZSTD_endStream@@Base+0xb424>  // b.pmore
   19834:	ldur	w8, [x29, #-20]
   19838:	sub	w20, w22, w27
   1983c:	sub	w25, w20, w26
   19840:	cmp	w25, w23
   19844:	sub	w9, w8, w25
   19848:	ldur	x8, [x29, #-40]
   1984c:	csel	x8, x8, x27, cc  // cc = lo, ul, last
   19850:	cmp	w9, #0x3
   19854:	b.cc	19818 <ZSTD_endStream@@Base+0xb8c4>  // b.lo, b.ul, b.last
   19858:	add	x19, x8, x25
   1985c:	mov	x0, x19
   19860:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19864:	mov	w23, w0
   19868:	mov	x0, x22
   1986c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19870:	cmp	w23, w0
   19874:	b.ne	198c4 <ZSTD_endStream@@Base+0xb970>  // b.any
   19878:	ldur	x8, [x29, #-32]
   1987c:	ldur	x4, [x29, #-64]
   19880:	add	x0, x22, #0x4
   19884:	add	x1, x19, #0x4
   19888:	cmp	w25, w8
   1988c:	ldr	x8, [sp, #104]
   19890:	mov	x2, x28
   19894:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   19898:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1989c:	ldur	x3, [x29, #-88]
   198a0:	mov	x19, x0
   198a4:	ldr	x0, [x21, #24]
   198a8:	add	x23, x19, #0x1
   198ac:	cmp	x22, x3
   198b0:	mov	x1, x22
   198b4:	b.ls	198d8 <ZSTD_endStream@@Base+0xb984>  // b.plast
   198b8:	mov	x2, x22
   198bc:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   198c0:	b	198dc <ZSTD_endStream@@Base+0xb988>
   198c4:	mov	w8, wzr
   198c8:	mov	w20, w26
   198cc:	ldur	x23, [x29, #-32]
   198d0:	tbnz	w8, #0, 19824 <ZSTD_endStream@@Base+0xb8d0>
   198d4:	b	1937c <ZSTD_endStream@@Base+0xb428>
   198d8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   198dc:	ldr	x8, [x21, #8]
   198e0:	add	x19, x19, #0x4
   198e4:	cmp	x23, #0x10, lsl #12
   198e8:	mov	w9, #0x1                   	// #1
   198ec:	strh	wzr, [x8, #4]
   198f0:	str	w9, [x8]
   198f4:	b.cc	1990c <ZSTD_endStream@@Base+0xb9b8>  // b.lo, b.ul, b.last
   198f8:	ldp	x10, x9, [x21]
   198fc:	sub	x9, x9, x10
   19900:	lsr	x9, x9, #3
   19904:	mov	w10, #0x2                   	// #2
   19908:	stp	w10, w9, [x21, #72]
   1990c:	ldur	w1, [x29, #-76]
   19910:	strh	w23, [x8, #6]
   19914:	add	x8, x8, #0x8
   19918:	mov	w2, #0x7                   	// #7
   1991c:	mov	x0, x22
   19920:	str	x8, [x21, #8]
   19924:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   19928:	ldur	x8, [x29, #-72]
   1992c:	add	x22, x22, x19
   19930:	str	w20, [x8, x0, lsl #2]
   19934:	ldur	w20, [x29, #-44]
   19938:	mov	w8, #0x1                   	// #1
   1993c:	stur	w26, [x29, #-44]
   19940:	ldur	x23, [x29, #-32]
   19944:	tbnz	w8, #0, 19824 <ZSTD_endStream@@Base+0xb8d0>
   19948:	b	1937c <ZSTD_endStream@@Base+0xb428>
   1994c:	add	x28, x9, #0x1
   19950:	ldur	x3, [x29, #-88]
   19954:	ldr	x8, [sp, #96]
   19958:	ldr	x0, [x21, #24]
   1995c:	sub	x20, x28, x22
   19960:	cmp	x28, x3
   19964:	sub	w26, w8, w26
   19968:	mov	x1, x22
   1996c:	b.ls	19980 <ZSTD_endStream@@Base+0xba2c>  // b.plast
   19970:	mov	x2, x28
   19974:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   19978:	ldr	x27, [sp, #88]
   1997c:	b	199e8 <ZSTD_endStream@@Base+0xba94>
   19980:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19984:	ldr	x27, [sp, #88]
   19988:	cmp	x20, #0x11
   1998c:	b.cc	199e8 <ZSTD_endStream@@Base+0xba94>  // b.lo, b.ul, b.last
   19990:	ldr	x19, [x21, #24]
   19994:	add	x1, x22, #0x10
   19998:	add	x0, x19, #0x10
   1999c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   199a0:	add	x0, x19, #0x20
   199a4:	add	x1, x22, #0x20
   199a8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   199ac:	cmp	x20, #0x31
   199b0:	b.lt	199e8 <ZSTD_endStream@@Base+0xba94>  // b.tstop
   199b4:	add	x25, x19, x20
   199b8:	add	x19, x19, #0x30
   199bc:	add	x23, x22, #0x40
   199c0:	sub	x1, x23, #0x10
   199c4:	mov	x0, x19
   199c8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   199cc:	add	x0, x19, #0x10
   199d0:	mov	x1, x23
   199d4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   199d8:	add	x19, x19, #0x20
   199dc:	cmp	x19, x25
   199e0:	add	x23, x23, #0x20
   199e4:	b.cc	199c0 <ZSTD_endStream@@Base+0xba6c>  // b.lo, b.ul, b.last
   199e8:	ldr	x10, [x21, #24]
   199ec:	ldr	w8, [sp, #72]
   199f0:	sub	x9, x24, #0x3
   199f4:	cmp	x20, #0x10, lsl #12
   199f8:	add	x10, x10, x20
   199fc:	sub	w8, w26, w8
   19a00:	str	x10, [x21, #24]
   19a04:	b.cc	19a1c <ZSTD_endStream@@Base+0xbac8>  // b.lo, b.ul, b.last
   19a08:	ldp	x11, x10, [x21]
   19a0c:	sub	x10, x10, x11
   19a10:	lsr	x10, x10, #3
   19a14:	mov	w11, #0x1                   	// #1
   19a18:	stp	w11, w10, [x21, #72]
   19a1c:	ldr	x10, [x21, #8]
   19a20:	ldur	x23, [x29, #-32]
   19a24:	add	w11, w8, #0x3
   19a28:	cmp	x9, #0x10, lsl #12
   19a2c:	strh	w20, [x10, #4]
   19a30:	str	w11, [x10]
   19a34:	b.cc	19a4c <ZSTD_endStream@@Base+0xbaf8>  // b.lo, b.ul, b.last
   19a38:	ldp	x12, x11, [x21]
   19a3c:	sub	x11, x11, x12
   19a40:	lsr	x11, x11, #3
   19a44:	mov	w12, #0x2                   	// #2
   19a48:	stp	w12, w11, [x21, #72]
   19a4c:	ldur	w20, [x29, #-44]
   19a50:	strh	w9, [x10, #6]
   19a54:	add	x9, x10, #0x8
   19a58:	stur	w8, [x29, #-44]
   19a5c:	mov	x25, x28
   19a60:	mov	w8, #0x1                   	// #1
   19a64:	str	x9, [x21, #8]
   19a68:	tbz	w8, #0, 19380 <ZSTD_endStream@@Base+0xb42c>
   19a6c:	b	197c0 <ZSTD_endStream@@Base+0xb86c>
   19a70:	ldp	w9, w20, [x2]
   19a74:	ldr	x8, [x0, #176]
   19a78:	ldr	x27, [x0, #8]
   19a7c:	ldr	w23, [x0, #24]
   19a80:	stur	w9, [x29, #-44]
   19a84:	ldr	w12, [x8, #24]
   19a88:	ldp	x14, x13, [x8]
   19a8c:	add	x9, x27, x23
   19a90:	stur	x9, [x29, #-64]
   19a94:	sub	w9, w22, w9
   19a98:	str	x12, [sp, #64]
   19a9c:	add	x12, x13, x12
   19aa0:	add	w9, w14, w9
   19aa4:	add	x11, x22, x4
   19aa8:	cmp	w9, w12
   19aac:	sub	x10, x11, #0x8
   19ab0:	cinc	x28, x22, eq  // eq = none
   19ab4:	cmp	x28, x10
   19ab8:	str	x12, [sp, #16]
   19abc:	stur	x10, [x29, #-16]
   19ac0:	stur	x11, [x29, #-56]
   19ac4:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   19ac8:	ldr	x9, [x0, #48]
   19acc:	ldr	x10, [x8, #48]
   19ad0:	ldr	w8, [x8, #192]
   19ad4:	str	x14, [sp, #104]
   19ad8:	stur	x9, [x29, #-72]
   19adc:	ldr	w9, [x0, #192]
   19ae0:	str	w8, [sp, #40]
   19ae4:	sub	w8, w23, #0x1
   19ae8:	stur	w8, [x29, #-20]
   19aec:	sub	x8, x11, #0x20
   19af0:	stur	w9, [x29, #-76]
   19af4:	ldr	w9, [x0, #204]
   19af8:	stur	x8, [x29, #-88]
   19afc:	add	x8, x27, #0x2
   19b00:	str	x8, [sp, #32]
   19b04:	sub	x8, x13, #0x1
   19b08:	str	x10, [sp, #48]
   19b0c:	sub	w10, w13, w14
   19b10:	str	x8, [sp, #8]
   19b14:	sub	x8, x27, #0x1
   19b18:	str	x8, [sp, #24]
   19b1c:	add	w8, w23, w10
   19b20:	str	w8, [sp, #80]
   19b24:	sub	x8, x13, w8, uxtw
   19b28:	cmp	w9, #0x0
   19b2c:	stur	x8, [x29, #-40]
   19b30:	cinc	w8, w9, eq  // eq = none
   19b34:	str	x13, [sp, #88]
   19b38:	str	x8, [sp, #72]
   19b3c:	stur	x23, [x29, #-32]
   19b40:	stur	x21, [x29, #-96]
   19b44:	b	19b5c <ZSTD_endStream@@Base+0xbc08>
   19b48:	mov	w20, w26
   19b4c:	mov	x28, x22
   19b50:	ldur	x8, [x29, #-16]
   19b54:	cmp	x28, x8
   19b58:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   19b5c:	ldur	w1, [x29, #-76]
   19b60:	mov	w2, #0x5                   	// #5
   19b64:	mov	x0, x28
   19b68:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   19b6c:	ldur	w9, [x29, #-44]
   19b70:	sub	x14, x28, x27
   19b74:	ldur	x13, [x29, #-72]
   19b78:	ldur	w11, [x29, #-20]
   19b7c:	sub	w9, w14, w9
   19b80:	add	w19, w9, #0x1
   19b84:	ldr	w9, [sp, #80]
   19b88:	ldr	x12, [sp, #88]
   19b8c:	lsl	x8, x0, #2
   19b90:	ldr	w21, [x13, x8]
   19b94:	sub	w9, w19, w9
   19b98:	add	x10, x27, x19
   19b9c:	cmp	w19, w23
   19ba0:	sub	w11, w11, w19
   19ba4:	add	x9, x12, x9
   19ba8:	csel	x23, x9, x10, cc  // cc = lo, ul, last
   19bac:	cmp	w11, #0x3
   19bb0:	str	x14, [sp, #96]
   19bb4:	str	w14, [x13, x8]
   19bb8:	b.cc	19c24 <ZSTD_endStream@@Base+0xbcd0>  // b.lo, b.ul, b.last
   19bbc:	mov	x0, x23
   19bc0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19bc4:	add	x25, x28, #0x1
   19bc8:	mov	w26, w0
   19bcc:	mov	x0, x25
   19bd0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19bd4:	cmp	w26, w0
   19bd8:	b.ne	19c24 <ZSTD_endStream@@Base+0xbcd0>  // b.any
   19bdc:	ldur	x8, [x29, #-32]
   19be0:	ldp	x4, x2, [x29, #-64]
   19be4:	add	x0, x28, #0x5
   19be8:	add	x1, x23, #0x4
   19bec:	cmp	w19, w8
   19bf0:	ldr	x8, [sp, #104]
   19bf4:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   19bf8:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   19bfc:	ldp	x21, x3, [x29, #-96]
   19c00:	mov	x26, x0
   19c04:	sub	x23, x25, x22
   19c08:	ldr	x0, [x21, #24]
   19c0c:	cmp	x25, x3
   19c10:	b.ls	19da0 <ZSTD_endStream@@Base+0xbe4c>  // b.plast
   19c14:	mov	x1, x22
   19c18:	mov	x2, x25
   19c1c:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   19c20:	b	19e08 <ZSTD_endStream@@Base+0xbeb4>
   19c24:	ldur	x23, [x29, #-32]
   19c28:	cmp	w21, w23
   19c2c:	b.ls	19cb8 <ZSTD_endStream@@Base+0xbd64>  // b.plast
   19c30:	add	x26, x27, x21
   19c34:	mov	x0, x26
   19c38:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19c3c:	mov	w19, w0
   19c40:	mov	x0, x28
   19c44:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19c48:	cmp	w19, w0
   19c4c:	b.ne	19d8c <ZSTD_endStream@@Base+0xbe38>  // b.any
   19c50:	ldur	x2, [x29, #-56]
   19c54:	add	x0, x28, #0x4
   19c58:	add	x1, x26, #0x4
   19c5c:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   19c60:	cmp	x28, x22
   19c64:	add	x24, x0, #0x4
   19c68:	b.ls	19e6c <ZSTD_endStream@@Base+0xbf18>  // b.plast
   19c6c:	ldr	x8, [sp, #24]
   19c70:	sub	x9, x28, #0x1
   19c74:	add	x8, x8, x21
   19c78:	ldur	x21, [x29, #-96]
   19c7c:	ldrb	w10, [x9]
   19c80:	ldrb	w11, [x8]
   19c84:	cmp	w10, w11
   19c88:	b.ne	19e78 <ZSTD_endStream@@Base+0xbf24>  // b.any
   19c8c:	add	x24, x24, #0x1
   19c90:	cmp	x9, x22
   19c94:	sub	x10, x9, #0x1
   19c98:	b.ls	19cb0 <ZSTD_endStream@@Base+0xbd5c>  // b.plast
   19c9c:	ldur	x9, [x29, #-64]
   19ca0:	cmp	x8, x9
   19ca4:	sub	x8, x8, #0x1
   19ca8:	mov	x9, x10
   19cac:	b.hi	19c7c <ZSTD_endStream@@Base+0xbd28>  // b.pmore
   19cb0:	add	x25, x10, #0x1
   19cb4:	b	19e7c <ZSTD_endStream@@Base+0xbf28>
   19cb8:	ldr	w1, [sp, #40]
   19cbc:	mov	w2, #0x5                   	// #5
   19cc0:	mov	x0, x28
   19cc4:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   19cc8:	ldr	x8, [sp, #48]
   19ccc:	ldr	w26, [x8, x0, lsl #2]
   19cd0:	ldr	x8, [sp, #64]
   19cd4:	cmp	w26, w8
   19cd8:	b.ls	19d6c <ZSTD_endStream@@Base+0xbe18>  // b.plast
   19cdc:	ldr	x8, [sp, #88]
   19ce0:	add	x19, x8, x26
   19ce4:	mov	x0, x19
   19ce8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19cec:	mov	w23, w0
   19cf0:	mov	x0, x28
   19cf4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   19cf8:	cmp	w23, w0
   19cfc:	ldur	x23, [x29, #-32]
   19d00:	b.ne	19d6c <ZSTD_endStream@@Base+0xbe18>  // b.any
   19d04:	ldp	x4, x2, [x29, #-64]
   19d08:	ldr	x3, [sp, #104]
   19d0c:	add	x0, x28, #0x4
   19d10:	add	x1, x19, #0x4
   19d14:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   19d18:	ldur	x21, [x29, #-96]
   19d1c:	cmp	x28, x22
   19d20:	add	x24, x0, #0x4
   19d24:	b.ls	1a10c <ZSTD_endStream@@Base+0xc1b8>  // b.plast
   19d28:	ldp	x8, x12, [sp, #8]
   19d2c:	sub	x9, x28, #0x1
   19d30:	add	x8, x8, x26
   19d34:	ldrb	w10, [x9]
   19d38:	ldrb	w11, [x8]
   19d3c:	cmp	w10, w11
   19d40:	b.ne	1a108 <ZSTD_endStream@@Base+0xc1b4>  // b.any
   19d44:	add	x24, x24, #0x1
   19d48:	cmp	x9, x22
   19d4c:	sub	x10, x9, #0x1
   19d50:	b.ls	19d64 <ZSTD_endStream@@Base+0xbe10>  // b.plast
   19d54:	cmp	x8, x12
   19d58:	sub	x8, x8, #0x1
   19d5c:	mov	x9, x10
   19d60:	b.hi	19d34 <ZSTD_endStream@@Base+0xbde0>  // b.pmore
   19d64:	add	x28, x10, #0x1
   19d68:	b	1a10c <ZSTD_endStream@@Base+0xc1b8>
   19d6c:	ldr	x9, [sp, #72]
   19d70:	sub	x8, x28, x22
   19d74:	ldur	x21, [x29, #-96]
   19d78:	add	x8, x9, x8, asr #8
   19d7c:	add	x25, x28, x8
   19d80:	mov	x28, x25
   19d84:	tbz	wzr, #0, 19b50 <ZSTD_endStream@@Base+0xbbfc>
   19d88:	b	19f7c <ZSTD_endStream@@Base+0xc028>
   19d8c:	ldr	x9, [sp, #72]
   19d90:	sub	x8, x28, x22
   19d94:	add	x8, x9, x8, asr #8
   19d98:	add	x28, x28, x8
   19d9c:	b	19b50 <ZSTD_endStream@@Base+0xbbfc>
   19da0:	mov	x1, x22
   19da4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19da8:	cmp	x23, #0x11
   19dac:	b.cc	19e08 <ZSTD_endStream@@Base+0xbeb4>  // b.lo, b.ul, b.last
   19db0:	ldr	x24, [x21, #24]
   19db4:	add	x1, x22, #0x10
   19db8:	add	x0, x24, #0x10
   19dbc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19dc0:	add	x0, x24, #0x20
   19dc4:	add	x1, x22, #0x20
   19dc8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19dcc:	cmp	x23, #0x31
   19dd0:	b.lt	19e08 <ZSTD_endStream@@Base+0xbeb4>  // b.tstop
   19dd4:	add	x19, x24, x23
   19dd8:	add	x28, x24, #0x30
   19ddc:	add	x22, x22, #0x40
   19de0:	sub	x1, x22, #0x10
   19de4:	mov	x0, x28
   19de8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19dec:	add	x0, x28, #0x10
   19df0:	mov	x1, x22
   19df4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19df8:	add	x28, x28, #0x20
   19dfc:	cmp	x28, x19
   19e00:	add	x22, x22, #0x20
   19e04:	b.cc	19de0 <ZSTD_endStream@@Base+0xbe8c>  // b.lo, b.ul, b.last
   19e08:	ldr	x9, [x21, #24]
   19e0c:	add	x24, x26, #0x4
   19e10:	add	x8, x26, #0x1
   19e14:	cmp	x23, #0x10, lsl #12
   19e18:	add	x9, x9, x23
   19e1c:	str	x9, [x21, #24]
   19e20:	b.cc	19e38 <ZSTD_endStream@@Base+0xbee4>  // b.lo, b.ul, b.last
   19e24:	ldp	x10, x9, [x21]
   19e28:	sub	x9, x9, x10
   19e2c:	lsr	x9, x9, #3
   19e30:	mov	w10, #0x1                   	// #1
   19e34:	stp	w10, w9, [x21, #72]
   19e38:	ldr	x9, [x21, #8]
   19e3c:	cmp	x8, #0x10, lsl #12
   19e40:	mov	w10, #0x1                   	// #1
   19e44:	strh	w23, [x9, #4]
   19e48:	str	w10, [x9]
   19e4c:	b.cc	19e64 <ZSTD_endStream@@Base+0xbf10>  // b.lo, b.ul, b.last
   19e50:	ldp	x11, x10, [x21]
   19e54:	sub	x10, x10, x11
   19e58:	lsr	x10, x10, #3
   19e5c:	mov	w11, #0x2                   	// #2
   19e60:	stp	w11, w10, [x21, #72]
   19e64:	ldur	x23, [x29, #-32]
   19e68:	b	19f70 <ZSTD_endStream@@Base+0xc01c>
   19e6c:	ldp	x21, x3, [x29, #-96]
   19e70:	mov	x25, x28
   19e74:	b	19e80 <ZSTD_endStream@@Base+0xbf2c>
   19e78:	add	x25, x9, #0x1
   19e7c:	ldur	x3, [x29, #-88]
   19e80:	ldr	x0, [x21, #24]
   19e84:	cmp	x25, x3
   19e88:	sub	x20, x25, x22
   19e8c:	b.ls	19ea0 <ZSTD_endStream@@Base+0xbf4c>  // b.plast
   19e90:	mov	x1, x22
   19e94:	mov	x2, x25
   19e98:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   19e9c:	b	19f08 <ZSTD_endStream@@Base+0xbfb4>
   19ea0:	mov	x1, x22
   19ea4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19ea8:	cmp	x20, #0x11
   19eac:	b.cc	19f08 <ZSTD_endStream@@Base+0xbfb4>  // b.lo, b.ul, b.last
   19eb0:	ldr	x23, [x21, #24]
   19eb4:	add	x1, x22, #0x10
   19eb8:	add	x0, x23, #0x10
   19ebc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19ec0:	add	x0, x23, #0x20
   19ec4:	add	x1, x22, #0x20
   19ec8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19ecc:	cmp	x20, #0x31
   19ed0:	b.lt	19f08 <ZSTD_endStream@@Base+0xbfb4>  // b.tstop
   19ed4:	add	x19, x23, x20
   19ed8:	add	x23, x23, #0x30
   19edc:	add	x22, x22, #0x40
   19ee0:	sub	x1, x22, #0x10
   19ee4:	mov	x0, x23
   19ee8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19eec:	add	x0, x23, #0x10
   19ef0:	mov	x1, x22
   19ef4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   19ef8:	add	x23, x23, #0x20
   19efc:	cmp	x23, x19
   19f00:	add	x22, x22, #0x20
   19f04:	b.cc	19ee0 <ZSTD_endStream@@Base+0xbf8c>  // b.lo, b.ul, b.last
   19f08:	ldr	x9, [x21, #24]
   19f0c:	sub	w10, w28, w26
   19f10:	sub	x8, x24, #0x3
   19f14:	cmp	x20, #0x10, lsl #12
   19f18:	add	x9, x9, x20
   19f1c:	str	x9, [x21, #24]
   19f20:	b.cc	19f38 <ZSTD_endStream@@Base+0xbfe4>  // b.lo, b.ul, b.last
   19f24:	ldp	x11, x9, [x21]
   19f28:	sub	x9, x9, x11
   19f2c:	lsr	x9, x9, #3
   19f30:	mov	w11, #0x1                   	// #1
   19f34:	stp	w11, w9, [x21, #72]
   19f38:	ldr	x9, [x21, #8]
   19f3c:	ldur	x23, [x29, #-32]
   19f40:	add	w11, w10, #0x3
   19f44:	cmp	x8, #0x10, lsl #12
   19f48:	strh	w20, [x9, #4]
   19f4c:	str	w11, [x9]
   19f50:	b.cc	19f68 <ZSTD_endStream@@Base+0xc014>  // b.lo, b.ul, b.last
   19f54:	ldp	x12, x11, [x21]
   19f58:	sub	x11, x11, x12
   19f5c:	lsr	x11, x11, #3
   19f60:	mov	w12, #0x2                   	// #2
   19f64:	stp	w12, w11, [x21, #72]
   19f68:	ldur	w20, [x29, #-44]
   19f6c:	stur	w10, [x29, #-44]
   19f70:	strh	w8, [x9, #6]
   19f74:	add	x8, x9, #0x8
   19f78:	str	x8, [x21, #8]
   19f7c:	ldur	x8, [x29, #-16]
   19f80:	add	x22, x25, x24
   19f84:	cmp	x22, x8
   19f88:	b.hi	19b4c <ZSTD_endStream@@Base+0xbbf8>  // b.pmore
   19f8c:	ldr	x9, [sp, #96]
   19f90:	ldr	x8, [sp, #32]
   19f94:	ldur	w26, [x29, #-76]
   19f98:	mov	w2, #0x5                   	// #5
   19f9c:	add	w19, w9, #0x2
   19fa0:	add	x0, x8, w9, uxtw
   19fa4:	mov	w1, w26
   19fa8:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   19fac:	ldur	x25, [x29, #-72]
   19fb0:	mov	w2, #0x5                   	// #5
   19fb4:	mov	w1, w26
   19fb8:	str	w19, [x25, x0, lsl #2]
   19fbc:	sub	x0, x22, #0x2
   19fc0:	sub	w19, w0, w27
   19fc4:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   19fc8:	ldur	x28, [x29, #-56]
   19fcc:	str	w19, [x25, x0, lsl #2]
   19fd0:	b	19fe0 <ZSTD_endStream@@Base+0xc08c>
   19fd4:	mov	w8, wzr
   19fd8:	mov	w20, w26
   19fdc:	tbz	w8, #0, 19b4c <ZSTD_endStream@@Base+0xbbf8>
   19fe0:	ldur	x8, [x29, #-16]
   19fe4:	mov	w26, w20
   19fe8:	cmp	x22, x8
   19fec:	b.hi	19b48 <ZSTD_endStream@@Base+0xbbf4>  // b.pmore
   19ff0:	ldur	w8, [x29, #-20]
   19ff4:	sub	w20, w22, w27
   19ff8:	sub	w25, w20, w26
   19ffc:	cmp	w25, w23
   1a000:	sub	w9, w8, w25
   1a004:	ldur	x8, [x29, #-40]
   1a008:	csel	x8, x8, x27, cc  // cc = lo, ul, last
   1a00c:	cmp	w9, #0x3
   1a010:	b.cc	19fd4 <ZSTD_endStream@@Base+0xc080>  // b.lo, b.ul, b.last
   1a014:	add	x19, x8, x25
   1a018:	mov	x0, x19
   1a01c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a020:	mov	w23, w0
   1a024:	mov	x0, x22
   1a028:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a02c:	cmp	w23, w0
   1a030:	b.ne	1a080 <ZSTD_endStream@@Base+0xc12c>  // b.any
   1a034:	ldur	x8, [x29, #-32]
   1a038:	ldur	x4, [x29, #-64]
   1a03c:	add	x0, x22, #0x4
   1a040:	add	x1, x19, #0x4
   1a044:	cmp	w25, w8
   1a048:	ldr	x8, [sp, #104]
   1a04c:	mov	x2, x28
   1a050:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   1a054:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1a058:	ldur	x3, [x29, #-88]
   1a05c:	mov	x19, x0
   1a060:	ldr	x0, [x21, #24]
   1a064:	add	x23, x19, #0x1
   1a068:	cmp	x22, x3
   1a06c:	mov	x1, x22
   1a070:	b.ls	1a094 <ZSTD_endStream@@Base+0xc140>  // b.plast
   1a074:	mov	x2, x22
   1a078:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1a07c:	b	1a098 <ZSTD_endStream@@Base+0xc144>
   1a080:	mov	w8, wzr
   1a084:	mov	w20, w26
   1a088:	ldur	x23, [x29, #-32]
   1a08c:	tbnz	w8, #0, 19fe0 <ZSTD_endStream@@Base+0xc08c>
   1a090:	b	19b4c <ZSTD_endStream@@Base+0xbbf8>
   1a094:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a098:	ldr	x8, [x21, #8]
   1a09c:	add	x19, x19, #0x4
   1a0a0:	cmp	x23, #0x10, lsl #12
   1a0a4:	mov	w9, #0x1                   	// #1
   1a0a8:	strh	wzr, [x8, #4]
   1a0ac:	str	w9, [x8]
   1a0b0:	b.cc	1a0c8 <ZSTD_endStream@@Base+0xc174>  // b.lo, b.ul, b.last
   1a0b4:	ldp	x10, x9, [x21]
   1a0b8:	sub	x9, x9, x10
   1a0bc:	lsr	x9, x9, #3
   1a0c0:	mov	w10, #0x2                   	// #2
   1a0c4:	stp	w10, w9, [x21, #72]
   1a0c8:	ldur	w1, [x29, #-76]
   1a0cc:	strh	w23, [x8, #6]
   1a0d0:	add	x8, x8, #0x8
   1a0d4:	mov	w2, #0x5                   	// #5
   1a0d8:	mov	x0, x22
   1a0dc:	str	x8, [x21, #8]
   1a0e0:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1a0e4:	ldur	x8, [x29, #-72]
   1a0e8:	add	x22, x22, x19
   1a0ec:	str	w20, [x8, x0, lsl #2]
   1a0f0:	ldur	w20, [x29, #-44]
   1a0f4:	mov	w8, #0x1                   	// #1
   1a0f8:	stur	w26, [x29, #-44]
   1a0fc:	ldur	x23, [x29, #-32]
   1a100:	tbnz	w8, #0, 19fe0 <ZSTD_endStream@@Base+0xc08c>
   1a104:	b	19b4c <ZSTD_endStream@@Base+0xbbf8>
   1a108:	add	x28, x9, #0x1
   1a10c:	ldur	x3, [x29, #-88]
   1a110:	ldr	x8, [sp, #96]
   1a114:	ldr	x0, [x21, #24]
   1a118:	sub	x20, x28, x22
   1a11c:	cmp	x28, x3
   1a120:	sub	w26, w8, w26
   1a124:	mov	x1, x22
   1a128:	b.ls	1a138 <ZSTD_endStream@@Base+0xc1e4>  // b.plast
   1a12c:	mov	x2, x28
   1a130:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1a134:	b	1a19c <ZSTD_endStream@@Base+0xc248>
   1a138:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a13c:	cmp	x20, #0x11
   1a140:	b.cc	1a19c <ZSTD_endStream@@Base+0xc248>  // b.lo, b.ul, b.last
   1a144:	ldr	x19, [x21, #24]
   1a148:	add	x1, x22, #0x10
   1a14c:	add	x0, x19, #0x10
   1a150:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a154:	add	x0, x19, #0x20
   1a158:	add	x1, x22, #0x20
   1a15c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a160:	cmp	x20, #0x31
   1a164:	b.lt	1a19c <ZSTD_endStream@@Base+0xc248>  // b.tstop
   1a168:	add	x25, x19, x20
   1a16c:	add	x19, x19, #0x30
   1a170:	add	x23, x22, #0x40
   1a174:	sub	x1, x23, #0x10
   1a178:	mov	x0, x19
   1a17c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a180:	add	x0, x19, #0x10
   1a184:	mov	x1, x23
   1a188:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a18c:	add	x19, x19, #0x20
   1a190:	cmp	x19, x25
   1a194:	add	x23, x23, #0x20
   1a198:	b.cc	1a174 <ZSTD_endStream@@Base+0xc220>  // b.lo, b.ul, b.last
   1a19c:	ldr	x10, [x21, #24]
   1a1a0:	ldr	w8, [sp, #80]
   1a1a4:	sub	x9, x24, #0x3
   1a1a8:	cmp	x20, #0x10, lsl #12
   1a1ac:	add	x10, x10, x20
   1a1b0:	sub	w8, w26, w8
   1a1b4:	str	x10, [x21, #24]
   1a1b8:	b.cc	1a1d0 <ZSTD_endStream@@Base+0xc27c>  // b.lo, b.ul, b.last
   1a1bc:	ldp	x11, x10, [x21]
   1a1c0:	sub	x10, x10, x11
   1a1c4:	lsr	x10, x10, #3
   1a1c8:	mov	w11, #0x1                   	// #1
   1a1cc:	stp	w11, w10, [x21, #72]
   1a1d0:	ldr	x10, [x21, #8]
   1a1d4:	ldur	x23, [x29, #-32]
   1a1d8:	add	w11, w8, #0x3
   1a1dc:	cmp	x9, #0x10, lsl #12
   1a1e0:	strh	w20, [x10, #4]
   1a1e4:	str	w11, [x10]
   1a1e8:	b.cc	1a200 <ZSTD_endStream@@Base+0xc2ac>  // b.lo, b.ul, b.last
   1a1ec:	ldp	x12, x11, [x21]
   1a1f0:	sub	x11, x11, x12
   1a1f4:	lsr	x11, x11, #3
   1a1f8:	mov	w12, #0x2                   	// #2
   1a1fc:	stp	w12, w11, [x21, #72]
   1a200:	ldur	w20, [x29, #-44]
   1a204:	strh	w9, [x10, #6]
   1a208:	add	x9, x10, #0x8
   1a20c:	stur	w8, [x29, #-44]
   1a210:	mov	x25, x28
   1a214:	mov	w8, #0x1                   	// #1
   1a218:	str	x9, [x21, #8]
   1a21c:	tbz	w8, #0, 19b50 <ZSTD_endStream@@Base+0xbbfc>
   1a220:	b	19f7c <ZSTD_endStream@@Base+0xc028>
   1a224:	ldp	w9, w20, [x2]
   1a228:	ldr	x8, [x0, #176]
   1a22c:	ldr	x27, [x0, #8]
   1a230:	ldr	w23, [x0, #24]
   1a234:	stur	w9, [x29, #-44]
   1a238:	ldr	w12, [x8, #24]
   1a23c:	ldp	x14, x13, [x8]
   1a240:	add	x9, x27, x23
   1a244:	stur	x9, [x29, #-64]
   1a248:	sub	w9, w22, w9
   1a24c:	str	x12, [sp, #48]
   1a250:	add	x12, x13, x12
   1a254:	add	w9, w14, w9
   1a258:	add	x11, x22, x4
   1a25c:	cmp	w9, w12
   1a260:	sub	x10, x11, #0x8
   1a264:	cinc	x28, x22, eq  // eq = none
   1a268:	cmp	x28, x10
   1a26c:	str	x12, [sp, #8]
   1a270:	stur	x10, [x29, #-16]
   1a274:	stur	x11, [x29, #-56]
   1a278:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   1a27c:	ldr	x9, [x0, #48]
   1a280:	ldr	x10, [x8, #48]
   1a284:	ldr	w8, [x8, #192]
   1a288:	str	x14, [sp, #104]
   1a28c:	stur	x9, [x29, #-72]
   1a290:	ldr	w9, [x0, #192]
   1a294:	str	w8, [sp, #32]
   1a298:	sub	w8, w23, #0x1
   1a29c:	stur	w8, [x29, #-20]
   1a2a0:	sub	x8, x11, #0x20
   1a2a4:	stur	w9, [x29, #-76]
   1a2a8:	ldr	w9, [x0, #204]
   1a2ac:	stur	x8, [x29, #-88]
   1a2b0:	add	x8, x27, #0x2
   1a2b4:	str	x8, [sp, #24]
   1a2b8:	sub	x8, x13, #0x1
   1a2bc:	str	x10, [sp, #40]
   1a2c0:	sub	w10, w13, w14
   1a2c4:	str	x8, [sp]
   1a2c8:	sub	x8, x27, #0x1
   1a2cc:	str	x8, [sp, #16]
   1a2d0:	add	w8, w23, w10
   1a2d4:	str	w8, [sp, #72]
   1a2d8:	sub	x8, x13, w8, uxtw
   1a2dc:	cmp	w9, #0x0
   1a2e0:	stur	x8, [x29, #-40]
   1a2e4:	cinc	w8, w9, eq  // eq = none
   1a2e8:	str	x13, [sp, #80]
   1a2ec:	str	x8, [sp, #64]
   1a2f0:	stur	x23, [x29, #-32]
   1a2f4:	str	x27, [sp, #88]
   1a2f8:	b	1a310 <ZSTD_endStream@@Base+0xc3bc>
   1a2fc:	mov	w20, w26
   1a300:	mov	x28, x22
   1a304:	ldur	x8, [x29, #-16]
   1a308:	cmp	x28, x8
   1a30c:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   1a310:	ldur	w1, [x29, #-76]
   1a314:	mov	w2, #0x6                   	// #6
   1a318:	mov	x0, x28
   1a31c:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1a320:	ldur	w9, [x29, #-44]
   1a324:	sub	x14, x28, x27
   1a328:	ldur	x13, [x29, #-72]
   1a32c:	ldur	w11, [x29, #-20]
   1a330:	sub	w9, w14, w9
   1a334:	add	w19, w9, #0x1
   1a338:	ldr	w9, [sp, #72]
   1a33c:	ldr	x12, [sp, #80]
   1a340:	lsl	x8, x0, #2
   1a344:	mov	x10, x27
   1a348:	ldr	w27, [x13, x8]
   1a34c:	sub	w9, w19, w9
   1a350:	add	x10, x10, x19
   1a354:	cmp	w19, w23
   1a358:	sub	w11, w11, w19
   1a35c:	add	x9, x12, x9
   1a360:	csel	x23, x9, x10, cc  // cc = lo, ul, last
   1a364:	cmp	w11, #0x3
   1a368:	str	x14, [sp, #96]
   1a36c:	str	w14, [x13, x8]
   1a370:	b.cc	1a3e0 <ZSTD_endStream@@Base+0xc48c>  // b.lo, b.ul, b.last
   1a374:	mov	x0, x23
   1a378:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a37c:	add	x25, x28, #0x1
   1a380:	mov	w26, w0
   1a384:	mov	x0, x25
   1a388:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a38c:	cmp	w26, w0
   1a390:	b.ne	1a3e0 <ZSTD_endStream@@Base+0xc48c>  // b.any
   1a394:	ldur	x8, [x29, #-32]
   1a398:	ldp	x4, x2, [x29, #-64]
   1a39c:	add	x0, x28, #0x5
   1a3a0:	add	x1, x23, #0x4
   1a3a4:	cmp	w19, w8
   1a3a8:	ldr	x8, [sp, #104]
   1a3ac:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1a3b0:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1a3b4:	ldur	x3, [x29, #-88]
   1a3b8:	mov	x26, x0
   1a3bc:	ldr	x0, [x21, #24]
   1a3c0:	sub	x23, x25, x22
   1a3c4:	cmp	x25, x3
   1a3c8:	b.ls	1a564 <ZSTD_endStream@@Base+0xc610>  // b.plast
   1a3cc:	mov	x1, x22
   1a3d0:	mov	x2, x25
   1a3d4:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1a3d8:	ldr	x27, [sp, #88]
   1a3dc:	b	1a5d0 <ZSTD_endStream@@Base+0xc67c>
   1a3e0:	ldur	x23, [x29, #-32]
   1a3e4:	cmp	w27, w23
   1a3e8:	b.ls	1a478 <ZSTD_endStream@@Base+0xc524>  // b.plast
   1a3ec:	ldr	x8, [sp, #88]
   1a3f0:	add	x26, x8, x27
   1a3f4:	mov	x0, x26
   1a3f8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a3fc:	mov	w19, w0
   1a400:	mov	x0, x28
   1a404:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a408:	cmp	w19, w0
   1a40c:	b.ne	1a54c <ZSTD_endStream@@Base+0xc5f8>  // b.any
   1a410:	ldur	x2, [x29, #-56]
   1a414:	add	x0, x28, #0x4
   1a418:	add	x1, x26, #0x4
   1a41c:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1a420:	cmp	x28, x22
   1a424:	add	x24, x0, #0x4
   1a428:	b.ls	1a634 <ZSTD_endStream@@Base+0xc6e0>  // b.plast
   1a42c:	ldr	x8, [sp, #16]
   1a430:	sub	x9, x28, #0x1
   1a434:	add	x8, x8, x27
   1a438:	ldr	x27, [sp, #88]
   1a43c:	ldrb	w10, [x9]
   1a440:	ldrb	w11, [x8]
   1a444:	cmp	w10, w11
   1a448:	b.ne	1a644 <ZSTD_endStream@@Base+0xc6f0>  // b.any
   1a44c:	add	x24, x24, #0x1
   1a450:	cmp	x9, x22
   1a454:	sub	x10, x9, #0x1
   1a458:	b.ls	1a470 <ZSTD_endStream@@Base+0xc51c>  // b.plast
   1a45c:	ldur	x9, [x29, #-64]
   1a460:	cmp	x8, x9
   1a464:	sub	x8, x8, #0x1
   1a468:	mov	x9, x10
   1a46c:	b.hi	1a43c <ZSTD_endStream@@Base+0xc4e8>  // b.pmore
   1a470:	add	x25, x10, #0x1
   1a474:	b	1a648 <ZSTD_endStream@@Base+0xc6f4>
   1a478:	ldr	w1, [sp, #32]
   1a47c:	mov	w2, #0x6                   	// #6
   1a480:	mov	x0, x28
   1a484:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1a488:	ldr	x8, [sp, #40]
   1a48c:	ldr	w26, [x8, x0, lsl #2]
   1a490:	ldr	x8, [sp, #48]
   1a494:	cmp	w26, w8
   1a498:	b.ls	1a52c <ZSTD_endStream@@Base+0xc5d8>  // b.plast
   1a49c:	ldr	x8, [sp, #80]
   1a4a0:	add	x19, x8, x26
   1a4a4:	mov	x0, x19
   1a4a8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a4ac:	mov	w23, w0
   1a4b0:	mov	x0, x28
   1a4b4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a4b8:	cmp	w23, w0
   1a4bc:	ldur	x23, [x29, #-32]
   1a4c0:	b.ne	1a52c <ZSTD_endStream@@Base+0xc5d8>  // b.any
   1a4c4:	ldp	x4, x2, [x29, #-64]
   1a4c8:	ldr	x3, [sp, #104]
   1a4cc:	add	x0, x28, #0x4
   1a4d0:	add	x1, x19, #0x4
   1a4d4:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1a4d8:	ldr	x27, [sp, #88]
   1a4dc:	cmp	x28, x22
   1a4e0:	add	x24, x0, #0x4
   1a4e4:	b.ls	1a8d8 <ZSTD_endStream@@Base+0xc984>  // b.plast
   1a4e8:	ldp	x8, x12, [sp]
   1a4ec:	sub	x9, x28, #0x1
   1a4f0:	add	x8, x8, x26
   1a4f4:	ldrb	w10, [x9]
   1a4f8:	ldrb	w11, [x8]
   1a4fc:	cmp	w10, w11
   1a500:	b.ne	1a8d4 <ZSTD_endStream@@Base+0xc980>  // b.any
   1a504:	add	x24, x24, #0x1
   1a508:	cmp	x9, x22
   1a50c:	sub	x10, x9, #0x1
   1a510:	b.ls	1a524 <ZSTD_endStream@@Base+0xc5d0>  // b.plast
   1a514:	cmp	x8, x12
   1a518:	sub	x8, x8, #0x1
   1a51c:	mov	x9, x10
   1a520:	b.hi	1a4f4 <ZSTD_endStream@@Base+0xc5a0>  // b.pmore
   1a524:	add	x28, x10, #0x1
   1a528:	b	1a8d8 <ZSTD_endStream@@Base+0xc984>
   1a52c:	ldr	x9, [sp, #64]
   1a530:	sub	x8, x28, x22
   1a534:	ldr	x27, [sp, #88]
   1a538:	add	x8, x9, x8, asr #8
   1a53c:	add	x25, x28, x8
   1a540:	mov	x28, x25
   1a544:	tbz	wzr, #0, 1a304 <ZSTD_endStream@@Base+0xc3b0>
   1a548:	b	1a748 <ZSTD_endStream@@Base+0xc7f4>
   1a54c:	ldr	x9, [sp, #64]
   1a550:	ldr	x27, [sp, #88]
   1a554:	sub	x8, x28, x22
   1a558:	add	x8, x9, x8, asr #8
   1a55c:	add	x28, x28, x8
   1a560:	b	1a304 <ZSTD_endStream@@Base+0xc3b0>
   1a564:	mov	x1, x22
   1a568:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a56c:	ldr	x27, [sp, #88]
   1a570:	cmp	x23, #0x11
   1a574:	b.cc	1a5d0 <ZSTD_endStream@@Base+0xc67c>  // b.lo, b.ul, b.last
   1a578:	ldr	x24, [x21, #24]
   1a57c:	add	x1, x22, #0x10
   1a580:	add	x0, x24, #0x10
   1a584:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a588:	add	x0, x24, #0x20
   1a58c:	add	x1, x22, #0x20
   1a590:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a594:	cmp	x23, #0x31
   1a598:	b.lt	1a5d0 <ZSTD_endStream@@Base+0xc67c>  // b.tstop
   1a59c:	add	x19, x24, x23
   1a5a0:	add	x28, x24, #0x30
   1a5a4:	add	x22, x22, #0x40
   1a5a8:	sub	x1, x22, #0x10
   1a5ac:	mov	x0, x28
   1a5b0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a5b4:	add	x0, x28, #0x10
   1a5b8:	mov	x1, x22
   1a5bc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a5c0:	add	x28, x28, #0x20
   1a5c4:	cmp	x28, x19
   1a5c8:	add	x22, x22, #0x20
   1a5cc:	b.cc	1a5a8 <ZSTD_endStream@@Base+0xc654>  // b.lo, b.ul, b.last
   1a5d0:	ldr	x9, [x21, #24]
   1a5d4:	add	x24, x26, #0x4
   1a5d8:	add	x8, x26, #0x1
   1a5dc:	cmp	x23, #0x10, lsl #12
   1a5e0:	add	x9, x9, x23
   1a5e4:	str	x9, [x21, #24]
   1a5e8:	b.cc	1a600 <ZSTD_endStream@@Base+0xc6ac>  // b.lo, b.ul, b.last
   1a5ec:	ldp	x10, x9, [x21]
   1a5f0:	sub	x9, x9, x10
   1a5f4:	lsr	x9, x9, #3
   1a5f8:	mov	w10, #0x1                   	// #1
   1a5fc:	stp	w10, w9, [x21, #72]
   1a600:	ldr	x9, [x21, #8]
   1a604:	cmp	x8, #0x10, lsl #12
   1a608:	mov	w10, #0x1                   	// #1
   1a60c:	strh	w23, [x9, #4]
   1a610:	str	w10, [x9]
   1a614:	b.cc	1a62c <ZSTD_endStream@@Base+0xc6d8>  // b.lo, b.ul, b.last
   1a618:	ldp	x11, x10, [x21]
   1a61c:	sub	x10, x10, x11
   1a620:	lsr	x10, x10, #3
   1a624:	mov	w11, #0x2                   	// #2
   1a628:	stp	w11, w10, [x21, #72]
   1a62c:	ldur	x23, [x29, #-32]
   1a630:	b	1a73c <ZSTD_endStream@@Base+0xc7e8>
   1a634:	ldur	x3, [x29, #-88]
   1a638:	ldr	x27, [sp, #88]
   1a63c:	mov	x25, x28
   1a640:	b	1a64c <ZSTD_endStream@@Base+0xc6f8>
   1a644:	add	x25, x9, #0x1
   1a648:	ldur	x3, [x29, #-88]
   1a64c:	ldr	x0, [x21, #24]
   1a650:	cmp	x25, x3
   1a654:	sub	x20, x25, x22
   1a658:	b.ls	1a66c <ZSTD_endStream@@Base+0xc718>  // b.plast
   1a65c:	mov	x1, x22
   1a660:	mov	x2, x25
   1a664:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1a668:	b	1a6d4 <ZSTD_endStream@@Base+0xc780>
   1a66c:	mov	x1, x22
   1a670:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a674:	cmp	x20, #0x11
   1a678:	b.cc	1a6d4 <ZSTD_endStream@@Base+0xc780>  // b.lo, b.ul, b.last
   1a67c:	ldr	x23, [x21, #24]
   1a680:	add	x1, x22, #0x10
   1a684:	add	x0, x23, #0x10
   1a688:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a68c:	add	x0, x23, #0x20
   1a690:	add	x1, x22, #0x20
   1a694:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a698:	cmp	x20, #0x31
   1a69c:	b.lt	1a6d4 <ZSTD_endStream@@Base+0xc780>  // b.tstop
   1a6a0:	add	x19, x23, x20
   1a6a4:	add	x23, x23, #0x30
   1a6a8:	add	x22, x22, #0x40
   1a6ac:	sub	x1, x22, #0x10
   1a6b0:	mov	x0, x23
   1a6b4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a6b8:	add	x0, x23, #0x10
   1a6bc:	mov	x1, x22
   1a6c0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a6c4:	add	x23, x23, #0x20
   1a6c8:	cmp	x23, x19
   1a6cc:	add	x22, x22, #0x20
   1a6d0:	b.cc	1a6ac <ZSTD_endStream@@Base+0xc758>  // b.lo, b.ul, b.last
   1a6d4:	ldr	x9, [x21, #24]
   1a6d8:	sub	w10, w28, w26
   1a6dc:	sub	x8, x24, #0x3
   1a6e0:	cmp	x20, #0x10, lsl #12
   1a6e4:	add	x9, x9, x20
   1a6e8:	str	x9, [x21, #24]
   1a6ec:	b.cc	1a704 <ZSTD_endStream@@Base+0xc7b0>  // b.lo, b.ul, b.last
   1a6f0:	ldp	x11, x9, [x21]
   1a6f4:	sub	x9, x9, x11
   1a6f8:	lsr	x9, x9, #3
   1a6fc:	mov	w11, #0x1                   	// #1
   1a700:	stp	w11, w9, [x21, #72]
   1a704:	ldr	x9, [x21, #8]
   1a708:	ldur	x23, [x29, #-32]
   1a70c:	add	w11, w10, #0x3
   1a710:	cmp	x8, #0x10, lsl #12
   1a714:	strh	w20, [x9, #4]
   1a718:	str	w11, [x9]
   1a71c:	b.cc	1a734 <ZSTD_endStream@@Base+0xc7e0>  // b.lo, b.ul, b.last
   1a720:	ldp	x12, x11, [x21]
   1a724:	sub	x11, x11, x12
   1a728:	lsr	x11, x11, #3
   1a72c:	mov	w12, #0x2                   	// #2
   1a730:	stp	w12, w11, [x21, #72]
   1a734:	ldur	w20, [x29, #-44]
   1a738:	stur	w10, [x29, #-44]
   1a73c:	strh	w8, [x9, #6]
   1a740:	add	x8, x9, #0x8
   1a744:	str	x8, [x21, #8]
   1a748:	ldur	x8, [x29, #-16]
   1a74c:	add	x22, x25, x24
   1a750:	cmp	x22, x8
   1a754:	b.hi	1a300 <ZSTD_endStream@@Base+0xc3ac>  // b.pmore
   1a758:	ldr	x9, [sp, #96]
   1a75c:	ldr	x8, [sp, #24]
   1a760:	ldur	w26, [x29, #-76]
   1a764:	mov	w2, #0x6                   	// #6
   1a768:	add	w19, w9, #0x2
   1a76c:	add	x0, x8, w9, uxtw
   1a770:	mov	w1, w26
   1a774:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1a778:	ldur	x25, [x29, #-72]
   1a77c:	mov	w2, #0x6                   	// #6
   1a780:	mov	w1, w26
   1a784:	str	w19, [x25, x0, lsl #2]
   1a788:	sub	x0, x22, #0x2
   1a78c:	sub	w19, w0, w27
   1a790:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1a794:	ldur	x28, [x29, #-56]
   1a798:	str	w19, [x25, x0, lsl #2]
   1a79c:	b	1a7ac <ZSTD_endStream@@Base+0xc858>
   1a7a0:	mov	w8, wzr
   1a7a4:	mov	w20, w26
   1a7a8:	tbz	w8, #0, 1a300 <ZSTD_endStream@@Base+0xc3ac>
   1a7ac:	ldur	x8, [x29, #-16]
   1a7b0:	mov	w26, w20
   1a7b4:	cmp	x22, x8
   1a7b8:	b.hi	1a2fc <ZSTD_endStream@@Base+0xc3a8>  // b.pmore
   1a7bc:	ldur	w8, [x29, #-20]
   1a7c0:	sub	w20, w22, w27
   1a7c4:	sub	w25, w20, w26
   1a7c8:	cmp	w25, w23
   1a7cc:	sub	w9, w8, w25
   1a7d0:	ldur	x8, [x29, #-40]
   1a7d4:	csel	x8, x8, x27, cc  // cc = lo, ul, last
   1a7d8:	cmp	w9, #0x3
   1a7dc:	b.cc	1a7a0 <ZSTD_endStream@@Base+0xc84c>  // b.lo, b.ul, b.last
   1a7e0:	add	x19, x8, x25
   1a7e4:	mov	x0, x19
   1a7e8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a7ec:	mov	w23, w0
   1a7f0:	mov	x0, x22
   1a7f4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1a7f8:	cmp	w23, w0
   1a7fc:	b.ne	1a84c <ZSTD_endStream@@Base+0xc8f8>  // b.any
   1a800:	ldur	x8, [x29, #-32]
   1a804:	ldur	x4, [x29, #-64]
   1a808:	add	x0, x22, #0x4
   1a80c:	add	x1, x19, #0x4
   1a810:	cmp	w25, w8
   1a814:	ldr	x8, [sp, #104]
   1a818:	mov	x2, x28
   1a81c:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   1a820:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1a824:	ldur	x3, [x29, #-88]
   1a828:	mov	x19, x0
   1a82c:	ldr	x0, [x21, #24]
   1a830:	add	x23, x19, #0x1
   1a834:	cmp	x22, x3
   1a838:	mov	x1, x22
   1a83c:	b.ls	1a860 <ZSTD_endStream@@Base+0xc90c>  // b.plast
   1a840:	mov	x2, x22
   1a844:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1a848:	b	1a864 <ZSTD_endStream@@Base+0xc910>
   1a84c:	mov	w8, wzr
   1a850:	mov	w20, w26
   1a854:	ldur	x23, [x29, #-32]
   1a858:	tbnz	w8, #0, 1a7ac <ZSTD_endStream@@Base+0xc858>
   1a85c:	b	1a300 <ZSTD_endStream@@Base+0xc3ac>
   1a860:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a864:	ldr	x8, [x21, #8]
   1a868:	add	x19, x19, #0x4
   1a86c:	cmp	x23, #0x10, lsl #12
   1a870:	mov	w9, #0x1                   	// #1
   1a874:	strh	wzr, [x8, #4]
   1a878:	str	w9, [x8]
   1a87c:	b.cc	1a894 <ZSTD_endStream@@Base+0xc940>  // b.lo, b.ul, b.last
   1a880:	ldp	x10, x9, [x21]
   1a884:	sub	x9, x9, x10
   1a888:	lsr	x9, x9, #3
   1a88c:	mov	w10, #0x2                   	// #2
   1a890:	stp	w10, w9, [x21, #72]
   1a894:	ldur	w1, [x29, #-76]
   1a898:	strh	w23, [x8, #6]
   1a89c:	add	x8, x8, #0x8
   1a8a0:	mov	w2, #0x6                   	// #6
   1a8a4:	mov	x0, x22
   1a8a8:	str	x8, [x21, #8]
   1a8ac:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1a8b0:	ldur	x8, [x29, #-72]
   1a8b4:	add	x22, x22, x19
   1a8b8:	str	w20, [x8, x0, lsl #2]
   1a8bc:	ldur	w20, [x29, #-44]
   1a8c0:	mov	w8, #0x1                   	// #1
   1a8c4:	stur	w26, [x29, #-44]
   1a8c8:	ldur	x23, [x29, #-32]
   1a8cc:	tbnz	w8, #0, 1a7ac <ZSTD_endStream@@Base+0xc858>
   1a8d0:	b	1a300 <ZSTD_endStream@@Base+0xc3ac>
   1a8d4:	add	x28, x9, #0x1
   1a8d8:	ldur	x3, [x29, #-88]
   1a8dc:	ldr	x8, [sp, #96]
   1a8e0:	ldr	x0, [x21, #24]
   1a8e4:	sub	x20, x28, x22
   1a8e8:	cmp	x28, x3
   1a8ec:	sub	w26, w8, w26
   1a8f0:	mov	x1, x22
   1a8f4:	b.ls	1a904 <ZSTD_endStream@@Base+0xc9b0>  // b.plast
   1a8f8:	mov	x2, x28
   1a8fc:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1a900:	b	1a968 <ZSTD_endStream@@Base+0xca14>
   1a904:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a908:	cmp	x20, #0x11
   1a90c:	b.cc	1a968 <ZSTD_endStream@@Base+0xca14>  // b.lo, b.ul, b.last
   1a910:	ldr	x19, [x21, #24]
   1a914:	add	x1, x22, #0x10
   1a918:	add	x0, x19, #0x10
   1a91c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a920:	add	x0, x19, #0x20
   1a924:	add	x1, x22, #0x20
   1a928:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a92c:	cmp	x20, #0x31
   1a930:	b.lt	1a968 <ZSTD_endStream@@Base+0xca14>  // b.tstop
   1a934:	add	x25, x19, x20
   1a938:	add	x19, x19, #0x30
   1a93c:	add	x23, x22, #0x40
   1a940:	sub	x1, x23, #0x10
   1a944:	mov	x0, x19
   1a948:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a94c:	add	x0, x19, #0x10
   1a950:	mov	x1, x23
   1a954:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1a958:	add	x19, x19, #0x20
   1a95c:	cmp	x19, x25
   1a960:	add	x23, x23, #0x20
   1a964:	b.cc	1a940 <ZSTD_endStream@@Base+0xc9ec>  // b.lo, b.ul, b.last
   1a968:	ldr	x10, [x21, #24]
   1a96c:	ldr	w8, [sp, #72]
   1a970:	sub	x9, x24, #0x3
   1a974:	cmp	x20, #0x10, lsl #12
   1a978:	add	x10, x10, x20
   1a97c:	sub	w8, w26, w8
   1a980:	str	x10, [x21, #24]
   1a984:	b.cc	1a99c <ZSTD_endStream@@Base+0xca48>  // b.lo, b.ul, b.last
   1a988:	ldp	x11, x10, [x21]
   1a98c:	sub	x10, x10, x11
   1a990:	lsr	x10, x10, #3
   1a994:	mov	w11, #0x1                   	// #1
   1a998:	stp	w11, w10, [x21, #72]
   1a99c:	ldr	x10, [x21, #8]
   1a9a0:	ldur	x23, [x29, #-32]
   1a9a4:	add	w11, w8, #0x3
   1a9a8:	cmp	x9, #0x10, lsl #12
   1a9ac:	strh	w20, [x10, #4]
   1a9b0:	str	w11, [x10]
   1a9b4:	b.cc	1a9cc <ZSTD_endStream@@Base+0xca78>  // b.lo, b.ul, b.last
   1a9b8:	ldp	x12, x11, [x21]
   1a9bc:	sub	x11, x11, x12
   1a9c0:	lsr	x11, x11, #3
   1a9c4:	mov	w12, #0x2                   	// #2
   1a9c8:	stp	w12, w11, [x21, #72]
   1a9cc:	ldur	w20, [x29, #-44]
   1a9d0:	strh	w9, [x10, #6]
   1a9d4:	add	x9, x10, #0x8
   1a9d8:	stur	w8, [x29, #-44]
   1a9dc:	mov	x25, x28
   1a9e0:	mov	w8, #0x1                   	// #1
   1a9e4:	str	x9, [x21, #8]
   1a9e8:	tbz	w8, #0, 1a304 <ZSTD_endStream@@Base+0xc3b0>
   1a9ec:	b	1a748 <ZSTD_endStream@@Base+0xc7f4>
   1a9f0:	ldp	w9, w20, [x2]
   1a9f4:	ldr	x8, [x0, #176]
   1a9f8:	ldr	x27, [x0, #8]
   1a9fc:	ldr	w23, [x0, #24]
   1aa00:	stur	w9, [x29, #-44]
   1aa04:	ldr	w12, [x8, #24]
   1aa08:	ldp	x14, x13, [x8]
   1aa0c:	add	x9, x27, x23
   1aa10:	stur	x9, [x29, #-64]
   1aa14:	sub	w9, w22, w9
   1aa18:	str	x12, [sp, #64]
   1aa1c:	add	x12, x13, x12
   1aa20:	add	w9, w14, w9
   1aa24:	add	x11, x22, x4
   1aa28:	cmp	w9, w12
   1aa2c:	sub	x10, x11, #0x8
   1aa30:	cinc	x28, x22, eq  // eq = none
   1aa34:	cmp	x28, x10
   1aa38:	str	x12, [sp, #16]
   1aa3c:	stur	x10, [x29, #-16]
   1aa40:	stur	x11, [x29, #-56]
   1aa44:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   1aa48:	ldr	x9, [x0, #48]
   1aa4c:	ldr	x10, [x8, #48]
   1aa50:	ldr	w8, [x8, #192]
   1aa54:	str	x14, [sp, #104]
   1aa58:	stur	x9, [x29, #-72]
   1aa5c:	ldr	w9, [x0, #192]
   1aa60:	str	w8, [sp, #40]
   1aa64:	sub	w8, w23, #0x1
   1aa68:	stur	w8, [x29, #-20]
   1aa6c:	sub	x8, x11, #0x20
   1aa70:	stur	w9, [x29, #-76]
   1aa74:	ldr	w9, [x0, #204]
   1aa78:	stur	x8, [x29, #-88]
   1aa7c:	add	x8, x27, #0x2
   1aa80:	str	x8, [sp, #32]
   1aa84:	sub	x8, x13, #0x1
   1aa88:	str	x10, [sp, #48]
   1aa8c:	sub	w10, w13, w14
   1aa90:	str	x8, [sp, #8]
   1aa94:	sub	x8, x27, #0x1
   1aa98:	str	x8, [sp, #24]
   1aa9c:	add	w8, w23, w10
   1aaa0:	str	w8, [sp, #80]
   1aaa4:	sub	x8, x13, w8, uxtw
   1aaa8:	cmp	w9, #0x0
   1aaac:	stur	x8, [x29, #-40]
   1aab0:	cinc	w8, w9, eq  // eq = none
   1aab4:	str	x13, [sp, #88]
   1aab8:	str	x8, [sp, #72]
   1aabc:	stur	x23, [x29, #-32]
   1aac0:	stur	x21, [x29, #-96]
   1aac4:	b	1aadc <ZSTD_endStream@@Base+0xcb88>
   1aac8:	mov	w20, w26
   1aacc:	mov	x28, x22
   1aad0:	ldur	x8, [x29, #-16]
   1aad4:	cmp	x28, x8
   1aad8:	b.cs	1b1ac <ZSTD_endStream@@Base+0xd258>  // b.hs, b.nlast
   1aadc:	ldur	w1, [x29, #-76]
   1aae0:	mov	w2, #0x4                   	// #4
   1aae4:	mov	x0, x28
   1aae8:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1aaec:	ldur	w9, [x29, #-44]
   1aaf0:	sub	x14, x28, x27
   1aaf4:	ldur	x13, [x29, #-72]
   1aaf8:	ldur	w11, [x29, #-20]
   1aafc:	sub	w9, w14, w9
   1ab00:	add	w19, w9, #0x1
   1ab04:	ldr	w9, [sp, #80]
   1ab08:	ldr	x12, [sp, #88]
   1ab0c:	lsl	x8, x0, #2
   1ab10:	ldr	w21, [x13, x8]
   1ab14:	sub	w9, w19, w9
   1ab18:	add	x10, x27, x19
   1ab1c:	cmp	w19, w23
   1ab20:	sub	w11, w11, w19
   1ab24:	add	x9, x12, x9
   1ab28:	csel	x23, x9, x10, cc  // cc = lo, ul, last
   1ab2c:	cmp	w11, #0x3
   1ab30:	str	x14, [sp, #96]
   1ab34:	str	w14, [x13, x8]
   1ab38:	b.cc	1aba4 <ZSTD_endStream@@Base+0xcc50>  // b.lo, b.ul, b.last
   1ab3c:	mov	x0, x23
   1ab40:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1ab44:	add	x25, x28, #0x1
   1ab48:	mov	w26, w0
   1ab4c:	mov	x0, x25
   1ab50:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1ab54:	cmp	w26, w0
   1ab58:	b.ne	1aba4 <ZSTD_endStream@@Base+0xcc50>  // b.any
   1ab5c:	ldur	x8, [x29, #-32]
   1ab60:	ldp	x4, x2, [x29, #-64]
   1ab64:	add	x0, x28, #0x5
   1ab68:	add	x1, x23, #0x4
   1ab6c:	cmp	w19, w8
   1ab70:	ldr	x8, [sp, #104]
   1ab74:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1ab78:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1ab7c:	ldp	x21, x3, [x29, #-96]
   1ab80:	mov	x26, x0
   1ab84:	sub	x23, x25, x22
   1ab88:	ldr	x0, [x21, #24]
   1ab8c:	cmp	x25, x3
   1ab90:	b.ls	1ad20 <ZSTD_endStream@@Base+0xcdcc>  // b.plast
   1ab94:	mov	x1, x22
   1ab98:	mov	x2, x25
   1ab9c:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1aba0:	b	1ad88 <ZSTD_endStream@@Base+0xce34>
   1aba4:	ldur	x23, [x29, #-32]
   1aba8:	cmp	w21, w23
   1abac:	b.ls	1ac38 <ZSTD_endStream@@Base+0xcce4>  // b.plast
   1abb0:	add	x26, x27, x21
   1abb4:	mov	x0, x26
   1abb8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1abbc:	mov	w19, w0
   1abc0:	mov	x0, x28
   1abc4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1abc8:	cmp	w19, w0
   1abcc:	b.ne	1ad0c <ZSTD_endStream@@Base+0xcdb8>  // b.any
   1abd0:	ldur	x2, [x29, #-56]
   1abd4:	add	x0, x28, #0x4
   1abd8:	add	x1, x26, #0x4
   1abdc:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1abe0:	cmp	x28, x22
   1abe4:	add	x24, x0, #0x4
   1abe8:	b.ls	1adec <ZSTD_endStream@@Base+0xce98>  // b.plast
   1abec:	ldr	x8, [sp, #24]
   1abf0:	sub	x9, x28, #0x1
   1abf4:	add	x8, x8, x21
   1abf8:	ldur	x21, [x29, #-96]
   1abfc:	ldrb	w10, [x9]
   1ac00:	ldrb	w11, [x8]
   1ac04:	cmp	w10, w11
   1ac08:	b.ne	1adf8 <ZSTD_endStream@@Base+0xcea4>  // b.any
   1ac0c:	add	x24, x24, #0x1
   1ac10:	cmp	x9, x22
   1ac14:	sub	x10, x9, #0x1
   1ac18:	b.ls	1ac30 <ZSTD_endStream@@Base+0xccdc>  // b.plast
   1ac1c:	ldur	x9, [x29, #-64]
   1ac20:	cmp	x8, x9
   1ac24:	sub	x8, x8, #0x1
   1ac28:	mov	x9, x10
   1ac2c:	b.hi	1abfc <ZSTD_endStream@@Base+0xcca8>  // b.pmore
   1ac30:	add	x25, x10, #0x1
   1ac34:	b	1adfc <ZSTD_endStream@@Base+0xcea8>
   1ac38:	ldr	w1, [sp, #40]
   1ac3c:	mov	w2, #0x4                   	// #4
   1ac40:	mov	x0, x28
   1ac44:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1ac48:	ldr	x8, [sp, #48]
   1ac4c:	ldr	w26, [x8, x0, lsl #2]
   1ac50:	ldr	x8, [sp, #64]
   1ac54:	cmp	w26, w8
   1ac58:	b.ls	1acec <ZSTD_endStream@@Base+0xcd98>  // b.plast
   1ac5c:	ldr	x8, [sp, #88]
   1ac60:	add	x19, x8, x26
   1ac64:	mov	x0, x19
   1ac68:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1ac6c:	mov	w23, w0
   1ac70:	mov	x0, x28
   1ac74:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1ac78:	cmp	w23, w0
   1ac7c:	ldur	x23, [x29, #-32]
   1ac80:	b.ne	1acec <ZSTD_endStream@@Base+0xcd98>  // b.any
   1ac84:	ldp	x4, x2, [x29, #-64]
   1ac88:	ldr	x3, [sp, #104]
   1ac8c:	add	x0, x28, #0x4
   1ac90:	add	x1, x19, #0x4
   1ac94:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1ac98:	cmp	x28, x22
   1ac9c:	add	x24, x0, #0x4
   1aca0:	b.ls	1b088 <ZSTD_endStream@@Base+0xd134>  // b.plast
   1aca4:	ldp	x8, x12, [sp, #8]
   1aca8:	ldur	x21, [x29, #-96]
   1acac:	sub	x9, x28, #0x1
   1acb0:	add	x8, x8, x26
   1acb4:	ldrb	w10, [x9]
   1acb8:	ldrb	w11, [x8]
   1acbc:	cmp	w10, w11
   1acc0:	b.ne	1b090 <ZSTD_endStream@@Base+0xd13c>  // b.any
   1acc4:	add	x24, x24, #0x1
   1acc8:	cmp	x9, x22
   1accc:	sub	x10, x9, #0x1
   1acd0:	b.ls	1ace4 <ZSTD_endStream@@Base+0xcd90>  // b.plast
   1acd4:	cmp	x8, x12
   1acd8:	sub	x8, x8, #0x1
   1acdc:	mov	x9, x10
   1ace0:	b.hi	1acb4 <ZSTD_endStream@@Base+0xcd60>  // b.pmore
   1ace4:	add	x28, x10, #0x1
   1ace8:	b	1b094 <ZSTD_endStream@@Base+0xd140>
   1acec:	ldr	x9, [sp, #72]
   1acf0:	sub	x8, x28, x22
   1acf4:	ldur	x21, [x29, #-96]
   1acf8:	add	x8, x9, x8, asr #8
   1acfc:	add	x25, x28, x8
   1ad00:	mov	x28, x25
   1ad04:	tbz	wzr, #0, 1aad0 <ZSTD_endStream@@Base+0xcb7c>
   1ad08:	b	1aefc <ZSTD_endStream@@Base+0xcfa8>
   1ad0c:	ldr	x9, [sp, #72]
   1ad10:	sub	x8, x28, x22
   1ad14:	add	x8, x9, x8, asr #8
   1ad18:	add	x28, x28, x8
   1ad1c:	b	1aad0 <ZSTD_endStream@@Base+0xcb7c>
   1ad20:	mov	x1, x22
   1ad24:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ad28:	cmp	x23, #0x11
   1ad2c:	b.cc	1ad88 <ZSTD_endStream@@Base+0xce34>  // b.lo, b.ul, b.last
   1ad30:	ldr	x24, [x21, #24]
   1ad34:	add	x1, x22, #0x10
   1ad38:	add	x0, x24, #0x10
   1ad3c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ad40:	add	x0, x24, #0x20
   1ad44:	add	x1, x22, #0x20
   1ad48:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ad4c:	cmp	x23, #0x31
   1ad50:	b.lt	1ad88 <ZSTD_endStream@@Base+0xce34>  // b.tstop
   1ad54:	add	x19, x24, x23
   1ad58:	add	x28, x24, #0x30
   1ad5c:	add	x22, x22, #0x40
   1ad60:	sub	x1, x22, #0x10
   1ad64:	mov	x0, x28
   1ad68:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ad6c:	add	x0, x28, #0x10
   1ad70:	mov	x1, x22
   1ad74:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ad78:	add	x28, x28, #0x20
   1ad7c:	cmp	x28, x19
   1ad80:	add	x22, x22, #0x20
   1ad84:	b.cc	1ad60 <ZSTD_endStream@@Base+0xce0c>  // b.lo, b.ul, b.last
   1ad88:	ldr	x9, [x21, #24]
   1ad8c:	add	x24, x26, #0x4
   1ad90:	add	x8, x26, #0x1
   1ad94:	cmp	x23, #0x10, lsl #12
   1ad98:	add	x9, x9, x23
   1ad9c:	str	x9, [x21, #24]
   1ada0:	b.cc	1adb8 <ZSTD_endStream@@Base+0xce64>  // b.lo, b.ul, b.last
   1ada4:	ldp	x10, x9, [x21]
   1ada8:	sub	x9, x9, x10
   1adac:	lsr	x9, x9, #3
   1adb0:	mov	w10, #0x1                   	// #1
   1adb4:	stp	w10, w9, [x21, #72]
   1adb8:	ldr	x9, [x21, #8]
   1adbc:	cmp	x8, #0x10, lsl #12
   1adc0:	mov	w10, #0x1                   	// #1
   1adc4:	strh	w23, [x9, #4]
   1adc8:	str	w10, [x9]
   1adcc:	b.cc	1ade4 <ZSTD_endStream@@Base+0xce90>  // b.lo, b.ul, b.last
   1add0:	ldp	x11, x10, [x21]
   1add4:	sub	x10, x10, x11
   1add8:	lsr	x10, x10, #3
   1addc:	mov	w11, #0x2                   	// #2
   1ade0:	stp	w11, w10, [x21, #72]
   1ade4:	ldur	x23, [x29, #-32]
   1ade8:	b	1aef0 <ZSTD_endStream@@Base+0xcf9c>
   1adec:	ldp	x21, x3, [x29, #-96]
   1adf0:	mov	x25, x28
   1adf4:	b	1ae00 <ZSTD_endStream@@Base+0xceac>
   1adf8:	add	x25, x9, #0x1
   1adfc:	ldur	x3, [x29, #-88]
   1ae00:	ldr	x0, [x21, #24]
   1ae04:	cmp	x25, x3
   1ae08:	sub	x20, x25, x22
   1ae0c:	b.ls	1ae20 <ZSTD_endStream@@Base+0xcecc>  // b.plast
   1ae10:	mov	x1, x22
   1ae14:	mov	x2, x25
   1ae18:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1ae1c:	b	1ae88 <ZSTD_endStream@@Base+0xcf34>
   1ae20:	mov	x1, x22
   1ae24:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ae28:	cmp	x20, #0x11
   1ae2c:	b.cc	1ae88 <ZSTD_endStream@@Base+0xcf34>  // b.lo, b.ul, b.last
   1ae30:	ldr	x23, [x21, #24]
   1ae34:	add	x1, x22, #0x10
   1ae38:	add	x0, x23, #0x10
   1ae3c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ae40:	add	x0, x23, #0x20
   1ae44:	add	x1, x22, #0x20
   1ae48:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ae4c:	cmp	x20, #0x31
   1ae50:	b.lt	1ae88 <ZSTD_endStream@@Base+0xcf34>  // b.tstop
   1ae54:	add	x19, x23, x20
   1ae58:	add	x23, x23, #0x30
   1ae5c:	add	x22, x22, #0x40
   1ae60:	sub	x1, x22, #0x10
   1ae64:	mov	x0, x23
   1ae68:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ae6c:	add	x0, x23, #0x10
   1ae70:	mov	x1, x22
   1ae74:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1ae78:	add	x23, x23, #0x20
   1ae7c:	cmp	x23, x19
   1ae80:	add	x22, x22, #0x20
   1ae84:	b.cc	1ae60 <ZSTD_endStream@@Base+0xcf0c>  // b.lo, b.ul, b.last
   1ae88:	ldr	x9, [x21, #24]
   1ae8c:	sub	w10, w28, w26
   1ae90:	sub	x8, x24, #0x3
   1ae94:	cmp	x20, #0x10, lsl #12
   1ae98:	add	x9, x9, x20
   1ae9c:	str	x9, [x21, #24]
   1aea0:	b.cc	1aeb8 <ZSTD_endStream@@Base+0xcf64>  // b.lo, b.ul, b.last
   1aea4:	ldp	x11, x9, [x21]
   1aea8:	sub	x9, x9, x11
   1aeac:	lsr	x9, x9, #3
   1aeb0:	mov	w11, #0x1                   	// #1
   1aeb4:	stp	w11, w9, [x21, #72]
   1aeb8:	ldr	x9, [x21, #8]
   1aebc:	ldur	x23, [x29, #-32]
   1aec0:	add	w11, w10, #0x3
   1aec4:	cmp	x8, #0x10, lsl #12
   1aec8:	strh	w20, [x9, #4]
   1aecc:	str	w11, [x9]
   1aed0:	b.cc	1aee8 <ZSTD_endStream@@Base+0xcf94>  // b.lo, b.ul, b.last
   1aed4:	ldp	x12, x11, [x21]
   1aed8:	sub	x11, x11, x12
   1aedc:	lsr	x11, x11, #3
   1aee0:	mov	w12, #0x2                   	// #2
   1aee4:	stp	w12, w11, [x21, #72]
   1aee8:	ldur	w20, [x29, #-44]
   1aeec:	stur	w10, [x29, #-44]
   1aef0:	strh	w8, [x9, #6]
   1aef4:	add	x8, x9, #0x8
   1aef8:	str	x8, [x21, #8]
   1aefc:	ldur	x8, [x29, #-16]
   1af00:	add	x22, x25, x24
   1af04:	cmp	x22, x8
   1af08:	b.hi	1aacc <ZSTD_endStream@@Base+0xcb78>  // b.pmore
   1af0c:	ldr	x9, [sp, #96]
   1af10:	ldr	x8, [sp, #32]
   1af14:	ldur	w26, [x29, #-76]
   1af18:	mov	w2, #0x4                   	// #4
   1af1c:	add	w19, w9, #0x2
   1af20:	add	x0, x8, w9, uxtw
   1af24:	mov	w1, w26
   1af28:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1af2c:	ldur	x25, [x29, #-72]
   1af30:	mov	w2, #0x4                   	// #4
   1af34:	mov	w1, w26
   1af38:	str	w19, [x25, x0, lsl #2]
   1af3c:	sub	x0, x22, #0x2
   1af40:	sub	w19, w0, w27
   1af44:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1af48:	ldur	x28, [x29, #-56]
   1af4c:	str	w19, [x25, x0, lsl #2]
   1af50:	b	1af60 <ZSTD_endStream@@Base+0xd00c>
   1af54:	mov	w8, wzr
   1af58:	mov	w20, w26
   1af5c:	tbz	w8, #0, 1aacc <ZSTD_endStream@@Base+0xcb78>
   1af60:	ldur	x8, [x29, #-16]
   1af64:	mov	w26, w20
   1af68:	cmp	x22, x8
   1af6c:	b.hi	1aac8 <ZSTD_endStream@@Base+0xcb74>  // b.pmore
   1af70:	ldur	w8, [x29, #-20]
   1af74:	sub	w20, w22, w27
   1af78:	sub	w25, w20, w26
   1af7c:	cmp	w25, w23
   1af80:	sub	w9, w8, w25
   1af84:	ldur	x8, [x29, #-40]
   1af88:	csel	x8, x8, x27, cc  // cc = lo, ul, last
   1af8c:	cmp	w9, #0x3
   1af90:	b.cc	1af54 <ZSTD_endStream@@Base+0xd000>  // b.lo, b.ul, b.last
   1af94:	add	x19, x8, x25
   1af98:	mov	x0, x19
   1af9c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1afa0:	mov	w23, w0
   1afa4:	mov	x0, x22
   1afa8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1afac:	cmp	w23, w0
   1afb0:	b.ne	1b000 <ZSTD_endStream@@Base+0xd0ac>  // b.any
   1afb4:	ldur	x8, [x29, #-32]
   1afb8:	ldur	x4, [x29, #-64]
   1afbc:	add	x0, x22, #0x4
   1afc0:	add	x1, x19, #0x4
   1afc4:	cmp	w25, w8
   1afc8:	ldr	x8, [sp, #104]
   1afcc:	mov	x2, x28
   1afd0:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   1afd4:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1afd8:	ldur	x3, [x29, #-88]
   1afdc:	mov	x19, x0
   1afe0:	ldr	x0, [x21, #24]
   1afe4:	add	x23, x19, #0x1
   1afe8:	cmp	x22, x3
   1afec:	mov	x1, x22
   1aff0:	b.ls	1b014 <ZSTD_endStream@@Base+0xd0c0>  // b.plast
   1aff4:	mov	x2, x22
   1aff8:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1affc:	b	1b018 <ZSTD_endStream@@Base+0xd0c4>
   1b000:	mov	w8, wzr
   1b004:	mov	w20, w26
   1b008:	ldur	x23, [x29, #-32]
   1b00c:	tbnz	w8, #0, 1af60 <ZSTD_endStream@@Base+0xd00c>
   1b010:	b	1aacc <ZSTD_endStream@@Base+0xcb78>
   1b014:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b018:	ldr	x8, [x21, #8]
   1b01c:	add	x19, x19, #0x4
   1b020:	cmp	x23, #0x10, lsl #12
   1b024:	mov	w9, #0x1                   	// #1
   1b028:	strh	wzr, [x8, #4]
   1b02c:	str	w9, [x8]
   1b030:	b.cc	1b048 <ZSTD_endStream@@Base+0xd0f4>  // b.lo, b.ul, b.last
   1b034:	ldp	x10, x9, [x21]
   1b038:	sub	x9, x9, x10
   1b03c:	lsr	x9, x9, #3
   1b040:	mov	w10, #0x2                   	// #2
   1b044:	stp	w10, w9, [x21, #72]
   1b048:	ldur	w1, [x29, #-76]
   1b04c:	strh	w23, [x8, #6]
   1b050:	add	x8, x8, #0x8
   1b054:	mov	w2, #0x4                   	// #4
   1b058:	mov	x0, x22
   1b05c:	str	x8, [x21, #8]
   1b060:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1b064:	ldur	x8, [x29, #-72]
   1b068:	add	x22, x22, x19
   1b06c:	str	w20, [x8, x0, lsl #2]
   1b070:	ldur	w20, [x29, #-44]
   1b074:	mov	w8, #0x1                   	// #1
   1b078:	stur	w26, [x29, #-44]
   1b07c:	ldur	x23, [x29, #-32]
   1b080:	tbnz	w8, #0, 1af60 <ZSTD_endStream@@Base+0xd00c>
   1b084:	b	1aacc <ZSTD_endStream@@Base+0xcb78>
   1b088:	ldp	x21, x3, [x29, #-96]
   1b08c:	b	1b098 <ZSTD_endStream@@Base+0xd144>
   1b090:	add	x28, x9, #0x1
   1b094:	ldur	x3, [x29, #-88]
   1b098:	ldr	x8, [sp, #96]
   1b09c:	ldr	x0, [x21, #24]
   1b0a0:	cmp	x28, x3
   1b0a4:	sub	x20, x28, x22
   1b0a8:	sub	w26, w8, w26
   1b0ac:	mov	x1, x22
   1b0b0:	b.ls	1b0c0 <ZSTD_endStream@@Base+0xd16c>  // b.plast
   1b0b4:	mov	x2, x28
   1b0b8:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1b0bc:	b	1b124 <ZSTD_endStream@@Base+0xd1d0>
   1b0c0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b0c4:	cmp	x20, #0x11
   1b0c8:	b.cc	1b124 <ZSTD_endStream@@Base+0xd1d0>  // b.lo, b.ul, b.last
   1b0cc:	ldr	x19, [x21, #24]
   1b0d0:	add	x1, x22, #0x10
   1b0d4:	add	x0, x19, #0x10
   1b0d8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b0dc:	add	x0, x19, #0x20
   1b0e0:	add	x1, x22, #0x20
   1b0e4:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b0e8:	cmp	x20, #0x31
   1b0ec:	b.lt	1b124 <ZSTD_endStream@@Base+0xd1d0>  // b.tstop
   1b0f0:	add	x25, x19, x20
   1b0f4:	add	x19, x19, #0x30
   1b0f8:	add	x23, x22, #0x40
   1b0fc:	sub	x1, x23, #0x10
   1b100:	mov	x0, x19
   1b104:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b108:	add	x0, x19, #0x10
   1b10c:	mov	x1, x23
   1b110:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b114:	add	x19, x19, #0x20
   1b118:	cmp	x19, x25
   1b11c:	add	x23, x23, #0x20
   1b120:	b.cc	1b0fc <ZSTD_endStream@@Base+0xd1a8>  // b.lo, b.ul, b.last
   1b124:	ldr	x10, [x21, #24]
   1b128:	ldr	w8, [sp, #80]
   1b12c:	sub	x9, x24, #0x3
   1b130:	cmp	x20, #0x10, lsl #12
   1b134:	add	x10, x10, x20
   1b138:	sub	w8, w26, w8
   1b13c:	str	x10, [x21, #24]
   1b140:	b.cc	1b158 <ZSTD_endStream@@Base+0xd204>  // b.lo, b.ul, b.last
   1b144:	ldp	x11, x10, [x21]
   1b148:	sub	x10, x10, x11
   1b14c:	lsr	x10, x10, #3
   1b150:	mov	w11, #0x1                   	// #1
   1b154:	stp	w11, w10, [x21, #72]
   1b158:	ldr	x10, [x21, #8]
   1b15c:	ldur	x23, [x29, #-32]
   1b160:	add	w11, w8, #0x3
   1b164:	cmp	x9, #0x10, lsl #12
   1b168:	strh	w20, [x10, #4]
   1b16c:	str	w11, [x10]
   1b170:	b.cc	1b188 <ZSTD_endStream@@Base+0xd234>  // b.lo, b.ul, b.last
   1b174:	ldp	x12, x11, [x21]
   1b178:	sub	x11, x11, x12
   1b17c:	lsr	x11, x11, #3
   1b180:	mov	w12, #0x2                   	// #2
   1b184:	stp	w12, w11, [x21, #72]
   1b188:	ldur	w20, [x29, #-44]
   1b18c:	strh	w9, [x10, #6]
   1b190:	add	x9, x10, #0x8
   1b194:	stur	w8, [x29, #-44]
   1b198:	mov	x25, x28
   1b19c:	mov	w8, #0x1                   	// #1
   1b1a0:	str	x9, [x21, #8]
   1b1a4:	tbz	w8, #0, 1aad0 <ZSTD_endStream@@Base+0xcb7c>
   1b1a8:	b	1aefc <ZSTD_endStream@@Base+0xcfa8>
   1b1ac:	ldr	x8, [sp, #56]
   1b1b0:	ldur	w9, [x29, #-44]
   1b1b4:	stp	w9, w20, [x8]
   1b1b8:	ldur	x8, [x29, #-56]
   1b1bc:	ldp	x20, x19, [sp, #288]
   1b1c0:	ldp	x24, x23, [sp, #256]
   1b1c4:	ldp	x26, x25, [sp, #240]
   1b1c8:	sub	x0, x8, x22
   1b1cc:	ldp	x22, x21, [sp, #272]
   1b1d0:	ldp	x28, x27, [sp, #224]
   1b1d4:	ldp	x29, x30, [sp, #208]
   1b1d8:	add	sp, sp, #0x130
   1b1dc:	ret
   1b1e0:	stp	x29, x30, [sp, #-16]!
   1b1e4:	ldr	w8, [x0, #200]
   1b1e8:	mov	x29, sp
   1b1ec:	sub	w9, w8, #0x5
   1b1f0:	cmp	w9, #0x3
   1b1f4:	mov	w9, #0x4                   	// #4
   1b1f8:	csel	w5, w8, w9, cc  // cc = lo, ul, last
   1b1fc:	bl	1b208 <ZSTD_endStream@@Base+0xd2b4>
   1b200:	ldp	x29, x30, [sp], #16
   1b204:	ret
   1b208:	sub	sp, sp, #0xf0
   1b20c:	stp	x29, x30, [sp, #144]
   1b210:	stp	x28, x27, [sp, #160]
   1b214:	stp	x26, x25, [sp, #176]
   1b218:	stp	x24, x23, [sp, #192]
   1b21c:	stp	x22, x21, [sp, #208]
   1b220:	stp	x20, x19, [sp, #224]
   1b224:	ldr	x8, [x0, #48]
   1b228:	add	x29, sp, #0x90
   1b22c:	stur	w5, [x29, #-20]
   1b230:	ldr	w9, [x0, #204]
   1b234:	stur	x8, [x29, #-32]
   1b238:	ldr	w8, [x0, #192]
   1b23c:	ldr	w20, [x0, #184]
   1b240:	add	x27, x3, x4
   1b244:	cmp	w9, #0x0
   1b248:	stur	w8, [x29, #-36]
   1b24c:	ldp	x28, x8, [x0, #8]
   1b250:	mov	x25, x2
   1b254:	mov	x22, x1
   1b258:	mov	w2, w20
   1b25c:	stur	x8, [x29, #-56]
   1b260:	cset	w8, eq  // eq = none
   1b264:	sub	w1, w27, w28
   1b268:	mov	x19, x4
   1b26c:	mov	x24, x3
   1b270:	mov	x21, x0
   1b274:	str	w8, [sp, #64]
   1b278:	stur	w9, [x29, #-68]
   1b27c:	cinc	w26, w9, eq  // eq = none
   1b280:	bl	1c1e0 <ZSTD_endStream@@Base+0xe28c>
   1b284:	ldr	w8, [x21, #24]
   1b288:	str	x25, [sp, #16]
   1b28c:	ldp	w23, w25, [x25]
   1b290:	sub	x12, x27, #0x8
   1b294:	cmp	w8, w0
   1b298:	csel	w9, w0, w8, cc  // cc = lo, ul, last
   1b29c:	cmp	w0, w8
   1b2a0:	stur	x9, [x29, #-16]
   1b2a4:	stur	w0, [x29, #-40]
   1b2a8:	stur	x27, [x29, #-64]
   1b2ac:	stur	x28, [x29, #-48]
   1b2b0:	b.cs	1b870 <ZSTD_endStream@@Base+0xd91c>  // b.hs, b.nlast
   1b2b4:	cmp	x12, x24
   1b2b8:	b.ls	1bd6c <ZSTD_endStream@@Base+0xde18>  // b.plast
   1b2bc:	ldur	x8, [x29, #-56]
   1b2c0:	ldur	w9, [x29, #-40]
   1b2c4:	ldur	x27, [x29, #-48]
   1b2c8:	mov	x28, x24
   1b2cc:	stur	x12, [x29, #-8]
   1b2d0:	add	x9, x8, w9, uxtw
   1b2d4:	str	x9, [sp]
   1b2d8:	ldur	x9, [x29, #-16]
   1b2dc:	add	x10, x27, x9
   1b2e0:	add	x8, x8, x9
   1b2e4:	stp	x8, x10, [sp, #48]
   1b2e8:	sub	w8, w9, #0x1
   1b2ec:	stur	w8, [x29, #-68]
   1b2f0:	ldur	x8, [x29, #-64]
   1b2f4:	sub	x8, x8, #0x20
   1b2f8:	str	x8, [sp, #40]
   1b2fc:	mov	w8, w26
   1b300:	str	x8, [sp, #24]
   1b304:	add	x8, x27, #0x2
   1b308:	str	x8, [sp, #8]
   1b30c:	b	1b330 <ZSTD_endStream@@Base+0xd3dc>
   1b310:	ldr	x9, [sp, #24]
   1b314:	ldur	x27, [x29, #-48]
   1b318:	sub	x8, x24, x28
   1b31c:	add	x8, x9, x8, asr #8
   1b320:	add	x24, x24, x8
   1b324:	ldur	x8, [x29, #-8]
   1b328:	cmp	x24, x8
   1b32c:	b.cs	1bd70 <ZSTD_endStream@@Base+0xde1c>  // b.hs, b.nlast
   1b330:	ldur	w1, [x29, #-36]
   1b334:	ldur	w2, [x29, #-20]
   1b338:	mov	x0, x24
   1b33c:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1b340:	ldur	x10, [x29, #-32]
   1b344:	mov	x11, x27
   1b348:	lsl	x9, x0, #2
   1b34c:	sub	x13, x24, x11
   1b350:	ldr	w27, [x10, x9]
   1b354:	sub	w8, w13, w23
   1b358:	ldur	x12, [x29, #-16]
   1b35c:	add	w19, w8, #0x1
   1b360:	ldur	x8, [x29, #-56]
   1b364:	str	x13, [sp, #64]
   1b368:	cmp	w27, w12
   1b36c:	str	w13, [x10, x9]
   1b370:	csel	x21, x8, x11, cc  // cc = lo, ul, last
   1b374:	cmp	w19, w12
   1b378:	csel	x8, x8, x11, cc  // cc = lo, ul, last
   1b37c:	ldur	w11, [x29, #-40]
   1b380:	cmp	w19, w11
   1b384:	b.ls	1b438 <ZSTD_endStream@@Base+0xd4e4>  // b.plast
   1b388:	ldur	w9, [x29, #-68]
   1b38c:	sub	w9, w9, w19
   1b390:	cmp	w9, #0x3
   1b394:	b.cc	1b438 <ZSTD_endStream@@Base+0xd4e4>  // b.lo, b.ul, b.last
   1b398:	add	x0, x8, x19
   1b39c:	str	x0, [sp, #32]
   1b3a0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b3a4:	add	x26, x24, #0x1
   1b3a8:	mov	w20, w23
   1b3ac:	mov	w23, w25
   1b3b0:	mov	x25, x28
   1b3b4:	mov	x28, x22
   1b3b8:	mov	x22, x27
   1b3bc:	mov	x27, x21
   1b3c0:	mov	w21, w0
   1b3c4:	mov	x0, x26
   1b3c8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b3cc:	cmp	w21, w0
   1b3d0:	mov	x21, x27
   1b3d4:	mov	x27, x22
   1b3d8:	mov	x22, x28
   1b3dc:	mov	x28, x25
   1b3e0:	mov	w25, w23
   1b3e4:	mov	w23, w20
   1b3e8:	b.ne	1b438 <ZSTD_endStream@@Base+0xd4e4>  // b.any
   1b3ec:	ldur	x8, [x29, #-16]
   1b3f0:	ldur	x2, [x29, #-64]
   1b3f4:	add	x0, x24, #0x5
   1b3f8:	cmp	w19, w8
   1b3fc:	ldp	x8, x4, [sp, #48]
   1b400:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1b404:	ldr	x8, [sp, #32]
   1b408:	add	x1, x8, #0x4
   1b40c:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1b410:	ldr	x3, [sp, #40]
   1b414:	mov	x24, x0
   1b418:	ldr	x0, [x22, #24]
   1b41c:	sub	x27, x26, x28
   1b420:	cmp	x26, x3
   1b424:	b.ls	1b4e8 <ZSTD_endStream@@Base+0xd594>  // b.plast
   1b428:	mov	x1, x28
   1b42c:	mov	x2, x26
   1b430:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1b434:	b	1b550 <ZSTD_endStream@@Base+0xd5fc>
   1b438:	ldur	w8, [x29, #-40]
   1b43c:	cmp	w27, w8
   1b440:	b.cc	1b310 <ZSTD_endStream@@Base+0xd3bc>  // b.lo, b.ul, b.last
   1b444:	add	x19, x21, x27
   1b448:	mov	x0, x19
   1b44c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b450:	mov	w20, w0
   1b454:	mov	x0, x24
   1b458:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b45c:	cmp	w20, w0
   1b460:	b.ne	1b310 <ZSTD_endStream@@Base+0xd3bc>  // b.any
   1b464:	ldur	x8, [x29, #-16]
   1b468:	ldur	x2, [x29, #-64]
   1b46c:	add	x0, x24, #0x4
   1b470:	add	x1, x19, #0x4
   1b474:	cmp	w27, w8
   1b478:	ldp	x8, x4, [sp, #48]
   1b47c:	mov	x25, x21
   1b480:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1b484:	ldr	x8, [sp]
   1b488:	csel	x20, x8, x4, cc  // cc = lo, ul, last
   1b48c:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1b490:	cmp	x19, x20
   1b494:	add	x21, x0, #0x4
   1b498:	b.ls	1b5c8 <ZSTD_endStream@@Base+0xd674>  // b.plast
   1b49c:	cmp	x24, x28
   1b4a0:	b.ls	1b5c8 <ZSTD_endStream@@Base+0xd674>  // b.plast
   1b4a4:	add	x9, x25, x27
   1b4a8:	sub	x8, x24, #0x1
   1b4ac:	sub	x9, x9, #0x1
   1b4b0:	ldrb	w10, [x8]
   1b4b4:	ldrb	w11, [x9]
   1b4b8:	cmp	w10, w11
   1b4bc:	b.ne	1b5c4 <ZSTD_endStream@@Base+0xd670>  // b.any
   1b4c0:	add	x21, x21, #0x1
   1b4c4:	cmp	x9, x20
   1b4c8:	sub	x10, x8, #0x1
   1b4cc:	b.ls	1b4e0 <ZSTD_endStream@@Base+0xd58c>  // b.plast
   1b4d0:	cmp	x8, x28
   1b4d4:	sub	x9, x9, #0x1
   1b4d8:	mov	x8, x10
   1b4dc:	b.hi	1b4b0 <ZSTD_endStream@@Base+0xd55c>  // b.pmore
   1b4e0:	add	x24, x10, #0x1
   1b4e4:	b	1b5c8 <ZSTD_endStream@@Base+0xd674>
   1b4e8:	mov	x1, x28
   1b4ec:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b4f0:	cmp	x27, #0x11
   1b4f4:	b.cc	1b550 <ZSTD_endStream@@Base+0xd5fc>  // b.lo, b.ul, b.last
   1b4f8:	ldr	x20, [x22, #24]
   1b4fc:	add	x1, x28, #0x10
   1b500:	add	x0, x20, #0x10
   1b504:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b508:	add	x0, x20, #0x20
   1b50c:	add	x1, x28, #0x20
   1b510:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b514:	cmp	x27, #0x31
   1b518:	b.lt	1b550 <ZSTD_endStream@@Base+0xd5fc>  // b.tstop
   1b51c:	add	x19, x20, x27
   1b520:	add	x20, x20, #0x30
   1b524:	add	x21, x28, #0x40
   1b528:	sub	x1, x21, #0x10
   1b52c:	mov	x0, x20
   1b530:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b534:	add	x0, x20, #0x10
   1b538:	mov	x1, x21
   1b53c:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b540:	add	x20, x20, #0x20
   1b544:	cmp	x20, x19
   1b548:	add	x21, x21, #0x20
   1b54c:	b.cc	1b528 <ZSTD_endStream@@Base+0xd5d4>  // b.lo, b.ul, b.last
   1b550:	ldr	x9, [x22, #24]
   1b554:	add	x8, x24, #0x1
   1b558:	cmp	x27, #0x10, lsl #12
   1b55c:	add	x9, x9, x27
   1b560:	str	x9, [x22, #24]
   1b564:	b.cc	1b57c <ZSTD_endStream@@Base+0xd628>  // b.lo, b.ul, b.last
   1b568:	ldp	x10, x9, [x22]
   1b56c:	sub	x9, x9, x10
   1b570:	lsr	x9, x9, #3
   1b574:	mov	w10, #0x1                   	// #1
   1b578:	stp	w10, w9, [x22, #72]
   1b57c:	ldr	x10, [x22, #8]
   1b580:	add	x9, x24, #0x4
   1b584:	cmp	x8, #0x10, lsl #12
   1b588:	mov	w11, #0x1                   	// #1
   1b58c:	strh	w27, [x10, #4]
   1b590:	str	w11, [x10]
   1b594:	b.cc	1b5ac <ZSTD_endStream@@Base+0xd658>  // b.lo, b.ul, b.last
   1b598:	ldp	x12, x11, [x22]
   1b59c:	sub	x11, x11, x12
   1b5a0:	lsr	x11, x11, #3
   1b5a4:	mov	w12, #0x2                   	// #2
   1b5a8:	stp	w12, w11, [x22, #72]
   1b5ac:	ldur	x27, [x29, #-48]
   1b5b0:	strh	w8, [x10, #6]
   1b5b4:	add	x8, x10, #0x8
   1b5b8:	str	x8, [x22, #8]
   1b5bc:	add	x28, x26, x9
   1b5c0:	b	1b6d0 <ZSTD_endStream@@Base+0xd77c>
   1b5c4:	add	x24, x8, #0x1
   1b5c8:	ldr	x3, [sp, #40]
   1b5cc:	ldr	x0, [x22, #24]
   1b5d0:	sub	x25, x24, x28
   1b5d4:	cmp	x24, x3
   1b5d8:	b.ls	1b5ec <ZSTD_endStream@@Base+0xd698>  // b.plast
   1b5dc:	mov	x1, x28
   1b5e0:	mov	x2, x24
   1b5e4:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1b5e8:	b	1b654 <ZSTD_endStream@@Base+0xd700>
   1b5ec:	mov	x1, x28
   1b5f0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b5f4:	cmp	x25, #0x11
   1b5f8:	b.cc	1b654 <ZSTD_endStream@@Base+0xd700>  // b.lo, b.ul, b.last
   1b5fc:	ldr	x19, [x22, #24]
   1b600:	add	x1, x28, #0x10
   1b604:	add	x0, x19, #0x10
   1b608:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b60c:	add	x0, x19, #0x20
   1b610:	add	x1, x28, #0x20
   1b614:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b618:	cmp	x25, #0x31
   1b61c:	b.lt	1b654 <ZSTD_endStream@@Base+0xd700>  // b.tstop
   1b620:	add	x26, x19, x25
   1b624:	add	x19, x19, #0x30
   1b628:	add	x20, x28, #0x40
   1b62c:	sub	x1, x20, #0x10
   1b630:	mov	x0, x19
   1b634:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b638:	add	x0, x19, #0x10
   1b63c:	mov	x1, x20
   1b640:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b644:	add	x19, x19, #0x20
   1b648:	cmp	x19, x26
   1b64c:	add	x20, x20, #0x20
   1b650:	b.cc	1b62c <ZSTD_endStream@@Base+0xd6d8>  // b.lo, b.ul, b.last
   1b654:	ldr	x10, [x22, #24]
   1b658:	ldr	x8, [sp, #64]
   1b65c:	sub	x9, x21, #0x3
   1b660:	cmp	x25, #0x10, lsl #12
   1b664:	add	x10, x10, x25
   1b668:	sub	w8, w8, w27
   1b66c:	str	x10, [x22, #24]
   1b670:	b.cc	1b688 <ZSTD_endStream@@Base+0xd734>  // b.lo, b.ul, b.last
   1b674:	ldp	x11, x10, [x22]
   1b678:	sub	x10, x10, x11
   1b67c:	lsr	x10, x10, #3
   1b680:	mov	w11, #0x1                   	// #1
   1b684:	stp	w11, w10, [x22, #72]
   1b688:	ldr	x10, [x22, #8]
   1b68c:	ldur	x27, [x29, #-48]
   1b690:	add	w11, w8, #0x3
   1b694:	cmp	x9, #0x10, lsl #12
   1b698:	strh	w25, [x10, #4]
   1b69c:	str	w11, [x10]
   1b6a0:	b.cc	1b6b8 <ZSTD_endStream@@Base+0xd764>  // b.lo, b.ul, b.last
   1b6a4:	ldp	x12, x11, [x22]
   1b6a8:	sub	x11, x11, x12
   1b6ac:	lsr	x11, x11, #3
   1b6b0:	mov	w12, #0x2                   	// #2
   1b6b4:	stp	w12, w11, [x22, #72]
   1b6b8:	strh	w9, [x10, #6]
   1b6bc:	add	x9, x10, #0x8
   1b6c0:	add	x28, x24, x21
   1b6c4:	mov	w25, w23
   1b6c8:	mov	w23, w8
   1b6cc:	str	x9, [x22, #8]
   1b6d0:	ldur	x8, [x29, #-8]
   1b6d4:	cmp	x28, x8
   1b6d8:	b.ls	1b6e4 <ZSTD_endStream@@Base+0xd790>  // b.plast
   1b6dc:	mov	x24, x28
   1b6e0:	b	1b324 <ZSTD_endStream@@Base+0xd3d0>
   1b6e4:	ldr	x9, [sp, #64]
   1b6e8:	ldr	x8, [sp, #8]
   1b6ec:	ldur	w24, [x29, #-36]
   1b6f0:	ldur	w20, [x29, #-20]
   1b6f4:	add	w19, w9, #0x2
   1b6f8:	add	x0, x8, w9, uxtw
   1b6fc:	mov	w1, w24
   1b700:	mov	w2, w20
   1b704:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1b708:	ldur	x21, [x29, #-32]
   1b70c:	mov	w1, w24
   1b710:	mov	w2, w20
   1b714:	str	w19, [x21, x0, lsl #2]
   1b718:	sub	x0, x28, #0x2
   1b71c:	sub	w19, w0, w27
   1b720:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1b724:	str	w19, [x21, x0, lsl #2]
   1b728:	mov	w21, w25
   1b72c:	mov	x24, x28
   1b730:	b	1b74c <ZSTD_endStream@@Base+0xd7f8>
   1b734:	mov	w8, wzr
   1b738:	mov	w25, w21
   1b73c:	mov	w21, w23
   1b740:	mov	w23, w21
   1b744:	mov	w21, w25
   1b748:	tbz	w8, #0, 1b324 <ZSTD_endStream@@Base+0xd3d0>
   1b74c:	ldur	x8, [x29, #-8]
   1b750:	cmp	x24, x8
   1b754:	b.hi	1b868 <ZSTD_endStream@@Base+0xd914>  // b.pmore
   1b758:	ldur	x8, [x29, #-16]
   1b75c:	sub	w25, w24, w27
   1b760:	sub	w26, w25, w21
   1b764:	cmp	w26, w8
   1b768:	ldur	x8, [x29, #-56]
   1b76c:	csel	x9, x8, x27, cc  // cc = lo, ul, last
   1b770:	ldur	w8, [x29, #-40]
   1b774:	cmp	w26, w8
   1b778:	mov	w8, wzr
   1b77c:	b.ls	1b738 <ZSTD_endStream@@Base+0xd7e4>  // b.plast
   1b780:	ldur	w10, [x29, #-68]
   1b784:	sub	w10, w10, w26
   1b788:	cmp	w10, #0x3
   1b78c:	b.cc	1b738 <ZSTD_endStream@@Base+0xd7e4>  // b.lo, b.ul, b.last
   1b790:	add	x19, x9, x26
   1b794:	mov	x0, x19
   1b798:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b79c:	mov	w20, w0
   1b7a0:	mov	x0, x24
   1b7a4:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b7a8:	cmp	w20, w0
   1b7ac:	b.ne	1b734 <ZSTD_endStream@@Base+0xd7e0>  // b.any
   1b7b0:	ldur	x8, [x29, #-16]
   1b7b4:	ldur	x2, [x29, #-64]
   1b7b8:	add	x0, x24, #0x4
   1b7bc:	add	x1, x19, #0x4
   1b7c0:	cmp	w26, w8
   1b7c4:	ldp	x8, x4, [sp, #48]
   1b7c8:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1b7cc:	bl	1c168 <ZSTD_endStream@@Base+0xe214>
   1b7d0:	ldr	x3, [sp, #40]
   1b7d4:	mov	x19, x0
   1b7d8:	ldr	x0, [x22, #24]
   1b7dc:	add	x20, x19, #0x1
   1b7e0:	cmp	x28, x3
   1b7e4:	b.ls	1b7f8 <ZSTD_endStream@@Base+0xd8a4>  // b.plast
   1b7e8:	mov	x1, x28
   1b7ec:	mov	x2, x28
   1b7f0:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1b7f4:	b	1b800 <ZSTD_endStream@@Base+0xd8ac>
   1b7f8:	mov	x1, x28
   1b7fc:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1b800:	ldr	x8, [x22, #8]
   1b804:	add	x19, x19, #0x4
   1b808:	cmp	x20, #0x10, lsl #12
   1b80c:	mov	w9, #0x1                   	// #1
   1b810:	strh	wzr, [x8, #4]
   1b814:	str	w9, [x8]
   1b818:	b.cc	1b830 <ZSTD_endStream@@Base+0xd8dc>  // b.lo, b.ul, b.last
   1b81c:	ldp	x10, x9, [x22]
   1b820:	sub	x9, x9, x10
   1b824:	lsr	x9, x9, #3
   1b828:	mov	w10, #0x2                   	// #2
   1b82c:	stp	w10, w9, [x22, #72]
   1b830:	ldur	w1, [x29, #-36]
   1b834:	ldur	w2, [x29, #-20]
   1b838:	strh	w20, [x8, #6]
   1b83c:	add	x8, x8, #0x8
   1b840:	mov	x0, x24
   1b844:	str	x8, [x22, #8]
   1b848:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1b84c:	ldur	x8, [x29, #-32]
   1b850:	add	x28, x24, x19
   1b854:	mov	x24, x28
   1b858:	str	w25, [x8, x0, lsl #2]
   1b85c:	mov	w8, #0x1                   	// #1
   1b860:	mov	w25, w23
   1b864:	b	1b740 <ZSTD_endStream@@Base+0xd7ec>
   1b868:	mov	w25, w21
   1b86c:	b	1b324 <ZSTD_endStream@@Base+0xd3d0>
   1b870:	add	w9, w24, w19
   1b874:	mov	w10, #0x1                   	// #1
   1b878:	sub	w9, w9, w28
   1b87c:	lsl	w10, w10, w20
   1b880:	sub	w11, w9, w8
   1b884:	sub	w9, w9, w10
   1b888:	cmp	w11, w10
   1b88c:	csel	w10, w9, w8, hi  // hi = pmore
   1b890:	add	x11, x28, x10
   1b894:	cmp	x11, x24
   1b898:	cinc	x26, x24, eq  // eq = none
   1b89c:	sub	w8, w26, w11
   1b8a0:	cmp	w25, w8
   1b8a4:	add	x27, x26, #0x1
   1b8a8:	csel	w9, w25, wzr, hi  // hi = pmore
   1b8ac:	csel	w13, wzr, w25, hi  // hi = pmore
   1b8b0:	cmp	w23, w8
   1b8b4:	csel	w8, w23, w9, hi  // hi = pmore
   1b8b8:	csel	w25, wzr, w23, hi  // hi = pmore
   1b8bc:	cmp	x27, x12
   1b8c0:	stur	w13, [x29, #-40]
   1b8c4:	str	w8, [sp, #24]
   1b8c8:	b.cs	1bd44 <ZSTD_endStream@@Base+0xddf0>  // b.hs, b.nlast
   1b8cc:	ldur	w8, [x29, #-68]
   1b8d0:	ldr	w9, [sp, #64]
   1b8d4:	str	x11, [sp, #32]
   1b8d8:	str	x10, [sp, #56]
   1b8dc:	stur	x12, [x29, #-8]
   1b8e0:	add	w8, w8, w9
   1b8e4:	ldur	x9, [x29, #-64]
   1b8e8:	add	w8, w8, #0x1
   1b8ec:	sub	x9, x9, #0x20
   1b8f0:	stur	x9, [x29, #-16]
   1b8f4:	add	x9, x28, #0x2
   1b8f8:	stp	x8, x9, [sp, #40]
   1b8fc:	b	1b920 <ZSTD_endStream@@Base+0xd9cc>
   1b900:	ldr	x9, [sp, #40]
   1b904:	ldur	x28, [x29, #-8]
   1b908:	sub	x8, x26, x24
   1b90c:	add	x8, x9, x8, lsr #7
   1b910:	add	x26, x26, x8
   1b914:	add	x27, x27, x8
   1b918:	cmp	x27, x28
   1b91c:	b.cs	1bd44 <ZSTD_endStream@@Base+0xddf0>  // b.hs, b.nlast
   1b920:	ldur	w23, [x29, #-36]
   1b924:	ldur	w20, [x29, #-20]
   1b928:	mov	x0, x26
   1b92c:	add	x19, x26, #0x2
   1b930:	mov	w1, w23
   1b934:	mov	w2, w20
   1b938:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1b93c:	mov	x21, x0
   1b940:	mov	x0, x26
   1b944:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b948:	stur	w0, [x29, #-68]
   1b94c:	mov	x0, x27
   1b950:	mov	w1, w23
   1b954:	mov	w2, w20
   1b958:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1b95c:	mov	x23, x0
   1b960:	mov	x0, x27
   1b964:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b968:	ldur	x11, [x29, #-32]
   1b96c:	ldur	x8, [x29, #-48]
   1b970:	lsl	x9, x21, #2
   1b974:	lsl	x10, x23, #2
   1b978:	ldr	w20, [x11, x9]
   1b97c:	ldr	w28, [x11, x10]
   1b980:	sub	x21, x19, w25, uxtw
   1b984:	str	w0, [sp, #64]
   1b988:	sub	x12, x26, x8
   1b98c:	sub	w8, w27, w8
   1b990:	mov	x0, x21
   1b994:	stur	x12, [x29, #-56]
   1b998:	str	w12, [x11, x9]
   1b99c:	str	w8, [x11, x10]
   1b9a0:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b9a4:	mov	w23, w0
   1b9a8:	mov	x0, x19
   1b9ac:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b9b0:	cbz	w25, 1b9e0 <ZSTD_endStream@@Base+0xda8c>
   1b9b4:	cmp	w23, w0
   1b9b8:	b.ne	1b9e0 <ZSTD_endStream@@Base+0xda8c>  // b.any
   1b9bc:	ldrb	w8, [x26, #1]
   1b9c0:	ldurb	w9, [x21, #-1]
   1b9c4:	mov	w23, wzr
   1b9c8:	cmp	w8, w9
   1b9cc:	cset	w20, eq  // eq = none
   1b9d0:	sub	x26, x19, x20
   1b9d4:	sub	x19, x21, x20
   1b9d8:	mov	w21, w25
   1b9dc:	b	1baa8 <ZSTD_endStream@@Base+0xdb54>
   1b9e0:	ldr	x21, [sp, #56]
   1b9e4:	cmp	w20, w21
   1b9e8:	b.ls	1ba08 <ZSTD_endStream@@Base+0xdab4>  // b.plast
   1b9ec:	ldur	x8, [x29, #-48]
   1b9f0:	add	x19, x8, x20
   1b9f4:	mov	x0, x19
   1b9f8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1b9fc:	ldur	w8, [x29, #-68]
   1ba00:	cmp	w0, w8
   1ba04:	b.eq	1ba30 <ZSTD_endStream@@Base+0xdadc>  // b.none
   1ba08:	cmp	w28, w21
   1ba0c:	b.ls	1b900 <ZSTD_endStream@@Base+0xd9ac>  // b.plast
   1ba10:	ldur	x8, [x29, #-48]
   1ba14:	add	x19, x8, x28
   1ba18:	mov	x0, x19
   1ba1c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1ba20:	ldr	w8, [sp, #64]
   1ba24:	cmp	w0, w8
   1ba28:	b.ne	1b900 <ZSTD_endStream@@Base+0xd9ac>  // b.any
   1ba2c:	mov	x26, x27
   1ba30:	ldr	x12, [sp, #32]
   1ba34:	sub	w21, w26, w19
   1ba38:	mov	x20, xzr
   1ba3c:	add	w23, w21, #0x2
   1ba40:	cmp	x19, x12
   1ba44:	b.ls	1baa4 <ZSTD_endStream@@Base+0xdb50>  // b.plast
   1ba48:	cmp	x26, x24
   1ba4c:	b.ls	1baa4 <ZSTD_endStream@@Base+0xdb50>  // b.plast
   1ba50:	mov	x20, xzr
   1ba54:	sub	x9, x26, #0x1
   1ba58:	sub	x8, x19, #0x1
   1ba5c:	ldrb	w10, [x9]
   1ba60:	ldrb	w11, [x8]
   1ba64:	cmp	w10, w11
   1ba68:	b.ne	1ba9c <ZSTD_endStream@@Base+0xdb48>  // b.any
   1ba6c:	add	x20, x20, #0x1
   1ba70:	sub	x10, x9, #0x1
   1ba74:	cmp	x9, x24
   1ba78:	sub	x11, x8, #0x1
   1ba7c:	b.ls	1ba90 <ZSTD_endStream@@Base+0xdb3c>  // b.plast
   1ba80:	cmp	x8, x12
   1ba84:	mov	x8, x11
   1ba88:	mov	x9, x10
   1ba8c:	b.hi	1ba5c <ZSTD_endStream@@Base+0xdb08>  // b.pmore
   1ba90:	add	x26, x10, #0x1
   1ba94:	add	x19, x11, #0x1
   1ba98:	b	1baa4 <ZSTD_endStream@@Base+0xdb50>
   1ba9c:	add	x26, x9, #0x1
   1baa0:	add	x19, x8, #0x1
   1baa4:	stur	w25, [x29, #-40]
   1baa8:	ldur	x2, [x29, #-64]
   1baac:	add	x8, x26, x20
   1bab0:	add	x9, x19, x20
   1bab4:	add	x0, x8, #0x4
   1bab8:	add	x1, x9, #0x4
   1babc:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1bac0:	ldur	x3, [x29, #-16]
   1bac4:	mov	x8, x0
   1bac8:	ldr	x0, [x22, #24]
   1bacc:	add	x27, x20, x8
   1bad0:	cmp	x26, x3
   1bad4:	sub	x25, x26, x24
   1bad8:	b.ls	1baec <ZSTD_endStream@@Base+0xdb98>  // b.plast
   1badc:	mov	x1, x24
   1bae0:	mov	x2, x26
   1bae4:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1bae8:	b	1bb54 <ZSTD_endStream@@Base+0xdc00>
   1baec:	mov	x1, x24
   1baf0:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1baf4:	cmp	x25, #0x11
   1baf8:	b.cc	1bb54 <ZSTD_endStream@@Base+0xdc00>  // b.lo, b.ul, b.last
   1bafc:	ldr	x19, [x22, #24]
   1bb00:	add	x1, x24, #0x10
   1bb04:	add	x0, x19, #0x10
   1bb08:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1bb0c:	add	x0, x19, #0x20
   1bb10:	add	x1, x24, #0x20
   1bb14:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1bb18:	cmp	x25, #0x31
   1bb1c:	b.lt	1bb54 <ZSTD_endStream@@Base+0xdc00>  // b.tstop
   1bb20:	add	x28, x19, x25
   1bb24:	add	x19, x19, #0x30
   1bb28:	add	x20, x24, #0x40
   1bb2c:	sub	x1, x20, #0x10
   1bb30:	mov	x0, x19
   1bb34:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1bb38:	add	x0, x19, #0x10
   1bb3c:	mov	x1, x20
   1bb40:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1bb44:	add	x19, x19, #0x20
   1bb48:	cmp	x19, x28
   1bb4c:	add	x20, x20, #0x20
   1bb50:	b.cc	1bb2c <ZSTD_endStream@@Base+0xdbd8>  // b.lo, b.ul, b.last
   1bb54:	ldr	x9, [x22, #24]
   1bb58:	add	x8, x27, #0x1
   1bb5c:	cmp	x25, #0x10, lsl #12
   1bb60:	add	x9, x9, x25
   1bb64:	str	x9, [x22, #24]
   1bb68:	b.cc	1bb80 <ZSTD_endStream@@Base+0xdc2c>  // b.lo, b.ul, b.last
   1bb6c:	ldp	x10, x9, [x22]
   1bb70:	sub	x9, x9, x10
   1bb74:	lsr	x9, x9, #3
   1bb78:	mov	w10, #0x1                   	// #1
   1bb7c:	stp	w10, w9, [x22, #72]
   1bb80:	ldr	x10, [x22, #8]
   1bb84:	ldur	x28, [x29, #-8]
   1bb88:	add	x9, x27, #0x4
   1bb8c:	add	w11, w23, #0x1
   1bb90:	cmp	x8, #0x10, lsl #12
   1bb94:	strh	w25, [x10, #4]
   1bb98:	str	w11, [x10]
   1bb9c:	b.cc	1bbb4 <ZSTD_endStream@@Base+0xdc60>  // b.lo, b.ul, b.last
   1bba0:	ldp	x12, x11, [x22]
   1bba4:	sub	x11, x11, x12
   1bba8:	lsr	x11, x11, #3
   1bbac:	mov	w12, #0x2                   	// #2
   1bbb0:	stp	w12, w11, [x22, #72]
   1bbb4:	add	x24, x26, x9
   1bbb8:	strh	w8, [x10, #6]
   1bbbc:	add	x8, x10, #0x8
   1bbc0:	cmp	x24, x28
   1bbc4:	add	x27, x24, #0x1
   1bbc8:	str	x8, [x22, #8]
   1bbcc:	b.hi	1bd38 <ZSTD_endStream@@Base+0xdde4>  // b.pmore
   1bbd0:	ldur	x9, [x29, #-56]
   1bbd4:	ldr	x8, [sp, #48]
   1bbd8:	ldur	w25, [x29, #-36]
   1bbdc:	ldur	w20, [x29, #-20]
   1bbe0:	add	w19, w9, #0x2
   1bbe4:	add	x0, x8, w9, uxtw
   1bbe8:	mov	w1, w25
   1bbec:	mov	w2, w20
   1bbf0:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1bbf4:	ldur	x23, [x29, #-32]
   1bbf8:	ldur	x8, [x29, #-48]
   1bbfc:	mov	w1, w25
   1bc00:	mov	w2, w20
   1bc04:	str	w19, [x23, x0, lsl #2]
   1bc08:	sub	x0, x24, #0x2
   1bc0c:	sub	w19, w0, w8
   1bc10:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1bc14:	str	w19, [x23, x0, lsl #2]
   1bc18:	ldur	w23, [x29, #-40]
   1bc1c:	cbz	w23, 1bd38 <ZSTD_endStream@@Base+0xdde4>
   1bc20:	mov	x0, x24
   1bc24:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1bc28:	mov	w20, w23
   1bc2c:	mov	w19, w0
   1bc30:	sub	x0, x24, x20
   1bc34:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1bc38:	cmp	w19, w0
   1bc3c:	b.ne	1bd38 <ZSTD_endStream@@Base+0xdde4>  // b.any
   1bc40:	neg	x20, x20
   1bc44:	mov	w0, w23
   1bc48:	mov	w25, w21
   1bc4c:	mov	w23, #0x1                   	// #1
   1bc50:	ldur	x2, [x29, #-64]
   1bc54:	mov	w26, w25
   1bc58:	mov	w25, w0
   1bc5c:	add	x0, x24, #0x4
   1bc60:	add	x1, x0, x20
   1bc64:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1bc68:	ldur	x8, [x29, #-48]
   1bc6c:	ldur	w1, [x29, #-36]
   1bc70:	ldur	w2, [x29, #-20]
   1bc74:	mov	x19, x0
   1bc78:	add	x20, x0, x24
   1bc7c:	mov	x0, x24
   1bc80:	sub	w21, w24, w8
   1bc84:	bl	17d0c <ZSTD_endStream@@Base+0x9db8>
   1bc88:	ldur	x8, [x29, #-32]
   1bc8c:	ldur	x3, [x29, #-16]
   1bc90:	add	x19, x19, #0x1
   1bc94:	str	w21, [x8, x0, lsl #2]
   1bc98:	ldr	x0, [x22, #24]
   1bc9c:	cmp	x24, x3
   1bca0:	b.ls	1bcb4 <ZSTD_endStream@@Base+0xdd60>  // b.plast
   1bca4:	mov	x1, x24
   1bca8:	mov	x2, x24
   1bcac:	bl	1c0b0 <ZSTD_endStream@@Base+0xe15c>
   1bcb0:	b	1bcbc <ZSTD_endStream@@Base+0xdd68>
   1bcb4:	mov	x1, x24
   1bcb8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1bcbc:	ldr	x8, [x22, #8]
   1bcc0:	add	x24, x20, #0x4
   1bcc4:	add	x27, x20, #0x5
   1bcc8:	cmp	x19, #0x10, lsl #12
   1bccc:	strh	wzr, [x8, #4]
   1bcd0:	str	w23, [x8]
   1bcd4:	b.cc	1bcec <ZSTD_endStream@@Base+0xdd98>  // b.lo, b.ul, b.last
   1bcd8:	ldp	x10, x9, [x22]
   1bcdc:	sub	x9, x9, x10
   1bce0:	lsr	x9, x9, #3
   1bce4:	mov	w10, #0x2                   	// #2
   1bce8:	stp	w10, w9, [x22, #72]
   1bcec:	strh	w19, [x8, #6]
   1bcf0:	add	x8, x8, #0x8
   1bcf4:	str	x8, [x22, #8]
   1bcf8:	stur	w26, [x29, #-40]
   1bcfc:	cbz	w26, 1bd3c <ZSTD_endStream@@Base+0xdde8>
   1bd00:	cmp	x24, x28
   1bd04:	b.hi	1bd3c <ZSTD_endStream@@Base+0xdde8>  // b.pmore
   1bd08:	mov	x0, x24
   1bd0c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1bd10:	mov	w8, w26
   1bd14:	mov	w19, w0
   1bd18:	sub	x0, x24, x8
   1bd1c:	neg	x20, x8
   1bd20:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1bd24:	cmp	w19, w0
   1bd28:	mov	w0, w26
   1bd2c:	mov	x26, x24
   1bd30:	b.eq	1bc50 <ZSTD_endStream@@Base+0xdcfc>  // b.none
   1bd34:	b	1b918 <ZSTD_endStream@@Base+0xd9c4>
   1bd38:	mov	w25, w21
   1bd3c:	mov	x26, x24
   1bd40:	b	1b918 <ZSTD_endStream@@Base+0xd9c4>
   1bd44:	ldr	w10, [sp, #24]
   1bd48:	ldur	w11, [x29, #-40]
   1bd4c:	ldr	x9, [sp, #16]
   1bd50:	cmp	w25, #0x0
   1bd54:	csel	w8, w10, w25, eq  // eq = none
   1bd58:	cmp	w11, #0x0
   1bd5c:	str	w8, [x9]
   1bd60:	mov	x8, x9
   1bd64:	csel	w25, w10, w11, eq  // eq = none
   1bd68:	b	1bd7c <ZSTD_endStream@@Base+0xde28>
   1bd6c:	mov	x28, x24
   1bd70:	ldr	x8, [sp, #16]
   1bd74:	mov	x24, x28
   1bd78:	str	w23, [x8]
   1bd7c:	ldur	x9, [x29, #-64]
   1bd80:	str	w25, [x8, #4]
   1bd84:	ldp	x20, x19, [sp, #224]
   1bd88:	ldp	x22, x21, [sp, #208]
   1bd8c:	sub	x0, x9, x24
   1bd90:	ldp	x24, x23, [sp, #192]
   1bd94:	ldp	x26, x25, [sp, #176]
   1bd98:	ldp	x28, x27, [sp, #160]
   1bd9c:	ldp	x29, x30, [sp, #144]
   1bda0:	add	sp, sp, #0xf0
   1bda4:	ret
   1bda8:	stp	x29, x30, [sp, #-32]!
   1bdac:	str	x19, [sp, #16]
   1bdb0:	mov	x29, sp
   1bdb4:	mov	w19, w1
   1bdb8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1bdbc:	mov	w1, w19
   1bdc0:	bl	1be74 <ZSTD_endStream@@Base+0xdf20>
   1bdc4:	ldr	x19, [sp, #16]
   1bdc8:	mov	w0, w0
   1bdcc:	ldp	x29, x30, [sp], #32
   1bdd0:	ret
   1bdd4:	stp	x29, x30, [sp, #-32]!
   1bdd8:	str	x19, [sp, #16]
   1bddc:	mov	x29, sp
   1bde0:	mov	w19, w1
   1bde4:	bl	1beb0 <ZSTD_endStream@@Base+0xdf5c>
   1bde8:	mov	w1, w19
   1bdec:	bl	1be94 <ZSTD_endStream@@Base+0xdf40>
   1bdf0:	ldr	x19, [sp, #16]
   1bdf4:	ldp	x29, x30, [sp], #32
   1bdf8:	ret
   1bdfc:	stp	x29, x30, [sp, #-32]!
   1be00:	str	x19, [sp, #16]
   1be04:	mov	x29, sp
   1be08:	mov	w19, w1
   1be0c:	bl	1beb0 <ZSTD_endStream@@Base+0xdf5c>
   1be10:	mov	w1, w19
   1be14:	bl	1becc <ZSTD_endStream@@Base+0xdf78>
   1be18:	ldr	x19, [sp, #16]
   1be1c:	ldp	x29, x30, [sp], #32
   1be20:	ret
   1be24:	stp	x29, x30, [sp, #-32]!
   1be28:	str	x19, [sp, #16]
   1be2c:	mov	x29, sp
   1be30:	mov	w19, w1
   1be34:	bl	1beb0 <ZSTD_endStream@@Base+0xdf5c>
   1be38:	mov	w1, w19
   1be3c:	bl	1bee8 <ZSTD_endStream@@Base+0xdf94>
   1be40:	ldr	x19, [sp, #16]
   1be44:	ldp	x29, x30, [sp], #32
   1be48:	ret
   1be4c:	stp	x29, x30, [sp, #-32]!
   1be50:	str	x19, [sp, #16]
   1be54:	mov	x29, sp
   1be58:	mov	w19, w1
   1be5c:	bl	1beb0 <ZSTD_endStream@@Base+0xdf5c>
   1be60:	mov	w1, w19
   1be64:	bl	1bf08 <ZSTD_endStream@@Base+0xdfb4>
   1be68:	ldr	x19, [sp, #16]
   1be6c:	ldp	x29, x30, [sp], #32
   1be70:	ret
   1be74:	mov	w8, #0x79b1                	// #31153
   1be78:	movk	w8, #0x9e37, lsl #16
   1be7c:	mul	w8, w0, w8
   1be80:	neg	w9, w1
   1be84:	lsr	w0, w8, w9
   1be88:	ret
   1be8c:	ldr	w0, [x0]
   1be90:	ret
   1be94:	mov	x8, #0xbb000000            	// #3137339392
   1be98:	movk	x8, #0xbcdc, lsl #32
   1be9c:	movk	x8, #0xcf1b, lsl #48
   1bea0:	mul	x8, x0, x8
   1bea4:	neg	w9, w1
   1bea8:	lsr	x0, x8, x9
   1beac:	ret
   1beb0:	stp	x29, x30, [sp, #-16]!
   1beb4:	mov	x29, sp
   1beb8:	bl	1bec4 <ZSTD_endStream@@Base+0xdf70>
   1bebc:	ldp	x29, x30, [sp], #16
   1bec0:	ret
   1bec4:	ldr	x0, [x0]
   1bec8:	ret
   1becc:	mov	x8, #0xbf9b0000            	// #3214606336
   1bed0:	movk	x8, #0xbcdc, lsl #32
   1bed4:	movk	x8, #0xcf1b, lsl #48
   1bed8:	mul	x8, x0, x8
   1bedc:	neg	w9, w1
   1bee0:	lsr	x0, x8, x9
   1bee4:	ret
   1bee8:	mov	x8, #0x6300                	// #25344
   1beec:	movk	x8, #0xbfa5, lsl #16
   1bef0:	movk	x8, #0xbcdc, lsl #32
   1bef4:	movk	x8, #0xcf1b, lsl #48
   1bef8:	mul	x8, x0, x8
   1befc:	neg	w9, w1
   1bf00:	lsr	x0, x8, x9
   1bf04:	ret
   1bf08:	mov	x8, #0x6463                	// #25699
   1bf0c:	movk	x8, #0xb7a5, lsl #16
   1bf10:	movk	x8, #0xbcdc, lsl #32
   1bf14:	movk	x8, #0xcf1b, lsl #48
   1bf18:	mul	x8, x0, x8
   1bf1c:	neg	w9, w1
   1bf20:	lsr	x0, x8, x9
   1bf24:	ret
   1bf28:	stp	x29, x30, [sp, #-80]!
   1bf2c:	stp	x26, x25, [sp, #16]
   1bf30:	sub	x25, x2, #0x7
   1bf34:	stp	x22, x21, [sp, #48]
   1bf38:	stp	x20, x19, [sp, #64]
   1bf3c:	mov	x20, x2
   1bf40:	mov	x19, x0
   1bf44:	cmp	x25, x0
   1bf48:	mov	x21, x1
   1bf4c:	stp	x24, x23, [sp, #32]
   1bf50:	mov	x29, sp
   1bf54:	b.ls	1bf88 <ZSTD_endStream@@Base+0xe034>  // b.plast
   1bf58:	mov	x0, x21
   1bf5c:	bl	1c084 <ZSTD_endStream@@Base+0xe130>
   1bf60:	mov	x22, x0
   1bf64:	mov	x0, x19
   1bf68:	bl	1c084 <ZSTD_endStream@@Base+0xe130>
   1bf6c:	eor	x0, x0, x22
   1bf70:	cbz	x0, 1c028 <ZSTD_endStream@@Base+0xe0d4>
   1bf74:	bl	1c08c <ZSTD_endStream@@Base+0xe138>
   1bf78:	mov	w8, wzr
   1bf7c:	mov	w23, w0
   1bf80:	cbz	w8, 1c00c <ZSTD_endStream@@Base+0xe0b8>
   1bf84:	b	1c030 <ZSTD_endStream@@Base+0xe0dc>
   1bf88:	mov	x22, x19
   1bf8c:	sub	x8, x20, #0x3
   1bf90:	cmp	x22, x8
   1bf94:	b.cs	1bfbc <ZSTD_endStream@@Base+0xe068>  // b.hs, b.nlast
   1bf98:	mov	x0, x21
   1bf9c:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1bfa0:	mov	w23, w0
   1bfa4:	mov	x0, x22
   1bfa8:	bl	1be8c <ZSTD_endStream@@Base+0xdf38>
   1bfac:	cmp	w23, w0
   1bfb0:	b.ne	1bfbc <ZSTD_endStream@@Base+0xe068>  // b.any
   1bfb4:	add	x22, x22, #0x4
   1bfb8:	add	x21, x21, #0x4
   1bfbc:	sub	x8, x20, #0x1
   1bfc0:	cmp	x22, x8
   1bfc4:	b.cs	1bfec <ZSTD_endStream@@Base+0xe098>  // b.hs, b.nlast
   1bfc8:	mov	x0, x21
   1bfcc:	bl	1c09c <ZSTD_endStream@@Base+0xe148>
   1bfd0:	and	w23, w0, #0xffff
   1bfd4:	mov	x0, x22
   1bfd8:	bl	1c09c <ZSTD_endStream@@Base+0xe148>
   1bfdc:	cmp	w23, w0, uxth
   1bfe0:	b.ne	1bfec <ZSTD_endStream@@Base+0xe098>  // b.any
   1bfe4:	add	x22, x22, #0x2
   1bfe8:	add	x21, x21, #0x2
   1bfec:	cmp	x22, x20
   1bff0:	b.cs	1c008 <ZSTD_endStream@@Base+0xe0b4>  // b.hs, b.nlast
   1bff4:	mov	x9, x22
   1bff8:	ldrb	w8, [x21]
   1bffc:	ldrb	w10, [x9], #1
   1c000:	cmp	w8, w10
   1c004:	csel	x22, x9, x22, eq  // eq = none
   1c008:	sub	x23, x22, x19
   1c00c:	mov	x0, x23
   1c010:	ldp	x20, x19, [sp, #64]
   1c014:	ldp	x22, x21, [sp, #48]
   1c018:	ldp	x24, x23, [sp, #32]
   1c01c:	ldp	x26, x25, [sp, #16]
   1c020:	ldp	x29, x30, [sp], #80
   1c024:	ret
   1c028:	mov	w8, #0x1                   	// #1
   1c02c:	cbz	w8, 1c00c <ZSTD_endStream@@Base+0xe0b8>
   1c030:	add	x22, x19, #0x8
   1c034:	add	x21, x21, #0x8
   1c038:	mov	w26, #0x1                   	// #1
   1c03c:	b	1c04c <ZSTD_endStream@@Base+0xe0f8>
   1c040:	add	x22, x22, #0x8
   1c044:	add	x21, x21, #0x8
   1c048:	tbz	w26, #0, 1c00c <ZSTD_endStream@@Base+0xe0b8>
   1c04c:	cmp	x22, x25
   1c050:	b.cs	1bf8c <ZSTD_endStream@@Base+0xe038>  // b.hs, b.nlast
   1c054:	mov	x0, x21
   1c058:	bl	1c084 <ZSTD_endStream@@Base+0xe130>
   1c05c:	mov	x24, x0
   1c060:	mov	x0, x22
   1c064:	bl	1c084 <ZSTD_endStream@@Base+0xe130>
   1c068:	eor	x0, x0, x24
   1c06c:	cbz	x0, 1c040 <ZSTD_endStream@@Base+0xe0ec>
   1c070:	bl	1c08c <ZSTD_endStream@@Base+0xe138>
   1c074:	add	x22, x22, w0, uxtw
   1c078:	sub	x23, x22, x19
   1c07c:	tbnz	wzr, #0, 1c04c <ZSTD_endStream@@Base+0xe0f8>
   1c080:	b	1c00c <ZSTD_endStream@@Base+0xe0b8>
   1c084:	ldr	x0, [x0]
   1c088:	ret
   1c08c:	rbit	x8, x0
   1c090:	clz	x8, x8
   1c094:	ubfx	x0, x8, #3, #29
   1c098:	ret
   1c09c:	ldrh	w0, [x0]
   1c0a0:	ret
   1c0a4:	ldr	q0, [x1]
   1c0a8:	str	q0, [x0]
   1c0ac:	ret
   1c0b0:	stp	x29, x30, [sp, #-64]!
   1c0b4:	stp	x22, x21, [sp, #32]
   1c0b8:	stp	x20, x19, [sp, #48]
   1c0bc:	mov	x19, x2
   1c0c0:	mov	x20, x1
   1c0c4:	cmp	x1, x3
   1c0c8:	mov	x22, x0
   1c0cc:	stp	x24, x23, [sp, #16]
   1c0d0:	mov	x29, sp
   1c0d4:	b.hi	1c13c <ZSTD_endStream@@Base+0xe1e8>  // b.pmore
   1c0d8:	sub	x24, x3, x20
   1c0dc:	mov	x0, x22
   1c0e0:	mov	x1, x20
   1c0e4:	mov	x21, x3
   1c0e8:	add	x23, x22, x24
   1c0ec:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1c0f0:	add	x0, x22, #0x10
   1c0f4:	add	x1, x20, #0x10
   1c0f8:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1c0fc:	cmp	x24, #0x21
   1c100:	b.lt	1c134 <ZSTD_endStream@@Base+0xe1e0>  // b.tstop
   1c104:	add	x22, x22, #0x20
   1c108:	add	x20, x20, #0x30
   1c10c:	sub	x1, x20, #0x10
   1c110:	mov	x0, x22
   1c114:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1c118:	add	x0, x22, #0x10
   1c11c:	mov	x1, x20
   1c120:	bl	1c0a4 <ZSTD_endStream@@Base+0xe150>
   1c124:	add	x22, x22, #0x20
   1c128:	cmp	x22, x23
   1c12c:	add	x20, x20, #0x20
   1c130:	b.cc	1c10c <ZSTD_endStream@@Base+0xe1b8>  // b.lo, b.ul, b.last
   1c134:	mov	x20, x21
   1c138:	mov	x22, x23
   1c13c:	cmp	x20, x19
   1c140:	b.cs	1c154 <ZSTD_endStream@@Base+0xe200>  // b.hs, b.nlast
   1c144:	ldrb	w8, [x20], #1
   1c148:	cmp	x19, x20
   1c14c:	strb	w8, [x22], #1
   1c150:	b.ne	1c144 <ZSTD_endStream@@Base+0xe1f0>  // b.any
   1c154:	ldp	x20, x19, [sp, #48]
   1c158:	ldp	x22, x21, [sp, #32]
   1c15c:	ldp	x24, x23, [sp, #16]
   1c160:	ldp	x29, x30, [sp], #64
   1c164:	ret
   1c168:	stp	x29, x30, [sp, #-64]!
   1c16c:	sub	x8, x3, x1
   1c170:	add	x8, x0, x8
   1c174:	cmp	x8, x2
   1c178:	stp	x20, x19, [sp, #48]
   1c17c:	mov	x20, x2
   1c180:	csel	x2, x8, x2, cc  // cc = lo, ul, last
   1c184:	stp	x24, x23, [sp, #16]
   1c188:	stp	x22, x21, [sp, #32]
   1c18c:	mov	x29, sp
   1c190:	mov	x19, x4
   1c194:	mov	x23, x3
   1c198:	mov	x24, x1
   1c19c:	mov	x22, x0
   1c1a0:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1c1a4:	add	x8, x24, x0
   1c1a8:	mov	x21, x0
   1c1ac:	cmp	x8, x23
   1c1b0:	b.ne	1c1c8 <ZSTD_endStream@@Base+0xe274>  // b.any
   1c1b4:	add	x0, x22, x21
   1c1b8:	mov	x1, x19
   1c1bc:	mov	x2, x20
   1c1c0:	bl	1bf28 <ZSTD_endStream@@Base+0xdfd4>
   1c1c4:	add	x21, x0, x21
   1c1c8:	mov	x0, x21
   1c1cc:	ldp	x20, x19, [sp, #48]
   1c1d0:	ldp	x22, x21, [sp, #32]
   1c1d4:	ldp	x24, x23, [sp, #16]
   1c1d8:	ldp	x29, x30, [sp], #64
   1c1dc:	ret
   1c1e0:	ldp	w8, w10, [x0, #28]
   1c1e4:	mov	w9, #0x1                   	// #1
   1c1e8:	lsl	w9, w9, w2
   1c1ec:	sub	w12, w1, w9
   1c1f0:	sub	w11, w1, w8
   1c1f4:	cmp	w11, w9
   1c1f8:	ccmp	w10, #0x0, #0x0, hi  // hi = pmore
   1c1fc:	csel	w0, w12, w8, eq  // eq = none
   1c200:	ret
   1c204:	stp	x29, x30, [sp, #-16]!
   1c208:	ldr	w3, [x0, #200]
   1c20c:	mov	x2, x1
   1c210:	add	x1, x0, #0xb8
   1c214:	mov	x29, sp
   1c218:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1c21c:	ldp	x29, x30, [sp], #16
   1c220:	ret
   1c224:	sub	sp, sp, #0x70
   1c228:	stp	x29, x30, [sp, #16]
   1c22c:	stp	x28, x27, [sp, #32]
   1c230:	stp	x26, x25, [sp, #48]
   1c234:	stp	x24, x23, [sp, #64]
   1c238:	stp	x22, x21, [sp, #80]
   1c23c:	stp	x20, x19, [sp, #96]
   1c240:	ldr	x24, [x0, #8]
   1c244:	ldr	w25, [x0, #36]
   1c248:	ldr	x23, [x0, #48]
   1c24c:	ldr	w21, [x1, #8]
   1c250:	sub	x26, x2, x24
   1c254:	mov	x20, x0
   1c258:	cmp	w25, w26
   1c25c:	mov	w22, w3
   1c260:	add	x29, sp, #0x10
   1c264:	str	x2, [sp, #8]
   1c268:	b.cs	1c2b4 <ZSTD_endStream@@Base+0xe360>  // b.hs, b.nlast
   1c26c:	ldr	w8, [x1, #4]
   1c270:	ldr	x27, [x20, #64]
   1c274:	mov	w9, #0xffffffff            	// #-1
   1c278:	and	x19, x26, #0xffffffff
   1c27c:	lsl	w8, w9, w8
   1c280:	mvn	w28, w8
   1c284:	add	x0, x24, x25
   1c288:	mov	w1, w21
   1c28c:	mov	w2, w22
   1c290:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   1c294:	lsl	x8, x0, #2
   1c298:	ldr	w9, [x23, x8]
   1c29c:	and	w10, w25, w28
   1c2a0:	str	w9, [x27, w10, uxtw #2]
   1c2a4:	str	w25, [x23, x8]
   1c2a8:	add	x25, x25, #0x1
   1c2ac:	cmp	x19, x25
   1c2b0:	b.ne	1c284 <ZSTD_endStream@@Base+0xe330>  // b.any
   1c2b4:	ldr	x0, [sp, #8]
   1c2b8:	mov	w1, w21
   1c2bc:	mov	w2, w22
   1c2c0:	str	w26, [x20, #36]
   1c2c4:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   1c2c8:	ldr	w0, [x23, x0, lsl #2]
   1c2cc:	ldp	x20, x19, [sp, #96]
   1c2d0:	ldp	x22, x21, [sp, #80]
   1c2d4:	ldp	x24, x23, [sp, #64]
   1c2d8:	ldp	x26, x25, [sp, #48]
   1c2dc:	ldp	x28, x27, [sp, #32]
   1c2e0:	ldp	x29, x30, [sp, #16]
   1c2e4:	add	sp, sp, #0x70
   1c2e8:	ret
   1c2ec:	sub	sp, sp, #0xc0
   1c2f0:	stp	x29, x30, [sp, #96]
   1c2f4:	stp	x28, x27, [sp, #112]
   1c2f8:	stp	x26, x25, [sp, #128]
   1c2fc:	stp	x24, x23, [sp, #144]
   1c300:	stp	x22, x21, [sp, #160]
   1c304:	stp	x20, x19, [sp, #176]
   1c308:	ldr	x8, [x0, #8]
   1c30c:	ldr	w9, [x0, #24]
   1c310:	add	x29, sp, #0x60
   1c314:	stur	x0, [x29, #-24]
   1c318:	mov	x24, x3
   1c31c:	ldp	w10, w11, [x2]
   1c320:	add	x12, x8, x9
   1c324:	cmp	w24, w12
   1c328:	cinc	x26, x3, eq  // eq = none
   1c32c:	sub	w8, w26, w12
   1c330:	add	x22, x3, x4
   1c334:	cmp	w11, w8
   1c338:	sub	x28, x22, #0x8
   1c33c:	csel	w9, w11, wzr, hi  // hi = pmore
   1c340:	csel	w23, wzr, w11, hi  // hi = pmore
   1c344:	cmp	w10, w8
   1c348:	csel	w8, w10, w9, hi  // hi = pmore
   1c34c:	csel	w21, wzr, w10, hi  // hi = pmore
   1c350:	cmp	x26, x28
   1c354:	str	x2, [sp, #16]
   1c358:	str	w8, [sp, #12]
   1c35c:	b.cs	1c8c0 <ZSTD_endStream@@Base+0xe96c>  // b.hs, b.nlast
   1c360:	sub	x8, x22, #0x20
   1c364:	mov	x27, x1
   1c368:	stur	x8, [x29, #-40]
   1c36c:	str	x22, [sp, #48]
   1c370:	stp	x12, x1, [sp, #24]
   1c374:	b	1c390 <ZSTD_endStream@@Base+0xe43c>
   1c378:	ldr	w23, [sp, #44]
   1c37c:	sub	x8, x26, x24
   1c380:	add	x8, x26, x8, asr #8
   1c384:	add	x26, x8, #0x1
   1c388:	cmp	x26, x28
   1c38c:	b.cs	1c8c0 <ZSTD_endStream@@Base+0xe96c>  // b.hs, b.nlast
   1c390:	add	x25, x26, #0x1
   1c394:	mov	w8, w21
   1c398:	neg	x9, x8
   1c39c:	sub	x0, x25, x8
   1c3a0:	stur	x9, [x29, #-16]
   1c3a4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c3a8:	mov	w27, w0
   1c3ac:	mov	x0, x25
   1c3b0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c3b4:	mov	x19, xzr
   1c3b8:	str	w23, [sp, #44]
   1c3bc:	cbz	w21, 1c3e0 <ZSTD_endStream@@Base+0xe48c>
   1c3c0:	cmp	w27, w0
   1c3c4:	b.ne	1c3e0 <ZSTD_endStream@@Base+0xe48c>  // b.any
   1c3c8:	ldur	x8, [x29, #-16]
   1c3cc:	add	x0, x26, #0x5
   1c3d0:	mov	x2, x22
   1c3d4:	add	x1, x0, x8
   1c3d8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1c3dc:	add	x19, x0, #0x4
   1c3e0:	ldur	x0, [x29, #-24]
   1c3e4:	mov	w8, #0xc9ff                	// #51711
   1c3e8:	movk	w8, #0x3b9a, lsl #16
   1c3ec:	sub	x3, x29, #0x8
   1c3f0:	mov	x1, x26
   1c3f4:	mov	x2, x22
   1c3f8:	stur	x8, [x29, #-8]
   1c3fc:	bl	25098 <ZSTD_endStream@@Base+0x17144>
   1c400:	ldur	x8, [x29, #-8]
   1c404:	cmp	x0, x19
   1c408:	csel	x20, x0, x19, hi  // hi = pmore
   1c40c:	csel	x25, x26, x25, hi  // hi = pmore
   1c410:	csel	x23, x8, xzr, hi  // hi = pmore
   1c414:	cmp	x20, #0x3
   1c418:	b.ls	1c378 <ZSTD_endStream@@Base+0xe424>  // b.plast
   1c41c:	cmp	x26, x28
   1c420:	stur	w21, [x29, #-28]
   1c424:	b.cc	1c4a4 <ZSTD_endStream@@Base+0xe550>  // b.lo, b.ul, b.last
   1c428:	cbz	x23, 1c6a4 <ZSTD_endStream@@Base+0xe750>
   1c42c:	cmp	x25, x24
   1c430:	b.ls	1c6b4 <ZSTD_endStream@@Base+0xe760>  // b.plast
   1c434:	ldr	x12, [sp, #24]
   1c438:	sub	x8, x25, x23
   1c43c:	add	x8, x8, #0x2
   1c440:	cmp	x8, x12
   1c444:	b.ls	1c6b4 <ZSTD_endStream@@Base+0xe760>  // b.plast
   1c448:	ldur	w13, [x29, #-28]
   1c44c:	ldr	x14, [sp, #32]
   1c450:	ldur	x3, [x29, #-40]
   1c454:	mov	w8, #0x1                   	// #1
   1c458:	sub	x9, x8, x23
   1c45c:	mov	x8, x25
   1c460:	ldrb	w10, [x8, #-1]!
   1c464:	ldrb	w11, [x25, x9]
   1c468:	cmp	w10, w11
   1c46c:	b.ne	1c6c0 <ZSTD_endStream@@Base+0xe76c>  // b.any
   1c470:	cmp	x8, x24
   1c474:	add	x20, x20, #0x1
   1c478:	b.ls	1c6c4 <ZSTD_endStream@@Base+0xe770>  // b.plast
   1c47c:	add	x10, x25, x9
   1c480:	cmp	x10, x12
   1c484:	mov	x25, x8
   1c488:	b.hi	1c460 <ZSTD_endStream@@Base+0xe50c>  // b.pmore
   1c48c:	b	1c6c4 <ZSTD_endStream@@Base+0xe770>
   1c490:	mov	w8, #0x1                   	// #1
   1c494:	cbnz	w8, 1c428 <ZSTD_endStream@@Base+0xe4d4>
   1c498:	cmp	x27, x28
   1c49c:	mov	x26, x27
   1c4a0:	b.cs	1c428 <ZSTD_endStream@@Base+0xe4d4>  // b.hs, b.nlast
   1c4a4:	mov	x21, x28
   1c4a8:	add	x27, x26, #0x1
   1c4ac:	cbz	x23, 1c520 <ZSTD_endStream@@Base+0xe5cc>
   1c4b0:	mov	x0, x27
   1c4b4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c4b8:	ldur	x8, [x29, #-16]
   1c4bc:	mov	w28, w0
   1c4c0:	add	x0, x27, x8
   1c4c4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c4c8:	ldur	w8, [x29, #-28]
   1c4cc:	cbz	w8, 1c520 <ZSTD_endStream@@Base+0xe5cc>
   1c4d0:	cmp	w28, w0
   1c4d4:	b.ne	1c520 <ZSTD_endStream@@Base+0xe5cc>  // b.any
   1c4d8:	ldur	x8, [x29, #-16]
   1c4dc:	add	x0, x26, #0x5
   1c4e0:	mov	x2, x22
   1c4e4:	add	x1, x0, x8
   1c4e8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1c4ec:	cmn	x0, #0x5
   1c4f0:	b.hi	1c520 <ZSTD_endStream@@Base+0xe5cc>  // b.pmore
   1c4f4:	add	x19, x0, #0x4
   1c4f8:	add	w0, w23, #0x1
   1c4fc:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1c500:	add	w8, w20, w20, lsl #1
   1c504:	sub	w8, w8, w0
   1c508:	add	w9, w19, w19, lsl #1
   1c50c:	add	w8, w8, #0x1
   1c510:	cmp	w9, w8
   1c514:	csel	x25, x27, x25, gt
   1c518:	csel	x23, xzr, x23, gt
   1c51c:	csel	x20, x19, x20, gt
   1c520:	ldur	x0, [x29, #-24]
   1c524:	mov	w8, #0xc9ff                	// #51711
   1c528:	movk	w8, #0x3b9a, lsl #16
   1c52c:	sub	x3, x29, #0x8
   1c530:	mov	x1, x27
   1c534:	mov	x2, x22
   1c538:	stur	x8, [x29, #-8]
   1c53c:	bl	25098 <ZSTD_endStream@@Base+0x17144>
   1c540:	cmp	x0, #0x4
   1c544:	b.cc	1c59c <ZSTD_endStream@@Base+0xe648>  // b.lo, b.ul, b.last
   1c548:	ldur	x22, [x29, #-8]
   1c54c:	mov	x28, x0
   1c550:	add	w0, w23, #0x1
   1c554:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1c558:	mov	w19, w0
   1c55c:	add	w0, w22, #0x1
   1c560:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1c564:	lsl	w8, w20, #2
   1c568:	lsl	w9, w28, #2
   1c56c:	sub	w8, w8, w19
   1c570:	sub	w9, w9, w0
   1c574:	add	w8, w8, #0x4
   1c578:	cmp	w9, w8
   1c57c:	csel	x23, x22, x23, gt
   1c580:	ldr	x22, [sp, #48]
   1c584:	cset	w8, le
   1c588:	csel	x25, x27, x25, gt
   1c58c:	csel	x20, x28, x20, gt
   1c590:	mov	x28, x21
   1c594:	tbnz	w8, #0, 1c5a8 <ZSTD_endStream@@Base+0xe654>
   1c598:	b	1c498 <ZSTD_endStream@@Base+0xe544>
   1c59c:	mov	w8, #0x1                   	// #1
   1c5a0:	mov	x28, x21
   1c5a4:	tbz	w8, #0, 1c498 <ZSTD_endStream@@Base+0xe544>
   1c5a8:	cmp	x27, x28
   1c5ac:	b.cs	1c428 <ZSTD_endStream@@Base+0xe4d4>  // b.hs, b.nlast
   1c5b0:	add	x27, x26, #0x2
   1c5b4:	cbz	x23, 1c62c <ZSTD_endStream@@Base+0xe6d8>
   1c5b8:	mov	x0, x27
   1c5bc:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c5c0:	ldur	x8, [x29, #-16]
   1c5c4:	mov	w28, w0
   1c5c8:	add	x0, x27, x8
   1c5cc:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c5d0:	ldur	w8, [x29, #-28]
   1c5d4:	cbz	w8, 1c628 <ZSTD_endStream@@Base+0xe6d4>
   1c5d8:	cmp	w28, w0
   1c5dc:	b.ne	1c628 <ZSTD_endStream@@Base+0xe6d4>  // b.any
   1c5e0:	ldur	x8, [x29, #-16]
   1c5e4:	add	x0, x26, #0x6
   1c5e8:	mov	x2, x22
   1c5ec:	add	x1, x0, x8
   1c5f0:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1c5f4:	cmn	x0, #0x5
   1c5f8:	b.hi	1c628 <ZSTD_endStream@@Base+0xe6d4>  // b.pmore
   1c5fc:	add	x19, x0, #0x4
   1c600:	add	w0, w23, #0x1
   1c604:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1c608:	mov	w8, #0x1                   	// #1
   1c60c:	bfi	w8, w20, #2, #30
   1c610:	lsl	w9, w19, #2
   1c614:	sub	w8, w8, w0
   1c618:	cmp	w9, w8
   1c61c:	csel	x25, x27, x25, gt
   1c620:	csel	x23, xzr, x23, gt
   1c624:	csel	x20, x19, x20, gt
   1c628:	mov	x28, x21
   1c62c:	ldur	x0, [x29, #-24]
   1c630:	mov	w8, #0xc9ff                	// #51711
   1c634:	movk	w8, #0x3b9a, lsl #16
   1c638:	sub	x3, x29, #0x8
   1c63c:	mov	x1, x27
   1c640:	mov	x2, x22
   1c644:	stur	x8, [x29, #-8]
   1c648:	bl	25098 <ZSTD_endStream@@Base+0x17144>
   1c64c:	cmp	x0, #0x4
   1c650:	b.cc	1c490 <ZSTD_endStream@@Base+0xe53c>  // b.lo, b.ul, b.last
   1c654:	ldur	x22, [x29, #-8]
   1c658:	mov	x26, x0
   1c65c:	add	w0, w23, #0x1
   1c660:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1c664:	mov	w19, w0
   1c668:	add	w0, w22, #0x1
   1c66c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1c670:	lsl	w8, w20, #2
   1c674:	lsl	w9, w26, #2
   1c678:	sub	w8, w8, w19
   1c67c:	sub	w9, w9, w0
   1c680:	add	w8, w8, #0x7
   1c684:	cmp	w9, w8
   1c688:	csel	x23, x22, x23, gt
   1c68c:	ldr	x22, [sp, #48]
   1c690:	cset	w8, le
   1c694:	csel	x25, x27, x25, gt
   1c698:	csel	x20, x26, x20, gt
   1c69c:	cbz	w8, 1c498 <ZSTD_endStream@@Base+0xe544>
   1c6a0:	b	1c428 <ZSTD_endStream@@Base+0xe4d4>
   1c6a4:	ldur	w21, [x29, #-28]
   1c6a8:	ldr	x14, [sp, #32]
   1c6ac:	ldur	x3, [x29, #-40]
   1c6b0:	b	1c6d0 <ZSTD_endStream@@Base+0xe77c>
   1c6b4:	ldur	w13, [x29, #-28]
   1c6b8:	ldr	x14, [sp, #32]
   1c6bc:	ldur	x3, [x29, #-40]
   1c6c0:	mov	x8, x25
   1c6c4:	sub	w21, w23, #0x2
   1c6c8:	mov	x25, x8
   1c6cc:	str	w13, [sp, #44]
   1c6d0:	ldr	x0, [x14, #24]
   1c6d4:	cmp	x25, x3
   1c6d8:	sub	x19, x25, x24
   1c6dc:	b.ls	1c6f0 <ZSTD_endStream@@Base+0xe79c>  // b.plast
   1c6e0:	mov	x1, x24
   1c6e4:	mov	x2, x25
   1c6e8:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1c6ec:	b	1c75c <ZSTD_endStream@@Base+0xe808>
   1c6f0:	mov	x1, x24
   1c6f4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1c6f8:	cmp	x19, #0x11
   1c6fc:	b.cc	1c75c <ZSTD_endStream@@Base+0xe808>  // b.lo, b.ul, b.last
   1c700:	ldr	x8, [sp, #32]
   1c704:	add	x1, x24, #0x10
   1c708:	ldr	x26, [x8, #24]
   1c70c:	add	x0, x26, #0x10
   1c710:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1c714:	add	x0, x26, #0x20
   1c718:	add	x1, x24, #0x20
   1c71c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1c720:	cmp	x19, #0x31
   1c724:	b.lt	1c75c <ZSTD_endStream@@Base+0xe808>  // b.tstop
   1c728:	add	x27, x26, x19
   1c72c:	add	x26, x26, #0x30
   1c730:	add	x24, x24, #0x40
   1c734:	sub	x1, x24, #0x10
   1c738:	mov	x0, x26
   1c73c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1c740:	add	x0, x26, #0x10
   1c744:	mov	x1, x24
   1c748:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1c74c:	add	x26, x26, #0x20
   1c750:	cmp	x26, x27
   1c754:	add	x24, x24, #0x20
   1c758:	b.cc	1c734 <ZSTD_endStream@@Base+0xe7e0>  // b.lo, b.ul, b.last
   1c75c:	ldr	x27, [sp, #32]
   1c760:	sub	x8, x20, #0x3
   1c764:	cmp	x19, #0x10, lsl #12
   1c768:	ldr	x9, [x27, #24]
   1c76c:	add	x9, x9, x19
   1c770:	str	x9, [x27, #24]
   1c774:	b.cc	1c78c <ZSTD_endStream@@Base+0xe838>  // b.lo, b.ul, b.last
   1c778:	ldp	x10, x9, [x27]
   1c77c:	sub	x9, x9, x10
   1c780:	lsr	x9, x9, #3
   1c784:	mov	w10, #0x1                   	// #1
   1c788:	stp	w10, w9, [x27, #72]
   1c78c:	ldr	x9, [x27, #8]
   1c790:	add	w10, w23, #0x1
   1c794:	cmp	x8, #0x10, lsl #12
   1c798:	strh	w19, [x9, #4]
   1c79c:	str	w10, [x9]
   1c7a0:	b.cc	1c7b8 <ZSTD_endStream@@Base+0xe864>  // b.lo, b.ul, b.last
   1c7a4:	ldp	x11, x10, [x27]
   1c7a8:	sub	x10, x10, x11
   1c7ac:	lsr	x10, x10, #3
   1c7b0:	mov	w11, #0x2                   	// #2
   1c7b4:	stp	w11, w10, [x27, #72]
   1c7b8:	ldr	w23, [sp, #44]
   1c7bc:	strh	w8, [x9, #6]
   1c7c0:	add	x8, x9, #0x8
   1c7c4:	add	x24, x25, x20
   1c7c8:	str	x8, [x27, #8]
   1c7cc:	cbz	w23, 1c8ac <ZSTD_endStream@@Base+0xe958>
   1c7d0:	cmp	x24, x28
   1c7d4:	b.hi	1c8ac <ZSTD_endStream@@Base+0xe958>  // b.pmore
   1c7d8:	mov	w8, w21
   1c7dc:	mov	w20, w23
   1c7e0:	mov	x0, x24
   1c7e4:	mov	w21, w20
   1c7e8:	mov	w20, w8
   1c7ec:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c7f0:	mov	w23, w21
   1c7f4:	mov	w19, w0
   1c7f8:	sub	x0, x24, x23
   1c7fc:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c800:	cmp	w19, w0
   1c804:	b.ne	1c8a4 <ZSTD_endStream@@Base+0xe950>  // b.any
   1c808:	neg	x8, x23
   1c80c:	add	x0, x24, #0x4
   1c810:	add	x1, x0, x8
   1c814:	mov	x2, x22
   1c818:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1c81c:	ldur	x3, [x29, #-40]
   1c820:	mov	x25, x0
   1c824:	ldr	x0, [x27, #24]
   1c828:	add	x19, x25, #0x1
   1c82c:	cmp	x24, x3
   1c830:	mov	x1, x24
   1c834:	b.ls	1c844 <ZSTD_endStream@@Base+0xe8f0>  // b.plast
   1c838:	mov	x2, x24
   1c83c:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1c840:	b	1c848 <ZSTD_endStream@@Base+0xe8f4>
   1c844:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1c848:	ldr	x9, [x27, #8]
   1c84c:	add	x8, x25, #0x4
   1c850:	cmp	x19, #0x10, lsl #12
   1c854:	mov	w10, #0x1                   	// #1
   1c858:	strh	wzr, [x9, #4]
   1c85c:	str	w10, [x9]
   1c860:	b.cc	1c878 <ZSTD_endStream@@Base+0xe924>  // b.lo, b.ul, b.last
   1c864:	ldp	x11, x10, [x27]
   1c868:	sub	x10, x10, x11
   1c86c:	lsr	x10, x10, #3
   1c870:	mov	w11, #0x2                   	// #2
   1c874:	stp	w11, w10, [x27, #72]
   1c878:	strh	w19, [x9, #6]
   1c87c:	add	x9, x9, #0x8
   1c880:	add	x24, x24, x8
   1c884:	str	x9, [x27, #8]
   1c888:	cbz	w20, 1c8b4 <ZSTD_endStream@@Base+0xe960>
   1c88c:	cmp	x24, x28
   1c890:	mov	w8, w21
   1c894:	mov	w23, w20
   1c898:	mov	x26, x24
   1c89c:	b.ls	1c7e0 <ZSTD_endStream@@Base+0xe88c>  // b.plast
   1c8a0:	b	1c388 <ZSTD_endStream@@Base+0xe434>
   1c8a4:	mov	w23, w21
   1c8a8:	mov	w21, w20
   1c8ac:	mov	x26, x24
   1c8b0:	b	1c388 <ZSTD_endStream@@Base+0xe434>
   1c8b4:	mov	w23, w20
   1c8b8:	mov	x26, x24
   1c8bc:	b	1c388 <ZSTD_endStream@@Base+0xe434>
   1c8c0:	ldr	w9, [sp, #12]
   1c8c4:	ldr	x10, [sp, #16]
   1c8c8:	cmp	w21, #0x0
   1c8cc:	sub	x0, x22, x24
   1c8d0:	csel	w8, w9, w21, eq  // eq = none
   1c8d4:	cmp	w23, #0x0
   1c8d8:	csel	w9, w9, w23, eq  // eq = none
   1c8dc:	stp	w8, w9, [x10]
   1c8e0:	ldp	x20, x19, [sp, #176]
   1c8e4:	ldp	x22, x21, [sp, #160]
   1c8e8:	ldp	x24, x23, [sp, #144]
   1c8ec:	ldp	x26, x25, [sp, #128]
   1c8f0:	ldp	x28, x27, [sp, #112]
   1c8f4:	ldp	x29, x30, [sp, #96]
   1c8f8:	add	sp, sp, #0xc0
   1c8fc:	ret
   1c900:	sub	sp, sp, #0xf0
   1c904:	stp	x29, x30, [sp, #144]
   1c908:	stp	x28, x27, [sp, #160]
   1c90c:	stp	x26, x25, [sp, #176]
   1c910:	stp	x24, x23, [sp, #192]
   1c914:	stp	x22, x21, [sp, #208]
   1c918:	stp	x20, x19, [sp, #224]
   1c91c:	ldr	x8, [x0, #8]
   1c920:	ldr	w9, [x0, #24]
   1c924:	mov	x25, x3
   1c928:	ldp	w10, w11, [x2]
   1c92c:	add	x12, x3, x4
   1c930:	add	x14, x8, x9
   1c934:	cmp	w25, w14
   1c938:	cinc	x15, x3, eq  // eq = none
   1c93c:	sub	w8, w15, w14
   1c940:	cmp	w11, w8
   1c944:	sub	x13, x12, #0x8
   1c948:	csel	w9, w11, wzr, hi  // hi = pmore
   1c94c:	csel	w11, wzr, w11, hi  // hi = pmore
   1c950:	cmp	w10, w8
   1c954:	add	x29, sp, #0x90
   1c958:	csel	w8, w10, w9, hi  // hi = pmore
   1c95c:	csel	w22, wzr, w10, hi  // hi = pmore
   1c960:	cmp	x15, x13
   1c964:	str	x2, [sp, #16]
   1c968:	str	w11, [sp, #48]
   1c96c:	str	w8, [sp, #12]
   1c970:	stur	x13, [x29, #-40]
   1c974:	stur	x12, [x29, #-8]
   1c978:	b.cs	1d9cc <ZSTD_endStream@@Base+0xfa78>  // b.hs, b.nlast
   1c97c:	sub	x8, x12, #0x20
   1c980:	mov	x27, x0
   1c984:	stp	x14, x8, [sp, #24]
   1c988:	add	x8, x0, #0xb8
   1c98c:	mov	w26, #0x1                   	// #1
   1c990:	stp	x8, x0, [sp, #56]
   1c994:	str	x1, [sp, #40]
   1c998:	b	1c9c8 <ZSTD_endStream@@Base+0xea74>
   1c99c:	ldur	x25, [x29, #-64]
   1c9a0:	ldr	x27, [sp, #64]
   1c9a4:	ldp	w9, w22, [sp, #48]
   1c9a8:	mov	w26, #0x1                   	// #1
   1c9ac:	sub	x8, x10, x25
   1c9b0:	add	x8, x10, x8, asr #8
   1c9b4:	add	x15, x8, #0x1
   1c9b8:	ldur	x8, [x29, #-40]
   1c9bc:	str	w9, [sp, #48]
   1c9c0:	cmp	x15, x8
   1c9c4:	b.cs	1d9cc <ZSTD_endStream@@Base+0xfa78>  // b.hs, b.nlast
   1c9c8:	add	x20, x15, #0x1
   1c9cc:	mov	w8, w22
   1c9d0:	neg	x9, x8
   1c9d4:	sub	x0, x20, x8
   1c9d8:	stur	x15, [x29, #-16]
   1c9dc:	str	x9, [sp, #72]
   1c9e0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c9e4:	mov	w19, w0
   1c9e8:	mov	x0, x20
   1c9ec:	stur	x20, [x29, #-24]
   1c9f0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1c9f4:	mov	x10, xzr
   1c9f8:	cbz	w22, 1ca1c <ZSTD_endStream@@Base+0xeac8>
   1c9fc:	cmp	w19, w0
   1ca00:	b.ne	1ca1c <ZSTD_endStream@@Base+0xeac8>  // b.any
   1ca04:	ldp	x8, x2, [x29, #-16]
   1ca08:	add	x0, x8, #0x5
   1ca0c:	ldr	x8, [sp, #72]
   1ca10:	add	x1, x0, x8
   1ca14:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1ca18:	add	x10, x0, #0x4
   1ca1c:	ldr	w8, [x27, #200]
   1ca20:	ldur	x2, [x29, #-16]
   1ca24:	stur	x25, [x29, #-64]
   1ca28:	str	w22, [sp, #52]
   1ca2c:	sub	w9, w8, #0x6
   1ca30:	cmp	w9, #0x2
   1ca34:	stur	x10, [x29, #-32]
   1ca38:	b.cs	1cb54 <ZSTD_endStream@@Base+0xec00>  // b.hs, b.nlast
   1ca3c:	ldr	x23, [x27, #8]
   1ca40:	ldp	w9, w8, [x27, #184]
   1ca44:	ldp	w10, w11, [x27, #28]
   1ca48:	ldr	x1, [sp, #56]
   1ca4c:	sub	w19, w2, w23
   1ca50:	lsl	w9, w26, w9
   1ca54:	sub	w12, w19, w10
   1ca58:	ldr	x24, [x27, #64]
   1ca5c:	cmp	w12, w9
   1ca60:	ldr	w21, [x27, #196]
   1ca64:	lsl	w20, w26, w8
   1ca68:	sub	w8, w19, w9
   1ca6c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1ca70:	csel	w26, w8, w10, eq  // eq = none
   1ca74:	subs	w8, w19, w20
   1ca78:	mov	w3, #0x6                   	// #6
   1ca7c:	mov	x0, x27
   1ca80:	mov	w22, #0x1                   	// #1
   1ca84:	csel	w25, wzr, w8, cc  // cc = lo, ul, last
   1ca88:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1ca8c:	cmp	w0, w26
   1ca90:	b.ls	1cd8c <ZSTD_endStream@@Base+0xee38>  // b.plast
   1ca94:	ldp	x10, x2, [x29, #-16]
   1ca98:	lsl	w8, w22, w21
   1ca9c:	add	w21, w19, #0x2
   1caa0:	mov	w19, #0xc9ff                	// #51711
   1caa4:	mov	w28, w0
   1caa8:	sub	w20, w20, #0x1
   1caac:	mov	w22, #0x3                   	// #3
   1cab0:	sub	w27, w8, #0x1
   1cab4:	movk	w19, #0x3b9a, lsl #16
   1cab8:	add	x1, x23, w28, uxtw
   1cabc:	ldrb	w8, [x1, x22]
   1cac0:	ldrb	w9, [x10, x22]
   1cac4:	cmp	w8, w9
   1cac8:	b.ne	1cafc <ZSTD_endStream@@Base+0xeba8>  // b.any
   1cacc:	mov	x0, x10
   1cad0:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1cad4:	ldp	x10, x2, [x29, #-16]
   1cad8:	cmp	x0, x22
   1cadc:	b.hi	1cb08 <ZSTD_endStream@@Base+0xebb4>  // b.pmore
   1cae0:	cmp	w28, w25
   1cae4:	b.ls	1cb24 <ZSTD_endStream@@Base+0xebd0>  // b.plast
   1cae8:	and	w8, w28, w20
   1caec:	ldr	w28, [x24, w8, uxtw #2]
   1caf0:	mov	w8, #0x1                   	// #1
   1caf4:	tbnz	w8, #0, 1cb3c <ZSTD_endStream@@Base+0xebe8>
   1caf8:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cafc:	mov	x0, xzr
   1cb00:	cmp	x0, x22
   1cb04:	b.ls	1cae0 <ZSTD_endStream@@Base+0xeb8c>  // b.plast
   1cb08:	add	x8, x10, x0
   1cb0c:	cmp	x8, x2
   1cb10:	sub	w19, w21, w28
   1cb14:	b.eq	1cb30 <ZSTD_endStream@@Base+0xebdc>  // b.none
   1cb18:	mov	x22, x0
   1cb1c:	cmp	w28, w25
   1cb20:	b.hi	1cae8 <ZSTD_endStream@@Base+0xeb94>  // b.pmore
   1cb24:	mov	w8, wzr
   1cb28:	tbnz	w8, #0, 1cb3c <ZSTD_endStream@@Base+0xebe8>
   1cb2c:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cb30:	mov	w8, wzr
   1cb34:	mov	x22, x0
   1cb38:	tbz	w8, #0, 1cd9c <ZSTD_endStream@@Base+0xee48>
   1cb3c:	subs	w27, w27, #0x1
   1cb40:	cset	w8, cs  // cs = hs, nlast
   1cb44:	cmp	w28, w26
   1cb48:	b.ls	1cd9c <ZSTD_endStream@@Base+0xee48>  // b.plast
   1cb4c:	cbnz	w8, 1cab8 <ZSTD_endStream@@Base+0xeb64>
   1cb50:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cb54:	cmp	w8, #0x5
   1cb58:	b.ne	1cc74 <ZSTD_endStream@@Base+0xed20>  // b.any
   1cb5c:	ldr	x24, [x27, #8]
   1cb60:	ldp	w9, w8, [x27, #184]
   1cb64:	ldp	w10, w11, [x27, #28]
   1cb68:	ldr	x1, [sp, #56]
   1cb6c:	sub	w19, w2, w24
   1cb70:	lsl	w9, w26, w9
   1cb74:	sub	w12, w19, w10
   1cb78:	ldr	x22, [x27, #64]
   1cb7c:	cmp	w12, w9
   1cb80:	ldr	w21, [x27, #196]
   1cb84:	lsl	w20, w26, w8
   1cb88:	sub	w8, w19, w9
   1cb8c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1cb90:	csel	w23, w8, w10, eq  // eq = none
   1cb94:	subs	w8, w19, w20
   1cb98:	mov	w3, #0x5                   	// #5
   1cb9c:	mov	x0, x27
   1cba0:	csel	w25, wzr, w8, cc  // cc = lo, ul, last
   1cba4:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1cba8:	cmp	w0, w23
   1cbac:	b.ls	1cd8c <ZSTD_endStream@@Base+0xee38>  // b.plast
   1cbb0:	ldp	x10, x2, [x29, #-16]
   1cbb4:	lsl	w8, w26, w21
   1cbb8:	add	w21, w19, #0x2
   1cbbc:	mov	w19, #0xc9ff                	// #51711
   1cbc0:	mov	w28, w0
   1cbc4:	sub	w20, w20, #0x1
   1cbc8:	mov	x27, x22
   1cbcc:	mov	w22, #0x3                   	// #3
   1cbd0:	sub	w26, w8, #0x1
   1cbd4:	movk	w19, #0x3b9a, lsl #16
   1cbd8:	add	x1, x24, w28, uxtw
   1cbdc:	ldrb	w8, [x1, x22]
   1cbe0:	ldrb	w9, [x10, x22]
   1cbe4:	cmp	w8, w9
   1cbe8:	b.ne	1cc1c <ZSTD_endStream@@Base+0xecc8>  // b.any
   1cbec:	mov	x0, x10
   1cbf0:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1cbf4:	ldp	x10, x2, [x29, #-16]
   1cbf8:	cmp	x0, x22
   1cbfc:	b.hi	1cc28 <ZSTD_endStream@@Base+0xecd4>  // b.pmore
   1cc00:	cmp	w28, w25
   1cc04:	b.ls	1cc44 <ZSTD_endStream@@Base+0xecf0>  // b.plast
   1cc08:	and	w8, w28, w20
   1cc0c:	ldr	w28, [x27, w8, uxtw #2]
   1cc10:	mov	w8, #0x1                   	// #1
   1cc14:	tbnz	w8, #0, 1cc5c <ZSTD_endStream@@Base+0xed08>
   1cc18:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cc1c:	mov	x0, xzr
   1cc20:	cmp	x0, x22
   1cc24:	b.ls	1cc00 <ZSTD_endStream@@Base+0xecac>  // b.plast
   1cc28:	add	x8, x10, x0
   1cc2c:	cmp	x8, x2
   1cc30:	sub	w19, w21, w28
   1cc34:	b.eq	1cc50 <ZSTD_endStream@@Base+0xecfc>  // b.none
   1cc38:	mov	x22, x0
   1cc3c:	cmp	w28, w25
   1cc40:	b.hi	1cc08 <ZSTD_endStream@@Base+0xecb4>  // b.pmore
   1cc44:	mov	w8, wzr
   1cc48:	tbnz	wzr, #0, 1cc5c <ZSTD_endStream@@Base+0xed08>
   1cc4c:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cc50:	mov	x22, x0
   1cc54:	mov	w8, wzr
   1cc58:	tbz	wzr, #0, 1cd9c <ZSTD_endStream@@Base+0xee48>
   1cc5c:	subs	w26, w26, #0x1
   1cc60:	cset	w8, cs  // cs = hs, nlast
   1cc64:	cmp	w28, w23
   1cc68:	b.ls	1cd9c <ZSTD_endStream@@Base+0xee48>  // b.plast
   1cc6c:	cbnz	w8, 1cbd8 <ZSTD_endStream@@Base+0xec84>
   1cc70:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cc74:	ldr	x23, [x27, #8]
   1cc78:	ldp	w9, w8, [x27, #184]
   1cc7c:	ldp	w10, w11, [x27, #28]
   1cc80:	ldr	x1, [sp, #56]
   1cc84:	sub	w19, w2, w23
   1cc88:	lsl	w9, w26, w9
   1cc8c:	sub	w12, w19, w10
   1cc90:	ldr	x24, [x27, #64]
   1cc94:	cmp	w12, w9
   1cc98:	ldr	w21, [x27, #196]
   1cc9c:	lsl	w20, w26, w8
   1cca0:	sub	w8, w19, w9
   1cca4:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1cca8:	csel	w26, w8, w10, eq  // eq = none
   1ccac:	subs	w8, w19, w20
   1ccb0:	mov	w3, #0x4                   	// #4
   1ccb4:	mov	x0, x27
   1ccb8:	mov	w22, #0x1                   	// #1
   1ccbc:	csel	w25, wzr, w8, cc  // cc = lo, ul, last
   1ccc0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1ccc4:	cmp	w0, w26
   1ccc8:	b.ls	1cd8c <ZSTD_endStream@@Base+0xee38>  // b.plast
   1cccc:	ldp	x10, x2, [x29, #-16]
   1ccd0:	lsl	w8, w22, w21
   1ccd4:	add	w21, w19, #0x2
   1ccd8:	mov	w19, #0xc9ff                	// #51711
   1ccdc:	mov	w28, w0
   1cce0:	sub	w20, w20, #0x1
   1cce4:	mov	w22, #0x3                   	// #3
   1cce8:	sub	w27, w8, #0x1
   1ccec:	movk	w19, #0x3b9a, lsl #16
   1ccf0:	add	x1, x23, w28, uxtw
   1ccf4:	ldrb	w8, [x1, x22]
   1ccf8:	ldrb	w9, [x10, x22]
   1ccfc:	cmp	w8, w9
   1cd00:	b.ne	1cd34 <ZSTD_endStream@@Base+0xede0>  // b.any
   1cd04:	mov	x0, x10
   1cd08:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1cd0c:	ldp	x10, x2, [x29, #-16]
   1cd10:	cmp	x0, x22
   1cd14:	b.hi	1cd40 <ZSTD_endStream@@Base+0xedec>  // b.pmore
   1cd18:	cmp	w28, w25
   1cd1c:	b.ls	1cd5c <ZSTD_endStream@@Base+0xee08>  // b.plast
   1cd20:	and	w8, w28, w20
   1cd24:	ldr	w28, [x24, w8, uxtw #2]
   1cd28:	mov	w8, #0x1                   	// #1
   1cd2c:	tbnz	w8, #0, 1cd74 <ZSTD_endStream@@Base+0xee20>
   1cd30:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cd34:	mov	x0, xzr
   1cd38:	cmp	x0, x22
   1cd3c:	b.ls	1cd18 <ZSTD_endStream@@Base+0xedc4>  // b.plast
   1cd40:	add	x8, x10, x0
   1cd44:	cmp	x8, x2
   1cd48:	sub	w19, w21, w28
   1cd4c:	b.eq	1cd68 <ZSTD_endStream@@Base+0xee14>  // b.none
   1cd50:	mov	x22, x0
   1cd54:	cmp	w28, w25
   1cd58:	b.hi	1cd20 <ZSTD_endStream@@Base+0xedcc>  // b.pmore
   1cd5c:	mov	w8, wzr
   1cd60:	tbnz	wzr, #0, 1cd74 <ZSTD_endStream@@Base+0xee20>
   1cd64:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cd68:	mov	x22, x0
   1cd6c:	mov	w8, wzr
   1cd70:	tbz	wzr, #0, 1cd9c <ZSTD_endStream@@Base+0xee48>
   1cd74:	subs	w27, w27, #0x1
   1cd78:	cset	w8, cs  // cs = hs, nlast
   1cd7c:	cmp	w28, w26
   1cd80:	b.ls	1cd9c <ZSTD_endStream@@Base+0xee48>  // b.plast
   1cd84:	cbnz	w8, 1ccf0 <ZSTD_endStream@@Base+0xed9c>
   1cd88:	b	1cd9c <ZSTD_endStream@@Base+0xee48>
   1cd8c:	ldur	x10, [x29, #-16]
   1cd90:	mov	w19, #0xc9ff                	// #51711
   1cd94:	movk	w19, #0x3b9a, lsl #16
   1cd98:	mov	w22, #0x3                   	// #3
   1cd9c:	ldp	x9, x8, [x29, #-32]
   1cda0:	cmp	x22, x9
   1cda4:	csel	x20, x22, x9, hi  // hi = pmore
   1cda8:	csel	x8, x10, x8, hi  // hi = pmore
   1cdac:	csel	x21, x19, xzr, hi  // hi = pmore
   1cdb0:	cmp	x20, #0x3
   1cdb4:	b.ls	1c99c <ZSTD_endStream@@Base+0xea48>  // b.plast
   1cdb8:	stur	x8, [x29, #-48]
   1cdbc:	ldur	x8, [x29, #-40]
   1cdc0:	ldr	x27, [sp, #64]
   1cdc4:	ldur	x25, [x29, #-64]
   1cdc8:	mov	w26, #0x1                   	// #1
   1cdcc:	cmp	x10, x8
   1cdd0:	b.cc	1ce68 <ZSTD_endStream@@Base+0xef14>  // b.lo, b.ul, b.last
   1cdd4:	cbz	x21, 1d78c <ZSTD_endStream@@Base+0xf838>
   1cdd8:	ldur	x11, [x29, #-48]
   1cddc:	cmp	x11, x25
   1cde0:	b.ls	1d7a4 <ZSTD_endStream@@Base+0xf850>  // b.plast
   1cde4:	ldr	x12, [sp, #24]
   1cde8:	sub	x8, x11, x21
   1cdec:	add	x8, x8, #0x2
   1cdf0:	cmp	x8, x12
   1cdf4:	b.ls	1d7a4 <ZSTD_endStream@@Base+0xf850>  // b.plast
   1cdf8:	ldr	w13, [sp, #52]
   1cdfc:	ldp	x24, x23, [sp, #32]
   1ce00:	sub	x9, x26, x21
   1ce04:	mov	x8, x11
   1ce08:	mov	w28, #0x2                   	// #2
   1ce0c:	ldrb	w10, [x8, #-1]!
   1ce10:	mov	x14, x11
   1ce14:	ldrb	w11, [x11, x9]
   1ce18:	cmp	w10, w11
   1ce1c:	b.ne	1d7b8 <ZSTD_endStream@@Base+0xf864>  // b.any
   1ce20:	cmp	x8, x25
   1ce24:	add	x20, x20, #0x1
   1ce28:	b.ls	1d7bc <ZSTD_endStream@@Base+0xf868>  // b.plast
   1ce2c:	add	x10, x14, x9
   1ce30:	cmp	x10, x12
   1ce34:	mov	x11, x8
   1ce38:	b.hi	1ce0c <ZSTD_endStream@@Base+0xeeb8>  // b.pmore
   1ce3c:	b	1d7bc <ZSTD_endStream@@Base+0xf868>
   1ce40:	ldr	x27, [sp, #64]
   1ce44:	ldur	x25, [x29, #-64]
   1ce48:	ldp	x20, x21, [x29, #-32]
   1ce4c:	mov	w8, #0x1                   	// #1
   1ce50:	mov	w26, #0x1                   	// #1
   1ce54:	cbnz	w8, 1cdd4 <ZSTD_endStream@@Base+0xee80>
   1ce58:	ldur	x8, [x29, #-40]
   1ce5c:	mov	x10, x28
   1ce60:	cmp	x28, x8
   1ce64:	b.cs	1cdd4 <ZSTD_endStream@@Base+0xee80>  // b.hs, b.nlast
   1ce68:	add	x28, x10, #0x1
   1ce6c:	stur	x10, [x29, #-16]
   1ce70:	cbz	x21, 1cef0 <ZSTD_endStream@@Base+0xef9c>
   1ce74:	mov	x0, x28
   1ce78:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1ce7c:	ldr	x8, [sp, #72]
   1ce80:	mov	w19, w0
   1ce84:	add	x0, x28, x8
   1ce88:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1ce8c:	ldr	w8, [sp, #52]
   1ce90:	cbz	w8, 1cef0 <ZSTD_endStream@@Base+0xef9c>
   1ce94:	ldur	x2, [x29, #-8]
   1ce98:	cmp	w19, w0
   1ce9c:	b.ne	1cef0 <ZSTD_endStream@@Base+0xef9c>  // b.any
   1cea0:	ldur	x8, [x29, #-16]
   1cea4:	add	x0, x8, #0x5
   1cea8:	ldr	x8, [sp, #72]
   1ceac:	add	x1, x0, x8
   1ceb0:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1ceb4:	cmn	x0, #0x5
   1ceb8:	b.hi	1cef0 <ZSTD_endStream@@Base+0xef9c>  // b.pmore
   1cebc:	add	x19, x0, #0x4
   1cec0:	add	w0, w21, #0x1
   1cec4:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1cec8:	add	w8, w20, w20, lsl #1
   1cecc:	sub	w8, w8, w0
   1ced0:	add	w9, w19, w19, lsl #1
   1ced4:	add	w8, w8, #0x1
   1ced8:	cmp	w9, w8
   1cedc:	ldur	x8, [x29, #-48]
   1cee0:	csel	x21, xzr, x21, gt
   1cee4:	csel	x20, x19, x20, gt
   1cee8:	csel	x8, x28, x8, gt
   1ceec:	stur	x8, [x29, #-48]
   1cef0:	ldr	w8, [x27, #200]
   1cef4:	stp	x20, x21, [x29, #-32]
   1cef8:	sub	w9, w8, #0x6
   1cefc:	cmp	w9, #0x2
   1cf00:	b.cs	1d024 <ZSTD_endStream@@Base+0xf0d0>  // b.hs, b.nlast
   1cf04:	ldr	x8, [x27, #64]
   1cf08:	ldr	x23, [x27, #8]
   1cf0c:	ldr	x1, [sp, #56]
   1cf10:	ldr	w24, [x27, #196]
   1cf14:	stur	x8, [x29, #-56]
   1cf18:	ldp	w9, w8, [x27, #184]
   1cf1c:	ldp	w10, w11, [x27, #28]
   1cf20:	sub	w22, w28, w23
   1cf24:	mov	w3, #0x6                   	// #6
   1cf28:	lsl	w9, w26, w9
   1cf2c:	sub	w12, w22, w10
   1cf30:	cmp	w12, w9
   1cf34:	lsl	w21, w26, w8
   1cf38:	sub	w8, w22, w9
   1cf3c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1cf40:	csel	w25, w8, w10, eq  // eq = none
   1cf44:	subs	w8, w22, w21
   1cf48:	mov	x0, x27
   1cf4c:	mov	x2, x28
   1cf50:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   1cf54:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1cf58:	cmp	w0, w25
   1cf5c:	b.ls	1d2d8 <ZSTD_endStream@@Base+0xf384>  // b.plast
   1cf60:	ldur	x2, [x29, #-8]
   1cf64:	lsl	w8, w26, w24
   1cf68:	mov	w24, #0xc9ff                	// #51711
   1cf6c:	mov	w19, w0
   1cf70:	sub	w21, w21, #0x1
   1cf74:	add	w27, w22, #0x2
   1cf78:	mov	w22, #0x3                   	// #3
   1cf7c:	sub	w26, w8, #0x1
   1cf80:	movk	w24, #0x3b9a, lsl #16
   1cf84:	add	x1, x23, w19, uxtw
   1cf88:	ldrb	w8, [x1, x22]
   1cf8c:	ldrb	w9, [x28, x22]
   1cf90:	cmp	w8, w9
   1cf94:	b.ne	1cfcc <ZSTD_endStream@@Base+0xf078>  // b.any
   1cf98:	mov	x0, x28
   1cf9c:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1cfa0:	ldur	x2, [x29, #-8]
   1cfa4:	cmp	x0, x22
   1cfa8:	b.hi	1cfd8 <ZSTD_endStream@@Base+0xf084>  // b.pmore
   1cfac:	cmp	w19, w20
   1cfb0:	b.ls	1cff4 <ZSTD_endStream@@Base+0xf0a0>  // b.plast
   1cfb4:	ldur	x9, [x29, #-56]
   1cfb8:	and	w8, w19, w21
   1cfbc:	ldr	w19, [x9, w8, uxtw #2]
   1cfc0:	mov	w8, #0x1                   	// #1
   1cfc4:	tbnz	w8, #0, 1d00c <ZSTD_endStream@@Base+0xf0b8>
   1cfc8:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1cfcc:	mov	x0, xzr
   1cfd0:	cmp	x0, x22
   1cfd4:	b.ls	1cfac <ZSTD_endStream@@Base+0xf058>  // b.plast
   1cfd8:	add	x8, x28, x0
   1cfdc:	cmp	x8, x2
   1cfe0:	sub	w24, w27, w19
   1cfe4:	b.eq	1d000 <ZSTD_endStream@@Base+0xf0ac>  // b.none
   1cfe8:	mov	x22, x0
   1cfec:	cmp	w19, w20
   1cff0:	b.hi	1cfb4 <ZSTD_endStream@@Base+0xf060>  // b.pmore
   1cff4:	mov	w8, wzr
   1cff8:	tbnz	w8, #0, 1d00c <ZSTD_endStream@@Base+0xf0b8>
   1cffc:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1d000:	mov	w8, wzr
   1d004:	mov	x22, x0
   1d008:	tbz	w8, #0, 1d26c <ZSTD_endStream@@Base+0xf318>
   1d00c:	subs	w26, w26, #0x1
   1d010:	cset	w8, cs  // cs = hs, nlast
   1d014:	cmp	w19, w25
   1d018:	b.ls	1d26c <ZSTD_endStream@@Base+0xf318>  // b.plast
   1d01c:	cbnz	w8, 1cf84 <ZSTD_endStream@@Base+0xf030>
   1d020:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1d024:	cmp	w8, #0x5
   1d028:	b.ne	1d150 <ZSTD_endStream@@Base+0xf1fc>  // b.any
   1d02c:	ldr	x8, [x27, #64]
   1d030:	ldr	x23, [x27, #8]
   1d034:	ldr	x1, [sp, #56]
   1d038:	ldr	w22, [x27, #196]
   1d03c:	stur	x8, [x29, #-56]
   1d040:	ldp	w9, w8, [x27, #184]
   1d044:	ldp	w10, w11, [x27, #28]
   1d048:	sub	w21, w28, w23
   1d04c:	mov	w3, #0x5                   	// #5
   1d050:	lsl	w9, w26, w9
   1d054:	sub	w12, w21, w10
   1d058:	cmp	w12, w9
   1d05c:	lsl	w20, w26, w8
   1d060:	sub	w8, w21, w9
   1d064:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1d068:	csel	w26, w8, w10, eq  // eq = none
   1d06c:	subs	w8, w21, w20
   1d070:	mov	x0, x27
   1d074:	mov	x2, x28
   1d078:	mov	w24, #0x1                   	// #1
   1d07c:	csel	w25, wzr, w8, cc  // cc = lo, ul, last
   1d080:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1d084:	cmp	w0, w26
   1d088:	b.ls	1d2d8 <ZSTD_endStream@@Base+0xf384>  // b.plast
   1d08c:	ldur	x2, [x29, #-8]
   1d090:	lsl	w8, w24, w22
   1d094:	mov	w24, #0xc9ff                	// #51711
   1d098:	mov	w19, w0
   1d09c:	sub	w20, w20, #0x1
   1d0a0:	add	w21, w21, #0x2
   1d0a4:	mov	w22, #0x3                   	// #3
   1d0a8:	sub	w27, w8, #0x1
   1d0ac:	movk	w24, #0x3b9a, lsl #16
   1d0b0:	add	x1, x23, w19, uxtw
   1d0b4:	ldrb	w8, [x1, x22]
   1d0b8:	ldrb	w9, [x28, x22]
   1d0bc:	cmp	w8, w9
   1d0c0:	b.ne	1d0f8 <ZSTD_endStream@@Base+0xf1a4>  // b.any
   1d0c4:	mov	x0, x28
   1d0c8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1d0cc:	ldur	x2, [x29, #-8]
   1d0d0:	cmp	x0, x22
   1d0d4:	b.hi	1d104 <ZSTD_endStream@@Base+0xf1b0>  // b.pmore
   1d0d8:	cmp	w19, w25
   1d0dc:	b.ls	1d120 <ZSTD_endStream@@Base+0xf1cc>  // b.plast
   1d0e0:	ldur	x9, [x29, #-56]
   1d0e4:	and	w8, w19, w20
   1d0e8:	ldr	w19, [x9, w8, uxtw #2]
   1d0ec:	mov	w8, #0x1                   	// #1
   1d0f0:	tbnz	w8, #0, 1d138 <ZSTD_endStream@@Base+0xf1e4>
   1d0f4:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1d0f8:	mov	x0, xzr
   1d0fc:	cmp	x0, x22
   1d100:	b.ls	1d0d8 <ZSTD_endStream@@Base+0xf184>  // b.plast
   1d104:	add	x8, x28, x0
   1d108:	cmp	x8, x2
   1d10c:	sub	w24, w21, w19
   1d110:	b.eq	1d12c <ZSTD_endStream@@Base+0xf1d8>  // b.none
   1d114:	mov	x22, x0
   1d118:	cmp	w19, w25
   1d11c:	b.hi	1d0e0 <ZSTD_endStream@@Base+0xf18c>  // b.pmore
   1d120:	mov	w8, wzr
   1d124:	tbnz	wzr, #0, 1d138 <ZSTD_endStream@@Base+0xf1e4>
   1d128:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1d12c:	mov	x22, x0
   1d130:	mov	w8, wzr
   1d134:	tbz	wzr, #0, 1d26c <ZSTD_endStream@@Base+0xf318>
   1d138:	subs	w27, w27, #0x1
   1d13c:	cset	w8, cs  // cs = hs, nlast
   1d140:	cmp	w19, w26
   1d144:	b.ls	1d26c <ZSTD_endStream@@Base+0xf318>  // b.plast
   1d148:	cbnz	w8, 1d0b0 <ZSTD_endStream@@Base+0xf15c>
   1d14c:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1d150:	ldr	x8, [x27, #64]
   1d154:	ldr	x23, [x27, #8]
   1d158:	ldr	x1, [sp, #56]
   1d15c:	ldr	w24, [x27, #196]
   1d160:	stur	x8, [x29, #-56]
   1d164:	ldp	w9, w8, [x27, #184]
   1d168:	ldp	w10, w11, [x27, #28]
   1d16c:	sub	w22, w28, w23
   1d170:	mov	w3, #0x4                   	// #4
   1d174:	lsl	w9, w26, w9
   1d178:	sub	w12, w22, w10
   1d17c:	cmp	w12, w9
   1d180:	lsl	w21, w26, w8
   1d184:	sub	w8, w22, w9
   1d188:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1d18c:	csel	w25, w8, w10, eq  // eq = none
   1d190:	subs	w8, w22, w21
   1d194:	mov	x0, x27
   1d198:	mov	x2, x28
   1d19c:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   1d1a0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1d1a4:	cmp	w0, w25
   1d1a8:	b.ls	1d2d8 <ZSTD_endStream@@Base+0xf384>  // b.plast
   1d1ac:	ldur	x2, [x29, #-8]
   1d1b0:	lsl	w8, w26, w24
   1d1b4:	mov	w24, #0xc9ff                	// #51711
   1d1b8:	mov	w19, w0
   1d1bc:	sub	w21, w21, #0x1
   1d1c0:	add	w27, w22, #0x2
   1d1c4:	mov	w22, #0x3                   	// #3
   1d1c8:	sub	w26, w8, #0x1
   1d1cc:	movk	w24, #0x3b9a, lsl #16
   1d1d0:	add	x1, x23, w19, uxtw
   1d1d4:	ldrb	w8, [x1, x22]
   1d1d8:	ldrb	w9, [x28, x22]
   1d1dc:	cmp	w8, w9
   1d1e0:	b.ne	1d218 <ZSTD_endStream@@Base+0xf2c4>  // b.any
   1d1e4:	mov	x0, x28
   1d1e8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1d1ec:	ldur	x2, [x29, #-8]
   1d1f0:	cmp	x0, x22
   1d1f4:	b.hi	1d224 <ZSTD_endStream@@Base+0xf2d0>  // b.pmore
   1d1f8:	cmp	w19, w20
   1d1fc:	b.ls	1d240 <ZSTD_endStream@@Base+0xf2ec>  // b.plast
   1d200:	ldur	x9, [x29, #-56]
   1d204:	and	w8, w19, w21
   1d208:	ldr	w19, [x9, w8, uxtw #2]
   1d20c:	mov	w8, #0x1                   	// #1
   1d210:	tbnz	w8, #0, 1d258 <ZSTD_endStream@@Base+0xf304>
   1d214:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1d218:	mov	x0, xzr
   1d21c:	cmp	x0, x22
   1d220:	b.ls	1d1f8 <ZSTD_endStream@@Base+0xf2a4>  // b.plast
   1d224:	add	x8, x28, x0
   1d228:	cmp	x8, x2
   1d22c:	sub	w24, w27, w19
   1d230:	b.eq	1d24c <ZSTD_endStream@@Base+0xf2f8>  // b.none
   1d234:	mov	x22, x0
   1d238:	cmp	w19, w20
   1d23c:	b.hi	1d200 <ZSTD_endStream@@Base+0xf2ac>  // b.pmore
   1d240:	mov	w8, wzr
   1d244:	tbnz	wzr, #0, 1d258 <ZSTD_endStream@@Base+0xf304>
   1d248:	b	1d26c <ZSTD_endStream@@Base+0xf318>
   1d24c:	mov	x22, x0
   1d250:	mov	w8, wzr
   1d254:	tbz	wzr, #0, 1d26c <ZSTD_endStream@@Base+0xf318>
   1d258:	subs	w26, w26, #0x1
   1d25c:	cset	w8, cs  // cs = hs, nlast
   1d260:	cmp	w19, w25
   1d264:	b.ls	1d26c <ZSTD_endStream@@Base+0xf318>  // b.plast
   1d268:	cbnz	w8, 1d1d0 <ZSTD_endStream@@Base+0xf27c>
   1d26c:	cmp	x22, #0x4
   1d270:	b.cc	1d2ec <ZSTD_endStream@@Base+0xf398>  // b.lo, b.ul, b.last
   1d274:	ldur	x21, [x29, #-24]
   1d278:	add	w0, w21, #0x1
   1d27c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1d280:	mov	w19, w0
   1d284:	add	w0, w24, #0x1
   1d288:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1d28c:	ldur	x20, [x29, #-32]
   1d290:	lsl	w9, w22, #2
   1d294:	sub	w9, w9, w0
   1d298:	ldr	x27, [sp, #64]
   1d29c:	lsl	w8, w20, #2
   1d2a0:	sub	w8, w8, w19
   1d2a4:	add	w8, w8, #0x4
   1d2a8:	cmp	w9, w8
   1d2ac:	ldur	x9, [x29, #-48]
   1d2b0:	ldur	x25, [x29, #-64]
   1d2b4:	cset	w8, le
   1d2b8:	csel	x21, x24, x21, gt
   1d2bc:	csel	x9, x28, x9, gt
   1d2c0:	csel	x20, x22, x20, gt
   1d2c4:	mov	w26, #0x1                   	// #1
   1d2c8:	stur	x9, [x29, #-48]
   1d2cc:	ldur	x9, [x29, #-16]
   1d2d0:	tbnz	w8, #0, 1d308 <ZSTD_endStream@@Base+0xf3b4>
   1d2d4:	b	1ce58 <ZSTD_endStream@@Base+0xef04>
   1d2d8:	mov	w24, #0xc9ff                	// #51711
   1d2dc:	movk	w24, #0x3b9a, lsl #16
   1d2e0:	mov	w22, #0x3                   	// #3
   1d2e4:	cmp	x22, #0x4
   1d2e8:	b.cs	1d274 <ZSTD_endStream@@Base+0xf320>  // b.hs, b.nlast
   1d2ec:	ldr	x27, [sp, #64]
   1d2f0:	ldur	x25, [x29, #-64]
   1d2f4:	ldp	x20, x21, [x29, #-32]
   1d2f8:	mov	w8, #0x1                   	// #1
   1d2fc:	mov	w26, #0x1                   	// #1
   1d300:	ldur	x9, [x29, #-16]
   1d304:	tbz	w8, #0, 1ce58 <ZSTD_endStream@@Base+0xef04>
   1d308:	ldur	x8, [x29, #-40]
   1d30c:	cmp	x28, x8
   1d310:	b.cs	1cdd4 <ZSTD_endStream@@Base+0xee80>  // b.hs, b.nlast
   1d314:	add	x28, x9, #0x2
   1d318:	cbz	x21, 1d394 <ZSTD_endStream@@Base+0xf440>
   1d31c:	mov	x0, x28
   1d320:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1d324:	ldr	x8, [sp, #72]
   1d328:	mov	w19, w0
   1d32c:	add	x0, x28, x8
   1d330:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1d334:	ldr	w8, [sp, #52]
   1d338:	cbz	w8, 1d394 <ZSTD_endStream@@Base+0xf440>
   1d33c:	cmp	w19, w0
   1d340:	b.ne	1d394 <ZSTD_endStream@@Base+0xf440>  // b.any
   1d344:	ldp	x8, x2, [x29, #-16]
   1d348:	add	x0, x8, #0x6
   1d34c:	ldr	x8, [sp, #72]
   1d350:	add	x1, x0, x8
   1d354:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1d358:	cmn	x0, #0x5
   1d35c:	b.hi	1d394 <ZSTD_endStream@@Base+0xf440>  // b.pmore
   1d360:	add	x19, x0, #0x4
   1d364:	add	w0, w21, #0x1
   1d368:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1d36c:	mov	w8, #0x1                   	// #1
   1d370:	bfi	w8, w20, #2, #30
   1d374:	lsl	w9, w19, #2
   1d378:	sub	w8, w8, w0
   1d37c:	cmp	w9, w8
   1d380:	ldur	x8, [x29, #-48]
   1d384:	csel	x21, xzr, x21, gt
   1d388:	csel	x20, x19, x20, gt
   1d38c:	csel	x8, x28, x8, gt
   1d390:	stur	x8, [x29, #-48]
   1d394:	ldr	w8, [x27, #200]
   1d398:	stp	x20, x21, [x29, #-32]
   1d39c:	sub	w9, w8, #0x6
   1d3a0:	cmp	w9, #0x2
   1d3a4:	b.cs	1d4d0 <ZSTD_endStream@@Base+0xf57c>  // b.hs, b.nlast
   1d3a8:	ldr	x8, [x27, #64]
   1d3ac:	ldr	x23, [x27, #8]
   1d3b0:	ldr	x1, [sp, #56]
   1d3b4:	ldr	w24, [x27, #196]
   1d3b8:	stur	x8, [x29, #-56]
   1d3bc:	ldp	w9, w8, [x27, #184]
   1d3c0:	ldp	w10, w11, [x27, #28]
   1d3c4:	sub	w22, w28, w23
   1d3c8:	mov	w3, #0x6                   	// #6
   1d3cc:	lsl	w9, w26, w9
   1d3d0:	sub	w12, w22, w10
   1d3d4:	cmp	w12, w9
   1d3d8:	lsl	w21, w26, w8
   1d3dc:	sub	w8, w22, w9
   1d3e0:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1d3e4:	csel	w25, w8, w10, eq  // eq = none
   1d3e8:	subs	w8, w22, w21
   1d3ec:	mov	x0, x27
   1d3f0:	mov	x2, x28
   1d3f4:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   1d3f8:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1d3fc:	cmp	w0, w25
   1d400:	b.ls	1d718 <ZSTD_endStream@@Base+0xf7c4>  // b.plast
   1d404:	sub	w8, w21, #0x1
   1d408:	ldur	x2, [x29, #-8]
   1d40c:	ldur	x21, [x29, #-56]
   1d410:	stur	w8, [x29, #-16]
   1d414:	lsl	w8, w26, w24
   1d418:	mov	w24, #0xc9ff                	// #51711
   1d41c:	mov	w19, w0
   1d420:	add	w27, w22, #0x2
   1d424:	mov	w22, #0x3                   	// #3
   1d428:	sub	w26, w8, #0x1
   1d42c:	movk	w24, #0x3b9a, lsl #16
   1d430:	add	x1, x23, w19, uxtw
   1d434:	ldrb	w8, [x1, x22]
   1d438:	ldrb	w9, [x28, x22]
   1d43c:	cmp	w8, w9
   1d440:	b.ne	1d478 <ZSTD_endStream@@Base+0xf524>  // b.any
   1d444:	mov	x0, x28
   1d448:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1d44c:	ldur	x2, [x29, #-8]
   1d450:	cmp	x0, x22
   1d454:	b.hi	1d484 <ZSTD_endStream@@Base+0xf530>  // b.pmore
   1d458:	cmp	w19, w20
   1d45c:	b.ls	1d4a0 <ZSTD_endStream@@Base+0xf54c>  // b.plast
   1d460:	ldur	w8, [x29, #-16]
   1d464:	and	w8, w19, w8
   1d468:	ldr	w19, [x21, w8, uxtw #2]
   1d46c:	mov	w8, #0x1                   	// #1
   1d470:	tbnz	w8, #0, 1d4b8 <ZSTD_endStream@@Base+0xf564>
   1d474:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d478:	mov	x0, xzr
   1d47c:	cmp	x0, x22
   1d480:	b.ls	1d458 <ZSTD_endStream@@Base+0xf504>  // b.plast
   1d484:	add	x8, x28, x0
   1d488:	cmp	x8, x2
   1d48c:	sub	w24, w27, w19
   1d490:	b.eq	1d4ac <ZSTD_endStream@@Base+0xf558>  // b.none
   1d494:	mov	x22, x0
   1d498:	cmp	w19, w20
   1d49c:	b.hi	1d460 <ZSTD_endStream@@Base+0xf50c>  // b.pmore
   1d4a0:	mov	w8, wzr
   1d4a4:	tbnz	w8, #0, 1d4b8 <ZSTD_endStream@@Base+0xf564>
   1d4a8:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d4ac:	mov	w8, wzr
   1d4b0:	mov	x22, x0
   1d4b4:	tbz	w8, #0, 1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d4b8:	subs	w26, w26, #0x1
   1d4bc:	cset	w8, cs  // cs = hs, nlast
   1d4c0:	cmp	w19, w25
   1d4c4:	b.ls	1d724 <ZSTD_endStream@@Base+0xf7d0>  // b.plast
   1d4c8:	cbnz	w8, 1d430 <ZSTD_endStream@@Base+0xf4dc>
   1d4cc:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d4d0:	cmp	w8, #0x5
   1d4d4:	b.ne	1d5f8 <ZSTD_endStream@@Base+0xf6a4>  // b.any
   1d4d8:	ldr	x8, [x27, #64]
   1d4dc:	ldr	x23, [x27, #8]
   1d4e0:	ldr	x1, [sp, #56]
   1d4e4:	ldr	w24, [x27, #196]
   1d4e8:	stur	x8, [x29, #-16]
   1d4ec:	ldp	w9, w8, [x27, #184]
   1d4f0:	ldp	w10, w11, [x27, #28]
   1d4f4:	sub	w22, w28, w23
   1d4f8:	mov	w3, #0x5                   	// #5
   1d4fc:	lsl	w9, w26, w9
   1d500:	sub	w12, w22, w10
   1d504:	cmp	w12, w9
   1d508:	lsl	w21, w26, w8
   1d50c:	sub	w8, w22, w9
   1d510:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1d514:	csel	w25, w8, w10, eq  // eq = none
   1d518:	subs	w8, w22, w21
   1d51c:	mov	x0, x27
   1d520:	mov	x2, x28
   1d524:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   1d528:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1d52c:	cmp	w0, w25
   1d530:	b.ls	1d718 <ZSTD_endStream@@Base+0xf7c4>  // b.plast
   1d534:	ldur	x2, [x29, #-8]
   1d538:	lsl	w8, w26, w24
   1d53c:	mov	w24, #0xc9ff                	// #51711
   1d540:	mov	w19, w0
   1d544:	sub	w21, w21, #0x1
   1d548:	add	w27, w22, #0x2
   1d54c:	mov	w22, #0x3                   	// #3
   1d550:	sub	w26, w8, #0x1
   1d554:	movk	w24, #0x3b9a, lsl #16
   1d558:	add	x1, x23, w19, uxtw
   1d55c:	ldrb	w8, [x1, x22]
   1d560:	ldrb	w9, [x28, x22]
   1d564:	cmp	w8, w9
   1d568:	b.ne	1d5a0 <ZSTD_endStream@@Base+0xf64c>  // b.any
   1d56c:	mov	x0, x28
   1d570:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1d574:	ldur	x2, [x29, #-8]
   1d578:	cmp	x0, x22
   1d57c:	b.hi	1d5ac <ZSTD_endStream@@Base+0xf658>  // b.pmore
   1d580:	cmp	w19, w20
   1d584:	b.ls	1d5c8 <ZSTD_endStream@@Base+0xf674>  // b.plast
   1d588:	ldur	x9, [x29, #-16]
   1d58c:	and	w8, w19, w21
   1d590:	ldr	w19, [x9, w8, uxtw #2]
   1d594:	mov	w8, #0x1                   	// #1
   1d598:	tbnz	w8, #0, 1d5e0 <ZSTD_endStream@@Base+0xf68c>
   1d59c:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d5a0:	mov	x0, xzr
   1d5a4:	cmp	x0, x22
   1d5a8:	b.ls	1d580 <ZSTD_endStream@@Base+0xf62c>  // b.plast
   1d5ac:	add	x8, x28, x0
   1d5b0:	cmp	x8, x2
   1d5b4:	sub	w24, w27, w19
   1d5b8:	b.eq	1d5d4 <ZSTD_endStream@@Base+0xf680>  // b.none
   1d5bc:	mov	x22, x0
   1d5c0:	cmp	w19, w20
   1d5c4:	b.hi	1d588 <ZSTD_endStream@@Base+0xf634>  // b.pmore
   1d5c8:	mov	w8, wzr
   1d5cc:	tbnz	wzr, #0, 1d5e0 <ZSTD_endStream@@Base+0xf68c>
   1d5d0:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d5d4:	mov	x22, x0
   1d5d8:	mov	w8, wzr
   1d5dc:	tbz	wzr, #0, 1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d5e0:	subs	w26, w26, #0x1
   1d5e4:	cset	w8, cs  // cs = hs, nlast
   1d5e8:	cmp	w19, w25
   1d5ec:	b.ls	1d724 <ZSTD_endStream@@Base+0xf7d0>  // b.plast
   1d5f0:	cbnz	w8, 1d558 <ZSTD_endStream@@Base+0xf604>
   1d5f4:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d5f8:	ldr	x8, [x27, #64]
   1d5fc:	ldr	x23, [x27, #8]
   1d600:	ldr	x1, [sp, #56]
   1d604:	ldr	w24, [x27, #196]
   1d608:	stur	x8, [x29, #-16]
   1d60c:	ldp	w9, w8, [x27, #184]
   1d610:	ldp	w10, w11, [x27, #28]
   1d614:	sub	w22, w28, w23
   1d618:	mov	w3, #0x4                   	// #4
   1d61c:	lsl	w9, w26, w9
   1d620:	sub	w12, w22, w10
   1d624:	cmp	w12, w9
   1d628:	lsl	w21, w26, w8
   1d62c:	sub	w8, w22, w9
   1d630:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1d634:	csel	w25, w8, w10, eq  // eq = none
   1d638:	subs	w8, w22, w21
   1d63c:	mov	x0, x27
   1d640:	mov	x2, x28
   1d644:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   1d648:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1d64c:	cmp	w0, w25
   1d650:	b.ls	1d718 <ZSTD_endStream@@Base+0xf7c4>  // b.plast
   1d654:	ldur	x2, [x29, #-8]
   1d658:	lsl	w8, w26, w24
   1d65c:	mov	w24, #0xc9ff                	// #51711
   1d660:	mov	w19, w0
   1d664:	sub	w21, w21, #0x1
   1d668:	add	w27, w22, #0x2
   1d66c:	mov	w22, #0x3                   	// #3
   1d670:	sub	w26, w8, #0x1
   1d674:	movk	w24, #0x3b9a, lsl #16
   1d678:	add	x1, x23, w19, uxtw
   1d67c:	ldrb	w8, [x1, x22]
   1d680:	ldrb	w9, [x28, x22]
   1d684:	cmp	w8, w9
   1d688:	b.ne	1d6c0 <ZSTD_endStream@@Base+0xf76c>  // b.any
   1d68c:	mov	x0, x28
   1d690:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1d694:	ldur	x2, [x29, #-8]
   1d698:	cmp	x0, x22
   1d69c:	b.hi	1d6cc <ZSTD_endStream@@Base+0xf778>  // b.pmore
   1d6a0:	cmp	w19, w20
   1d6a4:	b.ls	1d6e8 <ZSTD_endStream@@Base+0xf794>  // b.plast
   1d6a8:	ldur	x9, [x29, #-16]
   1d6ac:	and	w8, w19, w21
   1d6b0:	ldr	w19, [x9, w8, uxtw #2]
   1d6b4:	mov	w8, #0x1                   	// #1
   1d6b8:	tbnz	w8, #0, 1d700 <ZSTD_endStream@@Base+0xf7ac>
   1d6bc:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d6c0:	mov	x0, xzr
   1d6c4:	cmp	x0, x22
   1d6c8:	b.ls	1d6a0 <ZSTD_endStream@@Base+0xf74c>  // b.plast
   1d6cc:	add	x8, x28, x0
   1d6d0:	cmp	x8, x2
   1d6d4:	sub	w24, w27, w19
   1d6d8:	b.eq	1d6f4 <ZSTD_endStream@@Base+0xf7a0>  // b.none
   1d6dc:	mov	x22, x0
   1d6e0:	cmp	w19, w20
   1d6e4:	b.hi	1d6a8 <ZSTD_endStream@@Base+0xf754>  // b.pmore
   1d6e8:	mov	w8, wzr
   1d6ec:	tbnz	wzr, #0, 1d700 <ZSTD_endStream@@Base+0xf7ac>
   1d6f0:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d6f4:	mov	x22, x0
   1d6f8:	mov	w8, wzr
   1d6fc:	tbz	wzr, #0, 1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d700:	subs	w26, w26, #0x1
   1d704:	cset	w8, cs  // cs = hs, nlast
   1d708:	cmp	w19, w25
   1d70c:	b.ls	1d724 <ZSTD_endStream@@Base+0xf7d0>  // b.plast
   1d710:	cbnz	w8, 1d678 <ZSTD_endStream@@Base+0xf724>
   1d714:	b	1d724 <ZSTD_endStream@@Base+0xf7d0>
   1d718:	mov	w24, #0xc9ff                	// #51711
   1d71c:	movk	w24, #0x3b9a, lsl #16
   1d720:	mov	w22, #0x3                   	// #3
   1d724:	cmp	x22, #0x4
   1d728:	b.cc	1ce40 <ZSTD_endStream@@Base+0xeeec>  // b.lo, b.ul, b.last
   1d72c:	ldur	x21, [x29, #-24]
   1d730:	add	w0, w21, #0x1
   1d734:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1d738:	mov	w19, w0
   1d73c:	add	w0, w24, #0x1
   1d740:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1d744:	ldur	x20, [x29, #-32]
   1d748:	lsl	w9, w22, #2
   1d74c:	sub	w9, w9, w0
   1d750:	ldr	x27, [sp, #64]
   1d754:	lsl	w8, w20, #2
   1d758:	sub	w8, w8, w19
   1d75c:	add	w8, w8, #0x7
   1d760:	cmp	w9, w8
   1d764:	ldur	x9, [x29, #-48]
   1d768:	ldur	x25, [x29, #-64]
   1d76c:	cset	w8, le
   1d770:	csel	x21, x24, x21, gt
   1d774:	csel	x9, x28, x9, gt
   1d778:	csel	x20, x22, x20, gt
   1d77c:	mov	w26, #0x1                   	// #1
   1d780:	stur	x9, [x29, #-48]
   1d784:	cbz	w8, 1ce58 <ZSTD_endStream@@Base+0xef04>
   1d788:	b	1cdd4 <ZSTD_endStream@@Base+0xee80>
   1d78c:	ldr	w22, [sp, #52]
   1d790:	ldp	x24, x23, [sp, #32]
   1d794:	ldur	x2, [x29, #-48]
   1d798:	stur	x20, [x29, #-32]
   1d79c:	mov	w28, #0x2                   	// #2
   1d7a0:	b	1d7cc <ZSTD_endStream@@Base+0xf878>
   1d7a4:	ldr	w13, [sp, #52]
   1d7a8:	ldp	x24, x23, [sp, #32]
   1d7ac:	mov	x8, x11
   1d7b0:	mov	w28, #0x2                   	// #2
   1d7b4:	b	1d7bc <ZSTD_endStream@@Base+0xf868>
   1d7b8:	mov	x8, x14
   1d7bc:	sub	w22, w21, #0x2
   1d7c0:	mov	x2, x8
   1d7c4:	stur	x20, [x29, #-32]
   1d7c8:	str	w13, [sp, #48]
   1d7cc:	ldr	x0, [x23, #24]
   1d7d0:	cmp	x2, x24
   1d7d4:	sub	x20, x2, x25
   1d7d8:	stur	x21, [x29, #-24]
   1d7dc:	stur	x2, [x29, #-48]
   1d7e0:	b.ls	1d7f4 <ZSTD_endStream@@Base+0xf8a0>  // b.plast
   1d7e4:	mov	x1, x25
   1d7e8:	mov	x3, x24
   1d7ec:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1d7f0:	b	1d85c <ZSTD_endStream@@Base+0xf908>
   1d7f4:	mov	x1, x25
   1d7f8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1d7fc:	cmp	x20, #0x11
   1d800:	b.cc	1d85c <ZSTD_endStream@@Base+0xf908>  // b.lo, b.ul, b.last
   1d804:	ldr	x19, [x23, #24]
   1d808:	add	x1, x25, #0x10
   1d80c:	add	x0, x19, #0x10
   1d810:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1d814:	add	x0, x19, #0x20
   1d818:	add	x1, x25, #0x20
   1d81c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1d820:	cmp	x20, #0x31
   1d824:	b.lt	1d85c <ZSTD_endStream@@Base+0xf908>  // b.tstop
   1d828:	add	x21, x19, x20
   1d82c:	add	x19, x19, #0x30
   1d830:	add	x25, x25, #0x40
   1d834:	sub	x1, x25, #0x10
   1d838:	mov	x0, x19
   1d83c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1d840:	add	x0, x19, #0x10
   1d844:	mov	x1, x25
   1d848:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1d84c:	add	x19, x19, #0x20
   1d850:	cmp	x19, x21
   1d854:	add	x25, x25, #0x20
   1d858:	b.cc	1d834 <ZSTD_endStream@@Base+0xf8e0>  // b.lo, b.ul, b.last
   1d85c:	ldr	x9, [x23, #24]
   1d860:	ldur	x12, [x29, #-32]
   1d864:	cmp	x20, #0x10, lsl #12
   1d868:	add	x9, x9, x20
   1d86c:	sub	x8, x12, #0x3
   1d870:	str	x9, [x23, #24]
   1d874:	b.cc	1d888 <ZSTD_endStream@@Base+0xf934>  // b.lo, b.ul, b.last
   1d878:	ldp	x10, x9, [x23]
   1d87c:	sub	x9, x9, x10
   1d880:	lsr	x9, x9, #3
   1d884:	stp	w26, w9, [x23, #72]
   1d888:	ldur	x10, [x29, #-24]
   1d88c:	ldr	x9, [x23, #8]
   1d890:	cmp	x8, #0x10, lsl #12
   1d894:	add	w10, w10, #0x1
   1d898:	strh	w20, [x9, #4]
   1d89c:	str	w10, [x9]
   1d8a0:	b.cc	1d8b4 <ZSTD_endStream@@Base+0xf960>  // b.lo, b.ul, b.last
   1d8a4:	ldp	x11, x10, [x23]
   1d8a8:	sub	x10, x10, x11
   1d8ac:	lsr	x10, x10, #3
   1d8b0:	stp	w28, w10, [x23, #72]
   1d8b4:	strh	w8, [x9, #6]
   1d8b8:	add	x8, x9, #0x8
   1d8bc:	str	x8, [x23, #8]
   1d8c0:	ldur	x8, [x29, #-48]
   1d8c4:	ldr	w9, [sp, #48]
   1d8c8:	add	x25, x8, x12
   1d8cc:	cbz	w9, 1d9b8 <ZSTD_endStream@@Base+0xfa64>
   1d8d0:	ldur	x8, [x29, #-40]
   1d8d4:	cmp	x25, x8
   1d8d8:	b.hi	1d9a4 <ZSTD_endStream@@Base+0xfa50>  // b.pmore
   1d8dc:	ldr	w20, [sp, #48]
   1d8e0:	mov	w8, w22
   1d8e4:	mov	x0, x25
   1d8e8:	mov	w22, w20
   1d8ec:	mov	w20, w8
   1d8f0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1d8f4:	mov	w21, w22
   1d8f8:	mov	w19, w0
   1d8fc:	sub	x0, x25, x21
   1d900:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1d904:	cmp	w19, w0
   1d908:	b.ne	1d9b0 <ZSTD_endStream@@Base+0xfa5c>  // b.any
   1d90c:	ldur	x2, [x29, #-8]
   1d910:	neg	x8, x21
   1d914:	add	x0, x25, #0x4
   1d918:	add	x1, x0, x8
   1d91c:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1d920:	mov	x19, x0
   1d924:	ldr	x0, [x23, #24]
   1d928:	cmp	x25, x24
   1d92c:	add	x21, x19, #0x1
   1d930:	mov	x1, x25
   1d934:	b.ls	1d948 <ZSTD_endStream@@Base+0xf9f4>  // b.plast
   1d938:	mov	x2, x25
   1d93c:	mov	x3, x24
   1d940:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1d944:	b	1d94c <ZSTD_endStream@@Base+0xf9f8>
   1d948:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1d94c:	ldr	x9, [x23, #8]
   1d950:	add	x8, x19, #0x4
   1d954:	cmp	x21, #0x10, lsl #12
   1d958:	strh	wzr, [x9, #4]
   1d95c:	str	w26, [x9]
   1d960:	b.cc	1d974 <ZSTD_endStream@@Base+0xfa20>  // b.lo, b.ul, b.last
   1d964:	ldp	x11, x10, [x23]
   1d968:	sub	x10, x10, x11
   1d96c:	lsr	x10, x10, #3
   1d970:	stp	w28, w10, [x23, #72]
   1d974:	strh	w21, [x9, #6]
   1d978:	add	x9, x9, #0x8
   1d97c:	add	x25, x25, x8
   1d980:	str	x9, [x23, #8]
   1d984:	cbz	w20, 1d9c0 <ZSTD_endStream@@Base+0xfa6c>
   1d988:	ldur	x8, [x29, #-40]
   1d98c:	mov	w9, w20
   1d990:	mov	x15, x25
   1d994:	cmp	x25, x8
   1d998:	mov	w8, w22
   1d99c:	b.ls	1d8e4 <ZSTD_endStream@@Base+0xf990>  // b.plast
   1d9a0:	b	1c9b8 <ZSTD_endStream@@Base+0xea64>
   1d9a4:	ldr	w9, [sp, #48]
   1d9a8:	mov	x15, x25
   1d9ac:	b	1c9b8 <ZSTD_endStream@@Base+0xea64>
   1d9b0:	mov	w9, w22
   1d9b4:	mov	w22, w20
   1d9b8:	mov	x15, x25
   1d9bc:	b	1c9b8 <ZSTD_endStream@@Base+0xea64>
   1d9c0:	mov	w9, w20
   1d9c4:	mov	x15, x25
   1d9c8:	b	1c9b8 <ZSTD_endStream@@Base+0xea64>
   1d9cc:	ldur	x8, [x29, #-8]
   1d9d0:	ldr	w9, [sp, #12]
   1d9d4:	ldr	w10, [sp, #48]
   1d9d8:	cmp	w22, #0x0
   1d9dc:	sub	x0, x8, x25
   1d9e0:	csel	w8, w9, w22, eq  // eq = none
   1d9e4:	cmp	w10, #0x0
   1d9e8:	csel	w9, w9, w10, eq  // eq = none
   1d9ec:	ldr	x10, [sp, #16]
   1d9f0:	stp	w8, w9, [x10]
   1d9f4:	ldp	x20, x19, [sp, #224]
   1d9f8:	ldp	x22, x21, [sp, #208]
   1d9fc:	ldp	x24, x23, [sp, #192]
   1da00:	ldp	x26, x25, [sp, #176]
   1da04:	ldp	x28, x27, [sp, #160]
   1da08:	ldp	x29, x30, [sp, #144]
   1da0c:	add	sp, sp, #0xf0
   1da10:	ret
   1da14:	sub	sp, sp, #0xe0
   1da18:	stp	x29, x30, [sp, #128]
   1da1c:	stp	x28, x27, [sp, #144]
   1da20:	stp	x26, x25, [sp, #160]
   1da24:	stp	x24, x23, [sp, #176]
   1da28:	stp	x22, x21, [sp, #192]
   1da2c:	stp	x20, x19, [sp, #208]
   1da30:	ldr	x8, [x0, #8]
   1da34:	ldr	w9, [x0, #24]
   1da38:	ldp	w10, w11, [x2]
   1da3c:	add	x12, x3, x4
   1da40:	sub	x13, x12, #0x8
   1da44:	add	x8, x8, x9
   1da48:	cmp	w3, w8
   1da4c:	cinc	x27, x3, eq  // eq = none
   1da50:	stp	x2, x8, [sp, #8]
   1da54:	sub	w8, w27, w8
   1da58:	cmp	w11, w8
   1da5c:	csel	w9, w11, wzr, hi  // hi = pmore
   1da60:	csel	w19, wzr, w11, hi  // hi = pmore
   1da64:	cmp	w10, w8
   1da68:	add	x29, sp, #0x80
   1da6c:	csel	w8, w10, w9, hi  // hi = pmore
   1da70:	csel	w23, wzr, w10, hi  // hi = pmore
   1da74:	cmp	x27, x13
   1da78:	str	x3, [sp, #40]
   1da7c:	str	w8, [sp, #4]
   1da80:	stur	x13, [x29, #-32]
   1da84:	stur	x12, [x29, #-8]
   1da88:	b.cs	1e644 <ZSTD_endStream@@Base+0x106f0>  // b.hs, b.nlast
   1da8c:	mov	x22, x0
   1da90:	sub	x28, x12, #0x20
   1da94:	add	x8, x0, #0xb8
   1da98:	mov	w25, #0x1                   	// #1
   1da9c:	mov	x24, x1
   1daa0:	str	x8, [sp, #64]
   1daa4:	stur	x0, [x29, #-56]
   1daa8:	stp	x28, x1, [sp, #24]
   1daac:	b	1dadc <ZSTD_endStream@@Base+0xfb88>
   1dab0:	ldr	x26, [sp, #40]
   1dab4:	ldur	x22, [x29, #-56]
   1dab8:	ldp	w19, w23, [sp, #48]
   1dabc:	mov	w25, #0x1                   	// #1
   1dac0:	sub	x8, x27, x26
   1dac4:	add	x8, x27, x8, asr #8
   1dac8:	add	x27, x8, #0x1
   1dacc:	ldur	x8, [x29, #-32]
   1dad0:	str	x26, [sp, #40]
   1dad4:	cmp	x27, x8
   1dad8:	b.cs	1e644 <ZSTD_endStream@@Base+0x106f0>  // b.hs, b.nlast
   1dadc:	add	x20, x27, #0x1
   1dae0:	mov	w8, w23
   1dae4:	neg	x9, x8
   1dae8:	sub	x0, x20, x8
   1daec:	str	x9, [sp, #56]
   1daf0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1daf4:	mov	w28, w0
   1daf8:	mov	x0, x20
   1dafc:	stur	x20, [x29, #-24]
   1db00:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1db04:	mov	x10, xzr
   1db08:	str	w23, [sp, #52]
   1db0c:	cbz	w23, 1db30 <ZSTD_endStream@@Base+0xfbdc>
   1db10:	cmp	w28, w0
   1db14:	b.ne	1db30 <ZSTD_endStream@@Base+0xfbdc>  // b.any
   1db18:	ldr	x8, [sp, #56]
   1db1c:	ldur	x2, [x29, #-8]
   1db20:	add	x0, x27, #0x5
   1db24:	add	x1, x0, x8
   1db28:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1db2c:	add	x10, x0, #0x4
   1db30:	ldr	w8, [x22, #200]
   1db34:	str	w19, [sp, #48]
   1db38:	stur	x10, [x29, #-40]
   1db3c:	sub	w9, w8, #0x6
   1db40:	cmp	w9, #0x2
   1db44:	b.cs	1dc6c <ZSTD_endStream@@Base+0xfd18>  // b.hs, b.nlast
   1db48:	ldr	x8, [x22, #64]
   1db4c:	ldr	x19, [x22, #8]
   1db50:	ldr	x1, [sp, #64]
   1db54:	ldr	w21, [x22, #196]
   1db58:	stur	x8, [x29, #-16]
   1db5c:	ldp	w9, w8, [x22, #184]
   1db60:	ldp	w10, w11, [x22, #28]
   1db64:	sub	w20, w27, w19
   1db68:	mov	x0, x22
   1db6c:	lsl	w9, w25, w9
   1db70:	sub	w12, w20, w10
   1db74:	cmp	w12, w9
   1db78:	lsl	w22, w25, w8
   1db7c:	sub	w8, w20, w9
   1db80:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1db84:	csel	w26, w8, w10, eq  // eq = none
   1db88:	subs	w8, w20, w22
   1db8c:	mov	w3, #0x6                   	// #6
   1db90:	mov	x2, x27
   1db94:	csel	w24, wzr, w8, cc  // cc = lo, ul, last
   1db98:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1db9c:	cmp	w0, w26
   1dba0:	mov	w8, #0x1                   	// #1
   1dba4:	b.ls	1debc <ZSTD_endStream@@Base+0xff68>  // b.plast
   1dba8:	ldur	x2, [x29, #-8]
   1dbac:	sub	w25, w22, #0x1
   1dbb0:	lsl	w8, w8, w21
   1dbb4:	mov	w22, #0xc9ff                	// #51711
   1dbb8:	mov	w28, w0
   1dbbc:	add	w20, w20, #0x2
   1dbc0:	mov	w23, #0x3                   	// #3
   1dbc4:	sub	w21, w8, #0x1
   1dbc8:	movk	w22, #0x3b9a, lsl #16
   1dbcc:	add	x1, x19, w28, uxtw
   1dbd0:	ldrb	w8, [x1, x23]
   1dbd4:	ldrb	w9, [x27, x23]
   1dbd8:	cmp	w8, w9
   1dbdc:	b.ne	1dc14 <ZSTD_endStream@@Base+0xfcc0>  // b.any
   1dbe0:	mov	x0, x27
   1dbe4:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1dbe8:	ldur	x2, [x29, #-8]
   1dbec:	cmp	x0, x23
   1dbf0:	b.hi	1dc20 <ZSTD_endStream@@Base+0xfccc>  // b.pmore
   1dbf4:	cmp	w28, w24
   1dbf8:	b.ls	1dc3c <ZSTD_endStream@@Base+0xfce8>  // b.plast
   1dbfc:	ldur	x9, [x29, #-16]
   1dc00:	and	w8, w28, w25
   1dc04:	ldr	w28, [x9, w8, uxtw #2]
   1dc08:	mov	w8, #0x1                   	// #1
   1dc0c:	tbnz	w8, #0, 1dc54 <ZSTD_endStream@@Base+0xfd00>
   1dc10:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1dc14:	mov	x0, xzr
   1dc18:	cmp	x0, x23
   1dc1c:	b.ls	1dbf4 <ZSTD_endStream@@Base+0xfca0>  // b.plast
   1dc20:	add	x8, x27, x0
   1dc24:	cmp	x8, x2
   1dc28:	sub	w22, w20, w28
   1dc2c:	b.eq	1dc48 <ZSTD_endStream@@Base+0xfcf4>  // b.none
   1dc30:	mov	x23, x0
   1dc34:	cmp	w28, w24
   1dc38:	b.hi	1dbfc <ZSTD_endStream@@Base+0xfca8>  // b.pmore
   1dc3c:	mov	w8, wzr
   1dc40:	tbnz	w8, #0, 1dc54 <ZSTD_endStream@@Base+0xfd00>
   1dc44:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1dc48:	mov	w8, wzr
   1dc4c:	mov	x23, x0
   1dc50:	tbz	w8, #0, 1dec8 <ZSTD_endStream@@Base+0xff74>
   1dc54:	subs	w21, w21, #0x1
   1dc58:	cset	w8, cs  // cs = hs, nlast
   1dc5c:	cmp	w28, w26
   1dc60:	b.ls	1dec8 <ZSTD_endStream@@Base+0xff74>  // b.plast
   1dc64:	cbnz	w8, 1dbcc <ZSTD_endStream@@Base+0xfc78>
   1dc68:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1dc6c:	cmp	w8, #0x5
   1dc70:	b.ne	1dd98 <ZSTD_endStream@@Base+0xfe44>  // b.any
   1dc74:	ldr	x24, [x22, #8]
   1dc78:	ldp	w9, w8, [x22, #184]
   1dc7c:	ldp	w10, w11, [x22, #28]
   1dc80:	ldr	x1, [sp, #64]
   1dc84:	sub	w20, w27, w24
   1dc88:	lsl	w9, w25, w9
   1dc8c:	sub	w12, w20, w10
   1dc90:	ldr	x23, [x22, #64]
   1dc94:	cmp	w12, w9
   1dc98:	ldr	w21, [x22, #196]
   1dc9c:	mov	x0, x22
   1dca0:	lsl	w22, w25, w8
   1dca4:	sub	w8, w20, w9
   1dca8:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1dcac:	csel	w19, w8, w10, eq  // eq = none
   1dcb0:	subs	w8, w20, w22
   1dcb4:	mov	w3, #0x5                   	// #5
   1dcb8:	mov	x2, x27
   1dcbc:	csel	w26, wzr, w8, cc  // cc = lo, ul, last
   1dcc0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1dcc4:	cmp	w0, w19
   1dcc8:	b.ls	1debc <ZSTD_endStream@@Base+0xff68>  // b.plast
   1dccc:	ldur	x2, [x29, #-8]
   1dcd0:	mov	w8, #0x1                   	// #1
   1dcd4:	sub	w25, w22, #0x1
   1dcd8:	lsl	w8, w8, w21
   1dcdc:	mov	w22, #0xc9ff                	// #51711
   1dce0:	mov	w28, w0
   1dce4:	stur	x23, [x29, #-16]
   1dce8:	add	w20, w20, #0x2
   1dcec:	mov	w23, #0x3                   	// #3
   1dcf0:	sub	w21, w8, #0x1
   1dcf4:	movk	w22, #0x3b9a, lsl #16
   1dcf8:	add	x1, x24, w28, uxtw
   1dcfc:	ldrb	w8, [x1, x23]
   1dd00:	ldrb	w9, [x27, x23]
   1dd04:	cmp	w8, w9
   1dd08:	b.ne	1dd40 <ZSTD_endStream@@Base+0xfdec>  // b.any
   1dd0c:	mov	x0, x27
   1dd10:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1dd14:	ldur	x2, [x29, #-8]
   1dd18:	cmp	x0, x23
   1dd1c:	b.hi	1dd4c <ZSTD_endStream@@Base+0xfdf8>  // b.pmore
   1dd20:	cmp	w28, w26
   1dd24:	b.ls	1dd68 <ZSTD_endStream@@Base+0xfe14>  // b.plast
   1dd28:	ldur	x9, [x29, #-16]
   1dd2c:	and	w8, w28, w25
   1dd30:	ldr	w28, [x9, w8, uxtw #2]
   1dd34:	mov	w8, #0x1                   	// #1
   1dd38:	tbnz	w8, #0, 1dd80 <ZSTD_endStream@@Base+0xfe2c>
   1dd3c:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1dd40:	mov	x0, xzr
   1dd44:	cmp	x0, x23
   1dd48:	b.ls	1dd20 <ZSTD_endStream@@Base+0xfdcc>  // b.plast
   1dd4c:	add	x8, x27, x0
   1dd50:	cmp	x8, x2
   1dd54:	sub	w22, w20, w28
   1dd58:	b.eq	1dd74 <ZSTD_endStream@@Base+0xfe20>  // b.none
   1dd5c:	mov	x23, x0
   1dd60:	cmp	w28, w26
   1dd64:	b.hi	1dd28 <ZSTD_endStream@@Base+0xfdd4>  // b.pmore
   1dd68:	mov	w8, wzr
   1dd6c:	tbnz	wzr, #0, 1dd80 <ZSTD_endStream@@Base+0xfe2c>
   1dd70:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1dd74:	mov	x23, x0
   1dd78:	mov	w8, wzr
   1dd7c:	tbz	wzr, #0, 1dec8 <ZSTD_endStream@@Base+0xff74>
   1dd80:	subs	w21, w21, #0x1
   1dd84:	cset	w8, cs  // cs = hs, nlast
   1dd88:	cmp	w28, w19
   1dd8c:	b.ls	1dec8 <ZSTD_endStream@@Base+0xff74>  // b.plast
   1dd90:	cbnz	w8, 1dcf8 <ZSTD_endStream@@Base+0xfda4>
   1dd94:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1dd98:	ldr	x19, [x22, #8]
   1dd9c:	ldp	w9, w8, [x22, #184]
   1dda0:	ldp	w10, w11, [x22, #28]
   1dda4:	ldr	x1, [sp, #64]
   1dda8:	sub	w20, w27, w19
   1ddac:	lsl	w9, w25, w9
   1ddb0:	sub	w12, w20, w10
   1ddb4:	ldr	x23, [x22, #64]
   1ddb8:	cmp	w12, w9
   1ddbc:	ldr	w21, [x22, #196]
   1ddc0:	mov	x0, x22
   1ddc4:	lsl	w22, w25, w8
   1ddc8:	sub	w8, w20, w9
   1ddcc:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1ddd0:	csel	w26, w8, w10, eq  // eq = none
   1ddd4:	subs	w8, w20, w22
   1ddd8:	mov	w3, #0x4                   	// #4
   1dddc:	mov	x2, x27
   1dde0:	csel	w24, wzr, w8, cc  // cc = lo, ul, last
   1dde4:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1dde8:	cmp	w0, w26
   1ddec:	b.ls	1debc <ZSTD_endStream@@Base+0xff68>  // b.plast
   1ddf0:	ldur	x2, [x29, #-8]
   1ddf4:	mov	w8, #0x1                   	// #1
   1ddf8:	sub	w25, w22, #0x1
   1ddfc:	lsl	w8, w8, w21
   1de00:	mov	w22, #0xc9ff                	// #51711
   1de04:	mov	w28, w0
   1de08:	stur	x23, [x29, #-16]
   1de0c:	add	w20, w20, #0x2
   1de10:	mov	w23, #0x3                   	// #3
   1de14:	sub	w21, w8, #0x1
   1de18:	movk	w22, #0x3b9a, lsl #16
   1de1c:	add	x1, x19, w28, uxtw
   1de20:	ldrb	w8, [x1, x23]
   1de24:	ldrb	w9, [x27, x23]
   1de28:	cmp	w8, w9
   1de2c:	b.ne	1de64 <ZSTD_endStream@@Base+0xff10>  // b.any
   1de30:	mov	x0, x27
   1de34:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1de38:	ldur	x2, [x29, #-8]
   1de3c:	cmp	x0, x23
   1de40:	b.hi	1de70 <ZSTD_endStream@@Base+0xff1c>  // b.pmore
   1de44:	cmp	w28, w24
   1de48:	b.ls	1de8c <ZSTD_endStream@@Base+0xff38>  // b.plast
   1de4c:	ldur	x9, [x29, #-16]
   1de50:	and	w8, w28, w25
   1de54:	ldr	w28, [x9, w8, uxtw #2]
   1de58:	mov	w8, #0x1                   	// #1
   1de5c:	tbnz	w8, #0, 1dea4 <ZSTD_endStream@@Base+0xff50>
   1de60:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1de64:	mov	x0, xzr
   1de68:	cmp	x0, x23
   1de6c:	b.ls	1de44 <ZSTD_endStream@@Base+0xfef0>  // b.plast
   1de70:	add	x8, x27, x0
   1de74:	cmp	x8, x2
   1de78:	sub	w22, w20, w28
   1de7c:	b.eq	1de98 <ZSTD_endStream@@Base+0xff44>  // b.none
   1de80:	mov	x23, x0
   1de84:	cmp	w28, w24
   1de88:	b.hi	1de4c <ZSTD_endStream@@Base+0xfef8>  // b.pmore
   1de8c:	mov	w8, wzr
   1de90:	tbnz	wzr, #0, 1dea4 <ZSTD_endStream@@Base+0xff50>
   1de94:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1de98:	mov	x23, x0
   1de9c:	mov	w8, wzr
   1dea0:	tbz	wzr, #0, 1dec8 <ZSTD_endStream@@Base+0xff74>
   1dea4:	subs	w21, w21, #0x1
   1dea8:	cset	w8, cs  // cs = hs, nlast
   1deac:	cmp	w28, w26
   1deb0:	b.ls	1dec8 <ZSTD_endStream@@Base+0xff74>  // b.plast
   1deb4:	cbnz	w8, 1de1c <ZSTD_endStream@@Base+0xfec8>
   1deb8:	b	1dec8 <ZSTD_endStream@@Base+0xff74>
   1debc:	mov	w22, #0xc9ff                	// #51711
   1dec0:	movk	w22, #0x3b9a, lsl #16
   1dec4:	mov	w23, #0x3                   	// #3
   1dec8:	ldur	x10, [x29, #-40]
   1decc:	ldur	x8, [x29, #-24]
   1ded0:	cmp	x23, x10
   1ded4:	csel	x9, x27, x8, hi  // hi = pmore
   1ded8:	csel	x8, x23, x10, hi  // hi = pmore
   1dedc:	csel	x26, x22, xzr, hi  // hi = pmore
   1dee0:	cmp	x8, #0x3
   1dee4:	b.ls	1dab0 <ZSTD_endStream@@Base+0xfb5c>  // b.plast
   1dee8:	stp	x8, x9, [x29, #-48]
   1deec:	ldur	x8, [x29, #-32]
   1def0:	ldur	x22, [x29, #-56]
   1def4:	mov	w20, #0x1                   	// #1
   1def8:	cmp	x27, x8
   1defc:	b.cs	1e3a0 <ZSTD_endStream@@Base+0x1044c>  // b.hs, b.nlast
   1df00:	add	x28, x27, #0x1
   1df04:	cbz	x26, 1df84 <ZSTD_endStream@@Base+0x10030>
   1df08:	mov	x0, x28
   1df0c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1df10:	ldr	x8, [sp, #56]
   1df14:	mov	w19, w0
   1df18:	add	x0, x28, x8
   1df1c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1df20:	ldr	w8, [sp, #52]
   1df24:	cbz	w8, 1df84 <ZSTD_endStream@@Base+0x10030>
   1df28:	ldur	x2, [x29, #-8]
   1df2c:	cmp	w19, w0
   1df30:	b.ne	1df84 <ZSTD_endStream@@Base+0x10030>  // b.any
   1df34:	ldr	x8, [sp, #56]
   1df38:	add	x0, x27, #0x5
   1df3c:	add	x1, x0, x8
   1df40:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1df44:	cmn	x0, #0x5
   1df48:	b.hi	1df84 <ZSTD_endStream@@Base+0x10030>  // b.pmore
   1df4c:	add	x19, x0, #0x4
   1df50:	add	w0, w26, #0x1
   1df54:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1df58:	ldur	x10, [x29, #-48]
   1df5c:	add	w9, w19, w19, lsl #1
   1df60:	add	w8, w10, w10, lsl #1
   1df64:	sub	w8, w8, w0
   1df68:	add	w8, w8, #0x1
   1df6c:	cmp	w9, w8
   1df70:	ldur	x8, [x29, #-40]
   1df74:	csel	x26, xzr, x26, gt
   1df78:	csel	x10, x19, x10, gt
   1df7c:	csel	x8, x28, x8, gt
   1df80:	stp	x10, x8, [x29, #-48]
   1df84:	ldr	w8, [x22, #200]
   1df88:	stur	x26, [x29, #-24]
   1df8c:	sub	w9, w8, #0x6
   1df90:	cmp	w9, #0x2
   1df94:	b.cs	1e0bc <ZSTD_endStream@@Base+0x10168>  // b.hs, b.nlast
   1df98:	ldr	x8, [x22, #64]
   1df9c:	ldr	x26, [x22, #8]
   1dfa0:	ldr	x1, [sp, #64]
   1dfa4:	ldr	w21, [x22, #196]
   1dfa8:	stur	x8, [x29, #-16]
   1dfac:	ldp	w9, w8, [x22, #184]
   1dfb0:	ldp	w10, w11, [x22, #28]
   1dfb4:	sub	w19, w28, w26
   1dfb8:	mov	w3, #0x6                   	// #6
   1dfbc:	lsl	w9, w20, w9
   1dfc0:	sub	w12, w19, w10
   1dfc4:	cmp	w12, w9
   1dfc8:	lsl	w20, w20, w8
   1dfcc:	sub	w8, w19, w9
   1dfd0:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1dfd4:	csel	w23, w8, w10, eq  // eq = none
   1dfd8:	subs	w8, w19, w20
   1dfdc:	mov	x0, x22
   1dfe0:	mov	x2, x28
   1dfe4:	mov	w24, #0x1                   	// #1
   1dfe8:	csel	w25, wzr, w8, cc  // cc = lo, ul, last
   1dfec:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1dff0:	cmp	w0, w23
   1dff4:	b.ls	1e368 <ZSTD_endStream@@Base+0x10414>  // b.plast
   1dff8:	ldur	x2, [x29, #-8]
   1dffc:	lsl	w8, w24, w21
   1e000:	mov	w24, #0xc9ff                	// #51711
   1e004:	mov	w27, w0
   1e008:	sub	w20, w20, #0x1
   1e00c:	add	w21, w19, #0x2
   1e010:	mov	w22, #0x3                   	// #3
   1e014:	sub	w19, w8, #0x1
   1e018:	movk	w24, #0x3b9a, lsl #16
   1e01c:	add	x1, x26, w27, uxtw
   1e020:	ldrb	w8, [x1, x22]
   1e024:	ldrb	w9, [x28, x22]
   1e028:	cmp	w8, w9
   1e02c:	b.ne	1e064 <ZSTD_endStream@@Base+0x10110>  // b.any
   1e030:	mov	x0, x28
   1e034:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1e038:	ldur	x2, [x29, #-8]
   1e03c:	cmp	x0, x22
   1e040:	b.hi	1e070 <ZSTD_endStream@@Base+0x1011c>  // b.pmore
   1e044:	cmp	w27, w25
   1e048:	b.ls	1e08c <ZSTD_endStream@@Base+0x10138>  // b.plast
   1e04c:	ldur	x9, [x29, #-16]
   1e050:	and	w8, w27, w20
   1e054:	ldr	w27, [x9, w8, uxtw #2]
   1e058:	mov	w8, #0x1                   	// #1
   1e05c:	tbnz	w8, #0, 1e0a4 <ZSTD_endStream@@Base+0x10150>
   1e060:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e064:	mov	x0, xzr
   1e068:	cmp	x0, x22
   1e06c:	b.ls	1e044 <ZSTD_endStream@@Base+0x100f0>  // b.plast
   1e070:	add	x8, x28, x0
   1e074:	cmp	x8, x2
   1e078:	sub	w24, w21, w27
   1e07c:	b.eq	1e098 <ZSTD_endStream@@Base+0x10144>  // b.none
   1e080:	mov	x22, x0
   1e084:	cmp	w27, w25
   1e088:	b.hi	1e04c <ZSTD_endStream@@Base+0x100f8>  // b.pmore
   1e08c:	mov	w8, wzr
   1e090:	tbnz	w8, #0, 1e0a4 <ZSTD_endStream@@Base+0x10150>
   1e094:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e098:	mov	w8, wzr
   1e09c:	mov	x22, x0
   1e0a0:	tbz	w8, #0, 1e308 <ZSTD_endStream@@Base+0x103b4>
   1e0a4:	subs	w19, w19, #0x1
   1e0a8:	cset	w8, cs  // cs = hs, nlast
   1e0ac:	cmp	w27, w23
   1e0b0:	b.ls	1e308 <ZSTD_endStream@@Base+0x103b4>  // b.plast
   1e0b4:	cbnz	w8, 1e01c <ZSTD_endStream@@Base+0x100c8>
   1e0b8:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e0bc:	cmp	w8, #0x5
   1e0c0:	b.ne	1e1e8 <ZSTD_endStream@@Base+0x10294>  // b.any
   1e0c4:	ldr	x8, [x22, #64]
   1e0c8:	ldr	x26, [x22, #8]
   1e0cc:	ldr	x1, [sp, #64]
   1e0d0:	ldr	w21, [x22, #196]
   1e0d4:	stur	x8, [x29, #-16]
   1e0d8:	ldp	w9, w8, [x22, #184]
   1e0dc:	ldp	w10, w11, [x22, #28]
   1e0e0:	sub	w19, w28, w26
   1e0e4:	mov	w3, #0x5                   	// #5
   1e0e8:	lsl	w9, w20, w9
   1e0ec:	sub	w12, w19, w10
   1e0f0:	cmp	w12, w9
   1e0f4:	lsl	w20, w20, w8
   1e0f8:	sub	w8, w19, w9
   1e0fc:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1e100:	csel	w23, w8, w10, eq  // eq = none
   1e104:	subs	w8, w19, w20
   1e108:	mov	x0, x22
   1e10c:	mov	x2, x28
   1e110:	mov	w24, #0x1                   	// #1
   1e114:	csel	w25, wzr, w8, cc  // cc = lo, ul, last
   1e118:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1e11c:	cmp	w0, w23
   1e120:	b.ls	1e368 <ZSTD_endStream@@Base+0x10414>  // b.plast
   1e124:	ldur	x2, [x29, #-8]
   1e128:	lsl	w8, w24, w21
   1e12c:	mov	w24, #0xc9ff                	// #51711
   1e130:	mov	w27, w0
   1e134:	sub	w20, w20, #0x1
   1e138:	add	w21, w19, #0x2
   1e13c:	mov	w22, #0x3                   	// #3
   1e140:	sub	w19, w8, #0x1
   1e144:	movk	w24, #0x3b9a, lsl #16
   1e148:	add	x1, x26, w27, uxtw
   1e14c:	ldrb	w8, [x1, x22]
   1e150:	ldrb	w9, [x28, x22]
   1e154:	cmp	w8, w9
   1e158:	b.ne	1e190 <ZSTD_endStream@@Base+0x1023c>  // b.any
   1e15c:	mov	x0, x28
   1e160:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1e164:	ldur	x2, [x29, #-8]
   1e168:	cmp	x0, x22
   1e16c:	b.hi	1e19c <ZSTD_endStream@@Base+0x10248>  // b.pmore
   1e170:	cmp	w27, w25
   1e174:	b.ls	1e1b8 <ZSTD_endStream@@Base+0x10264>  // b.plast
   1e178:	ldur	x9, [x29, #-16]
   1e17c:	and	w8, w27, w20
   1e180:	ldr	w27, [x9, w8, uxtw #2]
   1e184:	mov	w8, #0x1                   	// #1
   1e188:	tbnz	w8, #0, 1e1d0 <ZSTD_endStream@@Base+0x1027c>
   1e18c:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e190:	mov	x0, xzr
   1e194:	cmp	x0, x22
   1e198:	b.ls	1e170 <ZSTD_endStream@@Base+0x1021c>  // b.plast
   1e19c:	add	x8, x28, x0
   1e1a0:	cmp	x8, x2
   1e1a4:	sub	w24, w21, w27
   1e1a8:	b.eq	1e1c4 <ZSTD_endStream@@Base+0x10270>  // b.none
   1e1ac:	mov	x22, x0
   1e1b0:	cmp	w27, w25
   1e1b4:	b.hi	1e178 <ZSTD_endStream@@Base+0x10224>  // b.pmore
   1e1b8:	mov	w8, wzr
   1e1bc:	tbnz	wzr, #0, 1e1d0 <ZSTD_endStream@@Base+0x1027c>
   1e1c0:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e1c4:	mov	x22, x0
   1e1c8:	mov	w8, wzr
   1e1cc:	tbz	wzr, #0, 1e308 <ZSTD_endStream@@Base+0x103b4>
   1e1d0:	subs	w19, w19, #0x1
   1e1d4:	cset	w8, cs  // cs = hs, nlast
   1e1d8:	cmp	w27, w23
   1e1dc:	b.ls	1e308 <ZSTD_endStream@@Base+0x103b4>  // b.plast
   1e1e0:	cbnz	w8, 1e148 <ZSTD_endStream@@Base+0x101f4>
   1e1e4:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e1e8:	ldr	x8, [x22, #64]
   1e1ec:	ldr	x26, [x22, #8]
   1e1f0:	ldr	x1, [sp, #64]
   1e1f4:	ldr	w21, [x22, #196]
   1e1f8:	stur	x8, [x29, #-16]
   1e1fc:	ldp	w9, w8, [x22, #184]
   1e200:	ldp	w10, w11, [x22, #28]
   1e204:	sub	w19, w28, w26
   1e208:	mov	w3, #0x4                   	// #4
   1e20c:	lsl	w9, w20, w9
   1e210:	sub	w12, w19, w10
   1e214:	cmp	w12, w9
   1e218:	lsl	w20, w20, w8
   1e21c:	sub	w8, w19, w9
   1e220:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1e224:	csel	w23, w8, w10, eq  // eq = none
   1e228:	subs	w8, w19, w20
   1e22c:	mov	x0, x22
   1e230:	mov	x2, x28
   1e234:	mov	w24, #0x1                   	// #1
   1e238:	csel	w25, wzr, w8, cc  // cc = lo, ul, last
   1e23c:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1e240:	cmp	w0, w23
   1e244:	b.ls	1e368 <ZSTD_endStream@@Base+0x10414>  // b.plast
   1e248:	ldur	x2, [x29, #-8]
   1e24c:	lsl	w8, w24, w21
   1e250:	mov	w24, #0xc9ff                	// #51711
   1e254:	mov	w27, w0
   1e258:	sub	w20, w20, #0x1
   1e25c:	add	w21, w19, #0x2
   1e260:	mov	w22, #0x3                   	// #3
   1e264:	sub	w19, w8, #0x1
   1e268:	movk	w24, #0x3b9a, lsl #16
   1e26c:	add	x1, x26, w27, uxtw
   1e270:	ldrb	w8, [x1, x22]
   1e274:	ldrb	w9, [x28, x22]
   1e278:	cmp	w8, w9
   1e27c:	b.ne	1e2b4 <ZSTD_endStream@@Base+0x10360>  // b.any
   1e280:	mov	x0, x28
   1e284:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1e288:	ldur	x2, [x29, #-8]
   1e28c:	cmp	x0, x22
   1e290:	b.hi	1e2c0 <ZSTD_endStream@@Base+0x1036c>  // b.pmore
   1e294:	cmp	w27, w25
   1e298:	b.ls	1e2dc <ZSTD_endStream@@Base+0x10388>  // b.plast
   1e29c:	ldur	x9, [x29, #-16]
   1e2a0:	and	w8, w27, w20
   1e2a4:	ldr	w27, [x9, w8, uxtw #2]
   1e2a8:	mov	w8, #0x1                   	// #1
   1e2ac:	tbnz	w8, #0, 1e2f4 <ZSTD_endStream@@Base+0x103a0>
   1e2b0:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e2b4:	mov	x0, xzr
   1e2b8:	cmp	x0, x22
   1e2bc:	b.ls	1e294 <ZSTD_endStream@@Base+0x10340>  // b.plast
   1e2c0:	add	x8, x28, x0
   1e2c4:	cmp	x8, x2
   1e2c8:	sub	w24, w21, w27
   1e2cc:	b.eq	1e2e8 <ZSTD_endStream@@Base+0x10394>  // b.none
   1e2d0:	mov	x22, x0
   1e2d4:	cmp	w27, w25
   1e2d8:	b.hi	1e29c <ZSTD_endStream@@Base+0x10348>  // b.pmore
   1e2dc:	mov	w8, wzr
   1e2e0:	tbnz	wzr, #0, 1e2f4 <ZSTD_endStream@@Base+0x103a0>
   1e2e4:	b	1e308 <ZSTD_endStream@@Base+0x103b4>
   1e2e8:	mov	x22, x0
   1e2ec:	mov	w8, wzr
   1e2f0:	tbz	wzr, #0, 1e308 <ZSTD_endStream@@Base+0x103b4>
   1e2f4:	subs	w19, w19, #0x1
   1e2f8:	cset	w8, cs  // cs = hs, nlast
   1e2fc:	cmp	w27, w23
   1e300:	b.ls	1e308 <ZSTD_endStream@@Base+0x103b4>  // b.plast
   1e304:	cbnz	w8, 1e26c <ZSTD_endStream@@Base+0x10318>
   1e308:	cmp	x22, #0x4
   1e30c:	b.cc	1e37c <ZSTD_endStream@@Base+0x10428>  // b.lo, b.ul, b.last
   1e310:	ldur	x26, [x29, #-24]
   1e314:	add	w0, w26, #0x1
   1e318:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1e31c:	mov	w19, w0
   1e320:	add	w0, w24, #0x1
   1e324:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1e328:	ldur	x10, [x29, #-48]
   1e32c:	lsl	w9, w22, #2
   1e330:	sub	w9, w9, w0
   1e334:	mov	w20, #0x1                   	// #1
   1e338:	lsl	w8, w10, #2
   1e33c:	sub	w8, w8, w19
   1e340:	add	w8, w8, #0x4
   1e344:	cmp	w9, w8
   1e348:	ldur	x9, [x29, #-40]
   1e34c:	csel	x10, x22, x10, gt
   1e350:	ldur	x22, [x29, #-56]
   1e354:	cset	w8, le
   1e358:	csel	x9, x28, x9, gt
   1e35c:	csel	x26, x24, x26, gt
   1e360:	stp	x10, x9, [x29, #-48]
   1e364:	b	1e38c <ZSTD_endStream@@Base+0x10438>
   1e368:	mov	w24, #0xc9ff                	// #51711
   1e36c:	movk	w24, #0x3b9a, lsl #16
   1e370:	mov	w22, #0x3                   	// #3
   1e374:	cmp	x22, #0x4
   1e378:	b.cs	1e310 <ZSTD_endStream@@Base+0x103bc>  // b.hs, b.nlast
   1e37c:	ldur	x22, [x29, #-56]
   1e380:	ldur	x26, [x29, #-24]
   1e384:	mov	w8, #0x1                   	// #1
   1e388:	mov	w20, #0x1                   	// #1
   1e38c:	ldur	x9, [x29, #-32]
   1e390:	cmp	x28, x9
   1e394:	b.cs	1e3a0 <ZSTD_endStream@@Base+0x1044c>  // b.hs, b.nlast
   1e398:	mov	x27, x28
   1e39c:	cbz	w8, 1df00 <ZSTD_endStream@@Base+0xffac>
   1e3a0:	cbz	x26, 1e40c <ZSTD_endStream@@Base+0x104b8>
   1e3a4:	ldr	x25, [sp, #40]
   1e3a8:	ldur	x15, [x29, #-40]
   1e3ac:	cmp	x15, x25
   1e3b0:	b.ls	1e420 <ZSTD_endStream@@Base+0x104cc>  // b.plast
   1e3b4:	ldr	x12, [sp, #16]
   1e3b8:	sub	x8, x15, x26
   1e3bc:	add	x8, x8, #0x2
   1e3c0:	cmp	x8, x12
   1e3c4:	b.ls	1e420 <ZSTD_endStream@@Base+0x104cc>  // b.plast
   1e3c8:	ldr	w13, [sp, #52]
   1e3cc:	ldp	x28, x24, [sp, #24]
   1e3d0:	ldur	x14, [x29, #-48]
   1e3d4:	sub	x9, x20, x26
   1e3d8:	mov	x8, x15
   1e3dc:	ldrb	w10, [x8, #-1]!
   1e3e0:	ldrb	w11, [x15, x9]
   1e3e4:	cmp	w10, w11
   1e3e8:	b.ne	1e42c <ZSTD_endStream@@Base+0x104d8>  // b.any
   1e3ec:	cmp	x8, x25
   1e3f0:	add	x14, x14, #0x1
   1e3f4:	b.ls	1e430 <ZSTD_endStream@@Base+0x104dc>  // b.plast
   1e3f8:	add	x10, x15, x9
   1e3fc:	cmp	x10, x12
   1e400:	mov	x15, x8
   1e404:	b.hi	1e3dc <ZSTD_endStream@@Base+0x10488>  // b.pmore
   1e408:	b	1e430 <ZSTD_endStream@@Base+0x104dc>
   1e40c:	ldr	w23, [sp, #52]
   1e410:	ldp	x28, x24, [sp, #24]
   1e414:	ldr	x25, [sp, #40]
   1e418:	ldur	x2, [x29, #-40]
   1e41c:	b	1e440 <ZSTD_endStream@@Base+0x104ec>
   1e420:	ldr	w13, [sp, #52]
   1e424:	ldp	x28, x24, [sp, #24]
   1e428:	ldur	x14, [x29, #-48]
   1e42c:	mov	x8, x15
   1e430:	sub	w23, w26, #0x2
   1e434:	mov	x2, x8
   1e438:	stur	x14, [x29, #-48]
   1e43c:	str	w13, [sp, #48]
   1e440:	ldr	x0, [x24, #24]
   1e444:	cmp	x2, x28
   1e448:	sub	x19, x2, x25
   1e44c:	stur	x2, [x29, #-40]
   1e450:	b.ls	1e464 <ZSTD_endStream@@Base+0x10510>  // b.plast
   1e454:	mov	x1, x25
   1e458:	mov	x3, x28
   1e45c:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1e460:	b	1e4cc <ZSTD_endStream@@Base+0x10578>
   1e464:	mov	x1, x25
   1e468:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1e46c:	cmp	x19, #0x11
   1e470:	b.cc	1e4cc <ZSTD_endStream@@Base+0x10578>  // b.lo, b.ul, b.last
   1e474:	ldr	x21, [x24, #24]
   1e478:	add	x1, x25, #0x10
   1e47c:	add	x0, x21, #0x10
   1e480:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1e484:	add	x0, x21, #0x20
   1e488:	add	x1, x25, #0x20
   1e48c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1e490:	cmp	x19, #0x31
   1e494:	b.lt	1e4cc <ZSTD_endStream@@Base+0x10578>  // b.tstop
   1e498:	add	x20, x21, x19
   1e49c:	add	x27, x21, #0x30
   1e4a0:	add	x25, x25, #0x40
   1e4a4:	sub	x1, x25, #0x10
   1e4a8:	mov	x0, x27
   1e4ac:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1e4b0:	add	x0, x27, #0x10
   1e4b4:	mov	x1, x25
   1e4b8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1e4bc:	add	x27, x27, #0x20
   1e4c0:	cmp	x27, x20
   1e4c4:	add	x25, x25, #0x20
   1e4c8:	b.cc	1e4a4 <ZSTD_endStream@@Base+0x10550>  // b.lo, b.ul, b.last
   1e4cc:	ldr	x9, [x24, #24]
   1e4d0:	ldur	x12, [x29, #-48]
   1e4d4:	cmp	x19, #0x10, lsl #12
   1e4d8:	mov	w25, #0x1                   	// #1
   1e4dc:	add	x9, x9, x19
   1e4e0:	sub	x8, x12, #0x3
   1e4e4:	str	x9, [x24, #24]
   1e4e8:	b.cc	1e4fc <ZSTD_endStream@@Base+0x105a8>  // b.lo, b.ul, b.last
   1e4ec:	ldp	x10, x9, [x24]
   1e4f0:	sub	x9, x9, x10
   1e4f4:	lsr	x9, x9, #3
   1e4f8:	stp	w25, w9, [x24, #72]
   1e4fc:	ldr	x9, [x24, #8]
   1e500:	ldur	x13, [x29, #-40]
   1e504:	add	w10, w26, #0x1
   1e508:	cmp	x8, #0x10, lsl #12
   1e50c:	strh	w19, [x9, #4]
   1e510:	str	w10, [x9]
   1e514:	b.cc	1e52c <ZSTD_endStream@@Base+0x105d8>  // b.lo, b.ul, b.last
   1e518:	ldp	x11, x10, [x24]
   1e51c:	sub	x10, x10, x11
   1e520:	lsr	x10, x10, #3
   1e524:	mov	w11, #0x2                   	// #2
   1e528:	stp	w11, w10, [x24, #72]
   1e52c:	ldr	w19, [sp, #48]
   1e530:	strh	w8, [x9, #6]
   1e534:	add	x8, x9, #0x8
   1e538:	add	x26, x13, x12
   1e53c:	str	x8, [x24, #8]
   1e540:	cbz	w19, 1e620 <ZSTD_endStream@@Base+0x106cc>
   1e544:	ldur	x8, [x29, #-32]
   1e548:	cmp	x26, x8
   1e54c:	b.hi	1e620 <ZSTD_endStream@@Base+0x106cc>  // b.pmore
   1e550:	mov	w8, w23
   1e554:	mov	w20, w19
   1e558:	mov	x0, x26
   1e55c:	mov	w23, w20
   1e560:	mov	w20, w8
   1e564:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1e568:	mov	w21, w23
   1e56c:	mov	w19, w0
   1e570:	sub	x0, x26, x21
   1e574:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1e578:	cmp	w19, w0
   1e57c:	mov	x27, x26
   1e580:	b.ne	1e628 <ZSTD_endStream@@Base+0x106d4>  // b.any
   1e584:	ldur	x2, [x29, #-8]
   1e588:	neg	x8, x21
   1e58c:	add	x0, x27, #0x4
   1e590:	add	x1, x0, x8
   1e594:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1e598:	mov	x26, x0
   1e59c:	ldr	x0, [x24, #24]
   1e5a0:	cmp	x27, x28
   1e5a4:	add	x19, x26, #0x1
   1e5a8:	mov	x1, x27
   1e5ac:	b.ls	1e5c0 <ZSTD_endStream@@Base+0x1066c>  // b.plast
   1e5b0:	mov	x2, x27
   1e5b4:	mov	x3, x28
   1e5b8:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1e5bc:	b	1e5c4 <ZSTD_endStream@@Base+0x10670>
   1e5c0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1e5c4:	ldr	x9, [x24, #8]
   1e5c8:	add	x8, x26, #0x4
   1e5cc:	cmp	x19, #0x10, lsl #12
   1e5d0:	strh	wzr, [x9, #4]
   1e5d4:	str	w25, [x9]
   1e5d8:	b.cc	1e5f0 <ZSTD_endStream@@Base+0x1069c>  // b.lo, b.ul, b.last
   1e5dc:	ldp	x11, x10, [x24]
   1e5e0:	sub	x10, x10, x11
   1e5e4:	lsr	x10, x10, #3
   1e5e8:	mov	w11, #0x2                   	// #2
   1e5ec:	stp	w11, w10, [x24, #72]
   1e5f0:	strh	w19, [x9, #6]
   1e5f4:	add	x9, x9, #0x8
   1e5f8:	add	x27, x27, x8
   1e5fc:	str	x9, [x24, #8]
   1e600:	cbz	w20, 1e638 <ZSTD_endStream@@Base+0x106e4>
   1e604:	ldur	x8, [x29, #-32]
   1e608:	mov	w19, w20
   1e60c:	mov	x26, x27
   1e610:	cmp	x27, x8
   1e614:	mov	w8, w23
   1e618:	b.ls	1e558 <ZSTD_endStream@@Base+0x10604>  // b.plast
   1e61c:	b	1dacc <ZSTD_endStream@@Base+0xfb78>
   1e620:	mov	x27, x26
   1e624:	b	1dacc <ZSTD_endStream@@Base+0xfb78>
   1e628:	mov	w19, w23
   1e62c:	mov	w23, w20
   1e630:	mov	x26, x27
   1e634:	b	1dacc <ZSTD_endStream@@Base+0xfb78>
   1e638:	mov	w19, w20
   1e63c:	mov	x26, x27
   1e640:	b	1dacc <ZSTD_endStream@@Base+0xfb78>
   1e644:	ldur	x8, [x29, #-8]
   1e648:	ldr	x9, [sp, #40]
   1e64c:	ldr	x10, [sp, #8]
   1e650:	cmp	w23, #0x0
   1e654:	sub	x0, x8, x9
   1e658:	ldr	w9, [sp, #4]
   1e65c:	csel	w8, w9, w23, eq  // eq = none
   1e660:	cmp	w19, #0x0
   1e664:	csel	w9, w9, w19, eq  // eq = none
   1e668:	stp	w8, w9, [x10]
   1e66c:	ldp	x20, x19, [sp, #208]
   1e670:	ldp	x22, x21, [sp, #192]
   1e674:	ldp	x24, x23, [sp, #176]
   1e678:	ldp	x26, x25, [sp, #160]
   1e67c:	ldp	x28, x27, [sp, #144]
   1e680:	ldp	x29, x30, [sp, #128]
   1e684:	add	sp, sp, #0xe0
   1e688:	ret
   1e68c:	sub	sp, sp, #0xe0
   1e690:	stp	x29, x30, [sp, #128]
   1e694:	stp	x28, x27, [sp, #144]
   1e698:	stp	x26, x25, [sp, #160]
   1e69c:	stp	x24, x23, [sp, #176]
   1e6a0:	stp	x22, x21, [sp, #192]
   1e6a4:	stp	x20, x19, [sp, #208]
   1e6a8:	ldr	x8, [x0, #8]
   1e6ac:	ldr	w9, [x0, #24]
   1e6b0:	mov	x25, x3
   1e6b4:	ldp	w10, w11, [x2]
   1e6b8:	add	x23, x3, x4
   1e6bc:	add	x8, x8, x9
   1e6c0:	cmp	w25, w8
   1e6c4:	cinc	x27, x3, eq  // eq = none
   1e6c8:	stp	x2, x8, [sp, #16]
   1e6cc:	sub	w8, w27, w8
   1e6d0:	cmp	w11, w8
   1e6d4:	sub	x28, x23, #0x8
   1e6d8:	csel	w9, w11, wzr, hi  // hi = pmore
   1e6dc:	csel	w11, wzr, w11, hi  // hi = pmore
   1e6e0:	cmp	w10, w8
   1e6e4:	add	x29, sp, #0x80
   1e6e8:	csel	w8, w10, w9, hi  // hi = pmore
   1e6ec:	csel	w21, wzr, w10, hi  // hi = pmore
   1e6f0:	cmp	x27, x28
   1e6f4:	stur	w11, [x29, #-12]
   1e6f8:	str	w8, [sp, #12]
   1e6fc:	b.cs	1ee60 <ZSTD_endStream@@Base+0x10f0c>  // b.hs, b.nlast
   1e700:	sub	x8, x23, #0x20
   1e704:	mov	x22, x1
   1e708:	stur	x8, [x29, #-24]
   1e70c:	add	x8, x0, #0xb8
   1e710:	stp	x8, x0, [sp, #40]
   1e714:	stur	x23, [x29, #-32]
   1e718:	str	x28, [sp, #64]
   1e71c:	b	1e734 <ZSTD_endStream@@Base+0x107e0>
   1e720:	stur	w21, [x29, #-12]
   1e724:	mov	w21, w19
   1e728:	mov	x27, x25
   1e72c:	cmp	x27, x28
   1e730:	b.cs	1ee60 <ZSTD_endStream@@Base+0x10f0c>  // b.hs, b.nlast
   1e734:	add	x20, x27, #0x1
   1e738:	mov	w19, w21
   1e73c:	sub	x0, x20, x19
   1e740:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1e744:	mov	w28, w0
   1e748:	mov	x0, x20
   1e74c:	stur	x20, [x29, #-8]
   1e750:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1e754:	cbz	w21, 1e784 <ZSTD_endStream@@Base+0x10830>
   1e758:	cmp	w28, w0
   1e75c:	b.ne	1e784 <ZSTD_endStream@@Base+0x10830>  // b.any
   1e760:	neg	x8, x19
   1e764:	add	x0, x27, #0x5
   1e768:	add	x1, x0, x8
   1e76c:	mov	x2, x23
   1e770:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1e774:	ldur	x3, [x29, #-24]
   1e778:	mov	x28, xzr
   1e77c:	add	x19, x0, #0x4
   1e780:	b	1ec78 <ZSTD_endStream@@Base+0x10d24>
   1e784:	ldr	x0, [sp, #48]
   1e788:	str	w21, [sp, #60]
   1e78c:	ldr	w8, [x0, #200]
   1e790:	sub	w9, w8, #0x6
   1e794:	cmp	w9, #0x2
   1e798:	b.cs	1e8d0 <ZSTD_endStream@@Base+0x1097c>  // b.hs, b.nlast
   1e79c:	ldr	x8, [x0, #64]
   1e7a0:	ldr	x12, [x0, #8]
   1e7a4:	mov	w26, #0x1                   	// #1
   1e7a8:	ldr	x1, [sp, #40]
   1e7ac:	stur	x8, [x29, #-56]
   1e7b0:	ldp	w9, w8, [x0, #184]
   1e7b4:	ldp	w10, w11, [x0, #28]
   1e7b8:	sub	w19, w27, w12
   1e7bc:	stur	x12, [x29, #-48]
   1e7c0:	lsl	w9, w26, w9
   1e7c4:	sub	w12, w19, w10
   1e7c8:	cmp	w12, w9
   1e7cc:	ldr	w24, [x0, #196]
   1e7d0:	lsl	w23, w26, w8
   1e7d4:	sub	w8, w19, w9
   1e7d8:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1e7dc:	csel	w20, w8, w10, eq  // eq = none
   1e7e0:	subs	w8, w19, w23
   1e7e4:	mov	w3, #0x6                   	// #6
   1e7e8:	mov	x2, x27
   1e7ec:	csel	w21, wzr, w8, cc  // cc = lo, ul, last
   1e7f0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1e7f4:	cmp	w0, w20
   1e7f8:	b.ls	1eb90 <ZSTD_endStream@@Base+0x10c3c>  // b.plast
   1e7fc:	mov	w8, w24
   1e800:	lsl	w8, w26, w8
   1e804:	sub	w24, w23, #0x1
   1e808:	sub	w23, w8, #0x1
   1e80c:	mov	w8, #0xc9ff                	// #51711
   1e810:	movk	w8, #0x3b9a, lsl #16
   1e814:	mov	w28, w0
   1e818:	add	w26, w19, #0x2
   1e81c:	mov	w19, #0x3                   	// #3
   1e820:	stur	x8, [x29, #-40]
   1e824:	ldur	x8, [x29, #-48]
   1e828:	ldrb	w9, [x27, x19]
   1e82c:	add	x1, x8, w28, uxtw
   1e830:	ldrb	w8, [x1, x19]
   1e834:	cmp	w8, w9
   1e838:	b.ne	1e870 <ZSTD_endStream@@Base+0x1091c>  // b.any
   1e83c:	ldur	x2, [x29, #-32]
   1e840:	mov	x0, x27
   1e844:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1e848:	cmp	x0, x19
   1e84c:	b.hi	1e87c <ZSTD_endStream@@Base+0x10928>  // b.pmore
   1e850:	cmp	w28, w21
   1e854:	b.ls	1e8a0 <ZSTD_endStream@@Base+0x1094c>  // b.plast
   1e858:	ldur	x9, [x29, #-56]
   1e85c:	and	w8, w28, w24
   1e860:	ldr	w28, [x9, w8, uxtw #2]
   1e864:	mov	w8, #0x1                   	// #1
   1e868:	tbnz	w8, #0, 1e8b8 <ZSTD_endStream@@Base+0x10964>
   1e86c:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1e870:	mov	x0, xzr
   1e874:	cmp	x0, x19
   1e878:	b.ls	1e850 <ZSTD_endStream@@Base+0x108fc>  // b.plast
   1e87c:	ldur	x9, [x29, #-32]
   1e880:	add	x8, x27, x0
   1e884:	cmp	x8, x9
   1e888:	sub	w8, w26, w28
   1e88c:	stur	x8, [x29, #-40]
   1e890:	b.eq	1e8ac <ZSTD_endStream@@Base+0x10958>  // b.none
   1e894:	mov	x19, x0
   1e898:	cmp	w28, w21
   1e89c:	b.hi	1e858 <ZSTD_endStream@@Base+0x10904>  // b.pmore
   1e8a0:	mov	w8, wzr
   1e8a4:	tbnz	w8, #0, 1e8b8 <ZSTD_endStream@@Base+0x10964>
   1e8a8:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1e8ac:	mov	w8, wzr
   1e8b0:	mov	x19, x0
   1e8b4:	tbz	w8, #0, 1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1e8b8:	subs	w23, w23, #0x1
   1e8bc:	cset	w8, cs  // cs = hs, nlast
   1e8c0:	cmp	w28, w20
   1e8c4:	b.ls	1eba0 <ZSTD_endStream@@Base+0x10c4c>  // b.plast
   1e8c8:	cbnz	w8, 1e824 <ZSTD_endStream@@Base+0x108d0>
   1e8cc:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1e8d0:	cmp	w8, #0x5
   1e8d4:	mov	w13, #0x1                   	// #1
   1e8d8:	b.ne	1ea34 <ZSTD_endStream@@Base+0x10ae0>  // b.any
   1e8dc:	ldr	x8, [x0, #64]
   1e8e0:	ldr	x23, [x0, #8]
   1e8e4:	ldr	x1, [sp, #40]
   1e8e8:	mov	w3, #0x5                   	// #5
   1e8ec:	str	x8, [sp, #32]
   1e8f0:	ldp	w9, w8, [x0, #184]
   1e8f4:	ldp	w10, w11, [x0, #28]
   1e8f8:	sub	w19, w27, w23
   1e8fc:	mov	x2, x27
   1e900:	lsl	w9, w13, w9
   1e904:	sub	w12, w19, w10
   1e908:	cmp	w12, w9
   1e90c:	ldr	w12, [x0, #196]
   1e910:	lsl	w20, w13, w8
   1e914:	sub	w8, w19, w9
   1e918:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1e91c:	csel	w26, w8, w10, eq  // eq = none
   1e920:	subs	w8, w19, w20
   1e924:	stur	w12, [x29, #-40]
   1e928:	csel	w28, wzr, w8, cc  // cc = lo, ul, last
   1e92c:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1e930:	mov	w8, #0x1                   	// #1
   1e934:	cmp	w0, w26
   1e938:	b.ls	1eb90 <ZSTD_endStream@@Base+0x10c3c>  // b.plast
   1e93c:	sub	w9, w20, #0x1
   1e940:	stur	w9, [x29, #-56]
   1e944:	ldur	w9, [x29, #-40]
   1e948:	ldr	x10, [sp, #32]
   1e94c:	mov	w24, w0
   1e950:	lsl	w8, w8, w9
   1e954:	sub	w20, w8, #0x1
   1e958:	mov	w8, #0xc9ff                	// #51711
   1e95c:	add	w9, w19, #0x2
   1e960:	movk	w8, #0x3b9a, lsl #16
   1e964:	stur	w9, [x29, #-48]
   1e968:	mov	w19, #0x3                   	// #3
   1e96c:	stur	x8, [x29, #-40]
   1e970:	add	x1, x23, w24, uxtw
   1e974:	ldrb	w8, [x1, x19]
   1e978:	ldrb	w9, [x27, x19]
   1e97c:	cmp	w8, w9
   1e980:	b.ne	1e9d0 <ZSTD_endStream@@Base+0x10a7c>  // b.any
   1e984:	ldur	x2, [x29, #-32]
   1e988:	mov	x0, x27
   1e98c:	mov	w21, w26
   1e990:	mov	x26, x23
   1e994:	mov	x23, x10
   1e998:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1e99c:	mov	x10, x23
   1e9a0:	mov	x23, x26
   1e9a4:	mov	w26, w21
   1e9a8:	cmp	x0, x19
   1e9ac:	b.hi	1e9dc <ZSTD_endStream@@Base+0x10a88>  // b.pmore
   1e9b0:	cmp	w24, w28
   1e9b4:	b.ls	1ea04 <ZSTD_endStream@@Base+0x10ab0>  // b.plast
   1e9b8:	ldur	w8, [x29, #-56]
   1e9bc:	and	w8, w24, w8
   1e9c0:	ldr	w24, [x10, w8, uxtw #2]
   1e9c4:	mov	w8, #0x1                   	// #1
   1e9c8:	tbnz	w8, #0, 1ea1c <ZSTD_endStream@@Base+0x10ac8>
   1e9cc:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1e9d0:	mov	x0, xzr
   1e9d4:	cmp	x0, x19
   1e9d8:	b.ls	1e9b0 <ZSTD_endStream@@Base+0x10a5c>  // b.plast
   1e9dc:	ldur	x9, [x29, #-32]
   1e9e0:	add	x8, x27, x0
   1e9e4:	cmp	x8, x9
   1e9e8:	ldur	w8, [x29, #-48]
   1e9ec:	sub	w8, w8, w24
   1e9f0:	stur	x8, [x29, #-40]
   1e9f4:	b.eq	1ea10 <ZSTD_endStream@@Base+0x10abc>  // b.none
   1e9f8:	mov	x19, x0
   1e9fc:	cmp	w24, w28
   1ea00:	b.hi	1e9b8 <ZSTD_endStream@@Base+0x10a64>  // b.pmore
   1ea04:	mov	w8, wzr
   1ea08:	tbnz	wzr, #0, 1ea1c <ZSTD_endStream@@Base+0x10ac8>
   1ea0c:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1ea10:	mov	x19, x0
   1ea14:	mov	w8, wzr
   1ea18:	tbz	wzr, #0, 1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1ea1c:	subs	w20, w20, #0x1
   1ea20:	cset	w8, cs  // cs = hs, nlast
   1ea24:	cmp	w24, w26
   1ea28:	b.ls	1eba0 <ZSTD_endStream@@Base+0x10c4c>  // b.plast
   1ea2c:	cbnz	w8, 1e970 <ZSTD_endStream@@Base+0x10a1c>
   1ea30:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1ea34:	ldr	x20, [x0, #8]
   1ea38:	ldp	w9, w8, [x0, #184]
   1ea3c:	ldp	w10, w11, [x0, #28]
   1ea40:	ldr	x1, [sp, #40]
   1ea44:	sub	w19, w27, w20
   1ea48:	lsl	w9, w13, w9
   1ea4c:	sub	w12, w19, w10
   1ea50:	ldr	x24, [x0, #64]
   1ea54:	cmp	w12, w9
   1ea58:	ldr	w28, [x0, #196]
   1ea5c:	lsl	w23, w13, w8
   1ea60:	sub	w8, w19, w9
   1ea64:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   1ea68:	csel	w26, w8, w10, eq  // eq = none
   1ea6c:	subs	w8, w19, w23
   1ea70:	mov	w3, #0x4                   	// #4
   1ea74:	mov	x2, x27
   1ea78:	csel	w21, wzr, w8, cc  // cc = lo, ul, last
   1ea7c:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   1ea80:	mov	w8, #0x1                   	// #1
   1ea84:	cmp	w0, w26
   1ea88:	b.ls	1eb90 <ZSTD_endStream@@Base+0x10c3c>  // b.plast
   1ea8c:	lsl	w8, w8, w28
   1ea90:	sub	w9, w23, #0x1
   1ea94:	sub	w23, w8, #0x1
   1ea98:	mov	w8, #0xc9ff                	// #51711
   1ea9c:	stur	w9, [x29, #-56]
   1eaa0:	add	w9, w19, #0x2
   1eaa4:	movk	w8, #0x3b9a, lsl #16
   1eaa8:	mov	w11, w0
   1eaac:	stur	w9, [x29, #-48]
   1eab0:	mov	w19, #0x3                   	// #3
   1eab4:	stur	x8, [x29, #-40]
   1eab8:	mov	x10, x24
   1eabc:	add	x1, x20, w11, uxtw
   1eac0:	ldrb	w8, [x1, x19]
   1eac4:	ldrb	w9, [x27, x19]
   1eac8:	cmp	w8, w9
   1eacc:	b.ne	1eb2c <ZSTD_endStream@@Base+0x10bd8>  // b.any
   1ead0:	ldur	x2, [x29, #-32]
   1ead4:	mov	x0, x27
   1ead8:	mov	w28, w21
   1eadc:	mov	w21, w26
   1eae0:	mov	x26, x20
   1eae4:	mov	x20, x10
   1eae8:	mov	w24, w11
   1eaec:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1eaf0:	mov	w11, w24
   1eaf4:	mov	x10, x20
   1eaf8:	mov	x20, x26
   1eafc:	mov	w26, w21
   1eb00:	mov	w21, w28
   1eb04:	cmp	x0, x19
   1eb08:	b.hi	1eb38 <ZSTD_endStream@@Base+0x10be4>  // b.pmore
   1eb0c:	cmp	w11, w21
   1eb10:	b.ls	1eb60 <ZSTD_endStream@@Base+0x10c0c>  // b.plast
   1eb14:	ldur	w8, [x29, #-56]
   1eb18:	and	w8, w11, w8
   1eb1c:	ldr	w11, [x10, w8, uxtw #2]
   1eb20:	mov	w8, #0x1                   	// #1
   1eb24:	tbnz	w8, #0, 1eb78 <ZSTD_endStream@@Base+0x10c24>
   1eb28:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1eb2c:	mov	x0, xzr
   1eb30:	cmp	x0, x19
   1eb34:	b.ls	1eb0c <ZSTD_endStream@@Base+0x10bb8>  // b.plast
   1eb38:	ldur	x9, [x29, #-32]
   1eb3c:	add	x8, x27, x0
   1eb40:	cmp	x8, x9
   1eb44:	ldur	w8, [x29, #-48]
   1eb48:	sub	w8, w8, w11
   1eb4c:	stur	x8, [x29, #-40]
   1eb50:	b.eq	1eb6c <ZSTD_endStream@@Base+0x10c18>  // b.none
   1eb54:	mov	x19, x0
   1eb58:	cmp	w11, w21
   1eb5c:	b.hi	1eb14 <ZSTD_endStream@@Base+0x10bc0>  // b.pmore
   1eb60:	mov	w8, wzr
   1eb64:	tbnz	wzr, #0, 1eb78 <ZSTD_endStream@@Base+0x10c24>
   1eb68:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1eb6c:	mov	x19, x0
   1eb70:	mov	w8, wzr
   1eb74:	tbz	wzr, #0, 1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1eb78:	subs	w23, w23, #0x1
   1eb7c:	cset	w8, cs  // cs = hs, nlast
   1eb80:	cmp	w11, w26
   1eb84:	b.ls	1eba0 <ZSTD_endStream@@Base+0x10c4c>  // b.plast
   1eb88:	cbnz	w8, 1eabc <ZSTD_endStream@@Base+0x10b68>
   1eb8c:	b	1eba0 <ZSTD_endStream@@Base+0x10c4c>
   1eb90:	mov	w8, #0xc9ff                	// #51711
   1eb94:	movk	w8, #0x3b9a, lsl #16
   1eb98:	stur	x8, [x29, #-40]
   1eb9c:	mov	w19, #0x3                   	// #3
   1eba0:	ldur	x8, [x29, #-8]
   1eba4:	cmp	x19, #0x0
   1eba8:	csel	x8, x27, x8, ne  // ne = any
   1ebac:	stur	x8, [x29, #-8]
   1ebb0:	ldur	x8, [x29, #-40]
   1ebb4:	csel	x28, x8, xzr, ne  // ne = any
   1ebb8:	cmp	x19, #0x3
   1ebbc:	b.hi	1ebdc <ZSTD_endStream@@Base+0x10c88>  // b.pmore
   1ebc0:	ldur	x23, [x29, #-32]
   1ebc4:	ldr	x28, [sp, #64]
   1ebc8:	ldr	w21, [sp, #60]
   1ebcc:	sub	x8, x27, x25
   1ebd0:	add	x8, x27, x8, asr #8
   1ebd4:	add	x27, x8, #0x1
   1ebd8:	b	1e72c <ZSTD_endStream@@Base+0x107d8>
   1ebdc:	ldr	w21, [sp, #60]
   1ebe0:	cbz	x28, 1ec50 <ZSTD_endStream@@Base+0x10cfc>
   1ebe4:	ldur	x8, [x29, #-8]
   1ebe8:	cmp	x8, x25
   1ebec:	b.ls	1ec58 <ZSTD_endStream@@Base+0x10d04>  // b.plast
   1ebf0:	ldur	x8, [x29, #-8]
   1ebf4:	ldr	x12, [sp, #24]
   1ebf8:	sub	x8, x8, x28
   1ebfc:	add	x8, x8, #0x2
   1ec00:	cmp	x8, x12
   1ec04:	b.ls	1ec58 <ZSTD_endStream@@Base+0x10d04>  // b.plast
   1ec08:	mov	w8, #0x1                   	// #1
   1ec0c:	sub	x9, x8, x28
   1ec10:	ldur	x8, [x29, #-8]
   1ec14:	ldur	x3, [x29, #-24]
   1ec18:	ldrb	w10, [x8, #-1]!
   1ec1c:	ldur	x11, [x29, #-8]
   1ec20:	ldrb	w11, [x11, x9]
   1ec24:	cmp	w10, w11
   1ec28:	b.ne	1ec64 <ZSTD_endStream@@Base+0x10d10>  // b.any
   1ec2c:	cmp	x8, x25
   1ec30:	add	x19, x19, #0x1
   1ec34:	b.ls	1ec68 <ZSTD_endStream@@Base+0x10d14>  // b.plast
   1ec38:	ldur	x10, [x29, #-8]
   1ec3c:	stur	x8, [x29, #-8]
   1ec40:	add	x10, x10, x9
   1ec44:	cmp	x10, x12
   1ec48:	b.hi	1ec18 <ZSTD_endStream@@Base+0x10cc4>  // b.pmore
   1ec4c:	b	1ec68 <ZSTD_endStream@@Base+0x10d14>
   1ec50:	ldur	x3, [x29, #-24]
   1ec54:	b	1ec78 <ZSTD_endStream@@Base+0x10d24>
   1ec58:	ldur	x8, [x29, #-8]
   1ec5c:	ldur	x3, [x29, #-24]
   1ec60:	b	1ec68 <ZSTD_endStream@@Base+0x10d14>
   1ec64:	ldur	x8, [x29, #-8]
   1ec68:	sub	w9, w28, #0x2
   1ec6c:	stur	w21, [x29, #-12]
   1ec70:	mov	w21, w9
   1ec74:	stur	x8, [x29, #-8]
   1ec78:	ldur	x8, [x29, #-8]
   1ec7c:	ldr	x0, [x22, #24]
   1ec80:	cmp	x8, x3
   1ec84:	sub	x20, x8, x25
   1ec88:	b.ls	1ec9c <ZSTD_endStream@@Base+0x10d48>  // b.plast
   1ec8c:	ldur	x2, [x29, #-8]
   1ec90:	mov	x1, x25
   1ec94:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1ec98:	b	1ed04 <ZSTD_endStream@@Base+0x10db0>
   1ec9c:	mov	x1, x25
   1eca0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1eca4:	cmp	x20, #0x11
   1eca8:	b.cc	1ed04 <ZSTD_endStream@@Base+0x10db0>  // b.lo, b.ul, b.last
   1ecac:	ldr	x27, [x22, #24]
   1ecb0:	add	x1, x25, #0x10
   1ecb4:	add	x0, x27, #0x10
   1ecb8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1ecbc:	add	x0, x27, #0x20
   1ecc0:	add	x1, x25, #0x20
   1ecc4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1ecc8:	cmp	x20, #0x31
   1eccc:	b.lt	1ed04 <ZSTD_endStream@@Base+0x10db0>  // b.tstop
   1ecd0:	add	x23, x27, x20
   1ecd4:	add	x27, x27, #0x30
   1ecd8:	add	x25, x25, #0x40
   1ecdc:	sub	x1, x25, #0x10
   1ece0:	mov	x0, x27
   1ece4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1ece8:	add	x0, x27, #0x10
   1ecec:	mov	x1, x25
   1ecf0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1ecf4:	add	x27, x27, #0x20
   1ecf8:	cmp	x27, x23
   1ecfc:	add	x25, x25, #0x20
   1ed00:	b.cc	1ecdc <ZSTD_endStream@@Base+0x10d88>  // b.lo, b.ul, b.last
   1ed04:	ldr	x9, [x22, #24]
   1ed08:	sub	x8, x19, #0x3
   1ed0c:	cmp	x20, #0x10, lsl #12
   1ed10:	add	x9, x9, x20
   1ed14:	str	x9, [x22, #24]
   1ed18:	b.cc	1ed30 <ZSTD_endStream@@Base+0x10ddc>  // b.lo, b.ul, b.last
   1ed1c:	ldp	x10, x9, [x22]
   1ed20:	sub	x9, x9, x10
   1ed24:	lsr	x9, x9, #3
   1ed28:	mov	w10, #0x1                   	// #1
   1ed2c:	stp	w10, w9, [x22, #72]
   1ed30:	ldr	x9, [x22, #8]
   1ed34:	add	w10, w28, #0x1
   1ed38:	cmp	x8, #0x10, lsl #12
   1ed3c:	strh	w20, [x9, #4]
   1ed40:	str	w10, [x9]
   1ed44:	b.cc	1ed5c <ZSTD_endStream@@Base+0x10e08>  // b.lo, b.ul, b.last
   1ed48:	ldp	x11, x10, [x22]
   1ed4c:	sub	x10, x10, x11
   1ed50:	lsr	x10, x10, #3
   1ed54:	mov	w11, #0x2                   	// #2
   1ed58:	stp	w11, w10, [x22, #72]
   1ed5c:	strh	w8, [x9, #6]
   1ed60:	add	x8, x9, #0x8
   1ed64:	str	x8, [x22, #8]
   1ed68:	ldur	x8, [x29, #-8]
   1ed6c:	ldur	x23, [x29, #-32]
   1ed70:	ldr	x28, [sp, #64]
   1ed74:	add	x25, x8, x19
   1ed78:	ldur	w8, [x29, #-12]
   1ed7c:	cbz	w8, 1e728 <ZSTD_endStream@@Base+0x107d4>
   1ed80:	cmp	x25, x28
   1ed84:	b.hi	1e728 <ZSTD_endStream@@Base+0x107d4>  // b.pmore
   1ed88:	ldur	w19, [x29, #-12]
   1ed8c:	mov	w8, w21
   1ed90:	mov	x0, x25
   1ed94:	mov	w21, w19
   1ed98:	mov	w19, w8
   1ed9c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1eda0:	mov	w20, w21
   1eda4:	mov	w26, w0
   1eda8:	sub	x0, x25, x20
   1edac:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1edb0:	cmp	w26, w0
   1edb4:	b.ne	1e720 <ZSTD_endStream@@Base+0x107cc>  // b.any
   1edb8:	neg	x8, x20
   1edbc:	add	x0, x25, #0x4
   1edc0:	add	x1, x0, x8
   1edc4:	mov	x2, x23
   1edc8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   1edcc:	ldur	x3, [x29, #-24]
   1edd0:	mov	x26, x0
   1edd4:	ldr	x0, [x22, #24]
   1edd8:	add	x20, x26, #0x1
   1eddc:	cmp	x25, x3
   1ede0:	mov	x1, x25
   1ede4:	b.ls	1edf4 <ZSTD_endStream@@Base+0x10ea0>  // b.plast
   1ede8:	mov	x2, x25
   1edec:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1edf0:	b	1edf8 <ZSTD_endStream@@Base+0x10ea4>
   1edf4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1edf8:	ldr	x9, [x22, #8]
   1edfc:	add	x8, x26, #0x4
   1ee00:	cmp	x20, #0x10, lsl #12
   1ee04:	mov	w10, #0x1                   	// #1
   1ee08:	strh	wzr, [x9, #4]
   1ee0c:	str	w10, [x9]
   1ee10:	b.cc	1ee28 <ZSTD_endStream@@Base+0x10ed4>  // b.lo, b.ul, b.last
   1ee14:	ldp	x11, x10, [x22]
   1ee18:	sub	x10, x10, x11
   1ee1c:	lsr	x10, x10, #3
   1ee20:	mov	w11, #0x2                   	// #2
   1ee24:	stp	w11, w10, [x22, #72]
   1ee28:	strh	w20, [x9, #6]
   1ee2c:	add	x9, x9, #0x8
   1ee30:	add	x25, x25, x8
   1ee34:	str	x9, [x22, #8]
   1ee38:	cbz	w19, 1ee54 <ZSTD_endStream@@Base+0x10f00>
   1ee3c:	cmp	x25, x28
   1ee40:	mov	w8, w21
   1ee44:	mov	x27, x25
   1ee48:	stur	w19, [x29, #-12]
   1ee4c:	b.ls	1ed90 <ZSTD_endStream@@Base+0x10e3c>  // b.plast
   1ee50:	b	1e72c <ZSTD_endStream@@Base+0x107d8>
   1ee54:	stur	w19, [x29, #-12]
   1ee58:	mov	x27, x25
   1ee5c:	b	1e72c <ZSTD_endStream@@Base+0x107d8>
   1ee60:	ldr	w9, [sp, #12]
   1ee64:	ldur	w10, [x29, #-12]
   1ee68:	cmp	w21, #0x0
   1ee6c:	sub	x0, x23, x25
   1ee70:	csel	w8, w9, w21, eq  // eq = none
   1ee74:	cmp	w10, #0x0
   1ee78:	csel	w9, w9, w10, eq  // eq = none
   1ee7c:	ldr	x10, [sp, #16]
   1ee80:	stp	w8, w9, [x10]
   1ee84:	ldp	x20, x19, [sp, #208]
   1ee88:	ldp	x22, x21, [sp, #192]
   1ee8c:	ldp	x24, x23, [sp, #176]
   1ee90:	ldp	x26, x25, [sp, #160]
   1ee94:	ldp	x28, x27, [sp, #144]
   1ee98:	ldp	x29, x30, [sp, #128]
   1ee9c:	add	sp, sp, #0xe0
   1eea0:	ret
   1eea4:	sub	sp, sp, #0xe0
   1eea8:	stp	x29, x30, [sp, #128]
   1eeac:	stp	x28, x27, [sp, #144]
   1eeb0:	stp	x26, x25, [sp, #160]
   1eeb4:	stp	x24, x23, [sp, #176]
   1eeb8:	stp	x22, x21, [sp, #192]
   1eebc:	stp	x20, x19, [sp, #208]
   1eec0:	ldr	x8, [x0, #176]
   1eec4:	add	x29, sp, #0x80
   1eec8:	ldr	x22, [x0, #8]
   1eecc:	ldr	w21, [x0, #24]
   1eed0:	stur	x0, [x29, #-48]
   1eed4:	ldr	w9, [x8, #24]
   1eed8:	ldp	x12, x11, [x8]
   1eedc:	add	x8, x22, x21
   1eee0:	ldp	w23, w24, [x2]
   1eee4:	stp	x8, x3, [sp, #48]
   1eee8:	sub	w8, w3, w8
   1eeec:	add	x9, x11, x9
   1eef0:	add	w8, w12, w8
   1eef4:	add	x26, x3, x4
   1eef8:	cmp	w8, w9
   1eefc:	sub	x10, x26, #0x8
   1ef00:	cinc	x27, x3, eq  // eq = none
   1ef04:	cmp	x27, x10
   1ef08:	stp	x2, x9, [sp]
   1ef0c:	stur	x10, [x29, #-16]
   1ef10:	str	x1, [sp, #32]
   1ef14:	b.cs	1f5ac <ZSTD_endStream@@Base+0x11658>  // b.hs, b.nlast
   1ef18:	sub	w8, w11, w12
   1ef1c:	add	w8, w21, w8
   1ef20:	sub	x9, x26, #0x20
   1ef24:	stur	w8, [x29, #-60]
   1ef28:	sub	x8, x11, w8, uxtw
   1ef2c:	str	x12, [sp, #40]
   1ef30:	str	x9, [sp, #24]
   1ef34:	stur	x11, [x29, #-56]
   1ef38:	stp	x8, x26, [x29, #-40]
   1ef3c:	b	1ef64 <ZSTD_endStream@@Base+0x11010>
   1ef40:	ldr	x8, [sp, #56]
   1ef44:	ldur	x26, [x29, #-32]
   1ef48:	ldr	w24, [sp, #20]
   1ef4c:	sub	x8, x27, x8
   1ef50:	add	x8, x27, x8, asr #8
   1ef54:	add	x27, x8, #0x1
   1ef58:	ldur	x8, [x29, #-16]
   1ef5c:	cmp	x27, x8
   1ef60:	b.cs	1f5ac <ZSTD_endStream@@Base+0x11658>  // b.hs, b.nlast
   1ef64:	sub	w8, w27, w22
   1ef68:	sub	w8, w8, w23
   1ef6c:	add	w20, w8, #0x1
   1ef70:	ldur	w8, [x29, #-60]
   1ef74:	ldur	x11, [x29, #-56]
   1ef78:	mvn	w10, w20
   1ef7c:	add	x9, x22, x20
   1ef80:	sub	w8, w20, w8
   1ef84:	cmp	w20, w21
   1ef88:	add	x8, x11, x8
   1ef8c:	add	w10, w21, w10
   1ef90:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1ef94:	cmp	w10, #0x3
   1ef98:	add	x26, x27, #0x1
   1ef9c:	str	w24, [sp, #20]
   1efa0:	b.cc	1efe4 <ZSTD_endStream@@Base+0x11090>  // b.lo, b.ul, b.last
   1efa4:	mov	x0, x19
   1efa8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1efac:	mov	w28, w0
   1efb0:	mov	x0, x26
   1efb4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1efb8:	cmp	w28, w0
   1efbc:	b.ne	1efe4 <ZSTD_endStream@@Base+0x11090>  // b.any
   1efc0:	ldur	x2, [x29, #-32]
   1efc4:	ldp	x8, x4, [sp, #40]
   1efc8:	cmp	w20, w21
   1efcc:	add	x0, x27, #0x5
   1efd0:	add	x1, x19, #0x4
   1efd4:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1efd8:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1efdc:	add	x19, x0, #0x4
   1efe0:	b	1efe8 <ZSTD_endStream@@Base+0x11094>
   1efe4:	mov	x19, xzr
   1efe8:	ldur	x0, [x29, #-48]
   1efec:	ldur	x2, [x29, #-32]
   1eff0:	mov	w8, #0xc9ff                	// #51711
   1eff4:	movk	w8, #0x3b9a, lsl #16
   1eff8:	sub	x3, x29, #0x8
   1effc:	mov	x1, x27
   1f000:	stur	x8, [x29, #-8]
   1f004:	bl	247d8 <ZSTD_endStream@@Base+0x16884>
   1f008:	ldur	x8, [x29, #-8]
   1f00c:	cmp	x0, x19
   1f010:	csel	x20, x0, x19, hi  // hi = pmore
   1f014:	csel	x9, x27, x26, hi  // hi = pmore
   1f018:	csel	x25, x8, xzr, hi  // hi = pmore
   1f01c:	cmp	x20, #0x3
   1f020:	b.ls	1ef40 <ZSTD_endStream@@Base+0x10fec>  // b.plast
   1f024:	ldur	x8, [x29, #-16]
   1f028:	stur	x9, [x29, #-24]
   1f02c:	cmp	x27, x8
   1f030:	b.cc	1f0e8 <ZSTD_endStream@@Base+0x11194>  // b.lo, b.ul, b.last
   1f034:	ldur	x2, [x29, #-24]
   1f038:	mov	x14, x25
   1f03c:	cbz	x25, 1f364 <ZSTD_endStream@@Base+0x11410>
   1f040:	add	x8, x14, x22
   1f044:	mov	x9, #0xffffffffffff0002    	// #-65534
   1f048:	sub	x8, x2, x8
   1f04c:	movk	x9, #0x0, lsl #16
   1f050:	add	x10, x8, x9
   1f054:	ldur	x8, [x29, #-40]
   1f058:	cmp	w21, w10
   1f05c:	ldr	x11, [sp, #8]
   1f060:	csel	x9, x8, x22, hi  // hi = pmore
   1f064:	ldp	x8, x25, [sp, #48]
   1f068:	csel	x8, x11, x8, hi  // hi = pmore
   1f06c:	cmp	x2, x25
   1f070:	b.ls	1f378 <ZSTD_endStream@@Base+0x11424>  // b.plast
   1f074:	and	x10, x10, #0xffffffff
   1f078:	add	x11, x9, x10
   1f07c:	cmp	x11, x8
   1f080:	b.ls	1f378 <ZSTD_endStream@@Base+0x11424>  // b.plast
   1f084:	ldur	x26, [x29, #-32]
   1f088:	ldr	x13, [sp, #32]
   1f08c:	add	x9, x9, x10
   1f090:	sub	x9, x9, #0x1
   1f094:	sub	x10, x2, #0x1
   1f098:	ldrb	w11, [x10]
   1f09c:	ldrb	w12, [x9]
   1f0a0:	cmp	w11, w12
   1f0a4:	b.ne	1f384 <ZSTD_endStream@@Base+0x11430>  // b.any
   1f0a8:	add	x20, x20, #0x1
   1f0ac:	cmp	x9, x8
   1f0b0:	sub	x11, x10, #0x1
   1f0b4:	b.ls	1f0c8 <ZSTD_endStream@@Base+0x11174>  // b.plast
   1f0b8:	cmp	x10, x25
   1f0bc:	sub	x9, x9, #0x1
   1f0c0:	mov	x10, x11
   1f0c4:	b.hi	1f098 <ZSTD_endStream@@Base+0x11144>  // b.pmore
   1f0c8:	add	x2, x11, #0x1
   1f0cc:	b	1f388 <ZSTD_endStream@@Base+0x11434>
   1f0d0:	mov	w8, #0x1                   	// #1
   1f0d4:	cbnz	w8, 1f034 <ZSTD_endStream@@Base+0x110e0>
   1f0d8:	ldur	x8, [x29, #-16]
   1f0dc:	mov	x27, x28
   1f0e0:	cmp	x28, x8
   1f0e4:	b.cs	1f034 <ZSTD_endStream@@Base+0x110e0>  // b.hs, b.nlast
   1f0e8:	add	x28, x27, #0x1
   1f0ec:	sub	w8, w28, w22
   1f0f0:	sub	w26, w8, w23
   1f0f4:	ldur	w8, [x29, #-60]
   1f0f8:	ldur	x11, [x29, #-56]
   1f0fc:	mvn	w10, w26
   1f100:	add	x9, x22, x26
   1f104:	sub	w8, w26, w8
   1f108:	cmp	w26, w21
   1f10c:	add	x8, x11, x8
   1f110:	add	w10, w21, w10
   1f114:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1f118:	cmp	w10, #0x3
   1f11c:	b.cc	1f19c <ZSTD_endStream@@Base+0x11248>  // b.lo, b.ul, b.last
   1f120:	mov	x0, x19
   1f124:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f128:	mov	w24, w0
   1f12c:	mov	x0, x28
   1f130:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f134:	cmp	w24, w0
   1f138:	b.ne	1f19c <ZSTD_endStream@@Base+0x11248>  // b.any
   1f13c:	ldur	x24, [x29, #-32]
   1f140:	ldp	x8, x4, [sp, #40]
   1f144:	cmp	w26, w21
   1f148:	add	x0, x27, #0x5
   1f14c:	add	x1, x19, #0x4
   1f150:	csel	x3, x8, x24, cc  // cc = lo, ul, last
   1f154:	mov	x2, x24
   1f158:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1f15c:	cmn	x0, #0x5
   1f160:	b.hi	1f1a0 <ZSTD_endStream@@Base+0x1124c>  // b.pmore
   1f164:	add	x19, x0, #0x4
   1f168:	add	w0, w25, #0x1
   1f16c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f170:	add	w8, w20, w20, lsl #1
   1f174:	sub	w8, w8, w0
   1f178:	add	w9, w19, w19, lsl #1
   1f17c:	add	w8, w8, #0x1
   1f180:	cmp	w9, w8
   1f184:	ldur	x8, [x29, #-24]
   1f188:	csel	x25, xzr, x25, gt
   1f18c:	csel	x20, x19, x20, gt
   1f190:	csel	x8, x28, x8, gt
   1f194:	stur	x8, [x29, #-24]
   1f198:	b	1f1a0 <ZSTD_endStream@@Base+0x1124c>
   1f19c:	ldur	x24, [x29, #-32]
   1f1a0:	ldur	x0, [x29, #-48]
   1f1a4:	mov	w8, #0xc9ff                	// #51711
   1f1a8:	movk	w8, #0x3b9a, lsl #16
   1f1ac:	sub	x3, x29, #0x8
   1f1b0:	mov	x1, x28
   1f1b4:	mov	x2, x24
   1f1b8:	stur	x8, [x29, #-8]
   1f1bc:	bl	247d8 <ZSTD_endStream@@Base+0x16884>
   1f1c0:	cmp	x0, #0x4
   1f1c4:	b.cc	1f21c <ZSTD_endStream@@Base+0x112c8>  // b.lo, b.ul, b.last
   1f1c8:	ldur	x26, [x29, #-8]
   1f1cc:	mov	x19, x0
   1f1d0:	add	w0, w25, #0x1
   1f1d4:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f1d8:	mov	w24, w0
   1f1dc:	add	w0, w26, #0x1
   1f1e0:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f1e4:	lsl	w8, w20, #2
   1f1e8:	lsl	w9, w19, #2
   1f1ec:	sub	w8, w8, w24
   1f1f0:	sub	w9, w9, w0
   1f1f4:	add	w8, w8, #0x4
   1f1f8:	cmp	w9, w8
   1f1fc:	ldur	x9, [x29, #-24]
   1f200:	cset	w8, le
   1f204:	csel	x25, x26, x25, gt
   1f208:	csel	x20, x19, x20, gt
   1f20c:	csel	x9, x28, x9, gt
   1f210:	stur	x9, [x29, #-24]
   1f214:	tbnz	w8, #0, 1f224 <ZSTD_endStream@@Base+0x112d0>
   1f218:	b	1f0d8 <ZSTD_endStream@@Base+0x11184>
   1f21c:	mov	w8, #0x1                   	// #1
   1f220:	tbz	w8, #0, 1f0d8 <ZSTD_endStream@@Base+0x11184>
   1f224:	ldur	x8, [x29, #-16]
   1f228:	cmp	x28, x8
   1f22c:	b.cs	1f034 <ZSTD_endStream@@Base+0x110e0>  // b.hs, b.nlast
   1f230:	add	x28, x27, #0x2
   1f234:	sub	w8, w28, w22
   1f238:	sub	w26, w8, w23
   1f23c:	ldur	w8, [x29, #-60]
   1f240:	ldur	x11, [x29, #-56]
   1f244:	mvn	w10, w26
   1f248:	add	x9, x22, x26
   1f24c:	sub	w8, w26, w8
   1f250:	cmp	w26, w21
   1f254:	add	x8, x11, x8
   1f258:	add	w10, w21, w10
   1f25c:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1f260:	cmp	w10, #0x3
   1f264:	b.cc	1f2e4 <ZSTD_endStream@@Base+0x11390>  // b.lo, b.ul, b.last
   1f268:	mov	x0, x19
   1f26c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f270:	mov	w24, w0
   1f274:	mov	x0, x28
   1f278:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f27c:	cmp	w24, w0
   1f280:	b.ne	1f2e4 <ZSTD_endStream@@Base+0x11390>  // b.any
   1f284:	ldur	x24, [x29, #-32]
   1f288:	ldp	x8, x4, [sp, #40]
   1f28c:	cmp	w26, w21
   1f290:	add	x0, x27, #0x6
   1f294:	add	x1, x19, #0x4
   1f298:	csel	x3, x8, x24, cc  // cc = lo, ul, last
   1f29c:	mov	x2, x24
   1f2a0:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1f2a4:	cmn	x0, #0x5
   1f2a8:	b.hi	1f2e8 <ZSTD_endStream@@Base+0x11394>  // b.pmore
   1f2ac:	add	x19, x0, #0x4
   1f2b0:	add	w0, w25, #0x1
   1f2b4:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f2b8:	mov	w8, #0x1                   	// #1
   1f2bc:	bfi	w8, w20, #2, #30
   1f2c0:	lsl	w9, w19, #2
   1f2c4:	sub	w8, w8, w0
   1f2c8:	cmp	w9, w8
   1f2cc:	ldur	x8, [x29, #-24]
   1f2d0:	csel	x25, xzr, x25, gt
   1f2d4:	csel	x20, x19, x20, gt
   1f2d8:	csel	x8, x28, x8, gt
   1f2dc:	stur	x8, [x29, #-24]
   1f2e0:	b	1f2e8 <ZSTD_endStream@@Base+0x11394>
   1f2e4:	ldur	x24, [x29, #-32]
   1f2e8:	ldur	x0, [x29, #-48]
   1f2ec:	mov	w8, #0xc9ff                	// #51711
   1f2f0:	movk	w8, #0x3b9a, lsl #16
   1f2f4:	sub	x3, x29, #0x8
   1f2f8:	mov	x1, x28
   1f2fc:	mov	x2, x24
   1f300:	stur	x8, [x29, #-8]
   1f304:	bl	247d8 <ZSTD_endStream@@Base+0x16884>
   1f308:	cmp	x0, #0x4
   1f30c:	b.cc	1f0d0 <ZSTD_endStream@@Base+0x1117c>  // b.lo, b.ul, b.last
   1f310:	ldur	x26, [x29, #-8]
   1f314:	mov	x19, x0
   1f318:	add	w0, w25, #0x1
   1f31c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f320:	mov	w24, w0
   1f324:	add	w0, w26, #0x1
   1f328:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f32c:	lsl	w8, w20, #2
   1f330:	lsl	w9, w19, #2
   1f334:	sub	w8, w8, w24
   1f338:	sub	w9, w9, w0
   1f33c:	add	w8, w8, #0x7
   1f340:	cmp	w9, w8
   1f344:	ldur	x9, [x29, #-24]
   1f348:	cset	w8, le
   1f34c:	csel	x25, x26, x25, gt
   1f350:	csel	x20, x19, x20, gt
   1f354:	csel	x9, x28, x9, gt
   1f358:	stur	x9, [x29, #-24]
   1f35c:	cbz	w8, 1f0d8 <ZSTD_endStream@@Base+0x11184>
   1f360:	b	1f034 <ZSTD_endStream@@Base+0x110e0>
   1f364:	ldr	w28, [sp, #20]
   1f368:	ldur	x26, [x29, #-32]
   1f36c:	ldp	x3, x13, [sp, #24]
   1f370:	ldr	x25, [sp, #56]
   1f374:	b	1f398 <ZSTD_endStream@@Base+0x11444>
   1f378:	ldur	x26, [x29, #-32]
   1f37c:	ldr	x13, [sp, #32]
   1f380:	b	1f388 <ZSTD_endStream@@Base+0x11434>
   1f384:	add	x2, x10, #0x1
   1f388:	ldr	x3, [sp, #24]
   1f38c:	sub	w8, w14, #0x2
   1f390:	mov	w28, w23
   1f394:	mov	w23, w8
   1f398:	ldr	x0, [x13, #24]
   1f39c:	cmp	x2, x3
   1f3a0:	sub	x24, x2, x25
   1f3a4:	str	x14, [sp, #56]
   1f3a8:	stur	x2, [x29, #-24]
   1f3ac:	b.ls	1f3bc <ZSTD_endStream@@Base+0x11468>  // b.plast
   1f3b0:	mov	x1, x25
   1f3b4:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1f3b8:	b	1f428 <ZSTD_endStream@@Base+0x114d4>
   1f3bc:	mov	x1, x25
   1f3c0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1f3c4:	cmp	x24, #0x11
   1f3c8:	b.cc	1f428 <ZSTD_endStream@@Base+0x114d4>  // b.lo, b.ul, b.last
   1f3cc:	ldr	x8, [sp, #32]
   1f3d0:	add	x1, x25, #0x10
   1f3d4:	ldr	x19, [x8, #24]
   1f3d8:	add	x0, x19, #0x10
   1f3dc:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1f3e0:	add	x0, x19, #0x20
   1f3e4:	add	x1, x25, #0x20
   1f3e8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1f3ec:	cmp	x24, #0x31
   1f3f0:	b.lt	1f428 <ZSTD_endStream@@Base+0x114d4>  // b.tstop
   1f3f4:	add	x27, x19, x24
   1f3f8:	add	x19, x19, #0x30
   1f3fc:	add	x25, x25, #0x40
   1f400:	sub	x1, x25, #0x10
   1f404:	mov	x0, x19
   1f408:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1f40c:	add	x0, x19, #0x10
   1f410:	mov	x1, x25
   1f414:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1f418:	add	x19, x19, #0x20
   1f41c:	cmp	x19, x27
   1f420:	add	x25, x25, #0x20
   1f424:	b.cc	1f400 <ZSTD_endStream@@Base+0x114ac>  // b.lo, b.ul, b.last
   1f428:	ldr	x12, [sp, #32]
   1f42c:	sub	x8, x20, #0x3
   1f430:	cmp	x24, #0x10, lsl #12
   1f434:	ldr	x9, [x12, #24]
   1f438:	add	x9, x9, x24
   1f43c:	str	x9, [x12, #24]
   1f440:	b.cc	1f458 <ZSTD_endStream@@Base+0x11504>  // b.lo, b.ul, b.last
   1f444:	ldp	x10, x9, [x12]
   1f448:	sub	x9, x9, x10
   1f44c:	lsr	x9, x9, #3
   1f450:	mov	w10, #0x1                   	// #1
   1f454:	stp	w10, w9, [x12, #72]
   1f458:	ldr	x10, [sp, #56]
   1f45c:	ldr	x9, [x12, #8]
   1f460:	ldur	x13, [x29, #-24]
   1f464:	cmp	x8, #0x10, lsl #12
   1f468:	add	w10, w10, #0x1
   1f46c:	strh	w24, [x9, #4]
   1f470:	str	w10, [x9]
   1f474:	b.cc	1f48c <ZSTD_endStream@@Base+0x11538>  // b.lo, b.ul, b.last
   1f478:	ldp	x11, x10, [x12]
   1f47c:	sub	x10, x10, x11
   1f480:	lsr	x10, x10, #3
   1f484:	mov	w11, #0x2                   	// #2
   1f488:	stp	w11, w10, [x12, #72]
   1f48c:	strh	w8, [x9, #6]
   1f490:	add	x8, x9, #0x8
   1f494:	add	x27, x13, x20
   1f498:	str	x8, [x12, #8]
   1f49c:	str	x27, [sp, #56]
   1f4a0:	b	1f4bc <ZSTD_endStream@@Base+0x11568>
   1f4a4:	mov	w8, wzr
   1f4a8:	mov	w24, w28
   1f4ac:	mov	w28, w23
   1f4b0:	mov	w23, w28
   1f4b4:	mov	w28, w24
   1f4b8:	tbz	w8, #0, 1ef58 <ZSTD_endStream@@Base+0x11004>
   1f4bc:	ldur	x8, [x29, #-16]
   1f4c0:	cmp	x27, x8
   1f4c4:	b.hi	1f5a4 <ZSTD_endStream@@Base+0x11650>  // b.pmore
   1f4c8:	sub	w8, w27, w22
   1f4cc:	sub	w20, w8, w28
   1f4d0:	ldur	x8, [x29, #-40]
   1f4d4:	mvn	w9, w20
   1f4d8:	cmp	w20, w21
   1f4dc:	add	w9, w21, w9
   1f4e0:	csel	x8, x8, x22, cc  // cc = lo, ul, last
   1f4e4:	cmp	w9, #0x3
   1f4e8:	b.cc	1f4a4 <ZSTD_endStream@@Base+0x11550>  // b.lo, b.ul, b.last
   1f4ec:	add	x19, x8, x20
   1f4f0:	mov	x0, x19
   1f4f4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f4f8:	mov	w24, w0
   1f4fc:	mov	x0, x27
   1f500:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f504:	cmp	w24, w0
   1f508:	b.ne	1f4a4 <ZSTD_endStream@@Base+0x11550>  // b.any
   1f50c:	ldp	x8, x4, [sp, #40]
   1f510:	cmp	w20, w21
   1f514:	add	x0, x27, #0x4
   1f518:	add	x1, x19, #0x4
   1f51c:	csel	x3, x8, x26, cc  // cc = lo, ul, last
   1f520:	mov	x2, x26
   1f524:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1f528:	ldp	x3, x24, [sp, #24]
   1f52c:	ldr	x1, [sp, #56]
   1f530:	mov	x19, x0
   1f534:	add	x20, x19, #0x1
   1f538:	ldr	x0, [x24, #24]
   1f53c:	cmp	x1, x3
   1f540:	b.ls	1f550 <ZSTD_endStream@@Base+0x115fc>  // b.plast
   1f544:	mov	x2, x1
   1f548:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1f54c:	b	1f554 <ZSTD_endStream@@Base+0x11600>
   1f550:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1f554:	ldr	x9, [x24, #8]
   1f558:	add	x8, x19, #0x4
   1f55c:	cmp	x20, #0x10, lsl #12
   1f560:	mov	w10, #0x1                   	// #1
   1f564:	strh	wzr, [x9, #4]
   1f568:	str	w10, [x9]
   1f56c:	b.cc	1f584 <ZSTD_endStream@@Base+0x11630>  // b.lo, b.ul, b.last
   1f570:	ldp	x11, x10, [x24]
   1f574:	sub	x10, x10, x11
   1f578:	lsr	x10, x10, #3
   1f57c:	mov	w11, #0x2                   	// #2
   1f580:	stp	w11, w10, [x24, #72]
   1f584:	strh	w20, [x9, #6]
   1f588:	add	x9, x9, #0x8
   1f58c:	add	x27, x27, x8
   1f590:	str	x9, [x24, #8]
   1f594:	mov	w8, #0x1                   	// #1
   1f598:	mov	w24, w23
   1f59c:	str	x27, [sp, #56]
   1f5a0:	b	1f4b0 <ZSTD_endStream@@Base+0x1155c>
   1f5a4:	mov	w24, w28
   1f5a8:	b	1ef58 <ZSTD_endStream@@Base+0x11004>
   1f5ac:	ldr	x8, [sp, #56]
   1f5b0:	sub	x0, x26, x8
   1f5b4:	ldr	x8, [sp]
   1f5b8:	stp	w23, w24, [x8]
   1f5bc:	ldp	x20, x19, [sp, #208]
   1f5c0:	ldp	x22, x21, [sp, #192]
   1f5c4:	ldp	x24, x23, [sp, #176]
   1f5c8:	ldp	x26, x25, [sp, #160]
   1f5cc:	ldp	x28, x27, [sp, #144]
   1f5d0:	ldp	x29, x30, [sp, #128]
   1f5d4:	add	sp, sp, #0xe0
   1f5d8:	ret
   1f5dc:	sub	sp, sp, #0xe0
   1f5e0:	stp	x29, x30, [sp, #128]
   1f5e4:	stp	x28, x27, [sp, #144]
   1f5e8:	stp	x26, x25, [sp, #160]
   1f5ec:	stp	x24, x23, [sp, #176]
   1f5f0:	stp	x22, x21, [sp, #192]
   1f5f4:	stp	x20, x19, [sp, #208]
   1f5f8:	ldr	x8, [x0, #176]
   1f5fc:	add	x29, sp, #0x80
   1f600:	ldr	x22, [x0, #8]
   1f604:	ldr	w21, [x0, #24]
   1f608:	stur	x0, [x29, #-48]
   1f60c:	ldr	w9, [x8, #24]
   1f610:	ldp	x12, x11, [x8]
   1f614:	add	x8, x22, x21
   1f618:	ldp	w23, w24, [x2]
   1f61c:	stp	x8, x3, [sp, #48]
   1f620:	sub	w8, w3, w8
   1f624:	add	x9, x11, x9
   1f628:	add	w8, w12, w8
   1f62c:	add	x26, x3, x4
   1f630:	cmp	w8, w9
   1f634:	sub	x10, x26, #0x8
   1f638:	cinc	x27, x3, eq  // eq = none
   1f63c:	cmp	x27, x10
   1f640:	stp	x2, x9, [sp]
   1f644:	stur	x10, [x29, #-16]
   1f648:	str	x1, [sp, #32]
   1f64c:	b.cs	1fce4 <ZSTD_endStream@@Base+0x11d90>  // b.hs, b.nlast
   1f650:	sub	w8, w11, w12
   1f654:	add	w8, w21, w8
   1f658:	sub	x9, x26, #0x20
   1f65c:	stur	w8, [x29, #-60]
   1f660:	sub	x8, x11, w8, uxtw
   1f664:	str	x12, [sp, #40]
   1f668:	str	x9, [sp, #24]
   1f66c:	stur	x11, [x29, #-56]
   1f670:	stp	x8, x26, [x29, #-40]
   1f674:	b	1f69c <ZSTD_endStream@@Base+0x11748>
   1f678:	ldr	x8, [sp, #56]
   1f67c:	ldur	x26, [x29, #-32]
   1f680:	ldr	w24, [sp, #20]
   1f684:	sub	x8, x27, x8
   1f688:	add	x8, x27, x8, asr #8
   1f68c:	add	x27, x8, #0x1
   1f690:	ldur	x8, [x29, #-16]
   1f694:	cmp	x27, x8
   1f698:	b.cs	1fce4 <ZSTD_endStream@@Base+0x11d90>  // b.hs, b.nlast
   1f69c:	sub	w8, w27, w22
   1f6a0:	sub	w8, w8, w23
   1f6a4:	add	w20, w8, #0x1
   1f6a8:	ldur	w8, [x29, #-60]
   1f6ac:	ldur	x11, [x29, #-56]
   1f6b0:	mvn	w10, w20
   1f6b4:	add	x9, x22, x20
   1f6b8:	sub	w8, w20, w8
   1f6bc:	cmp	w20, w21
   1f6c0:	add	x8, x11, x8
   1f6c4:	add	w10, w21, w10
   1f6c8:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1f6cc:	cmp	w10, #0x3
   1f6d0:	add	x26, x27, #0x1
   1f6d4:	str	w24, [sp, #20]
   1f6d8:	b.cc	1f71c <ZSTD_endStream@@Base+0x117c8>  // b.lo, b.ul, b.last
   1f6dc:	mov	x0, x19
   1f6e0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f6e4:	mov	w28, w0
   1f6e8:	mov	x0, x26
   1f6ec:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f6f0:	cmp	w28, w0
   1f6f4:	b.ne	1f71c <ZSTD_endStream@@Base+0x117c8>  // b.any
   1f6f8:	ldur	x2, [x29, #-32]
   1f6fc:	ldp	x8, x4, [sp, #40]
   1f700:	cmp	w20, w21
   1f704:	add	x0, x27, #0x5
   1f708:	add	x1, x19, #0x4
   1f70c:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   1f710:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1f714:	add	x19, x0, #0x4
   1f718:	b	1f720 <ZSTD_endStream@@Base+0x117cc>
   1f71c:	mov	x19, xzr
   1f720:	ldur	x0, [x29, #-48]
   1f724:	ldur	x2, [x29, #-32]
   1f728:	mov	w8, #0xc9ff                	// #51711
   1f72c:	movk	w8, #0x3b9a, lsl #16
   1f730:	sub	x3, x29, #0x8
   1f734:	mov	x1, x27
   1f738:	stur	x8, [x29, #-8]
   1f73c:	bl	248c0 <ZSTD_endStream@@Base+0x1696c>
   1f740:	ldur	x8, [x29, #-8]
   1f744:	cmp	x0, x19
   1f748:	csel	x20, x0, x19, hi  // hi = pmore
   1f74c:	csel	x9, x27, x26, hi  // hi = pmore
   1f750:	csel	x25, x8, xzr, hi  // hi = pmore
   1f754:	cmp	x20, #0x3
   1f758:	b.ls	1f678 <ZSTD_endStream@@Base+0x11724>  // b.plast
   1f75c:	ldur	x8, [x29, #-16]
   1f760:	stur	x9, [x29, #-24]
   1f764:	cmp	x27, x8
   1f768:	b.cc	1f820 <ZSTD_endStream@@Base+0x118cc>  // b.lo, b.ul, b.last
   1f76c:	ldur	x2, [x29, #-24]
   1f770:	mov	x14, x25
   1f774:	cbz	x25, 1fa9c <ZSTD_endStream@@Base+0x11b48>
   1f778:	add	x8, x14, x22
   1f77c:	mov	x9, #0xffffffffffff0002    	// #-65534
   1f780:	sub	x8, x2, x8
   1f784:	movk	x9, #0x0, lsl #16
   1f788:	add	x10, x8, x9
   1f78c:	ldur	x8, [x29, #-40]
   1f790:	cmp	w21, w10
   1f794:	ldr	x11, [sp, #8]
   1f798:	csel	x9, x8, x22, hi  // hi = pmore
   1f79c:	ldp	x8, x25, [sp, #48]
   1f7a0:	csel	x8, x11, x8, hi  // hi = pmore
   1f7a4:	cmp	x2, x25
   1f7a8:	b.ls	1fab0 <ZSTD_endStream@@Base+0x11b5c>  // b.plast
   1f7ac:	and	x10, x10, #0xffffffff
   1f7b0:	add	x11, x9, x10
   1f7b4:	cmp	x11, x8
   1f7b8:	b.ls	1fab0 <ZSTD_endStream@@Base+0x11b5c>  // b.plast
   1f7bc:	ldur	x26, [x29, #-32]
   1f7c0:	ldr	x13, [sp, #32]
   1f7c4:	add	x9, x9, x10
   1f7c8:	sub	x9, x9, #0x1
   1f7cc:	sub	x10, x2, #0x1
   1f7d0:	ldrb	w11, [x10]
   1f7d4:	ldrb	w12, [x9]
   1f7d8:	cmp	w11, w12
   1f7dc:	b.ne	1fabc <ZSTD_endStream@@Base+0x11b68>  // b.any
   1f7e0:	add	x20, x20, #0x1
   1f7e4:	cmp	x9, x8
   1f7e8:	sub	x11, x10, #0x1
   1f7ec:	b.ls	1f800 <ZSTD_endStream@@Base+0x118ac>  // b.plast
   1f7f0:	cmp	x10, x25
   1f7f4:	sub	x9, x9, #0x1
   1f7f8:	mov	x10, x11
   1f7fc:	b.hi	1f7d0 <ZSTD_endStream@@Base+0x1187c>  // b.pmore
   1f800:	add	x2, x11, #0x1
   1f804:	b	1fac0 <ZSTD_endStream@@Base+0x11b6c>
   1f808:	mov	w8, #0x1                   	// #1
   1f80c:	cbnz	w8, 1f76c <ZSTD_endStream@@Base+0x11818>
   1f810:	ldur	x8, [x29, #-16]
   1f814:	mov	x27, x28
   1f818:	cmp	x28, x8
   1f81c:	b.cs	1f76c <ZSTD_endStream@@Base+0x11818>  // b.hs, b.nlast
   1f820:	add	x28, x27, #0x1
   1f824:	sub	w8, w28, w22
   1f828:	sub	w26, w8, w23
   1f82c:	ldur	w8, [x29, #-60]
   1f830:	ldur	x11, [x29, #-56]
   1f834:	mvn	w10, w26
   1f838:	add	x9, x22, x26
   1f83c:	sub	w8, w26, w8
   1f840:	cmp	w26, w21
   1f844:	add	x8, x11, x8
   1f848:	add	w10, w21, w10
   1f84c:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1f850:	cmp	w10, #0x3
   1f854:	b.cc	1f8d4 <ZSTD_endStream@@Base+0x11980>  // b.lo, b.ul, b.last
   1f858:	mov	x0, x19
   1f85c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f860:	mov	w24, w0
   1f864:	mov	x0, x28
   1f868:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f86c:	cmp	w24, w0
   1f870:	b.ne	1f8d4 <ZSTD_endStream@@Base+0x11980>  // b.any
   1f874:	ldur	x24, [x29, #-32]
   1f878:	ldp	x8, x4, [sp, #40]
   1f87c:	cmp	w26, w21
   1f880:	add	x0, x27, #0x5
   1f884:	add	x1, x19, #0x4
   1f888:	csel	x3, x8, x24, cc  // cc = lo, ul, last
   1f88c:	mov	x2, x24
   1f890:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1f894:	cmn	x0, #0x5
   1f898:	b.hi	1f8d8 <ZSTD_endStream@@Base+0x11984>  // b.pmore
   1f89c:	add	x19, x0, #0x4
   1f8a0:	add	w0, w25, #0x1
   1f8a4:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f8a8:	add	w8, w20, w20, lsl #1
   1f8ac:	sub	w8, w8, w0
   1f8b0:	add	w9, w19, w19, lsl #1
   1f8b4:	add	w8, w8, #0x1
   1f8b8:	cmp	w9, w8
   1f8bc:	ldur	x8, [x29, #-24]
   1f8c0:	csel	x25, xzr, x25, gt
   1f8c4:	csel	x20, x19, x20, gt
   1f8c8:	csel	x8, x28, x8, gt
   1f8cc:	stur	x8, [x29, #-24]
   1f8d0:	b	1f8d8 <ZSTD_endStream@@Base+0x11984>
   1f8d4:	ldur	x24, [x29, #-32]
   1f8d8:	ldur	x0, [x29, #-48]
   1f8dc:	mov	w8, #0xc9ff                	// #51711
   1f8e0:	movk	w8, #0x3b9a, lsl #16
   1f8e4:	sub	x3, x29, #0x8
   1f8e8:	mov	x1, x28
   1f8ec:	mov	x2, x24
   1f8f0:	stur	x8, [x29, #-8]
   1f8f4:	bl	248c0 <ZSTD_endStream@@Base+0x1696c>
   1f8f8:	cmp	x0, #0x4
   1f8fc:	b.cc	1f954 <ZSTD_endStream@@Base+0x11a00>  // b.lo, b.ul, b.last
   1f900:	ldur	x26, [x29, #-8]
   1f904:	mov	x19, x0
   1f908:	add	w0, w25, #0x1
   1f90c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f910:	mov	w24, w0
   1f914:	add	w0, w26, #0x1
   1f918:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f91c:	lsl	w8, w20, #2
   1f920:	lsl	w9, w19, #2
   1f924:	sub	w8, w8, w24
   1f928:	sub	w9, w9, w0
   1f92c:	add	w8, w8, #0x4
   1f930:	cmp	w9, w8
   1f934:	ldur	x9, [x29, #-24]
   1f938:	cset	w8, le
   1f93c:	csel	x25, x26, x25, gt
   1f940:	csel	x20, x19, x20, gt
   1f944:	csel	x9, x28, x9, gt
   1f948:	stur	x9, [x29, #-24]
   1f94c:	tbnz	w8, #0, 1f95c <ZSTD_endStream@@Base+0x11a08>
   1f950:	b	1f810 <ZSTD_endStream@@Base+0x118bc>
   1f954:	mov	w8, #0x1                   	// #1
   1f958:	tbz	w8, #0, 1f810 <ZSTD_endStream@@Base+0x118bc>
   1f95c:	ldur	x8, [x29, #-16]
   1f960:	cmp	x28, x8
   1f964:	b.cs	1f76c <ZSTD_endStream@@Base+0x11818>  // b.hs, b.nlast
   1f968:	add	x28, x27, #0x2
   1f96c:	sub	w8, w28, w22
   1f970:	sub	w26, w8, w23
   1f974:	ldur	w8, [x29, #-60]
   1f978:	ldur	x11, [x29, #-56]
   1f97c:	mvn	w10, w26
   1f980:	add	x9, x22, x26
   1f984:	sub	w8, w26, w8
   1f988:	cmp	w26, w21
   1f98c:	add	x8, x11, x8
   1f990:	add	w10, w21, w10
   1f994:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1f998:	cmp	w10, #0x3
   1f99c:	b.cc	1fa1c <ZSTD_endStream@@Base+0x11ac8>  // b.lo, b.ul, b.last
   1f9a0:	mov	x0, x19
   1f9a4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f9a8:	mov	w24, w0
   1f9ac:	mov	x0, x28
   1f9b0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1f9b4:	cmp	w24, w0
   1f9b8:	b.ne	1fa1c <ZSTD_endStream@@Base+0x11ac8>  // b.any
   1f9bc:	ldur	x24, [x29, #-32]
   1f9c0:	ldp	x8, x4, [sp, #40]
   1f9c4:	cmp	w26, w21
   1f9c8:	add	x0, x27, #0x6
   1f9cc:	add	x1, x19, #0x4
   1f9d0:	csel	x3, x8, x24, cc  // cc = lo, ul, last
   1f9d4:	mov	x2, x24
   1f9d8:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1f9dc:	cmn	x0, #0x5
   1f9e0:	b.hi	1fa20 <ZSTD_endStream@@Base+0x11acc>  // b.pmore
   1f9e4:	add	x19, x0, #0x4
   1f9e8:	add	w0, w25, #0x1
   1f9ec:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1f9f0:	mov	w8, #0x1                   	// #1
   1f9f4:	bfi	w8, w20, #2, #30
   1f9f8:	lsl	w9, w19, #2
   1f9fc:	sub	w8, w8, w0
   1fa00:	cmp	w9, w8
   1fa04:	ldur	x8, [x29, #-24]
   1fa08:	csel	x25, xzr, x25, gt
   1fa0c:	csel	x20, x19, x20, gt
   1fa10:	csel	x8, x28, x8, gt
   1fa14:	stur	x8, [x29, #-24]
   1fa18:	b	1fa20 <ZSTD_endStream@@Base+0x11acc>
   1fa1c:	ldur	x24, [x29, #-32]
   1fa20:	ldur	x0, [x29, #-48]
   1fa24:	mov	w8, #0xc9ff                	// #51711
   1fa28:	movk	w8, #0x3b9a, lsl #16
   1fa2c:	sub	x3, x29, #0x8
   1fa30:	mov	x1, x28
   1fa34:	mov	x2, x24
   1fa38:	stur	x8, [x29, #-8]
   1fa3c:	bl	248c0 <ZSTD_endStream@@Base+0x1696c>
   1fa40:	cmp	x0, #0x4
   1fa44:	b.cc	1f808 <ZSTD_endStream@@Base+0x118b4>  // b.lo, b.ul, b.last
   1fa48:	ldur	x26, [x29, #-8]
   1fa4c:	mov	x19, x0
   1fa50:	add	w0, w25, #0x1
   1fa54:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1fa58:	mov	w24, w0
   1fa5c:	add	w0, w26, #0x1
   1fa60:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1fa64:	lsl	w8, w20, #2
   1fa68:	lsl	w9, w19, #2
   1fa6c:	sub	w8, w8, w24
   1fa70:	sub	w9, w9, w0
   1fa74:	add	w8, w8, #0x7
   1fa78:	cmp	w9, w8
   1fa7c:	ldur	x9, [x29, #-24]
   1fa80:	cset	w8, le
   1fa84:	csel	x25, x26, x25, gt
   1fa88:	csel	x20, x19, x20, gt
   1fa8c:	csel	x9, x28, x9, gt
   1fa90:	stur	x9, [x29, #-24]
   1fa94:	cbz	w8, 1f810 <ZSTD_endStream@@Base+0x118bc>
   1fa98:	b	1f76c <ZSTD_endStream@@Base+0x11818>
   1fa9c:	ldr	w28, [sp, #20]
   1faa0:	ldur	x26, [x29, #-32]
   1faa4:	ldp	x3, x13, [sp, #24]
   1faa8:	ldr	x25, [sp, #56]
   1faac:	b	1fad0 <ZSTD_endStream@@Base+0x11b7c>
   1fab0:	ldur	x26, [x29, #-32]
   1fab4:	ldr	x13, [sp, #32]
   1fab8:	b	1fac0 <ZSTD_endStream@@Base+0x11b6c>
   1fabc:	add	x2, x10, #0x1
   1fac0:	ldr	x3, [sp, #24]
   1fac4:	sub	w8, w14, #0x2
   1fac8:	mov	w28, w23
   1facc:	mov	w23, w8
   1fad0:	ldr	x0, [x13, #24]
   1fad4:	cmp	x2, x3
   1fad8:	sub	x24, x2, x25
   1fadc:	str	x14, [sp, #56]
   1fae0:	stur	x2, [x29, #-24]
   1fae4:	b.ls	1faf4 <ZSTD_endStream@@Base+0x11ba0>  // b.plast
   1fae8:	mov	x1, x25
   1faec:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1faf0:	b	1fb60 <ZSTD_endStream@@Base+0x11c0c>
   1faf4:	mov	x1, x25
   1faf8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1fafc:	cmp	x24, #0x11
   1fb00:	b.cc	1fb60 <ZSTD_endStream@@Base+0x11c0c>  // b.lo, b.ul, b.last
   1fb04:	ldr	x8, [sp, #32]
   1fb08:	add	x1, x25, #0x10
   1fb0c:	ldr	x19, [x8, #24]
   1fb10:	add	x0, x19, #0x10
   1fb14:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1fb18:	add	x0, x19, #0x20
   1fb1c:	add	x1, x25, #0x20
   1fb20:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1fb24:	cmp	x24, #0x31
   1fb28:	b.lt	1fb60 <ZSTD_endStream@@Base+0x11c0c>  // b.tstop
   1fb2c:	add	x27, x19, x24
   1fb30:	add	x19, x19, #0x30
   1fb34:	add	x25, x25, #0x40
   1fb38:	sub	x1, x25, #0x10
   1fb3c:	mov	x0, x19
   1fb40:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1fb44:	add	x0, x19, #0x10
   1fb48:	mov	x1, x25
   1fb4c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1fb50:	add	x19, x19, #0x20
   1fb54:	cmp	x19, x27
   1fb58:	add	x25, x25, #0x20
   1fb5c:	b.cc	1fb38 <ZSTD_endStream@@Base+0x11be4>  // b.lo, b.ul, b.last
   1fb60:	ldr	x12, [sp, #32]
   1fb64:	sub	x8, x20, #0x3
   1fb68:	cmp	x24, #0x10, lsl #12
   1fb6c:	ldr	x9, [x12, #24]
   1fb70:	add	x9, x9, x24
   1fb74:	str	x9, [x12, #24]
   1fb78:	b.cc	1fb90 <ZSTD_endStream@@Base+0x11c3c>  // b.lo, b.ul, b.last
   1fb7c:	ldp	x10, x9, [x12]
   1fb80:	sub	x9, x9, x10
   1fb84:	lsr	x9, x9, #3
   1fb88:	mov	w10, #0x1                   	// #1
   1fb8c:	stp	w10, w9, [x12, #72]
   1fb90:	ldr	x10, [sp, #56]
   1fb94:	ldr	x9, [x12, #8]
   1fb98:	ldur	x13, [x29, #-24]
   1fb9c:	cmp	x8, #0x10, lsl #12
   1fba0:	add	w10, w10, #0x1
   1fba4:	strh	w24, [x9, #4]
   1fba8:	str	w10, [x9]
   1fbac:	b.cc	1fbc4 <ZSTD_endStream@@Base+0x11c70>  // b.lo, b.ul, b.last
   1fbb0:	ldp	x11, x10, [x12]
   1fbb4:	sub	x10, x10, x11
   1fbb8:	lsr	x10, x10, #3
   1fbbc:	mov	w11, #0x2                   	// #2
   1fbc0:	stp	w11, w10, [x12, #72]
   1fbc4:	strh	w8, [x9, #6]
   1fbc8:	add	x8, x9, #0x8
   1fbcc:	add	x27, x13, x20
   1fbd0:	str	x8, [x12, #8]
   1fbd4:	str	x27, [sp, #56]
   1fbd8:	b	1fbf4 <ZSTD_endStream@@Base+0x11ca0>
   1fbdc:	mov	w8, wzr
   1fbe0:	mov	w24, w28
   1fbe4:	mov	w28, w23
   1fbe8:	mov	w23, w28
   1fbec:	mov	w28, w24
   1fbf0:	tbz	w8, #0, 1f690 <ZSTD_endStream@@Base+0x1173c>
   1fbf4:	ldur	x8, [x29, #-16]
   1fbf8:	cmp	x27, x8
   1fbfc:	b.hi	1fcdc <ZSTD_endStream@@Base+0x11d88>  // b.pmore
   1fc00:	sub	w8, w27, w22
   1fc04:	sub	w20, w8, w28
   1fc08:	ldur	x8, [x29, #-40]
   1fc0c:	mvn	w9, w20
   1fc10:	cmp	w20, w21
   1fc14:	add	w9, w21, w9
   1fc18:	csel	x8, x8, x22, cc  // cc = lo, ul, last
   1fc1c:	cmp	w9, #0x3
   1fc20:	b.cc	1fbdc <ZSTD_endStream@@Base+0x11c88>  // b.lo, b.ul, b.last
   1fc24:	add	x19, x8, x20
   1fc28:	mov	x0, x19
   1fc2c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1fc30:	mov	w24, w0
   1fc34:	mov	x0, x27
   1fc38:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1fc3c:	cmp	w24, w0
   1fc40:	b.ne	1fbdc <ZSTD_endStream@@Base+0x11c88>  // b.any
   1fc44:	ldp	x8, x4, [sp, #40]
   1fc48:	cmp	w20, w21
   1fc4c:	add	x0, x27, #0x4
   1fc50:	add	x1, x19, #0x4
   1fc54:	csel	x3, x8, x26, cc  // cc = lo, ul, last
   1fc58:	mov	x2, x26
   1fc5c:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1fc60:	ldp	x3, x24, [sp, #24]
   1fc64:	ldr	x1, [sp, #56]
   1fc68:	mov	x19, x0
   1fc6c:	add	x20, x19, #0x1
   1fc70:	ldr	x0, [x24, #24]
   1fc74:	cmp	x1, x3
   1fc78:	b.ls	1fc88 <ZSTD_endStream@@Base+0x11d34>  // b.plast
   1fc7c:	mov	x2, x1
   1fc80:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   1fc84:	b	1fc8c <ZSTD_endStream@@Base+0x11d38>
   1fc88:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   1fc8c:	ldr	x9, [x24, #8]
   1fc90:	add	x8, x19, #0x4
   1fc94:	cmp	x20, #0x10, lsl #12
   1fc98:	mov	w10, #0x1                   	// #1
   1fc9c:	strh	wzr, [x9, #4]
   1fca0:	str	w10, [x9]
   1fca4:	b.cc	1fcbc <ZSTD_endStream@@Base+0x11d68>  // b.lo, b.ul, b.last
   1fca8:	ldp	x11, x10, [x24]
   1fcac:	sub	x10, x10, x11
   1fcb0:	lsr	x10, x10, #3
   1fcb4:	mov	w11, #0x2                   	// #2
   1fcb8:	stp	w11, w10, [x24, #72]
   1fcbc:	strh	w20, [x9, #6]
   1fcc0:	add	x9, x9, #0x8
   1fcc4:	add	x27, x27, x8
   1fcc8:	str	x9, [x24, #8]
   1fccc:	mov	w8, #0x1                   	// #1
   1fcd0:	mov	w24, w23
   1fcd4:	str	x27, [sp, #56]
   1fcd8:	b	1fbe8 <ZSTD_endStream@@Base+0x11c94>
   1fcdc:	mov	w24, w28
   1fce0:	b	1f690 <ZSTD_endStream@@Base+0x1173c>
   1fce4:	ldr	x8, [sp, #56]
   1fce8:	sub	x0, x26, x8
   1fcec:	ldr	x8, [sp]
   1fcf0:	stp	w23, w24, [x8]
   1fcf4:	ldp	x20, x19, [sp, #208]
   1fcf8:	ldp	x22, x21, [sp, #192]
   1fcfc:	ldp	x24, x23, [sp, #176]
   1fd00:	ldp	x26, x25, [sp, #160]
   1fd04:	ldp	x28, x27, [sp, #144]
   1fd08:	ldp	x29, x30, [sp, #128]
   1fd0c:	add	sp, sp, #0xe0
   1fd10:	ret
   1fd14:	sub	sp, sp, #0xe0
   1fd18:	stp	x29, x30, [sp, #128]
   1fd1c:	stp	x28, x27, [sp, #144]
   1fd20:	stp	x26, x25, [sp, #160]
   1fd24:	stp	x24, x23, [sp, #176]
   1fd28:	stp	x22, x21, [sp, #192]
   1fd2c:	stp	x20, x19, [sp, #208]
   1fd30:	ldr	x8, [x0, #176]
   1fd34:	add	x29, sp, #0x80
   1fd38:	ldr	x13, [x0, #8]
   1fd3c:	ldr	w21, [x0, #24]
   1fd40:	stur	x0, [x29, #-32]
   1fd44:	ldp	w20, w12, [x2]
   1fd48:	str	x2, [sp]
   1fd4c:	ldr	w9, [x8, #24]
   1fd50:	ldp	x11, x26, [x8]
   1fd54:	add	x8, x13, x21
   1fd58:	str	x8, [sp, #40]
   1fd5c:	sub	w8, w3, w8
   1fd60:	add	x9, x26, x9
   1fd64:	add	w8, w11, w8
   1fd68:	add	x25, x3, x4
   1fd6c:	cmp	w8, w9
   1fd70:	sub	x10, x25, #0x8
   1fd74:	cinc	x27, x3, eq  // eq = none
   1fd78:	cmp	x27, x10
   1fd7c:	stur	x13, [x29, #-24]
   1fd80:	str	x9, [sp, #8]
   1fd84:	str	x3, [sp, #56]
   1fd88:	stur	x10, [x29, #-16]
   1fd8c:	str	x1, [sp, #48]
   1fd90:	b.cs	202d4 <ZSTD_endStream@@Base+0x12380>  // b.hs, b.nlast
   1fd94:	sub	w8, w26, w11
   1fd98:	add	w8, w21, w8
   1fd9c:	sub	x9, x25, #0x20
   1fda0:	stur	w8, [x29, #-36]
   1fda4:	sub	x8, x26, w8, uxtw
   1fda8:	str	x9, [sp, #24]
   1fdac:	str	x8, [sp, #64]
   1fdb0:	stur	x25, [x29, #-56]
   1fdb4:	str	x11, [sp, #32]
   1fdb8:	stur	x26, [x29, #-48]
   1fdbc:	b	1fde4 <ZSTD_endStream@@Base+0x11e90>
   1fdc0:	ldr	x8, [sp, #56]
   1fdc4:	ldur	x26, [x29, #-48]
   1fdc8:	ldr	w12, [sp, #20]
   1fdcc:	sub	x8, x27, x8
   1fdd0:	add	x8, x27, x8, asr #8
   1fdd4:	add	x27, x8, #0x1
   1fdd8:	ldur	x8, [x29, #-16]
   1fddc:	cmp	x27, x8
   1fde0:	b.cs	202d4 <ZSTD_endStream@@Base+0x12380>  // b.hs, b.nlast
   1fde4:	ldur	x9, [x29, #-24]
   1fde8:	str	w12, [sp, #20]
   1fdec:	sub	w8, w27, w9
   1fdf0:	sub	w8, w8, w20
   1fdf4:	add	w23, w8, #0x1
   1fdf8:	ldur	w8, [x29, #-36]
   1fdfc:	mvn	w10, w23
   1fe00:	add	x9, x9, x23
   1fe04:	cmp	w23, w21
   1fe08:	sub	w8, w23, w8
   1fe0c:	add	x8, x26, x8
   1fe10:	add	w10, w21, w10
   1fe14:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1fe18:	cmp	w10, #0x3
   1fe1c:	add	x26, x27, #0x1
   1fe20:	b.cc	1fe64 <ZSTD_endStream@@Base+0x11f10>  // b.lo, b.ul, b.last
   1fe24:	mov	x0, x19
   1fe28:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1fe2c:	mov	w28, w0
   1fe30:	mov	x0, x26
   1fe34:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1fe38:	cmp	w28, w0
   1fe3c:	b.ne	1fe64 <ZSTD_endStream@@Base+0x11f10>  // b.any
   1fe40:	ldp	x8, x4, [sp, #32]
   1fe44:	cmp	w23, w21
   1fe48:	add	x0, x27, #0x5
   1fe4c:	add	x1, x19, #0x4
   1fe50:	csel	x3, x8, x25, cc  // cc = lo, ul, last
   1fe54:	mov	x2, x25
   1fe58:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1fe5c:	add	x19, x0, #0x4
   1fe60:	b	1fe68 <ZSTD_endStream@@Base+0x11f14>
   1fe64:	mov	x19, xzr
   1fe68:	ldur	x0, [x29, #-32]
   1fe6c:	mov	w8, #0xc9ff                	// #51711
   1fe70:	movk	w8, #0x3b9a, lsl #16
   1fe74:	sub	x3, x29, #0x8
   1fe78:	mov	x1, x27
   1fe7c:	mov	x2, x25
   1fe80:	stur	x8, [x29, #-8]
   1fe84:	bl	248c0 <ZSTD_endStream@@Base+0x1696c>
   1fe88:	ldur	x8, [x29, #-8]
   1fe8c:	cmp	x0, x19
   1fe90:	csel	x23, x0, x19, hi  // hi = pmore
   1fe94:	csel	x26, x27, x26, hi  // hi = pmore
   1fe98:	csel	x22, x8, xzr, hi  // hi = pmore
   1fe9c:	cmp	x23, #0x3
   1fea0:	b.ls	1fdc0 <ZSTD_endStream@@Base+0x11e6c>  // b.plast
   1fea4:	ldur	x8, [x29, #-16]
   1fea8:	cmp	x27, x8
   1feac:	b.cs	1fff0 <ZSTD_endStream@@Base+0x1209c>  // b.hs, b.nlast
   1feb0:	add	x27, x27, #0x5
   1feb4:	ldur	x9, [x29, #-24]
   1feb8:	sub	x28, x27, #0x4
   1febc:	ldur	x11, [x29, #-48]
   1fec0:	sub	w8, w28, w9
   1fec4:	sub	w25, w8, w20
   1fec8:	ldur	w8, [x29, #-36]
   1fecc:	mvn	w10, w25
   1fed0:	add	x9, x9, x25
   1fed4:	cmp	w25, w21
   1fed8:	sub	w8, w25, w8
   1fedc:	add	x8, x11, x8
   1fee0:	add	w10, w21, w10
   1fee4:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1fee8:	cmp	w10, #0x3
   1feec:	b.cc	1ff64 <ZSTD_endStream@@Base+0x12010>  // b.lo, b.ul, b.last
   1fef0:	mov	x0, x19
   1fef4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1fef8:	mov	w24, w0
   1fefc:	mov	x0, x28
   1ff00:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   1ff04:	cmp	w24, w0
   1ff08:	b.ne	1ff64 <ZSTD_endStream@@Base+0x12010>  // b.any
   1ff0c:	ldur	x24, [x29, #-56]
   1ff10:	ldp	x8, x4, [sp, #32]
   1ff14:	cmp	w25, w21
   1ff18:	add	x1, x19, #0x4
   1ff1c:	mov	x0, x27
   1ff20:	csel	x3, x8, x24, cc  // cc = lo, ul, last
   1ff24:	mov	x2, x24
   1ff28:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   1ff2c:	cmn	x0, #0x5
   1ff30:	b.hi	1ff68 <ZSTD_endStream@@Base+0x12014>  // b.pmore
   1ff34:	add	x19, x0, #0x4
   1ff38:	add	w0, w22, #0x1
   1ff3c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1ff40:	add	w8, w23, w23, lsl #1
   1ff44:	sub	w8, w8, w0
   1ff48:	add	w9, w19, w19, lsl #1
   1ff4c:	add	w8, w8, #0x1
   1ff50:	cmp	w9, w8
   1ff54:	csel	x26, x28, x26, gt
   1ff58:	csel	x22, xzr, x22, gt
   1ff5c:	csel	x23, x19, x23, gt
   1ff60:	b	1ff68 <ZSTD_endStream@@Base+0x12014>
   1ff64:	ldur	x24, [x29, #-56]
   1ff68:	ldur	x0, [x29, #-32]
   1ff6c:	mov	w8, #0xc9ff                	// #51711
   1ff70:	movk	w8, #0x3b9a, lsl #16
   1ff74:	sub	x3, x29, #0x8
   1ff78:	mov	x1, x28
   1ff7c:	mov	x2, x24
   1ff80:	stur	x8, [x29, #-8]
   1ff84:	bl	248c0 <ZSTD_endStream@@Base+0x1696c>
   1ff88:	cmp	x0, #0x4
   1ff8c:	b.cc	1ffd8 <ZSTD_endStream@@Base+0x12084>  // b.lo, b.ul, b.last
   1ff90:	ldur	x25, [x29, #-8]
   1ff94:	mov	x19, x0
   1ff98:	add	w0, w22, #0x1
   1ff9c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1ffa0:	mov	w24, w0
   1ffa4:	add	w0, w25, #0x1
   1ffa8:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   1ffac:	lsl	w8, w23, #2
   1ffb0:	lsl	w9, w19, #2
   1ffb4:	sub	w8, w8, w24
   1ffb8:	sub	w9, w9, w0
   1ffbc:	add	w8, w8, #0x4
   1ffc0:	cmp	w9, w8
   1ffc4:	cset	w8, le
   1ffc8:	csel	x26, x28, x26, gt
   1ffcc:	csel	x22, x25, x22, gt
   1ffd0:	csel	x23, x19, x23, gt
   1ffd4:	b	1ffdc <ZSTD_endStream@@Base+0x12088>
   1ffd8:	mov	w8, #0x1                   	// #1
   1ffdc:	ldur	x9, [x29, #-16]
   1ffe0:	cmp	x28, x9
   1ffe4:	b.cs	1fff0 <ZSTD_endStream@@Base+0x1209c>  // b.hs, b.nlast
   1ffe8:	add	x27, x27, #0x1
   1ffec:	cbz	w8, 1feb4 <ZSTD_endStream@@Base+0x11f60>
   1fff0:	cbz	x22, 20088 <ZSTD_endStream@@Base+0x12134>
   1fff4:	ldur	x11, [x29, #-24]
   1fff8:	mov	x9, #0xffffffffffff0002    	// #-65534
   1fffc:	movk	x9, #0x0, lsl #16
   20000:	mov	x2, x26
   20004:	add	x8, x22, x11
   20008:	sub	x8, x26, x8
   2000c:	add	x10, x8, x9
   20010:	ldp	x25, x8, [sp, #56]
   20014:	cmp	w21, w10
   20018:	csel	x9, x8, x11, hi  // hi = pmore
   2001c:	ldr	x8, [sp, #40]
   20020:	ldr	x11, [sp, #8]
   20024:	csel	x8, x11, x8, hi  // hi = pmore
   20028:	cmp	x26, x25
   2002c:	b.ls	2009c <ZSTD_endStream@@Base+0x12148>  // b.plast
   20030:	and	x10, x10, #0xffffffff
   20034:	add	x11, x9, x10
   20038:	cmp	x11, x8
   2003c:	b.ls	2009c <ZSTD_endStream@@Base+0x12148>  // b.plast
   20040:	ldr	x13, [sp, #48]
   20044:	add	x9, x9, x10
   20048:	sub	x9, x9, #0x1
   2004c:	sub	x10, x2, #0x1
   20050:	ldrb	w11, [x10]
   20054:	ldrb	w12, [x9]
   20058:	cmp	w11, w12
   2005c:	b.ne	200a4 <ZSTD_endStream@@Base+0x12150>  // b.any
   20060:	add	x23, x23, #0x1
   20064:	cmp	x9, x8
   20068:	sub	x11, x10, #0x1
   2006c:	b.ls	20080 <ZSTD_endStream@@Base+0x1212c>  // b.plast
   20070:	cmp	x10, x25
   20074:	sub	x9, x9, #0x1
   20078:	mov	x10, x11
   2007c:	b.hi	20050 <ZSTD_endStream@@Base+0x120fc>  // b.pmore
   20080:	add	x2, x11, #0x1
   20084:	b	200a8 <ZSTD_endStream@@Base+0x12154>
   20088:	ldr	w28, [sp, #20]
   2008c:	ldp	x13, x25, [sp, #48]
   20090:	ldr	x3, [sp, #24]
   20094:	mov	x2, x26
   20098:	b	200b8 <ZSTD_endStream@@Base+0x12164>
   2009c:	ldr	x13, [sp, #48]
   200a0:	b	200a8 <ZSTD_endStream@@Base+0x12154>
   200a4:	add	x2, x10, #0x1
   200a8:	ldr	x3, [sp, #24]
   200ac:	sub	w8, w22, #0x2
   200b0:	mov	w28, w20
   200b4:	mov	w20, w8
   200b8:	ldr	x0, [x13, #24]
   200bc:	cmp	x2, x3
   200c0:	sub	x24, x2, x25
   200c4:	b.ls	200d8 <ZSTD_endStream@@Base+0x12184>  // b.plast
   200c8:	mov	x1, x25
   200cc:	mov	x26, x2
   200d0:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   200d4:	b	20148 <ZSTD_endStream@@Base+0x121f4>
   200d8:	mov	x1, x25
   200dc:	mov	x26, x2
   200e0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   200e4:	cmp	x24, #0x11
   200e8:	b.cc	20148 <ZSTD_endStream@@Base+0x121f4>  // b.lo, b.ul, b.last
   200ec:	ldr	x8, [sp, #48]
   200f0:	add	x1, x25, #0x10
   200f4:	ldr	x19, [x8, #24]
   200f8:	add	x0, x19, #0x10
   200fc:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   20100:	add	x0, x19, #0x20
   20104:	add	x1, x25, #0x20
   20108:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   2010c:	cmp	x24, #0x31
   20110:	b.lt	20148 <ZSTD_endStream@@Base+0x121f4>  // b.tstop
   20114:	add	x27, x19, x24
   20118:	add	x19, x19, #0x30
   2011c:	add	x25, x25, #0x40
   20120:	sub	x1, x25, #0x10
   20124:	mov	x0, x19
   20128:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   2012c:	add	x0, x19, #0x10
   20130:	mov	x1, x25
   20134:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   20138:	add	x19, x19, #0x20
   2013c:	cmp	x19, x27
   20140:	add	x25, x25, #0x20
   20144:	b.cc	20120 <ZSTD_endStream@@Base+0x121cc>  // b.lo, b.ul, b.last
   20148:	ldr	x12, [sp, #48]
   2014c:	sub	x8, x23, #0x3
   20150:	cmp	x24, #0x10, lsl #12
   20154:	ldr	x9, [x12, #24]
   20158:	add	x9, x9, x24
   2015c:	str	x9, [x12, #24]
   20160:	b.cc	20178 <ZSTD_endStream@@Base+0x12224>  // b.lo, b.ul, b.last
   20164:	ldp	x10, x9, [x12]
   20168:	sub	x9, x9, x10
   2016c:	lsr	x9, x9, #3
   20170:	mov	w10, #0x1                   	// #1
   20174:	stp	w10, w9, [x12, #72]
   20178:	ldr	x9, [x12, #8]
   2017c:	ldur	x25, [x29, #-56]
   20180:	add	w10, w22, #0x1
   20184:	cmp	x8, #0x10, lsl #12
   20188:	strh	w24, [x9, #4]
   2018c:	str	w10, [x9]
   20190:	b.cc	201a8 <ZSTD_endStream@@Base+0x12254>  // b.lo, b.ul, b.last
   20194:	ldp	x11, x10, [x12]
   20198:	sub	x10, x10, x11
   2019c:	lsr	x10, x10, #3
   201a0:	mov	w11, #0x2                   	// #2
   201a4:	stp	w11, w10, [x12, #72]
   201a8:	add	x27, x26, x23
   201ac:	ldur	x26, [x29, #-48]
   201b0:	strh	w8, [x9, #6]
   201b4:	add	x8, x9, #0x8
   201b8:	str	x8, [x12, #8]
   201bc:	str	x27, [sp, #56]
   201c0:	b	201dc <ZSTD_endStream@@Base+0x12288>
   201c4:	mov	w8, wzr
   201c8:	mov	w12, w28
   201cc:	mov	w28, w20
   201d0:	mov	w20, w28
   201d4:	mov	w28, w12
   201d8:	tbz	w8, #0, 1fdd8 <ZSTD_endStream@@Base+0x11e84>
   201dc:	ldur	x8, [x29, #-16]
   201e0:	cmp	x27, x8
   201e4:	b.hi	202cc <ZSTD_endStream@@Base+0x12378>  // b.pmore
   201e8:	ldur	x10, [x29, #-24]
   201ec:	sub	w8, w27, w10
   201f0:	sub	w23, w8, w28
   201f4:	ldr	x8, [sp, #64]
   201f8:	mvn	w9, w23
   201fc:	cmp	w23, w21
   20200:	add	w9, w21, w9
   20204:	csel	x8, x8, x10, cc  // cc = lo, ul, last
   20208:	cmp	w9, #0x3
   2020c:	b.cc	201c4 <ZSTD_endStream@@Base+0x12270>  // b.lo, b.ul, b.last
   20210:	add	x19, x8, x23
   20214:	mov	x0, x19
   20218:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   2021c:	mov	w24, w0
   20220:	mov	x0, x27
   20224:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20228:	cmp	w24, w0
   2022c:	b.ne	201c4 <ZSTD_endStream@@Base+0x12270>  // b.any
   20230:	ldp	x8, x4, [sp, #32]
   20234:	cmp	w23, w21
   20238:	add	x0, x27, #0x4
   2023c:	add	x1, x19, #0x4
   20240:	csel	x3, x8, x25, cc  // cc = lo, ul, last
   20244:	mov	x2, x25
   20248:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   2024c:	ldp	x8, x1, [sp, #48]
   20250:	ldr	x3, [sp, #24]
   20254:	mov	x19, x0
   20258:	add	x23, x19, #0x1
   2025c:	ldr	x0, [x8, #24]
   20260:	cmp	x1, x3
   20264:	b.ls	20274 <ZSTD_endStream@@Base+0x12320>  // b.plast
   20268:	mov	x2, x1
   2026c:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   20270:	b	20278 <ZSTD_endStream@@Base+0x12324>
   20274:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   20278:	ldr	x12, [sp, #48]
   2027c:	add	x8, x19, #0x4
   20280:	cmp	x23, #0x10, lsl #12
   20284:	mov	w10, #0x1                   	// #1
   20288:	ldr	x9, [x12, #8]
   2028c:	strh	wzr, [x9, #4]
   20290:	str	w10, [x9]
   20294:	b.cc	202ac <ZSTD_endStream@@Base+0x12358>  // b.lo, b.ul, b.last
   20298:	ldp	x11, x10, [x12]
   2029c:	sub	x10, x10, x11
   202a0:	lsr	x10, x10, #3
   202a4:	mov	w11, #0x2                   	// #2
   202a8:	stp	w11, w10, [x12, #72]
   202ac:	strh	w23, [x9, #6]
   202b0:	add	x9, x9, #0x8
   202b4:	add	x27, x27, x8
   202b8:	str	x9, [x12, #8]
   202bc:	mov	w8, #0x1                   	// #1
   202c0:	mov	w12, w20
   202c4:	str	x27, [sp, #56]
   202c8:	b	201d0 <ZSTD_endStream@@Base+0x1227c>
   202cc:	mov	w12, w28
   202d0:	b	1fdd8 <ZSTD_endStream@@Base+0x11e84>
   202d4:	ldr	x8, [sp, #56]
   202d8:	sub	x0, x25, x8
   202dc:	ldr	x8, [sp]
   202e0:	stp	w20, w12, [x8]
   202e4:	ldp	x20, x19, [sp, #208]
   202e8:	ldp	x22, x21, [sp, #192]
   202ec:	ldp	x24, x23, [sp, #176]
   202f0:	ldp	x26, x25, [sp, #160]
   202f4:	ldp	x28, x27, [sp, #144]
   202f8:	ldp	x29, x30, [sp, #128]
   202fc:	add	sp, sp, #0xe0
   20300:	ret
   20304:	sub	sp, sp, #0xd0
   20308:	stp	x29, x30, [sp, #112]
   2030c:	stp	x28, x27, [sp, #128]
   20310:	stp	x26, x25, [sp, #144]
   20314:	stp	x24, x23, [sp, #160]
   20318:	stp	x22, x21, [sp, #176]
   2031c:	stp	x20, x19, [sp, #192]
   20320:	ldr	x8, [x0, #176]
   20324:	str	x0, [sp, #16]
   20328:	ldr	x21, [x0, #8]
   2032c:	ldr	w22, [x0, #24]
   20330:	ldp	w24, w20, [x2]
   20334:	str	x2, [sp]
   20338:	ldr	w9, [x8, #24]
   2033c:	ldp	x13, x11, [x8]
   20340:	add	x29, sp, #0x70
   20344:	mov	x25, x3
   20348:	add	x8, x21, x22
   2034c:	stur	x8, [x29, #-48]
   20350:	sub	w8, w25, w8
   20354:	add	x14, x11, x9
   20358:	mov	x9, x13
   2035c:	add	w8, w9, w8
   20360:	add	x12, x3, x4
   20364:	cmp	w8, w14
   20368:	sub	x10, x12, #0x8
   2036c:	cinc	x26, x3, eq  // eq = none
   20370:	cmp	x26, x10
   20374:	str	x14, [sp, #8]
   20378:	stur	x10, [x29, #-16]
   2037c:	b.cs	20788 <ZSTD_endStream@@Base+0x12834>  // b.hs, b.nlast
   20380:	sub	w8, w11, w9
   20384:	add	w8, w22, w8
   20388:	mov	x23, x1
   2038c:	str	x9, [sp, #56]
   20390:	sub	x9, x12, #0x20
   20394:	str	w8, [sp, #28]
   20398:	sub	x8, x11, w8, uxtw
   2039c:	stur	x9, [x29, #-40]
   203a0:	str	x11, [sp, #32]
   203a4:	stp	x12, x8, [x29, #-32]
   203a8:	b	203d0 <ZSTD_endStream@@Base+0x1247c>
   203ac:	ldur	x12, [x29, #-32]
   203b0:	sub	x8, x26, x25
   203b4:	add	x8, x26, x8, asr #8
   203b8:	add	x26, x8, #0x1
   203bc:	mov	w8, w20
   203c0:	ldur	x9, [x29, #-16]
   203c4:	mov	w20, w8
   203c8:	cmp	x26, x9
   203cc:	b.cs	2078c <ZSTD_endStream@@Base+0x12838>  // b.hs, b.nlast
   203d0:	sub	w8, w26, w21
   203d4:	sub	w8, w8, w24
   203d8:	add	w27, w8, #0x1
   203dc:	ldr	w8, [sp, #28]
   203e0:	ldr	x11, [sp, #32]
   203e4:	mvn	w10, w27
   203e8:	add	x9, x21, x27
   203ec:	sub	w8, w27, w8
   203f0:	cmp	w27, w22
   203f4:	add	x8, x11, x8
   203f8:	add	w10, w22, w10
   203fc:	csel	x28, x8, x9, cc  // cc = lo, ul, last
   20400:	cmp	w10, #0x3
   20404:	add	x2, x26, #0x1
   20408:	b.cc	20468 <ZSTD_endStream@@Base+0x12514>  // b.lo, b.ul, b.last
   2040c:	mov	x0, x28
   20410:	mov	x19, x2
   20414:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20418:	str	w0, [sp, #40]
   2041c:	mov	x0, x19
   20420:	str	x19, [sp, #48]
   20424:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20428:	ldr	w8, [sp, #40]
   2042c:	cmp	w8, w0
   20430:	b.ne	20478 <ZSTD_endStream@@Base+0x12524>  // b.any
   20434:	ldur	x2, [x29, #-32]
   20438:	ldr	x8, [sp, #56]
   2043c:	ldur	x4, [x29, #-48]
   20440:	cmp	w27, w22
   20444:	add	x0, x26, #0x5
   20448:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   2044c:	add	x1, x28, #0x4
   20450:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   20454:	mov	w8, wzr
   20458:	add	x19, x0, #0x4
   2045c:	ldr	x2, [sp, #48]
   20460:	cbz	w8, 20558 <ZSTD_endStream@@Base+0x12604>
   20464:	b	20488 <ZSTD_endStream@@Base+0x12534>
   20468:	mov	x19, xzr
   2046c:	mov	w8, #0x1                   	// #1
   20470:	cbnz	w8, 20488 <ZSTD_endStream@@Base+0x12534>
   20474:	b	20558 <ZSTD_endStream@@Base+0x12604>
   20478:	mov	x19, xzr
   2047c:	mov	w8, #0x1                   	// #1
   20480:	ldr	x2, [sp, #48]
   20484:	cbz	w8, 20558 <ZSTD_endStream@@Base+0x12604>
   20488:	ldr	x0, [sp, #16]
   2048c:	mov	x27, x2
   20490:	ldur	x2, [x29, #-32]
   20494:	mov	w8, #0xc9ff                	// #51711
   20498:	movk	w8, #0x3b9a, lsl #16
   2049c:	sub	x3, x29, #0x8
   204a0:	mov	x1, x26
   204a4:	stur	x8, [x29, #-8]
   204a8:	bl	248c0 <ZSTD_endStream@@Base+0x1696c>
   204ac:	ldur	x8, [x29, #-8]
   204b0:	cmp	x0, x19
   204b4:	mov	x2, x27
   204b8:	csel	x19, x0, x19, hi  // hi = pmore
   204bc:	csel	x2, x26, x27, hi  // hi = pmore
   204c0:	csel	x13, x8, xzr, hi  // hi = pmore
   204c4:	cmp	x19, #0x3
   204c8:	b.ls	203ac <ZSTD_endStream@@Base+0x12458>  // b.plast
   204cc:	cbz	x13, 20558 <ZSTD_endStream@@Base+0x12604>
   204d0:	add	x8, x21, x13
   204d4:	mov	x9, #0xffffffffffff0002    	// #-65534
   204d8:	sub	x8, x2, x8
   204dc:	movk	x9, #0x0, lsl #16
   204e0:	add	x10, x8, x9
   204e4:	ldur	x8, [x29, #-24]
   204e8:	cmp	w22, w10
   204ec:	ldr	x11, [sp, #8]
   204f0:	csel	x9, x8, x21, hi  // hi = pmore
   204f4:	ldur	x8, [x29, #-48]
   204f8:	csel	x8, x11, x8, hi  // hi = pmore
   204fc:	cmp	x2, x25
   20500:	b.ls	20564 <ZSTD_endStream@@Base+0x12610>  // b.plast
   20504:	and	x10, x10, #0xffffffff
   20508:	add	x11, x9, x10
   2050c:	cmp	x11, x8
   20510:	b.ls	20564 <ZSTD_endStream@@Base+0x12610>  // b.plast
   20514:	add	x9, x9, x10
   20518:	sub	x9, x9, #0x1
   2051c:	sub	x10, x2, #0x1
   20520:	ldrb	w11, [x10]
   20524:	ldrb	w12, [x9]
   20528:	cmp	w11, w12
   2052c:	b.ne	20560 <ZSTD_endStream@@Base+0x1260c>  // b.any
   20530:	add	x19, x19, #0x1
   20534:	cmp	x9, x8
   20538:	sub	x11, x10, #0x1
   2053c:	b.ls	20550 <ZSTD_endStream@@Base+0x125fc>  // b.plast
   20540:	cmp	x10, x25
   20544:	sub	x9, x9, #0x1
   20548:	mov	x10, x11
   2054c:	b.hi	20520 <ZSTD_endStream@@Base+0x125cc>  // b.pmore
   20550:	add	x2, x11, #0x1
   20554:	b	20564 <ZSTD_endStream@@Base+0x12610>
   20558:	str	xzr, [sp, #40]
   2055c:	b	20574 <ZSTD_endStream@@Base+0x12620>
   20560:	add	x2, x10, #0x1
   20564:	sub	w8, w13, #0x2
   20568:	mov	w20, w24
   2056c:	mov	w24, w8
   20570:	str	x13, [sp, #40]
   20574:	ldur	x3, [x29, #-40]
   20578:	ldr	x0, [x23, #24]
   2057c:	sub	x28, x2, x25
   20580:	str	x2, [sp, #48]
   20584:	cmp	x2, x3
   20588:	b.ls	20598 <ZSTD_endStream@@Base+0x12644>  // b.plast
   2058c:	mov	x1, x25
   20590:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   20594:	b	20600 <ZSTD_endStream@@Base+0x126ac>
   20598:	mov	x1, x25
   2059c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   205a0:	cmp	x28, #0x11
   205a4:	b.cc	20600 <ZSTD_endStream@@Base+0x126ac>  // b.lo, b.ul, b.last
   205a8:	ldr	x26, [x23, #24]
   205ac:	add	x1, x25, #0x10
   205b0:	add	x0, x26, #0x10
   205b4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   205b8:	add	x0, x26, #0x20
   205bc:	add	x1, x25, #0x20
   205c0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   205c4:	cmp	x28, #0x31
   205c8:	b.lt	20600 <ZSTD_endStream@@Base+0x126ac>  // b.tstop
   205cc:	add	x27, x26, x28
   205d0:	add	x26, x26, #0x30
   205d4:	add	x25, x25, #0x40
   205d8:	sub	x1, x25, #0x10
   205dc:	mov	x0, x26
   205e0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   205e4:	add	x0, x26, #0x10
   205e8:	mov	x1, x25
   205ec:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   205f0:	add	x26, x26, #0x20
   205f4:	cmp	x26, x27
   205f8:	add	x25, x25, #0x20
   205fc:	b.cc	205d8 <ZSTD_endStream@@Base+0x12684>  // b.lo, b.ul, b.last
   20600:	ldr	x9, [x23, #24]
   20604:	sub	x8, x19, #0x3
   20608:	cmp	x28, #0x10, lsl #12
   2060c:	add	x9, x9, x28
   20610:	str	x9, [x23, #24]
   20614:	b.cc	2062c <ZSTD_endStream@@Base+0x126d8>  // b.lo, b.ul, b.last
   20618:	ldp	x10, x9, [x23]
   2061c:	sub	x9, x9, x10
   20620:	lsr	x9, x9, #3
   20624:	mov	w10, #0x1                   	// #1
   20628:	stp	w10, w9, [x23, #72]
   2062c:	ldp	x10, x13, [sp, #40]
   20630:	ldr	x9, [x23, #8]
   20634:	ldur	x12, [x29, #-32]
   20638:	cmp	x8, #0x10, lsl #12
   2063c:	add	w10, w10, #0x1
   20640:	strh	w28, [x9, #4]
   20644:	str	w10, [x9]
   20648:	b.cc	20660 <ZSTD_endStream@@Base+0x1270c>  // b.lo, b.ul, b.last
   2064c:	ldp	x11, x10, [x23]
   20650:	sub	x10, x10, x11
   20654:	lsr	x10, x10, #3
   20658:	mov	w11, #0x2                   	// #2
   2065c:	stp	w11, w10, [x23, #72]
   20660:	add	x25, x13, x19
   20664:	strh	w8, [x9, #6]
   20668:	add	x8, x9, #0x8
   2066c:	mov	x26, x25
   20670:	str	x8, [x23, #8]
   20674:	b	20694 <ZSTD_endStream@@Base+0x12740>
   20678:	ldur	x12, [x29, #-32]
   2067c:	mov	w9, wzr
   20680:	mov	w8, w20
   20684:	mov	w20, w24
   20688:	mov	w24, w20
   2068c:	mov	w20, w8
   20690:	tbz	w9, #0, 203c0 <ZSTD_endStream@@Base+0x1246c>
   20694:	ldur	x8, [x29, #-16]
   20698:	cmp	x26, x8
   2069c:	b.hi	203bc <ZSTD_endStream@@Base+0x12468>  // b.pmore
   206a0:	sub	w8, w26, w21
   206a4:	sub	w28, w8, w20
   206a8:	ldur	x8, [x29, #-24]
   206ac:	mvn	w9, w28
   206b0:	cmp	w28, w22
   206b4:	add	w9, w22, w9
   206b8:	csel	x8, x8, x21, cc  // cc = lo, ul, last
   206bc:	cmp	w9, #0x3
   206c0:	b.cc	2067c <ZSTD_endStream@@Base+0x12728>  // b.lo, b.ul, b.last
   206c4:	add	x27, x8, x28
   206c8:	mov	x0, x27
   206cc:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   206d0:	mov	w19, w0
   206d4:	mov	x0, x26
   206d8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   206dc:	cmp	w19, w0
   206e0:	b.ne	20678 <ZSTD_endStream@@Base+0x12724>  // b.any
   206e4:	ldur	x2, [x29, #-32]
   206e8:	ldr	x8, [sp, #56]
   206ec:	ldur	x4, [x29, #-48]
   206f0:	cmp	w28, w22
   206f4:	add	x0, x26, #0x4
   206f8:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   206fc:	add	x1, x27, #0x4
   20700:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   20704:	ldur	x3, [x29, #-40]
   20708:	mov	x27, x0
   2070c:	ldr	x0, [x23, #24]
   20710:	add	x19, x27, #0x1
   20714:	cmp	x25, x3
   20718:	b.ls	2072c <ZSTD_endStream@@Base+0x127d8>  // b.plast
   2071c:	mov	x1, x25
   20720:	mov	x2, x25
   20724:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   20728:	b	20734 <ZSTD_endStream@@Base+0x127e0>
   2072c:	mov	x1, x25
   20730:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   20734:	ldur	x12, [x29, #-32]
   20738:	ldr	x9, [x23, #8]
   2073c:	add	x8, x27, #0x4
   20740:	cmp	x19, #0x10, lsl #12
   20744:	mov	w10, #0x1                   	// #1
   20748:	strh	wzr, [x9, #4]
   2074c:	str	w10, [x9]
   20750:	b.cc	20768 <ZSTD_endStream@@Base+0x12814>  // b.lo, b.ul, b.last
   20754:	ldp	x11, x10, [x23]
   20758:	sub	x10, x10, x11
   2075c:	lsr	x10, x10, #3
   20760:	mov	w11, #0x2                   	// #2
   20764:	stp	w11, w10, [x23, #72]
   20768:	strh	w19, [x9, #6]
   2076c:	add	x9, x9, #0x8
   20770:	add	x25, x26, x8
   20774:	str	x9, [x23, #8]
   20778:	mov	w9, #0x1                   	// #1
   2077c:	mov	w8, w24
   20780:	mov	x26, x25
   20784:	b	20688 <ZSTD_endStream@@Base+0x12734>
   20788:	mov	w8, w20
   2078c:	ldr	x9, [sp]
   20790:	sub	x0, x12, x25
   20794:	stp	w24, w8, [x9]
   20798:	ldp	x20, x19, [sp, #192]
   2079c:	ldp	x22, x21, [sp, #176]
   207a0:	ldp	x24, x23, [sp, #160]
   207a4:	ldp	x26, x25, [sp, #144]
   207a8:	ldp	x28, x27, [sp, #128]
   207ac:	ldp	x29, x30, [sp, #112]
   207b0:	add	sp, sp, #0xd0
   207b4:	ret
   207b8:	sub	sp, sp, #0x150
   207bc:	stp	x29, x30, [sp, #240]
   207c0:	stp	x28, x27, [sp, #256]
   207c4:	stp	x26, x25, [sp, #272]
   207c8:	stp	x24, x23, [sp, #288]
   207cc:	stp	x22, x21, [sp, #304]
   207d0:	stp	x20, x19, [sp, #320]
   207d4:	ldr	x24, [x0, #8]
   207d8:	ldr	w26, [x0, #24]
   207dc:	ldp	w28, w20, [x2]
   207e0:	add	x25, x3, x4
   207e4:	sub	x8, x25, #0x8
   207e8:	add	x9, x24, x26
   207ec:	cmp	x9, x3
   207f0:	cinc	x27, x3, eq  // eq = none
   207f4:	add	x29, sp, #0xf0
   207f8:	cmp	x27, x8
   207fc:	str	x2, [sp]
   20800:	stur	x9, [x29, #-64]
   20804:	stur	x3, [x29, #-48]
   20808:	stur	x8, [x29, #-16]
   2080c:	b.cs	21264 <ZSTD_endStream@@Base+0x13310>  // b.hs, b.nlast
   20810:	ldr	w8, [x0, #28]
   20814:	ldr	x9, [x0, #16]
   20818:	sub	w10, w26, #0x1
   2081c:	stur	w10, [x29, #-36]
   20820:	sub	x10, x25, #0x20
   20824:	stur	x10, [x29, #-56]
   20828:	add	x10, x0, #0xb8
   2082c:	mov	x23, x1
   20830:	stp	x10, x0, [sp, #24]
   20834:	add	x10, x9, x26
   20838:	stp	x8, x9, [x29, #-32]
   2083c:	add	x8, x9, x8
   20840:	stur	x10, [x29, #-80]
   20844:	str	x8, [sp, #8]
   20848:	stur	x25, [x29, #-72]
   2084c:	str	x26, [sp, #104]
   20850:	str	x24, [sp, #80]
   20854:	b	20884 <ZSTD_endStream@@Base+0x12930>
   20858:	ldur	x8, [x29, #-48]
   2085c:	ldur	x25, [x29, #-72]
   20860:	ldr	x26, [sp, #104]
   20864:	sub	x8, x27, x8
   20868:	add	x8, x27, x8, asr #8
   2086c:	add	x27, x8, #0x1
   20870:	mov	w8, w20
   20874:	ldur	x9, [x29, #-16]
   20878:	mov	w20, w8
   2087c:	cmp	x27, x9
   20880:	b.cs	21268 <ZSTD_endStream@@Base+0x13314>  // b.hs, b.nlast
   20884:	sub	w8, w27, w24
   20888:	sub	w8, w8, w28
   2088c:	add	w21, w8, #0x1
   20890:	ldur	x8, [x29, #-24]
   20894:	cmp	w21, w26
   20898:	mov	x11, xzr
   2089c:	add	x2, x27, #0x1
   208a0:	csel	x9, x8, x24, cc  // cc = lo, ul, last
   208a4:	ldur	x8, [x29, #-32]
   208a8:	stur	x2, [x29, #-104]
   208ac:	cmp	w21, w8
   208b0:	mov	w8, #0x1                   	// #1
   208b4:	b.ls	20920 <ZSTD_endStream@@Base+0x129cc>  // b.plast
   208b8:	ldur	w10, [x29, #-36]
   208bc:	sub	w10, w10, w21
   208c0:	cmp	w10, #0x3
   208c4:	b.cc	20920 <ZSTD_endStream@@Base+0x129cc>  // b.lo, b.ul, b.last
   208c8:	mov	x0, x2
   208cc:	add	x19, x9, x21
   208d0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   208d4:	mov	w22, w0
   208d8:	mov	x0, x19
   208dc:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   208e0:	cmp	w22, w0
   208e4:	b.ne	20914 <ZSTD_endStream@@Base+0x129c0>  // b.any
   208e8:	ldur	x8, [x29, #-80]
   208ec:	ldur	x4, [x29, #-64]
   208f0:	cmp	w21, w26
   208f4:	add	x0, x27, #0x5
   208f8:	csel	x3, x8, x25, cc  // cc = lo, ul, last
   208fc:	add	x1, x19, #0x4
   20900:	mov	x2, x25
   20904:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   20908:	mov	w8, wzr
   2090c:	add	x11, x0, #0x4
   20910:	b	2091c <ZSTD_endStream@@Base+0x129c8>
   20914:	mov	x11, xzr
   20918:	mov	w8, #0x1                   	// #1
   2091c:	ldur	x2, [x29, #-104]
   20920:	cbz	w8, 20b28 <ZSTD_endStream@@Base+0x12bd4>
   20924:	ldr	x0, [sp, #32]
   20928:	str	x11, [sp, #72]
   2092c:	ldr	w8, [x0, #200]
   20930:	sub	w9, w8, #0x6
   20934:	cmp	w9, #0x2
   20938:	b.cs	20b38 <ZSTD_endStream@@Base+0x12be4>  // b.hs, b.nlast
   2093c:	ldr	x8, [x0, #64]
   20940:	ldr	w10, [x0, #24]
   20944:	mov	w26, #0x1                   	// #1
   20948:	ldr	x1, [sp, #24]
   2094c:	str	x8, [sp, #88]
   20950:	ldp	x12, x8, [x0, #8]
   20954:	mov	w3, #0x6                   	// #6
   20958:	mov	x2, x27
   2095c:	str	x8, [sp, #120]
   20960:	ldp	w9, w8, [x0, #184]
   20964:	str	x10, [sp, #112]
   20968:	ldp	w10, w11, [x0, #28]
   2096c:	sub	w21, w27, w12
   20970:	str	x12, [sp, #16]
   20974:	lsl	w9, w26, w9
   20978:	sub	w12, w21, w10
   2097c:	cmp	w12, w9
   20980:	ldr	w12, [x0, #196]
   20984:	lsl	w25, w26, w8
   20988:	sub	w8, w21, w9
   2098c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   20990:	csel	w22, w8, w10, eq  // eq = none
   20994:	subs	w8, w21, w25
   20998:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2099c:	stur	w12, [x29, #-88]
   209a0:	stur	w8, [x29, #-112]
   209a4:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   209a8:	cmp	w0, w22
   209ac:	stur	w22, [x29, #-96]
   209b0:	b.ls	20f68 <ZSTD_endStream@@Base+0x13014>  // b.plast
   209b4:	sub	w8, w25, #0x1
   209b8:	ldr	x25, [sp, #16]
   209bc:	ldp	x11, x10, [sp, #112]
   209c0:	str	w8, [sp, #68]
   209c4:	ldur	x22, [x29, #-72]
   209c8:	add	x9, x27, #0x4
   209cc:	add	x8, x25, x11
   209d0:	str	x8, [sp, #56]
   209d4:	add	x8, x10, x11
   209d8:	str	x8, [sp, #48]
   209dc:	ldur	w8, [x29, #-88]
   209e0:	str	x9, [sp, #40]
   209e4:	add	w9, w21, #0x2
   209e8:	mov	w19, w0
   209ec:	lsl	w8, w26, w8
   209f0:	sub	w26, w8, #0x1
   209f4:	mov	w8, #0xc9ff                	// #51711
   209f8:	movk	w8, #0x3b9a, lsl #16
   209fc:	str	w9, [sp, #100]
   20a00:	mov	w21, #0x3                   	// #3
   20a04:	stur	x8, [x29, #-88]
   20a08:	cmp	w19, w11
   20a0c:	mov	w8, w19
   20a10:	b.cs	20a5c <ZSTD_endStream@@Base+0x12b08>  // b.hs, b.nlast
   20a14:	add	x22, x10, x8
   20a18:	mov	x0, x22
   20a1c:	mov	x24, x23
   20a20:	mov	x23, x25
   20a24:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20a28:	mov	w25, w0
   20a2c:	mov	x0, x27
   20a30:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20a34:	cmp	w25, w0
   20a38:	b.ne	20a80 <ZSTD_endStream@@Base+0x12b2c>  // b.any
   20a3c:	add	x1, x22, #0x4
   20a40:	ldur	x22, [x29, #-72]
   20a44:	ldp	x0, x3, [sp, #40]
   20a48:	ldr	x4, [sp, #56]
   20a4c:	mov	x2, x22
   20a50:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   20a54:	add	x0, x0, #0x4
   20a58:	b	20a88 <ZSTD_endStream@@Base+0x12b34>
   20a5c:	add	x1, x25, x8
   20a60:	ldrb	w8, [x1, x21]
   20a64:	ldrb	w9, [x27, x21]
   20a68:	cmp	w8, w9
   20a6c:	b.ne	20aa4 <ZSTD_endStream@@Base+0x12b50>  // b.any
   20a70:	mov	x0, x27
   20a74:	mov	x2, x22
   20a78:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   20a7c:	b	20a94 <ZSTD_endStream@@Base+0x12b40>
   20a80:	ldur	x22, [x29, #-72]
   20a84:	mov	x0, xzr
   20a88:	mov	x25, x23
   20a8c:	mov	x23, x24
   20a90:	ldr	x24, [sp, #80]
   20a94:	ldp	x11, x10, [sp, #112]
   20a98:	cmp	x0, x21
   20a9c:	b.hi	20ab0 <ZSTD_endStream@@Base+0x12b5c>  // b.pmore
   20aa0:	b	20acc <ZSTD_endStream@@Base+0x12b78>
   20aa4:	mov	x0, xzr
   20aa8:	cmp	x0, x21
   20aac:	b.ls	20acc <ZSTD_endStream@@Base+0x12b78>  // b.plast
   20ab0:	add	x8, x27, x0
   20ab4:	cmp	x8, x22
   20ab8:	ldr	w8, [sp, #100]
   20abc:	sub	w8, w8, w19
   20ac0:	stur	x8, [x29, #-88]
   20ac4:	b.eq	20b00 <ZSTD_endStream@@Base+0x12bac>  // b.none
   20ac8:	mov	x21, x0
   20acc:	ldur	w8, [x29, #-112]
   20ad0:	cmp	w19, w8
   20ad4:	b.ls	20af4 <ZSTD_endStream@@Base+0x12ba0>  // b.plast
   20ad8:	ldr	w8, [sp, #68]
   20adc:	ldr	x9, [sp, #88]
   20ae0:	and	w8, w19, w8
   20ae4:	ldr	w19, [x9, w8, uxtw #2]
   20ae8:	mov	w8, #0x1                   	// #1
   20aec:	tbnz	w8, #0, 20b0c <ZSTD_endStream@@Base+0x12bb8>
   20af0:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20af4:	mov	w8, wzr
   20af8:	tbnz	w8, #0, 20b0c <ZSTD_endStream@@Base+0x12bb8>
   20afc:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20b00:	mov	w8, wzr
   20b04:	mov	x21, x0
   20b08:	tbz	w8, #0, 20f78 <ZSTD_endStream@@Base+0x13024>
   20b0c:	ldur	w9, [x29, #-96]
   20b10:	subs	w26, w26, #0x1
   20b14:	cset	w8, cs  // cs = hs, nlast
   20b18:	cmp	w19, w9
   20b1c:	b.ls	20f78 <ZSTD_endStream@@Base+0x13024>  // b.plast
   20b20:	cbnz	w8, 20a08 <ZSTD_endStream@@Base+0x12ab4>
   20b24:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20b28:	mov	x27, x11
   20b2c:	ldur	x3, [x29, #-56]
   20b30:	stur	xzr, [x29, #-88]
   20b34:	b	21050 <ZSTD_endStream@@Base+0x130fc>
   20b38:	cmp	w8, #0x5
   20b3c:	b.ne	20d54 <ZSTD_endStream@@Base+0x12e00>  // b.any
   20b40:	ldr	x8, [x0, #64]
   20b44:	ldr	w10, [x0, #24]
   20b48:	mov	w26, #0x1                   	// #1
   20b4c:	ldr	x1, [sp, #24]
   20b50:	str	x8, [sp, #88]
   20b54:	ldp	x12, x8, [x0, #8]
   20b58:	mov	w3, #0x5                   	// #5
   20b5c:	mov	x2, x27
   20b60:	stur	x8, [x29, #-96]
   20b64:	ldp	w9, w8, [x0, #184]
   20b68:	stur	x10, [x29, #-112]
   20b6c:	ldp	w10, w11, [x0, #28]
   20b70:	sub	w21, w27, w12
   20b74:	mov	x22, x12
   20b78:	lsl	w9, w26, w9
   20b7c:	sub	w12, w21, w10
   20b80:	cmp	w12, w9
   20b84:	ldr	w12, [x0, #196]
   20b88:	lsl	w25, w26, w8
   20b8c:	sub	w8, w21, w9
   20b90:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   20b94:	csel	w19, w8, w10, eq  // eq = none
   20b98:	subs	w8, w21, w25
   20b9c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   20ba0:	stur	w12, [x29, #-88]
   20ba4:	str	w8, [sp, #120]
   20ba8:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   20bac:	mov	w13, w19
   20bb0:	cmp	w0, w19
   20bb4:	b.ls	20f68 <ZSTD_endStream@@Base+0x13014>  // b.plast
   20bb8:	ldur	x12, [x29, #-112]
   20bbc:	ldur	x11, [x29, #-96]
   20bc0:	sub	w8, w25, #0x1
   20bc4:	str	w8, [sp, #56]
   20bc8:	add	x8, x22, x12
   20bcc:	str	x8, [sp, #48]
   20bd0:	add	x8, x11, x12
   20bd4:	str	x8, [sp, #40]
   20bd8:	ldur	w8, [x29, #-88]
   20bdc:	mov	x10, x22
   20be0:	ldur	x22, [x29, #-72]
   20be4:	ldr	x25, [sp, #88]
   20be8:	lsl	w8, w26, w8
   20bec:	ldr	w14, [sp, #120]
   20bf0:	add	x9, x27, #0x4
   20bf4:	sub	w26, w8, #0x1
   20bf8:	mov	w8, #0xc9ff                	// #51711
   20bfc:	str	x9, [sp, #16]
   20c00:	add	w9, w21, #0x2
   20c04:	movk	w8, #0x3b9a, lsl #16
   20c08:	mov	w19, w0
   20c0c:	str	w9, [sp, #68]
   20c10:	mov	w21, #0x3                   	// #3
   20c14:	stur	x8, [x29, #-88]
   20c18:	str	x10, [sp, #112]
   20c1c:	str	w13, [sp, #100]
   20c20:	cmp	w19, w12
   20c24:	mov	w8, w19
   20c28:	b.cs	20c6c <ZSTD_endStream@@Base+0x12d18>  // b.hs, b.nlast
   20c2c:	add	x25, x11, x8
   20c30:	mov	x0, x25
   20c34:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20c38:	mov	w22, w0
   20c3c:	mov	x0, x27
   20c40:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20c44:	cmp	w22, w0
   20c48:	b.ne	20cc8 <ZSTD_endStream@@Base+0x12d74>  // b.any
   20c4c:	ldur	x22, [x29, #-72]
   20c50:	ldr	x0, [sp, #16]
   20c54:	ldp	x3, x4, [sp, #40]
   20c58:	add	x1, x25, #0x4
   20c5c:	mov	x2, x22
   20c60:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   20c64:	add	x0, x0, #0x4
   20c68:	b	20cd0 <ZSTD_endStream@@Base+0x12d7c>
   20c6c:	add	x1, x10, x8
   20c70:	ldrb	w8, [x1, x21]
   20c74:	ldrb	w9, [x27, x21]
   20c78:	cmp	w8, w9
   20c7c:	b.ne	20d20 <ZSTD_endStream@@Base+0x12dcc>  // b.any
   20c80:	mov	x0, x27
   20c84:	mov	x2, x22
   20c88:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   20c8c:	ldr	w14, [sp, #120]
   20c90:	ldr	w13, [sp, #100]
   20c94:	ldur	x12, [x29, #-112]
   20c98:	ldur	x11, [x29, #-96]
   20c9c:	ldr	x10, [sp, #112]
   20ca0:	cmp	x0, x21
   20ca4:	b.hi	20cf0 <ZSTD_endStream@@Base+0x12d9c>  // b.pmore
   20ca8:	cmp	w19, w14
   20cac:	b.ls	20d14 <ZSTD_endStream@@Base+0x12dc0>  // b.plast
   20cb0:	ldr	w8, [sp, #56]
   20cb4:	and	w8, w19, w8
   20cb8:	ldr	w19, [x25, w8, uxtw #2]
   20cbc:	mov	w8, #0x1                   	// #1
   20cc0:	tbnz	w8, #0, 20d3c <ZSTD_endStream@@Base+0x12de8>
   20cc4:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20cc8:	ldur	x22, [x29, #-72]
   20ccc:	mov	x0, xzr
   20cd0:	ldr	x25, [sp, #88]
   20cd4:	ldr	x10, [sp, #112]
   20cd8:	ldur	x11, [x29, #-96]
   20cdc:	ldur	x12, [x29, #-112]
   20ce0:	ldr	w13, [sp, #100]
   20ce4:	ldr	w14, [sp, #120]
   20ce8:	cmp	x0, x21
   20cec:	b.ls	20ca8 <ZSTD_endStream@@Base+0x12d54>  // b.plast
   20cf0:	add	x8, x27, x0
   20cf4:	cmp	x8, x22
   20cf8:	ldr	w8, [sp, #68]
   20cfc:	sub	w8, w8, w19
   20d00:	stur	x8, [x29, #-88]
   20d04:	b.eq	20d30 <ZSTD_endStream@@Base+0x12ddc>  // b.none
   20d08:	mov	x21, x0
   20d0c:	cmp	w19, w14
   20d10:	b.hi	20cb0 <ZSTD_endStream@@Base+0x12d5c>  // b.pmore
   20d14:	mov	w8, wzr
   20d18:	tbnz	wzr, #0, 20d3c <ZSTD_endStream@@Base+0x12de8>
   20d1c:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20d20:	mov	x0, xzr
   20d24:	cmp	x0, x21
   20d28:	b.ls	20ca8 <ZSTD_endStream@@Base+0x12d54>  // b.plast
   20d2c:	b	20cf0 <ZSTD_endStream@@Base+0x12d9c>
   20d30:	mov	x21, x0
   20d34:	mov	w8, wzr
   20d38:	tbz	wzr, #0, 20f78 <ZSTD_endStream@@Base+0x13024>
   20d3c:	subs	w26, w26, #0x1
   20d40:	cset	w8, cs  // cs = hs, nlast
   20d44:	cmp	w19, w13
   20d48:	b.ls	20f78 <ZSTD_endStream@@Base+0x13024>  // b.plast
   20d4c:	cbnz	w8, 20c20 <ZSTD_endStream@@Base+0x12ccc>
   20d50:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20d54:	ldr	x8, [x0, #64]
   20d58:	ldr	w10, [x0, #24]
   20d5c:	mov	w26, #0x1                   	// #1
   20d60:	ldr	x1, [sp, #24]
   20d64:	str	x8, [sp, #88]
   20d68:	ldp	x12, x8, [x0, #8]
   20d6c:	mov	w3, #0x4                   	// #4
   20d70:	mov	x2, x27
   20d74:	stur	x8, [x29, #-96]
   20d78:	ldp	w9, w8, [x0, #184]
   20d7c:	stur	x10, [x29, #-112]
   20d80:	ldp	w10, w11, [x0, #28]
   20d84:	sub	w21, w27, w12
   20d88:	mov	x22, x12
   20d8c:	lsl	w9, w26, w9
   20d90:	sub	w12, w21, w10
   20d94:	cmp	w12, w9
   20d98:	ldr	w12, [x0, #196]
   20d9c:	lsl	w25, w26, w8
   20da0:	sub	w8, w21, w9
   20da4:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   20da8:	csel	w19, w8, w10, eq  // eq = none
   20dac:	subs	w8, w21, w25
   20db0:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   20db4:	stur	w12, [x29, #-88]
   20db8:	str	w8, [sp, #120]
   20dbc:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   20dc0:	mov	w13, w19
   20dc4:	cmp	w0, w19
   20dc8:	b.ls	20f68 <ZSTD_endStream@@Base+0x13014>  // b.plast
   20dcc:	ldur	x12, [x29, #-112]
   20dd0:	ldur	x11, [x29, #-96]
   20dd4:	sub	w8, w25, #0x1
   20dd8:	str	w8, [sp, #56]
   20ddc:	add	x8, x22, x12
   20de0:	str	x8, [sp, #48]
   20de4:	add	x8, x11, x12
   20de8:	str	x8, [sp, #40]
   20dec:	ldur	w8, [x29, #-88]
   20df0:	mov	x10, x22
   20df4:	ldur	x22, [x29, #-72]
   20df8:	ldr	x25, [sp, #88]
   20dfc:	lsl	w8, w26, w8
   20e00:	ldr	w14, [sp, #120]
   20e04:	add	x9, x27, #0x4
   20e08:	sub	w26, w8, #0x1
   20e0c:	mov	w8, #0xc9ff                	// #51711
   20e10:	str	x9, [sp, #16]
   20e14:	add	w9, w21, #0x2
   20e18:	movk	w8, #0x3b9a, lsl #16
   20e1c:	mov	w19, w0
   20e20:	str	w9, [sp, #68]
   20e24:	mov	w21, #0x3                   	// #3
   20e28:	stur	x8, [x29, #-88]
   20e2c:	str	x10, [sp, #112]
   20e30:	str	w13, [sp, #100]
   20e34:	cmp	w19, w12
   20e38:	mov	w8, w19
   20e3c:	b.cs	20e80 <ZSTD_endStream@@Base+0x12f2c>  // b.hs, b.nlast
   20e40:	add	x25, x11, x8
   20e44:	mov	x0, x25
   20e48:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20e4c:	mov	w22, w0
   20e50:	mov	x0, x27
   20e54:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   20e58:	cmp	w22, w0
   20e5c:	b.ne	20edc <ZSTD_endStream@@Base+0x12f88>  // b.any
   20e60:	ldur	x22, [x29, #-72]
   20e64:	ldr	x0, [sp, #16]
   20e68:	ldp	x3, x4, [sp, #40]
   20e6c:	add	x1, x25, #0x4
   20e70:	mov	x2, x22
   20e74:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   20e78:	add	x0, x0, #0x4
   20e7c:	b	20ee4 <ZSTD_endStream@@Base+0x12f90>
   20e80:	add	x1, x10, x8
   20e84:	ldrb	w8, [x1, x21]
   20e88:	ldrb	w9, [x27, x21]
   20e8c:	cmp	w8, w9
   20e90:	b.ne	20f34 <ZSTD_endStream@@Base+0x12fe0>  // b.any
   20e94:	mov	x0, x27
   20e98:	mov	x2, x22
   20e9c:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   20ea0:	ldr	w14, [sp, #120]
   20ea4:	ldr	w13, [sp, #100]
   20ea8:	ldur	x12, [x29, #-112]
   20eac:	ldur	x11, [x29, #-96]
   20eb0:	ldr	x10, [sp, #112]
   20eb4:	cmp	x0, x21
   20eb8:	b.hi	20f04 <ZSTD_endStream@@Base+0x12fb0>  // b.pmore
   20ebc:	cmp	w19, w14
   20ec0:	b.ls	20f28 <ZSTD_endStream@@Base+0x12fd4>  // b.plast
   20ec4:	ldr	w8, [sp, #56]
   20ec8:	and	w8, w19, w8
   20ecc:	ldr	w19, [x25, w8, uxtw #2]
   20ed0:	mov	w8, #0x1                   	// #1
   20ed4:	tbnz	w8, #0, 20f50 <ZSTD_endStream@@Base+0x12ffc>
   20ed8:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20edc:	ldur	x22, [x29, #-72]
   20ee0:	mov	x0, xzr
   20ee4:	ldr	x25, [sp, #88]
   20ee8:	ldr	x10, [sp, #112]
   20eec:	ldur	x11, [x29, #-96]
   20ef0:	ldur	x12, [x29, #-112]
   20ef4:	ldr	w13, [sp, #100]
   20ef8:	ldr	w14, [sp, #120]
   20efc:	cmp	x0, x21
   20f00:	b.ls	20ebc <ZSTD_endStream@@Base+0x12f68>  // b.plast
   20f04:	add	x8, x27, x0
   20f08:	cmp	x8, x22
   20f0c:	ldr	w8, [sp, #68]
   20f10:	sub	w8, w8, w19
   20f14:	stur	x8, [x29, #-88]
   20f18:	b.eq	20f44 <ZSTD_endStream@@Base+0x12ff0>  // b.none
   20f1c:	mov	x21, x0
   20f20:	cmp	w19, w14
   20f24:	b.hi	20ec4 <ZSTD_endStream@@Base+0x12f70>  // b.pmore
   20f28:	mov	w8, wzr
   20f2c:	tbnz	wzr, #0, 20f50 <ZSTD_endStream@@Base+0x12ffc>
   20f30:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20f34:	mov	x0, xzr
   20f38:	cmp	x0, x21
   20f3c:	b.ls	20ebc <ZSTD_endStream@@Base+0x12f68>  // b.plast
   20f40:	b	20f04 <ZSTD_endStream@@Base+0x12fb0>
   20f44:	mov	x21, x0
   20f48:	mov	w8, wzr
   20f4c:	tbz	wzr, #0, 20f78 <ZSTD_endStream@@Base+0x13024>
   20f50:	subs	w26, w26, #0x1
   20f54:	cset	w8, cs  // cs = hs, nlast
   20f58:	cmp	w19, w13
   20f5c:	b.ls	20f78 <ZSTD_endStream@@Base+0x13024>  // b.plast
   20f60:	cbnz	w8, 20e34 <ZSTD_endStream@@Base+0x12ee0>
   20f64:	b	20f78 <ZSTD_endStream@@Base+0x13024>
   20f68:	mov	w8, #0xc9ff                	// #51711
   20f6c:	movk	w8, #0x3b9a, lsl #16
   20f70:	stur	x8, [x29, #-88]
   20f74:	mov	w21, #0x3                   	// #3
   20f78:	ldr	x13, [sp, #72]
   20f7c:	ldur	x2, [x29, #-104]
   20f80:	ldur	x8, [x29, #-88]
   20f84:	cmp	x21, x13
   20f88:	csel	x13, x21, x13, hi  // hi = pmore
   20f8c:	csel	x2, x27, x2, hi  // hi = pmore
   20f90:	csel	x14, x8, xzr, hi  // hi = pmore
   20f94:	cmp	x13, #0x3
   20f98:	b.ls	20858 <ZSTD_endStream@@Base+0x12904>  // b.plast
   20f9c:	ldr	x9, [sp, #104]
   20fa0:	cbz	x14, 2102c <ZSTD_endStream@@Base+0x130d8>
   20fa4:	add	x8, x24, x14
   20fa8:	sub	x8, x2, x8
   20fac:	add	x10, x8, #0x2
   20fb0:	ldur	x8, [x29, #-24]
   20fb4:	cmp	w9, w10
   20fb8:	ldr	x11, [sp, #8]
   20fbc:	csel	x9, x8, x24, hi  // hi = pmore
   20fc0:	ldur	x8, [x29, #-64]
   20fc4:	csel	x8, x11, x8, hi  // hi = pmore
   20fc8:	ldur	x11, [x29, #-48]
   20fcc:	cmp	x2, x11
   20fd0:	b.ls	21038 <ZSTD_endStream@@Base+0x130e4>  // b.plast
   20fd4:	and	x10, x10, #0xffffffff
   20fd8:	add	x11, x9, x10
   20fdc:	cmp	x11, x8
   20fe0:	b.ls	21038 <ZSTD_endStream@@Base+0x130e4>  // b.plast
   20fe4:	add	x9, x9, x10
   20fe8:	sub	x9, x9, #0x1
   20fec:	sub	x10, x2, #0x1
   20ff0:	ldrb	w11, [x10]
   20ff4:	ldrb	w12, [x9]
   20ff8:	cmp	w11, w12
   20ffc:	b.ne	21034 <ZSTD_endStream@@Base+0x130e0>  // b.any
   21000:	add	x13, x13, #0x1
   21004:	cmp	x9, x8
   21008:	sub	x11, x10, #0x1
   2100c:	b.ls	21024 <ZSTD_endStream@@Base+0x130d0>  // b.plast
   21010:	ldur	x12, [x29, #-48]
   21014:	sub	x9, x9, #0x1
   21018:	cmp	x10, x12
   2101c:	mov	x10, x11
   21020:	b.hi	20ff0 <ZSTD_endStream@@Base+0x1309c>  // b.pmore
   21024:	add	x2, x11, #0x1
   21028:	b	21038 <ZSTD_endStream@@Base+0x130e4>
   2102c:	mov	x27, x13
   21030:	b	20b2c <ZSTD_endStream@@Base+0x12bd8>
   21034:	add	x2, x10, #0x1
   21038:	ldur	x3, [x29, #-56]
   2103c:	sub	w8, w14, #0x2
   21040:	mov	x27, x13
   21044:	mov	w20, w28
   21048:	mov	w28, w8
   2104c:	stur	x14, [x29, #-88]
   21050:	ldur	x1, [x29, #-48]
   21054:	ldr	x0, [x23, #24]
   21058:	cmp	x2, x3
   2105c:	sub	x21, x2, x1
   21060:	b.ls	21070 <ZSTD_endStream@@Base+0x1311c>  // b.plast
   21064:	mov	x25, x2
   21068:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   2106c:	b	210dc <ZSTD_endStream@@Base+0x13188>
   21070:	mov	x25, x2
   21074:	mov	x22, x1
   21078:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   2107c:	cmp	x21, #0x11
   21080:	b.cc	210dc <ZSTD_endStream@@Base+0x13188>  // b.lo, b.ul, b.last
   21084:	ldr	x19, [x23, #24]
   21088:	add	x1, x22, #0x10
   2108c:	add	x0, x19, #0x10
   21090:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   21094:	add	x0, x19, #0x20
   21098:	add	x1, x22, #0x20
   2109c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   210a0:	cmp	x21, #0x31
   210a4:	b.lt	210dc <ZSTD_endStream@@Base+0x13188>  // b.tstop
   210a8:	add	x26, x19, x21
   210ac:	add	x19, x19, #0x30
   210b0:	add	x22, x22, #0x40
   210b4:	sub	x1, x22, #0x10
   210b8:	mov	x0, x19
   210bc:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   210c0:	add	x0, x19, #0x10
   210c4:	mov	x1, x22
   210c8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   210cc:	add	x19, x19, #0x20
   210d0:	cmp	x19, x26
   210d4:	add	x22, x22, #0x20
   210d8:	b.cc	210b4 <ZSTD_endStream@@Base+0x13160>  // b.lo, b.ul, b.last
   210dc:	ldr	x9, [x23, #24]
   210e0:	sub	x8, x27, #0x3
   210e4:	cmp	x21, #0x10, lsl #12
   210e8:	add	x9, x9, x21
   210ec:	str	x9, [x23, #24]
   210f0:	b.cc	21108 <ZSTD_endStream@@Base+0x131b4>  // b.lo, b.ul, b.last
   210f4:	ldp	x10, x9, [x23]
   210f8:	sub	x9, x9, x10
   210fc:	lsr	x9, x9, #3
   21100:	mov	w10, #0x1                   	// #1
   21104:	stp	w10, w9, [x23, #72]
   21108:	ldur	x10, [x29, #-88]
   2110c:	ldr	x9, [x23, #8]
   21110:	ldr	x26, [sp, #104]
   21114:	cmp	x8, #0x10, lsl #12
   21118:	add	w10, w10, #0x1
   2111c:	strh	w21, [x9, #4]
   21120:	str	w10, [x9]
   21124:	b.cc	2113c <ZSTD_endStream@@Base+0x131e8>  // b.lo, b.ul, b.last
   21128:	ldp	x11, x10, [x23]
   2112c:	sub	x10, x10, x11
   21130:	lsr	x10, x10, #3
   21134:	mov	w11, #0x2                   	// #2
   21138:	stp	w11, w10, [x23, #72]
   2113c:	add	x27, x25, x27
   21140:	ldur	x25, [x29, #-72]
   21144:	strh	w8, [x9, #6]
   21148:	add	x8, x9, #0x8
   2114c:	str	x8, [x23, #8]
   21150:	stur	x27, [x29, #-48]
   21154:	b	21170 <ZSTD_endStream@@Base+0x1321c>
   21158:	mov	w9, wzr
   2115c:	mov	w8, w20
   21160:	mov	w20, w28
   21164:	mov	w28, w20
   21168:	mov	w20, w8
   2116c:	tbz	w9, #0, 20874 <ZSTD_endStream@@Base+0x12920>
   21170:	ldur	x8, [x29, #-16]
   21174:	cmp	x27, x8
   21178:	b.hi	20870 <ZSTD_endStream@@Base+0x1291c>  // b.pmore
   2117c:	sub	w8, w27, w24
   21180:	sub	w21, w8, w20
   21184:	ldp	x9, x8, [x29, #-32]
   21188:	cmp	w21, w26
   2118c:	csel	x8, x8, x24, cc  // cc = lo, ul, last
   21190:	cmp	w21, w9
   21194:	mov	w9, wzr
   21198:	b.ls	2115c <ZSTD_endStream@@Base+0x13208>  // b.plast
   2119c:	ldur	w10, [x29, #-36]
   211a0:	sub	w10, w10, w21
   211a4:	cmp	w10, #0x3
   211a8:	b.cc	2115c <ZSTD_endStream@@Base+0x13208>  // b.lo, b.ul, b.last
   211ac:	mov	x0, x27
   211b0:	add	x19, x8, x21
   211b4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   211b8:	mov	w22, w0
   211bc:	mov	x0, x19
   211c0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   211c4:	cmp	w22, w0
   211c8:	b.ne	21158 <ZSTD_endStream@@Base+0x13204>  // b.any
   211cc:	ldur	x8, [x29, #-80]
   211d0:	ldur	x4, [x29, #-64]
   211d4:	cmp	w21, w26
   211d8:	add	x0, x27, #0x4
   211dc:	csel	x3, x8, x25, cc  // cc = lo, ul, last
   211e0:	add	x1, x19, #0x4
   211e4:	mov	x2, x25
   211e8:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   211ec:	ldp	x3, x1, [x29, #-56]
   211f0:	mov	x19, x0
   211f4:	ldr	x0, [x23, #24]
   211f8:	add	x21, x19, #0x1
   211fc:	cmp	x1, x3
   21200:	b.ls	21210 <ZSTD_endStream@@Base+0x132bc>  // b.plast
   21204:	mov	x2, x1
   21208:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   2120c:	b	21214 <ZSTD_endStream@@Base+0x132c0>
   21210:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   21214:	ldr	x9, [x23, #8]
   21218:	add	x8, x19, #0x4
   2121c:	cmp	x21, #0x10, lsl #12
   21220:	mov	w10, #0x1                   	// #1
   21224:	strh	wzr, [x9, #4]
   21228:	str	w10, [x9]
   2122c:	b.cc	21244 <ZSTD_endStream@@Base+0x132f0>  // b.lo, b.ul, b.last
   21230:	ldp	x11, x10, [x23]
   21234:	sub	x10, x10, x11
   21238:	lsr	x10, x10, #3
   2123c:	mov	w11, #0x2                   	// #2
   21240:	stp	w11, w10, [x23, #72]
   21244:	strh	w21, [x9, #6]
   21248:	add	x9, x9, #0x8
   2124c:	add	x27, x27, x8
   21250:	str	x9, [x23, #8]
   21254:	mov	w9, #0x1                   	// #1
   21258:	mov	w8, w28
   2125c:	stur	x27, [x29, #-48]
   21260:	b	21164 <ZSTD_endStream@@Base+0x13210>
   21264:	mov	w8, w20
   21268:	ldur	x9, [x29, #-48]
   2126c:	sub	x0, x25, x9
   21270:	ldr	x9, [sp]
   21274:	stp	w28, w8, [x9]
   21278:	ldp	x20, x19, [sp, #320]
   2127c:	ldp	x22, x21, [sp, #304]
   21280:	ldp	x24, x23, [sp, #288]
   21284:	ldp	x26, x25, [sp, #272]
   21288:	ldp	x28, x27, [sp, #256]
   2128c:	ldp	x29, x30, [sp, #240]
   21290:	add	sp, sp, #0x150
   21294:	ret
   21298:	sub	sp, sp, #0x160
   2129c:	stp	x29, x30, [sp, #256]
   212a0:	stp	x28, x27, [sp, #272]
   212a4:	stp	x26, x25, [sp, #288]
   212a8:	stp	x24, x23, [sp, #304]
   212ac:	stp	x22, x21, [sp, #320]
   212b0:	stp	x20, x19, [sp, #336]
   212b4:	ldr	x8, [x0, #8]
   212b8:	ldr	w25, [x0, #24]
   212bc:	add	x29, sp, #0x100
   212c0:	add	x11, x3, x4
   212c4:	stur	x8, [x29, #-88]
   212c8:	add	x8, x8, x25
   212cc:	ldp	w28, w21, [x2]
   212d0:	cmp	x8, x3
   212d4:	sub	x9, x11, #0x8
   212d8:	cinc	x13, x3, eq  // eq = none
   212dc:	mov	x27, x3
   212e0:	cmp	x13, x9
   212e4:	str	x2, [sp, #8]
   212e8:	str	x8, [sp, #56]
   212ec:	stur	x9, [x29, #-48]
   212f0:	stur	x11, [x29, #-16]
   212f4:	b.cs	2249c <ZSTD_endStream@@Base+0x14548>  // b.hs, b.nlast
   212f8:	ldr	w8, [x0, #28]
   212fc:	ldr	x9, [x0, #16]
   21300:	sub	w10, w25, #0x1
   21304:	stur	w10, [x29, #-124]
   21308:	sub	x10, x11, #0x20
   2130c:	str	x10, [sp, #40]
   21310:	add	x10, x0, #0xb8
   21314:	mov	x24, x0
   21318:	str	x10, [sp, #72]
   2131c:	add	x10, x9, x25
   21320:	stp	x8, x9, [x29, #-104]
   21324:	add	x8, x9, x8
   21328:	str	x10, [sp, #48]
   2132c:	stp	x8, x1, [sp, #16]
   21330:	stp	x25, x0, [sp, #80]
   21334:	b	21358 <ZSTD_endStream@@Base+0x13404>
   21338:	ldp	x25, x24, [sp, #80]
   2133c:	ldp	w21, w28, [sp, #96]
   21340:	sub	x8, x10, x27
   21344:	add	x8, x10, x8, asr #8
   21348:	add	x13, x8, #0x1
   2134c:	ldur	x8, [x29, #-48]
   21350:	cmp	x13, x8
   21354:	b.cs	2249c <ZSTD_endStream@@Base+0x14548>  // b.hs, b.nlast
   21358:	ldur	x9, [x29, #-88]
   2135c:	mov	x10, xzr
   21360:	add	x20, x13, #0x1
   21364:	stur	x13, [x29, #-24]
   21368:	sub	w8, w13, w9
   2136c:	stur	w8, [x29, #-60]
   21370:	sub	w8, w8, w28
   21374:	add	w19, w8, #0x1
   21378:	ldur	x8, [x29, #-96]
   2137c:	cmp	w19, w25
   21380:	csel	x8, x8, x9, cc  // cc = lo, ul, last
   21384:	ldur	x9, [x29, #-104]
   21388:	cmp	w19, w9
   2138c:	b.ls	213f0 <ZSTD_endStream@@Base+0x1349c>  // b.plast
   21390:	ldur	w9, [x29, #-124]
   21394:	sub	w9, w9, w19
   21398:	cmp	w9, #0x3
   2139c:	b.cc	213f0 <ZSTD_endStream@@Base+0x1349c>  // b.lo, b.ul, b.last
   213a0:	mov	x0, x20
   213a4:	add	x22, x8, x19
   213a8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   213ac:	mov	w23, w0
   213b0:	mov	x0, x22
   213b4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   213b8:	cmp	w23, w0
   213bc:	b.ne	213e8 <ZSTD_endStream@@Base+0x13494>  // b.any
   213c0:	cmp	w19, w25
   213c4:	ldp	x19, x2, [x29, #-24]
   213c8:	ldp	x8, x4, [sp, #48]
   213cc:	add	x1, x22, #0x4
   213d0:	add	x0, x19, #0x5
   213d4:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   213d8:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   213dc:	mov	x13, x19
   213e0:	add	x10, x0, #0x4
   213e4:	b	213f0 <ZSTD_endStream@@Base+0x1349c>
   213e8:	ldur	x13, [x29, #-24]
   213ec:	mov	x10, xzr
   213f0:	ldr	w8, [x24, #200]
   213f4:	stp	w21, w28, [sp, #96]
   213f8:	str	x27, [sp, #64]
   213fc:	stur	x20, [x29, #-80]
   21400:	sub	w9, w8, #0x6
   21404:	cmp	w9, #0x2
   21408:	stur	x10, [x29, #-120]
   2140c:	b.cs	215f8 <ZSTD_endStream@@Base+0x136a4>  // b.hs, b.nlast
   21410:	ldr	x8, [x24, #64]
   21414:	ldr	w11, [x24, #32]
   21418:	mov	w27, #0x1                   	// #1
   2141c:	ldr	x1, [sp, #72]
   21420:	stur	x8, [x29, #-72]
   21424:	ldp	x23, x8, [x24, #8]
   21428:	ldr	w20, [x24, #196]
   2142c:	mov	w3, #0x6                   	// #6
   21430:	mov	x0, x24
   21434:	str	x8, [sp, #32]
   21438:	ldp	w9, w8, [x24, #184]
   2143c:	ldp	w25, w10, [x24, #24]
   21440:	sub	w19, w13, w23
   21444:	mov	x2, x13
   21448:	lsl	w9, w27, w9
   2144c:	sub	w12, w19, w10
   21450:	cmp	w12, w9
   21454:	lsl	w22, w27, w8
   21458:	sub	w8, w19, w9
   2145c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   21460:	csel	w26, w8, w10, eq  // eq = none
   21464:	subs	w8, w19, w22
   21468:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2146c:	stur	w8, [x29, #-40]
   21470:	mov	x21, x13
   21474:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   21478:	cmp	w0, w26
   2147c:	b.ls	21a30 <ZSTD_endStream@@Base+0x13adc>  // b.plast
   21480:	ldr	x11, [sp, #32]
   21484:	sub	w8, w22, #0x1
   21488:	stur	w8, [x29, #-112]
   2148c:	add	x8, x23, x25
   21490:	str	x8, [sp, #120]
   21494:	add	x8, x11, x25
   21498:	str	x8, [sp, #112]
   2149c:	lsl	w8, w27, w20
   214a0:	add	x9, x21, #0x4
   214a4:	ldr	x27, [sp, #64]
   214a8:	mov	x10, x21
   214ac:	ldur	x21, [x29, #-16]
   214b0:	sub	w20, w8, #0x1
   214b4:	mov	w8, #0xc9ff                	// #51711
   214b8:	str	x9, [sp, #104]
   214bc:	add	w9, w19, #0x2
   214c0:	movk	w8, #0x3b9a, lsl #16
   214c4:	mov	w28, w0
   214c8:	stur	w9, [x29, #-56]
   214cc:	mov	w19, #0x3                   	// #3
   214d0:	stur	x8, [x29, #-32]
   214d4:	mov	x24, x11
   214d8:	cmp	w28, w25
   214dc:	mov	w8, w28
   214e0:	b.cs	2152c <ZSTD_endStream@@Base+0x135d8>  // b.hs, b.nlast
   214e4:	add	x27, x11, x8
   214e8:	mov	x0, x27
   214ec:	mov	x22, x23
   214f0:	mov	x21, x10
   214f4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   214f8:	mov	w23, w0
   214fc:	mov	x0, x21
   21500:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21504:	cmp	w23, w0
   21508:	b.ne	21554 <ZSTD_endStream@@Base+0x13600>  // b.any
   2150c:	ldur	x21, [x29, #-16]
   21510:	ldp	x0, x3, [sp, #104]
   21514:	ldr	x4, [sp, #120]
   21518:	add	x1, x27, #0x4
   2151c:	mov	x2, x21
   21520:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   21524:	add	x0, x0, #0x4
   21528:	b	2155c <ZSTD_endStream@@Base+0x13608>
   2152c:	add	x1, x23, x8
   21530:	ldrb	w8, [x1, x19]
   21534:	ldrb	w9, [x10, x19]
   21538:	cmp	w8, w9
   2153c:	b.ne	21578 <ZSTD_endStream@@Base+0x13624>  // b.any
   21540:	mov	x0, x10
   21544:	mov	x2, x21
   21548:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   2154c:	ldur	x10, [x29, #-24]
   21550:	b	21568 <ZSTD_endStream@@Base+0x13614>
   21554:	ldur	x21, [x29, #-16]
   21558:	mov	x0, xzr
   2155c:	ldr	x27, [sp, #64]
   21560:	ldur	x10, [x29, #-24]
   21564:	mov	x23, x22
   21568:	mov	x11, x24
   2156c:	cmp	x0, x19
   21570:	b.hi	21584 <ZSTD_endStream@@Base+0x13630>  // b.pmore
   21574:	b	215a0 <ZSTD_endStream@@Base+0x1364c>
   21578:	mov	x0, xzr
   2157c:	cmp	x0, x19
   21580:	b.ls	215a0 <ZSTD_endStream@@Base+0x1364c>  // b.plast
   21584:	add	x8, x10, x0
   21588:	cmp	x8, x21
   2158c:	ldur	w8, [x29, #-56]
   21590:	sub	w8, w8, w28
   21594:	stur	x8, [x29, #-32]
   21598:	b.eq	215d4 <ZSTD_endStream@@Base+0x13680>  // b.none
   2159c:	mov	x19, x0
   215a0:	ldur	w8, [x29, #-40]
   215a4:	cmp	w28, w8
   215a8:	b.ls	215c8 <ZSTD_endStream@@Base+0x13674>  // b.plast
   215ac:	ldur	w8, [x29, #-112]
   215b0:	ldur	x9, [x29, #-72]
   215b4:	and	w8, w28, w8
   215b8:	ldr	w28, [x9, w8, uxtw #2]
   215bc:	mov	w8, #0x1                   	// #1
   215c0:	tbnz	w8, #0, 215e0 <ZSTD_endStream@@Base+0x1368c>
   215c4:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   215c8:	mov	w8, wzr
   215cc:	tbnz	w8, #0, 215e0 <ZSTD_endStream@@Base+0x1368c>
   215d0:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   215d4:	mov	w8, wzr
   215d8:	mov	x19, x0
   215dc:	tbz	w8, #0, 21a48 <ZSTD_endStream@@Base+0x13af4>
   215e0:	subs	w20, w20, #0x1
   215e4:	cset	w8, cs  // cs = hs, nlast
   215e8:	cmp	w28, w26
   215ec:	b.ls	21a48 <ZSTD_endStream@@Base+0x13af4>  // b.plast
   215f0:	cbnz	w8, 214d8 <ZSTD_endStream@@Base+0x13584>
   215f4:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   215f8:	cmp	w8, #0x5
   215fc:	b.ne	21818 <ZSTD_endStream@@Base+0x138c4>  // b.any
   21600:	ldp	x20, x8, [x24, #8]
   21604:	ldr	w11, [x24, #32]
   21608:	mov	w27, #0x1                   	// #1
   2160c:	ldr	x1, [sp, #72]
   21610:	stur	x8, [x29, #-40]
   21614:	ldp	w9, w8, [x24, #184]
   21618:	ldp	w26, w10, [x24, #24]
   2161c:	sub	w19, w13, w20
   21620:	ldr	x23, [x24, #64]
   21624:	lsl	w9, w27, w9
   21628:	sub	w12, w19, w10
   2162c:	cmp	w12, w9
   21630:	ldr	w12, [x24, #196]
   21634:	lsl	w22, w27, w8
   21638:	sub	w8, w19, w9
   2163c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   21640:	csel	w25, w8, w10, eq  // eq = none
   21644:	subs	w8, w19, w22
   21648:	mov	x0, x24
   2164c:	mov	w3, #0x5                   	// #5
   21650:	mov	x2, x13
   21654:	stur	w12, [x29, #-32]
   21658:	csel	w24, wzr, w8, cc  // cc = lo, ul, last
   2165c:	mov	x21, x13
   21660:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   21664:	cmp	w0, w25
   21668:	b.ls	21a30 <ZSTD_endStream@@Base+0x13adc>  // b.plast
   2166c:	ldur	x11, [x29, #-40]
   21670:	sub	w8, w22, #0x1
   21674:	str	w8, [sp, #120]
   21678:	add	x8, x20, x26
   2167c:	str	x8, [sp, #112]
   21680:	add	x8, x11, x26
   21684:	str	x8, [sp, #104]
   21688:	ldur	w8, [x29, #-32]
   2168c:	add	x9, x21, #0x4
   21690:	mov	x10, x21
   21694:	ldur	x21, [x29, #-16]
   21698:	lsl	w8, w27, w8
   2169c:	sub	w22, w8, #0x1
   216a0:	mov	w8, #0xc9ff                	// #51711
   216a4:	ldr	x27, [sp, #64]
   216a8:	movk	w8, #0x3b9a, lsl #16
   216ac:	str	x9, [sp, #32]
   216b0:	add	w9, w19, #0x2
   216b4:	stur	x8, [x29, #-32]
   216b8:	mov	w8, w24
   216bc:	mov	x24, x26
   216c0:	mov	w28, w0
   216c4:	stur	w9, [x29, #-112]
   216c8:	mov	w19, #0x3                   	// #3
   216cc:	mov	w26, w8
   216d0:	stur	x24, [x29, #-56]
   216d4:	stur	w8, [x29, #-72]
   216d8:	cmp	w28, w24
   216dc:	mov	w8, w28
   216e0:	b.cs	21734 <ZSTD_endStream@@Base+0x137e0>  // b.hs, b.nlast
   216e4:	add	x27, x11, x8
   216e8:	mov	x0, x27
   216ec:	mov	w26, w25
   216f0:	mov	x25, x20
   216f4:	mov	x24, x23
   216f8:	mov	x20, x10
   216fc:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21700:	mov	w23, w0
   21704:	mov	x0, x20
   21708:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   2170c:	cmp	w23, w0
   21710:	b.ne	21784 <ZSTD_endStream@@Base+0x13830>  // b.any
   21714:	ldur	x21, [x29, #-16]
   21718:	ldr	x0, [sp, #32]
   2171c:	ldp	x3, x4, [sp, #104]
   21720:	add	x1, x27, #0x4
   21724:	mov	x2, x21
   21728:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   2172c:	add	x0, x0, #0x4
   21730:	b	2178c <ZSTD_endStream@@Base+0x13838>
   21734:	add	x1, x20, x8
   21738:	ldrb	w8, [x1, x19]
   2173c:	ldrb	w9, [x10, x19]
   21740:	cmp	w8, w9
   21744:	b.ne	217e4 <ZSTD_endStream@@Base+0x13890>  // b.any
   21748:	mov	x0, x10
   2174c:	mov	x2, x21
   21750:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   21754:	ldur	x11, [x29, #-40]
   21758:	ldur	x10, [x29, #-24]
   2175c:	cmp	x0, x19
   21760:	b.hi	217b4 <ZSTD_endStream@@Base+0x13860>  // b.pmore
   21764:	cmp	w28, w26
   21768:	b.ls	217d8 <ZSTD_endStream@@Base+0x13884>  // b.plast
   2176c:	ldr	w8, [sp, #120]
   21770:	and	w8, w28, w8
   21774:	ldr	w28, [x23, w8, uxtw #2]
   21778:	mov	w8, #0x1                   	// #1
   2177c:	tbnz	w8, #0, 21800 <ZSTD_endStream@@Base+0x138ac>
   21780:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   21784:	ldur	x21, [x29, #-16]
   21788:	mov	x0, xzr
   2178c:	ldr	x27, [sp, #64]
   21790:	ldur	x10, [x29, #-24]
   21794:	mov	x23, x24
   21798:	mov	x20, x25
   2179c:	ldur	x11, [x29, #-40]
   217a0:	ldur	x24, [x29, #-56]
   217a4:	mov	w25, w26
   217a8:	ldur	w26, [x29, #-72]
   217ac:	cmp	x0, x19
   217b0:	b.ls	21764 <ZSTD_endStream@@Base+0x13810>  // b.plast
   217b4:	add	x8, x10, x0
   217b8:	cmp	x8, x21
   217bc:	ldur	w8, [x29, #-112]
   217c0:	sub	w8, w8, w28
   217c4:	stur	x8, [x29, #-32]
   217c8:	b.eq	217f4 <ZSTD_endStream@@Base+0x138a0>  // b.none
   217cc:	mov	x19, x0
   217d0:	cmp	w28, w26
   217d4:	b.hi	2176c <ZSTD_endStream@@Base+0x13818>  // b.pmore
   217d8:	mov	w8, wzr
   217dc:	tbnz	wzr, #0, 21800 <ZSTD_endStream@@Base+0x138ac>
   217e0:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   217e4:	mov	x0, xzr
   217e8:	cmp	x0, x19
   217ec:	b.ls	21764 <ZSTD_endStream@@Base+0x13810>  // b.plast
   217f0:	b	217b4 <ZSTD_endStream@@Base+0x13860>
   217f4:	mov	x19, x0
   217f8:	mov	w8, wzr
   217fc:	tbz	wzr, #0, 21a48 <ZSTD_endStream@@Base+0x13af4>
   21800:	subs	w22, w22, #0x1
   21804:	cset	w8, cs  // cs = hs, nlast
   21808:	cmp	w28, w25
   2180c:	b.ls	21a48 <ZSTD_endStream@@Base+0x13af4>  // b.plast
   21810:	cbnz	w8, 216d8 <ZSTD_endStream@@Base+0x13784>
   21814:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   21818:	ldp	x20, x8, [x24, #8]
   2181c:	ldr	w11, [x24, #32]
   21820:	mov	w27, #0x1                   	// #1
   21824:	ldr	x1, [sp, #72]
   21828:	stur	x8, [x29, #-40]
   2182c:	ldp	w9, w8, [x24, #184]
   21830:	ldp	w26, w10, [x24, #24]
   21834:	sub	w19, w13, w20
   21838:	ldr	x23, [x24, #64]
   2183c:	lsl	w9, w27, w9
   21840:	sub	w12, w19, w10
   21844:	cmp	w12, w9
   21848:	ldr	w12, [x24, #196]
   2184c:	lsl	w22, w27, w8
   21850:	sub	w8, w19, w9
   21854:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   21858:	csel	w25, w8, w10, eq  // eq = none
   2185c:	subs	w8, w19, w22
   21860:	mov	x0, x24
   21864:	mov	w3, #0x4                   	// #4
   21868:	mov	x2, x13
   2186c:	stur	w12, [x29, #-32]
   21870:	csel	w24, wzr, w8, cc  // cc = lo, ul, last
   21874:	mov	x21, x13
   21878:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   2187c:	cmp	w0, w25
   21880:	b.ls	21a30 <ZSTD_endStream@@Base+0x13adc>  // b.plast
   21884:	ldur	x11, [x29, #-40]
   21888:	sub	w8, w22, #0x1
   2188c:	str	w8, [sp, #120]
   21890:	add	x8, x20, x26
   21894:	str	x8, [sp, #112]
   21898:	add	x8, x11, x26
   2189c:	str	x8, [sp, #104]
   218a0:	ldur	w8, [x29, #-32]
   218a4:	add	x9, x21, #0x4
   218a8:	mov	x10, x21
   218ac:	ldur	x21, [x29, #-16]
   218b0:	lsl	w8, w27, w8
   218b4:	sub	w22, w8, #0x1
   218b8:	mov	w8, #0xc9ff                	// #51711
   218bc:	ldr	x27, [sp, #64]
   218c0:	movk	w8, #0x3b9a, lsl #16
   218c4:	str	x9, [sp, #32]
   218c8:	add	w9, w19, #0x2
   218cc:	stur	x8, [x29, #-32]
   218d0:	mov	w8, w24
   218d4:	mov	x24, x26
   218d8:	mov	w28, w0
   218dc:	stur	w9, [x29, #-112]
   218e0:	mov	w19, #0x3                   	// #3
   218e4:	mov	w26, w8
   218e8:	stur	x24, [x29, #-56]
   218ec:	stur	w8, [x29, #-72]
   218f0:	cmp	w28, w24
   218f4:	mov	w8, w28
   218f8:	b.cs	2194c <ZSTD_endStream@@Base+0x139f8>  // b.hs, b.nlast
   218fc:	add	x27, x11, x8
   21900:	mov	x0, x27
   21904:	mov	w26, w25
   21908:	mov	x25, x20
   2190c:	mov	x24, x23
   21910:	mov	x20, x10
   21914:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21918:	mov	w23, w0
   2191c:	mov	x0, x20
   21920:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21924:	cmp	w23, w0
   21928:	b.ne	2199c <ZSTD_endStream@@Base+0x13a48>  // b.any
   2192c:	ldur	x21, [x29, #-16]
   21930:	ldr	x0, [sp, #32]
   21934:	ldp	x3, x4, [sp, #104]
   21938:	add	x1, x27, #0x4
   2193c:	mov	x2, x21
   21940:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   21944:	add	x0, x0, #0x4
   21948:	b	219a4 <ZSTD_endStream@@Base+0x13a50>
   2194c:	add	x1, x20, x8
   21950:	ldrb	w8, [x1, x19]
   21954:	ldrb	w9, [x10, x19]
   21958:	cmp	w8, w9
   2195c:	b.ne	219fc <ZSTD_endStream@@Base+0x13aa8>  // b.any
   21960:	mov	x0, x10
   21964:	mov	x2, x21
   21968:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   2196c:	ldur	x11, [x29, #-40]
   21970:	ldur	x10, [x29, #-24]
   21974:	cmp	x0, x19
   21978:	b.hi	219cc <ZSTD_endStream@@Base+0x13a78>  // b.pmore
   2197c:	cmp	w28, w26
   21980:	b.ls	219f0 <ZSTD_endStream@@Base+0x13a9c>  // b.plast
   21984:	ldr	w8, [sp, #120]
   21988:	and	w8, w28, w8
   2198c:	ldr	w28, [x23, w8, uxtw #2]
   21990:	mov	w8, #0x1                   	// #1
   21994:	tbnz	w8, #0, 21a18 <ZSTD_endStream@@Base+0x13ac4>
   21998:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   2199c:	ldur	x21, [x29, #-16]
   219a0:	mov	x0, xzr
   219a4:	ldr	x27, [sp, #64]
   219a8:	ldur	x10, [x29, #-24]
   219ac:	mov	x23, x24
   219b0:	mov	x20, x25
   219b4:	ldur	x11, [x29, #-40]
   219b8:	ldur	x24, [x29, #-56]
   219bc:	mov	w25, w26
   219c0:	ldur	w26, [x29, #-72]
   219c4:	cmp	x0, x19
   219c8:	b.ls	2197c <ZSTD_endStream@@Base+0x13a28>  // b.plast
   219cc:	add	x8, x10, x0
   219d0:	cmp	x8, x21
   219d4:	ldur	w8, [x29, #-112]
   219d8:	sub	w8, w8, w28
   219dc:	stur	x8, [x29, #-32]
   219e0:	b.eq	21a0c <ZSTD_endStream@@Base+0x13ab8>  // b.none
   219e4:	mov	x19, x0
   219e8:	cmp	w28, w26
   219ec:	b.hi	21984 <ZSTD_endStream@@Base+0x13a30>  // b.pmore
   219f0:	mov	w8, wzr
   219f4:	tbnz	wzr, #0, 21a18 <ZSTD_endStream@@Base+0x13ac4>
   219f8:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   219fc:	mov	x0, xzr
   21a00:	cmp	x0, x19
   21a04:	b.ls	2197c <ZSTD_endStream@@Base+0x13a28>  // b.plast
   21a08:	b	219cc <ZSTD_endStream@@Base+0x13a78>
   21a0c:	mov	x19, x0
   21a10:	mov	w8, wzr
   21a14:	tbz	wzr, #0, 21a48 <ZSTD_endStream@@Base+0x13af4>
   21a18:	subs	w22, w22, #0x1
   21a1c:	cset	w8, cs  // cs = hs, nlast
   21a20:	cmp	w28, w25
   21a24:	b.ls	21a48 <ZSTD_endStream@@Base+0x13af4>  // b.plast
   21a28:	cbnz	w8, 218f0 <ZSTD_endStream@@Base+0x1399c>
   21a2c:	b	21a48 <ZSTD_endStream@@Base+0x13af4>
   21a30:	ldr	x27, [sp, #64]
   21a34:	mov	w8, #0xc9ff                	// #51711
   21a38:	movk	w8, #0x3b9a, lsl #16
   21a3c:	stur	x8, [x29, #-32]
   21a40:	mov	w19, #0x3                   	// #3
   21a44:	mov	x10, x21
   21a48:	ldur	x11, [x29, #-120]
   21a4c:	ldur	x8, [x29, #-80]
   21a50:	cmp	x19, x11
   21a54:	csel	x9, x10, x8, hi  // hi = pmore
   21a58:	ldur	x8, [x29, #-32]
   21a5c:	csel	x21, x8, xzr, hi  // hi = pmore
   21a60:	csel	x8, x19, x11, hi  // hi = pmore
   21a64:	cmp	x8, #0x3
   21a68:	b.ls	21338 <ZSTD_endStream@@Base+0x133e4>  // b.plast
   21a6c:	stur	x8, [x29, #-120]
   21a70:	ldur	x8, [x29, #-48]
   21a74:	ldp	x25, x24, [sp, #80]
   21a78:	ldp	w20, w28, [sp, #96]
   21a7c:	stur	x9, [x29, #-112]
   21a80:	cmp	x10, x8
   21a84:	b.cs	22188 <ZSTD_endStream@@Base+0x14234>  // b.hs, b.nlast
   21a88:	ldur	w8, [x29, #-60]
   21a8c:	add	x27, x10, #0x1
   21a90:	add	w8, w8, #0x1
   21a94:	stur	w8, [x29, #-60]
   21a98:	cbz	x21, 21b54 <ZSTD_endStream@@Base+0x13c00>
   21a9c:	sub	w19, w8, w28
   21aa0:	ldp	x9, x8, [x29, #-96]
   21aa4:	cmp	w19, w25
   21aa8:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   21aac:	ldur	x9, [x29, #-104]
   21ab0:	cmp	w19, w9
   21ab4:	b.ls	21b54 <ZSTD_endStream@@Base+0x13c00>  // b.plast
   21ab8:	ldur	w9, [x29, #-124]
   21abc:	sub	w9, w9, w19
   21ac0:	cmp	w9, #0x3
   21ac4:	b.cc	21b54 <ZSTD_endStream@@Base+0x13c00>  // b.lo, b.ul, b.last
   21ac8:	mov	x0, x27
   21acc:	mov	x20, x10
   21ad0:	add	x22, x8, x19
   21ad4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21ad8:	mov	w23, w0
   21adc:	mov	x0, x22
   21ae0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21ae4:	cmp	w23, w0
   21ae8:	b.ne	21b48 <ZSTD_endStream@@Base+0x13bf4>  // b.any
   21aec:	ldur	x2, [x29, #-16]
   21af0:	ldp	x8, x4, [sp, #48]
   21af4:	cmp	w19, w25
   21af8:	add	x0, x20, #0x5
   21afc:	add	x1, x22, #0x4
   21b00:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   21b04:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   21b08:	cmn	x0, #0x5
   21b0c:	b.hi	21b48 <ZSTD_endStream@@Base+0x13bf4>  // b.pmore
   21b10:	add	x19, x0, #0x4
   21b14:	add	w0, w21, #0x1
   21b18:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   21b1c:	ldur	x10, [x29, #-120]
   21b20:	add	w9, w19, w19, lsl #1
   21b24:	add	w8, w10, w10, lsl #1
   21b28:	sub	w8, w8, w0
   21b2c:	add	w8, w8, #0x1
   21b30:	cmp	w9, w8
   21b34:	ldur	x8, [x29, #-112]
   21b38:	csel	x21, xzr, x21, gt
   21b3c:	csel	x10, x19, x10, gt
   21b40:	csel	x8, x27, x8, gt
   21b44:	stp	x10, x8, [x29, #-120]
   21b48:	mov	w25, #0x1                   	// #1
   21b4c:	mov	x10, x20
   21b50:	b	21b58 <ZSTD_endStream@@Base+0x13c04>
   21b54:	mov	w25, #0x1                   	// #1
   21b58:	ldr	w8, [x24, #200]
   21b5c:	stur	x10, [x29, #-24]
   21b60:	stur	x21, [x29, #-72]
   21b64:	sub	w9, w8, #0x6
   21b68:	cmp	w9, #0x2
   21b6c:	b.cs	21d40 <ZSTD_endStream@@Base+0x13dec>  // b.hs, b.nlast
   21b70:	ldr	x8, [x24, #64]
   21b74:	ldr	w11, [x24, #32]
   21b78:	ldr	x1, [sp, #72]
   21b7c:	ldr	w20, [x24, #196]
   21b80:	stur	x8, [x29, #-56]
   21b84:	ldp	x22, x28, [x24, #8]
   21b88:	ldp	w9, w8, [x24, #184]
   21b8c:	ldp	w26, w10, [x24, #24]
   21b90:	mov	w3, #0x6                   	// #6
   21b94:	sub	w19, w27, w22
   21b98:	lsl	w9, w25, w9
   21b9c:	sub	w12, w19, w10
   21ba0:	cmp	w12, w9
   21ba4:	lsl	w23, w25, w8
   21ba8:	sub	w8, w19, w9
   21bac:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   21bb0:	csel	w21, w8, w10, eq  // eq = none
   21bb4:	subs	w8, w19, w23
   21bb8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   21bbc:	mov	x0, x24
   21bc0:	mov	x2, x27
   21bc4:	stur	w8, [x29, #-32]
   21bc8:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   21bcc:	cmp	w0, w21
   21bd0:	b.ls	220ec <ZSTD_endStream@@Base+0x14198>  // b.plast
   21bd4:	ldur	x9, [x29, #-24]
   21bd8:	sub	w8, w23, #0x1
   21bdc:	stur	w8, [x29, #-80]
   21be0:	add	x8, x22, x26
   21be4:	str	x8, [sp, #120]
   21be8:	add	x8, x28, x26
   21bec:	add	x9, x9, #0x5
   21bf0:	str	x8, [sp, #112]
   21bf4:	lsl	w8, w25, w20
   21bf8:	str	x9, [sp, #104]
   21bfc:	add	w9, w19, #0x2
   21c00:	ldur	x19, [x29, #-16]
   21c04:	sub	w25, w8, #0x1
   21c08:	mov	w8, #0xc9ff                	// #51711
   21c0c:	movk	w8, #0x3b9a, lsl #16
   21c10:	mov	w24, w0
   21c14:	stur	w9, [x29, #-40]
   21c18:	mov	w20, #0x3                   	// #3
   21c1c:	stur	x8, [x29, #-24]
   21c20:	mov	x23, x28
   21c24:	cmp	w24, w26
   21c28:	mov	w8, w24
   21c2c:	b.cs	21c78 <ZSTD_endStream@@Base+0x13d24>  // b.hs, b.nlast
   21c30:	mov	x28, x22
   21c34:	mov	x22, x23
   21c38:	add	x23, x23, x8
   21c3c:	mov	x0, x23
   21c40:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21c44:	mov	w19, w0
   21c48:	mov	x0, x27
   21c4c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21c50:	cmp	w19, w0
   21c54:	b.ne	21ca4 <ZSTD_endStream@@Base+0x13d50>  // b.any
   21c58:	ldur	x19, [x29, #-16]
   21c5c:	ldp	x0, x3, [sp, #104]
   21c60:	ldr	x4, [sp, #120]
   21c64:	add	x1, x23, #0x4
   21c68:	mov	x2, x19
   21c6c:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   21c70:	add	x0, x0, #0x4
   21c74:	b	21cac <ZSTD_endStream@@Base+0x13d58>
   21c78:	add	x1, x22, x8
   21c7c:	ldrb	w8, [x1, x20]
   21c80:	ldrb	w9, [x27, x20]
   21c84:	cmp	w8, w9
   21c88:	b.ne	21cc0 <ZSTD_endStream@@Base+0x13d6c>  // b.any
   21c8c:	mov	x0, x27
   21c90:	mov	x2, x19
   21c94:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   21c98:	cmp	x0, x20
   21c9c:	b.hi	21ccc <ZSTD_endStream@@Base+0x13d78>  // b.pmore
   21ca0:	b	21ce8 <ZSTD_endStream@@Base+0x13d94>
   21ca4:	ldur	x19, [x29, #-16]
   21ca8:	mov	x0, xzr
   21cac:	mov	x23, x22
   21cb0:	mov	x22, x28
   21cb4:	cmp	x0, x20
   21cb8:	b.hi	21ccc <ZSTD_endStream@@Base+0x13d78>  // b.pmore
   21cbc:	b	21ce8 <ZSTD_endStream@@Base+0x13d94>
   21cc0:	mov	x0, xzr
   21cc4:	cmp	x0, x20
   21cc8:	b.ls	21ce8 <ZSTD_endStream@@Base+0x13d94>  // b.plast
   21ccc:	add	x8, x27, x0
   21cd0:	cmp	x8, x19
   21cd4:	ldur	w8, [x29, #-40]
   21cd8:	sub	w8, w8, w24
   21cdc:	stur	x8, [x29, #-24]
   21ce0:	b.eq	21d1c <ZSTD_endStream@@Base+0x13dc8>  // b.none
   21ce4:	mov	x20, x0
   21ce8:	ldur	w8, [x29, #-32]
   21cec:	cmp	w24, w8
   21cf0:	b.ls	21d10 <ZSTD_endStream@@Base+0x13dbc>  // b.plast
   21cf4:	ldur	w8, [x29, #-80]
   21cf8:	ldur	x9, [x29, #-56]
   21cfc:	and	w8, w24, w8
   21d00:	ldr	w24, [x9, w8, uxtw #2]
   21d04:	mov	w8, #0x1                   	// #1
   21d08:	tbnz	w8, #0, 21d28 <ZSTD_endStream@@Base+0x13dd4>
   21d0c:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   21d10:	mov	w8, wzr
   21d14:	tbnz	w8, #0, 21d28 <ZSTD_endStream@@Base+0x13dd4>
   21d18:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   21d1c:	mov	w8, wzr
   21d20:	mov	x20, x0
   21d24:	tbz	w8, #0, 220fc <ZSTD_endStream@@Base+0x141a8>
   21d28:	subs	w25, w25, #0x1
   21d2c:	cset	w8, cs  // cs = hs, nlast
   21d30:	cmp	w24, w21
   21d34:	b.ls	220fc <ZSTD_endStream@@Base+0x141a8>  // b.plast
   21d38:	cbnz	w8, 21c24 <ZSTD_endStream@@Base+0x13cd0>
   21d3c:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   21d40:	cmp	w8, #0x5
   21d44:	b.ne	21f1c <ZSTD_endStream@@Base+0x13fc8>  // b.any
   21d48:	ldr	x8, [x24, #64]
   21d4c:	ldr	w11, [x24, #32]
   21d50:	ldr	x1, [sp, #72]
   21d54:	ldr	w20, [x24, #196]
   21d58:	stur	x8, [x29, #-56]
   21d5c:	ldp	x21, x28, [x24, #8]
   21d60:	ldp	w9, w8, [x24, #184]
   21d64:	ldp	w22, w10, [x24, #24]
   21d68:	mov	w3, #0x5                   	// #5
   21d6c:	sub	w19, w27, w21
   21d70:	lsl	w9, w25, w9
   21d74:	sub	w12, w19, w10
   21d78:	cmp	w12, w9
   21d7c:	lsl	w23, w25, w8
   21d80:	sub	w8, w19, w9
   21d84:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   21d88:	csel	w26, w8, w10, eq  // eq = none
   21d8c:	subs	w8, w19, w23
   21d90:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   21d94:	mov	x0, x24
   21d98:	mov	x2, x27
   21d9c:	mov	w25, #0x1                   	// #1
   21da0:	stur	w8, [x29, #-32]
   21da4:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   21da8:	cmp	w0, w26
   21dac:	b.ls	220ec <ZSTD_endStream@@Base+0x14198>  // b.plast
   21db0:	ldur	x9, [x29, #-24]
   21db4:	sub	w8, w23, #0x1
   21db8:	stur	w8, [x29, #-80]
   21dbc:	add	x8, x21, x22
   21dc0:	str	x8, [sp, #120]
   21dc4:	add	x8, x28, x22
   21dc8:	add	x9, x9, #0x5
   21dcc:	str	x8, [sp, #112]
   21dd0:	lsl	w8, w25, w20
   21dd4:	str	x9, [sp, #104]
   21dd8:	add	w9, w19, #0x2
   21ddc:	ldur	x19, [x29, #-16]
   21de0:	mov	x23, x28
   21de4:	sub	w28, w8, #0x1
   21de8:	mov	w8, #0xc9ff                	// #51711
   21dec:	movk	w8, #0x3b9a, lsl #16
   21df0:	mov	w24, w0
   21df4:	stur	w9, [x29, #-40]
   21df8:	mov	w20, #0x3                   	// #3
   21dfc:	stur	x8, [x29, #-24]
   21e00:	cmp	w24, w22
   21e04:	mov	w8, w24
   21e08:	b.cs	21e54 <ZSTD_endStream@@Base+0x13f00>  // b.hs, b.nlast
   21e0c:	mov	x25, x21
   21e10:	mov	x21, x23
   21e14:	add	x23, x23, x8
   21e18:	mov	x0, x23
   21e1c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21e20:	mov	w19, w0
   21e24:	mov	x0, x27
   21e28:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21e2c:	cmp	w19, w0
   21e30:	b.ne	21e80 <ZSTD_endStream@@Base+0x13f2c>  // b.any
   21e34:	ldur	x19, [x29, #-16]
   21e38:	ldp	x0, x3, [sp, #104]
   21e3c:	ldr	x4, [sp, #120]
   21e40:	add	x1, x23, #0x4
   21e44:	mov	x2, x19
   21e48:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   21e4c:	add	x0, x0, #0x4
   21e50:	b	21e88 <ZSTD_endStream@@Base+0x13f34>
   21e54:	add	x1, x21, x8
   21e58:	ldrb	w8, [x1, x20]
   21e5c:	ldrb	w9, [x27, x20]
   21e60:	cmp	w8, w9
   21e64:	b.ne	21e9c <ZSTD_endStream@@Base+0x13f48>  // b.any
   21e68:	mov	x0, x27
   21e6c:	mov	x2, x19
   21e70:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   21e74:	cmp	x0, x20
   21e78:	b.hi	21ea8 <ZSTD_endStream@@Base+0x13f54>  // b.pmore
   21e7c:	b	21ec4 <ZSTD_endStream@@Base+0x13f70>
   21e80:	ldur	x19, [x29, #-16]
   21e84:	mov	x0, xzr
   21e88:	mov	x23, x21
   21e8c:	mov	x21, x25
   21e90:	cmp	x0, x20
   21e94:	b.hi	21ea8 <ZSTD_endStream@@Base+0x13f54>  // b.pmore
   21e98:	b	21ec4 <ZSTD_endStream@@Base+0x13f70>
   21e9c:	mov	x0, xzr
   21ea0:	cmp	x0, x20
   21ea4:	b.ls	21ec4 <ZSTD_endStream@@Base+0x13f70>  // b.plast
   21ea8:	add	x8, x27, x0
   21eac:	cmp	x8, x19
   21eb0:	ldur	w8, [x29, #-40]
   21eb4:	sub	w8, w8, w24
   21eb8:	stur	x8, [x29, #-24]
   21ebc:	b.eq	21ef8 <ZSTD_endStream@@Base+0x13fa4>  // b.none
   21ec0:	mov	x20, x0
   21ec4:	ldur	w8, [x29, #-32]
   21ec8:	cmp	w24, w8
   21ecc:	b.ls	21eec <ZSTD_endStream@@Base+0x13f98>  // b.plast
   21ed0:	ldur	w8, [x29, #-80]
   21ed4:	ldur	x9, [x29, #-56]
   21ed8:	and	w8, w24, w8
   21edc:	ldr	w24, [x9, w8, uxtw #2]
   21ee0:	mov	w8, #0x1                   	// #1
   21ee4:	tbnz	w8, #0, 21f04 <ZSTD_endStream@@Base+0x13fb0>
   21ee8:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   21eec:	mov	w8, wzr
   21ef0:	tbnz	wzr, #0, 21f04 <ZSTD_endStream@@Base+0x13fb0>
   21ef4:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   21ef8:	mov	x20, x0
   21efc:	mov	w8, wzr
   21f00:	tbz	wzr, #0, 220fc <ZSTD_endStream@@Base+0x141a8>
   21f04:	subs	w28, w28, #0x1
   21f08:	cset	w8, cs  // cs = hs, nlast
   21f0c:	cmp	w24, w26
   21f10:	b.ls	220fc <ZSTD_endStream@@Base+0x141a8>  // b.plast
   21f14:	cbnz	w8, 21e00 <ZSTD_endStream@@Base+0x13eac>
   21f18:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   21f1c:	ldr	x8, [x24, #64]
   21f20:	ldr	w11, [x24, #32]
   21f24:	ldr	x1, [sp, #72]
   21f28:	ldr	w20, [x24, #196]
   21f2c:	stur	x8, [x29, #-56]
   21f30:	ldp	x21, x28, [x24, #8]
   21f34:	ldp	w9, w8, [x24, #184]
   21f38:	ldp	w26, w10, [x24, #24]
   21f3c:	mov	w3, #0x4                   	// #4
   21f40:	sub	w19, w27, w21
   21f44:	lsl	w9, w25, w9
   21f48:	sub	w12, w19, w10
   21f4c:	cmp	w12, w9
   21f50:	lsl	w23, w25, w8
   21f54:	sub	w8, w19, w9
   21f58:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   21f5c:	csel	w22, w8, w10, eq  // eq = none
   21f60:	subs	w8, w19, w23
   21f64:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   21f68:	mov	x0, x24
   21f6c:	mov	x2, x27
   21f70:	stur	w8, [x29, #-32]
   21f74:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   21f78:	cmp	w0, w22
   21f7c:	b.ls	220ec <ZSTD_endStream@@Base+0x14198>  // b.plast
   21f80:	ldur	x9, [x29, #-24]
   21f84:	sub	w8, w23, #0x1
   21f88:	stur	w8, [x29, #-80]
   21f8c:	add	x8, x21, x26
   21f90:	str	x8, [sp, #120]
   21f94:	add	x8, x28, x26
   21f98:	add	x9, x9, #0x5
   21f9c:	str	x8, [sp, #112]
   21fa0:	lsl	w8, w25, w20
   21fa4:	str	x9, [sp, #104]
   21fa8:	add	w9, w19, #0x2
   21fac:	ldur	x19, [x29, #-16]
   21fb0:	sub	w25, w8, #0x1
   21fb4:	mov	w8, #0xc9ff                	// #51711
   21fb8:	movk	w8, #0x3b9a, lsl #16
   21fbc:	mov	w24, w0
   21fc0:	stur	w9, [x29, #-40]
   21fc4:	mov	w20, #0x3                   	// #3
   21fc8:	stur	x8, [x29, #-24]
   21fcc:	mov	x23, x28
   21fd0:	cmp	w24, w26
   21fd4:	mov	w8, w24
   21fd8:	b.cs	22024 <ZSTD_endStream@@Base+0x140d0>  // b.hs, b.nlast
   21fdc:	mov	x28, x21
   21fe0:	mov	x21, x23
   21fe4:	add	x23, x23, x8
   21fe8:	mov	x0, x23
   21fec:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21ff0:	mov	w19, w0
   21ff4:	mov	x0, x27
   21ff8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   21ffc:	cmp	w19, w0
   22000:	b.ne	22050 <ZSTD_endStream@@Base+0x140fc>  // b.any
   22004:	ldur	x19, [x29, #-16]
   22008:	ldp	x0, x3, [sp, #104]
   2200c:	ldr	x4, [sp, #120]
   22010:	add	x1, x23, #0x4
   22014:	mov	x2, x19
   22018:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   2201c:	add	x0, x0, #0x4
   22020:	b	22058 <ZSTD_endStream@@Base+0x14104>
   22024:	add	x1, x21, x8
   22028:	ldrb	w8, [x1, x20]
   2202c:	ldrb	w9, [x27, x20]
   22030:	cmp	w8, w9
   22034:	b.ne	2206c <ZSTD_endStream@@Base+0x14118>  // b.any
   22038:	mov	x0, x27
   2203c:	mov	x2, x19
   22040:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   22044:	cmp	x0, x20
   22048:	b.hi	22078 <ZSTD_endStream@@Base+0x14124>  // b.pmore
   2204c:	b	22094 <ZSTD_endStream@@Base+0x14140>
   22050:	ldur	x19, [x29, #-16]
   22054:	mov	x0, xzr
   22058:	mov	x23, x21
   2205c:	mov	x21, x28
   22060:	cmp	x0, x20
   22064:	b.hi	22078 <ZSTD_endStream@@Base+0x14124>  // b.pmore
   22068:	b	22094 <ZSTD_endStream@@Base+0x14140>
   2206c:	mov	x0, xzr
   22070:	cmp	x0, x20
   22074:	b.ls	22094 <ZSTD_endStream@@Base+0x14140>  // b.plast
   22078:	add	x8, x27, x0
   2207c:	cmp	x8, x19
   22080:	ldur	w8, [x29, #-40]
   22084:	sub	w8, w8, w24
   22088:	stur	x8, [x29, #-24]
   2208c:	b.eq	220c8 <ZSTD_endStream@@Base+0x14174>  // b.none
   22090:	mov	x20, x0
   22094:	ldur	w8, [x29, #-32]
   22098:	cmp	w24, w8
   2209c:	b.ls	220bc <ZSTD_endStream@@Base+0x14168>  // b.plast
   220a0:	ldur	w8, [x29, #-80]
   220a4:	ldur	x9, [x29, #-56]
   220a8:	and	w8, w24, w8
   220ac:	ldr	w24, [x9, w8, uxtw #2]
   220b0:	mov	w8, #0x1                   	// #1
   220b4:	tbnz	w8, #0, 220d4 <ZSTD_endStream@@Base+0x14180>
   220b8:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   220bc:	mov	w8, wzr
   220c0:	tbnz	wzr, #0, 220d4 <ZSTD_endStream@@Base+0x14180>
   220c4:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   220c8:	mov	x20, x0
   220cc:	mov	w8, wzr
   220d0:	tbz	wzr, #0, 220fc <ZSTD_endStream@@Base+0x141a8>
   220d4:	subs	w25, w25, #0x1
   220d8:	cset	w8, cs  // cs = hs, nlast
   220dc:	cmp	w24, w22
   220e0:	b.ls	220fc <ZSTD_endStream@@Base+0x141a8>  // b.plast
   220e4:	cbnz	w8, 21fd0 <ZSTD_endStream@@Base+0x1407c>
   220e8:	b	220fc <ZSTD_endStream@@Base+0x141a8>
   220ec:	mov	w8, #0xc9ff                	// #51711
   220f0:	movk	w8, #0x3b9a, lsl #16
   220f4:	stur	x8, [x29, #-24]
   220f8:	mov	w20, #0x3                   	// #3
   220fc:	ldr	w28, [sp, #100]
   22100:	cmp	x20, #0x4
   22104:	b.cc	22164 <ZSTD_endStream@@Base+0x14210>  // b.lo, b.ul, b.last
   22108:	ldur	x21, [x29, #-72]
   2210c:	add	w0, w21, #0x1
   22110:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   22114:	ldur	x22, [x29, #-24]
   22118:	mov	w19, w0
   2211c:	add	w0, w22, #0x1
   22120:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   22124:	ldur	x10, [x29, #-120]
   22128:	lsl	w9, w20, #2
   2212c:	sub	w9, w9, w0
   22130:	ldp	x25, x24, [sp, #80]
   22134:	lsl	w8, w10, #2
   22138:	sub	w8, w8, w19
   2213c:	add	w8, w8, #0x4
   22140:	cmp	w9, w8
   22144:	ldur	x9, [x29, #-112]
   22148:	csel	x10, x20, x10, gt
   2214c:	ldr	w20, [sp, #96]
   22150:	cset	w8, le
   22154:	csel	x9, x27, x9, gt
   22158:	csel	x21, x22, x21, gt
   2215c:	stp	x10, x9, [x29, #-120]
   22160:	b	22174 <ZSTD_endStream@@Base+0x14220>
   22164:	ldp	x25, x24, [sp, #80]
   22168:	ldr	w20, [sp, #96]
   2216c:	ldur	x21, [x29, #-72]
   22170:	mov	w8, #0x1                   	// #1
   22174:	ldur	x9, [x29, #-48]
   22178:	cmp	x27, x9
   2217c:	b.cs	22188 <ZSTD_endStream@@Base+0x14234>  // b.hs, b.nlast
   22180:	mov	x10, x27
   22184:	cbz	w8, 21a88 <ZSTD_endStream@@Base+0x13b34>
   22188:	cbz	x21, 22220 <ZSTD_endStream@@Base+0x142cc>
   2218c:	ldur	x9, [x29, #-88]
   22190:	ldur	x12, [x29, #-112]
   22194:	ldr	x11, [sp, #16]
   22198:	add	x8, x9, x21
   2219c:	sub	x8, x12, x8
   221a0:	add	x10, x8, #0x2
   221a4:	ldur	x8, [x29, #-96]
   221a8:	cmp	w25, w10
   221ac:	csel	x9, x8, x9, hi  // hi = pmore
   221b0:	ldp	x8, x27, [sp, #56]
   221b4:	csel	x8, x11, x8, hi  // hi = pmore
   221b8:	cmp	x12, x27
   221bc:	b.ls	22238 <ZSTD_endStream@@Base+0x142e4>  // b.plast
   221c0:	and	x10, x10, #0xffffffff
   221c4:	add	x11, x9, x10
   221c8:	cmp	x11, x8
   221cc:	b.ls	22238 <ZSTD_endStream@@Base+0x142e4>  // b.plast
   221d0:	add	x9, x9, x10
   221d4:	ldp	x13, x10, [x29, #-120]
   221d8:	ldr	x26, [sp, #24]
   221dc:	sub	x9, x9, #0x1
   221e0:	sub	x10, x10, #0x1
   221e4:	ldrb	w11, [x10]
   221e8:	ldrb	w12, [x9]
   221ec:	cmp	w11, w12
   221f0:	b.ne	22244 <ZSTD_endStream@@Base+0x142f0>  // b.any
   221f4:	add	x13, x13, #0x1
   221f8:	cmp	x9, x8
   221fc:	sub	x11, x10, #0x1
   22200:	b.ls	22214 <ZSTD_endStream@@Base+0x142c0>  // b.plast
   22204:	cmp	x10, x27
   22208:	sub	x9, x9, #0x1
   2220c:	mov	x10, x11
   22210:	b.hi	221e4 <ZSTD_endStream@@Base+0x14290>  // b.pmore
   22214:	stur	x13, [x29, #-120]
   22218:	add	x2, x11, #0x1
   2221c:	b	2224c <ZSTD_endStream@@Base+0x142f8>
   22220:	ldr	x26, [sp, #24]
   22224:	ldr	x3, [sp, #40]
   22228:	ldr	x27, [sp, #64]
   2222c:	ldur	x2, [x29, #-112]
   22230:	stur	xzr, [x29, #-72]
   22234:	b	22260 <ZSTD_endStream@@Base+0x1430c>
   22238:	ldr	x26, [sp, #24]
   2223c:	ldur	x2, [x29, #-112]
   22240:	b	2224c <ZSTD_endStream@@Base+0x142f8>
   22244:	add	x2, x10, #0x1
   22248:	stur	x13, [x29, #-120]
   2224c:	ldr	x3, [sp, #40]
   22250:	sub	w8, w21, #0x2
   22254:	mov	w20, w28
   22258:	mov	w28, w8
   2225c:	stur	x21, [x29, #-72]
   22260:	ldr	x0, [x26, #24]
   22264:	cmp	x2, x3
   22268:	sub	x21, x2, x27
   2226c:	stur	x2, [x29, #-112]
   22270:	b.ls	22280 <ZSTD_endStream@@Base+0x1432c>  // b.plast
   22274:	mov	x1, x27
   22278:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   2227c:	b	222e8 <ZSTD_endStream@@Base+0x14394>
   22280:	mov	x1, x27
   22284:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   22288:	cmp	x21, #0x11
   2228c:	b.cc	222e8 <ZSTD_endStream@@Base+0x14394>  // b.lo, b.ul, b.last
   22290:	ldr	x19, [x26, #24]
   22294:	add	x1, x27, #0x10
   22298:	add	x0, x19, #0x10
   2229c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   222a0:	add	x0, x19, #0x20
   222a4:	add	x1, x27, #0x20
   222a8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   222ac:	cmp	x21, #0x31
   222b0:	b.lt	222e8 <ZSTD_endStream@@Base+0x14394>  // b.tstop
   222b4:	add	x23, x19, x21
   222b8:	add	x22, x19, #0x30
   222bc:	add	x19, x27, #0x40
   222c0:	sub	x1, x19, #0x10
   222c4:	mov	x0, x22
   222c8:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   222cc:	add	x0, x22, #0x10
   222d0:	mov	x1, x19
   222d4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   222d8:	add	x22, x22, #0x20
   222dc:	cmp	x22, x23
   222e0:	add	x19, x19, #0x20
   222e4:	b.cc	222c0 <ZSTD_endStream@@Base+0x1436c>  // b.lo, b.ul, b.last
   222e8:	ldr	x9, [x26, #24]
   222ec:	ldur	x8, [x29, #-120]
   222f0:	cmp	x21, #0x10, lsl #12
   222f4:	add	x9, x9, x21
   222f8:	sub	x8, x8, #0x3
   222fc:	str	x9, [x26, #24]
   22300:	b.cc	22318 <ZSTD_endStream@@Base+0x143c4>  // b.lo, b.ul, b.last
   22304:	ldp	x10, x9, [x26]
   22308:	sub	x9, x9, x10
   2230c:	lsr	x9, x9, #3
   22310:	mov	w10, #0x1                   	// #1
   22314:	stp	w10, w9, [x26, #72]
   22318:	ldur	x10, [x29, #-72]
   2231c:	ldr	x9, [x26, #8]
   22320:	cmp	x8, #0x10, lsl #12
   22324:	add	w10, w10, #0x1
   22328:	strh	w21, [x9, #4]
   2232c:	str	w10, [x9]
   22330:	b.cc	22348 <ZSTD_endStream@@Base+0x143f4>  // b.lo, b.ul, b.last
   22334:	ldp	x11, x10, [x26]
   22338:	sub	x10, x10, x11
   2233c:	lsr	x10, x10, #3
   22340:	mov	w11, #0x2                   	// #2
   22344:	stp	w11, w10, [x26, #72]
   22348:	strh	w8, [x9, #6]
   2234c:	add	x8, x9, #0x8
   22350:	ldp	x9, x10, [x29, #-120]
   22354:	str	x8, [x26, #8]
   22358:	add	x27, x10, x9
   2235c:	mov	x13, x27
   22360:	b	22378 <ZSTD_endStream@@Base+0x14424>
   22364:	mov	w21, w20
   22368:	mov	w20, w28
   2236c:	mov	w28, w20
   22370:	mov	w20, w21
   22374:	tbz	w8, #0, 2134c <ZSTD_endStream@@Base+0x133f8>
   22378:	ldur	x8, [x29, #-48]
   2237c:	cmp	x13, x8
   22380:	b.hi	22494 <ZSTD_endStream@@Base+0x14540>  // b.pmore
   22384:	ldur	x9, [x29, #-88]
   22388:	sub	w8, w13, w9
   2238c:	sub	w21, w8, w20
   22390:	ldur	x8, [x29, #-96]
   22394:	cmp	w21, w25
   22398:	csel	x9, x8, x9, cc  // cc = lo, ul, last
   2239c:	ldur	x8, [x29, #-104]
   223a0:	cmp	w21, w8
   223a4:	mov	w8, wzr
   223a8:	b.ls	22364 <ZSTD_endStream@@Base+0x14410>  // b.plast
   223ac:	ldur	w10, [x29, #-124]
   223b0:	sub	w10, w10, w21
   223b4:	cmp	w10, #0x3
   223b8:	b.cc	22364 <ZSTD_endStream@@Base+0x14410>  // b.lo, b.ul, b.last
   223bc:	mov	x0, x13
   223c0:	add	x22, x9, x21
   223c4:	mov	x23, x13
   223c8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   223cc:	mov	w19, w0
   223d0:	mov	x0, x22
   223d4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   223d8:	cmp	w19, w0
   223dc:	b.ne	22428 <ZSTD_endStream@@Base+0x144d4>  // b.any
   223e0:	ldp	x8, x4, [sp, #48]
   223e4:	ldur	x2, [x29, #-16]
   223e8:	cmp	w21, w25
   223ec:	add	x0, x23, #0x4
   223f0:	add	x1, x22, #0x4
   223f4:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   223f8:	mov	x21, x23
   223fc:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   22400:	ldr	x3, [sp, #40]
   22404:	mov	x22, x0
   22408:	ldr	x0, [x26, #24]
   2240c:	add	x19, x22, #0x1
   22410:	cmp	x27, x3
   22414:	b.ls	2243c <ZSTD_endStream@@Base+0x144e8>  // b.plast
   22418:	mov	x1, x27
   2241c:	mov	x2, x27
   22420:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   22424:	b	22444 <ZSTD_endStream@@Base+0x144f0>
   22428:	mov	w8, wzr
   2242c:	mov	w21, w20
   22430:	mov	w20, w28
   22434:	mov	x13, x23
   22438:	b	2236c <ZSTD_endStream@@Base+0x14418>
   2243c:	mov	x1, x27
   22440:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   22444:	ldr	x9, [x26, #8]
   22448:	add	x8, x22, #0x4
   2244c:	cmp	x19, #0x10, lsl #12
   22450:	mov	w10, #0x1                   	// #1
   22454:	strh	wzr, [x9, #4]
   22458:	str	w10, [x9]
   2245c:	b.cc	22474 <ZSTD_endStream@@Base+0x14520>  // b.lo, b.ul, b.last
   22460:	ldp	x11, x10, [x26]
   22464:	sub	x10, x10, x11
   22468:	lsr	x10, x10, #3
   2246c:	mov	w11, #0x2                   	// #2
   22470:	stp	w11, w10, [x26, #72]
   22474:	add	x27, x21, x8
   22478:	strh	w19, [x9, #6]
   2247c:	add	x9, x9, #0x8
   22480:	mov	w8, #0x1                   	// #1
   22484:	mov	w21, w28
   22488:	mov	x13, x27
   2248c:	str	x9, [x26, #8]
   22490:	b	2236c <ZSTD_endStream@@Base+0x14418>
   22494:	mov	w21, w20
   22498:	b	2134c <ZSTD_endStream@@Base+0x133f8>
   2249c:	ldur	x8, [x29, #-16]
   224a0:	sub	x0, x8, x27
   224a4:	ldr	x8, [sp, #8]
   224a8:	stp	w28, w21, [x8]
   224ac:	ldp	x20, x19, [sp, #336]
   224b0:	ldp	x22, x21, [sp, #320]
   224b4:	ldp	x24, x23, [sp, #304]
   224b8:	ldp	x26, x25, [sp, #288]
   224bc:	ldp	x28, x27, [sp, #272]
   224c0:	ldp	x29, x30, [sp, #256]
   224c4:	add	sp, sp, #0x160
   224c8:	ret
   224cc:	sub	sp, sp, #0x170
   224d0:	stp	x29, x30, [sp, #272]
   224d4:	stp	x28, x27, [sp, #288]
   224d8:	stp	x26, x25, [sp, #304]
   224dc:	stp	x24, x23, [sp, #320]
   224e0:	stp	x22, x21, [sp, #336]
   224e4:	stp	x20, x19, [sp, #352]
   224e8:	ldr	x25, [x0, #8]
   224ec:	ldr	w26, [x0, #24]
   224f0:	ldp	w23, w21, [x2]
   224f4:	add	x28, x3, x4
   224f8:	sub	x8, x28, #0x8
   224fc:	add	x9, x25, x26
   22500:	cmp	x9, x3
   22504:	cinc	x19, x3, eq  // eq = none
   22508:	add	x29, sp, #0x110
   2250c:	cmp	x19, x8
   22510:	str	x2, [sp]
   22514:	str	x9, [sp, #40]
   22518:	stur	x3, [x29, #-128]
   2251c:	b.cs	23e44 <ZSTD_endStream@@Base+0x15ef0>  // b.hs, b.nlast
   22520:	ldr	w9, [x0, #28]
   22524:	ldr	x10, [x0, #16]
   22528:	sub	w11, w26, #0x1
   2252c:	stur	w11, [x29, #-92]
   22530:	sub	x11, x28, #0x20
   22534:	str	x11, [sp, #16]
   22538:	add	x11, x0, #0xb8
   2253c:	mov	x24, x0
   22540:	str	x11, [sp, #96]
   22544:	add	x11, x10, x26
   22548:	stp	x9, x10, [x29, #-72]
   2254c:	add	x9, x10, x9
   22550:	str	x1, [sp, #56]
   22554:	str	x11, [sp, #32]
   22558:	str	x9, [sp, #8]
   2255c:	stur	x28, [x29, #-16]
   22560:	str	x0, [sp, #104]
   22564:	str	x25, [sp, #48]
   22568:	str	x26, [sp, #88]
   2256c:	str	x8, [sp, #120]
   22570:	b	225a4 <ZSTD_endStream@@Base+0x14650>
   22574:	ldur	x8, [x29, #-128]
   22578:	ldur	x28, [x29, #-16]
   2257c:	ldr	x24, [sp, #104]
   22580:	ldr	x25, [sp, #48]
   22584:	ldr	x26, [sp, #88]
   22588:	ldr	x27, [sp, #120]
   2258c:	ldur	w21, [x29, #-132]
   22590:	sub	x8, x19, x8
   22594:	add	x8, x19, x8, asr #8
   22598:	add	x19, x8, #0x1
   2259c:	cmp	x19, x27
   225a0:	b.cs	23e44 <ZSTD_endStream@@Base+0x15ef0>  // b.hs, b.nlast
   225a4:	sub	w8, w19, w25
   225a8:	str	w8, [sp, #112]
   225ac:	sub	w8, w8, w23
   225b0:	add	w20, w8, #0x1
   225b4:	ldp	x9, x8, [x29, #-72]
   225b8:	cmp	w20, w26
   225bc:	mov	x10, xzr
   225c0:	stur	x19, [x29, #-40]
   225c4:	csel	x8, x8, x25, cc  // cc = lo, ul, last
   225c8:	cmp	w20, w9
   225cc:	add	x25, x19, #0x1
   225d0:	b.ls	22634 <ZSTD_endStream@@Base+0x146e0>  // b.plast
   225d4:	ldur	w9, [x29, #-92]
   225d8:	sub	w9, w9, w20
   225dc:	cmp	w9, #0x3
   225e0:	b.cc	22634 <ZSTD_endStream@@Base+0x146e0>  // b.lo, b.ul, b.last
   225e4:	mov	x0, x25
   225e8:	add	x22, x8, x20
   225ec:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   225f0:	mov	w19, w0
   225f4:	mov	x0, x22
   225f8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   225fc:	cmp	w19, w0
   22600:	b.ne	2262c <ZSTD_endStream@@Base+0x146d8>  // b.any
   22604:	ldur	x19, [x29, #-40]
   22608:	ldp	x8, x4, [sp, #32]
   2260c:	cmp	w20, w26
   22610:	add	x1, x22, #0x4
   22614:	add	x0, x19, #0x5
   22618:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   2261c:	mov	x2, x28
   22620:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   22624:	add	x10, x0, #0x4
   22628:	b	22634 <ZSTD_endStream@@Base+0x146e0>
   2262c:	ldur	x19, [x29, #-40]
   22630:	mov	x10, xzr
   22634:	ldr	w8, [x24, #200]
   22638:	stur	w23, [x29, #-76]
   2263c:	stur	w21, [x29, #-132]
   22640:	stur	x25, [x29, #-56]
   22644:	sub	w9, w8, #0x6
   22648:	cmp	w9, #0x2
   2264c:	stur	x10, [x29, #-88]
   22650:	b.cs	22844 <ZSTD_endStream@@Base+0x148f0>  // b.hs, b.nlast
   22654:	ldr	x8, [x24, #64]
   22658:	mov	x22, x19
   2265c:	mov	w20, #0x1                   	// #1
   22660:	ldr	x1, [sp, #96]
   22664:	stur	x8, [x29, #-48]
   22668:	ldp	x12, x8, [x24, #8]
   2266c:	mov	w3, #0x6                   	// #6
   22670:	mov	x0, x24
   22674:	mov	x2, x22
   22678:	stp	x12, x8, [sp, #72]
   2267c:	ldp	w9, w8, [x24, #184]
   22680:	ldp	w25, w10, [x24, #24]
   22684:	ldr	w11, [x24, #32]
   22688:	sub	w19, w22, w12
   2268c:	lsl	w9, w20, w9
   22690:	sub	w12, w19, w10
   22694:	cmp	w12, w9
   22698:	ldr	w12, [x24, #196]
   2269c:	lsl	w21, w20, w8
   226a0:	sub	w8, w19, w9
   226a4:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   226a8:	csel	w26, w8, w10, eq  // eq = none
   226ac:	subs	w8, w19, w21
   226b0:	stur	w12, [x29, #-24]
   226b4:	csel	w27, wzr, w8, cc  // cc = lo, ul, last
   226b8:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   226bc:	cmp	w0, w26
   226c0:	b.ls	22a24 <ZSTD_endStream@@Base+0x14ad0>  // b.plast
   226c4:	ldr	x10, [sp, #72]
   226c8:	ldr	x11, [sp, #80]
   226cc:	sub	w8, w21, #0x1
   226d0:	stur	w8, [x29, #-104]
   226d4:	add	x8, x10, x25
   226d8:	stur	x8, [x29, #-112]
   226dc:	add	x8, x11, x25
   226e0:	stur	x8, [x29, #-120]
   226e4:	ldur	w8, [x29, #-24]
   226e8:	add	x9, x22, #0x4
   226ec:	str	x9, [sp, #128]
   226f0:	add	w9, w19, #0x2
   226f4:	lsl	w8, w20, w8
   226f8:	sub	w20, w8, #0x1
   226fc:	mov	w8, #0xc9ff                	// #51711
   22700:	movk	w8, #0x3b9a, lsl #16
   22704:	mov	w28, w0
   22708:	stur	w9, [x29, #-32]
   2270c:	mov	w21, #0x3                   	// #3
   22710:	stur	x8, [x29, #-24]
   22714:	mov	x19, x22
   22718:	mov	x22, x10
   2271c:	mov	x24, x11
   22720:	cmp	w28, w25
   22724:	mov	w8, w28
   22728:	b.cs	2276c <ZSTD_endStream@@Base+0x14818>  // b.hs, b.nlast
   2272c:	add	x23, x11, x8
   22730:	mov	x0, x23
   22734:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22738:	mov	x8, x19
   2273c:	mov	w19, w0
   22740:	mov	x0, x8
   22744:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22748:	cmp	w19, w0
   2274c:	b.ne	227c0 <ZSTD_endStream@@Base+0x1486c>  // b.any
   22750:	ldr	x0, [sp, #128]
   22754:	ldur	x2, [x29, #-16]
   22758:	ldp	x3, x4, [x29, #-120]
   2275c:	add	x1, x23, #0x4
   22760:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   22764:	add	x0, x0, #0x4
   22768:	b	227c4 <ZSTD_endStream@@Base+0x14870>
   2276c:	add	x1, x10, x8
   22770:	ldrb	w8, [x1, x21]
   22774:	ldrb	w9, [x19, x21]
   22778:	cmp	w8, w9
   2277c:	b.ne	22810 <ZSTD_endStream@@Base+0x148bc>  // b.any
   22780:	ldur	x2, [x29, #-16]
   22784:	mov	x0, x19
   22788:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   2278c:	mov	x11, x24
   22790:	mov	x10, x22
   22794:	cmp	x0, x21
   22798:	b.hi	227dc <ZSTD_endStream@@Base+0x14888>  // b.pmore
   2279c:	cmp	w28, w27
   227a0:	b.ls	22804 <ZSTD_endStream@@Base+0x148b0>  // b.plast
   227a4:	ldur	w8, [x29, #-104]
   227a8:	ldur	x9, [x29, #-48]
   227ac:	and	w8, w28, w8
   227b0:	ldr	w28, [x9, w8, uxtw #2]
   227b4:	mov	w8, #0x1                   	// #1
   227b8:	tbnz	w8, #0, 2282c <ZSTD_endStream@@Base+0x148d8>
   227bc:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   227c0:	mov	x0, xzr
   227c4:	ldur	w23, [x29, #-76]
   227c8:	ldur	x19, [x29, #-40]
   227cc:	mov	x10, x22
   227d0:	mov	x11, x24
   227d4:	cmp	x0, x21
   227d8:	b.ls	2279c <ZSTD_endStream@@Base+0x14848>  // b.plast
   227dc:	ldur	x9, [x29, #-16]
   227e0:	add	x8, x19, x0
   227e4:	cmp	x8, x9
   227e8:	ldur	w8, [x29, #-32]
   227ec:	sub	w8, w8, w28
   227f0:	stur	x8, [x29, #-24]
   227f4:	b.eq	22820 <ZSTD_endStream@@Base+0x148cc>  // b.none
   227f8:	mov	x21, x0
   227fc:	cmp	w28, w27
   22800:	b.hi	227a4 <ZSTD_endStream@@Base+0x14850>  // b.pmore
   22804:	mov	w8, wzr
   22808:	tbnz	w8, #0, 2282c <ZSTD_endStream@@Base+0x148d8>
   2280c:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22810:	mov	x0, xzr
   22814:	cmp	x0, x21
   22818:	b.ls	2279c <ZSTD_endStream@@Base+0x14848>  // b.plast
   2281c:	b	227dc <ZSTD_endStream@@Base+0x14888>
   22820:	mov	w8, wzr
   22824:	mov	x21, x0
   22828:	tbz	w8, #0, 22c28 <ZSTD_endStream@@Base+0x14cd4>
   2282c:	subs	w20, w20, #0x1
   22830:	cset	w8, cs  // cs = hs, nlast
   22834:	cmp	w28, w26
   22838:	b.ls	22c28 <ZSTD_endStream@@Base+0x14cd4>  // b.plast
   2283c:	cbnz	w8, 22720 <ZSTD_endStream@@Base+0x147cc>
   22840:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22844:	cmp	w8, #0x5
   22848:	b.ne	22a3c <ZSTD_endStream@@Base+0x14ae8>  // b.any
   2284c:	ldr	x8, [x24, #64]
   22850:	mov	x20, x19
   22854:	ldr	w11, [x24, #32]
   22858:	mov	w13, #0x1                   	// #1
   2285c:	stur	x8, [x29, #-48]
   22860:	ldp	x27, x8, [x24, #8]
   22864:	ldr	x1, [sp, #96]
   22868:	mov	w3, #0x5                   	// #5
   2286c:	mov	x0, x24
   22870:	str	x8, [sp, #80]
   22874:	ldp	w9, w8, [x24, #184]
   22878:	ldp	w25, w10, [x24, #24]
   2287c:	sub	w19, w20, w27
   22880:	mov	x2, x20
   22884:	lsl	w9, w13, w9
   22888:	sub	w12, w19, w10
   2288c:	cmp	w12, w9
   22890:	ldr	w12, [x24, #196]
   22894:	lsl	w21, w13, w8
   22898:	sub	w8, w19, w9
   2289c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   228a0:	csel	w26, w8, w10, eq  // eq = none
   228a4:	subs	w8, w19, w21
   228a8:	stur	w12, [x29, #-24]
   228ac:	csel	w22, wzr, w8, cc  // cc = lo, ul, last
   228b0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   228b4:	cmp	w0, w26
   228b8:	b.ls	22c14 <ZSTD_endStream@@Base+0x14cc0>  // b.plast
   228bc:	ldr	x10, [sp, #80]
   228c0:	sub	w8, w21, #0x1
   228c4:	ldur	w9, [x29, #-24]
   228c8:	stur	w8, [x29, #-104]
   228cc:	add	x8, x27, x25
   228d0:	stur	x8, [x29, #-112]
   228d4:	add	x8, x10, x25
   228d8:	stur	x8, [x29, #-120]
   228dc:	mov	w8, #0x1                   	// #1
   228e0:	lsl	w8, w8, w9
   228e4:	add	x9, x20, #0x4
   228e8:	sub	w24, w8, #0x1
   228ec:	mov	w8, #0xc9ff                	// #51711
   228f0:	str	x9, [sp, #128]
   228f4:	add	w9, w19, #0x2
   228f8:	movk	w8, #0x3b9a, lsl #16
   228fc:	mov	w28, w0
   22900:	stur	w9, [x29, #-32]
   22904:	mov	w21, #0x3                   	// #3
   22908:	stur	x8, [x29, #-24]
   2290c:	mov	x19, x20
   22910:	mov	x20, x10
   22914:	cmp	w28, w25
   22918:	mov	w8, w28
   2291c:	b.cs	22960 <ZSTD_endStream@@Base+0x14a0c>  // b.hs, b.nlast
   22920:	add	x23, x10, x8
   22924:	mov	x0, x23
   22928:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   2292c:	mov	x8, x19
   22930:	mov	w19, w0
   22934:	mov	x0, x8
   22938:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   2293c:	cmp	w19, w0
   22940:	b.ne	22984 <ZSTD_endStream@@Base+0x14a30>  // b.any
   22944:	ldr	x0, [sp, #128]
   22948:	ldur	x2, [x29, #-16]
   2294c:	ldp	x3, x4, [x29, #-120]
   22950:	add	x1, x23, #0x4
   22954:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   22958:	add	x0, x0, #0x4
   2295c:	b	22988 <ZSTD_endStream@@Base+0x14a34>
   22960:	add	x1, x27, x8
   22964:	ldrb	w8, [x1, x21]
   22968:	ldrb	w9, [x19, x21]
   2296c:	cmp	w8, w9
   22970:	b.ne	229d0 <ZSTD_endStream@@Base+0x14a7c>  // b.any
   22974:	ldur	x2, [x29, #-16]
   22978:	mov	x0, x19
   2297c:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   22980:	b	22990 <ZSTD_endStream@@Base+0x14a3c>
   22984:	mov	x0, xzr
   22988:	ldur	w23, [x29, #-76]
   2298c:	ldur	x19, [x29, #-40]
   22990:	mov	x10, x20
   22994:	cmp	x0, x21
   22998:	b.ls	229dc <ZSTD_endStream@@Base+0x14a88>  // b.plast
   2299c:	ldur	x9, [x29, #-16]
   229a0:	add	x8, x19, x0
   229a4:	cmp	x8, x9
   229a8:	ldur	w8, [x29, #-32]
   229ac:	sub	w8, w8, w28
   229b0:	stur	x8, [x29, #-24]
   229b4:	b.eq	22a00 <ZSTD_endStream@@Base+0x14aac>  // b.none
   229b8:	mov	x21, x0
   229bc:	cmp	w28, w22
   229c0:	b.hi	229e4 <ZSTD_endStream@@Base+0x14a90>  // b.pmore
   229c4:	mov	w8, wzr
   229c8:	tbnz	wzr, #0, 22a0c <ZSTD_endStream@@Base+0x14ab8>
   229cc:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   229d0:	mov	x0, xzr
   229d4:	cmp	x0, x21
   229d8:	b.hi	2299c <ZSTD_endStream@@Base+0x14a48>  // b.pmore
   229dc:	cmp	w28, w22
   229e0:	b.ls	229c4 <ZSTD_endStream@@Base+0x14a70>  // b.plast
   229e4:	ldur	w8, [x29, #-104]
   229e8:	ldur	x9, [x29, #-48]
   229ec:	and	w8, w28, w8
   229f0:	ldr	w28, [x9, w8, uxtw #2]
   229f4:	mov	w8, #0x1                   	// #1
   229f8:	tbnz	w8, #0, 22a0c <ZSTD_endStream@@Base+0x14ab8>
   229fc:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22a00:	mov	x21, x0
   22a04:	mov	w8, wzr
   22a08:	tbz	wzr, #0, 22c28 <ZSTD_endStream@@Base+0x14cd4>
   22a0c:	subs	w24, w24, #0x1
   22a10:	cset	w8, cs  // cs = hs, nlast
   22a14:	cmp	w28, w26
   22a18:	b.ls	22c28 <ZSTD_endStream@@Base+0x14cd4>  // b.plast
   22a1c:	cbnz	w8, 22914 <ZSTD_endStream@@Base+0x149c0>
   22a20:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22a24:	mov	w8, #0xc9ff                	// #51711
   22a28:	movk	w8, #0x3b9a, lsl #16
   22a2c:	stur	x8, [x29, #-24]
   22a30:	mov	w21, #0x3                   	// #3
   22a34:	mov	x19, x22
   22a38:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22a3c:	ldr	x8, [x24, #64]
   22a40:	mov	x20, x19
   22a44:	ldr	w11, [x24, #32]
   22a48:	mov	w13, #0x1                   	// #1
   22a4c:	stur	x8, [x29, #-48]
   22a50:	ldp	x27, x8, [x24, #8]
   22a54:	ldr	x1, [sp, #96]
   22a58:	mov	w3, #0x4                   	// #4
   22a5c:	mov	x0, x24
   22a60:	str	x8, [sp, #80]
   22a64:	ldp	w9, w8, [x24, #184]
   22a68:	ldp	w25, w10, [x24, #24]
   22a6c:	sub	w19, w20, w27
   22a70:	mov	x2, x20
   22a74:	lsl	w9, w13, w9
   22a78:	sub	w12, w19, w10
   22a7c:	cmp	w12, w9
   22a80:	ldr	w12, [x24, #196]
   22a84:	lsl	w21, w13, w8
   22a88:	sub	w8, w19, w9
   22a8c:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   22a90:	csel	w26, w8, w10, eq  // eq = none
   22a94:	subs	w8, w19, w21
   22a98:	stur	w12, [x29, #-24]
   22a9c:	csel	w22, wzr, w8, cc  // cc = lo, ul, last
   22aa0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   22aa4:	cmp	w0, w26
   22aa8:	b.ls	22c14 <ZSTD_endStream@@Base+0x14cc0>  // b.plast
   22aac:	ldr	x10, [sp, #80]
   22ab0:	sub	w8, w21, #0x1
   22ab4:	ldur	w9, [x29, #-24]
   22ab8:	stur	w8, [x29, #-104]
   22abc:	add	x8, x27, x25
   22ac0:	stur	x8, [x29, #-112]
   22ac4:	add	x8, x10, x25
   22ac8:	stur	x8, [x29, #-120]
   22acc:	mov	w8, #0x1                   	// #1
   22ad0:	lsl	w8, w8, w9
   22ad4:	add	x9, x20, #0x4
   22ad8:	sub	w24, w8, #0x1
   22adc:	mov	w8, #0xc9ff                	// #51711
   22ae0:	str	x9, [sp, #128]
   22ae4:	add	w9, w19, #0x2
   22ae8:	movk	w8, #0x3b9a, lsl #16
   22aec:	mov	w28, w0
   22af0:	stur	w9, [x29, #-32]
   22af4:	mov	w21, #0x3                   	// #3
   22af8:	stur	x8, [x29, #-24]
   22afc:	mov	x19, x20
   22b00:	mov	x20, x10
   22b04:	cmp	w28, w25
   22b08:	mov	w8, w28
   22b0c:	b.cs	22b50 <ZSTD_endStream@@Base+0x14bfc>  // b.hs, b.nlast
   22b10:	add	x23, x10, x8
   22b14:	mov	x0, x23
   22b18:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22b1c:	mov	x8, x19
   22b20:	mov	w19, w0
   22b24:	mov	x0, x8
   22b28:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22b2c:	cmp	w19, w0
   22b30:	b.ne	22b74 <ZSTD_endStream@@Base+0x14c20>  // b.any
   22b34:	ldr	x0, [sp, #128]
   22b38:	ldur	x2, [x29, #-16]
   22b3c:	ldp	x3, x4, [x29, #-120]
   22b40:	add	x1, x23, #0x4
   22b44:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   22b48:	add	x0, x0, #0x4
   22b4c:	b	22b78 <ZSTD_endStream@@Base+0x14c24>
   22b50:	add	x1, x27, x8
   22b54:	ldrb	w8, [x1, x21]
   22b58:	ldrb	w9, [x19, x21]
   22b5c:	cmp	w8, w9
   22b60:	b.ne	22bc0 <ZSTD_endStream@@Base+0x14c6c>  // b.any
   22b64:	ldur	x2, [x29, #-16]
   22b68:	mov	x0, x19
   22b6c:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   22b70:	b	22b80 <ZSTD_endStream@@Base+0x14c2c>
   22b74:	mov	x0, xzr
   22b78:	ldur	w23, [x29, #-76]
   22b7c:	ldur	x19, [x29, #-40]
   22b80:	mov	x10, x20
   22b84:	cmp	x0, x21
   22b88:	b.ls	22bcc <ZSTD_endStream@@Base+0x14c78>  // b.plast
   22b8c:	ldur	x9, [x29, #-16]
   22b90:	add	x8, x19, x0
   22b94:	cmp	x8, x9
   22b98:	ldur	w8, [x29, #-32]
   22b9c:	sub	w8, w8, w28
   22ba0:	stur	x8, [x29, #-24]
   22ba4:	b.eq	22bf0 <ZSTD_endStream@@Base+0x14c9c>  // b.none
   22ba8:	mov	x21, x0
   22bac:	cmp	w28, w22
   22bb0:	b.hi	22bd4 <ZSTD_endStream@@Base+0x14c80>  // b.pmore
   22bb4:	mov	w8, wzr
   22bb8:	tbnz	wzr, #0, 22bfc <ZSTD_endStream@@Base+0x14ca8>
   22bbc:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22bc0:	mov	x0, xzr
   22bc4:	cmp	x0, x21
   22bc8:	b.hi	22b8c <ZSTD_endStream@@Base+0x14c38>  // b.pmore
   22bcc:	cmp	w28, w22
   22bd0:	b.ls	22bb4 <ZSTD_endStream@@Base+0x14c60>  // b.plast
   22bd4:	ldur	w8, [x29, #-104]
   22bd8:	ldur	x9, [x29, #-48]
   22bdc:	and	w8, w28, w8
   22be0:	ldr	w28, [x9, w8, uxtw #2]
   22be4:	mov	w8, #0x1                   	// #1
   22be8:	tbnz	w8, #0, 22bfc <ZSTD_endStream@@Base+0x14ca8>
   22bec:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22bf0:	mov	x21, x0
   22bf4:	mov	w8, wzr
   22bf8:	tbz	wzr, #0, 22c28 <ZSTD_endStream@@Base+0x14cd4>
   22bfc:	subs	w24, w24, #0x1
   22c00:	cset	w8, cs  // cs = hs, nlast
   22c04:	cmp	w28, w26
   22c08:	b.ls	22c28 <ZSTD_endStream@@Base+0x14cd4>  // b.plast
   22c0c:	cbnz	w8, 22b04 <ZSTD_endStream@@Base+0x14bb0>
   22c10:	b	22c28 <ZSTD_endStream@@Base+0x14cd4>
   22c14:	mov	w8, #0xc9ff                	// #51711
   22c18:	movk	w8, #0x3b9a, lsl #16
   22c1c:	stur	x8, [x29, #-24]
   22c20:	mov	w21, #0x3                   	// #3
   22c24:	mov	x19, x20
   22c28:	ldur	x10, [x29, #-88]
   22c2c:	ldur	x8, [x29, #-56]
   22c30:	cmp	x21, x10
   22c34:	csel	x9, x19, x8, hi  // hi = pmore
   22c38:	ldur	x8, [x29, #-24]
   22c3c:	csel	x25, x8, xzr, hi  // hi = pmore
   22c40:	csel	x8, x21, x10, hi  // hi = pmore
   22c44:	cmp	x8, #0x3
   22c48:	stur	x8, [x29, #-48]
   22c4c:	b.ls	22574 <ZSTD_endStream@@Base+0x14620>  // b.plast
   22c50:	ldr	x8, [sp, #120]
   22c54:	ldur	x28, [x29, #-16]
   22c58:	ldr	x24, [sp, #104]
   22c5c:	stur	x9, [x29, #-112]
   22c60:	cmp	x19, x8
   22c64:	b.cs	23bb4 <ZSTD_endStream@@Base+0x15c60>  // b.hs, b.nlast
   22c68:	ldr	w9, [sp, #112]
   22c6c:	b	22ca0 <ZSTD_endStream@@Base+0x14d4c>
   22c70:	ldur	x28, [x29, #-16]
   22c74:	ldr	x24, [sp, #104]
   22c78:	ldur	w23, [x29, #-76]
   22c7c:	ldur	w20, [x29, #-132]
   22c80:	ldur	x25, [x29, #-56]
   22c84:	mov	w8, #0x1                   	// #1
   22c88:	cbnz	w8, 23b08 <ZSTD_endStream@@Base+0x15bb4>
   22c8c:	ldr	x8, [sp, #120]
   22c90:	ldur	w9, [x29, #-88]
   22c94:	mov	x19, x27
   22c98:	cmp	x27, x8
   22c9c:	b.cs	23b08 <ZSTD_endStream@@Base+0x15bb4>  // b.hs, b.nlast
   22ca0:	add	x27, x19, #0x1
   22ca4:	add	w8, w9, #0x1
   22ca8:	stur	x19, [x29, #-40]
   22cac:	stur	w8, [x29, #-88]
   22cb0:	str	w9, [sp, #112]
   22cb4:	cbz	x25, 22d7c <ZSTD_endStream@@Base+0x14e28>
   22cb8:	sub	w20, w8, w23
   22cbc:	ldr	x8, [sp, #88]
   22cc0:	ldur	x9, [x29, #-64]
   22cc4:	cmp	w20, w8
   22cc8:	ldr	x8, [sp, #48]
   22ccc:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   22cd0:	ldur	x9, [x29, #-72]
   22cd4:	cmp	w20, w9
   22cd8:	b.ls	22d7c <ZSTD_endStream@@Base+0x14e28>  // b.plast
   22cdc:	ldur	w9, [x29, #-92]
   22ce0:	mov	w21, #0x1                   	// #1
   22ce4:	sub	w9, w9, w20
   22ce8:	cmp	w9, #0x3
   22cec:	b.cc	22d80 <ZSTD_endStream@@Base+0x14e2c>  // b.lo, b.ul, b.last
   22cf0:	mov	x0, x27
   22cf4:	add	x22, x8, x20
   22cf8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22cfc:	mov	w19, w0
   22d00:	mov	x0, x22
   22d04:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22d08:	cmp	w19, w0
   22d0c:	b.ne	22d80 <ZSTD_endStream@@Base+0x14e2c>  // b.any
   22d10:	ldr	x8, [sp, #88]
   22d14:	add	x1, x22, #0x4
   22d18:	mov	x2, x28
   22d1c:	cmp	w20, w8
   22d20:	ldur	x8, [x29, #-40]
   22d24:	add	x0, x8, #0x5
   22d28:	ldp	x8, x4, [sp, #32]
   22d2c:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   22d30:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   22d34:	cmn	x0, #0x5
   22d38:	b.hi	22d80 <ZSTD_endStream@@Base+0x14e2c>  // b.pmore
   22d3c:	add	x19, x0, #0x4
   22d40:	add	w0, w25, #0x1
   22d44:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   22d48:	ldur	x10, [x29, #-48]
   22d4c:	add	w9, w19, w19, lsl #1
   22d50:	add	w8, w10, w10, lsl #1
   22d54:	sub	w8, w8, w0
   22d58:	add	w8, w8, #0x1
   22d5c:	cmp	w9, w8
   22d60:	ldur	x8, [x29, #-112]
   22d64:	csel	x25, xzr, x25, gt
   22d68:	csel	x10, x19, x10, gt
   22d6c:	stur	x10, [x29, #-48]
   22d70:	csel	x8, x27, x8, gt
   22d74:	stur	x8, [x29, #-112]
   22d78:	b	22d80 <ZSTD_endStream@@Base+0x14e2c>
   22d7c:	mov	w21, #0x1                   	// #1
   22d80:	ldr	w8, [x24, #200]
   22d84:	stur	x27, [x29, #-24]
   22d88:	stur	x25, [x29, #-56]
   22d8c:	sub	w9, w8, #0x6
   22d90:	cmp	w9, #0x2
   22d94:	b.cs	22f70 <ZSTD_endStream@@Base+0x1501c>  // b.hs, b.nlast
   22d98:	ldr	x8, [x24, #64]
   22d9c:	mov	x2, x27
   22da0:	ldr	w11, [x24, #32]
   22da4:	ldr	x1, [sp, #96]
   22da8:	stur	x8, [x29, #-120]
   22dac:	ldp	x27, x25, [x24, #8]
   22db0:	ldp	w9, w8, [x24, #184]
   22db4:	ldp	w26, w10, [x24, #24]
   22db8:	mov	w28, #0x1                   	// #1
   22dbc:	sub	w19, w2, w27
   22dc0:	lsl	w9, w21, w9
   22dc4:	sub	w12, w19, w10
   22dc8:	cmp	w12, w9
   22dcc:	ldr	w21, [x24, #196]
   22dd0:	lsl	w23, w28, w8
   22dd4:	sub	w8, w19, w9
   22dd8:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   22ddc:	mov	x0, x24
   22de0:	csel	w24, w8, w10, eq  // eq = none
   22de4:	subs	w8, w19, w23
   22de8:	mov	w3, #0x6                   	// #6
   22dec:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   22df0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   22df4:	cmp	w0, w24
   22df8:	b.ls	23154 <ZSTD_endStream@@Base+0x15200>  // b.plast
   22dfc:	sub	w8, w23, #0x1
   22e00:	ldur	x9, [x29, #-40]
   22e04:	str	w8, [sp, #128]
   22e08:	add	x8, x27, x26
   22e0c:	str	x8, [sp, #80]
   22e10:	add	x8, x25, x26
   22e14:	str	x8, [sp, #72]
   22e18:	lsl	w8, w28, w21
   22e1c:	ldur	x28, [x29, #-16]
   22e20:	add	x9, x9, #0x5
   22e24:	sub	w23, w8, #0x1
   22e28:	mov	w8, #0xc9ff                	// #51711
   22e2c:	str	x9, [sp, #64]
   22e30:	add	w9, w19, #0x2
   22e34:	movk	w8, #0x3b9a, lsl #16
   22e38:	mov	w22, w0
   22e3c:	stur	w9, [x29, #-104]
   22e40:	mov	w21, #0x3                   	// #3
   22e44:	stur	x8, [x29, #-32]
   22e48:	mov	x10, x25
   22e4c:	mov	x11, x27
   22e50:	cmp	w22, w26
   22e54:	mov	w8, w22
   22e58:	b.cs	22e9c <ZSTD_endStream@@Base+0x14f48>  // b.hs, b.nlast
   22e5c:	add	x19, x10, x8
   22e60:	mov	x0, x19
   22e64:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22e68:	mov	w28, w0
   22e6c:	ldur	x0, [x29, #-24]
   22e70:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   22e74:	cmp	w28, w0
   22e78:	b.ne	22ef0 <ZSTD_endStream@@Base+0x14f9c>  // b.any
   22e7c:	ldur	x28, [x29, #-16]
   22e80:	ldp	x0, x3, [sp, #64]
   22e84:	ldr	x4, [sp, #80]
   22e88:	add	x1, x19, #0x4
   22e8c:	mov	x2, x28
   22e90:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   22e94:	add	x0, x0, #0x4
   22e98:	b	22ef8 <ZSTD_endStream@@Base+0x14fa4>
   22e9c:	ldur	x0, [x29, #-24]
   22ea0:	add	x1, x11, x8
   22ea4:	ldrb	w8, [x1, x21]
   22ea8:	ldrb	w9, [x0, x21]
   22eac:	cmp	w8, w9
   22eb0:	b.ne	22f3c <ZSTD_endStream@@Base+0x14fe8>  // b.any
   22eb4:	mov	x2, x28
   22eb8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   22ebc:	mov	x11, x27
   22ec0:	mov	x10, x25
   22ec4:	cmp	x0, x21
   22ec8:	b.hi	22f08 <ZSTD_endStream@@Base+0x14fb4>  // b.pmore
   22ecc:	cmp	w22, w20
   22ed0:	b.ls	22f30 <ZSTD_endStream@@Base+0x14fdc>  // b.plast
   22ed4:	ldr	w8, [sp, #128]
   22ed8:	ldur	x9, [x29, #-120]
   22edc:	and	w8, w22, w8
   22ee0:	ldr	w22, [x9, w8, uxtw #2]
   22ee4:	mov	w8, #0x1                   	// #1
   22ee8:	tbnz	w8, #0, 22f58 <ZSTD_endStream@@Base+0x15004>
   22eec:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   22ef0:	ldur	x28, [x29, #-16]
   22ef4:	mov	x0, xzr
   22ef8:	mov	x10, x25
   22efc:	mov	x11, x27
   22f00:	cmp	x0, x21
   22f04:	b.ls	22ecc <ZSTD_endStream@@Base+0x14f78>  // b.plast
   22f08:	ldur	x8, [x29, #-24]
   22f0c:	add	x8, x8, x0
   22f10:	cmp	x8, x28
   22f14:	ldur	w8, [x29, #-104]
   22f18:	sub	w8, w8, w22
   22f1c:	stur	x8, [x29, #-32]
   22f20:	b.eq	22f4c <ZSTD_endStream@@Base+0x14ff8>  // b.none
   22f24:	mov	x21, x0
   22f28:	cmp	w22, w20
   22f2c:	b.hi	22ed4 <ZSTD_endStream@@Base+0x14f80>  // b.pmore
   22f30:	mov	w8, wzr
   22f34:	tbnz	w8, #0, 22f58 <ZSTD_endStream@@Base+0x15004>
   22f38:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   22f3c:	mov	x0, xzr
   22f40:	cmp	x0, x21
   22f44:	b.ls	22ecc <ZSTD_endStream@@Base+0x14f78>  // b.plast
   22f48:	b	22f08 <ZSTD_endStream@@Base+0x14fb4>
   22f4c:	mov	w8, wzr
   22f50:	mov	x21, x0
   22f54:	tbz	w8, #0, 23338 <ZSTD_endStream@@Base+0x153e4>
   22f58:	subs	w23, w23, #0x1
   22f5c:	cset	w8, cs  // cs = hs, nlast
   22f60:	cmp	w22, w24
   22f64:	b.ls	23338 <ZSTD_endStream@@Base+0x153e4>  // b.plast
   22f68:	cbnz	w8, 22e50 <ZSTD_endStream@@Base+0x14efc>
   22f6c:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   22f70:	cmp	w8, #0x5
   22f74:	b.ne	2315c <ZSTD_endStream@@Base+0x15208>  // b.any
   22f78:	ldr	x8, [x24, #64]
   22f7c:	mov	x0, x24
   22f80:	ldr	x1, [sp, #96]
   22f84:	ldr	w20, [x0, #196]
   22f88:	str	x8, [sp, #128]
   22f8c:	ldp	x23, x25, [x24, #8]
   22f90:	ldp	w9, w8, [x24, #184]
   22f94:	ldp	w10, w11, [x0, #28]
   22f98:	ldr	w24, [x24, #24]
   22f9c:	sub	w19, w27, w23
   22fa0:	lsl	w9, w21, w9
   22fa4:	sub	w12, w19, w10
   22fa8:	cmp	w12, w9
   22fac:	lsl	w21, w21, w8
   22fb0:	sub	w8, w19, w9
   22fb4:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   22fb8:	csel	w26, w8, w10, eq  // eq = none
   22fbc:	subs	w8, w19, w21
   22fc0:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   22fc4:	mov	w3, #0x5                   	// #5
   22fc8:	mov	x2, x27
   22fcc:	stur	w8, [x29, #-104]
   22fd0:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   22fd4:	cmp	w0, w26
   22fd8:	b.ls	233b0 <ZSTD_endStream@@Base+0x1545c>  // b.plast
   22fdc:	sub	w8, w21, #0x1
   22fe0:	str	w8, [sp, #80]
   22fe4:	add	x8, x23, x24
   22fe8:	ldur	x9, [x29, #-40]
   22fec:	str	x8, [sp, #72]
   22ff0:	add	x8, x25, x24
   22ff4:	str	x8, [sp, #64]
   22ff8:	mov	w8, #0x1                   	// #1
   22ffc:	lsl	w8, w8, w20
   23000:	add	x9, x9, #0x5
   23004:	sub	w20, w8, #0x1
   23008:	mov	w8, #0xc9ff                	// #51711
   2300c:	str	x9, [sp, #24]
   23010:	add	w9, w19, #0x2
   23014:	movk	w8, #0x3b9a, lsl #16
   23018:	mov	w22, w0
   2301c:	stur	w9, [x29, #-120]
   23020:	mov	w21, #0x3                   	// #3
   23024:	stur	x8, [x29, #-32]
   23028:	mov	x10, x25
   2302c:	mov	x11, x23
   23030:	cmp	w22, w24
   23034:	mov	w8, w22
   23038:	b.cs	23080 <ZSTD_endStream@@Base+0x1512c>  // b.hs, b.nlast
   2303c:	add	x19, x10, x8
   23040:	mov	x0, x19
   23044:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23048:	ldur	x27, [x29, #-24]
   2304c:	mov	w28, w0
   23050:	mov	x0, x27
   23054:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23058:	cmp	w28, w0
   2305c:	b.ne	230b8 <ZSTD_endStream@@Base+0x15164>  // b.any
   23060:	ldur	x28, [x29, #-16]
   23064:	ldr	x0, [sp, #24]
   23068:	ldp	x3, x4, [sp, #64]
   2306c:	add	x1, x19, #0x4
   23070:	mov	x2, x28
   23074:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   23078:	add	x0, x0, #0x4
   2307c:	b	230c0 <ZSTD_endStream@@Base+0x1516c>
   23080:	ldur	x27, [x29, #-24]
   23084:	add	x1, x11, x8
   23088:	ldrb	w8, [x1, x21]
   2308c:	ldrb	w9, [x27, x21]
   23090:	cmp	w8, w9
   23094:	b.ne	230d4 <ZSTD_endStream@@Base+0x15180>  // b.any
   23098:	mov	x0, x27
   2309c:	mov	x2, x28
   230a0:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   230a4:	mov	x11, x23
   230a8:	mov	x10, x25
   230ac:	cmp	x0, x21
   230b0:	b.hi	230e0 <ZSTD_endStream@@Base+0x1518c>  // b.pmore
   230b4:	b	230fc <ZSTD_endStream@@Base+0x151a8>
   230b8:	ldur	x28, [x29, #-16]
   230bc:	mov	x0, xzr
   230c0:	mov	x10, x25
   230c4:	mov	x11, x23
   230c8:	cmp	x0, x21
   230cc:	b.hi	230e0 <ZSTD_endStream@@Base+0x1518c>  // b.pmore
   230d0:	b	230fc <ZSTD_endStream@@Base+0x151a8>
   230d4:	mov	x0, xzr
   230d8:	cmp	x0, x21
   230dc:	b.ls	230fc <ZSTD_endStream@@Base+0x151a8>  // b.plast
   230e0:	add	x8, x27, x0
   230e4:	cmp	x8, x28
   230e8:	ldur	w8, [x29, #-120]
   230ec:	sub	w8, w8, w22
   230f0:	stur	x8, [x29, #-32]
   230f4:	b.eq	23130 <ZSTD_endStream@@Base+0x151dc>  // b.none
   230f8:	mov	x21, x0
   230fc:	ldur	w8, [x29, #-104]
   23100:	cmp	w22, w8
   23104:	b.ls	23124 <ZSTD_endStream@@Base+0x151d0>  // b.plast
   23108:	ldr	w8, [sp, #80]
   2310c:	ldr	x9, [sp, #128]
   23110:	and	w8, w22, w8
   23114:	ldr	w22, [x9, w8, uxtw #2]
   23118:	mov	w8, #0x1                   	// #1
   2311c:	tbnz	w8, #0, 2313c <ZSTD_endStream@@Base+0x151e8>
   23120:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   23124:	mov	w8, wzr
   23128:	tbnz	wzr, #0, 2313c <ZSTD_endStream@@Base+0x151e8>
   2312c:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   23130:	mov	x21, x0
   23134:	mov	w8, wzr
   23138:	tbz	wzr, #0, 23338 <ZSTD_endStream@@Base+0x153e4>
   2313c:	subs	w20, w20, #0x1
   23140:	cset	w8, cs  // cs = hs, nlast
   23144:	cmp	w22, w26
   23148:	b.ls	23338 <ZSTD_endStream@@Base+0x153e4>  // b.plast
   2314c:	cbnz	w8, 23030 <ZSTD_endStream@@Base+0x150dc>
   23150:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   23154:	ldur	x28, [x29, #-16]
   23158:	b	233b0 <ZSTD_endStream@@Base+0x1545c>
   2315c:	ldr	x8, [x24, #64]
   23160:	ldr	w11, [x24, #32]
   23164:	ldr	x1, [sp, #96]
   23168:	mov	x0, x24
   2316c:	str	x8, [sp, #128]
   23170:	ldp	x20, x25, [x24, #8]
   23174:	ldp	w9, w8, [x24, #184]
   23178:	ldp	w26, w10, [x24, #24]
   2317c:	mov	w3, #0x4                   	// #4
   23180:	sub	w19, w27, w20
   23184:	lsl	w9, w21, w9
   23188:	sub	w12, w19, w10
   2318c:	cmp	w12, w9
   23190:	mov	w12, #0x1                   	// #1
   23194:	ldr	w21, [x24, #196]
   23198:	lsl	w23, w12, w8
   2319c:	sub	w8, w19, w9
   231a0:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   231a4:	csel	w24, w8, w10, eq  // eq = none
   231a8:	subs	w8, w19, w23
   231ac:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   231b0:	mov	x2, x27
   231b4:	stur	w8, [x29, #-104]
   231b8:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   231bc:	cmp	w0, w24
   231c0:	b.ls	233b0 <ZSTD_endStream@@Base+0x1545c>  // b.plast
   231c4:	sub	w8, w23, #0x1
   231c8:	str	w8, [sp, #80]
   231cc:	add	x8, x20, x26
   231d0:	ldur	x9, [x29, #-40]
   231d4:	str	x8, [sp, #72]
   231d8:	add	x8, x25, x26
   231dc:	str	x8, [sp, #64]
   231e0:	mov	w8, #0x1                   	// #1
   231e4:	lsl	w8, w8, w21
   231e8:	add	x9, x9, #0x5
   231ec:	sub	w23, w8, #0x1
   231f0:	mov	w8, #0xc9ff                	// #51711
   231f4:	str	x9, [sp, #24]
   231f8:	add	w9, w19, #0x2
   231fc:	movk	w8, #0x3b9a, lsl #16
   23200:	mov	w22, w0
   23204:	stur	w9, [x29, #-120]
   23208:	mov	w21, #0x3                   	// #3
   2320c:	stur	x8, [x29, #-32]
   23210:	mov	x10, x25
   23214:	mov	x11, x20
   23218:	cmp	w22, w26
   2321c:	mov	w8, w22
   23220:	b.cs	23268 <ZSTD_endStream@@Base+0x15314>  // b.hs, b.nlast
   23224:	add	x19, x10, x8
   23228:	mov	x0, x19
   2322c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23230:	ldur	x27, [x29, #-24]
   23234:	mov	w28, w0
   23238:	mov	x0, x27
   2323c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23240:	cmp	w28, w0
   23244:	b.ne	232a0 <ZSTD_endStream@@Base+0x1534c>  // b.any
   23248:	ldur	x28, [x29, #-16]
   2324c:	ldr	x0, [sp, #24]
   23250:	ldp	x3, x4, [sp, #64]
   23254:	add	x1, x19, #0x4
   23258:	mov	x2, x28
   2325c:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   23260:	add	x0, x0, #0x4
   23264:	b	232a8 <ZSTD_endStream@@Base+0x15354>
   23268:	ldur	x27, [x29, #-24]
   2326c:	add	x1, x11, x8
   23270:	ldrb	w8, [x1, x21]
   23274:	ldrb	w9, [x27, x21]
   23278:	cmp	w8, w9
   2327c:	b.ne	232bc <ZSTD_endStream@@Base+0x15368>  // b.any
   23280:	mov	x0, x27
   23284:	mov	x2, x28
   23288:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   2328c:	mov	x11, x20
   23290:	mov	x10, x25
   23294:	cmp	x0, x21
   23298:	b.hi	232c8 <ZSTD_endStream@@Base+0x15374>  // b.pmore
   2329c:	b	232e4 <ZSTD_endStream@@Base+0x15390>
   232a0:	ldur	x28, [x29, #-16]
   232a4:	mov	x0, xzr
   232a8:	mov	x10, x25
   232ac:	mov	x11, x20
   232b0:	cmp	x0, x21
   232b4:	b.hi	232c8 <ZSTD_endStream@@Base+0x15374>  // b.pmore
   232b8:	b	232e4 <ZSTD_endStream@@Base+0x15390>
   232bc:	mov	x0, xzr
   232c0:	cmp	x0, x21
   232c4:	b.ls	232e4 <ZSTD_endStream@@Base+0x15390>  // b.plast
   232c8:	add	x8, x27, x0
   232cc:	cmp	x8, x28
   232d0:	ldur	w8, [x29, #-120]
   232d4:	sub	w8, w8, w22
   232d8:	stur	x8, [x29, #-32]
   232dc:	b.eq	23318 <ZSTD_endStream@@Base+0x153c4>  // b.none
   232e0:	mov	x21, x0
   232e4:	ldur	w8, [x29, #-104]
   232e8:	cmp	w22, w8
   232ec:	b.ls	2330c <ZSTD_endStream@@Base+0x153b8>  // b.plast
   232f0:	ldr	w8, [sp, #80]
   232f4:	ldr	x9, [sp, #128]
   232f8:	and	w8, w22, w8
   232fc:	ldr	w22, [x9, w8, uxtw #2]
   23300:	mov	w8, #0x1                   	// #1
   23304:	tbnz	w8, #0, 23324 <ZSTD_endStream@@Base+0x153d0>
   23308:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   2330c:	mov	w8, wzr
   23310:	tbnz	wzr, #0, 23324 <ZSTD_endStream@@Base+0x153d0>
   23314:	b	23338 <ZSTD_endStream@@Base+0x153e4>
   23318:	mov	x21, x0
   2331c:	mov	w8, wzr
   23320:	tbz	wzr, #0, 23338 <ZSTD_endStream@@Base+0x153e4>
   23324:	subs	w23, w23, #0x1
   23328:	cset	w8, cs  // cs = hs, nlast
   2332c:	cmp	w22, w24
   23330:	b.ls	23338 <ZSTD_endStream@@Base+0x153e4>  // b.plast
   23334:	cbnz	w8, 23218 <ZSTD_endStream@@Base+0x152c4>
   23338:	cmp	x21, #0x4
   2333c:	b.cc	233c8 <ZSTD_endStream@@Base+0x15474>  // b.lo, b.ul, b.last
   23340:	ldur	x25, [x29, #-56]
   23344:	add	w0, w25, #0x1
   23348:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   2334c:	ldur	x20, [x29, #-32]
   23350:	mov	w19, w0
   23354:	add	w0, w20, #0x1
   23358:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   2335c:	ldur	x10, [x29, #-48]
   23360:	lsl	w9, w21, #2
   23364:	sub	w9, w9, w0
   23368:	ldur	x27, [x29, #-24]
   2336c:	lsl	w8, w10, #2
   23370:	sub	w8, w8, w19
   23374:	add	w8, w8, #0x4
   23378:	cmp	w9, w8
   2337c:	ldur	x9, [x29, #-112]
   23380:	csel	x25, x20, x25, gt
   23384:	ldr	x24, [sp, #104]
   23388:	ldur	w23, [x29, #-76]
   2338c:	csel	x9, x27, x9, gt
   23390:	stur	x9, [x29, #-112]
   23394:	ldur	w20, [x29, #-132]
   23398:	ldur	x9, [x29, #-40]
   2339c:	cset	w8, le
   233a0:	csel	x10, x21, x10, gt
   233a4:	stur	x10, [x29, #-48]
   233a8:	tbnz	w8, #0, 233e8 <ZSTD_endStream@@Base+0x15494>
   233ac:	b	22c8c <ZSTD_endStream@@Base+0x14d38>
   233b0:	mov	w8, #0xc9ff                	// #51711
   233b4:	movk	w8, #0x3b9a, lsl #16
   233b8:	stur	x8, [x29, #-32]
   233bc:	mov	w21, #0x3                   	// #3
   233c0:	cmp	x21, #0x4
   233c4:	b.cs	23340 <ZSTD_endStream@@Base+0x153ec>  // b.hs, b.nlast
   233c8:	ldr	x24, [sp, #104]
   233cc:	ldur	w23, [x29, #-76]
   233d0:	ldur	w20, [x29, #-132]
   233d4:	ldur	x9, [x29, #-40]
   233d8:	ldur	x25, [x29, #-56]
   233dc:	ldur	x27, [x29, #-24]
   233e0:	mov	w8, #0x1                   	// #1
   233e4:	tbz	w8, #0, 22c8c <ZSTD_endStream@@Base+0x14d38>
   233e8:	ldr	x8, [sp, #120]
   233ec:	cmp	x27, x8
   233f0:	b.cs	23b08 <ZSTD_endStream@@Base+0x15bb4>  // b.hs, b.nlast
   233f4:	ldr	w8, [sp, #112]
   233f8:	add	x27, x9, #0x2
   233fc:	add	w8, w8, #0x2
   23400:	stur	w8, [x29, #-88]
   23404:	cbz	x25, 234c4 <ZSTD_endStream@@Base+0x15570>
   23408:	sub	w20, w8, w23
   2340c:	ldr	x8, [sp, #88]
   23410:	ldur	x9, [x29, #-64]
   23414:	cmp	w20, w8
   23418:	ldr	x8, [sp, #48]
   2341c:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   23420:	ldur	x9, [x29, #-72]
   23424:	cmp	w20, w9
   23428:	b.ls	234c4 <ZSTD_endStream@@Base+0x15570>  // b.plast
   2342c:	ldur	w9, [x29, #-92]
   23430:	sub	w9, w9, w20
   23434:	cmp	w9, #0x3
   23438:	b.cc	234c4 <ZSTD_endStream@@Base+0x15570>  // b.lo, b.ul, b.last
   2343c:	mov	x0, x27
   23440:	add	x22, x8, x20
   23444:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23448:	mov	w19, w0
   2344c:	mov	x0, x22
   23450:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23454:	cmp	w19, w0
   23458:	b.ne	234c4 <ZSTD_endStream@@Base+0x15570>  // b.any
   2345c:	ldr	x8, [sp, #88]
   23460:	add	x1, x22, #0x4
   23464:	mov	x2, x28
   23468:	cmp	w20, w8
   2346c:	ldur	x8, [x29, #-40]
   23470:	add	x0, x8, #0x6
   23474:	ldp	x8, x4, [sp, #32]
   23478:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   2347c:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   23480:	cmn	x0, #0x5
   23484:	b.hi	234c4 <ZSTD_endStream@@Base+0x15570>  // b.pmore
   23488:	add	x19, x0, #0x4
   2348c:	add	w0, w25, #0x1
   23490:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   23494:	ldur	x10, [x29, #-48]
   23498:	mov	w8, #0x1                   	// #1
   2349c:	lsl	w9, w19, #2
   234a0:	bfi	w8, w10, #2, #30
   234a4:	sub	w8, w8, w0
   234a8:	cmp	w9, w8
   234ac:	ldur	x8, [x29, #-112]
   234b0:	csel	x25, xzr, x25, gt
   234b4:	csel	x10, x19, x10, gt
   234b8:	stur	x10, [x29, #-48]
   234bc:	csel	x8, x27, x8, gt
   234c0:	stur	x8, [x29, #-112]
   234c4:	ldr	w8, [x24, #200]
   234c8:	stur	x25, [x29, #-56]
   234cc:	sub	w9, w8, #0x6
   234d0:	cmp	w9, #0x2
   234d4:	b.cs	236d8 <ZSTD_endStream@@Base+0x15784>  // b.hs, b.nlast
   234d8:	ldr	x8, [x24, #64]
   234dc:	mov	x0, x24
   234e0:	ldr	x24, [x24, #8]
   234e4:	ldr	w11, [x0, #32]
   234e8:	stur	x8, [x29, #-32]
   234ec:	ldr	x8, [x0, #16]
   234f0:	sub	w19, w27, w24
   234f4:	mov	w26, #0x1                   	// #1
   234f8:	ldr	x1, [sp, #96]
   234fc:	stur	x8, [x29, #-104]
   23500:	ldp	w9, w8, [x0, #184]
   23504:	ldp	w23, w10, [x0, #24]
   23508:	ldr	w21, [x0, #196]
   2350c:	mov	w3, #0x6                   	// #6
   23510:	lsl	w9, w26, w9
   23514:	sub	w12, w19, w10
   23518:	cmp	w12, w9
   2351c:	lsl	w25, w26, w8
   23520:	sub	w8, w19, w9
   23524:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   23528:	csel	w28, w8, w10, eq  // eq = none
   2352c:	subs	w8, w19, w25
   23530:	mov	x2, x27
   23534:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   23538:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   2353c:	cmp	w0, w28
   23540:	b.ls	23a88 <ZSTD_endStream@@Base+0x15b34>  // b.plast
   23544:	ldur	x10, [x29, #-104]
   23548:	ldur	x9, [x29, #-40]
   2354c:	sub	w8, w25, #0x1
   23550:	str	w8, [sp, #128]
   23554:	add	x8, x24, x23
   23558:	str	x8, [sp, #112]
   2355c:	add	x8, x10, x23
   23560:	add	x9, x9, #0x6
   23564:	str	x8, [sp, #80]
   23568:	lsl	w8, w26, w21
   2356c:	str	x9, [sp, #72]
   23570:	add	w9, w19, #0x2
   23574:	ldur	x19, [x29, #-32]
   23578:	sub	w25, w8, #0x1
   2357c:	mov	w8, #0xc9ff                	// #51711
   23580:	movk	w8, #0x3b9a, lsl #16
   23584:	mov	w22, w0
   23588:	stur	w9, [x29, #-40]
   2358c:	mov	w21, #0x3                   	// #3
   23590:	stur	x8, [x29, #-24]
   23594:	stur	w28, [x29, #-120]
   23598:	cmp	w22, w23
   2359c:	mov	w8, w22
   235a0:	b.cs	235f8 <ZSTD_endStream@@Base+0x156a4>  // b.hs, b.nlast
   235a4:	mov	x28, x23
   235a8:	mov	w23, w20
   235ac:	mov	x20, x24
   235b0:	mov	x24, x19
   235b4:	add	x19, x10, x8
   235b8:	mov	x0, x19
   235bc:	stur	x21, [x29, #-32]
   235c0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   235c4:	mov	w26, w0
   235c8:	mov	x0, x27
   235cc:	mov	x21, x27
   235d0:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   235d4:	cmp	w26, w0
   235d8:	b.ne	23644 <ZSTD_endStream@@Base+0x156f0>  // b.any
   235dc:	ldp	x0, x3, [sp, #72]
   235e0:	ldur	x2, [x29, #-16]
   235e4:	ldr	x4, [sp, #112]
   235e8:	add	x1, x19, #0x4
   235ec:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   235f0:	add	x0, x0, #0x4
   235f4:	b	23648 <ZSTD_endStream@@Base+0x156f4>
   235f8:	add	x1, x24, x8
   235fc:	ldrb	w8, [x1, x21]
   23600:	ldrb	w9, [x27, x21]
   23604:	cmp	w8, w9
   23608:	b.ne	236a4 <ZSTD_endStream@@Base+0x15750>  // b.any
   2360c:	ldur	x2, [x29, #-16]
   23610:	mov	x0, x27
   23614:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   23618:	ldur	x10, [x29, #-104]
   2361c:	cmp	x0, x21
   23620:	b.hi	23670 <ZSTD_endStream@@Base+0x1571c>  // b.pmore
   23624:	cmp	w22, w20
   23628:	b.ls	23698 <ZSTD_endStream@@Base+0x15744>  // b.plast
   2362c:	ldr	w8, [sp, #128]
   23630:	and	w8, w22, w8
   23634:	ldr	w22, [x19, w8, uxtw #2]
   23638:	mov	w8, #0x1                   	// #1
   2363c:	tbnz	w8, #0, 236c0 <ZSTD_endStream@@Base+0x1576c>
   23640:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   23644:	mov	x0, xzr
   23648:	mov	x19, x24
   2364c:	mov	x24, x20
   23650:	ldur	x10, [x29, #-104]
   23654:	mov	w20, w23
   23658:	mov	x23, x28
   2365c:	ldur	w28, [x29, #-120]
   23660:	mov	x27, x21
   23664:	ldur	x21, [x29, #-32]
   23668:	cmp	x0, x21
   2366c:	b.ls	23624 <ZSTD_endStream@@Base+0x156d0>  // b.plast
   23670:	ldur	x9, [x29, #-16]
   23674:	add	x8, x27, x0
   23678:	cmp	x8, x9
   2367c:	ldur	w8, [x29, #-40]
   23680:	sub	w8, w8, w22
   23684:	stur	x8, [x29, #-24]
   23688:	b.eq	236b4 <ZSTD_endStream@@Base+0x15760>  // b.none
   2368c:	mov	x21, x0
   23690:	cmp	w22, w20
   23694:	b.hi	2362c <ZSTD_endStream@@Base+0x156d8>  // b.pmore
   23698:	mov	w8, wzr
   2369c:	tbnz	w8, #0, 236c0 <ZSTD_endStream@@Base+0x1576c>
   236a0:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   236a4:	mov	x0, xzr
   236a8:	cmp	x0, x21
   236ac:	b.ls	23624 <ZSTD_endStream@@Base+0x156d0>  // b.plast
   236b0:	b	23670 <ZSTD_endStream@@Base+0x1571c>
   236b4:	mov	w8, wzr
   236b8:	mov	x21, x0
   236bc:	tbz	w8, #0, 23a98 <ZSTD_endStream@@Base+0x15b44>
   236c0:	subs	w25, w25, #0x1
   236c4:	cset	w8, cs  // cs = hs, nlast
   236c8:	cmp	w22, w28
   236cc:	b.ls	23a98 <ZSTD_endStream@@Base+0x15b44>  // b.plast
   236d0:	cbnz	w8, 23598 <ZSTD_endStream@@Base+0x15644>
   236d4:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   236d8:	cmp	w8, #0x5
   236dc:	b.ne	238b4 <ZSTD_endStream@@Base+0x15960>  // b.any
   236e0:	ldr	x8, [x24, #64]
   236e4:	mov	x0, x24
   236e8:	ldr	w11, [x0, #32]
   236ec:	mov	w26, #0x1                   	// #1
   236f0:	stur	x8, [x29, #-104]
   236f4:	ldp	x25, x24, [x24, #8]
   236f8:	ldp	w9, w8, [x0, #184]
   236fc:	ldp	w23, w10, [x0, #24]
   23700:	ldr	x1, [sp, #96]
   23704:	sub	w19, w27, w25
   23708:	lsl	w9, w26, w9
   2370c:	sub	w12, w19, w10
   23710:	cmp	w12, w9
   23714:	ldr	w20, [x0, #196]
   23718:	lsl	w21, w26, w8
   2371c:	sub	w8, w19, w9
   23720:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   23724:	csel	w28, w8, w10, eq  // eq = none
   23728:	subs	w8, w19, w21
   2372c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   23730:	mov	w3, #0x5                   	// #5
   23734:	mov	x2, x27
   23738:	stur	w8, [x29, #-32]
   2373c:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   23740:	cmp	w0, w28
   23744:	b.ls	23a88 <ZSTD_endStream@@Base+0x15b34>  // b.plast
   23748:	sub	w8, w21, #0x1
   2374c:	ldur	x9, [x29, #-40]
   23750:	stur	w8, [x29, #-120]
   23754:	add	x8, x25, x23
   23758:	str	x8, [sp, #128]
   2375c:	add	x8, x24, x23
   23760:	str	x8, [sp, #112]
   23764:	lsl	w8, w26, w20
   23768:	add	x9, x9, #0x6
   2376c:	sub	w20, w8, #0x1
   23770:	mov	w8, #0xc9ff                	// #51711
   23774:	str	x9, [sp, #80]
   23778:	add	w9, w19, #0x2
   2377c:	movk	w8, #0x3b9a, lsl #16
   23780:	mov	w22, w0
   23784:	stur	w9, [x29, #-40]
   23788:	mov	w21, #0x3                   	// #3
   2378c:	stur	x8, [x29, #-24]
   23790:	mov	x10, x24
   23794:	mov	x11, x25
   23798:	cmp	w22, w23
   2379c:	mov	w8, w22
   237a0:	b.cs	237e4 <ZSTD_endStream@@Base+0x15890>  // b.hs, b.nlast
   237a4:	add	x19, x10, x8
   237a8:	mov	x0, x19
   237ac:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   237b0:	mov	w26, w0
   237b4:	mov	x0, x27
   237b8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   237bc:	cmp	w26, w0
   237c0:	b.ne	23818 <ZSTD_endStream@@Base+0x158c4>  // b.any
   237c4:	ldr	x0, [sp, #80]
   237c8:	ldur	x2, [x29, #-16]
   237cc:	ldr	x3, [sp, #112]
   237d0:	ldr	x4, [sp, #128]
   237d4:	add	x1, x19, #0x4
   237d8:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   237dc:	add	x0, x0, #0x4
   237e0:	b	2381c <ZSTD_endStream@@Base+0x158c8>
   237e4:	add	x1, x11, x8
   237e8:	ldrb	w8, [x1, x21]
   237ec:	ldrb	w9, [x27, x21]
   237f0:	cmp	w8, w9
   237f4:	b.ne	23830 <ZSTD_endStream@@Base+0x158dc>  // b.any
   237f8:	ldur	x2, [x29, #-16]
   237fc:	mov	x0, x27
   23800:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   23804:	mov	x11, x25
   23808:	mov	x10, x24
   2380c:	cmp	x0, x21
   23810:	b.hi	2383c <ZSTD_endStream@@Base+0x158e8>  // b.pmore
   23814:	b	2385c <ZSTD_endStream@@Base+0x15908>
   23818:	mov	x0, xzr
   2381c:	mov	x10, x24
   23820:	mov	x11, x25
   23824:	cmp	x0, x21
   23828:	b.hi	2383c <ZSTD_endStream@@Base+0x158e8>  // b.pmore
   2382c:	b	2385c <ZSTD_endStream@@Base+0x15908>
   23830:	mov	x0, xzr
   23834:	cmp	x0, x21
   23838:	b.ls	2385c <ZSTD_endStream@@Base+0x15908>  // b.plast
   2383c:	ldur	x9, [x29, #-16]
   23840:	add	x8, x27, x0
   23844:	cmp	x8, x9
   23848:	ldur	w8, [x29, #-40]
   2384c:	sub	w8, w8, w22
   23850:	stur	x8, [x29, #-24]
   23854:	b.eq	23890 <ZSTD_endStream@@Base+0x1593c>  // b.none
   23858:	mov	x21, x0
   2385c:	ldur	w8, [x29, #-32]
   23860:	cmp	w22, w8
   23864:	b.ls	23884 <ZSTD_endStream@@Base+0x15930>  // b.plast
   23868:	ldur	w8, [x29, #-120]
   2386c:	ldur	x9, [x29, #-104]
   23870:	and	w8, w22, w8
   23874:	ldr	w22, [x9, w8, uxtw #2]
   23878:	mov	w8, #0x1                   	// #1
   2387c:	tbnz	w8, #0, 2389c <ZSTD_endStream@@Base+0x15948>
   23880:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   23884:	mov	w8, wzr
   23888:	tbnz	wzr, #0, 2389c <ZSTD_endStream@@Base+0x15948>
   2388c:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   23890:	mov	x21, x0
   23894:	mov	w8, wzr
   23898:	tbz	wzr, #0, 23a98 <ZSTD_endStream@@Base+0x15b44>
   2389c:	subs	w20, w20, #0x1
   238a0:	cset	w8, cs  // cs = hs, nlast
   238a4:	cmp	w22, w28
   238a8:	b.ls	23a98 <ZSTD_endStream@@Base+0x15b44>  // b.plast
   238ac:	cbnz	w8, 23798 <ZSTD_endStream@@Base+0x15844>
   238b0:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   238b4:	ldr	x8, [x24, #64]
   238b8:	mov	x0, x24
   238bc:	ldr	w11, [x0, #32]
   238c0:	mov	w26, #0x1                   	// #1
   238c4:	stur	x8, [x29, #-104]
   238c8:	ldp	x20, x24, [x24, #8]
   238cc:	ldp	w9, w8, [x0, #184]
   238d0:	ldp	w23, w10, [x0, #24]
   238d4:	ldr	x1, [sp, #96]
   238d8:	sub	w19, w27, w20
   238dc:	lsl	w9, w26, w9
   238e0:	sub	w12, w19, w10
   238e4:	cmp	w12, w9
   238e8:	ldr	w21, [x0, #196]
   238ec:	lsl	w25, w26, w8
   238f0:	sub	w8, w19, w9
   238f4:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   238f8:	csel	w28, w8, w10, eq  // eq = none
   238fc:	subs	w8, w19, w25
   23900:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   23904:	mov	w3, #0x4                   	// #4
   23908:	mov	x2, x27
   2390c:	stur	w8, [x29, #-32]
   23910:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   23914:	cmp	w0, w28
   23918:	b.ls	23a88 <ZSTD_endStream@@Base+0x15b34>  // b.plast
   2391c:	sub	w8, w25, #0x1
   23920:	ldur	x9, [x29, #-40]
   23924:	stur	w8, [x29, #-120]
   23928:	add	x8, x20, x23
   2392c:	str	x8, [sp, #128]
   23930:	add	x8, x24, x23
   23934:	str	x8, [sp, #112]
   23938:	lsl	w8, w26, w21
   2393c:	add	x9, x9, #0x6
   23940:	sub	w25, w8, #0x1
   23944:	mov	w8, #0xc9ff                	// #51711
   23948:	str	x9, [sp, #80]
   2394c:	add	w9, w19, #0x2
   23950:	movk	w8, #0x3b9a, lsl #16
   23954:	mov	w22, w0
   23958:	stur	w9, [x29, #-40]
   2395c:	mov	w21, #0x3                   	// #3
   23960:	stur	x8, [x29, #-24]
   23964:	mov	x10, x24
   23968:	mov	x11, x20
   2396c:	cmp	w22, w23
   23970:	mov	w8, w22
   23974:	b.cs	239b8 <ZSTD_endStream@@Base+0x15a64>  // b.hs, b.nlast
   23978:	add	x19, x10, x8
   2397c:	mov	x0, x19
   23980:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23984:	mov	w26, w0
   23988:	mov	x0, x27
   2398c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23990:	cmp	w26, w0
   23994:	b.ne	239ec <ZSTD_endStream@@Base+0x15a98>  // b.any
   23998:	ldr	x0, [sp, #80]
   2399c:	ldur	x2, [x29, #-16]
   239a0:	ldr	x3, [sp, #112]
   239a4:	ldr	x4, [sp, #128]
   239a8:	add	x1, x19, #0x4
   239ac:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   239b0:	add	x0, x0, #0x4
   239b4:	b	239f0 <ZSTD_endStream@@Base+0x15a9c>
   239b8:	add	x1, x11, x8
   239bc:	ldrb	w8, [x1, x21]
   239c0:	ldrb	w9, [x27, x21]
   239c4:	cmp	w8, w9
   239c8:	b.ne	23a04 <ZSTD_endStream@@Base+0x15ab0>  // b.any
   239cc:	ldur	x2, [x29, #-16]
   239d0:	mov	x0, x27
   239d4:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   239d8:	mov	x11, x20
   239dc:	mov	x10, x24
   239e0:	cmp	x0, x21
   239e4:	b.hi	23a10 <ZSTD_endStream@@Base+0x15abc>  // b.pmore
   239e8:	b	23a30 <ZSTD_endStream@@Base+0x15adc>
   239ec:	mov	x0, xzr
   239f0:	mov	x10, x24
   239f4:	mov	x11, x20
   239f8:	cmp	x0, x21
   239fc:	b.hi	23a10 <ZSTD_endStream@@Base+0x15abc>  // b.pmore
   23a00:	b	23a30 <ZSTD_endStream@@Base+0x15adc>
   23a04:	mov	x0, xzr
   23a08:	cmp	x0, x21
   23a0c:	b.ls	23a30 <ZSTD_endStream@@Base+0x15adc>  // b.plast
   23a10:	ldur	x9, [x29, #-16]
   23a14:	add	x8, x27, x0
   23a18:	cmp	x8, x9
   23a1c:	ldur	w8, [x29, #-40]
   23a20:	sub	w8, w8, w22
   23a24:	stur	x8, [x29, #-24]
   23a28:	b.eq	23a64 <ZSTD_endStream@@Base+0x15b10>  // b.none
   23a2c:	mov	x21, x0
   23a30:	ldur	w8, [x29, #-32]
   23a34:	cmp	w22, w8
   23a38:	b.ls	23a58 <ZSTD_endStream@@Base+0x15b04>  // b.plast
   23a3c:	ldur	w8, [x29, #-120]
   23a40:	ldur	x9, [x29, #-104]
   23a44:	and	w8, w22, w8
   23a48:	ldr	w22, [x9, w8, uxtw #2]
   23a4c:	mov	w8, #0x1                   	// #1
   23a50:	tbnz	w8, #0, 23a70 <ZSTD_endStream@@Base+0x15b1c>
   23a54:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   23a58:	mov	w8, wzr
   23a5c:	tbnz	wzr, #0, 23a70 <ZSTD_endStream@@Base+0x15b1c>
   23a60:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   23a64:	mov	x21, x0
   23a68:	mov	w8, wzr
   23a6c:	tbz	wzr, #0, 23a98 <ZSTD_endStream@@Base+0x15b44>
   23a70:	subs	w25, w25, #0x1
   23a74:	cset	w8, cs  // cs = hs, nlast
   23a78:	cmp	w22, w28
   23a7c:	b.ls	23a98 <ZSTD_endStream@@Base+0x15b44>  // b.plast
   23a80:	cbnz	w8, 2396c <ZSTD_endStream@@Base+0x15a18>
   23a84:	b	23a98 <ZSTD_endStream@@Base+0x15b44>
   23a88:	mov	w8, #0xc9ff                	// #51711
   23a8c:	movk	w8, #0x3b9a, lsl #16
   23a90:	stur	x8, [x29, #-24]
   23a94:	mov	w21, #0x3                   	// #3
   23a98:	cmp	x21, #0x4
   23a9c:	b.cc	22c70 <ZSTD_endStream@@Base+0x14d1c>  // b.lo, b.ul, b.last
   23aa0:	ldur	x25, [x29, #-56]
   23aa4:	add	w0, w25, #0x1
   23aa8:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   23aac:	ldur	x20, [x29, #-24]
   23ab0:	mov	w19, w0
   23ab4:	add	w0, w20, #0x1
   23ab8:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   23abc:	ldur	x10, [x29, #-48]
   23ac0:	lsl	w9, w21, #2
   23ac4:	sub	w9, w9, w0
   23ac8:	ldur	x28, [x29, #-16]
   23acc:	lsl	w8, w10, #2
   23ad0:	sub	w8, w8, w19
   23ad4:	add	w8, w8, #0x7
   23ad8:	cmp	w9, w8
   23adc:	ldur	x9, [x29, #-112]
   23ae0:	csel	x25, x20, x25, gt
   23ae4:	ldr	x24, [sp, #104]
   23ae8:	ldur	w23, [x29, #-76]
   23aec:	ldur	w20, [x29, #-132]
   23af0:	cset	w8, le
   23af4:	csel	x9, x27, x9, gt
   23af8:	csel	x10, x21, x10, gt
   23afc:	stur	x9, [x29, #-112]
   23b00:	stur	x10, [x29, #-48]
   23b04:	cbz	w8, 22c8c <ZSTD_endStream@@Base+0x14d38>
   23b08:	cbz	x25, 23bbc <ZSTD_endStream@@Base+0x15c68>
   23b0c:	mov	x8, x25
   23b10:	ldr	x25, [sp, #48]
   23b14:	ldur	x12, [x29, #-112]
   23b18:	stur	x8, [x29, #-56]
   23b1c:	ldr	x26, [sp, #88]
   23b20:	add	x8, x25, x8
   23b24:	sub	x8, x12, x8
   23b28:	add	x10, x8, #0x2
   23b2c:	ldur	x8, [x29, #-64]
   23b30:	cmp	w26, w10
   23b34:	ldr	x11, [sp, #8]
   23b38:	csel	x9, x8, x25, hi  // hi = pmore
   23b3c:	ldr	x8, [sp, #40]
   23b40:	csel	x8, x11, x8, hi  // hi = pmore
   23b44:	ldur	x11, [x29, #-128]
   23b48:	cmp	x12, x11
   23b4c:	b.ls	23bd0 <ZSTD_endStream@@Base+0x15c7c>  // b.plast
   23b50:	and	x10, x10, #0xffffffff
   23b54:	add	x11, x9, x10
   23b58:	cmp	x11, x8
   23b5c:	b.ls	23bd0 <ZSTD_endStream@@Base+0x15c7c>  // b.plast
   23b60:	ldr	x27, [sp, #120]
   23b64:	add	x9, x9, x10
   23b68:	sub	x9, x9, #0x1
   23b6c:	sub	x10, x12, #0x1
   23b70:	ldrb	w11, [x10]
   23b74:	ldrb	w12, [x9]
   23b78:	cmp	w11, w12
   23b7c:	b.ne	23bd8 <ZSTD_endStream@@Base+0x15c84>  // b.any
   23b80:	ldur	x11, [x29, #-48]
   23b84:	cmp	x9, x8
   23b88:	add	x11, x11, #0x1
   23b8c:	stur	x11, [x29, #-48]
   23b90:	sub	x11, x10, #0x1
   23b94:	b.ls	23bac <ZSTD_endStream@@Base+0x15c58>  // b.plast
   23b98:	ldur	x12, [x29, #-128]
   23b9c:	sub	x9, x9, #0x1
   23ba0:	cmp	x10, x12
   23ba4:	mov	x10, x11
   23ba8:	b.hi	23b70 <ZSTD_endStream@@Base+0x15c1c>  // b.pmore
   23bac:	add	x8, x11, #0x1
   23bb0:	b	23bdc <ZSTD_endStream@@Base+0x15c88>
   23bb4:	ldur	w20, [x29, #-132]
   23bb8:	cbnz	x25, 23b0c <ZSTD_endStream@@Base+0x15bb8>
   23bbc:	ldr	x25, [sp, #48]
   23bc0:	ldr	x26, [sp, #88]
   23bc4:	ldr	x27, [sp, #120]
   23bc8:	stur	xzr, [x29, #-56]
   23bcc:	b	23bf0 <ZSTD_endStream@@Base+0x15c9c>
   23bd0:	ldr	x27, [sp, #120]
   23bd4:	b	23be0 <ZSTD_endStream@@Base+0x15c8c>
   23bd8:	add	x8, x10, #0x1
   23bdc:	stur	x8, [x29, #-112]
   23be0:	ldur	x8, [x29, #-56]
   23be4:	mov	w20, w23
   23be8:	sub	w8, w8, #0x2
   23bec:	mov	w23, w8
   23bf0:	ldr	x8, [sp, #56]
   23bf4:	ldr	x3, [sp, #16]
   23bf8:	ldur	x2, [x29, #-112]
   23bfc:	ldur	x1, [x29, #-128]
   23c00:	ldr	x0, [x8, #24]
   23c04:	stur	w23, [x29, #-76]
   23c08:	cmp	x2, x3
   23c0c:	sub	x21, x2, x1
   23c10:	b.ls	23c1c <ZSTD_endStream@@Base+0x15cc8>  // b.plast
   23c14:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   23c18:	b	23c88 <ZSTD_endStream@@Base+0x15d34>
   23c1c:	mov	x28, x1
   23c20:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   23c24:	cmp	x21, #0x11
   23c28:	b.cc	23c88 <ZSTD_endStream@@Base+0x15d34>  // b.lo, b.ul, b.last
   23c2c:	ldr	x8, [sp, #56]
   23c30:	add	x1, x28, #0x10
   23c34:	ldr	x19, [x8, #24]
   23c38:	add	x0, x19, #0x10
   23c3c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   23c40:	add	x0, x19, #0x20
   23c44:	add	x1, x28, #0x20
   23c48:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   23c4c:	cmp	x21, #0x31
   23c50:	b.lt	23c88 <ZSTD_endStream@@Base+0x15d34>  // b.tstop
   23c54:	add	x23, x19, x21
   23c58:	add	x22, x19, #0x30
   23c5c:	add	x19, x28, #0x40
   23c60:	sub	x1, x19, #0x10
   23c64:	mov	x0, x22
   23c68:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   23c6c:	add	x0, x22, #0x10
   23c70:	mov	x1, x19
   23c74:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   23c78:	add	x22, x22, #0x20
   23c7c:	cmp	x22, x23
   23c80:	add	x19, x19, #0x20
   23c84:	b.cc	23c60 <ZSTD_endStream@@Base+0x15d0c>  // b.lo, b.ul, b.last
   23c88:	ldr	x12, [sp, #56]
   23c8c:	ldur	x8, [x29, #-48]
   23c90:	cmp	x21, #0x10, lsl #12
   23c94:	ldr	x9, [x12, #24]
   23c98:	sub	x8, x8, #0x3
   23c9c:	add	x9, x9, x21
   23ca0:	str	x9, [x12, #24]
   23ca4:	b.cc	23cbc <ZSTD_endStream@@Base+0x15d68>  // b.lo, b.ul, b.last
   23ca8:	ldp	x10, x9, [x12]
   23cac:	sub	x9, x9, x10
   23cb0:	lsr	x9, x9, #3
   23cb4:	mov	w10, #0x1                   	// #1
   23cb8:	stp	w10, w9, [x12, #72]
   23cbc:	ldur	x10, [x29, #-56]
   23cc0:	ldr	x9, [x12, #8]
   23cc4:	ldur	w23, [x29, #-76]
   23cc8:	ldur	x28, [x29, #-16]
   23ccc:	add	w10, w10, #0x1
   23cd0:	cmp	x8, #0x10, lsl #12
   23cd4:	strh	w21, [x9, #4]
   23cd8:	str	w10, [x9]
   23cdc:	b.cc	23cf4 <ZSTD_endStream@@Base+0x15da0>  // b.lo, b.ul, b.last
   23ce0:	ldp	x11, x10, [x12]
   23ce4:	sub	x10, x10, x11
   23ce8:	lsr	x10, x10, #3
   23cec:	mov	w11, #0x2                   	// #2
   23cf0:	stp	w11, w10, [x12, #72]
   23cf4:	strh	w8, [x9, #6]
   23cf8:	add	x8, x9, #0x8
   23cfc:	ldur	x9, [x29, #-48]
   23d00:	ldur	x10, [x29, #-112]
   23d04:	str	x8, [x12, #8]
   23d08:	add	x19, x10, x9
   23d0c:	stur	x19, [x29, #-128]
   23d10:	b	23d34 <ZSTD_endStream@@Base+0x15de0>
   23d14:	mov	x19, x28
   23d18:	ldur	x28, [x29, #-16]
   23d1c:	mov	w8, wzr
   23d20:	mov	w21, w20
   23d24:	mov	w20, w23
   23d28:	mov	w23, w20
   23d2c:	mov	w20, w21
   23d30:	tbz	w8, #0, 2259c <ZSTD_endStream@@Base+0x14648>
   23d34:	cmp	x19, x27
   23d38:	b.hi	23e3c <ZSTD_endStream@@Base+0x15ee8>  // b.pmore
   23d3c:	sub	w8, w19, w25
   23d40:	sub	w21, w8, w20
   23d44:	ldur	x8, [x29, #-64]
   23d48:	cmp	w21, w26
   23d4c:	csel	x9, x8, x25, cc  // cc = lo, ul, last
   23d50:	ldur	x8, [x29, #-72]
   23d54:	cmp	w21, w8
   23d58:	mov	w8, wzr
   23d5c:	b.ls	23d20 <ZSTD_endStream@@Base+0x15dcc>  // b.plast
   23d60:	ldur	w10, [x29, #-92]
   23d64:	sub	w10, w10, w21
   23d68:	cmp	w10, #0x3
   23d6c:	b.cc	23d20 <ZSTD_endStream@@Base+0x15dcc>  // b.lo, b.ul, b.last
   23d70:	mov	x0, x19
   23d74:	add	x22, x9, x21
   23d78:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23d7c:	mov	x28, x19
   23d80:	mov	w19, w0
   23d84:	mov	x0, x22
   23d88:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23d8c:	cmp	w19, w0
   23d90:	b.ne	23d14 <ZSTD_endStream@@Base+0x15dc0>  // b.any
   23d94:	cmp	w21, w26
   23d98:	mov	x21, x28
   23d9c:	add	x0, x28, #0x4
   23da0:	ldp	x8, x4, [sp, #32]
   23da4:	ldur	x28, [x29, #-16]
   23da8:	add	x1, x22, #0x4
   23dac:	csel	x3, x8, x28, cc  // cc = lo, ul, last
   23db0:	mov	x2, x28
   23db4:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   23db8:	ldr	x8, [sp, #56]
   23dbc:	ldr	x3, [sp, #16]
   23dc0:	ldur	x1, [x29, #-128]
   23dc4:	mov	x22, x0
   23dc8:	ldr	x0, [x8, #24]
   23dcc:	add	x19, x22, #0x1
   23dd0:	cmp	x1, x3
   23dd4:	b.ls	23de4 <ZSTD_endStream@@Base+0x15e90>  // b.plast
   23dd8:	mov	x2, x1
   23ddc:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   23de0:	b	23de8 <ZSTD_endStream@@Base+0x15e94>
   23de4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   23de8:	ldr	x12, [sp, #56]
   23dec:	add	x8, x22, #0x4
   23df0:	cmp	x19, #0x10, lsl #12
   23df4:	mov	w10, #0x1                   	// #1
   23df8:	ldr	x9, [x12, #8]
   23dfc:	strh	wzr, [x9, #4]
   23e00:	str	w10, [x9]
   23e04:	b.cc	23e1c <ZSTD_endStream@@Base+0x15ec8>  // b.lo, b.ul, b.last
   23e08:	ldp	x11, x10, [x12]
   23e0c:	sub	x10, x10, x11
   23e10:	lsr	x10, x10, #3
   23e14:	mov	w11, #0x2                   	// #2
   23e18:	stp	w11, w10, [x12, #72]
   23e1c:	strh	w19, [x9, #6]
   23e20:	add	x9, x9, #0x8
   23e24:	add	x19, x21, x8
   23e28:	mov	w8, #0x1                   	// #1
   23e2c:	mov	w21, w23
   23e30:	str	x9, [x12, #8]
   23e34:	stur	x19, [x29, #-128]
   23e38:	b	23d28 <ZSTD_endStream@@Base+0x15dd4>
   23e3c:	mov	w21, w20
   23e40:	b	2259c <ZSTD_endStream@@Base+0x14648>
   23e44:	ldur	x8, [x29, #-128]
   23e48:	sub	x0, x28, x8
   23e4c:	ldr	x8, [sp]
   23e50:	stp	w23, w21, [x8]
   23e54:	ldp	x20, x19, [sp, #352]
   23e58:	ldp	x22, x21, [sp, #336]
   23e5c:	ldp	x24, x23, [sp, #320]
   23e60:	ldp	x26, x25, [sp, #304]
   23e64:	ldp	x28, x27, [sp, #288]
   23e68:	ldp	x29, x30, [sp, #272]
   23e6c:	add	sp, sp, #0x170
   23e70:	ret
   23e74:	sub	sp, sp, #0xf0
   23e78:	stp	x29, x30, [sp, #144]
   23e7c:	stp	x28, x27, [sp, #160]
   23e80:	stp	x26, x25, [sp, #176]
   23e84:	stp	x24, x23, [sp, #192]
   23e88:	stp	x22, x21, [sp, #208]
   23e8c:	stp	x20, x19, [sp, #224]
   23e90:	ldr	x26, [x0, #8]
   23e94:	ldr	w25, [x0, #24]
   23e98:	ldp	w23, w11, [x2]
   23e9c:	add	x21, x3, x4
   23ea0:	sub	x8, x21, #0x8
   23ea4:	add	x9, x26, x25
   23ea8:	cmp	x9, x3
   23eac:	cinc	x27, x3, eq  // eq = none
   23eb0:	add	x29, sp, #0x90
   23eb4:	cmp	x27, x8
   23eb8:	str	x2, [sp]
   23ebc:	str	x9, [sp, #40]
   23ec0:	str	x3, [sp, #64]
   23ec4:	stur	x8, [x29, #-16]
   23ec8:	str	x1, [sp, #48]
   23ecc:	b.cs	245c0 <ZSTD_endStream@@Base+0x1666c>  // b.hs, b.nlast
   23ed0:	ldr	w8, [x0, #28]
   23ed4:	ldr	x9, [x0, #16]
   23ed8:	sub	w10, w25, #0x1
   23edc:	stur	w10, [x29, #-36]
   23ee0:	sub	x10, x21, #0x20
   23ee4:	mov	x28, x0
   23ee8:	str	x10, [sp, #24]
   23eec:	add	x10, x9, x25
   23ef0:	stp	x8, x9, [x29, #-32]
   23ef4:	add	x8, x9, x8
   23ef8:	str	x10, [sp, #32]
   23efc:	str	x8, [sp, #8]
   23f00:	stp	x21, x0, [x29, #-64]
   23f04:	str	x26, [sp, #56]
   23f08:	str	x25, [sp, #72]
   23f0c:	b	23f34 <ZSTD_endStream@@Base+0x15fe0>
   23f10:	ldp	x26, x8, [sp, #56]
   23f14:	ldr	x25, [sp, #72]
   23f18:	ldr	w11, [sp, #20]
   23f1c:	sub	x8, x27, x8
   23f20:	add	x8, x27, x8, asr #8
   23f24:	add	x27, x8, #0x1
   23f28:	ldur	x8, [x29, #-16]
   23f2c:	cmp	x27, x8
   23f30:	b.cs	245c0 <ZSTD_endStream@@Base+0x1666c>  // b.hs, b.nlast
   23f34:	mov	x9, x25
   23f38:	sub	w25, w27, w26
   23f3c:	sub	w8, w25, w23
   23f40:	add	w20, w8, #0x1
   23f44:	cmp	w20, w9
   23f48:	ldp	x9, x8, [x29, #-32]
   23f4c:	mov	x19, xzr
   23f50:	str	w11, [sp, #20]
   23f54:	csel	x8, x8, x26, cc  // cc = lo, ul, last
   23f58:	cmp	w20, w9
   23f5c:	add	x26, x27, #0x1
   23f60:	b.ls	23fc4 <ZSTD_endStream@@Base+0x16070>  // b.plast
   23f64:	ldur	w9, [x29, #-36]
   23f68:	sub	w9, w9, w20
   23f6c:	cmp	w9, #0x3
   23f70:	b.cc	23fc4 <ZSTD_endStream@@Base+0x16070>  // b.lo, b.ul, b.last
   23f74:	mov	x0, x26
   23f78:	add	x19, x8, x20
   23f7c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23f80:	mov	w28, w0
   23f84:	mov	x0, x19
   23f88:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   23f8c:	cmp	w28, w0
   23f90:	b.ne	23fbc <ZSTD_endStream@@Base+0x16068>  // b.any
   23f94:	ldr	x8, [sp, #72]
   23f98:	add	x0, x27, #0x5
   23f9c:	add	x1, x19, #0x4
   23fa0:	mov	x2, x21
   23fa4:	cmp	w20, w8
   23fa8:	ldp	x8, x4, [sp, #32]
   23fac:	csel	x3, x8, x21, cc  // cc = lo, ul, last
   23fb0:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   23fb4:	add	x19, x0, #0x4
   23fb8:	b	23fc0 <ZSTD_endStream@@Base+0x1606c>
   23fbc:	mov	x19, xzr
   23fc0:	ldur	x28, [x29, #-56]
   23fc4:	mov	w8, #0xc9ff                	// #51711
   23fc8:	movk	w8, #0x3b9a, lsl #16
   23fcc:	sub	x3, x29, #0x8
   23fd0:	mov	x0, x28
   23fd4:	mov	x1, x27
   23fd8:	mov	x2, x21
   23fdc:	stur	x8, [x29, #-8]
   23fe0:	bl	25df8 <ZSTD_endStream@@Base+0x17ea4>
   23fe4:	ldur	x8, [x29, #-8]
   23fe8:	cmp	x0, x19
   23fec:	csel	x20, x0, x19, hi  // hi = pmore
   23ff0:	csel	x9, x27, x26, hi  // hi = pmore
   23ff4:	csel	x26, x8, xzr, hi  // hi = pmore
   23ff8:	cmp	x20, #0x3
   23ffc:	b.ls	23f10 <ZSTD_endStream@@Base+0x15fbc>  // b.plast
   24000:	ldur	x8, [x29, #-16]
   24004:	stur	x9, [x29, #-48]
   24008:	cmp	x27, x8
   2400c:	b.cc	240c0 <ZSTD_endStream@@Base+0x1616c>  // b.lo, b.ul, b.last
   24010:	cbz	x26, 24358 <ZSTD_endStream@@Base+0x16404>
   24014:	ldp	x9, x25, [sp, #56]
   24018:	ldur	x2, [x29, #-48]
   2401c:	ldr	x11, [sp, #8]
   24020:	add	x8, x9, x26
   24024:	sub	x8, x2, x8
   24028:	add	x10, x8, #0x2
   2402c:	ldr	x8, [sp, #72]
   24030:	cmp	w8, w10
   24034:	ldur	x8, [x29, #-24]
   24038:	csel	x9, x8, x9, hi  // hi = pmore
   2403c:	ldr	x8, [sp, #40]
   24040:	csel	x8, x11, x8, hi  // hi = pmore
   24044:	cmp	x2, x25
   24048:	b.ls	24370 <ZSTD_endStream@@Base+0x1641c>  // b.plast
   2404c:	and	x10, x10, #0xffffffff
   24050:	add	x11, x9, x10
   24054:	cmp	x11, x8
   24058:	b.ls	24370 <ZSTD_endStream@@Base+0x1641c>  // b.plast
   2405c:	ldr	x27, [sp, #48]
   24060:	add	x9, x9, x10
   24064:	sub	x9, x9, #0x1
   24068:	sub	x10, x2, #0x1
   2406c:	ldrb	w11, [x10]
   24070:	ldrb	w12, [x9]
   24074:	cmp	w11, w12
   24078:	b.ne	24378 <ZSTD_endStream@@Base+0x16424>  // b.any
   2407c:	add	x20, x20, #0x1
   24080:	cmp	x9, x8
   24084:	sub	x11, x10, #0x1
   24088:	b.ls	2409c <ZSTD_endStream@@Base+0x16148>  // b.plast
   2408c:	cmp	x10, x25
   24090:	sub	x9, x9, #0x1
   24094:	mov	x10, x11
   24098:	b.hi	2406c <ZSTD_endStream@@Base+0x16118>  // b.pmore
   2409c:	add	x2, x11, #0x1
   240a0:	b	2437c <ZSTD_endStream@@Base+0x16428>
   240a4:	mov	w8, #0x1                   	// #1
   240a8:	cbnz	w8, 24010 <ZSTD_endStream@@Base+0x160bc>
   240ac:	ldur	x8, [x29, #-16]
   240b0:	mov	x27, x28
   240b4:	mov	w25, w24
   240b8:	cmp	x28, x8
   240bc:	b.cs	24010 <ZSTD_endStream@@Base+0x160bc>  // b.hs, b.nlast
   240c0:	add	x28, x27, #0x1
   240c4:	add	w24, w25, #0x1
   240c8:	cbz	x26, 24184 <ZSTD_endStream@@Base+0x16230>
   240cc:	ldr	x8, [sp, #72]
   240d0:	sub	w21, w24, w23
   240d4:	ldur	x9, [x29, #-24]
   240d8:	cmp	w21, w8
   240dc:	ldr	x8, [sp, #56]
   240e0:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   240e4:	ldur	x9, [x29, #-32]
   240e8:	cmp	w21, w9
   240ec:	b.ls	24184 <ZSTD_endStream@@Base+0x16230>  // b.plast
   240f0:	ldur	w9, [x29, #-36]
   240f4:	sub	w9, w9, w21
   240f8:	cmp	w9, #0x3
   240fc:	b.cc	24184 <ZSTD_endStream@@Base+0x16230>  // b.lo, b.ul, b.last
   24100:	mov	x0, x28
   24104:	add	x19, x8, x21
   24108:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   2410c:	mov	w22, w0
   24110:	mov	x0, x19
   24114:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24118:	cmp	w22, w0
   2411c:	b.ne	24184 <ZSTD_endStream@@Base+0x16230>  // b.any
   24120:	ldr	x8, [sp, #72]
   24124:	add	x0, x27, #0x5
   24128:	add	x1, x19, #0x4
   2412c:	cmp	w21, w8
   24130:	ldur	x21, [x29, #-64]
   24134:	ldp	x8, x4, [sp, #32]
   24138:	mov	x2, x21
   2413c:	csel	x3, x8, x21, cc  // cc = lo, ul, last
   24140:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   24144:	cmn	x0, #0x5
   24148:	b.hi	24188 <ZSTD_endStream@@Base+0x16234>  // b.pmore
   2414c:	add	x19, x0, #0x4
   24150:	add	w0, w26, #0x1
   24154:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   24158:	add	w8, w20, w20, lsl #1
   2415c:	sub	w8, w8, w0
   24160:	add	w9, w19, w19, lsl #1
   24164:	add	w8, w8, #0x1
   24168:	cmp	w9, w8
   2416c:	ldur	x8, [x29, #-48]
   24170:	csel	x26, xzr, x26, gt
   24174:	csel	x20, x19, x20, gt
   24178:	csel	x8, x28, x8, gt
   2417c:	stur	x8, [x29, #-48]
   24180:	b	24188 <ZSTD_endStream@@Base+0x16234>
   24184:	ldur	x21, [x29, #-64]
   24188:	ldur	x0, [x29, #-56]
   2418c:	mov	w8, #0xc9ff                	// #51711
   24190:	movk	w8, #0x3b9a, lsl #16
   24194:	sub	x3, x29, #0x8
   24198:	mov	x1, x28
   2419c:	mov	x2, x21
   241a0:	stur	x8, [x29, #-8]
   241a4:	bl	25df8 <ZSTD_endStream@@Base+0x17ea4>
   241a8:	cmp	x0, #0x4
   241ac:	b.cc	24204 <ZSTD_endStream@@Base+0x162b0>  // b.lo, b.ul, b.last
   241b0:	ldur	x21, [x29, #-8]
   241b4:	mov	x19, x0
   241b8:	add	w0, w26, #0x1
   241bc:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   241c0:	mov	w22, w0
   241c4:	add	w0, w21, #0x1
   241c8:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   241cc:	lsl	w8, w20, #2
   241d0:	lsl	w9, w19, #2
   241d4:	sub	w8, w8, w22
   241d8:	sub	w9, w9, w0
   241dc:	add	w8, w8, #0x4
   241e0:	cmp	w9, w8
   241e4:	ldur	x9, [x29, #-48]
   241e8:	cset	w8, le
   241ec:	csel	x26, x21, x26, gt
   241f0:	csel	x20, x19, x20, gt
   241f4:	csel	x9, x28, x9, gt
   241f8:	stur	x9, [x29, #-48]
   241fc:	tbnz	w8, #0, 2420c <ZSTD_endStream@@Base+0x162b8>
   24200:	b	240ac <ZSTD_endStream@@Base+0x16158>
   24204:	mov	w8, #0x1                   	// #1
   24208:	tbz	w8, #0, 240ac <ZSTD_endStream@@Base+0x16158>
   2420c:	ldur	x8, [x29, #-16]
   24210:	cmp	x28, x8
   24214:	b.cs	24010 <ZSTD_endStream@@Base+0x160bc>  // b.hs, b.nlast
   24218:	add	x28, x27, #0x2
   2421c:	add	w24, w25, #0x2
   24220:	cbz	x26, 242d8 <ZSTD_endStream@@Base+0x16384>
   24224:	ldr	x25, [sp, #72]
   24228:	ldr	x8, [sp, #56]
   2422c:	ldur	x9, [x29, #-24]
   24230:	sub	w21, w24, w23
   24234:	cmp	w21, w25
   24238:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   2423c:	ldur	x9, [x29, #-32]
   24240:	cmp	w21, w9
   24244:	b.ls	242d8 <ZSTD_endStream@@Base+0x16384>  // b.plast
   24248:	ldur	w9, [x29, #-36]
   2424c:	sub	w9, w9, w21
   24250:	cmp	w9, #0x3
   24254:	b.cc	242d8 <ZSTD_endStream@@Base+0x16384>  // b.lo, b.ul, b.last
   24258:	mov	x0, x28
   2425c:	add	x19, x8, x21
   24260:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24264:	mov	w22, w0
   24268:	mov	x0, x19
   2426c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24270:	cmp	w22, w0
   24274:	b.ne	242d8 <ZSTD_endStream@@Base+0x16384>  // b.any
   24278:	cmp	w21, w25
   2427c:	ldur	x21, [x29, #-64]
   24280:	ldp	x8, x4, [sp, #32]
   24284:	add	x0, x27, #0x6
   24288:	add	x1, x19, #0x4
   2428c:	mov	x2, x21
   24290:	csel	x3, x8, x21, cc  // cc = lo, ul, last
   24294:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   24298:	cmn	x0, #0x5
   2429c:	b.hi	242dc <ZSTD_endStream@@Base+0x16388>  // b.pmore
   242a0:	add	x19, x0, #0x4
   242a4:	add	w0, w26, #0x1
   242a8:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   242ac:	mov	w8, #0x1                   	// #1
   242b0:	bfi	w8, w20, #2, #30
   242b4:	lsl	w9, w19, #2
   242b8:	sub	w8, w8, w0
   242bc:	cmp	w9, w8
   242c0:	ldur	x8, [x29, #-48]
   242c4:	csel	x26, xzr, x26, gt
   242c8:	csel	x20, x19, x20, gt
   242cc:	csel	x8, x28, x8, gt
   242d0:	stur	x8, [x29, #-48]
   242d4:	b	242dc <ZSTD_endStream@@Base+0x16388>
   242d8:	ldur	x21, [x29, #-64]
   242dc:	ldur	x0, [x29, #-56]
   242e0:	mov	w8, #0xc9ff                	// #51711
   242e4:	movk	w8, #0x3b9a, lsl #16
   242e8:	sub	x3, x29, #0x8
   242ec:	mov	x1, x28
   242f0:	mov	x2, x21
   242f4:	stur	x8, [x29, #-8]
   242f8:	bl	25df8 <ZSTD_endStream@@Base+0x17ea4>
   242fc:	cmp	x0, #0x4
   24300:	b.cc	240a4 <ZSTD_endStream@@Base+0x16150>  // b.lo, b.ul, b.last
   24304:	ldur	x21, [x29, #-8]
   24308:	mov	x19, x0
   2430c:	add	w0, w26, #0x1
   24310:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   24314:	mov	w22, w0
   24318:	add	w0, w21, #0x1
   2431c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   24320:	lsl	w8, w20, #2
   24324:	lsl	w9, w19, #2
   24328:	sub	w8, w8, w22
   2432c:	sub	w9, w9, w0
   24330:	add	w8, w8, #0x7
   24334:	cmp	w9, w8
   24338:	ldur	x9, [x29, #-48]
   2433c:	cset	w8, le
   24340:	csel	x26, x21, x26, gt
   24344:	csel	x20, x19, x20, gt
   24348:	csel	x9, x28, x9, gt
   2434c:	stur	x9, [x29, #-48]
   24350:	cbz	w8, 240ac <ZSTD_endStream@@Base+0x16158>
   24354:	b	24010 <ZSTD_endStream@@Base+0x160bc>
   24358:	ldr	w24, [sp, #20]
   2435c:	ldr	x27, [sp, #48]
   24360:	ldr	x3, [sp, #24]
   24364:	ldr	x25, [sp, #64]
   24368:	ldur	x2, [x29, #-48]
   2436c:	b	2438c <ZSTD_endStream@@Base+0x16438>
   24370:	ldr	x27, [sp, #48]
   24374:	b	2437c <ZSTD_endStream@@Base+0x16428>
   24378:	add	x2, x10, #0x1
   2437c:	ldr	x3, [sp, #24]
   24380:	sub	w8, w26, #0x2
   24384:	mov	w24, w23
   24388:	mov	w23, w8
   2438c:	ldr	x0, [x27, #24]
   24390:	cmp	x2, x3
   24394:	sub	x21, x2, x25
   24398:	stur	x2, [x29, #-48]
   2439c:	b.ls	243b0 <ZSTD_endStream@@Base+0x1645c>  // b.plast
   243a0:	mov	x1, x25
   243a4:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   243a8:	ldur	x28, [x29, #-56]
   243ac:	b	2441c <ZSTD_endStream@@Base+0x164c8>
   243b0:	mov	x1, x25
   243b4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   243b8:	ldur	x28, [x29, #-56]
   243bc:	cmp	x21, #0x11
   243c0:	b.cc	2441c <ZSTD_endStream@@Base+0x164c8>  // b.lo, b.ul, b.last
   243c4:	ldr	x19, [x27, #24]
   243c8:	add	x1, x25, #0x10
   243cc:	add	x0, x19, #0x10
   243d0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   243d4:	add	x0, x19, #0x20
   243d8:	add	x1, x25, #0x20
   243dc:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   243e0:	cmp	x21, #0x31
   243e4:	b.lt	2441c <ZSTD_endStream@@Base+0x164c8>  // b.tstop
   243e8:	add	x22, x19, x21
   243ec:	add	x19, x19, #0x30
   243f0:	add	x25, x25, #0x40
   243f4:	sub	x1, x25, #0x10
   243f8:	mov	x0, x19
   243fc:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   24400:	add	x0, x19, #0x10
   24404:	mov	x1, x25
   24408:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   2440c:	add	x19, x19, #0x20
   24410:	cmp	x19, x22
   24414:	add	x25, x25, #0x20
   24418:	b.cc	243f4 <ZSTD_endStream@@Base+0x164a0>  // b.lo, b.ul, b.last
   2441c:	ldr	x9, [x27, #24]
   24420:	sub	x8, x20, #0x3
   24424:	cmp	x21, #0x10, lsl #12
   24428:	add	x9, x9, x21
   2442c:	str	x9, [x27, #24]
   24430:	b.cc	24448 <ZSTD_endStream@@Base+0x164f4>  // b.lo, b.ul, b.last
   24434:	ldp	x10, x9, [x27]
   24438:	sub	x9, x9, x10
   2443c:	lsr	x9, x9, #3
   24440:	mov	w10, #0x1                   	// #1
   24444:	stp	w10, w9, [x27, #72]
   24448:	ldr	x9, [x27, #8]
   2444c:	ldr	x25, [sp, #72]
   24450:	add	w10, w26, #0x1
   24454:	cmp	x8, #0x10, lsl #12
   24458:	strh	w21, [x9, #4]
   2445c:	str	w10, [x9]
   24460:	b.cc	24478 <ZSTD_endStream@@Base+0x16524>  // b.lo, b.ul, b.last
   24464:	ldp	x11, x10, [x27]
   24468:	sub	x10, x10, x11
   2446c:	lsr	x10, x10, #3
   24470:	mov	w11, #0x2                   	// #2
   24474:	stp	w11, w10, [x27, #72]
   24478:	strh	w8, [x9, #6]
   2447c:	add	x8, x9, #0x8
   24480:	ldur	x9, [x29, #-48]
   24484:	ldur	x21, [x29, #-64]
   24488:	ldr	x26, [sp, #56]
   2448c:	str	x8, [x27, #8]
   24490:	add	x9, x9, x20
   24494:	mov	x27, x9
   24498:	str	x9, [sp, #64]
   2449c:	b	244b8 <ZSTD_endStream@@Base+0x16564>
   244a0:	mov	w8, wzr
   244a4:	mov	w11, w24
   244a8:	mov	w24, w23
   244ac:	mov	w23, w24
   244b0:	mov	w24, w11
   244b4:	tbz	w8, #0, 23f28 <ZSTD_endStream@@Base+0x15fd4>
   244b8:	ldur	x8, [x29, #-16]
   244bc:	cmp	x27, x8
   244c0:	b.hi	245b8 <ZSTD_endStream@@Base+0x16664>  // b.pmore
   244c4:	sub	w8, w27, w26
   244c8:	sub	w20, w8, w24
   244cc:	ldur	x8, [x29, #-24]
   244d0:	cmp	w20, w25
   244d4:	csel	x9, x8, x26, cc  // cc = lo, ul, last
   244d8:	ldur	x8, [x29, #-32]
   244dc:	cmp	w20, w8
   244e0:	mov	w8, wzr
   244e4:	b.ls	244a4 <ZSTD_endStream@@Base+0x16550>  // b.plast
   244e8:	ldur	w10, [x29, #-36]
   244ec:	sub	w10, w10, w20
   244f0:	cmp	w10, #0x3
   244f4:	b.cc	244a4 <ZSTD_endStream@@Base+0x16550>  // b.lo, b.ul, b.last
   244f8:	mov	x0, x27
   244fc:	add	x19, x9, x20
   24500:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24504:	mov	w22, w0
   24508:	mov	x0, x19
   2450c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24510:	cmp	w22, w0
   24514:	b.ne	244a0 <ZSTD_endStream@@Base+0x1654c>  // b.any
   24518:	ldp	x8, x4, [sp, #32]
   2451c:	cmp	w20, w25
   24520:	add	x0, x27, #0x4
   24524:	add	x1, x19, #0x4
   24528:	csel	x3, x8, x21, cc  // cc = lo, ul, last
   2452c:	mov	x2, x21
   24530:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   24534:	ldr	x8, [sp, #48]
   24538:	ldr	x3, [sp, #24]
   2453c:	ldr	x1, [sp, #64]
   24540:	mov	x19, x0
   24544:	ldr	x0, [x8, #24]
   24548:	add	x20, x19, #0x1
   2454c:	cmp	x1, x3
   24550:	b.ls	24560 <ZSTD_endStream@@Base+0x1660c>  // b.plast
   24554:	mov	x2, x1
   24558:	bl	25d40 <ZSTD_endStream@@Base+0x17dec>
   2455c:	b	24564 <ZSTD_endStream@@Base+0x16610>
   24560:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   24564:	ldr	x12, [sp, #48]
   24568:	add	x8, x19, #0x4
   2456c:	cmp	x20, #0x10, lsl #12
   24570:	mov	w10, #0x1                   	// #1
   24574:	ldr	x9, [x12, #8]
   24578:	strh	wzr, [x9, #4]
   2457c:	str	w10, [x9]
   24580:	b.cc	24598 <ZSTD_endStream@@Base+0x16644>  // b.lo, b.ul, b.last
   24584:	ldp	x11, x10, [x12]
   24588:	sub	x10, x10, x11
   2458c:	lsr	x10, x10, #3
   24590:	mov	w11, #0x2                   	// #2
   24594:	stp	w11, w10, [x12, #72]
   24598:	strh	w20, [x9, #6]
   2459c:	add	x9, x9, #0x8
   245a0:	add	x27, x27, x8
   245a4:	mov	w8, #0x1                   	// #1
   245a8:	mov	w11, w23
   245ac:	str	x9, [x12, #8]
   245b0:	str	x27, [sp, #64]
   245b4:	b	244ac <ZSTD_endStream@@Base+0x16558>
   245b8:	mov	w11, w24
   245bc:	b	23f28 <ZSTD_endStream@@Base+0x15fd4>
   245c0:	ldr	x8, [sp, #64]
   245c4:	sub	x0, x21, x8
   245c8:	ldr	x8, [sp]
   245cc:	stp	w23, w11, [x8]
   245d0:	ldp	x20, x19, [sp, #224]
   245d4:	ldp	x22, x21, [sp, #208]
   245d8:	ldp	x24, x23, [sp, #192]
   245dc:	ldp	x26, x25, [sp, #176]
   245e0:	ldp	x28, x27, [sp, #160]
   245e4:	ldp	x29, x30, [sp, #144]
   245e8:	add	sp, sp, #0xf0
   245ec:	ret
   245f0:	stp	x29, x30, [sp, #-16]!
   245f4:	sub	w8, w2, #0x5
   245f8:	cmp	w8, #0x3
   245fc:	mov	x29, sp
   24600:	b.hi	24628 <ZSTD_endStream@@Base+0x166d4>  // b.pmore
   24604:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   24608:	add	x9, x9, #0xa90
   2460c:	adr	x10, 2461c <ZSTD_endStream@@Base+0x166c8>
   24610:	ldrb	w11, [x9, x8]
   24614:	add	x10, x10, x11, lsl #2
   24618:	br	x10
   2461c:	bl	24684 <ZSTD_endStream@@Base+0x16730>
   24620:	ldp	x29, x30, [sp], #16
   24624:	ret
   24628:	bl	24658 <ZSTD_endStream@@Base+0x16704>
   2462c:	ldp	x29, x30, [sp], #16
   24630:	ret
   24634:	bl	246ac <ZSTD_endStream@@Base+0x16758>
   24638:	ldp	x29, x30, [sp], #16
   2463c:	ret
   24640:	bl	246d4 <ZSTD_endStream@@Base+0x16780>
   24644:	ldp	x29, x30, [sp], #16
   24648:	ret
   2464c:	bl	246fc <ZSTD_endStream@@Base+0x167a8>
   24650:	ldp	x29, x30, [sp], #16
   24654:	ret
   24658:	stp	x29, x30, [sp, #-32]!
   2465c:	str	x19, [sp, #16]
   24660:	mov	x29, sp
   24664:	mov	w19, w1
   24668:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   2466c:	mov	w1, w19
   24670:	bl	24724 <ZSTD_endStream@@Base+0x167d0>
   24674:	ldr	x19, [sp, #16]
   24678:	mov	w0, w0
   2467c:	ldp	x29, x30, [sp], #32
   24680:	ret
   24684:	stp	x29, x30, [sp, #-32]!
   24688:	str	x19, [sp, #16]
   2468c:	mov	x29, sp
   24690:	mov	w19, w1
   24694:	bl	24760 <ZSTD_endStream@@Base+0x1680c>
   24698:	mov	w1, w19
   2469c:	bl	24744 <ZSTD_endStream@@Base+0x167f0>
   246a0:	ldr	x19, [sp, #16]
   246a4:	ldp	x29, x30, [sp], #32
   246a8:	ret
   246ac:	stp	x29, x30, [sp, #-32]!
   246b0:	str	x19, [sp, #16]
   246b4:	mov	x29, sp
   246b8:	mov	w19, w1
   246bc:	bl	24760 <ZSTD_endStream@@Base+0x1680c>
   246c0:	mov	w1, w19
   246c4:	bl	2477c <ZSTD_endStream@@Base+0x16828>
   246c8:	ldr	x19, [sp, #16]
   246cc:	ldp	x29, x30, [sp], #32
   246d0:	ret
   246d4:	stp	x29, x30, [sp, #-32]!
   246d8:	str	x19, [sp, #16]
   246dc:	mov	x29, sp
   246e0:	mov	w19, w1
   246e4:	bl	24760 <ZSTD_endStream@@Base+0x1680c>
   246e8:	mov	w1, w19
   246ec:	bl	24798 <ZSTD_endStream@@Base+0x16844>
   246f0:	ldr	x19, [sp, #16]
   246f4:	ldp	x29, x30, [sp], #32
   246f8:	ret
   246fc:	stp	x29, x30, [sp, #-32]!
   24700:	str	x19, [sp, #16]
   24704:	mov	x29, sp
   24708:	mov	w19, w1
   2470c:	bl	24760 <ZSTD_endStream@@Base+0x1680c>
   24710:	mov	w1, w19
   24714:	bl	247b8 <ZSTD_endStream@@Base+0x16864>
   24718:	ldr	x19, [sp, #16]
   2471c:	ldp	x29, x30, [sp], #32
   24720:	ret
   24724:	mov	w8, #0x79b1                	// #31153
   24728:	movk	w8, #0x9e37, lsl #16
   2472c:	mul	w8, w0, w8
   24730:	neg	w9, w1
   24734:	lsr	w0, w8, w9
   24738:	ret
   2473c:	ldr	w0, [x0]
   24740:	ret
   24744:	mov	x8, #0xbb000000            	// #3137339392
   24748:	movk	x8, #0xbcdc, lsl #32
   2474c:	movk	x8, #0xcf1b, lsl #48
   24750:	mul	x8, x0, x8
   24754:	neg	w9, w1
   24758:	lsr	x0, x8, x9
   2475c:	ret
   24760:	stp	x29, x30, [sp, #-16]!
   24764:	mov	x29, sp
   24768:	bl	24774 <ZSTD_endStream@@Base+0x16820>
   2476c:	ldp	x29, x30, [sp], #16
   24770:	ret
   24774:	ldr	x0, [x0]
   24778:	ret
   2477c:	mov	x8, #0xbf9b0000            	// #3214606336
   24780:	movk	x8, #0xbcdc, lsl #32
   24784:	movk	x8, #0xcf1b, lsl #48
   24788:	mul	x8, x0, x8
   2478c:	neg	w9, w1
   24790:	lsr	x0, x8, x9
   24794:	ret
   24798:	mov	x8, #0x6300                	// #25344
   2479c:	movk	x8, #0xbfa5, lsl #16
   247a0:	movk	x8, #0xbcdc, lsl #32
   247a4:	movk	x8, #0xcf1b, lsl #48
   247a8:	mul	x8, x0, x8
   247ac:	neg	w9, w1
   247b0:	lsr	x0, x8, x9
   247b4:	ret
   247b8:	mov	x8, #0x6463                	// #25699
   247bc:	movk	x8, #0xb7a5, lsl #16
   247c0:	movk	x8, #0xbcdc, lsl #32
   247c4:	movk	x8, #0xcf1b, lsl #48
   247c8:	mul	x8, x0, x8
   247cc:	neg	w9, w1
   247d0:	lsr	x0, x8, x9
   247d4:	ret
   247d8:	stp	x29, x30, [sp, #-48]!
   247dc:	stp	x22, x21, [sp, #16]
   247e0:	stp	x20, x19, [sp, #32]
   247e4:	ldr	w8, [x0, #200]
   247e8:	mov	x19, x3
   247ec:	mov	x20, x2
   247f0:	mov	x21, x0
   247f4:	sub	w9, w8, #0x6
   247f8:	cmp	w9, #0x2
   247fc:	mov	x22, x1
   24800:	mov	x29, sp
   24804:	b.cs	24834 <ZSTD_endStream@@Base+0x168e0>  // b.hs, b.nlast
   24808:	ldr	x8, [x21, #8]
   2480c:	ldr	w9, [x21, #36]
   24810:	add	x8, x8, x9
   24814:	cmp	x8, x22
   24818:	b.hi	2487c <ZSTD_endStream@@Base+0x16928>  // b.pmore
   2481c:	mov	w2, #0x6                   	// #6
   24820:	mov	x0, x21
   24824:	mov	x1, x22
   24828:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   2482c:	mov	w4, #0x6                   	// #6
   24830:	b	24898 <ZSTD_endStream@@Base+0x16944>
   24834:	cmp	w8, #0x5
   24838:	b.ne	24868 <ZSTD_endStream@@Base+0x16914>  // b.any
   2483c:	ldr	x8, [x21, #8]
   24840:	ldr	w9, [x21, #36]
   24844:	add	x8, x8, x9
   24848:	cmp	x8, x22
   2484c:	b.hi	2487c <ZSTD_endStream@@Base+0x16928>  // b.pmore
   24850:	mov	w2, #0x5                   	// #5
   24854:	mov	x0, x21
   24858:	mov	x1, x22
   2485c:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   24860:	mov	w4, #0x5                   	// #5
   24864:	b	24898 <ZSTD_endStream@@Base+0x16944>
   24868:	ldr	x8, [x21, #8]
   2486c:	ldr	w9, [x21, #36]
   24870:	add	x8, x8, x9
   24874:	cmp	x8, x22
   24878:	b.ls	24884 <ZSTD_endStream@@Base+0x16930>  // b.plast
   2487c:	mov	x0, xzr
   24880:	b	248b0 <ZSTD_endStream@@Base+0x1695c>
   24884:	mov	w2, #0x4                   	// #4
   24888:	mov	x0, x21
   2488c:	mov	x1, x22
   24890:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   24894:	mov	w4, #0x4                   	// #4
   24898:	mov	w5, #0x2                   	// #2
   2489c:	mov	x0, x21
   248a0:	mov	x1, x22
   248a4:	mov	x2, x20
   248a8:	mov	x3, x19
   248ac:	bl	25428 <ZSTD_endStream@@Base+0x174d4>
   248b0:	ldp	x20, x19, [sp, #32]
   248b4:	ldp	x22, x21, [sp, #16]
   248b8:	ldp	x29, x30, [sp], #48
   248bc:	ret
   248c0:	sub	sp, sp, #0xb0
   248c4:	stp	x29, x30, [sp, #80]
   248c8:	add	x29, sp, #0x50
   248cc:	stp	x28, x27, [sp, #96]
   248d0:	stp	x26, x25, [sp, #112]
   248d4:	stp	x24, x23, [sp, #128]
   248d8:	stp	x22, x21, [sp, #144]
   248dc:	stp	x20, x19, [sp, #160]
   248e0:	stp	x3, x2, [x29, #-16]
   248e4:	ldr	w8, [x0, #200]
   248e8:	mov	x23, x0
   248ec:	mov	x21, x1
   248f0:	sub	w9, w8, #0x6
   248f4:	cmp	w9, #0x2
   248f8:	b.cs	24a28 <ZSTD_endStream@@Base+0x16ad4>  // b.hs, b.nlast
   248fc:	ldr	x8, [x23, #64]
   24900:	ldr	x25, [x23, #8]
   24904:	mov	x1, x23
   24908:	mov	w13, #0x1                   	// #1
   2490c:	stur	x8, [x29, #-24]
   24910:	ldp	w9, w10, [x23, #24]
   24914:	ldr	w8, [x23, #188]
   24918:	sub	w22, w21, w25
   2491c:	mov	w3, #0x6                   	// #6
   24920:	str	x9, [sp, #16]
   24924:	ldr	w9, [x1, #184]!
   24928:	ldr	w11, [x23, #32]
   2492c:	sub	w12, w22, w10
   24930:	lsl	w19, w13, w8
   24934:	lsl	w9, w13, w9
   24938:	cmp	w12, w9
   2493c:	ldr	w12, [x23, #196]
   24940:	sub	w8, w22, w9
   24944:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   24948:	csel	w20, w8, w10, eq  // eq = none
   2494c:	subs	w8, w22, w19
   24950:	mov	x0, x23
   24954:	mov	x2, x21
   24958:	csel	w26, wzr, w8, cc  // cc = lo, ul, last
   2495c:	lsl	w28, w13, w12
   24960:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   24964:	cmp	w0, w20
   24968:	str	w22, [sp, #12]
   2496c:	b.ls	24b68 <ZSTD_endStream@@Base+0x16c14>  // b.plast
   24970:	mov	w24, w0
   24974:	sub	w27, w19, #0x1
   24978:	add	w19, w22, #0x2
   2497c:	mov	w22, #0x3                   	// #3
   24980:	add	x1, x25, w24, uxtw
   24984:	ldrb	w8, [x1, x22]
   24988:	ldrb	w9, [x21, x22]
   2498c:	cmp	w8, w9
   24990:	b.ne	249c8 <ZSTD_endStream@@Base+0x16a74>  // b.any
   24994:	ldur	x2, [x29, #-8]
   24998:	mov	x0, x21
   2499c:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   249a0:	cmp	x0, x22
   249a4:	b.hi	249d4 <ZSTD_endStream@@Base+0x16a80>  // b.pmore
   249a8:	cmp	w24, w26
   249ac:	b.ls	249fc <ZSTD_endStream@@Base+0x16aa8>  // b.plast
   249b0:	ldur	x9, [x29, #-24]
   249b4:	and	w8, w24, w27
   249b8:	ldr	w24, [x9, w8, uxtw #2]
   249bc:	mov	w8, #0x1                   	// #1
   249c0:	cbnz	w8, 24a14 <ZSTD_endStream@@Base+0x16ac0>
   249c4:	b	24b6c <ZSTD_endStream@@Base+0x16c18>
   249c8:	mov	x0, xzr
   249cc:	cmp	x0, x22
   249d0:	b.ls	249a8 <ZSTD_endStream@@Base+0x16a54>  // b.plast
   249d4:	ldur	x10, [x29, #-8]
   249d8:	add	x9, x21, x0
   249dc:	sub	w8, w19, w24
   249e0:	cmp	x9, x10
   249e4:	ldur	x9, [x29, #-16]
   249e8:	str	x8, [x9]
   249ec:	b.eq	24a08 <ZSTD_endStream@@Base+0x16ab4>  // b.none
   249f0:	mov	x22, x0
   249f4:	cmp	w24, w26
   249f8:	b.hi	249b0 <ZSTD_endStream@@Base+0x16a5c>  // b.pmore
   249fc:	mov	w8, wzr
   24a00:	cbnz	w8, 24a14 <ZSTD_endStream@@Base+0x16ac0>
   24a04:	b	24b6c <ZSTD_endStream@@Base+0x16c18>
   24a08:	mov	w8, wzr
   24a0c:	mov	x22, x0
   24a10:	cbz	w8, 24b6c <ZSTD_endStream@@Base+0x16c18>
   24a14:	subs	w28, w28, #0x1
   24a18:	b.eq	24b6c <ZSTD_endStream@@Base+0x16c18>  // b.none
   24a1c:	cmp	w24, w20
   24a20:	b.hi	24980 <ZSTD_endStream@@Base+0x16a2c>  // b.pmore
   24a24:	b	24b6c <ZSTD_endStream@@Base+0x16c18>
   24a28:	cmp	w8, #0x5
   24a2c:	b.ne	24cb0 <ZSTD_endStream@@Base+0x16d5c>  // b.any
   24a30:	ldr	x8, [x23, #64]
   24a34:	ldr	x25, [x23, #8]
   24a38:	mov	x1, x23
   24a3c:	mov	w13, #0x1                   	// #1
   24a40:	stur	x8, [x29, #-32]
   24a44:	ldr	w8, [x23, #188]
   24a48:	ldp	w22, w10, [x23, #24]
   24a4c:	ldr	w9, [x1, #184]!
   24a50:	ldr	w11, [x23, #32]
   24a54:	sub	w27, w21, w25
   24a58:	sub	w12, w27, w10
   24a5c:	lsl	w9, w13, w9
   24a60:	cmp	w12, w9
   24a64:	ldr	w12, [x23, #196]
   24a68:	lsl	w19, w13, w8
   24a6c:	sub	w8, w27, w9
   24a70:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   24a74:	csel	w20, w8, w10, eq  // eq = none
   24a78:	subs	w8, w27, w19
   24a7c:	mov	w3, #0x5                   	// #5
   24a80:	mov	x0, x23
   24a84:	mov	x2, x21
   24a88:	csel	w26, wzr, w8, cc  // cc = lo, ul, last
   24a8c:	lsl	w28, w13, w12
   24a90:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   24a94:	cmp	w0, w20
   24a98:	str	x22, [sp, #16]
   24a9c:	str	w27, [sp, #12]
   24aa0:	b.ls	24de8 <ZSTD_endStream@@Base+0x16e94>  // b.plast
   24aa4:	mov	w8, w27
   24aa8:	sub	w9, w19, #0x1
   24aac:	add	w19, w27, #0x2
   24ab0:	ldur	x27, [x29, #-32]
   24ab4:	mov	w24, w0
   24ab8:	mov	w22, #0x3                   	// #3
   24abc:	stur	w9, [x29, #-24]
   24ac0:	add	x1, x25, w24, uxtw
   24ac4:	ldrb	w8, [x1, x22]
   24ac8:	ldrb	w9, [x21, x22]
   24acc:	cmp	w8, w9
   24ad0:	b.ne	24b08 <ZSTD_endStream@@Base+0x16bb4>  // b.any
   24ad4:	ldur	x2, [x29, #-8]
   24ad8:	mov	x0, x21
   24adc:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   24ae0:	cmp	x0, x22
   24ae4:	b.hi	24b14 <ZSTD_endStream@@Base+0x16bc0>  // b.pmore
   24ae8:	cmp	w24, w26
   24aec:	b.ls	24b3c <ZSTD_endStream@@Base+0x16be8>  // b.plast
   24af0:	ldur	w8, [x29, #-24]
   24af4:	and	w8, w24, w8
   24af8:	ldr	w24, [x27, w8, uxtw #2]
   24afc:	mov	w8, #0x1                   	// #1
   24b00:	cbnz	w8, 24b54 <ZSTD_endStream@@Base+0x16c00>
   24b04:	b	24dec <ZSTD_endStream@@Base+0x16e98>
   24b08:	mov	x0, xzr
   24b0c:	cmp	x0, x22
   24b10:	b.ls	24ae8 <ZSTD_endStream@@Base+0x16b94>  // b.plast
   24b14:	ldur	x10, [x29, #-8]
   24b18:	add	x9, x21, x0
   24b1c:	sub	w8, w19, w24
   24b20:	cmp	x9, x10
   24b24:	ldur	x9, [x29, #-16]
   24b28:	str	x8, [x9]
   24b2c:	b.eq	24b48 <ZSTD_endStream@@Base+0x16bf4>  // b.none
   24b30:	mov	x22, x0
   24b34:	cmp	w24, w26
   24b38:	b.hi	24af0 <ZSTD_endStream@@Base+0x16b9c>  // b.pmore
   24b3c:	mov	w8, wzr
   24b40:	cbnz	w8, 24b54 <ZSTD_endStream@@Base+0x16c00>
   24b44:	b	24dec <ZSTD_endStream@@Base+0x16e98>
   24b48:	mov	w8, wzr
   24b4c:	mov	x22, x0
   24b50:	cbz	w8, 24dec <ZSTD_endStream@@Base+0x16e98>
   24b54:	subs	w28, w28, #0x1
   24b58:	b.eq	24dec <ZSTD_endStream@@Base+0x16e98>  // b.none
   24b5c:	cmp	w24, w20
   24b60:	b.hi	24ac0 <ZSTD_endStream@@Base+0x16b6c>  // b.pmore
   24b64:	b	24dec <ZSTD_endStream@@Base+0x16e98>
   24b68:	mov	w22, #0x3                   	// #3
   24b6c:	ldr	x8, [x23, #176]
   24b70:	mov	w2, #0x6                   	// #6
   24b74:	mov	x0, x21
   24b78:	ldr	x9, [x8, #64]
   24b7c:	ldr	w19, [x8, #24]
   24b80:	ldr	x23, [x8, #48]
   24b84:	str	x9, [sp, #32]
   24b88:	ldp	w9, w1, [x8, #188]
   24b8c:	ldp	x10, x24, [x8]
   24b90:	mov	w8, #0x1                   	// #1
   24b94:	lsl	w27, w8, w9
   24b98:	sub	w26, w10, w24
   24b9c:	subs	w8, w26, w27
   24ba0:	stur	x10, [x29, #-24]
   24ba4:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   24ba8:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   24bac:	cbz	w28, 25074 <ZSTD_endStream@@Base+0x17120>
   24bb0:	ldr	w23, [x23, x0, lsl #2]
   24bb4:	cmp	w23, w19
   24bb8:	b.ls	25074 <ZSTD_endStream@@Base+0x17120>  // b.plast
   24bbc:	ldr	x8, [sp, #16]
   24bc0:	sub	w28, w28, #0x1
   24bc4:	add	x9, x25, x8
   24bc8:	stur	x9, [x29, #-32]
   24bcc:	sub	w9, w27, #0x1
   24bd0:	str	w9, [sp, #28]
   24bd4:	add	x9, x21, #0x4
   24bd8:	str	x9, [sp, #40]
   24bdc:	ldr	w9, [sp, #12]
   24be0:	sub	w8, w9, w8
   24be4:	add	w8, w8, w26
   24be8:	add	w25, w8, #0x2
   24bec:	add	x26, x24, w23, uxtw
   24bf0:	mov	x0, x26
   24bf4:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24bf8:	mov	w27, w0
   24bfc:	mov	x0, x21
   24c00:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24c04:	cmp	w27, w0
   24c08:	b.ne	24c50 <ZSTD_endStream@@Base+0x16cfc>  // b.any
   24c0c:	ldr	x0, [sp, #40]
   24c10:	ldur	x2, [x29, #-8]
   24c14:	ldp	x4, x3, [x29, #-32]
   24c18:	add	x1, x26, #0x4
   24c1c:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   24c20:	add	x8, x0, #0x4
   24c24:	cmp	x8, x22
   24c28:	b.hi	24c5c <ZSTD_endStream@@Base+0x16d08>  // b.pmore
   24c2c:	cmp	w23, w20
   24c30:	b.ls	24c84 <ZSTD_endStream@@Base+0x16d30>  // b.plast
   24c34:	ldr	w8, [sp, #28]
   24c38:	ldr	x9, [sp, #32]
   24c3c:	and	w8, w23, w8
   24c40:	ldr	w23, [x9, w8, uxtw #2]
   24c44:	mov	w9, #0x1                   	// #1
   24c48:	tbnz	w9, #0, 24c9c <ZSTD_endStream@@Base+0x16d48>
   24c4c:	b	25074 <ZSTD_endStream@@Base+0x17120>
   24c50:	mov	x8, xzr
   24c54:	cmp	x8, x22
   24c58:	b.ls	24c2c <ZSTD_endStream@@Base+0x16cd8>  // b.plast
   24c5c:	ldur	x11, [x29, #-8]
   24c60:	add	x10, x21, x8
   24c64:	sub	w9, w25, w23
   24c68:	cmp	x10, x11
   24c6c:	ldur	x10, [x29, #-16]
   24c70:	str	x9, [x10]
   24c74:	b.eq	24c90 <ZSTD_endStream@@Base+0x16d3c>  // b.none
   24c78:	mov	x22, x8
   24c7c:	cmp	w23, w20
   24c80:	b.hi	24c34 <ZSTD_endStream@@Base+0x16ce0>  // b.pmore
   24c84:	mov	w9, wzr
   24c88:	tbnz	w9, #0, 24c9c <ZSTD_endStream@@Base+0x16d48>
   24c8c:	b	25074 <ZSTD_endStream@@Base+0x17120>
   24c90:	mov	w9, wzr
   24c94:	mov	x22, x8
   24c98:	tbz	w9, #0, 25074 <ZSTD_endStream@@Base+0x17120>
   24c9c:	subs	w28, w28, #0x1
   24ca0:	b.cc	25074 <ZSTD_endStream@@Base+0x17120>  // b.lo, b.ul, b.last
   24ca4:	cmp	w23, w19
   24ca8:	b.hi	24bec <ZSTD_endStream@@Base+0x16c98>  // b.pmore
   24cac:	b	25074 <ZSTD_endStream@@Base+0x17120>
   24cb0:	ldr	x8, [x23, #64]
   24cb4:	ldr	x25, [x23, #8]
   24cb8:	mov	x1, x23
   24cbc:	mov	w13, #0x1                   	// #1
   24cc0:	stur	x8, [x29, #-32]
   24cc4:	ldr	w8, [x23, #188]
   24cc8:	ldp	w22, w10, [x23, #24]
   24ccc:	ldr	w9, [x1, #184]!
   24cd0:	ldr	w11, [x23, #32]
   24cd4:	sub	w27, w21, w25
   24cd8:	sub	w12, w27, w10
   24cdc:	lsl	w9, w13, w9
   24ce0:	cmp	w12, w9
   24ce4:	ldr	w12, [x23, #196]
   24ce8:	lsl	w19, w13, w8
   24cec:	sub	w8, w27, w9
   24cf0:	ccmp	w11, #0x0, #0x0, hi  // hi = pmore
   24cf4:	csel	w20, w8, w10, eq  // eq = none
   24cf8:	subs	w8, w27, w19
   24cfc:	mov	w3, #0x4                   	// #4
   24d00:	mov	x0, x23
   24d04:	mov	x2, x21
   24d08:	csel	w26, wzr, w8, cc  // cc = lo, ul, last
   24d0c:	lsl	w28, w13, w12
   24d10:	bl	1c224 <ZSTD_endStream@@Base+0xe2d0>
   24d14:	cmp	w0, w20
   24d18:	str	x22, [sp, #16]
   24d1c:	str	w27, [sp, #12]
   24d20:	b.ls	24f30 <ZSTD_endStream@@Base+0x16fdc>  // b.plast
   24d24:	mov	w8, w27
   24d28:	sub	w9, w19, #0x1
   24d2c:	add	w19, w27, #0x2
   24d30:	ldur	x27, [x29, #-32]
   24d34:	mov	w24, w0
   24d38:	mov	w22, #0x3                   	// #3
   24d3c:	stur	w9, [x29, #-24]
   24d40:	add	x1, x25, w24, uxtw
   24d44:	ldrb	w8, [x1, x22]
   24d48:	ldrb	w9, [x21, x22]
   24d4c:	cmp	w8, w9
   24d50:	b.ne	24d88 <ZSTD_endStream@@Base+0x16e34>  // b.any
   24d54:	ldur	x2, [x29, #-8]
   24d58:	mov	x0, x21
   24d5c:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   24d60:	cmp	x0, x22
   24d64:	b.hi	24d94 <ZSTD_endStream@@Base+0x16e40>  // b.pmore
   24d68:	cmp	w24, w26
   24d6c:	b.ls	24dbc <ZSTD_endStream@@Base+0x16e68>  // b.plast
   24d70:	ldur	w8, [x29, #-24]
   24d74:	and	w8, w24, w8
   24d78:	ldr	w24, [x27, w8, uxtw #2]
   24d7c:	mov	w8, #0x1                   	// #1
   24d80:	cbnz	w8, 24dd4 <ZSTD_endStream@@Base+0x16e80>
   24d84:	b	24f34 <ZSTD_endStream@@Base+0x16fe0>
   24d88:	mov	x0, xzr
   24d8c:	cmp	x0, x22
   24d90:	b.ls	24d68 <ZSTD_endStream@@Base+0x16e14>  // b.plast
   24d94:	ldur	x10, [x29, #-8]
   24d98:	add	x9, x21, x0
   24d9c:	sub	w8, w19, w24
   24da0:	cmp	x9, x10
   24da4:	ldur	x9, [x29, #-16]
   24da8:	str	x8, [x9]
   24dac:	b.eq	24dc8 <ZSTD_endStream@@Base+0x16e74>  // b.none
   24db0:	mov	x22, x0
   24db4:	cmp	w24, w26
   24db8:	b.hi	24d70 <ZSTD_endStream@@Base+0x16e1c>  // b.pmore
   24dbc:	mov	w8, wzr
   24dc0:	cbnz	w8, 24dd4 <ZSTD_endStream@@Base+0x16e80>
   24dc4:	b	24f34 <ZSTD_endStream@@Base+0x16fe0>
   24dc8:	mov	w8, wzr
   24dcc:	mov	x22, x0
   24dd0:	cbz	w8, 24f34 <ZSTD_endStream@@Base+0x16fe0>
   24dd4:	subs	w28, w28, #0x1
   24dd8:	b.eq	24f34 <ZSTD_endStream@@Base+0x16fe0>  // b.none
   24ddc:	cmp	w24, w20
   24de0:	b.hi	24d40 <ZSTD_endStream@@Base+0x16dec>  // b.pmore
   24de4:	b	24f34 <ZSTD_endStream@@Base+0x16fe0>
   24de8:	mov	w22, #0x3                   	// #3
   24dec:	ldr	x8, [x23, #176]
   24df0:	mov	w2, #0x5                   	// #5
   24df4:	mov	x0, x21
   24df8:	ldr	x9, [x8, #64]
   24dfc:	ldr	w19, [x8, #24]
   24e00:	ldr	x20, [x8, #48]
   24e04:	str	x9, [sp, #32]
   24e08:	ldp	w9, w1, [x8, #188]
   24e0c:	ldp	x10, x24, [x8]
   24e10:	mov	w8, #0x1                   	// #1
   24e14:	lsl	w27, w8, w9
   24e18:	sub	w26, w10, w24
   24e1c:	subs	w8, w26, w27
   24e20:	stur	x10, [x29, #-24]
   24e24:	csel	w23, wzr, w8, cc  // cc = lo, ul, last
   24e28:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   24e2c:	cbz	w28, 25074 <ZSTD_endStream@@Base+0x17120>
   24e30:	ldr	w20, [x20, x0, lsl #2]
   24e34:	cmp	w20, w19
   24e38:	b.ls	25074 <ZSTD_endStream@@Base+0x17120>  // b.plast
   24e3c:	ldr	x8, [sp, #16]
   24e40:	sub	w28, w28, #0x1
   24e44:	add	x9, x25, x8
   24e48:	stur	x9, [x29, #-32]
   24e4c:	sub	w9, w27, #0x1
   24e50:	str	w9, [sp, #28]
   24e54:	add	x9, x21, #0x4
   24e58:	str	x9, [sp, #40]
   24e5c:	ldr	w9, [sp, #12]
   24e60:	sub	w8, w9, w8
   24e64:	add	w8, w8, w26
   24e68:	add	w25, w8, #0x2
   24e6c:	add	x26, x24, w20, uxtw
   24e70:	mov	x0, x26
   24e74:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24e78:	mov	w27, w0
   24e7c:	mov	x0, x21
   24e80:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24e84:	cmp	w27, w0
   24e88:	b.ne	24ed0 <ZSTD_endStream@@Base+0x16f7c>  // b.any
   24e8c:	ldr	x0, [sp, #40]
   24e90:	ldur	x2, [x29, #-8]
   24e94:	ldp	x4, x3, [x29, #-32]
   24e98:	add	x1, x26, #0x4
   24e9c:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   24ea0:	add	x8, x0, #0x4
   24ea4:	cmp	x8, x22
   24ea8:	b.hi	24edc <ZSTD_endStream@@Base+0x16f88>  // b.pmore
   24eac:	cmp	w20, w23
   24eb0:	b.ls	24f04 <ZSTD_endStream@@Base+0x16fb0>  // b.plast
   24eb4:	ldr	w8, [sp, #28]
   24eb8:	ldr	x9, [sp, #32]
   24ebc:	and	w8, w20, w8
   24ec0:	ldr	w20, [x9, w8, uxtw #2]
   24ec4:	mov	w9, #0x1                   	// #1
   24ec8:	tbnz	w9, #0, 24f1c <ZSTD_endStream@@Base+0x16fc8>
   24ecc:	b	25074 <ZSTD_endStream@@Base+0x17120>
   24ed0:	mov	x8, xzr
   24ed4:	cmp	x8, x22
   24ed8:	b.ls	24eac <ZSTD_endStream@@Base+0x16f58>  // b.plast
   24edc:	ldur	x11, [x29, #-8]
   24ee0:	add	x10, x21, x8
   24ee4:	sub	w9, w25, w20
   24ee8:	cmp	x10, x11
   24eec:	ldur	x10, [x29, #-16]
   24ef0:	str	x9, [x10]
   24ef4:	b.eq	24f10 <ZSTD_endStream@@Base+0x16fbc>  // b.none
   24ef8:	mov	x22, x8
   24efc:	cmp	w20, w23
   24f00:	b.hi	24eb4 <ZSTD_endStream@@Base+0x16f60>  // b.pmore
   24f04:	mov	w9, wzr
   24f08:	tbnz	wzr, #0, 24f1c <ZSTD_endStream@@Base+0x16fc8>
   24f0c:	b	25074 <ZSTD_endStream@@Base+0x17120>
   24f10:	mov	x22, x8
   24f14:	mov	w9, wzr
   24f18:	tbz	wzr, #0, 25074 <ZSTD_endStream@@Base+0x17120>
   24f1c:	subs	w28, w28, #0x1
   24f20:	b.cc	25074 <ZSTD_endStream@@Base+0x17120>  // b.lo, b.ul, b.last
   24f24:	cmp	w20, w19
   24f28:	b.hi	24e6c <ZSTD_endStream@@Base+0x16f18>  // b.pmore
   24f2c:	b	25074 <ZSTD_endStream@@Base+0x17120>
   24f30:	mov	w22, #0x3                   	// #3
   24f34:	ldr	x8, [x23, #176]
   24f38:	mov	w2, #0x4                   	// #4
   24f3c:	mov	x0, x21
   24f40:	ldr	x9, [x8, #64]
   24f44:	ldr	w19, [x8, #24]
   24f48:	ldr	x23, [x8, #48]
   24f4c:	str	x9, [sp, #32]
   24f50:	ldp	w9, w1, [x8, #188]
   24f54:	ldp	x10, x24, [x8]
   24f58:	mov	w8, #0x1                   	// #1
   24f5c:	lsl	w27, w8, w9
   24f60:	sub	w26, w10, w24
   24f64:	subs	w8, w26, w27
   24f68:	stur	x10, [x29, #-24]
   24f6c:	csel	w20, wzr, w8, cc  // cc = lo, ul, last
   24f70:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   24f74:	cbz	w28, 25074 <ZSTD_endStream@@Base+0x17120>
   24f78:	ldr	w23, [x23, x0, lsl #2]
   24f7c:	cmp	w23, w19
   24f80:	b.ls	25074 <ZSTD_endStream@@Base+0x17120>  // b.plast
   24f84:	ldr	x8, [sp, #16]
   24f88:	sub	w28, w28, #0x1
   24f8c:	add	x9, x25, x8
   24f90:	stur	x9, [x29, #-32]
   24f94:	sub	w9, w27, #0x1
   24f98:	str	w9, [sp, #28]
   24f9c:	add	x9, x21, #0x4
   24fa0:	str	x9, [sp, #40]
   24fa4:	ldr	w9, [sp, #12]
   24fa8:	sub	w8, w9, w8
   24fac:	add	w8, w8, w26
   24fb0:	add	w25, w8, #0x2
   24fb4:	add	x26, x24, w23, uxtw
   24fb8:	mov	x0, x26
   24fbc:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24fc0:	mov	w27, w0
   24fc4:	mov	x0, x21
   24fc8:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   24fcc:	cmp	w27, w0
   24fd0:	b.ne	25018 <ZSTD_endStream@@Base+0x170c4>  // b.any
   24fd4:	ldr	x0, [sp, #40]
   24fd8:	ldur	x2, [x29, #-8]
   24fdc:	ldp	x4, x3, [x29, #-32]
   24fe0:	add	x1, x26, #0x4
   24fe4:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   24fe8:	add	x8, x0, #0x4
   24fec:	cmp	x8, x22
   24ff0:	b.hi	25024 <ZSTD_endStream@@Base+0x170d0>  // b.pmore
   24ff4:	cmp	w23, w20
   24ff8:	b.ls	2504c <ZSTD_endStream@@Base+0x170f8>  // b.plast
   24ffc:	ldr	w8, [sp, #28]
   25000:	ldr	x9, [sp, #32]
   25004:	and	w8, w23, w8
   25008:	ldr	w23, [x9, w8, uxtw #2]
   2500c:	mov	w9, #0x1                   	// #1
   25010:	tbnz	w9, #0, 25064 <ZSTD_endStream@@Base+0x17110>
   25014:	b	25074 <ZSTD_endStream@@Base+0x17120>
   25018:	mov	x8, xzr
   2501c:	cmp	x8, x22
   25020:	b.ls	24ff4 <ZSTD_endStream@@Base+0x170a0>  // b.plast
   25024:	ldur	x11, [x29, #-8]
   25028:	add	x10, x21, x8
   2502c:	sub	w9, w25, w23
   25030:	cmp	x10, x11
   25034:	ldur	x10, [x29, #-16]
   25038:	str	x9, [x10]
   2503c:	b.eq	25058 <ZSTD_endStream@@Base+0x17104>  // b.none
   25040:	mov	x22, x8
   25044:	cmp	w23, w20
   25048:	b.hi	24ffc <ZSTD_endStream@@Base+0x170a8>  // b.pmore
   2504c:	mov	w9, wzr
   25050:	tbnz	wzr, #0, 25064 <ZSTD_endStream@@Base+0x17110>
   25054:	b	25074 <ZSTD_endStream@@Base+0x17120>
   25058:	mov	x22, x8
   2505c:	mov	w9, wzr
   25060:	tbz	wzr, #0, 25074 <ZSTD_endStream@@Base+0x17120>
   25064:	subs	w28, w28, #0x1
   25068:	b.cc	25074 <ZSTD_endStream@@Base+0x17120>  // b.lo, b.ul, b.last
   2506c:	cmp	w23, w19
   25070:	b.hi	24fb4 <ZSTD_endStream@@Base+0x17060>  // b.pmore
   25074:	mov	x0, x22
   25078:	ldp	x20, x19, [sp, #160]
   2507c:	ldp	x22, x21, [sp, #144]
   25080:	ldp	x24, x23, [sp, #128]
   25084:	ldp	x26, x25, [sp, #112]
   25088:	ldp	x28, x27, [sp, #96]
   2508c:	ldp	x29, x30, [sp, #80]
   25090:	add	sp, sp, #0xb0
   25094:	ret
   25098:	stp	x29, x30, [sp, #-48]!
   2509c:	stp	x22, x21, [sp, #16]
   250a0:	stp	x20, x19, [sp, #32]
   250a4:	ldr	w8, [x0, #200]
   250a8:	mov	x19, x3
   250ac:	mov	x20, x2
   250b0:	mov	x21, x0
   250b4:	sub	w9, w8, #0x6
   250b8:	cmp	w9, #0x2
   250bc:	mov	x22, x1
   250c0:	mov	x29, sp
   250c4:	b.cs	250f4 <ZSTD_endStream@@Base+0x171a0>  // b.hs, b.nlast
   250c8:	ldr	x8, [x21, #8]
   250cc:	ldr	w9, [x21, #36]
   250d0:	add	x8, x8, x9
   250d4:	cmp	x8, x22
   250d8:	b.hi	2513c <ZSTD_endStream@@Base+0x171e8>  // b.pmore
   250dc:	mov	w2, #0x6                   	// #6
   250e0:	mov	x0, x21
   250e4:	mov	x1, x22
   250e8:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   250ec:	mov	w4, #0x6                   	// #6
   250f0:	b	25158 <ZSTD_endStream@@Base+0x17204>
   250f4:	cmp	w8, #0x5
   250f8:	b.ne	25128 <ZSTD_endStream@@Base+0x171d4>  // b.any
   250fc:	ldr	x8, [x21, #8]
   25100:	ldr	w9, [x21, #36]
   25104:	add	x8, x8, x9
   25108:	cmp	x8, x22
   2510c:	b.hi	2513c <ZSTD_endStream@@Base+0x171e8>  // b.pmore
   25110:	mov	w2, #0x5                   	// #5
   25114:	mov	x0, x21
   25118:	mov	x1, x22
   2511c:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   25120:	mov	w4, #0x5                   	// #5
   25124:	b	25158 <ZSTD_endStream@@Base+0x17204>
   25128:	ldr	x8, [x21, #8]
   2512c:	ldr	w9, [x21, #36]
   25130:	add	x8, x8, x9
   25134:	cmp	x8, x22
   25138:	b.ls	25144 <ZSTD_endStream@@Base+0x171f0>  // b.plast
   2513c:	mov	x0, xzr
   25140:	b	25170 <ZSTD_endStream@@Base+0x1721c>
   25144:	mov	w2, #0x4                   	// #4
   25148:	mov	x0, x21
   2514c:	mov	x1, x22
   25150:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   25154:	mov	w4, #0x4                   	// #4
   25158:	mov	x0, x21
   2515c:	mov	x1, x22
   25160:	mov	x2, x20
   25164:	mov	x3, x19
   25168:	mov	w5, wzr
   2516c:	bl	25428 <ZSTD_endStream@@Base+0x174d4>
   25170:	ldp	x20, x19, [sp, #32]
   25174:	ldp	x22, x21, [sp, #16]
   25178:	ldp	x29, x30, [sp], #48
   2517c:	ret
   25180:	stp	x29, x30, [sp, #-64]!
   25184:	sub	x8, x3, x1
   25188:	add	x8, x0, x8
   2518c:	cmp	x8, x2
   25190:	stp	x20, x19, [sp, #48]
   25194:	mov	x20, x2
   25198:	csel	x2, x8, x2, cc  // cc = lo, ul, last
   2519c:	stp	x24, x23, [sp, #16]
   251a0:	stp	x22, x21, [sp, #32]
   251a4:	mov	x29, sp
   251a8:	mov	x19, x4
   251ac:	mov	x23, x3
   251b0:	mov	x24, x1
   251b4:	mov	x22, x0
   251b8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   251bc:	add	x8, x24, x0
   251c0:	mov	x21, x0
   251c4:	cmp	x8, x23
   251c8:	b.ne	251e0 <ZSTD_endStream@@Base+0x1728c>  // b.any
   251cc:	add	x0, x22, x21
   251d0:	mov	x1, x19
   251d4:	mov	x2, x20
   251d8:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   251dc:	add	x21, x0, x21
   251e0:	mov	x0, x21
   251e4:	ldp	x20, x19, [sp, #48]
   251e8:	ldp	x22, x21, [sp, #32]
   251ec:	ldp	x24, x23, [sp, #16]
   251f0:	ldp	x29, x30, [sp], #64
   251f4:	ret
   251f8:	stp	x29, x30, [sp, #-80]!
   251fc:	stp	x26, x25, [sp, #16]
   25200:	sub	x25, x2, #0x7
   25204:	stp	x22, x21, [sp, #48]
   25208:	stp	x20, x19, [sp, #64]
   2520c:	mov	x20, x2
   25210:	mov	x19, x0
   25214:	cmp	x25, x0
   25218:	mov	x21, x1
   2521c:	stp	x24, x23, [sp, #32]
   25220:	mov	x29, sp
   25224:	b.ls	25258 <ZSTD_endStream@@Base+0x17304>  // b.plast
   25228:	mov	x0, x21
   2522c:	bl	25d14 <ZSTD_endStream@@Base+0x17dc0>
   25230:	mov	x22, x0
   25234:	mov	x0, x19
   25238:	bl	25d14 <ZSTD_endStream@@Base+0x17dc0>
   2523c:	eor	x0, x0, x22
   25240:	cbz	x0, 252f8 <ZSTD_endStream@@Base+0x173a4>
   25244:	bl	25d1c <ZSTD_endStream@@Base+0x17dc8>
   25248:	mov	w8, wzr
   2524c:	mov	w23, w0
   25250:	cbz	w8, 252dc <ZSTD_endStream@@Base+0x17388>
   25254:	b	25300 <ZSTD_endStream@@Base+0x173ac>
   25258:	mov	x22, x19
   2525c:	sub	x8, x20, #0x3
   25260:	cmp	x22, x8
   25264:	b.cs	2528c <ZSTD_endStream@@Base+0x17338>  // b.hs, b.nlast
   25268:	mov	x0, x21
   2526c:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   25270:	mov	w23, w0
   25274:	mov	x0, x22
   25278:	bl	2473c <ZSTD_endStream@@Base+0x167e8>
   2527c:	cmp	w23, w0
   25280:	b.ne	2528c <ZSTD_endStream@@Base+0x17338>  // b.any
   25284:	add	x22, x22, #0x4
   25288:	add	x21, x21, #0x4
   2528c:	sub	x8, x20, #0x1
   25290:	cmp	x22, x8
   25294:	b.cs	252bc <ZSTD_endStream@@Base+0x17368>  // b.hs, b.nlast
   25298:	mov	x0, x21
   2529c:	bl	25d2c <ZSTD_endStream@@Base+0x17dd8>
   252a0:	and	w23, w0, #0xffff
   252a4:	mov	x0, x22
   252a8:	bl	25d2c <ZSTD_endStream@@Base+0x17dd8>
   252ac:	cmp	w23, w0, uxth
   252b0:	b.ne	252bc <ZSTD_endStream@@Base+0x17368>  // b.any
   252b4:	add	x22, x22, #0x2
   252b8:	add	x21, x21, #0x2
   252bc:	cmp	x22, x20
   252c0:	b.cs	252d8 <ZSTD_endStream@@Base+0x17384>  // b.hs, b.nlast
   252c4:	mov	x9, x22
   252c8:	ldrb	w8, [x21]
   252cc:	ldrb	w10, [x9], #1
   252d0:	cmp	w8, w10
   252d4:	csel	x22, x9, x22, eq  // eq = none
   252d8:	sub	x23, x22, x19
   252dc:	mov	x0, x23
   252e0:	ldp	x20, x19, [sp, #64]
   252e4:	ldp	x22, x21, [sp, #48]
   252e8:	ldp	x24, x23, [sp, #32]
   252ec:	ldp	x26, x25, [sp, #16]
   252f0:	ldp	x29, x30, [sp], #80
   252f4:	ret
   252f8:	mov	w8, #0x1                   	// #1
   252fc:	cbz	w8, 252dc <ZSTD_endStream@@Base+0x17388>
   25300:	add	x22, x19, #0x8
   25304:	add	x21, x21, #0x8
   25308:	mov	w26, #0x1                   	// #1
   2530c:	b	2531c <ZSTD_endStream@@Base+0x173c8>
   25310:	add	x22, x22, #0x8
   25314:	add	x21, x21, #0x8
   25318:	tbz	w26, #0, 252dc <ZSTD_endStream@@Base+0x17388>
   2531c:	cmp	x22, x25
   25320:	b.cs	2525c <ZSTD_endStream@@Base+0x17308>  // b.hs, b.nlast
   25324:	mov	x0, x21
   25328:	bl	25d14 <ZSTD_endStream@@Base+0x17dc0>
   2532c:	mov	x24, x0
   25330:	mov	x0, x22
   25334:	bl	25d14 <ZSTD_endStream@@Base+0x17dc0>
   25338:	eor	x0, x0, x24
   2533c:	cbz	x0, 25310 <ZSTD_endStream@@Base+0x173bc>
   25340:	bl	25d1c <ZSTD_endStream@@Base+0x17dc8>
   25344:	add	x22, x22, w0, uxtw
   25348:	sub	x23, x22, x19
   2534c:	tbnz	wzr, #0, 2531c <ZSTD_endStream@@Base+0x173c8>
   25350:	b	252dc <ZSTD_endStream@@Base+0x17388>
   25354:	clz	w8, w0
   25358:	eor	w0, w8, #0x1f
   2535c:	ret
   25360:	sub	sp, sp, #0x70
   25364:	stp	x29, x30, [sp, #16]
   25368:	stp	x28, x27, [sp, #32]
   2536c:	stp	x26, x25, [sp, #48]
   25370:	stp	x24, x23, [sp, #64]
   25374:	stp	x22, x21, [sp, #80]
   25378:	stp	x20, x19, [sp, #96]
   2537c:	ldr	x22, [x0, #8]
   25380:	ldr	w24, [x0, #36]
   25384:	mov	x19, x0
   25388:	add	x29, sp, #0x10
   2538c:	sub	x8, x1, x22
   25390:	cmp	w24, w8
   25394:	str	x8, [sp, #8]
   25398:	b.cs	25400 <ZSTD_endStream@@Base+0x174ac>  // b.hs, b.nlast
   2539c:	ldp	w8, w21, [x19, #188]
   253a0:	ldr	x10, [sp, #8]
   253a4:	ldr	x25, [x19, #48]
   253a8:	ldr	x26, [x19, #64]
   253ac:	mov	w9, #0xffffffff            	// #-1
   253b0:	sub	w8, w8, #0x1
   253b4:	lsl	w8, w9, w8
   253b8:	mov	w20, w2
   253bc:	and	x27, x10, #0xffffffff
   253c0:	eor	w28, w8, #0x7fffffff
   253c4:	mov	w23, #0x1                   	// #1
   253c8:	add	x0, x22, x24
   253cc:	mov	w1, w21
   253d0:	mov	w2, w20
   253d4:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   253d8:	lsl	x8, x0, #2
   253dc:	ldr	w10, [x25, x8]
   253e0:	and	w9, w28, w24
   253e4:	lsl	w9, w9, #1
   253e8:	str	w24, [x25, x8]
   253ec:	add	x24, x24, #0x1
   253f0:	add	x8, x26, w9, uxtw #2
   253f4:	cmp	x27, x24
   253f8:	stp	w10, w23, [x8]
   253fc:	b.ne	253c8 <ZSTD_endStream@@Base+0x17474>  // b.any
   25400:	ldr	x8, [sp, #8]
   25404:	str	w8, [x19, #36]
   25408:	ldp	x20, x19, [sp, #96]
   2540c:	ldp	x22, x21, [sp, #80]
   25410:	ldp	x24, x23, [sp, #64]
   25414:	ldp	x26, x25, [sp, #48]
   25418:	ldp	x28, x27, [sp, #32]
   2541c:	ldp	x29, x30, [sp, #16]
   25420:	add	sp, sp, #0x70
   25424:	ret
   25428:	sub	sp, sp, #0x100
   2542c:	stp	x29, x30, [sp, #160]
   25430:	stp	x28, x27, [sp, #176]
   25434:	stp	x26, x25, [sp, #192]
   25438:	stp	x24, x23, [sp, #208]
   2543c:	stp	x22, x21, [sp, #224]
   25440:	stp	x20, x19, [sp, #240]
   25444:	ldr	w8, [x0, #192]
   25448:	ldr	x20, [x0, #48]
   2544c:	mov	x22, x2
   25450:	mov	x23, x0
   25454:	mov	x19, x1
   25458:	mov	x0, x1
   2545c:	mov	w1, w8
   25460:	mov	w2, w4
   25464:	add	x29, sp, #0xa0
   25468:	mov	w24, w5
   2546c:	str	x3, [sp, #80]
   25470:	str	w4, [sp, #12]
   25474:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   25478:	stp	x0, x20, [x29, #-64]
   2547c:	ldr	x8, [x23, #8]
   25480:	ldr	w2, [x23, #184]
   25484:	ldr	w21, [x20, x0, lsl #2]
   25488:	mov	x0, x23
   2548c:	sub	w28, w19, w8
   25490:	mov	w1, w28
   25494:	str	x19, [sp, #64]
   25498:	stur	x8, [x29, #-40]
   2549c:	bl	25860 <ZSTD_endStream@@Base+0x1790c>
   254a0:	ldr	w8, [x23, #188]
   254a4:	mov	w9, #0xffffffff            	// #-1
   254a8:	ldr	w10, [x23, #196]
   254ac:	ldr	x12, [x23, #64]
   254b0:	sub	w8, w8, #0x1
   254b4:	lsl	w8, w9, w8
   254b8:	mvn	w26, w8
   254bc:	subs	w8, w28, w26
   254c0:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   254c4:	mov	w11, #0x1                   	// #1
   254c8:	cmp	w8, w0
   254cc:	csel	w27, w8, w0, hi  // hi = pmore
   254d0:	lsl	w20, w11, w10
   254d4:	mov	w1, wzr
   254d8:	cmp	w21, w27
   254dc:	add	x19, x12, #0x4
   254e0:	mov	w25, w20
   254e4:	stur	w0, [x29, #-48]
   254e8:	stur	w8, [x29, #-68]
   254ec:	stur	x12, [x29, #-24]
   254f0:	b.ls	2553c <ZSTD_endStream@@Base+0x175e8>  // b.plast
   254f4:	mov	w8, wzr
   254f8:	mov	w25, w20
   254fc:	and	w9, w21, w26
   25500:	lsl	w9, w9, #1
   25504:	ldr	w10, [x19, w9, uxtw #2]
   25508:	cmp	w25, #0x2
   2550c:	b.cc	2583c <ZSTD_endStream@@Base+0x178e8>  // b.lo, b.ul, b.last
   25510:	cmp	w10, #0x1
   25514:	b.ne	2583c <ZSTD_endStream@@Base+0x178e8>  // b.any
   25518:	lsl	x9, x9, #2
   2551c:	str	w8, [x19, x9]
   25520:	ldur	x8, [x29, #-24]
   25524:	mov	w1, w21
   25528:	sub	w25, w25, #0x1
   2552c:	ldr	w21, [x8, x9]
   25530:	mov	w8, w1
   25534:	cmp	w21, w27
   25538:	b.hi	254fc <ZSTD_endStream@@Base+0x175a8>  // b.pmore
   2553c:	cbz	w1, 25570 <ZSTD_endStream@@Base+0x1761c>
   25540:	and	w8, w1, w26
   25544:	lsl	w8, w8, #1
   25548:	ldr	w21, [x19, w8, uxtw #2]
   2554c:	mov	x0, x23
   25550:	mov	x2, x22
   25554:	mov	w3, w25
   25558:	mov	w4, w27
   2555c:	mov	w5, w24
   25560:	bl	25884 <ZSTD_endStream@@Base+0x17930>
   25564:	add	w25, w25, #0x1
   25568:	mov	w1, w21
   2556c:	cbnz	w21, 25540 <ZSTD_endStream@@Base+0x175ec>
   25570:	add	w9, w28, #0x9
   25574:	stur	w9, [x29, #-44]
   25578:	ldur	x9, [x29, #-64]
   2557c:	add	w12, w28, #0x1
   25580:	str	w12, [sp, #60]
   25584:	ldur	x12, [x29, #-56]
   25588:	lsl	x9, x9, #2
   2558c:	ldr	x10, [x23, #16]
   25590:	ldr	w11, [x23, #24]
   25594:	ldr	w25, [x12, x9]
   25598:	str	w28, [x12, x9]
   2559c:	ldur	x9, [x29, #-24]
   255a0:	and	w8, w26, w28
   255a4:	lsl	w8, w8, #1
   255a8:	ldr	x27, [sp, #64]
   255ac:	add	x8, x9, w8, uxtw #2
   255b0:	stur	x8, [x29, #-56]
   255b4:	add	x8, x8, #0x4
   255b8:	stur	x8, [x29, #-64]
   255bc:	add	x8, x10, x11
   255c0:	stp	x8, x10, [sp, #40]
   255c4:	ldur	x8, [x29, #-40]
   255c8:	stur	x22, [x29, #-16]
   255cc:	stur	w24, [x29, #-28]
   255d0:	mov	x24, xzr
   255d4:	add	x8, x8, x11
   255d8:	mov	x19, xzr
   255dc:	mov	x22, xzr
   255e0:	str	x8, [sp, #32]
   255e4:	add	w8, w28, #0x2
   255e8:	str	x23, [sp, #16]
   255ec:	str	x11, [sp, #72]
   255f0:	str	w8, [sp, #28]
   255f4:	b	25614 <ZSTD_endStream@@Base+0x176c0>
   255f8:	add	x8, x8, #0x4
   255fc:	mov	x24, x21
   25600:	stur	x8, [x29, #-56]
   25604:	ldr	w25, [x8]
   25608:	mov	x22, x11
   2560c:	mov	w8, #0x1                   	// #1
   25610:	tbz	w8, #0, 257c0 <ZSTD_endStream@@Base+0x1786c>
   25614:	subs	w20, w20, #0x1
   25618:	b.cc	257c0 <ZSTD_endStream@@Base+0x1786c>  // b.lo, b.ul, b.last
   2561c:	ldur	w8, [x29, #-48]
   25620:	cmp	w25, w8
   25624:	b.ls	257c0 <ZSTD_endStream@@Base+0x1786c>  // b.plast
   25628:	ldur	w8, [x29, #-28]
   2562c:	cmp	x24, x19
   25630:	csel	x21, x24, x19, cc  // cc = lo, ul, last
   25634:	cmp	w8, #0x1
   25638:	b.ne	2568c <ZSTD_endStream@@Base+0x17738>  // b.any
   2563c:	ldr	x9, [sp, #72]
   25640:	mov	w23, w25
   25644:	add	x8, x21, x23
   25648:	cmp	x8, x9
   2564c:	b.cs	2568c <ZSTD_endStream@@Base+0x17738>  // b.hs, b.nlast
   25650:	ldp	x3, x8, [sp, #40]
   25654:	ldur	x2, [x29, #-16]
   25658:	ldr	x4, [sp, #32]
   2565c:	add	x0, x27, x21
   25660:	add	x28, x8, x23
   25664:	add	x1, x28, x21
   25668:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   2566c:	ldur	x9, [x29, #-40]
   25670:	ldr	x10, [sp, #72]
   25674:	add	x21, x0, x21
   25678:	add	x8, x21, x23
   2567c:	add	x9, x9, x23
   25680:	cmp	x8, x10
   25684:	csel	x23, x28, x9, cc  // cc = lo, ul, last
   25688:	b	256a8 <ZSTD_endStream@@Base+0x17754>
   2568c:	ldur	x8, [x29, #-40]
   25690:	ldur	x2, [x29, #-16]
   25694:	add	x0, x27, x21
   25698:	add	x23, x8, w25, uxtw
   2569c:	add	x1, x23, x21
   256a0:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   256a4:	add	x21, x0, x21
   256a8:	mov	x11, x22
   256ac:	cmp	x21, x22
   256b0:	b.ls	25728 <ZSTD_endStream@@Base+0x177d4>  // b.plast
   256b4:	ldur	w10, [x29, #-44]
   256b8:	add	w9, w25, w21
   256bc:	sub	w27, w21, w11
   256c0:	sub	w8, w10, w25
   256c4:	cmp	x21, x8
   256c8:	ldr	w8, [sp, #60]
   256cc:	csel	w10, w9, w10, hi  // hi = pmore
   256d0:	stur	w10, [x29, #-44]
   256d4:	sub	w0, w8, w25
   256d8:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   256dc:	ldr	x8, [sp, #80]
   256e0:	mov	w28, w0
   256e4:	ldr	w8, [x8]
   256e8:	add	w0, w8, #0x1
   256ec:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   256f0:	sub	w8, w28, w0
   256f4:	cmp	w8, w27, lsl #2
   256f8:	b.ge	25710 <ZSTD_endStream@@Base+0x177bc>  // b.tcont
   256fc:	ldr	w8, [sp, #28]
   25700:	ldr	x9, [sp, #80]
   25704:	mov	x22, x21
   25708:	sub	w8, w8, w25
   2570c:	str	x8, [x9]
   25710:	ldr	x27, [sp, #64]
   25714:	ldur	x9, [x29, #-16]
   25718:	add	x8, x27, x21
   2571c:	cmp	x8, x9
   25720:	b.eq	257ac <ZSTD_endStream@@Base+0x17858>  // b.none
   25724:	mov	x11, x22
   25728:	ldrb	w8, [x23, x21]
   2572c:	ldrb	w9, [x27, x21]
   25730:	and	w10, w25, w26
   25734:	lsl	w10, w10, #1
   25738:	cmp	w8, w9
   2573c:	ldur	x8, [x29, #-24]
   25740:	add	x8, x8, w10, uxtw #2
   25744:	b.cs	25774 <ZSTD_endStream@@Base+0x17820>  // b.hs, b.nlast
   25748:	ldur	w9, [x29, #-68]
   2574c:	cmp	w25, w9
   25750:	ldur	x9, [x29, #-56]
   25754:	str	w25, [x9]
   25758:	b.hi	255f8 <ZSTD_endStream@@Base+0x176a4>  // b.pmore
   2575c:	sub	x9, x29, #0x4
   25760:	mov	x22, x11
   25764:	mov	w8, wzr
   25768:	stur	x9, [x29, #-56]
   2576c:	mov	x24, x21
   25770:	b	25610 <ZSTD_endStream@@Base+0x176bc>
   25774:	ldur	w9, [x29, #-68]
   25778:	cmp	w25, w9
   2577c:	ldur	x9, [x29, #-64]
   25780:	str	w25, [x9]
   25784:	b.ls	25794 <ZSTD_endStream@@Base+0x17840>  // b.plast
   25788:	mov	x19, x21
   2578c:	stur	x8, [x29, #-64]
   25790:	b	25604 <ZSTD_endStream@@Base+0x176b0>
   25794:	sub	x9, x29, #0x4
   25798:	mov	x22, x11
   2579c:	mov	w8, wzr
   257a0:	stur	x9, [x29, #-64]
   257a4:	mov	x19, x21
   257a8:	b	25610 <ZSTD_endStream@@Base+0x176bc>
   257ac:	ldur	w9, [x29, #-28]
   257b0:	mov	w8, wzr
   257b4:	cmp	w9, #0x2
   257b8:	csel	w20, wzr, w20, eq  // eq = none
   257bc:	b	25610 <ZSTD_endStream@@Base+0x176bc>
   257c0:	ldur	x8, [x29, #-64]
   257c4:	str	wzr, [x8]
   257c8:	ldur	w8, [x29, #-28]
   257cc:	cmp	w8, #0x2
   257d0:	ldur	x8, [x29, #-56]
   257d4:	str	wzr, [x8]
   257d8:	b.ne	25808 <ZSTD_endStream@@Base+0x178b4>  // b.any
   257dc:	cbz	w20, 25808 <ZSTD_endStream@@Base+0x178b4>
   257e0:	ldr	x19, [sp, #16]
   257e4:	ldur	x2, [x29, #-16]
   257e8:	ldr	x3, [sp, #80]
   257ec:	ldr	w6, [sp, #12]
   257f0:	mov	x0, x19
   257f4:	mov	x1, x27
   257f8:	mov	x4, x22
   257fc:	mov	w5, w20
   25800:	bl	25acc <ZSTD_endStream@@Base+0x17b78>
   25804:	b	25810 <ZSTD_endStream@@Base+0x178bc>
   25808:	ldr	x19, [sp, #16]
   2580c:	mov	x0, x22
   25810:	ldur	w8, [x29, #-44]
   25814:	sub	w8, w8, #0x8
   25818:	str	w8, [x19, #36]
   2581c:	ldp	x20, x19, [sp, #240]
   25820:	ldp	x22, x21, [sp, #224]
   25824:	ldp	x24, x23, [sp, #208]
   25828:	ldp	x26, x25, [sp, #192]
   2582c:	ldp	x28, x27, [sp, #176]
   25830:	ldp	x29, x30, [sp, #160]
   25834:	add	sp, sp, #0x100
   25838:	ret
   2583c:	cmp	w10, #0x1
   25840:	b.ne	25854 <ZSTD_endStream@@Base+0x17900>  // b.any
   25844:	ldur	x10, [x29, #-24]
   25848:	lsl	x9, x9, #2
   2584c:	str	wzr, [x19, x9]
   25850:	str	wzr, [x10, x9]
   25854:	mov	w1, w8
   25858:	cbnz	w1, 25540 <ZSTD_endStream@@Base+0x175ec>
   2585c:	b	25570 <ZSTD_endStream@@Base+0x1761c>
   25860:	ldp	w8, w10, [x0, #28]
   25864:	mov	w9, #0x1                   	// #1
   25868:	lsl	w9, w9, w2
   2586c:	sub	w12, w1, w9
   25870:	sub	w11, w1, w8
   25874:	cmp	w11, w9
   25878:	ccmp	w10, #0x0, #0x0, hi  // hi = pmore
   2587c:	csel	w0, w12, w8, eq  // eq = none
   25880:	ret
   25884:	sub	sp, sp, #0xc0
   25888:	stp	x29, x30, [sp, #96]
   2588c:	add	x29, sp, #0x60
   25890:	stp	x28, x27, [sp, #112]
   25894:	stp	x26, x25, [sp, #128]
   25898:	stp	x24, x23, [sp, #144]
   2589c:	stp	x22, x21, [sp, #160]
   258a0:	stp	x20, x19, [sp, #176]
   258a4:	stp	xzr, xzr, [x29, #-24]
   258a8:	ldr	w8, [x0, #188]
   258ac:	ldr	x11, [x0, #64]
   258b0:	mov	w9, #0xffffffff            	// #-1
   258b4:	str	w4, [sp, #44]
   258b8:	sub	w8, w8, #0x1
   258bc:	lsl	w8, w9, w8
   258c0:	bic	w9, w1, w8
   258c4:	lsl	w9, w9, #1
   258c8:	add	x9, x11, w9, uxtw #2
   258cc:	ldp	x20, x12, [x0, #8]
   258d0:	str	x9, [sp, #48]
   258d4:	ldr	w23, [x0, #24]
   258d8:	ldr	w25, [x9], #4
   258dc:	mov	x28, x11
   258e0:	ldr	w11, [x0, #28]
   258e4:	mov	w10, #0x1                   	// #1
   258e8:	stur	x9, [x29, #-40]
   258ec:	ldr	w9, [x0, #184]
   258f0:	cmp	w23, w1
   258f4:	add	x13, x12, x23
   258f8:	mvn	w8, w8
   258fc:	lsl	w9, w10, w9
   25900:	sub	w10, w1, w11
   25904:	str	x12, [sp, #32]
   25908:	csel	x12, x20, x12, ls  // ls = plast
   2590c:	csel	x22, x2, x13, ls  // ls = plast
   25910:	cmp	w10, w9
   25914:	str	w8, [sp, #40]
   25918:	sub	w8, w1, w9
   2591c:	mov	w27, w5
   25920:	mov	w21, w3
   25924:	add	x10, x20, x23
   25928:	add	x24, x12, w1, uxtw
   2592c:	csel	w8, w8, w11, hi  // hi = pmore
   25930:	stp	x10, x13, [sp]
   25934:	str	w1, [sp, #28]
   25938:	stur	w8, [x29, #-28]
   2593c:	str	x28, [sp, #16]
   25940:	b	2594c <ZSTD_endStream@@Base+0x179f8>
   25944:	mov	w9, wzr
   25948:	tbz	w9, #0, 25a9c <ZSTD_endStream@@Base+0x17b48>
   2594c:	ldur	w9, [x29, #-28]
   25950:	subs	w21, w21, #0x1
   25954:	cset	w8, cs  // cs = hs, nlast
   25958:	cmp	w25, w9
   2595c:	b.ls	25a9c <ZSTD_endStream@@Base+0x17b48>  // b.plast
   25960:	cbz	w8, 25a9c <ZSTD_endStream@@Base+0x17b48>
   25964:	ldp	x9, x8, [x29, #-24]
   25968:	cmp	x9, x8
   2596c:	csel	x19, x9, x8, cc  // cc = lo, ul, last
   25970:	cmp	w27, #0x1
   25974:	mov	x8, x20
   25978:	b.ne	259e4 <ZSTD_endStream@@Base+0x17a90>  // b.any
   2597c:	ldr	w8, [sp, #28]
   25980:	mov	w26, w25
   25984:	cmp	w23, w8
   25988:	add	x8, x19, x26
   2598c:	b.hi	259d8 <ZSTD_endStream@@Base+0x17a84>  // b.pmore
   25990:	cmp	x8, x23
   25994:	b.cs	259d8 <ZSTD_endStream@@Base+0x17a84>  // b.hs, b.nlast
   25998:	ldr	x8, [sp, #32]
   2599c:	ldp	x4, x3, [sp]
   259a0:	mov	w28, w27
   259a4:	add	x0, x24, x19
   259a8:	add	x27, x8, x26
   259ac:	add	x1, x27, x19
   259b0:	mov	x2, x22
   259b4:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   259b8:	add	x8, x0, x19
   259bc:	add	x9, x8, x26
   259c0:	add	x10, x20, x26
   259c4:	cmp	x9, x23
   259c8:	csel	x26, x27, x10, cc  // cc = lo, ul, last
   259cc:	mov	w27, w28
   259d0:	ldr	x28, [sp, #16]
   259d4:	b	259fc <ZSTD_endStream@@Base+0x17aa8>
   259d8:	cmp	x8, x23
   259dc:	ldr	x8, [sp, #32]
   259e0:	csel	x8, x8, x20, cc  // cc = lo, ul, last
   259e4:	add	x26, x8, w25, uxtw
   259e8:	add	x0, x24, x19
   259ec:	add	x1, x26, x19
   259f0:	mov	x2, x22
   259f4:	bl	251f8 <ZSTD_endStream@@Base+0x172a4>
   259f8:	add	x8, x0, x19
   259fc:	add	x9, x24, x8
   25a00:	cmp	x9, x22
   25a04:	b.eq	25944 <ZSTD_endStream@@Base+0x179f0>  // b.none
   25a08:	ldr	w11, [sp, #40]
   25a0c:	ldrb	w10, [x26, x8]
   25a10:	ldrb	w9, [x9]
   25a14:	and	w11, w25, w11
   25a18:	lsl	w11, w11, #1
   25a1c:	cmp	w10, w9
   25a20:	add	x9, x28, w11, uxtw #2
   25a24:	b.cs	25a4c <ZSTD_endStream@@Base+0x17af8>  // b.hs, b.nlast
   25a28:	ldr	w10, [sp, #44]
   25a2c:	cmp	w25, w10
   25a30:	ldr	x10, [sp, #48]
   25a34:	str	w25, [x10]
   25a38:	b.ls	25a74 <ZSTD_endStream@@Base+0x17b20>  // b.plast
   25a3c:	add	x9, x9, #0x4
   25a40:	str	x9, [sp, #48]
   25a44:	stur	x8, [x29, #-24]
   25a48:	b	25a68 <ZSTD_endStream@@Base+0x17b14>
   25a4c:	ldr	w10, [sp, #44]
   25a50:	cmp	w25, w10
   25a54:	ldur	x10, [x29, #-40]
   25a58:	str	w25, [x10]
   25a5c:	b.ls	25a88 <ZSTD_endStream@@Base+0x17b34>  // b.plast
   25a60:	stur	x9, [x29, #-40]
   25a64:	stur	x8, [x29, #-16]
   25a68:	ldr	w25, [x9]
   25a6c:	mov	w9, #0x1                   	// #1
   25a70:	b	25948 <ZSTD_endStream@@Base+0x179f4>
   25a74:	sub	x10, x29, #0x4
   25a78:	mov	w9, wzr
   25a7c:	str	x10, [sp, #48]
   25a80:	stur	x8, [x29, #-24]
   25a84:	b	25948 <ZSTD_endStream@@Base+0x179f4>
   25a88:	sub	x10, x29, #0x4
   25a8c:	mov	w9, wzr
   25a90:	stur	x10, [x29, #-40]
   25a94:	stur	x8, [x29, #-16]
   25a98:	b	25948 <ZSTD_endStream@@Base+0x179f4>
   25a9c:	ldur	x8, [x29, #-40]
   25aa0:	str	wzr, [x8]
   25aa4:	ldr	x8, [sp, #48]
   25aa8:	str	wzr, [x8]
   25aac:	ldp	x20, x19, [sp, #176]
   25ab0:	ldp	x22, x21, [sp, #160]
   25ab4:	ldp	x24, x23, [sp, #144]
   25ab8:	ldp	x26, x25, [sp, #128]
   25abc:	ldp	x28, x27, [sp, #112]
   25ac0:	ldp	x29, x30, [sp, #96]
   25ac4:	add	sp, sp, #0xc0
   25ac8:	ret
   25acc:	sub	sp, sp, #0xd0
   25ad0:	stp	x29, x30, [sp, #112]
   25ad4:	stp	x28, x27, [sp, #128]
   25ad8:	stp	x26, x25, [sp, #144]
   25adc:	stp	x24, x23, [sp, #160]
   25ae0:	stp	x22, x21, [sp, #176]
   25ae4:	stp	x20, x19, [sp, #192]
   25ae8:	ldr	x19, [x0, #176]
   25aec:	mov	x26, x2
   25af0:	mov	x25, x0
   25af4:	mov	x23, x1
   25af8:	ldr	w8, [x19, #192]
   25afc:	ldr	x22, [x19, #48]
   25b00:	mov	x0, x1
   25b04:	mov	w2, w6
   25b08:	mov	w1, w8
   25b0c:	add	x29, sp, #0x70
   25b10:	mov	w20, w5
   25b14:	mov	x21, x4
   25b18:	str	x3, [sp, #24]
   25b1c:	bl	245f0 <ZSTD_endStream@@Base+0x1669c>
   25b20:	ldr	x11, [x19, #64]
   25b24:	ldr	x8, [x25, #8]
   25b28:	ldp	x14, x13, [x19]
   25b2c:	ldp	w9, w10, [x25, #24]
   25b30:	str	x11, [sp, #40]
   25b34:	ldr	w11, [x19, #188]
   25b38:	ldr	w15, [x19, #28]
   25b3c:	mov	w12, #0xffffffff            	// #-1
   25b40:	add	x9, x8, x9
   25b44:	stur	x13, [x29, #-16]
   25b48:	sub	x13, x14, x13
   25b4c:	sub	w11, w11, #0x1
   25b50:	ldr	w24, [x22, x0, lsl #2]
   25b54:	stp	x9, x14, [x29, #-32]
   25b58:	sub	w9, w23, w8
   25b5c:	sub	w14, w10, w13
   25b60:	lsl	w10, w12, w11
   25b64:	and	x12, x13, #0xffffffff
   25b68:	stur	x12, [x29, #-40]
   25b6c:	add	w12, w9, #0x1
   25b70:	add	w9, w9, #0x2
   25b74:	sub	w11, w13, w15
   25b78:	stp	w9, w12, [sp, #8]
   25b7c:	mvn	w9, w10
   25b80:	add	x8, x8, x14
   25b84:	stur	x8, [x29, #-48]
   25b88:	sub	w8, w13, w9
   25b8c:	cmp	w11, w9
   25b90:	mov	x28, xzr
   25b94:	mov	x27, xzr
   25b98:	csel	w8, w8, w15, hi  // hi = pmore
   25b9c:	str	x14, [sp, #16]
   25ba0:	str	w9, [sp, #36]
   25ba4:	stur	w15, [x29, #-4]
   25ba8:	str	w8, [sp, #32]
   25bac:	b	25bb8 <ZSTD_endStream@@Base+0x17c64>
   25bb0:	mov	w8, #0x3                   	// #3
   25bb4:	cbnz	w8, 25cf0 <ZSTD_endStream@@Base+0x17d9c>
   25bb8:	ldur	w9, [x29, #-4]
   25bbc:	subs	w20, w20, #0x1
   25bc0:	cset	w8, cs  // cs = hs, nlast
   25bc4:	cmp	w24, w9
   25bc8:	b.ls	25cf0 <ZSTD_endStream@@Base+0x17d9c>  // b.plast
   25bcc:	cbz	w8, 25cf0 <ZSTD_endStream@@Base+0x17d9c>
   25bd0:	ldp	x3, x8, [x29, #-24]
   25bd4:	ldur	x4, [x29, #-32]
   25bd8:	cmp	x28, x27
   25bdc:	mov	w22, w24
   25be0:	csel	x19, x28, x27, cc  // cc = lo, ul, last
   25be4:	add	x25, x8, x22
   25be8:	add	x0, x23, x19
   25bec:	add	x1, x25, x19
   25bf0:	mov	x2, x26
   25bf4:	bl	25180 <ZSTD_endStream@@Base+0x1722c>
   25bf8:	ldp	x8, x10, [x29, #-48]
   25bfc:	add	x19, x0, x19
   25c00:	add	x9, x19, x22
   25c04:	add	x8, x8, x22
   25c08:	cmp	x9, x10
   25c0c:	csel	x25, x25, x8, cc  // cc = lo, ul, last
   25c10:	cmp	x19, x21
   25c14:	b.ls	25c90 <ZSTD_endStream@@Base+0x17d3c>  // b.plast
   25c18:	ldr	x8, [sp, #16]
   25c1c:	stp	x28, x27, [sp, #48]
   25c20:	mov	x28, x26
   25c24:	mov	x27, x21
   25c28:	add	w22, w24, w8
   25c2c:	ldr	w8, [sp, #12]
   25c30:	sub	w21, w19, w21
   25c34:	sub	w0, w8, w22
   25c38:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   25c3c:	ldr	x8, [sp, #24]
   25c40:	mov	w26, w0
   25c44:	ldr	w8, [x8]
   25c48:	add	w0, w8, #0x1
   25c4c:	bl	25354 <ZSTD_endStream@@Base+0x17400>
   25c50:	sub	w8, w26, w0
   25c54:	cmp	w8, w21, lsl #2
   25c58:	b.ge	25c70 <ZSTD_endStream@@Base+0x17d1c>  // b.tcont
   25c5c:	ldr	w8, [sp, #8]
   25c60:	ldr	x9, [sp, #24]
   25c64:	mov	x27, x19
   25c68:	sub	w8, w8, w22
   25c6c:	str	x8, [x9]
   25c70:	add	x8, x23, x19
   25c74:	cmp	x8, x28
   25c78:	mov	w8, #0x3                   	// #3
   25c7c:	mov	x26, x28
   25c80:	csel	w8, w8, wzr, eq  // eq = none
   25c84:	mov	x21, x27
   25c88:	b.eq	25ce8 <ZSTD_endStream@@Base+0x17d94>  // b.none
   25c8c:	ldp	x28, x27, [sp, #48]
   25c90:	ldrb	w8, [x25, x19]
   25c94:	ldrb	w9, [x23, x19]
   25c98:	ldr	w10, [sp, #36]
   25c9c:	cmp	w8, w9
   25ca0:	ldr	x8, [sp, #40]
   25ca4:	and	w10, w24, w10
   25ca8:	lsl	w10, w10, #1
   25cac:	add	x8, x8, w10, uxtw #2
   25cb0:	b.cs	25ccc <ZSTD_endStream@@Base+0x17d78>  // b.hs, b.nlast
   25cb4:	ldr	w9, [sp, #32]
   25cb8:	cmp	w24, w9
   25cbc:	b.ls	25bb0 <ZSTD_endStream@@Base+0x17c5c>  // b.plast
   25cc0:	add	x8, x8, #0x4
   25cc4:	mov	x28, x19
   25cc8:	b	25cdc <ZSTD_endStream@@Base+0x17d88>
   25ccc:	ldr	w9, [sp, #32]
   25cd0:	cmp	w24, w9
   25cd4:	b.ls	25bb0 <ZSTD_endStream@@Base+0x17c5c>  // b.plast
   25cd8:	mov	x27, x19
   25cdc:	ldr	w24, [x8]
   25ce0:	mov	w8, wzr
   25ce4:	b	25bb4 <ZSTD_endStream@@Base+0x17c60>
   25ce8:	ldp	x28, x27, [sp, #48]
   25cec:	b	25bb4 <ZSTD_endStream@@Base+0x17c60>
   25cf0:	mov	x0, x21
   25cf4:	ldp	x20, x19, [sp, #192]
   25cf8:	ldp	x22, x21, [sp, #176]
   25cfc:	ldp	x24, x23, [sp, #160]
   25d00:	ldp	x26, x25, [sp, #144]
   25d04:	ldp	x28, x27, [sp, #128]
   25d08:	ldp	x29, x30, [sp, #112]
   25d0c:	add	sp, sp, #0xd0
   25d10:	ret
   25d14:	ldr	x0, [x0]
   25d18:	ret
   25d1c:	rbit	x8, x0
   25d20:	clz	x8, x8
   25d24:	ubfx	x0, x8, #3, #29
   25d28:	ret
   25d2c:	ldrh	w0, [x0]
   25d30:	ret
   25d34:	ldr	q0, [x1]
   25d38:	str	q0, [x0]
   25d3c:	ret
   25d40:	stp	x29, x30, [sp, #-64]!
   25d44:	stp	x22, x21, [sp, #32]
   25d48:	stp	x20, x19, [sp, #48]
   25d4c:	mov	x19, x2
   25d50:	mov	x20, x1
   25d54:	cmp	x1, x3
   25d58:	mov	x22, x0
   25d5c:	stp	x24, x23, [sp, #16]
   25d60:	mov	x29, sp
   25d64:	b.hi	25dcc <ZSTD_endStream@@Base+0x17e78>  // b.pmore
   25d68:	sub	x24, x3, x20
   25d6c:	mov	x0, x22
   25d70:	mov	x1, x20
   25d74:	mov	x21, x3
   25d78:	add	x23, x22, x24
   25d7c:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   25d80:	add	x0, x22, #0x10
   25d84:	add	x1, x20, #0x10
   25d88:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   25d8c:	cmp	x24, #0x21
   25d90:	b.lt	25dc4 <ZSTD_endStream@@Base+0x17e70>  // b.tstop
   25d94:	add	x22, x22, #0x20
   25d98:	add	x20, x20, #0x30
   25d9c:	sub	x1, x20, #0x10
   25da0:	mov	x0, x22
   25da4:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   25da8:	add	x0, x22, #0x10
   25dac:	mov	x1, x20
   25db0:	bl	25d34 <ZSTD_endStream@@Base+0x17de0>
   25db4:	add	x22, x22, #0x20
   25db8:	cmp	x22, x23
   25dbc:	add	x20, x20, #0x20
   25dc0:	b.cc	25d9c <ZSTD_endStream@@Base+0x17e48>  // b.lo, b.ul, b.last
   25dc4:	mov	x20, x21
   25dc8:	mov	x22, x23
   25dcc:	cmp	x20, x19
   25dd0:	b.cs	25de4 <ZSTD_endStream@@Base+0x17e90>  // b.hs, b.nlast
   25dd4:	ldrb	w8, [x20], #1
   25dd8:	cmp	x19, x20
   25ddc:	strb	w8, [x22], #1
   25de0:	b.ne	25dd4 <ZSTD_endStream@@Base+0x17e80>  // b.any
   25de4:	ldp	x20, x19, [sp, #48]
   25de8:	ldp	x22, x21, [sp, #32]
   25dec:	ldp	x24, x23, [sp, #16]
   25df0:	ldp	x29, x30, [sp], #64
   25df4:	ret
   25df8:	stp	x29, x30, [sp, #-48]!
   25dfc:	stp	x22, x21, [sp, #16]
   25e00:	stp	x20, x19, [sp, #32]
   25e04:	ldr	w8, [x0, #200]
   25e08:	mov	x19, x3
   25e0c:	mov	x20, x2
   25e10:	mov	x21, x0
   25e14:	sub	w9, w8, #0x6
   25e18:	cmp	w9, #0x2
   25e1c:	mov	x22, x1
   25e20:	mov	x29, sp
   25e24:	b.cs	25e54 <ZSTD_endStream@@Base+0x17f00>  // b.hs, b.nlast
   25e28:	ldr	x8, [x21, #8]
   25e2c:	ldr	w9, [x21, #36]
   25e30:	add	x8, x8, x9
   25e34:	cmp	x8, x22
   25e38:	b.hi	25e9c <ZSTD_endStream@@Base+0x17f48>  // b.pmore
   25e3c:	mov	w2, #0x6                   	// #6
   25e40:	mov	x0, x21
   25e44:	mov	x1, x22
   25e48:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   25e4c:	mov	w4, #0x6                   	// #6
   25e50:	b	25eb8 <ZSTD_endStream@@Base+0x17f64>
   25e54:	cmp	w8, #0x5
   25e58:	b.ne	25e88 <ZSTD_endStream@@Base+0x17f34>  // b.any
   25e5c:	ldr	x8, [x21, #8]
   25e60:	ldr	w9, [x21, #36]
   25e64:	add	x8, x8, x9
   25e68:	cmp	x8, x22
   25e6c:	b.hi	25e9c <ZSTD_endStream@@Base+0x17f48>  // b.pmore
   25e70:	mov	w2, #0x5                   	// #5
   25e74:	mov	x0, x21
   25e78:	mov	x1, x22
   25e7c:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   25e80:	mov	w4, #0x5                   	// #5
   25e84:	b	25eb8 <ZSTD_endStream@@Base+0x17f64>
   25e88:	ldr	x8, [x21, #8]
   25e8c:	ldr	w9, [x21, #36]
   25e90:	add	x8, x8, x9
   25e94:	cmp	x8, x22
   25e98:	b.ls	25ea4 <ZSTD_endStream@@Base+0x17f50>  // b.plast
   25e9c:	mov	x0, xzr
   25ea0:	b	25ed0 <ZSTD_endStream@@Base+0x17f7c>
   25ea4:	mov	w2, #0x4                   	// #4
   25ea8:	mov	x0, x21
   25eac:	mov	x1, x22
   25eb0:	bl	25360 <ZSTD_endStream@@Base+0x1740c>
   25eb4:	mov	w4, #0x4                   	// #4
   25eb8:	mov	w5, #0x1                   	// #1
   25ebc:	mov	x0, x21
   25ec0:	mov	x1, x22
   25ec4:	mov	x2, x20
   25ec8:	mov	x3, x19
   25ecc:	bl	25428 <ZSTD_endStream@@Base+0x174d4>
   25ed0:	ldp	x20, x19, [sp, #32]
   25ed4:	ldp	x22, x21, [sp, #16]
   25ed8:	ldp	x29, x30, [sp], #48
   25edc:	ret
   25ee0:	ldr	w8, [x1]
   25ee4:	ldr	w9, [x0, #8]
   25ee8:	str	w8, [x0, #20]
   25eec:	cbz	w9, 25f74 <ZSTD_endStream@@Base+0x18020>
   25ef0:	ldr	w9, [x0, #12]
   25ef4:	cbz	w9, 25f84 <ZSTD_endStream@@Base+0x18030>
   25ef8:	ldr	w9, [x1, #24]
   25efc:	cmp	w9, #0x7
   25f00:	b.cs	25f28 <ZSTD_endStream@@Base+0x17fd4>  // b.hs, b.nlast
   25f04:	ldr	w9, [x0, #4]
   25f08:	cbz	w9, 25f44 <ZSTD_endStream@@Base+0x17ff0>
   25f0c:	ldr	w9, [x0, #16]
   25f10:	cbz	w9, 25f60 <ZSTD_endStream@@Base+0x1800c>
   25f14:	ldp	w9, w8, [x0, #4]
   25f18:	cmp	w8, w9
   25f1c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   25f20:	str	w8, [x0, #8]
   25f24:	ret
   25f28:	ldr	w9, [x1, #20]
   25f2c:	ldr	w10, [x0, #12]
   25f30:	cmp	w9, w10
   25f34:	csel	w9, w9, w10, hi  // hi = pmore
   25f38:	str	w9, [x0, #12]
   25f3c:	ldr	w9, [x0, #4]
   25f40:	cbnz	w9, 25f0c <ZSTD_endStream@@Base+0x17fb8>
   25f44:	sub	w9, w8, #0x7
   25f48:	cmp	w9, #0x6
   25f4c:	mov	w10, #0x6                   	// #6
   25f50:	csel	w9, w9, w10, hi  // hi = pmore
   25f54:	str	w9, [x0, #4]
   25f58:	ldr	w9, [x0, #16]
   25f5c:	cbnz	w9, 25f14 <ZSTD_endStream@@Base+0x17fc0>
   25f60:	ldr	w9, [x0, #4]
   25f64:	subs	w8, w8, w9
   25f68:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   25f6c:	str	w8, [x0, #16]
   25f70:	b	25f14 <ZSTD_endStream@@Base+0x17fc0>
   25f74:	mov	w9, #0x3                   	// #3
   25f78:	str	w9, [x0, #8]
   25f7c:	ldr	w9, [x0, #12]
   25f80:	cbnz	w9, 25ef8 <ZSTD_endStream@@Base+0x17fa4>
   25f84:	mov	w9, #0x40                  	// #64
   25f88:	str	w9, [x0, #12]
   25f8c:	b	25ef8 <ZSTD_endStream@@Base+0x17fa4>
   25f90:	stp	x29, x30, [sp, #-48]!
   25f94:	str	x21, [sp, #16]
   25f98:	stp	x20, x19, [sp, #32]
   25f9c:	ldp	w21, w8, [x0, #4]
   25fa0:	mov	w9, #0x1                   	// #1
   25fa4:	mov	x19, x0
   25fa8:	mov	x29, sp
   25fac:	cmp	w8, w21
   25fb0:	csel	w8, w8, w21, cc  // cc = lo, ul, last
   25fb4:	sub	x8, x21, x8
   25fb8:	lsl	x20, x9, x8
   25fbc:	mov	x0, x20
   25fc0:	bl	25ff0 <ZSTD_endStream@@Base+0x1809c>
   25fc4:	mov	w8, #0x8                   	// #8
   25fc8:	lsl	x0, x8, x21
   25fcc:	bl	25ff0 <ZSTD_endStream@@Base+0x1809c>
   25fd0:	ldr	w8, [x19]
   25fd4:	add	x9, x0, x20
   25fd8:	ldp	x20, x19, [sp, #32]
   25fdc:	ldr	x21, [sp, #16]
   25fe0:	cmp	w8, #0x0
   25fe4:	csel	x0, xzr, x9, eq  // eq = none
   25fe8:	ldp	x29, x30, [sp], #48
   25fec:	ret
   25ff0:	ret
   25ff4:	ldr	w8, [x0]
   25ff8:	cbz	w8, 26008 <ZSTD_endStream@@Base+0x180b4>
   25ffc:	ldr	w8, [x0, #12]
   26000:	udiv	x0, x1, x8
   26004:	ret
   26008:	mov	x0, xzr
   2600c:	ret
   26010:	sub	sp, sp, #0xa0
   26014:	tst	x4, #0xfffff
   26018:	lsr	x8, x4, #20
   2601c:	csetm	x9, ne  // ne = any
   26020:	cmp	x8, x9
   26024:	stp	x29, x30, [sp, #64]
   26028:	stp	x28, x27, [sp, #80]
   2602c:	stp	x26, x25, [sp, #96]
   26030:	stp	x24, x23, [sp, #112]
   26034:	stp	x22, x21, [sp, #128]
   26038:	stp	x20, x19, [sp, #144]
   2603c:	add	x29, sp, #0x40
   26040:	b.ne	26068 <ZSTD_endStream@@Base+0x18114>  // b.any
   26044:	mov	x0, xzr
   26048:	ldp	x20, x19, [sp, #144]
   2604c:	ldp	x22, x21, [sp, #128]
   26050:	ldp	x24, x23, [sp, #112]
   26054:	ldp	x26, x25, [sp, #96]
   26058:	ldp	x28, x27, [sp, #80]
   2605c:	ldp	x29, x30, [sp, #64]
   26060:	add	sp, sp, #0xa0
   26064:	ret
   26068:	ldr	w9, [x2, #20]
   2606c:	mov	w10, #0x1                   	// #1
   26070:	tst	x4, #0xfffff
   26074:	mov	x19, x3
   26078:	mov	x28, x2
   2607c:	mov	x21, x1
   26080:	mov	x22, x0
   26084:	add	x11, x3, x4
   26088:	cinc	x24, x8, ne  // ne = any
   2608c:	lsl	w23, w10, w9
   26090:	stp	xzr, x11, [sp, #16]
   26094:	b	260b0 <ZSTD_endStream@@Base+0x1815c>
   26098:	mov	w8, wzr
   2609c:	str	x26, [sp, #8]
   260a0:	tbz	w8, #0, 2619c <ZSTD_endStream@@Base+0x18248>
   260a4:	subs	x24, x24, #0x1
   260a8:	add	x19, x19, #0x100, lsl #12
   260ac:	b.eq	26044 <ZSTD_endStream@@Base+0x180f0>  // b.none
   260b0:	ldp	x20, x8, [x21, #16]
   260b4:	cmp	x20, x8
   260b8:	b.cs	26044 <ZSTD_endStream@@Base+0x180f0>  // b.hs, b.nlast
   260bc:	ldr	x10, [sp, #24]
   260c0:	ldp	q0, q1, [x22]
   260c4:	add	x9, x19, #0x100, lsl #12
   260c8:	add	x0, sp, #0x20
   260cc:	sub	x8, x10, x19
   260d0:	cmp	x8, #0x100, lsl #12
   260d4:	csel	x26, x10, x9, cc  // cc = lo, ul, last
   260d8:	mov	x1, x26
   260dc:	sub	x25, x26, x19
   260e0:	stp	q0, q1, [sp, #32]
   260e4:	bl	261a4 <ZSTD_endStream@@Base+0x18250>
   260e8:	cbz	w0, 2611c <ZSTD_endStream@@Base+0x181c8>
   260ec:	ldr	w8, [x28, #4]
   260f0:	mov	w9, #0x1                   	// #1
   260f4:	mov	x0, x22
   260f8:	mov	w1, w23
   260fc:	mov	x2, x19
   26100:	lsl	w27, w9, w8
   26104:	bl	261bc <ZSTD_endStream@@Base+0x18268>
   26108:	ldr	x8, [x22, #32]
   2610c:	mov	w2, w0
   26110:	mov	w1, w27
   26114:	mov	x0, x8
   26118:	bl	261f0 <ZSTD_endStream@@Base+0x1829c>
   2611c:	mov	x0, x22
   26120:	mov	x1, x26
   26124:	mov	w2, w23
   26128:	bl	26214 <ZSTD_endStream@@Base+0x182c0>
   2612c:	mov	x0, x22
   26130:	mov	x1, x21
   26134:	mov	x2, x28
   26138:	mov	x3, x19
   2613c:	mov	x4, x25
   26140:	bl	26248 <ZSTD_endStream@@Base+0x182f4>
   26144:	mov	x26, x0
   26148:	bl	26734 <ZSTD_endStream@@Base+0x187e0>
   2614c:	cbnz	w0, 26098 <ZSTD_endStream@@Base+0x18144>
   26150:	ldr	x8, [x21, #16]
   26154:	cmp	x20, x8
   26158:	b.cs	26188 <ZSTD_endStream@@Base+0x18234>  // b.hs, b.nlast
   2615c:	ldr	x8, [x21]
   26160:	mov	w9, #0xc                   	// #12
   26164:	ldr	x10, [sp, #16]
   26168:	str	x26, [sp, #16]
   2616c:	madd	x8, x20, x9, x8
   26170:	ldr	w9, [x8, #4]
   26174:	add	w9, w9, w10
   26178:	str	w9, [x8, #4]
   2617c:	mov	w8, #0x1                   	// #1
   26180:	tbnz	w8, #0, 260a4 <ZSTD_endStream@@Base+0x18150>
   26184:	b	2619c <ZSTD_endStream@@Base+0x18248>
   26188:	ldr	x8, [sp, #16]
   2618c:	add	x8, x25, x8
   26190:	str	x8, [sp, #16]
   26194:	mov	w8, #0x1                   	// #1
   26198:	tbnz	w8, #0, 260a4 <ZSTD_endStream@@Base+0x18150>
   2619c:	ldr	x0, [sp, #8]
   261a0:	b	26048 <ZSTD_endStream@@Base+0x180f4>
   261a4:	ldr	w8, [x0, #8]
   261a8:	mov	w9, #0xe0000000            	// #-536870912
   261ac:	sub	w8, w1, w8
   261b0:	cmp	w8, w9
   261b4:	cset	w0, hi  // hi = pmore
   261b8:	ret
   261bc:	ldp	x9, x10, [x0, #8]
   261c0:	sub	w8, w2, w9
   261c4:	sub	w8, w8, w1
   261c8:	add	x9, x9, x8
   261cc:	str	x9, [x0, #8]
   261d0:	ldp	w11, w9, [x0, #24]
   261d4:	add	x10, x10, x8
   261d8:	str	x10, [x0, #16]
   261dc:	sub	w9, w9, w8
   261e0:	sub	w10, w11, w8
   261e4:	stp	w10, w9, [x0, #24]
   261e8:	mov	w0, w8
   261ec:	ret
   261f0:	cbz	w1, 26210 <ZSTD_endStream@@Base+0x182bc>
   261f4:	mov	w8, w1
   261f8:	ldr	w9, [x0]
   261fc:	subs	w9, w9, w2
   26200:	csel	w9, wzr, w9, cc  // cc = lo, ul, last
   26204:	subs	x8, x8, #0x1
   26208:	str	w9, [x0], #8
   2620c:	b.ne	261f8 <ZSTD_endStream@@Base+0x182a4>  // b.any
   26210:	ret
   26214:	ldr	w8, [x0, #8]
   26218:	sub	w8, w1, w8
   2621c:	subs	w8, w8, w2
   26220:	b.ls	26244 <ZSTD_endStream@@Base+0x182f0>  // b.plast
   26224:	ldr	w9, [x0, #28]
   26228:	cmp	w9, w8
   2622c:	b.cs	26234 <ZSTD_endStream@@Base+0x182e0>  // b.hs, b.nlast
   26230:	str	w8, [x0, #28]
   26234:	ldp	w9, w8, [x0, #24]
   26238:	cmp	w9, w8
   2623c:	b.cs	26244 <ZSTD_endStream@@Base+0x182f0>  // b.hs, b.nlast
   26240:	str	w8, [x0, #24]
   26244:	ret
   26248:	sub	sp, sp, #0x170
   2624c:	stp	x29, x30, [sp, #272]
   26250:	stp	x28, x27, [sp, #288]
   26254:	stp	x26, x25, [sp, #304]
   26258:	stp	x24, x23, [sp, #320]
   2625c:	stp	x22, x21, [sp, #336]
   26260:	stp	x20, x19, [sp, #352]
   26264:	ldp	q1, q0, [x0]
   26268:	add	x29, sp, #0x110
   2626c:	mov	x23, x0
   26270:	sub	x0, x29, #0x30
   26274:	mov	x19, x4
   26278:	mov	x20, x3
   2627c:	mov	x21, x2
   26280:	mov	x22, x1
   26284:	stp	q1, q0, [x29, #-48]
   26288:	bl	26bc4 <ZSTD_endStream@@Base+0x18c70>
   2628c:	ldr	x8, [x23, #48]
   26290:	ldr	w14, [x23, #24]
   26294:	mov	w28, w0
   26298:	str	x8, [sp, #48]
   2629c:	ldp	w10, w9, [x21, #4]
   262a0:	ldp	w24, w25, [x21, #12]
   262a4:	cbz	w0, 262b4 <ZSTD_endStream@@Base+0x18360>
   262a8:	ldr	w8, [x23, #28]
   262ac:	stur	w8, [x29, #-132]
   262b0:	b	262bc <ZSTD_endStream@@Base+0x18368>
   262b4:	mov	w8, w14
   262b8:	stur	w14, [x29, #-132]
   262bc:	ldr	x8, [x23, #8]
   262c0:	stur	x8, [x29, #-80]
   262c4:	cbz	w28, 262d0 <ZSTD_endStream@@Base+0x1837c>
   262c8:	ldr	x15, [x23, #16]
   262cc:	b	262d4 <ZSTD_endStream@@Base+0x18380>
   262d0:	mov	x15, xzr
   262d4:	ldur	w8, [x29, #-132]
   262d8:	cmp	w28, #0x0
   262dc:	add	x11, x15, x14
   262e0:	csel	x11, x11, xzr, ne  // ne = any
   262e4:	add	x8, x15, w8, uxtw
   262e8:	csel	x13, x8, xzr, ne  // ne = any
   262ec:	cmp	w24, #0x8
   262f0:	mov	w8, #0x8                   	// #8
   262f4:	add	x12, x20, x19
   262f8:	csel	w8, w24, w8, hi  // hi = pmore
   262fc:	sub	x8, x12, x8
   26300:	cmp	x8, x20
   26304:	stur	x12, [x29, #-104]
   26308:	b.cs	26320 <ZSTD_endStream@@Base+0x183cc>  // b.hs, b.nlast
   2630c:	str	x20, [sp, #104]
   26310:	ldur	x8, [x29, #-104]
   26314:	ldr	x9, [sp, #104]
   26318:	sub	x0, x8, x9
   2631c:	b	26714 <ZSTD_endStream@@Base+0x187c0>
   26320:	sub	w10, w10, w9
   26324:	ldur	x12, [x29, #-80]
   26328:	str	w10, [sp, #100]
   2632c:	mov	w10, #0x1                   	// #1
   26330:	stp	x11, x15, [sp, #112]
   26334:	mov	w11, #0xffffffff            	// #-1
   26338:	lsl	w9, w10, w9
   2633c:	lsl	w11, w11, w25
   26340:	mov	w9, w9
   26344:	stp	x8, x13, [sp, #80]
   26348:	mov	x8, xzr
   2634c:	mov	x27, xzr
   26350:	add	x12, x12, x14
   26354:	mvn	w10, w11
   26358:	stp	x22, x9, [sp]
   2635c:	mov	x19, x20
   26360:	str	x14, [sp, #128]
   26364:	str	w10, [sp, #76]
   26368:	str	x20, [sp, #104]
   2636c:	stp	x21, x20, [sp, #32]
   26370:	str	x23, [sp, #24]
   26374:	stur	x24, [x29, #-88]
   26378:	str	x25, [sp, #16]
   2637c:	stur	x12, [x29, #-128]
   26380:	cmp	x19, x20
   26384:	b.eq	263a0 <ZSTD_endStream@@Base+0x1844c>  // b.none
   26388:	ldrb	w2, [x8, x24]
   2638c:	ldrb	w1, [x8]
   26390:	ldr	x3, [sp, #48]
   26394:	mov	x0, x27
   26398:	bl	26bd4 <ZSTD_endStream@@Base+0x18c80>
   2639c:	b	263ac <ZSTD_endStream@@Base+0x18458>
   263a0:	mov	x0, x19
   263a4:	mov	x1, x24
   263a8:	bl	26c00 <ZSTD_endStream@@Base+0x18cac>
   263ac:	ldr	w26, [sp, #100]
   263b0:	mov	w2, w25
   263b4:	mov	x27, x0
   263b8:	mov	w1, w26
   263bc:	bl	26c14 <ZSTD_endStream@@Base+0x18cc0>
   263c0:	ldr	w8, [sp, #76]
   263c4:	cmp	w0, w8
   263c8:	b.ne	26608 <ZSTD_endStream@@Base+0x186b4>  // b.any
   263cc:	ldur	x8, [x29, #-80]
   263d0:	mov	x0, x27
   263d4:	mov	w1, w26
   263d8:	sub	w8, w19, w8
   263dc:	str	w8, [sp, #60]
   263e0:	bl	26c64 <ZSTD_endStream@@Base+0x18d10>
   263e4:	ldr	x8, [x21, #16]
   263e8:	ldr	q0, [x21]
   263ec:	mov	w1, w0
   263f0:	sub	x2, x29, #0x30
   263f4:	mov	x0, x23
   263f8:	stur	x8, [x29, #-32]
   263fc:	stur	q0, [x29, #-48]
   26400:	bl	26c50 <ZSTD_endStream@@Base+0x18cfc>
   26404:	mov	x23, x0
   26408:	mov	x0, x27
   2640c:	mov	w1, w26
   26410:	str	x27, [sp, #64]
   26414:	bl	26c78 <ZSTD_endStream@@Base+0x18d24>
   26418:	ldr	x8, [sp, #8]
   2641c:	ldur	w21, [x29, #-132]
   26420:	mov	w22, w0
   26424:	stp	xzr, xzr, [x29, #-72]
   26428:	add	x27, x23, x8, lsl #3
   2642c:	stur	xzr, [x29, #-56]
   26430:	stur	xzr, [x29, #-96]
   26434:	b	26478 <ZSTD_endStream@@Base+0x18524>
   26438:	ldur	x8, [x29, #-120]
   2643c:	ldur	x9, [x29, #-96]
   26440:	cmp	x8, x9
   26444:	csel	x9, x8, x9, hi  // hi = pmore
   26448:	stur	x9, [x29, #-96]
   2644c:	ldp	x9, x8, [x29, #-64]
   26450:	csel	x8, x23, x8, hi  // hi = pmore
   26454:	stur	x8, [x29, #-56]
   26458:	ldur	x8, [x29, #-112]
   2645c:	csel	x9, x8, x9, hi  // hi = pmore
   26460:	ldur	x8, [x29, #-72]
   26464:	csel	x8, x26, x8, hi  // hi = pmore
   26468:	stp	x8, x9, [x29, #-72]
   2646c:	add	x23, x23, #0x8
   26470:	cmp	x23, x27
   26474:	b.cs	26580 <ZSTD_endStream@@Base+0x1862c>  // b.hs, b.nlast
   26478:	ldr	w8, [x23, #4]
   2647c:	cmp	w8, w22
   26480:	b.ne	2646c <ZSTD_endStream@@Base+0x18518>  // b.any
   26484:	ldr	w24, [x23]
   26488:	cmp	w24, w21
   2648c:	b.ls	2646c <ZSTD_endStream@@Base+0x18518>  // b.plast
   26490:	cbz	w28, 264e8 <ZSTD_endStream@@Base+0x18594>
   26494:	mov	w21, w28
   26498:	ldp	x9, x28, [sp, #120]
   2649c:	ldur	x8, [x29, #-80]
   264a0:	ldur	x2, [x29, #-104]
   264a4:	mov	x0, x19
   264a8:	cmp	w24, w28
   264ac:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   264b0:	add	x25, x8, x24
   264b4:	ldr	x8, [sp, #112]
   264b8:	mov	x20, x19
   264bc:	ldur	x19, [x29, #-128]
   264c0:	mov	x1, x25
   264c4:	csel	x3, x8, x2, cc  // cc = lo, ul, last
   264c8:	mov	x4, x19
   264cc:	bl	26c88 <ZSTD_endStream@@Base+0x18d34>
   264d0:	ldur	x8, [x29, #-88]
   264d4:	mov	x26, x0
   264d8:	cmp	x0, x8
   264dc:	b.cs	2651c <ZSTD_endStream@@Base+0x185c8>  // b.hs, b.nlast
   264e0:	mov	w8, wzr
   264e4:	b	26544 <ZSTD_endStream@@Base+0x185f0>
   264e8:	ldur	x8, [x29, #-80]
   264ec:	ldur	x2, [x29, #-104]
   264f0:	mov	x0, x19
   264f4:	add	x25, x8, x24
   264f8:	mov	x1, x25
   264fc:	bl	26d54 <ZSTD_endStream@@Base+0x18e00>
   26500:	ldur	x8, [x29, #-88]
   26504:	mov	x26, x0
   26508:	cmp	x0, x8
   2650c:	b.cs	26558 <ZSTD_endStream@@Base+0x18604>  // b.hs, b.nlast
   26510:	mov	w8, wzr
   26514:	cbnz	w8, 26438 <ZSTD_endStream@@Base+0x184e4>
   26518:	b	2646c <ZSTD_endStream@@Base+0x18518>
   2651c:	ldr	x8, [sp, #88]
   26520:	ldr	x1, [sp, #104]
   26524:	cmp	w24, w28
   26528:	mov	x0, x20
   2652c:	csel	x3, x8, x19, cc  // cc = lo, ul, last
   26530:	mov	x2, x25
   26534:	bl	26d00 <ZSTD_endStream@@Base+0x18dac>
   26538:	add	x8, x0, x26
   2653c:	stp	x8, x0, [x29, #-120]
   26540:	mov	w8, #0x1                   	// #1
   26544:	mov	w28, w21
   26548:	ldur	w21, [x29, #-132]
   2654c:	mov	x19, x20
   26550:	tbnz	w8, #0, 26438 <ZSTD_endStream@@Base+0x184e4>
   26554:	b	2646c <ZSTD_endStream@@Base+0x18518>
   26558:	ldr	x1, [sp, #104]
   2655c:	ldur	x3, [x29, #-128]
   26560:	mov	x0, x19
   26564:	mov	x2, x25
   26568:	bl	26d00 <ZSTD_endStream@@Base+0x18dac>
   2656c:	add	x8, x0, x26
   26570:	stp	x8, x0, [x29, #-120]
   26574:	mov	w8, #0x1                   	// #1
   26578:	cbz	w8, 2646c <ZSTD_endStream@@Base+0x18518>
   2657c:	b	26438 <ZSTD_endStream@@Base+0x184e4>
   26580:	ldur	x13, [x29, #-56]
   26584:	cbz	x13, 265cc <ZSTD_endStream@@Base+0x18678>
   26588:	ldr	x22, [sp]
   2658c:	ldur	x14, [x29, #-64]
   26590:	ldr	x20, [sp, #40]
   26594:	ldp	x25, x23, [sp, #16]
   26598:	ldp	x8, x9, [x22, #16]
   2659c:	ldur	x24, [x29, #-88]
   265a0:	ldr	w26, [sp, #100]
   265a4:	sub	x10, x19, x14
   265a8:	cmp	x8, x9
   265ac:	b.ne	26630 <ZSTD_endStream@@Base+0x186dc>  // b.any
   265b0:	mov	w9, #0x1                   	// #1
   265b4:	ldr	x21, [sp, #32]
   265b8:	cbz	w9, 26674 <ZSTD_endStream@@Base+0x18720>
   265bc:	ldr	x27, [sp, #64]
   265c0:	mov	x8, x19
   265c4:	mov	x19, x10
   265c8:	b	26614 <ZSTD_endStream@@Base+0x186c0>
   265cc:	ldp	x23, x21, [sp, #24]
   265d0:	ldr	x27, [sp, #64]
   265d4:	ldr	w2, [sp, #100]
   265d8:	ldr	w3, [sp, #60]
   265dc:	ldr	x8, [x21, #16]
   265e0:	ldr	q0, [x21]
   265e4:	sub	x4, x29, #0x30
   265e8:	mov	x0, x23
   265ec:	mov	x1, x27
   265f0:	stur	x8, [x29, #-32]
   265f4:	stur	q0, [x29, #-48]
   265f8:	bl	26eb0 <ZSTD_endStream@@Base+0x18f5c>
   265fc:	ldr	x20, [sp, #40]
   26600:	ldur	x24, [x29, #-88]
   26604:	ldr	x25, [sp, #16]
   26608:	mov	x8, x19
   2660c:	add	x19, x19, #0x1
   26610:	mov	w9, #0x2                   	// #2
   26614:	orr	w9, w9, #0x2
   26618:	cmp	w9, #0x2
   2661c:	b.ne	26710 <ZSTD_endStream@@Base+0x187bc>  // b.any
   26620:	ldr	x9, [sp, #80]
   26624:	cmp	x19, x9
   26628:	b.ls	26380 <ZSTD_endStream@@Base+0x1842c>  // b.plast
   2662c:	b	26310 <ZSTD_endStream@@Base+0x183bc>
   26630:	ldr	w12, [x13]
   26634:	ldur	x13, [x29, #-72]
   26638:	ldr	w16, [sp, #60]
   2663c:	ldr	x11, [x22]
   26640:	mov	w9, wzr
   26644:	add	w13, w13, w14
   26648:	ldr	x14, [sp, #104]
   2664c:	sub	w12, w16, w12
   26650:	mov	w16, #0xc                   	// #12
   26654:	add	x15, x8, #0x1
   26658:	sub	w14, w10, w14
   2665c:	madd	x8, x8, x16, x11
   26660:	stp	w14, w13, [x8, #4]
   26664:	str	w12, [x8]
   26668:	str	x15, [x22, #16]
   2666c:	ldr	x21, [sp, #32]
   26670:	cbnz	w9, 265bc <ZSTD_endStream@@Base+0x18668>
   26674:	mov	x27, x19
   26678:	ldr	x19, [sp, #64]
   2667c:	ldr	x8, [x21, #16]
   26680:	ldr	q0, [x21]
   26684:	ldr	w3, [sp, #60]
   26688:	sub	x4, x29, #0x30
   2668c:	mov	x0, x23
   26690:	mov	x1, x19
   26694:	mov	w2, w26
   26698:	stur	x8, [x29, #-32]
   2669c:	stur	q0, [x29, #-48]
   266a0:	bl	26eb0 <ZSTD_endStream@@Base+0x18f5c>
   266a4:	ldur	x8, [x29, #-72]
   266a8:	add	x3, x27, x8
   266ac:	ldr	x8, [sp, #80]
   266b0:	str	x3, [sp, #104]
   266b4:	cmp	x3, x8
   266b8:	b.ls	266d0 <ZSTD_endStream@@Base+0x1877c>  // b.plast
   266bc:	mov	w9, wzr
   266c0:	mov	x8, x27
   266c4:	mov	x27, x19
   266c8:	mov	x19, x3
   266cc:	b	26614 <ZSTD_endStream@@Base+0x186c0>
   266d0:	ldr	x8, [x21, #16]
   266d4:	ldr	q0, [x21]
   266d8:	ldur	x4, [x29, #-80]
   266dc:	sub	x6, x29, #0x30
   266e0:	mov	x0, x23
   266e4:	mov	x1, x19
   266e8:	mov	x2, x27
   266ec:	mov	w5, w26
   266f0:	stur	x8, [x29, #-32]
   266f4:	stur	q0, [x29, #-48]
   266f8:	mov	x19, x3
   266fc:	bl	26f60 <ZSTD_endStream@@Base+0x1900c>
   26700:	mov	x27, x0
   26704:	mov	w9, wzr
   26708:	sub	x8, x19, #0x1
   2670c:	b	26614 <ZSTD_endStream@@Base+0x186c0>
   26710:	mov	x0, #0xffffffffffffffba    	// #-70
   26714:	ldp	x20, x19, [sp, #352]
   26718:	ldp	x22, x21, [sp, #336]
   2671c:	ldp	x24, x23, [sp, #320]
   26720:	ldp	x26, x25, [sp, #304]
   26724:	ldp	x28, x27, [sp, #288]
   26728:	ldp	x29, x30, [sp, #272]
   2672c:	add	sp, sp, #0x170
   26730:	ret
   26734:	cmn	x0, #0x78
   26738:	cset	w0, hi  // hi = pmore
   2673c:	ret
   26740:	mov	w8, #0xc                   	// #12
   26744:	b	26760 <ZSTD_endStream@@Base+0x1880c>
   26748:	sub	w9, w14, w1
   2674c:	mov	w10, wzr
   26750:	str	w9, [x13]
   26754:	mov	x9, x1
   26758:	mov	x1, x9
   2675c:	tbz	w10, #0, 267f4 <ZSTD_endStream@@Base+0x188a0>
   26760:	cbz	x1, 267f4 <ZSTD_endStream@@Base+0x188a0>
   26764:	ldp	x10, x11, [x0, #8]
   26768:	cmp	x10, x11
   2676c:	b.cs	267f4 <ZSTD_endStream@@Base+0x188a0>  // b.hs, b.nlast
   26770:	ldr	x12, [x0]
   26774:	madd	x13, x10, x8, x12
   26778:	ldr	w14, [x13, #4]!
   2677c:	subs	x9, x1, x14
   26780:	b.ls	26748 <ZSTD_endStream@@Base+0x187f4>  // b.plast
   26784:	str	wzr, [x13]
   26788:	madd	x13, x10, x8, x12
   2678c:	ldr	w15, [x13, #8]!
   26790:	subs	x14, x9, x15
   26794:	b.cs	267d4 <ZSTD_endStream@@Base+0x18880>  // b.hs, b.nlast
   26798:	sub	w14, w15, w9
   2679c:	cmp	w14, w2
   267a0:	str	w14, [x13]
   267a4:	b.cs	267ec <ZSTD_endStream@@Base+0x18898>  // b.hs, b.nlast
   267a8:	add	x13, x10, #0x1
   267ac:	cmp	x13, x11
   267b0:	b.cs	267c8 <ZSTD_endStream@@Base+0x18874>  // b.hs, b.nlast
   267b4:	add	x11, x12, #0xc
   267b8:	madd	x10, x10, x8, x11
   267bc:	ldr	w11, [x10, #4]
   267c0:	add	w11, w11, w14
   267c4:	str	w11, [x10, #4]
   267c8:	mov	w10, wzr
   267cc:	str	x13, [x0, #8]
   267d0:	b	26758 <ZSTD_endStream@@Base+0x18804>
   267d4:	add	x9, x10, #0x1
   267d8:	str	wzr, [x13]
   267dc:	str	x9, [x0, #8]
   267e0:	mov	w10, #0x1                   	// #1
   267e4:	mov	x9, x14
   267e8:	b	26758 <ZSTD_endStream@@Base+0x18804>
   267ec:	mov	w10, wzr
   267f0:	b	26758 <ZSTD_endStream@@Base+0x18804>
   267f4:	ret
   267f8:	sub	sp, sp, #0xb0
   267fc:	stp	x29, x30, [sp, #80]
   26800:	stp	x28, x27, [sp, #96]
   26804:	stp	x26, x25, [sp, #112]
   26808:	stp	x24, x23, [sp, #128]
   2680c:	stp	x22, x21, [sp, #144]
   26810:	stp	x20, x19, [sp, #160]
   26814:	ldr	w8, [x1, #200]
   26818:	ldr	w22, [x1, #208]
   2681c:	add	x29, sp, #0x50
   26820:	mov	x23, x0
   26824:	mov	x0, x1
   26828:	mov	x21, x5
   2682c:	mov	x26, x4
   26830:	mov	x19, x3
   26834:	mov	x20, x2
   26838:	stur	w8, [x29, #-28]
   2683c:	str	x1, [sp, #40]
   26840:	bl	26a80 <ZSTD_endStream@@Base+0x18b2c>
   26844:	mov	w1, w0
   26848:	mov	w0, w22
   2684c:	bl	bbc0 <ZSTD_copyCCtx@@Base+0x32c>
   26850:	add	x22, x26, x21
   26854:	sub	x24, x22, #0x20
   26858:	stp	x24, x23, [sp, #8]
   2685c:	stp	x22, x0, [sp, #24]
   26860:	b	2686c <ZSTD_endStream@@Base+0x18918>
   26864:	mov	w8, wzr
   26868:	tbz	w8, #0, 26a28 <ZSTD_endStream@@Base+0x18ad4>
   2686c:	cmp	x26, x22
   26870:	b.cs	26a28 <ZSTD_endStream@@Base+0x18ad4>  // b.hs, b.nlast
   26874:	ldp	x8, x9, [x23, #8]
   26878:	cmp	x8, x9
   2687c:	b.cs	26a28 <ZSTD_endStream@@Base+0x18ad4>  // b.hs, b.nlast
   26880:	ldur	w2, [x29, #-28]
   26884:	sub	w1, w22, w26
   26888:	mov	x0, x23
   2688c:	bl	26ad0 <ZSTD_endStream@@Base+0x18b7c>
   26890:	mov	x28, x0
   26894:	cbz	w28, 26864 <ZSTD_endStream@@Base+0x18910>
   26898:	ldr	x21, [sp, #40]
   2689c:	mov	x27, x1
   268a0:	mov	x1, x26
   268a4:	lsr	x25, x28, #32
   268a8:	mov	x0, x21
   268ac:	bl	26b50 <ZSTD_endStream@@Base+0x18bfc>
   268b0:	mov	x0, x21
   268b4:	mov	x1, x26
   268b8:	bl	26b88 <ZSTD_endStream@@Base+0x18c34>
   268bc:	ldr	x8, [sp, #32]
   268c0:	mov	x0, x21
   268c4:	mov	x1, x20
   268c8:	mov	x2, x19
   268cc:	mov	x3, x26
   268d0:	mov	x4, x25
   268d4:	blr	x8
   268d8:	mov	x22, x0
   268dc:	mov	x8, xzr
   268e0:	add	x9, x19, x8, lsl #2
   268e4:	ldr	w10, [x9, #4]
   268e8:	add	x11, x8, #0x2
   268ec:	sub	x8, x8, #0x1
   268f0:	cmp	x11, #0x1
   268f4:	str	w10, [x9, #8]
   268f8:	b.hi	268e0 <ZSTD_endStream@@Base+0x1898c>  // b.pmore
   268fc:	str	w28, [x19]
   26900:	ldr	x0, [x20, #24]
   26904:	mov	w8, #0xfffffffd            	// #-3
   26908:	add	x23, x26, x25
   2690c:	add	x8, x27, x8
   26910:	sub	x21, x23, x22
   26914:	cmp	x23, x24
   26918:	stp	x8, x27, [x29, #-16]
   2691c:	and	x8, x8, #0xffff0000
   26920:	stur	x8, [x29, #-24]
   26924:	b.ls	2693c <ZSTD_endStream@@Base+0x189e8>  // b.plast
   26928:	mov	x1, x21
   2692c:	mov	x2, x23
   26930:	mov	x3, x24
   26934:	bl	270f4 <ZSTD_endStream@@Base+0x191a0>
   26938:	b	269ac <ZSTD_endStream@@Base+0x18a58>
   2693c:	mov	x1, x21
   26940:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   26944:	cmp	x22, #0x11
   26948:	b.cc	269ac <ZSTD_endStream@@Base+0x18a58>  // b.lo, b.ul, b.last
   2694c:	ldr	x27, [x20, #24]
   26950:	add	x1, x21, #0x10
   26954:	add	x0, x27, #0x10
   26958:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   2695c:	add	x0, x27, #0x20
   26960:	add	x1, x21, #0x20
   26964:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   26968:	cmp	x22, #0x31
   2696c:	b.lt	269ac <ZSTD_endStream@@Base+0x18a58>  // b.tstop
   26970:	sub	x8, x25, x22
   26974:	add	x8, x26, x8
   26978:	add	x24, x27, x22
   2697c:	add	x21, x27, #0x30
   26980:	add	x25, x8, #0x40
   26984:	sub	x1, x25, #0x10
   26988:	mov	x0, x21
   2698c:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   26990:	add	x0, x21, #0x10
   26994:	mov	x1, x25
   26998:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   2699c:	add	x21, x21, #0x20
   269a0:	cmp	x21, x24
   269a4:	add	x25, x25, #0x20
   269a8:	b.cc	26984 <ZSTD_endStream@@Base+0x18a30>  // b.lo, b.ul, b.last
   269ac:	ldr	x8, [x20, #24]
   269b0:	cmp	x22, #0x10, lsl #12
   269b4:	add	x8, x8, x22
   269b8:	str	x8, [x20, #24]
   269bc:	b.cc	269d4 <ZSTD_endStream@@Base+0x18a80>  // b.lo, b.ul, b.last
   269c0:	ldp	x9, x8, [x20]
   269c4:	sub	x8, x8, x9
   269c8:	lsr	x8, x8, #3
   269cc:	mov	w9, #0x1                   	// #1
   269d0:	stp	w9, w8, [x20, #72]
   269d4:	ldr	x8, [x20, #8]
   269d8:	add	w9, w28, #0x3
   269dc:	ldur	x11, [x29, #-8]
   269e0:	str	w9, [x8]
   269e4:	ldur	x9, [x29, #-24]
   269e8:	strh	w22, [x8, #4]
   269ec:	cbz	x9, 26a04 <ZSTD_endStream@@Base+0x18ab0>
   269f0:	ldp	x10, x9, [x20]
   269f4:	sub	x9, x9, x10
   269f8:	lsr	x9, x9, #3
   269fc:	mov	w10, #0x2                   	// #2
   26a00:	stp	w10, w9, [x20, #72]
   26a04:	ldur	x9, [x29, #-16]
   26a08:	add	x26, x23, w11, uxtw
   26a0c:	ldr	x24, [sp, #8]
   26a10:	strh	w9, [x8, #6]
   26a14:	add	x8, x8, #0x8
   26a18:	str	x8, [x20, #8]
   26a1c:	ldp	x23, x22, [sp, #16]
   26a20:	mov	w8, #0x1                   	// #1
   26a24:	tbnz	w8, #0, 2686c <ZSTD_endStream@@Base+0x18918>
   26a28:	ldr	x21, [sp, #40]
   26a2c:	mov	x1, x26
   26a30:	mov	x0, x21
   26a34:	bl	26b50 <ZSTD_endStream@@Base+0x18bfc>
   26a38:	mov	x0, x21
   26a3c:	mov	x1, x26
   26a40:	bl	26b88 <ZSTD_endStream@@Base+0x18c34>
   26a44:	ldr	x8, [sp, #32]
   26a48:	sub	x4, x22, x26
   26a4c:	mov	x0, x21
   26a50:	mov	x1, x20
   26a54:	mov	x2, x19
   26a58:	mov	x3, x26
   26a5c:	blr	x8
   26a60:	ldp	x20, x19, [sp, #160]
   26a64:	ldp	x22, x21, [sp, #144]
   26a68:	ldp	x24, x23, [sp, #128]
   26a6c:	ldp	x26, x25, [sp, #112]
   26a70:	ldp	x28, x27, [sp, #96]
   26a74:	ldp	x29, x30, [sp, #80]
   26a78:	add	sp, sp, #0xb0
   26a7c:	ret
   26a80:	sub	sp, sp, #0x40
   26a84:	stp	x29, x30, [sp, #32]
   26a88:	str	x19, [sp, #48]
   26a8c:	ldp	q1, q0, [x0]
   26a90:	mov	x19, x0
   26a94:	mov	x0, sp
   26a98:	add	x29, sp, #0x20
   26a9c:	stp	q1, q0, [sp]
   26aa0:	bl	26bc4 <ZSTD_endStream@@Base+0x18c70>
   26aa4:	cbz	w0, 26ab0 <ZSTD_endStream@@Base+0x18b5c>
   26aa8:	mov	w0, #0x1                   	// #1
   26aac:	b	26ac0 <ZSTD_endStream@@Base+0x18b6c>
   26ab0:	ldr	x8, [x19, #176]
   26ab4:	cmp	x8, #0x0
   26ab8:	cset	w8, ne  // ne = any
   26abc:	lsl	w0, w8, #1
   26ac0:	ldr	x19, [sp, #48]
   26ac4:	ldp	x29, x30, [sp, #32]
   26ac8:	add	sp, sp, #0x40
   26acc:	ret
   26ad0:	stp	x29, x30, [sp, #-48]!
   26ad4:	str	x21, [sp, #16]
   26ad8:	stp	x20, x19, [sp, #32]
   26adc:	ldp	x9, x8, [x0]
   26ae0:	mov	w10, #0xc                   	// #12
   26ae4:	mov	x29, sp
   26ae8:	madd	x9, x8, x10, x9
   26aec:	ldr	x19, [x9]
   26af0:	ldr	w20, [x9, #8]
   26af4:	lsr	x9, x19, #32
   26af8:	add	w10, w20, w9
   26afc:	cmp	w10, w1
   26b00:	b.ls	26b28 <ZSTD_endStream@@Base+0x18bd4>  // b.plast
   26b04:	subs	w8, w1, w9
   26b08:	cmp	w8, w2
   26b0c:	csel	x8, xzr, x19, cc  // cc = lo, ul, last
   26b10:	subs	w9, w1, w9
   26b14:	mov	w1, w1
   26b18:	csel	w20, w9, w20, hi  // hi = pmore
   26b1c:	csel	x21, x8, xzr, hi  // hi = pmore
   26b20:	bl	26740 <ZSTD_endStream@@Base+0x187ec>
   26b24:	b	26b34 <ZSTD_endStream@@Base+0x18be0>
   26b28:	add	x8, x8, #0x1
   26b2c:	str	x8, [x0, #8]
   26b30:	mov	x21, x19
   26b34:	bfxil	x19, x21, #0, #32
   26b38:	mov	w1, w20
   26b3c:	mov	x0, x19
   26b40:	ldp	x20, x19, [sp, #32]
   26b44:	ldr	x21, [sp, #16]
   26b48:	ldp	x29, x30, [sp], #48
   26b4c:	ret
   26b50:	ldr	w8, [x0, #8]
   26b54:	ldr	w9, [x0, #36]
   26b58:	sub	w8, w1, w8
   26b5c:	add	w10, w9, #0x400
   26b60:	cmp	w10, w8
   26b64:	b.cs	26b84 <ZSTD_endStream@@Base+0x18c30>  // b.hs, b.nlast
   26b68:	sub	w9, w8, w9
   26b6c:	sub	w9, w9, #0x400
   26b70:	cmp	w9, #0x200
   26b74:	mov	w10, #0x200                 	// #512
   26b78:	csel	w9, w9, w10, cc  // cc = lo, ul, last
   26b7c:	sub	w8, w8, w9
   26b80:	str	w8, [x0, #36]
   26b84:	ret
   26b88:	stp	x29, x30, [sp, #-16]!
   26b8c:	ldr	w8, [x0, #208]
   26b90:	mov	x29, sp
   26b94:	cmp	w8, #0x2
   26b98:	b.eq	26bb4 <ZSTD_endStream@@Base+0x18c60>  // b.none
   26b9c:	cmp	w8, #0x1
   26ba0:	b.ne	26bbc <ZSTD_endStream@@Base+0x18c68>  // b.any
   26ba4:	mov	w2, wzr
   26ba8:	bl	17c3c <ZSTD_endStream@@Base+0x9ce8>
   26bac:	ldp	x29, x30, [sp], #16
   26bb0:	ret
   26bb4:	mov	w2, wzr
   26bb8:	bl	1188c <ZSTD_endStream@@Base+0x3938>
   26bbc:	ldp	x29, x30, [sp], #16
   26bc0:	ret
   26bc4:	ldp	w9, w8, [x0, #24]
   26bc8:	cmp	w8, w9
   26bcc:	cset	w0, cc  // cc = lo, ul, last
   26bd0:	ret
   26bd4:	mov	x9, #0x6463                	// #25699
   26bd8:	and	x8, x1, #0xff
   26bdc:	movk	x9, #0xb7a5, lsl #16
   26be0:	add	x8, x8, #0xa
   26be4:	movk	x9, #0xbcdc, lsl #32
   26be8:	msub	x8, x8, x3, x0
   26bec:	movk	x9, #0xcf1b, lsl #48
   26bf0:	mul	x8, x8, x9
   26bf4:	add	x8, x8, w2, uxtb
   26bf8:	add	x0, x8, #0xa
   26bfc:	ret
   26c00:	stp	x29, x30, [sp, #-16]!
   26c04:	mov	x29, sp
   26c08:	bl	27014 <ZSTD_endStream@@Base+0x190c0>
   26c0c:	ldp	x29, x30, [sp], #16
   26c10:	ret
   26c14:	mov	w8, #0x20                  	// #32
   26c18:	sub	w8, w8, w1
   26c1c:	subs	w8, w8, w2
   26c20:	b.cs	26c38 <ZSTD_endStream@@Base+0x18ce4>  // b.hs, b.nlast
   26c24:	mov	w8, #0xffffffff            	// #-1
   26c28:	lsl	w8, w8, w2
   26c2c:	mvn	w8, w8
   26c30:	and	w0, w8, w0
   26c34:	ret
   26c38:	mov	w9, #0xffffffff            	// #-1
   26c3c:	lsl	w9, w9, w2
   26c40:	lsr	x8, x0, x8
   26c44:	mvn	w0, w9
   26c48:	and	w0, w8, w0
   26c4c:	ret
   26c50:	ldr	w8, [x2, #8]
   26c54:	ldr	x9, [x0, #32]
   26c58:	lsl	x8, x1, x8
   26c5c:	add	x0, x9, x8, lsl #3
   26c60:	ret
   26c64:	neg	w8, w1
   26c68:	lsr	x8, x0, x8
   26c6c:	cmp	w1, #0x0
   26c70:	csel	w0, wzr, w8, eq  // eq = none
   26c74:	ret
   26c78:	mov	w8, #0x20                  	// #32
   26c7c:	sub	w8, w8, w1
   26c80:	lsr	x0, x0, x8
   26c84:	ret
   26c88:	stp	x29, x30, [sp, #-64]!
   26c8c:	sub	x8, x3, x1
   26c90:	add	x8, x0, x8
   26c94:	cmp	x8, x2
   26c98:	stp	x20, x19, [sp, #48]
   26c9c:	mov	x20, x2
   26ca0:	csel	x2, x8, x2, cc  // cc = lo, ul, last
   26ca4:	stp	x24, x23, [sp, #16]
   26ca8:	stp	x22, x21, [sp, #32]
   26cac:	mov	x29, sp
   26cb0:	mov	x19, x4
   26cb4:	mov	x23, x3
   26cb8:	mov	x24, x1
   26cbc:	mov	x22, x0
   26cc0:	bl	26d54 <ZSTD_endStream@@Base+0x18e00>
   26cc4:	add	x8, x24, x0
   26cc8:	mov	x21, x0
   26ccc:	cmp	x8, x23
   26cd0:	b.ne	26ce8 <ZSTD_endStream@@Base+0x18d94>  // b.any
   26cd4:	add	x0, x22, x21
   26cd8:	mov	x1, x19
   26cdc:	mov	x2, x20
   26ce0:	bl	26d54 <ZSTD_endStream@@Base+0x18e00>
   26ce4:	add	x21, x0, x21
   26ce8:	mov	x0, x21
   26cec:	ldp	x20, x19, [sp, #48]
   26cf0:	ldp	x22, x21, [sp, #32]
   26cf4:	ldp	x24, x23, [sp, #16]
   26cf8:	ldp	x29, x30, [sp], #64
   26cfc:	ret
   26d00:	mov	x8, x0
   26d04:	cmp	x2, x3
   26d08:	mov	x0, xzr
   26d0c:	b.ls	26d50 <ZSTD_endStream@@Base+0x18dfc>  // b.plast
   26d10:	cmp	x8, x1
   26d14:	b.ls	26d50 <ZSTD_endStream@@Base+0x18dfc>  // b.plast
   26d18:	mov	x0, xzr
   26d1c:	sub	x8, x8, #0x1
   26d20:	sub	x9, x2, #0x1
   26d24:	ldrb	w10, [x8]
   26d28:	ldrb	w11, [x9]
   26d2c:	cmp	w10, w11
   26d30:	b.ne	26d50 <ZSTD_endStream@@Base+0x18dfc>  // b.any
   26d34:	cmp	x9, x3
   26d38:	add	x0, x0, #0x1
   26d3c:	b.ls	26d50 <ZSTD_endStream@@Base+0x18dfc>  // b.plast
   26d40:	cmp	x8, x1
   26d44:	sub	x8, x8, #0x1
   26d48:	sub	x9, x9, #0x1
   26d4c:	b.hi	26d24 <ZSTD_endStream@@Base+0x18dd0>  // b.pmore
   26d50:	ret
   26d54:	stp	x29, x30, [sp, #-80]!
   26d58:	stp	x26, x25, [sp, #16]
   26d5c:	sub	x25, x2, #0x7
   26d60:	stp	x22, x21, [sp, #48]
   26d64:	stp	x20, x19, [sp, #64]
   26d68:	mov	x20, x2
   26d6c:	mov	x19, x0
   26d70:	cmp	x25, x0
   26d74:	mov	x21, x1
   26d78:	stp	x24, x23, [sp, #32]
   26d7c:	mov	x29, sp
   26d80:	b.ls	26db4 <ZSTD_endStream@@Base+0x18e60>  // b.plast
   26d84:	mov	x0, x21
   26d88:	bl	27048 <ZSTD_endStream@@Base+0x190f4>
   26d8c:	mov	x22, x0
   26d90:	mov	x0, x19
   26d94:	bl	27048 <ZSTD_endStream@@Base+0x190f4>
   26d98:	eor	x0, x0, x22
   26d9c:	cbz	x0, 26e54 <ZSTD_endStream@@Base+0x18f00>
   26da0:	bl	27050 <ZSTD_endStream@@Base+0x190fc>
   26da4:	mov	w8, wzr
   26da8:	mov	w23, w0
   26dac:	cbz	w8, 26e38 <ZSTD_endStream@@Base+0x18ee4>
   26db0:	b	26e5c <ZSTD_endStream@@Base+0x18f08>
   26db4:	mov	x22, x19
   26db8:	sub	x8, x20, #0x3
   26dbc:	cmp	x22, x8
   26dc0:	b.cs	26de8 <ZSTD_endStream@@Base+0x18e94>  // b.hs, b.nlast
   26dc4:	mov	x0, x21
   26dc8:	bl	27060 <ZSTD_endStream@@Base+0x1910c>
   26dcc:	mov	w23, w0
   26dd0:	mov	x0, x22
   26dd4:	bl	27060 <ZSTD_endStream@@Base+0x1910c>
   26dd8:	cmp	w23, w0
   26ddc:	b.ne	26de8 <ZSTD_endStream@@Base+0x18e94>  // b.any
   26de0:	add	x22, x22, #0x4
   26de4:	add	x21, x21, #0x4
   26de8:	sub	x8, x20, #0x1
   26dec:	cmp	x22, x8
   26df0:	b.cs	26e18 <ZSTD_endStream@@Base+0x18ec4>  // b.hs, b.nlast
   26df4:	mov	x0, x21
   26df8:	bl	27068 <ZSTD_endStream@@Base+0x19114>
   26dfc:	and	w23, w0, #0xffff
   26e00:	mov	x0, x22
   26e04:	bl	27068 <ZSTD_endStream@@Base+0x19114>
   26e08:	cmp	w23, w0, uxth
   26e0c:	b.ne	26e18 <ZSTD_endStream@@Base+0x18ec4>  // b.any
   26e10:	add	x22, x22, #0x2
   26e14:	add	x21, x21, #0x2
   26e18:	cmp	x22, x20
   26e1c:	b.cs	26e34 <ZSTD_endStream@@Base+0x18ee0>  // b.hs, b.nlast
   26e20:	mov	x9, x22
   26e24:	ldrb	w8, [x21]
   26e28:	ldrb	w10, [x9], #1
   26e2c:	cmp	w8, w10
   26e30:	csel	x22, x9, x22, eq  // eq = none
   26e34:	sub	x23, x22, x19
   26e38:	mov	x0, x23
   26e3c:	ldp	x20, x19, [sp, #64]
   26e40:	ldp	x22, x21, [sp, #48]
   26e44:	ldp	x24, x23, [sp, #32]
   26e48:	ldp	x26, x25, [sp, #16]
   26e4c:	ldp	x29, x30, [sp], #80
   26e50:	ret
   26e54:	mov	w8, #0x1                   	// #1
   26e58:	cbz	w8, 26e38 <ZSTD_endStream@@Base+0x18ee4>
   26e5c:	add	x22, x19, #0x8
   26e60:	add	x21, x21, #0x8
   26e64:	mov	w26, #0x1                   	// #1
   26e68:	b	26e78 <ZSTD_endStream@@Base+0x18f24>
   26e6c:	add	x22, x22, #0x8
   26e70:	add	x21, x21, #0x8
   26e74:	tbz	w26, #0, 26e38 <ZSTD_endStream@@Base+0x18ee4>
   26e78:	cmp	x22, x25
   26e7c:	b.cs	26db8 <ZSTD_endStream@@Base+0x18e64>  // b.hs, b.nlast
   26e80:	mov	x0, x21
   26e84:	bl	27048 <ZSTD_endStream@@Base+0x190f4>
   26e88:	mov	x24, x0
   26e8c:	mov	x0, x22
   26e90:	bl	27048 <ZSTD_endStream@@Base+0x190f4>
   26e94:	eor	x0, x0, x24
   26e98:	cbz	x0, 26e6c <ZSTD_endStream@@Base+0x18f18>
   26e9c:	bl	27050 <ZSTD_endStream@@Base+0x190fc>
   26ea0:	add	x22, x22, w0, uxtw
   26ea4:	sub	x23, x22, x19
   26ea8:	tbnz	wzr, #0, 26e78 <ZSTD_endStream@@Base+0x18f24>
   26eac:	b	26e38 <ZSTD_endStream@@Base+0x18ee4>
   26eb0:	sub	sp, sp, #0x60
   26eb4:	stp	x29, x30, [sp, #32]
   26eb8:	stp	x24, x23, [sp, #48]
   26ebc:	stp	x22, x21, [sp, #64]
   26ec0:	stp	x20, x19, [sp, #80]
   26ec4:	ldr	w24, [x4, #16]
   26ec8:	mov	w22, w2
   26ecc:	mov	x23, x1
   26ed0:	mov	x19, x0
   26ed4:	mov	x0, x1
   26ed8:	mov	w1, w2
   26edc:	mov	w2, w24
   26ee0:	add	x29, sp, #0x20
   26ee4:	mov	x20, x4
   26ee8:	mov	w21, w3
   26eec:	bl	26c14 <ZSTD_endStream@@Base+0x18cc0>
   26ef0:	mov	w8, #0xffffffff            	// #-1
   26ef4:	lsl	w8, w8, w24
   26ef8:	mvn	w8, w8
   26efc:	cmp	w0, w8
   26f00:	b.ne	26f48 <ZSTD_endStream@@Base+0x18ff4>  // b.any
   26f04:	mov	x0, x23
   26f08:	mov	w1, w22
   26f0c:	bl	26c64 <ZSTD_endStream@@Base+0x18d10>
   26f10:	mov	w24, w0
   26f14:	mov	x0, x23
   26f18:	mov	w1, w22
   26f1c:	bl	26c78 <ZSTD_endStream@@Base+0x18d24>
   26f20:	ldr	x8, [x20, #16]
   26f24:	ldr	q0, [x20]
   26f28:	mov	w2, w21
   26f2c:	mov	w1, w24
   26f30:	bfi	x2, x0, #32, #32
   26f34:	mov	x3, sp
   26f38:	mov	x0, x19
   26f3c:	str	x8, [sp, #16]
   26f40:	str	q0, [sp]
   26f44:	bl	27070 <ZSTD_endStream@@Base+0x1911c>
   26f48:	ldp	x20, x19, [sp, #80]
   26f4c:	ldp	x22, x21, [sp, #64]
   26f50:	ldp	x24, x23, [sp, #48]
   26f54:	ldp	x29, x30, [sp, #32]
   26f58:	add	sp, sp, #0x60
   26f5c:	ret
   26f60:	sub	sp, sp, #0x70
   26f64:	str	x25, [sp, #48]
   26f68:	add	x25, x2, #0x1
   26f6c:	stp	x24, x23, [sp, #64]
   26f70:	mov	x23, x1
   26f74:	cmp	x25, x3
   26f78:	stp	x29, x30, [sp, #32]
   26f7c:	stp	x22, x21, [sp, #80]
   26f80:	stp	x20, x19, [sp, #96]
   26f84:	add	x29, sp, #0x20
   26f88:	b.cs	26ff4 <ZSTD_endStream@@Base+0x190a0>  // b.hs, b.nlast
   26f8c:	mov	x19, x6
   26f90:	mov	w20, w5
   26f94:	mov	x21, x4
   26f98:	mov	x22, x3
   26f9c:	mov	x24, x0
   26fa0:	ldr	w8, [x19, #12]
   26fa4:	ldr	x3, [x24, #48]
   26fa8:	ldurb	w1, [x25, #-1]
   26fac:	mov	x0, x23
   26fb0:	sub	w8, w8, #0x1
   26fb4:	ldrb	w2, [x25, w8, uxtw]
   26fb8:	bl	26bd4 <ZSTD_endStream@@Base+0x18c80>
   26fbc:	ldr	x8, [x19, #16]
   26fc0:	ldr	q0, [x19]
   26fc4:	mov	x23, x0
   26fc8:	sub	w3, w25, w21
   26fcc:	mov	x4, sp
   26fd0:	mov	x0, x24
   26fd4:	mov	x1, x23
   26fd8:	mov	w2, w20
   26fdc:	str	x8, [sp, #16]
   26fe0:	str	q0, [sp]
   26fe4:	bl	26eb0 <ZSTD_endStream@@Base+0x18f5c>
   26fe8:	add	x25, x25, #0x1
   26fec:	cmp	x22, x25
   26ff0:	b.ne	26fa0 <ZSTD_endStream@@Base+0x1904c>  // b.any
   26ff4:	mov	x0, x23
   26ff8:	ldp	x20, x19, [sp, #96]
   26ffc:	ldp	x22, x21, [sp, #80]
   27000:	ldp	x24, x23, [sp, #64]
   27004:	ldr	x25, [sp, #48]
   27008:	ldp	x29, x30, [sp, #32]
   2700c:	add	sp, sp, #0x70
   27010:	ret
   27014:	mov	x8, xzr
   27018:	cbz	x1, 27040 <ZSTD_endStream@@Base+0x190ec>
   2701c:	mov	x9, #0x6463                	// #25699
   27020:	movk	x9, #0xb7a5, lsl #16
   27024:	movk	x9, #0xbcdc, lsl #32
   27028:	movk	x9, #0xcf1b, lsl #48
   2702c:	ldrb	w10, [x0], #1
   27030:	subs	x1, x1, #0x1
   27034:	madd	x8, x8, x9, x10
   27038:	add	x8, x8, #0xa
   2703c:	b.ne	2702c <ZSTD_endStream@@Base+0x190d8>  // b.any
   27040:	mov	x0, x8
   27044:	ret
   27048:	ldr	x0, [x0]
   2704c:	ret
   27050:	rbit	x8, x0
   27054:	clz	x8, x8
   27058:	ubfx	x0, x8, #3, #29
   2705c:	ret
   27060:	ldr	w0, [x0]
   27064:	ret
   27068:	ldrh	w0, [x0]
   2706c:	ret
   27070:	sub	sp, sp, #0x50
   27074:	stp	x29, x30, [sp, #32]
   27078:	stp	x22, x21, [sp, #48]
   2707c:	stp	x20, x19, [sp, #64]
   27080:	ldr	x8, [x3, #16]
   27084:	ldr	q0, [x3]
   27088:	ldr	x22, [x0, #40]
   2708c:	mov	x20, x2
   27090:	mov	x2, sp
   27094:	add	x29, sp, #0x20
   27098:	mov	x19, x3
   2709c:	mov	x21, x1
   270a0:	str	x8, [sp, #16]
   270a4:	str	q0, [sp]
   270a8:	bl	26c50 <ZSTD_endStream@@Base+0x18cfc>
   270ac:	ldrb	w8, [x22, x21]
   270b0:	mov	w10, #0xffffffff            	// #-1
   270b4:	str	x20, [x0, x8, lsl #3]
   270b8:	ldrb	w8, [x22, x21]
   270bc:	add	w8, w8, #0x1
   270c0:	strb	w8, [x22, x21]
   270c4:	ldr	w9, [x19, #8]
   270c8:	lsl	w9, w10, w9
   270cc:	bic	w8, w8, w9
   270d0:	strb	w8, [x22, x21]
   270d4:	ldp	x20, x19, [sp, #64]
   270d8:	ldp	x22, x21, [sp, #48]
   270dc:	ldp	x29, x30, [sp, #32]
   270e0:	add	sp, sp, #0x50
   270e4:	ret
   270e8:	ldr	q0, [x1]
   270ec:	str	q0, [x0]
   270f0:	ret
   270f4:	stp	x29, x30, [sp, #-64]!
   270f8:	stp	x22, x21, [sp, #32]
   270fc:	stp	x20, x19, [sp, #48]
   27100:	mov	x19, x2
   27104:	mov	x20, x1
   27108:	cmp	x1, x3
   2710c:	mov	x22, x0
   27110:	stp	x24, x23, [sp, #16]
   27114:	mov	x29, sp
   27118:	b.hi	27180 <ZSTD_endStream@@Base+0x1922c>  // b.pmore
   2711c:	sub	x24, x3, x20
   27120:	mov	x0, x22
   27124:	mov	x1, x20
   27128:	mov	x21, x3
   2712c:	add	x23, x22, x24
   27130:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   27134:	add	x0, x22, #0x10
   27138:	add	x1, x20, #0x10
   2713c:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   27140:	cmp	x24, #0x21
   27144:	b.lt	27178 <ZSTD_endStream@@Base+0x19224>  // b.tstop
   27148:	add	x22, x22, #0x20
   2714c:	add	x20, x20, #0x30
   27150:	sub	x1, x20, #0x10
   27154:	mov	x0, x22
   27158:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   2715c:	add	x0, x22, #0x10
   27160:	mov	x1, x20
   27164:	bl	270e8 <ZSTD_endStream@@Base+0x19194>
   27168:	add	x22, x22, #0x20
   2716c:	cmp	x22, x23
   27170:	add	x20, x20, #0x20
   27174:	b.cc	27150 <ZSTD_endStream@@Base+0x191fc>  // b.lo, b.ul, b.last
   27178:	mov	x20, x21
   2717c:	mov	x22, x23
   27180:	cmp	x20, x19
   27184:	b.cs	27198 <ZSTD_endStream@@Base+0x19244>  // b.hs, b.nlast
   27188:	ldrb	w8, [x20], #1
   2718c:	cmp	x19, x20
   27190:	strb	w8, [x22], #1
   27194:	b.ne	27188 <ZSTD_endStream@@Base+0x19234>  // b.any
   27198:	ldp	x20, x19, [sp, #48]
   2719c:	ldp	x22, x21, [sp, #32]
   271a0:	ldp	x24, x23, [sp, #16]
   271a4:	ldp	x29, x30, [sp], #64
   271a8:	ret
   271ac:	stp	x29, x30, [sp, #-64]!
   271b0:	stp	x24, x23, [sp, #16]
   271b4:	stp	x22, x21, [sp, #32]
   271b8:	stp	x20, x19, [sp, #48]
   271bc:	ldr	x22, [x0, #8]
   271c0:	ldr	w24, [x0, #36]
   271c4:	mov	x19, x0
   271c8:	mov	x29, sp
   271cc:	sub	w23, w1, w22
   271d0:	cmp	w24, w23
   271d4:	b.cs	27204 <ZSTD_endStream@@Base+0x192b0>  // b.hs, b.nlast
   271d8:	ldr	w21, [x19, #200]
   271dc:	mov	x20, x2
   271e0:	add	x1, x22, w24, uxtw
   271e4:	mov	x0, x19
   271e8:	mov	x2, x20
   271ec:	mov	w3, w21
   271f0:	mov	w4, wzr
   271f4:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   271f8:	add	w24, w0, w24
   271fc:	cmp	w24, w23
   27200:	b.cc	271e0 <ZSTD_endStream@@Base+0x1928c>  // b.lo, b.ul, b.last
   27204:	str	w23, [x19, #36]
   27208:	ldp	x20, x19, [sp, #48]
   2720c:	ldp	x22, x21, [sp, #32]
   27210:	ldp	x24, x23, [sp, #16]
   27214:	ldp	x29, x30, [sp], #64
   27218:	ret
   2721c:	stp	x29, x30, [sp, #-96]!
   27220:	stp	x28, x27, [sp, #16]
   27224:	stp	x26, x25, [sp, #32]
   27228:	stp	x24, x23, [sp, #48]
   2722c:	stp	x22, x21, [sp, #64]
   27230:	stp	x20, x19, [sp, #80]
   27234:	mov	x29, sp
   27238:	sub	sp, sp, #0x1c0
   2723c:	stur	x1, [x29, #-192]
   27240:	ldp	w11, w10, [x0, #200]
   27244:	ldr	x8, [x0, #8]
   27248:	ldr	w9, [x0, #24]
   2724c:	ldr	w12, [x0, #36]
   27250:	mov	w13, #0xfff                 	// #4095
   27254:	cmp	w10, #0xfff
   27258:	add	x19, x8, x9
   2725c:	csel	w8, w10, w13, cc  // cc = lo, ul, last
   27260:	stur	w12, [x29, #-12]
   27264:	str	w8, [sp, #148]
   27268:	ldp	x20, x26, [x0, #104]
   2726c:	add	x23, x0, #0x48
   27270:	mov	x27, x3
   27274:	mov	x21, x2
   27278:	mov	x22, x0
   2727c:	add	x28, x3, x4
   27280:	cmp	w11, #0x3
   27284:	mov	w8, #0x3                   	// #3
   27288:	mov	x0, x23
   2728c:	mov	x1, x3
   27290:	mov	x2, x4
   27294:	mov	w3, wzr
   27298:	sub	x24, x28, #0x8
   2729c:	cinc	w25, w8, ne  // ne = any
   272a0:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   272a4:	cmp	x19, x27
   272a8:	mov	x8, x24
   272ac:	cinc	x24, x27, eq  // eq = none
   272b0:	cmp	x24, x8
   272b4:	b.cs	29e7c <ZSTD_endStream@@Base+0x1bf28>  // b.hs, b.nlast
   272b8:	str	x8, [sp, #224]
   272bc:	sub	w8, w25, #0x1
   272c0:	str	x8, [sp, #128]
   272c4:	sub	x8, x29, #0x40
   272c8:	sub	x9, x28, #0x20
   272cc:	add	x8, x8, #0x10
   272d0:	stur	x9, [x29, #-216]
   272d4:	mov	w9, w25
   272d8:	str	x8, [sp, #120]
   272dc:	str	x9, [sp, #40]
   272e0:	add	x9, x26, #0x10
   272e4:	stur	x23, [x29, #-200]
   272e8:	str	x9, [sp, #136]
   272ec:	add	x9, x26, #0x1c
   272f0:	mov	w23, #0x1c                  	// #28
   272f4:	stur	x20, [x29, #-184]
   272f8:	str	w25, [sp, #196]
   272fc:	stur	x9, [x29, #-136]
   27300:	stp	x28, x21, [x29, #-176]
   27304:	stp	x26, x22, [x29, #-80]
   27308:	b	2732c <ZSTD_endStream@@Base+0x193d8>
   2730c:	ldur	x0, [x29, #-200]
   27310:	mov	w1, wzr
   27314:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   27318:	ldur	x28, [x29, #-176]
   2731c:	ldr	x8, [sp, #224]
   27320:	ldur	x24, [x29, #-144]
   27324:	cmp	x24, x8
   27328:	b.cs	29e7c <ZSTD_endStream@@Base+0x1bf28>  // b.hs, b.nlast
   2732c:	ldr	x19, [x22, #8]
   27330:	ldr	w21, [x22, #36]
   27334:	subs	w8, w24, w27
   27338:	stur	w8, [x29, #-88]
   2733c:	cset	w8, eq  // eq = none
   27340:	stur	w8, [x29, #-152]
   27344:	add	x8, x19, x21
   27348:	cmp	x8, x24
   2734c:	stur	x24, [x29, #-144]
   27350:	str	x27, [sp, #184]
   27354:	stur	w20, [x29, #-116]
   27358:	b.ls	27594 <ZSTD_endStream@@Base+0x19640>  // b.plast
   2735c:	ldur	x21, [x29, #-168]
   27360:	mov	w24, wzr
   27364:	cbz	w24, 282cc <ZSTD_endStream@@Base+0x1a378>
   27368:	ldr	x10, [sp, #136]
   2736c:	mov	x8, xzr
   27370:	ldr	w9, [x21, x8]
   27374:	str	w9, [x10, x8]
   27378:	add	x8, x8, #0x4
   2737c:	cmp	x8, #0xc
   27380:	b.ne	27370 <ZSTD_endStream@@Base+0x1941c>  // b.any
   27384:	ldur	w1, [x29, #-88]
   27388:	mov	x0, x27
   2738c:	mov	w3, wzr
   27390:	stp	wzr, w1, [x26, #8]
   27394:	ldur	x2, [x29, #-200]
   27398:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   2739c:	ldur	x10, [x29, #-184]
   273a0:	sub	w9, w24, #0x1
   273a4:	str	w0, [x26]
   273a8:	mov	w20, w0
   273ac:	add	x9, x10, w9, uxtw #3
   273b0:	ldr	w19, [x9, #4]
   273b4:	ldr	w10, [sp, #148]
   273b8:	mov	w8, wzr
   273bc:	mov	w0, wzr
   273c0:	cmp	w19, w10
   273c4:	b.ls	2740c <ZSTD_endStream@@Base+0x194b8>  // b.plast
   273c8:	ldr	w11, [x9]
   273cc:	ldr	w10, [sp, #176]
   273d0:	ldur	w25, [x29, #-88]
   273d4:	ldur	w8, [x29, #-16]
   273d8:	ldur	x9, [x29, #-24]
   273dc:	stp	w10, w11, [x29, #-64]
   273e0:	ldr	x10, [sp, #120]
   273e4:	sub	x0, x29, #0x40
   273e8:	stp	w19, w25, [x29, #-56]
   273ec:	str	w11, [sp, #180]
   273f0:	str	w8, [x10, #8]
   273f4:	str	x9, [x10]
   273f8:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   273fc:	mov	w8, #0x7                   	// #7
   27400:	stur	wzr, [x29, #-116]
   27404:	stur	w19, [x29, #-208]
   27408:	str	w25, [sp, #172]
   2740c:	cbnz	w8, 277e4 <ZSTD_endStream@@Base+0x19890>
   27410:	ldur	x1, [x29, #-200]
   27414:	mov	w0, wzr
   27418:	mov	w2, wzr
   2741c:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   27420:	ldur	x8, [x29, #-136]
   27424:	ldr	x9, [sp, #40]
   27428:	mov	w21, #0x1                   	// #1
   2742c:	mov	w10, #0x40000000            	// #1073741824
   27430:	add	x21, x21, #0x1
   27434:	cmp	x21, x9
   27438:	str	w10, [x8], #28
   2743c:	b.cc	27430 <ZSTD_endStream@@Base+0x194dc>  // b.lo, b.ul, b.last
   27440:	add	w8, w0, w20
   27444:	mov	x9, xzr
   27448:	stur	w8, [x29, #-96]
   2744c:	mov	w8, w24
   27450:	stur	x8, [x29, #-160]
   27454:	b	27470 <ZSTD_endStream@@Base+0x1951c>
   27458:	ldur	x9, [x29, #-128]
   2745c:	ldur	x8, [x29, #-160]
   27460:	ldur	x28, [x29, #-176]
   27464:	add	x9, x9, #0x1
   27468:	cmp	x9, x8
   2746c:	b.cs	277d8 <ZSTD_endStream@@Base+0x19884>  // b.hs, b.nlast
   27470:	ldur	x8, [x29, #-184]
   27474:	stur	x9, [x29, #-128]
   27478:	ldur	x0, [x29, #-168]
   2747c:	ldur	w2, [x29, #-152]
   27480:	add	x8, x8, x9, lsl #3
   27484:	ldp	w20, w19, [x8]
   27488:	mov	w1, w20
   2748c:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   27490:	cmp	w21, w19
   27494:	b.hi	27458 <ZSTD_endStream@@Base+0x19504>  // b.pmore
   27498:	mov	x24, x0
   2749c:	add	w0, w20, #0x1
   274a0:	mov	x27, x1
   274a4:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   274a8:	mov	w8, #0xffffda33            	// #-9677
   274ac:	add	w8, w8, w0, lsl #9
   274b0:	cmp	w0, #0x13
   274b4:	mov	w10, #0x33                  	// #51
   274b8:	lsl	w9, w0, #8
   274bc:	csel	w8, w8, w10, hi  // hi = pmore
   274c0:	mov	w28, w0
   274c4:	stur	w8, [x29, #-104]
   274c8:	add	w8, w9, #0x1, lsl #12
   274cc:	stur	w8, [x29, #-112]
   274d0:	b	27570 <ZSTD_endStream@@Base+0x1961c>
   274d4:	ldr	x8, [x22, #96]
   274d8:	ldur	x9, [x29, #-72]
   274dc:	ldr	w0, [x8, x28, lsl #2]
   274e0:	ldr	w22, [x9, #148]
   274e4:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   274e8:	mov	w26, w0
   274ec:	mov	w0, w25
   274f0:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   274f4:	ldur	x9, [x29, #-72]
   274f8:	mov	w8, w0
   274fc:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   27500:	lsl	x8, x8, #2
   27504:	ldr	x9, [x9, #88]
   27508:	add	x10, x10, #0xca8
   2750c:	ldr	w25, [x10, x8]
   27510:	ldur	x10, [x29, #-72]
   27514:	ldr	w0, [x9, x8]
   27518:	ldr	w23, [x10, #144]
   2751c:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   27520:	ldur	w9, [x29, #-104]
   27524:	add	w8, w25, w28
   27528:	add	w9, w22, w9
   2752c:	sub	w9, w9, w26
   27530:	ldp	x26, x22, [x29, #-80]
   27534:	add	w9, w9, w23
   27538:	add	w8, w9, w8, lsl #8
   2753c:	mov	w23, #0x1c                  	// #28
   27540:	sub	w8, w8, w0
   27544:	ldur	w9, [x29, #-96]
   27548:	ldur	w10, [x29, #-88]
   2754c:	add	w8, w9, w8
   27550:	umaddl	x9, w21, w23, x26
   27554:	stp	w21, w10, [x9, #8]
   27558:	add	w21, w21, #0x1
   2755c:	cmp	w21, w19
   27560:	stp	w8, w20, [x9]
   27564:	str	x24, [x9, #16]
   27568:	str	w27, [x9, #24]
   2756c:	b.hi	27458 <ZSTD_endStream@@Base+0x19504>  // b.pmore
   27570:	ldr	w8, [x22, #152]
   27574:	sub	w25, w21, #0x3
   27578:	cmp	w8, #0x1
   2757c:	b.ne	274d4 <ZSTD_endStream@@Base+0x19580>  // b.any
   27580:	mov	w0, w25
   27584:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   27588:	ldur	w8, [x29, #-112]
   2758c:	add	w8, w8, w0
   27590:	b	27544 <ZSTD_endStream@@Base+0x195f0>
   27594:	ldr	w20, [x22, #200]
   27598:	mov	x23, x22
   2759c:	sub	w22, w24, w19
   275a0:	cmp	w21, w22
   275a4:	b.cs	275cc <ZSTD_endStream@@Base+0x19678>  // b.hs, b.nlast
   275a8:	add	x1, x19, w21, uxtw
   275ac:	mov	x0, x23
   275b0:	mov	x2, x28
   275b4:	mov	w3, w20
   275b8:	mov	w4, wzr
   275bc:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   275c0:	add	w21, w0, w21
   275c4:	cmp	w21, w22
   275c8:	b.cc	275a8 <ZSTD_endStream@@Base+0x19654>  // b.lo, b.ul, b.last
   275cc:	sub	w8, w20, #0x6
   275d0:	cmp	w8, #0x2
   275d4:	str	w22, [x23, #36]
   275d8:	mov	x22, x23
   275dc:	b.cc	277f4 <ZSTD_endStream@@Base+0x198a0>  // b.lo, b.ul, b.last
   275e0:	cmp	w20, #0x5
   275e4:	mov	w9, #0xfff                 	// #4095
   275e8:	b.eq	279e4 <ZSTD_endStream@@Base+0x19a90>  // b.none
   275ec:	cmp	w20, #0x3
   275f0:	b.ne	27bd0 <ZSTD_endStream@@Base+0x19c7c>  // b.any
   275f4:	ldr	w8, [x22, #204]
   275f8:	ldr	x10, [x22, #8]
   275fc:	ldr	w1, [x22, #192]
   27600:	ldr	x19, [x22, #48]
   27604:	cmp	w8, #0xfff
   27608:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2760c:	mov	w2, #0x3                   	// #3
   27610:	mov	x0, x24
   27614:	stur	w8, [x29, #-104]
   27618:	str	x10, [sp, #96]
   2761c:	sub	w23, w24, w10
   27620:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   27624:	ldp	w2, w8, [x22, #184]
   27628:	stp	x0, x19, [sp, #80]
   2762c:	ldr	w9, [x19, x0, lsl #2]
   27630:	ldr	x26, [x22, #64]
   27634:	sub	w8, w8, #0x1
   27638:	ldr	w20, [x22, #24]
   2763c:	str	w9, [sp, #108]
   27640:	mov	w9, #0xffffffff            	// #-1
   27644:	lsl	w19, w9, w8
   27648:	mvn	w8, w19
   2764c:	str	w8, [sp, #160]
   27650:	subs	w8, w23, w8
   27654:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   27658:	mov	x0, x22
   2765c:	mov	w1, w23
   27660:	str	w8, [sp, #152]
   27664:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   27668:	cmp	w0, #0x0
   2766c:	csinc	w10, w0, wzr, ne  // ne = any
   27670:	stur	w10, [x29, #-128]
   27674:	ldur	w10, [x29, #-88]
   27678:	bic	w8, w23, w19
   2767c:	add	w9, w23, #0x9
   27680:	stur	w9, [x29, #-112]
   27684:	ldr	w9, [x22, #196]
   27688:	lsl	w8, w8, #1
   2768c:	cmp	w10, #0x0
   27690:	add	x10, x26, w8, uxtw #2
   27694:	mov	w8, #0x3                   	// #3
   27698:	str	x26, [sp, #200]
   2769c:	cinc	x26, x8, eq  // eq = none
   276a0:	add	x8, x10, #0x4
   276a4:	ldr	x27, [sp, #128]
   276a8:	stp	x8, x10, [sp, #208]
   276ac:	mov	w8, #0x1                   	// #1
   276b0:	lsl	w8, w8, w9
   276b4:	mov	w21, wzr
   276b8:	mov	w25, wzr
   276bc:	str	w23, [sp, #112]
   276c0:	sub	w22, w23, w20
   276c4:	cset	w23, eq  // eq = none
   276c8:	stur	w8, [x29, #-96]
   276cc:	add	x8, x24, #0x3
   276d0:	stur	x8, [x29, #-160]
   276d4:	cmp	x23, #0x3
   276d8:	b.ne	276ec <ZSTD_endStream@@Base+0x19798>  // b.any
   276dc:	ldur	x8, [x29, #-168]
   276e0:	ldr	w8, [x8]
   276e4:	sub	w28, w8, #0x1
   276e8:	b	276f4 <ZSTD_endStream@@Base+0x197a0>
   276ec:	ldur	x8, [x29, #-168]
   276f0:	ldr	w28, [x8, x23, lsl #2]
   276f4:	sub	w8, w28, #0x1
   276f8:	cmp	w8, w22
   276fc:	b.cs	2774c <ZSTD_endStream@@Base+0x197f8>  // b.hs, b.nlast
   27700:	ldur	x20, [x29, #-144]
   27704:	mov	w1, #0x3                   	// #3
   27708:	mov	x0, x20
   2770c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   27710:	mov	w28, w28
   27714:	mov	w24, w0
   27718:	sub	x0, x20, x28
   2771c:	mov	w1, #0x3                   	// #3
   27720:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   27724:	cmp	w24, w0
   27728:	b.ne	2774c <ZSTD_endStream@@Base+0x197f8>  // b.any
   2772c:	neg	x8, x28
   27730:	ldur	x0, [x29, #-160]
   27734:	ldur	x28, [x29, #-176]
   27738:	add	x1, x0, x8
   2773c:	mov	x2, x28
   27740:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   27744:	add	w8, w0, #0x3
   27748:	b	27754 <ZSTD_endStream@@Base+0x19800>
   2774c:	ldur	x28, [x29, #-176]
   27750:	mov	w8, wzr
   27754:	mov	w9, w8
   27758:	cmp	x27, x9
   2775c:	b.cs	2779c <ZSTD_endStream@@Base+0x19848>  // b.hs, b.nlast
   27760:	ldur	x10, [x29, #-184]
   27764:	ldur	w11, [x29, #-104]
   27768:	add	x10, x10, w25, uxtw #3
   2776c:	add	w25, w25, #0x1
   27770:	cmp	w8, w11
   27774:	stp	w21, w8, [x10]
   27778:	mov	w8, #0x1                   	// #1
   2777c:	b.hi	277c8 <ZSTD_endStream@@Base+0x19874>  // b.pmore
   27780:	ldur	x10, [x29, #-144]
   27784:	mov	x27, x9
   27788:	mov	w24, w25
   2778c:	add	x10, x10, x9
   27790:	cmp	x10, x28
   27794:	b.ne	277a0 <ZSTD_endStream@@Base+0x1984c>  // b.any
   27798:	b	277ac <ZSTD_endStream@@Base+0x19858>
   2779c:	mov	x9, x27
   277a0:	mov	w8, wzr
   277a4:	mov	x27, x9
   277a8:	mov	w24, w19
   277ac:	cbnz	w8, 27f68 <ZSTD_endStream@@Base+0x1a014>
   277b0:	add	x23, x23, #0x1
   277b4:	cmp	x23, x26
   277b8:	add	w21, w21, #0x1
   277bc:	mov	w19, w24
   277c0:	b.cc	276d4 <ZSTD_endStream@@Base+0x19780>  // b.lo, b.ul, b.last
   277c4:	b	27f64 <ZSTD_endStream@@Base+0x1a010>
   277c8:	mov	x27, x9
   277cc:	mov	w24, w25
   277d0:	cbz	w8, 277b0 <ZSTD_endStream@@Base+0x1985c>
   277d4:	b	27f68 <ZSTD_endStream@@Base+0x1a014>
   277d8:	ldr	x27, [sp, #184]
   277dc:	mov	w8, wzr
   277e0:	sub	w0, w21, #0x1
   277e4:	ldur	w20, [x29, #-116]
   277e8:	cmp	w8, #0x7
   277ec:	b.ne	282e8 <ZSTD_endStream@@Base+0x1a394>  // b.any
   277f0:	b	298b8 <ZSTD_endStream@@Base+0x1b964>
   277f4:	ldr	w8, [x22, #204]
   277f8:	ldr	x10, [x22, #8]
   277fc:	ldr	w1, [x22, #192]
   27800:	ldr	x19, [x22, #48]
   27804:	cmp	w8, #0xfff
   27808:	mov	w9, #0xfff                 	// #4095
   2780c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   27810:	mov	w2, #0x6                   	// #6
   27814:	mov	x0, x24
   27818:	stur	w8, [x29, #-104]
   2781c:	str	x10, [sp, #112]
   27820:	sub	w23, w24, w10
   27824:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   27828:	ldp	w2, w8, [x22, #184]
   2782c:	ldr	w9, [x19, x0, lsl #2]
   27830:	str	x19, [sp, #96]
   27834:	ldr	x25, [x22, #64]
   27838:	sub	w8, w8, #0x1
   2783c:	str	w9, [sp, #108]
   27840:	mov	w9, #0xffffffff            	// #-1
   27844:	lsl	w19, w9, w8
   27848:	ldr	w20, [x22, #24]
   2784c:	mvn	w8, w19
   27850:	str	w8, [sp, #200]
   27854:	subs	w8, w23, w8
   27858:	str	x0, [sp, #80]
   2785c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   27860:	mov	x0, x22
   27864:	mov	w1, w23
   27868:	str	w8, [sp, #160]
   2786c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   27870:	cmp	w0, #0x0
   27874:	csinc	w10, w0, wzr, ne  // ne = any
   27878:	stur	w10, [x29, #-128]
   2787c:	ldur	w10, [x29, #-88]
   27880:	bic	w8, w23, w19
   27884:	add	w9, w23, #0x9
   27888:	stur	w9, [x29, #-112]
   2788c:	ldr	w9, [x22, #196]
   27890:	lsl	w8, w8, #1
   27894:	cmp	w10, #0x0
   27898:	add	x10, x25, w8, uxtw #2
   2789c:	mov	w8, #0x3                   	// #3
   278a0:	str	w23, [sp, #88]
   278a4:	sub	w23, w23, w20
   278a8:	str	x25, [sp, #208]
   278ac:	cinc	x25, x8, eq  // eq = none
   278b0:	add	x8, x10, #0x4
   278b4:	ldr	x20, [sp, #128]
   278b8:	str	x8, [sp, #216]
   278bc:	mov	w8, #0x1                   	// #1
   278c0:	lsl	w8, w8, w9
   278c4:	mov	w21, wzr
   278c8:	mov	w26, wzr
   278cc:	cset	w22, eq  // eq = none
   278d0:	stur	w8, [x29, #-96]
   278d4:	add	x8, x24, #0x4
   278d8:	stur	x10, [x29, #-160]
   278dc:	str	x8, [sp, #152]
   278e0:	cmp	x22, #0x3
   278e4:	b.ne	278f8 <ZSTD_endStream@@Base+0x199a4>  // b.any
   278e8:	ldur	x8, [x29, #-168]
   278ec:	ldr	w8, [x8]
   278f0:	sub	w28, w8, #0x1
   278f4:	b	27900 <ZSTD_endStream@@Base+0x199ac>
   278f8:	ldur	x8, [x29, #-168]
   278fc:	ldr	w28, [x8, x22, lsl #2]
   27900:	sub	w8, w28, #0x1
   27904:	cmp	w8, w23
   27908:	b.cs	27958 <ZSTD_endStream@@Base+0x19a04>  // b.hs, b.nlast
   2790c:	ldur	x27, [x29, #-144]
   27910:	mov	w1, #0x4                   	// #4
   27914:	mov	x0, x27
   27918:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2791c:	mov	w28, w28
   27920:	mov	w24, w0
   27924:	sub	x0, x27, x28
   27928:	mov	w1, #0x4                   	// #4
   2792c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   27930:	cmp	w24, w0
   27934:	b.ne	27958 <ZSTD_endStream@@Base+0x19a04>  // b.any
   27938:	neg	x8, x28
   2793c:	ldr	x0, [sp, #152]
   27940:	ldur	x28, [x29, #-176]
   27944:	add	x1, x0, x8
   27948:	mov	x2, x28
   2794c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   27950:	add	w8, w0, #0x4
   27954:	b	27960 <ZSTD_endStream@@Base+0x19a0c>
   27958:	ldur	x28, [x29, #-176]
   2795c:	mov	w8, wzr
   27960:	mov	w9, w8
   27964:	cmp	x20, x9
   27968:	b.cs	279a8 <ZSTD_endStream@@Base+0x19a54>  // b.hs, b.nlast
   2796c:	ldur	x10, [x29, #-184]
   27970:	ldur	w11, [x29, #-104]
   27974:	add	x10, x10, w26, uxtw #3
   27978:	add	w26, w26, #0x1
   2797c:	cmp	w8, w11
   27980:	stp	w21, w8, [x10]
   27984:	mov	w8, #0x1                   	// #1
   27988:	b.hi	279d4 <ZSTD_endStream@@Base+0x19a80>  // b.pmore
   2798c:	ldur	x10, [x29, #-144]
   27990:	mov	x20, x9
   27994:	mov	w24, w26
   27998:	add	x10, x10, x9
   2799c:	cmp	x10, x28
   279a0:	b.ne	279ac <ZSTD_endStream@@Base+0x19a58>  // b.any
   279a4:	b	279b8 <ZSTD_endStream@@Base+0x19a64>
   279a8:	mov	x9, x20
   279ac:	mov	w8, wzr
   279b0:	mov	x20, x9
   279b4:	mov	w24, w19
   279b8:	cbnz	w8, 27dc0 <ZSTD_endStream@@Base+0x19e6c>
   279bc:	add	x22, x22, #0x1
   279c0:	cmp	x22, x25
   279c4:	add	w21, w21, #0x1
   279c8:	mov	w19, w24
   279cc:	b.cc	278e0 <ZSTD_endStream@@Base+0x1998c>  // b.lo, b.ul, b.last
   279d0:	b	27dbc <ZSTD_endStream@@Base+0x19e68>
   279d4:	mov	x20, x9
   279d8:	mov	w24, w26
   279dc:	cbz	w8, 279bc <ZSTD_endStream@@Base+0x19a68>
   279e0:	b	27dc0 <ZSTD_endStream@@Base+0x19e6c>
   279e4:	ldr	w8, [x22, #204]
   279e8:	ldr	x10, [x22, #8]
   279ec:	ldr	w1, [x22, #192]
   279f0:	ldr	x19, [x22, #48]
   279f4:	cmp	w8, #0xfff
   279f8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   279fc:	mov	w2, #0x5                   	// #5
   27a00:	mov	x0, x24
   27a04:	stur	w8, [x29, #-96]
   27a08:	str	x10, [sp, #152]
   27a0c:	sub	w23, w24, w10
   27a10:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   27a14:	ldp	w2, w8, [x22, #184]
   27a18:	ldr	w9, [x19, x0, lsl #2]
   27a1c:	str	x19, [sp, #96]
   27a20:	ldr	x25, [x22, #64]
   27a24:	sub	w8, w8, #0x1
   27a28:	str	w9, [sp, #112]
   27a2c:	mov	w9, #0xffffffff            	// #-1
   27a30:	lsl	w19, w9, w8
   27a34:	ldr	w20, [x22, #24]
   27a38:	mvn	w8, w19
   27a3c:	str	w8, [sp, #208]
   27a40:	subs	w8, w23, w8
   27a44:	str	x0, [sp, #80]
   27a48:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   27a4c:	mov	x0, x22
   27a50:	mov	w1, w23
   27a54:	str	w8, [sp, #200]
   27a58:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   27a5c:	cmp	w0, #0x0
   27a60:	csinc	w10, w0, wzr, ne  // ne = any
   27a64:	stur	w10, [x29, #-112]
   27a68:	ldur	w10, [x29, #-88]
   27a6c:	bic	w8, w23, w19
   27a70:	add	w9, w23, #0x9
   27a74:	stur	w9, [x29, #-104]
   27a78:	ldr	w9, [x22, #196]
   27a7c:	lsl	w8, w8, #1
   27a80:	cmp	w10, #0x0
   27a84:	add	x10, x25, w8, uxtw #2
   27a88:	mov	w8, #0x3                   	// #3
   27a8c:	str	w23, [sp, #88]
   27a90:	sub	w23, w23, w20
   27a94:	str	x25, [sp, #216]
   27a98:	cinc	x25, x8, eq  // eq = none
   27a9c:	add	x8, x10, #0x4
   27aa0:	ldr	x20, [sp, #128]
   27aa4:	stur	x8, [x29, #-160]
   27aa8:	mov	w8, #0x1                   	// #1
   27aac:	lsl	w8, w8, w9
   27ab0:	mov	w21, wzr
   27ab4:	mov	w26, wzr
   27ab8:	cset	w22, eq  // eq = none
   27abc:	str	w8, [sp, #108]
   27ac0:	add	x8, x24, #0x4
   27ac4:	stur	x10, [x29, #-128]
   27ac8:	str	x8, [sp, #160]
   27acc:	cmp	x22, #0x3
   27ad0:	b.ne	27ae4 <ZSTD_endStream@@Base+0x19b90>  // b.any
   27ad4:	ldur	x8, [x29, #-168]
   27ad8:	ldr	w8, [x8]
   27adc:	sub	w28, w8, #0x1
   27ae0:	b	27aec <ZSTD_endStream@@Base+0x19b98>
   27ae4:	ldur	x8, [x29, #-168]
   27ae8:	ldr	w28, [x8, x22, lsl #2]
   27aec:	sub	w8, w28, #0x1
   27af0:	cmp	w8, w23
   27af4:	b.cs	27b44 <ZSTD_endStream@@Base+0x19bf0>  // b.hs, b.nlast
   27af8:	ldur	x27, [x29, #-144]
   27afc:	mov	w1, #0x4                   	// #4
   27b00:	mov	x0, x27
   27b04:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   27b08:	mov	w28, w28
   27b0c:	mov	w24, w0
   27b10:	sub	x0, x27, x28
   27b14:	mov	w1, #0x4                   	// #4
   27b18:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   27b1c:	cmp	w24, w0
   27b20:	b.ne	27b44 <ZSTD_endStream@@Base+0x19bf0>  // b.any
   27b24:	neg	x8, x28
   27b28:	ldr	x0, [sp, #160]
   27b2c:	ldur	x28, [x29, #-176]
   27b30:	add	x1, x0, x8
   27b34:	mov	x2, x28
   27b38:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   27b3c:	add	w8, w0, #0x4
   27b40:	b	27b4c <ZSTD_endStream@@Base+0x19bf8>
   27b44:	ldur	x28, [x29, #-176]
   27b48:	mov	w8, wzr
   27b4c:	mov	w9, w8
   27b50:	cmp	x20, x9
   27b54:	b.cs	27b94 <ZSTD_endStream@@Base+0x19c40>  // b.hs, b.nlast
   27b58:	ldur	x10, [x29, #-184]
   27b5c:	ldur	w11, [x29, #-96]
   27b60:	add	x10, x10, w26, uxtw #3
   27b64:	add	w26, w26, #0x1
   27b68:	cmp	w8, w11
   27b6c:	stp	w21, w8, [x10]
   27b70:	mov	w8, #0x1                   	// #1
   27b74:	b.hi	27bc0 <ZSTD_endStream@@Base+0x19c6c>  // b.pmore
   27b78:	ldur	x10, [x29, #-144]
   27b7c:	mov	x20, x9
   27b80:	mov	w24, w26
   27b84:	add	x10, x10, x9
   27b88:	cmp	x10, x28
   27b8c:	b.ne	27b98 <ZSTD_endStream@@Base+0x19c44>  // b.any
   27b90:	b	27ba4 <ZSTD_endStream@@Base+0x19c50>
   27b94:	mov	x9, x20
   27b98:	mov	w8, wzr
   27b9c:	mov	x20, x9
   27ba0:	mov	w24, w19
   27ba4:	cbnz	w8, 27f80 <ZSTD_endStream@@Base+0x1a02c>
   27ba8:	add	x22, x22, #0x1
   27bac:	cmp	x22, x25
   27bb0:	add	w21, w21, #0x1
   27bb4:	mov	w19, w24
   27bb8:	b.cc	27acc <ZSTD_endStream@@Base+0x19b78>  // b.lo, b.ul, b.last
   27bbc:	b	27f7c <ZSTD_endStream@@Base+0x1a028>
   27bc0:	mov	x20, x9
   27bc4:	mov	w24, w26
   27bc8:	cbz	w8, 27ba8 <ZSTD_endStream@@Base+0x19c54>
   27bcc:	b	27f80 <ZSTD_endStream@@Base+0x1a02c>
   27bd0:	ldr	w8, [x22, #204]
   27bd4:	ldr	x10, [x22, #8]
   27bd8:	ldr	w1, [x22, #192]
   27bdc:	ldr	x19, [x22, #48]
   27be0:	cmp	w8, #0xfff
   27be4:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   27be8:	mov	w2, #0x4                   	// #4
   27bec:	mov	x0, x24
   27bf0:	stur	w8, [x29, #-96]
   27bf4:	str	x10, [sp, #152]
   27bf8:	sub	w23, w24, w10
   27bfc:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   27c00:	ldp	w2, w8, [x22, #184]
   27c04:	ldr	w9, [x19, x0, lsl #2]
   27c08:	str	x19, [sp, #96]
   27c0c:	ldr	x25, [x22, #64]
   27c10:	sub	w8, w8, #0x1
   27c14:	str	w9, [sp, #112]
   27c18:	mov	w9, #0xffffffff            	// #-1
   27c1c:	lsl	w19, w9, w8
   27c20:	ldr	w20, [x22, #24]
   27c24:	mvn	w8, w19
   27c28:	str	w8, [sp, #208]
   27c2c:	subs	w8, w23, w8
   27c30:	str	x0, [sp, #80]
   27c34:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   27c38:	mov	x0, x22
   27c3c:	mov	w1, w23
   27c40:	str	w8, [sp, #200]
   27c44:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   27c48:	cmp	w0, #0x0
   27c4c:	csinc	w10, w0, wzr, ne  // ne = any
   27c50:	stur	w10, [x29, #-112]
   27c54:	ldur	w10, [x29, #-88]
   27c58:	bic	w8, w23, w19
   27c5c:	add	w9, w23, #0x9
   27c60:	stur	w9, [x29, #-104]
   27c64:	ldr	w9, [x22, #196]
   27c68:	lsl	w8, w8, #1
   27c6c:	cmp	w10, #0x0
   27c70:	add	x10, x25, w8, uxtw #2
   27c74:	mov	w8, #0x3                   	// #3
   27c78:	str	w23, [sp, #88]
   27c7c:	sub	w23, w23, w20
   27c80:	str	x25, [sp, #216]
   27c84:	cinc	x25, x8, eq  // eq = none
   27c88:	add	x8, x10, #0x4
   27c8c:	ldr	x20, [sp, #128]
   27c90:	stur	x8, [x29, #-160]
   27c94:	mov	w8, #0x1                   	// #1
   27c98:	lsl	w8, w8, w9
   27c9c:	mov	w21, wzr
   27ca0:	mov	w26, wzr
   27ca4:	cset	w22, eq  // eq = none
   27ca8:	str	w8, [sp, #108]
   27cac:	add	x8, x24, #0x4
   27cb0:	stur	x10, [x29, #-128]
   27cb4:	str	x8, [sp, #160]
   27cb8:	cmp	x22, #0x3
   27cbc:	b.ne	27cd0 <ZSTD_endStream@@Base+0x19d7c>  // b.any
   27cc0:	ldur	x8, [x29, #-168]
   27cc4:	ldr	w8, [x8]
   27cc8:	sub	w28, w8, #0x1
   27ccc:	b	27cd8 <ZSTD_endStream@@Base+0x19d84>
   27cd0:	ldur	x8, [x29, #-168]
   27cd4:	ldr	w28, [x8, x22, lsl #2]
   27cd8:	sub	w8, w28, #0x1
   27cdc:	cmp	w8, w23
   27ce0:	b.cs	27d30 <ZSTD_endStream@@Base+0x19ddc>  // b.hs, b.nlast
   27ce4:	ldur	x27, [x29, #-144]
   27ce8:	mov	w1, #0x4                   	// #4
   27cec:	mov	x0, x27
   27cf0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   27cf4:	mov	w28, w28
   27cf8:	mov	w24, w0
   27cfc:	sub	x0, x27, x28
   27d00:	mov	w1, #0x4                   	// #4
   27d04:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   27d08:	cmp	w24, w0
   27d0c:	b.ne	27d30 <ZSTD_endStream@@Base+0x19ddc>  // b.any
   27d10:	neg	x8, x28
   27d14:	ldr	x0, [sp, #160]
   27d18:	ldur	x28, [x29, #-176]
   27d1c:	add	x1, x0, x8
   27d20:	mov	x2, x28
   27d24:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   27d28:	add	w8, w0, #0x4
   27d2c:	b	27d38 <ZSTD_endStream@@Base+0x19de4>
   27d30:	ldur	x28, [x29, #-176]
   27d34:	mov	w8, wzr
   27d38:	mov	w9, w8
   27d3c:	cmp	x20, x9
   27d40:	b.cs	27d80 <ZSTD_endStream@@Base+0x19e2c>  // b.hs, b.nlast
   27d44:	ldur	x10, [x29, #-184]
   27d48:	ldur	w11, [x29, #-96]
   27d4c:	add	x10, x10, w26, uxtw #3
   27d50:	add	w26, w26, #0x1
   27d54:	cmp	w8, w11
   27d58:	stp	w21, w8, [x10]
   27d5c:	mov	w8, #0x1                   	// #1
   27d60:	b.hi	27dac <ZSTD_endStream@@Base+0x19e58>  // b.pmore
   27d64:	ldur	x10, [x29, #-144]
   27d68:	mov	x20, x9
   27d6c:	mov	w24, w26
   27d70:	add	x10, x10, x9
   27d74:	cmp	x10, x28
   27d78:	b.ne	27d84 <ZSTD_endStream@@Base+0x19e30>  // b.any
   27d7c:	b	27d90 <ZSTD_endStream@@Base+0x19e3c>
   27d80:	mov	x9, x20
   27d84:	mov	w8, wzr
   27d88:	mov	x20, x9
   27d8c:	mov	w24, w19
   27d90:	cbnz	w8, 28110 <ZSTD_endStream@@Base+0x1a1bc>
   27d94:	add	x22, x22, #0x1
   27d98:	cmp	x22, x25
   27d9c:	add	w21, w21, #0x1
   27da0:	mov	w19, w24
   27da4:	b.cc	27cb8 <ZSTD_endStream@@Base+0x19d64>  // b.lo, b.ul, b.last
   27da8:	b	2810c <ZSTD_endStream@@Base+0x1a1b8>
   27dac:	mov	x20, x9
   27db0:	mov	w24, w26
   27db4:	cbz	w8, 27d94 <ZSTD_endStream@@Base+0x19e40>
   27db8:	b	28110 <ZSTD_endStream@@Base+0x1a1bc>
   27dbc:	mov	w8, wzr
   27dc0:	mov	w23, #0x1c                  	// #28
   27dc4:	cbnz	w8, 282b8 <ZSTD_endStream@@Base+0x1a364>
   27dc8:	ldr	w9, [sp, #88]
   27dcc:	ldr	x8, [sp, #96]
   27dd0:	ldr	x10, [sp, #80]
   27dd4:	ldr	x25, [sp, #112]
   27dd8:	ldr	w12, [sp, #108]
   27ddc:	mov	x22, xzr
   27de0:	mov	x21, xzr
   27de4:	add	w19, w9, #0x2
   27de8:	str	w9, [x8, x10, lsl #2]
   27dec:	b	27e04 <ZSTD_endStream@@Base+0x19eb0>
   27df0:	mov	x20, x8
   27df4:	mov	x8, x21
   27df8:	mov	w23, #0x1c                  	// #28
   27dfc:	mov	x21, x8
   27e00:	tbz	w9, #0, 27f4c <ZSTD_endStream@@Base+0x19ff8>
   27e04:	ldur	w8, [x29, #-96]
   27e08:	subs	w8, w8, #0x1
   27e0c:	b.cc	27f4c <ZSTD_endStream@@Base+0x19ff8>  // b.lo, b.ul, b.last
   27e10:	stur	w8, [x29, #-96]
   27e14:	ldur	w8, [x29, #-128]
   27e18:	cmp	w12, w8
   27e1c:	b.cc	27f4c <ZSTD_endStream@@Base+0x19ff8>  // b.lo, b.ul, b.last
   27e20:	ldur	x8, [x29, #-144]
   27e24:	cmp	x21, x22
   27e28:	add	x23, x25, w12, uxtw
   27e2c:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   27e30:	add	x0, x8, x24
   27e34:	add	x1, x23, x24
   27e38:	mov	x2, x28
   27e3c:	mov	w27, w12
   27e40:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   27e44:	add	x8, x0, x24
   27e48:	cmp	x8, x20
   27e4c:	b.ls	27ea4 <ZSTD_endStream@@Base+0x19f50>  // b.plast
   27e50:	ldur	w14, [x29, #-112]
   27e54:	ldur	x13, [x29, #-184]
   27e58:	add	w11, w27, w8
   27e5c:	sub	w12, w19, w27
   27e60:	sub	w10, w14, w27
   27e64:	add	x13, x13, w26, uxtw #3
   27e68:	cmp	x8, x10
   27e6c:	mov	w9, wzr
   27e70:	stp	w12, w8, [x13]
   27e74:	csel	w14, w11, w14, hi  // hi = pmore
   27e78:	cmp	x8, #0x1, lsl #12
   27e7c:	add	w26, w26, #0x1
   27e80:	mov	w12, w27
   27e84:	stur	w14, [x29, #-112]
   27e88:	b.hi	27df0 <ZSTD_endStream@@Base+0x19e9c>  // b.pmore
   27e8c:	ldur	x10, [x29, #-144]
   27e90:	mov	x20, x8
   27e94:	add	x10, x10, x8
   27e98:	cmp	x10, x28
   27e9c:	b.ne	27ea8 <ZSTD_endStream@@Base+0x19f54>  // b.any
   27ea0:	b	27df0 <ZSTD_endStream@@Base+0x19e9c>
   27ea4:	mov	w12, w27
   27ea8:	ldur	x10, [x29, #-144]
   27eac:	ldrb	w9, [x23, x8]
   27eb0:	ldr	w11, [sp, #200]
   27eb4:	ldrb	w10, [x10, x8]
   27eb8:	and	w11, w12, w11
   27ebc:	lsl	w11, w11, #1
   27ec0:	cmp	w9, w10
   27ec4:	ldr	x9, [sp, #208]
   27ec8:	add	x9, x9, w11, uxtw #2
   27ecc:	b.cs	27ef4 <ZSTD_endStream@@Base+0x19fa0>  // b.hs, b.nlast
   27ed0:	ldr	w10, [sp, #160]
   27ed4:	mov	w23, #0x1c                  	// #28
   27ed8:	cmp	w12, w10
   27edc:	ldur	x10, [x29, #-160]
   27ee0:	str	w12, [x10]
   27ee4:	b.ls	27f24 <ZSTD_endStream@@Base+0x19fd0>  // b.plast
   27ee8:	add	x9, x9, #0x4
   27eec:	stur	x9, [x29, #-160]
   27ef0:	b	27f18 <ZSTD_endStream@@Base+0x19fc4>
   27ef4:	ldr	w10, [sp, #160]
   27ef8:	mov	w23, #0x1c                  	// #28
   27efc:	cmp	w12, w10
   27f00:	ldr	x10, [sp, #216]
   27f04:	str	w12, [x10]
   27f08:	b.ls	27f34 <ZSTD_endStream@@Base+0x19fe0>  // b.plast
   27f0c:	str	x9, [sp, #216]
   27f10:	mov	x22, x8
   27f14:	mov	x8, x21
   27f18:	ldr	w12, [x9]
   27f1c:	mov	w9, #0x1                   	// #1
   27f20:	b	27dfc <ZSTD_endStream@@Base+0x19ea8>
   27f24:	sub	x10, x29, #0x40
   27f28:	mov	w9, wzr
   27f2c:	stur	x10, [x29, #-160]
   27f30:	b	27dfc <ZSTD_endStream@@Base+0x19ea8>
   27f34:	sub	x10, x29, #0x40
   27f38:	mov	w9, wzr
   27f3c:	str	x10, [sp, #216]
   27f40:	mov	x22, x8
   27f44:	mov	x8, x21
   27f48:	b	27dfc <ZSTD_endStream@@Base+0x19ea8>
   27f4c:	ldr	x8, [sp, #216]
   27f50:	str	wzr, [x8]
   27f54:	ldur	x8, [x29, #-160]
   27f58:	str	wzr, [x8]
   27f5c:	ldur	w8, [x29, #-112]
   27f60:	b	282a8 <ZSTD_endStream@@Base+0x1a354>
   27f64:	mov	w8, wzr
   27f68:	cbz	w8, 29bb0 <ZSTD_endStream@@Base+0x1bc5c>
   27f6c:	ldur	x21, [x29, #-168]
   27f70:	ldp	x26, x22, [x29, #-80]
   27f74:	mov	w23, #0x1c                  	// #28
   27f78:	b	29e6c <ZSTD_endStream@@Base+0x1bf18>
   27f7c:	mov	w8, wzr
   27f80:	mov	w23, #0x1c                  	// #28
   27f84:	cbnz	w8, 282b8 <ZSTD_endStream@@Base+0x1a364>
   27f88:	ldr	x8, [sp, #96]
   27f8c:	ldr	w9, [sp, #88]
   27f90:	ldr	x10, [sp, #80]
   27f94:	ldr	x25, [sp, #152]
   27f98:	mov	x22, xzr
   27f9c:	mov	x21, xzr
   27fa0:	str	w9, [x8, x10, lsl #2]
   27fa4:	ldp	w19, w12, [sp, #108]
   27fa8:	add	w8, w9, #0x2
   27fac:	stur	w8, [x29, #-96]
   27fb0:	b	27fc8 <ZSTD_endStream@@Base+0x1a074>
   27fb4:	mov	x20, x8
   27fb8:	mov	x8, x21
   27fbc:	mov	w23, #0x1c                  	// #28
   27fc0:	mov	x21, x8
   27fc4:	tbz	w9, #0, 28294 <ZSTD_endStream@@Base+0x1a340>
   27fc8:	subs	w19, w19, #0x1
   27fcc:	b.cc	28294 <ZSTD_endStream@@Base+0x1a340>  // b.lo, b.ul, b.last
   27fd0:	ldur	w8, [x29, #-112]
   27fd4:	cmp	w12, w8
   27fd8:	b.cc	28294 <ZSTD_endStream@@Base+0x1a340>  // b.lo, b.ul, b.last
   27fdc:	ldur	x8, [x29, #-144]
   27fe0:	cmp	x21, x22
   27fe4:	add	x23, x25, w12, uxtw
   27fe8:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   27fec:	add	x0, x8, x24
   27ff0:	add	x1, x23, x24
   27ff4:	mov	x2, x28
   27ff8:	mov	w27, w12
   27ffc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   28000:	add	x8, x0, x24
   28004:	cmp	x8, x20
   28008:	b.ls	28064 <ZSTD_endStream@@Base+0x1a110>  // b.plast
   2800c:	ldur	w14, [x29, #-104]
   28010:	ldur	w12, [x29, #-96]
   28014:	ldur	x13, [x29, #-184]
   28018:	add	w11, w27, w8
   2801c:	sub	w10, w14, w27
   28020:	sub	w12, w12, w27
   28024:	add	x13, x13, w26, uxtw #3
   28028:	cmp	x8, x10
   2802c:	mov	w9, wzr
   28030:	stp	w12, w8, [x13]
   28034:	csel	w14, w11, w14, hi  // hi = pmore
   28038:	cmp	x8, #0x1, lsl #12
   2803c:	add	w26, w26, #0x1
   28040:	mov	w12, w27
   28044:	stur	w14, [x29, #-104]
   28048:	b.hi	27fb4 <ZSTD_endStream@@Base+0x1a060>  // b.pmore
   2804c:	ldur	x10, [x29, #-144]
   28050:	mov	x20, x8
   28054:	add	x10, x10, x8
   28058:	cmp	x10, x28
   2805c:	b.ne	28068 <ZSTD_endStream@@Base+0x1a114>  // b.any
   28060:	b	27fb4 <ZSTD_endStream@@Base+0x1a060>
   28064:	mov	w12, w27
   28068:	ldur	x10, [x29, #-144]
   2806c:	ldrb	w9, [x23, x8]
   28070:	ldr	w11, [sp, #208]
   28074:	ldrb	w10, [x10, x8]
   28078:	and	w11, w12, w11
   2807c:	lsl	w11, w11, #1
   28080:	cmp	w9, w10
   28084:	ldr	x9, [sp, #216]
   28088:	add	x9, x9, w11, uxtw #2
   2808c:	b.cs	280b4 <ZSTD_endStream@@Base+0x1a160>  // b.hs, b.nlast
   28090:	ldr	w10, [sp, #200]
   28094:	mov	w23, #0x1c                  	// #28
   28098:	cmp	w12, w10
   2809c:	ldur	x10, [x29, #-128]
   280a0:	str	w12, [x10]
   280a4:	b.ls	280e4 <ZSTD_endStream@@Base+0x1a190>  // b.plast
   280a8:	add	x9, x9, #0x4
   280ac:	stur	x9, [x29, #-128]
   280b0:	b	280d8 <ZSTD_endStream@@Base+0x1a184>
   280b4:	ldr	w10, [sp, #200]
   280b8:	mov	w23, #0x1c                  	// #28
   280bc:	cmp	w12, w10
   280c0:	ldur	x10, [x29, #-160]
   280c4:	str	w12, [x10]
   280c8:	b.ls	280f4 <ZSTD_endStream@@Base+0x1a1a0>  // b.plast
   280cc:	stur	x9, [x29, #-160]
   280d0:	mov	x22, x8
   280d4:	mov	x8, x21
   280d8:	ldr	w12, [x9]
   280dc:	mov	w9, #0x1                   	// #1
   280e0:	b	27fc0 <ZSTD_endStream@@Base+0x1a06c>
   280e4:	sub	x10, x29, #0x40
   280e8:	mov	w9, wzr
   280ec:	stur	x10, [x29, #-128]
   280f0:	b	27fc0 <ZSTD_endStream@@Base+0x1a06c>
   280f4:	sub	x10, x29, #0x40
   280f8:	mov	w9, wzr
   280fc:	stur	x10, [x29, #-160]
   28100:	mov	x22, x8
   28104:	mov	x8, x21
   28108:	b	27fc0 <ZSTD_endStream@@Base+0x1a06c>
   2810c:	mov	w8, wzr
   28110:	mov	w23, #0x1c                  	// #28
   28114:	cbnz	w8, 282b8 <ZSTD_endStream@@Base+0x1a364>
   28118:	ldr	x8, [sp, #96]
   2811c:	ldr	w9, [sp, #88]
   28120:	ldr	x10, [sp, #80]
   28124:	ldr	x25, [sp, #152]
   28128:	mov	x22, xzr
   2812c:	mov	x21, xzr
   28130:	str	w9, [x8, x10, lsl #2]
   28134:	ldp	w19, w12, [sp, #108]
   28138:	add	w8, w9, #0x2
   2813c:	stur	w8, [x29, #-96]
   28140:	b	28160 <ZSTD_endStream@@Base+0x1a20c>
   28144:	add	x9, x9, #0x4
   28148:	stur	x9, [x29, #-128]
   2814c:	ldr	w12, [x9]
   28150:	mov	w23, #0x1c                  	// #28
   28154:	mov	w9, #0x1                   	// #1
   28158:	mov	x21, x8
   2815c:	tbz	w9, #0, 28294 <ZSTD_endStream@@Base+0x1a340>
   28160:	subs	w19, w19, #0x1
   28164:	b.cc	28294 <ZSTD_endStream@@Base+0x1a340>  // b.lo, b.ul, b.last
   28168:	ldur	w8, [x29, #-112]
   2816c:	cmp	w12, w8
   28170:	b.cc	28294 <ZSTD_endStream@@Base+0x1a340>  // b.lo, b.ul, b.last
   28174:	ldur	x8, [x29, #-144]
   28178:	cmp	x21, x22
   2817c:	add	x23, x25, w12, uxtw
   28180:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   28184:	add	x0, x8, x24
   28188:	add	x1, x23, x24
   2818c:	mov	x2, x28
   28190:	mov	w27, w12
   28194:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   28198:	add	x8, x0, x24
   2819c:	cmp	x8, x20
   281a0:	b.ls	28200 <ZSTD_endStream@@Base+0x1a2ac>  // b.plast
   281a4:	ldur	w14, [x29, #-104]
   281a8:	ldur	w12, [x29, #-96]
   281ac:	ldur	x13, [x29, #-184]
   281b0:	add	w11, w27, w8
   281b4:	sub	w10, w14, w27
   281b8:	sub	w12, w12, w27
   281bc:	add	x13, x13, w26, uxtw #3
   281c0:	cmp	x8, x10
   281c4:	mov	w9, wzr
   281c8:	stp	w12, w8, [x13]
   281cc:	csel	w14, w11, w14, hi  // hi = pmore
   281d0:	cmp	x8, #0x1, lsl #12
   281d4:	add	w26, w26, #0x1
   281d8:	mov	w12, w27
   281dc:	stur	w14, [x29, #-104]
   281e0:	b.hi	281f8 <ZSTD_endStream@@Base+0x1a2a4>  // b.pmore
   281e4:	ldur	x10, [x29, #-144]
   281e8:	mov	x20, x8
   281ec:	add	x10, x10, x8
   281f0:	cmp	x10, x28
   281f4:	b.ne	28204 <ZSTD_endStream@@Base+0x1a2b0>  // b.any
   281f8:	mov	x20, x8
   281fc:	b	28288 <ZSTD_endStream@@Base+0x1a334>
   28200:	mov	w12, w27
   28204:	ldur	x10, [x29, #-144]
   28208:	ldrb	w9, [x23, x8]
   2820c:	ldr	w11, [sp, #208]
   28210:	ldrb	w10, [x10, x8]
   28214:	and	w11, w12, w11
   28218:	lsl	w11, w11, #1
   2821c:	cmp	w9, w10
   28220:	ldr	x9, [sp, #216]
   28224:	add	x9, x9, w11, uxtw #2
   28228:	b.cs	28254 <ZSTD_endStream@@Base+0x1a300>  // b.hs, b.nlast
   2822c:	ldr	w10, [sp, #200]
   28230:	cmp	w12, w10
   28234:	ldur	x10, [x29, #-128]
   28238:	str	w12, [x10]
   2823c:	b.hi	28144 <ZSTD_endStream@@Base+0x1a1f0>  // b.pmore
   28240:	sub	x10, x29, #0x40
   28244:	mov	w9, wzr
   28248:	stur	x10, [x29, #-128]
   2824c:	mov	w23, #0x1c                  	// #28
   28250:	b	28158 <ZSTD_endStream@@Base+0x1a204>
   28254:	ldr	w10, [sp, #200]
   28258:	cmp	w12, w10
   2825c:	ldur	x10, [x29, #-160]
   28260:	str	w12, [x10]
   28264:	b.ls	28278 <ZSTD_endStream@@Base+0x1a324>  // b.plast
   28268:	stur	x9, [x29, #-160]
   2826c:	mov	x22, x8
   28270:	mov	x8, x21
   28274:	b	2814c <ZSTD_endStream@@Base+0x1a1f8>
   28278:	sub	x10, x29, #0x40
   2827c:	mov	w9, wzr
   28280:	stur	x10, [x29, #-160]
   28284:	mov	x22, x8
   28288:	mov	x8, x21
   2828c:	mov	w23, #0x1c                  	// #28
   28290:	b	28158 <ZSTD_endStream@@Base+0x1a204>
   28294:	ldur	x8, [x29, #-160]
   28298:	str	wzr, [x8]
   2829c:	ldur	x8, [x29, #-128]
   282a0:	str	wzr, [x8]
   282a4:	ldur	w8, [x29, #-104]
   282a8:	ldur	x9, [x29, #-72]
   282ac:	sub	w8, w8, #0x8
   282b0:	mov	w24, w26
   282b4:	str	w8, [x9, #36]
   282b8:	ldr	x27, [sp, #184]
   282bc:	ldur	x21, [x29, #-168]
   282c0:	ldp	x26, x22, [x29, #-80]
   282c4:	ldur	w20, [x29, #-116]
   282c8:	cbnz	w24, 27368 <ZSTD_endStream@@Base+0x19414>
   282cc:	ldur	x8, [x29, #-144]
   282d0:	mov	w0, wzr
   282d4:	add	x8, x8, #0x1
   282d8:	stur	x8, [x29, #-144]
   282dc:	mov	w8, #0x2                   	// #2
   282e0:	cmp	w8, #0x7
   282e4:	b.eq	298b8 <ZSTD_endStream@@Base+0x1b964>  // b.none
   282e8:	cbnz	w8, 2731c <ZSTD_endStream@@Base+0x193c8>
   282ec:	cbz	w0, 298cc <ZSTD_endStream@@Base+0x1b978>
   282f0:	mov	w20, #0x1                   	// #1
   282f4:	sub	w19, w20, #0x1
   282f8:	umaddl	x8, w19, w23, x26
   282fc:	ldur	x9, [x29, #-144]
   28300:	ldr	w8, [x8, #8]
   28304:	mov	w10, w20
   28308:	mov	x24, x26
   2830c:	add	x9, x9, x10
   28310:	mov	w26, w0
   28314:	mov	w25, w20
   28318:	stur	x10, [x29, #-96]
   2831c:	cbz	w8, 28328 <ZSTD_endStream@@Base+0x1a3d4>
   28320:	mov	w20, #0x1                   	// #1
   28324:	b	28334 <ZSTD_endStream@@Base+0x1a3e0>
   28328:	madd	x8, x19, x23, x24
   2832c:	ldr	w8, [x8, #12]
   28330:	add	w20, w8, #0x1
   28334:	mul	x8, x19, x23
   28338:	ldur	x23, [x29, #-200]
   2833c:	ldr	w21, [x24, x8]
   28340:	sub	x0, x9, #0x1
   28344:	mov	w1, #0x1                   	// #1
   28348:	mov	x2, x23
   2834c:	mov	w3, wzr
   28350:	stur	x9, [x29, #-88]
   28354:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   28358:	add	w21, w0, w21
   2835c:	mov	w0, w20
   28360:	mov	x1, x23
   28364:	mov	w2, wzr
   28368:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2836c:	add	w21, w21, w0
   28370:	sub	w0, w20, #0x1
   28374:	mov	x1, x23
   28378:	mov	w2, wzr
   2837c:	mov	w23, #0x1c                  	// #28
   28380:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   28384:	ldur	x12, [x29, #-96]
   28388:	sub	w9, w21, w0
   2838c:	madd	x8, x12, x23, x24
   28390:	ldr	w10, [x8]
   28394:	cmp	w9, w10
   28398:	b.gt	283c4 <ZSTD_endStream@@Base+0x1a470>
   2839c:	ldur	x11, [x29, #-80]
   283a0:	madd	x10, x12, x23, x11
   283a4:	madd	x11, x19, x23, x11
   283a8:	stur	xzr, [x10, #4]
   283ac:	str	w20, [x10, #12]
   283b0:	str	w9, [x8]
   283b4:	ldr	w9, [x11, #24]
   283b8:	ldr	x11, [x11, #16]
   283bc:	str	w9, [x10, #24]
   283c0:	str	x11, [x10, #16]
   283c4:	ldr	x9, [sp, #224]
   283c8:	ldur	x10, [x29, #-88]
   283cc:	mov	w0, w26
   283d0:	cmp	x10, x9
   283d4:	b.ls	283f0 <ZSTD_endStream@@Base+0x1a49c>  // b.plast
   283d8:	ldur	x26, [x29, #-80]
   283dc:	mov	w8, #0x13                  	// #19
   283e0:	mov	w20, w25
   283e4:	cmp	w8, #0x13
   283e8:	b.ls	295ec <ZSTD_endStream@@Base+0x1b698>  // b.plast
   283ec:	b	2731c <ZSTD_endStream@@Base+0x193c8>
   283f0:	mov	w20, w25
   283f4:	cmp	w25, w0
   283f8:	b.ne	28410 <ZSTD_endStream@@Base+0x1a4bc>  // b.any
   283fc:	ldur	x26, [x29, #-80]
   28400:	mov	w8, #0x11                  	// #17
   28404:	cmp	w8, #0x13
   28408:	b.ls	295ec <ZSTD_endStream@@Base+0x1b698>  // b.plast
   2840c:	b	2731c <ZSTD_endStream@@Base+0x193c8>
   28410:	ldur	x10, [x29, #-80]
   28414:	add	w9, w20, #0x1
   28418:	umull	x9, w9, w23
   2841c:	ldr	w11, [x8]
   28420:	ldr	w8, [x10, x9]
   28424:	add	w9, w11, #0x80
   28428:	cmp	w8, w9
   2842c:	b.le	2845c <ZSTD_endStream@@Base+0x1a508>
   28430:	madd	x9, x12, x23, x10
   28434:	ldr	w19, [x9, #8]!
   28438:	str	w0, [sp, #208]
   2843c:	str	w11, [sp, #108]
   28440:	cmp	w19, #0x0
   28444:	cset	w8, ne  // ne = any
   28448:	str	w8, [sp, #216]
   2844c:	str	x9, [sp, #112]
   28450:	cbz	w19, 28470 <ZSTD_endStream@@Base+0x1a51c>
   28454:	stur	wzr, [x29, #-128]
   28458:	b	2847c <ZSTD_endStream@@Base+0x1a528>
   2845c:	mov	w8, #0x13                  	// #19
   28460:	mov	x26, x10
   28464:	cmp	w8, #0x13
   28468:	b.ls	295ec <ZSTD_endStream@@Base+0x1b698>  // b.plast
   2846c:	b	2731c <ZSTD_endStream@@Base+0x193c8>
   28470:	madd	x8, x12, x23, x10
   28474:	ldr	w8, [x8, #12]
   28478:	stur	w8, [x29, #-128]
   2847c:	ldur	x1, [x29, #-200]
   28480:	mov	w0, wzr
   28484:	mov	w2, wzr
   28488:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2848c:	ldr	x21, [x22, #8]
   28490:	ldr	w22, [x22, #36]
   28494:	ldur	x10, [x29, #-88]
   28498:	mov	w24, wzr
   2849c:	str	w0, [sp, #96]
   284a0:	add	x8, x21, x22
   284a4:	cmp	x8, x10
   284a8:	b.hi	292c0 <ZSTD_endStream@@Base+0x1b36c>  // b.pmore
   284ac:	ldp	x8, x25, [x29, #-80]
   284b0:	sub	w23, w10, w21
   284b4:	ldur	x10, [x29, #-96]
   284b8:	stur	w20, [x29, #-116]
   284bc:	ldr	w20, [x25, #200]
   284c0:	mov	w9, #0x1c                  	// #28
   284c4:	cmp	w22, w23
   284c8:	madd	x24, x10, x9, x8
   284cc:	b.cs	284f4 <ZSTD_endStream@@Base+0x1a5a0>  // b.hs, b.nlast
   284d0:	add	x1, x21, w22, uxtw
   284d4:	mov	x0, x25
   284d8:	mov	x2, x28
   284dc:	mov	w3, w20
   284e0:	mov	w4, wzr
   284e4:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   284e8:	add	w22, w0, w22
   284ec:	cmp	w22, w23
   284f0:	b.cc	284d0 <ZSTD_endStream@@Base+0x1a57c>  // b.lo, b.ul, b.last
   284f4:	add	x8, x24, #0x10
   284f8:	stur	x8, [x29, #-104]
   284fc:	sub	w8, w20, #0x6
   28500:	cmp	w8, #0x2
   28504:	mov	x22, x25
   28508:	str	w23, [x25, #36]
   2850c:	b.cc	28770 <ZSTD_endStream@@Base+0x1a81c>  // b.lo, b.ul, b.last
   28510:	ldur	x24, [x29, #-96]
   28514:	cmp	w20, #0x5
   28518:	lsl	x21, x24, #3
   2851c:	b.eq	2898c <ZSTD_endStream@@Base+0x1aa38>  // b.none
   28520:	ldur	x10, [x29, #-88]
   28524:	cmp	w20, #0x3
   28528:	mov	w9, #0xfff                 	// #4095
   2852c:	b.ne	28ba8 <ZSTD_endStream@@Base+0x1ac54>  // b.any
   28530:	ldr	w8, [x22, #204]
   28534:	ldr	x11, [x22, #8]
   28538:	ldr	w1, [x22, #192]
   2853c:	ldur	x0, [x29, #-88]
   28540:	ldr	x20, [x22, #48]
   28544:	cmp	w8, #0xfff
   28548:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2854c:	mov	w2, #0x3                   	// #3
   28550:	stur	w8, [x29, #-160]
   28554:	str	x11, [sp, #88]
   28558:	sub	w27, w10, w11
   2855c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   28560:	ldp	w2, w8, [x22, #184]
   28564:	stp	x0, x20, [sp]
   28568:	ldr	w9, [x20, x0, lsl #2]
   2856c:	ldr	x25, [x22, #64]
   28570:	sub	w8, w8, #0x1
   28574:	mov	x26, x24
   28578:	str	w9, [sp, #20]
   2857c:	mov	w9, #0xffffffff            	// #-1
   28580:	lsl	w23, w9, w8
   28584:	ldr	w24, [x22, #24]
   28588:	mvn	w8, w23
   2858c:	str	w8, [sp, #48]
   28590:	subs	w8, w27, w8
   28594:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   28598:	mov	x0, x22
   2859c:	mov	w1, w27
   285a0:	str	w8, [sp, #36]
   285a4:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   285a8:	ldur	x13, [x29, #-88]
   285ac:	add	w11, w27, #0x9
   285b0:	mov	x10, x22
   285b4:	cmp	w0, #0x0
   285b8:	bic	w9, w27, w23
   285bc:	str	w11, [sp, #160]
   285c0:	add	x11, x13, #0x3
   285c4:	ldr	w10, [x10, #196]
   285c8:	str	x11, [sp, #80]
   285cc:	csinc	w11, w0, wzr, ne  // ne = any
   285d0:	lsl	w9, w9, #1
   285d4:	str	w11, [sp, #152]
   285d8:	cmp	w19, #0x0
   285dc:	add	x11, x25, w9, uxtw #2
   285e0:	mov	w9, #0x3                   	// #3
   285e4:	cinc	x15, x9, ne  // ne = any
   285e8:	add	x9, x11, #0x4
   285ec:	stp	x25, x9, [sp, #56]
   285f0:	mov	w9, #0x1                   	// #1
   285f4:	lsl	w9, w9, w10
   285f8:	stur	w9, [x29, #-152]
   285fc:	ldr	x9, [sp, #136]
   28600:	ldr	x28, [sp, #128]
   28604:	ldr	w12, [sp, #208]
   28608:	sub	x8, x21, x26
   2860c:	cinc	x8, x8, ne  // ne = any
   28610:	mov	x22, xzr
   28614:	mov	w20, wzr
   28618:	sub	w14, w27, w24
   2861c:	cset	w16, ne  // ne = any
   28620:	add	x8, x9, x8, lsl #2
   28624:	str	w27, [sp, #24]
   28628:	str	x11, [sp, #72]
   2862c:	stur	x8, [x29, #-112]
   28630:	str	x16, [sp, #200]
   28634:	add	x8, x16, x22
   28638:	cmp	x8, #0x3
   2863c:	b.eq	2864c <ZSTD_endStream@@Base+0x1a6f8>  // b.none
   28640:	ldur	x8, [x29, #-112]
   28644:	ldr	w23, [x8, x22, lsl #2]
   28648:	b	28658 <ZSTD_endStream@@Base+0x1a704>
   2864c:	ldur	x8, [x29, #-104]
   28650:	ldr	w8, [x8]
   28654:	sub	w23, w8, #0x1
   28658:	sub	w8, w23, #0x1
   2865c:	cmp	w8, w14
   28660:	b.cs	286c0 <ZSTD_endStream@@Base+0x1a76c>  // b.hs, b.nlast
   28664:	mov	w1, #0x3                   	// #3
   28668:	mov	x0, x13
   2866c:	mov	x19, x28
   28670:	mov	w28, w20
   28674:	mov	x20, x15
   28678:	mov	w21, w14
   2867c:	mov	w26, w12
   28680:	mov	x25, x13
   28684:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   28688:	mov	w23, w23
   2868c:	mov	w24, w0
   28690:	sub	x0, x25, x23
   28694:	mov	w1, #0x3                   	// #3
   28698:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2869c:	cmp	w24, w0
   286a0:	b.ne	286c8 <ZSTD_endStream@@Base+0x1a774>  // b.any
   286a4:	ldr	x0, [sp, #80]
   286a8:	ldur	x2, [x29, #-176]
   286ac:	neg	x8, x23
   286b0:	add	x1, x0, x8
   286b4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   286b8:	add	w8, w0, #0x3
   286bc:	b	286cc <ZSTD_endStream@@Base+0x1a778>
   286c0:	mov	w8, wzr
   286c4:	b	286e8 <ZSTD_endStream@@Base+0x1a794>
   286c8:	mov	w8, wzr
   286cc:	ldur	x13, [x29, #-88]
   286d0:	ldr	x16, [sp, #200]
   286d4:	mov	w12, w26
   286d8:	mov	w14, w21
   286dc:	mov	x15, x20
   286e0:	mov	w20, w28
   286e4:	mov	x28, x19
   286e8:	mov	w9, w8
   286ec:	cmp	x28, x9
   286f0:	mov	w23, #0x1c                  	// #28
   286f4:	b.cs	28734 <ZSTD_endStream@@Base+0x1a7e0>  // b.hs, b.nlast
   286f8:	ldur	x10, [x29, #-184]
   286fc:	ldur	w11, [x29, #-160]
   28700:	add	x10, x10, w20, uxtw #3
   28704:	add	w20, w20, #0x1
   28708:	cmp	w8, w11
   2870c:	stp	w22, w8, [x10]
   28710:	mov	w8, #0x1                   	// #1
   28714:	b.hi	28760 <ZSTD_endStream@@Base+0x1a80c>  // b.pmore
   28718:	ldur	x11, [x29, #-176]
   2871c:	add	x10, x13, x9
   28720:	mov	x28, x9
   28724:	mov	w24, w20
   28728:	cmp	x10, x11
   2872c:	b.ne	28738 <ZSTD_endStream@@Base+0x1a7e4>  // b.any
   28730:	b	28744 <ZSTD_endStream@@Base+0x1a7f0>
   28734:	mov	x9, x28
   28738:	mov	w8, wzr
   2873c:	mov	x28, x9
   28740:	mov	w24, w27
   28744:	cbnz	w8, 28f58 <ZSTD_endStream@@Base+0x1b004>
   28748:	add	x22, x22, #0x1
   2874c:	add	x8, x16, x22
   28750:	cmp	x8, x15
   28754:	mov	w27, w24
   28758:	b.cc	28634 <ZSTD_endStream@@Base+0x1a6e0>  // b.lo, b.ul, b.last
   2875c:	b	28f54 <ZSTD_endStream@@Base+0x1b000>
   28760:	mov	x28, x9
   28764:	mov	w24, w20
   28768:	cbz	w8, 28748 <ZSTD_endStream@@Base+0x1a7f4>
   2876c:	b	28f58 <ZSTD_endStream@@Base+0x1b004>
   28770:	ldr	w8, [x22, #204]
   28774:	ldur	x23, [x29, #-88]
   28778:	ldr	x10, [x22, #8]
   2877c:	ldr	w1, [x22, #192]
   28780:	ldr	x20, [x22, #48]
   28784:	cmp	w8, #0xfff
   28788:	mov	w9, #0xfff                 	// #4095
   2878c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   28790:	mov	w2, #0x6                   	// #6
   28794:	mov	x0, x23
   28798:	stur	w8, [x29, #-160]
   2879c:	str	x10, [sp, #152]
   287a0:	sub	w25, w23, w10
   287a4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   287a8:	ldp	w2, w8, [x22, #184]
   287ac:	ldr	w9, [x20, x0, lsl #2]
   287b0:	str	x20, [sp, #24]
   287b4:	ldr	x24, [x22, #64]
   287b8:	sub	w8, w8, #0x1
   287bc:	str	w9, [sp, #36]
   287c0:	mov	w9, #0xffffffff            	// #-1
   287c4:	lsl	w20, w9, w8
   287c8:	ldr	w21, [x22, #24]
   287cc:	mvn	w8, w20
   287d0:	str	w8, [sp, #64]
   287d4:	subs	w8, w25, w8
   287d8:	str	x0, [sp, #8]
   287dc:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   287e0:	mov	x0, x22
   287e4:	mov	w1, w25
   287e8:	str	w8, [sp, #56]
   287ec:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   287f0:	ldur	x11, [x29, #-96]
   287f4:	bic	w9, w25, w20
   287f8:	add	w10, w25, #0x9
   287fc:	cmp	w0, #0x0
   28800:	lsl	x8, x11, #3
   28804:	str	w10, [sp, #200]
   28808:	ldr	w10, [x22, #196]
   2880c:	add	x13, x23, #0x4
   28810:	lsl	w9, w9, #1
   28814:	str	x13, [sp, #48]
   28818:	csinc	w13, w0, wzr, ne  // ne = any
   2881c:	sub	x8, x8, x11
   28820:	cmp	w19, #0x0
   28824:	add	x11, x24, w9, uxtw #2
   28828:	mov	w9, #0x3                   	// #3
   2882c:	mov	x12, x23
   28830:	cinc	x23, x9, ne  // ne = any
   28834:	add	x9, x11, #0x4
   28838:	stp	x24, x9, [sp, #72]
   2883c:	mov	w9, #0x1                   	// #1
   28840:	lsl	w9, w9, w10
   28844:	stur	w9, [x29, #-112]
   28848:	ldr	x9, [sp, #136]
   2884c:	ldr	x20, [sp, #128]
   28850:	cinc	x8, x8, ne  // ne = any
   28854:	mov	x27, xzr
   28858:	mov	w28, wzr
   2885c:	sub	w14, w25, w21
   28860:	cset	w21, ne  // ne = any
   28864:	add	x8, x9, x8, lsl #2
   28868:	str	w25, [sp, #20]
   2886c:	str	w13, [sp, #160]
   28870:	str	x11, [sp, #88]
   28874:	stur	x8, [x29, #-152]
   28878:	add	x8, x21, x27
   2887c:	cmp	x8, #0x3
   28880:	b.eq	28890 <ZSTD_endStream@@Base+0x1a93c>  // b.none
   28884:	ldur	x8, [x29, #-152]
   28888:	ldr	w22, [x8, x27, lsl #2]
   2888c:	b	2889c <ZSTD_endStream@@Base+0x1a948>
   28890:	ldur	x8, [x29, #-104]
   28894:	ldr	w8, [x8]
   28898:	sub	w22, w8, #0x1
   2889c:	sub	w8, w22, #0x1
   288a0:	cmp	w8, w14
   288a4:	b.cs	288f4 <ZSTD_endStream@@Base+0x1a9a0>  // b.hs, b.nlast
   288a8:	mov	w1, #0x4                   	// #4
   288ac:	mov	x0, x12
   288b0:	mov	w19, w14
   288b4:	mov	x26, x12
   288b8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   288bc:	mov	w22, w22
   288c0:	mov	w24, w0
   288c4:	sub	x0, x26, x22
   288c8:	mov	w1, #0x4                   	// #4
   288cc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   288d0:	cmp	w24, w0
   288d4:	b.ne	288fc <ZSTD_endStream@@Base+0x1a9a8>  // b.any
   288d8:	ldr	x0, [sp, #48]
   288dc:	ldur	x2, [x29, #-176]
   288e0:	neg	x8, x22
   288e4:	add	x1, x0, x8
   288e8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   288ec:	add	w8, w0, #0x4
   288f0:	b	28900 <ZSTD_endStream@@Base+0x1a9ac>
   288f4:	mov	w8, wzr
   288f8:	b	28908 <ZSTD_endStream@@Base+0x1a9b4>
   288fc:	mov	w8, wzr
   28900:	ldur	x12, [x29, #-88]
   28904:	mov	w14, w19
   28908:	mov	w9, w8
   2890c:	cmp	x20, x9
   28910:	b.cs	28950 <ZSTD_endStream@@Base+0x1a9fc>  // b.hs, b.nlast
   28914:	ldur	x10, [x29, #-184]
   28918:	ldur	w11, [x29, #-160]
   2891c:	add	x10, x10, w28, uxtw #3
   28920:	add	w28, w28, #0x1
   28924:	cmp	w8, w11
   28928:	stp	w27, w8, [x10]
   2892c:	mov	w8, #0x1                   	// #1
   28930:	b.hi	2897c <ZSTD_endStream@@Base+0x1aa28>  // b.pmore
   28934:	ldur	x11, [x29, #-176]
   28938:	add	x10, x12, x9
   2893c:	mov	x20, x9
   28940:	mov	w24, w28
   28944:	cmp	x10, x11
   28948:	b.ne	28954 <ZSTD_endStream@@Base+0x1aa00>  // b.any
   2894c:	b	28960 <ZSTD_endStream@@Base+0x1aa0c>
   28950:	mov	x9, x20
   28954:	mov	w8, wzr
   28958:	mov	x20, x9
   2895c:	mov	w24, w25
   28960:	cbnz	w8, 28dc0 <ZSTD_endStream@@Base+0x1ae6c>
   28964:	add	x27, x27, #0x1
   28968:	add	x8, x21, x27
   2896c:	cmp	x8, x23
   28970:	mov	w25, w24
   28974:	b.cc	28878 <ZSTD_endStream@@Base+0x1a924>  // b.lo, b.ul, b.last
   28978:	b	28dbc <ZSTD_endStream@@Base+0x1ae68>
   2897c:	mov	x20, x9
   28980:	mov	w24, w28
   28984:	cbz	w8, 28964 <ZSTD_endStream@@Base+0x1aa10>
   28988:	b	28dc0 <ZSTD_endStream@@Base+0x1ae6c>
   2898c:	ldr	w8, [x22, #204]
   28990:	ldur	x23, [x29, #-88]
   28994:	ldr	x10, [x22, #8]
   28998:	ldr	w1, [x22, #192]
   2899c:	ldr	x20, [x22, #48]
   289a0:	cmp	w8, #0xfff
   289a4:	mov	w9, #0xfff                 	// #4095
   289a8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   289ac:	mov	w2, #0x5                   	// #5
   289b0:	mov	x0, x23
   289b4:	stur	w8, [x29, #-160]
   289b8:	str	x10, [sp, #152]
   289bc:	sub	w26, w23, w10
   289c0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   289c4:	ldp	w2, w8, [x22, #184]
   289c8:	ldr	w9, [x20, x0, lsl #2]
   289cc:	str	x20, [sp, #24]
   289d0:	str	x0, [sp, #8]
   289d4:	sub	w8, w8, #0x1
   289d8:	str	w9, [sp, #36]
   289dc:	mov	w9, #0xffffffff            	// #-1
   289e0:	lsl	w20, w9, w8
   289e4:	ldur	x8, [x29, #-72]
   289e8:	ldur	x0, [x29, #-72]
   289ec:	ldr	x25, [x22, #64]
   289f0:	mov	w1, w26
   289f4:	ldr	w22, [x8, #24]
   289f8:	mvn	w8, w20
   289fc:	str	w8, [sp, #64]
   28a00:	subs	w8, w26, w8
   28a04:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   28a08:	str	w8, [sp, #56]
   28a0c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   28a10:	add	w10, w26, #0x9
   28a14:	str	w10, [sp, #200]
   28a18:	ldur	x10, [x29, #-72]
   28a1c:	cmp	w0, #0x0
   28a20:	bic	w9, w26, w20
   28a24:	add	x11, x23, #0x4
   28a28:	ldr	w10, [x10, #196]
   28a2c:	str	x11, [sp, #48]
   28a30:	csinc	w11, w0, wzr, ne  // ne = any
   28a34:	lsl	w9, w9, #1
   28a38:	str	w11, [sp, #160]
   28a3c:	cmp	w19, #0x0
   28a40:	add	x11, x25, w9, uxtw #2
   28a44:	mov	w9, #0x3                   	// #3
   28a48:	mov	x12, x23
   28a4c:	cinc	x23, x9, ne  // ne = any
   28a50:	add	x9, x11, #0x4
   28a54:	stp	x25, x9, [sp, #72]
   28a58:	mov	w9, #0x1                   	// #1
   28a5c:	lsl	w9, w9, w10
   28a60:	stur	w9, [x29, #-112]
   28a64:	ldr	x9, [sp, #136]
   28a68:	ldr	x19, [sp, #128]
   28a6c:	sub	x8, x21, x24
   28a70:	cinc	x8, x8, ne  // ne = any
   28a74:	mov	x27, xzr
   28a78:	mov	w28, wzr
   28a7c:	sub	w13, w26, w22
   28a80:	cset	w21, ne  // ne = any
   28a84:	add	x8, x9, x8, lsl #2
   28a88:	str	w26, [sp, #20]
   28a8c:	str	x11, [sp, #88]
   28a90:	stur	x8, [x29, #-152]
   28a94:	add	x8, x21, x27
   28a98:	cmp	x8, #0x3
   28a9c:	b.eq	28aac <ZSTD_endStream@@Base+0x1ab58>  // b.none
   28aa0:	ldur	x8, [x29, #-152]
   28aa4:	ldr	w22, [x8, x27, lsl #2]
   28aa8:	b	28ab8 <ZSTD_endStream@@Base+0x1ab64>
   28aac:	ldur	x8, [x29, #-104]
   28ab0:	ldr	w8, [x8]
   28ab4:	sub	w22, w8, #0x1
   28ab8:	sub	w8, w22, #0x1
   28abc:	cmp	w8, w13
   28ac0:	b.cs	28b10 <ZSTD_endStream@@Base+0x1abbc>  // b.hs, b.nlast
   28ac4:	mov	w1, #0x4                   	// #4
   28ac8:	mov	x0, x12
   28acc:	mov	w20, w13
   28ad0:	mov	x26, x12
   28ad4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   28ad8:	mov	w22, w22
   28adc:	mov	w24, w0
   28ae0:	sub	x0, x26, x22
   28ae4:	mov	w1, #0x4                   	// #4
   28ae8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   28aec:	cmp	w24, w0
   28af0:	b.ne	28b18 <ZSTD_endStream@@Base+0x1abc4>  // b.any
   28af4:	ldr	x0, [sp, #48]
   28af8:	ldur	x2, [x29, #-176]
   28afc:	neg	x8, x22
   28b00:	add	x1, x0, x8
   28b04:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   28b08:	add	w8, w0, #0x4
   28b0c:	b	28b1c <ZSTD_endStream@@Base+0x1abc8>
   28b10:	mov	w8, wzr
   28b14:	b	28b24 <ZSTD_endStream@@Base+0x1abd0>
   28b18:	mov	w8, wzr
   28b1c:	ldur	x12, [x29, #-88]
   28b20:	mov	w13, w20
   28b24:	mov	w9, w8
   28b28:	cmp	x19, x9
   28b2c:	b.cs	28b6c <ZSTD_endStream@@Base+0x1ac18>  // b.hs, b.nlast
   28b30:	ldur	x10, [x29, #-184]
   28b34:	ldur	w11, [x29, #-160]
   28b38:	add	x10, x10, w28, uxtw #3
   28b3c:	add	w28, w28, #0x1
   28b40:	cmp	w8, w11
   28b44:	stp	w27, w8, [x10]
   28b48:	mov	w8, #0x1                   	// #1
   28b4c:	b.hi	28b98 <ZSTD_endStream@@Base+0x1ac44>  // b.pmore
   28b50:	ldur	x11, [x29, #-176]
   28b54:	add	x10, x12, x9
   28b58:	mov	x19, x9
   28b5c:	mov	w24, w28
   28b60:	cmp	x10, x11
   28b64:	b.ne	28b70 <ZSTD_endStream@@Base+0x1ac1c>  // b.any
   28b68:	b	28b7c <ZSTD_endStream@@Base+0x1ac28>
   28b6c:	mov	x9, x19
   28b70:	mov	w8, wzr
   28b74:	mov	x19, x9
   28b78:	mov	w24, w25
   28b7c:	cbnz	w8, 28f68 <ZSTD_endStream@@Base+0x1b014>
   28b80:	add	x27, x27, #0x1
   28b84:	add	x8, x21, x27
   28b88:	cmp	x8, x23
   28b8c:	mov	w25, w24
   28b90:	b.cc	28a94 <ZSTD_endStream@@Base+0x1ab40>  // b.lo, b.ul, b.last
   28b94:	b	28f64 <ZSTD_endStream@@Base+0x1b010>
   28b98:	mov	x19, x9
   28b9c:	mov	w24, w28
   28ba0:	cbz	w8, 28b80 <ZSTD_endStream@@Base+0x1ac2c>
   28ba4:	b	28f68 <ZSTD_endStream@@Base+0x1b014>
   28ba8:	ldr	w8, [x22, #204]
   28bac:	ldr	x11, [x22, #8]
   28bb0:	ldr	w1, [x22, #192]
   28bb4:	ldur	x0, [x29, #-88]
   28bb8:	ldr	x20, [x22, #48]
   28bbc:	cmp	w8, #0xfff
   28bc0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   28bc4:	mov	w2, #0x4                   	// #4
   28bc8:	stur	w8, [x29, #-160]
   28bcc:	str	x11, [sp, #152]
   28bd0:	sub	w25, w10, w11
   28bd4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   28bd8:	ldp	w2, w8, [x22, #184]
   28bdc:	ldr	w9, [x20, x0, lsl #2]
   28be0:	str	x20, [sp, #24]
   28be4:	str	x0, [sp, #8]
   28be8:	sub	w8, w8, #0x1
   28bec:	str	w9, [sp, #36]
   28bf0:	mov	w9, #0xffffffff            	// #-1
   28bf4:	lsl	w20, w9, w8
   28bf8:	ldur	x8, [x29, #-72]
   28bfc:	ldur	x0, [x29, #-72]
   28c00:	ldr	x23, [x22, #64]
   28c04:	mov	w1, w25
   28c08:	ldr	w22, [x8, #24]
   28c0c:	mvn	w8, w20
   28c10:	str	w8, [sp, #64]
   28c14:	subs	w8, w25, w8
   28c18:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   28c1c:	str	w8, [sp, #56]
   28c20:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   28c24:	ldur	x12, [x29, #-88]
   28c28:	add	w10, w25, #0x9
   28c2c:	str	w10, [sp, #200]
   28c30:	ldur	x10, [x29, #-72]
   28c34:	cmp	w0, #0x0
   28c38:	bic	w9, w25, w20
   28c3c:	add	x11, x12, #0x4
   28c40:	ldr	w10, [x10, #196]
   28c44:	str	x11, [sp, #48]
   28c48:	csinc	w11, w0, wzr, ne  // ne = any
   28c4c:	lsl	w9, w9, #1
   28c50:	str	w11, [sp, #160]
   28c54:	cmp	w19, #0x0
   28c58:	add	x11, x23, w9, uxtw #2
   28c5c:	mov	w9, #0x3                   	// #3
   28c60:	str	x23, [sp, #72]
   28c64:	cinc	x23, x9, ne  // ne = any
   28c68:	add	x9, x11, #0x4
   28c6c:	stp	x9, x11, [sp, #80]
   28c70:	mov	w9, #0x1                   	// #1
   28c74:	lsl	w9, w9, w10
   28c78:	stur	w9, [x29, #-112]
   28c7c:	ldr	x9, [sp, #136]
   28c80:	ldr	x19, [sp, #128]
   28c84:	sub	x8, x21, x24
   28c88:	cinc	x8, x8, ne  // ne = any
   28c8c:	mov	x27, xzr
   28c90:	mov	w28, wzr
   28c94:	sub	w13, w25, w22
   28c98:	cset	w21, ne  // ne = any
   28c9c:	add	x8, x9, x8, lsl #2
   28ca0:	str	w25, [sp, #20]
   28ca4:	stur	x8, [x29, #-152]
   28ca8:	add	x8, x21, x27
   28cac:	cmp	x8, #0x3
   28cb0:	b.eq	28cc0 <ZSTD_endStream@@Base+0x1ad6c>  // b.none
   28cb4:	ldur	x8, [x29, #-152]
   28cb8:	ldr	w22, [x8, x27, lsl #2]
   28cbc:	b	28ccc <ZSTD_endStream@@Base+0x1ad78>
   28cc0:	ldur	x8, [x29, #-104]
   28cc4:	ldr	w8, [x8]
   28cc8:	sub	w22, w8, #0x1
   28ccc:	sub	w8, w22, #0x1
   28cd0:	cmp	w8, w13
   28cd4:	b.cs	28d24 <ZSTD_endStream@@Base+0x1add0>  // b.hs, b.nlast
   28cd8:	mov	w1, #0x4                   	// #4
   28cdc:	mov	x0, x12
   28ce0:	mov	w20, w13
   28ce4:	mov	x26, x12
   28ce8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   28cec:	mov	w22, w22
   28cf0:	mov	w24, w0
   28cf4:	sub	x0, x26, x22
   28cf8:	mov	w1, #0x4                   	// #4
   28cfc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   28d00:	cmp	w24, w0
   28d04:	b.ne	28d2c <ZSTD_endStream@@Base+0x1add8>  // b.any
   28d08:	ldr	x0, [sp, #48]
   28d0c:	ldur	x2, [x29, #-176]
   28d10:	neg	x8, x22
   28d14:	add	x1, x0, x8
   28d18:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   28d1c:	add	w8, w0, #0x4
   28d20:	b	28d30 <ZSTD_endStream@@Base+0x1addc>
   28d24:	mov	w8, wzr
   28d28:	b	28d38 <ZSTD_endStream@@Base+0x1ade4>
   28d2c:	mov	w8, wzr
   28d30:	ldur	x12, [x29, #-88]
   28d34:	mov	w13, w20
   28d38:	mov	w9, w8
   28d3c:	cmp	x19, x9
   28d40:	b.cs	28d80 <ZSTD_endStream@@Base+0x1ae2c>  // b.hs, b.nlast
   28d44:	ldur	x10, [x29, #-184]
   28d48:	ldur	w11, [x29, #-160]
   28d4c:	add	x10, x10, w28, uxtw #3
   28d50:	add	w28, w28, #0x1
   28d54:	cmp	w8, w11
   28d58:	stp	w27, w8, [x10]
   28d5c:	mov	w8, #0x1                   	// #1
   28d60:	b.hi	28dac <ZSTD_endStream@@Base+0x1ae58>  // b.pmore
   28d64:	ldur	x11, [x29, #-176]
   28d68:	add	x10, x12, x9
   28d6c:	mov	x19, x9
   28d70:	mov	w24, w28
   28d74:	cmp	x10, x11
   28d78:	b.ne	28d84 <ZSTD_endStream@@Base+0x1ae30>  // b.any
   28d7c:	b	28d90 <ZSTD_endStream@@Base+0x1ae3c>
   28d80:	mov	x9, x19
   28d84:	mov	w8, wzr
   28d88:	mov	x19, x9
   28d8c:	mov	w24, w25
   28d90:	cbnz	w8, 29100 <ZSTD_endStream@@Base+0x1b1ac>
   28d94:	add	x27, x27, #0x1
   28d98:	add	x8, x21, x27
   28d9c:	cmp	x8, x23
   28da0:	mov	w25, w24
   28da4:	b.cc	28ca8 <ZSTD_endStream@@Base+0x1ad54>  // b.lo, b.ul, b.last
   28da8:	b	290fc <ZSTD_endStream@@Base+0x1b1a8>
   28dac:	mov	x19, x9
   28db0:	mov	w24, w28
   28db4:	cbz	w8, 28d94 <ZSTD_endStream@@Base+0x1ae40>
   28db8:	b	29100 <ZSTD_endStream@@Base+0x1b1ac>
   28dbc:	mov	w8, wzr
   28dc0:	ldr	x27, [sp, #184]
   28dc4:	mov	w23, #0x1c                  	// #28
   28dc8:	cbnz	w8, 292b8 <ZSTD_endStream@@Base+0x1b364>
   28dcc:	ldr	w9, [sp, #20]
   28dd0:	ldr	x8, [sp, #24]
   28dd4:	ldr	x10, [sp, #8]
   28dd8:	ldr	w13, [sp, #36]
   28ddc:	mov	x24, xzr
   28de0:	mov	x21, xzr
   28de4:	add	w22, w9, #0x2
   28de8:	str	w9, [x8, x10, lsl #2]
   28dec:	b	28e10 <ZSTD_endStream@@Base+0x1aebc>
   28df0:	sub	x10, x29, #0x40
   28df4:	mov	w9, wzr
   28df8:	str	x10, [sp, #80]
   28dfc:	mov	x24, x8
   28e00:	mov	x8, x21
   28e04:	mov	w23, #0x1c                  	// #28
   28e08:	mov	x21, x8
   28e0c:	tbz	w9, #0, 29294 <ZSTD_endStream@@Base+0x1b340>
   28e10:	ldur	w9, [x29, #-112]
   28e14:	subs	w9, w9, #0x1
   28e18:	b.cc	29294 <ZSTD_endStream@@Base+0x1b340>  // b.lo, b.ul, b.last
   28e1c:	ldr	w8, [sp, #160]
   28e20:	cmp	w13, w8
   28e24:	b.cc	29294 <ZSTD_endStream@@Base+0x1b340>  // b.lo, b.ul, b.last
   28e28:	ldr	x8, [sp, #152]
   28e2c:	ldur	x2, [x29, #-176]
   28e30:	cmp	x21, x24
   28e34:	csel	x25, x21, x24, cc  // cc = lo, ul, last
   28e38:	add	x23, x8, w13, uxtw
   28e3c:	add	x0, x12, x25
   28e40:	add	x1, x23, x25
   28e44:	stur	w9, [x29, #-112]
   28e48:	mov	w26, w13
   28e4c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   28e50:	add	x8, x0, x25
   28e54:	cmp	x8, x20
   28e58:	b.ls	28eb8 <ZSTD_endStream@@Base+0x1af64>  // b.plast
   28e5c:	ldr	w14, [sp, #200]
   28e60:	ldur	x13, [x29, #-184]
   28e64:	add	w11, w26, w8
   28e68:	sub	w12, w22, w26
   28e6c:	sub	w10, w14, w26
   28e70:	add	x13, x13, w28, uxtw #3
   28e74:	cmp	x8, x10
   28e78:	mov	w9, wzr
   28e7c:	stp	w12, w8, [x13]
   28e80:	csel	w14, w11, w14, hi  // hi = pmore
   28e84:	cmp	x8, #0x1, lsl #12
   28e88:	add	w28, w28, #0x1
   28e8c:	mov	w13, w26
   28e90:	str	w14, [sp, #200]
   28e94:	b.hi	28f48 <ZSTD_endStream@@Base+0x1aff4>  // b.pmore
   28e98:	ldur	x12, [x29, #-88]
   28e9c:	ldur	x11, [x29, #-176]
   28ea0:	mov	x20, x8
   28ea4:	add	x10, x12, x8
   28ea8:	cmp	x10, x11
   28eac:	b.ne	28ec0 <ZSTD_endStream@@Base+0x1af6c>  // b.any
   28eb0:	mov	x20, x8
   28eb4:	b	28e00 <ZSTD_endStream@@Base+0x1aeac>
   28eb8:	ldur	x12, [x29, #-88]
   28ebc:	mov	w13, w26
   28ec0:	ldrb	w9, [x23, x8]
   28ec4:	ldrb	w10, [x12, x8]
   28ec8:	ldr	w11, [sp, #64]
   28ecc:	cmp	w9, w10
   28ed0:	ldr	x9, [sp, #72]
   28ed4:	and	w11, w13, w11
   28ed8:	lsl	w11, w11, #1
   28edc:	add	x9, x9, w11, uxtw #2
   28ee0:	b.cs	28f04 <ZSTD_endStream@@Base+0x1afb0>  // b.hs, b.nlast
   28ee4:	ldr	w10, [sp, #56]
   28ee8:	cmp	w13, w10
   28eec:	ldr	x10, [sp, #88]
   28ef0:	str	w13, [x10]
   28ef4:	b.ls	28f34 <ZSTD_endStream@@Base+0x1afe0>  // b.plast
   28ef8:	add	x9, x9, #0x4
   28efc:	str	x9, [sp, #88]
   28f00:	b	28f24 <ZSTD_endStream@@Base+0x1afd0>
   28f04:	ldr	w10, [sp, #56]
   28f08:	cmp	w13, w10
   28f0c:	ldr	x10, [sp, #80]
   28f10:	str	w13, [x10]
   28f14:	b.ls	28df0 <ZSTD_endStream@@Base+0x1ae9c>  // b.plast
   28f18:	str	x9, [sp, #80]
   28f1c:	mov	x24, x8
   28f20:	mov	x8, x21
   28f24:	ldr	w13, [x9]
   28f28:	mov	w23, #0x1c                  	// #28
   28f2c:	mov	w9, #0x1                   	// #1
   28f30:	b	28e08 <ZSTD_endStream@@Base+0x1aeb4>
   28f34:	sub	x10, x29, #0x40
   28f38:	mov	w9, wzr
   28f3c:	str	x10, [sp, #88]
   28f40:	mov	w23, #0x1c                  	// #28
   28f44:	b	28e08 <ZSTD_endStream@@Base+0x1aeb4>
   28f48:	ldur	x12, [x29, #-88]
   28f4c:	mov	x20, x8
   28f50:	b	28e00 <ZSTD_endStream@@Base+0x1aeac>
   28f54:	mov	w8, wzr
   28f58:	cbz	w8, 29614 <ZSTD_endStream@@Base+0x1b6c0>
   28f5c:	ldr	x27, [sp, #184]
   28f60:	b	292b8 <ZSTD_endStream@@Base+0x1b364>
   28f64:	mov	w8, wzr
   28f68:	ldr	x27, [sp, #184]
   28f6c:	mov	w23, #0x1c                  	// #28
   28f70:	cbnz	w8, 292b8 <ZSTD_endStream@@Base+0x1b364>
   28f74:	ldr	w9, [sp, #20]
   28f78:	ldr	x8, [sp, #24]
   28f7c:	ldr	x10, [sp, #8]
   28f80:	ldr	w13, [sp, #36]
   28f84:	mov	x24, xzr
   28f88:	mov	x21, xzr
   28f8c:	add	w22, w9, #0x2
   28f90:	str	w9, [x8, x10, lsl #2]
   28f94:	b	28fb0 <ZSTD_endStream@@Base+0x1b05c>
   28f98:	ldur	x12, [x29, #-88]
   28f9c:	mov	x19, x8
   28fa0:	mov	x8, x21
   28fa4:	mov	w23, #0x1c                  	// #28
   28fa8:	mov	x21, x8
   28fac:	tbz	w9, #0, 29294 <ZSTD_endStream@@Base+0x1b340>
   28fb0:	ldur	w9, [x29, #-112]
   28fb4:	subs	w9, w9, #0x1
   28fb8:	b.cc	29294 <ZSTD_endStream@@Base+0x1b340>  // b.lo, b.ul, b.last
   28fbc:	ldr	w8, [sp, #160]
   28fc0:	cmp	w13, w8
   28fc4:	b.cc	29294 <ZSTD_endStream@@Base+0x1b340>  // b.lo, b.ul, b.last
   28fc8:	ldr	x8, [sp, #152]
   28fcc:	ldur	x2, [x29, #-176]
   28fd0:	cmp	x21, x24
   28fd4:	csel	x25, x21, x24, cc  // cc = lo, ul, last
   28fd8:	add	x23, x8, w13, uxtw
   28fdc:	add	x0, x12, x25
   28fe0:	add	x1, x23, x25
   28fe4:	stur	w9, [x29, #-112]
   28fe8:	mov	w26, w13
   28fec:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   28ff0:	add	x8, x0, x25
   28ff4:	cmp	x8, x19
   28ff8:	b.ls	29054 <ZSTD_endStream@@Base+0x1b100>  // b.plast
   28ffc:	ldr	w14, [sp, #200]
   29000:	ldur	x13, [x29, #-184]
   29004:	add	w11, w26, w8
   29008:	sub	w12, w22, w26
   2900c:	sub	w10, w14, w26
   29010:	add	x13, x13, w28, uxtw #3
   29014:	cmp	x8, x10
   29018:	mov	w9, wzr
   2901c:	stp	w12, w8, [x13]
   29020:	csel	w14, w11, w14, hi  // hi = pmore
   29024:	cmp	x8, #0x1, lsl #12
   29028:	add	w28, w28, #0x1
   2902c:	mov	w13, w26
   29030:	str	w14, [sp, #200]
   29034:	b.hi	28f98 <ZSTD_endStream@@Base+0x1b044>  // b.pmore
   29038:	ldur	x12, [x29, #-88]
   2903c:	ldur	x11, [x29, #-176]
   29040:	mov	x19, x8
   29044:	add	x10, x12, x8
   29048:	cmp	x10, x11
   2904c:	b.ne	2905c <ZSTD_endStream@@Base+0x1b108>  // b.any
   29050:	b	28f9c <ZSTD_endStream@@Base+0x1b048>
   29054:	ldur	x12, [x29, #-88]
   29058:	mov	w13, w26
   2905c:	ldrb	w9, [x23, x8]
   29060:	ldrb	w10, [x12, x8]
   29064:	ldr	w11, [sp, #64]
   29068:	cmp	w9, w10
   2906c:	ldr	x9, [sp, #72]
   29070:	and	w11, w13, w11
   29074:	lsl	w11, w11, #1
   29078:	add	x9, x9, w11, uxtw #2
   2907c:	b.cs	290a4 <ZSTD_endStream@@Base+0x1b150>  // b.hs, b.nlast
   29080:	ldr	w10, [sp, #56]
   29084:	mov	w23, #0x1c                  	// #28
   29088:	cmp	w13, w10
   2908c:	ldr	x10, [sp, #88]
   29090:	str	w13, [x10]
   29094:	b.ls	290d4 <ZSTD_endStream@@Base+0x1b180>  // b.plast
   29098:	add	x9, x9, #0x4
   2909c:	str	x9, [sp, #88]
   290a0:	b	290c8 <ZSTD_endStream@@Base+0x1b174>
   290a4:	ldr	w10, [sp, #56]
   290a8:	mov	w23, #0x1c                  	// #28
   290ac:	cmp	w13, w10
   290b0:	ldr	x10, [sp, #80]
   290b4:	str	w13, [x10]
   290b8:	b.ls	290e4 <ZSTD_endStream@@Base+0x1b190>  // b.plast
   290bc:	str	x9, [sp, #80]
   290c0:	mov	x24, x8
   290c4:	mov	x8, x21
   290c8:	ldr	w13, [x9]
   290cc:	mov	w9, #0x1                   	// #1
   290d0:	b	28fa8 <ZSTD_endStream@@Base+0x1b054>
   290d4:	sub	x10, x29, #0x40
   290d8:	mov	w9, wzr
   290dc:	str	x10, [sp, #88]
   290e0:	b	28fa8 <ZSTD_endStream@@Base+0x1b054>
   290e4:	sub	x10, x29, #0x40
   290e8:	mov	w9, wzr
   290ec:	str	x10, [sp, #80]
   290f0:	mov	x24, x8
   290f4:	mov	x8, x21
   290f8:	b	28fa8 <ZSTD_endStream@@Base+0x1b054>
   290fc:	mov	w8, wzr
   29100:	ldr	x27, [sp, #184]
   29104:	mov	w23, #0x1c                  	// #28
   29108:	cbnz	w8, 292b8 <ZSTD_endStream@@Base+0x1b364>
   2910c:	ldr	w9, [sp, #20]
   29110:	ldr	x8, [sp, #24]
   29114:	ldr	x10, [sp, #8]
   29118:	ldr	w13, [sp, #36]
   2911c:	mov	x24, xzr
   29120:	mov	x21, xzr
   29124:	add	w22, w9, #0x2
   29128:	str	w9, [x8, x10, lsl #2]
   2912c:	b	29150 <ZSTD_endStream@@Base+0x1b1fc>
   29130:	sub	x10, x29, #0x40
   29134:	mov	w9, wzr
   29138:	str	x10, [sp, #80]
   2913c:	mov	x24, x8
   29140:	mov	x8, x21
   29144:	mov	w23, #0x1c                  	// #28
   29148:	mov	x21, x8
   2914c:	tbz	w9, #0, 29294 <ZSTD_endStream@@Base+0x1b340>
   29150:	ldur	w9, [x29, #-112]
   29154:	subs	w9, w9, #0x1
   29158:	b.cc	29294 <ZSTD_endStream@@Base+0x1b340>  // b.lo, b.ul, b.last
   2915c:	ldr	w8, [sp, #160]
   29160:	cmp	w13, w8
   29164:	b.cc	29294 <ZSTD_endStream@@Base+0x1b340>  // b.lo, b.ul, b.last
   29168:	ldr	x8, [sp, #152]
   2916c:	ldur	x2, [x29, #-176]
   29170:	cmp	x21, x24
   29174:	csel	x25, x21, x24, cc  // cc = lo, ul, last
   29178:	add	x23, x8, w13, uxtw
   2917c:	add	x0, x12, x25
   29180:	add	x1, x23, x25
   29184:	stur	w9, [x29, #-112]
   29188:	mov	w26, w13
   2918c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   29190:	add	x8, x0, x25
   29194:	cmp	x8, x19
   29198:	b.ls	291f8 <ZSTD_endStream@@Base+0x1b2a4>  // b.plast
   2919c:	ldr	w14, [sp, #200]
   291a0:	ldur	x13, [x29, #-184]
   291a4:	add	w11, w26, w8
   291a8:	sub	w12, w22, w26
   291ac:	sub	w10, w14, w26
   291b0:	add	x13, x13, w28, uxtw #3
   291b4:	cmp	x8, x10
   291b8:	mov	w9, wzr
   291bc:	stp	w12, w8, [x13]
   291c0:	csel	w14, w11, w14, hi  // hi = pmore
   291c4:	cmp	x8, #0x1, lsl #12
   291c8:	add	w28, w28, #0x1
   291cc:	mov	w13, w26
   291d0:	str	w14, [sp, #200]
   291d4:	b.hi	29288 <ZSTD_endStream@@Base+0x1b334>  // b.pmore
   291d8:	ldur	x12, [x29, #-88]
   291dc:	ldur	x11, [x29, #-176]
   291e0:	mov	x19, x8
   291e4:	add	x10, x12, x8
   291e8:	cmp	x10, x11
   291ec:	b.ne	29200 <ZSTD_endStream@@Base+0x1b2ac>  // b.any
   291f0:	mov	x19, x8
   291f4:	b	29140 <ZSTD_endStream@@Base+0x1b1ec>
   291f8:	ldur	x12, [x29, #-88]
   291fc:	mov	w13, w26
   29200:	ldrb	w9, [x23, x8]
   29204:	ldrb	w10, [x12, x8]
   29208:	ldr	w11, [sp, #64]
   2920c:	cmp	w9, w10
   29210:	ldr	x9, [sp, #72]
   29214:	and	w11, w13, w11
   29218:	lsl	w11, w11, #1
   2921c:	add	x9, x9, w11, uxtw #2
   29220:	b.cs	29244 <ZSTD_endStream@@Base+0x1b2f0>  // b.hs, b.nlast
   29224:	ldr	w10, [sp, #56]
   29228:	cmp	w13, w10
   2922c:	ldr	x10, [sp, #88]
   29230:	str	w13, [x10]
   29234:	b.ls	29274 <ZSTD_endStream@@Base+0x1b320>  // b.plast
   29238:	add	x9, x9, #0x4
   2923c:	str	x9, [sp, #88]
   29240:	b	29264 <ZSTD_endStream@@Base+0x1b310>
   29244:	ldr	w10, [sp, #56]
   29248:	cmp	w13, w10
   2924c:	ldr	x10, [sp, #80]
   29250:	str	w13, [x10]
   29254:	b.ls	29130 <ZSTD_endStream@@Base+0x1b1dc>  // b.plast
   29258:	str	x9, [sp, #80]
   2925c:	mov	x24, x8
   29260:	mov	x8, x21
   29264:	ldr	w13, [x9]
   29268:	mov	w23, #0x1c                  	// #28
   2926c:	mov	w9, #0x1                   	// #1
   29270:	b	29148 <ZSTD_endStream@@Base+0x1b1f4>
   29274:	sub	x10, x29, #0x40
   29278:	mov	w9, wzr
   2927c:	str	x10, [sp, #88]
   29280:	mov	w23, #0x1c                  	// #28
   29284:	b	29148 <ZSTD_endStream@@Base+0x1b1f4>
   29288:	ldur	x12, [x29, #-88]
   2928c:	mov	x19, x8
   29290:	b	29140 <ZSTD_endStream@@Base+0x1b1ec>
   29294:	ldr	x8, [sp, #80]
   29298:	mov	w24, w28
   2929c:	str	wzr, [x8]
   292a0:	ldr	x8, [sp, #88]
   292a4:	str	wzr, [x8]
   292a8:	ldr	w8, [sp, #200]
   292ac:	ldur	x9, [x29, #-72]
   292b0:	sub	w8, w8, #0x8
   292b4:	str	w8, [x9, #36]
   292b8:	ldur	x28, [x29, #-176]
   292bc:	ldur	w20, [x29, #-116]
   292c0:	cbz	w24, 2930c <ZSTD_endStream@@Base+0x1b3b8>
   292c4:	ldur	x10, [x29, #-184]
   292c8:	sub	w8, w24, #0x1
   292cc:	add	x9, x10, w8, uxtw #3
   292d0:	ldr	w11, [x9, #4]
   292d4:	ldr	w9, [sp, #148]
   292d8:	cmp	w11, w9
   292dc:	b.hi	29324 <ZSTD_endStream@@Base+0x1b3d0>  // b.pmore
   292e0:	add	w9, w11, w20
   292e4:	cmp	w9, #0x1, lsl #12
   292e8:	b.cs	29324 <ZSTD_endStream@@Base+0x1b3d0>  // b.hs, b.nlast
   292ec:	ldur	w9, [x29, #-208]
   292f0:	ldp	x26, x22, [x29, #-80]
   292f4:	ldr	w0, [sp, #208]
   292f8:	mov	w8, wzr
   292fc:	str	w9, [sp, #160]
   29300:	cbz	w8, 293ac <ZSTD_endStream@@Base+0x1b458>
   29304:	ldr	w9, [sp, #160]
   29308:	b	295e0 <ZSTD_endStream@@Base+0x1b68c>
   2930c:	ldp	x26, x22, [x29, #-80]
   29310:	ldr	w0, [sp, #208]
   29314:	mov	w8, #0x13                  	// #19
   29318:	cmp	w8, #0x13
   2931c:	b.ls	295ec <ZSTD_endStream@@Base+0x1b698>  // b.plast
   29320:	b	2731c <ZSTD_endStream@@Base+0x193c8>
   29324:	ldr	x9, [sp, #112]
   29328:	lsl	x8, x8, #3
   2932c:	ldr	w8, [x10, x8]
   29330:	ldr	w9, [x9]
   29334:	str	w8, [sp, #180]
   29338:	cbz	w9, 29348 <ZSTD_endStream@@Base+0x1b3f4>
   2933c:	ldp	x26, x22, [x29, #-80]
   29340:	mov	w8, wzr
   29344:	b	29358 <ZSTD_endStream@@Base+0x1b404>
   29348:	ldp	x26, x22, [x29, #-80]
   2934c:	ldur	x8, [x29, #-96]
   29350:	madd	x8, x8, x23, x26
   29354:	ldr	w8, [x8, #12]
   29358:	sub	w19, w20, w8
   2935c:	ldr	w8, [sp, #176]
   29360:	ldur	x9, [x29, #-24]
   29364:	ldur	w25, [x29, #-128]
   29368:	ldr	x10, [sp, #120]
   2936c:	stur	w8, [x29, #-64]
   29370:	ldr	w8, [sp, #180]
   29374:	sub	x0, x29, #0x40
   29378:	str	w11, [sp, #160]
   2937c:	stur	w25, [x29, #-52]
   29380:	stp	w8, w11, [x29, #-60]
   29384:	ldur	w8, [x29, #-16]
   29388:	str	x9, [x10]
   2938c:	str	w8, [x10, #8]
   29390:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   29394:	cmp	w19, #0x1, lsl #12
   29398:	add	w0, w0, w19
   2939c:	csel	w20, wzr, w19, hi  // hi = pmore
   293a0:	mov	w8, #0x7                   	// #7
   293a4:	str	w25, [sp, #172]
   293a8:	cbnz	w8, 29304 <ZSTD_endStream@@Base+0x1b3b0>
   293ac:	ldr	w8, [sp, #108]
   293b0:	ldr	w9, [sp, #96]
   293b4:	mov	x25, xzr
   293b8:	stur	w20, [x29, #-116]
   293bc:	add	w8, w9, w8
   293c0:	stur	w8, [x29, #-88]
   293c4:	umaddl	x8, w20, w23, x26
   293c8:	add	x8, x8, #0x10
   293cc:	str	x8, [sp, #208]
   293d0:	mov	w8, w24
   293d4:	str	x8, [sp, #200]
   293d8:	b	293fc <ZSTD_endStream@@Base+0x1b4a8>
   293dc:	ldur	w20, [x29, #-116]
   293e0:	mov	w0, w24
   293e4:	ldur	x25, [x29, #-208]
   293e8:	ldr	x8, [sp, #200]
   293ec:	mov	w23, #0x1c                  	// #28
   293f0:	add	x25, x25, #0x1
   293f4:	cmp	x25, x8
   293f8:	b.cs	295d0 <ZSTD_endStream@@Base+0x1b67c>  // b.hs, b.nlast
   293fc:	ldur	x20, [x29, #-184]
   29400:	mov	w24, w0
   29404:	ldr	x0, [sp, #208]
   29408:	ldr	w2, [sp, #216]
   2940c:	add	x19, x20, x25, lsl #3
   29410:	ldr	w1, [x19]
   29414:	stur	w1, [x29, #-96]
   29418:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   2941c:	stp	x1, x0, [x29, #-112]
   29420:	ldr	w27, [x19, #4]
   29424:	ldr	w21, [sp, #196]
   29428:	cbz	x25, 2943c <ZSTD_endStream@@Base+0x1b4e8>
   2942c:	sub	w8, w25, #0x1
   29430:	add	x8, x20, w8, uxtw #3
   29434:	ldr	w8, [x8, #4]
   29438:	add	w21, w8, #0x1
   2943c:	cmp	w27, w21
   29440:	stur	x25, [x29, #-208]
   29444:	b.cc	293dc <ZSTD_endStream@@Base+0x1b488>  // b.lo, b.ul, b.last
   29448:	ldur	w8, [x29, #-96]
   2944c:	add	w0, w8, #0x1
   29450:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   29454:	mov	w8, #0xffffda33            	// #-9677
   29458:	ldur	w20, [x29, #-116]
   2945c:	add	w8, w8, w0, lsl #9
   29460:	cmp	w0, #0x13
   29464:	mov	w10, #0x33                  	// #51
   29468:	lsl	w9, w0, #8
   2946c:	csel	w8, w8, w10, hi  // hi = pmore
   29470:	stur	w8, [x29, #-152]
   29474:	add	w8, w9, #0x1, lsl #12
   29478:	mov	w23, w0
   2947c:	stur	w8, [x29, #-160]
   29480:	add	w8, w27, w20
   29484:	mov	w19, #0x40000000            	// #1073741824
   29488:	mov	w0, w24
   2948c:	ldr	w9, [x22, #152]
   29490:	mov	w25, w8
   29494:	add	w24, w27, w20
   29498:	sub	w26, w27, #0x3
   2949c:	cmp	w9, #0x1
   294a0:	b.ne	294bc <ZSTD_endStream@@Base+0x1b568>  // b.any
   294a4:	mov	w28, w0
   294a8:	mov	w0, w26
   294ac:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   294b0:	ldur	w8, [x29, #-160]
   294b4:	add	w8, w8, w0
   294b8:	b	2952c <ZSTD_endStream@@Base+0x1b5d8>
   294bc:	ldr	x8, [x22, #96]
   294c0:	mov	w28, w0
   294c4:	ldr	w20, [x22, #148]
   294c8:	ldr	w0, [x8, x23, lsl #2]
   294cc:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   294d0:	mov	w19, w0
   294d4:	mov	w0, w26
   294d8:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   294dc:	mov	w8, w0
   294e0:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   294e4:	ldr	x9, [x22, #88]
   294e8:	lsl	x8, x8, #2
   294ec:	add	x10, x10, #0xca8
   294f0:	ldr	w26, [x10, x8]
   294f4:	ldur	x10, [x29, #-72]
   294f8:	ldr	w0, [x9, x8]
   294fc:	ldr	w22, [x10, #144]
   29500:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   29504:	ldur	w9, [x29, #-152]
   29508:	add	w8, w26, w23
   2950c:	add	w9, w20, w9
   29510:	sub	w9, w9, w19
   29514:	ldur	w20, [x29, #-116]
   29518:	add	w9, w9, w22
   2951c:	ldur	x22, [x29, #-72]
   29520:	add	w8, w9, w8, lsl #8
   29524:	mov	w19, #0x40000000            	// #1073741824
   29528:	sub	w8, w8, w0
   2952c:	ldur	w9, [x29, #-88]
   29530:	ldur	x26, [x29, #-80]
   29534:	mov	w0, w28
   29538:	cmp	w24, w28
   2953c:	add	w8, w9, w8
   29540:	b.hi	29560 <ZSTD_endStream@@Base+0x1b60c>  // b.pmore
   29544:	mov	w9, #0x1c                  	// #28
   29548:	umull	x9, w24, w9
   2954c:	ldr	w9, [x26, x9]
   29550:	cmp	w8, w9
   29554:	b.ge	295b4 <ZSTD_endStream@@Base+0x1b660>  // b.tcont
   29558:	cmp	w24, w0
   2955c:	b.ls	29584 <ZSTD_endStream@@Base+0x1b630>  // b.plast
   29560:	ldur	x10, [x29, #-136]
   29564:	mov	w11, #0x1c                  	// #28
   29568:	mov	w9, w0
   2956c:	umaddl	x10, w0, w11, x10
   29570:	add	x9, x9, #0x1
   29574:	cmp	x25, x9
   29578:	str	w19, [x10], #28
   2957c:	b.ne	29570 <ZSTD_endStream@@Base+0x1b61c>  // b.any
   29580:	mov	w0, w9
   29584:	ldur	w11, [x29, #-128]
   29588:	mov	w10, #0x1c                  	// #28
   2958c:	umaddl	x10, w24, w10, x26
   29590:	mov	w9, wzr
   29594:	stp	w27, w11, [x10, #8]
   29598:	ldur	w11, [x29, #-96]
   2959c:	stp	w8, w11, [x10]
   295a0:	ldur	x8, [x29, #-104]
   295a4:	str	x8, [x10, #16]
   295a8:	ldur	x8, [x29, #-112]
   295ac:	str	w8, [x10, #24]
   295b0:	b	295b8 <ZSTD_endStream@@Base+0x1b664>
   295b4:	mov	w9, #0x1                   	// #1
   295b8:	sub	w27, w27, #0x1
   295bc:	cmp	w27, w21
   295c0:	b.cc	293e4 <ZSTD_endStream@@Base+0x1b490>  // b.lo, b.ul, b.last
   295c4:	sub	w8, w25, #0x1
   295c8:	cbz	w9, 2948c <ZSTD_endStream@@Base+0x1b538>
   295cc:	b	293e4 <ZSTD_endStream@@Base+0x1b490>
   295d0:	ldr	w9, [sp, #160]
   295d4:	ldr	x27, [sp, #184]
   295d8:	ldur	x28, [x29, #-176]
   295dc:	mov	w8, wzr
   295e0:	stur	w9, [x29, #-208]
   295e4:	cmp	w8, #0x13
   295e8:	b.hi	2731c <ZSTD_endStream@@Base+0x193c8>  // b.pmore
   295ec:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   295f0:	add	x11, x11, #0xa94
   295f4:	adr	x9, 2731c <ZSTD_endStream@@Base+0x193c8>
   295f8:	ldrh	w10, [x11, x8, lsl #1]
   295fc:	add	x9, x9, x10, lsl #2
   29600:	br	x9
   29604:	add	w20, w20, #0x1
   29608:	cmp	w20, w0
   2960c:	b.ls	282f4 <ZSTD_endStream@@Base+0x1a3a0>  // b.plast
   29610:	b	298cc <ZSTD_endStream@@Base+0x1b978>
   29614:	ldr	x27, [sp, #184]
   29618:	cmp	x28, #0x2
   2961c:	b.hi	296f4 <ZSTD_endStream@@Base+0x1b7a0>  // b.pmore
   29620:	ldur	x21, [x29, #-72]
   29624:	sub	x1, x29, #0xc
   29628:	mov	x2, x13
   2962c:	mov	w22, w12
   29630:	mov	x0, x21
   29634:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   29638:	ldr	w8, [sp, #152]
   2963c:	cmp	w0, w8
   29640:	b.cc	29680 <ZSTD_endStream@@Base+0x1b72c>  // b.lo, b.ul, b.last
   29644:	ldr	w8, [sp, #24]
   29648:	sub	w19, w8, w0
   2964c:	lsr	w8, w19, #18
   29650:	cbnz	w8, 29680 <ZSTD_endStream@@Base+0x1b72c>
   29654:	ldr	x8, [sp, #88]
   29658:	ldur	x2, [x29, #-176]
   2965c:	add	x1, x8, w0, uxtw
   29660:	ldur	x0, [x29, #-88]
   29664:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   29668:	cmp	x0, #0x3
   2966c:	b.cs	29688 <ZSTD_endStream@@Base+0x1b734>  // b.hs, b.nlast
   29670:	ldur	x13, [x29, #-88]
   29674:	mov	w8, wzr
   29678:	mov	x0, x28
   2967c:	b	296d8 <ZSTD_endStream@@Base+0x1b784>
   29680:	ldur	x13, [x29, #-88]
   29684:	b	296e0 <ZSTD_endStream@@Base+0x1b78c>
   29688:	ldur	w9, [x29, #-160]
   2968c:	add	w8, w19, #0x2
   29690:	cmp	x0, w9, uxtw
   29694:	ldur	x9, [x29, #-184]
   29698:	stp	w8, w0, [x9]
   2969c:	ldur	x13, [x29, #-88]
   296a0:	b.hi	296c0 <ZSTD_endStream@@Base+0x1b76c>  // b.pmore
   296a4:	ldur	x9, [x29, #-176]
   296a8:	add	x8, x13, x0
   296ac:	cmp	x8, x9
   296b0:	b.eq	296c0 <ZSTD_endStream@@Base+0x1b76c>  // b.none
   296b4:	mov	w8, wzr
   296b8:	mov	w20, #0x1                   	// #1
   296bc:	b	296d8 <ZSTD_endStream@@Base+0x1b784>
   296c0:	ldr	w8, [sp, #24]
   296c4:	mov	w20, #0x1                   	// #1
   296c8:	mov	w24, #0x1                   	// #1
   296cc:	add	w9, w8, #0x1
   296d0:	mov	w8, #0x1                   	// #1
   296d4:	str	w9, [x21, #36]
   296d8:	mov	x28, x0
   296dc:	cbnz	w8, 296e8 <ZSTD_endStream@@Base+0x1b794>
   296e0:	mov	w8, wzr
   296e4:	mov	x0, x28
   296e8:	mov	x28, x0
   296ec:	mov	w12, w22
   296f0:	cbnz	w8, 292b8 <ZSTD_endStream@@Base+0x1b364>
   296f4:	ldp	w14, w9, [sp, #20]
   296f8:	ldp	x10, x8, [sp]
   296fc:	mov	x22, xzr
   29700:	mov	x21, xzr
   29704:	add	w19, w9, #0x2
   29708:	mov	w24, w20
   2970c:	str	w9, [x8, x10, lsl #2]
   29710:	b	2972c <ZSTD_endStream@@Base+0x1b7d8>
   29714:	add	x9, x9, #0x4
   29718:	str	x9, [sp, #72]
   2971c:	ldr	w14, [x9]
   29720:	mov	w9, #0x1                   	// #1
   29724:	mov	x21, x8
   29728:	tbz	w9, #0, 2989c <ZSTD_endStream@@Base+0x1b948>
   2972c:	ldur	w9, [x29, #-152]
   29730:	subs	w9, w9, #0x1
   29734:	b.cc	2989c <ZSTD_endStream@@Base+0x1b948>  // b.lo, b.ul, b.last
   29738:	ldr	w8, [sp, #152]
   2973c:	cmp	w14, w8
   29740:	b.cc	2989c <ZSTD_endStream@@Base+0x1b948>  // b.lo, b.ul, b.last
   29744:	ldr	x8, [sp, #88]
   29748:	ldur	x2, [x29, #-176]
   2974c:	cmp	x21, x22
   29750:	csel	x23, x21, x22, cc  // cc = lo, ul, last
   29754:	add	x20, x8, w14, uxtw
   29758:	add	x0, x13, x23
   2975c:	add	x1, x20, x23
   29760:	stur	w9, [x29, #-152]
   29764:	mov	w25, w12
   29768:	mov	w26, w14
   2976c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   29770:	add	x8, x0, x23
   29774:	cmp	x8, x28
   29778:	b.ls	297e8 <ZSTD_endStream@@Base+0x1b894>  // b.plast
   2977c:	ldr	w14, [sp, #160]
   29780:	ldur	x13, [x29, #-184]
   29784:	add	w11, w26, w8
   29788:	mov	w9, wzr
   2978c:	sub	w10, w14, w26
   29790:	cmp	x8, x10
   29794:	mov	w15, w26
   29798:	sub	w12, w19, w26
   2979c:	add	x13, x13, w24, uxtw #3
   297a0:	csel	w14, w11, w14, hi  // hi = pmore
   297a4:	cmp	x8, #0x1, lsl #12
   297a8:	add	w24, w24, #0x1
   297ac:	stp	w12, w8, [x13]
   297b0:	str	w14, [sp, #160]
   297b4:	b.hi	29880 <ZSTD_endStream@@Base+0x1b92c>  // b.pmore
   297b8:	ldur	x13, [x29, #-88]
   297bc:	ldur	x11, [x29, #-176]
   297c0:	mov	x28, x8
   297c4:	mov	w23, #0x1c                  	// #28
   297c8:	add	x10, x13, x8
   297cc:	cmp	x10, x11
   297d0:	mov	w12, w25
   297d4:	b.ne	297f8 <ZSTD_endStream@@Base+0x1b8a4>  // b.any
   297d8:	mov	x28, x8
   297dc:	mov	x8, x21
   297e0:	mov	w14, w15
   297e4:	b	29724 <ZSTD_endStream@@Base+0x1b7d0>
   297e8:	ldur	x13, [x29, #-88]
   297ec:	mov	w15, w26
   297f0:	mov	w23, #0x1c                  	// #28
   297f4:	mov	w12, w25
   297f8:	ldrb	w9, [x20, x8]
   297fc:	ldrb	w10, [x13, x8]
   29800:	ldr	w11, [sp, #48]
   29804:	mov	w14, w15
   29808:	cmp	w9, w10
   2980c:	ldr	x9, [sp, #56]
   29810:	and	w11, w15, w11
   29814:	lsl	w11, w11, #1
   29818:	add	x9, x9, w11, uxtw #2
   2981c:	b.cs	29844 <ZSTD_endStream@@Base+0x1b8f0>  // b.hs, b.nlast
   29820:	ldr	w10, [sp, #36]
   29824:	cmp	w14, w10
   29828:	ldr	x10, [sp, #72]
   2982c:	str	w14, [x10]
   29830:	b.hi	29714 <ZSTD_endStream@@Base+0x1b7c0>  // b.pmore
   29834:	sub	x10, x29, #0x40
   29838:	mov	w9, wzr
   2983c:	str	x10, [sp, #72]
   29840:	b	29724 <ZSTD_endStream@@Base+0x1b7d0>
   29844:	ldr	w10, [sp, #36]
   29848:	cmp	w14, w10
   2984c:	ldr	x10, [sp, #64]
   29850:	str	w14, [x10]
   29854:	b.ls	29868 <ZSTD_endStream@@Base+0x1b914>  // b.plast
   29858:	str	x9, [sp, #64]
   2985c:	mov	x22, x8
   29860:	mov	x8, x21
   29864:	b	2971c <ZSTD_endStream@@Base+0x1b7c8>
   29868:	sub	x10, x29, #0x40
   2986c:	mov	w9, wzr
   29870:	str	x10, [sp, #64]
   29874:	mov	x22, x8
   29878:	mov	x8, x21
   2987c:	b	29724 <ZSTD_endStream@@Base+0x1b7d0>
   29880:	ldur	x13, [x29, #-88]
   29884:	mov	x28, x8
   29888:	mov	x8, x21
   2988c:	mov	w23, #0x1c                  	// #28
   29890:	mov	w12, w25
   29894:	mov	w14, w15
   29898:	b	29724 <ZSTD_endStream@@Base+0x1b7d0>
   2989c:	ldr	x8, [sp, #64]
   298a0:	ldur	x9, [x29, #-72]
   298a4:	str	wzr, [x8]
   298a8:	ldr	x8, [sp, #72]
   298ac:	str	wzr, [x8]
   298b0:	ldr	w8, [sp, #160]
   298b4:	b	292b0 <ZSTD_endStream@@Base+0x1b35c>
   298b8:	mov	w11, w20
   298bc:	ldp	w20, w21, [sp, #176]
   298c0:	ldr	w22, [sp, #172]
   298c4:	ldur	w24, [x29, #-208]
   298c8:	b	29948 <ZSTD_endStream@@Base+0x1b9f4>
   298cc:	umaddl	x8, w0, w23, x26
   298d0:	ldp	w20, w21, [x8]
   298d4:	ldr	w9, [x8, #24]
   298d8:	ldr	x10, [x8, #16]
   298dc:	ldp	w24, w22, [x8, #8]
   298e0:	stp	w20, w21, [x29, #-64]
   298e4:	stur	w9, [x29, #-16]
   298e8:	stur	x10, [x29, #-24]
   298ec:	stp	w24, w22, [x29, #-56]
   298f0:	ldr	w9, [x8, #24]
   298f4:	ldr	x8, [x8, #16]
   298f8:	ldr	x19, [sp, #120]
   298fc:	mov	w25, w0
   29900:	sub	x0, x29, #0x40
   29904:	str	w9, [x19, #8]
   29908:	str	x8, [x19]
   2990c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   29910:	cmp	w25, w0
   29914:	b.ls	29944 <ZSTD_endStream@@Base+0x1b9f0>  // b.plast
   29918:	ldur	w8, [x29, #-16]
   2991c:	ldur	x9, [x29, #-24]
   29920:	sub	x0, x29, #0x40
   29924:	stp	w20, w21, [x29, #-64]
   29928:	stp	w24, w22, [x29, #-56]
   2992c:	str	w8, [x19, #8]
   29930:	str	x9, [x19]
   29934:	mov	w19, w25
   29938:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2993c:	sub	w11, w25, w0
   29940:	b	29948 <ZSTD_endStream@@Base+0x1b9f4>
   29944:	mov	w11, wzr
   29948:	add	w19, w11, #0x1
   2994c:	umaddl	x8, w19, w23, x26
   29950:	stp	w20, w21, [sp, #176]
   29954:	stp	w20, w21, [x8]
   29958:	stur	w24, [x29, #-208]
   2995c:	stp	w24, w22, [x8, #8]
   29960:	ldur	w9, [x29, #-16]
   29964:	ldur	x10, [x29, #-24]
   29968:	mov	w20, w11
   2996c:	mov	w21, w11
   29970:	str	w22, [sp, #172]
   29974:	str	w9, [x8, #24]
   29978:	str	x10, [x8, #16]
   2997c:	stur	w11, [x29, #-116]
   29980:	cbz	w11, 299cc <ZSTD_endStream@@Base+0x1ba78>
   29984:	umaddl	x22, w21, w23, x26
   29988:	ldur	q0, [x22, #12]
   2998c:	ldr	q1, [x22]
   29990:	sub	x0, x29, #0x40
   29994:	stur	q0, [x29, #-52]
   29998:	stur	q1, [x29, #-64]
   2999c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   299a0:	ldur	q0, [x22, #12]
   299a4:	ldr	q1, [x22]
   299a8:	subs	w9, w21, w0
   299ac:	umaddl	x8, w20, w23, x26
   299b0:	sub	w20, w20, #0x1
   299b4:	csel	w21, wzr, w9, cc  // cc = lo, ul, last
   299b8:	stur	q0, [x8, #12]
   299bc:	str	q1, [x8]
   299c0:	b.hi	29984 <ZSTD_endStream@@Base+0x1ba30>  // b.pmore
   299c4:	add	w28, w20, #0x1
   299c8:	b	299d0 <ZSTD_endStream@@Base+0x1ba7c>
   299cc:	mov	w28, w19
   299d0:	ldur	x21, [x29, #-168]
   299d4:	ldur	x22, [x29, #-72]
   299d8:	ldur	w20, [x29, #-116]
   299dc:	cmp	w28, w19
   299e0:	b.ls	29a14 <ZSTD_endStream@@Base+0x1bac0>  // b.plast
   299e4:	b	2730c <ZSTD_endStream@@Base+0x193b8>
   299e8:	ldur	x21, [x29, #-168]
   299ec:	strh	w8, [x10, #6]
   299f0:	add	x8, x10, #0x8
   299f4:	add	x27, x27, w9, uxtw
   299f8:	mov	w23, #0x1c                  	// #28
   299fc:	str	x8, [x13, #8]
   29a00:	stur	x27, [x29, #-144]
   29a04:	ldur	w20, [x29, #-116]
   29a08:	add	w28, w28, #0x1
   29a0c:	cmp	w28, w19
   29a10:	b.hi	2730c <ZSTD_endStream@@Base+0x193b8>  // b.pmore
   29a14:	umaddl	x8, w28, w23, x26
   29a18:	ldp	w24, w20, [x8, #8]
   29a1c:	cbz	w24, 29a40 <ZSTD_endStream@@Base+0x1baec>
   29a20:	ldr	w25, [x8, #4]
   29a24:	cmp	w25, #0x3
   29a28:	b.cc	29a4c <ZSTD_endStream@@Base+0x1baf8>  // b.lo, b.ul, b.last
   29a2c:	ldp	w9, w8, [x21]
   29a30:	stp	w9, w8, [x21, #4]
   29a34:	ldur	x22, [x29, #-216]
   29a38:	sub	w8, w25, #0x2
   29a3c:	b	29a94 <ZSTD_endStream@@Base+0x1bb40>
   29a40:	add	x8, x27, x20
   29a44:	stur	x8, [x29, #-144]
   29a48:	b	29a04 <ZSTD_endStream@@Base+0x1bab0>
   29a4c:	ldur	x22, [x29, #-216]
   29a50:	cmp	w20, #0x0
   29a54:	cinc	w9, w25, eq  // eq = none
   29a58:	cbz	w9, 29a98 <ZSTD_endStream@@Base+0x1bb44>
   29a5c:	cmp	w9, #0x3
   29a60:	b.ne	29a78 <ZSTD_endStream@@Base+0x1bb24>  // b.any
   29a64:	ldr	w8, [x21]
   29a68:	sub	w8, w8, #0x1
   29a6c:	cmp	w9, #0x2
   29a70:	b.cs	29a84 <ZSTD_endStream@@Base+0x1bb30>  // b.hs, b.nlast
   29a74:	b	29a8c <ZSTD_endStream@@Base+0x1bb38>
   29a78:	ldr	w8, [x21, w9, uxtw #2]
   29a7c:	cmp	w9, #0x2
   29a80:	b.cc	29a8c <ZSTD_endStream@@Base+0x1bb38>  // b.lo, b.ul, b.last
   29a84:	ldr	w9, [x21, #4]
   29a88:	str	w9, [x21, #8]
   29a8c:	ldr	w9, [x21]
   29a90:	str	w9, [x21, #4]
   29a94:	str	w8, [x21]
   29a98:	ldur	x0, [x29, #-200]
   29a9c:	mov	w1, w20
   29aa0:	mov	x2, x27
   29aa4:	mov	w3, w25
   29aa8:	mov	w4, w24
   29aac:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   29ab0:	ldur	x8, [x29, #-192]
   29ab4:	add	x2, x27, x20
   29ab8:	mov	x23, x27
   29abc:	mov	x1, x27
   29ac0:	ldr	x0, [x8, #24]
   29ac4:	cmp	x2, x22
   29ac8:	b.ls	29ad8 <ZSTD_endStream@@Base+0x1bb84>  // b.plast
   29acc:	mov	x3, x22
   29ad0:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   29ad4:	b	29b44 <ZSTD_endStream@@Base+0x1bbf0>
   29ad8:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   29adc:	cmp	w20, #0x11
   29ae0:	b.cc	29b44 <ZSTD_endStream@@Base+0x1bbf0>  // b.lo, b.ul, b.last
   29ae4:	ldur	x8, [x29, #-192]
   29ae8:	add	x1, x23, #0x10
   29aec:	mov	x21, x23
   29af0:	ldr	x22, [x8, #24]
   29af4:	add	x0, x22, #0x10
   29af8:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   29afc:	add	x0, x22, #0x20
   29b00:	add	x1, x23, #0x20
   29b04:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   29b08:	cmp	w20, #0x31
   29b0c:	b.cc	29b44 <ZSTD_endStream@@Base+0x1bbf0>  // b.lo, b.ul, b.last
   29b10:	add	x21, x22, x20
   29b14:	add	x26, x22, #0x30
   29b18:	add	x27, x23, #0x40
   29b1c:	sub	x1, x27, #0x10
   29b20:	mov	x0, x26
   29b24:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   29b28:	add	x0, x26, #0x10
   29b2c:	mov	x1, x27
   29b30:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   29b34:	add	x26, x26, #0x20
   29b38:	cmp	x26, x21
   29b3c:	add	x27, x27, #0x20
   29b40:	b.cc	29b1c <ZSTD_endStream@@Base+0x1bbc8>  // b.lo, b.ul, b.last
   29b44:	ldur	x13, [x29, #-192]
   29b48:	sub	w8, w24, #0x3
   29b4c:	cmp	w20, #0x10, lsl #12
   29b50:	ldr	x9, [x13, #24]
   29b54:	add	x9, x9, x20
   29b58:	str	x9, [x13, #24]
   29b5c:	b.cc	29b74 <ZSTD_endStream@@Base+0x1bc20>  // b.lo, b.ul, b.last
   29b60:	ldp	x10, x9, [x13]
   29b64:	sub	x9, x9, x10
   29b68:	lsr	x9, x9, #3
   29b6c:	mov	w10, #0x1                   	// #1
   29b70:	stp	w10, w9, [x13, #72]
   29b74:	ldr	x10, [x13, #8]
   29b78:	add	w11, w25, #0x1
   29b7c:	add	w9, w24, w20
   29b80:	cmp	w8, #0x10, lsl #12
   29b84:	strh	w20, [x10, #4]
   29b88:	str	w11, [x10]
   29b8c:	ldp	x26, x22, [x29, #-80]
   29b90:	mov	x27, x23
   29b94:	b.cc	299e8 <ZSTD_endStream@@Base+0x1ba94>  // b.lo, b.ul, b.last
   29b98:	ldp	x12, x11, [x13]
   29b9c:	sub	x11, x11, x12
   29ba0:	lsr	x11, x11, #3
   29ba4:	mov	w12, #0x2                   	// #2
   29ba8:	stp	w12, w11, [x13, #72]
   29bac:	b	299e8 <ZSTD_endStream@@Base+0x1ba94>
   29bb0:	cmp	x27, #0x2
   29bb4:	b.hi	29c20 <ZSTD_endStream@@Base+0x1bccc>  // b.pmore
   29bb8:	ldur	x22, [x29, #-72]
   29bbc:	ldur	x2, [x29, #-144]
   29bc0:	sub	x1, x29, #0xc
   29bc4:	mov	x0, x22
   29bc8:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   29bcc:	ldur	w8, [x29, #-128]
   29bd0:	ldur	x21, [x29, #-168]
   29bd4:	ldur	x26, [x29, #-80]
   29bd8:	ldur	w20, [x29, #-116]
   29bdc:	cmp	w0, w8
   29be0:	mov	w23, #0x1c                  	// #28
   29be4:	b.cc	29c30 <ZSTD_endStream@@Base+0x1bcdc>  // b.lo, b.ul, b.last
   29be8:	ldr	w8, [sp, #112]
   29bec:	sub	w19, w8, w0
   29bf0:	lsr	w8, w19, #18
   29bf4:	cbnz	w8, 29c30 <ZSTD_endStream@@Base+0x1bcdc>
   29bf8:	ldr	x8, [sp, #96]
   29bfc:	mov	x2, x28
   29c00:	add	x1, x8, w0, uxtw
   29c04:	ldur	x0, [x29, #-144]
   29c08:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   29c0c:	cmp	x0, #0x3
   29c10:	b.cs	29c38 <ZSTD_endStream@@Base+0x1bce4>  // b.hs, b.nlast
   29c14:	mov	w8, wzr
   29c18:	mov	x0, x27
   29c1c:	b	29c84 <ZSTD_endStream@@Base+0x1bd30>
   29c20:	ldur	x26, [x29, #-80]
   29c24:	ldr	w12, [sp, #108]
   29c28:	mov	w23, #0x1c                  	// #28
   29c2c:	b	29cac <ZSTD_endStream@@Base+0x1bd58>
   29c30:	ldr	w12, [sp, #108]
   29c34:	b	29c90 <ZSTD_endStream@@Base+0x1bd3c>
   29c38:	ldur	w9, [x29, #-104]
   29c3c:	add	w8, w19, #0x2
   29c40:	cmp	x0, w9, uxtw
   29c44:	ldur	x9, [x29, #-184]
   29c48:	stp	w8, w0, [x9]
   29c4c:	b.hi	29c6c <ZSTD_endStream@@Base+0x1bd18>  // b.pmore
   29c50:	ldur	x8, [x29, #-144]
   29c54:	add	x8, x8, x0
   29c58:	cmp	x8, x28
   29c5c:	b.eq	29c6c <ZSTD_endStream@@Base+0x1bd18>  // b.none
   29c60:	mov	w8, wzr
   29c64:	mov	w25, #0x1                   	// #1
   29c68:	b	29c84 <ZSTD_endStream@@Base+0x1bd30>
   29c6c:	ldr	w8, [sp, #112]
   29c70:	mov	w25, #0x1                   	// #1
   29c74:	mov	w24, #0x1                   	// #1
   29c78:	add	w9, w8, #0x1
   29c7c:	mov	w8, #0x1                   	// #1
   29c80:	str	w9, [x22, #36]
   29c84:	ldr	w12, [sp, #108]
   29c88:	mov	x27, x0
   29c8c:	cbnz	w8, 29c98 <ZSTD_endStream@@Base+0x1bd44>
   29c90:	mov	w8, wzr
   29c94:	mov	x0, x27
   29c98:	mov	x27, x0
   29c9c:	cbz	w8, 29cac <ZSTD_endStream@@Base+0x1bd58>
   29ca0:	ldr	x27, [sp, #184]
   29ca4:	cbnz	w24, 27368 <ZSTD_endStream@@Base+0x19414>
   29ca8:	b	282cc <ZSTD_endStream@@Base+0x1a378>
   29cac:	ldp	x10, x8, [sp, #80]
   29cb0:	ldr	w9, [sp, #112]
   29cb4:	mov	w24, w25
   29cb8:	ldr	x25, [sp, #96]
   29cbc:	mov	x22, xzr
   29cc0:	mov	x21, xzr
   29cc4:	str	w9, [x8, x10, lsl #2]
   29cc8:	add	w8, w9, #0x2
   29ccc:	stur	w8, [x29, #-104]
   29cd0:	b	29cec <ZSTD_endStream@@Base+0x1bd98>
   29cd4:	add	x9, x9, #0x4
   29cd8:	str	x9, [sp, #216]
   29cdc:	ldr	w12, [x9]
   29ce0:	mov	w9, #0x1                   	// #1
   29ce4:	mov	x21, x8
   29ce8:	tbz	w9, #0, 29e48 <ZSTD_endStream@@Base+0x1bef4>
   29cec:	ldur	w8, [x29, #-96]
   29cf0:	subs	w8, w8, #0x1
   29cf4:	stur	w8, [x29, #-96]
   29cf8:	b.cc	29e48 <ZSTD_endStream@@Base+0x1bef4>  // b.lo, b.ul, b.last
   29cfc:	ldur	w8, [x29, #-128]
   29d00:	cmp	w12, w8
   29d04:	b.cc	29e48 <ZSTD_endStream@@Base+0x1bef4>  // b.lo, b.ul, b.last
   29d08:	ldur	x8, [x29, #-144]
   29d0c:	cmp	x21, x22
   29d10:	add	x19, x25, w12, uxtw
   29d14:	csel	x23, x21, x22, cc  // cc = lo, ul, last
   29d18:	add	x0, x8, x23
   29d1c:	add	x1, x19, x23
   29d20:	mov	x2, x28
   29d24:	mov	w20, w12
   29d28:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   29d2c:	add	x8, x0, x23
   29d30:	cmp	x8, x27
   29d34:	b.ls	29da0 <ZSTD_endStream@@Base+0x1be4c>  // b.plast
   29d38:	ldur	w14, [x29, #-112]
   29d3c:	ldur	w12, [x29, #-104]
   29d40:	ldur	x13, [x29, #-184]
   29d44:	add	w11, w20, w8
   29d48:	sub	w10, w14, w20
   29d4c:	cmp	x8, x10
   29d50:	mov	w9, wzr
   29d54:	mov	w15, w20
   29d58:	sub	w12, w12, w20
   29d5c:	add	x13, x13, w24, uxtw #3
   29d60:	csel	w14, w11, w14, hi  // hi = pmore
   29d64:	cmp	x8, #0x1, lsl #12
   29d68:	add	w24, w24, #0x1
   29d6c:	stp	w12, w8, [x13]
   29d70:	stur	w14, [x29, #-112]
   29d74:	b.hi	29e34 <ZSTD_endStream@@Base+0x1bee0>  // b.pmore
   29d78:	ldur	x10, [x29, #-144]
   29d7c:	mov	x27, x8
   29d80:	mov	w23, #0x1c                  	// #28
   29d84:	add	x10, x10, x8
   29d88:	cmp	x10, x28
   29d8c:	b.ne	29da8 <ZSTD_endStream@@Base+0x1be54>  // b.any
   29d90:	mov	x27, x8
   29d94:	mov	x8, x21
   29d98:	mov	w12, w15
   29d9c:	b	29ce4 <ZSTD_endStream@@Base+0x1bd90>
   29da0:	mov	w15, w20
   29da4:	mov	w23, #0x1c                  	// #28
   29da8:	ldur	x10, [x29, #-144]
   29dac:	ldrb	w9, [x19, x8]
   29db0:	ldr	w11, [sp, #160]
   29db4:	mov	w12, w15
   29db8:	ldrb	w10, [x10, x8]
   29dbc:	and	w11, w15, w11
   29dc0:	lsl	w11, w11, #1
   29dc4:	cmp	w9, w10
   29dc8:	ldr	x9, [sp, #200]
   29dcc:	add	x9, x9, w11, uxtw #2
   29dd0:	b.cs	29df8 <ZSTD_endStream@@Base+0x1bea4>  // b.hs, b.nlast
   29dd4:	ldr	w10, [sp, #152]
   29dd8:	cmp	w12, w10
   29ddc:	ldr	x10, [sp, #216]
   29de0:	str	w12, [x10]
   29de4:	b.hi	29cd4 <ZSTD_endStream@@Base+0x1bd80>  // b.pmore
   29de8:	sub	x10, x29, #0x40
   29dec:	mov	w9, wzr
   29df0:	str	x10, [sp, #216]
   29df4:	b	29ce4 <ZSTD_endStream@@Base+0x1bd90>
   29df8:	ldr	w10, [sp, #152]
   29dfc:	cmp	w12, w10
   29e00:	ldr	x10, [sp, #208]
   29e04:	str	w12, [x10]
   29e08:	b.ls	29e1c <ZSTD_endStream@@Base+0x1bec8>  // b.plast
   29e0c:	str	x9, [sp, #208]
   29e10:	mov	x22, x8
   29e14:	mov	x8, x21
   29e18:	b	29cdc <ZSTD_endStream@@Base+0x1bd88>
   29e1c:	sub	x10, x29, #0x40
   29e20:	mov	w9, wzr
   29e24:	str	x10, [sp, #208]
   29e28:	mov	x22, x8
   29e2c:	mov	x8, x21
   29e30:	b	29ce4 <ZSTD_endStream@@Base+0x1bd90>
   29e34:	mov	x27, x8
   29e38:	mov	x8, x21
   29e3c:	mov	w23, #0x1c                  	// #28
   29e40:	mov	w12, w15
   29e44:	b	29ce4 <ZSTD_endStream@@Base+0x1bd90>
   29e48:	ldr	x8, [sp, #208]
   29e4c:	ldur	x22, [x29, #-72]
   29e50:	ldur	x21, [x29, #-168]
   29e54:	str	wzr, [x8]
   29e58:	ldr	x8, [sp, #216]
   29e5c:	str	wzr, [x8]
   29e60:	ldur	w8, [x29, #-112]
   29e64:	sub	w8, w8, #0x8
   29e68:	str	w8, [x22, #36]
   29e6c:	ldur	w20, [x29, #-116]
   29e70:	ldr	x27, [sp, #184]
   29e74:	cbnz	w24, 27368 <ZSTD_endStream@@Base+0x19414>
   29e78:	b	282cc <ZSTD_endStream@@Base+0x1a378>
   29e7c:	sub	x0, x28, x27
   29e80:	add	sp, sp, #0x1c0
   29e84:	ldp	x20, x19, [sp, #80]
   29e88:	ldp	x22, x21, [sp, #64]
   29e8c:	ldp	x24, x23, [sp, #48]
   29e90:	ldp	x26, x25, [sp, #32]
   29e94:	ldp	x28, x27, [sp, #16]
   29e98:	ldp	x29, x30, [sp], #96
   29e9c:	ret
   29ea0:	stp	x29, x30, [sp, #-96]!
   29ea4:	stp	x28, x27, [sp, #16]
   29ea8:	stp	x26, x25, [sp, #32]
   29eac:	stp	x24, x23, [sp, #48]
   29eb0:	stp	x22, x21, [sp, #64]
   29eb4:	stp	x20, x19, [sp, #80]
   29eb8:	mov	x29, sp
   29ebc:	sub	sp, sp, #0x1b0
   29ec0:	ldp	w11, w10, [x0, #200]
   29ec4:	ldr	x8, [x0, #8]
   29ec8:	ldr	w9, [x0, #24]
   29ecc:	ldr	w12, [x0, #36]
   29ed0:	mov	w13, #0xfff                 	// #4095
   29ed4:	cmp	w10, #0xfff
   29ed8:	add	x14, x3, x4
   29edc:	add	x19, x8, x9
   29ee0:	csel	w8, w10, w13, cc  // cc = lo, ul, last
   29ee4:	stur	x14, [x29, #-160]
   29ee8:	stur	w12, [x29, #-12]
   29eec:	str	w8, [sp, #132]
   29ef0:	ldp	x20, x26, [x0, #104]
   29ef4:	mov	x27, x3
   29ef8:	add	x21, x0, #0x48
   29efc:	mov	x25, x2
   29f00:	mov	x28, x1
   29f04:	mov	x23, x0
   29f08:	cmp	w11, #0x3
   29f0c:	mov	w8, #0x3                   	// #3
   29f10:	mov	w3, #0x2                   	// #2
   29f14:	mov	x0, x21
   29f18:	mov	x1, x27
   29f1c:	mov	x2, x4
   29f20:	sub	x22, x14, #0x8
   29f24:	cinc	w24, w8, ne  // ne = any
   29f28:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   29f2c:	cmp	x19, x27
   29f30:	cinc	x2, x27, eq  // eq = none
   29f34:	cmp	x2, x22
   29f38:	b.cs	2cb80 <ZSTD_endStream@@Base+0x1ec2c>  // b.hs, b.nlast
   29f3c:	mov	x8, x22
   29f40:	ldur	x9, [x29, #-160]
   29f44:	sub	w8, w24, #0x1
   29f48:	str	x8, [sp, #64]
   29f4c:	sub	x8, x29, #0x40
   29f50:	add	x8, x8, #0x10
   29f54:	sub	x9, x9, #0x20
   29f58:	str	x8, [sp, #40]
   29f5c:	str	x9, [sp, #192]
   29f60:	mov	w9, w24
   29f64:	str	x9, [sp, #24]
   29f68:	add	x9, x26, #0x10
   29f6c:	stur	x20, [x29, #-168]
   29f70:	str	x9, [sp, #144]
   29f74:	add	x9, x26, #0x1c
   29f78:	mov	w20, #0x1c                  	// #28
   29f7c:	str	x22, [sp, #184]
   29f80:	stp	x28, x21, [x29, #-200]
   29f84:	str	w24, [sp, #204]
   29f88:	stur	x9, [x29, #-136]
   29f8c:	stur	x25, [x29, #-152]
   29f90:	stp	x26, x23, [x29, #-80]
   29f94:	b	29fac <ZSTD_endStream@@Base+0x1c058>
   29f98:	ldr	x8, [sp, #184]
   29f9c:	ldur	x2, [x29, #-176]
   29fa0:	stur	w12, [x29, #-100]
   29fa4:	cmp	x2, x8
   29fa8:	b.cs	2cb80 <ZSTD_endStream@@Base+0x1ec2c>  // b.hs, b.nlast
   29fac:	ldr	x19, [x23, #8]
   29fb0:	ldr	w21, [x23, #36]
   29fb4:	subs	w8, w2, w27
   29fb8:	stur	w8, [x29, #-84]
   29fbc:	cset	w8, eq  // eq = none
   29fc0:	stur	w8, [x29, #-124]
   29fc4:	add	x8, x19, x21
   29fc8:	cmp	x8, x2
   29fcc:	str	x27, [sp, #176]
   29fd0:	stur	x2, [x29, #-176]
   29fd4:	b.ls	2a1f0 <ZSTD_endStream@@Base+0x1c29c>  // b.plast
   29fd8:	mov	w19, wzr
   29fdc:	cbz	w19, 2af90 <ZSTD_endStream@@Base+0x1d03c>
   29fe0:	ldr	x10, [sp, #144]
   29fe4:	mov	x8, xzr
   29fe8:	ldr	w9, [x25, x8]
   29fec:	str	w9, [x10, x8]
   29ff0:	add	x8, x8, #0x4
   29ff4:	cmp	x8, #0xc
   29ff8:	b.ne	29fe8 <ZSTD_endStream@@Base+0x1c094>  // b.any
   29ffc:	ldur	w1, [x29, #-84]
   2a000:	mov	w3, #0x2                   	// #2
   2a004:	mov	x0, x27
   2a008:	stp	wzr, w1, [x26, #8]
   2a00c:	ldur	x2, [x29, #-192]
   2a010:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   2a014:	ldur	x10, [x29, #-168]
   2a018:	sub	w9, w19, #0x1
   2a01c:	str	w0, [x26]
   2a020:	mov	w20, w0
   2a024:	add	x9, x10, w9, uxtw #3
   2a028:	ldr	w21, [x9, #4]
   2a02c:	ldr	w10, [sp, #132]
   2a030:	mov	w8, wzr
   2a034:	mov	w22, wzr
   2a038:	cmp	w21, w10
   2a03c:	ldur	w10, [x29, #-184]
   2a040:	b.ls	2a08c <ZSTD_endStream@@Base+0x1c138>  // b.plast
   2a044:	ldr	w11, [x9]
   2a048:	ldr	w10, [sp, #168]
   2a04c:	ldur	w24, [x29, #-84]
   2a050:	ldur	w8, [x29, #-16]
   2a054:	ldur	x9, [x29, #-24]
   2a058:	stp	w10, w11, [x29, #-64]
   2a05c:	ldr	x10, [sp, #40]
   2a060:	sub	x0, x29, #0x40
   2a064:	stp	w21, w24, [x29, #-56]
   2a068:	str	w11, [sp, #172]
   2a06c:	str	w8, [x10, #8]
   2a070:	str	x9, [x10]
   2a074:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2a078:	mov	w22, w0
   2a07c:	mov	w8, #0x7                   	// #7
   2a080:	mov	w10, w21
   2a084:	stur	wzr, [x29, #-100]
   2a088:	str	w24, [sp, #164]
   2a08c:	stur	w10, [x29, #-184]
   2a090:	cbnz	w8, 2a444 <ZSTD_endStream@@Base+0x1c4f0>
   2a094:	ldur	x1, [x29, #-192]
   2a098:	mov	w2, #0x2                   	// #2
   2a09c:	mov	w0, wzr
   2a0a0:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2a0a4:	ldur	x8, [x29, #-136]
   2a0a8:	ldr	x9, [sp, #24]
   2a0ac:	mov	w22, #0x1                   	// #1
   2a0b0:	mov	w10, #0x40000000            	// #1073741824
   2a0b4:	add	x22, x22, #0x1
   2a0b8:	cmp	x22, x9
   2a0bc:	str	w10, [x8], #28
   2a0c0:	b.cc	2a0b4 <ZSTD_endStream@@Base+0x1c160>  // b.lo, b.ul, b.last
   2a0c4:	add	w8, w0, w20
   2a0c8:	mov	x21, xzr
   2a0cc:	stur	w8, [x29, #-96]
   2a0d0:	mov	w8, w19
   2a0d4:	stur	x8, [x29, #-144]
   2a0d8:	b	2a0f0 <ZSTD_endStream@@Base+0x1c19c>
   2a0dc:	ldur	x21, [x29, #-120]
   2a0e0:	ldp	x25, x8, [x29, #-152]
   2a0e4:	add	x21, x21, #0x1
   2a0e8:	cmp	x21, x8
   2a0ec:	b.cs	2a438 <ZSTD_endStream@@Base+0x1c4e4>  // b.hs, b.nlast
   2a0f0:	ldur	x8, [x29, #-168]
   2a0f4:	ldur	w2, [x29, #-124]
   2a0f8:	mov	x0, x25
   2a0fc:	add	x8, x8, x21, lsl #3
   2a100:	ldp	w20, w19, [x8]
   2a104:	mov	w1, w20
   2a108:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   2a10c:	cmp	w22, w19
   2a110:	stur	x21, [x29, #-120]
   2a114:	b.hi	2a0dc <ZSTD_endStream@@Base+0x1c188>  // b.pmore
   2a118:	mov	x24, x0
   2a11c:	add	w0, w20, #0x1
   2a120:	mov	x27, x1
   2a124:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   2a128:	lsl	w8, w0, #8
   2a12c:	mov	w28, w0
   2a130:	add	w8, w8, #0x1, lsl #12
   2a134:	stur	w8, [x29, #-112]
   2a138:	b	2a1cc <ZSTD_endStream@@Base+0x1c278>
   2a13c:	ldr	x8, [x23, #96]
   2a140:	ldr	w21, [x23, #148]
   2a144:	ldr	w0, [x8, x28, lsl #2]
   2a148:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2a14c:	mov	w26, w0
   2a150:	mov	w0, w25
   2a154:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   2a158:	mov	w8, w0
   2a15c:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   2a160:	ldr	x9, [x23, #88]
   2a164:	lsl	x8, x8, #2
   2a168:	add	x10, x10, #0xca8
   2a16c:	ldr	w25, [x10, x8]
   2a170:	ldur	x10, [x29, #-72]
   2a174:	ldr	w0, [x9, x8]
   2a178:	ldr	w23, [x10, #144]
   2a17c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2a180:	sub	w9, w21, w26
   2a184:	add	w8, w25, w28
   2a188:	add	w9, w9, w23
   2a18c:	ldp	x26, x23, [x29, #-80]
   2a190:	add	w8, w9, w8, lsl #8
   2a194:	sub	w8, w8, w0
   2a198:	add	w8, w8, #0x33
   2a19c:	ldur	w9, [x29, #-96]
   2a1a0:	ldur	w10, [x29, #-84]
   2a1a4:	add	w8, w9, w8
   2a1a8:	mov	w9, #0x1c                  	// #28
   2a1ac:	umaddl	x9, w22, w9, x26
   2a1b0:	stp	w22, w10, [x9, #8]
   2a1b4:	add	w22, w22, #0x1
   2a1b8:	cmp	w22, w19
   2a1bc:	stp	w8, w20, [x9]
   2a1c0:	str	x24, [x9, #16]
   2a1c4:	str	w27, [x9, #24]
   2a1c8:	b.hi	2a0dc <ZSTD_endStream@@Base+0x1c188>  // b.pmore
   2a1cc:	ldr	w8, [x23, #152]
   2a1d0:	sub	w25, w22, #0x3
   2a1d4:	cmp	w8, #0x1
   2a1d8:	b.ne	2a13c <ZSTD_endStream@@Base+0x1c1e8>  // b.any
   2a1dc:	mov	w0, w25
   2a1e0:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2a1e4:	ldur	w8, [x29, #-112]
   2a1e8:	add	w8, w8, w0
   2a1ec:	b	2a19c <ZSTD_endStream@@Base+0x1c248>
   2a1f0:	ldr	w20, [x23, #200]
   2a1f4:	sub	w22, w2, w19
   2a1f8:	cmp	w21, w22
   2a1fc:	b.cs	2a224 <ZSTD_endStream@@Base+0x1c2d0>  // b.hs, b.nlast
   2a200:	ldur	x2, [x29, #-160]
   2a204:	add	x1, x19, w21, uxtw
   2a208:	mov	x0, x23
   2a20c:	mov	w3, w20
   2a210:	mov	w4, wzr
   2a214:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   2a218:	add	w21, w0, w21
   2a21c:	cmp	w21, w22
   2a220:	b.cc	2a200 <ZSTD_endStream@@Base+0x1c2ac>  // b.lo, b.ul, b.last
   2a224:	sub	w8, w20, #0x6
   2a228:	cmp	w8, #0x2
   2a22c:	str	w22, [x23, #36]
   2a230:	b.cc	2a44c <ZSTD_endStream@@Base+0x1c4f8>  // b.lo, b.ul, b.last
   2a234:	ldur	x0, [x29, #-176]
   2a238:	cmp	w20, #0x5
   2a23c:	mov	w9, #0xfff                 	// #4095
   2a240:	b.eq	2a670 <ZSTD_endStream@@Base+0x1c71c>  // b.none
   2a244:	cmp	w20, #0x3
   2a248:	b.ne	2a87c <ZSTD_endStream@@Base+0x1c928>  // b.any
   2a24c:	ldr	w8, [x23, #204]
   2a250:	ldr	x10, [x23, #8]
   2a254:	ldr	w1, [x23, #192]
   2a258:	ldr	x19, [x23, #48]
   2a25c:	cmp	w8, #0xfff
   2a260:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2a264:	mov	w2, #0x3                   	// #3
   2a268:	stur	w8, [x29, #-112]
   2a26c:	stur	x10, [x29, #-208]
   2a270:	sub	w24, w0, w10
   2a274:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2a278:	ldp	w2, w8, [x23, #184]
   2a27c:	stp	x0, x19, [sp, #80]
   2a280:	ldr	w9, [x19, x0, lsl #2]
   2a284:	ldr	x21, [x23, #64]
   2a288:	sub	w8, w8, #0x1
   2a28c:	ldr	w20, [x23, #24]
   2a290:	str	w9, [sp, #96]
   2a294:	mov	w9, #0xffffffff            	// #-1
   2a298:	lsl	w19, w9, w8
   2a29c:	mvn	w8, w19
   2a2a0:	str	w8, [sp, #120]
   2a2a4:	subs	w8, w24, w8
   2a2a8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2a2ac:	mov	x0, x23
   2a2b0:	mov	w1, w24
   2a2b4:	str	w8, [sp, #112]
   2a2b8:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2a2bc:	cmp	w0, #0x0
   2a2c0:	csinc	w10, w0, wzr, ne  // ne = any
   2a2c4:	stur	w10, [x29, #-144]
   2a2c8:	ldur	w10, [x29, #-84]
   2a2cc:	bic	w8, w24, w19
   2a2d0:	add	w9, w24, #0x9
   2a2d4:	stur	w9, [x29, #-120]
   2a2d8:	ldr	w9, [x23, #196]
   2a2dc:	lsl	w8, w8, #1
   2a2e0:	ldur	x2, [x29, #-176]
   2a2e4:	cmp	w10, #0x0
   2a2e8:	add	x10, x21, w8, uxtw #2
   2a2ec:	mov	w8, #0x3                   	// #3
   2a2f0:	cinc	x28, x8, eq  // eq = none
   2a2f4:	add	x8, x10, #0x4
   2a2f8:	ldr	x27, [sp, #64]
   2a2fc:	str	x8, [sp, #152]
   2a300:	mov	w8, #0x1                   	// #1
   2a304:	lsl	w8, w8, w9
   2a308:	mov	w22, wzr
   2a30c:	mov	w25, wzr
   2a310:	sub	w23, w24, w20
   2a314:	cset	w26, eq  // eq = none
   2a318:	stur	w8, [x29, #-96]
   2a31c:	add	x8, x2, #0x3
   2a320:	str	w24, [sp, #104]
   2a324:	str	x21, [sp, #136]
   2a328:	str	x10, [sp, #208]
   2a32c:	str	x8, [sp, #216]
   2a330:	cmp	x26, #0x3
   2a334:	b.ne	2a348 <ZSTD_endStream@@Base+0x1c3f4>  // b.any
   2a338:	ldur	x8, [x29, #-152]
   2a33c:	ldr	w8, [x8]
   2a340:	sub	w19, w8, #0x1
   2a344:	b	2a350 <ZSTD_endStream@@Base+0x1c3fc>
   2a348:	ldur	x8, [x29, #-152]
   2a34c:	ldr	w19, [x8, x26, lsl #2]
   2a350:	sub	w8, w19, #0x1
   2a354:	cmp	w8, w23
   2a358:	b.cs	2a3a4 <ZSTD_endStream@@Base+0x1c450>  // b.hs, b.nlast
   2a35c:	mov	w1, #0x3                   	// #3
   2a360:	mov	x0, x2
   2a364:	mov	x20, x2
   2a368:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a36c:	mov	w19, w19
   2a370:	mov	w24, w0
   2a374:	sub	x0, x20, x19
   2a378:	mov	w1, #0x3                   	// #3
   2a37c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a380:	cmp	w24, w0
   2a384:	b.ne	2a3ac <ZSTD_endStream@@Base+0x1c458>  // b.any
   2a388:	ldr	x0, [sp, #216]
   2a38c:	ldur	x2, [x29, #-160]
   2a390:	neg	x8, x19
   2a394:	add	x1, x0, x8
   2a398:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2a39c:	add	w8, w0, #0x3
   2a3a0:	b	2a3b0 <ZSTD_endStream@@Base+0x1c45c>
   2a3a4:	mov	w8, wzr
   2a3a8:	b	2a3b4 <ZSTD_endStream@@Base+0x1c460>
   2a3ac:	mov	w8, wzr
   2a3b0:	ldur	x2, [x29, #-176]
   2a3b4:	mov	w9, w8
   2a3b8:	cmp	x27, x9
   2a3bc:	b.cs	2a3fc <ZSTD_endStream@@Base+0x1c4a8>  // b.hs, b.nlast
   2a3c0:	ldur	x10, [x29, #-168]
   2a3c4:	ldur	w11, [x29, #-112]
   2a3c8:	add	x10, x10, w25, uxtw #3
   2a3cc:	add	w25, w25, #0x1
   2a3d0:	cmp	w8, w11
   2a3d4:	stp	w22, w8, [x10]
   2a3d8:	mov	w8, #0x1                   	// #1
   2a3dc:	b.hi	2a428 <ZSTD_endStream@@Base+0x1c4d4>  // b.pmore
   2a3e0:	ldur	x11, [x29, #-160]
   2a3e4:	add	x10, x2, x9
   2a3e8:	mov	x27, x9
   2a3ec:	mov	w19, w25
   2a3f0:	cmp	x10, x11
   2a3f4:	b.ne	2a400 <ZSTD_endStream@@Base+0x1c4ac>  // b.any
   2a3f8:	b	2a40c <ZSTD_endStream@@Base+0x1c4b8>
   2a3fc:	mov	x9, x27
   2a400:	mov	w8, wzr
   2a404:	mov	x27, x9
   2a408:	mov	w19, w21
   2a40c:	cbnz	w8, 2ac38 <ZSTD_endStream@@Base+0x1cce4>
   2a410:	add	x26, x26, #0x1
   2a414:	cmp	x26, x28
   2a418:	add	w22, w22, #0x1
   2a41c:	mov	w21, w19
   2a420:	b.cc	2a330 <ZSTD_endStream@@Base+0x1c3dc>  // b.lo, b.ul, b.last
   2a424:	b	2ac34 <ZSTD_endStream@@Base+0x1cce0>
   2a428:	mov	x27, x9
   2a42c:	mov	w19, w25
   2a430:	cbz	w8, 2a410 <ZSTD_endStream@@Base+0x1c4bc>
   2a434:	b	2ac38 <ZSTD_endStream@@Base+0x1cce4>
   2a438:	ldr	x27, [sp, #176]
   2a43c:	mov	w8, wzr
   2a440:	sub	w22, w22, #0x1
   2a444:	mov	w20, #0x1c                  	// #28
   2a448:	b	2afa0 <ZSTD_endStream@@Base+0x1d04c>
   2a44c:	ldr	w8, [x23, #204]
   2a450:	ldur	x21, [x29, #-176]
   2a454:	ldr	x10, [x23, #8]
   2a458:	ldr	w1, [x23, #192]
   2a45c:	ldr	x19, [x23, #48]
   2a460:	cmp	w8, #0xfff
   2a464:	mov	w9, #0xfff                 	// #4095
   2a468:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2a46c:	mov	w2, #0x6                   	// #6
   2a470:	mov	x0, x21
   2a474:	stur	w8, [x29, #-120]
   2a478:	str	x10, [sp, #208]
   2a47c:	sub	w25, w21, w10
   2a480:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2a484:	ldp	w2, w8, [x23, #184]
   2a488:	mov	w9, #0xffffffff            	// #-1
   2a48c:	str	x19, [sp, #88]
   2a490:	ldr	w28, [x19, x0, lsl #2]
   2a494:	sub	w8, w8, #0x1
   2a498:	lsl	w19, w9, w8
   2a49c:	ldr	x24, [x23, #64]
   2a4a0:	ldr	w20, [x23, #24]
   2a4a4:	mvn	w8, w19
   2a4a8:	str	w8, [sp, #112]
   2a4ac:	subs	w8, w25, w8
   2a4b0:	str	x0, [sp, #72]
   2a4b4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2a4b8:	mov	x0, x23
   2a4bc:	mov	w1, w25
   2a4c0:	str	w8, [sp, #104]
   2a4c4:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2a4c8:	cmp	w0, #0x0
   2a4cc:	csinc	w10, w0, wzr, ne  // ne = any
   2a4d0:	str	w10, [sp, #216]
   2a4d4:	ldur	w10, [x29, #-84]
   2a4d8:	bic	w8, w25, w19
   2a4dc:	add	w9, w25, #0x9
   2a4e0:	stur	w9, [x29, #-208]
   2a4e4:	ldr	w9, [x23, #196]
   2a4e8:	lsl	w8, w8, #1
   2a4ec:	cmp	w10, #0x0
   2a4f0:	add	x10, x24, w8, uxtw #2
   2a4f4:	mov	w8, #0x3                   	// #3
   2a4f8:	sub	w12, w25, w20
   2a4fc:	cinc	x13, x8, eq  // eq = none
   2a500:	add	x8, x10, #0x4
   2a504:	ldr	x20, [sp, #64]
   2a508:	str	x8, [sp, #136]
   2a50c:	mov	w8, #0x1                   	// #1
   2a510:	lsl	w8, w8, w9
   2a514:	mov	x2, x21
   2a518:	mov	w22, wzr
   2a51c:	mov	w26, wzr
   2a520:	str	w25, [sp, #80]
   2a524:	cset	w25, eq  // eq = none
   2a528:	stur	w8, [x29, #-112]
   2a52c:	add	x8, x21, #0x4
   2a530:	str	x24, [sp, #120]
   2a534:	str	x10, [sp, #152]
   2a538:	str	x8, [sp, #96]
   2a53c:	stur	x13, [x29, #-144]
   2a540:	cmp	x25, #0x3
   2a544:	b.ne	2a558 <ZSTD_endStream@@Base+0x1c604>  // b.any
   2a548:	ldur	x8, [x29, #-152]
   2a54c:	ldr	w8, [x8]
   2a550:	sub	w19, w8, #0x1
   2a554:	b	2a560 <ZSTD_endStream@@Base+0x1c60c>
   2a558:	ldur	x8, [x29, #-152]
   2a55c:	ldr	w19, [x8, x25, lsl #2]
   2a560:	sub	w8, w19, #0x1
   2a564:	cmp	w8, w12
   2a568:	b.cs	2a5c8 <ZSTD_endStream@@Base+0x1c674>  // b.hs, b.nlast
   2a56c:	mov	w27, w26
   2a570:	ldur	x26, [x29, #-160]
   2a574:	mov	w1, #0x4                   	// #4
   2a578:	mov	x0, x2
   2a57c:	stur	x20, [x29, #-96]
   2a580:	mov	w20, w12
   2a584:	mov	w23, w28
   2a588:	mov	x28, x2
   2a58c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a590:	mov	w19, w19
   2a594:	mov	w24, w0
   2a598:	sub	x0, x28, x19
   2a59c:	mov	w1, #0x4                   	// #4
   2a5a0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a5a4:	cmp	w24, w0
   2a5a8:	b.ne	2a5d0 <ZSTD_endStream@@Base+0x1c67c>  // b.any
   2a5ac:	ldr	x0, [sp, #96]
   2a5b0:	neg	x8, x19
   2a5b4:	mov	x2, x26
   2a5b8:	add	x1, x0, x8
   2a5bc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2a5c0:	add	w8, w0, #0x4
   2a5c4:	b	2a5d4 <ZSTD_endStream@@Base+0x1c680>
   2a5c8:	mov	w8, wzr
   2a5cc:	b	2a5ec <ZSTD_endStream@@Base+0x1c698>
   2a5d0:	mov	w8, wzr
   2a5d4:	ldur	x2, [x29, #-176]
   2a5d8:	mov	w12, w20
   2a5dc:	ldur	x20, [x29, #-96]
   2a5e0:	ldur	x13, [x29, #-144]
   2a5e4:	mov	w26, w27
   2a5e8:	mov	w28, w23
   2a5ec:	mov	w9, w8
   2a5f0:	cmp	x20, x9
   2a5f4:	b.cs	2a634 <ZSTD_endStream@@Base+0x1c6e0>  // b.hs, b.nlast
   2a5f8:	ldur	x10, [x29, #-168]
   2a5fc:	ldur	w11, [x29, #-120]
   2a600:	add	x10, x10, w26, uxtw #3
   2a604:	add	w26, w26, #0x1
   2a608:	cmp	w8, w11
   2a60c:	stp	w22, w8, [x10]
   2a610:	mov	w8, #0x1                   	// #1
   2a614:	b.hi	2a660 <ZSTD_endStream@@Base+0x1c70c>  // b.pmore
   2a618:	ldur	x11, [x29, #-160]
   2a61c:	add	x10, x2, x9
   2a620:	mov	x20, x9
   2a624:	mov	w19, w26
   2a628:	cmp	x10, x11
   2a62c:	b.ne	2a638 <ZSTD_endStream@@Base+0x1c6e4>  // b.any
   2a630:	b	2a644 <ZSTD_endStream@@Base+0x1c6f0>
   2a634:	mov	x9, x20
   2a638:	mov	w8, wzr
   2a63c:	mov	x20, x9
   2a640:	mov	w19, w21
   2a644:	cbnz	w8, 2aa8c <ZSTD_endStream@@Base+0x1cb38>
   2a648:	add	x25, x25, #0x1
   2a64c:	cmp	x25, x13
   2a650:	add	w22, w22, #0x1
   2a654:	mov	w21, w19
   2a658:	b.cc	2a540 <ZSTD_endStream@@Base+0x1c5ec>  // b.lo, b.ul, b.last
   2a65c:	b	2aa88 <ZSTD_endStream@@Base+0x1cb34>
   2a660:	mov	x20, x9
   2a664:	mov	w19, w26
   2a668:	cbz	w8, 2a648 <ZSTD_endStream@@Base+0x1c6f4>
   2a66c:	b	2aa8c <ZSTD_endStream@@Base+0x1cb38>
   2a670:	ldr	w8, [x23, #204]
   2a674:	ldr	x10, [x23, #8]
   2a678:	ldr	w1, [x23, #192]
   2a67c:	ldr	x19, [x23, #48]
   2a680:	cmp	w8, #0xfff
   2a684:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2a688:	mov	w2, #0x5                   	// #5
   2a68c:	stur	w8, [x29, #-120]
   2a690:	str	x10, [sp, #216]
   2a694:	sub	w24, w0, w10
   2a698:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2a69c:	ldp	w2, w8, [x23, #184]
   2a6a0:	mov	w9, #0xffffffff            	// #-1
   2a6a4:	str	x19, [sp, #96]
   2a6a8:	ldr	w28, [x19, x0, lsl #2]
   2a6ac:	sub	w8, w8, #0x1
   2a6b0:	lsl	w19, w9, w8
   2a6b4:	ldr	x21, [x23, #64]
   2a6b8:	ldr	w20, [x23, #24]
   2a6bc:	mvn	w8, w19
   2a6c0:	str	w8, [sp, #120]
   2a6c4:	subs	w8, w24, w8
   2a6c8:	str	x0, [sp, #80]
   2a6cc:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2a6d0:	mov	x0, x23
   2a6d4:	mov	w1, w24
   2a6d8:	str	w8, [sp, #112]
   2a6dc:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2a6e0:	cmp	w0, #0x0
   2a6e4:	csinc	w10, w0, wzr, ne  // ne = any
   2a6e8:	stur	w10, [x29, #-208]
   2a6ec:	ldur	w10, [x29, #-84]
   2a6f0:	bic	w8, w24, w19
   2a6f4:	add	w9, w24, #0x9
   2a6f8:	stur	w9, [x29, #-144]
   2a6fc:	ldr	w9, [x23, #196]
   2a700:	lsl	w8, w8, #1
   2a704:	ldur	x2, [x29, #-176]
   2a708:	cmp	w10, #0x0
   2a70c:	add	x10, x21, w8, uxtw #2
   2a710:	mov	w8, #0x3                   	// #3
   2a714:	sub	w13, w24, w20
   2a718:	cinc	x23, x8, eq  // eq = none
   2a71c:	add	x8, x10, #0x4
   2a720:	ldr	x20, [sp, #64]
   2a724:	str	x8, [sp, #152]
   2a728:	mov	w8, #0x1                   	// #1
   2a72c:	lsl	w8, w8, w9
   2a730:	mov	w22, wzr
   2a734:	mov	w26, wzr
   2a738:	cset	w25, eq  // eq = none
   2a73c:	stur	w8, [x29, #-112]
   2a740:	add	x8, x2, #0x4
   2a744:	str	w24, [sp, #88]
   2a748:	str	x21, [sp, #136]
   2a74c:	str	x10, [sp, #208]
   2a750:	str	x8, [sp, #104]
   2a754:	cmp	x25, #0x3
   2a758:	b.ne	2a76c <ZSTD_endStream@@Base+0x1c818>  // b.any
   2a75c:	ldur	x8, [x29, #-152]
   2a760:	ldr	w8, [x8]
   2a764:	sub	w19, w8, #0x1
   2a768:	b	2a774 <ZSTD_endStream@@Base+0x1c820>
   2a76c:	ldur	x8, [x29, #-152]
   2a770:	ldr	w19, [x8, x25, lsl #2]
   2a774:	sub	w8, w19, #0x1
   2a778:	cmp	w8, w13
   2a77c:	b.cs	2a7d8 <ZSTD_endStream@@Base+0x1c884>  // b.hs, b.nlast
   2a780:	mov	w1, #0x4                   	// #4
   2a784:	mov	x0, x2
   2a788:	stur	x20, [x29, #-96]
   2a78c:	mov	w20, w13
   2a790:	mov	w27, w28
   2a794:	mov	w28, w26
   2a798:	mov	x26, x2
   2a79c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a7a0:	mov	w19, w19
   2a7a4:	mov	w24, w0
   2a7a8:	sub	x0, x26, x19
   2a7ac:	mov	w1, #0x4                   	// #4
   2a7b0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a7b4:	cmp	w24, w0
   2a7b8:	b.ne	2a7e0 <ZSTD_endStream@@Base+0x1c88c>  // b.any
   2a7bc:	ldr	x0, [sp, #104]
   2a7c0:	ldur	x2, [x29, #-160]
   2a7c4:	neg	x8, x19
   2a7c8:	add	x1, x0, x8
   2a7cc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2a7d0:	add	w8, w0, #0x4
   2a7d4:	b	2a7e4 <ZSTD_endStream@@Base+0x1c890>
   2a7d8:	mov	w8, wzr
   2a7dc:	b	2a7f8 <ZSTD_endStream@@Base+0x1c8a4>
   2a7e0:	mov	w8, wzr
   2a7e4:	ldur	x2, [x29, #-176]
   2a7e8:	mov	w13, w20
   2a7ec:	ldur	x20, [x29, #-96]
   2a7f0:	mov	w26, w28
   2a7f4:	mov	w28, w27
   2a7f8:	mov	w9, w8
   2a7fc:	cmp	x20, x9
   2a800:	b.cs	2a840 <ZSTD_endStream@@Base+0x1c8ec>  // b.hs, b.nlast
   2a804:	ldur	x10, [x29, #-168]
   2a808:	ldur	w11, [x29, #-120]
   2a80c:	add	x10, x10, w26, uxtw #3
   2a810:	add	w26, w26, #0x1
   2a814:	cmp	w8, w11
   2a818:	stp	w22, w8, [x10]
   2a81c:	mov	w8, #0x1                   	// #1
   2a820:	b.hi	2a86c <ZSTD_endStream@@Base+0x1c918>  // b.pmore
   2a824:	ldur	x11, [x29, #-160]
   2a828:	add	x10, x2, x9
   2a82c:	mov	x20, x9
   2a830:	mov	w19, w26
   2a834:	cmp	x10, x11
   2a838:	b.ne	2a844 <ZSTD_endStream@@Base+0x1c8f0>  // b.any
   2a83c:	b	2a850 <ZSTD_endStream@@Base+0x1c8fc>
   2a840:	mov	x9, x20
   2a844:	mov	w8, wzr
   2a848:	mov	x20, x9
   2a84c:	mov	w19, w21
   2a850:	cbnz	w8, 2ac48 <ZSTD_endStream@@Base+0x1ccf4>
   2a854:	add	x25, x25, #0x1
   2a858:	cmp	x25, x23
   2a85c:	add	w22, w22, #0x1
   2a860:	mov	w21, w19
   2a864:	b.cc	2a754 <ZSTD_endStream@@Base+0x1c800>  // b.lo, b.ul, b.last
   2a868:	b	2ac44 <ZSTD_endStream@@Base+0x1ccf0>
   2a86c:	mov	x20, x9
   2a870:	mov	w19, w26
   2a874:	cbz	w8, 2a854 <ZSTD_endStream@@Base+0x1c900>
   2a878:	b	2ac48 <ZSTD_endStream@@Base+0x1ccf4>
   2a87c:	ldr	w8, [x23, #204]
   2a880:	ldr	x10, [x23, #8]
   2a884:	ldr	w1, [x23, #192]
   2a888:	ldr	x19, [x23, #48]
   2a88c:	cmp	w8, #0xfff
   2a890:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2a894:	mov	w2, #0x4                   	// #4
   2a898:	stur	w8, [x29, #-120]
   2a89c:	str	x10, [sp, #216]
   2a8a0:	sub	w24, w0, w10
   2a8a4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2a8a8:	ldp	w2, w8, [x23, #184]
   2a8ac:	mov	w9, #0xffffffff            	// #-1
   2a8b0:	str	x19, [sp, #96]
   2a8b4:	ldr	w28, [x19, x0, lsl #2]
   2a8b8:	sub	w8, w8, #0x1
   2a8bc:	lsl	w19, w9, w8
   2a8c0:	ldr	x21, [x23, #64]
   2a8c4:	ldr	w20, [x23, #24]
   2a8c8:	mvn	w8, w19
   2a8cc:	str	w8, [sp, #120]
   2a8d0:	subs	w8, w24, w8
   2a8d4:	str	x0, [sp, #80]
   2a8d8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2a8dc:	mov	x0, x23
   2a8e0:	mov	w1, w24
   2a8e4:	str	w8, [sp, #112]
   2a8e8:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2a8ec:	cmp	w0, #0x0
   2a8f0:	csinc	w10, w0, wzr, ne  // ne = any
   2a8f4:	stur	w10, [x29, #-208]
   2a8f8:	ldur	w10, [x29, #-84]
   2a8fc:	bic	w8, w24, w19
   2a900:	add	w9, w24, #0x9
   2a904:	stur	w9, [x29, #-144]
   2a908:	ldr	w9, [x23, #196]
   2a90c:	lsl	w8, w8, #1
   2a910:	ldur	x2, [x29, #-176]
   2a914:	cmp	w10, #0x0
   2a918:	add	x10, x21, w8, uxtw #2
   2a91c:	mov	w8, #0x3                   	// #3
   2a920:	sub	w13, w24, w20
   2a924:	cinc	x23, x8, eq  // eq = none
   2a928:	add	x8, x10, #0x4
   2a92c:	ldr	x20, [sp, #64]
   2a930:	str	x8, [sp, #152]
   2a934:	mov	w8, #0x1                   	// #1
   2a938:	lsl	w8, w8, w9
   2a93c:	mov	w22, wzr
   2a940:	mov	w26, wzr
   2a944:	cset	w25, eq  // eq = none
   2a948:	stur	w8, [x29, #-112]
   2a94c:	add	x8, x2, #0x4
   2a950:	str	w24, [sp, #88]
   2a954:	str	x21, [sp, #136]
   2a958:	str	x10, [sp, #208]
   2a95c:	str	x8, [sp, #104]
   2a960:	cmp	x25, #0x3
   2a964:	b.ne	2a978 <ZSTD_endStream@@Base+0x1ca24>  // b.any
   2a968:	ldur	x8, [x29, #-152]
   2a96c:	ldr	w8, [x8]
   2a970:	sub	w19, w8, #0x1
   2a974:	b	2a980 <ZSTD_endStream@@Base+0x1ca2c>
   2a978:	ldur	x8, [x29, #-152]
   2a97c:	ldr	w19, [x8, x25, lsl #2]
   2a980:	sub	w8, w19, #0x1
   2a984:	cmp	w8, w13
   2a988:	b.cs	2a9e4 <ZSTD_endStream@@Base+0x1ca90>  // b.hs, b.nlast
   2a98c:	mov	w1, #0x4                   	// #4
   2a990:	mov	x0, x2
   2a994:	stur	x20, [x29, #-96]
   2a998:	mov	w20, w13
   2a99c:	mov	w27, w28
   2a9a0:	mov	w28, w26
   2a9a4:	mov	x26, x2
   2a9a8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a9ac:	mov	w19, w19
   2a9b0:	mov	w24, w0
   2a9b4:	sub	x0, x26, x19
   2a9b8:	mov	w1, #0x4                   	// #4
   2a9bc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2a9c0:	cmp	w24, w0
   2a9c4:	b.ne	2a9ec <ZSTD_endStream@@Base+0x1ca98>  // b.any
   2a9c8:	ldr	x0, [sp, #104]
   2a9cc:	ldur	x2, [x29, #-160]
   2a9d0:	neg	x8, x19
   2a9d4:	add	x1, x0, x8
   2a9d8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2a9dc:	add	w8, w0, #0x4
   2a9e0:	b	2a9f0 <ZSTD_endStream@@Base+0x1ca9c>
   2a9e4:	mov	w8, wzr
   2a9e8:	b	2aa04 <ZSTD_endStream@@Base+0x1cab0>
   2a9ec:	mov	w8, wzr
   2a9f0:	ldur	x2, [x29, #-176]
   2a9f4:	mov	w13, w20
   2a9f8:	ldur	x20, [x29, #-96]
   2a9fc:	mov	w26, w28
   2aa00:	mov	w28, w27
   2aa04:	mov	w9, w8
   2aa08:	cmp	x20, x9
   2aa0c:	b.cs	2aa4c <ZSTD_endStream@@Base+0x1caf8>  // b.hs, b.nlast
   2aa10:	ldur	x10, [x29, #-168]
   2aa14:	ldur	w11, [x29, #-120]
   2aa18:	add	x10, x10, w26, uxtw #3
   2aa1c:	add	w26, w26, #0x1
   2aa20:	cmp	w8, w11
   2aa24:	stp	w22, w8, [x10]
   2aa28:	mov	w8, #0x1                   	// #1
   2aa2c:	b.hi	2aa78 <ZSTD_endStream@@Base+0x1cb24>  // b.pmore
   2aa30:	ldur	x11, [x29, #-160]
   2aa34:	add	x10, x2, x9
   2aa38:	mov	x20, x9
   2aa3c:	mov	w19, w26
   2aa40:	cmp	x10, x11
   2aa44:	b.ne	2aa50 <ZSTD_endStream@@Base+0x1cafc>  // b.any
   2aa48:	b	2aa5c <ZSTD_endStream@@Base+0x1cb08>
   2aa4c:	mov	x9, x20
   2aa50:	mov	w8, wzr
   2aa54:	mov	x20, x9
   2aa58:	mov	w19, w21
   2aa5c:	cbnz	w8, 2add8 <ZSTD_endStream@@Base+0x1ce84>
   2aa60:	add	x25, x25, #0x1
   2aa64:	cmp	x25, x23
   2aa68:	add	w22, w22, #0x1
   2aa6c:	mov	w21, w19
   2aa70:	b.cc	2a960 <ZSTD_endStream@@Base+0x1ca0c>  // b.lo, b.ul, b.last
   2aa74:	b	2add4 <ZSTD_endStream@@Base+0x1ce80>
   2aa78:	mov	x20, x9
   2aa7c:	mov	w19, w26
   2aa80:	cbz	w8, 2aa60 <ZSTD_endStream@@Base+0x1cb0c>
   2aa84:	b	2add8 <ZSTD_endStream@@Base+0x1ce84>
   2aa88:	mov	w8, wzr
   2aa8c:	ldr	x27, [sp, #176]
   2aa90:	ldur	x25, [x29, #-152]
   2aa94:	ldur	x23, [x29, #-72]
   2aa98:	cbnz	w8, 2af84 <ZSTD_endStream@@Base+0x1d030>
   2aa9c:	ldr	w9, [sp, #80]
   2aaa0:	ldr	x8, [sp, #88]
   2aaa4:	ldr	x10, [sp, #72]
   2aaa8:	mov	x22, xzr
   2aaac:	mov	x21, xzr
   2aab0:	add	w19, w9, #0x2
   2aab4:	str	w9, [x8, x10, lsl #2]
   2aab8:	b	2aad8 <ZSTD_endStream@@Base+0x1cb84>
   2aabc:	add	x9, x9, #0x4
   2aac0:	str	x9, [sp, #152]
   2aac4:	ldur	x23, [x29, #-72]
   2aac8:	ldr	w28, [x9]
   2aacc:	mov	w9, #0x1                   	// #1
   2aad0:	mov	x21, x8
   2aad4:	tbz	w9, #0, 2ac1c <ZSTD_endStream@@Base+0x1ccc8>
   2aad8:	ldur	w8, [x29, #-112]
   2aadc:	subs	w8, w8, #0x1
   2aae0:	stur	w8, [x29, #-112]
   2aae4:	b.cc	2ac1c <ZSTD_endStream@@Base+0x1ccc8>  // b.lo, b.ul, b.last
   2aae8:	ldr	w8, [sp, #216]
   2aaec:	cmp	w28, w8
   2aaf0:	b.cc	2ac1c <ZSTD_endStream@@Base+0x1ccc8>  // b.lo, b.ul, b.last
   2aaf4:	cmp	x21, x22
   2aaf8:	ldr	x8, [sp, #208]
   2aafc:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   2ab00:	add	x0, x2, x24
   2ab04:	ldur	x2, [x29, #-160]
   2ab08:	add	x23, x8, w28, uxtw
   2ab0c:	add	x1, x23, x24
   2ab10:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2ab14:	add	x8, x0, x24
   2ab18:	cmp	x8, x20
   2ab1c:	b.ls	2ab78 <ZSTD_endStream@@Base+0x1cc24>  // b.plast
   2ab20:	ldur	w14, [x29, #-208]
   2ab24:	ldur	x13, [x29, #-168]
   2ab28:	add	w11, w28, w8
   2ab2c:	mov	w9, wzr
   2ab30:	sub	w10, w14, w28
   2ab34:	cmp	x8, x10
   2ab38:	sub	w12, w19, w28
   2ab3c:	add	x13, x13, w26, uxtw #3
   2ab40:	csel	w14, w11, w14, hi  // hi = pmore
   2ab44:	cmp	x8, #0x1, lsl #12
   2ab48:	add	w26, w26, #0x1
   2ab4c:	stp	w12, w8, [x13]
   2ab50:	stur	w14, [x29, #-208]
   2ab54:	b.hi	2ac08 <ZSTD_endStream@@Base+0x1ccb4>  // b.pmore
   2ab58:	ldur	x2, [x29, #-176]
   2ab5c:	ldur	x11, [x29, #-160]
   2ab60:	mov	x20, x8
   2ab64:	add	x10, x2, x8
   2ab68:	cmp	x10, x11
   2ab6c:	b.ne	2ab7c <ZSTD_endStream@@Base+0x1cc28>  // b.any
   2ab70:	mov	x20, x8
   2ab74:	b	2abfc <ZSTD_endStream@@Base+0x1cca8>
   2ab78:	ldur	x2, [x29, #-176]
   2ab7c:	ldrb	w9, [x23, x8]
   2ab80:	ldrb	w10, [x2, x8]
   2ab84:	ldr	w11, [sp, #112]
   2ab88:	cmp	w9, w10
   2ab8c:	ldr	x9, [sp, #120]
   2ab90:	and	w11, w28, w11
   2ab94:	lsl	w11, w11, #1
   2ab98:	add	x9, x9, w11, uxtw #2
   2ab9c:	b.cs	2abc8 <ZSTD_endStream@@Base+0x1cc74>  // b.hs, b.nlast
   2aba0:	ldr	w10, [sp, #104]
   2aba4:	cmp	w28, w10
   2aba8:	ldr	x10, [sp, #152]
   2abac:	str	w28, [x10]
   2abb0:	b.hi	2aabc <ZSTD_endStream@@Base+0x1cb68>  // b.pmore
   2abb4:	ldur	x23, [x29, #-72]
   2abb8:	sub	x10, x29, #0x40
   2abbc:	mov	w9, wzr
   2abc0:	str	x10, [sp, #152]
   2abc4:	b	2aad0 <ZSTD_endStream@@Base+0x1cb7c>
   2abc8:	ldr	w10, [sp, #104]
   2abcc:	cmp	w28, w10
   2abd0:	ldr	x10, [sp, #136]
   2abd4:	str	w28, [x10]
   2abd8:	b.ls	2abec <ZSTD_endStream@@Base+0x1cc98>  // b.plast
   2abdc:	str	x9, [sp, #136]
   2abe0:	mov	x22, x8
   2abe4:	mov	x8, x21
   2abe8:	b	2aac4 <ZSTD_endStream@@Base+0x1cb70>
   2abec:	sub	x10, x29, #0x40
   2abf0:	mov	w9, wzr
   2abf4:	str	x10, [sp, #136]
   2abf8:	mov	x22, x8
   2abfc:	ldur	x23, [x29, #-72]
   2ac00:	mov	x8, x21
   2ac04:	b	2aad0 <ZSTD_endStream@@Base+0x1cb7c>
   2ac08:	ldur	x23, [x29, #-72]
   2ac0c:	ldur	x2, [x29, #-176]
   2ac10:	mov	x20, x8
   2ac14:	mov	x8, x21
   2ac18:	b	2aad0 <ZSTD_endStream@@Base+0x1cb7c>
   2ac1c:	ldr	x8, [sp, #136]
   2ac20:	str	wzr, [x8]
   2ac24:	ldr	x8, [sp, #152]
   2ac28:	str	wzr, [x8]
   2ac2c:	ldur	w8, [x29, #-208]
   2ac30:	b	2af78 <ZSTD_endStream@@Base+0x1d024>
   2ac34:	mov	w8, wzr
   2ac38:	cbz	w8, 2c8cc <ZSTD_endStream@@Base+0x1e978>
   2ac3c:	ldp	x26, x23, [x29, #-80]
   2ac40:	b	2cb6c <ZSTD_endStream@@Base+0x1ec18>
   2ac44:	mov	w8, wzr
   2ac48:	ldr	x27, [sp, #176]
   2ac4c:	ldur	x25, [x29, #-152]
   2ac50:	ldur	x23, [x29, #-72]
   2ac54:	cbnz	w8, 2af84 <ZSTD_endStream@@Base+0x1d030>
   2ac58:	ldr	w9, [sp, #88]
   2ac5c:	ldr	x8, [sp, #96]
   2ac60:	ldr	x10, [sp, #80]
   2ac64:	mov	x22, xzr
   2ac68:	mov	x21, xzr
   2ac6c:	add	w19, w9, #0x2
   2ac70:	str	w9, [x8, x10, lsl #2]
   2ac74:	b	2ac90 <ZSTD_endStream@@Base+0x1cd3c>
   2ac78:	add	x9, x9, #0x4
   2ac7c:	str	x9, [sp, #208]
   2ac80:	ldr	w28, [x9]
   2ac84:	mov	w9, #0x1                   	// #1
   2ac88:	mov	x21, x8
   2ac8c:	tbz	w9, #0, 2af64 <ZSTD_endStream@@Base+0x1d010>
   2ac90:	ldur	w8, [x29, #-112]
   2ac94:	subs	w8, w8, #0x1
   2ac98:	stur	w8, [x29, #-112]
   2ac9c:	b.cc	2af64 <ZSTD_endStream@@Base+0x1d010>  // b.lo, b.ul, b.last
   2aca0:	ldur	w8, [x29, #-208]
   2aca4:	cmp	w28, w8
   2aca8:	b.cc	2af64 <ZSTD_endStream@@Base+0x1d010>  // b.lo, b.ul, b.last
   2acac:	cmp	x21, x22
   2acb0:	ldr	x8, [sp, #216]
   2acb4:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   2acb8:	add	x0, x2, x24
   2acbc:	ldur	x2, [x29, #-160]
   2acc0:	add	x23, x8, w28, uxtw
   2acc4:	add	x1, x23, x24
   2acc8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2accc:	add	x8, x0, x24
   2acd0:	cmp	x8, x20
   2acd4:	b.ls	2ad30 <ZSTD_endStream@@Base+0x1cddc>  // b.plast
   2acd8:	ldur	w14, [x29, #-144]
   2acdc:	ldur	x13, [x29, #-168]
   2ace0:	add	w11, w28, w8
   2ace4:	mov	w9, wzr
   2ace8:	sub	w10, w14, w28
   2acec:	cmp	x8, x10
   2acf0:	sub	w12, w19, w28
   2acf4:	add	x13, x13, w26, uxtw #3
   2acf8:	csel	w14, w11, w14, hi  // hi = pmore
   2acfc:	cmp	x8, #0x1, lsl #12
   2ad00:	add	w26, w26, #0x1
   2ad04:	stp	w12, w8, [x13]
   2ad08:	stur	w14, [x29, #-144]
   2ad0c:	b.hi	2adc0 <ZSTD_endStream@@Base+0x1ce6c>  // b.pmore
   2ad10:	ldur	x2, [x29, #-176]
   2ad14:	ldur	x11, [x29, #-160]
   2ad18:	mov	x20, x8
   2ad1c:	add	x10, x2, x8
   2ad20:	cmp	x10, x11
   2ad24:	b.ne	2ad34 <ZSTD_endStream@@Base+0x1cde0>  // b.any
   2ad28:	ldur	x23, [x29, #-72]
   2ad2c:	b	2adc8 <ZSTD_endStream@@Base+0x1ce74>
   2ad30:	ldur	x2, [x29, #-176]
   2ad34:	ldrb	w9, [x23, x8]
   2ad38:	ldrb	w10, [x2, x8]
   2ad3c:	ldr	w11, [sp, #120]
   2ad40:	cmp	w9, w10
   2ad44:	ldr	x9, [sp, #136]
   2ad48:	and	w11, w28, w11
   2ad4c:	lsl	w11, w11, #1
   2ad50:	add	x9, x9, w11, uxtw #2
   2ad54:	b.cs	2ad80 <ZSTD_endStream@@Base+0x1ce2c>  // b.hs, b.nlast
   2ad58:	ldr	w10, [sp, #112]
   2ad5c:	ldur	x23, [x29, #-72]
   2ad60:	cmp	w28, w10
   2ad64:	ldr	x10, [sp, #208]
   2ad68:	str	w28, [x10]
   2ad6c:	b.hi	2ac78 <ZSTD_endStream@@Base+0x1cd24>  // b.pmore
   2ad70:	sub	x10, x29, #0x40
   2ad74:	mov	w9, wzr
   2ad78:	str	x10, [sp, #208]
   2ad7c:	b	2ac88 <ZSTD_endStream@@Base+0x1cd34>
   2ad80:	ldr	w10, [sp, #112]
   2ad84:	ldur	x23, [x29, #-72]
   2ad88:	cmp	w28, w10
   2ad8c:	ldr	x10, [sp, #152]
   2ad90:	str	w28, [x10]
   2ad94:	b.ls	2ada8 <ZSTD_endStream@@Base+0x1ce54>  // b.plast
   2ad98:	str	x9, [sp, #152]
   2ad9c:	mov	x22, x8
   2ada0:	mov	x8, x21
   2ada4:	b	2ac80 <ZSTD_endStream@@Base+0x1cd2c>
   2ada8:	sub	x10, x29, #0x40
   2adac:	mov	w9, wzr
   2adb0:	str	x10, [sp, #152]
   2adb4:	mov	x22, x8
   2adb8:	mov	x8, x21
   2adbc:	b	2ac88 <ZSTD_endStream@@Base+0x1cd34>
   2adc0:	ldur	x23, [x29, #-72]
   2adc4:	ldur	x2, [x29, #-176]
   2adc8:	mov	x20, x8
   2adcc:	mov	x8, x21
   2add0:	b	2ac88 <ZSTD_endStream@@Base+0x1cd34>
   2add4:	mov	w8, wzr
   2add8:	ldr	x27, [sp, #176]
   2addc:	ldur	x25, [x29, #-152]
   2ade0:	ldur	x23, [x29, #-72]
   2ade4:	cbnz	w8, 2af84 <ZSTD_endStream@@Base+0x1d030>
   2ade8:	ldr	w9, [sp, #88]
   2adec:	ldr	x8, [sp, #96]
   2adf0:	ldr	x10, [sp, #80]
   2adf4:	mov	x22, xzr
   2adf8:	mov	x21, xzr
   2adfc:	add	w19, w9, #0x2
   2ae00:	str	w9, [x8, x10, lsl #2]
   2ae04:	b	2ae20 <ZSTD_endStream@@Base+0x1cecc>
   2ae08:	add	x9, x9, #0x4
   2ae0c:	str	x9, [sp, #208]
   2ae10:	ldr	w28, [x9]
   2ae14:	mov	w9, #0x1                   	// #1
   2ae18:	mov	x21, x8
   2ae1c:	tbz	w9, #0, 2af64 <ZSTD_endStream@@Base+0x1d010>
   2ae20:	ldur	w8, [x29, #-112]
   2ae24:	subs	w8, w8, #0x1
   2ae28:	stur	w8, [x29, #-112]
   2ae2c:	b.cc	2af64 <ZSTD_endStream@@Base+0x1d010>  // b.lo, b.ul, b.last
   2ae30:	ldur	w8, [x29, #-208]
   2ae34:	cmp	w28, w8
   2ae38:	b.cc	2af64 <ZSTD_endStream@@Base+0x1d010>  // b.lo, b.ul, b.last
   2ae3c:	cmp	x21, x22
   2ae40:	ldr	x8, [sp, #216]
   2ae44:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   2ae48:	add	x0, x2, x24
   2ae4c:	ldur	x2, [x29, #-160]
   2ae50:	add	x23, x8, w28, uxtw
   2ae54:	add	x1, x23, x24
   2ae58:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2ae5c:	add	x8, x0, x24
   2ae60:	cmp	x8, x20
   2ae64:	b.ls	2aec0 <ZSTD_endStream@@Base+0x1cf6c>  // b.plast
   2ae68:	ldur	w14, [x29, #-144]
   2ae6c:	ldur	x13, [x29, #-168]
   2ae70:	add	w11, w28, w8
   2ae74:	mov	w9, wzr
   2ae78:	sub	w10, w14, w28
   2ae7c:	cmp	x8, x10
   2ae80:	sub	w12, w19, w28
   2ae84:	add	x13, x13, w26, uxtw #3
   2ae88:	csel	w14, w11, w14, hi  // hi = pmore
   2ae8c:	cmp	x8, #0x1, lsl #12
   2ae90:	add	w26, w26, #0x1
   2ae94:	stp	w12, w8, [x13]
   2ae98:	stur	w14, [x29, #-144]
   2ae9c:	b.hi	2af50 <ZSTD_endStream@@Base+0x1cffc>  // b.pmore
   2aea0:	ldur	x2, [x29, #-176]
   2aea4:	ldur	x11, [x29, #-160]
   2aea8:	mov	x20, x8
   2aeac:	add	x10, x2, x8
   2aeb0:	cmp	x10, x11
   2aeb4:	b.ne	2aec4 <ZSTD_endStream@@Base+0x1cf70>  // b.any
   2aeb8:	ldur	x23, [x29, #-72]
   2aebc:	b	2af58 <ZSTD_endStream@@Base+0x1d004>
   2aec0:	ldur	x2, [x29, #-176]
   2aec4:	ldrb	w9, [x23, x8]
   2aec8:	ldrb	w10, [x2, x8]
   2aecc:	ldr	w11, [sp, #120]
   2aed0:	cmp	w9, w10
   2aed4:	ldr	x9, [sp, #136]
   2aed8:	and	w11, w28, w11
   2aedc:	lsl	w11, w11, #1
   2aee0:	add	x9, x9, w11, uxtw #2
   2aee4:	b.cs	2af10 <ZSTD_endStream@@Base+0x1cfbc>  // b.hs, b.nlast
   2aee8:	ldr	w10, [sp, #112]
   2aeec:	ldur	x23, [x29, #-72]
   2aef0:	cmp	w28, w10
   2aef4:	ldr	x10, [sp, #208]
   2aef8:	str	w28, [x10]
   2aefc:	b.hi	2ae08 <ZSTD_endStream@@Base+0x1ceb4>  // b.pmore
   2af00:	sub	x10, x29, #0x40
   2af04:	mov	w9, wzr
   2af08:	str	x10, [sp, #208]
   2af0c:	b	2ae18 <ZSTD_endStream@@Base+0x1cec4>
   2af10:	ldr	w10, [sp, #112]
   2af14:	ldur	x23, [x29, #-72]
   2af18:	cmp	w28, w10
   2af1c:	ldr	x10, [sp, #152]
   2af20:	str	w28, [x10]
   2af24:	b.ls	2af38 <ZSTD_endStream@@Base+0x1cfe4>  // b.plast
   2af28:	str	x9, [sp, #152]
   2af2c:	mov	x22, x8
   2af30:	mov	x8, x21
   2af34:	b	2ae10 <ZSTD_endStream@@Base+0x1cebc>
   2af38:	sub	x10, x29, #0x40
   2af3c:	mov	w9, wzr
   2af40:	str	x10, [sp, #152]
   2af44:	mov	x22, x8
   2af48:	mov	x8, x21
   2af4c:	b	2ae18 <ZSTD_endStream@@Base+0x1cec4>
   2af50:	ldur	x23, [x29, #-72]
   2af54:	ldur	x2, [x29, #-176]
   2af58:	mov	x20, x8
   2af5c:	mov	x8, x21
   2af60:	b	2ae18 <ZSTD_endStream@@Base+0x1cec4>
   2af64:	ldr	x8, [sp, #152]
   2af68:	str	wzr, [x8]
   2af6c:	ldr	x8, [sp, #208]
   2af70:	str	wzr, [x8]
   2af74:	ldur	w8, [x29, #-144]
   2af78:	sub	w8, w8, #0x8
   2af7c:	mov	w19, w26
   2af80:	str	w8, [x23, #36]
   2af84:	ldur	x26, [x29, #-80]
   2af88:	mov	w20, #0x1c                  	// #28
   2af8c:	cbnz	w19, 29fe0 <ZSTD_endStream@@Base+0x1c08c>
   2af90:	add	x2, x2, #0x1
   2af94:	mov	w22, wzr
   2af98:	stur	x2, [x29, #-176]
   2af9c:	mov	w8, #0x2                   	// #2
   2afa0:	ldur	w12, [x29, #-100]
   2afa4:	cmp	w8, #0x7
   2afa8:	b.eq	2c5a0 <ZSTD_endStream@@Base+0x1e64c>  // b.none
   2afac:	cbnz	w8, 29f98 <ZSTD_endStream@@Base+0x1c044>
   2afb0:	cbz	w22, 2c5ac <ZSTD_endStream@@Base+0x1e658>
   2afb4:	mov	w12, #0x1                   	// #1
   2afb8:	sub	w19, w12, #0x1
   2afbc:	umaddl	x8, w19, w20, x26
   2afc0:	ldur	x9, [x29, #-176]
   2afc4:	ldr	w8, [x8, #8]
   2afc8:	mov	w10, w12
   2afcc:	stur	w22, [x29, #-84]
   2afd0:	add	x28, x9, x10
   2afd4:	stur	w12, [x29, #-100]
   2afd8:	stur	x10, [x29, #-112]
   2afdc:	cbz	w8, 2afec <ZSTD_endStream@@Base+0x1d098>
   2afe0:	mov	w24, #0x1c                  	// #28
   2afe4:	mov	w20, #0x1                   	// #1
   2afe8:	b	2affc <ZSTD_endStream@@Base+0x1d0a8>
   2afec:	madd	x8, x19, x20, x26
   2aff0:	ldr	w8, [x8, #12]
   2aff4:	mov	w24, #0x1c                  	// #28
   2aff8:	add	w20, w8, #0x1
   2affc:	ldur	x22, [x29, #-192]
   2b000:	mul	x8, x19, x24
   2b004:	ldr	w21, [x26, x8]
   2b008:	sub	x0, x28, #0x1
   2b00c:	mov	w1, #0x1                   	// #1
   2b010:	mov	w3, #0x2                   	// #2
   2b014:	mov	x2, x22
   2b018:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   2b01c:	add	w21, w0, w21
   2b020:	mov	w2, #0x2                   	// #2
   2b024:	mov	w0, w20
   2b028:	mov	x1, x22
   2b02c:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2b030:	add	w21, w21, w0
   2b034:	sub	w0, w20, #0x1
   2b038:	mov	w2, #0x2                   	// #2
   2b03c:	mov	x1, x22
   2b040:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2b044:	ldur	x13, [x29, #-112]
   2b048:	sub	w9, w21, w0
   2b04c:	madd	x8, x13, x24, x26
   2b050:	ldr	w10, [x8]
   2b054:	cmp	w9, w10
   2b058:	b.gt	2b084 <ZSTD_endStream@@Base+0x1d130>
   2b05c:	mov	w11, #0x1c                  	// #28
   2b060:	madd	x10, x13, x11, x26
   2b064:	madd	x11, x19, x11, x26
   2b068:	stur	xzr, [x10, #4]
   2b06c:	str	w20, [x10, #12]
   2b070:	str	w9, [x8]
   2b074:	ldr	w9, [x11, #24]
   2b078:	ldr	x11, [x11, #16]
   2b07c:	str	w9, [x10, #24]
   2b080:	str	x11, [x10, #16]
   2b084:	ldr	x9, [sp, #184]
   2b088:	ldur	w22, [x29, #-84]
   2b08c:	cmp	x28, x9
   2b090:	b.ls	2b0ac <ZSTD_endStream@@Base+0x1d158>  // b.plast
   2b094:	mov	w8, #0x13                  	// #19
   2b098:	mov	w20, #0x1c                  	// #28
   2b09c:	ldur	w12, [x29, #-100]
   2b0a0:	cmp	w8, #0x13
   2b0a4:	b.ls	2c030 <ZSTD_endStream@@Base+0x1e0dc>  // b.plast
   2b0a8:	b	29f98 <ZSTD_endStream@@Base+0x1c044>
   2b0ac:	ldur	w12, [x29, #-100]
   2b0b0:	cmp	w12, w22
   2b0b4:	b.ne	2b0cc <ZSTD_endStream@@Base+0x1d178>  // b.any
   2b0b8:	mov	w8, #0x11                  	// #17
   2b0bc:	mov	w20, #0x1c                  	// #28
   2b0c0:	cmp	w8, #0x13
   2b0c4:	b.ls	2c030 <ZSTD_endStream@@Base+0x1e0dc>  // b.plast
   2b0c8:	b	29f98 <ZSTD_endStream@@Base+0x1c044>
   2b0cc:	mov	w20, #0x1c                  	// #28
   2b0d0:	madd	x10, x13, x20, x26
   2b0d4:	ldr	w11, [x10, #8]!
   2b0d8:	stur	x28, [x29, #-96]
   2b0dc:	cmp	w11, #0x0
   2b0e0:	cset	w9, ne  // ne = any
   2b0e4:	stur	w9, [x29, #-208]
   2b0e8:	str	x10, [sp, #104]
   2b0ec:	stur	w11, [x29, #-144]
   2b0f0:	cbz	w11, 2b0fc <ZSTD_endStream@@Base+0x1d1a8>
   2b0f4:	stur	wzr, [x29, #-124]
   2b0f8:	b	2b108 <ZSTD_endStream@@Base+0x1d1b4>
   2b0fc:	madd	x9, x13, x20, x26
   2b100:	ldr	w9, [x9, #12]
   2b104:	stur	w9, [x29, #-124]
   2b108:	ldr	w8, [x8]
   2b10c:	ldur	x1, [x29, #-192]
   2b110:	mov	w2, #0x2                   	// #2
   2b114:	mov	w0, wzr
   2b118:	str	w8, [sp, #96]
   2b11c:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2b120:	ldr	x19, [x23, #8]
   2b124:	ldr	w21, [x23, #36]
   2b128:	ldur	x9, [x29, #-96]
   2b12c:	mov	w24, wzr
   2b130:	str	w0, [sp, #88]
   2b134:	add	x8, x19, x21
   2b138:	cmp	x8, x9
   2b13c:	b.hi	2bfe8 <ZSTD_endStream@@Base+0x1e094>  // b.pmore
   2b140:	sub	w22, w9, w19
   2b144:	ldur	x9, [x29, #-112]
   2b148:	ldr	w20, [x23, #200]
   2b14c:	mov	w8, #0x1c                  	// #28
   2b150:	cmp	w21, w22
   2b154:	mov	x24, x23
   2b158:	madd	x23, x9, x8, x26
   2b15c:	b.cs	2b184 <ZSTD_endStream@@Base+0x1d230>  // b.hs, b.nlast
   2b160:	ldur	x2, [x29, #-160]
   2b164:	add	x1, x19, w21, uxtw
   2b168:	mov	x0, x24
   2b16c:	mov	w3, w20
   2b170:	mov	w4, wzr
   2b174:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   2b178:	add	w21, w0, w21
   2b17c:	cmp	w21, w22
   2b180:	b.cc	2b160 <ZSTD_endStream@@Base+0x1d20c>  // b.lo, b.ul, b.last
   2b184:	str	w22, [x24, #36]
   2b188:	ldr	x22, [sp, #144]
   2b18c:	add	x8, x23, #0x10
   2b190:	stur	x8, [x29, #-120]
   2b194:	sub	w8, w20, #0x6
   2b198:	cmp	w8, #0x2
   2b19c:	mov	x23, x24
   2b1a0:	b.cc	2b3d0 <ZSTD_endStream@@Base+0x1d47c>  // b.lo, b.ul, b.last
   2b1a4:	ldur	x24, [x29, #-112]
   2b1a8:	cmp	w20, #0x5
   2b1ac:	lsl	x19, x24, #3
   2b1b0:	b.eq	2b610 <ZSTD_endStream@@Base+0x1d6bc>  // b.none
   2b1b4:	ldur	x10, [x29, #-96]
   2b1b8:	cmp	w20, #0x3
   2b1bc:	mov	w9, #0xfff                 	// #4095
   2b1c0:	b.ne	2b858 <ZSTD_endStream@@Base+0x1d904>  // b.any
   2b1c4:	ldr	w8, [x23, #204]
   2b1c8:	ldr	x11, [x23, #8]
   2b1cc:	ldr	w1, [x23, #192]
   2b1d0:	ldur	x0, [x29, #-96]
   2b1d4:	ldr	x20, [x23, #48]
   2b1d8:	cmp	w8, #0xfff
   2b1dc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2b1e0:	mov	w2, #0x3                   	// #3
   2b1e4:	str	w8, [sp, #208]
   2b1e8:	str	x11, [sp, #16]
   2b1ec:	sub	w28, w10, w11
   2b1f0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2b1f4:	ldp	w2, w8, [x23, #184]
   2b1f8:	stp	x0, x20, [sp]
   2b1fc:	ldr	w9, [x20, x0, lsl #2]
   2b200:	ldr	x27, [x23, #64]
   2b204:	sub	w8, w8, #0x1
   2b208:	ldr	w21, [x23, #24]
   2b20c:	str	w9, [sp, #32]
   2b210:	mov	w9, #0xffffffff            	// #-1
   2b214:	lsl	w20, w9, w8
   2b218:	mvn	w8, w20
   2b21c:	str	w8, [sp, #56]
   2b220:	subs	w8, w28, w8
   2b224:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2b228:	mov	x0, x23
   2b22c:	mov	w1, w28
   2b230:	str	w8, [sp, #52]
   2b234:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2b238:	ldur	x12, [x29, #-96]
   2b23c:	cmp	w0, #0x0
   2b240:	bic	w9, w28, w20
   2b244:	add	w10, w28, #0x9
   2b248:	add	x11, x12, #0x3
   2b24c:	str	x11, [sp, #120]
   2b250:	csinc	w11, w0, wzr, ne  // ne = any
   2b254:	str	w11, [sp, #136]
   2b258:	ldur	w11, [x29, #-144]
   2b25c:	str	w10, [sp, #152]
   2b260:	ldr	w10, [x23, #196]
   2b264:	lsl	w9, w9, #1
   2b268:	cmp	w11, #0x0
   2b26c:	add	x11, x27, w9, uxtw #2
   2b270:	mov	w9, #0x3                   	// #3
   2b274:	str	x27, [sp, #72]
   2b278:	cinc	x27, x9, ne  // ne = any
   2b27c:	add	x9, x11, #0x4
   2b280:	str	x9, [sp, #80]
   2b284:	mov	w9, #0x1                   	// #1
   2b288:	lsl	w9, w9, w10
   2b28c:	str	w9, [sp, #216]
   2b290:	ldr	x9, [sp, #144]
   2b294:	sub	x8, x19, x24
   2b298:	ldr	x19, [sp, #64]
   2b29c:	cinc	x8, x8, ne  // ne = any
   2b2a0:	mov	x22, xzr
   2b2a4:	mov	w26, wzr
   2b2a8:	sub	w25, w28, w21
   2b2ac:	cset	w23, ne  // ne = any
   2b2b0:	add	x8, x9, x8, lsl #2
   2b2b4:	str	w28, [sp, #48]
   2b2b8:	str	x11, [sp, #112]
   2b2bc:	stur	x8, [x29, #-144]
   2b2c0:	add	x8, x23, x22
   2b2c4:	cmp	x8, #0x3
   2b2c8:	b.eq	2b2d8 <ZSTD_endStream@@Base+0x1d384>  // b.none
   2b2cc:	ldur	x8, [x29, #-144]
   2b2d0:	ldr	w20, [x8, x22, lsl #2]
   2b2d4:	b	2b2e4 <ZSTD_endStream@@Base+0x1d390>
   2b2d8:	ldur	x8, [x29, #-120]
   2b2dc:	ldr	w8, [x8]
   2b2e0:	sub	w20, w8, #0x1
   2b2e4:	sub	w8, w20, #0x1
   2b2e8:	cmp	w8, w25
   2b2ec:	b.cs	2b338 <ZSTD_endStream@@Base+0x1d3e4>  // b.hs, b.nlast
   2b2f0:	mov	w1, #0x3                   	// #3
   2b2f4:	mov	x0, x12
   2b2f8:	mov	x28, x12
   2b2fc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b300:	mov	w20, w20
   2b304:	mov	w24, w0
   2b308:	sub	x0, x28, x20
   2b30c:	mov	w1, #0x3                   	// #3
   2b310:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b314:	cmp	w24, w0
   2b318:	b.ne	2b340 <ZSTD_endStream@@Base+0x1d3ec>  // b.any
   2b31c:	ldr	x0, [sp, #120]
   2b320:	ldur	x2, [x29, #-160]
   2b324:	neg	x8, x20
   2b328:	add	x1, x0, x8
   2b32c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2b330:	add	w8, w0, #0x3
   2b334:	b	2b344 <ZSTD_endStream@@Base+0x1d3f0>
   2b338:	mov	w8, wzr
   2b33c:	b	2b348 <ZSTD_endStream@@Base+0x1d3f4>
   2b340:	mov	w8, wzr
   2b344:	ldur	x12, [x29, #-96]
   2b348:	mov	w9, w8
   2b34c:	cmp	x19, x9
   2b350:	mov	w20, #0x1c                  	// #28
   2b354:	b.cs	2b394 <ZSTD_endStream@@Base+0x1d440>  // b.hs, b.nlast
   2b358:	ldur	x10, [x29, #-168]
   2b35c:	ldr	w11, [sp, #208]
   2b360:	add	x10, x10, w26, uxtw #3
   2b364:	add	w26, w26, #0x1
   2b368:	cmp	w8, w11
   2b36c:	stp	w22, w8, [x10]
   2b370:	mov	w8, #0x1                   	// #1
   2b374:	b.hi	2b3c0 <ZSTD_endStream@@Base+0x1d46c>  // b.pmore
   2b378:	ldur	x11, [x29, #-160]
   2b37c:	add	x10, x12, x9
   2b380:	mov	x19, x9
   2b384:	mov	w24, w26
   2b388:	cmp	x10, x11
   2b38c:	b.ne	2b398 <ZSTD_endStream@@Base+0x1d444>  // b.any
   2b390:	b	2b3a4 <ZSTD_endStream@@Base+0x1d450>
   2b394:	mov	x9, x19
   2b398:	mov	w8, wzr
   2b39c:	mov	x19, x9
   2b3a0:	mov	w24, w21
   2b3a4:	cbnz	w8, 2bc5c <ZSTD_endStream@@Base+0x1dd08>
   2b3a8:	add	x22, x22, #0x1
   2b3ac:	add	x8, x23, x22
   2b3b0:	cmp	x8, x27
   2b3b4:	mov	w21, w24
   2b3b8:	b.cc	2b2c0 <ZSTD_endStream@@Base+0x1d36c>  // b.lo, b.ul, b.last
   2b3bc:	b	2bc58 <ZSTD_endStream@@Base+0x1dd04>
   2b3c0:	mov	x19, x9
   2b3c4:	mov	w24, w26
   2b3c8:	cbz	w8, 2b3a8 <ZSTD_endStream@@Base+0x1d454>
   2b3cc:	b	2bc5c <ZSTD_endStream@@Base+0x1dd08>
   2b3d0:	ldr	w8, [x23, #204]
   2b3d4:	ldur	x24, [x29, #-96]
   2b3d8:	ldr	x10, [x23, #8]
   2b3dc:	ldr	w1, [x23, #192]
   2b3e0:	ldr	x19, [x23, #48]
   2b3e4:	cmp	w8, #0xfff
   2b3e8:	mov	w9, #0xfff                 	// #4095
   2b3ec:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2b3f0:	mov	w2, #0x6                   	// #6
   2b3f4:	mov	x0, x24
   2b3f8:	str	w8, [sp, #208]
   2b3fc:	str	x10, [sp, #112]
   2b400:	sub	w27, w24, w10
   2b404:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2b408:	ldp	w2, w8, [x23, #184]
   2b40c:	mov	w9, #0xffffffff            	// #-1
   2b410:	str	x19, [sp, #16]
   2b414:	ldr	w26, [x19, x0, lsl #2]
   2b418:	sub	w8, w8, #0x1
   2b41c:	lsl	w20, w9, w8
   2b420:	ldr	x19, [x23, #64]
   2b424:	ldr	w21, [x23, #24]
   2b428:	mvn	w8, w20
   2b42c:	str	w8, [sp, #52]
   2b430:	subs	w8, w27, w8
   2b434:	str	x0, [sp]
   2b438:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2b43c:	mov	x0, x23
   2b440:	mov	w1, w27
   2b444:	str	w8, [sp, #48]
   2b448:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2b44c:	ldur	x11, [x29, #-112]
   2b450:	bic	w9, w27, w20
   2b454:	add	w10, w27, #0x9
   2b458:	cmp	w0, #0x0
   2b45c:	lsl	x8, x11, #3
   2b460:	sub	x8, x8, x11
   2b464:	ldur	w11, [x29, #-144]
   2b468:	str	w10, [sp, #136]
   2b46c:	ldr	w10, [x23, #196]
   2b470:	add	x13, x24, #0x4
   2b474:	lsl	w9, w9, #1
   2b478:	str	x13, [sp, #32]
   2b47c:	csinc	w13, w0, wzr, ne  // ne = any
   2b480:	cmp	w11, #0x0
   2b484:	add	x11, x19, w9, uxtw #2
   2b488:	mov	w9, #0x3                   	// #3
   2b48c:	ldr	x20, [sp, #64]
   2b490:	str	x19, [sp, #56]
   2b494:	mov	w19, w26
   2b498:	cinc	x26, x9, ne  // ne = any
   2b49c:	add	x9, x11, #0x4
   2b4a0:	cinc	x8, x8, ne  // ne = any
   2b4a4:	stp	x9, x11, [sp, #72]
   2b4a8:	mov	w9, #0x1                   	// #1
   2b4ac:	mov	x12, x24
   2b4b0:	mov	x25, xzr
   2b4b4:	mov	w28, wzr
   2b4b8:	sub	w14, w27, w21
   2b4bc:	cset	w15, ne  // ne = any
   2b4c0:	lsl	w9, w9, w10
   2b4c4:	add	x8, x22, x8, lsl #2
   2b4c8:	str	w27, [sp, #8]
   2b4cc:	str	w13, [sp, #120]
   2b4d0:	stur	w9, [x29, #-144]
   2b4d4:	str	x8, [sp, #216]
   2b4d8:	str	x15, [sp, #152]
   2b4dc:	add	x8, x15, x25
   2b4e0:	cmp	x8, #0x3
   2b4e4:	b.eq	2b4f4 <ZSTD_endStream@@Base+0x1d5a0>  // b.none
   2b4e8:	ldr	x8, [sp, #216]
   2b4ec:	ldr	w22, [x8, x25, lsl #2]
   2b4f0:	b	2b500 <ZSTD_endStream@@Base+0x1d5ac>
   2b4f4:	ldur	x8, [x29, #-120]
   2b4f8:	ldr	w8, [x8]
   2b4fc:	sub	w22, w8, #0x1
   2b500:	sub	w8, w22, #0x1
   2b504:	cmp	w8, w14
   2b508:	b.cs	2b564 <ZSTD_endStream@@Base+0x1d610>  // b.hs, b.nlast
   2b50c:	mov	w1, #0x4                   	// #4
   2b510:	mov	x0, x12
   2b514:	mov	x23, x20
   2b518:	mov	w27, w28
   2b51c:	mov	w28, w14
   2b520:	mov	w20, w19
   2b524:	mov	x19, x12
   2b528:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b52c:	mov	w22, w22
   2b530:	mov	w24, w0
   2b534:	sub	x0, x19, x22
   2b538:	mov	w1, #0x4                   	// #4
   2b53c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b540:	cmp	w24, w0
   2b544:	b.ne	2b56c <ZSTD_endStream@@Base+0x1d618>  // b.any
   2b548:	ldr	x0, [sp, #32]
   2b54c:	ldur	x2, [x29, #-160]
   2b550:	neg	x8, x22
   2b554:	add	x1, x0, x8
   2b558:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2b55c:	add	w8, w0, #0x4
   2b560:	b	2b570 <ZSTD_endStream@@Base+0x1d61c>
   2b564:	mov	w8, wzr
   2b568:	b	2b588 <ZSTD_endStream@@Base+0x1d634>
   2b56c:	mov	w8, wzr
   2b570:	ldur	x12, [x29, #-96]
   2b574:	ldr	x15, [sp, #152]
   2b578:	mov	w19, w20
   2b57c:	mov	w14, w28
   2b580:	mov	w28, w27
   2b584:	mov	x20, x23
   2b588:	ldur	w22, [x29, #-84]
   2b58c:	mov	w9, w8
   2b590:	cmp	x20, x9
   2b594:	b.cs	2b5d4 <ZSTD_endStream@@Base+0x1d680>  // b.hs, b.nlast
   2b598:	ldur	x10, [x29, #-168]
   2b59c:	ldr	w11, [sp, #208]
   2b5a0:	add	x10, x10, w28, uxtw #3
   2b5a4:	add	w28, w28, #0x1
   2b5a8:	cmp	w8, w11
   2b5ac:	stp	w25, w8, [x10]
   2b5b0:	mov	w8, #0x1                   	// #1
   2b5b4:	b.hi	2b600 <ZSTD_endStream@@Base+0x1d6ac>  // b.pmore
   2b5b8:	ldur	x11, [x29, #-160]
   2b5bc:	add	x10, x12, x9
   2b5c0:	mov	x20, x9
   2b5c4:	mov	w24, w28
   2b5c8:	cmp	x10, x11
   2b5cc:	b.ne	2b5d8 <ZSTD_endStream@@Base+0x1d684>  // b.any
   2b5d0:	b	2b5e4 <ZSTD_endStream@@Base+0x1d690>
   2b5d4:	mov	x9, x20
   2b5d8:	mov	w8, wzr
   2b5dc:	mov	x20, x9
   2b5e0:	mov	w24, w21
   2b5e4:	cbnz	w8, 2ba98 <ZSTD_endStream@@Base+0x1db44>
   2b5e8:	add	x25, x25, #0x1
   2b5ec:	add	x8, x15, x25
   2b5f0:	cmp	x8, x26
   2b5f4:	mov	w21, w24
   2b5f8:	b.cc	2b4dc <ZSTD_endStream@@Base+0x1d588>  // b.lo, b.ul, b.last
   2b5fc:	b	2ba94 <ZSTD_endStream@@Base+0x1db40>
   2b600:	mov	x20, x9
   2b604:	mov	w24, w28
   2b608:	cbz	w8, 2b5e8 <ZSTD_endStream@@Base+0x1d694>
   2b60c:	b	2ba98 <ZSTD_endStream@@Base+0x1db44>
   2b610:	ldr	w8, [x23, #204]
   2b614:	ldur	x25, [x29, #-96]
   2b618:	ldr	x10, [x23, #8]
   2b61c:	ldr	w1, [x23, #192]
   2b620:	ldr	x20, [x23, #48]
   2b624:	cmp	w8, #0xfff
   2b628:	mov	w9, #0xfff                 	// #4095
   2b62c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2b630:	mov	w2, #0x5                   	// #5
   2b634:	mov	x0, x25
   2b638:	str	w8, [sp, #208]
   2b63c:	str	x10, [sp, #112]
   2b640:	str	x19, [sp, #216]
   2b644:	sub	w19, w25, w10
   2b648:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2b64c:	ldp	w2, w8, [x23, #184]
   2b650:	mov	w9, #0xffffffff            	// #-1
   2b654:	str	x20, [sp, #16]
   2b658:	ldr	w27, [x20, x0, lsl #2]
   2b65c:	sub	w8, w8, #0x1
   2b660:	lsl	w20, w9, w8
   2b664:	ldr	x26, [x23, #64]
   2b668:	ldr	w21, [x23, #24]
   2b66c:	mvn	w8, w20
   2b670:	str	w8, [sp, #52]
   2b674:	subs	w8, w19, w8
   2b678:	str	x0, [sp]
   2b67c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2b680:	mov	x0, x23
   2b684:	mov	w1, w19
   2b688:	str	w8, [sp, #48]
   2b68c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2b690:	mov	x12, x25
   2b694:	cmp	w0, #0x0
   2b698:	add	x11, x12, #0x4
   2b69c:	str	x11, [sp, #32]
   2b6a0:	csinc	w11, w0, wzr, ne  // ne = any
   2b6a4:	str	w11, [sp, #120]
   2b6a8:	ldur	w11, [x29, #-144]
   2b6ac:	ldr	x8, [sp, #216]
   2b6b0:	bic	w9, w19, w20
   2b6b4:	add	w10, w19, #0x9
   2b6b8:	str	w10, [sp, #136]
   2b6bc:	ldr	w10, [x23, #196]
   2b6c0:	lsl	w9, w9, #1
   2b6c4:	cmp	w11, #0x0
   2b6c8:	add	x11, x26, w9, uxtw #2
   2b6cc:	mov	w9, #0x3                   	// #3
   2b6d0:	ldr	x20, [sp, #64]
   2b6d4:	sub	x8, x8, x24
   2b6d8:	cinc	x15, x9, ne  // ne = any
   2b6dc:	add	x9, x11, #0x4
   2b6e0:	cinc	x8, x8, ne  // ne = any
   2b6e4:	stp	x9, x11, [sp, #72]
   2b6e8:	mov	w9, #0x1                   	// #1
   2b6ec:	mov	w13, w27
   2b6f0:	mov	x25, xzr
   2b6f4:	mov	w28, wzr
   2b6f8:	sub	w14, w19, w21
   2b6fc:	cset	w16, ne  // ne = any
   2b700:	lsl	w9, w9, w10
   2b704:	add	x8, x22, x8, lsl #2
   2b708:	str	w19, [sp, #8]
   2b70c:	str	x26, [sp, #56]
   2b710:	stur	w9, [x29, #-144]
   2b714:	str	x8, [sp, #216]
   2b718:	str	x16, [sp, #152]
   2b71c:	add	x8, x16, x25
   2b720:	cmp	x8, #0x3
   2b724:	b.eq	2b734 <ZSTD_endStream@@Base+0x1d7e0>  // b.none
   2b728:	ldr	x8, [sp, #216]
   2b72c:	ldr	w22, [x8, x25, lsl #2]
   2b730:	b	2b740 <ZSTD_endStream@@Base+0x1d7ec>
   2b734:	ldur	x8, [x29, #-120]
   2b738:	ldr	w8, [x8]
   2b73c:	sub	w22, w8, #0x1
   2b740:	sub	w8, w22, #0x1
   2b744:	cmp	w8, w14
   2b748:	b.cs	2b7a8 <ZSTD_endStream@@Base+0x1d854>  // b.hs, b.nlast
   2b74c:	mov	w1, #0x4                   	// #4
   2b750:	mov	x0, x12
   2b754:	mov	x23, x20
   2b758:	mov	x20, x15
   2b75c:	mov	w27, w28
   2b760:	mov	w28, w14
   2b764:	mov	w19, w13
   2b768:	mov	x26, x12
   2b76c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b770:	mov	w22, w22
   2b774:	mov	w24, w0
   2b778:	sub	x0, x26, x22
   2b77c:	mov	w1, #0x4                   	// #4
   2b780:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b784:	cmp	w24, w0
   2b788:	b.ne	2b7b0 <ZSTD_endStream@@Base+0x1d85c>  // b.any
   2b78c:	ldr	x0, [sp, #32]
   2b790:	ldur	x2, [x29, #-160]
   2b794:	neg	x8, x22
   2b798:	add	x1, x0, x8
   2b79c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2b7a0:	add	w8, w0, #0x4
   2b7a4:	b	2b7b4 <ZSTD_endStream@@Base+0x1d860>
   2b7a8:	mov	w8, wzr
   2b7ac:	b	2b7d0 <ZSTD_endStream@@Base+0x1d87c>
   2b7b0:	mov	w8, wzr
   2b7b4:	ldur	x12, [x29, #-96]
   2b7b8:	ldr	x16, [sp, #152]
   2b7bc:	mov	w13, w19
   2b7c0:	mov	w14, w28
   2b7c4:	mov	w28, w27
   2b7c8:	mov	x15, x20
   2b7cc:	mov	x20, x23
   2b7d0:	ldur	w22, [x29, #-84]
   2b7d4:	mov	w9, w8
   2b7d8:	cmp	x20, x9
   2b7dc:	b.cs	2b81c <ZSTD_endStream@@Base+0x1d8c8>  // b.hs, b.nlast
   2b7e0:	ldur	x10, [x29, #-168]
   2b7e4:	ldr	w11, [sp, #208]
   2b7e8:	add	x10, x10, w28, uxtw #3
   2b7ec:	add	w28, w28, #0x1
   2b7f0:	cmp	w8, w11
   2b7f4:	stp	w25, w8, [x10]
   2b7f8:	mov	w8, #0x1                   	// #1
   2b7fc:	b.hi	2b848 <ZSTD_endStream@@Base+0x1d8f4>  // b.pmore
   2b800:	ldur	x11, [x29, #-160]
   2b804:	add	x10, x12, x9
   2b808:	mov	x20, x9
   2b80c:	mov	w24, w28
   2b810:	cmp	x10, x11
   2b814:	b.ne	2b820 <ZSTD_endStream@@Base+0x1d8cc>  // b.any
   2b818:	b	2b82c <ZSTD_endStream@@Base+0x1d8d8>
   2b81c:	mov	x9, x20
   2b820:	mov	w8, wzr
   2b824:	mov	x20, x9
   2b828:	mov	w24, w21
   2b82c:	cbnz	w8, 2bc74 <ZSTD_endStream@@Base+0x1dd20>
   2b830:	add	x25, x25, #0x1
   2b834:	add	x8, x16, x25
   2b838:	cmp	x8, x15
   2b83c:	mov	w21, w24
   2b840:	b.cc	2b71c <ZSTD_endStream@@Base+0x1d7c8>  // b.lo, b.ul, b.last
   2b844:	b	2bc70 <ZSTD_endStream@@Base+0x1dd1c>
   2b848:	mov	x20, x9
   2b84c:	mov	w24, w28
   2b850:	cbz	w8, 2b830 <ZSTD_endStream@@Base+0x1d8dc>
   2b854:	b	2bc74 <ZSTD_endStream@@Base+0x1dd20>
   2b858:	ldr	w8, [x23, #204]
   2b85c:	ldr	x11, [x23, #8]
   2b860:	ldr	w1, [x23, #192]
   2b864:	ldur	x0, [x29, #-96]
   2b868:	ldr	x20, [x23, #48]
   2b86c:	cmp	w8, #0xfff
   2b870:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2b874:	mov	w2, #0x4                   	// #4
   2b878:	str	w8, [sp, #208]
   2b87c:	str	x11, [sp, #112]
   2b880:	sub	w26, w10, w11
   2b884:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2b888:	ldp	w2, w8, [x23, #184]
   2b88c:	mov	w9, #0xffffffff            	// #-1
   2b890:	str	x20, [sp, #16]
   2b894:	ldr	w25, [x20, x0, lsl #2]
   2b898:	sub	w8, w8, #0x1
   2b89c:	lsl	w20, w9, w8
   2b8a0:	ldr	x22, [x23, #64]
   2b8a4:	ldr	w21, [x23, #24]
   2b8a8:	mvn	w8, w20
   2b8ac:	str	w8, [sp, #52]
   2b8b0:	subs	w8, w26, w8
   2b8b4:	str	x0, [sp]
   2b8b8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2b8bc:	mov	x0, x23
   2b8c0:	mov	w1, w26
   2b8c4:	str	w8, [sp, #48]
   2b8c8:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2b8cc:	ldur	x12, [x29, #-96]
   2b8d0:	cmp	w0, #0x0
   2b8d4:	bic	w9, w26, w20
   2b8d8:	add	w10, w26, #0x9
   2b8dc:	add	x11, x12, #0x4
   2b8e0:	str	x11, [sp, #32]
   2b8e4:	csinc	w11, w0, wzr, ne  // ne = any
   2b8e8:	str	w11, [sp, #120]
   2b8ec:	ldur	w11, [x29, #-144]
   2b8f0:	str	w10, [sp, #136]
   2b8f4:	ldr	w10, [x23, #196]
   2b8f8:	lsl	w9, w9, #1
   2b8fc:	cmp	w11, #0x0
   2b900:	add	x11, x22, w9, uxtw #2
   2b904:	mov	w9, #0x3                   	// #3
   2b908:	cinc	x15, x9, ne  // ne = any
   2b90c:	add	x9, x11, #0x4
   2b910:	stp	x9, x11, [sp, #72]
   2b914:	mov	w9, #0x1                   	// #1
   2b918:	lsl	w9, w9, w10
   2b91c:	stur	w9, [x29, #-144]
   2b920:	ldr	x9, [sp, #144]
   2b924:	ldr	x20, [sp, #64]
   2b928:	sub	x8, x19, x24
   2b92c:	cinc	x8, x8, ne  // ne = any
   2b930:	mov	w13, w25
   2b934:	mov	x25, xzr
   2b938:	mov	w28, wzr
   2b93c:	sub	w14, w26, w21
   2b940:	cset	w16, ne  // ne = any
   2b944:	add	x8, x9, x8, lsl #2
   2b948:	str	w26, [sp, #8]
   2b94c:	str	x22, [sp, #56]
   2b950:	str	x8, [sp, #216]
   2b954:	str	x16, [sp, #152]
   2b958:	add	x8, x16, x25
   2b95c:	cmp	x8, #0x3
   2b960:	b.eq	2b970 <ZSTD_endStream@@Base+0x1da1c>  // b.none
   2b964:	ldr	x8, [sp, #216]
   2b968:	ldr	w22, [x8, x25, lsl #2]
   2b96c:	b	2b97c <ZSTD_endStream@@Base+0x1da28>
   2b970:	ldur	x8, [x29, #-120]
   2b974:	ldr	w8, [x8]
   2b978:	sub	w22, w8, #0x1
   2b97c:	sub	w8, w22, #0x1
   2b980:	cmp	w8, w14
   2b984:	b.cs	2b9e4 <ZSTD_endStream@@Base+0x1da90>  // b.hs, b.nlast
   2b988:	mov	w1, #0x4                   	// #4
   2b98c:	mov	x0, x12
   2b990:	mov	x23, x20
   2b994:	mov	x20, x15
   2b998:	mov	w27, w28
   2b99c:	mov	w28, w14
   2b9a0:	mov	w19, w13
   2b9a4:	mov	x26, x12
   2b9a8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b9ac:	mov	w22, w22
   2b9b0:	mov	w24, w0
   2b9b4:	sub	x0, x26, x22
   2b9b8:	mov	w1, #0x4                   	// #4
   2b9bc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2b9c0:	cmp	w24, w0
   2b9c4:	b.ne	2b9ec <ZSTD_endStream@@Base+0x1da98>  // b.any
   2b9c8:	ldr	x0, [sp, #32]
   2b9cc:	ldur	x2, [x29, #-160]
   2b9d0:	neg	x8, x22
   2b9d4:	add	x1, x0, x8
   2b9d8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2b9dc:	add	w8, w0, #0x4
   2b9e0:	b	2b9f0 <ZSTD_endStream@@Base+0x1da9c>
   2b9e4:	mov	w8, wzr
   2b9e8:	b	2ba0c <ZSTD_endStream@@Base+0x1dab8>
   2b9ec:	mov	w8, wzr
   2b9f0:	ldur	x12, [x29, #-96]
   2b9f4:	ldr	x16, [sp, #152]
   2b9f8:	mov	w13, w19
   2b9fc:	mov	w14, w28
   2ba00:	mov	w28, w27
   2ba04:	mov	x15, x20
   2ba08:	mov	x20, x23
   2ba0c:	ldur	w22, [x29, #-84]
   2ba10:	mov	w9, w8
   2ba14:	cmp	x20, x9
   2ba18:	b.cs	2ba58 <ZSTD_endStream@@Base+0x1db04>  // b.hs, b.nlast
   2ba1c:	ldur	x10, [x29, #-168]
   2ba20:	ldr	w11, [sp, #208]
   2ba24:	add	x10, x10, w28, uxtw #3
   2ba28:	add	w28, w28, #0x1
   2ba2c:	cmp	w8, w11
   2ba30:	stp	w25, w8, [x10]
   2ba34:	mov	w8, #0x1                   	// #1
   2ba38:	b.hi	2ba84 <ZSTD_endStream@@Base+0x1db30>  // b.pmore
   2ba3c:	ldur	x11, [x29, #-160]
   2ba40:	add	x10, x12, x9
   2ba44:	mov	x20, x9
   2ba48:	mov	w24, w28
   2ba4c:	cmp	x10, x11
   2ba50:	b.ne	2ba5c <ZSTD_endStream@@Base+0x1db08>  // b.any
   2ba54:	b	2ba68 <ZSTD_endStream@@Base+0x1db14>
   2ba58:	mov	x9, x20
   2ba5c:	mov	w8, wzr
   2ba60:	mov	x20, x9
   2ba64:	mov	w24, w21
   2ba68:	cbnz	w8, 2be1c <ZSTD_endStream@@Base+0x1dec8>
   2ba6c:	add	x25, x25, #0x1
   2ba70:	add	x8, x16, x25
   2ba74:	cmp	x8, x15
   2ba78:	mov	w21, w24
   2ba7c:	b.cc	2b958 <ZSTD_endStream@@Base+0x1da04>  // b.lo, b.ul, b.last
   2ba80:	b	2be18 <ZSTD_endStream@@Base+0x1dec4>
   2ba84:	mov	x20, x9
   2ba88:	mov	w24, w28
   2ba8c:	cbz	w8, 2ba6c <ZSTD_endStream@@Base+0x1db18>
   2ba90:	b	2be1c <ZSTD_endStream@@Base+0x1dec8>
   2ba94:	mov	w8, wzr
   2ba98:	ldr	x27, [sp, #176]
   2ba9c:	ldur	x25, [x29, #-152]
   2baa0:	ldur	x23, [x29, #-72]
   2baa4:	cbnz	w8, 2bc50 <ZSTD_endStream@@Base+0x1dcfc>
   2baa8:	ldr	w9, [sp, #8]
   2baac:	ldr	x8, [sp, #16]
   2bab0:	ldr	x10, [sp]
   2bab4:	mov	x22, xzr
   2bab8:	mov	x21, xzr
   2babc:	add	w24, w9, #0x2
   2bac0:	str	w9, [x8, x10, lsl #2]
   2bac4:	b	2bae0 <ZSTD_endStream@@Base+0x1db8c>
   2bac8:	add	x9, x9, #0x4
   2bacc:	str	x9, [sp, #80]
   2bad0:	ldr	w19, [x9]
   2bad4:	mov	w9, #0x1                   	// #1
   2bad8:	mov	x21, x8
   2badc:	tbz	w9, #0, 2bc2c <ZSTD_endStream@@Base+0x1dcd8>
   2bae0:	ldur	w8, [x29, #-144]
   2bae4:	subs	w8, w8, #0x1
   2bae8:	b.cc	2bc2c <ZSTD_endStream@@Base+0x1dcd8>  // b.lo, b.ul, b.last
   2baec:	stur	w8, [x29, #-144]
   2baf0:	ldr	w8, [sp, #120]
   2baf4:	cmp	w19, w8
   2baf8:	b.cc	2bc2c <ZSTD_endStream@@Base+0x1dcd8>  // b.lo, b.ul, b.last
   2bafc:	ldr	x8, [sp, #112]
   2bb00:	ldur	x2, [x29, #-160]
   2bb04:	cmp	x21, x22
   2bb08:	csel	x25, x21, x22, cc  // cc = lo, ul, last
   2bb0c:	add	x23, x8, w19, uxtw
   2bb10:	add	x0, x12, x25
   2bb14:	add	x1, x23, x25
   2bb18:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2bb1c:	add	x8, x0, x25
   2bb20:	cmp	x8, x20
   2bb24:	b.ls	2bb84 <ZSTD_endStream@@Base+0x1dc30>  // b.plast
   2bb28:	ldur	x13, [x29, #-168]
   2bb2c:	ldr	w14, [sp, #136]
   2bb30:	sub	w12, w24, w19
   2bb34:	add	w11, w19, w8
   2bb38:	add	x13, x13, w28, uxtw #3
   2bb3c:	stp	w12, w8, [x13]
   2bb40:	ldur	x25, [x29, #-152]
   2bb44:	sub	w10, w14, w19
   2bb48:	cmp	x8, x10
   2bb4c:	mov	w9, wzr
   2bb50:	csel	w14, w11, w14, hi  // hi = pmore
   2bb54:	cmp	x8, #0x1, lsl #12
   2bb58:	add	w28, w28, #0x1
   2bb5c:	str	w14, [sp, #136]
   2bb60:	b.hi	2bc18 <ZSTD_endStream@@Base+0x1dcc4>  // b.pmore
   2bb64:	ldur	x12, [x29, #-96]
   2bb68:	ldur	x11, [x29, #-160]
   2bb6c:	mov	x20, x8
   2bb70:	add	x10, x12, x8
   2bb74:	cmp	x10, x11
   2bb78:	b.ne	2bb8c <ZSTD_endStream@@Base+0x1dc38>  // b.any
   2bb7c:	ldur	x23, [x29, #-72]
   2bb80:	b	2bc20 <ZSTD_endStream@@Base+0x1dccc>
   2bb84:	ldur	x25, [x29, #-152]
   2bb88:	ldur	x12, [x29, #-96]
   2bb8c:	ldrb	w9, [x23, x8]
   2bb90:	ldrb	w10, [x12, x8]
   2bb94:	ldr	w11, [sp, #52]
   2bb98:	cmp	w9, w10
   2bb9c:	ldr	x9, [sp, #56]
   2bba0:	and	w11, w19, w11
   2bba4:	lsl	w11, w11, #1
   2bba8:	add	x9, x9, w11, uxtw #2
   2bbac:	b.cs	2bbd8 <ZSTD_endStream@@Base+0x1dc84>  // b.hs, b.nlast
   2bbb0:	ldr	w10, [sp, #48]
   2bbb4:	ldur	x23, [x29, #-72]
   2bbb8:	cmp	w19, w10
   2bbbc:	ldr	x10, [sp, #80]
   2bbc0:	str	w19, [x10]
   2bbc4:	b.hi	2bac8 <ZSTD_endStream@@Base+0x1db74>  // b.pmore
   2bbc8:	sub	x10, x29, #0x40
   2bbcc:	mov	w9, wzr
   2bbd0:	str	x10, [sp, #80]
   2bbd4:	b	2bad8 <ZSTD_endStream@@Base+0x1db84>
   2bbd8:	ldr	w10, [sp, #48]
   2bbdc:	ldur	x23, [x29, #-72]
   2bbe0:	cmp	w19, w10
   2bbe4:	ldr	x10, [sp, #72]
   2bbe8:	str	w19, [x10]
   2bbec:	b.ls	2bc00 <ZSTD_endStream@@Base+0x1dcac>  // b.plast
   2bbf0:	str	x9, [sp, #72]
   2bbf4:	mov	x22, x8
   2bbf8:	mov	x8, x21
   2bbfc:	b	2bad0 <ZSTD_endStream@@Base+0x1db7c>
   2bc00:	sub	x10, x29, #0x40
   2bc04:	mov	w9, wzr
   2bc08:	str	x10, [sp, #72]
   2bc0c:	mov	x22, x8
   2bc10:	mov	x8, x21
   2bc14:	b	2bad8 <ZSTD_endStream@@Base+0x1db84>
   2bc18:	ldur	x23, [x29, #-72]
   2bc1c:	ldur	x12, [x29, #-96]
   2bc20:	mov	x20, x8
   2bc24:	mov	x8, x21
   2bc28:	b	2bad8 <ZSTD_endStream@@Base+0x1db84>
   2bc2c:	ldr	x8, [sp, #72]
   2bc30:	ldur	w22, [x29, #-84]
   2bc34:	mov	w24, w28
   2bc38:	str	wzr, [x8]
   2bc3c:	ldr	x8, [sp, #80]
   2bc40:	str	wzr, [x8]
   2bc44:	ldr	w8, [sp, #136]
   2bc48:	sub	w8, w8, #0x8
   2bc4c:	str	w8, [x23, #36]
   2bc50:	ldur	x26, [x29, #-80]
   2bc54:	b	2bfe4 <ZSTD_endStream@@Base+0x1e090>
   2bc58:	mov	w8, wzr
   2bc5c:	cbz	w8, 2c2e4 <ZSTD_endStream@@Base+0x1e390>
   2bc60:	ldr	x27, [sp, #176]
   2bc64:	ldur	x25, [x29, #-152]
   2bc68:	ldur	x23, [x29, #-72]
   2bc6c:	b	2c58c <ZSTD_endStream@@Base+0x1e638>
   2bc70:	mov	w8, wzr
   2bc74:	ldr	x27, [sp, #176]
   2bc78:	ldur	x25, [x29, #-152]
   2bc7c:	ldp	x26, x23, [x29, #-80]
   2bc80:	cbnz	w8, 2bfe4 <ZSTD_endStream@@Base+0x1e090>
   2bc84:	ldr	w9, [sp, #8]
   2bc88:	ldr	x8, [sp, #16]
   2bc8c:	ldr	x10, [sp]
   2bc90:	mov	x22, xzr
   2bc94:	mov	x21, xzr
   2bc98:	add	w24, w9, #0x2
   2bc9c:	str	w9, [x8, x10, lsl #2]
   2bca0:	b	2bcbc <ZSTD_endStream@@Base+0x1dd68>
   2bca4:	add	x9, x9, #0x4
   2bca8:	str	x9, [sp, #80]
   2bcac:	ldr	w13, [x9]
   2bcb0:	mov	w9, #0x1                   	// #1
   2bcb4:	mov	x21, x8
   2bcb8:	tbz	w9, #0, 2bfc0 <ZSTD_endStream@@Base+0x1e06c>
   2bcbc:	ldur	w8, [x29, #-144]
   2bcc0:	subs	w8, w8, #0x1
   2bcc4:	b.cc	2bfc0 <ZSTD_endStream@@Base+0x1e06c>  // b.lo, b.ul, b.last
   2bcc8:	stur	w8, [x29, #-144]
   2bccc:	ldr	w8, [sp, #120]
   2bcd0:	cmp	w13, w8
   2bcd4:	b.cc	2bfc0 <ZSTD_endStream@@Base+0x1e06c>  // b.lo, b.ul, b.last
   2bcd8:	ldr	x8, [sp, #112]
   2bcdc:	ldur	x2, [x29, #-160]
   2bce0:	cmp	x21, x22
   2bce4:	csel	x25, x21, x22, cc  // cc = lo, ul, last
   2bce8:	add	x23, x8, w13, uxtw
   2bcec:	add	x0, x12, x25
   2bcf0:	add	x1, x23, x25
   2bcf4:	mov	w19, w13
   2bcf8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2bcfc:	add	x8, x0, x25
   2bd00:	cmp	x8, x20
   2bd04:	b.ls	2bd68 <ZSTD_endStream@@Base+0x1de14>  // b.plast
   2bd08:	ldr	w14, [sp, #136]
   2bd0c:	ldur	x13, [x29, #-168]
   2bd10:	add	w11, w19, w8
   2bd14:	sub	w12, w24, w19
   2bd18:	sub	w10, w14, w19
   2bd1c:	add	x13, x13, w28, uxtw #3
   2bd20:	cmp	x8, x10
   2bd24:	mov	w9, wzr
   2bd28:	stp	w12, w8, [x13]
   2bd2c:	csel	w14, w11, w14, hi  // hi = pmore
   2bd30:	cmp	x8, #0x1, lsl #12
   2bd34:	add	w28, w28, #0x1
   2bd38:	mov	w13, w19
   2bd3c:	str	w14, [sp, #136]
   2bd40:	b.hi	2be00 <ZSTD_endStream@@Base+0x1deac>  // b.pmore
   2bd44:	ldur	x12, [x29, #-96]
   2bd48:	ldur	x11, [x29, #-160]
   2bd4c:	mov	x20, x8
   2bd50:	add	x10, x12, x8
   2bd54:	cmp	x10, x11
   2bd58:	b.ne	2bd70 <ZSTD_endStream@@Base+0x1de1c>  // b.any
   2bd5c:	ldur	x25, [x29, #-152]
   2bd60:	ldur	x23, [x29, #-72]
   2bd64:	b	2be0c <ZSTD_endStream@@Base+0x1deb8>
   2bd68:	ldur	x12, [x29, #-96]
   2bd6c:	mov	w13, w19
   2bd70:	ldrb	w9, [x23, x8]
   2bd74:	ldrb	w10, [x12, x8]
   2bd78:	ldr	w11, [sp, #52]
   2bd7c:	ldur	x25, [x29, #-152]
   2bd80:	cmp	w9, w10
   2bd84:	ldr	x9, [sp, #56]
   2bd88:	and	w11, w13, w11
   2bd8c:	lsl	w11, w11, #1
   2bd90:	add	x9, x9, w11, uxtw #2
   2bd94:	b.cs	2bdc0 <ZSTD_endStream@@Base+0x1de6c>  // b.hs, b.nlast
   2bd98:	ldr	w10, [sp, #48]
   2bd9c:	ldur	x23, [x29, #-72]
   2bda0:	cmp	w13, w10
   2bda4:	ldr	x10, [sp, #80]
   2bda8:	str	w13, [x10]
   2bdac:	b.hi	2bca4 <ZSTD_endStream@@Base+0x1dd50>  // b.pmore
   2bdb0:	sub	x10, x29, #0x40
   2bdb4:	mov	w9, wzr
   2bdb8:	str	x10, [sp, #80]
   2bdbc:	b	2bcb4 <ZSTD_endStream@@Base+0x1dd60>
   2bdc0:	ldr	w10, [sp, #48]
   2bdc4:	ldur	x23, [x29, #-72]
   2bdc8:	cmp	w13, w10
   2bdcc:	ldr	x10, [sp, #72]
   2bdd0:	str	w13, [x10]
   2bdd4:	b.ls	2bde8 <ZSTD_endStream@@Base+0x1de94>  // b.plast
   2bdd8:	str	x9, [sp, #72]
   2bddc:	mov	x22, x8
   2bde0:	mov	x8, x21
   2bde4:	b	2bcac <ZSTD_endStream@@Base+0x1dd58>
   2bde8:	sub	x10, x29, #0x40
   2bdec:	mov	w9, wzr
   2bdf0:	str	x10, [sp, #72]
   2bdf4:	mov	x22, x8
   2bdf8:	mov	x8, x21
   2bdfc:	b	2bcb4 <ZSTD_endStream@@Base+0x1dd60>
   2be00:	ldur	x25, [x29, #-152]
   2be04:	ldur	x23, [x29, #-72]
   2be08:	ldur	x12, [x29, #-96]
   2be0c:	mov	x20, x8
   2be10:	mov	x8, x21
   2be14:	b	2bcb4 <ZSTD_endStream@@Base+0x1dd60>
   2be18:	mov	w8, wzr
   2be1c:	ldr	x27, [sp, #176]
   2be20:	ldur	x25, [x29, #-152]
   2be24:	ldp	x26, x23, [x29, #-80]
   2be28:	cbnz	w8, 2bfe4 <ZSTD_endStream@@Base+0x1e090>
   2be2c:	ldr	w9, [sp, #8]
   2be30:	ldr	x8, [sp, #16]
   2be34:	ldr	x10, [sp]
   2be38:	mov	x22, xzr
   2be3c:	mov	x21, xzr
   2be40:	add	w24, w9, #0x2
   2be44:	str	w9, [x8, x10, lsl #2]
   2be48:	b	2be64 <ZSTD_endStream@@Base+0x1df10>
   2be4c:	add	x9, x9, #0x4
   2be50:	str	x9, [sp, #80]
   2be54:	ldr	w13, [x9]
   2be58:	mov	w9, #0x1                   	// #1
   2be5c:	mov	x21, x8
   2be60:	tbz	w9, #0, 2bfc0 <ZSTD_endStream@@Base+0x1e06c>
   2be64:	ldur	w9, [x29, #-144]
   2be68:	subs	w9, w9, #0x1
   2be6c:	b.cc	2bfc0 <ZSTD_endStream@@Base+0x1e06c>  // b.lo, b.ul, b.last
   2be70:	ldr	w8, [sp, #120]
   2be74:	cmp	w13, w8
   2be78:	b.cc	2bfc0 <ZSTD_endStream@@Base+0x1e06c>  // b.lo, b.ul, b.last
   2be7c:	ldr	x8, [sp, #112]
   2be80:	ldur	x2, [x29, #-160]
   2be84:	cmp	x21, x22
   2be88:	csel	x25, x21, x22, cc  // cc = lo, ul, last
   2be8c:	add	x23, x8, w13, uxtw
   2be90:	add	x0, x12, x25
   2be94:	add	x1, x23, x25
   2be98:	stur	w9, [x29, #-144]
   2be9c:	mov	w19, w13
   2bea0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2bea4:	add	x8, x0, x25
   2bea8:	cmp	x8, x20
   2beac:	b.ls	2bf10 <ZSTD_endStream@@Base+0x1dfbc>  // b.plast
   2beb0:	ldr	w14, [sp, #136]
   2beb4:	ldur	x13, [x29, #-168]
   2beb8:	add	w11, w19, w8
   2bebc:	sub	w12, w24, w19
   2bec0:	sub	w10, w14, w19
   2bec4:	add	x13, x13, w28, uxtw #3
   2bec8:	cmp	x8, x10
   2becc:	mov	w9, wzr
   2bed0:	stp	w12, w8, [x13]
   2bed4:	csel	w14, w11, w14, hi  // hi = pmore
   2bed8:	cmp	x8, #0x1, lsl #12
   2bedc:	add	w28, w28, #0x1
   2bee0:	mov	w13, w19
   2bee4:	str	w14, [sp, #136]
   2bee8:	b.hi	2bfa8 <ZSTD_endStream@@Base+0x1e054>  // b.pmore
   2beec:	ldur	x12, [x29, #-96]
   2bef0:	ldur	x11, [x29, #-160]
   2bef4:	mov	x20, x8
   2bef8:	add	x10, x12, x8
   2befc:	cmp	x10, x11
   2bf00:	b.ne	2bf18 <ZSTD_endStream@@Base+0x1dfc4>  // b.any
   2bf04:	ldur	x25, [x29, #-152]
   2bf08:	ldur	x23, [x29, #-72]
   2bf0c:	b	2bfb4 <ZSTD_endStream@@Base+0x1e060>
   2bf10:	ldur	x12, [x29, #-96]
   2bf14:	mov	w13, w19
   2bf18:	ldrb	w9, [x23, x8]
   2bf1c:	ldrb	w10, [x12, x8]
   2bf20:	ldr	w11, [sp, #52]
   2bf24:	ldur	x25, [x29, #-152]
   2bf28:	cmp	w9, w10
   2bf2c:	ldr	x9, [sp, #56]
   2bf30:	and	w11, w13, w11
   2bf34:	lsl	w11, w11, #1
   2bf38:	add	x9, x9, w11, uxtw #2
   2bf3c:	b.cs	2bf68 <ZSTD_endStream@@Base+0x1e014>  // b.hs, b.nlast
   2bf40:	ldr	w10, [sp, #48]
   2bf44:	ldur	x23, [x29, #-72]
   2bf48:	cmp	w13, w10
   2bf4c:	ldr	x10, [sp, #80]
   2bf50:	str	w13, [x10]
   2bf54:	b.hi	2be4c <ZSTD_endStream@@Base+0x1def8>  // b.pmore
   2bf58:	sub	x10, x29, #0x40
   2bf5c:	mov	w9, wzr
   2bf60:	str	x10, [sp, #80]
   2bf64:	b	2be5c <ZSTD_endStream@@Base+0x1df08>
   2bf68:	ldr	w10, [sp, #48]
   2bf6c:	ldur	x23, [x29, #-72]
   2bf70:	cmp	w13, w10
   2bf74:	ldr	x10, [sp, #72]
   2bf78:	str	w13, [x10]
   2bf7c:	b.ls	2bf90 <ZSTD_endStream@@Base+0x1e03c>  // b.plast
   2bf80:	str	x9, [sp, #72]
   2bf84:	mov	x22, x8
   2bf88:	mov	x8, x21
   2bf8c:	b	2be54 <ZSTD_endStream@@Base+0x1df00>
   2bf90:	sub	x10, x29, #0x40
   2bf94:	mov	w9, wzr
   2bf98:	str	x10, [sp, #72]
   2bf9c:	mov	x22, x8
   2bfa0:	mov	x8, x21
   2bfa4:	b	2be5c <ZSTD_endStream@@Base+0x1df08>
   2bfa8:	ldur	x25, [x29, #-152]
   2bfac:	ldur	x23, [x29, #-72]
   2bfb0:	ldur	x12, [x29, #-96]
   2bfb4:	mov	x20, x8
   2bfb8:	mov	x8, x21
   2bfbc:	b	2be5c <ZSTD_endStream@@Base+0x1df08>
   2bfc0:	ldr	x8, [sp, #72]
   2bfc4:	mov	w24, w28
   2bfc8:	str	wzr, [x8]
   2bfcc:	ldr	x8, [sp, #80]
   2bfd0:	str	wzr, [x8]
   2bfd4:	ldr	w8, [sp, #136]
   2bfd8:	sub	w8, w8, #0x8
   2bfdc:	str	w8, [x23, #36]
   2bfe0:	ldur	w22, [x29, #-84]
   2bfe4:	mov	w20, #0x1c                  	// #28
   2bfe8:	cbz	w24, 2c598 <ZSTD_endStream@@Base+0x1e644>
   2bfec:	ldur	x9, [x29, #-168]
   2bff0:	sub	w8, w24, #0x1
   2bff4:	ldur	w12, [x29, #-100]
   2bff8:	add	x9, x9, w8, uxtw #3
   2bffc:	ldr	w11, [x9, #4]
   2c000:	ldr	w9, [sp, #132]
   2c004:	cmp	w11, w9
   2c008:	b.hi	2c058 <ZSTD_endStream@@Base+0x1e104>  // b.pmore
   2c00c:	add	w9, w11, w12
   2c010:	cmp	w9, #0x1, lsl #12
   2c014:	b.cs	2c058 <ZSTD_endStream@@Base+0x1e104>  // b.hs, b.nlast
   2c018:	ldur	w9, [x29, #-184]
   2c01c:	mov	w8, wzr
   2c020:	cbz	w8, 2c0e4 <ZSTD_endStream@@Base+0x1e190>
   2c024:	stur	w9, [x29, #-184]
   2c028:	cmp	w8, #0x13
   2c02c:	b.hi	29f98 <ZSTD_endStream@@Base+0x1c044>  // b.pmore
   2c030:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   2c034:	add	x11, x11, #0xabc
   2c038:	adr	x9, 29f98 <ZSTD_endStream@@Base+0x1c044>
   2c03c:	ldrh	w10, [x11, x8, lsl #1]
   2c040:	add	x9, x9, x10, lsl #2
   2c044:	br	x9
   2c048:	add	w12, w12, #0x1
   2c04c:	cmp	w12, w22
   2c050:	b.ls	2afb8 <ZSTD_endStream@@Base+0x1d064>  // b.plast
   2c054:	b	2c5ac <ZSTD_endStream@@Base+0x1e658>
   2c058:	ldr	x9, [sp, #104]
   2c05c:	ldur	x10, [x29, #-168]
   2c060:	lsl	x8, x8, #3
   2c064:	ldr	w9, [x9]
   2c068:	ldr	w8, [x10, x8]
   2c06c:	mov	w10, w11
   2c070:	str	w8, [sp, #172]
   2c074:	cbz	w9, 2c080 <ZSTD_endStream@@Base+0x1e12c>
   2c078:	mov	w8, wzr
   2c07c:	b	2c08c <ZSTD_endStream@@Base+0x1e138>
   2c080:	ldur	x8, [x29, #-112]
   2c084:	madd	x8, x8, x20, x26
   2c088:	ldr	w8, [x8, #12]
   2c08c:	sub	w19, w12, w8
   2c090:	ldr	w8, [sp, #168]
   2c094:	ldur	x9, [x29, #-24]
   2c098:	mov	w28, w10
   2c09c:	ldur	w21, [x29, #-124]
   2c0a0:	stur	w8, [x29, #-64]
   2c0a4:	ldr	w8, [sp, #172]
   2c0a8:	sub	x0, x29, #0x40
   2c0ac:	stur	w21, [x29, #-52]
   2c0b0:	stp	w8, w10, [x29, #-60]
   2c0b4:	ldur	w8, [x29, #-16]
   2c0b8:	ldr	x10, [sp, #40]
   2c0bc:	str	w8, [x10, #8]
   2c0c0:	str	x9, [x10]
   2c0c4:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2c0c8:	cmp	w19, #0x1, lsl #12
   2c0cc:	add	w22, w0, w19
   2c0d0:	csel	w12, wzr, w19, hi  // hi = pmore
   2c0d4:	mov	w9, w28
   2c0d8:	mov	w8, #0x7                   	// #7
   2c0dc:	str	w21, [sp, #164]
   2c0e0:	cbnz	w8, 2c024 <ZSTD_endStream@@Base+0x1e0d0>
   2c0e4:	str	w9, [sp, #152]
   2c0e8:	ldr	w8, [sp, #96]
   2c0ec:	ldr	w9, [sp, #88]
   2c0f0:	mov	x21, xzr
   2c0f4:	stur	w12, [x29, #-100]
   2c0f8:	add	w8, w9, w8
   2c0fc:	stur	w8, [x29, #-84]
   2c100:	umaddl	x8, w12, w20, x26
   2c104:	add	x8, x8, #0x10
   2c108:	str	x8, [sp, #216]
   2c10c:	mov	w8, w24
   2c110:	str	x8, [sp, #208]
   2c114:	b	2c134 <ZSTD_endStream@@Base+0x1e1e0>
   2c118:	mov	w20, #0x1c                  	// #28
   2c11c:	ldur	x21, [x29, #-184]
   2c120:	ldr	x8, [sp, #208]
   2c124:	ldur	x25, [x29, #-152]
   2c128:	add	x21, x21, #0x1
   2c12c:	cmp	x21, x8
   2c130:	b.cs	2c2cc <ZSTD_endStream@@Base+0x1e378>  // b.hs, b.nlast
   2c134:	ldur	x20, [x29, #-168]
   2c138:	ldr	x0, [sp, #216]
   2c13c:	ldur	w2, [x29, #-208]
   2c140:	add	x19, x20, x21, lsl #3
   2c144:	ldr	w1, [x19]
   2c148:	stur	w1, [x29, #-96]
   2c14c:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   2c150:	stp	x1, x0, [x29, #-120]
   2c154:	ldr	w27, [x19, #4]
   2c158:	ldr	w23, [sp, #204]
   2c15c:	cbz	x21, 2c170 <ZSTD_endStream@@Base+0x1e21c>
   2c160:	sub	w8, w21, #0x1
   2c164:	add	x8, x20, w8, uxtw #3
   2c168:	ldr	w8, [x8, #4]
   2c16c:	add	w23, w8, #0x1
   2c170:	cmp	w27, w23
   2c174:	mov	w19, #0x40000000            	// #1073741824
   2c178:	stur	x21, [x29, #-184]
   2c17c:	b.cc	2c118 <ZSTD_endStream@@Base+0x1e1c4>  // b.lo, b.ul, b.last
   2c180:	ldur	w8, [x29, #-96]
   2c184:	add	w0, w8, #0x1
   2c188:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   2c18c:	lsl	w8, w0, #8
   2c190:	add	w8, w8, #0x1, lsl #12
   2c194:	stur	w8, [x29, #-144]
   2c198:	ldur	w8, [x29, #-100]
   2c19c:	mov	w21, w0
   2c1a0:	mov	w20, #0x1c                  	// #28
   2c1a4:	add	w8, w27, w8
   2c1a8:	b	2c1e0 <ZSTD_endStream@@Base+0x1e28c>
   2c1ac:	ldur	w10, [x29, #-124]
   2c1b0:	umaddl	x9, w24, w20, x26
   2c1b4:	stp	w27, w10, [x9, #8]
   2c1b8:	ldur	w10, [x29, #-96]
   2c1bc:	stp	w8, w10, [x9]
   2c1c0:	ldur	x8, [x29, #-112]
   2c1c4:	str	x8, [x9, #16]
   2c1c8:	ldur	x8, [x29, #-120]
   2c1cc:	str	w8, [x9, #24]
   2c1d0:	sub	w27, w27, #0x1
   2c1d4:	cmp	w27, w23
   2c1d8:	sub	w8, w25, #0x1
   2c1dc:	b.cc	2c11c <ZSTD_endStream@@Base+0x1e1c8>  // b.lo, b.ul, b.last
   2c1e0:	mov	w28, w22
   2c1e4:	ldur	x22, [x29, #-72]
   2c1e8:	mov	w25, w8
   2c1ec:	ldur	w8, [x29, #-100]
   2c1f0:	sub	w26, w27, #0x3
   2c1f4:	ldr	w9, [x22, #152]
   2c1f8:	add	w24, w27, w8
   2c1fc:	cmp	w9, #0x1
   2c200:	b.ne	2c218 <ZSTD_endStream@@Base+0x1e2c4>  // b.any
   2c204:	mov	w0, w26
   2c208:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2c20c:	ldur	w8, [x29, #-144]
   2c210:	add	w8, w8, w0
   2c214:	b	2c278 <ZSTD_endStream@@Base+0x1e324>
   2c218:	ldr	x8, [x22, #96]
   2c21c:	ldr	w20, [x22, #148]
   2c220:	ldr	w0, [x8, x21, lsl #2]
   2c224:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2c228:	mov	w19, w0
   2c22c:	mov	w0, w26
   2c230:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   2c234:	ldr	x9, [x22, #88]
   2c238:	mov	w8, w0
   2c23c:	lsl	x8, x8, #2
   2c240:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   2c244:	add	x10, x10, #0xca8
   2c248:	ldr	w0, [x9, x8]
   2c24c:	ldr	w26, [x10, x8]
   2c250:	ldr	w22, [x22, #144]
   2c254:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2c258:	sub	w9, w20, w19
   2c25c:	add	w8, w26, w21
   2c260:	add	w9, w9, w22
   2c264:	add	w8, w9, w8, lsl #8
   2c268:	sub	w8, w8, w0
   2c26c:	mov	w19, #0x40000000            	// #1073741824
   2c270:	mov	w20, #0x1c                  	// #28
   2c274:	add	w8, w8, #0x33
   2c278:	ldur	w9, [x29, #-84]
   2c27c:	ldur	x26, [x29, #-80]
   2c280:	mov	w22, w28
   2c284:	cmp	w24, w28
   2c288:	add	w8, w9, w8
   2c28c:	b.hi	2c2a8 <ZSTD_endStream@@Base+0x1e354>  // b.pmore
   2c290:	umull	x9, w24, w20
   2c294:	ldr	w9, [x26, x9]
   2c298:	cmp	w8, w9
   2c29c:	b.ge	2c1d0 <ZSTD_endStream@@Base+0x1e27c>  // b.tcont
   2c2a0:	cmp	w24, w22
   2c2a4:	b.ls	2c1ac <ZSTD_endStream@@Base+0x1e258>  // b.plast
   2c2a8:	ldur	x10, [x29, #-136]
   2c2ac:	mov	w9, w22
   2c2b0:	umaddl	x10, w22, w20, x10
   2c2b4:	add	x9, x9, #0x1
   2c2b8:	cmp	x25, x9
   2c2bc:	str	w19, [x10], #28
   2c2c0:	b.ne	2c2b4 <ZSTD_endStream@@Base+0x1e360>  // b.any
   2c2c4:	mov	w22, w9
   2c2c8:	b	2c1ac <ZSTD_endStream@@Base+0x1e258>
   2c2cc:	ldr	w9, [sp, #152]
   2c2d0:	ldr	x27, [sp, #176]
   2c2d4:	ldur	x23, [x29, #-72]
   2c2d8:	mov	w8, wzr
   2c2dc:	stur	w9, [x29, #-184]
   2c2e0:	b	2b09c <ZSTD_endStream@@Base+0x1d148>
   2c2e4:	ldr	x27, [sp, #176]
   2c2e8:	ldur	x25, [x29, #-152]
   2c2ec:	ldur	x23, [x29, #-72]
   2c2f0:	ldur	w22, [x29, #-84]
   2c2f4:	cmp	x19, #0x2
   2c2f8:	b.hi	2c358 <ZSTD_endStream@@Base+0x1e404>  // b.pmore
   2c2fc:	sub	x1, x29, #0xc
   2c300:	mov	x0, x23
   2c304:	mov	x2, x12
   2c308:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   2c30c:	ldr	w8, [sp, #136]
   2c310:	ldr	w21, [sp, #32]
   2c314:	cmp	w0, w8
   2c318:	b.cc	2c360 <ZSTD_endStream@@Base+0x1e40c>  // b.lo, b.ul, b.last
   2c31c:	ldr	w8, [sp, #48]
   2c320:	sub	w20, w8, w0
   2c324:	lsr	w8, w20, #18
   2c328:	cbnz	w8, 2c368 <ZSTD_endStream@@Base+0x1e414>
   2c32c:	ldr	x8, [sp, #16]
   2c330:	ldur	x2, [x29, #-160]
   2c334:	add	x1, x8, w0, uxtw
   2c338:	ldur	x0, [x29, #-96]
   2c33c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2c340:	cmp	x0, #0x3
   2c344:	b.cs	2c374 <ZSTD_endStream@@Base+0x1e420>  // b.hs, b.nlast
   2c348:	ldur	x12, [x29, #-96]
   2c34c:	mov	w8, wzr
   2c350:	mov	x0, x19
   2c354:	b	2c3c4 <ZSTD_endStream@@Base+0x1e470>
   2c358:	ldr	w21, [sp, #32]
   2c35c:	b	2c3e0 <ZSTD_endStream@@Base+0x1e48c>
   2c360:	ldur	x12, [x29, #-96]
   2c364:	b	2c3d0 <ZSTD_endStream@@Base+0x1e47c>
   2c368:	ldur	x12, [x29, #-96]
   2c36c:	mov	w20, #0x1c                  	// #28
   2c370:	b	2c3d0 <ZSTD_endStream@@Base+0x1e47c>
   2c374:	ldr	w9, [sp, #208]
   2c378:	add	w8, w20, #0x2
   2c37c:	cmp	x0, w9, uxtw
   2c380:	ldur	x9, [x29, #-168]
   2c384:	stp	w8, w0, [x9]
   2c388:	ldur	x12, [x29, #-96]
   2c38c:	b.hi	2c3ac <ZSTD_endStream@@Base+0x1e458>  // b.pmore
   2c390:	ldur	x9, [x29, #-160]
   2c394:	add	x8, x12, x0
   2c398:	cmp	x8, x9
   2c39c:	b.eq	2c3ac <ZSTD_endStream@@Base+0x1e458>  // b.none
   2c3a0:	mov	w8, wzr
   2c3a4:	mov	w26, #0x1                   	// #1
   2c3a8:	b	2c3c4 <ZSTD_endStream@@Base+0x1e470>
   2c3ac:	ldr	w8, [sp, #48]
   2c3b0:	mov	w26, #0x1                   	// #1
   2c3b4:	mov	w24, #0x1                   	// #1
   2c3b8:	add	w9, w8, #0x1
   2c3bc:	mov	w8, #0x1                   	// #1
   2c3c0:	str	w9, [x23, #36]
   2c3c4:	mov	w20, #0x1c                  	// #28
   2c3c8:	mov	x19, x0
   2c3cc:	cbnz	w8, 2c3d8 <ZSTD_endStream@@Base+0x1e484>
   2c3d0:	mov	w8, wzr
   2c3d4:	mov	x0, x19
   2c3d8:	mov	x19, x0
   2c3dc:	cbnz	w8, 2c590 <ZSTD_endStream@@Base+0x1e63c>
   2c3e0:	ldr	w9, [sp, #48]
   2c3e4:	ldp	x10, x8, [sp]
   2c3e8:	mov	w24, w26
   2c3ec:	ldr	x26, [sp, #16]
   2c3f0:	mov	x22, xzr
   2c3f4:	mov	x23, xzr
   2c3f8:	add	w20, w9, #0x2
   2c3fc:	str	w9, [x8, x10, lsl #2]
   2c400:	b	2c420 <ZSTD_endStream@@Base+0x1e4cc>
   2c404:	ldur	x25, [x29, #-152]
   2c408:	ldur	x12, [x29, #-96]
   2c40c:	mov	x19, x8
   2c410:	mov	x8, x23
   2c414:	mov	w21, w15
   2c418:	mov	x23, x8
   2c41c:	tbz	w9, #0, 2c568 <ZSTD_endStream@@Base+0x1e614>
   2c420:	ldr	w9, [sp, #216]
   2c424:	subs	w9, w9, #0x1
   2c428:	b.cc	2c568 <ZSTD_endStream@@Base+0x1e614>  // b.lo, b.ul, b.last
   2c42c:	ldr	w8, [sp, #136]
   2c430:	cmp	w21, w8
   2c434:	b.cc	2c568 <ZSTD_endStream@@Base+0x1e614>  // b.lo, b.ul, b.last
   2c438:	ldur	x2, [x29, #-160]
   2c43c:	cmp	x23, x22
   2c440:	mov	w28, w21
   2c444:	add	x21, x26, w21, uxtw
   2c448:	csel	x25, x23, x22, cc  // cc = lo, ul, last
   2c44c:	add	x0, x12, x25
   2c450:	add	x1, x21, x25
   2c454:	str	w9, [sp, #216]
   2c458:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2c45c:	add	x8, x0, x25
   2c460:	cmp	x8, x19
   2c464:	b.ls	2c4c0 <ZSTD_endStream@@Base+0x1e56c>  // b.plast
   2c468:	ldr	w14, [sp, #152]
   2c46c:	ldur	x13, [x29, #-168]
   2c470:	add	w11, w28, w8
   2c474:	mov	w9, wzr
   2c478:	sub	w10, w14, w28
   2c47c:	cmp	x8, x10
   2c480:	mov	w15, w28
   2c484:	sub	w12, w20, w28
   2c488:	add	x13, x13, w24, uxtw #3
   2c48c:	csel	w14, w11, w14, hi  // hi = pmore
   2c490:	cmp	x8, #0x1, lsl #12
   2c494:	add	w24, w24, #0x1
   2c498:	stp	w12, w8, [x13]
   2c49c:	str	w14, [sp, #152]
   2c4a0:	b.hi	2c404 <ZSTD_endStream@@Base+0x1e4b0>  // b.pmore
   2c4a4:	ldur	x12, [x29, #-96]
   2c4a8:	ldp	x11, x25, [x29, #-160]
   2c4ac:	mov	x19, x8
   2c4b0:	add	x10, x12, x8
   2c4b4:	cmp	x10, x11
   2c4b8:	b.ne	2c4cc <ZSTD_endStream@@Base+0x1e578>  // b.any
   2c4bc:	b	2c40c <ZSTD_endStream@@Base+0x1e4b8>
   2c4c0:	ldur	x25, [x29, #-152]
   2c4c4:	ldur	x12, [x29, #-96]
   2c4c8:	mov	w15, w28
   2c4cc:	ldrb	w9, [x21, x8]
   2c4d0:	ldrb	w10, [x12, x8]
   2c4d4:	ldr	w11, [sp, #56]
   2c4d8:	mov	w21, w15
   2c4dc:	cmp	w9, w10
   2c4e0:	ldr	x9, [sp, #72]
   2c4e4:	and	w11, w15, w11
   2c4e8:	lsl	w11, w11, #1
   2c4ec:	add	x9, x9, w11, uxtw #2
   2c4f0:	b.cs	2c514 <ZSTD_endStream@@Base+0x1e5c0>  // b.hs, b.nlast
   2c4f4:	ldr	w10, [sp, #52]
   2c4f8:	cmp	w21, w10
   2c4fc:	ldr	x10, [sp, #112]
   2c500:	str	w21, [x10]
   2c504:	b.ls	2c540 <ZSTD_endStream@@Base+0x1e5ec>  // b.plast
   2c508:	add	x9, x9, #0x4
   2c50c:	str	x9, [sp, #112]
   2c510:	b	2c534 <ZSTD_endStream@@Base+0x1e5e0>
   2c514:	ldr	w10, [sp, #52]
   2c518:	cmp	w21, w10
   2c51c:	ldr	x10, [sp, #80]
   2c520:	str	w21, [x10]
   2c524:	b.ls	2c550 <ZSTD_endStream@@Base+0x1e5fc>  // b.plast
   2c528:	str	x9, [sp, #80]
   2c52c:	mov	x22, x8
   2c530:	mov	x8, x23
   2c534:	ldr	w21, [x9]
   2c538:	mov	w9, #0x1                   	// #1
   2c53c:	b	2c418 <ZSTD_endStream@@Base+0x1e4c4>
   2c540:	sub	x10, x29, #0x40
   2c544:	mov	w9, wzr
   2c548:	str	x10, [sp, #112]
   2c54c:	b	2c418 <ZSTD_endStream@@Base+0x1e4c4>
   2c550:	sub	x10, x29, #0x40
   2c554:	mov	w9, wzr
   2c558:	str	x10, [sp, #80]
   2c55c:	mov	x22, x8
   2c560:	mov	x8, x23
   2c564:	b	2c418 <ZSTD_endStream@@Base+0x1e4c4>
   2c568:	ldr	x8, [sp, #80]
   2c56c:	ldur	x23, [x29, #-72]
   2c570:	mov	w20, #0x1c                  	// #28
   2c574:	str	wzr, [x8]
   2c578:	ldr	x8, [sp, #112]
   2c57c:	str	wzr, [x8]
   2c580:	ldr	w8, [sp, #152]
   2c584:	sub	w8, w8, #0x8
   2c588:	str	w8, [x23, #36]
   2c58c:	ldur	w22, [x29, #-84]
   2c590:	ldur	x26, [x29, #-80]
   2c594:	cbnz	w24, 2bfec <ZSTD_endStream@@Base+0x1e098>
   2c598:	mov	w8, #0x13                  	// #19
   2c59c:	b	2b09c <ZSTD_endStream@@Base+0x1d148>
   2c5a0:	ldp	w21, w22, [sp, #168]
   2c5a4:	ldr	w24, [sp, #164]
   2c5a8:	b	2c630 <ZSTD_endStream@@Base+0x1e6dc>
   2c5ac:	stur	w22, [x29, #-84]
   2c5b0:	umaddl	x8, w22, w20, x26
   2c5b4:	ldp	w21, w22, [x8]
   2c5b8:	ldr	w9, [x8, #24]
   2c5bc:	ldr	x10, [x8, #16]
   2c5c0:	ldp	w28, w24, [x8, #8]
   2c5c4:	stp	w21, w22, [x29, #-64]
   2c5c8:	stur	w9, [x29, #-16]
   2c5cc:	stur	x10, [x29, #-24]
   2c5d0:	stp	w28, w24, [x29, #-56]
   2c5d4:	ldr	w9, [x8, #24]
   2c5d8:	ldr	x8, [x8, #16]
   2c5dc:	ldr	x19, [sp, #40]
   2c5e0:	sub	x0, x29, #0x40
   2c5e4:	str	w9, [x19, #8]
   2c5e8:	str	x8, [x19]
   2c5ec:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2c5f0:	ldur	w8, [x29, #-84]
   2c5f4:	stur	w28, [x29, #-184]
   2c5f8:	cmp	w8, w0
   2c5fc:	b.ls	2c62c <ZSTD_endStream@@Base+0x1e6d8>  // b.plast
   2c600:	ldur	w8, [x29, #-16]
   2c604:	ldur	x9, [x29, #-24]
   2c608:	sub	x0, x29, #0x40
   2c60c:	stp	w21, w22, [x29, #-64]
   2c610:	stp	w28, w24, [x29, #-56]
   2c614:	str	w8, [x19, #8]
   2c618:	str	x9, [x19]
   2c61c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2c620:	ldur	w8, [x29, #-84]
   2c624:	sub	w12, w8, w0
   2c628:	b	2c630 <ZSTD_endStream@@Base+0x1e6dc>
   2c62c:	mov	w12, wzr
   2c630:	add	w19, w12, #0x1
   2c634:	umaddl	x8, w19, w20, x26
   2c638:	stp	w21, w22, [sp, #168]
   2c63c:	stp	w21, w22, [x8]
   2c640:	ldur	w9, [x29, #-184]
   2c644:	mov	w20, w12
   2c648:	mov	w21, w12
   2c64c:	mov	w11, w12
   2c650:	stp	w9, w24, [x8, #8]
   2c654:	ldur	w9, [x29, #-16]
   2c658:	ldur	x10, [x29, #-24]
   2c65c:	str	w24, [sp, #164]
   2c660:	mov	w24, #0x1c                  	// #28
   2c664:	str	w9, [x8, #24]
   2c668:	str	x10, [x8, #16]
   2c66c:	stur	w12, [x29, #-100]
   2c670:	cbz	w12, 2c6bc <ZSTD_endStream@@Base+0x1e768>
   2c674:	umaddl	x22, w21, w24, x26
   2c678:	ldur	q0, [x22, #12]
   2c67c:	ldr	q1, [x22]
   2c680:	sub	x0, x29, #0x40
   2c684:	stur	q0, [x29, #-52]
   2c688:	stur	q1, [x29, #-64]
   2c68c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2c690:	ldur	q0, [x22, #12]
   2c694:	ldr	q1, [x22]
   2c698:	subs	w9, w21, w0
   2c69c:	umaddl	x8, w20, w24, x26
   2c6a0:	sub	w20, w20, #0x1
   2c6a4:	csel	w21, wzr, w9, cc  // cc = lo, ul, last
   2c6a8:	stur	q0, [x8, #12]
   2c6ac:	str	q1, [x8]
   2c6b0:	b.hi	2c674 <ZSTD_endStream@@Base+0x1e720>  // b.pmore
   2c6b4:	add	w28, w20, #0x1
   2c6b8:	b	2c6c0 <ZSTD_endStream@@Base+0x1e76c>
   2c6bc:	mov	w28, w19
   2c6c0:	ldur	x21, [x29, #-200]
   2c6c4:	ldur	x8, [x29, #-176]
   2c6c8:	cmp	w28, w19
   2c6cc:	mov	w20, #0x1c                  	// #28
   2c6d0:	b.ls	2c724 <ZSTD_endStream@@Base+0x1e7d0>  // b.plast
   2c6d4:	ldur	x0, [x29, #-192]
   2c6d8:	mov	w1, #0x2                   	// #2
   2c6dc:	mov	x19, x8
   2c6e0:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   2c6e4:	ldr	x8, [sp, #184]
   2c6e8:	mov	x2, x19
   2c6ec:	cmp	x2, x8
   2c6f0:	b.cc	29fac <ZSTD_endStream@@Base+0x1c058>  // b.lo, b.ul, b.last
   2c6f4:	b	2cb80 <ZSTD_endStream@@Base+0x1ec2c>
   2c6f8:	strh	w8, [x10, #6]
   2c6fc:	add	x8, x10, #0x8
   2c700:	str	x8, [x21, #8]
   2c704:	ldur	x25, [x29, #-152]
   2c708:	ldp	x26, x23, [x29, #-80]
   2c70c:	add	x27, x27, w9, uxtw
   2c710:	mov	x8, x27
   2c714:	mov	w20, #0x1c                  	// #28
   2c718:	add	w28, w28, #0x1
   2c71c:	cmp	w28, w19
   2c720:	b.hi	2c6d4 <ZSTD_endStream@@Base+0x1e780>  // b.pmore
   2c724:	umaddl	x8, w28, w20, x26
   2c728:	ldp	w26, w25, [x8, #8]
   2c72c:	cbz	w26, 2c754 <ZSTD_endStream@@Base+0x1e800>
   2c730:	ldr	w20, [x8, #4]
   2c734:	cmp	w20, #0x3
   2c738:	b.cc	2c764 <ZSTD_endStream@@Base+0x1e810>  // b.lo, b.ul, b.last
   2c73c:	ldur	x10, [x29, #-152]
   2c740:	ldp	w9, w8, [x10]
   2c744:	stp	w9, w8, [x10, #4]
   2c748:	ldur	x0, [x29, #-192]
   2c74c:	sub	w8, w20, #0x2
   2c750:	b	2c7bc <ZSTD_endStream@@Base+0x1e868>
   2c754:	add	x8, x27, x25
   2c758:	ldur	x25, [x29, #-152]
   2c75c:	ldur	x26, [x29, #-80]
   2c760:	b	2c718 <ZSTD_endStream@@Base+0x1e7c4>
   2c764:	ldur	x0, [x29, #-192]
   2c768:	cmp	w25, #0x0
   2c76c:	cinc	w9, w20, eq  // eq = none
   2c770:	cbz	w9, 2c7c0 <ZSTD_endStream@@Base+0x1e86c>
   2c774:	cmp	w9, #0x3
   2c778:	b.ne	2c794 <ZSTD_endStream@@Base+0x1e840>  // b.any
   2c77c:	ldur	x8, [x29, #-152]
   2c780:	ldr	w8, [x8]
   2c784:	sub	w8, w8, #0x1
   2c788:	cmp	w9, #0x2
   2c78c:	b.cs	2c7a4 <ZSTD_endStream@@Base+0x1e850>  // b.hs, b.nlast
   2c790:	b	2c7b0 <ZSTD_endStream@@Base+0x1e85c>
   2c794:	ldur	x8, [x29, #-152]
   2c798:	ldr	w8, [x8, w9, uxtw #2]
   2c79c:	cmp	w9, #0x2
   2c7a0:	b.cc	2c7b0 <ZSTD_endStream@@Base+0x1e85c>  // b.lo, b.ul, b.last
   2c7a4:	ldur	x10, [x29, #-152]
   2c7a8:	ldr	w9, [x10, #4]
   2c7ac:	str	w9, [x10, #8]
   2c7b0:	ldur	x10, [x29, #-152]
   2c7b4:	ldr	w9, [x10]
   2c7b8:	str	w9, [x10, #4]
   2c7bc:	str	w8, [x10]
   2c7c0:	mov	w1, w25
   2c7c4:	mov	x2, x27
   2c7c8:	mov	w3, w20
   2c7cc:	mov	w4, w26
   2c7d0:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   2c7d4:	ldr	x3, [sp, #192]
   2c7d8:	ldr	x0, [x21, #24]
   2c7dc:	add	x2, x27, x25
   2c7e0:	mov	x23, x27
   2c7e4:	mov	x1, x27
   2c7e8:	cmp	x2, x3
   2c7ec:	b.ls	2c7f8 <ZSTD_endStream@@Base+0x1e8a4>  // b.plast
   2c7f0:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   2c7f4:	b	2c864 <ZSTD_endStream@@Base+0x1e910>
   2c7f8:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2c7fc:	cmp	w25, #0x11
   2c800:	b.cc	2c864 <ZSTD_endStream@@Base+0x1e910>  // b.lo, b.ul, b.last
   2c804:	ldur	x8, [x29, #-200]
   2c808:	add	x1, x23, #0x10
   2c80c:	mov	x21, x23
   2c810:	ldr	x22, [x8, #24]
   2c814:	add	x0, x22, #0x10
   2c818:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2c81c:	add	x0, x22, #0x20
   2c820:	add	x1, x23, #0x20
   2c824:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2c828:	cmp	w25, #0x31
   2c82c:	b.cc	2c864 <ZSTD_endStream@@Base+0x1e910>  // b.lo, b.ul, b.last
   2c830:	add	x21, x22, x25
   2c834:	add	x24, x22, #0x30
   2c838:	add	x27, x23, #0x40
   2c83c:	sub	x1, x27, #0x10
   2c840:	mov	x0, x24
   2c844:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2c848:	add	x0, x24, #0x10
   2c84c:	mov	x1, x27
   2c850:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2c854:	add	x24, x24, #0x20
   2c858:	cmp	x24, x21
   2c85c:	add	x27, x27, #0x20
   2c860:	b.cc	2c83c <ZSTD_endStream@@Base+0x1e8e8>  // b.lo, b.ul, b.last
   2c864:	ldur	x21, [x29, #-200]
   2c868:	sub	w8, w26, #0x3
   2c86c:	cmp	w25, #0x10, lsl #12
   2c870:	ldr	x9, [x21, #24]
   2c874:	add	x9, x9, x25
   2c878:	str	x9, [x21, #24]
   2c87c:	b.cc	2c894 <ZSTD_endStream@@Base+0x1e940>  // b.lo, b.ul, b.last
   2c880:	ldp	x10, x9, [x21]
   2c884:	sub	x9, x9, x10
   2c888:	lsr	x9, x9, #3
   2c88c:	mov	w10, #0x1                   	// #1
   2c890:	stp	w10, w9, [x21, #72]
   2c894:	ldr	x10, [x21, #8]
   2c898:	add	w9, w26, w25
   2c89c:	add	w11, w20, #0x1
   2c8a0:	cmp	w8, #0x10, lsl #12
   2c8a4:	mov	x27, x23
   2c8a8:	mov	w13, #0x2                   	// #2
   2c8ac:	strh	w25, [x10, #4]
   2c8b0:	str	w11, [x10]
   2c8b4:	b.cc	2c6f8 <ZSTD_endStream@@Base+0x1e7a4>  // b.lo, b.ul, b.last
   2c8b8:	ldp	x12, x11, [x21]
   2c8bc:	sub	x11, x11, x12
   2c8c0:	lsr	x11, x11, #3
   2c8c4:	stp	w13, w11, [x21, #72]
   2c8c8:	b	2c6f8 <ZSTD_endStream@@Base+0x1e7a4>
   2c8cc:	cmp	x27, #0x2
   2c8d0:	b.hi	2c930 <ZSTD_endStream@@Base+0x1e9dc>  // b.pmore
   2c8d4:	ldur	x23, [x29, #-72]
   2c8d8:	sub	x1, x29, #0xc
   2c8dc:	mov	x0, x23
   2c8e0:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   2c8e4:	ldur	w8, [x29, #-144]
   2c8e8:	cmp	w0, w8
   2c8ec:	b.cc	2c940 <ZSTD_endStream@@Base+0x1e9ec>  // b.lo, b.ul, b.last
   2c8f0:	ldr	w21, [sp, #104]
   2c8f4:	sub	w20, w21, w0
   2c8f8:	lsr	w8, w20, #18
   2c8fc:	cbnz	w8, 2c954 <ZSTD_endStream@@Base+0x1ea00>
   2c900:	ldur	x8, [x29, #-208]
   2c904:	ldur	x2, [x29, #-160]
   2c908:	add	x1, x8, w0, uxtw
   2c90c:	ldur	x0, [x29, #-176]
   2c910:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2c914:	cmp	x0, #0x3
   2c918:	b.cs	2c964 <ZSTD_endStream@@Base+0x1ea10>  // b.hs, b.nlast
   2c91c:	ldur	x26, [x29, #-80]
   2c920:	ldur	x2, [x29, #-176]
   2c924:	mov	w8, wzr
   2c928:	mov	x0, x27
   2c92c:	b	2c9b0 <ZSTD_endStream@@Base+0x1ea5c>
   2c930:	ldur	x26, [x29, #-80]
   2c934:	ldr	w20, [sp, #96]
   2c938:	ldr	w21, [sp, #104]
   2c93c:	b	2c9cc <ZSTD_endStream@@Base+0x1ea78>
   2c940:	ldur	x26, [x29, #-80]
   2c944:	ldur	x2, [x29, #-176]
   2c948:	ldr	w20, [sp, #96]
   2c94c:	ldr	w21, [sp, #104]
   2c950:	b	2c9bc <ZSTD_endStream@@Base+0x1ea68>
   2c954:	ldur	x26, [x29, #-80]
   2c958:	ldur	x2, [x29, #-176]
   2c95c:	ldr	w20, [sp, #96]
   2c960:	b	2c9bc <ZSTD_endStream@@Base+0x1ea68>
   2c964:	ldur	w9, [x29, #-112]
   2c968:	add	w8, w20, #0x2
   2c96c:	cmp	x0, w9, uxtw
   2c970:	ldp	x2, x9, [x29, #-176]
   2c974:	stp	w8, w0, [x9]
   2c978:	b.hi	2c998 <ZSTD_endStream@@Base+0x1ea44>  // b.pmore
   2c97c:	ldur	x9, [x29, #-160]
   2c980:	add	x8, x2, x0
   2c984:	cmp	x8, x9
   2c988:	b.eq	2c998 <ZSTD_endStream@@Base+0x1ea44>  // b.none
   2c98c:	mov	w8, wzr
   2c990:	mov	w25, #0x1                   	// #1
   2c994:	b	2c9ac <ZSTD_endStream@@Base+0x1ea58>
   2c998:	add	w9, w21, #0x1
   2c99c:	mov	w25, #0x1                   	// #1
   2c9a0:	mov	w8, #0x1                   	// #1
   2c9a4:	mov	w19, #0x1                   	// #1
   2c9a8:	str	w9, [x23, #36]
   2c9ac:	ldur	x26, [x29, #-80]
   2c9b0:	ldr	w20, [sp, #96]
   2c9b4:	mov	x27, x0
   2c9b8:	cbnz	w8, 2c9c4 <ZSTD_endStream@@Base+0x1ea70>
   2c9bc:	mov	w8, wzr
   2c9c0:	mov	x0, x27
   2c9c4:	mov	x27, x0
   2c9c8:	cbnz	w8, 2cb6c <ZSTD_endStream@@Base+0x1ec18>
   2c9cc:	ldp	x9, x8, [sp, #80]
   2c9d0:	mov	w19, w25
   2c9d4:	ldur	x25, [x29, #-168]
   2c9d8:	mov	x22, xzr
   2c9dc:	mov	x23, xzr
   2c9e0:	str	w21, [x8, x9, lsl #2]
   2c9e4:	add	w8, w21, #0x2
   2c9e8:	stur	w8, [x29, #-112]
   2c9ec:	b	2ca08 <ZSTD_endStream@@Base+0x1eab4>
   2c9f0:	ldur	x2, [x29, #-176]
   2c9f4:	mov	x27, x8
   2c9f8:	mov	x8, x23
   2c9fc:	mov	w20, w15
   2ca00:	mov	x23, x8
   2ca04:	tbz	w9, #0, 2cb4c <ZSTD_endStream@@Base+0x1ebf8>
   2ca08:	ldur	w8, [x29, #-96]
   2ca0c:	subs	w8, w8, #0x1
   2ca10:	stur	w8, [x29, #-96]
   2ca14:	b.cc	2cb4c <ZSTD_endStream@@Base+0x1ebf8>  // b.lo, b.ul, b.last
   2ca18:	ldur	w8, [x29, #-144]
   2ca1c:	cmp	w20, w8
   2ca20:	b.cc	2cb4c <ZSTD_endStream@@Base+0x1ebf8>  // b.lo, b.ul, b.last
   2ca24:	cmp	x23, x22
   2ca28:	ldur	x8, [x29, #-208]
   2ca2c:	csel	x24, x23, x22, cc  // cc = lo, ul, last
   2ca30:	add	x0, x2, x24
   2ca34:	ldur	x2, [x29, #-160]
   2ca38:	add	x21, x8, w20, uxtw
   2ca3c:	add	x1, x21, x24
   2ca40:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2ca44:	add	x8, x0, x24
   2ca48:	cmp	x8, x27
   2ca4c:	b.ls	2caa8 <ZSTD_endStream@@Base+0x1eb54>  // b.plast
   2ca50:	ldur	w14, [x29, #-120]
   2ca54:	ldur	w12, [x29, #-112]
   2ca58:	add	w11, w20, w8
   2ca5c:	mov	w9, wzr
   2ca60:	sub	w10, w14, w20
   2ca64:	cmp	x8, x10
   2ca68:	mov	w15, w20
   2ca6c:	sub	w12, w12, w20
   2ca70:	add	x13, x25, w19, uxtw #3
   2ca74:	csel	w14, w11, w14, hi  // hi = pmore
   2ca78:	cmp	x8, #0x1, lsl #12
   2ca7c:	add	w19, w19, #0x1
   2ca80:	stp	w12, w8, [x13]
   2ca84:	stur	w14, [x29, #-120]
   2ca88:	b.hi	2c9f0 <ZSTD_endStream@@Base+0x1ea9c>  // b.pmore
   2ca8c:	ldur	x2, [x29, #-176]
   2ca90:	ldur	x11, [x29, #-160]
   2ca94:	mov	x27, x8
   2ca98:	add	x10, x2, x8
   2ca9c:	cmp	x10, x11
   2caa0:	b.ne	2cab0 <ZSTD_endStream@@Base+0x1eb5c>  // b.any
   2caa4:	b	2c9f4 <ZSTD_endStream@@Base+0x1eaa0>
   2caa8:	ldur	x2, [x29, #-176]
   2caac:	mov	w15, w20
   2cab0:	ldrb	w9, [x21, x8]
   2cab4:	ldrb	w10, [x2, x8]
   2cab8:	ldr	w11, [sp, #120]
   2cabc:	mov	w20, w15
   2cac0:	cmp	w9, w10
   2cac4:	ldr	x9, [sp, #136]
   2cac8:	and	w11, w15, w11
   2cacc:	lsl	w11, w11, #1
   2cad0:	add	x9, x9, w11, uxtw #2
   2cad4:	b.cs	2caf8 <ZSTD_endStream@@Base+0x1eba4>  // b.hs, b.nlast
   2cad8:	ldr	w10, [sp, #112]
   2cadc:	cmp	w20, w10
   2cae0:	ldr	x10, [sp, #208]
   2cae4:	str	w20, [x10]
   2cae8:	b.ls	2cb24 <ZSTD_endStream@@Base+0x1ebd0>  // b.plast
   2caec:	add	x9, x9, #0x4
   2caf0:	str	x9, [sp, #208]
   2caf4:	b	2cb18 <ZSTD_endStream@@Base+0x1ebc4>
   2caf8:	ldr	w10, [sp, #112]
   2cafc:	cmp	w20, w10
   2cb00:	ldr	x10, [sp, #152]
   2cb04:	str	w20, [x10]
   2cb08:	b.ls	2cb34 <ZSTD_endStream@@Base+0x1ebe0>  // b.plast
   2cb0c:	str	x9, [sp, #152]
   2cb10:	mov	x22, x8
   2cb14:	mov	x8, x23
   2cb18:	ldr	w20, [x9]
   2cb1c:	mov	w9, #0x1                   	// #1
   2cb20:	b	2ca00 <ZSTD_endStream@@Base+0x1eaac>
   2cb24:	sub	x10, x29, #0x40
   2cb28:	mov	w9, wzr
   2cb2c:	str	x10, [sp, #208]
   2cb30:	b	2ca00 <ZSTD_endStream@@Base+0x1eaac>
   2cb34:	sub	x10, x29, #0x40
   2cb38:	mov	w9, wzr
   2cb3c:	str	x10, [sp, #152]
   2cb40:	mov	x22, x8
   2cb44:	mov	x8, x23
   2cb48:	b	2ca00 <ZSTD_endStream@@Base+0x1eaac>
   2cb4c:	ldr	x8, [sp, #152]
   2cb50:	ldur	x23, [x29, #-72]
   2cb54:	str	wzr, [x8]
   2cb58:	ldr	x8, [sp, #208]
   2cb5c:	str	wzr, [x8]
   2cb60:	ldur	w8, [x29, #-120]
   2cb64:	sub	w8, w8, #0x8
   2cb68:	str	w8, [x23, #36]
   2cb6c:	ldr	x27, [sp, #176]
   2cb70:	ldur	x25, [x29, #-152]
   2cb74:	mov	w20, #0x1c                  	// #28
   2cb78:	cbnz	w19, 29fe0 <ZSTD_endStream@@Base+0x1c08c>
   2cb7c:	b	2af90 <ZSTD_endStream@@Base+0x1d03c>
   2cb80:	ldur	x8, [x29, #-160]
   2cb84:	sub	x0, x8, x27
   2cb88:	add	sp, sp, #0x1b0
   2cb8c:	ldp	x20, x19, [sp, #80]
   2cb90:	ldp	x22, x21, [sp, #64]
   2cb94:	ldp	x24, x23, [sp, #48]
   2cb98:	ldp	x26, x25, [sp, #32]
   2cb9c:	ldp	x28, x27, [sp, #16]
   2cba0:	ldp	x29, x30, [sp], #96
   2cba4:	ret
   2cba8:	stp	x29, x30, [sp, #-96]!
   2cbac:	stp	x28, x27, [sp, #16]
   2cbb0:	stp	x26, x25, [sp, #32]
   2cbb4:	stp	x24, x23, [sp, #48]
   2cbb8:	stp	x22, x21, [sp, #64]
   2cbbc:	stp	x20, x19, [sp, #80]
   2cbc0:	mov	x29, sp
   2cbc4:	sub	sp, sp, #0x1b0
   2cbc8:	ldr	w8, [x0, #124]
   2cbcc:	mov	x27, x3
   2cbd0:	mov	x22, x0
   2cbd4:	mov	x20, x1
   2cbd8:	stur	x2, [x29, #-152]
   2cbdc:	cbnz	w8, 2cc2c <ZSTD_endStream@@Base+0x1ecd8>
   2cbe0:	ldp	x9, x8, [x20]
   2cbe4:	cmp	x8, x9
   2cbe8:	b.ne	2cc2c <ZSTD_endStream@@Base+0x1ecd8>  // b.any
   2cbec:	ldp	w8, w9, [x22, #24]
   2cbf0:	cmp	w8, w9
   2cbf4:	b.ne	2cc2c <ZSTD_endStream@@Base+0x1ecd8>  // b.any
   2cbf8:	cmp	x4, #0x401
   2cbfc:	b.cc	2cc2c <ZSTD_endStream@@Base+0x1ecd8>  // b.lo, b.ul, b.last
   2cc00:	ldr	w9, [x22, #8]
   2cc04:	sub	w9, w27, w9
   2cc08:	cmp	w8, w9
   2cc0c:	b.ne	2cc2c <ZSTD_endStream@@Base+0x1ecd8>  // b.any
   2cc10:	ldur	x2, [x29, #-152]
   2cc14:	mov	x0, x22
   2cc18:	mov	x1, x20
   2cc1c:	mov	x3, x27
   2cc20:	mov	x19, x4
   2cc24:	bl	2f898 <ZSTD_endStream@@Base+0x21944>
   2cc28:	mov	x4, x19
   2cc2c:	ldr	w12, [x22, #36]
   2cc30:	stur	x20, [x29, #-208]
   2cc34:	ldp	w11, w10, [x22, #200]
   2cc38:	ldr	x8, [x22, #8]
   2cc3c:	ldr	w9, [x22, #24]
   2cc40:	stur	w12, [x29, #-12]
   2cc44:	ldp	x20, x28, [x22, #104]
   2cc48:	add	x24, x22, #0x48
   2cc4c:	mov	w13, #0xfff                 	// #4095
   2cc50:	cmp	w10, #0xfff
   2cc54:	add	x21, x27, x4
   2cc58:	add	x19, x8, x9
   2cc5c:	csel	w26, w10, w13, cc  // cc = lo, ul, last
   2cc60:	cmp	w11, #0x3
   2cc64:	mov	w8, #0x3                   	// #3
   2cc68:	mov	w3, #0x2                   	// #2
   2cc6c:	mov	x0, x24
   2cc70:	mov	x1, x27
   2cc74:	mov	x2, x4
   2cc78:	sub	x25, x21, #0x8
   2cc7c:	cinc	w23, w8, ne  // ne = any
   2cc80:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   2cc84:	cmp	x19, x27
   2cc88:	cinc	x2, x27, eq  // eq = none
   2cc8c:	cmp	x2, x25
   2cc90:	stur	x21, [x29, #-168]
   2cc94:	b.cs	2f870 <ZSTD_endStream@@Base+0x2191c>  // b.hs, b.nlast
   2cc98:	mov	x8, x25
   2cc9c:	sub	w8, w23, #0x1
   2cca0:	str	x8, [sp, #80]
   2cca4:	sub	x8, x29, #0x40
   2cca8:	add	x8, x8, #0x10
   2ccac:	str	x8, [sp, #48]
   2ccb0:	sub	x9, x21, #0x20
   2ccb4:	str	x9, [sp, #184]
   2ccb8:	mov	w9, w23
   2ccbc:	str	w26, [sp, #136]
   2ccc0:	str	w23, [sp, #196]
   2ccc4:	str	x9, [sp, #32]
   2ccc8:	add	x21, x28, #0x10
   2cccc:	add	x9, x28, #0x1c
   2ccd0:	mov	w23, #0x1c                  	// #28
   2ccd4:	mov	x26, x28
   2ccd8:	stur	x20, [x29, #-160]
   2ccdc:	str	x25, [sp, #168]
   2cce0:	stur	x24, [x29, #-200]
   2cce4:	stur	x9, [x29, #-136]
   2cce8:	stp	x28, x22, [x29, #-80]
   2ccec:	stur	x21, [x29, #-176]
   2ccf0:	b	2cd08 <ZSTD_endStream@@Base+0x1edb4>
   2ccf4:	ldr	x8, [sp, #168]
   2ccf8:	ldur	x2, [x29, #-184]
   2ccfc:	stur	w12, [x29, #-100]
   2cd00:	cmp	x2, x8
   2cd04:	b.cs	2f870 <ZSTD_endStream@@Base+0x2191c>  // b.hs, b.nlast
   2cd08:	ldr	x19, [x22, #8]
   2cd0c:	ldr	w20, [x22, #36]
   2cd10:	subs	w8, w2, w27
   2cd14:	stur	w8, [x29, #-88]
   2cd18:	cset	w8, eq  // eq = none
   2cd1c:	stur	w8, [x29, #-124]
   2cd20:	add	x8, x19, x20
   2cd24:	cmp	x8, x2
   2cd28:	str	x27, [sp, #176]
   2cd2c:	stur	x2, [x29, #-184]
   2cd30:	b.ls	2cf3c <ZSTD_endStream@@Base+0x1efe8>  // b.plast
   2cd34:	mov	w19, wzr
   2cd38:	cbz	w19, 2dcdc <ZSTD_endStream@@Base+0x1fd88>
   2cd3c:	mov	x8, xzr
   2cd40:	ldur	x9, [x29, #-152]
   2cd44:	ldr	w9, [x9, x8]
   2cd48:	str	w9, [x21, x8]
   2cd4c:	add	x8, x8, #0x4
   2cd50:	cmp	x8, #0xc
   2cd54:	b.ne	2cd40 <ZSTD_endStream@@Base+0x1edec>  // b.any
   2cd58:	ldur	w1, [x29, #-88]
   2cd5c:	mov	w3, #0x2                   	// #2
   2cd60:	mov	x0, x27
   2cd64:	stp	wzr, w1, [x26, #8]
   2cd68:	ldur	x2, [x29, #-200]
   2cd6c:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   2cd70:	ldur	x10, [x29, #-160]
   2cd74:	sub	w9, w19, #0x1
   2cd78:	str	w0, [x26]
   2cd7c:	mov	w23, w0
   2cd80:	add	x9, x10, w9, uxtw #3
   2cd84:	ldr	w20, [x9, #4]
   2cd88:	ldr	w10, [sp, #136]
   2cd8c:	mov	w8, wzr
   2cd90:	mov	w0, wzr
   2cd94:	cmp	w20, w10
   2cd98:	b.ls	2cde0 <ZSTD_endStream@@Base+0x1ee8c>  // b.plast
   2cd9c:	ldr	w11, [x9]
   2cda0:	ldr	w10, [sp, #160]
   2cda4:	ldur	w24, [x29, #-88]
   2cda8:	ldur	w8, [x29, #-16]
   2cdac:	ldur	x9, [x29, #-24]
   2cdb0:	stp	w10, w11, [x29, #-64]
   2cdb4:	ldr	x10, [sp, #48]
   2cdb8:	sub	x0, x29, #0x40
   2cdbc:	stp	w20, w24, [x29, #-56]
   2cdc0:	str	w11, [sp, #164]
   2cdc4:	str	w8, [x10, #8]
   2cdc8:	str	x9, [x10]
   2cdcc:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2cdd0:	mov	w8, #0x7                   	// #7
   2cdd4:	stur	wzr, [x29, #-100]
   2cdd8:	stur	w20, [x29, #-192]
   2cddc:	str	w24, [sp, #156]
   2cde0:	cbnz	w8, 2d198 <ZSTD_endStream@@Base+0x1f244>
   2cde4:	ldur	x1, [x29, #-200]
   2cde8:	mov	w2, #0x2                   	// #2
   2cdec:	mov	w0, wzr
   2cdf0:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2cdf4:	ldur	x8, [x29, #-136]
   2cdf8:	ldr	x9, [sp, #32]
   2cdfc:	mov	w21, #0x1                   	// #1
   2ce00:	mov	w10, #0x40000000            	// #1073741824
   2ce04:	add	x21, x21, #0x1
   2ce08:	cmp	x21, x9
   2ce0c:	str	w10, [x8], #28
   2ce10:	b.cc	2ce04 <ZSTD_endStream@@Base+0x1eeb0>  // b.lo, b.ul, b.last
   2ce14:	add	w8, w0, w23
   2ce18:	mov	x20, xzr
   2ce1c:	stur	w8, [x29, #-96]
   2ce20:	mov	w8, w19
   2ce24:	stur	x8, [x29, #-144]
   2ce28:	b	2ce40 <ZSTD_endStream@@Base+0x1eeec>
   2ce2c:	ldur	x20, [x29, #-120]
   2ce30:	ldur	x8, [x29, #-144]
   2ce34:	add	x20, x20, #0x1
   2ce38:	cmp	x20, x8
   2ce3c:	b.cs	2d188 <ZSTD_endStream@@Base+0x1f234>  // b.hs, b.nlast
   2ce40:	ldp	x8, x0, [x29, #-160]
   2ce44:	ldur	w2, [x29, #-124]
   2ce48:	add	x8, x8, x20, lsl #3
   2ce4c:	ldp	w23, w19, [x8]
   2ce50:	mov	w1, w23
   2ce54:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   2ce58:	cmp	w21, w19
   2ce5c:	stur	x20, [x29, #-120]
   2ce60:	b.hi	2ce2c <ZSTD_endStream@@Base+0x1eed8>  // b.pmore
   2ce64:	mov	x24, x0
   2ce68:	add	w0, w23, #0x1
   2ce6c:	mov	x27, x1
   2ce70:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   2ce74:	lsl	w8, w0, #8
   2ce78:	mov	w28, w0
   2ce7c:	add	w8, w8, #0x1, lsl #12
   2ce80:	stur	w8, [x29, #-112]
   2ce84:	b	2cf18 <ZSTD_endStream@@Base+0x1efc4>
   2ce88:	ldr	x8, [x22, #96]
   2ce8c:	ldr	w20, [x22, #148]
   2ce90:	ldr	w0, [x8, x28, lsl #2]
   2ce94:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2ce98:	mov	w26, w0
   2ce9c:	mov	w0, w25
   2cea0:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   2cea4:	mov	w8, w0
   2cea8:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   2ceac:	ldr	x9, [x22, #88]
   2ceb0:	lsl	x8, x8, #2
   2ceb4:	add	x10, x10, #0xca8
   2ceb8:	ldr	w25, [x10, x8]
   2cebc:	ldur	x10, [x29, #-72]
   2cec0:	ldr	w0, [x9, x8]
   2cec4:	ldr	w22, [x10, #144]
   2cec8:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2cecc:	sub	w9, w20, w26
   2ced0:	add	w8, w25, w28
   2ced4:	add	w9, w9, w22
   2ced8:	ldp	x26, x22, [x29, #-80]
   2cedc:	add	w8, w9, w8, lsl #8
   2cee0:	sub	w8, w8, w0
   2cee4:	add	w8, w8, #0x33
   2cee8:	ldur	w9, [x29, #-96]
   2ceec:	ldur	w10, [x29, #-88]
   2cef0:	add	w8, w9, w8
   2cef4:	mov	w9, #0x1c                  	// #28
   2cef8:	umaddl	x9, w21, w9, x26
   2cefc:	stp	w21, w10, [x9, #8]
   2cf00:	add	w21, w21, #0x1
   2cf04:	cmp	w21, w19
   2cf08:	stp	w8, w23, [x9]
   2cf0c:	str	x24, [x9, #16]
   2cf10:	str	w27, [x9, #24]
   2cf14:	b.hi	2ce2c <ZSTD_endStream@@Base+0x1eed8>  // b.pmore
   2cf18:	ldr	w8, [x22, #152]
   2cf1c:	sub	w25, w21, #0x3
   2cf20:	cmp	w8, #0x1
   2cf24:	b.ne	2ce88 <ZSTD_endStream@@Base+0x1ef34>  // b.any
   2cf28:	mov	w0, w25
   2cf2c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2cf30:	ldur	w8, [x29, #-112]
   2cf34:	add	w8, w8, w0
   2cf38:	b	2cee8 <ZSTD_endStream@@Base+0x1ef94>
   2cf3c:	ldr	w23, [x22, #200]
   2cf40:	ldur	x24, [x29, #-168]
   2cf44:	sub	w21, w2, w19
   2cf48:	cmp	w20, w21
   2cf4c:	b.cs	2cf74 <ZSTD_endStream@@Base+0x1f020>  // b.hs, b.nlast
   2cf50:	add	x1, x19, w20, uxtw
   2cf54:	mov	x0, x22
   2cf58:	mov	x2, x24
   2cf5c:	mov	w3, w23
   2cf60:	mov	w4, wzr
   2cf64:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   2cf68:	add	w20, w0, w20
   2cf6c:	cmp	w20, w21
   2cf70:	b.cc	2cf50 <ZSTD_endStream@@Base+0x1effc>  // b.lo, b.ul, b.last
   2cf74:	sub	w8, w23, #0x6
   2cf78:	cmp	w8, #0x2
   2cf7c:	str	w21, [x22, #36]
   2cf80:	b.cc	2d1a0 <ZSTD_endStream@@Base+0x1f24c>  // b.lo, b.ul, b.last
   2cf84:	ldur	x0, [x29, #-184]
   2cf88:	cmp	w23, #0x5
   2cf8c:	mov	w9, #0xfff                 	// #4095
   2cf90:	b.eq	2d3b8 <ZSTD_endStream@@Base+0x1f464>  // b.none
   2cf94:	cmp	w23, #0x3
   2cf98:	b.ne	2d5c4 <ZSTD_endStream@@Base+0x1f670>  // b.any
   2cf9c:	ldr	w8, [x22, #204]
   2cfa0:	ldr	x10, [x22, #8]
   2cfa4:	ldr	w1, [x22, #192]
   2cfa8:	ldr	x19, [x22, #48]
   2cfac:	cmp	w8, #0xfff
   2cfb0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2cfb4:	mov	w2, #0x3                   	// #3
   2cfb8:	stur	w8, [x29, #-112]
   2cfbc:	str	x10, [sp, #104]
   2cfc0:	sub	w21, w0, w10
   2cfc4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2cfc8:	ldp	w2, w8, [x22, #184]
   2cfcc:	stp	x0, x19, [sp, #88]
   2cfd0:	ldr	w9, [x19, x0, lsl #2]
   2cfd4:	ldr	x23, [x22, #64]
   2cfd8:	sub	w8, w8, #0x1
   2cfdc:	ldr	w20, [x22, #24]
   2cfe0:	str	w9, [sp, #116]
   2cfe4:	mov	w9, #0xffffffff            	// #-1
   2cfe8:	lsl	w19, w9, w8
   2cfec:	mvn	w8, w19
   2cff0:	str	w8, [sp, #140]
   2cff4:	subs	w8, w21, w8
   2cff8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2cffc:	mov	x0, x22
   2d000:	mov	w1, w21
   2d004:	str	w8, [sp, #128]
   2d008:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2d00c:	cmp	w0, #0x0
   2d010:	add	w10, w21, #0x9
   2d014:	stur	w10, [x29, #-120]
   2d018:	csinc	w10, w0, wzr, ne  // ne = any
   2d01c:	stur	w10, [x29, #-144]
   2d020:	ldur	w10, [x29, #-88]
   2d024:	mov	x9, x22
   2d028:	bic	w8, w21, w19
   2d02c:	ldr	w9, [x9, #196]
   2d030:	lsl	w8, w8, #1
   2d034:	ldur	x2, [x29, #-184]
   2d038:	cmp	w10, #0x0
   2d03c:	add	x10, x23, w8, uxtw #2
   2d040:	mov	w8, #0x3                   	// #3
   2d044:	cinc	x28, x8, eq  // eq = none
   2d048:	add	x8, x10, #0x4
   2d04c:	ldr	x27, [sp, #80]
   2d050:	stp	x8, x10, [sp, #200]
   2d054:	mov	w8, #0x1                   	// #1
   2d058:	lsl	w8, w8, w9
   2d05c:	mov	w22, wzr
   2d060:	mov	w25, wzr
   2d064:	str	w21, [sp, #120]
   2d068:	sub	w21, w21, w20
   2d06c:	cset	w26, eq  // eq = none
   2d070:	stur	w8, [x29, #-96]
   2d074:	add	x8, x2, #0x3
   2d078:	str	x23, [sp, #144]
   2d07c:	str	x8, [sp, #216]
   2d080:	cmp	x26, #0x3
   2d084:	b.ne	2d098 <ZSTD_endStream@@Base+0x1f144>  // b.any
   2d088:	ldur	x8, [x29, #-152]
   2d08c:	ldr	w8, [x8]
   2d090:	sub	w19, w8, #0x1
   2d094:	b	2d0a0 <ZSTD_endStream@@Base+0x1f14c>
   2d098:	ldur	x8, [x29, #-152]
   2d09c:	ldr	w19, [x8, x26, lsl #2]
   2d0a0:	sub	w8, w19, #0x1
   2d0a4:	cmp	w8, w21
   2d0a8:	b.cs	2d0f4 <ZSTD_endStream@@Base+0x1f1a0>  // b.hs, b.nlast
   2d0ac:	mov	w1, #0x3                   	// #3
   2d0b0:	mov	x0, x2
   2d0b4:	mov	x23, x2
   2d0b8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d0bc:	mov	w19, w19
   2d0c0:	mov	w24, w0
   2d0c4:	sub	x0, x23, x19
   2d0c8:	mov	w1, #0x3                   	// #3
   2d0cc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d0d0:	cmp	w24, w0
   2d0d4:	b.ne	2d0fc <ZSTD_endStream@@Base+0x1f1a8>  // b.any
   2d0d8:	ldr	x0, [sp, #216]
   2d0dc:	ldur	x2, [x29, #-168]
   2d0e0:	neg	x8, x19
   2d0e4:	add	x1, x0, x8
   2d0e8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2d0ec:	add	w8, w0, #0x3
   2d0f0:	b	2d100 <ZSTD_endStream@@Base+0x1f1ac>
   2d0f4:	mov	w8, wzr
   2d0f8:	b	2d104 <ZSTD_endStream@@Base+0x1f1b0>
   2d0fc:	mov	w8, wzr
   2d100:	ldur	x2, [x29, #-184]
   2d104:	mov	w9, w8
   2d108:	cmp	x27, x9
   2d10c:	b.cs	2d14c <ZSTD_endStream@@Base+0x1f1f8>  // b.hs, b.nlast
   2d110:	ldur	x10, [x29, #-160]
   2d114:	ldur	w11, [x29, #-112]
   2d118:	add	x10, x10, w25, uxtw #3
   2d11c:	add	w25, w25, #0x1
   2d120:	cmp	w8, w11
   2d124:	stp	w22, w8, [x10]
   2d128:	mov	w8, #0x1                   	// #1
   2d12c:	b.hi	2d178 <ZSTD_endStream@@Base+0x1f224>  // b.pmore
   2d130:	ldur	x11, [x29, #-168]
   2d134:	add	x10, x2, x9
   2d138:	mov	x27, x9
   2d13c:	mov	w19, w25
   2d140:	cmp	x10, x11
   2d144:	b.ne	2d150 <ZSTD_endStream@@Base+0x1f1fc>  // b.any
   2d148:	b	2d15c <ZSTD_endStream@@Base+0x1f208>
   2d14c:	mov	x9, x27
   2d150:	mov	w8, wzr
   2d154:	mov	x27, x9
   2d158:	mov	w19, w20
   2d15c:	cbnz	w8, 2d96c <ZSTD_endStream@@Base+0x1fa18>
   2d160:	add	x26, x26, #0x1
   2d164:	cmp	x26, x28
   2d168:	add	w22, w22, #0x1
   2d16c:	mov	w20, w19
   2d170:	b.cc	2d080 <ZSTD_endStream@@Base+0x1f12c>  // b.lo, b.ul, b.last
   2d174:	b	2d968 <ZSTD_endStream@@Base+0x1fa14>
   2d178:	mov	x27, x9
   2d17c:	mov	w19, w25
   2d180:	cbz	w8, 2d160 <ZSTD_endStream@@Base+0x1f20c>
   2d184:	b	2d96c <ZSTD_endStream@@Base+0x1fa18>
   2d188:	sub	w0, w21, #0x1
   2d18c:	ldr	x27, [sp, #176]
   2d190:	ldur	x21, [x29, #-176]
   2d194:	mov	w8, wzr
   2d198:	mov	w23, #0x1c                  	// #28
   2d19c:	b	2dcec <ZSTD_endStream@@Base+0x1fd98>
   2d1a0:	ldr	w8, [x22, #204]
   2d1a4:	ldur	x21, [x29, #-184]
   2d1a8:	ldr	x10, [x22, #8]
   2d1ac:	ldr	w1, [x22, #192]
   2d1b0:	ldr	x19, [x22, #48]
   2d1b4:	cmp	w8, #0xfff
   2d1b8:	mov	w9, #0xfff                 	// #4095
   2d1bc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2d1c0:	mov	w2, #0x6                   	// #6
   2d1c4:	mov	x0, x21
   2d1c8:	stur	w8, [x29, #-112]
   2d1cc:	str	x10, [sp, #216]
   2d1d0:	sub	w25, w21, w10
   2d1d4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2d1d8:	ldp	w2, w8, [x22, #184]
   2d1dc:	mov	w9, #0xffffffff            	// #-1
   2d1e0:	str	x19, [sp, #104]
   2d1e4:	ldr	w24, [x19, x0, lsl #2]
   2d1e8:	sub	w8, w8, #0x1
   2d1ec:	lsl	w19, w9, w8
   2d1f0:	ldr	x23, [x22, #64]
   2d1f4:	ldr	w20, [x22, #24]
   2d1f8:	mvn	w8, w19
   2d1fc:	str	w8, [sp, #140]
   2d200:	subs	w8, w25, w8
   2d204:	str	x0, [sp, #88]
   2d208:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2d20c:	mov	x0, x22
   2d210:	mov	w1, w25
   2d214:	str	w8, [sp, #128]
   2d218:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2d21c:	cmp	w0, #0x0
   2d220:	add	w10, w25, #0x9
   2d224:	stur	w10, [x29, #-120]
   2d228:	csinc	w10, w0, wzr, ne  // ne = any
   2d22c:	stur	w10, [x29, #-144]
   2d230:	ldur	w10, [x29, #-88]
   2d234:	mov	x9, x22
   2d238:	bic	w8, w25, w19
   2d23c:	ldr	w9, [x9, #196]
   2d240:	lsl	w8, w8, #1
   2d244:	cmp	w10, #0x0
   2d248:	add	x10, x23, w8, uxtw #2
   2d24c:	mov	w8, #0x3                   	// #3
   2d250:	str	x23, [sp, #144]
   2d254:	cinc	x13, x8, eq  // eq = none
   2d258:	add	x8, x10, #0x4
   2d25c:	ldr	x23, [sp, #80]
   2d260:	stp	x8, x10, [sp, #200]
   2d264:	mov	w8, #0x1                   	// #1
   2d268:	lsl	w8, w8, w9
   2d26c:	mov	x2, x21
   2d270:	mov	w22, wzr
   2d274:	mov	w26, wzr
   2d278:	str	w25, [sp, #96]
   2d27c:	sub	w28, w25, w20
   2d280:	cset	w25, eq  // eq = none
   2d284:	str	w8, [sp, #116]
   2d288:	add	x8, x21, #0x4
   2d28c:	str	x8, [sp, #120]
   2d290:	cmp	x25, #0x3
   2d294:	b.ne	2d2a8 <ZSTD_endStream@@Base+0x1f354>  // b.any
   2d298:	ldur	x8, [x29, #-152]
   2d29c:	ldr	w8, [x8]
   2d2a0:	sub	w19, w8, #0x1
   2d2a4:	b	2d2b0 <ZSTD_endStream@@Base+0x1f35c>
   2d2a8:	ldur	x8, [x29, #-152]
   2d2ac:	ldr	w19, [x8, x25, lsl #2]
   2d2b0:	sub	w8, w19, #0x1
   2d2b4:	cmp	w8, w28
   2d2b8:	b.cs	2d314 <ZSTD_endStream@@Base+0x1f3c0>  // b.hs, b.nlast
   2d2bc:	mov	w1, #0x4                   	// #4
   2d2c0:	mov	x0, x2
   2d2c4:	stur	x23, [x29, #-96]
   2d2c8:	mov	x23, x13
   2d2cc:	mov	w21, w24
   2d2d0:	mov	w27, w26
   2d2d4:	mov	x26, x2
   2d2d8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d2dc:	mov	w19, w19
   2d2e0:	mov	w24, w0
   2d2e4:	sub	x0, x26, x19
   2d2e8:	mov	w1, #0x4                   	// #4
   2d2ec:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d2f0:	cmp	w24, w0
   2d2f4:	b.ne	2d31c <ZSTD_endStream@@Base+0x1f3c8>  // b.any
   2d2f8:	ldr	x0, [sp, #120]
   2d2fc:	ldur	x2, [x29, #-168]
   2d300:	neg	x8, x19
   2d304:	add	x1, x0, x8
   2d308:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2d30c:	add	w8, w0, #0x4
   2d310:	b	2d320 <ZSTD_endStream@@Base+0x1f3cc>
   2d314:	mov	w8, wzr
   2d318:	b	2d334 <ZSTD_endStream@@Base+0x1f3e0>
   2d31c:	mov	w8, wzr
   2d320:	ldur	x2, [x29, #-184]
   2d324:	mov	x13, x23
   2d328:	ldur	x23, [x29, #-96]
   2d32c:	mov	w26, w27
   2d330:	mov	w24, w21
   2d334:	mov	w9, w8
   2d338:	cmp	x23, x9
   2d33c:	b.cs	2d37c <ZSTD_endStream@@Base+0x1f428>  // b.hs, b.nlast
   2d340:	ldur	x10, [x29, #-160]
   2d344:	ldur	w11, [x29, #-112]
   2d348:	add	x10, x10, w26, uxtw #3
   2d34c:	add	w26, w26, #0x1
   2d350:	cmp	w8, w11
   2d354:	stp	w22, w8, [x10]
   2d358:	mov	w8, #0x1                   	// #1
   2d35c:	b.hi	2d3a8 <ZSTD_endStream@@Base+0x1f454>  // b.pmore
   2d360:	ldur	x11, [x29, #-168]
   2d364:	add	x10, x2, x9
   2d368:	mov	x23, x9
   2d36c:	mov	w19, w26
   2d370:	cmp	x10, x11
   2d374:	b.ne	2d380 <ZSTD_endStream@@Base+0x1f42c>  // b.any
   2d378:	b	2d38c <ZSTD_endStream@@Base+0x1f438>
   2d37c:	mov	x9, x23
   2d380:	mov	w8, wzr
   2d384:	mov	x23, x9
   2d388:	mov	w19, w20
   2d38c:	cbnz	w8, 2d7d4 <ZSTD_endStream@@Base+0x1f880>
   2d390:	add	x25, x25, #0x1
   2d394:	cmp	x25, x13
   2d398:	add	w22, w22, #0x1
   2d39c:	mov	w20, w19
   2d3a0:	b.cc	2d290 <ZSTD_endStream@@Base+0x1f33c>  // b.lo, b.ul, b.last
   2d3a4:	b	2d7d0 <ZSTD_endStream@@Base+0x1f87c>
   2d3a8:	mov	x23, x9
   2d3ac:	mov	w19, w26
   2d3b0:	cbz	w8, 2d390 <ZSTD_endStream@@Base+0x1f43c>
   2d3b4:	b	2d7d4 <ZSTD_endStream@@Base+0x1f880>
   2d3b8:	ldr	w8, [x22, #204]
   2d3bc:	ldr	x10, [x22, #8]
   2d3c0:	ldr	w1, [x22, #192]
   2d3c4:	ldr	x19, [x22, #48]
   2d3c8:	cmp	w8, #0xfff
   2d3cc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2d3d0:	mov	w2, #0x5                   	// #5
   2d3d4:	stur	w8, [x29, #-112]
   2d3d8:	str	x10, [sp, #216]
   2d3dc:	sub	w21, w0, w10
   2d3e0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2d3e4:	ldp	w2, w8, [x22, #184]
   2d3e8:	mov	w9, #0xffffffff            	// #-1
   2d3ec:	str	x19, [sp, #104]
   2d3f0:	ldr	w24, [x19, x0, lsl #2]
   2d3f4:	sub	w8, w8, #0x1
   2d3f8:	lsl	w19, w9, w8
   2d3fc:	ldr	x23, [x22, #64]
   2d400:	ldr	w20, [x22, #24]
   2d404:	mvn	w8, w19
   2d408:	str	w8, [sp, #140]
   2d40c:	subs	w8, w21, w8
   2d410:	str	x0, [sp, #88]
   2d414:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2d418:	mov	x0, x22
   2d41c:	mov	w1, w21
   2d420:	str	w8, [sp, #128]
   2d424:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2d428:	cmp	w0, #0x0
   2d42c:	add	w10, w21, #0x9
   2d430:	stur	w10, [x29, #-120]
   2d434:	csinc	w10, w0, wzr, ne  // ne = any
   2d438:	stur	w10, [x29, #-144]
   2d43c:	ldur	w10, [x29, #-88]
   2d440:	mov	x9, x22
   2d444:	bic	w8, w21, w19
   2d448:	ldr	w9, [x9, #196]
   2d44c:	lsl	w8, w8, #1
   2d450:	ldur	x2, [x29, #-184]
   2d454:	cmp	w10, #0x0
   2d458:	add	x10, x23, w8, uxtw #2
   2d45c:	mov	w8, #0x3                   	// #3
   2d460:	cinc	x13, x8, eq  // eq = none
   2d464:	add	x8, x10, #0x4
   2d468:	ldr	x28, [sp, #80]
   2d46c:	stp	x8, x10, [sp, #200]
   2d470:	mov	w8, #0x1                   	// #1
   2d474:	lsl	w8, w8, w9
   2d478:	mov	w22, wzr
   2d47c:	mov	w26, wzr
   2d480:	sub	w12, w21, w20
   2d484:	cset	w25, eq  // eq = none
   2d488:	str	w8, [sp, #116]
   2d48c:	add	x8, x2, #0x4
   2d490:	str	w21, [sp, #96]
   2d494:	str	x23, [sp, #144]
   2d498:	str	x8, [sp, #120]
   2d49c:	stur	x13, [x29, #-96]
   2d4a0:	cmp	x25, #0x3
   2d4a4:	b.ne	2d4b8 <ZSTD_endStream@@Base+0x1f564>  // b.any
   2d4a8:	ldur	x8, [x29, #-152]
   2d4ac:	ldr	w8, [x8]
   2d4b0:	sub	w19, w8, #0x1
   2d4b4:	b	2d4c0 <ZSTD_endStream@@Base+0x1f56c>
   2d4b8:	ldur	x8, [x29, #-152]
   2d4bc:	ldr	w19, [x8, x25, lsl #2]
   2d4c0:	sub	w8, w19, #0x1
   2d4c4:	cmp	w8, w12
   2d4c8:	b.cs	2d520 <ZSTD_endStream@@Base+0x1f5cc>  // b.hs, b.nlast
   2d4cc:	mov	w1, #0x4                   	// #4
   2d4d0:	mov	x0, x2
   2d4d4:	mov	w23, w12
   2d4d8:	mov	w21, w24
   2d4dc:	mov	w27, w26
   2d4e0:	mov	x26, x2
   2d4e4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d4e8:	mov	w19, w19
   2d4ec:	mov	w24, w0
   2d4f0:	sub	x0, x26, x19
   2d4f4:	mov	w1, #0x4                   	// #4
   2d4f8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d4fc:	cmp	w24, w0
   2d500:	b.ne	2d528 <ZSTD_endStream@@Base+0x1f5d4>  // b.any
   2d504:	ldr	x0, [sp, #120]
   2d508:	ldur	x2, [x29, #-168]
   2d50c:	neg	x8, x19
   2d510:	add	x1, x0, x8
   2d514:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2d518:	add	w8, w0, #0x4
   2d51c:	b	2d52c <ZSTD_endStream@@Base+0x1f5d8>
   2d520:	mov	w8, wzr
   2d524:	b	2d540 <ZSTD_endStream@@Base+0x1f5ec>
   2d528:	mov	w8, wzr
   2d52c:	ldur	x2, [x29, #-184]
   2d530:	ldur	x13, [x29, #-96]
   2d534:	mov	w26, w27
   2d538:	mov	w24, w21
   2d53c:	mov	w12, w23
   2d540:	mov	w9, w8
   2d544:	cmp	x28, x9
   2d548:	b.cs	2d588 <ZSTD_endStream@@Base+0x1f634>  // b.hs, b.nlast
   2d54c:	ldur	x10, [x29, #-160]
   2d550:	ldur	w11, [x29, #-112]
   2d554:	add	x10, x10, w26, uxtw #3
   2d558:	add	w26, w26, #0x1
   2d55c:	cmp	w8, w11
   2d560:	stp	w22, w8, [x10]
   2d564:	mov	w8, #0x1                   	// #1
   2d568:	b.hi	2d5b4 <ZSTD_endStream@@Base+0x1f660>  // b.pmore
   2d56c:	ldur	x11, [x29, #-168]
   2d570:	add	x10, x2, x9
   2d574:	mov	x28, x9
   2d578:	mov	w19, w26
   2d57c:	cmp	x10, x11
   2d580:	b.ne	2d58c <ZSTD_endStream@@Base+0x1f638>  // b.any
   2d584:	b	2d598 <ZSTD_endStream@@Base+0x1f644>
   2d588:	mov	x9, x28
   2d58c:	mov	w8, wzr
   2d590:	mov	x28, x9
   2d594:	mov	w19, w20
   2d598:	cbnz	w8, 2d97c <ZSTD_endStream@@Base+0x1fa28>
   2d59c:	add	x25, x25, #0x1
   2d5a0:	cmp	x25, x13
   2d5a4:	add	w22, w22, #0x1
   2d5a8:	mov	w20, w19
   2d5ac:	b.cc	2d4a0 <ZSTD_endStream@@Base+0x1f54c>  // b.lo, b.ul, b.last
   2d5b0:	b	2d978 <ZSTD_endStream@@Base+0x1fa24>
   2d5b4:	mov	x28, x9
   2d5b8:	mov	w19, w26
   2d5bc:	cbz	w8, 2d59c <ZSTD_endStream@@Base+0x1f648>
   2d5c0:	b	2d97c <ZSTD_endStream@@Base+0x1fa28>
   2d5c4:	ldr	w8, [x22, #204]
   2d5c8:	ldr	x10, [x22, #8]
   2d5cc:	ldr	w1, [x22, #192]
   2d5d0:	ldr	x19, [x22, #48]
   2d5d4:	cmp	w8, #0xfff
   2d5d8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2d5dc:	mov	w2, #0x4                   	// #4
   2d5e0:	stur	w8, [x29, #-112]
   2d5e4:	str	x10, [sp, #216]
   2d5e8:	sub	w21, w0, w10
   2d5ec:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2d5f0:	ldp	w2, w8, [x22, #184]
   2d5f4:	mov	w9, #0xffffffff            	// #-1
   2d5f8:	str	x19, [sp, #104]
   2d5fc:	ldr	w24, [x19, x0, lsl #2]
   2d600:	sub	w8, w8, #0x1
   2d604:	lsl	w19, w9, w8
   2d608:	ldr	x23, [x22, #64]
   2d60c:	ldr	w20, [x22, #24]
   2d610:	mvn	w8, w19
   2d614:	str	w8, [sp, #140]
   2d618:	subs	w8, w21, w8
   2d61c:	str	x0, [sp, #88]
   2d620:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2d624:	mov	x0, x22
   2d628:	mov	w1, w21
   2d62c:	str	w8, [sp, #128]
   2d630:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2d634:	cmp	w0, #0x0
   2d638:	add	w10, w21, #0x9
   2d63c:	stur	w10, [x29, #-120]
   2d640:	csinc	w10, w0, wzr, ne  // ne = any
   2d644:	stur	w10, [x29, #-144]
   2d648:	ldur	w10, [x29, #-88]
   2d64c:	mov	x9, x22
   2d650:	bic	w8, w21, w19
   2d654:	ldr	w9, [x9, #196]
   2d658:	lsl	w8, w8, #1
   2d65c:	ldur	x2, [x29, #-184]
   2d660:	cmp	w10, #0x0
   2d664:	add	x10, x23, w8, uxtw #2
   2d668:	mov	w8, #0x3                   	// #3
   2d66c:	str	x23, [sp, #144]
   2d670:	cinc	x28, x8, eq  // eq = none
   2d674:	add	x8, x10, #0x4
   2d678:	ldr	x23, [sp, #80]
   2d67c:	stp	x8, x10, [sp, #200]
   2d680:	mov	w8, #0x1                   	// #1
   2d684:	lsl	w8, w8, w9
   2d688:	mov	w22, wzr
   2d68c:	mov	w26, wzr
   2d690:	sub	w13, w21, w20
   2d694:	cset	w25, eq  // eq = none
   2d698:	str	w8, [sp, #116]
   2d69c:	add	x8, x2, #0x4
   2d6a0:	str	w21, [sp, #96]
   2d6a4:	str	x8, [sp, #120]
   2d6a8:	cmp	x25, #0x3
   2d6ac:	b.ne	2d6c0 <ZSTD_endStream@@Base+0x1f76c>  // b.any
   2d6b0:	ldur	x8, [x29, #-152]
   2d6b4:	ldr	w8, [x8]
   2d6b8:	sub	w19, w8, #0x1
   2d6bc:	b	2d6c8 <ZSTD_endStream@@Base+0x1f774>
   2d6c0:	ldur	x8, [x29, #-152]
   2d6c4:	ldr	w19, [x8, x25, lsl #2]
   2d6c8:	sub	w8, w19, #0x1
   2d6cc:	cmp	w8, w13
   2d6d0:	b.cs	2d72c <ZSTD_endStream@@Base+0x1f7d8>  // b.hs, b.nlast
   2d6d4:	mov	w1, #0x4                   	// #4
   2d6d8:	mov	x0, x2
   2d6dc:	stur	x23, [x29, #-96]
   2d6e0:	mov	w23, w13
   2d6e4:	mov	w21, w24
   2d6e8:	mov	w27, w26
   2d6ec:	mov	x26, x2
   2d6f0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d6f4:	mov	w19, w19
   2d6f8:	mov	w24, w0
   2d6fc:	sub	x0, x26, x19
   2d700:	mov	w1, #0x4                   	// #4
   2d704:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2d708:	cmp	w24, w0
   2d70c:	b.ne	2d734 <ZSTD_endStream@@Base+0x1f7e0>  // b.any
   2d710:	ldr	x0, [sp, #120]
   2d714:	ldur	x2, [x29, #-168]
   2d718:	neg	x8, x19
   2d71c:	add	x1, x0, x8
   2d720:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2d724:	add	w8, w0, #0x4
   2d728:	b	2d738 <ZSTD_endStream@@Base+0x1f7e4>
   2d72c:	mov	w8, wzr
   2d730:	b	2d74c <ZSTD_endStream@@Base+0x1f7f8>
   2d734:	mov	w8, wzr
   2d738:	ldur	x2, [x29, #-184]
   2d73c:	mov	w13, w23
   2d740:	ldur	x23, [x29, #-96]
   2d744:	mov	w26, w27
   2d748:	mov	w24, w21
   2d74c:	mov	w9, w8
   2d750:	cmp	x23, x9
   2d754:	b.cs	2d794 <ZSTD_endStream@@Base+0x1f840>  // b.hs, b.nlast
   2d758:	ldur	x10, [x29, #-160]
   2d75c:	ldur	w11, [x29, #-112]
   2d760:	add	x10, x10, w26, uxtw #3
   2d764:	add	w26, w26, #0x1
   2d768:	cmp	w8, w11
   2d76c:	stp	w22, w8, [x10]
   2d770:	mov	w8, #0x1                   	// #1
   2d774:	b.hi	2d7c0 <ZSTD_endStream@@Base+0x1f86c>  // b.pmore
   2d778:	ldur	x11, [x29, #-168]
   2d77c:	add	x10, x2, x9
   2d780:	mov	x23, x9
   2d784:	mov	w19, w26
   2d788:	cmp	x10, x11
   2d78c:	b.ne	2d798 <ZSTD_endStream@@Base+0x1f844>  // b.any
   2d790:	b	2d7a4 <ZSTD_endStream@@Base+0x1f850>
   2d794:	mov	x9, x23
   2d798:	mov	w8, wzr
   2d79c:	mov	x23, x9
   2d7a0:	mov	w19, w20
   2d7a4:	cbnz	w8, 2db18 <ZSTD_endStream@@Base+0x1fbc4>
   2d7a8:	add	x25, x25, #0x1
   2d7ac:	cmp	x25, x28
   2d7b0:	add	w22, w22, #0x1
   2d7b4:	mov	w20, w19
   2d7b8:	b.cc	2d6a8 <ZSTD_endStream@@Base+0x1f754>  // b.lo, b.ul, b.last
   2d7bc:	b	2db14 <ZSTD_endStream@@Base+0x1fbc0>
   2d7c0:	mov	x23, x9
   2d7c4:	mov	w19, w26
   2d7c8:	cbz	w8, 2d7a8 <ZSTD_endStream@@Base+0x1f854>
   2d7cc:	b	2db18 <ZSTD_endStream@@Base+0x1fbc4>
   2d7d0:	mov	w8, wzr
   2d7d4:	ldr	x27, [sp, #176]
   2d7d8:	ldur	x21, [x29, #-176]
   2d7dc:	cbnz	w8, 2dcd0 <ZSTD_endStream@@Base+0x1fd7c>
   2d7e0:	ldr	x8, [sp, #104]
   2d7e4:	ldr	w9, [sp, #96]
   2d7e8:	ldr	x10, [sp, #88]
   2d7ec:	ldr	w25, [sp, #116]
   2d7f0:	mov	x22, xzr
   2d7f4:	mov	x20, xzr
   2d7f8:	str	w9, [x8, x10, lsl #2]
   2d7fc:	add	w8, w9, #0x2
   2d800:	stur	w8, [x29, #-96]
   2d804:	b	2d820 <ZSTD_endStream@@Base+0x1f8cc>
   2d808:	add	x9, x9, #0x4
   2d80c:	str	x9, [sp, #208]
   2d810:	ldr	w24, [x9]
   2d814:	mov	w9, #0x1                   	// #1
   2d818:	mov	x20, x8
   2d81c:	tbz	w9, #0, 2dcac <ZSTD_endStream@@Base+0x1fd58>
   2d820:	subs	w25, w25, #0x1
   2d824:	b.cc	2dcac <ZSTD_endStream@@Base+0x1fd58>  // b.lo, b.ul, b.last
   2d828:	ldur	w8, [x29, #-144]
   2d82c:	cmp	w24, w8
   2d830:	b.cc	2dcac <ZSTD_endStream@@Base+0x1fd58>  // b.lo, b.ul, b.last
   2d834:	ldr	x8, [sp, #216]
   2d838:	cmp	x20, x22
   2d83c:	mov	w19, w24
   2d840:	add	x21, x8, w24, uxtw
   2d844:	csel	x24, x20, x22, cc  // cc = lo, ul, last
   2d848:	add	x0, x2, x24
   2d84c:	ldur	x2, [x29, #-168]
   2d850:	add	x1, x21, x24
   2d854:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2d858:	add	x8, x0, x24
   2d85c:	cmp	x8, x23
   2d860:	b.ls	2d8c4 <ZSTD_endStream@@Base+0x1f970>  // b.plast
   2d864:	ldur	w14, [x29, #-120]
   2d868:	ldur	w12, [x29, #-96]
   2d86c:	ldur	x13, [x29, #-160]
   2d870:	add	w11, w19, w8
   2d874:	sub	w10, w14, w19
   2d878:	cmp	x8, x10
   2d87c:	mov	w9, wzr
   2d880:	sub	w12, w12, w19
   2d884:	add	x13, x13, w26, uxtw #3
   2d888:	csel	w14, w11, w14, hi  // hi = pmore
   2d88c:	cmp	x8, #0x1, lsl #12
   2d890:	add	w26, w26, #0x1
   2d894:	mov	w24, w19
   2d898:	stp	w12, w8, [x13]
   2d89c:	stur	w14, [x29, #-120]
   2d8a0:	b.hi	2d958 <ZSTD_endStream@@Base+0x1fa04>  // b.pmore
   2d8a4:	ldur	x2, [x29, #-184]
   2d8a8:	ldur	x11, [x29, #-168]
   2d8ac:	mov	x23, x8
   2d8b0:	add	x10, x2, x8
   2d8b4:	cmp	x10, x11
   2d8b8:	b.ne	2d8cc <ZSTD_endStream@@Base+0x1f978>  // b.any
   2d8bc:	ldur	x21, [x29, #-176]
   2d8c0:	b	2d95c <ZSTD_endStream@@Base+0x1fa08>
   2d8c4:	ldur	x2, [x29, #-184]
   2d8c8:	mov	w24, w19
   2d8cc:	ldrb	w9, [x21, x8]
   2d8d0:	ldrb	w10, [x2, x8]
   2d8d4:	ldr	w11, [sp, #140]
   2d8d8:	cmp	w9, w10
   2d8dc:	ldr	x9, [sp, #144]
   2d8e0:	and	w11, w24, w11
   2d8e4:	lsl	w11, w11, #1
   2d8e8:	add	x9, x9, w11, uxtw #2
   2d8ec:	b.cs	2d918 <ZSTD_endStream@@Base+0x1f9c4>  // b.hs, b.nlast
   2d8f0:	ldr	w10, [sp, #128]
   2d8f4:	ldur	x21, [x29, #-176]
   2d8f8:	cmp	w24, w10
   2d8fc:	ldr	x10, [sp, #208]
   2d900:	str	w24, [x10]
   2d904:	b.hi	2d808 <ZSTD_endStream@@Base+0x1f8b4>  // b.pmore
   2d908:	sub	x10, x29, #0x40
   2d90c:	mov	w9, wzr
   2d910:	str	x10, [sp, #208]
   2d914:	b	2d818 <ZSTD_endStream@@Base+0x1f8c4>
   2d918:	ldr	w10, [sp, #128]
   2d91c:	ldur	x21, [x29, #-176]
   2d920:	cmp	w24, w10
   2d924:	ldr	x10, [sp, #200]
   2d928:	str	w24, [x10]
   2d92c:	b.ls	2d940 <ZSTD_endStream@@Base+0x1f9ec>  // b.plast
   2d930:	str	x9, [sp, #200]
   2d934:	mov	x22, x8
   2d938:	mov	x8, x20
   2d93c:	b	2d810 <ZSTD_endStream@@Base+0x1f8bc>
   2d940:	sub	x10, x29, #0x40
   2d944:	mov	w9, wzr
   2d948:	str	x10, [sp, #200]
   2d94c:	mov	x22, x8
   2d950:	mov	x8, x20
   2d954:	b	2d818 <ZSTD_endStream@@Base+0x1f8c4>
   2d958:	ldp	x2, x21, [x29, #-184]
   2d95c:	mov	x23, x8
   2d960:	mov	x8, x20
   2d964:	b	2d818 <ZSTD_endStream@@Base+0x1f8c4>
   2d968:	mov	w8, wzr
   2d96c:	cbz	w8, 2f5c8 <ZSTD_endStream@@Base+0x21674>
   2d970:	ldp	x26, x22, [x29, #-80]
   2d974:	b	2f85c <ZSTD_endStream@@Base+0x21908>
   2d978:	mov	w8, wzr
   2d97c:	ldr	x27, [sp, #176]
   2d980:	ldur	x21, [x29, #-176]
   2d984:	cbnz	w8, 2dcd0 <ZSTD_endStream@@Base+0x1fd7c>
   2d988:	ldr	x8, [sp, #104]
   2d98c:	ldr	w9, [sp, #96]
   2d990:	ldr	x10, [sp, #88]
   2d994:	ldr	w25, [sp, #116]
   2d998:	mov	x22, xzr
   2d99c:	mov	x20, xzr
   2d9a0:	str	w9, [x8, x10, lsl #2]
   2d9a4:	add	w8, w9, #0x2
   2d9a8:	stur	w8, [x29, #-96]
   2d9ac:	b	2d9cc <ZSTD_endStream@@Base+0x1fa78>
   2d9b0:	add	x9, x9, #0x4
   2d9b4:	str	x9, [sp, #208]
   2d9b8:	ldur	x21, [x29, #-176]
   2d9bc:	ldr	w24, [x9]
   2d9c0:	mov	w9, #0x1                   	// #1
   2d9c4:	mov	x20, x8
   2d9c8:	tbz	w9, #0, 2dcac <ZSTD_endStream@@Base+0x1fd58>
   2d9cc:	subs	w25, w25, #0x1
   2d9d0:	b.cc	2dcac <ZSTD_endStream@@Base+0x1fd58>  // b.lo, b.ul, b.last
   2d9d4:	ldur	w8, [x29, #-144]
   2d9d8:	cmp	w24, w8
   2d9dc:	b.cc	2dcac <ZSTD_endStream@@Base+0x1fd58>  // b.lo, b.ul, b.last
   2d9e0:	ldr	x8, [sp, #216]
   2d9e4:	cmp	x20, x22
   2d9e8:	mov	w19, w24
   2d9ec:	add	x21, x8, w24, uxtw
   2d9f0:	csel	x24, x20, x22, cc  // cc = lo, ul, last
   2d9f4:	add	x0, x2, x24
   2d9f8:	ldur	x2, [x29, #-168]
   2d9fc:	add	x1, x21, x24
   2da00:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2da04:	add	x8, x0, x24
   2da08:	cmp	x8, x28
   2da0c:	b.ls	2da70 <ZSTD_endStream@@Base+0x1fb1c>  // b.plast
   2da10:	ldur	w14, [x29, #-120]
   2da14:	ldur	w12, [x29, #-96]
   2da18:	ldur	x13, [x29, #-160]
   2da1c:	add	w11, w19, w8
   2da20:	sub	w10, w14, w19
   2da24:	cmp	x8, x10
   2da28:	mov	w9, wzr
   2da2c:	sub	w12, w12, w19
   2da30:	add	x13, x13, w26, uxtw #3
   2da34:	csel	w14, w11, w14, hi  // hi = pmore
   2da38:	cmp	x8, #0x1, lsl #12
   2da3c:	add	w26, w26, #0x1
   2da40:	mov	w24, w19
   2da44:	stp	w12, w8, [x13]
   2da48:	stur	w14, [x29, #-120]
   2da4c:	b.hi	2db04 <ZSTD_endStream@@Base+0x1fbb0>  // b.pmore
   2da50:	ldur	x2, [x29, #-184]
   2da54:	ldur	x11, [x29, #-168]
   2da58:	mov	x28, x8
   2da5c:	add	x10, x2, x8
   2da60:	cmp	x10, x11
   2da64:	b.ne	2da78 <ZSTD_endStream@@Base+0x1fb24>  // b.any
   2da68:	mov	x28, x8
   2da6c:	b	2daf8 <ZSTD_endStream@@Base+0x1fba4>
   2da70:	ldur	x2, [x29, #-184]
   2da74:	mov	w24, w19
   2da78:	ldrb	w9, [x21, x8]
   2da7c:	ldrb	w10, [x2, x8]
   2da80:	ldr	w11, [sp, #140]
   2da84:	cmp	w9, w10
   2da88:	ldr	x9, [sp, #144]
   2da8c:	and	w11, w24, w11
   2da90:	lsl	w11, w11, #1
   2da94:	add	x9, x9, w11, uxtw #2
   2da98:	b.cs	2dac4 <ZSTD_endStream@@Base+0x1fb70>  // b.hs, b.nlast
   2da9c:	ldr	w10, [sp, #128]
   2daa0:	cmp	w24, w10
   2daa4:	ldr	x10, [sp, #208]
   2daa8:	str	w24, [x10]
   2daac:	b.hi	2d9b0 <ZSTD_endStream@@Base+0x1fa5c>  // b.pmore
   2dab0:	ldur	x21, [x29, #-176]
   2dab4:	sub	x10, x29, #0x40
   2dab8:	mov	w9, wzr
   2dabc:	str	x10, [sp, #208]
   2dac0:	b	2d9c4 <ZSTD_endStream@@Base+0x1fa70>
   2dac4:	ldr	w10, [sp, #128]
   2dac8:	cmp	w24, w10
   2dacc:	ldr	x10, [sp, #200]
   2dad0:	str	w24, [x10]
   2dad4:	b.ls	2dae8 <ZSTD_endStream@@Base+0x1fb94>  // b.plast
   2dad8:	str	x9, [sp, #200]
   2dadc:	mov	x22, x8
   2dae0:	mov	x8, x20
   2dae4:	b	2d9b8 <ZSTD_endStream@@Base+0x1fa64>
   2dae8:	sub	x10, x29, #0x40
   2daec:	mov	w9, wzr
   2daf0:	str	x10, [sp, #200]
   2daf4:	mov	x22, x8
   2daf8:	ldur	x21, [x29, #-176]
   2dafc:	mov	x8, x20
   2db00:	b	2d9c4 <ZSTD_endStream@@Base+0x1fa70>
   2db04:	ldp	x2, x21, [x29, #-184]
   2db08:	mov	x28, x8
   2db0c:	mov	x8, x20
   2db10:	b	2d9c4 <ZSTD_endStream@@Base+0x1fa70>
   2db14:	mov	w8, wzr
   2db18:	ldr	x27, [sp, #176]
   2db1c:	ldur	x21, [x29, #-176]
   2db20:	cbnz	w8, 2dcd0 <ZSTD_endStream@@Base+0x1fd7c>
   2db24:	ldr	x8, [sp, #104]
   2db28:	ldr	w9, [sp, #96]
   2db2c:	ldr	x10, [sp, #88]
   2db30:	ldr	w25, [sp, #116]
   2db34:	mov	x22, xzr
   2db38:	mov	x20, xzr
   2db3c:	str	w9, [x8, x10, lsl #2]
   2db40:	add	w8, w9, #0x2
   2db44:	stur	w8, [x29, #-96]
   2db48:	b	2db64 <ZSTD_endStream@@Base+0x1fc10>
   2db4c:	add	x9, x9, #0x4
   2db50:	str	x9, [sp, #208]
   2db54:	ldr	w24, [x9]
   2db58:	mov	w9, #0x1                   	// #1
   2db5c:	mov	x20, x8
   2db60:	tbz	w9, #0, 2dcac <ZSTD_endStream@@Base+0x1fd58>
   2db64:	subs	w25, w25, #0x1
   2db68:	b.cc	2dcac <ZSTD_endStream@@Base+0x1fd58>  // b.lo, b.ul, b.last
   2db6c:	ldur	w8, [x29, #-144]
   2db70:	cmp	w24, w8
   2db74:	b.cc	2dcac <ZSTD_endStream@@Base+0x1fd58>  // b.lo, b.ul, b.last
   2db78:	ldr	x8, [sp, #216]
   2db7c:	cmp	x20, x22
   2db80:	mov	w19, w24
   2db84:	add	x21, x8, w24, uxtw
   2db88:	csel	x24, x20, x22, cc  // cc = lo, ul, last
   2db8c:	add	x0, x2, x24
   2db90:	ldur	x2, [x29, #-168]
   2db94:	add	x1, x21, x24
   2db98:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2db9c:	add	x8, x0, x24
   2dba0:	cmp	x8, x23
   2dba4:	b.ls	2dc08 <ZSTD_endStream@@Base+0x1fcb4>  // b.plast
   2dba8:	ldur	w14, [x29, #-120]
   2dbac:	ldur	w12, [x29, #-96]
   2dbb0:	ldur	x13, [x29, #-160]
   2dbb4:	add	w11, w19, w8
   2dbb8:	sub	w10, w14, w19
   2dbbc:	cmp	x8, x10
   2dbc0:	mov	w9, wzr
   2dbc4:	sub	w12, w12, w19
   2dbc8:	add	x13, x13, w26, uxtw #3
   2dbcc:	csel	w14, w11, w14, hi  // hi = pmore
   2dbd0:	cmp	x8, #0x1, lsl #12
   2dbd4:	add	w26, w26, #0x1
   2dbd8:	mov	w24, w19
   2dbdc:	stp	w12, w8, [x13]
   2dbe0:	stur	w14, [x29, #-120]
   2dbe4:	b.hi	2dc9c <ZSTD_endStream@@Base+0x1fd48>  // b.pmore
   2dbe8:	ldur	x2, [x29, #-184]
   2dbec:	ldur	x11, [x29, #-168]
   2dbf0:	mov	x23, x8
   2dbf4:	add	x10, x2, x8
   2dbf8:	cmp	x10, x11
   2dbfc:	b.ne	2dc10 <ZSTD_endStream@@Base+0x1fcbc>  // b.any
   2dc00:	ldur	x21, [x29, #-176]
   2dc04:	b	2dca0 <ZSTD_endStream@@Base+0x1fd4c>
   2dc08:	ldur	x2, [x29, #-184]
   2dc0c:	mov	w24, w19
   2dc10:	ldrb	w9, [x21, x8]
   2dc14:	ldrb	w10, [x2, x8]
   2dc18:	ldr	w11, [sp, #140]
   2dc1c:	cmp	w9, w10
   2dc20:	ldr	x9, [sp, #144]
   2dc24:	and	w11, w24, w11
   2dc28:	lsl	w11, w11, #1
   2dc2c:	add	x9, x9, w11, uxtw #2
   2dc30:	b.cs	2dc5c <ZSTD_endStream@@Base+0x1fd08>  // b.hs, b.nlast
   2dc34:	ldr	w10, [sp, #128]
   2dc38:	ldur	x21, [x29, #-176]
   2dc3c:	cmp	w24, w10
   2dc40:	ldr	x10, [sp, #208]
   2dc44:	str	w24, [x10]
   2dc48:	b.hi	2db4c <ZSTD_endStream@@Base+0x1fbf8>  // b.pmore
   2dc4c:	sub	x10, x29, #0x40
   2dc50:	mov	w9, wzr
   2dc54:	str	x10, [sp, #208]
   2dc58:	b	2db5c <ZSTD_endStream@@Base+0x1fc08>
   2dc5c:	ldr	w10, [sp, #128]
   2dc60:	ldur	x21, [x29, #-176]
   2dc64:	cmp	w24, w10
   2dc68:	ldr	x10, [sp, #200]
   2dc6c:	str	w24, [x10]
   2dc70:	b.ls	2dc84 <ZSTD_endStream@@Base+0x1fd30>  // b.plast
   2dc74:	str	x9, [sp, #200]
   2dc78:	mov	x22, x8
   2dc7c:	mov	x8, x20
   2dc80:	b	2db54 <ZSTD_endStream@@Base+0x1fc00>
   2dc84:	sub	x10, x29, #0x40
   2dc88:	mov	w9, wzr
   2dc8c:	str	x10, [sp, #200]
   2dc90:	mov	x22, x8
   2dc94:	mov	x8, x20
   2dc98:	b	2db5c <ZSTD_endStream@@Base+0x1fc08>
   2dc9c:	ldp	x2, x21, [x29, #-184]
   2dca0:	mov	x23, x8
   2dca4:	mov	x8, x20
   2dca8:	b	2db5c <ZSTD_endStream@@Base+0x1fc08>
   2dcac:	ldr	x8, [sp, #200]
   2dcb0:	mov	w19, w26
   2dcb4:	str	wzr, [x8]
   2dcb8:	ldr	x8, [sp, #208]
   2dcbc:	str	wzr, [x8]
   2dcc0:	ldur	w8, [x29, #-120]
   2dcc4:	ldur	x9, [x29, #-72]
   2dcc8:	sub	w8, w8, #0x8
   2dccc:	str	w8, [x9, #36]
   2dcd0:	ldp	x26, x22, [x29, #-80]
   2dcd4:	mov	w23, #0x1c                  	// #28
   2dcd8:	cbnz	w19, 2cd3c <ZSTD_endStream@@Base+0x1ede8>
   2dcdc:	add	x2, x2, #0x1
   2dce0:	mov	w0, wzr
   2dce4:	stur	x2, [x29, #-184]
   2dce8:	mov	w8, #0x2                   	// #2
   2dcec:	ldur	w12, [x29, #-100]
   2dcf0:	cmp	w8, #0x7
   2dcf4:	b.eq	2f2a8 <ZSTD_endStream@@Base+0x21354>  // b.none
   2dcf8:	cbnz	w8, 2ccf4 <ZSTD_endStream@@Base+0x1eda0>
   2dcfc:	cbz	w0, 2f2b8 <ZSTD_endStream@@Base+0x21364>
   2dd00:	mov	w12, #0x1                   	// #1
   2dd04:	sub	w19, w12, #0x1
   2dd08:	stp	w12, w0, [x29, #-100]
   2dd0c:	umaddl	x8, w19, w23, x26
   2dd10:	ldur	x9, [x29, #-184]
   2dd14:	ldr	w8, [x8, #8]
   2dd18:	mov	w28, w12
   2dd1c:	add	x25, x9, x28
   2dd20:	cbz	w8, 2dd30 <ZSTD_endStream@@Base+0x1fddc>
   2dd24:	mov	w24, #0x1c                  	// #28
   2dd28:	mov	w23, #0x1                   	// #1
   2dd2c:	b	2dd40 <ZSTD_endStream@@Base+0x1fdec>
   2dd30:	madd	x8, x19, x23, x26
   2dd34:	ldr	w8, [x8, #12]
   2dd38:	mov	w24, #0x1c                  	// #28
   2dd3c:	add	w23, w8, #0x1
   2dd40:	ldur	x21, [x29, #-200]
   2dd44:	mul	x8, x19, x24
   2dd48:	ldr	w20, [x26, x8]
   2dd4c:	sub	x0, x25, #0x1
   2dd50:	mov	w1, #0x1                   	// #1
   2dd54:	mov	w3, #0x2                   	// #2
   2dd58:	mov	x2, x21
   2dd5c:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   2dd60:	add	w20, w0, w20
   2dd64:	mov	w2, #0x2                   	// #2
   2dd68:	mov	w0, w23
   2dd6c:	mov	x1, x21
   2dd70:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2dd74:	add	w20, w20, w0
   2dd78:	sub	w0, w23, #0x1
   2dd7c:	mov	w2, #0x2                   	// #2
   2dd80:	mov	x1, x21
   2dd84:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2dd88:	madd	x8, x28, x24, x26
   2dd8c:	ldr	w10, [x8]
   2dd90:	sub	w9, w20, w0
   2dd94:	mov	x13, x28
   2dd98:	cmp	w9, w10
   2dd9c:	b.gt	2ddc8 <ZSTD_endStream@@Base+0x1fe74>
   2dda0:	mov	w11, #0x1c                  	// #28
   2dda4:	madd	x10, x13, x11, x26
   2dda8:	madd	x11, x19, x11, x26
   2ddac:	stur	xzr, [x10, #4]
   2ddb0:	str	w23, [x10, #12]
   2ddb4:	str	w9, [x8]
   2ddb8:	ldr	w9, [x11, #24]
   2ddbc:	ldr	x11, [x11, #16]
   2ddc0:	str	w9, [x10, #24]
   2ddc4:	str	x11, [x10, #16]
   2ddc8:	ldr	x9, [sp, #168]
   2ddcc:	ldur	x21, [x29, #-176]
   2ddd0:	ldur	w0, [x29, #-96]
   2ddd4:	cmp	x25, x9
   2ddd8:	b.ls	2ddf0 <ZSTD_endStream@@Base+0x1fe9c>  // b.plast
   2dddc:	ldur	w12, [x29, #-100]
   2dde0:	ldr	x27, [sp, #176]
   2dde4:	mov	w8, #0x13                  	// #19
   2dde8:	mov	w23, #0x1c                  	// #28
   2ddec:	b	2efb8 <ZSTD_endStream@@Base+0x21064>
   2ddf0:	ldur	w12, [x29, #-100]
   2ddf4:	cmp	w12, w0
   2ddf8:	b.ne	2de0c <ZSTD_endStream@@Base+0x1feb8>  // b.any
   2ddfc:	ldr	x27, [sp, #176]
   2de00:	mov	w8, #0x11                  	// #17
   2de04:	mov	w23, #0x1c                  	// #28
   2de08:	b	2efb8 <ZSTD_endStream@@Base+0x21064>
   2de0c:	mov	w23, #0x1c                  	// #28
   2de10:	madd	x10, x13, x23, x26
   2de14:	ldr	w11, [x10, #8]!
   2de18:	stur	x25, [x29, #-88]
   2de1c:	cmp	w11, #0x0
   2de20:	cset	w9, ne  // ne = any
   2de24:	str	w9, [sp, #216]
   2de28:	str	x10, [sp, #120]
   2de2c:	stur	w11, [x29, #-144]
   2de30:	cbz	w11, 2de3c <ZSTD_endStream@@Base+0x1fee8>
   2de34:	stur	wzr, [x29, #-124]
   2de38:	b	2de48 <ZSTD_endStream@@Base+0x1fef4>
   2de3c:	madd	x9, x13, x23, x26
   2de40:	ldr	w9, [x9, #12]
   2de44:	stur	w9, [x29, #-124]
   2de48:	ldr	w8, [x8]
   2de4c:	ldur	x1, [x29, #-200]
   2de50:	mov	w2, #0x2                   	// #2
   2de54:	mov	w0, wzr
   2de58:	str	w8, [sp, #116]
   2de5c:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2de60:	ldr	x19, [x22, #8]
   2de64:	ldr	w20, [x22, #36]
   2de68:	ldur	x9, [x29, #-88]
   2de6c:	ldr	x27, [sp, #176]
   2de70:	mov	w24, wzr
   2de74:	add	x8, x19, x20
   2de78:	cmp	x8, x9
   2de7c:	mov	x13, x28
   2de80:	str	w0, [sp, #104]
   2de84:	b.hi	2ece4 <ZSTD_endStream@@Base+0x20d90>  // b.pmore
   2de88:	ldr	w23, [x22, #200]
   2de8c:	ldur	x25, [x29, #-168]
   2de90:	mov	w8, #0x1c                  	// #28
   2de94:	sub	w21, w9, w19
   2de98:	cmp	w20, w21
   2de9c:	mov	x24, x22
   2dea0:	madd	x22, x13, x8, x26
   2dea4:	stur	x13, [x29, #-112]
   2dea8:	b.cs	2ded0 <ZSTD_endStream@@Base+0x1ff7c>  // b.hs, b.nlast
   2deac:	add	x1, x19, w20, uxtw
   2deb0:	mov	x0, x24
   2deb4:	mov	x2, x25
   2deb8:	mov	w3, w23
   2debc:	mov	w4, wzr
   2dec0:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   2dec4:	add	w20, w0, w20
   2dec8:	cmp	w20, w21
   2decc:	b.cc	2deac <ZSTD_endStream@@Base+0x1ff58>  // b.lo, b.ul, b.last
   2ded0:	add	x8, x22, #0x10
   2ded4:	stur	x8, [x29, #-120]
   2ded8:	sub	w8, w23, #0x6
   2dedc:	cmp	w8, #0x2
   2dee0:	mov	x22, x24
   2dee4:	str	w21, [x24, #36]
   2dee8:	b.cc	2e118 <ZSTD_endStream@@Base+0x201c4>  // b.lo, b.ul, b.last
   2deec:	ldur	x24, [x29, #-112]
   2def0:	cmp	w23, #0x5
   2def4:	lsl	x19, x24, #3
   2def8:	b.eq	2e334 <ZSTD_endStream@@Base+0x203e0>  // b.none
   2defc:	ldur	x10, [x29, #-88]
   2df00:	cmp	w23, #0x3
   2df04:	mov	w9, #0xfff                 	// #4095
   2df08:	b.ne	2e550 <ZSTD_endStream@@Base+0x205fc>  // b.any
   2df0c:	ldr	w8, [x22, #204]
   2df10:	ldr	x11, [x22, #8]
   2df14:	ldr	w1, [x22, #192]
   2df18:	ldur	x0, [x29, #-88]
   2df1c:	ldr	x20, [x22, #48]
   2df20:	cmp	w8, #0xfff
   2df24:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2df28:	mov	w2, #0x3                   	// #3
   2df2c:	str	w8, [sp, #200]
   2df30:	str	x11, [sp, #128]
   2df34:	sub	w24, w10, w11
   2df38:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2df3c:	ldp	w2, w8, [x22, #184]
   2df40:	stp	x0, x20, [sp]
   2df44:	ldr	w9, [x20, x0, lsl #2]
   2df48:	ldr	x23, [x22, #64]
   2df4c:	sub	w8, w8, #0x1
   2df50:	ldr	w21, [x22, #24]
   2df54:	str	w9, [sp, #16]
   2df58:	mov	w9, #0xffffffff            	// #-1
   2df5c:	lsl	w20, w9, w8
   2df60:	mvn	w8, w20
   2df64:	str	w8, [sp, #60]
   2df68:	subs	w8, w24, w8
   2df6c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2df70:	mov	x0, x22
   2df74:	mov	w1, w24
   2df78:	str	w8, [sp, #40]
   2df7c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2df80:	ldur	x28, [x29, #-88]
   2df84:	add	w11, w24, #0x9
   2df88:	cmp	w0, #0x0
   2df8c:	str	w11, [sp, #144]
   2df90:	add	x11, x28, #0x3
   2df94:	str	x11, [sp, #96]
   2df98:	csinc	w11, w0, wzr, ne  // ne = any
   2df9c:	str	w11, [sp, #140]
   2dfa0:	ldur	w11, [x29, #-144]
   2dfa4:	mov	x10, x22
   2dfa8:	bic	w9, w24, w20
   2dfac:	ldr	w10, [x10, #196]
   2dfb0:	lsl	w9, w9, #1
   2dfb4:	cmp	w11, #0x0
   2dfb8:	add	x11, x23, w9, uxtw #2
   2dfbc:	mov	w9, #0x3                   	// #3
   2dfc0:	ldur	x8, [x29, #-112]
   2dfc4:	cinc	x27, x9, ne  // ne = any
   2dfc8:	add	x9, x11, #0x4
   2dfcc:	stp	x23, x9, [sp, #64]
   2dfd0:	mov	w9, #0x1                   	// #1
   2dfd4:	lsl	w9, w9, w10
   2dfd8:	str	w9, [sp, #208]
   2dfdc:	ldur	x9, [x29, #-176]
   2dfe0:	sub	x8, x19, x8
   2dfe4:	ldr	x19, [sp, #80]
   2dfe8:	cinc	x8, x8, ne  // ne = any
   2dfec:	mov	x22, xzr
   2dff0:	mov	w26, wzr
   2dff4:	sub	w25, w24, w21
   2dff8:	cset	w21, ne  // ne = any
   2dffc:	add	x8, x9, x8, lsl #2
   2e000:	str	w24, [sp, #28]
   2e004:	str	x11, [sp, #88]
   2e008:	stur	x8, [x29, #-144]
   2e00c:	add	x8, x21, x22
   2e010:	cmp	x8, #0x3
   2e014:	b.eq	2e024 <ZSTD_endStream@@Base+0x200d0>  // b.none
   2e018:	ldur	x8, [x29, #-144]
   2e01c:	ldr	w23, [x8, x22, lsl #2]
   2e020:	b	2e030 <ZSTD_endStream@@Base+0x200dc>
   2e024:	ldur	x8, [x29, #-120]
   2e028:	ldr	w8, [x8]
   2e02c:	sub	w23, w8, #0x1
   2e030:	sub	w8, w23, #0x1
   2e034:	cmp	w8, w25
   2e038:	b.cs	2e080 <ZSTD_endStream@@Base+0x2012c>  // b.hs, b.nlast
   2e03c:	mov	w1, #0x3                   	// #3
   2e040:	mov	x0, x28
   2e044:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e048:	mov	w23, w23
   2e04c:	mov	w24, w0
   2e050:	sub	x0, x28, x23
   2e054:	mov	w1, #0x3                   	// #3
   2e058:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e05c:	cmp	w24, w0
   2e060:	b.ne	2e088 <ZSTD_endStream@@Base+0x20134>  // b.any
   2e064:	ldr	x0, [sp, #96]
   2e068:	ldur	x2, [x29, #-168]
   2e06c:	neg	x8, x23
   2e070:	add	x1, x0, x8
   2e074:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2e078:	add	w8, w0, #0x3
   2e07c:	b	2e08c <ZSTD_endStream@@Base+0x20138>
   2e080:	mov	w8, wzr
   2e084:	b	2e090 <ZSTD_endStream@@Base+0x2013c>
   2e088:	mov	w8, wzr
   2e08c:	ldur	x28, [x29, #-88]
   2e090:	mov	w9, w8
   2e094:	cmp	x19, x9
   2e098:	mov	w23, #0x1c                  	// #28
   2e09c:	b.cs	2e0dc <ZSTD_endStream@@Base+0x20188>  // b.hs, b.nlast
   2e0a0:	ldur	x10, [x29, #-160]
   2e0a4:	ldr	w11, [sp, #200]
   2e0a8:	add	x10, x10, w26, uxtw #3
   2e0ac:	add	w26, w26, #0x1
   2e0b0:	cmp	w8, w11
   2e0b4:	stp	w22, w8, [x10]
   2e0b8:	mov	w8, #0x1                   	// #1
   2e0bc:	b.hi	2e108 <ZSTD_endStream@@Base+0x201b4>  // b.pmore
   2e0c0:	ldur	x11, [x29, #-168]
   2e0c4:	add	x10, x28, x9
   2e0c8:	mov	x19, x9
   2e0cc:	mov	w24, w26
   2e0d0:	cmp	x10, x11
   2e0d4:	b.ne	2e0e0 <ZSTD_endStream@@Base+0x2018c>  // b.any
   2e0d8:	b	2e0ec <ZSTD_endStream@@Base+0x20198>
   2e0dc:	mov	x9, x19
   2e0e0:	mov	w8, wzr
   2e0e4:	mov	x19, x9
   2e0e8:	mov	w24, w20
   2e0ec:	cbnz	w8, 2e940 <ZSTD_endStream@@Base+0x209ec>
   2e0f0:	add	x22, x22, #0x1
   2e0f4:	add	x8, x21, x22
   2e0f8:	cmp	x8, x27
   2e0fc:	mov	w20, w24
   2e100:	b.cc	2e00c <ZSTD_endStream@@Base+0x200b8>  // b.lo, b.ul, b.last
   2e104:	b	2e93c <ZSTD_endStream@@Base+0x209e8>
   2e108:	mov	x19, x9
   2e10c:	mov	w24, w26
   2e110:	cbz	w8, 2e0f0 <ZSTD_endStream@@Base+0x2019c>
   2e114:	b	2e940 <ZSTD_endStream@@Base+0x209ec>
   2e118:	ldr	w8, [x22, #204]
   2e11c:	ldur	x23, [x29, #-88]
   2e120:	ldr	x10, [x22, #8]
   2e124:	ldr	w1, [x22, #192]
   2e128:	ldr	x19, [x22, #48]
   2e12c:	cmp	w8, #0xfff
   2e130:	mov	w9, #0xfff                 	// #4095
   2e134:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2e138:	mov	w2, #0x6                   	// #6
   2e13c:	mov	x0, x23
   2e140:	str	w8, [sp, #200]
   2e144:	str	x10, [sp, #128]
   2e148:	sub	w24, w23, w10
   2e14c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2e150:	ldp	w2, w8, [x22, #184]
   2e154:	ldr	w9, [x19, x0, lsl #2]
   2e158:	str	x19, [sp, #16]
   2e15c:	ldr	x19, [x22, #64]
   2e160:	sub	w8, w8, #0x1
   2e164:	str	w9, [sp, #28]
   2e168:	mov	w9, #0xffffffff            	// #-1
   2e16c:	lsl	w20, w9, w8
   2e170:	ldr	w21, [x22, #24]
   2e174:	mvn	w8, w20
   2e178:	str	w8, [sp, #64]
   2e17c:	subs	w8, w24, w8
   2e180:	str	x0, [sp]
   2e184:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2e188:	mov	x0, x22
   2e18c:	mov	w1, w24
   2e190:	str	w8, [sp, #60]
   2e194:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2e198:	ldur	x11, [x29, #-112]
   2e19c:	mov	x12, x23
   2e1a0:	bic	w9, w24, w20
   2e1a4:	add	w10, w24, #0x9
   2e1a8:	lsl	x8, x11, #3
   2e1ac:	sub	x8, x8, x11
   2e1b0:	ldur	w11, [x29, #-144]
   2e1b4:	cmp	w0, #0x0
   2e1b8:	str	w10, [sp, #144]
   2e1bc:	ldr	w10, [x22, #196]
   2e1c0:	add	x13, x12, #0x4
   2e1c4:	lsl	w9, w9, #1
   2e1c8:	str	x13, [sp, #40]
   2e1cc:	csinc	w13, w0, wzr, ne  // ne = any
   2e1d0:	cmp	w11, #0x0
   2e1d4:	add	x11, x19, w9, uxtw #2
   2e1d8:	mov	w9, #0x3                   	// #3
   2e1dc:	cinc	x27, x9, ne  // ne = any
   2e1e0:	add	x9, x11, #0x4
   2e1e4:	stp	x9, x11, [sp, #88]
   2e1e8:	mov	w9, #0x1                   	// #1
   2e1ec:	lsl	w9, w9, w10
   2e1f0:	stur	w9, [x29, #-144]
   2e1f4:	ldur	x9, [x29, #-176]
   2e1f8:	ldr	x26, [sp, #80]
   2e1fc:	cinc	x8, x8, ne  // ne = any
   2e200:	mov	x25, xzr
   2e204:	mov	w28, wzr
   2e208:	sub	w23, w24, w21
   2e20c:	cset	w21, ne  // ne = any
   2e210:	add	x8, x9, x8, lsl #2
   2e214:	str	w24, [sp, #8]
   2e218:	str	w13, [sp, #140]
   2e21c:	str	x19, [sp, #72]
   2e220:	str	x8, [sp, #208]
   2e224:	add	x8, x21, x25
   2e228:	cmp	x8, #0x3
   2e22c:	b.eq	2e23c <ZSTD_endStream@@Base+0x202e8>  // b.none
   2e230:	ldr	x8, [sp, #208]
   2e234:	ldr	w22, [x8, x25, lsl #2]
   2e238:	b	2e248 <ZSTD_endStream@@Base+0x202f4>
   2e23c:	ldur	x8, [x29, #-120]
   2e240:	ldr	w8, [x8]
   2e244:	sub	w22, w8, #0x1
   2e248:	sub	w8, w22, #0x1
   2e24c:	cmp	w8, w23
   2e250:	b.cs	2e29c <ZSTD_endStream@@Base+0x20348>  // b.hs, b.nlast
   2e254:	mov	w1, #0x4                   	// #4
   2e258:	mov	x0, x12
   2e25c:	mov	x19, x12
   2e260:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e264:	mov	w22, w22
   2e268:	mov	w24, w0
   2e26c:	sub	x0, x19, x22
   2e270:	mov	w1, #0x4                   	// #4
   2e274:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e278:	cmp	w24, w0
   2e27c:	b.ne	2e2a4 <ZSTD_endStream@@Base+0x20350>  // b.any
   2e280:	ldr	x0, [sp, #40]
   2e284:	ldur	x2, [x29, #-168]
   2e288:	neg	x8, x22
   2e28c:	add	x1, x0, x8
   2e290:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2e294:	add	w8, w0, #0x4
   2e298:	b	2e2a8 <ZSTD_endStream@@Base+0x20354>
   2e29c:	mov	w8, wzr
   2e2a0:	b	2e2ac <ZSTD_endStream@@Base+0x20358>
   2e2a4:	mov	w8, wzr
   2e2a8:	ldur	x12, [x29, #-88]
   2e2ac:	ldur	x22, [x29, #-72]
   2e2b0:	mov	w9, w8
   2e2b4:	cmp	x26, x9
   2e2b8:	b.cs	2e2f8 <ZSTD_endStream@@Base+0x203a4>  // b.hs, b.nlast
   2e2bc:	ldur	x10, [x29, #-160]
   2e2c0:	ldr	w11, [sp, #200]
   2e2c4:	add	x10, x10, w28, uxtw #3
   2e2c8:	add	w28, w28, #0x1
   2e2cc:	cmp	w8, w11
   2e2d0:	stp	w25, w8, [x10]
   2e2d4:	mov	w8, #0x1                   	// #1
   2e2d8:	b.hi	2e324 <ZSTD_endStream@@Base+0x203d0>  // b.pmore
   2e2dc:	ldur	x11, [x29, #-168]
   2e2e0:	add	x10, x12, x9
   2e2e4:	mov	x26, x9
   2e2e8:	mov	w24, w28
   2e2ec:	cmp	x10, x11
   2e2f0:	b.ne	2e2fc <ZSTD_endStream@@Base+0x203a8>  // b.any
   2e2f4:	b	2e308 <ZSTD_endStream@@Base+0x203b4>
   2e2f8:	mov	x9, x26
   2e2fc:	mov	w8, wzr
   2e300:	mov	x26, x9
   2e304:	mov	w24, w20
   2e308:	cbnz	w8, 2e76c <ZSTD_endStream@@Base+0x20818>
   2e30c:	add	x25, x25, #0x1
   2e310:	add	x8, x21, x25
   2e314:	cmp	x8, x27
   2e318:	mov	w20, w24
   2e31c:	b.cc	2e224 <ZSTD_endStream@@Base+0x202d0>  // b.lo, b.ul, b.last
   2e320:	b	2e768 <ZSTD_endStream@@Base+0x20814>
   2e324:	mov	x26, x9
   2e328:	mov	w24, w28
   2e32c:	cbz	w8, 2e30c <ZSTD_endStream@@Base+0x203b8>
   2e330:	b	2e76c <ZSTD_endStream@@Base+0x20818>
   2e334:	ldr	w8, [x22, #204]
   2e338:	ldur	x23, [x29, #-88]
   2e33c:	ldr	x10, [x22, #8]
   2e340:	ldr	w1, [x22, #192]
   2e344:	ldr	x20, [x22, #48]
   2e348:	cmp	w8, #0xfff
   2e34c:	mov	w9, #0xfff                 	// #4095
   2e350:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2e354:	mov	w2, #0x5                   	// #5
   2e358:	mov	x0, x23
   2e35c:	str	w8, [sp, #200]
   2e360:	str	x10, [sp, #128]
   2e364:	sub	w27, w23, w10
   2e368:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2e36c:	ldp	w2, w8, [x22, #184]
   2e370:	ldr	w9, [x20, x0, lsl #2]
   2e374:	str	x20, [sp, #16]
   2e378:	ldr	x26, [x22, #64]
   2e37c:	sub	w8, w8, #0x1
   2e380:	str	w9, [sp, #28]
   2e384:	mov	w9, #0xffffffff            	// #-1
   2e388:	lsl	w20, w9, w8
   2e38c:	ldr	w21, [x22, #24]
   2e390:	mvn	w8, w20
   2e394:	str	w8, [sp, #64]
   2e398:	subs	w8, w27, w8
   2e39c:	str	x0, [sp]
   2e3a0:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2e3a4:	mov	x0, x22
   2e3a8:	mov	w1, w27
   2e3ac:	str	w8, [sp, #60]
   2e3b0:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2e3b4:	cmp	w0, #0x0
   2e3b8:	add	x11, x23, #0x4
   2e3bc:	str	x11, [sp, #40]
   2e3c0:	csinc	w11, w0, wzr, ne  // ne = any
   2e3c4:	str	w11, [sp, #140]
   2e3c8:	ldur	w11, [x29, #-144]
   2e3cc:	bic	w9, w27, w20
   2e3d0:	add	w10, w27, #0x9
   2e3d4:	str	w10, [sp, #144]
   2e3d8:	ldr	w10, [x22, #196]
   2e3dc:	lsl	w9, w9, #1
   2e3e0:	cmp	w11, #0x0
   2e3e4:	add	x11, x26, w9, uxtw #2
   2e3e8:	mov	w9, #0x3                   	// #3
   2e3ec:	sub	w13, w27, w21
   2e3f0:	str	w27, [sp, #8]
   2e3f4:	cinc	x27, x9, ne  // ne = any
   2e3f8:	add	x9, x11, #0x4
   2e3fc:	stp	x9, x11, [sp, #88]
   2e400:	mov	w9, #0x1                   	// #1
   2e404:	lsl	w9, w9, w10
   2e408:	stur	w9, [x29, #-144]
   2e40c:	ldur	x9, [x29, #-176]
   2e410:	mov	x12, x23
   2e414:	ldr	x23, [sp, #80]
   2e418:	sub	x8, x19, x24
   2e41c:	cinc	x8, x8, ne  // ne = any
   2e420:	mov	x25, xzr
   2e424:	mov	w28, wzr
   2e428:	cset	w21, ne  // ne = any
   2e42c:	add	x8, x9, x8, lsl #2
   2e430:	str	x26, [sp, #72]
   2e434:	str	x8, [sp, #208]
   2e438:	add	x8, x21, x25
   2e43c:	cmp	x8, #0x3
   2e440:	b.eq	2e450 <ZSTD_endStream@@Base+0x204fc>  // b.none
   2e444:	ldr	x8, [sp, #208]
   2e448:	ldr	w22, [x8, x25, lsl #2]
   2e44c:	b	2e45c <ZSTD_endStream@@Base+0x20508>
   2e450:	ldur	x8, [x29, #-120]
   2e454:	ldr	w8, [x8]
   2e458:	sub	w22, w8, #0x1
   2e45c:	sub	w8, w22, #0x1
   2e460:	cmp	w8, w13
   2e464:	b.cs	2e4b4 <ZSTD_endStream@@Base+0x20560>  // b.hs, b.nlast
   2e468:	mov	w1, #0x4                   	// #4
   2e46c:	mov	x0, x12
   2e470:	mov	w19, w13
   2e474:	mov	x26, x12
   2e478:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e47c:	mov	w22, w22
   2e480:	mov	w24, w0
   2e484:	sub	x0, x26, x22
   2e488:	mov	w1, #0x4                   	// #4
   2e48c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e490:	cmp	w24, w0
   2e494:	b.ne	2e4bc <ZSTD_endStream@@Base+0x20568>  // b.any
   2e498:	ldr	x0, [sp, #40]
   2e49c:	ldur	x2, [x29, #-168]
   2e4a0:	neg	x8, x22
   2e4a4:	add	x1, x0, x8
   2e4a8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2e4ac:	add	w8, w0, #0x4
   2e4b0:	b	2e4c0 <ZSTD_endStream@@Base+0x2056c>
   2e4b4:	mov	w8, wzr
   2e4b8:	b	2e4c8 <ZSTD_endStream@@Base+0x20574>
   2e4bc:	mov	w8, wzr
   2e4c0:	ldur	x12, [x29, #-88]
   2e4c4:	mov	w13, w19
   2e4c8:	ldur	x22, [x29, #-72]
   2e4cc:	mov	w9, w8
   2e4d0:	cmp	x23, x9
   2e4d4:	b.cs	2e514 <ZSTD_endStream@@Base+0x205c0>  // b.hs, b.nlast
   2e4d8:	ldur	x10, [x29, #-160]
   2e4dc:	ldr	w11, [sp, #200]
   2e4e0:	add	x10, x10, w28, uxtw #3
   2e4e4:	add	w28, w28, #0x1
   2e4e8:	cmp	w8, w11
   2e4ec:	stp	w25, w8, [x10]
   2e4f0:	mov	w8, #0x1                   	// #1
   2e4f4:	b.hi	2e540 <ZSTD_endStream@@Base+0x205ec>  // b.pmore
   2e4f8:	ldur	x11, [x29, #-168]
   2e4fc:	add	x10, x12, x9
   2e500:	mov	x23, x9
   2e504:	mov	w24, w28
   2e508:	cmp	x10, x11
   2e50c:	b.ne	2e518 <ZSTD_endStream@@Base+0x205c4>  // b.any
   2e510:	b	2e524 <ZSTD_endStream@@Base+0x205d0>
   2e514:	mov	x9, x23
   2e518:	mov	w8, wzr
   2e51c:	mov	x23, x9
   2e520:	mov	w24, w20
   2e524:	cbnz	w8, 2e968 <ZSTD_endStream@@Base+0x20a14>
   2e528:	add	x25, x25, #0x1
   2e52c:	add	x8, x21, x25
   2e530:	cmp	x8, x27
   2e534:	mov	w20, w24
   2e538:	b.cc	2e438 <ZSTD_endStream@@Base+0x204e4>  // b.lo, b.ul, b.last
   2e53c:	b	2e964 <ZSTD_endStream@@Base+0x20a10>
   2e540:	mov	x23, x9
   2e544:	mov	w24, w28
   2e548:	cbz	w8, 2e528 <ZSTD_endStream@@Base+0x205d4>
   2e54c:	b	2e968 <ZSTD_endStream@@Base+0x20a14>
   2e550:	ldr	w8, [x22, #204]
   2e554:	ldr	x11, [x22, #8]
   2e558:	ldr	w1, [x22, #192]
   2e55c:	ldur	x0, [x29, #-88]
   2e560:	ldr	x20, [x22, #48]
   2e564:	cmp	w8, #0xfff
   2e568:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2e56c:	mov	w2, #0x4                   	// #4
   2e570:	str	w8, [sp, #200]
   2e574:	str	x11, [sp, #128]
   2e578:	sub	w24, w10, w11
   2e57c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2e580:	ldp	w2, w8, [x22, #184]
   2e584:	ldr	w9, [x20, x0, lsl #2]
   2e588:	str	x20, [sp, #16]
   2e58c:	ldr	x23, [x22, #64]
   2e590:	sub	w8, w8, #0x1
   2e594:	str	w9, [sp, #28]
   2e598:	mov	w9, #0xffffffff            	// #-1
   2e59c:	lsl	w20, w9, w8
   2e5a0:	ldr	w21, [x22, #24]
   2e5a4:	mvn	w8, w20
   2e5a8:	str	w8, [sp, #64]
   2e5ac:	subs	w8, w24, w8
   2e5b0:	str	x0, [sp]
   2e5b4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2e5b8:	mov	x0, x22
   2e5bc:	mov	w1, w24
   2e5c0:	str	w8, [sp, #60]
   2e5c4:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2e5c8:	ldur	x12, [x29, #-88]
   2e5cc:	cmp	w0, #0x0
   2e5d0:	bic	w9, w24, w20
   2e5d4:	add	w10, w24, #0x9
   2e5d8:	add	x11, x12, #0x4
   2e5dc:	str	x11, [sp, #40]
   2e5e0:	csinc	w11, w0, wzr, ne  // ne = any
   2e5e4:	str	w11, [sp, #140]
   2e5e8:	ldur	w11, [x29, #-144]
   2e5ec:	str	w10, [sp, #144]
   2e5f0:	ldr	w10, [x22, #196]
   2e5f4:	lsl	w9, w9, #1
   2e5f8:	cmp	w11, #0x0
   2e5fc:	add	x11, x23, w9, uxtw #2
   2e600:	mov	w9, #0x3                   	// #3
   2e604:	cinc	x27, x9, ne  // ne = any
   2e608:	add	x9, x11, #0x4
   2e60c:	ldur	x8, [x29, #-112]
   2e610:	stp	x9, x11, [sp, #88]
   2e614:	mov	w9, #0x1                   	// #1
   2e618:	lsl	w9, w9, w10
   2e61c:	stur	w9, [x29, #-144]
   2e620:	ldur	x9, [x29, #-176]
   2e624:	str	x23, [sp, #72]
   2e628:	ldr	x23, [sp, #80]
   2e62c:	sub	x8, x19, x8
   2e630:	cinc	x8, x8, ne  // ne = any
   2e634:	mov	x25, xzr
   2e638:	mov	w28, wzr
   2e63c:	sub	w13, w24, w21
   2e640:	cset	w21, ne  // ne = any
   2e644:	add	x8, x9, x8, lsl #2
   2e648:	str	w24, [sp, #8]
   2e64c:	str	x8, [sp, #208]
   2e650:	add	x8, x21, x25
   2e654:	cmp	x8, #0x3
   2e658:	b.eq	2e668 <ZSTD_endStream@@Base+0x20714>  // b.none
   2e65c:	ldr	x8, [sp, #208]
   2e660:	ldr	w22, [x8, x25, lsl #2]
   2e664:	b	2e674 <ZSTD_endStream@@Base+0x20720>
   2e668:	ldur	x8, [x29, #-120]
   2e66c:	ldr	w8, [x8]
   2e670:	sub	w22, w8, #0x1
   2e674:	sub	w8, w22, #0x1
   2e678:	cmp	w8, w13
   2e67c:	b.cs	2e6cc <ZSTD_endStream@@Base+0x20778>  // b.hs, b.nlast
   2e680:	mov	w1, #0x4                   	// #4
   2e684:	mov	x0, x12
   2e688:	mov	w19, w13
   2e68c:	mov	x26, x12
   2e690:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e694:	mov	w22, w22
   2e698:	mov	w24, w0
   2e69c:	sub	x0, x26, x22
   2e6a0:	mov	w1, #0x4                   	// #4
   2e6a4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2e6a8:	cmp	w24, w0
   2e6ac:	b.ne	2e6d4 <ZSTD_endStream@@Base+0x20780>  // b.any
   2e6b0:	ldr	x0, [sp, #40]
   2e6b4:	ldur	x2, [x29, #-168]
   2e6b8:	neg	x8, x22
   2e6bc:	add	x1, x0, x8
   2e6c0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2e6c4:	add	w8, w0, #0x4
   2e6c8:	b	2e6d8 <ZSTD_endStream@@Base+0x20784>
   2e6cc:	mov	w8, wzr
   2e6d0:	b	2e6e0 <ZSTD_endStream@@Base+0x2078c>
   2e6d4:	mov	w8, wzr
   2e6d8:	ldur	x12, [x29, #-88]
   2e6dc:	mov	w13, w19
   2e6e0:	ldur	x22, [x29, #-72]
   2e6e4:	mov	w9, w8
   2e6e8:	cmp	x23, x9
   2e6ec:	b.cs	2e72c <ZSTD_endStream@@Base+0x207d8>  // b.hs, b.nlast
   2e6f0:	ldur	x10, [x29, #-160]
   2e6f4:	ldr	w11, [sp, #200]
   2e6f8:	add	x10, x10, w28, uxtw #3
   2e6fc:	add	w28, w28, #0x1
   2e700:	cmp	w8, w11
   2e704:	stp	w25, w8, [x10]
   2e708:	mov	w8, #0x1                   	// #1
   2e70c:	b.hi	2e758 <ZSTD_endStream@@Base+0x20804>  // b.pmore
   2e710:	ldur	x11, [x29, #-168]
   2e714:	add	x10, x12, x9
   2e718:	mov	x23, x9
   2e71c:	mov	w24, w28
   2e720:	cmp	x10, x11
   2e724:	b.ne	2e730 <ZSTD_endStream@@Base+0x207dc>  // b.any
   2e728:	b	2e73c <ZSTD_endStream@@Base+0x207e8>
   2e72c:	mov	x9, x23
   2e730:	mov	w8, wzr
   2e734:	mov	x23, x9
   2e738:	mov	w24, w20
   2e73c:	cbnz	w8, 2eb14 <ZSTD_endStream@@Base+0x20bc0>
   2e740:	add	x25, x25, #0x1
   2e744:	add	x8, x21, x25
   2e748:	cmp	x8, x27
   2e74c:	mov	w20, w24
   2e750:	b.cc	2e650 <ZSTD_endStream@@Base+0x206fc>  // b.lo, b.ul, b.last
   2e754:	b	2eb10 <ZSTD_endStream@@Base+0x20bbc>
   2e758:	mov	x23, x9
   2e75c:	mov	w24, w28
   2e760:	cbz	w8, 2e740 <ZSTD_endStream@@Base+0x207ec>
   2e764:	b	2eb14 <ZSTD_endStream@@Base+0x20bc0>
   2e768:	mov	w8, wzr
   2e76c:	ldr	x27, [sp, #176]
   2e770:	ldur	x21, [x29, #-176]
   2e774:	ldur	x13, [x29, #-112]
   2e778:	cbnz	w8, 2e934 <ZSTD_endStream@@Base+0x209e0>
   2e77c:	ldr	w9, [sp, #8]
   2e780:	ldr	x8, [sp, #16]
   2e784:	ldr	x10, [sp]
   2e788:	ldr	w15, [sp, #28]
   2e78c:	mov	x22, xzr
   2e790:	mov	x20, xzr
   2e794:	add	w24, w9, #0x2
   2e798:	str	w9, [x8, x10, lsl #2]
   2e79c:	b	2e7b8 <ZSTD_endStream@@Base+0x20864>
   2e7a0:	add	x9, x9, #0x4
   2e7a4:	str	x9, [sp, #96]
   2e7a8:	ldr	w15, [x9]
   2e7ac:	mov	w9, #0x1                   	// #1
   2e7b0:	mov	x20, x8
   2e7b4:	tbz	w9, #0, 2e910 <ZSTD_endStream@@Base+0x209bc>
   2e7b8:	ldur	w9, [x29, #-144]
   2e7bc:	subs	w9, w9, #0x1
   2e7c0:	b.cc	2e910 <ZSTD_endStream@@Base+0x209bc>  // b.lo, b.ul, b.last
   2e7c4:	ldr	w8, [sp, #140]
   2e7c8:	cmp	w15, w8
   2e7cc:	b.cc	2e910 <ZSTD_endStream@@Base+0x209bc>  // b.lo, b.ul, b.last
   2e7d0:	ldr	x8, [sp, #128]
   2e7d4:	ldur	x2, [x29, #-168]
   2e7d8:	cmp	x20, x22
   2e7dc:	csel	x25, x20, x22, cc  // cc = lo, ul, last
   2e7e0:	add	x21, x8, w15, uxtw
   2e7e4:	add	x0, x12, x25
   2e7e8:	add	x1, x21, x25
   2e7ec:	stur	w9, [x29, #-144]
   2e7f0:	mov	w19, w15
   2e7f4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2e7f8:	add	x8, x0, x25
   2e7fc:	cmp	x8, x26
   2e800:	b.ls	2e864 <ZSTD_endStream@@Base+0x20910>  // b.plast
   2e804:	ldur	x13, [x29, #-160]
   2e808:	ldr	w14, [sp, #144]
   2e80c:	sub	w12, w24, w19
   2e810:	add	w11, w19, w8
   2e814:	add	x13, x13, w28, uxtw #3
   2e818:	stp	w12, w8, [x13]
   2e81c:	ldur	x13, [x29, #-112]
   2e820:	sub	w10, w14, w19
   2e824:	cmp	x8, x10
   2e828:	mov	w9, wzr
   2e82c:	csel	w14, w11, w14, hi  // hi = pmore
   2e830:	cmp	x8, #0x1, lsl #12
   2e834:	add	w28, w28, #0x1
   2e838:	mov	w15, w19
   2e83c:	str	w14, [sp, #144]
   2e840:	b.hi	2e8fc <ZSTD_endStream@@Base+0x209a8>  // b.pmore
   2e844:	ldur	x12, [x29, #-88]
   2e848:	ldur	x11, [x29, #-168]
   2e84c:	mov	x26, x8
   2e850:	add	x10, x12, x8
   2e854:	cmp	x10, x11
   2e858:	b.ne	2e870 <ZSTD_endStream@@Base+0x2091c>  // b.any
   2e85c:	ldur	x21, [x29, #-176]
   2e860:	b	2e904 <ZSTD_endStream@@Base+0x209b0>
   2e864:	ldur	x13, [x29, #-112]
   2e868:	ldur	x12, [x29, #-88]
   2e86c:	mov	w15, w19
   2e870:	ldrb	w9, [x21, x8]
   2e874:	ldrb	w10, [x12, x8]
   2e878:	ldr	w11, [sp, #64]
   2e87c:	cmp	w9, w10
   2e880:	ldr	x9, [sp, #72]
   2e884:	and	w11, w15, w11
   2e888:	lsl	w11, w11, #1
   2e88c:	add	x9, x9, w11, uxtw #2
   2e890:	b.cs	2e8bc <ZSTD_endStream@@Base+0x20968>  // b.hs, b.nlast
   2e894:	ldr	w10, [sp, #60]
   2e898:	ldur	x21, [x29, #-176]
   2e89c:	cmp	w15, w10
   2e8a0:	ldr	x10, [sp, #96]
   2e8a4:	str	w15, [x10]
   2e8a8:	b.hi	2e7a0 <ZSTD_endStream@@Base+0x2084c>  // b.pmore
   2e8ac:	sub	x10, x29, #0x40
   2e8b0:	mov	w9, wzr
   2e8b4:	str	x10, [sp, #96]
   2e8b8:	b	2e7b0 <ZSTD_endStream@@Base+0x2085c>
   2e8bc:	ldr	w10, [sp, #60]
   2e8c0:	ldur	x21, [x29, #-176]
   2e8c4:	cmp	w15, w10
   2e8c8:	ldr	x10, [sp, #88]
   2e8cc:	str	w15, [x10]
   2e8d0:	b.ls	2e8e4 <ZSTD_endStream@@Base+0x20990>  // b.plast
   2e8d4:	str	x9, [sp, #88]
   2e8d8:	mov	x22, x8
   2e8dc:	mov	x8, x20
   2e8e0:	b	2e7a8 <ZSTD_endStream@@Base+0x20854>
   2e8e4:	sub	x10, x29, #0x40
   2e8e8:	mov	w9, wzr
   2e8ec:	str	x10, [sp, #88]
   2e8f0:	mov	x22, x8
   2e8f4:	mov	x8, x20
   2e8f8:	b	2e7b0 <ZSTD_endStream@@Base+0x2085c>
   2e8fc:	ldur	x21, [x29, #-176]
   2e900:	ldur	x12, [x29, #-88]
   2e904:	mov	x26, x8
   2e908:	mov	x8, x20
   2e90c:	b	2e7b0 <ZSTD_endStream@@Base+0x2085c>
   2e910:	ldr	x8, [sp, #88]
   2e914:	ldur	x22, [x29, #-72]
   2e918:	mov	w24, w28
   2e91c:	str	wzr, [x8]
   2e920:	ldr	x8, [sp, #96]
   2e924:	str	wzr, [x8]
   2e928:	ldr	w8, [sp, #144]
   2e92c:	sub	w8, w8, #0x8
   2e930:	str	w8, [x22, #36]
   2e934:	ldur	x26, [x29, #-80]
   2e938:	b	2ece0 <ZSTD_endStream@@Base+0x20d8c>
   2e93c:	mov	w8, wzr
   2e940:	cbz	w8, 2efe8 <ZSTD_endStream@@Base+0x21094>
   2e944:	ldr	x27, [sp, #176]
   2e948:	ldp	x26, x22, [x29, #-80]
   2e94c:	ldur	x21, [x29, #-176]
   2e950:	ldur	x13, [x29, #-112]
   2e954:	ldur	w0, [x29, #-96]
   2e958:	cbnz	w24, 2ecec <ZSTD_endStream@@Base+0x20d98>
   2e95c:	mov	w8, #0x13                  	// #19
   2e960:	b	2efb4 <ZSTD_endStream@@Base+0x21060>
   2e964:	mov	w8, wzr
   2e968:	ldr	x27, [sp, #176]
   2e96c:	ldur	x26, [x29, #-80]
   2e970:	ldur	x21, [x29, #-176]
   2e974:	ldur	x13, [x29, #-112]
   2e978:	cbnz	w8, 2ece0 <ZSTD_endStream@@Base+0x20d8c>
   2e97c:	ldr	x8, [sp, #16]
   2e980:	ldr	w9, [sp, #8]
   2e984:	ldr	x10, [sp]
   2e988:	ldr	w24, [sp, #28]
   2e98c:	mov	x22, xzr
   2e990:	mov	x20, xzr
   2e994:	str	w9, [x8, x10, lsl #2]
   2e998:	add	w8, w9, #0x2
   2e99c:	stur	w8, [x29, #-120]
   2e9a0:	b	2e9bc <ZSTD_endStream@@Base+0x20a68>
   2e9a4:	add	x9, x9, #0x4
   2e9a8:	str	x9, [sp, #96]
   2e9ac:	ldr	w24, [x9]
   2e9b0:	mov	w9, #0x1                   	// #1
   2e9b4:	mov	x20, x8
   2e9b8:	tbz	w9, #0, 2ecbc <ZSTD_endStream@@Base+0x20d68>
   2e9bc:	ldur	w9, [x29, #-144]
   2e9c0:	subs	w9, w9, #0x1
   2e9c4:	b.cc	2ecbc <ZSTD_endStream@@Base+0x20d68>  // b.lo, b.ul, b.last
   2e9c8:	ldr	w8, [sp, #140]
   2e9cc:	cmp	w24, w8
   2e9d0:	b.cc	2ecbc <ZSTD_endStream@@Base+0x20d68>  // b.lo, b.ul, b.last
   2e9d4:	ldr	x8, [sp, #128]
   2e9d8:	ldur	x2, [x29, #-168]
   2e9dc:	cmp	x20, x22
   2e9e0:	csel	x25, x20, x22, cc  // cc = lo, ul, last
   2e9e4:	add	x21, x8, w24, uxtw
   2e9e8:	add	x0, x12, x25
   2e9ec:	add	x1, x21, x25
   2e9f0:	stur	w9, [x29, #-144]
   2e9f4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2e9f8:	add	x8, x0, x25
   2e9fc:	cmp	x8, x23
   2ea00:	b.ls	2ea64 <ZSTD_endStream@@Base+0x20b10>  // b.plast
   2ea04:	ldr	w14, [sp, #144]
   2ea08:	ldur	w12, [x29, #-120]
   2ea0c:	ldur	x13, [x29, #-160]
   2ea10:	add	w11, w24, w8
   2ea14:	sub	w10, w14, w24
   2ea18:	cmp	x8, x10
   2ea1c:	mov	w9, wzr
   2ea20:	sub	w12, w12, w24
   2ea24:	add	x13, x13, w28, uxtw #3
   2ea28:	csel	w14, w11, w14, hi  // hi = pmore
   2ea2c:	cmp	x8, #0x1, lsl #12
   2ea30:	add	w28, w28, #0x1
   2ea34:	stp	w12, w8, [x13]
   2ea38:	str	w14, [sp, #144]
   2ea3c:	b.hi	2eaf8 <ZSTD_endStream@@Base+0x20ba4>  // b.pmore
   2ea40:	ldur	x12, [x29, #-88]
   2ea44:	ldur	x11, [x29, #-168]
   2ea48:	mov	x23, x8
   2ea4c:	add	x10, x12, x8
   2ea50:	cmp	x10, x11
   2ea54:	b.ne	2ea68 <ZSTD_endStream@@Base+0x20b14>  // b.any
   2ea58:	ldur	x21, [x29, #-176]
   2ea5c:	ldur	x13, [x29, #-112]
   2ea60:	b	2eb04 <ZSTD_endStream@@Base+0x20bb0>
   2ea64:	ldur	x12, [x29, #-88]
   2ea68:	ldrb	w9, [x21, x8]
   2ea6c:	ldrb	w10, [x12, x8]
   2ea70:	ldr	w11, [sp, #64]
   2ea74:	ldur	x13, [x29, #-112]
   2ea78:	cmp	w9, w10
   2ea7c:	ldr	x9, [sp, #72]
   2ea80:	and	w11, w24, w11
   2ea84:	lsl	w11, w11, #1
   2ea88:	add	x9, x9, w11, uxtw #2
   2ea8c:	b.cs	2eab8 <ZSTD_endStream@@Base+0x20b64>  // b.hs, b.nlast
   2ea90:	ldr	w10, [sp, #60]
   2ea94:	ldur	x21, [x29, #-176]
   2ea98:	cmp	w24, w10
   2ea9c:	ldr	x10, [sp, #96]
   2eaa0:	str	w24, [x10]
   2eaa4:	b.hi	2e9a4 <ZSTD_endStream@@Base+0x20a50>  // b.pmore
   2eaa8:	sub	x10, x29, #0x40
   2eaac:	mov	w9, wzr
   2eab0:	str	x10, [sp, #96]
   2eab4:	b	2e9b4 <ZSTD_endStream@@Base+0x20a60>
   2eab8:	ldr	w10, [sp, #60]
   2eabc:	ldur	x21, [x29, #-176]
   2eac0:	cmp	w24, w10
   2eac4:	ldr	x10, [sp, #88]
   2eac8:	str	w24, [x10]
   2eacc:	b.ls	2eae0 <ZSTD_endStream@@Base+0x20b8c>  // b.plast
   2ead0:	str	x9, [sp, #88]
   2ead4:	mov	x22, x8
   2ead8:	mov	x8, x20
   2eadc:	b	2e9ac <ZSTD_endStream@@Base+0x20a58>
   2eae0:	sub	x10, x29, #0x40
   2eae4:	mov	w9, wzr
   2eae8:	str	x10, [sp, #88]
   2eaec:	mov	x22, x8
   2eaf0:	mov	x8, x20
   2eaf4:	b	2e9b4 <ZSTD_endStream@@Base+0x20a60>
   2eaf8:	ldur	x21, [x29, #-176]
   2eafc:	ldur	x13, [x29, #-112]
   2eb00:	ldur	x12, [x29, #-88]
   2eb04:	mov	x23, x8
   2eb08:	mov	x8, x20
   2eb0c:	b	2e9b4 <ZSTD_endStream@@Base+0x20a60>
   2eb10:	mov	w8, wzr
   2eb14:	ldr	x27, [sp, #176]
   2eb18:	ldur	x26, [x29, #-80]
   2eb1c:	ldur	x21, [x29, #-176]
   2eb20:	ldur	x13, [x29, #-112]
   2eb24:	cbnz	w8, 2ece0 <ZSTD_endStream@@Base+0x20d8c>
   2eb28:	ldr	x8, [sp, #16]
   2eb2c:	ldr	w9, [sp, #8]
   2eb30:	ldr	x10, [sp]
   2eb34:	ldr	w24, [sp, #28]
   2eb38:	mov	x22, xzr
   2eb3c:	mov	x20, xzr
   2eb40:	str	w9, [x8, x10, lsl #2]
   2eb44:	add	w8, w9, #0x2
   2eb48:	stur	w8, [x29, #-120]
   2eb4c:	b	2eb68 <ZSTD_endStream@@Base+0x20c14>
   2eb50:	add	x9, x9, #0x4
   2eb54:	str	x9, [sp, #96]
   2eb58:	ldr	w24, [x9]
   2eb5c:	mov	w9, #0x1                   	// #1
   2eb60:	mov	x20, x8
   2eb64:	tbz	w9, #0, 2ecbc <ZSTD_endStream@@Base+0x20d68>
   2eb68:	ldur	w9, [x29, #-144]
   2eb6c:	subs	w9, w9, #0x1
   2eb70:	b.cc	2ecbc <ZSTD_endStream@@Base+0x20d68>  // b.lo, b.ul, b.last
   2eb74:	ldr	w8, [sp, #140]
   2eb78:	cmp	w24, w8
   2eb7c:	b.cc	2ecbc <ZSTD_endStream@@Base+0x20d68>  // b.lo, b.ul, b.last
   2eb80:	ldr	x8, [sp, #128]
   2eb84:	ldur	x2, [x29, #-168]
   2eb88:	cmp	x20, x22
   2eb8c:	csel	x25, x20, x22, cc  // cc = lo, ul, last
   2eb90:	add	x21, x8, w24, uxtw
   2eb94:	add	x0, x12, x25
   2eb98:	add	x1, x21, x25
   2eb9c:	stur	w9, [x29, #-144]
   2eba0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2eba4:	add	x8, x0, x25
   2eba8:	cmp	x8, x23
   2ebac:	b.ls	2ec10 <ZSTD_endStream@@Base+0x20cbc>  // b.plast
   2ebb0:	ldr	w14, [sp, #144]
   2ebb4:	ldur	w12, [x29, #-120]
   2ebb8:	ldur	x13, [x29, #-160]
   2ebbc:	add	w11, w24, w8
   2ebc0:	sub	w10, w14, w24
   2ebc4:	cmp	x8, x10
   2ebc8:	mov	w9, wzr
   2ebcc:	sub	w12, w12, w24
   2ebd0:	add	x13, x13, w28, uxtw #3
   2ebd4:	csel	w14, w11, w14, hi  // hi = pmore
   2ebd8:	cmp	x8, #0x1, lsl #12
   2ebdc:	add	w28, w28, #0x1
   2ebe0:	stp	w12, w8, [x13]
   2ebe4:	str	w14, [sp, #144]
   2ebe8:	b.hi	2eca4 <ZSTD_endStream@@Base+0x20d50>  // b.pmore
   2ebec:	ldur	x12, [x29, #-88]
   2ebf0:	ldur	x11, [x29, #-168]
   2ebf4:	mov	x23, x8
   2ebf8:	add	x10, x12, x8
   2ebfc:	cmp	x10, x11
   2ec00:	b.ne	2ec14 <ZSTD_endStream@@Base+0x20cc0>  // b.any
   2ec04:	ldur	x21, [x29, #-176]
   2ec08:	ldur	x13, [x29, #-112]
   2ec0c:	b	2ecb0 <ZSTD_endStream@@Base+0x20d5c>
   2ec10:	ldur	x12, [x29, #-88]
   2ec14:	ldrb	w9, [x21, x8]
   2ec18:	ldrb	w10, [x12, x8]
   2ec1c:	ldr	w11, [sp, #64]
   2ec20:	ldur	x13, [x29, #-112]
   2ec24:	cmp	w9, w10
   2ec28:	ldr	x9, [sp, #72]
   2ec2c:	and	w11, w24, w11
   2ec30:	lsl	w11, w11, #1
   2ec34:	add	x9, x9, w11, uxtw #2
   2ec38:	b.cs	2ec64 <ZSTD_endStream@@Base+0x20d10>  // b.hs, b.nlast
   2ec3c:	ldr	w10, [sp, #60]
   2ec40:	ldur	x21, [x29, #-176]
   2ec44:	cmp	w24, w10
   2ec48:	ldr	x10, [sp, #96]
   2ec4c:	str	w24, [x10]
   2ec50:	b.hi	2eb50 <ZSTD_endStream@@Base+0x20bfc>  // b.pmore
   2ec54:	sub	x10, x29, #0x40
   2ec58:	mov	w9, wzr
   2ec5c:	str	x10, [sp, #96]
   2ec60:	b	2eb60 <ZSTD_endStream@@Base+0x20c0c>
   2ec64:	ldr	w10, [sp, #60]
   2ec68:	ldur	x21, [x29, #-176]
   2ec6c:	cmp	w24, w10
   2ec70:	ldr	x10, [sp, #88]
   2ec74:	str	w24, [x10]
   2ec78:	b.ls	2ec8c <ZSTD_endStream@@Base+0x20d38>  // b.plast
   2ec7c:	str	x9, [sp, #88]
   2ec80:	mov	x22, x8
   2ec84:	mov	x8, x20
   2ec88:	b	2eb58 <ZSTD_endStream@@Base+0x20c04>
   2ec8c:	sub	x10, x29, #0x40
   2ec90:	mov	w9, wzr
   2ec94:	str	x10, [sp, #88]
   2ec98:	mov	x22, x8
   2ec9c:	mov	x8, x20
   2eca0:	b	2eb60 <ZSTD_endStream@@Base+0x20c0c>
   2eca4:	ldur	x21, [x29, #-176]
   2eca8:	ldur	x13, [x29, #-112]
   2ecac:	ldur	x12, [x29, #-88]
   2ecb0:	mov	x23, x8
   2ecb4:	mov	x8, x20
   2ecb8:	b	2eb60 <ZSTD_endStream@@Base+0x20c0c>
   2ecbc:	ldr	x8, [sp, #88]
   2ecc0:	mov	w24, w28
   2ecc4:	str	wzr, [x8]
   2ecc8:	ldr	x8, [sp, #96]
   2eccc:	str	wzr, [x8]
   2ecd0:	ldr	w8, [sp, #144]
   2ecd4:	ldur	x22, [x29, #-72]
   2ecd8:	sub	w8, w8, #0x8
   2ecdc:	str	w8, [x22, #36]
   2ece0:	mov	w23, #0x1c                  	// #28
   2ece4:	ldur	w0, [x29, #-96]
   2ece8:	cbz	w24, 2e95c <ZSTD_endStream@@Base+0x20a08>
   2ecec:	ldur	x9, [x29, #-160]
   2ecf0:	sub	w8, w24, #0x1
   2ecf4:	ldur	w12, [x29, #-100]
   2ecf8:	add	x9, x9, w8, uxtw #3
   2ecfc:	ldr	w11, [x9, #4]
   2ed00:	ldr	w9, [sp, #136]
   2ed04:	cmp	w11, w9
   2ed08:	b.hi	2ed2c <ZSTD_endStream@@Base+0x20dd8>  // b.pmore
   2ed0c:	add	w9, w11, w12
   2ed10:	cmp	w9, #0x1, lsl #12
   2ed14:	b.cs	2ed2c <ZSTD_endStream@@Base+0x20dd8>  // b.hs, b.nlast
   2ed18:	ldur	w25, [x29, #-192]
   2ed1c:	mov	w8, wzr
   2ed20:	cbz	w8, 2edac <ZSTD_endStream@@Base+0x20e58>
   2ed24:	stur	w25, [x29, #-192]
   2ed28:	b	2efb8 <ZSTD_endStream@@Base+0x21064>
   2ed2c:	ldr	x9, [sp, #120]
   2ed30:	ldur	x10, [x29, #-160]
   2ed34:	lsl	x8, x8, #3
   2ed38:	ldr	w9, [x9]
   2ed3c:	ldr	w8, [x10, x8]
   2ed40:	str	w8, [sp, #164]
   2ed44:	cbz	w9, 2ed50 <ZSTD_endStream@@Base+0x20dfc>
   2ed48:	mov	w8, wzr
   2ed4c:	b	2ed58 <ZSTD_endStream@@Base+0x20e04>
   2ed50:	madd	x8, x13, x23, x26
   2ed54:	ldr	w8, [x8, #12]
   2ed58:	sub	w19, w12, w8
   2ed5c:	ldr	w8, [sp, #160]
   2ed60:	ldur	x9, [x29, #-24]
   2ed64:	ldur	w20, [x29, #-124]
   2ed68:	ldr	x10, [sp, #48]
   2ed6c:	stur	w8, [x29, #-64]
   2ed70:	ldr	w8, [sp, #164]
   2ed74:	sub	x0, x29, #0x40
   2ed78:	mov	w25, w11
   2ed7c:	stur	w20, [x29, #-52]
   2ed80:	stp	w8, w11, [x29, #-60]
   2ed84:	ldur	w8, [x29, #-16]
   2ed88:	str	x9, [x10]
   2ed8c:	str	w8, [x10, #8]
   2ed90:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2ed94:	cmp	w19, #0x1, lsl #12
   2ed98:	add	w0, w0, w19
   2ed9c:	csel	w12, wzr, w19, hi  // hi = pmore
   2eda0:	mov	w8, #0x7                   	// #7
   2eda4:	str	w20, [sp, #156]
   2eda8:	cbnz	w8, 2ed24 <ZSTD_endStream@@Base+0x20dd0>
   2edac:	ldr	w8, [sp, #116]
   2edb0:	ldr	w9, [sp, #104]
   2edb4:	str	w25, [sp, #144]
   2edb8:	mov	x25, xzr
   2edbc:	stur	w12, [x29, #-100]
   2edc0:	add	w8, w9, w8
   2edc4:	stur	w8, [x29, #-88]
   2edc8:	umaddl	x8, w12, w23, x26
   2edcc:	add	x8, x8, #0x10
   2edd0:	str	x8, [sp, #208]
   2edd4:	mov	w8, w24
   2edd8:	str	x8, [sp, #200]
   2eddc:	b	2edf8 <ZSTD_endStream@@Base+0x20ea4>
   2ede0:	mov	w0, w24
   2ede4:	ldur	x25, [x29, #-192]
   2ede8:	ldr	x8, [sp, #200]
   2edec:	add	x25, x25, #0x1
   2edf0:	cmp	x25, x8
   2edf4:	b.cs	2efa0 <ZSTD_endStream@@Base+0x2104c>  // b.hs, b.nlast
   2edf8:	ldur	x20, [x29, #-160]
   2edfc:	mov	w24, w0
   2ee00:	ldr	x0, [sp, #208]
   2ee04:	ldr	w2, [sp, #216]
   2ee08:	add	x19, x20, x25, lsl #3
   2ee0c:	ldr	w1, [x19]
   2ee10:	stur	w1, [x29, #-96]
   2ee14:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   2ee18:	stp	x1, x0, [x29, #-120]
   2ee1c:	ldr	w27, [x19, #4]
   2ee20:	ldr	w21, [sp, #196]
   2ee24:	cbz	x25, 2ee38 <ZSTD_endStream@@Base+0x20ee4>
   2ee28:	sub	w8, w25, #0x1
   2ee2c:	add	x8, x20, w8, uxtw #3
   2ee30:	ldr	w8, [x8, #4]
   2ee34:	add	w21, w8, #0x1
   2ee38:	cmp	w27, w21
   2ee3c:	mov	w19, #0x40000000            	// #1073741824
   2ee40:	stur	x25, [x29, #-192]
   2ee44:	b.cc	2ede0 <ZSTD_endStream@@Base+0x20e8c>  // b.lo, b.ul, b.last
   2ee48:	ldur	w8, [x29, #-96]
   2ee4c:	add	w0, w8, #0x1
   2ee50:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   2ee54:	lsl	w8, w0, #8
   2ee58:	add	w8, w8, #0x1, lsl #12
   2ee5c:	stur	w8, [x29, #-144]
   2ee60:	ldur	w8, [x29, #-100]
   2ee64:	mov	w20, w0
   2ee68:	mov	w0, w24
   2ee6c:	add	w8, w27, w8
   2ee70:	b	2eea8 <ZSTD_endStream@@Base+0x20f54>
   2ee74:	ldur	w10, [x29, #-124]
   2ee78:	umaddl	x9, w24, w23, x26
   2ee7c:	stp	w27, w10, [x9, #8]
   2ee80:	ldur	w10, [x29, #-96]
   2ee84:	stp	w8, w10, [x9]
   2ee88:	ldur	x8, [x29, #-112]
   2ee8c:	str	x8, [x9, #16]
   2ee90:	ldur	x8, [x29, #-120]
   2ee94:	str	w8, [x9, #24]
   2ee98:	sub	w27, w27, #0x1
   2ee9c:	cmp	w27, w21
   2eea0:	sub	w8, w25, #0x1
   2eea4:	b.cc	2ede4 <ZSTD_endStream@@Base+0x20e90>  // b.lo, b.ul, b.last
   2eea8:	ldr	w9, [x22, #152]
   2eeac:	mov	w25, w8
   2eeb0:	ldur	w8, [x29, #-100]
   2eeb4:	sub	w26, w27, #0x3
   2eeb8:	cmp	w9, #0x1
   2eebc:	add	w24, w27, w8
   2eec0:	b.ne	2eee0 <ZSTD_endStream@@Base+0x20f8c>  // b.any
   2eec4:	mov	w28, w0
   2eec8:	mov	w0, w26
   2eecc:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2eed0:	ldur	w8, [x29, #-144]
   2eed4:	add	w8, w8, w0
   2eed8:	mov	w0, w28
   2eedc:	b	2ef50 <ZSTD_endStream@@Base+0x20ffc>
   2eee0:	ldr	x8, [x22, #96]
   2eee4:	mov	w28, w0
   2eee8:	ldr	w23, [x22, #148]
   2eeec:	ldr	w0, [x8, x20, lsl #2]
   2eef0:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2eef4:	mov	w19, w0
   2eef8:	mov	w0, w26
   2eefc:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   2ef00:	mov	w8, w0
   2ef04:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   2ef08:	ldr	x9, [x22, #88]
   2ef0c:	lsl	x8, x8, #2
   2ef10:	add	x10, x10, #0xca8
   2ef14:	ldr	w26, [x10, x8]
   2ef18:	ldur	x10, [x29, #-72]
   2ef1c:	ldr	w0, [x9, x8]
   2ef20:	ldr	w22, [x10, #144]
   2ef24:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2ef28:	sub	w9, w23, w19
   2ef2c:	add	w8, w26, w20
   2ef30:	add	w9, w9, w22
   2ef34:	ldur	x22, [x29, #-72]
   2ef38:	add	w8, w9, w8, lsl #8
   2ef3c:	sub	w8, w8, w0
   2ef40:	mov	w19, #0x40000000            	// #1073741824
   2ef44:	mov	w23, #0x1c                  	// #28
   2ef48:	mov	w0, w28
   2ef4c:	add	w8, w8, #0x33
   2ef50:	ldur	w9, [x29, #-88]
   2ef54:	ldur	x26, [x29, #-80]
   2ef58:	cmp	w24, w0
   2ef5c:	add	w8, w9, w8
   2ef60:	b.hi	2ef7c <ZSTD_endStream@@Base+0x21028>  // b.pmore
   2ef64:	umull	x9, w24, w23
   2ef68:	ldr	w9, [x26, x9]
   2ef6c:	cmp	w8, w9
   2ef70:	b.ge	2ee98 <ZSTD_endStream@@Base+0x20f44>  // b.tcont
   2ef74:	cmp	w24, w0
   2ef78:	b.ls	2ee74 <ZSTD_endStream@@Base+0x20f20>  // b.plast
   2ef7c:	ldur	x10, [x29, #-136]
   2ef80:	mov	w9, w0
   2ef84:	umaddl	x10, w0, w23, x10
   2ef88:	add	x9, x9, #0x1
   2ef8c:	cmp	x25, x9
   2ef90:	str	w19, [x10], #28
   2ef94:	b.ne	2ef88 <ZSTD_endStream@@Base+0x21034>  // b.any
   2ef98:	mov	w0, w9
   2ef9c:	b	2ee74 <ZSTD_endStream@@Base+0x20f20>
   2efa0:	ldr	w9, [sp, #144]
   2efa4:	ldr	x27, [sp, #176]
   2efa8:	ldur	x21, [x29, #-176]
   2efac:	mov	w8, wzr
   2efb0:	stur	w9, [x29, #-192]
   2efb4:	ldur	w12, [x29, #-100]
   2efb8:	cmp	w8, #0x13
   2efbc:	b.hi	2ccf4 <ZSTD_endStream@@Base+0x1eda0>  // b.pmore
   2efc0:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   2efc4:	add	x11, x11, #0xae4
   2efc8:	adr	x9, 2ccf4 <ZSTD_endStream@@Base+0x1eda0>
   2efcc:	ldrh	w10, [x11, x8, lsl #1]
   2efd0:	add	x9, x9, x10, lsl #2
   2efd4:	br	x9
   2efd8:	add	w12, w12, #0x1
   2efdc:	cmp	w12, w0
   2efe0:	b.ls	2dd04 <ZSTD_endStream@@Base+0x1fdb0>  // b.plast
   2efe4:	b	2f2b8 <ZSTD_endStream@@Base+0x21364>
   2efe8:	ldr	x27, [sp, #176]
   2efec:	ldur	x22, [x29, #-72]
   2eff0:	ldur	x21, [x29, #-176]
   2eff4:	ldur	x13, [x29, #-112]
   2eff8:	cmp	x19, #0x2
   2effc:	b.hi	2f05c <ZSTD_endStream@@Base+0x21108>  // b.pmore
   2f000:	sub	x1, x29, #0xc
   2f004:	mov	x0, x22
   2f008:	mov	x2, x28
   2f00c:	mov	x25, x13
   2f010:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   2f014:	ldr	w8, [sp, #140]
   2f018:	cmp	w0, w8
   2f01c:	b.cc	2f064 <ZSTD_endStream@@Base+0x21110>  // b.lo, b.ul, b.last
   2f020:	ldr	w8, [sp, #28]
   2f024:	sub	w20, w8, w0
   2f028:	lsr	w8, w20, #18
   2f02c:	cbnz	w8, 2f064 <ZSTD_endStream@@Base+0x21110>
   2f030:	ldr	x8, [sp, #128]
   2f034:	ldur	x2, [x29, #-168]
   2f038:	add	x1, x8, w0, uxtw
   2f03c:	ldur	x0, [x29, #-88]
   2f040:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2f044:	cmp	x0, #0x3
   2f048:	b.cs	2f074 <ZSTD_endStream@@Base+0x21120>  // b.hs, b.nlast
   2f04c:	ldur	x28, [x29, #-88]
   2f050:	mov	w8, wzr
   2f054:	mov	x0, x19
   2f058:	b	2f0c4 <ZSTD_endStream@@Base+0x21170>
   2f05c:	ldr	w14, [sp, #16]
   2f060:	b	2f0e4 <ZSTD_endStream@@Base+0x21190>
   2f064:	ldur	x28, [x29, #-88]
   2f068:	ldr	w14, [sp, #16]
   2f06c:	mov	x13, x25
   2f070:	b	2f0d4 <ZSTD_endStream@@Base+0x21180>
   2f074:	ldr	w9, [sp, #200]
   2f078:	add	w8, w20, #0x2
   2f07c:	cmp	x0, w9, uxtw
   2f080:	ldur	x9, [x29, #-160]
   2f084:	stp	w8, w0, [x9]
   2f088:	ldur	x28, [x29, #-88]
   2f08c:	b.hi	2f0ac <ZSTD_endStream@@Base+0x21158>  // b.pmore
   2f090:	ldur	x9, [x29, #-168]
   2f094:	add	x8, x28, x0
   2f098:	cmp	x8, x9
   2f09c:	b.eq	2f0ac <ZSTD_endStream@@Base+0x21158>  // b.none
   2f0a0:	mov	w8, wzr
   2f0a4:	mov	w26, #0x1                   	// #1
   2f0a8:	b	2f0c4 <ZSTD_endStream@@Base+0x21170>
   2f0ac:	ldr	w8, [sp, #28]
   2f0b0:	mov	w26, #0x1                   	// #1
   2f0b4:	mov	w24, #0x1                   	// #1
   2f0b8:	add	w9, w8, #0x1
   2f0bc:	mov	w8, #0x1                   	// #1
   2f0c0:	str	w9, [x22, #36]
   2f0c4:	ldr	w14, [sp, #16]
   2f0c8:	mov	x13, x25
   2f0cc:	mov	x19, x0
   2f0d0:	cbnz	w8, 2f0dc <ZSTD_endStream@@Base+0x21188>
   2f0d4:	mov	w8, wzr
   2f0d8:	mov	x0, x19
   2f0dc:	mov	x19, x0
   2f0e0:	cbnz	w8, 2f298 <ZSTD_endStream@@Base+0x21344>
   2f0e4:	ldp	x10, x8, [sp]
   2f0e8:	ldr	w9, [sp, #28]
   2f0ec:	mov	w24, w26
   2f0f0:	ldur	x26, [x29, #-160]
   2f0f4:	mov	x22, xzr
   2f0f8:	mov	x21, xzr
   2f0fc:	str	w9, [x8, x10, lsl #2]
   2f100:	add	w8, w9, #0x2
   2f104:	stur	w8, [x29, #-120]
   2f108:	b	2f124 <ZSTD_endStream@@Base+0x211d0>
   2f10c:	ldur	x13, [x29, #-112]
   2f110:	ldur	x28, [x29, #-88]
   2f114:	mov	x19, x8
   2f118:	mov	x8, x21
   2f11c:	mov	x21, x8
   2f120:	tbz	w9, #0, 2f270 <ZSTD_endStream@@Base+0x2131c>
   2f124:	ldr	w9, [sp, #208]
   2f128:	subs	w9, w9, #0x1
   2f12c:	b.cc	2f270 <ZSTD_endStream@@Base+0x2131c>  // b.lo, b.ul, b.last
   2f130:	ldr	w8, [sp, #140]
   2f134:	cmp	w14, w8
   2f138:	b.cc	2f270 <ZSTD_endStream@@Base+0x2131c>  // b.lo, b.ul, b.last
   2f13c:	ldr	x8, [sp, #128]
   2f140:	ldur	x2, [x29, #-168]
   2f144:	cmp	x21, x22
   2f148:	csel	x25, x21, x22, cc  // cc = lo, ul, last
   2f14c:	add	x20, x8, w14, uxtw
   2f150:	add	x0, x28, x25
   2f154:	add	x1, x20, x25
   2f158:	str	w9, [sp, #208]
   2f15c:	mov	w23, w14
   2f160:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2f164:	add	x8, x0, x25
   2f168:	cmp	x8, x19
   2f16c:	b.ls	2f1cc <ZSTD_endStream@@Base+0x21278>  // b.plast
   2f170:	ldr	w14, [sp, #144]
   2f174:	ldur	w12, [x29, #-120]
   2f178:	add	w11, w23, w8
   2f17c:	add	x13, x26, w24, uxtw #3
   2f180:	sub	w10, w14, w23
   2f184:	cmp	x8, x10
   2f188:	sub	w12, w12, w23
   2f18c:	csel	w14, w11, w14, hi  // hi = pmore
   2f190:	mov	w9, wzr
   2f194:	stp	w12, w8, [x13]
   2f198:	str	w14, [sp, #144]
   2f19c:	cmp	x8, #0x1, lsl #12
   2f1a0:	add	w24, w24, #0x1
   2f1a4:	mov	w14, w23
   2f1a8:	b.hi	2f10c <ZSTD_endStream@@Base+0x211b8>  // b.pmore
   2f1ac:	ldur	x28, [x29, #-88]
   2f1b0:	ldur	x11, [x29, #-168]
   2f1b4:	ldur	x13, [x29, #-112]
   2f1b8:	mov	x19, x8
   2f1bc:	add	x10, x28, x8
   2f1c0:	cmp	x10, x11
   2f1c4:	b.ne	2f1d8 <ZSTD_endStream@@Base+0x21284>  // b.any
   2f1c8:	b	2f114 <ZSTD_endStream@@Base+0x211c0>
   2f1cc:	ldur	x13, [x29, #-112]
   2f1d0:	ldur	x28, [x29, #-88]
   2f1d4:	mov	w14, w23
   2f1d8:	ldrb	w9, [x20, x8]
   2f1dc:	ldrb	w10, [x28, x8]
   2f1e0:	ldr	w11, [sp, #60]
   2f1e4:	cmp	w9, w10
   2f1e8:	ldr	x9, [sp, #64]
   2f1ec:	and	w11, w14, w11
   2f1f0:	lsl	w11, w11, #1
   2f1f4:	add	x9, x9, w11, uxtw #2
   2f1f8:	b.cs	2f21c <ZSTD_endStream@@Base+0x212c8>  // b.hs, b.nlast
   2f1fc:	ldr	w10, [sp, #40]
   2f200:	cmp	w14, w10
   2f204:	ldr	x10, [sp, #88]
   2f208:	str	w14, [x10]
   2f20c:	b.ls	2f248 <ZSTD_endStream@@Base+0x212f4>  // b.plast
   2f210:	add	x9, x9, #0x4
   2f214:	str	x9, [sp, #88]
   2f218:	b	2f23c <ZSTD_endStream@@Base+0x212e8>
   2f21c:	ldr	w10, [sp, #40]
   2f220:	cmp	w14, w10
   2f224:	ldr	x10, [sp, #72]
   2f228:	str	w14, [x10]
   2f22c:	b.ls	2f258 <ZSTD_endStream@@Base+0x21304>  // b.plast
   2f230:	str	x9, [sp, #72]
   2f234:	mov	x22, x8
   2f238:	mov	x8, x21
   2f23c:	ldr	w14, [x9]
   2f240:	mov	w9, #0x1                   	// #1
   2f244:	b	2f11c <ZSTD_endStream@@Base+0x211c8>
   2f248:	sub	x10, x29, #0x40
   2f24c:	mov	w9, wzr
   2f250:	str	x10, [sp, #88]
   2f254:	b	2f11c <ZSTD_endStream@@Base+0x211c8>
   2f258:	sub	x10, x29, #0x40
   2f25c:	mov	w9, wzr
   2f260:	str	x10, [sp, #72]
   2f264:	mov	x22, x8
   2f268:	mov	x8, x21
   2f26c:	b	2f11c <ZSTD_endStream@@Base+0x211c8>
   2f270:	ldr	x8, [sp, #72]
   2f274:	ldur	x22, [x29, #-72]
   2f278:	ldur	x21, [x29, #-176]
   2f27c:	mov	w23, #0x1c                  	// #28
   2f280:	str	wzr, [x8]
   2f284:	ldr	x8, [sp, #88]
   2f288:	str	wzr, [x8]
   2f28c:	ldr	w8, [sp, #144]
   2f290:	sub	w8, w8, #0x8
   2f294:	str	w8, [x22, #36]
   2f298:	ldur	x26, [x29, #-80]
   2f29c:	ldur	w0, [x29, #-96]
   2f2a0:	cbnz	w24, 2ecec <ZSTD_endStream@@Base+0x20d98>
   2f2a4:	b	2e95c <ZSTD_endStream@@Base+0x20a08>
   2f2a8:	ldp	w20, w21, [sp, #160]
   2f2ac:	ldr	w22, [sp, #156]
   2f2b0:	ldur	w24, [x29, #-192]
   2f2b4:	b	2f334 <ZSTD_endStream@@Base+0x213e0>
   2f2b8:	umaddl	x8, w0, w23, x26
   2f2bc:	ldp	w20, w21, [x8]
   2f2c0:	ldr	w9, [x8, #24]
   2f2c4:	ldr	x10, [x8, #16]
   2f2c8:	ldp	w24, w22, [x8, #8]
   2f2cc:	stp	w20, w21, [x29, #-64]
   2f2d0:	stur	w9, [x29, #-16]
   2f2d4:	stur	x10, [x29, #-24]
   2f2d8:	stp	w24, w22, [x29, #-56]
   2f2dc:	ldr	w9, [x8, #24]
   2f2e0:	ldr	x8, [x8, #16]
   2f2e4:	ldr	x19, [sp, #48]
   2f2e8:	mov	w25, w0
   2f2ec:	sub	x0, x29, #0x40
   2f2f0:	str	w9, [x19, #8]
   2f2f4:	str	x8, [x19]
   2f2f8:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2f2fc:	cmp	w25, w0
   2f300:	b.ls	2f330 <ZSTD_endStream@@Base+0x213dc>  // b.plast
   2f304:	ldur	w8, [x29, #-16]
   2f308:	ldur	x9, [x29, #-24]
   2f30c:	sub	x0, x29, #0x40
   2f310:	stp	w20, w21, [x29, #-64]
   2f314:	stp	w24, w22, [x29, #-56]
   2f318:	str	w8, [x19, #8]
   2f31c:	str	x9, [x19]
   2f320:	mov	w19, w25
   2f324:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2f328:	sub	w12, w25, w0
   2f32c:	b	2f334 <ZSTD_endStream@@Base+0x213e0>
   2f330:	mov	w12, wzr
   2f334:	add	w19, w12, #0x1
   2f338:	umaddl	x8, w19, w23, x26
   2f33c:	stp	w20, w21, [sp, #160]
   2f340:	stp	w20, w21, [x8]
   2f344:	stur	w24, [x29, #-192]
   2f348:	stp	w24, w22, [x8, #8]
   2f34c:	ldur	w9, [x29, #-16]
   2f350:	ldur	x10, [x29, #-24]
   2f354:	mov	w20, w12
   2f358:	mov	w21, w12
   2f35c:	mov	w11, w12
   2f360:	str	w22, [sp, #156]
   2f364:	str	w9, [x8, #24]
   2f368:	str	x10, [x8, #16]
   2f36c:	stur	w12, [x29, #-100]
   2f370:	cbz	w12, 2f3bc <ZSTD_endStream@@Base+0x21468>
   2f374:	umaddl	x22, w21, w23, x26
   2f378:	ldur	q0, [x22, #12]
   2f37c:	ldr	q1, [x22]
   2f380:	sub	x0, x29, #0x40
   2f384:	stur	q0, [x29, #-52]
   2f388:	stur	q1, [x29, #-64]
   2f38c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2f390:	ldur	q0, [x22, #12]
   2f394:	ldr	q1, [x22]
   2f398:	subs	w9, w21, w0
   2f39c:	umaddl	x8, w20, w23, x26
   2f3a0:	sub	w20, w20, #0x1
   2f3a4:	csel	w21, wzr, w9, cc  // cc = lo, ul, last
   2f3a8:	stur	q0, [x8, #12]
   2f3ac:	str	q1, [x8]
   2f3b0:	b.hi	2f374 <ZSTD_endStream@@Base+0x21420>  // b.pmore
   2f3b4:	add	w28, w20, #0x1
   2f3b8:	b	2f3c0 <ZSTD_endStream@@Base+0x2146c>
   2f3bc:	mov	w28, w19
   2f3c0:	ldp	x8, x21, [x29, #-184]
   2f3c4:	ldur	x22, [x29, #-72]
   2f3c8:	ldur	x20, [x29, #-208]
   2f3cc:	cmp	w28, w19
   2f3d0:	b.ls	2f420 <ZSTD_endStream@@Base+0x214cc>  // b.plast
   2f3d4:	ldur	x0, [x29, #-200]
   2f3d8:	mov	w1, #0x2                   	// #2
   2f3dc:	mov	x19, x8
   2f3e0:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   2f3e4:	ldr	x8, [sp, #168]
   2f3e8:	mov	x2, x19
   2f3ec:	cmp	x2, x8
   2f3f0:	b.cc	2cd08 <ZSTD_endStream@@Base+0x1edb4>  // b.lo, b.ul, b.last
   2f3f4:	b	2f870 <ZSTD_endStream@@Base+0x2191c>
   2f3f8:	strh	w8, [x10, #6]
   2f3fc:	add	x8, x10, #0x8
   2f400:	str	x8, [x20, #8]
   2f404:	ldp	x26, x22, [x29, #-80]
   2f408:	add	x27, x27, w9, uxtw
   2f40c:	mov	x8, x27
   2f410:	mov	w23, #0x1c                  	// #28
   2f414:	add	w28, w28, #0x1
   2f418:	cmp	w28, w19
   2f41c:	b.hi	2f3d4 <ZSTD_endStream@@Base+0x21480>  // b.pmore
   2f420:	umaddl	x8, w28, w23, x26
   2f424:	ldp	w26, w25, [x8, #8]
   2f428:	cbz	w26, 2f450 <ZSTD_endStream@@Base+0x214fc>
   2f42c:	ldr	w23, [x8, #4]
   2f430:	cmp	w23, #0x3
   2f434:	b.cc	2f45c <ZSTD_endStream@@Base+0x21508>  // b.lo, b.ul, b.last
   2f438:	ldur	x10, [x29, #-152]
   2f43c:	ldp	w9, w8, [x10]
   2f440:	stp	w9, w8, [x10, #4]
   2f444:	ldur	x0, [x29, #-200]
   2f448:	sub	w8, w23, #0x2
   2f44c:	b	2f4b4 <ZSTD_endStream@@Base+0x21560>
   2f450:	ldur	x26, [x29, #-80]
   2f454:	add	x8, x27, x25
   2f458:	b	2f414 <ZSTD_endStream@@Base+0x214c0>
   2f45c:	ldur	x0, [x29, #-200]
   2f460:	cmp	w25, #0x0
   2f464:	cinc	w9, w23, eq  // eq = none
   2f468:	cbz	w9, 2f4b8 <ZSTD_endStream@@Base+0x21564>
   2f46c:	cmp	w9, #0x3
   2f470:	b.ne	2f48c <ZSTD_endStream@@Base+0x21538>  // b.any
   2f474:	ldur	x8, [x29, #-152]
   2f478:	ldr	w8, [x8]
   2f47c:	sub	w8, w8, #0x1
   2f480:	cmp	w9, #0x2
   2f484:	b.cs	2f49c <ZSTD_endStream@@Base+0x21548>  // b.hs, b.nlast
   2f488:	b	2f4a8 <ZSTD_endStream@@Base+0x21554>
   2f48c:	ldur	x8, [x29, #-152]
   2f490:	ldr	w8, [x8, w9, uxtw #2]
   2f494:	cmp	w9, #0x2
   2f498:	b.cc	2f4a8 <ZSTD_endStream@@Base+0x21554>  // b.lo, b.ul, b.last
   2f49c:	ldur	x10, [x29, #-152]
   2f4a0:	ldr	w9, [x10, #4]
   2f4a4:	str	w9, [x10, #8]
   2f4a8:	ldur	x10, [x29, #-152]
   2f4ac:	ldr	w9, [x10]
   2f4b0:	str	w9, [x10, #4]
   2f4b4:	str	w8, [x10]
   2f4b8:	mov	w1, w25
   2f4bc:	mov	x2, x27
   2f4c0:	mov	w3, w23
   2f4c4:	mov	w4, w26
   2f4c8:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   2f4cc:	ldr	x3, [sp, #184]
   2f4d0:	ldr	x0, [x20, #24]
   2f4d4:	add	x2, x27, x25
   2f4d8:	mov	x22, x27
   2f4dc:	mov	x1, x27
   2f4e0:	cmp	x2, x3
   2f4e4:	b.ls	2f4f0 <ZSTD_endStream@@Base+0x2159c>  // b.plast
   2f4e8:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   2f4ec:	b	2f55c <ZSTD_endStream@@Base+0x21608>
   2f4f0:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2f4f4:	cmp	w25, #0x11
   2f4f8:	b.cc	2f55c <ZSTD_endStream@@Base+0x21608>  // b.lo, b.ul, b.last
   2f4fc:	ldur	x8, [x29, #-208]
   2f500:	add	x1, x22, #0x10
   2f504:	mov	x20, x22
   2f508:	ldr	x21, [x8, #24]
   2f50c:	add	x0, x21, #0x10
   2f510:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2f514:	add	x0, x21, #0x20
   2f518:	add	x1, x22, #0x20
   2f51c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2f520:	cmp	w25, #0x31
   2f524:	b.cc	2f55c <ZSTD_endStream@@Base+0x21608>  // b.lo, b.ul, b.last
   2f528:	add	x20, x21, x25
   2f52c:	add	x24, x21, #0x30
   2f530:	add	x27, x22, #0x40
   2f534:	sub	x1, x27, #0x10
   2f538:	mov	x0, x24
   2f53c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2f540:	add	x0, x24, #0x10
   2f544:	mov	x1, x27
   2f548:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   2f54c:	add	x24, x24, #0x20
   2f550:	cmp	x24, x20
   2f554:	add	x27, x27, #0x20
   2f558:	b.cc	2f534 <ZSTD_endStream@@Base+0x215e0>  // b.lo, b.ul, b.last
   2f55c:	ldur	x20, [x29, #-208]
   2f560:	sub	w8, w26, #0x3
   2f564:	cmp	w25, #0x10, lsl #12
   2f568:	ldr	x9, [x20, #24]
   2f56c:	add	x9, x9, x25
   2f570:	str	x9, [x20, #24]
   2f574:	b.cc	2f58c <ZSTD_endStream@@Base+0x21638>  // b.lo, b.ul, b.last
   2f578:	ldp	x10, x9, [x20]
   2f57c:	sub	x9, x9, x10
   2f580:	lsr	x9, x9, #3
   2f584:	mov	w10, #0x1                   	// #1
   2f588:	stp	w10, w9, [x20, #72]
   2f58c:	ldr	x10, [x20, #8]
   2f590:	ldur	x21, [x29, #-176]
   2f594:	add	w9, w26, w25
   2f598:	add	w11, w23, #0x1
   2f59c:	cmp	w8, #0x10, lsl #12
   2f5a0:	mov	x27, x22
   2f5a4:	mov	w13, #0x2                   	// #2
   2f5a8:	strh	w25, [x10, #4]
   2f5ac:	str	w11, [x10]
   2f5b0:	b.cc	2f3f8 <ZSTD_endStream@@Base+0x214a4>  // b.lo, b.ul, b.last
   2f5b4:	ldp	x12, x11, [x20]
   2f5b8:	sub	x11, x11, x12
   2f5bc:	lsr	x11, x11, #3
   2f5c0:	stp	w13, w11, [x20, #72]
   2f5c4:	b	2f3f8 <ZSTD_endStream@@Base+0x214a4>
   2f5c8:	cmp	x27, #0x2
   2f5cc:	b.hi	2f62c <ZSTD_endStream@@Base+0x216d8>  // b.pmore
   2f5d0:	ldur	x22, [x29, #-72]
   2f5d4:	sub	x1, x29, #0xc
   2f5d8:	mov	x0, x22
   2f5dc:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   2f5e0:	ldur	w8, [x29, #-144]
   2f5e4:	cmp	w0, w8
   2f5e8:	b.cc	2f638 <ZSTD_endStream@@Base+0x216e4>  // b.lo, b.ul, b.last
   2f5ec:	ldr	w8, [sp, #120]
   2f5f0:	sub	w20, w8, w0
   2f5f4:	lsr	w8, w20, #18
   2f5f8:	cbnz	w8, 2f638 <ZSTD_endStream@@Base+0x216e4>
   2f5fc:	ldr	x8, [sp, #104]
   2f600:	ldur	x2, [x29, #-168]
   2f604:	add	x1, x8, w0, uxtw
   2f608:	ldur	x0, [x29, #-184]
   2f60c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2f610:	cmp	x0, #0x3
   2f614:	b.cs	2f648 <ZSTD_endStream@@Base+0x216f4>  // b.hs, b.nlast
   2f618:	ldur	x26, [x29, #-80]
   2f61c:	ldur	x2, [x29, #-184]
   2f620:	mov	w8, wzr
   2f624:	mov	x0, x27
   2f628:	b	2f69c <ZSTD_endStream@@Base+0x21748>
   2f62c:	ldur	x26, [x29, #-80]
   2f630:	ldr	w23, [sp, #116]
   2f634:	b	2f6b8 <ZSTD_endStream@@Base+0x21764>
   2f638:	ldur	x26, [x29, #-80]
   2f63c:	ldur	x2, [x29, #-184]
   2f640:	ldr	w23, [sp, #116]
   2f644:	b	2f6a8 <ZSTD_endStream@@Base+0x21754>
   2f648:	ldur	w9, [x29, #-112]
   2f64c:	add	w8, w20, #0x2
   2f650:	cmp	x0, w9, uxtw
   2f654:	ldur	x9, [x29, #-160]
   2f658:	stp	w8, w0, [x9]
   2f65c:	ldur	x2, [x29, #-184]
   2f660:	b.hi	2f680 <ZSTD_endStream@@Base+0x2172c>  // b.pmore
   2f664:	ldur	x9, [x29, #-168]
   2f668:	add	x8, x2, x0
   2f66c:	cmp	x8, x9
   2f670:	b.eq	2f680 <ZSTD_endStream@@Base+0x2172c>  // b.none
   2f674:	mov	w8, wzr
   2f678:	mov	w25, #0x1                   	// #1
   2f67c:	b	2f698 <ZSTD_endStream@@Base+0x21744>
   2f680:	ldr	w8, [sp, #120]
   2f684:	mov	w25, #0x1                   	// #1
   2f688:	mov	w19, #0x1                   	// #1
   2f68c:	add	w9, w8, #0x1
   2f690:	mov	w8, #0x1                   	// #1
   2f694:	str	w9, [x22, #36]
   2f698:	ldur	x26, [x29, #-80]
   2f69c:	ldr	w23, [sp, #116]
   2f6a0:	mov	x27, x0
   2f6a4:	cbnz	w8, 2f6b0 <ZSTD_endStream@@Base+0x2175c>
   2f6a8:	mov	w8, wzr
   2f6ac:	mov	x0, x27
   2f6b0:	mov	x27, x0
   2f6b4:	cbnz	w8, 2f85c <ZSTD_endStream@@Base+0x21908>
   2f6b8:	ldp	x10, x8, [sp, #88]
   2f6bc:	ldr	w9, [sp, #120]
   2f6c0:	mov	w19, w25
   2f6c4:	ldr	x25, [sp, #104]
   2f6c8:	mov	x22, xzr
   2f6cc:	mov	x21, xzr
   2f6d0:	str	w9, [x8, x10, lsl #2]
   2f6d4:	add	w8, w9, #0x2
   2f6d8:	stur	w8, [x29, #-112]
   2f6dc:	b	2f6f8 <ZSTD_endStream@@Base+0x217a4>
   2f6e0:	ldur	x2, [x29, #-184]
   2f6e4:	mov	x27, x8
   2f6e8:	mov	x8, x21
   2f6ec:	mov	w23, w15
   2f6f0:	mov	x21, x8
   2f6f4:	tbz	w9, #0, 2f83c <ZSTD_endStream@@Base+0x218e8>
   2f6f8:	ldur	w8, [x29, #-96]
   2f6fc:	subs	w8, w8, #0x1
   2f700:	stur	w8, [x29, #-96]
   2f704:	b.cc	2f83c <ZSTD_endStream@@Base+0x218e8>  // b.lo, b.ul, b.last
   2f708:	ldur	w8, [x29, #-144]
   2f70c:	cmp	w23, w8
   2f710:	b.cc	2f83c <ZSTD_endStream@@Base+0x218e8>  // b.lo, b.ul, b.last
   2f714:	cmp	x21, x22
   2f718:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   2f71c:	add	x0, x2, x24
   2f720:	ldur	x2, [x29, #-168]
   2f724:	add	x20, x25, w23, uxtw
   2f728:	add	x1, x20, x24
   2f72c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2f730:	add	x8, x0, x24
   2f734:	cmp	x8, x27
   2f738:	b.ls	2f798 <ZSTD_endStream@@Base+0x21844>  // b.plast
   2f73c:	ldur	w14, [x29, #-120]
   2f740:	ldur	w12, [x29, #-112]
   2f744:	ldur	x13, [x29, #-160]
   2f748:	add	w11, w23, w8
   2f74c:	sub	w10, w14, w23
   2f750:	cmp	x8, x10
   2f754:	mov	w9, wzr
   2f758:	mov	w15, w23
   2f75c:	sub	w12, w12, w23
   2f760:	add	x13, x13, w19, uxtw #3
   2f764:	csel	w14, w11, w14, hi  // hi = pmore
   2f768:	cmp	x8, #0x1, lsl #12
   2f76c:	add	w19, w19, #0x1
   2f770:	stp	w12, w8, [x13]
   2f774:	stur	w14, [x29, #-120]
   2f778:	b.hi	2f6e0 <ZSTD_endStream@@Base+0x2178c>  // b.pmore
   2f77c:	ldur	x2, [x29, #-184]
   2f780:	ldur	x11, [x29, #-168]
   2f784:	mov	x27, x8
   2f788:	add	x10, x2, x8
   2f78c:	cmp	x10, x11
   2f790:	b.ne	2f7a0 <ZSTD_endStream@@Base+0x2184c>  // b.any
   2f794:	b	2f6e4 <ZSTD_endStream@@Base+0x21790>
   2f798:	ldur	x2, [x29, #-184]
   2f79c:	mov	w15, w23
   2f7a0:	ldrb	w9, [x20, x8]
   2f7a4:	ldrb	w10, [x2, x8]
   2f7a8:	ldr	w11, [sp, #140]
   2f7ac:	mov	w23, w15
   2f7b0:	cmp	w9, w10
   2f7b4:	ldr	x9, [sp, #144]
   2f7b8:	and	w11, w15, w11
   2f7bc:	lsl	w11, w11, #1
   2f7c0:	add	x9, x9, w11, uxtw #2
   2f7c4:	b.cs	2f7e8 <ZSTD_endStream@@Base+0x21894>  // b.hs, b.nlast
   2f7c8:	ldr	w10, [sp, #128]
   2f7cc:	cmp	w23, w10
   2f7d0:	ldr	x10, [sp, #208]
   2f7d4:	str	w23, [x10]
   2f7d8:	b.ls	2f814 <ZSTD_endStream@@Base+0x218c0>  // b.plast
   2f7dc:	add	x9, x9, #0x4
   2f7e0:	str	x9, [sp, #208]
   2f7e4:	b	2f808 <ZSTD_endStream@@Base+0x218b4>
   2f7e8:	ldr	w10, [sp, #128]
   2f7ec:	cmp	w23, w10
   2f7f0:	ldr	x10, [sp, #200]
   2f7f4:	str	w23, [x10]
   2f7f8:	b.ls	2f824 <ZSTD_endStream@@Base+0x218d0>  // b.plast
   2f7fc:	str	x9, [sp, #200]
   2f800:	mov	x22, x8
   2f804:	mov	x8, x21
   2f808:	ldr	w23, [x9]
   2f80c:	mov	w9, #0x1                   	// #1
   2f810:	b	2f6f0 <ZSTD_endStream@@Base+0x2179c>
   2f814:	sub	x10, x29, #0x40
   2f818:	mov	w9, wzr
   2f81c:	str	x10, [sp, #208]
   2f820:	b	2f6f0 <ZSTD_endStream@@Base+0x2179c>
   2f824:	sub	x10, x29, #0x40
   2f828:	mov	w9, wzr
   2f82c:	str	x10, [sp, #200]
   2f830:	mov	x22, x8
   2f834:	mov	x8, x21
   2f838:	b	2f6f0 <ZSTD_endStream@@Base+0x2179c>
   2f83c:	ldr	x8, [sp, #200]
   2f840:	ldur	x22, [x29, #-72]
   2f844:	str	wzr, [x8]
   2f848:	ldr	x8, [sp, #208]
   2f84c:	str	wzr, [x8]
   2f850:	ldur	w8, [x29, #-120]
   2f854:	sub	w8, w8, #0x8
   2f858:	str	w8, [x22, #36]
   2f85c:	ldr	x27, [sp, #176]
   2f860:	ldur	x21, [x29, #-176]
   2f864:	mov	w23, #0x1c                  	// #28
   2f868:	cbnz	w19, 2cd3c <ZSTD_endStream@@Base+0x1ede8>
   2f86c:	b	2dcdc <ZSTD_endStream@@Base+0x1fd88>
   2f870:	ldur	x8, [x29, #-168]
   2f874:	sub	x0, x8, x27
   2f878:	add	sp, sp, #0x1b0
   2f87c:	ldp	x20, x19, [sp, #80]
   2f880:	ldp	x22, x21, [sp, #64]
   2f884:	ldp	x24, x23, [sp, #48]
   2f888:	ldp	x26, x25, [sp, #32]
   2f88c:	ldp	x28, x27, [sp, #16]
   2f890:	ldp	x29, x30, [sp], #96
   2f894:	ret
   2f898:	stp	x29, x30, [sp, #-96]!
   2f89c:	stp	x28, x27, [sp, #16]
   2f8a0:	stp	x26, x25, [sp, #32]
   2f8a4:	stp	x24, x23, [sp, #48]
   2f8a8:	stp	x22, x21, [sp, #64]
   2f8ac:	stp	x20, x19, [sp, #80]
   2f8b0:	mov	x29, sp
   2f8b4:	sub	sp, sp, #0x1d0
   2f8b8:	ldr	x8, [x2]
   2f8bc:	ldr	w9, [x2, #8]
   2f8c0:	add	x10, x3, x4
   2f8c4:	mov	x23, x0
   2f8c8:	stur	x10, [x29, #-184]
   2f8cc:	stur	w9, [x29, #-72]
   2f8d0:	stur	x8, [x29, #-80]
   2f8d4:	sub	x21, x10, #0x8
   2f8d8:	ldp	w12, w10, [x23, #200]
   2f8dc:	ldr	x8, [x23, #8]
   2f8e0:	ldr	w9, [x23, #24]
   2f8e4:	ldr	w11, [x23, #36]
   2f8e8:	mov	w13, #0xfff                 	// #4095
   2f8ec:	cmp	w10, #0xfff
   2f8f0:	add	x19, x8, x9
   2f8f4:	csel	w8, w10, w13, cc  // cc = lo, ul, last
   2f8f8:	stur	w11, [x29, #-12]
   2f8fc:	str	w8, [sp, #164]
   2f900:	ldp	x8, x24, [x23, #104]
   2f904:	mov	x20, x3
   2f908:	cmp	w12, #0x3
   2f90c:	mov	x27, x1
   2f910:	stur	x8, [x29, #-168]
   2f914:	mov	w8, #0x3                   	// #3
   2f918:	add	x0, x0, #0x48
   2f91c:	cinc	w8, w8, ne  // ne = any
   2f920:	mov	w3, #0x2                   	// #2
   2f924:	mov	x1, x20
   2f928:	mov	x2, x4
   2f92c:	str	w8, [sp, #220]
   2f930:	stur	x0, [x29, #-200]
   2f934:	str	x4, [sp, #8]
   2f938:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   2f93c:	cmp	x19, x20
   2f940:	cinc	x25, x20, eq  // eq = none
   2f944:	cmp	x25, x21
   2f948:	str	x21, [sp, #200]
   2f94c:	b.cs	3259c <ZSTD_endStream@@Base+0x24648>  // b.hs, b.nlast
   2f950:	ldr	w10, [sp, #220]
   2f954:	ldur	x9, [x29, #-184]
   2f958:	mov	w26, #0x1c                  	// #28
   2f95c:	stp	x24, x23, [x29, #-96]
   2f960:	sub	w8, w10, #0x1
   2f964:	str	x8, [sp, #88]
   2f968:	sub	x8, x29, #0x40
   2f96c:	sub	x9, x9, #0x20
   2f970:	str	x9, [sp, #208]
   2f974:	mov	w9, w10
   2f978:	add	x8, x8, #0x10
   2f97c:	str	x9, [sp, #40]
   2f980:	add	x9, x24, #0x10
   2f984:	str	x8, [sp, #56]
   2f988:	str	x9, [sp, #128]
   2f98c:	add	x9, x24, #0x1c
   2f990:	stur	x9, [x29, #-152]
   2f994:	stur	x27, [x29, #-208]
   2f998:	b	2f9bc <ZSTD_endStream@@Base+0x21a68>
   2f99c:	ldur	x0, [x29, #-200]
   2f9a0:	mov	w1, #0x2                   	// #2
   2f9a4:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   2f9a8:	ldur	w21, [x29, #-116]
   2f9ac:	ldur	w12, [x29, #-136]
   2f9b0:	ldr	x8, [sp, #200]
   2f9b4:	cmp	x25, x8
   2f9b8:	b.cs	3259c <ZSTD_endStream@@Base+0x24648>  // b.hs, b.nlast
   2f9bc:	ldr	x19, [x23, #8]
   2f9c0:	mov	x8, x20
   2f9c4:	ldr	w20, [x23, #36]
   2f9c8:	stur	x8, [x29, #-216]
   2f9cc:	subs	w8, w25, w8
   2f9d0:	stur	w8, [x29, #-104]
   2f9d4:	cset	w8, eq  // eq = none
   2f9d8:	stur	w8, [x29, #-160]
   2f9dc:	add	x8, x19, x20
   2f9e0:	cmp	x8, x25
   2f9e4:	stur	x25, [x29, #-176]
   2f9e8:	stur	w12, [x29, #-136]
   2f9ec:	stur	w21, [x29, #-116]
   2f9f0:	b.ls	2fab8 <ZSTD_endStream@@Base+0x21b64>  // b.plast
   2f9f4:	ldur	x20, [x29, #-216]
   2f9f8:	mov	w19, wzr
   2f9fc:	cbz	w19, 30d04 <ZSTD_endStream@@Base+0x22db0>
   2fa00:	ldur	w8, [x29, #-72]
   2fa04:	ldur	x9, [x29, #-80]
   2fa08:	ldr	x10, [sp, #128]
   2fa0c:	ldur	w1, [x29, #-104]
   2fa10:	mov	w3, #0x2                   	// #2
   2fa14:	mov	x0, x20
   2fa18:	str	w8, [x10, #8]
   2fa1c:	str	x9, [x10]
   2fa20:	stp	wzr, w1, [x24, #8]
   2fa24:	ldur	x2, [x29, #-200]
   2fa28:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   2fa2c:	ldur	x10, [x29, #-168]
   2fa30:	sub	w9, w19, #0x1
   2fa34:	str	w0, [x24]
   2fa38:	ldur	w12, [x29, #-136]
   2fa3c:	add	x9, x10, w9, uxtw #3
   2fa40:	ldr	w20, [x9, #4]
   2fa44:	ldr	w10, [sp, #164]
   2fa48:	mov	w21, w0
   2fa4c:	mov	w8, wzr
   2fa50:	mov	w0, wzr
   2fa54:	cmp	w20, w10
   2fa58:	b.ls	2faa0 <ZSTD_endStream@@Base+0x21b4c>  // b.plast
   2fa5c:	ldr	w11, [x9]
   2fa60:	ldr	w10, [sp, #188]
   2fa64:	ldur	w22, [x29, #-104]
   2fa68:	ldur	w8, [x29, #-16]
   2fa6c:	ldur	x9, [x29, #-24]
   2fa70:	stp	w10, w11, [x29, #-64]
   2fa74:	ldr	x10, [sp, #56]
   2fa78:	sub	x0, x29, #0x40
   2fa7c:	stp	w20, w22, [x29, #-56]
   2fa80:	str	w11, [sp, #192]
   2fa84:	str	w8, [x10, #8]
   2fa88:	str	x9, [x10]
   2fa8c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   2fa90:	mov	w8, #0x7                   	// #7
   2fa94:	mov	w12, w20
   2fa98:	stur	wzr, [x29, #-116]
   2fa9c:	str	w22, [sp, #196]
   2faa0:	cbz	w8, 2fd2c <ZSTD_endStream@@Base+0x21dd8>
   2faa4:	ldur	x20, [x29, #-216]
   2faa8:	ldur	w21, [x29, #-116]
   2faac:	cmp	w8, #0x7
   2fab0:	b.ne	30d18 <ZSTD_endStream@@Base+0x22dc4>  // b.any
   2fab4:	b	322a8 <ZSTD_endStream@@Base+0x24354>
   2fab8:	ldr	w21, [x23, #200]
   2fabc:	ldur	x24, [x29, #-184]
   2fac0:	sub	w22, w25, w19
   2fac4:	cmp	w20, w22
   2fac8:	b.cs	2faf0 <ZSTD_endStream@@Base+0x21b9c>  // b.hs, b.nlast
   2facc:	add	x1, x19, w20, uxtw
   2fad0:	mov	x0, x23
   2fad4:	mov	x2, x24
   2fad8:	mov	w3, w21
   2fadc:	mov	w4, wzr
   2fae0:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   2fae4:	add	w20, w0, w20
   2fae8:	cmp	w20, w22
   2faec:	b.cc	2facc <ZSTD_endStream@@Base+0x21b78>  // b.lo, b.ul, b.last
   2faf0:	sub	w8, w21, #0x6
   2faf4:	cmp	w8, #0x2
   2faf8:	str	w22, [x23, #36]
   2fafc:	b.cc	2feb4 <ZSTD_endStream@@Base+0x21f60>  // b.lo, b.ul, b.last
   2fb00:	cmp	w21, #0x5
   2fb04:	b.eq	300e0 <ZSTD_endStream@@Base+0x2218c>  // b.none
   2fb08:	cmp	w21, #0x3
   2fb0c:	b.ne	3030c <ZSTD_endStream@@Base+0x223b8>  // b.any
   2fb10:	ldr	w8, [x23, #204]
   2fb14:	ldr	x10, [x23, #8]
   2fb18:	ldr	w1, [x23, #192]
   2fb1c:	ldr	x19, [x23, #48]
   2fb20:	cmp	w8, #0xfff
   2fb24:	mov	w9, #0xfff                 	// #4095
   2fb28:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2fb2c:	mov	w2, #0x3                   	// #3
   2fb30:	mov	x0, x25
   2fb34:	stur	w8, [x29, #-144]
   2fb38:	str	x10, [sp, #104]
   2fb3c:	sub	w22, w25, w10
   2fb40:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2fb44:	ldp	w2, w8, [x23, #184]
   2fb48:	ldr	w9, [x19, x0, lsl #2]
   2fb4c:	str	x19, [sp, #96]
   2fb50:	ldr	x21, [x23, #64]
   2fb54:	sub	w8, w8, #0x1
   2fb58:	str	w9, [sp, #116]
   2fb5c:	mov	w9, #0xffffffff            	// #-1
   2fb60:	lsl	w19, w9, w8
   2fb64:	ldr	w20, [x23, #24]
   2fb68:	mvn	w8, w19
   2fb6c:	str	w8, [sp, #144]
   2fb70:	subs	w8, w22, w8
   2fb74:	str	x0, [sp, #80]
   2fb78:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2fb7c:	mov	x0, x23
   2fb80:	mov	w1, w22
   2fb84:	str	w8, [sp, #136]
   2fb88:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2fb8c:	cmp	w0, #0x0
   2fb90:	csinc	w11, w0, wzr, ne  // ne = any
   2fb94:	str	w11, [sp, #232]
   2fb98:	ldur	w11, [x29, #-104]
   2fb9c:	add	w10, w22, #0x9
   2fba0:	mov	x9, x23
   2fba4:	bic	w8, w22, w19
   2fba8:	cmp	w11, #0x0
   2fbac:	stur	w10, [x29, #-220]
   2fbb0:	add	x10, x25, #0x3
   2fbb4:	sub	x12, x29, #0x50
   2fbb8:	cset	w16, eq  // eq = none
   2fbbc:	ldr	w9, [x9, #196]
   2fbc0:	str	x10, [sp, #224]
   2fbc4:	ldur	w10, [x29, #-80]
   2fbc8:	lsl	w8, w8, #1
   2fbcc:	bfi	x12, x16, #2, #1
   2fbd0:	add	x11, x21, w8, uxtw #2
   2fbd4:	mov	w8, #0x3                   	// #3
   2fbd8:	stur	x12, [x29, #-112]
   2fbdc:	ldr	x25, [sp, #88]
   2fbe0:	ldur	w12, [x29, #-136]
   2fbe4:	str	x21, [sp, #152]
   2fbe8:	cinc	x21, x8, eq  // eq = none
   2fbec:	add	x8, x11, #0x4
   2fbf0:	stp	x8, x11, [sp, #168]
   2fbf4:	mov	w8, #0x1                   	// #1
   2fbf8:	mov	x23, xzr
   2fbfc:	mov	w27, wzr
   2fc00:	str	w22, [sp, #120]
   2fc04:	sub	w22, w22, w20
   2fc08:	lsl	w8, w8, w9
   2fc0c:	sub	w15, w10, #0x1
   2fc10:	stur	w8, [x29, #-128]
   2fc14:	stur	x16, [x29, #-192]
   2fc18:	add	x8, x16, x23
   2fc1c:	cmp	x8, #0x3
   2fc20:	mov	w28, w15
   2fc24:	b.eq	2fc30 <ZSTD_endStream@@Base+0x21cdc>  // b.none
   2fc28:	ldur	x8, [x29, #-112]
   2fc2c:	ldr	w28, [x8, x23, lsl #2]
   2fc30:	sub	w8, w28, #0x1
   2fc34:	cmp	w8, w22
   2fc38:	b.cs	2fc8c <ZSTD_endStream@@Base+0x21d38>  // b.hs, b.nlast
   2fc3c:	ldur	x20, [x29, #-176]
   2fc40:	mov	w1, #0x3                   	// #3
   2fc44:	mov	x24, x25
   2fc48:	mov	w25, w15
   2fc4c:	mov	x0, x20
   2fc50:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2fc54:	mov	w28, w28
   2fc58:	mov	w19, w0
   2fc5c:	sub	x0, x20, x28
   2fc60:	mov	w1, #0x3                   	// #3
   2fc64:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   2fc68:	cmp	w19, w0
   2fc6c:	b.ne	2fc94 <ZSTD_endStream@@Base+0x21d40>  // b.any
   2fc70:	ldr	x0, [sp, #224]
   2fc74:	ldur	x2, [x29, #-184]
   2fc78:	neg	x8, x28
   2fc7c:	add	x1, x0, x8
   2fc80:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   2fc84:	add	w8, w0, #0x3
   2fc88:	b	2fc98 <ZSTD_endStream@@Base+0x21d44>
   2fc8c:	mov	w8, wzr
   2fc90:	b	2fca8 <ZSTD_endStream@@Base+0x21d54>
   2fc94:	mov	w8, wzr
   2fc98:	ldur	w12, [x29, #-136]
   2fc9c:	ldur	x16, [x29, #-192]
   2fca0:	mov	w15, w25
   2fca4:	mov	x25, x24
   2fca8:	mov	w9, w8
   2fcac:	cmp	x25, x9
   2fcb0:	b.cs	2fcf0 <ZSTD_endStream@@Base+0x21d9c>  // b.hs, b.nlast
   2fcb4:	ldur	x10, [x29, #-168]
   2fcb8:	ldur	w11, [x29, #-144]
   2fcbc:	add	x10, x10, w27, uxtw #3
   2fcc0:	add	w27, w27, #0x1
   2fcc4:	cmp	w8, w11
   2fcc8:	stp	w23, w8, [x10]
   2fccc:	mov	w8, #0x1                   	// #1
   2fcd0:	b.hi	2fd1c <ZSTD_endStream@@Base+0x21dc8>  // b.pmore
   2fcd4:	ldp	x11, x10, [x29, #-184]
   2fcd8:	mov	x25, x9
   2fcdc:	mov	w19, w27
   2fce0:	add	x10, x10, x9
   2fce4:	cmp	x10, x11
   2fce8:	b.ne	2fcf4 <ZSTD_endStream@@Base+0x21da0>  // b.any
   2fcec:	b	2fd00 <ZSTD_endStream@@Base+0x21dac>
   2fcf0:	mov	x9, x25
   2fcf4:	mov	w8, wzr
   2fcf8:	mov	x25, x9
   2fcfc:	mov	w19, w26
   2fd00:	cbnz	w8, 306e0 <ZSTD_endStream@@Base+0x2278c>
   2fd04:	add	x23, x23, #0x1
   2fd08:	add	x8, x16, x23
   2fd0c:	cmp	x8, x21
   2fd10:	mov	w26, w19
   2fd14:	b.cc	2fc18 <ZSTD_endStream@@Base+0x21cc4>  // b.lo, b.ul, b.last
   2fd18:	b	306dc <ZSTD_endStream@@Base+0x22788>
   2fd1c:	mov	x25, x9
   2fd20:	mov	w19, w27
   2fd24:	cbz	w8, 2fd04 <ZSTD_endStream@@Base+0x21db0>
   2fd28:	b	306e0 <ZSTD_endStream@@Base+0x2278c>
   2fd2c:	ldur	x1, [x29, #-200]
   2fd30:	mov	w2, #0x2                   	// #2
   2fd34:	mov	w0, wzr
   2fd38:	stur	w12, [x29, #-136]
   2fd3c:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   2fd40:	ldur	x8, [x29, #-152]
   2fd44:	ldr	x9, [sp, #40]
   2fd48:	mov	w20, #0x1                   	// #1
   2fd4c:	mov	w10, #0x40000000            	// #1073741824
   2fd50:	add	x20, x20, #0x1
   2fd54:	cmp	x20, x9
   2fd58:	str	w10, [x8], #28
   2fd5c:	b.cc	2fd50 <ZSTD_endStream@@Base+0x21dfc>  // b.lo, b.ul, b.last
   2fd60:	add	w8, w0, w21
   2fd64:	mov	x22, xzr
   2fd68:	stur	w8, [x29, #-112]
   2fd6c:	mov	w8, w19
   2fd70:	stur	x8, [x29, #-192]
   2fd74:	b	2fd8c <ZSTD_endStream@@Base+0x21e38>
   2fd78:	ldur	x22, [x29, #-144]
   2fd7c:	ldur	x8, [x29, #-192]
   2fd80:	add	x22, x22, #0x1
   2fd84:	cmp	x22, x8
   2fd88:	b.cs	2fe8c <ZSTD_endStream@@Base+0x21f38>  // b.hs, b.nlast
   2fd8c:	ldur	x8, [x29, #-168]
   2fd90:	ldur	w2, [x29, #-160]
   2fd94:	sub	x0, x29, #0x50
   2fd98:	add	x8, x8, x22, lsl #3
   2fd9c:	ldp	w21, w26, [x8]
   2fda0:	mov	w1, w21
   2fda4:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   2fda8:	cmp	w20, w26
   2fdac:	stur	x22, [x29, #-144]
   2fdb0:	b.hi	2fd78 <ZSTD_endStream@@Base+0x21e24>  // b.pmore
   2fdb4:	mov	x25, x0
   2fdb8:	add	w0, w21, #0x1
   2fdbc:	mov	x27, x1
   2fdc0:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   2fdc4:	lsl	w8, w0, #8
   2fdc8:	mov	w28, w0
   2fdcc:	add	w8, w8, #0x1, lsl #12
   2fdd0:	stur	w8, [x29, #-128]
   2fdd4:	b	2fe68 <ZSTD_endStream@@Base+0x21f14>
   2fdd8:	ldr	x8, [x23, #96]
   2fddc:	ldr	w22, [x23, #148]
   2fde0:	ldr	w0, [x8, x28, lsl #2]
   2fde4:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2fde8:	mov	w24, w0
   2fdec:	mov	w0, w19
   2fdf0:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   2fdf4:	mov	w8, w0
   2fdf8:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   2fdfc:	ldr	x9, [x23, #88]
   2fe00:	lsl	x8, x8, #2
   2fe04:	add	x10, x10, #0xca8
   2fe08:	ldr	w19, [x10, x8]
   2fe0c:	ldur	x10, [x29, #-88]
   2fe10:	ldr	w0, [x9, x8]
   2fe14:	ldr	w23, [x10, #144]
   2fe18:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2fe1c:	sub	w9, w22, w24
   2fe20:	add	w8, w19, w28
   2fe24:	add	w9, w9, w23
   2fe28:	ldp	x24, x23, [x29, #-96]
   2fe2c:	add	w8, w9, w8, lsl #8
   2fe30:	sub	w8, w8, w0
   2fe34:	add	w8, w8, #0x33
   2fe38:	ldur	w9, [x29, #-112]
   2fe3c:	ldur	w10, [x29, #-104]
   2fe40:	add	w8, w9, w8
   2fe44:	mov	w9, #0x1c                  	// #28
   2fe48:	umaddl	x9, w20, w9, x24
   2fe4c:	stp	w20, w10, [x9, #8]
   2fe50:	add	w20, w20, #0x1
   2fe54:	cmp	w20, w26
   2fe58:	stp	w8, w21, [x9]
   2fe5c:	str	x25, [x9, #16]
   2fe60:	str	w27, [x9, #24]
   2fe64:	b.hi	2fd78 <ZSTD_endStream@@Base+0x21e24>  // b.pmore
   2fe68:	ldr	w8, [x23, #152]
   2fe6c:	sub	w19, w20, #0x3
   2fe70:	cmp	w8, #0x1
   2fe74:	b.ne	2fdd8 <ZSTD_endStream@@Base+0x21e84>  // b.any
   2fe78:	mov	w0, w19
   2fe7c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   2fe80:	ldur	w8, [x29, #-128]
   2fe84:	add	w8, w8, w0
   2fe88:	b	2fe38 <ZSTD_endStream@@Base+0x21ee4>
   2fe8c:	sub	w0, w20, #0x1
   2fe90:	ldp	x20, x27, [x29, #-216]
   2fe94:	ldur	w21, [x29, #-116]
   2fe98:	ldur	x25, [x29, #-176]
   2fe9c:	ldur	w12, [x29, #-136]
   2fea0:	mov	w8, wzr
   2fea4:	mov	w26, #0x1c                  	// #28
   2fea8:	cmp	w8, #0x7
   2feac:	b.ne	30d18 <ZSTD_endStream@@Base+0x22dc4>  // b.any
   2feb0:	b	322a8 <ZSTD_endStream@@Base+0x24354>
   2feb4:	ldr	w8, [x23, #204]
   2feb8:	ldr	x10, [x23, #8]
   2febc:	ldr	w1, [x23, #192]
   2fec0:	ldr	x19, [x23, #48]
   2fec4:	cmp	w8, #0xfff
   2fec8:	mov	w9, #0xfff                 	// #4095
   2fecc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   2fed0:	mov	w2, #0x6                   	// #6
   2fed4:	mov	x0, x25
   2fed8:	stur	w8, [x29, #-144]
   2fedc:	str	x10, [sp, #224]
   2fee0:	sub	w21, w25, w10
   2fee4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   2fee8:	ldp	w2, w8, [x23, #184]
   2feec:	ldr	w9, [x19, x0, lsl #2]
   2fef0:	str	x19, [sp, #104]
   2fef4:	ldr	x22, [x23, #64]
   2fef8:	sub	w8, w8, #0x1
   2fefc:	str	w9, [sp, #116]
   2ff00:	mov	w9, #0xffffffff            	// #-1
   2ff04:	lsl	w19, w9, w8
   2ff08:	ldr	w20, [x23, #24]
   2ff0c:	mvn	w8, w19
   2ff10:	str	w8, [sp, #144]
   2ff14:	subs	w8, w21, w8
   2ff18:	str	x0, [sp, #80]
   2ff1c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   2ff20:	mov	x0, x23
   2ff24:	mov	w1, w21
   2ff28:	str	w8, [sp, #136]
   2ff2c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   2ff30:	cmp	w0, #0x0
   2ff34:	csinc	w11, w0, wzr, ne  // ne = any
   2ff38:	str	w11, [sp, #232]
   2ff3c:	ldur	w11, [x29, #-104]
   2ff40:	add	w10, w21, #0x9
   2ff44:	mov	x9, x23
   2ff48:	bic	w8, w21, w19
   2ff4c:	cmp	w11, #0x0
   2ff50:	stur	w10, [x29, #-220]
   2ff54:	add	x10, x25, #0x4
   2ff58:	sub	x12, x29, #0x50
   2ff5c:	cset	w16, eq  // eq = none
   2ff60:	ldr	w9, [x9, #196]
   2ff64:	str	x10, [sp, #120]
   2ff68:	ldur	w10, [x29, #-80]
   2ff6c:	lsl	w8, w8, #1
   2ff70:	bfi	x12, x16, #2, #1
   2ff74:	add	x11, x22, w8, uxtw #2
   2ff78:	mov	w8, #0x3                   	// #3
   2ff7c:	stur	x12, [x29, #-128]
   2ff80:	ldr	x25, [sp, #88]
   2ff84:	ldur	w12, [x29, #-136]
   2ff88:	cinc	x24, x8, eq  // eq = none
   2ff8c:	add	x8, x11, #0x4
   2ff90:	stp	x8, x11, [sp, #168]
   2ff94:	mov	w8, #0x1                   	// #1
   2ff98:	mov	x23, xzr
   2ff9c:	mov	w26, wzr
   2ffa0:	sub	w13, w21, w20
   2ffa4:	lsl	w8, w8, w9
   2ffa8:	sub	w15, w10, #0x1
   2ffac:	str	w21, [sp, #96]
   2ffb0:	str	x22, [sp, #152]
   2ffb4:	stur	w8, [x29, #-112]
   2ffb8:	stur	x16, [x29, #-192]
   2ffbc:	add	x8, x16, x23
   2ffc0:	cmp	x8, #0x3
   2ffc4:	mov	w28, w15
   2ffc8:	b.eq	2ffd4 <ZSTD_endStream@@Base+0x22080>  // b.none
   2ffcc:	ldur	x8, [x29, #-128]
   2ffd0:	ldr	w28, [x8, x23, lsl #2]
   2ffd4:	sub	w8, w28, #0x1
   2ffd8:	cmp	w8, w13
   2ffdc:	b.cs	30038 <ZSTD_endStream@@Base+0x220e4>  // b.hs, b.nlast
   2ffe0:	mov	w20, w26
   2ffe4:	ldur	x26, [x29, #-176]
   2ffe8:	mov	w1, #0x4                   	// #4
   2ffec:	mov	x21, x25
   2fff0:	mov	w25, w15
   2fff4:	mov	x0, x26
   2fff8:	mov	w22, w13
   2fffc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   30000:	mov	w28, w28
   30004:	mov	w19, w0
   30008:	sub	x0, x26, x28
   3000c:	mov	w1, #0x4                   	// #4
   30010:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   30014:	cmp	w19, w0
   30018:	b.ne	30040 <ZSTD_endStream@@Base+0x220ec>  // b.any
   3001c:	ldr	x0, [sp, #120]
   30020:	ldur	x2, [x29, #-184]
   30024:	neg	x8, x28
   30028:	add	x1, x0, x8
   3002c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   30030:	add	w8, w0, #0x4
   30034:	b	30044 <ZSTD_endStream@@Base+0x220f0>
   30038:	mov	w8, wzr
   3003c:	b	3005c <ZSTD_endStream@@Base+0x22108>
   30040:	mov	w8, wzr
   30044:	ldur	w12, [x29, #-136]
   30048:	ldur	x16, [x29, #-192]
   3004c:	mov	w26, w20
   30050:	mov	w13, w22
   30054:	mov	w15, w25
   30058:	mov	x25, x21
   3005c:	mov	w9, w8
   30060:	cmp	x25, x9
   30064:	b.cs	300a4 <ZSTD_endStream@@Base+0x22150>  // b.hs, b.nlast
   30068:	ldur	x10, [x29, #-168]
   3006c:	ldur	w11, [x29, #-144]
   30070:	add	x10, x10, w26, uxtw #3
   30074:	add	w26, w26, #0x1
   30078:	cmp	w8, w11
   3007c:	stp	w23, w8, [x10]
   30080:	mov	w8, #0x1                   	// #1
   30084:	b.hi	300d0 <ZSTD_endStream@@Base+0x2217c>  // b.pmore
   30088:	ldp	x11, x10, [x29, #-184]
   3008c:	mov	x25, x9
   30090:	mov	w19, w26
   30094:	add	x10, x10, x9
   30098:	cmp	x10, x11
   3009c:	b.ne	300a8 <ZSTD_endStream@@Base+0x22154>  // b.any
   300a0:	b	300b4 <ZSTD_endStream@@Base+0x22160>
   300a4:	mov	x9, x25
   300a8:	mov	w8, wzr
   300ac:	mov	x25, x9
   300b0:	mov	w19, w27
   300b4:	cbnz	w8, 3053c <ZSTD_endStream@@Base+0x225e8>
   300b8:	add	x23, x23, #0x1
   300bc:	add	x8, x16, x23
   300c0:	cmp	x8, x24
   300c4:	mov	w27, w19
   300c8:	b.cc	2ffbc <ZSTD_endStream@@Base+0x22068>  // b.lo, b.ul, b.last
   300cc:	b	30538 <ZSTD_endStream@@Base+0x225e4>
   300d0:	mov	x25, x9
   300d4:	mov	w19, w26
   300d8:	cbz	w8, 300b8 <ZSTD_endStream@@Base+0x22164>
   300dc:	b	3053c <ZSTD_endStream@@Base+0x225e8>
   300e0:	ldr	w8, [x23, #204]
   300e4:	ldr	x10, [x23, #8]
   300e8:	ldr	w1, [x23, #192]
   300ec:	ldr	x19, [x23, #48]
   300f0:	cmp	w8, #0xfff
   300f4:	mov	w9, #0xfff                 	// #4095
   300f8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   300fc:	mov	w2, #0x5                   	// #5
   30100:	mov	x0, x25
   30104:	stur	w8, [x29, #-192]
   30108:	str	x10, [sp, #224]
   3010c:	sub	w21, w25, w10
   30110:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   30114:	ldp	w2, w8, [x23, #184]
   30118:	ldr	w9, [x19, x0, lsl #2]
   3011c:	str	x19, [sp, #104]
   30120:	ldr	x22, [x23, #64]
   30124:	sub	w8, w8, #0x1
   30128:	str	w9, [sp, #116]
   3012c:	mov	w9, #0xffffffff            	// #-1
   30130:	lsl	w19, w9, w8
   30134:	ldr	w20, [x23, #24]
   30138:	mvn	w8, w19
   3013c:	str	w8, [sp, #144]
   30140:	subs	w8, w21, w8
   30144:	str	x0, [sp, #80]
   30148:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3014c:	mov	x0, x23
   30150:	mov	w1, w21
   30154:	str	w8, [sp, #136]
   30158:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3015c:	cmp	w0, #0x0
   30160:	csinc	w11, w0, wzr, ne  // ne = any
   30164:	str	w11, [sp, #232]
   30168:	ldur	w11, [x29, #-104]
   3016c:	add	w10, w21, #0x9
   30170:	mov	x9, x23
   30174:	bic	w8, w21, w19
   30178:	cmp	w11, #0x0
   3017c:	stur	w10, [x29, #-220]
   30180:	add	x10, x25, #0x4
   30184:	sub	x12, x29, #0x50
   30188:	cset	w16, eq  // eq = none
   3018c:	ldr	w9, [x9, #196]
   30190:	str	x10, [sp, #120]
   30194:	ldur	w10, [x29, #-80]
   30198:	lsl	w8, w8, #1
   3019c:	bfi	x12, x16, #2, #1
   301a0:	add	x11, x22, w8, uxtw #2
   301a4:	mov	w8, #0x3                   	// #3
   301a8:	stur	x12, [x29, #-128]
   301ac:	ldr	x25, [sp, #88]
   301b0:	ldur	w12, [x29, #-136]
   301b4:	cinc	x24, x8, eq  // eq = none
   301b8:	add	x8, x11, #0x4
   301bc:	stp	x8, x11, [sp, #168]
   301c0:	mov	w8, #0x1                   	// #1
   301c4:	mov	x23, xzr
   301c8:	mov	w26, wzr
   301cc:	sub	w13, w21, w20
   301d0:	lsl	w8, w8, w9
   301d4:	sub	w15, w10, #0x1
   301d8:	str	w21, [sp, #96]
   301dc:	str	x22, [sp, #152]
   301e0:	stur	w8, [x29, #-112]
   301e4:	stur	x16, [x29, #-144]
   301e8:	add	x8, x16, x23
   301ec:	cmp	x8, #0x3
   301f0:	mov	w28, w15
   301f4:	b.eq	30200 <ZSTD_endStream@@Base+0x222ac>  // b.none
   301f8:	ldur	x8, [x29, #-128]
   301fc:	ldr	w28, [x8, x23, lsl #2]
   30200:	sub	w8, w28, #0x1
   30204:	cmp	w8, w13
   30208:	b.cs	30264 <ZSTD_endStream@@Base+0x22310>  // b.hs, b.nlast
   3020c:	mov	w20, w26
   30210:	ldur	x26, [x29, #-176]
   30214:	mov	w1, #0x4                   	// #4
   30218:	mov	x21, x25
   3021c:	mov	w25, w15
   30220:	mov	x0, x26
   30224:	mov	w22, w13
   30228:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3022c:	mov	w28, w28
   30230:	mov	w19, w0
   30234:	sub	x0, x26, x28
   30238:	mov	w1, #0x4                   	// #4
   3023c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   30240:	cmp	w19, w0
   30244:	b.ne	3026c <ZSTD_endStream@@Base+0x22318>  // b.any
   30248:	ldr	x0, [sp, #120]
   3024c:	ldur	x2, [x29, #-184]
   30250:	neg	x8, x28
   30254:	add	x1, x0, x8
   30258:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3025c:	add	w8, w0, #0x4
   30260:	b	30270 <ZSTD_endStream@@Base+0x2231c>
   30264:	mov	w8, wzr
   30268:	b	30288 <ZSTD_endStream@@Base+0x22334>
   3026c:	mov	w8, wzr
   30270:	ldur	w12, [x29, #-136]
   30274:	ldur	x16, [x29, #-144]
   30278:	mov	w26, w20
   3027c:	mov	w13, w22
   30280:	mov	w15, w25
   30284:	mov	x25, x21
   30288:	mov	w9, w8
   3028c:	cmp	x25, x9
   30290:	b.cs	302d0 <ZSTD_endStream@@Base+0x2237c>  // b.hs, b.nlast
   30294:	ldur	x10, [x29, #-168]
   30298:	ldur	w11, [x29, #-192]
   3029c:	add	x10, x10, w26, uxtw #3
   302a0:	add	w26, w26, #0x1
   302a4:	cmp	w8, w11
   302a8:	stp	w23, w8, [x10]
   302ac:	mov	w8, #0x1                   	// #1
   302b0:	b.hi	302fc <ZSTD_endStream@@Base+0x223a8>  // b.pmore
   302b4:	ldp	x11, x10, [x29, #-184]
   302b8:	mov	x25, x9
   302bc:	mov	w19, w26
   302c0:	add	x10, x10, x9
   302c4:	cmp	x10, x11
   302c8:	b.ne	302d4 <ZSTD_endStream@@Base+0x22380>  // b.any
   302cc:	b	302e0 <ZSTD_endStream@@Base+0x2238c>
   302d0:	mov	x9, x25
   302d4:	mov	w8, wzr
   302d8:	mov	x25, x9
   302dc:	mov	w19, w27
   302e0:	cbnz	w8, 306f0 <ZSTD_endStream@@Base+0x2279c>
   302e4:	add	x23, x23, #0x1
   302e8:	add	x8, x16, x23
   302ec:	cmp	x8, x24
   302f0:	mov	w27, w19
   302f4:	b.cc	301e8 <ZSTD_endStream@@Base+0x22294>  // b.lo, b.ul, b.last
   302f8:	b	306ec <ZSTD_endStream@@Base+0x22798>
   302fc:	mov	x25, x9
   30300:	mov	w19, w26
   30304:	cbz	w8, 302e4 <ZSTD_endStream@@Base+0x22390>
   30308:	b	306f0 <ZSTD_endStream@@Base+0x2279c>
   3030c:	ldr	w8, [x23, #204]
   30310:	ldr	x10, [x23, #8]
   30314:	ldr	w1, [x23, #192]
   30318:	ldr	x19, [x23, #48]
   3031c:	cmp	w8, #0xfff
   30320:	mov	w9, #0xfff                 	// #4095
   30324:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   30328:	mov	w2, #0x4                   	// #4
   3032c:	mov	x0, x25
   30330:	stur	w8, [x29, #-192]
   30334:	str	x10, [sp, #224]
   30338:	sub	w21, w25, w10
   3033c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   30340:	ldp	w2, w8, [x23, #184]
   30344:	ldr	w9, [x19, x0, lsl #2]
   30348:	str	x19, [sp, #104]
   3034c:	ldr	x22, [x23, #64]
   30350:	sub	w8, w8, #0x1
   30354:	str	w9, [sp, #116]
   30358:	mov	w9, #0xffffffff            	// #-1
   3035c:	lsl	w19, w9, w8
   30360:	ldr	w20, [x23, #24]
   30364:	mvn	w8, w19
   30368:	str	w8, [sp, #144]
   3036c:	subs	w8, w21, w8
   30370:	str	x0, [sp, #80]
   30374:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   30378:	mov	x0, x23
   3037c:	mov	w1, w21
   30380:	str	w8, [sp, #136]
   30384:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   30388:	cmp	w0, #0x0
   3038c:	csinc	w11, w0, wzr, ne  // ne = any
   30390:	str	w11, [sp, #232]
   30394:	ldur	w11, [x29, #-104]
   30398:	add	w10, w21, #0x9
   3039c:	mov	x9, x23
   303a0:	bic	w8, w21, w19
   303a4:	cmp	w11, #0x0
   303a8:	stur	w10, [x29, #-220]
   303ac:	add	x10, x25, #0x4
   303b0:	sub	x12, x29, #0x50
   303b4:	cset	w16, eq  // eq = none
   303b8:	ldr	w9, [x9, #196]
   303bc:	str	x10, [sp, #120]
   303c0:	ldur	w10, [x29, #-80]
   303c4:	lsl	w8, w8, #1
   303c8:	bfi	x12, x16, #2, #1
   303cc:	add	x11, x22, w8, uxtw #2
   303d0:	mov	w8, #0x3                   	// #3
   303d4:	stur	x12, [x29, #-128]
   303d8:	ldr	x25, [sp, #88]
   303dc:	ldur	w12, [x29, #-136]
   303e0:	cinc	x24, x8, eq  // eq = none
   303e4:	add	x8, x11, #0x4
   303e8:	stp	x8, x11, [sp, #168]
   303ec:	mov	w8, #0x1                   	// #1
   303f0:	mov	x23, xzr
   303f4:	mov	w26, wzr
   303f8:	sub	w13, w21, w20
   303fc:	lsl	w8, w8, w9
   30400:	sub	w15, w10, #0x1
   30404:	str	w21, [sp, #96]
   30408:	str	x22, [sp, #152]
   3040c:	stur	w8, [x29, #-112]
   30410:	stur	x16, [x29, #-144]
   30414:	add	x8, x16, x23
   30418:	cmp	x8, #0x3
   3041c:	mov	w28, w15
   30420:	b.eq	3042c <ZSTD_endStream@@Base+0x224d8>  // b.none
   30424:	ldur	x8, [x29, #-128]
   30428:	ldr	w28, [x8, x23, lsl #2]
   3042c:	sub	w8, w28, #0x1
   30430:	cmp	w8, w13
   30434:	b.cs	30490 <ZSTD_endStream@@Base+0x2253c>  // b.hs, b.nlast
   30438:	mov	w20, w26
   3043c:	ldur	x26, [x29, #-176]
   30440:	mov	w1, #0x4                   	// #4
   30444:	mov	x21, x25
   30448:	mov	w25, w15
   3044c:	mov	x0, x26
   30450:	mov	w22, w13
   30454:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   30458:	mov	w28, w28
   3045c:	mov	w19, w0
   30460:	sub	x0, x26, x28
   30464:	mov	w1, #0x4                   	// #4
   30468:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3046c:	cmp	w19, w0
   30470:	b.ne	30498 <ZSTD_endStream@@Base+0x22544>  // b.any
   30474:	ldr	x0, [sp, #120]
   30478:	ldur	x2, [x29, #-184]
   3047c:	neg	x8, x28
   30480:	add	x1, x0, x8
   30484:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   30488:	add	w8, w0, #0x4
   3048c:	b	3049c <ZSTD_endStream@@Base+0x22548>
   30490:	mov	w8, wzr
   30494:	b	304b4 <ZSTD_endStream@@Base+0x22560>
   30498:	mov	w8, wzr
   3049c:	ldur	w12, [x29, #-136]
   304a0:	ldur	x16, [x29, #-144]
   304a4:	mov	w26, w20
   304a8:	mov	w13, w22
   304ac:	mov	w15, w25
   304b0:	mov	x25, x21
   304b4:	mov	w9, w8
   304b8:	cmp	x25, x9
   304bc:	b.cs	304fc <ZSTD_endStream@@Base+0x225a8>  // b.hs, b.nlast
   304c0:	ldur	x10, [x29, #-168]
   304c4:	ldur	w11, [x29, #-192]
   304c8:	add	x10, x10, w26, uxtw #3
   304cc:	add	w26, w26, #0x1
   304d0:	cmp	w8, w11
   304d4:	stp	w23, w8, [x10]
   304d8:	mov	w8, #0x1                   	// #1
   304dc:	b.hi	30528 <ZSTD_endStream@@Base+0x225d4>  // b.pmore
   304e0:	ldp	x11, x10, [x29, #-184]
   304e4:	mov	x25, x9
   304e8:	mov	w19, w26
   304ec:	add	x10, x10, x9
   304f0:	cmp	x10, x11
   304f4:	b.ne	30500 <ZSTD_endStream@@Base+0x225ac>  // b.any
   304f8:	b	3050c <ZSTD_endStream@@Base+0x225b8>
   304fc:	mov	x9, x25
   30500:	mov	w8, wzr
   30504:	mov	x25, x9
   30508:	mov	w19, w27
   3050c:	cbnz	w8, 3088c <ZSTD_endStream@@Base+0x22938>
   30510:	add	x23, x23, #0x1
   30514:	add	x8, x16, x23
   30518:	cmp	x8, x24
   3051c:	mov	w27, w19
   30520:	b.cc	30414 <ZSTD_endStream@@Base+0x224c0>  // b.lo, b.ul, b.last
   30524:	b	30888 <ZSTD_endStream@@Base+0x22934>
   30528:	mov	x25, x9
   3052c:	mov	w19, w26
   30530:	cbz	w8, 30510 <ZSTD_endStream@@Base+0x225bc>
   30534:	b	3088c <ZSTD_endStream@@Base+0x22938>
   30538:	mov	w8, wzr
   3053c:	ldp	x24, x23, [x29, #-96]
   30540:	ldur	x27, [x29, #-208]
   30544:	cbnz	w8, 30cf0 <ZSTD_endStream@@Base+0x22d9c>
   30548:	ldr	w9, [sp, #96]
   3054c:	ldr	x8, [sp, #104]
   30550:	ldr	x10, [sp, #80]
   30554:	ldr	w13, [sp, #116]
   30558:	mov	x21, xzr
   3055c:	mov	x20, xzr
   30560:	add	w19, w9, #0x2
   30564:	str	w9, [x8, x10, lsl #2]
   30568:	b	30588 <ZSTD_endStream@@Base+0x22634>
   3056c:	ldur	x23, [x29, #-88]
   30570:	ldur	w12, [x29, #-136]
   30574:	mov	x25, x8
   30578:	mov	x8, x20
   3057c:	mov	w13, w15
   30580:	mov	x20, x8
   30584:	tbz	w9, #0, 30a24 <ZSTD_endStream@@Base+0x22ad0>
   30588:	ldur	w8, [x29, #-112]
   3058c:	subs	w8, w8, #0x1
   30590:	b.cc	30a24 <ZSTD_endStream@@Base+0x22ad0>  // b.lo, b.ul, b.last
   30594:	stur	w8, [x29, #-112]
   30598:	ldr	w8, [sp, #232]
   3059c:	cmp	w13, w8
   305a0:	b.cc	30a24 <ZSTD_endStream@@Base+0x22ad0>  // b.lo, b.ul, b.last
   305a4:	ldr	x8, [sp, #224]
   305a8:	cmp	x20, x21
   305ac:	csel	x23, x20, x21, cc  // cc = lo, ul, last
   305b0:	mov	w28, w13
   305b4:	add	x22, x8, w13, uxtw
   305b8:	ldp	x2, x8, [x29, #-184]
   305bc:	add	x1, x22, x23
   305c0:	add	x0, x8, x23
   305c4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   305c8:	add	x8, x0, x23
   305cc:	cmp	x8, x25
   305d0:	b.ls	30630 <ZSTD_endStream@@Base+0x226dc>  // b.plast
   305d4:	ldur	w14, [x29, #-220]
   305d8:	ldur	x13, [x29, #-168]
   305dc:	add	w11, w28, w8
   305e0:	mov	w9, wzr
   305e4:	sub	w10, w14, w28
   305e8:	cmp	x8, x10
   305ec:	mov	w15, w28
   305f0:	sub	w12, w19, w28
   305f4:	add	x13, x13, w26, uxtw #3
   305f8:	csel	w14, w11, w14, hi  // hi = pmore
   305fc:	cmp	x8, #0x1, lsl #12
   30600:	add	w26, w26, #0x1
   30604:	stp	w12, w8, [x13]
   30608:	stur	w14, [x29, #-220]
   3060c:	b.hi	3056c <ZSTD_endStream@@Base+0x22618>  // b.pmore
   30610:	ldp	x11, x10, [x29, #-184]
   30614:	ldur	x23, [x29, #-88]
   30618:	ldur	w12, [x29, #-136]
   3061c:	mov	x25, x8
   30620:	add	x10, x10, x8
   30624:	cmp	x10, x11
   30628:	b.ne	3063c <ZSTD_endStream@@Base+0x226e8>  // b.any
   3062c:	b	30574 <ZSTD_endStream@@Base+0x22620>
   30630:	ldur	x23, [x29, #-88]
   30634:	ldur	w12, [x29, #-136]
   30638:	mov	w15, w28
   3063c:	ldur	x10, [x29, #-176]
   30640:	ldrb	w9, [x22, x8]
   30644:	ldr	w11, [sp, #144]
   30648:	mov	w13, w15
   3064c:	ldrb	w10, [x10, x8]
   30650:	and	w11, w15, w11
   30654:	lsl	w11, w11, #1
   30658:	cmp	w9, w10
   3065c:	ldr	x9, [sp, #152]
   30660:	add	x9, x9, w11, uxtw #2
   30664:	b.cs	30688 <ZSTD_endStream@@Base+0x22734>  // b.hs, b.nlast
   30668:	ldr	w10, [sp, #136]
   3066c:	cmp	w13, w10
   30670:	ldr	x10, [sp, #176]
   30674:	str	w13, [x10]
   30678:	b.ls	306b4 <ZSTD_endStream@@Base+0x22760>  // b.plast
   3067c:	add	x9, x9, #0x4
   30680:	str	x9, [sp, #176]
   30684:	b	306a8 <ZSTD_endStream@@Base+0x22754>
   30688:	ldr	w10, [sp, #136]
   3068c:	cmp	w13, w10
   30690:	ldr	x10, [sp, #168]
   30694:	str	w13, [x10]
   30698:	b.ls	306c4 <ZSTD_endStream@@Base+0x22770>  // b.plast
   3069c:	str	x9, [sp, #168]
   306a0:	mov	x21, x8
   306a4:	mov	x8, x20
   306a8:	ldr	w13, [x9]
   306ac:	mov	w9, #0x1                   	// #1
   306b0:	b	30580 <ZSTD_endStream@@Base+0x2262c>
   306b4:	sub	x10, x29, #0x40
   306b8:	mov	w9, wzr
   306bc:	str	x10, [sp, #176]
   306c0:	b	30580 <ZSTD_endStream@@Base+0x2262c>
   306c4:	sub	x10, x29, #0x40
   306c8:	mov	w9, wzr
   306cc:	str	x10, [sp, #168]
   306d0:	mov	x21, x8
   306d4:	mov	x8, x20
   306d8:	b	30580 <ZSTD_endStream@@Base+0x2262c>
   306dc:	mov	w8, wzr
   306e0:	cbz	w8, 30a48 <ZSTD_endStream@@Base+0x22af4>
   306e4:	ldp	x24, x23, [x29, #-96]
   306e8:	b	30cec <ZSTD_endStream@@Base+0x22d98>
   306ec:	mov	w8, wzr
   306f0:	ldp	x24, x23, [x29, #-96]
   306f4:	ldur	x27, [x29, #-208]
   306f8:	cbnz	w8, 30cf0 <ZSTD_endStream@@Base+0x22d9c>
   306fc:	ldr	w9, [sp, #96]
   30700:	ldr	x8, [sp, #104]
   30704:	ldr	x10, [sp, #80]
   30708:	ldr	w13, [sp, #116]
   3070c:	mov	x21, xzr
   30710:	mov	x20, xzr
   30714:	add	w19, w9, #0x2
   30718:	str	w9, [x8, x10, lsl #2]
   3071c:	b	30738 <ZSTD_endStream@@Base+0x227e4>
   30720:	ldur	w12, [x29, #-136]
   30724:	mov	x25, x8
   30728:	mov	x8, x20
   3072c:	mov	w13, w15
   30730:	mov	x20, x8
   30734:	tbz	w9, #0, 30a24 <ZSTD_endStream@@Base+0x22ad0>
   30738:	ldur	w8, [x29, #-112]
   3073c:	subs	w8, w8, #0x1
   30740:	b.cc	30a24 <ZSTD_endStream@@Base+0x22ad0>  // b.lo, b.ul, b.last
   30744:	stur	w8, [x29, #-112]
   30748:	ldr	w8, [sp, #232]
   3074c:	cmp	w13, w8
   30750:	b.cc	30a24 <ZSTD_endStream@@Base+0x22ad0>  // b.lo, b.ul, b.last
   30754:	ldr	x8, [sp, #224]
   30758:	cmp	x20, x21
   3075c:	csel	x23, x20, x21, cc  // cc = lo, ul, last
   30760:	mov	w28, w13
   30764:	add	x22, x8, w13, uxtw
   30768:	ldp	x2, x8, [x29, #-184]
   3076c:	add	x1, x22, x23
   30770:	add	x0, x8, x23
   30774:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   30778:	add	x8, x0, x23
   3077c:	cmp	x8, x25
   30780:	b.ls	307dc <ZSTD_endStream@@Base+0x22888>  // b.plast
   30784:	ldur	x13, [x29, #-168]
   30788:	ldur	w14, [x29, #-220]
   3078c:	sub	w12, w19, w28
   30790:	add	w11, w28, w8
   30794:	add	x13, x13, w26, uxtw #3
   30798:	stp	w12, w8, [x13]
   3079c:	ldur	x23, [x29, #-88]
   307a0:	sub	w10, w14, w28
   307a4:	cmp	x8, x10
   307a8:	mov	w9, wzr
   307ac:	mov	w15, w28
   307b0:	csel	w14, w11, w14, hi  // hi = pmore
   307b4:	cmp	x8, #0x1, lsl #12
   307b8:	add	w26, w26, #0x1
   307bc:	stur	w14, [x29, #-220]
   307c0:	b.hi	30720 <ZSTD_endStream@@Base+0x227cc>  // b.pmore
   307c4:	ldp	x11, x10, [x29, #-184]
   307c8:	mov	x25, x8
   307cc:	add	x10, x10, x8
   307d0:	cmp	x10, x11
   307d4:	b.ne	307e4 <ZSTD_endStream@@Base+0x22890>  // b.any
   307d8:	b	30720 <ZSTD_endStream@@Base+0x227cc>
   307dc:	ldur	x23, [x29, #-88]
   307e0:	mov	w15, w28
   307e4:	ldur	x10, [x29, #-176]
   307e8:	ldrb	w9, [x22, x8]
   307ec:	ldr	w11, [sp, #144]
   307f0:	ldur	w12, [x29, #-136]
   307f4:	ldrb	w10, [x10, x8]
   307f8:	mov	w13, w15
   307fc:	and	w11, w15, w11
   30800:	lsl	w11, w11, #1
   30804:	cmp	w9, w10
   30808:	ldr	x9, [sp, #152]
   3080c:	add	x9, x9, w11, uxtw #2
   30810:	b.cs	30834 <ZSTD_endStream@@Base+0x228e0>  // b.hs, b.nlast
   30814:	ldr	w10, [sp, #136]
   30818:	cmp	w13, w10
   3081c:	ldr	x10, [sp, #176]
   30820:	str	w13, [x10]
   30824:	b.ls	30860 <ZSTD_endStream@@Base+0x2290c>  // b.plast
   30828:	add	x9, x9, #0x4
   3082c:	str	x9, [sp, #176]
   30830:	b	30854 <ZSTD_endStream@@Base+0x22900>
   30834:	ldr	w10, [sp, #136]
   30838:	cmp	w13, w10
   3083c:	ldr	x10, [sp, #168]
   30840:	str	w13, [x10]
   30844:	b.ls	30870 <ZSTD_endStream@@Base+0x2291c>  // b.plast
   30848:	str	x9, [sp, #168]
   3084c:	mov	x21, x8
   30850:	mov	x8, x20
   30854:	ldr	w13, [x9]
   30858:	mov	w9, #0x1                   	// #1
   3085c:	b	30730 <ZSTD_endStream@@Base+0x227dc>
   30860:	sub	x10, x29, #0x40
   30864:	mov	w9, wzr
   30868:	str	x10, [sp, #176]
   3086c:	b	30730 <ZSTD_endStream@@Base+0x227dc>
   30870:	sub	x10, x29, #0x40
   30874:	mov	w9, wzr
   30878:	str	x10, [sp, #168]
   3087c:	mov	x21, x8
   30880:	mov	x8, x20
   30884:	b	30730 <ZSTD_endStream@@Base+0x227dc>
   30888:	mov	w8, wzr
   3088c:	ldp	x24, x23, [x29, #-96]
   30890:	ldur	x27, [x29, #-208]
   30894:	cbnz	w8, 30cf0 <ZSTD_endStream@@Base+0x22d9c>
   30898:	ldr	w9, [sp, #96]
   3089c:	ldr	x8, [sp, #104]
   308a0:	ldr	x10, [sp, #80]
   308a4:	ldr	w13, [sp, #116]
   308a8:	mov	x21, xzr
   308ac:	mov	x20, xzr
   308b0:	add	w19, w9, #0x2
   308b4:	str	w9, [x8, x10, lsl #2]
   308b8:	b	308d4 <ZSTD_endStream@@Base+0x22980>
   308bc:	ldur	w12, [x29, #-136]
   308c0:	mov	x25, x8
   308c4:	mov	x8, x20
   308c8:	mov	w13, w15
   308cc:	mov	x20, x8
   308d0:	tbz	w9, #0, 30a24 <ZSTD_endStream@@Base+0x22ad0>
   308d4:	ldur	w8, [x29, #-112]
   308d8:	subs	w8, w8, #0x1
   308dc:	b.cc	30a24 <ZSTD_endStream@@Base+0x22ad0>  // b.lo, b.ul, b.last
   308e0:	stur	w8, [x29, #-112]
   308e4:	ldr	w8, [sp, #232]
   308e8:	cmp	w13, w8
   308ec:	b.cc	30a24 <ZSTD_endStream@@Base+0x22ad0>  // b.lo, b.ul, b.last
   308f0:	ldr	x8, [sp, #224]
   308f4:	cmp	x20, x21
   308f8:	csel	x23, x20, x21, cc  // cc = lo, ul, last
   308fc:	mov	w28, w13
   30900:	add	x22, x8, w13, uxtw
   30904:	ldp	x2, x8, [x29, #-184]
   30908:	add	x1, x22, x23
   3090c:	add	x0, x8, x23
   30910:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   30914:	add	x8, x0, x23
   30918:	cmp	x8, x25
   3091c:	b.ls	30978 <ZSTD_endStream@@Base+0x22a24>  // b.plast
   30920:	ldur	x13, [x29, #-168]
   30924:	ldur	w14, [x29, #-220]
   30928:	sub	w12, w19, w28
   3092c:	add	w11, w28, w8
   30930:	add	x13, x13, w26, uxtw #3
   30934:	stp	w12, w8, [x13]
   30938:	ldur	x23, [x29, #-88]
   3093c:	sub	w10, w14, w28
   30940:	cmp	x8, x10
   30944:	mov	w9, wzr
   30948:	mov	w15, w28
   3094c:	csel	w14, w11, w14, hi  // hi = pmore
   30950:	cmp	x8, #0x1, lsl #12
   30954:	add	w26, w26, #0x1
   30958:	stur	w14, [x29, #-220]
   3095c:	b.hi	308bc <ZSTD_endStream@@Base+0x22968>  // b.pmore
   30960:	ldp	x11, x10, [x29, #-184]
   30964:	mov	x25, x8
   30968:	add	x10, x10, x8
   3096c:	cmp	x10, x11
   30970:	b.ne	30980 <ZSTD_endStream@@Base+0x22a2c>  // b.any
   30974:	b	308bc <ZSTD_endStream@@Base+0x22968>
   30978:	ldur	x23, [x29, #-88]
   3097c:	mov	w15, w28
   30980:	ldur	x10, [x29, #-176]
   30984:	ldrb	w9, [x22, x8]
   30988:	ldr	w11, [sp, #144]
   3098c:	ldur	w12, [x29, #-136]
   30990:	ldrb	w10, [x10, x8]
   30994:	mov	w13, w15
   30998:	and	w11, w15, w11
   3099c:	lsl	w11, w11, #1
   309a0:	cmp	w9, w10
   309a4:	ldr	x9, [sp, #152]
   309a8:	add	x9, x9, w11, uxtw #2
   309ac:	b.cs	309d0 <ZSTD_endStream@@Base+0x22a7c>  // b.hs, b.nlast
   309b0:	ldr	w10, [sp, #136]
   309b4:	cmp	w13, w10
   309b8:	ldr	x10, [sp, #176]
   309bc:	str	w13, [x10]
   309c0:	b.ls	309fc <ZSTD_endStream@@Base+0x22aa8>  // b.plast
   309c4:	add	x9, x9, #0x4
   309c8:	str	x9, [sp, #176]
   309cc:	b	309f0 <ZSTD_endStream@@Base+0x22a9c>
   309d0:	ldr	w10, [sp, #136]
   309d4:	cmp	w13, w10
   309d8:	ldr	x10, [sp, #168]
   309dc:	str	w13, [x10]
   309e0:	b.ls	30a0c <ZSTD_endStream@@Base+0x22ab8>  // b.plast
   309e4:	str	x9, [sp, #168]
   309e8:	mov	x21, x8
   309ec:	mov	x8, x20
   309f0:	ldr	w13, [x9]
   309f4:	mov	w9, #0x1                   	// #1
   309f8:	b	308cc <ZSTD_endStream@@Base+0x22978>
   309fc:	sub	x10, x29, #0x40
   30a00:	mov	w9, wzr
   30a04:	str	x10, [sp, #176]
   30a08:	b	308cc <ZSTD_endStream@@Base+0x22978>
   30a0c:	sub	x10, x29, #0x40
   30a10:	mov	w9, wzr
   30a14:	str	x10, [sp, #168]
   30a18:	mov	x21, x8
   30a1c:	mov	x8, x20
   30a20:	b	308cc <ZSTD_endStream@@Base+0x22978>
   30a24:	ldr	x8, [sp, #168]
   30a28:	mov	w19, w26
   30a2c:	str	wzr, [x8]
   30a30:	ldr	x8, [sp, #176]
   30a34:	str	wzr, [x8]
   30a38:	ldur	w8, [x29, #-220]
   30a3c:	sub	w8, w8, #0x8
   30a40:	str	w8, [x23, #36]
   30a44:	b	30cf0 <ZSTD_endStream@@Base+0x22d9c>
   30a48:	cmp	x25, #0x2
   30a4c:	b.hi	30aa4 <ZSTD_endStream@@Base+0x22b50>  // b.pmore
   30a50:	ldur	x23, [x29, #-88]
   30a54:	ldur	x2, [x29, #-176]
   30a58:	sub	x1, x29, #0xc
   30a5c:	mov	x0, x23
   30a60:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   30a64:	ldr	w8, [sp, #232]
   30a68:	cmp	w0, w8
   30a6c:	b.cc	30ab0 <ZSTD_endStream@@Base+0x22b5c>  // b.lo, b.ul, b.last
   30a70:	ldr	w21, [sp, #120]
   30a74:	sub	w20, w21, w0
   30a78:	lsr	w8, w20, #18
   30a7c:	cbnz	w8, 30ac0 <ZSTD_endStream@@Base+0x22b6c>
   30a80:	ldr	x8, [sp, #104]
   30a84:	add	x1, x8, w0, uxtw
   30a88:	ldp	x2, x0, [x29, #-184]
   30a8c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   30a90:	cmp	x0, #0x3
   30a94:	b.cs	30ad0 <ZSTD_endStream@@Base+0x22b7c>  // b.hs, b.nlast
   30a98:	mov	w8, wzr
   30a9c:	mov	x0, x25
   30aa0:	b	30b18 <ZSTD_endStream@@Base+0x22bc4>
   30aa4:	ldur	x24, [x29, #-96]
   30aa8:	ldp	w13, w21, [sp, #116]
   30aac:	b	30b3c <ZSTD_endStream@@Base+0x22be8>
   30ab0:	ldur	x24, [x29, #-96]
   30ab4:	ldur	w12, [x29, #-136]
   30ab8:	ldp	w13, w21, [sp, #116]
   30abc:	b	30b2c <ZSTD_endStream@@Base+0x22bd8>
   30ac0:	ldur	x24, [x29, #-96]
   30ac4:	ldur	w12, [x29, #-136]
   30ac8:	ldr	w13, [sp, #116]
   30acc:	b	30b2c <ZSTD_endStream@@Base+0x22bd8>
   30ad0:	ldur	w9, [x29, #-144]
   30ad4:	add	w8, w20, #0x2
   30ad8:	cmp	x0, w9, uxtw
   30adc:	ldur	x9, [x29, #-168]
   30ae0:	stp	w8, w0, [x9]
   30ae4:	b.hi	30b04 <ZSTD_endStream@@Base+0x22bb0>  // b.pmore
   30ae8:	ldp	x9, x8, [x29, #-184]
   30aec:	add	x8, x8, x0
   30af0:	cmp	x8, x9
   30af4:	b.eq	30b04 <ZSTD_endStream@@Base+0x22bb0>  // b.none
   30af8:	mov	w8, wzr
   30afc:	mov	w27, #0x1                   	// #1
   30b00:	b	30b18 <ZSTD_endStream@@Base+0x22bc4>
   30b04:	add	w9, w21, #0x1
   30b08:	mov	w27, #0x1                   	// #1
   30b0c:	mov	w8, #0x1                   	// #1
   30b10:	mov	w19, #0x1                   	// #1
   30b14:	str	w9, [x23, #36]
   30b18:	ldur	x24, [x29, #-96]
   30b1c:	ldur	w12, [x29, #-136]
   30b20:	ldr	w13, [sp, #116]
   30b24:	mov	x25, x0
   30b28:	cbnz	w8, 30b34 <ZSTD_endStream@@Base+0x22be0>
   30b2c:	mov	w8, wzr
   30b30:	mov	x0, x25
   30b34:	mov	x25, x0
   30b38:	cbnz	w8, 30cec <ZSTD_endStream@@Base+0x22d98>
   30b3c:	ldr	x8, [sp, #96]
   30b40:	ldr	x9, [sp, #80]
   30b44:	mov	w19, w27
   30b48:	ldur	x26, [x29, #-184]
   30b4c:	ldr	x27, [sp, #104]
   30b50:	mov	x23, xzr
   30b54:	mov	x20, xzr
   30b58:	str	w21, [x8, x9, lsl #2]
   30b5c:	add	w21, w21, #0x2
   30b60:	b	30b7c <ZSTD_endStream@@Base+0x22c28>
   30b64:	ldur	w12, [x29, #-136]
   30b68:	mov	x25, x8
   30b6c:	mov	x8, x20
   30b70:	mov	w13, w15
   30b74:	mov	x20, x8
   30b78:	tbz	w9, #0, 30ccc <ZSTD_endStream@@Base+0x22d78>
   30b7c:	ldur	w8, [x29, #-128]
   30b80:	subs	w8, w8, #0x1
   30b84:	b.cc	30ccc <ZSTD_endStream@@Base+0x22d78>  // b.lo, b.ul, b.last
   30b88:	stur	w8, [x29, #-128]
   30b8c:	ldr	w8, [sp, #232]
   30b90:	cmp	w13, w8
   30b94:	b.cc	30ccc <ZSTD_endStream@@Base+0x22d78>  // b.lo, b.ul, b.last
   30b98:	ldur	x8, [x29, #-176]
   30b9c:	cmp	x20, x23
   30ba0:	add	x22, x27, w13, uxtw
   30ba4:	csel	x24, x20, x23, cc  // cc = lo, ul, last
   30ba8:	add	x0, x8, x24
   30bac:	add	x1, x22, x24
   30bb0:	mov	x2, x26
   30bb4:	mov	w28, w13
   30bb8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   30bbc:	add	x8, x0, x24
   30bc0:	cmp	x8, x25
   30bc4:	b.ls	30c20 <ZSTD_endStream@@Base+0x22ccc>  // b.plast
   30bc8:	ldur	x13, [x29, #-168]
   30bcc:	ldur	w14, [x29, #-220]
   30bd0:	sub	w12, w21, w28
   30bd4:	add	w11, w28, w8
   30bd8:	add	x13, x13, w19, uxtw #3
   30bdc:	stp	w12, w8, [x13]
   30be0:	ldur	x24, [x29, #-96]
   30be4:	sub	w10, w14, w28
   30be8:	cmp	x8, x10
   30bec:	mov	w9, wzr
   30bf0:	mov	w15, w28
   30bf4:	csel	w14, w11, w14, hi  // hi = pmore
   30bf8:	cmp	x8, #0x1, lsl #12
   30bfc:	add	w19, w19, #0x1
   30c00:	stur	w14, [x29, #-220]
   30c04:	b.hi	30b64 <ZSTD_endStream@@Base+0x22c10>  // b.pmore
   30c08:	ldur	x10, [x29, #-176]
   30c0c:	mov	x25, x8
   30c10:	add	x10, x10, x8
   30c14:	cmp	x10, x26
   30c18:	b.ne	30c28 <ZSTD_endStream@@Base+0x22cd4>  // b.any
   30c1c:	b	30b64 <ZSTD_endStream@@Base+0x22c10>
   30c20:	ldur	x24, [x29, #-96]
   30c24:	mov	w15, w28
   30c28:	ldur	x10, [x29, #-176]
   30c2c:	ldrb	w9, [x22, x8]
   30c30:	ldr	w11, [sp, #144]
   30c34:	ldur	w12, [x29, #-136]
   30c38:	ldrb	w10, [x10, x8]
   30c3c:	mov	w13, w15
   30c40:	and	w11, w15, w11
   30c44:	lsl	w11, w11, #1
   30c48:	cmp	w9, w10
   30c4c:	ldr	x9, [sp, #152]
   30c50:	add	x9, x9, w11, uxtw #2
   30c54:	b.cs	30c78 <ZSTD_endStream@@Base+0x22d24>  // b.hs, b.nlast
   30c58:	ldr	w10, [sp, #136]
   30c5c:	cmp	w13, w10
   30c60:	ldr	x10, [sp, #176]
   30c64:	str	w13, [x10]
   30c68:	b.ls	30ca4 <ZSTD_endStream@@Base+0x22d50>  // b.plast
   30c6c:	add	x9, x9, #0x4
   30c70:	str	x9, [sp, #176]
   30c74:	b	30c98 <ZSTD_endStream@@Base+0x22d44>
   30c78:	ldr	w10, [sp, #136]
   30c7c:	cmp	w13, w10
   30c80:	ldr	x10, [sp, #168]
   30c84:	str	w13, [x10]
   30c88:	b.ls	30cb4 <ZSTD_endStream@@Base+0x22d60>  // b.plast
   30c8c:	str	x9, [sp, #168]
   30c90:	mov	x23, x8
   30c94:	mov	x8, x20
   30c98:	ldr	w13, [x9]
   30c9c:	mov	w9, #0x1                   	// #1
   30ca0:	b	30b74 <ZSTD_endStream@@Base+0x22c20>
   30ca4:	sub	x10, x29, #0x40
   30ca8:	mov	w9, wzr
   30cac:	str	x10, [sp, #176]
   30cb0:	b	30b74 <ZSTD_endStream@@Base+0x22c20>
   30cb4:	sub	x10, x29, #0x40
   30cb8:	mov	w9, wzr
   30cbc:	str	x10, [sp, #168]
   30cc0:	mov	x23, x8
   30cc4:	mov	x8, x20
   30cc8:	b	30b74 <ZSTD_endStream@@Base+0x22c20>
   30ccc:	ldr	x8, [sp, #168]
   30cd0:	ldur	x23, [x29, #-88]
   30cd4:	str	wzr, [x8]
   30cd8:	ldr	x8, [sp, #176]
   30cdc:	str	wzr, [x8]
   30ce0:	ldur	w8, [x29, #-220]
   30ce4:	sub	w8, w8, #0x8
   30ce8:	str	w8, [x23, #36]
   30cec:	ldur	x27, [x29, #-208]
   30cf0:	ldur	x20, [x29, #-216]
   30cf4:	ldur	w21, [x29, #-116]
   30cf8:	ldur	x25, [x29, #-176]
   30cfc:	mov	w26, #0x1c                  	// #28
   30d00:	cbnz	w19, 2fa00 <ZSTD_endStream@@Base+0x21aac>
   30d04:	mov	w0, wzr
   30d08:	add	x25, x25, #0x1
   30d0c:	mov	w8, #0x2                   	// #2
   30d10:	cmp	w8, #0x7
   30d14:	b.eq	322a8 <ZSTD_endStream@@Base+0x24354>  // b.none
   30d18:	cbnz	w8, 2f9b0 <ZSTD_endStream@@Base+0x21a5c>
   30d1c:	cbz	w0, 322b0 <ZSTD_endStream@@Base+0x2435c>
   30d20:	mov	w21, #0x1                   	// #1
   30d24:	stur	x25, [x29, #-176]
   30d28:	sub	w19, w21, #0x1
   30d2c:	umaddl	x8, w19, w26, x24
   30d30:	ldr	w8, [x8, #8]
   30d34:	mov	w9, w21
   30d38:	mov	x28, x27
   30d3c:	add	x27, x25, x9
   30d40:	mov	w25, w21
   30d44:	stur	w0, [x29, #-128]
   30d48:	stur	w12, [x29, #-136]
   30d4c:	stur	x9, [x29, #-104]
   30d50:	cbz	w8, 30d5c <ZSTD_endStream@@Base+0x22e08>
   30d54:	mov	w21, #0x1                   	// #1
   30d58:	b	30d68 <ZSTD_endStream@@Base+0x22e14>
   30d5c:	madd	x8, x19, x26, x24
   30d60:	ldr	w8, [x8, #12]
   30d64:	add	w21, w8, #0x1
   30d68:	ldur	x22, [x29, #-200]
   30d6c:	mul	x8, x19, x26
   30d70:	ldr	w20, [x24, x8]
   30d74:	sub	x0, x27, #0x1
   30d78:	mov	w1, #0x1                   	// #1
   30d7c:	mov	w3, #0x2                   	// #2
   30d80:	mov	x2, x22
   30d84:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   30d88:	add	w20, w0, w20
   30d8c:	mov	w2, #0x2                   	// #2
   30d90:	mov	w0, w21
   30d94:	mov	x1, x22
   30d98:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   30d9c:	add	w20, w20, w0
   30da0:	sub	w0, w21, #0x1
   30da4:	mov	w2, #0x2                   	// #2
   30da8:	mov	x1, x22
   30dac:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   30db0:	ldur	x13, [x29, #-104]
   30db4:	sub	w9, w20, w0
   30db8:	madd	x8, x13, x26, x24
   30dbc:	ldr	w10, [x8]
   30dc0:	cmp	w9, w10
   30dc4:	b.gt	30dec <ZSTD_endStream@@Base+0x22e98>
   30dc8:	madd	x10, x13, x26, x24
   30dcc:	madd	x11, x19, x26, x24
   30dd0:	stur	xzr, [x10, #4]
   30dd4:	str	w21, [x10, #12]
   30dd8:	str	w9, [x8]
   30ddc:	ldr	w9, [x11, #24]
   30de0:	ldr	x11, [x11, #16]
   30de4:	str	w9, [x10, #24]
   30de8:	str	x11, [x10, #16]
   30dec:	ldr	x9, [sp, #200]
   30df0:	ldur	x20, [x29, #-216]
   30df4:	ldur	w12, [x29, #-136]
   30df8:	ldur	w0, [x29, #-128]
   30dfc:	cmp	x27, x9
   30e00:	b.ls	30e10 <ZSTD_endStream@@Base+0x22ebc>  // b.plast
   30e04:	mov	w8, #0x13                  	// #19
   30e08:	mov	w21, w25
   30e0c:	b	30e20 <ZSTD_endStream@@Base+0x22ecc>
   30e10:	mov	w21, w25
   30e14:	cmp	w25, w0
   30e18:	b.ne	30e58 <ZSTD_endStream@@Base+0x22f04>  // b.any
   30e1c:	mov	w8, #0x11                  	// #17
   30e20:	ldur	x25, [x29, #-176]
   30e24:	mov	x27, x28
   30e28:	cmp	w8, #0x13
   30e2c:	b.hi	2f9b0 <ZSTD_endStream@@Base+0x21a5c>  // b.pmore
   30e30:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   30e34:	add	x11, x11, #0xb0c
   30e38:	adr	x9, 2f9b0 <ZSTD_endStream@@Base+0x21a5c>
   30e3c:	ldrh	w10, [x11, x8, lsl #1]
   30e40:	add	x9, x9, x10, lsl #2
   30e44:	br	x9
   30e48:	add	w21, w21, #0x1
   30e4c:	cmp	w21, w0
   30e50:	b.ls	30d28 <ZSTD_endStream@@Base+0x22dd4>  // b.plast
   30e54:	b	322b0 <ZSTD_endStream@@Base+0x2435c>
   30e58:	madd	x10, x13, x26, x24
   30e5c:	ldr	w22, [x10, #8]!
   30e60:	ldur	x25, [x29, #-176]
   30e64:	stur	x27, [x29, #-112]
   30e68:	cmp	w22, #0x0
   30e6c:	cset	w9, ne  // ne = any
   30e70:	stur	w9, [x29, #-220]
   30e74:	str	x10, [sp, #136]
   30e78:	cbz	w22, 30e84 <ZSTD_endStream@@Base+0x22f30>
   30e7c:	stur	wzr, [x29, #-144]
   30e80:	b	30e90 <ZSTD_endStream@@Base+0x22f3c>
   30e84:	madd	x9, x13, x26, x24
   30e88:	ldr	w9, [x9, #12]
   30e8c:	stur	w9, [x29, #-144]
   30e90:	ldr	w8, [x8]
   30e94:	ldur	x1, [x29, #-200]
   30e98:	mov	w2, #0x2                   	// #2
   30e9c:	mov	w0, wzr
   30ea0:	mov	x27, x28
   30ea4:	str	w8, [sp, #120]
   30ea8:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   30eac:	ldr	x19, [x23, #8]
   30eb0:	ldr	w20, [x23, #36]
   30eb4:	ldp	x9, x11, [x29, #-112]
   30eb8:	mov	w24, wzr
   30ebc:	str	w0, [sp, #116]
   30ec0:	add	x8, x19, x20
   30ec4:	cmp	x8, x9
   30ec8:	b.hi	31d04 <ZSTD_endStream@@Base+0x23db0>  // b.pmore
   30ecc:	ldur	x8, [x29, #-96]
   30ed0:	stur	w21, [x29, #-116]
   30ed4:	ldr	w21, [x23, #200]
   30ed8:	ldur	x25, [x29, #-184]
   30edc:	mov	w27, w22
   30ee0:	sub	w22, w9, w19
   30ee4:	cmp	w20, w22
   30ee8:	mov	x24, x23
   30eec:	madd	x23, x11, x26, x8
   30ef0:	b.cs	30f18 <ZSTD_endStream@@Base+0x22fc4>  // b.hs, b.nlast
   30ef4:	add	x1, x19, w20, uxtw
   30ef8:	mov	x0, x24
   30efc:	mov	x2, x25
   30f00:	mov	w3, w21
   30f04:	mov	w4, wzr
   30f08:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   30f0c:	add	w20, w0, w20
   30f10:	cmp	w20, w22
   30f14:	b.cc	30ef4 <ZSTD_endStream@@Base+0x22fa0>  // b.lo, b.ul, b.last
   30f18:	add	x8, x23, #0x10
   30f1c:	stur	x8, [x29, #-160]
   30f20:	sub	w8, w21, #0x6
   30f24:	cmp	w8, #0x2
   30f28:	mov	x23, x24
   30f2c:	str	w22, [x24, #36]
   30f30:	b.cc	3115c <ZSTD_endStream@@Base+0x23208>  // b.lo, b.ul, b.last
   30f34:	ldur	x11, [x29, #-104]
   30f38:	cmp	w21, #0x5
   30f3c:	lsl	x20, x11, #3
   30f40:	b.eq	31398 <ZSTD_endStream@@Base+0x23444>  // b.none
   30f44:	ldur	x10, [x29, #-112]
   30f48:	cmp	w21, #0x3
   30f4c:	b.ne	315b4 <ZSTD_endStream@@Base+0x23660>  // b.any
   30f50:	ldr	w8, [x23, #204]
   30f54:	ldr	x11, [x23, #8]
   30f58:	ldr	w1, [x23, #192]
   30f5c:	ldur	x0, [x29, #-112]
   30f60:	ldr	x19, [x23, #48]
   30f64:	cmp	w8, #0xfff
   30f68:	mov	w9, #0xfff                 	// #4095
   30f6c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   30f70:	mov	w2, #0x3                   	// #3
   30f74:	str	w8, [sp, #224]
   30f78:	str	x11, [sp, #32]
   30f7c:	sub	w25, w10, w11
   30f80:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   30f84:	ldp	w2, w8, [x23, #184]
   30f88:	stp	x0, x19, [sp, #16]
   30f8c:	ldr	w9, [x19, x0, lsl #2]
   30f90:	ldr	x24, [x23, #64]
   30f94:	sub	w8, w8, #0x1
   30f98:	ldr	w22, [x23, #24]
   30f9c:	str	w9, [sp, #48]
   30fa0:	mov	w9, #0xffffffff            	// #-1
   30fa4:	lsl	w21, w9, w8
   30fa8:	mvn	w8, w21
   30fac:	str	w8, [sp, #80]
   30fb0:	subs	w8, w25, w8
   30fb4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   30fb8:	mov	x0, x23
   30fbc:	mov	w1, w25
   30fc0:	str	w8, [sp, #76]
   30fc4:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   30fc8:	ldp	x12, x8, [x29, #-112]
   30fcc:	add	w11, w25, #0x9
   30fd0:	cmp	w0, #0x0
   30fd4:	mov	x10, x23
   30fd8:	bic	w9, w25, w21
   30fdc:	str	w11, [sp, #176]
   30fe0:	add	x11, x12, #0x3
   30fe4:	ldr	w10, [x10, #196]
   30fe8:	str	x11, [sp, #152]
   30fec:	csinc	w11, w0, wzr, ne  // ne = any
   30ff0:	lsl	w9, w9, #1
   30ff4:	str	w11, [sp, #168]
   30ff8:	cmp	w27, #0x0
   30ffc:	add	x11, x24, w9, uxtw #2
   31000:	mov	w9, #0x3                   	// #3
   31004:	cinc	x27, x9, ne  // ne = any
   31008:	add	x9, x11, #0x4
   3100c:	stp	x24, x9, [sp, #96]
   31010:	mov	w9, #0x1                   	// #1
   31014:	lsl	w9, w9, w10
   31018:	str	w9, [sp, #232]
   3101c:	ldr	x9, [sp, #128]
   31020:	ldr	x28, [sp, #88]
   31024:	sub	x8, x20, x8
   31028:	cinc	x8, x8, ne  // ne = any
   3102c:	mov	x19, xzr
   31030:	mov	w26, wzr
   31034:	sub	w23, w25, w22
   31038:	cset	w20, ne  // ne = any
   3103c:	add	x8, x9, x8, lsl #2
   31040:	str	w25, [sp, #64]
   31044:	str	x11, [sp, #144]
   31048:	stur	x8, [x29, #-192]
   3104c:	add	x8, x20, x19
   31050:	cmp	x8, #0x3
   31054:	b.eq	31064 <ZSTD_endStream@@Base+0x23110>  // b.none
   31058:	ldur	x8, [x29, #-192]
   3105c:	ldr	w21, [x8, x19, lsl #2]
   31060:	b	31070 <ZSTD_endStream@@Base+0x2311c>
   31064:	ldur	x8, [x29, #-160]
   31068:	ldr	w8, [x8]
   3106c:	sub	w21, w8, #0x1
   31070:	sub	w8, w21, #0x1
   31074:	cmp	w8, w23
   31078:	b.cs	310c4 <ZSTD_endStream@@Base+0x23170>  // b.hs, b.nlast
   3107c:	mov	w1, #0x3                   	// #3
   31080:	mov	x0, x12
   31084:	mov	x25, x12
   31088:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3108c:	mov	w21, w21
   31090:	mov	w24, w0
   31094:	sub	x0, x25, x21
   31098:	mov	w1, #0x3                   	// #3
   3109c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   310a0:	cmp	w24, w0
   310a4:	b.ne	310cc <ZSTD_endStream@@Base+0x23178>  // b.any
   310a8:	ldr	x0, [sp, #152]
   310ac:	ldur	x2, [x29, #-184]
   310b0:	neg	x8, x21
   310b4:	add	x1, x0, x8
   310b8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   310bc:	add	w8, w0, #0x3
   310c0:	b	310d0 <ZSTD_endStream@@Base+0x2317c>
   310c4:	mov	w8, wzr
   310c8:	b	310d4 <ZSTD_endStream@@Base+0x23180>
   310cc:	mov	w8, wzr
   310d0:	ldur	x12, [x29, #-112]
   310d4:	ldur	w21, [x29, #-116]
   310d8:	mov	w9, w8
   310dc:	cmp	x28, x9
   310e0:	b.cs	31120 <ZSTD_endStream@@Base+0x231cc>  // b.hs, b.nlast
   310e4:	ldur	x10, [x29, #-168]
   310e8:	ldr	w11, [sp, #224]
   310ec:	add	x10, x10, w26, uxtw #3
   310f0:	add	w26, w26, #0x1
   310f4:	cmp	w8, w11
   310f8:	stp	w19, w8, [x10]
   310fc:	mov	w8, #0x1                   	// #1
   31100:	b.hi	3114c <ZSTD_endStream@@Base+0x231f8>  // b.pmore
   31104:	ldur	x11, [x29, #-184]
   31108:	add	x10, x12, x9
   3110c:	mov	x28, x9
   31110:	mov	w24, w26
   31114:	cmp	x10, x11
   31118:	b.ne	31124 <ZSTD_endStream@@Base+0x231d0>  // b.any
   3111c:	b	31130 <ZSTD_endStream@@Base+0x231dc>
   31120:	mov	x9, x28
   31124:	mov	w8, wzr
   31128:	mov	x28, x9
   3112c:	mov	w24, w22
   31130:	cbnz	w8, 31970 <ZSTD_endStream@@Base+0x23a1c>
   31134:	add	x19, x19, #0x1
   31138:	add	x8, x20, x19
   3113c:	cmp	x8, x27
   31140:	mov	w22, w24
   31144:	b.cc	3104c <ZSTD_endStream@@Base+0x230f8>  // b.lo, b.ul, b.last
   31148:	b	3196c <ZSTD_endStream@@Base+0x23a18>
   3114c:	mov	x28, x9
   31150:	mov	w24, w26
   31154:	cbz	w8, 31134 <ZSTD_endStream@@Base+0x231e0>
   31158:	b	31970 <ZSTD_endStream@@Base+0x23a1c>
   3115c:	ldr	w8, [x23, #204]
   31160:	ldur	x22, [x29, #-112]
   31164:	ldr	x10, [x23, #8]
   31168:	ldr	w1, [x23, #192]
   3116c:	ldr	x19, [x23, #48]
   31170:	cmp	w8, #0xfff
   31174:	mov	w9, #0xfff                 	// #4095
   31178:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3117c:	mov	w2, #0x6                   	// #6
   31180:	mov	x0, x22
   31184:	str	w8, [sp, #224]
   31188:	str	x10, [sp, #144]
   3118c:	sub	w26, w22, w10
   31190:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   31194:	ldp	w2, w8, [x23, #184]
   31198:	mov	w9, #0xffffffff            	// #-1
   3119c:	str	x19, [sp, #32]
   311a0:	ldr	w28, [x19, x0, lsl #2]
   311a4:	sub	w8, w8, #0x1
   311a8:	lsl	w19, w9, w8
   311ac:	ldur	x21, [x29, #-104]
   311b0:	ldr	x24, [x23, #64]
   311b4:	ldr	w20, [x23, #24]
   311b8:	mvn	w8, w19
   311bc:	str	w8, [sp, #76]
   311c0:	subs	w8, w26, w8
   311c4:	str	x0, [sp, #16]
   311c8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   311cc:	mov	x0, x23
   311d0:	mov	w1, w26
   311d4:	str	w8, [sp, #64]
   311d8:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   311dc:	add	w11, w26, #0x9
   311e0:	mov	x10, x23
   311e4:	cmp	w0, #0x0
   311e8:	bic	w9, w26, w19
   311ec:	str	w11, [sp, #168]
   311f0:	add	x11, x22, #0x4
   311f4:	ldr	w10, [x10, #196]
   311f8:	str	x11, [sp, #48]
   311fc:	csinc	w11, w0, wzr, ne  // ne = any
   31200:	lsl	w9, w9, #1
   31204:	str	w11, [sp, #152]
   31208:	cmp	w27, #0x0
   3120c:	add	x11, x24, w9, uxtw #2
   31210:	mov	w9, #0x3                   	// #3
   31214:	sub	w13, w26, w20
   31218:	str	w26, [sp, #24]
   3121c:	cinc	x26, x9, ne  // ne = any
   31220:	add	x9, x11, #0x4
   31224:	stp	x9, x11, [sp, #96]
   31228:	mov	w9, #0x1                   	// #1
   3122c:	lsl	w9, w9, w10
   31230:	lsl	x8, x21, #3
   31234:	stur	w9, [x29, #-192]
   31238:	ldr	x9, [sp, #128]
   3123c:	sub	x8, x8, x21
   31240:	ldr	x21, [sp, #88]
   31244:	cinc	x8, x8, ne  // ne = any
   31248:	mov	x12, x22
   3124c:	mov	x23, xzr
   31250:	mov	w25, wzr
   31254:	cset	w15, ne  // ne = any
   31258:	add	x8, x9, x8, lsl #2
   3125c:	str	x24, [sp, #80]
   31260:	str	x8, [sp, #232]
   31264:	str	x15, [sp, #176]
   31268:	add	x8, x15, x23
   3126c:	cmp	x8, #0x3
   31270:	b.eq	31280 <ZSTD_endStream@@Base+0x2332c>  // b.none
   31274:	ldr	x8, [sp, #232]
   31278:	ldr	w19, [x8, x23, lsl #2]
   3127c:	b	3128c <ZSTD_endStream@@Base+0x23338>
   31280:	ldur	x8, [x29, #-160]
   31284:	ldr	w8, [x8]
   31288:	sub	w19, w8, #0x1
   3128c:	sub	w8, w19, #0x1
   31290:	cmp	w8, w13
   31294:	b.cs	312f0 <ZSTD_endStream@@Base+0x2339c>  // b.hs, b.nlast
   31298:	mov	w1, #0x4                   	// #4
   3129c:	mov	x0, x12
   312a0:	mov	x20, x21
   312a4:	mov	w27, w25
   312a8:	mov	w25, w13
   312ac:	mov	w21, w28
   312b0:	mov	x28, x12
   312b4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   312b8:	mov	w19, w19
   312bc:	mov	w24, w0
   312c0:	sub	x0, x28, x19
   312c4:	mov	w1, #0x4                   	// #4
   312c8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   312cc:	cmp	w24, w0
   312d0:	b.ne	312f8 <ZSTD_endStream@@Base+0x233a4>  // b.any
   312d4:	ldr	x0, [sp, #48]
   312d8:	ldur	x2, [x29, #-184]
   312dc:	neg	x8, x19
   312e0:	add	x1, x0, x8
   312e4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   312e8:	add	w8, w0, #0x4
   312ec:	b	312fc <ZSTD_endStream@@Base+0x233a8>
   312f0:	mov	w8, wzr
   312f4:	b	31314 <ZSTD_endStream@@Base+0x233c0>
   312f8:	mov	w8, wzr
   312fc:	ldur	x12, [x29, #-112]
   31300:	ldr	x15, [sp, #176]
   31304:	mov	w28, w21
   31308:	mov	w13, w25
   3130c:	mov	w25, w27
   31310:	mov	x21, x20
   31314:	mov	w9, w8
   31318:	cmp	x21, x9
   3131c:	b.cs	3135c <ZSTD_endStream@@Base+0x23408>  // b.hs, b.nlast
   31320:	ldur	x10, [x29, #-168]
   31324:	ldr	w11, [sp, #224]
   31328:	add	x10, x10, w25, uxtw #3
   3132c:	add	w25, w25, #0x1
   31330:	cmp	w8, w11
   31334:	stp	w23, w8, [x10]
   31338:	mov	w8, #0x1                   	// #1
   3133c:	b.hi	31388 <ZSTD_endStream@@Base+0x23434>  // b.pmore
   31340:	ldur	x11, [x29, #-184]
   31344:	add	x10, x12, x9
   31348:	mov	x21, x9
   3134c:	mov	w24, w25
   31350:	cmp	x10, x11
   31354:	b.ne	31360 <ZSTD_endStream@@Base+0x2340c>  // b.any
   31358:	b	3136c <ZSTD_endStream@@Base+0x23418>
   3135c:	mov	x9, x21
   31360:	mov	w8, wzr
   31364:	mov	x21, x9
   31368:	mov	w24, w22
   3136c:	cbnz	w8, 317c4 <ZSTD_endStream@@Base+0x23870>
   31370:	add	x23, x23, #0x1
   31374:	add	x8, x15, x23
   31378:	cmp	x8, x26
   3137c:	mov	w22, w24
   31380:	b.cc	31268 <ZSTD_endStream@@Base+0x23314>  // b.lo, b.ul, b.last
   31384:	b	317c0 <ZSTD_endStream@@Base+0x2386c>
   31388:	mov	x21, x9
   3138c:	mov	w24, w25
   31390:	cbz	w8, 31370 <ZSTD_endStream@@Base+0x2341c>
   31394:	b	317c4 <ZSTD_endStream@@Base+0x23870>
   31398:	ldr	w8, [x23, #204]
   3139c:	ldur	x22, [x29, #-112]
   313a0:	ldr	x10, [x23, #8]
   313a4:	ldr	w1, [x23, #192]
   313a8:	ldr	x19, [x23, #48]
   313ac:	cmp	w8, #0xfff
   313b0:	mov	w9, #0xfff                 	// #4095
   313b4:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   313b8:	mov	w2, #0x5                   	// #5
   313bc:	mov	x0, x22
   313c0:	str	w8, [sp, #224]
   313c4:	str	x10, [sp, #152]
   313c8:	sub	w28, w22, w10
   313cc:	mov	x26, x11
   313d0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   313d4:	ldp	w2, w8, [x23, #184]
   313d8:	ldr	w9, [x19, x0, lsl #2]
   313dc:	str	x19, [sp, #32]
   313e0:	ldr	x24, [x23, #64]
   313e4:	sub	w8, w8, #0x1
   313e8:	str	w9, [sp, #48]
   313ec:	mov	w9, #0xffffffff            	// #-1
   313f0:	lsl	w19, w9, w8
   313f4:	ldr	w21, [x23, #24]
   313f8:	mvn	w8, w19
   313fc:	str	w8, [sp, #80]
   31400:	subs	w8, w28, w8
   31404:	str	x0, [sp, #16]
   31408:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3140c:	mov	x0, x23
   31410:	mov	w1, w28
   31414:	str	w8, [sp, #76]
   31418:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3141c:	add	w11, w28, #0x9
   31420:	mov	x10, x23
   31424:	cmp	w0, #0x0
   31428:	bic	w9, w28, w19
   3142c:	str	w11, [sp, #176]
   31430:	add	x11, x22, #0x4
   31434:	ldr	w10, [x10, #196]
   31438:	str	x11, [sp, #64]
   3143c:	csinc	w11, w0, wzr, ne  // ne = any
   31440:	lsl	w9, w9, #1
   31444:	str	w11, [sp, #168]
   31448:	cmp	w27, #0x0
   3144c:	add	x11, x24, w9, uxtw #2
   31450:	mov	w9, #0x3                   	// #3
   31454:	cinc	x27, x9, ne  // ne = any
   31458:	add	x9, x11, #0x4
   3145c:	stp	x24, x9, [sp, #96]
   31460:	mov	w9, #0x1                   	// #1
   31464:	lsl	w9, w9, w10
   31468:	stur	w9, [x29, #-192]
   3146c:	ldr	x9, [sp, #128]
   31470:	sub	w13, w28, w21
   31474:	ldr	x21, [sp, #88]
   31478:	sub	x8, x20, x26
   3147c:	cinc	x8, x8, ne  // ne = any
   31480:	mov	x12, x22
   31484:	mov	x23, xzr
   31488:	mov	w25, wzr
   3148c:	cset	w20, ne  // ne = any
   31490:	add	x8, x9, x8, lsl #2
   31494:	str	w28, [sp, #24]
   31498:	str	x11, [sp, #144]
   3149c:	str	x8, [sp, #232]
   314a0:	add	x8, x20, x23
   314a4:	cmp	x8, #0x3
   314a8:	b.eq	314b8 <ZSTD_endStream@@Base+0x23564>  // b.none
   314ac:	ldr	x8, [sp, #232]
   314b0:	ldr	w19, [x8, x23, lsl #2]
   314b4:	b	314c4 <ZSTD_endStream@@Base+0x23570>
   314b8:	ldur	x8, [x29, #-160]
   314bc:	ldr	w8, [x8]
   314c0:	sub	w19, w8, #0x1
   314c4:	sub	w8, w19, #0x1
   314c8:	cmp	w8, w13
   314cc:	b.cs	3151c <ZSTD_endStream@@Base+0x235c8>  // b.hs, b.nlast
   314d0:	mov	w1, #0x4                   	// #4
   314d4:	mov	x0, x12
   314d8:	mov	w28, w13
   314dc:	mov	x26, x12
   314e0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   314e4:	mov	w19, w19
   314e8:	mov	w24, w0
   314ec:	sub	x0, x26, x19
   314f0:	mov	w1, #0x4                   	// #4
   314f4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   314f8:	cmp	w24, w0
   314fc:	b.ne	31524 <ZSTD_endStream@@Base+0x235d0>  // b.any
   31500:	ldr	x0, [sp, #64]
   31504:	ldur	x2, [x29, #-184]
   31508:	neg	x8, x19
   3150c:	add	x1, x0, x8
   31510:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   31514:	add	w8, w0, #0x4
   31518:	b	31528 <ZSTD_endStream@@Base+0x235d4>
   3151c:	mov	w8, wzr
   31520:	b	31530 <ZSTD_endStream@@Base+0x235dc>
   31524:	mov	w8, wzr
   31528:	ldur	x12, [x29, #-112]
   3152c:	mov	w13, w28
   31530:	mov	w9, w8
   31534:	cmp	x21, x9
   31538:	b.cs	31578 <ZSTD_endStream@@Base+0x23624>  // b.hs, b.nlast
   3153c:	ldur	x10, [x29, #-168]
   31540:	ldr	w11, [sp, #224]
   31544:	add	x10, x10, w25, uxtw #3
   31548:	add	w25, w25, #0x1
   3154c:	cmp	w8, w11
   31550:	stp	w23, w8, [x10]
   31554:	mov	w8, #0x1                   	// #1
   31558:	b.hi	315a4 <ZSTD_endStream@@Base+0x23650>  // b.pmore
   3155c:	ldur	x11, [x29, #-184]
   31560:	add	x10, x12, x9
   31564:	mov	x21, x9
   31568:	mov	w24, w25
   3156c:	cmp	x10, x11
   31570:	b.ne	3157c <ZSTD_endStream@@Base+0x23628>  // b.any
   31574:	b	31588 <ZSTD_endStream@@Base+0x23634>
   31578:	mov	x9, x21
   3157c:	mov	w8, wzr
   31580:	mov	x21, x9
   31584:	mov	w24, w22
   31588:	cbnz	w8, 3198c <ZSTD_endStream@@Base+0x23a38>
   3158c:	add	x23, x23, #0x1
   31590:	add	x8, x20, x23
   31594:	cmp	x8, x27
   31598:	mov	w22, w24
   3159c:	b.cc	314a0 <ZSTD_endStream@@Base+0x2354c>  // b.lo, b.ul, b.last
   315a0:	b	31988 <ZSTD_endStream@@Base+0x23a34>
   315a4:	mov	x21, x9
   315a8:	mov	w24, w25
   315ac:	cbz	w8, 3158c <ZSTD_endStream@@Base+0x23638>
   315b0:	b	3198c <ZSTD_endStream@@Base+0x23a38>
   315b4:	ldr	w8, [x23, #204]
   315b8:	ldr	x11, [x23, #8]
   315bc:	ldr	w1, [x23, #192]
   315c0:	ldur	x0, [x29, #-112]
   315c4:	ldr	x19, [x23, #48]
   315c8:	cmp	w8, #0xfff
   315cc:	mov	w9, #0xfff                 	// #4095
   315d0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   315d4:	mov	w2, #0x4                   	// #4
   315d8:	str	w8, [sp, #224]
   315dc:	str	x11, [sp, #152]
   315e0:	sub	w24, w10, w11
   315e4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   315e8:	ldp	w2, w8, [x23, #184]
   315ec:	ldr	w9, [x19, x0, lsl #2]
   315f0:	str	x19, [sp, #32]
   315f4:	ldr	x22, [x23, #64]
   315f8:	sub	w8, w8, #0x1
   315fc:	str	w9, [sp, #48]
   31600:	mov	w9, #0xffffffff            	// #-1
   31604:	lsl	w19, w9, w8
   31608:	ldr	w21, [x23, #24]
   3160c:	mvn	w8, w19
   31610:	str	w8, [sp, #80]
   31614:	subs	w8, w24, w8
   31618:	str	x0, [sp, #16]
   3161c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   31620:	mov	x0, x23
   31624:	mov	w1, w24
   31628:	str	w8, [sp, #76]
   3162c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   31630:	ldp	x12, x8, [x29, #-112]
   31634:	add	w11, w24, #0x9
   31638:	mov	x10, x23
   3163c:	cmp	w0, #0x0
   31640:	bic	w9, w24, w19
   31644:	str	w11, [sp, #176]
   31648:	add	x11, x12, #0x4
   3164c:	ldr	w10, [x10, #196]
   31650:	str	x11, [sp, #64]
   31654:	csinc	w11, w0, wzr, ne  // ne = any
   31658:	lsl	w9, w9, #1
   3165c:	str	w11, [sp, #168]
   31660:	cmp	w27, #0x0
   31664:	add	x11, x22, w9, uxtw #2
   31668:	mov	w9, #0x3                   	// #3
   3166c:	cinc	x27, x9, ne  // ne = any
   31670:	add	x9, x11, #0x4
   31674:	stp	x22, x9, [sp, #96]
   31678:	mov	w9, #0x1                   	// #1
   3167c:	lsl	w9, w9, w10
   31680:	stur	w9, [x29, #-192]
   31684:	ldr	x9, [sp, #128]
   31688:	sub	w28, w24, w21
   3168c:	ldr	x21, [sp, #88]
   31690:	sub	x8, x20, x8
   31694:	cinc	x8, x8, ne  // ne = any
   31698:	mov	x23, xzr
   3169c:	mov	w25, wzr
   316a0:	cset	w20, ne  // ne = any
   316a4:	add	x8, x9, x8, lsl #2
   316a8:	str	w24, [sp, #24]
   316ac:	str	x11, [sp, #144]
   316b0:	str	x8, [sp, #232]
   316b4:	add	x8, x20, x23
   316b8:	cmp	x8, #0x3
   316bc:	b.eq	316cc <ZSTD_endStream@@Base+0x23778>  // b.none
   316c0:	ldr	x8, [sp, #232]
   316c4:	ldr	w19, [x8, x23, lsl #2]
   316c8:	b	316d8 <ZSTD_endStream@@Base+0x23784>
   316cc:	ldur	x8, [x29, #-160]
   316d0:	ldr	w8, [x8]
   316d4:	sub	w19, w8, #0x1
   316d8:	sub	w8, w19, #0x1
   316dc:	cmp	w8, w28
   316e0:	b.cs	3172c <ZSTD_endStream@@Base+0x237d8>  // b.hs, b.nlast
   316e4:	mov	w1, #0x4                   	// #4
   316e8:	mov	x0, x12
   316ec:	mov	x26, x12
   316f0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   316f4:	mov	w19, w19
   316f8:	mov	w24, w0
   316fc:	sub	x0, x26, x19
   31700:	mov	w1, #0x4                   	// #4
   31704:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   31708:	cmp	w24, w0
   3170c:	b.ne	31734 <ZSTD_endStream@@Base+0x237e0>  // b.any
   31710:	ldr	x0, [sp, #64]
   31714:	ldur	x2, [x29, #-184]
   31718:	neg	x8, x19
   3171c:	add	x1, x0, x8
   31720:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   31724:	add	w8, w0, #0x4
   31728:	b	31738 <ZSTD_endStream@@Base+0x237e4>
   3172c:	mov	w8, wzr
   31730:	b	3173c <ZSTD_endStream@@Base+0x237e8>
   31734:	mov	w8, wzr
   31738:	ldur	x12, [x29, #-112]
   3173c:	mov	w9, w8
   31740:	cmp	x21, x9
   31744:	b.cs	31784 <ZSTD_endStream@@Base+0x23830>  // b.hs, b.nlast
   31748:	ldur	x10, [x29, #-168]
   3174c:	ldr	w11, [sp, #224]
   31750:	add	x10, x10, w25, uxtw #3
   31754:	add	w25, w25, #0x1
   31758:	cmp	w8, w11
   3175c:	stp	w23, w8, [x10]
   31760:	mov	w8, #0x1                   	// #1
   31764:	b.hi	317b0 <ZSTD_endStream@@Base+0x2385c>  // b.pmore
   31768:	ldur	x11, [x29, #-184]
   3176c:	add	x10, x12, x9
   31770:	mov	x21, x9
   31774:	mov	w24, w25
   31778:	cmp	x10, x11
   3177c:	b.ne	31788 <ZSTD_endStream@@Base+0x23834>  // b.any
   31780:	b	31794 <ZSTD_endStream@@Base+0x23840>
   31784:	mov	x9, x21
   31788:	mov	w8, wzr
   3178c:	mov	x21, x9
   31790:	mov	w24, w22
   31794:	cbnz	w8, 31b34 <ZSTD_endStream@@Base+0x23be0>
   31798:	add	x23, x23, #0x1
   3179c:	add	x8, x20, x23
   317a0:	cmp	x8, x27
   317a4:	mov	w22, w24
   317a8:	b.cc	316b4 <ZSTD_endStream@@Base+0x23760>  // b.lo, b.ul, b.last
   317ac:	b	31b30 <ZSTD_endStream@@Base+0x23bdc>
   317b0:	mov	x21, x9
   317b4:	mov	w24, w25
   317b8:	cbz	w8, 31798 <ZSTD_endStream@@Base+0x23844>
   317bc:	b	31b34 <ZSTD_endStream@@Base+0x23be0>
   317c0:	mov	w8, wzr
   317c4:	ldur	x23, [x29, #-88]
   317c8:	ldur	x27, [x29, #-208]
   317cc:	cbnz	w8, 31964 <ZSTD_endStream@@Base+0x23a10>
   317d0:	ldr	w9, [sp, #24]
   317d4:	ldr	x8, [sp, #32]
   317d8:	ldr	x10, [sp, #16]
   317dc:	mov	x19, xzr
   317e0:	mov	x20, xzr
   317e4:	add	w24, w9, #0x2
   317e8:	str	w9, [x8, x10, lsl #2]
   317ec:	b	31804 <ZSTD_endStream@@Base+0x238b0>
   317f0:	ldur	x12, [x29, #-112]
   317f4:	mov	x21, x8
   317f8:	mov	x8, x20
   317fc:	mov	x20, x8
   31800:	tbz	w9, #0, 31944 <ZSTD_endStream@@Base+0x239f0>
   31804:	ldur	w9, [x29, #-192]
   31808:	subs	w9, w9, #0x1
   3180c:	b.cc	31944 <ZSTD_endStream@@Base+0x239f0>  // b.lo, b.ul, b.last
   31810:	ldr	w8, [sp, #152]
   31814:	cmp	w28, w8
   31818:	b.cc	31944 <ZSTD_endStream@@Base+0x239f0>  // b.lo, b.ul, b.last
   3181c:	ldr	x8, [sp, #144]
   31820:	ldur	x2, [x29, #-184]
   31824:	cmp	x20, x19
   31828:	csel	x23, x20, x19, cc  // cc = lo, ul, last
   3182c:	add	x22, x8, w28, uxtw
   31830:	add	x0, x12, x23
   31834:	add	x1, x22, x23
   31838:	stur	w9, [x29, #-192]
   3183c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   31840:	add	x8, x0, x23
   31844:	cmp	x8, x21
   31848:	b.ls	318a4 <ZSTD_endStream@@Base+0x23950>  // b.plast
   3184c:	ldur	x13, [x29, #-168]
   31850:	ldr	w14, [sp, #168]
   31854:	sub	w12, w24, w28
   31858:	add	w11, w28, w8
   3185c:	add	x13, x13, w25, uxtw #3
   31860:	stp	w12, w8, [x13]
   31864:	ldur	x23, [x29, #-88]
   31868:	sub	w10, w14, w28
   3186c:	cmp	x8, x10
   31870:	mov	w9, wzr
   31874:	csel	w14, w11, w14, hi  // hi = pmore
   31878:	cmp	x8, #0x1, lsl #12
   3187c:	add	w25, w25, #0x1
   31880:	str	w14, [sp, #168]
   31884:	b.hi	317f0 <ZSTD_endStream@@Base+0x2389c>  // b.pmore
   31888:	ldur	x12, [x29, #-112]
   3188c:	ldur	x11, [x29, #-184]
   31890:	mov	x21, x8
   31894:	add	x10, x12, x8
   31898:	cmp	x10, x11
   3189c:	b.ne	318ac <ZSTD_endStream@@Base+0x23958>  // b.any
   318a0:	b	317f4 <ZSTD_endStream@@Base+0x238a0>
   318a4:	ldur	x23, [x29, #-88]
   318a8:	ldur	x12, [x29, #-112]
   318ac:	ldrb	w9, [x22, x8]
   318b0:	ldrb	w10, [x12, x8]
   318b4:	ldr	w11, [sp, #76]
   318b8:	cmp	w9, w10
   318bc:	ldr	x9, [sp, #80]
   318c0:	and	w11, w28, w11
   318c4:	lsl	w11, w11, #1
   318c8:	add	x9, x9, w11, uxtw #2
   318cc:	b.cs	318f0 <ZSTD_endStream@@Base+0x2399c>  // b.hs, b.nlast
   318d0:	ldr	w10, [sp, #64]
   318d4:	cmp	w28, w10
   318d8:	ldr	x10, [sp, #104]
   318dc:	str	w28, [x10]
   318e0:	b.ls	3191c <ZSTD_endStream@@Base+0x239c8>  // b.plast
   318e4:	add	x9, x9, #0x4
   318e8:	str	x9, [sp, #104]
   318ec:	b	31910 <ZSTD_endStream@@Base+0x239bc>
   318f0:	ldr	w10, [sp, #64]
   318f4:	cmp	w28, w10
   318f8:	ldr	x10, [sp, #96]
   318fc:	str	w28, [x10]
   31900:	b.ls	3192c <ZSTD_endStream@@Base+0x239d8>  // b.plast
   31904:	str	x9, [sp, #96]
   31908:	mov	x19, x8
   3190c:	mov	x8, x20
   31910:	ldr	w28, [x9]
   31914:	mov	w9, #0x1                   	// #1
   31918:	b	317fc <ZSTD_endStream@@Base+0x238a8>
   3191c:	sub	x10, x29, #0x40
   31920:	mov	w9, wzr
   31924:	str	x10, [sp, #104]
   31928:	b	317fc <ZSTD_endStream@@Base+0x238a8>
   3192c:	sub	x10, x29, #0x40
   31930:	mov	w9, wzr
   31934:	str	x10, [sp, #96]
   31938:	mov	x19, x8
   3193c:	mov	x8, x20
   31940:	b	317fc <ZSTD_endStream@@Base+0x238a8>
   31944:	ldr	x8, [sp, #96]
   31948:	mov	w24, w25
   3194c:	str	wzr, [x8]
   31950:	ldr	x8, [sp, #104]
   31954:	str	wzr, [x8]
   31958:	ldr	w8, [sp, #168]
   3195c:	sub	w8, w8, #0x8
   31960:	str	w8, [x23, #36]
   31964:	mov	w26, #0x1c                  	// #28
   31968:	b	31cf8 <ZSTD_endStream@@Base+0x23da4>
   3196c:	mov	w8, wzr
   31970:	cbz	w8, 32008 <ZSTD_endStream@@Base+0x240b4>
   31974:	ldur	x23, [x29, #-88]
   31978:	ldur	x27, [x29, #-208]
   3197c:	ldur	x25, [x29, #-176]
   31980:	mov	w26, #0x1c                  	// #28
   31984:	b	31d00 <ZSTD_endStream@@Base+0x23dac>
   31988:	mov	w8, wzr
   3198c:	ldur	x23, [x29, #-88]
   31990:	ldur	x27, [x29, #-208]
   31994:	mov	w26, #0x1c                  	// #28
   31998:	cbnz	w8, 31cf8 <ZSTD_endStream@@Base+0x23da4>
   3199c:	ldr	x8, [sp, #32]
   319a0:	ldr	w9, [sp, #24]
   319a4:	ldr	x10, [sp, #16]
   319a8:	ldr	w24, [sp, #48]
   319ac:	mov	x19, xzr
   319b0:	mov	x20, xzr
   319b4:	str	w9, [x8, x10, lsl #2]
   319b8:	add	w8, w9, #0x2
   319bc:	stur	w8, [x29, #-160]
   319c0:	b	319dc <ZSTD_endStream@@Base+0x23a88>
   319c4:	add	x9, x9, #0x4
   319c8:	str	x9, [sp, #144]
   319cc:	ldr	w24, [x9]
   319d0:	mov	w9, #0x1                   	// #1
   319d4:	mov	x20, x8
   319d8:	tbz	w9, #0, 31cd8 <ZSTD_endStream@@Base+0x23d84>
   319dc:	ldur	w9, [x29, #-192]
   319e0:	subs	w9, w9, #0x1
   319e4:	b.cc	31cd8 <ZSTD_endStream@@Base+0x23d84>  // b.lo, b.ul, b.last
   319e8:	ldr	w8, [sp, #168]
   319ec:	cmp	w24, w8
   319f0:	b.cc	31cd8 <ZSTD_endStream@@Base+0x23d84>  // b.lo, b.ul, b.last
   319f4:	ldr	x8, [sp, #152]
   319f8:	ldur	x2, [x29, #-184]
   319fc:	cmp	x20, x19
   31a00:	csel	x23, x20, x19, cc  // cc = lo, ul, last
   31a04:	add	x22, x8, w24, uxtw
   31a08:	add	x0, x12, x23
   31a0c:	add	x1, x22, x23
   31a10:	stur	w9, [x29, #-192]
   31a14:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   31a18:	add	x8, x0, x23
   31a1c:	cmp	x8, x21
   31a20:	b.ls	31a84 <ZSTD_endStream@@Base+0x23b30>  // b.plast
   31a24:	ldr	w14, [sp, #176]
   31a28:	ldur	w12, [x29, #-160]
   31a2c:	ldur	x13, [x29, #-168]
   31a30:	add	w11, w24, w8
   31a34:	sub	w10, w14, w24
   31a38:	cmp	x8, x10
   31a3c:	mov	w9, wzr
   31a40:	mov	w15, w24
   31a44:	sub	w12, w12, w24
   31a48:	add	x13, x13, w25, uxtw #3
   31a4c:	csel	w14, w11, w14, hi  // hi = pmore
   31a50:	cmp	x8, #0x1, lsl #12
   31a54:	add	w25, w25, #0x1
   31a58:	stp	w12, w8, [x13]
   31a5c:	str	w14, [sp, #176]
   31a60:	b.hi	31b18 <ZSTD_endStream@@Base+0x23bc4>  // b.pmore
   31a64:	ldur	x12, [x29, #-112]
   31a68:	ldur	x11, [x29, #-184]
   31a6c:	mov	x21, x8
   31a70:	add	x10, x12, x8
   31a74:	cmp	x10, x11
   31a78:	b.ne	31a8c <ZSTD_endStream@@Base+0x23b38>  // b.any
   31a7c:	ldur	x23, [x29, #-88]
   31a80:	b	31b20 <ZSTD_endStream@@Base+0x23bcc>
   31a84:	ldur	x12, [x29, #-112]
   31a88:	mov	w15, w24
   31a8c:	ldrb	w9, [x22, x8]
   31a90:	ldrb	w10, [x12, x8]
   31a94:	ldr	w11, [sp, #80]
   31a98:	ldur	x23, [x29, #-88]
   31a9c:	mov	w24, w15
   31aa0:	cmp	w9, w10
   31aa4:	ldr	x9, [sp, #96]
   31aa8:	and	w11, w15, w11
   31aac:	lsl	w11, w11, #1
   31ab0:	add	x9, x9, w11, uxtw #2
   31ab4:	b.cs	31adc <ZSTD_endStream@@Base+0x23b88>  // b.hs, b.nlast
   31ab8:	ldr	w10, [sp, #76]
   31abc:	cmp	w24, w10
   31ac0:	ldr	x10, [sp, #144]
   31ac4:	str	w24, [x10]
   31ac8:	b.hi	319c4 <ZSTD_endStream@@Base+0x23a70>  // b.pmore
   31acc:	sub	x10, x29, #0x40
   31ad0:	mov	w9, wzr
   31ad4:	str	x10, [sp, #144]
   31ad8:	b	319d4 <ZSTD_endStream@@Base+0x23a80>
   31adc:	ldr	w10, [sp, #76]
   31ae0:	cmp	w24, w10
   31ae4:	ldr	x10, [sp, #104]
   31ae8:	str	w24, [x10]
   31aec:	b.ls	31b00 <ZSTD_endStream@@Base+0x23bac>  // b.plast
   31af0:	str	x9, [sp, #104]
   31af4:	mov	x19, x8
   31af8:	mov	x8, x20
   31afc:	b	319cc <ZSTD_endStream@@Base+0x23a78>
   31b00:	sub	x10, x29, #0x40
   31b04:	mov	w9, wzr
   31b08:	str	x10, [sp, #104]
   31b0c:	mov	x19, x8
   31b10:	mov	x8, x20
   31b14:	b	319d4 <ZSTD_endStream@@Base+0x23a80>
   31b18:	ldur	x23, [x29, #-88]
   31b1c:	ldur	x12, [x29, #-112]
   31b20:	mov	x21, x8
   31b24:	mov	x8, x20
   31b28:	mov	w24, w15
   31b2c:	b	319d4 <ZSTD_endStream@@Base+0x23a80>
   31b30:	mov	w8, wzr
   31b34:	ldur	x23, [x29, #-88]
   31b38:	ldur	x27, [x29, #-208]
   31b3c:	mov	w26, #0x1c                  	// #28
   31b40:	cbnz	w8, 31cf8 <ZSTD_endStream@@Base+0x23da4>
   31b44:	ldr	x8, [sp, #32]
   31b48:	ldr	w9, [sp, #24]
   31b4c:	ldr	x10, [sp, #16]
   31b50:	ldr	w24, [sp, #48]
   31b54:	mov	x19, xzr
   31b58:	mov	x20, xzr
   31b5c:	str	w9, [x8, x10, lsl #2]
   31b60:	add	w8, w9, #0x2
   31b64:	stur	w8, [x29, #-160]
   31b68:	b	31b84 <ZSTD_endStream@@Base+0x23c30>
   31b6c:	add	x9, x9, #0x4
   31b70:	str	x9, [sp, #144]
   31b74:	ldr	w24, [x9]
   31b78:	mov	w9, #0x1                   	// #1
   31b7c:	mov	x20, x8
   31b80:	tbz	w9, #0, 31cd8 <ZSTD_endStream@@Base+0x23d84>
   31b84:	ldur	w9, [x29, #-192]
   31b88:	subs	w9, w9, #0x1
   31b8c:	b.cc	31cd8 <ZSTD_endStream@@Base+0x23d84>  // b.lo, b.ul, b.last
   31b90:	ldr	w8, [sp, #168]
   31b94:	cmp	w24, w8
   31b98:	b.cc	31cd8 <ZSTD_endStream@@Base+0x23d84>  // b.lo, b.ul, b.last
   31b9c:	ldr	x8, [sp, #152]
   31ba0:	ldur	x2, [x29, #-184]
   31ba4:	cmp	x20, x19
   31ba8:	csel	x23, x20, x19, cc  // cc = lo, ul, last
   31bac:	add	x22, x8, w24, uxtw
   31bb0:	add	x0, x12, x23
   31bb4:	add	x1, x22, x23
   31bb8:	stur	w9, [x29, #-192]
   31bbc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   31bc0:	add	x8, x0, x23
   31bc4:	cmp	x8, x21
   31bc8:	b.ls	31c2c <ZSTD_endStream@@Base+0x23cd8>  // b.plast
   31bcc:	ldr	w14, [sp, #176]
   31bd0:	ldur	w12, [x29, #-160]
   31bd4:	ldur	x13, [x29, #-168]
   31bd8:	add	w11, w24, w8
   31bdc:	sub	w10, w14, w24
   31be0:	cmp	x8, x10
   31be4:	mov	w9, wzr
   31be8:	mov	w15, w24
   31bec:	sub	w12, w12, w24
   31bf0:	add	x13, x13, w25, uxtw #3
   31bf4:	csel	w14, w11, w14, hi  // hi = pmore
   31bf8:	cmp	x8, #0x1, lsl #12
   31bfc:	add	w25, w25, #0x1
   31c00:	stp	w12, w8, [x13]
   31c04:	str	w14, [sp, #176]
   31c08:	b.hi	31cc0 <ZSTD_endStream@@Base+0x23d6c>  // b.pmore
   31c0c:	ldur	x12, [x29, #-112]
   31c10:	ldur	x11, [x29, #-184]
   31c14:	mov	x21, x8
   31c18:	add	x10, x12, x8
   31c1c:	cmp	x10, x11
   31c20:	b.ne	31c34 <ZSTD_endStream@@Base+0x23ce0>  // b.any
   31c24:	ldur	x23, [x29, #-88]
   31c28:	b	31cc8 <ZSTD_endStream@@Base+0x23d74>
   31c2c:	ldur	x12, [x29, #-112]
   31c30:	mov	w15, w24
   31c34:	ldrb	w9, [x22, x8]
   31c38:	ldrb	w10, [x12, x8]
   31c3c:	ldr	w11, [sp, #80]
   31c40:	ldur	x23, [x29, #-88]
   31c44:	mov	w24, w15
   31c48:	cmp	w9, w10
   31c4c:	ldr	x9, [sp, #96]
   31c50:	and	w11, w15, w11
   31c54:	lsl	w11, w11, #1
   31c58:	add	x9, x9, w11, uxtw #2
   31c5c:	b.cs	31c84 <ZSTD_endStream@@Base+0x23d30>  // b.hs, b.nlast
   31c60:	ldr	w10, [sp, #76]
   31c64:	cmp	w24, w10
   31c68:	ldr	x10, [sp, #144]
   31c6c:	str	w24, [x10]
   31c70:	b.hi	31b6c <ZSTD_endStream@@Base+0x23c18>  // b.pmore
   31c74:	sub	x10, x29, #0x40
   31c78:	mov	w9, wzr
   31c7c:	str	x10, [sp, #144]
   31c80:	b	31b7c <ZSTD_endStream@@Base+0x23c28>
   31c84:	ldr	w10, [sp, #76]
   31c88:	cmp	w24, w10
   31c8c:	ldr	x10, [sp, #104]
   31c90:	str	w24, [x10]
   31c94:	b.ls	31ca8 <ZSTD_endStream@@Base+0x23d54>  // b.plast
   31c98:	str	x9, [sp, #104]
   31c9c:	mov	x19, x8
   31ca0:	mov	x8, x20
   31ca4:	b	31b74 <ZSTD_endStream@@Base+0x23c20>
   31ca8:	sub	x10, x29, #0x40
   31cac:	mov	w9, wzr
   31cb0:	str	x10, [sp, #104]
   31cb4:	mov	x19, x8
   31cb8:	mov	x8, x20
   31cbc:	b	31b7c <ZSTD_endStream@@Base+0x23c28>
   31cc0:	ldur	x23, [x29, #-88]
   31cc4:	ldur	x12, [x29, #-112]
   31cc8:	mov	x21, x8
   31ccc:	mov	x8, x20
   31cd0:	mov	w24, w15
   31cd4:	b	31b7c <ZSTD_endStream@@Base+0x23c28>
   31cd8:	ldr	x8, [sp, #104]
   31cdc:	mov	w24, w25
   31ce0:	str	wzr, [x8]
   31ce4:	ldr	x8, [sp, #144]
   31ce8:	str	wzr, [x8]
   31cec:	ldr	w8, [sp, #176]
   31cf0:	sub	w8, w8, #0x8
   31cf4:	str	w8, [x23, #36]
   31cf8:	ldur	w21, [x29, #-116]
   31cfc:	ldur	x25, [x29, #-176]
   31d00:	ldur	x11, [x29, #-104]
   31d04:	ldur	w0, [x29, #-128]
   31d08:	cbz	w24, 31d54 <ZSTD_endStream@@Base+0x23e00>
   31d0c:	ldur	x10, [x29, #-168]
   31d10:	sub	w8, w24, #0x1
   31d14:	add	x9, x10, w8, uxtw #3
   31d18:	ldr	w12, [x9, #4]
   31d1c:	ldr	w9, [sp, #164]
   31d20:	cmp	w12, w9
   31d24:	b.hi	31d68 <ZSTD_endStream@@Base+0x23e14>  // b.pmore
   31d28:	add	w9, w12, w21
   31d2c:	cmp	w9, #0x1, lsl #12
   31d30:	b.cs	31d68 <ZSTD_endStream@@Base+0x23e14>  // b.hs, b.nlast
   31d34:	ldur	w12, [x29, #-136]
   31d38:	ldur	x20, [x29, #-216]
   31d3c:	ldr	w9, [sp, #196]
   31d40:	mov	w8, wzr
   31d44:	str	w9, [sp, #196]
   31d48:	cbz	w8, 31df8 <ZSTD_endStream@@Base+0x23ea4>
   31d4c:	ldur	x24, [x29, #-96]
   31d50:	b	30e28 <ZSTD_endStream@@Base+0x22ed4>
   31d54:	ldur	x20, [x29, #-216]
   31d58:	ldur	x24, [x29, #-96]
   31d5c:	ldur	w12, [x29, #-136]
   31d60:	mov	w8, #0x13                  	// #19
   31d64:	b	30e28 <ZSTD_endStream@@Base+0x22ed4>
   31d68:	ldr	x9, [sp, #136]
   31d6c:	lsl	x8, x8, #3
   31d70:	ldr	w8, [x10, x8]
   31d74:	mov	w10, w12
   31d78:	ldr	w9, [x9]
   31d7c:	str	w8, [sp, #192]
   31d80:	cbz	w9, 31d8c <ZSTD_endStream@@Base+0x23e38>
   31d84:	mov	w8, wzr
   31d88:	b	31d98 <ZSTD_endStream@@Base+0x23e44>
   31d8c:	ldur	x8, [x29, #-96]
   31d90:	madd	x8, x11, x26, x8
   31d94:	ldr	w8, [x8, #12]
   31d98:	sub	w19, w21, w8
   31d9c:	ldr	w8, [sp, #188]
   31da0:	ldur	x9, [x29, #-24]
   31da4:	mov	w28, w10
   31da8:	ldur	w22, [x29, #-144]
   31dac:	stur	w8, [x29, #-64]
   31db0:	ldr	w8, [sp, #192]
   31db4:	ldur	x20, [x29, #-216]
   31db8:	sub	x0, x29, #0x40
   31dbc:	stur	w22, [x29, #-52]
   31dc0:	stp	w8, w10, [x29, #-60]
   31dc4:	ldur	w8, [x29, #-16]
   31dc8:	ldr	x10, [sp, #56]
   31dcc:	str	w8, [x10, #8]
   31dd0:	str	x9, [x10]
   31dd4:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   31dd8:	cmp	w19, #0x1, lsl #12
   31ddc:	add	w0, w0, w19
   31de0:	csel	w21, wzr, w19, hi  // hi = pmore
   31de4:	mov	w12, w28
   31de8:	mov	w8, #0x7                   	// #7
   31dec:	mov	w9, w22
   31df0:	str	w9, [sp, #196]
   31df4:	cbnz	w8, 31d4c <ZSTD_endStream@@Base+0x23df8>
   31df8:	ldp	w9, w8, [sp, #116]
   31dfc:	mov	x22, xzr
   31e00:	str	w12, [sp, #176]
   31e04:	stur	w21, [x29, #-116]
   31e08:	add	w8, w9, w8
   31e0c:	ldur	x9, [x29, #-96]
   31e10:	stur	w8, [x29, #-104]
   31e14:	umaddl	x8, w21, w26, x9
   31e18:	add	x8, x8, #0x10
   31e1c:	str	x8, [sp, #232]
   31e20:	mov	w8, w24
   31e24:	mov	x24, x9
   31e28:	str	x8, [sp, #224]
   31e2c:	b	31e48 <ZSTD_endStream@@Base+0x23ef4>
   31e30:	mov	w0, w28
   31e34:	ldur	x22, [x29, #-192]
   31e38:	ldr	x8, [sp, #224]
   31e3c:	add	x22, x22, #0x1
   31e40:	cmp	x22, x8
   31e44:	b.cs	31ff0 <ZSTD_endStream@@Base+0x2409c>  // b.hs, b.nlast
   31e48:	ldur	x21, [x29, #-168]
   31e4c:	mov	w28, w0
   31e50:	ldr	x0, [sp, #232]
   31e54:	ldur	w2, [x29, #-220]
   31e58:	add	x19, x21, x22, lsl #3
   31e5c:	ldr	w1, [x19]
   31e60:	stur	w1, [x29, #-112]
   31e64:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   31e68:	stp	x1, x0, [x29, #-136]
   31e6c:	ldr	w27, [x19, #4]
   31e70:	ldr	w20, [sp, #220]
   31e74:	cbz	x22, 31e88 <ZSTD_endStream@@Base+0x23f34>
   31e78:	sub	w8, w22, #0x1
   31e7c:	add	x8, x21, w8, uxtw #3
   31e80:	ldr	w8, [x8, #4]
   31e84:	add	w20, w8, #0x1
   31e88:	cmp	w27, w20
   31e8c:	mov	w21, #0x40000000            	// #1073741824
   31e90:	stur	x22, [x29, #-192]
   31e94:	b.cc	31e30 <ZSTD_endStream@@Base+0x23edc>  // b.lo, b.ul, b.last
   31e98:	ldur	w8, [x29, #-112]
   31e9c:	add	w0, w8, #0x1
   31ea0:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   31ea4:	lsl	w8, w0, #8
   31ea8:	add	w8, w8, #0x1, lsl #12
   31eac:	stur	w8, [x29, #-160]
   31eb0:	ldur	w8, [x29, #-116]
   31eb4:	mov	w22, w0
   31eb8:	mov	w0, w28
   31ebc:	add	w8, w27, w8
   31ec0:	b	31ef8 <ZSTD_endStream@@Base+0x23fa4>
   31ec4:	ldur	w10, [x29, #-144]
   31ec8:	umaddl	x9, w28, w26, x24
   31ecc:	stp	w27, w10, [x9, #8]
   31ed0:	ldur	w10, [x29, #-112]
   31ed4:	stp	w8, w10, [x9]
   31ed8:	ldur	x8, [x29, #-128]
   31edc:	str	x8, [x9, #16]
   31ee0:	ldur	x8, [x29, #-136]
   31ee4:	str	w8, [x9, #24]
   31ee8:	sub	w27, w27, #0x1
   31eec:	cmp	w27, w20
   31ef0:	sub	w8, w19, #0x1
   31ef4:	b.cc	31e34 <ZSTD_endStream@@Base+0x23ee0>  // b.lo, b.ul, b.last
   31ef8:	ldr	w9, [x23, #152]
   31efc:	mov	w19, w8
   31f00:	ldur	w8, [x29, #-116]
   31f04:	sub	w24, w27, #0x3
   31f08:	cmp	w9, #0x1
   31f0c:	add	w28, w27, w8
   31f10:	b.ne	31f30 <ZSTD_endStream@@Base+0x23fdc>  // b.any
   31f14:	mov	w25, w0
   31f18:	mov	w0, w24
   31f1c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   31f20:	ldur	w8, [x29, #-160]
   31f24:	add	w8, w8, w0
   31f28:	mov	w0, w25
   31f2c:	b	31fa0 <ZSTD_endStream@@Base+0x2404c>
   31f30:	ldr	x8, [x23, #96]
   31f34:	mov	w25, w0
   31f38:	ldr	w21, [x23, #148]
   31f3c:	ldr	w0, [x8, x22, lsl #2]
   31f40:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   31f44:	mov	w26, w0
   31f48:	mov	w0, w24
   31f4c:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   31f50:	mov	w8, w0
   31f54:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   31f58:	ldr	x9, [x23, #88]
   31f5c:	lsl	x8, x8, #2
   31f60:	add	x10, x10, #0xca8
   31f64:	ldr	w24, [x10, x8]
   31f68:	ldur	x10, [x29, #-88]
   31f6c:	ldr	w0, [x9, x8]
   31f70:	ldr	w23, [x10, #144]
   31f74:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   31f78:	sub	w9, w21, w26
   31f7c:	add	w8, w24, w22
   31f80:	add	w9, w9, w23
   31f84:	ldur	x23, [x29, #-88]
   31f88:	add	w8, w9, w8, lsl #8
   31f8c:	sub	w8, w8, w0
   31f90:	mov	w21, #0x40000000            	// #1073741824
   31f94:	mov	w26, #0x1c                  	// #28
   31f98:	mov	w0, w25
   31f9c:	add	w8, w8, #0x33
   31fa0:	ldur	w9, [x29, #-104]
   31fa4:	ldur	x24, [x29, #-96]
   31fa8:	cmp	w28, w0
   31fac:	add	w8, w9, w8
   31fb0:	b.hi	31fcc <ZSTD_endStream@@Base+0x24078>  // b.pmore
   31fb4:	umull	x9, w28, w26
   31fb8:	ldr	w9, [x24, x9]
   31fbc:	cmp	w8, w9
   31fc0:	b.ge	31ee8 <ZSTD_endStream@@Base+0x23f94>  // b.tcont
   31fc4:	cmp	w28, w0
   31fc8:	b.ls	31ec4 <ZSTD_endStream@@Base+0x23f70>  // b.plast
   31fcc:	ldur	x10, [x29, #-152]
   31fd0:	mov	w9, w0
   31fd4:	umaddl	x10, w0, w26, x10
   31fd8:	add	x9, x9, #0x1
   31fdc:	cmp	x19, x9
   31fe0:	str	w21, [x10], #28
   31fe4:	b.ne	31fd8 <ZSTD_endStream@@Base+0x24084>  // b.any
   31fe8:	mov	w0, w9
   31fec:	b	31ec4 <ZSTD_endStream@@Base+0x23f70>
   31ff0:	ldr	w12, [sp, #176]
   31ff4:	ldp	x20, x27, [x29, #-216]
   31ff8:	ldur	w21, [x29, #-116]
   31ffc:	ldur	x25, [x29, #-176]
   32000:	mov	w8, wzr
   32004:	b	30e28 <ZSTD_endStream@@Base+0x22ed4>
   32008:	ldur	x23, [x29, #-88]
   3200c:	ldur	x27, [x29, #-208]
   32010:	ldur	x25, [x29, #-176]
   32014:	cmp	x28, #0x2
   32018:	b.hi	3207c <ZSTD_endStream@@Base+0x24128>  // b.pmore
   3201c:	sub	x1, x29, #0xc
   32020:	mov	x0, x23
   32024:	mov	x2, x12
   32028:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   3202c:	ldr	w8, [sp, #168]
   32030:	ldur	x20, [x29, #-168]
   32034:	ldr	w22, [sp, #48]
   32038:	cmp	w0, w8
   3203c:	b.cc	32084 <ZSTD_endStream@@Base+0x24130>  // b.lo, b.ul, b.last
   32040:	ldr	w8, [sp, #64]
   32044:	sub	w19, w8, w0
   32048:	lsr	w8, w19, #18
   3204c:	cbnz	w8, 32084 <ZSTD_endStream@@Base+0x24130>
   32050:	ldr	x8, [sp, #32]
   32054:	ldur	x2, [x29, #-184]
   32058:	add	x1, x8, w0, uxtw
   3205c:	ldur	x0, [x29, #-112]
   32060:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   32064:	cmp	x0, #0x3
   32068:	b.cs	3208c <ZSTD_endStream@@Base+0x24138>  // b.hs, b.nlast
   3206c:	ldur	x12, [x29, #-112]
   32070:	mov	w8, wzr
   32074:	mov	x0, x28
   32078:	b	320d8 <ZSTD_endStream@@Base+0x24184>
   3207c:	ldr	w22, [sp, #48]
   32080:	b	320f0 <ZSTD_endStream@@Base+0x2419c>
   32084:	ldur	x12, [x29, #-112]
   32088:	b	320e0 <ZSTD_endStream@@Base+0x2418c>
   3208c:	add	w8, w19, #0x2
   32090:	ldr	w9, [sp, #224]
   32094:	stp	w8, w0, [x20]
   32098:	ldur	x12, [x29, #-112]
   3209c:	cmp	x0, w9, uxtw
   320a0:	b.hi	320c0 <ZSTD_endStream@@Base+0x2416c>  // b.pmore
   320a4:	ldur	x9, [x29, #-184]
   320a8:	add	x8, x12, x0
   320ac:	cmp	x8, x9
   320b0:	b.eq	320c0 <ZSTD_endStream@@Base+0x2416c>  // b.none
   320b4:	mov	w8, wzr
   320b8:	mov	w26, #0x1                   	// #1
   320bc:	b	320d8 <ZSTD_endStream@@Base+0x24184>
   320c0:	ldr	w8, [sp, #64]
   320c4:	mov	w26, #0x1                   	// #1
   320c8:	mov	w24, #0x1                   	// #1
   320cc:	add	w9, w8, #0x1
   320d0:	mov	w8, #0x1                   	// #1
   320d4:	str	w9, [x23, #36]
   320d8:	mov	x28, x0
   320dc:	cbnz	w8, 320e8 <ZSTD_endStream@@Base+0x24194>
   320e0:	mov	w8, wzr
   320e4:	mov	x0, x28
   320e8:	mov	x28, x0
   320ec:	cbnz	w8, 322a0 <ZSTD_endStream@@Base+0x2434c>
   320f0:	ldp	x10, x8, [sp, #16]
   320f4:	ldr	w9, [sp, #64]
   320f8:	mov	w24, w26
   320fc:	ldr	x26, [sp, #32]
   32100:	mov	x19, xzr
   32104:	mov	x20, xzr
   32108:	str	w9, [x8, x10, lsl #2]
   3210c:	add	w8, w9, #0x2
   32110:	stur	w8, [x29, #-160]
   32114:	b	32134 <ZSTD_endStream@@Base+0x241e0>
   32118:	ldur	x23, [x29, #-88]
   3211c:	ldur	x12, [x29, #-112]
   32120:	mov	x28, x8
   32124:	mov	x8, x20
   32128:	mov	w22, w15
   3212c:	mov	x20, x8
   32130:	tbz	w9, #0, 32280 <ZSTD_endStream@@Base+0x2432c>
   32134:	ldr	w9, [sp, #232]
   32138:	subs	w9, w9, #0x1
   3213c:	b.cc	32280 <ZSTD_endStream@@Base+0x2432c>  // b.lo, b.ul, b.last
   32140:	ldr	w8, [sp, #168]
   32144:	cmp	w22, w8
   32148:	b.cc	32280 <ZSTD_endStream@@Base+0x2432c>  // b.lo, b.ul, b.last
   3214c:	ldur	x2, [x29, #-184]
   32150:	cmp	x20, x19
   32154:	add	x21, x26, w22, uxtw
   32158:	csel	x23, x20, x19, cc  // cc = lo, ul, last
   3215c:	add	x0, x12, x23
   32160:	add	x1, x21, x23
   32164:	str	w9, [sp, #232]
   32168:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3216c:	add	x8, x0, x23
   32170:	cmp	x8, x28
   32174:	b.ls	321d8 <ZSTD_endStream@@Base+0x24284>  // b.plast
   32178:	ldr	w14, [sp, #176]
   3217c:	ldur	w12, [x29, #-160]
   32180:	ldur	x13, [x29, #-168]
   32184:	add	w11, w22, w8
   32188:	sub	w10, w14, w22
   3218c:	cmp	x8, x10
   32190:	mov	w9, wzr
   32194:	mov	w15, w22
   32198:	sub	w12, w12, w22
   3219c:	add	x13, x13, w24, uxtw #3
   321a0:	csel	w14, w11, w14, hi  // hi = pmore
   321a4:	cmp	x8, #0x1, lsl #12
   321a8:	add	w24, w24, #0x1
   321ac:	stp	w12, w8, [x13]
   321b0:	str	w14, [sp, #176]
   321b4:	b.hi	32118 <ZSTD_endStream@@Base+0x241c4>  // b.pmore
   321b8:	ldur	x12, [x29, #-112]
   321bc:	ldur	x11, [x29, #-184]
   321c0:	ldur	x23, [x29, #-88]
   321c4:	mov	x28, x8
   321c8:	add	x10, x12, x8
   321cc:	cmp	x10, x11
   321d0:	b.ne	321e4 <ZSTD_endStream@@Base+0x24290>  // b.any
   321d4:	b	32120 <ZSTD_endStream@@Base+0x241cc>
   321d8:	ldur	x23, [x29, #-88]
   321dc:	ldur	x12, [x29, #-112]
   321e0:	mov	w15, w22
   321e4:	ldrb	w9, [x21, x8]
   321e8:	ldrb	w10, [x12, x8]
   321ec:	ldr	w11, [sp, #80]
   321f0:	mov	w22, w15
   321f4:	cmp	w9, w10
   321f8:	ldr	x9, [sp, #96]
   321fc:	and	w11, w15, w11
   32200:	lsl	w11, w11, #1
   32204:	add	x9, x9, w11, uxtw #2
   32208:	b.cs	3222c <ZSTD_endStream@@Base+0x242d8>  // b.hs, b.nlast
   3220c:	ldr	w10, [sp, #76]
   32210:	cmp	w22, w10
   32214:	ldr	x10, [sp, #144]
   32218:	str	w22, [x10]
   3221c:	b.ls	32258 <ZSTD_endStream@@Base+0x24304>  // b.plast
   32220:	add	x9, x9, #0x4
   32224:	str	x9, [sp, #144]
   32228:	b	3224c <ZSTD_endStream@@Base+0x242f8>
   3222c:	ldr	w10, [sp, #76]
   32230:	cmp	w22, w10
   32234:	ldr	x10, [sp, #104]
   32238:	str	w22, [x10]
   3223c:	b.ls	32268 <ZSTD_endStream@@Base+0x24314>  // b.plast
   32240:	str	x9, [sp, #104]
   32244:	mov	x19, x8
   32248:	mov	x8, x20
   3224c:	ldr	w22, [x9]
   32250:	mov	w9, #0x1                   	// #1
   32254:	b	3212c <ZSTD_endStream@@Base+0x241d8>
   32258:	sub	x10, x29, #0x40
   3225c:	mov	w9, wzr
   32260:	str	x10, [sp, #144]
   32264:	b	3212c <ZSTD_endStream@@Base+0x241d8>
   32268:	sub	x10, x29, #0x40
   3226c:	mov	w9, wzr
   32270:	str	x10, [sp, #104]
   32274:	mov	x19, x8
   32278:	mov	x8, x20
   3227c:	b	3212c <ZSTD_endStream@@Base+0x241d8>
   32280:	ldr	x8, [sp, #104]
   32284:	ldur	w21, [x29, #-116]
   32288:	str	wzr, [x8]
   3228c:	ldr	x8, [sp, #144]
   32290:	str	wzr, [x8]
   32294:	ldr	w8, [sp, #176]
   32298:	sub	w8, w8, #0x8
   3229c:	str	w8, [x23, #36]
   322a0:	mov	w26, #0x1c                  	// #28
   322a4:	b	31d00 <ZSTD_endStream@@Base+0x23dac>
   322a8:	ldr	w20, [sp, #188]
   322ac:	b	32344 <ZSTD_endStream@@Base+0x243f0>
   322b0:	umaddl	x8, w0, w26, x24
   322b4:	ldp	w20, w21, [x8]
   322b8:	ldr	w9, [x8, #24]
   322bc:	ldr	x10, [x8, #16]
   322c0:	ldp	w11, w22, [x8, #8]
   322c4:	stp	w20, w21, [x29, #-64]
   322c8:	stur	w9, [x29, #-16]
   322cc:	stur	x10, [x29, #-24]
   322d0:	stp	w11, w22, [x29, #-56]
   322d4:	ldr	w9, [x8, #24]
   322d8:	ldr	x8, [x8, #16]
   322dc:	ldr	x19, [sp, #56]
   322e0:	mov	w28, w0
   322e4:	sub	x0, x29, #0x40
   322e8:	stur	w11, [x29, #-136]
   322ec:	str	w9, [x19, #8]
   322f0:	str	x8, [x19]
   322f4:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   322f8:	cmp	w28, w0
   322fc:	stp	w21, w22, [sp, #192]
   32300:	b.ls	3233c <ZSTD_endStream@@Base+0x243e8>  // b.plast
   32304:	mov	w10, w28
   32308:	ldur	w8, [x29, #-16]
   3230c:	ldur	x9, [x29, #-24]
   32310:	ldur	w28, [x29, #-136]
   32314:	sub	x0, x29, #0x40
   32318:	stp	w20, w21, [x29, #-64]
   3231c:	stp	w28, w22, [x29, #-56]
   32320:	str	w8, [x19, #8]
   32324:	str	x9, [x19]
   32328:	mov	w19, w10
   3232c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   32330:	sub	w21, w19, w0
   32334:	mov	w12, w28
   32338:	b	32344 <ZSTD_endStream@@Base+0x243f0>
   3233c:	ldur	w12, [x29, #-136]
   32340:	mov	w21, wzr
   32344:	ldr	w9, [sp, #192]
   32348:	add	w22, w21, #0x1
   3234c:	umaddl	x8, w22, w26, x24
   32350:	str	w20, [sp, #188]
   32354:	stp	w20, w9, [x8]
   32358:	ldr	w9, [sp, #196]
   3235c:	stur	w12, [x29, #-136]
   32360:	mov	w19, w21
   32364:	mov	w20, w21
   32368:	stp	w12, w9, [x8, #8]
   3236c:	ldur	w9, [x29, #-16]
   32370:	ldur	x10, [x29, #-24]
   32374:	stur	w21, [x29, #-116]
   32378:	str	w9, [x8, #24]
   3237c:	str	x10, [x8, #16]
   32380:	cbz	w21, 323cc <ZSTD_endStream@@Base+0x24478>
   32384:	umaddl	x21, w20, w26, x24
   32388:	ldur	q0, [x21, #12]
   3238c:	ldr	q1, [x21]
   32390:	sub	x0, x29, #0x40
   32394:	stur	q0, [x29, #-52]
   32398:	stur	q1, [x29, #-64]
   3239c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   323a0:	ldur	q0, [x21, #12]
   323a4:	ldr	q1, [x21]
   323a8:	subs	w9, w20, w0
   323ac:	umaddl	x8, w19, w26, x24
   323b0:	sub	w19, w19, #0x1
   323b4:	csel	w20, wzr, w9, cc  // cc = lo, ul, last
   323b8:	stur	q0, [x8, #12]
   323bc:	str	q1, [x8]
   323c0:	b.hi	32384 <ZSTD_endStream@@Base+0x24430>  // b.pmore
   323c4:	add	w28, w19, #0x1
   323c8:	b	323d0 <ZSTD_endStream@@Base+0x2447c>
   323cc:	mov	w28, w22
   323d0:	ldur	x20, [x29, #-216]
   323d4:	cmp	w28, w22
   323d8:	stur	w22, [x29, #-104]
   323dc:	b.ls	32408 <ZSTD_endStream@@Base+0x244b4>  // b.plast
   323e0:	b	2f99c <ZSTD_endStream@@Base+0x21a48>
   323e4:	ldur	x24, [x29, #-96]
   323e8:	add	x20, x20, w9, uxtw
   323ec:	strh	w8, [x10, #6]
   323f0:	add	x8, x10, #0x8
   323f4:	mov	x25, x20
   323f8:	str	x8, [x27, #8]
   323fc:	add	w28, w28, #0x1
   32400:	cmp	w28, w22
   32404:	b.hi	2f99c <ZSTD_endStream@@Base+0x21a48>  // b.pmore
   32408:	umaddl	x8, w28, w26, x24
   3240c:	ldp	w21, w19, [x8, #8]
   32410:	cbz	w21, 32434 <ZSTD_endStream@@Base+0x244e0>
   32414:	ldr	w25, [x8, #4]
   32418:	cmp	w25, #0x3
   3241c:	b.cc	3243c <ZSTD_endStream@@Base+0x244e8>  // b.lo, b.ul, b.last
   32420:	ldp	w8, w9, [x29, #-80]
   32424:	sub	w10, w25, #0x2
   32428:	stur	w10, [x29, #-80]
   3242c:	stp	w8, w9, [x29, #-76]
   32430:	b	32484 <ZSTD_endStream@@Base+0x24530>
   32434:	add	x25, x20, x19
   32438:	b	323fc <ZSTD_endStream@@Base+0x244a8>
   3243c:	cmp	w19, #0x0
   32440:	cinc	w8, w25, eq  // eq = none
   32444:	cbz	w8, 32484 <ZSTD_endStream@@Base+0x24530>
   32448:	cmp	w8, #0x3
   3244c:	b.ne	32464 <ZSTD_endStream@@Base+0x24510>  // b.any
   32450:	ldur	w9, [x29, #-80]
   32454:	sub	w9, w9, #0x1
   32458:	cmp	w8, #0x2
   3245c:	b.cs	32474 <ZSTD_endStream@@Base+0x24520>  // b.hs, b.nlast
   32460:	b	3247c <ZSTD_endStream@@Base+0x24528>
   32464:	sub	x9, x29, #0x50
   32468:	ldr	w9, [x9, w8, uxtw #2]
   3246c:	cmp	w8, #0x2
   32470:	b.cc	3247c <ZSTD_endStream@@Base+0x24528>  // b.lo, b.ul, b.last
   32474:	ldur	w8, [x29, #-76]
   32478:	stur	w8, [x29, #-72]
   3247c:	ldur	w8, [x29, #-80]
   32480:	stp	w9, w8, [x29, #-80]
   32484:	ldur	x0, [x29, #-200]
   32488:	mov	w1, w19
   3248c:	mov	x2, x20
   32490:	mov	w3, w25
   32494:	mov	w4, w21
   32498:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   3249c:	ldr	x3, [sp, #208]
   324a0:	ldr	x0, [x27, #24]
   324a4:	add	x2, x20, x19
   324a8:	mov	x24, x20
   324ac:	mov	x1, x20
   324b0:	cmp	x2, x3
   324b4:	b.ls	324c0 <ZSTD_endStream@@Base+0x2456c>  // b.plast
   324b8:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   324bc:	b	3252c <ZSTD_endStream@@Base+0x245d8>
   324c0:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   324c4:	cmp	w19, #0x11
   324c8:	b.cc	3252c <ZSTD_endStream@@Base+0x245d8>  // b.lo, b.ul, b.last
   324cc:	ldur	x8, [x29, #-208]
   324d0:	add	x1, x24, #0x10
   324d4:	mov	x20, x24
   324d8:	ldr	x22, [x8, #24]
   324dc:	add	x0, x22, #0x10
   324e0:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   324e4:	add	x0, x22, #0x20
   324e8:	add	x1, x24, #0x20
   324ec:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   324f0:	cmp	w19, #0x31
   324f4:	b.cc	3252c <ZSTD_endStream@@Base+0x245d8>  // b.lo, b.ul, b.last
   324f8:	add	x20, x22, x19
   324fc:	add	x26, x22, #0x30
   32500:	add	x27, x24, #0x40
   32504:	sub	x1, x27, #0x10
   32508:	mov	x0, x26
   3250c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   32510:	add	x0, x26, #0x10
   32514:	mov	x1, x27
   32518:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3251c:	add	x26, x26, #0x20
   32520:	cmp	x26, x20
   32524:	add	x27, x27, #0x20
   32528:	b.cc	32504 <ZSTD_endStream@@Base+0x245b0>  // b.lo, b.ul, b.last
   3252c:	ldur	x27, [x29, #-208]
   32530:	sub	w8, w21, #0x3
   32534:	cmp	w19, #0x10, lsl #12
   32538:	ldr	x9, [x27, #24]
   3253c:	add	x9, x9, x19
   32540:	str	x9, [x27, #24]
   32544:	b.cc	3255c <ZSTD_endStream@@Base+0x24608>  // b.lo, b.ul, b.last
   32548:	ldp	x10, x9, [x27]
   3254c:	sub	x9, x9, x10
   32550:	lsr	x9, x9, #3
   32554:	mov	w10, #0x1                   	// #1
   32558:	stp	w10, w9, [x27, #72]
   3255c:	ldr	x10, [x27, #8]
   32560:	ldur	w22, [x29, #-104]
   32564:	add	w9, w21, w19
   32568:	add	w11, w25, #0x1
   3256c:	cmp	w8, #0x10, lsl #12
   32570:	mov	x20, x24
   32574:	mov	w26, #0x1c                  	// #28
   32578:	strh	w19, [x10, #4]
   3257c:	str	w11, [x10]
   32580:	b.cc	323e4 <ZSTD_endStream@@Base+0x24490>  // b.lo, b.ul, b.last
   32584:	ldp	x12, x11, [x27]
   32588:	sub	x11, x11, x12
   3258c:	lsr	x11, x11, #3
   32590:	mov	w12, #0x2                   	// #2
   32594:	stp	w12, w11, [x27, #72]
   32598:	b	323e4 <ZSTD_endStream@@Base+0x24490>
   3259c:	mov	x0, x27
   325a0:	bl	bbd8 <ZSTD_copyCCtx@@Base+0x344>
   325a4:	ldr	w9, [x23, #24]
   325a8:	ldr	x10, [sp, #8]
   325ac:	ldr	x8, [x23, #8]
   325b0:	add	w9, w9, w10
   325b4:	stp	w9, w9, [x23, #24]
   325b8:	ldur	x0, [x29, #-200]
   325bc:	sub	x8, x8, x10
   325c0:	str	x8, [x23, #8]
   325c4:	str	w9, [x23, #36]
   325c8:	bl	42070 <ZSTD_endStream@@Base+0x3411c>
   325cc:	add	sp, sp, #0x1d0
   325d0:	ldp	x20, x19, [sp, #80]
   325d4:	ldp	x22, x21, [sp, #64]
   325d8:	ldp	x24, x23, [sp, #48]
   325dc:	ldp	x26, x25, [sp, #32]
   325e0:	ldp	x28, x27, [sp, #16]
   325e4:	ldp	x29, x30, [sp], #96
   325e8:	ret
   325ec:	stp	x29, x30, [sp, #-96]!
   325f0:	stp	x28, x27, [sp, #16]
   325f4:	stp	x26, x25, [sp, #32]
   325f8:	stp	x24, x23, [sp, #48]
   325fc:	stp	x22, x21, [sp, #64]
   32600:	stp	x20, x19, [sp, #80]
   32604:	mov	x29, sp
   32608:	sub	sp, sp, #0x220
   3260c:	ldr	w12, [x0, #36]
   32610:	ldr	x8, [x0, #8]
   32614:	ldr	w9, [x0, #24]
   32618:	stur	x1, [x29, #-192]
   3261c:	ldp	w11, w10, [x0, #200]
   32620:	stur	w12, [x29, #-12]
   32624:	add	x19, x8, x9
   32628:	ldp	x22, x8, [x0, #104]
   3262c:	add	x24, x0, #0x48
   32630:	mov	w13, #0xfff                 	// #4095
   32634:	cmp	w10, #0xfff
   32638:	mov	x27, x3
   3263c:	mov	x21, x2
   32640:	mov	x23, x0
   32644:	add	x20, x3, x4
   32648:	csel	w26, w10, w13, cc  // cc = lo, ul, last
   3264c:	stur	x8, [x29, #-96]
   32650:	cmp	w11, #0x3
   32654:	mov	w8, #0x3                   	// #3
   32658:	mov	x0, x24
   3265c:	mov	x1, x3
   32660:	mov	x2, x4
   32664:	mov	w3, wzr
   32668:	sub	x25, x20, #0x8
   3266c:	cinc	w28, w8, ne  // ne = any
   32670:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   32674:	cmp	x19, x27
   32678:	cinc	x10, x27, eq  // eq = none
   3267c:	cmp	x10, x25
   32680:	b.cs	366d0 <ZSTD_endStream@@Base+0x2877c>  // b.hs, b.nlast
   32684:	mov	x8, x25
   32688:	sub	w8, w28, #0x1
   3268c:	str	w26, [sp, #172]
   32690:	str	x8, [sp, #152]
   32694:	sub	x8, x29, #0x40
   32698:	ldur	x26, [x29, #-96]
   3269c:	add	x8, x8, #0x10
   326a0:	sub	x9, x20, #0x20
   326a4:	str	x8, [sp, #144]
   326a8:	stur	x9, [x29, #-224]
   326ac:	mov	w9, w28
   326b0:	str	x9, [sp, #72]
   326b4:	add	x9, x26, #0x10
   326b8:	stur	x22, [x29, #-176]
   326bc:	stur	x24, [x29, #-200]
   326c0:	stur	x9, [x29, #-208]
   326c4:	add	x9, x26, #0x1c
   326c8:	mov	x22, x23
   326cc:	mov	w23, #0x1c                  	// #28
   326d0:	mov	x24, x10
   326d4:	stur	x25, [x29, #-232]
   326d8:	str	w28, [sp, #284]
   326dc:	stur	x9, [x29, #-136]
   326e0:	stur	x22, [x29, #-72]
   326e4:	stur	x20, [x29, #-184]
   326e8:	stur	x21, [x29, #-168]
   326ec:	b	32704 <ZSTD_endStream@@Base+0x247b0>
   326f0:	stur	w19, [x29, #-124]
   326f4:	ldur	x8, [x29, #-232]
   326f8:	ldur	x20, [x29, #-184]
   326fc:	cmp	x24, x8
   32700:	b.cs	366d0 <ZSTD_endStream@@Base+0x2877c>  // b.hs, b.nlast
   32704:	ldr	x19, [x22, #8]
   32708:	ldr	w21, [x22, #36]
   3270c:	subs	w8, w24, w27
   32710:	stur	w8, [x29, #-80]
   32714:	cset	w8, eq  // eq = none
   32718:	stur	w8, [x29, #-144]
   3271c:	add	x8, x19, x21
   32720:	cmp	x8, x24
   32724:	stur	x24, [x29, #-160]
   32728:	str	x27, [sp, #272]
   3272c:	b.ls	327f8 <ZSTD_endStream@@Base+0x248a4>  // b.plast
   32730:	ldur	x21, [x29, #-168]
   32734:	ldur	x20, [x29, #-208]
   32738:	mov	w19, wzr
   3273c:	cbz	w19, 33ffc <ZSTD_endStream@@Base+0x260a8>
   32740:	mov	x8, xzr
   32744:	ldr	w9, [x21, x8]
   32748:	str	w9, [x20, x8]
   3274c:	add	x8, x8, #0x4
   32750:	cmp	x8, #0xc
   32754:	b.ne	32744 <ZSTD_endStream@@Base+0x247f0>  // b.any
   32758:	ldur	w1, [x29, #-80]
   3275c:	mov	x0, x27
   32760:	mov	w3, wzr
   32764:	stp	wzr, w1, [x26, #8]
   32768:	ldur	x2, [x29, #-200]
   3276c:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   32770:	ldur	x10, [x29, #-176]
   32774:	sub	w9, w19, #0x1
   32778:	str	w0, [x26]
   3277c:	mov	w20, w0
   32780:	add	x9, x10, w9, uxtw #3
   32784:	ldr	w21, [x9, #4]
   32788:	ldr	w10, [sp, #172]
   3278c:	mov	w8, wzr
   32790:	mov	w12, wzr
   32794:	cmp	w21, w10
   32798:	b.ls	327e4 <ZSTD_endStream@@Base+0x24890>  // b.plast
   3279c:	ldr	w11, [x9]
   327a0:	ldr	w10, [sp, #264]
   327a4:	ldur	w25, [x29, #-80]
   327a8:	ldur	w8, [x29, #-16]
   327ac:	ldur	x9, [x29, #-24]
   327b0:	stp	w10, w11, [x29, #-64]
   327b4:	ldr	x10, [sp, #144]
   327b8:	sub	x0, x29, #0x40
   327bc:	stp	w21, w25, [x29, #-56]
   327c0:	str	w11, [sp, #268]
   327c4:	str	w8, [x10, #8]
   327c8:	str	x9, [x10]
   327cc:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   327d0:	mov	w12, w0
   327d4:	mov	w8, #0x7                   	// #7
   327d8:	stur	wzr, [x29, #-124]
   327dc:	stur	w21, [x29, #-216]
   327e0:	str	w25, [sp, #260]
   327e4:	cbz	w8, 32b44 <ZSTD_endStream@@Base+0x24bf0>
   327e8:	ldur	w19, [x29, #-124]
   327ec:	cmp	w8, #0x7
   327f0:	b.ne	34014 <ZSTD_endStream@@Base+0x260c0>  // b.any
   327f4:	b	36020 <ZSTD_endStream@@Base+0x280cc>
   327f8:	ldr	w20, [x22, #200]
   327fc:	ldur	x23, [x29, #-184]
   32800:	mov	x8, x24
   32804:	mov	x24, x22
   32808:	sub	w22, w8, w19
   3280c:	cmp	w21, w22
   32810:	b.cs	32838 <ZSTD_endStream@@Base+0x248e4>  // b.hs, b.nlast
   32814:	add	x1, x19, w21, uxtw
   32818:	mov	x0, x24
   3281c:	mov	x2, x23
   32820:	mov	w3, w20
   32824:	mov	w4, wzr
   32828:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   3282c:	add	w21, w0, w21
   32830:	cmp	w21, w22
   32834:	b.cc	32814 <ZSTD_endStream@@Base+0x248c0>  // b.lo, b.ul, b.last
   32838:	sub	w8, w20, #0x6
   3283c:	cmp	w8, #0x2
   32840:	mov	x21, x24
   32844:	str	w22, [x24, #36]
   32848:	b.cc	32ce4 <ZSTD_endStream@@Base+0x24d90>  // b.lo, b.ul, b.last
   3284c:	ldur	x22, [x29, #-160]
   32850:	cmp	w20, #0x5
   32854:	mov	w9, #0xfff                 	// #4095
   32858:	mov	w23, #0x1c                  	// #28
   3285c:	b.eq	32fc8 <ZSTD_endStream@@Base+0x25074>  // b.none
   32860:	cmp	w20, #0x3
   32864:	b.ne	332dc <ZSTD_endStream@@Base+0x25388>  // b.any
   32868:	ldr	w8, [x21, #204]
   3286c:	ldr	x20, [x21, #8]
   32870:	ldr	w1, [x21, #192]
   32874:	ldr	x19, [x21, #48]
   32878:	cmp	w8, #0xfff
   3287c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   32880:	mov	w2, #0x3                   	// #3
   32884:	mov	x0, x22
   32888:	stur	w8, [x29, #-104]
   3288c:	sub	w27, w22, w20
   32890:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   32894:	ldp	w2, w8, [x21, #184]
   32898:	stp	x0, x19, [sp, #88]
   3289c:	ldr	w9, [x19, x0, lsl #2]
   328a0:	ldr	x25, [x21, #64]
   328a4:	sub	w8, w8, #0x1
   328a8:	ldr	w28, [x21, #24]
   328ac:	str	w9, [sp, #104]
   328b0:	mov	w9, #0xffffffff            	// #-1
   328b4:	lsl	w19, w9, w8
   328b8:	mvn	w8, w19
   328bc:	str	w8, [sp, #208]
   328c0:	subs	w8, w27, w8
   328c4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   328c8:	mov	x0, x21
   328cc:	mov	w1, w27
   328d0:	str	w8, [sp, #200]
   328d4:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   328d8:	add	x8, x20, x28
   328dc:	add	w9, w27, #0x9
   328e0:	stur	x8, [x29, #-248]
   328e4:	bic	w8, w27, w19
   328e8:	str	w9, [sp, #120]
   328ec:	ldr	w9, [x21, #196]
   328f0:	cmp	w0, #0x0
   328f4:	ldr	x14, [x21, #176]
   328f8:	add	x10, x22, #0x3
   328fc:	lsl	w8, w8, #1
   32900:	stur	x10, [x29, #-240]
   32904:	csinc	w10, w0, wzr, ne  // ne = any
   32908:	add	x8, x25, w8, uxtw #2
   3290c:	str	w10, [sp, #248]
   32910:	str	x8, [sp, #232]
   32914:	add	x8, x8, #0x4
   32918:	mov	w10, #0x1                   	// #1
   3291c:	str	x20, [sp, #128]
   32920:	stur	x28, [x29, #-152]
   32924:	stp	x25, x8, [sp, #216]
   32928:	lsl	w9, w10, w9
   3292c:	ldp	x12, x11, [x14]
   32930:	str	w9, [sp, #112]
   32934:	str	x14, [sp, #80]
   32938:	ldp	w8, w9, [x14, #188]
   3293c:	ldr	w13, [x14, #28]
   32940:	sub	x15, x12, x11
   32944:	mov	w10, #0xffffffff            	// #-1
   32948:	sub	w8, w8, #0x1
   3294c:	str	w9, [sp, #56]
   32950:	stur	x12, [x29, #-256]
   32954:	sub	w9, w27, w13
   32958:	sub	w12, w0, w15
   3295c:	lsl	w8, w10, w8
   32960:	sub	w10, w15, w13
   32964:	mvn	w14, w8
   32968:	sub	w8, w9, w12
   3296c:	stur	w8, [x29, #-112]
   32970:	sub	w8, w15, w14
   32974:	cmp	w10, w14
   32978:	csel	w8, w8, w13, hi  // hi = pmore
   3297c:	str	w8, [sp, #176]
   32980:	ldur	w8, [x29, #-80]
   32984:	sub	w28, w27, w28
   32988:	stur	w27, [x29, #-120]
   3298c:	ldr	x27, [sp, #152]
   32990:	ldur	x20, [x29, #-208]
   32994:	cmp	w8, #0x0
   32998:	mov	w8, #0x3                   	// #3
   3299c:	cinc	x8, x8, eq  // eq = none
   329a0:	mov	w26, wzr
   329a4:	mov	w24, wzr
   329a8:	cset	w22, eq  // eq = none
   329ac:	stur	x8, [x29, #-88]
   329b0:	sub	x8, x11, x12
   329b4:	str	x15, [sp, #64]
   329b8:	str	w14, [sp, #136]
   329bc:	str	w13, [sp, #192]
   329c0:	str	x11, [sp, #184]
   329c4:	str	x12, [sp, #160]
   329c8:	str	x8, [sp, #240]
   329cc:	cmp	x22, #0x3
   329d0:	b.ne	329e4 <ZSTD_endStream@@Base+0x24a90>  // b.any
   329d4:	ldur	x8, [x29, #-168]
   329d8:	ldr	w8, [x8]
   329dc:	sub	w19, w8, #0x1
   329e0:	b	329ec <ZSTD_endStream@@Base+0x24a98>
   329e4:	ldur	x8, [x29, #-168]
   329e8:	ldr	w19, [x8, x22, lsl #2]
   329ec:	sub	w8, w19, #0x1
   329f0:	cmp	w8, w28
   329f4:	b.cs	32a3c <ZSTD_endStream@@Base+0x24ae8>  // b.hs, b.nlast
   329f8:	ldur	x25, [x29, #-160]
   329fc:	mov	w1, #0x3                   	// #3
   32a00:	mov	x0, x25
   32a04:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32a08:	mov	w19, w19
   32a0c:	mov	w20, w0
   32a10:	sub	x0, x25, x19
   32a14:	mov	w1, #0x3                   	// #3
   32a18:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32a1c:	cmp	w20, w0
   32a20:	b.ne	32ab0 <ZSTD_endStream@@Base+0x24b5c>  // b.any
   32a24:	ldur	x0, [x29, #-240]
   32a28:	ldur	x2, [x29, #-184]
   32a2c:	neg	x8, x19
   32a30:	add	x1, x0, x8
   32a34:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   32a38:	b	32aa8 <ZSTD_endStream@@Base+0x24b54>
   32a3c:	ldur	w9, [x29, #-112]
   32a40:	cmp	w8, w9
   32a44:	mov	w8, wzr
   32a48:	b.cs	32ab8 <ZSTD_endStream@@Base+0x24b64>  // b.hs, b.nlast
   32a4c:	ldur	w9, [x29, #-120]
   32a50:	ldur	x11, [x29, #-152]
   32a54:	sub	w9, w9, w19
   32a58:	mvn	w10, w9
   32a5c:	add	w10, w11, w10
   32a60:	cmp	w10, #0x3
   32a64:	b.cc	32ab8 <ZSTD_endStream@@Base+0x24b64>  // b.lo, b.ul, b.last
   32a68:	ldr	x8, [sp, #240]
   32a6c:	ldur	x0, [x29, #-160]
   32a70:	mov	w1, #0x3                   	// #3
   32a74:	add	x20, x8, w9, uxtw
   32a78:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32a7c:	mov	w25, w0
   32a80:	mov	w1, #0x3                   	// #3
   32a84:	mov	x0, x20
   32a88:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32a8c:	cmp	w25, w0
   32a90:	b.ne	32ab0 <ZSTD_endStream@@Base+0x24b5c>  // b.any
   32a94:	ldp	x4, x0, [x29, #-248]
   32a98:	ldur	x2, [x29, #-184]
   32a9c:	ldur	x3, [x29, #-256]
   32aa0:	add	x1, x20, #0x3
   32aa4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   32aa8:	add	w8, w0, #0x3
   32aac:	b	32ab4 <ZSTD_endStream@@Base+0x24b60>
   32ab0:	mov	w8, wzr
   32ab4:	ldur	x20, [x29, #-208]
   32ab8:	mov	w9, w8
   32abc:	cmp	x27, x9
   32ac0:	b.cs	32b04 <ZSTD_endStream@@Base+0x24bb0>  // b.hs, b.nlast
   32ac4:	ldur	x10, [x29, #-176]
   32ac8:	ldur	w11, [x29, #-104]
   32acc:	add	x10, x10, w24, uxtw #3
   32ad0:	add	w24, w24, #0x1
   32ad4:	cmp	w8, w11
   32ad8:	stp	w26, w8, [x10]
   32adc:	mov	w8, #0x1                   	// #1
   32ae0:	b.hi	32b34 <ZSTD_endStream@@Base+0x24be0>  // b.pmore
   32ae4:	ldur	x10, [x29, #-160]
   32ae8:	ldur	x11, [x29, #-184]
   32aec:	mov	x27, x9
   32af0:	mov	w19, w24
   32af4:	add	x10, x10, x9
   32af8:	cmp	x10, x11
   32afc:	b.ne	32b08 <ZSTD_endStream@@Base+0x24bb4>  // b.any
   32b00:	b	32b14 <ZSTD_endStream@@Base+0x24bc0>
   32b04:	mov	x9, x27
   32b08:	mov	w8, wzr
   32b0c:	mov	x27, x9
   32b10:	mov	w19, w21
   32b14:	cbnz	w8, 33934 <ZSTD_endStream@@Base+0x259e0>
   32b18:	ldur	x8, [x29, #-88]
   32b1c:	add	x22, x22, #0x1
   32b20:	add	w26, w26, #0x1
   32b24:	mov	w21, w19
   32b28:	cmp	x22, x8
   32b2c:	b.cc	329cc <ZSTD_endStream@@Base+0x24a78>  // b.lo, b.ul, b.last
   32b30:	b	33930 <ZSTD_endStream@@Base+0x259dc>
   32b34:	mov	x27, x9
   32b38:	mov	w19, w24
   32b3c:	cbz	w8, 32b18 <ZSTD_endStream@@Base+0x24bc4>
   32b40:	b	33934 <ZSTD_endStream@@Base+0x259e0>
   32b44:	ldur	x1, [x29, #-200]
   32b48:	mov	w0, wzr
   32b4c:	mov	w2, wzr
   32b50:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   32b54:	ldur	x8, [x29, #-136]
   32b58:	ldr	x9, [sp, #72]
   32b5c:	mov	w21, #0x1                   	// #1
   32b60:	mov	w10, #0x40000000            	// #1073741824
   32b64:	add	x21, x21, #0x1
   32b68:	cmp	x21, x9
   32b6c:	str	w10, [x8], #28
   32b70:	b.cc	32b64 <ZSTD_endStream@@Base+0x24c10>  // b.lo, b.ul, b.last
   32b74:	add	w8, w0, w20
   32b78:	mov	x9, xzr
   32b7c:	stur	w8, [x29, #-88]
   32b80:	mov	w8, w19
   32b84:	stur	x8, [x29, #-152]
   32b88:	b	32ba0 <ZSTD_endStream@@Base+0x24c4c>
   32b8c:	ldur	x9, [x29, #-120]
   32b90:	ldur	x8, [x29, #-152]
   32b94:	add	x9, x9, #0x1
   32b98:	cmp	x9, x8
   32b9c:	b.cs	32cc4 <ZSTD_endStream@@Base+0x24d70>  // b.hs, b.nlast
   32ba0:	ldp	x8, x0, [x29, #-176]
   32ba4:	stur	x9, [x29, #-120]
   32ba8:	ldur	w2, [x29, #-144]
   32bac:	add	x8, x8, x9, lsl #3
   32bb0:	ldp	w20, w28, [x8]
   32bb4:	mov	w1, w20
   32bb8:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   32bbc:	cmp	w21, w28
   32bc0:	b.hi	32b8c <ZSTD_endStream@@Base+0x24c38>  // b.pmore
   32bc4:	mov	x24, x0
   32bc8:	add	w0, w20, #0x1
   32bcc:	mov	x27, x1
   32bd0:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   32bd4:	mov	w8, #0xffffda33            	// #-9677
   32bd8:	add	w8, w8, w0, lsl #9
   32bdc:	cmp	w0, #0x13
   32be0:	mov	w10, #0x33                  	// #51
   32be4:	lsl	w9, w0, #8
   32be8:	csel	w8, w8, w10, hi  // hi = pmore
   32bec:	mov	w19, w0
   32bf0:	stur	w8, [x29, #-104]
   32bf4:	add	w8, w9, #0x1, lsl #12
   32bf8:	stur	w8, [x29, #-112]
   32bfc:	b	32ca0 <ZSTD_endStream@@Base+0x24d4c>
   32c00:	ldr	x8, [x22, #96]
   32c04:	ldur	x9, [x29, #-72]
   32c08:	ldr	w0, [x8, x19, lsl #2]
   32c0c:	ldr	w22, [x9, #148]
   32c10:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   32c14:	mov	w26, w0
   32c18:	mov	w0, w25
   32c1c:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   32c20:	ldur	x9, [x29, #-72]
   32c24:	mov	w8, w0
   32c28:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   32c2c:	lsl	x8, x8, #2
   32c30:	ldr	x9, [x9, #88]
   32c34:	add	x10, x10, #0xca8
   32c38:	ldr	w25, [x10, x8]
   32c3c:	ldur	x10, [x29, #-72]
   32c40:	ldr	w0, [x9, x8]
   32c44:	ldr	w23, [x10, #144]
   32c48:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   32c4c:	ldur	w9, [x29, #-104]
   32c50:	add	w8, w25, w19
   32c54:	add	w9, w22, w9
   32c58:	ldur	x22, [x29, #-72]
   32c5c:	sub	w9, w9, w26
   32c60:	ldur	x26, [x29, #-96]
   32c64:	add	w9, w9, w23
   32c68:	add	w8, w9, w8, lsl #8
   32c6c:	mov	w23, #0x1c                  	// #28
   32c70:	sub	w8, w8, w0
   32c74:	ldur	w9, [x29, #-88]
   32c78:	ldur	w10, [x29, #-80]
   32c7c:	add	w8, w9, w8
   32c80:	umaddl	x9, w21, w23, x26
   32c84:	stp	w21, w10, [x9, #8]
   32c88:	add	w21, w21, #0x1
   32c8c:	cmp	w21, w28
   32c90:	stp	w8, w20, [x9]
   32c94:	str	x24, [x9, #16]
   32c98:	str	w27, [x9, #24]
   32c9c:	b.hi	32b8c <ZSTD_endStream@@Base+0x24c38>  // b.pmore
   32ca0:	ldr	w8, [x22, #152]
   32ca4:	sub	w25, w21, #0x3
   32ca8:	cmp	w8, #0x1
   32cac:	b.ne	32c00 <ZSTD_endStream@@Base+0x24cac>  // b.any
   32cb0:	mov	w0, w25
   32cb4:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   32cb8:	ldur	w8, [x29, #-112]
   32cbc:	add	w8, w8, w0
   32cc0:	b	32c74 <ZSTD_endStream@@Base+0x24d20>
   32cc4:	ldr	x27, [sp, #272]
   32cc8:	ldur	w19, [x29, #-124]
   32ccc:	ldur	x24, [x29, #-160]
   32cd0:	mov	w8, wzr
   32cd4:	sub	w12, w21, #0x1
   32cd8:	cmp	w8, #0x7
   32cdc:	b.ne	34014 <ZSTD_endStream@@Base+0x260c0>  // b.any
   32ce0:	b	36020 <ZSTD_endStream@@Base+0x280cc>
   32ce4:	ldr	w8, [x21, #204]
   32ce8:	ldur	x22, [x29, #-160]
   32cec:	ldr	x23, [x21, #8]
   32cf0:	ldr	w1, [x21, #192]
   32cf4:	ldr	x19, [x21, #48]
   32cf8:	cmp	w8, #0xfff
   32cfc:	mov	w9, #0xfff                 	// #4095
   32d00:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   32d04:	mov	w2, #0x6                   	// #6
   32d08:	mov	x0, x22
   32d0c:	stur	w8, [x29, #-112]
   32d10:	sub	w25, w22, w23
   32d14:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   32d18:	ldp	w2, w8, [x21, #184]
   32d1c:	stp	x0, x19, [sp, #88]
   32d20:	mov	w20, #0xffffffff            	// #-1
   32d24:	ldr	w9, [x19, x0, lsl #2]
   32d28:	sub	w8, w8, #0x1
   32d2c:	lsl	w19, w20, w8
   32d30:	ldr	x24, [x21, #64]
   32d34:	ldr	w27, [x21, #24]
   32d38:	mvn	w8, w19
   32d3c:	str	w8, [sp, #208]
   32d40:	subs	w8, w25, w8
   32d44:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   32d48:	mov	x0, x21
   32d4c:	mov	w1, w25
   32d50:	str	w9, [sp, #104]
   32d54:	str	w8, [sp, #200]
   32d58:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   32d5c:	add	x8, x23, x27
   32d60:	str	x8, [sp, #248]
   32d64:	bic	w8, w25, w19
   32d68:	ldr	x14, [x21, #176]
   32d6c:	add	w9, w25, #0x9
   32d70:	sub	w10, w25, w27
   32d74:	lsl	w8, w8, #1
   32d78:	cmp	w0, #0x0
   32d7c:	str	w9, [sp, #120]
   32d80:	ldr	w9, [x21, #196]
   32d84:	stur	w10, [x29, #-88]
   32d88:	add	x10, x22, #0x4
   32d8c:	add	x8, x24, w8, uxtw #2
   32d90:	stp	x10, x27, [x29, #-248]
   32d94:	csinc	w10, w0, wzr, ne  // ne = any
   32d98:	str	x8, [sp, #232]
   32d9c:	add	x8, x8, #0x4
   32da0:	str	x23, [sp, #112]
   32da4:	stur	w10, [x29, #-256]
   32da8:	stp	x24, x8, [sp, #216]
   32dac:	ldp	x12, x11, [x14]
   32db0:	mov	w10, #0x1                   	// #1
   32db4:	str	x14, [sp, #80]
   32db8:	lsl	w27, w10, w9
   32dbc:	ldp	w8, w9, [x14, #188]
   32dc0:	ldr	w13, [x14, #28]
   32dc4:	sub	x15, x12, x11
   32dc8:	str	x12, [sp, #240]
   32dcc:	sub	w8, w8, #0x1
   32dd0:	str	w9, [sp, #56]
   32dd4:	sub	w9, w25, w13
   32dd8:	sub	w12, w0, w15
   32ddc:	lsl	w8, w20, w8
   32de0:	sub	w10, w15, w13
   32de4:	mvn	w14, w8
   32de8:	sub	w8, w9, w12
   32dec:	stur	w8, [x29, #-120]
   32df0:	sub	w8, w15, w14
   32df4:	cmp	w10, w14
   32df8:	csel	w8, w8, w13, hi  // hi = pmore
   32dfc:	str	w8, [sp, #160]
   32e00:	ldur	w8, [x29, #-80]
   32e04:	ldr	x24, [sp, #152]
   32e08:	ldur	x20, [x29, #-208]
   32e0c:	mov	w26, wzr
   32e10:	cmp	w8, #0x0
   32e14:	mov	w8, #0x3                   	// #3
   32e18:	cinc	x8, x8, eq  // eq = none
   32e1c:	mov	w28, wzr
   32e20:	cset	w22, eq  // eq = none
   32e24:	stur	x8, [x29, #-104]
   32e28:	sub	x8, x11, x12
   32e2c:	mov	w23, #0x1c                  	// #28
   32e30:	stur	w25, [x29, #-152]
   32e34:	str	x15, [sp, #64]
   32e38:	str	w14, [sp, #128]
   32e3c:	str	w13, [sp, #184]
   32e40:	str	x11, [sp, #176]
   32e44:	str	x12, [sp, #136]
   32e48:	str	x8, [sp, #192]
   32e4c:	cmp	x22, #0x3
   32e50:	b.ne	32e64 <ZSTD_endStream@@Base+0x24f10>  // b.any
   32e54:	ldur	x8, [x29, #-168]
   32e58:	ldr	w8, [x8]
   32e5c:	sub	w19, w8, #0x1
   32e60:	b	32e6c <ZSTD_endStream@@Base+0x24f18>
   32e64:	ldur	x8, [x29, #-168]
   32e68:	ldr	w19, [x8, x22, lsl #2]
   32e6c:	ldur	w9, [x29, #-88]
   32e70:	sub	w8, w19, #0x1
   32e74:	cmp	w8, w9
   32e78:	b.cs	32ec0 <ZSTD_endStream@@Base+0x24f6c>  // b.hs, b.nlast
   32e7c:	ldur	x25, [x29, #-160]
   32e80:	mov	w1, #0x4                   	// #4
   32e84:	mov	x0, x25
   32e88:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32e8c:	mov	w19, w19
   32e90:	mov	w20, w0
   32e94:	sub	x0, x25, x19
   32e98:	mov	w1, #0x4                   	// #4
   32e9c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32ea0:	cmp	w20, w0
   32ea4:	b.ne	32f34 <ZSTD_endStream@@Base+0x24fe0>  // b.any
   32ea8:	ldur	x0, [x29, #-248]
   32eac:	ldur	x2, [x29, #-184]
   32eb0:	neg	x8, x19
   32eb4:	add	x1, x0, x8
   32eb8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   32ebc:	b	32f2c <ZSTD_endStream@@Base+0x24fd8>
   32ec0:	ldur	w9, [x29, #-120]
   32ec4:	cmp	w8, w9
   32ec8:	mov	w8, wzr
   32ecc:	b.cs	32f3c <ZSTD_endStream@@Base+0x24fe8>  // b.hs, b.nlast
   32ed0:	ldur	w9, [x29, #-152]
   32ed4:	ldur	x11, [x29, #-240]
   32ed8:	sub	w9, w9, w19
   32edc:	mvn	w10, w9
   32ee0:	add	w10, w11, w10
   32ee4:	cmp	w10, #0x3
   32ee8:	b.cc	32f3c <ZSTD_endStream@@Base+0x24fe8>  // b.lo, b.ul, b.last
   32eec:	ldr	x8, [sp, #192]
   32ef0:	ldur	x0, [x29, #-160]
   32ef4:	mov	w1, #0x4                   	// #4
   32ef8:	add	x20, x8, w9, uxtw
   32efc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32f00:	mov	w25, w0
   32f04:	mov	w1, #0x4                   	// #4
   32f08:	mov	x0, x20
   32f0c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   32f10:	cmp	w25, w0
   32f14:	b.ne	32f34 <ZSTD_endStream@@Base+0x24fe0>  // b.any
   32f18:	ldur	x0, [x29, #-248]
   32f1c:	ldur	x2, [x29, #-184]
   32f20:	ldp	x3, x4, [sp, #240]
   32f24:	add	x1, x20, #0x4
   32f28:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   32f2c:	add	w8, w0, #0x4
   32f30:	b	32f38 <ZSTD_endStream@@Base+0x24fe4>
   32f34:	mov	w8, wzr
   32f38:	ldur	x20, [x29, #-208]
   32f3c:	mov	w9, w8
   32f40:	cmp	x24, x9
   32f44:	b.cs	32f88 <ZSTD_endStream@@Base+0x25034>  // b.hs, b.nlast
   32f48:	ldur	x10, [x29, #-176]
   32f4c:	ldur	w11, [x29, #-112]
   32f50:	add	x10, x10, w28, uxtw #3
   32f54:	add	w28, w28, #0x1
   32f58:	cmp	w8, w11
   32f5c:	stp	w26, w8, [x10]
   32f60:	mov	w8, #0x1                   	// #1
   32f64:	b.hi	32fb8 <ZSTD_endStream@@Base+0x25064>  // b.pmore
   32f68:	ldur	x10, [x29, #-160]
   32f6c:	ldur	x11, [x29, #-184]
   32f70:	mov	x24, x9
   32f74:	mov	w19, w28
   32f78:	add	x10, x10, x9
   32f7c:	cmp	x10, x11
   32f80:	b.ne	32f8c <ZSTD_endStream@@Base+0x25038>  // b.any
   32f84:	b	32f98 <ZSTD_endStream@@Base+0x25044>
   32f88:	mov	x9, x24
   32f8c:	mov	w8, wzr
   32f90:	mov	x24, x9
   32f94:	mov	w19, w21
   32f98:	cbnz	w8, 335f4 <ZSTD_endStream@@Base+0x256a0>
   32f9c:	ldur	x8, [x29, #-104]
   32fa0:	add	x22, x22, #0x1
   32fa4:	add	w26, w26, #0x1
   32fa8:	mov	w21, w19
   32fac:	cmp	x22, x8
   32fb0:	b.cc	32e4c <ZSTD_endStream@@Base+0x24ef8>  // b.lo, b.ul, b.last
   32fb4:	b	335f0 <ZSTD_endStream@@Base+0x2569c>
   32fb8:	mov	x24, x9
   32fbc:	mov	w19, w28
   32fc0:	cbz	w8, 32f9c <ZSTD_endStream@@Base+0x25048>
   32fc4:	b	335f4 <ZSTD_endStream@@Base+0x256a0>
   32fc8:	ldr	w8, [x21, #204]
   32fcc:	ldr	x24, [x21, #8]
   32fd0:	ldr	w1, [x21, #192]
   32fd4:	ldr	x19, [x21, #48]
   32fd8:	cmp	w8, #0xfff
   32fdc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   32fe0:	mov	w2, #0x5                   	// #5
   32fe4:	mov	x0, x22
   32fe8:	stur	w8, [x29, #-112]
   32fec:	sub	w20, w22, w24
   32ff0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   32ff4:	ldp	w2, w8, [x21, #184]
   32ff8:	stp	x0, x19, [sp, #88]
   32ffc:	ldr	x9, [x21, #64]
   33000:	ldr	w28, [x19, x0, lsl #2]
   33004:	sub	w8, w8, #0x1
   33008:	ldr	w27, [x21, #24]
   3300c:	str	x9, [sp, #216]
   33010:	mov	w9, #0xffffffff            	// #-1
   33014:	lsl	w19, w9, w8
   33018:	mvn	w8, w19
   3301c:	str	w8, [sp, #192]
   33020:	subs	w8, w20, w8
   33024:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   33028:	mov	x0, x21
   3302c:	mov	w1, w20
   33030:	str	w8, [sp, #184]
   33034:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   33038:	sub	w10, w20, w27
   3303c:	cmp	w0, #0x0
   33040:	stur	w10, [x29, #-88]
   33044:	add	x10, x22, #0x4
   33048:	str	x10, [sp, #248]
   3304c:	csinc	w10, w0, wzr, ne  // ne = any
   33050:	str	w10, [sp, #240]
   33054:	ldr	x10, [sp, #216]
   33058:	add	x8, x24, x27
   3305c:	str	x8, [sp, #232]
   33060:	bic	w8, w20, w19
   33064:	ldr	x14, [x21, #176]
   33068:	add	w9, w20, #0x9
   3306c:	lsl	w8, w8, #1
   33070:	str	w9, [sp, #104]
   33074:	ldr	w9, [x21, #196]
   33078:	add	x8, x10, w8, uxtw #2
   3307c:	str	x8, [sp, #208]
   33080:	add	x8, x8, #0x4
   33084:	stur	x24, [x29, #-248]
   33088:	stur	x27, [x29, #-256]
   3308c:	str	x8, [sp, #200]
   33090:	ldp	x12, x11, [x14]
   33094:	mov	w10, #0x1                   	// #1
   33098:	str	x14, [sp, #80]
   3309c:	lsl	w27, w10, w9
   330a0:	ldp	w8, w9, [x14, #188]
   330a4:	ldr	w13, [x14, #28]
   330a8:	sub	x15, x12, x11
   330ac:	mov	w10, #0xffffffff            	// #-1
   330b0:	sub	w8, w8, #0x1
   330b4:	str	w9, [sp, #56]
   330b8:	str	x12, [sp, #224]
   330bc:	sub	w9, w20, w13
   330c0:	sub	w12, w0, w15
   330c4:	lsl	w8, w10, w8
   330c8:	sub	w10, w15, w13
   330cc:	mvn	w14, w8
   330d0:	sub	w8, w9, w12
   330d4:	stur	w8, [x29, #-120]
   330d8:	sub	w8, w15, w14
   330dc:	cmp	w10, w14
   330e0:	csel	w8, w8, w13, hi  // hi = pmore
   330e4:	str	w8, [sp, #128]
   330e8:	ldur	w8, [x29, #-80]
   330ec:	stur	w20, [x29, #-240]
   330f0:	ldr	x24, [sp, #152]
   330f4:	ldur	x20, [x29, #-208]
   330f8:	cmp	w8, #0x0
   330fc:	mov	w8, #0x3                   	// #3
   33100:	cinc	x8, x8, eq  // eq = none
   33104:	mov	w26, wzr
   33108:	mov	w25, wzr
   3310c:	cset	w22, eq  // eq = none
   33110:	stur	x8, [x29, #-104]
   33114:	sub	x8, x11, x12
   33118:	str	x15, [sp, #64]
   3311c:	str	w14, [sp, #112]
   33120:	str	w13, [sp, #160]
   33124:	str	x11, [sp, #136]
   33128:	str	x12, [sp, #120]
   3312c:	str	x8, [sp, #176]
   33130:	stur	w27, [x29, #-152]
   33134:	cmp	x22, #0x3
   33138:	b.ne	3314c <ZSTD_endStream@@Base+0x251f8>  // b.any
   3313c:	ldur	x8, [x29, #-168]
   33140:	ldr	w8, [x8]
   33144:	sub	w19, w8, #0x1
   33148:	b	33154 <ZSTD_endStream@@Base+0x25200>
   3314c:	ldur	x8, [x29, #-168]
   33150:	ldr	w19, [x8, x22, lsl #2]
   33154:	ldur	w9, [x29, #-88]
   33158:	sub	w8, w19, #0x1
   3315c:	cmp	w8, w9
   33160:	b.cs	331b4 <ZSTD_endStream@@Base+0x25260>  // b.hs, b.nlast
   33164:	mov	w27, w28
   33168:	mov	w28, w25
   3316c:	ldur	x25, [x29, #-160]
   33170:	mov	w1, #0x4                   	// #4
   33174:	mov	x0, x25
   33178:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3317c:	mov	w19, w19
   33180:	mov	w20, w0
   33184:	sub	x0, x25, x19
   33188:	mov	w1, #0x4                   	// #4
   3318c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   33190:	cmp	w20, w0
   33194:	b.ne	3322c <ZSTD_endStream@@Base+0x252d8>  // b.any
   33198:	ldr	x0, [sp, #248]
   3319c:	ldur	x2, [x29, #-184]
   331a0:	neg	x8, x19
   331a4:	add	x1, x0, x8
   331a8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   331ac:	add	w8, w0, #0x4
   331b0:	b	33230 <ZSTD_endStream@@Base+0x252dc>
   331b4:	ldur	w9, [x29, #-120]
   331b8:	cmp	w8, w9
   331bc:	mov	w8, wzr
   331c0:	b.cs	33250 <ZSTD_endStream@@Base+0x252fc>  // b.hs, b.nlast
   331c4:	ldur	w9, [x29, #-240]
   331c8:	ldur	x11, [x29, #-256]
   331cc:	sub	w9, w9, w19
   331d0:	mvn	w10, w9
   331d4:	add	w10, w11, w10
   331d8:	cmp	w10, #0x3
   331dc:	b.cc	33250 <ZSTD_endStream@@Base+0x252fc>  // b.lo, b.ul, b.last
   331e0:	ldr	x8, [sp, #176]
   331e4:	ldur	x0, [x29, #-160]
   331e8:	mov	w1, #0x4                   	// #4
   331ec:	mov	w19, w25
   331f0:	add	x20, x8, w9, uxtw
   331f4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   331f8:	mov	w25, w0
   331fc:	mov	w1, #0x4                   	// #4
   33200:	mov	x0, x20
   33204:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   33208:	cmp	w25, w0
   3320c:	b.ne	33244 <ZSTD_endStream@@Base+0x252f0>  // b.any
   33210:	ldr	x0, [sp, #248]
   33214:	ldur	x2, [x29, #-184]
   33218:	ldp	x3, x4, [sp, #224]
   3321c:	add	x1, x20, #0x4
   33220:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   33224:	add	w8, w0, #0x4
   33228:	b	33248 <ZSTD_endStream@@Base+0x252f4>
   3322c:	mov	w8, wzr
   33230:	ldur	x20, [x29, #-208]
   33234:	mov	w25, w28
   33238:	mov	w28, w27
   3323c:	ldur	w27, [x29, #-152]
   33240:	b	33250 <ZSTD_endStream@@Base+0x252fc>
   33244:	mov	w8, wzr
   33248:	ldur	x20, [x29, #-208]
   3324c:	mov	w25, w19
   33250:	mov	w9, w8
   33254:	cmp	x24, x9
   33258:	b.cs	3329c <ZSTD_endStream@@Base+0x25348>  // b.hs, b.nlast
   3325c:	ldur	x10, [x29, #-176]
   33260:	ldur	w11, [x29, #-112]
   33264:	add	x10, x10, w25, uxtw #3
   33268:	add	w25, w25, #0x1
   3326c:	cmp	w8, w11
   33270:	stp	w26, w8, [x10]
   33274:	mov	w8, #0x1                   	// #1
   33278:	b.hi	332cc <ZSTD_endStream@@Base+0x25378>  // b.pmore
   3327c:	ldur	x10, [x29, #-160]
   33280:	ldur	x11, [x29, #-184]
   33284:	mov	x24, x9
   33288:	mov	w19, w25
   3328c:	add	x10, x10, x9
   33290:	cmp	x10, x11
   33294:	b.ne	332a0 <ZSTD_endStream@@Base+0x2534c>  // b.any
   33298:	b	332ac <ZSTD_endStream@@Base+0x25358>
   3329c:	mov	x9, x24
   332a0:	mov	w8, wzr
   332a4:	mov	x24, x9
   332a8:	mov	w19, w21
   332ac:	cbnz	w8, 33948 <ZSTD_endStream@@Base+0x259f4>
   332b0:	ldur	x8, [x29, #-104]
   332b4:	add	x22, x22, #0x1
   332b8:	add	w26, w26, #0x1
   332bc:	mov	w21, w19
   332c0:	cmp	x22, x8
   332c4:	b.cc	33134 <ZSTD_endStream@@Base+0x251e0>  // b.lo, b.ul, b.last
   332c8:	b	33944 <ZSTD_endStream@@Base+0x259f0>
   332cc:	mov	x24, x9
   332d0:	mov	w19, w25
   332d4:	cbz	w8, 332b0 <ZSTD_endStream@@Base+0x2535c>
   332d8:	b	33948 <ZSTD_endStream@@Base+0x259f4>
   332dc:	ldr	w8, [x21, #204]
   332e0:	ldr	x24, [x21, #8]
   332e4:	ldr	w1, [x21, #192]
   332e8:	ldr	x19, [x21, #48]
   332ec:	cmp	w8, #0xfff
   332f0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   332f4:	mov	w2, #0x4                   	// #4
   332f8:	mov	x0, x22
   332fc:	stur	w8, [x29, #-120]
   33300:	sub	w27, w22, w24
   33304:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   33308:	ldp	w2, w8, [x21, #184]
   3330c:	stp	x0, x19, [sp, #88]
   33310:	ldr	w9, [x19, x0, lsl #2]
   33314:	ldr	x28, [x21, #64]
   33318:	sub	w8, w8, #0x1
   3331c:	ldr	w20, [x21, #24]
   33320:	stur	w9, [x29, #-104]
   33324:	mov	w9, #0xffffffff            	// #-1
   33328:	lsl	w19, w9, w8
   3332c:	mvn	w8, w19
   33330:	str	w8, [sp, #192]
   33334:	subs	w8, w27, w8
   33338:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3333c:	mov	x0, x21
   33340:	mov	w1, w27
   33344:	str	w8, [sp, #184]
   33348:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3334c:	add	x8, x24, x20
   33350:	add	w9, w27, #0x9
   33354:	str	x8, [sp, #232]
   33358:	bic	w8, w27, w19
   3335c:	stur	w9, [x29, #-112]
   33360:	ldr	w9, [x21, #196]
   33364:	sub	w10, w27, w20
   33368:	cmp	w0, #0x0
   3336c:	ldr	x14, [x21, #176]
   33370:	stur	w10, [x29, #-88]
   33374:	add	x10, x22, #0x4
   33378:	lsl	w8, w8, #1
   3337c:	str	x10, [sp, #248]
   33380:	csinc	w10, w0, wzr, ne  // ne = any
   33384:	add	x8, x28, w8, uxtw #2
   33388:	str	w10, [sp, #240]
   3338c:	str	x8, [sp, #216]
   33390:	add	x8, x8, #0x4
   33394:	mov	w10, #0x1                   	// #1
   33398:	stur	x24, [x29, #-248]
   3339c:	stur	x20, [x29, #-256]
   333a0:	str	x28, [sp, #200]
   333a4:	str	x8, [sp, #208]
   333a8:	lsl	w9, w10, w9
   333ac:	ldp	x12, x11, [x14]
   333b0:	str	w9, [sp, #104]
   333b4:	str	x14, [sp, #80]
   333b8:	ldp	w8, w9, [x14, #188]
   333bc:	ldr	w13, [x14, #28]
   333c0:	sub	x15, x12, x11
   333c4:	mov	w10, #0xffffffff            	// #-1
   333c8:	sub	w8, w8, #0x1
   333cc:	str	w9, [sp, #56]
   333d0:	str	x12, [sp, #224]
   333d4:	sub	w9, w27, w13
   333d8:	sub	w12, w0, w15
   333dc:	lsl	w8, w10, w8
   333e0:	sub	w10, w15, w13
   333e4:	mvn	w14, w8
   333e8:	sub	w8, w9, w12
   333ec:	stur	w8, [x29, #-152]
   333f0:	sub	w8, w15, w14
   333f4:	cmp	w10, w14
   333f8:	csel	w8, w8, w13, hi  // hi = pmore
   333fc:	str	w8, [sp, #128]
   33400:	ldur	w8, [x29, #-80]
   33404:	ldur	w28, [x29, #-104]
   33408:	ldr	x24, [sp, #152]
   3340c:	ldur	x20, [x29, #-208]
   33410:	cmp	w8, #0x0
   33414:	mov	w8, #0x3                   	// #3
   33418:	mov	w26, wzr
   3341c:	mov	w25, wzr
   33420:	stur	w27, [x29, #-240]
   33424:	cset	w22, eq  // eq = none
   33428:	cinc	x27, x8, eq  // eq = none
   3342c:	sub	x8, x11, x12
   33430:	str	x15, [sp, #64]
   33434:	str	w14, [sp, #112]
   33438:	str	w13, [sp, #160]
   3343c:	str	x11, [sp, #136]
   33440:	str	x12, [sp, #120]
   33444:	str	x8, [sp, #176]
   33448:	cmp	x22, #0x3
   3344c:	b.ne	33460 <ZSTD_endStream@@Base+0x2550c>  // b.any
   33450:	ldur	x8, [x29, #-168]
   33454:	ldr	w8, [x8]
   33458:	sub	w19, w8, #0x1
   3345c:	b	33468 <ZSTD_endStream@@Base+0x25514>
   33460:	ldur	x8, [x29, #-168]
   33464:	ldr	w19, [x8, x22, lsl #2]
   33468:	ldur	w9, [x29, #-88]
   3346c:	sub	w8, w19, #0x1
   33470:	cmp	w8, w9
   33474:	b.cs	334cc <ZSTD_endStream@@Base+0x25578>  // b.hs, b.nlast
   33478:	stur	x24, [x29, #-104]
   3347c:	mov	w24, w28
   33480:	mov	w28, w25
   33484:	ldur	x25, [x29, #-160]
   33488:	mov	w1, #0x4                   	// #4
   3348c:	mov	x0, x25
   33490:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   33494:	mov	w19, w19
   33498:	mov	w20, w0
   3349c:	sub	x0, x25, x19
   334a0:	mov	w1, #0x4                   	// #4
   334a4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   334a8:	cmp	w20, w0
   334ac:	b.ne	33544 <ZSTD_endStream@@Base+0x255f0>  // b.any
   334b0:	ldr	x0, [sp, #248]
   334b4:	ldur	x2, [x29, #-184]
   334b8:	neg	x8, x19
   334bc:	add	x1, x0, x8
   334c0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   334c4:	add	w8, w0, #0x4
   334c8:	b	33548 <ZSTD_endStream@@Base+0x255f4>
   334cc:	ldur	w9, [x29, #-152]
   334d0:	cmp	w8, w9
   334d4:	mov	w8, wzr
   334d8:	b.cs	33568 <ZSTD_endStream@@Base+0x25614>  // b.hs, b.nlast
   334dc:	ldur	w9, [x29, #-240]
   334e0:	ldur	x11, [x29, #-256]
   334e4:	sub	w9, w9, w19
   334e8:	mvn	w10, w9
   334ec:	add	w10, w11, w10
   334f0:	cmp	w10, #0x3
   334f4:	b.cc	33568 <ZSTD_endStream@@Base+0x25614>  // b.lo, b.ul, b.last
   334f8:	ldr	x8, [sp, #176]
   334fc:	ldur	x0, [x29, #-160]
   33500:	mov	w1, #0x4                   	// #4
   33504:	mov	w19, w25
   33508:	add	x20, x8, w9, uxtw
   3350c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   33510:	mov	w25, w0
   33514:	mov	w1, #0x4                   	// #4
   33518:	mov	x0, x20
   3351c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   33520:	cmp	w25, w0
   33524:	b.ne	3355c <ZSTD_endStream@@Base+0x25608>  // b.any
   33528:	ldr	x0, [sp, #248]
   3352c:	ldur	x2, [x29, #-184]
   33530:	ldp	x3, x4, [sp, #224]
   33534:	add	x1, x20, #0x4
   33538:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3353c:	add	w8, w0, #0x4
   33540:	b	33560 <ZSTD_endStream@@Base+0x2560c>
   33544:	mov	w8, wzr
   33548:	ldur	x20, [x29, #-208]
   3354c:	mov	w25, w28
   33550:	mov	w28, w24
   33554:	ldur	x24, [x29, #-104]
   33558:	b	33568 <ZSTD_endStream@@Base+0x25614>
   3355c:	mov	w8, wzr
   33560:	ldur	x20, [x29, #-208]
   33564:	mov	w25, w19
   33568:	mov	w9, w8
   3356c:	cmp	x24, x9
   33570:	b.cs	335b4 <ZSTD_endStream@@Base+0x25660>  // b.hs, b.nlast
   33574:	ldur	x10, [x29, #-176]
   33578:	ldur	w11, [x29, #-120]
   3357c:	add	x10, x10, w25, uxtw #3
   33580:	add	w25, w25, #0x1
   33584:	cmp	w8, w11
   33588:	stp	w26, w8, [x10]
   3358c:	mov	w8, #0x1                   	// #1
   33590:	b.hi	335e0 <ZSTD_endStream@@Base+0x2568c>  // b.pmore
   33594:	ldur	x10, [x29, #-160]
   33598:	ldur	x11, [x29, #-184]
   3359c:	mov	x24, x9
   335a0:	mov	w19, w25
   335a4:	add	x10, x10, x9
   335a8:	cmp	x10, x11
   335ac:	b.ne	335b8 <ZSTD_endStream@@Base+0x25664>  // b.any
   335b0:	b	335c4 <ZSTD_endStream@@Base+0x25670>
   335b4:	mov	x9, x24
   335b8:	mov	w8, wzr
   335bc:	mov	x24, x9
   335c0:	mov	w19, w21
   335c4:	cbnz	w8, 33ad4 <ZSTD_endStream@@Base+0x25b80>
   335c8:	add	x22, x22, #0x1
   335cc:	cmp	x22, x27
   335d0:	add	w26, w26, #0x1
   335d4:	mov	w21, w19
   335d8:	b.cc	33448 <ZSTD_endStream@@Base+0x254f4>  // b.lo, b.ul, b.last
   335dc:	b	33ad0 <ZSTD_endStream@@Base+0x25b7c>
   335e0:	mov	x24, x9
   335e4:	mov	w19, w25
   335e8:	cbz	w8, 335c8 <ZSTD_endStream@@Base+0x25674>
   335ec:	b	33ad4 <ZSTD_endStream@@Base+0x25b80>
   335f0:	mov	w8, wzr
   335f4:	ldur	x22, [x29, #-72]
   335f8:	cbnz	w8, 33fe8 <ZSTD_endStream@@Base+0x26094>
   335fc:	ldp	x10, x8, [sp, #88]
   33600:	ldur	w9, [x29, #-152]
   33604:	ldur	x2, [x29, #-184]
   33608:	ldr	w25, [sp, #120]
   3360c:	ldr	x26, [sp, #112]
   33610:	ldr	w19, [sp, #104]
   33614:	mov	x20, xzr
   33618:	mov	x21, xzr
   3361c:	str	w9, [x8, x10, lsl #2]
   33620:	add	w8, w9, #0x2
   33624:	stur	w8, [x29, #-88]
   33628:	b	33648 <ZSTD_endStream@@Base+0x256f4>
   3362c:	add	x9, x9, #0x4
   33630:	str	x9, [sp, #232]
   33634:	ldr	w19, [x9]
   33638:	mov	w9, #0x1                   	// #1
   3363c:	ldur	x2, [x29, #-184]
   33640:	mov	x21, x8
   33644:	tbz	w9, #0, 33798 <ZSTD_endStream@@Base+0x25844>
   33648:	subs	w27, w27, #0x1
   3364c:	b.cc	33798 <ZSTD_endStream@@Base+0x25844>  // b.lo, b.ul, b.last
   33650:	ldur	w8, [x29, #-256]
   33654:	cmp	w19, w8
   33658:	b.cc	33798 <ZSTD_endStream@@Base+0x25844>  // b.lo, b.ul, b.last
   3365c:	ldur	x8, [x29, #-160]
   33660:	cmp	x21, x20
   33664:	add	x22, x26, w19, uxtw
   33668:	csel	x23, x21, x20, cc  // cc = lo, ul, last
   3366c:	add	x0, x8, x23
   33670:	add	x1, x22, x23
   33674:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   33678:	add	x8, x0, x23
   3367c:	cmp	x8, x24
   33680:	b.ls	336ec <ZSTD_endStream@@Base+0x25798>  // b.plast
   33684:	ldur	w12, [x29, #-88]
   33688:	ldur	x13, [x29, #-176]
   3368c:	sub	w10, w25, w19
   33690:	add	w11, w19, w8
   33694:	cmp	x8, x10
   33698:	mov	w9, wzr
   3369c:	mov	w14, w19
   336a0:	sub	w12, w12, w19
   336a4:	add	x13, x13, w28, uxtw #3
   336a8:	csel	w25, w11, w25, hi  // hi = pmore
   336ac:	cmp	x8, #0x1, lsl #12
   336b0:	add	w28, w28, #0x1
   336b4:	stp	w12, w8, [x13]
   336b8:	b.hi	33780 <ZSTD_endStream@@Base+0x2582c>  // b.pmore
   336bc:	ldur	x10, [x29, #-160]
   336c0:	ldur	x11, [x29, #-184]
   336c4:	mov	x24, x8
   336c8:	mov	w23, #0x1c                  	// #28
   336cc:	add	x10, x10, x8
   336d0:	cmp	x10, x11
   336d4:	b.ne	336f4 <ZSTD_endStream@@Base+0x257a0>  // b.any
   336d8:	mov	x24, x8
   336dc:	mov	w27, w9
   336e0:	mov	x8, x21
   336e4:	mov	w19, w14
   336e8:	b	3363c <ZSTD_endStream@@Base+0x256e8>
   336ec:	mov	w14, w19
   336f0:	mov	w23, #0x1c                  	// #28
   336f4:	ldur	x10, [x29, #-160]
   336f8:	ldrb	w9, [x22, x8]
   336fc:	ldr	w11, [sp, #208]
   33700:	mov	w19, w14
   33704:	ldrb	w10, [x10, x8]
   33708:	and	w11, w14, w11
   3370c:	lsl	w11, w11, #1
   33710:	cmp	w9, w10
   33714:	ldr	x9, [sp, #216]
   33718:	add	x9, x9, w11, uxtw #2
   3371c:	b.cs	33744 <ZSTD_endStream@@Base+0x257f0>  // b.hs, b.nlast
   33720:	ldr	w10, [sp, #200]
   33724:	cmp	w19, w10
   33728:	ldr	x10, [sp, #232]
   3372c:	str	w19, [x10]
   33730:	b.hi	3362c <ZSTD_endStream@@Base+0x256d8>  // b.pmore
   33734:	sub	x10, x29, #0x40
   33738:	mov	w9, wzr
   3373c:	str	x10, [sp, #232]
   33740:	b	3363c <ZSTD_endStream@@Base+0x256e8>
   33744:	ldr	w10, [sp, #200]
   33748:	cmp	w19, w10
   3374c:	ldr	x10, [sp, #224]
   33750:	str	w19, [x10]
   33754:	b.ls	33768 <ZSTD_endStream@@Base+0x25814>  // b.plast
   33758:	str	x9, [sp, #224]
   3375c:	mov	x20, x8
   33760:	mov	x8, x21
   33764:	b	33634 <ZSTD_endStream@@Base+0x256e0>
   33768:	sub	x10, x29, #0x40
   3376c:	mov	w9, wzr
   33770:	str	x10, [sp, #224]
   33774:	mov	x20, x8
   33778:	mov	x8, x21
   3377c:	b	3363c <ZSTD_endStream@@Base+0x256e8>
   33780:	mov	x24, x8
   33784:	mov	w27, w9
   33788:	mov	x8, x21
   3378c:	mov	w23, #0x1c                  	// #28
   33790:	mov	w19, w14
   33794:	b	3363c <ZSTD_endStream@@Base+0x256e8>
   33798:	ldr	x8, [sp, #224]
   3379c:	str	wzr, [x8]
   337a0:	ldr	x8, [sp, #232]
   337a4:	str	wzr, [x8]
   337a8:	cbz	w27, 33fd0 <ZSTD_endStream@@Base+0x2607c>
   337ac:	ldur	x0, [x29, #-160]
   337b0:	ldr	w1, [sp, #56]
   337b4:	mov	w2, #0x6                   	// #6
   337b8:	mov	x19, x26
   337bc:	mov	w26, w25
   337c0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   337c4:	ldr	x9, [sp, #80]
   337c8:	mov	x20, xzr
   337cc:	mov	x21, xzr
   337d0:	ldr	x8, [x9, #48]
   337d4:	ldr	w22, [x8, x0, lsl #2]
   337d8:	ldr	x8, [x9, #64]
   337dc:	stur	x8, [x29, #-120]
   337e0:	ldr	x8, [sp, #64]
   337e4:	and	x8, x8, #0xffffffff
   337e8:	stur	x8, [x29, #-104]
   337ec:	ldr	x8, [sp, #136]
   337f0:	add	x8, x19, x8
   337f4:	stur	x8, [x29, #-112]
   337f8:	b	3383c <ZSTD_endStream@@Base+0x258e8>
   337fc:	ldrb	w8, [x10, x9]
   33800:	ldur	x10, [x29, #-160]
   33804:	ldr	w11, [sp, #128]
   33808:	ldur	x12, [x29, #-120]
   3380c:	ldrb	w10, [x10, x9]
   33810:	and	w11, w22, w11
   33814:	lsl	w11, w11, #1
   33818:	add	x11, x12, w11, uxtw #2
   3381c:	cmp	w8, w10
   33820:	cset	w8, cc  // cc = lo, ul, last
   33824:	ldr	w22, [x11, w8, uxtw #2]
   33828:	csel	x20, x20, x9, cc  // cc = lo, ul, last
   3382c:	csel	x21, x9, x21, cc  // cc = lo, ul, last
   33830:	mov	w8, #0x1                   	// #1
   33834:	mov	w28, w25
   33838:	tbz	w8, #0, 33fd4 <ZSTD_endStream@@Base+0x26080>
   3383c:	subs	w27, w27, #0x1
   33840:	b.cc	33fd4 <ZSTD_endStream@@Base+0x26080>  // b.lo, b.ul, b.last
   33844:	ldr	w8, [sp, #184]
   33848:	cmp	w22, w8
   3384c:	b.ls	33fd4 <ZSTD_endStream@@Base+0x26080>  // b.plast
   33850:	ldr	x8, [sp, #176]
   33854:	mov	w23, w22
   33858:	ldur	x2, [x29, #-184]
   3385c:	ldp	x3, x4, [sp, #240]
   33860:	add	x19, x8, x23
   33864:	ldur	x8, [x29, #-160]
   33868:	cmp	x21, x20
   3386c:	mov	w25, w28
   33870:	csel	x28, x21, x20, cc  // cc = lo, ul, last
   33874:	add	x0, x8, x28
   33878:	add	x1, x19, x28
   3387c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   33880:	ldp	x8, x11, [x29, #-112]
   33884:	add	x9, x0, x28
   33888:	add	x10, x9, x23
   3388c:	add	x8, x8, x23
   33890:	cmp	x10, x11
   33894:	csel	x10, x19, x8, cc  // cc = lo, ul, last
   33898:	cmp	x9, x24
   3389c:	b.ls	338fc <ZSTD_endStream@@Base+0x259a8>  // b.plast
   338a0:	ldr	x11, [sp, #136]
   338a4:	ldur	x12, [x29, #-176]
   338a8:	ldur	w15, [x29, #-88]
   338ac:	mov	w28, w25
   338b0:	add	w11, w22, w11
   338b4:	sub	w13, w26, w11
   338b8:	add	w14, w11, w9
   338bc:	cmp	x9, x13
   338c0:	mov	w8, wzr
   338c4:	add	x12, x12, w25, uxtw #3
   338c8:	sub	w11, w15, w11
   338cc:	csel	w26, w14, w26, hi  // hi = pmore
   338d0:	cmp	x9, #0x1, lsl #12
   338d4:	add	w28, w25, #0x1
   338d8:	stp	w11, w9, [x12]
   338dc:	b.hi	33914 <ZSTD_endStream@@Base+0x259c0>  // b.pmore
   338e0:	ldur	x11, [x29, #-160]
   338e4:	ldur	x12, [x29, #-184]
   338e8:	mov	w25, w28
   338ec:	mov	x24, x9
   338f0:	add	x11, x11, x9
   338f4:	cmp	x11, x12
   338f8:	b.eq	33924 <ZSTD_endStream@@Base+0x259d0>  // b.none
   338fc:	ldr	w8, [sp, #160]
   33900:	mov	w23, #0x1c                  	// #28
   33904:	cmp	w22, w8
   33908:	b.hi	337fc <ZSTD_endStream@@Base+0x258a8>  // b.pmore
   3390c:	mov	w8, wzr
   33910:	b	33834 <ZSTD_endStream@@Base+0x258e0>
   33914:	mov	x24, x9
   33918:	mov	w23, #0x1c                  	// #28
   3391c:	tbnz	w8, #0, 3383c <ZSTD_endStream@@Base+0x258e8>
   33920:	b	33fd4 <ZSTD_endStream@@Base+0x26080>
   33924:	mov	x24, x9
   33928:	mov	w23, #0x1c                  	// #28
   3392c:	b	33834 <ZSTD_endStream@@Base+0x258e0>
   33930:	mov	w8, wzr
   33934:	cbz	w8, 33c5c <ZSTD_endStream@@Base+0x25d08>
   33938:	ldur	x21, [x29, #-168]
   3393c:	ldur	x22, [x29, #-72]
   33940:	b	366bc <ZSTD_endStream@@Base+0x28768>
   33944:	mov	w8, wzr
   33948:	ldur	x22, [x29, #-72]
   3394c:	cbnz	w8, 33fe8 <ZSTD_endStream@@Base+0x26094>
   33950:	ldp	x10, x8, [sp, #88]
   33954:	ldur	w9, [x29, #-240]
   33958:	ldr	w26, [sp, #104]
   3395c:	mov	x20, xzr
   33960:	mov	x21, xzr
   33964:	str	w9, [x8, x10, lsl #2]
   33968:	ldp	x2, x19, [x29, #-184]
   3396c:	add	w8, w9, #0x2
   33970:	stur	w8, [x29, #-88]
   33974:	b	33994 <ZSTD_endStream@@Base+0x25a40>
   33978:	add	x9, x9, #0x4
   3397c:	str	x9, [sp, #208]
   33980:	ldr	w28, [x9]
   33984:	mov	w9, #0x1                   	// #1
   33988:	ldur	x2, [x29, #-184]
   3398c:	mov	x21, x8
   33990:	tbz	w9, #0, 33cc4 <ZSTD_endStream@@Base+0x25d70>
   33994:	subs	w27, w27, #0x1
   33998:	b.cc	33cc4 <ZSTD_endStream@@Base+0x25d70>  // b.lo, b.ul, b.last
   3399c:	ldr	w8, [sp, #240]
   339a0:	cmp	w28, w8
   339a4:	b.cc	33cc4 <ZSTD_endStream@@Base+0x25d70>  // b.lo, b.ul, b.last
   339a8:	ldur	x8, [x29, #-248]
   339ac:	cmp	x21, x20
   339b0:	csel	x23, x21, x20, cc  // cc = lo, ul, last
   339b4:	add	x22, x8, w28, uxtw
   339b8:	ldur	x8, [x29, #-160]
   339bc:	add	x1, x22, x23
   339c0:	add	x0, x8, x23
   339c4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   339c8:	add	x8, x0, x23
   339cc:	cmp	x8, x24
   339d0:	b.ls	33a30 <ZSTD_endStream@@Base+0x25adc>  // b.plast
   339d4:	ldur	w12, [x29, #-88]
   339d8:	sub	w10, w26, w28
   339dc:	add	w11, w28, w8
   339e0:	cmp	x8, x10
   339e4:	mov	w9, wzr
   339e8:	sub	w12, w12, w28
   339ec:	add	x13, x19, w25, uxtw #3
   339f0:	csel	w26, w11, w26, hi  // hi = pmore
   339f4:	cmp	x8, #0x1, lsl #12
   339f8:	add	w25, w25, #0x1
   339fc:	stp	w12, w8, [x13]
   33a00:	b.hi	33abc <ZSTD_endStream@@Base+0x25b68>  // b.pmore
   33a04:	ldur	x10, [x29, #-160]
   33a08:	ldur	x11, [x29, #-184]
   33a0c:	mov	x24, x8
   33a10:	mov	w23, #0x1c                  	// #28
   33a14:	add	x10, x10, x8
   33a18:	cmp	x10, x11
   33a1c:	b.ne	33a34 <ZSTD_endStream@@Base+0x25ae0>  // b.any
   33a20:	mov	x24, x8
   33a24:	mov	w27, w9
   33a28:	mov	x8, x21
   33a2c:	b	33988 <ZSTD_endStream@@Base+0x25a34>
   33a30:	mov	w23, #0x1c                  	// #28
   33a34:	ldur	x10, [x29, #-160]
   33a38:	ldrb	w9, [x22, x8]
   33a3c:	ldr	w11, [sp, #192]
   33a40:	ldrb	w10, [x10, x8]
   33a44:	and	w11, w28, w11
   33a48:	lsl	w11, w11, #1
   33a4c:	cmp	w9, w10
   33a50:	ldr	x9, [sp, #216]
   33a54:	add	x9, x9, w11, uxtw #2
   33a58:	b.cs	33a80 <ZSTD_endStream@@Base+0x25b2c>  // b.hs, b.nlast
   33a5c:	ldr	w10, [sp, #184]
   33a60:	cmp	w28, w10
   33a64:	ldr	x10, [sp, #208]
   33a68:	str	w28, [x10]
   33a6c:	b.hi	33978 <ZSTD_endStream@@Base+0x25a24>  // b.pmore
   33a70:	sub	x10, x29, #0x40
   33a74:	mov	w9, wzr
   33a78:	str	x10, [sp, #208]
   33a7c:	b	33988 <ZSTD_endStream@@Base+0x25a34>
   33a80:	ldr	w10, [sp, #184]
   33a84:	cmp	w28, w10
   33a88:	ldr	x10, [sp, #200]
   33a8c:	str	w28, [x10]
   33a90:	b.ls	33aa4 <ZSTD_endStream@@Base+0x25b50>  // b.plast
   33a94:	str	x9, [sp, #200]
   33a98:	mov	x20, x8
   33a9c:	mov	x8, x21
   33aa0:	b	33980 <ZSTD_endStream@@Base+0x25a2c>
   33aa4:	sub	x10, x29, #0x40
   33aa8:	mov	w9, wzr
   33aac:	str	x10, [sp, #200]
   33ab0:	mov	x20, x8
   33ab4:	mov	x8, x21
   33ab8:	b	33988 <ZSTD_endStream@@Base+0x25a34>
   33abc:	mov	x24, x8
   33ac0:	mov	w27, w9
   33ac4:	mov	x8, x21
   33ac8:	mov	w23, #0x1c                  	// #28
   33acc:	b	33988 <ZSTD_endStream@@Base+0x25a34>
   33ad0:	mov	w8, wzr
   33ad4:	ldur	x22, [x29, #-72]
   33ad8:	cbnz	w8, 33fe8 <ZSTD_endStream@@Base+0x26094>
   33adc:	ldp	x10, x8, [sp, #88]
   33ae0:	ldur	w9, [x29, #-240]
   33ae4:	ldr	w26, [sp, #104]
   33ae8:	mov	x20, xzr
   33aec:	mov	x21, xzr
   33af0:	str	w9, [x8, x10, lsl #2]
   33af4:	ldp	x2, x19, [x29, #-184]
   33af8:	add	w27, w9, #0x2
   33afc:	b	33b1c <ZSTD_endStream@@Base+0x25bc8>
   33b00:	add	x9, x9, #0x4
   33b04:	str	x9, [sp, #216]
   33b08:	ldr	w28, [x9]
   33b0c:	mov	w9, #0x1                   	// #1
   33b10:	ldur	x2, [x29, #-184]
   33b14:	mov	x21, x8
   33b18:	tbz	w9, #0, 33e38 <ZSTD_endStream@@Base+0x25ee4>
   33b1c:	subs	w26, w26, #0x1
   33b20:	b.cc	33e38 <ZSTD_endStream@@Base+0x25ee4>  // b.lo, b.ul, b.last
   33b24:	ldr	w8, [sp, #240]
   33b28:	cmp	w28, w8
   33b2c:	b.cc	33e38 <ZSTD_endStream@@Base+0x25ee4>  // b.lo, b.ul, b.last
   33b30:	ldur	x8, [x29, #-248]
   33b34:	cmp	x21, x20
   33b38:	csel	x23, x21, x20, cc  // cc = lo, ul, last
   33b3c:	add	x22, x8, w28, uxtw
   33b40:	ldur	x8, [x29, #-160]
   33b44:	add	x1, x22, x23
   33b48:	add	x0, x8, x23
   33b4c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   33b50:	add	x8, x0, x23
   33b54:	cmp	x8, x24
   33b58:	b.ls	33bbc <ZSTD_endStream@@Base+0x25c68>  // b.plast
   33b5c:	ldur	w14, [x29, #-112]
   33b60:	add	w11, w28, w8
   33b64:	mov	w9, wzr
   33b68:	sub	w12, w27, w28
   33b6c:	sub	w10, w14, w28
   33b70:	cmp	x8, x10
   33b74:	add	x13, x19, w25, uxtw #3
   33b78:	csel	w14, w11, w14, hi  // hi = pmore
   33b7c:	cmp	x8, #0x1, lsl #12
   33b80:	add	w25, w25, #0x1
   33b84:	stp	w12, w8, [x13]
   33b88:	stur	w14, [x29, #-112]
   33b8c:	b.hi	33c48 <ZSTD_endStream@@Base+0x25cf4>  // b.pmore
   33b90:	ldur	x10, [x29, #-160]
   33b94:	ldur	x11, [x29, #-184]
   33b98:	mov	x24, x8
   33b9c:	mov	w23, #0x1c                  	// #28
   33ba0:	add	x10, x10, x8
   33ba4:	cmp	x10, x11
   33ba8:	b.ne	33bc0 <ZSTD_endStream@@Base+0x25c6c>  // b.any
   33bac:	mov	x24, x8
   33bb0:	mov	w26, w9
   33bb4:	mov	x8, x21
   33bb8:	b	33b10 <ZSTD_endStream@@Base+0x25bbc>
   33bbc:	mov	w23, #0x1c                  	// #28
   33bc0:	ldur	x10, [x29, #-160]
   33bc4:	ldrb	w9, [x22, x8]
   33bc8:	ldr	w11, [sp, #192]
   33bcc:	ldrb	w10, [x10, x8]
   33bd0:	and	w11, w28, w11
   33bd4:	lsl	w11, w11, #1
   33bd8:	cmp	w9, w10
   33bdc:	ldr	x9, [sp, #200]
   33be0:	add	x9, x9, w11, uxtw #2
   33be4:	b.cs	33c0c <ZSTD_endStream@@Base+0x25cb8>  // b.hs, b.nlast
   33be8:	ldr	w10, [sp, #184]
   33bec:	cmp	w28, w10
   33bf0:	ldr	x10, [sp, #216]
   33bf4:	str	w28, [x10]
   33bf8:	b.hi	33b00 <ZSTD_endStream@@Base+0x25bac>  // b.pmore
   33bfc:	sub	x10, x29, #0x40
   33c00:	mov	w9, wzr
   33c04:	str	x10, [sp, #216]
   33c08:	b	33b10 <ZSTD_endStream@@Base+0x25bbc>
   33c0c:	ldr	w10, [sp, #184]
   33c10:	cmp	w28, w10
   33c14:	ldr	x10, [sp, #208]
   33c18:	str	w28, [x10]
   33c1c:	b.ls	33c30 <ZSTD_endStream@@Base+0x25cdc>  // b.plast
   33c20:	str	x9, [sp, #208]
   33c24:	mov	x20, x8
   33c28:	mov	x8, x21
   33c2c:	b	33b08 <ZSTD_endStream@@Base+0x25bb4>
   33c30:	sub	x10, x29, #0x40
   33c34:	mov	w9, wzr
   33c38:	str	x10, [sp, #208]
   33c3c:	mov	x20, x8
   33c40:	mov	x8, x21
   33c44:	b	33b10 <ZSTD_endStream@@Base+0x25bbc>
   33c48:	mov	x24, x8
   33c4c:	mov	w26, w9
   33c50:	mov	x8, x21
   33c54:	mov	w23, #0x1c                  	// #28
   33c58:	b	33b10 <ZSTD_endStream@@Base+0x25bbc>
   33c5c:	cmp	x27, #0x2
   33c60:	b.hi	3639c <ZSTD_endStream@@Base+0x28448>  // b.pmore
   33c64:	ldur	x22, [x29, #-72]
   33c68:	ldur	x2, [x29, #-160]
   33c6c:	sub	x1, x29, #0xc
   33c70:	mov	x0, x22
   33c74:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   33c78:	ldr	w8, [sp, #248]
   33c7c:	ldur	x21, [x29, #-168]
   33c80:	ldur	x26, [x29, #-96]
   33c84:	cmp	w0, w8
   33c88:	b.cc	3638c <ZSTD_endStream@@Base+0x28438>  // b.lo, b.ul, b.last
   33c8c:	ldur	w8, [x29, #-120]
   33c90:	sub	w20, w8, w0
   33c94:	lsr	w8, w20, #18
   33c98:	cbnz	w8, 36328 <ZSTD_endStream@@Base+0x283d4>
   33c9c:	ldr	x8, [sp, #128]
   33ca0:	ldur	x2, [x29, #-184]
   33ca4:	add	x1, x8, w0, uxtw
   33ca8:	ldur	x0, [x29, #-160]
   33cac:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   33cb0:	cmp	x0, #0x3
   33cb4:	b.cs	36330 <ZSTD_endStream@@Base+0x283dc>  // b.hs, b.nlast
   33cb8:	mov	w8, wzr
   33cbc:	mov	x0, x27
   33cc0:	b	36380 <ZSTD_endStream@@Base+0x2842c>
   33cc4:	ldr	x8, [sp, #200]
   33cc8:	str	wzr, [x8]
   33ccc:	ldr	x8, [sp, #208]
   33cd0:	str	wzr, [x8]
   33cd4:	cbz	w27, 33fb4 <ZSTD_endStream@@Base+0x26060>
   33cd8:	ldur	x0, [x29, #-160]
   33cdc:	ldr	w1, [sp, #56]
   33ce0:	mov	w2, #0x5                   	// #5
   33ce4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   33ce8:	ldr	x9, [sp, #80]
   33cec:	mov	x20, xzr
   33cf0:	mov	x21, xzr
   33cf4:	ldr	x8, [x9, #48]
   33cf8:	ldr	w22, [x8, x0, lsl #2]
   33cfc:	ldr	x8, [x9, #64]
   33d00:	ldur	x9, [x29, #-248]
   33d04:	stur	x8, [x29, #-120]
   33d08:	ldr	x8, [sp, #64]
   33d0c:	and	x8, x8, #0xffffffff
   33d10:	stur	x8, [x29, #-104]
   33d14:	ldr	x8, [sp, #120]
   33d18:	add	x8, x9, x8
   33d1c:	stur	x8, [x29, #-112]
   33d20:	b	33d60 <ZSTD_endStream@@Base+0x25e0c>
   33d24:	ldrb	w8, [x10, x9]
   33d28:	ldur	x10, [x29, #-160]
   33d2c:	ldr	w11, [sp, #112]
   33d30:	ldur	x12, [x29, #-120]
   33d34:	ldrb	w10, [x10, x9]
   33d38:	and	w11, w22, w11
   33d3c:	lsl	w11, w11, #1
   33d40:	add	x11, x12, w11, uxtw #2
   33d44:	cmp	w8, w10
   33d48:	cset	w8, cc  // cc = lo, ul, last
   33d4c:	ldr	w22, [x11, w8, uxtw #2]
   33d50:	csel	x20, x20, x9, cc  // cc = lo, ul, last
   33d54:	csel	x21, x9, x21, cc  // cc = lo, ul, last
   33d58:	mov	w8, #0x1                   	// #1
   33d5c:	tbz	w8, #0, 33fb4 <ZSTD_endStream@@Base+0x26060>
   33d60:	subs	w27, w27, #0x1
   33d64:	b.cc	33fb4 <ZSTD_endStream@@Base+0x26060>  // b.lo, b.ul, b.last
   33d68:	ldr	w8, [sp, #160]
   33d6c:	cmp	w22, w8
   33d70:	b.ls	33fb4 <ZSTD_endStream@@Base+0x26060>  // b.plast
   33d74:	ldr	x8, [sp, #136]
   33d78:	mov	w23, w22
   33d7c:	ldur	x2, [x29, #-184]
   33d80:	ldp	x3, x4, [sp, #224]
   33d84:	add	x19, x8, x23
   33d88:	ldur	x8, [x29, #-160]
   33d8c:	cmp	x21, x20
   33d90:	csel	x28, x21, x20, cc  // cc = lo, ul, last
   33d94:	add	x1, x19, x28
   33d98:	add	x0, x8, x28
   33d9c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   33da0:	ldp	x8, x11, [x29, #-112]
   33da4:	add	x9, x0, x28
   33da8:	add	x10, x9, x23
   33dac:	add	x8, x8, x23
   33db0:	cmp	x10, x11
   33db4:	csel	x10, x19, x8, cc  // cc = lo, ul, last
   33db8:	cmp	x9, x24
   33dbc:	b.ls	33e14 <ZSTD_endStream@@Base+0x25ec0>  // b.plast
   33dc0:	ldr	x11, [sp, #120]
   33dc4:	ldur	x12, [x29, #-176]
   33dc8:	ldur	w15, [x29, #-88]
   33dcc:	mov	w8, wzr
   33dd0:	add	w11, w22, w11
   33dd4:	sub	w13, w26, w11
   33dd8:	add	w14, w11, w9
   33ddc:	cmp	x9, x13
   33de0:	add	x12, x12, w25, uxtw #3
   33de4:	sub	w11, w15, w11
   33de8:	csel	w26, w14, w26, hi  // hi = pmore
   33dec:	cmp	x9, #0x1, lsl #12
   33df0:	add	w25, w25, #0x1
   33df4:	stp	w11, w9, [x12]
   33df8:	b.hi	33e2c <ZSTD_endStream@@Base+0x25ed8>  // b.pmore
   33dfc:	ldur	x11, [x29, #-160]
   33e00:	ldur	x12, [x29, #-184]
   33e04:	mov	x24, x9
   33e08:	add	x11, x11, x9
   33e0c:	cmp	x11, x12
   33e10:	b.eq	33e2c <ZSTD_endStream@@Base+0x25ed8>  // b.none
   33e14:	ldr	w8, [sp, #128]
   33e18:	mov	w23, #0x1c                  	// #28
   33e1c:	cmp	w22, w8
   33e20:	b.hi	33d24 <ZSTD_endStream@@Base+0x25dd0>  // b.pmore
   33e24:	mov	w8, wzr
   33e28:	b	33d5c <ZSTD_endStream@@Base+0x25e08>
   33e2c:	mov	x24, x9
   33e30:	mov	w23, #0x1c                  	// #28
   33e34:	b	33d5c <ZSTD_endStream@@Base+0x25e08>
   33e38:	ldr	x8, [sp, #208]
   33e3c:	str	wzr, [x8]
   33e40:	ldr	x8, [sp, #216]
   33e44:	str	wzr, [x8]
   33e48:	cbz	w26, 33fbc <ZSTD_endStream@@Base+0x26068>
   33e4c:	ldur	x0, [x29, #-160]
   33e50:	ldr	w1, [sp, #56]
   33e54:	mov	w2, #0x4                   	// #4
   33e58:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   33e5c:	ldr	x9, [sp, #80]
   33e60:	mov	x20, xzr
   33e64:	mov	x21, xzr
   33e68:	ldr	x8, [x9, #48]
   33e6c:	ldr	w22, [x8, x0, lsl #2]
   33e70:	ldr	x8, [x9, #64]
   33e74:	ldur	x9, [x29, #-248]
   33e78:	stur	x8, [x29, #-120]
   33e7c:	ldr	x8, [sp, #64]
   33e80:	and	x8, x8, #0xffffffff
   33e84:	stur	x8, [x29, #-88]
   33e88:	ldr	x8, [sp, #120]
   33e8c:	add	x8, x9, x8
   33e90:	stur	x8, [x29, #-104]
   33e94:	b	33ed4 <ZSTD_endStream@@Base+0x25f80>
   33e98:	ldrb	w8, [x10, x9]
   33e9c:	ldur	x10, [x29, #-160]
   33ea0:	ldr	w11, [sp, #112]
   33ea4:	ldur	x12, [x29, #-120]
   33ea8:	ldrb	w10, [x10, x9]
   33eac:	and	w11, w22, w11
   33eb0:	lsl	w11, w11, #1
   33eb4:	add	x11, x12, w11, uxtw #2
   33eb8:	cmp	w8, w10
   33ebc:	cset	w8, cc  // cc = lo, ul, last
   33ec0:	ldr	w22, [x11, w8, uxtw #2]
   33ec4:	csel	x20, x20, x9, cc  // cc = lo, ul, last
   33ec8:	csel	x21, x9, x21, cc  // cc = lo, ul, last
   33ecc:	mov	w8, #0x1                   	// #1
   33ed0:	tbz	w8, #0, 33fbc <ZSTD_endStream@@Base+0x26068>
   33ed4:	subs	w26, w26, #0x1
   33ed8:	b.cc	33fbc <ZSTD_endStream@@Base+0x26068>  // b.lo, b.ul, b.last
   33edc:	ldr	w8, [sp, #160]
   33ee0:	cmp	w22, w8
   33ee4:	b.ls	33fbc <ZSTD_endStream@@Base+0x26068>  // b.plast
   33ee8:	ldr	x8, [sp, #136]
   33eec:	mov	w23, w22
   33ef0:	ldur	x2, [x29, #-184]
   33ef4:	ldp	x3, x4, [sp, #224]
   33ef8:	add	x19, x8, x23
   33efc:	ldur	x8, [x29, #-160]
   33f00:	cmp	x21, x20
   33f04:	csel	x28, x21, x20, cc  // cc = lo, ul, last
   33f08:	add	x1, x19, x28
   33f0c:	add	x0, x8, x28
   33f10:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   33f14:	ldur	x8, [x29, #-104]
   33f18:	ldur	x11, [x29, #-88]
   33f1c:	add	x9, x0, x28
   33f20:	add	x10, x9, x23
   33f24:	add	x8, x8, x23
   33f28:	cmp	x10, x11
   33f2c:	csel	x10, x19, x8, cc  // cc = lo, ul, last
   33f30:	cmp	x9, x24
   33f34:	b.ls	33f90 <ZSTD_endStream@@Base+0x2603c>  // b.plast
   33f38:	ldr	x11, [sp, #120]
   33f3c:	ldur	w15, [x29, #-112]
   33f40:	ldur	x12, [x29, #-176]
   33f44:	mov	w8, wzr
   33f48:	add	w11, w22, w11
   33f4c:	sub	w13, w15, w11
   33f50:	add	w14, w11, w9
   33f54:	cmp	x9, x13
   33f58:	add	x12, x12, w25, uxtw #3
   33f5c:	sub	w11, w27, w11
   33f60:	csel	w15, w14, w15, hi  // hi = pmore
   33f64:	cmp	x9, #0x1, lsl #12
   33f68:	add	w25, w25, #0x1
   33f6c:	stp	w11, w9, [x12]
   33f70:	stur	w15, [x29, #-112]
   33f74:	b.hi	33fa8 <ZSTD_endStream@@Base+0x26054>  // b.pmore
   33f78:	ldur	x11, [x29, #-160]
   33f7c:	ldur	x12, [x29, #-184]
   33f80:	mov	x24, x9
   33f84:	add	x11, x11, x9
   33f88:	cmp	x11, x12
   33f8c:	b.eq	33fa8 <ZSTD_endStream@@Base+0x26054>  // b.none
   33f90:	ldr	w8, [sp, #128]
   33f94:	mov	w23, #0x1c                  	// #28
   33f98:	cmp	w22, w8
   33f9c:	b.hi	33e98 <ZSTD_endStream@@Base+0x25f44>  // b.pmore
   33fa0:	mov	w8, wzr
   33fa4:	b	33ed0 <ZSTD_endStream@@Base+0x25f7c>
   33fa8:	mov	x24, x9
   33fac:	mov	w23, #0x1c                  	// #28
   33fb0:	b	33ed0 <ZSTD_endStream@@Base+0x25f7c>
   33fb4:	sub	w8, w26, #0x8
   33fb8:	b	33fc4 <ZSTD_endStream@@Base+0x26070>
   33fbc:	ldur	w8, [x29, #-112]
   33fc0:	sub	w8, w8, #0x8
   33fc4:	ldur	x22, [x29, #-72]
   33fc8:	mov	w19, w25
   33fcc:	b	33fe0 <ZSTD_endStream@@Base+0x2608c>
   33fd0:	mov	w26, w25
   33fd4:	ldur	x22, [x29, #-72]
   33fd8:	sub	w8, w26, #0x8
   33fdc:	mov	w19, w28
   33fe0:	str	w8, [x22, #36]
   33fe4:	ldur	x20, [x29, #-208]
   33fe8:	ldr	x27, [sp, #272]
   33fec:	ldur	x21, [x29, #-168]
   33ff0:	ldur	x26, [x29, #-96]
   33ff4:	ldur	x24, [x29, #-160]
   33ff8:	cbnz	w19, 32740 <ZSTD_endStream@@Base+0x247ec>
   33ffc:	ldur	w19, [x29, #-124]
   34000:	mov	w12, wzr
   34004:	add	x24, x24, #0x1
   34008:	mov	w8, #0x2                   	// #2
   3400c:	cmp	w8, #0x7
   34010:	b.eq	36020 <ZSTD_endStream@@Base+0x280cc>  // b.none
   34014:	cbnz	w8, 326f0 <ZSTD_endStream@@Base+0x2479c>
   34018:	cbz	w12, 36030 <ZSTD_endStream@@Base+0x280dc>
   3401c:	mov	w19, #0x1                   	// #1
   34020:	stur	x24, [x29, #-160]
   34024:	mov	w9, w19
   34028:	sub	w19, w19, #0x1
   3402c:	umaddl	x8, w19, w23, x26
   34030:	ldr	w8, [x8, #8]
   34034:	stur	w9, [x29, #-124]
   34038:	mov	w9, w9
   3403c:	stur	x9, [x29, #-88]
   34040:	add	x9, x24, x9
   34044:	mov	w25, w12
   34048:	cbz	w8, 34054 <ZSTD_endStream@@Base+0x26100>
   3404c:	mov	w20, #0x1                   	// #1
   34050:	b	34060 <ZSTD_endStream@@Base+0x2610c>
   34054:	madd	x8, x19, x23, x26
   34058:	ldr	w8, [x8, #12]
   3405c:	add	w20, w8, #0x1
   34060:	mul	x8, x19, x23
   34064:	ldur	x23, [x29, #-200]
   34068:	ldr	w21, [x26, x8]
   3406c:	sub	x0, x9, #0x1
   34070:	mov	w1, #0x1                   	// #1
   34074:	mov	x2, x23
   34078:	mov	w3, wzr
   3407c:	stur	x9, [x29, #-80]
   34080:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   34084:	add	w21, w0, w21
   34088:	mov	w0, w20
   3408c:	mov	x1, x23
   34090:	mov	w2, wzr
   34094:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   34098:	add	w21, w21, w0
   3409c:	sub	w0, w20, #0x1
   340a0:	mov	x1, x23
   340a4:	mov	w2, wzr
   340a8:	mov	w23, #0x1c                  	// #28
   340ac:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   340b0:	ldur	x13, [x29, #-88]
   340b4:	sub	w9, w21, w0
   340b8:	madd	x8, x13, x23, x26
   340bc:	ldr	w10, [x8]
   340c0:	cmp	w9, w10
   340c4:	b.gt	340ec <ZSTD_endStream@@Base+0x26198>
   340c8:	madd	x10, x13, x23, x26
   340cc:	madd	x11, x19, x23, x26
   340d0:	stur	xzr, [x10, #4]
   340d4:	str	w20, [x10, #12]
   340d8:	str	w9, [x8]
   340dc:	ldr	w9, [x11, #24]
   340e0:	ldr	x11, [x11, #16]
   340e4:	str	w9, [x10, #24]
   340e8:	str	x11, [x10, #16]
   340ec:	ldur	x9, [x29, #-232]
   340f0:	ldur	x10, [x29, #-80]
   340f4:	mov	w12, w25
   340f8:	cmp	x10, x9
   340fc:	b.ls	34108 <ZSTD_endStream@@Base+0x261b4>  // b.plast
   34100:	ldur	w19, [x29, #-124]
   34104:	b	3598c <ZSTD_endStream@@Base+0x27a38>
   34108:	ldur	w19, [x29, #-124]
   3410c:	cmp	w19, w12
   34110:	b.ne	34124 <ZSTD_endStream@@Base+0x261d0>  // b.any
   34114:	mov	w8, #0x11                  	// #17
   34118:	cmp	w8, #0x13
   3411c:	b.ls	35998 <ZSTD_endStream@@Base+0x27a44>  // b.plast
   34120:	b	326f0 <ZSTD_endStream@@Base+0x2479c>
   34124:	add	w9, w19, #0x1
   34128:	umull	x9, w9, w23
   3412c:	ldr	w10, [x8]
   34130:	ldr	w8, [x26, x9]
   34134:	add	w9, w10, #0x80
   34138:	cmp	w8, w9
   3413c:	b.le	3598c <ZSTD_endStream@@Base+0x27a38>
   34140:	madd	x9, x13, x23, x26
   34144:	ldr	w24, [x9, #8]!
   34148:	stur	w12, [x29, #-256]
   3414c:	str	w10, [sp, #176]
   34150:	cmp	w24, #0x0
   34154:	cset	w8, ne  // ne = any
   34158:	stur	w8, [x29, #-240]
   3415c:	str	x9, [sp, #192]
   34160:	cbz	w24, 3416c <ZSTD_endStream@@Base+0x26218>
   34164:	stur	wzr, [x29, #-120]
   34168:	b	34178 <ZSTD_endStream@@Base+0x26224>
   3416c:	madd	x8, x13, x23, x26
   34170:	ldr	w8, [x8, #12]
   34174:	stur	w8, [x29, #-120]
   34178:	ldur	x1, [x29, #-200]
   3417c:	mov	w0, wzr
   34180:	mov	w2, wzr
   34184:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   34188:	ldr	x19, [x22, #8]
   3418c:	ldr	w21, [x22, #36]
   34190:	ldp	x13, x9, [x29, #-88]
   34194:	mov	w20, wzr
   34198:	str	w0, [sp, #160]
   3419c:	add	x8, x19, x21
   341a0:	cmp	x8, x9
   341a4:	b.hi	3592c <ZSTD_endStream@@Base+0x279d8>  // b.pmore
   341a8:	ldr	w20, [x22, #200]
   341ac:	ldur	x25, [x29, #-184]
   341b0:	mov	x8, x26
   341b4:	mov	x26, x22
   341b8:	sub	w22, w9, w19
   341bc:	mov	w9, #0x1c                  	// #28
   341c0:	cmp	w21, w22
   341c4:	madd	x23, x13, x9, x8
   341c8:	b.cs	341f0 <ZSTD_endStream@@Base+0x2629c>  // b.hs, b.nlast
   341cc:	add	x1, x19, w21, uxtw
   341d0:	mov	x0, x26
   341d4:	mov	x2, x25
   341d8:	mov	w3, w20
   341dc:	mov	w4, wzr
   341e0:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   341e4:	add	w21, w0, w21
   341e8:	cmp	w21, w22
   341ec:	b.cc	341cc <ZSTD_endStream@@Base+0x26278>  // b.lo, b.ul, b.last
   341f0:	add	x8, x23, #0x10
   341f4:	stur	x8, [x29, #-104]
   341f8:	sub	w8, w20, #0x6
   341fc:	cmp	w8, #0x2
   34200:	mov	x21, x26
   34204:	str	w22, [x26, #36]
   34208:	b.cc	34534 <ZSTD_endStream@@Base+0x265e0>  // b.lo, b.ul, b.last
   3420c:	ldur	x8, [x29, #-88]
   34210:	cmp	w20, #0x5
   34214:	lsl	x28, x8, #3
   34218:	b.eq	34870 <ZSTD_endStream@@Base+0x2691c>  // b.none
   3421c:	ldur	x0, [x29, #-80]
   34220:	cmp	w20, #0x3
   34224:	mov	w9, #0xfff                 	// #4095
   34228:	b.ne	34ba0 <ZSTD_endStream@@Base+0x26c4c>  // b.any
   3422c:	ldr	w8, [x21, #204]
   34230:	ldr	x23, [x21, #8]
   34234:	ldr	w1, [x21, #192]
   34238:	ldr	x20, [x21, #48]
   3423c:	cmp	w8, #0xfff
   34240:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   34244:	mov	w2, #0x3                   	// #3
   34248:	stur	w8, [x29, #-152]
   3424c:	sub	w22, w0, w23
   34250:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   34254:	ldp	w2, w8, [x21, #184]
   34258:	stp	x0, x20, [sp, #24]
   3425c:	ldr	w9, [x20, x0, lsl #2]
   34260:	ldr	x25, [x21, #64]
   34264:	sub	w8, w8, #0x1
   34268:	ldr	w19, [x21, #24]
   3426c:	str	w9, [sp, #44]
   34270:	mov	w9, #0xffffffff            	// #-1
   34274:	lsl	w20, w9, w8
   34278:	mvn	w8, w20
   3427c:	str	w8, [sp, #104]
   34280:	subs	w8, w22, w8
   34284:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   34288:	mov	x0, x21
   3428c:	mov	w1, w22
   34290:	str	w8, [sp, #96]
   34294:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   34298:	ldp	x13, x12, [x29, #-88]
   3429c:	mov	x9, x28
   342a0:	sub	w8, w22, w19
   342a4:	stur	w8, [x29, #-112]
   342a8:	sub	x8, x9, x13
   342ac:	add	x9, x23, x19
   342b0:	ldr	x17, [x21, #176]
   342b4:	stp	x9, x19, [sp, #224]
   342b8:	add	w10, w22, #0x9
   342bc:	bic	w9, w22, w20
   342c0:	str	w10, [sp, #136]
   342c4:	ldr	w10, [x21, #196]
   342c8:	cmp	w0, #0x0
   342cc:	add	x11, x12, #0x3
   342d0:	lsl	w9, w9, #1
   342d4:	str	x11, [sp, #240]
   342d8:	csinc	w11, w0, wzr, ne  // ne = any
   342dc:	add	x9, x25, w9, uxtw #2
   342e0:	str	w11, [sp, #200]
   342e4:	str	x9, [sp, #128]
   342e8:	add	x9, x9, #0x4
   342ec:	mov	w11, #0x1                   	// #1
   342f0:	str	x23, [sp, #208]
   342f4:	stp	x25, x9, [sp, #112]
   342f8:	lsl	w10, w11, w10
   342fc:	ldp	x15, x14, [x17]
   34300:	str	w10, [sp, #40]
   34304:	str	x17, [sp, #16]
   34308:	ldp	w9, w10, [x17, #188]
   3430c:	ldr	w16, [x17, #28]
   34310:	sub	x18, x15, x14
   34314:	mov	w11, #0xffffffff            	// #-1
   34318:	sub	w9, w9, #0x1
   3431c:	str	w10, [sp, #4]
   34320:	str	x15, [sp, #216]
   34324:	sub	w10, w22, w16
   34328:	sub	w15, w0, w18
   3432c:	lsl	w9, w11, w9
   34330:	mvn	w17, w9
   34334:	sub	w9, w10, w15
   34338:	sub	w11, w18, w16
   3433c:	stur	w9, [x29, #-248]
   34340:	sub	x9, x14, x15
   34344:	str	x9, [sp, #184]
   34348:	sub	w9, w18, w17
   3434c:	cmp	w11, w17
   34350:	csel	w9, w9, w16, hi  // hi = pmore
   34354:	str	w9, [sp, #64]
   34358:	cmp	w24, #0x0
   3435c:	mov	w9, #0x3                   	// #3
   34360:	cinc	x25, x9, ne  // ne = any
   34364:	ldur	x9, [x29, #-208]
   34368:	ldr	x19, [sp, #152]
   3436c:	cinc	x8, x8, ne  // ne = any
   34370:	mov	x26, xzr
   34374:	mov	w28, wzr
   34378:	str	w22, [sp, #248]
   3437c:	cset	w22, ne  // ne = any
   34380:	add	x8, x9, x8, lsl #2
   34384:	str	x14, [sp, #80]
   34388:	str	x15, [sp, #56]
   3438c:	str	x18, [sp, #8]
   34390:	str	w17, [sp, #48]
   34394:	str	w16, [sp, #88]
   34398:	stur	x8, [x29, #-144]
   3439c:	add	x8, x22, x26
   343a0:	cmp	x8, #0x3
   343a4:	b.eq	343b4 <ZSTD_endStream@@Base+0x26460>  // b.none
   343a8:	ldur	x8, [x29, #-144]
   343ac:	ldr	w23, [x8, x26, lsl #2]
   343b0:	b	343c0 <ZSTD_endStream@@Base+0x2646c>
   343b4:	ldur	x8, [x29, #-104]
   343b8:	ldr	w8, [x8]
   343bc:	sub	w23, w8, #0x1
   343c0:	ldur	w9, [x29, #-112]
   343c4:	sub	w8, w23, #0x1
   343c8:	cmp	w8, w9
   343cc:	b.cs	3441c <ZSTD_endStream@@Base+0x264c8>  // b.hs, b.nlast
   343d0:	mov	w1, #0x3                   	// #3
   343d4:	mov	x0, x12
   343d8:	mov	x24, x12
   343dc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   343e0:	mov	w23, w23
   343e4:	mov	w20, w0
   343e8:	sub	x0, x24, x23
   343ec:	mov	w1, #0x3                   	// #3
   343f0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   343f4:	cmp	w20, w0
   343f8:	b.ne	34494 <ZSTD_endStream@@Base+0x26540>  // b.any
   343fc:	ldr	x0, [sp, #240]
   34400:	ldur	x2, [x29, #-184]
   34404:	neg	x8, x23
   34408:	add	x1, x0, x8
   3440c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   34410:	add	w8, w0, #0x3
   34414:	mov	w23, #0x1c                  	// #28
   34418:	b	344ac <ZSTD_endStream@@Base+0x26558>
   3441c:	ldur	w9, [x29, #-248]
   34420:	cmp	w8, w9
   34424:	mov	w8, wzr
   34428:	b.cs	344a0 <ZSTD_endStream@@Base+0x2654c>  // b.hs, b.nlast
   3442c:	ldr	w9, [sp, #248]
   34430:	ldr	x11, [sp, #232]
   34434:	sub	w9, w9, w23
   34438:	mvn	w10, w9
   3443c:	add	w10, w11, w10
   34440:	cmp	w10, #0x3
   34444:	mov	w23, #0x1c                  	// #28
   34448:	b.cc	344b0 <ZSTD_endStream@@Base+0x2655c>  // b.lo, b.ul, b.last
   3444c:	ldr	x8, [sp, #184]
   34450:	mov	w1, #0x3                   	// #3
   34454:	mov	x0, x12
   34458:	add	x20, x8, w9, uxtw
   3445c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34460:	mov	w24, w0
   34464:	mov	w1, #0x3                   	// #3
   34468:	mov	x0, x20
   3446c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34470:	cmp	w24, w0
   34474:	b.ne	344a8 <ZSTD_endStream@@Base+0x26554>  // b.any
   34478:	ldr	x0, [sp, #240]
   3447c:	ldur	x2, [x29, #-184]
   34480:	ldp	x3, x4, [sp, #216]
   34484:	add	x1, x20, #0x3
   34488:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3448c:	add	w8, w0, #0x3
   34490:	b	344ac <ZSTD_endStream@@Base+0x26558>
   34494:	mov	w8, wzr
   34498:	mov	w23, #0x1c                  	// #28
   3449c:	b	344ac <ZSTD_endStream@@Base+0x26558>
   344a0:	mov	w23, #0x1c                  	// #28
   344a4:	b	344b0 <ZSTD_endStream@@Base+0x2655c>
   344a8:	mov	w8, wzr
   344ac:	ldp	x13, x12, [x29, #-88]
   344b0:	mov	w9, w8
   344b4:	cmp	x19, x9
   344b8:	b.cs	344f8 <ZSTD_endStream@@Base+0x265a4>  // b.hs, b.nlast
   344bc:	ldur	x10, [x29, #-176]
   344c0:	ldur	w11, [x29, #-152]
   344c4:	add	x10, x10, w28, uxtw #3
   344c8:	add	w28, w28, #0x1
   344cc:	cmp	w8, w11
   344d0:	stp	w26, w8, [x10]
   344d4:	mov	w8, #0x1                   	// #1
   344d8:	b.hi	34524 <ZSTD_endStream@@Base+0x265d0>  // b.pmore
   344dc:	ldur	x11, [x29, #-184]
   344e0:	add	x10, x12, x9
   344e4:	mov	x19, x9
   344e8:	mov	w20, w28
   344ec:	cmp	x10, x11
   344f0:	b.ne	344fc <ZSTD_endStream@@Base+0x265a8>  // b.any
   344f4:	b	34508 <ZSTD_endStream@@Base+0x265b4>
   344f8:	mov	x9, x19
   344fc:	mov	w8, wzr
   34500:	mov	x19, x9
   34504:	mov	w20, w21
   34508:	cbnz	w8, 35208 <ZSTD_endStream@@Base+0x272b4>
   3450c:	add	x26, x26, #0x1
   34510:	add	x8, x22, x26
   34514:	cmp	x8, x25
   34518:	mov	w21, w20
   3451c:	b.cc	3439c <ZSTD_endStream@@Base+0x26448>  // b.lo, b.ul, b.last
   34520:	b	35204 <ZSTD_endStream@@Base+0x272b0>
   34524:	mov	x19, x9
   34528:	mov	w20, w28
   3452c:	cbz	w8, 3450c <ZSTD_endStream@@Base+0x265b8>
   34530:	b	35208 <ZSTD_endStream@@Base+0x272b4>
   34534:	ldr	w8, [x21, #204]
   34538:	ldur	x22, [x29, #-80]
   3453c:	ldr	x23, [x21, #8]
   34540:	ldr	w1, [x21, #192]
   34544:	ldr	x19, [x21, #48]
   34548:	cmp	w8, #0xfff
   3454c:	mov	w9, #0xfff                 	// #4095
   34550:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   34554:	mov	w2, #0x6                   	// #6
   34558:	mov	x0, x22
   3455c:	stur	w8, [x29, #-152]
   34560:	sub	w20, w22, w23
   34564:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   34568:	ldp	w2, w8, [x21, #184]
   3456c:	stp	x0, x19, [sp, #24]
   34570:	ldr	w9, [x19, x0, lsl #2]
   34574:	ldr	w26, [x21, #24]
   34578:	sub	w8, w8, #0x1
   3457c:	mov	x0, x21
   34580:	str	w9, [sp, #40]
   34584:	ldr	x9, [x21, #64]
   34588:	mov	w1, w20
   3458c:	str	x9, [sp, #184]
   34590:	mov	w9, #0xffffffff            	// #-1
   34594:	lsl	w19, w9, w8
   34598:	mvn	w8, w19
   3459c:	str	w8, [sp, #120]
   345a0:	subs	w8, w20, w8
   345a4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   345a8:	str	w8, [sp, #112]
   345ac:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   345b0:	cmp	w0, #0x0
   345b4:	add	x11, x22, #0x4
   345b8:	str	x11, [sp, #224]
   345bc:	csinc	w11, w0, wzr, ne  // ne = any
   345c0:	str	w11, [sp, #216]
   345c4:	ldr	x11, [sp, #184]
   345c8:	ldr	x17, [x21, #176]
   345cc:	stp	x26, x23, [sp, #232]
   345d0:	add	x9, x23, x26
   345d4:	add	w10, w20, #0x9
   345d8:	str	x9, [sp, #208]
   345dc:	bic	w9, w20, w19
   345e0:	str	w10, [sp, #48]
   345e4:	ldr	w10, [x21, #196]
   345e8:	lsl	w9, w9, #1
   345ec:	add	x9, x11, w9, uxtw #2
   345f0:	sub	w8, w20, w26
   345f4:	str	x9, [sp, #136]
   345f8:	add	x9, x9, #0x4
   345fc:	mov	w11, #0x1                   	// #1
   34600:	stur	w8, [x29, #-112]
   34604:	str	x9, [sp, #128]
   34608:	lsl	w10, w11, w10
   3460c:	ldp	x15, x14, [x17]
   34610:	str	w10, [sp, #44]
   34614:	str	x17, [sp, #16]
   34618:	ldp	w9, w10, [x17, #188]
   3461c:	ldr	w16, [x17, #28]
   34620:	sub	x18, x15, x14
   34624:	mov	w11, #0xffffffff            	// #-1
   34628:	sub	w9, w9, #0x1
   3462c:	str	w10, [sp, #4]
   34630:	str	x15, [sp, #200]
   34634:	sub	w10, w20, w16
   34638:	sub	w15, w0, w18
   3463c:	lsl	w9, w11, w9
   34640:	mvn	w17, w9
   34644:	sub	w9, w10, w15
   34648:	sub	w11, w18, w16
   3464c:	stur	w9, [x29, #-248]
   34650:	sub	x9, x14, x15
   34654:	ldur	x13, [x29, #-88]
   34658:	str	x9, [sp, #104]
   3465c:	sub	w9, w18, w17
   34660:	cmp	w11, w17
   34664:	csel	w9, w9, w16, hi  // hi = pmore
   34668:	str	w9, [sp, #80]
   3466c:	cmp	w24, #0x0
   34670:	mov	w9, #0x3                   	// #3
   34674:	cinc	x19, x9, ne  // ne = any
   34678:	ldur	x9, [x29, #-208]
   3467c:	lsl	x8, x13, #3
   34680:	ldr	x24, [sp, #152]
   34684:	ldur	x26, [x29, #-96]
   34688:	sub	x8, x8, x13
   3468c:	cinc	x8, x8, ne  // ne = any
   34690:	mov	x12, x22
   34694:	mov	x28, xzr
   34698:	mov	w25, wzr
   3469c:	cset	w22, ne  // ne = any
   346a0:	add	x8, x9, x8, lsl #2
   346a4:	str	w20, [sp, #248]
   346a8:	str	x14, [sp, #88]
   346ac:	str	x15, [sp, #64]
   346b0:	str	x18, [sp, #8]
   346b4:	str	w17, [sp, #56]
   346b8:	str	w16, [sp, #96]
   346bc:	stur	x8, [x29, #-144]
   346c0:	add	x8, x22, x28
   346c4:	cmp	x8, #0x3
   346c8:	b.eq	346d8 <ZSTD_endStream@@Base+0x26784>  // b.none
   346cc:	ldur	x8, [x29, #-144]
   346d0:	ldr	w23, [x8, x28, lsl #2]
   346d4:	b	346e4 <ZSTD_endStream@@Base+0x26790>
   346d8:	ldur	x8, [x29, #-104]
   346dc:	ldr	w8, [x8]
   346e0:	sub	w23, w8, #0x1
   346e4:	ldur	w9, [x29, #-112]
   346e8:	sub	w8, w23, #0x1
   346ec:	cmp	w8, w9
   346f0:	b.cs	34748 <ZSTD_endStream@@Base+0x267f4>  // b.hs, b.nlast
   346f4:	mov	w1, #0x4                   	// #4
   346f8:	mov	x0, x12
   346fc:	mov	x27, x22
   34700:	mov	x22, x24
   34704:	mov	w24, w25
   34708:	mov	x25, x12
   3470c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34710:	mov	w23, w23
   34714:	mov	w20, w0
   34718:	sub	x0, x25, x23
   3471c:	mov	w1, #0x4                   	// #4
   34720:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34724:	cmp	w20, w0
   34728:	b.ne	347c0 <ZSTD_endStream@@Base+0x2686c>  // b.any
   3472c:	ldr	x0, [sp, #224]
   34730:	ldur	x2, [x29, #-184]
   34734:	neg	x8, x23
   34738:	add	x1, x0, x8
   3473c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   34740:	add	w8, w0, #0x4
   34744:	b	347c4 <ZSTD_endStream@@Base+0x26870>
   34748:	ldur	w9, [x29, #-248]
   3474c:	cmp	w8, w9
   34750:	mov	w8, wzr
   34754:	b.cs	347d8 <ZSTD_endStream@@Base+0x26884>  // b.hs, b.nlast
   34758:	ldr	w9, [sp, #248]
   3475c:	ldr	x11, [sp, #232]
   34760:	sub	w9, w9, w23
   34764:	mvn	w10, w9
   34768:	add	w10, w11, w10
   3476c:	cmp	w10, #0x3
   34770:	mov	w23, #0x1c                  	// #28
   34774:	b.cc	347ec <ZSTD_endStream@@Base+0x26898>  // b.lo, b.ul, b.last
   34778:	ldr	x8, [sp, #104]
   3477c:	mov	w1, #0x4                   	// #4
   34780:	mov	x0, x12
   34784:	add	x20, x8, w9, uxtw
   34788:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3478c:	mov	w26, w0
   34790:	mov	w1, #0x4                   	// #4
   34794:	mov	x0, x20
   34798:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3479c:	cmp	w26, w0
   347a0:	b.ne	347e0 <ZSTD_endStream@@Base+0x2688c>  // b.any
   347a4:	ldr	x0, [sp, #224]
   347a8:	ldur	x2, [x29, #-184]
   347ac:	ldp	x3, x4, [sp, #200]
   347b0:	add	x1, x20, #0x4
   347b4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   347b8:	add	w8, w0, #0x4
   347bc:	b	347e4 <ZSTD_endStream@@Base+0x26890>
   347c0:	mov	w8, wzr
   347c4:	ldp	x13, x12, [x29, #-88]
   347c8:	mov	w25, w24
   347cc:	mov	x24, x22
   347d0:	mov	x22, x27
   347d4:	ldr	x27, [sp, #272]
   347d8:	mov	w23, #0x1c                  	// #28
   347dc:	b	347ec <ZSTD_endStream@@Base+0x26898>
   347e0:	mov	w8, wzr
   347e4:	ldp	x26, x13, [x29, #-96]
   347e8:	ldur	x12, [x29, #-80]
   347ec:	mov	w9, w8
   347f0:	cmp	x24, x9
   347f4:	b.cs	34834 <ZSTD_endStream@@Base+0x268e0>  // b.hs, b.nlast
   347f8:	ldur	x10, [x29, #-176]
   347fc:	ldur	w11, [x29, #-152]
   34800:	add	x10, x10, w25, uxtw #3
   34804:	add	w25, w25, #0x1
   34808:	cmp	w8, w11
   3480c:	stp	w28, w8, [x10]
   34810:	mov	w8, #0x1                   	// #1
   34814:	b.hi	34860 <ZSTD_endStream@@Base+0x2690c>  // b.pmore
   34818:	ldur	x11, [x29, #-184]
   3481c:	add	x10, x12, x9
   34820:	mov	x24, x9
   34824:	mov	w20, w25
   34828:	cmp	x10, x11
   3482c:	b.ne	34838 <ZSTD_endStream@@Base+0x268e4>  // b.any
   34830:	b	34844 <ZSTD_endStream@@Base+0x268f0>
   34834:	mov	x9, x24
   34838:	mov	w8, wzr
   3483c:	mov	x24, x9
   34840:	mov	w20, w21
   34844:	cbnz	w8, 34ea8 <ZSTD_endStream@@Base+0x26f54>
   34848:	add	x28, x28, #0x1
   3484c:	add	x8, x22, x28
   34850:	cmp	x8, x19
   34854:	mov	w21, w20
   34858:	b.cc	346c0 <ZSTD_endStream@@Base+0x2676c>  // b.lo, b.ul, b.last
   3485c:	b	34ea4 <ZSTD_endStream@@Base+0x26f50>
   34860:	mov	x24, x9
   34864:	mov	w20, w25
   34868:	cbz	w8, 34848 <ZSTD_endStream@@Base+0x268f4>
   3486c:	b	34ea8 <ZSTD_endStream@@Base+0x26f54>
   34870:	ldr	w8, [x21, #204]
   34874:	ldur	x23, [x29, #-80]
   34878:	stur	x28, [x29, #-144]
   3487c:	ldr	x28, [x21, #8]
   34880:	ldr	w1, [x21, #192]
   34884:	ldr	x20, [x21, #48]
   34888:	cmp	w8, #0xfff
   3488c:	mov	w9, #0xfff                 	// #4095
   34890:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   34894:	mov	w2, #0x5                   	// #5
   34898:	mov	x0, x23
   3489c:	stur	w8, [x29, #-248]
   348a0:	sub	w19, w23, w28
   348a4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   348a8:	ldp	w2, w8, [x21, #184]
   348ac:	stp	x0, x20, [sp, #24]
   348b0:	ldr	w9, [x20, x0, lsl #2]
   348b4:	ldr	w22, [x21, #24]
   348b8:	sub	w8, w8, #0x1
   348bc:	mov	x0, x21
   348c0:	str	w9, [sp, #40]
   348c4:	ldr	x9, [x21, #64]
   348c8:	mov	w1, w19
   348cc:	str	x9, [sp, #136]
   348d0:	mov	w9, #0xffffffff            	// #-1
   348d4:	lsl	w20, w9, w8
   348d8:	mvn	w8, w20
   348dc:	str	w8, [sp, #104]
   348e0:	subs	w8, w19, w8
   348e4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   348e8:	str	w8, [sp, #96]
   348ec:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   348f0:	cmp	w0, #0x0
   348f4:	add	w10, w19, #0x9
   348f8:	add	x11, x23, #0x4
   348fc:	ldr	x17, [x21, #176]
   34900:	str	w10, [sp, #128]
   34904:	ldr	w10, [x21, #196]
   34908:	stp	x11, x28, [sp, #224]
   3490c:	csinc	w11, w0, wzr, ne  // ne = any
   34910:	str	w11, [sp, #208]
   34914:	ldr	x11, [sp, #136]
   34918:	add	x9, x28, x22
   3491c:	str	x9, [sp, #200]
   34920:	bic	w9, w19, w20
   34924:	lsl	w9, w9, #1
   34928:	add	x9, x11, w9, uxtw #2
   3492c:	sub	w8, w19, w22
   34930:	str	x9, [sp, #120]
   34934:	add	x9, x9, #0x4
   34938:	stur	w8, [x29, #-112]
   3493c:	str	x22, [sp, #216]
   34940:	str	x9, [sp, #112]
   34944:	ldp	x15, x14, [x17]
   34948:	mov	w11, #0x1                   	// #1
   3494c:	str	x17, [sp, #16]
   34950:	lsl	w28, w11, w10
   34954:	ldp	w9, w10, [x17, #188]
   34958:	ldr	w16, [x17, #28]
   3495c:	sub	x18, x15, x14
   34960:	mov	w11, #0xffffffff            	// #-1
   34964:	sub	w9, w9, #0x1
   34968:	str	w10, [sp, #4]
   3496c:	str	x15, [sp, #184]
   34970:	sub	w10, w19, w16
   34974:	sub	w15, w0, w18
   34978:	lsl	w9, w11, w9
   3497c:	mvn	w17, w9
   34980:	sub	w9, w10, w15
   34984:	sub	w11, w18, w16
   34988:	str	w9, [sp, #248]
   3498c:	sub	x9, x14, x15
   34990:	str	x9, [sp, #88]
   34994:	sub	w9, w18, w17
   34998:	cmp	w11, w17
   3499c:	csel	w9, w9, w16, hi  // hi = pmore
   349a0:	ldur	x13, [x29, #-88]
   349a4:	ldur	x8, [x29, #-144]
   349a8:	str	w9, [sp, #56]
   349ac:	cmp	w24, #0x0
   349b0:	mov	w9, #0x3                   	// #3
   349b4:	cinc	x9, x9, ne  // ne = any
   349b8:	stur	x9, [x29, #-144]
   349bc:	ldur	x9, [x29, #-208]
   349c0:	str	w19, [sp, #240]
   349c4:	ldr	x19, [sp, #152]
   349c8:	sub	x8, x8, x13
   349cc:	cinc	x8, x8, ne  // ne = any
   349d0:	mov	x12, x23
   349d4:	mov	x26, xzr
   349d8:	mov	w25, wzr
   349dc:	cset	w22, ne  // ne = any
   349e0:	add	x8, x9, x8, lsl #2
   349e4:	str	x14, [sp, #64]
   349e8:	str	x15, [sp, #48]
   349ec:	str	x18, [sp, #8]
   349f0:	str	w17, [sp, #44]
   349f4:	str	w16, [sp, #80]
   349f8:	stur	x8, [x29, #-152]
   349fc:	add	x8, x22, x26
   34a00:	cmp	x8, #0x3
   34a04:	b.eq	34a14 <ZSTD_endStream@@Base+0x26ac0>  // b.none
   34a08:	ldur	x8, [x29, #-152]
   34a0c:	ldr	w23, [x8, x26, lsl #2]
   34a10:	b	34a20 <ZSTD_endStream@@Base+0x26acc>
   34a14:	ldur	x8, [x29, #-104]
   34a18:	ldr	w8, [x8]
   34a1c:	sub	w23, w8, #0x1
   34a20:	ldur	w9, [x29, #-112]
   34a24:	sub	w8, w23, #0x1
   34a28:	cmp	w8, w9
   34a2c:	b.cs	34a7c <ZSTD_endStream@@Base+0x26b28>  // b.hs, b.nlast
   34a30:	mov	w1, #0x4                   	// #4
   34a34:	mov	x0, x12
   34a38:	mov	x24, x12
   34a3c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34a40:	mov	w23, w23
   34a44:	mov	w20, w0
   34a48:	sub	x0, x24, x23
   34a4c:	mov	w1, #0x4                   	// #4
   34a50:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34a54:	cmp	w20, w0
   34a58:	b.ne	34af8 <ZSTD_endStream@@Base+0x26ba4>  // b.any
   34a5c:	ldr	x0, [sp, #224]
   34a60:	ldur	x2, [x29, #-184]
   34a64:	neg	x8, x23
   34a68:	add	x1, x0, x8
   34a6c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   34a70:	add	w8, w0, #0x4
   34a74:	mov	w23, #0x1c                  	// #28
   34a78:	b	34b10 <ZSTD_endStream@@Base+0x26bbc>
   34a7c:	ldr	w9, [sp, #248]
   34a80:	cmp	w8, w9
   34a84:	mov	w8, wzr
   34a88:	b.cs	34b04 <ZSTD_endStream@@Base+0x26bb0>  // b.hs, b.nlast
   34a8c:	ldr	w9, [sp, #240]
   34a90:	ldr	x11, [sp, #216]
   34a94:	sub	w9, w9, w23
   34a98:	mvn	w10, w9
   34a9c:	add	w10, w11, w10
   34aa0:	cmp	w10, #0x3
   34aa4:	mov	w23, #0x1c                  	// #28
   34aa8:	b.cc	34b14 <ZSTD_endStream@@Base+0x26bc0>  // b.lo, b.ul, b.last
   34aac:	ldr	x8, [sp, #88]
   34ab0:	mov	w1, #0x4                   	// #4
   34ab4:	mov	x0, x12
   34ab8:	add	x20, x8, w9, uxtw
   34abc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34ac0:	mov	w24, w0
   34ac4:	mov	w1, #0x4                   	// #4
   34ac8:	mov	x0, x20
   34acc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34ad0:	cmp	w24, w0
   34ad4:	b.ne	34b0c <ZSTD_endStream@@Base+0x26bb8>  // b.any
   34ad8:	ldr	x0, [sp, #224]
   34adc:	ldur	x2, [x29, #-184]
   34ae0:	ldr	x3, [sp, #184]
   34ae4:	ldr	x4, [sp, #200]
   34ae8:	add	x1, x20, #0x4
   34aec:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   34af0:	add	w8, w0, #0x4
   34af4:	b	34b10 <ZSTD_endStream@@Base+0x26bbc>
   34af8:	mov	w8, wzr
   34afc:	mov	w23, #0x1c                  	// #28
   34b00:	b	34b10 <ZSTD_endStream@@Base+0x26bbc>
   34b04:	mov	w23, #0x1c                  	// #28
   34b08:	b	34b14 <ZSTD_endStream@@Base+0x26bc0>
   34b0c:	mov	w8, wzr
   34b10:	ldp	x13, x12, [x29, #-88]
   34b14:	mov	w9, w8
   34b18:	cmp	x19, x9
   34b1c:	b.cs	34b60 <ZSTD_endStream@@Base+0x26c0c>  // b.hs, b.nlast
   34b20:	ldur	x10, [x29, #-176]
   34b24:	ldur	w11, [x29, #-248]
   34b28:	mov	w20, w25
   34b2c:	add	w20, w25, #0x1
   34b30:	add	x10, x10, w25, uxtw #3
   34b34:	cmp	w8, w11
   34b38:	stp	w26, w8, [x10]
   34b3c:	mov	w8, #0x1                   	// #1
   34b40:	b.hi	34b90 <ZSTD_endStream@@Base+0x26c3c>  // b.pmore
   34b44:	ldur	x11, [x29, #-184]
   34b48:	add	x10, x12, x9
   34b4c:	mov	x19, x9
   34b50:	mov	w25, w20
   34b54:	cmp	x10, x11
   34b58:	b.ne	34b64 <ZSTD_endStream@@Base+0x26c10>  // b.any
   34b5c:	b	34b70 <ZSTD_endStream@@Base+0x26c1c>
   34b60:	mov	x9, x19
   34b64:	mov	w8, wzr
   34b68:	mov	x19, x9
   34b6c:	mov	w20, w21
   34b70:	cbnz	w8, 3527c <ZSTD_endStream@@Base+0x27328>
   34b74:	ldur	x9, [x29, #-144]
   34b78:	add	x26, x26, #0x1
   34b7c:	add	x8, x22, x26
   34b80:	mov	w21, w20
   34b84:	cmp	x8, x9
   34b88:	b.cc	349fc <ZSTD_endStream@@Base+0x26aa8>  // b.lo, b.ul, b.last
   34b8c:	b	35278 <ZSTD_endStream@@Base+0x27324>
   34b90:	mov	x19, x9
   34b94:	mov	w25, w20
   34b98:	cbz	w8, 34b74 <ZSTD_endStream@@Base+0x26c20>
   34b9c:	b	3527c <ZSTD_endStream@@Base+0x27328>
   34ba0:	ldr	w8, [x21, #204]
   34ba4:	ldr	x23, [x21, #8]
   34ba8:	ldr	w1, [x21, #192]
   34bac:	ldr	x20, [x21, #48]
   34bb0:	cmp	w8, #0xfff
   34bb4:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   34bb8:	mov	w2, #0x4                   	// #4
   34bbc:	stur	w8, [x29, #-248]
   34bc0:	sub	w22, w0, w23
   34bc4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   34bc8:	ldp	w2, w8, [x21, #184]
   34bcc:	stp	x0, x20, [sp, #24]
   34bd0:	ldr	w9, [x20, x0, lsl #2]
   34bd4:	ldr	x25, [x21, #64]
   34bd8:	sub	w8, w8, #0x1
   34bdc:	ldr	w19, [x21, #24]
   34be0:	str	w9, [sp, #40]
   34be4:	mov	w9, #0xffffffff            	// #-1
   34be8:	lsl	w20, w9, w8
   34bec:	mvn	w8, w20
   34bf0:	str	w8, [sp, #112]
   34bf4:	subs	w8, w22, w8
   34bf8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   34bfc:	mov	x0, x21
   34c00:	mov	w1, w22
   34c04:	str	w8, [sp, #104]
   34c08:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   34c0c:	ldp	x13, x12, [x29, #-88]
   34c10:	add	x9, x23, x19
   34c14:	str	x9, [sp, #200]
   34c18:	bic	w9, w22, w20
   34c1c:	ldr	x17, [x21, #176]
   34c20:	add	w10, w22, #0x9
   34c24:	lsl	w9, w9, #1
   34c28:	cmp	w0, #0x0
   34c2c:	str	w10, [sp, #44]
   34c30:	ldr	w10, [x21, #196]
   34c34:	add	x11, x12, #0x4
   34c38:	add	x9, x25, w9, uxtw #2
   34c3c:	sub	w8, w22, w19
   34c40:	stp	x11, x23, [sp, #224]
   34c44:	csinc	w11, w0, wzr, ne  // ne = any
   34c48:	str	x9, [sp, #136]
   34c4c:	add	x9, x9, #0x4
   34c50:	stur	wzr, [x29, #-112]
   34c54:	stur	w8, [x29, #-144]
   34c58:	str	x19, [sp, #216]
   34c5c:	str	w11, [sp, #208]
   34c60:	stp	x25, x9, [sp, #120]
   34c64:	ldp	x15, x14, [x17]
   34c68:	mov	w11, #0x1                   	// #1
   34c6c:	str	x17, [sp, #16]
   34c70:	sub	x8, x28, x13
   34c74:	lsl	w28, w11, w10
   34c78:	ldp	w9, w10, [x17, #188]
   34c7c:	ldr	w16, [x17, #28]
   34c80:	sub	x18, x15, x14
   34c84:	mov	w11, #0xffffffff            	// #-1
   34c88:	sub	w9, w9, #0x1
   34c8c:	str	w10, [sp, #4]
   34c90:	str	x15, [sp, #184]
   34c94:	sub	w10, w22, w16
   34c98:	sub	w15, w0, w18
   34c9c:	lsl	w9, w11, w9
   34ca0:	mvn	w17, w9
   34ca4:	sub	w9, w10, w15
   34ca8:	sub	w11, w18, w16
   34cac:	str	w9, [sp, #248]
   34cb0:	sub	x9, x14, x15
   34cb4:	str	x9, [sp, #96]
   34cb8:	sub	w9, w18, w17
   34cbc:	cmp	w11, w17
   34cc0:	csel	w9, w9, w16, hi  // hi = pmore
   34cc4:	str	w9, [sp, #64]
   34cc8:	cmp	w24, #0x0
   34ccc:	mov	w9, #0x3                   	// #3
   34cd0:	cinc	x25, x9, ne  // ne = any
   34cd4:	ldur	x9, [x29, #-208]
   34cd8:	ldr	x19, [sp, #152]
   34cdc:	cinc	x8, x8, ne  // ne = any
   34ce0:	mov	x26, xzr
   34ce4:	str	w22, [sp, #240]
   34ce8:	cset	w22, ne  // ne = any
   34cec:	add	x8, x9, x8, lsl #2
   34cf0:	str	x14, [sp, #80]
   34cf4:	str	x15, [sp, #56]
   34cf8:	str	x18, [sp, #8]
   34cfc:	str	w17, [sp, #48]
   34d00:	str	w16, [sp, #88]
   34d04:	stur	x8, [x29, #-152]
   34d08:	add	x8, x22, x26
   34d0c:	cmp	x8, #0x3
   34d10:	b.eq	34d20 <ZSTD_endStream@@Base+0x26dcc>  // b.none
   34d14:	ldur	x8, [x29, #-152]
   34d18:	ldr	w23, [x8, x26, lsl #2]
   34d1c:	b	34d2c <ZSTD_endStream@@Base+0x26dd8>
   34d20:	ldur	x8, [x29, #-104]
   34d24:	ldr	w8, [x8]
   34d28:	sub	w23, w8, #0x1
   34d2c:	ldur	w9, [x29, #-144]
   34d30:	sub	w8, w23, #0x1
   34d34:	cmp	w8, w9
   34d38:	b.cs	34d88 <ZSTD_endStream@@Base+0x26e34>  // b.hs, b.nlast
   34d3c:	mov	w1, #0x4                   	// #4
   34d40:	mov	x0, x12
   34d44:	mov	x24, x12
   34d48:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34d4c:	mov	w23, w23
   34d50:	mov	w20, w0
   34d54:	sub	x0, x24, x23
   34d58:	mov	w1, #0x4                   	// #4
   34d5c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34d60:	cmp	w20, w0
   34d64:	b.ne	34e04 <ZSTD_endStream@@Base+0x26eb0>  // b.any
   34d68:	ldr	x0, [sp, #224]
   34d6c:	ldur	x2, [x29, #-184]
   34d70:	neg	x8, x23
   34d74:	add	x1, x0, x8
   34d78:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   34d7c:	add	w8, w0, #0x4
   34d80:	mov	w23, #0x1c                  	// #28
   34d84:	b	34e1c <ZSTD_endStream@@Base+0x26ec8>
   34d88:	ldr	w9, [sp, #248]
   34d8c:	cmp	w8, w9
   34d90:	mov	w8, wzr
   34d94:	b.cs	34e10 <ZSTD_endStream@@Base+0x26ebc>  // b.hs, b.nlast
   34d98:	ldr	w9, [sp, #240]
   34d9c:	ldr	x11, [sp, #216]
   34da0:	sub	w9, w9, w23
   34da4:	mvn	w10, w9
   34da8:	add	w10, w11, w10
   34dac:	cmp	w10, #0x3
   34db0:	mov	w23, #0x1c                  	// #28
   34db4:	b.cc	34e20 <ZSTD_endStream@@Base+0x26ecc>  // b.lo, b.ul, b.last
   34db8:	ldr	x8, [sp, #96]
   34dbc:	mov	w1, #0x4                   	// #4
   34dc0:	mov	x0, x12
   34dc4:	add	x20, x8, w9, uxtw
   34dc8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34dcc:	mov	w24, w0
   34dd0:	mov	w1, #0x4                   	// #4
   34dd4:	mov	x0, x20
   34dd8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   34ddc:	cmp	w24, w0
   34de0:	b.ne	34e18 <ZSTD_endStream@@Base+0x26ec4>  // b.any
   34de4:	ldr	x0, [sp, #224]
   34de8:	ldur	x2, [x29, #-184]
   34dec:	ldr	x3, [sp, #184]
   34df0:	ldr	x4, [sp, #200]
   34df4:	add	x1, x20, #0x4
   34df8:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   34dfc:	add	w8, w0, #0x4
   34e00:	b	34e1c <ZSTD_endStream@@Base+0x26ec8>
   34e04:	mov	w8, wzr
   34e08:	mov	w23, #0x1c                  	// #28
   34e0c:	b	34e1c <ZSTD_endStream@@Base+0x26ec8>
   34e10:	mov	w23, #0x1c                  	// #28
   34e14:	b	34e20 <ZSTD_endStream@@Base+0x26ecc>
   34e18:	mov	w8, wzr
   34e1c:	ldp	x13, x12, [x29, #-88]
   34e20:	mov	w9, w8
   34e24:	cmp	x19, x9
   34e28:	b.cs	34e6c <ZSTD_endStream@@Base+0x26f18>  // b.hs, b.nlast
   34e2c:	ldur	x10, [x29, #-176]
   34e30:	ldur	w20, [x29, #-112]
   34e34:	ldur	w11, [x29, #-248]
   34e38:	add	x10, x10, w20, uxtw #3
   34e3c:	add	w20, w20, #0x1
   34e40:	cmp	w8, w11
   34e44:	stp	w26, w8, [x10]
   34e48:	mov	w8, #0x1                   	// #1
   34e4c:	stur	w20, [x29, #-112]
   34e50:	b.hi	34e98 <ZSTD_endStream@@Base+0x26f44>  // b.pmore
   34e54:	ldur	x11, [x29, #-184]
   34e58:	add	x10, x12, x9
   34e5c:	mov	x19, x9
   34e60:	cmp	x10, x11
   34e64:	b.ne	34e70 <ZSTD_endStream@@Base+0x26f1c>  // b.any
   34e68:	b	34e7c <ZSTD_endStream@@Base+0x26f28>
   34e6c:	mov	x9, x19
   34e70:	mov	w8, wzr
   34e74:	mov	x19, x9
   34e78:	mov	w20, w21
   34e7c:	cbnz	w8, 35410 <ZSTD_endStream@@Base+0x274bc>
   34e80:	add	x26, x26, #0x1
   34e84:	add	x8, x22, x26
   34e88:	cmp	x8, x25
   34e8c:	mov	w21, w20
   34e90:	b.cc	34d08 <ZSTD_endStream@@Base+0x26db4>  // b.lo, b.ul, b.last
   34e94:	b	3540c <ZSTD_endStream@@Base+0x274b8>
   34e98:	mov	x19, x9
   34e9c:	cbz	w8, 34e80 <ZSTD_endStream@@Base+0x26f2c>
   34ea0:	b	35410 <ZSTD_endStream@@Base+0x274bc>
   34ea4:	mov	w8, wzr
   34ea8:	cbnz	w8, 358e4 <ZSTD_endStream@@Base+0x27990>
   34eac:	ldp	x10, x8, [sp, #24]
   34eb0:	ldr	w9, [sp, #248]
   34eb4:	ldur	x2, [x29, #-184]
   34eb8:	ldr	w20, [sp, #40]
   34ebc:	mov	x22, xzr
   34ec0:	str	w9, [x8, x10, lsl #2]
   34ec4:	ldp	w28, w26, [sp, #44]
   34ec8:	mov	x21, xzr
   34ecc:	add	w8, w9, #0x2
   34ed0:	stur	w8, [x29, #-104]
   34ed4:	b	34efc <ZSTD_endStream@@Base+0x26fa8>
   34ed8:	ldur	x12, [x29, #-80]
   34edc:	mov	x24, x8
   34ee0:	mov	w28, w9
   34ee4:	mov	x8, x21
   34ee8:	mov	w23, #0x1c                  	// #28
   34eec:	mov	w20, w14
   34ef0:	ldur	x2, [x29, #-184]
   34ef4:	mov	x21, x8
   34ef8:	tbz	w9, #0, 35048 <ZSTD_endStream@@Base+0x270f4>
   34efc:	subs	w28, w28, #0x1
   34f00:	b.cc	35048 <ZSTD_endStream@@Base+0x270f4>  // b.lo, b.ul, b.last
   34f04:	ldr	w8, [sp, #216]
   34f08:	cmp	w20, w8
   34f0c:	b.cc	35048 <ZSTD_endStream@@Base+0x270f4>  // b.lo, b.ul, b.last
   34f10:	ldr	x8, [sp, #240]
   34f14:	cmp	x21, x22
   34f18:	mov	w19, w25
   34f1c:	csel	x25, x21, x22, cc  // cc = lo, ul, last
   34f20:	add	x23, x8, w20, uxtw
   34f24:	add	x0, x12, x25
   34f28:	add	x1, x23, x25
   34f2c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   34f30:	add	x8, x0, x25
   34f34:	cmp	x8, x24
   34f38:	b.ls	34f94 <ZSTD_endStream@@Base+0x27040>  // b.plast
   34f3c:	ldur	w12, [x29, #-104]
   34f40:	ldur	x13, [x29, #-176]
   34f44:	sub	w10, w26, w20
   34f48:	add	w11, w20, w8
   34f4c:	mov	w25, w19
   34f50:	cmp	x8, x10
   34f54:	mov	w9, wzr
   34f58:	mov	w14, w20
   34f5c:	sub	w12, w12, w20
   34f60:	add	x13, x13, w19, uxtw #3
   34f64:	csel	w26, w11, w26, hi  // hi = pmore
   34f68:	cmp	x8, #0x1, lsl #12
   34f6c:	add	w25, w19, #0x1
   34f70:	stp	w12, w8, [x13]
   34f74:	b.hi	34ed8 <ZSTD_endStream@@Base+0x26f84>  // b.pmore
   34f78:	ldur	x12, [x29, #-80]
   34f7c:	ldur	x11, [x29, #-184]
   34f80:	mov	x24, x8
   34f84:	add	x10, x12, x8
   34f88:	cmp	x10, x11
   34f8c:	b.ne	34fa0 <ZSTD_endStream@@Base+0x2704c>  // b.any
   34f90:	b	34edc <ZSTD_endStream@@Base+0x26f88>
   34f94:	ldur	x12, [x29, #-80]
   34f98:	mov	w14, w20
   34f9c:	mov	w25, w19
   34fa0:	ldrb	w9, [x23, x8]
   34fa4:	ldrb	w10, [x12, x8]
   34fa8:	ldr	w11, [sp, #120]
   34fac:	mov	w20, w14
   34fb0:	cmp	w9, w10
   34fb4:	ldr	x9, [sp, #184]
   34fb8:	and	w11, w14, w11
   34fbc:	lsl	w11, w11, #1
   34fc0:	add	x9, x9, w11, uxtw #2
   34fc4:	b.cs	34fe8 <ZSTD_endStream@@Base+0x27094>  // b.hs, b.nlast
   34fc8:	ldr	w10, [sp, #112]
   34fcc:	cmp	w20, w10
   34fd0:	ldr	x10, [sp, #136]
   34fd4:	str	w20, [x10]
   34fd8:	b.ls	35018 <ZSTD_endStream@@Base+0x270c4>  // b.plast
   34fdc:	add	x9, x9, #0x4
   34fe0:	str	x9, [sp, #136]
   34fe4:	b	35008 <ZSTD_endStream@@Base+0x270b4>
   34fe8:	ldr	w10, [sp, #112]
   34fec:	cmp	w20, w10
   34ff0:	ldr	x10, [sp, #128]
   34ff4:	str	w20, [x10]
   34ff8:	b.ls	3502c <ZSTD_endStream@@Base+0x270d8>  // b.plast
   34ffc:	str	x9, [sp, #128]
   35000:	mov	x22, x8
   35004:	mov	x8, x21
   35008:	ldr	w20, [x9]
   3500c:	mov	w23, #0x1c                  	// #28
   35010:	mov	w9, #0x1                   	// #1
   35014:	b	34ef0 <ZSTD_endStream@@Base+0x26f9c>
   35018:	sub	x10, x29, #0x40
   3501c:	mov	w9, wzr
   35020:	str	x10, [sp, #136]
   35024:	mov	w23, #0x1c                  	// #28
   35028:	b	34ef0 <ZSTD_endStream@@Base+0x26f9c>
   3502c:	sub	x10, x29, #0x40
   35030:	mov	w9, wzr
   35034:	str	x10, [sp, #128]
   35038:	mov	x22, x8
   3503c:	mov	x8, x21
   35040:	mov	w23, #0x1c                  	// #28
   35044:	b	34ef0 <ZSTD_endStream@@Base+0x26f9c>
   35048:	ldr	x8, [sp, #128]
   3504c:	mov	w19, w26
   35050:	str	wzr, [x8]
   35054:	ldr	x8, [sp, #136]
   35058:	str	wzr, [x8]
   3505c:	cbz	w28, 358c8 <ZSTD_endStream@@Base+0x27974>
   35060:	ldr	w1, [sp, #4]
   35064:	mov	w2, #0x6                   	// #6
   35068:	mov	x0, x12
   3506c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   35070:	ldr	x9, [sp, #16]
   35074:	ldur	x13, [x29, #-88]
   35078:	mov	x21, xzr
   3507c:	mov	x22, xzr
   35080:	ldr	x8, [x9, #48]
   35084:	ldr	w27, [x8, x0, lsl #2]
   35088:	ldr	x8, [x9, #64]
   3508c:	ldr	x9, [sp, #240]
   35090:	stur	x8, [x29, #-152]
   35094:	ldr	x8, [sp, #8]
   35098:	and	x8, x8, #0xffffffff
   3509c:	stur	x8, [x29, #-112]
   350a0:	ldr	x8, [sp, #64]
   350a4:	add	x8, x9, x8
   350a8:	stur	x8, [x29, #-144]
   350ac:	b	350ec <ZSTD_endStream@@Base+0x27198>
   350b0:	ldr	w11, [sp, #56]
   350b4:	ldrb	w8, [x10, x9]
   350b8:	ldrb	w10, [x14, x9]
   350bc:	ldur	x12, [x29, #-152]
   350c0:	and	w11, w27, w11
   350c4:	lsl	w11, w11, #1
   350c8:	cmp	w8, w10
   350cc:	add	x11, x12, w11, uxtw #2
   350d0:	cset	w8, cc  // cc = lo, ul, last
   350d4:	ldr	w27, [x11, w8, uxtw #2]
   350d8:	csel	x21, x21, x9, cc  // cc = lo, ul, last
   350dc:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   350e0:	mov	w8, #0x1                   	// #1
   350e4:	mov	w25, w26
   350e8:	tbz	w8, #0, 358cc <ZSTD_endStream@@Base+0x27978>
   350ec:	subs	w28, w28, #0x1
   350f0:	b.cc	358cc <ZSTD_endStream@@Base+0x27978>  // b.lo, b.ul, b.last
   350f4:	ldr	w8, [sp, #96]
   350f8:	cmp	w27, w8
   350fc:	b.ls	358cc <ZSTD_endStream@@Base+0x27978>  // b.plast
   35100:	ldr	x8, [sp, #88]
   35104:	mov	w23, w27
   35108:	ldur	x2, [x29, #-184]
   3510c:	ldp	x3, x4, [sp, #200]
   35110:	add	x20, x8, x23
   35114:	ldur	x8, [x29, #-80]
   35118:	cmp	x22, x21
   3511c:	mov	w26, w25
   35120:	csel	x25, x22, x21, cc  // cc = lo, ul, last
   35124:	add	x0, x8, x25
   35128:	add	x1, x20, x25
   3512c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   35130:	ldur	x8, [x29, #-144]
   35134:	ldur	x11, [x29, #-112]
   35138:	add	x9, x0, x25
   3513c:	add	x10, x9, x23
   35140:	add	x8, x8, x23
   35144:	cmp	x10, x11
   35148:	csel	x10, x20, x8, cc  // cc = lo, ul, last
   3514c:	cmp	x9, x24
   35150:	b.ls	351c8 <ZSTD_endStream@@Base+0x27274>  // b.plast
   35154:	ldr	x11, [sp, #64]
   35158:	ldur	x12, [x29, #-176]
   3515c:	ldur	w15, [x29, #-104]
   35160:	mov	w25, w26
   35164:	add	w11, w27, w11
   35168:	sub	w13, w19, w11
   3516c:	add	w14, w11, w9
   35170:	cmp	x9, x13
   35174:	mov	w8, wzr
   35178:	add	x12, x12, w26, uxtw #3
   3517c:	sub	w11, w15, w11
   35180:	csel	w19, w14, w19, hi  // hi = pmore
   35184:	cmp	x9, #0x1, lsl #12
   35188:	add	w25, w26, #0x1
   3518c:	stp	w11, w9, [x12]
   35190:	b.hi	351f0 <ZSTD_endStream@@Base+0x2729c>  // b.pmore
   35194:	ldur	x14, [x29, #-80]
   35198:	ldur	x12, [x29, #-184]
   3519c:	mov	w26, w25
   351a0:	mov	x24, x9
   351a4:	add	x11, x14, x9
   351a8:	cmp	x11, x12
   351ac:	b.ne	351cc <ZSTD_endStream@@Base+0x27278>  // b.any
   351b0:	ldur	x13, [x29, #-88]
   351b4:	mov	x24, x9
   351b8:	mov	w23, #0x1c                  	// #28
   351bc:	mov	w25, w26
   351c0:	tbnz	w8, #0, 350ec <ZSTD_endStream@@Base+0x27198>
   351c4:	b	358cc <ZSTD_endStream@@Base+0x27978>
   351c8:	ldur	x14, [x29, #-80]
   351cc:	ldr	w8, [sp, #80]
   351d0:	ldur	x13, [x29, #-88]
   351d4:	mov	w23, #0x1c                  	// #28
   351d8:	cmp	w27, w8
   351dc:	b.hi	350b0 <ZSTD_endStream@@Base+0x2715c>  // b.pmore
   351e0:	mov	w8, wzr
   351e4:	mov	w25, w26
   351e8:	tbnz	w8, #0, 350ec <ZSTD_endStream@@Base+0x27198>
   351ec:	b	358cc <ZSTD_endStream@@Base+0x27978>
   351f0:	ldur	x13, [x29, #-88]
   351f4:	mov	x24, x9
   351f8:	mov	w23, #0x1c                  	// #28
   351fc:	tbnz	w8, #0, 350ec <ZSTD_endStream@@Base+0x27198>
   35200:	b	358cc <ZSTD_endStream@@Base+0x27978>
   35204:	mov	w8, wzr
   35208:	cbnz	w8, 35924 <ZSTD_endStream@@Base+0x279d0>
   3520c:	ldur	x22, [x29, #-72]
   35210:	ldur	x26, [x29, #-96]
   35214:	cmp	x19, #0x2
   35218:	b.hi	358ec <ZSTD_endStream@@Base+0x27998>  // b.pmore
   3521c:	sub	x1, x29, #0xc
   35220:	mov	x0, x22
   35224:	mov	x2, x12
   35228:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   3522c:	ldr	w8, [sp, #200]
   35230:	ldr	w24, [sp, #44]
   35234:	cmp	w0, w8
   35238:	b.cc	35c8c <ZSTD_endStream@@Base+0x27d38>  // b.lo, b.ul, b.last
   3523c:	ldr	w8, [sp, #248]
   35240:	sub	w21, w8, w0
   35244:	lsr	w8, w21, #18
   35248:	cbnz	w8, 35c8c <ZSTD_endStream@@Base+0x27d38>
   3524c:	ldr	x8, [sp, #208]
   35250:	ldur	x2, [x29, #-184]
   35254:	add	x1, x8, w0, uxtw
   35258:	ldur	x0, [x29, #-80]
   3525c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   35260:	cmp	x0, #0x3
   35264:	b.cs	35c94 <ZSTD_endStream@@Base+0x27d40>  // b.hs, b.nlast
   35268:	ldp	x13, x12, [x29, #-88]
   3526c:	mov	w8, wzr
   35270:	mov	x0, x19
   35274:	b	35ce8 <ZSTD_endStream@@Base+0x27d94>
   35278:	mov	w8, wzr
   3527c:	cbnz	w8, 35924 <ZSTD_endStream@@Base+0x279d0>
   35280:	ldp	x10, x8, [sp, #24]
   35284:	ldr	w9, [sp, #240]
   35288:	ldur	x2, [x29, #-184]
   3528c:	ldr	w26, [sp, #128]
   35290:	ldr	w20, [sp, #40]
   35294:	mov	x22, xzr
   35298:	mov	x21, xzr
   3529c:	str	w9, [x8, x10, lsl #2]
   352a0:	add	w8, w9, #0x2
   352a4:	stur	w8, [x29, #-104]
   352a8:	b	352d0 <ZSTD_endStream@@Base+0x2737c>
   352ac:	ldur	x12, [x29, #-80]
   352b0:	mov	x19, x8
   352b4:	mov	w28, w9
   352b8:	mov	x8, x21
   352bc:	mov	w23, #0x1c                  	// #28
   352c0:	mov	w20, w14
   352c4:	ldur	x2, [x29, #-184]
   352c8:	mov	x21, x8
   352cc:	tbz	w9, #0, 355a0 <ZSTD_endStream@@Base+0x2764c>
   352d0:	subs	w28, w28, #0x1
   352d4:	b.cc	355a0 <ZSTD_endStream@@Base+0x2764c>  // b.lo, b.ul, b.last
   352d8:	ldr	w8, [sp, #208]
   352dc:	cmp	w20, w8
   352e0:	b.cc	355a0 <ZSTD_endStream@@Base+0x2764c>  // b.lo, b.ul, b.last
   352e4:	ldr	x8, [sp, #232]
   352e8:	cmp	x21, x22
   352ec:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   352f0:	add	x0, x12, x24
   352f4:	add	x23, x8, w20, uxtw
   352f8:	add	x1, x23, x24
   352fc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   35300:	add	x8, x0, x24
   35304:	cmp	x8, x19
   35308:	b.ls	35360 <ZSTD_endStream@@Base+0x2740c>  // b.plast
   3530c:	ldur	w12, [x29, #-104]
   35310:	ldur	x13, [x29, #-176]
   35314:	sub	w10, w26, w20
   35318:	add	w11, w20, w8
   3531c:	cmp	x8, x10
   35320:	mov	w9, wzr
   35324:	mov	w14, w20
   35328:	sub	w12, w12, w20
   3532c:	add	x13, x13, w25, uxtw #3
   35330:	csel	w26, w11, w26, hi  // hi = pmore
   35334:	cmp	x8, #0x1, lsl #12
   35338:	add	w25, w25, #0x1
   3533c:	stp	w12, w8, [x13]
   35340:	b.hi	352ac <ZSTD_endStream@@Base+0x27358>  // b.pmore
   35344:	ldur	x12, [x29, #-80]
   35348:	ldur	x11, [x29, #-184]
   3534c:	mov	x19, x8
   35350:	add	x10, x12, x8
   35354:	cmp	x10, x11
   35358:	b.ne	35368 <ZSTD_endStream@@Base+0x27414>  // b.any
   3535c:	b	352b0 <ZSTD_endStream@@Base+0x2735c>
   35360:	ldur	x12, [x29, #-80]
   35364:	mov	w14, w20
   35368:	ldrb	w9, [x23, x8]
   3536c:	ldrb	w10, [x12, x8]
   35370:	ldr	w11, [sp, #104]
   35374:	mov	w20, w14
   35378:	cmp	w9, w10
   3537c:	ldr	x9, [sp, #136]
   35380:	and	w11, w14, w11
   35384:	lsl	w11, w11, #1
   35388:	add	x9, x9, w11, uxtw #2
   3538c:	b.cs	353b4 <ZSTD_endStream@@Base+0x27460>  // b.hs, b.nlast
   35390:	ldr	w10, [sp, #96]
   35394:	mov	w23, #0x1c                  	// #28
   35398:	cmp	w20, w10
   3539c:	ldr	x10, [sp, #120]
   353a0:	str	w20, [x10]
   353a4:	b.ls	353e4 <ZSTD_endStream@@Base+0x27490>  // b.plast
   353a8:	add	x9, x9, #0x4
   353ac:	str	x9, [sp, #120]
   353b0:	b	353d8 <ZSTD_endStream@@Base+0x27484>
   353b4:	ldr	w10, [sp, #96]
   353b8:	mov	w23, #0x1c                  	// #28
   353bc:	cmp	w20, w10
   353c0:	ldr	x10, [sp, #112]
   353c4:	str	w20, [x10]
   353c8:	b.ls	353f4 <ZSTD_endStream@@Base+0x274a0>  // b.plast
   353cc:	str	x9, [sp, #112]
   353d0:	mov	x22, x8
   353d4:	mov	x8, x21
   353d8:	ldr	w20, [x9]
   353dc:	mov	w9, #0x1                   	// #1
   353e0:	b	352c4 <ZSTD_endStream@@Base+0x27370>
   353e4:	sub	x10, x29, #0x40
   353e8:	mov	w9, wzr
   353ec:	str	x10, [sp, #120]
   353f0:	b	352c4 <ZSTD_endStream@@Base+0x27370>
   353f4:	sub	x10, x29, #0x40
   353f8:	mov	w9, wzr
   353fc:	str	x10, [sp, #112]
   35400:	mov	x22, x8
   35404:	mov	x8, x21
   35408:	b	352c4 <ZSTD_endStream@@Base+0x27370>
   3540c:	mov	w8, wzr
   35410:	cbnz	w8, 35924 <ZSTD_endStream@@Base+0x279d0>
   35414:	ldp	x10, x8, [sp, #24]
   35418:	ldr	w9, [sp, #240]
   3541c:	ldur	x2, [x29, #-184]
   35420:	ldur	w25, [x29, #-112]
   35424:	mov	x22, xzr
   35428:	str	w9, [x8, x10, lsl #2]
   3542c:	ldp	w20, w26, [sp, #40]
   35430:	mov	x21, xzr
   35434:	add	w8, w9, #0x2
   35438:	stur	w8, [x29, #-104]
   3543c:	b	35464 <ZSTD_endStream@@Base+0x27510>
   35440:	ldur	x12, [x29, #-80]
   35444:	mov	x19, x8
   35448:	mov	w28, w9
   3544c:	mov	x8, x21
   35450:	mov	w23, #0x1c                  	// #28
   35454:	mov	w20, w14
   35458:	ldur	x2, [x29, #-184]
   3545c:	mov	x21, x8
   35460:	tbz	w9, #0, 35738 <ZSTD_endStream@@Base+0x277e4>
   35464:	subs	w28, w28, #0x1
   35468:	b.cc	35738 <ZSTD_endStream@@Base+0x277e4>  // b.lo, b.ul, b.last
   3546c:	ldr	w8, [sp, #208]
   35470:	cmp	w20, w8
   35474:	b.cc	35738 <ZSTD_endStream@@Base+0x277e4>  // b.lo, b.ul, b.last
   35478:	ldr	x8, [sp, #232]
   3547c:	cmp	x21, x22
   35480:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   35484:	add	x0, x12, x24
   35488:	add	x23, x8, w20, uxtw
   3548c:	add	x1, x23, x24
   35490:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   35494:	add	x8, x0, x24
   35498:	cmp	x8, x19
   3549c:	b.ls	354f4 <ZSTD_endStream@@Base+0x275a0>  // b.plast
   354a0:	ldur	w12, [x29, #-104]
   354a4:	ldur	x13, [x29, #-176]
   354a8:	sub	w10, w26, w20
   354ac:	add	w11, w20, w8
   354b0:	cmp	x8, x10
   354b4:	mov	w9, wzr
   354b8:	mov	w14, w20
   354bc:	sub	w12, w12, w20
   354c0:	add	x13, x13, w25, uxtw #3
   354c4:	csel	w26, w11, w26, hi  // hi = pmore
   354c8:	cmp	x8, #0x1, lsl #12
   354cc:	add	w25, w25, #0x1
   354d0:	stp	w12, w8, [x13]
   354d4:	b.hi	35440 <ZSTD_endStream@@Base+0x274ec>  // b.pmore
   354d8:	ldur	x12, [x29, #-80]
   354dc:	ldur	x11, [x29, #-184]
   354e0:	mov	x19, x8
   354e4:	add	x10, x12, x8
   354e8:	cmp	x10, x11
   354ec:	b.ne	354fc <ZSTD_endStream@@Base+0x275a8>  // b.any
   354f0:	b	35444 <ZSTD_endStream@@Base+0x274f0>
   354f4:	ldur	x12, [x29, #-80]
   354f8:	mov	w14, w20
   354fc:	ldrb	w9, [x23, x8]
   35500:	ldrb	w10, [x12, x8]
   35504:	ldr	w11, [sp, #112]
   35508:	mov	w20, w14
   3550c:	cmp	w9, w10
   35510:	ldr	x9, [sp, #120]
   35514:	and	w11, w14, w11
   35518:	lsl	w11, w11, #1
   3551c:	add	x9, x9, w11, uxtw #2
   35520:	b.cs	35548 <ZSTD_endStream@@Base+0x275f4>  // b.hs, b.nlast
   35524:	ldr	w10, [sp, #104]
   35528:	mov	w23, #0x1c                  	// #28
   3552c:	cmp	w20, w10
   35530:	ldr	x10, [sp, #136]
   35534:	str	w20, [x10]
   35538:	b.ls	35578 <ZSTD_endStream@@Base+0x27624>  // b.plast
   3553c:	add	x9, x9, #0x4
   35540:	str	x9, [sp, #136]
   35544:	b	3556c <ZSTD_endStream@@Base+0x27618>
   35548:	ldr	w10, [sp, #104]
   3554c:	mov	w23, #0x1c                  	// #28
   35550:	cmp	w20, w10
   35554:	ldr	x10, [sp, #128]
   35558:	str	w20, [x10]
   3555c:	b.ls	35588 <ZSTD_endStream@@Base+0x27634>  // b.plast
   35560:	str	x9, [sp, #128]
   35564:	mov	x22, x8
   35568:	mov	x8, x21
   3556c:	ldr	w20, [x9]
   35570:	mov	w9, #0x1                   	// #1
   35574:	b	35458 <ZSTD_endStream@@Base+0x27504>
   35578:	sub	x10, x29, #0x40
   3557c:	mov	w9, wzr
   35580:	str	x10, [sp, #136]
   35584:	b	35458 <ZSTD_endStream@@Base+0x27504>
   35588:	sub	x10, x29, #0x40
   3558c:	mov	w9, wzr
   35590:	str	x10, [sp, #128]
   35594:	mov	x22, x8
   35598:	mov	x8, x21
   3559c:	b	35458 <ZSTD_endStream@@Base+0x27504>
   355a0:	ldr	x8, [sp, #112]
   355a4:	str	w26, [sp, #128]
   355a8:	stur	w25, [x29, #-112]
   355ac:	str	wzr, [x8]
   355b0:	ldr	x8, [sp, #120]
   355b4:	str	wzr, [x8]
   355b8:	cbz	w28, 358f4 <ZSTD_endStream@@Base+0x279a0>
   355bc:	ldr	w1, [sp, #4]
   355c0:	mov	w2, #0x5                   	// #5
   355c4:	mov	x0, x12
   355c8:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   355cc:	ldr	x9, [sp, #16]
   355d0:	ldur	x13, [x29, #-88]
   355d4:	mov	x21, xzr
   355d8:	mov	x22, xzr
   355dc:	ldr	x8, [x9, #48]
   355e0:	ldr	w27, [x8, x0, lsl #2]
   355e4:	ldr	x8, [x9, #64]
   355e8:	ldr	x9, [sp, #232]
   355ec:	stur	x8, [x29, #-144]
   355f0:	ldr	x8, [sp, #8]
   355f4:	and	x25, x8, #0xffffffff
   355f8:	ldr	x8, [sp, #48]
   355fc:	add	x26, x9, x8
   35600:	b	3563c <ZSTD_endStream@@Base+0x276e8>
   35604:	ldr	w11, [sp, #44]
   35608:	ldrb	w8, [x10, x9]
   3560c:	ldrb	w10, [x14, x9]
   35610:	ldur	x12, [x29, #-144]
   35614:	and	w11, w27, w11
   35618:	lsl	w11, w11, #1
   3561c:	cmp	w8, w10
   35620:	add	x11, x12, w11, uxtw #2
   35624:	cset	w8, cc  // cc = lo, ul, last
   35628:	ldr	w27, [x11, w8, uxtw #2]
   3562c:	csel	x21, x21, x9, cc  // cc = lo, ul, last
   35630:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   35634:	mov	w8, #0x1                   	// #1
   35638:	tbz	w8, #0, 358f8 <ZSTD_endStream@@Base+0x279a4>
   3563c:	subs	w28, w28, #0x1
   35640:	b.cc	358f8 <ZSTD_endStream@@Base+0x279a4>  // b.lo, b.ul, b.last
   35644:	ldr	w8, [sp, #80]
   35648:	cmp	w27, w8
   3564c:	b.ls	358f8 <ZSTD_endStream@@Base+0x279a4>  // b.plast
   35650:	ldr	x8, [sp, #64]
   35654:	mov	w23, w27
   35658:	ldur	x2, [x29, #-184]
   3565c:	ldr	x3, [sp, #184]
   35660:	add	x20, x8, x23
   35664:	ldur	x8, [x29, #-80]
   35668:	ldr	x4, [sp, #200]
   3566c:	cmp	x22, x21
   35670:	csel	x24, x22, x21, cc  // cc = lo, ul, last
   35674:	add	x0, x8, x24
   35678:	add	x1, x20, x24
   3567c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   35680:	add	x9, x0, x24
   35684:	add	x10, x9, x23
   35688:	add	x8, x26, x23
   3568c:	cmp	x10, x25
   35690:	csel	x10, x20, x8, cc  // cc = lo, ul, last
   35694:	cmp	x9, x19
   35698:	b.ls	3570c <ZSTD_endStream@@Base+0x277b8>  // b.plast
   3569c:	ldr	x11, [sp, #48]
   356a0:	ldr	w16, [sp, #128]
   356a4:	ldur	x12, [x29, #-176]
   356a8:	ldur	w15, [x29, #-112]
   356ac:	ldur	w17, [x29, #-104]
   356b0:	add	w11, w27, w11
   356b4:	sub	w13, w16, w11
   356b8:	add	w14, w11, w9
   356bc:	cmp	x9, x13
   356c0:	mov	w8, wzr
   356c4:	add	x12, x12, w15, uxtw #3
   356c8:	sub	w11, w17, w11
   356cc:	csel	w16, w14, w16, hi  // hi = pmore
   356d0:	cmp	x9, #0x1, lsl #12
   356d4:	add	w15, w15, #0x1
   356d8:	stp	w11, w9, [x12]
   356dc:	str	w16, [sp, #128]
   356e0:	stur	w15, [x29, #-112]
   356e4:	b.hi	35728 <ZSTD_endStream@@Base+0x277d4>  // b.pmore
   356e8:	ldp	x13, x14, [x29, #-88]
   356ec:	ldur	x12, [x29, #-184]
   356f0:	mov	x19, x9
   356f4:	mov	w23, #0x1c                  	// #28
   356f8:	add	x11, x14, x9
   356fc:	cmp	x11, x12
   35700:	b.ne	35714 <ZSTD_endStream@@Base+0x277c0>  // b.any
   35704:	mov	x19, x9
   35708:	b	35638 <ZSTD_endStream@@Base+0x276e4>
   3570c:	ldp	x13, x14, [x29, #-88]
   35710:	mov	w23, #0x1c                  	// #28
   35714:	ldr	w8, [sp, #56]
   35718:	cmp	w27, w8
   3571c:	b.hi	35604 <ZSTD_endStream@@Base+0x276b0>  // b.pmore
   35720:	mov	w8, wzr
   35724:	b	35638 <ZSTD_endStream@@Base+0x276e4>
   35728:	ldur	x13, [x29, #-88]
   3572c:	mov	x19, x9
   35730:	mov	w23, #0x1c                  	// #28
   35734:	b	35638 <ZSTD_endStream@@Base+0x276e4>
   35738:	ldr	x8, [sp, #128]
   3573c:	str	wzr, [x8]
   35740:	ldr	x8, [sp, #136]
   35744:	str	wzr, [x8]
   35748:	cbz	w28, 3590c <ZSTD_endStream@@Base+0x279b8>
   3574c:	ldr	w1, [sp, #4]
   35750:	mov	w2, #0x4                   	// #4
   35754:	mov	x0, x12
   35758:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3575c:	ldr	x9, [sp, #16]
   35760:	ldur	x13, [x29, #-88]
   35764:	mov	x21, xzr
   35768:	mov	x22, xzr
   3576c:	ldr	x8, [x9, #48]
   35770:	ldr	w27, [x8, x0, lsl #2]
   35774:	ldr	x8, [x9, #64]
   35778:	ldr	x9, [sp, #232]
   3577c:	stur	x8, [x29, #-152]
   35780:	ldr	x8, [sp, #8]
   35784:	and	x8, x8, #0xffffffff
   35788:	stur	x8, [x29, #-112]
   3578c:	ldr	x8, [sp, #56]
   35790:	add	x8, x9, x8
   35794:	stur	x8, [x29, #-144]
   35798:	b	357d4 <ZSTD_endStream@@Base+0x27880>
   3579c:	ldr	w11, [sp, #48]
   357a0:	ldrb	w8, [x10, x9]
   357a4:	ldrb	w10, [x14, x9]
   357a8:	ldur	x12, [x29, #-152]
   357ac:	and	w11, w27, w11
   357b0:	lsl	w11, w11, #1
   357b4:	cmp	w8, w10
   357b8:	add	x11, x12, w11, uxtw #2
   357bc:	cset	w8, cc  // cc = lo, ul, last
   357c0:	ldr	w27, [x11, w8, uxtw #2]
   357c4:	csel	x21, x21, x9, cc  // cc = lo, ul, last
   357c8:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   357cc:	mov	w8, #0x1                   	// #1
   357d0:	tbz	w8, #0, 35910 <ZSTD_endStream@@Base+0x279bc>
   357d4:	subs	w28, w28, #0x1
   357d8:	b.cc	35910 <ZSTD_endStream@@Base+0x279bc>  // b.lo, b.ul, b.last
   357dc:	ldr	w8, [sp, #88]
   357e0:	cmp	w27, w8
   357e4:	b.ls	35910 <ZSTD_endStream@@Base+0x279bc>  // b.plast
   357e8:	ldr	x8, [sp, #80]
   357ec:	mov	w23, w27
   357f0:	ldur	x2, [x29, #-184]
   357f4:	ldr	x3, [sp, #184]
   357f8:	add	x20, x8, x23
   357fc:	ldur	x8, [x29, #-80]
   35800:	ldr	x4, [sp, #200]
   35804:	cmp	x22, x21
   35808:	csel	x24, x22, x21, cc  // cc = lo, ul, last
   3580c:	add	x0, x8, x24
   35810:	add	x1, x20, x24
   35814:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   35818:	ldur	x8, [x29, #-144]
   3581c:	ldur	x11, [x29, #-112]
   35820:	add	x9, x0, x24
   35824:	add	x10, x9, x23
   35828:	add	x8, x8, x23
   3582c:	cmp	x10, x11
   35830:	csel	x10, x20, x8, cc  // cc = lo, ul, last
   35834:	cmp	x9, x19
   35838:	b.ls	3589c <ZSTD_endStream@@Base+0x27948>  // b.plast
   3583c:	ldr	x11, [sp, #56]
   35840:	ldur	x12, [x29, #-176]
   35844:	ldur	w15, [x29, #-104]
   35848:	mov	w8, wzr
   3584c:	add	w11, w27, w11
   35850:	sub	w13, w26, w11
   35854:	add	w14, w11, w9
   35858:	cmp	x9, x13
   3585c:	add	x12, x12, w25, uxtw #3
   35860:	sub	w11, w15, w11
   35864:	csel	w26, w14, w26, hi  // hi = pmore
   35868:	cmp	x9, #0x1, lsl #12
   3586c:	add	w25, w25, #0x1
   35870:	stp	w11, w9, [x12]
   35874:	b.hi	358b8 <ZSTD_endStream@@Base+0x27964>  // b.pmore
   35878:	ldp	x13, x14, [x29, #-88]
   3587c:	ldur	x12, [x29, #-184]
   35880:	mov	x19, x9
   35884:	mov	w23, #0x1c                  	// #28
   35888:	add	x11, x14, x9
   3588c:	cmp	x11, x12
   35890:	b.ne	358a4 <ZSTD_endStream@@Base+0x27950>  // b.any
   35894:	mov	x19, x9
   35898:	b	357d0 <ZSTD_endStream@@Base+0x2787c>
   3589c:	ldp	x13, x14, [x29, #-88]
   358a0:	mov	w23, #0x1c                  	// #28
   358a4:	ldr	w8, [sp, #64]
   358a8:	cmp	w27, w8
   358ac:	b.hi	3579c <ZSTD_endStream@@Base+0x27848>  // b.pmore
   358b0:	mov	w8, wzr
   358b4:	b	357d0 <ZSTD_endStream@@Base+0x2787c>
   358b8:	ldur	x13, [x29, #-88]
   358bc:	mov	x19, x9
   358c0:	mov	w23, #0x1c                  	// #28
   358c4:	b	357d0 <ZSTD_endStream@@Base+0x2787c>
   358c8:	ldur	x13, [x29, #-88]
   358cc:	ldur	x9, [x29, #-72]
   358d0:	ldr	x27, [sp, #272]
   358d4:	ldur	x26, [x29, #-96]
   358d8:	sub	w8, w19, #0x8
   358dc:	mov	w20, w25
   358e0:	str	w8, [x9, #36]
   358e4:	ldur	x22, [x29, #-72]
   358e8:	b	3592c <ZSTD_endStream@@Base+0x279d8>
   358ec:	ldr	w24, [sp, #44]
   358f0:	b	35d00 <ZSTD_endStream@@Base+0x27dac>
   358f4:	ldur	x13, [x29, #-88]
   358f8:	ldr	w8, [sp, #128]
   358fc:	ldur	x9, [x29, #-72]
   35900:	ldur	w20, [x29, #-112]
   35904:	sub	w8, w8, #0x8
   35908:	b	3591c <ZSTD_endStream@@Base+0x279c8>
   3590c:	ldur	x13, [x29, #-88]
   35910:	ldur	x9, [x29, #-72]
   35914:	sub	w8, w26, #0x8
   35918:	mov	w20, w25
   3591c:	str	w8, [x9, #36]
   35920:	ldr	x27, [sp, #272]
   35924:	ldur	x22, [x29, #-72]
   35928:	ldur	x26, [x29, #-96]
   3592c:	cbz	w20, 35980 <ZSTD_endStream@@Base+0x27a2c>
   35930:	ldur	x9, [x29, #-176]
   35934:	sub	w8, w20, #0x1
   35938:	ldur	w19, [x29, #-124]
   3593c:	add	x9, x9, w8, uxtw #3
   35940:	ldr	w11, [x9, #4]
   35944:	ldr	w9, [sp, #172]
   35948:	cmp	w11, w9
   3594c:	b.hi	359c0 <ZSTD_endStream@@Base+0x27a6c>  // b.pmore
   35950:	add	w9, w11, w19
   35954:	cmp	w9, #0x1, lsl #12
   35958:	b.cs	359c0 <ZSTD_endStream@@Base+0x27a6c>  // b.hs, b.nlast
   3595c:	ldur	w28, [x29, #-216]
   35960:	ldur	x24, [x29, #-160]
   35964:	ldur	w12, [x29, #-256]
   35968:	mov	w8, wzr
   3596c:	cbz	w8, 35a44 <ZSTD_endStream@@Base+0x27af0>
   35970:	stur	w28, [x29, #-216]
   35974:	cmp	w8, #0x13
   35978:	b.ls	35998 <ZSTD_endStream@@Base+0x27a44>  // b.plast
   3597c:	b	326f0 <ZSTD_endStream@@Base+0x2479c>
   35980:	ldur	w19, [x29, #-124]
   35984:	ldur	x24, [x29, #-160]
   35988:	ldur	w12, [x29, #-256]
   3598c:	mov	w8, #0x13                  	// #19
   35990:	cmp	w8, #0x13
   35994:	b.hi	326f0 <ZSTD_endStream@@Base+0x2479c>  // b.pmore
   35998:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   3599c:	add	x11, x11, #0xb34
   359a0:	adr	x9, 326f0 <ZSTD_endStream@@Base+0x2479c>
   359a4:	ldrh	w10, [x11, x8, lsl #1]
   359a8:	add	x9, x9, x10, lsl #2
   359ac:	br	x9
   359b0:	add	w19, w19, #0x1
   359b4:	cmp	w19, w12
   359b8:	b.ls	34024 <ZSTD_endStream@@Base+0x260d0>  // b.plast
   359bc:	b	36030 <ZSTD_endStream@@Base+0x280dc>
   359c0:	ldr	x9, [sp, #192]
   359c4:	ldur	x10, [x29, #-176]
   359c8:	lsl	x8, x8, #3
   359cc:	ldr	w9, [x9]
   359d0:	ldr	w8, [x10, x8]
   359d4:	str	w8, [sp, #268]
   359d8:	cbz	w9, 359e4 <ZSTD_endStream@@Base+0x27a90>
   359dc:	mov	w8, wzr
   359e0:	b	359ec <ZSTD_endStream@@Base+0x27a98>
   359e4:	madd	x8, x13, x23, x26
   359e8:	ldr	w8, [x8, #12]
   359ec:	sub	w19, w19, w8
   359f0:	ldr	w8, [sp, #264]
   359f4:	ldur	x9, [x29, #-24]
   359f8:	ldur	w25, [x29, #-120]
   359fc:	ldr	x10, [sp, #144]
   35a00:	stur	w8, [x29, #-64]
   35a04:	ldr	w8, [sp, #268]
   35a08:	ldur	x24, [x29, #-160]
   35a0c:	sub	x0, x29, #0x40
   35a10:	mov	w28, w11
   35a14:	stp	w8, w11, [x29, #-60]
   35a18:	ldur	w8, [x29, #-16]
   35a1c:	stur	w25, [x29, #-52]
   35a20:	str	x9, [x10]
   35a24:	str	w8, [x10, #8]
   35a28:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   35a2c:	cmp	w19, #0x1, lsl #12
   35a30:	add	w12, w0, w19
   35a34:	csel	w19, wzr, w19, hi  // hi = pmore
   35a38:	mov	w8, #0x7                   	// #7
   35a3c:	str	w25, [sp, #260]
   35a40:	cbnz	w8, 35970 <ZSTD_endStream@@Base+0x27a1c>
   35a44:	ldr	w8, [sp, #176]
   35a48:	ldr	w9, [sp, #160]
   35a4c:	str	w28, [sp, #248]
   35a50:	mov	x28, xzr
   35a54:	stur	w19, [x29, #-124]
   35a58:	add	w8, w9, w8
   35a5c:	stur	w8, [x29, #-80]
   35a60:	umaddl	x8, w19, w23, x26
   35a64:	add	x8, x8, #0x10
   35a68:	stur	x8, [x29, #-248]
   35a6c:	mov	w8, w20
   35a70:	stur	x8, [x29, #-256]
   35a74:	b	35a98 <ZSTD_endStream@@Base+0x27b44>
   35a78:	mov	w12, w25
   35a7c:	ldur	x28, [x29, #-216]
   35a80:	ldur	x8, [x29, #-256]
   35a84:	ldur	x24, [x29, #-160]
   35a88:	mov	w23, #0x1c                  	// #28
   35a8c:	add	x28, x28, #0x1
   35a90:	cmp	x28, x8
   35a94:	b.cs	35c70 <ZSTD_endStream@@Base+0x27d1c>  // b.hs, b.nlast
   35a98:	ldur	x20, [x29, #-176]
   35a9c:	ldur	x0, [x29, #-248]
   35aa0:	ldur	w2, [x29, #-240]
   35aa4:	mov	w25, w12
   35aa8:	add	x19, x20, x28, lsl #3
   35aac:	ldr	w1, [x19]
   35ab0:	stur	w1, [x29, #-88]
   35ab4:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   35ab8:	stp	x1, x0, [x29, #-112]
   35abc:	ldr	w27, [x19, #4]
   35ac0:	ldr	w21, [sp, #284]
   35ac4:	cbz	x28, 35ad8 <ZSTD_endStream@@Base+0x27b84>
   35ac8:	sub	w8, w28, #0x1
   35acc:	add	x8, x20, w8, uxtw #3
   35ad0:	ldr	w8, [x8, #4]
   35ad4:	add	w21, w8, #0x1
   35ad8:	ldur	w19, [x29, #-124]
   35adc:	cmp	w27, w21
   35ae0:	mov	w20, #0x40000000            	// #1073741824
   35ae4:	stur	x28, [x29, #-216]
   35ae8:	b.cc	35a78 <ZSTD_endStream@@Base+0x27b24>  // b.lo, b.ul, b.last
   35aec:	ldur	w8, [x29, #-88]
   35af0:	add	w0, w8, #0x1
   35af4:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   35af8:	mov	w8, #0xffffda33            	// #-9677
   35afc:	add	w8, w8, w0, lsl #9
   35b00:	cmp	w0, #0x13
   35b04:	mov	w10, #0x33                  	// #51
   35b08:	lsl	w9, w0, #8
   35b0c:	csel	w8, w8, w10, hi  // hi = pmore
   35b10:	stur	w8, [x29, #-144]
   35b14:	add	w8, w9, #0x1, lsl #12
   35b18:	mov	w23, w0
   35b1c:	stur	w8, [x29, #-152]
   35b20:	add	w8, w27, w19
   35b24:	mov	w12, w25
   35b28:	ldr	w9, [x22, #152]
   35b2c:	mov	w25, w8
   35b30:	add	w28, w27, w19
   35b34:	sub	w26, w27, #0x3
   35b38:	cmp	w9, #0x1
   35b3c:	b.ne	35b5c <ZSTD_endStream@@Base+0x27c08>  // b.any
   35b40:	mov	w0, w26
   35b44:	mov	w24, w12
   35b48:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   35b4c:	ldur	w8, [x29, #-152]
   35b50:	mov	w12, w24
   35b54:	add	w8, w8, w0
   35b58:	b	35bd0 <ZSTD_endStream@@Base+0x27c7c>
   35b5c:	ldr	x8, [x22, #96]
   35b60:	ldr	w20, [x22, #148]
   35b64:	mov	w24, w12
   35b68:	ldr	w0, [x8, x23, lsl #2]
   35b6c:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   35b70:	mov	w19, w0
   35b74:	mov	w0, w26
   35b78:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   35b7c:	mov	w8, w0
   35b80:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   35b84:	ldr	x9, [x22, #88]
   35b88:	lsl	x8, x8, #2
   35b8c:	add	x10, x10, #0xca8
   35b90:	ldr	w26, [x10, x8]
   35b94:	ldur	x10, [x29, #-72]
   35b98:	ldr	w0, [x9, x8]
   35b9c:	ldr	w22, [x10, #144]
   35ba0:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   35ba4:	ldur	w9, [x29, #-144]
   35ba8:	add	w8, w26, w23
   35bac:	mov	w12, w24
   35bb0:	add	w9, w20, w9
   35bb4:	sub	w9, w9, w19
   35bb8:	ldur	w19, [x29, #-124]
   35bbc:	add	w9, w9, w22
   35bc0:	ldur	x22, [x29, #-72]
   35bc4:	add	w8, w9, w8, lsl #8
   35bc8:	mov	w20, #0x40000000            	// #1073741824
   35bcc:	sub	w8, w8, w0
   35bd0:	ldur	w9, [x29, #-80]
   35bd4:	ldur	x26, [x29, #-96]
   35bd8:	cmp	w28, w12
   35bdc:	add	w8, w9, w8
   35be0:	b.hi	35c00 <ZSTD_endStream@@Base+0x27cac>  // b.pmore
   35be4:	mov	w9, #0x1c                  	// #28
   35be8:	umull	x9, w28, w9
   35bec:	ldr	w9, [x26, x9]
   35bf0:	cmp	w8, w9
   35bf4:	b.ge	35c54 <ZSTD_endStream@@Base+0x27d00>  // b.tcont
   35bf8:	cmp	w28, w12
   35bfc:	b.ls	35c24 <ZSTD_endStream@@Base+0x27cd0>  // b.plast
   35c00:	ldur	x10, [x29, #-136]
   35c04:	mov	w11, #0x1c                  	// #28
   35c08:	mov	w9, w12
   35c0c:	umaddl	x10, w12, w11, x10
   35c10:	add	x9, x9, #0x1
   35c14:	cmp	x25, x9
   35c18:	str	w20, [x10], #28
   35c1c:	b.ne	35c10 <ZSTD_endStream@@Base+0x27cbc>  // b.any
   35c20:	mov	w12, w9
   35c24:	ldur	w11, [x29, #-120]
   35c28:	mov	w10, #0x1c                  	// #28
   35c2c:	umaddl	x10, w28, w10, x26
   35c30:	mov	w9, wzr
   35c34:	stp	w27, w11, [x10, #8]
   35c38:	ldur	w11, [x29, #-88]
   35c3c:	stp	w8, w11, [x10]
   35c40:	ldur	x8, [x29, #-104]
   35c44:	str	x8, [x10, #16]
   35c48:	ldur	x8, [x29, #-112]
   35c4c:	str	w8, [x10, #24]
   35c50:	b	35c58 <ZSTD_endStream@@Base+0x27d04>
   35c54:	mov	w9, #0x1                   	// #1
   35c58:	sub	w27, w27, #0x1
   35c5c:	cmp	w27, w21
   35c60:	b.cc	35a7c <ZSTD_endStream@@Base+0x27b28>  // b.lo, b.ul, b.last
   35c64:	sub	w8, w25, #0x1
   35c68:	cbz	w9, 35b28 <ZSTD_endStream@@Base+0x27bd4>
   35c6c:	b	35a7c <ZSTD_endStream@@Base+0x27b28>
   35c70:	ldr	w9, [sp, #248]
   35c74:	ldr	x27, [sp, #272]
   35c78:	mov	w8, wzr
   35c7c:	stur	w9, [x29, #-216]
   35c80:	cmp	w8, #0x13
   35c84:	b.ls	35998 <ZSTD_endStream@@Base+0x27a44>  // b.plast
   35c88:	b	326f0 <ZSTD_endStream@@Base+0x2479c>
   35c8c:	ldp	x13, x12, [x29, #-88]
   35c90:	b	35cf0 <ZSTD_endStream@@Base+0x27d9c>
   35c94:	ldur	w9, [x29, #-152]
   35c98:	add	w8, w21, #0x2
   35c9c:	cmp	x0, w9, uxtw
   35ca0:	ldur	x9, [x29, #-176]
   35ca4:	stp	w8, w0, [x9]
   35ca8:	ldur	x12, [x29, #-80]
   35cac:	b.hi	35ccc <ZSTD_endStream@@Base+0x27d78>  // b.pmore
   35cb0:	ldur	x9, [x29, #-184]
   35cb4:	add	x8, x12, x0
   35cb8:	cmp	x8, x9
   35cbc:	b.eq	35ccc <ZSTD_endStream@@Base+0x27d78>  // b.none
   35cc0:	mov	w8, wzr
   35cc4:	mov	w28, #0x1                   	// #1
   35cc8:	b	35ce4 <ZSTD_endStream@@Base+0x27d90>
   35ccc:	ldr	w8, [sp, #248]
   35cd0:	mov	w28, #0x1                   	// #1
   35cd4:	mov	w20, #0x1                   	// #1
   35cd8:	add	w9, w8, #0x1
   35cdc:	mov	w8, #0x1                   	// #1
   35ce0:	str	w9, [x22, #36]
   35ce4:	ldur	x13, [x29, #-88]
   35ce8:	mov	x19, x0
   35cec:	cbnz	w8, 35cf8 <ZSTD_endStream@@Base+0x27da4>
   35cf0:	mov	w8, wzr
   35cf4:	mov	x0, x19
   35cf8:	mov	x19, x0
   35cfc:	cbnz	w8, 3592c <ZSTD_endStream@@Base+0x279d8>
   35d00:	ldp	x10, x8, [sp, #24]
   35d04:	ldr	w9, [sp, #248]
   35d08:	mov	w20, w28
   35d0c:	ldur	x2, [x29, #-184]
   35d10:	ldr	w26, [sp, #136]
   35d14:	ldr	w28, [sp, #40]
   35d18:	mov	x22, xzr
   35d1c:	mov	x21, xzr
   35d20:	str	w9, [x8, x10, lsl #2]
   35d24:	add	w8, w9, #0x2
   35d28:	stur	w8, [x29, #-104]
   35d2c:	b	35d50 <ZSTD_endStream@@Base+0x27dfc>
   35d30:	add	x9, x9, #0x4
   35d34:	str	x9, [sp, #128]
   35d38:	ldr	w24, [x9]
   35d3c:	mov	w23, #0x1c                  	// #28
   35d40:	mov	w9, #0x1                   	// #1
   35d44:	ldur	x2, [x29, #-184]
   35d48:	mov	x21, x8
   35d4c:	tbz	w9, #0, 35e7c <ZSTD_endStream@@Base+0x27f28>
   35d50:	subs	w28, w28, #0x1
   35d54:	b.cc	35e7c <ZSTD_endStream@@Base+0x27f28>  // b.lo, b.ul, b.last
   35d58:	ldr	w8, [sp, #200]
   35d5c:	cmp	w24, w8
   35d60:	b.cc	35e7c <ZSTD_endStream@@Base+0x27f28>  // b.lo, b.ul, b.last
   35d64:	ldr	x8, [sp, #208]
   35d68:	cmp	x21, x22
   35d6c:	csel	x25, x21, x22, cc  // cc = lo, ul, last
   35d70:	add	x0, x12, x25
   35d74:	add	x23, x8, w24, uxtw
   35d78:	add	x1, x23, x25
   35d7c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   35d80:	add	x8, x0, x25
   35d84:	cmp	x8, x19
   35d88:	b.ls	35ddc <ZSTD_endStream@@Base+0x27e88>  // b.plast
   35d8c:	ldur	w12, [x29, #-104]
   35d90:	ldur	x13, [x29, #-176]
   35d94:	sub	w10, w26, w24
   35d98:	add	w11, w24, w8
   35d9c:	cmp	x8, x10
   35da0:	mov	w9, wzr
   35da4:	sub	w12, w12, w24
   35da8:	add	x13, x13, w20, uxtw #3
   35dac:	csel	w26, w11, w26, hi  // hi = pmore
   35db0:	cmp	x8, #0x1, lsl #12
   35db4:	add	w20, w20, #0x1
   35db8:	stp	w12, w8, [x13]
   35dbc:	b.hi	35e64 <ZSTD_endStream@@Base+0x27f10>  // b.pmore
   35dc0:	ldur	x12, [x29, #-80]
   35dc4:	ldur	x11, [x29, #-184]
   35dc8:	mov	x19, x8
   35dcc:	add	x10, x12, x8
   35dd0:	cmp	x10, x11
   35dd4:	b.ne	35de0 <ZSTD_endStream@@Base+0x27e8c>  // b.any
   35dd8:	b	35e68 <ZSTD_endStream@@Base+0x27f14>
   35ddc:	ldur	x12, [x29, #-80]
   35de0:	ldrb	w9, [x23, x8]
   35de4:	ldrb	w10, [x12, x8]
   35de8:	ldr	w11, [sp, #104]
   35dec:	cmp	w9, w10
   35df0:	ldr	x9, [sp, #112]
   35df4:	and	w11, w24, w11
   35df8:	lsl	w11, w11, #1
   35dfc:	add	x9, x9, w11, uxtw #2
   35e00:	b.cs	35e2c <ZSTD_endStream@@Base+0x27ed8>  // b.hs, b.nlast
   35e04:	ldr	w10, [sp, #96]
   35e08:	cmp	w24, w10
   35e0c:	ldr	x10, [sp, #128]
   35e10:	str	w24, [x10]
   35e14:	b.hi	35d30 <ZSTD_endStream@@Base+0x27ddc>  // b.pmore
   35e18:	sub	x10, x29, #0x40
   35e1c:	mov	w9, wzr
   35e20:	str	x10, [sp, #128]
   35e24:	mov	w23, #0x1c                  	// #28
   35e28:	b	35d44 <ZSTD_endStream@@Base+0x27df0>
   35e2c:	ldr	w10, [sp, #96]
   35e30:	cmp	w24, w10
   35e34:	ldr	x10, [sp, #120]
   35e38:	str	w24, [x10]
   35e3c:	b.ls	35e50 <ZSTD_endStream@@Base+0x27efc>  // b.plast
   35e40:	str	x9, [sp, #120]
   35e44:	mov	x22, x8
   35e48:	mov	x8, x21
   35e4c:	b	35d38 <ZSTD_endStream@@Base+0x27de4>
   35e50:	sub	x10, x29, #0x40
   35e54:	mov	w9, wzr
   35e58:	str	x10, [sp, #120]
   35e5c:	mov	x22, x8
   35e60:	b	35e70 <ZSTD_endStream@@Base+0x27f1c>
   35e64:	ldur	x12, [x29, #-80]
   35e68:	mov	x19, x8
   35e6c:	mov	w28, w9
   35e70:	mov	x8, x21
   35e74:	mov	w23, #0x1c                  	// #28
   35e78:	b	35d44 <ZSTD_endStream@@Base+0x27df0>
   35e7c:	ldr	x8, [sp, #120]
   35e80:	str	w26, [sp, #136]
   35e84:	str	wzr, [x8]
   35e88:	ldr	x8, [sp, #128]
   35e8c:	str	wzr, [x8]
   35e90:	cbz	w28, 36000 <ZSTD_endStream@@Base+0x280ac>
   35e94:	ldr	w1, [sp, #4]
   35e98:	mov	w2, #0x3                   	// #3
   35e9c:	mov	x0, x12
   35ea0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   35ea4:	ldr	x9, [sp, #16]
   35ea8:	ldur	x13, [x29, #-88]
   35eac:	mov	x21, xzr
   35eb0:	mov	x22, xzr
   35eb4:	ldr	x8, [x9, #48]
   35eb8:	ldr	w26, [x8, x0, lsl #2]
   35ebc:	ldr	x8, [x9, #64]
   35ec0:	ldr	x9, [sp, #208]
   35ec4:	stur	x8, [x29, #-144]
   35ec8:	ldr	x8, [sp, #8]
   35ecc:	and	x8, x8, #0xffffffff
   35ed0:	stur	x8, [x29, #-112]
   35ed4:	ldr	x8, [sp, #56]
   35ed8:	add	x27, x9, x8
   35edc:	b	35f18 <ZSTD_endStream@@Base+0x27fc4>
   35ee0:	ldr	w11, [sp, #48]
   35ee4:	ldrb	w8, [x10, x9]
   35ee8:	ldrb	w10, [x14, x9]
   35eec:	ldur	x12, [x29, #-144]
   35ef0:	and	w11, w26, w11
   35ef4:	lsl	w11, w11, #1
   35ef8:	cmp	w8, w10
   35efc:	add	x11, x12, w11, uxtw #2
   35f00:	cset	w8, cc  // cc = lo, ul, last
   35f04:	ldr	w26, [x11, w8, uxtw #2]
   35f08:	csel	x21, x21, x9, cc  // cc = lo, ul, last
   35f0c:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   35f10:	mov	w8, #0x1                   	// #1
   35f14:	tbz	w8, #0, 36004 <ZSTD_endStream@@Base+0x280b0>
   35f18:	subs	w28, w28, #0x1
   35f1c:	b.cc	36004 <ZSTD_endStream@@Base+0x280b0>  // b.lo, b.ul, b.last
   35f20:	ldr	w8, [sp, #88]
   35f24:	cmp	w26, w8
   35f28:	b.ls	36004 <ZSTD_endStream@@Base+0x280b0>  // b.plast
   35f2c:	ldr	x8, [sp, #80]
   35f30:	mov	w23, w26
   35f34:	ldur	x2, [x29, #-184]
   35f38:	ldp	x3, x4, [sp, #216]
   35f3c:	add	x24, x8, x23
   35f40:	ldur	x8, [x29, #-80]
   35f44:	cmp	x22, x21
   35f48:	csel	x25, x22, x21, cc  // cc = lo, ul, last
   35f4c:	add	x1, x24, x25
   35f50:	add	x0, x8, x25
   35f54:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   35f58:	ldur	x11, [x29, #-112]
   35f5c:	add	x9, x0, x25
   35f60:	add	x10, x9, x23
   35f64:	add	x8, x27, x23
   35f68:	cmp	x10, x11
   35f6c:	csel	x10, x24, x8, cc  // cc = lo, ul, last
   35f70:	cmp	x9, x19
   35f74:	b.ls	35fe4 <ZSTD_endStream@@Base+0x28090>  // b.plast
   35f78:	ldr	x11, [sp, #56]
   35f7c:	ldur	x12, [x29, #-176]
   35f80:	ldr	w15, [sp, #136]
   35f84:	ldur	w16, [x29, #-104]
   35f88:	add	w11, w26, w11
   35f8c:	add	x12, x12, w20, uxtw #3
   35f90:	sub	w13, w15, w11
   35f94:	add	w14, w11, w9
   35f98:	sub	w11, w16, w11
   35f9c:	stp	w11, w9, [x12]
   35fa0:	cmp	x9, x13
   35fa4:	ldur	x13, [x29, #-88]
   35fa8:	mov	w8, wzr
   35fac:	csel	w15, w14, w15, hi  // hi = pmore
   35fb0:	cmp	x9, #0x1, lsl #12
   35fb4:	add	w20, w20, #0x1
   35fb8:	mov	w23, #0x1c                  	// #28
   35fbc:	str	w15, [sp, #136]
   35fc0:	b.hi	35fdc <ZSTD_endStream@@Base+0x28088>  // b.pmore
   35fc4:	ldur	x14, [x29, #-80]
   35fc8:	ldur	x12, [x29, #-184]
   35fcc:	mov	x19, x9
   35fd0:	add	x11, x14, x9
   35fd4:	cmp	x11, x12
   35fd8:	b.ne	35fec <ZSTD_endStream@@Base+0x28098>  // b.any
   35fdc:	mov	x19, x9
   35fe0:	b	35f14 <ZSTD_endStream@@Base+0x27fc0>
   35fe4:	ldp	x13, x14, [x29, #-88]
   35fe8:	mov	w23, #0x1c                  	// #28
   35fec:	ldr	w8, [sp, #64]
   35ff0:	cmp	w26, w8
   35ff4:	b.hi	35ee0 <ZSTD_endStream@@Base+0x27f8c>  // b.pmore
   35ff8:	mov	w8, wzr
   35ffc:	b	35f14 <ZSTD_endStream@@Base+0x27fc0>
   36000:	ldur	x13, [x29, #-88]
   36004:	ldr	w8, [sp, #136]
   36008:	ldur	x22, [x29, #-72]
   3600c:	ldr	x27, [sp, #272]
   36010:	ldur	x26, [x29, #-96]
   36014:	sub	w8, w8, #0x8
   36018:	str	w8, [x22, #36]
   3601c:	b	3592c <ZSTD_endStream@@Base+0x279d8>
   36020:	ldr	w20, [sp, #264]
   36024:	ldr	w21, [sp, #268]
   36028:	ldr	w22, [sp, #260]
   3602c:	b	360b4 <ZSTD_endStream@@Base+0x28160>
   36030:	umaddl	x8, w12, w23, x26
   36034:	ldp	w20, w21, [x8]
   36038:	ldr	w9, [x8, #24]
   3603c:	ldr	x10, [x8, #16]
   36040:	ldp	w11, w22, [x8, #8]
   36044:	stp	w20, w21, [x29, #-64]
   36048:	stur	w9, [x29, #-16]
   3604c:	stur	x10, [x29, #-24]
   36050:	stp	w11, w22, [x29, #-56]
   36054:	ldr	w9, [x8, #24]
   36058:	ldr	x8, [x8, #16]
   3605c:	ldr	x19, [sp, #144]
   36060:	sub	x0, x29, #0x40
   36064:	stur	w11, [x29, #-216]
   36068:	mov	w25, w12
   3606c:	str	w9, [x19, #8]
   36070:	str	x8, [x19]
   36074:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   36078:	cmp	w25, w0
   3607c:	b.ls	360b0 <ZSTD_endStream@@Base+0x2815c>  // b.plast
   36080:	ldur	w8, [x29, #-16]
   36084:	ldur	x9, [x29, #-24]
   36088:	ldur	w11, [x29, #-216]
   3608c:	sub	x0, x29, #0x40
   36090:	stp	w20, w21, [x29, #-64]
   36094:	stp	w11, w22, [x29, #-56]
   36098:	str	w8, [x19, #8]
   3609c:	str	x9, [x19]
   360a0:	mov	w19, w25
   360a4:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   360a8:	sub	w19, w25, w0
   360ac:	b	360b4 <ZSTD_endStream@@Base+0x28160>
   360b0:	mov	w19, wzr
   360b4:	mov	w11, w19
   360b8:	add	w19, w19, #0x1
   360bc:	umaddl	x8, w19, w23, x26
   360c0:	str	w20, [sp, #264]
   360c4:	stp	w20, w21, [x8]
   360c8:	ldur	w9, [x29, #-216]
   360cc:	str	w21, [sp, #268]
   360d0:	mov	w20, w11
   360d4:	mov	w21, w11
   360d8:	stp	w9, w22, [x8, #8]
   360dc:	ldur	w9, [x29, #-16]
   360e0:	ldur	x10, [x29, #-24]
   360e4:	str	w22, [sp, #260]
   360e8:	stur	w11, [x29, #-124]
   360ec:	str	w9, [x8, #24]
   360f0:	str	x10, [x8, #16]
   360f4:	cbz	w11, 36140 <ZSTD_endStream@@Base+0x281ec>
   360f8:	umaddl	x22, w21, w23, x26
   360fc:	ldur	q0, [x22, #12]
   36100:	ldr	q1, [x22]
   36104:	sub	x0, x29, #0x40
   36108:	stur	q0, [x29, #-52]
   3610c:	stur	q1, [x29, #-64]
   36110:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   36114:	ldur	q0, [x22, #12]
   36118:	ldr	q1, [x22]
   3611c:	subs	w9, w21, w0
   36120:	umaddl	x8, w20, w23, x26
   36124:	sub	w20, w20, #0x1
   36128:	csel	w21, wzr, w9, cc  // cc = lo, ul, last
   3612c:	stur	q0, [x8, #12]
   36130:	str	q1, [x8]
   36134:	b.hi	360f8 <ZSTD_endStream@@Base+0x281a4>  // b.pmore
   36138:	add	w28, w20, #0x1
   3613c:	b	36144 <ZSTD_endStream@@Base+0x281f0>
   36140:	mov	w28, w19
   36144:	ldur	x21, [x29, #-168]
   36148:	ldur	x22, [x29, #-72]
   3614c:	cmp	w28, w19
   36150:	b.ls	3618c <ZSTD_endStream@@Base+0x28238>  // b.plast
   36154:	ldur	x0, [x29, #-200]
   36158:	mov	w1, wzr
   3615c:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   36160:	b	326f4 <ZSTD_endStream@@Base+0x247a0>
   36164:	ldur	x21, [x29, #-168]
   36168:	add	x27, x27, w9, uxtw
   3616c:	strh	w8, [x10, #6]
   36170:	add	x8, x10, #0x8
   36174:	mov	x24, x27
   36178:	mov	w23, #0x1c                  	// #28
   3617c:	str	x8, [x13, #8]
   36180:	add	w28, w28, #0x1
   36184:	cmp	w28, w19
   36188:	b.hi	36154 <ZSTD_endStream@@Base+0x28200>  // b.pmore
   3618c:	umaddl	x8, w28, w23, x26
   36190:	ldp	w24, w20, [x8, #8]
   36194:	cbz	w24, 361b8 <ZSTD_endStream@@Base+0x28264>
   36198:	ldr	w25, [x8, #4]
   3619c:	cmp	w25, #0x3
   361a0:	b.cc	361c0 <ZSTD_endStream@@Base+0x2826c>  // b.lo, b.ul, b.last
   361a4:	ldp	w9, w8, [x21]
   361a8:	stp	w9, w8, [x21, #4]
   361ac:	ldur	x22, [x29, #-224]
   361b0:	sub	w8, w25, #0x2
   361b4:	b	36208 <ZSTD_endStream@@Base+0x282b4>
   361b8:	add	x24, x27, x20
   361bc:	b	36180 <ZSTD_endStream@@Base+0x2822c>
   361c0:	ldur	x22, [x29, #-224]
   361c4:	cmp	w20, #0x0
   361c8:	cinc	w9, w25, eq  // eq = none
   361cc:	cbz	w9, 3620c <ZSTD_endStream@@Base+0x282b8>
   361d0:	cmp	w9, #0x3
   361d4:	b.ne	361ec <ZSTD_endStream@@Base+0x28298>  // b.any
   361d8:	ldr	w8, [x21]
   361dc:	sub	w8, w8, #0x1
   361e0:	cmp	w9, #0x2
   361e4:	b.cs	361f8 <ZSTD_endStream@@Base+0x282a4>  // b.hs, b.nlast
   361e8:	b	36200 <ZSTD_endStream@@Base+0x282ac>
   361ec:	ldr	w8, [x21, w9, uxtw #2]
   361f0:	cmp	w9, #0x2
   361f4:	b.cc	36200 <ZSTD_endStream@@Base+0x282ac>  // b.lo, b.ul, b.last
   361f8:	ldr	w9, [x21, #4]
   361fc:	str	w9, [x21, #8]
   36200:	ldr	w9, [x21]
   36204:	str	w9, [x21, #4]
   36208:	str	w8, [x21]
   3620c:	ldur	x0, [x29, #-200]
   36210:	mov	w1, w20
   36214:	mov	x2, x27
   36218:	mov	w3, w25
   3621c:	mov	w4, w24
   36220:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   36224:	ldur	x8, [x29, #-192]
   36228:	add	x2, x27, x20
   3622c:	mov	x23, x27
   36230:	mov	x1, x27
   36234:	ldr	x0, [x8, #24]
   36238:	cmp	x2, x22
   3623c:	b.ls	3624c <ZSTD_endStream@@Base+0x282f8>  // b.plast
   36240:	mov	x3, x22
   36244:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   36248:	b	362b8 <ZSTD_endStream@@Base+0x28364>
   3624c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   36250:	cmp	w20, #0x11
   36254:	b.cc	362b8 <ZSTD_endStream@@Base+0x28364>  // b.lo, b.ul, b.last
   36258:	ldur	x8, [x29, #-192]
   3625c:	add	x1, x23, #0x10
   36260:	mov	x21, x23
   36264:	ldr	x22, [x8, #24]
   36268:	add	x0, x22, #0x10
   3626c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   36270:	add	x0, x22, #0x20
   36274:	add	x1, x23, #0x20
   36278:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3627c:	cmp	w20, #0x31
   36280:	b.cc	362b8 <ZSTD_endStream@@Base+0x28364>  // b.lo, b.ul, b.last
   36284:	add	x21, x22, x20
   36288:	add	x26, x22, #0x30
   3628c:	add	x27, x23, #0x40
   36290:	sub	x1, x27, #0x10
   36294:	mov	x0, x26
   36298:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3629c:	add	x0, x26, #0x10
   362a0:	mov	x1, x27
   362a4:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   362a8:	add	x26, x26, #0x20
   362ac:	cmp	x26, x21
   362b0:	add	x27, x27, #0x20
   362b4:	b.cc	36290 <ZSTD_endStream@@Base+0x2833c>  // b.lo, b.ul, b.last
   362b8:	ldur	x13, [x29, #-192]
   362bc:	sub	w8, w24, #0x3
   362c0:	cmp	w20, #0x10, lsl #12
   362c4:	ldr	x9, [x13, #24]
   362c8:	add	x9, x9, x20
   362cc:	str	x9, [x13, #24]
   362d0:	b.cc	362e8 <ZSTD_endStream@@Base+0x28394>  // b.lo, b.ul, b.last
   362d4:	ldp	x10, x9, [x13]
   362d8:	sub	x9, x9, x10
   362dc:	lsr	x9, x9, #3
   362e0:	mov	w10, #0x1                   	// #1
   362e4:	stp	w10, w9, [x13, #72]
   362e8:	ldr	x10, [x13, #8]
   362ec:	ldur	x22, [x29, #-72]
   362f0:	ldur	x26, [x29, #-96]
   362f4:	add	w9, w24, w20
   362f8:	add	w11, w25, #0x1
   362fc:	cmp	w8, #0x10, lsl #12
   36300:	mov	x27, x23
   36304:	strh	w20, [x10, #4]
   36308:	str	w11, [x10]
   3630c:	b.cc	36164 <ZSTD_endStream@@Base+0x28210>  // b.lo, b.ul, b.last
   36310:	ldp	x12, x11, [x13]
   36314:	sub	x11, x11, x12
   36318:	lsr	x11, x11, #3
   3631c:	mov	w12, #0x2                   	// #2
   36320:	stp	w12, w11, [x13, #72]
   36324:	b	36164 <ZSTD_endStream@@Base+0x28210>
   36328:	ldur	x20, [x29, #-208]
   3632c:	b	3638c <ZSTD_endStream@@Base+0x28438>
   36330:	ldur	w9, [x29, #-104]
   36334:	add	w8, w20, #0x2
   36338:	cmp	x0, w9, uxtw
   3633c:	ldur	x9, [x29, #-176]
   36340:	stp	w8, w0, [x9]
   36344:	b.hi	36368 <ZSTD_endStream@@Base+0x28414>  // b.pmore
   36348:	ldur	x8, [x29, #-160]
   3634c:	ldur	x9, [x29, #-184]
   36350:	add	x8, x8, x0
   36354:	cmp	x8, x9
   36358:	b.eq	36368 <ZSTD_endStream@@Base+0x28414>  // b.none
   3635c:	mov	w8, wzr
   36360:	mov	w24, #0x1                   	// #1
   36364:	b	36380 <ZSTD_endStream@@Base+0x2842c>
   36368:	ldur	w8, [x29, #-120]
   3636c:	mov	w24, #0x1                   	// #1
   36370:	mov	w19, #0x1                   	// #1
   36374:	add	w9, w8, #0x1
   36378:	mov	w8, #0x1                   	// #1
   3637c:	str	w9, [x22, #36]
   36380:	ldur	x20, [x29, #-208]
   36384:	mov	x27, x0
   36388:	cbnz	w8, 36394 <ZSTD_endStream@@Base+0x28440>
   3638c:	mov	w8, wzr
   36390:	mov	x0, x27
   36394:	mov	x27, x0
   36398:	cbnz	w8, 366c0 <ZSTD_endStream@@Base+0x2876c>
   3639c:	ldp	x9, x8, [sp, #88]
   363a0:	ldur	w28, [x29, #-120]
   363a4:	ldur	x2, [x29, #-184]
   363a8:	ldur	x0, [x29, #-160]
   363ac:	ldr	w25, [sp, #120]
   363b0:	str	w28, [x8, x9, lsl #2]
   363b4:	add	w8, w28, #0x2
   363b8:	ldr	w26, [sp, #112]
   363bc:	ldr	w20, [sp, #104]
   363c0:	ldr	x28, [sp, #128]
   363c4:	mov	x22, xzr
   363c8:	mov	x21, xzr
   363cc:	mov	w19, w24
   363d0:	stur	w8, [x29, #-88]
   363d4:	b	363f8 <ZSTD_endStream@@Base+0x284a4>
   363d8:	add	x9, x9, #0x4
   363dc:	str	x9, [sp, #232]
   363e0:	ldr	w20, [x9]
   363e4:	mov	w23, #0x1c                  	// #28
   363e8:	mov	w9, #0x1                   	// #1
   363ec:	ldur	x2, [x29, #-184]
   363f0:	mov	x21, x8
   363f4:	tbz	w9, #0, 36520 <ZSTD_endStream@@Base+0x285cc>
   363f8:	subs	w26, w26, #0x1
   363fc:	b.cc	36520 <ZSTD_endStream@@Base+0x285cc>  // b.lo, b.ul, b.last
   36400:	ldr	w8, [sp, #248]
   36404:	cmp	w20, w8
   36408:	b.cc	36520 <ZSTD_endStream@@Base+0x285cc>  // b.lo, b.ul, b.last
   3640c:	cmp	x21, x22
   36410:	add	x23, x28, w20, uxtw
   36414:	csel	x24, x21, x22, cc  // cc = lo, ul, last
   36418:	add	x0, x0, x24
   3641c:	add	x1, x23, x24
   36420:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   36424:	add	x8, x0, x24
   36428:	cmp	x8, x27
   3642c:	b.ls	36480 <ZSTD_endStream@@Base+0x2852c>  // b.plast
   36430:	ldur	w12, [x29, #-88]
   36434:	ldur	x13, [x29, #-176]
   36438:	sub	w10, w25, w20
   3643c:	add	w11, w20, w8
   36440:	cmp	x8, x10
   36444:	mov	w9, wzr
   36448:	sub	w12, w12, w20
   3644c:	add	x13, x13, w19, uxtw #3
   36450:	csel	w25, w11, w25, hi  // hi = pmore
   36454:	cmp	x8, #0x1, lsl #12
   36458:	add	w19, w19, #0x1
   3645c:	stp	w12, w8, [x13]
   36460:	b.hi	36508 <ZSTD_endStream@@Base+0x285b4>  // b.pmore
   36464:	ldur	x0, [x29, #-160]
   36468:	ldur	x11, [x29, #-184]
   3646c:	mov	x27, x8
   36470:	add	x10, x0, x8
   36474:	cmp	x10, x11
   36478:	b.ne	36484 <ZSTD_endStream@@Base+0x28530>  // b.any
   3647c:	b	3650c <ZSTD_endStream@@Base+0x285b8>
   36480:	ldur	x0, [x29, #-160]
   36484:	ldrb	w9, [x23, x8]
   36488:	ldrb	w10, [x0, x8]
   3648c:	ldr	w11, [sp, #208]
   36490:	cmp	w9, w10
   36494:	ldr	x9, [sp, #216]
   36498:	and	w11, w20, w11
   3649c:	lsl	w11, w11, #1
   364a0:	add	x9, x9, w11, uxtw #2
   364a4:	b.cs	364d0 <ZSTD_endStream@@Base+0x2857c>  // b.hs, b.nlast
   364a8:	ldr	w10, [sp, #200]
   364ac:	cmp	w20, w10
   364b0:	ldr	x10, [sp, #232]
   364b4:	str	w20, [x10]
   364b8:	b.hi	363d8 <ZSTD_endStream@@Base+0x28484>  // b.pmore
   364bc:	sub	x10, x29, #0x40
   364c0:	mov	w9, wzr
   364c4:	str	x10, [sp, #232]
   364c8:	mov	w23, #0x1c                  	// #28
   364cc:	b	363ec <ZSTD_endStream@@Base+0x28498>
   364d0:	ldr	w10, [sp, #200]
   364d4:	cmp	w20, w10
   364d8:	ldr	x10, [sp, #224]
   364dc:	str	w20, [x10]
   364e0:	b.ls	364f4 <ZSTD_endStream@@Base+0x285a0>  // b.plast
   364e4:	str	x9, [sp, #224]
   364e8:	mov	x22, x8
   364ec:	mov	x8, x21
   364f0:	b	363e0 <ZSTD_endStream@@Base+0x2848c>
   364f4:	sub	x10, x29, #0x40
   364f8:	mov	w9, wzr
   364fc:	str	x10, [sp, #224]
   36500:	mov	x22, x8
   36504:	b	36514 <ZSTD_endStream@@Base+0x285c0>
   36508:	ldur	x0, [x29, #-160]
   3650c:	mov	x27, x8
   36510:	mov	w26, w9
   36514:	mov	x8, x21
   36518:	mov	w23, #0x1c                  	// #28
   3651c:	b	363ec <ZSTD_endStream@@Base+0x28498>
   36520:	ldr	x8, [sp, #224]
   36524:	str	wzr, [x8]
   36528:	ldr	x8, [sp, #232]
   3652c:	str	wzr, [x8]
   36530:	cbz	w26, 366a8 <ZSTD_endStream@@Base+0x28754>
   36534:	ldr	w1, [sp, #56]
   36538:	mov	w2, #0x3                   	// #3
   3653c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   36540:	ldr	x9, [sp, #80]
   36544:	ldur	x20, [x29, #-208]
   36548:	mov	x21, xzr
   3654c:	mov	x22, xzr
   36550:	ldr	x8, [x9, #48]
   36554:	ldr	w24, [x8, x0, lsl #2]
   36558:	ldr	x8, [x9, #64]
   3655c:	stur	x8, [x29, #-120]
   36560:	ldr	x8, [sp, #64]
   36564:	and	x8, x8, #0xffffffff
   36568:	stur	x8, [x29, #-104]
   3656c:	ldr	x8, [sp, #160]
   36570:	add	x8, x28, x8
   36574:	stur	x8, [x29, #-112]
   36578:	b	365b8 <ZSTD_endStream@@Base+0x28664>
   3657c:	ldrb	w8, [x10, x9]
   36580:	ldur	x10, [x29, #-160]
   36584:	ldr	w11, [sp, #136]
   36588:	ldur	x12, [x29, #-120]
   3658c:	ldrb	w10, [x10, x9]
   36590:	and	w11, w24, w11
   36594:	lsl	w11, w11, #1
   36598:	add	x11, x12, w11, uxtw #2
   3659c:	cmp	w8, w10
   365a0:	cset	w8, cc  // cc = lo, ul, last
   365a4:	ldr	w24, [x11, w8, uxtw #2]
   365a8:	csel	x21, x21, x9, cc  // cc = lo, ul, last
   365ac:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   365b0:	mov	w8, #0x1                   	// #1
   365b4:	tbz	w8, #0, 366ac <ZSTD_endStream@@Base+0x28758>
   365b8:	subs	w26, w26, #0x1
   365bc:	b.cc	366ac <ZSTD_endStream@@Base+0x28758>  // b.lo, b.ul, b.last
   365c0:	ldr	w8, [sp, #192]
   365c4:	cmp	w24, w8
   365c8:	b.ls	366ac <ZSTD_endStream@@Base+0x28758>  // b.plast
   365cc:	ldr	x8, [sp, #184]
   365d0:	mov	w23, w24
   365d4:	ldur	x2, [x29, #-184]
   365d8:	ldp	x3, x4, [x29, #-256]
   365dc:	add	x20, x8, x23
   365e0:	ldur	x8, [x29, #-160]
   365e4:	cmp	x22, x21
   365e8:	csel	x28, x22, x21, cc  // cc = lo, ul, last
   365ec:	add	x1, x20, x28
   365f0:	add	x0, x8, x28
   365f4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   365f8:	ldp	x8, x11, [x29, #-112]
   365fc:	add	x9, x0, x28
   36600:	add	x10, x9, x23
   36604:	add	x8, x8, x23
   36608:	cmp	x10, x11
   3660c:	csel	x10, x20, x8, cc  // cc = lo, ul, last
   36610:	cmp	x9, x27
   36614:	b.ls	3667c <ZSTD_endStream@@Base+0x28728>  // b.plast
   36618:	ldr	x11, [sp, #160]
   3661c:	ldur	x12, [x29, #-176]
   36620:	ldur	w15, [x29, #-88]
   36624:	mov	w8, wzr
   36628:	add	w11, w24, w11
   3662c:	sub	w13, w25, w11
   36630:	add	w14, w11, w9
   36634:	cmp	x9, x13
   36638:	add	x12, x12, w19, uxtw #3
   3663c:	sub	w11, w15, w11
   36640:	csel	w25, w14, w25, hi  // hi = pmore
   36644:	cmp	x9, #0x1, lsl #12
   36648:	add	w19, w19, #0x1
   3664c:	stp	w11, w9, [x12]
   36650:	b.hi	36698 <ZSTD_endStream@@Base+0x28744>  // b.pmore
   36654:	ldur	x11, [x29, #-160]
   36658:	ldur	x12, [x29, #-184]
   3665c:	ldur	x20, [x29, #-208]
   36660:	mov	x27, x9
   36664:	add	x11, x11, x9
   36668:	cmp	x11, x12
   3666c:	mov	w23, #0x1c                  	// #28
   36670:	b.ne	36684 <ZSTD_endStream@@Base+0x28730>  // b.any
   36674:	mov	x27, x9
   36678:	b	365b4 <ZSTD_endStream@@Base+0x28660>
   3667c:	ldur	x20, [x29, #-208]
   36680:	mov	w23, #0x1c                  	// #28
   36684:	ldr	w8, [sp, #176]
   36688:	cmp	w24, w8
   3668c:	b.hi	3657c <ZSTD_endStream@@Base+0x28628>  // b.pmore
   36690:	mov	w8, wzr
   36694:	b	365b4 <ZSTD_endStream@@Base+0x28660>
   36698:	ldur	x20, [x29, #-208]
   3669c:	mov	x27, x9
   366a0:	mov	w23, #0x1c                  	// #28
   366a4:	b	365b4 <ZSTD_endStream@@Base+0x28660>
   366a8:	ldur	x20, [x29, #-208]
   366ac:	ldur	x22, [x29, #-72]
   366b0:	ldur	x21, [x29, #-168]
   366b4:	sub	w8, w25, #0x8
   366b8:	str	w8, [x22, #36]
   366bc:	ldur	x26, [x29, #-96]
   366c0:	ldr	x27, [sp, #272]
   366c4:	ldur	x24, [x29, #-160]
   366c8:	cbnz	w19, 32740 <ZSTD_endStream@@Base+0x247ec>
   366cc:	b	33ffc <ZSTD_endStream@@Base+0x260a8>
   366d0:	sub	x0, x20, x27
   366d4:	add	sp, sp, #0x220
   366d8:	ldp	x20, x19, [sp, #80]
   366dc:	ldp	x22, x21, [sp, #64]
   366e0:	ldp	x24, x23, [sp, #48]
   366e4:	ldp	x26, x25, [sp, #32]
   366e8:	ldp	x28, x27, [sp, #16]
   366ec:	ldp	x29, x30, [sp], #96
   366f0:	ret
   366f4:	stp	x29, x30, [sp, #-96]!
   366f8:	stp	x28, x27, [sp, #16]
   366fc:	stp	x26, x25, [sp, #32]
   36700:	stp	x24, x23, [sp, #48]
   36704:	stp	x22, x21, [sp, #64]
   36708:	stp	x20, x19, [sp, #80]
   3670c:	mov	x29, sp
   36710:	sub	sp, sp, #0x230
   36714:	stur	x1, [x29, #-224]
   36718:	ldp	w11, w10, [x0, #200]
   3671c:	ldr	x8, [x0, #8]
   36720:	ldr	w9, [x0, #24]
   36724:	ldr	w12, [x0, #36]
   36728:	mov	w13, #0xfff                 	// #4095
   3672c:	cmp	w10, #0xfff
   36730:	add	x19, x8, x9
   36734:	csel	w8, w10, w13, cc  // cc = lo, ul, last
   36738:	stur	w12, [x29, #-12]
   3673c:	stur	w8, [x29, #-196]
   36740:	ldp	x26, x28, [x0, #104]
   36744:	mov	x27, x3
   36748:	add	x24, x0, #0x48
   3674c:	mov	x23, x2
   36750:	mov	x22, x0
   36754:	add	x20, x3, x4
   36758:	cmp	w11, #0x3
   3675c:	mov	w8, #0x3                   	// #3
   36760:	mov	w3, #0x2                   	// #2
   36764:	mov	x0, x24
   36768:	mov	x1, x27
   3676c:	mov	x2, x4
   36770:	sub	x25, x20, #0x8
   36774:	cinc	w21, w8, ne  // ne = any
   36778:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   3677c:	cmp	x19, x27
   36780:	mov	x8, x25
   36784:	cinc	x25, x27, eq  // eq = none
   36788:	cmp	x25, x8
   3678c:	stur	x20, [x29, #-192]
   36790:	b.cs	3a608 <ZSTD_endStream@@Base+0x2c6b4>  // b.hs, b.nlast
   36794:	str	x8, [sp, #288]
   36798:	sub	w8, w21, #0x1
   3679c:	str	x8, [sp, #136]
   367a0:	sub	x8, x29, #0x40
   367a4:	stur	x24, [x29, #-216]
   367a8:	add	x8, x8, #0x10
   367ac:	ldur	w24, [x29, #-196]
   367b0:	sub	x9, x20, #0x20
   367b4:	str	x8, [sp, #104]
   367b8:	str	x9, [sp, #296]
   367bc:	mov	w9, w21
   367c0:	stur	x26, [x29, #-176]
   367c4:	str	x9, [sp, #48]
   367c8:	add	x20, x28, #0x10
   367cc:	add	x9, x28, #0x1c
   367d0:	mov	x26, x28
   367d4:	stur	w21, [x29, #-252]
   367d8:	stur	x9, [x29, #-136]
   367dc:	stur	x23, [x29, #-168]
   367e0:	stp	x26, x22, [x29, #-80]
   367e4:	stur	x20, [x29, #-208]
   367e8:	b	367fc <ZSTD_endStream@@Base+0x288a8>
   367ec:	ldr	x8, [sp, #288]
   367f0:	ldur	x25, [x29, #-160]
   367f4:	cmp	x25, x8
   367f8:	b.cs	3a608 <ZSTD_endStream@@Base+0x2c6b4>  // b.hs, b.nlast
   367fc:	ldr	x19, [x22, #8]
   36800:	ldr	w21, [x22, #36]
   36804:	subs	w8, w25, w27
   36808:	stur	w8, [x29, #-96]
   3680c:	cset	w8, eq  // eq = none
   36810:	stur	w8, [x29, #-124]
   36814:	add	x8, x19, x21
   36818:	cmp	x8, x25
   3681c:	str	x27, [sp, #280]
   36820:	stur	x25, [x29, #-160]
   36824:	b.ls	368e0 <ZSTD_endStream@@Base+0x2898c>  // b.plast
   36828:	mov	w25, wzr
   3682c:	cbz	w25, 38070 <ZSTD_endStream@@Base+0x2a11c>
   36830:	mov	x8, xzr
   36834:	ldr	w9, [x23, x8]
   36838:	str	w9, [x20, x8]
   3683c:	add	x8, x8, #0x4
   36840:	cmp	x8, #0xc
   36844:	b.ne	36834 <ZSTD_endStream@@Base+0x288e0>  // b.any
   36848:	ldur	w1, [x29, #-96]
   3684c:	mov	w3, #0x2                   	// #2
   36850:	mov	x0, x27
   36854:	stp	wzr, w1, [x26, #8]
   36858:	ldur	x2, [x29, #-216]
   3685c:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   36860:	ldur	x10, [x29, #-176]
   36864:	sub	w9, w25, #0x1
   36868:	str	w0, [x26]
   3686c:	mov	w20, w0
   36870:	add	x9, x10, w9, uxtw #3
   36874:	ldr	w19, [x9, #4]
   36878:	mov	w8, wzr
   3687c:	mov	w0, wzr
   36880:	cmp	w19, w24
   36884:	b.ls	368cc <ZSTD_endStream@@Base+0x28978>  // b.plast
   36888:	ldr	w11, [x9]
   3688c:	ldr	w10, [sp, #268]
   36890:	ldur	w21, [x29, #-96]
   36894:	ldur	w8, [x29, #-16]
   36898:	ldur	x9, [x29, #-24]
   3689c:	stp	w10, w11, [x29, #-64]
   368a0:	ldr	x10, [sp, #104]
   368a4:	sub	x0, x29, #0x40
   368a8:	stp	w19, w21, [x29, #-56]
   368ac:	str	w11, [sp, #272]
   368b0:	str	w8, [x10, #8]
   368b4:	str	x9, [x10]
   368b8:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   368bc:	mov	w28, wzr
   368c0:	mov	w8, #0x7                   	// #7
   368c4:	stur	w19, [x29, #-240]
   368c8:	str	w21, [sp, #276]
   368cc:	cbz	w8, 36c5c <ZSTD_endStream@@Base+0x28d08>
   368d0:	ldur	x20, [x29, #-208]
   368d4:	cmp	w8, #0x7
   368d8:	b.ne	3808c <ZSTD_endStream@@Base+0x2a138>  // b.any
   368dc:	b	39f38 <ZSTD_endStream@@Base+0x2bfe4>
   368e0:	ldr	w20, [x22, #200]
   368e4:	ldur	x23, [x29, #-192]
   368e8:	mov	x24, x22
   368ec:	sub	w22, w25, w19
   368f0:	cmp	w21, w22
   368f4:	b.cs	3691c <ZSTD_endStream@@Base+0x289c8>  // b.hs, b.nlast
   368f8:	add	x1, x19, w21, uxtw
   368fc:	mov	x0, x24
   36900:	mov	x2, x23
   36904:	mov	w3, w20
   36908:	mov	w4, wzr
   3690c:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   36910:	add	w21, w0, w21
   36914:	cmp	w21, w22
   36918:	b.cc	368f8 <ZSTD_endStream@@Base+0x289a4>  // b.lo, b.ul, b.last
   3691c:	sub	w8, w20, #0x6
   36920:	cmp	w8, #0x2
   36924:	mov	x21, x24
   36928:	str	w22, [x24, #36]
   3692c:	stur	w28, [x29, #-100]
   36930:	b.cc	36dec <ZSTD_endStream@@Base+0x28e98>  // b.lo, b.ul, b.last
   36934:	ldur	x23, [x29, #-168]
   36938:	cmp	w20, #0x5
   3693c:	mov	w9, #0xfff                 	// #4095
   36940:	b.eq	370d8 <ZSTD_endStream@@Base+0x29184>  // b.none
   36944:	cmp	w20, #0x3
   36948:	b.ne	373bc <ZSTD_endStream@@Base+0x29468>  // b.any
   3694c:	ldr	w8, [x21, #204]
   36950:	ldr	x22, [x21, #8]
   36954:	ldr	w1, [x21, #192]
   36958:	ldr	x19, [x21, #48]
   3695c:	cmp	w8, #0xfff
   36960:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   36964:	mov	w2, #0x3                   	// #3
   36968:	mov	x0, x25
   3696c:	stur	w8, [x29, #-120]
   36970:	sub	w27, w25, w22
   36974:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   36978:	ldp	w2, w8, [x21, #184]
   3697c:	ldr	w9, [x19, x0, lsl #2]
   36980:	str	x19, [sp, #112]
   36984:	ldr	x24, [x21, #64]
   36988:	sub	w8, w8, #0x1
   3698c:	str	w9, [sp, #124]
   36990:	mov	w9, #0xffffffff            	// #-1
   36994:	lsl	w19, w9, w8
   36998:	ldr	w20, [x21, #24]
   3699c:	mvn	w8, w19
   369a0:	str	w8, [sp, #192]
   369a4:	subs	w8, w27, w8
   369a8:	str	x0, [sp, #96]
   369ac:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   369b0:	mov	x0, x21
   369b4:	mov	w1, w27
   369b8:	str	w8, [sp, #184]
   369bc:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   369c0:	add	x8, x22, x20
   369c4:	add	w9, w27, #0x9
   369c8:	str	x8, [sp, #256]
   369cc:	bic	w8, w27, w19
   369d0:	stur	w9, [x29, #-152]
   369d4:	ldr	w9, [x21, #196]
   369d8:	sub	w10, w27, w20
   369dc:	cmp	w0, #0x0
   369e0:	ldr	x14, [x21, #176]
   369e4:	stur	w10, [x29, #-88]
   369e8:	add	x10, x25, #0x3
   369ec:	lsl	w8, w8, #1
   369f0:	stur	x10, [x29, #-248]
   369f4:	csinc	w10, w0, wzr, ne  // ne = any
   369f8:	add	x8, x24, w8, uxtw #2
   369fc:	str	w10, [sp, #240]
   36a00:	str	x8, [sp, #216]
   36a04:	add	x8, x8, #0x4
   36a08:	mov	w10, #0x1                   	// #1
   36a0c:	str	x22, [sp, #232]
   36a10:	stur	x20, [x29, #-232]
   36a14:	stp	x24, x8, [sp, #200]
   36a18:	lsl	w9, w10, w9
   36a1c:	ldp	x12, x11, [x14]
   36a20:	str	w9, [sp, #128]
   36a24:	str	x14, [sp, #88]
   36a28:	ldp	w8, w9, [x14, #188]
   36a2c:	ldr	w13, [x14, #28]
   36a30:	sub	x15, x12, x11
   36a34:	mov	w10, #0xffffffff            	// #-1
   36a38:	sub	w8, w8, #0x1
   36a3c:	str	w9, [sp, #72]
   36a40:	str	x12, [sp, #248]
   36a44:	sub	w9, w27, w13
   36a48:	sub	w12, w0, w15
   36a4c:	lsl	w8, w10, w8
   36a50:	sub	w10, w15, w13
   36a54:	mvn	w14, w8
   36a58:	sub	w8, w9, w12
   36a5c:	stur	w8, [x29, #-144]
   36a60:	sub	w8, w15, w14
   36a64:	cmp	w10, w14
   36a68:	csel	w8, w8, w13, hi  // hi = pmore
   36a6c:	str	w8, [sp, #160]
   36a70:	ldur	w8, [x29, #-96]
   36a74:	stur	w27, [x29, #-184]
   36a78:	ldr	x27, [sp, #136]
   36a7c:	ldur	w24, [x29, #-196]
   36a80:	ldur	x20, [x29, #-208]
   36a84:	cmp	w8, #0x0
   36a88:	mov	w8, #0x3                   	// #3
   36a8c:	cinc	x8, x8, eq  // eq = none
   36a90:	mov	w26, wzr
   36a94:	mov	w16, wzr
   36a98:	cset	w22, eq  // eq = none
   36a9c:	stur	x8, [x29, #-112]
   36aa0:	sub	x8, x11, x12
   36aa4:	str	x15, [sp, #80]
   36aa8:	str	w14, [sp, #144]
   36aac:	str	w13, [sp, #180]
   36ab0:	str	x11, [sp, #168]
   36ab4:	str	x12, [sp, #152]
   36ab8:	str	x8, [sp, #224]
   36abc:	cmp	x22, #0x3
   36ac0:	b.ne	36ad0 <ZSTD_endStream@@Base+0x28b7c>  // b.any
   36ac4:	ldr	w8, [x23]
   36ac8:	sub	w21, w8, #0x1
   36acc:	b	36ad4 <ZSTD_endStream@@Base+0x28b80>
   36ad0:	ldr	w21, [x23, x22, lsl #2]
   36ad4:	ldur	w9, [x29, #-88]
   36ad8:	sub	w8, w21, #0x1
   36adc:	cmp	w8, w9
   36ae0:	b.cs	36b34 <ZSTD_endStream@@Base+0x28be0>  // b.hs, b.nlast
   36ae4:	ldur	x25, [x29, #-160]
   36ae8:	mov	w1, #0x3                   	// #3
   36aec:	mov	x23, x27
   36af0:	mov	w27, w16
   36af4:	mov	x0, x25
   36af8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   36afc:	mov	w21, w21
   36b00:	mov	w20, w0
   36b04:	sub	x0, x25, x21
   36b08:	mov	w1, #0x3                   	// #3
   36b0c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   36b10:	cmp	w20, w0
   36b14:	b.ne	36bac <ZSTD_endStream@@Base+0x28c58>  // b.any
   36b18:	ldur	x0, [x29, #-248]
   36b1c:	ldur	x2, [x29, #-192]
   36b20:	neg	x8, x21
   36b24:	add	x1, x0, x8
   36b28:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   36b2c:	add	w8, w0, #0x3
   36b30:	b	36bb0 <ZSTD_endStream@@Base+0x28c5c>
   36b34:	ldur	w9, [x29, #-144]
   36b38:	cmp	w8, w9
   36b3c:	mov	w8, wzr
   36b40:	b.cs	36bd0 <ZSTD_endStream@@Base+0x28c7c>  // b.hs, b.nlast
   36b44:	ldur	w9, [x29, #-184]
   36b48:	ldur	x11, [x29, #-232]
   36b4c:	sub	w9, w9, w21
   36b50:	mvn	w10, w9
   36b54:	add	w10, w11, w10
   36b58:	cmp	w10, #0x3
   36b5c:	b.cc	36bd0 <ZSTD_endStream@@Base+0x28c7c>  // b.lo, b.ul, b.last
   36b60:	ldr	x8, [sp, #224]
   36b64:	ldur	x0, [x29, #-160]
   36b68:	mov	w1, #0x3                   	// #3
   36b6c:	mov	w21, w16
   36b70:	add	x20, x8, w9, uxtw
   36b74:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   36b78:	mov	w25, w0
   36b7c:	mov	w1, #0x3                   	// #3
   36b80:	mov	x0, x20
   36b84:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   36b88:	cmp	w25, w0
   36b8c:	b.ne	36bc4 <ZSTD_endStream@@Base+0x28c70>  // b.any
   36b90:	ldur	x0, [x29, #-248]
   36b94:	ldur	x2, [x29, #-192]
   36b98:	ldp	x3, x4, [sp, #248]
   36b9c:	add	x1, x20, #0x3
   36ba0:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   36ba4:	add	w8, w0, #0x3
   36ba8:	b	36bc8 <ZSTD_endStream@@Base+0x28c74>
   36bac:	mov	w8, wzr
   36bb0:	ldur	x20, [x29, #-208]
   36bb4:	mov	w16, w27
   36bb8:	mov	x27, x23
   36bbc:	ldur	x23, [x29, #-168]
   36bc0:	b	36bd0 <ZSTD_endStream@@Base+0x28c7c>
   36bc4:	mov	w8, wzr
   36bc8:	ldur	x20, [x29, #-208]
   36bcc:	mov	w16, w21
   36bd0:	mov	w9, w8
   36bd4:	cmp	x27, x9
   36bd8:	b.cs	36c1c <ZSTD_endStream@@Base+0x28cc8>  // b.hs, b.nlast
   36bdc:	ldur	x10, [x29, #-176]
   36be0:	ldur	w11, [x29, #-120]
   36be4:	add	x10, x10, w16, uxtw #3
   36be8:	add	w16, w16, #0x1
   36bec:	cmp	w8, w11
   36bf0:	stp	w26, w8, [x10]
   36bf4:	mov	w8, #0x1                   	// #1
   36bf8:	b.hi	36c4c <ZSTD_endStream@@Base+0x28cf8>  // b.pmore
   36bfc:	ldur	x10, [x29, #-160]
   36c00:	ldur	x11, [x29, #-192]
   36c04:	mov	x27, x9
   36c08:	mov	w25, w16
   36c0c:	add	x10, x10, x9
   36c10:	cmp	x10, x11
   36c14:	b.ne	36c20 <ZSTD_endStream@@Base+0x28ccc>  // b.any
   36c18:	b	36c2c <ZSTD_endStream@@Base+0x28cd8>
   36c1c:	mov	x9, x27
   36c20:	mov	w8, wzr
   36c24:	mov	x27, x9
   36c28:	mov	w25, w19
   36c2c:	cbnz	w8, 379b0 <ZSTD_endStream@@Base+0x29a5c>
   36c30:	ldur	x8, [x29, #-112]
   36c34:	add	x22, x22, #0x1
   36c38:	add	w26, w26, #0x1
   36c3c:	mov	w19, w25
   36c40:	cmp	x22, x8
   36c44:	b.cc	36abc <ZSTD_endStream@@Base+0x28b68>  // b.lo, b.ul, b.last
   36c48:	b	379ac <ZSTD_endStream@@Base+0x29a58>
   36c4c:	mov	x27, x9
   36c50:	mov	w25, w16
   36c54:	cbz	w8, 36c30 <ZSTD_endStream@@Base+0x28cdc>
   36c58:	b	379b0 <ZSTD_endStream@@Base+0x29a5c>
   36c5c:	ldur	x1, [x29, #-216]
   36c60:	mov	w2, #0x2                   	// #2
   36c64:	mov	w0, wzr
   36c68:	stur	w28, [x29, #-100]
   36c6c:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   36c70:	ldur	x8, [x29, #-136]
   36c74:	ldr	x9, [sp, #48]
   36c78:	mov	w19, #0x1                   	// #1
   36c7c:	mov	w10, #0x40000000            	// #1073741824
   36c80:	add	x19, x19, #0x1
   36c84:	cmp	x19, x9
   36c88:	str	w10, [x8], #28
   36c8c:	b.cc	36c80 <ZSTD_endStream@@Base+0x28d2c>  // b.lo, b.ul, b.last
   36c90:	mov	x9, xzr
   36c94:	add	w21, w0, w20
   36c98:	mov	w8, w25
   36c9c:	stur	x8, [x29, #-144]
   36ca0:	b	36cbc <ZSTD_endStream@@Base+0x28d68>
   36ca4:	ldur	x9, [x29, #-120]
   36ca8:	ldur	x8, [x29, #-144]
   36cac:	ldur	x23, [x29, #-168]
   36cb0:	add	x9, x9, #0x1
   36cb4:	cmp	x9, x8
   36cb8:	b.cs	36dc8 <ZSTD_endStream@@Base+0x28e74>  // b.hs, b.nlast
   36cbc:	ldur	x8, [x29, #-176]
   36cc0:	stur	x9, [x29, #-120]
   36cc4:	ldur	w2, [x29, #-124]
   36cc8:	mov	x0, x23
   36ccc:	add	x8, x8, x9, lsl #3
   36cd0:	ldp	w20, w25, [x8]
   36cd4:	mov	w1, w20
   36cd8:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   36cdc:	cmp	w19, w25
   36ce0:	stur	w25, [x29, #-88]
   36ce4:	b.hi	36ca4 <ZSTD_endStream@@Base+0x28d50>  // b.pmore
   36ce8:	mov	x24, x0
   36cec:	add	w0, w20, #0x1
   36cf0:	mov	x27, x1
   36cf4:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   36cf8:	lsl	w8, w0, #8
   36cfc:	mov	w23, w0
   36d00:	add	w8, w8, #0x1, lsl #12
   36d04:	stur	w8, [x29, #-112]
   36d08:	b	36da4 <ZSTD_endStream@@Base+0x28e50>
   36d0c:	ldr	x8, [x22, #96]
   36d10:	mov	w28, w21
   36d14:	ldr	w21, [x22, #148]
   36d18:	ldr	w0, [x8, x23, lsl #2]
   36d1c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   36d20:	mov	w26, w0
   36d24:	mov	w0, w25
   36d28:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   36d2c:	mov	w8, w0
   36d30:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   36d34:	ldr	x9, [x22, #88]
   36d38:	lsl	x8, x8, #2
   36d3c:	add	x10, x10, #0xca8
   36d40:	ldr	w25, [x10, x8]
   36d44:	ldur	x10, [x29, #-72]
   36d48:	ldr	w0, [x9, x8]
   36d4c:	ldr	w22, [x10, #144]
   36d50:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   36d54:	sub	w9, w21, w26
   36d58:	add	w8, w25, w23
   36d5c:	add	w9, w9, w22
   36d60:	ldp	x26, x22, [x29, #-80]
   36d64:	add	w8, w9, w8, lsl #8
   36d68:	sub	w8, w8, w0
   36d6c:	mov	w21, w28
   36d70:	add	w8, w8, #0x33
   36d74:	ldur	w10, [x29, #-96]
   36d78:	mov	w9, #0x1c                  	// #28
   36d7c:	add	w8, w21, w8
   36d80:	umaddl	x9, w19, w9, x26
   36d84:	stp	w19, w10, [x9, #8]
   36d88:	stp	w8, w20, [x9]
   36d8c:	ldur	w8, [x29, #-88]
   36d90:	add	w19, w19, #0x1
   36d94:	str	x24, [x9, #16]
   36d98:	str	w27, [x9, #24]
   36d9c:	cmp	w19, w8
   36da0:	b.hi	36ca4 <ZSTD_endStream@@Base+0x28d50>  // b.pmore
   36da4:	ldr	w8, [x22, #152]
   36da8:	sub	w25, w19, #0x3
   36dac:	cmp	w8, #0x1
   36db0:	b.ne	36d0c <ZSTD_endStream@@Base+0x28db8>  // b.any
   36db4:	mov	w0, w25
   36db8:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   36dbc:	ldur	w8, [x29, #-112]
   36dc0:	add	w8, w8, w0
   36dc4:	b	36d74 <ZSTD_endStream@@Base+0x28e20>
   36dc8:	ldr	x27, [sp, #280]
   36dcc:	ldur	w24, [x29, #-196]
   36dd0:	ldur	x20, [x29, #-208]
   36dd4:	ldur	w28, [x29, #-100]
   36dd8:	mov	w8, wzr
   36ddc:	sub	w0, w19, #0x1
   36de0:	cmp	w8, #0x7
   36de4:	b.ne	3808c <ZSTD_endStream@@Base+0x2a138>  // b.any
   36de8:	b	39f38 <ZSTD_endStream@@Base+0x2bfe4>
   36dec:	ldr	w8, [x21, #204]
   36df0:	ldr	x22, [x21, #8]
   36df4:	ldr	w1, [x21, #192]
   36df8:	ldr	x19, [x21, #48]
   36dfc:	cmp	w8, #0xfff
   36e00:	mov	w9, #0xfff                 	// #4095
   36e04:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   36e08:	mov	w2, #0x6                   	// #6
   36e0c:	mov	x0, x25
   36e10:	stur	w8, [x29, #-184]
   36e14:	sub	w20, w25, w22
   36e18:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   36e1c:	ldp	w2, w8, [x21, #184]
   36e20:	mov	w9, #0xffffffff            	// #-1
   36e24:	str	x19, [sp, #112]
   36e28:	ldr	w24, [x19, x0, lsl #2]
   36e2c:	sub	w8, w8, #0x1
   36e30:	lsl	w19, w9, w8
   36e34:	ldr	x23, [x21, #64]
   36e38:	ldr	w27, [x21, #24]
   36e3c:	mvn	w8, w19
   36e40:	str	w8, [sp, #184]
   36e44:	subs	w8, w20, w8
   36e48:	str	x0, [sp, #96]
   36e4c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   36e50:	mov	x0, x21
   36e54:	mov	w1, w20
   36e58:	str	w8, [sp, #180]
   36e5c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   36e60:	add	x8, x22, x27
   36e64:	str	x8, [sp, #224]
   36e68:	bic	w8, w20, w19
   36e6c:	ldr	x14, [x21, #176]
   36e70:	add	w9, w20, #0x9
   36e74:	sub	w10, w20, w27
   36e78:	lsl	w8, w8, #1
   36e7c:	cmp	w0, #0x0
   36e80:	stur	w9, [x29, #-152]
   36e84:	ldr	w9, [x21, #196]
   36e88:	stur	w10, [x29, #-112]
   36e8c:	add	x10, x25, #0x4
   36e90:	add	x8, x23, w8, uxtw #2
   36e94:	str	x10, [sp, #240]
   36e98:	csinc	w10, w0, wzr, ne  // ne = any
   36e9c:	str	x8, [sp, #208]
   36ea0:	add	x8, x8, #0x4
   36ea4:	stur	wzr, [x29, #-88]
   36ea8:	str	x22, [sp, #256]
   36eac:	str	x27, [sp, #248]
   36eb0:	str	w10, [sp, #232]
   36eb4:	stp	x23, x8, [sp, #192]
   36eb8:	ldp	x12, x11, [x14]
   36ebc:	mov	w10, #0x1                   	// #1
   36ec0:	str	x14, [sp, #88]
   36ec4:	lsl	w27, w10, w9
   36ec8:	ldp	w8, w9, [x14, #188]
   36ecc:	ldr	w13, [x14, #28]
   36ed0:	sub	x16, x12, x11
   36ed4:	mov	w10, #0xffffffff            	// #-1
   36ed8:	sub	w8, w8, #0x1
   36edc:	str	w9, [sp, #72]
   36ee0:	str	x12, [sp, #216]
   36ee4:	sub	w9, w20, w13
   36ee8:	sub	w12, w0, w16
   36eec:	lsl	w8, w10, w8
   36ef0:	sub	w10, w16, w13
   36ef4:	mvn	w14, w8
   36ef8:	sub	w8, w9, w12
   36efc:	stur	w8, [x29, #-232]
   36f00:	sub	w8, w16, w14
   36f04:	cmp	w10, w14
   36f08:	csel	w8, w8, w13, hi  // hi = pmore
   36f0c:	str	w8, [sp, #144]
   36f10:	ldur	w8, [x29, #-96]
   36f14:	stur	w20, [x29, #-248]
   36f18:	ldr	x19, [sp, #136]
   36f1c:	ldur	x23, [x29, #-168]
   36f20:	ldur	x20, [x29, #-208]
   36f24:	cmp	w8, #0x0
   36f28:	mov	w8, #0x3                   	// #3
   36f2c:	cinc	x8, x8, eq  // eq = none
   36f30:	mov	w15, w24
   36f34:	mov	w26, wzr
   36f38:	cset	w22, eq  // eq = none
   36f3c:	stur	x8, [x29, #-120]
   36f40:	sub	x8, x11, x12
   36f44:	str	x16, [sp, #80]
   36f48:	str	w14, [sp, #124]
   36f4c:	str	w13, [sp, #160]
   36f50:	str	x11, [sp, #152]
   36f54:	str	x12, [sp, #128]
   36f58:	str	x8, [sp, #168]
   36f5c:	stur	w15, [x29, #-144]
   36f60:	cmp	x22, #0x3
   36f64:	b.ne	36f74 <ZSTD_endStream@@Base+0x29020>  // b.any
   36f68:	ldr	w8, [x23]
   36f6c:	sub	w21, w8, #0x1
   36f70:	b	36f78 <ZSTD_endStream@@Base+0x29024>
   36f74:	ldr	w21, [x23, x22, lsl #2]
   36f78:	ldur	w9, [x29, #-112]
   36f7c:	sub	w8, w21, #0x1
   36f80:	cmp	w8, w9
   36f84:	b.cs	36fcc <ZSTD_endStream@@Base+0x29078>  // b.hs, b.nlast
   36f88:	ldur	x25, [x29, #-160]
   36f8c:	mov	w1, #0x4                   	// #4
   36f90:	mov	x0, x25
   36f94:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   36f98:	mov	w21, w21
   36f9c:	mov	w20, w0
   36fa0:	sub	x0, x25, x21
   36fa4:	mov	w1, #0x4                   	// #4
   36fa8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   36fac:	cmp	w20, w0
   36fb0:	b.ne	37040 <ZSTD_endStream@@Base+0x290ec>  // b.any
   36fb4:	ldr	x0, [sp, #240]
   36fb8:	ldur	x2, [x29, #-192]
   36fbc:	neg	x8, x21
   36fc0:	add	x1, x0, x8
   36fc4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   36fc8:	b	37038 <ZSTD_endStream@@Base+0x290e4>
   36fcc:	ldur	w9, [x29, #-232]
   36fd0:	cmp	w8, w9
   36fd4:	mov	w8, wzr
   36fd8:	b.cs	3704c <ZSTD_endStream@@Base+0x290f8>  // b.hs, b.nlast
   36fdc:	ldur	w9, [x29, #-248]
   36fe0:	ldr	x11, [sp, #248]
   36fe4:	sub	w9, w9, w21
   36fe8:	mvn	w10, w9
   36fec:	add	w10, w11, w10
   36ff0:	cmp	w10, #0x3
   36ff4:	b.cc	3704c <ZSTD_endStream@@Base+0x290f8>  // b.lo, b.ul, b.last
   36ff8:	ldr	x8, [sp, #168]
   36ffc:	ldur	x0, [x29, #-160]
   37000:	mov	w1, #0x4                   	// #4
   37004:	add	x20, x8, w9, uxtw
   37008:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3700c:	mov	w25, w0
   37010:	mov	w1, #0x4                   	// #4
   37014:	mov	x0, x20
   37018:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3701c:	cmp	w25, w0
   37020:	b.ne	37040 <ZSTD_endStream@@Base+0x290ec>  // b.any
   37024:	ldr	x0, [sp, #240]
   37028:	ldur	x2, [x29, #-192]
   3702c:	ldp	x3, x4, [sp, #216]
   37030:	add	x1, x20, #0x4
   37034:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   37038:	add	w8, w0, #0x4
   3703c:	b	37044 <ZSTD_endStream@@Base+0x290f0>
   37040:	mov	w8, wzr
   37044:	ldur	x20, [x29, #-208]
   37048:	ldur	w15, [x29, #-144]
   3704c:	mov	w9, w8
   37050:	cmp	x19, x9
   37054:	b.cs	3709c <ZSTD_endStream@@Base+0x29148>  // b.hs, b.nlast
   37058:	ldur	x10, [x29, #-176]
   3705c:	ldur	w25, [x29, #-88]
   37060:	ldur	w11, [x29, #-184]
   37064:	add	x10, x10, w25, uxtw #3
   37068:	add	w25, w25, #0x1
   3706c:	cmp	w8, w11
   37070:	stp	w26, w8, [x10]
   37074:	mov	w8, #0x1                   	// #1
   37078:	stur	w25, [x29, #-88]
   3707c:	b.hi	370cc <ZSTD_endStream@@Base+0x29178>  // b.pmore
   37080:	ldur	x10, [x29, #-160]
   37084:	ldur	x11, [x29, #-192]
   37088:	mov	x19, x9
   3708c:	add	x10, x10, x9
   37090:	cmp	x10, x11
   37094:	b.ne	370a0 <ZSTD_endStream@@Base+0x2914c>  // b.any
   37098:	b	370ac <ZSTD_endStream@@Base+0x29158>
   3709c:	mov	x9, x19
   370a0:	mov	w8, wzr
   370a4:	mov	x19, x9
   370a8:	mov	w25, w24
   370ac:	cbnz	w8, 376a4 <ZSTD_endStream@@Base+0x29750>
   370b0:	ldur	x8, [x29, #-120]
   370b4:	add	x22, x22, #0x1
   370b8:	add	w26, w26, #0x1
   370bc:	mov	w24, w25
   370c0:	cmp	x22, x8
   370c4:	b.cc	36f60 <ZSTD_endStream@@Base+0x2900c>  // b.lo, b.ul, b.last
   370c8:	b	376a0 <ZSTD_endStream@@Base+0x2974c>
   370cc:	mov	x19, x9
   370d0:	cbz	w8, 370b0 <ZSTD_endStream@@Base+0x2915c>
   370d4:	b	376a4 <ZSTD_endStream@@Base+0x29750>
   370d8:	ldr	w8, [x21, #204]
   370dc:	ldr	x22, [x21, #8]
   370e0:	ldr	w1, [x21, #192]
   370e4:	ldr	x19, [x21, #48]
   370e8:	cmp	w8, #0xfff
   370ec:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   370f0:	mov	w2, #0x5                   	// #5
   370f4:	mov	x0, x25
   370f8:	stur	w8, [x29, #-184]
   370fc:	sub	w20, w25, w22
   37100:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   37104:	ldp	w2, w8, [x21, #184]
   37108:	mov	w9, #0xffffffff            	// #-1
   3710c:	str	x19, [sp, #112]
   37110:	ldr	w26, [x19, x0, lsl #2]
   37114:	sub	w8, w8, #0x1
   37118:	lsl	w19, w9, w8
   3711c:	ldr	x24, [x21, #64]
   37120:	ldr	w27, [x21, #24]
   37124:	mvn	w8, w19
   37128:	str	w8, [sp, #184]
   3712c:	subs	w8, w20, w8
   37130:	str	x0, [sp, #96]
   37134:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   37138:	mov	x0, x21
   3713c:	mov	w1, w20
   37140:	str	w8, [sp, #180]
   37144:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   37148:	add	x8, x22, x27
   3714c:	str	x8, [sp, #224]
   37150:	bic	w8, w20, w19
   37154:	ldr	x14, [x21, #176]
   37158:	add	w9, w20, #0x9
   3715c:	sub	w10, w20, w27
   37160:	lsl	w8, w8, #1
   37164:	cmp	w0, #0x0
   37168:	stur	w9, [x29, #-152]
   3716c:	ldr	w9, [x21, #196]
   37170:	stur	w10, [x29, #-112]
   37174:	add	x10, x25, #0x4
   37178:	add	x8, x24, w8, uxtw #2
   3717c:	str	x10, [sp, #240]
   37180:	csinc	w10, w0, wzr, ne  // ne = any
   37184:	str	x8, [sp, #208]
   37188:	add	x8, x8, #0x4
   3718c:	stur	wzr, [x29, #-88]
   37190:	str	x22, [sp, #256]
   37194:	str	x27, [sp, #248]
   37198:	str	w10, [sp, #232]
   3719c:	stp	x24, x8, [sp, #192]
   371a0:	ldp	x12, x11, [x14]
   371a4:	mov	w10, #0x1                   	// #1
   371a8:	str	x14, [sp, #88]
   371ac:	lsl	w27, w10, w9
   371b0:	ldp	w8, w9, [x14, #188]
   371b4:	ldr	w13, [x14, #28]
   371b8:	sub	x16, x12, x11
   371bc:	mov	w10, #0xffffffff            	// #-1
   371c0:	sub	w8, w8, #0x1
   371c4:	str	w9, [sp, #72]
   371c8:	str	x12, [sp, #216]
   371cc:	sub	w9, w20, w13
   371d0:	sub	w12, w0, w16
   371d4:	lsl	w8, w10, w8
   371d8:	sub	w10, w16, w13
   371dc:	mvn	w14, w8
   371e0:	sub	w8, w9, w12
   371e4:	stur	w8, [x29, #-232]
   371e8:	sub	w8, w16, w14
   371ec:	cmp	w10, w14
   371f0:	csel	w8, w8, w13, hi  // hi = pmore
   371f4:	str	w8, [sp, #144]
   371f8:	ldur	w8, [x29, #-96]
   371fc:	stur	w20, [x29, #-248]
   37200:	ldr	x19, [sp, #136]
   37204:	ldur	x20, [x29, #-208]
   37208:	cmp	w8, #0x0
   3720c:	mov	w8, #0x3                   	// #3
   37210:	cinc	x8, x8, eq  // eq = none
   37214:	mov	w15, w26
   37218:	mov	w26, wzr
   3721c:	cset	w22, eq  // eq = none
   37220:	stur	x8, [x29, #-120]
   37224:	sub	x8, x11, x12
   37228:	str	x16, [sp, #80]
   3722c:	str	w14, [sp, #124]
   37230:	str	w13, [sp, #160]
   37234:	str	x11, [sp, #152]
   37238:	str	x12, [sp, #128]
   3723c:	str	x8, [sp, #168]
   37240:	stur	w15, [x29, #-144]
   37244:	cmp	x22, #0x3
   37248:	b.ne	37258 <ZSTD_endStream@@Base+0x29304>  // b.any
   3724c:	ldr	w8, [x23]
   37250:	sub	w21, w8, #0x1
   37254:	b	3725c <ZSTD_endStream@@Base+0x29308>
   37258:	ldr	w21, [x23, x22, lsl #2]
   3725c:	ldur	w9, [x29, #-112]
   37260:	sub	w8, w21, #0x1
   37264:	cmp	w8, w9
   37268:	b.cs	372b0 <ZSTD_endStream@@Base+0x2935c>  // b.hs, b.nlast
   3726c:	ldur	x25, [x29, #-160]
   37270:	mov	w1, #0x4                   	// #4
   37274:	mov	x0, x25
   37278:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3727c:	mov	w21, w21
   37280:	mov	w20, w0
   37284:	sub	x0, x25, x21
   37288:	mov	w1, #0x4                   	// #4
   3728c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   37290:	cmp	w20, w0
   37294:	b.ne	37324 <ZSTD_endStream@@Base+0x293d0>  // b.any
   37298:	ldr	x0, [sp, #240]
   3729c:	ldur	x2, [x29, #-192]
   372a0:	neg	x8, x21
   372a4:	add	x1, x0, x8
   372a8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   372ac:	b	3731c <ZSTD_endStream@@Base+0x293c8>
   372b0:	ldur	w9, [x29, #-232]
   372b4:	cmp	w8, w9
   372b8:	mov	w8, wzr
   372bc:	b.cs	37330 <ZSTD_endStream@@Base+0x293dc>  // b.hs, b.nlast
   372c0:	ldur	w9, [x29, #-248]
   372c4:	ldr	x11, [sp, #248]
   372c8:	sub	w9, w9, w21
   372cc:	mvn	w10, w9
   372d0:	add	w10, w11, w10
   372d4:	cmp	w10, #0x3
   372d8:	b.cc	37330 <ZSTD_endStream@@Base+0x293dc>  // b.lo, b.ul, b.last
   372dc:	ldr	x8, [sp, #168]
   372e0:	ldur	x0, [x29, #-160]
   372e4:	mov	w1, #0x4                   	// #4
   372e8:	add	x20, x8, w9, uxtw
   372ec:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   372f0:	mov	w25, w0
   372f4:	mov	w1, #0x4                   	// #4
   372f8:	mov	x0, x20
   372fc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   37300:	cmp	w25, w0
   37304:	b.ne	37324 <ZSTD_endStream@@Base+0x293d0>  // b.any
   37308:	ldr	x0, [sp, #240]
   3730c:	ldur	x2, [x29, #-192]
   37310:	ldp	x3, x4, [sp, #216]
   37314:	add	x1, x20, #0x4
   37318:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3731c:	add	w8, w0, #0x4
   37320:	b	37328 <ZSTD_endStream@@Base+0x293d4>
   37324:	mov	w8, wzr
   37328:	ldur	x20, [x29, #-208]
   3732c:	ldur	w15, [x29, #-144]
   37330:	mov	w9, w8
   37334:	cmp	x19, x9
   37338:	b.cs	37380 <ZSTD_endStream@@Base+0x2942c>  // b.hs, b.nlast
   3733c:	ldur	x10, [x29, #-176]
   37340:	ldur	w25, [x29, #-88]
   37344:	ldur	w11, [x29, #-184]
   37348:	add	x10, x10, w25, uxtw #3
   3734c:	add	w25, w25, #0x1
   37350:	cmp	w8, w11
   37354:	stp	w26, w8, [x10]
   37358:	mov	w8, #0x1                   	// #1
   3735c:	stur	w25, [x29, #-88]
   37360:	b.hi	373b0 <ZSTD_endStream@@Base+0x2945c>  // b.pmore
   37364:	ldur	x10, [x29, #-160]
   37368:	ldur	x11, [x29, #-192]
   3736c:	mov	x19, x9
   37370:	add	x10, x10, x9
   37374:	cmp	x10, x11
   37378:	b.ne	37384 <ZSTD_endStream@@Base+0x29430>  // b.any
   3737c:	b	37390 <ZSTD_endStream@@Base+0x2943c>
   37380:	mov	x9, x19
   37384:	mov	w8, wzr
   37388:	mov	x19, x9
   3738c:	mov	w25, w24
   37390:	cbnz	w8, 379c8 <ZSTD_endStream@@Base+0x29a74>
   37394:	ldur	x8, [x29, #-120]
   37398:	add	x22, x22, #0x1
   3739c:	add	w26, w26, #0x1
   373a0:	mov	w24, w25
   373a4:	cmp	x22, x8
   373a8:	b.cc	37244 <ZSTD_endStream@@Base+0x292f0>  // b.lo, b.ul, b.last
   373ac:	b	379c4 <ZSTD_endStream@@Base+0x29a70>
   373b0:	mov	x19, x9
   373b4:	cbz	w8, 37394 <ZSTD_endStream@@Base+0x29440>
   373b8:	b	379c8 <ZSTD_endStream@@Base+0x29a74>
   373bc:	ldr	w8, [x21, #204]
   373c0:	ldr	x22, [x21, #8]
   373c4:	ldr	w1, [x21, #192]
   373c8:	ldr	x19, [x21, #48]
   373cc:	cmp	w8, #0xfff
   373d0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   373d4:	mov	w2, #0x4                   	// #4
   373d8:	mov	x0, x25
   373dc:	stur	w8, [x29, #-184]
   373e0:	sub	w20, w25, w22
   373e4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   373e8:	ldp	w2, w8, [x21, #184]
   373ec:	mov	w9, #0xffffffff            	// #-1
   373f0:	str	x19, [sp, #112]
   373f4:	ldr	w26, [x19, x0, lsl #2]
   373f8:	sub	w8, w8, #0x1
   373fc:	lsl	w19, w9, w8
   37400:	ldr	x24, [x21, #64]
   37404:	ldr	w27, [x21, #24]
   37408:	mvn	w8, w19
   3740c:	str	w8, [sp, #184]
   37410:	subs	w8, w20, w8
   37414:	str	x0, [sp, #96]
   37418:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3741c:	mov	x0, x21
   37420:	mov	w1, w20
   37424:	str	w8, [sp, #180]
   37428:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3742c:	add	x8, x22, x27
   37430:	str	x8, [sp, #224]
   37434:	bic	w8, w20, w19
   37438:	ldr	x14, [x21, #176]
   3743c:	add	w9, w20, #0x9
   37440:	sub	w10, w20, w27
   37444:	lsl	w8, w8, #1
   37448:	cmp	w0, #0x0
   3744c:	stur	w9, [x29, #-152]
   37450:	ldr	w9, [x21, #196]
   37454:	stur	w10, [x29, #-112]
   37458:	add	x10, x25, #0x4
   3745c:	add	x8, x24, w8, uxtw #2
   37460:	str	x10, [sp, #240]
   37464:	csinc	w10, w0, wzr, ne  // ne = any
   37468:	str	x8, [sp, #208]
   3746c:	add	x8, x8, #0x4
   37470:	stur	wzr, [x29, #-88]
   37474:	str	x22, [sp, #256]
   37478:	str	x27, [sp, #248]
   3747c:	str	w10, [sp, #232]
   37480:	stp	x24, x8, [sp, #192]
   37484:	ldp	x12, x11, [x14]
   37488:	mov	w10, #0x1                   	// #1
   3748c:	str	x14, [sp, #88]
   37490:	lsl	w27, w10, w9
   37494:	ldp	w8, w9, [x14, #188]
   37498:	ldr	w13, [x14, #28]
   3749c:	sub	x16, x12, x11
   374a0:	mov	w10, #0xffffffff            	// #-1
   374a4:	sub	w8, w8, #0x1
   374a8:	str	w9, [sp, #72]
   374ac:	str	x12, [sp, #216]
   374b0:	sub	w9, w20, w13
   374b4:	sub	w12, w0, w16
   374b8:	lsl	w8, w10, w8
   374bc:	sub	w10, w16, w13
   374c0:	mvn	w14, w8
   374c4:	sub	w8, w9, w12
   374c8:	stur	w8, [x29, #-232]
   374cc:	sub	w8, w16, w14
   374d0:	cmp	w10, w14
   374d4:	csel	w8, w8, w13, hi  // hi = pmore
   374d8:	str	w8, [sp, #144]
   374dc:	ldur	w8, [x29, #-96]
   374e0:	stur	w20, [x29, #-248]
   374e4:	ldr	x19, [sp, #136]
   374e8:	ldur	x20, [x29, #-208]
   374ec:	cmp	w8, #0x0
   374f0:	mov	w8, #0x3                   	// #3
   374f4:	cinc	x8, x8, eq  // eq = none
   374f8:	mov	w15, w26
   374fc:	mov	w26, wzr
   37500:	cset	w22, eq  // eq = none
   37504:	stur	x8, [x29, #-120]
   37508:	sub	x8, x11, x12
   3750c:	str	x16, [sp, #80]
   37510:	str	w14, [sp, #124]
   37514:	str	w13, [sp, #160]
   37518:	str	x11, [sp, #152]
   3751c:	str	x12, [sp, #128]
   37520:	str	x8, [sp, #168]
   37524:	stur	w15, [x29, #-144]
   37528:	cmp	x22, #0x3
   3752c:	b.ne	3753c <ZSTD_endStream@@Base+0x295e8>  // b.any
   37530:	ldr	w8, [x23]
   37534:	sub	w21, w8, #0x1
   37538:	b	37540 <ZSTD_endStream@@Base+0x295ec>
   3753c:	ldr	w21, [x23, x22, lsl #2]
   37540:	ldur	w9, [x29, #-112]
   37544:	sub	w8, w21, #0x1
   37548:	cmp	w8, w9
   3754c:	b.cs	37594 <ZSTD_endStream@@Base+0x29640>  // b.hs, b.nlast
   37550:	ldur	x25, [x29, #-160]
   37554:	mov	w1, #0x4                   	// #4
   37558:	mov	x0, x25
   3755c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   37560:	mov	w21, w21
   37564:	mov	w20, w0
   37568:	sub	x0, x25, x21
   3756c:	mov	w1, #0x4                   	// #4
   37570:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   37574:	cmp	w20, w0
   37578:	b.ne	37608 <ZSTD_endStream@@Base+0x296b4>  // b.any
   3757c:	ldr	x0, [sp, #240]
   37580:	ldur	x2, [x29, #-192]
   37584:	neg	x8, x21
   37588:	add	x1, x0, x8
   3758c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   37590:	b	37600 <ZSTD_endStream@@Base+0x296ac>
   37594:	ldur	w9, [x29, #-232]
   37598:	cmp	w8, w9
   3759c:	mov	w8, wzr
   375a0:	b.cs	37614 <ZSTD_endStream@@Base+0x296c0>  // b.hs, b.nlast
   375a4:	ldur	w9, [x29, #-248]
   375a8:	ldr	x11, [sp, #248]
   375ac:	sub	w9, w9, w21
   375b0:	mvn	w10, w9
   375b4:	add	w10, w11, w10
   375b8:	cmp	w10, #0x3
   375bc:	b.cc	37614 <ZSTD_endStream@@Base+0x296c0>  // b.lo, b.ul, b.last
   375c0:	ldr	x8, [sp, #168]
   375c4:	ldur	x0, [x29, #-160]
   375c8:	mov	w1, #0x4                   	// #4
   375cc:	add	x20, x8, w9, uxtw
   375d0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   375d4:	mov	w25, w0
   375d8:	mov	w1, #0x4                   	// #4
   375dc:	mov	x0, x20
   375e0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   375e4:	cmp	w25, w0
   375e8:	b.ne	37608 <ZSTD_endStream@@Base+0x296b4>  // b.any
   375ec:	ldr	x0, [sp, #240]
   375f0:	ldur	x2, [x29, #-192]
   375f4:	ldp	x3, x4, [sp, #216]
   375f8:	add	x1, x20, #0x4
   375fc:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   37600:	add	w8, w0, #0x4
   37604:	b	3760c <ZSTD_endStream@@Base+0x296b8>
   37608:	mov	w8, wzr
   3760c:	ldur	x20, [x29, #-208]
   37610:	ldur	w15, [x29, #-144]
   37614:	mov	w9, w8
   37618:	cmp	x19, x9
   3761c:	b.cs	37664 <ZSTD_endStream@@Base+0x29710>  // b.hs, b.nlast
   37620:	ldur	x10, [x29, #-176]
   37624:	ldur	w25, [x29, #-88]
   37628:	ldur	w11, [x29, #-184]
   3762c:	add	x10, x10, w25, uxtw #3
   37630:	add	w25, w25, #0x1
   37634:	cmp	w8, w11
   37638:	stp	w26, w8, [x10]
   3763c:	mov	w8, #0x1                   	// #1
   37640:	stur	w25, [x29, #-88]
   37644:	b.hi	37694 <ZSTD_endStream@@Base+0x29740>  // b.pmore
   37648:	ldur	x10, [x29, #-160]
   3764c:	ldur	x11, [x29, #-192]
   37650:	mov	x19, x9
   37654:	add	x10, x10, x9
   37658:	cmp	x10, x11
   3765c:	b.ne	37668 <ZSTD_endStream@@Base+0x29714>  // b.any
   37660:	b	37674 <ZSTD_endStream@@Base+0x29720>
   37664:	mov	x9, x19
   37668:	mov	w8, wzr
   3766c:	mov	x19, x9
   37670:	mov	w25, w24
   37674:	cbnz	w8, 37b48 <ZSTD_endStream@@Base+0x29bf4>
   37678:	ldur	x8, [x29, #-120]
   3767c:	add	x22, x22, #0x1
   37680:	add	w26, w26, #0x1
   37684:	mov	w24, w25
   37688:	cmp	x22, x8
   3768c:	b.cc	37528 <ZSTD_endStream@@Base+0x295d4>  // b.lo, b.ul, b.last
   37690:	b	37b44 <ZSTD_endStream@@Base+0x29bf0>
   37694:	mov	x19, x9
   37698:	cbz	w8, 37678 <ZSTD_endStream@@Base+0x29724>
   3769c:	b	37b48 <ZSTD_endStream@@Base+0x29bf4>
   376a0:	mov	w8, wzr
   376a4:	cbnz	w8, 38060 <ZSTD_endStream@@Base+0x2a10c>
   376a8:	ldr	x8, [sp, #112]
   376ac:	ldur	w9, [x29, #-248]
   376b0:	ldr	x10, [sp, #96]
   376b4:	ldur	x25, [x29, #-160]
   376b8:	ldur	w26, [x29, #-88]
   376bc:	mov	x20, xzr
   376c0:	mov	x22, xzr
   376c4:	str	w9, [x8, x10, lsl #2]
   376c8:	add	w8, w9, #0x2
   376cc:	stur	w8, [x29, #-112]
   376d0:	b	376ec <ZSTD_endStream@@Base+0x29798>
   376d4:	ldur	x23, [x29, #-168]
   376d8:	mov	x19, x8
   376dc:	mov	w27, w9
   376e0:	mov	x8, x22
   376e4:	mov	x22, x8
   376e8:	tbz	w9, #0, 3782c <ZSTD_endStream@@Base+0x298d8>
   376ec:	subs	w27, w27, #0x1
   376f0:	b.cc	3782c <ZSTD_endStream@@Base+0x298d8>  // b.lo, b.ul, b.last
   376f4:	ldr	w8, [sp, #232]
   376f8:	cmp	w15, w8
   376fc:	b.cc	3782c <ZSTD_endStream@@Base+0x298d8>  // b.lo, b.ul, b.last
   37700:	ldr	x8, [sp, #256]
   37704:	ldur	x2, [x29, #-192]
   37708:	cmp	x22, x20
   3770c:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   37710:	add	x21, x8, w15, uxtw
   37714:	add	x0, x25, x23
   37718:	add	x1, x21, x23
   3771c:	mov	w24, w15
   37720:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   37724:	add	x8, x0, x23
   37728:	cmp	x8, x19
   3772c:	b.ls	3778c <ZSTD_endStream@@Base+0x29838>  // b.plast
   37730:	ldur	w14, [x29, #-152]
   37734:	ldur	w12, [x29, #-112]
   37738:	ldur	x13, [x29, #-176]
   3773c:	add	w11, w24, w8
   37740:	sub	w10, w14, w24
   37744:	cmp	x8, x10
   37748:	mov	w9, wzr
   3774c:	sub	w12, w12, w24
   37750:	add	x13, x13, w26, uxtw #3
   37754:	csel	w14, w11, w14, hi  // hi = pmore
   37758:	cmp	x8, #0x1, lsl #12
   3775c:	add	w26, w26, #0x1
   37760:	mov	w15, w24
   37764:	stp	w12, w8, [x13]
   37768:	stur	w14, [x29, #-152]
   3776c:	b.hi	376d4 <ZSTD_endStream@@Base+0x29780>  // b.pmore
   37770:	ldur	x11, [x29, #-192]
   37774:	ldur	x23, [x29, #-168]
   37778:	add	x10, x25, x8
   3777c:	mov	x19, x8
   37780:	cmp	x10, x11
   37784:	b.ne	37794 <ZSTD_endStream@@Base+0x29840>  // b.any
   37788:	b	376d8 <ZSTD_endStream@@Base+0x29784>
   3778c:	ldur	x23, [x29, #-168]
   37790:	mov	w15, w24
   37794:	ldrb	w9, [x21, x8]
   37798:	ldrb	w10, [x25, x8]
   3779c:	ldr	w11, [sp, #184]
   377a0:	cmp	w9, w10
   377a4:	ldr	x9, [sp, #192]
   377a8:	and	w11, w15, w11
   377ac:	lsl	w11, w11, #1
   377b0:	add	x9, x9, w11, uxtw #2
   377b4:	b.cs	377d8 <ZSTD_endStream@@Base+0x29884>  // b.hs, b.nlast
   377b8:	ldr	w10, [sp, #180]
   377bc:	cmp	w15, w10
   377c0:	ldr	x10, [sp, #208]
   377c4:	str	w15, [x10]
   377c8:	b.ls	37804 <ZSTD_endStream@@Base+0x298b0>  // b.plast
   377cc:	add	x9, x9, #0x4
   377d0:	str	x9, [sp, #208]
   377d4:	b	377f8 <ZSTD_endStream@@Base+0x298a4>
   377d8:	ldr	w10, [sp, #180]
   377dc:	cmp	w15, w10
   377e0:	ldr	x10, [sp, #200]
   377e4:	str	w15, [x10]
   377e8:	b.ls	37814 <ZSTD_endStream@@Base+0x298c0>  // b.plast
   377ec:	str	x9, [sp, #200]
   377f0:	mov	x20, x8
   377f4:	mov	x8, x22
   377f8:	ldr	w15, [x9]
   377fc:	mov	w9, #0x1                   	// #1
   37800:	b	376e4 <ZSTD_endStream@@Base+0x29790>
   37804:	sub	x10, x29, #0x40
   37808:	mov	w9, wzr
   3780c:	str	x10, [sp, #208]
   37810:	b	376e4 <ZSTD_endStream@@Base+0x29790>
   37814:	sub	x10, x29, #0x40
   37818:	mov	w9, wzr
   3781c:	str	x10, [sp, #200]
   37820:	mov	x20, x8
   37824:	mov	x8, x22
   37828:	b	376e4 <ZSTD_endStream@@Base+0x29790>
   3782c:	ldr	x8, [sp, #200]
   37830:	str	wzr, [x8]
   37834:	ldr	x8, [sp, #208]
   37838:	str	wzr, [x8]
   3783c:	cbz	w27, 38048 <ZSTD_endStream@@Base+0x2a0f4>
   37840:	ldr	w1, [sp, #72]
   37844:	mov	w2, #0x6                   	// #6
   37848:	mov	x0, x25
   3784c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   37850:	ldr	x9, [sp, #88]
   37854:	mov	x20, xzr
   37858:	mov	x22, xzr
   3785c:	ldr	x8, [x9, #48]
   37860:	ldr	w24, [x8, x0, lsl #2]
   37864:	ldr	x8, [x9, #64]
   37868:	ldr	x9, [sp, #256]
   3786c:	stur	x8, [x29, #-120]
   37870:	ldr	x8, [sp, #80]
   37874:	and	x8, x8, #0xffffffff
   37878:	stur	x8, [x29, #-88]
   3787c:	ldr	x8, [sp, #128]
   37880:	add	x25, x9, x8
   37884:	b	378c4 <ZSTD_endStream@@Base+0x29970>
   37888:	ldrb	w8, [x10, x9]
   3788c:	ldur	x10, [x29, #-160]
   37890:	ldr	w11, [sp, #124]
   37894:	ldur	x12, [x29, #-120]
   37898:	ldrb	w10, [x10, x9]
   3789c:	and	w11, w24, w11
   378a0:	lsl	w11, w11, #1
   378a4:	add	x11, x12, w11, uxtw #2
   378a8:	cmp	w8, w10
   378ac:	cset	w8, cc  // cc = lo, ul, last
   378b0:	ldr	w24, [x11, w8, uxtw #2]
   378b4:	csel	x20, x20, x9, cc  // cc = lo, ul, last
   378b8:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   378bc:	mov	w8, #0x1                   	// #1
   378c0:	tbz	w8, #0, 38048 <ZSTD_endStream@@Base+0x2a0f4>
   378c4:	subs	w27, w27, #0x1
   378c8:	b.cc	38048 <ZSTD_endStream@@Base+0x2a0f4>  // b.lo, b.ul, b.last
   378cc:	ldr	w8, [sp, #160]
   378d0:	cmp	w24, w8
   378d4:	b.ls	38048 <ZSTD_endStream@@Base+0x2a0f4>  // b.plast
   378d8:	ldr	x8, [sp, #152]
   378dc:	mov	w21, w24
   378e0:	ldur	x2, [x29, #-192]
   378e4:	ldp	x3, x4, [sp, #216]
   378e8:	add	x28, x8, x21
   378ec:	ldur	x8, [x29, #-160]
   378f0:	cmp	x22, x20
   378f4:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   378f8:	add	x1, x28, x23
   378fc:	add	x0, x8, x23
   37900:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   37904:	ldur	x11, [x29, #-88]
   37908:	add	x9, x0, x23
   3790c:	add	x10, x9, x21
   37910:	add	x8, x25, x21
   37914:	cmp	x10, x11
   37918:	csel	x10, x28, x8, cc  // cc = lo, ul, last
   3791c:	cmp	x9, x19
   37920:	b.ls	37980 <ZSTD_endStream@@Base+0x29a2c>  // b.plast
   37924:	ldr	x11, [sp, #128]
   37928:	ldur	w15, [x29, #-152]
   3792c:	ldur	x12, [x29, #-176]
   37930:	ldur	w16, [x29, #-112]
   37934:	add	w11, w24, w11
   37938:	sub	w13, w15, w11
   3793c:	add	w14, w11, w9
   37940:	cmp	x9, x13
   37944:	mov	w8, wzr
   37948:	add	x12, x12, w26, uxtw #3
   3794c:	sub	w11, w16, w11
   37950:	csel	w15, w14, w15, hi  // hi = pmore
   37954:	cmp	x9, #0x1, lsl #12
   37958:	add	w26, w26, #0x1
   3795c:	stp	w11, w9, [x12]
   37960:	stur	w15, [x29, #-152]
   37964:	b.hi	3799c <ZSTD_endStream@@Base+0x29a48>  // b.pmore
   37968:	ldur	x11, [x29, #-160]
   3796c:	ldur	x12, [x29, #-192]
   37970:	mov	x19, x9
   37974:	add	x11, x11, x9
   37978:	cmp	x11, x12
   3797c:	b.eq	3799c <ZSTD_endStream@@Base+0x29a48>  // b.none
   37980:	ldr	w8, [sp, #144]
   37984:	ldur	x23, [x29, #-168]
   37988:	ldur	w28, [x29, #-100]
   3798c:	cmp	w24, w8
   37990:	b.hi	37888 <ZSTD_endStream@@Base+0x29934>  // b.pmore
   37994:	mov	w8, wzr
   37998:	b	378c0 <ZSTD_endStream@@Base+0x2996c>
   3799c:	ldur	x23, [x29, #-168]
   379a0:	ldur	w28, [x29, #-100]
   379a4:	mov	x19, x9
   379a8:	b	378c0 <ZSTD_endStream@@Base+0x2996c>
   379ac:	mov	w8, wzr
   379b0:	cbz	w8, 37cc4 <ZSTD_endStream@@Base+0x29d70>
   379b4:	ldp	x26, x22, [x29, #-80]
   379b8:	ldr	x27, [sp, #280]
   379bc:	cbnz	w25, 36830 <ZSTD_endStream@@Base+0x288dc>
   379c0:	b	38070 <ZSTD_endStream@@Base+0x2a11c>
   379c4:	mov	w8, wzr
   379c8:	cbnz	w8, 38060 <ZSTD_endStream@@Base+0x2a10c>
   379cc:	ldr	x8, [sp, #112]
   379d0:	ldur	w9, [x29, #-248]
   379d4:	ldr	x10, [sp, #96]
   379d8:	ldur	x25, [x29, #-160]
   379dc:	ldur	w26, [x29, #-88]
   379e0:	mov	x20, xzr
   379e4:	mov	x22, xzr
   379e8:	str	w9, [x8, x10, lsl #2]
   379ec:	add	w8, w9, #0x2
   379f0:	stur	w8, [x29, #-112]
   379f4:	b	37a0c <ZSTD_endStream@@Base+0x29ab8>
   379f8:	mov	x19, x8
   379fc:	mov	w27, w9
   37a00:	mov	x8, x22
   37a04:	mov	x22, x8
   37a08:	tbz	w9, #0, 37d3c <ZSTD_endStream@@Base+0x29de8>
   37a0c:	subs	w27, w27, #0x1
   37a10:	b.cc	37d3c <ZSTD_endStream@@Base+0x29de8>  // b.lo, b.ul, b.last
   37a14:	ldr	w8, [sp, #232]
   37a18:	cmp	w15, w8
   37a1c:	b.cc	37d3c <ZSTD_endStream@@Base+0x29de8>  // b.lo, b.ul, b.last
   37a20:	ldr	x8, [sp, #256]
   37a24:	ldur	x2, [x29, #-192]
   37a28:	cmp	x22, x20
   37a2c:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   37a30:	add	x21, x8, w15, uxtw
   37a34:	add	x0, x25, x23
   37a38:	add	x1, x21, x23
   37a3c:	mov	w24, w15
   37a40:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   37a44:	add	x8, x0, x23
   37a48:	cmp	x8, x19
   37a4c:	b.ls	37aa8 <ZSTD_endStream@@Base+0x29b54>  // b.plast
   37a50:	ldur	w14, [x29, #-152]
   37a54:	ldur	w12, [x29, #-112]
   37a58:	ldp	x13, x23, [x29, #-176]
   37a5c:	add	w11, w24, w8
   37a60:	sub	w10, w14, w24
   37a64:	cmp	x8, x10
   37a68:	mov	w9, wzr
   37a6c:	sub	w12, w12, w24
   37a70:	add	x13, x13, w26, uxtw #3
   37a74:	csel	w14, w11, w14, hi  // hi = pmore
   37a78:	cmp	x8, #0x1, lsl #12
   37a7c:	add	w26, w26, #0x1
   37a80:	mov	w15, w24
   37a84:	stp	w12, w8, [x13]
   37a88:	stur	w14, [x29, #-152]
   37a8c:	b.hi	379f8 <ZSTD_endStream@@Base+0x29aa4>  // b.pmore
   37a90:	ldur	x11, [x29, #-192]
   37a94:	add	x10, x25, x8
   37a98:	mov	x19, x8
   37a9c:	cmp	x10, x11
   37aa0:	b.ne	37ab0 <ZSTD_endStream@@Base+0x29b5c>  // b.any
   37aa4:	b	379f8 <ZSTD_endStream@@Base+0x29aa4>
   37aa8:	ldur	x23, [x29, #-168]
   37aac:	mov	w15, w24
   37ab0:	ldrb	w9, [x21, x8]
   37ab4:	ldrb	w10, [x25, x8]
   37ab8:	ldr	w11, [sp, #184]
   37abc:	cmp	w9, w10
   37ac0:	ldr	x9, [sp, #192]
   37ac4:	and	w11, w15, w11
   37ac8:	lsl	w11, w11, #1
   37acc:	add	x9, x9, w11, uxtw #2
   37ad0:	b.cs	37af4 <ZSTD_endStream@@Base+0x29ba0>  // b.hs, b.nlast
   37ad4:	ldr	w10, [sp, #180]
   37ad8:	cmp	w15, w10
   37adc:	ldr	x10, [sp, #208]
   37ae0:	str	w15, [x10]
   37ae4:	b.ls	37b20 <ZSTD_endStream@@Base+0x29bcc>  // b.plast
   37ae8:	add	x9, x9, #0x4
   37aec:	str	x9, [sp, #208]
   37af0:	b	37b14 <ZSTD_endStream@@Base+0x29bc0>
   37af4:	ldr	w10, [sp, #180]
   37af8:	cmp	w15, w10
   37afc:	ldr	x10, [sp, #200]
   37b00:	str	w15, [x10]
   37b04:	b.ls	37b30 <ZSTD_endStream@@Base+0x29bdc>  // b.plast
   37b08:	str	x9, [sp, #200]
   37b0c:	mov	x20, x8
   37b10:	mov	x8, x22
   37b14:	ldr	w15, [x9]
   37b18:	mov	w9, #0x1                   	// #1
   37b1c:	b	37a04 <ZSTD_endStream@@Base+0x29ab0>
   37b20:	sub	x10, x29, #0x40
   37b24:	mov	w9, wzr
   37b28:	str	x10, [sp, #208]
   37b2c:	b	37a04 <ZSTD_endStream@@Base+0x29ab0>
   37b30:	sub	x10, x29, #0x40
   37b34:	mov	w9, wzr
   37b38:	str	x10, [sp, #200]
   37b3c:	mov	x20, x8
   37b40:	b	37a00 <ZSTD_endStream@@Base+0x29aac>
   37b44:	mov	w8, wzr
   37b48:	cbnz	w8, 38060 <ZSTD_endStream@@Base+0x2a10c>
   37b4c:	ldr	x8, [sp, #112]
   37b50:	ldur	w9, [x29, #-248]
   37b54:	ldr	x10, [sp, #96]
   37b58:	ldur	x25, [x29, #-160]
   37b5c:	ldur	w26, [x29, #-88]
   37b60:	mov	x20, xzr
   37b64:	mov	x22, xzr
   37b68:	str	w9, [x8, x10, lsl #2]
   37b6c:	add	w8, w9, #0x2
   37b70:	stur	w8, [x29, #-112]
   37b74:	b	37b8c <ZSTD_endStream@@Base+0x29c38>
   37b78:	mov	x19, x8
   37b7c:	mov	w27, w9
   37b80:	mov	x8, x22
   37b84:	mov	x22, x8
   37b88:	tbz	w9, #0, 37ec4 <ZSTD_endStream@@Base+0x29f70>
   37b8c:	subs	w27, w27, #0x1
   37b90:	b.cc	37ec4 <ZSTD_endStream@@Base+0x29f70>  // b.lo, b.ul, b.last
   37b94:	ldr	w8, [sp, #232]
   37b98:	cmp	w15, w8
   37b9c:	b.cc	37ec4 <ZSTD_endStream@@Base+0x29f70>  // b.lo, b.ul, b.last
   37ba0:	ldr	x8, [sp, #256]
   37ba4:	ldur	x2, [x29, #-192]
   37ba8:	cmp	x22, x20
   37bac:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   37bb0:	add	x21, x8, w15, uxtw
   37bb4:	add	x0, x25, x23
   37bb8:	add	x1, x21, x23
   37bbc:	mov	w24, w15
   37bc0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   37bc4:	add	x8, x0, x23
   37bc8:	cmp	x8, x19
   37bcc:	b.ls	37c28 <ZSTD_endStream@@Base+0x29cd4>  // b.plast
   37bd0:	ldur	w14, [x29, #-152]
   37bd4:	ldur	w12, [x29, #-112]
   37bd8:	ldp	x13, x23, [x29, #-176]
   37bdc:	add	w11, w24, w8
   37be0:	sub	w10, w14, w24
   37be4:	cmp	x8, x10
   37be8:	mov	w9, wzr
   37bec:	sub	w12, w12, w24
   37bf0:	add	x13, x13, w26, uxtw #3
   37bf4:	csel	w14, w11, w14, hi  // hi = pmore
   37bf8:	cmp	x8, #0x1, lsl #12
   37bfc:	add	w26, w26, #0x1
   37c00:	mov	w15, w24
   37c04:	stp	w12, w8, [x13]
   37c08:	stur	w14, [x29, #-152]
   37c0c:	b.hi	37b78 <ZSTD_endStream@@Base+0x29c24>  // b.pmore
   37c10:	ldur	x11, [x29, #-192]
   37c14:	add	x10, x25, x8
   37c18:	mov	x19, x8
   37c1c:	cmp	x10, x11
   37c20:	b.ne	37c30 <ZSTD_endStream@@Base+0x29cdc>  // b.any
   37c24:	b	37b78 <ZSTD_endStream@@Base+0x29c24>
   37c28:	ldur	x23, [x29, #-168]
   37c2c:	mov	w15, w24
   37c30:	ldrb	w9, [x21, x8]
   37c34:	ldrb	w10, [x25, x8]
   37c38:	ldr	w11, [sp, #184]
   37c3c:	cmp	w9, w10
   37c40:	ldr	x9, [sp, #192]
   37c44:	and	w11, w15, w11
   37c48:	lsl	w11, w11, #1
   37c4c:	add	x9, x9, w11, uxtw #2
   37c50:	b.cs	37c74 <ZSTD_endStream@@Base+0x29d20>  // b.hs, b.nlast
   37c54:	ldr	w10, [sp, #180]
   37c58:	cmp	w15, w10
   37c5c:	ldr	x10, [sp, #208]
   37c60:	str	w15, [x10]
   37c64:	b.ls	37ca0 <ZSTD_endStream@@Base+0x29d4c>  // b.plast
   37c68:	add	x9, x9, #0x4
   37c6c:	str	x9, [sp, #208]
   37c70:	b	37c94 <ZSTD_endStream@@Base+0x29d40>
   37c74:	ldr	w10, [sp, #180]
   37c78:	cmp	w15, w10
   37c7c:	ldr	x10, [sp, #200]
   37c80:	str	w15, [x10]
   37c84:	b.ls	37cb0 <ZSTD_endStream@@Base+0x29d5c>  // b.plast
   37c88:	str	x9, [sp, #200]
   37c8c:	mov	x20, x8
   37c90:	mov	x8, x22
   37c94:	ldr	w15, [x9]
   37c98:	mov	w9, #0x1                   	// #1
   37c9c:	b	37b84 <ZSTD_endStream@@Base+0x29c30>
   37ca0:	sub	x10, x29, #0x40
   37ca4:	mov	w9, wzr
   37ca8:	str	x10, [sp, #208]
   37cac:	b	37b84 <ZSTD_endStream@@Base+0x29c30>
   37cb0:	sub	x10, x29, #0x40
   37cb4:	mov	w9, wzr
   37cb8:	str	x10, [sp, #200]
   37cbc:	mov	x20, x8
   37cc0:	b	37b80 <ZSTD_endStream@@Base+0x29c2c>
   37cc4:	cmp	x27, #0x2
   37cc8:	b.hi	3a280 <ZSTD_endStream@@Base+0x2c32c>  // b.pmore
   37ccc:	ldur	x22, [x29, #-72]
   37cd0:	ldur	x21, [x29, #-160]
   37cd4:	sub	x1, x29, #0xc
   37cd8:	stur	w16, [x29, #-88]
   37cdc:	mov	x0, x22
   37ce0:	mov	x2, x21
   37ce4:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   37ce8:	ldr	w8, [sp, #240]
   37cec:	cmp	w0, w8
   37cf0:	b.cc	3a25c <ZSTD_endStream@@Base+0x2c308>  // b.lo, b.ul, b.last
   37cf4:	ldur	w8, [x29, #-184]
   37cf8:	sub	w19, w8, w0
   37cfc:	lsr	w8, w19, #18
   37d00:	cbnz	w8, 3a25c <ZSTD_endStream@@Base+0x2c308>
   37d04:	ldr	x8, [sp, #232]
   37d08:	ldur	x2, [x29, #-192]
   37d0c:	add	x1, x8, w0, uxtw
   37d10:	mov	x0, x21
   37d14:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   37d18:	cmp	x0, #0x3
   37d1c:	b.cs	3a5ac <ZSTD_endStream@@Base+0x2c658>  // b.hs, b.nlast
   37d20:	ldur	x26, [x29, #-80]
   37d24:	ldur	w16, [x29, #-88]
   37d28:	mov	w8, wzr
   37d2c:	mov	x0, x27
   37d30:	mov	x27, x0
   37d34:	cbnz	w8, 3a26c <ZSTD_endStream@@Base+0x2c318>
   37d38:	b	3a264 <ZSTD_endStream@@Base+0x2c310>
   37d3c:	ldr	x8, [sp, #200]
   37d40:	str	wzr, [x8]
   37d44:	ldr	x8, [sp, #208]
   37d48:	str	wzr, [x8]
   37d4c:	cbz	w27, 38048 <ZSTD_endStream@@Base+0x2a0f4>
   37d50:	ldr	w1, [sp, #72]
   37d54:	mov	w2, #0x5                   	// #5
   37d58:	mov	x0, x25
   37d5c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   37d60:	ldr	x9, [sp, #88]
   37d64:	mov	x20, xzr
   37d68:	mov	x22, xzr
   37d6c:	ldr	x8, [x9, #48]
   37d70:	ldr	w24, [x8, x0, lsl #2]
   37d74:	ldr	x8, [x9, #64]
   37d78:	ldr	x9, [sp, #256]
   37d7c:	stur	x8, [x29, #-120]
   37d80:	ldr	x8, [sp, #80]
   37d84:	and	x8, x8, #0xffffffff
   37d88:	stur	x8, [x29, #-88]
   37d8c:	ldr	x8, [sp, #128]
   37d90:	add	x25, x9, x8
   37d94:	b	37da0 <ZSTD_endStream@@Base+0x29e4c>
   37d98:	mov	w8, wzr
   37d9c:	tbz	wzr, #0, 38048 <ZSTD_endStream@@Base+0x2a0f4>
   37da0:	subs	w27, w27, #0x1
   37da4:	b.cc	38048 <ZSTD_endStream@@Base+0x2a0f4>  // b.lo, b.ul, b.last
   37da8:	ldr	w8, [sp, #160]
   37dac:	cmp	w24, w8
   37db0:	b.ls	38048 <ZSTD_endStream@@Base+0x2a0f4>  // b.plast
   37db4:	ldr	x8, [sp, #152]
   37db8:	mov	w21, w24
   37dbc:	ldur	x2, [x29, #-192]
   37dc0:	ldp	x3, x4, [sp, #216]
   37dc4:	add	x28, x8, x21
   37dc8:	ldur	x8, [x29, #-160]
   37dcc:	cmp	x22, x20
   37dd0:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   37dd4:	add	x1, x28, x23
   37dd8:	add	x0, x8, x23
   37ddc:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   37de0:	ldur	x11, [x29, #-88]
   37de4:	add	x9, x0, x23
   37de8:	add	x10, x9, x21
   37dec:	add	x8, x25, x21
   37df0:	cmp	x10, x11
   37df4:	csel	x10, x28, x8, cc  // cc = lo, ul, last
   37df8:	cmp	x9, x19
   37dfc:	b.ls	37e5c <ZSTD_endStream@@Base+0x29f08>  // b.plast
   37e00:	ldr	x11, [sp, #128]
   37e04:	ldur	w15, [x29, #-152]
   37e08:	ldur	x12, [x29, #-176]
   37e0c:	ldur	w16, [x29, #-112]
   37e10:	add	w11, w24, w11
   37e14:	sub	w13, w15, w11
   37e18:	add	w14, w11, w9
   37e1c:	cmp	x9, x13
   37e20:	mov	w8, wzr
   37e24:	add	x12, x12, w26, uxtw #3
   37e28:	sub	w11, w16, w11
   37e2c:	csel	w15, w14, w15, hi  // hi = pmore
   37e30:	cmp	x9, #0x1, lsl #12
   37e34:	add	w26, w26, #0x1
   37e38:	stp	w11, w9, [x12]
   37e3c:	stur	w15, [x29, #-152]
   37e40:	b.hi	37eb0 <ZSTD_endStream@@Base+0x29f5c>  // b.pmore
   37e44:	ldur	x11, [x29, #-160]
   37e48:	ldur	x12, [x29, #-192]
   37e4c:	mov	x19, x9
   37e50:	add	x11, x11, x9
   37e54:	cmp	x11, x12
   37e58:	b.eq	37eb0 <ZSTD_endStream@@Base+0x29f5c>  // b.none
   37e5c:	ldr	w8, [sp, #144]
   37e60:	ldur	x23, [x29, #-168]
   37e64:	ldur	w28, [x29, #-100]
   37e68:	cmp	w24, w8
   37e6c:	b.ls	37d98 <ZSTD_endStream@@Base+0x29e44>  // b.plast
   37e70:	ldrb	w8, [x10, x9]
   37e74:	ldur	x10, [x29, #-160]
   37e78:	ldr	w11, [sp, #124]
   37e7c:	ldur	x12, [x29, #-120]
   37e80:	ldrb	w10, [x10, x9]
   37e84:	and	w11, w24, w11
   37e88:	lsl	w11, w11, #1
   37e8c:	add	x11, x12, w11, uxtw #2
   37e90:	cmp	w8, w10
   37e94:	cset	w8, cc  // cc = lo, ul, last
   37e98:	ldr	w24, [x11, w8, uxtw #2]
   37e9c:	csel	x20, x20, x9, cc  // cc = lo, ul, last
   37ea0:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   37ea4:	mov	w8, #0x1                   	// #1
   37ea8:	tbnz	w8, #0, 37da0 <ZSTD_endStream@@Base+0x29e4c>
   37eac:	b	38048 <ZSTD_endStream@@Base+0x2a0f4>
   37eb0:	ldur	x23, [x29, #-168]
   37eb4:	ldur	w28, [x29, #-100]
   37eb8:	mov	x19, x9
   37ebc:	tbnz	w8, #0, 37da0 <ZSTD_endStream@@Base+0x29e4c>
   37ec0:	b	38048 <ZSTD_endStream@@Base+0x2a0f4>
   37ec4:	ldr	x8, [sp, #200]
   37ec8:	str	wzr, [x8]
   37ecc:	ldr	x8, [sp, #208]
   37ed0:	str	wzr, [x8]
   37ed4:	cbz	w27, 38048 <ZSTD_endStream@@Base+0x2a0f4>
   37ed8:	ldr	w1, [sp, #72]
   37edc:	mov	w2, #0x4                   	// #4
   37ee0:	mov	x0, x25
   37ee4:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   37ee8:	ldr	x9, [sp, #88]
   37eec:	mov	x20, xzr
   37ef0:	mov	x22, xzr
   37ef4:	ldr	x8, [x9, #48]
   37ef8:	ldr	w24, [x8, x0, lsl #2]
   37efc:	ldr	x8, [x9, #64]
   37f00:	ldr	x9, [sp, #256]
   37f04:	stur	x8, [x29, #-120]
   37f08:	ldr	x8, [sp, #80]
   37f0c:	and	x8, x8, #0xffffffff
   37f10:	stur	x8, [x29, #-88]
   37f14:	ldr	x8, [sp, #128]
   37f18:	add	x25, x9, x8
   37f1c:	b	37f28 <ZSTD_endStream@@Base+0x29fd4>
   37f20:	mov	w8, wzr
   37f24:	tbz	wzr, #0, 38048 <ZSTD_endStream@@Base+0x2a0f4>
   37f28:	subs	w27, w27, #0x1
   37f2c:	b.cc	38048 <ZSTD_endStream@@Base+0x2a0f4>  // b.lo, b.ul, b.last
   37f30:	ldr	w8, [sp, #160]
   37f34:	cmp	w24, w8
   37f38:	b.ls	38048 <ZSTD_endStream@@Base+0x2a0f4>  // b.plast
   37f3c:	ldr	x8, [sp, #152]
   37f40:	mov	w21, w24
   37f44:	ldur	x2, [x29, #-192]
   37f48:	ldp	x3, x4, [sp, #216]
   37f4c:	add	x28, x8, x21
   37f50:	ldur	x8, [x29, #-160]
   37f54:	cmp	x22, x20
   37f58:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   37f5c:	add	x1, x28, x23
   37f60:	add	x0, x8, x23
   37f64:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   37f68:	ldur	x11, [x29, #-88]
   37f6c:	add	x9, x0, x23
   37f70:	add	x10, x9, x21
   37f74:	add	x8, x25, x21
   37f78:	cmp	x10, x11
   37f7c:	csel	x10, x28, x8, cc  // cc = lo, ul, last
   37f80:	cmp	x9, x19
   37f84:	b.ls	37fe4 <ZSTD_endStream@@Base+0x2a090>  // b.plast
   37f88:	ldr	x11, [sp, #128]
   37f8c:	ldur	w15, [x29, #-152]
   37f90:	ldur	x12, [x29, #-176]
   37f94:	ldur	w16, [x29, #-112]
   37f98:	add	w11, w24, w11
   37f9c:	sub	w13, w15, w11
   37fa0:	add	w14, w11, w9
   37fa4:	cmp	x9, x13
   37fa8:	mov	w8, wzr
   37fac:	add	x12, x12, w26, uxtw #3
   37fb0:	sub	w11, w16, w11
   37fb4:	csel	w15, w14, w15, hi  // hi = pmore
   37fb8:	cmp	x9, #0x1, lsl #12
   37fbc:	add	w26, w26, #0x1
   37fc0:	stp	w11, w9, [x12]
   37fc4:	stur	w15, [x29, #-152]
   37fc8:	b.hi	38038 <ZSTD_endStream@@Base+0x2a0e4>  // b.pmore
   37fcc:	ldur	x11, [x29, #-160]
   37fd0:	ldur	x12, [x29, #-192]
   37fd4:	mov	x19, x9
   37fd8:	add	x11, x11, x9
   37fdc:	cmp	x11, x12
   37fe0:	b.eq	38038 <ZSTD_endStream@@Base+0x2a0e4>  // b.none
   37fe4:	ldr	w8, [sp, #144]
   37fe8:	ldur	x23, [x29, #-168]
   37fec:	ldur	w28, [x29, #-100]
   37ff0:	cmp	w24, w8
   37ff4:	b.ls	37f20 <ZSTD_endStream@@Base+0x29fcc>  // b.plast
   37ff8:	ldrb	w8, [x10, x9]
   37ffc:	ldur	x10, [x29, #-160]
   38000:	ldr	w11, [sp, #124]
   38004:	ldur	x12, [x29, #-120]
   38008:	ldrb	w10, [x10, x9]
   3800c:	and	w11, w24, w11
   38010:	lsl	w11, w11, #1
   38014:	add	x11, x12, w11, uxtw #2
   38018:	cmp	w8, w10
   3801c:	cset	w8, cc  // cc = lo, ul, last
   38020:	ldr	w24, [x11, w8, uxtw #2]
   38024:	csel	x20, x20, x9, cc  // cc = lo, ul, last
   38028:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   3802c:	mov	w8, #0x1                   	// #1
   38030:	tbnz	w8, #0, 37f28 <ZSTD_endStream@@Base+0x29fd4>
   38034:	b	38048 <ZSTD_endStream@@Base+0x2a0f4>
   38038:	ldur	x23, [x29, #-168]
   3803c:	ldur	w28, [x29, #-100]
   38040:	mov	x19, x9
   38044:	tbnz	w8, #0, 37f28 <ZSTD_endStream@@Base+0x29fd4>
   38048:	ldur	w8, [x29, #-152]
   3804c:	ldur	x9, [x29, #-72]
   38050:	mov	w25, w26
   38054:	sub	w8, w8, #0x8
   38058:	str	w8, [x9, #36]
   3805c:	ldur	x20, [x29, #-208]
   38060:	ldr	x27, [sp, #280]
   38064:	ldp	x26, x22, [x29, #-80]
   38068:	ldur	w24, [x29, #-196]
   3806c:	cbnz	w25, 36830 <ZSTD_endStream@@Base+0x288dc>
   38070:	ldur	x8, [x29, #-160]
   38074:	mov	w0, wzr
   38078:	add	x8, x8, #0x1
   3807c:	stur	x8, [x29, #-160]
   38080:	mov	w8, #0x2                   	// #2
   38084:	cmp	w8, #0x7
   38088:	b.eq	39f38 <ZSTD_endStream@@Base+0x2bfe4>  // b.none
   3808c:	cbnz	w8, 367ec <ZSTD_endStream@@Base+0x28898>
   38090:	cbz	w0, 39f44 <ZSTD_endStream@@Base+0x2bff0>
   38094:	mov	w28, #0x1                   	// #1
   38098:	sub	w19, w28, #0x1
   3809c:	mov	w9, #0x1c                  	// #28
   380a0:	umaddl	x8, w19, w9, x26
   380a4:	ldur	x10, [x29, #-160]
   380a8:	ldr	w8, [x8, #8]
   380ac:	mov	w11, w28
   380b0:	stur	w0, [x29, #-112]
   380b4:	add	x10, x10, x11
   380b8:	stp	x11, x10, [x29, #-96]
   380bc:	cbz	w8, 380cc <ZSTD_endStream@@Base+0x2a178>
   380c0:	mov	w25, #0x1c                  	// #28
   380c4:	mov	w20, #0x1                   	// #1
   380c8:	b	380dc <ZSTD_endStream@@Base+0x2a188>
   380cc:	madd	x8, x19, x9, x26
   380d0:	ldr	w8, [x8, #12]
   380d4:	mov	w25, #0x1c                  	// #28
   380d8:	add	w20, w8, #0x1
   380dc:	ldur	x23, [x29, #-88]
   380e0:	ldur	x24, [x29, #-216]
   380e4:	mul	x8, x19, x25
   380e8:	ldr	w21, [x26, x8]
   380ec:	sub	x0, x23, #0x1
   380f0:	mov	w1, #0x1                   	// #1
   380f4:	mov	w3, #0x2                   	// #2
   380f8:	mov	x2, x24
   380fc:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   38100:	add	w21, w0, w21
   38104:	mov	w2, #0x2                   	// #2
   38108:	mov	w0, w20
   3810c:	mov	x1, x24
   38110:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   38114:	add	w21, w21, w0
   38118:	sub	w0, w20, #0x1
   3811c:	mov	w2, #0x2                   	// #2
   38120:	mov	x1, x24
   38124:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   38128:	ldur	x9, [x29, #-96]
   3812c:	madd	x8, x9, x25, x26
   38130:	ldr	w10, [x8]
   38134:	mov	x25, x9
   38138:	sub	w9, w21, w0
   3813c:	cmp	w9, w10
   38140:	b.gt	3816c <ZSTD_endStream@@Base+0x2a218>
   38144:	mov	w11, #0x1c                  	// #28
   38148:	madd	x10, x25, x11, x26
   3814c:	madd	x11, x19, x11, x26
   38150:	stur	xzr, [x10, #4]
   38154:	str	w20, [x10, #12]
   38158:	str	w9, [x8]
   3815c:	ldr	w9, [x11, #24]
   38160:	ldr	x11, [x11, #16]
   38164:	str	w9, [x10, #24]
   38168:	str	x11, [x10, #16]
   3816c:	ldr	x9, [sp, #288]
   38170:	ldur	w24, [x29, #-196]
   38174:	ldur	w0, [x29, #-112]
   38178:	cmp	x23, x9
   3817c:	b.ls	38188 <ZSTD_endStream@@Base+0x2a234>  // b.plast
   38180:	mov	w8, #0x13                  	// #19
   38184:	b	38194 <ZSTD_endStream@@Base+0x2a240>
   38188:	cmp	w28, w0
   3818c:	b.ne	381a8 <ZSTD_endStream@@Base+0x2a254>  // b.any
   38190:	mov	w8, #0x11                  	// #17
   38194:	ldur	x20, [x29, #-208]
   38198:	ldur	x23, [x29, #-168]
   3819c:	cmp	w8, #0x13
   381a0:	b.ls	39b80 <ZSTD_endStream@@Base+0x2bc2c>  // b.plast
   381a4:	b	367ec <ZSTD_endStream@@Base+0x28898>
   381a8:	mov	w10, #0x1c                  	// #28
   381ac:	madd	x12, x25, x10, x26
   381b0:	mov	x9, x26
   381b4:	ldr	w26, [x12, #8]!
   381b8:	ldur	x23, [x29, #-168]
   381bc:	cmp	w26, #0x0
   381c0:	cset	w11, ne  // ne = any
   381c4:	stur	w11, [x29, #-232]
   381c8:	str	x12, [sp, #184]
   381cc:	cbz	w26, 381d8 <ZSTD_endStream@@Base+0x2a284>
   381d0:	stur	wzr, [x29, #-124]
   381d4:	b	381e4 <ZSTD_endStream@@Base+0x2a290>
   381d8:	madd	x9, x25, x10, x9
   381dc:	ldr	w9, [x9, #12]
   381e0:	stur	w9, [x29, #-124]
   381e4:	ldr	w8, [x8]
   381e8:	ldur	x1, [x29, #-216]
   381ec:	mov	w2, #0x2                   	// #2
   381f0:	mov	w0, wzr
   381f4:	str	w8, [sp, #180]
   381f8:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   381fc:	ldr	x19, [x22, #8]
   38200:	ldr	w21, [x22, #36]
   38204:	ldur	x9, [x29, #-88]
   38208:	mov	w20, wzr
   3820c:	str	w0, [sp, #168]
   38210:	add	x8, x19, x21
   38214:	cmp	x8, x9
   38218:	b.hi	39864 <ZSTD_endStream@@Base+0x2b910>  // b.pmore
   3821c:	ldur	x8, [x29, #-80]
   38220:	ldr	w20, [x22, #200]
   38224:	ldur	x24, [x29, #-192]
   38228:	mov	x10, x25
   3822c:	mov	x25, x22
   38230:	sub	w22, w9, w19
   38234:	mov	w9, #0x1c                  	// #28
   38238:	cmp	w21, w22
   3823c:	madd	x23, x10, x9, x8
   38240:	b.cs	38268 <ZSTD_endStream@@Base+0x2a314>  // b.hs, b.nlast
   38244:	add	x1, x19, w21, uxtw
   38248:	mov	x0, x25
   3824c:	mov	x2, x24
   38250:	mov	w3, w20
   38254:	mov	w4, wzr
   38258:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   3825c:	add	w21, w0, w21
   38260:	cmp	w21, w22
   38264:	b.cc	38244 <ZSTD_endStream@@Base+0x2a2f0>  // b.lo, b.ul, b.last
   38268:	add	x8, x23, #0x10
   3826c:	stur	x8, [x29, #-144]
   38270:	sub	w8, w20, #0x6
   38274:	cmp	w8, #0x2
   38278:	mov	x21, x25
   3827c:	str	w22, [x25, #36]
   38280:	stur	w28, [x29, #-100]
   38284:	b.cc	385b0 <ZSTD_endStream@@Base+0x2a65c>  // b.lo, b.ul, b.last
   38288:	ldur	x23, [x29, #-96]
   3828c:	cmp	w20, #0x5
   38290:	lsl	x8, x23, #3
   38294:	str	x8, [sp, #248]
   38298:	b.eq	388bc <ZSTD_endStream@@Base+0x2a968>  // b.none
   3829c:	ldur	x23, [x29, #-168]
   382a0:	cmp	w20, #0x3
   382a4:	mov	w9, #0xfff                 	// #4095
   382a8:	b.ne	38bc4 <ZSTD_endStream@@Base+0x2ac70>  // b.any
   382ac:	ldr	w8, [x21, #204]
   382b0:	ldur	x27, [x29, #-88]
   382b4:	ldr	x28, [x21, #8]
   382b8:	ldr	w1, [x21, #192]
   382bc:	ldr	x20, [x21, #48]
   382c0:	cmp	w8, #0xfff
   382c4:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   382c8:	mov	w2, #0x3                   	// #3
   382cc:	mov	x0, x27
   382d0:	stur	w8, [x29, #-248]
   382d4:	sub	w19, w27, w28
   382d8:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   382dc:	ldp	w2, w8, [x21, #184]
   382e0:	stp	x0, x20, [sp, #32]
   382e4:	ldr	w9, [x20, x0, lsl #2]
   382e8:	ldr	w22, [x21, #24]
   382ec:	sub	w8, w8, #0x1
   382f0:	mov	x0, x21
   382f4:	stur	w9, [x29, #-184]
   382f8:	ldr	x9, [x21, #64]
   382fc:	mov	w1, w19
   38300:	str	x9, [sp, #160]
   38304:	mov	w9, #0xffffffff            	// #-1
   38308:	lsl	w20, w9, w8
   3830c:	mvn	w8, w20
   38310:	str	w8, [sp, #124]
   38314:	subs	w8, w19, w8
   38318:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3831c:	str	w8, [sp, #112]
   38320:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   38324:	sub	w8, w19, w22
   38328:	stur	w8, [x29, #-120]
   3832c:	ldur	x8, [x29, #-96]
   38330:	ldr	x9, [sp, #248]
   38334:	cmp	w0, #0x0
   38338:	add	w10, w19, #0x9
   3833c:	add	x11, x27, #0x3
   38340:	ldr	x15, [x21, #176]
   38344:	str	w10, [sp, #152]
   38348:	ldr	w10, [x21, #196]
   3834c:	stp	x11, x22, [sp, #232]
   38350:	csinc	w11, w0, wzr, ne  // ne = any
   38354:	str	w11, [sp, #200]
   38358:	ldr	x11, [sp, #160]
   3835c:	sub	x8, x9, x8
   38360:	add	x9, x28, x22
   38364:	str	x9, [sp, #224]
   38368:	bic	w9, w19, w20
   3836c:	lsl	w9, w9, #1
   38370:	add	x9, x11, w9, uxtw #2
   38374:	str	x9, [sp, #144]
   38378:	add	x9, x9, #0x4
   3837c:	mov	w11, #0x1                   	// #1
   38380:	str	x28, [sp, #208]
   38384:	str	x9, [sp, #128]
   38388:	lsl	w10, w11, w10
   3838c:	ldp	x13, x12, [x15]
   38390:	str	w10, [sp, #60]
   38394:	str	x15, [sp, #24]
   38398:	ldp	w9, w10, [x15, #188]
   3839c:	ldr	w14, [x15, #28]
   383a0:	sub	x16, x13, x12
   383a4:	mov	w11, #0xffffffff            	// #-1
   383a8:	sub	w9, w9, #0x1
   383ac:	str	w10, [sp, #12]
   383b0:	str	x13, [sp, #216]
   383b4:	sub	w10, w19, w14
   383b8:	sub	w13, w0, w16
   383bc:	lsl	w9, w11, w9
   383c0:	mvn	w15, w9
   383c4:	sub	w9, w10, w13
   383c8:	sub	w11, w16, w14
   383cc:	str	w9, [sp, #256]
   383d0:	sub	x9, x12, x13
   383d4:	str	x9, [sp, #192]
   383d8:	sub	w9, w16, w15
   383dc:	cmp	w11, w15
   383e0:	csel	w9, w9, w14, hi  // hi = pmore
   383e4:	str	w9, [sp, #80]
   383e8:	cmp	w26, #0x0
   383ec:	mov	w9, #0x3                   	// #3
   383f0:	cinc	x28, x9, ne  // ne = any
   383f4:	ldur	x9, [x29, #-208]
   383f8:	str	w19, [sp, #248]
   383fc:	ldr	x19, [sp, #136]
   38400:	cinc	x8, x8, ne  // ne = any
   38404:	mov	x24, xzr
   38408:	mov	w25, wzr
   3840c:	mov	x26, x27
   38410:	cset	w22, ne  // ne = any
   38414:	add	x8, x9, x8, lsl #2
   38418:	str	x12, [sp, #88]
   3841c:	str	x13, [sp, #72]
   38420:	str	x16, [sp, #16]
   38424:	str	w15, [sp, #64]
   38428:	str	w14, [sp, #96]
   3842c:	stur	x8, [x29, #-152]
   38430:	add	x8, x22, x24
   38434:	cmp	x8, #0x3
   38438:	b.eq	38448 <ZSTD_endStream@@Base+0x2a4f4>  // b.none
   3843c:	ldur	x8, [x29, #-152]
   38440:	ldr	w21, [x8, x24, lsl #2]
   38444:	b	38454 <ZSTD_endStream@@Base+0x2a500>
   38448:	ldur	x8, [x29, #-144]
   3844c:	ldr	w8, [x8]
   38450:	sub	w21, w8, #0x1
   38454:	ldur	w9, [x29, #-120]
   38458:	sub	w8, w21, #0x1
   3845c:	cmp	w8, w9
   38460:	b.cs	384a8 <ZSTD_endStream@@Base+0x2a554>  // b.hs, b.nlast
   38464:	mov	w1, #0x3                   	// #3
   38468:	mov	x0, x26
   3846c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38470:	mov	w21, w21
   38474:	mov	w20, w0
   38478:	sub	x0, x26, x21
   3847c:	mov	w1, #0x3                   	// #3
   38480:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38484:	cmp	w20, w0
   38488:	b.ne	3851c <ZSTD_endStream@@Base+0x2a5c8>  // b.any
   3848c:	ldr	x0, [sp, #232]
   38490:	ldur	x2, [x29, #-192]
   38494:	neg	x8, x21
   38498:	add	x1, x0, x8
   3849c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   384a0:	add	w8, w0, #0x3
   384a4:	b	3852c <ZSTD_endStream@@Base+0x2a5d8>
   384a8:	ldr	w9, [sp, #256]
   384ac:	cmp	w8, w9
   384b0:	mov	w8, wzr
   384b4:	b.cs	3852c <ZSTD_endStream@@Base+0x2a5d8>  // b.hs, b.nlast
   384b8:	ldr	w9, [sp, #248]
   384bc:	ldr	x11, [sp, #240]
   384c0:	sub	w9, w9, w21
   384c4:	mvn	w10, w9
   384c8:	add	w10, w11, w10
   384cc:	cmp	w10, #0x3
   384d0:	b.cc	3852c <ZSTD_endStream@@Base+0x2a5d8>  // b.lo, b.ul, b.last
   384d4:	ldr	x8, [sp, #192]
   384d8:	mov	w1, #0x3                   	// #3
   384dc:	mov	x0, x26
   384e0:	add	x20, x8, w9, uxtw
   384e4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   384e8:	mov	w26, w0
   384ec:	mov	w1, #0x3                   	// #3
   384f0:	mov	x0, x20
   384f4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   384f8:	cmp	w26, w0
   384fc:	b.ne	38524 <ZSTD_endStream@@Base+0x2a5d0>  // b.any
   38500:	ldp	x4, x0, [sp, #224]
   38504:	ldur	x2, [x29, #-192]
   38508:	ldr	x3, [sp, #216]
   3850c:	add	x1, x20, #0x3
   38510:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   38514:	add	w8, w0, #0x3
   38518:	b	38528 <ZSTD_endStream@@Base+0x2a5d4>
   3851c:	mov	w8, wzr
   38520:	b	3852c <ZSTD_endStream@@Base+0x2a5d8>
   38524:	mov	w8, wzr
   38528:	ldur	x26, [x29, #-88]
   3852c:	mov	w9, w8
   38530:	cmp	x19, x9
   38534:	b.cs	38574 <ZSTD_endStream@@Base+0x2a620>  // b.hs, b.nlast
   38538:	ldur	x10, [x29, #-176]
   3853c:	ldur	w11, [x29, #-248]
   38540:	add	x10, x10, w25, uxtw #3
   38544:	add	w25, w25, #0x1
   38548:	cmp	w8, w11
   3854c:	stp	w24, w8, [x10]
   38550:	mov	w8, #0x1                   	// #1
   38554:	b.hi	385a0 <ZSTD_endStream@@Base+0x2a64c>  // b.pmore
   38558:	ldur	x11, [x29, #-192]
   3855c:	add	x10, x26, x9
   38560:	mov	x19, x9
   38564:	mov	w20, w25
   38568:	cmp	x10, x11
   3856c:	b.ne	38578 <ZSTD_endStream@@Base+0x2a624>  // b.any
   38570:	b	38584 <ZSTD_endStream@@Base+0x2a630>
   38574:	mov	x9, x19
   38578:	mov	w8, wzr
   3857c:	mov	x19, x9
   38580:	mov	w20, w27
   38584:	cbnz	w8, 391b8 <ZSTD_endStream@@Base+0x2b264>
   38588:	add	x24, x24, #0x1
   3858c:	add	x8, x22, x24
   38590:	cmp	x8, x28
   38594:	mov	w27, w20
   38598:	b.cc	38430 <ZSTD_endStream@@Base+0x2a4dc>  // b.lo, b.ul, b.last
   3859c:	b	391b4 <ZSTD_endStream@@Base+0x2b260>
   385a0:	mov	x19, x9
   385a4:	mov	w20, w25
   385a8:	cbz	w8, 38588 <ZSTD_endStream@@Base+0x2a634>
   385ac:	b	391b8 <ZSTD_endStream@@Base+0x2b264>
   385b0:	ldr	w8, [x21, #204]
   385b4:	ldur	x23, [x29, #-88]
   385b8:	ldr	x24, [x21, #8]
   385bc:	ldr	w1, [x21, #192]
   385c0:	ldr	x19, [x21, #48]
   385c4:	cmp	w8, #0xfff
   385c8:	mov	w9, #0xfff                 	// #4095
   385cc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   385d0:	mov	w2, #0x6                   	// #6
   385d4:	mov	x0, x23
   385d8:	str	w8, [sp, #256]
   385dc:	sub	w22, w23, w24
   385e0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   385e4:	ldp	w2, w8, [x21, #184]
   385e8:	mov	w9, #0xffffffff            	// #-1
   385ec:	stp	x0, x19, [sp, #32]
   385f0:	ldr	w27, [x19, x0, lsl #2]
   385f4:	sub	w8, w8, #0x1
   385f8:	lsl	w20, w9, w8
   385fc:	ldr	x25, [x21, #64]
   38600:	ldr	w28, [x21, #24]
   38604:	mvn	w8, w20
   38608:	str	w8, [sp, #124]
   3860c:	subs	w8, w22, w8
   38610:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   38614:	mov	x0, x21
   38618:	mov	w1, w22
   3861c:	str	w8, [sp, #112]
   38620:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   38624:	add	x9, x24, x28
   38628:	ldur	x11, [x29, #-96]
   3862c:	str	x9, [sp, #200]
   38630:	bic	w9, w22, w20
   38634:	ldr	x15, [x21, #176]
   38638:	stp	x28, x24, [sp, #224]
   3863c:	add	w10, w22, #0x9
   38640:	lsl	w9, w9, #1
   38644:	cmp	w0, #0x0
   38648:	str	w10, [sp, #160]
   3864c:	ldr	w10, [x21, #196]
   38650:	add	x12, x23, #0x4
   38654:	add	x9, x25, w9, uxtw #2
   38658:	sub	w8, w22, w28
   3865c:	str	x12, [sp, #216]
   38660:	csinc	w12, w0, wzr, ne  // ne = any
   38664:	str	x9, [sp, #152]
   38668:	add	x9, x9, #0x4
   3866c:	stur	wzr, [x29, #-120]
   38670:	stur	w8, [x29, #-152]
   38674:	lsl	x8, x11, #3
   38678:	str	w12, [sp, #208]
   3867c:	str	x25, [sp, #128]
   38680:	str	x9, [sp, #144]
   38684:	sub	x8, x8, x11
   38688:	ldp	x13, x12, [x15]
   3868c:	mov	w11, #0x1                   	// #1
   38690:	str	x15, [sp, #24]
   38694:	lsl	w28, w11, w10
   38698:	ldp	w9, w10, [x15, #188]
   3869c:	ldr	w14, [x15, #28]
   386a0:	sub	x16, x13, x12
   386a4:	mov	w11, #0xffffffff            	// #-1
   386a8:	sub	w9, w9, #0x1
   386ac:	str	w10, [sp, #12]
   386b0:	str	x13, [sp, #192]
   386b4:	sub	w10, w22, w14
   386b8:	sub	w13, w0, w16
   386bc:	lsl	w9, w11, w9
   386c0:	mvn	w15, w9
   386c4:	sub	w9, w10, w13
   386c8:	sub	w11, w16, w14
   386cc:	str	w9, [sp, #248]
   386d0:	sub	x9, x12, x13
   386d4:	str	x9, [sp, #96]
   386d8:	sub	w9, w16, w15
   386dc:	cmp	w11, w15
   386e0:	csel	w9, w9, w14, hi  // hi = pmore
   386e4:	str	w9, [sp, #72]
   386e8:	cmp	w26, #0x0
   386ec:	mov	w9, #0x3                   	// #3
   386f0:	cinc	x25, x9, ne  // ne = any
   386f4:	ldur	x9, [x29, #-208]
   386f8:	mov	x26, x23
   386fc:	ldr	x24, [sp, #136]
   38700:	ldur	x23, [x29, #-168]
   38704:	cinc	x8, x8, ne  // ne = any
   38708:	mov	x19, xzr
   3870c:	str	w22, [sp, #240]
   38710:	str	x12, [sp, #80]
   38714:	mov	w12, w27
   38718:	cset	w22, ne  // ne = any
   3871c:	add	x8, x9, x8, lsl #2
   38720:	str	x13, [sp, #64]
   38724:	str	x16, [sp, #16]
   38728:	str	w15, [sp, #60]
   3872c:	str	w14, [sp, #88]
   38730:	stur	x8, [x29, #-248]
   38734:	stur	w12, [x29, #-184]
   38738:	add	x8, x22, x19
   3873c:	cmp	x8, #0x3
   38740:	b.eq	38750 <ZSTD_endStream@@Base+0x2a7fc>  // b.none
   38744:	ldur	x8, [x29, #-248]
   38748:	ldr	w21, [x8, x19, lsl #2]
   3874c:	b	3875c <ZSTD_endStream@@Base+0x2a808>
   38750:	ldur	x8, [x29, #-144]
   38754:	ldr	w8, [x8]
   38758:	sub	w21, w8, #0x1
   3875c:	ldur	w9, [x29, #-152]
   38760:	sub	w8, w21, #0x1
   38764:	cmp	w8, w9
   38768:	b.cs	387b0 <ZSTD_endStream@@Base+0x2a85c>  // b.hs, b.nlast
   3876c:	mov	w1, #0x4                   	// #4
   38770:	mov	x0, x26
   38774:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38778:	mov	w21, w21
   3877c:	mov	w20, w0
   38780:	sub	x0, x26, x21
   38784:	mov	w1, #0x4                   	// #4
   38788:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3878c:	cmp	w20, w0
   38790:	b.ne	38824 <ZSTD_endStream@@Base+0x2a8d0>  // b.any
   38794:	ldr	x0, [sp, #216]
   38798:	ldur	x2, [x29, #-192]
   3879c:	neg	x8, x21
   387a0:	add	x1, x0, x8
   387a4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   387a8:	add	w8, w0, #0x4
   387ac:	b	38834 <ZSTD_endStream@@Base+0x2a8e0>
   387b0:	ldr	w9, [sp, #248]
   387b4:	cmp	w8, w9
   387b8:	mov	w8, wzr
   387bc:	b.cs	38838 <ZSTD_endStream@@Base+0x2a8e4>  // b.hs, b.nlast
   387c0:	ldr	w9, [sp, #240]
   387c4:	ldr	x11, [sp, #224]
   387c8:	sub	w9, w9, w21
   387cc:	mvn	w10, w9
   387d0:	add	w10, w11, w10
   387d4:	cmp	w10, #0x3
   387d8:	b.cc	38838 <ZSTD_endStream@@Base+0x2a8e4>  // b.lo, b.ul, b.last
   387dc:	ldr	x8, [sp, #96]
   387e0:	mov	w1, #0x4                   	// #4
   387e4:	mov	x0, x26
   387e8:	add	x20, x8, w9, uxtw
   387ec:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   387f0:	mov	w26, w0
   387f4:	mov	w1, #0x4                   	// #4
   387f8:	mov	x0, x20
   387fc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38800:	cmp	w26, w0
   38804:	b.ne	3882c <ZSTD_endStream@@Base+0x2a8d8>  // b.any
   38808:	ldr	x0, [sp, #216]
   3880c:	ldur	x2, [x29, #-192]
   38810:	ldp	x3, x4, [sp, #192]
   38814:	add	x1, x20, #0x4
   38818:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3881c:	add	w8, w0, #0x4
   38820:	b	38830 <ZSTD_endStream@@Base+0x2a8dc>
   38824:	mov	w8, wzr
   38828:	b	38834 <ZSTD_endStream@@Base+0x2a8e0>
   3882c:	mov	w8, wzr
   38830:	ldur	x26, [x29, #-88]
   38834:	ldur	w12, [x29, #-184]
   38838:	mov	w9, w8
   3883c:	cmp	x24, x9
   38840:	b.cs	38884 <ZSTD_endStream@@Base+0x2a930>  // b.hs, b.nlast
   38844:	ldur	x10, [x29, #-176]
   38848:	ldur	w20, [x29, #-120]
   3884c:	ldr	w11, [sp, #256]
   38850:	add	x10, x10, w20, uxtw #3
   38854:	add	w20, w20, #0x1
   38858:	cmp	w8, w11
   3885c:	stp	w19, w8, [x10]
   38860:	mov	w8, #0x1                   	// #1
   38864:	stur	w20, [x29, #-120]
   38868:	b.hi	388b0 <ZSTD_endStream@@Base+0x2a95c>  // b.pmore
   3886c:	ldur	x11, [x29, #-192]
   38870:	add	x10, x26, x9
   38874:	mov	x24, x9
   38878:	cmp	x10, x11
   3887c:	b.ne	38888 <ZSTD_endStream@@Base+0x2a934>  // b.any
   38880:	b	38894 <ZSTD_endStream@@Base+0x2a940>
   38884:	mov	x9, x24
   38888:	mov	w8, wzr
   3888c:	mov	x24, x9
   38890:	mov	w20, w27
   38894:	cbnz	w8, 38ec8 <ZSTD_endStream@@Base+0x2af74>
   38898:	add	x19, x19, #0x1
   3889c:	add	x8, x22, x19
   388a0:	cmp	x8, x25
   388a4:	mov	w27, w20
   388a8:	b.cc	38738 <ZSTD_endStream@@Base+0x2a7e4>  // b.lo, b.ul, b.last
   388ac:	b	38ec4 <ZSTD_endStream@@Base+0x2af70>
   388b0:	mov	x24, x9
   388b4:	cbz	w8, 38898 <ZSTD_endStream@@Base+0x2a944>
   388b8:	b	38ec8 <ZSTD_endStream@@Base+0x2af74>
   388bc:	ldr	w8, [x21, #204]
   388c0:	ldur	x24, [x29, #-88]
   388c4:	ldr	x27, [x21, #8]
   388c8:	ldr	w1, [x21, #192]
   388cc:	ldr	x19, [x21, #48]
   388d0:	cmp	w8, #0xfff
   388d4:	mov	w9, #0xfff                 	// #4095
   388d8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   388dc:	mov	w2, #0x5                   	// #5
   388e0:	mov	x0, x24
   388e4:	str	w8, [sp, #256]
   388e8:	sub	w22, w24, w27
   388ec:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   388f0:	ldp	w2, w8, [x21, #184]
   388f4:	stp	x0, x19, [sp, #32]
   388f8:	ldr	w9, [x19, x0, lsl #2]
   388fc:	ldr	x28, [x21, #64]
   38900:	sub	w8, w8, #0x1
   38904:	ldr	w19, [x21, #24]
   38908:	stur	w9, [x29, #-184]
   3890c:	mov	w9, #0xffffffff            	// #-1
   38910:	lsl	w20, w9, w8
   38914:	mvn	w8, w20
   38918:	str	w8, [sp, #124]
   3891c:	subs	w8, w22, w8
   38920:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   38924:	mov	x0, x21
   38928:	mov	w1, w22
   3892c:	str	w8, [sp, #112]
   38930:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   38934:	add	x9, x27, x19
   38938:	str	x9, [sp, #200]
   3893c:	bic	w9, w22, w20
   38940:	ldr	x15, [x21, #176]
   38944:	stp	x19, x27, [sp, #224]
   38948:	add	w10, w22, #0x9
   3894c:	lsl	w9, w9, #1
   38950:	cmp	w0, #0x0
   38954:	str	w10, [sp, #160]
   38958:	ldr	w10, [x21, #196]
   3895c:	add	x11, x24, #0x4
   38960:	add	x9, x28, w9, uxtw #2
   38964:	sub	w8, w22, w19
   38968:	str	x11, [sp, #216]
   3896c:	csinc	w11, w0, wzr, ne  // ne = any
   38970:	str	x9, [sp, #152]
   38974:	add	x9, x9, #0x4
   38978:	stur	wzr, [x29, #-120]
   3897c:	stur	w8, [x29, #-152]
   38980:	str	w11, [sp, #208]
   38984:	str	x28, [sp, #128]
   38988:	str	x9, [sp, #144]
   3898c:	ldp	x13, x12, [x15]
   38990:	mov	w11, #0x1                   	// #1
   38994:	str	x15, [sp, #24]
   38998:	lsl	w19, w11, w10
   3899c:	ldp	w9, w10, [x15, #188]
   389a0:	ldr	w14, [x15, #28]
   389a4:	sub	x16, x13, x12
   389a8:	mov	w11, #0xffffffff            	// #-1
   389ac:	sub	w9, w9, #0x1
   389b0:	str	w10, [sp, #12]
   389b4:	str	x13, [sp, #192]
   389b8:	sub	w10, w22, w14
   389bc:	sub	w13, w0, w16
   389c0:	lsl	w9, w11, w9
   389c4:	mvn	w15, w9
   389c8:	sub	w9, w10, w13
   389cc:	ldr	x8, [sp, #248]
   389d0:	sub	w11, w16, w14
   389d4:	str	w9, [sp, #248]
   389d8:	sub	x9, x12, x13
   389dc:	str	x9, [sp, #96]
   389e0:	sub	w9, w16, w15
   389e4:	cmp	w11, w15
   389e8:	csel	w9, w9, w14, hi  // hi = pmore
   389ec:	str	w9, [sp, #72]
   389f0:	cmp	w26, #0x0
   389f4:	mov	w9, #0x3                   	// #3
   389f8:	cinc	x28, x9, ne  // ne = any
   389fc:	ldur	x9, [x29, #-208]
   38a00:	sub	x8, x8, x23
   38a04:	str	x12, [sp, #80]
   38a08:	ldur	w12, [x29, #-184]
   38a0c:	mov	x26, x24
   38a10:	ldr	x24, [sp, #136]
   38a14:	ldur	x23, [x29, #-168]
   38a18:	cinc	x8, x8, ne  // ne = any
   38a1c:	mov	x25, xzr
   38a20:	str	w22, [sp, #240]
   38a24:	cset	w22, ne  // ne = any
   38a28:	add	x8, x9, x8, lsl #2
   38a2c:	str	x13, [sp, #64]
   38a30:	str	x16, [sp, #16]
   38a34:	str	w15, [sp, #60]
   38a38:	str	w14, [sp, #88]
   38a3c:	stur	x8, [x29, #-248]
   38a40:	add	x8, x22, x25
   38a44:	cmp	x8, #0x3
   38a48:	b.eq	38a58 <ZSTD_endStream@@Base+0x2ab04>  // b.none
   38a4c:	ldur	x8, [x29, #-248]
   38a50:	ldr	w21, [x8, x25, lsl #2]
   38a54:	b	38a64 <ZSTD_endStream@@Base+0x2ab10>
   38a58:	ldur	x8, [x29, #-144]
   38a5c:	ldr	w8, [x8]
   38a60:	sub	w21, w8, #0x1
   38a64:	ldur	w9, [x29, #-152]
   38a68:	sub	w8, w21, #0x1
   38a6c:	cmp	w8, w9
   38a70:	b.cs	38ab8 <ZSTD_endStream@@Base+0x2ab64>  // b.hs, b.nlast
   38a74:	mov	w1, #0x4                   	// #4
   38a78:	mov	x0, x26
   38a7c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38a80:	mov	w21, w21
   38a84:	mov	w20, w0
   38a88:	sub	x0, x26, x21
   38a8c:	mov	w1, #0x4                   	// #4
   38a90:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38a94:	cmp	w20, w0
   38a98:	b.ne	38b2c <ZSTD_endStream@@Base+0x2abd8>  // b.any
   38a9c:	ldr	x0, [sp, #216]
   38aa0:	ldur	x2, [x29, #-192]
   38aa4:	neg	x8, x21
   38aa8:	add	x1, x0, x8
   38aac:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   38ab0:	add	w8, w0, #0x4
   38ab4:	b	38b3c <ZSTD_endStream@@Base+0x2abe8>
   38ab8:	ldr	w9, [sp, #248]
   38abc:	cmp	w8, w9
   38ac0:	mov	w8, wzr
   38ac4:	b.cs	38b40 <ZSTD_endStream@@Base+0x2abec>  // b.hs, b.nlast
   38ac8:	ldr	w9, [sp, #240]
   38acc:	ldr	x11, [sp, #224]
   38ad0:	sub	w9, w9, w21
   38ad4:	mvn	w10, w9
   38ad8:	add	w10, w11, w10
   38adc:	cmp	w10, #0x3
   38ae0:	b.cc	38b40 <ZSTD_endStream@@Base+0x2abec>  // b.lo, b.ul, b.last
   38ae4:	ldr	x8, [sp, #96]
   38ae8:	mov	w1, #0x4                   	// #4
   38aec:	mov	x0, x26
   38af0:	add	x20, x8, w9, uxtw
   38af4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38af8:	mov	w26, w0
   38afc:	mov	w1, #0x4                   	// #4
   38b00:	mov	x0, x20
   38b04:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38b08:	cmp	w26, w0
   38b0c:	b.ne	38b34 <ZSTD_endStream@@Base+0x2abe0>  // b.any
   38b10:	ldr	x0, [sp, #216]
   38b14:	ldur	x2, [x29, #-192]
   38b18:	ldp	x3, x4, [sp, #192]
   38b1c:	add	x1, x20, #0x4
   38b20:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   38b24:	add	w8, w0, #0x4
   38b28:	b	38b38 <ZSTD_endStream@@Base+0x2abe4>
   38b2c:	mov	w8, wzr
   38b30:	b	38b3c <ZSTD_endStream@@Base+0x2abe8>
   38b34:	mov	w8, wzr
   38b38:	ldur	x26, [x29, #-88]
   38b3c:	ldur	w12, [x29, #-184]
   38b40:	mov	w9, w8
   38b44:	cmp	x24, x9
   38b48:	b.cs	38b8c <ZSTD_endStream@@Base+0x2ac38>  // b.hs, b.nlast
   38b4c:	ldur	x10, [x29, #-176]
   38b50:	ldur	w20, [x29, #-120]
   38b54:	ldr	w11, [sp, #256]
   38b58:	add	x10, x10, w20, uxtw #3
   38b5c:	add	w20, w20, #0x1
   38b60:	cmp	w8, w11
   38b64:	stp	w25, w8, [x10]
   38b68:	mov	w8, #0x1                   	// #1
   38b6c:	stur	w20, [x29, #-120]
   38b70:	b.hi	38bb8 <ZSTD_endStream@@Base+0x2ac64>  // b.pmore
   38b74:	ldur	x11, [x29, #-192]
   38b78:	add	x10, x26, x9
   38b7c:	mov	x24, x9
   38b80:	cmp	x10, x11
   38b84:	b.ne	38b90 <ZSTD_endStream@@Base+0x2ac3c>  // b.any
   38b88:	b	38b9c <ZSTD_endStream@@Base+0x2ac48>
   38b8c:	mov	x9, x24
   38b90:	mov	w8, wzr
   38b94:	mov	x24, x9
   38b98:	mov	w20, w27
   38b9c:	cbnz	w8, 3922c <ZSTD_endStream@@Base+0x2b2d8>
   38ba0:	add	x25, x25, #0x1
   38ba4:	add	x8, x22, x25
   38ba8:	cmp	x8, x28
   38bac:	mov	w27, w20
   38bb0:	b.cc	38a40 <ZSTD_endStream@@Base+0x2aaec>  // b.lo, b.ul, b.last
   38bb4:	b	39228 <ZSTD_endStream@@Base+0x2b2d4>
   38bb8:	mov	x24, x9
   38bbc:	cbz	w8, 38ba0 <ZSTD_endStream@@Base+0x2ac4c>
   38bc0:	b	3922c <ZSTD_endStream@@Base+0x2b2d8>
   38bc4:	ldr	w8, [x21, #204]
   38bc8:	ldur	x24, [x29, #-88]
   38bcc:	ldr	x27, [x21, #8]
   38bd0:	ldr	w1, [x21, #192]
   38bd4:	ldr	x19, [x21, #48]
   38bd8:	cmp	w8, #0xfff
   38bdc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   38be0:	mov	w2, #0x4                   	// #4
   38be4:	mov	x0, x24
   38be8:	str	w8, [sp, #256]
   38bec:	sub	w22, w24, w27
   38bf0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   38bf4:	ldp	w2, w8, [x21, #184]
   38bf8:	stp	x0, x19, [sp, #32]
   38bfc:	ldr	w9, [x19, x0, lsl #2]
   38c00:	ldr	x28, [x21, #64]
   38c04:	sub	w8, w8, #0x1
   38c08:	ldr	w19, [x21, #24]
   38c0c:	stur	w9, [x29, #-184]
   38c10:	mov	w9, #0xffffffff            	// #-1
   38c14:	lsl	w20, w9, w8
   38c18:	mvn	w8, w20
   38c1c:	str	w8, [sp, #128]
   38c20:	subs	w8, w22, w8
   38c24:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   38c28:	mov	x0, x21
   38c2c:	mov	w1, w22
   38c30:	str	w8, [sp, #124]
   38c34:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   38c38:	sub	w8, w22, w19
   38c3c:	stur	w8, [x29, #-152]
   38c40:	ldur	x8, [x29, #-96]
   38c44:	ldr	x9, [sp, #248]
   38c48:	ldr	x15, [x21, #176]
   38c4c:	stp	x19, x27, [sp, #224]
   38c50:	add	w10, w22, #0x9
   38c54:	sub	x8, x9, x8
   38c58:	add	x9, x27, x19
   38c5c:	str	x9, [sp, #200]
   38c60:	bic	w9, w22, w20
   38c64:	lsl	w9, w9, #1
   38c68:	cmp	w0, #0x0
   38c6c:	str	w10, [sp, #60]
   38c70:	ldr	w10, [x21, #196]
   38c74:	add	x11, x24, #0x4
   38c78:	add	x9, x28, w9, uxtw #2
   38c7c:	str	x11, [sp, #216]
   38c80:	csinc	w11, w0, wzr, ne  // ne = any
   38c84:	str	x9, [sp, #160]
   38c88:	add	x9, x9, #0x4
   38c8c:	stur	wzr, [x29, #-120]
   38c90:	str	w11, [sp, #208]
   38c94:	stp	x28, x9, [sp, #144]
   38c98:	ldp	x13, x12, [x15]
   38c9c:	mov	w11, #0x1                   	// #1
   38ca0:	str	x15, [sp, #24]
   38ca4:	lsl	w19, w11, w10
   38ca8:	ldp	w9, w10, [x15, #188]
   38cac:	ldr	w14, [x15, #28]
   38cb0:	sub	x16, x13, x12
   38cb4:	mov	w11, #0xffffffff            	// #-1
   38cb8:	sub	w9, w9, #0x1
   38cbc:	str	w10, [sp, #12]
   38cc0:	str	x13, [sp, #192]
   38cc4:	sub	w10, w22, w14
   38cc8:	sub	w13, w0, w16
   38ccc:	lsl	w9, w11, w9
   38cd0:	mvn	w15, w9
   38cd4:	sub	w9, w10, w13
   38cd8:	sub	w11, w16, w14
   38cdc:	str	w9, [sp, #248]
   38ce0:	sub	x9, x12, x13
   38ce4:	str	x9, [sp, #112]
   38ce8:	sub	w9, w16, w15
   38cec:	cmp	w11, w15
   38cf0:	csel	w9, w9, w14, hi  // hi = pmore
   38cf4:	str	w9, [sp, #80]
   38cf8:	cmp	w26, #0x0
   38cfc:	mov	w9, #0x3                   	// #3
   38d00:	cinc	x28, x9, ne  // ne = any
   38d04:	ldur	x9, [x29, #-208]
   38d08:	str	x12, [sp, #88]
   38d0c:	ldur	w12, [x29, #-184]
   38d10:	mov	x26, x24
   38d14:	ldr	x24, [sp, #136]
   38d18:	cinc	x8, x8, ne  // ne = any
   38d1c:	mov	x25, xzr
   38d20:	str	w22, [sp, #240]
   38d24:	cset	w22, ne  // ne = any
   38d28:	add	x8, x9, x8, lsl #2
   38d2c:	str	x13, [sp, #72]
   38d30:	str	x16, [sp, #16]
   38d34:	str	w15, [sp, #64]
   38d38:	str	w14, [sp, #96]
   38d3c:	stur	x8, [x29, #-248]
   38d40:	add	x8, x22, x25
   38d44:	cmp	x8, #0x3
   38d48:	b.eq	38d58 <ZSTD_endStream@@Base+0x2ae04>  // b.none
   38d4c:	ldur	x8, [x29, #-248]
   38d50:	ldr	w21, [x8, x25, lsl #2]
   38d54:	b	38d64 <ZSTD_endStream@@Base+0x2ae10>
   38d58:	ldur	x8, [x29, #-144]
   38d5c:	ldr	w8, [x8]
   38d60:	sub	w21, w8, #0x1
   38d64:	ldur	w9, [x29, #-152]
   38d68:	sub	w8, w21, #0x1
   38d6c:	cmp	w8, w9
   38d70:	b.cs	38db8 <ZSTD_endStream@@Base+0x2ae64>  // b.hs, b.nlast
   38d74:	mov	w1, #0x4                   	// #4
   38d78:	mov	x0, x26
   38d7c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38d80:	mov	w21, w21
   38d84:	mov	w20, w0
   38d88:	sub	x0, x26, x21
   38d8c:	mov	w1, #0x4                   	// #4
   38d90:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38d94:	cmp	w20, w0
   38d98:	b.ne	38e2c <ZSTD_endStream@@Base+0x2aed8>  // b.any
   38d9c:	ldr	x0, [sp, #216]
   38da0:	ldur	x2, [x29, #-192]
   38da4:	neg	x8, x21
   38da8:	add	x1, x0, x8
   38dac:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   38db0:	add	w8, w0, #0x4
   38db4:	b	38e3c <ZSTD_endStream@@Base+0x2aee8>
   38db8:	ldr	w9, [sp, #248]
   38dbc:	cmp	w8, w9
   38dc0:	mov	w8, wzr
   38dc4:	b.cs	38e40 <ZSTD_endStream@@Base+0x2aeec>  // b.hs, b.nlast
   38dc8:	ldr	w9, [sp, #240]
   38dcc:	ldr	x11, [sp, #224]
   38dd0:	sub	w9, w9, w21
   38dd4:	mvn	w10, w9
   38dd8:	add	w10, w11, w10
   38ddc:	cmp	w10, #0x3
   38de0:	b.cc	38e40 <ZSTD_endStream@@Base+0x2aeec>  // b.lo, b.ul, b.last
   38de4:	ldr	x8, [sp, #112]
   38de8:	mov	w1, #0x4                   	// #4
   38dec:	mov	x0, x26
   38df0:	add	x20, x8, w9, uxtw
   38df4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38df8:	mov	w26, w0
   38dfc:	mov	w1, #0x4                   	// #4
   38e00:	mov	x0, x20
   38e04:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   38e08:	cmp	w26, w0
   38e0c:	b.ne	38e34 <ZSTD_endStream@@Base+0x2aee0>  // b.any
   38e10:	ldr	x0, [sp, #216]
   38e14:	ldur	x2, [x29, #-192]
   38e18:	ldp	x3, x4, [sp, #192]
   38e1c:	add	x1, x20, #0x4
   38e20:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   38e24:	add	w8, w0, #0x4
   38e28:	b	38e38 <ZSTD_endStream@@Base+0x2aee4>
   38e2c:	mov	w8, wzr
   38e30:	b	38e3c <ZSTD_endStream@@Base+0x2aee8>
   38e34:	mov	w8, wzr
   38e38:	ldur	x26, [x29, #-88]
   38e3c:	ldur	w12, [x29, #-184]
   38e40:	mov	w9, w8
   38e44:	cmp	x24, x9
   38e48:	b.cs	38e8c <ZSTD_endStream@@Base+0x2af38>  // b.hs, b.nlast
   38e4c:	ldur	x10, [x29, #-176]
   38e50:	ldur	w20, [x29, #-120]
   38e54:	ldr	w11, [sp, #256]
   38e58:	add	x10, x10, w20, uxtw #3
   38e5c:	add	w20, w20, #0x1
   38e60:	cmp	w8, w11
   38e64:	stp	w25, w8, [x10]
   38e68:	mov	w8, #0x1                   	// #1
   38e6c:	stur	w20, [x29, #-120]
   38e70:	b.hi	38eb8 <ZSTD_endStream@@Base+0x2af64>  // b.pmore
   38e74:	ldur	x11, [x29, #-192]
   38e78:	add	x10, x26, x9
   38e7c:	mov	x24, x9
   38e80:	cmp	x10, x11
   38e84:	b.ne	38e90 <ZSTD_endStream@@Base+0x2af3c>  // b.any
   38e88:	b	38e9c <ZSTD_endStream@@Base+0x2af48>
   38e8c:	mov	x9, x24
   38e90:	mov	w8, wzr
   38e94:	mov	x24, x9
   38e98:	mov	w20, w27
   38e9c:	cbnz	w8, 393a0 <ZSTD_endStream@@Base+0x2b44c>
   38ea0:	add	x25, x25, #0x1
   38ea4:	add	x8, x22, x25
   38ea8:	cmp	x8, x28
   38eac:	mov	w27, w20
   38eb0:	b.cc	38d40 <ZSTD_endStream@@Base+0x2adec>  // b.lo, b.ul, b.last
   38eb4:	b	3939c <ZSTD_endStream@@Base+0x2b448>
   38eb8:	mov	x24, x9
   38ebc:	cbz	w8, 38ea0 <ZSTD_endStream@@Base+0x2af4c>
   38ec0:	b	393a0 <ZSTD_endStream@@Base+0x2b44c>
   38ec4:	mov	w8, wzr
   38ec8:	cbnz	w8, 39850 <ZSTD_endStream@@Base+0x2b8fc>
   38ecc:	ldp	x10, x8, [sp, #32]
   38ed0:	ldr	w9, [sp, #240]
   38ed4:	ldur	w25, [x29, #-120]
   38ed8:	ldr	w27, [sp, #160]
   38edc:	mov	x19, xzr
   38ee0:	mov	x22, xzr
   38ee4:	str	w9, [x8, x10, lsl #2]
   38ee8:	add	w8, w9, #0x2
   38eec:	stur	w8, [x29, #-144]
   38ef0:	b	38f10 <ZSTD_endStream@@Base+0x2afbc>
   38ef4:	str	x9, [sp, #144]
   38ef8:	mov	x19, x8
   38efc:	mov	x8, x22
   38f00:	ldr	w12, [x9]
   38f04:	mov	w9, #0x1                   	// #1
   38f08:	mov	x22, x8
   38f0c:	tbz	w9, #0, 39034 <ZSTD_endStream@@Base+0x2b0e0>
   38f10:	subs	w28, w28, #0x1
   38f14:	b.cc	39034 <ZSTD_endStream@@Base+0x2b0e0>  // b.lo, b.ul, b.last
   38f18:	ldr	w8, [sp, #208]
   38f1c:	cmp	w12, w8
   38f20:	b.cc	39034 <ZSTD_endStream@@Base+0x2b0e0>  // b.lo, b.ul, b.last
   38f24:	ldr	x8, [sp, #232]
   38f28:	ldur	x2, [x29, #-192]
   38f2c:	cmp	x22, x19
   38f30:	csel	x23, x22, x19, cc  // cc = lo, ul, last
   38f34:	add	x21, x8, w12, uxtw
   38f38:	add	x0, x26, x23
   38f3c:	add	x1, x21, x23
   38f40:	mov	w20, w12
   38f44:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   38f48:	add	x8, x0, x23
   38f4c:	cmp	x8, x24
   38f50:	b.ls	38fac <ZSTD_endStream@@Base+0x2b058>  // b.plast
   38f54:	ldur	w12, [x29, #-144]
   38f58:	ldp	x13, x23, [x29, #-176]
   38f5c:	sub	w10, w27, w20
   38f60:	add	w11, w20, w8
   38f64:	sub	w12, w12, w20
   38f68:	add	x13, x13, w25, uxtw #3
   38f6c:	cmp	x8, x10
   38f70:	mov	w9, wzr
   38f74:	stp	w12, w8, [x13]
   38f78:	csel	w27, w11, w27, hi  // hi = pmore
   38f7c:	cmp	x8, #0x1, lsl #12
   38f80:	add	w25, w25, #0x1
   38f84:	mov	w12, w20
   38f88:	b.hi	38fa0 <ZSTD_endStream@@Base+0x2b04c>  // b.pmore
   38f8c:	ldur	x11, [x29, #-192]
   38f90:	add	x10, x26, x8
   38f94:	mov	x24, x8
   38f98:	cmp	x10, x11
   38f9c:	b.ne	38fb4 <ZSTD_endStream@@Base+0x2b060>  // b.any
   38fa0:	mov	x24, x8
   38fa4:	mov	w28, w9
   38fa8:	b	3901c <ZSTD_endStream@@Base+0x2b0c8>
   38fac:	ldur	x23, [x29, #-168]
   38fb0:	mov	w12, w20
   38fb4:	ldrb	w9, [x21, x8]
   38fb8:	ldrb	w10, [x26, x8]
   38fbc:	ldr	w11, [sp, #124]
   38fc0:	cmp	w9, w10
   38fc4:	ldr	x9, [sp, #128]
   38fc8:	and	w11, w12, w11
   38fcc:	lsl	w11, w11, #1
   38fd0:	add	x9, x9, w11, uxtw #2
   38fd4:	b.cs	38ff8 <ZSTD_endStream@@Base+0x2b0a4>  // b.hs, b.nlast
   38fd8:	ldr	w10, [sp, #112]
   38fdc:	cmp	w12, w10
   38fe0:	ldr	x10, [sp, #152]
   38fe4:	str	w12, [x10]
   38fe8:	b.ls	39024 <ZSTD_endStream@@Base+0x2b0d0>  // b.plast
   38fec:	add	x9, x9, #0x4
   38ff0:	str	x9, [sp, #152]
   38ff4:	b	38f00 <ZSTD_endStream@@Base+0x2afac>
   38ff8:	ldr	w10, [sp, #112]
   38ffc:	cmp	w12, w10
   39000:	ldr	x10, [sp, #144]
   39004:	str	w12, [x10]
   39008:	b.hi	38ef4 <ZSTD_endStream@@Base+0x2afa0>  // b.pmore
   3900c:	sub	x10, x29, #0x40
   39010:	mov	w9, wzr
   39014:	str	x10, [sp, #144]
   39018:	mov	x19, x8
   3901c:	mov	x8, x22
   39020:	b	38f08 <ZSTD_endStream@@Base+0x2afb4>
   39024:	sub	x10, x29, #0x40
   39028:	mov	w9, wzr
   3902c:	str	x10, [sp, #152]
   39030:	b	38f08 <ZSTD_endStream@@Base+0x2afb4>
   39034:	ldr	x8, [sp, #144]
   39038:	str	w27, [sp, #160]
   3903c:	stur	w25, [x29, #-120]
   39040:	str	wzr, [x8]
   39044:	ldr	x8, [sp, #152]
   39048:	str	wzr, [x8]
   3904c:	cbz	w28, 396a4 <ZSTD_endStream@@Base+0x2b750>
   39050:	ldr	w1, [sp, #12]
   39054:	mov	w2, #0x6                   	// #6
   39058:	mov	x0, x26
   3905c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   39060:	ldr	x9, [sp, #24]
   39064:	mov	x19, xzr
   39068:	mov	x22, xzr
   3906c:	ldr	x8, [x9, #48]
   39070:	ldr	w25, [x8, x0, lsl #2]
   39074:	ldr	x8, [x9, #64]
   39078:	ldr	x9, [sp, #232]
   3907c:	stur	x8, [x29, #-152]
   39080:	ldr	x8, [sp, #16]
   39084:	and	x26, x8, #0xffffffff
   39088:	ldr	x8, [sp, #64]
   3908c:	add	x27, x9, x8
   39090:	b	390d0 <ZSTD_endStream@@Base+0x2b17c>
   39094:	ldrb	w8, [x10, x9]
   39098:	ldur	x10, [x29, #-88]
   3909c:	ldr	w11, [sp, #60]
   390a0:	ldur	x12, [x29, #-152]
   390a4:	ldrb	w10, [x10, x9]
   390a8:	and	w11, w25, w11
   390ac:	lsl	w11, w11, #1
   390b0:	add	x11, x12, w11, uxtw #2
   390b4:	cmp	w8, w10
   390b8:	cset	w8, cc  // cc = lo, ul, last
   390bc:	ldr	w25, [x11, w8, uxtw #2]
   390c0:	csel	x19, x19, x9, cc  // cc = lo, ul, last
   390c4:	csel	x22, x9, x22, cc  // cc = lo, ul, last
   390c8:	mov	w8, #0x1                   	// #1
   390cc:	tbz	w8, #0, 396a4 <ZSTD_endStream@@Base+0x2b750>
   390d0:	subs	w28, w28, #0x1
   390d4:	b.cc	396a4 <ZSTD_endStream@@Base+0x2b750>  // b.lo, b.ul, b.last
   390d8:	ldr	w8, [sp, #88]
   390dc:	cmp	w25, w8
   390e0:	b.ls	396a4 <ZSTD_endStream@@Base+0x2b750>  // b.plast
   390e4:	ldr	x8, [sp, #80]
   390e8:	mov	w21, w25
   390ec:	ldur	x2, [x29, #-192]
   390f0:	ldp	x3, x4, [sp, #192]
   390f4:	add	x20, x8, x21
   390f8:	ldur	x8, [x29, #-88]
   390fc:	cmp	x22, x19
   39100:	csel	x23, x22, x19, cc  // cc = lo, ul, last
   39104:	add	x1, x20, x23
   39108:	add	x0, x8, x23
   3910c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   39110:	add	x9, x0, x23
   39114:	add	x10, x9, x21
   39118:	add	x8, x27, x21
   3911c:	cmp	x10, x26
   39120:	csel	x10, x20, x8, cc  // cc = lo, ul, last
   39124:	cmp	x9, x24
   39128:	b.ls	39190 <ZSTD_endStream@@Base+0x2b23c>  // b.plast
   3912c:	ldr	x11, [sp, #64]
   39130:	ldr	w16, [sp, #160]
   39134:	ldur	x12, [x29, #-176]
   39138:	ldur	w15, [x29, #-120]
   3913c:	ldur	w17, [x29, #-144]
   39140:	add	w11, w25, w11
   39144:	sub	w13, w16, w11
   39148:	add	w14, w11, w9
   3914c:	cmp	x9, x13
   39150:	mov	w8, wzr
   39154:	add	x12, x12, w15, uxtw #3
   39158:	sub	w11, w17, w11
   3915c:	csel	w16, w14, w16, hi  // hi = pmore
   39160:	cmp	x9, #0x1, lsl #12
   39164:	add	w15, w15, #0x1
   39168:	stp	w11, w9, [x12]
   3916c:	str	w16, [sp, #160]
   39170:	stur	w15, [x29, #-120]
   39174:	b.hi	391a8 <ZSTD_endStream@@Base+0x2b254>  // b.pmore
   39178:	ldur	x11, [x29, #-88]
   3917c:	ldur	x12, [x29, #-192]
   39180:	mov	x24, x9
   39184:	add	x11, x11, x9
   39188:	cmp	x11, x12
   3918c:	b.eq	391a8 <ZSTD_endStream@@Base+0x2b254>  // b.none
   39190:	ldr	w8, [sp, #72]
   39194:	ldur	x23, [x29, #-168]
   39198:	cmp	w25, w8
   3919c:	b.hi	39094 <ZSTD_endStream@@Base+0x2b140>  // b.pmore
   391a0:	mov	w8, wzr
   391a4:	b	390cc <ZSTD_endStream@@Base+0x2b178>
   391a8:	ldur	x23, [x29, #-168]
   391ac:	mov	x24, x9
   391b0:	b	390cc <ZSTD_endStream@@Base+0x2b178>
   391b4:	mov	w8, wzr
   391b8:	cbnz	w8, 39850 <ZSTD_endStream@@Base+0x2b8fc>
   391bc:	ldr	x27, [sp, #280]
   391c0:	ldur	x22, [x29, #-72]
   391c4:	ldur	w24, [x29, #-196]
   391c8:	ldur	w28, [x29, #-100]
   391cc:	cmp	x19, #0x2
   391d0:	b.hi	39c0c <ZSTD_endStream@@Base+0x2bcb8>  // b.pmore
   391d4:	sub	x1, x29, #0xc
   391d8:	mov	x0, x22
   391dc:	mov	x2, x26
   391e0:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   391e4:	ldr	w8, [sp, #200]
   391e8:	cmp	w0, w8
   391ec:	b.cc	39bfc <ZSTD_endStream@@Base+0x2bca8>  // b.lo, b.ul, b.last
   391f0:	ldr	w8, [sp, #248]
   391f4:	sub	w21, w8, w0
   391f8:	lsr	w8, w21, #18
   391fc:	cbnz	w8, 39bfc <ZSTD_endStream@@Base+0x2bca8>
   39200:	ldr	x8, [sp, #208]
   39204:	ldur	x2, [x29, #-192]
   39208:	add	x1, x8, w0, uxtw
   3920c:	mov	x0, x26
   39210:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   39214:	cmp	x0, #0x3
   39218:	b.cs	39ba8 <ZSTD_endStream@@Base+0x2bc54>  // b.hs, b.nlast
   3921c:	mov	w8, wzr
   39220:	mov	x0, x19
   39224:	b	39bf4 <ZSTD_endStream@@Base+0x2bca0>
   39228:	mov	w8, wzr
   3922c:	cbnz	w8, 39850 <ZSTD_endStream@@Base+0x2b8fc>
   39230:	ldp	x10, x8, [sp, #32]
   39234:	ldr	w9, [sp, #240]
   39238:	ldur	w27, [x29, #-120]
   3923c:	ldr	w28, [sp, #160]
   39240:	mov	x25, xzr
   39244:	mov	x22, xzr
   39248:	str	w9, [x8, x10, lsl #2]
   3924c:	add	w8, w9, #0x2
   39250:	stur	w8, [x29, #-144]
   39254:	b	39274 <ZSTD_endStream@@Base+0x2b320>
   39258:	str	x9, [sp, #144]
   3925c:	mov	x25, x8
   39260:	mov	x8, x22
   39264:	ldr	w12, [x9]
   39268:	mov	w9, #0x1                   	// #1
   3926c:	mov	x22, x8
   39270:	tbz	w9, #0, 39510 <ZSTD_endStream@@Base+0x2b5bc>
   39274:	subs	w19, w19, #0x1
   39278:	b.cc	39510 <ZSTD_endStream@@Base+0x2b5bc>  // b.lo, b.ul, b.last
   3927c:	ldr	w8, [sp, #208]
   39280:	cmp	w12, w8
   39284:	b.cc	39510 <ZSTD_endStream@@Base+0x2b5bc>  // b.lo, b.ul, b.last
   39288:	ldr	x8, [sp, #232]
   3928c:	ldur	x2, [x29, #-192]
   39290:	cmp	x22, x25
   39294:	csel	x23, x22, x25, cc  // cc = lo, ul, last
   39298:	add	x21, x8, w12, uxtw
   3929c:	add	x0, x26, x23
   392a0:	add	x1, x21, x23
   392a4:	mov	w20, w12
   392a8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   392ac:	add	x8, x0, x23
   392b0:	cmp	x8, x24
   392b4:	b.ls	39314 <ZSTD_endStream@@Base+0x2b3c0>  // b.plast
   392b8:	ldur	w12, [x29, #-144]
   392bc:	ldur	x13, [x29, #-176]
   392c0:	sub	w10, w28, w20
   392c4:	add	w11, w20, w8
   392c8:	sub	w12, w12, w20
   392cc:	add	x13, x13, w27, uxtw #3
   392d0:	cmp	x8, x10
   392d4:	mov	w9, wzr
   392d8:	stp	w12, w8, [x13]
   392dc:	csel	w28, w11, w28, hi  // hi = pmore
   392e0:	cmp	x8, #0x1, lsl #12
   392e4:	add	w27, w27, #0x1
   392e8:	mov	w12, w20
   392ec:	b.hi	39304 <ZSTD_endStream@@Base+0x2b3b0>  // b.pmore
   392f0:	ldur	x11, [x29, #-192]
   392f4:	add	x10, x26, x8
   392f8:	mov	x24, x8
   392fc:	cmp	x10, x11
   39300:	b.ne	39318 <ZSTD_endStream@@Base+0x2b3c4>  // b.any
   39304:	ldur	x23, [x29, #-168]
   39308:	mov	x24, x8
   3930c:	mov	w19, w9
   39310:	b	39384 <ZSTD_endStream@@Base+0x2b430>
   39314:	mov	w12, w20
   39318:	ldrb	w9, [x21, x8]
   3931c:	ldrb	w10, [x26, x8]
   39320:	ldr	w11, [sp, #124]
   39324:	ldur	x23, [x29, #-168]
   39328:	cmp	w9, w10
   3932c:	ldr	x9, [sp, #128]
   39330:	and	w11, w12, w11
   39334:	lsl	w11, w11, #1
   39338:	add	x9, x9, w11, uxtw #2
   3933c:	b.cs	39360 <ZSTD_endStream@@Base+0x2b40c>  // b.hs, b.nlast
   39340:	ldr	w10, [sp, #112]
   39344:	cmp	w12, w10
   39348:	ldr	x10, [sp, #152]
   3934c:	str	w12, [x10]
   39350:	b.ls	3938c <ZSTD_endStream@@Base+0x2b438>  // b.plast
   39354:	add	x9, x9, #0x4
   39358:	str	x9, [sp, #152]
   3935c:	b	39264 <ZSTD_endStream@@Base+0x2b310>
   39360:	ldr	w10, [sp, #112]
   39364:	cmp	w12, w10
   39368:	ldr	x10, [sp, #144]
   3936c:	str	w12, [x10]
   39370:	b.hi	39258 <ZSTD_endStream@@Base+0x2b304>  // b.pmore
   39374:	sub	x10, x29, #0x40
   39378:	mov	w9, wzr
   3937c:	str	x10, [sp, #144]
   39380:	mov	x25, x8
   39384:	mov	x8, x22
   39388:	b	3926c <ZSTD_endStream@@Base+0x2b318>
   3938c:	sub	x10, x29, #0x40
   39390:	mov	w9, wzr
   39394:	str	x10, [sp, #152]
   39398:	b	3926c <ZSTD_endStream@@Base+0x2b318>
   3939c:	mov	w8, wzr
   393a0:	cbnz	w8, 39850 <ZSTD_endStream@@Base+0x2b8fc>
   393a4:	ldp	x10, x8, [sp, #32]
   393a8:	ldr	w9, [sp, #240]
   393ac:	ldur	w27, [x29, #-120]
   393b0:	ldr	w28, [sp, #60]
   393b4:	mov	x25, xzr
   393b8:	mov	x22, xzr
   393bc:	str	w9, [x8, x10, lsl #2]
   393c0:	add	w8, w9, #0x2
   393c4:	stur	w8, [x29, #-144]
   393c8:	b	393e8 <ZSTD_endStream@@Base+0x2b494>
   393cc:	str	x9, [sp, #152]
   393d0:	mov	x25, x8
   393d4:	mov	x8, x22
   393d8:	ldr	w12, [x9]
   393dc:	mov	w9, #0x1                   	// #1
   393e0:	mov	x22, x8
   393e4:	tbz	w9, #0, 396bc <ZSTD_endStream@@Base+0x2b768>
   393e8:	subs	w19, w19, #0x1
   393ec:	b.cc	396bc <ZSTD_endStream@@Base+0x2b768>  // b.lo, b.ul, b.last
   393f0:	ldr	w8, [sp, #208]
   393f4:	cmp	w12, w8
   393f8:	b.cc	396bc <ZSTD_endStream@@Base+0x2b768>  // b.lo, b.ul, b.last
   393fc:	ldr	x8, [sp, #232]
   39400:	ldur	x2, [x29, #-192]
   39404:	cmp	x22, x25
   39408:	csel	x23, x22, x25, cc  // cc = lo, ul, last
   3940c:	add	x21, x8, w12, uxtw
   39410:	add	x0, x26, x23
   39414:	add	x1, x21, x23
   39418:	mov	w20, w12
   3941c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   39420:	add	x8, x0, x23
   39424:	cmp	x8, x24
   39428:	b.ls	39488 <ZSTD_endStream@@Base+0x2b534>  // b.plast
   3942c:	ldur	w12, [x29, #-144]
   39430:	ldur	x13, [x29, #-176]
   39434:	sub	w10, w28, w20
   39438:	add	w11, w20, w8
   3943c:	sub	w12, w12, w20
   39440:	add	x13, x13, w27, uxtw #3
   39444:	cmp	x8, x10
   39448:	mov	w9, wzr
   3944c:	stp	w12, w8, [x13]
   39450:	csel	w28, w11, w28, hi  // hi = pmore
   39454:	cmp	x8, #0x1, lsl #12
   39458:	add	w27, w27, #0x1
   3945c:	mov	w12, w20
   39460:	b.hi	39478 <ZSTD_endStream@@Base+0x2b524>  // b.pmore
   39464:	ldur	x11, [x29, #-192]
   39468:	add	x10, x26, x8
   3946c:	mov	x24, x8
   39470:	cmp	x10, x11
   39474:	b.ne	3948c <ZSTD_endStream@@Base+0x2b538>  // b.any
   39478:	ldur	x23, [x29, #-168]
   3947c:	mov	x24, x8
   39480:	mov	w19, w9
   39484:	b	394f8 <ZSTD_endStream@@Base+0x2b5a4>
   39488:	mov	w12, w20
   3948c:	ldrb	w9, [x21, x8]
   39490:	ldrb	w10, [x26, x8]
   39494:	ldr	w11, [sp, #128]
   39498:	ldur	x23, [x29, #-168]
   3949c:	cmp	w9, w10
   394a0:	ldr	x9, [sp, #144]
   394a4:	and	w11, w12, w11
   394a8:	lsl	w11, w11, #1
   394ac:	add	x9, x9, w11, uxtw #2
   394b0:	b.cs	394d4 <ZSTD_endStream@@Base+0x2b580>  // b.hs, b.nlast
   394b4:	ldr	w10, [sp, #124]
   394b8:	cmp	w12, w10
   394bc:	ldr	x10, [sp, #160]
   394c0:	str	w12, [x10]
   394c4:	b.ls	39500 <ZSTD_endStream@@Base+0x2b5ac>  // b.plast
   394c8:	add	x9, x9, #0x4
   394cc:	str	x9, [sp, #160]
   394d0:	b	393d8 <ZSTD_endStream@@Base+0x2b484>
   394d4:	ldr	w10, [sp, #124]
   394d8:	cmp	w12, w10
   394dc:	ldr	x10, [sp, #152]
   394e0:	str	w12, [x10]
   394e4:	b.hi	393cc <ZSTD_endStream@@Base+0x2b478>  // b.pmore
   394e8:	sub	x10, x29, #0x40
   394ec:	mov	w9, wzr
   394f0:	str	x10, [sp, #152]
   394f4:	mov	x25, x8
   394f8:	mov	x8, x22
   394fc:	b	393e0 <ZSTD_endStream@@Base+0x2b48c>
   39500:	sub	x10, x29, #0x40
   39504:	mov	w9, wzr
   39508:	str	x10, [sp, #160]
   3950c:	b	393e0 <ZSTD_endStream@@Base+0x2b48c>
   39510:	ldr	x8, [sp, #144]
   39514:	str	w28, [sp, #160]
   39518:	stur	w27, [x29, #-120]
   3951c:	str	wzr, [x8]
   39520:	ldr	x8, [sp, #152]
   39524:	str	wzr, [x8]
   39528:	cbz	w19, 396a4 <ZSTD_endStream@@Base+0x2b750>
   3952c:	ldr	w1, [sp, #12]
   39530:	mov	w2, #0x5                   	// #5
   39534:	mov	x0, x26
   39538:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3953c:	ldr	x9, [sp, #24]
   39540:	mov	x22, xzr
   39544:	mov	x25, xzr
   39548:	ldr	x8, [x9, #48]
   3954c:	ldr	w26, [x8, x0, lsl #2]
   39550:	ldr	x8, [x9, #64]
   39554:	ldr	x9, [sp, #232]
   39558:	stur	x8, [x29, #-152]
   3955c:	ldr	x8, [sp, #16]
   39560:	and	x27, x8, #0xffffffff
   39564:	ldr	x8, [sp, #64]
   39568:	add	x28, x9, x8
   3956c:	b	39578 <ZSTD_endStream@@Base+0x2b624>
   39570:	mov	w8, wzr
   39574:	tbz	wzr, #0, 396a4 <ZSTD_endStream@@Base+0x2b750>
   39578:	subs	w19, w19, #0x1
   3957c:	b.cc	396a4 <ZSTD_endStream@@Base+0x2b750>  // b.lo, b.ul, b.last
   39580:	ldr	w8, [sp, #88]
   39584:	cmp	w26, w8
   39588:	b.ls	396a4 <ZSTD_endStream@@Base+0x2b750>  // b.plast
   3958c:	ldr	x8, [sp, #80]
   39590:	mov	w21, w26
   39594:	ldur	x2, [x29, #-192]
   39598:	ldp	x3, x4, [sp, #192]
   3959c:	add	x20, x8, x21
   395a0:	ldur	x8, [x29, #-88]
   395a4:	cmp	x25, x22
   395a8:	csel	x23, x25, x22, cc  // cc = lo, ul, last
   395ac:	add	x1, x20, x23
   395b0:	add	x0, x8, x23
   395b4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   395b8:	add	x9, x0, x23
   395bc:	add	x10, x9, x21
   395c0:	add	x8, x28, x21
   395c4:	cmp	x10, x27
   395c8:	csel	x10, x20, x8, cc  // cc = lo, ul, last
   395cc:	cmp	x9, x24
   395d0:	b.ls	39648 <ZSTD_endStream@@Base+0x2b6f4>  // b.plast
   395d4:	ldr	x11, [sp, #64]
   395d8:	ldr	w16, [sp, #160]
   395dc:	ldur	x12, [x29, #-176]
   395e0:	ldur	w15, [x29, #-120]
   395e4:	ldur	w17, [x29, #-144]
   395e8:	add	w11, w26, w11
   395ec:	sub	w13, w16, w11
   395f0:	add	w14, w11, w9
   395f4:	cmp	x9, x13
   395f8:	mov	w8, wzr
   395fc:	add	x12, x12, w15, uxtw #3
   39600:	sub	w11, w17, w11
   39604:	csel	w16, w14, w16, hi  // hi = pmore
   39608:	cmp	x9, #0x1, lsl #12
   3960c:	add	w15, w15, #0x1
   39610:	stp	w11, w9, [x12]
   39614:	str	w16, [sp, #160]
   39618:	stur	w15, [x29, #-120]
   3961c:	b.hi	39698 <ZSTD_endStream@@Base+0x2b744>  // b.pmore
   39620:	ldur	x11, [x29, #-88]
   39624:	ldur	x12, [x29, #-192]
   39628:	ldur	x23, [x29, #-168]
   3962c:	mov	x24, x9
   39630:	add	x11, x11, x9
   39634:	cmp	x11, x12
   39638:	b.ne	3964c <ZSTD_endStream@@Base+0x2b6f8>  // b.any
   3963c:	mov	x24, x9
   39640:	tbnz	w8, #0, 39578 <ZSTD_endStream@@Base+0x2b624>
   39644:	b	396a4 <ZSTD_endStream@@Base+0x2b750>
   39648:	ldur	x23, [x29, #-168]
   3964c:	ldr	w8, [sp, #72]
   39650:	cmp	w26, w8
   39654:	b.ls	39570 <ZSTD_endStream@@Base+0x2b61c>  // b.plast
   39658:	ldrb	w8, [x10, x9]
   3965c:	ldur	x10, [x29, #-88]
   39660:	ldr	w11, [sp, #60]
   39664:	ldur	x12, [x29, #-152]
   39668:	ldrb	w10, [x10, x9]
   3966c:	and	w11, w26, w11
   39670:	lsl	w11, w11, #1
   39674:	add	x11, x12, w11, uxtw #2
   39678:	cmp	w8, w10
   3967c:	cset	w8, cc  // cc = lo, ul, last
   39680:	ldr	w26, [x11, w8, uxtw #2]
   39684:	csel	x22, x22, x9, cc  // cc = lo, ul, last
   39688:	csel	x25, x9, x25, cc  // cc = lo, ul, last
   3968c:	mov	w8, #0x1                   	// #1
   39690:	tbnz	w8, #0, 39578 <ZSTD_endStream@@Base+0x2b624>
   39694:	b	396a4 <ZSTD_endStream@@Base+0x2b750>
   39698:	ldur	x23, [x29, #-168]
   3969c:	mov	x24, x9
   396a0:	tbnz	w8, #0, 39578 <ZSTD_endStream@@Base+0x2b624>
   396a4:	ldr	w8, [sp, #160]
   396a8:	ldur	x9, [x29, #-72]
   396ac:	sub	w8, w8, #0x8
   396b0:	str	w8, [x9, #36]
   396b4:	ldur	w20, [x29, #-120]
   396b8:	b	39850 <ZSTD_endStream@@Base+0x2b8fc>
   396bc:	ldr	x8, [sp, #152]
   396c0:	str	wzr, [x8]
   396c4:	ldr	x8, [sp, #160]
   396c8:	str	wzr, [x8]
   396cc:	cbz	w19, 39840 <ZSTD_endStream@@Base+0x2b8ec>
   396d0:	ldr	w1, [sp, #12]
   396d4:	mov	w2, #0x4                   	// #4
   396d8:	mov	x0, x26
   396dc:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   396e0:	ldr	x9, [sp, #24]
   396e4:	mov	x22, xzr
   396e8:	mov	x25, xzr
   396ec:	ldr	x8, [x9, #48]
   396f0:	ldr	w26, [x8, x0, lsl #2]
   396f4:	ldr	x8, [x9, #64]
   396f8:	ldr	x9, [sp, #232]
   396fc:	stur	x8, [x29, #-184]
   39700:	ldr	x8, [sp, #16]
   39704:	and	x8, x8, #0xffffffff
   39708:	stur	x8, [x29, #-120]
   3970c:	ldr	x8, [sp, #72]
   39710:	add	x8, x9, x8
   39714:	stur	x8, [x29, #-152]
   39718:	b	39758 <ZSTD_endStream@@Base+0x2b804>
   3971c:	ldrb	w8, [x10, x9]
   39720:	ldur	x10, [x29, #-88]
   39724:	ldr	w11, [sp, #64]
   39728:	ldur	x12, [x29, #-184]
   3972c:	ldrb	w10, [x10, x9]
   39730:	and	w11, w26, w11
   39734:	lsl	w11, w11, #1
   39738:	add	x11, x12, w11, uxtw #2
   3973c:	cmp	w8, w10
   39740:	cset	w8, cc  // cc = lo, ul, last
   39744:	ldr	w26, [x11, w8, uxtw #2]
   39748:	csel	x22, x22, x9, cc  // cc = lo, ul, last
   3974c:	csel	x25, x9, x25, cc  // cc = lo, ul, last
   39750:	mov	w8, #0x1                   	// #1
   39754:	tbz	w8, #0, 39840 <ZSTD_endStream@@Base+0x2b8ec>
   39758:	subs	w19, w19, #0x1
   3975c:	b.cc	39840 <ZSTD_endStream@@Base+0x2b8ec>  // b.lo, b.ul, b.last
   39760:	ldr	w8, [sp, #96]
   39764:	cmp	w26, w8
   39768:	b.ls	39840 <ZSTD_endStream@@Base+0x2b8ec>  // b.plast
   3976c:	ldr	x8, [sp, #88]
   39770:	mov	w21, w26
   39774:	ldur	x2, [x29, #-192]
   39778:	ldp	x3, x4, [sp, #192]
   3977c:	add	x20, x8, x21
   39780:	ldur	x8, [x29, #-88]
   39784:	cmp	x25, x22
   39788:	csel	x23, x25, x22, cc  // cc = lo, ul, last
   3978c:	add	x1, x20, x23
   39790:	add	x0, x8, x23
   39794:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   39798:	ldur	x8, [x29, #-152]
   3979c:	ldur	x11, [x29, #-120]
   397a0:	add	x9, x0, x23
   397a4:	add	x10, x9, x21
   397a8:	add	x8, x8, x21
   397ac:	cmp	x10, x11
   397b0:	csel	x10, x20, x8, cc  // cc = lo, ul, last
   397b4:	cmp	x9, x24
   397b8:	b.ls	3981c <ZSTD_endStream@@Base+0x2b8c8>  // b.plast
   397bc:	ldr	x11, [sp, #72]
   397c0:	ldur	x12, [x29, #-176]
   397c4:	ldur	w15, [x29, #-144]
   397c8:	mov	w8, wzr
   397cc:	add	w11, w26, w11
   397d0:	sub	w13, w28, w11
   397d4:	add	w14, w11, w9
   397d8:	cmp	x9, x13
   397dc:	add	x12, x12, w27, uxtw #3
   397e0:	sub	w11, w15, w11
   397e4:	csel	w28, w14, w28, hi  // hi = pmore
   397e8:	cmp	x9, #0x1, lsl #12
   397ec:	add	w27, w27, #0x1
   397f0:	stp	w11, w9, [x12]
   397f4:	b.hi	39834 <ZSTD_endStream@@Base+0x2b8e0>  // b.pmore
   397f8:	ldur	x11, [x29, #-88]
   397fc:	ldur	x12, [x29, #-192]
   39800:	ldur	x23, [x29, #-168]
   39804:	mov	x24, x9
   39808:	add	x11, x11, x9
   3980c:	cmp	x11, x12
   39810:	b.ne	39820 <ZSTD_endStream@@Base+0x2b8cc>  // b.any
   39814:	mov	x24, x9
   39818:	b	39754 <ZSTD_endStream@@Base+0x2b800>
   3981c:	ldur	x23, [x29, #-168]
   39820:	ldr	w8, [sp, #80]
   39824:	cmp	w26, w8
   39828:	b.hi	3971c <ZSTD_endStream@@Base+0x2b7c8>  // b.pmore
   3982c:	mov	w8, wzr
   39830:	b	39754 <ZSTD_endStream@@Base+0x2b800>
   39834:	ldur	x23, [x29, #-168]
   39838:	mov	x24, x9
   3983c:	b	39754 <ZSTD_endStream@@Base+0x2b800>
   39840:	ldur	x9, [x29, #-72]
   39844:	sub	w8, w28, #0x8
   39848:	mov	w20, w27
   3984c:	str	w8, [x9, #36]
   39850:	ldr	x27, [sp, #280]
   39854:	ldur	x22, [x29, #-72]
   39858:	ldur	w24, [x29, #-196]
   3985c:	ldur	w28, [x29, #-100]
   39860:	ldur	x25, [x29, #-96]
   39864:	ldur	w0, [x29, #-112]
   39868:	cbz	w20, 398b0 <ZSTD_endStream@@Base+0x2b95c>
   3986c:	ldur	x9, [x29, #-176]
   39870:	sub	w8, w20, #0x1
   39874:	add	x9, x9, w8, uxtw #3
   39878:	ldr	w11, [x9, #4]
   3987c:	cmp	w11, w24
   39880:	b.hi	398bc <ZSTD_endStream@@Base+0x2b968>  // b.pmore
   39884:	add	w9, w11, w28
   39888:	cmp	w9, #0x1, lsl #12
   3988c:	b.cs	398bc <ZSTD_endStream@@Base+0x2b968>  // b.hs, b.nlast
   39890:	ldur	w10, [x29, #-240]
   39894:	ldur	x26, [x29, #-80]
   39898:	ldr	w9, [sp, #276]
   3989c:	mov	w8, wzr
   398a0:	str	w9, [sp, #276]
   398a4:	cbz	w8, 39954 <ZSTD_endStream@@Base+0x2ba00>
   398a8:	stur	w10, [x29, #-240]
   398ac:	b	39b74 <ZSTD_endStream@@Base+0x2bc20>
   398b0:	ldur	x26, [x29, #-80]
   398b4:	mov	w8, #0x13                  	// #19
   398b8:	b	39b74 <ZSTD_endStream@@Base+0x2bc20>
   398bc:	ldr	x9, [sp, #184]
   398c0:	ldur	x10, [x29, #-176]
   398c4:	lsl	x8, x8, #3
   398c8:	ldr	w9, [x9]
   398cc:	ldr	w8, [x10, x8]
   398d0:	mov	w10, w11
   398d4:	str	w8, [sp, #272]
   398d8:	cbz	w9, 398e8 <ZSTD_endStream@@Base+0x2b994>
   398dc:	ldur	x26, [x29, #-80]
   398e0:	mov	w8, wzr
   398e4:	b	398f8 <ZSTD_endStream@@Base+0x2b9a4>
   398e8:	ldur	x26, [x29, #-80]
   398ec:	mov	w8, #0x1c                  	// #28
   398f0:	madd	x8, x25, x8, x26
   398f4:	ldr	w8, [x8, #12]
   398f8:	sub	w19, w28, w8
   398fc:	ldr	w8, [sp, #268]
   39900:	ldur	x9, [x29, #-24]
   39904:	mov	w25, w10
   39908:	ldur	w21, [x29, #-124]
   3990c:	stur	w8, [x29, #-64]
   39910:	ldr	w8, [sp, #272]
   39914:	sub	x0, x29, #0x40
   39918:	stur	w21, [x29, #-52]
   3991c:	stp	w8, w10, [x29, #-60]
   39920:	ldur	w8, [x29, #-16]
   39924:	ldr	x10, [sp, #104]
   39928:	str	w8, [x10, #8]
   3992c:	str	x9, [x10]
   39930:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   39934:	cmp	w19, #0x1, lsl #12
   39938:	add	w0, w0, w19
   3993c:	csel	w28, wzr, w19, hi  // hi = pmore
   39940:	mov	w10, w25
   39944:	mov	w8, #0x7                   	// #7
   39948:	mov	w9, w21
   3994c:	str	w9, [sp, #276]
   39950:	cbnz	w8, 398a8 <ZSTD_endStream@@Base+0x2b954>
   39954:	ldr	w8, [sp, #180]
   39958:	ldr	w9, [sp, #168]
   3995c:	str	w10, [sp, #256]
   39960:	mov	x10, xzr
   39964:	stur	w28, [x29, #-100]
   39968:	add	w8, w9, w8
   3996c:	stur	w8, [x29, #-88]
   39970:	mov	w8, #0x1c                  	// #28
   39974:	umaddl	x8, w28, w8, x26
   39978:	add	x8, x8, #0x10
   3997c:	stur	x8, [x29, #-240]
   39980:	mov	w8, w20
   39984:	stur	x8, [x29, #-248]
   39988:	b	399a8 <ZSTD_endStream@@Base+0x2ba54>
   3998c:	mov	w0, w24
   39990:	ldur	x10, [x29, #-184]
   39994:	ldur	x8, [x29, #-248]
   39998:	ldur	w24, [x29, #-196]
   3999c:	add	x10, x10, #0x1
   399a0:	cmp	x10, x8
   399a4:	b.cs	39b60 <ZSTD_endStream@@Base+0x2bc0c>  // b.hs, b.nlast
   399a8:	ldur	x20, [x29, #-176]
   399ac:	mov	x8, x10
   399b0:	mov	w24, w0
   399b4:	ldur	x0, [x29, #-240]
   399b8:	add	x19, x20, x8, lsl #3
   399bc:	ldr	w1, [x19]
   399c0:	ldur	w2, [x29, #-232]
   399c4:	stur	x10, [x29, #-184]
   399c8:	stur	w1, [x29, #-96]
   399cc:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   399d0:	stp	x1, x0, [x29, #-120]
   399d4:	ldr	w27, [x19, #4]
   399d8:	ldur	x8, [x29, #-184]
   399dc:	ldur	w25, [x29, #-252]
   399e0:	cbz	x8, 399f4 <ZSTD_endStream@@Base+0x2baa0>
   399e4:	sub	w8, w8, #0x1
   399e8:	add	x8, x20, w8, uxtw #3
   399ec:	ldr	w8, [x8, #4]
   399f0:	add	w25, w8, #0x1
   399f4:	cmp	w27, w25
   399f8:	mov	w19, #0x1c                  	// #28
   399fc:	mov	w20, #0x40000000            	// #1073741824
   39a00:	b.cc	3998c <ZSTD_endStream@@Base+0x2ba38>  // b.lo, b.ul, b.last
   39a04:	ldur	w8, [x29, #-96]
   39a08:	add	w0, w8, #0x1
   39a0c:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   39a10:	mov	w8, w0
   39a14:	stur	x8, [x29, #-144]
   39a18:	lsl	w8, w0, #8
   39a1c:	add	w8, w8, #0x1, lsl #12
   39a20:	stur	w8, [x29, #-152]
   39a24:	add	w8, w27, w28
   39a28:	mov	w0, w24
   39a2c:	b	39a68 <ZSTD_endStream@@Base+0x2bb14>
   39a30:	ldur	w10, [x29, #-124]
   39a34:	umaddl	x9, w28, w19, x26
   39a38:	stp	w27, w10, [x9, #8]
   39a3c:	ldur	w10, [x29, #-96]
   39a40:	stp	w8, w10, [x9]
   39a44:	ldur	x8, [x29, #-112]
   39a48:	str	x8, [x9, #16]
   39a4c:	ldur	x8, [x29, #-120]
   39a50:	str	w8, [x9, #24]
   39a54:	ldur	w28, [x29, #-100]
   39a58:	sub	w27, w27, #0x1
   39a5c:	cmp	w27, w25
   39a60:	sub	w8, w24, #0x1
   39a64:	b.cc	39990 <ZSTD_endStream@@Base+0x2ba3c>  // b.lo, b.ul, b.last
   39a68:	ldr	w9, [x22, #152]
   39a6c:	mov	w24, w8
   39a70:	add	w28, w27, w28
   39a74:	sub	w26, w27, #0x3
   39a78:	cmp	w9, #0x1
   39a7c:	b.ne	39a9c <ZSTD_endStream@@Base+0x2bb48>  // b.any
   39a80:	mov	w21, w0
   39a84:	mov	w0, w26
   39a88:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   39a8c:	ldur	w8, [x29, #-152]
   39a90:	add	w8, w8, w0
   39a94:	mov	w0, w21
   39a98:	b	39b10 <ZSTD_endStream@@Base+0x2bbbc>
   39a9c:	ldr	x8, [x22, #96]
   39aa0:	ldur	x23, [x29, #-144]
   39aa4:	mov	w21, w0
   39aa8:	ldr	w20, [x22, #148]
   39aac:	ldr	w0, [x8, x23, lsl #2]
   39ab0:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   39ab4:	mov	w19, w0
   39ab8:	mov	w0, w26
   39abc:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   39ac0:	mov	w8, w0
   39ac4:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   39ac8:	ldr	x9, [x22, #88]
   39acc:	lsl	x8, x8, #2
   39ad0:	add	x10, x10, #0xca8
   39ad4:	ldr	w26, [x10, x8]
   39ad8:	ldur	x10, [x29, #-72]
   39adc:	ldr	w0, [x9, x8]
   39ae0:	ldr	w22, [x10, #144]
   39ae4:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   39ae8:	sub	w9, w20, w19
   39aec:	add	w8, w26, w23
   39af0:	add	w9, w9, w22
   39af4:	ldur	x22, [x29, #-72]
   39af8:	add	w8, w9, w8, lsl #8
   39afc:	sub	w8, w8, w0
   39b00:	mov	w20, #0x40000000            	// #1073741824
   39b04:	mov	w19, #0x1c                  	// #28
   39b08:	mov	w0, w21
   39b0c:	add	w8, w8, #0x33
   39b10:	ldur	w9, [x29, #-88]
   39b14:	ldur	x26, [x29, #-80]
   39b18:	cmp	w28, w0
   39b1c:	add	w8, w9, w8
   39b20:	b.hi	39b3c <ZSTD_endStream@@Base+0x2bbe8>  // b.pmore
   39b24:	umull	x9, w28, w19
   39b28:	ldr	w9, [x26, x9]
   39b2c:	cmp	w8, w9
   39b30:	b.ge	39a54 <ZSTD_endStream@@Base+0x2bb00>  // b.tcont
   39b34:	cmp	w28, w0
   39b38:	b.ls	39a30 <ZSTD_endStream@@Base+0x2badc>  // b.plast
   39b3c:	ldur	x10, [x29, #-136]
   39b40:	mov	w9, w0
   39b44:	umaddl	x10, w0, w19, x10
   39b48:	add	x9, x9, #0x1
   39b4c:	cmp	x24, x9
   39b50:	str	w20, [x10], #28
   39b54:	b.ne	39b48 <ZSTD_endStream@@Base+0x2bbf4>  // b.any
   39b58:	mov	w0, w9
   39b5c:	b	39a30 <ZSTD_endStream@@Base+0x2badc>
   39b60:	ldr	w9, [sp, #256]
   39b64:	ldr	x27, [sp, #280]
   39b68:	ldur	x23, [x29, #-168]
   39b6c:	mov	w8, wzr
   39b70:	stur	w9, [x29, #-240]
   39b74:	ldur	x20, [x29, #-208]
   39b78:	cmp	w8, #0x13
   39b7c:	b.hi	367ec <ZSTD_endStream@@Base+0x28898>  // b.pmore
   39b80:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   39b84:	add	x11, x11, #0xb5c
   39b88:	adr	x9, 367ec <ZSTD_endStream@@Base+0x28898>
   39b8c:	ldrh	w10, [x11, x8, lsl #1]
   39b90:	add	x9, x9, x10, lsl #2
   39b94:	br	x9
   39b98:	add	w28, w28, #0x1
   39b9c:	cmp	w28, w0
   39ba0:	b.ls	38098 <ZSTD_endStream@@Base+0x2a144>  // b.plast
   39ba4:	b	39f44 <ZSTD_endStream@@Base+0x2bff0>
   39ba8:	ldur	w9, [x29, #-248]
   39bac:	add	w8, w21, #0x2
   39bb0:	cmp	x0, w9, uxtw
   39bb4:	ldur	x9, [x29, #-176]
   39bb8:	stp	w8, w0, [x9]
   39bbc:	b.hi	39bdc <ZSTD_endStream@@Base+0x2bc88>  // b.pmore
   39bc0:	ldur	x9, [x29, #-192]
   39bc4:	add	x8, x26, x0
   39bc8:	cmp	x8, x9
   39bcc:	b.eq	39bdc <ZSTD_endStream@@Base+0x2bc88>  // b.none
   39bd0:	mov	w8, wzr
   39bd4:	mov	w25, #0x1                   	// #1
   39bd8:	b	39bf4 <ZSTD_endStream@@Base+0x2bca0>
   39bdc:	ldr	w8, [sp, #248]
   39be0:	mov	w25, #0x1                   	// #1
   39be4:	mov	w20, #0x1                   	// #1
   39be8:	add	w9, w8, #0x1
   39bec:	mov	w8, #0x1                   	// #1
   39bf0:	str	w9, [x22, #36]
   39bf4:	mov	x19, x0
   39bf8:	cbnz	w8, 39c04 <ZSTD_endStream@@Base+0x2bcb0>
   39bfc:	mov	w8, wzr
   39c00:	mov	x0, x19
   39c04:	mov	x19, x0
   39c08:	cbnz	w8, 39860 <ZSTD_endStream@@Base+0x2b90c>
   39c0c:	ldp	x10, x8, [sp, #32]
   39c10:	ldr	w9, [sp, #248]
   39c14:	mov	w20, w25
   39c18:	ldur	x24, [x29, #-192]
   39c1c:	ldr	w25, [sp, #152]
   39c20:	ldr	w27, [sp, #60]
   39c24:	mov	x26, xzr
   39c28:	mov	x22, xzr
   39c2c:	str	w9, [x8, x10, lsl #2]
   39c30:	add	w8, w9, #0x2
   39c34:	stur	w8, [x29, #-120]
   39c38:	b	39c54 <ZSTD_endStream@@Base+0x2bd00>
   39c3c:	ldur	x23, [x29, #-168]
   39c40:	mov	x19, x8
   39c44:	mov	w27, w9
   39c48:	mov	x8, x22
   39c4c:	mov	x22, x8
   39c50:	tbz	w9, #0, 39d94 <ZSTD_endStream@@Base+0x2be40>
   39c54:	subs	w27, w27, #0x1
   39c58:	b.cc	39d94 <ZSTD_endStream@@Base+0x2be40>  // b.lo, b.ul, b.last
   39c5c:	ldur	w28, [x29, #-184]
   39c60:	ldr	w8, [sp, #200]
   39c64:	cmp	w28, w8
   39c68:	b.cc	39d94 <ZSTD_endStream@@Base+0x2be40>  // b.lo, b.ul, b.last
   39c6c:	ldr	x8, [sp, #208]
   39c70:	cmp	x22, x26
   39c74:	csel	x23, x22, x26, cc  // cc = lo, ul, last
   39c78:	mov	x2, x24
   39c7c:	add	x21, x8, w28, uxtw
   39c80:	ldur	x8, [x29, #-88]
   39c84:	add	x1, x21, x23
   39c88:	add	x0, x8, x23
   39c8c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   39c90:	add	x8, x0, x23
   39c94:	cmp	x8, x19
   39c98:	b.ls	39cec <ZSTD_endStream@@Base+0x2bd98>  // b.plast
   39c9c:	ldur	w12, [x29, #-120]
   39ca0:	ldur	x13, [x29, #-176]
   39ca4:	sub	w10, w25, w28
   39ca8:	add	w11, w28, w8
   39cac:	cmp	x8, x10
   39cb0:	mov	w9, wzr
   39cb4:	sub	w12, w12, w28
   39cb8:	add	x13, x13, w20, uxtw #3
   39cbc:	csel	w25, w11, w25, hi  // hi = pmore
   39cc0:	cmp	x8, #0x1, lsl #12
   39cc4:	add	w20, w20, #0x1
   39cc8:	stp	w12, w8, [x13]
   39ccc:	b.hi	39c3c <ZSTD_endStream@@Base+0x2bce8>  // b.pmore
   39cd0:	ldur	x10, [x29, #-88]
   39cd4:	ldur	x23, [x29, #-168]
   39cd8:	mov	x19, x8
   39cdc:	add	x10, x10, x8
   39ce0:	cmp	x10, x24
   39ce4:	b.ne	39cf0 <ZSTD_endStream@@Base+0x2bd9c>  // b.any
   39ce8:	b	39c40 <ZSTD_endStream@@Base+0x2bcec>
   39cec:	ldur	x23, [x29, #-168]
   39cf0:	ldur	x10, [x29, #-88]
   39cf4:	ldrb	w9, [x21, x8]
   39cf8:	ldr	w11, [sp, #124]
   39cfc:	ldur	w12, [x29, #-184]
   39d00:	ldrb	w10, [x10, x8]
   39d04:	and	w11, w12, w11
   39d08:	cmp	w9, w10
   39d0c:	ldr	x9, [sp, #160]
   39d10:	lsl	w11, w11, #1
   39d14:	add	x9, x9, w11, uxtw #2
   39d18:	b.cs	39d3c <ZSTD_endStream@@Base+0x2bde8>  // b.hs, b.nlast
   39d1c:	ldr	w10, [sp, #112]
   39d20:	cmp	w12, w10
   39d24:	ldr	x10, [sp, #144]
   39d28:	str	w12, [x10]
   39d2c:	b.ls	39d6c <ZSTD_endStream@@Base+0x2be18>  // b.plast
   39d30:	add	x9, x9, #0x4
   39d34:	str	x9, [sp, #144]
   39d38:	b	39d5c <ZSTD_endStream@@Base+0x2be08>
   39d3c:	ldr	w10, [sp, #112]
   39d40:	cmp	w12, w10
   39d44:	ldr	x10, [sp, #128]
   39d48:	str	w12, [x10]
   39d4c:	b.ls	39d7c <ZSTD_endStream@@Base+0x2be28>  // b.plast
   39d50:	str	x9, [sp, #128]
   39d54:	mov	x26, x8
   39d58:	mov	x8, x22
   39d5c:	ldr	w9, [x9]
   39d60:	stur	w9, [x29, #-184]
   39d64:	mov	w9, #0x1                   	// #1
   39d68:	b	39c4c <ZSTD_endStream@@Base+0x2bcf8>
   39d6c:	sub	x10, x29, #0x40
   39d70:	mov	w9, wzr
   39d74:	str	x10, [sp, #144]
   39d78:	b	39c4c <ZSTD_endStream@@Base+0x2bcf8>
   39d7c:	sub	x10, x29, #0x40
   39d80:	mov	w9, wzr
   39d84:	str	x10, [sp, #128]
   39d88:	mov	x26, x8
   39d8c:	mov	x8, x22
   39d90:	b	39c4c <ZSTD_endStream@@Base+0x2bcf8>
   39d94:	ldr	x8, [sp, #128]
   39d98:	str	w25, [sp, #152]
   39d9c:	str	wzr, [x8]
   39da0:	ldr	x8, [sp, #144]
   39da4:	str	wzr, [x8]
   39da8:	cbz	w27, 39f1c <ZSTD_endStream@@Base+0x2bfc8>
   39dac:	ldur	x0, [x29, #-88]
   39db0:	ldr	w1, [sp, #12]
   39db4:	mov	w2, #0x3                   	// #3
   39db8:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   39dbc:	ldr	x9, [sp, #24]
   39dc0:	ldur	w24, [x29, #-196]
   39dc4:	mov	x22, xzr
   39dc8:	mov	x25, xzr
   39dcc:	ldr	x8, [x9, #48]
   39dd0:	ldr	w26, [x8, x0, lsl #2]
   39dd4:	ldr	x8, [x9, #64]
   39dd8:	ldr	x9, [sp, #208]
   39ddc:	stur	x8, [x29, #-152]
   39de0:	ldr	x8, [sp, #16]
   39de4:	and	x8, x8, #0xffffffff
   39de8:	stur	x8, [x29, #-144]
   39dec:	ldr	x8, [sp, #72]
   39df0:	add	x28, x9, x8
   39df4:	b	39e34 <ZSTD_endStream@@Base+0x2bee0>
   39df8:	ldrb	w8, [x10, x9]
   39dfc:	ldur	x10, [x29, #-88]
   39e00:	ldr	w11, [sp, #64]
   39e04:	ldur	x12, [x29, #-152]
   39e08:	ldrb	w10, [x10, x9]
   39e0c:	and	w11, w26, w11
   39e10:	lsl	w11, w11, #1
   39e14:	add	x11, x12, w11, uxtw #2
   39e18:	cmp	w8, w10
   39e1c:	cset	w8, cc  // cc = lo, ul, last
   39e20:	ldr	w26, [x11, w8, uxtw #2]
   39e24:	csel	x22, x22, x9, cc  // cc = lo, ul, last
   39e28:	csel	x25, x9, x25, cc  // cc = lo, ul, last
   39e2c:	mov	w8, #0x1                   	// #1
   39e30:	tbz	w8, #0, 39f20 <ZSTD_endStream@@Base+0x2bfcc>
   39e34:	subs	w27, w27, #0x1
   39e38:	b.cc	39f20 <ZSTD_endStream@@Base+0x2bfcc>  // b.lo, b.ul, b.last
   39e3c:	ldr	w8, [sp, #96]
   39e40:	cmp	w26, w8
   39e44:	b.ls	39f20 <ZSTD_endStream@@Base+0x2bfcc>  // b.plast
   39e48:	ldr	x8, [sp, #88]
   39e4c:	mov	w21, w26
   39e50:	ldur	x2, [x29, #-192]
   39e54:	ldp	x3, x4, [sp, #216]
   39e58:	add	x24, x8, x21
   39e5c:	ldur	x8, [x29, #-88]
   39e60:	cmp	x25, x22
   39e64:	csel	x23, x25, x22, cc  // cc = lo, ul, last
   39e68:	add	x1, x24, x23
   39e6c:	add	x0, x8, x23
   39e70:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   39e74:	ldur	x11, [x29, #-144]
   39e78:	add	x9, x0, x23
   39e7c:	add	x10, x9, x21
   39e80:	add	x8, x28, x21
   39e84:	cmp	x10, x11
   39e88:	csel	x10, x24, x8, cc  // cc = lo, ul, last
   39e8c:	cmp	x9, x19
   39e90:	b.ls	39f00 <ZSTD_endStream@@Base+0x2bfac>  // b.plast
   39e94:	ldr	x11, [sp, #72]
   39e98:	ldur	x12, [x29, #-176]
   39e9c:	ldr	w15, [sp, #152]
   39ea0:	ldur	w16, [x29, #-120]
   39ea4:	add	w11, w26, w11
   39ea8:	add	x12, x12, w20, uxtw #3
   39eac:	sub	w13, w15, w11
   39eb0:	add	w14, w11, w9
   39eb4:	sub	w11, w16, w11
   39eb8:	stp	w11, w9, [x12]
   39ebc:	ldur	x23, [x29, #-168]
   39ec0:	ldur	w24, [x29, #-196]
   39ec4:	cmp	x9, x13
   39ec8:	mov	w8, wzr
   39ecc:	csel	w15, w14, w15, hi  // hi = pmore
   39ed0:	cmp	x9, #0x1, lsl #12
   39ed4:	add	w20, w20, #0x1
   39ed8:	str	w15, [sp, #152]
   39edc:	b.hi	39ef8 <ZSTD_endStream@@Base+0x2bfa4>  // b.pmore
   39ee0:	ldur	x11, [x29, #-88]
   39ee4:	ldur	x12, [x29, #-192]
   39ee8:	mov	x19, x9
   39eec:	add	x11, x11, x9
   39ef0:	cmp	x11, x12
   39ef4:	b.ne	39f08 <ZSTD_endStream@@Base+0x2bfb4>  // b.any
   39ef8:	mov	x19, x9
   39efc:	b	39e30 <ZSTD_endStream@@Base+0x2bedc>
   39f00:	ldur	x23, [x29, #-168]
   39f04:	ldur	w24, [x29, #-196]
   39f08:	ldr	w8, [sp, #80]
   39f0c:	cmp	w26, w8
   39f10:	b.hi	39df8 <ZSTD_endStream@@Base+0x2bea4>  // b.pmore
   39f14:	mov	w8, wzr
   39f18:	b	39e30 <ZSTD_endStream@@Base+0x2bedc>
   39f1c:	ldur	w24, [x29, #-196]
   39f20:	ldr	w8, [sp, #152]
   39f24:	ldur	x22, [x29, #-72]
   39f28:	ldr	x27, [sp, #280]
   39f2c:	sub	w8, w8, #0x8
   39f30:	str	w8, [x22, #36]
   39f34:	b	3985c <ZSTD_endStream@@Base+0x2b908>
   39f38:	ldr	w21, [sp, #268]
   39f3c:	ldr	w22, [sp, #272]
   39f40:	b	39fc8 <ZSTD_endStream@@Base+0x2c074>
   39f44:	mov	w8, #0x1c                  	// #28
   39f48:	umaddl	x8, w0, w8, x26
   39f4c:	ldp	w21, w22, [x8]
   39f50:	ldr	w9, [x8, #24]
   39f54:	ldr	x10, [x8, #16]
   39f58:	ldp	w28, w25, [x8, #8]
   39f5c:	stp	w21, w22, [x29, #-64]
   39f60:	stur	w9, [x29, #-16]
   39f64:	stur	x10, [x29, #-24]
   39f68:	stp	w28, w25, [x29, #-56]
   39f6c:	ldr	w9, [x8, #24]
   39f70:	ldr	x8, [x8, #16]
   39f74:	ldr	x19, [sp, #104]
   39f78:	mov	w20, w0
   39f7c:	sub	x0, x29, #0x40
   39f80:	str	w9, [x19, #8]
   39f84:	str	x8, [x19]
   39f88:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   39f8c:	cmp	w20, w0
   39f90:	str	w25, [sp, #276]
   39f94:	stur	w28, [x29, #-240]
   39f98:	b.ls	39fc4 <ZSTD_endStream@@Base+0x2c070>  // b.plast
   39f9c:	ldur	w8, [x29, #-16]
   39fa0:	ldur	x9, [x29, #-24]
   39fa4:	sub	x0, x29, #0x40
   39fa8:	stp	w21, w22, [x29, #-64]
   39fac:	stp	w28, w25, [x29, #-56]
   39fb0:	str	w8, [x19, #8]
   39fb4:	str	x9, [x19]
   39fb8:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   39fbc:	sub	w28, w20, w0
   39fc0:	b	39fc8 <ZSTD_endStream@@Base+0x2c074>
   39fc4:	mov	w28, wzr
   39fc8:	mov	w8, #0x1c                  	// #28
   39fcc:	add	w19, w28, #0x1
   39fd0:	umaddl	x8, w19, w8, x26
   39fd4:	str	w21, [sp, #268]
   39fd8:	stp	w21, w22, [x8]
   39fdc:	ldur	w9, [x29, #-240]
   39fe0:	mov	w25, #0x1c                  	// #28
   39fe4:	mov	w20, w28
   39fe8:	mov	w21, w28
   39fec:	str	w9, [x8, #8]
   39ff0:	ldr	w9, [sp, #276]
   39ff4:	str	w22, [sp, #272]
   39ff8:	stur	w28, [x29, #-100]
   39ffc:	str	w9, [x8, #12]
   3a000:	ldur	w9, [x29, #-16]
   3a004:	ldur	x10, [x29, #-24]
   3a008:	str	w9, [x8, #24]
   3a00c:	str	x10, [x8, #16]
   3a010:	cbz	w28, 3a05c <ZSTD_endStream@@Base+0x2c108>
   3a014:	umaddl	x22, w21, w25, x26
   3a018:	ldur	q0, [x22, #12]
   3a01c:	ldr	q1, [x22]
   3a020:	sub	x0, x29, #0x40
   3a024:	stur	q0, [x29, #-52]
   3a028:	stur	q1, [x29, #-64]
   3a02c:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   3a030:	ldur	q0, [x22, #12]
   3a034:	ldr	q1, [x22]
   3a038:	subs	w9, w21, w0
   3a03c:	umaddl	x8, w20, w25, x26
   3a040:	sub	w20, w20, #0x1
   3a044:	csel	w21, wzr, w9, cc  // cc = lo, ul, last
   3a048:	stur	q0, [x8, #12]
   3a04c:	str	q1, [x8]
   3a050:	b.hi	3a014 <ZSTD_endStream@@Base+0x2c0c0>  // b.pmore
   3a054:	add	w28, w20, #0x1
   3a058:	b	3a060 <ZSTD_endStream@@Base+0x2c10c>
   3a05c:	mov	w28, w19
   3a060:	ldur	x20, [x29, #-208]
   3a064:	ldur	x21, [x29, #-224]
   3a068:	ldur	x22, [x29, #-72]
   3a06c:	cmp	w28, w19
   3a070:	b.ls	3a0b8 <ZSTD_endStream@@Base+0x2c164>  // b.plast
   3a074:	ldur	x0, [x29, #-216]
   3a078:	mov	w1, #0x2                   	// #2
   3a07c:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   3a080:	ldr	x8, [sp, #288]
   3a084:	ldur	w28, [x29, #-100]
   3a088:	b	367f0 <ZSTD_endStream@@Base+0x2889c>
   3a08c:	ldur	x23, [x29, #-168]
   3a090:	ldur	w24, [x29, #-196]
   3a094:	ldur	x20, [x29, #-208]
   3a098:	strh	w8, [x10, #6]
   3a09c:	add	x8, x10, #0x8
   3a0a0:	add	x27, x27, w9, uxtw
   3a0a4:	str	x8, [x21, #8]
   3a0a8:	stur	x27, [x29, #-160]
   3a0ac:	add	w28, w28, #0x1
   3a0b0:	cmp	w28, w19
   3a0b4:	b.hi	3a074 <ZSTD_endStream@@Base+0x2c120>  // b.pmore
   3a0b8:	mov	w8, #0x1c                  	// #28
   3a0bc:	umaddl	x8, w28, w8, x26
   3a0c0:	ldp	w25, w24, [x8, #8]
   3a0c4:	cbz	w25, 3a0ec <ZSTD_endStream@@Base+0x2c198>
   3a0c8:	ldr	w20, [x8, #4]
   3a0cc:	cmp	w20, #0x3
   3a0d0:	b.cc	3a0fc <ZSTD_endStream@@Base+0x2c1a8>  // b.lo, b.ul, b.last
   3a0d4:	ldp	w9, w8, [x23]
   3a0d8:	stp	w9, w8, [x23, #4]
   3a0dc:	ldur	x0, [x29, #-216]
   3a0e0:	ldr	x22, [sp, #296]
   3a0e4:	sub	w8, w20, #0x2
   3a0e8:	b	3a148 <ZSTD_endStream@@Base+0x2c1f4>
   3a0ec:	add	x8, x27, x24
   3a0f0:	ldur	w24, [x29, #-196]
   3a0f4:	stur	x8, [x29, #-160]
   3a0f8:	b	3a0ac <ZSTD_endStream@@Base+0x2c158>
   3a0fc:	ldur	x0, [x29, #-216]
   3a100:	ldr	x22, [sp, #296]
   3a104:	cmp	w24, #0x0
   3a108:	cinc	w9, w20, eq  // eq = none
   3a10c:	cbz	w9, 3a14c <ZSTD_endStream@@Base+0x2c1f8>
   3a110:	cmp	w9, #0x3
   3a114:	b.ne	3a12c <ZSTD_endStream@@Base+0x2c1d8>  // b.any
   3a118:	ldr	w8, [x23]
   3a11c:	sub	w8, w8, #0x1
   3a120:	cmp	w9, #0x2
   3a124:	b.cs	3a138 <ZSTD_endStream@@Base+0x2c1e4>  // b.hs, b.nlast
   3a128:	b	3a140 <ZSTD_endStream@@Base+0x2c1ec>
   3a12c:	ldr	w8, [x23, w9, uxtw #2]
   3a130:	cmp	w9, #0x2
   3a134:	b.cc	3a140 <ZSTD_endStream@@Base+0x2c1ec>  // b.lo, b.ul, b.last
   3a138:	ldr	w9, [x23, #4]
   3a13c:	str	w9, [x23, #8]
   3a140:	ldr	w9, [x23]
   3a144:	str	w9, [x23, #4]
   3a148:	str	w8, [x23]
   3a14c:	mov	w1, w24
   3a150:	mov	x2, x27
   3a154:	mov	w3, w20
   3a158:	mov	w4, w25
   3a15c:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   3a160:	ldr	x0, [x21, #24]
   3a164:	add	x2, x27, x24
   3a168:	mov	x23, x27
   3a16c:	mov	x1, x27
   3a170:	cmp	x2, x22
   3a174:	b.ls	3a184 <ZSTD_endStream@@Base+0x2c230>  // b.plast
   3a178:	mov	x3, x22
   3a17c:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   3a180:	b	3a1f0 <ZSTD_endStream@@Base+0x2c29c>
   3a184:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3a188:	cmp	w24, #0x11
   3a18c:	b.cc	3a1f0 <ZSTD_endStream@@Base+0x2c29c>  // b.lo, b.ul, b.last
   3a190:	ldur	x8, [x29, #-224]
   3a194:	add	x1, x23, #0x10
   3a198:	mov	x21, x23
   3a19c:	ldr	x22, [x8, #24]
   3a1a0:	add	x0, x22, #0x10
   3a1a4:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3a1a8:	add	x0, x22, #0x20
   3a1ac:	add	x1, x23, #0x20
   3a1b0:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3a1b4:	cmp	w24, #0x31
   3a1b8:	b.cc	3a1f0 <ZSTD_endStream@@Base+0x2c29c>  // b.lo, b.ul, b.last
   3a1bc:	add	x21, x22, x24
   3a1c0:	add	x26, x22, #0x30
   3a1c4:	add	x27, x23, #0x40
   3a1c8:	sub	x1, x27, #0x10
   3a1cc:	mov	x0, x26
   3a1d0:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3a1d4:	add	x0, x26, #0x10
   3a1d8:	mov	x1, x27
   3a1dc:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3a1e0:	add	x26, x26, #0x20
   3a1e4:	cmp	x26, x21
   3a1e8:	add	x27, x27, #0x20
   3a1ec:	b.cc	3a1c8 <ZSTD_endStream@@Base+0x2c274>  // b.lo, b.ul, b.last
   3a1f0:	ldur	x21, [x29, #-224]
   3a1f4:	sub	w8, w25, #0x3
   3a1f8:	cmp	w24, #0x10, lsl #12
   3a1fc:	ldr	x9, [x21, #24]
   3a200:	add	x9, x9, x24
   3a204:	str	x9, [x21, #24]
   3a208:	b.cc	3a220 <ZSTD_endStream@@Base+0x2c2cc>  // b.lo, b.ul, b.last
   3a20c:	ldp	x10, x9, [x21]
   3a210:	sub	x9, x9, x10
   3a214:	lsr	x9, x9, #3
   3a218:	mov	w10, #0x1                   	// #1
   3a21c:	stp	w10, w9, [x21, #72]
   3a220:	ldr	x10, [x21, #8]
   3a224:	add	w11, w20, #0x1
   3a228:	add	w9, w25, w24
   3a22c:	cmp	w8, #0x10, lsl #12
   3a230:	strh	w24, [x10, #4]
   3a234:	str	w11, [x10]
   3a238:	ldp	x26, x22, [x29, #-80]
   3a23c:	mov	x27, x23
   3a240:	mov	w13, #0x2                   	// #2
   3a244:	b.cc	3a08c <ZSTD_endStream@@Base+0x2c138>  // b.lo, b.ul, b.last
   3a248:	ldp	x12, x11, [x21]
   3a24c:	sub	x11, x11, x12
   3a250:	lsr	x11, x11, #3
   3a254:	stp	w13, w11, [x21, #72]
   3a258:	b	3a08c <ZSTD_endStream@@Base+0x2c138>
   3a25c:	ldur	x26, [x29, #-80]
   3a260:	ldur	w16, [x29, #-88]
   3a264:	mov	w8, wzr
   3a268:	mov	x0, x27
   3a26c:	mov	x27, x0
   3a270:	cbz	w8, 3a280 <ZSTD_endStream@@Base+0x2c32c>
   3a274:	ldr	x27, [sp, #280]
   3a278:	cbnz	w25, 36830 <ZSTD_endStream@@Base+0x288dc>
   3a27c:	b	38070 <ZSTD_endStream@@Base+0x2a11c>
   3a280:	ldr	x8, [sp, #112]
   3a284:	ldur	w9, [x29, #-184]
   3a288:	ldr	x10, [sp, #96]
   3a28c:	ldur	x0, [x29, #-160]
   3a290:	mov	x20, xzr
   3a294:	mov	w25, w16
   3a298:	str	w9, [x8, x10, lsl #2]
   3a29c:	ldp	w26, w24, [sp, #124]
   3a2a0:	add	w8, w9, #0x2
   3a2a4:	stur	xzr, [x29, #-88]
   3a2a8:	stur	w8, [x29, #-112]
   3a2ac:	b	3a2c8 <ZSTD_endStream@@Base+0x2c374>
   3a2b0:	add	x9, x9, #0x4
   3a2b4:	str	x9, [sp, #216]
   3a2b8:	ldr	w26, [x9]
   3a2bc:	mov	w9, #0x1                   	// #1
   3a2c0:	mov	x20, x8
   3a2c4:	tbz	w9, #0, 3a410 <ZSTD_endStream@@Base+0x2c4bc>
   3a2c8:	subs	w24, w24, #0x1
   3a2cc:	b.cc	3a410 <ZSTD_endStream@@Base+0x2c4bc>  // b.lo, b.ul, b.last
   3a2d0:	ldr	w8, [sp, #240]
   3a2d4:	cmp	w26, w8
   3a2d8:	b.cc	3a410 <ZSTD_endStream@@Base+0x2c4bc>  // b.lo, b.ul, b.last
   3a2dc:	ldur	x9, [x29, #-88]
   3a2e0:	ldr	x8, [sp, #232]
   3a2e4:	ldur	x2, [x29, #-192]
   3a2e8:	mov	x19, x0
   3a2ec:	cmp	x20, x9
   3a2f0:	add	x21, x8, w26, uxtw
   3a2f4:	csel	x22, x20, x9, cc  // cc = lo, ul, last
   3a2f8:	add	x0, x0, x22
   3a2fc:	add	x1, x21, x22
   3a300:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3a304:	add	x8, x0, x22
   3a308:	cmp	x8, x27
   3a30c:	b.ls	3a374 <ZSTD_endStream@@Base+0x2c420>  // b.plast
   3a310:	ldur	w14, [x29, #-152]
   3a314:	ldur	w12, [x29, #-112]
   3a318:	ldur	x13, [x29, #-176]
   3a31c:	add	w11, w26, w8
   3a320:	sub	w10, w14, w26
   3a324:	cmp	x8, x10
   3a328:	mov	w9, wzr
   3a32c:	sub	w12, w12, w26
   3a330:	add	x13, x13, w25, uxtw #3
   3a334:	csel	w14, w11, w14, hi  // hi = pmore
   3a338:	cmp	x8, #0x1, lsl #12
   3a33c:	add	w25, w25, #0x1
   3a340:	stp	w12, w8, [x13]
   3a344:	stur	w14, [x29, #-152]
   3a348:	b.hi	3a3fc <ZSTD_endStream@@Base+0x2c4a8>  // b.pmore
   3a34c:	ldur	x11, [x29, #-192]
   3a350:	add	x10, x19, x8
   3a354:	mov	x0, x19
   3a358:	mov	x27, x8
   3a35c:	cmp	x10, x11
   3a360:	b.ne	3a378 <ZSTD_endStream@@Base+0x2c424>  // b.any
   3a364:	mov	x27, x8
   3a368:	mov	w24, w9
   3a36c:	mov	x8, x20
   3a370:	b	3a2c0 <ZSTD_endStream@@Base+0x2c36c>
   3a374:	mov	x0, x19
   3a378:	ldrb	w9, [x21, x8]
   3a37c:	ldrb	w10, [x0, x8]
   3a380:	ldr	w11, [sp, #192]
   3a384:	cmp	w9, w10
   3a388:	ldr	x9, [sp, #200]
   3a38c:	and	w11, w26, w11
   3a390:	lsl	w11, w11, #1
   3a394:	add	x9, x9, w11, uxtw #2
   3a398:	b.cs	3a3c0 <ZSTD_endStream@@Base+0x2c46c>  // b.hs, b.nlast
   3a39c:	ldr	w10, [sp, #184]
   3a3a0:	cmp	w26, w10
   3a3a4:	ldr	x10, [sp, #216]
   3a3a8:	str	w26, [x10]
   3a3ac:	b.hi	3a2b0 <ZSTD_endStream@@Base+0x2c35c>  // b.pmore
   3a3b0:	sub	x10, x29, #0x40
   3a3b4:	mov	w9, wzr
   3a3b8:	str	x10, [sp, #216]
   3a3bc:	b	3a2c0 <ZSTD_endStream@@Base+0x2c36c>
   3a3c0:	ldr	w10, [sp, #184]
   3a3c4:	cmp	w26, w10
   3a3c8:	ldr	x10, [sp, #208]
   3a3cc:	str	w26, [x10]
   3a3d0:	b.ls	3a3e4 <ZSTD_endStream@@Base+0x2c490>  // b.plast
   3a3d4:	str	x9, [sp, #208]
   3a3d8:	stur	x8, [x29, #-88]
   3a3dc:	mov	x8, x20
   3a3e0:	b	3a2b8 <ZSTD_endStream@@Base+0x2c364>
   3a3e4:	sub	x10, x29, #0x40
   3a3e8:	mov	w9, wzr
   3a3ec:	str	x10, [sp, #208]
   3a3f0:	stur	x8, [x29, #-88]
   3a3f4:	mov	x8, x20
   3a3f8:	b	3a2c0 <ZSTD_endStream@@Base+0x2c36c>
   3a3fc:	mov	x27, x8
   3a400:	mov	w24, w9
   3a404:	mov	x8, x20
   3a408:	mov	x0, x19
   3a40c:	b	3a2c0 <ZSTD_endStream@@Base+0x2c36c>
   3a410:	ldr	x8, [sp, #208]
   3a414:	str	wzr, [x8]
   3a418:	ldr	x8, [sp, #216]
   3a41c:	str	wzr, [x8]
   3a420:	cbz	w24, 3a588 <ZSTD_endStream@@Base+0x2c634>
   3a424:	ldr	w1, [sp, #72]
   3a428:	mov	w2, #0x3                   	// #3
   3a42c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3a430:	ldr	x9, [sp, #88]
   3a434:	mov	x22, xzr
   3a438:	mov	x19, xzr
   3a43c:	ldr	x8, [x9, #48]
   3a440:	ldr	w20, [x8, x0, lsl #2]
   3a444:	ldr	x8, [x9, #64]
   3a448:	ldr	x9, [sp, #232]
   3a44c:	stur	x8, [x29, #-120]
   3a450:	ldr	x8, [sp, #80]
   3a454:	and	x8, x8, #0xffffffff
   3a458:	stur	x8, [x29, #-88]
   3a45c:	ldr	x8, [sp, #152]
   3a460:	add	x26, x9, x8
   3a464:	b	3a4a4 <ZSTD_endStream@@Base+0x2c550>
   3a468:	ldrb	w8, [x10, x9]
   3a46c:	ldur	x10, [x29, #-160]
   3a470:	ldr	w11, [sp, #144]
   3a474:	ldur	x12, [x29, #-120]
   3a478:	ldrb	w10, [x10, x9]
   3a47c:	and	w11, w20, w11
   3a480:	lsl	w11, w11, #1
   3a484:	add	x11, x12, w11, uxtw #2
   3a488:	cmp	w8, w10
   3a48c:	cset	w8, cc  // cc = lo, ul, last
   3a490:	ldr	w20, [x11, w8, uxtw #2]
   3a494:	csel	x22, x22, x9, cc  // cc = lo, ul, last
   3a498:	csel	x19, x9, x19, cc  // cc = lo, ul, last
   3a49c:	mov	w8, #0x1                   	// #1
   3a4a0:	tbz	w8, #0, 3a588 <ZSTD_endStream@@Base+0x2c634>
   3a4a4:	subs	w24, w24, #0x1
   3a4a8:	b.cc	3a588 <ZSTD_endStream@@Base+0x2c634>  // b.lo, b.ul, b.last
   3a4ac:	ldr	w8, [sp, #180]
   3a4b0:	cmp	w20, w8
   3a4b4:	b.ls	3a588 <ZSTD_endStream@@Base+0x2c634>  // b.plast
   3a4b8:	ldr	x8, [sp, #168]
   3a4bc:	mov	w21, w20
   3a4c0:	ldur	x2, [x29, #-192]
   3a4c4:	ldp	x3, x4, [sp, #248]
   3a4c8:	add	x28, x8, x21
   3a4cc:	ldur	x8, [x29, #-160]
   3a4d0:	cmp	x19, x22
   3a4d4:	csel	x23, x19, x22, cc  // cc = lo, ul, last
   3a4d8:	add	x1, x28, x23
   3a4dc:	add	x0, x8, x23
   3a4e0:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3a4e4:	ldur	x11, [x29, #-88]
   3a4e8:	add	x9, x0, x23
   3a4ec:	add	x10, x9, x21
   3a4f0:	add	x8, x26, x21
   3a4f4:	cmp	x10, x11
   3a4f8:	csel	x10, x28, x8, cc  // cc = lo, ul, last
   3a4fc:	cmp	x9, x27
   3a500:	b.ls	3a56c <ZSTD_endStream@@Base+0x2c618>  // b.plast
   3a504:	ldr	x11, [sp, #152]
   3a508:	ldp	x12, x23, [x29, #-176]
   3a50c:	ldur	w15, [x29, #-152]
   3a510:	ldur	w16, [x29, #-112]
   3a514:	add	w11, w20, w11
   3a518:	add	x12, x12, w25, uxtw #3
   3a51c:	sub	w13, w15, w11
   3a520:	add	w14, w11, w9
   3a524:	sub	w11, w16, w11
   3a528:	stp	w11, w9, [x12]
   3a52c:	ldur	w28, [x29, #-100]
   3a530:	cmp	x9, x13
   3a534:	mov	w8, wzr
   3a538:	csel	w15, w14, w15, hi  // hi = pmore
   3a53c:	cmp	x9, #0x1, lsl #12
   3a540:	add	w25, w25, #0x1
   3a544:	stur	w15, [x29, #-152]
   3a548:	b.hi	3a564 <ZSTD_endStream@@Base+0x2c610>  // b.pmore
   3a54c:	ldur	x11, [x29, #-160]
   3a550:	ldur	x12, [x29, #-192]
   3a554:	mov	x27, x9
   3a558:	add	x11, x11, x9
   3a55c:	cmp	x11, x12
   3a560:	b.ne	3a574 <ZSTD_endStream@@Base+0x2c620>  // b.any
   3a564:	mov	x27, x9
   3a568:	b	3a4a0 <ZSTD_endStream@@Base+0x2c54c>
   3a56c:	ldur	x23, [x29, #-168]
   3a570:	ldur	w28, [x29, #-100]
   3a574:	ldr	w8, [sp, #160]
   3a578:	cmp	w20, w8
   3a57c:	b.hi	3a468 <ZSTD_endStream@@Base+0x2c514>  // b.pmore
   3a580:	mov	w8, wzr
   3a584:	b	3a4a0 <ZSTD_endStream@@Base+0x2c54c>
   3a588:	ldur	w8, [x29, #-152]
   3a58c:	ldp	x26, x22, [x29, #-80]
   3a590:	ldur	w24, [x29, #-196]
   3a594:	ldur	x20, [x29, #-208]
   3a598:	sub	w8, w8, #0x8
   3a59c:	str	w8, [x22, #36]
   3a5a0:	ldr	x27, [sp, #280]
   3a5a4:	cbnz	w25, 36830 <ZSTD_endStream@@Base+0x288dc>
   3a5a8:	b	38070 <ZSTD_endStream@@Base+0x2a11c>
   3a5ac:	ldur	w9, [x29, #-120]
   3a5b0:	add	w8, w19, #0x2
   3a5b4:	cmp	x0, w9, uxtw
   3a5b8:	ldur	x9, [x29, #-176]
   3a5bc:	stp	w8, w0, [x9]
   3a5c0:	b.hi	3a5e0 <ZSTD_endStream@@Base+0x2c68c>  // b.pmore
   3a5c4:	ldur	x9, [x29, #-192]
   3a5c8:	add	x8, x21, x0
   3a5cc:	cmp	x8, x9
   3a5d0:	b.eq	3a5e0 <ZSTD_endStream@@Base+0x2c68c>  // b.none
   3a5d4:	mov	w8, wzr
   3a5d8:	mov	w16, #0x1                   	// #1
   3a5dc:	b	3a5f8 <ZSTD_endStream@@Base+0x2c6a4>
   3a5e0:	ldur	w8, [x29, #-184]
   3a5e4:	mov	w16, #0x1                   	// #1
   3a5e8:	mov	w25, #0x1                   	// #1
   3a5ec:	add	w9, w8, #0x1
   3a5f0:	mov	w8, #0x1                   	// #1
   3a5f4:	str	w9, [x22, #36]
   3a5f8:	ldur	x26, [x29, #-80]
   3a5fc:	mov	x27, x0
   3a600:	cbnz	w8, 3a26c <ZSTD_endStream@@Base+0x2c318>
   3a604:	b	3a264 <ZSTD_endStream@@Base+0x2c310>
   3a608:	ldur	x8, [x29, #-192]
   3a60c:	sub	x0, x8, x27
   3a610:	add	sp, sp, #0x230
   3a614:	ldp	x20, x19, [sp, #80]
   3a618:	ldp	x22, x21, [sp, #64]
   3a61c:	ldp	x24, x23, [sp, #48]
   3a620:	ldp	x26, x25, [sp, #32]
   3a624:	ldp	x28, x27, [sp, #16]
   3a628:	ldp	x29, x30, [sp], #96
   3a62c:	ret
   3a630:	stp	x29, x30, [sp, #-96]!
   3a634:	stp	x28, x27, [sp, #16]
   3a638:	stp	x26, x25, [sp, #32]
   3a63c:	stp	x24, x23, [sp, #48]
   3a640:	stp	x22, x21, [sp, #64]
   3a644:	stp	x20, x19, [sp, #80]
   3a648:	mov	x29, sp
   3a64c:	sub	sp, sp, #0x1f0
   3a650:	ldr	w12, [x0, #36]
   3a654:	ldr	x8, [x0, #8]
   3a658:	ldr	w9, [x0, #24]
   3a65c:	stur	x1, [x29, #-192]
   3a660:	ldp	w11, w10, [x0, #200]
   3a664:	stur	w12, [x29, #-12]
   3a668:	add	x19, x8, x9
   3a66c:	ldp	x22, x8, [x0, #104]
   3a670:	add	x24, x0, #0x48
   3a674:	mov	w13, #0xfff                 	// #4095
   3a678:	cmp	w10, #0xfff
   3a67c:	mov	x27, x3
   3a680:	mov	x21, x2
   3a684:	mov	x23, x0
   3a688:	add	x20, x3, x4
   3a68c:	csel	w26, w10, w13, cc  // cc = lo, ul, last
   3a690:	stur	x8, [x29, #-96]
   3a694:	cmp	w11, #0x3
   3a698:	mov	w8, #0x3                   	// #3
   3a69c:	mov	x0, x24
   3a6a0:	mov	x1, x3
   3a6a4:	mov	x2, x4
   3a6a8:	mov	w3, wzr
   3a6ac:	sub	x25, x20, #0x8
   3a6b0:	cinc	w28, w8, ne  // ne = any
   3a6b4:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   3a6b8:	cmp	x19, x27
   3a6bc:	mov	x8, x25
   3a6c0:	cinc	x25, x27, eq  // eq = none
   3a6c4:	cmp	x25, x8
   3a6c8:	stur	x20, [x29, #-184]
   3a6cc:	b.cs	3db78 <ZSTD_endStream@@Base+0x2fc24>  // b.hs, b.nlast
   3a6d0:	stur	x8, [x29, #-232]
   3a6d4:	sub	w8, w28, #0x1
   3a6d8:	str	w26, [sp, #124]
   3a6dc:	str	x8, [sp, #112]
   3a6e0:	sub	x8, x29, #0x40
   3a6e4:	ldur	x26, [x29, #-96]
   3a6e8:	add	x8, x8, #0x10
   3a6ec:	sub	x9, x20, #0x20
   3a6f0:	str	x8, [sp, #104]
   3a6f4:	stur	x9, [x29, #-224]
   3a6f8:	mov	w9, w28
   3a6fc:	stur	x22, [x29, #-176]
   3a700:	stur	x24, [x29, #-216]
   3a704:	str	x9, [sp, #32]
   3a708:	add	x24, x26, #0x10
   3a70c:	add	x9, x26, #0x1c
   3a710:	mov	x22, x23
   3a714:	mov	w23, #0x1c                  	// #28
   3a718:	str	w28, [sp, #236]
   3a71c:	stur	x9, [x29, #-136]
   3a720:	stur	x22, [x29, #-72]
   3a724:	stur	x24, [x29, #-200]
   3a728:	stur	x21, [x29, #-168]
   3a72c:	b	3a74c <ZSTD_endStream@@Base+0x2c7f8>
   3a730:	ldur	x0, [x29, #-216]
   3a734:	mov	w1, wzr
   3a738:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   3a73c:	ldur	x8, [x29, #-232]
   3a740:	ldur	x25, [x29, #-144]
   3a744:	cmp	x25, x8
   3a748:	b.cs	3db78 <ZSTD_endStream@@Base+0x2fc24>  // b.hs, b.nlast
   3a74c:	ldr	x19, [x22, #8]
   3a750:	ldr	w21, [x22, #36]
   3a754:	subs	w8, w25, w27
   3a758:	stur	w8, [x29, #-80]
   3a75c:	cset	w8, eq  // eq = none
   3a760:	stur	w8, [x29, #-152]
   3a764:	add	x8, x19, x21
   3a768:	cmp	x8, x25
   3a76c:	stur	w20, [x29, #-116]
   3a770:	stur	x25, [x29, #-144]
   3a774:	str	x27, [sp, #224]
   3a778:	b.ls	3a9ac <ZSTD_endStream@@Base+0x2ca58>  // b.plast
   3a77c:	ldur	x21, [x29, #-168]
   3a780:	mov	w19, wzr
   3a784:	cbz	w19, 3bab4 <ZSTD_endStream@@Base+0x2db60>
   3a788:	mov	x8, xzr
   3a78c:	ldr	w9, [x21, x8]
   3a790:	str	w9, [x24, x8]
   3a794:	add	x8, x8, #0x4
   3a798:	cmp	x8, #0xc
   3a79c:	b.ne	3a78c <ZSTD_endStream@@Base+0x2c838>  // b.any
   3a7a0:	ldur	w1, [x29, #-80]
   3a7a4:	mov	x0, x27
   3a7a8:	mov	w3, wzr
   3a7ac:	stp	wzr, w1, [x26, #8]
   3a7b0:	ldur	x2, [x29, #-216]
   3a7b4:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   3a7b8:	ldur	x10, [x29, #-176]
   3a7bc:	sub	w9, w19, #0x1
   3a7c0:	str	w0, [x26]
   3a7c4:	mov	w20, w0
   3a7c8:	add	x9, x10, w9, uxtw #3
   3a7cc:	ldr	w21, [x9, #4]
   3a7d0:	ldr	w10, [sp, #124]
   3a7d4:	mov	w8, wzr
   3a7d8:	mov	w0, wzr
   3a7dc:	cmp	w21, w10
   3a7e0:	b.ls	3a828 <ZSTD_endStream@@Base+0x2c8d4>  // b.plast
   3a7e4:	ldr	w11, [x9]
   3a7e8:	ldr	w10, [sp, #204]
   3a7ec:	ldur	w25, [x29, #-80]
   3a7f0:	ldur	w8, [x29, #-16]
   3a7f4:	ldur	x9, [x29, #-24]
   3a7f8:	stp	w10, w11, [x29, #-64]
   3a7fc:	ldr	x10, [sp, #104]
   3a800:	sub	x0, x29, #0x40
   3a804:	stp	w21, w25, [x29, #-56]
   3a808:	str	w11, [sp, #220]
   3a80c:	str	w8, [x10, #8]
   3a810:	str	x9, [x10]
   3a814:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   3a818:	mov	w8, #0x7                   	// #7
   3a81c:	stur	wzr, [x29, #-116]
   3a820:	str	w21, [sp, #248]
   3a824:	str	w25, [sp, #200]
   3a828:	cbnz	w8, 3acb4 <ZSTD_endStream@@Base+0x2cd60>
   3a82c:	ldur	x1, [x29, #-216]
   3a830:	mov	w0, wzr
   3a834:	mov	w2, wzr
   3a838:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3a83c:	ldur	x8, [x29, #-136]
   3a840:	ldr	x9, [sp, #32]
   3a844:	mov	w21, #0x1                   	// #1
   3a848:	mov	w10, #0x40000000            	// #1073741824
   3a84c:	add	x21, x21, #0x1
   3a850:	cmp	x21, x9
   3a854:	str	w10, [x8], #28
   3a858:	b.cc	3a84c <ZSTD_endStream@@Base+0x2c8f8>  // b.lo, b.ul, b.last
   3a85c:	add	w8, w0, w20
   3a860:	mov	x9, xzr
   3a864:	stur	w8, [x29, #-88]
   3a868:	mov	w8, w19
   3a86c:	stur	x8, [x29, #-160]
   3a870:	b	3a888 <ZSTD_endStream@@Base+0x2c934>
   3a874:	ldur	x9, [x29, #-128]
   3a878:	ldur	x8, [x29, #-160]
   3a87c:	add	x9, x9, #0x1
   3a880:	cmp	x9, x8
   3a884:	b.cs	3aca4 <ZSTD_endStream@@Base+0x2cd50>  // b.hs, b.nlast
   3a888:	ldp	x8, x0, [x29, #-176]
   3a88c:	stur	x9, [x29, #-128]
   3a890:	ldur	w2, [x29, #-152]
   3a894:	add	x8, x8, x9, lsl #3
   3a898:	ldp	w20, w28, [x8]
   3a89c:	mov	w1, w20
   3a8a0:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   3a8a4:	cmp	w21, w28
   3a8a8:	b.hi	3a874 <ZSTD_endStream@@Base+0x2c920>  // b.pmore
   3a8ac:	mov	x24, x0
   3a8b0:	add	w0, w20, #0x1
   3a8b4:	mov	x27, x1
   3a8b8:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   3a8bc:	mov	w8, #0xffffda33            	// #-9677
   3a8c0:	add	w8, w8, w0, lsl #9
   3a8c4:	cmp	w0, #0x13
   3a8c8:	mov	w10, #0x33                  	// #51
   3a8cc:	lsl	w9, w0, #8
   3a8d0:	csel	w8, w8, w10, hi  // hi = pmore
   3a8d4:	mov	w19, w0
   3a8d8:	stur	w8, [x29, #-104]
   3a8dc:	add	w8, w9, #0x1, lsl #12
   3a8e0:	stur	w8, [x29, #-112]
   3a8e4:	b	3a988 <ZSTD_endStream@@Base+0x2ca34>
   3a8e8:	ldr	x8, [x22, #96]
   3a8ec:	ldur	x9, [x29, #-72]
   3a8f0:	ldr	w0, [x8, x19, lsl #2]
   3a8f4:	ldr	w22, [x9, #148]
   3a8f8:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   3a8fc:	mov	w26, w0
   3a900:	mov	w0, w25
   3a904:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   3a908:	ldur	x9, [x29, #-72]
   3a90c:	mov	w8, w0
   3a910:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   3a914:	lsl	x8, x8, #2
   3a918:	ldr	x9, [x9, #88]
   3a91c:	add	x10, x10, #0xca8
   3a920:	ldr	w25, [x10, x8]
   3a924:	ldur	x10, [x29, #-72]
   3a928:	ldr	w0, [x9, x8]
   3a92c:	ldr	w23, [x10, #144]
   3a930:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   3a934:	ldur	w9, [x29, #-104]
   3a938:	add	w8, w25, w19
   3a93c:	add	w9, w22, w9
   3a940:	ldur	x22, [x29, #-72]
   3a944:	sub	w9, w9, w26
   3a948:	ldur	x26, [x29, #-96]
   3a94c:	add	w9, w9, w23
   3a950:	add	w8, w9, w8, lsl #8
   3a954:	mov	w23, #0x1c                  	// #28
   3a958:	sub	w8, w8, w0
   3a95c:	ldur	w9, [x29, #-88]
   3a960:	ldur	w10, [x29, #-80]
   3a964:	add	w8, w9, w8
   3a968:	umaddl	x9, w21, w23, x26
   3a96c:	stp	w21, w10, [x9, #8]
   3a970:	add	w21, w21, #0x1
   3a974:	cmp	w21, w28
   3a978:	stp	w8, w20, [x9]
   3a97c:	str	x24, [x9, #16]
   3a980:	str	w27, [x9, #24]
   3a984:	b.hi	3a874 <ZSTD_endStream@@Base+0x2c920>  // b.pmore
   3a988:	ldr	w8, [x22, #152]
   3a98c:	sub	w25, w21, #0x3
   3a990:	cmp	w8, #0x1
   3a994:	b.ne	3a8e8 <ZSTD_endStream@@Base+0x2c994>  // b.any
   3a998:	mov	w0, w25
   3a99c:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   3a9a0:	ldur	w8, [x29, #-112]
   3a9a4:	add	w8, w8, w0
   3a9a8:	b	3a95c <ZSTD_endStream@@Base+0x2ca08>
   3a9ac:	ldr	w20, [x22, #200]
   3a9b0:	ldur	x23, [x29, #-184]
   3a9b4:	mov	x24, x22
   3a9b8:	sub	w22, w25, w19
   3a9bc:	cmp	w21, w22
   3a9c0:	b.cs	3a9e8 <ZSTD_endStream@@Base+0x2ca94>  // b.hs, b.nlast
   3a9c4:	add	x1, x19, w21, uxtw
   3a9c8:	mov	w4, #0x1                   	// #1
   3a9cc:	mov	x0, x24
   3a9d0:	mov	x2, x23
   3a9d4:	mov	w3, w20
   3a9d8:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   3a9dc:	add	w21, w0, w21
   3a9e0:	cmp	w21, w22
   3a9e4:	b.cc	3a9c4 <ZSTD_endStream@@Base+0x2ca70>  // b.lo, b.ul, b.last
   3a9e8:	sub	w8, w20, #0x6
   3a9ec:	cmp	w8, #0x2
   3a9f0:	mov	x21, x24
   3a9f4:	str	w22, [x24, #36]
   3a9f8:	b.cc	3acc4 <ZSTD_endStream@@Base+0x2cd70>  // b.lo, b.ul, b.last
   3a9fc:	cmp	w20, #0x5
   3aa00:	mov	w9, #0xfff                 	// #4095
   3aa04:	mov	w23, #0x1c                  	// #28
   3aa08:	b.eq	3af60 <ZSTD_endStream@@Base+0x2d00c>  // b.none
   3aa0c:	cmp	w20, #0x3
   3aa10:	b.ne	3b1fc <ZSTD_endStream@@Base+0x2d2a8>  // b.any
   3aa14:	ldr	w8, [x21, #204]
   3aa18:	ldr	x20, [x21, #8]
   3aa1c:	ldr	w1, [x21, #192]
   3aa20:	ldr	x19, [x21, #48]
   3aa24:	cmp	w8, #0xfff
   3aa28:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3aa2c:	mov	w2, #0x3                   	// #3
   3aa30:	mov	x0, x25
   3aa34:	stur	w8, [x29, #-128]
   3aa38:	sub	w26, w25, w20
   3aa3c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3aa40:	stp	x0, x19, [sp, #72]
   3aa44:	ldr	w8, [x19, x0, lsl #2]
   3aa48:	ldr	x9, [x21, #64]
   3aa4c:	ldr	x22, [x21, #16]
   3aa50:	ldr	w28, [x21, #24]
   3aa54:	str	w8, [sp, #100]
   3aa58:	ldp	w2, w8, [x21, #184]
   3aa5c:	str	x9, [sp, #160]
   3aa60:	mov	w9, #0xffffffff            	// #-1
   3aa64:	mov	x0, x21
   3aa68:	sub	w8, w8, #0x1
   3aa6c:	lsl	w19, w9, w8
   3aa70:	mvn	w8, w19
   3aa74:	str	w8, [sp, #136]
   3aa78:	subs	w8, w26, w8
   3aa7c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3aa80:	mov	w1, w26
   3aa84:	str	w8, [sp, #128]
   3aa88:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3aa8c:	sub	w10, w26, w28
   3aa90:	cmp	w0, #0x0
   3aa94:	stur	w10, [x29, #-88]
   3aa98:	sub	w10, w26, w0
   3aa9c:	stur	w10, [x29, #-160]
   3aaa0:	csinc	w10, w0, wzr, ne  // ne = any
   3aaa4:	str	w10, [sp, #192]
   3aaa8:	ldur	w10, [x29, #-80]
   3aaac:	add	x8, x22, x28
   3aab0:	str	x8, [sp, #184]
   3aab4:	add	x8, x20, x28
   3aab8:	cmp	w10, #0x0
   3aabc:	ldr	x10, [sp, #160]
   3aac0:	stp	x20, x8, [sp, #168]
   3aac4:	bic	w8, w26, w19
   3aac8:	add	w9, w26, #0x9
   3aacc:	lsl	w8, w8, #1
   3aad0:	str	w9, [sp, #208]
   3aad4:	ldr	w9, [x21, #196]
   3aad8:	add	x10, x10, w8, uxtw #2
   3aadc:	mov	w8, #0x3                   	// #3
   3aae0:	cinc	x8, x8, eq  // eq = none
   3aae4:	stur	x28, [x29, #-112]
   3aae8:	ldr	w28, [sp, #100]
   3aaec:	stur	w26, [x29, #-208]
   3aaf0:	stur	x8, [x29, #-104]
   3aaf4:	add	x8, x10, #0x4
   3aaf8:	ldr	x26, [sp, #112]
   3aafc:	ldur	w20, [x29, #-116]
   3ab00:	stp	x8, x10, [sp, #144]
   3ab04:	mov	w8, #0x1                   	// #1
   3ab08:	lsl	w8, w8, w9
   3ab0c:	mov	w24, wzr
   3ab10:	mov	w27, wzr
   3ab14:	stur	x22, [x29, #-240]
   3ab18:	cset	w22, eq  // eq = none
   3ab1c:	str	w8, [sp, #88]
   3ab20:	add	x8, x25, #0x3
   3ab24:	str	x8, [sp, #240]
   3ab28:	cmp	x22, #0x3
   3ab2c:	b.ne	3ab40 <ZSTD_endStream@@Base+0x2cbec>  // b.any
   3ab30:	ldur	x8, [x29, #-168]
   3ab34:	ldr	w8, [x8]
   3ab38:	sub	w19, w8, #0x1
   3ab3c:	b	3ab48 <ZSTD_endStream@@Base+0x2cbf4>
   3ab40:	ldur	x8, [x29, #-168]
   3ab44:	ldr	w19, [x8, x22, lsl #2]
   3ab48:	ldur	w9, [x29, #-88]
   3ab4c:	sub	w8, w19, #0x1
   3ab50:	cmp	w8, w9
   3ab54:	b.cs	3ab9c <ZSTD_endStream@@Base+0x2cc48>  // b.hs, b.nlast
   3ab58:	ldur	x25, [x29, #-144]
   3ab5c:	mov	w1, #0x3                   	// #3
   3ab60:	mov	x0, x25
   3ab64:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3ab68:	mov	w19, w19
   3ab6c:	mov	w20, w0
   3ab70:	sub	x0, x25, x19
   3ab74:	mov	w1, #0x3                   	// #3
   3ab78:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3ab7c:	cmp	w20, w0
   3ab80:	b.ne	3ac10 <ZSTD_endStream@@Base+0x2ccbc>  // b.any
   3ab84:	ldr	x0, [sp, #240]
   3ab88:	ldur	x2, [x29, #-184]
   3ab8c:	neg	x8, x19
   3ab90:	add	x1, x0, x8
   3ab94:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3ab98:	b	3ac08 <ZSTD_endStream@@Base+0x2ccb4>
   3ab9c:	ldur	w9, [x29, #-160]
   3aba0:	cmp	w8, w9
   3aba4:	mov	w8, wzr
   3aba8:	b.cs	3ac18 <ZSTD_endStream@@Base+0x2ccc4>  // b.hs, b.nlast
   3abac:	ldur	w9, [x29, #-208]
   3abb0:	ldur	x11, [x29, #-112]
   3abb4:	sub	w9, w9, w19
   3abb8:	mvn	w10, w9
   3abbc:	add	w10, w11, w10
   3abc0:	cmp	w10, #0x3
   3abc4:	b.cc	3ac18 <ZSTD_endStream@@Base+0x2ccc4>  // b.lo, b.ul, b.last
   3abc8:	ldur	x8, [x29, #-240]
   3abcc:	ldur	x0, [x29, #-144]
   3abd0:	mov	w1, #0x3                   	// #3
   3abd4:	add	x20, x8, w9, uxtw
   3abd8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3abdc:	mov	w25, w0
   3abe0:	mov	w1, #0x3                   	// #3
   3abe4:	mov	x0, x20
   3abe8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3abec:	cmp	w25, w0
   3abf0:	b.ne	3ac10 <ZSTD_endStream@@Base+0x2ccbc>  // b.any
   3abf4:	ldr	x0, [sp, #240]
   3abf8:	ldur	x2, [x29, #-184]
   3abfc:	ldp	x4, x3, [sp, #176]
   3ac00:	add	x1, x20, #0x3
   3ac04:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3ac08:	add	w8, w0, #0x3
   3ac0c:	b	3ac14 <ZSTD_endStream@@Base+0x2ccc0>
   3ac10:	mov	w8, wzr
   3ac14:	ldur	w20, [x29, #-116]
   3ac18:	mov	w9, w8
   3ac1c:	cmp	x26, x9
   3ac20:	b.cs	3ac64 <ZSTD_endStream@@Base+0x2cd10>  // b.hs, b.nlast
   3ac24:	ldur	x10, [x29, #-176]
   3ac28:	ldur	w11, [x29, #-128]
   3ac2c:	add	x10, x10, w27, uxtw #3
   3ac30:	add	w27, w27, #0x1
   3ac34:	cmp	w8, w11
   3ac38:	stp	w24, w8, [x10]
   3ac3c:	mov	w8, #0x1                   	// #1
   3ac40:	b.hi	3ac94 <ZSTD_endStream@@Base+0x2cd40>  // b.pmore
   3ac44:	ldur	x10, [x29, #-144]
   3ac48:	ldur	x11, [x29, #-184]
   3ac4c:	mov	x26, x9
   3ac50:	mov	w19, w27
   3ac54:	add	x10, x10, x9
   3ac58:	cmp	x10, x11
   3ac5c:	b.ne	3ac68 <ZSTD_endStream@@Base+0x2cd14>  // b.any
   3ac60:	b	3ac74 <ZSTD_endStream@@Base+0x2cd20>
   3ac64:	mov	x9, x26
   3ac68:	mov	w8, wzr
   3ac6c:	mov	x26, x9
   3ac70:	mov	w19, w21
   3ac74:	cbnz	w8, 3b69c <ZSTD_endStream@@Base+0x2d748>
   3ac78:	ldur	x8, [x29, #-104]
   3ac7c:	add	x22, x22, #0x1
   3ac80:	add	w24, w24, #0x1
   3ac84:	mov	w21, w19
   3ac88:	cmp	x22, x8
   3ac8c:	b.cc	3ab28 <ZSTD_endStream@@Base+0x2cbd4>  // b.lo, b.ul, b.last
   3ac90:	b	3b698 <ZSTD_endStream@@Base+0x2d744>
   3ac94:	mov	x26, x9
   3ac98:	mov	w19, w27
   3ac9c:	cbz	w8, 3ac78 <ZSTD_endStream@@Base+0x2cd24>
   3aca0:	b	3b69c <ZSTD_endStream@@Base+0x2d748>
   3aca4:	ldr	x27, [sp, #224]
   3aca8:	ldur	x24, [x29, #-200]
   3acac:	mov	w8, wzr
   3acb0:	sub	w0, w21, #0x1
   3acb4:	ldur	w20, [x29, #-116]
   3acb8:	cmp	w8, #0x7
   3acbc:	b.ne	3bad0 <ZSTD_endStream@@Base+0x2db7c>  // b.any
   3acc0:	b	3d550 <ZSTD_endStream@@Base+0x2f5fc>
   3acc4:	ldr	w8, [x21, #204]
   3acc8:	ldr	x20, [x21, #8]
   3accc:	ldr	w1, [x21, #192]
   3acd0:	ldr	x19, [x21, #48]
   3acd4:	cmp	w8, #0xfff
   3acd8:	mov	w9, #0xfff                 	// #4095
   3acdc:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3ace0:	mov	w2, #0x6                   	// #6
   3ace4:	mov	x0, x25
   3ace8:	stur	w8, [x29, #-160]
   3acec:	sub	w28, w25, w20
   3acf0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3acf4:	stp	x0, x19, [sp, #80]
   3acf8:	ldp	w2, w8, [x21, #184]
   3acfc:	mov	w9, #0xffffffff            	// #-1
   3ad00:	ldr	w24, [x19, x0, lsl #2]
   3ad04:	ldr	x23, [x21, #64]
   3ad08:	sub	w8, w8, #0x1
   3ad0c:	lsl	w19, w9, w8
   3ad10:	ldr	x22, [x21, #16]
   3ad14:	ldr	w27, [x21, #24]
   3ad18:	mvn	w8, w19
   3ad1c:	str	w8, [sp, #100]
   3ad20:	subs	w8, w28, w8
   3ad24:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3ad28:	mov	x0, x21
   3ad2c:	mov	w1, w28
   3ad30:	str	w8, [sp, #128]
   3ad34:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3ad38:	sub	w10, w28, w27
   3ad3c:	cmp	w0, #0x0
   3ad40:	stur	w10, [x29, #-88]
   3ad44:	sub	w10, w28, w0
   3ad48:	stur	w10, [x29, #-208]
   3ad4c:	csinc	w10, w0, wzr, ne  // ne = any
   3ad50:	add	x8, x22, x27
   3ad54:	str	w10, [sp, #184]
   3ad58:	ldur	w10, [x29, #-80]
   3ad5c:	stp	x8, x20, [sp, #168]
   3ad60:	add	x8, x20, x27
   3ad64:	str	x8, [sp, #160]
   3ad68:	bic	w8, w28, w19
   3ad6c:	add	w9, w28, #0x9
   3ad70:	lsl	w8, w8, #1
   3ad74:	str	w9, [sp, #208]
   3ad78:	ldr	w9, [x21, #196]
   3ad7c:	cmp	w10, #0x0
   3ad80:	add	x10, x23, w8, uxtw #2
   3ad84:	mov	w8, #0x3                   	// #3
   3ad88:	cinc	x8, x8, eq  // eq = none
   3ad8c:	stur	x8, [x29, #-104]
   3ad90:	add	x8, x10, #0x4
   3ad94:	stp	x8, x10, [sp, #144]
   3ad98:	mov	w8, #0x1                   	// #1
   3ad9c:	lsl	w8, w8, w9
   3ada0:	stur	w8, [x29, #-128]
   3ada4:	add	x8, x25, #0x4
   3ada8:	mov	x25, x27
   3adac:	ldr	x27, [sp, #112]
   3adb0:	ldur	w20, [x29, #-116]
   3adb4:	mov	w15, w24
   3adb8:	mov	w24, wzr
   3adbc:	mov	w26, wzr
   3adc0:	stur	x22, [x29, #-240]
   3adc4:	str	w28, [sp, #240]
   3adc8:	cset	w22, eq  // eq = none
   3adcc:	str	x23, [sp, #136]
   3add0:	mov	w23, #0x1c                  	// #28
   3add4:	mov	w28, w15
   3add8:	str	x8, [sp, #192]
   3addc:	stur	x25, [x29, #-112]
   3ade0:	cmp	x22, #0x3
   3ade4:	b.ne	3adf8 <ZSTD_endStream@@Base+0x2cea4>  // b.any
   3ade8:	ldur	x8, [x29, #-168]
   3adec:	ldr	w8, [x8]
   3adf0:	sub	w19, w8, #0x1
   3adf4:	b	3ae00 <ZSTD_endStream@@Base+0x2ceac>
   3adf8:	ldur	x8, [x29, #-168]
   3adfc:	ldr	w19, [x8, x22, lsl #2]
   3ae00:	ldur	w9, [x29, #-88]
   3ae04:	sub	w8, w19, #0x1
   3ae08:	cmp	w8, w9
   3ae0c:	b.cs	3ae54 <ZSTD_endStream@@Base+0x2cf00>  // b.hs, b.nlast
   3ae10:	ldur	x25, [x29, #-144]
   3ae14:	mov	w1, #0x4                   	// #4
   3ae18:	mov	x0, x25
   3ae1c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3ae20:	mov	w19, w19
   3ae24:	mov	w20, w0
   3ae28:	sub	x0, x25, x19
   3ae2c:	mov	w1, #0x4                   	// #4
   3ae30:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3ae34:	cmp	w20, w0
   3ae38:	b.ne	3aec4 <ZSTD_endStream@@Base+0x2cf70>  // b.any
   3ae3c:	ldr	x0, [sp, #192]
   3ae40:	ldur	x2, [x29, #-184]
   3ae44:	neg	x8, x19
   3ae48:	add	x1, x0, x8
   3ae4c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3ae50:	b	3aebc <ZSTD_endStream@@Base+0x2cf68>
   3ae54:	ldur	w9, [x29, #-208]
   3ae58:	cmp	w8, w9
   3ae5c:	mov	w8, wzr
   3ae60:	b.cs	3aed4 <ZSTD_endStream@@Base+0x2cf80>  // b.hs, b.nlast
   3ae64:	ldr	w9, [sp, #240]
   3ae68:	sub	w9, w9, w19
   3ae6c:	mvn	w10, w9
   3ae70:	add	w10, w25, w10
   3ae74:	cmp	w10, #0x3
   3ae78:	b.cc	3aed4 <ZSTD_endStream@@Base+0x2cf80>  // b.lo, b.ul, b.last
   3ae7c:	ldur	x8, [x29, #-240]
   3ae80:	ldur	x0, [x29, #-144]
   3ae84:	mov	w1, #0x4                   	// #4
   3ae88:	add	x20, x8, w9, uxtw
   3ae8c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3ae90:	mov	w25, w0
   3ae94:	mov	w1, #0x4                   	// #4
   3ae98:	mov	x0, x20
   3ae9c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3aea0:	cmp	w25, w0
   3aea4:	b.ne	3aec4 <ZSTD_endStream@@Base+0x2cf70>  // b.any
   3aea8:	ldr	x0, [sp, #192]
   3aeac:	ldur	x2, [x29, #-184]
   3aeb0:	ldp	x4, x3, [sp, #160]
   3aeb4:	add	x1, x20, #0x4
   3aeb8:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3aebc:	add	w8, w0, #0x4
   3aec0:	b	3aec8 <ZSTD_endStream@@Base+0x2cf74>
   3aec4:	mov	w8, wzr
   3aec8:	ldur	w20, [x29, #-116]
   3aecc:	ldur	x25, [x29, #-112]
   3aed0:	mov	w15, w28
   3aed4:	mov	w9, w8
   3aed8:	cmp	x27, x9
   3aedc:	b.cs	3af20 <ZSTD_endStream@@Base+0x2cfcc>  // b.hs, b.nlast
   3aee0:	ldur	x10, [x29, #-176]
   3aee4:	ldur	w11, [x29, #-160]
   3aee8:	add	x10, x10, w26, uxtw #3
   3aeec:	add	w26, w26, #0x1
   3aef0:	cmp	w8, w11
   3aef4:	stp	w24, w8, [x10]
   3aef8:	mov	w8, #0x1                   	// #1
   3aefc:	b.hi	3af50 <ZSTD_endStream@@Base+0x2cffc>  // b.pmore
   3af00:	ldur	x10, [x29, #-144]
   3af04:	ldur	x11, [x29, #-184]
   3af08:	mov	x27, x9
   3af0c:	mov	w19, w26
   3af10:	add	x10, x10, x9
   3af14:	cmp	x10, x11
   3af18:	b.ne	3af24 <ZSTD_endStream@@Base+0x2cfd0>  // b.any
   3af1c:	b	3af30 <ZSTD_endStream@@Base+0x2cfdc>
   3af20:	mov	x9, x27
   3af24:	mov	w8, wzr
   3af28:	mov	x27, x9
   3af2c:	mov	w19, w21
   3af30:	cbnz	w8, 3b49c <ZSTD_endStream@@Base+0x2d548>
   3af34:	ldur	x8, [x29, #-104]
   3af38:	add	x22, x22, #0x1
   3af3c:	add	w24, w24, #0x1
   3af40:	mov	w21, w19
   3af44:	cmp	x22, x8
   3af48:	b.cc	3ade0 <ZSTD_endStream@@Base+0x2ce8c>  // b.lo, b.ul, b.last
   3af4c:	b	3b498 <ZSTD_endStream@@Base+0x2d544>
   3af50:	mov	x27, x9
   3af54:	mov	w19, w26
   3af58:	cbz	w8, 3af34 <ZSTD_endStream@@Base+0x2cfe0>
   3af5c:	b	3b49c <ZSTD_endStream@@Base+0x2d548>
   3af60:	ldr	w8, [x21, #204]
   3af64:	ldr	x20, [x21, #8]
   3af68:	ldr	w1, [x21, #192]
   3af6c:	ldr	x19, [x21, #48]
   3af70:	cmp	w8, #0xfff
   3af74:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3af78:	mov	w2, #0x5                   	// #5
   3af7c:	mov	x0, x25
   3af80:	stur	w8, [x29, #-128]
   3af84:	sub	w27, w25, w20
   3af88:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3af8c:	stp	x0, x19, [sp, #72]
   3af90:	ldr	w8, [x19, x0, lsl #2]
   3af94:	ldr	x9, [x21, #64]
   3af98:	ldr	x22, [x21, #16]
   3af9c:	ldr	w28, [x21, #24]
   3afa0:	str	w8, [sp, #100]
   3afa4:	ldp	w2, w8, [x21, #184]
   3afa8:	str	x9, [sp, #176]
   3afac:	mov	w9, #0xffffffff            	// #-1
   3afb0:	mov	x0, x21
   3afb4:	sub	w8, w8, #0x1
   3afb8:	lsl	w19, w9, w8
   3afbc:	mvn	w8, w19
   3afc0:	str	w8, [sp, #136]
   3afc4:	subs	w8, w27, w8
   3afc8:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3afcc:	mov	w1, w27
   3afd0:	str	w8, [sp, #128]
   3afd4:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3afd8:	sub	w10, w27, w28
   3afdc:	cmp	w0, #0x0
   3afe0:	stur	w10, [x29, #-88]
   3afe4:	sub	w10, w27, w0
   3afe8:	stur	w10, [x29, #-160]
   3afec:	csinc	w10, w0, wzr, ne  // ne = any
   3aff0:	str	w10, [sp, #192]
   3aff4:	ldur	w10, [x29, #-80]
   3aff8:	add	x8, x22, x28
   3affc:	str	x8, [sp, #168]
   3b000:	add	x8, x20, x28
   3b004:	cmp	w10, #0x0
   3b008:	ldr	x10, [sp, #176]
   3b00c:	str	x8, [sp, #160]
   3b010:	bic	w8, w27, w19
   3b014:	add	w9, w27, #0x9
   3b018:	lsl	w8, w8, #1
   3b01c:	str	w9, [sp, #240]
   3b020:	ldr	w9, [x21, #196]
   3b024:	add	x10, x10, w8, uxtw #2
   3b028:	mov	w8, #0x3                   	// #3
   3b02c:	cinc	x8, x8, eq  // eq = none
   3b030:	stur	x8, [x29, #-104]
   3b034:	add	x8, x10, #0x4
   3b038:	stp	x8, x10, [sp, #144]
   3b03c:	mov	w8, #0x1                   	// #1
   3b040:	lsl	w8, w8, w9
   3b044:	str	w8, [sp, #88]
   3b048:	add	x8, x25, #0x4
   3b04c:	ldr	w25, [sp, #100]
   3b050:	str	x20, [sp, #184]
   3b054:	stur	w27, [x29, #-240]
   3b058:	ldr	x27, [sp, #112]
   3b05c:	ldur	w20, [x29, #-116]
   3b060:	mov	w24, wzr
   3b064:	mov	w26, wzr
   3b068:	stur	x22, [x29, #-208]
   3b06c:	stur	x28, [x29, #-112]
   3b070:	cset	w22, eq  // eq = none
   3b074:	mov	w28, w25
   3b078:	str	x8, [sp, #208]
   3b07c:	cmp	x22, #0x3
   3b080:	b.ne	3b094 <ZSTD_endStream@@Base+0x2d140>  // b.any
   3b084:	ldur	x8, [x29, #-168]
   3b088:	ldr	w8, [x8]
   3b08c:	sub	w19, w8, #0x1
   3b090:	b	3b09c <ZSTD_endStream@@Base+0x2d148>
   3b094:	ldur	x8, [x29, #-168]
   3b098:	ldr	w19, [x8, x22, lsl #2]
   3b09c:	ldur	w9, [x29, #-88]
   3b0a0:	sub	w8, w19, #0x1
   3b0a4:	cmp	w8, w9
   3b0a8:	b.cs	3b0f0 <ZSTD_endStream@@Base+0x2d19c>  // b.hs, b.nlast
   3b0ac:	ldur	x25, [x29, #-144]
   3b0b0:	mov	w1, #0x4                   	// #4
   3b0b4:	mov	x0, x25
   3b0b8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b0bc:	mov	w19, w19
   3b0c0:	mov	w20, w0
   3b0c4:	sub	x0, x25, x19
   3b0c8:	mov	w1, #0x4                   	// #4
   3b0cc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b0d0:	cmp	w20, w0
   3b0d4:	b.ne	3b164 <ZSTD_endStream@@Base+0x2d210>  // b.any
   3b0d8:	ldr	x0, [sp, #208]
   3b0dc:	ldur	x2, [x29, #-184]
   3b0e0:	neg	x8, x19
   3b0e4:	add	x1, x0, x8
   3b0e8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3b0ec:	b	3b15c <ZSTD_endStream@@Base+0x2d208>
   3b0f0:	ldur	w9, [x29, #-160]
   3b0f4:	cmp	w8, w9
   3b0f8:	mov	w8, wzr
   3b0fc:	b.cs	3b170 <ZSTD_endStream@@Base+0x2d21c>  // b.hs, b.nlast
   3b100:	ldur	w9, [x29, #-240]
   3b104:	ldur	x11, [x29, #-112]
   3b108:	sub	w9, w9, w19
   3b10c:	mvn	w10, w9
   3b110:	add	w10, w11, w10
   3b114:	cmp	w10, #0x3
   3b118:	b.cc	3b170 <ZSTD_endStream@@Base+0x2d21c>  // b.lo, b.ul, b.last
   3b11c:	ldur	x8, [x29, #-208]
   3b120:	ldur	x0, [x29, #-144]
   3b124:	mov	w1, #0x4                   	// #4
   3b128:	add	x20, x8, w9, uxtw
   3b12c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b130:	mov	w25, w0
   3b134:	mov	w1, #0x4                   	// #4
   3b138:	mov	x0, x20
   3b13c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b140:	cmp	w25, w0
   3b144:	b.ne	3b164 <ZSTD_endStream@@Base+0x2d210>  // b.any
   3b148:	ldr	x0, [sp, #208]
   3b14c:	ldur	x2, [x29, #-184]
   3b150:	ldp	x4, x3, [sp, #160]
   3b154:	add	x1, x20, #0x4
   3b158:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3b15c:	add	w8, w0, #0x4
   3b160:	b	3b168 <ZSTD_endStream@@Base+0x2d214>
   3b164:	mov	w8, wzr
   3b168:	ldur	w20, [x29, #-116]
   3b16c:	mov	w25, w28
   3b170:	mov	w9, w8
   3b174:	cmp	x27, x9
   3b178:	b.cs	3b1bc <ZSTD_endStream@@Base+0x2d268>  // b.hs, b.nlast
   3b17c:	ldur	x10, [x29, #-176]
   3b180:	ldur	w11, [x29, #-128]
   3b184:	add	x10, x10, w26, uxtw #3
   3b188:	add	w26, w26, #0x1
   3b18c:	cmp	w8, w11
   3b190:	stp	w24, w8, [x10]
   3b194:	mov	w8, #0x1                   	// #1
   3b198:	b.hi	3b1ec <ZSTD_endStream@@Base+0x2d298>  // b.pmore
   3b19c:	ldur	x10, [x29, #-144]
   3b1a0:	ldur	x11, [x29, #-184]
   3b1a4:	mov	x27, x9
   3b1a8:	mov	w19, w26
   3b1ac:	add	x10, x10, x9
   3b1b0:	cmp	x10, x11
   3b1b4:	b.ne	3b1c0 <ZSTD_endStream@@Base+0x2d26c>  // b.any
   3b1b8:	b	3b1cc <ZSTD_endStream@@Base+0x2d278>
   3b1bc:	mov	x9, x27
   3b1c0:	mov	w8, wzr
   3b1c4:	mov	x27, x9
   3b1c8:	mov	w19, w21
   3b1cc:	cbnz	w8, 3b6b4 <ZSTD_endStream@@Base+0x2d760>
   3b1d0:	ldur	x8, [x29, #-104]
   3b1d4:	add	x22, x22, #0x1
   3b1d8:	add	w24, w24, #0x1
   3b1dc:	mov	w21, w19
   3b1e0:	cmp	x22, x8
   3b1e4:	b.cc	3b07c <ZSTD_endStream@@Base+0x2d128>  // b.lo, b.ul, b.last
   3b1e8:	b	3b6b0 <ZSTD_endStream@@Base+0x2d75c>
   3b1ec:	mov	x27, x9
   3b1f0:	mov	w19, w26
   3b1f4:	cbz	w8, 3b1d0 <ZSTD_endStream@@Base+0x2d27c>
   3b1f8:	b	3b6b4 <ZSTD_endStream@@Base+0x2d760>
   3b1fc:	ldr	w8, [x21, #204]
   3b200:	ldr	x28, [x21, #8]
   3b204:	ldr	w1, [x21, #192]
   3b208:	ldr	x19, [x21, #48]
   3b20c:	cmp	w8, #0xfff
   3b210:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3b214:	mov	w2, #0x4                   	// #4
   3b218:	mov	x0, x25
   3b21c:	stur	w8, [x29, #-128]
   3b220:	sub	w20, w25, w28
   3b224:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3b228:	stp	x0, x19, [sp, #72]
   3b22c:	ldr	w8, [x19, x0, lsl #2]
   3b230:	ldr	x9, [x21, #64]
   3b234:	ldr	x22, [x21, #16]
   3b238:	ldr	w27, [x21, #24]
   3b23c:	str	w8, [sp, #100]
   3b240:	ldp	w2, w8, [x21, #184]
   3b244:	str	x9, [sp, #176]
   3b248:	mov	w9, #0xffffffff            	// #-1
   3b24c:	mov	x0, x21
   3b250:	sub	w8, w8, #0x1
   3b254:	lsl	w19, w9, w8
   3b258:	mvn	w8, w19
   3b25c:	str	w8, [sp, #136]
   3b260:	subs	w8, w20, w8
   3b264:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3b268:	mov	w1, w20
   3b26c:	str	w8, [sp, #128]
   3b270:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3b274:	sub	w10, w20, w27
   3b278:	cmp	w0, #0x0
   3b27c:	stur	w10, [x29, #-88]
   3b280:	sub	w10, w20, w0
   3b284:	stur	w10, [x29, #-160]
   3b288:	csinc	w10, w0, wzr, ne  // ne = any
   3b28c:	str	w10, [sp, #192]
   3b290:	ldur	w10, [x29, #-80]
   3b294:	add	x8, x22, x27
   3b298:	str	x8, [sp, #168]
   3b29c:	add	x8, x28, x27
   3b2a0:	cmp	w10, #0x0
   3b2a4:	ldr	x10, [sp, #176]
   3b2a8:	str	x8, [sp, #160]
   3b2ac:	bic	w8, w20, w19
   3b2b0:	add	w9, w20, #0x9
   3b2b4:	lsl	w8, w8, #1
   3b2b8:	str	w9, [sp, #240]
   3b2bc:	ldr	w9, [x21, #196]
   3b2c0:	add	x10, x10, w8, uxtw #2
   3b2c4:	mov	w8, #0x3                   	// #3
   3b2c8:	cinc	x8, x8, eq  // eq = none
   3b2cc:	stur	x8, [x29, #-104]
   3b2d0:	add	x8, x10, #0x4
   3b2d4:	stp	x8, x10, [sp, #144]
   3b2d8:	mov	w8, #0x1                   	// #1
   3b2dc:	lsl	w8, w8, w9
   3b2e0:	str	w8, [sp, #88]
   3b2e4:	add	x8, x25, #0x4
   3b2e8:	ldr	w25, [sp, #100]
   3b2ec:	stur	x27, [x29, #-112]
   3b2f0:	stur	w20, [x29, #-240]
   3b2f4:	ldr	x27, [sp, #112]
   3b2f8:	ldur	w20, [x29, #-116]
   3b2fc:	mov	w24, wzr
   3b300:	mov	w26, wzr
   3b304:	stur	x22, [x29, #-208]
   3b308:	str	x28, [sp, #184]
   3b30c:	cset	w22, eq  // eq = none
   3b310:	mov	w28, w25
   3b314:	str	x8, [sp, #208]
   3b318:	cmp	x22, #0x3
   3b31c:	b.ne	3b330 <ZSTD_endStream@@Base+0x2d3dc>  // b.any
   3b320:	ldur	x8, [x29, #-168]
   3b324:	ldr	w8, [x8]
   3b328:	sub	w19, w8, #0x1
   3b32c:	b	3b338 <ZSTD_endStream@@Base+0x2d3e4>
   3b330:	ldur	x8, [x29, #-168]
   3b334:	ldr	w19, [x8, x22, lsl #2]
   3b338:	ldur	w9, [x29, #-88]
   3b33c:	sub	w8, w19, #0x1
   3b340:	cmp	w8, w9
   3b344:	b.cs	3b38c <ZSTD_endStream@@Base+0x2d438>  // b.hs, b.nlast
   3b348:	ldur	x25, [x29, #-144]
   3b34c:	mov	w1, #0x4                   	// #4
   3b350:	mov	x0, x25
   3b354:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b358:	mov	w19, w19
   3b35c:	mov	w20, w0
   3b360:	sub	x0, x25, x19
   3b364:	mov	w1, #0x4                   	// #4
   3b368:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b36c:	cmp	w20, w0
   3b370:	b.ne	3b400 <ZSTD_endStream@@Base+0x2d4ac>  // b.any
   3b374:	ldr	x0, [sp, #208]
   3b378:	ldur	x2, [x29, #-184]
   3b37c:	neg	x8, x19
   3b380:	add	x1, x0, x8
   3b384:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3b388:	b	3b3f8 <ZSTD_endStream@@Base+0x2d4a4>
   3b38c:	ldur	w9, [x29, #-160]
   3b390:	cmp	w8, w9
   3b394:	mov	w8, wzr
   3b398:	b.cs	3b40c <ZSTD_endStream@@Base+0x2d4b8>  // b.hs, b.nlast
   3b39c:	ldur	w9, [x29, #-240]
   3b3a0:	ldur	x11, [x29, #-112]
   3b3a4:	sub	w9, w9, w19
   3b3a8:	mvn	w10, w9
   3b3ac:	add	w10, w11, w10
   3b3b0:	cmp	w10, #0x3
   3b3b4:	b.cc	3b40c <ZSTD_endStream@@Base+0x2d4b8>  // b.lo, b.ul, b.last
   3b3b8:	ldur	x8, [x29, #-208]
   3b3bc:	ldur	x0, [x29, #-144]
   3b3c0:	mov	w1, #0x4                   	// #4
   3b3c4:	add	x20, x8, w9, uxtw
   3b3c8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b3cc:	mov	w25, w0
   3b3d0:	mov	w1, #0x4                   	// #4
   3b3d4:	mov	x0, x20
   3b3d8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3b3dc:	cmp	w25, w0
   3b3e0:	b.ne	3b400 <ZSTD_endStream@@Base+0x2d4ac>  // b.any
   3b3e4:	ldr	x0, [sp, #208]
   3b3e8:	ldur	x2, [x29, #-184]
   3b3ec:	ldp	x4, x3, [sp, #160]
   3b3f0:	add	x1, x20, #0x4
   3b3f4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3b3f8:	add	w8, w0, #0x4
   3b3fc:	b	3b404 <ZSTD_endStream@@Base+0x2d4b0>
   3b400:	mov	w8, wzr
   3b404:	ldur	w20, [x29, #-116]
   3b408:	mov	w25, w28
   3b40c:	mov	w9, w8
   3b410:	cmp	x27, x9
   3b414:	b.cs	3b458 <ZSTD_endStream@@Base+0x2d504>  // b.hs, b.nlast
   3b418:	ldur	x10, [x29, #-176]
   3b41c:	ldur	w11, [x29, #-128]
   3b420:	add	x10, x10, w26, uxtw #3
   3b424:	add	w26, w26, #0x1
   3b428:	cmp	w8, w11
   3b42c:	stp	w24, w8, [x10]
   3b430:	mov	w8, #0x1                   	// #1
   3b434:	b.hi	3b488 <ZSTD_endStream@@Base+0x2d534>  // b.pmore
   3b438:	ldur	x10, [x29, #-144]
   3b43c:	ldur	x11, [x29, #-184]
   3b440:	mov	x27, x9
   3b444:	mov	w19, w26
   3b448:	add	x10, x10, x9
   3b44c:	cmp	x10, x11
   3b450:	b.ne	3b45c <ZSTD_endStream@@Base+0x2d508>  // b.any
   3b454:	b	3b468 <ZSTD_endStream@@Base+0x2d514>
   3b458:	mov	x9, x27
   3b45c:	mov	w8, wzr
   3b460:	mov	x27, x9
   3b464:	mov	w19, w21
   3b468:	cbnz	w8, 3b89c <ZSTD_endStream@@Base+0x2d948>
   3b46c:	ldur	x8, [x29, #-104]
   3b470:	add	x22, x22, #0x1
   3b474:	add	w24, w24, #0x1
   3b478:	mov	w21, w19
   3b47c:	cmp	x22, x8
   3b480:	b.cc	3b318 <ZSTD_endStream@@Base+0x2d3c4>  // b.lo, b.ul, b.last
   3b484:	b	3b898 <ZSTD_endStream@@Base+0x2d944>
   3b488:	mov	x27, x9
   3b48c:	mov	w19, w26
   3b490:	cbz	w8, 3b46c <ZSTD_endStream@@Base+0x2d518>
   3b494:	b	3b89c <ZSTD_endStream@@Base+0x2d948>
   3b498:	mov	w8, wzr
   3b49c:	ldur	x21, [x29, #-168]
   3b4a0:	ldur	x24, [x29, #-200]
   3b4a4:	cbnz	w8, 3baa4 <ZSTD_endStream@@Base+0x2db50>
   3b4a8:	ldp	x10, x8, [sp, #80]
   3b4ac:	ldr	w9, [sp, #240]
   3b4b0:	ldr	w28, [sp, #100]
   3b4b4:	mov	x20, xzr
   3b4b8:	mov	x22, xzr
   3b4bc:	str	w9, [x8, x10, lsl #2]
   3b4c0:	add	w8, w9, #0x2
   3b4c4:	stur	w8, [x29, #-88]
   3b4c8:	b	3b4e8 <ZSTD_endStream@@Base+0x2d594>
   3b4cc:	str	x9, [sp, #144]
   3b4d0:	mov	x20, x8
   3b4d4:	mov	x8, x22
   3b4d8:	ldr	w15, [x9]
   3b4dc:	mov	w9, #0x1                   	// #1
   3b4e0:	mov	x22, x8
   3b4e4:	tbz	w9, #0, 3b680 <ZSTD_endStream@@Base+0x2d72c>
   3b4e8:	ldur	w8, [x29, #-128]
   3b4ec:	subs	w8, w8, #0x1
   3b4f0:	b.cc	3b680 <ZSTD_endStream@@Base+0x2d72c>  // b.lo, b.ul, b.last
   3b4f4:	stur	w8, [x29, #-128]
   3b4f8:	ldr	w8, [sp, #184]
   3b4fc:	cmp	w15, w8
   3b500:	b.cc	3b680 <ZSTD_endStream@@Base+0x2d72c>  // b.lo, b.ul, b.last
   3b504:	cmp	x22, x20
   3b508:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   3b50c:	mov	w21, w15
   3b510:	add	x8, x23, x21
   3b514:	cmp	x8, x25
   3b518:	b.cs	3b564 <ZSTD_endStream@@Base+0x2d610>  // b.hs, b.nlast
   3b51c:	ldur	x8, [x29, #-240]
   3b520:	ldur	x2, [x29, #-184]
   3b524:	ldp	x4, x3, [sp, #160]
   3b528:	mov	w19, w15
   3b52c:	add	x24, x8, x21
   3b530:	ldur	x8, [x29, #-144]
   3b534:	add	x1, x24, x23
   3b538:	add	x0, x8, x23
   3b53c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3b540:	ldr	x10, [sp, #176]
   3b544:	add	x8, x0, x23
   3b548:	add	x9, x8, x21
   3b54c:	cmp	x9, x25
   3b550:	add	x10, x10, x21
   3b554:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   3b558:	ldur	x24, [x29, #-200]
   3b55c:	mov	w15, w19
   3b560:	b	3b58c <ZSTD_endStream@@Base+0x2d638>
   3b564:	ldr	x8, [sp, #176]
   3b568:	ldur	x2, [x29, #-184]
   3b56c:	mov	w19, w15
   3b570:	add	x21, x8, x21
   3b574:	ldur	x8, [x29, #-144]
   3b578:	add	x1, x21, x23
   3b57c:	add	x0, x8, x23
   3b580:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3b584:	mov	w15, w19
   3b588:	add	x8, x0, x23
   3b58c:	mov	w23, #0x1c                  	// #28
   3b590:	cmp	x8, x27
   3b594:	b.ls	3b5ec <ZSTD_endStream@@Base+0x2d698>  // b.plast
   3b598:	ldr	w14, [sp, #208]
   3b59c:	ldur	w12, [x29, #-88]
   3b5a0:	ldur	x13, [x29, #-176]
   3b5a4:	add	w11, w15, w8
   3b5a8:	sub	w10, w14, w15
   3b5ac:	cmp	x8, x10
   3b5b0:	mov	w9, wzr
   3b5b4:	sub	w12, w12, w15
   3b5b8:	add	x13, x13, w26, uxtw #3
   3b5bc:	csel	w14, w11, w14, hi  // hi = pmore
   3b5c0:	cmp	x8, #0x1, lsl #12
   3b5c4:	add	w26, w26, #0x1
   3b5c8:	stp	w12, w8, [x13]
   3b5cc:	str	w14, [sp, #208]
   3b5d0:	b.hi	3b660 <ZSTD_endStream@@Base+0x2d70c>  // b.pmore
   3b5d4:	ldur	x10, [x29, #-144]
   3b5d8:	ldur	x11, [x29, #-184]
   3b5dc:	mov	x27, x8
   3b5e0:	add	x10, x10, x8
   3b5e4:	cmp	x10, x11
   3b5e8:	b.eq	3b660 <ZSTD_endStream@@Base+0x2d70c>  // b.none
   3b5ec:	ldur	x10, [x29, #-144]
   3b5f0:	ldrb	w9, [x21, x8]
   3b5f4:	and	w11, w15, w28
   3b5f8:	lsl	w11, w11, #1
   3b5fc:	ldrb	w10, [x10, x8]
   3b600:	cmp	w9, w10
   3b604:	ldr	x9, [sp, #136]
   3b608:	add	x9, x9, w11, uxtw #2
   3b60c:	b.cs	3b634 <ZSTD_endStream@@Base+0x2d6e0>  // b.hs, b.nlast
   3b610:	ldr	w10, [sp, #128]
   3b614:	ldur	x21, [x29, #-168]
   3b618:	cmp	w15, w10
   3b61c:	ldr	x10, [sp, #152]
   3b620:	str	w15, [x10]
   3b624:	b.ls	3b670 <ZSTD_endStream@@Base+0x2d71c>  // b.plast
   3b628:	add	x9, x9, #0x4
   3b62c:	str	x9, [sp, #152]
   3b630:	b	3b4d8 <ZSTD_endStream@@Base+0x2d584>
   3b634:	ldr	w10, [sp, #128]
   3b638:	ldur	x21, [x29, #-168]
   3b63c:	cmp	w15, w10
   3b640:	ldr	x10, [sp, #144]
   3b644:	str	w15, [x10]
   3b648:	b.hi	3b4cc <ZSTD_endStream@@Base+0x2d578>  // b.pmore
   3b64c:	sub	x10, x29, #0x40
   3b650:	mov	w9, wzr
   3b654:	str	x10, [sp, #144]
   3b658:	mov	x20, x8
   3b65c:	b	3b668 <ZSTD_endStream@@Base+0x2d714>
   3b660:	ldur	x21, [x29, #-168]
   3b664:	mov	x27, x8
   3b668:	mov	x8, x22
   3b66c:	b	3b4e0 <ZSTD_endStream@@Base+0x2d58c>
   3b670:	sub	x10, x29, #0x40
   3b674:	mov	w9, wzr
   3b678:	str	x10, [sp, #152]
   3b67c:	b	3b4e0 <ZSTD_endStream@@Base+0x2d58c>
   3b680:	ldr	x8, [sp, #144]
   3b684:	str	wzr, [x8]
   3b688:	ldr	x8, [sp, #152]
   3b68c:	str	wzr, [x8]
   3b690:	ldr	w8, [sp, #208]
   3b694:	b	3ba90 <ZSTD_endStream@@Base+0x2db3c>
   3b698:	mov	w8, wzr
   3b69c:	cbz	w8, 3d854 <ZSTD_endStream@@Base+0x2f900>
   3b6a0:	ldur	x21, [x29, #-168]
   3b6a4:	ldur	x22, [x29, #-72]
   3b6a8:	ldur	x24, [x29, #-200]
   3b6ac:	b	3db68 <ZSTD_endStream@@Base+0x2fc14>
   3b6b0:	mov	w8, wzr
   3b6b4:	ldur	x21, [x29, #-168]
   3b6b8:	ldur	x24, [x29, #-200]
   3b6bc:	cbnz	w8, 3baa4 <ZSTD_endStream@@Base+0x2db50>
   3b6c0:	ldp	x10, x8, [sp, #72]
   3b6c4:	ldur	w9, [x29, #-240]
   3b6c8:	ldr	w19, [sp, #88]
   3b6cc:	mov	x20, xzr
   3b6d0:	mov	x22, xzr
   3b6d4:	str	w9, [x8, x10, lsl #2]
   3b6d8:	add	w8, w9, #0x2
   3b6dc:	stur	w8, [x29, #-88]
   3b6e0:	b	3b700 <ZSTD_endStream@@Base+0x2d7ac>
   3b6e4:	str	x9, [sp, #144]
   3b6e8:	mov	x20, x8
   3b6ec:	mov	x8, x22
   3b6f0:	ldr	w25, [x9]
   3b6f4:	mov	w9, #0x1                   	// #1
   3b6f8:	mov	x22, x8
   3b6fc:	tbz	w9, #0, 3ba7c <ZSTD_endStream@@Base+0x2db28>
   3b700:	subs	w19, w19, #0x1
   3b704:	b.cc	3ba7c <ZSTD_endStream@@Base+0x2db28>  // b.lo, b.ul, b.last
   3b708:	ldr	w8, [sp, #192]
   3b70c:	cmp	w25, w8
   3b710:	b.cc	3ba7c <ZSTD_endStream@@Base+0x2db28>  // b.lo, b.ul, b.last
   3b714:	ldur	x9, [x29, #-112]
   3b718:	cmp	x22, x20
   3b71c:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   3b720:	mov	w21, w25
   3b724:	add	x8, x23, x21
   3b728:	cmp	x8, x9
   3b72c:	b.cs	3b780 <ZSTD_endStream@@Base+0x2d82c>  // b.hs, b.nlast
   3b730:	mov	x8, x9
   3b734:	ldur	x9, [x29, #-208]
   3b738:	mov	w28, w25
   3b73c:	mov	x25, x8
   3b740:	ldur	x8, [x29, #-144]
   3b744:	ldur	x2, [x29, #-184]
   3b748:	ldp	x4, x3, [sp, #160]
   3b74c:	add	x24, x9, x21
   3b750:	add	x0, x8, x23
   3b754:	add	x1, x24, x23
   3b758:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3b75c:	ldr	x10, [sp, #184]
   3b760:	add	x8, x0, x23
   3b764:	add	x9, x8, x21
   3b768:	cmp	x9, x25
   3b76c:	add	x10, x10, x21
   3b770:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   3b774:	ldur	x24, [x29, #-200]
   3b778:	mov	w25, w28
   3b77c:	b	3b7a0 <ZSTD_endStream@@Base+0x2d84c>
   3b780:	ldr	x8, [sp, #184]
   3b784:	ldur	x2, [x29, #-184]
   3b788:	add	x21, x8, x21
   3b78c:	ldur	x8, [x29, #-144]
   3b790:	add	x1, x21, x23
   3b794:	add	x0, x8, x23
   3b798:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3b79c:	add	x8, x0, x23
   3b7a0:	mov	w23, #0x1c                  	// #28
   3b7a4:	cmp	x8, x27
   3b7a8:	b.ls	3b800 <ZSTD_endStream@@Base+0x2d8ac>  // b.plast
   3b7ac:	ldr	w14, [sp, #240]
   3b7b0:	ldur	w12, [x29, #-88]
   3b7b4:	ldur	x13, [x29, #-176]
   3b7b8:	add	w11, w25, w8
   3b7bc:	sub	w10, w14, w25
   3b7c0:	cmp	x8, x10
   3b7c4:	mov	w9, wzr
   3b7c8:	sub	w12, w12, w25
   3b7cc:	add	x13, x13, w26, uxtw #3
   3b7d0:	csel	w14, w11, w14, hi  // hi = pmore
   3b7d4:	cmp	x8, #0x1, lsl #12
   3b7d8:	add	w26, w26, #0x1
   3b7dc:	stp	w12, w8, [x13]
   3b7e0:	str	w14, [sp, #240]
   3b7e4:	b.hi	3b878 <ZSTD_endStream@@Base+0x2d924>  // b.pmore
   3b7e8:	ldur	x10, [x29, #-144]
   3b7ec:	ldur	x11, [x29, #-184]
   3b7f0:	mov	x27, x8
   3b7f4:	add	x10, x10, x8
   3b7f8:	cmp	x10, x11
   3b7fc:	b.eq	3b878 <ZSTD_endStream@@Base+0x2d924>  // b.none
   3b800:	ldur	x10, [x29, #-144]
   3b804:	ldrb	w9, [x21, x8]
   3b808:	ldr	w11, [sp, #136]
   3b80c:	ldrb	w10, [x10, x8]
   3b810:	and	w11, w25, w11
   3b814:	lsl	w11, w11, #1
   3b818:	cmp	w9, w10
   3b81c:	ldr	x9, [sp, #176]
   3b820:	add	x9, x9, w11, uxtw #2
   3b824:	b.cs	3b84c <ZSTD_endStream@@Base+0x2d8f8>  // b.hs, b.nlast
   3b828:	ldr	w10, [sp, #128]
   3b82c:	ldur	x21, [x29, #-168]
   3b830:	cmp	w25, w10
   3b834:	ldr	x10, [sp, #152]
   3b838:	str	w25, [x10]
   3b83c:	b.ls	3b888 <ZSTD_endStream@@Base+0x2d934>  // b.plast
   3b840:	add	x9, x9, #0x4
   3b844:	str	x9, [sp, #152]
   3b848:	b	3b6f0 <ZSTD_endStream@@Base+0x2d79c>
   3b84c:	ldr	w10, [sp, #128]
   3b850:	ldur	x21, [x29, #-168]
   3b854:	cmp	w25, w10
   3b858:	ldr	x10, [sp, #144]
   3b85c:	str	w25, [x10]
   3b860:	b.hi	3b6e4 <ZSTD_endStream@@Base+0x2d790>  // b.pmore
   3b864:	sub	x10, x29, #0x40
   3b868:	mov	w9, wzr
   3b86c:	str	x10, [sp, #144]
   3b870:	mov	x20, x8
   3b874:	b	3b880 <ZSTD_endStream@@Base+0x2d92c>
   3b878:	ldur	x21, [x29, #-168]
   3b87c:	mov	x27, x8
   3b880:	mov	x8, x22
   3b884:	b	3b6f8 <ZSTD_endStream@@Base+0x2d7a4>
   3b888:	sub	x10, x29, #0x40
   3b88c:	mov	w9, wzr
   3b890:	str	x10, [sp, #152]
   3b894:	b	3b6f8 <ZSTD_endStream@@Base+0x2d7a4>
   3b898:	mov	w8, wzr
   3b89c:	ldur	x21, [x29, #-168]
   3b8a0:	ldur	x24, [x29, #-200]
   3b8a4:	cbnz	w8, 3baa4 <ZSTD_endStream@@Base+0x2db50>
   3b8a8:	ldp	x10, x8, [sp, #72]
   3b8ac:	ldur	w9, [x29, #-240]
   3b8b0:	ldr	w19, [sp, #88]
   3b8b4:	mov	x20, xzr
   3b8b8:	mov	x22, xzr
   3b8bc:	str	w9, [x8, x10, lsl #2]
   3b8c0:	add	w8, w9, #0x2
   3b8c4:	stur	w8, [x29, #-88]
   3b8c8:	b	3b8e8 <ZSTD_endStream@@Base+0x2d994>
   3b8cc:	str	x9, [sp, #144]
   3b8d0:	mov	x20, x8
   3b8d4:	mov	x8, x22
   3b8d8:	ldr	w25, [x9]
   3b8dc:	mov	w9, #0x1                   	// #1
   3b8e0:	mov	x22, x8
   3b8e4:	tbz	w9, #0, 3ba7c <ZSTD_endStream@@Base+0x2db28>
   3b8e8:	subs	w19, w19, #0x1
   3b8ec:	b.cc	3ba7c <ZSTD_endStream@@Base+0x2db28>  // b.lo, b.ul, b.last
   3b8f0:	ldr	w8, [sp, #192]
   3b8f4:	cmp	w25, w8
   3b8f8:	b.cc	3ba7c <ZSTD_endStream@@Base+0x2db28>  // b.lo, b.ul, b.last
   3b8fc:	ldur	x9, [x29, #-112]
   3b900:	cmp	x22, x20
   3b904:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   3b908:	mov	w21, w25
   3b90c:	add	x8, x23, x21
   3b910:	cmp	x8, x9
   3b914:	b.cs	3b964 <ZSTD_endStream@@Base+0x2da10>  // b.hs, b.nlast
   3b918:	ldur	x8, [x29, #-208]
   3b91c:	ldur	x2, [x29, #-184]
   3b920:	ldp	x4, x3, [sp, #160]
   3b924:	mov	w28, w25
   3b928:	add	x24, x8, x21
   3b92c:	ldur	x8, [x29, #-144]
   3b930:	add	x1, x24, x23
   3b934:	mov	x25, x9
   3b938:	add	x0, x8, x23
   3b93c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3b940:	ldr	x10, [sp, #184]
   3b944:	add	x8, x0, x23
   3b948:	add	x9, x8, x21
   3b94c:	cmp	x9, x25
   3b950:	add	x10, x10, x21
   3b954:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   3b958:	ldur	x24, [x29, #-200]
   3b95c:	mov	w25, w28
   3b960:	b	3b984 <ZSTD_endStream@@Base+0x2da30>
   3b964:	ldr	x8, [sp, #184]
   3b968:	ldur	x2, [x29, #-184]
   3b96c:	add	x21, x8, x21
   3b970:	ldur	x8, [x29, #-144]
   3b974:	add	x1, x21, x23
   3b978:	add	x0, x8, x23
   3b97c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3b980:	add	x8, x0, x23
   3b984:	mov	w23, #0x1c                  	// #28
   3b988:	cmp	x8, x27
   3b98c:	b.ls	3b9e4 <ZSTD_endStream@@Base+0x2da90>  // b.plast
   3b990:	ldr	w14, [sp, #240]
   3b994:	ldur	w12, [x29, #-88]
   3b998:	ldur	x13, [x29, #-176]
   3b99c:	add	w11, w25, w8
   3b9a0:	sub	w10, w14, w25
   3b9a4:	cmp	x8, x10
   3b9a8:	mov	w9, wzr
   3b9ac:	sub	w12, w12, w25
   3b9b0:	add	x13, x13, w26, uxtw #3
   3b9b4:	csel	w14, w11, w14, hi  // hi = pmore
   3b9b8:	cmp	x8, #0x1, lsl #12
   3b9bc:	add	w26, w26, #0x1
   3b9c0:	stp	w12, w8, [x13]
   3b9c4:	str	w14, [sp, #240]
   3b9c8:	b.hi	3ba5c <ZSTD_endStream@@Base+0x2db08>  // b.pmore
   3b9cc:	ldur	x10, [x29, #-144]
   3b9d0:	ldur	x11, [x29, #-184]
   3b9d4:	mov	x27, x8
   3b9d8:	add	x10, x10, x8
   3b9dc:	cmp	x10, x11
   3b9e0:	b.eq	3ba5c <ZSTD_endStream@@Base+0x2db08>  // b.none
   3b9e4:	ldur	x10, [x29, #-144]
   3b9e8:	ldrb	w9, [x21, x8]
   3b9ec:	ldr	w11, [sp, #136]
   3b9f0:	ldrb	w10, [x10, x8]
   3b9f4:	and	w11, w25, w11
   3b9f8:	lsl	w11, w11, #1
   3b9fc:	cmp	w9, w10
   3ba00:	ldr	x9, [sp, #176]
   3ba04:	add	x9, x9, w11, uxtw #2
   3ba08:	b.cs	3ba30 <ZSTD_endStream@@Base+0x2dadc>  // b.hs, b.nlast
   3ba0c:	ldr	w10, [sp, #128]
   3ba10:	ldur	x21, [x29, #-168]
   3ba14:	cmp	w25, w10
   3ba18:	ldr	x10, [sp, #152]
   3ba1c:	str	w25, [x10]
   3ba20:	b.ls	3ba6c <ZSTD_endStream@@Base+0x2db18>  // b.plast
   3ba24:	add	x9, x9, #0x4
   3ba28:	str	x9, [sp, #152]
   3ba2c:	b	3b8d8 <ZSTD_endStream@@Base+0x2d984>
   3ba30:	ldr	w10, [sp, #128]
   3ba34:	ldur	x21, [x29, #-168]
   3ba38:	cmp	w25, w10
   3ba3c:	ldr	x10, [sp, #144]
   3ba40:	str	w25, [x10]
   3ba44:	b.hi	3b8cc <ZSTD_endStream@@Base+0x2d978>  // b.pmore
   3ba48:	sub	x10, x29, #0x40
   3ba4c:	mov	w9, wzr
   3ba50:	str	x10, [sp, #144]
   3ba54:	mov	x20, x8
   3ba58:	b	3ba64 <ZSTD_endStream@@Base+0x2db10>
   3ba5c:	ldur	x21, [x29, #-168]
   3ba60:	mov	x27, x8
   3ba64:	mov	x8, x22
   3ba68:	b	3b8e0 <ZSTD_endStream@@Base+0x2d98c>
   3ba6c:	sub	x10, x29, #0x40
   3ba70:	mov	w9, wzr
   3ba74:	str	x10, [sp, #152]
   3ba78:	b	3b8e0 <ZSTD_endStream@@Base+0x2d98c>
   3ba7c:	ldr	x8, [sp, #144]
   3ba80:	str	wzr, [x8]
   3ba84:	ldr	x8, [sp, #152]
   3ba88:	str	wzr, [x8]
   3ba8c:	ldr	w8, [sp, #240]
   3ba90:	ldur	x9, [x29, #-72]
   3ba94:	sub	w8, w8, #0x8
   3ba98:	mov	w19, w26
   3ba9c:	str	w8, [x9, #36]
   3baa0:	ldur	w20, [x29, #-116]
   3baa4:	ldr	x27, [sp, #224]
   3baa8:	ldur	x22, [x29, #-72]
   3baac:	ldur	x26, [x29, #-96]
   3bab0:	cbnz	w19, 3a788 <ZSTD_endStream@@Base+0x2c834>
   3bab4:	ldur	x8, [x29, #-144]
   3bab8:	mov	w0, wzr
   3babc:	add	x8, x8, #0x1
   3bac0:	stur	x8, [x29, #-144]
   3bac4:	mov	w8, #0x2                   	// #2
   3bac8:	cmp	w8, #0x7
   3bacc:	b.eq	3d550 <ZSTD_endStream@@Base+0x2f5fc>  // b.none
   3bad0:	cbnz	w8, 3a73c <ZSTD_endStream@@Base+0x2c7e8>
   3bad4:	cbz	w0, 3d560 <ZSTD_endStream@@Base+0x2f60c>
   3bad8:	mov	w20, #0x1                   	// #1
   3badc:	sub	w21, w20, #0x1
   3bae0:	umaddl	x8, w21, w23, x26
   3bae4:	ldur	x9, [x29, #-144]
   3bae8:	ldr	w8, [x8, #8]
   3baec:	mov	w10, w20
   3baf0:	mov	w28, w0
   3baf4:	add	x19, x9, x10
   3baf8:	mov	w25, w20
   3bafc:	stur	x10, [x29, #-80]
   3bb00:	cbz	w8, 3bb0c <ZSTD_endStream@@Base+0x2dbb8>
   3bb04:	mov	w20, #0x1                   	// #1
   3bb08:	b	3bb18 <ZSTD_endStream@@Base+0x2dbc4>
   3bb0c:	madd	x8, x21, x23, x26
   3bb10:	ldr	w8, [x8, #12]
   3bb14:	add	w20, w8, #0x1
   3bb18:	mul	x8, x21, x23
   3bb1c:	ldur	x23, [x29, #-216]
   3bb20:	ldr	w22, [x26, x8]
   3bb24:	sub	x0, x19, #0x1
   3bb28:	mov	w1, #0x1                   	// #1
   3bb2c:	mov	x2, x23
   3bb30:	mov	w3, wzr
   3bb34:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   3bb38:	add	w22, w0, w22
   3bb3c:	mov	w0, w20
   3bb40:	mov	x1, x23
   3bb44:	mov	w2, wzr
   3bb48:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3bb4c:	add	w22, w22, w0
   3bb50:	sub	w0, w20, #0x1
   3bb54:	mov	x1, x23
   3bb58:	mov	w2, wzr
   3bb5c:	mov	w23, #0x1c                  	// #28
   3bb60:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3bb64:	ldur	x8, [x29, #-80]
   3bb68:	sub	w9, w22, w0
   3bb6c:	madd	x8, x8, x23, x26
   3bb70:	ldr	w10, [x8]
   3bb74:	cmp	w9, w10
   3bb78:	b.gt	3bba4 <ZSTD_endStream@@Base+0x2dc50>
   3bb7c:	ldur	x10, [x29, #-80]
   3bb80:	madd	x11, x21, x23, x26
   3bb84:	madd	x10, x10, x23, x26
   3bb88:	stur	xzr, [x10, #4]
   3bb8c:	str	w20, [x10, #12]
   3bb90:	str	w9, [x8]
   3bb94:	ldr	w9, [x11, #24]
   3bb98:	ldr	x11, [x11, #16]
   3bb9c:	str	w9, [x10, #24]
   3bba0:	str	x11, [x10, #16]
   3bba4:	ldur	x9, [x29, #-232]
   3bba8:	ldur	x22, [x29, #-72]
   3bbac:	mov	w0, w28
   3bbb0:	cmp	x19, x9
   3bbb4:	b.ls	3bbcc <ZSTD_endStream@@Base+0x2dc78>  // b.plast
   3bbb8:	mov	w8, #0x13                  	// #19
   3bbbc:	mov	w20, w25
   3bbc0:	cmp	w8, #0x13
   3bbc4:	b.ls	3d2b0 <ZSTD_endStream@@Base+0x2f35c>  // b.plast
   3bbc8:	b	3a73c <ZSTD_endStream@@Base+0x2c7e8>
   3bbcc:	mov	w20, w25
   3bbd0:	cmp	w25, w0
   3bbd4:	b.ne	3bbe8 <ZSTD_endStream@@Base+0x2dc94>  // b.any
   3bbd8:	mov	w8, #0x11                  	// #17
   3bbdc:	cmp	w8, #0x13
   3bbe0:	b.ls	3d2b0 <ZSTD_endStream@@Base+0x2f35c>  // b.plast
   3bbe4:	b	3a73c <ZSTD_endStream@@Base+0x2c7e8>
   3bbe8:	add	w9, w20, #0x1
   3bbec:	umull	x9, w9, w23
   3bbf0:	ldr	w10, [x8]
   3bbf4:	ldr	w8, [x26, x9]
   3bbf8:	add	w9, w10, #0x80
   3bbfc:	cmp	w8, w9
   3bc00:	b.le	3ca94 <ZSTD_endStream@@Base+0x2eb40>
   3bc04:	ldur	x28, [x29, #-80]
   3bc08:	madd	x9, x28, x23, x26
   3bc0c:	ldr	w25, [x9, #8]!
   3bc10:	stur	w20, [x29, #-116]
   3bc14:	str	w0, [sp, #192]
   3bc18:	str	w10, [sp, #184]
   3bc1c:	cmp	w25, #0x0
   3bc20:	cset	w8, ne  // ne = any
   3bc24:	stur	w8, [x29, #-240]
   3bc28:	str	x9, [sp, #128]
   3bc2c:	cbz	w25, 3bc38 <ZSTD_endStream@@Base+0x2dce4>
   3bc30:	stur	wzr, [x29, #-128]
   3bc34:	b	3bc44 <ZSTD_endStream@@Base+0x2dcf0>
   3bc38:	madd	x8, x28, x23, x26
   3bc3c:	ldr	w8, [x8, #12]
   3bc40:	stur	w8, [x29, #-128]
   3bc44:	ldur	x1, [x29, #-216]
   3bc48:	mov	w0, wzr
   3bc4c:	mov	w2, wzr
   3bc50:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3bc54:	ldr	x21, [x22, #8]
   3bc58:	ldr	w22, [x22, #36]
   3bc5c:	mov	w20, wzr
   3bc60:	str	w0, [sp, #100]
   3bc64:	add	x8, x21, x22
   3bc68:	cmp	x8, x19
   3bc6c:	b.hi	3cf8c <ZSTD_endStream@@Base+0x2f038>  // b.pmore
   3bc70:	mov	x8, x26
   3bc74:	ldur	x26, [x29, #-72]
   3bc78:	stur	w25, [x29, #-112]
   3bc7c:	ldur	x25, [x29, #-184]
   3bc80:	mov	w9, #0x1c                  	// #28
   3bc84:	ldr	w20, [x26, #200]
   3bc88:	sub	w23, w19, w21
   3bc8c:	cmp	w22, w23
   3bc90:	madd	x24, x28, x9, x8
   3bc94:	b.cs	3bcbc <ZSTD_endStream@@Base+0x2dd68>  // b.hs, b.nlast
   3bc98:	add	x1, x21, w22, uxtw
   3bc9c:	mov	w4, #0x1                   	// #1
   3bca0:	mov	x0, x26
   3bca4:	mov	x2, x25
   3bca8:	mov	w3, w20
   3bcac:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   3bcb0:	add	w22, w0, w22
   3bcb4:	cmp	w22, w23
   3bcb8:	b.cc	3bc98 <ZSTD_endStream@@Base+0x2dd44>  // b.lo, b.ul, b.last
   3bcbc:	add	x8, x24, #0x10
   3bcc0:	stur	x8, [x29, #-88]
   3bcc4:	sub	w8, w20, #0x6
   3bcc8:	cmp	w8, #0x2
   3bccc:	mov	x22, x26
   3bcd0:	str	w23, [x26, #36]
   3bcd4:	b.cc	3bfe8 <ZSTD_endStream@@Base+0x2e094>  // b.lo, b.ul, b.last
   3bcd8:	cmp	w20, #0x5
   3bcdc:	lsl	x8, x28, #3
   3bce0:	stur	x8, [x29, #-160]
   3bce4:	b.eq	3c2e0 <ZSTD_endStream@@Base+0x2e38c>  // b.none
   3bce8:	ldur	x24, [x29, #-200]
   3bcec:	cmp	w20, #0x3
   3bcf0:	mov	w9, #0xfff                 	// #4095
   3bcf4:	b.ne	3c5bc <ZSTD_endStream@@Base+0x2e668>  // b.any
   3bcf8:	ldr	w8, [x22, #204]
   3bcfc:	ldr	x23, [x22, #8]
   3bd00:	ldr	w1, [x22, #192]
   3bd04:	ldr	x20, [x22, #48]
   3bd08:	cmp	w8, #0xfff
   3bd0c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3bd10:	mov	w2, #0x3                   	// #3
   3bd14:	mov	x0, x19
   3bd18:	str	w8, [sp, #208]
   3bd1c:	sub	w25, w19, w23
   3bd20:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3bd24:	stp	x0, x20, [sp]
   3bd28:	ldr	w8, [x20, x0, lsl #2]
   3bd2c:	ldr	x9, [x22, #64]
   3bd30:	ldr	x26, [x22, #16]
   3bd34:	ldr	w21, [x22, #24]
   3bd38:	str	w8, [sp, #136]
   3bd3c:	ldp	w2, w8, [x22, #184]
   3bd40:	str	x9, [sp, #56]
   3bd44:	mov	w9, #0xffffffff            	// #-1
   3bd48:	mov	x0, x22
   3bd4c:	sub	w8, w8, #0x1
   3bd50:	lsl	w20, w9, w8
   3bd54:	mvn	w8, w20
   3bd58:	str	w8, [sp, #28]
   3bd5c:	subs	w8, w25, w8
   3bd60:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3bd64:	mov	w1, w25
   3bd68:	str	w8, [sp, #16]
   3bd6c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3bd70:	cmp	w0, #0x0
   3bd74:	sub	w9, w25, w21
   3bd78:	add	x11, x19, #0x3
   3bd7c:	stur	w9, [x29, #-104]
   3bd80:	sub	w9, w25, w0
   3bd84:	str	x11, [sp, #152]
   3bd88:	csinc	w11, w0, wzr, ne  // ne = any
   3bd8c:	str	w9, [sp, #176]
   3bd90:	ldur	x9, [x29, #-160]
   3bd94:	str	w11, [sp, #88]
   3bd98:	ldur	w11, [x29, #-112]
   3bd9c:	mov	x8, x28
   3bda0:	sub	x8, x9, x8
   3bda4:	add	x9, x26, x21
   3bda8:	cmp	w11, #0x0
   3bdac:	ldr	x11, [sp, #56]
   3bdb0:	str	x9, [sp, #80]
   3bdb4:	add	x9, x23, x21
   3bdb8:	str	x9, [sp, #72]
   3bdbc:	bic	w9, w25, w20
   3bdc0:	add	w10, w25, #0x9
   3bdc4:	lsl	w9, w9, #1
   3bdc8:	str	w10, [sp, #144]
   3bdcc:	ldr	w10, [x22, #196]
   3bdd0:	add	x11, x11, w9, uxtw #2
   3bdd4:	mov	w9, #0x3                   	// #3
   3bdd8:	str	x26, [sp, #160]
   3bddc:	cinc	x9, x9, ne  // ne = any
   3bde0:	ldr	x26, [sp, #112]
   3bde4:	ldr	w12, [sp, #192]
   3bde8:	stur	x9, [x29, #-112]
   3bdec:	add	x9, x11, #0x4
   3bdf0:	cinc	x8, x8, ne  // ne = any
   3bdf4:	stp	x9, x11, [sp, #40]
   3bdf8:	mov	w9, #0x1                   	// #1
   3bdfc:	mov	x28, xzr
   3be00:	mov	w13, wzr
   3be04:	cset	w14, ne  // ne = any
   3be08:	lsl	w9, w9, w10
   3be0c:	add	x8, x24, x8, lsl #2
   3be10:	str	x23, [sp, #64]
   3be14:	stur	x21, [x29, #-160]
   3be18:	str	w25, [sp, #168]
   3be1c:	str	w9, [sp, #240]
   3be20:	stur	x8, [x29, #-208]
   3be24:	stur	x14, [x29, #-152]
   3be28:	add	x8, x14, x28
   3be2c:	cmp	x8, #0x3
   3be30:	b.eq	3be40 <ZSTD_endStream@@Base+0x2deec>  // b.none
   3be34:	ldur	x8, [x29, #-208]
   3be38:	ldr	w23, [x8, x28, lsl #2]
   3be3c:	b	3be4c <ZSTD_endStream@@Base+0x2def8>
   3be40:	ldur	x8, [x29, #-88]
   3be44:	ldr	w8, [x8]
   3be48:	sub	w23, w8, #0x1
   3be4c:	ldur	w9, [x29, #-104]
   3be50:	sub	w8, w23, #0x1
   3be54:	cmp	w8, w9
   3be58:	b.cs	3beb0 <ZSTD_endStream@@Base+0x2df5c>  // b.hs, b.nlast
   3be5c:	mov	w1, #0x3                   	// #3
   3be60:	mov	x0, x19
   3be64:	mov	x22, x26
   3be68:	mov	w26, w13
   3be6c:	mov	w25, w12
   3be70:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3be74:	mov	w23, w23
   3be78:	mov	w20, w0
   3be7c:	sub	x0, x19, x23
   3be80:	mov	w1, #0x3                   	// #3
   3be84:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3be88:	cmp	w20, w0
   3be8c:	b.ne	3bf34 <ZSTD_endStream@@Base+0x2dfe0>  // b.any
   3be90:	ldr	x0, [sp, #152]
   3be94:	ldur	x2, [x29, #-184]
   3be98:	neg	x8, x23
   3be9c:	add	x1, x0, x8
   3bea0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3bea4:	add	w8, w0, #0x3
   3bea8:	mov	w23, #0x1c                  	// #28
   3beac:	b	3bf50 <ZSTD_endStream@@Base+0x2dffc>
   3beb0:	ldr	w9, [sp, #176]
   3beb4:	cmp	w8, w9
   3beb8:	mov	w8, wzr
   3bebc:	b.cs	3bf40 <ZSTD_endStream@@Base+0x2dfec>  // b.hs, b.nlast
   3bec0:	ldr	w9, [sp, #168]
   3bec4:	ldur	x11, [x29, #-160]
   3bec8:	sub	w9, w9, w23
   3becc:	mvn	w10, w9
   3bed0:	add	w10, w11, w10
   3bed4:	cmp	w10, #0x3
   3bed8:	mov	w23, #0x1c                  	// #28
   3bedc:	b.cc	3bf60 <ZSTD_endStream@@Base+0x2e00c>  // b.lo, b.ul, b.last
   3bee0:	ldr	x8, [sp, #160]
   3bee4:	mov	w1, #0x3                   	// #3
   3bee8:	mov	x0, x19
   3beec:	mov	x22, x26
   3bef0:	mov	w26, w13
   3bef4:	mov	w25, w12
   3bef8:	add	x20, x8, w9, uxtw
   3befc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3bf00:	mov	w24, w0
   3bf04:	mov	w1, #0x3                   	// #3
   3bf08:	mov	x0, x20
   3bf0c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3bf10:	cmp	w24, w0
   3bf14:	b.ne	3bf48 <ZSTD_endStream@@Base+0x2dff4>  // b.any
   3bf18:	ldr	x0, [sp, #152]
   3bf1c:	ldur	x2, [x29, #-184]
   3bf20:	ldp	x4, x3, [sp, #72]
   3bf24:	add	x1, x20, #0x3
   3bf28:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3bf2c:	add	w8, w0, #0x3
   3bf30:	b	3bf4c <ZSTD_endStream@@Base+0x2dff8>
   3bf34:	mov	w8, wzr
   3bf38:	mov	w23, #0x1c                  	// #28
   3bf3c:	b	3bf50 <ZSTD_endStream@@Base+0x2dffc>
   3bf40:	mov	w23, #0x1c                  	// #28
   3bf44:	b	3bf60 <ZSTD_endStream@@Base+0x2e00c>
   3bf48:	mov	w8, wzr
   3bf4c:	ldur	x24, [x29, #-200]
   3bf50:	ldur	x14, [x29, #-152]
   3bf54:	mov	w12, w25
   3bf58:	mov	w13, w26
   3bf5c:	mov	x26, x22
   3bf60:	mov	w9, w8
   3bf64:	cmp	x26, x9
   3bf68:	b.cs	3bfa8 <ZSTD_endStream@@Base+0x2e054>  // b.hs, b.nlast
   3bf6c:	ldur	x10, [x29, #-176]
   3bf70:	ldr	w11, [sp, #208]
   3bf74:	add	x10, x10, w13, uxtw #3
   3bf78:	add	w13, w13, #0x1
   3bf7c:	cmp	w8, w11
   3bf80:	stp	w28, w8, [x10]
   3bf84:	mov	w8, #0x1                   	// #1
   3bf88:	b.hi	3bfd8 <ZSTD_endStream@@Base+0x2e084>  // b.pmore
   3bf8c:	ldur	x11, [x29, #-184]
   3bf90:	add	x10, x19, x9
   3bf94:	mov	x26, x9
   3bf98:	mov	w20, w13
   3bf9c:	cmp	x10, x11
   3bfa0:	b.ne	3bfac <ZSTD_endStream@@Base+0x2e058>  // b.any
   3bfa4:	b	3bfb8 <ZSTD_endStream@@Base+0x2e064>
   3bfa8:	mov	x9, x26
   3bfac:	mov	w8, wzr
   3bfb0:	mov	x26, x9
   3bfb4:	mov	w20, w21
   3bfb8:	cbnz	w8, 3ca78 <ZSTD_endStream@@Base+0x2eb24>
   3bfbc:	ldur	x9, [x29, #-112]
   3bfc0:	add	x28, x28, #0x1
   3bfc4:	add	x8, x14, x28
   3bfc8:	mov	w21, w20
   3bfcc:	cmp	x8, x9
   3bfd0:	b.cc	3be28 <ZSTD_endStream@@Base+0x2ded4>  // b.lo, b.ul, b.last
   3bfd4:	b	3ca74 <ZSTD_endStream@@Base+0x2eb20>
   3bfd8:	mov	x26, x9
   3bfdc:	mov	w20, w13
   3bfe0:	cbz	w8, 3bfbc <ZSTD_endStream@@Base+0x2e068>
   3bfe4:	b	3ca78 <ZSTD_endStream@@Base+0x2eb24>
   3bfe8:	ldr	w8, [x22, #204]
   3bfec:	ldr	x21, [x22, #8]
   3bff0:	ldr	w1, [x22, #192]
   3bff4:	ldr	x20, [x22, #48]
   3bff8:	cmp	w8, #0xfff
   3bffc:	mov	w9, #0xfff                 	// #4095
   3c000:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3c004:	mov	w2, #0x6                   	// #6
   3c008:	mov	x0, x19
   3c00c:	str	w8, [sp, #240]
   3c010:	sub	w26, w19, w21
   3c014:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3c018:	stp	x0, x20, [sp, #8]
   3c01c:	ldr	w8, [x20, x0, lsl #2]
   3c020:	mov	w9, #0xffffffff            	// #-1
   3c024:	ldr	x23, [x22, #64]
   3c028:	ldr	x25, [x22, #16]
   3c02c:	str	w8, [sp, #28]
   3c030:	ldp	w2, w8, [x22, #184]
   3c034:	ldr	w24, [x22, #24]
   3c038:	mov	x0, x22
   3c03c:	mov	w1, w26
   3c040:	sub	w8, w8, #0x1
   3c044:	lsl	w20, w9, w8
   3c048:	mvn	w8, w20
   3c04c:	str	w8, [sp, #48]
   3c050:	subs	w8, w26, w8
   3c054:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3c058:	str	w8, [sp, #40]
   3c05c:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3c060:	cmp	w0, #0x0
   3c064:	add	x11, x19, #0x4
   3c068:	mov	x15, x24
   3c06c:	str	x11, [sp, #152]
   3c070:	csinc	w11, w0, wzr, ne  // ne = any
   3c074:	add	x9, x25, x15
   3c078:	str	w11, [sp, #144]
   3c07c:	ldur	w11, [x29, #-112]
   3c080:	str	x9, [sp, #88]
   3c084:	add	x9, x21, x15
   3c088:	sub	w8, w26, w15
   3c08c:	str	x9, [sp, #80]
   3c090:	bic	w9, w26, w20
   3c094:	add	w10, w26, #0x9
   3c098:	stur	w8, [x29, #-104]
   3c09c:	sub	w8, w26, w0
   3c0a0:	str	w10, [sp, #160]
   3c0a4:	ldr	w10, [x22, #196]
   3c0a8:	lsl	w9, w9, #1
   3c0ac:	str	w8, [sp, #208]
   3c0b0:	lsl	x8, x28, #3
   3c0b4:	cmp	w11, #0x0
   3c0b8:	add	x11, x23, w9, uxtw #2
   3c0bc:	mov	w9, #0x3                   	// #3
   3c0c0:	sub	x8, x8, x28
   3c0c4:	cinc	x28, x9, ne  // ne = any
   3c0c8:	add	x9, x11, #0x4
   3c0cc:	stp	x23, x9, [sp, #56]
   3c0d0:	mov	w9, #0x1                   	// #1
   3c0d4:	lsl	w9, w9, w10
   3c0d8:	stur	w9, [x29, #-160]
   3c0dc:	ldur	x9, [x29, #-200]
   3c0e0:	str	x25, [sp, #176]
   3c0e4:	str	w26, [sp, #168]
   3c0e8:	ldr	x25, [sp, #112]
   3c0ec:	ldur	x26, [x29, #-96]
   3c0f0:	cinc	x8, x8, ne  // ne = any
   3c0f4:	mov	x24, xzr
   3c0f8:	mov	w14, wzr
   3c0fc:	cset	w22, ne  // ne = any
   3c100:	add	x8, x9, x8, lsl #2
   3c104:	str	x21, [sp, #136]
   3c108:	str	x11, [sp, #72]
   3c10c:	stur	x8, [x29, #-208]
   3c110:	stur	x15, [x29, #-112]
   3c114:	stur	x19, [x29, #-152]
   3c118:	add	x8, x22, x24
   3c11c:	cmp	x8, #0x3
   3c120:	b.eq	3c130 <ZSTD_endStream@@Base+0x2e1dc>  // b.none
   3c124:	ldur	x8, [x29, #-208]
   3c128:	ldr	w23, [x8, x24, lsl #2]
   3c12c:	b	3c13c <ZSTD_endStream@@Base+0x2e1e8>
   3c130:	ldur	x8, [x29, #-88]
   3c134:	ldr	w8, [x8]
   3c138:	sub	w23, w8, #0x1
   3c13c:	ldur	w9, [x29, #-104]
   3c140:	sub	w8, w23, #0x1
   3c144:	cmp	w8, w9
   3c148:	b.cs	3c1a0 <ZSTD_endStream@@Base+0x2e24c>  // b.hs, b.nlast
   3c14c:	mov	w1, #0x4                   	// #4
   3c150:	mov	x0, x19
   3c154:	mov	x27, x22
   3c158:	mov	x22, x28
   3c15c:	mov	x28, x25
   3c160:	mov	w25, w14
   3c164:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c168:	mov	w23, w23
   3c16c:	mov	w20, w0
   3c170:	sub	x0, x19, x23
   3c174:	mov	w1, #0x4                   	// #4
   3c178:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c17c:	cmp	w20, w0
   3c180:	b.ne	3c21c <ZSTD_endStream@@Base+0x2e2c8>  // b.any
   3c184:	ldr	x0, [sp, #152]
   3c188:	ldur	x2, [x29, #-184]
   3c18c:	neg	x8, x23
   3c190:	add	x1, x0, x8
   3c194:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3c198:	add	w8, w0, #0x4
   3c19c:	b	3c220 <ZSTD_endStream@@Base+0x2e2cc>
   3c1a0:	ldr	w9, [sp, #208]
   3c1a4:	cmp	w8, w9
   3c1a8:	mov	w8, wzr
   3c1ac:	b.cs	3c23c <ZSTD_endStream@@Base+0x2e2e8>  // b.hs, b.nlast
   3c1b0:	ldr	w9, [sp, #168]
   3c1b4:	sub	w9, w9, w23
   3c1b8:	mvn	w10, w9
   3c1bc:	add	w10, w15, w10
   3c1c0:	cmp	w10, #0x3
   3c1c4:	mov	w23, #0x1c                  	// #28
   3c1c8:	b.cc	3c25c <ZSTD_endStream@@Base+0x2e308>  // b.lo, b.ul, b.last
   3c1cc:	ldr	x8, [sp, #176]
   3c1d0:	mov	x0, x19
   3c1d4:	mov	w1, #0x4                   	// #4
   3c1d8:	mov	x19, x25
   3c1dc:	mov	w25, w14
   3c1e0:	add	x20, x8, w9, uxtw
   3c1e4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c1e8:	mov	w26, w0
   3c1ec:	mov	w1, #0x4                   	// #4
   3c1f0:	mov	x0, x20
   3c1f4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c1f8:	cmp	w26, w0
   3c1fc:	b.ne	3c244 <ZSTD_endStream@@Base+0x2e2f0>  // b.any
   3c200:	ldr	x0, [sp, #152]
   3c204:	ldur	x2, [x29, #-184]
   3c208:	ldp	x4, x3, [sp, #80]
   3c20c:	add	x1, x20, #0x4
   3c210:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3c214:	add	w8, w0, #0x4
   3c218:	b	3c248 <ZSTD_endStream@@Base+0x2e2f4>
   3c21c:	mov	w8, wzr
   3c220:	mov	w14, w25
   3c224:	ldur	x15, [x29, #-112]
   3c228:	mov	x25, x28
   3c22c:	ldur	x19, [x29, #-152]
   3c230:	mov	x28, x22
   3c234:	mov	x22, x27
   3c238:	ldr	x27, [sp, #224]
   3c23c:	mov	w23, #0x1c                  	// #28
   3c240:	b	3c25c <ZSTD_endStream@@Base+0x2e308>
   3c244:	mov	w8, wzr
   3c248:	ldur	x26, [x29, #-96]
   3c24c:	mov	w14, w25
   3c250:	ldur	x15, [x29, #-112]
   3c254:	mov	x25, x19
   3c258:	ldur	x19, [x29, #-152]
   3c25c:	mov	w9, w8
   3c260:	cmp	x25, x9
   3c264:	b.cs	3c2a4 <ZSTD_endStream@@Base+0x2e350>  // b.hs, b.nlast
   3c268:	ldur	x10, [x29, #-176]
   3c26c:	ldr	w11, [sp, #240]
   3c270:	add	x10, x10, w14, uxtw #3
   3c274:	add	w14, w14, #0x1
   3c278:	cmp	w8, w11
   3c27c:	stp	w24, w8, [x10]
   3c280:	mov	w8, #0x1                   	// #1
   3c284:	b.hi	3c2d0 <ZSTD_endStream@@Base+0x2e37c>  // b.pmore
   3c288:	ldur	x11, [x29, #-184]
   3c28c:	add	x10, x19, x9
   3c290:	mov	x25, x9
   3c294:	mov	w20, w14
   3c298:	cmp	x10, x11
   3c29c:	b.ne	3c2a8 <ZSTD_endStream@@Base+0x2e354>  // b.any
   3c2a0:	b	3c2b4 <ZSTD_endStream@@Base+0x2e360>
   3c2a4:	mov	x9, x25
   3c2a8:	mov	w8, wzr
   3c2ac:	mov	x25, x9
   3c2b0:	mov	w20, w21
   3c2b4:	cbnz	w8, 3c898 <ZSTD_endStream@@Base+0x2e944>
   3c2b8:	add	x24, x24, #0x1
   3c2bc:	add	x8, x22, x24
   3c2c0:	cmp	x8, x28
   3c2c4:	mov	w21, w20
   3c2c8:	b.cc	3c118 <ZSTD_endStream@@Base+0x2e1c4>  // b.lo, b.ul, b.last
   3c2cc:	b	3c894 <ZSTD_endStream@@Base+0x2e940>
   3c2d0:	mov	x25, x9
   3c2d4:	mov	w20, w14
   3c2d8:	cbz	w8, 3c2b8 <ZSTD_endStream@@Base+0x2e364>
   3c2dc:	b	3c898 <ZSTD_endStream@@Base+0x2e944>
   3c2e0:	ldr	w8, [x22, #204]
   3c2e4:	ldr	x21, [x22, #8]
   3c2e8:	ldr	w1, [x22, #192]
   3c2ec:	ldr	x20, [x22, #48]
   3c2f0:	cmp	w8, #0xfff
   3c2f4:	mov	w9, #0xfff                 	// #4095
   3c2f8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3c2fc:	mov	w2, #0x5                   	// #5
   3c300:	mov	x0, x19
   3c304:	stur	w8, [x29, #-208]
   3c308:	sub	w23, w19, w21
   3c30c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3c310:	stp	x0, x20, [sp, #8]
   3c314:	ldr	w8, [x20, x0, lsl #2]
   3c318:	ldr	x9, [x22, #64]
   3c31c:	ldr	x24, [x22, #16]
   3c320:	ldr	w25, [x22, #24]
   3c324:	str	w8, [sp, #40]
   3c328:	ldp	w2, w8, [x22, #184]
   3c32c:	str	x9, [sp, #136]
   3c330:	mov	w9, #0xffffffff            	// #-1
   3c334:	mov	x0, x22
   3c338:	sub	w8, w8, #0x1
   3c33c:	lsl	w20, w9, w8
   3c340:	mvn	w8, w20
   3c344:	str	w8, [sp, #56]
   3c348:	subs	w8, w23, w8
   3c34c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3c350:	mov	w1, w23
   3c354:	str	w8, [sp, #48]
   3c358:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3c35c:	cmp	w0, #0x0
   3c360:	add	x11, x19, #0x4
   3c364:	str	x11, [sp, #160]
   3c368:	csinc	w11, w0, wzr, ne  // ne = any
   3c36c:	str	w11, [sp, #152]
   3c370:	ldur	w11, [x29, #-112]
   3c374:	sub	w8, w23, w25
   3c378:	add	x9, x24, x25
   3c37c:	stur	w8, [x29, #-104]
   3c380:	cmp	w11, #0x0
   3c384:	ldr	x11, [sp, #136]
   3c388:	sub	w8, w23, w0
   3c38c:	str	x9, [sp, #80]
   3c390:	add	x9, x21, x25
   3c394:	str	w8, [sp, #240]
   3c398:	ldur	x8, [x29, #-160]
   3c39c:	str	x9, [sp, #88]
   3c3a0:	bic	w9, w23, w20
   3c3a4:	add	w10, w23, #0x9
   3c3a8:	lsl	w9, w9, #1
   3c3ac:	str	x24, [sp, #208]
   3c3b0:	str	w10, [sp, #168]
   3c3b4:	ldr	w10, [x22, #196]
   3c3b8:	add	x11, x11, w9, uxtw #2
   3c3bc:	mov	w9, #0x3                   	// #3
   3c3c0:	ldur	x24, [x29, #-200]
   3c3c4:	cinc	x9, x9, ne  // ne = any
   3c3c8:	ldr	x12, [sp, #112]
   3c3cc:	sub	x8, x8, x28
   3c3d0:	stur	x9, [x29, #-112]
   3c3d4:	add	x9, x11, #0x4
   3c3d8:	cinc	x8, x8, ne  // ne = any
   3c3dc:	stp	x9, x11, [sp, #64]
   3c3e0:	mov	w9, #0x1                   	// #1
   3c3e4:	mov	x26, xzr
   3c3e8:	mov	w14, wzr
   3c3ec:	cset	w22, ne  // ne = any
   3c3f0:	lsl	w9, w9, w10
   3c3f4:	add	x8, x24, x8, lsl #2
   3c3f8:	str	x21, [sp, #144]
   3c3fc:	stur	x25, [x29, #-152]
   3c400:	str	w23, [sp, #176]
   3c404:	str	w9, [sp, #28]
   3c408:	stur	x8, [x29, #-160]
   3c40c:	add	x8, x22, x26
   3c410:	cmp	x8, #0x3
   3c414:	b.eq	3c424 <ZSTD_endStream@@Base+0x2e4d0>  // b.none
   3c418:	ldur	x8, [x29, #-160]
   3c41c:	ldr	w23, [x8, x26, lsl #2]
   3c420:	b	3c430 <ZSTD_endStream@@Base+0x2e4dc>
   3c424:	ldur	x8, [x29, #-88]
   3c428:	ldr	w8, [x8]
   3c42c:	sub	w23, w8, #0x1
   3c430:	ldur	w9, [x29, #-104]
   3c434:	sub	w8, w23, #0x1
   3c438:	cmp	w8, w9
   3c43c:	b.cs	3c490 <ZSTD_endStream@@Base+0x2e53c>  // b.hs, b.nlast
   3c440:	mov	w1, #0x4                   	// #4
   3c444:	mov	x0, x19
   3c448:	mov	x28, x12
   3c44c:	mov	w25, w14
   3c450:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c454:	mov	w23, w23
   3c458:	mov	w20, w0
   3c45c:	sub	x0, x19, x23
   3c460:	mov	w1, #0x4                   	// #4
   3c464:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c468:	cmp	w20, w0
   3c46c:	b.ne	3c510 <ZSTD_endStream@@Base+0x2e5bc>  // b.any
   3c470:	ldr	x0, [sp, #160]
   3c474:	ldur	x2, [x29, #-184]
   3c478:	neg	x8, x23
   3c47c:	add	x1, x0, x8
   3c480:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3c484:	add	w8, w0, #0x4
   3c488:	mov	w23, #0x1c                  	// #28
   3c48c:	b	3c52c <ZSTD_endStream@@Base+0x2e5d8>
   3c490:	ldr	w9, [sp, #240]
   3c494:	cmp	w8, w9
   3c498:	mov	w8, wzr
   3c49c:	b.cs	3c51c <ZSTD_endStream@@Base+0x2e5c8>  // b.hs, b.nlast
   3c4a0:	ldr	w9, [sp, #176]
   3c4a4:	ldur	x11, [x29, #-152]
   3c4a8:	sub	w9, w9, w23
   3c4ac:	mvn	w10, w9
   3c4b0:	add	w10, w11, w10
   3c4b4:	cmp	w10, #0x3
   3c4b8:	mov	w23, #0x1c                  	// #28
   3c4bc:	b.cc	3c534 <ZSTD_endStream@@Base+0x2e5e0>  // b.lo, b.ul, b.last
   3c4c0:	ldr	x8, [sp, #208]
   3c4c4:	mov	w1, #0x4                   	// #4
   3c4c8:	mov	x0, x19
   3c4cc:	mov	x28, x12
   3c4d0:	mov	w25, w14
   3c4d4:	add	x20, x8, w9, uxtw
   3c4d8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c4dc:	mov	w24, w0
   3c4e0:	mov	w1, #0x4                   	// #4
   3c4e4:	mov	x0, x20
   3c4e8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c4ec:	cmp	w24, w0
   3c4f0:	b.ne	3c524 <ZSTD_endStream@@Base+0x2e5d0>  // b.any
   3c4f4:	ldr	x0, [sp, #160]
   3c4f8:	ldur	x2, [x29, #-184]
   3c4fc:	ldp	x3, x4, [sp, #80]
   3c500:	add	x1, x20, #0x4
   3c504:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3c508:	add	w8, w0, #0x4
   3c50c:	b	3c528 <ZSTD_endStream@@Base+0x2e5d4>
   3c510:	mov	w8, wzr
   3c514:	mov	w23, #0x1c                  	// #28
   3c518:	b	3c52c <ZSTD_endStream@@Base+0x2e5d8>
   3c51c:	mov	w23, #0x1c                  	// #28
   3c520:	b	3c534 <ZSTD_endStream@@Base+0x2e5e0>
   3c524:	mov	w8, wzr
   3c528:	ldur	x24, [x29, #-200]
   3c52c:	mov	w14, w25
   3c530:	mov	x12, x28
   3c534:	mov	w9, w8
   3c538:	cmp	x12, x9
   3c53c:	b.cs	3c57c <ZSTD_endStream@@Base+0x2e628>  // b.hs, b.nlast
   3c540:	ldur	x10, [x29, #-176]
   3c544:	ldur	w11, [x29, #-208]
   3c548:	add	x10, x10, w14, uxtw #3
   3c54c:	add	w14, w14, #0x1
   3c550:	cmp	w8, w11
   3c554:	stp	w26, w8, [x10]
   3c558:	mov	w8, #0x1                   	// #1
   3c55c:	b.hi	3c5ac <ZSTD_endStream@@Base+0x2e658>  // b.pmore
   3c560:	ldur	x11, [x29, #-184]
   3c564:	add	x10, x19, x9
   3c568:	mov	x12, x9
   3c56c:	mov	w20, w14
   3c570:	cmp	x10, x11
   3c574:	b.ne	3c580 <ZSTD_endStream@@Base+0x2e62c>  // b.any
   3c578:	b	3c58c <ZSTD_endStream@@Base+0x2e638>
   3c57c:	mov	x9, x12
   3c580:	mov	w8, wzr
   3c584:	mov	x12, x9
   3c588:	mov	w20, w21
   3c58c:	cbnz	w8, 3caa8 <ZSTD_endStream@@Base+0x2eb54>
   3c590:	ldur	x9, [x29, #-112]
   3c594:	add	x26, x26, #0x1
   3c598:	add	x8, x22, x26
   3c59c:	mov	w21, w20
   3c5a0:	cmp	x8, x9
   3c5a4:	b.cc	3c40c <ZSTD_endStream@@Base+0x2e4b8>  // b.lo, b.ul, b.last
   3c5a8:	b	3caa4 <ZSTD_endStream@@Base+0x2eb50>
   3c5ac:	mov	x12, x9
   3c5b0:	mov	w20, w14
   3c5b4:	cbz	w8, 3c590 <ZSTD_endStream@@Base+0x2e63c>
   3c5b8:	b	3caa8 <ZSTD_endStream@@Base+0x2eb54>
   3c5bc:	ldr	w8, [x22, #204]
   3c5c0:	ldr	x10, [x22, #8]
   3c5c4:	ldr	w1, [x22, #192]
   3c5c8:	ldr	x20, [x22, #48]
   3c5cc:	cmp	w8, #0xfff
   3c5d0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3c5d4:	mov	w2, #0x4                   	// #4
   3c5d8:	mov	x0, x19
   3c5dc:	str	x10, [sp, #176]
   3c5e0:	stur	w8, [x29, #-208]
   3c5e4:	sub	w21, w19, w10
   3c5e8:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3c5ec:	stp	x0, x20, [sp, #8]
   3c5f0:	ldr	w8, [x20, x0, lsl #2]
   3c5f4:	ldr	x9, [x22, #64]
   3c5f8:	ldr	x25, [x22, #16]
   3c5fc:	ldr	w23, [x22, #24]
   3c600:	str	w8, [sp, #40]
   3c604:	ldp	w2, w8, [x22, #184]
   3c608:	str	x9, [sp, #136]
   3c60c:	mov	w9, #0xffffffff            	// #-1
   3c610:	mov	x0, x22
   3c614:	sub	w8, w8, #0x1
   3c618:	lsl	w20, w9, w8
   3c61c:	mvn	w8, w20
   3c620:	str	w8, [sp, #56]
   3c624:	subs	w8, w21, w8
   3c628:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3c62c:	mov	w1, w21
   3c630:	str	w8, [sp, #48]
   3c634:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3c638:	cmp	w0, #0x0
   3c63c:	add	x11, x19, #0x4
   3c640:	str	x11, [sp, #152]
   3c644:	csinc	w11, w0, wzr, ne  // ne = any
   3c648:	add	x9, x25, x23
   3c64c:	str	w11, [sp, #144]
   3c650:	ldur	w11, [x29, #-112]
   3c654:	str	x9, [sp, #80]
   3c658:	ldr	x9, [sp, #176]
   3c65c:	sub	w8, w21, w23
   3c660:	cmp	w11, #0x0
   3c664:	ldr	x11, [sp, #136]
   3c668:	stur	w8, [x29, #-104]
   3c66c:	sub	w8, w21, w0
   3c670:	add	x9, x9, x23
   3c674:	str	w8, [sp, #240]
   3c678:	ldur	x8, [x29, #-160]
   3c67c:	str	x9, [sp, #88]
   3c680:	bic	w9, w21, w20
   3c684:	add	w10, w21, #0x9
   3c688:	lsl	w9, w9, #1
   3c68c:	str	w10, [sp, #160]
   3c690:	ldr	w10, [x22, #196]
   3c694:	add	x11, x11, w9, uxtw #2
   3c698:	mov	w9, #0x3                   	// #3
   3c69c:	cinc	x9, x9, ne  // ne = any
   3c6a0:	ldr	x12, [sp, #112]
   3c6a4:	sub	x8, x8, x28
   3c6a8:	stur	x9, [x29, #-112]
   3c6ac:	add	x9, x11, #0x4
   3c6b0:	cinc	x8, x8, ne  // ne = any
   3c6b4:	stp	x9, x11, [sp, #64]
   3c6b8:	mov	w9, #0x1                   	// #1
   3c6bc:	mov	x26, xzr
   3c6c0:	mov	w14, wzr
   3c6c4:	cset	w22, ne  // ne = any
   3c6c8:	lsl	w9, w9, w10
   3c6cc:	add	x8, x24, x8, lsl #2
   3c6d0:	str	x25, [sp, #208]
   3c6d4:	stur	x23, [x29, #-152]
   3c6d8:	str	w21, [sp, #168]
   3c6dc:	str	w9, [sp, #28]
   3c6e0:	stur	x8, [x29, #-160]
   3c6e4:	add	x8, x22, x26
   3c6e8:	cmp	x8, #0x3
   3c6ec:	b.eq	3c6fc <ZSTD_endStream@@Base+0x2e7a8>  // b.none
   3c6f0:	ldur	x8, [x29, #-160]
   3c6f4:	ldr	w23, [x8, x26, lsl #2]
   3c6f8:	b	3c708 <ZSTD_endStream@@Base+0x2e7b4>
   3c6fc:	ldur	x8, [x29, #-88]
   3c700:	ldr	w8, [x8]
   3c704:	sub	w23, w8, #0x1
   3c708:	ldur	w9, [x29, #-104]
   3c70c:	sub	w8, w23, #0x1
   3c710:	cmp	w8, w9
   3c714:	b.cs	3c768 <ZSTD_endStream@@Base+0x2e814>  // b.hs, b.nlast
   3c718:	mov	w1, #0x4                   	// #4
   3c71c:	mov	x0, x19
   3c720:	mov	x28, x12
   3c724:	mov	w25, w14
   3c728:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c72c:	mov	w23, w23
   3c730:	mov	w20, w0
   3c734:	sub	x0, x19, x23
   3c738:	mov	w1, #0x4                   	// #4
   3c73c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c740:	cmp	w20, w0
   3c744:	b.ne	3c7e8 <ZSTD_endStream@@Base+0x2e894>  // b.any
   3c748:	ldr	x0, [sp, #152]
   3c74c:	ldur	x2, [x29, #-184]
   3c750:	neg	x8, x23
   3c754:	add	x1, x0, x8
   3c758:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3c75c:	add	w8, w0, #0x4
   3c760:	mov	w23, #0x1c                  	// #28
   3c764:	b	3c804 <ZSTD_endStream@@Base+0x2e8b0>
   3c768:	ldr	w9, [sp, #240]
   3c76c:	cmp	w8, w9
   3c770:	mov	w8, wzr
   3c774:	b.cs	3c7f4 <ZSTD_endStream@@Base+0x2e8a0>  // b.hs, b.nlast
   3c778:	ldr	w9, [sp, #168]
   3c77c:	ldur	x11, [x29, #-152]
   3c780:	sub	w9, w9, w23
   3c784:	mvn	w10, w9
   3c788:	add	w10, w11, w10
   3c78c:	cmp	w10, #0x3
   3c790:	mov	w23, #0x1c                  	// #28
   3c794:	b.cc	3c80c <ZSTD_endStream@@Base+0x2e8b8>  // b.lo, b.ul, b.last
   3c798:	ldr	x8, [sp, #208]
   3c79c:	mov	w1, #0x4                   	// #4
   3c7a0:	mov	x0, x19
   3c7a4:	mov	x28, x12
   3c7a8:	mov	w25, w14
   3c7ac:	add	x20, x8, w9, uxtw
   3c7b0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c7b4:	mov	w24, w0
   3c7b8:	mov	w1, #0x4                   	// #4
   3c7bc:	mov	x0, x20
   3c7c0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3c7c4:	cmp	w24, w0
   3c7c8:	b.ne	3c7fc <ZSTD_endStream@@Base+0x2e8a8>  // b.any
   3c7cc:	ldr	x0, [sp, #152]
   3c7d0:	ldur	x2, [x29, #-184]
   3c7d4:	ldp	x3, x4, [sp, #80]
   3c7d8:	add	x1, x20, #0x4
   3c7dc:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3c7e0:	add	w8, w0, #0x4
   3c7e4:	b	3c800 <ZSTD_endStream@@Base+0x2e8ac>
   3c7e8:	mov	w8, wzr
   3c7ec:	mov	w23, #0x1c                  	// #28
   3c7f0:	b	3c804 <ZSTD_endStream@@Base+0x2e8b0>
   3c7f4:	mov	w23, #0x1c                  	// #28
   3c7f8:	b	3c80c <ZSTD_endStream@@Base+0x2e8b8>
   3c7fc:	mov	w8, wzr
   3c800:	ldur	x24, [x29, #-200]
   3c804:	mov	w14, w25
   3c808:	mov	x12, x28
   3c80c:	mov	w9, w8
   3c810:	cmp	x12, x9
   3c814:	b.cs	3c854 <ZSTD_endStream@@Base+0x2e900>  // b.hs, b.nlast
   3c818:	ldur	x10, [x29, #-176]
   3c81c:	ldur	w11, [x29, #-208]
   3c820:	add	x10, x10, w14, uxtw #3
   3c824:	add	w14, w14, #0x1
   3c828:	cmp	w8, w11
   3c82c:	stp	w26, w8, [x10]
   3c830:	mov	w8, #0x1                   	// #1
   3c834:	b.hi	3c884 <ZSTD_endStream@@Base+0x2e930>  // b.pmore
   3c838:	ldur	x11, [x29, #-184]
   3c83c:	add	x10, x19, x9
   3c840:	mov	x12, x9
   3c844:	mov	w20, w14
   3c848:	cmp	x10, x11
   3c84c:	b.ne	3c858 <ZSTD_endStream@@Base+0x2e904>  // b.any
   3c850:	b	3c864 <ZSTD_endStream@@Base+0x2e910>
   3c854:	mov	x9, x12
   3c858:	mov	w8, wzr
   3c85c:	mov	x12, x9
   3c860:	mov	w20, w21
   3c864:	cbnz	w8, 3cca4 <ZSTD_endStream@@Base+0x2ed50>
   3c868:	ldur	x9, [x29, #-112]
   3c86c:	add	x26, x26, #0x1
   3c870:	add	x8, x22, x26
   3c874:	mov	w21, w20
   3c878:	cmp	x8, x9
   3c87c:	b.cc	3c6e4 <ZSTD_endStream@@Base+0x2e790>  // b.lo, b.ul, b.last
   3c880:	b	3cca0 <ZSTD_endStream@@Base+0x2ed4c>
   3c884:	mov	x12, x9
   3c888:	mov	w20, w14
   3c88c:	cbz	w8, 3c868 <ZSTD_endStream@@Base+0x2e914>
   3c890:	b	3cca4 <ZSTD_endStream@@Base+0x2ed50>
   3c894:	mov	w8, wzr
   3c898:	cbnz	w8, 3cf84 <ZSTD_endStream@@Base+0x2f030>
   3c89c:	ldp	x10, x8, [sp, #8]
   3c8a0:	ldr	w9, [sp, #168]
   3c8a4:	ldr	w16, [sp, #28]
   3c8a8:	ldur	w12, [x29, #-160]
   3c8ac:	mov	x22, xzr
   3c8b0:	str	w9, [x8, x10, lsl #2]
   3c8b4:	add	w8, w9, #0x2
   3c8b8:	stur	xzr, [x29, #-88]
   3c8bc:	stur	w8, [x29, #-112]
   3c8c0:	b	3c8e0 <ZSTD_endStream@@Base+0x2e98c>
   3c8c4:	str	x9, [sp, #64]
   3c8c8:	stur	x8, [x29, #-88]
   3c8cc:	mov	x8, x22
   3c8d0:	ldr	w16, [x9]
   3c8d4:	mov	w9, #0x1                   	// #1
   3c8d8:	mov	x22, x8
   3c8dc:	tbz	w9, #0, 3ce9c <ZSTD_endStream@@Base+0x2ef48>
   3c8e0:	subs	w12, w12, #0x1
   3c8e4:	b.cc	3ce9c <ZSTD_endStream@@Base+0x2ef48>  // b.lo, b.ul, b.last
   3c8e8:	ldr	w8, [sp, #144]
   3c8ec:	cmp	w16, w8
   3c8f0:	b.cc	3ce9c <ZSTD_endStream@@Base+0x2ef48>  // b.lo, b.ul, b.last
   3c8f4:	ldur	x8, [x29, #-88]
   3c8f8:	mov	w21, w16
   3c8fc:	mov	w20, w14
   3c900:	mov	w28, w16
   3c904:	cmp	x22, x8
   3c908:	csel	x23, x22, x8, cc  // cc = lo, ul, last
   3c90c:	add	x8, x23, x21
   3c910:	cmp	x8, x15
   3c914:	mov	x24, x15
   3c918:	stur	w12, [x29, #-160]
   3c91c:	b.cs	3c960 <ZSTD_endStream@@Base+0x2ea0c>  // b.hs, b.nlast
   3c920:	ldr	x8, [sp, #176]
   3c924:	ldur	x2, [x29, #-184]
   3c928:	ldp	x4, x3, [sp, #80]
   3c92c:	stur	x25, [x29, #-104]
   3c930:	add	x25, x8, x21
   3c934:	add	x0, x19, x23
   3c938:	add	x1, x25, x23
   3c93c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3c940:	ldr	x10, [sp, #136]
   3c944:	add	x8, x0, x23
   3c948:	add	x9, x8, x21
   3c94c:	cmp	x9, x24
   3c950:	add	x10, x10, x21
   3c954:	csel	x21, x25, x10, cc  // cc = lo, ul, last
   3c958:	ldur	x25, [x29, #-104]
   3c95c:	b	3c97c <ZSTD_endStream@@Base+0x2ea28>
   3c960:	ldr	x8, [sp, #136]
   3c964:	ldur	x2, [x29, #-184]
   3c968:	add	x0, x19, x23
   3c96c:	add	x21, x8, x21
   3c970:	add	x1, x21, x23
   3c974:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3c978:	add	x8, x0, x23
   3c97c:	mov	x15, x24
   3c980:	cmp	x8, x25
   3c984:	mov	w23, #0x1c                  	// #28
   3c988:	mov	w14, w20
   3c98c:	mov	w16, w28
   3c990:	b.ls	3c9f0 <ZSTD_endStream@@Base+0x2ea9c>  // b.plast
   3c994:	ldur	w12, [x29, #-112]
   3c998:	ldur	x13, [x29, #-176]
   3c99c:	ldr	w17, [sp, #160]
   3c9a0:	add	w11, w16, w8
   3c9a4:	sub	w12, w12, w16
   3c9a8:	add	x13, x13, w14, uxtw #3
   3c9ac:	stp	w12, w8, [x13]
   3c9b0:	ldur	w12, [x29, #-160]
   3c9b4:	sub	w10, w17, w16
   3c9b8:	cmp	x8, x10
   3c9bc:	mov	w9, wzr
   3c9c0:	csel	w17, w11, w17, hi  // hi = pmore
   3c9c4:	cmp	x8, #0x1, lsl #12
   3c9c8:	add	w14, w14, #0x1
   3c9cc:	str	w17, [sp, #160]
   3c9d0:	b.hi	3c9e8 <ZSTD_endStream@@Base+0x2ea94>  // b.pmore
   3c9d4:	ldur	x11, [x29, #-184]
   3c9d8:	add	x10, x19, x8
   3c9dc:	mov	x25, x8
   3c9e0:	cmp	x10, x11
   3c9e4:	b.ne	3c9f4 <ZSTD_endStream@@Base+0x2eaa0>  // b.any
   3c9e8:	mov	x25, x8
   3c9ec:	b	3ca5c <ZSTD_endStream@@Base+0x2eb08>
   3c9f0:	ldur	w12, [x29, #-160]
   3c9f4:	ldrb	w9, [x21, x8]
   3c9f8:	ldrb	w10, [x19, x8]
   3c9fc:	ldr	w11, [sp, #48]
   3ca00:	cmp	w9, w10
   3ca04:	ldr	x9, [sp, #56]
   3ca08:	and	w11, w16, w11
   3ca0c:	lsl	w11, w11, #1
   3ca10:	add	x9, x9, w11, uxtw #2
   3ca14:	b.cs	3ca38 <ZSTD_endStream@@Base+0x2eae4>  // b.hs, b.nlast
   3ca18:	ldr	w10, [sp, #40]
   3ca1c:	cmp	w16, w10
   3ca20:	ldr	x10, [sp, #72]
   3ca24:	str	w16, [x10]
   3ca28:	b.ls	3ca64 <ZSTD_endStream@@Base+0x2eb10>  // b.plast
   3ca2c:	add	x9, x9, #0x4
   3ca30:	str	x9, [sp, #72]
   3ca34:	b	3c8d0 <ZSTD_endStream@@Base+0x2e97c>
   3ca38:	ldr	w10, [sp, #40]
   3ca3c:	cmp	w16, w10
   3ca40:	ldr	x10, [sp, #64]
   3ca44:	str	w16, [x10]
   3ca48:	b.hi	3c8c4 <ZSTD_endStream@@Base+0x2e970>  // b.pmore
   3ca4c:	sub	x10, x29, #0x40
   3ca50:	mov	w9, wzr
   3ca54:	str	x10, [sp, #64]
   3ca58:	stur	x8, [x29, #-88]
   3ca5c:	mov	x8, x22
   3ca60:	b	3c8d8 <ZSTD_endStream@@Base+0x2e984>
   3ca64:	sub	x10, x29, #0x40
   3ca68:	mov	w9, wzr
   3ca6c:	str	x10, [sp, #72]
   3ca70:	b	3c8d8 <ZSTD_endStream@@Base+0x2e984>
   3ca74:	mov	w8, wzr
   3ca78:	cbz	w8, 3ceb4 <ZSTD_endStream@@Base+0x2ef60>
   3ca7c:	ldur	x28, [x29, #-80]
   3ca80:	ldur	x26, [x29, #-96]
   3ca84:	cbnz	w20, 3cf90 <ZSTD_endStream@@Base+0x2f03c>
   3ca88:	ldur	x22, [x29, #-72]
   3ca8c:	ldur	w20, [x29, #-116]
   3ca90:	ldr	w0, [sp, #192]
   3ca94:	mov	w8, #0x13                  	// #19
   3ca98:	cmp	w8, #0x13
   3ca9c:	b.ls	3d2b0 <ZSTD_endStream@@Base+0x2f35c>  // b.plast
   3caa0:	b	3a73c <ZSTD_endStream@@Base+0x2c7e8>
   3caa4:	mov	w8, wzr
   3caa8:	ldur	x26, [x29, #-96]
   3caac:	cbnz	w8, 3cf88 <ZSTD_endStream@@Base+0x2f034>
   3cab0:	ldp	x10, x8, [sp, #8]
   3cab4:	ldr	w9, [sp, #176]
   3cab8:	ldr	w20, [sp, #40]
   3cabc:	ldr	w24, [sp, #28]
   3cac0:	mov	x28, xzr
   3cac4:	mov	x11, xzr
   3cac8:	str	w9, [x8, x10, lsl #2]
   3cacc:	add	w8, w9, #0x2
   3cad0:	stur	w8, [x29, #-112]
   3cad4:	b	3cae8 <ZSTD_endStream@@Base+0x2eb94>
   3cad8:	mov	x12, x8
   3cadc:	ldur	x8, [x29, #-88]
   3cae0:	mov	x11, x8
   3cae4:	tbz	w9, #0, 3cf60 <ZSTD_endStream@@Base+0x2f00c>
   3cae8:	subs	w24, w24, #0x1
   3caec:	b.cc	3cf60 <ZSTD_endStream@@Base+0x2f00c>  // b.lo, b.ul, b.last
   3caf0:	ldr	w8, [sp, #152]
   3caf4:	cmp	w20, w8
   3caf8:	b.cc	3cf60 <ZSTD_endStream@@Base+0x2f00c>  // b.lo, b.ul, b.last
   3cafc:	ldur	x9, [x29, #-152]
   3cb00:	cmp	x11, x28
   3cb04:	csel	x23, x11, x28, cc  // cc = lo, ul, last
   3cb08:	mov	w21, w20
   3cb0c:	add	x8, x23, x21
   3cb10:	cmp	x8, x9
   3cb14:	stur	x11, [x29, #-88]
   3cb18:	b.cs	3cb80 <ZSTD_endStream@@Base+0x2ec2c>  // b.hs, b.nlast
   3cb1c:	ldr	x8, [sp, #208]
   3cb20:	ldur	x2, [x29, #-184]
   3cb24:	ldp	x3, x4, [sp, #80]
   3cb28:	add	x0, x19, x23
   3cb2c:	add	x25, x8, x21
   3cb30:	add	x1, x25, x23
   3cb34:	mov	w22, w24
   3cb38:	stur	x28, [x29, #-104]
   3cb3c:	mov	w28, w20
   3cb40:	mov	w20, w14
   3cb44:	mov	x24, x12
   3cb48:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3cb4c:	ldr	x10, [sp, #144]
   3cb50:	ldur	x11, [x29, #-152]
   3cb54:	mov	w14, w20
   3cb58:	mov	w20, w28
   3cb5c:	ldur	x28, [x29, #-104]
   3cb60:	add	x8, x0, x23
   3cb64:	add	x9, x8, x21
   3cb68:	add	x10, x10, x21
   3cb6c:	cmp	x9, x11
   3cb70:	mov	x12, x24
   3cb74:	mov	w24, w22
   3cb78:	csel	x21, x25, x10, cc  // cc = lo, ul, last
   3cb7c:	b	3cbac <ZSTD_endStream@@Base+0x2ec58>
   3cb80:	ldr	x8, [sp, #144]
   3cb84:	ldur	x2, [x29, #-184]
   3cb88:	add	x0, x19, x23
   3cb8c:	mov	w25, w14
   3cb90:	add	x21, x8, x21
   3cb94:	add	x1, x21, x23
   3cb98:	mov	x22, x12
   3cb9c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3cba0:	mov	x12, x22
   3cba4:	mov	w14, w25
   3cba8:	add	x8, x0, x23
   3cbac:	mov	w23, #0x1c                  	// #28
   3cbb0:	cmp	x8, x12
   3cbb4:	b.ls	3cc08 <ZSTD_endStream@@Base+0x2ecb4>  // b.plast
   3cbb8:	ldr	w15, [sp, #168]
   3cbbc:	ldur	w12, [x29, #-112]
   3cbc0:	ldur	x13, [x29, #-176]
   3cbc4:	add	w11, w20, w8
   3cbc8:	sub	w10, w15, w20
   3cbcc:	cmp	x8, x10
   3cbd0:	mov	w9, wzr
   3cbd4:	sub	w12, w12, w20
   3cbd8:	add	x13, x13, w14, uxtw #3
   3cbdc:	csel	w15, w11, w15, hi  // hi = pmore
   3cbe0:	cmp	x8, #0x1, lsl #12
   3cbe4:	add	w14, w14, #0x1
   3cbe8:	stp	w12, w8, [x13]
   3cbec:	str	w15, [sp, #168]
   3cbf0:	b.hi	3cad8 <ZSTD_endStream@@Base+0x2eb84>  // b.pmore
   3cbf4:	ldur	x11, [x29, #-184]
   3cbf8:	add	x10, x19, x8
   3cbfc:	mov	x12, x8
   3cc00:	cmp	x10, x11
   3cc04:	b.eq	3cad8 <ZSTD_endStream@@Base+0x2eb84>  // b.none
   3cc08:	ldrb	w9, [x21, x8]
   3cc0c:	ldrb	w10, [x19, x8]
   3cc10:	ldr	w11, [sp, #56]
   3cc14:	cmp	w9, w10
   3cc18:	ldr	x9, [sp, #136]
   3cc1c:	and	w11, w20, w11
   3cc20:	lsl	w11, w11, #1
   3cc24:	add	x9, x9, w11, uxtw #2
   3cc28:	b.cs	3cc4c <ZSTD_endStream@@Base+0x2ecf8>  // b.hs, b.nlast
   3cc2c:	ldr	w10, [sp, #48]
   3cc30:	cmp	w20, w10
   3cc34:	ldr	x10, [sp, #72]
   3cc38:	str	w20, [x10]
   3cc3c:	b.ls	3cc78 <ZSTD_endStream@@Base+0x2ed24>  // b.plast
   3cc40:	add	x9, x9, #0x4
   3cc44:	str	x9, [sp, #72]
   3cc48:	b	3cc6c <ZSTD_endStream@@Base+0x2ed18>
   3cc4c:	ldr	w10, [sp, #48]
   3cc50:	cmp	w20, w10
   3cc54:	ldr	x10, [sp, #64]
   3cc58:	str	w20, [x10]
   3cc5c:	b.ls	3cc88 <ZSTD_endStream@@Base+0x2ed34>  // b.plast
   3cc60:	mov	x28, x8
   3cc64:	ldur	x8, [x29, #-88]
   3cc68:	str	x9, [sp, #64]
   3cc6c:	ldr	w20, [x9]
   3cc70:	mov	w9, #0x1                   	// #1
   3cc74:	b	3cae0 <ZSTD_endStream@@Base+0x2eb8c>
   3cc78:	sub	x10, x29, #0x40
   3cc7c:	mov	w9, wzr
   3cc80:	str	x10, [sp, #72]
   3cc84:	b	3cae0 <ZSTD_endStream@@Base+0x2eb8c>
   3cc88:	mov	x28, x8
   3cc8c:	ldur	x8, [x29, #-88]
   3cc90:	sub	x10, x29, #0x40
   3cc94:	mov	w9, wzr
   3cc98:	str	x10, [sp, #64]
   3cc9c:	b	3cae0 <ZSTD_endStream@@Base+0x2eb8c>
   3cca0:	mov	w8, wzr
   3cca4:	ldur	x26, [x29, #-96]
   3cca8:	cbnz	w8, 3cf88 <ZSTD_endStream@@Base+0x2f034>
   3ccac:	ldp	x10, x8, [sp, #8]
   3ccb0:	ldr	w9, [sp, #168]
   3ccb4:	ldr	w20, [sp, #40]
   3ccb8:	ldr	w24, [sp, #28]
   3ccbc:	mov	x28, xzr
   3ccc0:	mov	x11, xzr
   3ccc4:	str	w9, [x8, x10, lsl #2]
   3ccc8:	add	w8, w9, #0x2
   3cccc:	stur	w8, [x29, #-112]
   3ccd0:	b	3cce4 <ZSTD_endStream@@Base+0x2ed90>
   3ccd4:	mov	x12, x8
   3ccd8:	ldur	x8, [x29, #-88]
   3ccdc:	mov	x11, x8
   3cce0:	tbz	w9, #0, 3ce9c <ZSTD_endStream@@Base+0x2ef48>
   3cce4:	subs	w24, w24, #0x1
   3cce8:	b.cc	3ce9c <ZSTD_endStream@@Base+0x2ef48>  // b.lo, b.ul, b.last
   3ccec:	ldr	w8, [sp, #144]
   3ccf0:	cmp	w20, w8
   3ccf4:	b.cc	3ce9c <ZSTD_endStream@@Base+0x2ef48>  // b.lo, b.ul, b.last
   3ccf8:	ldur	x9, [x29, #-152]
   3ccfc:	cmp	x11, x28
   3cd00:	csel	x23, x11, x28, cc  // cc = lo, ul, last
   3cd04:	mov	w21, w20
   3cd08:	add	x8, x23, x21
   3cd0c:	cmp	x8, x9
   3cd10:	stur	x11, [x29, #-88]
   3cd14:	b.cs	3cd7c <ZSTD_endStream@@Base+0x2ee28>  // b.hs, b.nlast
   3cd18:	ldr	x8, [sp, #208]
   3cd1c:	ldur	x2, [x29, #-184]
   3cd20:	ldp	x3, x4, [sp, #80]
   3cd24:	add	x0, x19, x23
   3cd28:	add	x25, x8, x21
   3cd2c:	add	x1, x25, x23
   3cd30:	mov	w22, w24
   3cd34:	stur	x28, [x29, #-104]
   3cd38:	mov	w28, w20
   3cd3c:	mov	w20, w14
   3cd40:	mov	x24, x12
   3cd44:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3cd48:	ldr	x10, [sp, #176]
   3cd4c:	ldur	x11, [x29, #-152]
   3cd50:	mov	w14, w20
   3cd54:	mov	w20, w28
   3cd58:	ldur	x28, [x29, #-104]
   3cd5c:	add	x8, x0, x23
   3cd60:	add	x9, x8, x21
   3cd64:	add	x10, x10, x21
   3cd68:	cmp	x9, x11
   3cd6c:	mov	x12, x24
   3cd70:	mov	w24, w22
   3cd74:	csel	x21, x25, x10, cc  // cc = lo, ul, last
   3cd78:	b	3cda8 <ZSTD_endStream@@Base+0x2ee54>
   3cd7c:	ldr	x8, [sp, #176]
   3cd80:	ldur	x2, [x29, #-184]
   3cd84:	add	x0, x19, x23
   3cd88:	mov	w25, w14
   3cd8c:	add	x21, x8, x21
   3cd90:	add	x1, x21, x23
   3cd94:	mov	x22, x12
   3cd98:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3cd9c:	mov	x12, x22
   3cda0:	mov	w14, w25
   3cda4:	add	x8, x0, x23
   3cda8:	mov	w23, #0x1c                  	// #28
   3cdac:	cmp	x8, x12
   3cdb0:	b.ls	3ce04 <ZSTD_endStream@@Base+0x2eeb0>  // b.plast
   3cdb4:	ldr	w15, [sp, #160]
   3cdb8:	ldur	w12, [x29, #-112]
   3cdbc:	ldur	x13, [x29, #-176]
   3cdc0:	add	w11, w20, w8
   3cdc4:	sub	w10, w15, w20
   3cdc8:	cmp	x8, x10
   3cdcc:	mov	w9, wzr
   3cdd0:	sub	w12, w12, w20
   3cdd4:	add	x13, x13, w14, uxtw #3
   3cdd8:	csel	w15, w11, w15, hi  // hi = pmore
   3cddc:	cmp	x8, #0x1, lsl #12
   3cde0:	add	w14, w14, #0x1
   3cde4:	stp	w12, w8, [x13]
   3cde8:	str	w15, [sp, #160]
   3cdec:	b.hi	3ccd4 <ZSTD_endStream@@Base+0x2ed80>  // b.pmore
   3cdf0:	ldur	x11, [x29, #-184]
   3cdf4:	add	x10, x19, x8
   3cdf8:	mov	x12, x8
   3cdfc:	cmp	x10, x11
   3ce00:	b.eq	3ccd4 <ZSTD_endStream@@Base+0x2ed80>  // b.none
   3ce04:	ldrb	w9, [x21, x8]
   3ce08:	ldrb	w10, [x19, x8]
   3ce0c:	ldr	w11, [sp, #56]
   3ce10:	cmp	w9, w10
   3ce14:	ldr	x9, [sp, #136]
   3ce18:	and	w11, w20, w11
   3ce1c:	lsl	w11, w11, #1
   3ce20:	add	x9, x9, w11, uxtw #2
   3ce24:	b.cs	3ce48 <ZSTD_endStream@@Base+0x2eef4>  // b.hs, b.nlast
   3ce28:	ldr	w10, [sp, #48]
   3ce2c:	cmp	w20, w10
   3ce30:	ldr	x10, [sp, #72]
   3ce34:	str	w20, [x10]
   3ce38:	b.ls	3ce74 <ZSTD_endStream@@Base+0x2ef20>  // b.plast
   3ce3c:	add	x9, x9, #0x4
   3ce40:	str	x9, [sp, #72]
   3ce44:	b	3ce68 <ZSTD_endStream@@Base+0x2ef14>
   3ce48:	ldr	w10, [sp, #48]
   3ce4c:	cmp	w20, w10
   3ce50:	ldr	x10, [sp, #64]
   3ce54:	str	w20, [x10]
   3ce58:	b.ls	3ce84 <ZSTD_endStream@@Base+0x2ef30>  // b.plast
   3ce5c:	mov	x28, x8
   3ce60:	ldur	x8, [x29, #-88]
   3ce64:	str	x9, [sp, #64]
   3ce68:	ldr	w20, [x9]
   3ce6c:	mov	w9, #0x1                   	// #1
   3ce70:	b	3ccdc <ZSTD_endStream@@Base+0x2ed88>
   3ce74:	sub	x10, x29, #0x40
   3ce78:	mov	w9, wzr
   3ce7c:	str	x10, [sp, #72]
   3ce80:	b	3ccdc <ZSTD_endStream@@Base+0x2ed88>
   3ce84:	mov	x28, x8
   3ce88:	ldur	x8, [x29, #-88]
   3ce8c:	sub	x10, x29, #0x40
   3ce90:	mov	w9, wzr
   3ce94:	str	x10, [sp, #64]
   3ce98:	b	3ccdc <ZSTD_endStream@@Base+0x2ed88>
   3ce9c:	ldr	x8, [sp, #64]
   3cea0:	str	wzr, [x8]
   3cea4:	ldr	x8, [sp, #72]
   3cea8:	str	wzr, [x8]
   3ceac:	ldr	w8, [sp, #160]
   3ceb0:	b	3cf74 <ZSTD_endStream@@Base+0x2f020>
   3ceb4:	ldur	x28, [x29, #-80]
   3ceb8:	cmp	x26, #0x2
   3cebc:	b.hi	3d2f8 <ZSTD_endStream@@Base+0x2f3a4>  // b.pmore
   3cec0:	ldur	x22, [x29, #-72]
   3cec4:	sub	x1, x29, #0xc
   3cec8:	mov	x2, x19
   3cecc:	mov	w25, w13
   3ced0:	mov	x0, x22
   3ced4:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   3ced8:	ldr	w8, [sp, #88]
   3cedc:	cmp	w0, w8
   3cee0:	b.cc	3d2d8 <ZSTD_endStream@@Base+0x2f384>  // b.lo, b.ul, b.last
   3cee4:	ldr	w8, [sp, #168]
   3cee8:	sub	w21, w8, w0
   3ceec:	lsr	w8, w21, #18
   3cef0:	cbnz	w8, 3d2d8 <ZSTD_endStream@@Base+0x2f384>
   3cef4:	ldur	x8, [x29, #-160]
   3cef8:	cmp	w0, w8
   3cefc:	mov	w8, w0
   3cf00:	b.cs	3d4f8 <ZSTD_endStream@@Base+0x2f5a4>  // b.hs, b.nlast
   3cf04:	ldr	x9, [sp, #160]
   3cf08:	ldur	x2, [x29, #-184]
   3cf0c:	ldp	x4, x3, [sp, #72]
   3cf10:	mov	x0, x19
   3cf14:	add	x1, x9, x8
   3cf18:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3cf1c:	cmp	x0, #0x3
   3cf20:	b.cc	3d514 <ZSTD_endStream@@Base+0x2f5c0>  // b.lo, b.ul, b.last
   3cf24:	ldr	w9, [sp, #208]
   3cf28:	add	w8, w21, #0x2
   3cf2c:	cmp	x0, w9, uxtw
   3cf30:	ldur	x9, [x29, #-176]
   3cf34:	stp	w8, w0, [x9]
   3cf38:	b.hi	3d52c <ZSTD_endStream@@Base+0x2f5d8>  // b.pmore
   3cf3c:	ldur	x9, [x29, #-184]
   3cf40:	add	x8, x19, x0
   3cf44:	cmp	x8, x9
   3cf48:	b.eq	3d52c <ZSTD_endStream@@Base+0x2f5d8>  // b.none
   3cf4c:	mov	w8, wzr
   3cf50:	mov	w13, #0x1                   	// #1
   3cf54:	mov	x26, x0
   3cf58:	cbnz	w8, 3d2e4 <ZSTD_endStream@@Base+0x2f390>
   3cf5c:	b	3d2dc <ZSTD_endStream@@Base+0x2f388>
   3cf60:	ldr	x8, [sp, #64]
   3cf64:	str	wzr, [x8]
   3cf68:	ldr	x8, [sp, #72]
   3cf6c:	str	wzr, [x8]
   3cf70:	ldr	w8, [sp, #168]
   3cf74:	ldur	x9, [x29, #-72]
   3cf78:	sub	w8, w8, #0x8
   3cf7c:	mov	w20, w14
   3cf80:	str	w8, [x9, #36]
   3cf84:	ldur	x24, [x29, #-200]
   3cf88:	ldur	x28, [x29, #-80]
   3cf8c:	cbz	w20, 3ca88 <ZSTD_endStream@@Base+0x2eb34>
   3cf90:	ldur	x10, [x29, #-176]
   3cf94:	sub	w8, w20, #0x1
   3cf98:	add	x9, x10, w8, uxtw #3
   3cf9c:	ldr	w11, [x9, #4]
   3cfa0:	ldr	w9, [sp, #124]
   3cfa4:	cmp	w11, w9
   3cfa8:	b.hi	3cfdc <ZSTD_endStream@@Base+0x2f088>  // b.pmore
   3cfac:	ldur	w9, [x29, #-116]
   3cfb0:	add	w9, w11, w9
   3cfb4:	cmp	w9, #0x1, lsl #12
   3cfb8:	b.cs	3cfdc <ZSTD_endStream@@Base+0x2f088>  // b.hs, b.nlast
   3cfbc:	ldr	w28, [sp, #248]
   3cfc0:	ldur	x22, [x29, #-72]
   3cfc4:	ldr	w0, [sp, #192]
   3cfc8:	mov	w8, wzr
   3cfcc:	ldr	w9, [sp, #184]
   3cfd0:	cbz	w8, 3d068 <ZSTD_endStream@@Base+0x2f114>
   3cfd4:	str	w28, [sp, #248]
   3cfd8:	b	3d2a4 <ZSTD_endStream@@Base+0x2f350>
   3cfdc:	ldr	x9, [sp, #128]
   3cfe0:	lsl	x8, x8, #3
   3cfe4:	ldr	w8, [x10, x8]
   3cfe8:	ldr	w9, [x9]
   3cfec:	str	w8, [sp, #220]
   3cff0:	cbz	w9, 3cffc <ZSTD_endStream@@Base+0x2f0a8>
   3cff4:	mov	w8, wzr
   3cff8:	b	3d004 <ZSTD_endStream@@Base+0x2f0b0>
   3cffc:	madd	x8, x28, x23, x26
   3d000:	ldr	w8, [x8, #12]
   3d004:	ldur	w9, [x29, #-116]
   3d008:	ldur	w25, [x29, #-128]
   3d00c:	ldr	x10, [sp, #104]
   3d010:	ldur	x22, [x29, #-72]
   3d014:	sub	w19, w9, w8
   3d018:	ldr	w8, [sp, #204]
   3d01c:	ldur	x9, [x29, #-24]
   3d020:	sub	x0, x29, #0x40
   3d024:	mov	w28, w11
   3d028:	stur	w8, [x29, #-64]
   3d02c:	ldr	w8, [sp, #220]
   3d030:	stur	w25, [x29, #-52]
   3d034:	stp	w8, w11, [x29, #-60]
   3d038:	ldur	w8, [x29, #-16]
   3d03c:	str	x9, [x10]
   3d040:	str	w8, [x10, #8]
   3d044:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   3d048:	cmp	w19, #0x1, lsl #12
   3d04c:	csel	w8, wzr, w19, hi  // hi = pmore
   3d050:	add	w0, w0, w19
   3d054:	stur	w8, [x29, #-116]
   3d058:	mov	w8, #0x7                   	// #7
   3d05c:	str	w25, [sp, #200]
   3d060:	ldr	w9, [sp, #184]
   3d064:	cbnz	w8, 3cfd4 <ZSTD_endStream@@Base+0x2f080>
   3d068:	ldr	w8, [sp, #100]
   3d06c:	mov	x10, xzr
   3d070:	str	w28, [sp, #208]
   3d074:	add	w8, w8, w9
   3d078:	stur	w8, [x29, #-80]
   3d07c:	ldur	w8, [x29, #-116]
   3d080:	umaddl	x8, w8, w23, x26
   3d084:	add	x8, x8, #0x10
   3d088:	str	x8, [sp, #248]
   3d08c:	mov	w8, w20
   3d090:	str	x8, [sp, #240]
   3d094:	b	3d0b4 <ZSTD_endStream@@Base+0x2f160>
   3d098:	mov	w0, w25
   3d09c:	ldur	x10, [x29, #-208]
   3d0a0:	ldr	x8, [sp, #240]
   3d0a4:	mov	w23, #0x1c                  	// #28
   3d0a8:	add	x10, x10, #0x1
   3d0ac:	cmp	x10, x8
   3d0b0:	b.cs	3d290 <ZSTD_endStream@@Base+0x2f33c>  // b.hs, b.nlast
   3d0b4:	ldur	x20, [x29, #-176]
   3d0b8:	mov	x8, x10
   3d0bc:	mov	w25, w0
   3d0c0:	ldr	x0, [sp, #248]
   3d0c4:	add	x19, x20, x8, lsl #3
   3d0c8:	ldr	w1, [x19]
   3d0cc:	ldur	w2, [x29, #-240]
   3d0d0:	stur	x10, [x29, #-208]
   3d0d4:	stur	w1, [x29, #-88]
   3d0d8:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   3d0dc:	stp	x1, x0, [x29, #-112]
   3d0e0:	ldr	w27, [x19, #4]
   3d0e4:	ldur	x8, [x29, #-208]
   3d0e8:	ldr	w21, [sp, #236]
   3d0ec:	cbz	x8, 3d100 <ZSTD_endStream@@Base+0x2f1ac>
   3d0f0:	sub	w8, w8, #0x1
   3d0f4:	add	x8, x20, w8, uxtw #3
   3d0f8:	ldr	w8, [x8, #4]
   3d0fc:	add	w21, w8, #0x1
   3d100:	cmp	w27, w21
   3d104:	b.cc	3d098 <ZSTD_endStream@@Base+0x2f144>  // b.lo, b.ul, b.last
   3d108:	ldur	w8, [x29, #-88]
   3d10c:	add	w0, w8, #0x1
   3d110:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   3d114:	mov	w8, #0xffffda33            	// #-9677
   3d118:	ldur	w20, [x29, #-116]
   3d11c:	add	w8, w8, w0, lsl #9
   3d120:	cmp	w0, #0x13
   3d124:	mov	w10, #0x33                  	// #51
   3d128:	lsl	w9, w0, #8
   3d12c:	csel	w8, w8, w10, hi  // hi = pmore
   3d130:	stur	w8, [x29, #-152]
   3d134:	add	w8, w9, #0x1, lsl #12
   3d138:	mov	w23, w0
   3d13c:	stur	w8, [x29, #-160]
   3d140:	add	w8, w27, w20
   3d144:	mov	w19, #0x40000000            	// #1073741824
   3d148:	mov	w0, w25
   3d14c:	ldr	w9, [x22, #152]
   3d150:	mov	w25, w8
   3d154:	add	w28, w27, w20
   3d158:	sub	w26, w27, #0x3
   3d15c:	cmp	w9, #0x1
   3d160:	b.ne	3d17c <ZSTD_endStream@@Base+0x2f228>  // b.any
   3d164:	mov	w24, w0
   3d168:	mov	w0, w26
   3d16c:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   3d170:	ldur	w8, [x29, #-160]
   3d174:	add	w8, w8, w0
   3d178:	b	3d1ec <ZSTD_endStream@@Base+0x2f298>
   3d17c:	ldr	x8, [x22, #96]
   3d180:	mov	w24, w0
   3d184:	ldr	w20, [x22, #148]
   3d188:	ldr	w0, [x8, x23, lsl #2]
   3d18c:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   3d190:	mov	w19, w0
   3d194:	mov	w0, w26
   3d198:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   3d19c:	mov	w8, w0
   3d1a0:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   3d1a4:	ldr	x9, [x22, #88]
   3d1a8:	lsl	x8, x8, #2
   3d1ac:	add	x10, x10, #0xca8
   3d1b0:	ldr	w26, [x10, x8]
   3d1b4:	ldur	x10, [x29, #-72]
   3d1b8:	ldr	w0, [x9, x8]
   3d1bc:	ldr	w22, [x10, #144]
   3d1c0:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   3d1c4:	ldur	w9, [x29, #-152]
   3d1c8:	add	w8, w26, w23
   3d1cc:	add	w9, w20, w9
   3d1d0:	sub	w9, w9, w19
   3d1d4:	ldur	w20, [x29, #-116]
   3d1d8:	add	w9, w9, w22
   3d1dc:	ldur	x22, [x29, #-72]
   3d1e0:	add	w8, w9, w8, lsl #8
   3d1e4:	mov	w19, #0x40000000            	// #1073741824
   3d1e8:	sub	w8, w8, w0
   3d1ec:	ldur	w9, [x29, #-80]
   3d1f0:	ldur	x26, [x29, #-96]
   3d1f4:	mov	w0, w24
   3d1f8:	cmp	w28, w24
   3d1fc:	add	w8, w9, w8
   3d200:	b.hi	3d220 <ZSTD_endStream@@Base+0x2f2cc>  // b.pmore
   3d204:	mov	w9, #0x1c                  	// #28
   3d208:	umull	x9, w28, w9
   3d20c:	ldr	w9, [x26, x9]
   3d210:	cmp	w8, w9
   3d214:	b.ge	3d274 <ZSTD_endStream@@Base+0x2f320>  // b.tcont
   3d218:	cmp	w28, w0
   3d21c:	b.ls	3d244 <ZSTD_endStream@@Base+0x2f2f0>  // b.plast
   3d220:	ldur	x10, [x29, #-136]
   3d224:	mov	w11, #0x1c                  	// #28
   3d228:	mov	w9, w0
   3d22c:	umaddl	x10, w0, w11, x10
   3d230:	add	x9, x9, #0x1
   3d234:	cmp	x25, x9
   3d238:	str	w19, [x10], #28
   3d23c:	b.ne	3d230 <ZSTD_endStream@@Base+0x2f2dc>  // b.any
   3d240:	mov	w0, w9
   3d244:	ldur	w11, [x29, #-128]
   3d248:	mov	w10, #0x1c                  	// #28
   3d24c:	umaddl	x10, w28, w10, x26
   3d250:	mov	w9, wzr
   3d254:	stp	w27, w11, [x10, #8]
   3d258:	ldur	w11, [x29, #-88]
   3d25c:	stp	w8, w11, [x10]
   3d260:	ldur	x8, [x29, #-104]
   3d264:	str	x8, [x10, #16]
   3d268:	ldur	x8, [x29, #-112]
   3d26c:	str	w8, [x10, #24]
   3d270:	b	3d278 <ZSTD_endStream@@Base+0x2f324>
   3d274:	mov	w9, #0x1                   	// #1
   3d278:	sub	w27, w27, #0x1
   3d27c:	cmp	w27, w21
   3d280:	b.cc	3d09c <ZSTD_endStream@@Base+0x2f148>  // b.lo, b.ul, b.last
   3d284:	sub	w8, w25, #0x1
   3d288:	cbz	w9, 3d14c <ZSTD_endStream@@Base+0x2f1f8>
   3d28c:	b	3d09c <ZSTD_endStream@@Base+0x2f148>
   3d290:	ldr	w9, [sp, #208]
   3d294:	ldr	x27, [sp, #224]
   3d298:	ldur	x24, [x29, #-200]
   3d29c:	mov	w8, wzr
   3d2a0:	str	w9, [sp, #248]
   3d2a4:	ldur	w20, [x29, #-116]
   3d2a8:	cmp	w8, #0x13
   3d2ac:	b.hi	3a73c <ZSTD_endStream@@Base+0x2c7e8>  // b.pmore
   3d2b0:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   3d2b4:	add	x11, x11, #0xb84
   3d2b8:	adr	x9, 3a73c <ZSTD_endStream@@Base+0x2c7e8>
   3d2bc:	ldrh	w10, [x11, x8, lsl #1]
   3d2c0:	add	x9, x9, x10, lsl #2
   3d2c4:	br	x9
   3d2c8:	add	w20, w20, #0x1
   3d2cc:	cmp	w20, w0
   3d2d0:	b.ls	3badc <ZSTD_endStream@@Base+0x2db88>  // b.plast
   3d2d4:	b	3d560 <ZSTD_endStream@@Base+0x2f60c>
   3d2d8:	mov	w13, w25
   3d2dc:	mov	w8, wzr
   3d2e0:	mov	x0, x26
   3d2e4:	mov	x26, x0
   3d2e8:	cbz	w8, 3d2f8 <ZSTD_endStream@@Base+0x2f3a4>
   3d2ec:	ldur	x26, [x29, #-96]
   3d2f0:	cbnz	w20, 3cf90 <ZSTD_endStream@@Base+0x2f03c>
   3d2f4:	b	3ca88 <ZSTD_endStream@@Base+0x2eb34>
   3d2f8:	ldp	x10, x8, [sp]
   3d2fc:	ldr	w9, [sp, #168]
   3d300:	ldr	w24, [sp, #136]
   3d304:	mov	x25, xzr
   3d308:	mov	x22, xzr
   3d30c:	str	w9, [x8, x10, lsl #2]
   3d310:	add	w8, w9, #0x2
   3d314:	mov	w20, w13
   3d318:	stur	w8, [x29, #-104]
   3d31c:	b	3d33c <ZSTD_endStream@@Base+0x2f3e8>
   3d320:	str	x9, [sp, #40]
   3d324:	mov	x25, x8
   3d328:	mov	x8, x22
   3d32c:	ldr	w24, [x9]
   3d330:	mov	w9, #0x1                   	// #1
   3d334:	mov	x22, x8
   3d338:	tbz	w9, #0, 3d4c8 <ZSTD_endStream@@Base+0x2f574>
   3d33c:	ldr	w8, [sp, #240]
   3d340:	subs	w8, w8, #0x1
   3d344:	b.cc	3d4c8 <ZSTD_endStream@@Base+0x2f574>  // b.lo, b.ul, b.last
   3d348:	str	w8, [sp, #240]
   3d34c:	ldr	w8, [sp, #88]
   3d350:	cmp	w24, w8
   3d354:	b.cc	3d4c8 <ZSTD_endStream@@Base+0x2f574>  // b.lo, b.ul, b.last
   3d358:	ldur	x9, [x29, #-160]
   3d35c:	cmp	x22, x25
   3d360:	csel	x23, x22, x25, cc  // cc = lo, ul, last
   3d364:	mov	w21, w24
   3d368:	add	x8, x23, x21
   3d36c:	cmp	x8, x9
   3d370:	b.cs	3d3c8 <ZSTD_endStream@@Base+0x2f474>  // b.hs, b.nlast
   3d374:	ldr	x8, [sp, #160]
   3d378:	ldur	x2, [x29, #-184]
   3d37c:	ldp	x4, x3, [sp, #72]
   3d380:	stur	x25, [x29, #-88]
   3d384:	add	x25, x8, x21
   3d388:	add	x0, x19, x23
   3d38c:	add	x1, x25, x23
   3d390:	str	w24, [sp, #136]
   3d394:	mov	x24, x28
   3d398:	mov	x28, x9
   3d39c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3d3a0:	ldr	x10, [sp, #64]
   3d3a4:	add	x8, x0, x23
   3d3a8:	add	x9, x8, x21
   3d3ac:	cmp	x9, x28
   3d3b0:	add	x10, x10, x21
   3d3b4:	mov	x28, x24
   3d3b8:	ldr	w24, [sp, #136]
   3d3bc:	csel	x21, x25, x10, cc  // cc = lo, ul, last
   3d3c0:	ldur	x25, [x29, #-88]
   3d3c4:	b	3d3e4 <ZSTD_endStream@@Base+0x2f490>
   3d3c8:	ldr	x8, [sp, #64]
   3d3cc:	ldur	x2, [x29, #-184]
   3d3d0:	add	x0, x19, x23
   3d3d4:	add	x21, x8, x21
   3d3d8:	add	x1, x21, x23
   3d3dc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3d3e0:	add	x8, x0, x23
   3d3e4:	mov	w23, #0x1c                  	// #28
   3d3e8:	cmp	x8, x26
   3d3ec:	b.ls	3d440 <ZSTD_endStream@@Base+0x2f4ec>  // b.plast
   3d3f0:	ldr	w14, [sp, #144]
   3d3f4:	ldur	w12, [x29, #-104]
   3d3f8:	ldur	x13, [x29, #-176]
   3d3fc:	add	w11, w24, w8
   3d400:	sub	w10, w14, w24
   3d404:	cmp	x8, x10
   3d408:	mov	w9, wzr
   3d40c:	sub	w12, w12, w24
   3d410:	add	x13, x13, w20, uxtw #3
   3d414:	csel	w14, w11, w14, hi  // hi = pmore
   3d418:	cmp	x8, #0x1, lsl #12
   3d41c:	add	w20, w20, #0x1
   3d420:	stp	w12, w8, [x13]
   3d424:	str	w14, [sp, #144]
   3d428:	b.hi	3d4ac <ZSTD_endStream@@Base+0x2f558>  // b.pmore
   3d42c:	ldur	x11, [x29, #-184]
   3d430:	add	x10, x19, x8
   3d434:	mov	x26, x8
   3d438:	cmp	x10, x11
   3d43c:	b.eq	3d4ac <ZSTD_endStream@@Base+0x2f558>  // b.none
   3d440:	ldrb	w9, [x21, x8]
   3d444:	ldrb	w10, [x19, x8]
   3d448:	ldr	w11, [sp, #28]
   3d44c:	cmp	w9, w10
   3d450:	ldr	x9, [sp, #56]
   3d454:	and	w11, w24, w11
   3d458:	lsl	w11, w11, #1
   3d45c:	add	x9, x9, w11, uxtw #2
   3d460:	b.cs	3d484 <ZSTD_endStream@@Base+0x2f530>  // b.hs, b.nlast
   3d464:	ldr	w10, [sp, #16]
   3d468:	cmp	w24, w10
   3d46c:	ldr	x10, [sp, #48]
   3d470:	str	w24, [x10]
   3d474:	b.ls	3d4b8 <ZSTD_endStream@@Base+0x2f564>  // b.plast
   3d478:	add	x9, x9, #0x4
   3d47c:	str	x9, [sp, #48]
   3d480:	b	3d32c <ZSTD_endStream@@Base+0x2f3d8>
   3d484:	ldr	w10, [sp, #16]
   3d488:	cmp	w24, w10
   3d48c:	ldr	x10, [sp, #40]
   3d490:	str	w24, [x10]
   3d494:	b.hi	3d320 <ZSTD_endStream@@Base+0x2f3cc>  // b.pmore
   3d498:	sub	x10, x29, #0x40
   3d49c:	mov	w9, wzr
   3d4a0:	str	x10, [sp, #40]
   3d4a4:	mov	x25, x8
   3d4a8:	b	3d4b0 <ZSTD_endStream@@Base+0x2f55c>
   3d4ac:	mov	x26, x8
   3d4b0:	mov	x8, x22
   3d4b4:	b	3d334 <ZSTD_endStream@@Base+0x2f3e0>
   3d4b8:	sub	x10, x29, #0x40
   3d4bc:	mov	w9, wzr
   3d4c0:	str	x10, [sp, #48]
   3d4c4:	b	3d334 <ZSTD_endStream@@Base+0x2f3e0>
   3d4c8:	ldr	x8, [sp, #40]
   3d4cc:	ldur	x9, [x29, #-72]
   3d4d0:	ldur	x24, [x29, #-200]
   3d4d4:	str	wzr, [x8]
   3d4d8:	ldr	x8, [sp, #48]
   3d4dc:	str	wzr, [x8]
   3d4e0:	ldr	w8, [sp, #144]
   3d4e4:	sub	w8, w8, #0x8
   3d4e8:	str	w8, [x9, #36]
   3d4ec:	ldur	x26, [x29, #-96]
   3d4f0:	cbnz	w20, 3cf90 <ZSTD_endStream@@Base+0x2f03c>
   3d4f4:	b	3ca88 <ZSTD_endStream@@Base+0x2eb34>
   3d4f8:	ldr	x9, [sp, #64]
   3d4fc:	ldur	x2, [x29, #-184]
   3d500:	mov	x0, x19
   3d504:	add	x1, x9, x8
   3d508:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3d50c:	cmp	x0, #0x3
   3d510:	b.cs	3cf24 <ZSTD_endStream@@Base+0x2efd0>  // b.hs, b.nlast
   3d514:	mov	w13, w25
   3d518:	mov	w8, wzr
   3d51c:	mov	x0, x26
   3d520:	mov	x26, x0
   3d524:	cbnz	w8, 3d2e4 <ZSTD_endStream@@Base+0x2f390>
   3d528:	b	3d2dc <ZSTD_endStream@@Base+0x2f388>
   3d52c:	ldr	w8, [sp, #168]
   3d530:	mov	w13, #0x1                   	// #1
   3d534:	mov	w20, #0x1                   	// #1
   3d538:	add	w9, w8, #0x1
   3d53c:	mov	w8, #0x1                   	// #1
   3d540:	str	w9, [x22, #36]
   3d544:	mov	x26, x0
   3d548:	cbnz	w8, 3d2e4 <ZSTD_endStream@@Base+0x2f390>
   3d54c:	b	3d2dc <ZSTD_endStream@@Base+0x2f388>
   3d550:	mov	w11, w20
   3d554:	ldp	w22, w20, [sp, #200]
   3d558:	ldr	w21, [sp, #220]
   3d55c:	b	3d5e0 <ZSTD_endStream@@Base+0x2f68c>
   3d560:	umaddl	x8, w0, w23, x26
   3d564:	ldp	w20, w21, [x8]
   3d568:	ldr	w9, [x8, #24]
   3d56c:	ldr	x10, [x8, #16]
   3d570:	ldp	w28, w22, [x8, #8]
   3d574:	stp	w20, w21, [x29, #-64]
   3d578:	stur	w9, [x29, #-16]
   3d57c:	stur	x10, [x29, #-24]
   3d580:	stp	w28, w22, [x29, #-56]
   3d584:	ldr	w9, [x8, #24]
   3d588:	ldr	x8, [x8, #16]
   3d58c:	ldr	x19, [sp, #104]
   3d590:	mov	w25, w0
   3d594:	sub	x0, x29, #0x40
   3d598:	str	w9, [x19, #8]
   3d59c:	str	x8, [x19]
   3d5a0:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   3d5a4:	cmp	w25, w0
   3d5a8:	str	w28, [sp, #248]
   3d5ac:	b.ls	3d5dc <ZSTD_endStream@@Base+0x2f688>  // b.plast
   3d5b0:	ldur	w8, [x29, #-16]
   3d5b4:	ldur	x9, [x29, #-24]
   3d5b8:	sub	x0, x29, #0x40
   3d5bc:	stp	w20, w21, [x29, #-64]
   3d5c0:	stp	w28, w22, [x29, #-56]
   3d5c4:	str	w8, [x19, #8]
   3d5c8:	str	x9, [x19]
   3d5cc:	mov	w19, w25
   3d5d0:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   3d5d4:	sub	w11, w25, w0
   3d5d8:	b	3d5e0 <ZSTD_endStream@@Base+0x2f68c>
   3d5dc:	mov	w11, wzr
   3d5e0:	add	w19, w11, #0x1
   3d5e4:	umaddl	x8, w19, w23, x26
   3d5e8:	stp	w22, w20, [sp, #200]
   3d5ec:	stp	w20, w21, [x8]
   3d5f0:	ldr	w9, [sp, #248]
   3d5f4:	str	w21, [sp, #220]
   3d5f8:	mov	w20, w11
   3d5fc:	mov	w21, w11
   3d600:	stp	w9, w22, [x8, #8]
   3d604:	ldur	w9, [x29, #-16]
   3d608:	ldur	x10, [x29, #-24]
   3d60c:	stur	w11, [x29, #-116]
   3d610:	str	w9, [x8, #24]
   3d614:	str	x10, [x8, #16]
   3d618:	cbz	w11, 3d664 <ZSTD_endStream@@Base+0x2f710>
   3d61c:	umaddl	x22, w21, w23, x26
   3d620:	ldur	q0, [x22, #12]
   3d624:	ldr	q1, [x22]
   3d628:	sub	x0, x29, #0x40
   3d62c:	stur	q0, [x29, #-52]
   3d630:	stur	q1, [x29, #-64]
   3d634:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   3d638:	ldur	q0, [x22, #12]
   3d63c:	ldr	q1, [x22]
   3d640:	subs	w9, w21, w0
   3d644:	umaddl	x8, w20, w23, x26
   3d648:	sub	w20, w20, #0x1
   3d64c:	csel	w21, wzr, w9, cc  // cc = lo, ul, last
   3d650:	stur	q0, [x8, #12]
   3d654:	str	q1, [x8]
   3d658:	b.hi	3d61c <ZSTD_endStream@@Base+0x2f6c8>  // b.pmore
   3d65c:	add	w28, w20, #0x1
   3d660:	b	3d668 <ZSTD_endStream@@Base+0x2f714>
   3d664:	mov	w28, w19
   3d668:	ldur	x21, [x29, #-168]
   3d66c:	ldur	x22, [x29, #-72]
   3d670:	ldur	w20, [x29, #-116]
   3d674:	cmp	w28, w19
   3d678:	b.ls	3d6b0 <ZSTD_endStream@@Base+0x2f75c>  // b.plast
   3d67c:	b	3a730 <ZSTD_endStream@@Base+0x2c7dc>
   3d680:	ldur	x21, [x29, #-168]
   3d684:	ldur	x24, [x29, #-200]
   3d688:	strh	w8, [x10, #6]
   3d68c:	add	x8, x10, #0x8
   3d690:	add	x27, x27, w9, uxtw
   3d694:	mov	w23, #0x1c                  	// #28
   3d698:	str	x8, [x13, #8]
   3d69c:	stur	x27, [x29, #-144]
   3d6a0:	ldur	w20, [x29, #-116]
   3d6a4:	add	w28, w28, #0x1
   3d6a8:	cmp	w28, w19
   3d6ac:	b.hi	3a730 <ZSTD_endStream@@Base+0x2c7dc>  // b.pmore
   3d6b0:	umaddl	x8, w28, w23, x26
   3d6b4:	ldp	w24, w20, [x8, #8]
   3d6b8:	cbz	w24, 3d6dc <ZSTD_endStream@@Base+0x2f788>
   3d6bc:	ldr	w25, [x8, #4]
   3d6c0:	cmp	w25, #0x3
   3d6c4:	b.cc	3d6ec <ZSTD_endStream@@Base+0x2f798>  // b.lo, b.ul, b.last
   3d6c8:	ldp	w9, w8, [x21]
   3d6cc:	stp	w9, w8, [x21, #4]
   3d6d0:	ldur	x22, [x29, #-224]
   3d6d4:	sub	w8, w25, #0x2
   3d6d8:	b	3d734 <ZSTD_endStream@@Base+0x2f7e0>
   3d6dc:	ldur	x24, [x29, #-200]
   3d6e0:	add	x8, x27, x20
   3d6e4:	stur	x8, [x29, #-144]
   3d6e8:	b	3d6a0 <ZSTD_endStream@@Base+0x2f74c>
   3d6ec:	ldur	x22, [x29, #-224]
   3d6f0:	cmp	w20, #0x0
   3d6f4:	cinc	w9, w25, eq  // eq = none
   3d6f8:	cbz	w9, 3d738 <ZSTD_endStream@@Base+0x2f7e4>
   3d6fc:	cmp	w9, #0x3
   3d700:	b.ne	3d718 <ZSTD_endStream@@Base+0x2f7c4>  // b.any
   3d704:	ldr	w8, [x21]
   3d708:	sub	w8, w8, #0x1
   3d70c:	cmp	w9, #0x2
   3d710:	b.cs	3d724 <ZSTD_endStream@@Base+0x2f7d0>  // b.hs, b.nlast
   3d714:	b	3d72c <ZSTD_endStream@@Base+0x2f7d8>
   3d718:	ldr	w8, [x21, w9, uxtw #2]
   3d71c:	cmp	w9, #0x2
   3d720:	b.cc	3d72c <ZSTD_endStream@@Base+0x2f7d8>  // b.lo, b.ul, b.last
   3d724:	ldr	w9, [x21, #4]
   3d728:	str	w9, [x21, #8]
   3d72c:	ldr	w9, [x21]
   3d730:	str	w9, [x21, #4]
   3d734:	str	w8, [x21]
   3d738:	ldur	x0, [x29, #-216]
   3d73c:	mov	w1, w20
   3d740:	mov	x2, x27
   3d744:	mov	w3, w25
   3d748:	mov	w4, w24
   3d74c:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   3d750:	ldur	x8, [x29, #-192]
   3d754:	add	x2, x27, x20
   3d758:	mov	x23, x27
   3d75c:	mov	x1, x27
   3d760:	ldr	x0, [x8, #24]
   3d764:	cmp	x2, x22
   3d768:	b.ls	3d778 <ZSTD_endStream@@Base+0x2f824>  // b.plast
   3d76c:	mov	x3, x22
   3d770:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   3d774:	b	3d7e4 <ZSTD_endStream@@Base+0x2f890>
   3d778:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3d77c:	cmp	w20, #0x11
   3d780:	b.cc	3d7e4 <ZSTD_endStream@@Base+0x2f890>  // b.lo, b.ul, b.last
   3d784:	ldur	x8, [x29, #-192]
   3d788:	add	x1, x23, #0x10
   3d78c:	mov	x21, x23
   3d790:	ldr	x22, [x8, #24]
   3d794:	add	x0, x22, #0x10
   3d798:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3d79c:	add	x0, x22, #0x20
   3d7a0:	add	x1, x23, #0x20
   3d7a4:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3d7a8:	cmp	w20, #0x31
   3d7ac:	b.cc	3d7e4 <ZSTD_endStream@@Base+0x2f890>  // b.lo, b.ul, b.last
   3d7b0:	add	x21, x22, x20
   3d7b4:	add	x26, x22, #0x30
   3d7b8:	add	x27, x23, #0x40
   3d7bc:	sub	x1, x27, #0x10
   3d7c0:	mov	x0, x26
   3d7c4:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3d7c8:	add	x0, x26, #0x10
   3d7cc:	mov	x1, x27
   3d7d0:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   3d7d4:	add	x26, x26, #0x20
   3d7d8:	cmp	x26, x21
   3d7dc:	add	x27, x27, #0x20
   3d7e0:	b.cc	3d7bc <ZSTD_endStream@@Base+0x2f868>  // b.lo, b.ul, b.last
   3d7e4:	ldur	x13, [x29, #-192]
   3d7e8:	sub	w8, w24, #0x3
   3d7ec:	cmp	w20, #0x10, lsl #12
   3d7f0:	ldr	x9, [x13, #24]
   3d7f4:	add	x9, x9, x20
   3d7f8:	str	x9, [x13, #24]
   3d7fc:	b.cc	3d814 <ZSTD_endStream@@Base+0x2f8c0>  // b.lo, b.ul, b.last
   3d800:	ldp	x10, x9, [x13]
   3d804:	sub	x9, x9, x10
   3d808:	lsr	x9, x9, #3
   3d80c:	mov	w10, #0x1                   	// #1
   3d810:	stp	w10, w9, [x13, #72]
   3d814:	ldr	x10, [x13, #8]
   3d818:	ldur	x22, [x29, #-72]
   3d81c:	ldur	x26, [x29, #-96]
   3d820:	add	w9, w24, w20
   3d824:	add	w11, w25, #0x1
   3d828:	cmp	w8, #0x10, lsl #12
   3d82c:	mov	x27, x23
   3d830:	strh	w20, [x10, #4]
   3d834:	str	w11, [x10]
   3d838:	b.cc	3d680 <ZSTD_endStream@@Base+0x2f72c>  // b.lo, b.ul, b.last
   3d83c:	ldp	x12, x11, [x13]
   3d840:	sub	x11, x11, x12
   3d844:	lsr	x11, x11, #3
   3d848:	mov	w12, #0x2                   	// #2
   3d84c:	stp	w12, w11, [x13, #72]
   3d850:	b	3d680 <ZSTD_endStream@@Base+0x2f72c>
   3d854:	cmp	x26, #0x2
   3d858:	b.hi	3d8fc <ZSTD_endStream@@Base+0x2f9a8>  // b.pmore
   3d85c:	ldur	x22, [x29, #-72]
   3d860:	ldur	x2, [x29, #-144]
   3d864:	sub	x1, x29, #0xc
   3d868:	mov	x0, x22
   3d86c:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   3d870:	ldr	w8, [sp, #192]
   3d874:	ldur	x21, [x29, #-168]
   3d878:	ldur	x24, [x29, #-200]
   3d87c:	cmp	w0, w8
   3d880:	b.cc	3d958 <ZSTD_endStream@@Base+0x2fa04>  // b.lo, b.ul, b.last
   3d884:	ldur	w8, [x29, #-208]
   3d888:	sub	w20, w8, w0
   3d88c:	lsr	w8, w20, #18
   3d890:	cbnz	w8, 3d904 <ZSTD_endStream@@Base+0x2f9b0>
   3d894:	ldur	x8, [x29, #-112]
   3d898:	cmp	w0, w8
   3d89c:	mov	w8, w0
   3d8a0:	b.cs	3d90c <ZSTD_endStream@@Base+0x2f9b8>  // b.hs, b.nlast
   3d8a4:	ldur	x9, [x29, #-240]
   3d8a8:	ldur	x0, [x29, #-144]
   3d8ac:	ldur	x2, [x29, #-184]
   3d8b0:	ldp	x4, x3, [sp, #176]
   3d8b4:	add	x1, x9, x8
   3d8b8:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3d8bc:	cmp	x0, #0x3
   3d8c0:	b.cc	3d928 <ZSTD_endStream@@Base+0x2f9d4>  // b.lo, b.ul, b.last
   3d8c4:	ldur	w9, [x29, #-128]
   3d8c8:	add	w8, w20, #0x2
   3d8cc:	cmp	x0, w9, uxtw
   3d8d0:	ldur	x9, [x29, #-176]
   3d8d4:	stp	w8, w0, [x9]
   3d8d8:	b.hi	3d934 <ZSTD_endStream@@Base+0x2f9e0>  // b.pmore
   3d8dc:	ldur	x8, [x29, #-144]
   3d8e0:	ldur	x9, [x29, #-184]
   3d8e4:	add	x8, x8, x0
   3d8e8:	cmp	x8, x9
   3d8ec:	b.eq	3d934 <ZSTD_endStream@@Base+0x2f9e0>  // b.none
   3d8f0:	mov	w8, wzr
   3d8f4:	mov	w27, #0x1                   	// #1
   3d8f8:	b	3d94c <ZSTD_endStream@@Base+0x2f9f8>
   3d8fc:	ldur	x21, [x29, #-168]
   3d900:	b	3d968 <ZSTD_endStream@@Base+0x2fa14>
   3d904:	ldur	w20, [x29, #-116]
   3d908:	b	3d958 <ZSTD_endStream@@Base+0x2fa04>
   3d90c:	ldr	x9, [sp, #168]
   3d910:	ldur	x0, [x29, #-144]
   3d914:	ldur	x2, [x29, #-184]
   3d918:	add	x1, x9, x8
   3d91c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3d920:	cmp	x0, #0x3
   3d924:	b.cs	3d8c4 <ZSTD_endStream@@Base+0x2f970>  // b.hs, b.nlast
   3d928:	mov	w8, wzr
   3d92c:	mov	x0, x26
   3d930:	b	3d94c <ZSTD_endStream@@Base+0x2f9f8>
   3d934:	ldur	w8, [x29, #-208]
   3d938:	mov	w27, #0x1                   	// #1
   3d93c:	mov	w19, #0x1                   	// #1
   3d940:	add	w9, w8, #0x1
   3d944:	mov	w8, #0x1                   	// #1
   3d948:	str	w9, [x22, #36]
   3d94c:	ldur	w20, [x29, #-116]
   3d950:	mov	x26, x0
   3d954:	cbnz	w8, 3d960 <ZSTD_endStream@@Base+0x2fa0c>
   3d958:	mov	w8, wzr
   3d95c:	mov	x0, x26
   3d960:	mov	x26, x0
   3d964:	cbnz	w8, 3db68 <ZSTD_endStream@@Base+0x2fc14>
   3d968:	ldp	x10, x8, [sp, #72]
   3d96c:	ldur	w9, [x29, #-208]
   3d970:	mov	w19, w27
   3d974:	ldr	w27, [sp, #88]
   3d978:	mov	x24, xzr
   3d97c:	mov	x22, xzr
   3d980:	str	w9, [x8, x10, lsl #2]
   3d984:	add	w8, w9, #0x2
   3d988:	stur	w8, [x29, #-88]
   3d98c:	b	3d9ac <ZSTD_endStream@@Base+0x2fa58>
   3d990:	add	x9, x9, #0x4
   3d994:	str	x9, [sp, #152]
   3d998:	ldur	x21, [x29, #-168]
   3d99c:	ldr	w28, [x9]
   3d9a0:	mov	w9, #0x1                   	// #1
   3d9a4:	mov	x22, x8
   3d9a8:	tbz	w9, #0, 3db40 <ZSTD_endStream@@Base+0x2fbec>
   3d9ac:	subs	w27, w27, #0x1
   3d9b0:	b.cc	3db40 <ZSTD_endStream@@Base+0x2fbec>  // b.lo, b.ul, b.last
   3d9b4:	ldr	w8, [sp, #192]
   3d9b8:	cmp	w28, w8
   3d9bc:	b.cc	3db40 <ZSTD_endStream@@Base+0x2fbec>  // b.lo, b.ul, b.last
   3d9c0:	ldur	x9, [x29, #-112]
   3d9c4:	cmp	x22, x24
   3d9c8:	csel	x23, x22, x24, cc  // cc = lo, ul, last
   3d9cc:	mov	w21, w28
   3d9d0:	add	x8, x23, x21
   3d9d4:	cmp	x8, x9
   3d9d8:	b.cs	3da28 <ZSTD_endStream@@Base+0x2fad4>  // b.hs, b.nlast
   3d9dc:	mov	x8, x9
   3d9e0:	ldur	x9, [x29, #-240]
   3d9e4:	mov	w20, w28
   3d9e8:	mov	x28, x8
   3d9ec:	ldur	x8, [x29, #-144]
   3d9f0:	ldur	x2, [x29, #-184]
   3d9f4:	ldp	x4, x3, [sp, #176]
   3d9f8:	add	x25, x9, x21
   3d9fc:	add	x0, x8, x23
   3da00:	add	x1, x25, x23
   3da04:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3da08:	ldr	x10, [sp, #168]
   3da0c:	add	x8, x0, x23
   3da10:	add	x9, x8, x21
   3da14:	cmp	x9, x28
   3da18:	add	x10, x10, x21
   3da1c:	mov	w28, w20
   3da20:	csel	x21, x25, x10, cc  // cc = lo, ul, last
   3da24:	b	3da48 <ZSTD_endStream@@Base+0x2faf4>
   3da28:	ldr	x8, [sp, #168]
   3da2c:	ldur	x2, [x29, #-184]
   3da30:	add	x21, x8, x21
   3da34:	ldur	x8, [x29, #-144]
   3da38:	add	x1, x21, x23
   3da3c:	add	x0, x8, x23
   3da40:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3da44:	add	x8, x0, x23
   3da48:	mov	w23, #0x1c                  	// #28
   3da4c:	cmp	x8, x26
   3da50:	b.ls	3daa8 <ZSTD_endStream@@Base+0x2fb54>  // b.plast
   3da54:	ldr	w14, [sp, #208]
   3da58:	ldur	w12, [x29, #-88]
   3da5c:	ldur	x13, [x29, #-176]
   3da60:	add	w11, w28, w8
   3da64:	sub	w10, w14, w28
   3da68:	cmp	x8, x10
   3da6c:	mov	w9, wzr
   3da70:	sub	w12, w12, w28
   3da74:	add	x13, x13, w19, uxtw #3
   3da78:	csel	w14, w11, w14, hi  // hi = pmore
   3da7c:	cmp	x8, #0x1, lsl #12
   3da80:	add	w19, w19, #0x1
   3da84:	stp	w12, w8, [x13]
   3da88:	str	w14, [sp, #208]
   3da8c:	b.hi	3db1c <ZSTD_endStream@@Base+0x2fbc8>  // b.pmore
   3da90:	ldur	x10, [x29, #-144]
   3da94:	ldur	x11, [x29, #-184]
   3da98:	mov	x26, x8
   3da9c:	add	x10, x10, x8
   3daa0:	cmp	x10, x11
   3daa4:	b.eq	3db1c <ZSTD_endStream@@Base+0x2fbc8>  // b.none
   3daa8:	ldur	x10, [x29, #-144]
   3daac:	ldrb	w9, [x21, x8]
   3dab0:	ldr	w11, [sp, #136]
   3dab4:	ldrb	w10, [x10, x8]
   3dab8:	and	w11, w28, w11
   3dabc:	lsl	w11, w11, #1
   3dac0:	cmp	w9, w10
   3dac4:	ldr	x9, [sp, #160]
   3dac8:	add	x9, x9, w11, uxtw #2
   3dacc:	b.cs	3daf8 <ZSTD_endStream@@Base+0x2fba4>  // b.hs, b.nlast
   3dad0:	ldr	w10, [sp, #128]
   3dad4:	cmp	w28, w10
   3dad8:	ldr	x10, [sp, #152]
   3dadc:	str	w28, [x10]
   3dae0:	b.hi	3d990 <ZSTD_endStream@@Base+0x2fa3c>  // b.pmore
   3dae4:	ldur	x21, [x29, #-168]
   3dae8:	sub	x10, x29, #0x40
   3daec:	mov	w9, wzr
   3daf0:	str	x10, [sp, #152]
   3daf4:	b	3d9a4 <ZSTD_endStream@@Base+0x2fa50>
   3daf8:	ldr	w10, [sp, #128]
   3dafc:	cmp	w28, w10
   3db00:	ldr	x10, [sp, #144]
   3db04:	str	w28, [x10]
   3db08:	b.ls	3db24 <ZSTD_endStream@@Base+0x2fbd0>  // b.plast
   3db0c:	str	x9, [sp, #144]
   3db10:	mov	x24, x8
   3db14:	mov	x8, x22
   3db18:	b	3d998 <ZSTD_endStream@@Base+0x2fa44>
   3db1c:	mov	x26, x8
   3db20:	b	3db34 <ZSTD_endStream@@Base+0x2fbe0>
   3db24:	sub	x10, x29, #0x40
   3db28:	mov	w9, wzr
   3db2c:	str	x10, [sp, #144]
   3db30:	mov	x24, x8
   3db34:	ldur	x21, [x29, #-168]
   3db38:	mov	x8, x22
   3db3c:	b	3d9a4 <ZSTD_endStream@@Base+0x2fa50>
   3db40:	ldr	x8, [sp, #144]
   3db44:	ldur	x22, [x29, #-72]
   3db48:	ldur	x24, [x29, #-200]
   3db4c:	ldur	w20, [x29, #-116]
   3db50:	str	wzr, [x8]
   3db54:	ldr	x8, [sp, #152]
   3db58:	str	wzr, [x8]
   3db5c:	ldr	w8, [sp, #208]
   3db60:	sub	w8, w8, #0x8
   3db64:	str	w8, [x22, #36]
   3db68:	ldr	x27, [sp, #224]
   3db6c:	ldur	x26, [x29, #-96]
   3db70:	cbnz	w19, 3a788 <ZSTD_endStream@@Base+0x2c834>
   3db74:	b	3bab4 <ZSTD_endStream@@Base+0x2db60>
   3db78:	ldur	x8, [x29, #-184]
   3db7c:	sub	x0, x8, x27
   3db80:	add	sp, sp, #0x1f0
   3db84:	ldp	x20, x19, [sp, #80]
   3db88:	ldp	x22, x21, [sp, #64]
   3db8c:	ldp	x24, x23, [sp, #48]
   3db90:	ldp	x26, x25, [sp, #32]
   3db94:	ldp	x28, x27, [sp, #16]
   3db98:	ldp	x29, x30, [sp], #96
   3db9c:	ret
   3dba0:	stp	x29, x30, [sp, #-96]!
   3dba4:	stp	x28, x27, [sp, #16]
   3dba8:	stp	x26, x25, [sp, #32]
   3dbac:	stp	x24, x23, [sp, #48]
   3dbb0:	stp	x22, x21, [sp, #64]
   3dbb4:	stp	x20, x19, [sp, #80]
   3dbb8:	mov	x29, sp
   3dbbc:	sub	sp, sp, #0x1f0
   3dbc0:	ldr	w12, [x0, #36]
   3dbc4:	ldp	w11, w10, [x0, #200]
   3dbc8:	add	x14, x3, x4
   3dbcc:	ldr	x8, [x0, #8]
   3dbd0:	ldr	w9, [x0, #24]
   3dbd4:	stp	x2, x14, [x29, #-176]
   3dbd8:	stur	w12, [x29, #-12]
   3dbdc:	ldp	x26, x28, [x0, #104]
   3dbe0:	mov	x27, x3
   3dbe4:	add	x24, x0, #0x48
   3dbe8:	mov	w13, #0xfff                 	// #4095
   3dbec:	cmp	w10, #0xfff
   3dbf0:	mov	x21, x1
   3dbf4:	mov	x22, x0
   3dbf8:	add	x19, x8, x9
   3dbfc:	csel	w23, w10, w13, cc  // cc = lo, ul, last
   3dc00:	cmp	w11, #0x3
   3dc04:	mov	w8, #0x3                   	// #3
   3dc08:	mov	w3, #0x2                   	// #2
   3dc0c:	mov	x0, x24
   3dc10:	mov	x1, x27
   3dc14:	mov	x2, x4
   3dc18:	sub	x25, x14, #0x8
   3dc1c:	cinc	w20, w8, ne  // ne = any
   3dc20:	bl	415f4 <ZSTD_endStream@@Base+0x336a0>
   3dc24:	cmp	x19, x27
   3dc28:	cinc	x10, x27, eq  // eq = none
   3dc2c:	cmp	x10, x25
   3dc30:	b.cs	40f54 <ZSTD_endStream@@Base+0x33000>  // b.hs, b.nlast
   3dc34:	mov	x8, x25
   3dc38:	ldur	x9, [x29, #-168]
   3dc3c:	sub	w8, w20, #0x1
   3dc40:	str	x8, [sp, #56]
   3dc44:	sub	x8, x29, #0x40
   3dc48:	add	x8, x8, #0x10
   3dc4c:	sub	x9, x9, #0x20
   3dc50:	str	x8, [sp, #40]
   3dc54:	str	x9, [sp, #232]
   3dc58:	mov	w9, w20
   3dc5c:	stur	x26, [x29, #-184]
   3dc60:	stp	x21, x24, [x29, #-224]
   3dc64:	str	w20, [sp, #244]
   3dc68:	str	x9, [sp, #32]
   3dc6c:	add	x20, x28, #0x10
   3dc70:	add	x9, x28, #0x1c
   3dc74:	mov	w24, w23
   3dc78:	mov	x26, x28
   3dc7c:	str	x25, [sp, #224]
   3dc80:	stur	x9, [x29, #-136]
   3dc84:	stur	w23, [x29, #-196]
   3dc88:	stp	x26, x22, [x29, #-80]
   3dc8c:	stur	x20, [x29, #-208]
   3dc90:	b	3dca4 <ZSTD_endStream@@Base+0x2fd50>
   3dc94:	ldr	x8, [sp, #224]
   3dc98:	ldur	x10, [x29, #-160]
   3dc9c:	cmp	x10, x8
   3dca0:	b.cs	40f54 <ZSTD_endStream@@Base+0x33000>  // b.hs, b.nlast
   3dca4:	ldr	x19, [x22, #8]
   3dca8:	ldr	w21, [x22, #36]
   3dcac:	subs	w8, w10, w27
   3dcb0:	stur	w8, [x29, #-88]
   3dcb4:	cset	w8, eq  // eq = none
   3dcb8:	stur	w8, [x29, #-124]
   3dcbc:	add	x8, x19, x21
   3dcc0:	cmp	x8, x10
   3dcc4:	stur	x10, [x29, #-160]
   3dcc8:	str	x27, [sp, #208]
   3dccc:	b.ls	3dd8c <ZSTD_endStream@@Base+0x2fe38>  // b.plast
   3dcd0:	ldur	x10, [x29, #-176]
   3dcd4:	mov	w25, wzr
   3dcd8:	cbz	w25, 3f268 <ZSTD_endStream@@Base+0x31314>
   3dcdc:	mov	x8, xzr
   3dce0:	ldr	w9, [x10, x8]
   3dce4:	str	w9, [x20, x8]
   3dce8:	add	x8, x8, #0x4
   3dcec:	cmp	x8, #0xc
   3dcf0:	b.ne	3dce0 <ZSTD_endStream@@Base+0x2fd8c>  // b.any
   3dcf4:	ldur	w1, [x29, #-88]
   3dcf8:	mov	w3, #0x2                   	// #2
   3dcfc:	mov	x0, x27
   3dd00:	stp	wzr, w1, [x26, #8]
   3dd04:	ldur	x2, [x29, #-216]
   3dd08:	bl	418f0 <ZSTD_endStream@@Base+0x3399c>
   3dd0c:	ldur	x10, [x29, #-184]
   3dd10:	sub	w9, w25, #0x1
   3dd14:	str	w0, [x26]
   3dd18:	mov	w20, w0
   3dd1c:	add	x9, x10, w9, uxtw #3
   3dd20:	ldr	w19, [x9, #4]
   3dd24:	mov	w8, wzr
   3dd28:	mov	w0, wzr
   3dd2c:	cmp	w19, w24
   3dd30:	b.ls	3dd78 <ZSTD_endStream@@Base+0x2fe24>  // b.plast
   3dd34:	ldr	w11, [x9]
   3dd38:	ldr	w10, [sp, #200]
   3dd3c:	ldur	w21, [x29, #-88]
   3dd40:	ldur	w8, [x29, #-16]
   3dd44:	ldur	x9, [x29, #-24]
   3dd48:	stp	w10, w11, [x29, #-64]
   3dd4c:	ldr	x10, [sp, #40]
   3dd50:	sub	x0, x29, #0x40
   3dd54:	stp	w19, w21, [x29, #-56]
   3dd58:	str	w11, [sp, #204]
   3dd5c:	str	w8, [x10, #8]
   3dd60:	str	x9, [x10]
   3dd64:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   3dd68:	mov	w28, wzr
   3dd6c:	mov	w8, #0x7                   	// #7
   3dd70:	stur	w19, [x29, #-240]
   3dd74:	str	w21, [sp, #220]
   3dd78:	cbz	w8, 3e06c <ZSTD_endStream@@Base+0x30118>
   3dd7c:	ldur	x20, [x29, #-208]
   3dd80:	cmp	w8, #0x7
   3dd84:	b.ne	3f284 <ZSTD_endStream@@Base+0x31330>  // b.any
   3dd88:	b	40c28 <ZSTD_endStream@@Base+0x32cd4>
   3dd8c:	ldr	w20, [x22, #200]
   3dd90:	mov	x24, x22
   3dd94:	sub	w22, w10, w19
   3dd98:	cmp	w21, w22
   3dd9c:	b.cs	3ddc4 <ZSTD_endStream@@Base+0x2fe70>  // b.hs, b.nlast
   3dda0:	ldur	x2, [x29, #-168]
   3dda4:	add	x1, x19, w21, uxtw
   3dda8:	mov	w4, #0x1                   	// #1
   3ddac:	mov	x0, x24
   3ddb0:	mov	w3, w20
   3ddb4:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   3ddb8:	add	w21, w0, w21
   3ddbc:	cmp	w21, w22
   3ddc0:	b.cc	3dda0 <ZSTD_endStream@@Base+0x2fe4c>  // b.lo, b.ul, b.last
   3ddc4:	sub	w8, w20, #0x6
   3ddc8:	cmp	w8, #0x2
   3ddcc:	mov	x21, x24
   3ddd0:	str	w22, [x24, #36]
   3ddd4:	stur	w28, [x29, #-100]
   3ddd8:	b.cc	3e1ec <ZSTD_endStream@@Base+0x30298>  // b.lo, b.ul, b.last
   3dddc:	cmp	w20, #0x5
   3dde0:	mov	w9, #0xfff                 	// #4095
   3dde4:	b.eq	3e470 <ZSTD_endStream@@Base+0x3051c>  // b.none
   3dde8:	cmp	w20, #0x3
   3ddec:	b.ne	3e6ec <ZSTD_endStream@@Base+0x30798>  // b.any
   3ddf0:	ldr	w8, [x21, #204]
   3ddf4:	ldur	x20, [x29, #-160]
   3ddf8:	ldr	x22, [x21, #8]
   3ddfc:	ldr	w1, [x21, #192]
   3de00:	ldr	x19, [x21, #48]
   3de04:	cmp	w8, #0xfff
   3de08:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3de0c:	mov	w2, #0x3                   	// #3
   3de10:	mov	x0, x20
   3de14:	stur	w8, [x29, #-120]
   3de18:	sub	w26, w20, w22
   3de1c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3de20:	stp	x0, x19, [sp, #104]
   3de24:	ldr	w8, [x19, x0, lsl #2]
   3de28:	mov	w9, #0xffffffff            	// #-1
   3de2c:	ldr	x25, [x21, #16]
   3de30:	ldr	x23, [x21, #64]
   3de34:	str	w8, [sp, #128]
   3de38:	ldp	w2, w8, [x21, #184]
   3de3c:	ldr	w28, [x21, #24]
   3de40:	mov	x0, x21
   3de44:	mov	w1, w26
   3de48:	sub	w8, w8, #0x1
   3de4c:	lsl	w19, w9, w8
   3de50:	mvn	w8, w19
   3de54:	str	w8, [sp, #144]
   3de58:	subs	w8, w26, w8
   3de5c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3de60:	stur	x25, [x29, #-192]
   3de64:	str	w8, [sp, #136]
   3de68:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3de6c:	sub	w10, w26, w28
   3de70:	cmp	w0, #0x0
   3de74:	stur	w10, [x29, #-96]
   3de78:	sub	w10, w26, w0
   3de7c:	stur	w10, [x29, #-144]
   3de80:	csinc	w10, w0, wzr, ne  // ne = any
   3de84:	add	x8, x25, x28
   3de88:	str	w10, [sp, #248]
   3de8c:	ldur	w10, [x29, #-88]
   3de90:	str	x8, [sp, #192]
   3de94:	add	x8, x22, x28
   3de98:	stp	x22, x8, [sp, #176]
   3de9c:	bic	w8, w26, w19
   3dea0:	add	w9, w26, #0x9
   3dea4:	lsl	w8, w8, #1
   3dea8:	stur	w9, [x29, #-228]
   3deac:	ldr	w9, [x21, #196]
   3deb0:	cmp	w10, #0x0
   3deb4:	add	x10, x23, w8, uxtw #2
   3deb8:	mov	w8, #0x3                   	// #3
   3debc:	stur	w26, [x29, #-152]
   3dec0:	str	x23, [sp, #152]
   3dec4:	cinc	x8, x8, eq  // eq = none
   3dec8:	add	x23, x20, #0x3
   3decc:	ldr	x26, [sp, #56]
   3ded0:	ldur	x20, [x29, #-208]
   3ded4:	stur	x8, [x29, #-112]
   3ded8:	add	x8, x10, #0x4
   3dedc:	stp	x8, x10, [sp, #160]
   3dee0:	mov	w8, #0x1                   	// #1
   3dee4:	mov	w24, wzr
   3dee8:	mov	w27, wzr
   3deec:	cset	w22, eq  // eq = none
   3def0:	lsl	w8, w8, w9
   3def4:	str	w8, [sp, #120]
   3def8:	cmp	x22, #0x3
   3defc:	b.ne	3df10 <ZSTD_endStream@@Base+0x2ffbc>  // b.any
   3df00:	ldur	x8, [x29, #-176]
   3df04:	ldr	w8, [x8]
   3df08:	sub	w21, w8, #0x1
   3df0c:	b	3df18 <ZSTD_endStream@@Base+0x2ffc4>
   3df10:	ldur	x8, [x29, #-176]
   3df14:	ldr	w21, [x8, x22, lsl #2]
   3df18:	ldur	w9, [x29, #-96]
   3df1c:	sub	w8, w21, #0x1
   3df20:	cmp	w8, w9
   3df24:	b.cs	3df6c <ZSTD_endStream@@Base+0x30018>  // b.hs, b.nlast
   3df28:	ldur	x25, [x29, #-160]
   3df2c:	mov	w1, #0x3                   	// #3
   3df30:	mov	x0, x25
   3df34:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3df38:	mov	w21, w21
   3df3c:	mov	w20, w0
   3df40:	sub	x0, x25, x21
   3df44:	mov	w1, #0x3                   	// #3
   3df48:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3df4c:	cmp	w20, w0
   3df50:	b.ne	3dfdc <ZSTD_endStream@@Base+0x30088>  // b.any
   3df54:	ldur	x2, [x29, #-168]
   3df58:	neg	x8, x21
   3df5c:	mov	x0, x23
   3df60:	add	x1, x23, x8
   3df64:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3df68:	b	3dfd4 <ZSTD_endStream@@Base+0x30080>
   3df6c:	ldur	w9, [x29, #-144]
   3df70:	cmp	w8, w9
   3df74:	mov	w8, wzr
   3df78:	b.cs	3dfe4 <ZSTD_endStream@@Base+0x30090>  // b.hs, b.nlast
   3df7c:	ldur	w9, [x29, #-152]
   3df80:	sub	w9, w9, w21
   3df84:	mvn	w10, w9
   3df88:	add	w10, w28, w10
   3df8c:	cmp	w10, #0x3
   3df90:	b.cc	3dfe4 <ZSTD_endStream@@Base+0x30090>  // b.lo, b.ul, b.last
   3df94:	ldur	x8, [x29, #-192]
   3df98:	ldur	x0, [x29, #-160]
   3df9c:	mov	w1, #0x3                   	// #3
   3dfa0:	add	x20, x8, w9, uxtw
   3dfa4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3dfa8:	mov	w25, w0
   3dfac:	mov	w1, #0x3                   	// #3
   3dfb0:	mov	x0, x20
   3dfb4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3dfb8:	cmp	w25, w0
   3dfbc:	b.ne	3dfdc <ZSTD_endStream@@Base+0x30088>  // b.any
   3dfc0:	ldur	x2, [x29, #-168]
   3dfc4:	ldp	x4, x3, [sp, #184]
   3dfc8:	add	x1, x20, #0x3
   3dfcc:	mov	x0, x23
   3dfd0:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3dfd4:	add	w8, w0, #0x3
   3dfd8:	b	3dfe0 <ZSTD_endStream@@Base+0x3008c>
   3dfdc:	mov	w8, wzr
   3dfe0:	ldur	x20, [x29, #-208]
   3dfe4:	mov	w9, w8
   3dfe8:	cmp	x26, x9
   3dfec:	b.cs	3e02c <ZSTD_endStream@@Base+0x300d8>  // b.hs, b.nlast
   3dff0:	ldur	x10, [x29, #-184]
   3dff4:	ldur	w11, [x29, #-120]
   3dff8:	add	x10, x10, w27, uxtw #3
   3dffc:	add	w27, w27, #0x1
   3e000:	cmp	w8, w11
   3e004:	stp	w24, w8, [x10]
   3e008:	mov	w8, #0x1                   	// #1
   3e00c:	b.hi	3e05c <ZSTD_endStream@@Base+0x30108>  // b.pmore
   3e010:	ldp	x11, x10, [x29, #-168]
   3e014:	mov	x26, x9
   3e018:	mov	w25, w27
   3e01c:	add	x10, x10, x9
   3e020:	cmp	x10, x11
   3e024:	b.ne	3e030 <ZSTD_endStream@@Base+0x300dc>  // b.any
   3e028:	b	3e03c <ZSTD_endStream@@Base+0x300e8>
   3e02c:	mov	x9, x26
   3e030:	mov	w8, wzr
   3e034:	mov	x26, x9
   3e038:	mov	w25, w19
   3e03c:	cbnz	w8, 3eb54 <ZSTD_endStream@@Base+0x30c00>
   3e040:	ldur	x8, [x29, #-112]
   3e044:	add	x22, x22, #0x1
   3e048:	add	w24, w24, #0x1
   3e04c:	mov	w19, w25
   3e050:	cmp	x22, x8
   3e054:	b.cc	3def8 <ZSTD_endStream@@Base+0x2ffa4>  // b.lo, b.ul, b.last
   3e058:	b	3eb50 <ZSTD_endStream@@Base+0x30bfc>
   3e05c:	mov	x26, x9
   3e060:	mov	w25, w27
   3e064:	cbz	w8, 3e040 <ZSTD_endStream@@Base+0x300ec>
   3e068:	b	3eb54 <ZSTD_endStream@@Base+0x30c00>
   3e06c:	ldur	x1, [x29, #-216]
   3e070:	mov	w2, #0x2                   	// #2
   3e074:	mov	w0, wzr
   3e078:	stur	w28, [x29, #-100]
   3e07c:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3e080:	ldur	x8, [x29, #-136]
   3e084:	ldr	x9, [sp, #32]
   3e088:	mov	w19, #0x1                   	// #1
   3e08c:	mov	w10, #0x40000000            	// #1073741824
   3e090:	add	x19, x19, #0x1
   3e094:	cmp	x19, x9
   3e098:	str	w10, [x8], #28
   3e09c:	b.cc	3e090 <ZSTD_endStream@@Base+0x3013c>  // b.lo, b.ul, b.last
   3e0a0:	add	w8, w0, w20
   3e0a4:	mov	x21, xzr
   3e0a8:	stur	w8, [x29, #-96]
   3e0ac:	mov	w8, w25
   3e0b0:	stur	x8, [x29, #-144]
   3e0b4:	b	3e0cc <ZSTD_endStream@@Base+0x30178>
   3e0b8:	ldur	x21, [x29, #-120]
   3e0bc:	ldur	x8, [x29, #-144]
   3e0c0:	add	x21, x21, #0x1
   3e0c4:	cmp	x21, x8
   3e0c8:	b.cs	3e1c8 <ZSTD_endStream@@Base+0x30274>  // b.hs, b.nlast
   3e0cc:	ldp	x8, x0, [x29, #-184]
   3e0d0:	ldur	w2, [x29, #-124]
   3e0d4:	add	x8, x8, x21, lsl #3
   3e0d8:	ldp	w20, w28, [x8]
   3e0dc:	mov	w1, w20
   3e0e0:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   3e0e4:	cmp	w19, w28
   3e0e8:	stur	x21, [x29, #-120]
   3e0ec:	b.hi	3e0b8 <ZSTD_endStream@@Base+0x30164>  // b.pmore
   3e0f0:	mov	x24, x0
   3e0f4:	add	w0, w20, #0x1
   3e0f8:	mov	x27, x1
   3e0fc:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   3e100:	lsl	w8, w0, #8
   3e104:	mov	w23, w0
   3e108:	add	w8, w8, #0x1, lsl #12
   3e10c:	stur	w8, [x29, #-112]
   3e110:	b	3e1a4 <ZSTD_endStream@@Base+0x30250>
   3e114:	ldr	x8, [x22, #96]
   3e118:	ldr	w21, [x22, #148]
   3e11c:	ldr	w0, [x8, x23, lsl #2]
   3e120:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   3e124:	mov	w26, w0
   3e128:	mov	w0, w25
   3e12c:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   3e130:	mov	w8, w0
   3e134:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   3e138:	ldr	x9, [x22, #88]
   3e13c:	lsl	x8, x8, #2
   3e140:	add	x10, x10, #0xca8
   3e144:	ldr	w25, [x10, x8]
   3e148:	ldur	x10, [x29, #-72]
   3e14c:	ldr	w0, [x9, x8]
   3e150:	ldr	w22, [x10, #144]
   3e154:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   3e158:	sub	w9, w21, w26
   3e15c:	add	w8, w25, w23
   3e160:	add	w9, w9, w22
   3e164:	ldp	x26, x22, [x29, #-80]
   3e168:	add	w8, w9, w8, lsl #8
   3e16c:	sub	w8, w8, w0
   3e170:	add	w8, w8, #0x33
   3e174:	ldur	w9, [x29, #-96]
   3e178:	ldur	w10, [x29, #-88]
   3e17c:	add	w8, w9, w8
   3e180:	mov	w9, #0x1c                  	// #28
   3e184:	umaddl	x9, w19, w9, x26
   3e188:	stp	w19, w10, [x9, #8]
   3e18c:	add	w19, w19, #0x1
   3e190:	cmp	w19, w28
   3e194:	stp	w8, w20, [x9]
   3e198:	str	x24, [x9, #16]
   3e19c:	str	w27, [x9, #24]
   3e1a0:	b.hi	3e0b8 <ZSTD_endStream@@Base+0x30164>  // b.pmore
   3e1a4:	ldr	w8, [x22, #152]
   3e1a8:	sub	w25, w19, #0x3
   3e1ac:	cmp	w8, #0x1
   3e1b0:	b.ne	3e114 <ZSTD_endStream@@Base+0x301c0>  // b.any
   3e1b4:	mov	w0, w25
   3e1b8:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   3e1bc:	ldur	w8, [x29, #-112]
   3e1c0:	add	w8, w8, w0
   3e1c4:	b	3e174 <ZSTD_endStream@@Base+0x30220>
   3e1c8:	ldr	x27, [sp, #208]
   3e1cc:	ldur	w24, [x29, #-196]
   3e1d0:	ldur	x20, [x29, #-208]
   3e1d4:	ldur	w28, [x29, #-100]
   3e1d8:	mov	w8, wzr
   3e1dc:	sub	w0, w19, #0x1
   3e1e0:	cmp	w8, #0x7
   3e1e4:	b.ne	3f284 <ZSTD_endStream@@Base+0x31330>  // b.any
   3e1e8:	b	40c28 <ZSTD_endStream@@Base+0x32cd4>
   3e1ec:	ldr	w8, [x21, #204]
   3e1f0:	ldur	x20, [x29, #-160]
   3e1f4:	ldr	x22, [x21, #8]
   3e1f8:	ldr	w1, [x21, #192]
   3e1fc:	ldr	x19, [x21, #48]
   3e200:	cmp	w8, #0xfff
   3e204:	mov	w9, #0xfff                 	// #4095
   3e208:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3e20c:	mov	w2, #0x6                   	// #6
   3e210:	mov	x0, x20
   3e214:	stur	w8, [x29, #-144]
   3e218:	sub	w28, w20, w22
   3e21c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3e220:	stp	x0, x19, [sp, #112]
   3e224:	ldr	w8, [x19, x0, lsl #2]
   3e228:	mov	w9, #0xffffffff            	// #-1
   3e22c:	ldr	x25, [x21, #64]
   3e230:	ldr	x23, [x21, #16]
   3e234:	str	w8, [sp, #128]
   3e238:	ldp	w2, w8, [x21, #184]
   3e23c:	ldr	w27, [x21, #24]
   3e240:	mov	x0, x21
   3e244:	mov	w1, w28
   3e248:	sub	w8, w8, #0x1
   3e24c:	lsl	w19, w9, w8
   3e250:	mvn	w8, w19
   3e254:	str	w8, [sp, #144]
   3e258:	subs	w8, w28, w8
   3e25c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3e260:	str	w8, [sp, #136]
   3e264:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3e268:	sub	w10, w28, w27
   3e26c:	cmp	w0, #0x0
   3e270:	stur	w10, [x29, #-96]
   3e274:	sub	w10, w28, w0
   3e278:	stur	w10, [x29, #-152]
   3e27c:	csinc	w10, w0, wzr, ne  // ne = any
   3e280:	add	x8, x23, x27
   3e284:	str	w10, [sp, #248]
   3e288:	ldur	w10, [x29, #-88]
   3e28c:	stp	x8, x22, [sp, #184]
   3e290:	add	x8, x22, x27
   3e294:	str	x8, [sp, #176]
   3e298:	bic	w8, w28, w19
   3e29c:	add	w9, w28, #0x9
   3e2a0:	lsl	w8, w8, #1
   3e2a4:	stur	w9, [x29, #-228]
   3e2a8:	ldr	w9, [x21, #196]
   3e2ac:	cmp	w10, #0x0
   3e2b0:	add	x10, x25, w8, uxtw #2
   3e2b4:	mov	w8, #0x3                   	// #3
   3e2b8:	stur	x23, [x29, #-192]
   3e2bc:	stur	x27, [x29, #-120]
   3e2c0:	mov	w23, w28
   3e2c4:	cinc	x8, x8, eq  // eq = none
   3e2c8:	add	x28, x20, #0x4
   3e2cc:	ldr	x27, [sp, #56]
   3e2d0:	ldur	x20, [x29, #-208]
   3e2d4:	stur	x8, [x29, #-112]
   3e2d8:	add	x8, x10, #0x4
   3e2dc:	stp	x8, x10, [sp, #160]
   3e2e0:	mov	w8, #0x1                   	// #1
   3e2e4:	mov	w24, wzr
   3e2e8:	mov	w26, wzr
   3e2ec:	cset	w22, eq  // eq = none
   3e2f0:	lsl	w8, w8, w9
   3e2f4:	str	x25, [sp, #152]
   3e2f8:	str	w8, [sp, #104]
   3e2fc:	cmp	x22, #0x3
   3e300:	b.ne	3e314 <ZSTD_endStream@@Base+0x303c0>  // b.any
   3e304:	ldur	x8, [x29, #-176]
   3e308:	ldr	w8, [x8]
   3e30c:	sub	w21, w8, #0x1
   3e310:	b	3e31c <ZSTD_endStream@@Base+0x303c8>
   3e314:	ldur	x8, [x29, #-176]
   3e318:	ldr	w21, [x8, x22, lsl #2]
   3e31c:	ldur	w9, [x29, #-96]
   3e320:	sub	w8, w21, #0x1
   3e324:	cmp	w8, w9
   3e328:	b.cs	3e370 <ZSTD_endStream@@Base+0x3041c>  // b.hs, b.nlast
   3e32c:	ldur	x25, [x29, #-160]
   3e330:	mov	w1, #0x4                   	// #4
   3e334:	mov	x0, x25
   3e338:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e33c:	mov	w21, w21
   3e340:	mov	w20, w0
   3e344:	sub	x0, x25, x21
   3e348:	mov	w1, #0x4                   	// #4
   3e34c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e350:	cmp	w20, w0
   3e354:	b.ne	3e3e0 <ZSTD_endStream@@Base+0x3048c>  // b.any
   3e358:	ldur	x2, [x29, #-168]
   3e35c:	neg	x8, x21
   3e360:	mov	x0, x28
   3e364:	add	x1, x28, x8
   3e368:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3e36c:	b	3e3d8 <ZSTD_endStream@@Base+0x30484>
   3e370:	ldur	w9, [x29, #-152]
   3e374:	cmp	w8, w9
   3e378:	mov	w8, wzr
   3e37c:	b.cs	3e3e8 <ZSTD_endStream@@Base+0x30494>  // b.hs, b.nlast
   3e380:	ldur	x11, [x29, #-120]
   3e384:	sub	w9, w23, w21
   3e388:	mvn	w10, w9
   3e38c:	add	w10, w11, w10
   3e390:	cmp	w10, #0x3
   3e394:	b.cc	3e3e8 <ZSTD_endStream@@Base+0x30494>  // b.lo, b.ul, b.last
   3e398:	ldur	x8, [x29, #-192]
   3e39c:	ldur	x0, [x29, #-160]
   3e3a0:	mov	w1, #0x4                   	// #4
   3e3a4:	add	x20, x8, w9, uxtw
   3e3a8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e3ac:	mov	w25, w0
   3e3b0:	mov	w1, #0x4                   	// #4
   3e3b4:	mov	x0, x20
   3e3b8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e3bc:	cmp	w25, w0
   3e3c0:	b.ne	3e3e0 <ZSTD_endStream@@Base+0x3048c>  // b.any
   3e3c4:	ldur	x2, [x29, #-168]
   3e3c8:	ldp	x4, x3, [sp, #176]
   3e3cc:	add	x1, x20, #0x4
   3e3d0:	mov	x0, x28
   3e3d4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3e3d8:	add	w8, w0, #0x4
   3e3dc:	b	3e3e4 <ZSTD_endStream@@Base+0x30490>
   3e3e0:	mov	w8, wzr
   3e3e4:	ldur	x20, [x29, #-208]
   3e3e8:	mov	w9, w8
   3e3ec:	cmp	x27, x9
   3e3f0:	b.cs	3e430 <ZSTD_endStream@@Base+0x304dc>  // b.hs, b.nlast
   3e3f4:	ldur	x10, [x29, #-184]
   3e3f8:	ldur	w11, [x29, #-144]
   3e3fc:	add	x10, x10, w26, uxtw #3
   3e400:	add	w26, w26, #0x1
   3e404:	cmp	w8, w11
   3e408:	stp	w24, w8, [x10]
   3e40c:	mov	w8, #0x1                   	// #1
   3e410:	b.hi	3e460 <ZSTD_endStream@@Base+0x3050c>  // b.pmore
   3e414:	ldp	x11, x10, [x29, #-168]
   3e418:	mov	x27, x9
   3e41c:	mov	w25, w26
   3e420:	add	x10, x10, x9
   3e424:	cmp	x10, x11
   3e428:	b.ne	3e434 <ZSTD_endStream@@Base+0x304e0>  // b.any
   3e42c:	b	3e440 <ZSTD_endStream@@Base+0x304ec>
   3e430:	mov	x9, x27
   3e434:	mov	w8, wzr
   3e438:	mov	x27, x9
   3e43c:	mov	w25, w19
   3e440:	cbnz	w8, 3e96c <ZSTD_endStream@@Base+0x30a18>
   3e444:	ldur	x8, [x29, #-112]
   3e448:	add	x22, x22, #0x1
   3e44c:	add	w24, w24, #0x1
   3e450:	mov	w19, w25
   3e454:	cmp	x22, x8
   3e458:	b.cc	3e2fc <ZSTD_endStream@@Base+0x303a8>  // b.lo, b.ul, b.last
   3e45c:	b	3e968 <ZSTD_endStream@@Base+0x30a14>
   3e460:	mov	x27, x9
   3e464:	mov	w25, w26
   3e468:	cbz	w8, 3e444 <ZSTD_endStream@@Base+0x304f0>
   3e46c:	b	3e96c <ZSTD_endStream@@Base+0x30a18>
   3e470:	ldr	w8, [x21, #204]
   3e474:	ldur	x20, [x29, #-160]
   3e478:	ldr	x22, [x21, #8]
   3e47c:	ldr	w1, [x21, #192]
   3e480:	ldr	x19, [x21, #48]
   3e484:	cmp	w8, #0xfff
   3e488:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3e48c:	mov	w2, #0x5                   	// #5
   3e490:	mov	x0, x20
   3e494:	stur	w8, [x29, #-120]
   3e498:	sub	w28, w20, w22
   3e49c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3e4a0:	stp	x0, x19, [sp, #104]
   3e4a4:	ldr	w8, [x19, x0, lsl #2]
   3e4a8:	mov	w9, #0xffffffff            	// #-1
   3e4ac:	ldr	x25, [x21, #64]
   3e4b0:	ldr	x23, [x21, #16]
   3e4b4:	str	w8, [sp, #120]
   3e4b8:	ldp	w2, w8, [x21, #184]
   3e4bc:	ldr	w27, [x21, #24]
   3e4c0:	mov	x0, x21
   3e4c4:	mov	w1, w28
   3e4c8:	sub	w8, w8, #0x1
   3e4cc:	lsl	w19, w9, w8
   3e4d0:	mvn	w8, w19
   3e4d4:	str	w8, [sp, #136]
   3e4d8:	subs	w8, w28, w8
   3e4dc:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3e4e0:	str	w8, [sp, #128]
   3e4e4:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3e4e8:	sub	w10, w28, w27
   3e4ec:	cmp	w0, #0x0
   3e4f0:	stur	w10, [x29, #-96]
   3e4f4:	sub	w10, w28, w0
   3e4f8:	stur	w10, [x29, #-144]
   3e4fc:	csinc	w10, w0, wzr, ne  // ne = any
   3e500:	add	x8, x23, x27
   3e504:	str	w10, [sp, #192]
   3e508:	ldur	w10, [x29, #-88]
   3e50c:	stp	x8, x22, [sp, #176]
   3e510:	add	x8, x22, x27
   3e514:	str	x8, [sp, #168]
   3e518:	bic	w8, w28, w19
   3e51c:	add	w9, w28, #0x9
   3e520:	lsl	w8, w8, #1
   3e524:	str	w9, [sp, #248]
   3e528:	ldr	w9, [x21, #196]
   3e52c:	cmp	w10, #0x0
   3e530:	add	x10, x25, w8, uxtw #2
   3e534:	mov	w8, #0x3                   	// #3
   3e538:	stur	x23, [x29, #-152]
   3e53c:	stur	x27, [x29, #-192]
   3e540:	cinc	x8, x8, eq  // eq = none
   3e544:	add	x23, x20, #0x4
   3e548:	ldr	x27, [sp, #56]
   3e54c:	ldur	x20, [x29, #-208]
   3e550:	stur	x8, [x29, #-112]
   3e554:	add	x8, x10, #0x4
   3e558:	stp	x8, x10, [sp, #152]
   3e55c:	mov	w8, #0x1                   	// #1
   3e560:	mov	w24, wzr
   3e564:	mov	w26, wzr
   3e568:	stur	w28, [x29, #-228]
   3e56c:	cset	w22, eq  // eq = none
   3e570:	lsl	w28, w8, w9
   3e574:	str	x25, [sp, #144]
   3e578:	cmp	x22, #0x3
   3e57c:	b.ne	3e590 <ZSTD_endStream@@Base+0x3063c>  // b.any
   3e580:	ldur	x8, [x29, #-176]
   3e584:	ldr	w8, [x8]
   3e588:	sub	w21, w8, #0x1
   3e58c:	b	3e598 <ZSTD_endStream@@Base+0x30644>
   3e590:	ldur	x8, [x29, #-176]
   3e594:	ldr	w21, [x8, x22, lsl #2]
   3e598:	ldur	w9, [x29, #-96]
   3e59c:	sub	w8, w21, #0x1
   3e5a0:	cmp	w8, w9
   3e5a4:	b.cs	3e5ec <ZSTD_endStream@@Base+0x30698>  // b.hs, b.nlast
   3e5a8:	ldur	x25, [x29, #-160]
   3e5ac:	mov	w1, #0x4                   	// #4
   3e5b0:	mov	x0, x25
   3e5b4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e5b8:	mov	w21, w21
   3e5bc:	mov	w20, w0
   3e5c0:	sub	x0, x25, x21
   3e5c4:	mov	w1, #0x4                   	// #4
   3e5c8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e5cc:	cmp	w20, w0
   3e5d0:	b.ne	3e65c <ZSTD_endStream@@Base+0x30708>  // b.any
   3e5d4:	ldur	x2, [x29, #-168]
   3e5d8:	neg	x8, x21
   3e5dc:	mov	x0, x23
   3e5e0:	add	x1, x23, x8
   3e5e4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3e5e8:	b	3e654 <ZSTD_endStream@@Base+0x30700>
   3e5ec:	ldur	w9, [x29, #-144]
   3e5f0:	cmp	w8, w9
   3e5f4:	mov	w8, wzr
   3e5f8:	b.cs	3e664 <ZSTD_endStream@@Base+0x30710>  // b.hs, b.nlast
   3e5fc:	ldur	w9, [x29, #-228]
   3e600:	ldur	x11, [x29, #-192]
   3e604:	sub	w9, w9, w21
   3e608:	mvn	w10, w9
   3e60c:	add	w10, w11, w10
   3e610:	cmp	w10, #0x3
   3e614:	b.cc	3e664 <ZSTD_endStream@@Base+0x30710>  // b.lo, b.ul, b.last
   3e618:	ldp	x0, x8, [x29, #-160]
   3e61c:	mov	w1, #0x4                   	// #4
   3e620:	add	x20, x8, w9, uxtw
   3e624:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e628:	mov	w25, w0
   3e62c:	mov	w1, #0x4                   	// #4
   3e630:	mov	x0, x20
   3e634:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e638:	cmp	w25, w0
   3e63c:	b.ne	3e65c <ZSTD_endStream@@Base+0x30708>  // b.any
   3e640:	ldur	x2, [x29, #-168]
   3e644:	ldp	x4, x3, [sp, #168]
   3e648:	add	x1, x20, #0x4
   3e64c:	mov	x0, x23
   3e650:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3e654:	add	w8, w0, #0x4
   3e658:	b	3e660 <ZSTD_endStream@@Base+0x3070c>
   3e65c:	mov	w8, wzr
   3e660:	ldur	x20, [x29, #-208]
   3e664:	mov	w9, w8
   3e668:	cmp	x27, x9
   3e66c:	b.cs	3e6ac <ZSTD_endStream@@Base+0x30758>  // b.hs, b.nlast
   3e670:	ldur	x10, [x29, #-184]
   3e674:	ldur	w11, [x29, #-120]
   3e678:	add	x10, x10, w26, uxtw #3
   3e67c:	add	w26, w26, #0x1
   3e680:	cmp	w8, w11
   3e684:	stp	w24, w8, [x10]
   3e688:	mov	w8, #0x1                   	// #1
   3e68c:	b.hi	3e6dc <ZSTD_endStream@@Base+0x30788>  // b.pmore
   3e690:	ldp	x11, x10, [x29, #-168]
   3e694:	mov	x27, x9
   3e698:	mov	w25, w26
   3e69c:	add	x10, x10, x9
   3e6a0:	cmp	x10, x11
   3e6a4:	b.ne	3e6b0 <ZSTD_endStream@@Base+0x3075c>  // b.any
   3e6a8:	b	3e6bc <ZSTD_endStream@@Base+0x30768>
   3e6ac:	mov	x9, x27
   3e6b0:	mov	w8, wzr
   3e6b4:	mov	x27, x9
   3e6b8:	mov	w25, w19
   3e6bc:	cbnz	w8, 3eb68 <ZSTD_endStream@@Base+0x30c14>
   3e6c0:	ldur	x8, [x29, #-112]
   3e6c4:	add	x22, x22, #0x1
   3e6c8:	add	w24, w24, #0x1
   3e6cc:	mov	w19, w25
   3e6d0:	cmp	x22, x8
   3e6d4:	b.cc	3e578 <ZSTD_endStream@@Base+0x30624>  // b.lo, b.ul, b.last
   3e6d8:	b	3eb64 <ZSTD_endStream@@Base+0x30c10>
   3e6dc:	mov	x27, x9
   3e6e0:	mov	w25, w26
   3e6e4:	cbz	w8, 3e6c0 <ZSTD_endStream@@Base+0x3076c>
   3e6e8:	b	3eb68 <ZSTD_endStream@@Base+0x30c14>
   3e6ec:	ldr	w8, [x21, #204]
   3e6f0:	ldur	x20, [x29, #-160]
   3e6f4:	ldr	x23, [x21, #8]
   3e6f8:	ldr	w1, [x21, #192]
   3e6fc:	ldr	x19, [x21, #48]
   3e700:	cmp	w8, #0xfff
   3e704:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3e708:	mov	w2, #0x4                   	// #4
   3e70c:	mov	x0, x20
   3e710:	stur	w8, [x29, #-120]
   3e714:	sub	w28, w20, w23
   3e718:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3e71c:	stp	x0, x19, [sp, #104]
   3e720:	ldr	w8, [x19, x0, lsl #2]
   3e724:	mov	w9, #0xffffffff            	// #-1
   3e728:	ldr	x25, [x21, #64]
   3e72c:	ldr	x22, [x21, #16]
   3e730:	str	w8, [sp, #120]
   3e734:	ldp	w2, w8, [x21, #184]
   3e738:	ldr	w27, [x21, #24]
   3e73c:	mov	x0, x21
   3e740:	mov	w1, w28
   3e744:	sub	w8, w8, #0x1
   3e748:	lsl	w19, w9, w8
   3e74c:	mvn	w8, w19
   3e750:	str	w8, [sp, #136]
   3e754:	subs	w8, w28, w8
   3e758:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3e75c:	str	w8, [sp, #128]
   3e760:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3e764:	sub	w10, w28, w27
   3e768:	cmp	w0, #0x0
   3e76c:	stur	w10, [x29, #-96]
   3e770:	sub	w10, w28, w0
   3e774:	stur	w10, [x29, #-144]
   3e778:	csinc	w10, w0, wzr, ne  // ne = any
   3e77c:	add	x8, x22, x27
   3e780:	str	w10, [sp, #192]
   3e784:	ldur	w10, [x29, #-88]
   3e788:	stp	x8, x23, [sp, #176]
   3e78c:	add	x8, x23, x27
   3e790:	str	x8, [sp, #168]
   3e794:	bic	w8, w28, w19
   3e798:	add	w9, w28, #0x9
   3e79c:	lsl	w8, w8, #1
   3e7a0:	str	w9, [sp, #248]
   3e7a4:	ldr	w9, [x21, #196]
   3e7a8:	cmp	w10, #0x0
   3e7ac:	add	x10, x25, w8, uxtw #2
   3e7b0:	mov	w8, #0x3                   	// #3
   3e7b4:	stur	x27, [x29, #-192]
   3e7b8:	cinc	x8, x8, eq  // eq = none
   3e7bc:	add	x23, x20, #0x4
   3e7c0:	ldr	x27, [sp, #56]
   3e7c4:	ldur	x20, [x29, #-208]
   3e7c8:	stur	x8, [x29, #-112]
   3e7cc:	add	x8, x10, #0x4
   3e7d0:	stp	x8, x10, [sp, #152]
   3e7d4:	mov	w8, #0x1                   	// #1
   3e7d8:	mov	w24, wzr
   3e7dc:	mov	w26, wzr
   3e7e0:	stur	x22, [x29, #-152]
   3e7e4:	stur	w28, [x29, #-228]
   3e7e8:	cset	w22, eq  // eq = none
   3e7ec:	lsl	w28, w8, w9
   3e7f0:	str	x25, [sp, #144]
   3e7f4:	cmp	x22, #0x3
   3e7f8:	b.ne	3e80c <ZSTD_endStream@@Base+0x308b8>  // b.any
   3e7fc:	ldur	x8, [x29, #-176]
   3e800:	ldr	w8, [x8]
   3e804:	sub	w21, w8, #0x1
   3e808:	b	3e814 <ZSTD_endStream@@Base+0x308c0>
   3e80c:	ldur	x8, [x29, #-176]
   3e810:	ldr	w21, [x8, x22, lsl #2]
   3e814:	ldur	w9, [x29, #-96]
   3e818:	sub	w8, w21, #0x1
   3e81c:	cmp	w8, w9
   3e820:	b.cs	3e868 <ZSTD_endStream@@Base+0x30914>  // b.hs, b.nlast
   3e824:	ldur	x25, [x29, #-160]
   3e828:	mov	w1, #0x4                   	// #4
   3e82c:	mov	x0, x25
   3e830:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e834:	mov	w21, w21
   3e838:	mov	w20, w0
   3e83c:	sub	x0, x25, x21
   3e840:	mov	w1, #0x4                   	// #4
   3e844:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e848:	cmp	w20, w0
   3e84c:	b.ne	3e8d8 <ZSTD_endStream@@Base+0x30984>  // b.any
   3e850:	ldur	x2, [x29, #-168]
   3e854:	neg	x8, x21
   3e858:	mov	x0, x23
   3e85c:	add	x1, x23, x8
   3e860:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3e864:	b	3e8d0 <ZSTD_endStream@@Base+0x3097c>
   3e868:	ldur	w9, [x29, #-144]
   3e86c:	cmp	w8, w9
   3e870:	mov	w8, wzr
   3e874:	b.cs	3e8e0 <ZSTD_endStream@@Base+0x3098c>  // b.hs, b.nlast
   3e878:	ldur	w9, [x29, #-228]
   3e87c:	ldur	x11, [x29, #-192]
   3e880:	sub	w9, w9, w21
   3e884:	mvn	w10, w9
   3e888:	add	w10, w11, w10
   3e88c:	cmp	w10, #0x3
   3e890:	b.cc	3e8e0 <ZSTD_endStream@@Base+0x3098c>  // b.lo, b.ul, b.last
   3e894:	ldp	x0, x8, [x29, #-160]
   3e898:	mov	w1, #0x4                   	// #4
   3e89c:	add	x20, x8, w9, uxtw
   3e8a0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e8a4:	mov	w25, w0
   3e8a8:	mov	w1, #0x4                   	// #4
   3e8ac:	mov	x0, x20
   3e8b0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3e8b4:	cmp	w25, w0
   3e8b8:	b.ne	3e8d8 <ZSTD_endStream@@Base+0x30984>  // b.any
   3e8bc:	ldur	x2, [x29, #-168]
   3e8c0:	ldp	x4, x3, [sp, #168]
   3e8c4:	add	x1, x20, #0x4
   3e8c8:	mov	x0, x23
   3e8cc:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3e8d0:	add	w8, w0, #0x4
   3e8d4:	b	3e8dc <ZSTD_endStream@@Base+0x30988>
   3e8d8:	mov	w8, wzr
   3e8dc:	ldur	x20, [x29, #-208]
   3e8e0:	mov	w9, w8
   3e8e4:	cmp	x27, x9
   3e8e8:	b.cs	3e928 <ZSTD_endStream@@Base+0x309d4>  // b.hs, b.nlast
   3e8ec:	ldur	x10, [x29, #-184]
   3e8f0:	ldur	w11, [x29, #-120]
   3e8f4:	add	x10, x10, w26, uxtw #3
   3e8f8:	add	w26, w26, #0x1
   3e8fc:	cmp	w8, w11
   3e900:	stp	w24, w8, [x10]
   3e904:	mov	w8, #0x1                   	// #1
   3e908:	b.hi	3e958 <ZSTD_endStream@@Base+0x30a04>  // b.pmore
   3e90c:	ldp	x11, x10, [x29, #-168]
   3e910:	mov	x27, x9
   3e914:	mov	w25, w26
   3e918:	add	x10, x10, x9
   3e91c:	cmp	x10, x11
   3e920:	b.ne	3e92c <ZSTD_endStream@@Base+0x309d8>  // b.any
   3e924:	b	3e938 <ZSTD_endStream@@Base+0x309e4>
   3e928:	mov	x9, x27
   3e92c:	mov	w8, wzr
   3e930:	mov	x27, x9
   3e934:	mov	w25, w19
   3e938:	cbnz	w8, 3ed38 <ZSTD_endStream@@Base+0x30de4>
   3e93c:	ldur	x8, [x29, #-112]
   3e940:	add	x22, x22, #0x1
   3e944:	add	w24, w24, #0x1
   3e948:	mov	w19, w25
   3e94c:	cmp	x22, x8
   3e950:	b.cc	3e7f4 <ZSTD_endStream@@Base+0x308a0>  // b.lo, b.ul, b.last
   3e954:	b	3ed34 <ZSTD_endStream@@Base+0x30de0>
   3e958:	mov	x27, x9
   3e95c:	mov	w25, w26
   3e960:	cbz	w8, 3e93c <ZSTD_endStream@@Base+0x309e8>
   3e964:	b	3ed38 <ZSTD_endStream@@Base+0x30de4>
   3e968:	mov	w8, wzr
   3e96c:	ldur	w24, [x29, #-196]
   3e970:	cbnz	w8, 3ef2c <ZSTD_endStream@@Base+0x30fd8>
   3e974:	ldp	x9, x8, [sp, #112]
   3e978:	ldr	w19, [sp, #128]
   3e97c:	ldr	w28, [sp, #104]
   3e980:	mov	x20, xzr
   3e984:	mov	x22, xzr
   3e988:	str	w23, [x8, x9, lsl #2]
   3e98c:	add	w8, w23, #0x2
   3e990:	stur	w8, [x29, #-96]
   3e994:	b	3e9b4 <ZSTD_endStream@@Base+0x30a60>
   3e998:	str	x9, [sp, #160]
   3e99c:	mov	x20, x8
   3e9a0:	mov	x8, x22
   3e9a4:	ldr	w19, [x9]
   3e9a8:	mov	w9, #0x1                   	// #1
   3e9ac:	mov	x22, x8
   3e9b0:	tbz	w9, #0, 3eb38 <ZSTD_endStream@@Base+0x30be4>
   3e9b4:	subs	w28, w28, #0x1
   3e9b8:	b.cc	3eb38 <ZSTD_endStream@@Base+0x30be4>  // b.lo, b.ul, b.last
   3e9bc:	ldr	w8, [sp, #248]
   3e9c0:	cmp	w19, w8
   3e9c4:	b.cc	3eb38 <ZSTD_endStream@@Base+0x30be4>  // b.lo, b.ul, b.last
   3e9c8:	ldur	x9, [x29, #-120]
   3e9cc:	cmp	x22, x20
   3e9d0:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   3e9d4:	mov	w21, w19
   3e9d8:	add	x8, x23, x21
   3e9dc:	cmp	x8, x9
   3e9e0:	b.cs	3ea38 <ZSTD_endStream@@Base+0x30ae4>  // b.hs, b.nlast
   3e9e4:	mov	x8, x9
   3e9e8:	ldur	x9, [x29, #-192]
   3e9ec:	mov	w25, w19
   3e9f0:	mov	x19, x8
   3e9f4:	ldp	x2, x8, [x29, #-168]
   3e9f8:	ldp	x4, x3, [sp, #176]
   3e9fc:	add	x24, x9, x21
   3ea00:	add	x1, x24, x23
   3ea04:	add	x0, x8, x23
   3ea08:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3ea0c:	ldr	x10, [sp, #192]
   3ea10:	add	x8, x0, x23
   3ea14:	add	x9, x8, x21
   3ea18:	cmp	x9, x19
   3ea1c:	add	x10, x10, x21
   3ea20:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   3ea24:	ldur	w24, [x29, #-196]
   3ea28:	mov	w19, w25
   3ea2c:	cmp	x8, x27
   3ea30:	b.hi	3ea5c <ZSTD_endStream@@Base+0x30b08>  // b.pmore
   3ea34:	b	3eaac <ZSTD_endStream@@Base+0x30b58>
   3ea38:	ldr	x8, [sp, #192]
   3ea3c:	add	x21, x8, x21
   3ea40:	ldp	x2, x8, [x29, #-168]
   3ea44:	add	x1, x21, x23
   3ea48:	add	x0, x8, x23
   3ea4c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3ea50:	add	x8, x0, x23
   3ea54:	cmp	x8, x27
   3ea58:	b.ls	3eaac <ZSTD_endStream@@Base+0x30b58>  // b.plast
   3ea5c:	ldur	w14, [x29, #-228]
   3ea60:	ldur	w12, [x29, #-96]
   3ea64:	ldur	x13, [x29, #-184]
   3ea68:	add	w11, w19, w8
   3ea6c:	sub	w10, w14, w19
   3ea70:	cmp	x8, x10
   3ea74:	mov	w9, wzr
   3ea78:	sub	w12, w12, w19
   3ea7c:	add	x13, x13, w26, uxtw #3
   3ea80:	csel	w14, w11, w14, hi  // hi = pmore
   3ea84:	cmp	x8, #0x1, lsl #12
   3ea88:	add	w26, w26, #0x1
   3ea8c:	stp	w12, w8, [x13]
   3ea90:	stur	w14, [x29, #-228]
   3ea94:	b.hi	3eb1c <ZSTD_endStream@@Base+0x30bc8>  // b.pmore
   3ea98:	ldp	x11, x10, [x29, #-168]
   3ea9c:	mov	x27, x8
   3eaa0:	add	x10, x10, x8
   3eaa4:	cmp	x10, x11
   3eaa8:	b.eq	3eb1c <ZSTD_endStream@@Base+0x30bc8>  // b.none
   3eaac:	ldur	x10, [x29, #-160]
   3eab0:	ldrb	w9, [x21, x8]
   3eab4:	ldr	w11, [sp, #144]
   3eab8:	ldrb	w10, [x10, x8]
   3eabc:	and	w11, w19, w11
   3eac0:	lsl	w11, w11, #1
   3eac4:	cmp	w9, w10
   3eac8:	ldr	x9, [sp, #152]
   3eacc:	add	x9, x9, w11, uxtw #2
   3ead0:	b.cs	3eaf4 <ZSTD_endStream@@Base+0x30ba0>  // b.hs, b.nlast
   3ead4:	ldr	w10, [sp, #136]
   3ead8:	cmp	w19, w10
   3eadc:	ldr	x10, [sp, #168]
   3eae0:	str	w19, [x10]
   3eae4:	b.ls	3eb28 <ZSTD_endStream@@Base+0x30bd4>  // b.plast
   3eae8:	add	x9, x9, #0x4
   3eaec:	str	x9, [sp, #168]
   3eaf0:	b	3e9a4 <ZSTD_endStream@@Base+0x30a50>
   3eaf4:	ldr	w10, [sp, #136]
   3eaf8:	cmp	w19, w10
   3eafc:	ldr	x10, [sp, #160]
   3eb00:	str	w19, [x10]
   3eb04:	b.hi	3e998 <ZSTD_endStream@@Base+0x30a44>  // b.pmore
   3eb08:	sub	x10, x29, #0x40
   3eb0c:	mov	w9, wzr
   3eb10:	str	x10, [sp, #160]
   3eb14:	mov	x20, x8
   3eb18:	b	3eb20 <ZSTD_endStream@@Base+0x30bcc>
   3eb1c:	mov	x27, x8
   3eb20:	mov	x8, x22
   3eb24:	b	3e9ac <ZSTD_endStream@@Base+0x30a58>
   3eb28:	sub	x10, x29, #0x40
   3eb2c:	mov	w9, wzr
   3eb30:	str	x10, [sp, #168]
   3eb34:	b	3e9ac <ZSTD_endStream@@Base+0x30a58>
   3eb38:	ldr	x8, [sp, #160]
   3eb3c:	str	wzr, [x8]
   3eb40:	ldr	x8, [sp, #168]
   3eb44:	str	wzr, [x8]
   3eb48:	ldur	w8, [x29, #-228]
   3eb4c:	b	3ef18 <ZSTD_endStream@@Base+0x30fc4>
   3eb50:	mov	w8, wzr
   3eb54:	cbz	w8, 3ef3c <ZSTD_endStream@@Base+0x30fe8>
   3eb58:	ldur	x10, [x29, #-176]
   3eb5c:	ldur	x22, [x29, #-72]
   3eb60:	b	3f254 <ZSTD_endStream@@Base+0x31300>
   3eb64:	mov	w8, wzr
   3eb68:	ldur	w24, [x29, #-196]
   3eb6c:	cbnz	w8, 3ef2c <ZSTD_endStream@@Base+0x30fd8>
   3eb70:	ldp	x9, x8, [sp, #104]
   3eb74:	ldur	w23, [x29, #-228]
   3eb78:	ldur	x19, [x29, #-192]
   3eb7c:	ldr	w15, [sp, #120]
   3eb80:	mov	x20, xzr
   3eb84:	mov	x22, xzr
   3eb88:	str	w23, [x8, x9, lsl #2]
   3eb8c:	add	w8, w23, #0x2
   3eb90:	stur	w8, [x29, #-96]
   3eb94:	b	3eba8 <ZSTD_endStream@@Base+0x30c54>
   3eb98:	mov	x27, x8
   3eb9c:	mov	x8, x22
   3eba0:	mov	x22, x8
   3eba4:	tbz	w9, #0, 3ef04 <ZSTD_endStream@@Base+0x30fb0>
   3eba8:	subs	w28, w28, #0x1
   3ebac:	b.cc	3ef04 <ZSTD_endStream@@Base+0x30fb0>  // b.lo, b.ul, b.last
   3ebb0:	ldr	w8, [sp, #192]
   3ebb4:	cmp	w15, w8
   3ebb8:	b.cc	3ef04 <ZSTD_endStream@@Base+0x30fb0>  // b.lo, b.ul, b.last
   3ebbc:	cmp	x22, x20
   3ebc0:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   3ebc4:	mov	w21, w15
   3ebc8:	add	x8, x23, x21
   3ebcc:	mov	w25, w28
   3ebd0:	mov	w28, w15
   3ebd4:	cmp	x8, x19
   3ebd8:	b.cs	3ec18 <ZSTD_endStream@@Base+0x30cc4>  // b.hs, b.nlast
   3ebdc:	ldur	x8, [x29, #-152]
   3ebe0:	ldp	x4, x3, [sp, #168]
   3ebe4:	add	x24, x8, x21
   3ebe8:	ldp	x2, x8, [x29, #-168]
   3ebec:	add	x1, x24, x23
   3ebf0:	add	x0, x8, x23
   3ebf4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3ebf8:	ldr	x10, [sp, #184]
   3ebfc:	add	x8, x0, x23
   3ec00:	add	x9, x8, x21
   3ec04:	cmp	x9, x19
   3ec08:	add	x10, x10, x21
   3ec0c:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   3ec10:	ldur	w24, [x29, #-196]
   3ec14:	b	3ec34 <ZSTD_endStream@@Base+0x30ce0>
   3ec18:	ldr	x8, [sp, #184]
   3ec1c:	add	x21, x8, x21
   3ec20:	ldp	x2, x8, [x29, #-168]
   3ec24:	add	x1, x21, x23
   3ec28:	add	x0, x8, x23
   3ec2c:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3ec30:	add	x8, x0, x23
   3ec34:	cmp	x8, x27
   3ec38:	mov	w15, w28
   3ec3c:	b.ls	3ec98 <ZSTD_endStream@@Base+0x30d44>  // b.plast
   3ec40:	ldr	w14, [sp, #248]
   3ec44:	ldur	w12, [x29, #-96]
   3ec48:	ldur	x13, [x29, #-184]
   3ec4c:	add	w11, w15, w8
   3ec50:	sub	w10, w14, w15
   3ec54:	cmp	x8, x10
   3ec58:	mov	w9, wzr
   3ec5c:	sub	w12, w12, w15
   3ec60:	add	x13, x13, w26, uxtw #3
   3ec64:	csel	w14, w11, w14, hi  // hi = pmore
   3ec68:	cmp	x8, #0x1, lsl #12
   3ec6c:	add	w26, w26, #0x1
   3ec70:	mov	w28, w25
   3ec74:	stp	w12, w8, [x13]
   3ec78:	str	w14, [sp, #248]
   3ec7c:	b.hi	3eb98 <ZSTD_endStream@@Base+0x30c44>  // b.pmore
   3ec80:	ldp	x11, x10, [x29, #-168]
   3ec84:	mov	x27, x8
   3ec88:	add	x10, x10, x8
   3ec8c:	cmp	x10, x11
   3ec90:	b.ne	3ec9c <ZSTD_endStream@@Base+0x30d48>  // b.any
   3ec94:	b	3eb98 <ZSTD_endStream@@Base+0x30c44>
   3ec98:	mov	w28, w25
   3ec9c:	ldur	x10, [x29, #-160]
   3eca0:	ldrb	w9, [x21, x8]
   3eca4:	ldr	w11, [sp, #136]
   3eca8:	ldrb	w10, [x10, x8]
   3ecac:	and	w11, w15, w11
   3ecb0:	lsl	w11, w11, #1
   3ecb4:	cmp	w9, w10
   3ecb8:	ldr	x9, [sp, #144]
   3ecbc:	add	x9, x9, w11, uxtw #2
   3ecc0:	b.cs	3ece4 <ZSTD_endStream@@Base+0x30d90>  // b.hs, b.nlast
   3ecc4:	ldr	w10, [sp, #128]
   3ecc8:	cmp	w15, w10
   3eccc:	ldr	x10, [sp, #160]
   3ecd0:	str	w15, [x10]
   3ecd4:	b.ls	3ed10 <ZSTD_endStream@@Base+0x30dbc>  // b.plast
   3ecd8:	add	x9, x9, #0x4
   3ecdc:	str	x9, [sp, #160]
   3ece0:	b	3ed04 <ZSTD_endStream@@Base+0x30db0>
   3ece4:	ldr	w10, [sp, #128]
   3ece8:	cmp	w15, w10
   3ecec:	ldr	x10, [sp, #152]
   3ecf0:	str	w15, [x10]
   3ecf4:	b.ls	3ed20 <ZSTD_endStream@@Base+0x30dcc>  // b.plast
   3ecf8:	str	x9, [sp, #152]
   3ecfc:	mov	x20, x8
   3ed00:	mov	x8, x22
   3ed04:	ldr	w15, [x9]
   3ed08:	mov	w9, #0x1                   	// #1
   3ed0c:	b	3eba0 <ZSTD_endStream@@Base+0x30c4c>
   3ed10:	sub	x10, x29, #0x40
   3ed14:	mov	w9, wzr
   3ed18:	str	x10, [sp, #160]
   3ed1c:	b	3eba0 <ZSTD_endStream@@Base+0x30c4c>
   3ed20:	sub	x10, x29, #0x40
   3ed24:	mov	w9, wzr
   3ed28:	str	x10, [sp, #152]
   3ed2c:	mov	x20, x8
   3ed30:	b	3eb9c <ZSTD_endStream@@Base+0x30c48>
   3ed34:	mov	w8, wzr
   3ed38:	ldur	w24, [x29, #-196]
   3ed3c:	cbnz	w8, 3ef2c <ZSTD_endStream@@Base+0x30fd8>
   3ed40:	ldp	x9, x8, [sp, #104]
   3ed44:	ldur	w23, [x29, #-228]
   3ed48:	ldur	x19, [x29, #-192]
   3ed4c:	ldr	w15, [sp, #120]
   3ed50:	mov	x20, xzr
   3ed54:	mov	x22, xzr
   3ed58:	str	w23, [x8, x9, lsl #2]
   3ed5c:	add	w8, w23, #0x2
   3ed60:	stur	w8, [x29, #-96]
   3ed64:	b	3ed78 <ZSTD_endStream@@Base+0x30e24>
   3ed68:	mov	x27, x8
   3ed6c:	mov	x8, x22
   3ed70:	mov	x22, x8
   3ed74:	tbz	w9, #0, 3ef04 <ZSTD_endStream@@Base+0x30fb0>
   3ed78:	subs	w28, w28, #0x1
   3ed7c:	b.cc	3ef04 <ZSTD_endStream@@Base+0x30fb0>  // b.lo, b.ul, b.last
   3ed80:	ldr	w8, [sp, #192]
   3ed84:	cmp	w15, w8
   3ed88:	b.cc	3ef04 <ZSTD_endStream@@Base+0x30fb0>  // b.lo, b.ul, b.last
   3ed8c:	cmp	x22, x20
   3ed90:	csel	x23, x22, x20, cc  // cc = lo, ul, last
   3ed94:	mov	w21, w15
   3ed98:	add	x8, x23, x21
   3ed9c:	mov	w25, w28
   3eda0:	mov	w28, w15
   3eda4:	cmp	x8, x19
   3eda8:	b.cs	3ede8 <ZSTD_endStream@@Base+0x30e94>  // b.hs, b.nlast
   3edac:	ldur	x8, [x29, #-152]
   3edb0:	ldp	x4, x3, [sp, #168]
   3edb4:	add	x24, x8, x21
   3edb8:	ldp	x2, x8, [x29, #-168]
   3edbc:	add	x1, x24, x23
   3edc0:	add	x0, x8, x23
   3edc4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3edc8:	ldr	x10, [sp, #184]
   3edcc:	add	x8, x0, x23
   3edd0:	add	x9, x8, x21
   3edd4:	cmp	x9, x19
   3edd8:	add	x10, x10, x21
   3eddc:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   3ede0:	ldur	w24, [x29, #-196]
   3ede4:	b	3ee04 <ZSTD_endStream@@Base+0x30eb0>
   3ede8:	ldr	x8, [sp, #184]
   3edec:	add	x21, x8, x21
   3edf0:	ldp	x2, x8, [x29, #-168]
   3edf4:	add	x1, x21, x23
   3edf8:	add	x0, x8, x23
   3edfc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3ee00:	add	x8, x0, x23
   3ee04:	cmp	x8, x27
   3ee08:	mov	w15, w28
   3ee0c:	b.ls	3ee68 <ZSTD_endStream@@Base+0x30f14>  // b.plast
   3ee10:	ldr	w14, [sp, #248]
   3ee14:	ldur	w12, [x29, #-96]
   3ee18:	ldur	x13, [x29, #-184]
   3ee1c:	add	w11, w15, w8
   3ee20:	sub	w10, w14, w15
   3ee24:	cmp	x8, x10
   3ee28:	mov	w9, wzr
   3ee2c:	sub	w12, w12, w15
   3ee30:	add	x13, x13, w26, uxtw #3
   3ee34:	csel	w14, w11, w14, hi  // hi = pmore
   3ee38:	cmp	x8, #0x1, lsl #12
   3ee3c:	add	w26, w26, #0x1
   3ee40:	mov	w28, w25
   3ee44:	stp	w12, w8, [x13]
   3ee48:	str	w14, [sp, #248]
   3ee4c:	b.hi	3ed68 <ZSTD_endStream@@Base+0x30e14>  // b.pmore
   3ee50:	ldp	x11, x10, [x29, #-168]
   3ee54:	mov	x27, x8
   3ee58:	add	x10, x10, x8
   3ee5c:	cmp	x10, x11
   3ee60:	b.ne	3ee6c <ZSTD_endStream@@Base+0x30f18>  // b.any
   3ee64:	b	3ed68 <ZSTD_endStream@@Base+0x30e14>
   3ee68:	mov	w28, w25
   3ee6c:	ldur	x10, [x29, #-160]
   3ee70:	ldrb	w9, [x21, x8]
   3ee74:	ldr	w11, [sp, #136]
   3ee78:	ldrb	w10, [x10, x8]
   3ee7c:	and	w11, w15, w11
   3ee80:	lsl	w11, w11, #1
   3ee84:	cmp	w9, w10
   3ee88:	ldr	x9, [sp, #144]
   3ee8c:	add	x9, x9, w11, uxtw #2
   3ee90:	b.cs	3eeb4 <ZSTD_endStream@@Base+0x30f60>  // b.hs, b.nlast
   3ee94:	ldr	w10, [sp, #128]
   3ee98:	cmp	w15, w10
   3ee9c:	ldr	x10, [sp, #160]
   3eea0:	str	w15, [x10]
   3eea4:	b.ls	3eee0 <ZSTD_endStream@@Base+0x30f8c>  // b.plast
   3eea8:	add	x9, x9, #0x4
   3eeac:	str	x9, [sp, #160]
   3eeb0:	b	3eed4 <ZSTD_endStream@@Base+0x30f80>
   3eeb4:	ldr	w10, [sp, #128]
   3eeb8:	cmp	w15, w10
   3eebc:	ldr	x10, [sp, #152]
   3eec0:	str	w15, [x10]
   3eec4:	b.ls	3eef0 <ZSTD_endStream@@Base+0x30f9c>  // b.plast
   3eec8:	str	x9, [sp, #152]
   3eecc:	mov	x20, x8
   3eed0:	mov	x8, x22
   3eed4:	ldr	w15, [x9]
   3eed8:	mov	w9, #0x1                   	// #1
   3eedc:	b	3ed70 <ZSTD_endStream@@Base+0x30e1c>
   3eee0:	sub	x10, x29, #0x40
   3eee4:	mov	w9, wzr
   3eee8:	str	x10, [sp, #160]
   3eeec:	b	3ed70 <ZSTD_endStream@@Base+0x30e1c>
   3eef0:	sub	x10, x29, #0x40
   3eef4:	mov	w9, wzr
   3eef8:	str	x10, [sp, #152]
   3eefc:	mov	x20, x8
   3ef00:	b	3ed6c <ZSTD_endStream@@Base+0x30e18>
   3ef04:	ldr	x8, [sp, #152]
   3ef08:	str	wzr, [x8]
   3ef0c:	ldr	x8, [sp, #160]
   3ef10:	str	wzr, [x8]
   3ef14:	ldr	w8, [sp, #248]
   3ef18:	ldur	x9, [x29, #-72]
   3ef1c:	sub	w8, w8, #0x8
   3ef20:	mov	w25, w26
   3ef24:	str	w8, [x9, #36]
   3ef28:	ldur	x20, [x29, #-208]
   3ef2c:	ldr	x27, [sp, #208]
   3ef30:	ldur	x10, [x29, #-176]
   3ef34:	ldur	x22, [x29, #-72]
   3ef38:	b	3f25c <ZSTD_endStream@@Base+0x31308>
   3ef3c:	cmp	x26, #0x2
   3ef40:	b.hi	3efd0 <ZSTD_endStream@@Base+0x3107c>  // b.pmore
   3ef44:	ldur	x22, [x29, #-72]
   3ef48:	ldur	x2, [x29, #-160]
   3ef4c:	sub	x1, x29, #0xc
   3ef50:	mov	x0, x22
   3ef54:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   3ef58:	ldr	w8, [sp, #248]
   3ef5c:	ldur	x20, [x29, #-184]
   3ef60:	cmp	w0, w8
   3ef64:	b.cc	3efd8 <ZSTD_endStream@@Base+0x31084>  // b.lo, b.ul, b.last
   3ef68:	ldur	w8, [x29, #-152]
   3ef6c:	sub	w19, w8, w0
   3ef70:	lsr	w8, w19, #18
   3ef74:	cbnz	w8, 3efd8 <ZSTD_endStream@@Base+0x31084>
   3ef78:	cmp	w0, w28
   3ef7c:	mov	w8, w0
   3ef80:	b.cs	3efe4 <ZSTD_endStream@@Base+0x31090>  // b.hs, b.nlast
   3ef84:	ldur	x9, [x29, #-192]
   3ef88:	ldp	x2, x0, [x29, #-168]
   3ef8c:	ldp	x4, x3, [sp, #184]
   3ef90:	add	x1, x9, x8
   3ef94:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3ef98:	cmp	x0, #0x3
   3ef9c:	b.cc	3effc <ZSTD_endStream@@Base+0x310a8>  // b.lo, b.ul, b.last
   3efa0:	ldur	w9, [x29, #-120]
   3efa4:	add	w8, w19, #0x2
   3efa8:	stp	w8, w0, [x20]
   3efac:	cmp	x0, w9, uxtw
   3efb0:	b.hi	3f008 <ZSTD_endStream@@Base+0x310b4>  // b.pmore
   3efb4:	ldp	x9, x8, [x29, #-168]
   3efb8:	add	x8, x8, x0
   3efbc:	cmp	x8, x9
   3efc0:	b.eq	3f008 <ZSTD_endStream@@Base+0x310b4>  // b.none
   3efc4:	mov	w8, wzr
   3efc8:	mov	w27, #0x1                   	// #1
   3efcc:	b	3f020 <ZSTD_endStream@@Base+0x310cc>
   3efd0:	ldur	x10, [x29, #-176]
   3efd4:	b	3f040 <ZSTD_endStream@@Base+0x310ec>
   3efd8:	ldur	x10, [x29, #-176]
   3efdc:	ldur	x20, [x29, #-208]
   3efe0:	b	3f030 <ZSTD_endStream@@Base+0x310dc>
   3efe4:	ldr	x9, [sp, #176]
   3efe8:	ldp	x2, x0, [x29, #-168]
   3efec:	add	x1, x9, x8
   3eff0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3eff4:	cmp	x0, #0x3
   3eff8:	b.cs	3efa0 <ZSTD_endStream@@Base+0x3104c>  // b.hs, b.nlast
   3effc:	mov	w8, wzr
   3f000:	mov	x0, x26
   3f004:	b	3f020 <ZSTD_endStream@@Base+0x310cc>
   3f008:	ldur	w8, [x29, #-152]
   3f00c:	mov	w27, #0x1                   	// #1
   3f010:	mov	w25, #0x1                   	// #1
   3f014:	add	w9, w8, #0x1
   3f018:	mov	w8, #0x1                   	// #1
   3f01c:	str	w9, [x22, #36]
   3f020:	ldur	x10, [x29, #-176]
   3f024:	ldur	x20, [x29, #-208]
   3f028:	mov	x26, x0
   3f02c:	cbnz	w8, 3f038 <ZSTD_endStream@@Base+0x310e4>
   3f030:	mov	w8, wzr
   3f034:	mov	x0, x26
   3f038:	mov	x26, x0
   3f03c:	cbnz	w8, 3f254 <ZSTD_endStream@@Base+0x31300>
   3f040:	ldp	x11, x8, [sp, #104]
   3f044:	ldur	w9, [x29, #-152]
   3f048:	mov	w25, w27
   3f04c:	ldur	x12, [x29, #-160]
   3f050:	ldr	w20, [sp, #128]
   3f054:	ldr	w27, [sp, #120]
   3f058:	mov	x24, xzr
   3f05c:	mov	x22, xzr
   3f060:	str	w9, [x8, x11, lsl #2]
   3f064:	add	w8, w9, #0x2
   3f068:	stur	w8, [x29, #-112]
   3f06c:	b	3f088 <ZSTD_endStream@@Base+0x31134>
   3f070:	add	x9, x9, #0x4
   3f074:	str	x9, [sp, #168]
   3f078:	ldr	w20, [x9]
   3f07c:	mov	w9, #0x1                   	// #1
   3f080:	mov	x22, x8
   3f084:	tbz	w9, #0, 3f230 <ZSTD_endStream@@Base+0x312dc>
   3f088:	subs	w27, w27, #0x1
   3f08c:	b.cc	3f230 <ZSTD_endStream@@Base+0x312dc>  // b.lo, b.ul, b.last
   3f090:	ldr	w8, [sp, #248]
   3f094:	cmp	w20, w8
   3f098:	b.cc	3f230 <ZSTD_endStream@@Base+0x312dc>  // b.lo, b.ul, b.last
   3f09c:	cmp	x22, x24
   3f0a0:	csel	x21, x22, x24, cc  // cc = lo, ul, last
   3f0a4:	mov	w19, w20
   3f0a8:	add	x8, x21, x19
   3f0ac:	cmp	x8, x28
   3f0b0:	b.cs	3f114 <ZSTD_endStream@@Base+0x311c0>  // b.hs, b.nlast
   3f0b4:	ldur	x8, [x29, #-192]
   3f0b8:	ldur	x2, [x29, #-168]
   3f0bc:	ldp	x4, x3, [sp, #184]
   3f0c0:	add	x0, x12, x21
   3f0c4:	add	x23, x8, x19
   3f0c8:	add	x1, x23, x21
   3f0cc:	stur	x24, [x29, #-96]
   3f0d0:	mov	w24, w27
   3f0d4:	mov	w27, w20
   3f0d8:	mov	x20, x28
   3f0dc:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3f0e0:	ldr	x10, [sp, #176]
   3f0e4:	add	x8, x0, x21
   3f0e8:	mov	w20, w27
   3f0ec:	mov	w27, w24
   3f0f0:	ldur	x24, [x29, #-96]
   3f0f4:	add	x9, x8, x19
   3f0f8:	add	x10, x10, x19
   3f0fc:	cmp	x9, x28
   3f100:	csel	x19, x23, x10, cc  // cc = lo, ul, last
   3f104:	cmp	x8, x26
   3f108:	b.hi	3f138 <ZSTD_endStream@@Base+0x311e4>  // b.pmore
   3f10c:	ldur	x12, [x29, #-160]
   3f110:	b	3f188 <ZSTD_endStream@@Base+0x31234>
   3f114:	ldr	x8, [sp, #176]
   3f118:	ldur	x2, [x29, #-168]
   3f11c:	add	x0, x12, x21
   3f120:	add	x19, x8, x19
   3f124:	add	x1, x19, x21
   3f128:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3f12c:	add	x8, x0, x21
   3f130:	cmp	x8, x26
   3f134:	b.ls	3f10c <ZSTD_endStream@@Base+0x311b8>  // b.plast
   3f138:	ldur	w14, [x29, #-228]
   3f13c:	ldur	w12, [x29, #-112]
   3f140:	ldur	x13, [x29, #-184]
   3f144:	add	w11, w20, w8
   3f148:	sub	w10, w14, w20
   3f14c:	cmp	x8, x10
   3f150:	mov	w9, wzr
   3f154:	sub	w12, w12, w20
   3f158:	add	x13, x13, w25, uxtw #3
   3f15c:	csel	w14, w11, w14, hi  // hi = pmore
   3f160:	cmp	x8, #0x1, lsl #12
   3f164:	add	w25, w25, #0x1
   3f168:	stp	w12, w8, [x13]
   3f16c:	stur	w14, [x29, #-228]
   3f170:	b.hi	3f214 <ZSTD_endStream@@Base+0x312c0>  // b.pmore
   3f174:	ldp	x11, x12, [x29, #-168]
   3f178:	mov	x26, x8
   3f17c:	add	x10, x12, x8
   3f180:	cmp	x10, x11
   3f184:	b.eq	3f220 <ZSTD_endStream@@Base+0x312cc>  // b.none
   3f188:	ldrb	w9, [x19, x8]
   3f18c:	ldrb	w10, [x12, x8]
   3f190:	ldr	w11, [sp, #144]
   3f194:	cmp	w9, w10
   3f198:	ldr	x9, [sp, #152]
   3f19c:	and	w11, w20, w11
   3f1a0:	lsl	w11, w11, #1
   3f1a4:	add	x9, x9, w11, uxtw #2
   3f1a8:	b.cs	3f1d4 <ZSTD_endStream@@Base+0x31280>  // b.hs, b.nlast
   3f1ac:	ldr	w10, [sp, #136]
   3f1b0:	cmp	w20, w10
   3f1b4:	ldr	x10, [sp, #168]
   3f1b8:	str	w20, [x10]
   3f1bc:	ldur	x10, [x29, #-176]
   3f1c0:	b.hi	3f070 <ZSTD_endStream@@Base+0x3111c>  // b.pmore
   3f1c4:	sub	x11, x29, #0x40
   3f1c8:	mov	w9, wzr
   3f1cc:	str	x11, [sp, #168]
   3f1d0:	b	3f080 <ZSTD_endStream@@Base+0x3112c>
   3f1d4:	ldr	w10, [sp, #136]
   3f1d8:	cmp	w20, w10
   3f1dc:	ldr	x10, [sp, #160]
   3f1e0:	str	w20, [x10]
   3f1e4:	ldur	x10, [x29, #-176]
   3f1e8:	b.ls	3f1fc <ZSTD_endStream@@Base+0x312a8>  // b.plast
   3f1ec:	str	x9, [sp, #160]
   3f1f0:	mov	x24, x8
   3f1f4:	mov	x8, x22
   3f1f8:	b	3f078 <ZSTD_endStream@@Base+0x31124>
   3f1fc:	sub	x11, x29, #0x40
   3f200:	mov	w9, wzr
   3f204:	str	x11, [sp, #160]
   3f208:	mov	x24, x8
   3f20c:	mov	x8, x22
   3f210:	b	3f080 <ZSTD_endStream@@Base+0x3112c>
   3f214:	ldur	x10, [x29, #-176]
   3f218:	ldur	x12, [x29, #-160]
   3f21c:	b	3f224 <ZSTD_endStream@@Base+0x312d0>
   3f220:	ldur	x10, [x29, #-176]
   3f224:	mov	x26, x8
   3f228:	mov	x8, x22
   3f22c:	b	3f080 <ZSTD_endStream@@Base+0x3112c>
   3f230:	ldr	x8, [sp, #160]
   3f234:	ldur	x22, [x29, #-72]
   3f238:	ldur	x20, [x29, #-208]
   3f23c:	str	wzr, [x8]
   3f240:	ldr	x8, [sp, #168]
   3f244:	str	wzr, [x8]
   3f248:	ldur	w8, [x29, #-228]
   3f24c:	sub	w8, w8, #0x8
   3f250:	str	w8, [x22, #36]
   3f254:	ldr	x27, [sp, #208]
   3f258:	ldur	w24, [x29, #-196]
   3f25c:	ldur	x26, [x29, #-80]
   3f260:	ldur	w28, [x29, #-100]
   3f264:	cbnz	w25, 3dcdc <ZSTD_endStream@@Base+0x2fd88>
   3f268:	ldur	x8, [x29, #-160]
   3f26c:	mov	w0, wzr
   3f270:	add	x8, x8, #0x1
   3f274:	stur	x8, [x29, #-160]
   3f278:	mov	w8, #0x2                   	// #2
   3f27c:	cmp	w8, #0x7
   3f280:	b.eq	40c28 <ZSTD_endStream@@Base+0x32cd4>  // b.none
   3f284:	cbnz	w8, 3dc94 <ZSTD_endStream@@Base+0x2fd40>
   3f288:	cbz	w0, 40c34 <ZSTD_endStream@@Base+0x32ce0>
   3f28c:	mov	w28, #0x1                   	// #1
   3f290:	sub	w19, w28, #0x1
   3f294:	mov	w9, #0x1c                  	// #28
   3f298:	umaddl	x8, w19, w9, x26
   3f29c:	ldur	x10, [x29, #-160]
   3f2a0:	ldr	w8, [x8, #8]
   3f2a4:	mov	w11, w28
   3f2a8:	stur	w0, [x29, #-112]
   3f2ac:	add	x23, x10, x11
   3f2b0:	stur	x11, [x29, #-96]
   3f2b4:	cbz	w8, 3f2c4 <ZSTD_endStream@@Base+0x31370>
   3f2b8:	mov	w25, #0x1c                  	// #28
   3f2bc:	mov	w20, #0x1                   	// #1
   3f2c0:	b	3f2d4 <ZSTD_endStream@@Base+0x31380>
   3f2c4:	madd	x8, x19, x9, x26
   3f2c8:	ldr	w8, [x8, #12]
   3f2cc:	mov	w25, #0x1c                  	// #28
   3f2d0:	add	w20, w8, #0x1
   3f2d4:	ldur	x24, [x29, #-216]
   3f2d8:	mul	x8, x19, x25
   3f2dc:	ldr	w21, [x26, x8]
   3f2e0:	sub	x0, x23, #0x1
   3f2e4:	mov	w1, #0x1                   	// #1
   3f2e8:	mov	w3, #0x2                   	// #2
   3f2ec:	mov	x2, x24
   3f2f0:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   3f2f4:	add	w21, w0, w21
   3f2f8:	mov	w2, #0x2                   	// #2
   3f2fc:	mov	w0, w20
   3f300:	mov	x1, x24
   3f304:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3f308:	add	w21, w21, w0
   3f30c:	sub	w0, w20, #0x1
   3f310:	mov	w2, #0x2                   	// #2
   3f314:	mov	x1, x24
   3f318:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3f31c:	ldur	x9, [x29, #-96]
   3f320:	madd	x8, x9, x25, x26
   3f324:	ldr	w10, [x8]
   3f328:	mov	x25, x9
   3f32c:	sub	w9, w21, w0
   3f330:	cmp	w9, w10
   3f334:	b.gt	3f360 <ZSTD_endStream@@Base+0x3140c>
   3f338:	mov	w11, #0x1c                  	// #28
   3f33c:	madd	x10, x25, x11, x26
   3f340:	madd	x11, x19, x11, x26
   3f344:	stur	xzr, [x10, #4]
   3f348:	str	w20, [x10, #12]
   3f34c:	str	w9, [x8]
   3f350:	ldr	w9, [x11, #24]
   3f354:	ldr	x11, [x11, #16]
   3f358:	str	w9, [x10, #24]
   3f35c:	str	x11, [x10, #16]
   3f360:	ldr	x9, [sp, #224]
   3f364:	ldur	w24, [x29, #-196]
   3f368:	ldur	w0, [x29, #-112]
   3f36c:	cmp	x23, x9
   3f370:	b.ls	3f37c <ZSTD_endStream@@Base+0x31428>  // b.plast
   3f374:	mov	w8, #0x13                  	// #19
   3f378:	b	4095c <ZSTD_endStream@@Base+0x32a08>
   3f37c:	cmp	w28, w0
   3f380:	b.ne	3f38c <ZSTD_endStream@@Base+0x31438>  // b.any
   3f384:	mov	w8, #0x11                  	// #17
   3f388:	b	4095c <ZSTD_endStream@@Base+0x32a08>
   3f38c:	mov	w9, #0x1c                  	// #28
   3f390:	madd	x11, x25, x9, x26
   3f394:	ldr	w24, [x11, #8]!
   3f398:	stur	x23, [x29, #-88]
   3f39c:	cmp	w24, #0x0
   3f3a0:	cset	w10, ne  // ne = any
   3f3a4:	stur	w10, [x29, #-228]
   3f3a8:	str	x11, [sp, #120]
   3f3ac:	cbz	w24, 3f3b8 <ZSTD_endStream@@Base+0x31464>
   3f3b0:	stur	wzr, [x29, #-124]
   3f3b4:	b	3f3c4 <ZSTD_endStream@@Base+0x31470>
   3f3b8:	madd	x9, x25, x9, x26
   3f3bc:	ldr	w9, [x9, #12]
   3f3c0:	stur	w9, [x29, #-124]
   3f3c4:	ldr	w8, [x8]
   3f3c8:	ldur	x1, [x29, #-216]
   3f3cc:	mov	w2, #0x2                   	// #2
   3f3d0:	mov	w0, wzr
   3f3d4:	str	w8, [sp, #104]
   3f3d8:	bl	41944 <ZSTD_endStream@@Base+0x339f0>
   3f3dc:	ldr	x19, [x22, #8]
   3f3e0:	ldr	w21, [x22, #36]
   3f3e4:	ldur	x9, [x29, #-88]
   3f3e8:	mov	w20, wzr
   3f3ec:	str	w0, [sp, #100]
   3f3f0:	add	x8, x19, x21
   3f3f4:	cmp	x8, x9
   3f3f8:	b.hi	40668 <ZSTD_endStream@@Base+0x32714>  // b.pmore
   3f3fc:	ldr	w20, [x22, #200]
   3f400:	mov	x10, x25
   3f404:	ldur	x25, [x29, #-168]
   3f408:	mov	x8, x26
   3f40c:	mov	x26, x22
   3f410:	sub	w22, w9, w19
   3f414:	mov	w9, #0x1c                  	// #28
   3f418:	cmp	w21, w22
   3f41c:	madd	x23, x10, x9, x8
   3f420:	b.cs	3f448 <ZSTD_endStream@@Base+0x314f4>  // b.hs, b.nlast
   3f424:	add	x1, x19, w21, uxtw
   3f428:	mov	w4, #0x1                   	// #1
   3f42c:	mov	x0, x26
   3f430:	mov	x2, x25
   3f434:	mov	w3, w20
   3f438:	bl	40f7c <ZSTD_endStream@@Base+0x33028>
   3f43c:	add	w21, w0, w21
   3f440:	cmp	w21, w22
   3f444:	b.cc	3f424 <ZSTD_endStream@@Base+0x314d0>  // b.lo, b.ul, b.last
   3f448:	add	x8, x23, #0x10
   3f44c:	stur	x8, [x29, #-144]
   3f450:	sub	w8, w20, #0x6
   3f454:	cmp	w8, #0x2
   3f458:	mov	x21, x26
   3f45c:	str	w22, [x26, #36]
   3f460:	stur	w28, [x29, #-100]
   3f464:	b.cc	3f744 <ZSTD_endStream@@Base+0x317f0>  // b.lo, b.ul, b.last
   3f468:	ldur	x22, [x29, #-96]
   3f46c:	cmp	w20, #0x5
   3f470:	lsl	x8, x22, #3
   3f474:	stur	x8, [x29, #-192]
   3f478:	b.eq	3fa30 <ZSTD_endStream@@Base+0x31adc>  // b.none
   3f47c:	ldur	x0, [x29, #-88]
   3f480:	cmp	w20, #0x3
   3f484:	mov	w9, #0xfff                 	// #4095
   3f488:	b.ne	3fd08 <ZSTD_endStream@@Base+0x31db4>  // b.any
   3f48c:	ldr	w8, [x21, #204]
   3f490:	ldr	x22, [x21, #8]
   3f494:	ldr	w1, [x21, #192]
   3f498:	ldr	x19, [x21, #48]
   3f49c:	cmp	w8, #0xfff
   3f4a0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3f4a4:	mov	w2, #0x3                   	// #3
   3f4a8:	str	w8, [sp, #184]
   3f4ac:	sub	w23, w0, w22
   3f4b0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3f4b4:	stp	x0, x19, [sp, #16]
   3f4b8:	ldr	w8, [x19, x0, lsl #2]
   3f4bc:	ldr	x9, [x21, #64]
   3f4c0:	ldr	x28, [x21, #16]
   3f4c4:	ldr	w19, [x21, #24]
   3f4c8:	stur	w8, [x29, #-152]
   3f4cc:	ldp	w2, w8, [x21, #184]
   3f4d0:	str	x9, [sp, #80]
   3f4d4:	mov	w9, #0xffffffff            	// #-1
   3f4d8:	mov	x0, x21
   3f4dc:	sub	w8, w8, #0x1
   3f4e0:	lsl	w20, w9, w8
   3f4e4:	mvn	w8, w20
   3f4e8:	str	w8, [sp, #52]
   3f4ec:	subs	w8, w23, w8
   3f4f0:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3f4f4:	mov	w1, w23
   3f4f8:	str	w8, [sp, #48]
   3f4fc:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3f500:	ldur	x2, [x29, #-88]
   3f504:	sub	w8, w23, w19
   3f508:	stur	w8, [x29, #-120]
   3f50c:	sub	w8, w23, w0
   3f510:	str	w8, [sp, #176]
   3f514:	ldur	x8, [x29, #-96]
   3f518:	ldur	x9, [x29, #-192]
   3f51c:	cmp	w0, #0x0
   3f520:	add	x11, x2, #0x3
   3f524:	str	x11, [sp, #152]
   3f528:	csinc	w11, w0, wzr, ne  // ne = any
   3f52c:	sub	x8, x9, x8
   3f530:	add	x9, x28, x19
   3f534:	str	w11, [sp, #136]
   3f538:	ldr	x11, [sp, #80]
   3f53c:	str	x9, [sp, #128]
   3f540:	add	x9, x22, x19
   3f544:	str	x9, [sp, #112]
   3f548:	bic	w9, w23, w20
   3f54c:	add	w10, w23, #0x9
   3f550:	str	w10, [sp, #144]
   3f554:	ldr	w10, [x21, #196]
   3f558:	lsl	w9, w9, #1
   3f55c:	cmp	w24, #0x0
   3f560:	add	x11, x11, w9, uxtw #2
   3f564:	mov	w9, #0x3                   	// #3
   3f568:	str	w23, [sp, #168]
   3f56c:	cinc	x23, x9, ne  // ne = any
   3f570:	add	x9, x11, #0x4
   3f574:	stp	x9, x11, [sp, #64]
   3f578:	mov	w9, #0x1                   	// #1
   3f57c:	lsl	w9, w9, w10
   3f580:	str	w9, [sp, #192]
   3f584:	ldur	x9, [x29, #-208]
   3f588:	stur	x19, [x29, #-192]
   3f58c:	ldr	x19, [sp, #56]
   3f590:	cinc	x8, x8, ne  // ne = any
   3f594:	mov	x26, xzr
   3f598:	mov	w25, wzr
   3f59c:	str	x22, [sp, #88]
   3f5a0:	cset	w22, ne  // ne = any
   3f5a4:	add	x8, x9, x8, lsl #2
   3f5a8:	str	x28, [sp, #160]
   3f5ac:	str	x8, [sp, #248]
   3f5b0:	add	x8, x22, x26
   3f5b4:	cmp	x8, #0x3
   3f5b8:	b.eq	3f5c8 <ZSTD_endStream@@Base+0x31674>  // b.none
   3f5bc:	ldr	x8, [sp, #248]
   3f5c0:	ldr	w21, [x8, x26, lsl #2]
   3f5c4:	b	3f5d4 <ZSTD_endStream@@Base+0x31680>
   3f5c8:	ldur	x8, [x29, #-144]
   3f5cc:	ldr	w8, [x8]
   3f5d0:	sub	w21, w8, #0x1
   3f5d4:	ldur	w9, [x29, #-120]
   3f5d8:	sub	w8, w21, #0x1
   3f5dc:	cmp	w8, w9
   3f5e0:	b.cs	3f630 <ZSTD_endStream@@Base+0x316dc>  // b.hs, b.nlast
   3f5e4:	mov	w1, #0x3                   	// #3
   3f5e8:	mov	x0, x2
   3f5ec:	mov	x24, x23
   3f5f0:	mov	x23, x2
   3f5f4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f5f8:	mov	w21, w21
   3f5fc:	mov	w20, w0
   3f600:	sub	x0, x23, x21
   3f604:	mov	w1, #0x3                   	// #3
   3f608:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f60c:	cmp	w20, w0
   3f610:	b.ne	3f6a8 <ZSTD_endStream@@Base+0x31754>  // b.any
   3f614:	ldr	x0, [sp, #152]
   3f618:	ldur	x2, [x29, #-168]
   3f61c:	neg	x8, x21
   3f620:	add	x1, x0, x8
   3f624:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3f628:	add	w8, w0, #0x3
   3f62c:	b	3f6ac <ZSTD_endStream@@Base+0x31758>
   3f630:	ldr	w9, [sp, #176]
   3f634:	cmp	w8, w9
   3f638:	mov	w8, wzr
   3f63c:	b.cs	3f6c0 <ZSTD_endStream@@Base+0x3176c>  // b.hs, b.nlast
   3f640:	ldr	w9, [sp, #168]
   3f644:	ldur	x11, [x29, #-192]
   3f648:	sub	w9, w9, w21
   3f64c:	mvn	w10, w9
   3f650:	add	w10, w11, w10
   3f654:	cmp	w10, #0x3
   3f658:	b.cc	3f6c0 <ZSTD_endStream@@Base+0x3176c>  // b.lo, b.ul, b.last
   3f65c:	ldr	x8, [sp, #160]
   3f660:	mov	w1, #0x3                   	// #3
   3f664:	mov	x0, x2
   3f668:	add	x20, x8, w9, uxtw
   3f66c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f670:	mov	w24, w0
   3f674:	mov	w1, #0x3                   	// #3
   3f678:	mov	x0, x20
   3f67c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f680:	cmp	w24, w0
   3f684:	b.ne	3f6b8 <ZSTD_endStream@@Base+0x31764>  // b.any
   3f688:	ldr	x0, [sp, #152]
   3f68c:	ldur	x2, [x29, #-168]
   3f690:	ldr	x3, [sp, #128]
   3f694:	ldr	x4, [sp, #112]
   3f698:	add	x1, x20, #0x3
   3f69c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3f6a0:	add	w8, w0, #0x3
   3f6a4:	b	3f6bc <ZSTD_endStream@@Base+0x31768>
   3f6a8:	mov	w8, wzr
   3f6ac:	ldur	x2, [x29, #-88]
   3f6b0:	mov	x23, x24
   3f6b4:	b	3f6c0 <ZSTD_endStream@@Base+0x3176c>
   3f6b8:	mov	w8, wzr
   3f6bc:	ldur	x2, [x29, #-88]
   3f6c0:	mov	w9, w8
   3f6c4:	cmp	x19, x9
   3f6c8:	b.cs	3f708 <ZSTD_endStream@@Base+0x317b4>  // b.hs, b.nlast
   3f6cc:	ldur	x10, [x29, #-184]
   3f6d0:	ldr	w11, [sp, #184]
   3f6d4:	add	x10, x10, w25, uxtw #3
   3f6d8:	add	w25, w25, #0x1
   3f6dc:	cmp	w8, w11
   3f6e0:	stp	w26, w8, [x10]
   3f6e4:	mov	w8, #0x1                   	// #1
   3f6e8:	b.hi	3f734 <ZSTD_endStream@@Base+0x317e0>  // b.pmore
   3f6ec:	ldur	x11, [x29, #-168]
   3f6f0:	add	x10, x2, x9
   3f6f4:	mov	x19, x9
   3f6f8:	mov	w20, w25
   3f6fc:	cmp	x10, x11
   3f700:	b.ne	3f70c <ZSTD_endStream@@Base+0x317b8>  // b.any
   3f704:	b	3f718 <ZSTD_endStream@@Base+0x317c4>
   3f708:	mov	x9, x19
   3f70c:	mov	w8, wzr
   3f710:	mov	x19, x9
   3f714:	mov	w20, w28
   3f718:	cbnz	w8, 401cc <ZSTD_endStream@@Base+0x32278>
   3f71c:	add	x26, x26, #0x1
   3f720:	add	x8, x22, x26
   3f724:	cmp	x8, x23
   3f728:	mov	w28, w20
   3f72c:	b.cc	3f5b0 <ZSTD_endStream@@Base+0x3165c>  // b.lo, b.ul, b.last
   3f730:	b	401c8 <ZSTD_endStream@@Base+0x32274>
   3f734:	mov	x19, x9
   3f738:	mov	w20, w25
   3f73c:	cbz	w8, 3f71c <ZSTD_endStream@@Base+0x317c8>
   3f740:	b	401cc <ZSTD_endStream@@Base+0x32278>
   3f744:	ldr	w8, [x21, #204]
   3f748:	ldur	x19, [x29, #-88]
   3f74c:	ldr	x22, [x21, #8]
   3f750:	ldr	w1, [x21, #192]
   3f754:	ldr	x20, [x21, #48]
   3f758:	cmp	w8, #0xfff
   3f75c:	mov	w9, #0xfff                 	// #4095
   3f760:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3f764:	mov	w2, #0x6                   	// #6
   3f768:	mov	x0, x19
   3f76c:	str	w8, [sp, #192]
   3f770:	sub	w23, w19, w22
   3f774:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3f778:	stp	x0, x20, [sp, #8]
   3f77c:	ldr	w8, [x20, x0, lsl #2]
   3f780:	ldr	x9, [x21, #64]
   3f784:	ldr	x25, [x21, #16]
   3f788:	ldr	w26, [x21, #24]
   3f78c:	str	w8, [sp, #24]
   3f790:	ldp	w2, w8, [x21, #184]
   3f794:	str	x9, [sp, #112]
   3f798:	mov	w9, #0xffffffff            	// #-1
   3f79c:	mov	x0, x21
   3f7a0:	sub	w8, w8, #0x1
   3f7a4:	lsl	w20, w9, w8
   3f7a8:	mvn	w8, w20
   3f7ac:	str	w8, [sp, #52]
   3f7b0:	subs	w8, w23, w8
   3f7b4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3f7b8:	mov	w1, w23
   3f7bc:	str	w8, [sp, #48]
   3f7c0:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3f7c4:	ldur	x11, [x29, #-96]
   3f7c8:	mov	x14, x26
   3f7cc:	sub	w8, w23, w14
   3f7d0:	stur	w8, [x29, #-120]
   3f7d4:	sub	w8, w23, w0
   3f7d8:	str	w8, [sp, #184]
   3f7dc:	lsl	x8, x11, #3
   3f7e0:	add	x9, x25, x26
   3f7e4:	sub	x8, x8, x11
   3f7e8:	ldr	x11, [sp, #112]
   3f7ec:	str	x9, [sp, #88]
   3f7f0:	add	x9, x22, x26
   3f7f4:	mov	x12, x19
   3f7f8:	str	x9, [sp, #80]
   3f7fc:	bic	w9, w23, w20
   3f800:	add	w10, w23, #0x9
   3f804:	cmp	w0, #0x0
   3f808:	str	w10, [sp, #152]
   3f80c:	ldr	w10, [x21, #196]
   3f810:	add	x13, x12, #0x4
   3f814:	lsl	w9, w9, #1
   3f818:	str	x13, [sp, #144]
   3f81c:	csinc	w13, w0, wzr, ne  // ne = any
   3f820:	cmp	w24, #0x0
   3f824:	add	x11, x11, w9, uxtw #2
   3f828:	mov	w9, #0x3                   	// #3
   3f82c:	str	w23, [sp, #160]
   3f830:	cinc	x23, x9, ne  // ne = any
   3f834:	add	x9, x11, #0x4
   3f838:	stp	x9, x11, [sp, #64]
   3f83c:	mov	w9, #0x1                   	// #1
   3f840:	lsl	w9, w9, w10
   3f844:	stur	w9, [x29, #-192]
   3f848:	ldur	x9, [x29, #-208]
   3f84c:	str	x25, [sp, #168]
   3f850:	ldr	x25, [sp, #56]
   3f854:	ldur	x26, [x29, #-80]
   3f858:	cinc	x8, x8, ne  // ne = any
   3f85c:	mov	x28, xzr
   3f860:	mov	w19, wzr
   3f864:	str	x22, [sp, #128]
   3f868:	cset	w22, ne  // ne = any
   3f86c:	add	x8, x9, x8, lsl #2
   3f870:	str	w13, [sp, #136]
   3f874:	str	x8, [sp, #248]
   3f878:	stur	x14, [x29, #-152]
   3f87c:	str	x22, [sp, #176]
   3f880:	add	x8, x22, x28
   3f884:	cmp	x8, #0x3
   3f888:	b.eq	3f898 <ZSTD_endStream@@Base+0x31944>  // b.none
   3f88c:	ldr	x8, [sp, #248]
   3f890:	ldr	w21, [x8, x28, lsl #2]
   3f894:	b	3f8a4 <ZSTD_endStream@@Base+0x31950>
   3f898:	ldur	x8, [x29, #-144]
   3f89c:	ldr	w8, [x8]
   3f8a0:	sub	w21, w8, #0x1
   3f8a4:	ldur	w9, [x29, #-120]
   3f8a8:	sub	w8, w21, #0x1
   3f8ac:	cmp	w8, w9
   3f8b0:	b.cs	3f90c <ZSTD_endStream@@Base+0x319b8>  // b.hs, b.nlast
   3f8b4:	mov	w1, #0x4                   	// #4
   3f8b8:	mov	x0, x12
   3f8bc:	mov	x22, x25
   3f8c0:	mov	x25, x27
   3f8c4:	mov	w27, w19
   3f8c8:	mov	x19, x23
   3f8cc:	mov	x23, x12
   3f8d0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f8d4:	mov	w21, w21
   3f8d8:	mov	w20, w0
   3f8dc:	sub	x0, x23, x21
   3f8e0:	mov	w1, #0x4                   	// #4
   3f8e4:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f8e8:	cmp	w20, w0
   3f8ec:	b.ne	3f97c <ZSTD_endStream@@Base+0x31a28>  // b.any
   3f8f0:	ldr	x0, [sp, #144]
   3f8f4:	ldur	x2, [x29, #-168]
   3f8f8:	neg	x8, x21
   3f8fc:	add	x1, x0, x8
   3f900:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3f904:	add	w8, w0, #0x4
   3f908:	b	3f980 <ZSTD_endStream@@Base+0x31a2c>
   3f90c:	ldr	w9, [sp, #184]
   3f910:	cmp	w8, w9
   3f914:	mov	w8, wzr
   3f918:	b.cs	3f9ac <ZSTD_endStream@@Base+0x31a58>  // b.hs, b.nlast
   3f91c:	ldr	w9, [sp, #160]
   3f920:	sub	w9, w9, w21
   3f924:	mvn	w10, w9
   3f928:	add	w10, w14, w10
   3f92c:	cmp	w10, #0x3
   3f930:	b.cc	3f9ac <ZSTD_endStream@@Base+0x31a58>  // b.lo, b.ul, b.last
   3f934:	ldr	x8, [sp, #168]
   3f938:	mov	w1, #0x4                   	// #4
   3f93c:	mov	x0, x12
   3f940:	add	x20, x8, w9, uxtw
   3f944:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f948:	mov	w26, w0
   3f94c:	mov	w1, #0x4                   	// #4
   3f950:	mov	x0, x20
   3f954:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3f958:	cmp	w26, w0
   3f95c:	b.ne	3f9a0 <ZSTD_endStream@@Base+0x31a4c>  // b.any
   3f960:	ldr	x0, [sp, #144]
   3f964:	ldur	x2, [x29, #-168]
   3f968:	ldp	x4, x3, [sp, #80]
   3f96c:	add	x1, x20, #0x4
   3f970:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3f974:	add	w8, w0, #0x4
   3f978:	b	3f9a4 <ZSTD_endStream@@Base+0x31a50>
   3f97c:	mov	w8, wzr
   3f980:	ldur	x12, [x29, #-88]
   3f984:	ldur	x14, [x29, #-152]
   3f988:	mov	x23, x19
   3f98c:	mov	w19, w27
   3f990:	mov	x27, x25
   3f994:	mov	x25, x22
   3f998:	ldr	x22, [sp, #176]
   3f99c:	b	3f9ac <ZSTD_endStream@@Base+0x31a58>
   3f9a0:	mov	w8, wzr
   3f9a4:	ldp	x12, x26, [x29, #-88]
   3f9a8:	ldur	x14, [x29, #-152]
   3f9ac:	mov	w9, w8
   3f9b0:	cmp	x25, x9
   3f9b4:	b.cs	3f9f4 <ZSTD_endStream@@Base+0x31aa0>  // b.hs, b.nlast
   3f9b8:	ldur	x10, [x29, #-184]
   3f9bc:	ldr	w11, [sp, #192]
   3f9c0:	add	x10, x10, w19, uxtw #3
   3f9c4:	add	w19, w19, #0x1
   3f9c8:	cmp	w8, w11
   3f9cc:	stp	w28, w8, [x10]
   3f9d0:	mov	w8, #0x1                   	// #1
   3f9d4:	b.hi	3fa20 <ZSTD_endStream@@Base+0x31acc>  // b.pmore
   3f9d8:	ldur	x11, [x29, #-168]
   3f9dc:	add	x10, x12, x9
   3f9e0:	mov	x25, x9
   3f9e4:	mov	w20, w19
   3f9e8:	cmp	x10, x11
   3f9ec:	b.ne	3f9f8 <ZSTD_endStream@@Base+0x31aa4>  // b.any
   3f9f0:	b	3fa04 <ZSTD_endStream@@Base+0x31ab0>
   3f9f4:	mov	x9, x25
   3f9f8:	mov	w8, wzr
   3f9fc:	mov	x25, x9
   3fa00:	mov	w20, w24
   3fa04:	cbnz	w8, 3ffc0 <ZSTD_endStream@@Base+0x3206c>
   3fa08:	add	x28, x28, #0x1
   3fa0c:	add	x8, x22, x28
   3fa10:	cmp	x8, x23
   3fa14:	mov	w24, w20
   3fa18:	b.cc	3f880 <ZSTD_endStream@@Base+0x3192c>  // b.lo, b.ul, b.last
   3fa1c:	b	3ffbc <ZSTD_endStream@@Base+0x32068>
   3fa20:	mov	x25, x9
   3fa24:	mov	w20, w19
   3fa28:	cbz	w8, 3fa08 <ZSTD_endStream@@Base+0x31ab4>
   3fa2c:	b	3ffc0 <ZSTD_endStream@@Base+0x3206c>
   3fa30:	ldr	w8, [x21, #204]
   3fa34:	ldur	x23, [x29, #-88]
   3fa38:	ldr	x10, [x21, #8]
   3fa3c:	ldr	w1, [x21, #192]
   3fa40:	ldr	x19, [x21, #48]
   3fa44:	cmp	w8, #0xfff
   3fa48:	mov	w9, #0xfff                 	// #4095
   3fa4c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3fa50:	mov	w2, #0x5                   	// #5
   3fa54:	mov	x0, x23
   3fa58:	str	x10, [sp, #168]
   3fa5c:	str	w8, [sp, #192]
   3fa60:	sub	w26, w23, w10
   3fa64:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3fa68:	stp	x0, x19, [sp, #8]
   3fa6c:	ldr	w8, [x19, x0, lsl #2]
   3fa70:	ldr	x9, [x21, #64]
   3fa74:	ldr	x28, [x21, #16]
   3fa78:	ldr	w19, [x21, #24]
   3fa7c:	str	w8, [sp, #48]
   3fa80:	ldp	w2, w8, [x21, #184]
   3fa84:	str	x9, [sp, #128]
   3fa88:	mov	w9, #0xffffffff            	// #-1
   3fa8c:	mov	x0, x21
   3fa90:	sub	w8, w8, #0x1
   3fa94:	lsl	w20, w9, w8
   3fa98:	mvn	w8, w20
   3fa9c:	str	w8, [sp, #64]
   3faa0:	subs	w8, w26, w8
   3faa4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3faa8:	mov	w1, w26
   3faac:	str	w8, [sp, #52]
   3fab0:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3fab4:	add	x9, x28, x19
   3fab8:	mov	x12, x23
   3fabc:	str	x9, [sp, #112]
   3fac0:	ldr	x9, [sp, #168]
   3fac4:	cmp	w0, #0x0
   3fac8:	add	x11, x12, #0x4
   3facc:	str	x11, [sp, #144]
   3fad0:	csinc	w11, w0, wzr, ne  // ne = any
   3fad4:	str	w11, [sp, #136]
   3fad8:	ldr	x11, [sp, #128]
   3fadc:	add	x9, x9, x19
   3fae0:	str	x9, [sp, #88]
   3fae4:	bic	w9, w26, w20
   3fae8:	add	w10, w26, #0x9
   3faec:	str	w10, [sp, #152]
   3faf0:	ldr	w10, [x21, #196]
   3faf4:	lsl	w9, w9, #1
   3faf8:	cmp	w24, #0x0
   3fafc:	add	x11, x11, w9, uxtw #2
   3fb00:	mov	w9, #0x3                   	// #3
   3fb04:	sub	w8, w26, w0
   3fb08:	str	x28, [sp, #176]
   3fb0c:	cinc	x28, x9, ne  // ne = any
   3fb10:	add	x9, x11, #0x4
   3fb14:	str	w8, [sp, #184]
   3fb18:	ldur	x8, [x29, #-192]
   3fb1c:	stp	x9, x11, [sp, #72]
   3fb20:	mov	w9, #0x1                   	// #1
   3fb24:	lsl	w9, w9, w10
   3fb28:	str	w9, [sp, #24]
   3fb2c:	ldur	x9, [x29, #-208]
   3fb30:	sub	x8, x8, x22
   3fb34:	cinc	x8, x8, ne  // ne = any
   3fb38:	sub	w23, w26, w19
   3fb3c:	add	x8, x9, x8, lsl #2
   3fb40:	str	w26, [sp, #160]
   3fb44:	str	x8, [sp, #248]
   3fb48:	ldr	x8, [sp, #56]
   3fb4c:	ldur	x26, [x29, #-80]
   3fb50:	mov	x25, xzr
   3fb54:	stur	x19, [x29, #-192]
   3fb58:	cset	w19, ne  // ne = any
   3fb5c:	stur	wzr, [x29, #-152]
   3fb60:	stur	x8, [x29, #-120]
   3fb64:	add	x8, x19, x25
   3fb68:	cmp	x8, #0x3
   3fb6c:	b.eq	3fb7c <ZSTD_endStream@@Base+0x31c28>  // b.none
   3fb70:	ldr	x8, [sp, #248]
   3fb74:	ldr	w21, [x8, x25, lsl #2]
   3fb78:	b	3fb88 <ZSTD_endStream@@Base+0x31c34>
   3fb7c:	ldur	x8, [x29, #-144]
   3fb80:	ldr	w8, [x8]
   3fb84:	sub	w21, w8, #0x1
   3fb88:	sub	w8, w21, #0x1
   3fb8c:	cmp	w8, w23
   3fb90:	b.cs	3fbe4 <ZSTD_endStream@@Base+0x31c90>  // b.hs, b.nlast
   3fb94:	mov	w1, #0x4                   	// #4
   3fb98:	mov	x0, x12
   3fb9c:	mov	x22, x28
   3fba0:	mov	w28, w23
   3fba4:	mov	x23, x12
   3fba8:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fbac:	mov	w21, w21
   3fbb0:	mov	w20, w0
   3fbb4:	sub	x0, x23, x21
   3fbb8:	mov	w1, #0x4                   	// #4
   3fbbc:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fbc0:	cmp	w20, w0
   3fbc4:	b.ne	3fc5c <ZSTD_endStream@@Base+0x31d08>  // b.any
   3fbc8:	ldr	x0, [sp, #144]
   3fbcc:	ldur	x2, [x29, #-168]
   3fbd0:	neg	x8, x21
   3fbd4:	add	x1, x0, x8
   3fbd8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3fbdc:	add	w8, w0, #0x4
   3fbe0:	b	3fc60 <ZSTD_endStream@@Base+0x31d0c>
   3fbe4:	ldr	w9, [sp, #184]
   3fbe8:	cmp	w8, w9
   3fbec:	mov	w8, wzr
   3fbf0:	b.cs	3fc78 <ZSTD_endStream@@Base+0x31d24>  // b.hs, b.nlast
   3fbf4:	ldr	w9, [sp, #160]
   3fbf8:	ldur	x11, [x29, #-192]
   3fbfc:	sub	w9, w9, w21
   3fc00:	mvn	w10, w9
   3fc04:	add	w10, w11, w10
   3fc08:	cmp	w10, #0x3
   3fc0c:	b.cc	3fc78 <ZSTD_endStream@@Base+0x31d24>  // b.lo, b.ul, b.last
   3fc10:	ldr	x8, [sp, #176]
   3fc14:	mov	w1, #0x4                   	// #4
   3fc18:	mov	x0, x12
   3fc1c:	add	x20, x8, w9, uxtw
   3fc20:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fc24:	mov	w26, w0
   3fc28:	mov	w1, #0x4                   	// #4
   3fc2c:	mov	x0, x20
   3fc30:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fc34:	cmp	w26, w0
   3fc38:	b.ne	3fc70 <ZSTD_endStream@@Base+0x31d1c>  // b.any
   3fc3c:	ldr	x0, [sp, #144]
   3fc40:	ldur	x2, [x29, #-168]
   3fc44:	ldr	x3, [sp, #112]
   3fc48:	ldr	x4, [sp, #88]
   3fc4c:	add	x1, x20, #0x4
   3fc50:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3fc54:	add	w8, w0, #0x4
   3fc58:	b	3fc74 <ZSTD_endStream@@Base+0x31d20>
   3fc5c:	mov	w8, wzr
   3fc60:	ldur	x12, [x29, #-88]
   3fc64:	mov	w23, w28
   3fc68:	mov	x28, x22
   3fc6c:	b	3fc78 <ZSTD_endStream@@Base+0x31d24>
   3fc70:	mov	w8, wzr
   3fc74:	ldp	x12, x26, [x29, #-88]
   3fc78:	ldur	x10, [x29, #-120]
   3fc7c:	mov	w9, w8
   3fc80:	cmp	x10, x9
   3fc84:	b.cs	3fccc <ZSTD_endStream@@Base+0x31d78>  // b.hs, b.nlast
   3fc88:	ldur	x10, [x29, #-184]
   3fc8c:	ldur	w11, [x29, #-152]
   3fc90:	add	x10, x10, w11, uxtw #3
   3fc94:	add	w11, w11, #0x1
   3fc98:	stur	w11, [x29, #-152]
   3fc9c:	ldr	w11, [sp, #192]
   3fca0:	stp	w25, w8, [x10]
   3fca4:	cmp	w8, w11
   3fca8:	mov	w8, #0x1                   	// #1
   3fcac:	b.hi	3fcf8 <ZSTD_endStream@@Base+0x31da4>  // b.pmore
   3fcb0:	ldur	x11, [x29, #-168]
   3fcb4:	ldur	w20, [x29, #-152]
   3fcb8:	add	x10, x12, x9
   3fcbc:	stur	x9, [x29, #-120]
   3fcc0:	cmp	x10, x11
   3fcc4:	b.ne	3fcd0 <ZSTD_endStream@@Base+0x31d7c>  // b.any
   3fcc8:	b	3fcdc <ZSTD_endStream@@Base+0x31d88>
   3fccc:	ldur	x9, [x29, #-120]
   3fcd0:	mov	w8, wzr
   3fcd4:	mov	w20, w24
   3fcd8:	stur	x9, [x29, #-120]
   3fcdc:	cbnz	w8, 401dc <ZSTD_endStream@@Base+0x32288>
   3fce0:	add	x25, x25, #0x1
   3fce4:	add	x8, x19, x25
   3fce8:	cmp	x8, x28
   3fcec:	mov	w24, w20
   3fcf0:	b.cc	3fb64 <ZSTD_endStream@@Base+0x31c10>  // b.lo, b.ul, b.last
   3fcf4:	b	401d8 <ZSTD_endStream@@Base+0x32284>
   3fcf8:	ldur	w20, [x29, #-152]
   3fcfc:	stur	x9, [x29, #-120]
   3fd00:	cbz	w8, 3fce0 <ZSTD_endStream@@Base+0x31d8c>
   3fd04:	b	401dc <ZSTD_endStream@@Base+0x32288>
   3fd08:	ldr	w8, [x21, #204]
   3fd0c:	ldr	x19, [x21, #8]
   3fd10:	ldr	w1, [x21, #192]
   3fd14:	ldr	x20, [x21, #48]
   3fd18:	cmp	w8, #0xfff
   3fd1c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   3fd20:	mov	w2, #0x4                   	// #4
   3fd24:	str	w8, [sp, #192]
   3fd28:	sub	w23, w0, w19
   3fd2c:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   3fd30:	stp	x0, x20, [sp, #8]
   3fd34:	ldr	w8, [x20, x0, lsl #2]
   3fd38:	mov	w9, #0xffffffff            	// #-1
   3fd3c:	ldr	x28, [x21, #64]
   3fd40:	ldr	x22, [x21, #16]
   3fd44:	str	w8, [sp, #48]
   3fd48:	ldp	w2, w8, [x21, #184]
   3fd4c:	ldr	w26, [x21, #24]
   3fd50:	mov	x0, x21
   3fd54:	mov	w1, w23
   3fd58:	sub	w8, w8, #0x1
   3fd5c:	lsl	w20, w9, w8
   3fd60:	mvn	w8, w20
   3fd64:	str	w8, [sp, #64]
   3fd68:	subs	w8, w23, w8
   3fd6c:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
   3fd70:	str	w8, [sp, #52]
   3fd74:	bl	41d24 <ZSTD_endStream@@Base+0x33dd0>
   3fd78:	sub	w8, w23, w26
   3fd7c:	stur	w8, [x29, #-152]
   3fd80:	sub	w8, w23, w0
   3fd84:	str	w8, [sp, #184]
   3fd88:	ldur	x8, [x29, #-96]
   3fd8c:	ldur	x9, [x29, #-192]
   3fd90:	ldur	x12, [x29, #-88]
   3fd94:	cmp	w0, #0x0
   3fd98:	add	w10, w23, #0x9
   3fd9c:	sub	x8, x9, x8
   3fda0:	add	x9, x22, x26
   3fda4:	stp	x9, x19, [sp, #128]
   3fda8:	add	x9, x19, x26
   3fdac:	str	x9, [sp, #112]
   3fdb0:	bic	w9, w23, w20
   3fdb4:	add	x11, x12, #0x4
   3fdb8:	str	w10, [sp, #160]
   3fdbc:	ldr	w10, [x21, #196]
   3fdc0:	str	x11, [sp, #152]
   3fdc4:	csinc	w11, w0, wzr, ne  // ne = any
   3fdc8:	lsl	w9, w9, #1
   3fdcc:	str	w11, [sp, #144]
   3fdd0:	cmp	w24, #0x0
   3fdd4:	add	x11, x28, w9, uxtw #2
   3fdd8:	mov	w9, #0x3                   	// #3
   3fddc:	str	x28, [sp, #72]
   3fde0:	cinc	x28, x9, ne  // ne = any
   3fde4:	add	x9, x11, #0x4
   3fde8:	stp	x9, x11, [sp, #80]
   3fdec:	mov	w9, #0x1                   	// #1
   3fdf0:	lsl	w9, w9, w10
   3fdf4:	str	w9, [sp, #24]
   3fdf8:	ldur	x9, [x29, #-208]
   3fdfc:	stur	x26, [x29, #-192]
   3fe00:	ldr	x19, [sp, #56]
   3fe04:	ldur	x26, [x29, #-80]
   3fe08:	cinc	x8, x8, ne  // ne = any
   3fe0c:	mov	x25, xzr
   3fe10:	str	x22, [sp, #176]
   3fe14:	cset	w22, ne  // ne = any
   3fe18:	add	x8, x9, x8, lsl #2
   3fe1c:	stur	wzr, [x29, #-120]
   3fe20:	str	w23, [sp, #168]
   3fe24:	str	x8, [sp, #248]
   3fe28:	add	x8, x22, x25
   3fe2c:	cmp	x8, #0x3
   3fe30:	b.eq	3fe40 <ZSTD_endStream@@Base+0x31eec>  // b.none
   3fe34:	ldr	x8, [sp, #248]
   3fe38:	ldr	w21, [x8, x25, lsl #2]
   3fe3c:	b	3fe4c <ZSTD_endStream@@Base+0x31ef8>
   3fe40:	ldur	x8, [x29, #-144]
   3fe44:	ldr	w8, [x8]
   3fe48:	sub	w21, w8, #0x1
   3fe4c:	ldur	w9, [x29, #-152]
   3fe50:	sub	w8, w21, #0x1
   3fe54:	cmp	w8, w9
   3fe58:	b.cs	3fea4 <ZSTD_endStream@@Base+0x31f50>  // b.hs, b.nlast
   3fe5c:	mov	w1, #0x4                   	// #4
   3fe60:	mov	x0, x12
   3fe64:	mov	x23, x12
   3fe68:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fe6c:	mov	w21, w21
   3fe70:	mov	w20, w0
   3fe74:	sub	x0, x23, x21
   3fe78:	mov	w1, #0x4                   	// #4
   3fe7c:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fe80:	cmp	w20, w0
   3fe84:	b.ne	3ff1c <ZSTD_endStream@@Base+0x31fc8>  // b.any
   3fe88:	ldr	x0, [sp, #152]
   3fe8c:	ldur	x2, [x29, #-168]
   3fe90:	neg	x8, x21
   3fe94:	add	x1, x0, x8
   3fe98:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   3fe9c:	add	w8, w0, #0x4
   3fea0:	b	3ff2c <ZSTD_endStream@@Base+0x31fd8>
   3fea4:	ldr	w9, [sp, #184]
   3fea8:	cmp	w8, w9
   3feac:	mov	w8, wzr
   3feb0:	b.cs	3ff30 <ZSTD_endStream@@Base+0x31fdc>  // b.hs, b.nlast
   3feb4:	ldr	w9, [sp, #168]
   3feb8:	ldur	x11, [x29, #-192]
   3febc:	sub	w9, w9, w21
   3fec0:	mvn	w10, w9
   3fec4:	add	w10, w11, w10
   3fec8:	cmp	w10, #0x3
   3fecc:	b.cc	3ff30 <ZSTD_endStream@@Base+0x31fdc>  // b.lo, b.ul, b.last
   3fed0:	ldr	x8, [sp, #176]
   3fed4:	mov	w1, #0x4                   	// #4
   3fed8:	mov	x0, x12
   3fedc:	add	x20, x8, w9, uxtw
   3fee0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fee4:	mov	w26, w0
   3fee8:	mov	w1, #0x4                   	// #4
   3feec:	mov	x0, x20
   3fef0:	bl	41d48 <ZSTD_endStream@@Base+0x33df4>
   3fef4:	cmp	w26, w0
   3fef8:	b.ne	3ff24 <ZSTD_endStream@@Base+0x31fd0>  // b.any
   3fefc:	ldr	x0, [sp, #152]
   3ff00:	ldur	x2, [x29, #-168]
   3ff04:	ldr	x3, [sp, #128]
   3ff08:	ldr	x4, [sp, #112]
   3ff0c:	add	x1, x20, #0x4
   3ff10:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   3ff14:	add	w8, w0, #0x4
   3ff18:	b	3ff28 <ZSTD_endStream@@Base+0x31fd4>
   3ff1c:	mov	w8, wzr
   3ff20:	b	3ff2c <ZSTD_endStream@@Base+0x31fd8>
   3ff24:	mov	w8, wzr
   3ff28:	ldur	x26, [x29, #-80]
   3ff2c:	ldur	x12, [x29, #-88]
   3ff30:	mov	w9, w8
   3ff34:	cmp	x19, x9
   3ff38:	b.cs	3ff80 <ZSTD_endStream@@Base+0x3202c>  // b.hs, b.nlast
   3ff3c:	ldur	x10, [x29, #-184]
   3ff40:	ldur	w11, [x29, #-120]
   3ff44:	add	x10, x10, w11, uxtw #3
   3ff48:	add	w11, w11, #0x1
   3ff4c:	stur	w11, [x29, #-120]
   3ff50:	ldr	w11, [sp, #192]
   3ff54:	stp	w25, w8, [x10]
   3ff58:	cmp	w8, w11
   3ff5c:	mov	w8, #0x1                   	// #1
   3ff60:	b.hi	3ffac <ZSTD_endStream@@Base+0x32058>  // b.pmore
   3ff64:	ldur	x11, [x29, #-168]
   3ff68:	ldur	w20, [x29, #-120]
   3ff6c:	add	x10, x12, x9
   3ff70:	mov	x19, x9
   3ff74:	cmp	x10, x11
   3ff78:	b.ne	3ff84 <ZSTD_endStream@@Base+0x32030>  // b.any
   3ff7c:	b	3ff90 <ZSTD_endStream@@Base+0x3203c>
   3ff80:	mov	x9, x19
   3ff84:	mov	w8, wzr
   3ff88:	mov	x19, x9
   3ff8c:	mov	w20, w24
   3ff90:	cbnz	w8, 403c4 <ZSTD_endStream@@Base+0x32470>
   3ff94:	add	x25, x25, #0x1
   3ff98:	add	x8, x22, x25
   3ff9c:	cmp	x8, x28
   3ffa0:	mov	w24, w20
   3ffa4:	b.cc	3fe28 <ZSTD_endStream@@Base+0x31ed4>  // b.lo, b.ul, b.last
   3ffa8:	b	403c0 <ZSTD_endStream@@Base+0x3246c>
   3ffac:	ldur	w20, [x29, #-120]
   3ffb0:	mov	x19, x9
   3ffb4:	cbz	w8, 3ff94 <ZSTD_endStream@@Base+0x32040>
   3ffb8:	b	403c4 <ZSTD_endStream@@Base+0x32470>
   3ffbc:	mov	w8, wzr
   3ffc0:	ldur	w28, [x29, #-100]
   3ffc4:	cbnz	w8, 401c0 <ZSTD_endStream@@Base+0x3226c>
   3ffc8:	ldp	x10, x8, [sp, #8]
   3ffcc:	ldr	w9, [sp, #160]
   3ffd0:	ldur	x24, [x29, #-184]
   3ffd4:	ldr	w15, [sp, #24]
   3ffd8:	mov	x22, xzr
   3ffdc:	str	w9, [x8, x10, lsl #2]
   3ffe0:	add	w8, w9, #0x2
   3ffe4:	stur	xzr, [x29, #-120]
   3ffe8:	stur	w8, [x29, #-144]
   3ffec:	b	40004 <ZSTD_endStream@@Base+0x320b0>
   3fff0:	ldur	x12, [x29, #-88]
   3fff4:	mov	x25, x8
   3fff8:	mov	x8, x22
   3fffc:	mov	x22, x8
   40000:	tbz	w9, #0, 4019c <ZSTD_endStream@@Base+0x32248>
   40004:	ldur	w9, [x29, #-192]
   40008:	subs	w9, w9, #0x1
   4000c:	b.cc	4019c <ZSTD_endStream@@Base+0x32248>  // b.lo, b.ul, b.last
   40010:	ldr	w8, [sp, #136]
   40014:	cmp	w15, w8
   40018:	b.cc	4019c <ZSTD_endStream@@Base+0x32248>  // b.lo, b.ul, b.last
   4001c:	ldur	x8, [x29, #-120]
   40020:	mov	w21, w15
   40024:	mov	w26, w15
   40028:	mov	x20, x14
   4002c:	cmp	x22, x8
   40030:	csel	x23, x22, x8, cc  // cc = lo, ul, last
   40034:	add	x8, x23, x21
   40038:	cmp	x8, x14
   4003c:	stur	w9, [x29, #-192]
   40040:	b.cs	40080 <ZSTD_endStream@@Base+0x3212c>  // b.hs, b.nlast
   40044:	ldr	x8, [sp, #168]
   40048:	ldur	x2, [x29, #-168]
   4004c:	ldp	x4, x3, [sp, #80]
   40050:	add	x0, x12, x23
   40054:	add	x24, x8, x21
   40058:	add	x1, x24, x23
   4005c:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   40060:	ldr	x10, [sp, #128]
   40064:	add	x8, x0, x23
   40068:	add	x9, x8, x21
   4006c:	cmp	x9, x20
   40070:	add	x10, x10, x21
   40074:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   40078:	ldur	x24, [x29, #-184]
   4007c:	b	4009c <ZSTD_endStream@@Base+0x32148>
   40080:	ldr	x8, [sp, #128]
   40084:	ldur	x2, [x29, #-168]
   40088:	add	x0, x12, x23
   4008c:	add	x21, x8, x21
   40090:	add	x1, x21, x23
   40094:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   40098:	add	x8, x0, x23
   4009c:	mov	x14, x20
   400a0:	cmp	x8, x25
   400a4:	mov	w15, w26
   400a8:	b.ls	40100 <ZSTD_endStream@@Base+0x321ac>  // b.plast
   400ac:	ldr	w16, [sp, #152]
   400b0:	ldur	w12, [x29, #-144]
   400b4:	add	w11, w15, w8
   400b8:	mov	w9, wzr
   400bc:	sub	w10, w16, w15
   400c0:	cmp	x8, x10
   400c4:	sub	w12, w12, w15
   400c8:	add	x13, x24, w19, uxtw #3
   400cc:	csel	w16, w11, w16, hi  // hi = pmore
   400d0:	cmp	x8, #0x1, lsl #12
   400d4:	add	w19, w19, #0x1
   400d8:	stp	w12, w8, [x13]
   400dc:	str	w16, [sp, #152]
   400e0:	b.hi	3fff0 <ZSTD_endStream@@Base+0x3209c>  // b.pmore
   400e4:	ldur	x12, [x29, #-88]
   400e8:	ldur	x11, [x29, #-168]
   400ec:	mov	x25, x8
   400f0:	add	x10, x12, x8
   400f4:	cmp	x10, x11
   400f8:	b.ne	40104 <ZSTD_endStream@@Base+0x321b0>  // b.any
   400fc:	b	3fff4 <ZSTD_endStream@@Base+0x320a0>
   40100:	ldur	x12, [x29, #-88]
   40104:	ldrb	w9, [x21, x8]
   40108:	ldrb	w10, [x12, x8]
   4010c:	ldr	w11, [sp, #52]
   40110:	cmp	w9, w10
   40114:	ldr	x9, [sp, #112]
   40118:	and	w11, w15, w11
   4011c:	lsl	w11, w11, #1
   40120:	add	x9, x9, w11, uxtw #2
   40124:	b.cs	40148 <ZSTD_endStream@@Base+0x321f4>  // b.hs, b.nlast
   40128:	ldr	w10, [sp, #48]
   4012c:	cmp	w15, w10
   40130:	ldr	x10, [sp, #72]
   40134:	str	w15, [x10]
   40138:	b.ls	40174 <ZSTD_endStream@@Base+0x32220>  // b.plast
   4013c:	add	x9, x9, #0x4
   40140:	str	x9, [sp, #72]
   40144:	b	40168 <ZSTD_endStream@@Base+0x32214>
   40148:	ldr	w10, [sp, #48]
   4014c:	cmp	w15, w10
   40150:	ldr	x10, [sp, #64]
   40154:	str	w15, [x10]
   40158:	b.ls	40184 <ZSTD_endStream@@Base+0x32230>  // b.plast
   4015c:	str	x9, [sp, #64]
   40160:	stur	x8, [x29, #-120]
   40164:	mov	x8, x22
   40168:	ldr	w15, [x9]
   4016c:	mov	w9, #0x1                   	// #1
   40170:	b	3fffc <ZSTD_endStream@@Base+0x320a8>
   40174:	sub	x10, x29, #0x40
   40178:	mov	w9, wzr
   4017c:	str	x10, [sp, #72]
   40180:	b	3fffc <ZSTD_endStream@@Base+0x320a8>
   40184:	sub	x10, x29, #0x40
   40188:	mov	w9, wzr
   4018c:	str	x10, [sp, #64]
   40190:	stur	x8, [x29, #-120]
   40194:	mov	x8, x22
   40198:	b	3fffc <ZSTD_endStream@@Base+0x320a8>
   4019c:	ldr	x8, [sp, #64]
   401a0:	mov	w20, w19
   401a4:	str	wzr, [x8]
   401a8:	ldr	x8, [sp, #72]
   401ac:	str	wzr, [x8]
   401b0:	ldr	w8, [sp, #152]
   401b4:	ldp	x26, x9, [x29, #-80]
   401b8:	sub	w8, w8, #0x8
   401bc:	str	w8, [x9, #36]
   401c0:	ldur	x22, [x29, #-72]
   401c4:	b	40664 <ZSTD_endStream@@Base+0x32710>
   401c8:	mov	w8, wzr
   401cc:	cbz	w8, 405b0 <ZSTD_endStream@@Base+0x3265c>
   401d0:	ldp	x26, x22, [x29, #-80]
   401d4:	b	40660 <ZSTD_endStream@@Base+0x3270c>
   401d8:	mov	w8, wzr
   401dc:	cbnz	w8, 4065c <ZSTD_endStream@@Base+0x32708>
   401e0:	ldp	x10, x8, [sp, #8]
   401e4:	ldr	w9, [sp, #160]
   401e8:	ldur	x24, [x29, #-184]
   401ec:	ldr	w20, [sp, #48]
   401f0:	ldr	w28, [sp, #24]
   401f4:	mov	x22, xzr
   401f8:	str	w9, [x8, x10, lsl #2]
   401fc:	add	w8, w9, #0x2
   40200:	stur	xzr, [x29, #-144]
   40204:	str	w8, [sp, #248]
   40208:	b	40220 <ZSTD_endStream@@Base+0x322cc>
   4020c:	ldur	x12, [x29, #-88]
   40210:	stur	x8, [x29, #-120]
   40214:	mov	x8, x22
   40218:	mov	x22, x8
   4021c:	tbz	w9, #0, 40618 <ZSTD_endStream@@Base+0x326c4>
   40220:	subs	w28, w28, #0x1
   40224:	b.cc	40618 <ZSTD_endStream@@Base+0x326c4>  // b.lo, b.ul, b.last
   40228:	ldr	w8, [sp, #136]
   4022c:	cmp	w20, w8
   40230:	b.cc	40618 <ZSTD_endStream@@Base+0x326c4>  // b.lo, b.ul, b.last
   40234:	ldur	x8, [x29, #-144]
   40238:	ldur	x9, [x29, #-192]
   4023c:	mov	w21, w20
   40240:	cmp	x22, x8
   40244:	csel	x23, x22, x8, cc  // cc = lo, ul, last
   40248:	add	x8, x23, x21
   4024c:	cmp	x8, x9
   40250:	b.cs	402a0 <ZSTD_endStream@@Base+0x3234c>  // b.hs, b.nlast
   40254:	ldr	x8, [sp, #176]
   40258:	ldur	x2, [x29, #-168]
   4025c:	ldr	x3, [sp, #112]
   40260:	ldr	x4, [sp, #88]
   40264:	add	x24, x8, x21
   40268:	add	x0, x12, x23
   4026c:	add	x1, x24, x23
   40270:	mov	w25, w20
   40274:	mov	x20, x9
   40278:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   4027c:	ldr	x10, [sp, #168]
   40280:	add	x8, x0, x23
   40284:	add	x9, x8, x21
   40288:	cmp	x9, x20
   4028c:	add	x10, x10, x21
   40290:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   40294:	ldur	x24, [x29, #-184]
   40298:	mov	w20, w25
   4029c:	b	402bc <ZSTD_endStream@@Base+0x32368>
   402a0:	ldr	x8, [sp, #168]
   402a4:	ldur	x2, [x29, #-168]
   402a8:	add	x0, x12, x23
   402ac:	add	x21, x8, x21
   402b0:	add	x1, x21, x23
   402b4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   402b8:	add	x8, x0, x23
   402bc:	ldur	x9, [x29, #-120]
   402c0:	cmp	x8, x9
   402c4:	b.ls	40324 <ZSTD_endStream@@Base+0x323d0>  // b.plast
   402c8:	ldr	w14, [sp, #152]
   402cc:	ldr	w12, [sp, #248]
   402d0:	ldur	w15, [x29, #-152]
   402d4:	add	w11, w20, w8
   402d8:	sub	w10, w14, w20
   402dc:	cmp	x8, x10
   402e0:	mov	w9, wzr
   402e4:	sub	w12, w12, w20
   402e8:	add	x13, x24, w15, uxtw #3
   402ec:	csel	w14, w11, w14, hi  // hi = pmore
   402f0:	cmp	x8, #0x1, lsl #12
   402f4:	add	w15, w15, #0x1
   402f8:	stp	w12, w8, [x13]
   402fc:	stur	w15, [x29, #-152]
   40300:	str	w14, [sp, #152]
   40304:	b.hi	4020c <ZSTD_endStream@@Base+0x322b8>  // b.pmore
   40308:	ldur	x12, [x29, #-88]
   4030c:	ldur	x11, [x29, #-168]
   40310:	stur	x8, [x29, #-120]
   40314:	add	x10, x12, x8
   40318:	cmp	x10, x11
   4031c:	b.ne	40328 <ZSTD_endStream@@Base+0x323d4>  // b.any
   40320:	b	40210 <ZSTD_endStream@@Base+0x322bc>
   40324:	ldur	x12, [x29, #-88]
   40328:	ldrb	w9, [x21, x8]
   4032c:	ldrb	w10, [x12, x8]
   40330:	ldr	w11, [sp, #64]
   40334:	cmp	w9, w10
   40338:	ldr	x9, [sp, #128]
   4033c:	and	w11, w20, w11
   40340:	lsl	w11, w11, #1
   40344:	add	x9, x9, w11, uxtw #2
   40348:	b.cs	4036c <ZSTD_endStream@@Base+0x32418>  // b.hs, b.nlast
   4034c:	ldr	w10, [sp, #52]
   40350:	cmp	w20, w10
   40354:	ldr	x10, [sp, #80]
   40358:	str	w20, [x10]
   4035c:	b.ls	40398 <ZSTD_endStream@@Base+0x32444>  // b.plast
   40360:	add	x9, x9, #0x4
   40364:	str	x9, [sp, #80]
   40368:	b	4038c <ZSTD_endStream@@Base+0x32438>
   4036c:	ldr	w10, [sp, #52]
   40370:	cmp	w20, w10
   40374:	ldr	x10, [sp, #72]
   40378:	str	w20, [x10]
   4037c:	b.ls	403a8 <ZSTD_endStream@@Base+0x32454>  // b.plast
   40380:	str	x9, [sp, #72]
   40384:	stur	x8, [x29, #-144]
   40388:	mov	x8, x22
   4038c:	ldr	w20, [x9]
   40390:	mov	w9, #0x1                   	// #1
   40394:	b	40218 <ZSTD_endStream@@Base+0x322c4>
   40398:	sub	x10, x29, #0x40
   4039c:	mov	w9, wzr
   403a0:	str	x10, [sp, #80]
   403a4:	b	40218 <ZSTD_endStream@@Base+0x322c4>
   403a8:	sub	x10, x29, #0x40
   403ac:	mov	w9, wzr
   403b0:	str	x10, [sp, #72]
   403b4:	stur	x8, [x29, #-144]
   403b8:	mov	x8, x22
   403bc:	b	40218 <ZSTD_endStream@@Base+0x322c4>
   403c0:	mov	w8, wzr
   403c4:	cbnz	w8, 4065c <ZSTD_endStream@@Base+0x32708>
   403c8:	ldp	x10, x8, [sp, #8]
   403cc:	ldr	w9, [sp, #168]
   403d0:	ldur	x24, [x29, #-184]
   403d4:	ldr	w20, [sp, #48]
   403d8:	ldr	w28, [sp, #24]
   403dc:	mov	x22, xzr
   403e0:	str	w9, [x8, x10, lsl #2]
   403e4:	add	w8, w9, #0x2
   403e8:	stur	xzr, [x29, #-144]
   403ec:	str	w8, [sp, #248]
   403f0:	b	40408 <ZSTD_endStream@@Base+0x324b4>
   403f4:	ldur	x12, [x29, #-88]
   403f8:	mov	x19, x8
   403fc:	mov	x8, x22
   40400:	mov	x22, x8
   40404:	tbz	w9, #0, 40638 <ZSTD_endStream@@Base+0x326e4>
   40408:	subs	w28, w28, #0x1
   4040c:	b.cc	40638 <ZSTD_endStream@@Base+0x326e4>  // b.lo, b.ul, b.last
   40410:	ldr	w8, [sp, #144]
   40414:	cmp	w20, w8
   40418:	b.cc	40638 <ZSTD_endStream@@Base+0x326e4>  // b.lo, b.ul, b.last
   4041c:	ldur	x8, [x29, #-144]
   40420:	ldur	x9, [x29, #-192]
   40424:	mov	w21, w20
   40428:	cmp	x22, x8
   4042c:	csel	x23, x22, x8, cc  // cc = lo, ul, last
   40430:	add	x8, x23, x21
   40434:	cmp	x8, x9
   40438:	b.cs	4049c <ZSTD_endStream@@Base+0x32548>  // b.hs, b.nlast
   4043c:	ldr	x8, [sp, #176]
   40440:	ldur	x2, [x29, #-168]
   40444:	ldr	x3, [sp, #128]
   40448:	ldr	x4, [sp, #112]
   4044c:	add	x24, x8, x21
   40450:	add	x0, x12, x23
   40454:	add	x1, x24, x23
   40458:	stur	x19, [x29, #-152]
   4045c:	mov	w25, w20
   40460:	mov	x20, x9
   40464:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   40468:	ldr	x10, [sp, #136]
   4046c:	add	x8, x0, x23
   40470:	add	x9, x8, x21
   40474:	cmp	x9, x20
   40478:	add	x10, x10, x21
   4047c:	ldur	x19, [x29, #-152]
   40480:	csel	x21, x24, x10, cc  // cc = lo, ul, last
   40484:	ldur	x24, [x29, #-184]
   40488:	mov	w20, w25
   4048c:	cmp	x8, x19
   40490:	b.hi	404c0 <ZSTD_endStream@@Base+0x3256c>  // b.pmore
   40494:	ldur	x12, [x29, #-88]
   40498:	b	40518 <ZSTD_endStream@@Base+0x325c4>
   4049c:	ldr	x8, [sp, #136]
   404a0:	ldur	x2, [x29, #-168]
   404a4:	add	x0, x12, x23
   404a8:	add	x21, x8, x21
   404ac:	add	x1, x21, x23
   404b0:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   404b4:	add	x8, x0, x23
   404b8:	cmp	x8, x19
   404bc:	b.ls	40494 <ZSTD_endStream@@Base+0x32540>  // b.plast
   404c0:	ldr	w14, [sp, #160]
   404c4:	ldr	w12, [sp, #248]
   404c8:	ldur	w15, [x29, #-120]
   404cc:	add	w11, w20, w8
   404d0:	sub	w10, w14, w20
   404d4:	cmp	x8, x10
   404d8:	mov	w9, wzr
   404dc:	sub	w12, w12, w20
   404e0:	add	x13, x24, w15, uxtw #3
   404e4:	csel	w14, w11, w14, hi  // hi = pmore
   404e8:	cmp	x8, #0x1, lsl #12
   404ec:	add	w15, w15, #0x1
   404f0:	stp	w12, w8, [x13]
   404f4:	stur	w15, [x29, #-120]
   404f8:	str	w14, [sp, #160]
   404fc:	b.hi	403f4 <ZSTD_endStream@@Base+0x324a0>  // b.pmore
   40500:	ldur	x12, [x29, #-88]
   40504:	ldur	x11, [x29, #-168]
   40508:	mov	x19, x8
   4050c:	add	x10, x12, x8
   40510:	cmp	x10, x11
   40514:	b.eq	403f8 <ZSTD_endStream@@Base+0x324a4>  // b.none
   40518:	ldrb	w9, [x21, x8]
   4051c:	ldrb	w10, [x12, x8]
   40520:	ldr	w11, [sp, #64]
   40524:	cmp	w9, w10
   40528:	ldr	x9, [sp, #72]
   4052c:	and	w11, w20, w11
   40530:	lsl	w11, w11, #1
   40534:	add	x9, x9, w11, uxtw #2
   40538:	b.cs	4055c <ZSTD_endStream@@Base+0x32608>  // b.hs, b.nlast
   4053c:	ldr	w10, [sp, #52]
   40540:	cmp	w20, w10
   40544:	ldr	x10, [sp, #88]
   40548:	str	w20, [x10]
   4054c:	b.ls	40588 <ZSTD_endStream@@Base+0x32634>  // b.plast
   40550:	add	x9, x9, #0x4
   40554:	str	x9, [sp, #88]
   40558:	b	4057c <ZSTD_endStream@@Base+0x32628>
   4055c:	ldr	w10, [sp, #52]
   40560:	cmp	w20, w10
   40564:	ldr	x10, [sp, #80]
   40568:	str	w20, [x10]
   4056c:	b.ls	40598 <ZSTD_endStream@@Base+0x32644>  // b.plast
   40570:	str	x9, [sp, #80]
   40574:	stur	x8, [x29, #-144]
   40578:	mov	x8, x22
   4057c:	ldr	w20, [x9]
   40580:	mov	w9, #0x1                   	// #1
   40584:	b	40400 <ZSTD_endStream@@Base+0x324ac>
   40588:	sub	x10, x29, #0x40
   4058c:	mov	w9, wzr
   40590:	str	x10, [sp, #88]
   40594:	b	40400 <ZSTD_endStream@@Base+0x324ac>
   40598:	sub	x10, x29, #0x40
   4059c:	mov	w9, wzr
   405a0:	str	x10, [sp, #80]
   405a4:	stur	x8, [x29, #-144]
   405a8:	mov	x8, x22
   405ac:	b	40400 <ZSTD_endStream@@Base+0x324ac>
   405b0:	ldp	x26, x22, [x29, #-80]
   405b4:	ldur	w28, [x29, #-100]
   405b8:	cmp	x19, #0x2
   405bc:	b.hi	40a28 <ZSTD_endStream@@Base+0x32ad4>  // b.pmore
   405c0:	sub	x1, x29, #0xc
   405c4:	mov	x0, x22
   405c8:	bl	41d74 <ZSTD_endStream@@Base+0x33e20>
   405cc:	ldr	w8, [sp, #136]
   405d0:	cmp	w0, w8
   405d4:	b.cc	40990 <ZSTD_endStream@@Base+0x32a3c>  // b.lo, b.ul, b.last
   405d8:	ldr	w8, [sp, #168]
   405dc:	sub	w21, w8, w0
   405e0:	lsr	w8, w21, #18
   405e4:	cbnz	w8, 40990 <ZSTD_endStream@@Base+0x32a3c>
   405e8:	ldur	x8, [x29, #-192]
   405ec:	cmp	w0, w8
   405f0:	mov	w8, w0
   405f4:	b.cs	40998 <ZSTD_endStream@@Base+0x32a44>  // b.hs, b.nlast
   405f8:	ldr	x9, [sp, #160]
   405fc:	ldur	x0, [x29, #-88]
   40600:	ldur	x2, [x29, #-168]
   40604:	ldr	x3, [sp, #128]
   40608:	ldr	x4, [sp, #112]
   4060c:	add	x1, x9, x8
   40610:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   40614:	b	409ac <ZSTD_endStream@@Base+0x32a58>
   40618:	ldr	x8, [sp, #72]
   4061c:	ldur	x9, [x29, #-72]
   40620:	ldur	w20, [x29, #-152]
   40624:	str	wzr, [x8]
   40628:	ldr	x8, [sp, #80]
   4062c:	str	wzr, [x8]
   40630:	ldr	w8, [sp, #152]
   40634:	b	40654 <ZSTD_endStream@@Base+0x32700>
   40638:	ldr	x8, [sp, #80]
   4063c:	ldur	x9, [x29, #-72]
   40640:	ldur	w20, [x29, #-120]
   40644:	str	wzr, [x8]
   40648:	ldr	x8, [sp, #88]
   4064c:	str	wzr, [x8]
   40650:	ldr	w8, [sp, #160]
   40654:	sub	w8, w8, #0x8
   40658:	str	w8, [x9, #36]
   4065c:	ldur	x22, [x29, #-72]
   40660:	ldur	w28, [x29, #-100]
   40664:	ldur	x25, [x29, #-96]
   40668:	ldur	w0, [x29, #-112]
   4066c:	cbz	w20, 406b4 <ZSTD_endStream@@Base+0x32760>
   40670:	ldur	x9, [x29, #-184]
   40674:	sub	w8, w20, #0x1
   40678:	ldur	w24, [x29, #-196]
   4067c:	add	x9, x9, w8, uxtw #3
   40680:	ldr	w23, [x9, #4]
   40684:	cmp	w23, w24
   40688:	b.hi	406c0 <ZSTD_endStream@@Base+0x3276c>  // b.pmore
   4068c:	add	w9, w23, w28
   40690:	cmp	w9, #0x1, lsl #12
   40694:	b.cs	406c0 <ZSTD_endStream@@Base+0x3276c>  // b.hs, b.nlast
   40698:	ldur	w23, [x29, #-240]
   4069c:	ldr	w9, [sp, #220]
   406a0:	mov	w8, wzr
   406a4:	str	w9, [sp, #220]
   406a8:	cbz	w8, 40744 <ZSTD_endStream@@Base+0x327f0>
   406ac:	stur	w23, [x29, #-240]
   406b0:	b	4095c <ZSTD_endStream@@Base+0x32a08>
   406b4:	ldur	w24, [x29, #-196]
   406b8:	mov	w8, #0x13                  	// #19
   406bc:	b	4095c <ZSTD_endStream@@Base+0x32a08>
   406c0:	ldr	x9, [sp, #120]
   406c4:	ldur	x10, [x29, #-184]
   406c8:	lsl	x8, x8, #3
   406cc:	ldr	w9, [x9]
   406d0:	ldr	w8, [x10, x8]
   406d4:	str	w8, [sp, #204]
   406d8:	cbz	w9, 406e4 <ZSTD_endStream@@Base+0x32790>
   406dc:	mov	w8, wzr
   406e0:	b	406f0 <ZSTD_endStream@@Base+0x3279c>
   406e4:	mov	w8, #0x1c                  	// #28
   406e8:	madd	x8, x25, x8, x26
   406ec:	ldr	w8, [x8, #12]
   406f0:	sub	w19, w28, w8
   406f4:	ldr	w8, [sp, #200]
   406f8:	ldur	x9, [x29, #-24]
   406fc:	ldur	w21, [x29, #-124]
   40700:	ldr	x10, [sp, #40]
   40704:	stur	w8, [x29, #-64]
   40708:	ldr	w8, [sp, #204]
   4070c:	sub	x0, x29, #0x40
   40710:	stur	w21, [x29, #-52]
   40714:	stp	w8, w23, [x29, #-60]
   40718:	ldur	w8, [x29, #-16]
   4071c:	str	x9, [x10]
   40720:	str	w8, [x10, #8]
   40724:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   40728:	cmp	w19, #0x1, lsl #12
   4072c:	add	w0, w0, w19
   40730:	csel	w28, wzr, w19, hi  // hi = pmore
   40734:	mov	w8, #0x7                   	// #7
   40738:	mov	w9, w21
   4073c:	str	w9, [sp, #220]
   40740:	cbnz	w8, 406ac <ZSTD_endStream@@Base+0x32758>
   40744:	ldp	w9, w8, [sp, #100]
   40748:	mov	x10, xzr
   4074c:	str	w23, [sp, #192]
   40750:	stur	w28, [x29, #-100]
   40754:	add	w8, w9, w8
   40758:	stur	w8, [x29, #-88]
   4075c:	mov	w8, #0x1c                  	// #28
   40760:	umaddl	x8, w28, w8, x26
   40764:	add	x8, x8, #0x10
   40768:	stur	x8, [x29, #-240]
   4076c:	mov	w8, w20
   40770:	str	x8, [sp, #248]
   40774:	b	40794 <ZSTD_endStream@@Base+0x32840>
   40778:	mov	w0, w24
   4077c:	ldur	x10, [x29, #-192]
   40780:	ldr	x8, [sp, #248]
   40784:	ldur	w24, [x29, #-196]
   40788:	add	x10, x10, #0x1
   4078c:	cmp	x10, x8
   40790:	b.cs	4094c <ZSTD_endStream@@Base+0x329f8>  // b.hs, b.nlast
   40794:	ldur	x20, [x29, #-184]
   40798:	mov	x8, x10
   4079c:	mov	w24, w0
   407a0:	ldur	x0, [x29, #-240]
   407a4:	add	x19, x20, x8, lsl #3
   407a8:	ldr	w1, [x19]
   407ac:	ldur	w2, [x29, #-228]
   407b0:	stur	x10, [x29, #-192]
   407b4:	stur	w1, [x29, #-96]
   407b8:	bl	419c0 <ZSTD_endStream@@Base+0x33a6c>
   407bc:	stp	x1, x0, [x29, #-120]
   407c0:	ldr	w27, [x19, #4]
   407c4:	ldur	x8, [x29, #-192]
   407c8:	ldr	w25, [sp, #244]
   407cc:	cbz	x8, 407e0 <ZSTD_endStream@@Base+0x3288c>
   407d0:	sub	w8, w8, #0x1
   407d4:	add	x8, x20, w8, uxtw #3
   407d8:	ldr	w8, [x8, #4]
   407dc:	add	w25, w8, #0x1
   407e0:	cmp	w27, w25
   407e4:	mov	w19, #0x1c                  	// #28
   407e8:	mov	w20, #0x40000000            	// #1073741824
   407ec:	b.cc	40778 <ZSTD_endStream@@Base+0x32824>  // b.lo, b.ul, b.last
   407f0:	ldur	w8, [x29, #-96]
   407f4:	add	w0, w8, #0x1
   407f8:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   407fc:	mov	w8, w0
   40800:	stur	x8, [x29, #-144]
   40804:	lsl	w8, w0, #8
   40808:	add	w8, w8, #0x1, lsl #12
   4080c:	stur	w8, [x29, #-152]
   40810:	add	w8, w27, w28
   40814:	mov	w0, w24
   40818:	b	40854 <ZSTD_endStream@@Base+0x32900>
   4081c:	ldur	w10, [x29, #-124]
   40820:	umaddl	x9, w28, w19, x26
   40824:	stp	w27, w10, [x9, #8]
   40828:	ldur	w10, [x29, #-96]
   4082c:	stp	w8, w10, [x9]
   40830:	ldur	x8, [x29, #-112]
   40834:	str	x8, [x9, #16]
   40838:	ldur	x8, [x29, #-120]
   4083c:	str	w8, [x9, #24]
   40840:	ldur	w28, [x29, #-100]
   40844:	sub	w27, w27, #0x1
   40848:	cmp	w27, w25
   4084c:	sub	w8, w24, #0x1
   40850:	b.cc	4077c <ZSTD_endStream@@Base+0x32828>  // b.lo, b.ul, b.last
   40854:	ldr	w9, [x22, #152]
   40858:	mov	w24, w8
   4085c:	add	w28, w27, w28
   40860:	sub	w26, w27, #0x3
   40864:	cmp	w9, #0x1
   40868:	b.ne	40888 <ZSTD_endStream@@Base+0x32934>  // b.any
   4086c:	mov	w21, w0
   40870:	mov	w0, w26
   40874:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   40878:	ldur	w8, [x29, #-152]
   4087c:	add	w8, w8, w0
   40880:	mov	w0, w21
   40884:	b	408fc <ZSTD_endStream@@Base+0x329a8>
   40888:	ldr	x8, [x22, #96]
   4088c:	ldur	x23, [x29, #-144]
   40890:	mov	w21, w0
   40894:	ldr	w20, [x22, #148]
   40898:	ldr	w0, [x8, x23, lsl #2]
   4089c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   408a0:	mov	w19, w0
   408a4:	mov	w0, w26
   408a8:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   408ac:	mov	w8, w0
   408b0:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   408b4:	ldr	x9, [x22, #88]
   408b8:	lsl	x8, x8, #2
   408bc:	add	x10, x10, #0xca8
   408c0:	ldr	w26, [x10, x8]
   408c4:	ldur	x10, [x29, #-72]
   408c8:	ldr	w0, [x9, x8]
   408cc:	ldr	w22, [x10, #144]
   408d0:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   408d4:	sub	w9, w20, w19
   408d8:	add	w8, w26, w23
   408dc:	add	w9, w9, w22
   408e0:	ldur	x22, [x29, #-72]
   408e4:	add	w8, w9, w8, lsl #8
   408e8:	sub	w8, w8, w0
   408ec:	mov	w20, #0x40000000            	// #1073741824
   408f0:	mov	w19, #0x1c                  	// #28
   408f4:	mov	w0, w21
   408f8:	add	w8, w8, #0x33
   408fc:	ldur	w9, [x29, #-88]
   40900:	ldur	x26, [x29, #-80]
   40904:	cmp	w28, w0
   40908:	add	w8, w9, w8
   4090c:	b.hi	40928 <ZSTD_endStream@@Base+0x329d4>  // b.pmore
   40910:	umull	x9, w28, w19
   40914:	ldr	w9, [x26, x9]
   40918:	cmp	w8, w9
   4091c:	b.ge	40840 <ZSTD_endStream@@Base+0x328ec>  // b.tcont
   40920:	cmp	w28, w0
   40924:	b.ls	4081c <ZSTD_endStream@@Base+0x328c8>  // b.plast
   40928:	ldur	x10, [x29, #-136]
   4092c:	mov	w9, w0
   40930:	umaddl	x10, w0, w19, x10
   40934:	add	x9, x9, #0x1
   40938:	cmp	x24, x9
   4093c:	str	w20, [x10], #28
   40940:	b.ne	40934 <ZSTD_endStream@@Base+0x329e0>  // b.any
   40944:	mov	w0, w9
   40948:	b	4081c <ZSTD_endStream@@Base+0x328c8>
   4094c:	ldr	w9, [sp, #192]
   40950:	ldr	x27, [sp, #208]
   40954:	mov	w8, wzr
   40958:	stur	w9, [x29, #-240]
   4095c:	ldur	x20, [x29, #-208]
   40960:	cmp	w8, #0x13
   40964:	b.hi	3dc94 <ZSTD_endStream@@Base+0x2fd40>  // b.pmore
   40968:	adrp	x11, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   4096c:	add	x11, x11, #0xbac
   40970:	adr	x9, 3dc94 <ZSTD_endStream@@Base+0x2fd40>
   40974:	ldrh	w10, [x11, x8, lsl #1]
   40978:	add	x9, x9, x10, lsl #2
   4097c:	br	x9
   40980:	add	w28, w28, #0x1
   40984:	cmp	w28, w0
   40988:	b.ls	3f290 <ZSTD_endStream@@Base+0x3133c>  // b.plast
   4098c:	b	40c34 <ZSTD_endStream@@Base+0x32ce0>
   40990:	ldur	x2, [x29, #-88]
   40994:	b	40a18 <ZSTD_endStream@@Base+0x32ac4>
   40998:	ldr	x9, [sp, #88]
   4099c:	ldur	x0, [x29, #-88]
   409a0:	ldur	x2, [x29, #-168]
   409a4:	add	x1, x9, x8
   409a8:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   409ac:	ldur	x9, [x29, #-184]
   409b0:	ldur	x2, [x29, #-88]
   409b4:	cmp	x0, #0x3
   409b8:	b.cs	409c8 <ZSTD_endStream@@Base+0x32a74>  // b.hs, b.nlast
   409bc:	mov	w8, wzr
   409c0:	mov	x0, x19
   409c4:	b	40a10 <ZSTD_endStream@@Base+0x32abc>
   409c8:	ldr	w10, [sp, #184]
   409cc:	add	w8, w21, #0x2
   409d0:	stp	w8, w0, [x9]
   409d4:	cmp	x0, w10, uxtw
   409d8:	b.hi	409f8 <ZSTD_endStream@@Base+0x32aa4>  // b.pmore
   409dc:	ldur	x9, [x29, #-168]
   409e0:	add	x8, x2, x0
   409e4:	cmp	x8, x9
   409e8:	b.eq	409f8 <ZSTD_endStream@@Base+0x32aa4>  // b.none
   409ec:	mov	w8, wzr
   409f0:	mov	w25, #0x1                   	// #1
   409f4:	b	40a10 <ZSTD_endStream@@Base+0x32abc>
   409f8:	ldr	w8, [sp, #168]
   409fc:	mov	w25, #0x1                   	// #1
   40a00:	mov	w20, #0x1                   	// #1
   40a04:	add	w9, w8, #0x1
   40a08:	mov	w8, #0x1                   	// #1
   40a0c:	str	w9, [x22, #36]
   40a10:	mov	x19, x0
   40a14:	cbnz	w8, 40a20 <ZSTD_endStream@@Base+0x32acc>
   40a18:	mov	w8, wzr
   40a1c:	mov	x0, x19
   40a20:	mov	x19, x0
   40a24:	cbnz	w8, 40664 <ZSTD_endStream@@Base+0x32710>
   40a28:	ldr	w9, [sp, #168]
   40a2c:	ldp	x10, x8, [sp, #16]
   40a30:	mov	w20, w25
   40a34:	ldur	x25, [x29, #-192]
   40a38:	mov	x28, xzr
   40a3c:	mov	x22, xzr
   40a40:	add	w24, w9, #0x2
   40a44:	str	w9, [x8, x10, lsl #2]
   40a48:	b	40a60 <ZSTD_endStream@@Base+0x32b0c>
   40a4c:	ldur	x2, [x29, #-88]
   40a50:	mov	x19, x8
   40a54:	mov	x8, x22
   40a58:	mov	x22, x8
   40a5c:	tbz	w9, #0, 40c00 <ZSTD_endStream@@Base+0x32cac>
   40a60:	ldr	w8, [sp, #192]
   40a64:	subs	w8, w8, #0x1
   40a68:	b.cc	40c00 <ZSTD_endStream@@Base+0x32cac>  // b.lo, b.ul, b.last
   40a6c:	str	w8, [sp, #192]
   40a70:	ldur	w8, [x29, #-152]
   40a74:	ldr	w9, [sp, #136]
   40a78:	cmp	w8, w9
   40a7c:	b.cc	40c00 <ZSTD_endStream@@Base+0x32cac>  // b.lo, b.ul, b.last
   40a80:	cmp	x22, x28
   40a84:	csel	x23, x22, x28, cc  // cc = lo, ul, last
   40a88:	mov	w21, w8
   40a8c:	add	x8, x23, x21
   40a90:	cmp	x8, x25
   40a94:	b.cs	40ae8 <ZSTD_endStream@@Base+0x32b94>  // b.hs, b.nlast
   40a98:	ldr	x8, [sp, #160]
   40a9c:	add	x0, x2, x23
   40aa0:	ldur	x2, [x29, #-168]
   40aa4:	ldr	x3, [sp, #128]
   40aa8:	ldr	x4, [sp, #112]
   40aac:	add	x25, x8, x21
   40ab0:	add	x1, x25, x23
   40ab4:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   40ab8:	ldr	x10, [sp, #88]
   40abc:	ldur	x11, [x29, #-192]
   40ac0:	add	x8, x0, x23
   40ac4:	add	x9, x8, x21
   40ac8:	add	x10, x10, x21
   40acc:	cmp	x9, x11
   40ad0:	csel	x21, x25, x10, cc  // cc = lo, ul, last
   40ad4:	ldur	x25, [x29, #-192]
   40ad8:	cmp	x8, x19
   40adc:	b.hi	40b0c <ZSTD_endStream@@Base+0x32bb8>  // b.pmore
   40ae0:	ldur	x2, [x29, #-88]
   40ae4:	b	40b60 <ZSTD_endStream@@Base+0x32c0c>
   40ae8:	ldr	x8, [sp, #88]
   40aec:	add	x0, x2, x23
   40af0:	ldur	x2, [x29, #-168]
   40af4:	add	x21, x8, x21
   40af8:	add	x1, x21, x23
   40afc:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   40b00:	add	x8, x0, x23
   40b04:	cmp	x8, x19
   40b08:	b.ls	40ae0 <ZSTD_endStream@@Base+0x32b8c>  // b.plast
   40b0c:	ldr	w14, [sp, #144]
   40b10:	ldur	w12, [x29, #-152]
   40b14:	ldur	x13, [x29, #-184]
   40b18:	mov	w9, wzr
   40b1c:	sub	w10, w14, w12
   40b20:	add	w11, w12, w8
   40b24:	cmp	x8, x10
   40b28:	sub	w12, w24, w12
   40b2c:	add	x13, x13, w20, uxtw #3
   40b30:	csel	w14, w11, w14, hi  // hi = pmore
   40b34:	cmp	x8, #0x1, lsl #12
   40b38:	add	w20, w20, #0x1
   40b3c:	stp	w12, w8, [x13]
   40b40:	str	w14, [sp, #144]
   40b44:	b.hi	40a4c <ZSTD_endStream@@Base+0x32af8>  // b.pmore
   40b48:	ldur	x2, [x29, #-88]
   40b4c:	ldur	x11, [x29, #-168]
   40b50:	mov	x19, x8
   40b54:	add	x10, x2, x8
   40b58:	cmp	x10, x11
   40b5c:	b.eq	40a50 <ZSTD_endStream@@Base+0x32afc>  // b.none
   40b60:	ldrb	w9, [x21, x8]
   40b64:	ldrb	w10, [x2, x8]
   40b68:	ldr	w11, [sp, #52]
   40b6c:	ldur	w12, [x29, #-152]
   40b70:	cmp	w9, w10
   40b74:	ldr	x9, [sp, #80]
   40b78:	and	w11, w12, w11
   40b7c:	lsl	w11, w11, #1
   40b80:	add	x9, x9, w11, uxtw #2
   40b84:	b.cs	40ba8 <ZSTD_endStream@@Base+0x32c54>  // b.hs, b.nlast
   40b88:	ldr	w10, [sp, #48]
   40b8c:	cmp	w12, w10
   40b90:	ldr	x10, [sp, #72]
   40b94:	str	w12, [x10]
   40b98:	b.ls	40bd8 <ZSTD_endStream@@Base+0x32c84>  // b.plast
   40b9c:	add	x9, x9, #0x4
   40ba0:	str	x9, [sp, #72]
   40ba4:	b	40bc8 <ZSTD_endStream@@Base+0x32c74>
   40ba8:	ldr	w10, [sp, #48]
   40bac:	cmp	w12, w10
   40bb0:	ldr	x10, [sp, #64]
   40bb4:	str	w12, [x10]
   40bb8:	b.ls	40be8 <ZSTD_endStream@@Base+0x32c94>  // b.plast
   40bbc:	str	x9, [sp, #64]
   40bc0:	mov	x28, x8
   40bc4:	mov	x8, x22
   40bc8:	ldr	w9, [x9]
   40bcc:	stur	w9, [x29, #-152]
   40bd0:	mov	w9, #0x1                   	// #1
   40bd4:	b	40a58 <ZSTD_endStream@@Base+0x32b04>
   40bd8:	sub	x10, x29, #0x40
   40bdc:	mov	w9, wzr
   40be0:	str	x10, [sp, #72]
   40be4:	b	40a58 <ZSTD_endStream@@Base+0x32b04>
   40be8:	sub	x10, x29, #0x40
   40bec:	mov	w9, wzr
   40bf0:	str	x10, [sp, #64]
   40bf4:	mov	x28, x8
   40bf8:	mov	x8, x22
   40bfc:	b	40a58 <ZSTD_endStream@@Base+0x32b04>
   40c00:	ldr	x8, [sp, #64]
   40c04:	ldur	x22, [x29, #-72]
   40c08:	ldur	w28, [x29, #-100]
   40c0c:	str	wzr, [x8]
   40c10:	ldr	x8, [sp, #72]
   40c14:	str	wzr, [x8]
   40c18:	ldr	w8, [sp, #144]
   40c1c:	sub	w8, w8, #0x8
   40c20:	str	w8, [x22, #36]
   40c24:	b	40664 <ZSTD_endStream@@Base+0x32710>
   40c28:	ldp	w21, w22, [sp, #200]
   40c2c:	mov	w20, #0x1c                  	// #28
   40c30:	b	40cb8 <ZSTD_endStream@@Base+0x32d64>
   40c34:	mov	w20, #0x1c                  	// #28
   40c38:	umaddl	x8, w0, w20, x26
   40c3c:	ldp	w21, w22, [x8]
   40c40:	ldr	w9, [x8, #24]
   40c44:	ldr	x10, [x8, #16]
   40c48:	ldp	w28, w25, [x8, #8]
   40c4c:	stp	w21, w22, [x29, #-64]
   40c50:	stur	w9, [x29, #-16]
   40c54:	stur	x10, [x29, #-24]
   40c58:	stp	w28, w25, [x29, #-56]
   40c5c:	ldr	w9, [x8, #24]
   40c60:	ldr	x8, [x8, #16]
   40c64:	ldr	x19, [sp, #40]
   40c68:	mov	w23, w0
   40c6c:	sub	x0, x29, #0x40
   40c70:	str	w9, [x19, #8]
   40c74:	str	x8, [x19]
   40c78:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   40c7c:	cmp	w23, w0
   40c80:	str	w25, [sp, #220]
   40c84:	stur	w28, [x29, #-240]
   40c88:	b.ls	40cb4 <ZSTD_endStream@@Base+0x32d60>  // b.plast
   40c8c:	ldur	w8, [x29, #-16]
   40c90:	ldur	x9, [x29, #-24]
   40c94:	sub	x0, x29, #0x40
   40c98:	stp	w21, w22, [x29, #-64]
   40c9c:	stp	w28, w25, [x29, #-56]
   40ca0:	str	w8, [x19, #8]
   40ca4:	str	x9, [x19]
   40ca8:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   40cac:	sub	w28, w23, w0
   40cb0:	b	40cb8 <ZSTD_endStream@@Base+0x32d64>
   40cb4:	mov	w28, wzr
   40cb8:	add	w19, w28, #0x1
   40cbc:	umaddl	x8, w19, w20, x26
   40cc0:	stp	w21, w22, [sp, #200]
   40cc4:	stp	w21, w22, [x8]
   40cc8:	ldur	w9, [x29, #-240]
   40ccc:	mov	w25, #0x1c                  	// #28
   40cd0:	mov	w20, w28
   40cd4:	mov	w21, w28
   40cd8:	str	w9, [x8, #8]
   40cdc:	ldr	w9, [sp, #220]
   40ce0:	stur	w28, [x29, #-100]
   40ce4:	str	w9, [x8, #12]
   40ce8:	ldur	w9, [x29, #-16]
   40cec:	ldur	x10, [x29, #-24]
   40cf0:	str	w9, [x8, #24]
   40cf4:	str	x10, [x8, #16]
   40cf8:	cbz	w28, 40d44 <ZSTD_endStream@@Base+0x32df0>
   40cfc:	umaddl	x22, w21, w25, x26
   40d00:	ldur	q0, [x22, #12]
   40d04:	ldr	q1, [x22]
   40d08:	sub	x0, x29, #0x40
   40d0c:	stur	q0, [x29, #-52]
   40d10:	stur	q1, [x29, #-64]
   40d14:	bl	41938 <ZSTD_endStream@@Base+0x339e4>
   40d18:	ldur	q0, [x22, #12]
   40d1c:	ldr	q1, [x22]
   40d20:	subs	w9, w21, w0
   40d24:	umaddl	x8, w20, w25, x26
   40d28:	sub	w20, w20, #0x1
   40d2c:	csel	w21, wzr, w9, cc  // cc = lo, ul, last
   40d30:	stur	q0, [x8, #12]
   40d34:	str	q1, [x8]
   40d38:	b.hi	40cfc <ZSTD_endStream@@Base+0x32da8>  // b.pmore
   40d3c:	add	w28, w20, #0x1
   40d40:	b	40d48 <ZSTD_endStream@@Base+0x32df4>
   40d44:	mov	w28, w19
   40d48:	ldur	x20, [x29, #-208]
   40d4c:	ldur	x21, [x29, #-224]
   40d50:	ldur	x22, [x29, #-72]
   40d54:	cmp	w28, w19
   40d58:	b.ls	40d9c <ZSTD_endStream@@Base+0x32e48>  // b.plast
   40d5c:	ldur	x0, [x29, #-216]
   40d60:	mov	w1, #0x2                   	// #2
   40d64:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   40d68:	ldr	x8, [sp, #224]
   40d6c:	ldur	w28, [x29, #-100]
   40d70:	b	3dc98 <ZSTD_endStream@@Base+0x2fd44>
   40d74:	ldur	w24, [x29, #-196]
   40d78:	ldur	x20, [x29, #-208]
   40d7c:	strh	w8, [x10, #6]
   40d80:	add	x8, x10, #0x8
   40d84:	add	x27, x27, w9, uxtw
   40d88:	str	x8, [x21, #8]
   40d8c:	stur	x27, [x29, #-160]
   40d90:	add	w28, w28, #0x1
   40d94:	cmp	w28, w19
   40d98:	b.hi	40d5c <ZSTD_endStream@@Base+0x32e08>  // b.pmore
   40d9c:	mov	w8, #0x1c                  	// #28
   40da0:	umaddl	x8, w28, w8, x26
   40da4:	ldp	w25, w24, [x8, #8]
   40da8:	cbz	w25, 40dd4 <ZSTD_endStream@@Base+0x32e80>
   40dac:	ldr	w20, [x8, #4]
   40db0:	cmp	w20, #0x3
   40db4:	b.cc	40de4 <ZSTD_endStream@@Base+0x32e90>  // b.lo, b.ul, b.last
   40db8:	ldur	x10, [x29, #-176]
   40dbc:	ldp	w9, w8, [x10]
   40dc0:	stp	w9, w8, [x10, #4]
   40dc4:	ldur	x0, [x29, #-216]
   40dc8:	ldr	x22, [sp, #232]
   40dcc:	sub	w8, w20, #0x2
   40dd0:	b	40e40 <ZSTD_endStream@@Base+0x32eec>
   40dd4:	add	x8, x27, x24
   40dd8:	ldur	w24, [x29, #-196]
   40ddc:	stur	x8, [x29, #-160]
   40de0:	b	40d90 <ZSTD_endStream@@Base+0x32e3c>
   40de4:	ldur	x0, [x29, #-216]
   40de8:	ldr	x22, [sp, #232]
   40dec:	cmp	w24, #0x0
   40df0:	cinc	w9, w20, eq  // eq = none
   40df4:	cbz	w9, 40e44 <ZSTD_endStream@@Base+0x32ef0>
   40df8:	cmp	w9, #0x3
   40dfc:	b.ne	40e18 <ZSTD_endStream@@Base+0x32ec4>  // b.any
   40e00:	ldur	x8, [x29, #-176]
   40e04:	ldr	w8, [x8]
   40e08:	sub	w8, w8, #0x1
   40e0c:	cmp	w9, #0x2
   40e10:	b.cs	40e28 <ZSTD_endStream@@Base+0x32ed4>  // b.hs, b.nlast
   40e14:	b	40e34 <ZSTD_endStream@@Base+0x32ee0>
   40e18:	ldur	x8, [x29, #-176]
   40e1c:	ldr	w8, [x8, w9, uxtw #2]
   40e20:	cmp	w9, #0x2
   40e24:	b.cc	40e34 <ZSTD_endStream@@Base+0x32ee0>  // b.lo, b.ul, b.last
   40e28:	ldur	x10, [x29, #-176]
   40e2c:	ldr	w9, [x10, #4]
   40e30:	str	w9, [x10, #8]
   40e34:	ldur	x10, [x29, #-176]
   40e38:	ldr	w9, [x10]
   40e3c:	str	w9, [x10, #4]
   40e40:	str	w8, [x10]
   40e44:	mov	w1, w24
   40e48:	mov	x2, x27
   40e4c:	mov	w3, w20
   40e50:	mov	w4, w25
   40e54:	bl	41ad4 <ZSTD_endStream@@Base+0x33b80>
   40e58:	ldr	x0, [x21, #24]
   40e5c:	add	x2, x27, x24
   40e60:	mov	x23, x27
   40e64:	mov	x1, x27
   40e68:	cmp	x2, x22
   40e6c:	b.ls	40e7c <ZSTD_endStream@@Base+0x32f28>  // b.plast
   40e70:	mov	x3, x22
   40e74:	bl	41fb8 <ZSTD_endStream@@Base+0x34064>
   40e78:	b	40ee8 <ZSTD_endStream@@Base+0x32f94>
   40e7c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   40e80:	cmp	w24, #0x11
   40e84:	b.cc	40ee8 <ZSTD_endStream@@Base+0x32f94>  // b.lo, b.ul, b.last
   40e88:	ldur	x8, [x29, #-224]
   40e8c:	add	x1, x23, #0x10
   40e90:	mov	x21, x23
   40e94:	ldr	x22, [x8, #24]
   40e98:	add	x0, x22, #0x10
   40e9c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   40ea0:	add	x0, x22, #0x20
   40ea4:	add	x1, x23, #0x20
   40ea8:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   40eac:	cmp	w24, #0x31
   40eb0:	b.cc	40ee8 <ZSTD_endStream@@Base+0x32f94>  // b.lo, b.ul, b.last
   40eb4:	add	x21, x22, x24
   40eb8:	add	x26, x22, #0x30
   40ebc:	add	x27, x23, #0x40
   40ec0:	sub	x1, x27, #0x10
   40ec4:	mov	x0, x26
   40ec8:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   40ecc:	add	x0, x26, #0x10
   40ed0:	mov	x1, x27
   40ed4:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   40ed8:	add	x26, x26, #0x20
   40edc:	cmp	x26, x21
   40ee0:	add	x27, x27, #0x20
   40ee4:	b.cc	40ec0 <ZSTD_endStream@@Base+0x32f6c>  // b.lo, b.ul, b.last
   40ee8:	ldur	x21, [x29, #-224]
   40eec:	sub	w8, w25, #0x3
   40ef0:	cmp	w24, #0x10, lsl #12
   40ef4:	ldr	x9, [x21, #24]
   40ef8:	add	x9, x9, x24
   40efc:	str	x9, [x21, #24]
   40f00:	b.cc	40f18 <ZSTD_endStream@@Base+0x32fc4>  // b.lo, b.ul, b.last
   40f04:	ldp	x10, x9, [x21]
   40f08:	sub	x9, x9, x10
   40f0c:	lsr	x9, x9, #3
   40f10:	mov	w10, #0x1                   	// #1
   40f14:	stp	w10, w9, [x21, #72]
   40f18:	ldr	x10, [x21, #8]
   40f1c:	add	w11, w20, #0x1
   40f20:	add	w9, w25, w24
   40f24:	cmp	w8, #0x10, lsl #12
   40f28:	strh	w24, [x10, #4]
   40f2c:	str	w11, [x10]
   40f30:	ldp	x26, x22, [x29, #-80]
   40f34:	mov	x27, x23
   40f38:	mov	w13, #0x2                   	// #2
   40f3c:	b.cc	40d74 <ZSTD_endStream@@Base+0x32e20>  // b.lo, b.ul, b.last
   40f40:	ldp	x12, x11, [x21]
   40f44:	sub	x11, x11, x12
   40f48:	lsr	x11, x11, #3
   40f4c:	stp	w13, w11, [x21, #72]
   40f50:	b	40d74 <ZSTD_endStream@@Base+0x32e20>
   40f54:	ldur	x8, [x29, #-168]
   40f58:	sub	x0, x8, x27
   40f5c:	add	sp, sp, #0x1f0
   40f60:	ldp	x20, x19, [sp, #80]
   40f64:	ldp	x22, x21, [sp, #64]
   40f68:	ldp	x24, x23, [sp, #48]
   40f6c:	ldp	x26, x25, [sp, #32]
   40f70:	ldp	x28, x27, [sp, #16]
   40f74:	ldp	x29, x30, [sp], #96
   40f78:	ret
   40f7c:	sub	sp, sp, #0xd0
   40f80:	stp	x29, x30, [sp, #112]
   40f84:	stp	x28, x27, [sp, #128]
   40f88:	stp	x26, x25, [sp, #144]
   40f8c:	stp	x24, x23, [sp, #160]
   40f90:	stp	x22, x21, [sp, #176]
   40f94:	stp	x20, x19, [sp, #192]
   40f98:	ldr	w8, [x0, #192]
   40f9c:	ldr	x19, [x0, #48]
   40fa0:	mov	x20, x2
   40fa4:	mov	x22, x0
   40fa8:	mov	x21, x1
   40fac:	mov	x0, x1
   40fb0:	mov	w1, w8
   40fb4:	mov	w2, w3
   40fb8:	add	x29, sp, #0x70
   40fbc:	mov	w25, w4
   40fc0:	bl	41218 <ZSTD_endStream@@Base+0x332c4>
   40fc4:	stur	xzr, [x29, #-24]
   40fc8:	ldr	w8, [x22, #188]
   40fcc:	ldp	x14, x15, [x22, #8]
   40fd0:	ldp	w16, w11, [x22, #24]
   40fd4:	ldr	x13, [x22, #64]
   40fd8:	mov	w9, #0xffffffff            	// #-1
   40fdc:	sub	w8, w8, #0x1
   40fe0:	str	x15, [sp, #32]
   40fe4:	add	x15, x15, x16
   40fe8:	str	x15, [sp, #16]
   40fec:	add	x15, x14, x16
   40ff0:	stur	x14, [x29, #-40]
   40ff4:	sub	w14, w21, w14
   40ff8:	lsl	w8, w9, w8
   40ffc:	lsl	x10, x0, #2
   41000:	stur	w11, [x29, #-28]
   41004:	ldr	w11, [x22, #196]
   41008:	mvn	w9, w8
   4100c:	bic	w8, w14, w8
   41010:	ldr	w23, [x19, x10]
   41014:	lsl	w8, w8, #1
   41018:	add	x26, x13, w8, uxtw #2
   4101c:	mov	w12, #0x1                   	// #1
   41020:	str	w9, [sp, #44]
   41024:	subs	w9, w14, w9
   41028:	add	x8, x26, #0x4
   4102c:	mov	x28, xzr
   41030:	lsl	w22, w12, w11
   41034:	add	w24, w14, #0x9
   41038:	str	w14, [x19, x10]
   4103c:	csel	w9, wzr, w9, cc  // cc = lo, ul, last
   41040:	stp	x13, x8, [sp, #48]
   41044:	mov	w8, #0x8                   	// #8
   41048:	stur	x16, [x29, #-48]
   4104c:	str	x15, [sp, #8]
   41050:	str	w14, [sp, #4]
   41054:	str	w9, [sp, #40]
   41058:	stur	x8, [x29, #-16]
   4105c:	str	w25, [sp, #28]
   41060:	b	4106c <ZSTD_endStream@@Base+0x33118>
   41064:	mov	w9, wzr
   41068:	tbz	w9, #0, 411bc <ZSTD_endStream@@Base+0x33268>
   4106c:	subs	w22, w22, #0x1
   41070:	b.cc	411bc <ZSTD_endStream@@Base+0x33268>  // b.lo, b.ul, b.last
   41074:	ldur	w8, [x29, #-28]
   41078:	cmp	w23, w8
   4107c:	b.cc	411bc <ZSTD_endStream@@Base+0x33268>  // b.lo, b.ul, b.last
   41080:	ldur	x8, [x29, #-24]
   41084:	cmp	x8, x28
   41088:	csel	x19, x8, x28, cc  // cc = lo, ul, last
   4108c:	cbz	w25, 410e0 <ZSTD_endStream@@Base+0x3318c>
   41090:	ldur	x9, [x29, #-48]
   41094:	mov	w27, w23
   41098:	add	x8, x19, x27
   4109c:	cmp	x8, x9
   410a0:	b.cs	410e0 <ZSTD_endStream@@Base+0x3318c>  // b.hs, b.nlast
   410a4:	ldr	x8, [sp, #32]
   410a8:	ldp	x4, x3, [sp, #8]
   410ac:	add	x0, x21, x19
   410b0:	mov	x2, x20
   410b4:	add	x25, x8, x27
   410b8:	add	x1, x25, x19
   410bc:	bl	413dc <ZSTD_endStream@@Base+0x33488>
   410c0:	ldp	x11, x10, [x29, #-48]
   410c4:	add	x8, x0, x19
   410c8:	add	x9, x8, x27
   410cc:	add	x10, x10, x27
   410d0:	cmp	x9, x11
   410d4:	csel	x27, x25, x10, cc  // cc = lo, ul, last
   410d8:	ldr	w25, [sp, #28]
   410dc:	b	410fc <ZSTD_endStream@@Base+0x331a8>
   410e0:	ldur	x8, [x29, #-40]
   410e4:	add	x0, x21, x19
   410e8:	mov	x2, x20
   410ec:	add	x27, x8, w23, uxtw
   410f0:	add	x1, x27, x19
   410f4:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   410f8:	add	x8, x0, x19
   410fc:	ldur	x9, [x29, #-16]
   41100:	cmp	x8, x9
   41104:	b.ls	41120 <ZSTD_endStream@@Base+0x331cc>  // b.plast
   41108:	sub	w9, w24, w23
   4110c:	cmp	x8, x9
   41110:	stur	x8, [x29, #-16]
   41114:	b.ls	41120 <ZSTD_endStream@@Base+0x331cc>  // b.plast
   41118:	add	w24, w23, w8
   4111c:	stur	x8, [x29, #-16]
   41120:	add	x9, x21, x8
   41124:	cmp	x9, x20
   41128:	b.eq	41064 <ZSTD_endStream@@Base+0x33110>  // b.none
   4112c:	ldrb	w10, [x27, x8]
   41130:	ldrb	w9, [x9]
   41134:	ldr	w11, [sp, #44]
   41138:	cmp	w10, w9
   4113c:	ldr	x9, [sp, #48]
   41140:	and	w11, w23, w11
   41144:	lsl	w11, w11, #1
   41148:	add	x9, x9, w11, uxtw #2
   4114c:	b.cs	41170 <ZSTD_endStream@@Base+0x3321c>  // b.hs, b.nlast
   41150:	ldr	w10, [sp, #40]
   41154:	str	w23, [x26]
   41158:	cmp	w23, w10
   4115c:	b.ls	41198 <ZSTD_endStream@@Base+0x33244>  // b.plast
   41160:	add	x26, x9, #0x4
   41164:	mov	x9, x26
   41168:	stur	x8, [x29, #-24]
   4116c:	b	4118c <ZSTD_endStream@@Base+0x33238>
   41170:	ldr	w10, [sp, #40]
   41174:	cmp	w23, w10
   41178:	ldr	x10, [sp, #56]
   4117c:	str	w23, [x10]
   41180:	b.ls	411a8 <ZSTD_endStream@@Base+0x33254>  // b.plast
   41184:	mov	x28, x8
   41188:	str	x9, [sp, #56]
   4118c:	ldr	w23, [x9]
   41190:	mov	w9, #0x1                   	// #1
   41194:	b	41068 <ZSTD_endStream@@Base+0x33114>
   41198:	mov	w9, wzr
   4119c:	sub	x26, x29, #0x4
   411a0:	stur	x8, [x29, #-24]
   411a4:	b	41068 <ZSTD_endStream@@Base+0x33114>
   411a8:	sub	x10, x29, #0x4
   411ac:	mov	w9, wzr
   411b0:	str	x10, [sp, #56]
   411b4:	mov	x28, x8
   411b8:	b	41068 <ZSTD_endStream@@Base+0x33114>
   411bc:	ldr	x8, [sp, #56]
   411c0:	ldur	x11, [x29, #-16]
   411c4:	ldr	w10, [sp, #4]
   411c8:	mov	w9, #0xc0                  	// #192
   411cc:	str	wzr, [x8]
   411d0:	sub	w8, w11, #0x180
   411d4:	cmp	w8, #0xc0
   411d8:	str	wzr, [x26]
   411dc:	sub	w10, w24, w10
   411e0:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   411e4:	cmp	x11, #0x180
   411e8:	ldp	x20, x19, [sp, #192]
   411ec:	ldp	x22, x21, [sp, #176]
   411f0:	ldp	x24, x23, [sp, #160]
   411f4:	ldp	x26, x25, [sp, #144]
   411f8:	ldp	x28, x27, [sp, #128]
   411fc:	ldp	x29, x30, [sp, #112]
   41200:	csel	w8, w8, wzr, hi  // hi = pmore
   41204:	sub	w9, w10, #0x8
   41208:	cmp	w8, w9
   4120c:	csel	w0, w8, w9, hi  // hi = pmore
   41210:	add	sp, sp, #0xd0
   41214:	ret
   41218:	stp	x29, x30, [sp, #-16]!
   4121c:	sub	w8, w2, #0x5
   41220:	cmp	w8, #0x3
   41224:	mov	x29, sp
   41228:	b.hi	41250 <ZSTD_endStream@@Base+0x332fc>  // b.pmore
   4122c:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   41230:	add	x9, x9, #0xbd4
   41234:	adr	x10, 41244 <ZSTD_endStream@@Base+0x332f0>
   41238:	ldrb	w11, [x9, x8]
   4123c:	add	x10, x10, x11, lsl #2
   41240:	br	x10
   41244:	bl	41480 <ZSTD_endStream@@Base+0x3352c>
   41248:	ldp	x29, x30, [sp], #16
   4124c:	ret
   41250:	bl	41454 <ZSTD_endStream@@Base+0x33500>
   41254:	ldp	x29, x30, [sp], #16
   41258:	ret
   4125c:	bl	414a8 <ZSTD_endStream@@Base+0x33554>
   41260:	ldp	x29, x30, [sp], #16
   41264:	ret
   41268:	bl	414d0 <ZSTD_endStream@@Base+0x3357c>
   4126c:	ldp	x29, x30, [sp], #16
   41270:	ret
   41274:	bl	414f8 <ZSTD_endStream@@Base+0x335a4>
   41278:	ldp	x29, x30, [sp], #16
   4127c:	ret
   41280:	stp	x29, x30, [sp, #-80]!
   41284:	stp	x26, x25, [sp, #16]
   41288:	sub	x25, x2, #0x7
   4128c:	stp	x22, x21, [sp, #48]
   41290:	stp	x20, x19, [sp, #64]
   41294:	mov	x20, x2
   41298:	mov	x19, x0
   4129c:	cmp	x25, x0
   412a0:	mov	x21, x1
   412a4:	stp	x24, x23, [sp, #32]
   412a8:	mov	x29, sp
   412ac:	b.ls	412e0 <ZSTD_endStream@@Base+0x3338c>  // b.plast
   412b0:	mov	x0, x21
   412b4:	bl	415d4 <ZSTD_endStream@@Base+0x33680>
   412b8:	mov	x22, x0
   412bc:	mov	x0, x19
   412c0:	bl	415d4 <ZSTD_endStream@@Base+0x33680>
   412c4:	eor	x0, x0, x22
   412c8:	cbz	x0, 41380 <ZSTD_endStream@@Base+0x3342c>
   412cc:	bl	415dc <ZSTD_endStream@@Base+0x33688>
   412d0:	mov	w8, wzr
   412d4:	mov	w23, w0
   412d8:	cbz	w8, 41364 <ZSTD_endStream@@Base+0x33410>
   412dc:	b	41388 <ZSTD_endStream@@Base+0x33434>
   412e0:	mov	x22, x19
   412e4:	sub	x8, x20, #0x3
   412e8:	cmp	x22, x8
   412ec:	b.cs	41314 <ZSTD_endStream@@Base+0x333c0>  // b.hs, b.nlast
   412f0:	mov	x0, x21
   412f4:	bl	41538 <ZSTD_endStream@@Base+0x335e4>
   412f8:	mov	w23, w0
   412fc:	mov	x0, x22
   41300:	bl	41538 <ZSTD_endStream@@Base+0x335e4>
   41304:	cmp	w23, w0
   41308:	b.ne	41314 <ZSTD_endStream@@Base+0x333c0>  // b.any
   4130c:	add	x22, x22, #0x4
   41310:	add	x21, x21, #0x4
   41314:	sub	x8, x20, #0x1
   41318:	cmp	x22, x8
   4131c:	b.cs	41344 <ZSTD_endStream@@Base+0x333f0>  // b.hs, b.nlast
   41320:	mov	x0, x21
   41324:	bl	415ec <ZSTD_endStream@@Base+0x33698>
   41328:	and	w23, w0, #0xffff
   4132c:	mov	x0, x22
   41330:	bl	415ec <ZSTD_endStream@@Base+0x33698>
   41334:	cmp	w23, w0, uxth
   41338:	b.ne	41344 <ZSTD_endStream@@Base+0x333f0>  // b.any
   4133c:	add	x22, x22, #0x2
   41340:	add	x21, x21, #0x2
   41344:	cmp	x22, x20
   41348:	b.cs	41360 <ZSTD_endStream@@Base+0x3340c>  // b.hs, b.nlast
   4134c:	mov	x9, x22
   41350:	ldrb	w8, [x21]
   41354:	ldrb	w10, [x9], #1
   41358:	cmp	w8, w10
   4135c:	csel	x22, x9, x22, eq  // eq = none
   41360:	sub	x23, x22, x19
   41364:	mov	x0, x23
   41368:	ldp	x20, x19, [sp, #64]
   4136c:	ldp	x22, x21, [sp, #48]
   41370:	ldp	x24, x23, [sp, #32]
   41374:	ldp	x26, x25, [sp, #16]
   41378:	ldp	x29, x30, [sp], #80
   4137c:	ret
   41380:	mov	w8, #0x1                   	// #1
   41384:	cbz	w8, 41364 <ZSTD_endStream@@Base+0x33410>
   41388:	add	x22, x19, #0x8
   4138c:	add	x21, x21, #0x8
   41390:	mov	w26, #0x1                   	// #1
   41394:	b	413a4 <ZSTD_endStream@@Base+0x33450>
   41398:	add	x22, x22, #0x8
   4139c:	add	x21, x21, #0x8
   413a0:	tbz	w26, #0, 41364 <ZSTD_endStream@@Base+0x33410>
   413a4:	cmp	x22, x25
   413a8:	b.cs	412e4 <ZSTD_endStream@@Base+0x33390>  // b.hs, b.nlast
   413ac:	mov	x0, x21
   413b0:	bl	415d4 <ZSTD_endStream@@Base+0x33680>
   413b4:	mov	x24, x0
   413b8:	mov	x0, x22
   413bc:	bl	415d4 <ZSTD_endStream@@Base+0x33680>
   413c0:	eor	x0, x0, x24
   413c4:	cbz	x0, 41398 <ZSTD_endStream@@Base+0x33444>
   413c8:	bl	415dc <ZSTD_endStream@@Base+0x33688>
   413cc:	add	x22, x22, w0, uxtw
   413d0:	sub	x23, x22, x19
   413d4:	tbnz	wzr, #0, 413a4 <ZSTD_endStream@@Base+0x33450>
   413d8:	b	41364 <ZSTD_endStream@@Base+0x33410>
   413dc:	stp	x29, x30, [sp, #-64]!
   413e0:	sub	x8, x3, x1
   413e4:	add	x8, x0, x8
   413e8:	cmp	x8, x2
   413ec:	stp	x20, x19, [sp, #48]
   413f0:	mov	x20, x2
   413f4:	csel	x2, x8, x2, cc  // cc = lo, ul, last
   413f8:	stp	x24, x23, [sp, #16]
   413fc:	stp	x22, x21, [sp, #32]
   41400:	mov	x29, sp
   41404:	mov	x19, x4
   41408:	mov	x23, x3
   4140c:	mov	x24, x1
   41410:	mov	x22, x0
   41414:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   41418:	add	x8, x24, x0
   4141c:	mov	x21, x0
   41420:	cmp	x8, x23
   41424:	b.ne	4143c <ZSTD_endStream@@Base+0x334e8>  // b.any
   41428:	add	x0, x22, x21
   4142c:	mov	x1, x19
   41430:	mov	x2, x20
   41434:	bl	41280 <ZSTD_endStream@@Base+0x3332c>
   41438:	add	x21, x0, x21
   4143c:	mov	x0, x21
   41440:	ldp	x20, x19, [sp, #48]
   41444:	ldp	x22, x21, [sp, #32]
   41448:	ldp	x24, x23, [sp, #16]
   4144c:	ldp	x29, x30, [sp], #64
   41450:	ret
   41454:	stp	x29, x30, [sp, #-32]!
   41458:	str	x19, [sp, #16]
   4145c:	mov	x29, sp
   41460:	mov	w19, w1
   41464:	bl	41538 <ZSTD_endStream@@Base+0x335e4>
   41468:	mov	w1, w19
   4146c:	bl	41520 <ZSTD_endStream@@Base+0x335cc>
   41470:	ldr	x19, [sp, #16]
   41474:	mov	w0, w0
   41478:	ldp	x29, x30, [sp], #32
   4147c:	ret
   41480:	stp	x29, x30, [sp, #-32]!
   41484:	str	x19, [sp, #16]
   41488:	mov	x29, sp
   4148c:	mov	w19, w1
   41490:	bl	4155c <ZSTD_endStream@@Base+0x33608>
   41494:	mov	w1, w19
   41498:	bl	41540 <ZSTD_endStream@@Base+0x335ec>
   4149c:	ldr	x19, [sp, #16]
   414a0:	ldp	x29, x30, [sp], #32
   414a4:	ret
   414a8:	stp	x29, x30, [sp, #-32]!
   414ac:	str	x19, [sp, #16]
   414b0:	mov	x29, sp
   414b4:	mov	w19, w1
   414b8:	bl	4155c <ZSTD_endStream@@Base+0x33608>
   414bc:	mov	w1, w19
   414c0:	bl	41578 <ZSTD_endStream@@Base+0x33624>
   414c4:	ldr	x19, [sp, #16]
   414c8:	ldp	x29, x30, [sp], #32
   414cc:	ret
   414d0:	stp	x29, x30, [sp, #-32]!
   414d4:	str	x19, [sp, #16]
   414d8:	mov	x29, sp
   414dc:	mov	w19, w1
   414e0:	bl	4155c <ZSTD_endStream@@Base+0x33608>
   414e4:	mov	w1, w19
   414e8:	bl	41594 <ZSTD_endStream@@Base+0x33640>
   414ec:	ldr	x19, [sp, #16]
   414f0:	ldp	x29, x30, [sp], #32
   414f4:	ret
   414f8:	stp	x29, x30, [sp, #-32]!
   414fc:	str	x19, [sp, #16]
   41500:	mov	x29, sp
   41504:	mov	w19, w1
   41508:	bl	4155c <ZSTD_endStream@@Base+0x33608>
   4150c:	mov	w1, w19
   41510:	bl	415b4 <ZSTD_endStream@@Base+0x33660>
   41514:	ldr	x19, [sp, #16]
   41518:	ldp	x29, x30, [sp], #32
   4151c:	ret
   41520:	mov	w8, #0x79b1                	// #31153
   41524:	movk	w8, #0x9e37, lsl #16
   41528:	mul	w8, w0, w8
   4152c:	neg	w9, w1
   41530:	lsr	w0, w8, w9
   41534:	ret
   41538:	ldr	w0, [x0]
   4153c:	ret
   41540:	mov	x8, #0xbb000000            	// #3137339392
   41544:	movk	x8, #0xbcdc, lsl #32
   41548:	movk	x8, #0xcf1b, lsl #48
   4154c:	mul	x8, x0, x8
   41550:	neg	w9, w1
   41554:	lsr	x0, x8, x9
   41558:	ret
   4155c:	stp	x29, x30, [sp, #-16]!
   41560:	mov	x29, sp
   41564:	bl	41570 <ZSTD_endStream@@Base+0x3361c>
   41568:	ldp	x29, x30, [sp], #16
   4156c:	ret
   41570:	ldr	x0, [x0]
   41574:	ret
   41578:	mov	x8, #0xbf9b0000            	// #3214606336
   4157c:	movk	x8, #0xbcdc, lsl #32
   41580:	movk	x8, #0xcf1b, lsl #48
   41584:	mul	x8, x0, x8
   41588:	neg	w9, w1
   4158c:	lsr	x0, x8, x9
   41590:	ret
   41594:	mov	x8, #0x6300                	// #25344
   41598:	movk	x8, #0xbfa5, lsl #16
   4159c:	movk	x8, #0xbcdc, lsl #32
   415a0:	movk	x8, #0xcf1b, lsl #48
   415a4:	mul	x8, x0, x8
   415a8:	neg	w9, w1
   415ac:	lsr	x0, x8, x9
   415b0:	ret
   415b4:	mov	x8, #0x6463                	// #25699
   415b8:	movk	x8, #0xb7a5, lsl #16
   415bc:	movk	x8, #0xbcdc, lsl #32
   415c0:	movk	x8, #0xcf1b, lsl #48
   415c4:	mul	x8, x0, x8
   415c8:	neg	w9, w1
   415cc:	lsr	x0, x8, x9
   415d0:	ret
   415d4:	ldr	x0, [x0]
   415d8:	ret
   415dc:	rbit	x8, x0
   415e0:	clz	x8, x8
   415e4:	ubfx	x0, x8, #3, #29
   415e8:	ret
   415ec:	ldrh	w0, [x0]
   415f0:	ret
   415f4:	sub	sp, sp, #0x70
   415f8:	stp	x29, x30, [sp, #32]
   415fc:	str	x25, [sp, #48]
   41600:	stp	x24, x23, [sp, #64]
   41604:	stp	x22, x21, [sp, #80]
   41608:	stp	x20, x19, [sp, #96]
   4160c:	add	x29, sp, #0x20
   41610:	mov	w19, w3
   41614:	mov	x21, x2
   41618:	mov	x22, x1
   4161c:	mov	x20, x0
   41620:	bl	41c60 <ZSTD_endStream@@Base+0x33d0c>
   41624:	ldr	w8, [x20, #52]
   41628:	str	wzr, [x20, #80]
   4162c:	cbz	w8, 41690 <ZSTD_endStream@@Base+0x3373c>
   41630:	cbz	w0, 41648 <ZSTD_endStream@@Base+0x336f4>
   41634:	ldr	x0, [x20]
   41638:	mov	w1, #0xff                  	// #255
   4163c:	mov	w2, #0x1                   	// #1
   41640:	bl	41ce4 <ZSTD_endStream@@Base+0x33d90>
   41644:	str	w0, [x20, #48]
   41648:	ldr	x0, [x20, #8]
   4164c:	mov	w1, #0x23                  	// #35
   41650:	mov	w2, wzr
   41654:	bl	41ce4 <ZSTD_endStream@@Base+0x33d90>
   41658:	ldr	x8, [x20, #16]
   4165c:	str	w0, [x20, #52]
   41660:	mov	w1, #0x34                  	// #52
   41664:	mov	w2, wzr
   41668:	mov	x0, x8
   4166c:	bl	41ce4 <ZSTD_endStream@@Base+0x33d90>
   41670:	ldr	x8, [x20, #24]
   41674:	str	w0, [x20, #56]
   41678:	mov	w1, #0x1f                  	// #31
   4167c:	mov	w2, wzr
   41680:	mov	x0, x8
   41684:	bl	41ce4 <ZSTD_endStream@@Base+0x33d90>
   41688:	str	w0, [x20, #60]
   4168c:	b	418c8 <ZSTD_endStream@@Base+0x33974>
   41690:	cmp	x21, #0x400
   41694:	b.hi	416a0 <ZSTD_endStream@@Base+0x3374c>  // b.pmore
   41698:	mov	w8, #0x1                   	// #1
   4169c:	str	w8, [x20, #80]
   416a0:	ldr	x8, [x20, #88]
   416a4:	ldr	w8, [x8, #1024]
   416a8:	cmp	w8, #0x2
   416ac:	b.ne	41828 <ZSTD_endStream@@Base+0x338d4>  // b.any
   416b0:	str	wzr, [x20, #80]
   416b4:	cbz	w0, 41704 <ZSTD_endStream@@Base+0x337b0>
   416b8:	mov	x21, xzr
   416bc:	mov	w22, #0xb                   	// #11
   416c0:	mov	w23, #0x1                   	// #1
   416c4:	str	wzr, [x20, #48]
   416c8:	ldr	x0, [x20, #88]
   416cc:	mov	w1, w21
   416d0:	bl	8c4c <ZSTD_getErrorString@@Base+0x1d60>
   416d4:	ldr	x9, [x20]
   416d8:	sub	w8, w22, w0
   416dc:	cmp	w0, #0x0
   416e0:	lsl	w8, w23, w8
   416e4:	csinc	w8, w8, wzr, ne  // ne = any
   416e8:	str	w8, [x9, x21, lsl #2]
   416ec:	ldr	w9, [x20, #48]
   416f0:	add	x21, x21, #0x1
   416f4:	cmp	x21, #0x100
   416f8:	add	w8, w9, w8
   416fc:	str	w8, [x20, #48]
   41700:	b.ne	416c8 <ZSTD_endStream@@Base+0x33774>  // b.any
   41704:	ldr	x8, [x20, #88]
   41708:	mov	x0, sp
   4170c:	add	x1, x8, #0xcb4
   41710:	bl	41c70 <ZSTD_endStream@@Base+0x33d1c>
   41714:	str	wzr, [x20, #52]
   41718:	ldr	x22, [sp, #16]
   4171c:	ldr	x23, [x20, #8]
   41720:	mov	x21, xzr
   41724:	mov	w24, #0xa                   	// #10
   41728:	mov	w25, #0x1                   	// #1
   4172c:	mov	x0, x22
   41730:	mov	w1, w21
   41734:	bl	41ccc <ZSTD_endStream@@Base+0x33d78>
   41738:	sub	w8, w24, w0
   4173c:	cmp	w0, #0x0
   41740:	lsl	w8, w25, w8
   41744:	csinc	w8, w8, wzr, ne  // ne = any
   41748:	str	w8, [x23, x21, lsl #2]
   4174c:	ldr	w9, [x20, #52]
   41750:	add	x21, x21, #0x1
   41754:	cmp	x21, #0x24
   41758:	add	w8, w9, w8
   4175c:	str	w8, [x20, #52]
   41760:	b.ne	4172c <ZSTD_endStream@@Base+0x337d8>  // b.any
   41764:	ldr	x8, [x20, #88]
   41768:	mov	x0, sp
   4176c:	add	x1, x8, #0x708
   41770:	bl	41c70 <ZSTD_endStream@@Base+0x33d1c>
   41774:	str	wzr, [x20, #56]
   41778:	ldr	x22, [sp, #16]
   4177c:	ldr	x23, [x20, #16]
   41780:	mov	x21, xzr
   41784:	mov	w24, #0xa                   	// #10
   41788:	mov	w25, #0x1                   	// #1
   4178c:	mov	x0, x22
   41790:	mov	w1, w21
   41794:	bl	41ccc <ZSTD_endStream@@Base+0x33d78>
   41798:	sub	w8, w24, w0
   4179c:	cmp	w0, #0x0
   417a0:	lsl	w8, w25, w8
   417a4:	csinc	w8, w8, wzr, ne  // ne = any
   417a8:	str	w8, [x23, x21, lsl #2]
   417ac:	ldr	w9, [x20, #56]
   417b0:	add	x21, x21, #0x1
   417b4:	cmp	x21, #0x35
   417b8:	add	w8, w9, w8
   417bc:	str	w8, [x20, #56]
   417c0:	b.ne	4178c <ZSTD_endStream@@Base+0x33838>  // b.any
   417c4:	ldr	x8, [x20, #88]
   417c8:	mov	x0, sp
   417cc:	add	x1, x8, #0x404
   417d0:	bl	41c70 <ZSTD_endStream@@Base+0x33d1c>
   417d4:	str	wzr, [x20, #60]
   417d8:	ldr	x22, [sp, #16]
   417dc:	ldr	x23, [x20, #24]
   417e0:	mov	x21, xzr
   417e4:	mov	w24, #0xa                   	// #10
   417e8:	mov	w25, #0x1                   	// #1
   417ec:	mov	x0, x22
   417f0:	mov	w1, w21
   417f4:	bl	41ccc <ZSTD_endStream@@Base+0x33d78>
   417f8:	sub	w8, w24, w0
   417fc:	cmp	w0, #0x0
   41800:	lsl	w8, w25, w8
   41804:	csinc	w8, w8, wzr, ne  // ne = any
   41808:	str	w8, [x23, x21, lsl #2]
   4180c:	ldr	w9, [x20, #60]
   41810:	add	x21, x21, #0x1
   41814:	cmp	x21, #0x20
   41818:	add	w8, w9, w8
   4181c:	str	w8, [x20, #60]
   41820:	b.ne	417ec <ZSTD_endStream@@Base+0x33898>  // b.any
   41824:	b	418c8 <ZSTD_endStream@@Base+0x33974>
   41828:	cbz	w0, 4185c <ZSTD_endStream@@Base+0x33908>
   4182c:	mov	w8, #0xff                  	// #255
   41830:	str	w8, [sp]
   41834:	ldr	x0, [x20]
   41838:	mov	x1, sp
   4183c:	mov	x2, x22
   41840:	mov	x3, x21
   41844:	bl	826c <ZSTD_getErrorString@@Base+0x1380>
   41848:	ldr	x0, [x20]
   4184c:	mov	w1, #0xff                  	// #255
   41850:	mov	w2, #0x1                   	// #1
   41854:	bl	41ce4 <ZSTD_endStream@@Base+0x33d90>
   41858:	str	w0, [x20, #48]
   4185c:	ldr	x9, [x20, #8]
   41860:	mov	x8, xzr
   41864:	mov	w10, #0x1                   	// #1
   41868:	str	w10, [x9, x8]
   4186c:	add	x8, x8, #0x4
   41870:	cmp	x8, #0x90
   41874:	b.ne	41868 <ZSTD_endStream@@Base+0x33914>  // b.any
   41878:	ldr	x9, [x20, #16]
   4187c:	mov	w10, #0x24                  	// #36
   41880:	mov	x8, xzr
   41884:	str	w10, [x20, #52]
   41888:	mov	w10, #0x1                   	// #1
   4188c:	str	w10, [x9, x8]
   41890:	add	x8, x8, #0x4
   41894:	cmp	x8, #0xd4
   41898:	b.ne	4188c <ZSTD_endStream@@Base+0x33938>  // b.any
   4189c:	ldr	x9, [x20, #24]
   418a0:	mov	w10, #0x35                  	// #53
   418a4:	mov	x8, xzr
   418a8:	str	w10, [x20, #56]
   418ac:	mov	w10, #0x1                   	// #1
   418b0:	str	w10, [x9, x8]
   418b4:	add	x8, x8, #0x4
   418b8:	cmp	x8, #0x80
   418bc:	b.ne	418b0 <ZSTD_endStream@@Base+0x3395c>  // b.any
   418c0:	mov	w8, #0x20                  	// #32
   418c4:	str	w8, [x20, #60]
   418c8:	mov	x0, x20
   418cc:	mov	w1, w19
   418d0:	bl	41bd0 <ZSTD_endStream@@Base+0x33c7c>
   418d4:	ldp	x20, x19, [sp, #96]
   418d8:	ldp	x22, x21, [sp, #80]
   418dc:	ldp	x24, x23, [sp, #64]
   418e0:	ldr	x25, [sp, #48]
   418e4:	ldp	x29, x30, [sp, #32]
   418e8:	add	sp, sp, #0x70
   418ec:	ret
   418f0:	stp	x29, x30, [sp, #-48]!
   418f4:	stp	x22, x21, [sp, #16]
   418f8:	stp	x20, x19, [sp, #32]
   418fc:	mov	x29, sp
   41900:	mov	w19, w3
   41904:	mov	x20, x2
   41908:	mov	w21, w1
   4190c:	bl	41a28 <ZSTD_endStream@@Base+0x33ad4>
   41910:	mov	w22, w0
   41914:	mov	w0, w21
   41918:	mov	x1, x20
   4191c:	mov	w2, w19
   41920:	bl	41e54 <ZSTD_endStream@@Base+0x33f00>
   41924:	add	w0, w0, w22
   41928:	ldp	x20, x19, [sp, #32]
   4192c:	ldp	x22, x21, [sp, #16]
   41930:	ldp	x29, x30, [sp], #48
   41934:	ret
   41938:	ldp	w9, w8, [x0, #8]
   4193c:	add	w0, w9, w8
   41940:	ret
   41944:	stp	x29, x30, [sp, #-32]!
   41948:	stp	x20, x19, [sp, #16]
   4194c:	ldr	w8, [x1, #80]
   41950:	mov	w19, w2
   41954:	mov	x29, sp
   41958:	cmp	w8, #0x1
   4195c:	b.ne	4196c <ZSTD_endStream@@Base+0x33a18>  // b.any
   41960:	cbz	w19, 419a4 <ZSTD_endStream@@Base+0x33a50>
   41964:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41968:	b	419b4 <ZSTD_endStream@@Base+0x33a60>
   4196c:	mov	x20, x1
   41970:	bl	41f38 <ZSTD_endStream@@Base+0x33fe4>
   41974:	ldr	x9, [x20, #8]
   41978:	mov	w8, w0
   4197c:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   41980:	lsl	x8, x8, #2
   41984:	add	x10, x10, #0xbd8
   41988:	ldr	w10, [x10, x8]
   4198c:	ldr	w11, [x20, #68]
   41990:	ldr	w0, [x9, x8]
   41994:	add	w20, w11, w10, lsl #8
   41998:	cbz	w19, 419ac <ZSTD_endStream@@Base+0x33a58>
   4199c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   419a0:	b	419b0 <ZSTD_endStream@@Base+0x33a5c>
   419a4:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   419a8:	b	419b4 <ZSTD_endStream@@Base+0x33a60>
   419ac:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   419b0:	sub	w0, w20, w0
   419b4:	ldp	x20, x19, [sp, #16]
   419b8:	ldp	x29, x30, [sp], #32
   419bc:	ret
   419c0:	cmp	w1, #0x3
   419c4:	b.cc	419d4 <ZSTD_endStream@@Base+0x33a80>  // b.lo, b.ul, b.last
   419c8:	ldr	w9, [x0], #4
   419cc:	sub	w8, w1, #0x2
   419d0:	b	41a18 <ZSTD_endStream@@Base+0x33ac4>
   419d4:	adds	w9, w2, w1
   419d8:	b.eq	419f0 <ZSTD_endStream@@Base+0x33a9c>  // b.none
   419dc:	cmp	w9, #0x3
   419e0:	b.ne	419fc <ZSTD_endStream@@Base+0x33aa8>  // b.any
   419e4:	ldr	w8, [x0]
   419e8:	sub	w8, w8, #0x1
   419ec:	b	41a00 <ZSTD_endStream@@Base+0x33aac>
   419f0:	ldr	x8, [x0], #8
   419f4:	lsr	x9, x8, #32
   419f8:	b	41a18 <ZSTD_endStream@@Base+0x33ac4>
   419fc:	ldr	w8, [x0, w9, uxtw #2]
   41a00:	cmp	w9, #0x1
   41a04:	ldr	w9, [x0]
   41a08:	mov	w10, #0x8                   	// #8
   41a0c:	mov	w11, #0x4                   	// #4
   41a10:	csel	x10, x11, x10, hi  // hi = pmore
   41a14:	add	x0, x0, x10
   41a18:	ldr	w1, [x0]
   41a1c:	mov	w0, w8
   41a20:	bfi	x0, x9, #32, #32
   41a24:	ret
   41a28:	stp	x29, x30, [sp, #-64]!
   41a2c:	str	x23, [sp, #16]
   41a30:	stp	x22, x21, [sp, #32]
   41a34:	stp	x20, x19, [sp, #48]
   41a38:	mov	x29, sp
   41a3c:	cbz	w1, 41a74 <ZSTD_endStream@@Base+0x33b20>
   41a40:	mov	x20, x0
   41a44:	mov	x0, x2
   41a48:	mov	w19, w3
   41a4c:	mov	x21, x2
   41a50:	mov	w22, w1
   41a54:	bl	41c60 <ZSTD_endStream@@Base+0x33d0c>
   41a58:	cbz	w0, 41a7c <ZSTD_endStream@@Base+0x33b28>
   41a5c:	ldr	w8, [x21, #80]
   41a60:	cmp	w8, #0x1
   41a64:	b.ne	41a98 <ZSTD_endStream@@Base+0x33b44>  // b.any
   41a68:	add	w8, w22, w22, lsl #1
   41a6c:	lsl	w21, w8, #9
   41a70:	b	41a80 <ZSTD_endStream@@Base+0x33b2c>
   41a74:	mov	w21, wzr
   41a78:	b	41a80 <ZSTD_endStream@@Base+0x33b2c>
   41a7c:	lsl	w21, w22, #11
   41a80:	mov	w0, w21
   41a84:	ldp	x20, x19, [sp, #48]
   41a88:	ldp	x22, x21, [sp, #32]
   41a8c:	ldr	x23, [sp, #16]
   41a90:	ldp	x29, x30, [sp], #64
   41a94:	ret
   41a98:	ldr	w8, [x21, #64]
   41a9c:	ldr	x23, [x21]
   41aa0:	mul	w21, w8, w22
   41aa4:	mov	w22, w22
   41aa8:	b	41ac0 <ZSTD_endStream@@Base+0x33b6c>
   41aac:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41ab0:	sub	w21, w21, w0
   41ab4:	subs	x22, x22, #0x1
   41ab8:	add	x20, x20, #0x1
   41abc:	b.eq	41a80 <ZSTD_endStream@@Base+0x33b2c>  // b.none
   41ac0:	ldrb	w8, [x20]
   41ac4:	ldr	w0, [x23, x8, lsl #2]
   41ac8:	cbz	w19, 41aac <ZSTD_endStream@@Base+0x33b58>
   41acc:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41ad0:	b	41ab0 <ZSTD_endStream@@Base+0x33b5c>
   41ad4:	stp	x29, x30, [sp, #-64]!
   41ad8:	str	x23, [sp, #16]
   41adc:	stp	x22, x21, [sp, #32]
   41ae0:	stp	x20, x19, [sp, #48]
   41ae4:	mov	x29, sp
   41ae8:	mov	w20, w4
   41aec:	mov	w21, w3
   41af0:	mov	x23, x2
   41af4:	mov	w22, w1
   41af8:	mov	x19, x0
   41afc:	bl	41c60 <ZSTD_endStream@@Base+0x33d0c>
   41b00:	cbz	w0, 41b38 <ZSTD_endStream@@Base+0x33be4>
   41b04:	cbz	w22, 41b2c <ZSTD_endStream@@Base+0x33bd8>
   41b08:	ldr	x8, [x19]
   41b0c:	mov	w9, w22
   41b10:	ldrb	w10, [x23], #1
   41b14:	subs	x9, x9, #0x1
   41b18:	lsl	x10, x10, #2
   41b1c:	ldr	w11, [x8, x10]
   41b20:	add	w11, w11, #0x2
   41b24:	str	w11, [x8, x10]
   41b28:	b.ne	41b10 <ZSTD_endStream@@Base+0x33bbc>  // b.any
   41b2c:	ldr	w8, [x19, #48]
   41b30:	add	w8, w8, w22, lsl #1
   41b34:	str	w8, [x19, #48]
   41b38:	mov	w0, w22
   41b3c:	bl	41f38 <ZSTD_endStream@@Base+0x33fe4>
   41b40:	ldr	x8, [x19, #8]
   41b44:	mov	w9, w0
   41b48:	lsl	x9, x9, #2
   41b4c:	add	w0, w21, #0x1
   41b50:	ldr	w10, [x8, x9]
   41b54:	add	w10, w10, #0x1
   41b58:	str	w10, [x8, x9]
   41b5c:	ldr	w8, [x19, #52]
   41b60:	add	w8, w8, #0x1
   41b64:	str	w8, [x19, #52]
   41b68:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   41b6c:	ldr	x8, [x19, #24]
   41b70:	mov	w9, w0
   41b74:	lsl	x9, x9, #2
   41b78:	sub	w0, w20, #0x3
   41b7c:	ldr	w10, [x8, x9]
   41b80:	add	w10, w10, #0x1
   41b84:	str	w10, [x8, x9]
   41b88:	ldr	w8, [x19, #60]
   41b8c:	add	w8, w8, #0x1
   41b90:	str	w8, [x19, #60]
   41b94:	bl	41f78 <ZSTD_endStream@@Base+0x34024>
   41b98:	ldr	x8, [x19, #16]
   41b9c:	mov	w9, w0
   41ba0:	lsl	x9, x9, #2
   41ba4:	ldr	x23, [sp, #16]
   41ba8:	ldr	w10, [x8, x9]
   41bac:	add	w10, w10, #0x1
   41bb0:	str	w10, [x8, x9]
   41bb4:	ldr	w8, [x19, #56]
   41bb8:	add	w8, w8, #0x1
   41bbc:	str	w8, [x19, #56]
   41bc0:	ldp	x20, x19, [sp, #48]
   41bc4:	ldp	x22, x21, [sp, #32]
   41bc8:	ldp	x29, x30, [sp], #64
   41bcc:	ret
   41bd0:	stp	x29, x30, [sp, #-32]!
   41bd4:	stp	x20, x19, [sp, #16]
   41bd8:	mov	x29, sp
   41bdc:	mov	w20, w1
   41be0:	mov	x19, x0
   41be4:	bl	41c60 <ZSTD_endStream@@Base+0x33d0c>
   41be8:	cbz	w0, 41c04 <ZSTD_endStream@@Base+0x33cb0>
   41bec:	ldr	w0, [x19, #48]
   41bf0:	cbz	w20, 41bfc <ZSTD_endStream@@Base+0x33ca8>
   41bf4:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41bf8:	b	41c00 <ZSTD_endStream@@Base+0x33cac>
   41bfc:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41c00:	str	w0, [x19, #64]
   41c04:	ldr	w0, [x19, #52]
   41c08:	cbz	w20, 41c14 <ZSTD_endStream@@Base+0x33cc0>
   41c0c:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41c10:	b	41c18 <ZSTD_endStream@@Base+0x33cc4>
   41c14:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41c18:	ldr	w8, [x19, #56]
   41c1c:	str	w0, [x19, #68]
   41c20:	mov	w0, w8
   41c24:	cbz	w20, 41c30 <ZSTD_endStream@@Base+0x33cdc>
   41c28:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41c2c:	b	41c34 <ZSTD_endStream@@Base+0x33ce0>
   41c30:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41c34:	ldr	w8, [x19, #60]
   41c38:	str	w0, [x19, #72]
   41c3c:	mov	w0, w8
   41c40:	cbz	w20, 41c4c <ZSTD_endStream@@Base+0x33cf8>
   41c44:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41c48:	b	41c50 <ZSTD_endStream@@Base+0x33cfc>
   41c4c:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41c50:	str	w0, [x19, #76]
   41c54:	ldp	x20, x19, [sp, #16]
   41c58:	ldp	x29, x30, [sp], #32
   41c5c:	ret
   41c60:	ldr	w8, [x0, #96]
   41c64:	cmp	w8, #0x2
   41c68:	cset	w0, ne  // ne = any
   41c6c:	ret
   41c70:	stp	x29, x30, [sp, #-32]!
   41c74:	stp	x20, x19, [sp, #16]
   41c78:	mov	x20, x0
   41c7c:	mov	x0, x1
   41c80:	mov	x29, sp
   41c84:	mov	x19, x1
   41c88:	bl	415ec <ZSTD_endStream@@Base+0x33698>
   41c8c:	and	w8, w0, #0xffff
   41c90:	mov	w9, #0x1                   	// #1
   41c94:	sub	w12, w8, #0x1
   41c98:	lsl	x11, x9, x0
   41c9c:	lsl	w9, w9, w12
   41ca0:	tst	w0, #0xffff
   41ca4:	sxtw	x9, w9
   41ca8:	add	x10, x19, #0x4
   41cac:	csinc	x9, x9, xzr, ne  // ne = any
   41cb0:	add	x9, x10, x9, lsl #2
   41cb4:	stp	x11, x10, [x20]
   41cb8:	str	x9, [x20, #16]
   41cbc:	str	w8, [x20, #24]
   41cc0:	ldp	x20, x19, [sp, #16]
   41cc4:	ldp	x29, x30, [sp], #32
   41cc8:	ret
   41ccc:	add	x8, x0, w1, uxtw #3
   41cd0:	ldr	w8, [x8, #4]
   41cd4:	mov	w9, #0xffff                	// #65535
   41cd8:	add	w8, w8, w9
   41cdc:	lsr	w0, w8, #16
   41ce0:	ret
   41ce4:	adds	w10, w1, #0x1
   41ce8:	b.cc	41cf4 <ZSTD_endStream@@Base+0x33da0>  // b.lo, b.ul, b.last
   41cec:	mov	w0, wzr
   41cf0:	ret
   41cf4:	mov	x8, x0
   41cf8:	mov	w0, wzr
   41cfc:	add	w9, w2, #0x4
   41d00:	mov	w10, w10
   41d04:	ldr	w11, [x8]
   41d08:	subs	x10, x10, #0x1
   41d0c:	lsr	w11, w11, w9
   41d10:	add	w11, w11, #0x1
   41d14:	str	w11, [x8], #4
   41d18:	add	w0, w11, w0
   41d1c:	b.ne	41d04 <ZSTD_endStream@@Base+0x33db0>  // b.any
   41d20:	ret
   41d24:	ldp	w8, w10, [x0, #28]
   41d28:	mov	w9, #0x1                   	// #1
   41d2c:	lsl	w9, w9, w2
   41d30:	sub	w12, w1, w9
   41d34:	sub	w11, w1, w8
   41d38:	cmp	w11, w9
   41d3c:	ccmp	w10, #0x0, #0x0, hi  // hi = pmore
   41d40:	csel	w0, w12, w8, eq  // eq = none
   41d44:	ret
   41d48:	stp	x29, x30, [sp, #-32]!
   41d4c:	str	x19, [sp, #16]
   41d50:	mov	x29, sp
   41d54:	mov	w19, w1
   41d58:	bl	41538 <ZSTD_endStream@@Base+0x335e4>
   41d5c:	cmp	w19, #0x3
   41d60:	ldr	x19, [sp, #16]
   41d64:	lsl	w8, w0, #8
   41d68:	csel	w0, w8, w0, eq  // eq = none
   41d6c:	ldp	x29, x30, [sp], #32
   41d70:	ret
   41d74:	stp	x29, x30, [sp, #-80]!
   41d78:	stp	x26, x25, [sp, #16]
   41d7c:	stp	x24, x23, [sp, #32]
   41d80:	stp	x22, x21, [sp, #48]
   41d84:	stp	x20, x19, [sp, #64]
   41d88:	ldr	w20, [x0, #40]
   41d8c:	ldr	x23, [x0, #8]
   41d90:	ldr	x22, [x0, #56]
   41d94:	ldr	w24, [x1]
   41d98:	mov	x19, x1
   41d9c:	mov	x0, x2
   41da0:	mov	w1, w20
   41da4:	mov	x29, sp
   41da8:	sub	x25, x2, x23
   41dac:	bl	41dfc <ZSTD_endStream@@Base+0x33ea8>
   41db0:	cmp	w24, w25
   41db4:	mov	x21, x0
   41db8:	b.cs	41ddc <ZSTD_endStream@@Base+0x33e88>  // b.hs, b.nlast
   41dbc:	and	x26, x25, #0xffffffff
   41dc0:	add	x0, x23, x24
   41dc4:	mov	w1, w20
   41dc8:	bl	41dfc <ZSTD_endStream@@Base+0x33ea8>
   41dcc:	str	w24, [x22, x0, lsl #2]
   41dd0:	add	x24, x24, #0x1
   41dd4:	cmp	x26, x24
   41dd8:	b.ne	41dc0 <ZSTD_endStream@@Base+0x33e6c>  // b.any
   41ddc:	str	w25, [x19]
   41de0:	ldr	w0, [x22, x21, lsl #2]
   41de4:	ldp	x20, x19, [sp, #64]
   41de8:	ldp	x22, x21, [sp, #48]
   41dec:	ldp	x24, x23, [sp, #32]
   41df0:	ldp	x26, x25, [sp, #16]
   41df4:	ldp	x29, x30, [sp], #80
   41df8:	ret
   41dfc:	stp	x29, x30, [sp, #-32]!
   41e00:	str	x19, [sp, #16]
   41e04:	mov	x29, sp
   41e08:	mov	w19, w1
   41e0c:	bl	41e40 <ZSTD_endStream@@Base+0x33eec>
   41e10:	mov	w1, w19
   41e14:	bl	41e28 <ZSTD_endStream@@Base+0x33ed4>
   41e18:	ldr	x19, [sp, #16]
   41e1c:	mov	w0, w0
   41e20:	ldp	x29, x30, [sp], #32
   41e24:	ret
   41e28:	mov	w8, #0xbd00                	// #48384
   41e2c:	movk	w8, #0x35a7, lsl #16
   41e30:	mul	w8, w0, w8
   41e34:	neg	w9, w1
   41e38:	lsr	w0, w8, w9
   41e3c:	ret
   41e40:	stp	x29, x30, [sp, #-16]!
   41e44:	mov	x29, sp
   41e48:	bl	41538 <ZSTD_endStream@@Base+0x335e4>
   41e4c:	ldp	x29, x30, [sp], #16
   41e50:	ret
   41e54:	stp	x29, x30, [sp, #-48]!
   41e58:	stp	x22, x21, [sp, #16]
   41e5c:	stp	x20, x19, [sp, #32]
   41e60:	ldr	w8, [x1, #80]
   41e64:	mov	w19, w2
   41e68:	mov	x29, sp
   41e6c:	cbz	w8, 41e7c <ZSTD_endStream@@Base+0x33f28>
   41e70:	cbz	w19, 41eb0 <ZSTD_endStream@@Base+0x33f5c>
   41e74:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41e78:	b	41edc <ZSTD_endStream@@Base+0x33f88>
   41e7c:	mov	x20, x1
   41e80:	bl	41f38 <ZSTD_endStream@@Base+0x33fe4>
   41e84:	ldr	x20, [x20, #8]
   41e88:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   41e8c:	add	x9, x9, #0xbd8
   41e90:	ldr	w9, [x9, w0, uxtw #2]
   41e94:	mov	w8, w0
   41e98:	ldr	w0, [x20]
   41e9c:	mov	w22, w8
   41ea0:	lsl	w21, w9, #8
   41ea4:	cbz	w19, 41eb8 <ZSTD_endStream@@Base+0x33f64>
   41ea8:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41eac:	b	41ebc <ZSTD_endStream@@Base+0x33f68>
   41eb0:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41eb4:	b	41edc <ZSTD_endStream@@Base+0x33f88>
   41eb8:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41ebc:	ldr	w8, [x20, x22, lsl #2]
   41ec0:	add	w20, w0, w21
   41ec4:	mov	w0, w8
   41ec8:	cbz	w19, 41ed4 <ZSTD_endStream@@Base+0x33f80>
   41ecc:	bl	41eec <ZSTD_endStream@@Base+0x33f98>
   41ed0:	b	41ed8 <ZSTD_endStream@@Base+0x33f84>
   41ed4:	bl	41f1c <ZSTD_endStream@@Base+0x33fc8>
   41ed8:	sub	w0, w20, w0
   41edc:	ldp	x20, x19, [sp, #32]
   41ee0:	ldp	x22, x21, [sp, #16]
   41ee4:	ldp	x29, x30, [sp], #48
   41ee8:	ret
   41eec:	stp	x29, x30, [sp, #-32]!
   41ef0:	str	x19, [sp, #16]
   41ef4:	add	w19, w0, #0x1
   41ef8:	mov	w0, w19
   41efc:	mov	x29, sp
   41f00:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   41f04:	lsl	w8, w19, #8
   41f08:	ldr	x19, [sp, #16]
   41f0c:	lsr	w8, w8, w0
   41f10:	add	w0, w8, w0, lsl #8
   41f14:	ldp	x29, x30, [sp], #32
   41f18:	ret
   41f1c:	stp	x29, x30, [sp, #-16]!
   41f20:	add	w0, w0, #0x1
   41f24:	mov	x29, sp
   41f28:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   41f2c:	lsl	w0, w0, #8
   41f30:	ldp	x29, x30, [sp], #16
   41f34:	ret
   41f38:	stp	x29, x30, [sp, #-16]!
   41f3c:	cmp	w0, #0x40
   41f40:	mov	x29, sp
   41f44:	b.cc	41f58 <ZSTD_endStream@@Base+0x34004>  // b.lo, b.ul, b.last
   41f48:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   41f4c:	add	w0, w0, #0x13
   41f50:	ldp	x29, x30, [sp], #16
   41f54:	ret
   41f58:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   41f5c:	add	x8, x8, #0xc68
   41f60:	ldrb	w0, [x8, w0, uxtw]
   41f64:	ldp	x29, x30, [sp], #16
   41f68:	ret
   41f6c:	clz	w8, w0
   41f70:	eor	w0, w8, #0x1f
   41f74:	ret
   41f78:	stp	x29, x30, [sp, #-16]!
   41f7c:	cmp	w0, #0x80
   41f80:	mov	x29, sp
   41f84:	b.cc	41f98 <ZSTD_endStream@@Base+0x34044>  // b.lo, b.ul, b.last
   41f88:	bl	41f6c <ZSTD_endStream@@Base+0x34018>
   41f8c:	add	w0, w0, #0x24
   41f90:	ldp	x29, x30, [sp], #16
   41f94:	ret
   41f98:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   41f9c:	add	x8, x8, #0xd7c
   41fa0:	ldrb	w0, [x8, w0, uxtw]
   41fa4:	ldp	x29, x30, [sp], #16
   41fa8:	ret
   41fac:	ldr	q0, [x1]
   41fb0:	str	q0, [x0]
   41fb4:	ret
   41fb8:	stp	x29, x30, [sp, #-64]!
   41fbc:	stp	x22, x21, [sp, #32]
   41fc0:	stp	x20, x19, [sp, #48]
   41fc4:	mov	x19, x2
   41fc8:	mov	x20, x1
   41fcc:	cmp	x1, x3
   41fd0:	mov	x22, x0
   41fd4:	stp	x24, x23, [sp, #16]
   41fd8:	mov	x29, sp
   41fdc:	b.hi	42044 <ZSTD_endStream@@Base+0x340f0>  // b.pmore
   41fe0:	sub	x24, x3, x20
   41fe4:	mov	x0, x22
   41fe8:	mov	x1, x20
   41fec:	mov	x21, x3
   41ff0:	add	x23, x22, x24
   41ff4:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   41ff8:	add	x0, x22, #0x10
   41ffc:	add	x1, x20, #0x10
   42000:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   42004:	cmp	x24, #0x21
   42008:	b.lt	4203c <ZSTD_endStream@@Base+0x340e8>  // b.tstop
   4200c:	add	x22, x22, #0x20
   42010:	add	x20, x20, #0x30
   42014:	sub	x1, x20, #0x10
   42018:	mov	x0, x22
   4201c:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   42020:	add	x0, x22, #0x10
   42024:	mov	x1, x20
   42028:	bl	41fac <ZSTD_endStream@@Base+0x34058>
   4202c:	add	x22, x22, #0x20
   42030:	cmp	x22, x23
   42034:	add	x20, x20, #0x20
   42038:	b.cc	42014 <ZSTD_endStream@@Base+0x340c0>  // b.lo, b.ul, b.last
   4203c:	mov	x20, x21
   42040:	mov	x22, x23
   42044:	cmp	x20, x19
   42048:	b.cs	4205c <ZSTD_endStream@@Base+0x34108>  // b.hs, b.nlast
   4204c:	ldrb	w8, [x20], #1
   42050:	cmp	x19, x20
   42054:	strb	w8, [x22], #1
   42058:	b.ne	4204c <ZSTD_endStream@@Base+0x340f8>  // b.any
   4205c:	ldp	x20, x19, [sp, #48]
   42060:	ldp	x22, x21, [sp, #32]
   42064:	ldp	x24, x23, [sp, #16]
   42068:	ldp	x29, x30, [sp], #64
   4206c:	ret
   42070:	stp	x29, x30, [sp, #-32]!
   42074:	str	x19, [sp, #16]
   42078:	mov	x29, sp
   4207c:	mov	x19, x0
   42080:	bl	41c60 <ZSTD_endStream@@Base+0x33d0c>
   42084:	cbz	w0, 42098 <ZSTD_endStream@@Base+0x34144>
   42088:	ldr	x0, [x19]
   4208c:	mov	w1, #0xff                  	// #255
   42090:	bl	420dc <ZSTD_endStream@@Base+0x34188>
   42094:	str	w0, [x19, #48]
   42098:	ldr	x0, [x19, #8]
   4209c:	mov	w1, #0x23                  	// #35
   420a0:	bl	420dc <ZSTD_endStream@@Base+0x34188>
   420a4:	ldr	x8, [x19, #16]
   420a8:	str	w0, [x19, #52]
   420ac:	mov	w1, #0x34                  	// #52
   420b0:	mov	x0, x8
   420b4:	bl	420dc <ZSTD_endStream@@Base+0x34188>
   420b8:	ldr	x8, [x19, #24]
   420bc:	str	w0, [x19, #56]
   420c0:	mov	w1, #0x1f                  	// #31
   420c4:	mov	x0, x8
   420c8:	bl	420dc <ZSTD_endStream@@Base+0x34188>
   420cc:	str	w0, [x19, #60]
   420d0:	ldr	x19, [sp, #16]
   420d4:	ldp	x29, x30, [sp], #32
   420d8:	ret
   420dc:	adds	w9, w1, #0x1
   420e0:	b.cc	420ec <ZSTD_endStream@@Base+0x34198>  // b.lo, b.ul, b.last
   420e4:	mov	w0, wzr
   420e8:	ret
   420ec:	mov	x8, x0
   420f0:	mov	w0, wzr
   420f4:	mov	w9, w9
   420f8:	ldr	w10, [x8]
   420fc:	subs	x9, x9, #0x1
   42100:	lsl	w10, w10, #4
   42104:	sub	w10, w10, #0x1
   42108:	str	w10, [x8], #4
   4210c:	add	w0, w10, w0
   42110:	b.ne	420f8 <ZSTD_endStream@@Base+0x341a4>  // b.any
   42114:	ret
   42118:	stp	x29, x30, [sp, #-16]!
   4211c:	mov	w2, w1
   42120:	mov	w1, #0x190                 	// #400
   42124:	mov	x29, sp
   42128:	bl	47f0 <ZSTD_CCtxParams_setParameter@plt>
   4212c:	ldp	x29, x30, [sp], #16
   42130:	ret
   42134:	mov	x0, xzr
   42138:	ret
   4213c:	mov	x0, xzr
   42140:	ret
   42144:	cbz	x0, 42204 <ZSTD_endStream@@Base+0x342b0>
   42148:	sub	sp, sp, #0x40
   4214c:	stp	x29, x30, [sp, #32]
   42150:	stp	x20, x19, [sp, #48]
   42154:	mov	x19, x0
   42158:	ldr	x0, [x0]
   4215c:	add	x29, sp, #0x20
   42160:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   42164:	mov	x0, x19
   42168:	bl	4220c <ZSTD_endStream@@Base+0x342b8>
   4216c:	ldr	w8, [x19, #644]
   42170:	ldr	x0, [x19, #8]
   42174:	ldr	x9, [x19, #704]
   42178:	ldr	q0, [x19, #688]
   4217c:	add	w1, w8, #0x1
   42180:	mov	x2, sp
   42184:	add	x20, x19, #0x2b0
   42188:	str	x9, [sp, #16]
   4218c:	str	q0, [sp]
   42190:	bl	422b4 <ZSTD_endStream@@Base+0x34360>
   42194:	ldr	x0, [x19, #16]
   42198:	bl	422e8 <ZSTD_endStream@@Base+0x34394>
   4219c:	ldr	x0, [x19, #24]
   421a0:	bl	42374 <ZSTD_endStream@@Base+0x34420>
   421a4:	ldr	x0, [x19, #32]
   421a8:	bl	423e8 <ZSTD_endStream@@Base+0x34494>
   421ac:	add	x0, x19, #0x110
   421b0:	bl	423fc <ZSTD_endStream@@Base+0x344a8>
   421b4:	ldr	x0, [x19, #712]
   421b8:	bl	4560 <ZSTD_freeCDict@plt>
   421bc:	ldr	x0, [x19, #248]
   421c0:	cbz	x0, 421dc <ZSTD_endStream@@Base+0x34288>
   421c4:	ldr	x8, [x20, #16]
   421c8:	ldr	q0, [x20]
   421cc:	mov	x1, sp
   421d0:	str	x8, [sp, #16]
   421d4:	str	q0, [sp]
   421d8:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   421dc:	ldr	x8, [x20, #16]
   421e0:	ldr	q0, [x20]
   421e4:	mov	x1, sp
   421e8:	mov	x0, x19
   421ec:	str	x8, [sp, #16]
   421f0:	str	q0, [sp]
   421f4:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   421f8:	ldp	x20, x19, [sp, #48]
   421fc:	ldp	x29, x30, [sp, #32]
   42200:	add	sp, sp, #0x40
   42204:	mov	x0, xzr
   42208:	ret
   4220c:	stp	x29, x30, [sp, #-64]!
   42210:	stp	x22, x21, [sp, #32]
   42214:	stp	x20, x19, [sp, #48]
   42218:	mov	x19, x0
   4221c:	mov	w20, wzr
   42220:	mov	w21, #0x128                 	// #296
   42224:	str	x23, [sp, #16]
   42228:	mov	x29, sp
   4222c:	ldp	x8, x0, [x19, #8]
   42230:	umaddl	x8, w20, w21, x8
   42234:	ldp	x1, x2, [x8, #56]
   42238:	ldp	w22, w23, [x8, #16]
   4223c:	bl	44310 <ZSTD_endStream@@Base+0x363bc>
   42240:	ldr	x8, [x19, #8]
   42244:	movi	v0.2d, #0x0
   42248:	umaddl	x8, w20, w21, x8
   4224c:	str	xzr, [x8, #288]
   42250:	stp	q0, q0, [x8, #256]
   42254:	stp	q0, q0, [x8, #224]
   42258:	stp	q0, q0, [x8, #192]
   4225c:	stp	q0, q0, [x8, #160]
   42260:	stp	q0, q0, [x8, #128]
   42264:	stp	q0, q0, [x8, #96]
   42268:	stp	q0, q0, [x8, #64]
   4226c:	stp	q0, q0, [x8, #32]
   42270:	stp	q0, q0, [x8]
   42274:	ldr	x8, [x19, #8]
   42278:	umaddl	x8, w20, w21, x8
   4227c:	stp	w22, w23, [x8, #16]
   42280:	ldr	w8, [x19, #644]
   42284:	add	w20, w20, #0x1
   42288:	cmp	w20, w8
   4228c:	b.ls	4222c <ZSTD_endStream@@Base+0x342d8>  // b.plast
   42290:	mov	w8, #0x1                   	// #1
   42294:	stp	xzr, xzr, [x19, #224]
   42298:	str	xzr, [x19, #240]
   4229c:	str	w8, [x19, #660]
   422a0:	ldp	x20, x19, [sp, #48]
   422a4:	ldp	x22, x21, [sp, #32]
   422a8:	ldr	x23, [sp, #16]
   422ac:	ldp	x29, x30, [sp], #64
   422b0:	ret
   422b4:	cbz	x0, 422e4 <ZSTD_endStream@@Base+0x34390>
   422b8:	sub	sp, sp, #0x30
   422bc:	stp	x29, x30, [sp, #32]
   422c0:	ldr	x8, [x2, #16]
   422c4:	ldr	q0, [x2]
   422c8:	mov	x1, sp
   422cc:	add	x29, sp, #0x20
   422d0:	str	x8, [sp, #16]
   422d4:	str	q0, [sp]
   422d8:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   422dc:	ldp	x29, x30, [sp, #32]
   422e0:	add	sp, sp, #0x30
   422e4:	ret
   422e8:	cbz	x0, 42370 <ZSTD_endStream@@Base+0x3441c>
   422ec:	sub	sp, sp, #0x50
   422f0:	stp	x29, x30, [sp, #32]
   422f4:	stp	x22, x21, [sp, #48]
   422f8:	stp	x20, x19, [sp, #64]
   422fc:	ldr	w8, [x0, #16]
   42300:	mov	x19, x0
   42304:	add	x29, sp, #0x20
   42308:	cbz	w8, 42344 <ZSTD_endStream@@Base+0x343f0>
   4230c:	mov	x20, xzr
   42310:	add	x21, x19, #0x18
   42314:	add	x22, x19, #0x30
   42318:	ldr	x0, [x22], #16
   4231c:	ldr	x8, [x21, #16]
   42320:	ldr	q0, [x21]
   42324:	mov	x1, sp
   42328:	str	x8, [sp, #16]
   4232c:	str	q0, [sp]
   42330:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   42334:	ldr	w8, [x19, #16]
   42338:	add	x20, x20, #0x1
   4233c:	cmp	x20, x8
   42340:	b.cc	42318 <ZSTD_endStream@@Base+0x343c4>  // b.lo, b.ul, b.last
   42344:	ldr	x8, [x19, #40]
   42348:	ldur	q0, [x19, #24]
   4234c:	mov	x1, sp
   42350:	mov	x0, x19
   42354:	str	x8, [sp, #16]
   42358:	str	q0, [sp]
   4235c:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   42360:	ldp	x20, x19, [sp, #64]
   42364:	ldp	x22, x21, [sp, #48]
   42368:	ldp	x29, x30, [sp, #32]
   4236c:	add	sp, sp, #0x50
   42370:	ret
   42374:	sub	sp, sp, #0x50
   42378:	stp	x29, x30, [sp, #32]
   4237c:	stp	x20, x19, [sp, #64]
   42380:	ldr	w8, [x0, #4]
   42384:	mov	x19, x0
   42388:	str	x21, [sp, #48]
   4238c:	add	x29, sp, #0x20
   42390:	cmp	w8, #0x1
   42394:	b.lt	423b8 <ZSTD_endStream@@Base+0x34464>  // b.tstop
   42398:	mov	x20, xzr
   4239c:	add	x21, x19, #0x28
   423a0:	ldr	x0, [x21, x20, lsl #3]
   423a4:	bl	4590 <ZSTD_freeCCtx@plt>
   423a8:	ldrsw	x8, [x19, #4]
   423ac:	add	x20, x20, #0x1
   423b0:	cmp	x20, x8
   423b4:	b.lt	423a0 <ZSTD_endStream@@Base+0x3444c>  // b.tstop
   423b8:	ldr	x8, [x19, #32]
   423bc:	ldr	q0, [x19, #16]
   423c0:	mov	x1, sp
   423c4:	mov	x0, x19
   423c8:	str	x8, [sp, #16]
   423cc:	str	q0, [sp]
   423d0:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   423d4:	ldp	x20, x19, [sp, #64]
   423d8:	ldr	x21, [sp, #48]
   423dc:	ldp	x29, x30, [sp, #32]
   423e0:	add	sp, sp, #0x50
   423e4:	ret
   423e8:	stp	x29, x30, [sp, #-16]!
   423ec:	mov	x29, sp
   423f0:	bl	422e8 <ZSTD_endStream@@Base+0x34394>
   423f4:	ldp	x29, x30, [sp], #16
   423f8:	ret
   423fc:	sub	sp, sp, #0x60
   42400:	stp	x29, x30, [sp, #64]
   42404:	ldr	x8, [x0, #144]
   42408:	ldr	q0, [x0, #128]
   4240c:	str	x19, [sp, #80]
   42410:	mov	x19, x0
   42414:	str	x8, [sp, #48]
   42418:	str	q0, [sp, #32]
   4241c:	ldr	x8, [x0, #144]
   42420:	ldr	q0, [x0, #128]
   42424:	ldr	x0, [x0, #184]
   42428:	mov	x1, sp
   4242c:	add	x29, sp, #0x40
   42430:	str	x8, [sp, #16]
   42434:	str	q0, [sp]
   42438:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   4243c:	ldr	q0, [sp, #32]
   42440:	ldr	x8, [sp, #48]
   42444:	ldr	x0, [x19, #192]
   42448:	mov	x1, sp
   4244c:	str	q0, [sp]
   42450:	str	x8, [sp, #16]
   42454:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   42458:	ldr	x19, [sp, #80]
   4245c:	ldp	x29, x30, [sp, #64]
   42460:	add	sp, sp, #0x60
   42464:	ret
   42468:	cbz	x0, 424f8 <ZSTD_endStream@@Base+0x345a4>
   4246c:	stp	x29, x30, [sp, #-48]!
   42470:	stp	x22, x21, [sp, #16]
   42474:	stp	x20, x19, [sp, #32]
   42478:	mov	x19, x0
   4247c:	ldr	x0, [x0]
   42480:	mov	x29, sp
   42484:	bl	5e54 <ZSTD_initDStream_usingDDict@plt+0x1344>
   42488:	ldr	x8, [x19, #16]
   4248c:	mov	x20, x0
   42490:	mov	x0, x8
   42494:	bl	424fc <ZSTD_endStream@@Base+0x345a8>
   42498:	ldr	x8, [x19, #24]
   4249c:	ldr	w21, [x19, #644]
   424a0:	add	x20, x20, x0
   424a4:	mov	x0, x8
   424a8:	bl	42530 <ZSTD_endStream@@Base+0x345dc>
   424ac:	ldr	x8, [x19, #32]
   424b0:	add	x22, x20, x0
   424b4:	add	w21, w21, #0x1
   424b8:	mov	x0, x8
   424bc:	bl	42584 <ZSTD_endStream@@Base+0x34630>
   424c0:	ldr	x8, [x19, #712]
   424c4:	mov	x20, x0
   424c8:	mov	x0, x8
   424cc:	bl	4800 <ZSTD_sizeof_CDict@plt>
   424d0:	ldr	x8, [x19, #256]
   424d4:	mov	w9, #0x128                 	// #296
   424d8:	umaddl	x9, w21, w9, x22
   424dc:	add	x9, x9, x20
   424e0:	ldp	x20, x19, [sp, #32]
   424e4:	ldp	x22, x21, [sp, #16]
   424e8:	add	x9, x9, x0
   424ec:	add	x8, x9, x8
   424f0:	add	x0, x8, #0x2d8
   424f4:	ldp	x29, x30, [sp], #48
   424f8:	ret
   424fc:	ldr	w9, [x0, #16]
   42500:	mov	x10, xzr
   42504:	sub	w8, w9, #0x1
   42508:	lsl	x8, x8, #4
   4250c:	add	x8, x8, #0x40
   42510:	cbz	w9, 42528 <ZSTD_endStream@@Base+0x345d4>
   42514:	add	x11, x0, #0x38
   42518:	ldr	x12, [x11], #16
   4251c:	subs	x9, x9, #0x1
   42520:	add	x10, x12, x10
   42524:	b.ne	42518 <ZSTD_endStream@@Base+0x345c4>  // b.any
   42528:	add	x0, x8, x10
   4252c:	ret
   42530:	stp	x29, x30, [sp, #-48]!
   42534:	stp	x22, x21, [sp, #16]
   42538:	stp	x20, x19, [sp, #32]
   4253c:	ldr	w20, [x0, #4]
   42540:	mov	x21, xzr
   42544:	mov	x29, sp
   42548:	sub	w8, w20, #0x1
   4254c:	lsl	x8, x8, #3
   42550:	add	x19, x8, #0x30
   42554:	cbz	w20, 42570 <ZSTD_endStream@@Base+0x3461c>
   42558:	add	x22, x0, #0x28
   4255c:	ldr	x0, [x22], #8
   42560:	bl	4740 <ZSTD_sizeof_CCtx@plt>
   42564:	subs	x20, x20, #0x1
   42568:	add	x21, x0, x21
   4256c:	b.ne	4255c <ZSTD_endStream@@Base+0x34608>  // b.any
   42570:	add	x0, x19, x21
   42574:	ldp	x20, x19, [sp, #32]
   42578:	ldp	x22, x21, [sp, #16]
   4257c:	ldp	x29, x30, [sp], #48
   42580:	ret
   42584:	stp	x29, x30, [sp, #-16]!
   42588:	mov	x29, sp
   4258c:	bl	424fc <ZSTD_endStream@@Base+0x345a8>
   42590:	ldp	x29, x30, [sp], #16
   42594:	ret
   42598:	cmp	w1, #0x2
   4259c:	b.hi	425c0 <ZSTD_endStream@@Base+0x3466c>  // b.pmore
   425a0:	stp	x29, x30, [sp, #-16]!
   425a4:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   425a8:	add	x8, x8, #0xdfc
   425ac:	ldr	w1, [x8, w1, sxtw #2]
   425b0:	mov	x29, sp
   425b4:	bl	47f0 <ZSTD_CCtxParams_setParameter@plt>
   425b8:	ldp	x29, x30, [sp], #16
   425bc:	ret
   425c0:	mov	x0, #0xffffffffffffffd8    	// #-40
   425c4:	ret
   425c8:	stp	x29, x30, [sp, #-16]!
   425cc:	add	x0, x0, #0x28
   425d0:	mov	x29, sp
   425d4:	bl	42598 <ZSTD_endStream@@Base+0x34644>
   425d8:	ldp	x29, x30, [sp], #16
   425dc:	ret
   425e0:	cmp	w1, #0x2
   425e4:	b.hi	4260c <ZSTD_endStream@@Base+0x346b8>  // b.pmore
   425e8:	stp	x29, x30, [sp, #-16]!
   425ec:	adrp	x8, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   425f0:	add	x8, x8, #0xe08
   425f4:	ldr	w1, [x8, w1, sxtw #2]
   425f8:	add	x0, x0, #0x28
   425fc:	mov	x29, sp
   42600:	bl	4660 <ZSTD_CCtxParams_getParameter@plt>
   42604:	ldp	x29, x30, [sp], #16
   42608:	ret
   4260c:	mov	x0, #0xffffffffffffffd8    	// #-40
   42610:	ret
   42614:	sub	sp, sp, #0x40
   42618:	stp	x29, x30, [sp, #32]
   4261c:	stp	x20, x19, [sp, #48]
   42620:	ldr	w8, [x1, #44]
   42624:	ldr	w20, [x0, #44]
   42628:	mov	x19, x0
   4262c:	mov	x2, xzr
   42630:	str	w8, [x0, #84]
   42634:	mov	x8, sp
   42638:	mov	x0, x1
   4263c:	mov	x1, xzr
   42640:	add	x29, sp, #0x20
   42644:	bl	b27c <ZSTD_adjustCParams@@Base+0x290>
   42648:	str	w20, [sp]
   4264c:	ldur	q0, [sp, #12]
   42650:	ldr	q1, [sp]
   42654:	stur	q0, [x19, #56]
   42658:	stur	q1, [x19, #44]
   4265c:	ldp	x20, x19, [sp, #48]
   42660:	ldp	x29, x30, [sp, #32]
   42664:	add	sp, sp, #0x40
   42668:	ret
   4266c:	sub	sp, sp, #0x80
   42670:	stp	x29, x30, [sp, #32]
   42674:	stp	x28, x27, [sp, #48]
   42678:	stp	x26, x25, [sp, #64]
   4267c:	stp	x24, x23, [sp, #80]
   42680:	stp	x22, x21, [sp, #96]
   42684:	stp	x20, x19, [sp, #112]
   42688:	ldr	x10, [x0, #672]
   4268c:	ldr	x9, [x0, #240]
   42690:	add	x29, sp, #0x20
   42694:	add	x9, x9, x10
   42698:	stp	x9, x10, [x8]
   4269c:	ldr	x9, [x0, #680]
   426a0:	stp	x9, x9, [x8, #16]
   426a4:	ldr	w10, [x0, #652]
   426a8:	stp	w10, wzr, [x8, #32]
   426ac:	ldr	w9, [x0, #200]
   426b0:	ldr	w21, [x0, #648]
   426b4:	add	w9, w9, w10
   426b8:	cmp	w21, w9
   426bc:	stur	w9, [x29, #-4]
   426c0:	b.cs	42760 <ZSTD_endStream@@Base+0x3480c>  // b.hs, b.nlast
   426c4:	ldr	w9, [x0, #644]
   426c8:	ldp	x24, x26, [x8]
   426cc:	ldp	x27, x28, [x8, #16]
   426d0:	ldr	w19, [x8, #36]
   426d4:	stp	x8, x9, [sp, #8]
   426d8:	ldr	x25, [x0, #8]
   426dc:	mov	w23, #0x128                 	// #296
   426e0:	b	42718 <ZSTD_endStream@@Base+0x347c4>
   426e4:	madd	x10, x22, x23, x25
   426e8:	ldr	x11, [x10, #96]
   426ec:	ldr	x10, [x10]
   426f0:	add	x27, x27, x9
   426f4:	ldur	w9, [x29, #-4]
   426f8:	add	w21, w21, #0x1
   426fc:	cmp	x10, x11
   42700:	add	x24, x24, x11
   42704:	add	x26, x26, x10
   42708:	cinc	w19, w19, cc  // cc = lo, ul, last
   4270c:	cmp	w9, w21
   42710:	add	x28, x28, x8
   42714:	b.eq	42750 <ZSTD_endStream@@Base+0x347fc>  // b.none
   42718:	ldr	x9, [sp, #16]
   4271c:	mov	w8, w21
   42720:	and	x22, x9, x8
   42724:	madd	x8, x22, x23, x25
   42728:	ldr	x20, [x8, #8]
   4272c:	mov	x0, x20
   42730:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   42734:	cmp	w0, #0x0
   42738:	mov	x8, xzr
   4273c:	csel	x9, x20, xzr, eq  // eq = none
   42740:	cbnz	w0, 426e4 <ZSTD_endStream@@Base+0x34790>
   42744:	madd	x8, x22, x23, x25
   42748:	ldr	x8, [x8, #280]
   4274c:	b	426e4 <ZSTD_endStream@@Base+0x34790>
   42750:	ldr	x8, [sp, #8]
   42754:	stp	x24, x26, [x8]
   42758:	stp	x27, x28, [x8, #16]
   4275c:	str	w19, [x8, #36]
   42760:	ldp	x20, x19, [sp, #112]
   42764:	ldp	x22, x21, [sp, #96]
   42768:	ldp	x24, x23, [sp, #80]
   4276c:	ldp	x26, x25, [sp, #64]
   42770:	ldp	x28, x27, [sp, #48]
   42774:	ldp	x29, x30, [sp, #32]
   42778:	add	sp, sp, #0x80
   4277c:	ret
   42780:	cmn	x0, #0x78
   42784:	cset	w0, hi  // hi = pmore
   42788:	ret
   4278c:	stp	x29, x30, [sp, #-48]!
   42790:	stp	x20, x19, [sp, #32]
   42794:	ldr	w8, [x0, #648]
   42798:	ldr	w9, [x0, #652]
   4279c:	str	x21, [sp, #16]
   427a0:	mov	x29, sp
   427a4:	cmp	w8, w9
   427a8:	b.ne	427b4 <ZSTD_endStream@@Base+0x34860>  // b.any
   427ac:	mov	x0, xzr
   427b0:	b	427f4 <ZSTD_endStream@@Base+0x348a0>
   427b4:	ldr	w9, [x0, #644]
   427b8:	ldr	x20, [x0, #8]
   427bc:	and	x21, x9, x8
   427c0:	mov	w8, #0x128                 	// #296
   427c4:	madd	x8, x21, x8, x20
   427c8:	ldr	x19, [x8, #8]
   427cc:	mov	x0, x19
   427d0:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   427d4:	cmp	w0, #0x0
   427d8:	mov	x9, xzr
   427dc:	csel	x8, x19, xzr, eq  // eq = none
   427e0:	cbnz	w0, 427f0 <ZSTD_endStream@@Base+0x3489c>
   427e4:	mov	w9, #0x128                 	// #296
   427e8:	madd	x9, x21, x9, x20
   427ec:	ldr	x9, [x9, #280]
   427f0:	sub	x0, x8, x9
   427f4:	ldp	x20, x19, [sp, #32]
   427f8:	ldr	x21, [sp, #16]
   427fc:	ldp	x29, x30, [sp], #48
   42800:	ret
   42804:	sub	sp, sp, #0x150
   42808:	stp	x29, x30, [sp, #304]
   4280c:	ldur	q0, [x0, #56]
   42810:	ldur	q1, [x0, #40]
   42814:	add	x29, sp, #0x130
   42818:	str	x28, [sp, #320]
   4281c:	stp	q1, q0, [x29, #-96]
   42820:	ldr	x8, [x0, #120]
   42824:	ldur	q0, [x0, #104]
   42828:	ldur	q1, [x0, #88]
   4282c:	ldur	q2, [x0, #72]
   42830:	stur	x8, [x29, #-16]
   42834:	stp	q1, q0, [x29, #-48]
   42838:	stur	q2, [x29, #-64]
   4283c:	ldr	w8, [x0, #180]
   42840:	ldur	q0, [x0, #164]
   42844:	ldur	q1, [x0, #148]
   42848:	ldur	q2, [x0, #132]
   4284c:	str	w8, [sp, #192]
   42850:	stp	q1, q0, [sp, #160]
   42854:	str	q2, [sp, #144]
   42858:	ldur	q0, [x6, #12]
   4285c:	ldr	q1, [x6]
   42860:	ldp	q3, q2, [sp, #160]
   42864:	stur	q0, [x29, #-80]
   42868:	stur	q1, [x29, #-92]
   4286c:	ldr	w8, [x6, #36]
   42870:	ldur	x9, [x6, #28]
   42874:	ldp	q0, q1, [x29, #-48]
   42878:	stur	q2, [sp, #124]
   4287c:	stur	q3, [sp, #108]
   42880:	ldp	q3, q2, [x29, #-96]
   42884:	stur	w8, [x29, #-56]
   42888:	stur	x9, [x29, #-64]
   4288c:	ldur	x8, [x29, #-16]
   42890:	stp	q0, q1, [sp, #48]
   42894:	ldr	q1, [sp, #144]
   42898:	ldr	w9, [sp, #192]
   4289c:	stp	q3, q2, [sp]
   428a0:	ldur	q2, [x29, #-64]
   428a4:	mov	x6, sp
   428a8:	str	x8, [sp, #80]
   428ac:	str	w7, [sp, #88]
   428b0:	str	w9, [sp, #140]
   428b4:	str	q2, [sp, #32]
   428b8:	stur	q1, [sp, #92]
   428bc:	bl	428d0 <ZSTD_endStream@@Base+0x3497c>
   428c0:	ldr	x28, [sp, #320]
   428c4:	ldp	x29, x30, [sp, #304]
   428c8:	add	sp, sp, #0x150
   428cc:	ret
   428d0:	sub	sp, sp, #0x1f0
   428d4:	stp	x29, x30, [sp, #400]
   428d8:	add	x29, sp, #0x190
   428dc:	stp	x22, x21, [sp, #464]
   428e0:	mov	x22, x0
   428e4:	sub	x8, x29, #0x98
   428e8:	mov	x0, x6
   428ec:	stp	x28, x27, [sp, #416]
   428f0:	stp	x26, x25, [sp, #432]
   428f4:	stp	x24, x23, [sp, #448]
   428f8:	stp	x20, x19, [sp, #480]
   428fc:	mov	x21, x6
   42900:	mov	x26, x5
   42904:	mov	x25, x4
   42908:	mov	x28, x3
   4290c:	mov	x24, x2
   42910:	mov	x20, x1
   42914:	bl	43224 <ZSTD_endStream@@Base+0x352d0>
   42918:	mov	x0, x21
   4291c:	bl	432c0 <ZSTD_endStream@@Base+0x3536c>
   42920:	ldr	w2, [x21, #76]
   42924:	str	x0, [sp, #80]
   42928:	mov	x0, x21
   4292c:	mov	x1, x25
   42930:	bl	4436c <ZSTD_endStream@@Base+0x36418>
   42934:	sub	w9, w0, #0x1
   42938:	mov	w10, w0
   4293c:	str	x9, [sp, #32]
   42940:	add	x9, x9, x25
   42944:	udiv	x9, x9, x10
   42948:	str	x10, [sp, #88]
   4294c:	sub	w10, w9, #0x1
   42950:	mov	w8, #0xffff                	// #65535
   42954:	and	x10, x10, #0x1ffff
   42958:	mov	w11, #0x7fff                	// #32767
   4295c:	mov	w19, w0
   42960:	add	x8, x9, x8
   42964:	cmp	x10, x11
   42968:	mov	x0, x25
   4296c:	csel	x27, x8, x9, cc  // cc = lo, ul, last
   42970:	bl	4930 <ZSTD_compressBound@plt>
   42974:	cmp	x0, x24
   42978:	mov	w23, w19
   4297c:	b.ls	4298c <ZSTD_endStream@@Base+0x34a38>  // b.plast
   42980:	mov	x0, x27
   42984:	bl	4930 <ZSTD_compressBound@plt>
   42988:	udiv	x23, x24, x0
   4298c:	and	x8, x27, #0xffffffff
   42990:	cmp	w19, #0x1
   42994:	str	x8, [x21, #80]
   42998:	b.eq	42a10 <ZSTD_endStream@@Base+0x34abc>  // b.none
   4299c:	ldr	w8, [x21, #76]
   429a0:	cmp	w8, #0x1
   429a4:	b.le	42a10 <ZSTD_endStream@@Base+0x34abc>
   429a8:	str	x26, [sp, #72]
   429ac:	ldr	x26, [x22, #16]
   429b0:	mov	x0, x27
   429b4:	bl	4930 <ZSTD_compressBound@plt>
   429b8:	mov	x1, x0
   429bc:	mov	x0, x26
   429c0:	bl	433b0 <ZSTD_endStream@@Base+0x3545c>
   429c4:	ldp	q0, q3, [x21]
   429c8:	ldr	x1, [x22, #32]
   429cc:	add	x26, x22, #0x110
   429d0:	add	x2, sp, #0x60
   429d4:	stp	q0, q3, [sp, #96]
   429d8:	ldp	q1, q0, [x21, #48]
   429dc:	ldr	q2, [x21, #32]
   429e0:	mov	x0, x26
   429e4:	mov	x3, x27
   429e8:	stp	q1, q0, [sp, #144]
   429ec:	str	q2, [sp, #128]
   429f0:	ldp	q0, q1, [x21, #112]
   429f4:	ldp	q2, q3, [x21, #80]
   429f8:	stp	q0, q1, [sp, #208]
   429fc:	stp	q2, q3, [sp, #176]
   42a00:	bl	433b8 <ZSTD_endStream@@Base+0x35464>
   42a04:	cbz	w0, 42a44 <ZSTD_endStream@@Base+0x34af0>
   42a08:	mov	x26, #0xffffffffffffffc0    	// #-64
   42a0c:	b	42d30 <ZSTD_endStream@@Base+0x34ddc>
   42a10:	ldr	x8, [x22, #24]
   42a14:	ldr	x0, [x8, #40]
   42a18:	cbz	x26, 42cbc <ZSTD_endStream@@Base+0x34d68>
   42a1c:	ldur	x6, [x29, #-120]
   42a20:	ldur	w7, [x29, #-112]
   42a24:	mov	x1, x20
   42a28:	mov	x2, x24
   42a2c:	mov	x3, x28
   42a30:	mov	x4, x25
   42a34:	mov	x5, x26
   42a38:	bl	4570 <ZSTD_compress_usingCDict_advanced@plt>
   42a3c:	mov	x26, x0
   42a40:	b	42d30 <ZSTD_endStream@@Base+0x34ddc>
   42a44:	mov	x0, x22
   42a48:	mov	w1, w19
   42a4c:	str	x26, [sp, #56]
   42a50:	bl	443c4 <ZSTD_endStream@@Base+0x36470>
   42a54:	mov	x26, x0
   42a58:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   42a5c:	cbnz	w0, 42d30 <ZSTD_endStream@@Base+0x34ddc>
   42a60:	str	x20, [sp, #64]
   42a64:	str	x24, [sp, #48]
   42a68:	cbz	w19, 42ce4 <ZSTD_endStream@@Base+0x34d90>
   42a6c:	ldr	x9, [sp, #32]
   42a70:	mov	w8, w23
   42a74:	mov	x10, x25
   42a78:	str	x8, [sp, #40]
   42a7c:	mov	w8, #0x128                 	// #296
   42a80:	mov	x20, xzr
   42a84:	mov	x25, xzr
   42a88:	str	x28, [sp, #24]
   42a8c:	mov	x28, xzr
   42a90:	mov	x24, xzr
   42a94:	mul	x9, x9, x8
   42a98:	umull	x8, w19, w8
   42a9c:	mov	x23, x10
   42aa0:	stp	x8, x9, [sp, #8]
   42aa4:	str	x10, [sp, #32]
   42aa8:	cmp	x23, x27
   42aac:	csel	x19, x23, x27, cc  // cc = lo, ul, last
   42ab0:	mov	x0, x19
   42ab4:	bl	4930 <ZSTD_compressBound@plt>
   42ab8:	ldr	x9, [sp, #40]
   42abc:	ldp	x8, x13, [sp, #64]
   42ac0:	ldr	x12, [sp, #80]
   42ac4:	ldr	x10, [x22, #8]
   42ac8:	cmp	x25, x9
   42acc:	ldr	x9, [sp, #24]
   42ad0:	add	x8, x8, x24
   42ad4:	csel	x11, x0, xzr, cc  // cc = lo, ul, last
   42ad8:	csel	x8, x8, xzr, cc  // cc = lo, ul, last
   42adc:	cmp	x20, #0x0
   42ae0:	add	x9, x9, x28
   42ae4:	csel	x12, xzr, x12, eq  // eq = none
   42ae8:	sub	x14, x9, x12
   42aec:	add	x10, x10, x20
   42af0:	stp	x14, x12, [x10, #72]
   42af4:	stp	x9, x19, [x10, #88]
   42af8:	stp	xzr, xzr, [x10]
   42afc:	ldr	x9, [sp, #32]
   42b00:	csel	x13, x13, xzr, eq  // eq = none
   42b04:	mov	x26, x0
   42b08:	adrp	x1, 44000 <ZSTD_endStream@@Base+0x360ac>
   42b0c:	stp	x13, x9, [x10, #264]
   42b10:	ldur	q0, [x29, #-24]
   42b14:	ldur	q1, [x29, #-72]
   42b18:	ldur	q2, [x29, #-40]
   42b1c:	ldur	q3, [x29, #-56]
   42b20:	stur	q0, [x10, #248]
   42b24:	stur	q1, [x10, #200]
   42b28:	stur	q2, [x10, #232]
   42b2c:	stur	q3, [x10, #216]
   42b30:	ldur	q0, [x29, #-88]
   42b34:	ldur	q1, [x29, #-136]
   42b38:	ldur	q2, [x29, #-104]
   42b3c:	ldur	q3, [x29, #-120]
   42b40:	stur	q0, [x10, #184]
   42b44:	stur	q1, [x10, #136]
   42b48:	stur	q2, [x10, #168]
   42b4c:	stur	q3, [x10, #152]
   42b50:	ldur	q0, [x29, #-152]
   42b54:	add	x1, x1, #0x464
   42b58:	stur	q0, [x10, #120]
   42b5c:	ldr	x9, [x22, #8]
   42b60:	add	x9, x9, x20
   42b64:	stp	x8, x11, [x9, #56]
   42b68:	ldr	x8, [x22, #8]
   42b6c:	ldr	x9, [x22, #24]
   42b70:	ldr	x10, [sp, #16]
   42b74:	add	x2, x8, x20
   42b78:	str	x9, [x2, #24]
   42b7c:	ldr	x8, [x22, #16]
   42b80:	cset	w9, eq  // eq = none
   42b84:	cmp	x10, x20
   42b88:	cset	w10, eq  // eq = none
   42b8c:	str	x8, [x2, #32]
   42b90:	ldr	x8, [x22, #32]
   42b94:	stp	w25, w9, [x2, #104]
   42b98:	str	w10, [x2, #112]
   42b9c:	str	x8, [x2, #40]
   42ba0:	ldr	x8, [sp, #56]
   42ba4:	str	x8, [x2, #48]
   42ba8:	ldr	x0, [x22]
   42bac:	bl	5e20 <ZSTD_initDStream_usingDDict@plt+0x1310>
   42bb0:	ldr	x8, [sp, #8]
   42bb4:	add	x20, x20, #0x128
   42bb8:	add	x28, x19, x28
   42bbc:	add	x24, x26, x24
   42bc0:	sub	x23, x23, x19
   42bc4:	cmp	x8, x20
   42bc8:	add	x25, x25, #0x1
   42bcc:	b.ne	42aa8 <ZSTD_endStream@@Base+0x34b54>  // b.any
   42bd0:	ldr	x10, [sp, #40]
   42bd4:	mov	x24, xzr
   42bd8:	mov	x27, xzr
   42bdc:	mov	x23, xzr
   42be0:	mov	w25, #0x128                 	// #296
   42be4:	b	42c18 <ZSTD_endStream@@Base+0x34cc4>
   42be8:	ldr	x8, [x22, #8]
   42bec:	mul	x9, x24, x25
   42bf0:	add	x24, x24, #0x1
   42bf4:	mov	x27, x20
   42bf8:	add	x8, x8, x9
   42bfc:	stp	xzr, xzr, [x8, #56]
   42c00:	ldr	x8, [x22, #8]
   42c04:	add	x8, x8, x9
   42c08:	ldr	x9, [sp, #88]
   42c0c:	str	xzr, [x8, #8]
   42c10:	cmp	x24, x9
   42c14:	b.eq	42cec <ZSTD_endStream@@Base+0x34d98>  // b.none
   42c18:	ldr	x28, [x22, #8]
   42c1c:	mov	x26, x10
   42c20:	madd	x9, x24, x25, x28
   42c24:	ldr	x8, [x9]
   42c28:	ldr	x9, [x9, #96]
   42c2c:	cmp	x8, x9
   42c30:	b.cc	42c2c <ZSTD_endStream@@Base+0x34cd8>  // b.lo, b.ul, b.last
   42c34:	madd	x8, x24, x25, x28
   42c38:	ldr	x19, [x8, #8]
   42c3c:	mov	x0, x19
   42c40:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   42c44:	ldr	x9, [sp, #48]
   42c48:	cmp	w0, #0x0
   42c4c:	add	x20, x19, x27
   42c50:	csel	x8, x23, x19, eq  // eq = none
   42c54:	cmp	x20, x9
   42c58:	mov	x9, #0xffffffffffffffba    	// #-70
   42c5c:	csel	x9, x9, xzr, hi  // hi = pmore
   42c60:	cmp	x8, #0x0
   42c64:	csel	x23, x9, x8, eq  // eq = none
   42c68:	mov	x10, x26
   42c6c:	cbz	x24, 42be8 <ZSTD_endStream@@Base+0x34c94>
   42c70:	cbz	x23, 42c80 <ZSTD_endStream@@Base+0x34d2c>
   42c74:	cmp	x24, x10
   42c78:	b.cc	42be8 <ZSTD_endStream@@Base+0x34c94>  // b.lo, b.ul, b.last
   42c7c:	b	42ca4 <ZSTD_endStream@@Base+0x34d50>
   42c80:	madd	x8, x24, x25, x28
   42c84:	ldr	x1, [x8, #56]
   42c88:	ldr	x8, [sp, #64]
   42c8c:	mov	x2, x19
   42c90:	add	x0, x8, x27
   42c94:	bl	4450 <memmove@plt>
   42c98:	mov	x10, x26
   42c9c:	cmp	x24, x10
   42ca0:	b.cc	42be8 <ZSTD_endStream@@Base+0x34c94>  // b.lo, b.ul, b.last
   42ca4:	ldp	x8, x0, [x22, #8]
   42ca8:	madd	x8, x24, x25, x8
   42cac:	ldp	x1, x2, [x8, #56]
   42cb0:	bl	44310 <ZSTD_endStream@@Base+0x363bc>
   42cb4:	mov	x10, x26
   42cb8:	b	42be8 <ZSTD_endStream@@Base+0x34c94>
   42cbc:	sub	x7, x29, #0x98
   42cc0:	mov	x1, x20
   42cc4:	mov	x2, x24
   42cc8:	mov	x3, x28
   42ccc:	mov	x4, x25
   42cd0:	mov	x5, xzr
   42cd4:	mov	x6, xzr
   42cd8:	bl	c6e4 <ZSTD_compress_advanced@@Base+0x158>
   42cdc:	mov	x26, x0
   42ce0:	b	42d30 <ZSTD_endStream@@Base+0x34ddc>
   42ce4:	mov	x23, xzr
   42ce8:	mov	x20, xzr
   42cec:	ldr	w8, [x21, #36]
   42cf0:	cbz	w8, 42d28 <ZSTD_endStream@@Base+0x34dd4>
   42cf4:	add	x0, x22, #0x1e0
   42cf8:	bl	6b34 <ZSTD_initDStream_usingDDict@plt+0x2024>
   42cfc:	ldr	x8, [sp, #48]
   42d00:	add	x19, x20, #0x4
   42d04:	cmp	x19, x8
   42d08:	b.ls	42d14 <ZSTD_endStream@@Base+0x34dc0>  // b.plast
   42d0c:	mov	x23, #0xffffffffffffffba    	// #-70
   42d10:	b	42d28 <ZSTD_endStream@@Base+0x34dd4>
   42d14:	ldr	x8, [sp, #64]
   42d18:	mov	x1, x0
   42d1c:	add	x0, x8, x20
   42d20:	bl	447b0 <ZSTD_endStream@@Base+0x3685c>
   42d24:	mov	x20, x19
   42d28:	cmp	x23, #0x0
   42d2c:	csel	x26, x20, x23, eq  // eq = none
   42d30:	mov	x0, x26
   42d34:	ldp	x20, x19, [sp, #480]
   42d38:	ldp	x22, x21, [sp, #464]
   42d3c:	ldp	x24, x23, [sp, #448]
   42d40:	ldp	x26, x25, [sp, #432]
   42d44:	ldp	x28, x27, [sp, #416]
   42d48:	ldp	x29, x30, [sp, #400]
   42d4c:	add	sp, sp, #0x1f0
   42d50:	ret
   42d54:	sub	sp, sp, #0x90
   42d58:	str	x23, [sp, #96]
   42d5c:	stp	x22, x21, [sp, #112]
   42d60:	mov	x21, x2
   42d64:	mov	x22, x1
   42d68:	mov	x23, x0
   42d6c:	add	x8, sp, #0x28
   42d70:	mov	w0, w5
   42d74:	mov	x1, x4
   42d78:	mov	x2, xzr
   42d7c:	stp	x29, x30, [sp, #80]
   42d80:	stp	x20, x19, [sp, #128]
   42d84:	add	x29, sp, #0x50
   42d88:	mov	x19, x4
   42d8c:	mov	x20, x3
   42d90:	bl	4a20 <ZSTD_getParams@plt>
   42d94:	ldr	w0, [sp, #64]
   42d98:	bl	42df4 <ZSTD_endStream@@Base+0x34ea0>
   42d9c:	mov	w8, #0x1                   	// #1
   42da0:	str	w8, [sp, #68]
   42da4:	ldur	q0, [sp, #40]
   42da8:	ldur	q1, [sp, #56]
   42dac:	ldr	x8, [sp, #72]
   42db0:	mov	w7, w0
   42db4:	mov	x6, sp
   42db8:	mov	x0, x23
   42dbc:	mov	x1, x22
   42dc0:	mov	x2, x21
   42dc4:	mov	x3, x20
   42dc8:	mov	x4, x19
   42dcc:	mov	x5, xzr
   42dd0:	stp	q0, q1, [sp]
   42dd4:	str	x8, [sp, #32]
   42dd8:	bl	42804 <ZSTD_endStream@@Base+0x348b0>
   42ddc:	ldp	x20, x19, [sp, #128]
   42de0:	ldp	x22, x21, [sp, #112]
   42de4:	ldr	x23, [sp, #96]
   42de8:	ldp	x29, x30, [sp, #80]
   42dec:	add	sp, sp, #0x90
   42df0:	ret
   42df4:	sub	w8, w0, #0x5
   42df8:	cmp	w8, #0x4
   42dfc:	b.hi	42e10 <ZSTD_endStream@@Base+0x34ebc>  // b.pmore
   42e00:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   42e04:	add	x9, x9, #0xe14
   42e08:	ldr	w0, [x9, w8, sxtw #2]
   42e0c:	ret
   42e10:	mov	w0, #0x6                   	// #6
   42e14:	ret
   42e18:	sub	sp, sp, #0x110
   42e1c:	stp	x29, x30, [sp, #176]
   42e20:	stp	x28, x27, [sp, #192]
   42e24:	stp	x26, x25, [sp, #208]
   42e28:	stp	x24, x23, [sp, #224]
   42e2c:	stp	x22, x21, [sp, #240]
   42e30:	stp	x20, x19, [sp, #256]
   42e34:	mov	x23, x1
   42e38:	ldr	w1, [x5, #76]
   42e3c:	ldr	w8, [x0, #116]
   42e40:	mov	x26, x6
   42e44:	mov	x19, x5
   42e48:	mov	x24, x4
   42e4c:	mov	w25, w3
   42e50:	mov	x22, x2
   42e54:	mov	x20, x0
   42e58:	cmp	w1, w8
   42e5c:	add	x29, sp, #0xb0
   42e60:	b.eq	42e78 <ZSTD_endStream@@Base+0x34f24>  // b.none
   42e64:	mov	x0, x20
   42e68:	bl	43178 <ZSTD_endStream@@Base+0x35224>
   42e6c:	mov	x21, x0
   42e70:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   42e74:	cbnz	w0, 43154 <ZSTD_endStream@@Base+0x35200>
   42e78:	ldr	x8, [x19, #80]
   42e7c:	mov	w9, #0xffffe               	// #1048574
   42e80:	sub	x8, x8, #0x1
   42e84:	cmp	x8, x9
   42e88:	b.hi	42e94 <ZSTD_endStream@@Base+0x34f40>  // b.pmore
   42e8c:	mov	w8, #0x100000              	// #1048576
   42e90:	str	x8, [x19, #80]
   42e94:	ldr	x8, [x19, #80]
   42e98:	mov	w9, #0x1                   	// #1
   42e9c:	movk	w9, #0x4000, lsl #16
   42ea0:	cmp	x8, x9
   42ea4:	b.cc	42eb0 <ZSTD_endStream@@Base+0x34f5c>  // b.lo, b.ul, b.last
   42ea8:	mov	w8, #0x40000000            	// #1073741824
   42eac:	str	x8, [x19, #80]
   42eb0:	cmp	x26, #0x100, lsl #12
   42eb4:	cset	w8, ls  // ls = plast
   42eb8:	str	w8, [x20, #640]
   42ebc:	b.hi	42ef4 <ZSTD_endStream@@Base+0x34fa0>  // b.pmore
   42ec0:	add	x8, sp, #0x20
   42ec4:	mov	x0, x19
   42ec8:	bl	43224 <ZSTD_endStream@@Base+0x352d0>
   42ecc:	ldr	x8, [x20, #24]
   42ed0:	add	x4, sp, #0x20
   42ed4:	mov	x1, x23
   42ed8:	mov	x2, x22
   42edc:	ldr	x0, [x8, #40]
   42ee0:	mov	x3, x24
   42ee4:	mov	x5, x26
   42ee8:	bl	d304 <ZSTD_resetCStream@@Base+0x64>
   42eec:	mov	x21, x0
   42ef0:	b	43154 <ZSTD_endStream@@Base+0x35200>
   42ef4:	ldr	w8, [x20, #660]
   42ef8:	add	x27, x20, #0x28
   42efc:	cbnz	w8, 42f18 <ZSTD_endStream@@Base+0x34fc4>
   42f00:	mov	x0, x20
   42f04:	bl	4326c <ZSTD_endStream@@Base+0x35318>
   42f08:	mov	x0, x20
   42f0c:	bl	4220c <ZSTD_endStream@@Base+0x342b8>
   42f10:	mov	w8, #0x1                   	// #1
   42f14:	str	w8, [x20, #660]
   42f18:	ldr	q0, [x19]
   42f1c:	str	q0, [x27]
   42f20:	ldp	q1, q0, [x19, #48]
   42f24:	ldp	q3, q2, [x19, #16]
   42f28:	stp	q1, q0, [x27, #48]
   42f2c:	stp	q3, q2, [x27, #16]
   42f30:	ldp	q1, q0, [x19, #112]
   42f34:	ldp	q3, q2, [x19, #80]
   42f38:	stp	q1, q0, [x27, #112]
   42f3c:	stp	q3, q2, [x27, #80]
   42f40:	ldr	x0, [x20, #712]
   42f44:	str	x26, [x20, #664]
   42f48:	bl	4560 <ZSTD_freeCDict@plt>
   42f4c:	cbz	x23, 42fa0 <ZSTD_endStream@@Base+0x3504c>
   42f50:	ldr	q0, [x19, #16]
   42f54:	ldur	q1, [x19, #4]
   42f58:	add	x4, sp, #0x20
   42f5c:	mov	x5, sp
   42f60:	stur	q0, [sp, #44]
   42f64:	str	q1, [sp, #32]
   42f68:	ldr	x8, [x20, #704]
   42f6c:	ldr	q0, [x20, #688]
   42f70:	mov	x0, x23
   42f74:	mov	x1, x22
   42f78:	mov	w2, wzr
   42f7c:	mov	w3, w25
   42f80:	str	x8, [sp, #16]
   42f84:	str	q0, [sp]
   42f88:	bl	47b0 <ZSTD_createCDict_advanced@plt>
   42f8c:	str	x0, [x20, #712]
   42f90:	str	x0, [x20, #720]
   42f94:	cbnz	x0, 42fa8 <ZSTD_endStream@@Base+0x35054>
   42f98:	mov	x21, #0xffffffffffffffc0    	// #-64
   42f9c:	b	43154 <ZSTD_endStream@@Base+0x35200>
   42fa0:	str	xzr, [x20, #712]
   42fa4:	str	x24, [x20, #720]
   42fa8:	mov	x0, x19
   42fac:	bl	432c0 <ZSTD_endStream@@Base+0x3536c>
   42fb0:	str	x0, [x20, #192]
   42fb4:	ldr	x8, [x19, #80]
   42fb8:	mov	x22, x0
   42fbc:	str	x8, [x20, #184]
   42fc0:	cbnz	x8, 42fd8 <ZSTD_endStream@@Base+0x35084>
   42fc4:	mov	x0, x19
   42fc8:	bl	4334c <ZSTD_endStream@@Base+0x353f8>
   42fcc:	mov	w8, #0x1                   	// #1
   42fd0:	lsl	x8, x8, x0
   42fd4:	str	x8, [x20, #184]
   42fd8:	ldr	w8, [x19, #92]
   42fdc:	cbz	w8, 43010 <ZSTD_endStream@@Base+0x350bc>
   42fe0:	ldr	x8, [x20, #184]
   42fe4:	lsr	x0, x8, #20
   42fe8:	bl	4338c <ZSTD_endStream@@Base+0x35438>
   42fec:	add	w8, w0, #0x14
   42ff0:	mov	x9, #0xffffffffffffffff    	// #-1
   42ff4:	lsl	x8, x9, x8
   42ff8:	mvn	x8, x8
   42ffc:	mov	w0, #0x20                  	// #32
   43000:	str	xzr, [x20, #616]
   43004:	str	x8, [x20, #624]
   43008:	bl	43398 <ZSTD_endStream@@Base+0x35444>
   4300c:	str	x0, [x20, #632]
   43010:	ldr	x8, [x20, #184]
   43014:	cmp	x8, x22
   43018:	b.cs	43020 <ZSTD_endStream@@Base+0x350cc>  // b.hs, b.nlast
   4301c:	str	x22, [x20, #184]
   43020:	ldr	x0, [x20, #184]
   43024:	ldr	x22, [x20, #16]
   43028:	bl	4930 <ZSTD_compressBound@plt>
   4302c:	mov	x1, x0
   43030:	mov	x0, x22
   43034:	bl	433b0 <ZSTD_endStream@@Base+0x3545c>
   43038:	ldr	w8, [x20, #136]
   4303c:	cbz	w8, 43050 <ZSTD_endStream@@Base+0x350fc>
   43040:	ldr	w8, [x20, #44]
   43044:	mov	w9, #0x1                   	// #1
   43048:	lsl	w8, w9, w8
   4304c:	b	43054 <ZSTD_endStream@@Base+0x35100>
   43050:	mov	x8, xzr
   43054:	ldp	x12, x9, [x20, #184]
   43058:	ldr	w11, [x20, #116]
   4305c:	mov	w10, #0x2                   	// #2
   43060:	cmp	x9, #0x0
   43064:	cinc	x9, x10, ne  // ne = any
   43068:	cmp	w11, #0x1
   4306c:	csinc	w10, w11, wzr, gt
   43070:	mul	x10, x12, x10
   43074:	ldr	x11, [x20, #256]
   43078:	cmp	x8, x10
   4307c:	csel	x8, x8, x10, hi  // hi = pmore
   43080:	madd	x22, x9, x12, x8
   43084:	cmp	x11, x22
   43088:	b.cs	430e8 <ZSTD_endStream@@Base+0x35194>  // b.hs, b.nlast
   4308c:	ldr	x0, [x20, #248]
   43090:	cbz	x0, 430ac <ZSTD_endStream@@Base+0x35158>
   43094:	ldr	x8, [x20, #704]
   43098:	ldr	q0, [x20, #688]
   4309c:	add	x1, sp, #0x20
   430a0:	str	x8, [sp, #48]
   430a4:	str	q0, [sp, #32]
   430a8:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   430ac:	ldr	x8, [x20, #704]
   430b0:	ldr	q0, [x20, #688]
   430b4:	add	x1, sp, #0x20
   430b8:	mov	x0, x22
   430bc:	str	x8, [sp, #48]
   430c0:	str	q0, [sp, #32]
   430c4:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   430c8:	cmp	x0, #0x0
   430cc:	mov	x9, #0xffffffffffffffc0    	// #-64
   430d0:	cset	w8, ne  // ne = any
   430d4:	csel	x10, xzr, x22, eq  // eq = none
   430d8:	csel	x21, x9, x21, eq  // eq = none
   430dc:	stp	x0, x10, [x20, #248]
   430e0:	cbnz	w8, 430f0 <ZSTD_endStream@@Base+0x3519c>
   430e4:	b	43154 <ZSTD_endStream@@Base+0x35200>
   430e8:	mov	w8, #0x1                   	// #1
   430ec:	cbz	w8, 43154 <ZSTD_endStream@@Base+0x35200>
   430f0:	add	x8, x20, #0x288
   430f4:	movi	v0.2d, #0x0
   430f8:	str	xzr, [x20, #264]
   430fc:	str	q0, [x8]
   43100:	str	q0, [x20, #672]
   43104:	stp	q0, q0, [x20, #208]
   43108:	str	xzr, [x20, #240]
   4310c:	ldp	q0, q3, [x19]
   43110:	ldr	x1, [x20, #32]
   43114:	ldr	x3, [x20, #184]
   43118:	add	x0, x20, #0x110
   4311c:	stp	q0, q3, [sp, #32]
   43120:	ldp	q1, q0, [x19, #48]
   43124:	ldr	q2, [x19, #32]
   43128:	add	x2, sp, #0x20
   4312c:	stp	q1, q0, [sp, #80]
   43130:	str	q2, [sp, #64]
   43134:	ldp	q0, q1, [x19, #112]
   43138:	ldp	q2, q3, [x19, #80]
   4313c:	stp	q0, q1, [sp, #144]
   43140:	stp	q2, q3, [sp, #112]
   43144:	bl	433b8 <ZSTD_endStream@@Base+0x35464>
   43148:	cmp	w0, #0x0
   4314c:	mov	x8, #0xffffffffffffffc0    	// #-64
   43150:	csel	x21, xzr, x8, eq  // eq = none
   43154:	mov	x0, x21
   43158:	ldp	x20, x19, [sp, #256]
   4315c:	ldp	x22, x21, [sp, #240]
   43160:	ldp	x24, x23, [sp, #224]
   43164:	ldp	x26, x25, [sp, #208]
   43168:	ldp	x28, x27, [sp, #192]
   4316c:	ldp	x29, x30, [sp, #176]
   43170:	add	sp, sp, #0x110
   43174:	ret
   43178:	stp	x29, x30, [sp, #-48]!
   4317c:	stp	x20, x19, [sp, #32]
   43180:	mov	x20, x0
   43184:	ldr	x0, [x0]
   43188:	mov	w19, w1
   4318c:	mov	w1, w1
   43190:	str	x21, [sp, #16]
   43194:	mov	x29, sp
   43198:	bl	5e18 <ZSTD_initDStream_usingDDict@plt+0x1308>
   4319c:	cbz	w0, 431a8 <ZSTD_endStream@@Base+0x35254>
   431a0:	mov	x21, #0xffffffffffffffc0    	// #-64
   431a4:	b	431c0 <ZSTD_endStream@@Base+0x3526c>
   431a8:	mov	x0, x20
   431ac:	mov	w1, w19
   431b0:	bl	443c4 <ZSTD_endStream@@Base+0x36470>
   431b4:	mov	x21, x0
   431b8:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   431bc:	cbz	w0, 431d4 <ZSTD_endStream@@Base+0x35280>
   431c0:	mov	x0, x21
   431c4:	ldp	x20, x19, [sp, #32]
   431c8:	ldr	x21, [sp, #16]
   431cc:	ldp	x29, x30, [sp], #48
   431d0:	ret
   431d4:	ldr	x0, [x20, #16]
   431d8:	mov	w1, w19
   431dc:	bl	44ba8 <ZSTD_endStream@@Base+0x36c54>
   431e0:	str	x0, [x20, #16]
   431e4:	cbz	x0, 431a0 <ZSTD_endStream@@Base+0x3524c>
   431e8:	ldr	x0, [x20, #24]
   431ec:	mov	w1, w19
   431f0:	bl	44c40 <ZSTD_endStream@@Base+0x36cec>
   431f4:	str	x0, [x20, #24]
   431f8:	cbz	x0, 431a0 <ZSTD_endStream@@Base+0x3524c>
   431fc:	ldr	x0, [x20, #32]
   43200:	mov	w1, w19
   43204:	bl	44ca4 <ZSTD_endStream@@Base+0x36d50>
   43208:	str	x0, [x20, #32]
   4320c:	cbz	x0, 431a0 <ZSTD_endStream@@Base+0x3524c>
   43210:	add	x0, x20, #0x28
   43214:	mov	w1, w19
   43218:	bl	42118 <ZSTD_endStream@@Base+0x341c4>
   4321c:	mov	x21, xzr
   43220:	b	431c0 <ZSTD_endStream@@Base+0x3526c>
   43224:	ldp	q0, q1, [x0, #48]
   43228:	ldp	q2, q3, [x0, #16]
   4322c:	stp	q0, q1, [x8, #48]
   43230:	ldp	q4, q0, [x0, #112]
   43234:	ldp	q5, q6, [x0, #80]
   43238:	stp	q4, q0, [x8, #112]
   4323c:	stp	q5, q6, [x8, #80]
   43240:	ldr	q1, [x0]
   43244:	movi	v0.2d, #0x0
   43248:	stp	q2, q3, [x8, #16]
   4324c:	str	wzr, [x8, #48]
   43250:	str	wzr, [x8, #140]
   43254:	stur	q0, [x8, #124]
   43258:	stur	q0, [x8, #108]
   4325c:	stur	q0, [x8, #92]
   43260:	str	q1, [x8]
   43264:	stur	q0, [x8, #76]
   43268:	ret
   4326c:	ldr	w8, [x0, #648]
   43270:	ldr	w9, [x0, #652]
   43274:	cmp	w8, w9
   43278:	b.cs	432b8 <ZSTD_endStream@@Base+0x35364>  // b.hs, b.nlast
   4327c:	ldr	w9, [x0, #644]
   43280:	ldr	x10, [x0, #8]
   43284:	ldr	w11, [x0, #652]
   43288:	mov	w12, #0x128                 	// #296
   4328c:	mov	w13, w8
   43290:	and	x13, x9, x13
   43294:	madd	x13, x13, x12, x10
   43298:	ldr	x14, [x13]
   4329c:	ldr	x13, [x13, #96]
   432a0:	cmp	x14, x13
   432a4:	b.cc	432bc <ZSTD_endStream@@Base+0x35368>  // b.lo, b.ul, b.last
   432a8:	add	w8, w8, #0x1
   432ac:	cmp	w8, w11
   432b0:	b.cc	4328c <ZSTD_endStream@@Base+0x35338>  // b.lo, b.ul, b.last
   432b4:	str	w8, [x0, #648]
   432b8:	ret
   432bc:	b	432bc <ZSTD_endStream@@Base+0x35368>
   432c0:	stp	x29, x30, [sp, #-48]!
   432c4:	stp	x20, x19, [sp, #32]
   432c8:	mov	x19, x0
   432cc:	ldr	w0, [x0, #88]
   432d0:	ldr	w1, [x19, #28]
   432d4:	str	x21, [sp, #16]
   432d8:	mov	x29, sp
   432dc:	bl	44dcc <ZSTD_endStream@@Base+0x36e78>
   432e0:	mov	w8, #0x9                   	// #9
   432e4:	cmp	w0, #0x2
   432e8:	sub	w20, w8, w0
   432ec:	b.ge	43300 <ZSTD_endStream@@Base+0x353ac>  // b.tcont
   432f0:	mov	w8, wzr
   432f4:	ldr	w9, [x19, #96]
   432f8:	cbnz	w9, 43310 <ZSTD_endStream@@Base+0x353bc>
   432fc:	b	4332c <ZSTD_endStream@@Base+0x353d8>
   43300:	ldr	w8, [x19, #4]
   43304:	sub	w8, w8, w20
   43308:	ldr	w9, [x19, #96]
   4330c:	cbz	w9, 4332c <ZSTD_endStream@@Base+0x353d8>
   43310:	ldr	w21, [x19, #4]
   43314:	mov	x0, x19
   43318:	bl	4334c <ZSTD_endStream@@Base+0x353f8>
   4331c:	sub	w8, w0, #0x2
   43320:	cmp	w21, w8
   43324:	csel	w8, w21, w8, cc  // cc = lo, ul, last
   43328:	sub	w8, w8, w20
   4332c:	ldp	x20, x19, [sp, #32]
   43330:	ldr	x21, [sp, #16]
   43334:	mov	w9, #0x1                   	// #1
   43338:	lsl	x9, x9, x8
   4333c:	cmp	w8, #0x0
   43340:	csel	x0, xzr, x9, eq  // eq = none
   43344:	ldp	x29, x30, [sp], #48
   43348:	ret
   4334c:	ldr	w8, [x0, #96]
   43350:	cbz	w8, 43368 <ZSTD_endStream@@Base+0x35414>
   43354:	ldr	w8, [x0, #8]
   43358:	mov	w9, #0x15                  	// #21
   4335c:	add	w8, w8, #0x4
   43360:	cmp	w8, #0x15
   43364:	b	43378 <ZSTD_endStream@@Base+0x35424>
   43368:	ldr	w8, [x0, #4]
   4336c:	mov	w9, #0x14                  	// #20
   43370:	add	w8, w8, #0x2
   43374:	cmp	w8, #0x14
   43378:	csel	w8, w8, w9, hi  // hi = pmore
   4337c:	cmp	w8, #0x1e
   43380:	mov	w9, #0x1e                  	// #30
   43384:	csel	w0, w8, w9, cc  // cc = lo, ul, last
   43388:	ret
   4338c:	clz	w8, w0
   43390:	eor	w0, w8, #0x1f
   43394:	ret
   43398:	stp	x29, x30, [sp, #-16]!
   4339c:	sub	w0, w0, #0x1
   433a0:	mov	x29, sp
   433a4:	bl	44dec <ZSTD_endStream@@Base+0x36e98>
   433a8:	ldp	x29, x30, [sp], #16
   433ac:	ret
   433b0:	str	x1, [x0, #8]
   433b4:	ret
   433b8:	sub	sp, sp, #0xa0
   433bc:	stp	x29, x30, [sp, #64]
   433c0:	str	x27, [sp, #80]
   433c4:	stp	x26, x25, [sp, #96]
   433c8:	stp	x24, x23, [sp, #112]
   433cc:	stp	x22, x21, [sp, #128]
   433d0:	stp	x20, x19, [sp, #144]
   433d4:	mov	x22, x2
   433d8:	ldr	w8, [x22, #96]!
   433dc:	mov	x19, x3
   433e0:	mov	x21, x2
   433e4:	mov	x24, x1
   433e8:	mov	x20, x0
   433ec:	add	x29, sp, #0x40
   433f0:	cbz	w8, 43410 <ZSTD_endStream@@Base+0x354bc>
   433f4:	add	x1, x21, #0x4
   433f8:	mov	x0, x22
   433fc:	bl	25ee0 <ZSTD_endStream@@Base+0x17f8c>
   43400:	ldr	w0, [x21, #108]
   43404:	bl	43398 <ZSTD_endStream@@Base+0x35444>
   43408:	str	x0, [x20, #200]
   4340c:	b	43418 <ZSTD_endStream@@Base+0x354c4>
   43410:	stp	xzr, xzr, [x22]
   43414:	str	xzr, [x22, #16]
   43418:	str	wzr, [x20, #296]
   4341c:	ldr	w8, [x21, #36]
   43420:	cbz	w8, 43430 <ZSTD_endStream@@Base+0x354dc>
   43424:	add	x0, x20, #0xd0
   43428:	mov	x1, xzr
   4342c:	bl	660c <ZSTD_initDStream_usingDDict@plt+0x1afc>
   43430:	ldr	w8, [x22]
   43434:	cbz	w8, 4357c <ZSTD_endStream@@Base+0x35628>
   43438:	ldr	x8, [x21, #136]
   4343c:	ldur	q0, [x21, #120]
   43440:	mov	w9, #0x8                   	// #8
   43444:	mov	w10, #0x1                   	// #1
   43448:	str	x8, [sp, #48]
   4344c:	str	q0, [sp, #32]
   43450:	ldp	w27, w8, [x21, #100]
   43454:	ldp	w11, w12, [x20, #108]
   43458:	ldr	q0, [x22]
   4345c:	ldr	x13, [x22, #16]
   43460:	sub	w25, w27, w8
   43464:	mov	x0, sp
   43468:	mov	x1, x19
   4346c:	lsl	x23, x9, x27
   43470:	sub	w26, w11, w12
   43474:	str	x13, [sp, #16]
   43478:	lsl	x22, x10, x25
   4347c:	str	q0, [sp]
   43480:	bl	25ff4 <ZSTD_endStream@@Base+0x180a0>
   43484:	mov	x1, x0
   43488:	mov	x0, x24
   4348c:	bl	44e2c <ZSTD_endStream@@Base+0x36ed8>
   43490:	add	x0, x20, #0x98
   43494:	bl	44b78 <ZSTD_endStream@@Base+0x36c24>
   43498:	ldur	q0, [x20, #152]
   4349c:	add	x8, x20, #0x138
   434a0:	str	q0, [x8]
   434a4:	ldur	q0, [x20, #168]
   434a8:	str	q0, [x8, #16]
   434ac:	ldr	x8, [x20, #184]
   434b0:	cbz	x8, 434c0 <ZSTD_endStream@@Base+0x3556c>
   434b4:	ldr	w8, [x20, #108]
   434b8:	cmp	w8, w27
   434bc:	b.cs	434fc <ZSTD_endStream@@Base+0x355a8>  // b.hs, b.nlast
   434c0:	ldr	q0, [sp, #32]
   434c4:	ldr	x8, [sp, #48]
   434c8:	ldr	x0, [x20, #184]
   434cc:	mov	x1, sp
   434d0:	str	q0, [sp]
   434d4:	str	x8, [sp, #16]
   434d8:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   434dc:	ldr	q0, [sp, #32]
   434e0:	ldr	x8, [sp, #48]
   434e4:	mov	x1, sp
   434e8:	mov	x0, x23
   434ec:	str	q0, [sp]
   434f0:	str	x8, [sp, #16]
   434f4:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   434f8:	str	x0, [x20, #184]
   434fc:	ldr	x0, [x20, #192]
   43500:	cmp	w26, w25
   43504:	b.cc	43518 <ZSTD_endStream@@Base+0x355c4>  // b.lo, b.ul, b.last
   43508:	cbz	x0, 43518 <ZSTD_endStream@@Base+0x355c4>
   4350c:	ldr	x0, [x20, #184]
   43510:	cbnz	x0, 43558 <ZSTD_endStream@@Base+0x35604>
   43514:	b	435c4 <ZSTD_endStream@@Base+0x35670>
   43518:	ldr	q0, [sp, #32]
   4351c:	ldr	x8, [sp, #48]
   43520:	mov	x1, sp
   43524:	str	q0, [sp]
   43528:	str	x8, [sp, #16]
   4352c:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   43530:	ldr	q0, [sp, #32]
   43534:	ldr	x8, [sp, #48]
   43538:	mov	x1, sp
   4353c:	mov	x0, x22
   43540:	str	q0, [sp]
   43544:	str	x8, [sp, #16]
   43548:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   4354c:	str	x0, [x20, #192]
   43550:	ldr	x0, [x20, #184]
   43554:	cbz	x0, 435c4 <ZSTD_endStream@@Base+0x35670>
   43558:	ldr	x8, [x20, #192]
   4355c:	cbz	x8, 435c4 <ZSTD_endStream@@Base+0x35670>
   43560:	mov	w1, wzr
   43564:	mov	x2, x23
   43568:	bl	46a0 <memset@plt>
   4356c:	ldr	x0, [x20, #192]
   43570:	mov	w1, wzr
   43574:	mov	x2, x22
   43578:	bl	46a0 <memset@plt>
   4357c:	ldp	q0, q1, [x21, #80]
   43580:	ldp	q2, q3, [x21, #112]
   43584:	mov	w0, wzr
   43588:	and	x8, x19, #0xffffffff
   4358c:	stur	q0, [x20, #88]
   43590:	ldr	q0, [x21]
   43594:	stur	q0, [x20, #8]
   43598:	ldp	q0, q4, [x21, #16]
   4359c:	ldp	q5, q6, [x21, #48]
   435a0:	stur	q3, [x20, #136]
   435a4:	stur	q2, [x20, #120]
   435a8:	stur	q1, [x20, #104]
   435ac:	stur	q6, [x20, #72]
   435b0:	stur	q5, [x20, #56]
   435b4:	stur	q4, [x20, #40]
   435b8:	stur	q0, [x20, #24]
   435bc:	str	x8, [x20, #88]
   435c0:	b	435c8 <ZSTD_endStream@@Base+0x35674>
   435c4:	mov	w0, #0x1                   	// #1
   435c8:	ldp	x20, x19, [sp, #144]
   435cc:	ldp	x22, x21, [sp, #128]
   435d0:	ldp	x24, x23, [sp, #112]
   435d4:	ldp	x26, x25, [sp, #96]
   435d8:	ldr	x27, [sp, #80]
   435dc:	ldp	x29, x30, [sp, #64]
   435e0:	add	sp, sp, #0xa0
   435e4:	ret
   435e8:	sub	sp, sp, #0x140
   435ec:	stp	x29, x30, [sp, #288]
   435f0:	ldur	q0, [x0, #40]
   435f4:	mov	x6, x4
   435f8:	mov	x5, sp
   435fc:	mov	x4, xzr
   43600:	str	q0, [sp, #144]
   43604:	ldur	q0, [x0, #104]
   43608:	ldur	q1, [x0, #88]
   4360c:	ldur	q2, [x0, #72]
   43610:	ldur	q3, [x0, #56]
   43614:	str	x28, [sp, #304]
   43618:	stp	q1, q0, [sp, #192]
   4361c:	add	x29, sp, #0x120
   43620:	stp	q3, q2, [sp, #160]
   43624:	ldur	q0, [x0, #120]
   43628:	ldur	q1, [x0, #168]
   4362c:	ldur	q2, [x0, #152]
   43630:	ldur	q3, [x0, #136]
   43634:	stp	q2, q1, [sp, #256]
   43638:	stp	q0, q3, [sp, #224]
   4363c:	ldur	q0, [x3, #12]
   43640:	ldr	q2, [x3]
   43644:	ldp	q4, q1, [sp, #192]
   43648:	str	q0, [sp, #160]
   4364c:	ldp	q3, q0, [sp, #240]
   43650:	stur	q2, [sp, #148]
   43654:	ldur	x8, [x3, #28]
   43658:	ldr	w9, [x3, #36]
   4365c:	ldr	q2, [sp, #272]
   43660:	stp	q3, q0, [sp, #96]
   43664:	ldr	q0, [sp, #224]
   43668:	str	w9, [sp, #184]
   4366c:	str	x8, [sp, #176]
   43670:	str	q2, [sp, #128]
   43674:	stp	q1, q0, [sp, #64]
   43678:	ldp	q0, q2, [sp, #160]
   4367c:	ldr	q1, [sp, #144]
   43680:	mov	w3, wzr
   43684:	stp	q2, q4, [sp, #32]
   43688:	stp	q1, q0, [sp]
   4368c:	bl	42e18 <ZSTD_endStream@@Base+0x34ec4>
   43690:	ldr	x28, [sp, #304]
   43694:	ldp	x29, x30, [sp, #288]
   43698:	add	sp, sp, #0x140
   4369c:	ret
   436a0:	sub	sp, sp, #0x160
   436a4:	stp	x29, x30, [sp, #288]
   436a8:	stp	x28, x23, [sp, #304]
   436ac:	stp	x22, x21, [sp, #320]
   436b0:	stp	x20, x19, [sp, #336]
   436b4:	ldur	q0, [x0, #56]
   436b8:	ldur	q1, [x0, #40]
   436bc:	add	x29, sp, #0x120
   436c0:	stp	q1, q0, [x29, #-32]
   436c4:	ldr	w8, [x0, #180]
   436c8:	ldur	q0, [x0, #164]
   436cc:	ldur	q1, [x0, #132]
   436d0:	ldur	q2, [x0, #148]
   436d4:	str	w8, [sp, #240]
   436d8:	str	q1, [sp, #192]
   436dc:	stp	q2, q0, [sp, #208]
   436e0:	ldur	q0, [x0, #116]
   436e4:	ldur	q1, [x0, #100]
   436e8:	ldur	q2, [x0, #84]
   436ec:	stp	q1, q0, [sp, #160]
   436f0:	str	q2, [sp, #144]
   436f4:	cbz	x1, 4378c <ZSTD_endStream@@Base+0x35838>
   436f8:	mov	x21, x0
   436fc:	mov	x8, sp
   43700:	mov	x0, x1
   43704:	mov	x19, x4
   43708:	mov	x22, x3
   4370c:	mov	x23, x2
   43710:	mov	x20, x1
   43714:	bl	cfd4 <ZSTD_initStaticCDict@@Base+0x120>
   43718:	ldur	q0, [sp, #12]
   4371c:	ldr	q1, [sp]
   43720:	ldr	q3, [sp, #224]
   43724:	ldr	w8, [sp, #240]
   43728:	stur	q0, [x29, #-16]
   4372c:	ldp	q2, q0, [sp, #192]
   43730:	stur	q1, [x29, #-28]
   43734:	stur	q3, [sp, #124]
   43738:	mov	x5, sp
   4373c:	stur	q0, [sp, #108]
   43740:	ldr	q0, [sp, #144]
   43744:	stur	q2, [sp, #92]
   43748:	ldp	q2, q1, [sp, #160]
   4374c:	mov	x0, x21
   43750:	stur	q0, [sp, #44]
   43754:	ldp	q3, q0, [x29, #-32]
   43758:	mov	x1, xzr
   4375c:	mov	x2, xzr
   43760:	mov	w3, wzr
   43764:	mov	x4, x20
   43768:	mov	x6, x19
   4376c:	stur	q2, [sp, #60]
   43770:	stp	q3, q0, [sp]
   43774:	str	x23, [sp, #32]
   43778:	str	w22, [sp, #40]
   4377c:	str	w8, [sp, #140]
   43780:	stur	q1, [sp, #76]
   43784:	bl	42e18 <ZSTD_endStream@@Base+0x34ec4>
   43788:	b	43790 <ZSTD_endStream@@Base+0x3583c>
   4378c:	mov	x0, #0xffffffffffffffe0    	// #-32
   43790:	ldp	x20, x19, [sp, #336]
   43794:	ldp	x22, x21, [sp, #320]
   43798:	ldp	x28, x23, [sp, #304]
   4379c:	ldp	x29, x30, [sp, #288]
   437a0:	add	sp, sp, #0x160
   437a4:	ret
   437a8:	sub	sp, sp, #0xa0
   437ac:	stp	x29, x30, [sp, #144]
   437b0:	ldur	q0, [x0, #40]
   437b4:	cmp	x1, #0x0
   437b8:	csinv	x6, x1, xzr, ne  // ne = any
   437bc:	mov	x5, sp
   437c0:	str	q0, [sp]
   437c4:	ldur	q0, [x0, #104]
   437c8:	ldur	q1, [x0, #88]
   437cc:	ldur	q2, [x0, #72]
   437d0:	ldur	q3, [x0, #56]
   437d4:	mov	x1, xzr
   437d8:	stp	q1, q0, [sp, #48]
   437dc:	mov	x2, xzr
   437e0:	stp	q3, q2, [sp, #16]
   437e4:	ldur	q0, [x0, #168]
   437e8:	ldur	q1, [x0, #152]
   437ec:	ldur	q2, [x0, #136]
   437f0:	ldur	q3, [x0, #120]
   437f4:	mov	w3, wzr
   437f8:	mov	x4, xzr
   437fc:	add	x29, sp, #0x90
   43800:	stp	q1, q0, [sp, #112]
   43804:	stp	q3, q2, [sp, #80]
   43808:	bl	42e18 <ZSTD_endStream@@Base+0x34ec4>
   4380c:	ldp	x29, x30, [sp, #144]
   43810:	add	sp, sp, #0xa0
   43814:	ret
   43818:	sub	sp, sp, #0x180
   4381c:	stp	x29, x30, [sp, #336]
   43820:	add	x29, sp, #0x150
   43824:	mov	w9, w1
   43828:	stp	x20, x19, [sp, #368]
   4382c:	mov	x19, x0
   43830:	sub	x8, x29, #0x28
   43834:	mov	x1, #0xffffffffffffffff    	// #-1
   43838:	mov	w0, w9
   4383c:	mov	x2, xzr
   43840:	str	x28, [sp, #352]
   43844:	add	x20, sp, #0x90
   43848:	bl	4a20 <ZSTD_getParams@plt>
   4384c:	ldur	q0, [x19, #40]
   43850:	ldur	q1, [x20, #152]
   43854:	ldur	q2, [x20, #164]
   43858:	ldur	w8, [x29, #-4]
   4385c:	str	q0, [sp, #144]
   43860:	ldur	q0, [x19, #104]
   43864:	ldur	q3, [x19, #88]
   43868:	ldur	q4, [x19, #72]
   4386c:	ldur	q5, [x19, #56]
   43870:	ldur	x9, [x20, #180]
   43874:	stp	q3, q0, [sp, #192]
   43878:	mov	x5, sp
   4387c:	stp	q5, q4, [sp, #160]
   43880:	ldur	q0, [x19, #168]
   43884:	ldur	q3, [x19, #152]
   43888:	ldur	q4, [x19, #136]
   4388c:	ldur	q5, [x19, #120]
   43890:	mov	x6, #0xffffffffffffffff    	// #-1
   43894:	stp	q3, q0, [sp, #256]
   43898:	mov	x0, x19
   4389c:	stp	q5, q4, [sp, #224]
   438a0:	stur	q1, [x20, #4]
   438a4:	ldp	q0, q1, [sp, #240]
   438a8:	str	q2, [sp, #160]
   438ac:	str	w8, [sp, #184]
   438b0:	str	x9, [sp, #176]
   438b4:	ldr	q2, [sp, #272]
   438b8:	ldp	q3, q4, [sp, #160]
   438bc:	ldp	q6, q5, [sp, #208]
   438c0:	stp	q0, q1, [sp, #96]
   438c4:	ldr	q0, [sp, #192]
   438c8:	ldr	q1, [sp, #144]
   438cc:	mov	x1, xzr
   438d0:	mov	x2, xzr
   438d4:	mov	w3, wzr
   438d8:	mov	x4, xzr
   438dc:	str	q2, [sp, #128]
   438e0:	stp	q4, q0, [sp, #32]
   438e4:	stp	q6, q5, [sp, #64]
   438e8:	stp	q1, q3, [sp]
   438ec:	bl	42e18 <ZSTD_endStream@@Base+0x34ec4>
   438f0:	ldp	x20, x19, [sp, #368]
   438f4:	ldr	x28, [sp, #352]
   438f8:	ldp	x29, x30, [sp, #336]
   438fc:	add	sp, sp, #0x180
   43900:	ret
   43904:	ldr	x8, [x0, #184]
   43908:	ldr	x9, [x0, #240]
   4390c:	subs	x9, x8, x9
   43910:	csel	x0, x8, x9, eq  // eq = none
   43914:	ret
   43918:	sub	sp, sp, #0xd0
   4391c:	stp	x29, x30, [sp, #144]
   43920:	stp	x24, x23, [sp, #160]
   43924:	stp	x22, x21, [sp, #176]
   43928:	stp	x20, x19, [sp, #192]
   4392c:	ldr	w8, [x0, #640]
   43930:	mov	w22, w3
   43934:	mov	x19, x2
   43938:	mov	x21, x0
   4393c:	mov	x20, x1
   43940:	add	x29, sp, #0x90
   43944:	cbz	w8, 43968 <ZSTD_endStream@@Base+0x35a14>
   43948:	ldr	x8, [x21, #24]
   4394c:	mov	x1, x20
   43950:	mov	x2, x19
   43954:	mov	w3, w22
   43958:	ldr	x0, [x8, #40]
   4395c:	bl	4650 <ZSTD_compressStream2@plt>
   43960:	mov	x23, x0
   43964:	b	43ab4 <ZSTD_endStream@@Base+0x35b60>
   43968:	cbnz	w22, 4397c <ZSTD_endStream@@Base+0x35a28>
   4396c:	ldr	w8, [x21, #656]
   43970:	cbz	w8, 4397c <ZSTD_endStream@@Base+0x35a28>
   43974:	mov	x23, #0xffffffffffffffc4    	// #-60
   43978:	b	43ab4 <ZSTD_endStream@@Base+0x35b60>
   4397c:	ldr	w8, [x21, #132]
   43980:	cbnz	w8, 43994 <ZSTD_endStream@@Base+0x35a40>
   43984:	ldr	w8, [x21, #652]
   43988:	cbnz	w8, 43994 <ZSTD_endStream@@Base+0x35a40>
   4398c:	ldr	x8, [x21, #240]
   43990:	cbz	x8, 43ae4 <ZSTD_endStream@@Base+0x35b90>
   43994:	ldr	w8, [x21, #200]
   43998:	cbnz	w8, 43a44 <ZSTD_endStream@@Base+0x35af0>
   4399c:	ldp	x8, x9, [x19, #8]
   439a0:	cmp	x8, x9
   439a4:	b.ls	43a44 <ZSTD_endStream@@Base+0x35af0>  // b.plast
   439a8:	ldr	x8, [x21, #224]
   439ac:	cbnz	x8, 439b8 <ZSTD_endStream@@Base+0x35a64>
   439b0:	mov	x0, x21
   439b4:	bl	43b9c <ZSTD_endStream@@Base+0x35c48>
   439b8:	ldr	x24, [x21, #224]
   439bc:	cbz	x24, 43a28 <ZSTD_endStream@@Base+0x35ad4>
   439c0:	ldr	x8, [x19, #16]
   439c4:	ldr	q0, [x19]
   439c8:	mov	x1, sp
   439cc:	mov	x0, x21
   439d0:	str	x8, [sp, #16]
   439d4:	str	q0, [sp]
   439d8:	bl	43c6c <ZSTD_endStream@@Base+0x35d18>
   439dc:	ldr	x8, [x21, #240]
   439e0:	ldr	x9, [x19]
   439e4:	ldr	x10, [x19, #16]
   439e8:	mov	x23, x0
   439ec:	cmp	w1, #0x0
   439f0:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   439f4:	add	x0, x24, x8
   439f8:	add	x1, x9, x10
   439fc:	mov	x2, x23
   43a00:	csinc	w22, w22, wzr, ne  // ne = any
   43a04:	bl	4420 <memcpy@plt>
   43a08:	ldr	x8, [x19, #16]
   43a0c:	cmp	x23, #0x0
   43a10:	cset	w24, ne  // ne = any
   43a14:	add	x8, x8, x23
   43a18:	str	x8, [x19, #16]
   43a1c:	ldr	x8, [x21, #240]
   43a20:	add	x8, x8, x23
   43a24:	str	x8, [x21, #240]
   43a28:	ldp	x9, x8, [x19, #8]
   43a2c:	cmp	x8, x9
   43a30:	ccmp	w22, #0x2, #0x0, cc  // cc = lo, ul, last
   43a34:	csinc	w22, w22, wzr, ne  // ne = any
   43a38:	ldr	w8, [x21, #200]
   43a3c:	cbnz	w8, 43a68 <ZSTD_endStream@@Base+0x35b14>
   43a40:	b	43a50 <ZSTD_endStream@@Base+0x35afc>
   43a44:	mov	w24, wzr
   43a48:	ldr	w8, [x21, #200]
   43a4c:	cbnz	w8, 43a68 <ZSTD_endStream@@Base+0x35b14>
   43a50:	ldr	x8, [x21, #240]
   43a54:	ldr	x9, [x21, #184]
   43a58:	cmp	x8, x9
   43a5c:	b.cs	43a68 <ZSTD_endStream@@Base+0x35b14>  // b.hs, b.nlast
   43a60:	cbz	w22, 43ad0 <ZSTD_endStream@@Base+0x35b7c>
   43a64:	cbz	x8, 43ad0 <ZSTD_endStream@@Base+0x35b7c>
   43a68:	ldr	x1, [x21, #240]
   43a6c:	mov	x0, x21
   43a70:	mov	w2, w22
   43a74:	bl	43d7c <ZSTD_endStream@@Base+0x35e28>
   43a78:	mov	x0, xzr
   43a7c:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   43a80:	mov	x23, xzr
   43a84:	cbnz	w0, 43ab4 <ZSTD_endStream@@Base+0x35b60>
   43a88:	cmp	w24, #0x0
   43a8c:	cset	w2, eq  // eq = none
   43a90:	mov	x0, x21
   43a94:	mov	x1, x20
   43a98:	mov	w3, w22
   43a9c:	bl	43f70 <ZSTD_endStream@@Base+0x3601c>
   43aa0:	ldp	x9, x8, [x19, #8]
   43aa4:	cmp	x0, #0x1
   43aa8:	csinc	x10, x0, xzr, hi  // hi = pmore
   43aac:	cmp	x8, x9
   43ab0:	csel	x23, x10, x0, cc  // cc = lo, ul, last
   43ab4:	mov	x0, x23
   43ab8:	ldp	x20, x19, [sp, #192]
   43abc:	ldp	x22, x21, [sp, #176]
   43ac0:	ldp	x24, x23, [sp, #160]
   43ac4:	ldp	x29, x30, [sp, #144]
   43ac8:	add	sp, sp, #0xd0
   43acc:	ret
   43ad0:	cmp	w22, #0x2
   43ad4:	b.ne	43a88 <ZSTD_endStream@@Base+0x35b34>  // b.any
   43ad8:	ldr	w8, [x21, #656]
   43adc:	cbnz	w8, 43a88 <ZSTD_endStream@@Base+0x35b34>
   43ae0:	b	43a68 <ZSTD_endStream@@Base+0x35b14>
   43ae4:	cmp	w22, #0x2
   43ae8:	b.ne	43994 <ZSTD_endStream@@Base+0x35a40>  // b.any
   43aec:	ldr	w8, [x21, #200]
   43af0:	cbnz	w8, 43994 <ZSTD_endStream@@Base+0x35a40>
   43af4:	ldp	x10, x11, [x19, #8]
   43af8:	ldp	x8, x9, [x20, #8]
   43afc:	sub	x0, x10, x11
   43b00:	sub	x23, x8, x9
   43b04:	bl	4930 <ZSTD_compressBound@plt>
   43b08:	cmp	x23, x0
   43b0c:	b.cc	43994 <ZSTD_endStream@@Base+0x35a40>  // b.lo, b.ul, b.last
   43b10:	add	x8, x21, #0x28
   43b14:	ldp	q0, q2, [x8]
   43b18:	ldp	x11, x9, [x20, #8]
   43b1c:	ldr	x10, [x20]
   43b20:	ldp	x14, x12, [x19, #8]
   43b24:	ldr	x13, [x19]
   43b28:	ldr	x5, [x21, #720]
   43b2c:	stp	q0, q2, [sp]
   43b30:	ldp	q0, q1, [x8, #48]
   43b34:	ldr	q3, [x8, #32]
   43b38:	add	x1, x10, x9
   43b3c:	sub	x2, x11, x9
   43b40:	stp	q0, q1, [sp, #48]
   43b44:	str	q3, [sp, #32]
   43b48:	ldp	q0, q1, [x8, #112]
   43b4c:	ldp	q2, q3, [x8, #80]
   43b50:	add	x3, x13, x12
   43b54:	sub	x4, x14, x12
   43b58:	mov	x6, sp
   43b5c:	mov	x0, x21
   43b60:	stp	q0, q1, [sp, #112]
   43b64:	stp	q2, q3, [sp, #80]
   43b68:	bl	428d0 <ZSTD_endStream@@Base+0x3497c>
   43b6c:	mov	x23, x0
   43b70:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   43b74:	cbnz	w0, 43ab4 <ZSTD_endStream@@Base+0x35b60>
   43b78:	ldr	x8, [x19, #8]
   43b7c:	mov	x9, #0x100000001           	// #4294967297
   43b80:	str	x8, [x19, #16]
   43b84:	ldr	x8, [x20, #16]
   43b88:	add	x8, x8, x23
   43b8c:	str	x8, [x20, #16]
   43b90:	str	x9, [x21, #656]
   43b94:	mov	x23, xzr
   43b98:	b	43ab4 <ZSTD_endStream@@Base+0x35b60>
   43b9c:	stp	x29, x30, [sp, #-64]!
   43ba0:	stp	x24, x23, [sp, #16]
   43ba4:	stp	x22, x21, [sp, #32]
   43ba8:	stp	x20, x19, [sp, #48]
   43bac:	mov	x29, sp
   43bb0:	mov	x19, x0
   43bb4:	bl	44e48 <ZSTD_endStream@@Base+0x36ef4>
   43bb8:	ldp	x8, x9, [x19, #256]
   43bbc:	ldr	x20, [x19, #184]
   43bc0:	mov	x21, x0
   43bc4:	mov	x22, x1
   43bc8:	sub	x8, x8, x9
   43bcc:	cmp	x8, x20
   43bd0:	b.cs	43c1c <ZSTD_endStream@@Base+0x35cc8>  // b.hs, b.nlast
   43bd4:	ldr	x23, [x19, #248]
   43bd8:	ldr	x24, [x19, #216]
   43bdc:	mov	x2, x21
   43be0:	mov	x3, x22
   43be4:	mov	x0, x23
   43be8:	mov	x1, x24
   43bec:	bl	44ed0 <ZSTD_endStream@@Base+0x36f7c>
   43bf0:	cbnz	w0, 43c58 <ZSTD_endStream@@Base+0x35d04>
   43bf4:	mov	x0, x19
   43bf8:	mov	x1, x23
   43bfc:	mov	x2, x24
   43c00:	bl	44f0c <ZSTD_endStream@@Base+0x36fb8>
   43c04:	ldr	x1, [x19, #208]
   43c08:	mov	x0, x23
   43c0c:	mov	x2, x24
   43c10:	bl	4450 <memmove@plt>
   43c14:	str	x23, [x19, #208]
   43c18:	str	x24, [x19, #264]
   43c1c:	ldr	x8, [x19, #248]
   43c20:	ldr	x9, [x19, #264]
   43c24:	mov	x1, x20
   43c28:	mov	x2, x21
   43c2c:	mov	x3, x22
   43c30:	add	x23, x8, x9
   43c34:	mov	x0, x23
   43c38:	bl	44ed0 <ZSTD_endStream@@Base+0x36f7c>
   43c3c:	cbnz	w0, 43c58 <ZSTD_endStream@@Base+0x35d04>
   43c40:	mov	x0, x19
   43c44:	mov	x1, x23
   43c48:	mov	x2, x20
   43c4c:	bl	44f0c <ZSTD_endStream@@Base+0x36fb8>
   43c50:	stp	x23, x20, [x19, #224]
   43c54:	str	xzr, [x19, #240]
   43c58:	ldp	x20, x19, [sp, #48]
   43c5c:	ldp	x22, x21, [sp, #32]
   43c60:	ldp	x24, x23, [sp, #16]
   43c64:	ldp	x29, x30, [sp], #64
   43c68:	ret
   43c6c:	stp	x29, x30, [sp, #-80]!
   43c70:	str	x25, [sp, #16]
   43c74:	stp	x24, x23, [sp, #32]
   43c78:	stp	x22, x21, [sp, #48]
   43c7c:	stp	x20, x19, [sp, #64]
   43c80:	mov	x8, x1
   43c84:	ldp	x10, x9, [x1, #8]
   43c88:	ldr	x11, [x0, #184]
   43c8c:	ldr	x1, [x0, #240]
   43c90:	ldr	w12, [x0, #132]
   43c94:	sub	x10, x10, x9
   43c98:	mov	w25, wzr
   43c9c:	sub	x11, x11, x1
   43ca0:	cmp	x10, x11
   43ca4:	csel	x19, x10, x11, cc  // cc = lo, ul, last
   43ca8:	mov	x29, sp
   43cac:	cbz	w12, 43d5c <ZSTD_endStream@@Base+0x35e08>
   43cb0:	add	x10, x19, x1
   43cb4:	cmp	x10, #0x20
   43cb8:	b.cc	43d5c <ZSTD_endStream@@Base+0x35e08>  // b.lo, b.ul, b.last
   43cbc:	ldr	x8, [x8]
   43cc0:	ldr	x20, [x0, #632]
   43cc4:	ldr	x24, [x0, #624]
   43cc8:	cmp	x1, #0x20
   43ccc:	add	x21, x8, x9
   43cd0:	b.cc	43cf4 <ZSTD_endStream@@Base+0x35da0>  // b.lo, b.ul, b.last
   43cd4:	ldr	x8, [x0, #224]
   43cd8:	add	x8, x8, x1
   43cdc:	sub	x22, x8, #0x20
   43ce0:	mov	w1, #0x20                  	// #32
   43ce4:	mov	x0, x22
   43ce8:	bl	44fd8 <ZSTD_endStream@@Base+0x37084>
   43cec:	mov	x23, xzr
   43cf0:	b	43d18 <ZSTD_endStream@@Base+0x35dc4>
   43cf4:	ldr	x0, [x0, #224]
   43cf8:	mov	w8, #0x20                  	// #32
   43cfc:	sub	x23, x8, x1
   43d00:	add	x8, x1, x0
   43d04:	sub	x22, x8, #0x20
   43d08:	bl	44fd8 <ZSTD_endStream@@Base+0x37084>
   43d0c:	mov	x1, x21
   43d10:	mov	x2, x23
   43d14:	bl	44ff8 <ZSTD_endStream@@Base+0x370a4>
   43d18:	mov	w25, wzr
   43d1c:	cmp	x23, x19
   43d20:	b.cs	43d5c <ZSTD_endStream@@Base+0x35e08>  // b.hs, b.nlast
   43d24:	add	x8, x21, x23
   43d28:	ldrb	w2, [x8], #-32
   43d2c:	add	x9, x22, x23
   43d30:	cmp	x23, #0x20
   43d34:	mov	x3, x20
   43d38:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   43d3c:	ldrb	w1, [x8]
   43d40:	bl	45024 <ZSTD_endStream@@Base+0x370d0>
   43d44:	and	x8, x0, x24
   43d48:	cmp	x8, x24
   43d4c:	csinc	x19, x19, x23, ne  // ne = any
   43d50:	add	x23, x23, #0x1
   43d54:	csinc	w25, w25, wzr, ne  // ne = any
   43d58:	b.ne	43d1c <ZSTD_endStream@@Base+0x35dc8>  // b.any
   43d5c:	mov	w1, w25
   43d60:	mov	x0, x19
   43d64:	ldp	x20, x19, [sp, #64]
   43d68:	ldp	x22, x21, [sp, #48]
   43d6c:	ldp	x24, x23, [sp, #32]
   43d70:	ldr	x25, [sp, #16]
   43d74:	ldp	x29, x30, [sp], #80
   43d78:	ret
   43d7c:	stp	x29, x30, [sp, #-32]!
   43d80:	ldr	w8, [x0, #644]
   43d84:	ldr	w11, [x0, #648]
   43d88:	ldr	w10, [x0, #652]
   43d8c:	cmp	w2, #0x2
   43d90:	cset	w9, eq  // eq = none
   43d94:	add	w11, w11, w8
   43d98:	cmp	w10, w11
   43d9c:	str	x19, [sp, #16]
   43da0:	mov	x29, sp
   43da4:	b.hi	43f28 <ZSTD_endStream@@Base+0x35fd4>  // b.pmore
   43da8:	ldr	w11, [x0, #200]
   43dac:	mov	x19, x0
   43db0:	and	w8, w8, w10
   43db4:	cbz	w11, 43de8 <ZSTD_endStream@@Base+0x35e94>
   43db8:	ldp	x0, x9, [x19]
   43dbc:	mov	w10, #0x128                 	// #296
   43dc0:	adrp	x1, 44000 <ZSTD_endStream@@Base+0x360ac>
   43dc4:	add	x1, x1, #0x464
   43dc8:	umaddl	x2, w8, w10, x9
   43dcc:	bl	5e38 <ZSTD_initDStream_usingDDict@plt+0x1328>
   43dd0:	cbz	w0, 43f20 <ZSTD_endStream@@Base+0x35fcc>
   43dd4:	ldr	w9, [x19, #652]
   43dd8:	mov	w8, wzr
   43ddc:	add	w9, w9, #0x1
   43de0:	str	w9, [x19, #652]
   43de4:	b	43f24 <ZSTD_endStream@@Base+0x35fd0>
   43de8:	mov	x11, x19
   43dec:	ldr	x10, [x11, #224]!
   43df0:	mov	w13, #0x128                 	// #296
   43df4:	mul	x13, x8, x13
   43df8:	ldur	x12, [x11, #-216]
   43dfc:	add	x12, x12, x13
   43e00:	stp	x10, x1, [x12, #88]
   43e04:	ldur	q0, [x11, #-16]
   43e08:	stur	q0, [x12, #72]
   43e0c:	ldur	x12, [x11, #-216]
   43e10:	add	x12, x12, x13
   43e14:	stp	xzr, xzr, [x12]
   43e18:	ldur	q0, [x11, #-184]
   43e1c:	stur	q0, [x12, #120]
   43e20:	ldur	q0, [x11, #-120]
   43e24:	ldur	q1, [x11, #-136]
   43e28:	ldur	q2, [x11, #-152]
   43e2c:	ldur	q3, [x11, #-168]
   43e30:	stur	q0, [x12, #184]
   43e34:	stur	q1, [x12, #168]
   43e38:	stur	q2, [x12, #152]
   43e3c:	stur	q3, [x12, #136]
   43e40:	ldur	q0, [x11, #-56]
   43e44:	ldur	q1, [x11, #-72]
   43e48:	ldur	q2, [x11, #-88]
   43e4c:	ldur	q3, [x11, #-104]
   43e50:	stur	q0, [x12, #248]
   43e54:	stur	q1, [x12, #232]
   43e58:	stur	q2, [x12, #216]
   43e5c:	stur	q3, [x12, #200]
   43e60:	ldr	w13, [x11, #428]
   43e64:	mov	x12, xzr
   43e68:	cbnz	w13, 43e70 <ZSTD_endStream@@Base+0x35f1c>
   43e6c:	ldr	x12, [x19, #720]
   43e70:	ldr	x13, [x19, #8]
   43e74:	mov	w14, #0x128                 	// #296
   43e78:	mul	x14, x8, x14
   43e7c:	add	x15, x19, #0x110
   43e80:	add	x13, x13, x14
   43e84:	str	x12, [x13, #264]
   43e88:	ldr	x12, [x19, #664]
   43e8c:	stp	xzr, xzr, [x13, #56]
   43e90:	str	x12, [x13, #272]
   43e94:	ldr	x12, [x19, #8]
   43e98:	ldr	x13, [x19, #24]
   43e9c:	add	x14, x12, x14
   43ea0:	str	x13, [x14, #24]
   43ea4:	ldr	x13, [x19, #16]
   43ea8:	str	x13, [x14, #32]
   43eac:	ldr	x13, [x19, #32]
   43eb0:	stp	x13, x15, [x14, #40]
   43eb4:	ldr	w13, [x19, #652]
   43eb8:	cmp	w13, #0x0
   43ebc:	cset	w15, eq  // eq = none
   43ec0:	str	w13, [x14, #104]
   43ec4:	stp	w15, w9, [x14, #108]
   43ec8:	ldr	w15, [x19, #76]
   43ecc:	cset	w16, ne  // ne = any
   43ed0:	str	xzr, [x14, #280]
   43ed4:	cmp	w15, #0x0
   43ed8:	cset	w15, ne  // ne = any
   43edc:	cmp	w2, #0x2
   43ee0:	cset	w17, eq  // eq = none
   43ee4:	and	w15, w17, w15
   43ee8:	and	w15, w16, w15
   43eec:	str	w15, [x14, #288]
   43ef0:	ldr	x14, [x19, #264]
   43ef4:	add	x14, x14, x1
   43ef8:	str	x14, [x19, #264]
   43efc:	stp	xzr, xzr, [x11]
   43f00:	str	xzr, [x11, #16]
   43f04:	b.ne	43f34 <ZSTD_endStream@@Base+0x35fe0>  // b.any
   43f08:	sub	x10, x11, #0x10
   43f0c:	stp	xzr, xzr, [x10]
   43f10:	str	w9, [x19, #656]
   43f14:	cbnz	w13, 43f4c <ZSTD_endStream@@Base+0x35ff8>
   43f18:	str	wzr, [x19, #76]
   43f1c:	b	43f4c <ZSTD_endStream@@Base+0x35ff8>
   43f20:	mov	w8, #0x1                   	// #1
   43f24:	str	w8, [x19, #200]
   43f28:	ldr	x19, [sp, #16]
   43f2c:	ldp	x29, x30, [sp], #32
   43f30:	ret
   43f34:	ldr	x9, [x19, #192]
   43f38:	add	x10, x10, x1
   43f3c:	cmp	x9, x1
   43f40:	csel	x9, x1, x9, hi  // hi = pmore
   43f44:	sub	x10, x10, x9
   43f48:	stp	x10, x9, [x19, #208]
   43f4c:	cbnz	x1, 43db8 <ZSTD_endStream@@Base+0x35e64>
   43f50:	cbz	w13, 43db8 <ZSTD_endStream@@Base+0x35e64>
   43f54:	mov	w9, #0x128                 	// #296
   43f58:	madd	x0, x8, x9, x12
   43f5c:	bl	45050 <ZSTD_endStream@@Base+0x370fc>
   43f60:	ldr	w8, [x19, #652]
   43f64:	add	w8, w8, #0x1
   43f68:	str	w8, [x19, #652]
   43f6c:	b	43f28 <ZSTD_endStream@@Base+0x35fd4>
   43f70:	stp	x29, x30, [sp, #-96]!
   43f74:	stp	x26, x25, [sp, #32]
   43f78:	stp	x24, x23, [sp, #48]
   43f7c:	stp	x22, x21, [sp, #64]
   43f80:	stp	x20, x19, [sp, #80]
   43f84:	ldr	w8, [x0, #648]
   43f88:	ldr	w9, [x0, #644]
   43f8c:	mov	w19, w3
   43f90:	mov	x22, x1
   43f94:	mov	x20, x0
   43f98:	and	w24, w9, w8
   43f9c:	str	x27, [sp, #16]
   43fa0:	mov	x29, sp
   43fa4:	cbz	w2, 43fe4 <ZSTD_endStream@@Base+0x36090>
   43fa8:	ldr	w9, [x20, #652]
   43fac:	cmp	w8, w9
   43fb0:	b.cs	43fe4 <ZSTD_endStream@@Base+0x36090>  // b.hs, b.nlast
   43fb4:	ldr	x8, [x20, #8]
   43fb8:	mov	w9, #0x128                 	// #296
   43fbc:	madd	x8, x24, x9, x8
   43fc0:	ldr	x9, [x8, #280]
   43fc4:	ldr	x10, [x8, #8]
   43fc8:	cmp	x9, x10
   43fcc:	b.ne	43fe4 <ZSTD_endStream@@Base+0x36090>  // b.any
   43fd0:	add	x9, x8, #0x60
   43fd4:	ldr	x10, [x8]
   43fd8:	ldr	x11, [x9]
   43fdc:	cmp	x10, x11
   43fe0:	b.ne	43fd4 <ZSTD_endStream@@Base+0x36080>  // b.any
   43fe4:	ldr	x23, [x20, #8]
   43fe8:	mov	w8, #0x128                 	// #296
   43fec:	madd	x8, x24, x8, x23
   43ff0:	ldp	x25, x21, [x8]
   43ff4:	ldr	x26, [x8, #96]
   43ff8:	mov	x0, x21
   43ffc:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   44000:	cbz	w0, 44020 <ZSTD_endStream@@Base+0x360cc>
   44004:	mov	x0, x20
   44008:	bl	4326c <ZSTD_endStream@@Base+0x35318>
   4400c:	mov	x0, x20
   44010:	bl	4220c <ZSTD_endStream@@Base+0x342b8>
   44014:	mov	w8, wzr
   44018:	cbnz	w8, 4417c <ZSTD_endStream@@Base+0x36228>
   4401c:	b	441a0 <ZSTD_endStream@@Base+0x3624c>
   44020:	cmp	x25, x26
   44024:	b.ne	44080 <ZSTD_endStream@@Base+0x3612c>  // b.any
   44028:	mov	w8, #0x128                 	// #296
   4402c:	madd	x8, x24, x8, x23
   44030:	ldr	w8, [x8, #288]
   44034:	cbz	w8, 44080 <ZSTD_endStream@@Base+0x3612c>
   44038:	add	x0, x20, #0x1e0
   4403c:	bl	6b34 <ZSTD_initDStream_usingDDict@plt+0x2024>
   44040:	ldr	x8, [x20, #8]
   44044:	mov	w9, #0x128                 	// #296
   44048:	mul	x23, x24, x9
   4404c:	mov	x1, x0
   44050:	add	x8, x8, x23
   44054:	ldr	x9, [x8, #56]
   44058:	ldr	x8, [x8, #8]
   4405c:	add	x0, x9, x8
   44060:	bl	447b0 <ZSTD_endStream@@Base+0x3685c>
   44064:	ldr	x8, [x20, #8]
   44068:	add	x21, x21, #0x4
   4406c:	add	x8, x8, x23
   44070:	ldr	x9, [x8, #8]
   44074:	str	wzr, [x8, #288]
   44078:	add	x9, x9, #0x4
   4407c:	str	x9, [x8, #8]
   44080:	cbz	x21, 44148 <ZSTD_endStream@@Base+0x361f4>
   44084:	ldr	x8, [x20, #8]
   44088:	mov	w9, #0x128                 	// #296
   4408c:	mul	x27, x24, x9
   44090:	ldp	x11, x10, [x22, #8]
   44094:	add	x8, x8, x27
   44098:	ldr	x12, [x22]
   4409c:	ldr	x9, [x8, #280]
   440a0:	ldr	x8, [x8, #56]
   440a4:	sub	x11, x11, x10
   440a8:	add	x0, x12, x10
   440ac:	sub	x10, x21, x9
   440b0:	cmp	x10, x11
   440b4:	csel	x23, x10, x11, cc  // cc = lo, ul, last
   440b8:	add	x1, x8, x9
   440bc:	mov	x2, x23
   440c0:	bl	4420 <memcpy@plt>
   440c4:	ldr	x8, [x22, #16]
   440c8:	cmp	x25, x26
   440cc:	add	x8, x8, x23
   440d0:	str	x8, [x22, #16]
   440d4:	ldr	x8, [x20, #8]
   440d8:	add	x10, x8, x27
   440dc:	ldr	x9, [x10, #280]
   440e0:	add	x9, x9, x23
   440e4:	str	x9, [x10, #280]
   440e8:	b.ne	44148 <ZSTD_endStream@@Base+0x361f4>  // b.any
   440ec:	cmp	x9, x21
   440f0:	b.ne	44148 <ZSTD_endStream@@Base+0x361f4>  // b.any
   440f4:	mov	w9, #0x128                 	// #296
   440f8:	mul	x22, x24, x9
   440fc:	add	x8, x8, x22
   44100:	ldr	x0, [x20, #16]
   44104:	ldp	x1, x2, [x8, #56]
   44108:	bl	44310 <ZSTD_endStream@@Base+0x363bc>
   4410c:	ldr	x8, [x20, #8]
   44110:	add	x8, x8, x22
   44114:	stp	xzr, xzr, [x8, #56]
   44118:	ldr	x8, [x20, #8]
   4411c:	add	x8, x8, x22
   44120:	str	xzr, [x8, #8]
   44124:	ldr	x8, [x20, #672]
   44128:	ldr	x9, [x20, #680]
   4412c:	ldr	w10, [x20, #648]
   44130:	add	x8, x8, x26
   44134:	str	x8, [x20, #672]
   44138:	add	x8, x9, x21
   4413c:	add	w9, w10, #0x1
   44140:	str	x8, [x20, #680]
   44144:	str	w9, [x20, #648]
   44148:	ldr	x8, [x20, #8]
   4414c:	mov	w9, #0x128                 	// #296
   44150:	madd	x8, x24, x9, x8
   44154:	ldr	x8, [x8, #280]
   44158:	subs	x21, x21, x8
   4415c:	b.ls	4416c <ZSTD_endStream@@Base+0x36218>  // b.plast
   44160:	mov	w8, wzr
   44164:	cbnz	w8, 4417c <ZSTD_endStream@@Base+0x36228>
   44168:	b	441a0 <ZSTD_endStream@@Base+0x3624c>
   4416c:	cmp	x26, x25
   44170:	cset	w8, ls  // ls = plast
   44174:	mov	w21, #0x1                   	// #1
   44178:	cbz	w8, 441a0 <ZSTD_endStream@@Base+0x3624c>
   4417c:	ldr	w8, [x20, #648]
   44180:	ldr	w9, [x20, #652]
   44184:	cmp	w8, w9
   44188:	b.cc	4419c <ZSTD_endStream@@Base+0x36248>  // b.lo, b.ul, b.last
   4418c:	ldr	w8, [x20, #200]
   44190:	cbnz	w8, 4419c <ZSTD_endStream@@Base+0x36248>
   44194:	ldr	x8, [x20, #240]
   44198:	cbz	x8, 441c0 <ZSTD_endStream@@Base+0x3626c>
   4419c:	mov	w21, #0x1                   	// #1
   441a0:	mov	x0, x21
   441a4:	ldp	x20, x19, [sp, #80]
   441a8:	ldp	x22, x21, [sp, #64]
   441ac:	ldp	x24, x23, [sp, #48]
   441b0:	ldp	x26, x25, [sp, #32]
   441b4:	ldr	x27, [sp, #16]
   441b8:	ldp	x29, x30, [sp], #96
   441bc:	ret
   441c0:	ldr	w8, [x20, #656]
   441c4:	cmp	w19, #0x2
   441c8:	str	w8, [x20, #660]
   441cc:	b.ne	441dc <ZSTD_endStream@@Base+0x36288>  // b.any
   441d0:	cmp	w8, #0x0
   441d4:	cset	w21, eq  // eq = none
   441d8:	b	441a0 <ZSTD_endStream@@Base+0x3624c>
   441dc:	mov	x21, xzr
   441e0:	b	441a0 <ZSTD_endStream@@Base+0x3624c>
   441e4:	stp	x29, x30, [sp, #-32]!
   441e8:	mov	w3, wzr
   441ec:	stp	x20, x19, [sp, #16]
   441f0:	mov	x29, sp
   441f4:	mov	x19, x0
   441f8:	bl	43918 <ZSTD_endStream@@Base+0x359c4>
   441fc:	mov	x20, x0
   44200:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   44204:	cbnz	w0, 44214 <ZSTD_endStream@@Base+0x362c0>
   44208:	ldr	x8, [x19, #184]
   4420c:	ldr	x9, [x19, #240]
   44210:	sub	x20, x8, x9
   44214:	mov	x0, x20
   44218:	ldp	x20, x19, [sp, #16]
   4421c:	ldp	x29, x30, [sp], #32
   44220:	ret
   44224:	stp	x29, x30, [sp, #-16]!
   44228:	ldr	w8, [x0, #640]
   4422c:	mov	x29, sp
   44230:	cbz	w8, 44248 <ZSTD_endStream@@Base+0x362f4>
   44234:	ldr	x8, [x0, #24]
   44238:	ldr	x0, [x8, #40]
   4423c:	bl	45b0 <ZSTD_flushStream@plt>
   44240:	ldp	x29, x30, [sp], #16
   44244:	ret
   44248:	mov	w2, #0x1                   	// #1
   4424c:	bl	44258 <ZSTD_endStream@@Base+0x36304>
   44250:	ldp	x29, x30, [sp], #16
   44254:	ret
   44258:	stp	x29, x30, [sp, #-48]!
   4425c:	stp	x20, x19, [sp, #32]
   44260:	ldr	x8, [x0, #240]
   44264:	str	x21, [sp, #16]
   44268:	mov	w19, w2
   4426c:	mov	x20, x0
   44270:	mov	x21, x1
   44274:	mov	x29, sp
   44278:	cbnz	x8, 44294 <ZSTD_endStream@@Base+0x36340>
   4427c:	ldr	w9, [x20, #200]
   44280:	cbnz	w9, 44294 <ZSTD_endStream@@Base+0x36340>
   44284:	cmp	w19, #0x2
   44288:	b.ne	442b8 <ZSTD_endStream@@Base+0x36364>  // b.any
   4428c:	ldr	w9, [x20, #656]
   44290:	cbnz	w9, 442b8 <ZSTD_endStream@@Base+0x36364>
   44294:	mov	x0, x20
   44298:	mov	x1, x8
   4429c:	mov	w2, w19
   442a0:	bl	43d7c <ZSTD_endStream@@Base+0x35e28>
   442a4:	mov	x0, xzr
   442a8:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   442ac:	mov	w8, w0
   442b0:	mov	x0, xzr
   442b4:	cbnz	w8, 442cc <ZSTD_endStream@@Base+0x36378>
   442b8:	mov	w2, #0x1                   	// #1
   442bc:	mov	x0, x20
   442c0:	mov	x1, x21
   442c4:	mov	w3, w19
   442c8:	bl	43f70 <ZSTD_endStream@@Base+0x3601c>
   442cc:	ldp	x20, x19, [sp, #32]
   442d0:	ldr	x21, [sp, #16]
   442d4:	ldp	x29, x30, [sp], #48
   442d8:	ret
   442dc:	stp	x29, x30, [sp, #-16]!
   442e0:	ldr	w8, [x0, #640]
   442e4:	mov	x29, sp
   442e8:	cbz	w8, 44300 <ZSTD_endStream@@Base+0x363ac>
   442ec:	ldr	x8, [x0, #24]
   442f0:	ldr	x0, [x8, #40]
   442f4:	bl	4970 <ZSTD_endStream@plt>
   442f8:	ldp	x29, x30, [sp], #16
   442fc:	ret
   44300:	mov	w2, #0x2                   	// #2
   44304:	bl	44258 <ZSTD_endStream@@Base+0x36304>
   44308:	ldp	x29, x30, [sp], #16
   4430c:	ret
   44310:	sub	sp, sp, #0x30
   44314:	stp	x29, x30, [sp, #32]
   44318:	add	x29, sp, #0x20
   4431c:	cbz	x1, 44360 <ZSTD_endStream@@Base+0x3640c>
   44320:	ldp	w10, w9, [x0, #16]
   44324:	mov	x8, x1
   44328:	cmp	w9, w10
   4432c:	b.cs	44344 <ZSTD_endStream@@Base+0x363f0>  // b.hs, b.nlast
   44330:	add	w10, w9, #0x1
   44334:	add	x9, x0, x9, lsl #4
   44338:	str	w10, [x0, #20]
   4433c:	stp	x8, x2, [x9, #48]
   44340:	b	44360 <ZSTD_endStream@@Base+0x3640c>
   44344:	ldr	x9, [x0, #40]
   44348:	ldur	q0, [x0, #24]
   4434c:	mov	x1, sp
   44350:	mov	x0, x8
   44354:	str	x9, [sp, #16]
   44358:	str	q0, [sp]
   4435c:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   44360:	ldp	x29, x30, [sp, #32]
   44364:	add	sp, sp, #0x30
   44368:	ret
   4436c:	stp	x29, x30, [sp, #-32]!
   44370:	stp	x20, x19, [sp, #16]
   44374:	mov	x29, sp
   44378:	mov	w19, w2
   4437c:	mov	x20, x1
   44380:	bl	4334c <ZSTD_endStream@@Base+0x353f8>
   44384:	mov	w8, #0x4                   	// #4
   44388:	mov	w9, w19
   4438c:	lsl	x8, x8, x0
   44390:	lsr	x10, x20, x0
   44394:	mul	x8, x8, x9
   44398:	add	w11, w10, #0x1
   4439c:	udiv	x8, x20, x8
   443a0:	cmp	w11, w19
   443a4:	add	w8, w8, #0x1
   443a8:	csinc	w9, w19, w10, cs  // cs = hs, nlast
   443ac:	mul	w10, w8, w19
   443b0:	ldp	x20, x19, [sp, #16]
   443b4:	cmp	w8, #0x1
   443b8:	csel	w0, w10, w9, hi  // hi = pmore
   443bc:	ldp	x29, x30, [sp], #32
   443c0:	ret
   443c4:	sub	sp, sp, #0x40
   443c8:	stp	x29, x30, [sp, #32]
   443cc:	add	x29, sp, #0x20
   443d0:	add	w8, w1, #0x2
   443d4:	str	w8, [x29, #28]
   443d8:	ldr	w9, [x0, #644]
   443dc:	str	x19, [sp, #48]
   443e0:	add	w1, w9, #0x1
   443e4:	cmp	w8, w1
   443e8:	b.ls	44448 <ZSTD_endStream@@Base+0x364f4>  // b.plast
   443ec:	mov	x19, x0
   443f0:	ldr	x8, [x0, #704]
   443f4:	ldr	q0, [x0, #688]
   443f8:	ldr	x0, [x0, #8]
   443fc:	mov	x2, sp
   44400:	str	x8, [sp, #16]
   44404:	str	q0, [sp]
   44408:	bl	422b4 <ZSTD_endStream@@Base+0x34360>
   4440c:	ldr	x8, [x19, #704]
   44410:	ldr	q0, [x19, #688]
   44414:	add	x0, x29, #0x1c
   44418:	mov	x1, sp
   4441c:	str	wzr, [x19, #644]
   44420:	str	x8, [sp, #16]
   44424:	str	q0, [sp]
   44428:	bl	447c4 <ZSTD_endStream@@Base+0x36870>
   4442c:	str	x0, [x19, #8]
   44430:	cbz	x0, 44450 <ZSTD_endStream@@Base+0x364fc>
   44434:	ldr	w8, [x29, #28]
   44438:	mov	x0, xzr
   4443c:	sub	w8, w8, #0x1
   44440:	str	w8, [x19, #644]
   44444:	b	44454 <ZSTD_endStream@@Base+0x36500>
   44448:	mov	x0, xzr
   4444c:	b	44454 <ZSTD_endStream@@Base+0x36500>
   44450:	mov	x0, #0xffffffffffffffc0    	// #-64
   44454:	ldr	x19, [sp, #48]
   44458:	ldp	x29, x30, [sp, #32]
   4445c:	add	sp, sp, #0x40
   44460:	ret
   44464:	sub	sp, sp, #0x130
   44468:	stp	x29, x30, [sp, #208]
   4446c:	stp	x28, x27, [sp, #224]
   44470:	stp	x26, x25, [sp, #240]
   44474:	stp	x24, x23, [sp, #256]
   44478:	stp	x22, x21, [sp, #272]
   4447c:	stp	x20, x19, [sp, #288]
   44480:	ldur	q0, [x0, #120]
   44484:	mov	x19, x0
   44488:	add	x29, sp, #0xd0
   4448c:	str	q0, [sp, #64]
   44490:	ldur	q0, [x0, #184]
   44494:	ldur	q1, [x0, #168]
   44498:	ldur	q2, [x0, #152]
   4449c:	ldur	q3, [x0, #136]
   444a0:	stp	q1, q0, [sp, #112]
   444a4:	stp	q3, q2, [sp, #80]
   444a8:	ldur	q0, [x0, #248]
   444ac:	ldur	q1, [x0, #232]
   444b0:	ldur	q2, [x0, #216]
   444b4:	ldur	q3, [x0, #200]
   444b8:	stp	q1, q0, [sp, #176]
   444bc:	stp	q3, q2, [sp, #144]
   444c0:	ldr	x0, [x0, #24]
   444c4:	bl	44828 <ZSTD_endStream@@Base+0x368d4>
   444c8:	ldr	x9, [x19, #40]
   444cc:	mov	x20, x0
   444d0:	add	x8, sp, #0x20
   444d4:	mov	x0, x9
   444d8:	bl	44874 <ZSTD_endStream@@Base+0x36920>
   444dc:	cbz	x20, 44570 <ZSTD_endStream@@Base+0x3661c>
   444e0:	ldr	x21, [x19, #56]
   444e4:	cbz	x21, 444f8 <ZSTD_endStream@@Base+0x365a4>
   444e8:	ldr	x22, [x19, #64]
   444ec:	ldr	w8, [sp, #160]
   444f0:	cbnz	w8, 44518 <ZSTD_endStream@@Base+0x365c4>
   444f4:	b	44520 <ZSTD_endStream@@Base+0x365cc>
   444f8:	ldr	x0, [x19, #32]
   444fc:	bl	448b0 <ZSTD_endStream@@Base+0x3695c>
   44500:	mov	x21, x0
   44504:	cbz	x0, 44574 <ZSTD_endStream@@Base+0x36620>
   44508:	mov	x22, x1
   4450c:	stp	x21, x1, [x19, #56]
   44510:	ldr	w8, [sp, #160]
   44514:	cbz	w8, 44520 <ZSTD_endStream@@Base+0x365cc>
   44518:	ldr	x8, [sp, #32]
   4451c:	cbz	x8, 44570 <ZSTD_endStream@@Base+0x3661c>
   44520:	ldr	w8, [x19, #104]
   44524:	cbz	w8, 4452c <ZSTD_endStream@@Base+0x365d8>
   44528:	str	wzr, [sp, #100]
   4452c:	str	wzr, [sp, #160]
   44530:	ldr	x5, [x19, #264]
   44534:	cbz	x5, 44580 <ZSTD_endStream@@Base+0x3662c>
   44538:	ldr	x7, [x19, #272]
   4453c:	add	x6, sp, #0x40
   44540:	mov	x0, x20
   44544:	mov	x1, xzr
   44548:	mov	x2, xzr
   4454c:	mov	w3, wzr
   44550:	mov	w4, wzr
   44554:	bl	c010 <ZSTD_compressBlock@@Base+0x70>
   44558:	mov	x23, x0
   4455c:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   44560:	cbz	w0, 44604 <ZSTD_endStream@@Base+0x366b0>
   44564:	mov	x21, xzr
   44568:	str	x23, [x19, #8]
   4456c:	b	44754 <ZSTD_endStream@@Base+0x36800>
   44570:	mov	x21, xzr
   44574:	mov	x8, #0xffffffffffffffc0    	// #-64
   44578:	str	x8, [x19, #8]
   4457c:	b	44754 <ZSTD_endStream@@Base+0x36800>
   44580:	ldr	w8, [x19, #108]
   44584:	mov	w9, #0x110                 	// #272
   44588:	add	x0, sp, #0x40
   4458c:	mov	w1, #0x3e8                 	// #1000
   44590:	cmp	w8, #0x0
   44594:	mov	w8, #0x60                  	// #96
   44598:	csel	x8, x8, x9, eq  // eq = none
   4459c:	ldr	x23, [x19, x8]
   445a0:	cset	w2, eq  // eq = none
   445a4:	bl	47f0 <ZSTD_CCtxParams_setParameter@plt>
   445a8:	mov	x24, x0
   445ac:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   445b0:	cbz	w0, 445c4 <ZSTD_endStream@@Base+0x36670>
   445b4:	mov	w8, #0x2                   	// #2
   445b8:	str	x24, [x19, #8]
   445bc:	cbnz	w8, 44600 <ZSTD_endStream@@Base+0x366ac>
   445c0:	b	445cc <ZSTD_endStream@@Base+0x36678>
   445c4:	mov	w8, wzr
   445c8:	cbnz	w8, 44600 <ZSTD_endStream@@Base+0x366ac>
   445cc:	ldp	x1, x2, [x19, #72]
   445d0:	add	x6, sp, #0x40
   445d4:	mov	w3, #0x1                   	// #1
   445d8:	mov	x0, x20
   445dc:	mov	w4, wzr
   445e0:	mov	x5, xzr
   445e4:	mov	x7, x23
   445e8:	bl	c010 <ZSTD_compressBlock@@Base+0x70>
   445ec:	mov	x23, x0
   445f0:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   445f4:	cbz	w0, 44730 <ZSTD_endStream@@Base+0x367dc>
   445f8:	mov	w8, #0x2                   	// #2
   445fc:	str	x23, [x19, #8]
   44600:	cbnz	w8, 44750 <ZSTD_endStream@@Base+0x367fc>
   44604:	ldp	q0, q1, [sp, #32]
   44608:	ldr	x0, [x19, #48]
   4460c:	ldr	w5, [x19, #104]
   44610:	mov	x2, sp
   44614:	stp	q0, q1, [sp]
   44618:	ldp	x3, x4, [x19, #88]
   4461c:	mov	x1, x20
   44620:	bl	44944 <ZSTD_endStream@@Base+0x369f0>
   44624:	ldr	w8, [x19, #108]
   44628:	cbz	w8, 44700 <ZSTD_endStream@@Base+0x367ac>
   4462c:	ldp	x23, x8, [x19, #88]
   44630:	mov	w9, #0x7ffff               	// #524287
   44634:	add	x24, x21, x22
   44638:	add	x8, x8, x9
   4463c:	lsr	x25, x8, #19
   44640:	cmp	w25, #0x2
   44644:	b.lt	446b4 <ZSTD_endStream@@Base+0x36760>  // b.tstop
   44648:	ubfx	x8, x8, #19, #32
   4464c:	sub	x26, x8, #0x1
   44650:	mov	w27, #0x80000               	// #524288
   44654:	b	44680 <ZSTD_endStream@@Base+0x3672c>
   44658:	ldr	x8, [x19, #8]
   4465c:	add	x23, x23, #0x80, lsl #12
   44660:	add	x21, x21, x22
   44664:	add	x8, x8, x22
   44668:	stp	x27, x8, [x19]
   4466c:	mov	w8, #0x1                   	// #1
   44670:	tbz	w8, #0, 44750 <ZSTD_endStream@@Base+0x367fc>
   44674:	subs	x26, x26, #0x1
   44678:	add	x27, x27, #0x80, lsl #12
   4467c:	b.eq	446b4 <ZSTD_endStream@@Base+0x36760>  // b.none
   44680:	sub	x2, x24, x21
   44684:	mov	w4, #0x80000               	// #524288
   44688:	mov	x0, x20
   4468c:	mov	x1, x21
   44690:	mov	x3, x23
   44694:	bl	4a90 <ZSTD_compressContinue@plt>
   44698:	mov	x22, x0
   4469c:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   446a0:	cbz	w0, 44658 <ZSTD_endStream@@Base+0x36704>
   446a4:	mov	w8, wzr
   446a8:	str	x22, [x19, #8]
   446ac:	tbnz	wzr, #0, 44674 <ZSTD_endStream@@Base+0x36720>
   446b0:	b	44750 <ZSTD_endStream@@Base+0x367fc>
   446b4:	ldr	w8, [x19, #112]
   446b8:	cmp	w25, #0x0
   446bc:	cset	w9, gt
   446c0:	orr	w9, w8, w9
   446c4:	cbz	w9, 44750 <ZSTD_endStream@@Base+0x367fc>
   446c8:	ldr	x9, [x19, #96]
   446cc:	mov	w10, #0x80000               	// #524288
   446d0:	sub	x2, x24, x21
   446d4:	mov	x0, x20
   446d8:	and	x11, x9, #0x7ffff
   446dc:	tst	x9, #0x7ffff
   446e0:	lsr	x9, x9, #19
   446e4:	ccmp	x9, #0x0, #0x4, eq  // eq = none
   446e8:	csel	x4, x10, x11, ne  // ne = any
   446ec:	mov	x1, x21
   446f0:	mov	x3, x23
   446f4:	cbz	w8, 4473c <ZSTD_endStream@@Base+0x367e8>
   446f8:	bl	44e0 <ZSTD_compressEnd@plt>
   446fc:	b	44740 <ZSTD_endStream@@Base+0x367ec>
   44700:	ldr	x3, [x19, #88]
   44704:	mov	x0, x20
   44708:	mov	x1, x21
   4470c:	mov	x2, x22
   44710:	mov	x4, xzr
   44714:	bl	4a90 <ZSTD_compressContinue@plt>
   44718:	mov	x23, x0
   4471c:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   44720:	cbnz	w0, 44564 <ZSTD_endStream@@Base+0x36610>
   44724:	mov	x0, x20
   44728:	bl	b87c <ZSTD_toFlushNow@@Base+0x8>
   4472c:	b	4462c <ZSTD_endStream@@Base+0x366d8>
   44730:	mov	w8, wzr
   44734:	cbnz	w8, 44750 <ZSTD_endStream@@Base+0x367fc>
   44738:	b	44604 <ZSTD_endStream@@Base+0x366b0>
   4473c:	bl	4a90 <ZSTD_compressContinue@plt>
   44740:	mov	x21, x0
   44744:	bl	42780 <ZSTD_endStream@@Base+0x3482c>
   44748:	cbz	w0, 44754 <ZSTD_endStream@@Base+0x36800>
   4474c:	str	x21, [x19, #8]
   44750:	mov	x21, xzr
   44754:	ldr	x0, [x19, #48]
   44758:	ldr	w1, [x19, #104]
   4475c:	bl	44a20 <ZSTD_endStream@@Base+0x36acc>
   44760:	ldp	q0, q1, [sp, #32]
   44764:	ldr	x0, [x19, #40]
   44768:	mov	x1, sp
   4476c:	stp	q0, q1, [sp]
   44770:	bl	44a4c <ZSTD_endStream@@Base+0x36af8>
   44774:	ldr	x0, [x19, #24]
   44778:	mov	x1, x20
   4477c:	bl	44a98 <ZSTD_endStream@@Base+0x36b44>
   44780:	ldr	x8, [x19, #8]
   44784:	ldr	x9, [x19, #96]
   44788:	add	x8, x8, x21
   4478c:	stp	x9, x8, [x19]
   44790:	ldp	x20, x19, [sp, #288]
   44794:	ldp	x22, x21, [sp, #272]
   44798:	ldp	x24, x23, [sp, #256]
   4479c:	ldp	x26, x25, [sp, #240]
   447a0:	ldp	x28, x27, [sp, #224]
   447a4:	ldp	x29, x30, [sp, #208]
   447a8:	add	sp, sp, #0x130
   447ac:	ret
   447b0:	stp	x29, x30, [sp, #-16]!
   447b4:	mov	x29, sp
   447b8:	bl	44ba0 <ZSTD_endStream@@Base+0x36c4c>
   447bc:	ldp	x29, x30, [sp], #16
   447c0:	ret
   447c4:	sub	sp, sp, #0x40
   447c8:	stp	x29, x30, [sp, #32]
   447cc:	stp	x20, x19, [sp, #48]
   447d0:	mov	x19, x0
   447d4:	ldr	w0, [x0]
   447d8:	add	x29, sp, #0x20
   447dc:	mov	x20, x1
   447e0:	bl	4338c <ZSTD_endStream@@Base+0x35438>
   447e4:	ldr	x11, [x20, #16]
   447e8:	ldr	q0, [x20]
   447ec:	add	w8, w0, #0x1
   447f0:	mov	w9, #0x1                   	// #1
   447f4:	mov	w10, #0x128                 	// #296
   447f8:	lsl	w20, w9, w8
   447fc:	umull	x0, w20, w10
   44800:	mov	x1, sp
   44804:	str	x11, [sp, #16]
   44808:	str	q0, [sp]
   4480c:	bl	6f38 <ZSTD_getErrorString@@Base+0x4c>
   44810:	cbz	x0, 44818 <ZSTD_endStream@@Base+0x368c4>
   44814:	str	w20, [x19]
   44818:	ldp	x20, x19, [sp, #48]
   4481c:	ldp	x29, x30, [sp, #32]
   44820:	add	sp, sp, #0x40
   44824:	ret
   44828:	sub	sp, sp, #0x30
   4482c:	stp	x29, x30, [sp, #32]
   44830:	ldr	w8, [x0, #8]
   44834:	add	x29, sp, #0x20
   44838:	cbz	w8, 44850 <ZSTD_endStream@@Base+0x368fc>
   4483c:	sub	w8, w8, #0x1
   44840:	str	w8, [x0, #8]
   44844:	add	x8, x0, w8, sxtw #3
   44848:	ldr	x0, [x8, #40]
   4484c:	b	44868 <ZSTD_endStream@@Base+0x36914>
   44850:	ldr	x8, [x0, #32]
   44854:	ldr	q0, [x0, #16]
   44858:	mov	x0, sp
   4485c:	str	x8, [sp, #16]
   44860:	str	q0, [sp]
   44864:	bl	44b0 <ZSTD_createCCtx_advanced@plt>
   44868:	ldp	x29, x30, [sp, #32]
   4486c:	add	sp, sp, #0x30
   44870:	ret
   44874:	stp	x29, x30, [sp, #-32]!
   44878:	ldr	x9, [x0, #8]
   4487c:	str	x19, [sp, #16]
   44880:	mov	x19, x8
   44884:	mov	x29, sp
   44888:	cbz	x9, 4489c <ZSTD_endStream@@Base+0x36948>
   4488c:	bl	448b0 <ZSTD_endStream@@Base+0x3695c>
   44890:	mov	x8, x19
   44894:	bl	44adc <ZSTD_endStream@@Base+0x36b88>
   44898:	b	448a4 <ZSTD_endStream@@Base+0x36950>
   4489c:	movi	v0.2d, #0x0
   448a0:	stp	q0, q0, [x19]
   448a4:	ldr	x19, [sp, #16]
   448a8:	ldp	x29, x30, [sp], #32
   448ac:	ret
   448b0:	sub	sp, sp, #0x40
   448b4:	stp	x29, x30, [sp, #32]
   448b8:	stp	x20, x19, [sp, #48]
   448bc:	ldr	w8, [x0, #20]
   448c0:	ldr	x19, [x0, #8]
   448c4:	mov	x20, x0
   448c8:	add	x29, sp, #0x20
   448cc:	cbz	w8, 44910 <ZSTD_endStream@@Base+0x369bc>
   448d0:	sub	w8, w8, #0x1
   448d4:	str	w8, [x20, #20]
   448d8:	add	x8, x20, w8, uxtw #4
   448dc:	ldp	x0, x1, [x8, #48]
   448e0:	stp	xzr, xzr, [x8, #48]
   448e4:	cmp	x1, x19
   448e8:	b.cc	448f8 <ZSTD_endStream@@Base+0x369a4>  // b.lo, b.ul, b.last
   448ec:	lsr	x8, x1, #3
   448f0:	cmp	x8, x19
   448f4:	b.ls	44934 <ZSTD_endStream@@Base+0x369e0>  // b.plast
   448f8:	ldr	x8, [x20, #40]
   448fc:	ldur	q0, [x20, #24]
   44900:	mov	x1, sp
   44904:	str	x8, [sp, #16]
   44908:	str	q0, [sp]
   4490c:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   44910:	ldr	x8, [x20, #40]
   44914:	ldur	q0, [x20, #24]
   44918:	mov	x1, sp
   4491c:	mov	x0, x19
   44920:	str	x8, [sp, #16]
   44924:	str	q0, [sp]
   44928:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   4492c:	cmp	x0, #0x0
   44930:	csel	x1, xzr, x19, eq  // eq = none
   44934:	ldp	x20, x19, [sp, #48]
   44938:	ldp	x29, x30, [sp, #32]
   4493c:	add	sp, sp, #0x40
   44940:	ret
   44944:	stp	x29, x30, [sp, #-80]!
   44948:	stp	x24, x23, [sp, #32]
   4494c:	stp	x22, x21, [sp, #48]
   44950:	stp	x20, x19, [sp, #64]
   44954:	ldr	w8, [x0, #296]
   44958:	mov	x22, x4
   4495c:	mov	x23, x3
   44960:	mov	x19, x2
   44964:	mov	x21, x0
   44968:	mov	x20, x1
   4496c:	str	x25, [sp, #16]
   44970:	mov	x29, sp
   44974:	cmp	w8, w5
   44978:	b.cc	44974 <ZSTD_endStream@@Base+0x36a20>  // b.lo, b.ul, b.last
   4497c:	b.ne	449e8 <ZSTD_endStream@@Base+0x36a94>  // b.any
   44980:	mov	x24, x21
   44984:	ldr	w8, [x24, #104]!
   44988:	cbz	w8, 449cc <ZSTD_endStream@@Base+0x36a78>
   4498c:	add	x25, x21, #0x98
   44990:	mov	x0, x25
   44994:	mov	x1, x23
   44998:	mov	x2, x22
   4499c:	bl	44b00 <ZSTD_endStream@@Base+0x36bac>
   449a0:	mov	x0, x25
   449a4:	mov	x1, x19
   449a8:	mov	x2, x24
   449ac:	mov	x3, x23
   449b0:	mov	x4, x22
   449b4:	bl	26010 <ZSTD_endStream@@Base+0x180bc>
   449b8:	ldur	q0, [x21, #152]
   449bc:	add	x8, x21, #0x138
   449c0:	str	q0, [x8]
   449c4:	ldur	q0, [x21, #168]
   449c8:	str	q0, [x8, #16]
   449cc:	cbz	x22, 449e8 <ZSTD_endStream@@Base+0x36a94>
   449d0:	ldr	w8, [x21, #44]
   449d4:	cbz	w8, 449e8 <ZSTD_endStream@@Base+0x36a94>
   449d8:	add	x0, x21, #0xd0
   449dc:	mov	x1, x23
   449e0:	mov	x2, x22
   449e4:	bl	696c <ZSTD_initDStream_usingDDict@plt+0x1e5c>
   449e8:	ldr	w8, [x21, #296]
   449ec:	add	w8, w8, #0x1
   449f0:	str	w8, [x21, #296]
   449f4:	ldr	x2, [x19, #16]
   449f8:	cbz	x2, 44a08 <ZSTD_endStream@@Base+0x36ab4>
   449fc:	ldr	x1, [x19]
   44a00:	mov	x0, x20
   44a04:	bl	bd9c <ZSTD_compress2@@Base+0xf0>
   44a08:	ldp	x20, x19, [sp, #64]
   44a0c:	ldp	x22, x21, [sp, #48]
   44a10:	ldp	x24, x23, [sp, #32]
   44a14:	ldr	x25, [sp, #16]
   44a18:	ldp	x29, x30, [sp], #80
   44a1c:	ret
   44a20:	stp	x29, x30, [sp, #-16]!
   44a24:	ldr	w8, [x0, #296]
   44a28:	mov	x29, sp
   44a2c:	cmp	w8, w1
   44a30:	b.hi	44a44 <ZSTD_endStream@@Base+0x36af0>  // b.pmore
   44a34:	add	w8, w1, #0x1
   44a38:	str	w8, [x0, #296]
   44a3c:	add	x0, x0, #0x138
   44a40:	bl	44b78 <ZSTD_endStream@@Base+0x36c24>
   44a44:	ldp	x29, x30, [sp], #16
   44a48:	ret
   44a4c:	sub	sp, sp, #0x40
   44a50:	stp	x29, x30, [sp, #32]
   44a54:	str	x19, [sp, #48]
   44a58:	ldp	q1, q0, [x1]
   44a5c:	mov	x19, x0
   44a60:	mov	x0, sp
   44a64:	add	x29, sp, #0x20
   44a68:	stp	q1, q0, [sp]
   44a6c:	bl	44b8c <ZSTD_endStream@@Base+0x36c38>
   44a70:	mov	x2, x0
   44a74:	mov	x3, x1
   44a78:	mov	x0, x19
   44a7c:	mov	x1, x2
   44a80:	mov	x2, x3
   44a84:	bl	44310 <ZSTD_endStream@@Base+0x363bc>
   44a88:	ldr	x19, [sp, #48]
   44a8c:	ldp	x29, x30, [sp, #32]
   44a90:	add	sp, sp, #0x40
   44a94:	ret
   44a98:	stp	x29, x30, [sp, #-16]!
   44a9c:	mov	x29, sp
   44aa0:	cbz	x1, 44ad4 <ZSTD_endStream@@Base+0x36b80>
   44aa4:	ldp	w9, w8, [x0, #4]
   44aa8:	sxtw	x8, w8
   44aac:	cmp	w8, w9
   44ab0:	b.ge	44acc <ZSTD_endStream@@Base+0x36b78>  // b.tcont
   44ab4:	add	w9, w8, #0x1
   44ab8:	add	x8, x0, x8, lsl #3
   44abc:	str	w9, [x0, #8]
   44ac0:	str	x1, [x8, #40]
   44ac4:	ldp	x29, x30, [sp], #16
   44ac8:	ret
   44acc:	mov	x0, x1
   44ad0:	bl	4590 <ZSTD_freeCCtx@plt>
   44ad4:	ldp	x29, x30, [sp], #16
   44ad8:	ret
   44adc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   44ae0:	movk	x9, #0xaaab
   44ae4:	umulh	x9, x1, x9
   44ae8:	movi	v0.2d, #0x0
   44aec:	lsr	x9, x9, #3
   44af0:	stp	q0, q0, [x8]
   44af4:	str	x0, [x8]
   44af8:	str	x9, [x8, #24]
   44afc:	ret
   44b00:	ldr	x8, [x0]
   44b04:	cmp	x8, x1
   44b08:	b.eq	44b38 <ZSTD_endStream@@Base+0x36be4>  // b.none
   44b0c:	ldr	x9, [x0, #8]
   44b10:	ldr	w10, [x0, #24]
   44b14:	sub	x8, x8, x9
   44b18:	stp	w8, w10, [x0, #24]
   44b1c:	sub	w10, w8, w10
   44b20:	str	x9, [x0, #16]
   44b24:	sub	x9, x1, x8
   44b28:	cmp	w10, #0x7
   44b2c:	str	x9, [x0, #8]
   44b30:	b.hi	44b38 <ZSTD_endStream@@Base+0x36be4>  // b.pmore
   44b34:	str	w8, [x0, #28]
   44b38:	ldr	x8, [x0, #16]
   44b3c:	ldr	w10, [x0, #28]
   44b40:	add	x9, x1, x2
   44b44:	str	x9, [x0]
   44b48:	add	x10, x8, x10
   44b4c:	cmp	x9, x10
   44b50:	b.ls	44b74 <ZSTD_endStream@@Base+0x36c20>  // b.plast
   44b54:	ldr	w10, [x0, #24]
   44b58:	add	x11, x8, x10
   44b5c:	cmp	x11, x1
   44b60:	b.ls	44b74 <ZSTD_endStream@@Base+0x36c20>  // b.plast
   44b64:	sub	x8, x9, x8
   44b68:	cmp	x8, x10
   44b6c:	csel	w8, w10, w8, gt
   44b70:	str	w8, [x0, #28]
   44b74:	ret
   44b78:	ldr	w8, [x0]
   44b7c:	ldr	w9, [x0, #8]
   44b80:	sub	w8, w8, w9
   44b84:	stp	w8, w8, [x0, #24]
   44b88:	ret
   44b8c:	ldr	x8, [x0, #24]
   44b90:	ldr	x0, [x0]
   44b94:	add	x8, x8, x8, lsl #1
   44b98:	lsl	x1, x8, #2
   44b9c:	ret
   44ba0:	str	w1, [x0]
   44ba4:	ret
   44ba8:	sub	sp, sp, #0x70
   44bac:	stp	x20, x19, [sp, #96]
   44bb0:	mov	x19, x0
   44bb4:	stp	x29, x30, [sp, #64]
   44bb8:	str	x21, [sp, #80]
   44bbc:	add	x29, sp, #0x40
   44bc0:	cbz	x0, 44c28 <ZSTD_endStream@@Base+0x36cd4>
   44bc4:	ldr	w8, [x19, #16]
   44bc8:	lsl	w9, w1, #1
   44bcc:	add	w9, w9, #0x3
   44bd0:	mov	w20, w1
   44bd4:	cmp	w8, w9
   44bd8:	b.cs	44c28 <ZSTD_endStream@@Base+0x36cd4>  // b.hs, b.nlast
   44bdc:	ldr	x8, [x19, #40]
   44be0:	ldur	q0, [x19, #24]
   44be4:	mov	x0, x19
   44be8:	str	x8, [sp, #48]
   44bec:	str	q0, [sp, #32]
   44bf0:	ldr	x21, [x19, #8]
   44bf4:	bl	422e8 <ZSTD_endStream@@Base+0x34394>
   44bf8:	ldr	q0, [sp, #32]
   44bfc:	ldr	x8, [sp, #48]
   44c00:	mov	x1, sp
   44c04:	mov	w0, w20
   44c08:	str	q0, [sp]
   44c0c:	str	x8, [sp, #16]
   44c10:	bl	44cb8 <ZSTD_endStream@@Base+0x36d64>
   44c14:	mov	x19, x0
   44c18:	cbz	x0, 44c28 <ZSTD_endStream@@Base+0x36cd4>
   44c1c:	mov	x0, x19
   44c20:	mov	x1, x21
   44c24:	bl	433b0 <ZSTD_endStream@@Base+0x3545c>
   44c28:	mov	x0, x19
   44c2c:	ldp	x20, x19, [sp, #96]
   44c30:	ldr	x21, [sp, #80]
   44c34:	ldp	x29, x30, [sp, #64]
   44c38:	add	sp, sp, #0x70
   44c3c:	ret
   44c40:	sub	sp, sp, #0x60
   44c44:	stp	x29, x30, [sp, #64]
   44c48:	str	x19, [sp, #80]
   44c4c:	add	x29, sp, #0x40
   44c50:	cbz	x0, 44c94 <ZSTD_endStream@@Base+0x36d40>
   44c54:	ldr	w8, [x0, #4]
   44c58:	mov	w19, w1
   44c5c:	cmp	w8, w1
   44c60:	b.ge	44c94 <ZSTD_endStream@@Base+0x36d40>  // b.tcont
   44c64:	ldr	x8, [x0, #32]
   44c68:	ldr	q0, [x0, #16]
   44c6c:	str	x8, [sp, #48]
   44c70:	str	q0, [sp, #32]
   44c74:	bl	42374 <ZSTD_endStream@@Base+0x34420>
   44c78:	ldr	q0, [sp, #32]
   44c7c:	ldr	x8, [sp, #48]
   44c80:	mov	x1, sp
   44c84:	mov	w0, w19
   44c88:	str	q0, [sp]
   44c8c:	str	x8, [sp, #16]
   44c90:	bl	44d28 <ZSTD_endStream@@Base+0x36dd4>
   44c94:	ldr	x19, [sp, #80]
   44c98:	ldp	x29, x30, [sp, #64]
   44c9c:	add	sp, sp, #0x60
   44ca0:	ret
   44ca4:	stp	x29, x30, [sp, #-16]!
   44ca8:	mov	x29, sp
   44cac:	bl	44ba8 <ZSTD_endStream@@Base+0x36c54>
   44cb0:	ldp	x29, x30, [sp], #16
   44cb4:	ret
   44cb8:	sub	sp, sp, #0x40
   44cbc:	stp	x29, x30, [sp, #32]
   44cc0:	stp	x20, x19, [sp, #48]
   44cc4:	lsl	w20, w0, #1
   44cc8:	ldr	q0, [x1]
   44ccc:	ldr	x8, [x1, #16]
   44cd0:	add	w9, w20, #0x2
   44cd4:	lsl	x9, x9, #4
   44cd8:	mov	x19, x1
   44cdc:	add	x0, x9, #0x40
   44ce0:	mov	x1, sp
   44ce4:	add	x29, sp, #0x20
   44ce8:	str	x8, [sp, #16]
   44cec:	str	q0, [sp]
   44cf0:	bl	6f38 <ZSTD_getErrorString@@Base+0x4c>
   44cf4:	cbz	x0, 44d18 <ZSTD_endStream@@Base+0x36dc4>
   44cf8:	add	w8, w20, #0x3
   44cfc:	mov	w9, #0x10000               	// #65536
   44d00:	str	x9, [x0, #8]
   44d04:	stp	w8, wzr, [x0, #16]
   44d08:	ldr	x8, [x19, #16]
   44d0c:	ldr	q0, [x19]
   44d10:	str	x8, [x0, #40]
   44d14:	stur	q0, [x0, #24]
   44d18:	ldp	x20, x19, [sp, #48]
   44d1c:	ldp	x29, x30, [sp, #32]
   44d20:	add	sp, sp, #0x40
   44d24:	ret
   44d28:	sub	sp, sp, #0x50
   44d2c:	stp	x29, x30, [sp, #32]
   44d30:	stp	x20, x19, [sp, #64]
   44d34:	ldr	x9, [x1, #16]
   44d38:	ldr	q0, [x1]
   44d3c:	sub	w8, w0, #0x1
   44d40:	sbfiz	x8, x8, #3, #32
   44d44:	str	x21, [sp, #48]
   44d48:	mov	x20, x1
   44d4c:	mov	w21, w0
   44d50:	add	x0, x8, #0x30
   44d54:	mov	x1, sp
   44d58:	add	x29, sp, #0x20
   44d5c:	str	x9, [sp, #16]
   44d60:	str	q0, [sp]
   44d64:	bl	6f38 <ZSTD_getErrorString@@Base+0x4c>
   44d68:	mov	x19, x0
   44d6c:	cbz	x0, 44db4 <ZSTD_endStream@@Base+0x36e60>
   44d70:	ldr	q0, [x20]
   44d74:	ldr	x8, [x20, #16]
   44d78:	mov	w9, #0x1                   	// #1
   44d7c:	stp	w21, w9, [x19, #4]
   44d80:	str	q0, [x19, #16]
   44d84:	str	x8, [x19, #32]
   44d88:	ldr	x8, [x20, #16]
   44d8c:	ldr	q0, [x20]
   44d90:	mov	x0, sp
   44d94:	str	x8, [sp, #16]
   44d98:	str	q0, [sp]
   44d9c:	bl	44b0 <ZSTD_createCCtx_advanced@plt>
   44da0:	str	x0, [x19, #40]
   44da4:	cbnz	x0, 44db4 <ZSTD_endStream@@Base+0x36e60>
   44da8:	mov	x0, x19
   44dac:	bl	42374 <ZSTD_endStream@@Base+0x34420>
   44db0:	mov	x19, xzr
   44db4:	mov	x0, x19
   44db8:	ldp	x20, x19, [sp, #64]
   44dbc:	ldr	x21, [sp, #48]
   44dc0:	ldp	x29, x30, [sp, #32]
   44dc4:	add	sp, sp, #0x50
   44dc8:	ret
   44dcc:	cbz	w0, 44dd4 <ZSTD_endStream@@Base+0x36e80>
   44dd0:	ret
   44dd4:	stp	x29, x30, [sp, #-16]!
   44dd8:	mov	w0, w1
   44ddc:	mov	x29, sp
   44de0:	bl	42df4 <ZSTD_endStream@@Base+0x34ea0>
   44de4:	ldp	x29, x30, [sp], #16
   44de8:	ret
   44dec:	cbz	x0, 44e24 <ZSTD_endStream@@Base+0x36ed0>
   44df0:	mov	x9, #0x6463                	// #25699
   44df4:	movk	x9, #0xb7a5, lsl #16
   44df8:	movk	x9, #0xbcdc, lsl #32
   44dfc:	mov	x8, x0
   44e00:	movk	x9, #0xcf1b, lsl #48
   44e04:	mov	w0, #0x1                   	// #1
   44e08:	tst	x8, #0x1
   44e0c:	csinc	x10, x9, xzr, ne  // ne = any
   44e10:	lsr	x8, x8, #1
   44e14:	mul	x0, x10, x0
   44e18:	mul	x9, x9, x9
   44e1c:	cbnz	x8, 44e08 <ZSTD_endStream@@Base+0x36eb4>
   44e20:	ret
   44e24:	mov	w0, #0x1                   	// #1
   44e28:	ret
   44e2c:	stp	x29, x30, [sp, #-16]!
   44e30:	add	x8, x1, x1, lsl #1
   44e34:	lsl	x1, x8, #2
   44e38:	mov	x29, sp
   44e3c:	bl	433b0 <ZSTD_endStream@@Base+0x3545c>
   44e40:	ldp	x29, x30, [sp], #16
   44e44:	ret
   44e48:	ldr	w8, [x0, #648]
   44e4c:	ldr	w9, [x0, #652]
   44e50:	cmp	w8, w9
   44e54:	b.cs	44ec4 <ZSTD_endStream@@Base+0x36f70>  // b.hs, b.nlast
   44e58:	ldr	w10, [x0, #644]
   44e5c:	ldr	x11, [x0, #8]
   44e60:	mov	w12, #0x128                 	// #296
   44e64:	b	44e7c <ZSTD_endStream@@Base+0x36f28>
   44e68:	mov	w13, #0x1                   	// #1
   44e6c:	tbz	w13, #0, 44ec0 <ZSTD_endStream@@Base+0x36f6c>
   44e70:	add	w8, w8, #0x1
   44e74:	cmp	w9, w8
   44e78:	b.eq	44ec4 <ZSTD_endStream@@Base+0x36f70>  // b.none
   44e7c:	mov	w13, w8
   44e80:	and	x15, x10, x13
   44e84:	madd	x13, x15, x12, x11
   44e88:	ldr	x16, [x13]
   44e8c:	ldr	x14, [x13, #96]
   44e90:	cmp	x16, x14
   44e94:	b.cs	44e68 <ZSTD_endStream@@Base+0x36f14>  // b.hs, b.nlast
   44e98:	madd	x15, x15, x12, x11
   44e9c:	ldr	x16, [x15, #80]
   44ea0:	add	x17, x15, #0x48
   44ea4:	add	x15, x15, #0x58
   44ea8:	mov	w13, wzr
   44eac:	cmp	x16, #0x0
   44eb0:	csel	x15, x15, x17, eq  // eq = none
   44eb4:	ldr	x0, [x15]
   44eb8:	csel	x1, x14, x16, eq  // eq = none
   44ebc:	tbnz	w13, #0, 44e70 <ZSTD_endStream@@Base+0x36f1c>
   44ec0:	ret
   44ec4:	mov	x0, xzr
   44ec8:	mov	x1, xzr
   44ecc:	ret
   44ed0:	mov	x8, x0
   44ed4:	mov	w0, wzr
   44ed8:	cbz	x8, 44f08 <ZSTD_endStream@@Base+0x36fb4>
   44edc:	cbz	x2, 44f08 <ZSTD_endStream@@Base+0x36fb4>
   44ee0:	mov	w0, wzr
   44ee4:	cbz	x1, 44f08 <ZSTD_endStream@@Base+0x36fb4>
   44ee8:	cbz	x3, 44f08 <ZSTD_endStream@@Base+0x36fb4>
   44eec:	add	x10, x2, x3
   44ef0:	add	x9, x8, x1
   44ef4:	cmp	x10, x8
   44ef8:	cset	w8, hi  // hi = pmore
   44efc:	cmp	x9, x2
   44f00:	cset	w9, hi  // hi = pmore
   44f04:	and	w0, w9, w8
   44f08:	ret
   44f0c:	sub	sp, sp, #0x50
   44f10:	stp	x29, x30, [sp, #32]
   44f14:	stp	x20, x19, [sp, #64]
   44f18:	ldr	w8, [x0, #136]
   44f1c:	str	x21, [sp, #48]
   44f20:	add	x29, sp, #0x20
   44f24:	cbz	w8, 44f50 <ZSTD_endStream@@Base+0x36ffc>
   44f28:	mov	x19, x2
   44f2c:	mov	x20, x1
   44f30:	add	x21, x0, #0x248
   44f34:	ldp	q1, q0, [x21]
   44f38:	mov	x2, sp
   44f3c:	mov	x0, x20
   44f40:	mov	x1, x19
   44f44:	stp	q1, q0, [sp]
   44f48:	bl	44f64 <ZSTD_endStream@@Base+0x37010>
   44f4c:	cbnz	w0, 44f34 <ZSTD_endStream@@Base+0x36fe0>
   44f50:	ldp	x20, x19, [sp, #64]
   44f54:	ldr	x21, [sp, #48]
   44f58:	ldp	x29, x30, [sp, #32]
   44f5c:	add	sp, sp, #0x50
   44f60:	ret
   44f64:	stp	x29, x30, [sp, #-64]!
   44f68:	str	x23, [sp, #16]
   44f6c:	stp	x22, x21, [sp, #32]
   44f70:	stp	x20, x19, [sp, #48]
   44f74:	ldp	x23, x8, [x2, #8]
   44f78:	ldp	w22, w9, [x2, #24]
   44f7c:	mov	x21, x2
   44f80:	mov	x29, sp
   44f84:	mov	x19, x1
   44f88:	add	x2, x8, x9
   44f8c:	sub	w3, w22, w9
   44f90:	mov	x20, x0
   44f94:	bl	44ed0 <ZSTD_endStream@@Base+0x36f7c>
   44f98:	cbz	w0, 44fa4 <ZSTD_endStream@@Base+0x37050>
   44f9c:	mov	w0, #0x1                   	// #1
   44fa0:	b	44fc4 <ZSTD_endStream@@Base+0x37070>
   44fa4:	ldr	x8, [x21]
   44fa8:	add	x2, x23, x22
   44fac:	mov	x0, x20
   44fb0:	mov	x1, x19
   44fb4:	sub	x3, x8, x2
   44fb8:	bl	44ed0 <ZSTD_endStream@@Base+0x36f7c>
   44fbc:	cmp	w0, #0x0
   44fc0:	cset	w0, ne  // ne = any
   44fc4:	ldp	x20, x19, [sp, #48]
   44fc8:	ldp	x22, x21, [sp, #32]
   44fcc:	ldr	x23, [sp, #16]
   44fd0:	ldp	x29, x30, [sp], #64
   44fd4:	ret
   44fd8:	stp	x29, x30, [sp, #-16]!
   44fdc:	mov	x2, x1
   44fe0:	mov	x1, x0
   44fe4:	mov	x0, xzr
   44fe8:	mov	x29, sp
   44fec:	bl	44ff8 <ZSTD_endStream@@Base+0x370a4>
   44ff0:	ldp	x29, x30, [sp], #16
   44ff4:	ret
   44ff8:	cbz	x2, 45020 <ZSTD_endStream@@Base+0x370cc>
   44ffc:	mov	x8, #0x6463                	// #25699
   45000:	movk	x8, #0xb7a5, lsl #16
   45004:	movk	x8, #0xbcdc, lsl #32
   45008:	movk	x8, #0xcf1b, lsl #48
   4500c:	ldrb	w9, [x1], #1
   45010:	subs	x2, x2, #0x1
   45014:	madd	x9, x0, x8, x9
   45018:	add	x0, x9, #0xa
   4501c:	b.ne	4500c <ZSTD_endStream@@Base+0x370b8>  // b.any
   45020:	ret
   45024:	mov	x9, #0x6463                	// #25699
   45028:	and	x8, x1, #0xff
   4502c:	movk	x9, #0xb7a5, lsl #16
   45030:	add	x8, x8, #0xa
   45034:	movk	x9, #0xbcdc, lsl #32
   45038:	msub	x8, x8, x3, x0
   4503c:	movk	x9, #0xcf1b, lsl #48
   45040:	mul	x8, x8, x9
   45044:	add	x8, x8, w2, uxtb
   45048:	add	x0, x8, #0xa
   4504c:	ret
   45050:	stp	x29, x30, [sp, #-32]!
   45054:	str	x19, [sp, #16]
   45058:	mov	x19, x0
   4505c:	ldr	x0, [x0, #32]
   45060:	mov	x29, sp
   45064:	bl	448b0 <ZSTD_endStream@@Base+0x3695c>
   45068:	stp	x0, x1, [x19, #56]
   4506c:	cbz	x0, 45080 <ZSTD_endStream@@Base+0x3712c>
   45070:	ldr	x0, [x19, #56]
   45074:	stp	xzr, xzr, [x19, #88]
   45078:	bl	bd44 <ZSTD_compress2@@Base+0x98>
   4507c:	b	45084 <ZSTD_endStream@@Base+0x37130>
   45080:	mov	x0, #0xffffffffffffffc0    	// #-64
   45084:	str	x0, [x19, #8]
   45088:	ldr	x19, [sp, #16]
   4508c:	ldp	x29, x30, [sp], #32
   45090:	ret
   45094:	sub	sp, sp, #0x40
   45098:	stp	x29, x30, [sp, #16]
   4509c:	add	x29, sp, #0x10
   450a0:	cmp	x4, #0x140
   450a4:	stp	x22, x21, [sp, #32]
   450a8:	stp	x20, x19, [sp, #48]
   450ac:	stur	wzr, [x29, #-4]
   450b0:	str	wzr, [sp, #8]
   450b4:	b.cs	450c0 <ZSTD_endStream@@Base+0x3716c>  // b.hs, b.nlast
   450b8:	mov	x20, #0xffffffffffffffd4    	// #-44
   450bc:	b	450f8 <ZSTD_endStream@@Base+0x371a4>
   450c0:	mov	x19, x3
   450c4:	add	x21, x3, #0x40
   450c8:	mov	x6, x2
   450cc:	mov	x5, x1
   450d0:	mov	x22, x0
   450d4:	add	x3, sp, #0x8
   450d8:	sub	x4, x29, #0x4
   450dc:	mov	w1, #0x100                 	// #256
   450e0:	mov	x0, x21
   450e4:	mov	x2, x19
   450e8:	bl	4ff4 <ZSTD_initDStream_usingDDict@plt+0x4e4>
   450ec:	mov	x20, x0
   450f0:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   450f4:	cbz	w0, 45110 <ZSTD_endStream@@Base+0x371bc>
   450f8:	mov	x0, x20
   450fc:	ldp	x20, x19, [sp, #48]
   45100:	ldp	x22, x21, [sp, #32]
   45104:	ldp	x29, x30, [sp, #16]
   45108:	add	sp, sp, #0x40
   4510c:	ret
   45110:	mov	x0, x22
   45114:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   45118:	ldur	w10, [x29, #-4]
   4511c:	and	w8, w0, #0xff
   45120:	add	w8, w8, #0x1
   45124:	cmp	w10, w8
   45128:	b.hi	450b8 <ZSTD_endStream@@Base+0x37164>  // b.pmore
   4512c:	add	w11, w10, #0x1
   45130:	lsr	w8, w0, #24
   45134:	cmp	w11, #0x2
   45138:	strb	w0, [x22]
   4513c:	strb	wzr, [x22, #1]
   45140:	strb	w10, [x22, #2]
   45144:	strb	w8, [x22, #3]
   45148:	b.cc	45184 <ZSTD_endStream@@Base+0x37230>  // b.lo, b.ul, b.last
   4514c:	mov	w12, w11
   45150:	mov	x8, xzr
   45154:	mov	w9, wzr
   45158:	add	x11, x19, #0x4
   4515c:	sub	x12, x12, #0x1
   45160:	lsl	x13, x8, #2
   45164:	ldr	w14, [x11, x13]
   45168:	str	w9, [x11, x13]
   4516c:	lsl	w14, w14, w8
   45170:	add	x8, x8, #0x1
   45174:	add	w14, w14, w9
   45178:	cmp	x12, x8
   4517c:	mov	w9, w14
   45180:	b.ne	45160 <ZSTD_endStream@@Base+0x3720c>  // b.any
   45184:	ldr	w8, [sp, #8]
   45188:	cbz	w8, 450f8 <ZSTD_endStream@@Base+0x371a4>
   4518c:	ldr	w9, [sp, #8]
   45190:	mov	x8, xzr
   45194:	add	w10, w10, #0x1
   45198:	add	x11, x22, #0x5
   4519c:	mov	w12, #0x1                   	// #1
   451a0:	b	451b4 <ZSTD_endStream@@Base+0x37260>
   451a4:	add	x8, x8, #0x1
   451a8:	cmp	x8, x9
   451ac:	str	w16, [x19, x13, lsl #2]
   451b0:	b.cs	450f8 <ZSTD_endStream@@Base+0x371a4>  // b.hs, b.nlast
   451b4:	ldrb	w13, [x21, x8]
   451b8:	ldr	w14, [x19, x13, lsl #2]
   451bc:	lsl	w15, w12, w13
   451c0:	asr	w15, w15, #1
   451c4:	add	w16, w14, w15
   451c8:	cmp	w14, w16
   451cc:	b.cs	451a4 <ZSTD_endStream@@Base+0x37250>  // b.hs, b.nlast
   451d0:	sub	w17, w10, w13
   451d4:	add	x18, x11, x14, lsl #1
   451d8:	sturb	w8, [x18, #-1]
   451dc:	strb	w17, [x18], #2
   451e0:	ldr	w16, [x19, x13, lsl #2]
   451e4:	add	x14, x14, #0x1
   451e8:	add	w16, w16, w15
   451ec:	cmp	x14, x16
   451f0:	b.cc	451d8 <ZSTD_endStream@@Base+0x37284>  // b.lo, b.ul, b.last
   451f4:	b	451a4 <ZSTD_endStream@@Base+0x37250>
   451f8:	cmn	x0, #0x78
   451fc:	cset	w0, hi  // hi = pmore
   45200:	ret
   45204:	ldr	w0, [x0]
   45208:	ret
   4520c:	stp	x29, x30, [sp, #-32]!
   45210:	str	x28, [sp, #16]
   45214:	mov	x29, sp
   45218:	sub	sp, sp, #0x800
   4521c:	mov	x3, sp
   45220:	mov	w4, #0x800                 	// #2048
   45224:	bl	45094 <ZSTD_endStream@@Base+0x37140>
   45228:	add	sp, sp, #0x800
   4522c:	ldr	x28, [sp, #16]
   45230:	ldp	x29, x30, [sp], #32
   45234:	ret
   45238:	stp	x29, x30, [sp, #-64]!
   4523c:	str	x23, [sp, #16]
   45240:	mov	x23, x0
   45244:	mov	x0, x4
   45248:	stp	x22, x21, [sp, #32]
   4524c:	stp	x20, x19, [sp, #48]
   45250:	mov	x29, sp
   45254:	mov	x19, x4
   45258:	mov	x20, x3
   4525c:	mov	x21, x2
   45260:	mov	x22, x1
   45264:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   45268:	tst	x0, #0xff00
   4526c:	b.eq	45278 <ZSTD_endStream@@Base+0x37324>  // b.none
   45270:	mov	x0, #0xffffffffffffffff    	// #-1
   45274:	b	45290 <ZSTD_endStream@@Base+0x3733c>
   45278:	mov	x0, x23
   4527c:	mov	x1, x22
   45280:	mov	x2, x21
   45284:	mov	x3, x20
   45288:	mov	x4, x19
   4528c:	bl	452a4 <ZSTD_endStream@@Base+0x37350>
   45290:	ldp	x20, x19, [sp, #48]
   45294:	ldp	x22, x21, [sp, #32]
   45298:	ldr	x23, [sp, #16]
   4529c:	ldp	x29, x30, [sp], #64
   452a0:	ret
   452a4:	sub	sp, sp, #0x80
   452a8:	stp	x22, x21, [sp, #96]
   452ac:	mov	x21, x0
   452b0:	mov	x0, x4
   452b4:	stp	x29, x30, [sp, #48]
   452b8:	stp	x26, x25, [sp, #64]
   452bc:	stp	x24, x23, [sp, #80]
   452c0:	stp	x20, x19, [sp, #112]
   452c4:	add	x29, sp, #0x30
   452c8:	mov	x20, x4
   452cc:	mov	x23, x3
   452d0:	mov	x24, x2
   452d4:	mov	x19, x1
   452d8:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   452dc:	mov	x22, x0
   452e0:	add	x0, sp, #0x8
   452e4:	mov	x1, x24
   452e8:	mov	x2, x23
   452ec:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   452f0:	mov	x23, x0
   452f4:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   452f8:	cbnz	w0, 4541c <ZSTD_endStream@@Base+0x374c8>
   452fc:	add	x0, sp, #0x8
   45300:	add	x23, x21, x19
   45304:	add	x24, x20, #0x4
   45308:	ubfx	w20, w22, #16, #8
   4530c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45310:	sub	x22, x23, #0x3
   45314:	cmp	x22, x21
   45318:	b.ls	453d0 <ZSTD_endStream@@Base+0x3747c>  // b.plast
   4531c:	cbnz	w0, 453d0 <ZSTD_endStream@@Base+0x3747c>
   45320:	add	x0, sp, #0x8
   45324:	mov	w1, w20
   45328:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   4532c:	add	x8, x24, x0, lsl #1
   45330:	ldrb	w1, [x8, #1]
   45334:	ldrb	w25, [x8]
   45338:	add	x0, sp, #0x8
   4533c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45340:	add	x0, sp, #0x8
   45344:	mov	w1, w20
   45348:	strb	w25, [x21]
   4534c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45350:	add	x8, x24, x0, lsl #1
   45354:	ldrb	w1, [x8, #1]
   45358:	ldrb	w25, [x8]
   4535c:	add	x0, sp, #0x8
   45360:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45364:	add	x0, sp, #0x8
   45368:	mov	w1, w20
   4536c:	strb	w25, [x21, #1]
   45370:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45374:	add	x8, x24, x0, lsl #1
   45378:	ldrb	w1, [x8, #1]
   4537c:	ldrb	w25, [x8]
   45380:	add	x0, sp, #0x8
   45384:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45388:	add	x0, sp, #0x8
   4538c:	mov	w1, w20
   45390:	strb	w25, [x21, #2]
   45394:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45398:	add	x8, x24, x0, lsl #1
   4539c:	ldrb	w1, [x8, #1]
   453a0:	ldrb	w26, [x8]
   453a4:	add	x0, sp, #0x8
   453a8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   453ac:	add	x0, sp, #0x8
   453b0:	add	x25, x21, #0x4
   453b4:	strb	w26, [x21, #3]
   453b8:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   453bc:	cmp	x25, x22
   453c0:	b.cs	453d4 <ZSTD_endStream@@Base+0x37480>  // b.hs, b.nlast
   453c4:	mov	x21, x25
   453c8:	cbz	w0, 45320 <ZSTD_endStream@@Base+0x373cc>
   453cc:	b	453d4 <ZSTD_endStream@@Base+0x37480>
   453d0:	mov	x25, x21
   453d4:	cmp	x25, x23
   453d8:	b.cs	45408 <ZSTD_endStream@@Base+0x374b4>  // b.hs, b.nlast
   453dc:	add	x0, sp, #0x8
   453e0:	mov	w1, w20
   453e4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   453e8:	add	x8, x24, x0, lsl #1
   453ec:	ldrb	w1, [x8, #1]
   453f0:	ldrb	w21, [x8]
   453f4:	add	x0, sp, #0x8
   453f8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   453fc:	strb	w21, [x25], #1
   45400:	cmp	x23, x25
   45404:	b.ne	453dc <ZSTD_endStream@@Base+0x37488>  // b.any
   45408:	add	x0, sp, #0x8
   4540c:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   45410:	cmp	w0, #0x0
   45414:	mov	x8, #0xffffffffffffffec    	// #-20
   45418:	csel	x23, x8, x19, eq  // eq = none
   4541c:	mov	x0, x23
   45420:	ldp	x20, x19, [sp, #112]
   45424:	ldp	x22, x21, [sp, #96]
   45428:	ldp	x24, x23, [sp, #80]
   4542c:	ldp	x26, x25, [sp, #64]
   45430:	ldp	x29, x30, [sp, #48]
   45434:	add	sp, sp, #0x80
   45438:	ret
   4543c:	stp	x29, x30, [sp, #-64]!
   45440:	stp	x24, x23, [sp, #16]
   45444:	stp	x22, x21, [sp, #32]
   45448:	stp	x20, x19, [sp, #48]
   4544c:	mov	x21, x4
   45450:	mov	x23, x3
   45454:	mov	x20, x2
   45458:	mov	x22, x1
   4545c:	mov	x1, x3
   45460:	mov	x2, x4
   45464:	mov	x3, x5
   45468:	mov	x4, x6
   4546c:	mov	x29, sp
   45470:	mov	x19, x0
   45474:	bl	45094 <ZSTD_endStream@@Base+0x37140>
   45478:	mov	x24, x0
   4547c:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   45480:	cbnz	w0, 454b0 <ZSTD_endStream@@Base+0x3755c>
   45484:	cmp	x24, x21
   45488:	b.cs	454ac <ZSTD_endStream@@Base+0x37558>  // b.hs, b.nlast
   4548c:	add	x2, x23, x24
   45490:	sub	x3, x21, x24
   45494:	mov	x0, x22
   45498:	mov	x1, x20
   4549c:	mov	x4, x19
   454a0:	bl	452a4 <ZSTD_endStream@@Base+0x37350>
   454a4:	mov	x24, x0
   454a8:	b	454b0 <ZSTD_endStream@@Base+0x3755c>
   454ac:	mov	x24, #0xffffffffffffffb8    	// #-72
   454b0:	mov	x0, x24
   454b4:	ldp	x20, x19, [sp, #48]
   454b8:	ldp	x22, x21, [sp, #32]
   454bc:	ldp	x24, x23, [sp, #16]
   454c0:	ldp	x29, x30, [sp], #64
   454c4:	ret
   454c8:	stp	x29, x30, [sp, #-32]!
   454cc:	str	x28, [sp, #16]
   454d0:	mov	x29, sp
   454d4:	sub	sp, sp, #0x800
   454d8:	mov	x5, sp
   454dc:	mov	w6, #0x800                 	// #2048
   454e0:	bl	4543c <ZSTD_endStream@@Base+0x374e8>
   454e4:	add	sp, sp, #0x800
   454e8:	ldr	x28, [sp, #16]
   454ec:	ldp	x29, x30, [sp], #32
   454f0:	ret
   454f4:	stp	x29, x30, [sp, #-64]!
   454f8:	str	x28, [sp, #16]
   454fc:	stp	x22, x21, [sp, #32]
   45500:	stp	x20, x19, [sp, #48]
   45504:	mov	x29, sp
   45508:	sub	sp, sp, #0x2, lsl #12
   4550c:	sub	sp, sp, #0x10
   45510:	mov	x20, x2
   45514:	mov	x21, x1
   45518:	mov	x22, x0
   4551c:	add	x0, sp, #0xc
   45520:	mov	w2, #0x2004                	// #8196
   45524:	mov	w1, wzr
   45528:	mov	x19, x3
   4552c:	bl	46a0 <memset@plt>
   45530:	mov	w8, #0xb                   	// #11
   45534:	movk	w8, #0xb00, lsl #16
   45538:	add	x0, sp, #0xc
   4553c:	mov	x1, x22
   45540:	mov	x2, x21
   45544:	mov	x3, x20
   45548:	mov	x4, x19
   4554c:	str	w8, [sp, #12]
   45550:	bl	454c8 <ZSTD_endStream@@Base+0x37574>
   45554:	add	sp, sp, #0x2, lsl #12
   45558:	add	sp, sp, #0x10
   4555c:	ldp	x20, x19, [sp, #48]
   45560:	ldp	x22, x21, [sp, #32]
   45564:	ldr	x28, [sp, #16]
   45568:	ldp	x29, x30, [sp], #64
   4556c:	ret
   45570:	stp	x29, x30, [sp, #-64]!
   45574:	str	x23, [sp, #16]
   45578:	mov	x23, x0
   4557c:	mov	x0, x4
   45580:	stp	x22, x21, [sp, #32]
   45584:	stp	x20, x19, [sp, #48]
   45588:	mov	x29, sp
   4558c:	mov	x19, x4
   45590:	mov	x20, x3
   45594:	mov	x21, x2
   45598:	mov	x22, x1
   4559c:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   455a0:	tst	x0, #0xff00
   455a4:	b.eq	455b0 <ZSTD_endStream@@Base+0x3765c>  // b.none
   455a8:	mov	x0, #0xffffffffffffffff    	// #-1
   455ac:	b	455c8 <ZSTD_endStream@@Base+0x37674>
   455b0:	mov	x0, x23
   455b4:	mov	x1, x22
   455b8:	mov	x2, x21
   455bc:	mov	x3, x20
   455c0:	mov	x4, x19
   455c4:	bl	455dc <ZSTD_endStream@@Base+0x37688>
   455c8:	ldp	x20, x19, [sp, #48]
   455cc:	ldp	x22, x21, [sp, #32]
   455d0:	ldr	x23, [sp, #16]
   455d4:	ldp	x29, x30, [sp], #64
   455d8:	ret
   455dc:	sub	sp, sp, #0x150
   455e0:	cmp	x3, #0xa
   455e4:	stp	x29, x30, [sp, #240]
   455e8:	stp	x28, x27, [sp, #256]
   455ec:	stp	x26, x25, [sp, #272]
   455f0:	stp	x24, x23, [sp, #288]
   455f4:	stp	x22, x21, [sp, #304]
   455f8:	stp	x20, x19, [sp, #320]
   455fc:	add	x29, sp, #0xf0
   45600:	b.cc	45658 <ZSTD_endStream@@Base+0x37704>  // b.lo, b.ul, b.last
   45604:	mov	x21, x0
   45608:	mov	x0, x2
   4560c:	mov	x20, x4
   45610:	mov	x23, x3
   45614:	mov	x22, x2
   45618:	mov	x19, x1
   4561c:	bl	48068 <ZSTD_endStream@@Base+0x3a114>
   45620:	and	x27, x0, #0xffff
   45624:	add	x0, x22, #0x2
   45628:	bl	48068 <ZSTD_endStream@@Base+0x3a114>
   4562c:	and	x26, x0, #0xffff
   45630:	add	x0, x22, #0x4
   45634:	bl	48068 <ZSTD_endStream@@Base+0x3a114>
   45638:	and	x24, x0, #0xffff
   4563c:	add	x8, x27, x26
   45640:	add	x8, x8, x24
   45644:	mov	x0, x20
   45648:	add	x25, x8, #0x6
   4564c:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   45650:	subs	x25, x23, x25
   45654:	b.cs	45680 <ZSTD_endStream@@Base+0x3772c>  // b.hs, b.nlast
   45658:	mov	x22, #0xffffffffffffffec    	// #-20
   4565c:	mov	x0, x22
   45660:	ldp	x20, x19, [sp, #320]
   45664:	ldp	x22, x21, [sp, #304]
   45668:	ldp	x24, x23, [sp, #288]
   4566c:	ldp	x26, x25, [sp, #272]
   45670:	ldp	x28, x27, [sp, #256]
   45674:	ldp	x29, x30, [sp, #240]
   45678:	add	sp, sp, #0x150
   4567c:	ret
   45680:	add	x28, x22, #0x6
   45684:	mov	x23, x0
   45688:	sub	x0, x29, #0x30
   4568c:	mov	x1, x28
   45690:	mov	x2, x27
   45694:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   45698:	mov	x22, x0
   4569c:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   456a0:	cbnz	w0, 4565c <ZSTD_endStream@@Base+0x37708>
   456a4:	add	x27, x28, x27
   456a8:	sub	x0, x29, #0x58
   456ac:	mov	x1, x27
   456b0:	mov	x2, x26
   456b4:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   456b8:	mov	x28, x0
   456bc:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   456c0:	cmp	w0, #0x0
   456c4:	csel	x22, x22, x28, eq  // eq = none
   456c8:	cbnz	w0, 4565c <ZSTD_endStream@@Base+0x37708>
   456cc:	add	x26, x27, x26
   456d0:	add	x0, sp, #0x70
   456d4:	mov	x1, x26
   456d8:	mov	x2, x24
   456dc:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   456e0:	mov	x27, x0
   456e4:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   456e8:	cmp	w0, #0x0
   456ec:	csel	x22, x22, x27, eq  // eq = none
   456f0:	cbnz	w0, 4565c <ZSTD_endStream@@Base+0x37708>
   456f4:	add	x1, x26, x24
   456f8:	add	x0, sp, #0x48
   456fc:	mov	x2, x25
   45700:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   45704:	mov	x24, x0
   45708:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   4570c:	cmp	w0, #0x0
   45710:	csel	x22, x22, x24, eq  // eq = none
   45714:	cbnz	w0, 4565c <ZSTD_endStream@@Base+0x37708>
   45718:	add	x8, x19, #0x3
   4571c:	lsr	x28, x8, #2
   45720:	add	x8, x21, x28
   45724:	str	x8, [sp, #24]
   45728:	add	x8, x8, x28
   4572c:	sub	x0, x29, #0x30
   45730:	add	x25, x21, x19
   45734:	add	x26, x20, #0x4
   45738:	str	x8, [sp, #32]
   4573c:	add	x27, x8, x28
   45740:	ubfx	w20, w23, #16, #8
   45744:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45748:	mov	w22, w0
   4574c:	sub	x0, x29, #0x58
   45750:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45754:	mov	w23, w0
   45758:	add	x0, sp, #0x70
   4575c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45760:	mov	w24, w0
   45764:	add	x0, sp, #0x48
   45768:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   4576c:	sub	x8, x25, #0x3
   45770:	cmp	x27, x8
   45774:	stp	x25, x27, [sp, #8]
   45778:	cset	w25, cc  // cc = lo, ul, last
   4577c:	str	x8, [sp, #64]
   45780:	b.cs	45a68 <ZSTD_endStream@@Base+0x37b14>  // b.hs, b.nlast
   45784:	orr	w8, w23, w22
   45788:	orr	w8, w8, w24
   4578c:	orr	w8, w8, w0
   45790:	str	w8, [sp, #52]
   45794:	cbnz	w8, 45a68 <ZSTD_endStream@@Base+0x37b14>
   45798:	lsl	x8, x28, #1
   4579c:	str	x8, [sp, #56]
   457a0:	add	x8, x8, x28
   457a4:	str	x8, [sp, #40]
   457a8:	ldr	x8, [sp, #56]
   457ac:	sub	x0, x29, #0x30
   457b0:	mov	w1, w20
   457b4:	add	x24, x21, x28
   457b8:	add	x27, x21, x8
   457bc:	ldr	x8, [sp, #40]
   457c0:	add	x25, x21, x8
   457c4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   457c8:	add	x8, x26, x0, lsl #1
   457cc:	ldrb	w1, [x8, #1]
   457d0:	ldrb	w22, [x8]
   457d4:	sub	x0, x29, #0x30
   457d8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   457dc:	sub	x0, x29, #0x58
   457e0:	mov	w1, w20
   457e4:	strb	w22, [x21]
   457e8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   457ec:	add	x8, x26, x0, lsl #1
   457f0:	ldrb	w1, [x8, #1]
   457f4:	ldrb	w22, [x8]
   457f8:	sub	x0, x29, #0x58
   457fc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45800:	add	x0, sp, #0x70
   45804:	mov	w1, w20
   45808:	strb	w22, [x24]
   4580c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45810:	add	x8, x26, x0, lsl #1
   45814:	ldrb	w1, [x8, #1]
   45818:	ldrb	w22, [x8]
   4581c:	add	x0, sp, #0x70
   45820:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45824:	add	x0, sp, #0x48
   45828:	mov	w1, w20
   4582c:	strb	w22, [x27]
   45830:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45834:	add	x8, x26, x0, lsl #1
   45838:	ldrb	w1, [x8, #1]
   4583c:	ldrb	w22, [x8]
   45840:	add	x0, sp, #0x48
   45844:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45848:	sub	x0, x29, #0x30
   4584c:	mov	w1, w20
   45850:	strb	w22, [x25]
   45854:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45858:	add	x8, x26, x0, lsl #1
   4585c:	ldrb	w1, [x8, #1]
   45860:	ldrb	w22, [x8]
   45864:	sub	x0, x29, #0x30
   45868:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4586c:	sub	x0, x29, #0x58
   45870:	mov	w1, w20
   45874:	strb	w22, [x21, #1]
   45878:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   4587c:	add	x8, x26, x0, lsl #1
   45880:	ldrb	w1, [x8, #1]
   45884:	ldrb	w22, [x8]
   45888:	sub	x0, x29, #0x58
   4588c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45890:	add	x0, sp, #0x70
   45894:	mov	w1, w20
   45898:	strb	w22, [x24, #1]
   4589c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   458a0:	add	x8, x26, x0, lsl #1
   458a4:	ldrb	w1, [x8, #1]
   458a8:	ldrb	w22, [x8]
   458ac:	add	x0, sp, #0x70
   458b0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   458b4:	add	x0, sp, #0x48
   458b8:	mov	w1, w20
   458bc:	strb	w22, [x27, #1]
   458c0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   458c4:	add	x8, x26, x0, lsl #1
   458c8:	ldrb	w1, [x8, #1]
   458cc:	ldrb	w22, [x8]
   458d0:	add	x0, sp, #0x48
   458d4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   458d8:	sub	x0, x29, #0x30
   458dc:	mov	w1, w20
   458e0:	strb	w22, [x25, #1]
   458e4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   458e8:	add	x8, x26, x0, lsl #1
   458ec:	ldrb	w1, [x8, #1]
   458f0:	ldrb	w22, [x8]
   458f4:	sub	x0, x29, #0x30
   458f8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   458fc:	sub	x0, x29, #0x58
   45900:	mov	w1, w20
   45904:	strb	w22, [x21, #2]
   45908:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   4590c:	add	x8, x26, x0, lsl #1
   45910:	ldrb	w1, [x8, #1]
   45914:	ldrb	w22, [x8]
   45918:	sub	x0, x29, #0x58
   4591c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45920:	add	x0, sp, #0x70
   45924:	mov	w1, w20
   45928:	strb	w22, [x24, #2]
   4592c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45930:	add	x8, x26, x0, lsl #1
   45934:	ldrb	w1, [x8, #1]
   45938:	ldrb	w22, [x8]
   4593c:	add	x0, sp, #0x70
   45940:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45944:	add	x0, sp, #0x48
   45948:	mov	w1, w20
   4594c:	strb	w22, [x27, #2]
   45950:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45954:	add	x8, x26, x0, lsl #1
   45958:	ldrb	w1, [x8, #1]
   4595c:	ldrb	w22, [x8]
   45960:	add	x0, sp, #0x48
   45964:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45968:	sub	x0, x29, #0x30
   4596c:	mov	w1, w20
   45970:	strb	w22, [x25, #2]
   45974:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45978:	add	x8, x26, x0, lsl #1
   4597c:	ldrb	w1, [x8, #1]
   45980:	ldrb	w23, [x8]
   45984:	sub	x0, x29, #0x30
   45988:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4598c:	sub	x0, x29, #0x58
   45990:	mov	w1, w20
   45994:	add	x22, x21, #0x4
   45998:	strb	w23, [x21, #3]
   4599c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   459a0:	add	x8, x26, x0, lsl #1
   459a4:	ldrb	w1, [x8, #1]
   459a8:	ldrb	w21, [x8]
   459ac:	sub	x0, x29, #0x58
   459b0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   459b4:	add	x0, sp, #0x70
   459b8:	mov	w1, w20
   459bc:	strb	w21, [x24, #3]
   459c0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   459c4:	add	x8, x26, x0, lsl #1
   459c8:	ldrb	w1, [x8, #1]
   459cc:	ldrb	w21, [x8]
   459d0:	add	x0, sp, #0x70
   459d4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   459d8:	ldr	x23, [sp, #64]
   459dc:	add	x0, sp, #0x48
   459e0:	mov	w1, w20
   459e4:	strb	w21, [x27, #3]
   459e8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   459ec:	add	x8, x26, x0, lsl #1
   459f0:	ldrb	w1, [x8, #1]
   459f4:	ldrb	w21, [x8]
   459f8:	add	x0, sp, #0x48
   459fc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45a00:	sub	x0, x29, #0x30
   45a04:	strb	w21, [x25, #3]
   45a08:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45a0c:	sub	x0, x29, #0x58
   45a10:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45a14:	add	x0, sp, #0x70
   45a18:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45a1c:	add	x0, sp, #0x48
   45a20:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45a24:	ldr	w9, [sp, #52]
   45a28:	add	x8, x25, #0x4
   45a2c:	cmp	x8, x23
   45a30:	cset	w25, cc  // cc = lo, ul, last
   45a34:	cbnz	w9, 45a44 <ZSTD_endStream@@Base+0x37af0>
   45a38:	cmp	x8, x23
   45a3c:	mov	x21, x22
   45a40:	b.cc	457a8 <ZSTD_endStream@@Base+0x37854>  // b.lo, b.ul, b.last
   45a44:	ldr	x8, [sp, #56]
   45a48:	ldr	x9, [sp, #32]
   45a4c:	add	x27, x22, x28
   45a50:	mov	x21, x22
   45a54:	add	x24, x22, x8
   45a58:	add	x8, x8, x28
   45a5c:	add	x23, x22, x8
   45a60:	ldr	x8, [sp, #16]
   45a64:	b	45a78 <ZSTD_endStream@@Base+0x37b24>
   45a68:	ldp	x8, x27, [sp, #16]
   45a6c:	ldr	x9, [sp, #32]
   45a70:	mov	x23, x8
   45a74:	mov	x24, x9
   45a78:	cmp	x24, x8
   45a7c:	mov	x22, #0xffffffffffffffec    	// #-20
   45a80:	b.hi	4565c <ZSTD_endStream@@Base+0x37708>  // b.pmore
   45a84:	cmp	x27, x9
   45a88:	b.hi	4565c <ZSTD_endStream@@Base+0x37708>  // b.pmore
   45a8c:	ldr	x28, [sp, #24]
   45a90:	cmp	x21, x28
   45a94:	b.hi	4565c <ZSTD_endStream@@Base+0x37708>  // b.pmore
   45a98:	sub	x0, x29, #0x30
   45a9c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45aa0:	sub	x8, x28, #0x3
   45aa4:	cmp	x8, x21
   45aa8:	str	x8, [sp, #56]
   45aac:	b.ls	45b68 <ZSTD_endStream@@Base+0x37c14>  // b.plast
   45ab0:	cbnz	w0, 45b68 <ZSTD_endStream@@Base+0x37c14>
   45ab4:	sub	x0, x29, #0x30
   45ab8:	mov	w1, w20
   45abc:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45ac0:	add	x8, x26, x0, lsl #1
   45ac4:	ldrb	w1, [x8, #1]
   45ac8:	ldrb	w28, [x8]
   45acc:	sub	x0, x29, #0x30
   45ad0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45ad4:	sub	x0, x29, #0x30
   45ad8:	mov	w1, w20
   45adc:	strb	w28, [x21]
   45ae0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45ae4:	add	x8, x26, x0, lsl #1
   45ae8:	ldrb	w1, [x8, #1]
   45aec:	ldrb	w28, [x8]
   45af0:	sub	x0, x29, #0x30
   45af4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45af8:	sub	x0, x29, #0x30
   45afc:	mov	w1, w20
   45b00:	strb	w28, [x21, #1]
   45b04:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45b08:	add	x8, x26, x0, lsl #1
   45b0c:	ldrb	w1, [x8, #1]
   45b10:	ldrb	w28, [x8]
   45b14:	sub	x0, x29, #0x30
   45b18:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45b1c:	sub	x0, x29, #0x30
   45b20:	mov	w1, w20
   45b24:	strb	w28, [x21, #2]
   45b28:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45b2c:	add	x8, x26, x0, lsl #1
   45b30:	ldrb	w1, [x8, #1]
   45b34:	ldrb	w22, [x8]
   45b38:	sub	x0, x29, #0x30
   45b3c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45b40:	sub	x0, x29, #0x30
   45b44:	add	x28, x21, #0x4
   45b48:	strb	w22, [x21, #3]
   45b4c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45b50:	ldr	x8, [sp, #56]
   45b54:	cmp	x28, x8
   45b58:	b.cs	45b6c <ZSTD_endStream@@Base+0x37c18>  // b.hs, b.nlast
   45b5c:	mov	x21, x28
   45b60:	cbz	w0, 45ab4 <ZSTD_endStream@@Base+0x37b60>
   45b64:	b	45b6c <ZSTD_endStream@@Base+0x37c18>
   45b68:	mov	x28, x21
   45b6c:	ldr	x22, [sp, #24]
   45b70:	cmp	x28, x22
   45b74:	b.cs	45ba4 <ZSTD_endStream@@Base+0x37c50>  // b.hs, b.nlast
   45b78:	sub	x0, x29, #0x30
   45b7c:	mov	w1, w20
   45b80:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45b84:	add	x8, x26, x0, lsl #1
   45b88:	ldrb	w1, [x8, #1]
   45b8c:	ldrb	w21, [x8]
   45b90:	sub	x0, x29, #0x30
   45b94:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45b98:	strb	w21, [x28], #1
   45b9c:	cmp	x22, x28
   45ba0:	b.ne	45b78 <ZSTD_endStream@@Base+0x37c24>  // b.any
   45ba4:	sub	x0, x29, #0x58
   45ba8:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45bac:	ldr	x8, [sp, #32]
   45bb0:	sub	x21, x8, #0x3
   45bb4:	cmp	x21, x27
   45bb8:	b.ls	45c70 <ZSTD_endStream@@Base+0x37d1c>  // b.plast
   45bbc:	cbnz	w0, 45c70 <ZSTD_endStream@@Base+0x37d1c>
   45bc0:	sub	x0, x29, #0x58
   45bc4:	mov	w1, w20
   45bc8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45bcc:	add	x8, x26, x0, lsl #1
   45bd0:	ldrb	w1, [x8, #1]
   45bd4:	ldrb	w22, [x8]
   45bd8:	sub	x0, x29, #0x58
   45bdc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45be0:	sub	x0, x29, #0x58
   45be4:	mov	w1, w20
   45be8:	strb	w22, [x27]
   45bec:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45bf0:	add	x8, x26, x0, lsl #1
   45bf4:	ldrb	w1, [x8, #1]
   45bf8:	ldrb	w22, [x8]
   45bfc:	sub	x0, x29, #0x58
   45c00:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45c04:	sub	x0, x29, #0x58
   45c08:	mov	w1, w20
   45c0c:	strb	w22, [x27, #1]
   45c10:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45c14:	add	x8, x26, x0, lsl #1
   45c18:	ldrb	w1, [x8, #1]
   45c1c:	ldrb	w22, [x8]
   45c20:	sub	x0, x29, #0x58
   45c24:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45c28:	sub	x0, x29, #0x58
   45c2c:	mov	w1, w20
   45c30:	strb	w22, [x27, #2]
   45c34:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45c38:	add	x8, x26, x0, lsl #1
   45c3c:	ldrb	w1, [x8, #1]
   45c40:	ldrb	w28, [x8]
   45c44:	sub	x0, x29, #0x58
   45c48:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45c4c:	sub	x0, x29, #0x58
   45c50:	add	x22, x27, #0x4
   45c54:	strb	w28, [x27, #3]
   45c58:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45c5c:	cmp	x22, x21
   45c60:	b.cs	45c74 <ZSTD_endStream@@Base+0x37d20>  // b.hs, b.nlast
   45c64:	mov	x27, x22
   45c68:	cbz	w0, 45bc0 <ZSTD_endStream@@Base+0x37c6c>
   45c6c:	b	45c74 <ZSTD_endStream@@Base+0x37d20>
   45c70:	mov	x22, x27
   45c74:	ldr	x27, [sp, #32]
   45c78:	cmp	x22, x27
   45c7c:	b.cs	45cac <ZSTD_endStream@@Base+0x37d58>  // b.hs, b.nlast
   45c80:	sub	x0, x29, #0x58
   45c84:	mov	w1, w20
   45c88:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45c8c:	add	x8, x26, x0, lsl #1
   45c90:	ldrb	w1, [x8, #1]
   45c94:	ldrb	w21, [x8]
   45c98:	sub	x0, x29, #0x58
   45c9c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45ca0:	strb	w21, [x22], #1
   45ca4:	cmp	x27, x22
   45ca8:	b.ne	45c80 <ZSTD_endStream@@Base+0x37d2c>  // b.any
   45cac:	add	x0, sp, #0x70
   45cb0:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45cb4:	ldr	x28, [sp, #16]
   45cb8:	sub	x21, x28, #0x3
   45cbc:	cmp	x21, x24
   45cc0:	b.ls	45d78 <ZSTD_endStream@@Base+0x37e24>  // b.plast
   45cc4:	cbnz	w0, 45d78 <ZSTD_endStream@@Base+0x37e24>
   45cc8:	add	x0, sp, #0x70
   45ccc:	mov	w1, w20
   45cd0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45cd4:	add	x8, x26, x0, lsl #1
   45cd8:	ldrb	w1, [x8, #1]
   45cdc:	ldrb	w22, [x8]
   45ce0:	add	x0, sp, #0x70
   45ce4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45ce8:	add	x0, sp, #0x70
   45cec:	mov	w1, w20
   45cf0:	strb	w22, [x24]
   45cf4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45cf8:	add	x8, x26, x0, lsl #1
   45cfc:	ldrb	w1, [x8, #1]
   45d00:	ldrb	w22, [x8]
   45d04:	add	x0, sp, #0x70
   45d08:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45d0c:	add	x0, sp, #0x70
   45d10:	mov	w1, w20
   45d14:	strb	w22, [x24, #1]
   45d18:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45d1c:	add	x8, x26, x0, lsl #1
   45d20:	ldrb	w1, [x8, #1]
   45d24:	ldrb	w22, [x8]
   45d28:	add	x0, sp, #0x70
   45d2c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45d30:	add	x0, sp, #0x70
   45d34:	mov	w1, w20
   45d38:	strb	w22, [x24, #2]
   45d3c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45d40:	add	x8, x26, x0, lsl #1
   45d44:	ldrb	w1, [x8, #1]
   45d48:	ldrb	w27, [x8]
   45d4c:	add	x0, sp, #0x70
   45d50:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45d54:	add	x0, sp, #0x70
   45d58:	add	x22, x24, #0x4
   45d5c:	strb	w27, [x24, #3]
   45d60:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45d64:	cmp	x22, x21
   45d68:	b.cs	45d7c <ZSTD_endStream@@Base+0x37e28>  // b.hs, b.nlast
   45d6c:	mov	x24, x22
   45d70:	cbz	w0, 45cc8 <ZSTD_endStream@@Base+0x37d74>
   45d74:	b	45d7c <ZSTD_endStream@@Base+0x37e28>
   45d78:	mov	x22, x24
   45d7c:	cmp	x22, x28
   45d80:	b.cs	45db0 <ZSTD_endStream@@Base+0x37e5c>  // b.hs, b.nlast
   45d84:	add	x0, sp, #0x70
   45d88:	mov	w1, w20
   45d8c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45d90:	add	x8, x26, x0, lsl #1
   45d94:	ldrb	w1, [x8, #1]
   45d98:	ldrb	w21, [x8]
   45d9c:	add	x0, sp, #0x70
   45da0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45da4:	strb	w21, [x22], #1
   45da8:	cmp	x28, x22
   45dac:	b.ne	45d84 <ZSTD_endStream@@Base+0x37e30>  // b.any
   45db0:	add	x0, sp, #0x48
   45db4:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45db8:	ldr	x24, [sp, #64]
   45dbc:	cmp	w0, #0x0
   45dc0:	cset	w8, ne  // ne = any
   45dc4:	eor	w9, w25, #0x1
   45dc8:	orr	w8, w9, w8
   45dcc:	tbnz	w8, #0, 45e80 <ZSTD_endStream@@Base+0x37f2c>
   45dd0:	add	x0, sp, #0x48
   45dd4:	mov	w1, w20
   45dd8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45ddc:	add	x8, x26, x0, lsl #1
   45de0:	ldrb	w1, [x8, #1]
   45de4:	ldrb	w21, [x8]
   45de8:	add	x0, sp, #0x48
   45dec:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45df0:	add	x0, sp, #0x48
   45df4:	mov	w1, w20
   45df8:	strb	w21, [x23]
   45dfc:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45e00:	add	x8, x26, x0, lsl #1
   45e04:	ldrb	w1, [x8, #1]
   45e08:	ldrb	w21, [x8]
   45e0c:	add	x0, sp, #0x48
   45e10:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45e14:	add	x0, sp, #0x48
   45e18:	mov	w1, w20
   45e1c:	strb	w21, [x23, #1]
   45e20:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45e24:	add	x8, x26, x0, lsl #1
   45e28:	ldrb	w1, [x8, #1]
   45e2c:	ldrb	w21, [x8]
   45e30:	add	x0, sp, #0x48
   45e34:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45e38:	add	x0, sp, #0x48
   45e3c:	mov	w1, w20
   45e40:	strb	w21, [x23, #2]
   45e44:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45e48:	add	x8, x26, x0, lsl #1
   45e4c:	ldrb	w1, [x8, #1]
   45e50:	ldrb	w22, [x8]
   45e54:	add	x0, sp, #0x48
   45e58:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45e5c:	add	x0, sp, #0x48
   45e60:	add	x21, x23, #0x4
   45e64:	strb	w22, [x23, #3]
   45e68:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   45e6c:	cmp	x21, x24
   45e70:	b.cs	45e84 <ZSTD_endStream@@Base+0x37f30>  // b.hs, b.nlast
   45e74:	mov	x23, x21
   45e78:	cbz	w0, 45dd0 <ZSTD_endStream@@Base+0x37e7c>
   45e7c:	b	45e84 <ZSTD_endStream@@Base+0x37f30>
   45e80:	mov	x21, x23
   45e84:	ldr	x23, [sp, #8]
   45e88:	cmp	x21, x23
   45e8c:	b.cs	45ebc <ZSTD_endStream@@Base+0x37f68>  // b.hs, b.nlast
   45e90:	add	x0, sp, #0x48
   45e94:	mov	w1, w20
   45e98:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   45e9c:	add	x8, x26, x0, lsl #1
   45ea0:	ldrb	w1, [x8, #1]
   45ea4:	ldrb	w22, [x8]
   45ea8:	add	x0, sp, #0x48
   45eac:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   45eb0:	strb	w22, [x21], #1
   45eb4:	cmp	x23, x21
   45eb8:	b.ne	45e90 <ZSTD_endStream@@Base+0x37f3c>  // b.any
   45ebc:	sub	x0, x29, #0x30
   45ec0:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   45ec4:	mov	w20, w0
   45ec8:	sub	x0, x29, #0x58
   45ecc:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   45ed0:	and	w20, w0, w20
   45ed4:	add	x0, sp, #0x70
   45ed8:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   45edc:	and	w20, w20, w0
   45ee0:	add	x0, sp, #0x48
   45ee4:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   45ee8:	tst	w20, w0
   45eec:	mov	x8, #0xffffffffffffffec    	// #-20
   45ef0:	csel	x22, x8, x19, eq  // eq = none
   45ef4:	b	4565c <ZSTD_endStream@@Base+0x37708>
   45ef8:	stp	x29, x30, [sp, #-16]!
   45efc:	mov	x29, sp
   45f00:	bl	45f0c <ZSTD_endStream@@Base+0x37fb8>
   45f04:	ldp	x29, x30, [sp], #16
   45f08:	ret
   45f0c:	stp	x29, x30, [sp, #-64]!
   45f10:	stp	x24, x23, [sp, #16]
   45f14:	stp	x22, x21, [sp, #32]
   45f18:	stp	x20, x19, [sp, #48]
   45f1c:	mov	x21, x4
   45f20:	mov	x23, x3
   45f24:	mov	x20, x2
   45f28:	mov	x22, x1
   45f2c:	mov	x1, x3
   45f30:	mov	x2, x4
   45f34:	mov	x3, x5
   45f38:	mov	x4, x6
   45f3c:	mov	x29, sp
   45f40:	mov	x19, x0
   45f44:	bl	45094 <ZSTD_endStream@@Base+0x37140>
   45f48:	mov	x24, x0
   45f4c:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   45f50:	cbnz	w0, 45f80 <ZSTD_endStream@@Base+0x3802c>
   45f54:	cmp	x24, x21
   45f58:	b.cs	45f7c <ZSTD_endStream@@Base+0x38028>  // b.hs, b.nlast
   45f5c:	add	x2, x23, x24
   45f60:	sub	x3, x21, x24
   45f64:	mov	x0, x22
   45f68:	mov	x1, x20
   45f6c:	mov	x4, x19
   45f70:	bl	455dc <ZSTD_endStream@@Base+0x37688>
   45f74:	mov	x24, x0
   45f78:	b	45f80 <ZSTD_endStream@@Base+0x3802c>
   45f7c:	mov	x24, #0xffffffffffffffb8    	// #-72
   45f80:	mov	x0, x24
   45f84:	ldp	x20, x19, [sp, #48]
   45f88:	ldp	x22, x21, [sp, #32]
   45f8c:	ldp	x24, x23, [sp, #16]
   45f90:	ldp	x29, x30, [sp], #64
   45f94:	ret
   45f98:	stp	x29, x30, [sp, #-32]!
   45f9c:	str	x28, [sp, #16]
   45fa0:	mov	x29, sp
   45fa4:	sub	sp, sp, #0x800
   45fa8:	mov	x5, sp
   45fac:	mov	w6, #0x800                 	// #2048
   45fb0:	bl	45ef8 <ZSTD_endStream@@Base+0x37fa4>
   45fb4:	add	sp, sp, #0x800
   45fb8:	ldr	x28, [sp, #16]
   45fbc:	ldp	x29, x30, [sp], #32
   45fc0:	ret
   45fc4:	stp	x29, x30, [sp, #-64]!
   45fc8:	str	x28, [sp, #16]
   45fcc:	stp	x22, x21, [sp, #32]
   45fd0:	stp	x20, x19, [sp, #48]
   45fd4:	mov	x29, sp
   45fd8:	sub	sp, sp, #0x2, lsl #12
   45fdc:	sub	sp, sp, #0x10
   45fe0:	mov	x20, x2
   45fe4:	mov	x21, x1
   45fe8:	mov	x22, x0
   45fec:	add	x0, sp, #0xc
   45ff0:	mov	w2, #0x2004                	// #8196
   45ff4:	mov	w1, wzr
   45ff8:	mov	x19, x3
   45ffc:	bl	46a0 <memset@plt>
   46000:	mov	w8, #0xb                   	// #11
   46004:	movk	w8, #0xb00, lsl #16
   46008:	add	x0, sp, #0xc
   4600c:	mov	x1, x22
   46010:	mov	x2, x21
   46014:	mov	x3, x20
   46018:	mov	x4, x19
   4601c:	str	w8, [sp, #12]
   46020:	bl	45f98 <ZSTD_endStream@@Base+0x38044>
   46024:	add	sp, sp, #0x2, lsl #12
   46028:	add	sp, sp, #0x10
   4602c:	ldp	x20, x19, [sp, #48]
   46030:	ldp	x22, x21, [sp, #32]
   46034:	ldr	x28, [sp, #16]
   46038:	ldp	x29, x30, [sp], #64
   4603c:	ret
   46040:	sub	sp, sp, #0x60
   46044:	stp	x29, x30, [sp, #16]
   46048:	stp	x26, x25, [sp, #32]
   4604c:	stp	x24, x23, [sp, #48]
   46050:	stp	x22, x21, [sp, #64]
   46054:	stp	x20, x19, [sp, #80]
   46058:	add	x29, sp, #0x10
   4605c:	mov	x21, x4
   46060:	mov	x20, x3
   46064:	mov	x22, x2
   46068:	mov	x26, x1
   4606c:	mov	x19, x0
   46070:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   46074:	cmp	x21, #0x5dc
   46078:	b.cc	460a4 <ZSTD_endStream@@Base+0x38150>  // b.lo, b.ul, b.last
   4607c:	mov	x21, x0
   46080:	and	w23, w21, #0xff
   46084:	add	x25, x20, #0x270
   46088:	movi	v0.2d, #0x0
   4608c:	cmp	w23, #0xc
   46090:	stur	q0, [x25, #92]
   46094:	stp	q0, q0, [x25, #64]
   46098:	stp	q0, q0, [x25, #32]
   4609c:	stp	q0, q0, [x25]
   460a0:	b.ls	460c8 <ZSTD_endStream@@Base+0x38174>  // b.plast
   460a4:	mov	x22, #0xffffffffffffffd4    	// #-44
   460a8:	mov	x0, x22
   460ac:	ldp	x20, x19, [sp, #80]
   460b0:	ldp	x22, x21, [sp, #64]
   460b4:	ldp	x24, x23, [sp, #48]
   460b8:	ldp	x26, x25, [sp, #32]
   460bc:	ldp	x29, x30, [sp, #16]
   460c0:	add	sp, sp, #0x60
   460c4:	ret
   460c8:	add	x24, x20, #0x4dc
   460cc:	add	x3, sp, #0x8
   460d0:	sub	x4, x29, #0x4
   460d4:	mov	w1, #0x100                 	// #256
   460d8:	mov	x0, x24
   460dc:	mov	x2, x25
   460e0:	mov	x5, x26
   460e4:	mov	x6, x22
   460e8:	bl	4ff4 <ZSTD_initDStream_usingDDict@plt+0x4e4>
   460ec:	mov	x22, x0
   460f0:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   460f4:	cbnz	w0, 460a8 <ZSTD_endStream@@Base+0x38154>
   460f8:	ldur	w9, [x29, #-4]
   460fc:	cmp	w9, w23
   46100:	b.hi	460a4 <ZSTD_endStream@@Base+0x38150>  // b.pmore
   46104:	mov	w10, wzr
   46108:	add	x0, x19, #0x4
   4610c:	add	x4, x20, #0x2a4
   46110:	add	x2, x20, #0x2dc
   46114:	add	x11, x20, #0x2a8
   46118:	add	w8, w9, w10
   4611c:	ldr	w8, [x25, w8, uxtw #2]
   46120:	sub	w10, w10, #0x1
   46124:	cbz	w8, 46118 <ZSTD_endStream@@Base+0x381c4>
   46128:	add	w12, w9, w10
   4612c:	add	w8, w12, #0x2
   46130:	cmp	w8, #0x2
   46134:	mov	w3, wzr
   46138:	b.cc	46168 <ZSTD_endStream@@Base+0x38214>  // b.lo, b.ul, b.last
   4613c:	mov	w14, w8
   46140:	mov	w15, wzr
   46144:	add	x13, x20, #0x274
   46148:	sub	x14, x14, #0x1
   4614c:	ldr	w16, [x13]
   46150:	str	w15, [x13, #56]
   46154:	subs	x14, x14, #0x1
   46158:	add	x13, x13, #0x4
   4615c:	add	w3, w16, w15
   46160:	mov	w15, w3
   46164:	b.ne	4614c <ZSTD_endStream@@Base+0x381f8>  // b.any
   46168:	str	w3, [x11]
   4616c:	ldr	w13, [sp, #8]
   46170:	cbz	w13, 461a8 <ZSTD_endStream@@Base+0x38254>
   46174:	ldr	w13, [sp, #8]
   46178:	mov	x14, xzr
   4617c:	ldrb	w15, [x24, x14]
   46180:	lsl	x16, x15, #2
   46184:	ldr	w17, [x11, x16]
   46188:	add	w18, w17, #0x1
   4618c:	add	x17, x2, x17, lsl #1
   46190:	str	w18, [x11, x16]
   46194:	strb	w14, [x17]
   46198:	add	x14, x14, #0x1
   4619c:	cmp	x14, x13
   461a0:	strb	w15, [x17, #1]
   461a4:	b.cc	4617c <ZSTD_endStream@@Base+0x38228>  // b.lo, b.ul, b.last
   461a8:	add	w6, w12, #0x1
   461ac:	cmp	w8, #0x2
   461b0:	str	wzr, [x11]
   461b4:	b.cc	461e8 <ZSTD_endStream@@Base+0x38294>  // b.lo, b.ul, b.last
   461b8:	mov	w13, w8
   461bc:	mov	w11, wzr
   461c0:	sub	w12, w23, w9
   461c4:	sub	x13, x13, #0x1
   461c8:	mov	x14, x20
   461cc:	str	w11, [x14, #4]!
   461d0:	ldr	w15, [x14, #624]
   461d4:	subs	x13, x13, #0x1
   461d8:	lsl	w15, w15, w12
   461dc:	add	w11, w15, w11
   461e0:	add	w12, w12, #0x1
   461e4:	b.ne	461cc <ZSTD_endStream@@Base+0x38278>  // b.any
   461e8:	add	w11, w23, w10
   461ec:	neg	w12, w10
   461f0:	add	w11, w11, #0x1
   461f4:	cmp	w12, w11
   461f8:	add	w7, w9, #0x1
   461fc:	b.cs	4625c <ZSTD_endStream@@Base+0x38308>  // b.hs, b.nlast
   46200:	neg	w13, w10
   46204:	mov	w9, w12
   46208:	mov	w12, #0x34                  	// #52
   4620c:	mov	w14, w8
   46210:	add	x10, x20, #0x4
   46214:	umull	x12, w13, w12
   46218:	sub	x13, x14, #0x1
   4621c:	b	46230 <ZSTD_endStream@@Base+0x382dc>
   46220:	add	x9, x9, #0x1
   46224:	cmp	w11, w9
   46228:	add	x12, x12, #0x34
   4622c:	b.eq	4625c <ZSTD_endStream@@Base+0x38308>  // b.none
   46230:	cmp	w8, #0x2
   46234:	b.cc	46220 <ZSTD_endStream@@Base+0x382cc>  // b.lo, b.ul, b.last
   46238:	mov	x14, x13
   4623c:	mov	x15, x10
   46240:	ldr	w16, [x15]
   46244:	subs	x14, x14, #0x1
   46248:	lsr	w16, w16, w9
   4624c:	str	w16, [x15, x12]
   46250:	add	x15, x15, #0x4
   46254:	b.ne	46240 <ZSTD_endStream@@Base+0x382ec>  // b.any
   46258:	b	46220 <ZSTD_endStream@@Base+0x382cc>
   4625c:	mov	w1, w23
   46260:	mov	x5, x20
   46264:	lsr	w24, w21, #24
   46268:	bl	46284 <ZSTD_endStream@@Base+0x38330>
   4626c:	mov	w8, #0x1                   	// #1
   46270:	strb	w21, [x19]
   46274:	strb	w21, [x19, #2]
   46278:	strb	w8, [x19, #1]
   4627c:	strb	w24, [x19, #3]
   46280:	b	460a8 <ZSTD_endStream@@Base+0x38154>
   46284:	sub	sp, sp, #0xe0
   46288:	stp	x29, x30, [sp, #128]
   4628c:	stp	x28, x27, [sp, #144]
   46290:	stp	x26, x25, [sp, #160]
   46294:	stp	x24, x23, [sp, #176]
   46298:	stp	x22, x21, [sp, #192]
   4629c:	stp	x20, x19, [sp, #208]
   462a0:	stp	x4, x5, [sp, #24]
   462a4:	str	w1, [sp, #56]
   462a8:	str	x0, [sp, #48]
   462ac:	ldr	w8, [x5, #48]
   462b0:	ldp	q1, q0, [x5, #16]
   462b4:	ldr	q2, [x5]
   462b8:	add	x29, sp, #0x80
   462bc:	str	w8, [sp, #112]
   462c0:	stp	q1, q0, [sp, #80]
   462c4:	str	q2, [sp, #64]
   462c8:	str	w3, [sp, #44]
   462cc:	cbz	w3, 463d0 <ZSTD_endStream@@Base+0x3847c>
   462d0:	ldr	w8, [sp, #56]
   462d4:	mov	w19, w7
   462d8:	mov	x23, x2
   462dc:	mov	x27, xzr
   462e0:	sub	w8, w7, w8
   462e4:	str	w8, [sp, #20]
   462e8:	ldr	w8, [sp, #44]
   462ec:	sub	w21, w7, w6
   462f0:	add	x22, sp, #0x40
   462f4:	mov	w11, #0x1                   	// #1
   462f8:	mov	w28, w8
   462fc:	b	46364 <ZSTD_endStream@@Base+0x38410>
   46300:	ldr	w9, [sp, #20]
   46304:	ldr	x10, [sp, #48]
   46308:	mov	w11, #0x34                  	// #52
   4630c:	mov	w2, w26
   46310:	add	w9, w26, w9
   46314:	cmp	w9, #0x1
   46318:	csinc	w4, w9, wzr, gt
   4631c:	ldr	x9, [sp, #24]
   46320:	add	x0, x10, x20, lsl #2
   46324:	ldr	x10, [sp, #32]
   46328:	mov	w7, w19
   4632c:	ldr	w9, [x9, w4, uxtw #2]
   46330:	strh	w1, [sp]
   46334:	umaddl	x3, w26, w11, x10
   46338:	ldr	w10, [sp, #44]
   4633c:	add	x5, x23, x9, lsl #1
   46340:	mov	w1, w8
   46344:	sub	w6, w10, w9
   46348:	bl	48084 <ZSTD_endStream@@Base+0x3a130>
   4634c:	mov	w11, #0x1                   	// #1
   46350:	add	x27, x27, #0x1
   46354:	add	w8, w24, w20
   46358:	cmp	x27, x28
   4635c:	str	w8, [x22, x25, lsl #2]
   46360:	b.eq	463d0 <ZSTD_endStream@@Base+0x3847c>  // b.none
   46364:	add	x8, x23, x27, lsl #1
   46368:	ldrb	w25, [x8, #1]
   4636c:	ldrb	w1, [x8]
   46370:	ldr	w8, [sp, #56]
   46374:	ldr	w20, [x22, x25, lsl #2]
   46378:	sub	w26, w19, w25
   4637c:	sub	w8, w8, w26
   46380:	cmp	w8, w21
   46384:	lsl	w24, w11, w8
   46388:	b.cs	46300 <ZSTD_endStream@@Base+0x383ac>  // b.hs, b.nlast
   4638c:	add	x0, sp, #0x3c
   46390:	bl	481bc <ZSTD_endStream@@Base+0x3a268>
   46394:	add	w9, w24, w20
   46398:	mov	w11, #0x1                   	// #1
   4639c:	cmp	w20, w9
   463a0:	strb	w26, [sp, #62]
   463a4:	strb	w11, [sp, #63]
   463a8:	b.cs	46350 <ZSTD_endStream@@Base+0x383fc>  // b.hs, b.nlast
   463ac:	mov	w10, w9
   463b0:	ldr	x9, [sp, #48]
   463b4:	ldr	w8, [sp, #60]
   463b8:	sub	x10, x10, x20
   463bc:	add	x9, x9, x20, lsl #2
   463c0:	subs	x10, x10, #0x1
   463c4:	str	w8, [x9], #4
   463c8:	b.ne	463c0 <ZSTD_endStream@@Base+0x3846c>  // b.any
   463cc:	b	46350 <ZSTD_endStream@@Base+0x383fc>
   463d0:	ldp	x20, x19, [sp, #208]
   463d4:	ldp	x22, x21, [sp, #192]
   463d8:	ldp	x24, x23, [sp, #176]
   463dc:	ldp	x26, x25, [sp, #160]
   463e0:	ldp	x28, x27, [sp, #144]
   463e4:	ldp	x29, x30, [sp, #128]
   463e8:	add	sp, sp, #0xe0
   463ec:	ret
   463f0:	stp	x29, x30, [sp, #-32]!
   463f4:	str	x28, [sp, #16]
   463f8:	mov	x29, sp
   463fc:	sub	sp, sp, #0x800
   46400:	mov	x3, sp
   46404:	mov	w4, #0x800                 	// #2048
   46408:	bl	46040 <ZSTD_endStream@@Base+0x380ec>
   4640c:	add	sp, sp, #0x800
   46410:	ldr	x28, [sp, #16]
   46414:	ldp	x29, x30, [sp], #32
   46418:	ret
   4641c:	stp	x29, x30, [sp, #-64]!
   46420:	str	x23, [sp, #16]
   46424:	mov	x23, x0
   46428:	mov	x0, x4
   4642c:	stp	x22, x21, [sp, #32]
   46430:	stp	x20, x19, [sp, #48]
   46434:	mov	x29, sp
   46438:	mov	x19, x4
   4643c:	mov	x20, x3
   46440:	mov	x21, x2
   46444:	mov	x22, x1
   46448:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   4644c:	and	x8, x0, #0xff00
   46450:	cmp	x8, #0x100
   46454:	b.ne	46474 <ZSTD_endStream@@Base+0x38520>  // b.any
   46458:	mov	x0, x23
   4645c:	mov	x1, x22
   46460:	mov	x2, x21
   46464:	mov	x3, x20
   46468:	mov	x4, x19
   4646c:	bl	4648c <ZSTD_endStream@@Base+0x38538>
   46470:	b	46478 <ZSTD_endStream@@Base+0x38524>
   46474:	mov	x0, #0xffffffffffffffff    	// #-1
   46478:	ldp	x20, x19, [sp, #48]
   4647c:	ldp	x22, x21, [sp, #32]
   46480:	ldr	x23, [sp, #16]
   46484:	ldp	x29, x30, [sp], #64
   46488:	ret
   4648c:	sub	sp, sp, #0x80
   46490:	stp	x22, x21, [sp, #96]
   46494:	stp	x20, x19, [sp, #112]
   46498:	mov	x19, x1
   4649c:	mov	x21, x0
   464a0:	add	x0, sp, #0x8
   464a4:	mov	x1, x2
   464a8:	mov	x2, x3
   464ac:	stp	x29, x30, [sp, #48]
   464b0:	str	x25, [sp, #64]
   464b4:	stp	x24, x23, [sp, #80]
   464b8:	add	x29, sp, #0x30
   464bc:	mov	x20, x4
   464c0:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   464c4:	mov	x22, x0
   464c8:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   464cc:	cbnz	w0, 466d0 <ZSTD_endStream@@Base+0x3877c>
   464d0:	mov	x0, x20
   464d4:	add	x23, x21, x19
   464d8:	add	x22, x20, #0x4
   464dc:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   464e0:	ubfx	w20, w0, #16, #8
   464e4:	add	x0, sp, #0x8
   464e8:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   464ec:	sub	x24, x23, #0x7
   464f0:	cmp	x24, x21
   464f4:	b.ls	465c0 <ZSTD_endStream@@Base+0x3866c>  // b.plast
   464f8:	cbnz	w0, 465c0 <ZSTD_endStream@@Base+0x3866c>
   464fc:	add	x0, sp, #0x8
   46500:	mov	w1, w20
   46504:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46508:	add	x25, x22, x0, lsl #2
   4650c:	ldrh	w8, [x25]
   46510:	add	x0, sp, #0x8
   46514:	strh	w8, [x21]
   46518:	ldrb	w1, [x25, #2]
   4651c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46520:	ldrb	w8, [x25, #3]
   46524:	add	x0, sp, #0x8
   46528:	mov	w1, w20
   4652c:	add	x21, x21, x8
   46530:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46534:	add	x25, x22, x0, lsl #2
   46538:	ldrh	w8, [x25]
   4653c:	add	x0, sp, #0x8
   46540:	strh	w8, [x21]
   46544:	ldrb	w1, [x25, #2]
   46548:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4654c:	ldrb	w8, [x25, #3]
   46550:	add	x0, sp, #0x8
   46554:	mov	w1, w20
   46558:	add	x21, x21, x8
   4655c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46560:	add	x25, x22, x0, lsl #2
   46564:	ldrh	w8, [x25]
   46568:	add	x0, sp, #0x8
   4656c:	strh	w8, [x21]
   46570:	ldrb	w1, [x25, #2]
   46574:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46578:	ldrb	w8, [x25, #3]
   4657c:	add	x0, sp, #0x8
   46580:	mov	w1, w20
   46584:	add	x21, x21, x8
   46588:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   4658c:	add	x25, x22, x0, lsl #2
   46590:	ldrh	w8, [x25]
   46594:	add	x0, sp, #0x8
   46598:	strh	w8, [x21]
   4659c:	ldrb	w1, [x25, #2]
   465a0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   465a4:	ldrb	w8, [x25, #3]
   465a8:	add	x0, sp, #0x8
   465ac:	add	x21, x21, x8
   465b0:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   465b4:	cbnz	w0, 465c0 <ZSTD_endStream@@Base+0x3866c>
   465b8:	cmp	x21, x24
   465bc:	b.cc	464fc <ZSTD_endStream@@Base+0x385a8>  // b.lo, b.ul, b.last
   465c0:	add	x0, sp, #0x8
   465c4:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   465c8:	sub	x24, x23, #0x2
   465cc:	cmp	x21, x24
   465d0:	b.hi	46648 <ZSTD_endStream@@Base+0x386f4>  // b.pmore
   465d4:	cbnz	w0, 46648 <ZSTD_endStream@@Base+0x386f4>
   465d8:	add	x0, sp, #0x8
   465dc:	mov	w1, w20
   465e0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   465e4:	add	x25, x22, x0, lsl #2
   465e8:	ldrh	w8, [x25]
   465ec:	add	x0, sp, #0x8
   465f0:	strh	w8, [x21]
   465f4:	ldrb	w1, [x25, #2]
   465f8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   465fc:	ldrb	w8, [x25, #3]
   46600:	add	x0, sp, #0x8
   46604:	add	x21, x21, x8
   46608:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   4660c:	cbnz	w0, 46648 <ZSTD_endStream@@Base+0x386f4>
   46610:	cmp	x21, x24
   46614:	b.ls	465d8 <ZSTD_endStream@@Base+0x38684>  // b.plast
   46618:	b	46648 <ZSTD_endStream@@Base+0x386f4>
   4661c:	add	x0, sp, #0x8
   46620:	mov	w1, w20
   46624:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46628:	add	x25, x22, x0, lsl #2
   4662c:	ldrh	w8, [x25]
   46630:	add	x0, sp, #0x8
   46634:	strh	w8, [x21]
   46638:	ldrb	w1, [x25, #2]
   4663c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46640:	ldrb	w8, [x25, #3]
   46644:	add	x21, x21, x8
   46648:	cmp	x21, x24
   4664c:	b.ls	4661c <ZSTD_endStream@@Base+0x386c8>  // b.plast
   46650:	cmp	x21, x23
   46654:	b.cs	466bc <ZSTD_endStream@@Base+0x38768>  // b.hs, b.nlast
   46658:	add	x0, sp, #0x8
   4665c:	mov	w1, w20
   46660:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46664:	add	x8, x22, x0, lsl #2
   46668:	ldrb	w9, [x8]
   4666c:	strb	w9, [x21]
   46670:	ldrb	w9, [x8, #3]
   46674:	cmp	w9, #0x1
   46678:	b.ne	4668c <ZSTD_endStream@@Base+0x38738>  // b.any
   4667c:	ldrb	w1, [x8, #2]
   46680:	add	x0, sp, #0x8
   46684:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46688:	b	466bc <ZSTD_endStream@@Base+0x38768>
   4668c:	ldr	w8, [sp, #16]
   46690:	cmp	w8, #0x3f
   46694:	b.hi	466bc <ZSTD_endStream@@Base+0x38768>  // b.pmore
   46698:	add	x8, x22, x0, lsl #2
   4669c:	ldrb	w1, [x8, #2]
   466a0:	add	x0, sp, #0x8
   466a4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   466a8:	ldr	w8, [sp, #16]
   466ac:	cmp	w8, #0x41
   466b0:	b.cc	466bc <ZSTD_endStream@@Base+0x38768>  // b.lo, b.ul, b.last
   466b4:	mov	w8, #0x40                  	// #64
   466b8:	str	w8, [sp, #16]
   466bc:	add	x0, sp, #0x8
   466c0:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   466c4:	cmp	w0, #0x0
   466c8:	mov	x8, #0xffffffffffffffec    	// #-20
   466cc:	csel	x22, x8, x19, eq  // eq = none
   466d0:	mov	x0, x22
   466d4:	ldp	x20, x19, [sp, #112]
   466d8:	ldp	x22, x21, [sp, #96]
   466dc:	ldp	x24, x23, [sp, #80]
   466e0:	ldr	x25, [sp, #64]
   466e4:	ldp	x29, x30, [sp, #48]
   466e8:	add	sp, sp, #0x80
   466ec:	ret
   466f0:	stp	x29, x30, [sp, #-64]!
   466f4:	stp	x24, x23, [sp, #16]
   466f8:	stp	x22, x21, [sp, #32]
   466fc:	stp	x20, x19, [sp, #48]
   46700:	mov	x21, x4
   46704:	mov	x23, x3
   46708:	mov	x20, x2
   4670c:	mov	x22, x1
   46710:	mov	x1, x3
   46714:	mov	x2, x4
   46718:	mov	x3, x5
   4671c:	mov	x4, x6
   46720:	mov	x29, sp
   46724:	mov	x19, x0
   46728:	bl	46040 <ZSTD_endStream@@Base+0x380ec>
   4672c:	mov	x24, x0
   46730:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   46734:	cbnz	w0, 46764 <ZSTD_endStream@@Base+0x38810>
   46738:	cmp	x24, x21
   4673c:	b.cs	46760 <ZSTD_endStream@@Base+0x3880c>  // b.hs, b.nlast
   46740:	add	x2, x23, x24
   46744:	sub	x3, x21, x24
   46748:	mov	x0, x22
   4674c:	mov	x1, x20
   46750:	mov	x4, x19
   46754:	bl	4648c <ZSTD_endStream@@Base+0x38538>
   46758:	mov	x24, x0
   4675c:	b	46764 <ZSTD_endStream@@Base+0x38810>
   46760:	mov	x24, #0xffffffffffffffb8    	// #-72
   46764:	mov	x0, x24
   46768:	ldp	x20, x19, [sp, #48]
   4676c:	ldp	x22, x21, [sp, #32]
   46770:	ldp	x24, x23, [sp, #16]
   46774:	ldp	x29, x30, [sp], #64
   46778:	ret
   4677c:	stp	x29, x30, [sp, #-32]!
   46780:	str	x28, [sp, #16]
   46784:	mov	x29, sp
   46788:	sub	sp, sp, #0x800
   4678c:	mov	x5, sp
   46790:	mov	w6, #0x800                 	// #2048
   46794:	bl	466f0 <ZSTD_endStream@@Base+0x3879c>
   46798:	add	sp, sp, #0x800
   4679c:	ldr	x28, [sp, #16]
   467a0:	ldp	x29, x30, [sp], #32
   467a4:	ret
   467a8:	stp	x29, x30, [sp, #-64]!
   467ac:	str	x28, [sp, #16]
   467b0:	stp	x22, x21, [sp, #32]
   467b4:	stp	x20, x19, [sp, #48]
   467b8:	mov	x29, sp
   467bc:	sub	sp, sp, #0x4, lsl #12
   467c0:	sub	sp, sp, #0x10
   467c4:	mov	x20, x2
   467c8:	mov	x21, x1
   467cc:	mov	x22, x0
   467d0:	add	x0, sp, #0xc
   467d4:	mov	w2, #0x4004                	// #16388
   467d8:	mov	w1, wzr
   467dc:	mov	x19, x3
   467e0:	bl	46a0 <memset@plt>
   467e4:	mov	w8, #0xc                   	// #12
   467e8:	movk	w8, #0xc00, lsl #16
   467ec:	add	x0, sp, #0xc
   467f0:	mov	x1, x22
   467f4:	mov	x2, x21
   467f8:	mov	x3, x20
   467fc:	mov	x4, x19
   46800:	str	w8, [sp, #12]
   46804:	bl	4677c <ZSTD_endStream@@Base+0x38828>
   46808:	add	sp, sp, #0x4, lsl #12
   4680c:	add	sp, sp, #0x10
   46810:	ldp	x20, x19, [sp, #48]
   46814:	ldp	x22, x21, [sp, #32]
   46818:	ldr	x28, [sp, #16]
   4681c:	ldp	x29, x30, [sp], #64
   46820:	ret
   46824:	stp	x29, x30, [sp, #-64]!
   46828:	str	x23, [sp, #16]
   4682c:	mov	x23, x0
   46830:	mov	x0, x4
   46834:	stp	x22, x21, [sp, #32]
   46838:	stp	x20, x19, [sp, #48]
   4683c:	mov	x29, sp
   46840:	mov	x19, x4
   46844:	mov	x20, x3
   46848:	mov	x21, x2
   4684c:	mov	x22, x1
   46850:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   46854:	and	x8, x0, #0xff00
   46858:	cmp	x8, #0x100
   4685c:	b.ne	4687c <ZSTD_endStream@@Base+0x38928>  // b.any
   46860:	mov	x0, x23
   46864:	mov	x1, x22
   46868:	mov	x2, x21
   4686c:	mov	x3, x20
   46870:	mov	x4, x19
   46874:	bl	46894 <ZSTD_endStream@@Base+0x38940>
   46878:	b	46880 <ZSTD_endStream@@Base+0x3892c>
   4687c:	mov	x0, #0xffffffffffffffff    	// #-1
   46880:	ldp	x20, x19, [sp, #48]
   46884:	ldp	x22, x21, [sp, #32]
   46888:	ldr	x23, [sp, #16]
   4688c:	ldp	x29, x30, [sp], #64
   46890:	ret
   46894:	sub	sp, sp, #0x140
   46898:	cmp	x3, #0xa
   4689c:	stp	x29, x30, [sp, #224]
   468a0:	stp	x28, x27, [sp, #240]
   468a4:	stp	x26, x25, [sp, #256]
   468a8:	stp	x24, x23, [sp, #272]
   468ac:	stp	x22, x21, [sp, #288]
   468b0:	stp	x20, x19, [sp, #304]
   468b4:	add	x29, sp, #0xe0
   468b8:	b.cc	46910 <ZSTD_endStream@@Base+0x389bc>  // b.lo, b.ul, b.last
   468bc:	mov	x21, x0
   468c0:	mov	x0, x2
   468c4:	mov	x20, x4
   468c8:	mov	x23, x3
   468cc:	mov	x22, x2
   468d0:	mov	x19, x1
   468d4:	bl	48068 <ZSTD_endStream@@Base+0x3a114>
   468d8:	and	x27, x0, #0xffff
   468dc:	add	x0, x22, #0x2
   468e0:	bl	48068 <ZSTD_endStream@@Base+0x3a114>
   468e4:	and	x26, x0, #0xffff
   468e8:	add	x0, x22, #0x4
   468ec:	bl	48068 <ZSTD_endStream@@Base+0x3a114>
   468f0:	and	x24, x0, #0xffff
   468f4:	add	x8, x27, x26
   468f8:	add	x8, x8, x24
   468fc:	mov	x0, x20
   46900:	add	x25, x8, #0x6
   46904:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   46908:	subs	x25, x23, x25
   4690c:	b.cs	46938 <ZSTD_endStream@@Base+0x389e4>  // b.hs, b.nlast
   46910:	mov	x22, #0xffffffffffffffec    	// #-20
   46914:	mov	x0, x22
   46918:	ldp	x20, x19, [sp, #304]
   4691c:	ldp	x22, x21, [sp, #288]
   46920:	ldp	x24, x23, [sp, #272]
   46924:	ldp	x26, x25, [sp, #256]
   46928:	ldp	x28, x27, [sp, #240]
   4692c:	ldp	x29, x30, [sp, #224]
   46930:	add	sp, sp, #0x140
   46934:	ret
   46938:	add	x28, x22, #0x6
   4693c:	mov	x23, x0
   46940:	sub	x0, x29, #0x30
   46944:	mov	x1, x28
   46948:	mov	x2, x27
   4694c:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   46950:	mov	x22, x0
   46954:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   46958:	cbnz	w0, 46914 <ZSTD_endStream@@Base+0x389c0>
   4695c:	add	x27, x28, x27
   46960:	sub	x0, x29, #0x58
   46964:	mov	x1, x27
   46968:	mov	x2, x26
   4696c:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   46970:	mov	x28, x0
   46974:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   46978:	cmp	w0, #0x0
   4697c:	csel	x22, x22, x28, eq  // eq = none
   46980:	cbnz	w0, 46914 <ZSTD_endStream@@Base+0x389c0>
   46984:	add	x26, x27, x26
   46988:	add	x0, sp, #0x60
   4698c:	mov	x1, x26
   46990:	mov	x2, x24
   46994:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   46998:	mov	x27, x0
   4699c:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   469a0:	cmp	w0, #0x0
   469a4:	csel	x22, x22, x27, eq  // eq = none
   469a8:	cbnz	w0, 46914 <ZSTD_endStream@@Base+0x389c0>
   469ac:	add	x1, x26, x24
   469b0:	add	x0, sp, #0x38
   469b4:	mov	x2, x25
   469b8:	bl	47dd0 <ZSTD_endStream@@Base+0x39e7c>
   469bc:	mov	x24, x0
   469c0:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   469c4:	cmp	w0, #0x0
   469c8:	csel	x22, x22, x24, eq  // eq = none
   469cc:	cbnz	w0, 46914 <ZSTD_endStream@@Base+0x389c0>
   469d0:	add	x8, x19, #0x3
   469d4:	lsr	x8, x8, #2
   469d8:	add	x9, x21, x8
   469dc:	str	x9, [sp, #32]
   469e0:	add	x9, x9, x8
   469e4:	sub	x0, x29, #0x30
   469e8:	add	x26, x21, x19
   469ec:	add	x25, x20, #0x4
   469f0:	str	x9, [sp, #24]
   469f4:	add	x27, x9, x8
   469f8:	ubfx	w20, w23, #16, #8
   469fc:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46a00:	mov	w22, w0
   46a04:	sub	x0, x29, #0x58
   46a08:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46a0c:	mov	w23, w0
   46a10:	add	x0, sp, #0x60
   46a14:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46a18:	mov	w24, w0
   46a1c:	add	x0, sp, #0x38
   46a20:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46a24:	sub	x8, x26, #0x7
   46a28:	cmp	x27, x8
   46a2c:	cset	w9, cc  // cc = lo, ul, last
   46a30:	stp	x27, x8, [sp, #40]
   46a34:	str	x26, [sp, #16]
   46a38:	b.cs	46d64 <ZSTD_endStream@@Base+0x38e10>  // b.hs, b.nlast
   46a3c:	orr	w8, w23, w22
   46a40:	orr	w8, w8, w24
   46a44:	orr	w8, w8, w0
   46a48:	cbnz	w8, 46d64 <ZSTD_endStream@@Base+0x38e10>
   46a4c:	ldp	x27, x26, [sp, #24]
   46a50:	ldr	x28, [sp, #40]
   46a54:	sub	x0, x29, #0x30
   46a58:	mov	w1, w20
   46a5c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46a60:	add	x22, x25, x0, lsl #2
   46a64:	ldrh	w8, [x22]
   46a68:	sub	x0, x29, #0x30
   46a6c:	strh	w8, [x21]
   46a70:	ldrb	w1, [x22, #2]
   46a74:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46a78:	ldrb	w8, [x22, #3]
   46a7c:	sub	x0, x29, #0x58
   46a80:	mov	w1, w20
   46a84:	add	x21, x21, x8
   46a88:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46a8c:	add	x22, x25, x0, lsl #2
   46a90:	ldrh	w8, [x22]
   46a94:	sub	x0, x29, #0x58
   46a98:	strh	w8, [x26]
   46a9c:	ldrb	w1, [x22, #2]
   46aa0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46aa4:	ldrb	w8, [x22, #3]
   46aa8:	add	x0, sp, #0x60
   46aac:	mov	w1, w20
   46ab0:	add	x22, x26, x8
   46ab4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46ab8:	add	x23, x25, x0, lsl #2
   46abc:	ldrh	w8, [x23]
   46ac0:	add	x0, sp, #0x60
   46ac4:	strh	w8, [x27]
   46ac8:	ldrb	w1, [x23, #2]
   46acc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46ad0:	ldrb	w8, [x23, #3]
   46ad4:	add	x0, sp, #0x38
   46ad8:	mov	w1, w20
   46adc:	add	x23, x27, x8
   46ae0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46ae4:	add	x24, x25, x0, lsl #2
   46ae8:	ldrh	w8, [x24]
   46aec:	add	x0, sp, #0x38
   46af0:	strh	w8, [x28]
   46af4:	ldrb	w1, [x24, #2]
   46af8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46afc:	ldrb	w8, [x24, #3]
   46b00:	sub	x0, x29, #0x30
   46b04:	mov	w1, w20
   46b08:	add	x24, x28, x8
   46b0c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46b10:	add	x26, x25, x0, lsl #2
   46b14:	ldrh	w8, [x26]
   46b18:	sub	x0, x29, #0x30
   46b1c:	strh	w8, [x21]
   46b20:	ldrb	w1, [x26, #2]
   46b24:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46b28:	ldrb	w8, [x26, #3]
   46b2c:	sub	x0, x29, #0x58
   46b30:	mov	w1, w20
   46b34:	add	x21, x21, x8
   46b38:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46b3c:	add	x26, x25, x0, lsl #2
   46b40:	ldrh	w8, [x26]
   46b44:	sub	x0, x29, #0x58
   46b48:	strh	w8, [x22]
   46b4c:	ldrb	w1, [x26, #2]
   46b50:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46b54:	ldrb	w8, [x26, #3]
   46b58:	add	x0, sp, #0x60
   46b5c:	mov	w1, w20
   46b60:	add	x22, x22, x8
   46b64:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46b68:	add	x26, x25, x0, lsl #2
   46b6c:	ldrh	w8, [x26]
   46b70:	add	x0, sp, #0x60
   46b74:	strh	w8, [x23]
   46b78:	ldrb	w1, [x26, #2]
   46b7c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46b80:	ldrb	w8, [x26, #3]
   46b84:	add	x0, sp, #0x38
   46b88:	mov	w1, w20
   46b8c:	add	x23, x23, x8
   46b90:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46b94:	add	x26, x25, x0, lsl #2
   46b98:	ldrh	w8, [x26]
   46b9c:	add	x0, sp, #0x38
   46ba0:	strh	w8, [x24]
   46ba4:	ldrb	w1, [x26, #2]
   46ba8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46bac:	ldrb	w8, [x26, #3]
   46bb0:	sub	x0, x29, #0x30
   46bb4:	mov	w1, w20
   46bb8:	add	x26, x24, x8
   46bbc:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46bc0:	add	x24, x25, x0, lsl #2
   46bc4:	ldrh	w8, [x24]
   46bc8:	sub	x0, x29, #0x30
   46bcc:	strh	w8, [x21]
   46bd0:	ldrb	w1, [x24, #2]
   46bd4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46bd8:	ldrb	w8, [x24, #3]
   46bdc:	sub	x0, x29, #0x58
   46be0:	mov	w1, w20
   46be4:	add	x21, x21, x8
   46be8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46bec:	add	x24, x25, x0, lsl #2
   46bf0:	ldrh	w8, [x24]
   46bf4:	sub	x0, x29, #0x58
   46bf8:	strh	w8, [x22]
   46bfc:	ldrb	w1, [x24, #2]
   46c00:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46c04:	ldrb	w8, [x24, #3]
   46c08:	add	x0, sp, #0x60
   46c0c:	mov	w1, w20
   46c10:	add	x24, x22, x8
   46c14:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46c18:	add	x22, x25, x0, lsl #2
   46c1c:	ldrh	w8, [x22]
   46c20:	add	x0, sp, #0x60
   46c24:	strh	w8, [x23]
   46c28:	ldrb	w1, [x22, #2]
   46c2c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46c30:	ldrb	w8, [x22, #3]
   46c34:	add	x0, sp, #0x38
   46c38:	mov	w1, w20
   46c3c:	add	x23, x23, x8
   46c40:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46c44:	add	x22, x25, x0, lsl #2
   46c48:	ldrh	w8, [x22]
   46c4c:	add	x0, sp, #0x38
   46c50:	strh	w8, [x26]
   46c54:	ldrb	w1, [x22, #2]
   46c58:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46c5c:	ldrb	w8, [x22, #3]
   46c60:	sub	x0, x29, #0x30
   46c64:	mov	w1, w20
   46c68:	add	x22, x26, x8
   46c6c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46c70:	add	x26, x25, x0, lsl #2
   46c74:	ldrh	w8, [x26]
   46c78:	sub	x0, x29, #0x30
   46c7c:	strh	w8, [x21]
   46c80:	ldrb	w1, [x26, #2]
   46c84:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46c88:	ldrb	w8, [x26, #3]
   46c8c:	sub	x0, x29, #0x58
   46c90:	mov	w1, w20
   46c94:	add	x21, x21, x8
   46c98:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46c9c:	add	x26, x25, x0, lsl #2
   46ca0:	ldrh	w8, [x26]
   46ca4:	sub	x0, x29, #0x58
   46ca8:	strh	w8, [x24]
   46cac:	ldrb	w1, [x26, #2]
   46cb0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46cb4:	ldrb	w8, [x26, #3]
   46cb8:	add	x0, sp, #0x60
   46cbc:	mov	w1, w20
   46cc0:	add	x26, x24, x8
   46cc4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46cc8:	add	x24, x25, x0, lsl #2
   46ccc:	ldrh	w8, [x24]
   46cd0:	add	x0, sp, #0x60
   46cd4:	strh	w8, [x23]
   46cd8:	ldrb	w1, [x24, #2]
   46cdc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46ce0:	ldrb	w8, [x24, #3]
   46ce4:	add	x0, sp, #0x38
   46ce8:	mov	w1, w20
   46cec:	add	x27, x23, x8
   46cf0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46cf4:	add	x23, x25, x0, lsl #2
   46cf8:	ldrh	w8, [x23]
   46cfc:	add	x0, sp, #0x38
   46d00:	strh	w8, [x22]
   46d04:	ldrb	w1, [x23, #2]
   46d08:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46d0c:	ldrb	w8, [x23, #3]
   46d10:	sub	x0, x29, #0x30
   46d14:	add	x28, x22, x8
   46d18:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46d1c:	mov	w22, w0
   46d20:	sub	x0, x29, #0x58
   46d24:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46d28:	mov	w23, w0
   46d2c:	add	x0, sp, #0x60
   46d30:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46d34:	mov	w24, w0
   46d38:	add	x0, sp, #0x38
   46d3c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46d40:	ldr	x8, [sp, #48]
   46d44:	cmp	x28, x8
   46d48:	cset	w9, cc  // cc = lo, ul, last
   46d4c:	b.cs	46d6c <ZSTD_endStream@@Base+0x38e18>  // b.hs, b.nlast
   46d50:	orr	w8, w23, w22
   46d54:	orr	w8, w8, w24
   46d58:	orr	w8, w8, w0
   46d5c:	cbz	w8, 46a54 <ZSTD_endStream@@Base+0x38b00>
   46d60:	b	46d6c <ZSTD_endStream@@Base+0x38e18>
   46d64:	ldp	x26, x28, [sp, #32]
   46d68:	ldr	x27, [sp, #24]
   46d6c:	ldr	x8, [sp, #40]
   46d70:	mov	x22, #0xffffffffffffffec    	// #-20
   46d74:	cmp	x27, x8
   46d78:	b.hi	46914 <ZSTD_endStream@@Base+0x389c0>  // b.pmore
   46d7c:	ldr	x24, [sp, #24]
   46d80:	cmp	x26, x24
   46d84:	b.hi	46914 <ZSTD_endStream@@Base+0x389c0>  // b.pmore
   46d88:	ldr	x23, [sp, #32]
   46d8c:	cmp	x21, x23
   46d90:	b.hi	46914 <ZSTD_endStream@@Base+0x389c0>  // b.pmore
   46d94:	sub	x0, x29, #0x30
   46d98:	str	w9, [sp, #12]
   46d9c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46da0:	sub	x22, x23, #0x7
   46da4:	cmp	x22, x21
   46da8:	b.ls	46e74 <ZSTD_endStream@@Base+0x38f20>  // b.plast
   46dac:	cbnz	w0, 46e74 <ZSTD_endStream@@Base+0x38f20>
   46db0:	sub	x0, x29, #0x30
   46db4:	mov	w1, w20
   46db8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46dbc:	add	x23, x25, x0, lsl #2
   46dc0:	ldrh	w8, [x23]
   46dc4:	sub	x0, x29, #0x30
   46dc8:	strh	w8, [x21]
   46dcc:	ldrb	w1, [x23, #2]
   46dd0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46dd4:	ldrb	w8, [x23, #3]
   46dd8:	sub	x0, x29, #0x30
   46ddc:	mov	w1, w20
   46de0:	add	x21, x21, x8
   46de4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46de8:	add	x23, x25, x0, lsl #2
   46dec:	ldrh	w8, [x23]
   46df0:	sub	x0, x29, #0x30
   46df4:	strh	w8, [x21]
   46df8:	ldrb	w1, [x23, #2]
   46dfc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46e00:	ldrb	w8, [x23, #3]
   46e04:	sub	x0, x29, #0x30
   46e08:	mov	w1, w20
   46e0c:	add	x21, x21, x8
   46e10:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46e14:	add	x23, x25, x0, lsl #2
   46e18:	ldrh	w8, [x23]
   46e1c:	sub	x0, x29, #0x30
   46e20:	strh	w8, [x21]
   46e24:	ldrb	w1, [x23, #2]
   46e28:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46e2c:	ldrb	w8, [x23, #3]
   46e30:	sub	x0, x29, #0x30
   46e34:	mov	w1, w20
   46e38:	add	x21, x21, x8
   46e3c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46e40:	add	x23, x25, x0, lsl #2
   46e44:	ldrh	w8, [x23]
   46e48:	sub	x0, x29, #0x30
   46e4c:	strh	w8, [x21]
   46e50:	ldrb	w1, [x23, #2]
   46e54:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46e58:	ldrb	w8, [x23, #3]
   46e5c:	sub	x0, x29, #0x30
   46e60:	add	x21, x21, x8
   46e64:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46e68:	cbnz	w0, 46e74 <ZSTD_endStream@@Base+0x38f20>
   46e6c:	cmp	x21, x22
   46e70:	b.cc	46db0 <ZSTD_endStream@@Base+0x38e5c>  // b.lo, b.ul, b.last
   46e74:	sub	x0, x29, #0x30
   46e78:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46e7c:	ldr	x8, [sp, #32]
   46e80:	sub	x22, x8, #0x2
   46e84:	cmp	x21, x22
   46e88:	b.hi	46f00 <ZSTD_endStream@@Base+0x38fac>  // b.pmore
   46e8c:	cbnz	w0, 46f00 <ZSTD_endStream@@Base+0x38fac>
   46e90:	sub	x0, x29, #0x30
   46e94:	mov	w1, w20
   46e98:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46e9c:	add	x23, x25, x0, lsl #2
   46ea0:	ldrh	w8, [x23]
   46ea4:	sub	x0, x29, #0x30
   46ea8:	strh	w8, [x21]
   46eac:	ldrb	w1, [x23, #2]
   46eb0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46eb4:	ldrb	w8, [x23, #3]
   46eb8:	sub	x0, x29, #0x30
   46ebc:	add	x21, x21, x8
   46ec0:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46ec4:	cbnz	w0, 46f00 <ZSTD_endStream@@Base+0x38fac>
   46ec8:	cmp	x21, x22
   46ecc:	b.ls	46e90 <ZSTD_endStream@@Base+0x38f3c>  // b.plast
   46ed0:	b	46f00 <ZSTD_endStream@@Base+0x38fac>
   46ed4:	sub	x0, x29, #0x30
   46ed8:	mov	w1, w20
   46edc:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46ee0:	add	x23, x25, x0, lsl #2
   46ee4:	ldrh	w8, [x23]
   46ee8:	sub	x0, x29, #0x30
   46eec:	strh	w8, [x21]
   46ef0:	ldrb	w1, [x23, #2]
   46ef4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46ef8:	ldrb	w8, [x23, #3]
   46efc:	add	x21, x21, x8
   46f00:	cmp	x21, x22
   46f04:	b.ls	46ed4 <ZSTD_endStream@@Base+0x38f80>  // b.plast
   46f08:	ldr	x8, [sp, #32]
   46f0c:	cmp	x21, x8
   46f10:	b.cs	46f78 <ZSTD_endStream@@Base+0x39024>  // b.hs, b.nlast
   46f14:	sub	x0, x29, #0x30
   46f18:	mov	w1, w20
   46f1c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46f20:	add	x8, x25, x0, lsl #2
   46f24:	ldrb	w9, [x8]
   46f28:	strb	w9, [x21]
   46f2c:	ldrb	w9, [x8, #3]
   46f30:	cmp	w9, #0x1
   46f34:	b.ne	46f48 <ZSTD_endStream@@Base+0x38ff4>  // b.any
   46f38:	ldrb	w1, [x8, #2]
   46f3c:	sub	x0, x29, #0x30
   46f40:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46f44:	b	46f78 <ZSTD_endStream@@Base+0x39024>
   46f48:	ldur	w8, [x29, #-40]
   46f4c:	cmp	w8, #0x3f
   46f50:	b.hi	46f78 <ZSTD_endStream@@Base+0x39024>  // b.pmore
   46f54:	add	x8, x25, x0, lsl #2
   46f58:	ldrb	w1, [x8, #2]
   46f5c:	sub	x0, x29, #0x30
   46f60:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46f64:	ldur	w8, [x29, #-40]
   46f68:	cmp	w8, #0x41
   46f6c:	b.cc	46f78 <ZSTD_endStream@@Base+0x39024>  // b.lo, b.ul, b.last
   46f70:	mov	w8, #0x40                  	// #64
   46f74:	stur	w8, [x29, #-40]
   46f78:	sub	x0, x29, #0x58
   46f7c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   46f80:	sub	x21, x24, #0x7
   46f84:	cmp	x21, x26
   46f88:	b.ls	47054 <ZSTD_endStream@@Base+0x39100>  // b.plast
   46f8c:	cbnz	w0, 47054 <ZSTD_endStream@@Base+0x39100>
   46f90:	sub	x0, x29, #0x58
   46f94:	mov	w1, w20
   46f98:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46f9c:	add	x22, x25, x0, lsl #2
   46fa0:	ldrh	w8, [x22]
   46fa4:	sub	x0, x29, #0x58
   46fa8:	strh	w8, [x26]
   46fac:	ldrb	w1, [x22, #2]
   46fb0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46fb4:	ldrb	w8, [x22, #3]
   46fb8:	sub	x0, x29, #0x58
   46fbc:	mov	w1, w20
   46fc0:	add	x22, x26, x8
   46fc4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46fc8:	add	x23, x25, x0, lsl #2
   46fcc:	ldrh	w8, [x23]
   46fd0:	sub	x0, x29, #0x58
   46fd4:	strh	w8, [x22]
   46fd8:	ldrb	w1, [x23, #2]
   46fdc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   46fe0:	ldrb	w8, [x23, #3]
   46fe4:	sub	x0, x29, #0x58
   46fe8:	mov	w1, w20
   46fec:	add	x22, x22, x8
   46ff0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   46ff4:	add	x23, x25, x0, lsl #2
   46ff8:	ldrh	w8, [x23]
   46ffc:	sub	x0, x29, #0x58
   47000:	strh	w8, [x22]
   47004:	ldrb	w1, [x23, #2]
   47008:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4700c:	ldrb	w8, [x23, #3]
   47010:	sub	x0, x29, #0x58
   47014:	mov	w1, w20
   47018:	add	x22, x22, x8
   4701c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   47020:	add	x23, x25, x0, lsl #2
   47024:	ldrh	w8, [x23]
   47028:	sub	x0, x29, #0x58
   4702c:	strh	w8, [x22]
   47030:	ldrb	w1, [x23, #2]
   47034:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47038:	ldrb	w8, [x23, #3]
   4703c:	sub	x0, x29, #0x58
   47040:	add	x26, x22, x8
   47044:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47048:	cbnz	w0, 47054 <ZSTD_endStream@@Base+0x39100>
   4704c:	cmp	x26, x21
   47050:	b.cc	46f90 <ZSTD_endStream@@Base+0x3903c>  // b.lo, b.ul, b.last
   47054:	sub	x0, x29, #0x58
   47058:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   4705c:	sub	x21, x24, #0x2
   47060:	cmp	x26, x21
   47064:	b.hi	470dc <ZSTD_endStream@@Base+0x39188>  // b.pmore
   47068:	cbnz	w0, 470dc <ZSTD_endStream@@Base+0x39188>
   4706c:	sub	x0, x29, #0x58
   47070:	mov	w1, w20
   47074:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   47078:	add	x22, x25, x0, lsl #2
   4707c:	ldrh	w8, [x22]
   47080:	sub	x0, x29, #0x58
   47084:	strh	w8, [x26]
   47088:	ldrb	w1, [x22, #2]
   4708c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47090:	ldrb	w8, [x22, #3]
   47094:	sub	x0, x29, #0x58
   47098:	add	x26, x26, x8
   4709c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   470a0:	cbnz	w0, 470dc <ZSTD_endStream@@Base+0x39188>
   470a4:	cmp	x26, x21
   470a8:	b.ls	4706c <ZSTD_endStream@@Base+0x39118>  // b.plast
   470ac:	b	470dc <ZSTD_endStream@@Base+0x39188>
   470b0:	sub	x0, x29, #0x58
   470b4:	mov	w1, w20
   470b8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   470bc:	add	x22, x25, x0, lsl #2
   470c0:	ldrh	w8, [x22]
   470c4:	sub	x0, x29, #0x58
   470c8:	strh	w8, [x26]
   470cc:	ldrb	w1, [x22, #2]
   470d0:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   470d4:	ldrb	w8, [x22, #3]
   470d8:	add	x26, x26, x8
   470dc:	cmp	x26, x21
   470e0:	b.ls	470b0 <ZSTD_endStream@@Base+0x3915c>  // b.plast
   470e4:	cmp	x26, x24
   470e8:	b.cs	47150 <ZSTD_endStream@@Base+0x391fc>  // b.hs, b.nlast
   470ec:	sub	x0, x29, #0x58
   470f0:	mov	w1, w20
   470f4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   470f8:	add	x8, x25, x0, lsl #2
   470fc:	ldrb	w9, [x8]
   47100:	strb	w9, [x26]
   47104:	ldrb	w9, [x8, #3]
   47108:	cmp	w9, #0x1
   4710c:	b.ne	47120 <ZSTD_endStream@@Base+0x391cc>  // b.any
   47110:	ldrb	w1, [x8, #2]
   47114:	sub	x0, x29, #0x58
   47118:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4711c:	b	47150 <ZSTD_endStream@@Base+0x391fc>
   47120:	ldur	w8, [x29, #-80]
   47124:	cmp	w8, #0x3f
   47128:	b.hi	47150 <ZSTD_endStream@@Base+0x391fc>  // b.pmore
   4712c:	add	x8, x25, x0, lsl #2
   47130:	ldrb	w1, [x8, #2]
   47134:	sub	x0, x29, #0x58
   47138:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4713c:	ldur	w8, [x29, #-80]
   47140:	cmp	w8, #0x41
   47144:	b.cc	47150 <ZSTD_endStream@@Base+0x391fc>  // b.lo, b.ul, b.last
   47148:	mov	w8, #0x40                  	// #64
   4714c:	stur	w8, [x29, #-80]
   47150:	add	x0, sp, #0x60
   47154:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47158:	ldr	x8, [sp, #40]
   4715c:	sub	x21, x8, #0x7
   47160:	cmp	x21, x27
   47164:	b.ls	47238 <ZSTD_endStream@@Base+0x392e4>  // b.plast
   47168:	ldr	x24, [sp, #16]
   4716c:	cbnz	w0, 4723c <ZSTD_endStream@@Base+0x392e8>
   47170:	add	x0, sp, #0x60
   47174:	mov	w1, w20
   47178:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   4717c:	add	x22, x25, x0, lsl #2
   47180:	ldrh	w8, [x22]
   47184:	add	x0, sp, #0x60
   47188:	strh	w8, [x27]
   4718c:	ldrb	w1, [x22, #2]
   47190:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47194:	ldrb	w8, [x22, #3]
   47198:	add	x0, sp, #0x60
   4719c:	mov	w1, w20
   471a0:	add	x22, x27, x8
   471a4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   471a8:	add	x23, x25, x0, lsl #2
   471ac:	ldrh	w8, [x23]
   471b0:	add	x0, sp, #0x60
   471b4:	strh	w8, [x22]
   471b8:	ldrb	w1, [x23, #2]
   471bc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   471c0:	ldrb	w8, [x23, #3]
   471c4:	add	x0, sp, #0x60
   471c8:	mov	w1, w20
   471cc:	add	x22, x22, x8
   471d0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   471d4:	add	x23, x25, x0, lsl #2
   471d8:	ldrh	w8, [x23]
   471dc:	add	x0, sp, #0x60
   471e0:	strh	w8, [x22]
   471e4:	ldrb	w1, [x23, #2]
   471e8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   471ec:	ldrb	w8, [x23, #3]
   471f0:	add	x0, sp, #0x60
   471f4:	mov	w1, w20
   471f8:	add	x22, x22, x8
   471fc:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   47200:	add	x23, x25, x0, lsl #2
   47204:	ldrh	w8, [x23]
   47208:	add	x0, sp, #0x60
   4720c:	strh	w8, [x22]
   47210:	ldrb	w1, [x23, #2]
   47214:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47218:	ldrb	w8, [x23, #3]
   4721c:	add	x0, sp, #0x60
   47220:	add	x27, x22, x8
   47224:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47228:	cbnz	w0, 4723c <ZSTD_endStream@@Base+0x392e8>
   4722c:	cmp	x27, x21
   47230:	b.cc	47170 <ZSTD_endStream@@Base+0x3921c>  // b.lo, b.ul, b.last
   47234:	b	4723c <ZSTD_endStream@@Base+0x392e8>
   47238:	ldr	x24, [sp, #16]
   4723c:	add	x0, sp, #0x60
   47240:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47244:	ldr	x8, [sp, #40]
   47248:	sub	x21, x8, #0x2
   4724c:	cmp	x27, x21
   47250:	b.hi	472c8 <ZSTD_endStream@@Base+0x39374>  // b.pmore
   47254:	cbnz	w0, 472c8 <ZSTD_endStream@@Base+0x39374>
   47258:	add	x0, sp, #0x60
   4725c:	mov	w1, w20
   47260:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   47264:	add	x22, x25, x0, lsl #2
   47268:	ldrh	w8, [x22]
   4726c:	add	x0, sp, #0x60
   47270:	strh	w8, [x27]
   47274:	ldrb	w1, [x22, #2]
   47278:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4727c:	ldrb	w8, [x22, #3]
   47280:	add	x0, sp, #0x60
   47284:	add	x27, x27, x8
   47288:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   4728c:	cbnz	w0, 472c8 <ZSTD_endStream@@Base+0x39374>
   47290:	cmp	x27, x21
   47294:	b.ls	47258 <ZSTD_endStream@@Base+0x39304>  // b.plast
   47298:	b	472c8 <ZSTD_endStream@@Base+0x39374>
   4729c:	add	x0, sp, #0x60
   472a0:	mov	w1, w20
   472a4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   472a8:	add	x22, x25, x0, lsl #2
   472ac:	ldrh	w8, [x22]
   472b0:	add	x0, sp, #0x60
   472b4:	strh	w8, [x27]
   472b8:	ldrb	w1, [x22, #2]
   472bc:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   472c0:	ldrb	w8, [x22, #3]
   472c4:	add	x27, x27, x8
   472c8:	cmp	x27, x21
   472cc:	b.ls	4729c <ZSTD_endStream@@Base+0x39348>  // b.plast
   472d0:	ldr	x8, [sp, #40]
   472d4:	cmp	x27, x8
   472d8:	b.cs	47340 <ZSTD_endStream@@Base+0x393ec>  // b.hs, b.nlast
   472dc:	add	x0, sp, #0x60
   472e0:	mov	w1, w20
   472e4:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   472e8:	add	x8, x25, x0, lsl #2
   472ec:	ldrb	w9, [x8]
   472f0:	strb	w9, [x27]
   472f4:	ldrb	w9, [x8, #3]
   472f8:	cmp	w9, #0x1
   472fc:	b.ne	47310 <ZSTD_endStream@@Base+0x393bc>  // b.any
   47300:	ldrb	w1, [x8, #2]
   47304:	add	x0, sp, #0x60
   47308:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4730c:	b	47340 <ZSTD_endStream@@Base+0x393ec>
   47310:	ldr	w8, [sp, #104]
   47314:	cmp	w8, #0x3f
   47318:	b.hi	47340 <ZSTD_endStream@@Base+0x393ec>  // b.pmore
   4731c:	add	x8, x25, x0, lsl #2
   47320:	ldrb	w1, [x8, #2]
   47324:	add	x0, sp, #0x60
   47328:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   4732c:	ldr	w8, [sp, #104]
   47330:	cmp	w8, #0x41
   47334:	b.cc	47340 <ZSTD_endStream@@Base+0x393ec>  // b.lo, b.ul, b.last
   47338:	mov	w8, #0x40                  	// #64
   4733c:	str	w8, [sp, #104]
   47340:	add	x0, sp, #0x38
   47344:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47348:	ldr	w9, [sp, #12]
   4734c:	cmp	w0, #0x0
   47350:	cset	w8, ne  // ne = any
   47354:	eor	w9, w9, #0x1
   47358:	orr	w8, w9, w8
   4735c:	tbnz	w8, #0, 47428 <ZSTD_endStream@@Base+0x394d4>
   47360:	add	x0, sp, #0x38
   47364:	mov	w1, w20
   47368:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   4736c:	add	x21, x25, x0, lsl #2
   47370:	ldrh	w8, [x21]
   47374:	add	x0, sp, #0x38
   47378:	strh	w8, [x28]
   4737c:	ldrb	w1, [x21, #2]
   47380:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47384:	ldrb	w8, [x21, #3]
   47388:	add	x0, sp, #0x38
   4738c:	mov	w1, w20
   47390:	add	x21, x28, x8
   47394:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   47398:	add	x22, x25, x0, lsl #2
   4739c:	ldrh	w8, [x22]
   473a0:	add	x0, sp, #0x38
   473a4:	strh	w8, [x21]
   473a8:	ldrb	w1, [x22, #2]
   473ac:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   473b0:	ldrb	w8, [x22, #3]
   473b4:	add	x0, sp, #0x38
   473b8:	mov	w1, w20
   473bc:	add	x21, x21, x8
   473c0:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   473c4:	add	x22, x25, x0, lsl #2
   473c8:	ldrh	w8, [x22]
   473cc:	add	x0, sp, #0x38
   473d0:	strh	w8, [x21]
   473d4:	ldrb	w1, [x22, #2]
   473d8:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   473dc:	ldrb	w8, [x22, #3]
   473e0:	add	x0, sp, #0x38
   473e4:	mov	w1, w20
   473e8:	add	x21, x21, x8
   473ec:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   473f0:	add	x22, x25, x0, lsl #2
   473f4:	ldrh	w8, [x22]
   473f8:	add	x0, sp, #0x38
   473fc:	strh	w8, [x21]
   47400:	ldrb	w1, [x22, #2]
   47404:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47408:	ldrb	w8, [x22, #3]
   4740c:	add	x0, sp, #0x38
   47410:	add	x28, x21, x8
   47414:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47418:	cbnz	w0, 47428 <ZSTD_endStream@@Base+0x394d4>
   4741c:	ldr	x8, [sp, #48]
   47420:	cmp	x28, x8
   47424:	b.cc	47360 <ZSTD_endStream@@Base+0x3940c>  // b.lo, b.ul, b.last
   47428:	add	x0, sp, #0x38
   4742c:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47430:	sub	x21, x24, #0x2
   47434:	cmp	x28, x21
   47438:	b.hi	474b0 <ZSTD_endStream@@Base+0x3955c>  // b.pmore
   4743c:	cbnz	w0, 474b0 <ZSTD_endStream@@Base+0x3955c>
   47440:	add	x0, sp, #0x38
   47444:	mov	w1, w20
   47448:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   4744c:	add	x22, x25, x0, lsl #2
   47450:	ldrh	w8, [x22]
   47454:	add	x0, sp, #0x38
   47458:	strh	w8, [x28]
   4745c:	ldrb	w1, [x22, #2]
   47460:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47464:	ldrb	w8, [x22, #3]
   47468:	add	x0, sp, #0x38
   4746c:	add	x28, x28, x8
   47470:	bl	47f94 <ZSTD_endStream@@Base+0x3a040>
   47474:	cbnz	w0, 474b0 <ZSTD_endStream@@Base+0x3955c>
   47478:	cmp	x28, x21
   4747c:	b.ls	47440 <ZSTD_endStream@@Base+0x394ec>  // b.plast
   47480:	b	474b0 <ZSTD_endStream@@Base+0x3955c>
   47484:	add	x0, sp, #0x38
   47488:	mov	w1, w20
   4748c:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   47490:	add	x22, x25, x0, lsl #2
   47494:	ldrh	w8, [x22]
   47498:	add	x0, sp, #0x38
   4749c:	strh	w8, [x28]
   474a0:	ldrb	w1, [x22, #2]
   474a4:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   474a8:	ldrb	w8, [x22, #3]
   474ac:	add	x28, x28, x8
   474b0:	cmp	x28, x21
   474b4:	b.ls	47484 <ZSTD_endStream@@Base+0x39530>  // b.plast
   474b8:	cmp	x28, x24
   474bc:	b.cs	47524 <ZSTD_endStream@@Base+0x395d0>  // b.hs, b.nlast
   474c0:	add	x0, sp, #0x38
   474c4:	mov	w1, w20
   474c8:	bl	48040 <ZSTD_endStream@@Base+0x3a0ec>
   474cc:	add	x8, x25, x0, lsl #2
   474d0:	ldrb	w9, [x8]
   474d4:	strb	w9, [x28]
   474d8:	ldrb	w9, [x8, #3]
   474dc:	cmp	w9, #0x1
   474e0:	b.ne	474f4 <ZSTD_endStream@@Base+0x395a0>  // b.any
   474e4:	ldrb	w1, [x8, #2]
   474e8:	add	x0, sp, #0x38
   474ec:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   474f0:	b	47524 <ZSTD_endStream@@Base+0x395d0>
   474f4:	ldr	w8, [sp, #64]
   474f8:	cmp	w8, #0x3f
   474fc:	b.hi	47524 <ZSTD_endStream@@Base+0x395d0>  // b.pmore
   47500:	add	x8, x25, x0, lsl #2
   47504:	ldrb	w1, [x8, #2]
   47508:	add	x0, sp, #0x38
   4750c:	bl	48058 <ZSTD_endStream@@Base+0x3a104>
   47510:	ldr	w8, [sp, #64]
   47514:	cmp	w8, #0x41
   47518:	b.cc	47524 <ZSTD_endStream@@Base+0x395d0>  // b.lo, b.ul, b.last
   4751c:	mov	w8, #0x40                  	// #64
   47520:	str	w8, [sp, #64]
   47524:	sub	x0, x29, #0x30
   47528:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   4752c:	mov	w20, w0
   47530:	sub	x0, x29, #0x58
   47534:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   47538:	and	w20, w0, w20
   4753c:	add	x0, sp, #0x60
   47540:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   47544:	and	w20, w20, w0
   47548:	add	x0, sp, #0x38
   4754c:	bl	47f34 <ZSTD_endStream@@Base+0x39fe0>
   47550:	tst	w20, w0
   47554:	mov	x8, #0xffffffffffffffec    	// #-20
   47558:	csel	x22, x8, x19, eq  // eq = none
   4755c:	b	46914 <ZSTD_endStream@@Base+0x389c0>
   47560:	stp	x29, x30, [sp, #-16]!
   47564:	mov	x29, sp
   47568:	bl	47574 <ZSTD_endStream@@Base+0x39620>
   4756c:	ldp	x29, x30, [sp], #16
   47570:	ret
   47574:	stp	x29, x30, [sp, #-64]!
   47578:	stp	x24, x23, [sp, #16]
   4757c:	stp	x22, x21, [sp, #32]
   47580:	stp	x20, x19, [sp, #48]
   47584:	mov	x21, x4
   47588:	mov	x23, x3
   4758c:	mov	x20, x2
   47590:	mov	x22, x1
   47594:	mov	x1, x3
   47598:	mov	x2, x4
   4759c:	mov	x3, x5
   475a0:	mov	x4, x6
   475a4:	mov	x29, sp
   475a8:	mov	x19, x0
   475ac:	bl	46040 <ZSTD_endStream@@Base+0x380ec>
   475b0:	mov	x24, x0
   475b4:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   475b8:	cbnz	w0, 475e8 <ZSTD_endStream@@Base+0x39694>
   475bc:	cmp	x24, x21
   475c0:	b.cs	475e4 <ZSTD_endStream@@Base+0x39690>  // b.hs, b.nlast
   475c4:	add	x2, x23, x24
   475c8:	sub	x3, x21, x24
   475cc:	mov	x0, x22
   475d0:	mov	x1, x20
   475d4:	mov	x4, x19
   475d8:	bl	46894 <ZSTD_endStream@@Base+0x38940>
   475dc:	mov	x24, x0
   475e0:	b	475e8 <ZSTD_endStream@@Base+0x39694>
   475e4:	mov	x24, #0xffffffffffffffb8    	// #-72
   475e8:	mov	x0, x24
   475ec:	ldp	x20, x19, [sp, #48]
   475f0:	ldp	x22, x21, [sp, #32]
   475f4:	ldp	x24, x23, [sp, #16]
   475f8:	ldp	x29, x30, [sp], #64
   475fc:	ret
   47600:	stp	x29, x30, [sp, #-32]!
   47604:	str	x28, [sp, #16]
   47608:	mov	x29, sp
   4760c:	sub	sp, sp, #0x800
   47610:	mov	x5, sp
   47614:	mov	w6, #0x800                 	// #2048
   47618:	bl	47560 <ZSTD_endStream@@Base+0x3960c>
   4761c:	add	sp, sp, #0x800
   47620:	ldr	x28, [sp, #16]
   47624:	ldp	x29, x30, [sp], #32
   47628:	ret
   4762c:	stp	x29, x30, [sp, #-64]!
   47630:	str	x28, [sp, #16]
   47634:	stp	x22, x21, [sp, #32]
   47638:	stp	x20, x19, [sp, #48]
   4763c:	mov	x29, sp
   47640:	sub	sp, sp, #0x4, lsl #12
   47644:	sub	sp, sp, #0x10
   47648:	mov	x20, x2
   4764c:	mov	x21, x1
   47650:	mov	x22, x0
   47654:	add	x0, sp, #0xc
   47658:	mov	w2, #0x4004                	// #16388
   4765c:	mov	w1, wzr
   47660:	mov	x19, x3
   47664:	bl	46a0 <memset@plt>
   47668:	mov	w8, #0xc                   	// #12
   4766c:	movk	w8, #0xc00, lsl #16
   47670:	add	x0, sp, #0xc
   47674:	mov	x1, x22
   47678:	mov	x2, x21
   4767c:	mov	x3, x20
   47680:	mov	x4, x19
   47684:	str	w8, [sp, #12]
   47688:	bl	47600 <ZSTD_endStream@@Base+0x396ac>
   4768c:	add	sp, sp, #0x4, lsl #12
   47690:	add	sp, sp, #0x10
   47694:	ldp	x20, x19, [sp, #48]
   47698:	ldp	x22, x21, [sp, #32]
   4769c:	ldr	x28, [sp, #16]
   476a0:	ldp	x29, x30, [sp], #64
   476a4:	ret
   476a8:	stp	x29, x30, [sp, #-64]!
   476ac:	str	x23, [sp, #16]
   476b0:	mov	x23, x0
   476b4:	mov	x0, x4
   476b8:	stp	x22, x21, [sp, #32]
   476bc:	stp	x20, x19, [sp, #48]
   476c0:	mov	x29, sp
   476c4:	mov	x19, x4
   476c8:	mov	x20, x3
   476cc:	mov	x21, x2
   476d0:	mov	x22, x1
   476d4:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   476d8:	tst	x0, #0xff00
   476dc:	b.eq	476fc <ZSTD_endStream@@Base+0x397a8>  // b.none
   476e0:	mov	x0, x23
   476e4:	mov	x1, x22
   476e8:	mov	x2, x21
   476ec:	mov	x3, x20
   476f0:	mov	x4, x19
   476f4:	bl	4648c <ZSTD_endStream@@Base+0x38538>
   476f8:	b	47714 <ZSTD_endStream@@Base+0x397c0>
   476fc:	mov	x0, x23
   47700:	mov	x1, x22
   47704:	mov	x2, x21
   47708:	mov	x3, x20
   4770c:	mov	x4, x19
   47710:	bl	452a4 <ZSTD_endStream@@Base+0x37350>
   47714:	ldp	x20, x19, [sp, #48]
   47718:	ldp	x22, x21, [sp, #32]
   4771c:	ldr	x23, [sp, #16]
   47720:	ldp	x29, x30, [sp], #64
   47724:	ret
   47728:	stp	x29, x30, [sp, #-64]!
   4772c:	str	x23, [sp, #16]
   47730:	mov	x23, x0
   47734:	mov	x0, x4
   47738:	stp	x22, x21, [sp, #32]
   4773c:	stp	x20, x19, [sp, #48]
   47740:	mov	x29, sp
   47744:	mov	x19, x4
   47748:	mov	x20, x3
   4774c:	mov	x21, x2
   47750:	mov	x22, x1
   47754:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   47758:	tst	x0, #0xff00
   4775c:	b.eq	4777c <ZSTD_endStream@@Base+0x39828>  // b.none
   47760:	mov	x0, x23
   47764:	mov	x1, x22
   47768:	mov	x2, x21
   4776c:	mov	x3, x20
   47770:	mov	x4, x19
   47774:	bl	46894 <ZSTD_endStream@@Base+0x38940>
   47778:	b	47794 <ZSTD_endStream@@Base+0x39840>
   4777c:	mov	x0, x23
   47780:	mov	x1, x22
   47784:	mov	x2, x21
   47788:	mov	x3, x20
   4778c:	mov	x4, x19
   47790:	bl	455dc <ZSTD_endStream@@Base+0x37688>
   47794:	ldp	x20, x19, [sp, #48]
   47798:	ldp	x22, x21, [sp, #32]
   4779c:	ldr	x23, [sp, #16]
   477a0:	ldp	x29, x30, [sp], #64
   477a4:	ret
   477a8:	cmp	x1, x0
   477ac:	b.cs	477c0 <ZSTD_endStream@@Base+0x3986c>  // b.hs, b.nlast
   477b0:	lsl	x8, x1, #4
   477b4:	udiv	x8, x8, x0
   477b8:	and	x8, x8, #0xffffffff
   477bc:	b	477c4 <ZSTD_endStream@@Base+0x39870>
   477c0:	mov	w8, #0xf                   	// #15
   477c4:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   477c8:	mov	w9, #0x18                  	// #24
   477cc:	add	x10, x10, #0xe30
   477d0:	madd	x8, x8, x9, x10
   477d4:	ldp	w9, w10, [x8]
   477d8:	ldp	w11, w8, [x8, #8]
   477dc:	lsr	x12, x0, #8
   477e0:	madd	w9, w10, w12, w9
   477e4:	madd	w8, w8, w12, w11
   477e8:	add	w8, w8, w8, lsr #3
   477ec:	cmp	w8, w9
   477f0:	cset	w0, cc  // cc = lo, ul, last
   477f4:	ret
   477f8:	stp	x29, x30, [sp, #-48]!
   477fc:	stp	x22, x21, [sp, #16]
   47800:	stp	x20, x19, [sp, #32]
   47804:	mov	x29, sp
   47808:	cbz	x1, 47824 <ZSTD_endStream@@Base+0x398d0>
   4780c:	mov	x21, x3
   47810:	mov	x19, x1
   47814:	cmp	x3, x1
   47818:	b.ls	4782c <ZSTD_endStream@@Base+0x398d8>  // b.plast
   4781c:	mov	x19, #0xffffffffffffffec    	// #-20
   47820:	b	47898 <ZSTD_endStream@@Base+0x39944>
   47824:	mov	x19, #0xffffffffffffffba    	// #-70
   47828:	b	47898 <ZSTD_endStream@@Base+0x39944>
   4782c:	mov	x20, x2
   47830:	mov	x22, x0
   47834:	b.ne	4784c <ZSTD_endStream@@Base+0x398f8>  // b.any
   47838:	mov	x0, x22
   4783c:	mov	x1, x20
   47840:	mov	x2, x19
   47844:	bl	4420 <memcpy@plt>
   47848:	b	47898 <ZSTD_endStream@@Base+0x39944>
   4784c:	cmp	x21, #0x1
   47850:	b.ne	47868 <ZSTD_endStream@@Base+0x39914>  // b.any
   47854:	ldrb	w1, [x20]
   47858:	mov	x0, x22
   4785c:	mov	x2, x19
   47860:	bl	46a0 <memset@plt>
   47864:	b	47898 <ZSTD_endStream@@Base+0x39944>
   47868:	mov	x0, x19
   4786c:	mov	x1, x21
   47870:	bl	477a8 <ZSTD_endStream@@Base+0x39854>
   47874:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   47878:	add	x8, x8, #0xd70
   4787c:	ldr	x8, [x8, w0, uxtw #3]
   47880:	mov	x0, x22
   47884:	mov	x1, x19
   47888:	mov	x2, x20
   4788c:	mov	x3, x21
   47890:	blr	x8
   47894:	mov	x19, x0
   47898:	mov	x0, x19
   4789c:	ldp	x20, x19, [sp, #32]
   478a0:	ldp	x22, x21, [sp, #16]
   478a4:	ldp	x29, x30, [sp], #48
   478a8:	ret
   478ac:	stp	x29, x30, [sp, #-64]!
   478b0:	str	x23, [sp, #16]
   478b4:	stp	x22, x21, [sp, #32]
   478b8:	stp	x20, x19, [sp, #48]
   478bc:	mov	x29, sp
   478c0:	cbz	x2, 478dc <ZSTD_endStream@@Base+0x39988>
   478c4:	mov	x21, x4
   478c8:	mov	x19, x2
   478cc:	cmp	x4, x2
   478d0:	b.ls	478e4 <ZSTD_endStream@@Base+0x39990>  // b.plast
   478d4:	mov	x19, #0xffffffffffffffec    	// #-20
   478d8:	b	4796c <ZSTD_endStream@@Base+0x39a18>
   478dc:	mov	x19, #0xffffffffffffffba    	// #-70
   478e0:	b	4796c <ZSTD_endStream@@Base+0x39a18>
   478e4:	mov	x20, x3
   478e8:	mov	x22, x1
   478ec:	b.ne	47904 <ZSTD_endStream@@Base+0x399b0>  // b.any
   478f0:	mov	x0, x22
   478f4:	mov	x1, x20
   478f8:	mov	x2, x19
   478fc:	bl	4420 <memcpy@plt>
   47900:	b	4796c <ZSTD_endStream@@Base+0x39a18>
   47904:	cmp	x21, #0x1
   47908:	b.ne	47920 <ZSTD_endStream@@Base+0x399cc>  // b.any
   4790c:	ldrb	w1, [x20]
   47910:	mov	x0, x22
   47914:	mov	x2, x19
   47918:	bl	46a0 <memset@plt>
   4791c:	b	4796c <ZSTD_endStream@@Base+0x39a18>
   47920:	mov	x23, x0
   47924:	mov	x0, x19
   47928:	mov	x1, x21
   4792c:	bl	477a8 <ZSTD_endStream@@Base+0x39854>
   47930:	cbz	w0, 47950 <ZSTD_endStream@@Base+0x399fc>
   47934:	mov	x0, x23
   47938:	mov	x1, x22
   4793c:	mov	x2, x19
   47940:	mov	x3, x20
   47944:	mov	x4, x21
   47948:	bl	47600 <ZSTD_endStream@@Base+0x396ac>
   4794c:	b	47968 <ZSTD_endStream@@Base+0x39a14>
   47950:	mov	x0, x23
   47954:	mov	x1, x22
   47958:	mov	x2, x19
   4795c:	mov	x3, x20
   47960:	mov	x4, x21
   47964:	bl	45f98 <ZSTD_endStream@@Base+0x38044>
   47968:	mov	x19, x0
   4796c:	mov	x0, x19
   47970:	ldp	x20, x19, [sp, #48]
   47974:	ldp	x22, x21, [sp, #32]
   47978:	ldr	x23, [sp, #16]
   4797c:	ldp	x29, x30, [sp], #64
   47980:	ret
   47984:	stp	x29, x30, [sp, #-32]!
   47988:	str	x28, [sp, #16]
   4798c:	mov	x29, sp
   47990:	sub	sp, sp, #0x800
   47994:	mov	x5, sp
   47998:	mov	w6, #0x800                 	// #2048
   4799c:	bl	479b0 <ZSTD_endStream@@Base+0x39a5c>
   479a0:	add	sp, sp, #0x800
   479a4:	ldr	x28, [sp, #16]
   479a8:	ldp	x29, x30, [sp], #32
   479ac:	ret
   479b0:	stp	x29, x30, [sp, #-80]!
   479b4:	str	x25, [sp, #16]
   479b8:	stp	x24, x23, [sp, #32]
   479bc:	stp	x22, x21, [sp, #48]
   479c0:	stp	x20, x19, [sp, #64]
   479c4:	mov	x29, sp
   479c8:	cbz	x2, 47a20 <ZSTD_endStream@@Base+0x39acc>
   479cc:	mov	x21, x4
   479d0:	cbz	x4, 47a28 <ZSTD_endStream@@Base+0x39ad4>
   479d4:	mov	x24, x1
   479d8:	mov	x25, x0
   479dc:	mov	x0, x2
   479e0:	mov	x1, x21
   479e4:	mov	x19, x6
   479e8:	mov	x20, x5
   479ec:	mov	x22, x3
   479f0:	mov	x23, x2
   479f4:	bl	477a8 <ZSTD_endStream@@Base+0x39854>
   479f8:	cbz	w0, 47a30 <ZSTD_endStream@@Base+0x39adc>
   479fc:	mov	x0, x25
   47a00:	mov	x1, x24
   47a04:	mov	x2, x23
   47a08:	mov	x3, x22
   47a0c:	mov	x4, x21
   47a10:	mov	x5, x20
   47a14:	mov	x6, x19
   47a18:	bl	47560 <ZSTD_endStream@@Base+0x3960c>
   47a1c:	b	47a50 <ZSTD_endStream@@Base+0x39afc>
   47a20:	mov	x0, #0xffffffffffffffba    	// #-70
   47a24:	b	47a50 <ZSTD_endStream@@Base+0x39afc>
   47a28:	mov	x0, #0xffffffffffffffec    	// #-20
   47a2c:	b	47a50 <ZSTD_endStream@@Base+0x39afc>
   47a30:	mov	x0, x25
   47a34:	mov	x1, x24
   47a38:	mov	x2, x23
   47a3c:	mov	x3, x22
   47a40:	mov	x4, x21
   47a44:	mov	x5, x20
   47a48:	mov	x6, x19
   47a4c:	bl	45ef8 <ZSTD_endStream@@Base+0x37fa4>
   47a50:	ldp	x20, x19, [sp, #64]
   47a54:	ldp	x22, x21, [sp, #48]
   47a58:	ldp	x24, x23, [sp, #32]
   47a5c:	ldr	x25, [sp, #16]
   47a60:	ldp	x29, x30, [sp], #80
   47a64:	ret
   47a68:	stp	x29, x30, [sp, #-80]!
   47a6c:	str	x25, [sp, #16]
   47a70:	stp	x24, x23, [sp, #32]
   47a74:	stp	x22, x21, [sp, #48]
   47a78:	stp	x20, x19, [sp, #64]
   47a7c:	mov	x29, sp
   47a80:	cbz	x2, 47a9c <ZSTD_endStream@@Base+0x39b48>
   47a84:	mov	x23, x4
   47a88:	mov	x19, x2
   47a8c:	cmp	x4, x2
   47a90:	b.ls	47aa4 <ZSTD_endStream@@Base+0x39b50>  // b.plast
   47a94:	mov	x19, #0xffffffffffffffec    	// #-20
   47a98:	b	47b44 <ZSTD_endStream@@Base+0x39bf0>
   47a9c:	mov	x19, #0xffffffffffffffba    	// #-70
   47aa0:	b	47b44 <ZSTD_endStream@@Base+0x39bf0>
   47aa4:	mov	x22, x3
   47aa8:	mov	x24, x1
   47aac:	b.ne	47ac4 <ZSTD_endStream@@Base+0x39b70>  // b.any
   47ab0:	mov	x0, x24
   47ab4:	mov	x1, x22
   47ab8:	mov	x2, x19
   47abc:	bl	4420 <memcpy@plt>
   47ac0:	b	47b44 <ZSTD_endStream@@Base+0x39bf0>
   47ac4:	cmp	x23, #0x1
   47ac8:	b.ne	47ae0 <ZSTD_endStream@@Base+0x39b8c>  // b.any
   47acc:	ldrb	w1, [x22]
   47ad0:	mov	x0, x24
   47ad4:	mov	x2, x19
   47ad8:	bl	46a0 <memset@plt>
   47adc:	b	47b44 <ZSTD_endStream@@Base+0x39bf0>
   47ae0:	mov	x25, x0
   47ae4:	mov	x0, x19
   47ae8:	mov	x1, x23
   47aec:	mov	x20, x6
   47af0:	mov	x21, x5
   47af4:	bl	477a8 <ZSTD_endStream@@Base+0x39854>
   47af8:	cbz	w0, 47b20 <ZSTD_endStream@@Base+0x39bcc>
   47afc:	mov	x0, x25
   47b00:	mov	x1, x24
   47b04:	mov	x2, x19
   47b08:	mov	x3, x22
   47b0c:	mov	x4, x23
   47b10:	mov	x5, x21
   47b14:	mov	x6, x20
   47b18:	bl	466f0 <ZSTD_endStream@@Base+0x3879c>
   47b1c:	b	47b40 <ZSTD_endStream@@Base+0x39bec>
   47b20:	mov	x0, x25
   47b24:	mov	x1, x24
   47b28:	mov	x2, x19
   47b2c:	mov	x3, x22
   47b30:	mov	x4, x23
   47b34:	mov	x5, x21
   47b38:	mov	x6, x20
   47b3c:	bl	4543c <ZSTD_endStream@@Base+0x374e8>
   47b40:	mov	x19, x0
   47b44:	mov	x0, x19
   47b48:	ldp	x20, x19, [sp, #64]
   47b4c:	ldp	x22, x21, [sp, #48]
   47b50:	ldp	x24, x23, [sp, #32]
   47b54:	ldr	x25, [sp, #16]
   47b58:	ldp	x29, x30, [sp], #80
   47b5c:	ret
   47b60:	stp	x29, x30, [sp, #-32]!
   47b64:	str	x28, [sp, #16]
   47b68:	mov	x29, sp
   47b6c:	sub	sp, sp, #0x800
   47b70:	mov	x5, sp
   47b74:	mov	w6, #0x800                 	// #2048
   47b78:	bl	47a68 <ZSTD_endStream@@Base+0x39b14>
   47b7c:	add	sp, sp, #0x800
   47b80:	ldr	x28, [sp, #16]
   47b84:	ldp	x29, x30, [sp], #32
   47b88:	ret
   47b8c:	stp	x29, x30, [sp, #-64]!
   47b90:	str	x23, [sp, #16]
   47b94:	mov	x23, x0
   47b98:	mov	x0, x4
   47b9c:	stp	x22, x21, [sp, #32]
   47ba0:	stp	x20, x19, [sp, #48]
   47ba4:	mov	x29, sp
   47ba8:	mov	x19, x4
   47bac:	mov	x20, x3
   47bb0:	mov	x21, x2
   47bb4:	mov	x22, x1
   47bb8:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   47bbc:	tst	x0, #0xff00
   47bc0:	b.eq	47be0 <ZSTD_endStream@@Base+0x39c8c>  // b.none
   47bc4:	mov	x0, x23
   47bc8:	mov	x1, x22
   47bcc:	mov	x2, x21
   47bd0:	mov	x3, x20
   47bd4:	mov	x4, x19
   47bd8:	bl	4648c <ZSTD_endStream@@Base+0x38538>
   47bdc:	b	47bf8 <ZSTD_endStream@@Base+0x39ca4>
   47be0:	mov	x0, x23
   47be4:	mov	x1, x22
   47be8:	mov	x2, x21
   47bec:	mov	x3, x20
   47bf0:	mov	x4, x19
   47bf4:	bl	452a4 <ZSTD_endStream@@Base+0x37350>
   47bf8:	ldp	x20, x19, [sp, #48]
   47bfc:	ldp	x22, x21, [sp, #32]
   47c00:	ldr	x23, [sp, #16]
   47c04:	ldp	x29, x30, [sp], #64
   47c08:	ret
   47c0c:	stp	x29, x30, [sp, #-64]!
   47c10:	stp	x24, x23, [sp, #16]
   47c14:	stp	x22, x21, [sp, #32]
   47c18:	stp	x20, x19, [sp, #48]
   47c1c:	mov	x21, x4
   47c20:	mov	x23, x3
   47c24:	mov	x20, x2
   47c28:	mov	x22, x1
   47c2c:	mov	x1, x3
   47c30:	mov	x2, x4
   47c34:	mov	x3, x5
   47c38:	mov	x4, x6
   47c3c:	mov	x29, sp
   47c40:	mov	x19, x0
   47c44:	bl	45094 <ZSTD_endStream@@Base+0x37140>
   47c48:	mov	x24, x0
   47c4c:	bl	451f8 <ZSTD_endStream@@Base+0x372a4>
   47c50:	cbnz	w0, 47c80 <ZSTD_endStream@@Base+0x39d2c>
   47c54:	cmp	x24, x21
   47c58:	b.cs	47c7c <ZSTD_endStream@@Base+0x39d28>  // b.hs, b.nlast
   47c5c:	add	x2, x23, x24
   47c60:	sub	x3, x21, x24
   47c64:	mov	x0, x22
   47c68:	mov	x1, x20
   47c6c:	mov	x4, x19
   47c70:	bl	452a4 <ZSTD_endStream@@Base+0x37350>
   47c74:	mov	x24, x0
   47c78:	b	47c80 <ZSTD_endStream@@Base+0x39d2c>
   47c7c:	mov	x24, #0xffffffffffffffb8    	// #-72
   47c80:	mov	x0, x24
   47c84:	ldp	x20, x19, [sp, #48]
   47c88:	ldp	x22, x21, [sp, #32]
   47c8c:	ldp	x24, x23, [sp, #16]
   47c90:	ldp	x29, x30, [sp], #64
   47c94:	ret
   47c98:	stp	x29, x30, [sp, #-64]!
   47c9c:	str	x23, [sp, #16]
   47ca0:	mov	x23, x0
   47ca4:	mov	x0, x4
   47ca8:	stp	x22, x21, [sp, #32]
   47cac:	stp	x20, x19, [sp, #48]
   47cb0:	mov	x29, sp
   47cb4:	mov	x19, x4
   47cb8:	mov	x20, x3
   47cbc:	mov	x21, x2
   47cc0:	mov	x22, x1
   47cc4:	bl	45204 <ZSTD_endStream@@Base+0x372b0>
   47cc8:	tst	x0, #0xff00
   47ccc:	b.eq	47cec <ZSTD_endStream@@Base+0x39d98>  // b.none
   47cd0:	mov	x0, x23
   47cd4:	mov	x1, x22
   47cd8:	mov	x2, x21
   47cdc:	mov	x3, x20
   47ce0:	mov	x4, x19
   47ce4:	bl	46894 <ZSTD_endStream@@Base+0x38940>
   47ce8:	b	47d04 <ZSTD_endStream@@Base+0x39db0>
   47cec:	mov	x0, x23
   47cf0:	mov	x1, x22
   47cf4:	mov	x2, x21
   47cf8:	mov	x3, x20
   47cfc:	mov	x4, x19
   47d00:	bl	455dc <ZSTD_endStream@@Base+0x37688>
   47d04:	ldp	x20, x19, [sp, #48]
   47d08:	ldp	x22, x21, [sp, #32]
   47d0c:	ldr	x23, [sp, #16]
   47d10:	ldp	x29, x30, [sp], #64
   47d14:	ret
   47d18:	stp	x29, x30, [sp, #-80]!
   47d1c:	str	x25, [sp, #16]
   47d20:	stp	x24, x23, [sp, #32]
   47d24:	stp	x22, x21, [sp, #48]
   47d28:	stp	x20, x19, [sp, #64]
   47d2c:	mov	x29, sp
   47d30:	cbz	x2, 47d88 <ZSTD_endStream@@Base+0x39e34>
   47d34:	mov	x21, x4
   47d38:	cbz	x4, 47d90 <ZSTD_endStream@@Base+0x39e3c>
   47d3c:	mov	x24, x1
   47d40:	mov	x25, x0
   47d44:	mov	x0, x2
   47d48:	mov	x1, x21
   47d4c:	mov	x19, x6
   47d50:	mov	x20, x5
   47d54:	mov	x22, x3
   47d58:	mov	x23, x2
   47d5c:	bl	477a8 <ZSTD_endStream@@Base+0x39854>
   47d60:	cbz	w0, 47d98 <ZSTD_endStream@@Base+0x39e44>
   47d64:	mov	x0, x25
   47d68:	mov	x1, x24
   47d6c:	mov	x2, x23
   47d70:	mov	x3, x22
   47d74:	mov	x4, x21
   47d78:	mov	x5, x20
   47d7c:	mov	x6, x19
   47d80:	bl	47574 <ZSTD_endStream@@Base+0x39620>
   47d84:	b	47db8 <ZSTD_endStream@@Base+0x39e64>
   47d88:	mov	x0, #0xffffffffffffffba    	// #-70
   47d8c:	b	47db8 <ZSTD_endStream@@Base+0x39e64>
   47d90:	mov	x0, #0xffffffffffffffec    	// #-20
   47d94:	b	47db8 <ZSTD_endStream@@Base+0x39e64>
   47d98:	mov	x0, x25
   47d9c:	mov	x1, x24
   47da0:	mov	x2, x23
   47da4:	mov	x3, x22
   47da8:	mov	x4, x21
   47dac:	mov	x5, x20
   47db0:	mov	x6, x19
   47db4:	bl	45f0c <ZSTD_endStream@@Base+0x37fb8>
   47db8:	ldp	x20, x19, [sp, #64]
   47dbc:	ldp	x22, x21, [sp, #48]
   47dc0:	ldp	x24, x23, [sp, #32]
   47dc4:	ldr	x25, [sp, #16]
   47dc8:	ldp	x29, x30, [sp], #80
   47dcc:	ret
   47dd0:	stp	x29, x30, [sp, #-48]!
   47dd4:	stp	x20, x19, [sp, #32]
   47dd8:	mov	x20, x0
   47ddc:	str	x21, [sp, #16]
   47de0:	mov	x29, sp
   47de4:	cbz	x2, 47e2c <ZSTD_endStream@@Base+0x39ed8>
   47de8:	mov	x19, x2
   47dec:	add	x8, x1, #0x8
   47df0:	cmp	x2, #0x8
   47df4:	stp	x1, x8, [x20, #24]
   47df8:	b.cc	47e40 <ZSTD_endStream@@Base+0x39eec>  // b.lo, b.ul, b.last
   47dfc:	add	x21, x1, x19
   47e00:	sub	x0, x21, #0x8
   47e04:	str	x0, [x20, #16]
   47e08:	bl	47f58 <ZSTD_endStream@@Base+0x3a004>
   47e0c:	str	x0, [x20]
   47e10:	ldurb	w0, [x21, #-1]
   47e14:	cbz	w0, 47f04 <ZSTD_endStream@@Base+0x39fb0>
   47e18:	bl	47f6c <ZSTD_endStream@@Base+0x3a018>
   47e1c:	mov	w8, #0x8                   	// #8
   47e20:	sub	w8, w8, w0
   47e24:	str	w8, [x20, #8]
   47e28:	b	47f20 <ZSTD_endStream@@Base+0x39fcc>
   47e2c:	movi	v0.2d, #0x0
   47e30:	str	xzr, [x20, #32]
   47e34:	stp	q0, q0, [x20]
   47e38:	mov	x19, #0xffffffffffffffb8    	// #-72
   47e3c:	b	47f20 <ZSTD_endStream@@Base+0x39fcc>
   47e40:	ldr	x8, [x20, #24]
   47e44:	sub	x9, x19, #0x2
   47e48:	cmp	x9, #0x5
   47e4c:	str	x8, [x20, #16]
   47e50:	ldrb	w8, [x8]
   47e54:	str	x8, [x20]
   47e58:	b.hi	47ed0 <ZSTD_endStream@@Base+0x39f7c>  // b.pmore
   47e5c:	adrp	x10, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   47e60:	add	x10, x10, #0xe28
   47e64:	adr	x11, 47e74 <ZSTD_endStream@@Base+0x39f20>
   47e68:	ldrb	w12, [x10, x9]
   47e6c:	add	x11, x11, x12, lsl #2
   47e70:	br	x11
   47e74:	ldrb	w9, [x1, #6]
   47e78:	bfi	x8, x9, #48, #8
   47e7c:	str	x8, [x20]
   47e80:	ldrb	w8, [x1, #5]
   47e84:	ldr	x9, [x20]
   47e88:	add	x8, x9, x8, lsl #40
   47e8c:	str	x8, [x20]
   47e90:	ldrb	w8, [x1, #4]
   47e94:	ldr	x9, [x20]
   47e98:	add	x8, x9, x8, lsl #32
   47e9c:	str	x8, [x20]
   47ea0:	ldrb	w8, [x1, #3]
   47ea4:	ldr	x9, [x20]
   47ea8:	add	x8, x9, x8, lsl #24
   47eac:	str	x8, [x20]
   47eb0:	ldrb	w8, [x1, #2]
   47eb4:	ldr	x9, [x20]
   47eb8:	add	x8, x9, x8, lsl #16
   47ebc:	str	x8, [x20]
   47ec0:	ldrb	w8, [x1, #1]
   47ec4:	ldr	x9, [x20]
   47ec8:	add	x8, x9, x8, lsl #8
   47ecc:	str	x8, [x20]
   47ed0:	add	x8, x19, x1
   47ed4:	ldurb	w21, [x8, #-1]
   47ed8:	cbz	w21, 47f10 <ZSTD_endStream@@Base+0x39fbc>
   47edc:	mov	w0, w21
   47ee0:	bl	47f6c <ZSTD_endStream@@Base+0x3a018>
   47ee4:	mov	w8, #0x8                   	// #8
   47ee8:	sub	w8, w8, w0
   47eec:	str	w8, [x20, #8]
   47ef0:	cbz	w21, 47f1c <ZSTD_endStream@@Base+0x39fc8>
   47ef4:	sub	w8, w8, w19, lsl #3
   47ef8:	add	w8, w8, #0x40
   47efc:	str	w8, [x20, #8]
   47f00:	b	47f20 <ZSTD_endStream@@Base+0x39fcc>
   47f04:	mov	x19, #0xffffffffffffffff    	// #-1
   47f08:	str	wzr, [x20, #8]
   47f0c:	b	47f20 <ZSTD_endStream@@Base+0x39fcc>
   47f10:	mov	w8, wzr
   47f14:	str	w8, [x20, #8]
   47f18:	cbnz	w21, 47ef4 <ZSTD_endStream@@Base+0x39fa0>
   47f1c:	mov	x19, #0xffffffffffffffec    	// #-20
   47f20:	mov	x0, x19
   47f24:	ldp	x20, x19, [sp, #32]
   47f28:	ldr	x21, [sp, #16]
   47f2c:	ldp	x29, x30, [sp], #48
   47f30:	ret
   47f34:	ldp	x8, x9, [x0, #16]
   47f38:	cmp	x8, x9
   47f3c:	b.eq	47f48 <ZSTD_endStream@@Base+0x39ff4>  // b.none
   47f40:	mov	w0, wzr
   47f44:	ret
   47f48:	ldr	w8, [x0, #8]
   47f4c:	cmp	w8, #0x40
   47f50:	cset	w0, eq  // eq = none
   47f54:	ret
   47f58:	stp	x29, x30, [sp, #-16]!
   47f5c:	mov	x29, sp
   47f60:	bl	47f78 <ZSTD_endStream@@Base+0x3a024>
   47f64:	ldp	x29, x30, [sp], #16
   47f68:	ret
   47f6c:	clz	w8, w0
   47f70:	eor	w0, w8, #0x1f
   47f74:	ret
   47f78:	stp	x29, x30, [sp, #-16]!
   47f7c:	mov	x29, sp
   47f80:	bl	47f8c <ZSTD_endStream@@Base+0x3a038>
   47f84:	ldp	x29, x30, [sp], #16
   47f88:	ret
   47f8c:	ldr	x0, [x0]
   47f90:	ret
   47f94:	stp	x29, x30, [sp, #-32]!
   47f98:	stp	x20, x19, [sp, #16]
   47f9c:	ldr	w8, [x0, #8]
   47fa0:	mov	x29, sp
   47fa4:	cmp	w8, #0x40
   47fa8:	b.ls	47fb4 <ZSTD_endStream@@Base+0x3a060>  // b.plast
   47fac:	mov	w20, #0x3                   	// #3
   47fb0:	b	48030 <ZSTD_endStream@@Base+0x3a0dc>
   47fb4:	ldr	x9, [x0, #16]
   47fb8:	ldr	x10, [x0, #32]
   47fbc:	mov	x19, x0
   47fc0:	cmp	x9, x10
   47fc4:	b.cs	48004 <ZSTD_endStream@@Base+0x3a0b0>  // b.hs, b.nlast
   47fc8:	ldr	x10, [x19, #24]
   47fcc:	cmp	x9, x10
   47fd0:	b.eq	48024 <ZSTD_endStream@@Base+0x3a0d0>  // b.none
   47fd4:	lsr	x11, x8, #3
   47fd8:	sub	x13, x9, x11
   47fdc:	sub	w12, w9, w10
   47fe0:	cmp	x13, x10
   47fe4:	csel	w10, w12, w11, cc  // cc = lo, ul, last
   47fe8:	sub	x0, x9, x10
   47fec:	sub	w8, w8, w10, lsl #3
   47ff0:	cset	w20, cc  // cc = lo, ul, last
   47ff4:	str	x0, [x19, #16]
   47ff8:	str	w8, [x19, #8]
   47ffc:	bl	47f58 <ZSTD_endStream@@Base+0x3a004>
   48000:	b	4801c <ZSTD_endStream@@Base+0x3a0c8>
   48004:	sub	x0, x9, x8, lsr #3
   48008:	and	w8, w8, #0x7
   4800c:	str	x0, [x19, #16]
   48010:	str	w8, [x19, #8]
   48014:	bl	47f58 <ZSTD_endStream@@Base+0x3a004>
   48018:	mov	w20, wzr
   4801c:	str	x0, [x19]
   48020:	b	48030 <ZSTD_endStream@@Base+0x3a0dc>
   48024:	cmp	w8, #0x40
   48028:	mov	w8, #0x1                   	// #1
   4802c:	cinc	w20, w8, cs  // cs = hs, nlast
   48030:	mov	w0, w20
   48034:	ldp	x20, x19, [sp, #16]
   48038:	ldp	x29, x30, [sp], #32
   4803c:	ret
   48040:	ldr	x8, [x0]
   48044:	ldr	w9, [x0, #8]
   48048:	lsl	x8, x8, x9
   4804c:	neg	w9, w1
   48050:	lsr	x0, x8, x9
   48054:	ret
   48058:	ldr	w8, [x0, #8]
   4805c:	add	w8, w8, w1
   48060:	str	w8, [x0, #8]
   48064:	ret
   48068:	stp	x29, x30, [sp, #-16]!
   4806c:	mov	x29, sp
   48070:	bl	4807c <ZSTD_endStream@@Base+0x3a128>
   48074:	ldp	x29, x30, [sp], #16
   48078:	ret
   4807c:	ldrh	w0, [x0]
   48080:	ret
   48084:	sub	sp, sp, #0xc0
   48088:	stp	x29, x30, [sp, #96]
   4808c:	stp	x28, x27, [sp, #112]
   48090:	stp	x26, x25, [sp, #128]
   48094:	stp	x24, x23, [sp, #144]
   48098:	stp	x22, x21, [sp, #160]
   4809c:	stp	x20, x19, [sp, #176]
   480a0:	add	x29, sp, #0x60
   480a4:	str	w7, [sp, #28]
   480a8:	str	x5, [sp, #16]
   480ac:	str	w1, [sp, #12]
   480b0:	ldp	q0, q1, [x3]
   480b4:	ldr	w8, [x3, #48]
   480b8:	ldr	q2, [x3, #32]
   480bc:	ldrh	w24, [x29, #96]
   480c0:	mov	w25, w6
   480c4:	mov	w21, w2
   480c8:	mov	x23, x0
   480cc:	cmp	w4, #0x2
   480d0:	str	w8, [sp, #80]
   480d4:	stp	q1, q2, [sp, #48]
   480d8:	str	q0, [sp, #32]
   480dc:	b.lt	48118 <ZSTD_endStream@@Base+0x3a1c4>  // b.tstop
   480e0:	add	x8, sp, #0x20
   480e4:	ldr	w26, [x8, w4, sxtw #2]
   480e8:	sub	x0, x29, #0x4
   480ec:	mov	w1, w24
   480f0:	bl	481bc <ZSTD_endStream@@Base+0x3a268>
   480f4:	mov	w8, #0x1                   	// #1
   480f8:	sturb	w21, [x29, #-2]
   480fc:	sturb	w8, [x29, #-1]
   48100:	cbz	w26, 48118 <ZSTD_endStream@@Base+0x3a1c4>
   48104:	ldur	w8, [x29, #-4]
   48108:	mov	x9, x23
   4810c:	subs	x26, x26, #0x1
   48110:	str	w8, [x9], #4
   48114:	b.ne	4810c <ZSTD_endStream@@Base+0x3a1b8>  // b.any
   48118:	cbz	w25, 4819c <ZSTD_endStream@@Base+0x3a248>
   4811c:	mov	x26, xzr
   48120:	mov	w25, w25
   48124:	add	x28, sp, #0x20
   48128:	ldr	x8, [sp, #16]
   4812c:	ldr	w9, [sp, #28]
   48130:	mov	w10, #0x1                   	// #1
   48134:	sub	x0, x29, #0x4
   48138:	add	x8, x8, x26, lsl #1
   4813c:	ldrb	w27, [x8, #1]
   48140:	ldrb	w8, [x8]
   48144:	sub	w22, w9, w27
   48148:	ldr	w9, [sp, #12]
   4814c:	ldr	w20, [x28, x27, lsl #2]
   48150:	add	w1, w24, w8, lsl #8
   48154:	sub	w9, w9, w22
   48158:	lsl	w9, w10, w9
   4815c:	add	w19, w9, w20
   48160:	bl	481bc <ZSTD_endStream@@Base+0x3a268>
   48164:	add	w8, w22, w21
   48168:	sturb	w8, [x29, #-2]
   4816c:	mov	w8, #0x2                   	// #2
   48170:	sturb	w8, [x29, #-1]
   48174:	ldur	w8, [x29, #-4]
   48178:	add	w9, w20, #0x1
   4817c:	cmp	w9, w19
   48180:	str	w8, [x23, w20, uxtw #2]
   48184:	mov	w20, w9
   48188:	b.cc	48178 <ZSTD_endStream@@Base+0x3a224>  // b.lo, b.ul, b.last
   4818c:	add	x26, x26, #0x1
   48190:	cmp	x26, x25
   48194:	str	w19, [x28, x27, lsl #2]
   48198:	b.ne	48128 <ZSTD_endStream@@Base+0x3a1d4>  // b.any
   4819c:	ldp	x20, x19, [sp, #176]
   481a0:	ldp	x22, x21, [sp, #160]
   481a4:	ldp	x24, x23, [sp, #144]
   481a8:	ldp	x26, x25, [sp, #128]
   481ac:	ldp	x28, x27, [sp, #112]
   481b0:	ldp	x29, x30, [sp, #96]
   481b4:	add	sp, sp, #0xc0
   481b8:	ret
   481bc:	stp	x29, x30, [sp, #-16]!
   481c0:	mov	x29, sp
   481c4:	bl	481d0 <ZSTD_endStream@@Base+0x3a27c>
   481c8:	ldp	x29, x30, [sp], #16
   481cc:	ret
   481d0:	strh	w1, [x0]
   481d4:	ret
   481d8:	ldr	x0, [x0, #8]
   481dc:	ret
   481e0:	ldr	x0, [x0, #16]
   481e4:	ret
   481e8:	mov	w8, #0x6840                	// #26688
   481ec:	ldr	w8, [x1, x8]
   481f0:	mov	w9, #0x7168                	// #29032
   481f4:	str	w8, [x0, x9]
   481f8:	ldr	x8, [x1, #8]
   481fc:	str	x8, [x0, #28752]
   48200:	str	x8, [x0, #28760]
   48204:	ldp	x8, x9, [x1, #8]
   48208:	add	x8, x8, x9
   4820c:	str	x8, [x0, #28768]
   48210:	str	x8, [x0, #28744]
   48214:	mov	w8, #0x6844                	// #26692
   48218:	ldr	w9, [x1, x8]
   4821c:	mov	w8, #0x683c                	// #26684
   48220:	add	x8, x0, x8
   48224:	cbz	w9, 4827c <ZSTD_endStream@@Base+0x3a328>
   48228:	add	x10, x8, #0x86c
   4822c:	mov	x11, #0x100000001           	// #4294967297
   48230:	mov	w12, #0x1828                	// #6184
   48234:	str	x11, [x10]
   48238:	mov	w10, #0x1020                	// #4128
   4823c:	mov	w11, #0x2830                	// #10288
   48240:	mov	w9, #0x6834                	// #26676
   48244:	add	x12, x1, x12
   48248:	add	x10, x1, x10
   4824c:	add	x11, x1, x11
   48250:	add	x13, x1, #0x18
   48254:	add	x9, x1, x9
   48258:	stp	x13, x12, [x0]
   4825c:	stp	x10, x11, [x0, #16]
   48260:	ldr	w10, [x9]
   48264:	str	w10, [x8]
   48268:	ldr	w10, [x9, #4]
   4826c:	str	w10, [x8, #4]
   48270:	ldr	w9, [x9, #8]
   48274:	str	w9, [x8, #8]
   48278:	ret
   4827c:	add	x8, x8, #0x86c
   48280:	str	xzr, [x8]
   48284:	ret

0000000000048288 <ZSTD_createDDict_advanced@@Base>:
   48288:	sub	sp, sp, #0x60
   4828c:	stp	x29, x30, [sp, #32]
   48290:	stp	x24, x23, [sp, #48]
   48294:	stp	x22, x21, [sp, #64]
   48298:	stp	x20, x19, [sp, #80]
   4829c:	ldp	x8, x9, [x4]
   482a0:	add	x29, sp, #0x20
   482a4:	cmp	x8, #0x0
   482a8:	cset	w8, eq  // eq = none
   482ac:	cmp	x9, #0x0
   482b0:	cset	w9, eq  // eq = none
   482b4:	eor	w8, w8, w9
   482b8:	tbnz	w8, #0, 48334 <ZSTD_createDDict_advanced@@Base+0xac>
   482bc:	ldr	x8, [x4, #16]
   482c0:	ldr	q0, [x4]
   482c4:	mov	x22, x1
   482c8:	mov	x24, x0
   482cc:	mov	x1, sp
   482d0:	mov	w0, #0x6860                	// #26720
   482d4:	mov	x23, x4
   482d8:	mov	w19, w3
   482dc:	mov	w20, w2
   482e0:	str	x8, [sp, #16]
   482e4:	str	q0, [sp]
   482e8:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   482ec:	mov	x21, x0
   482f0:	cbz	x0, 48338 <ZSTD_createDDict_advanced@@Base+0xb0>
   482f4:	ldr	x8, [x23, #16]
   482f8:	ldr	q0, [x23]
   482fc:	mov	w9, #0x6848                	// #26696
   48300:	add	x9, x21, x9
   48304:	mov	x0, x21
   48308:	mov	x1, x24
   4830c:	mov	x2, x22
   48310:	mov	w3, w20
   48314:	mov	w4, w19
   48318:	str	x8, [x9, #16]
   4831c:	str	q0, [x9]
   48320:	bl	48354 <ZSTD_createDDict_advanced@@Base+0xcc>
   48324:	bl	48418 <ZSTD_createDDict_advanced@@Base+0x190>
   48328:	cbz	w0, 48338 <ZSTD_createDDict_advanced@@Base+0xb0>
   4832c:	mov	x0, x21
   48330:	bl	4a00 <ZSTD_freeDDict@plt>
   48334:	mov	x21, xzr
   48338:	mov	x0, x21
   4833c:	ldp	x20, x19, [sp, #80]
   48340:	ldp	x22, x21, [sp, #64]
   48344:	ldp	x24, x23, [sp, #48]
   48348:	ldp	x29, x30, [sp, #32]
   4834c:	add	sp, sp, #0x60
   48350:	ret
   48354:	sub	sp, sp, #0x50
   48358:	stp	x22, x21, [sp, #48]
   4835c:	stp	x20, x19, [sp, #64]
   48360:	mov	w19, w4
   48364:	mov	x21, x2
   48368:	mov	x22, x1
   4836c:	mov	x20, x0
   48370:	stp	x29, x30, [sp, #32]
   48374:	add	x29, sp, #0x20
   48378:	cbz	x2, 483c4 <ZSTD_createDDict_advanced@@Base+0x13c>
   4837c:	cbz	x22, 483c4 <ZSTD_createDDict_advanced@@Base+0x13c>
   48380:	cmp	w3, #0x1
   48384:	b.eq	483c4 <ZSTD_createDDict_advanced@@Base+0x13c>  // b.none
   48388:	mov	w8, #0x6848                	// #26696
   4838c:	add	x8, x20, x8
   48390:	ldr	x9, [x8, #16]
   48394:	ldr	q0, [x8]
   48398:	mov	x1, sp
   4839c:	mov	x0, x21
   483a0:	str	x9, [sp, #16]
   483a4:	str	q0, [sp]
   483a8:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   483ac:	stp	x0, x0, [x20]
   483b0:	cbz	x0, 48400 <ZSTD_createDDict_advanced@@Base+0x178>
   483b4:	mov	x1, x22
   483b8:	mov	x2, x21
   483bc:	bl	4420 <memcpy@plt>
   483c0:	b	483d0 <ZSTD_createDDict_advanced@@Base+0x148>
   483c4:	cmp	x22, #0x0
   483c8:	stp	xzr, x22, [x20]
   483cc:	csel	x21, x21, xzr, ne  // ne = any
   483d0:	mov	w8, #0xc                   	// #12
   483d4:	movk	w8, #0xc00, lsl #16
   483d8:	mov	x0, x20
   483dc:	mov	w1, w19
   483e0:	str	x21, [x20, #16]
   483e4:	str	w8, [x20, #10288]
   483e8:	bl	485f0 <ZSTD_getDictID_fromDDict@@Base+0x20>
   483ec:	mov	x19, x0
   483f0:	bl	48418 <ZSTD_createDDict_advanced@@Base+0x190>
   483f4:	cmp	w0, #0x0
   483f8:	csel	x0, xzr, x19, eq  // eq = none
   483fc:	b	48404 <ZSTD_createDDict_advanced@@Base+0x17c>
   48400:	mov	x0, #0xffffffffffffffc0    	// #-64
   48404:	ldp	x20, x19, [sp, #64]
   48408:	ldp	x22, x21, [sp, #48]
   4840c:	ldp	x29, x30, [sp, #32]
   48410:	add	sp, sp, #0x50
   48414:	ret
   48418:	cmn	x0, #0x78
   4841c:	cset	w0, hi  // hi = pmore
   48420:	ret

0000000000048424 <ZSTD_freeDDict@@Base>:
   48424:	cbz	x0, 48498 <ZSTD_freeDDict@@Base+0x74>
   48428:	sub	sp, sp, #0x60
   4842c:	mov	w8, #0x6848                	// #26696
   48430:	stp	x29, x30, [sp, #64]
   48434:	add	x8, x0, x8
   48438:	ldr	x9, [x8, #16]
   4843c:	ldr	q0, [x8]
   48440:	str	x19, [sp, #80]
   48444:	mov	x19, x0
   48448:	str	x9, [sp, #48]
   4844c:	str	q0, [sp, #32]
   48450:	ldr	x9, [x8, #16]
   48454:	ldr	q0, [x8]
   48458:	ldr	x0, [x0]
   4845c:	mov	x1, sp
   48460:	add	x29, sp, #0x40
   48464:	str	x9, [sp, #16]
   48468:	str	q0, [sp]
   4846c:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   48470:	ldr	q0, [sp, #32]
   48474:	ldr	x8, [sp, #48]
   48478:	mov	x1, sp
   4847c:	mov	x0, x19
   48480:	str	q0, [sp]
   48484:	str	x8, [sp, #16]
   48488:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   4848c:	ldr	x19, [sp, #80]
   48490:	ldp	x29, x30, [sp, #64]
   48494:	add	sp, sp, #0x60
   48498:	mov	x0, xzr
   4849c:	ret

00000000000484a0 <ZSTD_createDDict@@Base>:
   484a0:	sub	sp, sp, #0x30
   484a4:	add	x4, sp, #0x8
   484a8:	mov	w2, wzr
   484ac:	mov	w3, wzr
   484b0:	stp	x29, x30, [sp, #32]
   484b4:	add	x29, sp, #0x20
   484b8:	stp	xzr, xzr, [sp, #8]
   484bc:	str	xzr, [sp, #24]
   484c0:	bl	4760 <ZSTD_createDDict_advanced@plt>
   484c4:	ldp	x29, x30, [sp, #32]
   484c8:	add	sp, sp, #0x30
   484cc:	ret

00000000000484d0 <ZSTD_createDDict_byReference@@Base>:
   484d0:	sub	sp, sp, #0x30
   484d4:	add	x4, sp, #0x8
   484d8:	mov	w2, #0x1                   	// #1
   484dc:	mov	w3, wzr
   484e0:	stp	x29, x30, [sp, #32]
   484e4:	add	x29, sp, #0x20
   484e8:	stp	xzr, xzr, [sp, #8]
   484ec:	str	xzr, [sp, #24]
   484f0:	bl	4760 <ZSTD_createDDict_advanced@plt>
   484f4:	ldp	x29, x30, [sp, #32]
   484f8:	add	sp, sp, #0x30
   484fc:	ret

0000000000048500 <ZSTD_initStaticDDict@@Base>:
   48500:	stp	x29, x30, [sp, #-48]!
   48504:	tst	x0, #0x7
   48508:	stp	x22, x21, [sp, #16]
   4850c:	stp	x20, x19, [sp, #32]
   48510:	mov	x29, sp
   48514:	b.ne	48534 <ZSTD_initStaticDDict@@Base+0x34>  // b.any
   48518:	mov	w8, #0x6860                	// #26720
   4851c:	add	x9, x3, x8
   48520:	cmp	w4, #0x1
   48524:	csel	x8, x8, x9, eq  // eq = none
   48528:	mov	x21, x3
   4852c:	cmp	x8, x1
   48530:	b.ls	48548 <ZSTD_initStaticDDict@@Base+0x48>  // b.plast
   48534:	mov	x0, xzr
   48538:	ldp	x20, x19, [sp, #32]
   4853c:	ldp	x22, x21, [sp, #16]
   48540:	ldp	x29, x30, [sp], #48
   48544:	ret
   48548:	mov	w20, w5
   4854c:	mov	x19, x0
   48550:	cbnz	w4, 48570 <ZSTD_initStaticDDict@@Base+0x70>
   48554:	mov	w8, #0x6860                	// #26720
   48558:	add	x22, x19, x8
   4855c:	mov	x0, x22
   48560:	mov	x1, x2
   48564:	mov	x2, x21
   48568:	bl	4420 <memcpy@plt>
   4856c:	mov	x2, x22
   48570:	mov	w3, #0x1                   	// #1
   48574:	mov	x0, x19
   48578:	mov	x1, x2
   4857c:	mov	x2, x21
   48580:	mov	w4, w20
   48584:	bl	48354 <ZSTD_createDDict_advanced@@Base+0xcc>
   48588:	bl	48418 <ZSTD_createDDict_advanced@@Base+0x190>
   4858c:	cmp	w0, #0x0
   48590:	csel	x0, x19, xzr, eq  // eq = none
   48594:	b	48538 <ZSTD_initStaticDDict@@Base+0x38>

0000000000048598 <ZSTD_estimateDDictSize@@Base>:
   48598:	mov	w8, #0x6860                	// #26720
   4859c:	add	x9, x0, x8
   485a0:	cmp	w1, #0x1
   485a4:	csel	x0, x8, x9, eq  // eq = none
   485a8:	ret

00000000000485ac <ZSTD_sizeof_DDict@@Base>:
   485ac:	cbz	x0, 485c4 <ZSTD_sizeof_DDict@@Base+0x18>
   485b0:	ldr	x8, [x0]
   485b4:	cbz	x8, 485c8 <ZSTD_sizeof_DDict@@Base+0x1c>
   485b8:	ldr	x8, [x0, #16]
   485bc:	mov	w9, #0x6860                	// #26720
   485c0:	add	x0, x8, x9
   485c4:	ret
   485c8:	mov	w0, #0x6860                	// #26720
   485cc:	ret

00000000000485d0 <ZSTD_getDictID_fromDDict@@Base>:
   485d0:	cbz	x0, 485ec <ZSTD_getDictID_fromDDict@@Base+0x1c>
   485d4:	stp	x29, x30, [sp, #-16]!
   485d8:	ldp	x8, x1, [x0, #8]
   485dc:	mov	x29, sp
   485e0:	mov	x0, x8
   485e4:	bl	49e0 <ZSTD_getDictID_fromDict@plt>
   485e8:	ldp	x29, x30, [sp], #16
   485ec:	ret
   485f0:	stp	x29, x30, [sp, #-48]!
   485f4:	stp	x20, x19, [sp, #32]
   485f8:	mov	x19, x0
   485fc:	mov	x0, xzr
   48600:	cmp	w1, #0x1
   48604:	stp	x22, x21, [sp, #16]
   48608:	mov	x29, sp
   4860c:	str	xzr, [x19, #26688]
   48610:	b.eq	486a0 <ZSTD_getDictID_fromDDict@@Base+0xd0>  // b.none
   48614:	ldr	x20, [x19, #16]
   48618:	mov	w22, w1
   4861c:	cmp	x20, #0x7
   48620:	b.hi	48634 <ZSTD_getDictID_fromDDict@@Base+0x64>  // b.pmore
   48624:	cmp	w22, #0x2
   48628:	mov	x8, #0xffffffffffffffe2    	// #-30
   4862c:	csel	x0, x8, xzr, eq  // eq = none
   48630:	b	486a0 <ZSTD_getDictID_fromDDict@@Base+0xd0>
   48634:	ldr	x21, [x19, #8]
   48638:	mov	x0, x21
   4863c:	bl	486b0 <ZSTD_getDictID_fromDDict@@Base+0xe0>
   48640:	mov	w10, #0xa437                	// #42039
   48644:	mov	w8, w0
   48648:	cmp	w22, #0x2
   4864c:	mov	x9, #0xffffffffffffffe2    	// #-30
   48650:	movk	w10, #0xec30, lsl #16
   48654:	csel	x0, x9, xzr, eq  // eq = none
   48658:	cmp	w8, w10
   4865c:	b.ne	486a0 <ZSTD_getDictID_fromDDict@@Base+0xd0>  // b.any
   48660:	mov	w8, #0x6840                	// #26688
   48664:	add	x0, x21, #0x4
   48668:	add	x22, x19, x8
   4866c:	bl	486b0 <ZSTD_getDictID_fromDDict@@Base+0xe0>
   48670:	str	w0, [x22]
   48674:	add	x0, x19, #0x18
   48678:	mov	x1, x21
   4867c:	mov	x2, x20
   48680:	bl	49c30 <ZSTD_decompressContinue@@Base+0x4a0>
   48684:	bl	48418 <ZSTD_createDDict_advanced@@Base+0x190>
   48688:	cbz	w0, 48694 <ZSTD_getDictID_fromDDict@@Base+0xc4>
   4868c:	mov	x0, #0xffffffffffffffe2    	// #-30
   48690:	b	486a0 <ZSTD_getDictID_fromDDict@@Base+0xd0>
   48694:	mov	x0, xzr
   48698:	mov	w8, #0x1                   	// #1
   4869c:	str	w8, [x22, #4]
   486a0:	ldp	x20, x19, [sp, #32]
   486a4:	ldp	x22, x21, [sp, #16]
   486a8:	ldp	x29, x30, [sp], #48
   486ac:	ret
   486b0:	stp	x29, x30, [sp, #-16]!
   486b4:	mov	x29, sp
   486b8:	bl	486c4 <ZSTD_getDictID_fromDDict@@Base+0xf4>
   486bc:	ldp	x29, x30, [sp], #16
   486c0:	ret
   486c4:	ldr	w0, [x0]
   486c8:	ret

00000000000486cc <ZSTD_sizeof_DCtx@@Base>:
   486cc:	cbz	x0, 4870c <ZSTD_sizeof_DCtx@@Base+0x40>
   486d0:	stp	x29, x30, [sp, #-32]!
   486d4:	str	x19, [sp, #16]
   486d8:	mov	x19, x0
   486dc:	ldr	x0, [x0, #29016]
   486e0:	mov	x29, sp
   486e4:	bl	49b0 <ZSTD_sizeof_DDict@plt>
   486e8:	ldr	x8, [x19, #29056]
   486ec:	ldr	x9, [x19, #29088]
   486f0:	ldr	x19, [sp, #16]
   486f4:	add	x8, x0, x8
   486f8:	add	x8, x8, x9
   486fc:	mov	w9, #0x7210                	// #29200
   48700:	movk	w9, #0x2, lsl #16
   48704:	add	x0, x8, x9
   48708:	ldp	x29, x30, [sp], #32
   4870c:	ret

0000000000048710 <ZSTD_estimateDCtxSize@@Base>:
   48710:	mov	w0, #0x7210                	// #29200
   48714:	movk	w0, #0x2, lsl #16
   48718:	ret

000000000004871c <ZSTD_initStaticDCtx@@Base>:
   4871c:	stp	x29, x30, [sp, #-32]!
   48720:	mov	w8, #0x7210                	// #29200
   48724:	movk	w8, #0x2, lsl #16
   48728:	stp	x20, x19, [sp, #16]
   4872c:	mov	x19, x0
   48730:	cmp	x1, x8
   48734:	mov	x0, xzr
   48738:	mov	x29, sp
   4873c:	b.cc	4876c <ZSTD_initStaticDCtx@@Base+0x50>  // b.lo, b.ul, b.last
   48740:	and	x8, x19, #0x7
   48744:	cbnz	x8, 4876c <ZSTD_initStaticDCtx@@Base+0x50>
   48748:	mov	x0, x19
   4874c:	mov	x20, x1
   48750:	bl	48778 <ZSTD_initStaticDCtx@@Base+0x5c>
   48754:	mov	w8, #0x7210                	// #29200
   48758:	movk	w8, #0x2, lsl #16
   4875c:	add	x8, x19, x8
   48760:	mov	x0, x19
   48764:	str	x20, [x19, #29000]
   48768:	str	x8, [x19, #29048]
   4876c:	ldp	x20, x19, [sp, #16]
   48770:	ldp	x29, x30, [sp], #32
   48774:	ret
   48778:	stp	x29, x30, [sp, #-48]!
   4877c:	mov	w8, #0x7110                	// #28944
   48780:	mov	w9, #0x1                   	// #1
   48784:	stp	x20, x19, [sp, #32]
   48788:	movk	w9, #0x800, lsl #16
   4878c:	mov	w10, #0x716c                	// #29036
   48790:	add	x20, x0, x8
   48794:	str	x21, [sp, #16]
   48798:	mov	x29, sp
   4879c:	mov	x19, x0
   487a0:	add	x21, x0, x10
   487a4:	str	wzr, [x20]
   487a8:	str	xzr, [x0, #29000]
   487ac:	str	x9, [x0, #29072]
   487b0:	str	xzr, [x0, #28768]
   487b4:	str	xzr, [x0, #29088]
   487b8:	str	xzr, [x0, #29120]
   487bc:	str	wzr, [x20, #184]
   487c0:	str	wzr, [x20, #196]
   487c4:	bl	4b4ec <ZSTD_decompressStream_simpleArgs@@Base+0x5c>
   487c8:	movi	v0.2d, #0x0
   487cc:	mov	w8, #0x7158                	// #29016
   487d0:	str	q0, [x19, x8]
   487d4:	stp	xzr, xzr, [x21, #8]
   487d8:	str	xzr, [x21]
   487dc:	str	wzr, [x21, #24]
   487e0:	str	w0, [x20, #64]
   487e4:	ldp	x20, x19, [sp, #32]
   487e8:	ldr	x21, [sp, #16]
   487ec:	ldp	x29, x30, [sp], #48
   487f0:	ret

00000000000487f4 <ZSTD_createDCtx_advanced@@Base>:
   487f4:	sub	sp, sp, #0x40
   487f8:	stp	x29, x30, [sp, #32]
   487fc:	stp	x20, x19, [sp, #48]
   48800:	ldp	x8, x9, [x0]
   48804:	add	x29, sp, #0x20
   48808:	cmp	x8, #0x0
   4880c:	cset	w8, eq  // eq = none
   48810:	cmp	x9, #0x0
   48814:	cset	w9, eq  // eq = none
   48818:	eor	w8, w8, w9
   4881c:	tbz	w8, #0, 48828 <ZSTD_createDCtx_advanced@@Base+0x34>
   48820:	mov	x20, xzr
   48824:	b	4886c <ZSTD_createDCtx_advanced@@Base+0x78>
   48828:	ldr	x8, [x0, #16]
   4882c:	ldr	q0, [x0]
   48830:	mov	x19, x0
   48834:	mov	w0, #0x7210                	// #29200
   48838:	mov	x1, sp
   4883c:	movk	w0, #0x2, lsl #16
   48840:	str	x8, [sp, #16]
   48844:	str	q0, [sp]
   48848:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   4884c:	mov	x20, x0
   48850:	cbz	x0, 4886c <ZSTD_createDCtx_advanced@@Base+0x78>
   48854:	ldr	x8, [x19, #16]
   48858:	ldr	q0, [x19]
   4885c:	mov	x0, x20
   48860:	str	x8, [x20, #28976]
   48864:	str	q0, [x20, #28960]
   48868:	bl	48778 <ZSTD_initStaticDCtx@@Base+0x5c>
   4886c:	mov	x0, x20
   48870:	ldp	x20, x19, [sp, #48]
   48874:	ldp	x29, x30, [sp, #32]
   48878:	add	sp, sp, #0x40
   4887c:	ret

0000000000048880 <ZSTD_createDCtx@@Base>:
   48880:	sub	sp, sp, #0x30
   48884:	add	x0, sp, #0x8
   48888:	stp	x29, x30, [sp, #32]
   4888c:	add	x29, sp, #0x20
   48890:	stp	xzr, xzr, [sp, #8]
   48894:	str	xzr, [sp, #24]
   48898:	bl	4ad0 <ZSTD_createDCtx_advanced@plt>
   4889c:	ldp	x29, x30, [sp, #32]
   488a0:	add	sp, sp, #0x30
   488a4:	ret

00000000000488a8 <ZSTD_freeDCtx@@Base>:
   488a8:	sub	sp, sp, #0x60
   488ac:	stp	x29, x30, [sp, #64]
   488b0:	str	x19, [sp, #80]
   488b4:	add	x29, sp, #0x40
   488b8:	cbz	x0, 4893c <ZSTD_freeDCtx@@Base+0x94>
   488bc:	ldr	x8, [x0, #29000]
   488c0:	mov	x19, x0
   488c4:	cbz	x8, 488d0 <ZSTD_freeDCtx@@Base+0x28>
   488c8:	mov	x0, #0xffffffffffffffc0    	// #-64
   488cc:	b	4893c <ZSTD_freeDCtx@@Base+0x94>
   488d0:	ldr	x8, [x19, #28976]
   488d4:	ldr	q0, [x19, #28960]
   488d8:	mov	x0, x19
   488dc:	str	x8, [sp, #48]
   488e0:	str	q0, [sp, #32]
   488e4:	bl	4894c <ZSTD_freeDCtx@@Base+0xa4>
   488e8:	ldr	q0, [sp, #32]
   488ec:	ldr	x8, [sp, #48]
   488f0:	ldr	x0, [x19, #29048]
   488f4:	mov	x1, sp
   488f8:	str	q0, [sp]
   488fc:	str	x8, [sp, #16]
   48900:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   48904:	ldr	x0, [x19, #29120]
   48908:	str	xzr, [x19, #29048]
   4890c:	cbz	x0, 4891c <ZSTD_freeDCtx@@Base+0x74>
   48910:	mov	w8, #0x71c8                	// #29128
   48914:	ldr	w1, [x19, x8]
   48918:	bl	48984 <ZSTD_freeDCtx@@Base+0xdc>
   4891c:	ldr	q0, [sp, #32]
   48920:	ldr	x8, [sp, #48]
   48924:	mov	x1, sp
   48928:	mov	x0, x19
   4892c:	str	q0, [sp]
   48930:	str	x8, [sp, #16]
   48934:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   48938:	mov	x0, xzr
   4893c:	ldr	x19, [sp, #80]
   48940:	ldp	x29, x30, [sp, #64]
   48944:	add	sp, sp, #0x60
   48948:	ret
   4894c:	stp	x29, x30, [sp, #-32]!
   48950:	str	x19, [sp, #16]
   48954:	mov	x19, x0
   48958:	ldr	x0, [x0, #29016]
   4895c:	mov	x29, sp
   48960:	bl	4a00 <ZSTD_freeDDict@plt>
   48964:	mov	w8, #0x7170                	// #29040
   48968:	movi	v0.2d, #0x0
   4896c:	mov	w9, #0x7158                	// #29016
   48970:	str	wzr, [x19, x8]
   48974:	str	q0, [x19, x9]
   48978:	ldr	x19, [sp, #16]
   4897c:	ldp	x29, x30, [sp], #32
   48980:	ret
   48984:	stp	x29, x30, [sp, #-16]!
   48988:	cmp	w1, #0x7
   4898c:	mov	x29, sp
   48990:	b.eq	489b0 <ZSTD_freeDCtx@@Base+0x108>  // b.none
   48994:	cmp	w1, #0x6
   48998:	b.eq	489bc <ZSTD_freeDCtx@@Base+0x114>  // b.none
   4899c:	cmp	w1, #0x5
   489a0:	b.ne	489b4 <ZSTD_freeDCtx@@Base+0x10c>  // b.any
   489a4:	bl	5b9bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c98>
   489a8:	ldp	x29, x30, [sp], #16
   489ac:	ret
   489b0:	bl	652b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd594>
   489b4:	ldp	x29, x30, [sp], #16
   489b8:	ret
   489bc:	bl	601fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x84d8>
   489c0:	ldp	x29, x30, [sp], #16
   489c4:	ret

00000000000489c8 <ZSTD_copyDCtx@@Base>:
   489c8:	stp	x29, x30, [sp, #-16]!
   489cc:	mov	w2, #0x7178                	// #29048
   489d0:	mov	x29, sp
   489d4:	bl	4420 <memcpy@plt>
   489d8:	ldp	x29, x30, [sp], #16
   489dc:	ret

00000000000489e0 <ZSTD_isFrame@@Base>:
   489e0:	stp	x29, x30, [sp, #-32]!
   489e4:	cmp	x1, #0x4
   489e8:	stp	x20, x19, [sp, #16]
   489ec:	mov	x29, sp
   489f0:	b.cs	489fc <ZSTD_isFrame@@Base+0x1c>  // b.hs, b.nlast
   489f4:	mov	w0, wzr
   489f8:	b	48a48 <ZSTD_isFrame@@Base+0x68>
   489fc:	mov	x19, x1
   48a00:	mov	x20, x0
   48a04:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   48a08:	mov	w9, #0xb528                	// #46376
   48a0c:	movk	w9, #0xfd2f, lsl #16
   48a10:	mov	w8, w0
   48a14:	cmp	w0, w9
   48a18:	mov	w0, #0x1                   	// #1
   48a1c:	b.eq	48a48 <ZSTD_isFrame@@Base+0x68>  // b.none
   48a20:	mov	w9, #0x2a50                	// #10832
   48a24:	and	w8, w8, #0xfffffff0
   48a28:	movk	w9, #0x184d, lsl #16
   48a2c:	cmp	w8, w9
   48a30:	b.eq	48a48 <ZSTD_isFrame@@Base+0x68>  // b.none
   48a34:	mov	x0, x20
   48a38:	mov	x1, x19
   48a3c:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   48a40:	cmp	w0, #0x0
   48a44:	cset	w0, ne  // ne = any
   48a48:	ldp	x20, x19, [sp, #16]
   48a4c:	ldp	x29, x30, [sp], #32
   48a50:	ret
   48a54:	stp	x29, x30, [sp, #-16]!
   48a58:	mov	x29, sp
   48a5c:	bl	4b4f4 <ZSTD_decompressStream_simpleArgs@@Base+0x64>
   48a60:	ldp	x29, x30, [sp], #16
   48a64:	ret
   48a68:	stp	x29, x30, [sp, #-32]!
   48a6c:	cmp	x1, #0x4
   48a70:	str	x19, [sp, #16]
   48a74:	mov	x29, sp
   48a78:	b.cc	48aa0 <ZSTD_isFrame@@Base+0xc0>  // b.lo, b.ul, b.last
   48a7c:	mov	w19, #0x4adb                	// #19163
   48a80:	movk	w19, #0x2d0, lsl #16
   48a84:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   48a88:	add	w8, w0, w19
   48a8c:	cmp	w8, #0x2
   48a90:	b.hi	48aa0 <ZSTD_isFrame@@Base+0xc0>  // b.pmore
   48a94:	add	w8, w19, w0
   48a98:	add	w0, w8, #0x5
   48a9c:	b	48aa4 <ZSTD_isFrame@@Base+0xc4>
   48aa0:	mov	w0, wzr
   48aa4:	ldr	x19, [sp, #16]
   48aa8:	ldp	x29, x30, [sp], #32
   48aac:	ret

0000000000048ab0 <ZSTD_frameHeaderSize@@Base>:
   48ab0:	stp	x29, x30, [sp, #-16]!
   48ab4:	mov	w2, wzr
   48ab8:	mov	x29, sp
   48abc:	bl	48ac8 <ZSTD_frameHeaderSize@@Base+0x18>
   48ac0:	ldp	x29, x30, [sp], #16
   48ac4:	ret
   48ac8:	stp	x29, x30, [sp, #-32]!
   48acc:	stp	x20, x19, [sp, #16]
   48ad0:	mov	x19, x0
   48ad4:	mov	w0, w2
   48ad8:	mov	x29, sp
   48adc:	mov	x20, x1
   48ae0:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   48ae4:	cmp	x0, x20
   48ae8:	b.ls	48af4 <ZSTD_frameHeaderSize@@Base+0x44>  // b.plast
   48aec:	mov	x0, #0xffffffffffffffb8    	// #-72
   48af0:	b	48b3c <ZSTD_frameHeaderSize@@Base+0x8c>
   48af4:	add	x8, x0, x19
   48af8:	ldurb	w8, [x8, #-1]
   48afc:	adrp	x9, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   48b00:	add	x9, x9, #0x3b0
   48b04:	adrp	x10, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   48b08:	and	x11, x8, #0x3
   48b0c:	add	x10, x10, #0x3d0
   48b10:	lsr	x12, x8, #6
   48b14:	ldr	x9, [x9, x11, lsl #3]
   48b18:	ldr	x10, [x10, x12, lsl #3]
   48b1c:	cmp	w12, #0x0
   48b20:	cset	w11, eq  // eq = none
   48b24:	add	x9, x9, x0
   48b28:	tst	w8, #0x20
   48b2c:	add	x9, x9, x10
   48b30:	and	w8, w11, w8, lsr #5
   48b34:	cinc	x9, x9, eq  // eq = none
   48b38:	add	x0, x9, x8
   48b3c:	ldp	x20, x19, [sp, #16]
   48b40:	ldp	x29, x30, [sp], #32
   48b44:	ret

0000000000048b48 <ZSTD_getFrameHeader_advanced@@Base>:
   48b48:	stp	x29, x30, [sp, #-96]!
   48b4c:	stp	x20, x19, [sp, #80]
   48b50:	mov	x19, x0
   48b54:	mov	w0, w3
   48b58:	str	x27, [sp, #16]
   48b5c:	stp	x26, x25, [sp, #32]
   48b60:	stp	x24, x23, [sp, #48]
   48b64:	stp	x22, x21, [sp, #64]
   48b68:	mov	x29, sp
   48b6c:	mov	w20, w3
   48b70:	mov	x23, x2
   48b74:	mov	x22, x1
   48b78:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   48b7c:	mov	x21, x0
   48b80:	movi	v0.2d, #0x0
   48b84:	cmp	x0, x23
   48b88:	stp	q0, q0, [x19]
   48b8c:	str	xzr, [x19, #32]
   48b90:	b.hi	48be0 <ZSTD_getFrameHeader_advanced@@Base+0x98>  // b.pmore
   48b94:	cbz	x22, 48bdc <ZSTD_getFrameHeader_advanced@@Base+0x94>
   48b98:	cmp	w20, #0x1
   48b9c:	b.eq	48bb8 <ZSTD_getFrameHeader_advanced@@Base+0x70>  // b.none
   48ba0:	mov	x0, x22
   48ba4:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   48ba8:	mov	w8, #0xb528                	// #46376
   48bac:	movk	w8, #0xfd2f, lsl #16
   48bb0:	cmp	w0, w8
   48bb4:	b.ne	48c1c <ZSTD_getFrameHeader_advanced@@Base+0xd4>  // b.any
   48bb8:	mov	x0, x22
   48bbc:	mov	x1, x23
   48bc0:	mov	w2, w20
   48bc4:	bl	48ac8 <ZSTD_frameHeaderSize@@Base+0x18>
   48bc8:	mov	x20, x0
   48bcc:	cmp	x0, x23
   48bd0:	b.ls	48c00 <ZSTD_getFrameHeader_advanced@@Base+0xb8>  // b.plast
   48bd4:	mov	x21, x20
   48bd8:	b	48be0 <ZSTD_getFrameHeader_advanced@@Base+0x98>
   48bdc:	mov	x21, #0xffffffffffffffff    	// #-1
   48be0:	mov	x0, x21
   48be4:	ldp	x20, x19, [sp, #80]
   48be8:	ldp	x22, x21, [sp, #64]
   48bec:	ldp	x24, x23, [sp, #48]
   48bf0:	ldp	x26, x25, [sp, #32]
   48bf4:	ldr	x27, [sp, #16]
   48bf8:	ldp	x29, x30, [sp], #96
   48bfc:	ret
   48c00:	str	w20, [x19, #24]
   48c04:	add	x8, x21, x22
   48c08:	ldurb	w24, [x8, #-1]
   48c0c:	tbnz	w24, #3, 48c3c <ZSTD_getFrameHeader_advanced@@Base+0xf4>
   48c10:	tbz	w24, #5, 48c50 <ZSTD_getFrameHeader_advanced@@Base+0x108>
   48c14:	mov	x25, xzr
   48c18:	b	48cc0 <ZSTD_getFrameHeader_advanced@@Base+0x178>
   48c1c:	mov	w8, #0xd2a5                	// #53925
   48c20:	movk	w8, #0x184, lsl #16
   48c24:	cmp	w8, w0, lsr #4
   48c28:	b.ne	48c48 <ZSTD_getFrameHeader_advanced@@Base+0x100>  // b.any
   48c2c:	cmp	x23, #0x8
   48c30:	b.cs	48c6c <ZSTD_getFrameHeader_advanced@@Base+0x124>  // b.hs, b.nlast
   48c34:	mov	w21, #0x8                   	// #8
   48c38:	b	48be0 <ZSTD_getFrameHeader_advanced@@Base+0x98>
   48c3c:	mov	x20, #0xfffffffffffffff2    	// #-14
   48c40:	mov	w8, #0x1                   	// #1
   48c44:	b	48d98 <ZSTD_getFrameHeader_advanced@@Base+0x250>
   48c48:	mov	x21, #0xfffffffffffffff6    	// #-10
   48c4c:	b	48be0 <ZSTD_getFrameHeader_advanced@@Base+0x98>
   48c50:	ldrb	w9, [x22, x21]
   48c54:	cmp	x9, #0xaf
   48c58:	b.ls	48c98 <ZSTD_getFrameHeader_advanced@@Base+0x150>  // b.plast
   48c5c:	mov	x25, xzr
   48c60:	mov	x20, #0xfffffffffffffff0    	// #-16
   48c64:	mov	w8, #0x1                   	// #1
   48c68:	b	48cb8 <ZSTD_getFrameHeader_advanced@@Base+0x170>
   48c6c:	movi	v0.2d, #0x0
   48c70:	add	x0, x22, #0x4
   48c74:	str	xzr, [x19, #32]
   48c78:	stp	q0, q0, [x19]
   48c7c:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   48c80:	mov	x21, xzr
   48c84:	mov	w8, w0
   48c88:	mov	w9, #0x1                   	// #1
   48c8c:	str	x8, [x19]
   48c90:	str	w9, [x19, #20]
   48c94:	b	48be0 <ZSTD_getFrameHeader_advanced@@Base+0x98>
   48c98:	lsr	x10, x9, #3
   48c9c:	mov	w11, #0x1                   	// #1
   48ca0:	add	x10, x10, #0xa
   48ca4:	lsl	x10, x11, x10
   48ca8:	lsr	x11, x10, #3
   48cac:	and	x9, x9, #0x7
   48cb0:	mov	w8, wzr
   48cb4:	madd	x25, x11, x9, x10
   48cb8:	cbnz	w8, 48d98 <ZSTD_getFrameHeader_advanced@@Base+0x250>
   48cbc:	add	x21, x21, #0x1
   48cc0:	and	w8, w24, #0x3
   48cc4:	cmp	w8, #0x3
   48cc8:	lsr	w27, w24, #6
   48ccc:	b.eq	48cec <ZSTD_getFrameHeader_advanced@@Base+0x1a4>  // b.none
   48cd0:	cmp	w8, #0x2
   48cd4:	b.eq	48d00 <ZSTD_getFrameHeader_advanced@@Base+0x1b8>  // b.none
   48cd8:	cmp	w8, #0x1
   48cdc:	b.ne	48d14 <ZSTD_getFrameHeader_advanced@@Base+0x1cc>  // b.any
   48ce0:	ldrb	w23, [x22, x21]
   48ce4:	add	x21, x21, #0x1
   48ce8:	b	48d18 <ZSTD_getFrameHeader_advanced@@Base+0x1d0>
   48cec:	add	x0, x22, x21
   48cf0:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   48cf4:	mov	w23, w0
   48cf8:	add	x21, x21, #0x4
   48cfc:	b	48d18 <ZSTD_getFrameHeader_advanced@@Base+0x1d0>
   48d00:	add	x0, x22, x21
   48d04:	bl	48db4 <ZSTD_getFrameHeader_advanced@@Base+0x26c>
   48d08:	and	w23, w0, #0xffff
   48d0c:	add	x21, x21, #0x2
   48d10:	b	48d18 <ZSTD_getFrameHeader_advanced@@Base+0x1d0>
   48d14:	mov	w23, wzr
   48d18:	cmp	w27, #0x1
   48d1c:	ubfx	w26, w24, #2, #1
   48d20:	b.eq	48d40 <ZSTD_getFrameHeader_advanced@@Base+0x1f8>  // b.none
   48d24:	cmp	w27, #0x2
   48d28:	b.eq	48d54 <ZSTD_getFrameHeader_advanced@@Base+0x20c>  // b.none
   48d2c:	cmp	w27, #0x3
   48d30:	b.ne	48d64 <ZSTD_getFrameHeader_advanced@@Base+0x21c>  // b.any
   48d34:	add	x0, x22, x21
   48d38:	bl	48dc8 <ZSTD_getFrameHeader_advanced@@Base+0x280>
   48d3c:	b	48d74 <ZSTD_getFrameHeader_advanced@@Base+0x22c>
   48d40:	add	x0, x22, x21
   48d44:	bl	48db4 <ZSTD_getFrameHeader_advanced@@Base+0x26c>
   48d48:	and	x8, x0, #0xffff
   48d4c:	add	x0, x8, #0x100
   48d50:	b	48d74 <ZSTD_getFrameHeader_advanced@@Base+0x22c>
   48d54:	add	x0, x22, x21
   48d58:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   48d5c:	mov	w0, w0
   48d60:	b	48d74 <ZSTD_getFrameHeader_advanced@@Base+0x22c>
   48d64:	tbz	w24, #5, 48d70 <ZSTD_getFrameHeader_advanced@@Base+0x228>
   48d68:	ldrb	w0, [x22, x21]
   48d6c:	b	48d74 <ZSTD_getFrameHeader_advanced@@Base+0x22c>
   48d70:	mov	x0, #0xffffffffffffffff    	// #-1
   48d74:	tst	w24, #0x20
   48d78:	csel	x10, x0, x25, ne  // ne = any
   48d7c:	mov	w9, #0x20000               	// #131072
   48d80:	cmp	x10, #0x20, lsl #12
   48d84:	mov	w8, wzr
   48d88:	csel	x9, x10, x9, cc  // cc = lo, ul, last
   48d8c:	stp	x0, x10, [x19]
   48d90:	stp	w9, wzr, [x19, #16]
   48d94:	stp	w23, w26, [x19, #28]
   48d98:	cmp	w8, #0x0
   48d9c:	csel	x0, xzr, x20, eq  // eq = none
   48da0:	b	48be4 <ZSTD_getFrameHeader_advanced@@Base+0x9c>
   48da4:	cmp	w0, #0x0
   48da8:	mov	w8, #0x5                   	// #5
   48dac:	csinc	x0, x8, xzr, eq  // eq = none
   48db0:	ret
   48db4:	stp	x29, x30, [sp, #-16]!
   48db8:	mov	x29, sp
   48dbc:	bl	4b4fc <ZSTD_decompressStream_simpleArgs@@Base+0x6c>
   48dc0:	ldp	x29, x30, [sp], #16
   48dc4:	ret
   48dc8:	stp	x29, x30, [sp, #-16]!
   48dcc:	mov	x29, sp
   48dd0:	bl	4b504 <ZSTD_decompressStream_simpleArgs@@Base+0x74>
   48dd4:	ldp	x29, x30, [sp], #16
   48dd8:	ret

0000000000048ddc <ZSTD_getFrameHeader@@Base>:
   48ddc:	stp	x29, x30, [sp, #-16]!
   48de0:	mov	w3, wzr
   48de4:	mov	x29, sp
   48de8:	bl	45a0 <ZSTD_getFrameHeader_advanced@plt>
   48dec:	ldp	x29, x30, [sp], #16
   48df0:	ret

0000000000048df4 <ZSTD_getFrameContentSize@@Base>:
   48df4:	sub	sp, sp, #0x50
   48df8:	stp	x29, x30, [sp, #48]
   48dfc:	stp	x20, x19, [sp, #64]
   48e00:	add	x29, sp, #0x30
   48e04:	mov	x19, x1
   48e08:	mov	x20, x0
   48e0c:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   48e10:	cbz	w0, 48e2c <ZSTD_getFrameContentSize@@Base+0x38>
   48e14:	mov	x0, x20
   48e18:	mov	x1, x19
   48e1c:	bl	48e70 <ZSTD_getFrameContentSize@@Base+0x7c>
   48e20:	cmp	x0, #0x0
   48e24:	csinv	x0, x0, xzr, ne  // ne = any
   48e28:	b	48e60 <ZSTD_getFrameContentSize@@Base+0x6c>
   48e2c:	add	x0, sp, #0x8
   48e30:	mov	x1, x20
   48e34:	mov	x2, x19
   48e38:	bl	4850 <ZSTD_getFrameHeader@plt>
   48e3c:	cbz	x0, 48e48 <ZSTD_getFrameContentSize@@Base+0x54>
   48e40:	mov	x0, #0xfffffffffffffffe    	// #-2
   48e44:	b	48e60 <ZSTD_getFrameContentSize@@Base+0x6c>
   48e48:	ldr	w8, [sp, #28]
   48e4c:	cmp	w8, #0x1
   48e50:	b.ne	48e5c <ZSTD_getFrameContentSize@@Base+0x68>  // b.any
   48e54:	mov	x0, xzr
   48e58:	b	48e60 <ZSTD_getFrameContentSize@@Base+0x6c>
   48e5c:	ldr	x0, [sp, #8]
   48e60:	ldp	x20, x19, [sp, #64]
   48e64:	ldp	x29, x30, [sp, #48]
   48e68:	add	sp, sp, #0x50
   48e6c:	ret
   48e70:	sub	sp, sp, #0x50
   48e74:	stp	x29, x30, [sp, #48]
   48e78:	stp	x20, x19, [sp, #64]
   48e7c:	add	x29, sp, #0x30
   48e80:	mov	x19, x1
   48e84:	mov	x20, x0
   48e88:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   48e8c:	cmp	w0, #0x5
   48e90:	b.cc	48ec0 <ZSTD_getFrameContentSize@@Base+0xcc>  // b.lo, b.ul, b.last
   48e94:	cmp	w0, #0x7
   48e98:	b.eq	48ec8 <ZSTD_getFrameContentSize@@Base+0xd4>  // b.none
   48e9c:	cmp	w0, #0x6
   48ea0:	b.eq	48edc <ZSTD_getFrameContentSize@@Base+0xe8>  // b.none
   48ea4:	cmp	w0, #0x5
   48ea8:	b.ne	48ec0 <ZSTD_getFrameContentSize@@Base+0xcc>  // b.any
   48eac:	add	x0, sp, #0x8
   48eb0:	mov	x1, x20
   48eb4:	mov	x2, x19
   48eb8:	bl	5af90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x326c>
   48ebc:	b	48eec <ZSTD_getFrameContentSize@@Base+0xf8>
   48ec0:	mov	x0, xzr
   48ec4:	b	48ef8 <ZSTD_getFrameContentSize@@Base+0x104>
   48ec8:	add	x0, sp, #0x8
   48ecc:	mov	x1, x20
   48ed0:	mov	x2, x19
   48ed4:	bl	6412c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc408>
   48ed8:	b	48eec <ZSTD_getFrameContentSize@@Base+0xf8>
   48edc:	add	x0, sp, #0x8
   48ee0:	mov	x1, x20
   48ee4:	mov	x2, x19
   48ee8:	bl	5f6d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x79b0>
   48eec:	ldr	x8, [sp, #8]
   48ef0:	cmp	x0, #0x0
   48ef4:	csel	x0, x8, xzr, eq  // eq = none
   48ef8:	ldp	x20, x19, [sp, #64]
   48efc:	ldp	x29, x30, [sp, #48]
   48f00:	add	sp, sp, #0x50
   48f04:	ret

0000000000048f08 <ZSTD_findDecompressedSize@@Base>:
   48f08:	stp	x29, x30, [sp, #-80]!
   48f0c:	stp	x20, x19, [sp, #64]
   48f10:	mov	x20, x0
   48f14:	mov	w0, wzr
   48f18:	stp	x26, x25, [sp, #16]
   48f1c:	stp	x24, x23, [sp, #32]
   48f20:	stp	x22, x21, [sp, #48]
   48f24:	mov	x29, sp
   48f28:	mov	x19, x1
   48f2c:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   48f30:	cmp	x0, x19
   48f34:	b.ls	48f64 <ZSTD_findDecompressedSize@@Base+0x5c>  // b.plast
   48f38:	mov	x24, xzr
   48f3c:	cmp	x19, #0x0
   48f40:	mov	x8, #0xfffffffffffffffe    	// #-2
   48f44:	csel	x22, x24, x8, eq  // eq = none
   48f48:	mov	x0, x22
   48f4c:	ldp	x20, x19, [sp, #64]
   48f50:	ldp	x22, x21, [sp, #48]
   48f54:	ldp	x24, x23, [sp, #32]
   48f58:	ldp	x26, x25, [sp, #16]
   48f5c:	ldp	x29, x30, [sp], #80
   48f60:	ret
   48f64:	mov	w25, #0xd2a5                	// #53925
   48f68:	mov	x21, x0
   48f6c:	mov	x24, xzr
   48f70:	movk	w25, #0x184, lsl #16
   48f74:	mov	x26, #0xfffffffffffffffe    	// #-2
   48f78:	mov	x0, x20
   48f7c:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   48f80:	cmp	w25, w0, lsr #4
   48f84:	b.ne	48fb0 <ZSTD_findDecompressedSize@@Base+0xa8>  // b.any
   48f88:	mov	x0, x20
   48f8c:	mov	x1, x19
   48f90:	bl	49030 <ZSTD_findDecompressedSize@@Base+0x128>
   48f94:	mov	x23, x0
   48f98:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   48f9c:	cbnz	w0, 49000 <ZSTD_findDecompressedSize@@Base+0xf8>
   48fa0:	add	x20, x20, x23
   48fa4:	sub	x19, x19, x23
   48fa8:	mov	w8, #0x2                   	// #2
   48fac:	b	49008 <ZSTD_findDecompressedSize@@Base+0x100>
   48fb0:	mov	x0, x20
   48fb4:	mov	x1, x19
   48fb8:	bl	45d0 <ZSTD_getFrameContentSize@plt>
   48fbc:	cmn	x0, #0x3
   48fc0:	b.ls	48fd4 <ZSTD_findDecompressedSize@@Base+0xcc>  // b.plast
   48fc4:	mov	w8, #0x1                   	// #1
   48fc8:	mov	x22, x0
   48fcc:	cbnz	w8, 49008 <ZSTD_findDecompressedSize@@Base+0x100>
   48fd0:	b	48fe8 <ZSTD_findDecompressedSize@@Base+0xe0>
   48fd4:	adds	x9, x0, x24
   48fd8:	cset	w8, cs  // cs = hs, nlast
   48fdc:	csel	x24, x24, x9, cs  // cs = hs, nlast
   48fe0:	csel	x22, x26, x22, cs  // cs = hs, nlast
   48fe4:	cbnz	w8, 49008 <ZSTD_findDecompressedSize@@Base+0x100>
   48fe8:	mov	x0, x20
   48fec:	mov	x1, x19
   48ff0:	bl	49f0 <ZSTD_findFrameCompressedSize@plt>
   48ff4:	mov	x23, x0
   48ff8:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   48ffc:	cbz	w0, 49020 <ZSTD_findDecompressedSize@@Base+0x118>
   49000:	mov	x22, #0xfffffffffffffffe    	// #-2
   49004:	mov	w8, #0x1                   	// #1
   49008:	orr	w8, w8, #0x2
   4900c:	cmp	w8, #0x2
   49010:	b.ne	48f48 <ZSTD_findDecompressedSize@@Base+0x40>  // b.any
   49014:	cmp	x19, x21
   49018:	b.cs	48f78 <ZSTD_findDecompressedSize@@Base+0x70>  // b.hs, b.nlast
   4901c:	b	48f3c <ZSTD_findDecompressedSize@@Base+0x34>
   49020:	mov	w8, wzr
   49024:	add	x20, x20, x23
   49028:	sub	x19, x19, x23
   4902c:	b	49008 <ZSTD_findDecompressedSize@@Base+0x100>
   49030:	stp	x29, x30, [sp, #-32]!
   49034:	cmp	x1, #0x8
   49038:	str	x19, [sp, #16]
   4903c:	mov	x29, sp
   49040:	b.cs	4904c <ZSTD_findDecompressedSize@@Base+0x144>  // b.hs, b.nlast
   49044:	mov	x0, #0xffffffffffffffb8    	// #-72
   49048:	b	4907c <ZSTD_findDecompressedSize@@Base+0x174>
   4904c:	add	x0, x0, #0x4
   49050:	mov	x19, x1
   49054:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   49058:	cmn	w0, #0x9
   4905c:	b.ls	49068 <ZSTD_findDecompressedSize@@Base+0x160>  // b.plast
   49060:	mov	x0, #0xfffffffffffffff2    	// #-14
   49064:	b	4907c <ZSTD_findDecompressedSize@@Base+0x174>
   49068:	mov	w8, w0
   4906c:	add	x8, x8, #0x8
   49070:	cmp	x8, x19
   49074:	mov	x9, #0xffffffffffffffb8    	// #-72
   49078:	csel	x0, x9, x8, hi  // hi = pmore
   4907c:	ldr	x19, [sp, #16]
   49080:	ldp	x29, x30, [sp], #32
   49084:	ret
   49088:	cmn	x0, #0x78
   4908c:	cset	w0, hi  // hi = pmore
   49090:	ret

0000000000049094 <ZSTD_findFrameCompressedSize@@Base>:
   49094:	stp	x29, x30, [sp, #-16]!
   49098:	mov	x29, sp
   4909c:	bl	490c4 <ZSTD_getDecompressedSize@@Base+0x1c>
   490a0:	ldp	x29, x30, [sp], #16
   490a4:	ret

00000000000490a8 <ZSTD_getDecompressedSize@@Base>:
   490a8:	stp	x29, x30, [sp, #-16]!
   490ac:	mov	x29, sp
   490b0:	bl	45d0 <ZSTD_getFrameContentSize@plt>
   490b4:	cmn	x0, #0x3
   490b8:	csel	x0, xzr, x0, hi  // hi = pmore
   490bc:	ldp	x29, x30, [sp], #16
   490c0:	ret
   490c4:	sub	sp, sp, #0x90
   490c8:	stp	x29, x30, [sp, #64]
   490cc:	stp	x26, x25, [sp, #80]
   490d0:	stp	x24, x23, [sp, #96]
   490d4:	stp	x22, x21, [sp, #112]
   490d8:	stp	x20, x19, [sp, #128]
   490dc:	add	x29, sp, #0x40
   490e0:	mov	x23, x1
   490e4:	mov	x19, x0
   490e8:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   490ec:	cbz	w0, 49128 <ZSTD_getDecompressedSize@@Base+0x80>
   490f0:	mov	x0, x19
   490f4:	mov	x1, x23
   490f8:	bl	4b50c <ZSTD_decompressStream_simpleArgs@@Base+0x7c>
   490fc:	mov	x20, x0
   49100:	mov	x21, x1
   49104:	mov	x0, x20
   49108:	mov	x1, x21
   4910c:	ldp	x20, x19, [sp, #128]
   49110:	ldp	x22, x21, [sp, #112]
   49114:	ldp	x24, x23, [sp, #96]
   49118:	ldp	x26, x25, [sp, #80]
   4911c:	ldp	x29, x30, [sp, #64]
   49120:	add	sp, sp, #0x90
   49124:	ret
   49128:	cmp	x23, #0x8
   4912c:	b.cc	49160 <ZSTD_getDecompressedSize@@Base+0xb8>  // b.lo, b.ul, b.last
   49130:	mov	x0, x19
   49134:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   49138:	mov	w8, #0xd2a5                	// #53925
   4913c:	movk	w8, #0x184, lsl #16
   49140:	cmp	w8, w0, lsr #4
   49144:	b.ne	49160 <ZSTD_getDecompressedSize@@Base+0xb8>  // b.any
   49148:	mov	x0, x19
   4914c:	mov	x1, x23
   49150:	bl	49030 <ZSTD_findDecompressedSize@@Base+0x128>
   49154:	mov	x20, x0
   49158:	mov	x21, xzr
   4915c:	b	49104 <ZSTD_getDecompressedSize@@Base+0x5c>
   49160:	add	x0, sp, #0x18
   49164:	mov	x1, x19
   49168:	mov	x2, x23
   4916c:	bl	4850 <ZSTD_getFrameHeader@plt>
   49170:	mov	x20, x0
   49174:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49178:	cbz	w0, 49184 <ZSTD_getDecompressedSize@@Base+0xdc>
   4917c:	mov	x0, x20
   49180:	b	4918c <ZSTD_getDecompressedSize@@Base+0xe4>
   49184:	cbz	x20, 49240 <ZSTD_getDecompressedSize@@Base+0x198>
   49188:	mov	x0, #0xffffffffffffffb8    	// #-72
   4918c:	bl	4b5d8 <ZSTD_decompressStream_simpleArgs@@Base+0x148>
   49190:	mov	x20, x0
   49194:	mov	x21, x1
   49198:	mov	w8, wzr
   4919c:	cbz	w8, 49104 <ZSTD_getDecompressedSize@@Base+0x5c>
   491a0:	ldr	w8, [sp, #48]
   491a4:	mov	x25, xzr
   491a8:	mov	w26, #0x3                   	// #3
   491ac:	add	x22, x19, x8
   491b0:	sub	x23, x23, x8
   491b4:	b	491d0 <ZSTD_getDecompressedSize@@Base+0x128>
   491b8:	mov	x0, x24
   491bc:	bl	4b5d8 <ZSTD_decompressStream_simpleArgs@@Base+0x148>
   491c0:	mov	x20, x0
   491c4:	mov	x21, x1
   491c8:	mov	w8, #0x1                   	// #1
   491cc:	cbnz	w8, 4921c <ZSTD_getDecompressedSize@@Base+0x174>
   491d0:	add	x2, sp, #0x8
   491d4:	mov	x0, x22
   491d8:	mov	x1, x23
   491dc:	bl	4ba18 <ZSTD_decompressStream_simpleArgs@@Base+0x588>
   491e0:	mov	x24, x0
   491e4:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   491e8:	cbnz	w0, 491b8 <ZSTD_getDecompressedSize@@Base+0x110>
   491ec:	add	x8, x24, #0x3
   491f0:	subs	x9, x23, x8
   491f4:	b.cs	49200 <ZSTD_getDecompressedSize@@Base+0x158>  // b.hs, b.nlast
   491f8:	mov	x0, #0xffffffffffffffb8    	// #-72
   491fc:	b	491bc <ZSTD_getDecompressedSize@@Base+0x114>
   49200:	ldr	w10, [sp, #12]
   49204:	add	x22, x22, x8
   49208:	add	x25, x25, #0x1
   4920c:	mov	x23, x9
   49210:	cmp	w10, #0x0
   49214:	csel	w8, wzr, w26, eq  // eq = none
   49218:	cbz	w8, 491d0 <ZSTD_getDecompressedSize@@Base+0x128>
   4921c:	cmp	w8, #0x3
   49220:	b.ne	49104 <ZSTD_getDecompressedSize@@Base+0x5c>  // b.any
   49224:	ldr	w8, [sp, #56]
   49228:	cbz	w8, 49250 <ZSTD_getDecompressedSize@@Base+0x1a8>
   4922c:	cmp	x23, #0x3
   49230:	b.hi	4924c <ZSTD_getDecompressedSize@@Base+0x1a4>  // b.pmore
   49234:	mov	x0, #0xffffffffffffffb8    	// #-72
   49238:	bl	4b5d8 <ZSTD_decompressStream_simpleArgs@@Base+0x148>
   4923c:	b	490fc <ZSTD_getDecompressedSize@@Base+0x54>
   49240:	mov	w8, #0x1                   	// #1
   49244:	cbz	w8, 49104 <ZSTD_getDecompressedSize@@Base+0x5c>
   49248:	b	491a0 <ZSTD_getDecompressedSize@@Base+0xf8>
   4924c:	add	x22, x22, #0x4
   49250:	ldr	w8, [sp, #40]
   49254:	ldr	x9, [sp, #24]
   49258:	sub	x20, x22, x19
   4925c:	mul	x8, x25, x8
   49260:	cmn	x9, #0x1
   49264:	csel	x21, x8, x9, eq  // eq = none
   49268:	b	49104 <ZSTD_getDecompressedSize@@Base+0x5c>

000000000004926c <ZSTD_decompressBound@@Base>:
   4926c:	stp	x29, x30, [sp, #-64]!
   49270:	stp	x22, x21, [sp, #32]
   49274:	stp	x20, x19, [sp, #48]
   49278:	mov	x20, x1
   4927c:	mov	x21, x0
   49280:	mov	x19, xzr
   49284:	str	x23, [sp, #16]
   49288:	mov	x29, sp
   4928c:	b	49294 <ZSTD_decompressBound@@Base+0x28>
   49290:	tbz	w8, #0, 492d4 <ZSTD_decompressBound@@Base+0x68>
   49294:	cbz	x20, 492d8 <ZSTD_decompressBound@@Base+0x6c>
   49298:	mov	x0, x21
   4929c:	mov	x1, x20
   492a0:	bl	490c4 <ZSTD_getDecompressedSize@@Base+0x1c>
   492a4:	mov	x23, x0
   492a8:	mov	x22, x1
   492ac:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   492b0:	mov	w8, wzr
   492b4:	cbnz	w0, 49290 <ZSTD_decompressBound@@Base+0x24>
   492b8:	cmn	x22, #0x2
   492bc:	b.eq	49290 <ZSTD_decompressBound@@Base+0x24>  // b.none
   492c0:	add	x21, x21, x23
   492c4:	sub	x20, x20, x23
   492c8:	add	x19, x22, x19
   492cc:	mov	w8, #0x1                   	// #1
   492d0:	b	49290 <ZSTD_decompressBound@@Base+0x24>
   492d4:	mov	x19, #0xfffffffffffffffe    	// #-2
   492d8:	mov	x0, x19
   492dc:	ldp	x20, x19, [sp, #48]
   492e0:	ldp	x22, x21, [sp, #32]
   492e4:	ldr	x23, [sp, #16]
   492e8:	ldp	x29, x30, [sp], #64
   492ec:	ret
   492f0:	ldr	x8, [x0, #28744]
   492f4:	cmp	x8, x1
   492f8:	b.eq	4931c <ZSTD_decompressBound@@Base+0xb0>  // b.none
   492fc:	ldr	x9, [x0, #28744]
   49300:	ldr	x10, [x0, #28752]
   49304:	str	x8, [x0, #28768]
   49308:	str	x1, [x0, #28752]
   4930c:	str	x1, [x0, #28744]
   49310:	sub	x8, x10, x9
   49314:	add	x8, x1, x8
   49318:	str	x8, [x0, #28760]
   4931c:	ret

0000000000049320 <ZSTD_insertBlock@@Base>:
   49320:	stp	x29, x30, [sp, #-48]!
   49324:	str	x21, [sp, #16]
   49328:	stp	x20, x19, [sp, #32]
   4932c:	mov	x29, sp
   49330:	mov	x19, x2
   49334:	mov	x20, x1
   49338:	mov	x21, x0
   4933c:	bl	492f0 <ZSTD_decompressBound@@Base+0x84>
   49340:	add	x8, x20, x19
   49344:	str	x8, [x21, #28744]
   49348:	mov	x0, x19
   4934c:	ldp	x20, x19, [sp, #32]
   49350:	ldr	x21, [sp, #16]
   49354:	ldp	x29, x30, [sp], #48
   49358:	ret

000000000004935c <ZSTD_decompress_usingDict@@Base>:
   4935c:	stp	x29, x30, [sp, #-16]!
   49360:	mov	x7, xzr
   49364:	mov	x29, sp
   49368:	bl	49374 <ZSTD_decompress_usingDict@@Base+0x18>
   4936c:	ldp	x29, x30, [sp], #16
   49370:	ret
   49374:	sub	sp, sp, #0xa0
   49378:	stp	x29, x30, [sp, #64]
   4937c:	stp	x28, x27, [sp, #80]
   49380:	stp	x22, x21, [sp, #128]
   49384:	stp	x20, x19, [sp, #144]
   49388:	add	x29, sp, #0x40
   4938c:	mov	x19, x7
   49390:	mov	x20, x5
   49394:	mov	x27, x1
   49398:	mov	x22, x0
   4939c:	stp	x26, x25, [sp, #96]
   493a0:	stp	x24, x23, [sp, #112]
   493a4:	str	x2, [sp, #32]
   493a8:	stp	x4, x3, [x29, #-16]
   493ac:	cbz	x7, 493c8 <ZSTD_decompress_usingDict@@Base+0x6c>
   493b0:	mov	x0, x19
   493b4:	bl	481d8 <ZSTD_endStream@@Base+0x3a284>
   493b8:	mov	x20, x0
   493bc:	mov	x0, x19
   493c0:	bl	481e0 <ZSTD_endStream@@Base+0x3a28c>
   493c4:	mov	x6, x0
   493c8:	mov	w8, #0x7110                	// #28944
   493cc:	mov	w24, #0xd2a5                	// #53925
   493d0:	stp	x6, x20, [sp, #8]
   493d4:	add	x23, x22, x8
   493d8:	movk	w24, #0x184, lsl #16
   493dc:	mov	x20, x27
   493e0:	stur	wzr, [x29, #-20]
   493e4:	str	x27, [sp, #24]
   493e8:	ldr	w0, [x23]
   493ec:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   493f0:	ldp	x27, x28, [x29, #-16]
   493f4:	mov	x21, x0
   493f8:	mov	x25, x26
   493fc:	b	4940c <ZSTD_decompress_usingDict@@Base+0xb0>
   49400:	mov	w8, wzr
   49404:	cmp	w8, #0x2
   49408:	b.ne	49490 <ZSTD_decompress_usingDict@@Base+0x134>  // b.any
   4940c:	cmp	x27, x21
   49410:	b.cc	495e4 <ZSTD_decompress_usingDict@@Base+0x288>  // b.lo, b.ul, b.last
   49414:	mov	x0, x28
   49418:	mov	x1, x27
   4941c:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   49420:	cbnz	w0, 49468 <ZSTD_decompress_usingDict@@Base+0x10c>
   49424:	mov	x0, x28
   49428:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   4942c:	cmp	w24, w0, lsr #4
   49430:	b.ne	49400 <ZSTD_decompress_usingDict@@Base+0xa4>  // b.any
   49434:	mov	x0, x28
   49438:	mov	x1, x27
   4943c:	bl	49030 <ZSTD_findDecompressedSize@@Base+0x128>
   49440:	mov	x26, x0
   49444:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49448:	cmp	w0, #0x0
   4944c:	cset	w8, ne  // ne = any
   49450:	csel	x25, x25, x26, eq  // eq = none
   49454:	cbnz	w0, 49404 <ZSTD_decompress_usingDict@@Base+0xa8>
   49458:	add	x28, x28, x26
   4945c:	sub	x27, x27, x26
   49460:	mov	w8, #0x2                   	// #2
   49464:	b	49404 <ZSTD_decompress_usingDict@@Base+0xa8>
   49468:	mov	x0, x28
   4946c:	mov	x1, x27
   49470:	stp	x27, x28, [x29, #-16]
   49474:	bl	4b5e0 <ZSTD_decompressStream_simpleArgs@@Base+0x150>
   49478:	mov	x26, x0
   4947c:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49480:	cbz	w0, 494c4 <ZSTD_decompress_usingDict@@Base+0x168>
   49484:	mov	w8, wzr
   49488:	tbnz	wzr, #0, 493e8 <ZSTD_decompress_usingDict@@Base+0x8c>
   4948c:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   49490:	cbnz	w8, 495f4 <ZSTD_decompress_usingDict@@Base+0x298>
   49494:	mov	x0, x22
   49498:	stp	x27, x28, [x29, #-16]
   4949c:	cbz	x19, 494dc <ZSTD_decompress_usingDict@@Base+0x180>
   494a0:	mov	x1, x19
   494a4:	bl	45e0 <ZSTD_decompressBegin_usingDDict@plt>
   494a8:	mov	x0, xzr
   494ac:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   494b0:	cmp	w0, #0x0
   494b4:	csel	x21, x25, xzr, eq  // eq = none
   494b8:	mov	x26, x21
   494bc:	cbz	w0, 494fc <ZSTD_decompress_usingDict@@Base+0x1a0>
   494c0:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   494c4:	ldr	x8, [x22, #29000]
   494c8:	cbz	x8, 49560 <ZSTD_decompress_usingDict@@Base+0x204>
   494cc:	mov	x26, #0xffffffffffffffc0    	// #-64
   494d0:	mov	w8, wzr
   494d4:	tbnz	wzr, #0, 493e8 <ZSTD_decompress_usingDict@@Base+0x8c>
   494d8:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   494dc:	ldp	x2, x1, [sp, #8]
   494e0:	bl	4430 <ZSTD_decompressBegin_usingDict@plt>
   494e4:	mov	x21, x0
   494e8:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   494ec:	cmp	w0, #0x0
   494f0:	csel	x21, x25, x21, eq  // eq = none
   494f4:	mov	x26, x21
   494f8:	cbnz	w0, 49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   494fc:	mov	x0, x22
   49500:	mov	x1, x20
   49504:	bl	492f0 <ZSTD_decompressBound@@Base+0x84>
   49508:	ldr	x25, [sp, #32]
   4950c:	sub	x3, x29, #0x8
   49510:	sub	x4, x29, #0x10
   49514:	mov	x0, x22
   49518:	mov	x1, x20
   4951c:	mov	x2, x25
   49520:	bl	4b718 <ZSTD_decompressStream_simpleArgs@@Base+0x288>
   49524:	mov	x26, x0
   49528:	bl	4ac0 <ZSTD_getErrorCode@plt>
   4952c:	ldur	w8, [x29, #-20]
   49530:	cmp	w8, #0x1
   49534:	b.ne	4954c <ZSTD_decompress_usingDict@@Base+0x1f0>  // b.any
   49538:	cmp	w0, #0xa
   4953c:	b.ne	4954c <ZSTD_decompress_usingDict@@Base+0x1f0>  // b.any
   49540:	mov	w8, wzr
   49544:	mov	x26, #0xffffffffffffffb8    	// #-72
   49548:	b	495a8 <ZSTD_decompress_usingDict@@Base+0x24c>
   4954c:	mov	x0, x26
   49550:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49554:	cbz	w0, 49594 <ZSTD_decompress_usingDict@@Base+0x238>
   49558:	mov	w8, wzr
   4955c:	b	495a8 <ZSTD_decompress_usingDict@@Base+0x24c>
   49560:	ldr	x1, [sp, #32]
   49564:	ldp	x5, x4, [sp, #8]
   49568:	mov	x0, x20
   4956c:	mov	x2, x28
   49570:	mov	x3, x26
   49574:	bl	4b5f4 <ZSTD_decompressStream_simpleArgs@@Base+0x164>
   49578:	mov	x21, x0
   4957c:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49580:	cbz	w0, 495b8 <ZSTD_decompress_usingDict@@Base+0x25c>
   49584:	mov	x26, x21
   49588:	mov	w8, wzr
   4958c:	tbnz	wzr, #0, 493e8 <ZSTD_decompress_usingDict@@Base+0x8c>
   49590:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   49594:	add	x20, x20, x26
   49598:	sub	x25, x25, x26
   4959c:	mov	w8, #0x1                   	// #1
   495a0:	mov	x26, x21
   495a4:	str	x25, [sp, #32]
   495a8:	mov	w9, #0x1                   	// #1
   495ac:	stur	w9, [x29, #-20]
   495b0:	tbnz	w8, #0, 493e8 <ZSTD_decompress_usingDict@@Base+0x8c>
   495b4:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   495b8:	ldr	x8, [sp, #32]
   495bc:	sub	x9, x27, x26
   495c0:	add	x20, x20, x21
   495c4:	sub	x8, x8, x21
   495c8:	str	x8, [sp, #32]
   495cc:	add	x8, x28, x26
   495d0:	stp	x9, x8, [x29, #-16]
   495d4:	mov	w8, #0x1                   	// #1
   495d8:	mov	x26, x25
   495dc:	tbnz	w8, #0, 493e8 <ZSTD_decompress_usingDict@@Base+0x8c>
   495e0:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   495e4:	stp	x27, x28, [x29, #-16]
   495e8:	cbz	x27, 49600 <ZSTD_decompress_usingDict@@Base+0x2a4>
   495ec:	mov	x26, #0xffffffffffffffb8    	// #-72
   495f0:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   495f4:	mov	x26, x25
   495f8:	stp	x27, x28, [x29, #-16]
   495fc:	b	49608 <ZSTD_decompress_usingDict@@Base+0x2ac>
   49600:	ldr	x8, [sp, #24]
   49604:	sub	x26, x20, x8
   49608:	mov	x0, x26
   4960c:	ldp	x20, x19, [sp, #144]
   49610:	ldp	x22, x21, [sp, #128]
   49614:	ldp	x24, x23, [sp, #112]
   49618:	ldp	x26, x25, [sp, #96]
   4961c:	ldp	x28, x27, [sp, #80]
   49620:	ldp	x29, x30, [sp, #64]
   49624:	add	sp, sp, #0xa0
   49628:	ret

000000000004962c <ZSTD_decompressDCtx@@Base>:
   4962c:	stp	x29, x30, [sp, #-64]!
   49630:	str	x23, [sp, #16]
   49634:	stp	x22, x21, [sp, #32]
   49638:	stp	x20, x19, [sp, #48]
   4963c:	mov	x29, sp
   49640:	mov	x19, x4
   49644:	mov	x20, x3
   49648:	mov	x21, x2
   4964c:	mov	x22, x1
   49650:	mov	x23, x0
   49654:	bl	496a8 <ZSTD_decompress_usingDDict@@Base+0x20>
   49658:	mov	x5, x0
   4965c:	mov	x0, x23
   49660:	mov	x1, x22
   49664:	mov	x2, x21
   49668:	mov	x3, x20
   4966c:	mov	x4, x19
   49670:	bl	4730 <ZSTD_decompress_usingDDict@plt>
   49674:	ldp	x20, x19, [sp, #48]
   49678:	ldp	x22, x21, [sp, #32]
   4967c:	ldr	x23, [sp, #16]
   49680:	ldp	x29, x30, [sp], #64
   49684:	ret

0000000000049688 <ZSTD_decompress_usingDDict@@Base>:
   49688:	stp	x29, x30, [sp, #-16]!
   4968c:	mov	x7, x5
   49690:	mov	x5, xzr
   49694:	mov	x6, xzr
   49698:	mov	x29, sp
   4969c:	bl	49374 <ZSTD_decompress_usingDict@@Base+0x18>
   496a0:	ldp	x29, x30, [sp], #16
   496a4:	ret
   496a8:	stp	x29, x30, [sp, #-16]!
   496ac:	mov	w8, #0x7170                	// #29040
   496b0:	add	x8, x0, x8
   496b4:	ldr	w9, [x8]
   496b8:	mov	x29, sp
   496bc:	cmn	w9, #0x1
   496c0:	b.eq	496d0 <ZSTD_decompress_usingDDict@@Base+0x48>  // b.none
   496c4:	cmp	w9, #0x1
   496c8:	b.ne	496dc <ZSTD_decompress_usingDDict@@Base+0x54>  // b.any
   496cc:	str	wzr, [x8]
   496d0:	ldr	x0, [x0, #29024]
   496d4:	ldp	x29, x30, [sp], #16
   496d8:	ret
   496dc:	bl	4894c <ZSTD_freeDCtx@@Base+0xa4>
   496e0:	mov	x0, xzr
   496e4:	ldp	x29, x30, [sp], #16
   496e8:	ret

00000000000496ec <ZSTD_decompress@@Base>:
   496ec:	stp	x29, x30, [sp, #-64]!
   496f0:	str	x23, [sp, #16]
   496f4:	stp	x22, x21, [sp, #32]
   496f8:	stp	x20, x19, [sp, #48]
   496fc:	mov	x29, sp
   49700:	mov	x19, x3
   49704:	mov	x21, x2
   49708:	mov	x22, x1
   4970c:	mov	x23, x0
   49710:	bl	4820 <ZSTD_createDCtx@plt>
   49714:	cbz	x0, 49740 <ZSTD_decompress@@Base+0x54>
   49718:	mov	x1, x23
   4971c:	mov	x2, x22
   49720:	mov	x3, x21
   49724:	mov	x4, x19
   49728:	mov	x20, x0
   4972c:	bl	44c0 <ZSTD_decompressDCtx@plt>
   49730:	mov	x19, x0
   49734:	mov	x0, x20
   49738:	bl	45f0 <ZSTD_freeDCtx@plt>
   4973c:	b	49744 <ZSTD_decompress@@Base+0x58>
   49740:	mov	x19, #0xffffffffffffffc0    	// #-64
   49744:	mov	x0, x19
   49748:	ldp	x20, x19, [sp, #48]
   4974c:	ldp	x22, x21, [sp, #32]
   49750:	ldr	x23, [sp, #16]
   49754:	ldp	x29, x30, [sp], #64
   49758:	ret

000000000004975c <ZSTD_nextSrcSizeToDecompress@@Base>:
   4975c:	ldr	x0, [x0, #28776]
   49760:	ret

0000000000049764 <ZSTD_nextInputType@@Base>:
   49764:	mov	w8, #0x70a4                	// #28836
   49768:	ldr	w8, [x0, x8]
   4976c:	sub	w8, w8, #0x2
   49770:	cmp	w8, #0x5
   49774:	b.hi	49788 <ZSTD_nextInputType@@Base+0x24>  // b.pmore
   49778:	adrp	x9, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4977c:	add	x9, x9, #0x398
   49780:	ldr	w0, [x9, w8, sxtw #2]
   49784:	ret
   49788:	mov	w0, wzr
   4978c:	ret

0000000000049790 <ZSTD_decompressContinue@@Base>:
   49790:	sub	sp, sp, #0x50
   49794:	stp	x29, x30, [sp, #16]
   49798:	stp	x24, x23, [sp, #32]
   4979c:	stp	x22, x21, [sp, #48]
   497a0:	stp	x20, x19, [sp, #64]
   497a4:	ldr	x8, [x0, #28776]
   497a8:	add	x29, sp, #0x10
   497ac:	cmp	x8, x4
   497b0:	b.ne	4983c <ZSTD_decompressContinue@@Base+0xac>  // b.any
   497b4:	mov	w8, #0x7080                	// #28800
   497b8:	mov	x22, x4
   497bc:	mov	x21, x3
   497c0:	mov	x20, x2
   497c4:	mov	x19, x0
   497c8:	mov	x23, x1
   497cc:	add	x24, x0, x8
   497d0:	cbz	x2, 497e0 <ZSTD_decompressContinue@@Base+0x50>
   497d4:	mov	x0, x19
   497d8:	mov	x1, x23
   497dc:	bl	492f0 <ZSTD_decompressBound@@Base+0x84>
   497e0:	ldr	w8, [x24, #36]
   497e4:	cmp	w8, #0x7
   497e8:	b.hi	4985c <ZSTD_decompressContinue@@Base+0xcc>  // b.pmore
   497ec:	adrp	x9, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   497f0:	add	x9, x9, #0xfb0
   497f4:	adr	x10, 49804 <ZSTD_decompressContinue@@Base+0x74>
   497f8:	ldrb	w11, [x9, x8]
   497fc:	add	x10, x10, x11, lsl #2
   49800:	br	x10
   49804:	ldr	w8, [x24, #32]
   49808:	cbz	w8, 49a20 <ZSTD_decompressContinue@@Base+0x290>
   4980c:	cmp	w8, #0x1
   49810:	b.eq	49a38 <ZSTD_decompressContinue@@Base+0x2a8>  // b.none
   49814:	cmp	w8, #0x2
   49818:	b.ne	49a64 <ZSTD_decompressContinue@@Base+0x2d4>  // b.any
   4981c:	mov	w5, #0x1                   	// #1
   49820:	mov	x0, x19
   49824:	mov	x1, x23
   49828:	mov	x2, x20
   4982c:	mov	x3, x21
   49830:	mov	x4, x22
   49834:	bl	4c348 <ZSTD_decompressStream_simpleArgs@@Base+0xeb8>
   49838:	b	49a4c <ZSTD_decompressContinue@@Base+0x2bc>
   4983c:	mov	x20, #0xffffffffffffffb8    	// #-72
   49840:	mov	x0, x20
   49844:	ldp	x20, x19, [sp, #64]
   49848:	ldp	x22, x21, [sp, #48]
   4984c:	ldp	x24, x23, [sp, #32]
   49850:	ldp	x29, x30, [sp, #16]
   49854:	add	sp, sp, #0x50
   49858:	ret
   4985c:	mov	x20, #0xffffffffffffffff    	// #-1
   49860:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   49864:	ldr	w20, [x24, #144]
   49868:	cbnz	w20, 499d0 <ZSTD_decompressContinue@@Base+0x240>
   4986c:	mov	x0, x21
   49870:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   49874:	mov	w8, #0xd2a5                	// #53925
   49878:	movk	w8, #0x184, lsl #16
   4987c:	cmp	w8, w0, lsr #4
   49880:	b.ne	499d0 <ZSTD_decompressContinue@@Base+0x240>  // b.any
   49884:	mov	w8, #0x71f8                	// #29176
   49888:	movk	w8, #0x2, lsl #16
   4988c:	add	x0, x19, x8
   49890:	mov	x1, x21
   49894:	mov	x2, x22
   49898:	bl	4420 <memcpy@plt>
   4989c:	mov	w8, #0x8                   	// #8
   498a0:	mov	x20, xzr
   498a4:	mov	w9, #0x6                   	// #6
   498a8:	sub	x8, x8, x22
   498ac:	b	499c4 <ZSTD_decompressContinue@@Base+0x234>
   498b0:	ldr	x8, [x19, #28936]
   498b4:	mov	w9, #0x71f8                	// #29176
   498b8:	movk	w9, #0x2, lsl #16
   498bc:	add	x20, x19, x9
   498c0:	sub	x8, x8, x22
   498c4:	add	x0, x20, x8
   498c8:	mov	x1, x21
   498cc:	mov	x2, x22
   498d0:	bl	4420 <memcpy@plt>
   498d4:	ldr	x2, [x19, #28936]
   498d8:	mov	x0, x19
   498dc:	mov	x1, x20
   498e0:	bl	49b04 <ZSTD_decompressContinue@@Base+0x374>
   498e4:	mov	x20, x0
   498e8:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   498ec:	cbnz	w0, 49840 <ZSTD_decompressContinue@@Base+0xb0>
   498f0:	mov	x20, xzr
   498f4:	mov	w8, #0x3                   	// #3
   498f8:	mov	w9, #0x2                   	// #2
   498fc:	b	499c4 <ZSTD_decompressContinue@@Base+0x234>
   49900:	mov	x2, sp
   49904:	mov	w1, #0x3                   	// #3
   49908:	mov	x0, x21
   4990c:	bl	4ba18 <ZSTD_decompressStream_simpleArgs@@Base+0x588>
   49910:	mov	x20, x0
   49914:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49918:	cbnz	w0, 49840 <ZSTD_decompressContinue@@Base+0xb0>
   4991c:	ldr	w8, [x24]
   49920:	cmp	x20, x8
   49924:	b.hi	49a64 <ZSTD_decompressContinue@@Base+0x2d4>  // b.pmore
   49928:	str	x20, [x19, #28776]
   4992c:	ldr	w8, [sp]
   49930:	str	w8, [x24, #32]
   49934:	ldr	w8, [sp, #8]
   49938:	str	x8, [x19, #28992]
   4993c:	ldr	w8, [sp, #4]
   49940:	cbz	x20, 49ae8 <ZSTD_decompressContinue@@Base+0x358>
   49944:	cmp	w8, #0x0
   49948:	mov	w8, #0x3                   	// #3
   4994c:	cinc	w8, w8, ne  // ne = any
   49950:	mov	x20, xzr
   49954:	str	w8, [x24, #36]
   49958:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   4995c:	mov	w8, #0x70b0                	// #28848
   49960:	add	x0, x19, x8
   49964:	bl	6b34 <ZSTD_initDStream_usingDDict@plt+0x2024>
   49968:	mov	x20, x0
   4996c:	mov	x0, x21
   49970:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   49974:	cmp	w0, w20
   49978:	b.ne	49a6c <ZSTD_decompressContinue@@Base+0x2dc>  // b.any
   4997c:	mov	x20, xzr
   49980:	str	xzr, [x19, #28776]
   49984:	str	wzr, [x24, #36]
   49988:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   4998c:	mov	w9, #0x7200                	// #29184
   49990:	sub	x8, x19, x22
   49994:	movk	w9, #0x2, lsl #16
   49998:	add	x0, x8, x9
   4999c:	mov	x1, x21
   499a0:	mov	x2, x22
   499a4:	bl	4420 <memcpy@plt>
   499a8:	mov	w8, #0x71fc                	// #29180
   499ac:	movk	w8, #0x2, lsl #16
   499b0:	add	x0, x19, x8
   499b4:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   499b8:	mov	x20, xzr
   499bc:	mov	w8, w0
   499c0:	mov	w9, #0x7                   	// #7
   499c4:	str	x8, [x19, #28776]
   499c8:	str	w9, [x24, #36]
   499cc:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   499d0:	mov	x0, x21
   499d4:	mov	x1, x22
   499d8:	mov	w2, w20
   499dc:	bl	48ac8 <ZSTD_frameHeaderSize@@Base+0x18>
   499e0:	mov	x20, x0
   499e4:	str	x0, [x19, #28936]
   499e8:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   499ec:	cbnz	w0, 49840 <ZSTD_decompressContinue@@Base+0xb0>
   499f0:	mov	w8, #0x71f8                	// #29176
   499f4:	movk	w8, #0x2, lsl #16
   499f8:	add	x0, x19, x8
   499fc:	mov	x1, x21
   49a00:	mov	x2, x22
   49a04:	bl	4420 <memcpy@plt>
   49a08:	sub	x8, x20, x22
   49a0c:	mov	w9, #0x1                   	// #1
   49a10:	str	x8, [x19, #28776]
   49a14:	str	w9, [x24, #36]
   49a18:	mov	x20, xzr
   49a1c:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   49a20:	mov	x0, x23
   49a24:	mov	x1, x20
   49a28:	mov	x2, x21
   49a2c:	mov	x3, x22
   49a30:	bl	49b90 <ZSTD_decompressContinue@@Base+0x400>
   49a34:	b	49a4c <ZSTD_decompressContinue@@Base+0x2bc>
   49a38:	ldr	x3, [x19, #28992]
   49a3c:	ldrb	w2, [x21]
   49a40:	mov	x0, x23
   49a44:	mov	x1, x20
   49a48:	bl	49be0 <ZSTD_decompressContinue@@Base+0x450>
   49a4c:	mov	x20, x0
   49a50:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49a54:	cbnz	w0, 49840 <ZSTD_decompressContinue@@Base+0xb0>
   49a58:	ldr	w8, [x24]
   49a5c:	cmp	x20, x8
   49a60:	b.ls	49a74 <ZSTD_decompressContinue@@Base+0x2e4>  // b.plast
   49a64:	mov	x20, #0xffffffffffffffec    	// #-20
   49a68:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   49a6c:	mov	x20, #0xffffffffffffffea    	// #-22
   49a70:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   49a74:	ldr	x8, [x19, #28824]
   49a78:	add	x8, x8, x20
   49a7c:	str	x8, [x19, #28824]
   49a80:	ldr	w8, [x24, #16]
   49a84:	cbz	w8, 49a9c <ZSTD_decompressContinue@@Base+0x30c>
   49a88:	mov	w8, #0x70b0                	// #28848
   49a8c:	add	x0, x19, x8
   49a90:	mov	x1, x23
   49a94:	mov	x2, x20
   49a98:	bl	696c <ZSTD_initDStream_usingDDict@plt+0x1e5c>
   49a9c:	ldr	w8, [x24, #36]
   49aa0:	cmp	w8, #0x4
   49aa4:	b.ne	49acc <ZSTD_decompressContinue@@Base+0x33c>  // b.any
   49aa8:	ldr	x8, [x19, #28784]
   49aac:	cmn	x8, #0x1
   49ab0:	b.eq	49ac0 <ZSTD_decompressContinue@@Base+0x330>  // b.none
   49ab4:	ldr	x9, [x19, #28824]
   49ab8:	cmp	x9, x8
   49abc:	b.ne	49a64 <ZSTD_decompressContinue@@Base+0x2d4>  // b.any
   49ac0:	ldr	w8, [x24, #16]
   49ac4:	cbnz	w8, 49af8 <ZSTD_decompressContinue@@Base+0x368>
   49ac8:	b	49980 <ZSTD_decompressContinue@@Base+0x1f0>
   49acc:	mov	w8, #0x2                   	// #2
   49ad0:	mov	w9, #0x3                   	// #3
   49ad4:	add	x10, x23, x20
   49ad8:	str	w8, [x24, #36]
   49adc:	str	x9, [x19, #28776]
   49ae0:	str	x10, [x19, #28744]
   49ae4:	b	49840 <ZSTD_decompressContinue@@Base+0xb0>
   49ae8:	cbz	w8, 498f0 <ZSTD_decompressContinue@@Base+0x160>
   49aec:	ldr	w8, [x24, #16]
   49af0:	cbz	w8, 4997c <ZSTD_decompressContinue@@Base+0x1ec>
   49af4:	mov	x20, xzr
   49af8:	mov	w8, #0x4                   	// #4
   49afc:	mov	w9, #0x5                   	// #5
   49b00:	b	499c4 <ZSTD_decompressContinue@@Base+0x234>
   49b04:	stp	x29, x30, [sp, #-32]!
   49b08:	stp	x20, x19, [sp, #16]
   49b0c:	mov	w8, #0x7110                	// #28944
   49b10:	ldr	w3, [x0, x8]
   49b14:	mov	w8, #0x7070                	// #28784
   49b18:	mov	x19, x0
   49b1c:	add	x0, x0, x8
   49b20:	mov	x29, sp
   49b24:	bl	45a0 <ZSTD_getFrameHeader_advanced@plt>
   49b28:	mov	x20, x0
   49b2c:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49b30:	cbnz	w0, 49b80 <ZSTD_decompressContinue@@Base+0x3f0>
   49b34:	cbz	x20, 49b40 <ZSTD_decompressContinue@@Base+0x3b0>
   49b38:	mov	x20, #0xffffffffffffffb8    	// #-72
   49b3c:	b	49b80 <ZSTD_decompressContinue@@Base+0x3f0>
   49b40:	mov	w8, #0x708c                	// #28812
   49b44:	add	x8, x19, x8
   49b48:	ldr	w9, [x8]
   49b4c:	cbz	w9, 49b5c <ZSTD_decompressContinue@@Base+0x3cc>
   49b50:	ldr	w10, [x8, #220]
   49b54:	cmp	w10, w9
   49b58:	b.ne	49b7c <ZSTD_decompressContinue@@Base+0x3ec>  // b.any
   49b5c:	ldr	w8, [x8, #4]
   49b60:	cbz	w8, 49b74 <ZSTD_decompressContinue@@Base+0x3e4>
   49b64:	mov	w8, #0x70b0                	// #28848
   49b68:	add	x0, x19, x8
   49b6c:	mov	x1, xzr
   49b70:	bl	660c <ZSTD_initDStream_usingDDict@plt+0x1afc>
   49b74:	mov	x20, xzr
   49b78:	b	49b80 <ZSTD_decompressContinue@@Base+0x3f0>
   49b7c:	mov	x20, #0xffffffffffffffe0    	// #-32
   49b80:	mov	x0, x20
   49b84:	ldp	x20, x19, [sp, #16]
   49b88:	ldp	x29, x30, [sp], #32
   49b8c:	ret
   49b90:	stp	x29, x30, [sp, #-32]!
   49b94:	str	x19, [sp, #16]
   49b98:	mov	x19, x3
   49b9c:	mov	x29, sp
   49ba0:	cbz	x0, 49bb4 <ZSTD_decompressContinue@@Base+0x424>
   49ba4:	cmp	x19, x1
   49ba8:	b.ls	49bc4 <ZSTD_decompressContinue@@Base+0x434>  // b.plast
   49bac:	mov	x19, #0xffffffffffffffba    	// #-70
   49bb0:	b	49bd0 <ZSTD_decompressContinue@@Base+0x440>
   49bb4:	cmp	x19, #0x0
   49bb8:	mov	x8, #0xffffffffffffffb6    	// #-74
   49bbc:	csel	x19, xzr, x8, eq  // eq = none
   49bc0:	b	49bd0 <ZSTD_decompressContinue@@Base+0x440>
   49bc4:	mov	x1, x2
   49bc8:	mov	x2, x19
   49bcc:	bl	4420 <memcpy@plt>
   49bd0:	mov	x0, x19
   49bd4:	ldr	x19, [sp, #16]
   49bd8:	ldp	x29, x30, [sp], #32
   49bdc:	ret
   49be0:	stp	x29, x30, [sp, #-32]!
   49be4:	str	x19, [sp, #16]
   49be8:	mov	x19, x3
   49bec:	mov	x29, sp
   49bf0:	cbz	x0, 49c04 <ZSTD_decompressContinue@@Base+0x474>
   49bf4:	cmp	x19, x1
   49bf8:	b.ls	49c14 <ZSTD_decompressContinue@@Base+0x484>  // b.plast
   49bfc:	mov	x19, #0xffffffffffffffba    	// #-70
   49c00:	b	49c20 <ZSTD_decompressContinue@@Base+0x490>
   49c04:	cmp	x19, #0x0
   49c08:	mov	x8, #0xffffffffffffffb6    	// #-74
   49c0c:	csel	x19, xzr, x8, eq  // eq = none
   49c10:	b	49c20 <ZSTD_decompressContinue@@Base+0x490>
   49c14:	mov	w1, w2
   49c18:	mov	x2, x19
   49c1c:	bl	46a0 <memset@plt>
   49c20:	mov	x0, x19
   49c24:	ldr	x19, [sp, #16]
   49c28:	ldp	x29, x30, [sp], #32
   49c2c:	ret
   49c30:	sub	sp, sp, #0xb0
   49c34:	cmp	x2, #0x9
   49c38:	stp	x29, x30, [sp, #112]
   49c3c:	str	x23, [sp, #128]
   49c40:	stp	x22, x21, [sp, #144]
   49c44:	stp	x20, x19, [sp, #160]
   49c48:	add	x29, sp, #0x70
   49c4c:	b.cc	49e70 <ZSTD_decompressContinue@@Base+0x6e0>  // b.lo, b.ul, b.last
   49c50:	mov	x21, x0
   49c54:	add	x20, x1, #0x8
   49c58:	mov	w8, #0x2818                	// #10264
   49c5c:	mov	x22, x2
   49c60:	mov	x19, x1
   49c64:	add	x0, x0, x8
   49c68:	sub	x2, x2, #0x8
   49c6c:	mov	w4, #0x2818                	// #10264
   49c70:	mov	x1, x20
   49c74:	mov	x3, x21
   49c78:	bl	46040 <ZSTD_endStream@@Base+0x380ec>
   49c7c:	mov	x23, x0
   49c80:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49c84:	add	x8, x20, x23
   49c88:	cmp	w0, #0x0
   49c8c:	csel	x20, x8, x20, eq  // eq = none
   49c90:	cbnz	w0, 49e70 <ZSTD_decompressContinue@@Base+0x6e0>
   49c94:	add	x23, x19, x22
   49c98:	mov	w8, #0x1f                  	// #31
   49c9c:	sub	x4, x23, x20
   49ca0:	add	x0, sp, #0x4
   49ca4:	add	x1, x29, #0x1c
   49ca8:	add	x2, x29, #0x18
   49cac:	mov	x3, x20
   49cb0:	str	w8, [x29, #28]
   49cb4:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
   49cb8:	mov	x22, x0
   49cbc:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49cc0:	cbnz	w0, 49cdc <ZSTD_decompressContinue@@Base+0x54c>
   49cc4:	ldr	w2, [x29, #28]
   49cc8:	cmp	w2, #0x1f
   49ccc:	b.hi	49cdc <ZSTD_decompressContinue@@Base+0x54c>  // b.pmore
   49cd0:	ldr	w5, [x29, #24]
   49cd4:	cmp	w5, #0x8
   49cd8:	b.ls	49de8 <ZSTD_decompressContinue@@Base+0x658>  // b.plast
   49cdc:	mov	w8, wzr
   49ce0:	cbz	w8, 49e70 <ZSTD_decompressContinue@@Base+0x6e0>
   49ce4:	mov	w8, #0x34                  	// #52
   49ce8:	sub	x4, x23, x20
   49cec:	add	x0, sp, #0x4
   49cf0:	add	x1, x29, #0x1c
   49cf4:	add	x2, x29, #0x18
   49cf8:	mov	x3, x20
   49cfc:	str	w8, [x29, #28]
   49d00:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
   49d04:	mov	x22, x0
   49d08:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49d0c:	cbnz	w0, 49d28 <ZSTD_decompressContinue@@Base+0x598>
   49d10:	ldr	w2, [x29, #28]
   49d14:	cmp	w2, #0x34
   49d18:	b.hi	49d28 <ZSTD_decompressContinue@@Base+0x598>  // b.pmore
   49d1c:	ldr	w5, [x29, #24]
   49d20:	cmp	w5, #0x9
   49d24:	b.ls	49e18 <ZSTD_decompressContinue@@Base+0x688>  // b.plast
   49d28:	mov	w8, wzr
   49d2c:	cbz	w8, 49e70 <ZSTD_decompressContinue@@Base+0x6e0>
   49d30:	mov	w8, #0x23                  	// #35
   49d34:	sub	x4, x23, x20
   49d38:	add	x0, sp, #0x4
   49d3c:	add	x1, x29, #0x1c
   49d40:	add	x2, x29, #0x18
   49d44:	mov	x3, x20
   49d48:	str	w8, [x29, #28]
   49d4c:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
   49d50:	mov	x22, x0
   49d54:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49d58:	cbnz	w0, 49d74 <ZSTD_decompressContinue@@Base+0x5e4>
   49d5c:	ldr	w2, [x29, #28]
   49d60:	cmp	w2, #0x23
   49d64:	b.hi	49d74 <ZSTD_decompressContinue@@Base+0x5e4>  // b.pmore
   49d68:	ldr	w5, [x29, #24]
   49d6c:	cmp	w5, #0x9
   49d70:	b.ls	49e48 <ZSTD_decompressContinue@@Base+0x6b8>  // b.plast
   49d74:	mov	w8, wzr
   49d78:	cbz	w8, 49e70 <ZSTD_decompressContinue@@Base+0x6e0>
   49d7c:	add	x9, x20, #0xc
   49d80:	cmp	x9, x23
   49d84:	b.hi	49e70 <ZSTD_decompressContinue@@Base+0x6e0>  // b.pmore
   49d88:	sub	x22, x23, x9
   49d8c:	mov	w9, #0x681c                	// #26652
   49d90:	mov	x8, xzr
   49d94:	add	x23, x21, x9
   49d98:	add	x0, x20, x8
   49d9c:	mov	x21, x8
   49da0:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   49da4:	mov	w8, #0x1                   	// #1
   49da8:	cbz	w0, 49dc0 <ZSTD_decompressContinue@@Base+0x630>
   49dac:	mov	w9, w0
   49db0:	cmp	x22, x9
   49db4:	b.cc	49dc0 <ZSTD_decompressContinue@@Base+0x630>  // b.lo, b.ul, b.last
   49db8:	mov	w8, wzr
   49dbc:	str	w0, [x23, x21]
   49dc0:	cbnz	w8, 49dd4 <ZSTD_decompressContinue@@Base+0x644>
   49dc4:	add	x8, x21, #0x4
   49dc8:	cmp	x8, #0xc
   49dcc:	b.ne	49d98 <ZSTD_decompressContinue@@Base+0x608>  // b.any
   49dd0:	mov	w8, wzr
   49dd4:	cbnz	w8, 49e70 <ZSTD_decompressContinue@@Base+0x6e0>
   49dd8:	add	x8, x20, x21
   49ddc:	add	x8, x8, #0x4
   49de0:	sub	x0, x8, x19
   49de4:	b	49e74 <ZSTD_decompressContinue@@Base+0x6e4>
   49de8:	mov	w8, #0x1008                	// #4104
   49dec:	adrp	x3, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   49df0:	adrp	x4, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   49df4:	add	x0, x21, x8
   49df8:	add	x3, x3, #0xfc4
   49dfc:	add	x4, x4, #0x44
   49e00:	add	x1, sp, #0x4
   49e04:	bl	4be04 <ZSTD_decompressStream_simpleArgs@@Base+0x974>
   49e08:	add	x20, x20, x22
   49e0c:	mov	w8, #0x1                   	// #1
   49e10:	cbz	w8, 49e70 <ZSTD_decompressContinue@@Base+0x6e0>
   49e14:	b	49ce4 <ZSTD_decompressContinue@@Base+0x554>
   49e18:	mov	w8, #0x1810                	// #6160
   49e1c:	adrp	x3, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   49e20:	adrp	x4, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   49e24:	add	x0, x21, x8
   49e28:	add	x3, x3, #0xc4
   49e2c:	add	x4, x4, #0x198
   49e30:	add	x1, sp, #0x4
   49e34:	bl	4be04 <ZSTD_decompressStream_simpleArgs@@Base+0x974>
   49e38:	add	x20, x20, x22
   49e3c:	mov	w8, #0x1                   	// #1
   49e40:	cbz	w8, 49e70 <ZSTD_decompressContinue@@Base+0x6e0>
   49e44:	b	49d30 <ZSTD_decompressContinue@@Base+0x5a0>
   49e48:	adrp	x3, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   49e4c:	adrp	x4, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   49e50:	add	x3, x3, #0x26c
   49e54:	add	x4, x4, #0x2fc
   49e58:	add	x1, sp, #0x4
   49e5c:	mov	x0, x21
   49e60:	bl	4be04 <ZSTD_decompressStream_simpleArgs@@Base+0x974>
   49e64:	add	x20, x20, x22
   49e68:	mov	w8, #0x1                   	// #1
   49e6c:	cbnz	w8, 49d7c <ZSTD_decompressContinue@@Base+0x5ec>
   49e70:	mov	x0, #0xffffffffffffffe2    	// #-30
   49e74:	ldp	x20, x19, [sp, #160]
   49e78:	ldp	x22, x21, [sp, #144]
   49e7c:	ldr	x23, [sp, #128]
   49e80:	ldp	x29, x30, [sp, #112]
   49e84:	add	sp, sp, #0xb0
   49e88:	ret

0000000000049e8c <ZSTD_decompressBegin@@Base>:
   49e8c:	stp	x29, x30, [sp, #-32]!
   49e90:	mov	w8, #0x70a4                	// #28836
   49e94:	stp	x20, x19, [sp, #16]
   49e98:	add	x20, x0, x8
   49e9c:	mov	x19, x0
   49ea0:	ldr	w0, [x20, #108]
   49ea4:	mov	x29, sp
   49ea8:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   49eac:	mov	w8, #0x7048                	// #28744
   49eb0:	movi	v0.2d, #0x0
   49eb4:	add	x8, x19, x8
   49eb8:	str	x0, [x19, #28776]
   49ebc:	str	wzr, [x20]
   49ec0:	str	xzr, [x19, #28824]
   49ec4:	mov	w11, #0xc                   	// #12
   49ec8:	stp	q0, q0, [x8]
   49ecc:	adrp	x8, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   49ed0:	movk	w11, #0xc00, lsl #16
   49ed4:	add	x8, x8, #0x38c
   49ed8:	str	w11, [x19, #10296]
   49edc:	ldr	w11, [x8, #8]
   49ee0:	ldr	x8, [x8]
   49ee4:	mov	w12, #0x683c                	// #26684
   49ee8:	add	x12, x19, x12
   49eec:	mov	w9, #0x2838                	// #10296
   49ef0:	stur	xzr, [x20, #4]
   49ef4:	str	wzr, [x20, #196]
   49ef8:	str	w11, [x12, #8]
   49efc:	mov	w11, #0x1830                	// #6192
   49f00:	str	x8, [x12]
   49f04:	mov	w8, #0x1028                	// #4136
   49f08:	add	x10, x19, #0x20
   49f0c:	add	x9, x19, x9
   49f10:	add	x11, x19, x11
   49f14:	add	x8, x19, x8
   49f18:	stp	x10, x11, [x19]
   49f1c:	stp	x8, x9, [x19, #16]
   49f20:	ldp	x20, x19, [sp, #16]
   49f24:	mov	x0, xzr
   49f28:	ldp	x29, x30, [sp], #32
   49f2c:	ret

0000000000049f30 <ZSTD_decompressBegin_usingDict@@Base>:
   49f30:	stp	x29, x30, [sp, #-48]!
   49f34:	str	x21, [sp, #16]
   49f38:	stp	x20, x19, [sp, #32]
   49f3c:	mov	x29, sp
   49f40:	mov	x19, x2
   49f44:	mov	x20, x1
   49f48:	mov	x21, x0
   49f4c:	bl	47c0 <ZSTD_decompressBegin@plt>
   49f50:	mov	x0, xzr
   49f54:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49f58:	mov	w8, w0
   49f5c:	mov	x0, xzr
   49f60:	cbnz	w8, 49f90 <ZSTD_decompressBegin_usingDict@@Base+0x60>
   49f64:	cbz	x20, 49f8c <ZSTD_decompressBegin_usingDict@@Base+0x5c>
   49f68:	cbz	x19, 49f8c <ZSTD_decompressBegin_usingDict@@Base+0x5c>
   49f6c:	mov	x0, x21
   49f70:	mov	x1, x20
   49f74:	mov	x2, x19
   49f78:	bl	49fa0 <ZSTD_decompressBegin_usingDict@@Base+0x70>
   49f7c:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   49f80:	cbz	w0, 49f8c <ZSTD_decompressBegin_usingDict@@Base+0x5c>
   49f84:	mov	x0, #0xffffffffffffffe2    	// #-30
   49f88:	b	49f90 <ZSTD_decompressBegin_usingDict@@Base+0x60>
   49f8c:	mov	x0, xzr
   49f90:	ldp	x20, x19, [sp, #32]
   49f94:	ldr	x21, [sp, #16]
   49f98:	ldp	x29, x30, [sp], #48
   49f9c:	ret
   49fa0:	stp	x29, x30, [sp, #-64]!
   49fa4:	stp	x22, x21, [sp, #32]
   49fa8:	stp	x20, x19, [sp, #48]
   49fac:	mov	x19, x2
   49fb0:	mov	x20, x1
   49fb4:	cmp	x2, #0x7
   49fb8:	mov	x21, x0
   49fbc:	str	x23, [sp, #16]
   49fc0:	mov	x29, sp
   49fc4:	b.ls	4a03c <ZSTD_decompressBegin_usingDict@@Base+0x10c>  // b.plast
   49fc8:	mov	x0, x20
   49fcc:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   49fd0:	mov	w8, #0xa437                	// #42039
   49fd4:	movk	w8, #0xec30, lsl #16
   49fd8:	cmp	w0, w8
   49fdc:	b.ne	4a03c <ZSTD_decompressBegin_usingDict@@Base+0x10c>  // b.any
   49fe0:	mov	w8, #0x70a8                	// #28840
   49fe4:	add	x0, x20, #0x4
   49fe8:	add	x23, x21, x8
   49fec:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   49ff0:	str	w0, [x23, #192]
   49ff4:	add	x0, x21, #0x20
   49ff8:	mov	x1, x20
   49ffc:	mov	x2, x19
   4a000:	bl	49c30 <ZSTD_decompressContinue@@Base+0x4a0>
   4a004:	mov	x22, x0
   4a008:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a00c:	cbz	w0, 4a020 <ZSTD_decompressBegin_usingDict@@Base+0xf0>
   4a010:	mov	w8, wzr
   4a014:	mov	x0, #0xffffffffffffffe2    	// #-30
   4a018:	cbnz	w8, 4a034 <ZSTD_decompressBegin_usingDict@@Base+0x104>
   4a01c:	b	4a050 <ZSTD_decompressBegin_usingDict@@Base+0x120>
   4a020:	mov	x0, xzr
   4a024:	add	x20, x20, x22
   4a028:	sub	x19, x19, x22
   4a02c:	mov	w8, #0x1                   	// #1
   4a030:	cbz	w8, 4a050 <ZSTD_decompressBegin_usingDict@@Base+0x120>
   4a034:	mov	x8, #0x100000001           	// #4294967297
   4a038:	str	x8, [x23]
   4a03c:	mov	x0, x21
   4a040:	mov	x1, x20
   4a044:	mov	x2, x19
   4a048:	bl	4b9f0 <ZSTD_decompressStream_simpleArgs@@Base+0x560>
   4a04c:	mov	x0, xzr
   4a050:	ldp	x20, x19, [sp, #48]
   4a054:	ldp	x22, x21, [sp, #32]
   4a058:	ldr	x23, [sp, #16]
   4a05c:	ldp	x29, x30, [sp], #64
   4a060:	ret

000000000004a064 <ZSTD_decompressBegin_usingDDict@@Base>:
   4a064:	stp	x29, x30, [sp, #-48]!
   4a068:	stp	x20, x19, [sp, #32]
   4a06c:	mov	x19, x1
   4a070:	mov	x20, x0
   4a074:	str	x21, [sp, #16]
   4a078:	mov	x29, sp
   4a07c:	cbz	x1, 4a0ac <ZSTD_decompressBegin_usingDDict@@Base+0x48>
   4a080:	mov	x0, x19
   4a084:	bl	481d8 <ZSTD_endStream@@Base+0x3a284>
   4a088:	mov	x21, x0
   4a08c:	mov	x0, x19
   4a090:	bl	481e0 <ZSTD_endStream@@Base+0x3a28c>
   4a094:	ldr	x8, [x20, #28768]
   4a098:	add	x9, x21, x0
   4a09c:	cmp	x8, x9
   4a0a0:	cset	w8, ne  // ne = any
   4a0a4:	mov	w9, #0x716c                	// #29036
   4a0a8:	str	w8, [x20, x9]
   4a0ac:	mov	x0, x20
   4a0b0:	bl	47c0 <ZSTD_decompressBegin@plt>
   4a0b4:	mov	x0, xzr
   4a0b8:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a0bc:	cbnz	w0, 4a0d0 <ZSTD_decompressBegin_usingDDict@@Base+0x6c>
   4a0c0:	cbz	x19, 4a0d0 <ZSTD_decompressBegin_usingDDict@@Base+0x6c>
   4a0c4:	mov	x0, x20
   4a0c8:	mov	x1, x19
   4a0cc:	bl	481e8 <ZSTD_endStream@@Base+0x3a294>
   4a0d0:	ldp	x20, x19, [sp, #32]
   4a0d4:	ldr	x21, [sp, #16]
   4a0d8:	mov	x0, xzr
   4a0dc:	ldp	x29, x30, [sp], #48
   4a0e0:	ret

000000000004a0e4 <ZSTD_getDictID_fromDict@@Base>:
   4a0e4:	stp	x29, x30, [sp, #-32]!
   4a0e8:	cmp	x1, #0x8
   4a0ec:	str	x19, [sp, #16]
   4a0f0:	mov	x29, sp
   4a0f4:	b.cc	4a11c <ZSTD_getDictID_fromDict@@Base+0x38>  // b.lo, b.ul, b.last
   4a0f8:	mov	x19, x0
   4a0fc:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   4a100:	mov	w8, #0xa437                	// #42039
   4a104:	movk	w8, #0xec30, lsl #16
   4a108:	cmp	w0, w8
   4a10c:	b.ne	4a11c <ZSTD_getDictID_fromDict@@Base+0x38>  // b.any
   4a110:	add	x0, x19, #0x4
   4a114:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   4a118:	b	4a120 <ZSTD_getDictID_fromDict@@Base+0x3c>
   4a11c:	mov	w0, wzr
   4a120:	ldr	x19, [sp, #16]
   4a124:	ldp	x29, x30, [sp], #32
   4a128:	ret

000000000004a12c <ZSTD_getDictID_fromFrame@@Base>:
   4a12c:	sub	sp, sp, #0x40
   4a130:	mov	x2, x1
   4a134:	mov	x1, x0
   4a138:	movi	v0.2d, #0x0
   4a13c:	mov	x0, sp
   4a140:	stp	x29, x30, [sp, #48]
   4a144:	add	x29, sp, #0x30
   4a148:	str	xzr, [sp, #32]
   4a14c:	stp	q0, q0, [sp]
   4a150:	bl	4850 <ZSTD_getFrameHeader@plt>
   4a154:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a158:	ldr	w8, [sp, #28]
   4a15c:	ldp	x29, x30, [sp, #48]
   4a160:	cmp	w0, #0x0
   4a164:	csel	w0, w8, wzr, eq  // eq = none
   4a168:	add	sp, sp, #0x40
   4a16c:	ret

000000000004a170 <ZSTD_createDStream@@Base>:
   4a170:	sub	sp, sp, #0x30
   4a174:	add	x0, sp, #0x8
   4a178:	stp	x29, x30, [sp, #32]
   4a17c:	add	x29, sp, #0x20
   4a180:	stp	xzr, xzr, [sp, #8]
   4a184:	str	xzr, [sp, #24]
   4a188:	bl	4400 <ZSTD_createDStream_advanced@plt>
   4a18c:	ldp	x29, x30, [sp, #32]
   4a190:	add	sp, sp, #0x30
   4a194:	ret

000000000004a198 <ZSTD_createDStream_advanced@@Base>:
   4a198:	sub	sp, sp, #0x30
   4a19c:	stp	x29, x30, [sp, #32]
   4a1a0:	ldr	x8, [x0, #16]
   4a1a4:	ldr	q0, [x0]
   4a1a8:	mov	x0, sp
   4a1ac:	add	x29, sp, #0x20
   4a1b0:	str	x8, [sp, #16]
   4a1b4:	str	q0, [sp]
   4a1b8:	bl	4ad0 <ZSTD_createDCtx_advanced@plt>
   4a1bc:	ldp	x29, x30, [sp, #32]
   4a1c0:	add	sp, sp, #0x30
   4a1c4:	ret

000000000004a1c8 <ZSTD_initStaticDStream@@Base>:
   4a1c8:	stp	x29, x30, [sp, #-16]!
   4a1cc:	mov	x29, sp
   4a1d0:	bl	4ab0 <ZSTD_initStaticDCtx@plt>
   4a1d4:	ldp	x29, x30, [sp], #16
   4a1d8:	ret

000000000004a1dc <ZSTD_freeDStream@@Base>:
   4a1dc:	stp	x29, x30, [sp, #-16]!
   4a1e0:	mov	x29, sp
   4a1e4:	bl	45f0 <ZSTD_freeDCtx@plt>
   4a1e8:	ldp	x29, x30, [sp], #16
   4a1ec:	ret

000000000004a1f0 <ZSTD_DStreamInSize@@Base>:
   4a1f0:	mov	w0, #0x3                   	// #3
   4a1f4:	movk	w0, #0x2, lsl #16
   4a1f8:	ret

000000000004a1fc <ZSTD_DStreamOutSize@@Base>:
   4a1fc:	mov	w0, #0x20000               	// #131072
   4a200:	ret

000000000004a204 <ZSTD_DCtx_loadDictionary_advanced@@Base>:
   4a204:	sub	sp, sp, #0x60
   4a208:	stp	x29, x30, [sp, #32]
   4a20c:	stp	x22, x21, [sp, #64]
   4a210:	stp	x20, x19, [sp, #80]
   4a214:	mov	w8, #0x7174                	// #29044
   4a218:	ldr	w8, [x0, x8]
   4a21c:	str	x23, [sp, #48]
   4a220:	add	x29, sp, #0x20
   4a224:	cbz	w8, 4a244 <ZSTD_DCtx_loadDictionary_advanced@@Base+0x40>
   4a228:	mov	x0, #0xffffffffffffffc4    	// #-60
   4a22c:	ldp	x20, x19, [sp, #80]
   4a230:	ldp	x22, x21, [sp, #64]
   4a234:	ldr	x23, [sp, #48]
   4a238:	ldp	x29, x30, [sp, #32]
   4a23c:	add	sp, sp, #0x60
   4a240:	ret
   4a244:	mov	w20, w4
   4a248:	mov	w21, w3
   4a24c:	mov	x22, x2
   4a250:	mov	x19, x0
   4a254:	mov	x23, x1
   4a258:	bl	4894c <ZSTD_freeDCtx@@Base+0xa4>
   4a25c:	mov	x0, xzr
   4a260:	cbz	x23, 4a22c <ZSTD_DCtx_loadDictionary_advanced@@Base+0x28>
   4a264:	cbz	x22, 4a22c <ZSTD_DCtx_loadDictionary_advanced@@Base+0x28>
   4a268:	ldr	x8, [x19, #28976]
   4a26c:	ldr	q0, [x19, #28960]
   4a270:	mov	x4, sp
   4a274:	mov	x0, x23
   4a278:	mov	x1, x22
   4a27c:	mov	w2, w21
   4a280:	mov	w3, w20
   4a284:	str	x8, [sp, #16]
   4a288:	str	q0, [sp]
   4a28c:	bl	4760 <ZSTD_createDDict_advanced@plt>
   4a290:	str	x0, [x19, #29016]
   4a294:	cbz	x0, 4a2b8 <ZSTD_DCtx_loadDictionary_advanced@@Base+0xb4>
   4a298:	mov	x8, x0
   4a29c:	mov	w9, #0x7170                	// #29040
   4a2a0:	mov	x0, xzr
   4a2a4:	str	x8, [x19, #29024]
   4a2a8:	add	x8, x19, x9
   4a2ac:	mov	w9, #0xffffffff            	// #-1
   4a2b0:	str	w9, [x8]
   4a2b4:	b	4a22c <ZSTD_DCtx_loadDictionary_advanced@@Base+0x28>
   4a2b8:	mov	x0, #0xffffffffffffffc0    	// #-64
   4a2bc:	b	4a22c <ZSTD_DCtx_loadDictionary_advanced@@Base+0x28>

000000000004a2c0 <ZSTD_DCtx_loadDictionary_byReference@@Base>:
   4a2c0:	stp	x29, x30, [sp, #-16]!
   4a2c4:	mov	w3, #0x1                   	// #1
   4a2c8:	mov	w4, wzr
   4a2cc:	mov	x29, sp
   4a2d0:	bl	4770 <ZSTD_DCtx_loadDictionary_advanced@plt>
   4a2d4:	ldp	x29, x30, [sp], #16
   4a2d8:	ret

000000000004a2dc <ZSTD_DCtx_loadDictionary@@Base>:
   4a2dc:	stp	x29, x30, [sp, #-16]!
   4a2e0:	mov	w3, wzr
   4a2e4:	mov	w4, wzr
   4a2e8:	mov	x29, sp
   4a2ec:	bl	4770 <ZSTD_DCtx_loadDictionary_advanced@plt>
   4a2f0:	ldp	x29, x30, [sp], #16
   4a2f4:	ret

000000000004a2f8 <ZSTD_DCtx_refPrefix_advanced@@Base>:
   4a2f8:	stp	x29, x30, [sp, #-48]!
   4a2fc:	mov	w4, w3
   4a300:	mov	w3, #0x1                   	// #1
   4a304:	str	x21, [sp, #16]
   4a308:	stp	x20, x19, [sp, #32]
   4a30c:	mov	x29, sp
   4a310:	mov	x19, x0
   4a314:	mov	w21, #0x1                   	// #1
   4a318:	bl	4770 <ZSTD_DCtx_loadDictionary_advanced@plt>
   4a31c:	mov	x20, x0
   4a320:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a324:	cbnz	w0, 4a334 <ZSTD_DCtx_refPrefix_advanced@@Base+0x3c>
   4a328:	mov	x20, xzr
   4a32c:	mov	w8, #0x7170                	// #29040
   4a330:	str	w21, [x19, x8]
   4a334:	mov	x0, x20
   4a338:	ldp	x20, x19, [sp, #32]
   4a33c:	ldr	x21, [sp, #16]
   4a340:	ldp	x29, x30, [sp], #48
   4a344:	ret

000000000004a348 <ZSTD_DCtx_refPrefix@@Base>:
   4a348:	stp	x29, x30, [sp, #-16]!
   4a34c:	mov	w3, #0x1                   	// #1
   4a350:	mov	x29, sp
   4a354:	bl	4670 <ZSTD_DCtx_refPrefix_advanced@plt>
   4a358:	ldp	x29, x30, [sp], #16
   4a35c:	ret

000000000004a360 <ZSTD_initDStream_usingDict@@Base>:
   4a360:	stp	x29, x30, [sp, #-48]!
   4a364:	stp	x22, x21, [sp, #16]
   4a368:	mov	x22, x1
   4a36c:	mov	w1, #0x1                   	// #1
   4a370:	stp	x20, x19, [sp, #32]
   4a374:	mov	x29, sp
   4a378:	mov	x21, x2
   4a37c:	mov	x19, x0
   4a380:	bl	4890 <ZSTD_DCtx_reset@plt>
   4a384:	mov	x20, x0
   4a388:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a38c:	cbnz	w0, 4a3c4 <ZSTD_initDStream_usingDict@@Base+0x64>
   4a390:	mov	x0, x19
   4a394:	mov	x1, x22
   4a398:	mov	x2, x21
   4a39c:	bl	4630 <ZSTD_DCtx_loadDictionary@plt>
   4a3a0:	mov	x21, x0
   4a3a4:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a3a8:	cmp	w0, #0x0
   4a3ac:	csel	x20, x20, x21, eq  // eq = none
   4a3b0:	cbnz	w0, 4a3c4 <ZSTD_initDStream_usingDict@@Base+0x64>
   4a3b4:	mov	w8, #0x7110                	// #28944
   4a3b8:	ldr	w0, [x19, x8]
   4a3bc:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   4a3c0:	mov	x20, x0
   4a3c4:	mov	x0, x20
   4a3c8:	ldp	x20, x19, [sp, #32]
   4a3cc:	ldp	x22, x21, [sp, #16]
   4a3d0:	ldp	x29, x30, [sp], #48
   4a3d4:	ret

000000000004a3d8 <ZSTD_DCtx_reset@@Base>:
   4a3d8:	stp	x29, x30, [sp, #-32]!
   4a3dc:	mov	w8, #0x7110                	// #28944
   4a3e0:	orr	w9, w1, #0x2
   4a3e4:	stp	x20, x19, [sp, #16]
   4a3e8:	mov	x19, x0
   4a3ec:	cmp	w9, #0x3
   4a3f0:	add	x20, x0, x8
   4a3f4:	mov	x29, sp
   4a3f8:	b.ne	4a404 <ZSTD_DCtx_reset@@Base+0x2c>  // b.any
   4a3fc:	str	wzr, [x20, #100]
   4a400:	str	wzr, [x20, #196]
   4a404:	orr	w8, w1, #0x1
   4a408:	cmp	w8, #0x3
   4a40c:	b.ne	4a420 <ZSTD_DCtx_reset@@Base+0x48>  // b.any
   4a410:	ldr	w8, [x20, #100]
   4a414:	cbz	w8, 4a428 <ZSTD_DCtx_reset@@Base+0x50>
   4a418:	mov	x0, #0xffffffffffffffc4    	// #-60
   4a41c:	b	4a444 <ZSTD_DCtx_reset@@Base+0x6c>
   4a420:	mov	x0, xzr
   4a424:	b	4a444 <ZSTD_DCtx_reset@@Base+0x6c>
   4a428:	mov	x0, x19
   4a42c:	bl	4894c <ZSTD_freeDCtx@@Base+0xa4>
   4a430:	mov	w8, #0x1                   	// #1
   4a434:	mov	x0, xzr
   4a438:	movk	w8, #0x800, lsl #16
   4a43c:	str	wzr, [x20]
   4a440:	str	x8, [x19, #29072]
   4a444:	ldp	x20, x19, [sp, #16]
   4a448:	ldp	x29, x30, [sp], #32
   4a44c:	ret

000000000004a450 <ZSTD_initDStream@@Base>:
   4a450:	stp	x29, x30, [sp, #-16]!
   4a454:	mov	x1, xzr
   4a458:	mov	x29, sp
   4a45c:	bl	4b10 <ZSTD_initDStream_usingDDict@plt>
   4a460:	ldp	x29, x30, [sp], #16
   4a464:	ret

000000000004a468 <ZSTD_initDStream_usingDDict@@Base>:
   4a468:	stp	x29, x30, [sp, #-48]!
   4a46c:	str	x21, [sp, #16]
   4a470:	mov	x21, x1
   4a474:	mov	w1, #0x1                   	// #1
   4a478:	stp	x20, x19, [sp, #32]
   4a47c:	mov	x29, sp
   4a480:	mov	x19, x0
   4a484:	bl	4890 <ZSTD_DCtx_reset@plt>
   4a488:	mov	x20, x0
   4a48c:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a490:	cbnz	w0, 4a4c4 <ZSTD_initDStream_usingDDict@@Base+0x5c>
   4a494:	mov	x0, x19
   4a498:	mov	x1, x21
   4a49c:	bl	4a70 <ZSTD_DCtx_refDDict@plt>
   4a4a0:	mov	x21, x0
   4a4a4:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a4a8:	cmp	w0, #0x0
   4a4ac:	csel	x20, x20, x21, eq  // eq = none
   4a4b0:	cbnz	w0, 4a4c4 <ZSTD_initDStream_usingDDict@@Base+0x5c>
   4a4b4:	mov	w8, #0x7110                	// #28944
   4a4b8:	ldr	w0, [x19, x8]
   4a4bc:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   4a4c0:	mov	x20, x0
   4a4c4:	mov	x0, x20
   4a4c8:	ldp	x20, x19, [sp, #32]
   4a4cc:	ldr	x21, [sp, #16]
   4a4d0:	ldp	x29, x30, [sp], #48
   4a4d4:	ret

000000000004a4d8 <ZSTD_DCtx_refDDict@@Base>:
   4a4d8:	stp	x29, x30, [sp, #-32]!
   4a4dc:	stp	x20, x19, [sp, #16]
   4a4e0:	mov	w8, #0x7174                	// #29044
   4a4e4:	ldr	w8, [x0, x8]
   4a4e8:	mov	x29, sp
   4a4ec:	cbz	w8, 4a4f8 <ZSTD_DCtx_refDDict@@Base+0x20>
   4a4f0:	mov	x0, #0xffffffffffffffc4    	// #-60
   4a4f4:	b	4a520 <ZSTD_DCtx_refDDict@@Base+0x48>
   4a4f8:	mov	x19, x0
   4a4fc:	mov	x20, x1
   4a500:	bl	4894c <ZSTD_freeDCtx@@Base+0xa4>
   4a504:	mov	x0, xzr
   4a508:	cbz	x20, 4a520 <ZSTD_DCtx_refDDict@@Base+0x48>
   4a50c:	mov	w8, #0x7170                	// #29040
   4a510:	add	x8, x19, x8
   4a514:	mov	w9, #0xffffffff            	// #-1
   4a518:	str	x20, [x19, #29024]
   4a51c:	str	w9, [x8]
   4a520:	ldp	x20, x19, [sp, #16]
   4a524:	ldp	x29, x30, [sp], #32
   4a528:	ret

000000000004a52c <ZSTD_resetDStream@@Base>:
   4a52c:	stp	x29, x30, [sp, #-32]!
   4a530:	mov	w1, #0x1                   	// #1
   4a534:	stp	x20, x19, [sp, #16]
   4a538:	mov	x29, sp
   4a53c:	mov	x19, x0
   4a540:	bl	4890 <ZSTD_DCtx_reset@plt>
   4a544:	mov	x20, x0
   4a548:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a54c:	cbnz	w0, 4a560 <ZSTD_resetDStream@@Base+0x34>
   4a550:	mov	w8, #0x7110                	// #28944
   4a554:	ldr	w0, [x19, x8]
   4a558:	bl	48da4 <ZSTD_getFrameHeader_advanced@@Base+0x25c>
   4a55c:	mov	x20, x0
   4a560:	mov	x0, x20
   4a564:	ldp	x20, x19, [sp, #16]
   4a568:	ldp	x29, x30, [sp], #32
   4a56c:	ret

000000000004a570 <ZSTD_DCtx_setMaxWindowSize@@Base>:
   4a570:	stp	x29, x30, [sp, #-32]!
   4a574:	stp	x20, x19, [sp, #16]
   4a578:	mov	x20, x0
   4a57c:	mov	w0, #0x64                  	// #100
   4a580:	mov	x29, sp
   4a584:	mov	x19, x1
   4a588:	bl	4600 <ZSTD_dParam_getBounds@plt>
   4a58c:	mov	w8, #0x7174                	// #29044
   4a590:	ldr	w8, [x20, x8]
   4a594:	cbz	w8, 4a5a0 <ZSTD_DCtx_setMaxWindowSize@@Base+0x30>
   4a598:	mov	x0, #0xffffffffffffffc4    	// #-60
   4a59c:	b	4a5c8 <ZSTD_DCtx_setMaxWindowSize@@Base+0x58>
   4a5a0:	lsr	x8, x19, x1
   4a5a4:	mov	x0, #0xffffffffffffffd6    	// #-42
   4a5a8:	cbz	x8, 4a5c8 <ZSTD_DCtx_setMaxWindowSize@@Base+0x58>
   4a5ac:	lsr	x8, x1, #32
   4a5b0:	mov	w9, #0x1                   	// #1
   4a5b4:	lsl	x8, x9, x8
   4a5b8:	cmp	x8, x19
   4a5bc:	b.cc	4a5c8 <ZSTD_DCtx_setMaxWindowSize@@Base+0x58>  // b.lo, b.ul, b.last
   4a5c0:	mov	x0, xzr
   4a5c4:	str	x19, [x20, #29072]
   4a5c8:	ldp	x20, x19, [sp, #16]
   4a5cc:	ldp	x29, x30, [sp], #32
   4a5d0:	ret

000000000004a5d4 <ZSTD_dParam_getBounds@@Base>:
   4a5d4:	cmp	w0, #0x64
   4a5d8:	b.eq	4a5f0 <ZSTD_dParam_getBounds@@Base+0x1c>  // b.none
   4a5dc:	cmp	w0, #0x3e8
   4a5e0:	b.ne	4a600 <ZSTD_dParam_getBounds@@Base+0x2c>  // b.any
   4a5e4:	mov	x0, xzr
   4a5e8:	mov	x1, #0x100000000           	// #4294967296
   4a5ec:	ret
   4a5f0:	mov	x1, #0xa                   	// #10
   4a5f4:	mov	x0, xzr
   4a5f8:	movk	x1, #0x1f, lsl #32
   4a5fc:	ret
   4a600:	mov	x1, xzr
   4a604:	mov	x0, #0xffffffffffffffd8    	// #-40
   4a608:	ret

000000000004a60c <ZSTD_DCtx_setFormat@@Base>:
   4a60c:	stp	x29, x30, [sp, #-16]!
   4a610:	mov	w2, w1
   4a614:	mov	w1, #0x3e8                 	// #1000
   4a618:	mov	x29, sp
   4a61c:	bl	44d0 <ZSTD_DCtx_setParameter@plt>
   4a620:	ldp	x29, x30, [sp], #16
   4a624:	ret

000000000004a628 <ZSTD_DCtx_setParameter@@Base>:
   4a628:	stp	x29, x30, [sp, #-32]!
   4a62c:	stp	x20, x19, [sp, #16]
   4a630:	mov	w8, #0x7174                	// #29044
   4a634:	ldr	w8, [x0, x8]
   4a638:	mov	x29, sp
   4a63c:	cbz	w8, 4a650 <ZSTD_DCtx_setParameter@@Base+0x28>
   4a640:	mov	x0, #0xffffffffffffffc4    	// #-60
   4a644:	ldp	x20, x19, [sp, #16]
   4a648:	ldp	x29, x30, [sp], #32
   4a64c:	ret
   4a650:	mov	w20, w2
   4a654:	mov	x19, x0
   4a658:	cmp	w1, #0x3e8
   4a65c:	b.eq	4a698 <ZSTD_DCtx_setParameter@@Base+0x70>  // b.none
   4a660:	cmp	w1, #0x64
   4a664:	b.ne	4a6bc <ZSTD_DCtx_setParameter@@Base+0x94>  // b.any
   4a668:	cmp	w20, #0x0
   4a66c:	mov	w8, #0x1b                  	// #27
   4a670:	csel	w20, w8, w20, eq  // eq = none
   4a674:	mov	w0, #0x64                  	// #100
   4a678:	mov	w1, w20
   4a67c:	bl	4a6cc <ZSTD_DCtx_setParameter@@Base+0xa4>
   4a680:	cbz	w0, 4a6c4 <ZSTD_DCtx_setParameter@@Base+0x9c>
   4a684:	mov	w8, #0x1                   	// #1
   4a688:	lsl	x8, x8, x20
   4a68c:	mov	x0, xzr
   4a690:	str	x8, [x19, #29072]
   4a694:	b	4a644 <ZSTD_DCtx_setParameter@@Base+0x1c>
   4a698:	mov	w0, #0x3e8                 	// #1000
   4a69c:	mov	w1, w20
   4a6a0:	bl	4a6cc <ZSTD_DCtx_setParameter@@Base+0xa4>
   4a6a4:	cbz	w0, 4a6c4 <ZSTD_DCtx_setParameter@@Base+0x9c>
   4a6a8:	mov	w8, #0x7110                	// #28944
   4a6ac:	mov	x0, xzr
   4a6b0:	add	x8, x19, x8
   4a6b4:	str	w20, [x8]
   4a6b8:	b	4a644 <ZSTD_DCtx_setParameter@@Base+0x1c>
   4a6bc:	mov	x0, #0xffffffffffffffd8    	// #-40
   4a6c0:	b	4a644 <ZSTD_DCtx_setParameter@@Base+0x1c>
   4a6c4:	mov	x0, #0xffffffffffffffd6    	// #-42
   4a6c8:	b	4a644 <ZSTD_DCtx_setParameter@@Base+0x1c>
   4a6cc:	stp	x29, x30, [sp, #-32]!
   4a6d0:	stp	x20, x19, [sp, #16]
   4a6d4:	mov	x29, sp
   4a6d8:	mov	w19, w1
   4a6dc:	bl	4600 <ZSTD_dParam_getBounds@plt>
   4a6e0:	mov	x20, x1
   4a6e4:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a6e8:	cmp	w0, #0x0
   4a6ec:	lsr	x8, x20, #32
   4a6f0:	cset	w9, eq  // eq = none
   4a6f4:	cmp	w20, w19
   4a6f8:	cset	w10, le
   4a6fc:	cmp	w8, w19
   4a700:	ldp	x20, x19, [sp, #16]
   4a704:	cset	w8, ge  // ge = tcont
   4a708:	and	w9, w9, w10
   4a70c:	and	w0, w8, w9
   4a710:	ldp	x29, x30, [sp], #32
   4a714:	ret

000000000004a718 <ZSTD_sizeof_DStream@@Base>:
   4a718:	stp	x29, x30, [sp, #-16]!
   4a71c:	mov	x29, sp
   4a720:	bl	47d0 <ZSTD_sizeof_DCtx@plt>
   4a724:	ldp	x29, x30, [sp], #16
   4a728:	ret

000000000004a72c <ZSTD_decodingBufferSize_min@@Base>:
   4a72c:	cmp	x0, #0x20, lsl #12
   4a730:	mov	w8, #0x20000               	// #131072
   4a734:	csel	x8, x0, x8, cc  // cc = lo, ul, last
   4a738:	add	x8, x0, x8
   4a73c:	add	x8, x8, #0x40
   4a740:	cmp	x8, x1
   4a744:	csel	x0, x1, x8, hi  // hi = pmore
   4a748:	ret

000000000004a74c <ZSTD_estimateDStreamSize@@Base>:
   4a74c:	stp	x29, x30, [sp, #-32]!
   4a750:	cmp	x0, #0x20, lsl #12
   4a754:	mov	w8, #0x20000               	// #131072
   4a758:	mov	x1, #0xffffffffffffffff    	// #-1
   4a75c:	str	x19, [sp, #16]
   4a760:	mov	x29, sp
   4a764:	csel	x19, x0, x8, cc  // cc = lo, ul, last
   4a768:	bl	47e0 <ZSTD_decodingBufferSize_min@plt>
   4a76c:	add	x8, x19, x0
   4a770:	ldr	x19, [sp, #16]
   4a774:	mov	w9, #0x7210                	// #29200
   4a778:	movk	w9, #0x2, lsl #16
   4a77c:	add	x0, x8, x9
   4a780:	ldp	x29, x30, [sp], #32
   4a784:	ret

000000000004a788 <ZSTD_estimateDStreamSize_fromFrame@@Base>:
   4a788:	sub	sp, sp, #0x50
   4a78c:	mov	x2, x1
   4a790:	mov	x1, x0
   4a794:	add	x0, sp, #0x8
   4a798:	stp	x29, x30, [sp, #48]
   4a79c:	str	x19, [sp, #64]
   4a7a0:	add	x29, sp, #0x30
   4a7a4:	bl	4850 <ZSTD_getFrameHeader@plt>
   4a7a8:	mov	x19, x0
   4a7ac:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a7b0:	cbnz	w0, 4a7e0 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x58>
   4a7b4:	cbz	x19, 4a7c0 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x38>
   4a7b8:	mov	x19, #0xffffffffffffffb8    	// #-72
   4a7bc:	b	4a7e0 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x58>
   4a7c0:	ldr	x0, [sp, #16]
   4a7c4:	mov	w8, #0x80000000            	// #-2147483648
   4a7c8:	cmp	x0, x8
   4a7cc:	b.ls	4a7d8 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x50>  // b.plast
   4a7d0:	mov	x19, #0xfffffffffffffff0    	// #-16
   4a7d4:	b	4a7e0 <ZSTD_estimateDStreamSize_fromFrame@@Base+0x58>
   4a7d8:	bl	4520 <ZSTD_estimateDStreamSize@plt>
   4a7dc:	mov	x19, x0
   4a7e0:	mov	x0, x19
   4a7e4:	ldr	x19, [sp, #64]
   4a7e8:	ldp	x29, x30, [sp, #48]
   4a7ec:	add	sp, sp, #0x50
   4a7f0:	ret

000000000004a7f4 <ZSTD_decompressStream@@Base>:
   4a7f4:	sub	sp, sp, #0x110
   4a7f8:	stp	x29, x30, [sp, #176]
   4a7fc:	stp	x28, x27, [sp, #192]
   4a800:	stp	x26, x25, [sp, #208]
   4a804:	stp	x24, x23, [sp, #224]
   4a808:	stp	x22, x21, [sp, #240]
   4a80c:	stp	x20, x19, [sp, #256]
   4a810:	ldp	x9, x8, [x2, #8]
   4a814:	add	x29, sp, #0xb0
   4a818:	cmp	x8, x9
   4a81c:	b.ls	4a828 <ZSTD_decompressStream@@Base+0x34>  // b.plast
   4a820:	mov	x28, #0xffffffffffffffb8    	// #-72
   4a824:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4a828:	ldp	x11, x10, [x1, #8]
   4a82c:	cmp	x10, x11
   4a830:	b.ls	4a83c <ZSTD_decompressStream@@Base+0x48>  // b.plast
   4a834:	mov	x28, #0xffffffffffffffba    	// #-70
   4a838:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4a83c:	ldr	x13, [x2]
   4a840:	ldr	x14, [x1]
   4a844:	mov	x20, x0
   4a848:	mov	w12, #0x7080                	// #28800
   4a84c:	mov	w15, #0x71a8                	// #29096
   4a850:	mov	w17, #0x71c0                	// #29120
   4a854:	mov	w18, #0x71fc                	// #29180
   4a858:	add	x21, x20, x12
   4a85c:	add	x12, x20, x15
   4a860:	str	x1, [sp, #32]
   4a864:	mov	w1, #0x71f8                	// #29176
   4a868:	movk	w18, #0x2, lsl #16
   4a86c:	str	x12, [sp, #64]
   4a870:	add	x12, x20, x17
   4a874:	mov	w16, #0x7070                	// #28784
   4a878:	movk	w1, #0x2, lsl #16
   4a87c:	mov	w0, #0x7120                	// #28960
   4a880:	adrp	x25, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   4a884:	str	x12, [sp, #56]
   4a888:	add	x12, x20, x18
   4a88c:	add	x27, x13, x8
   4a890:	add	x9, x13, x9
   4a894:	add	x8, x14, x11
   4a898:	add	x25, x25, #0xfb8
   4a89c:	add	x19, x20, x16
   4a8a0:	add	x28, x20, x1
   4a8a4:	str	x12, [sp, #40]
   4a8a8:	add	x12, x20, x0
   4a8ac:	add	x23, x14, x10
   4a8b0:	stur	x8, [x29, #-80]
   4a8b4:	sub	x8, x9, x27
   4a8b8:	mov	w26, #0x1                   	// #1
   4a8bc:	str	x2, [sp, #48]
   4a8c0:	str	x12, [sp, #24]
   4a8c4:	stur	x9, [x29, #-56]
   4a8c8:	str	x8, [sp, #72]
   4a8cc:	stur	x27, [x29, #-40]
   4a8d0:	str	x23, [sp, #16]
   4a8d4:	stur	x28, [x29, #-48]
   4a8d8:	str	x27, [sp, #88]
   4a8dc:	stur	x19, [x29, #-72]
   4a8e0:	str	x21, [sp, #80]
   4a8e4:	b	4a8f0 <ZSTD_decompressStream@@Base+0xfc>
   4a8e8:	mov	w26, wzr
   4a8ec:	cbz	w26, 4b0ac <ZSTD_decompressStream@@Base+0x8b8>
   4a8f0:	ldr	w8, [x21, #244]
   4a8f4:	cmp	w8, #0x4
   4a8f8:	b.hi	4b0a4 <ZSTD_decompressStream@@Base+0x8b0>  // b.pmore
   4a8fc:	adr	x9, 4a90c <ZSTD_decompressStream@@Base+0x118>
   4a900:	ldrh	w10, [x25, x8, lsl #1]
   4a904:	add	x9, x9, x10, lsl #2
   4a908:	br	x9
   4a90c:	mov	w8, #0x1                   	// #1
   4a910:	str	w8, [x21, #244]
   4a914:	add	x8, x21, #0x14c
   4a918:	str	xzr, [x20, #29064]
   4a91c:	str	xzr, [x8]
   4a920:	ldr	x8, [sp, #64]
   4a924:	stp	xzr, xzr, [x8]
   4a928:	str	xzr, [x8, #16]
   4a92c:	ldr	w1, [x21, #332]
   4a930:	cbnz	w1, 4b160 <ZSTD_decompressStream@@Base+0x96c>
   4a934:	ldr	x2, [x20, #29112]
   4a938:	ldr	w3, [x21, #144]
   4a93c:	mov	x0, x19
   4a940:	mov	x1, x28
   4a944:	bl	45a0 <ZSTD_getFrameHeader_advanced@plt>
   4a948:	mov	x28, x0
   4a94c:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4a950:	cbz	w0, 4a99c <ZSTD_decompressStream@@Base+0x1a8>
   4a954:	ldr	x1, [sp, #72]
   4a958:	mov	x0, x27
   4a95c:	mov	x22, x27
   4a960:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   4a964:	cbz	w0, 4aa44 <ZSTD_decompressStream@@Base+0x250>
   4a968:	mov	w27, w0
   4a96c:	mov	x0, x20
   4a970:	bl	496a8 <ZSTD_decompress_usingDDict@@Base+0x20>
   4a974:	mov	x28, x0
   4a978:	cbz	x0, 4aa28 <ZSTD_decompressStream@@Base+0x234>
   4a97c:	mov	x0, x28
   4a980:	bl	481d8 <ZSTD_endStream@@Base+0x3a284>
   4a984:	mov	x24, x0
   4a988:	cbz	x28, 4aa30 <ZSTD_decompressStream@@Base+0x23c>
   4a98c:	mov	x0, x28
   4a990:	bl	481e0 <ZSTD_endStream@@Base+0x3a28c>
   4a994:	mov	x4, x0
   4a998:	b	4aa34 <ZSTD_decompressStream@@Base+0x240>
   4a99c:	cbz	x28, 4aa9c <ZSTD_decompressStream@@Base+0x2a8>
   4a9a0:	ldr	x8, [x20, #29112]
   4a9a4:	ldur	x9, [x29, #-40]
   4a9a8:	ldur	x10, [x29, #-56]
   4a9ac:	mov	x19, x27
   4a9b0:	sub	x27, x28, x8
   4a9b4:	sub	x24, x10, x9
   4a9b8:	cmp	x27, x24
   4a9bc:	b.ls	4aab8 <ZSTD_decompressStream@@Base+0x2c4>  // b.plast
   4a9c0:	cbz	x24, 4a9ec <ZSTD_decompressStream@@Base+0x1f8>
   4a9c4:	ldur	x1, [x29, #-40]
   4a9c8:	mov	w9, #0x71f8                	// #29176
   4a9cc:	add	x8, x20, x8
   4a9d0:	movk	w9, #0x2, lsl #16
   4a9d4:	add	x0, x8, x9
   4a9d8:	mov	x2, x24
   4a9dc:	bl	4420 <memcpy@plt>
   4a9e0:	ldr	x8, [x20, #29112]
   4a9e4:	add	x8, x8, x24
   4a9e8:	str	x8, [x20, #29112]
   4a9ec:	ldr	x9, [sp, #48]
   4a9f0:	mov	w10, #0x6                   	// #6
   4a9f4:	ldr	x8, [x9, #8]
   4a9f8:	str	x8, [x9, #16]
   4a9fc:	ldr	w8, [x21, #144]
   4aa00:	ldr	x9, [x20, #29112]
   4aa04:	cmp	w8, #0x0
   4aa08:	mov	w8, #0x2                   	// #2
   4aa0c:	csel	x8, x10, x8, eq  // eq = none
   4aa10:	cmp	x8, x28
   4aa14:	csel	x8, x8, x28, hi  // hi = pmore
   4aa18:	sub	x8, x8, x9
   4aa1c:	add	x28, x8, #0x3
   4aa20:	mov	w8, #0x1                   	// #1
   4aa24:	b	4aaec <ZSTD_decompressStream@@Base+0x2f8>
   4aa28:	mov	x24, xzr
   4aa2c:	cbnz	x28, 4a98c <ZSTD_decompressStream@@Base+0x198>
   4aa30:	mov	x4, xzr
   4aa34:	ldr	x28, [sp, #56]
   4aa38:	ldr	x8, [x20, #29000]
   4aa3c:	cbz	x8, 4aa58 <ZSTD_decompressStream@@Base+0x264>
   4aa40:	mov	x28, #0xffffffffffffffc0    	// #-64
   4aa44:	mov	w8, #0x1                   	// #1
   4aa48:	mov	x27, x22
   4aa4c:	cmp	w8, #0x4
   4aa50:	b.ne	4aafc <ZSTD_decompressStream@@Base+0x308>  // b.any
   4aa54:	b	4aaac <ZSTD_decompressStream@@Base+0x2b8>
   4aa58:	ldr	w1, [x21, #328]
   4aa5c:	mov	x0, x28
   4aa60:	mov	w2, w27
   4aa64:	mov	x3, x24
   4aa68:	bl	4b334 <ZSTD_decompressStream@@Base+0xb40>
   4aa6c:	mov	x24, x0
   4aa70:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4aa74:	ldur	x10, [x29, #-64]
   4aa78:	cmp	w0, #0x0
   4aa7c:	cset	w8, ne  // ne = any
   4aa80:	mov	x9, x28
   4aa84:	csel	x28, x10, x24, eq  // eq = none
   4aa88:	cbz	w0, 4ab54 <ZSTD_decompressStream@@Base+0x360>
   4aa8c:	mov	x27, x22
   4aa90:	cmp	w8, #0x4
   4aa94:	b.ne	4aafc <ZSTD_decompressStream@@Base+0x308>  // b.any
   4aa98:	b	4aaac <ZSTD_decompressStream@@Base+0x2b8>
   4aa9c:	ldur	x28, [x29, #-64]
   4aaa0:	mov	w8, wzr
   4aaa4:	cmp	w8, #0x4
   4aaa8:	b.ne	4aafc <ZSTD_decompressStream@@Base+0x308>  // b.any
   4aaac:	stur	x28, [x29, #-64]
   4aab0:	ldur	x28, [x29, #-48]
   4aab4:	b	4a8ec <ZSTD_decompressStream@@Base+0xf8>
   4aab8:	ldur	x22, [x29, #-40]
   4aabc:	mov	w9, #0x71f8                	// #29176
   4aac0:	add	x8, x20, x8
   4aac4:	movk	w9, #0x2, lsl #16
   4aac8:	add	x0, x8, x9
   4aacc:	mov	x1, x22
   4aad0:	mov	x2, x27
   4aad4:	bl	4420 <memcpy@plt>
   4aad8:	str	x28, [x20, #29112]
   4aadc:	ldur	x28, [x29, #-64]
   4aae0:	add	x22, x22, x27
   4aae4:	mov	w8, #0x4                   	// #4
   4aae8:	stur	x22, [x29, #-40]
   4aaec:	mov	x27, x19
   4aaf0:	ldur	x19, [x29, #-72]
   4aaf4:	cmp	w8, #0x4
   4aaf8:	b.eq	4aaac <ZSTD_decompressStream@@Base+0x2b8>  // b.none
   4aafc:	cbnz	w8, 4b204 <ZSTD_decompressStream@@Base+0xa10>
   4ab00:	ldr	x8, [x19]
   4ab04:	cbz	x8, 4ac00 <ZSTD_decompressStream@@Base+0x40c>
   4ab08:	ldr	x9, [x20, #28792]
   4ab0c:	cbz	x9, 4ac00 <ZSTD_decompressStream@@Base+0x40c>
   4ab10:	ldur	x9, [x29, #-80]
   4ab14:	mov	x22, x27
   4ab18:	sub	x27, x9, x23
   4ab1c:	cmp	x27, x8
   4ab20:	b.cs	4ab2c <ZSTD_decompressStream@@Base+0x338>  // b.hs, b.nlast
   4ab24:	mov	x27, x22
   4ab28:	b	4ac00 <ZSTD_decompressStream@@Base+0x40c>
   4ab2c:	ldr	x19, [sp, #72]
   4ab30:	mov	x0, x22
   4ab34:	str	w26, [sp, #8]
   4ab38:	mov	x25, x22
   4ab3c:	mov	x1, x19
   4ab40:	bl	49f0 <ZSTD_findFrameCompressedSize@plt>
   4ab44:	cmp	x0, x19
   4ab48:	b.ls	4ab80 <ZSTD_decompressStream@@Base+0x38c>  // b.plast
   4ab4c:	mov	w8, wzr
   4ab50:	b	4abe0 <ZSTD_decompressStream@@Base+0x3ec>
   4ab54:	str	w27, [x21, #328]
   4ab58:	str	w27, [x21, #332]
   4ab5c:	ldr	x0, [x9]
   4ab60:	ldr	x2, [sp, #32]
   4ab64:	ldr	x3, [sp, #48]
   4ab68:	mov	w1, w27
   4ab6c:	bl	4b228 <ZSTD_decompressStream@@Base+0xa34>
   4ab70:	mov	x28, x0
   4ab74:	cbnz	x0, 4aa44 <ZSTD_decompressStream@@Base+0x250>
   4ab78:	str	wzr, [x21, #244]
   4ab7c:	b	4aa44 <ZSTD_decompressStream@@Base+0x250>
   4ab80:	mov	x24, x0
   4ab84:	mov	x0, x20
   4ab88:	bl	496a8 <ZSTD_decompress_usingDDict@@Base+0x20>
   4ab8c:	mov	x5, x0
   4ab90:	mov	x0, x20
   4ab94:	mov	x1, x23
   4ab98:	mov	x2, x27
   4ab9c:	mov	x3, x25
   4aba0:	mov	x4, x24
   4aba4:	mov	x19, x23
   4aba8:	bl	4730 <ZSTD_decompress_usingDDict@plt>
   4abac:	mov	x27, x0
   4abb0:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4abb4:	cbz	w0, 4abc4 <ZSTD_decompressStream@@Base+0x3d0>
   4abb8:	mov	w8, #0x1                   	// #1
   4abbc:	mov	x28, x27
   4abc0:	b	4abe0 <ZSTD_decompressStream@@Base+0x3ec>
   4abc4:	add	x8, x25, x24
   4abc8:	stur	x8, [x29, #-40]
   4abcc:	add	x23, x19, x27
   4abd0:	mov	w8, #0x4                   	// #4
   4abd4:	str	wzr, [sp, #8]
   4abd8:	str	xzr, [x20, #28776]
   4abdc:	str	wzr, [x21, #244]
   4abe0:	ldur	x19, [x29, #-72]
   4abe4:	cmp	w8, #0x4
   4abe8:	b.eq	4b088 <ZSTD_decompressStream@@Base+0x894>  // b.none
   4abec:	ldr	w26, [sp, #8]
   4abf0:	adrp	x25, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   4abf4:	add	x25, x25, #0xfb8
   4abf8:	mov	x27, x22
   4abfc:	cbnz	w8, 4b204 <ZSTD_decompressStream@@Base+0xa10>
   4ac00:	mov	x0, x20
   4ac04:	bl	496a8 <ZSTD_decompress_usingDDict@@Base+0x20>
   4ac08:	mov	x1, x0
   4ac0c:	mov	x0, x20
   4ac10:	bl	45e0 <ZSTD_decompressBegin_usingDDict@plt>
   4ac14:	mov	x0, xzr
   4ac18:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4ac1c:	cmp	w0, #0x0
   4ac20:	csel	x28, x28, xzr, eq  // eq = none
   4ac24:	cbnz	w0, 4b204 <ZSTD_decompressStream@@Base+0xa10>
   4ac28:	ldur	x24, [x29, #-48]
   4ac2c:	mov	x0, x24
   4ac30:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   4ac34:	mov	w8, #0xd2a5                	// #53925
   4ac38:	movk	w8, #0x184, lsl #16
   4ac3c:	cmp	w8, w0, lsr #4
   4ac40:	b.ne	4ac60 <ZSTD_decompressStream@@Base+0x46c>  // b.any
   4ac44:	ldr	x0, [sp, #40]
   4ac48:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   4ac4c:	mov	w8, w0
   4ac50:	str	x8, [x20, #28776]
   4ac54:	mov	w8, #0x7                   	// #7
   4ac58:	str	w8, [x21, #36]
   4ac5c:	b	4ac94 <ZSTD_decompressStream@@Base+0x4a0>
   4ac60:	ldr	x2, [x20, #29112]
   4ac64:	mov	x0, x20
   4ac68:	mov	x1, x24
   4ac6c:	bl	49b04 <ZSTD_decompressContinue@@Base+0x374>
   4ac70:	mov	x24, x0
   4ac74:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4ac78:	cmp	w0, #0x0
   4ac7c:	csel	x28, x28, x24, eq  // eq = none
   4ac80:	cbnz	w0, 4b204 <ZSTD_decompressStream@@Base+0xa10>
   4ac84:	mov	w8, #0x3                   	// #3
   4ac88:	str	x8, [x20, #28776]
   4ac8c:	mov	w8, #0x2                   	// #2
   4ac90:	str	w8, [x21, #36]
   4ac94:	ldr	x8, [x20, #28792]
   4ac98:	ldr	x9, [x20, #29072]
   4ac9c:	mov	w10, #0x400                 	// #1024
   4aca0:	cmp	x8, #0x400
   4aca4:	csel	x0, x8, x10, hi  // hi = pmore
   4aca8:	cmp	x0, x9
   4acac:	str	x0, [x20, #28792]
   4acb0:	b.hi	4b1ac <ZSTD_decompressStream@@Base+0x9b8>  // b.pmore
   4acb4:	ldr	w8, [x21]
   4acb8:	ldr	x1, [x20, #28784]
   4acbc:	mov	w9, #0x4                   	// #4
   4acc0:	stur	x28, [x29, #-64]
   4acc4:	cmp	w8, #0x4
   4acc8:	mov	x22, x27
   4accc:	csel	w28, w8, w9, hi  // hi = pmore
   4acd0:	bl	47e0 <ZSTD_decodingBufferSize_min@plt>
   4acd4:	ldr	x8, [x20, #29056]
   4acd8:	mov	x27, x0
   4acdc:	cmp	x8, x28
   4ace0:	b.cc	4acf0 <ZSTD_decompressStream@@Base+0x4fc>  // b.lo, b.ul, b.last
   4ace4:	ldr	x8, [x20, #29088]
   4ace8:	cmp	x8, x27
   4acec:	b.cs	4adb0 <ZSTD_decompressStream@@Base+0x5bc>  // b.hs, b.nlast
   4acf0:	ldr	x8, [x20, #29000]
   4acf4:	add	x24, x27, x28
   4acf8:	cbz	x8, 4ad20 <ZSTD_decompressStream@@Base+0x52c>
   4acfc:	mov	x9, #0xffffffffffff8df0    	// #-29200
   4ad00:	movk	x9, #0xfffd, lsl #16
   4ad04:	add	x8, x8, x9
   4ad08:	cmp	x24, x8
   4ad0c:	b.ls	4ad88 <ZSTD_decompressStream@@Base+0x594>  // b.plast
   4ad10:	mov	x8, #0xffffffffffffffc0    	// #-64
   4ad14:	stur	x8, [x29, #-64]
   4ad18:	mov	w8, #0x1                   	// #1
   4ad1c:	b	4ada0 <ZSTD_decompressStream@@Base+0x5ac>
   4ad20:	str	x23, [sp, #8]
   4ad24:	mov	x23, x19
   4ad28:	ldr	x19, [sp, #24]
   4ad2c:	ldr	x0, [x20, #29048]
   4ad30:	sub	x1, x29, #0x20
   4ad34:	mov	w25, w26
   4ad38:	ldr	x8, [x19, #16]
   4ad3c:	ldr	q0, [x19]
   4ad40:	stur	x8, [x29, #-16]
   4ad44:	stur	q0, [x29, #-32]
   4ad48:	bl	6f90 <ZSTD_getErrorString@@Base+0xa4>
   4ad4c:	str	xzr, [x20, #29056]
   4ad50:	str	xzr, [x20, #29088]
   4ad54:	ldr	x8, [x19, #16]
   4ad58:	ldr	q0, [x19]
   4ad5c:	mov	x19, x23
   4ad60:	ldr	x23, [sp, #8]
   4ad64:	adrp	x25, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   4ad68:	sub	x1, x29, #0x20
   4ad6c:	mov	x0, x24
   4ad70:	add	x25, x25, #0xfb8
   4ad74:	stur	x8, [x29, #-16]
   4ad78:	stur	q0, [x29, #-32]
   4ad7c:	bl	6f00 <ZSTD_getErrorString@@Base+0x14>
   4ad80:	str	x0, [x20, #29048]
   4ad84:	cbz	x0, 4ad10 <ZSTD_decompressStream@@Base+0x51c>
   4ad88:	ldr	x9, [x20, #29048]
   4ad8c:	mov	w8, wzr
   4ad90:	str	x28, [x20, #29056]
   4ad94:	str	x27, [x20, #29088]
   4ad98:	add	x9, x9, x28
   4ad9c:	str	x9, [x20, #29080]
   4ada0:	ldur	x28, [x29, #-48]
   4ada4:	mov	x27, x22
   4ada8:	cbnz	w8, 4adbc <ZSTD_decompressStream@@Base+0x5c8>
   4adac:	b	4adb8 <ZSTD_decompressStream@@Base+0x5c4>
   4adb0:	ldur	x28, [x29, #-48]
   4adb4:	mov	x27, x22
   4adb8:	mov	w8, wzr
   4adbc:	cbnz	w8, 4b11c <ZSTD_decompressStream@@Base+0x928>
   4adc0:	mov	w8, #0x2                   	// #2
   4adc4:	str	w8, [x21, #244]
   4adc8:	mov	x0, x20
   4adcc:	mov	x22, x27
   4add0:	bl	49c0 <ZSTD_nextSrcSizeToDecompress@plt>
   4add4:	cbz	x0, 4adf8 <ZSTD_decompressStream@@Base+0x604>
   4add8:	ldur	x8, [x29, #-40]
   4addc:	ldur	x9, [x29, #-56]
   4ade0:	mov	x27, x0
   4ade4:	sub	x8, x9, x8
   4ade8:	cmp	x8, x0
   4adec:	b.cs	4ae08 <ZSTD_decompressStream@@Base+0x614>  // b.hs, b.nlast
   4adf0:	mov	w8, wzr
   4adf4:	b	4ae88 <ZSTD_decompressStream@@Base+0x694>
   4adf8:	mov	w26, wzr
   4adfc:	str	wzr, [x21, #244]
   4ae00:	mov	w8, #0x4                   	// #4
   4ae04:	b	4ae88 <ZSTD_decompressStream@@Base+0x694>
   4ae08:	mov	x0, x20
   4ae0c:	bl	4b44c <ZSTD_decompressStream@@Base+0xc58>
   4ae10:	ldr	x9, [x20, #29080]
   4ae14:	ldr	x8, [x20, #29096]
   4ae18:	mov	w24, w0
   4ae1c:	add	x1, x9, x8
   4ae20:	cbz	w0, 4ae2c <ZSTD_decompressStream@@Base+0x638>
   4ae24:	mov	x2, xzr
   4ae28:	b	4ae34 <ZSTD_decompressStream@@Base+0x640>
   4ae2c:	ldr	x9, [x20, #29088]
   4ae30:	sub	x2, x9, x8
   4ae34:	ldur	x3, [x29, #-40]
   4ae38:	mov	x0, x20
   4ae3c:	mov	x4, x27
   4ae40:	bl	48d0 <ZSTD_decompressContinue@plt>
   4ae44:	mov	x28, x0
   4ae48:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4ae4c:	cbz	w0, 4ae5c <ZSTD_decompressStream@@Base+0x668>
   4ae50:	mov	w8, #0x1                   	// #1
   4ae54:	stur	x28, [x29, #-64]
   4ae58:	b	4ae84 <ZSTD_decompressStream@@Base+0x690>
   4ae5c:	ldur	x8, [x29, #-40]
   4ae60:	add	x8, x8, x27
   4ae64:	stur	x8, [x29, #-40]
   4ae68:	mov	w8, #0x4                   	// #4
   4ae6c:	cbnz	w24, 4ae74 <ZSTD_decompressStream@@Base+0x680>
   4ae70:	cbz	x28, 4ae84 <ZSTD_decompressStream@@Base+0x690>
   4ae74:	ldr	x9, [x20, #29096]
   4ae78:	add	x9, x9, x28
   4ae7c:	str	x9, [x20, #29104]
   4ae80:	str	w8, [x21, #244]
   4ae84:	ldur	x28, [x29, #-48]
   4ae88:	mov	x27, x22
   4ae8c:	cmp	w8, #0x4
   4ae90:	b.eq	4a8ec <ZSTD_decompressStream@@Base+0xf8>  // b.none
   4ae94:	cbnz	w8, 4b11c <ZSTD_decompressStream@@Base+0x928>
   4ae98:	ldur	x8, [x29, #-40]
   4ae9c:	ldur	x9, [x29, #-56]
   4aea0:	cmp	x8, x9
   4aea4:	b.eq	4a8e8 <ZSTD_decompressStream@@Base+0xf4>  // b.none
   4aea8:	mov	w8, #0x3                   	// #3
   4aeac:	str	w8, [x21, #244]
   4aeb0:	ldur	x22, [x29, #-40]
   4aeb4:	ldur	x19, [x29, #-56]
   4aeb8:	mov	x8, x23
   4aebc:	mov	x0, x20
   4aec0:	mov	x23, x25
   4aec4:	mov	w25, w26
   4aec8:	mov	x21, x8
   4aecc:	bl	49c0 <ZSTD_nextSrcSizeToDecompress@plt>
   4aed0:	ldr	x26, [x20, #29064]
   4aed4:	mov	x28, x0
   4aed8:	sub	x24, x0, x26
   4aedc:	mov	x0, x20
   4aee0:	bl	4b44c <ZSTD_decompressStream@@Base+0xc58>
   4aee4:	mov	w27, w0
   4aee8:	cbz	w0, 4af00 <ZSTD_decompressStream@@Base+0x70c>
   4aeec:	mov	x8, x19
   4aef0:	sub	x8, x19, x22
   4aef4:	cmp	x24, x8
   4aef8:	csel	x0, x24, x8, cc  // cc = lo, ul, last
   4aefc:	b	4af3c <ZSTD_decompressStream@@Base+0x748>
   4af00:	ldr	x8, [x20, #29056]
   4af04:	sub	x8, x8, x26
   4af08:	cmp	x24, x8
   4af0c:	b.ls	4af24 <ZSTD_decompressStream@@Base+0x730>  // b.plast
   4af10:	mov	x8, #0xffffffffffffffec    	// #-20
   4af14:	stur	x8, [x29, #-64]
   4af18:	mov	w8, #0x1                   	// #1
   4af1c:	mov	x10, x21
   4af20:	b	4afd8 <ZSTD_decompressStream@@Base+0x7e4>
   4af24:	ldr	x8, [x20, #29048]
   4af28:	sub	x3, x19, x22
   4af2c:	mov	x1, x24
   4af30:	mov	x2, x22
   4af34:	add	x0, x8, x26
   4af38:	bl	4b460 <ZSTD_decompressStream@@Base+0xc6c>
   4af3c:	ldr	x8, [x20, #29064]
   4af40:	add	x22, x22, x0
   4af44:	cmp	x0, x24
   4af48:	stur	x22, [x29, #-40]
   4af4c:	add	x8, x8, x0
   4af50:	str	x8, [x20, #29064]
   4af54:	b.cs	4af68 <ZSTD_decompressStream@@Base+0x774>  // b.hs, b.nlast
   4af58:	mov	w25, wzr
   4af5c:	mov	w8, #0x4                   	// #4
   4af60:	mov	x10, x21
   4af64:	b	4afd8 <ZSTD_decompressStream@@Base+0x7e4>
   4af68:	ldr	x8, [x20, #29080]
   4af6c:	ldr	x9, [x20, #29096]
   4af70:	ldr	x10, [x20, #29088]
   4af74:	ldr	x3, [x20, #29048]
   4af78:	mov	x0, x20
   4af7c:	add	x1, x8, x9
   4af80:	sub	x2, x10, x9
   4af84:	mov	x4, x28
   4af88:	bl	48d0 <ZSTD_decompressContinue@plt>
   4af8c:	mov	x24, x0
   4af90:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4af94:	mov	x10, x21
   4af98:	cbz	w0, 4afa8 <ZSTD_decompressStream@@Base+0x7b4>
   4af9c:	mov	w8, #0x1                   	// #1
   4afa0:	stur	x24, [x29, #-64]
   4afa4:	b	4afd8 <ZSTD_decompressStream@@Base+0x7e4>
   4afa8:	str	xzr, [x20, #29064]
   4afac:	cbnz	w27, 4afc8 <ZSTD_decompressStream@@Base+0x7d4>
   4afb0:	cbnz	x24, 4afc8 <ZSTD_decompressStream@@Base+0x7d4>
   4afb4:	ldp	x21, x27, [sp, #80]
   4afb8:	mov	w8, #0x2                   	// #2
   4afbc:	str	w8, [x21, #244]
   4afc0:	mov	w8, #0x4                   	// #4
   4afc4:	b	4afdc <ZSTD_decompressStream@@Base+0x7e8>
   4afc8:	ldr	x9, [x20, #29096]
   4afcc:	mov	w8, wzr
   4afd0:	add	x9, x9, x24
   4afd4:	str	x9, [x20, #29104]
   4afd8:	ldp	x21, x27, [sp, #80]
   4afdc:	ldur	x19, [x29, #-72]
   4afe0:	ldur	x28, [x29, #-48]
   4afe4:	cmp	w8, #0x4
   4afe8:	b.eq	4b078 <ZSTD_decompressStream@@Base+0x884>  // b.none
   4afec:	cbnz	w8, 4b11c <ZSTD_decompressStream@@Base+0x928>
   4aff0:	mov	w8, #0x4                   	// #4
   4aff4:	mov	w26, w25
   4aff8:	mov	x25, x23
   4affc:	mov	x23, x10
   4b000:	str	w8, [x21, #244]
   4b004:	ldr	x8, [x20, #29104]
   4b008:	ldr	x9, [x20, #29096]
   4b00c:	ldr	x10, [x20, #29080]
   4b010:	ldur	x11, [x29, #-80]
   4b014:	mov	x0, x23
   4b018:	sub	x24, x8, x9
   4b01c:	add	x2, x10, x9
   4b020:	sub	x1, x11, x23
   4b024:	mov	x3, x24
   4b028:	bl	4b460 <ZSTD_decompressStream@@Base+0xc6c>
   4b02c:	ldr	x8, [x20, #29096]
   4b030:	add	x23, x23, x0
   4b034:	cmp	x0, x24
   4b038:	add	x8, x8, x0
   4b03c:	str	x8, [x20, #29096]
   4b040:	b.ne	4a8e8 <ZSTD_decompressStream@@Base+0xf4>  // b.any
   4b044:	mov	w9, #0x2                   	// #2
   4b048:	str	w9, [x21, #244]
   4b04c:	ldr	x9, [x20, #29088]
   4b050:	ldr	x10, [x20, #28784]
   4b054:	cmp	x9, x10
   4b058:	b.cs	4a8ec <ZSTD_decompressStream@@Base+0xf8>  // b.hs, b.nlast
   4b05c:	ldr	w10, [x21]
   4b060:	add	x8, x8, x10
   4b064:	cmp	x8, x9
   4b068:	b.ls	4a8ec <ZSTD_decompressStream@@Base+0xf8>  // b.plast
   4b06c:	ldr	x8, [sp, #64]
   4b070:	stp	xzr, xzr, [x8]
   4b074:	b	4a8ec <ZSTD_decompressStream@@Base+0xf8>
   4b078:	mov	w26, w25
   4b07c:	mov	x25, x23
   4b080:	mov	x23, x10
   4b084:	b	4a8ec <ZSTD_decompressStream@@Base+0xf8>
   4b088:	stur	x28, [x29, #-64]
   4b08c:	ldur	x28, [x29, #-48]
   4b090:	ldr	w26, [sp, #8]
   4b094:	adrp	x25, 68000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x102dc>
   4b098:	add	x25, x25, #0xfb8
   4b09c:	mov	x27, x22
   4b0a0:	b	4a8ec <ZSTD_decompressStream@@Base+0xf8>
   4b0a4:	mov	x28, #0xffffffffffffffff    	// #-1
   4b0a8:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b0ac:	ldr	x9, [sp, #48]
   4b0b0:	ldur	x10, [x29, #-40]
   4b0b4:	ldr	x8, [x9]
   4b0b8:	sub	x24, x10, x8
   4b0bc:	str	x24, [x9, #16]
   4b0c0:	ldr	x9, [sp, #32]
   4b0c4:	ldr	x10, [sp, #16]
   4b0c8:	ldr	x8, [x9]
   4b0cc:	cmp	x23, x10
   4b0d0:	sub	x8, x23, x8
   4b0d4:	str	x8, [x9, #16]
   4b0d8:	b.ne	4b124 <ZSTD_decompressStream@@Base+0x930>  // b.any
   4b0dc:	ldur	x8, [x29, #-40]
   4b0e0:	cmp	x8, x27
   4b0e4:	b.ne	4b124 <ZSTD_decompressStream@@Base+0x930>  // b.any
   4b0e8:	ldr	w8, [x21, #340]
   4b0ec:	add	w9, w8, #0x1
   4b0f0:	cmp	w8, #0xf
   4b0f4:	str	w9, [x21, #340]
   4b0f8:	b.lt	4b128 <ZSTD_decompressStream@@Base+0x934>  // b.tstop
   4b0fc:	ldur	x8, [x29, #-80]
   4b100:	cmp	x23, x8
   4b104:	b.eq	4a834 <ZSTD_decompressStream@@Base+0x40>  // b.none
   4b108:	ldur	x8, [x29, #-40]
   4b10c:	ldur	x9, [x29, #-56]
   4b110:	cmp	x8, x9
   4b114:	b.ne	4b128 <ZSTD_decompressStream@@Base+0x934>  // b.any
   4b118:	b	4a820 <ZSTD_decompressStream@@Base+0x2c>
   4b11c:	ldur	x28, [x29, #-64]
   4b120:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b124:	str	wzr, [x21, #340]
   4b128:	mov	x0, x20
   4b12c:	mov	x19, x21
   4b130:	bl	49c0 <ZSTD_nextSrcSizeToDecompress@plt>
   4b134:	cbz	x0, 4b170 <ZSTD_decompressStream@@Base+0x97c>
   4b138:	mov	x21, x0
   4b13c:	mov	x0, x20
   4b140:	bl	4b00 <ZSTD_nextInputType@plt>
   4b144:	ldr	x8, [x20, #29064]
   4b148:	cmp	w0, #0x2
   4b14c:	mov	w9, #0x3                   	// #3
   4b150:	csel	x9, x9, xzr, eq  // eq = none
   4b154:	sub	x8, x21, x8
   4b158:	add	x28, x8, x9
   4b15c:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b160:	ldr	x8, [x20, #29000]
   4b164:	cbz	x8, 4b1b4 <ZSTD_decompressStream@@Base+0x9c0>
   4b168:	mov	x28, #0xffffffffffffffc0    	// #-64
   4b16c:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b170:	ldr	x9, [x20, #29104]
   4b174:	ldr	x10, [x20, #29096]
   4b178:	ldr	w8, [x19, #336]
   4b17c:	mov	x11, x19
   4b180:	cmp	x9, x10
   4b184:	b.ne	4b1d4 <ZSTD_decompressStream@@Base+0x9e0>  // b.any
   4b188:	cbz	w8, 4b1f0 <ZSTD_decompressStream@@Base+0x9fc>
   4b18c:	ldr	x9, [sp, #48]
   4b190:	ldr	x8, [x9, #8]
   4b194:	cmp	x24, x8
   4b198:	b.cs	4b1f8 <ZSTD_decompressStream@@Base+0xa04>  // b.hs, b.nlast
   4b19c:	add	x8, x24, #0x1
   4b1a0:	mov	x28, xzr
   4b1a4:	str	x8, [x9, #16]
   4b1a8:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b1ac:	mov	x28, #0xfffffffffffffff0    	// #-16
   4b1b0:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b1b4:	ldr	x0, [x20, #29120]
   4b1b8:	ldr	x2, [sp, #32]
   4b1bc:	ldr	x3, [sp, #48]
   4b1c0:	bl	4b228 <ZSTD_decompressStream@@Base+0xa34>
   4b1c4:	mov	x28, x0
   4b1c8:	cbnz	x0, 4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b1cc:	str	wzr, [x21, #244]
   4b1d0:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b1d4:	mov	w28, #0x1                   	// #1
   4b1d8:	cbnz	w8, 4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b1dc:	ldr	x9, [sp, #48]
   4b1e0:	sub	x8, x24, #0x1
   4b1e4:	str	x8, [x9, #16]
   4b1e8:	str	w28, [x11, #336]
   4b1ec:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b1f0:	mov	x28, xzr
   4b1f4:	b	4b204 <ZSTD_decompressStream@@Base+0xa10>
   4b1f8:	mov	w8, #0x2                   	// #2
   4b1fc:	str	w8, [x11, #244]
   4b200:	mov	w28, #0x1                   	// #1
   4b204:	mov	x0, x28
   4b208:	ldp	x20, x19, [sp, #256]
   4b20c:	ldp	x22, x21, [sp, #240]
   4b210:	ldp	x24, x23, [sp, #224]
   4b214:	ldp	x26, x25, [sp, #208]
   4b218:	ldp	x28, x27, [sp, #192]
   4b21c:	ldp	x29, x30, [sp, #176]
   4b220:	add	sp, sp, #0x110
   4b224:	ret
   4b228:	sub	sp, sp, #0x30
   4b22c:	stp	x20, x19, [sp, #32]
   4b230:	mov	x19, x3
   4b234:	mov	x20, x2
   4b238:	cmp	w1, #0x7
   4b23c:	stp	x29, x30, [sp, #16]
   4b240:	add	x29, sp, #0x10
   4b244:	b.eq	4b290 <ZSTD_decompressStream@@Base+0xa9c>  // b.none
   4b248:	cmp	w1, #0x6
   4b24c:	b.eq	4b2c8 <ZSTD_decompressStream@@Base+0xad4>  // b.none
   4b250:	cmp	w1, #0x5
   4b254:	b.ne	4b320 <ZSTD_decompressStream@@Base+0xb2c>  // b.any
   4b258:	ldp	x9, x8, [x19, #8]
   4b25c:	ldr	x10, [x19]
   4b260:	mov	x2, sp
   4b264:	add	x4, sp, #0x8
   4b268:	sub	x9, x9, x8
   4b26c:	str	x9, [sp, #8]
   4b270:	ldp	x12, x9, [x20, #8]
   4b274:	ldr	x11, [x20]
   4b278:	add	x3, x10, x8
   4b27c:	sub	x8, x12, x9
   4b280:	add	x1, x11, x9
   4b284:	str	x8, [sp]
   4b288:	bl	5ba4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3d28>
   4b28c:	b	4b2fc <ZSTD_decompressStream@@Base+0xb08>
   4b290:	ldp	x9, x8, [x19, #8]
   4b294:	ldr	x10, [x19]
   4b298:	mov	x2, sp
   4b29c:	add	x4, sp, #0x8
   4b2a0:	sub	x9, x9, x8
   4b2a4:	str	x9, [sp, #8]
   4b2a8:	ldp	x12, x9, [x20, #8]
   4b2ac:	ldr	x11, [x20]
   4b2b0:	add	x3, x10, x8
   4b2b4:	sub	x8, x12, x9
   4b2b8:	add	x1, x11, x9
   4b2bc:	str	x8, [sp]
   4b2c0:	bl	6535c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd638>
   4b2c4:	b	4b2fc <ZSTD_decompressStream@@Base+0xb08>
   4b2c8:	ldp	x9, x8, [x19, #8]
   4b2cc:	ldr	x10, [x19]
   4b2d0:	mov	x2, sp
   4b2d4:	add	x4, sp, #0x8
   4b2d8:	sub	x9, x9, x8
   4b2dc:	str	x9, [sp, #8]
   4b2e0:	ldp	x12, x9, [x20, #8]
   4b2e4:	ldr	x11, [x20]
   4b2e8:	add	x3, x10, x8
   4b2ec:	sub	x8, x12, x9
   4b2f0:	add	x1, x11, x9
   4b2f4:	str	x8, [sp]
   4b2f8:	bl	6028c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8568>
   4b2fc:	ldr	x8, [sp]
   4b300:	ldr	x9, [x20, #16]
   4b304:	add	x8, x9, x8
   4b308:	str	x8, [x20, #16]
   4b30c:	ldr	x8, [sp, #8]
   4b310:	ldr	x9, [x19, #16]
   4b314:	add	x8, x9, x8
   4b318:	str	x8, [x19, #16]
   4b31c:	b	4b324 <ZSTD_decompressStream@@Base+0xb30>
   4b320:	mov	x0, #0xfffffffffffffff4    	// #-12
   4b324:	ldp	x20, x19, [sp, #32]
   4b328:	ldp	x29, x30, [sp, #16]
   4b32c:	add	sp, sp, #0x30
   4b330:	ret
   4b334:	stp	x29, x30, [sp, #-64]!
   4b338:	str	x23, [sp, #16]
   4b33c:	stp	x22, x21, [sp, #32]
   4b340:	stp	x20, x19, [sp, #48]
   4b344:	mov	x20, x4
   4b348:	mov	x21, x3
   4b34c:	mov	w22, w2
   4b350:	mov	w23, w1
   4b354:	cmp	w1, w2
   4b358:	mov	x19, x0
   4b35c:	mov	x29, sp
   4b360:	b.eq	4b370 <ZSTD_decompressStream@@Base+0xb7c>  // b.none
   4b364:	ldr	x0, [x19]
   4b368:	mov	w1, w23
   4b36c:	bl	48984 <ZSTD_freeDCtx@@Base+0xdc>
   4b370:	cmp	w22, #0x7
   4b374:	b.eq	4b3a0 <ZSTD_decompressStream@@Base+0xbac>  // b.none
   4b378:	cmp	w22, #0x6
   4b37c:	b.eq	4b3b8 <ZSTD_decompressStream@@Base+0xbc4>  // b.none
   4b380:	cmp	w22, #0x5
   4b384:	b.ne	4b3d0 <ZSTD_decompressStream@@Base+0xbdc>  // b.any
   4b388:	cmp	w23, w22
   4b38c:	b.eq	4b3d8 <ZSTD_decompressStream@@Base+0xbe4>  // b.none
   4b390:	bl	5b970 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c4c>
   4b394:	mov	x22, x0
   4b398:	cbnz	x22, 4b3e0 <ZSTD_decompressStream@@Base+0xbec>
   4b39c:	b	4b434 <ZSTD_decompressStream@@Base+0xc40>
   4b3a0:	cmp	w23, w22
   4b3a4:	b.eq	4b3f4 <ZSTD_decompressStream@@Base+0xc00>  // b.none
   4b3a8:	bl	651a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd480>
   4b3ac:	mov	x22, x0
   4b3b0:	cbnz	x22, 4b3fc <ZSTD_decompressStream@@Base+0xc08>
   4b3b4:	b	4b434 <ZSTD_decompressStream@@Base+0xc40>
   4b3b8:	cmp	w23, w22
   4b3bc:	b.eq	4b410 <ZSTD_decompressStream@@Base+0xc1c>  // b.none
   4b3c0:	bl	601ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x8488>
   4b3c4:	mov	x22, x0
   4b3c8:	cbnz	x22, 4b418 <ZSTD_decompressStream@@Base+0xc24>
   4b3cc:	b	4b434 <ZSTD_decompressStream@@Base+0xc40>
   4b3d0:	mov	x0, xzr
   4b3d4:	b	4b438 <ZSTD_decompressStream@@Base+0xc44>
   4b3d8:	ldr	x22, [x19]
   4b3dc:	cbz	x22, 4b434 <ZSTD_decompressStream@@Base+0xc40>
   4b3e0:	mov	x0, x22
   4b3e4:	mov	x1, x21
   4b3e8:	mov	x2, x20
   4b3ec:	bl	5ba00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3cdc>
   4b3f0:	b	4b428 <ZSTD_decompressStream@@Base+0xc34>
   4b3f4:	ldr	x22, [x19]
   4b3f8:	cbz	x22, 4b434 <ZSTD_decompressStream@@Base+0xc40>
   4b3fc:	mov	x0, x22
   4b400:	mov	x1, x21
   4b404:	mov	x2, x20
   4b408:	bl	65310 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd5ec>
   4b40c:	b	4b428 <ZSTD_decompressStream@@Base+0xc34>
   4b410:	ldr	x22, [x19]
   4b414:	cbz	x22, 4b434 <ZSTD_decompressStream@@Base+0xc40>
   4b418:	mov	x0, x22
   4b41c:	mov	x1, x21
   4b420:	mov	x2, x20
   4b424:	bl	60240 <ZDICT_addEntropyTablesFromBuffer@@Base+0x851c>
   4b428:	mov	x0, xzr
   4b42c:	str	x22, [x19]
   4b430:	b	4b438 <ZSTD_decompressStream@@Base+0xc44>
   4b434:	mov	x0, #0xffffffffffffffc0    	// #-64
   4b438:	ldp	x20, x19, [sp, #48]
   4b43c:	ldp	x22, x21, [sp, #32]
   4b440:	ldr	x23, [sp, #16]
   4b444:	ldp	x29, x30, [sp], #64
   4b448:	ret
   4b44c:	mov	w8, #0x70a4                	// #28836
   4b450:	ldr	w8, [x0, x8]
   4b454:	cmp	w8, #0x7
   4b458:	cset	w0, eq  // eq = none
   4b45c:	ret
   4b460:	stp	x29, x30, [sp, #-32]!
   4b464:	cmp	x1, x3
   4b468:	str	x19, [sp, #16]
   4b46c:	csel	x19, x1, x3, cc  // cc = lo, ul, last
   4b470:	mov	x1, x2
   4b474:	mov	x2, x19
   4b478:	mov	x29, sp
   4b47c:	bl	4420 <memcpy@plt>
   4b480:	mov	x0, x19
   4b484:	ldr	x19, [sp, #16]
   4b488:	ldp	x29, x30, [sp], #32
   4b48c:	ret

000000000004b490 <ZSTD_decompressStream_simpleArgs@@Base>:
   4b490:	sub	sp, sp, #0x50
   4b494:	stp	x29, x30, [sp, #48]
   4b498:	stp	x20, x19, [sp, #64]
   4b49c:	stp	x1, x2, [sp, #24]
   4b4a0:	ldr	x8, [x3]
   4b4a4:	stp	x4, x5, [sp]
   4b4a8:	add	x1, sp, #0x18
   4b4ac:	mov	x2, sp
   4b4b0:	str	x8, [sp, #40]
   4b4b4:	ldr	x8, [x6]
   4b4b8:	add	x29, sp, #0x30
   4b4bc:	mov	x19, x6
   4b4c0:	mov	x20, x3
   4b4c4:	str	x8, [sp, #16]
   4b4c8:	bl	48f0 <ZSTD_decompressStream@plt>
   4b4cc:	ldr	x8, [sp, #40]
   4b4d0:	str	x8, [x20]
   4b4d4:	ldr	x8, [sp, #16]
   4b4d8:	str	x8, [x19]
   4b4dc:	ldp	x20, x19, [sp, #64]
   4b4e0:	ldp	x29, x30, [sp, #48]
   4b4e4:	add	sp, sp, #0x50
   4b4e8:	ret
   4b4ec:	mov	w0, wzr
   4b4f0:	ret
   4b4f4:	ldr	w0, [x0]
   4b4f8:	ret
   4b4fc:	ldrh	w0, [x0]
   4b500:	ret
   4b504:	ldr	x0, [x0]
   4b508:	ret
   4b50c:	sub	sp, sp, #0x30
   4b510:	stp	x29, x30, [sp, #16]
   4b514:	stp	x20, x19, [sp, #32]
   4b518:	add	x29, sp, #0x10
   4b51c:	mov	x19, x1
   4b520:	mov	x20, x0
   4b524:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   4b528:	cmp	w0, #0x7
   4b52c:	b.eq	4b55c <ZSTD_decompressStream_simpleArgs@@Base+0xcc>  // b.none
   4b530:	cmp	w0, #0x6
   4b534:	b.eq	4b578 <ZSTD_decompressStream_simpleArgs@@Base+0xe8>  // b.none
   4b538:	cmp	w0, #0x5
   4b53c:	b.ne	4b594 <ZSTD_decompressStream_simpleArgs@@Base+0x104>  // b.any
   4b540:	mov	x8, sp
   4b544:	add	x3, x8, #0x8
   4b548:	mov	x2, sp
   4b54c:	mov	x0, x20
   4b550:	mov	x1, x19
   4b554:	bl	5b4c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x37a0>
   4b558:	b	4b5a0 <ZSTD_decompressStream_simpleArgs@@Base+0x110>
   4b55c:	mov	x8, sp
   4b560:	add	x3, x8, #0x8
   4b564:	mov	x2, sp
   4b568:	mov	x0, x20
   4b56c:	mov	x1, x19
   4b570:	bl	648fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xcbd8>
   4b574:	b	4b5a0 <ZSTD_decompressStream_simpleArgs@@Base+0x110>
   4b578:	mov	x8, sp
   4b57c:	add	x3, x8, #0x8
   4b580:	mov	x2, sp
   4b584:	mov	x0, x20
   4b588:	mov	x1, x19
   4b58c:	bl	5fcd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7fb4>
   4b590:	b	4b5a0 <ZSTD_decompressStream_simpleArgs@@Base+0x110>
   4b594:	mov	x8, #0xfffffffffffffff6    	// #-10
   4b598:	mov	x9, #0xfffffffffffffffe    	// #-2
   4b59c:	stp	x8, x9, [sp]
   4b5a0:	ldr	x20, [sp]
   4b5a4:	mov	x0, x20
   4b5a8:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4b5ac:	cmp	x20, x19
   4b5b0:	b.ls	4b5c4 <ZSTD_decompressStream_simpleArgs@@Base+0x134>  // b.plast
   4b5b4:	cbnz	w0, 4b5c4 <ZSTD_decompressStream_simpleArgs@@Base+0x134>
   4b5b8:	mov	x8, #0xffffffffffffffb8    	// #-72
   4b5bc:	mov	x9, #0xfffffffffffffffe    	// #-2
   4b5c0:	stp	x8, x9, [sp]
   4b5c4:	ldp	x0, x1, [sp]
   4b5c8:	ldp	x20, x19, [sp, #32]
   4b5cc:	ldp	x29, x30, [sp, #16]
   4b5d0:	add	sp, sp, #0x30
   4b5d4:	ret
   4b5d8:	mov	x1, #0xfffffffffffffffe    	// #-2
   4b5dc:	ret
   4b5e0:	stp	x29, x30, [sp, #-16]!
   4b5e4:	mov	x29, sp
   4b5e8:	bl	4b50c <ZSTD_decompressStream_simpleArgs@@Base+0x7c>
   4b5ec:	ldp	x29, x30, [sp], #16
   4b5f0:	ret
   4b5f4:	stp	x29, x30, [sp, #-80]!
   4b5f8:	stp	x24, x23, [sp, #32]
   4b5fc:	mov	x23, x1
   4b600:	mov	x24, x0
   4b604:	mov	x0, x2
   4b608:	mov	x1, x3
   4b60c:	str	x25, [sp, #16]
   4b610:	stp	x22, x21, [sp, #48]
   4b614:	stp	x20, x19, [sp, #64]
   4b618:	mov	x29, sp
   4b61c:	mov	x19, x5
   4b620:	mov	x20, x4
   4b624:	mov	x21, x3
   4b628:	mov	x22, x2
   4b62c:	bl	48a68 <ZSTD_isFrame@@Base+0x88>
   4b630:	cmp	w0, #0x7
   4b634:	b.eq	4b680 <ZSTD_decompressStream_simpleArgs@@Base+0x1f0>  // b.none
   4b638:	cmp	w0, #0x6
   4b63c:	b.eq	4b6b8 <ZSTD_decompressStream_simpleArgs@@Base+0x228>  // b.none
   4b640:	cmp	w0, #0x5
   4b644:	b.ne	4b6f8 <ZSTD_decompressStream_simpleArgs@@Base+0x268>  // b.any
   4b648:	bl	5af28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3204>
   4b64c:	cbz	x0, 4b6f0 <ZSTD_decompressStream_simpleArgs@@Base+0x260>
   4b650:	mov	x1, x24
   4b654:	mov	x2, x23
   4b658:	mov	x3, x22
   4b65c:	mov	x4, x21
   4b660:	mov	x5, x20
   4b664:	mov	x6, x19
   4b668:	mov	x25, x0
   4b66c:	bl	5b35c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3638>
   4b670:	mov	x19, x0
   4b674:	mov	x0, x25
   4b678:	bl	5af60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x323c>
   4b67c:	b	4b6fc <ZSTD_decompressStream_simpleArgs@@Base+0x26c>
   4b680:	bl	640b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc390>
   4b684:	cbz	x0, 4b6f0 <ZSTD_decompressStream_simpleArgs@@Base+0x260>
   4b688:	mov	x1, x24
   4b68c:	mov	x2, x23
   4b690:	mov	x3, x22
   4b694:	mov	x4, x21
   4b698:	mov	x5, x20
   4b69c:	mov	x6, x19
   4b6a0:	mov	x25, x0
   4b6a4:	bl	64544 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc820>
   4b6a8:	mov	x19, x0
   4b6ac:	mov	x0, x25
   4b6b0:	bl	640ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xc3c8>
   4b6b4:	b	4b6fc <ZSTD_decompressStream_simpleArgs@@Base+0x26c>
   4b6b8:	bl	5f66c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7948>
   4b6bc:	cbz	x0, 4b6f0 <ZSTD_decompressStream_simpleArgs@@Base+0x260>
   4b6c0:	mov	x1, x24
   4b6c4:	mov	x2, x23
   4b6c8:	mov	x3, x22
   4b6cc:	mov	x4, x21
   4b6d0:	mov	x5, x20
   4b6d4:	mov	x6, x19
   4b6d8:	mov	x25, x0
   4b6dc:	bl	5fb68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e44>
   4b6e0:	mov	x19, x0
   4b6e4:	mov	x0, x25
   4b6e8:	bl	5f6a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7980>
   4b6ec:	b	4b6fc <ZSTD_decompressStream_simpleArgs@@Base+0x26c>
   4b6f0:	mov	x19, #0xffffffffffffffc0    	// #-64
   4b6f4:	b	4b6fc <ZSTD_decompressStream_simpleArgs@@Base+0x26c>
   4b6f8:	mov	x19, #0xfffffffffffffff6    	// #-10
   4b6fc:	mov	x0, x19
   4b700:	ldp	x20, x19, [sp, #64]
   4b704:	ldp	x22, x21, [sp, #48]
   4b708:	ldp	x24, x23, [sp, #32]
   4b70c:	ldr	x25, [sp, #16]
   4b710:	ldp	x29, x30, [sp], #80
   4b714:	ret
   4b718:	sub	sp, sp, #0x90
   4b71c:	stp	x29, x30, [sp, #48]
   4b720:	stp	x28, x27, [sp, #64]
   4b724:	stp	x26, x25, [sp, #80]
   4b728:	stp	x24, x23, [sp, #96]
   4b72c:	stp	x22, x21, [sp, #112]
   4b730:	stp	x20, x19, [sp, #128]
   4b734:	mov	w8, #0x7110                	// #28944
   4b738:	mov	x26, x2
   4b73c:	ldr	w2, [x0, x8]
   4b740:	ldr	x23, [x4]
   4b744:	mov	w8, #0x5                   	// #5
   4b748:	mov	w9, #0x9                   	// #9
   4b74c:	cmp	w2, #0x0
   4b750:	csel	x8, x9, x8, eq  // eq = none
   4b754:	cmp	x23, x8
   4b758:	add	x29, sp, #0x30
   4b75c:	b.cs	4b768 <ZSTD_decompressStream_simpleArgs@@Base+0x2d8>  // b.hs, b.nlast
   4b760:	mov	x27, #0xffffffffffffffb8    	// #-72
   4b764:	b	4b9cc <ZSTD_decompressStream_simpleArgs@@Base+0x53c>
   4b768:	ldr	x22, [x3]
   4b76c:	cmp	w2, #0x0
   4b770:	mov	w8, #0x5                   	// #5
   4b774:	mov	x25, x0
   4b778:	mov	x21, x1
   4b77c:	csinc	x1, x8, xzr, eq  // eq = none
   4b780:	mov	x0, x22
   4b784:	mov	x19, x4
   4b788:	mov	x20, x3
   4b78c:	bl	48ac8 <ZSTD_frameHeaderSize@@Base+0x18>
   4b790:	mov	x27, x0
   4b794:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4b798:	cbz	w0, 4b7a8 <ZSTD_decompressStream_simpleArgs@@Base+0x318>
   4b79c:	mov	w8, #0x1                   	// #1
   4b7a0:	cbnz	w8, 4b9cc <ZSTD_decompressStream_simpleArgs@@Base+0x53c>
   4b7a4:	b	4b7fc <ZSTD_decompressStream_simpleArgs@@Base+0x36c>
   4b7a8:	add	x8, x27, #0x3
   4b7ac:	cmp	x23, x8
   4b7b0:	b.cs	4b7c4 <ZSTD_decompressStream_simpleArgs@@Base+0x334>  // b.hs, b.nlast
   4b7b4:	mov	x27, #0xffffffffffffffb8    	// #-72
   4b7b8:	mov	w8, #0x1                   	// #1
   4b7bc:	cbnz	w8, 4b9cc <ZSTD_decompressStream_simpleArgs@@Base+0x53c>
   4b7c0:	b	4b7fc <ZSTD_decompressStream_simpleArgs@@Base+0x36c>
   4b7c4:	mov	x0, x25
   4b7c8:	mov	x1, x22
   4b7cc:	mov	x2, x27
   4b7d0:	bl	49b04 <ZSTD_decompressContinue@@Base+0x374>
   4b7d4:	mov	x24, x0
   4b7d8:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4b7dc:	cmp	w0, #0x0
   4b7e0:	cset	w8, ne  // ne = any
   4b7e4:	cbnz	w0, 4b7f4 <ZSTD_decompressStream_simpleArgs@@Base+0x364>
   4b7e8:	mov	w8, wzr
   4b7ec:	add	x22, x22, x27
   4b7f0:	sub	x23, x23, x27
   4b7f4:	mov	x27, x24
   4b7f8:	cbnz	w8, 4b9cc <ZSTD_decompressStream_simpleArgs@@Base+0x53c>
   4b7fc:	mov	w8, #0x7090                	// #28816
   4b800:	mov	x10, x21
   4b804:	mov	w9, #0x70b0                	// #28848
   4b808:	add	x8, x25, x8
   4b80c:	add	x21, x21, x26
   4b810:	str	x8, [sp, #24]
   4b814:	add	x8, x25, x9
   4b818:	mov	x26, x10
   4b81c:	str	x8, [sp, #16]
   4b820:	stp	x20, x10, [sp]
   4b824:	b	4b834 <ZSTD_decompressStream_simpleArgs@@Base+0x3a4>
   4b828:	mov	w8, #0x1                   	// #1
   4b82c:	mov	x27, x28
   4b830:	cbnz	w8, 4b930 <ZSTD_decompressStream_simpleArgs@@Base+0x4a0>
   4b834:	sub	x2, x29, #0x10
   4b838:	mov	x0, x22
   4b83c:	mov	x1, x23
   4b840:	bl	4ba18 <ZSTD_decompressStream_simpleArgs@@Base+0x588>
   4b844:	mov	x28, x0
   4b848:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4b84c:	cbnz	w0, 4b828 <ZSTD_decompressStream_simpleArgs@@Base+0x398>
   4b850:	sub	x23, x23, #0x3
   4b854:	subs	x20, x23, x28
   4b858:	add	x22, x22, #0x3
   4b85c:	b.cs	4b86c <ZSTD_decompressStream_simpleArgs@@Base+0x3dc>  // b.hs, b.nlast
   4b860:	mov	x27, #0xffffffffffffffb8    	// #-72
   4b864:	mov	w8, #0x1                   	// #1
   4b868:	b	4b830 <ZSTD_decompressStream_simpleArgs@@Base+0x3a0>
   4b86c:	ldur	w8, [x29, #-16]
   4b870:	cbz	w8, 4b8a4 <ZSTD_decompressStream_simpleArgs@@Base+0x414>
   4b874:	cmp	w8, #0x1
   4b878:	b.eq	4b8bc <ZSTD_decompressStream_simpleArgs@@Base+0x42c>  // b.none
   4b87c:	cmp	w8, #0x2
   4b880:	b.ne	4b924 <ZSTD_decompressStream_simpleArgs@@Base+0x494>  // b.any
   4b884:	sub	x2, x21, x26
   4b888:	mov	w5, #0x1                   	// #1
   4b88c:	mov	x0, x25
   4b890:	mov	x1, x26
   4b894:	mov	x3, x22
   4b898:	mov	x4, x28
   4b89c:	bl	4c348 <ZSTD_decompressStream_simpleArgs@@Base+0xeb8>
   4b8a0:	b	4b8d0 <ZSTD_decompressStream_simpleArgs@@Base+0x440>
   4b8a4:	sub	x1, x21, x26
   4b8a8:	mov	x0, x26
   4b8ac:	mov	x2, x22
   4b8b0:	mov	x3, x28
   4b8b4:	bl	49b90 <ZSTD_decompressContinue@@Base+0x400>
   4b8b8:	b	4b8d0 <ZSTD_decompressStream_simpleArgs@@Base+0x440>
   4b8bc:	ldur	w3, [x29, #-8]
   4b8c0:	ldrb	w2, [x22]
   4b8c4:	sub	x1, x21, x26
   4b8c8:	mov	x0, x26
   4b8cc:	bl	49be0 <ZSTD_decompressContinue@@Base+0x450>
   4b8d0:	mov	x24, x0
   4b8d4:	bl	49088 <ZSTD_findDecompressedSize@@Base+0x180>
   4b8d8:	cbz	w0, 4b8e8 <ZSTD_decompressStream_simpleArgs@@Base+0x458>
   4b8dc:	mov	w8, #0x1                   	// #1
   4b8e0:	mov	x27, x24
   4b8e4:	b	4b830 <ZSTD_decompressStream_simpleArgs@@Base+0x3a0>
   4b8e8:	ldr	x8, [sp, #24]
   4b8ec:	ldr	w8, [x8]
   4b8f0:	cbz	w8, 4b904 <ZSTD_decompressStream_simpleArgs@@Base+0x474>
   4b8f4:	ldr	x0, [sp, #16]
   4b8f8:	mov	x1, x26
   4b8fc:	mov	x2, x24
   4b900:	bl	696c <ZSTD_initDStream_usingDDict@plt+0x1e5c>
   4b904:	ldur	w8, [x29, #-12]
   4b908:	add	x26, x26, x24
   4b90c:	add	x22, x22, x28
   4b910:	mov	x23, x20
   4b914:	cmp	w8, #0x0
   4b918:	mov	w8, #0x5                   	// #5
   4b91c:	csel	w8, wzr, w8, eq  // eq = none
   4b920:	b	4b830 <ZSTD_decompressStream_simpleArgs@@Base+0x3a0>
   4b924:	mov	x27, #0xffffffffffffffec    	// #-20
   4b928:	mov	w8, #0x1                   	// #1
   4b92c:	b	4b830 <ZSTD_decompressStream_simpleArgs@@Base+0x3a0>
   4b930:	cmp	w8, #0x5
   4b934:	b.ne	4b9cc <ZSTD_decompressStream_simpleArgs@@Base+0x53c>  // b.any
   4b938:	ldr	x8, [x25, #28784]
   4b93c:	ldr	x21, [sp, #8]
   4b940:	cmn	x8, #0x1
   4b944:	b.eq	4b954 <ZSTD_decompressStream_simpleArgs@@Base+0x4c4>  // b.none
   4b948:	sub	x9, x26, x21
   4b94c:	cmp	x9, x8
   4b950:	b.ne	4b97c <ZSTD_decompressStream_simpleArgs@@Base+0x4ec>  // b.any
   4b954:	ldr	x8, [sp, #24]
   4b958:	ldr	w8, [x8]
   4b95c:	cbz	w8, 4b984 <ZSTD_decompressStream_simpleArgs@@Base+0x4f4>
   4b960:	mov	w8, #0x70b0                	// #28848
   4b964:	add	x0, x25, x8
   4b968:	bl	6b34 <ZSTD_initDStream_usingDDict@plt+0x2024>
   4b96c:	subs	x20, x23, #0x4
   4b970:	b.cs	4b98c <ZSTD_decompressStream_simpleArgs@@Base+0x4fc>  // b.hs, b.nlast
   4b974:	ldr	x9, [sp]
   4b978:	b	4b9b4 <ZSTD_decompressStream_simpleArgs@@Base+0x524>
   4b97c:	mov	x27, #0xffffffffffffffec    	// #-20
   4b980:	b	4b9cc <ZSTD_decompressStream_simpleArgs@@Base+0x53c>
   4b984:	ldr	x9, [sp]
   4b988:	b	4b9c0 <ZSTD_decompressStream_simpleArgs@@Base+0x530>
   4b98c:	mov	x24, x0
   4b990:	mov	x0, x22
   4b994:	bl	48a54 <ZSTD_isFrame@@Base+0x74>
   4b998:	ldr	x9, [sp]
   4b99c:	cmp	w0, w24
   4b9a0:	b.ne	4b9b4 <ZSTD_decompressStream_simpleArgs@@Base+0x524>  // b.any
   4b9a4:	add	x22, x22, #0x4
   4b9a8:	mov	w8, #0x1                   	// #1
   4b9ac:	mov	x23, x20
   4b9b0:	b	4b9bc <ZSTD_decompressStream_simpleArgs@@Base+0x52c>
   4b9b4:	mov	w8, wzr
   4b9b8:	mov	x27, #0xffffffffffffffea    	// #-22
   4b9bc:	cbz	w8, 4b9cc <ZSTD_decompressStream_simpleArgs@@Base+0x53c>
   4b9c0:	sub	x27, x26, x21
   4b9c4:	str	x22, [x9]
   4b9c8:	str	x23, [x19]
   4b9cc:	mov	x0, x27
   4b9d0:	ldp	x20, x19, [sp, #128]
   4b9d4:	ldp	x22, x21, [sp, #112]
   4b9d8:	ldp	x24, x23, [sp, #96]
   4b9dc:	ldp	x26, x25, [sp, #80]
   4b9e0:	ldp	x28, x27, [sp, #64]
   4b9e4:	ldp	x29, x30, [sp, #48]
   4b9e8:	add	sp, sp, #0x90
   4b9ec:	ret
   4b9f0:	ldr	x8, [x0, #28744]
   4b9f4:	ldr	x9, [x0, #28752]
   4b9f8:	add	x10, x1, x2
   4b9fc:	str	x1, [x0, #28752]
   4ba00:	str	x8, [x0, #28768]
   4ba04:	sub	x8, x9, x8
   4ba08:	add	x8, x1, x8
   4ba0c:	str	x8, [x0, #28760]
   4ba10:	str	x10, [x0, #28744]
   4ba14:	ret
   4ba18:	cmp	x1, #0x3
   4ba1c:	b.cs	4ba28 <ZSTD_decompressStream_simpleArgs@@Base+0x598>  // b.hs, b.nlast
   4ba20:	mov	x0, #0xffffffffffffffb8    	// #-72
   4ba24:	ret
   4ba28:	stp	x29, x30, [sp, #-32]!
   4ba2c:	str	x19, [sp, #16]
   4ba30:	mov	x29, sp
   4ba34:	mov	x19, x2
   4ba38:	bl	4ba7c <ZSTD_decompressStream_simpleArgs@@Base+0x5ec>
   4ba3c:	mov	w8, w0
   4ba40:	and	w9, w8, #0x1
   4ba44:	ubfx	w8, w8, #1, #2
   4ba48:	lsr	w0, w0, #3
   4ba4c:	stp	w8, w9, [x19]
   4ba50:	str	w0, [x19, #8]
   4ba54:	ldr	x19, [sp, #16]
   4ba58:	cmp	w8, #0x1
   4ba5c:	ldp	x29, x30, [sp], #32
   4ba60:	b.eq	4ba74 <ZSTD_decompressStream_simpleArgs@@Base+0x5e4>  // b.none
   4ba64:	cmp	w8, #0x3
   4ba68:	b.ne	4ba70 <ZSTD_decompressStream_simpleArgs@@Base+0x5e0>  // b.any
   4ba6c:	mov	x0, #0xffffffffffffffec    	// #-20
   4ba70:	ret
   4ba74:	mov	w0, #0x1                   	// #1
   4ba78:	ret
   4ba7c:	stp	x29, x30, [sp, #-32]!
   4ba80:	str	x19, [sp, #16]
   4ba84:	mov	x29, sp
   4ba88:	mov	x19, x0
   4ba8c:	bl	4bdf0 <ZSTD_decompressStream_simpleArgs@@Base+0x960>
   4ba90:	ldrb	w8, [x19, #2]
   4ba94:	ldr	x19, [sp, #16]
   4ba98:	and	w0, w0, #0xffff
   4ba9c:	bfi	w0, w8, #16, #8
   4baa0:	ldp	x29, x30, [sp], #32
   4baa4:	ret
   4baa8:	stp	x29, x30, [sp, #-80]!
   4baac:	cmp	x2, #0x3
   4bab0:	str	x25, [sp, #16]
   4bab4:	stp	x24, x23, [sp, #32]
   4bab8:	stp	x22, x21, [sp, #48]
   4babc:	stp	x20, x19, [sp, #64]
   4bac0:	mov	x29, sp
   4bac4:	b.cs	4bae8 <ZSTD_decompressStream_simpleArgs@@Base+0x658>  // b.hs, b.nlast
   4bac8:	mov	x21, #0xffffffffffffffec    	// #-20
   4bacc:	mov	x0, x21
   4bad0:	ldp	x20, x19, [sp, #64]
   4bad4:	ldp	x22, x21, [sp, #48]
   4bad8:	ldp	x24, x23, [sp, #32]
   4badc:	ldr	x25, [sp, #16]
   4bae0:	ldp	x29, x30, [sp], #80
   4bae4:	ret
   4bae8:	ldrb	w8, [x1]
   4baec:	adrp	x10, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4baf0:	add	x10, x10, #0x3f0
   4baf4:	mov	w9, #0x70a8                	// #28840
   4baf8:	and	w24, w8, #0x3
   4bafc:	adr	x11, 4bb1c <ZSTD_decompressStream_simpleArgs@@Base+0x68c>
   4bb00:	ldrb	w12, [x10, x24]
   4bb04:	add	x11, x11, x12, lsl #2
   4bb08:	mov	x23, x2
   4bb0c:	mov	x20, x1
   4bb10:	mov	x19, x0
   4bb14:	add	x25, x0, x9
   4bb18:	br	x11
   4bb1c:	ubfx	w9, w8, #2, #2
   4bb20:	cmp	w9, #0x1
   4bb24:	b.eq	4bbd4 <ZSTD_decompressStream_simpleArgs@@Base+0x744>  // b.none
   4bb28:	cmp	w9, #0x3
   4bb2c:	b.ne	4bbe8 <ZSTD_decompressStream_simpleArgs@@Base+0x758>  // b.any
   4bb30:	mov	x0, x20
   4bb34:	bl	4ba7c <ZSTD_decompressStream_simpleArgs@@Base+0x5ec>
   4bb38:	lsr	w22, w0, #4
   4bb3c:	mov	w8, #0x3                   	// #3
   4bb40:	b	4bbf0 <ZSTD_decompressStream_simpleArgs@@Base+0x760>
   4bb44:	ubfx	w9, w8, #2, #2
   4bb48:	cmp	w9, #0x1
   4bb4c:	b.eq	4bc48 <ZSTD_decompressStream_simpleArgs@@Base+0x7b8>  // b.none
   4bb50:	cmp	w9, #0x3
   4bb54:	b.ne	4bc64 <ZSTD_decompressStream_simpleArgs@@Base+0x7d4>  // b.any
   4bb58:	mov	x0, x20
   4bb5c:	bl	4ba7c <ZSTD_decompressStream_simpleArgs@@Base+0x5ec>
   4bb60:	cmp	x23, #0x4
   4bb64:	b.cc	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.lo, b.ul, b.last
   4bb68:	lsr	w21, w0, #4
   4bb6c:	mov	w22, #0x3                   	// #3
   4bb70:	cmp	x21, #0x20, lsl #12
   4bb74:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bb78:	b	4bc74 <ZSTD_decompressStream_simpleArgs@@Base+0x7e4>
   4bb7c:	ldr	w9, [x25]
   4bb80:	cbz	w9, 4bbcc <ZSTD_decompressStream_simpleArgs@@Base+0x73c>
   4bb84:	cmp	x23, #0x5
   4bb88:	b.cc	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.lo, b.ul, b.last
   4bb8c:	mov	x0, x20
   4bb90:	ubfx	w21, w8, #2, #2
   4bb94:	bl	4bdd0 <ZSTD_decompressStream_simpleArgs@@Base+0x940>
   4bb98:	cmp	w21, #0x2
   4bb9c:	b.eq	4bc9c <ZSTD_decompressStream_simpleArgs@@Base+0x80c>  // b.none
   4bba0:	cmp	w21, #0x3
   4bba4:	b.ne	4bcb8 <ZSTD_decompressStream_simpleArgs@@Base+0x828>  // b.any
   4bba8:	ldrb	w10, [x20, #4]
   4bbac:	lsr	w8, w0, #22
   4bbb0:	mov	w9, wzr
   4bbb4:	ubfx	w22, w0, #4, #18
   4bbb8:	bfi	x8, x10, #10, #8
   4bbbc:	mov	w10, #0x5                   	// #5
   4bbc0:	cmp	w22, #0x20, lsl #12
   4bbc4:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bbc8:	b	4bcd4 <ZSTD_decompressStream_simpleArgs@@Base+0x844>
   4bbcc:	mov	x21, #0xffffffffffffffe2    	// #-30
   4bbd0:	b	4bacc <ZSTD_decompressStream_simpleArgs@@Base+0x63c>
   4bbd4:	mov	x0, x20
   4bbd8:	bl	4bdf0 <ZSTD_decompressStream_simpleArgs@@Base+0x960>
   4bbdc:	ubfx	w22, w0, #4, #12
   4bbe0:	mov	w8, #0x2                   	// #2
   4bbe4:	b	4bbf0 <ZSTD_decompressStream_simpleArgs@@Base+0x760>
   4bbe8:	lsr	x22, x8, #3
   4bbec:	mov	w8, #0x1                   	// #1
   4bbf0:	add	x21, x8, x22
   4bbf4:	add	x9, x21, #0x20
   4bbf8:	cmp	x9, x23
   4bbfc:	b.ls	4bc38 <ZSTD_decompressStream_simpleArgs@@Base+0x7a8>  // b.plast
   4bc00:	cmp	x21, x23
   4bc04:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bc08:	mov	w9, #0x71d8                	// #29144
   4bc0c:	add	x23, x19, x9
   4bc10:	add	x1, x20, x8
   4bc14:	mov	x0, x23
   4bc18:	mov	x2, x22
   4bc1c:	bl	4420 <memcpy@plt>
   4bc20:	add	x8, x23, x22
   4bc24:	movi	v0.2d, #0x0
   4bc28:	str	x23, [x19, #28952]
   4bc2c:	str	x22, [x19, #28984]
   4bc30:	stp	q0, q0, [x8]
   4bc34:	b	4bacc <ZSTD_decompressStream_simpleArgs@@Base+0x63c>
   4bc38:	add	x8, x20, x8
   4bc3c:	str	x8, [x19, #28952]
   4bc40:	str	x22, [x19, #28984]
   4bc44:	b	4bacc <ZSTD_decompressStream_simpleArgs@@Base+0x63c>
   4bc48:	mov	x0, x20
   4bc4c:	bl	4bdf0 <ZSTD_decompressStream_simpleArgs@@Base+0x960>
   4bc50:	ubfx	w21, w0, #4, #12
   4bc54:	mov	w22, #0x2                   	// #2
   4bc58:	cmp	x21, #0x20, lsl #12
   4bc5c:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bc60:	b	4bc74 <ZSTD_decompressStream_simpleArgs@@Base+0x7e4>
   4bc64:	lsr	x21, x8, #3
   4bc68:	mov	w22, #0x1                   	// #1
   4bc6c:	cmp	x21, #0x20, lsl #12
   4bc70:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bc74:	ldrb	w1, [x20, x22]
   4bc78:	mov	w8, #0x71d8                	// #29144
   4bc7c:	add	x20, x19, x8
   4bc80:	add	x2, x21, #0x20
   4bc84:	mov	x0, x20
   4bc88:	bl	46a0 <memset@plt>
   4bc8c:	str	x21, [x19, #28984]
   4bc90:	add	x21, x22, #0x1
   4bc94:	str	x20, [x19, #28952]
   4bc98:	b	4bacc <ZSTD_decompressStream_simpleArgs@@Base+0x63c>
   4bc9c:	mov	w9, wzr
   4bca0:	ubfx	w22, w0, #4, #14
   4bca4:	lsr	w8, w0, #18
   4bca8:	mov	w10, #0x4                   	// #4
   4bcac:	cmp	w22, #0x20, lsl #12
   4bcb0:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bcb4:	b	4bcd4 <ZSTD_decompressStream_simpleArgs@@Base+0x844>
   4bcb8:	cmp	w21, #0x0
   4bcbc:	ubfx	w22, w0, #4, #10
   4bcc0:	ubfx	w8, w0, #14, #10
   4bcc4:	cset	w9, eq  // eq = none
   4bcc8:	mov	w10, #0x3                   	// #3
   4bccc:	cmp	w22, #0x20, lsl #12
   4bcd0:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bcd4:	add	x21, x10, x8
   4bcd8:	cmp	x21, x23
   4bcdc:	b.hi	4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>  // b.pmore
   4bce0:	cmp	w22, #0x301
   4bce4:	b.cc	4bd10 <ZSTD_decompressStream_simpleArgs@@Base+0x880>  // b.lo, b.ul, b.last
   4bce8:	ldr	w11, [x25, #196]
   4bcec:	cbz	w11, 4bd10 <ZSTD_decompressStream_simpleArgs@@Base+0x880>
   4bcf0:	ldr	x11, [x19, #24]
   4bcf4:	mov	x12, xzr
   4bcf8:	lsr	x14, x12, #2
   4bcfc:	add	x13, x11, x12
   4bd00:	add	x12, x12, #0x40
   4bd04:	cmp	x14, #0xff1
   4bd08:	prfm	pldl2keep, [x13]
   4bd0c:	b.cc	4bcf8 <ZSTD_decompressStream_simpleArgs@@Base+0x868>  // b.lo, b.ul, b.last
   4bd10:	cmp	w24, #0x3
   4bd14:	b.ne	4bd40 <ZSTD_decompressStream_simpleArgs@@Base+0x8b0>  // b.any
   4bd18:	ldr	x4, [x19, #24]
   4bd1c:	ldr	w5, [x25, #168]
   4bd20:	mov	w11, #0x71d8                	// #29144
   4bd24:	add	x0, x19, x11
   4bd28:	add	x2, x20, x10
   4bd2c:	mov	x1, x22
   4bd30:	mov	x3, x8
   4bd34:	cbz	w9, 4bd78 <ZSTD_decompressStream_simpleArgs@@Base+0x8e8>
   4bd38:	bl	47b8c <ZSTD_endStream@@Base+0x39c38>
   4bd3c:	b	4bd84 <ZSTD_decompressStream_simpleArgs@@Base+0x8f4>
   4bd40:	ldr	w7, [x25, #168]
   4bd44:	mov	w11, #0x2838                	// #10296
   4bd48:	mov	w12, #0x71d8                	// #29144
   4bd4c:	add	x3, x20, x10
   4bd50:	mov	w10, #0x6848                	// #26696
   4bd54:	add	x0, x19, x11
   4bd58:	add	x1, x19, x12
   4bd5c:	add	x5, x19, x10
   4bd60:	mov	w6, #0x800                 	// #2048
   4bd64:	mov	x2, x22
   4bd68:	mov	x4, x8
   4bd6c:	cbz	w9, 4bd80 <ZSTD_decompressStream_simpleArgs@@Base+0x8f0>
   4bd70:	bl	47c0c <ZSTD_endStream@@Base+0x39cb8>
   4bd74:	b	4bd84 <ZSTD_decompressStream_simpleArgs@@Base+0x8f4>
   4bd78:	bl	47c98 <ZSTD_endStream@@Base+0x39d44>
   4bd7c:	b	4bd84 <ZSTD_decompressStream_simpleArgs@@Base+0x8f4>
   4bd80:	bl	47d18 <ZSTD_endStream@@Base+0x39dc4>
   4bd84:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4bd88:	cbnz	w0, 4bac8 <ZSTD_decompressStream_simpleArgs@@Base+0x638>
   4bd8c:	mov	w8, #0x71d8                	// #29144
   4bd90:	mov	w9, #0x1                   	// #1
   4bd94:	cmp	w24, #0x2
   4bd98:	add	x8, x19, x8
   4bd9c:	str	x22, [x19, #28984]
   4bda0:	str	x8, [x19, #28952]
   4bda4:	str	w9, [x25]
   4bda8:	b.ne	4bdb8 <ZSTD_decompressStream_simpleArgs@@Base+0x928>  // b.any
   4bdac:	mov	w8, #0x2838                	// #10296
   4bdb0:	add	x8, x19, x8
   4bdb4:	str	x8, [x19, #24]
   4bdb8:	add	x8, x19, x22
   4bdbc:	mov	w9, #0x71d8                	// #29144
   4bdc0:	movi	v0.2d, #0x0
   4bdc4:	add	x8, x8, x9
   4bdc8:	stp	q0, q0, [x8]
   4bdcc:	b	4bacc <ZSTD_decompressStream_simpleArgs@@Base+0x63c>
   4bdd0:	stp	x29, x30, [sp, #-16]!
   4bdd4:	mov	x29, sp
   4bdd8:	bl	4c550 <ZSTD_decompressBlock@@Base+0x64>
   4bddc:	ldp	x29, x30, [sp], #16
   4bde0:	ret
   4bde4:	cmn	x0, #0x78
   4bde8:	cset	w0, hi  // hi = pmore
   4bdec:	ret
   4bdf0:	stp	x29, x30, [sp, #-16]!
   4bdf4:	mov	x29, sp
   4bdf8:	bl	4c558 <ZSTD_decompressBlock@@Base+0x6c>
   4bdfc:	ldp	x29, x30, [sp], #16
   4be00:	ret
   4be04:	sub	sp, sp, #0xd0
   4be08:	mov	w12, #0x1                   	// #1
   4be0c:	stp	x24, x23, [sp, #160]
   4be10:	lsl	w23, w12, w5
   4be14:	stp	x22, x21, [sp, #176]
   4be18:	stp	x20, x19, [sp, #192]
   4be1c:	mov	w19, w5
   4be20:	mov	x20, x4
   4be24:	mov	x21, x3
   4be28:	add	x8, x0, #0x8
   4be2c:	adds	w11, w2, #0x1
   4be30:	sub	w9, w23, #0x1
   4be34:	stp	x29, x30, [sp, #112]
   4be38:	stp	x28, x27, [sp, #128]
   4be3c:	stp	x26, x25, [sp, #144]
   4be40:	add	x29, sp, #0x70
   4be44:	b.cc	4bf38 <ZSTD_decompressStream_simpleArgs@@Base+0xaa8>  // b.lo, b.ul, b.last
   4be48:	mov	w10, w9
   4be4c:	stp	w12, w19, [x0]
   4be50:	cbz	w11, 4beb8 <ZSTD_decompressStream_simpleArgs@@Base+0xa28>
   4be54:	lsr	w14, w23, #3
   4be58:	add	w14, w14, w23, lsr #1
   4be5c:	mov	x12, xzr
   4be60:	mov	w13, wzr
   4be64:	add	w14, w14, #0x3
   4be68:	mov	w11, w11
   4be6c:	b	4be7c <ZSTD_decompressStream_simpleArgs@@Base+0x9ec>
   4be70:	add	x12, x12, #0x1
   4be74:	cmp	x12, x11
   4be78:	b.eq	4beb8 <ZSTD_decompressStream_simpleArgs@@Base+0xa28>  // b.none
   4be7c:	ldrsh	w15, [x1, x12, lsl #1]
   4be80:	cmp	w15, #0x1
   4be84:	b.lt	4be70 <ZSTD_decompressStream_simpleArgs@@Base+0x9e0>  // b.tstop
   4be88:	ldrsh	w15, [x1, x12, lsl #1]
   4be8c:	mov	w16, wzr
   4be90:	add	x17, x8, w13, uxtw #3
   4be94:	str	w12, [x17, #4]
   4be98:	add	w13, w14, w13
   4be9c:	and	w13, w13, w9
   4bea0:	cmp	w13, w10
   4bea4:	b.hi	4be98 <ZSTD_decompressStream_simpleArgs@@Base+0xa08>  // b.pmore
   4bea8:	add	w16, w16, #0x1
   4beac:	cmp	w16, w15
   4beb0:	b.lt	4be90 <ZSTD_decompressStream_simpleArgs@@Base+0xa00>  // b.tstop
   4beb4:	b	4be70 <ZSTD_decompressStream_simpleArgs@@Base+0x9e0>
   4beb8:	mov	x24, xzr
   4bebc:	mov	w25, w23
   4bec0:	add	x26, x0, #0xc
   4bec4:	add	x27, sp, #0x4
   4bec8:	ldr	w28, [x26]
   4becc:	lsl	x8, x28, #1
   4bed0:	ldrh	w22, [x27, x8]
   4bed4:	add	w9, w22, #0x1
   4bed8:	mov	w0, w22
   4bedc:	strh	w9, [x27, x8]
   4bee0:	bl	4bf9c <ZSTD_decompressStream_simpleArgs@@Base+0xb0c>
   4bee4:	sub	w8, w19, w0
   4bee8:	sturb	w8, [x26, #-1]
   4beec:	lsl	w8, w22, w8
   4bef0:	sub	w8, w8, w23
   4bef4:	lsl	x9, x28, #2
   4bef8:	sturh	w8, [x26, #-4]
   4befc:	ldr	w8, [x20, x9]
   4bf00:	add	x24, x24, #0x1
   4bf04:	cmp	x24, x25
   4bf08:	sturb	w8, [x26, #-2]
   4bf0c:	ldr	w8, [x21, x9]
   4bf10:	str	w8, [x26], #8
   4bf14:	b.cc	4bec8 <ZSTD_decompressStream_simpleArgs@@Base+0xa38>  // b.lo, b.ul, b.last
   4bf18:	ldp	x20, x19, [sp, #192]
   4bf1c:	ldp	x22, x21, [sp, #176]
   4bf20:	ldp	x24, x23, [sp, #160]
   4bf24:	ldp	x26, x25, [sp, #144]
   4bf28:	ldp	x28, x27, [sp, #128]
   4bf2c:	ldp	x29, x30, [sp, #112]
   4bf30:	add	sp, sp, #0xd0
   4bf34:	ret
   4bf38:	sub	w10, w19, #0x1
   4bf3c:	mov	w15, #0x10000               	// #65536
   4bf40:	lsl	w10, w15, w10
   4bf44:	mov	x13, xzr
   4bf48:	mov	w14, w11
   4bf4c:	mov	w12, #0x1                   	// #1
   4bf50:	asr	w15, w10, #16
   4bf54:	add	x16, sp, #0x4
   4bf58:	mov	w10, w9
   4bf5c:	b	4bf7c <ZSTD_decompressStream_simpleArgs@@Base+0xaec>
   4bf60:	cmp	w15, w18
   4bf64:	and	w17, w18, #0xffff
   4bf68:	csel	w12, w12, wzr, gt
   4bf6c:	strh	w17, [x16, x13, lsl #1]
   4bf70:	add	x13, x13, #0x1
   4bf74:	cmp	x14, x13
   4bf78:	b.eq	4be4c <ZSTD_decompressStream_simpleArgs@@Base+0x9bc>  // b.none
   4bf7c:	ldrsh	w18, [x1, x13, lsl #1]
   4bf80:	cmn	w18, #0x1
   4bf84:	b.ne	4bf60 <ZSTD_decompressStream_simpleArgs@@Base+0xad0>  // b.any
   4bf88:	add	x17, x8, w10, uxtw #3
   4bf8c:	sub	w10, w10, #0x1
   4bf90:	str	w13, [x17, #4]
   4bf94:	mov	w17, #0x1                   	// #1
   4bf98:	b	4bf6c <ZSTD_decompressStream_simpleArgs@@Base+0xadc>
   4bf9c:	clz	w8, w0
   4bfa0:	eor	w0, w8, #0x1f
   4bfa4:	ret
   4bfa8:	sub	sp, sp, #0x80
   4bfac:	stp	x29, x30, [sp, #48]
   4bfb0:	stp	x26, x25, [sp, #64]
   4bfb4:	stp	x24, x23, [sp, #80]
   4bfb8:	stp	x22, x21, [sp, #96]
   4bfbc:	stp	x20, x19, [sp, #112]
   4bfc0:	add	x29, sp, #0x30
   4bfc4:	cbz	x3, 4c1a8 <ZSTD_decompressStream_simpleArgs@@Base+0xd18>
   4bfc8:	mov	x20, x0
   4bfcc:	mov	x0, x2
   4bfd0:	ldrb	w23, [x0], #1
   4bfd4:	mov	x22, x3
   4bfd8:	mov	x19, x2
   4bfdc:	mov	x21, x1
   4bfe0:	cbz	w23, 4c160 <ZSTD_decompressStream_simpleArgs@@Base+0xcd0>
   4bfe4:	sxtb	w8, w23
   4bfe8:	tbnz	w8, #31, 4c174 <ZSTD_decompressStream_simpleArgs@@Base+0xce4>
   4bfec:	add	x24, x19, x22
   4bff0:	add	x22, x0, #0x1
   4bff4:	cmp	x22, x24
   4bff8:	str	w23, [x21]
   4bffc:	b.hi	4c1a8 <ZSTD_decompressStream_simpleArgs@@Base+0xd18>  // b.pmore
   4c000:	mov	w8, #0x70ac                	// #28844
   4c004:	add	x25, x20, x8
   4c008:	ldr	w8, [x25]
   4c00c:	ldr	w9, [x25, #192]
   4c010:	ldrb	w26, [x0]
   4c014:	adrp	x7, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c018:	str	w8, [sp, #16]
   4c01c:	str	w9, [sp, #24]
   4c020:	adrp	x8, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c024:	adrp	x9, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c028:	lsr	w2, w26, #6
   4c02c:	add	x0, x20, #0x20
   4c030:	sub	x6, x24, x22
   4c034:	add	x8, x8, #0x520
   4c038:	add	x9, x9, #0x490
   4c03c:	add	x7, x7, #0x400
   4c040:	mov	w3, #0x23                  	// #35
   4c044:	mov	w4, #0x9                   	// #9
   4c048:	mov	x1, x20
   4c04c:	mov	x5, x22
   4c050:	str	w23, [sp, #32]
   4c054:	stp	x9, x8, [sp]
   4c058:	bl	4c1e0 <ZSTD_decompressStream_simpleArgs@@Base+0xd50>
   4c05c:	mov	x21, x0
   4c060:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4c064:	cmp	w0, #0x0
   4c068:	add	x9, x22, x21
   4c06c:	cset	w8, eq  // eq = none
   4c070:	csel	x21, x9, x22, eq  // eq = none
   4c074:	cbnz	w0, 4c154 <ZSTD_decompressStream_simpleArgs@@Base+0xcc4>
   4c078:	ldr	w9, [x25]
   4c07c:	ldr	w10, [x25, #192]
   4c080:	mov	w8, #0x1028                	// #4136
   4c084:	add	x0, x20, x8
   4c088:	str	w9, [sp, #16]
   4c08c:	adrp	x8, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c090:	adrp	x9, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c094:	adrp	x7, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c098:	ubfx	w2, w26, #4, #2
   4c09c:	add	x1, x20, #0x10
   4c0a0:	sub	x6, x24, x21
   4c0a4:	add	x8, x8, #0x828
   4c0a8:	add	x9, x9, #0x7a8
   4c0ac:	add	x7, x7, #0x728
   4c0b0:	mov	w3, #0x1f                  	// #31
   4c0b4:	mov	w4, #0x8                   	// #8
   4c0b8:	mov	x5, x21
   4c0bc:	str	w23, [sp, #32]
   4c0c0:	str	w10, [sp, #24]
   4c0c4:	stp	x9, x8, [sp]
   4c0c8:	bl	4c1e0 <ZSTD_decompressStream_simpleArgs@@Base+0xd50>
   4c0cc:	mov	x22, x0
   4c0d0:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4c0d4:	cmp	w0, #0x0
   4c0d8:	add	x9, x21, x22
   4c0dc:	cset	w8, eq  // eq = none
   4c0e0:	csel	x21, x9, x21, eq  // eq = none
   4c0e4:	cbnz	w0, 4c154 <ZSTD_decompressStream_simpleArgs@@Base+0xcc4>
   4c0e8:	ldr	w9, [x25]
   4c0ec:	ldr	w10, [x25, #192]
   4c0f0:	mov	w8, #0x1830                	// #6192
   4c0f4:	add	x0, x20, x8
   4c0f8:	str	w9, [sp, #16]
   4c0fc:	adrp	x8, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c100:	adrp	x9, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c104:	adrp	x7, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c108:	ubfx	w2, w26, #2, #2
   4c10c:	add	x1, x20, #0x8
   4c110:	sub	x6, x24, x21
   4c114:	add	x8, x8, #0xad8
   4c118:	add	x9, x9, #0xa04
   4c11c:	add	x7, x7, #0x930
   4c120:	mov	w3, #0x34                  	// #52
   4c124:	mov	w4, #0x9                   	// #9
   4c128:	mov	x5, x21
   4c12c:	str	w23, [sp, #32]
   4c130:	str	w10, [sp, #24]
   4c134:	stp	x9, x8, [sp]
   4c138:	bl	4c1e0 <ZSTD_decompressStream_simpleArgs@@Base+0xd50>
   4c13c:	mov	x20, x0
   4c140:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4c144:	cmp	w0, #0x0
   4c148:	add	x9, x21, x20
   4c14c:	cset	w8, eq  // eq = none
   4c150:	csel	x21, x9, x21, eq  // eq = none
   4c154:	cbz	w8, 4c198 <ZSTD_decompressStream_simpleArgs@@Base+0xd08>
   4c158:	sub	x0, x21, x19
   4c15c:	b	4c1ac <ZSTD_decompressStream_simpleArgs@@Base+0xd1c>
   4c160:	cmp	x22, #0x1
   4c164:	mov	x8, #0xffffffffffffffb8    	// #-72
   4c168:	str	wzr, [x21]
   4c16c:	csinc	x0, x8, xzr, ne  // ne = any
   4c170:	b	4c1ac <ZSTD_decompressStream_simpleArgs@@Base+0xd1c>
   4c174:	cmp	w23, #0xff
   4c178:	b.eq	4c1a0 <ZSTD_decompressStream_simpleArgs@@Base+0xd10>  // b.none
   4c17c:	cmp	x22, #0x2
   4c180:	b.lt	4c1a8 <ZSTD_decompressStream_simpleArgs@@Base+0xd18>  // b.tstop
   4c184:	ldrb	w8, [x19, #1]
   4c188:	add	x0, x19, #0x2
   4c18c:	bfi	w8, w23, #8, #8
   4c190:	sub	w23, w8, #0x8, lsl #12
   4c194:	b	4bfec <ZSTD_decompressStream_simpleArgs@@Base+0xb5c>
   4c198:	mov	x0, #0xffffffffffffffec    	// #-20
   4c19c:	b	4c1ac <ZSTD_decompressStream_simpleArgs@@Base+0xd1c>
   4c1a0:	cmp	x22, #0x3
   4c1a4:	b.ge	4c1c8 <ZSTD_decompressStream_simpleArgs@@Base+0xd38>  // b.tcont
   4c1a8:	mov	x0, #0xffffffffffffffb8    	// #-72
   4c1ac:	ldp	x20, x19, [sp, #112]
   4c1b0:	ldp	x22, x21, [sp, #96]
   4c1b4:	ldp	x24, x23, [sp, #80]
   4c1b8:	ldp	x26, x25, [sp, #64]
   4c1bc:	ldp	x29, x30, [sp, #48]
   4c1c0:	add	sp, sp, #0x80
   4c1c4:	ret
   4c1c8:	add	x24, x19, #0x3
   4c1cc:	bl	4bdf0 <ZSTD_decompressStream_simpleArgs@@Base+0x960>
   4c1d0:	mov	w8, #0x7f00                	// #32512
   4c1d4:	add	w23, w8, w0, uxth
   4c1d8:	mov	x0, x24
   4c1dc:	b	4bfec <ZSTD_decompressStream_simpleArgs@@Base+0xb5c>
   4c1e0:	sub	sp, sp, #0xc0
   4c1e4:	stp	x29, x30, [sp, #128]
   4c1e8:	add	x29, sp, #0x80
   4c1ec:	cmp	w2, #0x3
   4c1f0:	stp	x24, x23, [sp, #144]
   4c1f4:	stp	x22, x21, [sp, #160]
   4c1f8:	stp	x20, x19, [sp, #176]
   4c1fc:	stur	w3, [x29, #-4]
   4c200:	b.hi	4c244 <ZSTD_decompressStream_simpleArgs@@Base+0xdb4>  // b.pmore
   4c204:	ldr	x24, [x29, #64]
   4c208:	adrp	x9, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4c20c:	mov	w8, w2
   4c210:	add	x9, x9, #0x3f4
   4c214:	adr	x10, 4c234 <ZSTD_decompressStream_simpleArgs@@Base+0xda4>
   4c218:	ldrb	w11, [x9, x8]
   4c21c:	add	x10, x10, x11, lsl #2
   4c220:	mov	x22, x7
   4c224:	mov	w23, w4
   4c228:	mov	x19, x1
   4c22c:	mov	x21, x0
   4c230:	br	x10
   4c234:	ldr	x8, [x29, #72]
   4c238:	mov	x20, xzr
   4c23c:	str	x8, [x19]
   4c240:	b	4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>
   4c244:	mov	x20, #0xffffffffffffffff    	// #-1
   4c248:	b	4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>
   4c24c:	cbz	x6, 4c340 <ZSTD_decompressStream_simpleArgs@@Base+0xeb0>
   4c250:	ldrb	w8, [x5]
   4c254:	cmp	w8, w3
   4c258:	b.hi	4c320 <ZSTD_decompressStream_simpleArgs@@Base+0xe90>  // b.pmore
   4c25c:	lsl	x8, x8, #2
   4c260:	ldr	w1, [x22, x8]
   4c264:	ldr	w2, [x24, x8]
   4c268:	mov	x0, x21
   4c26c:	bl	4c560 <ZSTD_decompressBlock@@Base+0x74>
   4c270:	str	x21, [x19]
   4c274:	mov	w20, #0x1                   	// #1
   4c278:	b	4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>
   4c27c:	add	x0, sp, #0xc
   4c280:	sub	x1, x29, #0x4
   4c284:	sub	x2, x29, #0x8
   4c288:	mov	x3, x5
   4c28c:	mov	x4, x6
   4c290:	bl	4c70 <ZSTD_initDStream_usingDDict@plt+0x160>
   4c294:	mov	x20, x0
   4c298:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4c29c:	cbnz	w0, 4c320 <ZSTD_decompressStream_simpleArgs@@Base+0xe90>
   4c2a0:	ldur	w5, [x29, #-8]
   4c2a4:	cmp	w5, w23
   4c2a8:	b.hi	4c320 <ZSTD_decompressStream_simpleArgs@@Base+0xe90>  // b.pmore
   4c2ac:	ldur	w2, [x29, #-4]
   4c2b0:	add	x1, sp, #0xc
   4c2b4:	mov	x0, x21
   4c2b8:	mov	x3, x22
   4c2bc:	mov	x4, x24
   4c2c0:	bl	4be04 <ZSTD_decompressStream_simpleArgs@@Base+0x974>
   4c2c4:	str	x21, [x19]
   4c2c8:	b	4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>
   4c2cc:	ldr	w8, [x29, #80]
   4c2d0:	cbz	w8, 4c320 <ZSTD_decompressStream_simpleArgs@@Base+0xe90>
   4c2d4:	ldr	w8, [x29, #88]
   4c2d8:	mov	x20, xzr
   4c2dc:	cbz	w8, 4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>
   4c2e0:	ldr	w8, [x29, #96]
   4c2e4:	cmp	w8, #0x19
   4c2e8:	b.lt	4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>  // b.tstop
   4c2ec:	ldr	x9, [x19]
   4c2f0:	mov	w10, #0x1                   	// #1
   4c2f4:	lsl	w10, w10, w23
   4c2f8:	add	w10, w10, #0x1
   4c2fc:	mov	x8, xzr
   4c300:	sbfiz	x10, x10, #3, #32
   4c304:	add	x11, x9, x8
   4c308:	add	x8, x8, #0x40
   4c30c:	cmp	x8, x10
   4c310:	prfm	pldl2keep, [x11]
   4c314:	b.cc	4c304 <ZSTD_decompressStream_simpleArgs@@Base+0xe74>  // b.lo, b.ul, b.last
   4c318:	mov	x20, xzr
   4c31c:	b	4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>
   4c320:	mov	x20, #0xffffffffffffffec    	// #-20
   4c324:	mov	x0, x20
   4c328:	ldp	x20, x19, [sp, #176]
   4c32c:	ldp	x22, x21, [sp, #160]
   4c330:	ldp	x24, x23, [sp, #144]
   4c334:	ldp	x29, x30, [sp, #128]
   4c338:	add	sp, sp, #0xc0
   4c33c:	ret
   4c340:	mov	x20, #0xffffffffffffffb8    	// #-72
   4c344:	b	4c324 <ZSTD_decompressStream_simpleArgs@@Base+0xe94>
   4c348:	sub	sp, sp, #0x70
   4c34c:	lsr	x8, x4, #17
   4c350:	stp	x29, x30, [sp, #16]
   4c354:	stp	x28, x27, [sp, #32]
   4c358:	stp	x26, x25, [sp, #48]
   4c35c:	stp	x24, x23, [sp, #64]
   4c360:	stp	x22, x21, [sp, #80]
   4c364:	stp	x20, x19, [sp, #96]
   4c368:	add	x29, sp, #0x10
   4c36c:	cbz	x8, 4c378 <ZSTD_decompressStream_simpleArgs@@Base+0xee8>
   4c370:	mov	x23, #0xffffffffffffffb8    	// #-72
   4c374:	b	4c460 <ZSTD_decompressStream_simpleArgs@@Base+0xfd0>
   4c378:	mov	x19, x2
   4c37c:	mov	x20, x1
   4c380:	mov	x1, x3
   4c384:	mov	x2, x4
   4c388:	mov	w22, w5
   4c38c:	mov	x24, x4
   4c390:	mov	x25, x3
   4c394:	mov	x21, x0
   4c398:	bl	4baa8 <ZSTD_decompressStream_simpleArgs@@Base+0x618>
   4c39c:	mov	x23, x0
   4c3a0:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4c3a4:	add	x8, x25, x23
   4c3a8:	cmp	w0, #0x0
   4c3ac:	csel	x25, x8, x25, eq  // eq = none
   4c3b0:	csel	x8, x23, xzr, eq  // eq = none
   4c3b4:	cbnz	w0, 4c460 <ZSTD_decompressStream_simpleArgs@@Base+0xfd0>
   4c3b8:	mov	w9, #0x716c                	// #29036
   4c3bc:	add	x27, x21, x9
   4c3c0:	ldr	w28, [x27]
   4c3c4:	sub	x26, x24, x8
   4c3c8:	sub	x1, x29, #0x4
   4c3cc:	mov	x0, x21
   4c3d0:	mov	x2, x25
   4c3d4:	mov	x3, x26
   4c3d8:	bl	4bfa8 <ZSTD_decompressStream_simpleArgs@@Base+0xb18>
   4c3dc:	mov	x23, x0
   4c3e0:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4c3e4:	cbnz	w0, 4c460 <ZSTD_decompressStream_simpleArgs@@Base+0xfd0>
   4c3e8:	add	x24, x25, x23
   4c3ec:	sub	x23, x26, x23
   4c3f0:	cbnz	w28, 4c430 <ZSTD_decompressStream_simpleArgs@@Base+0xfa0>
   4c3f4:	cbz	w22, 4c40c <ZSTD_decompressStream_simpleArgs@@Base+0xf7c>
   4c3f8:	ldr	x8, [x21, #28792]
   4c3fc:	mov	w9, #0x1                   	// #1
   4c400:	movk	w9, #0x100, lsl #16
   4c404:	cmp	x8, x9
   4c408:	b.cc	4c42c <ZSTD_decompressStream_simpleArgs@@Base+0xf9c>  // b.lo, b.ul, b.last
   4c40c:	ldur	w8, [x29, #-4]
   4c410:	cmp	w8, #0x5
   4c414:	b.lt	4c42c <ZSTD_decompressStream_simpleArgs@@Base+0xf9c>  // b.tstop
   4c418:	ldr	x0, [x21, #16]
   4c41c:	bl	4c484 <ZSTD_decompressStream_simpleArgs@@Base+0xff4>
   4c420:	cmp	w0, #0x6
   4c424:	cset	w28, hi  // hi = pmore
   4c428:	b	4c430 <ZSTD_decompressStream_simpleArgs@@Base+0xfa0>
   4c42c:	mov	w28, wzr
   4c430:	str	wzr, [x27]
   4c434:	ldur	w5, [x29, #-4]
   4c438:	mov	x0, x21
   4c43c:	mov	x1, x20
   4c440:	mov	x2, x19
   4c444:	mov	x3, x24
   4c448:	mov	x4, x23
   4c44c:	cbz	w28, 4c458 <ZSTD_decompressStream_simpleArgs@@Base+0xfc8>
   4c450:	bl	4c4c4 <ZSTD_decompressStream_simpleArgs@@Base+0x1034>
   4c454:	b	4c45c <ZSTD_decompressStream_simpleArgs@@Base+0xfcc>
   4c458:	bl	4c4d8 <ZSTD_decompressStream_simpleArgs@@Base+0x1048>
   4c45c:	mov	x23, x0
   4c460:	mov	x0, x23
   4c464:	ldp	x20, x19, [sp, #96]
   4c468:	ldp	x22, x21, [sp, #80]
   4c46c:	ldp	x24, x23, [sp, #64]
   4c470:	ldp	x26, x25, [sp, #48]
   4c474:	ldp	x28, x27, [sp, #32]
   4c478:	ldp	x29, x30, [sp, #16]
   4c47c:	add	sp, sp, #0x70
   4c480:	ret
   4c484:	ldr	w9, [x0, #4]
   4c488:	mov	w8, wzr
   4c48c:	add	x10, x0, #0x8
   4c490:	mov	w11, #0x1                   	// #1
   4c494:	sub	w12, w11, #0x1
   4c498:	add	x12, x10, w12, uxtw #3
   4c49c:	ldrb	w12, [x12, #2]
   4c4a0:	lsr	w13, w11, w9
   4c4a4:	add	w11, w11, #0x1
   4c4a8:	cmp	w12, #0x16
   4c4ac:	cinc	w8, w8, hi  // hi = pmore
   4c4b0:	cbz	w13, 4c494 <ZSTD_decompressStream_simpleArgs@@Base+0x1004>
   4c4b4:	mov	w10, #0x8                   	// #8
   4c4b8:	sub	w9, w10, w9
   4c4bc:	lsl	w0, w8, w9
   4c4c0:	ret
   4c4c4:	stp	x29, x30, [sp, #-16]!
   4c4c8:	mov	x29, sp
   4c4cc:	bl	4c578 <ZSTD_decompressBlock@@Base+0x8c>
   4c4d0:	ldp	x29, x30, [sp], #16
   4c4d4:	ret
   4c4d8:	stp	x29, x30, [sp, #-16]!
   4c4dc:	mov	x29, sp
   4c4e0:	bl	4d938 <ZSTD_decompressBlock@@Base+0x144c>
   4c4e4:	ldp	x29, x30, [sp], #16
   4c4e8:	ret

000000000004c4ec <ZSTD_decompressBlock@@Base>:
   4c4ec:	stp	x29, x30, [sp, #-64]!
   4c4f0:	str	x23, [sp, #16]
   4c4f4:	stp	x22, x21, [sp, #32]
   4c4f8:	stp	x20, x19, [sp, #48]
   4c4fc:	mov	x29, sp
   4c500:	mov	x19, x4
   4c504:	mov	x20, x3
   4c508:	mov	x21, x2
   4c50c:	mov	x22, x1
   4c510:	mov	x23, x0
   4c514:	bl	492f0 <ZSTD_decompressBound@@Base+0x84>
   4c518:	mov	x0, x23
   4c51c:	mov	x1, x22
   4c520:	mov	x2, x21
   4c524:	mov	x3, x20
   4c528:	mov	x4, x19
   4c52c:	mov	w5, wzr
   4c530:	bl	4c348 <ZSTD_decompressStream_simpleArgs@@Base+0xeb8>
   4c534:	add	x8, x22, x0
   4c538:	str	x8, [x23, #28744]
   4c53c:	ldp	x20, x19, [sp, #48]
   4c540:	ldp	x22, x21, [sp, #32]
   4c544:	ldr	x23, [sp, #16]
   4c548:	ldp	x29, x30, [sp], #64
   4c54c:	ret
   4c550:	ldr	w0, [x0]
   4c554:	ret
   4c558:	ldrh	w0, [x0]
   4c55c:	ret
   4c560:	str	xzr, [x0]
   4c564:	strb	wzr, [x0, #11]
   4c568:	strh	wzr, [x0, #8]
   4c56c:	strb	w2, [x0, #10]
   4c570:	str	w1, [x0, #12]
   4c574:	ret
   4c578:	stp	x29, x30, [sp, #-96]!
   4c57c:	stp	x28, x27, [sp, #16]
   4c580:	stp	x26, x25, [sp, #32]
   4c584:	stp	x24, x23, [sp, #48]
   4c588:	stp	x22, x21, [sp, #64]
   4c58c:	stp	x20, x19, [sp, #80]
   4c590:	mov	x29, sp
   4c594:	sub	sp, sp, #0x1f0
   4c598:	ldr	x8, [x0, #28952]
   4c59c:	mov	x20, x1
   4c5a0:	add	x28, x1, x2
   4c5a4:	stur	x8, [x29, #-64]
   4c5a8:	ldr	x9, [x0, #28984]
   4c5ac:	add	x8, x8, x9
   4c5b0:	str	x8, [sp, #160]
   4c5b4:	cbz	w5, 4c8b4 <ZSTD_decompressBlock@@Base+0x3c8>
   4c5b8:	ldr	x9, [x0, #28760]
   4c5bc:	ldr	x22, [x0, #28752]
   4c5c0:	ldr	x23, [x0, #28768]
   4c5c4:	mov	w10, #0x1                   	// #1
   4c5c8:	str	x9, [sp, #128]
   4c5cc:	mov	w9, #0x70ac                	// #28844
   4c5d0:	add	x11, sp, #0xa8
   4c5d4:	str	w10, [x0, x9]
   4c5d8:	mov	w10, #0x683c                	// #26684
   4c5dc:	mov	w24, w5
   4c5e0:	mov	x21, x0
   4c5e4:	mov	x8, xzr
   4c5e8:	add	x9, x11, #0x58
   4c5ec:	add	x10, x0, x10
   4c5f0:	ldr	w11, [x10, x8, lsl #2]
   4c5f4:	str	x11, [x9, x8, lsl #3]
   4c5f8:	add	x8, x8, #0x1
   4c5fc:	cmp	x8, #0x3
   4c600:	b.ne	4c5f0 <ZSTD_decompressBlock@@Base+0x104>  // b.any
   4c604:	cmp	w24, #0x4
   4c608:	mov	w8, #0x4                   	// #4
   4c60c:	sub	x9, x20, x22
   4c610:	add	x0, sp, #0xa8
   4c614:	mov	x1, x3
   4c618:	mov	x2, x4
   4c61c:	csel	w25, w24, w8, lt  // lt = tstop
   4c620:	stp	x23, x9, [sp, #288]
   4c624:	str	x22, [sp, #280]
   4c628:	add	x19, sp, #0xa8
   4c62c:	bl	4d1a4 <ZSTD_decompressBlock@@Base+0xcb8>
   4c630:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4c634:	cbnz	w0, 4c8a0 <ZSTD_decompressBlock@@Base+0x3b4>
   4c638:	stp	x25, x20, [sp, #16]
   4c63c:	ldr	x2, [x21]
   4c640:	add	x0, x19, #0x28
   4c644:	add	x1, sp, #0xa8
   4c648:	str	x23, [sp, #64]
   4c64c:	str	x22, [sp, #144]
   4c650:	bl	4d308 <ZSTD_decompressBlock@@Base+0xe1c>
   4c654:	ldr	x2, [x21, #16]
   4c658:	add	x0, x19, #0x38
   4c65c:	add	x1, sp, #0xa8
   4c660:	bl	4d308 <ZSTD_decompressBlock@@Base+0xe1c>
   4c664:	ldr	x2, [x21, #8]
   4c668:	add	x0, x19, #0x48
   4c66c:	add	x1, sp, #0xa8
   4c670:	str	x21, [sp, #8]
   4c674:	bl	4d308 <ZSTD_decompressBlock@@Base+0xe1c>
   4c678:	add	x0, sp, #0xa8
   4c67c:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4c680:	cmp	w24, #0x0
   4c684:	cset	w8, gt
   4c688:	cmp	w24, #0x1
   4c68c:	mov	w23, wzr
   4c690:	str	x28, [sp, #40]
   4c694:	str	w24, [sp, #140]
   4c698:	b.lt	4c898 <ZSTD_decompressBlock@@Base+0x3ac>  // b.tstop
   4c69c:	ldr	x9, [sp, #16]
   4c6a0:	cmp	w0, #0x2
   4c6a4:	b.hi	4c898 <ZSTD_decompressBlock@@Base+0x3ac>  // b.pmore
   4c6a8:	sub	x8, x29, #0xc0
   4c6ac:	mov	x23, xzr
   4c6b0:	sxtw	x19, w9
   4c6b4:	add	x22, x8, #0x10
   4c6b8:	add	x24, sp, #0xa8
   4c6bc:	ldp	x9, x8, [sp, #208]
   4c6c0:	ldp	x11, x10, [sp, #240]
   4c6c4:	ldp	x13, x12, [sp, #224]
   4c6c8:	add	x9, x8, x9, lsl #3
   4c6cc:	add	x10, x10, x11, lsl #3
   4c6d0:	add	x8, x12, x13, lsl #3
   4c6d4:	ldrb	w20, [x9, #2]
   4c6d8:	ldrb	w21, [x10, #2]
   4c6dc:	ldrb	w25, [x8, #2]
   4c6e0:	ldr	w27, [x9, #4]
   4c6e4:	ldr	w28, [x10, #4]
   4c6e8:	cbz	w25, 4c704 <ZSTD_decompressBlock@@Base+0x218>
   4c6ec:	ldr	w26, [x8, #4]
   4c6f0:	add	x0, sp, #0xa8
   4c6f4:	mov	w1, w25
   4c6f8:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4c6fc:	add	x26, x0, x26
   4c700:	b	4c708 <ZSTD_decompressBlock@@Base+0x21c>
   4c704:	mov	x26, xzr
   4c708:	cmp	w25, #0x1
   4c70c:	add	w8, w21, w20
   4c710:	b.hi	4c734 <ZSTD_decompressBlock@@Base+0x248>  // b.pmore
   4c714:	cmp	w27, #0x0
   4c718:	cinc	x9, x26, eq  // eq = none
   4c71c:	cbz	x9, 4c758 <ZSTD_decompressBlock@@Base+0x26c>
   4c720:	cmp	x9, #0x3
   4c724:	b.ne	4c768 <ZSTD_decompressBlock@@Base+0x27c>  // b.any
   4c728:	ldr	x10, [sp, #256]
   4c72c:	sub	x10, x10, #0x1
   4c730:	b	4c770 <ZSTD_decompressBlock@@Base+0x284>
   4c734:	ldp	x9, x10, [sp, #256]
   4c738:	str	x26, [sp, #256]
   4c73c:	stp	x9, x10, [sp, #264]
   4c740:	add	w25, w8, w25
   4c744:	cbz	w21, 4c798 <ZSTD_decompressBlock@@Base+0x2ac>
   4c748:	add	x0, sp, #0xa8
   4c74c:	mov	w1, w21
   4c750:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4c754:	b	4c79c <ZSTD_decompressBlock@@Base+0x2b0>
   4c758:	ldr	x26, [sp, #256]
   4c75c:	add	w25, w8, w25
   4c760:	cbnz	w21, 4c748 <ZSTD_decompressBlock@@Base+0x25c>
   4c764:	b	4c798 <ZSTD_decompressBlock@@Base+0x2ac>
   4c768:	add	x10, x24, x9, lsl #3
   4c76c:	ldr	x10, [x10, #88]
   4c770:	cmp	x10, #0x0
   4c774:	cinc	x26, x10, eq  // eq = none
   4c778:	cmp	x9, #0x1
   4c77c:	b.eq	4c788 <ZSTD_decompressBlock@@Base+0x29c>  // b.none
   4c780:	ldr	x9, [sp, #264]
   4c784:	str	x9, [sp, #272]
   4c788:	ldr	x9, [sp, #256]
   4c78c:	stp	x26, x9, [sp, #256]
   4c790:	add	w25, w8, w25
   4c794:	cbnz	w21, 4c748 <ZSTD_decompressBlock@@Base+0x25c>
   4c798:	mov	x0, xzr
   4c79c:	cmp	w25, #0x1f
   4c7a0:	add	x21, x0, x28
   4c7a4:	b.cc	4c7b0 <ZSTD_decompressBlock@@Base+0x2c4>  // b.lo, b.ul, b.last
   4c7a8:	add	x0, sp, #0xa8
   4c7ac:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4c7b0:	cbz	w20, 4c7c4 <ZSTD_decompressBlock@@Base+0x2d8>
   4c7b4:	add	x0, sp, #0xa8
   4c7b8:	mov	w1, w20
   4c7bc:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4c7c0:	b	4c7c8 <ZSTD_decompressBlock@@Base+0x2dc>
   4c7c4:	mov	x0, xzr
   4c7c8:	ldr	x8, [sp, #296]
   4c7cc:	add	x20, x0, x27
   4c7d0:	ldp	x12, x11, [sp, #208]
   4c7d4:	add	x9, x24, #0x78
   4c7d8:	add	x8, x8, x20
   4c7dc:	add	x10, x24, #0x70
   4c7e0:	cmp	x26, x8
   4c7e4:	csel	x9, x9, x10, hi  // hi = pmore
   4c7e8:	add	x10, x8, x21
   4c7ec:	ldr	x9, [x9]
   4c7f0:	str	x10, [sp, #296]
   4c7f4:	add	x10, x11, x12, lsl #3
   4c7f8:	ldrb	w1, [x10, #3]
   4c7fc:	ldrh	w25, [x10]
   4c800:	add	x8, x9, x8
   4c804:	add	x0, sp, #0xa8
   4c808:	sub	x27, x8, x26
   4c80c:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4c810:	ldp	x9, x8, [sp, #240]
   4c814:	add	x10, x0, x25
   4c818:	str	x10, [sp, #208]
   4c81c:	add	x0, sp, #0xa8
   4c820:	add	x8, x8, x9, lsl #3
   4c824:	ldrb	w1, [x8, #3]
   4c828:	ldrh	w25, [x8]
   4c82c:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4c830:	ldp	x9, x8, [sp, #224]
   4c834:	add	x10, x0, x25
   4c838:	str	x10, [sp, #240]
   4c83c:	add	x0, sp, #0xa8
   4c840:	add	x8, x8, x9, lsl #3
   4c844:	ldrb	w1, [x8, #3]
   4c848:	ldrh	w25, [x8]
   4c84c:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4c850:	add	x8, x0, x25
   4c854:	add	x9, x27, x21
   4c858:	add	x0, sp, #0xa8
   4c85c:	stp	x20, x21, [x22, #-16]
   4c860:	stp	x26, x27, [x22]
   4c864:	str	x8, [sp, #224]
   4c868:	prfm	pldl1keep, [x27]
   4c86c:	prfum	pldl1keep, [x9, #-1]
   4c870:	add	x23, x23, #0x1
   4c874:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4c878:	cmp	x23, x19
   4c87c:	cset	w8, lt  // lt = tstop
   4c880:	b.ge	4c890 <ZSTD_decompressBlock@@Base+0x3a4>  // b.tcont
   4c884:	cmp	w0, #0x3
   4c888:	add	x22, x22, #0x20
   4c88c:	b.cc	4c6bc <ZSTD_decompressBlock@@Base+0x1d0>  // b.lo, b.ul, b.last
   4c890:	ldr	x28, [sp, #40]
   4c894:	ldr	w24, [sp, #140]
   4c898:	tbz	w8, #0, 4c920 <ZSTD_decompressBlock@@Base+0x434>
   4c89c:	ldr	x20, [sp, #24]
   4c8a0:	mov	w8, wzr
   4c8a4:	mov	x24, #0xffffffffffffffec    	// #-20
   4c8a8:	mov	x23, x20
   4c8ac:	cbnz	w8, 4c8b8 <ZSTD_decompressBlock@@Base+0x3cc>
   4c8b0:	b	4c8fc <ZSTD_decompressBlock@@Base+0x410>
   4c8b4:	mov	x23, x20
   4c8b8:	ldur	x1, [x29, #-64]
   4c8bc:	ldr	x8, [sp, #160]
   4c8c0:	sub	x19, x8, x1
   4c8c4:	sub	x8, x28, x23
   4c8c8:	cmp	x19, x8
   4c8cc:	b.ls	4c8e0 <ZSTD_decompressBlock@@Base+0x3f4>  // b.plast
   4c8d0:	mov	w8, wzr
   4c8d4:	mov	x24, #0xffffffffffffffba    	// #-70
   4c8d8:	cbnz	w8, 4c8f8 <ZSTD_decompressBlock@@Base+0x40c>
   4c8dc:	b	4c8fc <ZSTD_decompressBlock@@Base+0x410>
   4c8e0:	mov	x0, x23
   4c8e4:	mov	x2, x19
   4c8e8:	bl	4420 <memcpy@plt>
   4c8ec:	add	x23, x23, x19
   4c8f0:	mov	w8, #0x1                   	// #1
   4c8f4:	cbz	w8, 4c8fc <ZSTD_decompressBlock@@Base+0x410>
   4c8f8:	sub	x24, x23, x20
   4c8fc:	mov	x0, x24
   4c900:	add	sp, sp, #0x1f0
   4c904:	ldp	x20, x19, [sp, #80]
   4c908:	ldp	x22, x21, [sp, #64]
   4c90c:	ldp	x24, x23, [sp, #48]
   4c910:	ldp	x26, x25, [sp, #32]
   4c914:	ldp	x28, x27, [sp, #16]
   4c918:	ldp	x29, x30, [sp], #96
   4c91c:	ret
   4c920:	add	x0, sp, #0xa8
   4c924:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4c928:	cmp	w23, w24
   4c92c:	cset	w8, lt  // lt = tstop
   4c930:	b.ge	4ce44 <ZSTD_decompressBlock@@Base+0x958>  // b.tcont
   4c934:	cmp	w0, #0x2
   4c938:	b.hi	4ce44 <ZSTD_decompressBlock@@Base+0x958>  // b.pmore
   4c93c:	sub	x8, x28, #0x20
   4c940:	str	x8, [sp, #48]
   4c944:	ldr	x8, [sp, #24]
   4c948:	str	x8, [sp, #152]
   4c94c:	ldp	x9, x8, [sp, #208]
   4c950:	ldp	x11, x10, [sp, #240]
   4c954:	ldp	x13, x12, [sp, #224]
   4c958:	add	x9, x8, x9, lsl #3
   4c95c:	add	x10, x10, x11, lsl #3
   4c960:	add	x8, x12, x13, lsl #3
   4c964:	ldrb	w20, [x9, #2]
   4c968:	ldrb	w21, [x10, #2]
   4c96c:	ldrb	w26, [x8, #2]
   4c970:	ldr	w22, [x9, #4]
   4c974:	ldr	w24, [x10, #4]
   4c978:	cbz	w26, 4c994 <ZSTD_decompressBlock@@Base+0x4a8>
   4c97c:	ldr	w19, [x8, #4]
   4c980:	add	x0, sp, #0xa8
   4c984:	mov	w1, w26
   4c988:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4c98c:	add	x27, x0, x19
   4c990:	b	4c998 <ZSTD_decompressBlock@@Base+0x4ac>
   4c994:	mov	x27, xzr
   4c998:	cmp	w26, #0x1
   4c99c:	add	w8, w21, w20
   4c9a0:	b.hi	4c9c4 <ZSTD_decompressBlock@@Base+0x4d8>  // b.pmore
   4c9a4:	cmp	w22, #0x0
   4c9a8:	cinc	x9, x27, eq  // eq = none
   4c9ac:	cbz	x9, 4cc5c <ZSTD_decompressBlock@@Base+0x770>
   4c9b0:	cmp	x9, #0x3
   4c9b4:	b.ne	4cc6c <ZSTD_decompressBlock@@Base+0x780>  // b.any
   4c9b8:	ldr	x10, [sp, #256]
   4c9bc:	sub	x10, x10, #0x1
   4c9c0:	b	4cc78 <ZSTD_decompressBlock@@Base+0x78c>
   4c9c4:	ldp	x9, x10, [sp, #256]
   4c9c8:	str	x27, [sp, #256]
   4c9cc:	stp	x9, x10, [sp, #264]
   4c9d0:	add	w25, w8, w26
   4c9d4:	cbz	w21, 4cca0 <ZSTD_decompressBlock@@Base+0x7b4>
   4c9d8:	add	x0, sp, #0xa8
   4c9dc:	mov	w1, w21
   4c9e0:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4c9e4:	mov	x19, x0
   4c9e8:	cmp	w25, #0x1f
   4c9ec:	b.cc	4c9f8 <ZSTD_decompressBlock@@Base+0x50c>  // b.lo, b.ul, b.last
   4c9f0:	add	x0, sp, #0xa8
   4c9f4:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4c9f8:	add	x24, x19, x24
   4c9fc:	cbz	w20, 4ca10 <ZSTD_decompressBlock@@Base+0x524>
   4ca00:	add	x0, sp, #0xa8
   4ca04:	mov	w1, w20
   4ca08:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4ca0c:	b	4ca14 <ZSTD_decompressBlock@@Base+0x528>
   4ca10:	mov	x0, xzr
   4ca14:	ldr	x8, [sp, #296]
   4ca18:	ldp	x10, x9, [sp, #208]
   4ca1c:	add	x13, x0, x22
   4ca20:	add	x12, sp, #0xa8
   4ca24:	stp	x13, x27, [sp, #112]
   4ca28:	add	x13, x8, x13
   4ca2c:	add	x11, x12, #0x78
   4ca30:	add	x12, x12, #0x70
   4ca34:	cmp	x27, x13
   4ca38:	add	x8, x9, x10, lsl #3
   4ca3c:	str	x13, [sp, #104]
   4ca40:	add	x9, x13, x24
   4ca44:	csel	x10, x11, x12, hi  // hi = pmore
   4ca48:	ldr	x10, [x10]
   4ca4c:	str	x9, [sp, #296]
   4ca50:	ldrb	w1, [x8, #3]
   4ca54:	ldrh	w19, [x8]
   4ca58:	add	x0, sp, #0xa8
   4ca5c:	str	x10, [sp, #96]
   4ca60:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4ca64:	ldp	x9, x8, [sp, #240]
   4ca68:	add	x10, x0, x19
   4ca6c:	str	x10, [sp, #208]
   4ca70:	add	x0, sp, #0xa8
   4ca74:	add	x8, x8, x9, lsl #3
   4ca78:	ldrb	w1, [x8, #3]
   4ca7c:	ldrh	w19, [x8]
   4ca80:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4ca84:	ldp	x9, x8, [sp, #224]
   4ca88:	add	x10, x0, x19
   4ca8c:	str	x10, [sp, #240]
   4ca90:	add	x0, sp, #0xa8
   4ca94:	add	x8, x8, x9, lsl #3
   4ca98:	ldrb	w1, [x8, #3]
   4ca9c:	ldrh	w19, [x8]
   4caa0:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4caa4:	add	x8, x0, x19
   4caa8:	and	w9, w23, #0x3
   4caac:	str	x8, [sp, #224]
   4cab0:	sub	x8, x29, #0xc0
   4cab4:	add	x22, x8, x9, lsl #5
   4cab8:	mov	x8, x22
   4cabc:	ldr	x19, [x22]
   4cac0:	ldr	x26, [x8, #8]!
   4cac4:	mov	x9, x22
   4cac8:	mov	x10, x22
   4cacc:	str	x8, [sp, #88]
   4cad0:	ldr	x20, [x9, #16]!
   4cad4:	add	x27, x26, x19
   4cad8:	str	x9, [sp, #80]
   4cadc:	ldr	x8, [x10, #24]!
   4cae0:	ldr	x9, [sp, #152]
   4cae4:	ldur	x1, [x29, #-64]
   4cae8:	str	x10, [sp, #72]
   4caec:	ldr	x10, [sp, #48]
   4caf0:	stur	x9, [x29, #-16]
   4caf4:	add	x21, x9, x19
   4caf8:	add	x9, x9, x27
   4cafc:	cmp	x9, x10
   4cb00:	sub	x9, x21, x20
   4cb04:	stur	x9, [x29, #-24]
   4cb08:	b.hi	4cbc4 <ZSTD_decompressBlock@@Base+0x6d8>  // b.pmore
   4cb0c:	ldr	x9, [sp, #160]
   4cb10:	add	x25, x1, x19
   4cb14:	cmp	x25, x9
   4cb18:	b.hi	4cbc4 <ZSTD_decompressBlock@@Base+0x6d8>  // b.pmore
   4cb1c:	ldr	x0, [sp, #152]
   4cb20:	str	x24, [sp, #32]
   4cb24:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cb28:	cmp	x19, #0x11
   4cb2c:	b.cc	4cb90 <ZSTD_decompressBlock@@Base+0x6a4>  // b.lo, b.ul, b.last
   4cb30:	ldur	x28, [x29, #-64]
   4cb34:	ldr	x24, [sp, #152]
   4cb38:	sub	x19, x19, #0x10
   4cb3c:	add	x1, x28, #0x10
   4cb40:	add	x0, x24, #0x10
   4cb44:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cb48:	add	x0, x24, #0x20
   4cb4c:	add	x1, x28, #0x20
   4cb50:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cb54:	cmp	x19, #0x21
   4cb58:	b.lt	4cb90 <ZSTD_decompressBlock@@Base+0x6a4>  // b.tstop
   4cb5c:	ldr	x8, [sp, #152]
   4cb60:	add	x19, x28, #0x40
   4cb64:	add	x24, x8, #0x30
   4cb68:	sub	x1, x19, #0x10
   4cb6c:	mov	x0, x24
   4cb70:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cb74:	add	x0, x24, #0x10
   4cb78:	mov	x1, x19
   4cb7c:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cb80:	add	x24, x24, #0x20
   4cb84:	cmp	x24, x21
   4cb88:	add	x19, x19, #0x20
   4cb8c:	b.cc	4cb68 <ZSTD_decompressBlock@@Base+0x67c>  // b.lo, b.ul, b.last
   4cb90:	ldr	x8, [sp, #144]
   4cb94:	stur	x21, [x29, #-16]
   4cb98:	stur	x25, [x29, #-64]
   4cb9c:	sub	x8, x21, x8
   4cba0:	cmp	x20, x8
   4cba4:	b.ls	4cbf4 <ZSTD_decompressBlock@@Base+0x708>  // b.plast
   4cba8:	ldr	x8, [sp, #128]
   4cbac:	sub	x8, x21, x8
   4cbb0:	cmp	x20, x8
   4cbb4:	b.ls	4ccb0 <ZSTD_decompressBlock@@Base+0x7c4>  // b.plast
   4cbb8:	ldr	x28, [sp, #40]
   4cbbc:	mov	x27, #0xffffffffffffffec    	// #-20
   4cbc0:	b	4cda8 <ZSTD_decompressBlock@@Base+0x8bc>
   4cbc4:	ldp	x0, x4, [sp, #152]
   4cbc8:	ldr	x5, [sp, #144]
   4cbcc:	ldr	x6, [sp, #128]
   4cbd0:	ldr	x7, [sp, #64]
   4cbd4:	sub	x2, x29, #0x38
   4cbd8:	sub	x3, x29, #0x40
   4cbdc:	mov	x1, x28
   4cbe0:	stp	x19, x26, [x29, #-56]
   4cbe4:	stp	x20, x8, [x29, #-40]
   4cbe8:	bl	4d51c <ZSTD_decompressBlock@@Base+0x1030>
   4cbec:	mov	x27, x0
   4cbf0:	b	4cdac <ZSTD_decompressBlock@@Base+0x8c0>
   4cbf4:	ldr	x28, [sp, #40]
   4cbf8:	cmp	x20, #0x10
   4cbfc:	b.cc	4ccf8 <ZSTD_decompressBlock@@Base+0x80c>  // b.lo, b.ul, b.last
   4cc00:	ldp	x19, x20, [x29, #-24]
   4cc04:	mov	x0, x20
   4cc08:	mov	x1, x19
   4cc0c:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cc10:	add	x0, x20, #0x10
   4cc14:	add	x1, x19, #0x10
   4cc18:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cc1c:	cmp	x26, #0x21
   4cc20:	b.lt	4cda8 <ZSTD_decompressBlock@@Base+0x8bc>  // b.tstop
   4cc24:	add	x21, x20, x26
   4cc28:	add	x20, x20, #0x20
   4cc2c:	add	x19, x19, #0x30
   4cc30:	sub	x1, x19, #0x10
   4cc34:	mov	x0, x20
   4cc38:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cc3c:	add	x0, x20, #0x10
   4cc40:	mov	x1, x19
   4cc44:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cc48:	add	x20, x20, #0x20
   4cc4c:	cmp	x20, x21
   4cc50:	add	x19, x19, #0x20
   4cc54:	b.cc	4cc30 <ZSTD_decompressBlock@@Base+0x744>  // b.lo, b.ul, b.last
   4cc58:	b	4cda8 <ZSTD_decompressBlock@@Base+0x8bc>
   4cc5c:	ldr	x27, [sp, #256]
   4cc60:	add	w25, w8, w26
   4cc64:	cbnz	w21, 4c9d8 <ZSTD_decompressBlock@@Base+0x4ec>
   4cc68:	b	4cca0 <ZSTD_decompressBlock@@Base+0x7b4>
   4cc6c:	add	x10, sp, #0xa8
   4cc70:	add	x10, x10, x9, lsl #3
   4cc74:	ldr	x10, [x10, #88]
   4cc78:	cmp	x10, #0x0
   4cc7c:	cinc	x27, x10, eq  // eq = none
   4cc80:	cmp	x9, #0x1
   4cc84:	b.eq	4cc90 <ZSTD_decompressBlock@@Base+0x7a4>  // b.none
   4cc88:	ldr	x9, [sp, #264]
   4cc8c:	str	x9, [sp, #272]
   4cc90:	ldr	x9, [sp, #256]
   4cc94:	stp	x27, x9, [sp, #256]
   4cc98:	add	w25, w8, w26
   4cc9c:	cbnz	w21, 4c9d8 <ZSTD_decompressBlock@@Base+0x4ec>
   4cca0:	mov	x19, xzr
   4cca4:	cmp	w25, #0x1f
   4cca8:	b.cs	4c9f0 <ZSTD_decompressBlock@@Base+0x504>  // b.hs, b.nlast
   4ccac:	b	4c9f8 <ZSTD_decompressBlock@@Base+0x50c>
   4ccb0:	ldur	x8, [x29, #-24]
   4ccb4:	ldr	x24, [sp, #144]
   4ccb8:	ldr	x9, [sp, #64]
   4ccbc:	ldr	x28, [sp, #40]
   4ccc0:	sub	x19, x8, x24
   4ccc4:	add	x1, x9, x19
   4ccc8:	add	x8, x1, x26
   4cccc:	cmp	x8, x9
   4ccd0:	stur	x1, [x29, #-24]
   4ccd4:	b.ls	4cd48 <ZSTD_decompressBlock@@Base+0x85c>  // b.plast
   4ccd8:	neg	x2, x19
   4ccdc:	mov	x0, x21
   4cce0:	bl	4450 <memmove@plt>
   4cce4:	sub	x8, x21, x19
   4cce8:	add	x26, x19, x26
   4ccec:	stp	x24, x8, [x29, #-24]
   4ccf0:	cmp	x20, #0x10
   4ccf4:	b.cs	4cc00 <ZSTD_decompressBlock@@Base+0x714>  // b.hs, b.nlast
   4ccf8:	sub	x0, x29, #0x10
   4ccfc:	sub	x1, x29, #0x18
   4cd00:	mov	x2, x20
   4cd04:	bl	4d64c <ZSTD_decompressBlock@@Base+0x1160>
   4cd08:	cmp	x26, #0x9
   4cd0c:	b.cc	4cda8 <ZSTD_decompressBlock@@Base+0x8bc>  // b.lo, b.ul, b.last
   4cd10:	ldp	x21, x20, [x29, #-24]
   4cd14:	add	x8, x26, x20
   4cd18:	sub	x9, x20, x21
   4cd1c:	cmp	x9, #0xf
   4cd20:	sub	x24, x8, #0x8
   4cd24:	b.gt	4cd58 <ZSTD_decompressBlock@@Base+0x86c>
   4cd28:	mov	x0, x20
   4cd2c:	mov	x1, x21
   4cd30:	bl	4d920 <ZSTD_decompressBlock@@Base+0x1434>
   4cd34:	add	x20, x20, #0x8
   4cd38:	cmp	x20, x24
   4cd3c:	add	x21, x21, #0x8
   4cd40:	b.cc	4cd28 <ZSTD_decompressBlock@@Base+0x83c>  // b.lo, b.ul, b.last
   4cd44:	b	4cda8 <ZSTD_decompressBlock@@Base+0x8bc>
   4cd48:	mov	x0, x21
   4cd4c:	mov	x2, x26
   4cd50:	bl	4450 <memmove@plt>
   4cd54:	b	4cda8 <ZSTD_decompressBlock@@Base+0x8bc>
   4cd58:	mov	x0, x20
   4cd5c:	mov	x1, x21
   4cd60:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cd64:	add	x0, x20, #0x10
   4cd68:	add	x1, x21, #0x10
   4cd6c:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cd70:	cmp	x26, #0x29
   4cd74:	b.lt	4cda8 <ZSTD_decompressBlock@@Base+0x8bc>  // b.tstop
   4cd78:	add	x20, x20, #0x20
   4cd7c:	add	x19, x21, #0x30
   4cd80:	sub	x1, x19, #0x10
   4cd84:	mov	x0, x20
   4cd88:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cd8c:	add	x0, x20, #0x10
   4cd90:	mov	x1, x19
   4cd94:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cd98:	add	x20, x20, #0x20
   4cd9c:	cmp	x20, x24
   4cda0:	add	x19, x19, #0x20
   4cda4:	b.cc	4cd80 <ZSTD_decompressBlock@@Base+0x894>  // b.lo, b.ul, b.last
   4cda8:	ldr	x24, [sp, #32]
   4cdac:	mov	x0, x27
   4cdb0:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4cdb4:	cbz	w0, 4cdcc <ZSTD_decompressBlock@@Base+0x8e0>
   4cdb8:	mov	w8, wzr
   4cdbc:	str	x27, [sp, #56]
   4cdc0:	ldr	w24, [sp, #140]
   4cdc4:	cbnz	w8, 4ce20 <ZSTD_decompressBlock@@Base+0x934>
   4cdc8:	b	4d140 <ZSTD_decompressBlock@@Base+0xc54>
   4cdcc:	ldp	x9, x8, [sp, #96]
   4cdd0:	ldr	x10, [sp, #120]
   4cdd4:	add	x8, x9, x8
   4cdd8:	ldr	x9, [sp, #152]
   4cddc:	sub	x8, x8, x10
   4cde0:	add	x9, x9, x27
   4cde4:	str	x9, [sp, #152]
   4cde8:	add	x9, x8, x24
   4cdec:	prfm	pldl1keep, [x8]
   4cdf0:	prfum	pldl1keep, [x9, #-1]
   4cdf4:	ldr	x9, [sp, #112]
   4cdf8:	str	x9, [x22]
   4cdfc:	ldr	x9, [sp, #88]
   4ce00:	str	x24, [x9]
   4ce04:	ldr	x9, [sp, #80]
   4ce08:	str	x10, [x9]
   4ce0c:	ldr	x9, [sp, #72]
   4ce10:	str	x8, [x9]
   4ce14:	mov	w8, #0x1                   	// #1
   4ce18:	ldr	w24, [sp, #140]
   4ce1c:	cbz	w8, 4d140 <ZSTD_decompressBlock@@Base+0xc54>
   4ce20:	add	x0, sp, #0xa8
   4ce24:	add	w23, w23, #0x1
   4ce28:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4ce2c:	cmp	w23, w24
   4ce30:	cset	w8, lt  // lt = tstop
   4ce34:	b.ge	4ce4c <ZSTD_decompressBlock@@Base+0x960>  // b.tcont
   4ce38:	cmp	w0, #0x3
   4ce3c:	b.cc	4c94c <ZSTD_decompressBlock@@Base+0x460>  // b.lo, b.ul, b.last
   4ce40:	b	4ce4c <ZSTD_decompressBlock@@Base+0x960>
   4ce44:	ldr	x9, [sp, #24]
   4ce48:	str	x9, [sp, #152]
   4ce4c:	tbz	w8, #0, 4ce68 <ZSTD_decompressBlock@@Base+0x97c>
   4ce50:	ldr	x20, [sp, #24]
   4ce54:	ldr	x23, [sp, #152]
   4ce58:	mov	w8, wzr
   4ce5c:	mov	x24, #0xffffffffffffffec    	// #-20
   4ce60:	cbnz	w8, 4c8b8 <ZSTD_decompressBlock@@Base+0x3cc>
   4ce64:	b	4c8fc <ZSTD_decompressBlock@@Base+0x410>
   4ce68:	ldr	x8, [sp, #16]
   4ce6c:	sub	w22, w23, w8
   4ce70:	cmp	w22, w24
   4ce74:	b.ge	4d154 <ZSTD_decompressBlock@@Base+0xc68>  // b.tcont
   4ce78:	ldr	x24, [sp, #56]
   4ce7c:	ldr	x23, [sp, #152]
   4ce80:	sub	x8, x28, #0x20
   4ce84:	str	x8, [sp, #120]
   4ce88:	and	w8, w22, #0x3
   4ce8c:	sub	x9, x29, #0xc0
   4ce90:	add	x8, x9, x8, lsl #5
   4ce94:	ldp	x19, x26, [x8]
   4ce98:	ldp	x20, x8, [x8, #16]
   4ce9c:	ldr	x11, [sp, #120]
   4cea0:	ldur	x1, [x29, #-64]
   4cea4:	add	x27, x26, x19
   4cea8:	add	x21, x23, x19
   4ceac:	add	x10, x23, x27
   4ceb0:	sub	x9, x21, x20
   4ceb4:	cmp	x10, x11
   4ceb8:	stp	x9, x23, [x29, #-24]
   4cebc:	b.hi	4cf74 <ZSTD_decompressBlock@@Base+0xa88>  // b.pmore
   4cec0:	ldr	x9, [sp, #160]
   4cec4:	add	x25, x1, x19
   4cec8:	cmp	x25, x9
   4cecc:	b.hi	4cf74 <ZSTD_decompressBlock@@Base+0xa88>  // b.pmore
   4ced0:	mov	x0, x23
   4ced4:	str	x24, [sp, #56]
   4ced8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cedc:	cmp	x19, #0x11
   4cee0:	b.cc	4cf40 <ZSTD_decompressBlock@@Base+0xa54>  // b.lo, b.ul, b.last
   4cee4:	ldur	x28, [x29, #-64]
   4cee8:	add	x0, x23, #0x10
   4ceec:	mov	x24, x23
   4cef0:	sub	x19, x19, #0x10
   4cef4:	add	x1, x28, #0x10
   4cef8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cefc:	add	x0, x23, #0x20
   4cf00:	add	x1, x28, #0x20
   4cf04:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cf08:	cmp	x19, #0x21
   4cf0c:	b.lt	4cf40 <ZSTD_decompressBlock@@Base+0xa54>  // b.tstop
   4cf10:	add	x24, x23, #0x30
   4cf14:	add	x19, x28, #0x40
   4cf18:	sub	x1, x19, #0x10
   4cf1c:	mov	x0, x24
   4cf20:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cf24:	add	x0, x24, #0x10
   4cf28:	mov	x1, x19
   4cf2c:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cf30:	add	x24, x24, #0x20
   4cf34:	cmp	x24, x21
   4cf38:	add	x19, x19, #0x20
   4cf3c:	b.cc	4cf18 <ZSTD_decompressBlock@@Base+0xa2c>  // b.lo, b.ul, b.last
   4cf40:	ldr	x8, [sp, #144]
   4cf44:	stur	x21, [x29, #-16]
   4cf48:	stur	x25, [x29, #-64]
   4cf4c:	sub	x8, x21, x8
   4cf50:	cmp	x20, x8
   4cf54:	b.ls	4cfa8 <ZSTD_decompressBlock@@Base+0xabc>  // b.plast
   4cf58:	ldr	x8, [sp, #128]
   4cf5c:	sub	x8, x21, x8
   4cf60:	cmp	x20, x8
   4cf64:	b.ls	4d010 <ZSTD_decompressBlock@@Base+0xb24>  // b.plast
   4cf68:	ldr	x28, [sp, #40]
   4cf6c:	mov	x27, #0xffffffffffffffec    	// #-20
   4cf70:	b	4d108 <ZSTD_decompressBlock@@Base+0xc1c>
   4cf74:	ldr	x4, [sp, #160]
   4cf78:	ldr	x5, [sp, #144]
   4cf7c:	ldr	x6, [sp, #128]
   4cf80:	ldr	x7, [sp, #64]
   4cf84:	sub	x2, x29, #0x38
   4cf88:	sub	x3, x29, #0x40
   4cf8c:	mov	x0, x23
   4cf90:	mov	x1, x28
   4cf94:	stp	x19, x26, [x29, #-56]
   4cf98:	stp	x20, x8, [x29, #-40]
   4cf9c:	bl	4d51c <ZSTD_decompressBlock@@Base+0x1030>
   4cfa0:	mov	x27, x0
   4cfa4:	b	4d10c <ZSTD_decompressBlock@@Base+0xc20>
   4cfa8:	ldr	x28, [sp, #40]
   4cfac:	cmp	x20, #0x10
   4cfb0:	b.cc	4d058 <ZSTD_decompressBlock@@Base+0xb6c>  // b.lo, b.ul, b.last
   4cfb4:	ldp	x19, x20, [x29, #-24]
   4cfb8:	mov	x0, x20
   4cfbc:	mov	x1, x19
   4cfc0:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cfc4:	add	x0, x20, #0x10
   4cfc8:	add	x1, x19, #0x10
   4cfcc:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cfd0:	cmp	x26, #0x21
   4cfd4:	b.lt	4d108 <ZSTD_decompressBlock@@Base+0xc1c>  // b.tstop
   4cfd8:	add	x21, x20, x26
   4cfdc:	add	x20, x20, #0x20
   4cfe0:	add	x19, x19, #0x30
   4cfe4:	sub	x1, x19, #0x10
   4cfe8:	mov	x0, x20
   4cfec:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cff0:	add	x0, x20, #0x10
   4cff4:	mov	x1, x19
   4cff8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4cffc:	add	x20, x20, #0x20
   4d000:	cmp	x20, x21
   4d004:	add	x19, x19, #0x20
   4d008:	b.cc	4cfe4 <ZSTD_decompressBlock@@Base+0xaf8>  // b.lo, b.ul, b.last
   4d00c:	b	4d108 <ZSTD_decompressBlock@@Base+0xc1c>
   4d010:	ldur	x8, [x29, #-24]
   4d014:	ldr	x24, [sp, #144]
   4d018:	ldr	x9, [sp, #64]
   4d01c:	ldr	x28, [sp, #40]
   4d020:	sub	x19, x8, x24
   4d024:	add	x1, x9, x19
   4d028:	add	x8, x1, x26
   4d02c:	cmp	x8, x9
   4d030:	stur	x1, [x29, #-24]
   4d034:	b.ls	4d0a8 <ZSTD_decompressBlock@@Base+0xbbc>  // b.plast
   4d038:	neg	x2, x19
   4d03c:	mov	x0, x21
   4d040:	bl	4450 <memmove@plt>
   4d044:	sub	x8, x21, x19
   4d048:	add	x26, x19, x26
   4d04c:	stp	x24, x8, [x29, #-24]
   4d050:	cmp	x20, #0x10
   4d054:	b.cs	4cfb4 <ZSTD_decompressBlock@@Base+0xac8>  // b.hs, b.nlast
   4d058:	sub	x0, x29, #0x10
   4d05c:	sub	x1, x29, #0x18
   4d060:	mov	x2, x20
   4d064:	bl	4d64c <ZSTD_decompressBlock@@Base+0x1160>
   4d068:	cmp	x26, #0x9
   4d06c:	b.cc	4d108 <ZSTD_decompressBlock@@Base+0xc1c>  // b.lo, b.ul, b.last
   4d070:	ldp	x21, x20, [x29, #-24]
   4d074:	add	x8, x26, x20
   4d078:	sub	x9, x20, x21
   4d07c:	cmp	x9, #0xf
   4d080:	sub	x24, x8, #0x8
   4d084:	b.gt	4d0b8 <ZSTD_decompressBlock@@Base+0xbcc>
   4d088:	mov	x0, x20
   4d08c:	mov	x1, x21
   4d090:	bl	4d920 <ZSTD_decompressBlock@@Base+0x1434>
   4d094:	add	x20, x20, #0x8
   4d098:	cmp	x20, x24
   4d09c:	add	x21, x21, #0x8
   4d0a0:	b.cc	4d088 <ZSTD_decompressBlock@@Base+0xb9c>  // b.lo, b.ul, b.last
   4d0a4:	b	4d108 <ZSTD_decompressBlock@@Base+0xc1c>
   4d0a8:	mov	x0, x21
   4d0ac:	mov	x2, x26
   4d0b0:	bl	4450 <memmove@plt>
   4d0b4:	b	4d108 <ZSTD_decompressBlock@@Base+0xc1c>
   4d0b8:	mov	x0, x20
   4d0bc:	mov	x1, x21
   4d0c0:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d0c4:	add	x0, x20, #0x10
   4d0c8:	add	x1, x21, #0x10
   4d0cc:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d0d0:	cmp	x26, #0x29
   4d0d4:	b.lt	4d108 <ZSTD_decompressBlock@@Base+0xc1c>  // b.tstop
   4d0d8:	add	x20, x20, #0x20
   4d0dc:	add	x19, x21, #0x30
   4d0e0:	sub	x1, x19, #0x10
   4d0e4:	mov	x0, x20
   4d0e8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d0ec:	add	x0, x20, #0x10
   4d0f0:	mov	x1, x19
   4d0f4:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d0f8:	add	x20, x20, #0x20
   4d0fc:	cmp	x20, x24
   4d100:	add	x19, x19, #0x20
   4d104:	b.cc	4d0e0 <ZSTD_decompressBlock@@Base+0xbf4>  // b.lo, b.ul, b.last
   4d108:	ldr	x24, [sp, #56]
   4d10c:	mov	x0, x27
   4d110:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4d114:	cmp	w0, #0x0
   4d118:	add	x9, x23, x27
   4d11c:	cset	w8, eq  // eq = none
   4d120:	csel	x23, x9, x23, eq  // eq = none
   4d124:	csel	x24, x24, x27, eq  // eq = none
   4d128:	cbnz	w0, 4d198 <ZSTD_decompressBlock@@Base+0xcac>
   4d12c:	ldr	w8, [sp, #140]
   4d130:	add	w22, w22, #0x1
   4d134:	cmp	w22, w8
   4d138:	b.lt	4ce88 <ZSTD_decompressBlock@@Base+0x99c>  // b.tstop
   4d13c:	b	4d15c <ZSTD_decompressBlock@@Base+0xc70>
   4d140:	ldr	x20, [sp, #24]
   4d144:	ldr	x24, [sp, #56]
   4d148:	ldr	x23, [sp, #152]
   4d14c:	cbnz	w8, 4c8b8 <ZSTD_decompressBlock@@Base+0x3cc>
   4d150:	b	4c8fc <ZSTD_decompressBlock@@Base+0x410>
   4d154:	ldr	x24, [sp, #56]
   4d158:	ldr	x23, [sp, #152]
   4d15c:	ldr	x11, [sp, #8]
   4d160:	ldr	x20, [sp, #24]
   4d164:	mov	w9, #0x683c                	// #26684
   4d168:	add	x10, sp, #0xa8
   4d16c:	mov	x8, xzr
   4d170:	add	x9, x11, x9
   4d174:	add	x10, x10, #0x58
   4d178:	ldr	x11, [x10, x8, lsl #3]
   4d17c:	str	w11, [x9, x8, lsl #2]
   4d180:	add	x8, x8, #0x1
   4d184:	cmp	x8, #0x3
   4d188:	b.ne	4d178 <ZSTD_decompressBlock@@Base+0xc8c>  // b.any
   4d18c:	mov	w8, #0x1                   	// #1
   4d190:	cbnz	w8, 4c8b8 <ZSTD_decompressBlock@@Base+0x3cc>
   4d194:	b	4c8fc <ZSTD_decompressBlock@@Base+0x410>
   4d198:	ldr	x20, [sp, #24]
   4d19c:	cbz	w8, 4c8fc <ZSTD_decompressBlock@@Base+0x410>
   4d1a0:	b	4c8b8 <ZSTD_decompressBlock@@Base+0x3cc>
   4d1a4:	stp	x29, x30, [sp, #-48]!
   4d1a8:	stp	x20, x19, [sp, #32]
   4d1ac:	mov	x20, x0
   4d1b0:	str	x21, [sp, #16]
   4d1b4:	mov	x29, sp
   4d1b8:	cbz	x2, 4d200 <ZSTD_decompressBlock@@Base+0xd14>
   4d1bc:	mov	x19, x2
   4d1c0:	add	x8, x1, #0x8
   4d1c4:	cmp	x2, #0x8
   4d1c8:	stp	x1, x8, [x20, #24]
   4d1cc:	b.cc	4d214 <ZSTD_decompressBlock@@Base+0xd28>  // b.lo, b.ul, b.last
   4d1d0:	add	x21, x1, x19
   4d1d4:	sub	x0, x21, #0x8
   4d1d8:	str	x0, [x20, #16]
   4d1dc:	bl	4d400 <ZSTD_decompressBlock@@Base+0xf14>
   4d1e0:	str	x0, [x20]
   4d1e4:	ldurb	w0, [x21, #-1]
   4d1e8:	cbz	w0, 4d2d8 <ZSTD_decompressBlock@@Base+0xdec>
   4d1ec:	bl	4bf9c <ZSTD_decompressStream_simpleArgs@@Base+0xb0c>
   4d1f0:	mov	w8, #0x8                   	// #8
   4d1f4:	sub	w8, w8, w0
   4d1f8:	str	w8, [x20, #8]
   4d1fc:	b	4d2f4 <ZSTD_decompressBlock@@Base+0xe08>
   4d200:	movi	v0.2d, #0x0
   4d204:	str	xzr, [x20, #32]
   4d208:	stp	q0, q0, [x20]
   4d20c:	mov	x19, #0xffffffffffffffb8    	// #-72
   4d210:	b	4d2f4 <ZSTD_decompressBlock@@Base+0xe08>
   4d214:	ldr	x8, [x20, #24]
   4d218:	sub	x9, x19, #0x2
   4d21c:	cmp	x9, #0x5
   4d220:	str	x8, [x20, #16]
   4d224:	ldrb	w8, [x8]
   4d228:	str	x8, [x20]
   4d22c:	b.hi	4d2a4 <ZSTD_decompressBlock@@Base+0xdb8>  // b.pmore
   4d230:	adrp	x10, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4d234:	add	x10, x10, #0x3f8
   4d238:	adr	x11, 4d248 <ZSTD_decompressBlock@@Base+0xd5c>
   4d23c:	ldrb	w12, [x10, x9]
   4d240:	add	x11, x11, x12, lsl #2
   4d244:	br	x11
   4d248:	ldrb	w9, [x1, #6]
   4d24c:	bfi	x8, x9, #48, #8
   4d250:	str	x8, [x20]
   4d254:	ldrb	w8, [x1, #5]
   4d258:	ldr	x9, [x20]
   4d25c:	add	x8, x9, x8, lsl #40
   4d260:	str	x8, [x20]
   4d264:	ldrb	w8, [x1, #4]
   4d268:	ldr	x9, [x20]
   4d26c:	add	x8, x9, x8, lsl #32
   4d270:	str	x8, [x20]
   4d274:	ldrb	w8, [x1, #3]
   4d278:	ldr	x9, [x20]
   4d27c:	add	x8, x9, x8, lsl #24
   4d280:	str	x8, [x20]
   4d284:	ldrb	w8, [x1, #2]
   4d288:	ldr	x9, [x20]
   4d28c:	add	x8, x9, x8, lsl #16
   4d290:	str	x8, [x20]
   4d294:	ldrb	w8, [x1, #1]
   4d298:	ldr	x9, [x20]
   4d29c:	add	x8, x9, x8, lsl #8
   4d2a0:	str	x8, [x20]
   4d2a4:	add	x8, x19, x1
   4d2a8:	ldurb	w21, [x8, #-1]
   4d2ac:	cbz	w21, 4d2e4 <ZSTD_decompressBlock@@Base+0xdf8>
   4d2b0:	mov	w0, w21
   4d2b4:	bl	4bf9c <ZSTD_decompressStream_simpleArgs@@Base+0xb0c>
   4d2b8:	mov	w8, #0x8                   	// #8
   4d2bc:	sub	w8, w8, w0
   4d2c0:	str	w8, [x20, #8]
   4d2c4:	cbz	w21, 4d2f0 <ZSTD_decompressBlock@@Base+0xe04>
   4d2c8:	sub	w8, w8, w19, lsl #3
   4d2cc:	add	w8, w8, #0x40
   4d2d0:	str	w8, [x20, #8]
   4d2d4:	b	4d2f4 <ZSTD_decompressBlock@@Base+0xe08>
   4d2d8:	mov	x19, #0xffffffffffffffff    	// #-1
   4d2dc:	str	wzr, [x20, #8]
   4d2e0:	b	4d2f4 <ZSTD_decompressBlock@@Base+0xe08>
   4d2e4:	mov	w8, wzr
   4d2e8:	str	w8, [x20, #8]
   4d2ec:	cbnz	w21, 4d2c8 <ZSTD_decompressBlock@@Base+0xddc>
   4d2f0:	mov	x19, #0xffffffffffffffec    	// #-20
   4d2f4:	mov	x0, x19
   4d2f8:	ldp	x20, x19, [sp, #32]
   4d2fc:	ldr	x21, [sp, #16]
   4d300:	ldp	x29, x30, [sp], #48
   4d304:	ret
   4d308:	stp	x29, x30, [sp, #-48]!
   4d30c:	stp	x20, x19, [sp, #32]
   4d310:	mov	x20, x1
   4d314:	ldr	w1, [x2, #4]
   4d318:	str	x21, [sp, #16]
   4d31c:	mov	x21, x0
   4d320:	mov	x0, x20
   4d324:	mov	x29, sp
   4d328:	mov	x19, x2
   4d32c:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4d330:	str	x0, [x21]
   4d334:	mov	x0, x20
   4d338:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4d33c:	add	x8, x19, #0x8
   4d340:	str	x8, [x21, #8]
   4d344:	ldp	x20, x19, [sp, #32]
   4d348:	ldr	x21, [sp, #16]
   4d34c:	ldp	x29, x30, [sp], #48
   4d350:	ret
   4d354:	stp	x29, x30, [sp, #-32]!
   4d358:	stp	x20, x19, [sp, #16]
   4d35c:	ldr	w8, [x0, #8]
   4d360:	mov	x29, sp
   4d364:	cmp	w8, #0x40
   4d368:	b.ls	4d374 <ZSTD_decompressBlock@@Base+0xe88>  // b.plast
   4d36c:	mov	w20, #0x3                   	// #3
   4d370:	b	4d3f0 <ZSTD_decompressBlock@@Base+0xf04>
   4d374:	ldr	x9, [x0, #16]
   4d378:	ldr	x10, [x0, #32]
   4d37c:	mov	x19, x0
   4d380:	cmp	x9, x10
   4d384:	b.cs	4d3c4 <ZSTD_decompressBlock@@Base+0xed8>  // b.hs, b.nlast
   4d388:	ldr	x10, [x19, #24]
   4d38c:	cmp	x9, x10
   4d390:	b.eq	4d3e4 <ZSTD_decompressBlock@@Base+0xef8>  // b.none
   4d394:	lsr	x11, x8, #3
   4d398:	sub	x13, x9, x11
   4d39c:	sub	w12, w9, w10
   4d3a0:	cmp	x13, x10
   4d3a4:	csel	w10, w12, w11, cc  // cc = lo, ul, last
   4d3a8:	sub	x0, x9, x10
   4d3ac:	sub	w8, w8, w10, lsl #3
   4d3b0:	cset	w20, cc  // cc = lo, ul, last
   4d3b4:	str	x0, [x19, #16]
   4d3b8:	str	w8, [x19, #8]
   4d3bc:	bl	4d400 <ZSTD_decompressBlock@@Base+0xf14>
   4d3c0:	b	4d3dc <ZSTD_decompressBlock@@Base+0xef0>
   4d3c4:	sub	x0, x9, x8, lsr #3
   4d3c8:	and	w8, w8, #0x7
   4d3cc:	str	x0, [x19, #16]
   4d3d0:	str	w8, [x19, #8]
   4d3d4:	bl	4d400 <ZSTD_decompressBlock@@Base+0xf14>
   4d3d8:	mov	w20, wzr
   4d3dc:	str	x0, [x19]
   4d3e0:	b	4d3f0 <ZSTD_decompressBlock@@Base+0xf04>
   4d3e4:	cmp	w8, #0x40
   4d3e8:	mov	w8, #0x1                   	// #1
   4d3ec:	cinc	w20, w8, cs  // cs = hs, nlast
   4d3f0:	mov	w0, w20
   4d3f4:	ldp	x20, x19, [sp, #16]
   4d3f8:	ldp	x29, x30, [sp], #32
   4d3fc:	ret
   4d400:	stp	x29, x30, [sp, #-16]!
   4d404:	mov	x29, sp
   4d408:	bl	4d414 <ZSTD_decompressBlock@@Base+0xf28>
   4d40c:	ldp	x29, x30, [sp], #16
   4d410:	ret
   4d414:	stp	x29, x30, [sp, #-16]!
   4d418:	mov	x29, sp
   4d41c:	bl	4d428 <ZSTD_decompressBlock@@Base+0xf3c>
   4d420:	ldp	x29, x30, [sp], #16
   4d424:	ret
   4d428:	ldr	x0, [x0]
   4d42c:	ret
   4d430:	stp	x29, x30, [sp, #-48]!
   4d434:	str	x21, [sp, #16]
   4d438:	stp	x20, x19, [sp, #32]
   4d43c:	mov	x29, sp
   4d440:	mov	w19, w1
   4d444:	mov	x20, x0
   4d448:	bl	4d470 <ZSTD_decompressBlock@@Base+0xf84>
   4d44c:	mov	x21, x0
   4d450:	mov	x0, x20
   4d454:	mov	w1, w19
   4d458:	bl	4d49c <ZSTD_decompressBlock@@Base+0xfb0>
   4d45c:	mov	x0, x21
   4d460:	ldp	x20, x19, [sp, #32]
   4d464:	ldr	x21, [sp, #16]
   4d468:	ldp	x29, x30, [sp], #48
   4d46c:	ret
   4d470:	stp	x29, x30, [sp, #-16]!
   4d474:	ldr	w8, [x0, #8]
   4d478:	ldr	x0, [x0]
   4d47c:	mov	w9, #0x40                  	// #64
   4d480:	mov	w2, w1
   4d484:	add	w8, w1, w8
   4d488:	sub	w1, w9, w8
   4d48c:	mov	x29, sp
   4d490:	bl	4d4ac <ZSTD_decompressBlock@@Base+0xfc0>
   4d494:	ldp	x29, x30, [sp], #16
   4d498:	ret
   4d49c:	ldr	w8, [x0, #8]
   4d4a0:	add	w8, w8, w1
   4d4a4:	str	w8, [x0, #8]
   4d4a8:	ret
   4d4ac:	adrp	x8, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4d4b0:	add	x8, x8, #0xce0
   4d4b4:	ldr	w8, [x8, w2, uxtw #2]
   4d4b8:	lsr	x9, x0, x1
   4d4bc:	and	x0, x9, x8
   4d4c0:	ret
   4d4c4:	stp	x29, x30, [sp, #-48]!
   4d4c8:	str	x21, [sp, #16]
   4d4cc:	stp	x20, x19, [sp, #32]
   4d4d0:	mov	x29, sp
   4d4d4:	mov	w19, w1
   4d4d8:	mov	x20, x0
   4d4dc:	bl	4d504 <ZSTD_decompressBlock@@Base+0x1018>
   4d4e0:	mov	x21, x0
   4d4e4:	mov	x0, x20
   4d4e8:	mov	w1, w19
   4d4ec:	bl	4d49c <ZSTD_decompressBlock@@Base+0xfb0>
   4d4f0:	mov	x0, x21
   4d4f4:	ldp	x20, x19, [sp, #32]
   4d4f8:	ldr	x21, [sp, #16]
   4d4fc:	ldp	x29, x30, [sp], #48
   4d500:	ret
   4d504:	ldr	x8, [x0]
   4d508:	ldr	w9, [x0, #8]
   4d50c:	lsl	x8, x8, x9
   4d510:	neg	w9, w1
   4d514:	lsr	x0, x8, x9
   4d518:	ret
   4d51c:	stp	x29, x30, [sp, #-96]!
   4d520:	stp	x28, x27, [sp, #16]
   4d524:	stp	x26, x25, [sp, #32]
   4d528:	stp	x24, x23, [sp, #48]
   4d52c:	stp	x22, x21, [sp, #64]
   4d530:	stp	x20, x19, [sp, #80]
   4d534:	ldp	x8, x9, [x2]
   4d538:	mov	x29, sp
   4d53c:	add	x19, x9, x8
   4d540:	add	x9, x0, x19
   4d544:	cmp	x9, x1
   4d548:	b.ls	4d554 <ZSTD_decompressBlock@@Base+0x1068>  // b.plast
   4d54c:	mov	x19, #0xffffffffffffffba    	// #-70
   4d550:	b	4d614 <ZSTD_decompressBlock@@Base+0x1128>
   4d554:	mov	x21, x2
   4d558:	ldr	x2, [x3]
   4d55c:	mov	x26, x3
   4d560:	add	x28, x2, x8
   4d564:	cmp	x28, x4
   4d568:	b.ls	4d574 <ZSTD_decompressBlock@@Base+0x1088>  // b.plast
   4d56c:	mov	x19, #0xffffffffffffffec    	// #-20
   4d570:	b	4d614 <ZSTD_decompressBlock@@Base+0x1128>
   4d574:	ldr	x9, [x21, #16]
   4d578:	sub	x23, x1, #0x20
   4d57c:	add	x22, x0, x8
   4d580:	mov	x1, x23
   4d584:	mov	x3, x8
   4d588:	mov	w4, wzr
   4d58c:	mov	x24, x7
   4d590:	mov	x25, x6
   4d594:	mov	x20, x5
   4d598:	sub	x27, x22, x9
   4d59c:	bl	4d724 <ZSTD_decompressBlock@@Base+0x1238>
   4d5a0:	str	x28, [x26]
   4d5a4:	ldr	x8, [x21, #16]
   4d5a8:	sub	x9, x22, x20
   4d5ac:	cmp	x8, x9
   4d5b0:	b.ls	4d5f8 <ZSTD_decompressBlock@@Base+0x110c>  // b.plast
   4d5b4:	sub	x9, x22, x25
   4d5b8:	cmp	x8, x9
   4d5bc:	b.hi	4d56c <ZSTD_decompressBlock@@Base+0x1080>  // b.pmore
   4d5c0:	ldr	x2, [x21, #8]
   4d5c4:	sub	x25, x27, x20
   4d5c8:	add	x1, x24, x25
   4d5cc:	add	x8, x1, x2
   4d5d0:	cmp	x8, x24
   4d5d4:	b.ls	4d634 <ZSTD_decompressBlock@@Base+0x1148>  // b.plast
   4d5d8:	neg	x2, x25
   4d5dc:	mov	x0, x22
   4d5e0:	bl	4450 <memmove@plt>
   4d5e4:	ldr	x8, [x21, #8]
   4d5e8:	sub	x22, x22, x25
   4d5ec:	add	x8, x8, x25
   4d5f0:	str	x8, [x21, #8]
   4d5f4:	b	4d5fc <ZSTD_decompressBlock@@Base+0x1110>
   4d5f8:	mov	x20, x27
   4d5fc:	ldr	x3, [x21, #8]
   4d600:	mov	w4, #0x1                   	// #1
   4d604:	mov	x0, x22
   4d608:	mov	x1, x23
   4d60c:	mov	x2, x20
   4d610:	bl	4d724 <ZSTD_decompressBlock@@Base+0x1238>
   4d614:	mov	x0, x19
   4d618:	ldp	x20, x19, [sp, #80]
   4d61c:	ldp	x22, x21, [sp, #64]
   4d620:	ldp	x24, x23, [sp, #48]
   4d624:	ldp	x26, x25, [sp, #32]
   4d628:	ldp	x28, x27, [sp, #16]
   4d62c:	ldp	x29, x30, [sp], #96
   4d630:	ret
   4d634:	mov	x0, x22
   4d638:	bl	4450 <memmove@plt>
   4d63c:	b	4d614 <ZSTD_decompressBlock@@Base+0x1128>
   4d640:	ldr	q0, [x1]
   4d644:	str	q0, [x0]
   4d648:	ret
   4d64c:	stp	x29, x30, [sp, #-48]!
   4d650:	stp	x20, x19, [sp, #32]
   4d654:	mov	x20, x1
   4d658:	cmp	x2, #0x7
   4d65c:	mov	x19, x0
   4d660:	str	x21, [sp, #16]
   4d664:	mov	x29, sp
   4d668:	b.hi	4d6f0 <ZSTD_decompressBlock@@Base+0x1204>  // b.pmore
   4d66c:	ldr	x8, [x20]
   4d670:	ldr	x9, [x19]
   4d674:	adrp	x11, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4d678:	lsl	x10, x2, #2
   4d67c:	ldrb	w8, [x8]
   4d680:	add	x11, x11, #0xd60
   4d684:	strb	w8, [x9]
   4d688:	ldr	x8, [x20]
   4d68c:	ldr	x9, [x19]
   4d690:	ldrb	w8, [x8, #1]
   4d694:	strb	w8, [x9, #1]
   4d698:	ldr	x8, [x20]
   4d69c:	ldr	x9, [x19]
   4d6a0:	ldrb	w8, [x8, #2]
   4d6a4:	strb	w8, [x9, #2]
   4d6a8:	ldr	x8, [x20]
   4d6ac:	ldr	x9, [x19]
   4d6b0:	ldrb	w8, [x8, #3]
   4d6b4:	strb	w8, [x9, #3]
   4d6b8:	ldr	w8, [x11, x10]
   4d6bc:	ldr	x9, [x20]
   4d6c0:	adrp	x11, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4d6c4:	add	x11, x11, #0xd80
   4d6c8:	ldrsw	x21, [x11, x10]
   4d6cc:	add	x1, x9, x8
   4d6d0:	str	x1, [x20]
   4d6d4:	ldr	x8, [x19]
   4d6d8:	add	x0, x8, #0x4
   4d6dc:	bl	4d92c <ZSTD_decompressBlock@@Base+0x1440>
   4d6e0:	ldr	x8, [x20]
   4d6e4:	sub	x8, x8, x21
   4d6e8:	str	x8, [x20]
   4d6ec:	b	4d6fc <ZSTD_decompressBlock@@Base+0x1210>
   4d6f0:	ldr	x0, [x19]
   4d6f4:	ldr	x1, [x20]
   4d6f8:	bl	4d920 <ZSTD_decompressBlock@@Base+0x1434>
   4d6fc:	ldr	x8, [x20]
   4d700:	ldr	x21, [sp, #16]
   4d704:	add	x8, x8, #0x8
   4d708:	str	x8, [x20]
   4d70c:	ldr	x8, [x19]
   4d710:	add	x8, x8, #0x8
   4d714:	str	x8, [x19]
   4d718:	ldp	x20, x19, [sp, #32]
   4d71c:	ldp	x29, x30, [sp], #48
   4d720:	ret
   4d724:	sub	sp, sp, #0x50
   4d728:	stp	x29, x30, [sp, #16]
   4d72c:	str	x23, [sp, #32]
   4d730:	add	x29, sp, #0x10
   4d734:	cmp	x3, #0x7
   4d738:	add	x23, x0, x3
   4d73c:	stp	x22, x21, [sp, #48]
   4d740:	stp	x20, x19, [sp, #64]
   4d744:	str	x0, [x29, #24]
   4d748:	str	x2, [sp, #8]
   4d74c:	b.gt	4d774 <ZSTD_decompressBlock@@Base+0x1288>
   4d750:	ldr	x8, [x29, #24]
   4d754:	cmp	x8, x23
   4d758:	b.cs	4d908 <ZSTD_decompressBlock@@Base+0x141c>  // b.hs, b.nlast
   4d75c:	ldr	x9, [sp, #8]
   4d760:	ldrb	w10, [x9], #1
   4d764:	strb	w10, [x8], #1
   4d768:	cmp	x23, x8
   4d76c:	b.ne	4d760 <ZSTD_decompressBlock@@Base+0x1274>  // b.any
   4d770:	b	4d900 <ZSTD_decompressBlock@@Base+0x1414>
   4d774:	mov	w22, w4
   4d778:	mov	x21, x3
   4d77c:	mov	x19, x1
   4d780:	cmp	w4, #0x1
   4d784:	b.ne	4d798 <ZSTD_decompressBlock@@Base+0x12ac>  // b.any
   4d788:	sub	x2, x0, x2
   4d78c:	add	x0, x29, #0x18
   4d790:	add	x1, sp, #0x8
   4d794:	bl	4d64c <ZSTD_decompressBlock@@Base+0x1160>
   4d798:	ldr	x20, [x29, #24]
   4d79c:	cmp	x23, x19
   4d7a0:	b.ls	4d7e4 <ZSTD_decompressBlock@@Base+0x12f8>  // b.plast
   4d7a4:	cmp	x20, x19
   4d7a8:	b.hi	4d8e0 <ZSTD_decompressBlock@@Base+0x13f4>  // b.pmore
   4d7ac:	ldr	x21, [sp, #8]
   4d7b0:	cmp	w22, #0x1
   4d7b4:	b.ne	4d874 <ZSTD_decompressBlock@@Base+0x1388>  // b.any
   4d7b8:	sub	x8, x20, x21
   4d7bc:	cmp	x8, #0xf
   4d7c0:	b.gt	4d874 <ZSTD_decompressBlock@@Base+0x1388>
   4d7c4:	mov	x0, x20
   4d7c8:	mov	x1, x21
   4d7cc:	bl	4d920 <ZSTD_decompressBlock@@Base+0x1434>
   4d7d0:	add	x20, x20, #0x8
   4d7d4:	cmp	x20, x19
   4d7d8:	add	x21, x21, #0x8
   4d7dc:	b.cc	4d7c4 <ZSTD_decompressBlock@@Base+0x12d8>  // b.lo, b.ul, b.last
   4d7e0:	b	4d8c8 <ZSTD_decompressBlock@@Base+0x13dc>
   4d7e4:	ldr	x19, [sp, #8]
   4d7e8:	cmp	w22, #0x1
   4d7ec:	add	x22, x20, x21
   4d7f0:	b.ne	4d820 <ZSTD_decompressBlock@@Base+0x1334>  // b.any
   4d7f4:	sub	x8, x20, x19
   4d7f8:	cmp	x8, #0xf
   4d7fc:	b.gt	4d820 <ZSTD_decompressBlock@@Base+0x1334>
   4d800:	mov	x0, x20
   4d804:	mov	x1, x19
   4d808:	bl	4d920 <ZSTD_decompressBlock@@Base+0x1434>
   4d80c:	add	x20, x20, #0x8
   4d810:	cmp	x20, x22
   4d814:	add	x19, x19, #0x8
   4d818:	b.cc	4d800 <ZSTD_decompressBlock@@Base+0x1314>  // b.lo, b.ul, b.last
   4d81c:	b	4d908 <ZSTD_decompressBlock@@Base+0x141c>
   4d820:	mov	x0, x20
   4d824:	mov	x1, x19
   4d828:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d82c:	add	x0, x20, #0x10
   4d830:	add	x1, x19, #0x10
   4d834:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d838:	cmp	x21, #0x21
   4d83c:	b.lt	4d908 <ZSTD_decompressBlock@@Base+0x141c>  // b.tstop
   4d840:	add	x20, x20, #0x20
   4d844:	add	x19, x19, #0x30
   4d848:	sub	x1, x19, #0x10
   4d84c:	mov	x0, x20
   4d850:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d854:	add	x0, x20, #0x10
   4d858:	mov	x1, x19
   4d85c:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d860:	add	x20, x20, #0x20
   4d864:	cmp	x20, x22
   4d868:	add	x19, x19, #0x20
   4d86c:	b.cc	4d848 <ZSTD_decompressBlock@@Base+0x135c>  // b.lo, b.ul, b.last
   4d870:	b	4d908 <ZSTD_decompressBlock@@Base+0x141c>
   4d874:	mov	x0, x20
   4d878:	mov	x1, x21
   4d87c:	sub	x22, x19, x20
   4d880:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d884:	add	x0, x20, #0x10
   4d888:	add	x1, x21, #0x10
   4d88c:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d890:	cmp	x22, #0x21
   4d894:	b.lt	4d8c8 <ZSTD_decompressBlock@@Base+0x13dc>  // b.tstop
   4d898:	add	x20, x20, #0x20
   4d89c:	add	x21, x21, #0x30
   4d8a0:	sub	x1, x21, #0x10
   4d8a4:	mov	x0, x20
   4d8a8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d8ac:	add	x0, x20, #0x10
   4d8b0:	mov	x1, x21
   4d8b4:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4d8b8:	add	x20, x20, #0x20
   4d8bc:	cmp	x20, x19
   4d8c0:	add	x21, x21, #0x20
   4d8c4:	b.cc	4d8a0 <ZSTD_decompressBlock@@Base+0x13b4>  // b.lo, b.ul, b.last
   4d8c8:	ldr	x8, [x29, #24]
   4d8cc:	ldr	x9, [sp, #8]
   4d8d0:	str	x19, [x29, #24]
   4d8d4:	sub	x8, x19, x8
   4d8d8:	add	x8, x9, x8
   4d8dc:	str	x8, [sp, #8]
   4d8e0:	ldr	x8, [x29, #24]
   4d8e4:	cmp	x8, x23
   4d8e8:	b.cs	4d908 <ZSTD_decompressBlock@@Base+0x141c>  // b.hs, b.nlast
   4d8ec:	ldr	x9, [sp, #8]
   4d8f0:	ldrb	w10, [x9], #1
   4d8f4:	strb	w10, [x8], #1
   4d8f8:	cmp	x23, x8
   4d8fc:	b.ne	4d8f0 <ZSTD_decompressBlock@@Base+0x1404>  // b.any
   4d900:	str	x9, [sp, #8]
   4d904:	str	x8, [x29, #24]
   4d908:	ldp	x20, x19, [sp, #64]
   4d90c:	ldp	x22, x21, [sp, #48]
   4d910:	ldr	x23, [sp, #32]
   4d914:	ldp	x29, x30, [sp, #16]
   4d918:	add	sp, sp, #0x50
   4d91c:	ret
   4d920:	ldr	x8, [x1]
   4d924:	str	x8, [x0]
   4d928:	ret
   4d92c:	ldr	w8, [x1]
   4d930:	str	w8, [x0]
   4d934:	ret
   4d938:	sub	sp, sp, #0x180
   4d93c:	stp	x29, x30, [sp, #288]
   4d940:	stp	x28, x27, [sp, #304]
   4d944:	stp	x26, x25, [sp, #320]
   4d948:	stp	x24, x23, [sp, #336]
   4d94c:	stp	x22, x21, [sp, #352]
   4d950:	stp	x20, x19, [sp, #368]
   4d954:	ldr	x8, [x0, #28952]
   4d958:	add	x29, sp, #0x120
   4d95c:	mov	x23, x1
   4d960:	add	x10, x1, x2
   4d964:	stur	x8, [x29, #-64]
   4d968:	ldr	x9, [x0, #28984]
   4d96c:	str	x10, [sp, #48]
   4d970:	str	x1, [sp, #16]
   4d974:	add	x8, x8, x9
   4d978:	str	x8, [sp, #72]
   4d97c:	cbz	w5, 4d9fc <ZSTD_decompressBlock@@Base+0x1510>
   4d980:	ldr	x9, [x0, #28760]
   4d984:	ldr	x21, [x0, #28752]
   4d988:	mov	w10, #0x1                   	// #1
   4d98c:	add	x11, sp, #0x58
   4d990:	str	x9, [sp, #32]
   4d994:	ldr	x9, [x0, #28768]
   4d998:	mov	w25, w5
   4d99c:	mov	x20, x0
   4d9a0:	mov	x8, xzr
   4d9a4:	str	x9, [sp, #24]
   4d9a8:	mov	w9, #0x70ac                	// #28844
   4d9ac:	str	w10, [x0, x9]
   4d9b0:	mov	w10, #0x683c                	// #26684
   4d9b4:	add	x9, x11, #0x58
   4d9b8:	add	x10, x0, x10
   4d9bc:	ldr	w11, [x10, x8, lsl #2]
   4d9c0:	str	x11, [x9, x8, lsl #3]
   4d9c4:	add	x8, x8, #0x1
   4d9c8:	cmp	x8, #0x3
   4d9cc:	b.ne	4d9bc <ZSTD_decompressBlock@@Base+0x14d0>  // b.any
   4d9d0:	add	x0, sp, #0x58
   4d9d4:	mov	x1, x3
   4d9d8:	mov	x2, x4
   4d9dc:	add	x22, sp, #0x58
   4d9e0:	bl	4d1a4 <ZSTD_decompressBlock@@Base+0xcb8>
   4d9e4:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4d9e8:	cbz	w0, 4da6c <ZSTD_decompressBlock@@Base+0x1580>
   4d9ec:	mov	w8, wzr
   4d9f0:	mov	x20, #0xffffffffffffffec    	// #-20
   4d9f4:	cbnz	w8, 4d9fc <ZSTD_decompressBlock@@Base+0x1510>
   4d9f8:	b	4da48 <ZSTD_decompressBlock@@Base+0x155c>
   4d9fc:	ldur	x1, [x29, #-64]
   4da00:	ldr	x8, [sp, #72]
   4da04:	sub	x19, x8, x1
   4da08:	ldr	x8, [sp, #48]
   4da0c:	sub	x8, x8, x23
   4da10:	cmp	x19, x8
   4da14:	b.ls	4da28 <ZSTD_decompressBlock@@Base+0x153c>  // b.plast
   4da18:	mov	w8, wzr
   4da1c:	mov	x20, #0xffffffffffffffba    	// #-70
   4da20:	cbnz	w8, 4da40 <ZSTD_decompressBlock@@Base+0x1554>
   4da24:	b	4da48 <ZSTD_decompressBlock@@Base+0x155c>
   4da28:	mov	x0, x23
   4da2c:	mov	x2, x19
   4da30:	bl	4420 <memcpy@plt>
   4da34:	add	x23, x23, x19
   4da38:	mov	w8, #0x1                   	// #1
   4da3c:	cbz	w8, 4da48 <ZSTD_decompressBlock@@Base+0x155c>
   4da40:	ldr	x8, [sp, #16]
   4da44:	sub	x20, x23, x8
   4da48:	mov	x0, x20
   4da4c:	ldp	x20, x19, [sp, #368]
   4da50:	ldp	x22, x21, [sp, #352]
   4da54:	ldp	x24, x23, [sp, #336]
   4da58:	ldp	x26, x25, [sp, #320]
   4da5c:	ldp	x28, x27, [sp, #304]
   4da60:	ldp	x29, x30, [sp, #288]
   4da64:	add	sp, sp, #0x180
   4da68:	ret
   4da6c:	ldr	x2, [x20]
   4da70:	add	x0, x22, #0x28
   4da74:	add	x1, sp, #0x58
   4da78:	bl	4d308 <ZSTD_decompressBlock@@Base+0xe1c>
   4da7c:	ldr	x2, [x20, #16]
   4da80:	add	x0, x22, #0x38
   4da84:	add	x1, sp, #0x58
   4da88:	bl	4d308 <ZSTD_decompressBlock@@Base+0xe1c>
   4da8c:	ldr	x2, [x20, #8]
   4da90:	add	x0, x22, #0x48
   4da94:	add	x1, sp, #0x58
   4da98:	str	x20, [sp, #8]
   4da9c:	bl	4d308 <ZSTD_decompressBlock@@Base+0xe1c>
   4daa0:	ldr	x8, [sp, #48]
   4daa4:	sub	x8, x8, #0x20
   4daa8:	stp	x8, x21, [sp, #56]
   4daac:	b	4db00 <ZSTD_decompressBlock@@Base+0x1614>
   4dab0:	ldr	x1, [sp, #48]
   4dab4:	ldr	x4, [sp, #72]
   4dab8:	ldp	x7, x6, [sp, #24]
   4dabc:	sub	x2, x29, #0x38
   4dac0:	sub	x3, x29, #0x40
   4dac4:	mov	x0, x23
   4dac8:	mov	x5, x22
   4dacc:	stp	x21, x27, [x29, #-56]
   4dad0:	stur	x20, [x29, #-40]
   4dad4:	bl	4d51c <ZSTD_decompressBlock@@Base+0x1030>
   4dad8:	mov	x19, x0
   4dadc:	ldr	x20, [sp, #80]
   4dae0:	mov	x0, x19
   4dae4:	bl	4bde4 <ZSTD_decompressStream_simpleArgs@@Base+0x954>
   4dae8:	cmp	w0, #0x0
   4daec:	add	x9, x23, x19
   4daf0:	cset	w8, eq  // eq = none
   4daf4:	csel	x23, x9, x23, eq  // eq = none
   4daf8:	csel	x20, x20, x19, eq  // eq = none
   4dafc:	cbnz	w0, 4d9f4 <ZSTD_decompressBlock@@Base+0x1508>
   4db00:	add	x0, sp, #0x58
   4db04:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4db08:	cbz	w25, 4dee0 <ZSTD_decompressBlock@@Base+0x19f4>
   4db0c:	cmp	w0, #0x2
   4db10:	b.hi	4dee0 <ZSTD_decompressBlock@@Base+0x19f4>  // b.pmore
   4db14:	ldp	x9, x8, [sp, #128]
   4db18:	ldp	x11, x10, [sp, #160]
   4db1c:	ldp	x13, x12, [sp, #144]
   4db20:	str	x20, [sp, #80]
   4db24:	add	x9, x8, x9, lsl #3
   4db28:	add	x10, x10, x11, lsl #3
   4db2c:	add	x8, x12, x13, lsl #3
   4db30:	ldrb	w19, [x9, #2]
   4db34:	ldrb	w27, [x10, #2]
   4db38:	ldrb	w28, [x8, #2]
   4db3c:	ldr	w26, [x9, #4]
   4db40:	ldr	w24, [x10, #4]
   4db44:	cbz	w28, 4db60 <ZSTD_decompressBlock@@Base+0x1674>
   4db48:	ldr	w20, [x8, #4]
   4db4c:	add	x0, sp, #0x58
   4db50:	mov	w1, w28
   4db54:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4db58:	add	x20, x0, x20
   4db5c:	b	4db64 <ZSTD_decompressBlock@@Base+0x1678>
   4db60:	mov	x20, xzr
   4db64:	cmp	w28, #0x1
   4db68:	add	w8, w27, w19
   4db6c:	b.hi	4db94 <ZSTD_decompressBlock@@Base+0x16a8>  // b.pmore
   4db70:	cmp	w26, #0x0
   4db74:	mov	w22, w25
   4db78:	cinc	x9, x20, eq  // eq = none
   4db7c:	cbz	x9, 4dbb0 <ZSTD_decompressBlock@@Base+0x16c4>
   4db80:	cmp	x9, #0x3
   4db84:	b.ne	4dbcc <ZSTD_decompressBlock@@Base+0x16e0>  // b.any
   4db88:	ldr	x10, [sp, #176]
   4db8c:	sub	x10, x10, #0x1
   4db90:	b	4dbd8 <ZSTD_decompressBlock@@Base+0x16ec>
   4db94:	ldp	x9, x10, [sp, #176]
   4db98:	mov	w22, w25
   4db9c:	str	x20, [sp, #176]
   4dba0:	stp	x9, x10, [sp, #184]
   4dba4:	add	w25, w8, w28
   4dba8:	cbnz	w27, 4dc00 <ZSTD_decompressBlock@@Base+0x1714>
   4dbac:	b	4dbbc <ZSTD_decompressBlock@@Base+0x16d0>
   4dbb0:	ldr	x20, [sp, #176]
   4dbb4:	add	w25, w8, w28
   4dbb8:	cbnz	w27, 4dc00 <ZSTD_decompressBlock@@Base+0x1714>
   4dbbc:	mov	x21, xzr
   4dbc0:	cmp	w25, #0x1f
   4dbc4:	b.cs	4dc18 <ZSTD_decompressBlock@@Base+0x172c>  // b.hs, b.nlast
   4dbc8:	b	4dc20 <ZSTD_decompressBlock@@Base+0x1734>
   4dbcc:	add	x10, sp, #0x58
   4dbd0:	add	x10, x10, x9, lsl #3
   4dbd4:	ldr	x10, [x10, #88]
   4dbd8:	cmp	x10, #0x0
   4dbdc:	cinc	x20, x10, eq  // eq = none
   4dbe0:	cmp	x9, #0x1
   4dbe4:	b.eq	4dbf0 <ZSTD_decompressBlock@@Base+0x1704>  // b.none
   4dbe8:	ldr	x9, [sp, #184]
   4dbec:	str	x9, [sp, #192]
   4dbf0:	ldr	x9, [sp, #176]
   4dbf4:	stp	x20, x9, [sp, #176]
   4dbf8:	add	w25, w8, w28
   4dbfc:	cbz	w27, 4dbbc <ZSTD_decompressBlock@@Base+0x16d0>
   4dc00:	add	x0, sp, #0x58
   4dc04:	mov	w1, w27
   4dc08:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4dc0c:	mov	x21, x0
   4dc10:	cmp	w25, #0x1f
   4dc14:	b.cc	4dc20 <ZSTD_decompressBlock@@Base+0x1734>  // b.lo, b.ul, b.last
   4dc18:	add	x0, sp, #0x58
   4dc1c:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4dc20:	add	x27, x21, x24
   4dc24:	mov	w25, w22
   4dc28:	cbz	w19, 4dc3c <ZSTD_decompressBlock@@Base+0x1750>
   4dc2c:	add	x0, sp, #0x58
   4dc30:	mov	w1, w19
   4dc34:	bl	4d4c4 <ZSTD_decompressBlock@@Base+0xfd8>
   4dc38:	b	4dc40 <ZSTD_decompressBlock@@Base+0x1754>
   4dc3c:	mov	x0, xzr
   4dc40:	ldp	x9, x8, [sp, #128]
   4dc44:	ldr	x22, [sp, #64]
   4dc48:	add	x21, x0, x26
   4dc4c:	add	x0, sp, #0x58
   4dc50:	add	x8, x8, x9, lsl #3
   4dc54:	ldrb	w1, [x8, #3]
   4dc58:	ldrh	w19, [x8]
   4dc5c:	sub	w25, w25, #0x1
   4dc60:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4dc64:	ldp	x9, x8, [sp, #160]
   4dc68:	add	x10, x0, x19
   4dc6c:	str	x10, [sp, #128]
   4dc70:	add	x0, sp, #0x58
   4dc74:	add	x8, x8, x9, lsl #3
   4dc78:	ldrb	w1, [x8, #3]
   4dc7c:	ldrh	w19, [x8]
   4dc80:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4dc84:	ldp	x9, x8, [sp, #144]
   4dc88:	add	x10, x0, x19
   4dc8c:	str	x10, [sp, #160]
   4dc90:	add	x0, sp, #0x58
   4dc94:	add	x8, x8, x9, lsl #3
   4dc98:	ldrb	w1, [x8, #3]
   4dc9c:	ldrh	w19, [x8]
   4dca0:	bl	4d430 <ZSTD_decompressBlock@@Base+0xf44>
   4dca4:	ldr	x10, [sp, #56]
   4dca8:	ldur	x1, [x29, #-64]
   4dcac:	add	x8, x0, x19
   4dcb0:	add	x19, x21, x27
   4dcb4:	add	x28, x23, x21
   4dcb8:	add	x9, x23, x19
   4dcbc:	str	x8, [sp, #144]
   4dcc0:	sub	x8, x28, x20
   4dcc4:	cmp	x9, x10
   4dcc8:	stp	x8, x23, [x29, #-24]
   4dccc:	b.hi	4dab0 <ZSTD_decompressBlock@@Base+0x15c4>  // b.pmore
   4dcd0:	ldr	x8, [sp, #72]
   4dcd4:	add	x24, x1, x21
   4dcd8:	cmp	x24, x8
   4dcdc:	b.hi	4dab0 <ZSTD_decompressBlock@@Base+0x15c4>  // b.pmore
   4dce0:	mov	x0, x23
   4dce4:	str	w25, [sp, #44]
   4dce8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4dcec:	cmp	x21, #0x11
   4dcf0:	b.cc	4dd4c <ZSTD_decompressBlock@@Base+0x1860>  // b.lo, b.ul, b.last
   4dcf4:	ldur	x25, [x29, #-64]
   4dcf8:	add	x0, x23, #0x10
   4dcfc:	sub	x21, x21, #0x10
   4dd00:	add	x1, x25, #0x10
   4dd04:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4dd08:	add	x0, x23, #0x20
   4dd0c:	add	x1, x25, #0x20
   4dd10:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4dd14:	cmp	x21, #0x21
   4dd18:	b.lt	4dd4c <ZSTD_decompressBlock@@Base+0x1860>  // b.tstop
   4dd1c:	add	x26, x23, #0x30
   4dd20:	add	x21, x25, #0x40
   4dd24:	sub	x1, x21, #0x10
   4dd28:	mov	x0, x26
   4dd2c:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4dd30:	add	x0, x26, #0x10
   4dd34:	mov	x1, x21
   4dd38:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4dd3c:	add	x26, x26, #0x20
   4dd40:	cmp	x26, x28
   4dd44:	add	x21, x21, #0x20
   4dd48:	b.cc	4dd24 <ZSTD_decompressBlock@@Base+0x1838>  // b.lo, b.ul, b.last
   4dd4c:	sub	x8, x28, x22
   4dd50:	cmp	x20, x8
   4dd54:	stur	x28, [x29, #-16]
   4dd58:	stur	x24, [x29, #-64]
   4dd5c:	b.ls	4ddb4 <ZSTD_decompressBlock@@Base+0x18c8>  // b.plast
   4dd60:	ldr	x8, [sp, #32]
   4dd64:	sub	x8, x28, x8
   4dd68:	cmp	x20, x8
   4dd6c:	b.ls	4dd7c <ZSTD_decompressBlock@@Base+0x1890>  // b.plast
   4dd70:	ldr	w25, [sp, #44]
   4dd74:	mov	x19, #0xffffffffffffffec    	// #-20
   4dd78:	b	4dadc <ZSTD_decompressBlock@@Base+0x15f0>
   4dd7c:	ldur	x8, [x29, #-24]
   4dd80:	ldr	x9, [sp, #24]
   4dd84:	sub	x21, x8, x22
   4dd88:	add	x1, x9, x21
   4dd8c:	add	x8, x1, x27
   4dd90:	cmp	x8, x9
   4dd94:	stur	x1, [x29, #-24]
   4dd98:	b.ls	4de78 <ZSTD_decompressBlock@@Base+0x198c>  // b.plast
   4dd9c:	neg	x2, x21
   4dda0:	mov	x0, x28
   4dda4:	bl	4450 <memmove@plt>
   4dda8:	sub	x8, x28, x21
   4ddac:	add	x27, x21, x27
   4ddb0:	stp	x22, x8, [x29, #-24]
   4ddb4:	cmp	x20, #0x10
   4ddb8:	b.cc	4de1c <ZSTD_decompressBlock@@Base+0x1930>  // b.lo, b.ul, b.last
   4ddbc:	ldp	x21, x20, [x29, #-24]
   4ddc0:	mov	x0, x20
   4ddc4:	mov	x1, x21
   4ddc8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4ddcc:	add	x0, x20, #0x10
   4ddd0:	add	x1, x21, #0x10
   4ddd4:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4ddd8:	cmp	x27, #0x21
   4dddc:	b.lt	4de70 <ZSTD_decompressBlock@@Base+0x1984>  // b.tstop
   4dde0:	ldr	w25, [sp, #44]
   4dde4:	add	x24, x20, x27
   4dde8:	add	x20, x20, #0x20
   4ddec:	add	x21, x21, #0x30
   4ddf0:	sub	x1, x21, #0x10
   4ddf4:	mov	x0, x20
   4ddf8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4ddfc:	add	x0, x20, #0x10
   4de00:	mov	x1, x21
   4de04:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4de08:	add	x20, x20, #0x20
   4de0c:	cmp	x20, x24
   4de10:	add	x21, x21, #0x20
   4de14:	b.cc	4ddf0 <ZSTD_decompressBlock@@Base+0x1904>  // b.lo, b.ul, b.last
   4de18:	b	4dadc <ZSTD_decompressBlock@@Base+0x15f0>
   4de1c:	sub	x0, x29, #0x10
   4de20:	sub	x1, x29, #0x18
   4de24:	mov	x2, x20
   4de28:	bl	4d64c <ZSTD_decompressBlock@@Base+0x1160>
   4de2c:	cmp	x27, #0x9
   4de30:	b.cc	4de70 <ZSTD_decompressBlock@@Base+0x1984>  // b.lo, b.ul, b.last
   4de34:	ldp	x28, x20, [x29, #-24]
   4de38:	ldr	w25, [sp, #44]
   4de3c:	add	x8, x27, x20
   4de40:	sub	x9, x20, x28
   4de44:	cmp	x9, #0xf
   4de48:	sub	x24, x8, #0x8
   4de4c:	b.gt	4de8c <ZSTD_decompressBlock@@Base+0x19a0>
   4de50:	mov	x0, x20
   4de54:	mov	x1, x28
   4de58:	bl	4d920 <ZSTD_decompressBlock@@Base+0x1434>
   4de5c:	add	x20, x20, #0x8
   4de60:	cmp	x20, x24
   4de64:	add	x28, x28, #0x8
   4de68:	b.cc	4de50 <ZSTD_decompressBlock@@Base+0x1964>  // b.lo, b.ul, b.last
   4de6c:	b	4dadc <ZSTD_decompressBlock@@Base+0x15f0>
   4de70:	ldr	w25, [sp, #44]
   4de74:	b	4dadc <ZSTD_decompressBlock@@Base+0x15f0>
   4de78:	mov	x0, x28
   4de7c:	mov	x2, x27
   4de80:	bl	4450 <memmove@plt>
   4de84:	ldr	w25, [sp, #44]
   4de88:	b	4dadc <ZSTD_decompressBlock@@Base+0x15f0>
   4de8c:	mov	x0, x20
   4de90:	mov	x1, x28
   4de94:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4de98:	add	x0, x20, #0x10
   4de9c:	add	x1, x28, #0x10
   4dea0:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4dea4:	cmp	x27, #0x29
   4dea8:	b.lt	4dadc <ZSTD_decompressBlock@@Base+0x15f0>  // b.tstop
   4deac:	add	x20, x20, #0x20
   4deb0:	add	x21, x28, #0x30
   4deb4:	sub	x1, x21, #0x10
   4deb8:	mov	x0, x20
   4debc:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4dec0:	add	x0, x20, #0x10
   4dec4:	mov	x1, x21
   4dec8:	bl	4d640 <ZSTD_decompressBlock@@Base+0x1154>
   4decc:	add	x20, x20, #0x20
   4ded0:	cmp	x20, x24
   4ded4:	add	x21, x21, #0x20
   4ded8:	b.cc	4deb4 <ZSTD_decompressBlock@@Base+0x19c8>  // b.lo, b.ul, b.last
   4dedc:	b	4dadc <ZSTD_decompressBlock@@Base+0x15f0>
   4dee0:	cbnz	w25, 4d9ec <ZSTD_decompressBlock@@Base+0x1500>
   4dee4:	add	x0, sp, #0x58
   4dee8:	add	x19, sp, #0x58
   4deec:	bl	4d354 <ZSTD_decompressBlock@@Base+0xe68>
   4def0:	cmp	w0, #0x2
   4def4:	b.cc	4d9ec <ZSTD_decompressBlock@@Base+0x1500>  // b.lo, b.ul, b.last
   4def8:	ldr	x10, [sp, #8]
   4defc:	mov	w9, #0x683c                	// #26684
   4df00:	mov	x8, xzr
   4df04:	add	x9, x10, x9
   4df08:	add	x10, x19, #0x58
   4df0c:	ldr	x11, [x10, x8, lsl #3]
   4df10:	str	w11, [x9, x8, lsl #2]
   4df14:	add	x8, x8, #0x1
   4df18:	cmp	x8, #0x3
   4df1c:	b.ne	4df0c <ZSTD_decompressBlock@@Base+0x1a20>  // b.any
   4df20:	mov	w8, #0x1                   	// #1
   4df24:	b	4d9f4 <ZSTD_decompressBlock@@Base+0x1508>

000000000004df28 <ZBUFF_isError@@Base>:
   4df28:	stp	x29, x30, [sp, #-16]!
   4df2c:	mov	x29, sp
   4df30:	bl	4df3c <ZBUFF_isError@@Base+0x14>
   4df34:	ldp	x29, x30, [sp], #16
   4df38:	ret
   4df3c:	cmn	x0, #0x78
   4df40:	cset	w0, hi  // hi = pmore
   4df44:	ret

000000000004df48 <ZBUFF_getErrorName@@Base>:
   4df48:	stp	x29, x30, [sp, #-16]!
   4df4c:	mov	x29, sp
   4df50:	bl	4df5c <ZBUFF_getErrorName@@Base+0x14>
   4df54:	ldp	x29, x30, [sp], #16
   4df58:	ret
   4df5c:	stp	x29, x30, [sp, #-16]!
   4df60:	mov	x29, sp
   4df64:	bl	4df74 <ZBUFF_getErrorName@@Base+0x2c>
   4df68:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
   4df6c:	ldp	x29, x30, [sp], #16
   4df70:	ret
   4df74:	stp	x29, x30, [sp, #-32]!
   4df78:	str	x19, [sp, #16]
   4df7c:	mov	x29, sp
   4df80:	mov	x19, x0
   4df84:	bl	4df3c <ZBUFF_isError@@Base+0x14>
   4df88:	cmp	w0, #0x0
   4df8c:	csneg	w0, wzr, w19, eq  // eq = none
   4df90:	ldr	x19, [sp, #16]
   4df94:	ldp	x29, x30, [sp], #32
   4df98:	ret

000000000004df9c <ZBUFF_createCCtx@@Base>:
   4df9c:	stp	x29, x30, [sp, #-16]!
   4dfa0:	mov	x29, sp
   4dfa4:	bl	4a10 <ZSTD_createCStream@plt>
   4dfa8:	ldp	x29, x30, [sp], #16
   4dfac:	ret

000000000004dfb0 <ZBUFF_createCCtx_advanced@@Base>:
   4dfb0:	sub	sp, sp, #0x30
   4dfb4:	stp	x29, x30, [sp, #32]
   4dfb8:	ldr	x8, [x0, #16]
   4dfbc:	ldr	q0, [x0]
   4dfc0:	mov	x0, sp
   4dfc4:	add	x29, sp, #0x20
   4dfc8:	str	x8, [sp, #16]
   4dfcc:	str	q0, [sp]
   4dfd0:	bl	49d0 <ZSTD_createCStream_advanced@plt>
   4dfd4:	ldp	x29, x30, [sp, #32]
   4dfd8:	add	sp, sp, #0x30
   4dfdc:	ret

000000000004dfe0 <ZBUFF_freeCCtx@@Base>:
   4dfe0:	stp	x29, x30, [sp, #-16]!
   4dfe4:	mov	x29, sp
   4dfe8:	bl	4710 <ZSTD_freeCStream@plt>
   4dfec:	ldp	x29, x30, [sp], #16
   4dff0:	ret

000000000004dff4 <ZBUFF_compressInit_advanced@@Base>:
   4dff4:	sub	sp, sp, #0x40
   4dff8:	stp	x29, x30, [sp, #48]
   4dffc:	ldr	x8, [x3, #32]
   4e000:	ldp	q0, q1, [x3]
   4e004:	cmp	x4, #0x0
   4e008:	csinv	x4, x4, xzr, ne  // ne = any
   4e00c:	mov	x3, sp
   4e010:	add	x29, sp, #0x30
   4e014:	str	x8, [sp, #32]
   4e018:	stp	q0, q1, [sp]
   4e01c:	bl	4580 <ZSTD_initCStream_advanced@plt>
   4e020:	ldp	x29, x30, [sp, #48]
   4e024:	add	sp, sp, #0x40
   4e028:	ret

000000000004e02c <ZBUFF_compressInitDictionary@@Base>:
   4e02c:	stp	x29, x30, [sp, #-16]!
   4e030:	mov	x29, sp
   4e034:	bl	46d0 <ZSTD_initCStream_usingDict@plt>
   4e038:	ldp	x29, x30, [sp], #16
   4e03c:	ret

000000000004e040 <ZBUFF_compressInit@@Base>:
   4e040:	stp	x29, x30, [sp, #-16]!
   4e044:	mov	x29, sp
   4e048:	bl	44f0 <ZSTD_initCStream@plt>
   4e04c:	ldp	x29, x30, [sp], #16
   4e050:	ret

000000000004e054 <ZBUFF_compressContinue@@Base>:
   4e054:	sub	sp, sp, #0x50
   4e058:	stp	x29, x30, [sp, #48]
   4e05c:	stp	x20, x19, [sp, #64]
   4e060:	str	xzr, [sp, #40]
   4e064:	ldr	x8, [x2]
   4e068:	str	xzr, [sp, #16]
   4e06c:	mov	x20, x2
   4e070:	mov	x2, sp
   4e074:	stp	x1, x8, [sp, #24]
   4e078:	ldr	x8, [x4]
   4e07c:	add	x1, sp, #0x18
   4e080:	add	x29, sp, #0x30
   4e084:	mov	x19, x4
   4e088:	stp	x3, x8, [sp]
   4e08c:	bl	4470 <ZSTD_compressStream@plt>
   4e090:	ldr	x8, [sp, #40]
   4e094:	str	x8, [x20]
   4e098:	ldr	x8, [sp, #16]
   4e09c:	str	x8, [x19]
   4e0a0:	ldp	x20, x19, [sp, #64]
   4e0a4:	ldp	x29, x30, [sp, #48]
   4e0a8:	add	sp, sp, #0x50
   4e0ac:	ret

000000000004e0b0 <ZBUFF_compressFlush@@Base>:
   4e0b0:	sub	sp, sp, #0x40
   4e0b4:	stp	x29, x30, [sp, #32]
   4e0b8:	str	xzr, [sp, #24]
   4e0bc:	ldr	x8, [x2]
   4e0c0:	str	x19, [sp, #48]
   4e0c4:	add	x29, sp, #0x20
   4e0c8:	mov	x19, x2
   4e0cc:	stp	x1, x8, [sp, #8]
   4e0d0:	add	x1, sp, #0x8
   4e0d4:	bl	45b0 <ZSTD_flushStream@plt>
   4e0d8:	ldr	x8, [sp, #24]
   4e0dc:	str	x8, [x19]
   4e0e0:	ldr	x19, [sp, #48]
   4e0e4:	ldp	x29, x30, [sp, #32]
   4e0e8:	add	sp, sp, #0x40
   4e0ec:	ret

000000000004e0f0 <ZBUFF_compressEnd@@Base>:
   4e0f0:	sub	sp, sp, #0x40
   4e0f4:	stp	x29, x30, [sp, #32]
   4e0f8:	str	xzr, [sp, #24]
   4e0fc:	ldr	x8, [x2]
   4e100:	str	x19, [sp, #48]
   4e104:	add	x29, sp, #0x20
   4e108:	mov	x19, x2
   4e10c:	stp	x1, x8, [sp, #8]
   4e110:	add	x1, sp, #0x8
   4e114:	bl	4970 <ZSTD_endStream@plt>
   4e118:	ldr	x8, [sp, #24]
   4e11c:	str	x8, [x19]
   4e120:	ldr	x19, [sp, #48]
   4e124:	ldp	x29, x30, [sp, #32]
   4e128:	add	sp, sp, #0x40
   4e12c:	ret

000000000004e130 <ZBUFF_recommendedCInSize@@Base>:
   4e130:	stp	x29, x30, [sp, #-16]!
   4e134:	mov	x29, sp
   4e138:	bl	4460 <ZSTD_CStreamInSize@plt>
   4e13c:	ldp	x29, x30, [sp], #16
   4e140:	ret

000000000004e144 <ZBUFF_recommendedCOutSize@@Base>:
   4e144:	stp	x29, x30, [sp, #-16]!
   4e148:	mov	x29, sp
   4e14c:	bl	48b0 <ZSTD_CStreamOutSize@plt>
   4e150:	ldp	x29, x30, [sp], #16
   4e154:	ret

000000000004e158 <ZBUFF_createDCtx@@Base>:
   4e158:	stp	x29, x30, [sp, #-16]!
   4e15c:	mov	x29, sp
   4e160:	bl	4490 <ZSTD_createDStream@plt>
   4e164:	ldp	x29, x30, [sp], #16
   4e168:	ret

000000000004e16c <ZBUFF_createDCtx_advanced@@Base>:
   4e16c:	sub	sp, sp, #0x30
   4e170:	stp	x29, x30, [sp, #32]
   4e174:	ldr	x8, [x0, #16]
   4e178:	ldr	q0, [x0]
   4e17c:	mov	x0, sp
   4e180:	add	x29, sp, #0x20
   4e184:	str	x8, [sp, #16]
   4e188:	str	q0, [sp]
   4e18c:	bl	4400 <ZSTD_createDStream_advanced@plt>
   4e190:	ldp	x29, x30, [sp, #32]
   4e194:	add	sp, sp, #0x30
   4e198:	ret

000000000004e19c <ZBUFF_freeDCtx@@Base>:
   4e19c:	stp	x29, x30, [sp, #-16]!
   4e1a0:	mov	x29, sp
   4e1a4:	bl	4aa0 <ZSTD_freeDStream@plt>
   4e1a8:	ldp	x29, x30, [sp], #16
   4e1ac:	ret

000000000004e1b0 <ZBUFF_decompressInitDictionary@@Base>:
   4e1b0:	stp	x29, x30, [sp, #-16]!
   4e1b4:	mov	x29, sp
   4e1b8:	bl	4680 <ZSTD_initDStream_usingDict@plt>
   4e1bc:	ldp	x29, x30, [sp], #16
   4e1c0:	ret

000000000004e1c4 <ZBUFF_decompressInit@@Base>:
   4e1c4:	stp	x29, x30, [sp, #-16]!
   4e1c8:	mov	x29, sp
   4e1cc:	bl	4810 <ZSTD_initDStream@plt>
   4e1d0:	ldp	x29, x30, [sp], #16
   4e1d4:	ret

000000000004e1d8 <ZBUFF_decompressContinue@@Base>:
   4e1d8:	sub	sp, sp, #0x50
   4e1dc:	stp	x29, x30, [sp, #48]
   4e1e0:	stp	x20, x19, [sp, #64]
   4e1e4:	str	xzr, [sp, #40]
   4e1e8:	ldr	x8, [x2]
   4e1ec:	str	xzr, [sp, #16]
   4e1f0:	mov	x20, x2
   4e1f4:	mov	x2, sp
   4e1f8:	stp	x1, x8, [sp, #24]
   4e1fc:	ldr	x8, [x4]
   4e200:	add	x1, sp, #0x18
   4e204:	add	x29, sp, #0x30
   4e208:	mov	x19, x4
   4e20c:	stp	x3, x8, [sp]
   4e210:	bl	48f0 <ZSTD_decompressStream@plt>
   4e214:	ldr	x8, [sp, #40]
   4e218:	str	x8, [x20]
   4e21c:	ldr	x8, [sp, #16]
   4e220:	str	x8, [x19]
   4e224:	ldp	x20, x19, [sp, #64]
   4e228:	ldp	x29, x30, [sp, #48]
   4e22c:	add	sp, sp, #0x50
   4e230:	ret

000000000004e234 <ZBUFF_recommendedDInSize@@Base>:
   4e234:	stp	x29, x30, [sp, #-16]!
   4e238:	mov	x29, sp
   4e23c:	bl	4980 <ZSTD_DStreamInSize@plt>
   4e240:	ldp	x29, x30, [sp], #16
   4e244:	ret

000000000004e248 <ZBUFF_recommendedDOutSize@@Base>:
   4e248:	stp	x29, x30, [sp, #-16]!
   4e24c:	mov	x29, sp
   4e250:	bl	46f0 <ZSTD_DStreamOutSize@plt>
   4e254:	ldp	x29, x30, [sp], #16
   4e258:	ret
   4e25c:	cbz	w1, 4e280 <ZBUFF_recommendedDOutSize@@Base+0x38>
   4e260:	mov	x8, x0
   4e264:	mov	x0, xzr
   4e268:	mov	w9, w1
   4e26c:	ldr	x10, [x8], #8
   4e270:	subs	x9, x9, #0x1
   4e274:	add	x0, x10, x0
   4e278:	b.ne	4e26c <ZBUFF_recommendedDOutSize@@Base+0x24>  // b.any
   4e27c:	ret
   4e280:	mov	x0, xzr
   4e284:	ret
   4e288:	cmp	w2, #0x1
   4e28c:	b.lt	4e2b0 <ZBUFF_recommendedDOutSize@@Base+0x68>  // b.tstop
   4e290:	ucvtf	d0, x1
   4e294:	ucvtf	d1, x0
   4e298:	fdiv	d0, d0, d1
   4e29c:	fmov	d1, #1.000000000000000000e+01
   4e2a0:	mov	x3, x1
   4e2a4:	mov	x2, x0
   4e2a8:	fcmp	d0, d1
   4e2ac:	b.lt	4e2b4 <ZBUFF_recommendedDOutSize@@Base+0x6c>  // b.tstop
   4e2b0:	ret
   4e2b4:	stp	x29, x30, [sp, #-32]!
   4e2b8:	str	x19, [sp, #16]
   4e2bc:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e2c0:	ldr	x19, [x19, #4048]
   4e2c4:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4e2c8:	add	x1, x1, #0xda0
   4e2cc:	mov	x29, sp
   4e2d0:	ldr	x0, [x19]
   4e2d4:	bl	4ae0 <fprintf@plt>
   4e2d8:	ldr	x0, [x19]
   4e2dc:	bl	4920 <fflush@plt>
   4e2e0:	ldr	x19, [sp, #16]
   4e2e4:	ldp	x29, x30, [sp], #32
   4e2e8:	ret
   4e2ec:	add	w9, w2, w2, lsl #2
   4e2f0:	udiv	w8, w0, w2
   4e2f4:	cmp	w8, w3
   4e2f8:	lsl	w9, w9, #1
   4e2fc:	b.cs	4e308 <ZBUFF_recommendedDOutSize@@Base+0xc0>  // b.hs, b.nlast
   4e300:	mov	w8, #0x1                   	// #1
   4e304:	b	4e30c <ZBUFF_recommendedDOutSize@@Base+0xc4>
   4e308:	udiv	w8, w8, w3
   4e30c:	udiv	w10, w1, w8
   4e310:	cmp	w10, w9
   4e314:	b.cs	4e324 <ZBUFF_recommendedDOutSize@@Base+0xdc>  // b.hs, b.nlast
   4e318:	cmp	w9, w1
   4e31c:	csel	w10, w9, w1, cc  // cc = lo, ul, last
   4e320:	udiv	w8, w1, w10
   4e324:	mov	w0, w8
   4e328:	bfi	x0, x10, #32, #32
   4e32c:	ret

000000000004e330 <ZDICT_trainFromBuffer_cover@@Base>:
   4e330:	sub	sp, sp, #0x120
   4e334:	stp	x29, x30, [sp, #192]
   4e338:	stp	x26, x25, [sp, #224]
   4e33c:	stp	x24, x23, [sp, #240]
   4e340:	stp	x22, x21, [sp, #256]
   4e344:	stp	x20, x19, [sp, #272]
   4e348:	ldr	w25, [x5, #36]
   4e34c:	mov	x8, #0x3ff0000000000000    	// #4607182418800017408
   4e350:	adrp	x26, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4e354:	str	x28, [sp, #208]
   4e358:	str	x8, [x5, #16]
   4e35c:	str	w25, [x26, #920]
   4e360:	ldp	q1, q0, [x5, #16]
   4e364:	ldr	q2, [x5]
   4e368:	mov	x23, x0
   4e36c:	add	x0, sp, #0x60
   4e370:	add	x29, sp, #0xc0
   4e374:	mov	x24, x5
   4e378:	mov	w19, w4
   4e37c:	mov	x20, x3
   4e380:	mov	x21, x2
   4e384:	mov	x22, x1
   4e388:	stp	q1, q0, [sp, #112]
   4e38c:	str	q2, [sp, #96]
   4e390:	bl	4e5ec <ZDICT_trainFromBuffer_cover@@Base+0x2bc>
   4e394:	cbz	w0, 4e3b4 <ZDICT_trainFromBuffer_cover@@Base+0x84>
   4e398:	cbz	w19, 4e3c4 <ZDICT_trainFromBuffer_cover@@Base+0x94>
   4e39c:	cmp	x22, #0xff
   4e3a0:	b.hi	4e3d4 <ZDICT_trainFromBuffer_cover@@Base+0xa4>  // b.pmore
   4e3a4:	cmp	w25, #0x1
   4e3a8:	b.ge	4e544 <ZDICT_trainFromBuffer_cover@@Base+0x214>  // b.tcont
   4e3ac:	mov	x25, #0xffffffffffffffba    	// #-70
   4e3b0:	b	4e4c8 <ZDICT_trainFromBuffer_cover@@Base+0x198>
   4e3b4:	cmp	w25, #0x1
   4e3b8:	b.ge	4e4ec <ZDICT_trainFromBuffer_cover@@Base+0x1bc>  // b.tcont
   4e3bc:	mov	x25, #0xffffffffffffffd6    	// #-42
   4e3c0:	b	4e4c8 <ZDICT_trainFromBuffer_cover@@Base+0x198>
   4e3c4:	cmp	w25, #0x1
   4e3c8:	b.ge	4e518 <ZDICT_trainFromBuffer_cover@@Base+0x1e8>  // b.tcont
   4e3cc:	mov	x25, #0xffffffffffffffb8    	// #-72
   4e3d0:	b	4e4c8 <ZDICT_trainFromBuffer_cover@@Base+0x198>
   4e3d4:	ldr	w4, [x24, #4]
   4e3d8:	fmov	d0, #1.000000000000000000e+00
   4e3dc:	add	x0, sp, #0x60
   4e3e0:	mov	x1, x21
   4e3e4:	mov	x2, x20
   4e3e8:	mov	w3, w19
   4e3ec:	bl	4e630 <ZDICT_trainFromBuffer_cover@@Base+0x300>
   4e3f0:	mov	x25, x0
   4e3f4:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4e3f8:	cbnz	w0, 4e4c8 <ZDICT_trainFromBuffer_cover@@Base+0x198>
   4e3fc:	ldr	x1, [sp, #152]
   4e400:	ldr	w2, [x26, #920]
   4e404:	mov	x0, x22
   4e408:	bl	4e288 <ZBUFF_recommendedDOutSize@@Base+0x40>
   4e40c:	ldp	w8, w9, [x24]
   4e410:	add	x0, sp, #0x48
   4e414:	sub	w8, w8, w9
   4e418:	add	w1, w8, #0x1
   4e41c:	bl	4ea54 <ZDICT_trainFromBuffer_cover@@Base+0x724>
   4e420:	ldr	w8, [x26, #920]
   4e424:	cbz	w0, 4e4b4 <ZDICT_trainFromBuffer_cover@@Base+0x184>
   4e428:	cmp	w8, #0x2
   4e42c:	b.ge	4e56c <ZDICT_trainFromBuffer_cover@@Base+0x23c>  // b.tcont
   4e430:	ldp	q1, q0, [x24, #16]
   4e434:	ldr	q2, [x24]
   4e438:	ldr	x1, [sp, #160]
   4e43c:	add	x0, sp, #0x60
   4e440:	add	x2, sp, #0x48
   4e444:	add	x5, sp, #0x10
   4e448:	mov	x3, x23
   4e44c:	mov	x4, x22
   4e450:	stp	q1, q0, [sp, #32]
   4e454:	str	q2, [sp, #16]
   4e458:	bl	4eb14 <ZDICT_trainFromBuffer_cover@@Base+0x7e4>
   4e45c:	ldr	x8, [x24, #32]
   4e460:	ldr	w9, [x24, #40]
   4e464:	add	x2, x23, x0
   4e468:	sub	x3, x22, x0
   4e46c:	mov	x0, x23
   4e470:	mov	x1, x22
   4e474:	mov	x4, x21
   4e478:	mov	x5, x20
   4e47c:	mov	w6, w19
   4e480:	stp	x8, x9, [sp]
   4e484:	bl	46b0 <ZDICT_finalizeDictionary@plt>
   4e488:	mov	x25, x0
   4e48c:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4e490:	cbnz	w0, 4e4a0 <ZDICT_trainFromBuffer_cover@@Base+0x170>
   4e494:	ldr	w8, [x26, #920]
   4e498:	cmp	w8, #0x2
   4e49c:	b.ge	4e598 <ZDICT_trainFromBuffer_cover@@Base+0x268>  // b.tcont
   4e4a0:	add	x0, sp, #0x60
   4e4a4:	bl	4eab4 <ZDICT_trainFromBuffer_cover@@Base+0x784>
   4e4a8:	add	x0, sp, #0x48
   4e4ac:	bl	4ed7c <ZDICT_trainFromBuffer_cover@@Base+0xa4c>
   4e4b0:	b	4e4c8 <ZDICT_trainFromBuffer_cover@@Base+0x198>
   4e4b4:	cmp	w8, #0x1
   4e4b8:	b.ge	4e5c0 <ZDICT_trainFromBuffer_cover@@Base+0x290>  // b.tcont
   4e4bc:	add	x0, sp, #0x60
   4e4c0:	bl	4eab4 <ZDICT_trainFromBuffer_cover@@Base+0x784>
   4e4c4:	mov	x25, #0xffffffffffffffc0    	// #-64
   4e4c8:	mov	x0, x25
   4e4cc:	ldp	x20, x19, [sp, #272]
   4e4d0:	ldp	x22, x21, [sp, #256]
   4e4d4:	ldp	x24, x23, [sp, #240]
   4e4d8:	ldp	x26, x25, [sp, #224]
   4e4dc:	ldr	x28, [sp, #208]
   4e4e0:	ldp	x29, x30, [sp, #192]
   4e4e4:	add	sp, sp, #0x120
   4e4e8:	ret
   4e4ec:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e4f0:	ldr	x19, [x19, #4048]
   4e4f4:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4e4f8:	add	x0, x0, #0xeb8
   4e4fc:	mov	w1, #0x1b                  	// #27
   4e500:	ldr	x3, [x19]
   4e504:	mov	w2, #0x1                   	// #1
   4e508:	bl	48e0 <fwrite@plt>
   4e50c:	ldr	x0, [x19]
   4e510:	bl	4920 <fflush@plt>
   4e514:	b	4e3bc <ZDICT_trainFromBuffer_cover@@Base+0x8c>
   4e518:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e51c:	ldr	x19, [x19, #4048]
   4e520:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4e524:	add	x0, x0, #0xed4
   4e528:	mov	w1, #0x28                  	// #40
   4e52c:	ldr	x3, [x19]
   4e530:	mov	w2, #0x1                   	// #1
   4e534:	bl	48e0 <fwrite@plt>
   4e538:	ldr	x0, [x19]
   4e53c:	bl	4920 <fflush@plt>
   4e540:	b	4e3cc <ZDICT_trainFromBuffer_cover@@Base+0x9c>
   4e544:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e548:	ldr	x19, [x19, #4048]
   4e54c:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4e550:	add	x1, x1, #0xefd
   4e554:	mov	w2, #0x100                 	// #256
   4e558:	ldr	x0, [x19]
   4e55c:	bl	4ae0 <fprintf@plt>
   4e560:	ldr	x0, [x19]
   4e564:	bl	4920 <fflush@plt>
   4e568:	b	4e3ac <ZDICT_trainFromBuffer_cover@@Base+0x7c>
   4e56c:	adrp	x25, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e570:	ldr	x25, [x25, #4048]
   4e574:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4e578:	add	x0, x0, #0xf51
   4e57c:	mov	w1, #0x14                  	// #20
   4e580:	ldr	x3, [x25]
   4e584:	mov	w2, #0x1                   	// #1
   4e588:	bl	48e0 <fwrite@plt>
   4e58c:	ldr	x0, [x25]
   4e590:	bl	4920 <fflush@plt>
   4e594:	b	4e430 <ZDICT_trainFromBuffer_cover@@Base+0x100>
   4e598:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e59c:	ldr	x19, [x19, #4048]
   4e5a0:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4e5a4:	add	x1, x1, #0xf66
   4e5a8:	mov	w2, w25
   4e5ac:	ldr	x0, [x19]
   4e5b0:	bl	4ae0 <fprintf@plt>
   4e5b4:	ldr	x0, [x19]
   4e5b8:	bl	4920 <fflush@plt>
   4e5bc:	b	4e4a0 <ZDICT_trainFromBuffer_cover@@Base+0x170>
   4e5c0:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e5c4:	ldr	x19, [x19, #4048]
   4e5c8:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4e5cc:	add	x0, x0, #0xf25
   4e5d0:	mov	w1, #0x2b                  	// #43
   4e5d4:	ldr	x3, [x19]
   4e5d8:	mov	w2, #0x1                   	// #1
   4e5dc:	bl	48e0 <fwrite@plt>
   4e5e0:	ldr	x0, [x19]
   4e5e4:	bl	4920 <fflush@plt>
   4e5e8:	b	4e4bc <ZDICT_trainFromBuffer_cover@@Base+0x18c>
   4e5ec:	ldr	w8, [x0, #4]
   4e5f0:	cbz	w8, 4e628 <ZDICT_trainFromBuffer_cover@@Base+0x2f8>
   4e5f4:	ldr	w9, [x0]
   4e5f8:	cmp	w8, w9
   4e5fc:	b.hi	4e628 <ZDICT_trainFromBuffer_cover@@Base+0x2f8>  // b.pmore
   4e600:	cmp	x9, x1
   4e604:	b.hi	4e628 <ZDICT_trainFromBuffer_cover@@Base+0x2f8>  // b.pmore
   4e608:	ldr	d0, [x0, #16]
   4e60c:	fmov	d1, #1.000000000000000000e+00
   4e610:	fcmp	d0, #0.0
   4e614:	cset	w8, hi  // hi = pmore
   4e618:	fcmp	d0, d1
   4e61c:	cset	w9, le
   4e620:	and	w0, w9, w8
   4e624:	ret
   4e628:	mov	w0, wzr
   4e62c:	ret
   4e630:	sub	sp, sp, #0x80
   4e634:	stp	x20, x19, [sp, #112]
   4e638:	str	x1, [sp, #8]
   4e63c:	mov	x19, x0
   4e640:	mov	x0, x2
   4e644:	mov	w1, w3
   4e648:	stp	d9, d8, [sp, #16]
   4e64c:	stp	x29, x30, [sp, #32]
   4e650:	stp	x28, x27, [sp, #48]
   4e654:	stp	x26, x25, [sp, #64]
   4e658:	stp	x24, x23, [sp, #80]
   4e65c:	stp	x22, x21, [sp, #96]
   4e660:	add	x29, sp, #0x10
   4e664:	mov	v8.16b, v0.16b
   4e668:	mov	w22, w4
   4e66c:	mov	w20, w3
   4e670:	mov	x21, x2
   4e674:	bl	4e25c <ZBUFF_recommendedDOutSize@@Base+0x14>
   4e678:	ucvtf	d0, w20
   4e67c:	fmov	d9, #1.000000000000000000e+00
   4e680:	fmul	d0, d0, d8
   4e684:	fcmp	d8, d9
   4e688:	fcvtzu	w8, d0
   4e68c:	csel	w9, w8, wzr, mi  // mi = first
   4e690:	fcmp	d8, d9
   4e694:	mov	x28, x0
   4e698:	mov	x27, x0
   4e69c:	sub	w23, w20, w9
   4e6a0:	csel	w25, w8, w20, mi  // mi = first
   4e6a4:	mov	x26, x0
   4e6a8:	b.pl	4e6bc <ZDICT_trainFromBuffer_cover@@Base+0x38c>  // b.nfrst
   4e6ac:	mov	x0, x21
   4e6b0:	mov	w1, w25
   4e6b4:	bl	4e25c <ZBUFF_recommendedDOutSize@@Base+0x14>
   4e6b8:	mov	x26, x0
   4e6bc:	fcmp	d8, d9
   4e6c0:	b.pl	4e6d4 <ZDICT_trainFromBuffer_cover@@Base+0x3a4>  // b.nfrst
   4e6c4:	add	x0, x21, w25, uxtw #3
   4e6c8:	mov	w1, w23
   4e6cc:	bl	4e25c <ZBUFF_recommendedDOutSize@@Base+0x14>
   4e6d0:	mov	x27, x0
   4e6d4:	mov	w8, w22
   4e6d8:	cmp	w22, #0x8
   4e6dc:	mov	w9, #0x8                   	// #8
   4e6e0:	csel	x24, x8, x9, hi  // hi = pmore
   4e6e4:	cmp	x28, x24
   4e6e8:	b.cc	4e728 <ZDICT_trainFromBuffer_cover@@Base+0x3f8>  // b.lo, b.ul, b.last
   4e6ec:	mov	w8, #0xffffffff            	// #-1
   4e6f0:	cmp	x28, x8
   4e6f4:	b.cs	4e728 <ZDICT_trainFromBuffer_cover@@Base+0x3f8>  // b.hs, b.nlast
   4e6f8:	cmp	w25, #0x4
   4e6fc:	b.hi	4e760 <ZDICT_trainFromBuffer_cover@@Base+0x430>  // b.pmore
   4e700:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4e704:	ldr	w8, [x8, #920]
   4e708:	cmp	w8, #0x1
   4e70c:	b.lt	4e738 <ZDICT_trainFromBuffer_cover@@Base+0x408>  // b.tstop
   4e710:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e714:	ldr	x19, [x19, #4048]
   4e718:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4e71c:	add	x1, x1, #0x64
   4e720:	mov	w2, w25
   4e724:	b	4e91c <ZDICT_trainFromBuffer_cover@@Base+0x5ec>
   4e728:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4e72c:	ldr	w8, [x8, #920]
   4e730:	cmp	w8, #0x1
   4e734:	b.ge	4e928 <ZDICT_trainFromBuffer_cover@@Base+0x5f8>  // b.tcont
   4e738:	mov	x0, #0xffffffffffffffb8    	// #-72
   4e73c:	ldp	x20, x19, [sp, #112]
   4e740:	ldp	x22, x21, [sp, #96]
   4e744:	ldp	x24, x23, [sp, #80]
   4e748:	ldp	x26, x25, [sp, #64]
   4e74c:	ldp	x28, x27, [sp, #48]
   4e750:	ldp	x29, x30, [sp, #32]
   4e754:	ldp	d9, d8, [sp, #16]
   4e758:	add	sp, sp, #0x80
   4e75c:	ret
   4e760:	cbz	w23, 4e8f8 <ZDICT_trainFromBuffer_cover@@Base+0x5c8>
   4e764:	movi	v0.2d, #0x0
   4e768:	str	xzr, [x19, #80]
   4e76c:	stp	q0, q0, [x19, #48]
   4e770:	stp	q0, q0, [x19, #16]
   4e774:	str	q0, [x19]
   4e778:	adrp	x28, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4e77c:	ldr	w8, [x28, #920]
   4e780:	cmp	w8, #0x2
   4e784:	b.ge	4e954 <ZDICT_trainFromBuffer_cover@@Base+0x624>  // b.tcont
   4e788:	ldr	w8, [x28, #920]
   4e78c:	cmp	w8, #0x2
   4e790:	b.ge	4e988 <ZDICT_trainFromBuffer_cover@@Base+0x658>  // b.tcont
   4e794:	ldr	x8, [sp, #8]
   4e798:	sub	x11, x26, x24
   4e79c:	mov	w10, w23
   4e7a0:	mov	w9, w25
   4e7a4:	str	x8, [x19]
   4e7a8:	mov	w8, w20
   4e7ac:	stp	x21, x8, [x19, #16]
   4e7b0:	add	x8, x11, #0x1
   4e7b4:	lsl	x23, x8, #2
   4e7b8:	mov	x0, x23
   4e7bc:	stp	x9, x10, [x19, #32]
   4e7c0:	str	x8, [x19, #56]
   4e7c4:	bl	4640 <malloc@plt>
   4e7c8:	str	x0, [x19, #48]
   4e7cc:	mov	x0, x23
   4e7d0:	bl	4640 <malloc@plt>
   4e7d4:	add	w8, w20, #0x1
   4e7d8:	str	x0, [x19, #72]
   4e7dc:	lsl	x0, x8, #3
   4e7e0:	bl	4640 <malloc@plt>
   4e7e4:	ldr	x8, [x19, #48]
   4e7e8:	str	x0, [x19, #8]
   4e7ec:	cbz	x8, 4e8dc <ZDICT_trainFromBuffer_cover@@Base+0x5ac>
   4e7f0:	cbz	x0, 4e8dc <ZDICT_trainFromBuffer_cover@@Base+0x5ac>
   4e7f4:	ldr	x8, [x19, #72]
   4e7f8:	cbz	x8, 4e8dc <ZDICT_trainFromBuffer_cover@@Base+0x5ac>
   4e7fc:	ldr	x8, [x19, #8]
   4e800:	str	xzr, [x19, #64]
   4e804:	str	w22, [x19, #80]
   4e808:	str	xzr, [x8]
   4e80c:	cbz	w20, 4e838 <ZDICT_trainFromBuffer_cover@@Base+0x508>
   4e810:	mov	w9, #0x1                   	// #1
   4e814:	sub	w10, w9, #0x1
   4e818:	lsl	x10, x10, #3
   4e81c:	ldr	x11, [x8, x10]
   4e820:	ldr	x10, [x21, x10]
   4e824:	add	x10, x10, x11
   4e828:	str	x10, [x8, w9, uxtw #3]
   4e82c:	add	w9, w9, #0x1
   4e830:	cmp	w9, w20
   4e834:	b.ls	4e814 <ZDICT_trainFromBuffer_cover@@Base+0x4e4>  // b.plast
   4e838:	ldr	w8, [x28, #920]
   4e83c:	cmp	w8, #0x2
   4e840:	b.ge	4e9e8 <ZDICT_trainFromBuffer_cover@@Base+0x6b8>  // b.tcont
   4e844:	ldr	x1, [x19, #56]
   4e848:	cbz	x1, 4e864 <ZDICT_trainFromBuffer_cover@@Base+0x534>
   4e84c:	ldp	x8, x1, [x19, #48]
   4e850:	mov	x9, xzr
   4e854:	str	w9, [x8, x9, lsl #2]
   4e858:	add	w9, w9, #0x1
   4e85c:	cmp	x1, x9
   4e860:	b.hi	4e854 <ZDICT_trainFromBuffer_cover@@Base+0x524>  // b.pmore
   4e864:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4e868:	str	x19, [x8, #952]
   4e86c:	ldr	w8, [x19, #80]
   4e870:	ldr	x0, [x19, #48]
   4e874:	adrp	x9, 4f000 <ZDICT_trainFromBuffer_cover@@Base+0xcd0>
   4e878:	adrp	x10, 4f000 <ZDICT_trainFromBuffer_cover@@Base+0xcd0>
   4e87c:	add	x9, x9, #0xc38
   4e880:	add	x10, x10, #0xbec
   4e884:	cmp	w8, #0x9
   4e888:	csel	x3, x10, x9, cc  // cc = lo, ul, last
   4e88c:	mov	w2, #0x4                   	// #4
   4e890:	bl	4550 <qsort@plt>
   4e894:	ldr	w8, [x28, #920]
   4e898:	cmp	w8, #0x2
   4e89c:	b.ge	4ea1c <ZDICT_trainFromBuffer_cover@@Base+0x6ec>  // b.tcont
   4e8a0:	ldr	w8, [x19, #80]
   4e8a4:	ldp	x0, x1, [x19, #48]
   4e8a8:	adrp	x9, 4f000 <ZDICT_trainFromBuffer_cover@@Base+0xcd0>
   4e8ac:	adrp	x10, 4f000 <ZDICT_trainFromBuffer_cover@@Base+0xcd0>
   4e8b0:	add	x9, x9, #0xd88
   4e8b4:	add	x10, x10, #0xd1c
   4e8b8:	cmp	w8, #0x9
   4e8bc:	csel	x3, x10, x9, cc  // cc = lo, ul, last
   4e8c0:	mov	x2, x19
   4e8c4:	bl	4fc84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x918>
   4e8c8:	ldr	x8, [x19, #48]
   4e8cc:	mov	x0, xzr
   4e8d0:	str	xzr, [x19, #48]
   4e8d4:	str	x8, [x19, #64]
   4e8d8:	b	4e73c <ZDICT_trainFromBuffer_cover@@Base+0x40c>
   4e8dc:	ldr	w8, [x28, #920]
   4e8e0:	cmp	w8, #0x1
   4e8e4:	b.ge	4e9bc <ZDICT_trainFromBuffer_cover@@Base+0x68c>  // b.tcont
   4e8e8:	mov	x0, x19
   4e8ec:	bl	4eab4 <ZDICT_trainFromBuffer_cover@@Base+0x784>
   4e8f0:	mov	x0, #0xffffffffffffffc0    	// #-64
   4e8f4:	b	4e73c <ZDICT_trainFromBuffer_cover@@Base+0x40c>
   4e8f8:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4e8fc:	ldr	w8, [x8, #920]
   4e900:	cmp	w8, #0x1
   4e904:	b.lt	4e738 <ZDICT_trainFromBuffer_cover@@Base+0x408>  // b.tstop
   4e908:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e90c:	ldr	x19, [x19, #4048]
   4e910:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4e914:	add	x1, x1, #0x9b
   4e918:	mov	w2, w23
   4e91c:	ldr	x0, [x19]
   4e920:	bl	4ae0 <fprintf@plt>
   4e924:	b	4e948 <ZDICT_trainFromBuffer_cover@@Base+0x618>
   4e928:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e92c:	ldr	x19, [x19, #4048]
   4e930:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4e934:	lsr	x2, x28, #20
   4e938:	add	x1, x1, #0x24
   4e93c:	ldr	x0, [x19]
   4e940:	mov	w3, #0xfff                 	// #4095
   4e944:	bl	4ae0 <fprintf@plt>
   4e948:	ldr	x0, [x19]
   4e94c:	bl	4920 <fflush@plt>
   4e950:	b	4e738 <ZDICT_trainFromBuffer_cover@@Base+0x408>
   4e954:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e958:	ldr	x8, [x8, #4048]
   4e95c:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4e960:	add	x1, x1, #0xd1
   4e964:	mov	w2, w25
   4e968:	ldr	x0, [x8]
   4e96c:	mov	w3, w26
   4e970:	bl	4ae0 <fprintf@plt>
   4e974:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e978:	ldr	x8, [x8, #4048]
   4e97c:	ldr	x0, [x8]
   4e980:	bl	4920 <fflush@plt>
   4e984:	b	4e788 <ZDICT_trainFromBuffer_cover@@Base+0x458>
   4e988:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e98c:	ldr	x8, [x8, #4048]
   4e990:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4e994:	add	x1, x1, #0xfa
   4e998:	mov	w2, w23
   4e99c:	ldr	x0, [x8]
   4e9a0:	mov	w3, w27
   4e9a4:	bl	4ae0 <fprintf@plt>
   4e9a8:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e9ac:	ldr	x8, [x8, #4048]
   4e9b0:	ldr	x0, [x8]
   4e9b4:	bl	4920 <fflush@plt>
   4e9b8:	b	4e794 <ZDICT_trainFromBuffer_cover@@Base+0x464>
   4e9bc:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e9c0:	ldr	x20, [x20, #4048]
   4e9c4:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4e9c8:	add	x0, x0, #0x122
   4e9cc:	mov	w1, #0x23                  	// #35
   4e9d0:	ldr	x3, [x20]
   4e9d4:	mov	w2, #0x1                   	// #1
   4e9d8:	bl	48e0 <fwrite@plt>
   4e9dc:	ldr	x0, [x20]
   4e9e0:	bl	4920 <fflush@plt>
   4e9e4:	b	4e8e8 <ZDICT_trainFromBuffer_cover@@Base+0x5b8>
   4e9e8:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4e9ec:	ldr	x20, [x20, #4048]
   4e9f0:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4e9f4:	add	x0, x0, #0x146
   4e9f8:	mov	w1, #0x22                  	// #34
   4e9fc:	ldr	x3, [x20]
   4ea00:	mov	w2, #0x1                   	// #1
   4ea04:	bl	48e0 <fwrite@plt>
   4ea08:	ldr	x0, [x20]
   4ea0c:	bl	4920 <fflush@plt>
   4ea10:	ldr	x1, [x19, #56]
   4ea14:	cbnz	x1, 4e84c <ZDICT_trainFromBuffer_cover@@Base+0x51c>
   4ea18:	b	4e864 <ZDICT_trainFromBuffer_cover@@Base+0x534>
   4ea1c:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4ea20:	ldr	x20, [x20, #4048]
   4ea24:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4ea28:	add	x0, x0, #0x169
   4ea2c:	mov	w1, #0x16                  	// #22
   4ea30:	ldr	x3, [x20]
   4ea34:	mov	w2, #0x1                   	// #1
   4ea38:	bl	48e0 <fwrite@plt>
   4ea3c:	ldr	x0, [x20]
   4ea40:	bl	4920 <fflush@plt>
   4ea44:	b	4e8a0 <ZDICT_trainFromBuffer_cover@@Base+0x570>
   4ea48:	cmn	x0, #0x78
   4ea4c:	cset	w0, hi  // hi = pmore
   4ea50:	ret
   4ea54:	stp	x29, x30, [sp, #-32]!
   4ea58:	str	x19, [sp, #16]
   4ea5c:	mov	x19, x0
   4ea60:	mov	w0, w1
   4ea64:	mov	x29, sp
   4ea68:	bl	4febc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb50>
   4ea6c:	add	w8, w0, #0x2
   4ea70:	mov	w9, #0x1                   	// #1
   4ea74:	lsl	w9, w9, w8
   4ea78:	stp	w8, w9, [x19, #8]
   4ea7c:	sub	w8, w9, #0x1
   4ea80:	lsl	x0, x9, #3
   4ea84:	str	w8, [x19, #16]
   4ea88:	bl	4640 <malloc@plt>
   4ea8c:	str	x0, [x19]
   4ea90:	cbz	x0, 4eaa4 <ZDICT_trainFromBuffer_cover@@Base+0x774>
   4ea94:	mov	x0, x19
   4ea98:	bl	4fec8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb5c>
   4ea9c:	mov	w0, #0x1                   	// #1
   4eaa0:	b	4eaa8 <ZDICT_trainFromBuffer_cover@@Base+0x778>
   4eaa4:	str	xzr, [x19, #8]
   4eaa8:	ldr	x19, [sp, #16]
   4eaac:	ldp	x29, x30, [sp], #32
   4eab0:	ret
   4eab4:	stp	x29, x30, [sp, #-32]!
   4eab8:	str	x19, [sp, #16]
   4eabc:	mov	x29, sp
   4eac0:	cbz	x0, 4eb08 <ZDICT_trainFromBuffer_cover@@Base+0x7d8>
   4eac4:	mov	x19, x0
   4eac8:	ldr	x0, [x0, #48]
   4eacc:	cbz	x0, 4ead8 <ZDICT_trainFromBuffer_cover@@Base+0x7a8>
   4ead0:	bl	4880 <free@plt>
   4ead4:	str	xzr, [x19, #48]
   4ead8:	ldr	x0, [x19, #64]
   4eadc:	cbz	x0, 4eae8 <ZDICT_trainFromBuffer_cover@@Base+0x7b8>
   4eae0:	bl	4880 <free@plt>
   4eae4:	str	xzr, [x19, #64]
   4eae8:	ldr	x0, [x19, #72]
   4eaec:	cbz	x0, 4eaf8 <ZDICT_trainFromBuffer_cover@@Base+0x7c8>
   4eaf0:	bl	4880 <free@plt>
   4eaf4:	str	xzr, [x19, #72]
   4eaf8:	ldr	x0, [x19, #8]
   4eafc:	cbz	x0, 4eb08 <ZDICT_trainFromBuffer_cover@@Base+0x7d8>
   4eb00:	bl	4880 <free@plt>
   4eb04:	str	xzr, [x19, #8]
   4eb08:	ldr	x19, [sp, #16]
   4eb0c:	ldp	x29, x30, [sp], #32
   4eb10:	ret
   4eb14:	sub	sp, sp, #0xa0
   4eb18:	stp	x29, x30, [sp, #64]
   4eb1c:	stp	x28, x27, [sp, #80]
   4eb20:	stp	x26, x25, [sp, #96]
   4eb24:	stp	x24, x23, [sp, #112]
   4eb28:	stp	x22, x21, [sp, #128]
   4eb2c:	stp	x20, x19, [sp, #144]
   4eb30:	ldr	w8, [x0, #56]
   4eb34:	mov	x22, x2
   4eb38:	ldr	w2, [x5]
   4eb3c:	mov	x21, x4
   4eb40:	str	x3, [sp, #8]
   4eb44:	mov	x23, x0
   4eb48:	mov	x24, x1
   4eb4c:	mov	w3, #0x4                   	// #4
   4eb50:	mov	w0, w21
   4eb54:	mov	w1, w8
   4eb58:	add	x29, sp, #0x40
   4eb5c:	mov	x20, x5
   4eb60:	bl	4e2ec <ZBUFF_recommendedDOutSize@@Base+0xa4>
   4eb64:	adrp	x10, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4eb68:	ubfx	x8, x0, #3, #29
   4eb6c:	ldr	w10, [x10, #920]
   4eb70:	mov	w9, #0x64                  	// #100
   4eb74:	cmp	w8, #0x64
   4eb78:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   4eb7c:	cmp	w8, #0xa
   4eb80:	mov	w9, #0xa                   	// #10
   4eb84:	mov	x26, x0
   4eb88:	csel	w27, w8, w9, hi  // hi = pmore
   4eb8c:	cmp	w10, #0x2
   4eb90:	lsr	x25, x0, #32
   4eb94:	b.ge	4ecec <ZDICT_trainFromBuffer_cover@@Base+0x9bc>  // b.tcont
   4eb98:	cbz	x21, 4ed18 <ZDICT_trainFromBuffer_cover@@Base+0x9e8>
   4eb9c:	mov	x8, x21
   4eba0:	mov	x21, xzr
   4eba4:	mov	x28, xzr
   4eba8:	and	x19, x26, #0xffffffff
   4ebac:	mov	x26, x8
   4ebb0:	str	x8, [sp]
   4ebb4:	ldp	q2, q0, [x20, #16]
   4ebb8:	ldr	q1, [x20]
   4ebbc:	mul	w3, w28, w25
   4ebc0:	add	w4, w3, w25
   4ebc4:	add	x5, sp, #0x10
   4ebc8:	mov	x0, x23
   4ebcc:	mov	x1, x24
   4ebd0:	mov	x2, x22
   4ebd4:	stp	q2, q0, [sp, #32]
   4ebd8:	str	q1, [sp, #16]
   4ebdc:	bl	4feec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb80>
   4ebe0:	cbz	w1, 4ec18 <ZDICT_trainFromBuffer_cover@@Base+0x8e8>
   4ebe4:	ldr	w8, [x20, #4]
   4ebe8:	lsr	x9, x0, #32
   4ebec:	mvn	w10, w0
   4ebf0:	add	w9, w10, w9
   4ebf4:	add	w9, w9, w8
   4ebf8:	cmp	x26, x9
   4ebfc:	csel	x2, x9, x26, hi  // hi = pmore
   4ec00:	cmp	x2, x8
   4ec04:	b.cs	4ec2c <ZDICT_trainFromBuffer_cover@@Base+0x8fc>  // b.hs, b.nlast
   4ec08:	mov	x21, xzr
   4ec0c:	mov	w8, #0x1                   	// #1
   4ec10:	tbz	w8, #0, 4ec94 <ZDICT_trainFromBuffer_cover@@Base+0x964>
   4ec14:	b	4ed1c <ZDICT_trainFromBuffer_cover@@Base+0x9ec>
   4ec18:	add	x21, x21, #0x1
   4ec1c:	cmp	x21, x27
   4ec20:	cset	w8, cs  // cs = hs, nlast
   4ec24:	tbz	w8, #0, 4ec94 <ZDICT_trainFromBuffer_cover@@Base+0x964>
   4ec28:	b	4ed1c <ZDICT_trainFromBuffer_cover@@Base+0x9ec>
   4ec2c:	ldr	x8, [sp, #8]
   4ec30:	ldr	x9, [x23]
   4ec34:	sub	x26, x26, x2
   4ec38:	add	x8, x8, x26
   4ec3c:	add	x1, x9, w0, uxtw
   4ec40:	mov	x0, x8
   4ec44:	bl	4420 <memcpy@plt>
   4ec48:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4ec4c:	ldr	w8, [x8, #920]
   4ec50:	cmp	w8, #0x2
   4ec54:	b.lt	4ec88 <ZDICT_trainFromBuffer_cover@@Base+0x958>  // b.tstop
   4ec58:	bl	4480 <clock@plt>
   4ec5c:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4ec60:	ldr	x8, [x8, #944]
   4ec64:	mov	w9, #0x49f0                	// #18928
   4ec68:	movk	w9, #0x2, lsl #16
   4ec6c:	sub	x8, x0, x8
   4ec70:	cmp	x8, x9
   4ec74:	b.gt	4eca8 <ZDICT_trainFromBuffer_cover@@Base+0x978>
   4ec78:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4ec7c:	ldr	w8, [x8, #920]
   4ec80:	cmp	w8, #0x4
   4ec84:	b.ge	4eca8 <ZDICT_trainFromBuffer_cover@@Base+0x978>  // b.tcont
   4ec88:	mov	x21, xzr
   4ec8c:	mov	w8, wzr
   4ec90:	tbnz	w8, #0, 4ed1c <ZDICT_trainFromBuffer_cover@@Base+0x9ec>
   4ec94:	add	x8, x28, #0x1
   4ec98:	udiv	x9, x8, x19
   4ec9c:	msub	x28, x9, x19, x8
   4eca0:	cbnz	x26, 4ebb4 <ZDICT_trainFromBuffer_cover@@Base+0x884>
   4eca4:	b	4ed1c <ZDICT_trainFromBuffer_cover@@Base+0x9ec>
   4eca8:	bl	4480 <clock@plt>
   4ecac:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4ecb0:	str	x0, [x8, #944]
   4ecb4:	adrp	x21, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4ecb8:	ldr	x21, [x21, #4048]
   4ecbc:	ldr	x9, [sp]
   4ecc0:	mov	w10, #0x64                  	// #100
   4ecc4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4ecc8:	ldr	x0, [x21]
   4eccc:	sub	x8, x9, x26
   4ecd0:	mul	x8, x8, x10
   4ecd4:	udiv	x2, x8, x9
   4ecd8:	add	x1, x1, #0x10
   4ecdc:	bl	4ae0 <fprintf@plt>
   4ece0:	ldr	x0, [x21]
   4ece4:	bl	4920 <fflush@plt>
   4ece8:	b	4ec88 <ZDICT_trainFromBuffer_cover@@Base+0x958>
   4ecec:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4ecf0:	ldr	x19, [x19, #4048]
   4ecf4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4ecf8:	add	x1, x1, #0x180
   4ecfc:	mov	w2, w26
   4ed00:	ldr	x0, [x19]
   4ed04:	mov	w3, w25
   4ed08:	bl	4ae0 <fprintf@plt>
   4ed0c:	ldr	x0, [x19]
   4ed10:	bl	4920 <fflush@plt>
   4ed14:	cbnz	x21, 4eb9c <ZDICT_trainFromBuffer_cover@@Base+0x86c>
   4ed18:	mov	x26, x21
   4ed1c:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4ed20:	ldr	w8, [x8, #920]
   4ed24:	cmp	w8, #0x2
   4ed28:	b.ge	4ed50 <ZDICT_trainFromBuffer_cover@@Base+0xa20>  // b.tcont
   4ed2c:	mov	x0, x26
   4ed30:	ldp	x20, x19, [sp, #144]
   4ed34:	ldp	x22, x21, [sp, #128]
   4ed38:	ldp	x24, x23, [sp, #112]
   4ed3c:	ldp	x26, x25, [sp, #96]
   4ed40:	ldp	x28, x27, [sp, #80]
   4ed44:	ldp	x29, x30, [sp, #64]
   4ed48:	add	sp, sp, #0xa0
   4ed4c:	ret
   4ed50:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4ed54:	ldr	x19, [x19, #4048]
   4ed58:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4ed5c:	adrp	x2, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   4ed60:	add	x1, x1, #0x1d
   4ed64:	ldr	x0, [x19]
   4ed68:	add	x2, x2, #0x414
   4ed6c:	bl	4ae0 <fprintf@plt>
   4ed70:	ldr	x0, [x19]
   4ed74:	bl	4920 <fflush@plt>
   4ed78:	b	4ed2c <ZDICT_trainFromBuffer_cover@@Base+0x9fc>
   4ed7c:	stp	x29, x30, [sp, #-32]!
   4ed80:	str	x19, [sp, #16]
   4ed84:	mov	x19, x0
   4ed88:	ldr	x0, [x0]
   4ed8c:	mov	x29, sp
   4ed90:	cbz	x0, 4ed98 <ZDICT_trainFromBuffer_cover@@Base+0xa68>
   4ed94:	bl	4880 <free@plt>
   4ed98:	str	xzr, [x19]
   4ed9c:	str	wzr, [x19, #12]
   4eda0:	ldr	x19, [sp, #16]
   4eda4:	ldp	x29, x30, [sp], #32
   4eda8:	ret
   4edac:	sub	sp, sp, #0x80
   4edb0:	stp	x29, x30, [sp, #32]
   4edb4:	stp	x28, x27, [sp, #48]
   4edb8:	stp	x26, x25, [sp, #64]
   4edbc:	stp	x24, x23, [sp, #80]
   4edc0:	stp	x22, x21, [sp, #96]
   4edc4:	stp	x20, x19, [sp, #112]
   4edc8:	ldr	d0, [x0, #16]
   4edcc:	str	d8, [sp, #16]
   4edd0:	fmov	d8, #1.000000000000000000e+00
   4edd4:	add	x29, sp, #0x10
   4edd8:	fcmp	d0, d8
   4eddc:	csel	x9, x4, xzr, mi  // mi = first
   4ede0:	mov	x20, x7
   4ede4:	mov	x25, x6
   4ede8:	mov	x19, x5
   4edec:	mov	x21, x2
   4edf0:	mov	x22, x1
   4edf4:	mov	x24, x0
   4edf8:	cmp	x9, x5
   4edfc:	mov	x0, xzr
   4ee00:	str	x3, [x29, #8]
   4ee04:	str	x4, [sp, #8]
   4ee08:	b.cs	4ee2c <ZDICT_trainFromBuffer_cover@@Base+0xafc>  // b.hs, b.nlast
   4ee0c:	mov	x0, xzr
   4ee10:	sub	x8, x19, x9
   4ee14:	add	x9, x22, x9, lsl #3
   4ee18:	ldr	x10, [x9], #8
   4ee1c:	cmp	x10, x0
   4ee20:	csel	x0, x10, x0, hi  // hi = pmore
   4ee24:	subs	x8, x8, #0x1
   4ee28:	b.ne	4ee18 <ZDICT_trainFromBuffer_cover@@Base+0xae8>  // b.any
   4ee2c:	bl	4930 <ZSTD_compressBound@plt>
   4ee30:	mov	x28, x0
   4ee34:	bl	4640 <malloc@plt>
   4ee38:	mov	x23, x0
   4ee3c:	bl	46c0 <ZSTD_createCCtx@plt>
   4ee40:	ldr	w2, [x24, #32]
   4ee44:	mov	x26, x0
   4ee48:	mov	x0, x25
   4ee4c:	mov	x1, x20
   4ee50:	bl	4860 <ZSTD_createCDict@plt>
   4ee54:	mov	x27, x0
   4ee58:	mov	x25, #0xffffffffffffffff    	// #-1
   4ee5c:	cbz	x23, 4eed0 <ZDICT_trainFromBuffer_cover@@Base+0xba0>
   4ee60:	cbz	x26, 4eed0 <ZDICT_trainFromBuffer_cover@@Base+0xba0>
   4ee64:	cbz	x27, 4eed0 <ZDICT_trainFromBuffer_cover@@Base+0xba0>
   4ee68:	ldr	d0, [x24, #16]
   4ee6c:	ldr	x8, [sp, #8]
   4ee70:	mov	x25, x20
   4ee74:	fcmp	d0, d8
   4ee78:	csel	x20, x8, xzr, mi  // mi = first
   4ee7c:	cmp	x20, x19
   4ee80:	b.cs	4eed0 <ZDICT_trainFromBuffer_cover@@Base+0xba0>  // b.hs, b.nlast
   4ee84:	ldr	x9, [x29, #8]
   4ee88:	lsl	x8, x20, #3
   4ee8c:	ldr	x4, [x22, x8]
   4ee90:	mov	x0, x26
   4ee94:	ldr	x9, [x9, x8]
   4ee98:	mov	x1, x23
   4ee9c:	mov	x2, x28
   4eea0:	mov	x5, x27
   4eea4:	add	x3, x21, x9
   4eea8:	bl	4750 <ZSTD_compress_usingCDict@plt>
   4eeac:	mov	x24, x0
   4eeb0:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4eeb4:	cmp	w0, #0x0
   4eeb8:	csel	x8, x25, xzr, eq  // eq = none
   4eebc:	add	x25, x8, x24
   4eec0:	cbnz	w0, 4eed0 <ZDICT_trainFromBuffer_cover@@Base+0xba0>
   4eec4:	add	x20, x20, #0x1
   4eec8:	cmp	x20, x19
   4eecc:	b.cc	4ee84 <ZDICT_trainFromBuffer_cover@@Base+0xb54>  // b.lo, b.ul, b.last
   4eed0:	mov	x0, x26
   4eed4:	bl	4590 <ZSTD_freeCCtx@plt>
   4eed8:	mov	x0, x27
   4eedc:	bl	4560 <ZSTD_freeCDict@plt>
   4eee0:	cbz	x23, 4eeec <ZDICT_trainFromBuffer_cover@@Base+0xbbc>
   4eee4:	mov	x0, x23
   4eee8:	bl	4880 <free@plt>
   4eeec:	mov	x0, x25
   4eef0:	ldp	x20, x19, [sp, #112]
   4eef4:	ldp	x22, x21, [sp, #96]
   4eef8:	ldp	x24, x23, [sp, #80]
   4eefc:	ldp	x26, x25, [sp, #64]
   4ef00:	ldp	x28, x27, [sp, #48]
   4ef04:	ldp	x29, x30, [sp, #32]
   4ef08:	ldr	d8, [sp, #16]
   4ef0c:	add	sp, sp, #0x80
   4ef10:	ret
   4ef14:	cbz	x0, 4ef34 <ZDICT_trainFromBuffer_cover@@Base+0xc04>
   4ef18:	mov	x8, #0xffffffffffffffff    	// #-1
   4ef1c:	movi	v0.2d, #0x0
   4ef20:	stp	xzr, xzr, [x0, #8]
   4ef24:	str	xzr, [x0, #24]
   4ef28:	str	x8, [x0, #80]
   4ef2c:	stp	q0, q0, [x0, #32]
   4ef30:	str	q0, [x0, #64]
   4ef34:	ret
   4ef38:	cbz	x0, 4ef48 <ZDICT_trainFromBuffer_cover@@Base+0xc18>
   4ef3c:	ldr	x8, [x0, #8]
   4ef40:	cbz	x8, 4ef48 <ZDICT_trainFromBuffer_cover@@Base+0xc18>
   4ef44:	b	4ef44 <ZDICT_trainFromBuffer_cover@@Base+0xc14>
   4ef48:	ret
   4ef4c:	stp	x29, x30, [sp, #-16]!
   4ef50:	mov	x29, sp
   4ef54:	cbz	x0, 4ef64 <ZDICT_trainFromBuffer_cover@@Base+0xc34>
   4ef58:	ldr	x0, [x0, #16]
   4ef5c:	cbz	x0, 4ef64 <ZDICT_trainFromBuffer_cover@@Base+0xc34>
   4ef60:	bl	4880 <free@plt>
   4ef64:	ldp	x29, x30, [sp], #16
   4ef68:	ret
   4ef6c:	cbz	x0, 4ef7c <ZDICT_trainFromBuffer_cover@@Base+0xc4c>
   4ef70:	ldr	x8, [x0, #8]
   4ef74:	add	x8, x8, #0x1
   4ef78:	str	x8, [x0, #8]
   4ef7c:	ret
   4ef80:	stp	x29, x30, [sp, #-64]!
   4ef84:	str	x23, [sp, #16]
   4ef88:	stp	x22, x21, [sp, #32]
   4ef8c:	stp	x20, x19, [sp, #48]
   4ef90:	mov	x29, sp
   4ef94:	cbz	x0, 4f028 <ZDICT_trainFromBuffer_cover@@Base+0xcf8>
   4ef98:	ldp	x21, x23, [x2, #8]
   4ef9c:	ldr	x8, [x0, #8]
   4efa0:	ldr	x9, [x0, #80]
   4efa4:	ldr	x22, [x2]
   4efa8:	mov	x19, x0
   4efac:	sub	x8, x8, #0x1
   4efb0:	cmp	x23, x9
   4efb4:	str	x8, [x0, #8]
   4efb8:	b.cs	4f028 <ZDICT_trainFromBuffer_cover@@Base+0xcf8>  // b.hs, b.nlast
   4efbc:	ldr	x0, [x19, #16]
   4efc0:	mov	x20, x1
   4efc4:	cbz	x0, 4efdc <ZDICT_trainFromBuffer_cover@@Base+0xcac>
   4efc8:	ldr	x8, [x19, #24]
   4efcc:	cmp	x8, x21
   4efd0:	b.cs	4efec <ZDICT_trainFromBuffer_cover@@Base+0xcbc>  // b.hs, b.nlast
   4efd4:	cbz	x0, 4efdc <ZDICT_trainFromBuffer_cover@@Base+0xcac>
   4efd8:	bl	4880 <free@plt>
   4efdc:	mov	x0, x21
   4efe0:	bl	4640 <malloc@plt>
   4efe4:	str	x0, [x19, #16]
   4efe8:	cbz	x0, 4f01c <ZDICT_trainFromBuffer_cover@@Base+0xcec>
   4efec:	cbz	x22, 4f028 <ZDICT_trainFromBuffer_cover@@Base+0xcf8>
   4eff0:	ldr	x0, [x19, #16]
   4eff4:	mov	x1, x22
   4eff8:	mov	x2, x21
   4effc:	bl	4420 <memcpy@plt>
   4f000:	str	x21, [x19, #24]
   4f004:	ldp	q0, q1, [x20]
   4f008:	ldr	q2, [x20, #32]
   4f00c:	str	x23, [x19, #80]
   4f010:	stp	q0, q1, [x19, #32]
   4f014:	str	q2, [x19, #64]
   4f018:	b	4f028 <ZDICT_trainFromBuffer_cover@@Base+0xcf8>
   4f01c:	mov	x8, #0xffffffffffffffff    	// #-1
   4f020:	str	x8, [x19, #80]
   4f024:	str	xzr, [x19, #24]
   4f028:	ldp	x20, x19, [sp, #48]
   4f02c:	ldp	x22, x21, [sp, #32]
   4f030:	ldr	x23, [sp, #16]
   4f034:	ldp	x29, x30, [sp], #64
   4f038:	ret
   4f03c:	stp	xzr, xzr, [x8]
   4f040:	str	x0, [x8, #16]
   4f044:	ret
   4f048:	stp	x29, x30, [sp, #-32]!
   4f04c:	str	x19, [sp, #16]
   4f050:	mov	x19, x0
   4f054:	ldr	x0, [x0, #16]
   4f058:	mov	x29, sp
   4f05c:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4f060:	cbz	w0, 4f06c <ZDICT_trainFromBuffer_cover@@Base+0xd3c>
   4f064:	mov	w0, #0x1                   	// #1
   4f068:	b	4f078 <ZDICT_trainFromBuffer_cover@@Base+0xd48>
   4f06c:	ldr	x8, [x19]
   4f070:	cmp	x8, #0x0
   4f074:	cset	w0, eq  // eq = none
   4f078:	ldr	x19, [sp, #16]
   4f07c:	ldp	x29, x30, [sp], #32
   4f080:	ret
   4f084:	stp	x29, x30, [sp, #-16]!
   4f088:	ldr	x0, [x0]
   4f08c:	mov	x29, sp
   4f090:	bl	4880 <free@plt>
   4f094:	ldp	x29, x30, [sp], #16
   4f098:	ret
   4f09c:	sub	sp, sp, #0xe0
   4f0a0:	stp	x29, x30, [sp, #128]
   4f0a4:	stp	x24, x23, [sp, #176]
   4f0a8:	add	x29, sp, #0x70
   4f0ac:	mov	x24, x0
   4f0b0:	mov	x0, x1
   4f0b4:	str	d8, [sp, #112]
   4f0b8:	stp	x28, x27, [sp, #144]
   4f0bc:	stp	x26, x25, [sp, #160]
   4f0c0:	stp	x22, x21, [sp, #192]
   4f0c4:	stp	x20, x19, [sp, #208]
   4f0c8:	mov	x22, x7
   4f0cc:	mov	x28, x6
   4f0d0:	str	x5, [x29, #8]
   4f0d4:	mov	w25, w4
   4f0d8:	mov	x26, x3
   4f0dc:	mov	x27, x2
   4f0e0:	mov	x23, x1
   4f0e4:	mov	x19, x8
   4f0e8:	bl	4640 <malloc@plt>
   4f0ec:	mov	x21, x0
   4f0f0:	mov	x0, x23
   4f0f4:	bl	4640 <malloc@plt>
   4f0f8:	mov	x20, x0
   4f0fc:	cbz	x21, 4f170 <ZDICT_trainFromBuffer_cover@@Base+0xe40>
   4f100:	cbz	x20, 4f170 <ZDICT_trainFromBuffer_cover@@Base+0xe40>
   4f104:	ldr	s8, [x22, #28]
   4f108:	mov	x0, x21
   4f10c:	mov	x1, x24
   4f110:	mov	x2, x23
   4f114:	str	x28, [sp, #56]
   4f118:	bl	4420 <memcpy@plt>
   4f11c:	ldr	x8, [x22, #32]
   4f120:	ldr	w9, [x22, #40]
   4f124:	mov	x0, x21
   4f128:	mov	x1, x23
   4f12c:	mov	x2, x24
   4f130:	mov	x3, x23
   4f134:	mov	x4, x27
   4f138:	mov	x5, x26
   4f13c:	mov	w6, w25
   4f140:	stp	x8, x9, [sp]
   4f144:	bl	46b0 <ZDICT_finalizeDictionary@plt>
   4f148:	mov	x28, x0
   4f14c:	bl	4af0 <ZDICT_isError@plt>
   4f150:	cbz	w0, 4f1b0 <ZDICT_trainFromBuffer_cover@@Base+0xe80>
   4f154:	mov	x0, x21
   4f158:	bl	4880 <free@plt>
   4f15c:	mov	x0, x20
   4f160:	bl	4880 <free@plt>
   4f164:	mov	x8, x19
   4f168:	mov	x0, x28
   4f16c:	b	4f188 <ZDICT_trainFromBuffer_cover@@Base+0xe58>
   4f170:	mov	x0, x21
   4f174:	bl	4880 <free@plt>
   4f178:	mov	x0, x20
   4f17c:	bl	4880 <free@plt>
   4f180:	mov	x8, x19
   4f184:	mov	x0, x23
   4f188:	bl	4f03c <ZDICT_trainFromBuffer_cover@@Base+0xd0c>
   4f18c:	ldp	x20, x19, [sp, #208]
   4f190:	ldp	x22, x21, [sp, #192]
   4f194:	ldp	x24, x23, [sp, #176]
   4f198:	ldp	x26, x25, [sp, #160]
   4f19c:	ldp	x28, x27, [sp, #144]
   4f1a0:	ldp	x29, x30, [sp, #128]
   4f1a4:	ldr	d8, [sp, #112]
   4f1a8:	add	sp, sp, #0xe0
   4f1ac:	ret
   4f1b0:	str	w25, [sp, #52]
   4f1b4:	ldp	q1, q0, [x22, #16]
   4f1b8:	ldr	q2, [x22]
   4f1bc:	ldr	x3, [x29, #112]
   4f1c0:	ldr	x4, [x29, #8]
   4f1c4:	ldr	x5, [sp, #56]
   4f1c8:	sub	x0, x29, #0x30
   4f1cc:	mov	x1, x26
   4f1d0:	mov	x2, x27
   4f1d4:	mov	x6, x21
   4f1d8:	mov	x7, x28
   4f1dc:	stp	q1, q0, [x29, #-32]
   4f1e0:	stur	q2, [x29, #-48]
   4f1e4:	str	x3, [sp, #40]
   4f1e8:	bl	4edac <ZDICT_trainFromBuffer_cover@@Base+0xa7c>
   4f1ec:	mov	x25, x0
   4f1f0:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4f1f4:	cbz	w0, 4f214 <ZDICT_trainFromBuffer_cover@@Base+0xee4>
   4f1f8:	mov	x0, x21
   4f1fc:	bl	4880 <free@plt>
   4f200:	mov	x0, x20
   4f204:	bl	4880 <free@plt>
   4f208:	mov	x8, x19
   4f20c:	mov	x0, x25
   4f210:	b	4f188 <ZDICT_trainFromBuffer_cover@@Base+0xe58>
   4f214:	ldr	w8, [x22, #24]
   4f218:	cbz	w8, 4f310 <ZDICT_trainFromBuffer_cover@@Base+0xfe0>
   4f21c:	cmp	x28, #0x101
   4f220:	str	x19, [sp, #24]
   4f224:	b.cc	4f300 <ZDICT_trainFromBuffer_cover@@Base+0xfd0>  // b.lo, b.ul, b.last
   4f228:	add	x8, x24, x23
   4f22c:	str	x8, [sp, #32]
   4f230:	mov	x8, #0x4059000000000000    	// #4636737291354636288
   4f234:	ucvtf	d0, d8
   4f238:	fmov	d3, x8
   4f23c:	fmov	d1, #1.000000000000000000e+00
   4f240:	fdiv	d0, d0, d3
   4f244:	ucvtf	d2, x25
   4f248:	fadd	d0, d0, d1
   4f24c:	fmul	d8, d0, d2
   4f250:	mov	w23, #0x100                 	// #256
   4f254:	mov	x0, x20
   4f258:	mov	x1, x21
   4f25c:	mov	x2, x28
   4f260:	bl	4420 <memcpy@plt>
   4f264:	ldr	x10, [sp, #32]
   4f268:	ldr	w8, [x22, #40]
   4f26c:	ldr	x9, [x22, #32]
   4f270:	ldr	w6, [sp, #52]
   4f274:	sub	x2, x10, x23
   4f278:	and	x10, x19, #0xffffffff00000000
   4f27c:	orr	x19, x10, x8
   4f280:	mov	x0, x20
   4f284:	mov	x1, x23
   4f288:	mov	x3, x23
   4f28c:	mov	x4, x27
   4f290:	mov	x5, x26
   4f294:	stp	x9, x19, [sp]
   4f298:	bl	46b0 <ZDICT_finalizeDictionary@plt>
   4f29c:	mov	x23, x0
   4f2a0:	bl	4af0 <ZDICT_isError@plt>
   4f2a4:	cbnz	w0, 4f324 <ZDICT_trainFromBuffer_cover@@Base+0xff4>
   4f2a8:	ldp	q1, q0, [x22, #16]
   4f2ac:	ldr	q2, [x22]
   4f2b0:	ldr	x3, [sp, #40]
   4f2b4:	ldr	x4, [x29, #8]
   4f2b8:	ldr	x5, [sp, #56]
   4f2bc:	sub	x0, x29, #0x30
   4f2c0:	mov	x1, x26
   4f2c4:	mov	x2, x27
   4f2c8:	mov	x6, x20
   4f2cc:	mov	x7, x23
   4f2d0:	stp	q1, q0, [x29, #-32]
   4f2d4:	stur	q2, [x29, #-48]
   4f2d8:	bl	4edac <ZDICT_trainFromBuffer_cover@@Base+0xa7c>
   4f2dc:	mov	x24, x0
   4f2e0:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4f2e4:	cbnz	w0, 4f33c <ZDICT_trainFromBuffer_cover@@Base+0x100c>
   4f2e8:	ucvtf	d0, x24
   4f2ec:	fcmp	d8, d0
   4f2f0:	b.ge	4f358 <ZDICT_trainFromBuffer_cover@@Base+0x1028>  // b.tcont
   4f2f4:	lsl	x23, x23, #1
   4f2f8:	cmp	x23, x28
   4f2fc:	b.cc	4f254 <ZDICT_trainFromBuffer_cover@@Base+0xf24>  // b.lo, b.ul, b.last
   4f300:	ldr	x8, [sp, #24]
   4f304:	stp	x21, x28, [x8]
   4f308:	str	x25, [x8, #16]
   4f30c:	b	4f318 <ZDICT_trainFromBuffer_cover@@Base+0xfe8>
   4f310:	stp	x21, x28, [x19]
   4f314:	str	x25, [x19, #16]
   4f318:	mov	x0, x20
   4f31c:	bl	4880 <free@plt>
   4f320:	b	4f18c <ZDICT_trainFromBuffer_cover@@Base+0xe5c>
   4f324:	mov	x0, x21
   4f328:	bl	4880 <free@plt>
   4f32c:	mov	x0, x20
   4f330:	bl	4880 <free@plt>
   4f334:	ldr	x8, [sp, #24]
   4f338:	b	4f184 <ZDICT_trainFromBuffer_cover@@Base+0xe54>
   4f33c:	mov	x0, x21
   4f340:	bl	4880 <free@plt>
   4f344:	mov	x0, x20
   4f348:	bl	4880 <free@plt>
   4f34c:	ldr	x8, [sp, #24]
   4f350:	mov	x0, x24
   4f354:	b	4f188 <ZDICT_trainFromBuffer_cover@@Base+0xe58>
   4f358:	ldr	x8, [sp, #24]
   4f35c:	mov	x0, x21
   4f360:	stp	x20, x23, [x8]
   4f364:	str	x24, [x8, #16]
   4f368:	b	4f31c <ZDICT_trainFromBuffer_cover@@Base+0xfec>

000000000004f36c <ZDICT_optimizeTrainFromBuffer_cover@@Base>:
   4f36c:	sub	sp, sp, #0x1a0
   4f370:	stp	x29, x30, [sp, #320]
   4f374:	stp	x28, x27, [sp, #336]
   4f378:	stp	x26, x25, [sp, #352]
   4f37c:	stp	x24, x23, [sp, #368]
   4f380:	stp	x22, x21, [sp, #384]
   4f384:	stp	x20, x19, [sp, #400]
   4f388:	stp	x2, x3, [sp, #48]
   4f38c:	ldr	d1, [x5, #16]
   4f390:	str	d8, [sp, #304]
   4f394:	ldr	w10, [x5, #8]
   4f398:	ldp	w9, w8, [x5]
   4f39c:	fmov	d0, #1.000000000000000000e+00
   4f3a0:	fcmp	d1, #0.0
   4f3a4:	mov	w11, #0x28                  	// #40
   4f3a8:	fcsel	d8, d1, d0, hi  // hi = pmore
   4f3ac:	cmp	w10, #0x0
   4f3b0:	mov	w14, #0x79e                 	// #1950
   4f3b4:	csel	w23, w11, w10, eq  // eq = none
   4f3b8:	cmp	w9, #0x0
   4f3bc:	mov	w12, #0x32                  	// #50
   4f3c0:	mov	w13, #0x7d0                 	// #2000
   4f3c4:	csel	w20, w14, wzr, eq  // eq = none
   4f3c8:	csel	w11, w12, w9, eq  // eq = none
   4f3cc:	csel	w25, w13, w9, eq  // eq = none
   4f3d0:	udiv	w9, w20, w23
   4f3d4:	ldr	w26, [x5, #36]
   4f3d8:	cmp	w9, #0x1
   4f3dc:	mov	w15, #0x6                   	// #6
   4f3e0:	mov	w16, #0x8                   	// #8
   4f3e4:	mov	w10, #0x1                   	// #1
   4f3e8:	csinc	w9, w9, wzr, hi  // hi = pmore
   4f3ec:	cmp	w8, #0x0
   4f3f0:	add	x29, sp, #0x130
   4f3f4:	csel	w27, w15, w8, eq  // eq = none
   4f3f8:	csel	w8, w16, w8, eq  // eq = none
   4f3fc:	cinc	w22, w10, eq  // eq = none
   4f400:	fcmp	d8, #0.0
   4f404:	str	w9, [x29, #12]
   4f408:	b.ls	4f450 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe4>  // b.plast
   4f40c:	fcmp	d8, d0
   4f410:	b.gt	4f450 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe4>
   4f414:	cmp	w11, w8
   4f418:	b.cc	4f450 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe4>  // b.lo, b.ul, b.last
   4f41c:	cmp	w25, w11
   4f420:	b.cc	4f450 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe4>  // b.lo, b.ul, b.last
   4f424:	mov	w28, w4
   4f428:	cbz	w4, 4f484 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x118>
   4f42c:	mov	x24, x1
   4f430:	cmp	x1, #0xff
   4f434:	b.hi	4f49c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x130>  // b.pmore
   4f438:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4f43c:	ldr	w8, [x8, #920]
   4f440:	cmp	w8, #0x1
   4f444:	b.ge	4f930 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5c4>  // b.tcont
   4f448:	mov	x28, #0xffffffffffffffba    	// #-70
   4f44c:	b	4f45c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0>
   4f450:	cmp	w26, #0x1
   4f454:	b.ge	4f4d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x164>  // b.tcont
   4f458:	mov	x28, #0xffffffffffffffd6    	// #-42
   4f45c:	mov	x0, x28
   4f460:	ldp	x20, x19, [sp, #400]
   4f464:	ldp	x22, x21, [sp, #384]
   4f468:	ldp	x24, x23, [sp, #368]
   4f46c:	ldp	x26, x25, [sp, #352]
   4f470:	ldp	x28, x27, [sp, #336]
   4f474:	ldp	x29, x30, [sp, #320]
   4f478:	ldr	d8, [sp, #304]
   4f47c:	add	sp, sp, #0x1a0
   4f480:	ret
   4f484:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4f488:	ldr	w8, [x8, #920]
   4f48c:	cmp	w8, #0x1
   4f490:	b.ge	4f904 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x598>  // b.tcont
   4f494:	mov	x28, #0xffffffffffffffb8    	// #-72
   4f498:	b	4f45c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0>
   4f49c:	mov	x21, x0
   4f4a0:	ldr	w0, [x5, #12]
   4f4a4:	mov	x19, x5
   4f4a8:	str	w8, [x29, #8]
   4f4ac:	str	w11, [sp, #20]
   4f4b0:	cmp	w0, #0x2
   4f4b4:	b.cc	4f500 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x194>  // b.lo, b.ul, b.last
   4f4b8:	mov	w1, #0x1                   	// #1
   4f4bc:	bl	5dfc <ZSTD_initDStream_usingDDict@plt+0x12ec>
   4f4c0:	str	x0, [sp, #32]
   4f4c4:	cbnz	x0, 4f504 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x198>
   4f4c8:	mov	x28, #0xffffffffffffffc0    	// #-64
   4f4cc:	b	4f45c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0>
   4f4d0:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f4d4:	ldr	x19, [x19, #4048]
   4f4d8:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f4dc:	add	x0, x0, #0xf89
   4f4e0:	mov	w1, #0x15                  	// #21
   4f4e4:	ldr	x3, [x19]
   4f4e8:	mov	w2, #0x1                   	// #1
   4f4ec:	bl	48e0 <fwrite@plt>
   4f4f0:	ldr	x0, [x19]
   4f4f4:	bl	4920 <fflush@plt>
   4f4f8:	mov	x28, #0xffffffffffffffd6    	// #-42
   4f4fc:	b	4f45c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0>
   4f500:	str	xzr, [sp, #32]
   4f504:	ldr	w8, [x29, #12]
   4f508:	sub	x0, x29, #0x68
   4f50c:	str	w28, [sp, #28]
   4f510:	str	x21, [sp, #8]
   4f514:	udiv	w8, w20, w8
   4f518:	add	w8, w8, #0x1
   4f51c:	mul	w8, w8, w22
   4f520:	str	w8, [sp, #16]
   4f524:	bl	4ef14 <ZDICT_trainFromBuffer_cover@@Base+0xbe4>
   4f528:	sub	w8, w26, #0x1
   4f52c:	cmp	w26, #0x0
   4f530:	adrp	x9, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4f534:	csel	w8, wzr, w8, eq  // eq = none
   4f538:	cmp	w26, #0x2
   4f53c:	str	w8, [x9, #920]
   4f540:	b.ge	4f958 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5ec>  // b.tcont
   4f544:	ldr	w8, [x29, #8]
   4f548:	ldr	x21, [sp, #32]
   4f54c:	cmp	w27, w8
   4f550:	b.ls	4f584 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x218>  // b.plast
   4f554:	cmp	w26, #0x2
   4f558:	b.ge	4f980 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x614>  // b.tcont
   4f55c:	ldur	x28, [x29, #-24]
   4f560:	ldur	x20, [x29, #-80]
   4f564:	mov	x0, x28
   4f568:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4f56c:	cbz	w0, 4f8c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x55c>
   4f570:	sub	x0, x29, #0x68
   4f574:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   4f578:	mov	x0, x21
   4f57c:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   4f580:	b	4f45c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0>
   4f584:	mov	w8, #0x1                   	// #1
   4f588:	str	wzr, [sp, #24]
   4f58c:	str	x8, [sp, #40]
   4f590:	cmp	w26, #0x3
   4f594:	b.ge	4f874 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x508>  // b.tcont
   4f598:	ldp	x1, x2, [sp, #48]
   4f59c:	ldr	w3, [sp, #28]
   4f5a0:	add	x0, sp, #0x70
   4f5a4:	mov	w4, w27
   4f5a8:	mov	v0.16b, v8.16b
   4f5ac:	bl	4e630 <ZDICT_trainFromBuffer_cover@@Base+0x300>
   4f5b0:	mov	x20, x0
   4f5b4:	bl	4ea48 <ZDICT_trainFromBuffer_cover@@Base+0x718>
   4f5b8:	cbz	w0, 4f5e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x278>
   4f5bc:	cmp	w26, #0x1
   4f5c0:	b.ge	4f89c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x530>  // b.tcont
   4f5c4:	sub	x0, x29, #0x68
   4f5c8:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   4f5cc:	mov	x0, x21
   4f5d0:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   4f5d4:	mov	w8, #0x1                   	// #1
   4f5d8:	mov	x28, x20
   4f5dc:	cbnz	w8, 4f85c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f0>
   4f5e0:	b	4f5ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x280>
   4f5e4:	mov	w8, wzr
   4f5e8:	cbnz	w8, 4f85c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f0>
   4f5ec:	ldr	w8, [sp, #24]
   4f5f0:	cbnz	w8, 4f60c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a0>
   4f5f4:	ldr	x1, [sp, #168]
   4f5f8:	mov	x0, x24
   4f5fc:	mov	w2, w26
   4f600:	bl	4e288 <ZBUFF_recommendedDOutSize@@Base+0x40>
   4f604:	mov	w8, #0x1                   	// #1
   4f608:	str	w8, [sp, #24]
   4f60c:	ldr	w20, [sp, #20]
   4f610:	b	4f620 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b4>
   4f614:	cbnz	w8, 4f85c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f0>
   4f618:	ldr	w8, [x29, #12]
   4f61c:	add	w20, w20, w8
   4f620:	cmp	w20, w25
   4f624:	b.hi	4f850 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e4>  // b.pmore
   4f628:	mov	w0, #0x48                  	// #72
   4f62c:	bl	4640 <malloc@plt>
   4f630:	cmp	w26, #0x3
   4f634:	mov	x22, x0
   4f638:	b.ge	4f74c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e0>  // b.tcont
   4f63c:	cbz	x22, 4f77c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x410>
   4f640:	add	x8, sp, #0x70
   4f644:	str	x8, [x22]
   4f648:	sub	x8, x29, #0x68
   4f64c:	stp	x8, x24, [x22, #8]
   4f650:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4f654:	ldp	q0, q1, [x19]
   4f658:	ldr	q2, [x19, #32]
   4f65c:	ldr	w21, [x8, #920]
   4f660:	add	x0, sp, #0x40
   4f664:	stur	q0, [x22, #24]
   4f668:	stur	q1, [x22, #40]
   4f66c:	stur	q2, [x22, #56]
   4f670:	stp	w20, w27, [x22, #24]
   4f674:	str	d8, [x22, #40]
   4f678:	str	w23, [x22, #32]
   4f67c:	str	wzr, [x22, #48]
   4f680:	str	w21, [x22, #60]
   4f684:	ldur	q0, [x22, #56]
   4f688:	ldur	q1, [x22, #40]
   4f68c:	ldur	q2, [x22, #24]
   4f690:	mov	x1, x24
   4f694:	stp	q1, q0, [sp, #80]
   4f698:	str	q2, [sp, #64]
   4f69c:	bl	4e5ec <ZDICT_trainFromBuffer_cover@@Base+0x2bc>
   4f6a0:	cbz	w0, 4f6d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x368>
   4f6a4:	sub	x0, x29, #0x68
   4f6a8:	bl	4ef6c <ZDICT_trainFromBuffer_cover@@Base+0xc3c>
   4f6ac:	ldr	x21, [sp, #32]
   4f6b0:	cbz	x21, 4f6f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x38c>
   4f6b4:	adrp	x1, 4f000 <ZDICT_trainFromBuffer_cover@@Base+0xcd0>
   4f6b8:	mov	x0, x21
   4f6bc:	add	x1, x1, #0x9ac
   4f6c0:	mov	x2, x22
   4f6c4:	bl	5e20 <ZSTD_initDStream_usingDDict@plt+0x1310>
   4f6c8:	cmp	w26, #0x2
   4f6cc:	b.ge	4f708 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39c>  // b.tcont
   4f6d0:	b	4f730 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c4>
   4f6d4:	cmp	w21, #0x1
   4f6d8:	b.ge	4f7dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x470>  // b.tcont
   4f6dc:	mov	x0, x22
   4f6e0:	bl	4880 <free@plt>
   4f6e4:	ldr	x21, [sp, #32]
   4f6e8:	mov	w8, #0x7                   	// #7
   4f6ec:	cmp	w8, #0x7
   4f6f0:	b.ne	4f614 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a8>  // b.any
   4f6f4:	b	4f618 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ac>
   4f6f8:	mov	x0, x22
   4f6fc:	bl	4f9ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x640>
   4f700:	cmp	w26, #0x2
   4f704:	b.lt	4f730 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c4>  // b.tstop
   4f708:	bl	4480 <clock@plt>
   4f70c:	cmp	w26, #0x3
   4f710:	b.gt	4f808 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49c>
   4f714:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4f718:	ldr	x8, [x8, #944]
   4f71c:	mov	w9, #0x49f1                	// #18929
   4f720:	movk	w9, #0x2, lsl #16
   4f724:	sub	x8, x0, x8
   4f728:	cmp	x8, x9
   4f72c:	b.ge	4f808 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49c>  // b.tcont
   4f730:	ldr	x9, [sp, #40]
   4f734:	mov	w8, wzr
   4f738:	add	w9, w9, #0x1
   4f73c:	str	x9, [sp, #40]
   4f740:	cmp	w8, #0x7
   4f744:	b.ne	4f614 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a8>  // b.any
   4f748:	b	4f618 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ac>
   4f74c:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f750:	ldr	x8, [x8, #4048]
   4f754:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f758:	add	x1, x1, #0xfeb
   4f75c:	mov	w2, w20
   4f760:	ldr	x0, [x8]
   4f764:	bl	4ae0 <fprintf@plt>
   4f768:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f76c:	ldr	x8, [x8, #4048]
   4f770:	ldr	x0, [x8]
   4f774:	bl	4920 <fflush@plt>
   4f778:	cbnz	x22, 4f640 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d4>
   4f77c:	cmp	w26, #0x1
   4f780:	b.ge	4f7b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x444>  // b.tcont
   4f784:	sub	x0, x29, #0x68
   4f788:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   4f78c:	add	x0, sp, #0x70
   4f790:	bl	4eab4 <ZDICT_trainFromBuffer_cover@@Base+0x784>
   4f794:	mov	x0, x21
   4f798:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   4f79c:	mov	x28, #0xffffffffffffffc0    	// #-64
   4f7a0:	mov	w8, #0x1                   	// #1
   4f7a4:	cmp	w8, #0x7
   4f7a8:	b.ne	4f614 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a8>  // b.any
   4f7ac:	b	4f618 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ac>
   4f7b0:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f7b4:	ldr	x22, [x22, #4048]
   4f7b8:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f7bc:	mov	w1, #0x1e                  	// #30
   4f7c0:	mov	w2, #0x1                   	// #1
   4f7c4:	ldr	x3, [x22]
   4f7c8:	add	x0, x0, #0xff1
   4f7cc:	bl	48e0 <fwrite@plt>
   4f7d0:	ldr	x0, [x22]
   4f7d4:	bl	4920 <fflush@plt>
   4f7d8:	b	4f784 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x418>
   4f7dc:	adrp	x21, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f7e0:	ldr	x21, [x21, #4048]
   4f7e4:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f7e8:	mov	w1, #0x1b                  	// #27
   4f7ec:	mov	w2, #0x1                   	// #1
   4f7f0:	ldr	x3, [x21]
   4f7f4:	add	x0, x0, #0xeb8
   4f7f8:	bl	48e0 <fwrite@plt>
   4f7fc:	ldr	x0, [x21]
   4f800:	bl	4920 <fflush@plt>
   4f804:	b	4f6dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x370>
   4f808:	bl	4480 <clock@plt>
   4f80c:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f810:	adrp	x9, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4f814:	ldr	x22, [x22, #4048]
   4f818:	str	x0, [x9, #944]
   4f81c:	ldr	x9, [sp, #40]
   4f820:	mov	w10, #0x64                  	// #100
   4f824:	ldr	x8, [x22]
   4f828:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4f82c:	mul	w9, w9, w10
   4f830:	ldr	w10, [sp, #16]
   4f834:	mov	x0, x8
   4f838:	add	x1, x1, #0x10
   4f83c:	udiv	w2, w9, w10
   4f840:	bl	4ae0 <fprintf@plt>
   4f844:	ldr	x0, [x22]
   4f848:	bl	4920 <fflush@plt>
   4f84c:	b	4f730 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c4>
   4f850:	add	x0, sp, #0x70
   4f854:	bl	4eab4 <ZDICT_trainFromBuffer_cover@@Base+0x784>
   4f858:	mov	w8, wzr
   4f85c:	cbnz	w8, 4f45c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0>
   4f860:	ldr	w8, [x29, #8]
   4f864:	add	w27, w27, #0x2
   4f868:	cmp	w27, w8
   4f86c:	b.ls	4f590 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x224>  // b.plast
   4f870:	b	4f554 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e8>
   4f874:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f878:	ldr	x20, [x20, #4048]
   4f87c:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f880:	add	x1, x1, #0xfc7
   4f884:	mov	w2, w27
   4f888:	ldr	x0, [x20]
   4f88c:	bl	4ae0 <fprintf@plt>
   4f890:	ldr	x0, [x20]
   4f894:	bl	4920 <fflush@plt>
   4f898:	b	4f598 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22c>
   4f89c:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f8a0:	ldr	x22, [x22, #4048]
   4f8a4:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f8a8:	mov	w1, #0x1d                  	// #29
   4f8ac:	mov	w2, #0x1                   	// #1
   4f8b0:	ldr	x3, [x22]
   4f8b4:	add	x0, x0, #0xfcd
   4f8b8:	bl	48e0 <fwrite@plt>
   4f8bc:	ldr	x0, [x22]
   4f8c0:	bl	4920 <fflush@plt>
   4f8c4:	b	4f5c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x258>
   4f8c8:	sub	x8, x29, #0x68
   4f8cc:	ldp	q1, q0, [x8, #48]
   4f8d0:	ldr	q2, [x8, #32]
   4f8d4:	mov	x2, x20
   4f8d8:	stp	q1, q0, [x19, #16]
   4f8dc:	str	q2, [x19]
   4f8e0:	ldur	x1, [x29, #-88]
   4f8e4:	ldr	x0, [sp, #8]
   4f8e8:	bl	4420 <memcpy@plt>
   4f8ec:	sub	x0, x29, #0x68
   4f8f0:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   4f8f4:	mov	x0, x21
   4f8f8:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   4f8fc:	mov	x28, x20
   4f900:	b	4f45c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0>
   4f904:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f908:	ldr	x19, [x19, #4048]
   4f90c:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f910:	add	x0, x0, #0xed4
   4f914:	mov	w1, #0x28                  	// #40
   4f918:	ldr	x3, [x19]
   4f91c:	mov	w2, #0x1                   	// #1
   4f920:	bl	48e0 <fwrite@plt>
   4f924:	ldr	x0, [x19]
   4f928:	bl	4920 <fflush@plt>
   4f92c:	b	4f494 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x128>
   4f930:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f934:	ldr	x19, [x19, #4048]
   4f938:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f93c:	add	x1, x1, #0xefd
   4f940:	mov	w2, #0x100                 	// #256
   4f944:	ldr	x0, [x19]
   4f948:	bl	4ae0 <fprintf@plt>
   4f94c:	ldr	x0, [x19]
   4f950:	bl	4920 <fflush@plt>
   4f954:	b	4f448 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xdc>
   4f958:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f95c:	ldr	x20, [x20, #4048]
   4f960:	ldr	w2, [sp, #16]
   4f964:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4f968:	add	x1, x1, #0xf9f
   4f96c:	ldr	x0, [x20]
   4f970:	bl	4ae0 <fprintf@plt>
   4f974:	ldr	x0, [x20]
   4f978:	bl	4920 <fflush@plt>
   4f97c:	b	4f544 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d8>
   4f980:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4f984:	ldr	x20, [x20, #4048]
   4f988:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4f98c:	adrp	x2, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   4f990:	add	x1, x1, #0x1d
   4f994:	ldr	x0, [x20]
   4f998:	add	x2, x2, #0x414
   4f99c:	bl	4ae0 <fprintf@plt>
   4f9a0:	ldr	x0, [x20]
   4f9a4:	bl	4920 <fflush@plt>
   4f9a8:	b	4f55c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f0>
   4f9ac:	sub	sp, sp, #0x110
   4f9b0:	stp	x29, x30, [sp, #192]
   4f9b4:	stp	x28, x25, [sp, #208]
   4f9b8:	stp	x24, x23, [sp, #224]
   4f9bc:	stp	x22, x21, [sp, #240]
   4f9c0:	stp	x20, x19, [sp, #256]
   4f9c4:	ldr	x8, [x0, #64]
   4f9c8:	ldp	q0, q1, [x0, #32]
   4f9cc:	add	x29, sp, #0xc0
   4f9d0:	ldr	x22, [x0]
   4f9d4:	ldp	w25, w24, [x0, #24]
   4f9d8:	stur	x8, [x29, #-16]
   4f9dc:	stp	q0, q1, [x29, #-48]
   4f9e0:	ldr	x23, [x0, #16]
   4f9e4:	mov	x19, x0
   4f9e8:	mov	x0, x23
   4f9ec:	bl	4640 <malloc@plt>
   4f9f0:	mov	x21, x0
   4f9f4:	add	x8, sp, #0x60
   4f9f8:	mov	x0, #0xffffffffffffffff    	// #-1
   4f9fc:	bl	4f03c <ZDICT_trainFromBuffer_cover@@Base+0xd0c>
   4fa00:	ldr	x8, [x22, #56]
   4fa04:	lsl	x0, x8, #2
   4fa08:	bl	4640 <malloc@plt>
   4fa0c:	sub	w8, w25, w24
   4fa10:	mov	x20, x0
   4fa14:	add	w1, w8, #0x1
   4fa18:	sub	x0, x29, #0x48
   4fa1c:	bl	4ea54 <ZDICT_trainFromBuffer_cover@@Base+0x724>
   4fa20:	cbz	w0, 4faf8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x78c>
   4fa24:	cbz	x21, 4fb20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7b4>
   4fa28:	cbz	x20, 4fb20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7b4>
   4fa2c:	ldp	x8, x1, [x22, #56]
   4fa30:	mov	x0, x20
   4fa34:	lsl	x2, x8, #2
   4fa38:	bl	4420 <memcpy@plt>
   4fa3c:	ldp	q0, q1, [x29, #-48]
   4fa40:	ldur	x8, [x29, #-16]
   4fa44:	sub	x2, x29, #0x48
   4fa48:	add	x5, sp, #0x30
   4fa4c:	mov	x0, x22
   4fa50:	mov	x1, x20
   4fa54:	mov	x3, x21
   4fa58:	mov	x4, x23
   4fa5c:	stp	w25, w24, [sp, #48]
   4fa60:	stur	q0, [sp, #56]
   4fa64:	stur	q1, [sp, #72]
   4fa68:	str	x8, [sp, #88]
   4fa6c:	bl	4eb14 <ZDICT_trainFromBuffer_cover@@Base+0x7e4>
   4fa70:	ldp	x6, x4, [x22, #24]
   4fa74:	ldur	x8, [x29, #-16]
   4fa78:	ldp	x10, x3, [x22, #8]
   4fa7c:	ldp	q0, q1, [x29, #-48]
   4fa80:	ldr	x2, [x22]
   4fa84:	add	x9, x21, x0
   4fa88:	sub	x1, x23, x0
   4fa8c:	str	x8, [sp, #88]
   4fa90:	add	x8, sp, #0x60
   4fa94:	add	x7, sp, #0x30
   4fa98:	mov	x0, x9
   4fa9c:	mov	x5, x4
   4faa0:	stur	q0, [sp, #56]
   4faa4:	stp	w25, w24, [sp, #48]
   4faa8:	stur	q1, [sp, #72]
   4faac:	str	x10, [sp]
   4fab0:	bl	4f09c <ZDICT_trainFromBuffer_cover@@Base+0xd6c>
   4fab4:	ldr	q0, [sp, #96]
   4fab8:	ldr	x8, [sp, #112]
   4fabc:	add	x0, sp, #0x30
   4fac0:	str	q0, [sp, #48]
   4fac4:	str	x8, [sp, #64]
   4fac8:	bl	4f048 <ZDICT_trainFromBuffer_cover@@Base+0xd18>
   4facc:	cbz	w0, 4fb30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7c4>
   4fad0:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4fad4:	ldr	w8, [x8, #920]
   4fad8:	cmp	w8, #0x1
   4fadc:	b.lt	4fb30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7c4>  // b.tstop
   4fae0:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4fae4:	ldr	x22, [x22, #4048]
   4fae8:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4faec:	add	x0, x0, #0x1d7
   4faf0:	mov	w1, #0x1c                  	// #28
   4faf4:	b	4fbd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x868>
   4faf8:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4fafc:	ldr	w8, [x8, #920]
   4fb00:	cmp	w8, #0x1
   4fb04:	b.lt	4fb30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7c4>  // b.tstop
   4fb08:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4fb0c:	ldr	x22, [x22, #4048]
   4fb10:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   4fb14:	add	x0, x0, #0xf25
   4fb18:	mov	w1, #0x2b                  	// #43
   4fb1c:	b	4fbd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x868>
   4fb20:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4fb24:	ldr	w8, [x8, #920]
   4fb28:	cmp	w8, #0x1
   4fb2c:	b.ge	4fbc0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x854>  // b.tcont
   4fb30:	mov	x0, x21
   4fb34:	bl	4880 <free@plt>
   4fb38:	ldr	x0, [x19, #8]
   4fb3c:	ldp	q0, q1, [x29, #-48]
   4fb40:	ldur	x8, [x29, #-16]
   4fb44:	ldr	q2, [sp, #96]
   4fb48:	ldr	x9, [sp, #112]
   4fb4c:	add	x1, sp, #0x30
   4fb50:	add	x2, sp, #0x10
   4fb54:	stp	w25, w24, [sp, #48]
   4fb58:	stur	q0, [sp, #56]
   4fb5c:	stur	q1, [sp, #72]
   4fb60:	str	x8, [sp, #88]
   4fb64:	str	q2, [sp, #16]
   4fb68:	str	x9, [sp, #32]
   4fb6c:	bl	4ef80 <ZDICT_trainFromBuffer_cover@@Base+0xc50>
   4fb70:	mov	x0, x19
   4fb74:	bl	4880 <free@plt>
   4fb78:	sub	x0, x29, #0x48
   4fb7c:	bl	4ed7c <ZDICT_trainFromBuffer_cover@@Base+0xa4c>
   4fb80:	ldr	q0, [sp, #96]
   4fb84:	ldr	x8, [sp, #112]
   4fb88:	add	x0, sp, #0x30
   4fb8c:	str	q0, [sp, #48]
   4fb90:	str	x8, [sp, #64]
   4fb94:	bl	4f084 <ZDICT_trainFromBuffer_cover@@Base+0xd54>
   4fb98:	cbz	x20, 4fba4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x838>
   4fb9c:	mov	x0, x20
   4fba0:	bl	4880 <free@plt>
   4fba4:	ldp	x20, x19, [sp, #256]
   4fba8:	ldp	x22, x21, [sp, #240]
   4fbac:	ldp	x24, x23, [sp, #224]
   4fbb0:	ldp	x28, x25, [sp, #208]
   4fbb4:	ldp	x29, x30, [sp, #192]
   4fbb8:	add	sp, sp, #0x110
   4fbbc:	ret
   4fbc0:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   4fbc4:	ldr	x22, [x22, #4048]
   4fbc8:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   4fbcc:	add	x0, x0, #0x1ac
   4fbd0:	mov	w1, #0x2a                  	// #42
   4fbd4:	ldr	x3, [x22]
   4fbd8:	mov	w2, #0x1                   	// #1
   4fbdc:	bl	48e0 <fwrite@plt>
   4fbe0:	ldr	x0, [x22]
   4fbe4:	bl	4920 <fflush@plt>
   4fbe8:	b	4fb30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x7c4>
   4fbec:	stp	x29, x30, [sp, #-32]!
   4fbf0:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4fbf4:	ldr	x8, [x8, #952]
   4fbf8:	stp	x20, x19, [sp, #16]
   4fbfc:	mov	x19, x1
   4fc00:	mov	x20, x0
   4fc04:	mov	x0, x8
   4fc08:	mov	x1, x20
   4fc0c:	mov	x2, x19
   4fc10:	mov	x29, sp
   4fc14:	bl	4fd1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x9b0>
   4fc18:	cmp	x20, x19
   4fc1c:	ldp	x20, x19, [sp, #16]
   4fc20:	mov	w8, #0xffffffff            	// #-1
   4fc24:	cneg	w8, w8, cs  // cs = hs, nlast
   4fc28:	cmp	w0, #0x0
   4fc2c:	csel	w0, w8, w0, eq  // eq = none
   4fc30:	ldp	x29, x30, [sp], #32
   4fc34:	ret
   4fc38:	stp	x29, x30, [sp, #-32]!
   4fc3c:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   4fc40:	ldr	x8, [x8, #952]
   4fc44:	stp	x20, x19, [sp, #16]
   4fc48:	mov	x19, x1
   4fc4c:	mov	x20, x0
   4fc50:	mov	x0, x8
   4fc54:	mov	x1, x20
   4fc58:	mov	x2, x19
   4fc5c:	mov	x29, sp
   4fc60:	bl	4fd88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa1c>
   4fc64:	cmp	x20, x19
   4fc68:	ldp	x20, x19, [sp, #16]
   4fc6c:	mov	w8, #0xffffffff            	// #-1
   4fc70:	cneg	w8, w8, cs  // cs = hs, nlast
   4fc74:	cmp	w0, #0x0
   4fc78:	csel	w0, w8, w0, eq  // eq = none
   4fc7c:	ldp	x29, x30, [sp], #32
   4fc80:	ret
   4fc84:	stp	x29, x30, [sp, #-64]!
   4fc88:	stp	x24, x23, [sp, #16]
   4fc8c:	stp	x22, x21, [sp, #32]
   4fc90:	stp	x20, x19, [sp, #48]
   4fc94:	mov	x29, sp
   4fc98:	cbz	x1, 4fd08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x99c>
   4fc9c:	mov	x19, x3
   4fca0:	mov	x20, x2
   4fca4:	mov	x21, x1
   4fca8:	mov	x22, x0
   4fcac:	mov	x24, xzr
   4fcb0:	b	4fccc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x960>
   4fcb4:	mov	x0, x20
   4fcb8:	mov	x1, x23
   4fcbc:	mov	x2, x22
   4fcc0:	bl	4fdb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xa48>
   4fcc4:	cmp	x24, x21
   4fcc8:	b.cs	4fd08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x99c>  // b.hs, b.nlast
   4fccc:	mov	x23, x22
   4fcd0:	add	x8, x24, #0x1
   4fcd4:	add	x9, x22, #0x4
   4fcd8:	mov	x24, x8
   4fcdc:	cmp	x8, x21
   4fce0:	mov	x22, x9
   4fce4:	b.cs	4fcb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x948>  // b.hs, b.nlast
   4fce8:	mov	x0, x20
   4fcec:	mov	x1, x23
   4fcf0:	mov	x2, x22
   4fcf4:	blr	x19
   4fcf8:	add	x8, x24, #0x1
   4fcfc:	add	x9, x22, #0x4
   4fd00:	cbz	w0, 4fcd8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x96c>
   4fd04:	b	4fcb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x948>
   4fd08:	ldp	x20, x19, [sp, #48]
   4fd0c:	ldp	x22, x21, [sp, #32]
   4fd10:	ldp	x24, x23, [sp, #16]
   4fd14:	ldp	x29, x30, [sp], #64
   4fd18:	ret
   4fd1c:	stp	x29, x30, [sp, #-48]!
   4fd20:	stp	x20, x19, [sp, #32]
   4fd24:	ldr	w8, [x0, #80]
   4fd28:	ldr	x20, [x0]
   4fd2c:	ldr	w10, [x1]
   4fd30:	mov	x9, #0xffffffffffffffff    	// #-1
   4fd34:	lsl	w11, w8, #3
   4fd38:	cmp	w8, #0x8
   4fd3c:	lsl	x8, x9, x11
   4fd40:	add	x0, x20, x10
   4fd44:	str	x21, [sp, #16]
   4fd48:	mov	x29, sp
   4fd4c:	mov	x19, x2
   4fd50:	csinv	x21, x9, x8, eq  // eq = none
   4fd54:	bl	4fe6c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb00>
   4fd58:	ldr	w8, [x19]
   4fd5c:	and	x19, x21, x0
   4fd60:	add	x0, x20, x8
   4fd64:	bl	4fe6c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb00>
   4fd68:	and	x8, x0, x21
   4fd6c:	cmp	x19, x8
   4fd70:	ldp	x20, x19, [sp, #32]
   4fd74:	ldr	x21, [sp, #16]
   4fd78:	cset	w8, hi  // hi = pmore
   4fd7c:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
   4fd80:	ldp	x29, x30, [sp], #48
   4fd84:	ret
   4fd88:	stp	x29, x30, [sp, #-16]!
   4fd8c:	ldr	w8, [x1]
   4fd90:	ldr	x9, [x0]
   4fd94:	ldr	w10, [x2]
   4fd98:	ldr	w2, [x0, #80]
   4fd9c:	mov	x29, sp
   4fda0:	add	x0, x9, x8
   4fda4:	add	x1, x9, x10
   4fda8:	bl	4840 <memcmp@plt>
   4fdac:	ldp	x29, x30, [sp], #16
   4fdb0:	ret
   4fdb4:	stp	x29, x30, [sp, #-80]!
   4fdb8:	stp	x26, x25, [sp, #16]
   4fdbc:	stp	x24, x23, [sp, #32]
   4fdc0:	stp	x22, x21, [sp, #48]
   4fdc4:	stp	x20, x19, [sp, #64]
   4fdc8:	ldr	x8, [x0, #48]
   4fdcc:	mov	x19, x0
   4fdd0:	cmp	x1, x2
   4fdd4:	mov	x29, sp
   4fdd8:	sub	x8, x1, x8
   4fddc:	lsr	x23, x8, #2
   4fde0:	b.eq	4fe48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xadc>  // b.none
   4fde4:	ldr	x0, [x19, #8]
   4fde8:	ldr	x9, [x19, #24]
   4fdec:	ldr	x25, [x19, #72]
   4fdf0:	mov	x20, x2
   4fdf4:	ldr	x8, [x0]
   4fdf8:	mov	x21, x1
   4fdfc:	mov	w24, wzr
   4fe00:	add	x22, x0, x9, lsl #3
   4fe04:	sub	x26, x2, #0x4
   4fe08:	b	4fe18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xaac>
   4fe0c:	add	x21, x21, #0x4
   4fe10:	cmp	x20, x21
   4fe14:	b.eq	4fe4c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xae0>  // b.none
   4fe18:	ldr	w9, [x21]
   4fe1c:	str	w23, [x25, x9, lsl #2]
   4fe20:	ldr	w2, [x21]
   4fe24:	cmp	x8, x2
   4fe28:	b.hi	4fe0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xaa0>  // b.pmore
   4fe2c:	cmp	x26, x21
   4fe30:	add	w24, w24, #0x1
   4fe34:	b.eq	4fe0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xaa0>  // b.none
   4fe38:	mov	x1, x22
   4fe3c:	bl	4fe88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb1c>
   4fe40:	ldr	x8, [x0], #8
   4fe44:	b	4fe0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xaa0>
   4fe48:	mov	w24, wzr
   4fe4c:	ldr	x8, [x19, #48]
   4fe50:	str	w24, [x8, w23, uxtw #2]
   4fe54:	ldp	x20, x19, [sp, #64]
   4fe58:	ldp	x22, x21, [sp, #48]
   4fe5c:	ldp	x24, x23, [sp, #32]
   4fe60:	ldp	x26, x25, [sp, #16]
   4fe64:	ldp	x29, x30, [sp], #80
   4fe68:	ret
   4fe6c:	stp	x29, x30, [sp, #-16]!
   4fe70:	mov	x29, sp
   4fe74:	bl	4fe80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb14>
   4fe78:	ldp	x29, x30, [sp], #16
   4fe7c:	ret
   4fe80:	ldr	x0, [x0]
   4fe84:	ret
   4fe88:	subs	x8, x1, x0
   4fe8c:	b.eq	4feb8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb4c>  // b.none
   4fe90:	asr	x8, x8, #3
   4fe94:	lsr	x9, x8, #1
   4fe98:	add	x10, x0, x9, lsl #3
   4fe9c:	ldr	x11, [x10], #8
   4fea0:	mvn	x12, x9
   4fea4:	add	x8, x8, x12
   4fea8:	cmp	x11, x2
   4feac:	csel	x8, x8, x9, cc  // cc = lo, ul, last
   4feb0:	csel	x0, x10, x0, cc  // cc = lo, ul, last
   4feb4:	cbnz	x8, 4fe94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb28>
   4feb8:	ret
   4febc:	clz	w8, w0
   4fec0:	eor	w0, w8, #0x1f
   4fec4:	ret
   4fec8:	stp	x29, x30, [sp, #-16]!
   4fecc:	ldr	w8, [x0, #12]
   4fed0:	ldr	x0, [x0]
   4fed4:	mov	w1, #0xff                  	// #255
   4fed8:	mov	x29, sp
   4fedc:	lsl	x2, x8, #3
   4fee0:	bl	46a0 <memset@plt>
   4fee4:	ldp	x29, x30, [sp], #16
   4fee8:	ret
   4feec:	sub	sp, sp, #0x80
   4fef0:	stp	x29, x30, [sp, #32]
   4fef4:	stp	x28, x27, [sp, #48]
   4fef8:	stp	x26, x25, [sp, #64]
   4fefc:	stp	x24, x23, [sp, #80]
   4ff00:	stp	x22, x21, [sp, #96]
   4ff04:	stp	x20, x19, [sp, #112]
   4ff08:	ldp	w24, w20, [x5]
   4ff0c:	add	x29, sp, #0x20
   4ff10:	stur	x0, [x29, #-8]
   4ff14:	mov	x0, x2
   4ff18:	mov	w23, w4
   4ff1c:	mov	w21, w3
   4ff20:	mov	x22, x2
   4ff24:	mov	x19, x1
   4ff28:	bl	4fec8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xb5c>
   4ff2c:	cmp	w21, w23
   4ff30:	b.cs	5000c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xca0>  // b.hs, b.nlast
   4ff34:	mov	w9, w24
   4ff38:	mov	w8, w23
   4ff3c:	str	x8, [sp, #16]
   4ff40:	sub	w8, w9, w20
   4ff44:	mov	w25, wzr
   4ff48:	mov	w24, wzr
   4ff4c:	mov	w26, wzr
   4ff50:	mov	w27, wzr
   4ff54:	mov	w28, w21
   4ff58:	add	w8, w8, #0x1
   4ff5c:	str	x8, [sp, #8]
   4ff60:	b	4ff84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc18>
   4ff64:	ldr	x8, [sp, #16]
   4ff68:	cmp	w27, w26
   4ff6c:	csel	w26, w27, w26, hi  // hi = pmore
   4ff70:	csinc	w24, w24, w28, ls  // ls = plast
   4ff74:	csel	w25, w21, w25, hi  // hi = pmore
   4ff78:	cmp	x8, x20
   4ff7c:	mov	x28, x20
   4ff80:	b.eq	50060 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcf4>  // b.none
   4ff84:	ldur	x8, [x29, #-8]
   4ff88:	mov	x0, x22
   4ff8c:	ldr	x8, [x8, #72]
   4ff90:	ldr	w23, [x8, x28, lsl #2]
   4ff94:	mov	w1, w23
   4ff98:	bl	500c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd58>
   4ff9c:	ldr	w8, [x0]
   4ffa0:	cbnz	w8, 4ffac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xc40>
   4ffa4:	ldr	w9, [x19, x23, lsl #2]
   4ffa8:	add	w27, w9, w27
   4ffac:	ldr	x9, [sp, #8]
   4ffb0:	add	x20, x28, #0x1
   4ffb4:	add	w8, w8, #0x1
   4ffb8:	str	w8, [x0]
   4ffbc:	add	w9, w9, w21
   4ffc0:	cmp	w9, w28
   4ffc4:	b.ne	4ff64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbf8>  // b.any
   4ffc8:	ldur	x8, [x29, #-8]
   4ffcc:	mov	x0, x22
   4ffd0:	ldr	x8, [x8, #72]
   4ffd4:	ldr	w23, [x8, w21, uxtw #2]
   4ffd8:	mov	w1, w23
   4ffdc:	bl	500c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd58>
   4ffe0:	ldr	w8, [x0]
   4ffe4:	add	w21, w21, #0x1
   4ffe8:	subs	w8, w8, #0x1
   4ffec:	str	w8, [x0]
   4fff0:	b.ne	4ff64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbf8>  // b.any
   4fff4:	mov	x0, x22
   4fff8:	mov	w1, w23
   4fffc:	bl	5010c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xda0>
   50000:	ldr	w8, [x19, x23, lsl #2]
   50004:	sub	w27, w27, w8
   50008:	b	4ff64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xbf8>
   5000c:	mov	x1, xzr
   50010:	mov	w24, wzr
   50014:	mov	w25, wzr
   50018:	cmp	w25, w24
   5001c:	b.eq	5006c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd00>  // b.none
   50020:	ldur	x8, [x29, #-8]
   50024:	mov	w9, w24
   50028:	ldr	x10, [x8, #72]
   5002c:	mov	w8, w25
   50030:	ldr	w11, [x10, w25, uxtw #2]
   50034:	ldr	w11, [x19, x11, lsl #2]
   50038:	cmp	w11, #0x0
   5003c:	csinc	w8, w8, w25, eq  // eq = none
   50040:	ccmp	w9, w25, #0x0, ne  // ne = any
   50044:	csel	w9, w9, w25, cc  // cc = lo, ul, last
   50048:	add	w25, w25, #0x1
   5004c:	cmp	w24, w25
   50050:	b.ne	50030 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcc4>  // b.any
   50054:	cmp	w9, w8
   50058:	b.ne	5007c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd10>  // b.any
   5005c:	b	5009c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd30>
   50060:	mov	w1, w26
   50064:	cmp	w25, w24
   50068:	b.ne	50020 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xcb4>  // b.any
   5006c:	mov	w9, w24
   50070:	mov	w8, w25
   50074:	cmp	w9, w8
   50078:	b.eq	5009c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd30>  // b.none
   5007c:	ldur	x10, [x29, #-8]
   50080:	mov	w11, w9
   50084:	ldr	x10, [x10, #72]
   50088:	ldr	w12, [x10, w11, uxtw #2]
   5008c:	add	w11, w11, #0x1
   50090:	cmp	w8, w11
   50094:	str	wzr, [x19, x12, lsl #2]
   50098:	b.ne	50088 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd1c>  // b.any
   5009c:	ldp	x20, x19, [sp, #112]
   500a0:	ldp	x22, x21, [sp, #96]
   500a4:	ldp	x24, x23, [sp, #80]
   500a8:	ldp	x26, x25, [sp, #64]
   500ac:	ldp	x28, x27, [sp, #48]
   500b0:	ldp	x29, x30, [sp, #32]
   500b4:	mov	w0, w9
   500b8:	bfi	x0, x8, #32, #32
   500bc:	add	sp, sp, #0x80
   500c0:	ret
   500c4:	stp	x29, x30, [sp, #-32]!
   500c8:	stp	x20, x19, [sp, #16]
   500cc:	ldr	x20, [x0]
   500d0:	mov	x29, sp
   500d4:	mov	w19, w1
   500d8:	bl	501e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe78>
   500dc:	mov	w8, w0
   500e0:	add	x0, x20, w0, uxtw #3
   500e4:	ldr	w9, [x0, #4]!
   500e8:	cmn	w9, #0x1
   500ec:	b.ne	50100 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xd94>  // b.any
   500f0:	mov	w8, w8
   500f4:	lsl	x8, x8, #3
   500f8:	str	w19, [x20, x8]
   500fc:	str	wzr, [x0]
   50100:	ldp	x20, x19, [sp, #16]
   50104:	ldp	x29, x30, [sp], #32
   50108:	ret
   5010c:	stp	x29, x30, [sp, #-96]!
   50110:	stp	x28, x27, [sp, #16]
   50114:	stp	x26, x25, [sp, #32]
   50118:	stp	x24, x23, [sp, #48]
   5011c:	stp	x22, x21, [sp, #64]
   50120:	stp	x20, x19, [sp, #80]
   50124:	mov	x29, sp
   50128:	mov	x19, x0
   5012c:	bl	501e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe78>
   50130:	ldr	x22, [x19]
   50134:	add	x8, x22, w0, uxtw #3
   50138:	ldr	w8, [x8, #4]
   5013c:	cmn	w8, #0x1
   50140:	b.eq	501c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe5c>  // b.none
   50144:	ldr	w23, [x19, #16]
   50148:	mov	w8, w0
   5014c:	mov	w20, w0
   50150:	add	x24, x22, x8, lsl #3
   50154:	mov	w26, #0x1                   	// #1
   50158:	mov	w25, #0xffffffff            	// #-1
   5015c:	b	5016c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe00>
   50160:	mov	w8, wzr
   50164:	str	w25, [x24, #4]
   50168:	tbz	w8, #0, 501c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe5c>
   5016c:	add	w8, w20, #0x1
   50170:	and	x20, x8, x23
   50174:	add	x27, x22, x20, lsl #3
   50178:	ldr	w28, [x27, #4]
   5017c:	cmn	w28, #0x1
   50180:	b.eq	50160 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xdf4>  // b.none
   50184:	ldr	w21, [x27]
   50188:	mov	x0, x19
   5018c:	mov	w1, w21
   50190:	bl	5025c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xef0>
   50194:	sub	w8, w20, w0
   50198:	and	w8, w8, w23
   5019c:	cmp	w8, w26
   501a0:	b.cs	501b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe48>  // b.hs, b.nlast
   501a4:	add	w26, w26, #0x1
   501a8:	mov	w8, #0x1                   	// #1
   501ac:	tbnz	w8, #0, 5016c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe00>
   501b0:	b	501c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe5c>
   501b4:	stp	w21, w28, [x24]
   501b8:	mov	w26, #0x1                   	// #1
   501bc:	mov	x24, x27
   501c0:	mov	w8, #0x1                   	// #1
   501c4:	tbnz	w8, #0, 5016c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe00>
   501c8:	ldp	x20, x19, [sp, #80]
   501cc:	ldp	x22, x21, [sp, #64]
   501d0:	ldp	x24, x23, [sp, #48]
   501d4:	ldp	x26, x25, [sp, #32]
   501d8:	ldp	x28, x27, [sp, #16]
   501dc:	ldp	x29, x30, [sp], #96
   501e0:	ret
   501e4:	stp	x29, x30, [sp, #-32]!
   501e8:	stp	x20, x19, [sp, #16]
   501ec:	mov	x29, sp
   501f0:	mov	w19, w1
   501f4:	mov	x20, x0
   501f8:	bl	5025c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xef0>
   501fc:	ldr	x9, [x20]
   50200:	add	x10, x9, w0, uxtw #3
   50204:	ldr	w10, [x10, #4]
   50208:	cmn	w10, #0x1
   5020c:	b.eq	50230 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xec4>  // b.none
   50210:	mov	w10, w0
   50214:	lsl	x10, x10, #3
   50218:	ldr	w10, [x9, x10]
   5021c:	cmp	w10, w19
   50220:	cset	w10, ne  // ne = any
   50224:	csel	w8, w0, w8, eq  // eq = none
   50228:	cbnz	w10, 5023c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xed0>
   5022c:	b	5024c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xee0>
   50230:	mov	w10, wzr
   50234:	mov	w8, w0
   50238:	cbz	w10, 5024c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xee0>
   5023c:	ldr	w10, [x20, #16]
   50240:	add	w11, w0, #0x1
   50244:	and	w0, w10, w11
   50248:	b	50200 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xe94>
   5024c:	ldp	x20, x19, [sp, #16]
   50250:	mov	w0, w8
   50254:	ldp	x29, x30, [sp], #32
   50258:	ret
   5025c:	ldr	w8, [x0, #8]
   50260:	mov	w9, #0x79b1                	// #31153
   50264:	movk	w9, #0x9e37, lsl #16
   50268:	mul	w9, w1, w9
   5026c:	neg	w8, w8
   50270:	lsr	w0, w9, w8
   50274:	ret
   50278:	stp	x29, x30, [sp, #-64]!
   5027c:	stp	x22, x21, [sp, #32]
   50280:	mov	w21, #0xffffffff            	// #-1
   50284:	stp	x24, x23, [sp, #16]
   50288:	stp	x20, x19, [sp, #48]
   5028c:	mov	x29, sp
   50290:	cbz	x0, 50364 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xff8>
   50294:	mov	x19, x1
   50298:	cbz	x1, 50364 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xff8>
   5029c:	mov	w20, w2
   502a0:	tbnz	w2, #31, 50364 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xff8>
   502a4:	cbz	w20, 502c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf5c>
   502a8:	mov	x22, x0
   502ac:	cmp	w20, #0x2
   502b0:	b.eq	502d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf64>  // b.none
   502b4:	cmp	w20, #0x1
   502b8:	b.ne	502f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf8c>  // b.any
   502bc:	mov	w21, wzr
   502c0:	str	wzr, [x19]
   502c4:	b	50364 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xff8>
   502c8:	mov	w21, w20
   502cc:	b	50364 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xff8>
   502d0:	ldrb	w8, [x22]
   502d4:	ldrb	w9, [x22, #1]
   502d8:	mov	w10, #0x1                   	// #1
   502dc:	mov	w21, wzr
   502e0:	cmp	w8, w9
   502e4:	cset	w8, cc  // cc = lo, ul, last
   502e8:	cset	w9, cs  // cs = hs, nlast
   502ec:	str	wzr, [x19, w9, uxtw #2]
   502f0:	str	w10, [x19, w8, uxtw #2]
   502f4:	b	50364 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xff8>
   502f8:	mov	w0, #0x400                 	// #1024
   502fc:	bl	4640 <malloc@plt>
   50300:	mov	x23, x0
   50304:	mov	w0, #0x40000               	// #262144
   50308:	bl	4640 <malloc@plt>
   5030c:	mov	x24, x0
   50310:	mov	w21, #0xfffffffe            	// #-2
   50314:	cbz	x23, 50354 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xfe8>
   50318:	cbz	x24, 50354 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xfe8>
   5031c:	mov	x0, x22
   50320:	mov	x1, x19
   50324:	mov	x2, x23
   50328:	mov	x3, x24
   5032c:	mov	w4, w20
   50330:	bl	5037c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1010>
   50334:	mov	w5, w0
   50338:	mov	x0, x22
   5033c:	mov	x1, x19
   50340:	mov	x2, x23
   50344:	mov	x3, x24
   50348:	mov	w4, w20
   5034c:	bl	50900 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1594>
   50350:	mov	w21, wzr
   50354:	mov	x0, x24
   50358:	bl	4880 <free@plt>
   5035c:	mov	x0, x23
   50360:	bl	4880 <free@plt>
   50364:	mov	w0, w21
   50368:	ldp	x20, x19, [sp, #48]
   5036c:	ldp	x22, x21, [sp, #32]
   50370:	ldp	x24, x23, [sp, #16]
   50374:	ldp	x29, x30, [sp], #64
   50378:	ret
   5037c:	sub	sp, sp, #0x90
   50380:	stp	x20, x19, [sp, #128]
   50384:	mov	x20, x2
   50388:	stp	x24, x23, [sp, #96]
   5038c:	stp	x22, x21, [sp, #112]
   50390:	mov	x21, x1
   50394:	mov	x23, x0
   50398:	mov	w2, #0x400                 	// #1024
   5039c:	mov	x0, x20
   503a0:	mov	w1, wzr
   503a4:	stp	x29, x30, [sp, #48]
   503a8:	stp	x28, x27, [sp, #64]
   503ac:	stp	x26, x25, [sp, #80]
   503b0:	add	x29, sp, #0x30
   503b4:	mov	w22, w4
   503b8:	mov	x19, x3
   503bc:	bl	46a0 <memset@plt>
   503c0:	mov	w2, #0x40000               	// #262144
   503c4:	mov	x0, x19
   503c8:	mov	w1, wzr
   503cc:	bl	46a0 <memset@plt>
   503d0:	sxtw	x8, w22
   503d4:	cmp	w22, #0x1
   503d8:	sub	x3, x8, #0x1
   503dc:	mov	w9, w22
   503e0:	stur	x22, [x29, #-8]
   503e4:	b.lt	504d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x116c>  // b.tstop
   503e8:	ldrb	w13, [x23, x3]
   503ec:	sub	x10, x23, #0x1
   503f0:	mov	x11, #0xfffffffe00000000    	// #-8589934592
   503f4:	mov	x12, #0xffffffff00000000    	// #-4294967296
   503f8:	mov	w14, w3
   503fc:	ldur	x9, [x29, #-8]
   50400:	b	5040c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x10a0>
   50404:	mov	w14, w15
   50408:	tbnz	w14, #31, 504d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x116c>
   5040c:	sxtw	x18, w14
   50410:	sub	w0, w14, #0x2
   50414:	add	x1, x11, x18, lsl #32
   50418:	mov	w17, w13
   5041c:	sbfiz	x13, x17, #2, #32
   50420:	ldr	w2, [x20, x13]
   50424:	mov	x14, x18
   50428:	mov	w15, w0
   5042c:	mov	x16, x1
   50430:	add	w0, w2, #0x1
   50434:	subs	x18, x18, #0x1
   50438:	str	w0, [x20, x13]
   5043c:	b.lt	50458 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x10ec>  // b.tstop
   50440:	ldrb	w13, [x10, x14]
   50444:	sub	w0, w15, #0x1
   50448:	add	x1, x16, x12
   5044c:	cmp	w17, w13
   50450:	b.le	50418 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x10ac>
   50454:	b	5045c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x10f0>
   50458:	mov	w13, w17
   5045c:	cmp	x14, #0x1
   50460:	add	w14, w15, #0x1
   50464:	b.lt	50408 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x109c>  // b.tstop
   50468:	orr	w17, w17, w13, lsl #8
   5046c:	sbfiz	x17, x17, #2, #32
   50470:	ldr	w18, [x19, x17]
   50474:	sub	w9, w9, #0x1
   50478:	cmn	w15, #0x1
   5047c:	add	w18, w18, #0x1
   50480:	str	w18, [x19, x17]
   50484:	str	w14, [x21, w9, sxtw #2]
   50488:	b.eq	50404 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1098>  // b.none
   5048c:	asr	x16, x16, #32
   50490:	ldrb	w15, [x23, x16]
   50494:	cmp	w13, w15
   50498:	b.lt	504cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1160>  // b.tstop
   5049c:	mov	w14, w15
   504a0:	bfi	w14, w13, #8, #24
   504a4:	sbfiz	x13, x14, #2, #32
   504a8:	ldr	w17, [x19, x13]
   504ac:	sub	x14, x16, #0x1
   504b0:	cmp	x16, #0x0
   504b4:	mov	x16, x14
   504b8:	add	w17, w17, #0x1
   504bc:	str	w17, [x19, x13]
   504c0:	mov	w13, w15
   504c4:	b.gt	50490 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1124>
   504c8:	b	504d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1164>
   504cc:	mov	w14, w16
   504d0:	mov	w13, w15
   504d4:	b	50408 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x109c>
   504d8:	mov	x13, xzr
   504dc:	mov	w10, wzr
   504e0:	mov	w11, wzr
   504e4:	mov	w12, #0x100                 	// #256
   504e8:	b	504f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x118c>
   504ec:	cmp	x13, #0x100
   504f0:	add	w12, w12, #0x100
   504f4:	b.eq	50564 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x11f8>  // b.none
   504f8:	mov	x14, x13
   504fc:	lsl	x13, x13, #2
   50500:	add	w15, w10, w11
   50504:	orr	w16, w14, w14, lsl #8
   50508:	ldr	w17, [x20, x13]
   5050c:	str	w15, [x20, x13]
   50510:	ldr	w13, [x19, w16, sxtw #2]
   50514:	cmp	x14, #0xfe
   50518:	add	w10, w17, w10
   5051c:	add	w10, w10, w13
   50520:	add	x13, x14, #0x1
   50524:	b.hi	504ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1180>  // b.pmore
   50528:	mov	w15, w12
   5052c:	mov	w16, w13
   50530:	orr	w17, w16, w14, lsl #8
   50534:	sbfiz	x17, x17, #2, #32
   50538:	ldr	w18, [x19, x17]
   5053c:	orr	w0, w15, w14
   50540:	add	w16, w16, #0x1
   50544:	cmp	w16, #0x100
   50548:	add	w11, w18, w11
   5054c:	str	w11, [x19, x17]
   50550:	ldr	w17, [x19, w0, sxtw #2]
   50554:	add	w15, w15, #0x100
   50558:	add	w10, w17, w10
   5055c:	b.ne	50530 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x11c4>  // b.any
   50560:	b	504ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1180>
   50564:	sub	x27, x8, w9, sxtw
   50568:	cmp	w27, #0x1
   5056c:	b.lt	508dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1570>  // b.tstop
   50570:	add	x8, x21, x8, lsl #2
   50574:	lsl	x10, x27, #2
   50578:	cmp	w27, #0x1
   5057c:	sub	x26, x8, x10
   50580:	add	x25, x21, x10
   50584:	stp	x3, x20, [sp, #8]
   50588:	b.eq	505d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1268>  // b.none
   5058c:	ldur	x8, [x29, #-8]
   50590:	sub	w8, w8, w9
   50594:	sub	w8, w8, #0x2
   50598:	sxtw	x8, w8
   5059c:	ldrsw	x9, [x26, x8, lsl #2]
   505a0:	cmp	x8, #0x0
   505a4:	add	x9, x23, x9
   505a8:	ldrb	w10, [x9, #1]
   505ac:	ldrb	w9, [x9]
   505b0:	lsl	x10, x10, #2
   505b4:	bfi	x10, x9, #10, #8
   505b8:	ldrsw	x9, [x19, x10]
   505bc:	sub	x9, x9, #0x1
   505c0:	str	w9, [x19, x10]
   505c4:	sub	x10, x8, #0x1
   505c8:	str	w8, [x21, x9, lsl #2]
   505cc:	mov	x8, x10
   505d0:	b.gt	5059c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1230>
   505d4:	subs	w8, w27, #0x1
   505d8:	ldrsw	x8, [x26, w8, sxtw #2]
   505dc:	subs	w24, w27, #0x1
   505e0:	stur	x23, [x29, #-16]
   505e4:	str	x27, [sp, #24]
   505e8:	add	x8, x23, x8
   505ec:	ldrb	w9, [x8, #1]
   505f0:	ldrb	w8, [x8]
   505f4:	lsl	x9, x9, #2
   505f8:	bfi	x9, x8, #10, #8
   505fc:	ldrsw	x8, [x19, x9]
   50600:	sub	x8, x8, #0x1
   50604:	str	w8, [x19, x9]
   50608:	str	w24, [x21, x8, lsl #2]
   5060c:	b.lt	50694 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1328>  // b.tstop
   50610:	ldur	x8, [x29, #-8]
   50614:	ldr	x23, [sp, #24]
   50618:	mov	w22, #0xfe                  	// #254
   5061c:	sub	w27, w8, w23, lsl #1
   50620:	b	50630 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12c4>
   50624:	cmp	w23, #0x0
   50628:	sub	w22, w22, #0x1
   5062c:	b.le	50694 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1328>
   50630:	lsl	w28, w22, #8
   50634:	mov	w20, #0xff                  	// #255
   50638:	mov	w8, w23
   5063c:	b	50650 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12e4>
   50640:	sub	w20, w20, #0x1
   50644:	cmp	w22, w20
   50648:	mov	w8, w23
   5064c:	b.ge	50624 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12b8>  // b.tcont
   50650:	orr	w9, w20, w28
   50654:	ldr	w23, [x19, w9, sxtw #2]
   50658:	sub	w9, w8, w23
   5065c:	cmp	w9, #0x2
   50660:	b.lt	50640 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12d4>  // b.tstop
   50664:	sxtw	x9, w23
   50668:	add	x2, x21, x9, lsl #2
   5066c:	ldr	w9, [x2]
   50670:	ldp	x0, x6, [x29, #-16]
   50674:	add	x3, x21, w8, sxtw #2
   50678:	mov	x1, x26
   5067c:	cmp	w9, w24
   50680:	cset	w7, eq  // eq = none
   50684:	mov	x4, x25
   50688:	mov	w5, w27
   5068c:	bl	514c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x215c>
   50690:	b	50640 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x12d4>
   50694:	ldp	x20, x27, [sp, #16]
   50698:	ldr	x22, [sp, #8]
   5069c:	cmp	w27, #0x1
   506a0:	b.lt	50728 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13bc>  // b.tstop
   506a4:	mov	w8, w24
   506a8:	ldr	w9, [x21, w8, sxtw #2]
   506ac:	tbnz	w9, #31, 506f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1388>
   506b0:	sxtw	x8, w8
   506b4:	add	x11, x21, x8, lsl #2
   506b8:	mov	w13, #0xffffffff            	// #-1
   506bc:	mov	x9, x11
   506c0:	ldrsw	x11, [x11]
   506c4:	mov	w10, w13
   506c8:	mov	w12, w8
   506cc:	subs	x8, x8, #0x1
   506d0:	str	w12, [x25, x11, lsl #2]
   506d4:	b.lt	506e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x137c>  // b.tstop
   506d8:	mov	x11, x9
   506dc:	ldr	w14, [x11, #-4]!
   506e0:	sub	w13, w10, #0x1
   506e4:	tbz	w14, #31, 506bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1350>
   506e8:	subs	w8, w12, #0x1
   506ec:	str	w10, [x9]
   506f0:	b.le	50728 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13bc>
   506f4:	add	w9, w8, #0x1
   506f8:	add	x10, x21, w8, sxtw #2
   506fc:	ldr	w11, [x10]
   50700:	sub	w9, w9, #0x1
   50704:	mvn	w11, w11
   50708:	str	w11, [x10]
   5070c:	str	w8, [x25, w11, sxtw #2]
   50710:	ldrsw	x11, [x10, #-4]!
   50714:	tbnz	w11, #31, 506fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1390>
   50718:	str	w8, [x25, x11, lsl #2]
   5071c:	cmp	w9, #0x1
   50720:	sub	w8, w9, #0x2
   50724:	b.gt	506a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x133c>
   50728:	mov	x0, x25
   5072c:	mov	x1, x21
   50730:	mov	w2, w27
   50734:	bl	51744 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x23d8>
   50738:	ldp	x2, x8, [x29, #-16]
   5073c:	cmp	w8, #0x1
   50740:	b.lt	50828 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x14bc>  // b.tstop
   50744:	ldrb	w12, [x2, x22]
   50748:	sub	x8, x2, #0x1
   5074c:	mov	x9, #0xfffffffe00000000    	// #-8589934592
   50750:	mov	x10, #0xffffffff00000000    	// #-4294967296
   50754:	mov	w11, w27
   50758:	b	50764 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13f8>
   5075c:	mov	w22, w15
   50760:	tbnz	w22, #31, 50828 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x14bc>
   50764:	sxtw	x13, w22
   50768:	mov	x16, xzr
   5076c:	add	x0, x9, x13, lsl #32
   50770:	add	x18, x8, x13
   50774:	add	x15, x13, x16
   50778:	mov	x14, x16
   5077c:	cmp	x15, #0x1
   50780:	mov	x17, x0
   50784:	b.lt	507a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1438>  // b.tstop
   50788:	ldrb	w1, [x18, x14]
   5078c:	sub	x16, x14, #0x1
   50790:	add	x0, x17, x10
   50794:	cmp	w12, w1
   50798:	mov	w12, w1
   5079c:	b.le	50774 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1408>
   507a0:	mov	w12, w1
   507a4:	sub	w16, w13, #0x1
   507a8:	cmp	x15, #0x0
   507ac:	add	x15, x16, x14
   507b0:	b.le	5075c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13f0>
   507b4:	neg	w16, w13
   507b8:	add	x16, x16, #0x1
   507bc:	cmp	w16, w14
   507c0:	b.ne	507d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1464>  // b.any
   507c4:	sub	w17, w13, #0x2
   507c8:	add	x22, x17, x14
   507cc:	b	507fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1490>
   507d0:	asr	x22, x17, #32
   507d4:	ldrb	w17, [x2, x22]
   507d8:	cmp	w12, w17
   507dc:	b.lt	507f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x148c>  // b.tstop
   507e0:	sub	x18, x22, #0x1
   507e4:	cmp	x22, #0x0
   507e8:	mov	x22, x18
   507ec:	mov	w12, w17
   507f0:	b.gt	507d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1468>
   507f4:	mov	w22, w18
   507f8:	mov	w12, w17
   507fc:	sub	w17, w13, w22
   50800:	sub	w11, w11, #0x1
   50804:	add	w17, w17, w14
   50808:	ldrsw	x18, [x25, w11, sxtw #2]
   5080c:	sub	w17, w17, #0x1
   50810:	cmp	w17, #0x1
   50814:	ccmp	w16, w14, #0x4, le
   50818:	add	w13, w13, w14
   5081c:	csneg	w13, w15, w13, eq  // eq = none
   50820:	str	w13, [x21, x18, lsl #2]
   50824:	tbz	w22, #31, 50764 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x13f8>
   50828:	ldur	x9, [x29, #-8]
   5082c:	mov	w8, #0x3fffc               	// #262140
   50830:	str	w9, [x19, x8]
   50834:	mov	w9, #0xfe                  	// #254
   50838:	b	50864 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x14f8>
   5083c:	orr	w10, w8, w8, lsl #8
   50840:	sbfiz	x10, x10, #2, #32
   50844:	ldr	w12, [x19, x10]
   50848:	orr	w9, w9, w8, lsl #8
   5084c:	sub	w12, w11, w12
   50850:	add	w12, w12, #0x1
   50854:	str	w12, [x19, w9, sxtw #2]
   50858:	sub	x9, x8, #0x1
   5085c:	str	w11, [x19, x10]
   50860:	cbz	x8, 508dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1570>
   50864:	mov	x8, x9
   50868:	add	x9, x20, x9, lsl #2
   5086c:	ldr	w10, [x9, #4]
   50870:	add	w9, w8, #0x1
   50874:	sub	w11, w10, #0x1
   50878:	mov	w10, #0xff                  	// #255
   5087c:	b	5088c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1520>
   50880:	sub	w10, w10, #0x1
   50884:	cmp	x8, x10
   50888:	b.cs	5083c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x14d0>  // b.hs, b.nlast
   5088c:	orr	w12, w8, w10, lsl #8
   50890:	sbfiz	x12, x12, #2, #32
   50894:	ldr	w13, [x19, x12]
   50898:	str	w11, [x19, x12]
   5089c:	orr	w12, w10, w8, lsl #8
   508a0:	ldrsw	x12, [x19, w12, sxtw #2]
   508a4:	sub	w11, w11, w13
   508a8:	cmp	w12, w24
   508ac:	b.gt	50880 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1514>
   508b0:	sxtw	x14, w24
   508b4:	sbfiz	x13, x11, #2, #32
   508b8:	ldr	w15, [x21, x14, lsl #2]
   508bc:	sub	x24, x14, #0x1
   508c0:	cmp	x14, x12
   508c4:	sub	w11, w11, #0x1
   508c8:	str	w15, [x21, x13]
   508cc:	sub	x13, x13, #0x4
   508d0:	mov	x14, x24
   508d4:	b.gt	508b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x154c>
   508d8:	b	50880 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1514>
   508dc:	mov	w0, w27
   508e0:	ldp	x20, x19, [sp, #128]
   508e4:	ldp	x22, x21, [sp, #112]
   508e8:	ldp	x24, x23, [sp, #96]
   508ec:	ldp	x26, x25, [sp, #80]
   508f0:	ldp	x28, x27, [sp, #64]
   508f4:	ldp	x29, x30, [sp, #48]
   508f8:	add	sp, sp, #0x90
   508fc:	ret
   50900:	stp	x29, x30, [sp, #-16]!
   50904:	cmp	w5, #0x1
   50908:	mov	x29, sp
   5090c:	b.lt	50a40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x16d4>  // b.tstop
   50910:	sub	x8, x1, #0x4
   50914:	mov	w10, #0xfe                  	// #254
   50918:	b	50924 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x15b8>
   5091c:	sub	x10, x9, #0x1
   50920:	cbz	x9, 50a40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x16d4>
   50924:	mov	x9, x10
   50928:	lsl	x10, x10, #8
   5092c:	add	w11, w9, #0x1
   50930:	add	x12, x2, x9, lsl #2
   50934:	orr	w11, w11, w10
   50938:	ldrsw	x11, [x3, w11, sxtw #2]
   5093c:	ldrsw	x12, [x12, #4]
   50940:	add	x11, x1, x11, lsl #2
   50944:	add	x12, x8, x12, lsl #2
   50948:	cmp	x11, x12
   5094c:	b.hi	5091c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x15b0>  // b.pmore
   50950:	mov	x13, xzr
   50954:	mov	w14, #0xffffffff            	// #-1
   50958:	b	5097c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1610>
   5095c:	ldrb	w16, [x0]
   50960:	cmp	x9, x16
   50964:	b.ne	50bac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1840>  // b.any
   50968:	mvn	w15, w15
   5096c:	str	w15, [x12]
   50970:	sub	x12, x12, #0x4
   50974:	cmp	x11, x12
   50978:	b.hi	5091c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x15b0>  // b.pmore
   5097c:	ldrsw	x15, [x12]
   50980:	cmp	w15, #0x1
   50984:	b.lt	509e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1678>  // b.tstop
   50988:	ldrb	w17, [x0, x15]
   5098c:	cmp	x9, x17
   50990:	b.ne	50b40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17d4>  // b.any
   50994:	add	x16, x15, #0x1
   50998:	cmp	w16, w4
   5099c:	b.ge	50b20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17b4>  // b.tcont
   509a0:	ldrb	w16, [x0, x16]
   509a4:	cmp	w17, w16
   509a8:	b.hi	50b20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17b4>  // b.pmore
   509ac:	sub	x16, x15, #0x1
   509b0:	ldrb	w18, [x0, x16]
   509b4:	cmp	w18, w17
   509b8:	b.hi	50b60 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17f4>  // b.pmore
   509bc:	mvn	w17, w15
   509c0:	str	w17, [x12]
   509c4:	ldrb	w17, [x0, x16]
   509c8:	cmp	w15, #0x2
   509cc:	b.ge	509f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1684>  // b.tcont
   509d0:	cmp	w14, w17
   509d4:	b.ne	50a08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x169c>  // b.any
   509d8:	cmp	x13, x12
   509dc:	b.cc	50a34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x16c8>  // b.lo, b.ul, b.last
   509e0:	b	50b80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1814>
   509e4:	cbz	w15, 5095c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x15f0>
   509e8:	tbnz	w15, #31, 50968 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x15fc>
   509ec:	b	50bac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1840>
   509f0:	add	x18, x15, x0
   509f4:	ldurb	w18, [x18, #-2]
   509f8:	cmp	w18, w17
   509fc:	csneg	w16, w16, w15, ls  // ls = plast
   50a00:	cmp	w14, w17
   50a04:	b.eq	509d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x166c>  // b.none
   50a08:	tbnz	w14, #31, 50a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x16b0>
   50a0c:	sub	x13, x13, x1
   50a10:	lsr	x13, x13, #2
   50a14:	orr	w14, w14, w10
   50a18:	str	w13, [x3, w14, sxtw #2]
   50a1c:	orr	w13, w10, w17
   50a20:	ldrsw	x13, [x3, w13, sxtw #2]
   50a24:	mov	w14, w17
   50a28:	add	x13, x1, x13, lsl #2
   50a2c:	cmp	x13, x12
   50a30:	b.cs	50b80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1814>  // b.hs, b.nlast
   50a34:	cbz	x13, 50b8c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1820>
   50a38:	str	w16, [x13], #-4
   50a3c:	b	50970 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1604>
   50a40:	sxtw	x9, w4
   50a44:	sub	x10, x9, #0x1
   50a48:	ldrb	w8, [x0, x10]
   50a4c:	add	x9, x9, x0
   50a50:	ldurb	w9, [x9, #-2]
   50a54:	ldrsw	x11, [x2, x8, lsl #2]
   50a58:	cmp	w9, w8
   50a5c:	csneg	w9, w10, w4, cs  // cs = hs, nlast
   50a60:	add	x10, x1, x11, lsl #2
   50a64:	cmp	w4, #0x1
   50a68:	str	w9, [x10]
   50a6c:	b.lt	50b18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17ac>  // b.tstop
   50a70:	add	x9, x1, w4, sxtw #2
   50a74:	add	x11, x10, #0x4
   50a78:	mov	x10, x1
   50a7c:	b	50a8c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1720>
   50a80:	add	x10, x10, #0x4
   50a84:	cmp	x10, x9
   50a88:	b.cs	50b18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x17ac>  // b.hs, b.nlast
   50a8c:	ldrsw	x14, [x10]
   50a90:	cmp	w14, #0x1
   50a94:	b.lt	50b08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x179c>  // b.tstop
   50a98:	sub	x12, x14, #0x1
   50a9c:	ldrb	w13, [x0, x12]
   50aa0:	ldrb	w15, [x0, x14]
   50aa4:	cmp	w13, w15
   50aa8:	b.cc	50bcc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1860>  // b.lo, b.ul, b.last
   50aac:	cbz	w12, 50ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1768>
   50ab0:	add	x15, x14, x0
   50ab4:	ldurb	w15, [x15, #-2]
   50ab8:	cmp	w15, w13
   50abc:	b.cc	50ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1768>  // b.lo, b.ul, b.last
   50ac0:	cmp	w8, w13
   50ac4:	b.ne	50ae0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1774>  // b.any
   50ac8:	cmp	x10, x11
   50acc:	b.cc	50b00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1794>  // b.lo, b.ul, b.last
   50ad0:	b	50bec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1880>
   50ad4:	neg	w12, w14
   50ad8:	cmp	w8, w13
   50adc:	b.eq	50ac8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x175c>  // b.none
   50ae0:	sub	x11, x11, x1
   50ae4:	lsr	x11, x11, #2
   50ae8:	str	w11, [x2, w8, sxtw #2]
   50aec:	ldrsw	x8, [x2, x13, lsl #2]
   50af0:	add	x11, x1, x8, lsl #2
   50af4:	mov	w8, w13
   50af8:	cmp	x10, x11
   50afc:	b.cs	50bec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1880>  // b.hs, b.nlast
   50b00:	str	w12, [x11], #4
   50b04:	b	50a80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1714>
   50b08:	tbz	w14, #31, 50c0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x18a0>
   50b0c:	mvn	w12, w14
   50b10:	str	w12, [x10]
   50b14:	b	50a80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1714>
   50b18:	ldp	x29, x30, [sp], #16
   50b1c:	ret
   50b20:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b24:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b28:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b2c:	add	x0, x0, #0xb6d
   50b30:	add	x1, x1, #0x9ff
   50b34:	add	x3, x3, #0xb25
   50b38:	mov	w2, #0x65f                 	// #1631
   50b3c:	bl	4a40 <__assert_fail@plt>
   50b40:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b44:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b48:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b4c:	add	x0, x0, #0xb1a
   50b50:	add	x1, x1, #0x9ff
   50b54:	add	x3, x3, #0xb25
   50b58:	mov	w2, #0x65e                 	// #1630
   50b5c:	bl	4a40 <__assert_fail@plt>
   50b60:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b64:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b68:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b6c:	add	x0, x0, #0xb91
   50b70:	add	x1, x1, #0x9ff
   50b74:	add	x3, x3, #0xb25
   50b78:	mov	w2, #0x660                 	// #1632
   50b7c:	bl	4a40 <__assert_fail@plt>
   50b80:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b84:	add	x0, x0, #0xba2
   50b88:	b	50b94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1828>
   50b8c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b90:	add	x0, x0, #0xba8
   50b94:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b98:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50b9c:	add	x1, x1, #0x9ff
   50ba0:	add	x3, x3, #0xb25
   50ba4:	mov	w2, #0x668                 	// #1640
   50ba8:	bl	4a40 <__assert_fail@plt>
   50bac:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bb0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bb4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bb8:	add	x0, x0, #0xbb2
   50bbc:	add	x1, x1, #0x9ff
   50bc0:	add	x3, x3, #0xb25
   50bc4:	mov	w2, #0x66b                 	// #1643
   50bc8:	bl	4a40 <__assert_fail@plt>
   50bcc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bd0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bd4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bd8:	add	x0, x0, #0xbd8
   50bdc:	add	x1, x1, #0x9ff
   50be0:	add	x3, x3, #0xb25
   50be4:	mov	w2, #0x679                 	// #1657
   50be8:	bl	4a40 <__assert_fail@plt>
   50bec:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bf0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bf4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50bf8:	add	x0, x0, #0xbe9
   50bfc:	add	x1, x1, #0x9ff
   50c00:	add	x3, x3, #0xb25
   50c04:	mov	w2, #0x680                 	// #1664
   50c08:	bl	4a40 <__assert_fail@plt>
   50c0c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50c10:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50c14:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50c18:	add	x0, x0, #0xbef
   50c1c:	add	x1, x1, #0x9ff
   50c20:	add	x3, x3, #0xb25
   50c24:	mov	w2, #0x683                 	// #1667
   50c28:	bl	4a40 <__assert_fail@plt>
   50c2c:	stp	x29, x30, [sp, #-96]!
   50c30:	stp	x28, x27, [sp, #16]
   50c34:	mov	w28, #0xffffffff            	// #-1
   50c38:	stp	x26, x25, [sp, #32]
   50c3c:	stp	x24, x23, [sp, #48]
   50c40:	stp	x22, x21, [sp, #64]
   50c44:	stp	x20, x19, [sp, #80]
   50c48:	mov	x29, sp
   50c4c:	cbz	x0, 50dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a5c>
   50c50:	mov	x22, x1
   50c54:	cbz	x1, 50dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a5c>
   50c58:	mov	w21, w3
   50c5c:	tbnz	w3, #31, 50dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a5c>
   50c60:	mov	x25, x0
   50c64:	cmp	w21, #0x1
   50c68:	b.gt	50c80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1914>
   50c6c:	b.ne	50d14 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x19a8>  // b.any
   50c70:	ldrb	w8, [x25]
   50c74:	mov	w28, w21
   50c78:	strb	w8, [x22]
   50c7c:	b	50dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a5c>
   50c80:	mov	x26, x5
   50c84:	mov	x27, x4
   50c88:	mov	x19, x2
   50c8c:	mov	x20, x2
   50c90:	cbnz	x2, 50ca4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1938>
   50c94:	add	w8, w21, #0x1
   50c98:	sbfiz	x0, x8, #2, #32
   50c9c:	bl	4640 <malloc@plt>
   50ca0:	mov	x20, x0
   50ca4:	mov	w0, #0x400                 	// #1024
   50ca8:	bl	4640 <malloc@plt>
   50cac:	mov	x23, x0
   50cb0:	mov	w0, #0x40000               	// #262144
   50cb4:	bl	4640 <malloc@plt>
   50cb8:	mov	x24, x0
   50cbc:	mov	w28, #0xfffffffe            	// #-2
   50cc0:	cbz	x20, 50dac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a40>
   50cc4:	cbz	x23, 50dac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a40>
   50cc8:	cbz	x24, 50dac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a40>
   50ccc:	mov	x0, x25
   50cd0:	mov	x1, x20
   50cd4:	mov	x2, x23
   50cd8:	mov	x3, x24
   50cdc:	mov	w4, w21
   50ce0:	bl	5037c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1010>
   50ce4:	mov	w5, w0
   50ce8:	cbz	x27, 50d1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x19b0>
   50cec:	cbz	x26, 50d1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x19b0>
   50cf0:	mov	x0, x25
   50cf4:	mov	x1, x20
   50cf8:	mov	x2, x23
   50cfc:	mov	x3, x24
   50d00:	mov	w4, w21
   50d04:	mov	x6, x27
   50d08:	mov	x7, x26
   50d0c:	bl	510fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d90>
   50d10:	b	50d34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x19c8>
   50d14:	mov	w28, w21
   50d18:	b	50dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a5c>
   50d1c:	mov	x0, x25
   50d20:	mov	x1, x20
   50d24:	mov	x2, x23
   50d28:	mov	x3, x24
   50d2c:	mov	w4, w21
   50d30:	bl	50de8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a7c>
   50d34:	add	x8, x25, w21, sxtw
   50d38:	ldurb	w8, [x8, #-1]
   50d3c:	cmp	w0, #0x1
   50d40:	strb	w8, [x22]
   50d44:	b.lt	50d70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a04>  // b.tstop
   50d48:	mov	x8, xzr
   50d4c:	mov	w9, w0
   50d50:	add	x10, x22, #0x1
   50d54:	ldr	w12, [x20, x8, lsl #2]
   50d58:	mov	x11, x8
   50d5c:	add	x8, x8, #0x1
   50d60:	cmp	x9, x8
   50d64:	strb	w12, [x10, x11]
   50d68:	b.ne	50d54 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x19e8>  // b.any
   50d6c:	b	50d74 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a08>
   50d70:	mov	w8, wzr
   50d74:	add	w9, w8, #0x1
   50d78:	cmp	w9, w21
   50d7c:	b.ge	50da8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a3c>  // b.tcont
   50d80:	mov	w9, w8
   50d84:	mvn	w10, w8
   50d88:	add	x9, x9, #0x1
   50d8c:	add	x8, x20, x9, lsl #2
   50d90:	add	x9, x22, x9
   50d94:	add	w10, w10, w21
   50d98:	ldr	w11, [x8], #4
   50d9c:	subs	w10, w10, #0x1
   50da0:	strb	w11, [x9], #1
   50da4:	b.ne	50d98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a2c>  // b.any
   50da8:	add	w28, w0, #0x1
   50dac:	mov	x0, x24
   50db0:	bl	4880 <free@plt>
   50db4:	mov	x0, x23
   50db8:	bl	4880 <free@plt>
   50dbc:	cbnz	x19, 50dc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a5c>
   50dc0:	mov	x0, x20
   50dc4:	bl	4880 <free@plt>
   50dc8:	mov	w0, w28
   50dcc:	ldp	x20, x19, [sp, #80]
   50dd0:	ldp	x22, x21, [sp, #64]
   50dd4:	ldp	x24, x23, [sp, #48]
   50dd8:	ldp	x26, x25, [sp, #32]
   50ddc:	ldp	x28, x27, [sp, #16]
   50de0:	ldp	x29, x30, [sp], #96
   50de4:	ret
   50de8:	stp	x29, x30, [sp, #-16]!
   50dec:	cmp	w5, #0x1
   50df0:	mov	x29, sp
   50df4:	b.lt	50f3c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1bd0>  // b.tstop
   50df8:	sub	x8, x1, #0x4
   50dfc:	mov	w10, #0xfe                  	// #254
   50e00:	b	50e0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1aa0>
   50e04:	sub	x10, x9, #0x1
   50e08:	cbz	x9, 50f3c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1bd0>
   50e0c:	mov	x9, x10
   50e10:	lsl	x10, x10, #8
   50e14:	add	w11, w9, #0x1
   50e18:	add	x12, x2, x9, lsl #2
   50e1c:	orr	w11, w11, w10
   50e20:	ldrsw	x11, [x3, w11, sxtw #2]
   50e24:	ldrsw	x12, [x12, #4]
   50e28:	add	x11, x1, x11, lsl #2
   50e2c:	add	x12, x8, x12, lsl #2
   50e30:	cmp	x11, x12
   50e34:	b.hi	50e04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a98>  // b.pmore
   50e38:	mov	x13, xzr
   50e3c:	mov	w14, #0xffffffff            	// #-1
   50e40:	b	50e5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1af0>
   50e44:	cbz	w16, 50f10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ba4>
   50e48:	mvn	w15, w16
   50e4c:	str	w15, [x12]
   50e50:	sub	x12, x12, #0x4
   50e54:	cmp	x11, x12
   50e58:	b.hi	50e04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1a98>  // b.pmore
   50e5c:	ldrsw	x16, [x12]
   50e60:	cmp	w16, #0x1
   50e64:	b.lt	50e44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ad8>  // b.tstop
   50e68:	ldrb	w18, [x0, x16]
   50e6c:	cmp	x9, x18
   50e70:	b.ne	51050 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ce4>  // b.any
   50e74:	add	x15, x16, #0x1
   50e78:	cmp	w15, w4
   50e7c:	b.ge	51030 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1cc4>  // b.tcont
   50e80:	ldrb	w15, [x0, x15]
   50e84:	cmp	w18, w15
   50e88:	b.hi	51030 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1cc4>  // b.pmore
   50e8c:	sub	x15, x16, #0x1
   50e90:	ldrb	w17, [x0, x15]
   50e94:	cmp	w17, w18
   50e98:	b.hi	51070 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d04>  // b.pmore
   50e9c:	mvn	w18, w17
   50ea0:	cmp	w16, #0x2
   50ea4:	str	w18, [x12]
   50ea8:	b.ge	50ec0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b54>  // b.tcont
   50eac:	cmp	w14, w17
   50eb0:	b.ne	50ed8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b6c>  // b.any
   50eb4:	cmp	x13, x12
   50eb8:	b.cc	50f04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b98>  // b.lo, b.ul, b.last
   50ebc:	b	51090 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d24>
   50ec0:	add	x18, x16, x0
   50ec4:	ldurb	w18, [x18, #-2]
   50ec8:	cmp	w18, w17
   50ecc:	csneg	w15, w15, w16, ls  // ls = plast
   50ed0:	cmp	w14, w17
   50ed4:	b.eq	50eb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b48>  // b.none
   50ed8:	tbnz	w14, #31, 50eec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1b80>
   50edc:	sub	x13, x13, x1
   50ee0:	lsr	x13, x13, #2
   50ee4:	orr	w14, w14, w10
   50ee8:	str	w13, [x3, w14, sxtw #2]
   50eec:	orr	w13, w10, w17
   50ef0:	ldrsw	x13, [x3, w13, sxtw #2]
   50ef4:	mov	w14, w17
   50ef8:	add	x13, x1, x13, lsl #2
   50efc:	cmp	x13, x12
   50f00:	b.cs	51090 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d24>  // b.hs, b.nlast
   50f04:	cbz	x13, 5109c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d30>
   50f08:	str	w15, [x13], #-4
   50f0c:	b	50e50 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ae4>
   50f10:	ldrb	w15, [x0]
   50f14:	cmp	x9, x15
   50f18:	b.eq	50e50 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ae4>  // b.none
   50f1c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50f20:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50f24:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   50f28:	add	x0, x0, #0xb1a
   50f2c:	add	x1, x1, #0x9ff
   50f30:	add	x3, x3, #0xbf5
   50f34:	mov	w2, #0x6ae                 	// #1710
   50f38:	bl	4a40 <__assert_fail@plt>
   50f3c:	sxtw	x8, w4
   50f40:	sub	x9, x8, #0x1
   50f44:	ldrb	w12, [x0, x9]
   50f48:	add	x8, x8, x0
   50f4c:	ldurb	w8, [x8, #-2]
   50f50:	ldrsw	x10, [x2, x12, lsl #2]
   50f54:	cmp	w8, w12
   50f58:	csinv	w8, w9, w8, cs  // cs = hs, nlast
   50f5c:	add	x10, x1, x10, lsl #2
   50f60:	cmp	w4, #0x1
   50f64:	mov	x9, x1
   50f68:	str	w8, [x10]
   50f6c:	b.lt	51020 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1cb4>  // b.tstop
   50f70:	add	x8, x1, w4, sxtw #2
   50f74:	add	x10, x10, #0x4
   50f78:	mov	x9, x1
   50f7c:	mov	x11, x1
   50f80:	b	50fa4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c38>
   50f84:	cbz	w15, 51018 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1cac>
   50f88:	mvn	w13, w15
   50f8c:	str	w13, [x11]
   50f90:	mov	w13, w12
   50f94:	add	x11, x11, #0x4
   50f98:	cmp	x11, x8
   50f9c:	mov	w12, w13
   50fa0:	b.cs	51020 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1cb4>  // b.hs, b.nlast
   50fa4:	ldrsw	x15, [x11]
   50fa8:	cmp	w15, #0x1
   50fac:	b.lt	50f84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c18>  // b.tstop
   50fb0:	sub	x14, x15, #0x1
   50fb4:	ldrb	w13, [x0, x14]
   50fb8:	ldrb	w16, [x0, x15]
   50fbc:	cmp	w13, w16
   50fc0:	b.cc	510bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d50>  // b.lo, b.ul, b.last
   50fc4:	cmp	w15, #0x2
   50fc8:	str	w13, [x11]
   50fcc:	b.lt	50fe4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c78>  // b.tstop
   50fd0:	add	x15, x15, x0
   50fd4:	ldurb	w15, [x15, #-2]
   50fd8:	cmp	w15, w13
   50fdc:	b.cs	50fe4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c78>  // b.hs, b.nlast
   50fe0:	mvn	w14, w15
   50fe4:	cmp	w12, w13
   50fe8:	b.ne	50ff4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c88>  // b.any
   50fec:	mov	w13, w12
   50ff0:	b	51008 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c9c>
   50ff4:	sub	x10, x10, x1
   50ff8:	lsr	x10, x10, #2
   50ffc:	str	w10, [x2, w12, sxtw #2]
   51000:	ldrsw	x10, [x2, w13, uxtw #2]
   51004:	add	x10, x1, x10, lsl #2
   51008:	cmp	x11, x10
   5100c:	b.cs	510dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d70>  // b.hs, b.nlast
   51010:	str	w14, [x10], #4
   51014:	b	50f94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c28>
   51018:	mov	x9, x11
   5101c:	b	50f90 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1c24>
   51020:	sub	x8, x9, x1
   51024:	lsr	x0, x8, #2
   51028:	ldp	x29, x30, [sp], #16
   5102c:	ret
   51030:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51034:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51038:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5103c:	add	x0, x0, #0xb6d
   51040:	add	x1, x1, #0x9ff
   51044:	add	x3, x3, #0xbf5
   51048:	mov	w2, #0x69f                 	// #1695
   5104c:	bl	4a40 <__assert_fail@plt>
   51050:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51054:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51058:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5105c:	add	x0, x0, #0xb1a
   51060:	add	x1, x1, #0x9ff
   51064:	add	x3, x3, #0xbf5
   51068:	mov	w2, #0x69e                 	// #1694
   5106c:	bl	4a40 <__assert_fail@plt>
   51070:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51074:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51078:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5107c:	add	x0, x0, #0xb91
   51080:	add	x1, x1, #0x9ff
   51084:	add	x3, x3, #0xbf5
   51088:	mov	w2, #0x6a0                 	// #1696
   5108c:	bl	4a40 <__assert_fail@plt>
   51090:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51094:	add	x0, x0, #0xba2
   51098:	b	510a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1d38>
   5109c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510a0:	add	x0, x0, #0xba8
   510a4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510a8:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510ac:	add	x1, x1, #0x9ff
   510b0:	add	x3, x3, #0xbf5
   510b4:	mov	w2, #0x6a8                 	// #1704
   510b8:	bl	4a40 <__assert_fail@plt>
   510bc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510c0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510c4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510c8:	add	x0, x0, #0xbd8
   510cc:	add	x1, x1, #0x9ff
   510d0:	add	x3, x3, #0xbf5
   510d4:	mov	w2, #0x6bc                 	// #1724
   510d8:	bl	4a40 <__assert_fail@plt>
   510dc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510e0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510e4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   510e8:	add	x0, x0, #0xbe9
   510ec:	add	x1, x1, #0x9ff
   510f0:	add	x3, x3, #0xbf5
   510f4:	mov	w2, #0x6c4                 	// #1732
   510f8:	bl	4a40 <__assert_fail@plt>
   510fc:	stp	x29, x30, [sp, #-48]!
   51100:	add	w8, w4, #0x7
   51104:	cmp	w4, #0x0
   51108:	csel	w8, w8, w4, lt  // lt = tstop
   5110c:	asr	w9, w8, #4
   51110:	orr	w8, w9, w8, asr #3
   51114:	orr	w8, w8, w8, asr #2
   51118:	orr	w8, w8, w8, asr #4
   5111c:	orr	w8, w8, w8, asr #8
   51120:	asr	w9, w8, #17
   51124:	sxtw	x10, w4
   51128:	orr	w8, w9, w8, asr #1
   5112c:	sub	x11, x10, #0x1
   51130:	add	w9, w8, #0x1
   51134:	sdiv	w12, w11, w9
   51138:	cmp	w5, #0x1
   5113c:	str	x21, [sp, #16]
   51140:	stp	x20, x19, [sp, #32]
   51144:	mov	x29, sp
   51148:	strb	w12, [x6]
   5114c:	b.lt	512b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f48>  // b.tstop
   51150:	sub	x13, x1, #0x4
   51154:	mov	w15, #0xfe                  	// #254
   51158:	b	51164 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1df8>
   5115c:	sub	x15, x14, #0x1
   51160:	cbz	x14, 512b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f48>
   51164:	mov	x14, x15
   51168:	lsl	x15, x15, #8
   5116c:	add	w16, w14, #0x1
   51170:	add	x17, x2, x14, lsl #2
   51174:	orr	w16, w16, w15
   51178:	ldrsw	x16, [x3, w16, sxtw #2]
   5117c:	ldrsw	x17, [x17, #4]
   51180:	add	x16, x1, x16, lsl #2
   51184:	add	x17, x13, x17, lsl #2
   51188:	cmp	x16, x17
   5118c:	b.hi	5115c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1df0>  // b.pmore
   51190:	mov	x18, xzr
   51194:	mov	w5, #0xffffffff            	// #-1
   51198:	b	511b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e48>
   5119c:	cbz	w19, 51288 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f1c>
   511a0:	mvn	w6, w19
   511a4:	str	w6, [x17]
   511a8:	sub	x17, x17, #0x4
   511ac:	cmp	x16, x17
   511b0:	b.hi	5115c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1df0>  // b.pmore
   511b4:	ldrsw	x19, [x17]
   511b8:	cmp	w19, #0x1
   511bc:	b.lt	5119c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e30>  // b.tstop
   511c0:	ldrb	w20, [x0, x19]
   511c4:	cmp	x14, x20
   511c8:	b.ne	5141c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20b0>  // b.any
   511cc:	add	x6, x19, #0x1
   511d0:	cmp	w6, w4
   511d4:	b.ge	513fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2090>  // b.tcont
   511d8:	ldrb	w6, [x0, x6]
   511dc:	cmp	w20, w6
   511e0:	b.hi	513fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2090>  // b.pmore
   511e4:	sub	x6, x19, #0x1
   511e8:	ldrb	w21, [x0, x6]
   511ec:	cmp	w21, w20
   511f0:	b.hi	5143c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20d0>  // b.pmore
   511f4:	tst	w19, w8
   511f8:	b.ne	51210 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ea4>  // b.any
   511fc:	sub	x20, x17, x1
   51200:	sdiv	w21, w19, w9
   51204:	lsr	x20, x20, #2
   51208:	sub	w21, w21, #0x1
   5120c:	str	w20, [x7, w21, sxtw #2]
   51210:	ldrb	w20, [x0, x6]
   51214:	cmp	w19, #0x2
   51218:	mvn	w21, w20
   5121c:	str	w21, [x17]
   51220:	b.ge	51238 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ecc>  // b.tcont
   51224:	cmp	w5, w20
   51228:	b.ne	51250 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ee4>  // b.any
   5122c:	cmp	x18, x17
   51230:	b.cc	5127c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f10>  // b.lo, b.ul, b.last
   51234:	b	5145c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20f0>
   51238:	add	x21, x19, x0
   5123c:	ldurb	w21, [x21, #-2]
   51240:	cmp	w21, w20
   51244:	csneg	w6, w6, w19, ls  // ls = plast
   51248:	cmp	w5, w20
   5124c:	b.eq	5122c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ec0>  // b.none
   51250:	tbnz	w5, #31, 51264 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1ef8>
   51254:	sub	x18, x18, x1
   51258:	lsr	x18, x18, #2
   5125c:	orr	w5, w5, w15
   51260:	str	w18, [x3, w5, sxtw #2]
   51264:	orr	w18, w15, w20
   51268:	ldrsw	x18, [x3, w18, sxtw #2]
   5126c:	mov	w5, w20
   51270:	add	x18, x1, x18, lsl #2
   51274:	cmp	x18, x17
   51278:	b.cs	5145c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20f0>  // b.hs, b.nlast
   5127c:	cbz	x18, 51468 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x20fc>
   51280:	str	w6, [x18], #-4
   51284:	b	511a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e3c>
   51288:	ldrb	w6, [x0]
   5128c:	cmp	x14, x6
   51290:	b.eq	511a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1e3c>  // b.none
   51294:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51298:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5129c:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   512a0:	add	x0, x0, #0xb1a
   512a4:	add	x1, x1, #0x9ff
   512a8:	add	x3, x3, #0xc3d
   512ac:	mov	w2, #0x702                 	// #1794
   512b0:	bl	4a40 <__assert_fail@plt>
   512b4:	ldrb	w13, [x0, x11]
   512b8:	sub	x15, x10, #0x2
   512bc:	ldrb	w14, [x0, x15]
   512c0:	ldrsw	x16, [x2, w13, uxtw #2]
   512c4:	cmp	w14, w13
   512c8:	add	x14, x1, x16, lsl #2
   512cc:	b.cs	512e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f7c>  // b.hs, b.nlast
   512d0:	tst	w8, w11
   512d4:	b.ne	512e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1f74>  // b.any
   512d8:	sub	w11, w12, #0x1
   512dc:	str	w16, [x7, w11, sxtw #2]
   512e0:	ldrb	w11, [x0, x15]
   512e4:	mvn	w11, w11
   512e8:	cmp	w4, #0x1
   512ec:	str	w11, [x14]
   512f0:	mov	x11, x1
   512f4:	b.lt	513e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2078>  // b.tstop
   512f8:	add	x10, x1, x10, lsl #2
   512fc:	add	x12, x14, #0x4
   51300:	mov	x11, x1
   51304:	mov	x14, x1
   51308:	b	5131c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fb0>
   5130c:	str	w15, [x12], #4
   51310:	add	x14, x14, #0x4
   51314:	cmp	x14, x10
   51318:	b.cs	513e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2078>  // b.hs, b.nlast
   5131c:	ldrsw	x16, [x14]
   51320:	cmp	w16, #0x1
   51324:	b.lt	513cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2060>  // b.tstop
   51328:	sub	x15, x16, #0x1
   5132c:	ldrb	w17, [x0, x15]
   51330:	ldrb	w18, [x0, x16]
   51334:	cmp	w17, w18
   51338:	b.cc	51488 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x211c>  // b.lo, b.ul, b.last
   5133c:	tst	w16, w8
   51340:	b.ne	51358 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fec>  // b.any
   51344:	sub	x17, x14, x1
   51348:	sdiv	w18, w16, w9
   5134c:	lsr	x17, x17, #2
   51350:	sub	w18, w18, #0x1
   51354:	str	w17, [x7, w18, sxtw #2]
   51358:	ldrb	w17, [x0, x15]
   5135c:	cmp	w13, w17
   51360:	str	w17, [x14]
   51364:	b.eq	51380 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2014>  // b.none
   51368:	sub	x12, x12, x1
   5136c:	lsr	x12, x12, #2
   51370:	str	w12, [x2, w13, sxtw #2]
   51374:	ldrsw	x12, [x2, w17, uxtw #2]
   51378:	mov	w13, w17
   5137c:	add	x12, x1, x12, lsl #2
   51380:	cmp	x14, x12
   51384:	b.cs	514a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x213c>  // b.hs, b.nlast
   51388:	cmp	w16, #0x2
   5138c:	b.lt	5130c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fa0>  // b.tstop
   51390:	sub	x16, x16, #0x2
   51394:	ldrb	w18, [x0, x16]
   51398:	cmp	w18, w17
   5139c:	b.cs	5130c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fa0>  // b.hs, b.nlast
   513a0:	tst	w15, w8
   513a4:	b.ne	513bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2050>  // b.any
   513a8:	sub	x17, x12, x1
   513ac:	sdiv	w15, w15, w9
   513b0:	lsr	x17, x17, #2
   513b4:	sub	w15, w15, #0x1
   513b8:	str	w17, [x7, w15, sxtw #2]
   513bc:	ldrb	w15, [x0, x16]
   513c0:	mvn	w15, w15
   513c4:	str	w15, [x12], #4
   513c8:	b	51310 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fa4>
   513cc:	cbz	w16, 513dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2070>
   513d0:	mvn	w15, w16
   513d4:	str	w15, [x14]
   513d8:	b	51310 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fa4>
   513dc:	mov	x11, x14
   513e0:	b	51310 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x1fa4>
   513e4:	ldp	x20, x19, [sp, #32]
   513e8:	ldr	x21, [sp, #16]
   513ec:	sub	x8, x11, x1
   513f0:	lsr	x0, x8, #2
   513f4:	ldp	x29, x30, [sp], #48
   513f8:	ret
   513fc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51400:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51404:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51408:	add	x0, x0, #0xb6d
   5140c:	add	x1, x1, #0x9ff
   51410:	add	x3, x3, #0xc3d
   51414:	mov	w2, #0x6f0                 	// #1776
   51418:	bl	4a40 <__assert_fail@plt>
   5141c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51420:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51424:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51428:	add	x0, x0, #0xb1a
   5142c:	add	x1, x1, #0x9ff
   51430:	add	x3, x3, #0xc3d
   51434:	mov	w2, #0x6ef                 	// #1775
   51438:	bl	4a40 <__assert_fail@plt>
   5143c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51440:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51444:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51448:	add	x0, x0, #0xb91
   5144c:	add	x1, x1, #0x9ff
   51450:	add	x3, x3, #0xc3d
   51454:	mov	w2, #0x6f1                 	// #1777
   51458:	bl	4a40 <__assert_fail@plt>
   5145c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51460:	add	x0, x0, #0xba2
   51464:	b	51470 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2104>
   51468:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5146c:	add	x0, x0, #0xba8
   51470:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51474:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51478:	add	x1, x1, #0x9ff
   5147c:	add	x3, x3, #0xc3d
   51480:	mov	w2, #0x6fc                 	// #1788
   51484:	bl	4a40 <__assert_fail@plt>
   51488:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5148c:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51490:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51494:	add	x0, x0, #0xbd8
   51498:	add	x1, x1, #0x9ff
   5149c:	add	x3, x3, #0xc3d
   514a0:	mov	w2, #0x717                 	// #1815
   514a4:	bl	4a40 <__assert_fail@plt>
   514a8:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   514ac:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   514b0:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   514b4:	add	x0, x0, #0xbe9
   514b8:	add	x1, x1, #0x9ff
   514bc:	add	x3, x3, #0xc3d
   514c0:	mov	w2, #0x721                 	// #1825
   514c4:	bl	4a40 <__assert_fail@plt>
   514c8:	sub	sp, sp, #0xa0
   514cc:	add	x8, x2, #0x4
   514d0:	cmp	w7, #0x0
   514d4:	stp	x29, x30, [sp, #64]
   514d8:	stp	x28, x27, [sp, #80]
   514dc:	stp	x26, x25, [sp, #96]
   514e0:	stp	x24, x23, [sp, #112]
   514e4:	stp	x22, x21, [sp, #128]
   514e8:	stp	x20, x19, [sp, #144]
   514ec:	add	x29, sp, #0x40
   514f0:	mov	w23, w7
   514f4:	mov	w20, w6
   514f8:	mov	w26, w5
   514fc:	mov	x25, x3
   51500:	mov	x21, x1
   51504:	csel	x28, x8, x2, ne  // ne = any
   51508:	cmp	w5, #0x3ff
   5150c:	mov	x22, x0
   51510:	stur	x4, [x29, #-16]
   51514:	b.gt	5155c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x21f0>
   51518:	sxtw	x9, w26
   5151c:	sub	x8, x25, x28
   51520:	cmp	x9, x8, asr #2
   51524:	b.ge	5155c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x21f0>  // b.tcont
   51528:	lsr	x0, x8, #2
   5152c:	bl	51894 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2528>
   51530:	cmp	w0, w26
   51534:	b.le	5155c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x21f0>
   51538:	cmp	w0, #0x400
   5153c:	mov	w8, #0x400                 	// #1024
   51540:	csel	w26, w0, w8, lt  // lt = tstop
   51544:	sub	x8, x25, w26, sxtw #2
   51548:	mov	x9, x8
   5154c:	stur	x8, [x29, #-16]
   51550:	mov	w8, w26
   51554:	str	w26, [sp, #8]
   51558:	b	51564 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x21f8>
   5155c:	str	wzr, [sp, #8]
   51560:	mov	x9, x25
   51564:	sub	x8, x9, x28
   51568:	cmp	x8, #0x1, lsl #12
   5156c:	mov	w27, wzr
   51570:	str	x28, [sp, #16]
   51574:	str	w20, [sp, #4]
   51578:	str	w23, [sp, #12]
   5157c:	stur	x9, [x29, #-24]
   51580:	b.le	51624 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22b8>
   51584:	stp	x26, x25, [sp, #24]
   51588:	b	515a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x223c>
   5158c:	ldur	x8, [x29, #-24]
   51590:	ldp	x26, x25, [sp, #24]
   51594:	add	w27, w27, #0x1
   51598:	mov	x28, x19
   5159c:	sub	x8, x8, x19
   515a0:	cmp	x8, #0x1, lsl #12
   515a4:	b.le	51628 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22bc>
   515a8:	add	x19, x28, #0x1, lsl #12
   515ac:	mov	x0, x22
   515b0:	mov	x1, x21
   515b4:	mov	x2, x28
   515b8:	mov	x3, x19
   515bc:	bl	519d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2668>
   515c0:	ldur	x9, [x29, #-16]
   515c4:	sub	x8, x25, x19
   515c8:	lsr	x8, x8, #2
   515cc:	cmp	w26, w8
   515d0:	csel	x24, x19, x9, lt  // lt = tstop
   515d4:	csel	w20, w8, w26, lt  // lt = tstop
   515d8:	tbz	w27, #0, 5158c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2220>
   515dc:	mov	w25, #0x400                 	// #1024
   515e0:	mov	w8, w27
   515e4:	mov	w23, w8
   515e8:	sbfiz	x8, x25, #2, #32
   515ec:	sub	x26, x28, x8
   515f0:	add	x4, x28, x8
   515f4:	mov	x0, x22
   515f8:	mov	x1, x21
   515fc:	mov	x2, x26
   51600:	mov	x3, x28
   51604:	mov	x5, x24
   51608:	mov	w6, w20
   5160c:	bl	523d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3064>
   51610:	lsl	w25, w25, #1
   51614:	asr	w8, w23, #1
   51618:	mov	x28, x26
   5161c:	tbnz	w23, #1, 515e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2278>
   51620:	b	5158c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2220>
   51624:	mov	x19, x28
   51628:	ldur	x28, [x29, #-24]
   5162c:	mov	x0, x22
   51630:	mov	x1, x21
   51634:	mov	x2, x19
   51638:	mov	x3, x28
   5163c:	bl	519d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2668>
   51640:	ldr	x23, [sp, #16]
   51644:	cbz	w27, 5168c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2320>
   51648:	mov	w24, #0x400                 	// #1024
   5164c:	b	5165c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22f0>
   51650:	asr	w27, w27, #1
   51654:	lsl	w24, w24, #1
   51658:	cbz	w27, 5168c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2320>
   5165c:	tbz	w27, #0, 51650 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22e4>
   51660:	ldur	x5, [x29, #-16]
   51664:	sub	x20, x19, w24, sxtw #2
   51668:	mov	x0, x22
   5166c:	mov	x1, x21
   51670:	mov	x2, x20
   51674:	mov	x3, x19
   51678:	mov	x4, x28
   5167c:	mov	w6, w26
   51680:	bl	523d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3064>
   51684:	mov	x19, x20
   51688:	b	51650 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x22e4>
   5168c:	ldr	w8, [sp, #8]
   51690:	cbz	w8, 516c0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2354>
   51694:	mov	x0, x22
   51698:	mov	x1, x21
   5169c:	mov	x2, x28
   516a0:	mov	x3, x25
   516a4:	bl	519d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2668>
   516a8:	mov	x0, x22
   516ac:	mov	x1, x21
   516b0:	mov	x2, x23
   516b4:	mov	x3, x28
   516b8:	mov	x4, x25
   516bc:	bl	528e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3578>
   516c0:	ldr	w8, [sp, #12]
   516c4:	cbz	w8, 51724 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x23b8>
   516c8:	ldursw	x19, [x23, #-4]
   516cc:	ldr	w9, [sp, #4]
   516d0:	cmp	x23, x25
   516d4:	ldr	w8, [x21, x19, lsl #2]
   516d8:	sub	w9, w9, #0x2
   516dc:	stp	w8, w9, [x29, #-8]
   516e0:	b.cc	516f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x238c>  // b.lo, b.ul, b.last
   516e4:	b	51720 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x23b4>
   516e8:	stur	w20, [x23, #-4]
   516ec:	add	x23, x23, #0x4
   516f0:	cmp	x23, x25
   516f4:	b.cs	51720 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x23b4>  // b.hs, b.nlast
   516f8:	ldr	w20, [x23]
   516fc:	tbnz	w20, #31, 516e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x237c>
   51700:	sxtw	x8, w20
   51704:	add	x2, x21, x8, lsl #2
   51708:	sub	x1, x29, #0x8
   5170c:	mov	w3, #0x2                   	// #2
   51710:	mov	x0, x22
   51714:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   51718:	cmp	w0, #0x1
   5171c:	b.ge	516e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x237c>  // b.tcont
   51720:	stur	w19, [x23, #-4]
   51724:	ldp	x20, x19, [sp, #144]
   51728:	ldp	x22, x21, [sp, #128]
   5172c:	ldp	x24, x23, [sp, #112]
   51730:	ldp	x26, x25, [sp, #96]
   51734:	ldp	x28, x27, [sp, #80]
   51738:	ldp	x29, x30, [sp, #64]
   5173c:	add	sp, sp, #0xa0
   51740:	ret
   51744:	sub	sp, sp, #0x70
   51748:	stp	x20, x19, [sp, #96]
   5174c:	mov	x20, x0
   51750:	mov	w0, w2
   51754:	stp	x29, x30, [sp, #16]
   51758:	str	x27, [sp, #32]
   5175c:	stp	x26, x25, [sp, #48]
   51760:	stp	x24, x23, [sp, #64]
   51764:	stp	x22, x21, [sp, #80]
   51768:	add	x29, sp, #0x10
   5176c:	mov	w22, w2
   51770:	mov	x19, x1
   51774:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   51778:	mov	w9, #0x5556                	// #21846
   5177c:	lsl	w8, w0, #1
   51780:	movk	w9, #0x5555, lsl #16
   51784:	smull	x8, w8, w9
   51788:	lsr	x9, x8, #63
   5178c:	lsr	x8, x8, #32
   51790:	add	w1, w8, w9
   51794:	mov	x0, sp
   51798:	mov	w2, w22
   5179c:	bl	53664 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42f8>
   517a0:	ldr	w8, [x19]
   517a4:	neg	w24, w22
   517a8:	cmp	w8, w24
   517ac:	b.le	51874 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2508>
   517b0:	add	x21, x20, #0x4
   517b4:	add	x25, x19, #0x4
   517b8:	add	x26, x19, w22, sxtw #2
   517bc:	mov	w8, wzr
   517c0:	mov	w27, wzr
   517c4:	mov	x22, x19
   517c8:	b	517dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2470>
   517cc:	sub	x22, x22, x9, lsl #2
   517d0:	add	w8, w9, w8
   517d4:	cmp	x22, x26
   517d8:	b.cs	51854 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24e8>  // b.hs, b.nlast
   517dc:	ldrsw	x9, [x22]
   517e0:	tbnz	w9, #31, 517cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2460>
   517e4:	cbz	w8, 517ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2480>
   517e8:	str	w8, [x22, w8, sxtw #2]
   517ec:	ldrsw	x8, [x20, x9, lsl #2]
   517f0:	add	x23, x25, x8, lsl #2
   517f4:	sub	x8, x23, x22
   517f8:	cmp	x8, #0x5
   517fc:	b.lt	51834 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24c8>  // b.tstop
   51800:	mov	x5, sp
   51804:	mov	x0, x20
   51808:	mov	x1, x21
   5180c:	mov	x2, x19
   51810:	mov	x3, x22
   51814:	mov	x4, x23
   51818:	str	wzr, [sp, #12]
   5181c:	bl	536e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4374>
   51820:	ldr	w9, [sp, #12]
   51824:	cbz	w9, 51840 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24d4>
   51828:	mov	w8, wzr
   5182c:	add	w27, w9, w27
   51830:	b	51848 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24dc>
   51834:	cmp	x8, #0x4
   51838:	csetm	w8, eq  // eq = none
   5183c:	b	51848 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24dc>
   51840:	sub	x8, x22, x23
   51844:	lsr	x8, x8, #2
   51848:	mov	x22, x23
   5184c:	cmp	x22, x26
   51850:	b.cc	517dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2470>  // b.lo, b.ul, b.last
   51854:	cbz	w8, 5185c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x24f0>
   51858:	str	w8, [x22, w8, sxtw #2]
   5185c:	cbz	w27, 51874 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2508>
   51860:	ldr	w8, [x19]
   51864:	sub	x9, x21, x20
   51868:	add	x21, x21, x9
   5186c:	cmp	w8, w24
   51870:	b.gt	517bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2450>
   51874:	ldp	x20, x19, [sp, #96]
   51878:	ldp	x22, x21, [sp, #80]
   5187c:	ldp	x24, x23, [sp, #64]
   51880:	ldp	x26, x25, [sp, #48]
   51884:	ldr	x27, [sp, #32]
   51888:	ldp	x29, x30, [sp, #16]
   5188c:	add	sp, sp, #0x70
   51890:	ret
   51894:	cmp	w0, #0x100, lsl #12
   51898:	b.lt	518a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2538>  // b.tstop
   5189c:	mov	w0, #0x400                 	// #1024
   518a0:	ret
   518a4:	cmp	w0, #0x10, lsl #12
   518a8:	b.cc	518d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2564>  // b.lo, b.ul, b.last
   518ac:	lsr	w8, w0, #24
   518b0:	cbz	w8, 518f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x258c>
   518b4:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   518b8:	add	x9, x9, #0x1f4
   518bc:	ldr	w8, [x9, w8, uxtw #2]
   518c0:	add	w8, w8, #0x18
   518c4:	cmp	w8, #0x10
   518c8:	b.ge	51914 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25a8>  // b.tcont
   518cc:	b	5197c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2610>
   518d0:	tst	w0, #0xff00
   518d4:	b.eq	51964 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25f8>  // b.none
   518d8:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   518dc:	ubfx	w8, w0, #8, #8
   518e0:	add	x9, x9, #0x1f4
   518e4:	ldr	w8, [x9, w8, uxtw #2]
   518e8:	add	w8, w8, #0x8
   518ec:	cmp	w8, #0x10
   518f0:	b.ge	51914 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25a8>  // b.tcont
   518f4:	b	5197c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2610>
   518f8:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   518fc:	ubfx	w8, w0, #16, #8
   51900:	add	x9, x9, #0x1f4
   51904:	ldr	w8, [x9, w8, uxtw #2]
   51908:	add	w8, w8, #0x10
   5190c:	cmp	w8, #0x10
   51910:	b.lt	5197c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2610>  // b.tstop
   51914:	and	w9, w8, #0xfffffffe
   51918:	sub	w9, w9, #0x6
   5191c:	adrp	x10, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51920:	asr	w9, w0, w9
   51924:	add	x10, x10, #0x5f4
   51928:	ldr	w9, [x10, w9, sxtw #2]
   5192c:	asr	w10, w8, #1
   51930:	sub	w10, w10, #0x7
   51934:	cmp	w8, #0x18
   51938:	lsl	w8, w9, w10
   5193c:	b.lt	51950 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25e4>  // b.tstop
   51940:	sdiv	w9, w0, w8
   51944:	add	w8, w8, w9
   51948:	add	w8, w8, #0x1
   5194c:	asr	w8, w8, #1
   51950:	sdiv	w9, w0, w8
   51954:	add	w8, w8, w9
   51958:	add	w8, w8, #0x1
   5195c:	asr	w8, w8, #1
   51960:	b	519ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2640>
   51964:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51968:	and	w8, w0, #0xff
   5196c:	add	x9, x9, #0x1f4
   51970:	ldr	w8, [x9, w8, uxtw #2]
   51974:	cmp	w8, #0x10
   51978:	b.ge	51914 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x25a8>  // b.tcont
   5197c:	cmp	w8, #0x8
   51980:	b.lt	519c0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2654>  // b.tstop
   51984:	and	w9, w8, #0xfffffffe
   51988:	sub	w9, w9, #0x6
   5198c:	adrp	x10, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   51990:	asr	w9, w0, w9
   51994:	add	x10, x10, #0x5f4
   51998:	ldr	w9, [x10, w9, sxtw #2]
   5199c:	mov	w10, #0x7                   	// #7
   519a0:	sub	w8, w10, w8, asr #1
   519a4:	asr	w8, w9, w8
   519a8:	add	w8, w8, #0x1
   519ac:	mul	w9, w8, w8
   519b0:	cmp	w9, w0
   519b4:	cset	w9, gt
   519b8:	sub	w0, w8, w9
   519bc:	ret
   519c0:	adrp	x8, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   519c4:	add	x8, x8, #0x5f4
   519c8:	ldr	w8, [x8, w0, sxtw #2]
   519cc:	asr	w0, w8, #4
   519d0:	ret
   519d4:	stp	x29, x30, [sp, #-96]!
   519d8:	stp	x28, x27, [sp, #16]
   519dc:	stp	x26, x25, [sp, #32]
   519e0:	stp	x24, x23, [sp, #48]
   519e4:	stp	x22, x21, [sp, #64]
   519e8:	stp	x20, x19, [sp, #80]
   519ec:	mov	x29, sp
   519f0:	sub	sp, sp, #0x1b0
   519f4:	sub	x8, x3, x2
   519f8:	mov	x27, x0
   519fc:	lsr	x0, x8, #2
   51a00:	mov	x22, x3
   51a04:	mov	x23, x2
   51a08:	mov	x19, x1
   51a0c:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   51a10:	add	x20, sp, #0x28
   51a14:	mov	w9, w0
   51a18:	mov	w24, wzr
   51a1c:	mov	w28, wzr
   51a20:	mov	w21, #0x2                   	// #2
   51a24:	mov	w25, #0x18                  	// #24
   51a28:	sub	x8, x20, #0x18
   51a2c:	str	x8, [sp, #24]
   51a30:	sub	x8, x22, x23
   51a34:	cmp	x8, #0x23
   51a38:	b.gt	51a98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x272c>
   51a3c:	ldr	x9, [sp, #24]
   51a40:	sxtw	x20, w24
   51a44:	smaddl	x24, w24, w25, x9
   51a48:	cmp	x8, #0x5
   51a4c:	b.lt	51a68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26fc>  // b.tstop
   51a50:	mov	x0, x27
   51a54:	mov	x1, x19
   51a58:	mov	x2, x23
   51a5c:	mov	x3, x22
   51a60:	mov	w4, w21
   51a64:	bl	52b18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37ac>
   51a68:	tbnz	x20, #63, 521f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2e84>
   51a6c:	cbz	x20, 521d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2e64>
   51a70:	ldp	x23, x22, [x24]
   51a74:	ldr	w21, [x24, #16]
   51a78:	sub	x20, x20, #0x1
   51a7c:	sub	x24, x24, #0x18
   51a80:	sub	x8, x22, x23
   51a84:	cmp	x8, #0x24
   51a88:	b.lt	51a48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26dc>  // b.tstop
   51a8c:	ldr	w9, [x24, #44]
   51a90:	mov	w24, w20
   51a94:	add	x20, sp, #0x28
   51a98:	add	x25, x27, w21, sxtw
   51a9c:	cbz	w9, 51b6c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2800>
   51aa0:	cmp	w9, #0x0
   51aa4:	b.le	51b90 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2824>
   51aa8:	mov	x0, x25
   51aac:	mov	x1, x19
   51ab0:	mov	x2, x23
   51ab4:	mov	x3, x22
   51ab8:	str	w9, [sp, #36]
   51abc:	bl	52dc0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a54>
   51ac0:	ldrsw	x10, [x0]
   51ac4:	ldr	w11, [x23]
   51ac8:	mov	x9, x23
   51acc:	ldrsw	x8, [x19, x10, lsl #2]
   51ad0:	ldrb	w8, [x25, x8]
   51ad4:	str	w10, [x9], #4
   51ad8:	cmp	x9, x22
   51adc:	cset	w10, cc  // cc = lo, ul, last
   51ae0:	str	w11, [x0]
   51ae4:	b.cs	51b24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27b8>  // b.hs, b.nlast
   51ae8:	ldrsw	x11, [x9]
   51aec:	ldrsw	x11, [x19, x11, lsl #2]
   51af0:	ldrb	w28, [x25, x11]
   51af4:	cmp	w28, w8
   51af8:	b.ne	51b24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27b8>  // b.any
   51afc:	add	x9, x23, #0x8
   51b00:	cmp	x9, x22
   51b04:	cset	w10, cc  // cc = lo, ul, last
   51b08:	b.cs	51cd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2968>  // b.hs, b.nlast
   51b0c:	ldrsw	x11, [x9], #4
   51b10:	ldrsw	x11, [x19, x11, lsl #2]
   51b14:	ldrb	w28, [x25, x11]
   51b18:	cmp	w28, w8
   51b1c:	b.eq	51b00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2794>  // b.none
   51b20:	sub	x9, x9, #0x4
   51b24:	cbz	w10, 51cdc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2970>
   51b28:	cmp	w28, w8
   51b2c:	b.ge	51cdc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2970>  // b.tcont
   51b30:	add	x10, x9, #0x4
   51b34:	b	51b3c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27d0>
   51b38:	add	x10, x10, #0x4
   51b3c:	cmp	x10, x22
   51b40:	b.cs	51ce0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2974>  // b.hs, b.nlast
   51b44:	ldrsw	x11, [x10]
   51b48:	ldrsw	x12, [x19, x11, lsl #2]
   51b4c:	ldrb	w28, [x25, x12]
   51b50:	cmp	w28, w8
   51b54:	b.hi	51ce0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2974>  // b.pmore
   51b58:	b.ne	51b38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27cc>  // b.any
   51b5c:	ldr	w12, [x9]
   51b60:	str	w12, [x10]
   51b64:	str	w11, [x9], #4
   51b68:	b	51b38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27cc>
   51b6c:	lsr	x3, x8, #2
   51b70:	mov	x0, x25
   51b74:	mov	x1, x19
   51b78:	mov	x2, x23
   51b7c:	mov	w26, w9
   51b80:	bl	52bec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3880>
   51b84:	mov	w9, w26
   51b88:	cmp	w9, #0x0
   51b8c:	b.gt	51aa8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x273c>
   51b90:	mov	x9, x23
   51b94:	ldrsw	x8, [x9], #4
   51b98:	ldrsw	x8, [x19, x8, lsl #2]
   51b9c:	cmp	x9, x22
   51ba0:	ldrb	w8, [x25, x8]
   51ba4:	b.cc	51bc8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x285c>  // b.lo, b.ul, b.last
   51ba8:	b	51bf0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2884>
   51bac:	mov	x26, x23
   51bb0:	mov	w0, w8
   51bb4:	add	x9, x9, #0x4
   51bb8:	cmp	x9, x22
   51bbc:	mov	w8, w0
   51bc0:	mov	x23, x26
   51bc4:	b.cs	51bf8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x288c>  // b.hs, b.nlast
   51bc8:	ldrsw	x10, [x9]
   51bcc:	ldrsw	x10, [x19, x10, lsl #2]
   51bd0:	ldrb	w28, [x25, x10]
   51bd4:	cmp	w8, w28
   51bd8:	b.eq	51bac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2840>  // b.none
   51bdc:	sub	x10, x9, x23
   51be0:	cmp	x10, #0x4
   51be4:	mov	x26, x9
   51be8:	mov	w0, w28
   51bec:	b.le	51bb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2848>
   51bf0:	mov	x26, x23
   51bf4:	b	51bfc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2890>
   51bf8:	mov	w8, w0
   51bfc:	mov	x23, x9
   51c00:	ldrsw	x9, [x26]
   51c04:	ldrsw	x9, [x19, x9, lsl #2]
   51c08:	add	x9, x9, x25
   51c0c:	ldurb	w9, [x9, #-1]
   51c10:	cmp	w8, w9
   51c14:	b.le	51c30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x28c4>
   51c18:	mov	x0, x19
   51c1c:	mov	x1, x26
   51c20:	mov	x2, x23
   51c24:	mov	w3, w21
   51c28:	bl	52d24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39b8>
   51c2c:	mov	x26, x0
   51c30:	sub	x8, x23, x26
   51c34:	asr	x10, x8, #2
   51c38:	sub	x9, x22, x23
   51c3c:	mov	w25, #0x18                  	// #24
   51c40:	cmp	x10, x9, asr #2
   51c44:	b.le	51c88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x291c>
   51c48:	cmp	x9, #0x5
   51c4c:	b.lt	51cb8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x294c>  // b.tstop
   51c50:	cmp	w24, #0x10
   51c54:	b.ge	52210 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ea4>  // b.tcont
   51c58:	lsr	x0, x8, #2
   51c5c:	add	x8, sp, #0x28
   51c60:	smaddl	x20, w24, w25, x8
   51c64:	add	w8, w21, #0x1
   51c68:	stp	x26, x23, [x20]
   51c6c:	str	w8, [x20, #16]
   51c70:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   51c74:	add	w24, w24, #0x1
   51c78:	str	w0, [x20, #20]
   51c7c:	add	x20, sp, #0x28
   51c80:	mov	w9, #0xffffffff            	// #-1
   51c84:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   51c88:	cmp	x8, #0x5
   51c8c:	mov	w9, #0xffffffff            	// #-1
   51c90:	b.lt	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>  // b.tstop
   51c94:	cmp	w24, #0x10
   51c98:	b.ge	52230 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ec4>  // b.tcont
   51c9c:	lsr	x0, x8, #2
   51ca0:	smaddl	x8, w24, w25, x20
   51ca4:	mov	w9, #0xffffffff            	// #-1
   51ca8:	add	w24, w24, #0x1
   51cac:	stp	x23, x22, [x8]
   51cb0:	stp	w21, w9, [x8, #16]
   51cb4:	b	51cbc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2950>
   51cb8:	lsr	x0, x8, #2
   51cbc:	add	w21, w21, #0x1
   51cc0:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   51cc4:	mov	w9, w0
   51cc8:	mov	x22, x23
   51ccc:	mov	x23, x26
   51cd0:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   51cd4:	and	w28, w28, #0xff
   51cd8:	cbnz	w10, 51b28 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x27bc>
   51cdc:	mov	x10, x9
   51ce0:	sub	x11, x22, #0x4
   51ce4:	cmp	x10, x11
   51ce8:	cset	w12, cc  // cc = lo, ul, last
   51cec:	b.cs	51d2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29c0>  // b.hs, b.nlast
   51cf0:	ldrsw	x13, [x11]
   51cf4:	ldrsw	x13, [x19, x13, lsl #2]
   51cf8:	ldrb	w28, [x25, x13]
   51cfc:	cmp	w28, w8
   51d00:	b.ne	51d2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29c0>  // b.any
   51d04:	sub	x11, x22, #0x8
   51d08:	cmp	x10, x11
   51d0c:	cset	w12, cc  // cc = lo, ul, last
   51d10:	b.cs	51d74 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a08>  // b.hs, b.nlast
   51d14:	ldrsw	x13, [x11], #-4
   51d18:	ldrsw	x13, [x19, x13, lsl #2]
   51d1c:	ldrb	w28, [x25, x13]
   51d20:	cmp	w28, w8
   51d24:	b.eq	51d08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x299c>  // b.none
   51d28:	add	x11, x11, #0x4
   51d2c:	cbz	w12, 51d7c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a10>
   51d30:	cmp	w28, w8
   51d34:	b.le	51d7c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a10>
   51d38:	sub	x12, x11, #0x4
   51d3c:	b	51d44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29d8>
   51d40:	sub	x12, x12, #0x4
   51d44:	cmp	x10, x12
   51d48:	b.cs	51d80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a14>  // b.hs, b.nlast
   51d4c:	ldrsw	x13, [x12]
   51d50:	ldrsw	x14, [x19, x13, lsl #2]
   51d54:	ldrb	w28, [x25, x14]
   51d58:	cmp	w28, w8
   51d5c:	b.cc	51d80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a14>  // b.lo, b.ul, b.last
   51d60:	b.ne	51d40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29d4>  // b.any
   51d64:	ldr	w14, [x11]
   51d68:	str	w14, [x12]
   51d6c:	str	w13, [x11], #-4
   51d70:	b	51d40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29d4>
   51d74:	and	w28, w28, #0xff
   51d78:	cbnz	w12, 51d30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x29c4>
   51d7c:	mov	x12, x11
   51d80:	cmp	x10, x12
   51d84:	b.cs	51e08 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a9c>  // b.hs, b.nlast
   51d88:	ldr	w13, [x12]
   51d8c:	ldr	w14, [x10]
   51d90:	str	w13, [x10], #4
   51d94:	cmp	x10, x12
   51d98:	str	w14, [x12]
   51d9c:	b.cc	51de0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a74>  // b.lo, b.ul, b.last
   51da0:	sub	x12, x12, #0x4
   51da4:	cmp	x10, x12
   51da8:	b.cs	51d80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a14>  // b.hs, b.nlast
   51dac:	ldrsw	x13, [x12]
   51db0:	ldrsw	x14, [x19, x13, lsl #2]
   51db4:	ldrb	w28, [x25, x14]
   51db8:	cmp	w28, w8
   51dbc:	b.cc	51d80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a14>  // b.lo, b.ul, b.last
   51dc0:	b.ne	51da0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a34>  // b.any
   51dc4:	ldr	w14, [x11]
   51dc8:	str	w14, [x12]
   51dcc:	str	w13, [x11], #-4
   51dd0:	b	51da0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a34>
   51dd4:	add	x10, x10, #0x4
   51dd8:	cmp	x10, x12
   51ddc:	b.cs	51da0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a34>  // b.hs, b.nlast
   51de0:	ldrsw	x13, [x10]
   51de4:	ldrsw	x14, [x19, x13, lsl #2]
   51de8:	ldrb	w28, [x25, x14]
   51dec:	cmp	w28, w8
   51df0:	b.hi	51da0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a34>  // b.pmore
   51df4:	b.ne	51dd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a68>  // b.any
   51df8:	ldr	w14, [x9]
   51dfc:	str	w14, [x10]
   51e00:	str	w13, [x9], #4
   51e04:	b	51dd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2a68>
   51e08:	cmp	x9, x11
   51e0c:	b.ls	51e5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2af0>  // b.plast
   51e10:	ldrsw	x9, [x23]
   51e14:	ldrsw	x9, [x19, x9, lsl #2]
   51e18:	add	x9, x9, x25
   51e1c:	ldurb	w9, [x9, #-1]
   51e20:	cmp	w9, w8
   51e24:	b.cs	51f9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c30>  // b.hs, b.nlast
   51e28:	mov	x0, x19
   51e2c:	mov	x1, x23
   51e30:	mov	x2, x22
   51e34:	mov	w3, w21
   51e38:	bl	52d24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39b8>
   51e3c:	sub	x8, x22, x0
   51e40:	mov	x23, x0
   51e44:	lsr	x0, x8, #2
   51e48:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   51e4c:	mov	w9, w0
   51e50:	mov	w25, #0x18                  	// #24
   51e54:	add	w21, w21, #0x1
   51e58:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   51e5c:	sub	x12, x9, x23
   51e60:	sub	x9, x10, x9
   51e64:	str	x24, [sp, #8]
   51e68:	lsr	x12, x12, #2
   51e6c:	asr	x24, x9, #2
   51e70:	cmp	w12, w24
   51e74:	csel	w13, w24, w12, gt
   51e78:	cmp	w13, #0x1
   51e7c:	sub	x9, x10, #0x4
   51e80:	b.lt	51eac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b40>  // b.tstop
   51e84:	sub	x12, x10, w13, sxtw #2
   51e88:	add	w13, w13, #0x1
   51e8c:	mov	x14, x23
   51e90:	ldr	w15, [x12]
   51e94:	ldr	w16, [x14]
   51e98:	sub	w13, w13, #0x1
   51e9c:	cmp	w13, #0x1
   51ea0:	str	w15, [x14], #4
   51ea4:	str	w16, [x12], #4
   51ea8:	b.gt	51e90 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b24>
   51eac:	sub	x9, x11, x9
   51eb0:	sub	x11, x22, x11
   51eb4:	asr	x20, x9, #2
   51eb8:	lsr	x9, x11, #2
   51ebc:	sub	w9, w9, #0x1
   51ec0:	cmp	w9, w20
   51ec4:	csel	w11, w9, w20, lt  // lt = tstop
   51ec8:	cmp	w11, #0x1
   51ecc:	str	x27, [sp, #16]
   51ed0:	b.lt	51ef8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b8c>  // b.tstop
   51ed4:	sub	x9, x22, w11, sxtw #2
   51ed8:	add	w11, w11, #0x1
   51edc:	ldr	w12, [x9]
   51ee0:	ldr	w13, [x10]
   51ee4:	sub	w11, w11, #0x1
   51ee8:	cmp	w11, #0x1
   51eec:	str	w12, [x10], #4
   51ef0:	str	w13, [x9], #4
   51ef4:	b.gt	51edc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2b70>
   51ef8:	add	x26, x23, x24, lsl #2
   51efc:	ldrsw	x9, [x26]
   51f00:	mov	x27, x26
   51f04:	ldrsw	x9, [x19, x9, lsl #2]
   51f08:	add	x9, x9, x25
   51f0c:	ldurb	w9, [x9, #-1]
   51f10:	sub	x25, x22, x20, lsl #2
   51f14:	cmp	w8, w9
   51f18:	b.ls	51f34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2bc8>  // b.plast
   51f1c:	mov	x0, x19
   51f20:	mov	x1, x26
   51f24:	mov	x2, x25
   51f28:	mov	w3, w21
   51f2c:	bl	52d24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39b8>
   51f30:	mov	x27, x0
   51f34:	ldr	w11, [sp, #36]
   51f38:	sub	x8, x25, x27
   51f3c:	cmp	x24, x20
   51f40:	asr	x9, x8, #2
   51f44:	sub	w11, w11, #0x1
   51f48:	b.le	51fac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c40>
   51f4c:	cmp	x24, x9
   51f50:	b.le	5201c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2cb0>
   51f54:	ldr	x24, [sp, #8]
   51f58:	cmp	x20, x9
   51f5c:	add	x20, sp, #0x28
   51f60:	b.le	52100 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d94>
   51f64:	cmp	w24, #0x10
   51f68:	b.ge	52250 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2ee4>  // b.tcont
   51f6c:	mov	w10, #0x18                  	// #24
   51f70:	smaddl	x9, w24, w10, x20
   51f74:	cmp	w24, #0xf
   51f78:	stp	x23, x26, [x9]
   51f7c:	stp	w21, w11, [x9, #16]
   51f80:	b.eq	52270 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f04>  // b.none
   51f84:	sxtw	x9, w24
   51f88:	lsr	x0, x8, #2
   51f8c:	madd	x8, x9, x10, x20
   51f90:	add	w24, w24, #0x2
   51f94:	stp	x25, x22, [x8, #24]
   51f98:	b	51ff8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2c8c>
   51f9c:	ldr	w9, [sp, #36]
   51fa0:	mov	w25, #0x18                  	// #24
   51fa4:	add	w21, w21, #0x1
   51fa8:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   51fac:	cmp	x20, x9
   51fb0:	b.le	52088 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d1c>
   51fb4:	cmp	x24, x9
   51fb8:	b.le	52164 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2df8>
   51fbc:	ldr	x24, [sp, #8]
   51fc0:	add	x20, sp, #0x28
   51fc4:	cmp	w24, #0x10
   51fc8:	b.ge	52290 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f24>  // b.tcont
   51fcc:	mov	w10, #0x18                  	// #24
   51fd0:	smaddl	x9, w24, w10, x20
   51fd4:	cmp	w24, #0xf
   51fd8:	stp	x25, x22, [x9]
   51fdc:	stp	w21, w11, [x9, #16]
   51fe0:	b.eq	522b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f44>  // b.none
   51fe4:	sxtw	x9, w24
   51fe8:	lsr	x0, x8, #2
   51fec:	add	w24, w24, #0x2
   51ff0:	madd	x8, x9, x10, x20
   51ff4:	stp	x23, x26, [x8, #24]
   51ff8:	stp	w21, w11, [x8, #40]
   51ffc:	add	w21, w21, #0x1
   52000:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   52004:	mov	x23, x27
   52008:	ldr	x27, [sp, #16]
   5200c:	mov	w9, w0
   52010:	mov	x22, x25
   52014:	mov	w25, #0x18                  	// #24
   52018:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   5201c:	ldr	x24, [sp, #8]
   52020:	cmp	w24, #0x10
   52024:	b.ge	522d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f64>  // b.tcont
   52028:	lsr	x0, x8, #2
   5202c:	mov	w8, #0x18                  	// #24
   52030:	add	x10, sp, #0x28
   52034:	mov	x9, x25
   52038:	smaddl	x20, w24, w8, x10
   5203c:	add	w8, w21, #0x1
   52040:	mov	w25, w11
   52044:	stp	x27, x9, [x20]
   52048:	mov	x27, x9
   5204c:	str	w8, [x20, #16]
   52050:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   52054:	cmp	w24, #0xf
   52058:	str	w0, [x20, #20]
   5205c:	b.eq	522f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2f84>  // b.none
   52060:	sxtw	x8, w24
   52064:	mov	w9, #0x18                  	// #24
   52068:	add	x10, sp, #0x28
   5206c:	madd	x8, x8, x9, x10
   52070:	add	w24, w24, #0x2
   52074:	stp	x23, x26, [x8, #24]
   52078:	stp	w21, w25, [x8, #40]
   5207c:	mov	w9, w25
   52080:	mov	x23, x27
   52084:	b	520f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2d84>
   52088:	ldr	x24, [sp, #8]
   5208c:	cmp	w24, #0x10
   52090:	b.ge	52310 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2fa4>  // b.tcont
   52094:	lsr	x0, x8, #2
   52098:	add	x8, sp, #0x28
   5209c:	mov	w10, #0x18                  	// #24
   520a0:	mov	x9, x25
   520a4:	smaddl	x20, w24, w10, x8
   520a8:	add	w8, w21, #0x1
   520ac:	mov	w25, w11
   520b0:	stp	x27, x9, [x20]
   520b4:	mov	x27, x9
   520b8:	str	w8, [x20, #16]
   520bc:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   520c0:	cmp	w24, #0xf
   520c4:	str	w0, [x20, #20]
   520c8:	b.eq	52330 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2fc4>  // b.none
   520cc:	sxtw	x8, w24
   520d0:	add	x9, sp, #0x28
   520d4:	mov	w10, #0x18                  	// #24
   520d8:	madd	x8, x8, x10, x9
   520dc:	add	w24, w24, #0x2
   520e0:	stp	x27, x22, [x8, #24]
   520e4:	mov	w9, w25
   520e8:	mov	x22, x26
   520ec:	stp	w21, w25, [x8, #40]
   520f0:	ldr	x27, [sp, #16]
   520f4:	mov	w25, #0x18                  	// #24
   520f8:	add	x20, sp, #0x28
   520fc:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   52100:	cmp	w24, #0x10
   52104:	b.ge	52350 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x2fe4>  // b.tcont
   52108:	mov	w10, #0x18                  	// #24
   5210c:	smaddl	x9, w24, w10, x20
   52110:	cmp	w24, #0xf
   52114:	stp	x23, x26, [x9]
   52118:	stp	w21, w11, [x9, #16]
   5211c:	b.eq	52370 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3004>  // b.none
   52120:	mov	w26, w11
   52124:	sxtw	x9, w24
   52128:	add	x11, sp, #0x28
   5212c:	lsr	x0, x8, #2
   52130:	add	w8, w21, #0x1
   52134:	madd	x20, x9, x10, x11
   52138:	stp	x27, x25, [x20, #24]
   5213c:	str	w8, [x20, #40]
   52140:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   52144:	ldr	x27, [sp, #16]
   52148:	add	w24, w24, #0x2
   5214c:	str	w0, [x20, #44]
   52150:	add	x20, sp, #0x28
   52154:	mov	x23, x25
   52158:	mov	w25, #0x18                  	// #24
   5215c:	mov	w9, w26
   52160:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   52164:	ldr	x24, [sp, #8]
   52168:	add	x9, sp, #0x28
   5216c:	cmp	w24, #0x10
   52170:	b.ge	52390 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3024>  // b.tcont
   52174:	mov	w10, #0x18                  	// #24
   52178:	smaddl	x9, w24, w10, x9
   5217c:	cmp	w24, #0xf
   52180:	stp	x25, x22, [x9]
   52184:	stp	w21, w11, [x9, #16]
   52188:	str	w11, [sp, #36]
   5218c:	b.eq	523b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3044>  // b.none
   52190:	sxtw	x9, w24
   52194:	add	x11, sp, #0x28
   52198:	lsr	x0, x8, #2
   5219c:	add	w8, w21, #0x1
   521a0:	madd	x20, x9, x10, x11
   521a4:	stp	x27, x25, [x20, #24]
   521a8:	str	w8, [x20, #40]
   521ac:	bl	52ae4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3778>
   521b0:	ldr	x27, [sp, #16]
   521b4:	ldr	w9, [sp, #36]
   521b8:	add	w24, w24, #0x2
   521bc:	str	w0, [x20, #44]
   521c0:	add	x20, sp, #0x28
   521c4:	mov	x22, x26
   521c8:	mov	w25, #0x18                  	// #24
   521cc:	b	51a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x26c4>
   521d0:	add	sp, sp, #0x1b0
   521d4:	ldp	x20, x19, [sp, #80]
   521d8:	ldp	x22, x21, [sp, #64]
   521dc:	ldp	x24, x23, [sp, #48]
   521e0:	ldp	x26, x25, [sp, #32]
   521e4:	ldp	x28, x27, [sp, #16]
   521e8:	ldp	x29, x30, [sp], #96
   521ec:	ret
   521f0:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   521f4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   521f8:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   521fc:	add	x0, x0, #0x9f4
   52200:	add	x1, x1, #0x9ff
   52204:	add	x3, x3, #0xa18
   52208:	mov	w2, #0x1a2                 	// #418
   5220c:	bl	4a40 <__assert_fail@plt>
   52210:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52214:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52218:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5221c:	add	x0, x0, #0xa62
   52220:	add	x1, x1, #0x9ff
   52224:	add	x3, x3, #0xa18
   52228:	mov	w2, #0x1bc                 	// #444
   5222c:	bl	4a40 <__assert_fail@plt>
   52230:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52234:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52238:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5223c:	add	x0, x0, #0xa62
   52240:	add	x1, x1, #0x9ff
   52244:	add	x3, x3, #0xa18
   52248:	mov	w2, #0x1b5                 	// #437
   5224c:	bl	4a40 <__assert_fail@plt>
   52250:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52254:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52258:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5225c:	add	x0, x0, #0xa62
   52260:	add	x1, x1, #0x9ff
   52264:	add	x3, x3, #0xa18
   52268:	mov	w2, #0x204                 	// #516
   5226c:	bl	4a40 <__assert_fail@plt>
   52270:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52274:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52278:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5227c:	add	x0, x0, #0xa62
   52280:	add	x1, x1, #0x9ff
   52284:	add	x3, x3, #0xa18
   52288:	mov	w2, #0x205                 	// #517
   5228c:	bl	4a40 <__assert_fail@plt>
   52290:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52294:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52298:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5229c:	add	x0, x0, #0xa62
   522a0:	add	x1, x1, #0x9ff
   522a4:	add	x3, x3, #0xa18
   522a8:	mov	w2, #0x1f6                 	// #502
   522ac:	bl	4a40 <__assert_fail@plt>
   522b0:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522b4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522b8:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522bc:	add	x0, x0, #0xa62
   522c0:	add	x1, x1, #0x9ff
   522c4:	add	x3, x3, #0xa18
   522c8:	mov	w2, #0x1f7                 	// #503
   522cc:	bl	4a40 <__assert_fail@plt>
   522d0:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522d4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522d8:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522dc:	add	x0, x0, #0xa62
   522e0:	add	x1, x1, #0x9ff
   522e4:	add	x3, x3, #0xa18
   522e8:	mov	w2, #0x1fc                 	// #508
   522ec:	bl	4a40 <__assert_fail@plt>
   522f0:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522f4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522f8:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   522fc:	add	x0, x0, #0xa62
   52300:	add	x1, x1, #0x9ff
   52304:	add	x3, x3, #0xa18
   52308:	mov	w2, #0x1fd                 	// #509
   5230c:	bl	4a40 <__assert_fail@plt>
   52310:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52314:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52318:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5231c:	add	x0, x0, #0xa62
   52320:	add	x1, x1, #0x9ff
   52324:	add	x3, x3, #0xa18
   52328:	mov	w2, #0x1ee                 	// #494
   5232c:	bl	4a40 <__assert_fail@plt>
   52330:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52334:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52338:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5233c:	add	x0, x0, #0xa62
   52340:	add	x1, x1, #0x9ff
   52344:	add	x3, x3, #0xa18
   52348:	mov	w2, #0x1ef                 	// #495
   5234c:	bl	4a40 <__assert_fail@plt>
   52350:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52354:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52358:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5235c:	add	x0, x0, #0xa62
   52360:	add	x1, x1, #0x9ff
   52364:	add	x3, x3, #0xa18
   52368:	mov	w2, #0x200                 	// #512
   5236c:	bl	4a40 <__assert_fail@plt>
   52370:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52374:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52378:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5237c:	add	x0, x0, #0xa62
   52380:	add	x1, x1, #0x9ff
   52384:	add	x3, x3, #0xa18
   52388:	mov	w2, #0x201                 	// #513
   5238c:	bl	4a40 <__assert_fail@plt>
   52390:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52394:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52398:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5239c:	add	x0, x0, #0xa62
   523a0:	add	x1, x1, #0x9ff
   523a4:	add	x3, x3, #0xa18
   523a8:	mov	w2, #0x1f2                 	// #498
   523ac:	bl	4a40 <__assert_fail@plt>
   523b0:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   523b4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   523b8:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   523bc:	add	x0, x0, #0xa62
   523c0:	add	x1, x1, #0x9ff
   523c4:	add	x3, x3, #0xa18
   523c8:	mov	w2, #0x1f3                 	// #499
   523cc:	bl	4a40 <__assert_fail@plt>
   523d0:	stp	x29, x30, [sp, #-96]!
   523d4:	stp	x28, x27, [sp, #16]
   523d8:	stp	x26, x25, [sp, #32]
   523dc:	stp	x24, x23, [sp, #48]
   523e0:	stp	x22, x21, [sp, #64]
   523e4:	stp	x20, x19, [sp, #80]
   523e8:	mov	x29, sp
   523ec:	sub	sp, sp, #0x420
   523f0:	mov	x26, x4
   523f4:	mov	x25, x3
   523f8:	mov	x23, x2
   523fc:	mov	x20, x1
   52400:	mov	x21, x0
   52404:	mov	w28, wzr
   52408:	mov	w19, wzr
   5240c:	sxtw	x22, w6
   52410:	stp	x5, x22, [sp]
   52414:	b	52430 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30c4>
   52418:	sub	x28, x8, #0x1
   5241c:	add	x8, sp, #0x18
   52420:	add	x8, x8, x28, lsl #5
   52424:	ldp	x23, x25, [x8]
   52428:	ldr	x26, [x8, #16]
   5242c:	ldr	w19, [x8, #24]
   52430:	mov	x24, x25
   52434:	sub	x8, x26, x24
   52438:	asr	x8, x8, #2
   5243c:	cmp	x8, x22
   52440:	b.le	525f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3284>
   52444:	sub	x9, x24, x23
   52448:	asr	x9, x9, #2
   5244c:	cmp	x9, x22
   52450:	b.le	5268c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3320>
   52454:	cmp	x9, x8
   52458:	csel	w27, w9, w8, lt  // lt = tstop
   5245c:	str	x28, [sp, #16]
   52460:	mov	x28, x26
   52464:	cmp	w27, #0x1
   52468:	b.lt	524dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3170>  // b.tstop
   5246c:	mov	w26, wzr
   52470:	sub	x25, x24, #0x4
   52474:	b	52484 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3118>
   52478:	cmp	w22, #0x0
   5247c:	mov	w27, w22
   52480:	b.le	524e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3174>
   52484:	asr	w22, w27, #1
   52488:	sbfiz	x8, x26, #2, #32
   5248c:	add	x9, x24, x8
   52490:	sbfiz	x10, x22, #2, #32
   52494:	sub	x8, x25, x8
   52498:	sub	x8, x8, x10
   5249c:	ldr	w9, [x9, x10]
   524a0:	ldr	w8, [x8]
   524a4:	mov	w3, #0x2                   	// #2
   524a8:	mov	x0, x21
   524ac:	eor	w9, w9, w9, asr #31
   524b0:	eor	w8, w8, w8, asr #31
   524b4:	add	x1, x20, w9, sxtw #2
   524b8:	add	x2, x20, w8, sxtw #2
   524bc:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   524c0:	tbz	w0, #31, 52478 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x310c>
   524c4:	add	w8, w26, w22
   524c8:	mvn	w9, w27
   524cc:	add	w26, w8, #0x1
   524d0:	and	w8, w9, #0x1
   524d4:	sub	w22, w22, w8
   524d8:	b	52478 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x310c>
   524dc:	mov	w26, wzr
   524e0:	cmp	w26, #0x1
   524e4:	b.lt	52728 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33bc>  // b.tstop
   524e8:	sbfiz	x8, x26, #2, #32
   524ec:	sub	x25, x24, x8
   524f0:	mov	x0, x25
   524f4:	mov	x1, x24
   524f8:	mov	w2, w26
   524fc:	add	x27, x24, x8
   52500:	bl	53554 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41e8>
   52504:	mov	x26, x28
   52508:	cmp	x27, x28
   5250c:	b.cs	5253c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31d0>  // b.hs, b.nlast
   52510:	ldr	w8, [x27]
   52514:	tbnz	w8, #31, 52548 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31dc>
   52518:	ldr	x28, [sp, #16]
   5251c:	cmp	x23, x25
   52520:	b.cs	52570 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3204>  // b.hs, b.nlast
   52524:	sub	x9, x24, #0x4
   52528:	ldr	w8, [x9, #4]!
   5252c:	tbnz	w8, #31, 52528 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31bc>
   52530:	mov	w10, #0x2                   	// #2
   52534:	mov	x8, x24
   52538:	b	52584 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3218>
   5253c:	ldr	x28, [sp, #16]
   52540:	mov	w10, wzr
   52544:	b	5257c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3210>
   52548:	ldr	x28, [sp, #16]
   5254c:	mvn	w8, w8
   52550:	cmp	x23, x25
   52554:	str	w8, [x27]
   52558:	b.cs	52578 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x320c>  // b.hs, b.nlast
   5255c:	mov	x8, x24
   52560:	ldr	w9, [x8, #-4]!
   52564:	tbnz	w9, #31, 52560 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x31f4>
   52568:	mov	w10, #0x5                   	// #5
   5256c:	b	52580 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3214>
   52570:	mov	w10, wzr
   52574:	b	5257c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3210>
   52578:	mov	w10, #0x1                   	// #1
   5257c:	mov	x8, x24
   52580:	mov	x9, x24
   52584:	sub	x11, x8, x23
   52588:	sub	x12, x26, x9
   5258c:	cmp	x11, x12
   52590:	b.le	52758 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33ec>
   52594:	cmp	x9, x24
   52598:	and	w11, w10, #0x2
   5259c:	cset	w13, eq  // eq = none
   525a0:	eor	w12, w10, #0x6
   525a4:	tst	w13, w11, lsr #1
   525a8:	csel	w10, w12, w10, ne  // ne = any
   525ac:	cmp	w28, #0x20
   525b0:	b.ge	52844 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34d8>  // b.tcont
   525b4:	ldr	x22, [sp, #8]
   525b8:	sxtw	x11, w28
   525bc:	and	w12, w10, #0x4
   525c0:	add	x13, sp, #0x18
   525c4:	add	x11, x13, x11, lsl #5
   525c8:	bfxil	w12, w19, #0, #2
   525cc:	and	w19, w19, #0x4
   525d0:	add	w28, w28, #0x1
   525d4:	stp	x23, x25, [x11]
   525d8:	str	x8, [x11, #16]
   525dc:	str	w12, [x11, #24]
   525e0:	bfxil	w19, w10, #0, #2
   525e4:	mov	x24, x27
   525e8:	mov	x23, x9
   525ec:	b	52434 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30c8>
   525f0:	cmp	x24, x26
   525f4:	b.cs	5261c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32b0>  // b.hs, b.nlast
   525f8:	cmp	x23, x24
   525fc:	b.cs	5261c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32b0>  // b.hs, b.nlast
   52600:	ldr	x5, [sp]
   52604:	mov	x0, x21
   52608:	mov	x1, x20
   5260c:	mov	x2, x23
   52610:	mov	x3, x24
   52614:	mov	x4, x26
   52618:	bl	53084 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d18>
   5261c:	tbnz	w19, #0, 52648 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32dc>
   52620:	tbz	w19, #1, 52654 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32e8>
   52624:	ldur	w8, [x23, #-4]
   52628:	ldrsw	x9, [x23]
   5262c:	mov	w3, #0x2                   	// #2
   52630:	mov	x0, x21
   52634:	eor	w8, w8, w8, asr #31
   52638:	add	x1, x20, w8, sxtw #2
   5263c:	add	x2, x20, x9, lsl #2
   52640:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   52644:	cbnz	w0, 52654 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x32e8>
   52648:	ldr	w8, [x23]
   5264c:	mvn	w8, w8
   52650:	str	w8, [x23]
   52654:	tbz	w19, #2, 52684 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3318>
   52658:	ldur	w8, [x26, #-4]
   5265c:	ldrsw	x19, [x26]
   52660:	mov	w3, #0x2                   	// #2
   52664:	mov	x0, x21
   52668:	eor	w8, w8, w8, asr #31
   5266c:	add	x1, x20, w8, sxtw #2
   52670:	add	x2, x20, x19, lsl #2
   52674:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   52678:	cbnz	w0, 52684 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3318>
   5267c:	mvn	w8, w19
   52680:	str	w8, [x26]
   52684:	tbz	w28, #31, 5271c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33b0>
   52688:	b	52864 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34f8>
   5268c:	cmp	x23, x24
   52690:	b.cs	526b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3344>  // b.hs, b.nlast
   52694:	ldr	x5, [sp]
   52698:	mov	x0, x21
   5269c:	mov	x1, x20
   526a0:	mov	x2, x23
   526a4:	mov	x3, x24
   526a8:	mov	x4, x26
   526ac:	bl	53348 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fdc>
   526b0:	tbnz	w19, #0, 526dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3370>
   526b4:	tbz	w19, #1, 526e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x337c>
   526b8:	ldur	w8, [x23, #-4]
   526bc:	ldrsw	x9, [x23]
   526c0:	mov	w3, #0x2                   	// #2
   526c4:	mov	x0, x21
   526c8:	eor	w8, w8, w8, asr #31
   526cc:	add	x1, x20, w8, sxtw #2
   526d0:	add	x2, x20, x9, lsl #2
   526d4:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   526d8:	cbnz	w0, 526e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x337c>
   526dc:	ldr	w8, [x23]
   526e0:	mvn	w8, w8
   526e4:	str	w8, [x23]
   526e8:	tbz	w19, #2, 52718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33ac>
   526ec:	ldur	w8, [x26, #-4]
   526f0:	ldrsw	x19, [x26]
   526f4:	mov	w3, #0x2                   	// #2
   526f8:	mov	x0, x21
   526fc:	eor	w8, w8, w8, asr #31
   52700:	add	x1, x20, w8, sxtw #2
   52704:	add	x2, x20, x19, lsl #2
   52708:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   5270c:	cbnz	w0, 52718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x33ac>
   52710:	mvn	w8, w19
   52714:	str	w8, [x26]
   52718:	tbnz	w28, #31, 52884 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3518>
   5271c:	cbz	w28, 52824 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34b8>
   52720:	sxtw	x8, w28
   52724:	b	52418 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30ac>
   52728:	ldur	w8, [x24, #-4]
   5272c:	ldrsw	x22, [x24]
   52730:	mov	w3, #0x2                   	// #2
   52734:	mov	x0, x21
   52738:	eor	w8, w8, w8, asr #31
   5273c:	add	x1, x20, w8, sxtw #2
   52740:	add	x2, x20, x22, lsl #2
   52744:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   52748:	cbz	w0, 5279c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3430>
   5274c:	ldr	x22, [sp, #8]
   52750:	tbz	w19, #0, 527ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3440>
   52754:	b	527d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3468>
   52758:	cmp	w28, #0x20
   5275c:	b.ge	528a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3538>  // b.tcont
   52760:	ldr	x22, [sp, #8]
   52764:	sxtw	x11, w28
   52768:	and	w12, w19, #0x4
   5276c:	and	w13, w10, #0x4
   52770:	add	x14, sp, #0x18
   52774:	add	x11, x14, x11, lsl #5
   52778:	bfxil	w12, w10, #0, #2
   5277c:	bfxil	w13, w19, #0, #2
   52780:	add	w28, w28, #0x1
   52784:	stp	x9, x27, [x11]
   52788:	str	x26, [x11, #16]
   5278c:	str	w12, [x11, #24]
   52790:	mov	x26, x8
   52794:	mov	w19, w13
   52798:	b	52430 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30c4>
   5279c:	mvn	w8, w22
   527a0:	str	w8, [x24]
   527a4:	ldr	x22, [sp, #8]
   527a8:	tbnz	w19, #0, 527d4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3468>
   527ac:	tbz	w19, #1, 527e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3474>
   527b0:	ldur	w8, [x23, #-4]
   527b4:	ldrsw	x9, [x23]
   527b8:	mov	w3, #0x2                   	// #2
   527bc:	mov	x0, x21
   527c0:	eor	w8, w8, w8, asr #31
   527c4:	add	x1, x20, w8, sxtw #2
   527c8:	add	x2, x20, x9, lsl #2
   527cc:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   527d0:	cbnz	w0, 527e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3474>
   527d4:	ldr	w8, [x23]
   527d8:	mvn	w8, w8
   527dc:	str	w8, [x23]
   527e0:	tbz	w19, #2, 52810 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34a4>
   527e4:	ldur	w8, [x28, #-4]
   527e8:	ldrsw	x19, [x28]
   527ec:	mov	w3, #0x2                   	// #2
   527f0:	mov	x0, x21
   527f4:	eor	w8, w8, w8, asr #31
   527f8:	add	x1, x20, w8, sxtw #2
   527fc:	add	x2, x20, x19, lsl #2
   52800:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   52804:	cbnz	w0, 52810 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34a4>
   52808:	mvn	w8, w19
   5280c:	str	w8, [x28]
   52810:	ldr	x8, [sp, #16]
   52814:	tbnz	w8, #31, 528c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3558>
   52818:	cbz	w8, 52824 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x34b8>
   5281c:	sxtw	x8, w8
   52820:	b	52418 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x30ac>
   52824:	add	sp, sp, #0x420
   52828:	ldp	x20, x19, [sp, #80]
   5282c:	ldp	x22, x21, [sp, #64]
   52830:	ldp	x24, x23, [sp, #48]
   52834:	ldp	x26, x25, [sp, #32]
   52838:	ldp	x28, x27, [sp, #16]
   5283c:	ldp	x29, x30, [sp], #96
   52840:	ret
   52844:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52848:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5284c:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52850:	add	x0, x0, #0xa62
   52854:	add	x1, x1, #0x9ff
   52858:	add	x3, x3, #0xa75
   5285c:	mov	w2, #0x32e                 	// #814
   52860:	bl	4a40 <__assert_fail@plt>
   52864:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52868:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5286c:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52870:	add	x0, x0, #0x9f4
   52874:	add	x1, x1, #0x9ff
   52878:	add	x3, x3, #0xa75
   5287c:	mov	w2, #0x303                 	// #771
   52880:	bl	4a40 <__assert_fail@plt>
   52884:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52888:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5288c:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52890:	add	x0, x0, #0x9f4
   52894:	add	x1, x1, #0x9ff
   52898:	add	x3, x3, #0xa75
   5289c:	mov	w2, #0x30c                 	// #780
   528a0:	bl	4a40 <__assert_fail@plt>
   528a4:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   528a8:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   528ac:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   528b0:	add	x0, x0, #0xa62
   528b4:	add	x1, x1, #0x9ff
   528b8:	add	x3, x3, #0xa75
   528bc:	mov	w2, #0x32a                 	// #810
   528c0:	bl	4a40 <__assert_fail@plt>
   528c4:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   528c8:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   528cc:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   528d0:	add	x0, x0, #0x9f4
   528d4:	add	x1, x1, #0x9ff
   528d8:	add	x3, x3, #0xa75
   528dc:	mov	w2, #0x336                 	// #822
   528e0:	bl	4a40 <__assert_fail@plt>
   528e4:	sub	sp, sp, #0x70
   528e8:	stp	x24, x23, [sp, #64]
   528ec:	stp	x22, x21, [sp, #80]
   528f0:	stp	x20, x19, [sp, #96]
   528f4:	mov	x19, x4
   528f8:	mov	x23, x3
   528fc:	mov	x21, x1
   52900:	mov	x22, x0
   52904:	stp	x29, x30, [sp, #16]
   52908:	stp	x28, x27, [sp, #32]
   5290c:	stp	x26, x25, [sp, #48]
   52910:	add	x29, sp, #0x10
   52914:	str	x2, [sp]
   52918:	b	52924 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35b8>
   5291c:	cmp	x23, x19
   52920:	b.eq	529fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3690>  // b.none
   52924:	ldur	w9, [x19, #-4]
   52928:	sub	x8, x23, x2
   5292c:	lsr	x8, x8, #2
   52930:	cmp	w8, #0x1
   52934:	stur	w9, [x29, #-4]
   52938:	b.lt	529d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3664>  // b.tstop
   5293c:	eor	w9, w9, w9, asr #31
   52940:	add	x25, x21, w9, sxtw #2
   52944:	mov	w27, #0xffffffff            	// #-1
   52948:	mov	x24, x2
   5294c:	asr	w28, w8, #1
   52950:	add	x20, x24, w28, sxtw #2
   52954:	ldr	w9, [x20], #4
   52958:	mvn	w26, w8
   5295c:	mov	w3, #0x2                   	// #2
   52960:	mov	x0, x22
   52964:	eor	w8, w9, w9, asr #31
   52968:	add	x1, x21, w8, sxtw #2
   5296c:	mov	x2, x25
   52970:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   52974:	and	w8, w26, w0, lsr #31
   52978:	cmp	w0, #0x0
   5297c:	sub	w8, w28, w8
   52980:	csel	x24, x20, x24, lt  // lt = tstop
   52984:	csel	w27, w27, w0, lt  // lt = tstop
   52988:	cmp	w8, #0x0
   5298c:	b.gt	5294c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35e0>
   52990:	subs	x25, x24, x23
   52994:	b.cs	529e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3674>  // b.hs, b.nlast
   52998:	cbnz	w27, 529a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x363c>
   5299c:	ldr	w8, [x24]
   529a0:	mvn	w8, w8
   529a4:	str	w8, [x24]
   529a8:	mov	x0, x24
   529ac:	mov	x1, x23
   529b0:	mov	x2, x19
   529b4:	bl	53580 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4214>
   529b8:	ldr	x2, [sp]
   529bc:	cmp	x24, x2
   529c0:	b.eq	529fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3690>  // b.none
   529c4:	add	x19, x19, x25
   529c8:	mov	x23, x24
   529cc:	b	529e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3678>
   529d0:	mov	w27, #0xffffffff            	// #-1
   529d4:	mov	x24, x2
   529d8:	subs	x25, x24, x23
   529dc:	b.cc	52998 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x362c>  // b.lo, b.ul, b.last
   529e0:	ldr	x2, [sp]
   529e4:	ldur	w8, [x29, #-4]
   529e8:	sub	x19, x19, #0x4
   529ec:	tbz	w8, #31, 5291c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35b0>
   529f0:	ldr	w8, [x19, #-4]!
   529f4:	tbnz	w8, #31, 529f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3684>
   529f8:	b	5291c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x35b0>
   529fc:	ldp	x20, x19, [sp, #96]
   52a00:	ldp	x22, x21, [sp, #80]
   52a04:	ldp	x24, x23, [sp, #64]
   52a08:	ldp	x26, x25, [sp, #48]
   52a0c:	ldp	x28, x27, [sp, #32]
   52a10:	ldp	x29, x30, [sp, #16]
   52a14:	add	sp, sp, #0x70
   52a18:	ret
   52a1c:	ldpsw	x15, x11, [x1]
   52a20:	ldpsw	x16, x12, [x2]
   52a24:	sxtw	x10, w3
   52a28:	add	x9, x0, x10
   52a2c:	add	x11, x0, x11
   52a30:	add	x8, x9, x15
   52a34:	add	x12, x0, x12
   52a38:	add	x13, x11, #0x2
   52a3c:	add	x9, x9, x16
   52a40:	add	x14, x12, #0x2
   52a44:	cmp	x8, x13
   52a48:	cset	w11, cc  // cc = lo, ul, last
   52a4c:	cmp	x9, x14
   52a50:	cset	w12, cc  // cc = lo, ul, last
   52a54:	b.cs	52abc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3750>  // b.hs, b.nlast
   52a58:	cmp	x8, x13
   52a5c:	b.cs	52abc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3750>  // b.hs, b.nlast
   52a60:	ldrb	w17, [x8]
   52a64:	ldrb	w18, [x9]
   52a68:	cmp	w17, w18
   52a6c:	b.ne	52abc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3750>  // b.any
   52a70:	add	x8, x16, x0
   52a74:	add	x9, x15, x0
   52a78:	add	x15, x8, #0x1
   52a7c:	add	x16, x9, #0x1
   52a80:	add	x8, x16, x10
   52a84:	add	x9, x15, x10
   52a88:	cmp	x8, x13
   52a8c:	cset	w11, cc  // cc = lo, ul, last
   52a90:	cmp	x9, x14
   52a94:	cset	w12, cc  // cc = lo, ul, last
   52a98:	b.cs	52abc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3750>  // b.hs, b.nlast
   52a9c:	cmp	x8, x13
   52aa0:	b.cs	52abc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3750>  // b.hs, b.nlast
   52aa4:	ldrb	w17, [x8]
   52aa8:	ldrb	w18, [x9]
   52aac:	add	x15, x15, #0x1
   52ab0:	add	x16, x16, #0x1
   52ab4:	cmp	w17, w18
   52ab8:	b.eq	52a80 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3714>  // b.none
   52abc:	cbz	w11, 52ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3768>
   52ac0:	cbz	w12, 52adc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3770>
   52ac4:	ldrb	w8, [x8]
   52ac8:	ldrb	w9, [x9]
   52acc:	sub	w0, w8, w9
   52ad0:	ret
   52ad4:	sbfx	w0, w12, #0, #1
   52ad8:	ret
   52adc:	mov	w0, #0x1                   	// #1
   52ae0:	ret
   52ae4:	tst	w0, #0xff00
   52ae8:	b.eq	52b04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3798>  // b.none
   52aec:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52af0:	ubfx	w8, w0, #8, #8
   52af4:	add	x9, x9, #0x1f4
   52af8:	ldr	w8, [x9, w8, uxtw #2]
   52afc:	add	w0, w8, #0x8
   52b00:	ret
   52b04:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   52b08:	and	w8, w0, #0xff
   52b0c:	add	x9, x9, #0x1f4
   52b10:	ldr	w0, [x9, w8, uxtw #2]
   52b14:	ret
   52b18:	stp	x29, x30, [sp, #-96]!
   52b1c:	stp	x26, x25, [sp, #32]
   52b20:	sub	x25, x3, #0x8
   52b24:	cmp	x25, x2
   52b28:	str	x27, [sp, #16]
   52b2c:	stp	x24, x23, [sp, #48]
   52b30:	stp	x22, x21, [sp, #64]
   52b34:	stp	x20, x19, [sp, #80]
   52b38:	mov	x29, sp
   52b3c:	b.cs	52b5c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37f0>  // b.hs, b.nlast
   52b40:	ldp	x20, x19, [sp, #80]
   52b44:	ldp	x22, x21, [sp, #64]
   52b48:	ldp	x24, x23, [sp, #48]
   52b4c:	ldp	x26, x25, [sp, #32]
   52b50:	ldr	x27, [sp, #16]
   52b54:	ldp	x29, x30, [sp], #96
   52b58:	ret
   52b5c:	mov	w19, w4
   52b60:	mov	x20, x3
   52b64:	mov	x21, x2
   52b68:	mov	x22, x1
   52b6c:	mov	x23, x0
   52b70:	b	52b88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x381c>
   52b74:	cbz	w0, 52bdc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3870>
   52b78:	sub	x25, x25, #0x4
   52b7c:	cmp	x25, x21
   52b80:	stur	w27, [x26, #-4]
   52b84:	b.cc	52b40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x37d4>  // b.lo, b.ul, b.last
   52b88:	mov	x26, x25
   52b8c:	ldrsw	x27, [x26], #4
   52b90:	add	x24, x22, x27, lsl #2
   52b94:	ldrsw	x8, [x26]
   52b98:	mov	x0, x23
   52b9c:	mov	x1, x24
   52ba0:	mov	w3, w19
   52ba4:	add	x2, x22, x8, lsl #2
   52ba8:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   52bac:	cmp	w0, #0x1
   52bb0:	b.lt	52b74 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3808>  // b.tstop
   52bb4:	ldr	w8, [x26]
   52bb8:	stur	w8, [x26, #-4]
   52bbc:	add	x26, x26, #0x4
   52bc0:	cmp	x26, x20
   52bc4:	b.cs	52b74 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3808>  // b.hs, b.nlast
   52bc8:	ldr	w8, [x26]
   52bcc:	tbnz	w8, #31, 52bb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3848>
   52bd0:	cmp	x26, x20
   52bd4:	b.cc	52b94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3828>  // b.lo, b.ul, b.last
   52bd8:	b	52b74 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3808>
   52bdc:	ldr	w8, [x26]
   52be0:	mvn	w8, w8
   52be4:	str	w8, [x26]
   52be8:	b	52b78 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x380c>
   52bec:	stp	x29, x30, [sp, #-64]!
   52bf0:	stp	x24, x23, [sp, #16]
   52bf4:	stp	x22, x21, [sp, #32]
   52bf8:	stp	x20, x19, [sp, #48]
   52bfc:	mov	w23, w3
   52c00:	mov	x19, x2
   52c04:	mov	x20, x1
   52c08:	mov	x21, x0
   52c0c:	mov	w22, w3
   52c10:	mov	x29, sp
   52c14:	tbnz	w3, #0, 52c58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x38ec>
   52c18:	sub	w22, w23, #0x1
   52c1c:	cmp	w22, #0x0
   52c20:	csel	w10, w23, w22, lt  // lt = tstop
   52c24:	asr	w8, w10, #1
   52c28:	ldrsw	x8, [x19, w8, sxtw #2]
   52c2c:	ldrsw	x9, [x19, w22, sxtw #2]
   52c30:	ldrsw	x11, [x20, x8, lsl #2]
   52c34:	ldrsw	x12, [x20, x9, lsl #2]
   52c38:	ldrb	w11, [x21, x11]
   52c3c:	ldrb	w12, [x21, x12]
   52c40:	cmp	w11, w12
   52c44:	b.cs	52c58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x38ec>  // b.hs, b.nlast
   52c48:	sbfx	x10, x10, #1, #31
   52c4c:	sxtw	x11, w22
   52c50:	str	w8, [x19, x11, lsl #2]
   52c54:	str	w9, [x19, x10, lsl #2]
   52c58:	cmp	w22, #0x2
   52c5c:	b.lt	52c94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3928>  // b.tstop
   52c60:	cmp	w22, #0x0
   52c64:	cinc	w8, w22, lt  // lt = tstop
   52c68:	asr	w8, w8, #1
   52c6c:	add	w24, w8, #0x1
   52c70:	sub	w3, w24, #0x2
   52c74:	mov	x0, x21
   52c78:	mov	x1, x20
   52c7c:	mov	x2, x19
   52c80:	mov	w4, w22
   52c84:	bl	52ecc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b60>
   52c88:	sub	w24, w24, #0x1
   52c8c:	cmp	w24, #0x1
   52c90:	b.gt	52c70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3904>
   52c94:	tbnz	w23, #0, 52cc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3958>
   52c98:	sbfiz	x8, x22, #2, #32
   52c9c:	ldr	w9, [x19, x8]
   52ca0:	ldr	w10, [x19]
   52ca4:	mov	x0, x21
   52ca8:	mov	x1, x20
   52cac:	mov	x2, x19
   52cb0:	mov	w3, wzr
   52cb4:	mov	w4, w22
   52cb8:	str	w9, [x19]
   52cbc:	str	w10, [x19, x8]
   52cc0:	bl	52ecc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b60>
   52cc4:	cmp	w22, #0x2
   52cc8:	b.lt	52d10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39a4>  // b.tstop
   52ccc:	sxtw	x8, w22
   52cd0:	sub	x22, x8, #0x1
   52cd4:	lsl	x23, x22, #2
   52cd8:	ldr	w8, [x19, x23]
   52cdc:	ldr	w24, [x19]
   52ce0:	mov	x0, x21
   52ce4:	mov	x1, x20
   52ce8:	mov	x2, x19
   52cec:	mov	w3, wzr
   52cf0:	mov	w4, w22
   52cf4:	str	w8, [x19]
   52cf8:	bl	52ecc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b60>
   52cfc:	add	x8, x22, #0x1
   52d00:	sub	x22, x22, #0x1
   52d04:	cmp	x8, #0x2
   52d08:	str	w24, [x19, x23]
   52d0c:	b.gt	52cd4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3968>
   52d10:	ldp	x20, x19, [sp, #48]
   52d14:	ldp	x22, x21, [sp, #32]
   52d18:	ldp	x24, x23, [sp, #16]
   52d1c:	ldp	x29, x30, [sp], #64
   52d20:	ret
   52d24:	mov	x8, x0
   52d28:	sub	x0, x1, #0x4
   52d2c:	add	x0, x0, #0x4
   52d30:	cmp	x0, x2
   52d34:	b.cs	52d64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39f8>  // b.hs, b.nlast
   52d38:	ldrsw	x9, [x0]
   52d3c:	ldr	w10, [x8, x9, lsl #2]
   52d40:	add	w11, w9, #0x1
   52d44:	ldr	w11, [x8, w11, sxtw #2]
   52d48:	add	w10, w10, w3
   52d4c:	cmp	w10, w11
   52d50:	b.le	52d64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39f8>
   52d54:	mvn	w9, w9
   52d58:	str	w9, [x0], #4
   52d5c:	cmp	x0, x2
   52d60:	b.cc	52d38 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39cc>  // b.lo, b.ul, b.last
   52d64:	sub	x2, x2, #0x4
   52d68:	cmp	x0, x2
   52d6c:	b.cs	52da8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a3c>  // b.hs, b.nlast
   52d70:	ldrsw	x9, [x2]
   52d74:	add	x9, x8, x9, lsl #2
   52d78:	ldp	w10, w9, [x9]
   52d7c:	add	w10, w10, w3
   52d80:	cmp	w10, w9
   52d84:	b.le	52d64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39f8>
   52d88:	cmp	x0, x2
   52d8c:	b.cs	52da8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a3c>  // b.hs, b.nlast
   52d90:	ldr	w9, [x2]
   52d94:	ldr	w10, [x0]
   52d98:	mvn	w9, w9
   52d9c:	str	w10, [x2]
   52da0:	str	w9, [x0]
   52da4:	b	52d2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x39c0>
   52da8:	cmp	x0, x1
   52dac:	b.ls	52dbc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3a50>  // b.plast
   52db0:	ldr	w8, [x1]
   52db4:	mvn	w8, w8
   52db8:	str	w8, [x1]
   52dbc:	ret
   52dc0:	stp	x29, x30, [sp, #-80]!
   52dc4:	sub	x8, x3, x2
   52dc8:	lsr	x8, x8, #2
   52dcc:	cmp	w8, #0x0
   52dd0:	cinc	w9, w8, lt  // lt = tstop
   52dd4:	asr	w9, w9, #1
   52dd8:	stp	x22, x21, [sp, #48]
   52ddc:	stp	x20, x19, [sp, #64]
   52de0:	mov	x21, x3
   52de4:	mov	x19, x1
   52de8:	mov	x20, x0
   52dec:	cmp	w8, #0x200
   52df0:	add	x22, x2, w9, sxtw #2
   52df4:	str	x25, [sp, #16]
   52df8:	stp	x24, x23, [sp, #32]
   52dfc:	mov	x29, sp
   52e00:	b.gt	52e1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3ab0>
   52e04:	cmp	w8, #0x20
   52e08:	b.gt	52e90 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b24>
   52e0c:	sub	x4, x21, #0x4
   52e10:	mov	x0, x20
   52e14:	mov	x1, x19
   52e18:	b	52e84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b18>
   52e1c:	asr	w8, w8, #3
   52e20:	sbfiz	x24, x8, #2, #32
   52e24:	sbfiz	x25, x8, #3, #32
   52e28:	add	x3, x2, x24
   52e2c:	add	x4, x2, x25
   52e30:	mov	x0, x20
   52e34:	mov	x1, x19
   52e38:	bl	52f48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3bdc>
   52e3c:	mov	x23, x0
   52e40:	sub	x2, x22, x24
   52e44:	add	x4, x22, x24
   52e48:	mov	x0, x20
   52e4c:	mov	x1, x19
   52e50:	mov	x3, x22
   52e54:	bl	52f48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3bdc>
   52e58:	sub	x4, x21, #0x4
   52e5c:	mov	x22, x0
   52e60:	sub	x2, x4, x25
   52e64:	sub	x3, x4, x24
   52e68:	mov	x0, x20
   52e6c:	mov	x1, x19
   52e70:	bl	52f48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3bdc>
   52e74:	mov	x4, x0
   52e78:	mov	x0, x20
   52e7c:	mov	x1, x19
   52e80:	mov	x2, x23
   52e84:	mov	x3, x22
   52e88:	bl	52f48 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3bdc>
   52e8c:	b	52eb4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b48>
   52e90:	asr	w8, w8, #2
   52e94:	sub	x6, x21, #0x4
   52e98:	sbfiz	x8, x8, #2, #32
   52e9c:	add	x3, x2, x8
   52ea0:	sub	x5, x6, x8
   52ea4:	mov	x0, x20
   52ea8:	mov	x1, x19
   52eac:	mov	x4, x22
   52eb0:	bl	52fa8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c3c>
   52eb4:	ldp	x20, x19, [sp, #64]
   52eb8:	ldp	x22, x21, [sp, #48]
   52ebc:	ldp	x24, x23, [sp, #32]
   52ec0:	ldr	x25, [sp, #16]
   52ec4:	ldp	x29, x30, [sp], #80
   52ec8:	ret
   52ecc:	ldrsw	x8, [x2, w3, sxtw #2]
   52ed0:	mov	w10, #0x1                   	// #1
   52ed4:	bfi	w10, w3, #1, #31
   52ed8:	cmp	w10, w4
   52edc:	b.ge	52f40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3bd4>  // b.tcont
   52ee0:	ldrsw	x9, [x1, x8, lsl #2]
   52ee4:	ldrb	w9, [x0, x9]
   52ee8:	sxtw	x11, w10
   52eec:	add	x11, x11, #0x1
   52ef0:	ldrsw	x12, [x2, w10, sxtw #2]
   52ef4:	ldrsw	x13, [x2, x11, lsl #2]
   52ef8:	ldrsw	x12, [x1, x12, lsl #2]
   52efc:	ldrsw	x13, [x1, x13, lsl #2]
   52f00:	ldrb	w12, [x0, x12]
   52f04:	ldrb	w13, [x0, x13]
   52f08:	cmp	w12, w13
   52f0c:	csel	w11, w11, w10, cc  // cc = lo, ul, last
   52f10:	csel	w10, w13, w12, cc  // cc = lo, ul, last
   52f14:	cmp	w10, w9
   52f18:	b.ls	52f40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3bd4>  // b.plast
   52f1c:	ldr	w12, [x2, w11, sxtw #2]
   52f20:	mov	w10, #0x1                   	// #1
   52f24:	bfi	w10, w11, #1, #31
   52f28:	cmp	w10, w4
   52f2c:	str	w12, [x2, w3, sxtw #2]
   52f30:	mov	w3, w11
   52f34:	b.lt	52ee8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3b7c>  // b.tstop
   52f38:	str	w8, [x2, w11, sxtw #2]
   52f3c:	ret
   52f40:	str	w8, [x2, w3, sxtw #2]
   52f44:	ret
   52f48:	ldrsw	x8, [x2]
   52f4c:	ldrsw	x9, [x3]
   52f50:	ldrsw	x10, [x4]
   52f54:	ldrsw	x8, [x1, x8, lsl #2]
   52f58:	ldrsw	x9, [x1, x9, lsl #2]
   52f5c:	ldrsw	x10, [x1, x10, lsl #2]
   52f60:	ldrb	w8, [x0, x8]
   52f64:	ldrb	w9, [x0, x9]
   52f68:	ldrb	w10, [x0, x10]
   52f6c:	cmp	w8, w9
   52f70:	csel	x8, x2, x3, hi  // hi = pmore
   52f74:	ldrsw	x9, [x8]
   52f78:	ldrsw	x9, [x1, x9, lsl #2]
   52f7c:	ldrb	w11, [x0, x9]
   52f80:	csel	x9, x3, x2, hi  // hi = pmore
   52f84:	cmp	w11, w10
   52f88:	b.ls	52fa0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3c34>  // b.plast
   52f8c:	ldrsw	x8, [x9]
   52f90:	ldrsw	x8, [x1, x8, lsl #2]
   52f94:	ldrb	w8, [x0, x8]
   52f98:	cmp	w8, w10
   52f9c:	csel	x8, x9, x4, hi  // hi = pmore
   52fa0:	mov	x0, x8
   52fa4:	ret
   52fa8:	ldrsw	x8, [x3]
   52fac:	ldrsw	x9, [x4]
   52fb0:	ldrsw	x10, [x5]
   52fb4:	ldrsw	x11, [x6]
   52fb8:	ldrsw	x8, [x1, x8, lsl #2]
   52fbc:	ldrsw	x9, [x1, x9, lsl #2]
   52fc0:	ldrsw	x10, [x1, x10, lsl #2]
   52fc4:	ldrsw	x11, [x1, x11, lsl #2]
   52fc8:	ldrb	w8, [x0, x8]
   52fcc:	ldrb	w9, [x0, x9]
   52fd0:	ldrb	w10, [x0, x10]
   52fd4:	ldrb	w11, [x0, x11]
   52fd8:	ldrsw	x14, [x2]
   52fdc:	cmp	w8, w9
   52fe0:	csel	x8, x4, x3, hi  // hi = pmore
   52fe4:	csel	x9, x3, x4, hi  // hi = pmore
   52fe8:	cmp	w10, w11
   52fec:	csel	x10, x6, x5, hi  // hi = pmore
   52ff0:	ldrsw	x11, [x8]
   52ff4:	ldrsw	x12, [x10]
   52ff8:	csel	x13, x5, x6, hi  // hi = pmore
   52ffc:	ldrsw	x14, [x1, x14, lsl #2]
   53000:	ldrsw	x11, [x1, x11, lsl #2]
   53004:	ldrsw	x12, [x1, x12, lsl #2]
   53008:	ldrb	w14, [x0, x14]
   5300c:	ldrb	w11, [x0, x11]
   53010:	ldrb	w12, [x0, x12]
   53014:	cmp	w11, w12
   53018:	csel	x11, x13, x9, hi  // hi = pmore
   5301c:	ldrsw	x12, [x11]
   53020:	csel	x8, x8, x10, hi  // hi = pmore
   53024:	csel	x9, x9, x13, hi  // hi = pmore
   53028:	ldrsw	x10, [x8]
   5302c:	ldrsw	x12, [x1, x12, lsl #2]
   53030:	ldrsw	x10, [x1, x10, lsl #2]
   53034:	ldrb	w12, [x0, x12]
   53038:	ldrb	w10, [x0, x10]
   5303c:	cmp	w14, w12
   53040:	csel	x12, x11, x2, hi  // hi = pmore
   53044:	ldrsw	x13, [x12]
   53048:	csel	x11, x2, x11, hi  // hi = pmore
   5304c:	ldrsw	x13, [x1, x13, lsl #2]
   53050:	ldrb	w13, [x0, x13]
   53054:	cmp	w13, w10
   53058:	csel	x9, x9, x11, hi  // hi = pmore
   5305c:	csel	x8, x12, x8, hi  // hi = pmore
   53060:	ldrsw	x10, [x9]
   53064:	ldrsw	x11, [x8]
   53068:	ldrsw	x10, [x1, x10, lsl #2]
   5306c:	ldrsw	x11, [x1, x11, lsl #2]
   53070:	ldrb	w10, [x0, x10]
   53074:	ldrb	w11, [x0, x11]
   53078:	cmp	w10, w11
   5307c:	csel	x0, x8, x9, hi  // hi = pmore
   53080:	ret
   53084:	sub	sp, sp, #0x70
   53088:	sub	x8, x4, x3
   5308c:	stp	x24, x23, [sp, #64]
   53090:	stp	x22, x21, [sp, #80]
   53094:	mov	x22, x2
   53098:	mov	x23, x1
   5309c:	mov	x24, x0
   530a0:	lsr	x2, x8, #2
   530a4:	mov	x0, x5
   530a8:	mov	x1, x3
   530ac:	stp	x29, x30, [sp, #16]
   530b0:	stp	x28, x27, [sp, #32]
   530b4:	stp	x26, x25, [sp, #48]
   530b8:	stp	x20, x19, [sp, #96]
   530bc:	add	x29, sp, #0x10
   530c0:	mov	x19, x5
   530c4:	mov	x20, x4
   530c8:	mov	x21, x3
   530cc:	add	x27, x5, x8
   530d0:	bl	53554 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41e8>
   530d4:	ldr	w8, [x27, #-4]!
   530d8:	ldr	w9, [x21, #-4]!
   530dc:	ldr	w11, [x20, #-4]!
   530e0:	mov	w10, #0x2                   	// #2
   530e4:	lsr	w12, w8, #31
   530e8:	bfxil	w10, w8, #31, #1
   530ec:	stur	w11, [x29, #-4]
   530f0:	eor	w11, w8, w8, asr #31
   530f4:	eor	w8, w9, w9, asr #31
   530f8:	cmp	w9, #0x0
   530fc:	add	x25, x23, w11, sxtw #2
   53100:	csel	w28, w10, w12, lt  // lt = tstop
   53104:	add	x26, x23, w8, sxtw #2
   53108:	mov	w3, #0x2                   	// #2
   5310c:	mov	x0, x24
   53110:	mov	x1, x25
   53114:	mov	x2, x26
   53118:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   5311c:	cmp	w0, #0x1
   53120:	b.ge	5318c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e20>  // b.tcont
   53124:	tbz	w0, #31, 531e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e74>
   53128:	tbz	w28, #1, 5314c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3de0>
   5312c:	mov	x8, x20
   53130:	ldr	w9, [x21]
   53134:	ldr	w10, [x20, #-4]!
   53138:	str	w9, [x8]
   5313c:	str	w10, [x21], #-4
   53140:	ldr	w8, [x21]
   53144:	tbnz	w8, #31, 5312c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3dc0>
   53148:	eor	w28, w28, #0x2
   5314c:	mov	x8, x20
   53150:	ldr	w9, [x21]
   53154:	ldr	w10, [x20, #-4]!
   53158:	str	w9, [x8]
   5315c:	str	w10, [x21], #-4
   53160:	cmp	x21, x22
   53164:	b.cc	532a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f38>  // b.lo, b.ul, b.last
   53168:	ldrsw	x8, [x21]
   5316c:	orr	w9, w28, #0x2
   53170:	mvn	w10, w8
   53174:	add	x11, x23, x8, lsl #2
   53178:	cmp	w8, #0x0
   5317c:	add	x8, x23, w10, sxtw #2
   53180:	csel	x26, x8, x11, lt  // lt = tstop
   53184:	csel	w28, w9, w28, lt  // lt = tstop
   53188:	b	53108 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d9c>
   5318c:	tbz	w28, #0, 531b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e44>
   53190:	mov	x8, x20
   53194:	ldr	w9, [x27]
   53198:	ldr	w10, [x20, #-4]!
   5319c:	str	w9, [x8]
   531a0:	str	w10, [x27], #-4
   531a4:	ldr	w8, [x27]
   531a8:	tbnz	w8, #31, 53190 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e24>
   531ac:	eor	w28, w28, #0x1
   531b0:	ldr	w8, [x27]
   531b4:	cmp	x27, x19
   531b8:	str	w8, [x20], #-4
   531bc:	b.ls	5330c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fa0>  // b.plast
   531c0:	mov	x8, x27
   531c4:	ldr	w10, [x20]
   531c8:	ldrsw	x9, [x8, #-4]!
   531cc:	str	w10, [x27]
   531d0:	tbnz	w9, #31, 53280 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f14>
   531d4:	add	x25, x23, x9, lsl #2
   531d8:	mov	x27, x8
   531dc:	b	53108 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d9c>
   531e0:	tbz	w28, #0, 53204 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e98>
   531e4:	mov	x8, x20
   531e8:	ldr	w9, [x27]
   531ec:	ldr	w10, [x20, #-4]!
   531f0:	str	w9, [x8]
   531f4:	str	w10, [x27], #-4
   531f8:	ldr	w8, [x27]
   531fc:	tbnz	w8, #31, 531e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3e78>
   53200:	eor	w28, w28, #0x1
   53204:	ldr	w8, [x27]
   53208:	cmp	x27, x19
   5320c:	mvn	w8, w8
   53210:	str	w8, [x20], #-4
   53214:	b.ls	5330c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fa0>  // b.plast
   53218:	ldr	w8, [x20]
   5321c:	str	w8, [x27], #-4
   53220:	tbz	w28, #1, 53244 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3ed8>
   53224:	mov	x8, x20
   53228:	ldr	w9, [x21]
   5322c:	ldr	w10, [x20, #-4]!
   53230:	str	w9, [x8]
   53234:	str	w10, [x21], #-4
   53238:	ldr	w8, [x21]
   5323c:	tbnz	w8, #31, 53224 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3eb8>
   53240:	eor	w28, w28, #0x2
   53244:	mov	x8, x20
   53248:	ldr	w9, [x21]
   5324c:	ldr	w10, [x20, #-4]!
   53250:	str	w9, [x8]
   53254:	str	w10, [x21], #-4
   53258:	cmp	x21, x22
   5325c:	b.cc	53314 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fa8>  // b.lo, b.ul, b.last
   53260:	ldr	w9, [x27]
   53264:	ldrsw	x8, [x21]
   53268:	eor	w10, w9, w9, asr #31
   5326c:	orr	w28, w28, w9, lsr #31
   53270:	add	x25, x23, w10, sxtw #2
   53274:	tbnz	w8, #31, 53294 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f28>
   53278:	add	x26, x23, x8, lsl #2
   5327c:	b	53108 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d9c>
   53280:	mvn	w9, w9
   53284:	add	x25, x23, w9, sxtw #2
   53288:	orr	w28, w28, #0x1
   5328c:	mov	x27, x8
   53290:	b	53108 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d9c>
   53294:	mvn	w8, w8
   53298:	add	x26, x23, w8, sxtw #2
   5329c:	orr	w28, w28, #0x2
   532a0:	b	53108 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3d9c>
   532a4:	ldr	w8, [x27]
   532a8:	cmp	x27, x19
   532ac:	b.ls	532d8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f6c>  // b.plast
   532b0:	ldur	w11, [x29, #-4]
   532b4:	mov	x9, x20
   532b8:	ldr	w10, [x9, #-4]!
   532bc:	str	w8, [x20]
   532c0:	str	w10, [x27], #-4
   532c4:	ldr	w8, [x27]
   532c8:	cmp	x27, x19
   532cc:	mov	x20, x9
   532d0:	b.hi	532b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f4c>  // b.pmore
   532d4:	b	532e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f74>
   532d8:	ldur	w11, [x29, #-4]
   532dc:	mov	x9, x20
   532e0:	mov	x19, x27
   532e4:	str	w8, [x9]
   532e8:	str	w11, [x19]
   532ec:	ldp	x20, x19, [sp, #96]
   532f0:	ldp	x22, x21, [sp, #80]
   532f4:	ldp	x24, x23, [sp, #64]
   532f8:	ldp	x26, x25, [sp, #48]
   532fc:	ldp	x28, x27, [sp, #32]
   53300:	ldp	x29, x30, [sp, #16]
   53304:	add	sp, sp, #0x70
   53308:	ret
   5330c:	ldur	w11, [x29, #-4]
   53310:	b	532e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f7c>
   53314:	ldr	w8, [x27]
   53318:	ldur	w11, [x29, #-4]
   5331c:	cmp	x27, x19
   53320:	b.ls	532dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f70>  // b.plast
   53324:	mov	x9, x20
   53328:	ldr	w10, [x9, #-4]!
   5332c:	str	w8, [x20]
   53330:	str	w10, [x27], #-4
   53334:	ldr	w8, [x27]
   53338:	cmp	x27, x19
   5333c:	mov	x20, x9
   53340:	b.hi	53328 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3fbc>  // b.pmore
   53344:	b	532e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x3f74>
   53348:	stp	x29, x30, [sp, #-96]!
   5334c:	stp	x24, x23, [sp, #48]
   53350:	mov	x24, x2
   53354:	sub	x8, x3, x2
   53358:	stp	x22, x21, [sp, #64]
   5335c:	mov	x22, x1
   53360:	mov	x23, x0
   53364:	lsr	x2, x8, #2
   53368:	add	x8, x5, x8
   5336c:	mov	x0, x5
   53370:	mov	x1, x24
   53374:	str	x27, [sp, #16]
   53378:	stp	x26, x25, [sp, #32]
   5337c:	stp	x20, x19, [sp, #80]
   53380:	mov	x29, sp
   53384:	mov	x19, x5
   53388:	mov	x20, x4
   5338c:	mov	x21, x3
   53390:	sub	x26, x8, #0x4
   53394:	bl	53554 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41e8>
   53398:	ldr	w25, [x24]
   5339c:	ldrsw	x8, [x19]
   533a0:	ldrsw	x27, [x21]
   533a4:	mov	w3, #0x2                   	// #2
   533a8:	mov	x0, x23
   533ac:	add	x1, x22, x8, lsl #2
   533b0:	add	x2, x22, x27, lsl #2
   533b4:	bl	52a1c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x36b0>
   533b8:	tbz	w0, #31, 533e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x407c>
   533bc:	mov	x8, x24
   533c0:	ldr	w9, [x19]
   533c4:	cmp	x26, x19
   533c8:	str	w9, [x24], #4
   533cc:	b.ls	534f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4184>  // b.plast
   533d0:	ldr	w8, [x8, #4]
   533d4:	str	w8, [x19], #4
   533d8:	ldr	w9, [x19]
   533dc:	mov	x8, x24
   533e0:	tbnz	w9, #31, 533c0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4054>
   533e4:	b	5339c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4030>
   533e8:	cbz	w0, 53428 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x40bc>
   533ec:	mov	x8, xzr
   533f0:	add	x9, x21, x8
   533f4:	add	x10, x24, x8
   533f8:	ldr	w11, [x9]
   533fc:	ldr	w12, [x10, #4]
   53400:	str	w11, [x10]
   53404:	str	w12, [x9], #4
   53408:	cmp	x9, x20
   5340c:	b.cs	53494 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4128>  // b.hs, b.nlast
   53410:	ldr	w9, [x9]
   53414:	add	x8, x8, #0x4
   53418:	tbnz	w9, #31, 533f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4084>
   5341c:	add	x21, x21, x8
   53420:	add	x24, x24, x8
   53424:	b	5339c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4030>
   53428:	mvn	w8, w27
   5342c:	str	w8, [x21]
   53430:	mov	x8, x24
   53434:	ldr	w9, [x19]
   53438:	cmp	x26, x19
   5343c:	str	w9, [x8], #4
   53440:	b.ls	534f0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4184>  // b.plast
   53444:	ldr	w9, [x24, #4]
   53448:	mov	x24, x8
   5344c:	str	w9, [x19], #4
   53450:	ldr	w9, [x19]
   53454:	tbnz	w9, #31, 53434 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x40c8>
   53458:	mov	x9, xzr
   5345c:	add	x11, x21, x9
   53460:	add	x10, x8, x9
   53464:	ldr	w12, [x11]
   53468:	ldr	w13, [x10, #4]
   5346c:	str	w12, [x10]
   53470:	str	w13, [x11], #4
   53474:	cmp	x11, x20
   53478:	b.cs	53510 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41a4>  // b.hs, b.nlast
   5347c:	ldr	w10, [x11]
   53480:	add	x9, x9, #0x4
   53484:	tbnz	w10, #31, 5345c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x40f0>
   53488:	add	x21, x21, x9
   5348c:	add	x24, x8, x9
   53490:	b	5339c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4030>
   53494:	ldr	w9, [x19]
   53498:	cmp	x19, x26
   5349c:	b.cs	534e4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4178>  // b.hs, b.nlast
   534a0:	mov	x10, xzr
   534a4:	add	x11, x24, x10
   534a8:	add	x11, x11, x8
   534ac:	add	x12, x19, x10
   534b0:	str	w9, [x11, #4]
   534b4:	ldr	w13, [x11, #8]
   534b8:	ldr	w9, [x12, #4]
   534bc:	add	x10, x10, #0x4
   534c0:	add	x11, x19, x10
   534c4:	cmp	x11, x26
   534c8:	str	w13, [x12]
   534cc:	b.cc	534a4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4138>  // b.lo, b.ul, b.last
   534d0:	add	x8, x24, x8
   534d4:	add	x8, x8, x10
   534d8:	add	x8, x8, #0x4
   534dc:	mov	x19, x11
   534e0:	b	534e8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x417c>
   534e4:	add	x8, x10, #0x4
   534e8:	str	w9, [x8]
   534ec:	mov	x26, x19
   534f0:	str	w25, [x26]
   534f4:	ldp	x20, x19, [sp, #80]
   534f8:	ldp	x22, x21, [sp, #64]
   534fc:	ldp	x24, x23, [sp, #48]
   53500:	ldp	x26, x25, [sp, #32]
   53504:	ldr	x27, [sp, #16]
   53508:	ldp	x29, x30, [sp], #96
   5350c:	ret
   53510:	ldr	w8, [x19]
   53514:	cmp	x19, x26
   53518:	add	x10, x10, #0x4
   5351c:	b.cs	53548 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41dc>  // b.hs, b.nlast
   53520:	mov	x9, x10
   53524:	ldr	w11, [x9, #4]!
   53528:	str	w8, [x10]
   5352c:	str	w11, [x19], #4
   53530:	ldr	w8, [x19]
   53534:	cmp	x19, x26
   53538:	mov	x10, x9
   5353c:	b.cc	53524 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41b8>  // b.lo, b.ul, b.last
   53540:	str	w8, [x9]
   53544:	b	534ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4180>
   53548:	mov	x9, x10
   5354c:	str	w8, [x10]
   53550:	b	534ec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4180>
   53554:	cmp	w2, #0x1
   53558:	b.lt	5357c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4210>  // b.tstop
   5355c:	add	w8, w2, #0x1
   53560:	ldr	w9, [x1]
   53564:	ldr	w10, [x0]
   53568:	sub	w8, w8, #0x1
   5356c:	cmp	w8, #0x1
   53570:	str	w9, [x0], #4
   53574:	str	w10, [x1], #4
   53578:	b.gt	53560 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41f4>
   5357c:	ret
   53580:	stp	x29, x30, [sp, #-16]!
   53584:	sub	x8, x1, x0
   53588:	lsr	x8, x8, #2
   5358c:	cmp	w8, #0x1
   53590:	mov	x29, sp
   53594:	b.lt	5364c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42e0>  // b.tstop
   53598:	sub	x9, x2, x1
   5359c:	lsr	x9, x9, #2
   535a0:	cmp	w9, #0x1
   535a4:	b.lt	5364c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42e0>  // b.tstop
   535a8:	sub	x10, x1, #0x4
   535ac:	cmp	w8, w9
   535b0:	b.eq	53654 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42e8>  // b.none
   535b4:	b.ge	535f8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x428c>  // b.tcont
   535b8:	ldr	w12, [x2, #-4]!
   535bc:	mvn	w11, w8
   535c0:	mov	x13, x10
   535c4:	mov	x14, x2
   535c8:	ldr	w15, [x13]
   535cc:	ldr	w16, [x2, #-4]!
   535d0:	str	w15, [x14]
   535d4:	str	w16, [x13], #-4
   535d8:	cmp	x13, x0
   535dc:	b.cs	535c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4258>  // b.hs, b.nlast
   535e0:	add	w9, w9, w11
   535e4:	cmp	w9, w8
   535e8:	str	w12, [x2]
   535ec:	b.le	5363c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42d0>
   535f0:	ldr	w12, [x2, #-4]!
   535f4:	b	535c0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4254>
   535f8:	ldr	w12, [x0]
   535fc:	mvn	w11, w9
   53600:	add	x0, x0, #0x4
   53604:	mov	x13, x1
   53608:	ldr	w14, [x13]
   5360c:	ldr	w15, [x0]
   53610:	stur	w14, [x0, #-4]
   53614:	str	w15, [x13], #4
   53618:	cmp	x2, x13
   5361c:	add	x0, x0, #0x4
   53620:	b.hi	53608 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x429c>  // b.pmore
   53624:	add	w8, w8, w11
   53628:	cmp	w8, w9
   5362c:	stur	w12, [x0, #-4]
   53630:	b.le	5363c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42d0>
   53634:	ldr	w12, [x0]
   53638:	b	53600 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4294>
   5363c:	cmp	w8, #0x1
   53640:	b.lt	5364c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x42e0>  // b.tstop
   53644:	cmp	w9, #0x0
   53648:	b.gt	535ac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4240>
   5364c:	ldp	x29, x30, [sp], #16
   53650:	ret
   53654:	mov	w2, w8
   53658:	bl	53554 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x41e8>
   5365c:	ldp	x29, x30, [sp], #16
   53660:	ret
   53664:	stp	w2, w2, [x0, #4]
   53668:	str	w1, [x0]
   5366c:	ret
   53670:	cmp	w0, #0x10, lsl #12
   53674:	b.cc	53694 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4328>  // b.lo, b.ul, b.last
   53678:	lsr	w8, w0, #24
   5367c:	cbz	w8, 536b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4348>
   53680:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   53684:	add	x9, x9, #0x1f4
   53688:	ldr	w8, [x9, w8, uxtw #2]
   5368c:	add	w0, w8, #0x18
   53690:	ret
   53694:	tst	w0, #0xff00
   53698:	b.eq	536cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4360>  // b.none
   5369c:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   536a0:	ubfx	w8, w0, #8, #8
   536a4:	add	x9, x9, #0x1f4
   536a8:	ldr	w8, [x9, w8, uxtw #2]
   536ac:	add	w0, w8, #0x8
   536b0:	ret
   536b4:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   536b8:	ubfx	w8, w0, #16, #8
   536bc:	add	x9, x9, #0x1f4
   536c0:	ldr	w8, [x9, w8, uxtw #2]
   536c4:	add	w0, w8, #0x10
   536c8:	ret
   536cc:	adrp	x9, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   536d0:	and	w8, w0, #0xff
   536d4:	add	x9, x9, #0x1f4
   536d8:	ldr	w0, [x9, w8, uxtw #2]
   536dc:	ret
   536e0:	stp	x29, x30, [sp, #-96]!
   536e4:	stp	x28, x27, [sp, #16]
   536e8:	stp	x26, x25, [sp, #32]
   536ec:	stp	x24, x23, [sp, #48]
   536f0:	stp	x22, x21, [sp, #64]
   536f4:	stp	x20, x19, [sp, #80]
   536f8:	mov	x29, sp
   536fc:	sub	sp, sp, #0x850
   53700:	sub	x8, x4, x3
   53704:	mov	x21, x0
   53708:	sub	x19, x1, x0
   5370c:	lsr	x0, x8, #2
   53710:	str	x5, [sp, #24]
   53714:	mov	x23, x4
   53718:	mov	x24, x3
   5371c:	mov	x27, x2
   53720:	mov	x22, x1
   53724:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53728:	sbfx	x8, x19, #2, #32
   5372c:	mov	w25, w0
   53730:	mov	w20, wzr
   53734:	add	x28, sp, #0x48
   53738:	str	x8, [sp, #8]
   5373c:	neg	x8, x8
   53740:	mov	w26, #0xffffffff            	// #-1
   53744:	str	x8, [sp, #16]
   53748:	str	x27, [sp, #40]
   5374c:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53750:	tbnz	w20, #31, 5425c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ef0>
   53754:	cbz	w20, 5421c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4eb0>
   53758:	sxtw	x8, w20
   5375c:	sub	x20, x8, #0x1
   53760:	add	x8, x28, x20, lsl #5
   53764:	ldp	x22, x24, [x8]
   53768:	ldr	x23, [x8, #16]
   5376c:	ldp	w25, w26, [x8, #24]
   53770:	tbnz	w25, #31, 53798 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x442c>
   53774:	sub	x28, x23, x24
   53778:	cmp	x28, #0x24
   5377c:	b.ge	53898 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x452c>  // b.tcont
   53780:	mov	x0, x22
   53784:	mov	x1, x24
   53788:	mov	x2, x23
   5378c:	bl	54a9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5730>
   53790:	mov	w25, #0xfffffffd            	// #-3
   53794:	add	x28, sp, #0x48
   53798:	cmn	w25, #0x2
   5379c:	b.eq	53c30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x48c4>  // b.none
   537a0:	cmn	w25, #0x1
   537a4:	b.ne	5393c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45d0>  // b.any
   537a8:	ldr	x8, [sp, #16]
   537ac:	add	x4, sp, #0x40
   537b0:	add	x5, sp, #0x38
   537b4:	mov	x1, x24
   537b8:	add	x25, x22, x8, lsl #2
   537bc:	sub	x8, x23, x27
   537c0:	lsr	x8, x8, #2
   537c4:	sub	w6, w8, #0x1
   537c8:	mov	x0, x25
   537cc:	mov	x2, x24
   537d0:	mov	x3, x23
   537d4:	add	x19, sp, #0x48
   537d8:	mov	x28, x26
   537dc:	bl	5463c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x52d0>
   537e0:	ldr	x26, [sp, #64]
   537e4:	cmp	x26, x23
   537e8:	b.cs	53814 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44a8>  // b.hs, b.nlast
   537ec:	cmp	x24, x26
   537f0:	b.cs	53814 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44a8>  // b.hs, b.nlast
   537f4:	sub	x8, x26, x27
   537f8:	lsr	x8, x8, #2
   537fc:	sub	w8, w8, #0x1
   53800:	mov	x9, x24
   53804:	ldrsw	x10, [x9], #4
   53808:	cmp	x9, x26
   5380c:	str	w8, [x21, x10, lsl #2]
   53810:	b.cc	53804 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4498>  // b.lo, b.ul, b.last
   53814:	ldr	x27, [sp, #56]
   53818:	cmp	x27, x23
   5381c:	b.cs	5384c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44e0>  // b.hs, b.nlast
   53820:	cmp	x26, x27
   53824:	b.cs	5384c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44e0>  // b.hs, b.nlast
   53828:	ldr	x8, [sp, #40]
   5382c:	mov	x9, x26
   53830:	sub	x8, x27, x8
   53834:	lsr	x8, x8, #2
   53838:	sub	w8, w8, #0x1
   5383c:	ldrsw	x10, [x9], #4
   53840:	cmp	x9, x27
   53844:	str	w8, [x21, x10, lsl #2]
   53848:	b.cc	5383c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x44d0>  // b.lo, b.ul, b.last
   5384c:	ldp	x8, x9, [sp, #56]
   53850:	sub	x10, x8, x9
   53854:	cmp	x10, #0x5
   53858:	b.lt	539bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4650>  // b.tstop
   5385c:	cmp	w20, #0x40
   53860:	b.ge	5427c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f10>  // b.tcont
   53864:	sxtw	x10, w20
   53868:	cmp	w20, #0x3f
   5386c:	add	x10, x19, x10, lsl #5
   53870:	stp	xzr, x9, [x10]
   53874:	stp	x8, xzr, [x10, #16]
   53878:	b.eq	5429c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f30>  // b.none
   5387c:	mov	w11, #0xfffffffe            	// #-2
   53880:	add	w19, w20, #0x2
   53884:	stp	w11, w28, [x10, #56]
   53888:	mov	w28, w20
   5388c:	stp	x25, x24, [x10, #32]
   53890:	str	x23, [x10, #48]
   53894:	b	539c0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4654>
   53898:	str	x26, [sp, #48]
   5389c:	asr	x26, x28, #2
   538a0:	cbz	w25, 53a8c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4720>
   538a4:	mov	x0, x22
   538a8:	mov	x1, x24
   538ac:	mov	x2, x23
   538b0:	str	x20, [sp, #32]
   538b4:	bl	54c44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x58d8>
   538b8:	str	x0, [sp, #64]
   538bc:	ldr	w8, [x0]
   538c0:	ldr	w9, [x24]
   538c4:	mov	x2, x24
   538c8:	add	x4, sp, #0x40
   538cc:	str	w8, [x24]
   538d0:	str	w9, [x0]
   538d4:	ldrsw	x8, [x2], #4
   538d8:	add	x5, sp, #0x38
   538dc:	mov	x0, x22
   538e0:	mov	x1, x24
   538e4:	ldr	w27, [x22, x8, lsl #2]
   538e8:	mov	x3, x23
   538ec:	mov	w6, w27
   538f0:	bl	5463c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x52d0>
   538f4:	ldp	x19, x20, [sp, #56]
   538f8:	sub	x8, x19, x20
   538fc:	cmp	x26, x8, asr #2
   53900:	b.ne	53af4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4788>  // b.any
   53904:	ldr	x0, [sp, #24]
   53908:	lsr	x25, x28, #2
   5390c:	mov	w1, w25
   53910:	bl	54a50 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x56e4>
   53914:	ldr	x26, [sp, #48]
   53918:	cbz	w0, 53ea8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4b3c>
   5391c:	mov	w0, w25
   53920:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53924:	ldr	x8, [sp, #8]
   53928:	ldp	x20, x27, [sp, #32]
   5392c:	mov	w25, w0
   53930:	add	x28, sp, #0x48
   53934:	add	x22, x22, x8, lsl #2
   53938:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   5393c:	ldr	w8, [x24]
   53940:	tbnz	w8, #31, 53978 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x460c>
   53944:	add	x8, x24, #0x4
   53948:	str	x24, [sp, #64]
   5394c:	mov	x24, x8
   53950:	ldrsw	x9, [x8, #-4]!
   53954:	cmp	x24, x23
   53958:	sub	x8, x8, x27
   5395c:	lsr	x8, x8, #2
   53960:	str	w8, [x21, x9, lsl #2]
   53964:	b.cs	53974 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4608>  // b.hs, b.nlast
   53968:	mov	x8, x24
   5396c:	ldr	w9, [x8], #4
   53970:	tbz	w9, #31, 5394c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x45e0>
   53974:	str	x24, [sp, #64]
   53978:	cmp	x24, x23
   5397c:	b.cs	53750 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43e4>  // b.hs, b.nlast
   53980:	mov	x19, x24
   53984:	str	x24, [sp, #64]
   53988:	ldr	w8, [x19]
   5398c:	mvn	w8, w8
   53990:	str	w8, [x19], #4
   53994:	ldrsw	x8, [x19]
   53998:	tbnz	w8, #31, 53988 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x461c>
   5399c:	str	x19, [sp, #64]
   539a0:	lsl	x8, x8, #2
   539a4:	ldr	w9, [x21, x8]
   539a8:	ldr	w8, [x22, x8]
   539ac:	cmp	w9, w8
   539b0:	b.ne	53b54 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47e8>  // b.any
   539b4:	mov	w25, #0xffffffff            	// #-1
   539b8:	b	53b68 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47fc>
   539bc:	mov	w19, w20
   539c0:	sub	x20, x26, x24
   539c4:	asr	x10, x20, #2
   539c8:	sub	x25, x23, x27
   539cc:	cmp	x10, x25, asr #2
   539d0:	b.le	53a30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x46c4>
   539d4:	cmp	x25, #0x5
   539d8:	b.lt	53b0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47a0>  // b.tstop
   539dc:	cmp	w19, #0x40
   539e0:	b.ge	542dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f70>  // b.tcont
   539e4:	sxtw	x8, w19
   539e8:	sub	x10, x9, x24
   539ec:	add	x11, sp, #0x48
   539f0:	add	x20, x11, x8, lsl #5
   539f4:	lsr	x0, x10, #2
   539f8:	stp	x22, x24, [x20]
   539fc:	str	x9, [x20, #16]
   53a00:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53a04:	mov	x26, x28
   53a08:	add	w8, w19, #0x1
   53a0c:	stp	w0, w26, [x20, #24]
   53a10:	lsr	x0, x25, #2
   53a14:	add	x28, sp, #0x48
   53a18:	mov	x20, x8
   53a1c:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53a20:	mov	x24, x27
   53a24:	ldr	x27, [sp, #40]
   53a28:	mov	w25, w0
   53a2c:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53a30:	cmp	x20, #0x5
   53a34:	b.lt	53b28 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47bc>  // b.tstop
   53a38:	cmp	w19, #0x40
   53a3c:	b.ge	542bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f50>  // b.tcont
   53a40:	sxtw	x9, w19
   53a44:	sub	x10, x23, x8
   53a48:	add	x11, sp, #0x48
   53a4c:	add	x25, x11, x9, lsl #5
   53a50:	lsr	x0, x10, #2
   53a54:	stp	x22, x8, [x25]
   53a58:	str	x23, [x25, #16]
   53a5c:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53a60:	add	w8, w19, #0x1
   53a64:	stp	w0, w28, [x25, #24]
   53a68:	lsr	x0, x20, #2
   53a6c:	mov	x20, x8
   53a70:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53a74:	ldr	x27, [sp, #40]
   53a78:	mov	w25, w0
   53a7c:	mov	x23, x26
   53a80:	mov	x26, x28
   53a84:	add	x28, sp, #0x48
   53a88:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53a8c:	mov	x0, x22
   53a90:	mov	x1, x24
   53a94:	mov	w2, w26
   53a98:	sub	x19, x23, #0x4
   53a9c:	bl	54b24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x57b8>
   53aa0:	cmp	x24, x19
   53aa4:	str	x19, [sp, #64]
   53aa8:	b.cs	53c18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x48ac>  // b.hs, b.nlast
   53aac:	ldr	x26, [sp, #48]
   53ab0:	add	x28, sp, #0x48
   53ab4:	b	53ac0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4754>
   53ab8:	cmp	x24, x19
   53abc:	b.cs	53c20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x48b4>  // b.hs, b.nlast
   53ac0:	ldrsw	x8, [x19], #-4
   53ac4:	cmp	x24, x19
   53ac8:	b.hi	53ab8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x474c>  // b.pmore
   53acc:	ldr	w8, [x22, x8, lsl #2]
   53ad0:	ldrsw	x9, [x19]
   53ad4:	ldr	w10, [x22, x9, lsl #2]
   53ad8:	cmp	w10, w8
   53adc:	b.ne	53ab8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x474c>  // b.any
   53ae0:	mvn	w9, w9
   53ae4:	str	w9, [x19], #-4
   53ae8:	cmp	x24, x19
   53aec:	b.ls	53ad0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4764>  // b.plast
   53af0:	b	53ab8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x474c>
   53af4:	ldrsw	x9, [x20]
   53af8:	ldr	w9, [x21, x9, lsl #2]
   53afc:	cmp	w9, w27
   53b00:	b.ne	53cf4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4988>  // b.any
   53b04:	mov	w26, #0xffffffff            	// #-1
   53b08:	b	53d00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4994>
   53b0c:	cmp	x20, #0x5
   53b10:	b.lt	53f04 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4b98>  // b.tstop
   53b14:	lsr	x0, x20, #2
   53b18:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53b1c:	mov	w25, w0
   53b20:	mov	x23, x26
   53b24:	b	53b40 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x47d4>
   53b28:	cmp	x25, #0x5
   53b2c:	b.lt	53f18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4bac>  // b.tstop
   53b30:	lsr	x0, x25, #2
   53b34:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53b38:	mov	w25, w0
   53b3c:	mov	x24, x27
   53b40:	ldr	x27, [sp, #40]
   53b44:	mov	w20, w19
   53b48:	mov	x26, x28
   53b4c:	add	x28, sp, #0x48
   53b50:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53b54:	sub	x8, x19, x24
   53b58:	lsr	x8, x8, #2
   53b5c:	add	w0, w8, #0x1
   53b60:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53b64:	mov	w25, w0
   53b68:	add	x8, x19, #0x4
   53b6c:	cmp	x8, x23
   53b70:	str	x8, [sp, #64]
   53b74:	b.cs	53bac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4840>  // b.hs, b.nlast
   53b78:	cmp	x24, x8
   53b7c:	str	x24, [sp, #56]
   53b80:	b.cs	53bac <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4840>  // b.hs, b.nlast
   53b84:	ldr	x9, [sp, #64]
   53b88:	sub	x9, x9, x27
   53b8c:	lsr	x9, x9, #2
   53b90:	sub	w10, w9, #0x1
   53b94:	mov	x9, x24
   53b98:	ldrsw	x11, [x9], #4
   53b9c:	cmp	x9, x8
   53ba0:	str	w10, [x21, x11, lsl #2]
   53ba4:	b.cc	53b98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x482c>  // b.lo, b.ul, b.last
   53ba8:	str	x9, [sp, #56]
   53bac:	ldr	x8, [sp, #64]
   53bb0:	ldr	x0, [sp, #24]
   53bb4:	sub	x8, x8, x24
   53bb8:	lsr	x1, x8, #2
   53bbc:	bl	54a50 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x56e4>
   53bc0:	cbz	w0, 53cc4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4958>
   53bc4:	ldr	x8, [sp, #64]
   53bc8:	sub	x10, x8, x24
   53bcc:	sub	x9, x23, x8
   53bd0:	cmp	x10, x9
   53bd4:	b.le	53e70 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4b04>
   53bd8:	cmp	x9, #0x5
   53bdc:	b.lt	53e98 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4b2c>  // b.tstop
   53be0:	cmp	w20, #0x40
   53be4:	b.ge	542fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4f90>  // b.tcont
   53be8:	ldr	x9, [sp, #8]
   53bec:	ldr	x11, [sp, #64]
   53bf0:	sxtw	x10, w20
   53bf4:	add	x10, x28, x10, lsl #5
   53bf8:	add	x9, x22, x9, lsl #2
   53bfc:	add	w20, w20, #0x1
   53c00:	stp	x9, x24, [x10]
   53c04:	stp	w25, w26, [x10, #24]
   53c08:	str	x11, [x10, #16]
   53c0c:	mov	w25, #0xfffffffd            	// #-3
   53c10:	mov	x24, x8
   53c14:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53c18:	ldr	x26, [sp, #48]
   53c1c:	b	53790 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4424>
   53c20:	mov	w25, #0xfffffffd            	// #-3
   53c24:	stp	x19, x19, [sp, #56]
   53c28:	cmn	w25, #0x2
   53c2c:	b.ne	537a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4434>  // b.any
   53c30:	sxtw	x19, w20
   53c34:	mov	x25, x20
   53c38:	sub	x20, x19, #0x1
   53c3c:	add	x8, x28, x20, lsl #5
   53c40:	ldp	x9, x4, [x8, #8]
   53c44:	ldr	w8, [x8, #24]
   53c48:	stp	x4, x9, [sp, #56]
   53c4c:	cbz	w8, 53c90 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4924>
   53c50:	tbnz	w26, #31, 53c64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x48f8>
   53c54:	sxtw	x8, w26
   53c58:	add	x8, x28, x8, lsl #5
   53c5c:	mov	w9, #0xffffffff            	// #-1
   53c60:	str	w9, [x8, #24]
   53c64:	ldr	x3, [sp, #64]
   53c68:	sub	x8, x22, x21
   53c6c:	lsr	x6, x8, #2
   53c70:	mov	x0, x21
   53c74:	mov	x1, x27
   53c78:	mov	x2, x24
   53c7c:	mov	x5, x23
   53c80:	bl	54930 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x55c4>
   53c84:	cmp	w25, #0x0
   53c88:	b.gt	53cb8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x494c>
   53c8c:	b	5423c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ed0>
   53c90:	ldr	x3, [sp, #64]
   53c94:	sub	x8, x22, x21
   53c98:	lsr	x6, x8, #2
   53c9c:	mov	x0, x21
   53ca0:	mov	x1, x27
   53ca4:	mov	x2, x24
   53ca8:	mov	x5, x23
   53cac:	bl	54890 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5524>
   53cb0:	cmp	w25, #0x0
   53cb4:	b.le	5423c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ed0>
   53cb8:	cbz	w20, 5421c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4eb0>
   53cbc:	sub	x20, x19, #0x2
   53cc0:	b	53760 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43f4>
   53cc4:	tbnz	w26, #31, 53cd8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x496c>
   53cc8:	sxtw	x8, w26
   53ccc:	add	x8, x28, x8, lsl #5
   53cd0:	mov	w9, #0xffffffff            	// #-1
   53cd4:	str	w9, [x8, #24]
   53cd8:	ldr	x24, [sp, #64]
   53cdc:	mov	w25, #0xfffffffd            	// #-3
   53ce0:	sub	x8, x23, x24
   53ce4:	cmp	x8, #0x4
   53ce8:	b.gt	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53cec:	tbz	w20, #31, 53754 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43e8>
   53cf0:	b	5431c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4fb0>
   53cf4:	lsr	x0, x8, #2
   53cf8:	bl	53670 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4304>
   53cfc:	mov	w26, w0
   53d00:	ldr	x27, [sp, #40]
   53d04:	ldr	x8, [sp, #64]
   53d08:	add	x28, sp, #0x48
   53d0c:	cmp	x24, x20
   53d10:	b.cs	53d34 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49c8>  // b.hs, b.nlast
   53d14:	sub	x9, x8, x27
   53d18:	lsr	x9, x9, #2
   53d1c:	sub	w9, w9, #0x1
   53d20:	mov	x10, x24
   53d24:	ldrsw	x11, [x10], #4
   53d28:	cmp	x10, x20
   53d2c:	str	w9, [x21, x11, lsl #2]
   53d30:	b.cc	53d24 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49b8>  // b.lo, b.ul, b.last
   53d34:	ldr	x9, [sp, #56]
   53d38:	cmp	x9, x23
   53d3c:	b.cs	53d64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49f8>  // b.hs, b.nlast
   53d40:	cmp	x20, x9
   53d44:	b.cs	53d64 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49f8>  // b.hs, b.nlast
   53d48:	sub	x10, x9, x27
   53d4c:	lsr	x10, x10, #2
   53d50:	sub	w10, w10, #0x1
   53d54:	ldrsw	x11, [x20], #4
   53d58:	cmp	x20, x9
   53d5c:	str	w10, [x21, x11, lsl #2]
   53d60:	b.cc	53d54 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x49e8>  // b.lo, b.ul, b.last
   53d64:	sub	x8, x19, x8
   53d68:	cmp	x8, #0x5
   53d6c:	sub	w25, w25, #0x1
   53d70:	b.lt	53e00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4a94>  // b.tstop
   53d74:	ldr	x0, [sp, #24]
   53d78:	lsr	x1, x8, #2
   53d7c:	bl	54a50 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x56e4>
   53d80:	cbz	w0, 53e00 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4a94>
   53d84:	ldp	x9, x8, [sp, #56]
   53d88:	ldr	x20, [sp, #32]
   53d8c:	sub	x10, x8, x24
   53d90:	sub	x11, x23, x9
   53d94:	asr	x12, x10, #2
   53d98:	asr	x14, x11, #2
   53d9c:	sub	x13, x9, x8
   53da0:	cmp	x12, x14
   53da4:	asr	x13, x13, #2
   53da8:	b.le	53f58 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4bec>
   53dac:	cmp	x12, x13
   53db0:	b.le	53fa8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4c3c>
   53db4:	cmp	x14, x13
   53db8:	b.le	54058 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4cec>
   53dbc:	cmp	w20, #0x40
   53dc0:	b.ge	5433c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4fd0>  // b.tcont
   53dc4:	ldr	x11, [sp, #64]
   53dc8:	ldr	x12, [sp, #48]
   53dcc:	sxtw	x10, w20
   53dd0:	cmp	w20, #0x3f
   53dd4:	add	x10, x28, x10, lsl #5
   53dd8:	stp	x22, x24, [x10]
   53ddc:	str	x11, [x10, #16]
   53de0:	stp	w25, w12, [x10, #24]
   53de4:	b.eq	5435c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ff0>  // b.none
   53de8:	ldr	x11, [sp, #56]
   53dec:	add	w20, w20, #0x2
   53df0:	stp	w25, w12, [x10, #56]
   53df4:	str	x22, [x10, #32]
   53df8:	stp	x11, x23, [x10, #40]
   53dfc:	b	54200 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e94>
   53e00:	ldp	x8, x9, [sp, #56]
   53e04:	ldr	x20, [sp, #32]
   53e08:	ldr	x26, [sp, #48]
   53e0c:	tbnz	w26, #31, 53e2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ac0>
   53e10:	sub	x10, x8, x9
   53e14:	cmp	x10, #0x5
   53e18:	b.lt	53e2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4ac0>  // b.tstop
   53e1c:	sxtw	x10, w26
   53e20:	add	x10, x28, x10, lsl #5
   53e24:	mov	w11, #0xffffffff            	// #-1
   53e28:	str	w11, [x10, #24]
   53e2c:	ldp	x11, x10, [sp, #56]
   53e30:	sub	x12, x10, x24
   53e34:	sub	x13, x23, x11
   53e38:	cmp	x12, x13
   53e3c:	b.le	53ed4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4b68>
   53e40:	cmp	x13, #0x5
   53e44:	b.lt	53f30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4bc4>  // b.tstop
   53e48:	cmp	w20, #0x40
   53e4c:	b.ge	5437c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5010>  // b.tcont
   53e50:	sxtw	x8, w20
   53e54:	add	x8, x28, x8, lsl #5
   53e58:	add	w20, w20, #0x1
   53e5c:	stp	x22, x24, [x8]
   53e60:	str	x9, [x8, #16]
   53e64:	stp	w25, w26, [x8, #24]
   53e68:	mov	x24, x11
   53e6c:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53e70:	cmp	w20, #0x40
   53e74:	b.ge	5439c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5030>  // b.tcont
   53e78:	ldr	x10, [sp, #64]
   53e7c:	sxtw	x9, w20
   53e80:	add	w20, w20, #0x1
   53e84:	add	x9, x28, x9, lsl #5
   53e88:	mov	w11, #0xfffffffd            	// #-3
   53e8c:	stp	x10, x23, [x9, #8]
   53e90:	stp	w11, w26, [x9, #24]
   53e94:	str	x22, [x9]
   53e98:	ldr	x9, [sp, #8]
   53e9c:	mov	x23, x8
   53ea0:	add	x22, x22, x9, lsl #2
   53ea4:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53ea8:	ldp	x10, x27, [sp, #32]
   53eac:	add	x28, sp, #0x48
   53eb0:	tbnz	w26, #31, 53ec4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4b58>
   53eb4:	sxtw	x8, w26
   53eb8:	add	x8, x28, x8, lsl #5
   53ebc:	mov	w9, #0xffffffff            	// #-1
   53ec0:	str	w9, [x8, #24]
   53ec4:	tbnz	w10, #31, 543bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5050>
   53ec8:	cbz	w10, 5421c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4eb0>
   53ecc:	sxtw	x8, w10
   53ed0:	b	5375c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43f0>
   53ed4:	cmp	x12, #0x5
   53ed8:	b.lt	53f44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4bd8>  // b.tstop
   53edc:	cmp	w20, #0x40
   53ee0:	b.ge	543dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5070>  // b.tcont
   53ee4:	sxtw	x9, w20
   53ee8:	add	x9, x28, x9, lsl #5
   53eec:	add	w20, w20, #0x1
   53ef0:	stp	x22, x8, [x9]
   53ef4:	str	x23, [x9, #16]
   53ef8:	stp	w25, w26, [x9, #24]
   53efc:	mov	x23, x10
   53f00:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53f04:	ldr	x27, [sp, #40]
   53f08:	tbnz	w19, #31, 543fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5090>
   53f0c:	add	x28, sp, #0x48
   53f10:	cbnz	w19, 53f28 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4bbc>
   53f14:	b	5421c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4eb0>
   53f18:	tbnz	w19, #31, 5441c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x50b0>
   53f1c:	ldr	x27, [sp, #40]
   53f20:	add	x28, sp, #0x48
   53f24:	cbz	w19, 5421c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4eb0>
   53f28:	sxtw	x8, w19
   53f2c:	b	5375c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43f0>
   53f30:	cmp	x12, #0x4
   53f34:	mov	x23, x10
   53f38:	b.gt	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53f3c:	tbz	w20, #31, 53754 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43e8>
   53f40:	b	5443c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x50d0>
   53f44:	cmp	x13, #0x4
   53f48:	mov	x24, x11
   53f4c:	b.gt	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   53f50:	tbz	w20, #31, 53754 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x43e8>
   53f54:	b	5445c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x50f0>
   53f58:	cmp	x14, x13
   53f5c:	b.le	54000 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4c94>
   53f60:	cmp	x12, x13
   53f64:	b.le	540b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4d48>
   53f68:	cmp	w20, #0x40
   53f6c:	b.ge	5447c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5110>  // b.tcont
   53f70:	ldp	x12, x11, [sp, #48]
   53f74:	sxtw	x10, w20
   53f78:	cmp	w20, #0x3f
   53f7c:	add	x10, x28, x10, lsl #5
   53f80:	stp	x11, x23, [x10, #8]
   53f84:	str	x22, [x10]
   53f88:	stp	w25, w12, [x10, #24]
   53f8c:	b.eq	5449c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5130>  // b.none
   53f90:	ldr	x11, [sp, #64]
   53f94:	add	w20, w20, #0x2
   53f98:	stp	x22, x24, [x10, #32]
   53f9c:	stp	w25, w12, [x10, #56]
   53fa0:	str	x11, [x10, #48]
   53fa4:	b	54200 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e94>
   53fa8:	cmp	x11, #0x5
   53fac:	b.lt	5410c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4da0>  // b.tstop
   53fb0:	cmp	w20, #0x40
   53fb4:	b.ge	544bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5150>  // b.tcont
   53fb8:	ldr	x8, [sp, #8]
   53fbc:	sxtw	x10, w20
   53fc0:	add	x10, x28, x10, lsl #5
   53fc4:	str	w26, [x10, #24]
   53fc8:	add	x11, x22, x8, lsl #2
   53fcc:	ldp	x12, x8, [sp, #56]
   53fd0:	ldr	x26, [sp, #48]
   53fd4:	cmp	w20, #0x3f
   53fd8:	stp	x11, x8, [x10]
   53fdc:	str	x12, [x10, #16]
   53fe0:	str	w26, [x10, #28]
   53fe4:	b.eq	544dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5170>  // b.none
   53fe8:	stp	x22, x24, [x10, #32]
   53fec:	str	x8, [x10, #48]
   53ff0:	add	w20, w20, #0x2
   53ff4:	stp	w25, w26, [x10, #56]
   53ff8:	mov	x24, x9
   53ffc:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   54000:	cmp	x10, #0x5
   54004:	b.lt	54150 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4de4>  // b.tstop
   54008:	cmp	w20, #0x40
   5400c:	b.ge	544fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5190>  // b.tcont
   54010:	ldr	x9, [sp, #8]
   54014:	ldp	x10, x12, [sp, #56]
   54018:	cmp	w20, #0x3f
   5401c:	add	x11, x22, x9, lsl #2
   54020:	sxtw	x9, w20
   54024:	add	x9, x28, x9, lsl #5
   54028:	str	w26, [x9, #24]
   5402c:	ldr	x26, [sp, #48]
   54030:	stp	x11, x12, [x9]
   54034:	str	x10, [x9, #16]
   54038:	str	w26, [x9, #28]
   5403c:	b.eq	5451c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x51b0>  // b.none
   54040:	stp	x22, x10, [x9, #32]
   54044:	str	x23, [x9, #48]
   54048:	add	w20, w20, #0x2
   5404c:	stp	w25, w26, [x9, #56]
   54050:	mov	x23, x8
   54054:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   54058:	cmp	x11, #0x5
   5405c:	b.lt	541b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e44>  // b.tstop
   54060:	cmp	w20, #0x40
   54064:	b.ge	5453c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x51d0>  // b.tcont
   54068:	ldr	x8, [sp, #64]
   5406c:	ldr	x13, [sp, #48]
   54070:	sxtw	x10, w20
   54074:	cmp	w20, #0x3f
   54078:	add	x10, x28, x10, lsl #5
   5407c:	stp	x22, x24, [x10]
   54080:	str	x8, [x10, #16]
   54084:	stp	w25, w13, [x10, #24]
   54088:	b.eq	5455c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x51f0>  // b.none
   5408c:	ldr	x11, [sp, #8]
   54090:	ldr	x12, [sp, #56]
   54094:	add	w20, w20, #0x2
   54098:	stp	w26, w13, [x10, #56]
   5409c:	add	x11, x22, x11, lsl #2
   540a0:	stp	x11, x8, [x10, #32]
   540a4:	str	x12, [x10, #48]
   540a8:	mov	x24, x9
   540ac:	mov	x26, x13
   540b0:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   540b4:	cmp	x10, #0x5
   540b8:	b.lt	541dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e70>  // b.tstop
   540bc:	cmp	w20, #0x40
   540c0:	b.ge	5457c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5210>  // b.tcont
   540c4:	ldp	x13, x9, [sp, #48]
   540c8:	sxtw	x10, w20
   540cc:	cmp	w20, #0x3f
   540d0:	add	x10, x28, x10, lsl #5
   540d4:	stp	x9, x23, [x10, #8]
   540d8:	str	x22, [x10]
   540dc:	stp	w25, w13, [x10, #24]
   540e0:	b.eq	5459c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5230>  // b.none
   540e4:	ldr	x11, [sp, #8]
   540e8:	ldr	x12, [sp, #64]
   540ec:	add	w20, w20, #0x2
   540f0:	stp	w26, w13, [x10, #56]
   540f4:	add	x11, x22, x11, lsl #2
   540f8:	stp	x12, x9, [x10, #40]
   540fc:	str	x11, [x10, #32]
   54100:	mov	x23, x8
   54104:	mov	x26, x13
   54108:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   5410c:	cmp	x10, #0x5
   54110:	b.lt	54194 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e28>  // b.tstop
   54114:	cmp	w20, #0x40
   54118:	b.ge	545bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5250>  // b.tcont
   5411c:	sxtw	x10, w20
   54120:	ldr	x9, [sp, #8]
   54124:	add	x10, x28, x10, lsl #5
   54128:	ldp	x12, x11, [sp, #56]
   5412c:	str	w26, [x10, #24]
   54130:	ldr	x26, [sp, #48]
   54134:	add	x9, x22, x9, lsl #2
   54138:	add	w20, w20, #0x1
   5413c:	stp	x9, x11, [x10]
   54140:	str	x12, [x10, #16]
   54144:	str	w26, [x10, #28]
   54148:	mov	x23, x8
   5414c:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   54150:	cmp	x11, #0x5
   54154:	b.lt	54194 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e28>  // b.tstop
   54158:	cmp	w20, #0x40
   5415c:	b.ge	545dc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5270>  // b.tcont
   54160:	sxtw	x10, w20
   54164:	ldr	x8, [sp, #8]
   54168:	add	x10, x28, x10, lsl #5
   5416c:	ldp	x12, x11, [sp, #56]
   54170:	str	w26, [x10, #24]
   54174:	ldr	x26, [sp, #48]
   54178:	add	x8, x22, x8, lsl #2
   5417c:	add	w20, w20, #0x1
   54180:	stp	x8, x11, [x10]
   54184:	str	x12, [x10, #16]
   54188:	str	w26, [x10, #28]
   5418c:	mov	x24, x9
   54190:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   54194:	ldr	x10, [sp, #8]
   54198:	mov	w25, w26
   5419c:	ldr	x26, [sp, #48]
   541a0:	mov	x23, x9
   541a4:	add	x22, x22, x10, lsl #2
   541a8:	mov	x24, x8
   541ac:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   541b0:	cmp	w20, #0x40
   541b4:	b.ge	545fc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5290>  // b.tcont
   541b8:	ldr	x11, [sp, #64]
   541bc:	ldr	x12, [sp, #48]
   541c0:	sxtw	x10, w20
   541c4:	add	x10, x28, x10, lsl #5
   541c8:	add	w20, w20, #0x1
   541cc:	stp	x22, x24, [x10]
   541d0:	stp	w25, w12, [x10, #24]
   541d4:	str	x11, [x10, #16]
   541d8:	b	54200 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4e94>
   541dc:	cmp	w20, #0x40
   541e0:	b.ge	5461c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x52b0>  // b.tcont
   541e4:	ldp	x12, x11, [sp, #48]
   541e8:	sxtw	x10, w20
   541ec:	add	x10, x28, x10, lsl #5
   541f0:	add	w20, w20, #0x1
   541f4:	stp	x11, x23, [x10, #8]
   541f8:	stp	w25, w12, [x10, #24]
   541fc:	str	x22, [x10]
   54200:	ldr	x10, [sp, #8]
   54204:	mov	x23, x9
   54208:	mov	x24, x8
   5420c:	mov	w25, w26
   54210:	add	x22, x22, x10, lsl #2
   54214:	mov	x26, x12
   54218:	b	53770 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x4404>
   5421c:	add	sp, sp, #0x850
   54220:	ldp	x20, x19, [sp, #80]
   54224:	ldp	x22, x21, [sp, #64]
   54228:	ldp	x24, x23, [sp, #48]
   5422c:	ldp	x26, x25, [sp, #32]
   54230:	ldp	x28, x27, [sp, #16]
   54234:	ldp	x29, x30, [sp], #96
   54238:	ret
   5423c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54240:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54244:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54248:	add	x0, x0, #0x9f4
   5424c:	add	x1, x1, #0x9ff
   54250:	add	x3, x3, #0xad1
   54254:	mov	w2, #0x4d4                 	// #1236
   54258:	bl	4a40 <__assert_fail@plt>
   5425c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54260:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54264:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54268:	add	x0, x0, #0x9f4
   5426c:	add	x1, x1, #0x9ff
   54270:	add	x3, x3, #0xad1
   54274:	mov	w2, #0x4f7                 	// #1271
   54278:	bl	4a40 <__assert_fail@plt>
   5427c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54280:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54284:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54288:	add	x0, x0, #0xa62
   5428c:	add	x1, x1, #0x9ff
   54290:	add	x3, x3, #0xad1
   54294:	mov	w2, #0x4b4                 	// #1204
   54298:	bl	4a40 <__assert_fail@plt>
   5429c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542a0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542a4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542a8:	add	x0, x0, #0xa62
   542ac:	add	x1, x1, #0x9ff
   542b0:	add	x3, x3, #0xad1
   542b4:	mov	w2, #0x4b5                 	// #1205
   542b8:	bl	4a40 <__assert_fail@plt>
   542bc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542c0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542c4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542c8:	add	x0, x0, #0xa62
   542cc:	add	x1, x1, #0x9ff
   542d0:	add	x3, x3, #0xad1
   542d4:	mov	w2, #0x4ba                 	// #1210
   542d8:	bl	4a40 <__assert_fail@plt>
   542dc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542e0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542e4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   542e8:	add	x0, x0, #0xa62
   542ec:	add	x1, x1, #0x9ff
   542f0:	add	x3, x3, #0xad1
   542f4:	mov	w2, #0x4c3                 	// #1219
   542f8:	bl	4a40 <__assert_fail@plt>
   542fc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54300:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54304:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54308:	add	x0, x0, #0xa62
   5430c:	add	x1, x1, #0x9ff
   54310:	add	x3, x3, #0xad1
   54314:	mov	w2, #0x4e8                 	// #1256
   54318:	bl	4a40 <__assert_fail@plt>
   5431c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54320:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54324:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54328:	add	x0, x0, #0x9f4
   5432c:	add	x1, x1, #0x9ff
   54330:	add	x3, x3, #0xad1
   54334:	mov	w2, #0x4f3                 	// #1267
   54338:	bl	4a40 <__assert_fail@plt>
   5433c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54340:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54344:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54348:	add	x0, x0, #0xa62
   5434c:	add	x1, x1, #0x9ff
   54350:	add	x3, x3, #0xad1
   54354:	mov	w2, #0x54c                 	// #1356
   54358:	bl	4a40 <__assert_fail@plt>
   5435c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54360:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54364:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54368:	add	x0, x0, #0xa62
   5436c:	add	x1, x1, #0x9ff
   54370:	add	x3, x3, #0xad1
   54374:	mov	w2, #0x54d                 	// #1357
   54378:	bl	4a40 <__assert_fail@plt>
   5437c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54380:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54384:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54388:	add	x0, x0, #0xa62
   5438c:	add	x1, x1, #0x9ff
   54390:	add	x3, x3, #0xad1
   54394:	mov	w2, #0x55e                 	// #1374
   54398:	bl	4a40 <__assert_fail@plt>
   5439c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543a0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543a4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543a8:	add	x0, x0, #0xa62
   543ac:	add	x1, x1, #0x9ff
   543b0:	add	x3, x3, #0xad1
   543b4:	mov	w2, #0x4e4                 	// #1252
   543b8:	bl	4a40 <__assert_fail@plt>
   543bc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543c0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543c4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543c8:	add	x0, x0, #0x9f4
   543cc:	add	x1, x1, #0x9ff
   543d0:	add	x3, x3, #0xad1
   543d4:	mov	w2, #0x56c                 	// #1388
   543d8:	bl	4a40 <__assert_fail@plt>
   543dc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543e0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543e4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   543e8:	add	x0, x0, #0xa62
   543ec:	add	x1, x1, #0x9ff
   543f0:	add	x3, x3, #0xad1
   543f4:	mov	w2, #0x555                 	// #1365
   543f8:	bl	4a40 <__assert_fail@plt>
   543fc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54400:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54404:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54408:	add	x0, x0, #0x9f4
   5440c:	add	x1, x1, #0x9ff
   54410:	add	x3, x3, #0xad1
   54414:	mov	w2, #0x4c8                 	// #1224
   54418:	bl	4a40 <__assert_fail@plt>
   5441c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54420:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54424:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54428:	add	x0, x0, #0x9f4
   5442c:	add	x1, x1, #0x9ff
   54430:	add	x3, x3, #0xad1
   54434:	mov	w2, #0x4bf                 	// #1215
   54438:	bl	4a40 <__assert_fail@plt>
   5443c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54440:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54444:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54448:	add	x0, x0, #0x9f4
   5444c:	add	x1, x1, #0x9ff
   54450:	add	x3, x3, #0xad1
   54454:	mov	w2, #0x563                 	// #1379
   54458:	bl	4a40 <__assert_fail@plt>
   5445c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54460:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54464:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54468:	add	x0, x0, #0x9f4
   5446c:	add	x1, x1, #0x9ff
   54470:	add	x3, x3, #0xad1
   54474:	mov	w2, #0x55a                 	// #1370
   54478:	bl	4a40 <__assert_fail@plt>
   5447c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54480:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54484:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54488:	add	x0, x0, #0xa62
   5448c:	add	x1, x1, #0x9ff
   54490:	add	x3, x3, #0xad1
   54494:	mov	w2, #0x532                 	// #1330
   54498:	bl	4a40 <__assert_fail@plt>
   5449c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544a0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544a4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544a8:	add	x0, x0, #0xa62
   544ac:	add	x1, x1, #0x9ff
   544b0:	add	x3, x3, #0xad1
   544b4:	mov	w2, #0x533                 	// #1331
   544b8:	bl	4a40 <__assert_fail@plt>
   544bc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544c0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544c4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544c8:	add	x0, x0, #0xa62
   544cc:	add	x1, x1, #0x9ff
   544d0:	add	x3, x3, #0xad1
   544d4:	mov	w2, #0x539                 	// #1337
   544d8:	bl	4a40 <__assert_fail@plt>
   544dc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544e0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544e4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   544e8:	add	x0, x0, #0xa62
   544ec:	add	x1, x1, #0x9ff
   544f0:	add	x3, x3, #0xad1
   544f4:	mov	w2, #0x53a                 	// #1338
   544f8:	bl	4a40 <__assert_fail@plt>
   544fc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54500:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54504:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54508:	add	x0, x0, #0xa62
   5450c:	add	x1, x1, #0x9ff
   54510:	add	x3, x3, #0xad1
   54514:	mov	w2, #0x51f                 	// #1311
   54518:	bl	4a40 <__assert_fail@plt>
   5451c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54520:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54524:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54528:	add	x0, x0, #0xa62
   5452c:	add	x1, x1, #0x9ff
   54530:	add	x3, x3, #0xad1
   54534:	mov	w2, #0x520                 	// #1312
   54538:	bl	4a40 <__assert_fail@plt>
   5453c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54540:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54544:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54548:	add	x0, x0, #0xa62
   5454c:	add	x1, x1, #0x9ff
   54550:	add	x3, x3, #0xad1
   54554:	mov	w2, #0x544                 	// #1348
   54558:	bl	4a40 <__assert_fail@plt>
   5455c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54560:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54564:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54568:	add	x0, x0, #0xa62
   5456c:	add	x1, x1, #0x9ff
   54570:	add	x3, x3, #0xad1
   54574:	mov	w2, #0x545                 	// #1349
   54578:	bl	4a40 <__assert_fail@plt>
   5457c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54580:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54584:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54588:	add	x0, x0, #0xa62
   5458c:	add	x1, x1, #0x9ff
   54590:	add	x3, x3, #0xad1
   54594:	mov	w2, #0x52a                 	// #1322
   54598:	bl	4a40 <__assert_fail@plt>
   5459c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545a0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545a4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545a8:	add	x0, x0, #0xa62
   545ac:	add	x1, x1, #0x9ff
   545b0:	add	x3, x3, #0xad1
   545b4:	mov	w2, #0x52b                 	// #1323
   545b8:	bl	4a40 <__assert_fail@plt>
   545bc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545c0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545c4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545c8:	add	x0, x0, #0xa62
   545cc:	add	x1, x1, #0x9ff
   545d0:	add	x3, x3, #0xad1
   545d4:	mov	w2, #0x53d                 	// #1341
   545d8:	bl	4a40 <__assert_fail@plt>
   545dc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545e0:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545e4:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   545e8:	add	x0, x0, #0xa62
   545ec:	add	x1, x1, #0x9ff
   545f0:	add	x3, x3, #0xad1
   545f4:	mov	w2, #0x523                 	// #1315
   545f8:	bl	4a40 <__assert_fail@plt>
   545fc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54600:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54604:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54608:	add	x0, x0, #0xa62
   5460c:	add	x1, x1, #0x9ff
   54610:	add	x3, x3, #0xad1
   54614:	mov	w2, #0x548                 	// #1352
   54618:	bl	4a40 <__assert_fail@plt>
   5461c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54620:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54624:	adrp	x3, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54628:	add	x0, x0, #0xa62
   5462c:	add	x1, x1, #0x9ff
   54630:	add	x3, x3, #0xad1
   54634:	mov	w2, #0x52e                 	// #1326
   54638:	bl	4a40 <__assert_fail@plt>
   5463c:	cmp	x2, x3
   54640:	cset	w8, cc  // cc = lo, ul, last
   54644:	b.cs	54684 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5318>  // b.hs, b.nlast
   54648:	ldrsw	x9, [x2]
   5464c:	ldr	w10, [x0, x9, lsl #2]
   54650:	cmp	w10, w6
   54654:	b.ne	54688 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x531c>  // b.any
   54658:	add	x9, x2, #0x4
   5465c:	cmp	x9, x3
   54660:	mov	x2, x9
   54664:	cset	w8, cc  // cc = lo, ul, last
   54668:	b.cs	54688 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x531c>  // b.hs, b.nlast
   5466c:	mov	x9, x2
   54670:	ldrsw	x10, [x9], #4
   54674:	ldr	w10, [x0, x10, lsl #2]
   54678:	cmp	w10, w6
   5467c:	b.eq	5465c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x52f0>  // b.none
   54680:	b	54688 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x531c>
   54684:	mov	w10, wzr
   54688:	cbz	w8, 546cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5360>
   5468c:	cmp	w10, w6
   54690:	b.ge	546cc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5360>  // b.tcont
   54694:	add	x8, x2, #0x4
   54698:	b	546a0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5334>
   5469c:	add	x8, x8, #0x4
   546a0:	cmp	x8, x3
   546a4:	b.cs	546d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5364>  // b.hs, b.nlast
   546a8:	ldrsw	x9, [x8]
   546ac:	ldr	w10, [x0, x9, lsl #2]
   546b0:	cmp	w10, w6
   546b4:	b.gt	546d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5364>
   546b8:	b.ne	5469c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5330>  // b.any
   546bc:	ldr	w11, [x2]
   546c0:	str	w11, [x8]
   546c4:	str	w9, [x2], #4
   546c8:	b	5469c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5330>
   546cc:	mov	x8, x2
   546d0:	sub	x9, x3, #0x4
   546d4:	cmp	x8, x9
   546d8:	cset	w11, cc  // cc = lo, ul, last
   546dc:	b.cs	54718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53ac>  // b.hs, b.nlast
   546e0:	ldrsw	x10, [x9]
   546e4:	ldr	w10, [x0, x10, lsl #2]
   546e8:	cmp	w10, w6
   546ec:	b.ne	54718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53ac>  // b.any
   546f0:	sub	x12, x3, #0x8
   546f4:	cmp	x8, x12
   546f8:	mov	x9, x12
   546fc:	cset	w11, cc  // cc = lo, ul, last
   54700:	b.cs	54718 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53ac>  // b.hs, b.nlast
   54704:	mov	x12, x9
   54708:	ldrsw	x10, [x12], #-4
   5470c:	ldr	w10, [x0, x10, lsl #2]
   54710:	cmp	w10, w6
   54714:	b.eq	546f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5388>  // b.none
   54718:	cbz	w11, 5475c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53f0>
   5471c:	cmp	w10, w6
   54720:	b.le	5475c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53f0>
   54724:	sub	x10, x9, #0x4
   54728:	b	54730 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53c4>
   5472c:	sub	x10, x10, #0x4
   54730:	cmp	x8, x10
   54734:	b.cs	54760 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53f4>  // b.hs, b.nlast
   54738:	ldrsw	x11, [x10]
   5473c:	ldr	w12, [x0, x11, lsl #2]
   54740:	cmp	w12, w6
   54744:	b.lt	54760 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53f4>  // b.tstop
   54748:	b.ne	5472c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53c0>  // b.any
   5474c:	ldr	w12, [x9]
   54750:	str	w12, [x10]
   54754:	str	w11, [x9], #-4
   54758:	b	5472c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53c0>
   5475c:	mov	x10, x9
   54760:	cmp	x8, x10
   54764:	b.cs	547e0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5474>  // b.hs, b.nlast
   54768:	ldr	w11, [x10]
   5476c:	ldr	w12, [x8]
   54770:	str	w11, [x8], #4
   54774:	cmp	x8, x10
   54778:	str	w12, [x10]
   5477c:	b.cc	547bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5450>  // b.lo, b.ul, b.last
   54780:	sub	x10, x10, #0x4
   54784:	cmp	x8, x10
   54788:	b.cs	54760 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53f4>  // b.hs, b.nlast
   5478c:	ldrsw	x11, [x10]
   54790:	ldr	w12, [x0, x11, lsl #2]
   54794:	cmp	w12, w6
   54798:	b.lt	54760 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x53f4>  // b.tstop
   5479c:	b.ne	54780 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5414>  // b.any
   547a0:	ldr	w12, [x9]
   547a4:	str	w12, [x10]
   547a8:	str	w11, [x9], #-4
   547ac:	b	54780 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5414>
   547b0:	add	x8, x8, #0x4
   547b4:	cmp	x8, x10
   547b8:	b.cs	54780 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5414>  // b.hs, b.nlast
   547bc:	ldrsw	x11, [x8]
   547c0:	ldr	w12, [x0, x11, lsl #2]
   547c4:	cmp	w12, w6
   547c8:	b.gt	54780 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5414>
   547cc:	b.ne	547b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5444>  // b.any
   547d0:	ldr	w12, [x2]
   547d4:	str	w12, [x8]
   547d8:	str	w11, [x2], #4
   547dc:	b	547b0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5444>
   547e0:	cmp	x2, x9
   547e4:	b.hi	54884 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5518>  // b.pmore
   547e8:	sub	x10, x2, x1
   547ec:	sub	x11, x8, x2
   547f0:	lsr	x12, x10, #2
   547f4:	asr	x10, x11, #2
   547f8:	cmp	w12, w10
   547fc:	csel	w13, w10, w12, gt
   54800:	cmp	w13, #0x1
   54804:	sub	x11, x8, #0x4
   54808:	b.lt	54834 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x54c8>  // b.tstop
   5480c:	sub	x12, x8, w13, sxtw #2
   54810:	add	w13, w13, #0x1
   54814:	mov	x14, x1
   54818:	ldr	w15, [x12]
   5481c:	ldr	w16, [x14]
   54820:	sub	w13, w13, #0x1
   54824:	cmp	w13, #0x1
   54828:	str	w15, [x14], #4
   5482c:	str	w16, [x12], #4
   54830:	b.gt	54818 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x54ac>
   54834:	sub	x11, x9, x11
   54838:	sub	x12, x3, x9
   5483c:	asr	x9, x11, #2
   54840:	lsr	x11, x12, #2
   54844:	sub	w11, w11, #0x1
   54848:	cmp	w11, w9
   5484c:	csel	w12, w11, w9, lt  // lt = tstop
   54850:	cmp	w12, #0x1
   54854:	b.lt	5487c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5510>  // b.tstop
   54858:	sub	x11, x3, w12, sxtw #2
   5485c:	add	w12, w12, #0x1
   54860:	ldr	w13, [x11]
   54864:	ldr	w14, [x8]
   54868:	sub	w12, w12, #0x1
   5486c:	cmp	w12, #0x1
   54870:	str	w13, [x8], #4
   54874:	str	w14, [x11], #4
   54878:	b.gt	54860 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x54f4>
   5487c:	add	x1, x1, x10, lsl #2
   54880:	sub	x3, x3, x9, lsl #2
   54884:	str	x1, [x4]
   54888:	str	x3, [x5]
   5488c:	ret
   54890:	sub	x8, x4, x1
   54894:	sub	x9, x3, #0x4
   54898:	lsr	x8, x8, #2
   5489c:	cmp	x9, x2
   548a0:	sub	w8, w8, #0x1
   548a4:	b.cs	548c8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x555c>  // b.hs, b.nlast
   548a8:	add	x9, x9, #0x4
   548ac:	cmp	x9, x4
   548b0:	b.cs	5492c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x55c0>  // b.hs, b.nlast
   548b4:	sub	x10, x5, #0x4
   548b8:	b	54900 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5594>
   548bc:	add	x2, x2, #0x4
   548c0:	cmp	x2, x9
   548c4:	b.hi	548a8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x553c>  // b.pmore
   548c8:	ldrsw	x10, [x2]
   548cc:	sub	x10, x10, w6, sxtw
   548d0:	tbnz	w10, #31, 548bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5550>
   548d4:	ldr	w11, [x0, x10, lsl #2]
   548d8:	cmp	w11, w8
   548dc:	b.ne	548bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5550>  // b.any
   548e0:	str	w10, [x9, #4]!
   548e4:	sub	x11, x9, x1
   548e8:	lsr	x11, x11, #2
   548ec:	str	w11, [x0, x10, lsl #2]
   548f0:	b	548bc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5550>
   548f4:	cmp	x9, x4
   548f8:	sub	x10, x10, #0x4
   548fc:	b.cs	5492c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x55c0>  // b.hs, b.nlast
   54900:	ldrsw	x11, [x10]
   54904:	sub	x11, x11, w6, sxtw
   54908:	tbnz	w11, #31, 548f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5588>
   5490c:	ldr	w12, [x0, x11, lsl #2]
   54910:	cmp	w12, w8
   54914:	b.ne	548f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5588>  // b.any
   54918:	str	w11, [x4, #-4]!
   5491c:	sub	x12, x4, x1
   54920:	lsr	x12, x12, #2
   54924:	str	w12, [x0, x11, lsl #2]
   54928:	b	548f4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5588>
   5492c:	ret
   54930:	sub	x8, x4, x1
   54934:	sub	x10, x3, #0x4
   54938:	lsr	x8, x8, #2
   5493c:	cmp	x10, x2
   54940:	sub	w8, w8, #0x1
   54944:	mov	w9, #0xffffffff            	// #-1
   54948:	b.cs	549b8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x564c>  // b.hs, b.nlast
   5494c:	cmp	x10, x2
   54950:	b.cs	54a0c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x56a0>  // b.hs, b.nlast
   54954:	add	x10, x10, #0x4
   54958:	cmp	x10, x4
   5495c:	b.cs	549b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5648>  // b.hs, b.nlast
   54960:	sub	x11, x5, #0x4
   54964:	mov	w12, #0xffffffff            	// #-1
   54968:	b	54978 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x560c>
   5496c:	cmp	x10, x4
   54970:	sub	x11, x11, #0x4
   54974:	b.cs	549b4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5648>  // b.hs, b.nlast
   54978:	ldrsw	x14, [x11]
   5497c:	sub	x13, x14, w6, sxtw
   54980:	tbnz	w13, #31, 5496c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5600>
   54984:	ldr	w15, [x0, x13, lsl #2]
   54988:	cmp	w15, w8
   5498c:	b.ne	5496c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5600>  // b.any
   54990:	str	w13, [x4, #-4]!
   54994:	ldr	w14, [x0, x14, lsl #2]
   54998:	sub	x15, x4, x1
   5499c:	lsr	x15, x15, #2
   549a0:	cmp	w12, w14
   549a4:	csel	w9, w9, w15, eq  // eq = none
   549a8:	mov	w12, w14
   549ac:	str	w9, [x0, x13, lsl #2]
   549b0:	b	5496c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5600>
   549b4:	ret
   549b8:	mov	w12, #0xffffffff            	// #-1
   549bc:	mov	x11, x2
   549c0:	b	549d0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5664>
   549c4:	add	x11, x11, #0x4
   549c8:	cmp	x11, x10
   549cc:	b.hi	5494c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x55e0>  // b.pmore
   549d0:	ldrsw	x14, [x11]
   549d4:	sub	x13, x14, w6, sxtw
   549d8:	tbnz	w13, #31, 549c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5658>
   549dc:	ldr	w15, [x0, x13, lsl #2]
   549e0:	cmp	w15, w8
   549e4:	b.ne	549c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5658>  // b.any
   549e8:	str	w13, [x10, #4]!
   549ec:	ldr	w14, [x0, x14, lsl #2]
   549f0:	sub	x15, x10, x1
   549f4:	lsr	x15, x15, #2
   549f8:	cmp	w12, w14
   549fc:	csel	w9, w9, w15, eq  // eq = none
   54a00:	mov	w12, w14
   54a04:	str	w9, [x0, x13, lsl #2]
   54a08:	b	549c4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5658>
   54a0c:	mov	w12, #0xffffffff            	// #-1
   54a10:	mov	x11, x10
   54a14:	b	54a28 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x56bc>
   54a18:	sub	x11, x11, #0x4
   54a1c:	cmp	x11, x2
   54a20:	mov	w12, w13
   54a24:	b.cc	54954 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x55e8>  // b.lo, b.ul, b.last
   54a28:	ldrsw	x14, [x11]
   54a2c:	sub	x15, x11, x1
   54a30:	lsr	x15, x15, #2
   54a34:	ldr	w13, [x0, x14, lsl #2]
   54a38:	cmp	w12, w13
   54a3c:	csel	w9, w9, w15, eq  // eq = none
   54a40:	cmp	w9, w13
   54a44:	b.eq	54a18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x56ac>  // b.none
   54a48:	str	w9, [x0, x14, lsl #2]
   54a4c:	b	54a18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x56ac>
   54a50:	ldr	w8, [x0, #4]
   54a54:	subs	w8, w8, w1
   54a58:	b.ge	54a7c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5710>  // b.tcont
   54a5c:	ldr	w9, [x0]
   54a60:	cbz	w9, 54a88 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x571c>
   54a64:	ldr	w10, [x0, #8]
   54a68:	sub	w9, w9, #0x1
   54a6c:	add	w8, w8, w10
   54a70:	stp	w9, w8, [x0]
   54a74:	mov	w0, #0x1                   	// #1
   54a78:	ret
   54a7c:	str	w8, [x0, #4]
   54a80:	mov	w0, #0x1                   	// #1
   54a84:	ret
   54a88:	ldr	w9, [x0, #12]
   54a8c:	add	w9, w9, w1
   54a90:	str	w9, [x0, #12]
   54a94:	mov	w0, wzr
   54a98:	ret
   54a9c:	add	x11, x1, #0x4
   54aa0:	cmp	x11, x2
   54aa4:	b.cs	54b20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x57b4>  // b.hs, b.nlast
   54aa8:	mov	x8, x1
   54aac:	b	54ac4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5758>
   54ab0:	cbz	w11, 54b10 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x57a4>
   54ab4:	add	x11, x8, #0x4
   54ab8:	cmp	x11, x2
   54abc:	str	w10, [x9, #4]
   54ac0:	b.cs	54b20 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x57b4>  // b.hs, b.nlast
   54ac4:	ldr	w10, [x8, #4]
   54ac8:	mov	x9, x8
   54acc:	mov	x8, x11
   54ad0:	sxtw	x12, w10
   54ad4:	ldrsw	x11, [x9]
   54ad8:	ldr	w13, [x0, x12, lsl #2]
   54adc:	ldr	w11, [x0, x11, lsl #2]
   54ae0:	subs	w11, w13, w11
   54ae4:	b.pl	54ab0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5744>  // b.nfrst
   54ae8:	ldr	w13, [x9]
   54aec:	str	w13, [x9, #4]
   54af0:	sub	x9, x9, #0x4
   54af4:	cmp	x9, x1
   54af8:	b.cc	54ab0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5744>  // b.lo, b.ul, b.last
   54afc:	ldr	w13, [x9]
   54b00:	tbnz	w13, #31, 54ae8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x577c>
   54b04:	cmp	x9, x1
   54b08:	b.cs	54ad4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5768>  // b.hs, b.nlast
   54b0c:	b	54ab0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5744>
   54b10:	ldr	w11, [x9]
   54b14:	mvn	w11, w11
   54b18:	str	w11, [x9]
   54b1c:	b	54ab4 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5748>
   54b20:	ret
   54b24:	stp	x29, x30, [sp, #-64]!
   54b28:	stp	x22, x21, [sp, #32]
   54b2c:	stp	x20, x19, [sp, #48]
   54b30:	mov	w22, w2
   54b34:	mov	x19, x1
   54b38:	mov	x20, x0
   54b3c:	mov	w21, w2
   54b40:	str	x23, [sp, #16]
   54b44:	mov	x29, sp
   54b48:	tbnz	w2, #0, 54b84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5818>
   54b4c:	sub	w21, w22, #0x1
   54b50:	cmp	w21, #0x0
   54b54:	csel	w10, w22, w21, lt  // lt = tstop
   54b58:	asr	w8, w10, #1
   54b5c:	ldrsw	x8, [x19, w8, sxtw #2]
   54b60:	ldrsw	x9, [x19, w21, sxtw #2]
   54b64:	ldr	w11, [x20, x8, lsl #2]
   54b68:	ldr	w12, [x20, x9, lsl #2]
   54b6c:	cmp	w11, w12
   54b70:	b.ge	54b84 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5818>  // b.tcont
   54b74:	sbfx	x10, x10, #1, #31
   54b78:	sxtw	x11, w21
   54b7c:	str	w8, [x19, x11, lsl #2]
   54b80:	str	w9, [x19, x10, lsl #2]
   54b84:	cmp	w21, #0x2
   54b88:	b.lt	54bbc <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5850>  // b.tstop
   54b8c:	cmp	w21, #0x0
   54b90:	cinc	w8, w21, lt  // lt = tstop
   54b94:	asr	w8, w8, #1
   54b98:	add	w23, w8, #0x1
   54b9c:	sub	w2, w23, #0x2
   54ba0:	mov	x0, x20
   54ba4:	mov	x1, x19
   54ba8:	mov	w3, w21
   54bac:	bl	54d2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x59c0>
   54bb0:	sub	w23, w23, #0x1
   54bb4:	cmp	w23, #0x1
   54bb8:	b.gt	54b9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5830>
   54bbc:	tbnz	w22, #0, 54be8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x587c>
   54bc0:	sbfiz	x8, x21, #2, #32
   54bc4:	ldr	w9, [x19, x8]
   54bc8:	ldr	w10, [x19]
   54bcc:	mov	x0, x20
   54bd0:	mov	x1, x19
   54bd4:	mov	w2, wzr
   54bd8:	mov	w3, w21
   54bdc:	str	w9, [x19]
   54be0:	str	w10, [x19, x8]
   54be4:	bl	54d2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x59c0>
   54be8:	cmp	w21, #0x2
   54bec:	b.lt	54c30 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x58c4>  // b.tstop
   54bf0:	sxtw	x8, w21
   54bf4:	sub	x21, x8, #0x1
   54bf8:	lsl	x22, x21, #2
   54bfc:	ldr	w8, [x19, x22]
   54c00:	ldr	w23, [x19]
   54c04:	mov	x0, x20
   54c08:	mov	x1, x19
   54c0c:	mov	w2, wzr
   54c10:	mov	w3, w21
   54c14:	str	w8, [x19]
   54c18:	bl	54d2c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x59c0>
   54c1c:	add	x8, x21, #0x1
   54c20:	sub	x21, x21, #0x1
   54c24:	cmp	x8, #0x2
   54c28:	str	w23, [x19, x22]
   54c2c:	b.gt	54bf8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x588c>
   54c30:	ldp	x20, x19, [sp, #48]
   54c34:	ldp	x22, x21, [sp, #32]
   54c38:	ldr	x23, [sp, #16]
   54c3c:	ldp	x29, x30, [sp], #64
   54c40:	ret
   54c44:	stp	x29, x30, [sp, #-64]!
   54c48:	sub	x8, x2, x1
   54c4c:	lsr	x8, x8, #2
   54c50:	cmp	w8, #0x0
   54c54:	cinc	w9, w8, lt  // lt = tstop
   54c58:	asr	w9, w9, #1
   54c5c:	stp	x22, x21, [sp, #32]
   54c60:	stp	x20, x19, [sp, #48]
   54c64:	mov	x20, x2
   54c68:	mov	x19, x0
   54c6c:	cmp	w8, #0x200
   54c70:	add	x21, x1, w9, sxtw #2
   54c74:	stp	x24, x23, [sp, #16]
   54c78:	mov	x29, sp
   54c7c:	b.gt	54c94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5928>
   54c80:	cmp	w8, #0x20
   54c84:	b.gt	54cf8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x598c>
   54c88:	sub	x3, x20, #0x4
   54c8c:	mov	x0, x19
   54c90:	b	54cec <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5980>
   54c94:	asr	w8, w8, #3
   54c98:	sbfiz	x23, x8, #2, #32
   54c9c:	sbfiz	x24, x8, #3, #32
   54ca0:	add	x2, x1, x23
   54ca4:	add	x3, x1, x24
   54ca8:	mov	x0, x19
   54cac:	bl	54d9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a30>
   54cb0:	mov	x22, x0
   54cb4:	sub	x1, x21, x23
   54cb8:	add	x3, x21, x23
   54cbc:	mov	x0, x19
   54cc0:	mov	x2, x21
   54cc4:	bl	54d9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a30>
   54cc8:	sub	x3, x20, #0x4
   54ccc:	mov	x21, x0
   54cd0:	sub	x1, x3, x24
   54cd4:	sub	x2, x3, x23
   54cd8:	mov	x0, x19
   54cdc:	bl	54d9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a30>
   54ce0:	mov	x3, x0
   54ce4:	mov	x0, x19
   54ce8:	mov	x1, x22
   54cec:	mov	x2, x21
   54cf0:	bl	54d9c <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a30>
   54cf4:	b	54d18 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x59ac>
   54cf8:	asr	w8, w8, #2
   54cfc:	sub	x5, x20, #0x4
   54d00:	sbfiz	x8, x8, #2, #32
   54d04:	add	x2, x1, x8
   54d08:	sub	x4, x5, x8
   54d0c:	mov	x0, x19
   54d10:	mov	x3, x21
   54d14:	bl	54de8 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a7c>
   54d18:	ldp	x20, x19, [sp, #48]
   54d1c:	ldp	x22, x21, [sp, #32]
   54d20:	ldp	x24, x23, [sp, #16]
   54d24:	ldp	x29, x30, [sp], #64
   54d28:	ret
   54d2c:	ldrsw	x8, [x1, w2, sxtw #2]
   54d30:	mov	w10, #0x1                   	// #1
   54d34:	bfi	w10, w2, #1, #31
   54d38:	cmp	w10, w3
   54d3c:	b.ge	54d94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a28>  // b.tcont
   54d40:	ldr	w9, [x0, x8, lsl #2]
   54d44:	sxtw	x11, w10
   54d48:	add	x11, x11, #0x1
   54d4c:	ldrsw	x12, [x1, w10, sxtw #2]
   54d50:	ldrsw	x13, [x1, x11, lsl #2]
   54d54:	ldr	w12, [x0, x12, lsl #2]
   54d58:	ldr	w13, [x0, x13, lsl #2]
   54d5c:	cmp	w12, w13
   54d60:	csel	w11, w11, w10, lt  // lt = tstop
   54d64:	csel	w10, w13, w12, lt  // lt = tstop
   54d68:	cmp	w10, w9
   54d6c:	b.le	54d94 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a28>
   54d70:	ldr	w12, [x1, w11, sxtw #2]
   54d74:	mov	w10, #0x1                   	// #1
   54d78:	bfi	w10, w11, #1, #31
   54d7c:	cmp	w10, w3
   54d80:	str	w12, [x1, w2, sxtw #2]
   54d84:	mov	w2, w11
   54d88:	b.lt	54d44 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x59d8>  // b.tstop
   54d8c:	str	w8, [x1, w11, sxtw #2]
   54d90:	ret
   54d94:	str	w8, [x1, w2, sxtw #2]
   54d98:	ret
   54d9c:	ldrsw	x8, [x1]
   54da0:	ldrsw	x9, [x2]
   54da4:	ldrsw	x10, [x3]
   54da8:	ldr	w8, [x0, x8, lsl #2]
   54dac:	ldr	w9, [x0, x9, lsl #2]
   54db0:	ldr	w10, [x0, x10, lsl #2]
   54db4:	cmp	w8, w9
   54db8:	csel	x8, x1, x2, gt
   54dbc:	ldrsw	x9, [x8]
   54dc0:	ldr	w11, [x0, x9, lsl #2]
   54dc4:	csel	x9, x2, x1, gt
   54dc8:	cmp	w11, w10
   54dcc:	b.le	54de0 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0x5a74>
   54dd0:	ldrsw	x8, [x9]
   54dd4:	ldr	w8, [x0, x8, lsl #2]
   54dd8:	cmp	w8, w10
   54ddc:	csel	x8, x9, x3, gt
   54de0:	mov	x0, x8
   54de4:	ret
   54de8:	ldrsw	x8, [x2]
   54dec:	ldrsw	x9, [x3]
   54df0:	ldrsw	x10, [x4]
   54df4:	ldrsw	x11, [x5]
   54df8:	ldr	w8, [x0, x8, lsl #2]
   54dfc:	ldr	w9, [x0, x9, lsl #2]
   54e00:	ldr	w10, [x0, x10, lsl #2]
   54e04:	ldr	w11, [x0, x11, lsl #2]
   54e08:	ldrsw	x14, [x1]
   54e0c:	cmp	w8, w9
   54e10:	csel	x8, x3, x2, gt
   54e14:	csel	x9, x2, x3, gt
   54e18:	cmp	w10, w11
   54e1c:	csel	x10, x5, x4, gt
   54e20:	ldrsw	x11, [x8]
   54e24:	ldrsw	x12, [x10]
   54e28:	csel	x13, x4, x5, gt
   54e2c:	ldr	w14, [x0, x14, lsl #2]
   54e30:	ldr	w11, [x0, x11, lsl #2]
   54e34:	ldr	w12, [x0, x12, lsl #2]
   54e38:	cmp	w11, w12
   54e3c:	csel	x11, x13, x9, gt
   54e40:	ldrsw	x12, [x11]
   54e44:	csel	x8, x8, x10, gt
   54e48:	csel	x9, x9, x13, gt
   54e4c:	ldrsw	x10, [x8]
   54e50:	ldr	w12, [x0, x12, lsl #2]
   54e54:	ldr	w10, [x0, x10, lsl #2]
   54e58:	cmp	w14, w12
   54e5c:	csel	x12, x11, x1, gt
   54e60:	ldrsw	x13, [x12]
   54e64:	csel	x11, x1, x11, gt
   54e68:	ldr	w13, [x0, x13, lsl #2]
   54e6c:	cmp	w13, w10
   54e70:	csel	x9, x9, x11, gt
   54e74:	csel	x8, x12, x8, gt
   54e78:	ldrsw	x10, [x9]
   54e7c:	ldrsw	x11, [x8]
   54e80:	ldr	w10, [x0, x10, lsl #2]
   54e84:	ldr	w11, [x0, x11, lsl #2]
   54e88:	cmp	w10, w11
   54e8c:	csel	x0, x8, x9, gt
   54e90:	ret

0000000000054e94 <ZDICT_trainFromBuffer_fastCover@@Base>:
   54e94:	sub	sp, sp, #0x120
   54e98:	stp	x29, x30, [sp, #192]
   54e9c:	stp	x28, x27, [sp, #208]
   54ea0:	stp	x26, x25, [sp, #224]
   54ea4:	stp	x24, x23, [sp, #240]
   54ea8:	stp	x22, x21, [sp, #256]
   54eac:	stp	x20, x19, [sp, #272]
   54eb0:	ldr	w8, [x5, #48]
   54eb4:	adrp	x27, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   54eb8:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
   54ebc:	mov	w10, #0x14                  	// #20
   54ec0:	str	w8, [x27, #924]
   54ec4:	ldr	w8, [x5, #8]
   54ec8:	str	x9, [x5, #24]
   54ecc:	ldr	w9, [x5, #32]
   54ed0:	movi	v0.2d, #0x0
   54ed4:	cmp	w8, #0x0
   54ed8:	csel	w8, w10, w8, eq  // eq = none
   54edc:	cmp	w9, #0x0
   54ee0:	str	w8, [x5, #8]
   54ee4:	csinc	w8, w9, wzr, ne  // ne = any
   54ee8:	str	w8, [x5, #32]
   54eec:	stp	q0, q0, [sp, #80]
   54ef0:	str	q0, [sp, #64]
   54ef4:	ldr	x8, [x5, #48]
   54ef8:	ldp	q1, q0, [x5, #16]
   54efc:	ldr	q2, [x5]
   54f00:	add	x29, sp, #0xc0
   54f04:	mov	x21, x1
   54f08:	mov	x22, x0
   54f0c:	sub	x0, x29, #0x50
   54f10:	add	x1, sp, #0x40
   54f14:	mov	x23, x5
   54f18:	mov	w24, w4
   54f1c:	mov	x19, x3
   54f20:	mov	x20, x2
   54f24:	stur	x8, [x29, #-32]
   54f28:	stp	q1, q0, [x29, #-64]
   54f2c:	stur	q2, [x29, #-80]
   54f30:	bl	551ec <ZDICT_trainFromBuffer_fastCover@@Base+0x358>
   54f34:	ldr	w25, [x23, #8]
   54f38:	ldr	w26, [x23, #32]
   54f3c:	ldp	q0, q1, [sp, #64]
   54f40:	ldr	q2, [sp, #96]
   54f44:	sub	x0, x29, #0x50
   54f48:	mov	x1, x21
   54f4c:	mov	w2, w25
   54f50:	mov	w3, w26
   54f54:	stp	q0, q1, [x29, #-80]
   54f58:	stur	q2, [x29, #-48]
   54f5c:	bl	55230 <ZDICT_trainFromBuffer_fastCover@@Base+0x39c>
   54f60:	cbz	w0, 54f84 <ZDICT_trainFromBuffer_fastCover@@Base+0xf0>
   54f64:	cbz	w24, 54f98 <ZDICT_trainFromBuffer_fastCover@@Base+0x104>
   54f68:	cmp	x21, #0xff
   54f6c:	b.hi	54fac <ZDICT_trainFromBuffer_fastCover@@Base+0x118>  // b.pmore
   54f70:	ldr	w8, [x27, #924]
   54f74:	cmp	w8, #0x1
   54f78:	b.ge	55170 <ZDICT_trainFromBuffer_fastCover@@Base+0x2dc>  // b.tcont
   54f7c:	mov	x24, #0xffffffffffffffba    	// #-70
   54f80:	b	550f4 <ZDICT_trainFromBuffer_fastCover@@Base+0x260>
   54f84:	ldr	w8, [x27, #924]
   54f88:	cmp	w8, #0x1
   54f8c:	b.ge	55118 <ZDICT_trainFromBuffer_fastCover@@Base+0x284>  // b.tcont
   54f90:	mov	x24, #0xffffffffffffffd6    	// #-42
   54f94:	b	550f4 <ZDICT_trainFromBuffer_fastCover@@Base+0x260>
   54f98:	ldr	w8, [x27, #924]
   54f9c:	cmp	w8, #0x1
   54fa0:	b.ge	55144 <ZDICT_trainFromBuffer_fastCover@@Base+0x2b0>  // b.tcont
   54fa4:	mov	x24, #0xffffffffffffffb8    	// #-72
   54fa8:	b	550f4 <ZDICT_trainFromBuffer_fastCover@@Base+0x260>
   54fac:	adrp	x8, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   54fb0:	add	x8, x8, #0xde0
   54fb4:	ldr	w4, [sp, #68]
   54fb8:	ldr	x6, [x8, x26, lsl #3]
   54fbc:	ldr	d0, [x23, #24]
   54fc0:	sub	x0, x29, #0x50
   54fc4:	mov	x1, x20
   54fc8:	mov	x2, x19
   54fcc:	mov	w3, w24
   54fd0:	mov	w5, w25
   54fd4:	bl	552a8 <ZDICT_trainFromBuffer_fastCover@@Base+0x414>
   54fd8:	mov	x24, x0
   54fdc:	bl	55618 <ZDICT_trainFromBuffer_fastCover@@Base+0x784>
   54fe0:	cbz	w0, 5501c <ZDICT_trainFromBuffer_fastCover@@Base+0x188>
   54fe4:	ldr	w8, [x27, #924]
   54fe8:	cmp	w8, #0x1
   54fec:	b.lt	550f4 <ZDICT_trainFromBuffer_fastCover@@Base+0x260>  // b.tstop
   54ff0:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   54ff4:	ldr	x19, [x19, #4048]
   54ff8:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   54ffc:	add	x0, x0, #0xfcd
   55000:	mov	w1, #0x1d                  	// #29
   55004:	ldr	x3, [x19]
   55008:	mov	w2, #0x1                   	// #1
   5500c:	bl	48e0 <fwrite@plt>
   55010:	ldr	x0, [x19]
   55014:	bl	4920 <fflush@plt>
   55018:	b	550f4 <ZDICT_trainFromBuffer_fastCover@@Base+0x260>
   5501c:	ldur	x1, [x29, #-32]
   55020:	ldr	w2, [x27, #924]
   55024:	mov	x0, x21
   55028:	bl	4e288 <ZBUFF_recommendedDOutSize@@Base+0x40>
   5502c:	ldr	w8, [x27, #924]
   55030:	cmp	w8, #0x2
   55034:	b.ge	55198 <ZDICT_trainFromBuffer_fastCover@@Base+0x304>  // b.tcont
   55038:	ldr	w8, [x23, #8]
   5503c:	mov	w9, #0x1                   	// #1
   55040:	mov	w1, #0x2                   	// #2
   55044:	lsl	x0, x9, x8
   55048:	bl	4700 <calloc@plt>
   5504c:	ldp	q0, q1, [sp, #64]
   55050:	ldr	q2, [sp, #96]
   55054:	ldur	x1, [x29, #-24]
   55058:	mov	x23, x0
   5505c:	sub	x0, x29, #0x50
   55060:	add	x4, sp, #0x10
   55064:	mov	x2, x22
   55068:	mov	x3, x21
   5506c:	mov	x5, x23
   55070:	stp	q0, q1, [sp, #16]
   55074:	str	q2, [sp, #48]
   55078:	bl	55624 <ZDICT_trainFromBuffer_fastCover@@Base+0x790>
   5507c:	ldur	x8, [x29, #-48]
   55080:	ldur	w9, [x29, #-8]
   55084:	mov	x10, #0xf5c3                	// #62915
   55088:	movk	x10, #0x5c28, lsl #16
   5508c:	movk	x10, #0xc28f, lsl #32
   55090:	ldr	x11, [sp, #96]
   55094:	ldr	w12, [sp, #104]
   55098:	mul	x8, x8, x9
   5509c:	movk	x10, #0x28f5, lsl #48
   550a0:	lsr	x8, x8, #2
   550a4:	umulh	x8, x8, x10
   550a8:	add	x2, x22, x0
   550ac:	lsr	x6, x8, #2
   550b0:	sub	x3, x21, x0
   550b4:	mov	x0, x22
   550b8:	mov	x1, x21
   550bc:	mov	x4, x20
   550c0:	mov	x5, x19
   550c4:	stp	x11, x12, [sp]
   550c8:	bl	46b0 <ZDICT_finalizeDictionary@plt>
   550cc:	mov	x24, x0
   550d0:	bl	55618 <ZDICT_trainFromBuffer_fastCover@@Base+0x784>
   550d4:	cbnz	w0, 550e4 <ZDICT_trainFromBuffer_fastCover@@Base+0x250>
   550d8:	ldr	w8, [x27, #924]
   550dc:	cmp	w8, #0x2
   550e0:	b.ge	551c4 <ZDICT_trainFromBuffer_fastCover@@Base+0x330>  // b.tcont
   550e4:	sub	x0, x29, #0x50
   550e8:	bl	5586c <ZDICT_trainFromBuffer_fastCover@@Base+0x9d8>
   550ec:	mov	x0, x23
   550f0:	bl	4880 <free@plt>
   550f4:	mov	x0, x24
   550f8:	ldp	x20, x19, [sp, #272]
   550fc:	ldp	x22, x21, [sp, #256]
   55100:	ldp	x24, x23, [sp, #240]
   55104:	ldp	x26, x25, [sp, #224]
   55108:	ldp	x28, x27, [sp, #208]
   5510c:	ldp	x29, x30, [sp, #192]
   55110:	add	sp, sp, #0x120
   55114:	ret
   55118:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5511c:	ldr	x19, [x19, #4048]
   55120:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55124:	add	x0, x0, #0xca5
   55128:	mov	w1, #0x1f                  	// #31
   5512c:	ldr	x3, [x19]
   55130:	mov	w2, #0x1                   	// #1
   55134:	bl	48e0 <fwrite@plt>
   55138:	ldr	x0, [x19]
   5513c:	bl	4920 <fflush@plt>
   55140:	b	54f90 <ZDICT_trainFromBuffer_fastCover@@Base+0xfc>
   55144:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55148:	ldr	x19, [x19, #4048]
   5514c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55150:	add	x0, x0, #0xcc5
   55154:	mov	w1, #0x2c                  	// #44
   55158:	ldr	x3, [x19]
   5515c:	mov	w2, #0x1                   	// #1
   55160:	bl	48e0 <fwrite@plt>
   55164:	ldr	x0, [x19]
   55168:	bl	4920 <fflush@plt>
   5516c:	b	54fa4 <ZDICT_trainFromBuffer_fastCover@@Base+0x110>
   55170:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55174:	ldr	x19, [x19, #4048]
   55178:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   5517c:	add	x1, x1, #0xefd
   55180:	mov	w2, #0x100                 	// #256
   55184:	ldr	x0, [x19]
   55188:	bl	4ae0 <fprintf@plt>
   5518c:	ldr	x0, [x19]
   55190:	bl	4920 <fflush@plt>
   55194:	b	54f7c <ZDICT_trainFromBuffer_fastCover@@Base+0xe8>
   55198:	adrp	x24, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5519c:	ldr	x24, [x24, #4048]
   551a0:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   551a4:	add	x0, x0, #0xf51
   551a8:	mov	w1, #0x14                  	// #20
   551ac:	ldr	x3, [x24]
   551b0:	mov	w2, #0x1                   	// #1
   551b4:	bl	48e0 <fwrite@plt>
   551b8:	ldr	x0, [x24]
   551bc:	bl	4920 <fflush@plt>
   551c0:	b	55038 <ZDICT_trainFromBuffer_fastCover@@Base+0x1a4>
   551c4:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   551c8:	ldr	x19, [x19, #4048]
   551cc:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   551d0:	add	x1, x1, #0xf66
   551d4:	mov	w2, w24
   551d8:	ldr	x0, [x19]
   551dc:	bl	4ae0 <fprintf@plt>
   551e0:	ldr	x0, [x19]
   551e4:	bl	4920 <fflush@plt>
   551e8:	b	550e4 <ZDICT_trainFromBuffer_fastCover@@Base+0x250>
   551ec:	ldr	w8, [x0]
   551f0:	str	w8, [x1]
   551f4:	ldr	w8, [x0, #4]
   551f8:	str	w8, [x1, #4]
   551fc:	ldr	w8, [x0, #12]
   55200:	str	w8, [x1, #8]
   55204:	ldr	w8, [x0, #16]
   55208:	str	w8, [x1, #12]
   5520c:	ldr	x8, [x0, #24]
   55210:	str	x8, [x1, #16]
   55214:	ldr	w8, [x0, #52]
   55218:	ldur	x9, [x0, #44]
   5521c:	str	w8, [x1, #40]
   55220:	str	x9, [x1, #32]
   55224:	ldr	w8, [x0, #36]
   55228:	str	w8, [x1, #24]
   5522c:	ret
   55230:	ldr	w9, [x0, #4]
   55234:	cbz	w9, 5525c <ZDICT_trainFromBuffer_fastCover@@Base+0x3c8>
   55238:	ldr	w10, [x0]
   5523c:	mov	x8, x0
   55240:	cbz	w10, 5525c <ZDICT_trainFromBuffer_fastCover@@Base+0x3c8>
   55244:	cmp	w9, #0x8
   55248:	b.eq	55254 <ZDICT_trainFromBuffer_fastCover@@Base+0x3c0>  // b.none
   5524c:	cmp	w9, #0x6
   55250:	b.ne	5525c <ZDICT_trainFromBuffer_fastCover@@Base+0x3c8>  // b.any
   55254:	cmp	x10, x1
   55258:	b.ls	55264 <ZDICT_trainFromBuffer_fastCover@@Base+0x3d0>  // b.plast
   5525c:	mov	w0, wzr
   55260:	ret
   55264:	sub	w11, w2, #0x1
   55268:	cmp	w11, #0x1e
   5526c:	mov	w0, wzr
   55270:	b.hi	552a4 <ZDICT_trainFromBuffer_fastCover@@Base+0x410>  // b.pmore
   55274:	cmp	w9, w10
   55278:	b.hi	552a4 <ZDICT_trainFromBuffer_fastCover@@Base+0x410>  // b.pmore
   5527c:	ldr	d0, [x8, #16]
   55280:	mov	w0, wzr
   55284:	fcmp	d0, #0.0
   55288:	b.ls	552a4 <ZDICT_trainFromBuffer_fastCover@@Base+0x410>  // b.plast
   5528c:	fmov	d1, #1.000000000000000000e+00
   55290:	fcmp	d0, d1
   55294:	b.gt	552a4 <ZDICT_trainFromBuffer_fastCover@@Base+0x410>
   55298:	sub	w8, w3, #0x1
   5529c:	cmp	w8, #0xa
   552a0:	cset	w0, cc  // cc = lo, ul, last
   552a4:	ret
   552a8:	sub	sp, sp, #0x90
   552ac:	stp	x29, x30, [sp, #48]
   552b0:	stp	x20, x19, [sp, #128]
   552b4:	add	x29, sp, #0x20
   552b8:	str	x1, [sp, #8]
   552bc:	mov	x19, x0
   552c0:	mov	x0, x2
   552c4:	mov	w1, w3
   552c8:	stp	d9, d8, [sp, #32]
   552cc:	stp	x28, x27, [sp, #64]
   552d0:	stp	x26, x25, [sp, #80]
   552d4:	stp	x24, x23, [sp, #96]
   552d8:	stp	x22, x21, [sp, #112]
   552dc:	str	x6, [sp, #16]
   552e0:	stur	x5, [x29, #-8]
   552e4:	mov	v8.16b, v0.16b
   552e8:	mov	w24, w4
   552ec:	mov	w21, w3
   552f0:	mov	x22, x2
   552f4:	bl	4e25c <ZBUFF_recommendedDOutSize@@Base+0x14>
   552f8:	ucvtf	d0, w21
   552fc:	fmov	d9, #1.000000000000000000e+00
   55300:	fmul	d0, d0, d8
   55304:	fcmp	d8, d9
   55308:	fcvtzu	w8, d0
   5530c:	csel	w9, w8, wzr, mi  // mi = first
   55310:	fcmp	d8, d9
   55314:	mov	x28, x0
   55318:	mov	x20, x0
   5531c:	sub	w25, w21, w9
   55320:	csel	w27, w8, w21, mi  // mi = first
   55324:	mov	x23, x0
   55328:	b.pl	5533c <ZDICT_trainFromBuffer_fastCover@@Base+0x4a8>  // b.nfrst
   5532c:	mov	x0, x22
   55330:	mov	w1, w27
   55334:	bl	4e25c <ZBUFF_recommendedDOutSize@@Base+0x14>
   55338:	mov	x23, x0
   5533c:	fcmp	d8, d9
   55340:	b.pl	55354 <ZDICT_trainFromBuffer_fastCover@@Base+0x4c0>  // b.nfrst
   55344:	add	x0, x22, w27, uxtw #3
   55348:	mov	w1, w25
   5534c:	bl	4e25c <ZBUFF_recommendedDOutSize@@Base+0x14>
   55350:	mov	x20, x0
   55354:	mov	w8, w24
   55358:	cmp	w24, #0x8
   5535c:	mov	w9, #0x8                   	// #8
   55360:	csel	x26, x8, x9, hi  // hi = pmore
   55364:	cmp	x28, x26
   55368:	b.cc	553a8 <ZDICT_trainFromBuffer_fastCover@@Base+0x514>  // b.lo, b.ul, b.last
   5536c:	mov	w8, #0xffffffff            	// #-1
   55370:	cmp	x28, x8
   55374:	b.cs	553a8 <ZDICT_trainFromBuffer_fastCover@@Base+0x514>  // b.hs, b.nlast
   55378:	cmp	w27, #0x4
   5537c:	b.hi	553e0 <ZDICT_trainFromBuffer_fastCover@@Base+0x54c>  // b.pmore
   55380:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55384:	ldr	w8, [x8, #924]
   55388:	cmp	w8, #0x1
   5538c:	b.lt	553b8 <ZDICT_trainFromBuffer_fastCover@@Base+0x524>  // b.tstop
   55390:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55394:	ldr	x19, [x19, #4048]
   55398:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5539c:	add	x1, x1, #0xd26
   553a0:	mov	w2, w27
   553a4:	b	554e8 <ZDICT_trainFromBuffer_fastCover@@Base+0x654>
   553a8:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   553ac:	ldr	w8, [x8, #924]
   553b0:	cmp	w8, #0x1
   553b4:	b.ge	5552c <ZDICT_trainFromBuffer_fastCover@@Base+0x698>  // b.tcont
   553b8:	mov	x0, #0xffffffffffffffb8    	// #-72
   553bc:	ldp	x20, x19, [sp, #128]
   553c0:	ldp	x22, x21, [sp, #112]
   553c4:	ldp	x24, x23, [sp, #96]
   553c8:	ldp	x26, x25, [sp, #80]
   553cc:	ldp	x28, x27, [sp, #64]
   553d0:	ldp	x29, x30, [sp, #48]
   553d4:	ldp	d9, d8, [sp, #32]
   553d8:	add	sp, sp, #0x90
   553dc:	ret
   553e0:	cbz	w25, 554c4 <ZDICT_trainFromBuffer_fastCover@@Base+0x630>
   553e4:	movi	v0.2d, #0x0
   553e8:	stp	q0, q0, [x19, #48]
   553ec:	stp	q0, q0, [x19, #16]
   553f0:	str	q0, [x19]
   553f4:	adrp	x28, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   553f8:	ldr	w8, [x28, #924]
   553fc:	cmp	w8, #0x2
   55400:	b.ge	55558 <ZDICT_trainFromBuffer_fastCover@@Base+0x6c4>  // b.tcont
   55404:	ldr	w8, [x28, #924]
   55408:	cmp	w8, #0x2
   5540c:	b.ge	5558c <ZDICT_trainFromBuffer_fastCover@@Base+0x6f8>  // b.tcont
   55410:	ldp	x8, x12, [sp, #8]
   55414:	ldur	x20, [x29, #-8]
   55418:	sub	x11, x23, x26
   5541c:	mov	w9, w27
   55420:	str	x8, [x19]
   55424:	mov	w8, w21
   55428:	mov	w10, w25
   5542c:	stp	x22, x8, [x19, #16]
   55430:	add	x8, x11, #0x1
   55434:	add	w0, w21, #0x1
   55438:	mov	w1, #0x8                   	// #8
   5543c:	stp	w24, w20, [x19, #64]
   55440:	str	x12, [x19, #72]
   55444:	stp	x9, x10, [x19, #32]
   55448:	str	x8, [x19, #48]
   5544c:	bl	4700 <calloc@plt>
   55450:	str	x0, [x19, #8]
   55454:	cbz	x0, 554f4 <ZDICT_trainFromBuffer_fastCover@@Base+0x660>
   55458:	str	xzr, [x0]
   5545c:	cbz	w21, 5548c <ZDICT_trainFromBuffer_fastCover@@Base+0x5f8>
   55460:	ldr	x8, [x19, #8]
   55464:	mov	w9, #0x1                   	// #1
   55468:	sub	w10, w9, #0x1
   5546c:	lsl	x10, x10, #3
   55470:	ldr	x11, [x8, x10]
   55474:	ldr	x10, [x22, x10]
   55478:	add	x10, x10, x11
   5547c:	str	x10, [x8, w9, uxtw #3]
   55480:	add	w9, w9, #0x1
   55484:	cmp	w9, w21
   55488:	b.ls	55468 <ZDICT_trainFromBuffer_fastCover@@Base+0x5d4>  // b.plast
   5548c:	mov	w8, #0x1                   	// #1
   55490:	lsl	x0, x8, x20
   55494:	mov	w1, #0x4                   	// #4
   55498:	bl	4700 <calloc@plt>
   5549c:	str	x0, [x19, #56]
   554a0:	ldr	w8, [x28, #924]
   554a4:	cbz	x0, 55514 <ZDICT_trainFromBuffer_fastCover@@Base+0x680>
   554a8:	cmp	w8, #0x2
   554ac:	b.ge	555c0 <ZDICT_trainFromBuffer_fastCover@@Base+0x72c>  // b.tcont
   554b0:	ldr	x0, [x19, #56]
   554b4:	mov	x1, x19
   554b8:	bl	5622c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x988>
   554bc:	mov	x0, xzr
   554c0:	b	553bc <ZDICT_trainFromBuffer_fastCover@@Base+0x528>
   554c4:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   554c8:	ldr	w8, [x8, #924]
   554cc:	cmp	w8, #0x1
   554d0:	b.lt	553b8 <ZDICT_trainFromBuffer_fastCover@@Base+0x524>  // b.tstop
   554d4:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   554d8:	ldr	x19, [x19, #4048]
   554dc:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   554e0:	add	x1, x1, #0xd5d
   554e4:	mov	w2, w25
   554e8:	ldr	x0, [x19]
   554ec:	bl	4ae0 <fprintf@plt>
   554f0:	b	5554c <ZDICT_trainFromBuffer_fastCover@@Base+0x6b8>
   554f4:	ldr	w8, [x28, #924]
   554f8:	cmp	w8, #0x1
   554fc:	b.lt	5551c <ZDICT_trainFromBuffer_fastCover@@Base+0x688>  // b.tstop
   55500:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55504:	ldr	x20, [x20, #4048]
   55508:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5550c:	add	x0, x0, #0xd94
   55510:	b	555fc <ZDICT_trainFromBuffer_fastCover@@Base+0x768>
   55514:	cmp	w8, #0x1
   55518:	b.ge	555ec <ZDICT_trainFromBuffer_fastCover@@Base+0x758>  // b.tcont
   5551c:	mov	x0, x19
   55520:	bl	5586c <ZDICT_trainFromBuffer_fastCover@@Base+0x9d8>
   55524:	mov	x0, #0xffffffffffffffc0    	// #-64
   55528:	b	553bc <ZDICT_trainFromBuffer_fastCover@@Base+0x528>
   5552c:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55530:	ldr	x19, [x19, #4048]
   55534:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55538:	lsr	x2, x28, #20
   5553c:	add	x1, x1, #0x24
   55540:	ldr	x0, [x19]
   55544:	mov	w3, #0xfff                 	// #4095
   55548:	bl	4ae0 <fprintf@plt>
   5554c:	ldr	x0, [x19]
   55550:	bl	4920 <fflush@plt>
   55554:	b	553b8 <ZDICT_trainFromBuffer_fastCover@@Base+0x524>
   55558:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5555c:	ldr	x8, [x8, #4048]
   55560:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55564:	add	x1, x1, #0xd1
   55568:	mov	w2, w27
   5556c:	ldr	x0, [x8]
   55570:	mov	w3, w23
   55574:	bl	4ae0 <fprintf@plt>
   55578:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5557c:	ldr	x8, [x8, #4048]
   55580:	ldr	x0, [x8]
   55584:	bl	4920 <fflush@plt>
   55588:	b	55404 <ZDICT_trainFromBuffer_fastCover@@Base+0x570>
   5558c:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55590:	ldr	x8, [x8, #4048]
   55594:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55598:	add	x1, x1, #0xfa
   5559c:	mov	w2, w25
   555a0:	ldr	x0, [x8]
   555a4:	mov	w3, w20
   555a8:	bl	4ae0 <fprintf@plt>
   555ac:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   555b0:	ldr	x8, [x8, #4048]
   555b4:	ldr	x0, [x8]
   555b8:	bl	4920 <fflush@plt>
   555bc:	b	55410 <ZDICT_trainFromBuffer_fastCover@@Base+0x57c>
   555c0:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   555c4:	ldr	x20, [x20, #4048]
   555c8:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   555cc:	add	x0, x0, #0x169
   555d0:	mov	w1, #0x16                  	// #22
   555d4:	ldr	x3, [x20]
   555d8:	mov	w2, #0x1                   	// #1
   555dc:	bl	48e0 <fwrite@plt>
   555e0:	ldr	x0, [x20]
   555e4:	bl	4920 <fflush@plt>
   555e8:	b	554b0 <ZDICT_trainFromBuffer_fastCover@@Base+0x61c>
   555ec:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   555f0:	ldr	x20, [x20, #4048]
   555f4:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   555f8:	add	x0, x0, #0xdb9
   555fc:	ldr	x3, [x20]
   55600:	mov	w1, #0x24                  	// #36
   55604:	mov	w2, #0x1                   	// #1
   55608:	bl	48e0 <fwrite@plt>
   5560c:	ldr	x0, [x20]
   55610:	bl	4920 <fflush@plt>
   55614:	b	5551c <ZDICT_trainFromBuffer_fastCover@@Base+0x688>
   55618:	cmn	x0, #0x78
   5561c:	cset	w0, hi  // hi = pmore
   55620:	ret
   55624:	sub	sp, sp, #0xa0
   55628:	stp	x29, x30, [sp, #64]
   5562c:	stp	x28, x27, [sp, #80]
   55630:	stp	x26, x25, [sp, #96]
   55634:	stp	x24, x23, [sp, #112]
   55638:	stp	x22, x21, [sp, #128]
   5563c:	stp	x20, x19, [sp, #144]
   55640:	ldr	w8, [x0, #48]
   55644:	mov	x22, x2
   55648:	ldr	w2, [x4]
   5564c:	mov	x27, x3
   55650:	mov	x23, x0
   55654:	mov	x24, x1
   55658:	mov	w3, #0x1                   	// #1
   5565c:	mov	w0, w27
   55660:	mov	w1, w8
   55664:	add	x29, sp, #0x40
   55668:	mov	x19, x5
   5566c:	mov	x21, x4
   55670:	bl	4e2ec <ZBUFF_recommendedDOutSize@@Base+0xa4>
   55674:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55678:	ldr	w8, [x8, #924]
   5567c:	mov	x26, x0
   55680:	lsr	x25, x0, #32
   55684:	cmp	w8, #0x2
   55688:	b.ge	557dc <ZDICT_trainFromBuffer_fastCover@@Base+0x948>  // b.tcont
   5568c:	cbz	x27, 55808 <ZDICT_trainFromBuffer_fastCover@@Base+0x974>
   55690:	mov	x8, x27
   55694:	mov	x20, xzr
   55698:	mov	x28, xzr
   5569c:	and	x27, x26, #0xffffffff
   556a0:	mov	x26, x8
   556a4:	str	x8, [sp, #8]
   556a8:	ldp	q2, q0, [x21, #16]
   556ac:	ldr	q1, [x21]
   556b0:	mul	w2, w28, w25
   556b4:	add	w3, w2, w25
   556b8:	add	x4, sp, #0x10
   556bc:	mov	x0, x23
   556c0:	mov	x1, x24
   556c4:	mov	x5, x19
   556c8:	stp	q2, q0, [sp, #32]
   556cc:	str	q1, [sp, #16]
   556d0:	bl	563f8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb54>
   556d4:	cbz	w1, 5570c <ZDICT_trainFromBuffer_fastCover@@Base+0x878>
   556d8:	ldr	w8, [x21, #4]
   556dc:	lsr	x9, x0, #32
   556e0:	mvn	w10, w0
   556e4:	add	w9, w10, w9
   556e8:	add	w9, w9, w8
   556ec:	cmp	x26, x9
   556f0:	csel	x2, x9, x26, hi  // hi = pmore
   556f4:	cmp	x2, x8
   556f8:	b.cs	55720 <ZDICT_trainFromBuffer_fastCover@@Base+0x88c>  // b.hs, b.nlast
   556fc:	mov	x20, xzr
   55700:	mov	w8, #0x1                   	// #1
   55704:	tbz	w8, #0, 55784 <ZDICT_trainFromBuffer_fastCover@@Base+0x8f0>
   55708:	b	5580c <ZDICT_trainFromBuffer_fastCover@@Base+0x978>
   5570c:	add	x20, x20, #0x1
   55710:	cmp	x20, #0x9
   55714:	cset	w8, hi  // hi = pmore
   55718:	tbz	w8, #0, 55784 <ZDICT_trainFromBuffer_fastCover@@Base+0x8f0>
   5571c:	b	5580c <ZDICT_trainFromBuffer_fastCover@@Base+0x978>
   55720:	ldr	x9, [x23]
   55724:	sub	x26, x26, x2
   55728:	add	x8, x22, x26
   5572c:	add	x1, x9, w0, uxtw
   55730:	mov	x0, x8
   55734:	bl	4420 <memcpy@plt>
   55738:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   5573c:	ldr	w8, [x8, #924]
   55740:	cmp	w8, #0x2
   55744:	b.lt	55778 <ZDICT_trainFromBuffer_fastCover@@Base+0x8e4>  // b.tstop
   55748:	bl	4480 <clock@plt>
   5574c:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55750:	ldr	x8, [x8, #960]
   55754:	mov	w9, #0x49f0                	// #18928
   55758:	movk	w9, #0x2, lsl #16
   5575c:	sub	x8, x0, x8
   55760:	cmp	x8, x9
   55764:	b.gt	55798 <ZDICT_trainFromBuffer_fastCover@@Base+0x904>
   55768:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   5576c:	ldr	w8, [x8, #924]
   55770:	cmp	w8, #0x4
   55774:	b.ge	55798 <ZDICT_trainFromBuffer_fastCover@@Base+0x904>  // b.tcont
   55778:	mov	x20, xzr
   5577c:	mov	w8, wzr
   55780:	tbnz	w8, #0, 5580c <ZDICT_trainFromBuffer_fastCover@@Base+0x978>
   55784:	add	x8, x28, #0x1
   55788:	udiv	x9, x8, x27
   5578c:	msub	x28, x9, x27, x8
   55790:	cbnz	x26, 556a8 <ZDICT_trainFromBuffer_fastCover@@Base+0x814>
   55794:	b	5580c <ZDICT_trainFromBuffer_fastCover@@Base+0x978>
   55798:	bl	4480 <clock@plt>
   5579c:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   557a0:	str	x0, [x8, #960]
   557a4:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   557a8:	ldr	x20, [x20, #4048]
   557ac:	ldr	x9, [sp, #8]
   557b0:	mov	w10, #0x64                  	// #100
   557b4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   557b8:	ldr	x0, [x20]
   557bc:	sub	x8, x9, x26
   557c0:	mul	x8, x8, x10
   557c4:	udiv	x2, x8, x9
   557c8:	add	x1, x1, #0x10
   557cc:	bl	4ae0 <fprintf@plt>
   557d0:	ldr	x0, [x20]
   557d4:	bl	4920 <fflush@plt>
   557d8:	b	55778 <ZDICT_trainFromBuffer_fastCover@@Base+0x8e4>
   557dc:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   557e0:	ldr	x20, [x20, #4048]
   557e4:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   557e8:	add	x1, x1, #0x180
   557ec:	mov	w2, w26
   557f0:	ldr	x0, [x20]
   557f4:	mov	w3, w25
   557f8:	bl	4ae0 <fprintf@plt>
   557fc:	ldr	x0, [x20]
   55800:	bl	4920 <fflush@plt>
   55804:	cbnz	x27, 55690 <ZDICT_trainFromBuffer_fastCover@@Base+0x7fc>
   55808:	mov	x26, x27
   5580c:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55810:	ldr	w8, [x8, #924]
   55814:	cmp	w8, #0x2
   55818:	b.ge	55840 <ZDICT_trainFromBuffer_fastCover@@Base+0x9ac>  // b.tcont
   5581c:	mov	x0, x26
   55820:	ldp	x20, x19, [sp, #144]
   55824:	ldp	x22, x21, [sp, #128]
   55828:	ldp	x24, x23, [sp, #112]
   5582c:	ldp	x26, x25, [sp, #96]
   55830:	ldp	x28, x27, [sp, #80]
   55834:	ldp	x29, x30, [sp, #64]
   55838:	add	sp, sp, #0xa0
   5583c:	ret
   55840:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55844:	ldr	x19, [x19, #4048]
   55848:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5584c:	adrp	x2, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   55850:	add	x1, x1, #0x1d
   55854:	ldr	x0, [x19]
   55858:	add	x2, x2, #0x414
   5585c:	bl	4ae0 <fprintf@plt>
   55860:	ldr	x0, [x19]
   55864:	bl	4920 <fflush@plt>
   55868:	b	5581c <ZDICT_trainFromBuffer_fastCover@@Base+0x988>
   5586c:	cbz	x0, 558a0 <ZDICT_trainFromBuffer_fastCover@@Base+0xa0c>
   55870:	stp	x29, x30, [sp, #-32]!
   55874:	str	x19, [sp, #16]
   55878:	mov	x19, x0
   5587c:	ldr	x0, [x0, #56]
   55880:	mov	x29, sp
   55884:	bl	4880 <free@plt>
   55888:	ldr	x0, [x19, #8]
   5588c:	str	xzr, [x19, #56]
   55890:	bl	4880 <free@plt>
   55894:	str	xzr, [x19, #8]
   55898:	ldr	x19, [sp, #16]
   5589c:	ldp	x29, x30, [sp], #32
   558a0:	ret

00000000000558a4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base>:
   558a4:	sub	sp, sp, #0x1e0
   558a8:	stp	x29, x30, [sp, #384]
   558ac:	stp	x28, x27, [sp, #400]
   558b0:	stp	x26, x25, [sp, #416]
   558b4:	stp	x24, x23, [sp, #432]
   558b8:	stp	x22, x21, [sp, #448]
   558bc:	stp	x20, x19, [sp, #464]
   558c0:	add	x29, sp, #0x170
   558c4:	stp	x2, x3, [sp, #64]
   558c8:	str	d8, [sp, #368]
   558cc:	str	w4, [x29, #8]
   558d0:	ldr	d0, [x5, #24]
   558d4:	ldp	w18, w17, [x5, #8]
   558d8:	ldp	w9, w8, [x5]
   558dc:	fmov	d1, #7.500000000000000000e-01
   558e0:	fcmp	d0, #0.0
   558e4:	mov	w10, #0x28                  	// #40
   558e8:	fcsel	d8, d0, d1, hi  // hi = pmore
   558ec:	cmp	w17, #0x0
   558f0:	mov	w13, #0x79e                 	// #1950
   558f4:	csel	w21, w10, w17, eq  // eq = none
   558f8:	cmp	w9, #0x0
   558fc:	mov	w11, #0x32                  	// #50
   55900:	mov	w12, #0x7d0                 	// #2000
   55904:	csel	w23, w13, wzr, eq  // eq = none
   55908:	csel	w11, w11, w9, eq  // eq = none
   5590c:	csel	w22, w12, w9, eq  // eq = none
   55910:	udiv	w9, w23, w21
   55914:	cmp	w9, #0x1
   55918:	mov	w14, #0x6                   	// #6
   5591c:	mov	w15, #0x8                   	// #8
   55920:	csinc	w9, w9, wzr, hi  // hi = pmore
   55924:	cmp	w8, #0x0
   55928:	csel	w20, w14, w8, eq  // eq = none
   5592c:	csel	w8, w15, w8, eq  // eq = none
   55930:	str	w8, [x29, #12]
   55934:	ldr	w8, [x5, #32]
   55938:	mov	w16, #0x1                   	// #1
   5593c:	ldr	w28, [x5, #48]
   55940:	mov	w10, #0x14                  	// #20
   55944:	cinc	w25, w16, eq  // eq = none
   55948:	cmp	w18, #0x0
   5594c:	csel	w27, w10, w18, eq  // eq = none
   55950:	cmp	w8, #0x0
   55954:	csinc	w8, w8, wzr, ne  // ne = any
   55958:	fcmp	d8, #0.0
   5595c:	b.ls	55994 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xf0>  // b.plast
   55960:	fmov	d0, #1.000000000000000000e+00
   55964:	fcmp	d8, d0
   55968:	b.gt	55994 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xf0>
   5596c:	cmp	w8, #0xb
   55970:	b.cc	559c8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x124>  // b.lo, b.ul, b.last
   55974:	cmp	w28, #0x1
   55978:	b.lt	5599c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xf8>  // b.tstop
   5597c:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55980:	ldr	x19, [x19, #4048]
   55984:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55988:	add	x0, x0, #0xd08
   5598c:	mov	w1, #0x10                  	// #16
   55990:	b	55a80 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1dc>
   55994:	cmp	w28, #0x1
   55998:	b.ge	55a6c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1c8>  // b.tcont
   5599c:	mov	x27, #0xffffffffffffffd6    	// #-42
   559a0:	mov	x0, x27
   559a4:	ldp	x20, x19, [sp, #464]
   559a8:	ldp	x22, x21, [sp, #448]
   559ac:	ldp	x24, x23, [sp, #432]
   559b0:	ldp	x26, x25, [sp, #416]
   559b4:	ldp	x28, x27, [sp, #400]
   559b8:	ldp	x29, x30, [sp, #384]
   559bc:	ldr	d8, [sp, #368]
   559c0:	add	sp, sp, #0x1e0
   559c4:	ret
   559c8:	ldr	w10, [x29, #12]
   559cc:	cmp	w11, w10
   559d0:	b.cc	55a04 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x160>  // b.lo, b.ul, b.last
   559d4:	cmp	w22, w11
   559d8:	b.cc	55a04 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x160>  // b.lo, b.ul, b.last
   559dc:	str	w8, [sp, #56]
   559e0:	ldr	w8, [x29, #8]
   559e4:	cbz	w8, 55a24 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x180>
   559e8:	mov	x26, x1
   559ec:	cmp	x1, #0xff
   559f0:	b.hi	55a34 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x190>  // b.pmore
   559f4:	cmp	w28, #0x1
   559f8:	b.ge	55f28 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x684>  // b.tcont
   559fc:	mov	x27, #0xffffffffffffffba    	// #-70
   55a00:	b	559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55a04:	cmp	w28, #0x1
   55a08:	b.lt	5599c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xf8>  // b.tstop
   55a0c:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55a10:	ldr	x19, [x19, #4048]
   55a14:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55a18:	add	x0, x0, #0xd19
   55a1c:	mov	w1, #0xc                   	// #12
   55a20:	b	55a80 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1dc>
   55a24:	cmp	w28, #0x1
   55a28:	b.ge	55ef8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x654>  // b.tcont
   55a2c:	mov	x27, #0xffffffffffffffb8    	// #-72
   55a30:	b	559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55a34:	mov	x24, x0
   55a38:	ldr	w0, [x5, #16]
   55a3c:	mov	x19, x5
   55a40:	str	w11, [sp, #16]
   55a44:	str	w9, [sp, #60]
   55a48:	cmp	w0, #0x2
   55a4c:	b.cc	55a98 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1f4>  // b.lo, b.ul, b.last
   55a50:	mov	w1, #0x1                   	// #1
   55a54:	bl	5dfc <ZSTD_initDStream_usingDDict@plt+0x12ec>
   55a58:	ldr	w9, [sp, #60]
   55a5c:	str	x0, [sp, #40]
   55a60:	cbnz	x0, 55a9c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x1f8>
   55a64:	mov	x27, #0xffffffffffffffc0    	// #-64
   55a68:	b	559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55a6c:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55a70:	ldr	x19, [x19, #4048]
   55a74:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55a78:	add	x0, x0, #0xcf2
   55a7c:	mov	w1, #0x15                  	// #21
   55a80:	ldr	x3, [x19]
   55a84:	mov	w2, #0x1                   	// #1
   55a88:	bl	48e0 <fwrite@plt>
   55a8c:	ldr	x0, [x19]
   55a90:	bl	4920 <fflush@plt>
   55a94:	b	5599c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xf8>
   55a98:	str	xzr, [sp, #40]
   55a9c:	udiv	w8, w23, w9
   55aa0:	add	w8, w8, #0x1
   55aa4:	mul	w8, w8, w25
   55aa8:	sub	x0, x29, #0x98
   55aac:	str	w27, [sp, #36]
   55ab0:	str	x24, [sp]
   55ab4:	str	w8, [sp, #12]
   55ab8:	bl	4ef14 <ZDICT_trainFromBuffer_cover@@Base+0xbe4>
   55abc:	movi	v0.2d, #0x0
   55ac0:	stp	q0, q0, [x29, #-48]
   55ac4:	stur	q0, [x29, #-64]
   55ac8:	ldr	x8, [x19, #48]
   55acc:	ldp	q1, q0, [x19, #16]
   55ad0:	ldr	q2, [x19]
   55ad4:	add	x0, sp, #0x80
   55ad8:	sub	x1, x29, #0x40
   55adc:	str	x8, [sp, #176]
   55ae0:	stp	q1, q0, [sp, #144]
   55ae4:	str	q2, [sp, #128]
   55ae8:	bl	551ec <ZDICT_trainFromBuffer_fastCover@@Base+0x358>
   55aec:	sub	w8, w28, #0x1
   55af0:	cmp	w28, #0x0
   55af4:	adrp	x9, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55af8:	csel	w8, wzr, w8, eq  // eq = none
   55afc:	cmp	w28, #0x2
   55b00:	str	w8, [x9, #924]
   55b04:	b.ge	55f54 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x6b0>  // b.tcont
   55b08:	ldr	w8, [x29, #12]
   55b0c:	ldr	x24, [sp, #40]
   55b10:	cmp	w20, w8
   55b14:	b.ls	55b48 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x2a4>  // b.plast
   55b18:	cmp	w28, #0x2
   55b1c:	b.ge	55f7c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x6d8>  // b.tcont
   55b20:	ldur	x27, [x29, #-72]
   55b24:	ldur	x20, [x29, #-128]
   55b28:	mov	x0, x27
   55b2c:	bl	55618 <ZDICT_trainFromBuffer_fastCover@@Base+0x784>
   55b30:	cbz	w0, 55ea8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x604>
   55b34:	sub	x0, x29, #0x98
   55b38:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   55b3c:	mov	x0, x24
   55b40:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   55b44:	b	559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55b48:	mov	w9, #0x1                   	// #1
   55b4c:	str	x9, [sp, #48]
   55b50:	ldr	w9, [sp, #56]
   55b54:	adrp	x8, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55b58:	add	x8, x8, #0xde0
   55b5c:	str	wzr, [sp, #20]
   55b60:	ldr	x8, [x8, w9, uxtw #3]
   55b64:	str	x8, [sp, #24]
   55b68:	cmp	w28, #0x3
   55b6c:	b.ge	55e54 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x5b0>  // b.tcont
   55b70:	ldp	x1, x2, [sp, #64]
   55b74:	ldr	w3, [x29, #8]
   55b78:	ldr	w5, [sp, #36]
   55b7c:	ldr	x6, [sp, #24]
   55b80:	add	x0, sp, #0x80
   55b84:	mov	w4, w20
   55b88:	mov	v0.16b, v8.16b
   55b8c:	bl	552a8 <ZDICT_trainFromBuffer_fastCover@@Base+0x414>
   55b90:	mov	x23, x0
   55b94:	bl	55618 <ZDICT_trainFromBuffer_fastCover@@Base+0x784>
   55b98:	cbz	w0, 55bc4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x320>
   55b9c:	cmp	w28, #0x1
   55ba0:	b.ge	55e7c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x5d8>  // b.tcont
   55ba4:	sub	x0, x29, #0x98
   55ba8:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   55bac:	mov	x0, x24
   55bb0:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   55bb4:	mov	w8, #0x1                   	// #1
   55bb8:	mov	x27, x23
   55bbc:	cbnz	w8, 55e3c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x598>
   55bc0:	b	55bcc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x328>
   55bc4:	mov	w8, wzr
   55bc8:	cbnz	w8, 55e3c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x598>
   55bcc:	ldr	w8, [sp, #20]
   55bd0:	cbnz	w8, 55bec <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x348>
   55bd4:	ldr	x1, [sp, #176]
   55bd8:	mov	x0, x26
   55bdc:	mov	w2, w28
   55be0:	bl	4e288 <ZBUFF_recommendedDOutSize@@Base+0x40>
   55be4:	mov	w8, #0x1                   	// #1
   55be8:	str	w8, [sp, #20]
   55bec:	ldr	w23, [sp, #16]
   55bf0:	b	55bf8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x354>
   55bf4:	add	w23, w23, w9
   55bf8:	cmp	w23, w22
   55bfc:	b.hi	55e28 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x584>  // b.pmore
   55c00:	mov	w0, #0x48                  	// #72
   55c04:	bl	4640 <malloc@plt>
   55c08:	cmp	w28, #0x3
   55c0c:	mov	x25, x0
   55c10:	b.ge	55d1c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x478>  // b.tcont
   55c14:	cbz	x25, 55d4c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4a8>
   55c18:	add	x8, sp, #0x80
   55c1c:	str	x8, [x25]
   55c20:	sub	x8, x29, #0x98
   55c24:	stp	x8, x26, [x25, #8]
   55c28:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55c2c:	ldp	q1, q0, [x29, #-64]
   55c30:	ldur	q2, [x29, #-32]
   55c34:	ldr	w24, [x8, #924]
   55c38:	ldr	w2, [sp, #196]
   55c3c:	stur	q1, [x25, #24]
   55c40:	stur	q0, [x25, #40]
   55c44:	stur	q2, [x25, #56]
   55c48:	stp	w23, w20, [x25, #24]
   55c4c:	str	d8, [x25, #40]
   55c50:	str	w21, [x25, #32]
   55c54:	str	wzr, [x25, #48]
   55c58:	str	w24, [x25, #60]
   55c5c:	ldur	q0, [x25, #56]
   55c60:	ldur	q1, [x25, #40]
   55c64:	ldur	q2, [x25, #24]
   55c68:	ldr	w3, [sp, #56]
   55c6c:	add	x0, sp, #0x50
   55c70:	mov	x1, x26
   55c74:	stp	q1, q0, [sp, #96]
   55c78:	str	q2, [sp, #80]
   55c7c:	bl	55230 <ZDICT_trainFromBuffer_fastCover@@Base+0x39c>
   55c80:	cbz	w0, 55cb4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x410>
   55c84:	sub	x0, x29, #0x98
   55c88:	bl	4ef6c <ZDICT_trainFromBuffer_cover@@Base+0xc3c>
   55c8c:	ldr	x24, [sp, #40]
   55c90:	cbz	x24, 55cd0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x42c>
   55c94:	adrp	x1, 55000 <ZDICT_trainFromBuffer_fastCover@@Base+0x16c>
   55c98:	mov	x0, x24
   55c9c:	add	x1, x1, #0xfa8
   55ca0:	mov	x2, x25
   55ca4:	bl	5e20 <ZSTD_initDStream_usingDDict@plt+0x1310>
   55ca8:	cmp	w28, #0x2
   55cac:	b.ge	55ce0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x43c>  // b.tcont
   55cb0:	b	55d08 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x464>
   55cb4:	cmp	w24, #0x1
   55cb8:	b.ge	55db4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x510>  // b.tcont
   55cbc:	mov	x0, x25
   55cc0:	bl	4880 <free@plt>
   55cc4:	ldr	x24, [sp, #40]
   55cc8:	mov	w8, #0x7                   	// #7
   55ccc:	b	55d74 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4d0>
   55cd0:	mov	x0, x25
   55cd4:	bl	55fa8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x704>
   55cd8:	cmp	w28, #0x2
   55cdc:	b.lt	55d08 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x464>  // b.tstop
   55ce0:	bl	4480 <clock@plt>
   55ce4:	cmp	w28, #0x3
   55ce8:	b.gt	55de0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x53c>
   55cec:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55cf0:	ldr	x8, [x8, #960]
   55cf4:	mov	w9, #0x49f1                	// #18929
   55cf8:	movk	w9, #0x2, lsl #16
   55cfc:	sub	x8, x0, x8
   55d00:	cmp	x8, x9
   55d04:	b.ge	55de0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x53c>  // b.tcont
   55d08:	ldr	x9, [sp, #48]
   55d0c:	mov	w8, wzr
   55d10:	add	w9, w9, #0x1
   55d14:	str	x9, [sp, #48]
   55d18:	b	55d74 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4d0>
   55d1c:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55d20:	ldr	x8, [x8, #4048]
   55d24:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   55d28:	add	x1, x1, #0xfeb
   55d2c:	mov	w2, w23
   55d30:	ldr	x0, [x8]
   55d34:	bl	4ae0 <fprintf@plt>
   55d38:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55d3c:	ldr	x8, [x8, #4048]
   55d40:	ldr	x0, [x8]
   55d44:	bl	4920 <fflush@plt>
   55d48:	cbnz	x25, 55c18 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x374>
   55d4c:	cmp	w28, #0x1
   55d50:	b.ge	55d88 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4e4>  // b.tcont
   55d54:	sub	x0, x29, #0x98
   55d58:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   55d5c:	add	x0, sp, #0x80
   55d60:	bl	5586c <ZDICT_trainFromBuffer_fastCover@@Base+0x9d8>
   55d64:	mov	x0, x24
   55d68:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   55d6c:	mov	x27, #0xffffffffffffffc0    	// #-64
   55d70:	mov	w8, #0x1                   	// #1
   55d74:	ldr	w9, [sp, #60]
   55d78:	cmp	w8, #0x7
   55d7c:	b.eq	55bf4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x350>  // b.none
   55d80:	cbz	w8, 55bf4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x350>
   55d84:	b	55e3c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x598>
   55d88:	adrp	x25, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55d8c:	ldr	x25, [x25, #4048]
   55d90:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   55d94:	mov	w1, #0x1e                  	// #30
   55d98:	mov	w2, #0x1                   	// #1
   55d9c:	ldr	x3, [x25]
   55da0:	add	x0, x0, #0xff1
   55da4:	bl	48e0 <fwrite@plt>
   55da8:	ldr	x0, [x25]
   55dac:	bl	4920 <fflush@plt>
   55db0:	b	55d54 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x4b0>
   55db4:	adrp	x24, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55db8:	ldr	x24, [x24, #4048]
   55dbc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55dc0:	mov	w1, #0x1f                  	// #31
   55dc4:	mov	w2, #0x1                   	// #1
   55dc8:	ldr	x3, [x24]
   55dcc:	add	x0, x0, #0xca5
   55dd0:	bl	48e0 <fwrite@plt>
   55dd4:	ldr	x0, [x24]
   55dd8:	bl	4920 <fflush@plt>
   55ddc:	b	55cbc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x418>
   55de0:	bl	4480 <clock@plt>
   55de4:	adrp	x25, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55de8:	adrp	x9, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   55dec:	ldr	x25, [x25, #4048]
   55df0:	str	x0, [x9, #960]
   55df4:	ldr	x9, [sp, #48]
   55df8:	mov	w10, #0x64                  	// #100
   55dfc:	ldr	x8, [x25]
   55e00:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55e04:	mul	w9, w9, w10
   55e08:	ldr	w10, [sp, #12]
   55e0c:	mov	x0, x8
   55e10:	add	x1, x1, #0x10
   55e14:	udiv	w2, w9, w10
   55e18:	bl	4ae0 <fprintf@plt>
   55e1c:	ldr	x0, [x25]
   55e20:	bl	4920 <fflush@plt>
   55e24:	b	55d08 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x464>
   55e28:	sub	x0, x29, #0x98
   55e2c:	bl	4ef38 <ZDICT_trainFromBuffer_cover@@Base+0xc08>
   55e30:	add	x0, sp, #0x80
   55e34:	bl	5586c <ZDICT_trainFromBuffer_fastCover@@Base+0x9d8>
   55e38:	mov	w8, wzr
   55e3c:	cbnz	w8, 559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55e40:	ldr	w8, [x29, #12]
   55e44:	add	w20, w20, #0x2
   55e48:	cmp	w20, w8
   55e4c:	b.ls	55b68 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x2c4>  // b.plast
   55e50:	b	55b18 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x274>
   55e54:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55e58:	ldr	x23, [x23, #4048]
   55e5c:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   55e60:	add	x1, x1, #0xfc7
   55e64:	mov	w2, w20
   55e68:	ldr	x0, [x23]
   55e6c:	bl	4ae0 <fprintf@plt>
   55e70:	ldr	x0, [x23]
   55e74:	bl	4920 <fflush@plt>
   55e78:	b	55b70 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x2cc>
   55e7c:	adrp	x25, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55e80:	ldr	x25, [x25, #4048]
   55e84:	adrp	x0, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   55e88:	mov	w1, #0x1d                  	// #29
   55e8c:	mov	w2, #0x1                   	// #1
   55e90:	ldr	x3, [x25]
   55e94:	add	x0, x0, #0xfcd
   55e98:	bl	48e0 <fwrite@plt>
   55e9c:	ldr	x0, [x25]
   55ea0:	bl	4920 <fflush@plt>
   55ea4:	b	55ba4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x300>
   55ea8:	sub	x8, x29, #0x98
   55eac:	ldp	q0, q1, [x8, #32]
   55eb0:	ldr	q2, [x8, #64]
   55eb4:	ldr	w2, [sp, #36]
   55eb8:	ldr	w3, [sp, #56]
   55ebc:	add	x0, sp, #0x80
   55ec0:	mov	x1, x19
   55ec4:	stp	q0, q1, [sp, #128]
   55ec8:	str	q2, [sp, #160]
   55ecc:	bl	561e0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x93c>
   55ed0:	ldur	x1, [x29, #-136]
   55ed4:	ldr	x0, [sp]
   55ed8:	mov	x2, x20
   55edc:	bl	4420 <memcpy@plt>
   55ee0:	sub	x0, x29, #0x98
   55ee4:	bl	4ef4c <ZDICT_trainFromBuffer_cover@@Base+0xc1c>
   55ee8:	mov	x0, x24
   55eec:	bl	5e14 <ZSTD_initDStream_usingDDict@plt+0x1304>
   55ef0:	mov	x27, x20
   55ef4:	b	559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55ef8:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55efc:	ldr	x19, [x19, #4048]
   55f00:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55f04:	add	x0, x0, #0xcc5
   55f08:	mov	w1, #0x2c                  	// #44
   55f0c:	ldr	x3, [x19]
   55f10:	mov	w2, #0x1                   	// #1
   55f14:	bl	48e0 <fwrite@plt>
   55f18:	ldr	x0, [x19]
   55f1c:	bl	4920 <fflush@plt>
   55f20:	mov	x27, #0xffffffffffffffb8    	// #-72
   55f24:	b	559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55f28:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55f2c:	ldr	x19, [x19, #4048]
   55f30:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   55f34:	add	x1, x1, #0xefd
   55f38:	mov	w2, #0x100                 	// #256
   55f3c:	ldr	x0, [x19]
   55f40:	bl	4ae0 <fprintf@plt>
   55f44:	ldr	x0, [x19]
   55f48:	bl	4920 <fflush@plt>
   55f4c:	mov	x27, #0xffffffffffffffba    	// #-70
   55f50:	b	559a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xfc>
   55f54:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55f58:	ldr	x23, [x23, #4048]
   55f5c:	ldr	w2, [sp, #12]
   55f60:	adrp	x1, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   55f64:	add	x1, x1, #0xf9f
   55f68:	ldr	x0, [x23]
   55f6c:	bl	4ae0 <fprintf@plt>
   55f70:	ldr	x0, [x23]
   55f74:	bl	4920 <fflush@plt>
   55f78:	b	55b08 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x264>
   55f7c:	adrp	x20, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   55f80:	ldr	x20, [x20, #4048]
   55f84:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   55f88:	adrp	x2, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   55f8c:	add	x1, x1, #0x1d
   55f90:	ldr	x0, [x20]
   55f94:	add	x2, x2, #0x414
   55f98:	bl	4ae0 <fprintf@plt>
   55f9c:	ldr	x0, [x20]
   55fa0:	bl	4920 <fflush@plt>
   55fa4:	b	55b20 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x27c>
   55fa8:	sub	sp, sp, #0x100
   55fac:	stp	x29, x30, [sp, #176]
   55fb0:	stp	x24, x23, [sp, #208]
   55fb4:	stp	x22, x21, [sp, #224]
   55fb8:	stp	x20, x19, [sp, #240]
   55fbc:	ldur	q0, [x0, #56]
   55fc0:	ldur	q1, [x0, #40]
   55fc4:	ldur	q2, [x0, #24]
   55fc8:	ldr	x23, [x0]
   55fcc:	add	x29, sp, #0xb0
   55fd0:	stp	q1, q0, [x29, #-32]
   55fd4:	stur	q2, [x29, #-48]
   55fd8:	ldr	w8, [x23, #68]
   55fdc:	ldr	x24, [x0, #16]
   55fe0:	mov	w9, #0x1                   	// #1
   55fe4:	mov	x19, x0
   55fe8:	lsl	x0, x9, x8
   55fec:	mov	w1, #0x2                   	// #2
   55ff0:	str	x25, [sp, #192]
   55ff4:	bl	4700 <calloc@plt>
   55ff8:	mov	x20, x0
   55ffc:	mov	x0, x24
   56000:	bl	4640 <malloc@plt>
   56004:	mov	x22, x0
   56008:	sub	x8, x29, #0x50
   5600c:	mov	x0, #0xffffffffffffffff    	// #-1
   56010:	bl	4f03c <ZDICT_trainFromBuffer_cover@@Base+0xd0c>
   56014:	ldr	w8, [x23, #68]
   56018:	mov	w9, #0x4                   	// #4
   5601c:	lsl	x25, x9, x8
   56020:	mov	x0, x25
   56024:	bl	4640 <malloc@plt>
   56028:	mov	x21, x0
   5602c:	cbz	x20, 56120 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x87c>
   56030:	cbz	x22, 56120 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x87c>
   56034:	cbz	x21, 56120 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x87c>
   56038:	ldr	x1, [x23, #56]
   5603c:	mov	x0, x21
   56040:	mov	x2, x25
   56044:	bl	4420 <memcpy@plt>
   56048:	ldp	q0, q1, [x29, #-48]
   5604c:	ldur	q2, [x29, #-16]
   56050:	add	x4, sp, #0x30
   56054:	mov	x0, x23
   56058:	mov	x1, x21
   5605c:	mov	x2, x22
   56060:	mov	x3, x24
   56064:	mov	x5, x20
   56068:	stp	q0, q1, [sp, #48]
   5606c:	str	q2, [sp, #80]
   56070:	bl	55624 <ZDICT_trainFromBuffer_fastCover@@Base+0x790>
   56074:	ldp	x6, x8, [x23, #24]
   56078:	ldr	w9, [x23, #72]
   5607c:	ldp	q0, q1, [x29, #-48]
   56080:	mov	x10, #0xf5c3                	// #62915
   56084:	movk	x10, #0x5c28, lsl #16
   56088:	movk	x10, #0xc28f, lsl #32
   5608c:	ldr	x5, [x23, #32]
   56090:	mul	x8, x8, x9
   56094:	ldp	x9, x3, [x23, #8]
   56098:	ldr	x2, [x23]
   5609c:	stp	q0, q1, [sp, #48]
   560a0:	ldur	q0, [x29, #-16]
   560a4:	movk	x10, #0x28f5, lsl #48
   560a8:	lsr	x8, x8, #2
   560ac:	umulh	x8, x8, x10
   560b0:	sub	x1, x24, x0
   560b4:	add	x0, x22, x0
   560b8:	lsr	x4, x8, #2
   560bc:	mov	x10, #0xffffffffffffffff    	// #-1
   560c0:	add	x8, sp, #0x10
   560c4:	add	x7, sp, #0x30
   560c8:	str	q0, [sp, #80]
   560cc:	stp	x9, x10, [sp]
   560d0:	bl	4f09c <ZDICT_trainFromBuffer_cover@@Base+0xd6c>
   560d4:	ldr	q0, [sp, #16]
   560d8:	ldr	x8, [sp, #32]
   560dc:	add	x0, sp, #0x30
   560e0:	stur	q0, [x29, #-80]
   560e4:	stur	x8, [x29, #-64]
   560e8:	str	q0, [sp, #48]
   560ec:	str	x8, [sp, #64]
   560f0:	bl	4f048 <ZDICT_trainFromBuffer_cover@@Base+0xd18>
   560f4:	cbz	w0, 56130 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x88c>
   560f8:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   560fc:	ldr	w8, [x8, #924]
   56100:	cmp	w8, #0x1
   56104:	b.lt	56130 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x88c>  // b.tstop
   56108:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5610c:	ldr	x23, [x23, #4048]
   56110:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   56114:	add	x0, x0, #0x1d7
   56118:	mov	w1, #0x1c                  	// #28
   5611c:	b	561c8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x924>
   56120:	adrp	x8, 7d000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x252dc>
   56124:	ldr	w8, [x8, #924]
   56128:	cmp	w8, #0x1
   5612c:	b.ge	561b4 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x910>  // b.tcont
   56130:	mov	x0, x22
   56134:	bl	4880 <free@plt>
   56138:	ldr	x0, [x19, #8]
   5613c:	ldp	q0, q1, [x29, #-48]
   56140:	ldur	q2, [x29, #-16]
   56144:	ldur	q3, [x29, #-80]
   56148:	ldur	x8, [x29, #-64]
   5614c:	add	x1, sp, #0x30
   56150:	add	x2, sp, #0x10
   56154:	stp	q0, q1, [sp, #48]
   56158:	str	q2, [sp, #80]
   5615c:	str	q3, [sp, #16]
   56160:	str	x8, [sp, #32]
   56164:	bl	4ef80 <ZDICT_trainFromBuffer_cover@@Base+0xc50>
   56168:	mov	x0, x19
   5616c:	bl	4880 <free@plt>
   56170:	mov	x0, x20
   56174:	bl	4880 <free@plt>
   56178:	ldur	q0, [x29, #-80]
   5617c:	ldur	x8, [x29, #-64]
   56180:	add	x0, sp, #0x30
   56184:	str	q0, [sp, #48]
   56188:	str	x8, [sp, #64]
   5618c:	bl	4f084 <ZDICT_trainFromBuffer_cover@@Base+0xd54>
   56190:	mov	x0, x21
   56194:	bl	4880 <free@plt>
   56198:	ldp	x20, x19, [sp, #240]
   5619c:	ldp	x22, x21, [sp, #224]
   561a0:	ldp	x24, x23, [sp, #208]
   561a4:	ldr	x25, [sp, #192]
   561a8:	ldp	x29, x30, [sp, #176]
   561ac:	add	sp, sp, #0x100
   561b0:	ret
   561b4:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   561b8:	ldr	x23, [x23, #4048]
   561bc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   561c0:	add	x0, x0, #0x1ac
   561c4:	mov	w1, #0x2a                  	// #42
   561c8:	ldr	x3, [x23]
   561cc:	mov	w2, #0x1                   	// #1
   561d0:	bl	48e0 <fwrite@plt>
   561d4:	ldr	x0, [x23]
   561d8:	bl	4920 <fflush@plt>
   561dc:	b	56130 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x88c>
   561e0:	ldr	w8, [x0]
   561e4:	str	w8, [x1]
   561e8:	ldr	w8, [x0, #4]
   561ec:	str	w8, [x1, #4]
   561f0:	ldr	w8, [x0, #8]
   561f4:	str	w8, [x1, #12]
   561f8:	ldr	w8, [x0, #12]
   561fc:	str	w8, [x1, #16]
   56200:	ldr	x8, [x0, #16]
   56204:	str	w2, [x1, #8]
   56208:	str	w3, [x1, #32]
   5620c:	str	x8, [x1, #24]
   56210:	ldr	w8, [x0, #40]
   56214:	ldr	x9, [x0, #32]
   56218:	str	w8, [x1, #52]
   5621c:	stur	x9, [x1, #44]
   56220:	ldr	w8, [x0, #24]
   56224:	str	w8, [x1, #36]
   56228:	ret
   5622c:	sub	sp, sp, #0x70
   56230:	stp	x29, x30, [sp, #16]
   56234:	stp	x28, x27, [sp, #32]
   56238:	stp	x26, x25, [sp, #48]
   5623c:	stp	x24, x23, [sp, #64]
   56240:	stp	x22, x21, [sp, #80]
   56244:	stp	x20, x19, [sp, #96]
   56248:	ldr	x8, [x1, #32]
   5624c:	add	x29, sp, #0x10
   56250:	str	x1, [sp]
   56254:	cbz	x8, 562ec <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa48>
   56258:	ldr	x10, [sp]
   5625c:	mov	w8, #0x8                   	// #8
   56260:	mov	x20, x0
   56264:	mov	x23, xzr
   56268:	ldp	w22, w21, [x10, #64]
   5626c:	ldr	w9, [x10, #76]
   56270:	ldr	x24, [x10, #8]
   56274:	ldr	x10, [x10, #32]
   56278:	cmp	w22, #0x8
   5627c:	csel	w26, w22, w8, hi  // hi = pmore
   56280:	add	x27, x9, #0x1
   56284:	str	x10, [sp, #8]
   56288:	b	56298 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9f4>
   5628c:	ldr	x8, [sp, #8]
   56290:	cmp	x23, x8
   56294:	b.cs	562ec <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa48>  // b.hs, b.nlast
   56298:	ldr	x28, [x24, x23, lsl #3]
   5629c:	add	x23, x23, #0x1
   562a0:	ldr	x19, [x24, x23, lsl #3]
   562a4:	add	x8, x28, x26
   562a8:	cmp	x8, x19
   562ac:	b.hi	5628c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9e8>  // b.pmore
   562b0:	ldr	x8, [sp]
   562b4:	ldr	x25, [x8]
   562b8:	add	x0, x25, x28
   562bc:	mov	w1, w21
   562c0:	mov	w2, w22
   562c4:	bl	5630c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa68>
   562c8:	lsl	x8, x0, #2
   562cc:	ldr	w9, [x20, x8]
   562d0:	add	x28, x28, x27
   562d4:	add	x10, x26, x28
   562d8:	cmp	x10, x19
   562dc:	add	w9, w9, #0x1
   562e0:	str	w9, [x20, x8]
   562e4:	b.ls	562b8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa14>  // b.plast
   562e8:	b	5628c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0x9e8>
   562ec:	ldp	x20, x19, [sp, #96]
   562f0:	ldp	x22, x21, [sp, #80]
   562f4:	ldp	x24, x23, [sp, #64]
   562f8:	ldp	x26, x25, [sp, #48]
   562fc:	ldp	x28, x27, [sp, #32]
   56300:	ldp	x29, x30, [sp, #16]
   56304:	add	sp, sp, #0x70
   56308:	ret
   5630c:	stp	x29, x30, [sp, #-32]!
   56310:	str	x19, [sp, #16]
   56314:	mov	w19, w1
   56318:	cmp	w2, #0x6
   5631c:	mov	x29, sp
   56320:	b.ne	5632c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa88>  // b.any
   56324:	bl	56350 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xaac>
   56328:	b	56330 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa8c>
   5632c:	bl	56378 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xad4>
   56330:	mov	w8, #0xffffffff            	// #-1
   56334:	lsl	w8, w8, w19
   56338:	ldr	x19, [sp, #16]
   5633c:	mvn	w8, w8
   56340:	sxtw	x8, w8
   56344:	and	x0, x0, x8
   56348:	ldp	x29, x30, [sp], #32
   5634c:	ret
   56350:	stp	x29, x30, [sp, #-32]!
   56354:	str	x19, [sp, #16]
   56358:	mov	x29, sp
   5635c:	mov	w19, w1
   56360:	bl	563bc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb18>
   56364:	mov	w1, w19
   56368:	bl	563a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xafc>
   5636c:	ldr	x19, [sp, #16]
   56370:	ldp	x29, x30, [sp], #32
   56374:	ret
   56378:	stp	x29, x30, [sp, #-32]!
   5637c:	str	x19, [sp, #16]
   56380:	mov	x29, sp
   56384:	mov	w19, w1
   56388:	bl	563bc <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb18>
   5638c:	mov	w1, w19
   56390:	bl	563d8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb34>
   56394:	ldr	x19, [sp, #16]
   56398:	ldp	x29, x30, [sp], #32
   5639c:	ret
   563a0:	mov	x8, #0xbf9b0000            	// #3214606336
   563a4:	movk	x8, #0xbcdc, lsl #32
   563a8:	movk	x8, #0xcf1b, lsl #48
   563ac:	mul	x8, x0, x8
   563b0:	neg	w9, w1
   563b4:	lsr	x0, x8, x9
   563b8:	ret
   563bc:	stp	x29, x30, [sp, #-16]!
   563c0:	mov	x29, sp
   563c4:	bl	563d0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xb2c>
   563c8:	ldp	x29, x30, [sp], #16
   563cc:	ret
   563d0:	ldr	x0, [x0]
   563d4:	ret
   563d8:	mov	x8, #0x6463                	// #25699
   563dc:	movk	x8, #0xb7a5, lsl #16
   563e0:	movk	x8, #0xbcdc, lsl #32
   563e4:	movk	x8, #0xcf1b, lsl #48
   563e8:	mul	x8, x0, x8
   563ec:	neg	w9, w1
   563f0:	lsr	x0, x8, x9
   563f4:	ret
   563f8:	sub	sp, sp, #0x90
   563fc:	stp	x29, x30, [sp, #48]
   56400:	stp	x28, x27, [sp, #64]
   56404:	stp	x26, x25, [sp, #80]
   56408:	stp	x24, x23, [sp, #96]
   5640c:	stp	x22, x21, [sp, #112]
   56410:	stp	x20, x19, [sp, #128]
   56414:	ldr	w19, [x4, #4]
   56418:	ldr	w20, [x0, #68]
   5641c:	mov	x23, x5
   56420:	mov	x22, x0
   56424:	mov	w25, w2
   56428:	cmp	w2, w3
   5642c:	add	x29, sp, #0x30
   56430:	str	x1, [sp, #16]
   56434:	b.cs	56520 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc7c>  // b.hs, b.nlast
   56438:	mov	x9, x22
   5643c:	ldr	w8, [x4]
   56440:	str	x9, [sp, #8]
   56444:	ldr	x9, [x9]
   56448:	mov	w28, wzr
   5644c:	sub	w8, w8, w19
   56450:	mov	w27, wzr
   56454:	mov	w26, wzr
   56458:	mov	w22, wzr
   5645c:	stur	x9, [x29, #-8]
   56460:	mov	w21, w25
   56464:	mov	w9, w3
   56468:	add	w8, w8, #0x1
   5646c:	str	w3, [sp, #4]
   56470:	stur	x9, [x29, #-16]
   56474:	str	x8, [sp, #24]
   56478:	b	564a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xbfc>
   5647c:	add	w25, w25, #0x1
   56480:	ldur	x8, [x29, #-16]
   56484:	cmp	w22, w26
   56488:	csel	w26, w22, w26, hi  // hi = pmore
   5648c:	csinc	w27, w27, w21, ls  // ls = plast
   56490:	csel	w28, w25, w28, hi  // hi = pmore
   56494:	cmp	x8, x24
   56498:	mov	x21, x24
   5649c:	b.eq	56538 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc94>  // b.none
   564a0:	ldur	x8, [x29, #-8]
   564a4:	mov	w1, w20
   564a8:	mov	w2, w19
   564ac:	add	x0, x8, x21
   564b0:	bl	5630c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa68>
   564b4:	ldrh	w8, [x23, x0, lsl #1]
   564b8:	cbnz	w8, 564c8 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xc24>
   564bc:	ldr	x9, [sp, #16]
   564c0:	ldr	w9, [x9, x0, lsl #2]
   564c4:	add	w22, w9, w22
   564c8:	ldr	x9, [sp, #24]
   564cc:	add	x24, x21, #0x1
   564d0:	add	w8, w8, #0x1
   564d4:	strh	w8, [x23, x0, lsl #1]
   564d8:	add	w9, w9, w25
   564dc:	cmp	w9, w21
   564e0:	b.ne	56480 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xbdc>  // b.any
   564e4:	ldur	x8, [x29, #-8]
   564e8:	mov	w1, w20
   564ec:	mov	w2, w19
   564f0:	add	x0, x8, w25, uxtw
   564f4:	bl	5630c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa68>
   564f8:	lsl	x8, x0, #1
   564fc:	ldrh	w9, [x23, x8]
   56500:	sub	w9, w9, #0x1
   56504:	tst	w9, #0xffff
   56508:	strh	w9, [x23, x8]
   5650c:	b.ne	5647c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xbd8>  // b.any
   56510:	ldr	x8, [sp, #16]
   56514:	ldr	w8, [x8, x0, lsl #2]
   56518:	sub	w22, w22, w8
   5651c:	b	5647c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xbd8>
   56520:	mov	x26, xzr
   56524:	mov	w27, wzr
   56528:	mov	w28, wzr
   5652c:	cmp	w25, w3
   56530:	b.cc	5654c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xca8>  // b.lo, b.ul, b.last
   56534:	b	5658c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xce8>
   56538:	ldr	x22, [sp, #8]
   5653c:	ldr	w3, [sp, #4]
   56540:	mov	w26, w26
   56544:	cmp	w25, w3
   56548:	b.cs	5658c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xce8>  // b.hs, b.nlast
   5654c:	ldr	x8, [x22]
   56550:	mov	w9, w25
   56554:	mov	w10, w3
   56558:	sub	x21, x10, x9
   5655c:	add	x24, x8, x9
   56560:	mov	x0, x24
   56564:	mov	w1, w20
   56568:	mov	w2, w19
   5656c:	bl	5630c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa68>
   56570:	lsl	x8, x0, #1
   56574:	ldrh	w9, [x23, x8]
   56578:	subs	x21, x21, #0x1
   5657c:	add	x24, x24, #0x1
   56580:	sub	w9, w9, #0x1
   56584:	strh	w9, [x23, x8]
   56588:	b.ne	56560 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xcbc>  // b.any
   5658c:	ldr	x23, [sp, #16]
   56590:	cmp	w28, w27
   56594:	b.eq	565c0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xd1c>  // b.none
   56598:	ldr	x21, [x22]
   5659c:	mov	w22, w28
   565a0:	add	x0, x21, w22, uxtw
   565a4:	mov	w1, w20
   565a8:	mov	w2, w19
   565ac:	bl	5630c <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xa68>
   565b0:	add	w22, w22, #0x1
   565b4:	cmp	w27, w22
   565b8:	str	wzr, [x23, x0, lsl #2]
   565bc:	b.ne	565a0 <ZDICT_optimizeTrainFromBuffer_fastCover@@Base+0xcfc>  // b.any
   565c0:	mov	w0, w28
   565c4:	bfi	x0, x27, #32, #32
   565c8:	mov	x1, x26
   565cc:	ldp	x20, x19, [sp, #128]
   565d0:	ldp	x22, x21, [sp, #112]
   565d4:	ldp	x24, x23, [sp, #96]
   565d8:	ldp	x26, x25, [sp, #80]
   565dc:	ldp	x28, x27, [sp, #64]
   565e0:	ldp	x29, x30, [sp, #48]
   565e4:	add	sp, sp, #0x90
   565e8:	ret

00000000000565ec <ZDICT_isError@@Base>:
   565ec:	stp	x29, x30, [sp, #-16]!
   565f0:	mov	x29, sp
   565f4:	bl	56600 <ZDICT_isError@@Base+0x14>
   565f8:	ldp	x29, x30, [sp], #16
   565fc:	ret
   56600:	cmn	x0, #0x78
   56604:	cset	w0, hi  // hi = pmore
   56608:	ret

000000000005660c <ZDICT_getErrorName@@Base>:
   5660c:	stp	x29, x30, [sp, #-16]!
   56610:	mov	x29, sp
   56614:	bl	56620 <ZDICT_getErrorName@@Base+0x14>
   56618:	ldp	x29, x30, [sp], #16
   5661c:	ret
   56620:	stp	x29, x30, [sp, #-16]!
   56624:	mov	x29, sp
   56628:	bl	57d40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c>
   5662c:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
   56630:	ldp	x29, x30, [sp], #16
   56634:	ret

0000000000056638 <ZDICT_getDictID@@Base>:
   56638:	stp	x29, x30, [sp, #-32]!
   5663c:	cmp	x1, #0x8
   56640:	str	x19, [sp, #16]
   56644:	mov	x29, sp
   56648:	b.cc	56670 <ZDICT_getDictID@@Base+0x38>  // b.lo, b.ul, b.last
   5664c:	mov	x19, x0
   56650:	bl	56680 <ZDICT_getDictID@@Base+0x48>
   56654:	mov	w8, #0xa437                	// #42039
   56658:	movk	w8, #0xec30, lsl #16
   5665c:	cmp	w0, w8
   56660:	b.ne	56670 <ZDICT_getDictID@@Base+0x38>  // b.any
   56664:	add	x0, x19, #0x4
   56668:	bl	56680 <ZDICT_getDictID@@Base+0x48>
   5666c:	b	56674 <ZDICT_getDictID@@Base+0x3c>
   56670:	mov	w0, wzr
   56674:	ldr	x19, [sp, #16]
   56678:	ldp	x29, x30, [sp], #32
   5667c:	ret
   56680:	stp	x29, x30, [sp, #-16]!
   56684:	mov	x29, sp
   56688:	bl	57d68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44>
   5668c:	ldp	x29, x30, [sp], #16
   56690:	ret

0000000000056694 <ZDICT_finalizeDictionary@@Base>:
   56694:	sub	sp, sp, #0x170
   56698:	stp	x29, x30, [sp, #272]
   5669c:	add	x29, sp, #0x110
   566a0:	ldr	w8, [x29, #96]
   566a4:	mov	w9, #0x3                   	// #3
   566a8:	stp	x26, x25, [sp, #304]
   566ac:	stp	x28, x27, [sp, #288]
   566b0:	cmp	w8, #0x0
   566b4:	csel	w26, w9, w8, eq  // eq = none
   566b8:	cmp	x1, x3
   566bc:	stp	x24, x23, [sp, #320]
   566c0:	stp	x22, x21, [sp, #336]
   566c4:	stp	x20, x19, [sp, #352]
   566c8:	b.cs	566d4 <ZDICT_finalizeDictionary@@Base+0x40>  // b.hs, b.nlast
   566cc:	mov	x23, #0xffffffffffffffba    	// #-70
   566d0:	b	567d8 <ZDICT_finalizeDictionary@@Base+0x144>
   566d4:	mov	x21, x3
   566d8:	cmp	x3, #0x80
   566dc:	b.cs	566e8 <ZDICT_finalizeDictionary@@Base+0x54>  // b.hs, b.nlast
   566e0:	mov	x23, #0xffffffffffffffb8    	// #-72
   566e4:	b	567d8 <ZDICT_finalizeDictionary@@Base+0x144>
   566e8:	mov	x22, x1
   566ec:	cmp	x1, #0x100
   566f0:	b.cc	566cc <ZDICT_finalizeDictionary@@Base+0x38>  // b.lo, b.ul, b.last
   566f4:	ldp	w27, w28, [x29, #100]
   566f8:	mov	w1, #0xa437                	// #42039
   566fc:	mov	x19, x0
   56700:	add	x0, sp, #0x8
   56704:	movk	w1, #0xec30, lsl #16
   56708:	mov	w23, w6
   5670c:	mov	x24, x5
   56710:	mov	x25, x4
   56714:	mov	x20, x2
   56718:	bl	5684c <ZDICT_finalizeDictionary@@Base+0x1b8>
   5671c:	mov	x0, x20
   56720:	mov	x1, x21
   56724:	mov	x2, xzr
   56728:	bl	6174 <ZSTD_initDStream_usingDDict@plt+0x1664>
   5672c:	mov	x8, #0x8000800080008000    	// #-9223231297218904064
   56730:	movk	x8, #0x8001
   56734:	umulh	x8, x0, x8
   56738:	mov	w9, #0x7fff8000            	// #2147450880
   5673c:	lsr	x8, x8, #30
   56740:	msub	w8, w8, w9, w0
   56744:	cmp	w28, #0x0
   56748:	add	w8, w8, #0x8, lsl #12
   5674c:	csel	w1, w8, w28, eq  // eq = none
   56750:	add	x28, sp, #0x8
   56754:	add	x0, x28, #0x4
   56758:	bl	5684c <ZDICT_finalizeDictionary@@Base+0x1b8>
   5675c:	cmp	w27, #0x2
   56760:	b.cs	567fc <ZDICT_finalizeDictionary@@Base+0x168>  // b.hs, b.nlast
   56764:	add	x0, x28, #0x8
   56768:	mov	w1, #0xf8                  	// #248
   5676c:	mov	w2, w26
   56770:	mov	x3, x25
   56774:	mov	x4, x24
   56778:	mov	w5, w23
   5677c:	mov	x6, x20
   56780:	mov	x7, x21
   56784:	str	w27, [sp]
   56788:	bl	56860 <ZDICT_finalizeDictionary@@Base+0x1cc>
   5678c:	mov	x23, x0
   56790:	bl	4af0 <ZDICT_isError@plt>
   56794:	add	x8, x23, #0x8
   56798:	cmp	w0, #0x0
   5679c:	mov	w9, #0x8                   	// #8
   567a0:	csel	x24, x8, x9, eq  // eq = none
   567a4:	cbnz	w0, 567d8 <ZDICT_finalizeDictionary@@Base+0x144>
   567a8:	add	x8, x24, x21
   567ac:	sub	x9, x22, x24
   567b0:	cmp	x8, x22
   567b4:	csel	x2, x9, x21, hi  // hi = pmore
   567b8:	add	x0, x19, x24
   567bc:	mov	x1, x20
   567c0:	add	x23, x2, x24
   567c4:	bl	4450 <memmove@plt>
   567c8:	add	x1, sp, #0x8
   567cc:	mov	x0, x19
   567d0:	mov	x2, x24
   567d4:	bl	4420 <memcpy@plt>
   567d8:	mov	x0, x23
   567dc:	ldp	x20, x19, [sp, #352]
   567e0:	ldp	x22, x21, [sp, #336]
   567e4:	ldp	x24, x23, [sp, #320]
   567e8:	ldp	x26, x25, [sp, #304]
   567ec:	ldp	x28, x27, [sp, #288]
   567f0:	ldp	x29, x30, [sp, #272]
   567f4:	add	sp, sp, #0x170
   567f8:	ret
   567fc:	adrp	x28, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56800:	ldr	x28, [x28, #4048]
   56804:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   56808:	adrp	x2, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5680c:	add	x1, x1, #0xe38
   56810:	ldr	x0, [x28]
   56814:	add	x2, x2, #0x414
   56818:	bl	4ae0 <fprintf@plt>
   5681c:	ldr	x0, [x28]
   56820:	bl	4920 <fflush@plt>
   56824:	ldr	x3, [x28]
   56828:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5682c:	add	x0, x0, #0xe3f
   56830:	mov	w1, #0x10                  	// #16
   56834:	mov	w2, #0x1                   	// #1
   56838:	bl	48e0 <fwrite@plt>
   5683c:	ldr	x0, [x28]
   56840:	add	x28, sp, #0x8
   56844:	bl	4920 <fflush@plt>
   56848:	b	56764 <ZDICT_finalizeDictionary@@Base+0xd0>
   5684c:	stp	x29, x30, [sp, #-16]!
   56850:	mov	x29, sp
   56854:	bl	57d70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c>
   56858:	ldp	x29, x30, [sp], #16
   5685c:	ret
   56860:	stp	x29, x30, [sp, #-96]!
   56864:	stp	x28, x27, [sp, #16]
   56868:	stp	x26, x25, [sp, #32]
   5686c:	stp	x24, x23, [sp, #48]
   56870:	stp	x22, x21, [sp, #64]
   56874:	stp	x20, x19, [sp, #80]
   56878:	mov	x29, sp
   5687c:	sub	sp, sp, #0x1, lsl #12
   56880:	sub	sp, sp, #0xb60
   56884:	mov	x19, x7
   56888:	mov	x22, x0
   5688c:	add	w0, w19, #0x20, lsl #12
   56890:	mov	x20, x6
   56894:	mov	w27, w5
   56898:	mov	x25, x4
   5689c:	mov	x26, x3
   568a0:	mov	w21, w2
   568a4:	mov	x23, x1
   568a8:	bl	57d78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x54>
   568ac:	mov	w24, w0
   568b0:	mov	x0, x25
   568b4:	mov	w1, w27
   568b8:	bl	575bc <ZDICT_finalizeDictionary@@Base+0xf28>
   568bc:	cmp	w27, #0x0
   568c0:	cinc	w9, w27, eq  // eq = none
   568c4:	cmp	w24, #0x1e
   568c8:	b.ls	568e0 <ZDICT_finalizeDictionary@@Base+0x24c>  // b.plast
   568cc:	mov	x21, xzr
   568d0:	mov	x20, xzr
   568d4:	mov	x19, xzr
   568d8:	mov	x24, #0xffffffffffffffde    	// #-34
   568dc:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   568e0:	str	x22, [sp, #24]
   568e4:	ldr	w22, [x29, #96]
   568e8:	udiv	x28, x0, x9
   568ec:	add	x9, sp, #0x1, lsl #12
   568f0:	mov	x8, xzr
   568f4:	add	x9, x9, #0x758
   568f8:	mov	w10, #0x1                   	// #1
   568fc:	str	w10, [x9, x8]
   56900:	add	x8, x8, #0x4
   56904:	cmp	x8, #0x400
   56908:	b.ne	568fc <ZDICT_finalizeDictionary@@Base+0x268>  // b.any
   5690c:	add	x9, sp, #0x1, lsl #12
   56910:	mov	w8, wzr
   56914:	add	x9, x9, #0x2d4
   56918:	mov	w10, #0x1                   	// #1
   5691c:	str	w10, [x9, w8, uxtw #2]
   56920:	add	w8, w8, #0x1
   56924:	cmp	w8, w24
   56928:	b.ls	5691c <ZDICT_finalizeDictionary@@Base+0x288>  // b.plast
   5692c:	add	x9, sp, #0x1, lsl #12
   56930:	mov	x8, xzr
   56934:	add	x9, x9, #0x1c0
   56938:	mov	w10, #0x1                   	// #1
   5693c:	str	w10, [x9, x8]
   56940:	add	x8, x8, #0x4
   56944:	cmp	x8, #0xd4
   56948:	b.ne	5693c <ZDICT_finalizeDictionary@@Base+0x2a8>  // b.any
   5694c:	add	x9, sp, #0x1, lsl #12
   56950:	mov	x8, xzr
   56954:	add	x9, x9, #0xc0
   56958:	mov	w10, #0x1                   	// #1
   5695c:	str	w10, [x9, x8]
   56960:	add	x8, x8, #0x4
   56964:	cmp	x8, #0x90
   56968:	b.ne	5695c <ZDICT_finalizeDictionary@@Base+0x2c8>  // b.any
   5696c:	add	x0, sp, #0x78
   56970:	mov	w2, #0x1000                	// #4096
   56974:	mov	w1, wzr
   56978:	bl	46a0 <memset@plt>
   5697c:	mov	w8, #0x1                   	// #1
   56980:	cmp	w21, #0x0
   56984:	mov	w9, #0x3                   	// #3
   56988:	str	w8, [sp, #152]
   5698c:	str	w8, [sp, #136]
   56990:	str	w8, [sp, #124]
   56994:	add	x8, sp, #0x1, lsl #12
   56998:	movi	v0.2d, #0x0
   5699c:	csel	w0, w9, w21, eq  // eq = none
   569a0:	add	x8, x8, #0x350
   569a4:	mov	x1, x28
   569a8:	mov	x2, x19
   569ac:	stp	q0, q0, [sp, #80]
   569b0:	bl	4a20 <ZSTD_getParams@plt>
   569b4:	ldr	q0, [sp, #4960]
   569b8:	ldr	q1, [sp, #4944]
   569bc:	ldr	x8, [sp, #4976]
   569c0:	add	x4, sp, #0x1, lsl #12
   569c4:	add	x5, sp, #0x1, lsl #12
   569c8:	stp	q1, q0, [sp, #32]
   569cc:	ldur	q0, [sp, #44]
   569d0:	str	x8, [sp, #64]
   569d4:	add	x8, sp, #0x1, lsl #12
   569d8:	add	x8, x8, #0x25d
   569dc:	add	x4, x4, #0x350
   569e0:	add	x5, x5, #0x150
   569e4:	mov	w2, #0x1                   	// #1
   569e8:	mov	w3, #0x1                   	// #1
   569ec:	mov	x0, x20
   569f0:	mov	x1, x19
   569f4:	str	xzr, [sp, #4440]
   569f8:	str	xzr, [sp, #4432]
   569fc:	str	q1, [sp, #4944]
   56a00:	stur	q0, [x8, #255]
   56a04:	str	xzr, [sp, #4448]
   56a08:	bl	47b0 <ZSTD_createCDict_advanced@plt>
   56a0c:	mov	x19, x0
   56a10:	bl	46c0 <ZSTD_createCCtx@plt>
   56a14:	mov	x20, x0
   56a18:	mov	w0, #0x20000               	// #131072
   56a1c:	bl	4640 <malloc@plt>
   56a20:	mov	x21, x0
   56a24:	cbz	x19, 56af0 <ZDICT_finalizeDictionary@@Base+0x45c>
   56a28:	cbz	x20, 56af0 <ZDICT_finalizeDictionary@@Base+0x45c>
   56a2c:	cbz	x21, 56af0 <ZDICT_finalizeDictionary@@Base+0x45c>
   56a30:	cbz	w27, 56ab4 <ZDICT_finalizeDictionary@@Base+0x420>
   56a34:	mov	x28, xzr
   56a38:	mov	w27, w27
   56a3c:	ldr	x8, [x25]
   56a40:	ldp	q0, q1, [sp, #32]
   56a44:	ldr	x9, [sp, #64]
   56a48:	add	x0, sp, #0x1, lsl #12
   56a4c:	add	x1, sp, #0x1, lsl #12
   56a50:	add	x2, sp, #0x1, lsl #12
   56a54:	add	x3, sp, #0x1, lsl #12
   56a58:	add	x4, sp, #0x1, lsl #12
   56a5c:	add	x5, sp, #0x1, lsl #12
   56a60:	add	x7, x26, x28
   56a64:	add	x0, x0, #0x150
   56a68:	add	x1, x1, #0x350
   56a6c:	add	x2, x2, #0x758
   56a70:	add	x3, x3, #0x2d4
   56a74:	add	x4, x4, #0x1c0
   56a78:	add	x5, x5, #0xc0
   56a7c:	add	x6, sp, #0x78
   56a80:	str	x19, [sp, #4432]
   56a84:	str	x20, [sp, #4440]
   56a88:	str	x21, [sp, #4448]
   56a8c:	str	q0, [sp, #4944]
   56a90:	str	q1, [sp, #4960]
   56a94:	str	x9, [sp, #4976]
   56a98:	str	w22, [sp, #8]
   56a9c:	str	x8, [sp]
   56aa0:	bl	57d84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x60>
   56aa4:	ldr	x8, [x25], #8
   56aa8:	subs	x27, x27, #0x1
   56aac:	add	x28, x8, x28
   56ab0:	b.ne	56a3c <ZDICT_finalizeDictionary@@Base+0x3a8>  // b.any
   56ab4:	add	x0, sp, #0x1, lsl #12
   56ab8:	add	x1, sp, #0x1, lsl #12
   56abc:	add	x0, x0, #0x350
   56ac0:	add	x1, x1, #0x758
   56ac4:	mov	w2, #0xff                  	// #255
   56ac8:	mov	w3, #0xb                   	// #11
   56acc:	bl	937c <ZSTD_getErrorString@@Base+0x2490>
   56ad0:	mov	x26, x0
   56ad4:	bl	56600 <ZDICT_isError@@Base+0x14>
   56ad8:	cbz	w0, 56afc <ZDICT_finalizeDictionary@@Base+0x468>
   56adc:	cbnz	w22, 56cd4 <ZDICT_finalizeDictionary@@Base+0x640>
   56ae0:	mov	w8, wzr
   56ae4:	mov	w28, #0xb                   	// #11
   56ae8:	cbz	w8, 56ec8 <ZDICT_finalizeDictionary@@Base+0x834>
   56aec:	b	56b48 <ZDICT_finalizeDictionary@@Base+0x4b4>
   56af0:	cbnz	w22, 56ca4 <ZDICT_finalizeDictionary@@Base+0x610>
   56af4:	mov	x24, #0xffffffffffffffc0    	// #-64
   56af8:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56afc:	cmp	x26, #0x8
   56b00:	b.ne	56b38 <ZDICT_finalizeDictionary@@Base+0x4a4>  // b.any
   56b04:	cmp	w22, #0x2
   56b08:	b.cs	56d7c <ZDICT_finalizeDictionary@@Base+0x6e8>  // b.hs, b.nlast
   56b0c:	add	x0, sp, #0x1, lsl #12
   56b10:	add	x0, x0, #0x758
   56b14:	bl	57fa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x284>
   56b18:	add	x0, sp, #0x1, lsl #12
   56b1c:	add	x1, sp, #0x1, lsl #12
   56b20:	add	x0, x0, #0x350
   56b24:	add	x1, x1, #0x758
   56b28:	mov	w2, #0xff                  	// #255
   56b2c:	mov	w3, #0xb                   	// #11
   56b30:	bl	937c <ZSTD_getErrorString@@Base+0x2490>
   56b34:	mov	x26, x0
   56b38:	mov	w8, #0x1                   	// #1
   56b3c:	mov	w28, w26
   56b40:	mov	x26, xzr
   56b44:	cbz	w8, 56ec8 <ZDICT_finalizeDictionary@@Base+0x834>
   56b48:	mov	w25, #0x1                   	// #1
   56b4c:	add	x27, sp, #0x78
   56b50:	ldr	w2, [x27, x25, lsl #2]
   56b54:	add	x0, sp, #0x50
   56b58:	mov	w1, w25
   56b5c:	bl	57fd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b4>
   56b60:	add	x25, x25, #0x1
   56b64:	cmp	x25, #0x400
   56b68:	b.ne	56b50 <ZDICT_finalizeDictionary@@Base+0x4bc>  // b.any
   56b6c:	add	x10, sp, #0x1, lsl #12
   56b70:	mov	w8, wzr
   56b74:	mov	w9, wzr
   56b78:	add	x10, x10, #0x2d4
   56b7c:	ldr	w11, [x10, w9, uxtw #2]
   56b80:	add	w9, w9, #0x1
   56b84:	cmp	w9, w24
   56b88:	add	w8, w11, w8
   56b8c:	b.ls	56b7c <ZDICT_finalizeDictionary@@Base+0x4e8>  // b.plast
   56b90:	add	x0, sp, #0x1, lsl #12
   56b94:	add	x2, sp, #0x1, lsl #12
   56b98:	mov	w3, w8
   56b9c:	add	x0, x0, #0x294
   56ba0:	add	x2, x2, #0x2d4
   56ba4:	mov	w1, #0x8                   	// #8
   56ba8:	mov	w4, w24
   56bac:	bl	7694 <ZSTD_getErrorString@@Base+0x7a8>
   56bb0:	mov	x24, x0
   56bb4:	bl	56600 <ZDICT_isError@@Base+0x14>
   56bb8:	cbz	w0, 56bec <ZDICT_finalizeDictionary@@Base+0x558>
   56bbc:	cbz	w22, 56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56bc0:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56bc4:	ldr	x22, [x22, #4048]
   56bc8:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56bcc:	add	x0, x0, #0x15e
   56bd0:	mov	w1, #0x2c                  	// #44
   56bd4:	ldr	x3, [x22]
   56bd8:	mov	w2, #0x1                   	// #1
   56bdc:	bl	48e0 <fwrite@plt>
   56be0:	ldr	x0, [x22]
   56be4:	bl	4920 <fflush@plt>
   56be8:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56bec:	add	x10, sp, #0x1, lsl #12
   56bf0:	mov	x9, xzr
   56bf4:	mov	w8, wzr
   56bf8:	add	x10, x10, #0x1c0
   56bfc:	ldr	w11, [x10, x9]
   56c00:	add	x9, x9, #0x4
   56c04:	cmp	x9, #0xd4
   56c08:	add	w8, w11, w8
   56c0c:	b.ne	56bfc <ZDICT_finalizeDictionary@@Base+0x568>  // b.any
   56c10:	add	x0, sp, #0x1, lsl #12
   56c14:	add	x2, sp, #0x1, lsl #12
   56c18:	mov	w3, w8
   56c1c:	add	x0, x0, #0x150
   56c20:	add	x2, x2, #0x1c0
   56c24:	mov	w1, #0x9                   	// #9
   56c28:	mov	w4, #0x34                  	// #52
   56c2c:	bl	7694 <ZSTD_getErrorString@@Base+0x7a8>
   56c30:	mov	x27, x0
   56c34:	bl	56600 <ZDICT_isError@@Base+0x14>
   56c38:	cbz	w0, 56c48 <ZDICT_finalizeDictionary@@Base+0x5b4>
   56c3c:	cbnz	w22, 56dc8 <ZDICT_finalizeDictionary@@Base+0x734>
   56c40:	mov	x24, x27
   56c44:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56c48:	add	x10, sp, #0x1, lsl #12
   56c4c:	mov	x9, xzr
   56c50:	mov	w8, wzr
   56c54:	add	x10, x10, #0xc0
   56c58:	ldr	w11, [x10, x9]
   56c5c:	add	x9, x9, #0x4
   56c60:	cmp	x9, #0x90
   56c64:	add	w8, w11, w8
   56c68:	b.ne	56c58 <ZDICT_finalizeDictionary@@Base+0x5c4>  // b.any
   56c6c:	add	x0, sp, #0x1, lsl #12
   56c70:	add	x2, sp, #0x1, lsl #12
   56c74:	mov	w3, w8
   56c78:	add	x0, x0, #0x78
   56c7c:	add	x2, x2, #0xc0
   56c80:	mov	w1, #0x9                   	// #9
   56c84:	mov	w4, #0x23                  	// #35
   56c88:	bl	7694 <ZSTD_getErrorString@@Base+0x7a8>
   56c8c:	mov	x25, x0
   56c90:	bl	56600 <ZDICT_isError@@Base+0x14>
   56c94:	cbz	w0, 56d00 <ZDICT_finalizeDictionary@@Base+0x66c>
   56c98:	cbnz	w22, 56e84 <ZDICT_finalizeDictionary@@Base+0x7f0>
   56c9c:	mov	x24, x25
   56ca0:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56ca4:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56ca8:	ldr	x22, [x22, #4048]
   56cac:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56cb0:	add	x0, x0, #0xcd
   56cb4:	mov	w1, #0x13                  	// #19
   56cb8:	ldr	x3, [x22]
   56cbc:	mov	w2, #0x1                   	// #1
   56cc0:	bl	48e0 <fwrite@plt>
   56cc4:	ldr	x0, [x22]
   56cc8:	bl	4920 <fflush@plt>
   56ccc:	mov	x24, #0xffffffffffffffc0    	// #-64
   56cd0:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56cd4:	adrp	x25, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56cd8:	ldr	x25, [x25, #4048]
   56cdc:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56ce0:	add	x0, x0, #0xe1
   56ce4:	mov	w1, #0x18                  	// #24
   56ce8:	ldr	x3, [x25]
   56cec:	mov	w2, #0x1                   	// #1
   56cf0:	bl	48e0 <fwrite@plt>
   56cf4:	ldr	x0, [x25]
   56cf8:	bl	4920 <fflush@plt>
   56cfc:	b	56ae0 <ZDICT_finalizeDictionary@@Base+0x44c>
   56d00:	str	x25, [sp, #16]
   56d04:	ldr	x25, [sp, #24]
   56d08:	add	x2, sp, #0x1, lsl #12
   56d0c:	add	x2, x2, #0x350
   56d10:	mov	w3, #0xff                  	// #255
   56d14:	mov	x0, x25
   56d18:	mov	x1, x23
   56d1c:	mov	w4, w28
   56d20:	bl	87a8 <ZSTD_getErrorString@@Base+0x18bc>
   56d24:	mov	x28, x0
   56d28:	bl	56600 <ZDICT_isError@@Base+0x14>
   56d2c:	cbz	w0, 56da8 <ZDICT_finalizeDictionary@@Base+0x714>
   56d30:	cbnz	w22, 56f34 <ZDICT_finalizeDictionary@@Base+0x8a0>
   56d34:	mov	w8, wzr
   56d38:	cbz	w8, 56dc0 <ZDICT_finalizeDictionary@@Base+0x72c>
   56d3c:	ldr	x25, [sp, #24]
   56d40:	add	x2, sp, #0x1, lsl #12
   56d44:	add	x2, x2, #0x294
   56d48:	mov	w3, #0x1e                  	// #30
   56d4c:	mov	x0, x25
   56d50:	mov	x1, x23
   56d54:	mov	w4, w24
   56d58:	bl	7228 <ZSTD_getErrorString@@Base+0x33c>
   56d5c:	mov	x24, x0
   56d60:	bl	56600 <ZDICT_isError@@Base+0x14>
   56d64:	cbz	w0, 56df8 <ZDICT_finalizeDictionary@@Base+0x764>
   56d68:	cbnz	w22, 56f94 <ZDICT_finalizeDictionary@@Base+0x900>
   56d6c:	mov	w8, wzr
   56d70:	ldr	x25, [sp, #16]
   56d74:	cbz	w8, 56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56d78:	b	56e14 <ZDICT_finalizeDictionary@@Base+0x780>
   56d7c:	adrp	x25, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56d80:	ldr	x25, [x25, #4048]
   56d84:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56d88:	add	x0, x0, #0xfa
   56d8c:	mov	w1, #0x63                  	// #99
   56d90:	ldr	x3, [x25]
   56d94:	mov	w2, #0x1                   	// #1
   56d98:	bl	48e0 <fwrite@plt>
   56d9c:	ldr	x0, [x25]
   56da0:	bl	4920 <fflush@plt>
   56da4:	b	56b0c <ZDICT_finalizeDictionary@@Base+0x478>
   56da8:	add	x25, x25, x28
   56dac:	sub	x23, x23, x28
   56db0:	add	x28, x28, x26
   56db4:	mov	w8, #0x1                   	// #1
   56db8:	str	x25, [sp, #24]
   56dbc:	cbnz	w8, 56d3c <ZDICT_finalizeDictionary@@Base+0x6a8>
   56dc0:	mov	x24, x28
   56dc4:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56dc8:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56dcc:	ldr	x22, [x22, #4048]
   56dd0:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56dd4:	add	x0, x0, #0x18b
   56dd8:	mov	w1, #0x30                  	// #48
   56ddc:	ldr	x3, [x22]
   56de0:	mov	w2, #0x1                   	// #1
   56de4:	bl	48e0 <fwrite@plt>
   56de8:	ldr	x0, [x22]
   56dec:	bl	4920 <fflush@plt>
   56df0:	mov	x24, x27
   56df4:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56df8:	add	x25, x25, x24
   56dfc:	sub	x23, x23, x24
   56e00:	add	x24, x24, x28
   56e04:	mov	w8, #0x1                   	// #1
   56e08:	str	x25, [sp, #24]
   56e0c:	ldr	x25, [sp, #16]
   56e10:	cbz	w8, 56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56e14:	ldr	x28, [sp, #24]
   56e18:	add	x2, sp, #0x1, lsl #12
   56e1c:	add	x2, x2, #0x150
   56e20:	mov	w3, #0x34                  	// #52
   56e24:	mov	x0, x28
   56e28:	mov	x1, x23
   56e2c:	mov	w4, w27
   56e30:	bl	7228 <ZSTD_getErrorString@@Base+0x33c>
   56e34:	mov	x26, x0
   56e38:	bl	56600 <ZDICT_isError@@Base+0x14>
   56e3c:	cbz	w0, 56eb4 <ZDICT_finalizeDictionary@@Base+0x820>
   56e40:	cbnz	w22, 56fc0 <ZDICT_finalizeDictionary@@Base+0x92c>
   56e44:	mov	w8, wzr
   56e48:	cbz	w8, 56ec8 <ZDICT_finalizeDictionary@@Base+0x834>
   56e4c:	add	x2, sp, #0x1, lsl #12
   56e50:	add	x2, x2, #0x78
   56e54:	mov	w3, #0x23                  	// #35
   56e58:	mov	x0, x28
   56e5c:	mov	x1, x23
   56e60:	mov	w4, w25
   56e64:	bl	7228 <ZSTD_getErrorString@@Base+0x33c>
   56e68:	mov	x24, x0
   56e6c:	bl	56600 <ZDICT_isError@@Base+0x14>
   56e70:	cbz	w0, 56f0c <ZDICT_finalizeDictionary@@Base+0x878>
   56e74:	cbnz	w22, 56ff4 <ZDICT_finalizeDictionary@@Base+0x960>
   56e78:	mov	w8, wzr
   56e7c:	cbz	w8, 56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56e80:	b	56f20 <ZDICT_finalizeDictionary@@Base+0x88c>
   56e84:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56e88:	ldr	x22, [x22, #4048]
   56e8c:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56e90:	add	x0, x0, #0x1bc
   56e94:	mov	w1, #0x2e                  	// #46
   56e98:	ldr	x3, [x22]
   56e9c:	mov	w2, #0x1                   	// #1
   56ea0:	bl	48e0 <fwrite@plt>
   56ea4:	ldr	x0, [x22]
   56ea8:	bl	4920 <fflush@plt>
   56eac:	mov	x24, x25
   56eb0:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56eb4:	add	x28, x28, x26
   56eb8:	sub	x23, x23, x26
   56ebc:	add	x26, x26, x24
   56ec0:	mov	w8, #0x1                   	// #1
   56ec4:	cbnz	w8, 56e4c <ZDICT_finalizeDictionary@@Base+0x7b8>
   56ec8:	mov	x24, x26
   56ecc:	mov	x0, x19
   56ed0:	bl	4560 <ZSTD_freeCDict@plt>
   56ed4:	mov	x0, x20
   56ed8:	bl	4590 <ZSTD_freeCCtx@plt>
   56edc:	mov	x0, x21
   56ee0:	bl	4880 <free@plt>
   56ee4:	mov	x0, x24
   56ee8:	add	sp, sp, #0x1, lsl #12
   56eec:	add	sp, sp, #0xb60
   56ef0:	ldp	x20, x19, [sp, #80]
   56ef4:	ldp	x22, x21, [sp, #64]
   56ef8:	ldp	x24, x23, [sp, #48]
   56efc:	ldp	x26, x25, [sp, #32]
   56f00:	ldp	x28, x27, [sp, #16]
   56f04:	ldp	x29, x30, [sp], #96
   56f08:	ret
   56f0c:	add	x28, x28, x24
   56f10:	sub	x23, x23, x24
   56f14:	add	x24, x24, x26
   56f18:	mov	w8, #0x1                   	// #1
   56f1c:	cbz	w8, 56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56f20:	cmp	x23, #0xb
   56f24:	b.hi	56f68 <ZDICT_finalizeDictionary@@Base+0x8d4>  // b.pmore
   56f28:	cbnz	w22, 57028 <ZDICT_finalizeDictionary@@Base+0x994>
   56f2c:	mov	x24, #0xffffffffffffffba    	// #-70
   56f30:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56f34:	adrp	x26, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56f38:	ldr	x26, [x26, #4048]
   56f3c:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56f40:	add	x0, x0, #0x1eb
   56f44:	mov	w1, #0x17                  	// #23
   56f48:	ldr	x3, [x26]
   56f4c:	mov	w2, #0x1                   	// #1
   56f50:	bl	48e0 <fwrite@plt>
   56f54:	ldr	x0, [x26]
   56f58:	bl	4920 <fflush@plt>
   56f5c:	mov	w8, wzr
   56f60:	cbnz	w8, 56d3c <ZDICT_finalizeDictionary@@Base+0x6a8>
   56f64:	b	56dc0 <ZDICT_finalizeDictionary@@Base+0x72c>
   56f68:	mov	w1, #0x1                   	// #1
   56f6c:	mov	x0, x28
   56f70:	bl	5684c <ZDICT_finalizeDictionary@@Base+0x1b8>
   56f74:	add	x0, x28, #0x4
   56f78:	mov	w1, #0x4                   	// #4
   56f7c:	bl	5684c <ZDICT_finalizeDictionary@@Base+0x1b8>
   56f80:	add	x0, x28, #0x8
   56f84:	mov	w1, #0x8                   	// #8
   56f88:	bl	5684c <ZDICT_finalizeDictionary@@Base+0x1b8>
   56f8c:	add	x24, x24, #0xc
   56f90:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   56f94:	adrp	x26, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56f98:	ldr	x26, [x26, #4048]
   56f9c:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56fa0:	add	x0, x0, #0x203
   56fa4:	mov	w1, #0x2a                  	// #42
   56fa8:	ldr	x3, [x26]
   56fac:	mov	w2, #0x1                   	// #1
   56fb0:	bl	48e0 <fwrite@plt>
   56fb4:	ldr	x0, [x26]
   56fb8:	bl	4920 <fflush@plt>
   56fbc:	b	56d6c <ZDICT_finalizeDictionary@@Base+0x6d8>
   56fc0:	adrp	x24, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56fc4:	ldr	x24, [x24, #4048]
   56fc8:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   56fcc:	add	x0, x0, #0x22e
   56fd0:	mov	w1, #0x2e                  	// #46
   56fd4:	ldr	x3, [x24]
   56fd8:	mov	w2, #0x1                   	// #1
   56fdc:	bl	48e0 <fwrite@plt>
   56fe0:	ldr	x0, [x24]
   56fe4:	bl	4920 <fflush@plt>
   56fe8:	mov	w8, wzr
   56fec:	cbz	w8, 56ec8 <ZDICT_finalizeDictionary@@Base+0x834>
   56ff0:	b	56e4c <ZDICT_finalizeDictionary@@Base+0x7b8>
   56ff4:	adrp	x25, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   56ff8:	ldr	x25, [x25, #4048]
   56ffc:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57000:	add	x0, x0, #0x25d
   57004:	mov	w1, #0x2c                  	// #44
   57008:	ldr	x3, [x25]
   5700c:	mov	w2, #0x1                   	// #1
   57010:	bl	48e0 <fwrite@plt>
   57014:	ldr	x0, [x25]
   57018:	bl	4920 <fflush@plt>
   5701c:	mov	w8, wzr
   57020:	cbz	w8, 56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   57024:	b	56f20 <ZDICT_finalizeDictionary@@Base+0x88c>
   57028:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5702c:	ldr	x22, [x22, #4048]
   57030:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57034:	add	x0, x0, #0x28a
   57038:	mov	w1, #0x26                  	// #38
   5703c:	ldr	x3, [x22]
   57040:	mov	w2, #0x1                   	// #1
   57044:	bl	48e0 <fwrite@plt>
   57048:	ldr	x0, [x22]
   5704c:	bl	4920 <fflush@plt>
   57050:	mov	x24, #0xffffffffffffffba    	// #-70
   57054:	b	56ecc <ZDICT_finalizeDictionary@@Base+0x838>
   57058:	sub	sp, sp, #0xa0
   5705c:	mov	w8, #0x2710                	// #10000
   57060:	cmp	w4, w8
   57064:	lsr	x9, x1, #4
   57068:	csel	w8, w4, w8, hi  // hi = pmore
   5706c:	cmp	w8, w9
   57070:	stp	x29, x30, [sp, #64]
   57074:	stp	x26, x25, [sp, #96]
   57078:	add	x29, sp, #0x40
   5707c:	csel	w26, w8, w9, hi  // hi = pmore
   57080:	mov	w8, #0xc                   	// #12
   57084:	stp	x0, x5, [x29, #-24]
   57088:	umull	x0, w26, w8
   5708c:	stp	x28, x27, [sp, #80]
   57090:	stp	x24, x23, [sp, #112]
   57094:	stp	x22, x21, [sp, #128]
   57098:	stp	x20, x19, [sp, #144]
   5709c:	mov	w20, w4
   570a0:	mov	x21, x3
   570a4:	mov	x22, x2
   570a8:	mov	x23, x1
   570ac:	stur	x6, [x29, #-8]
   570b0:	bl	4640 <malloc@plt>
   570b4:	ldur	w8, [x29, #-16]
   570b8:	mov	w9, #0x9                   	// #9
   570bc:	mov	x19, x0
   570c0:	mov	x0, x21
   570c4:	cmp	w8, #0x0
   570c8:	csel	w25, w9, w8, eq  // eq = none
   570cc:	lsr	w8, w20, w25
   570d0:	cmp	w25, #0x1e
   570d4:	mov	w9, #0x4                   	// #4
   570d8:	mov	w1, w20
   570dc:	csel	w27, w9, w8, hi  // hi = pmore
   570e0:	bl	575bc <ZDICT_finalizeDictionary@@Base+0xf28>
   570e4:	cbz	x19, 57100 <ZDICT_finalizeDictionary@@Base+0xa6c>
   570e8:	cmp	x23, #0xff
   570ec:	b.hi	57108 <ZDICT_finalizeDictionary@@Base+0xa74>  // b.pmore
   570f0:	mov	x0, x19
   570f4:	bl	4880 <free@plt>
   570f8:	mov	x0, #0xffffffffffffffba    	// #-70
   570fc:	b	57320 <ZDICT_finalizeDictionary@@Base+0xc8c>
   57100:	mov	x0, #0xffffffffffffffc0    	// #-64
   57104:	b	57320 <ZDICT_finalizeDictionary@@Base+0xc8c>
   57108:	mov	x28, x0
   5710c:	cmp	x0, #0x1ff
   57110:	b.hi	57124 <ZDICT_finalizeDictionary@@Base+0xa90>  // b.pmore
   57114:	mov	x0, x19
   57118:	bl	4880 <free@plt>
   5711c:	mov	x0, #0xffffffffffffffde    	// #-34
   57120:	b	57320 <ZDICT_finalizeDictionary@@Base+0xc8c>
   57124:	ldur	w24, [x29, #-8]
   57128:	mov	x0, x19
   5712c:	bl	575e8 <ZDICT_finalizeDictionary@@Base+0xf54>
   57130:	mov	x0, x19
   57134:	mov	w1, w26
   57138:	mov	x2, x22
   5713c:	mov	x3, x28
   57140:	mov	x4, x21
   57144:	mov	w5, w20
   57148:	mov	w6, w27
   5714c:	mov	w7, w24
   57150:	bl	575fc <ZDICT_finalizeDictionary@@Base+0xf68>
   57154:	cmp	w24, #0x3
   57158:	b.cs	57340 <ZDICT_finalizeDictionary@@Base+0xcac>  // b.hs, b.nlast
   5715c:	mov	x0, x19
   57160:	bl	579b8 <ZDICT_finalizeDictionary@@Base+0x1324>
   57164:	cmp	w0, #0x7f
   57168:	b.hi	57188 <ZDICT_finalizeDictionary@@Base+0xaf4>  // b.pmore
   5716c:	mov	x0, x19
   57170:	bl	4880 <free@plt>
   57174:	mov	x20, xzr
   57178:	mov	x0, #0xffffffffffffffde    	// #-34
   5717c:	mov	w8, #0x1                   	// #1
   57180:	cbnz	w8, 57320 <ZDICT_finalizeDictionary@@Base+0xc8c>
   57184:	b	57314 <ZDICT_finalizeDictionary@@Base+0xc80>
   57188:	str	x22, [sp, #32]
   5718c:	mov	w22, w0
   57190:	mov	w26, w0
   57194:	cmp	x22, x23, lsr #2
   57198:	str	w24, [sp, #28]
   5719c:	b.cs	571d4 <ZDICT_finalizeDictionary@@Base+0xb40>  // b.hs, b.nlast
   571a0:	ldr	w24, [sp, #28]
   571a4:	cmp	w24, #0x2
   571a8:	b.cs	574a0 <ZDICT_finalizeDictionary@@Base+0xe0c>  // b.hs, b.nlast
   571ac:	add	x8, x23, x23, lsl #2
   571b0:	cmp	x28, x8, lsl #1
   571b4:	b.cs	571c0 <ZDICT_finalizeDictionary@@Base+0xb2c>  // b.hs, b.nlast
   571b8:	cmp	w24, #0x2
   571bc:	b.cs	574d0 <ZDICT_finalizeDictionary@@Base+0xe3c>  // b.hs, b.nlast
   571c0:	cmp	w27, #0x5
   571c4:	b.cc	571d4 <ZDICT_finalizeDictionary@@Base+0xb40>  // b.lo, b.ul, b.last
   571c8:	ldr	w8, [sp, #28]
   571cc:	cmp	w8, #0x2
   571d0:	b.cs	57500 <ZDICT_finalizeDictionary@@Base+0xe6c>  // b.hs, b.nlast
   571d4:	ldur	x27, [x29, #-24]
   571d8:	cmp	w25, #0x2
   571dc:	b.cc	57210 <ZDICT_finalizeDictionary@@Base+0xb7c>  // b.lo, b.ul, b.last
   571e0:	cmp	w20, #0x9
   571e4:	b.cc	57210 <ZDICT_finalizeDictionary@@Base+0xb7c>  // b.lo, b.ul, b.last
   571e8:	add	x8, x23, x23, lsl #1
   571ec:	cmp	x8, x22
   571f0:	b.cs	57210 <ZDICT_finalizeDictionary@@Base+0xb7c>  // b.hs, b.nlast
   571f4:	sub	w25, w25, #0x1
   571f8:	lsr	w8, w20, w25
   571fc:	cmp	w8, #0x5
   57200:	b.cc	571f4 <ZDICT_finalizeDictionary@@Base+0xb60>  // b.lo, b.ul, b.last
   57204:	ldr	w8, [sp, #28]
   57208:	cmp	w8, #0x2
   5720c:	b.cs	57554 <ZDICT_finalizeDictionary@@Base+0xec0>  // b.hs, b.nlast
   57210:	ldr	w9, [x19]
   57214:	cmp	w9, #0x2
   57218:	b.cc	57258 <ZDICT_finalizeDictionary@@Base+0xbc4>  // b.lo, b.ul, b.last
   5721c:	mov	w22, wzr
   57220:	mov	w8, #0x1                   	// #1
   57224:	mov	w10, #0xc                   	// #12
   57228:	umaddl	x11, w8, w10, x19
   5722c:	ldr	w11, [x11, #4]
   57230:	add	w11, w11, w22
   57234:	cmp	x11, x23
   57238:	b.hi	57260 <ZDICT_finalizeDictionary@@Base+0xbcc>  // b.pmore
   5723c:	add	w8, w8, #0x1
   57240:	cmp	w9, w8
   57244:	mov	w22, w11
   57248:	b.ne	57228 <ZDICT_finalizeDictionary@@Base+0xb94>  // b.any
   5724c:	mov	w22, w11
   57250:	mov	w8, w9
   57254:	b	57260 <ZDICT_finalizeDictionary@@Base+0xbcc>
   57258:	mov	w22, wzr
   5725c:	mov	w8, #0x1                   	// #1
   57260:	cmp	w8, #0x2
   57264:	str	w8, [x19]
   57268:	b.cc	572c8 <ZDICT_finalizeDictionary@@Base+0xc34>  // b.lo, b.ul, b.last
   5726c:	add	x25, x27, x23
   57270:	add	x24, x19, #0x10
   57274:	mov	w26, #0x1                   	// #1
   57278:	ldr	w2, [x24]
   5727c:	sub	x25, x25, x2
   57280:	cmp	x25, x27
   57284:	b.cs	57298 <ZDICT_finalizeDictionary@@Base+0xc04>  // b.hs, b.nlast
   57288:	mov	x0, x19
   5728c:	bl	4880 <free@plt>
   57290:	mov	w8, #0x1                   	// #1
   57294:	b	572b0 <ZDICT_finalizeDictionary@@Base+0xc1c>
   57298:	ldur	w8, [x24, #-4]
   5729c:	ldr	x9, [sp, #32]
   572a0:	mov	x0, x25
   572a4:	add	x1, x9, x8
   572a8:	bl	4420 <memcpy@plt>
   572ac:	mov	w8, wzr
   572b0:	cbnz	w8, 572cc <ZDICT_finalizeDictionary@@Base+0xc38>
   572b4:	ldr	w8, [x19]
   572b8:	add	x26, x26, #0x1
   572bc:	add	x24, x24, #0xc
   572c0:	cmp	x26, x8
   572c4:	b.cc	57278 <ZDICT_finalizeDictionary@@Base+0xbe4>  // b.lo, b.ul, b.last
   572c8:	mov	w8, wzr
   572cc:	cbz	w8, 572e0 <ZDICT_finalizeDictionary@@Base+0xc4c>
   572d0:	mov	x20, xzr
   572d4:	mov	x0, #0xffffffffffffffff    	// #-1
   572d8:	cbnz	w8, 57320 <ZDICT_finalizeDictionary@@Base+0xc8c>
   572dc:	b	57314 <ZDICT_finalizeDictionary@@Base+0xc80>
   572e0:	ldur	x6, [x29, #-12]
   572e4:	ldur	w7, [x29, #-4]
   572e8:	ldr	x3, [sp, #32]
   572ec:	mov	w1, w22
   572f0:	mov	x0, x27
   572f4:	mov	x2, x23
   572f8:	mov	x4, x21
   572fc:	mov	w5, w20
   57300:	bl	57a5c <ZDICT_finalizeDictionary@@Base+0x13c8>
   57304:	mov	x20, x0
   57308:	mov	w8, wzr
   5730c:	mov	x0, #0xffffffffffffffff    	// #-1
   57310:	cbnz	w8, 57320 <ZDICT_finalizeDictionary@@Base+0xc8c>
   57314:	mov	x0, x19
   57318:	bl	4880 <free@plt>
   5731c:	mov	x0, x20
   57320:	ldp	x20, x19, [sp, #144]
   57324:	ldp	x22, x21, [sp, #128]
   57328:	ldp	x24, x23, [sp, #112]
   5732c:	ldp	x26, x25, [sp, #96]
   57330:	ldp	x28, x27, [sp, #80]
   57334:	ldp	x29, x30, [sp, #64]
   57338:	add	sp, sp, #0xa0
   5733c:	ret
   57340:	str	w24, [sp, #28]
   57344:	ldr	w24, [x19]
   57348:	mov	w8, #0x19                  	// #25
   5734c:	mov	x0, x19
   57350:	str	x22, [sp, #32]
   57354:	cmp	w24, #0x19
   57358:	csel	w22, w24, w8, cc  // cc = lo, ul, last
   5735c:	bl	579b8 <ZDICT_finalizeDictionary@@Base+0x1324>
   57360:	adrp	x26, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57364:	ldr	x26, [x26, #4048]
   57368:	mov	w3, w0
   5736c:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57370:	sub	w2, w24, #0x1
   57374:	ldr	x0, [x26]
   57378:	add	x1, x1, #0xe50
   5737c:	bl	4ae0 <fprintf@plt>
   57380:	ldr	x0, [x26]
   57384:	bl	4920 <fflush@plt>
   57388:	ldr	x0, [x26]
   5738c:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57390:	sub	w2, w22, #0x1
   57394:	add	x1, x1, #0xe78
   57398:	bl	4ae0 <fprintf@plt>
   5739c:	ldr	x0, [x26]
   573a0:	bl	4920 <fflush@plt>
   573a4:	cmp	w22, #0x2
   573a8:	b.cc	57488 <ZDICT_finalizeDictionary@@Base+0xdf4>  // b.lo, b.ul, b.last
   573ac:	mov	w8, w22
   573b0:	add	x24, x19, #0x14
   573b4:	mov	w26, #0x1                   	// #1
   573b8:	str	x8, [sp, #16]
   573bc:	ldp	w22, w3, [x24, #-8]
   573c0:	mov	w8, #0x28                  	// #40
   573c4:	cmp	w3, #0x28
   573c8:	csel	w9, w3, w8, cc  // cc = lo, ul, last
   573cc:	cmp	x28, x22
   573d0:	b.cc	573e0 <ZDICT_finalizeDictionary@@Base+0xd4c>  // b.lo, b.ul, b.last
   573d4:	add	w8, w3, w22
   573d8:	cmp	x28, x8
   573dc:	b.cs	57408 <ZDICT_finalizeDictionary@@Base+0xd74>  // b.hs, b.nlast
   573e0:	mov	x0, x19
   573e4:	bl	4880 <free@plt>
   573e8:	mov	w8, #0x1                   	// #1
   573ec:	cbnz	w8, 5748c <ZDICT_finalizeDictionary@@Base+0xdf8>
   573f0:	ldr	x8, [sp, #16]
   573f4:	add	x26, x26, #0x1
   573f8:	add	x24, x24, #0xc
   573fc:	cmp	x26, x8
   57400:	b.cc	573bc <ZDICT_finalizeDictionary@@Base+0xd28>  // b.lo, b.ul, b.last
   57404:	b	57488 <ZDICT_finalizeDictionary@@Base+0xdf4>
   57408:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5740c:	ldr	x8, [x8, #4048]
   57410:	ldr	w5, [x24]
   57414:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57418:	add	x1, x1, #0xe90
   5741c:	ldr	x0, [x8]
   57420:	mov	w2, w26
   57424:	mov	w4, w22
   57428:	str	w9, [sp, #12]
   5742c:	bl	4ae0 <fprintf@plt>
   57430:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57434:	ldr	x8, [x8, #4048]
   57438:	ldr	x0, [x8]
   5743c:	bl	4920 <fflush@plt>
   57440:	ldr	x8, [sp, #32]
   57444:	add	x0, x8, x22
   57448:	ldr	w8, [sp, #12]
   5744c:	mov	w1, w8
   57450:	bl	579f4 <ZDICT_finalizeDictionary@@Base+0x1360>
   57454:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57458:	ldr	x22, [x22, #4048]
   5745c:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57460:	mov	w1, #0x3                   	// #3
   57464:	mov	w2, #0x1                   	// #1
   57468:	ldr	x3, [x22]
   5746c:	add	x0, x0, #0xebe
   57470:	bl	48e0 <fwrite@plt>
   57474:	ldr	x0, [x22]
   57478:	bl	4920 <fflush@plt>
   5747c:	mov	w8, wzr
   57480:	cbz	w8, 573f0 <ZDICT_finalizeDictionary@@Base+0xd5c>
   57484:	b	5748c <ZDICT_finalizeDictionary@@Base+0xdf8>
   57488:	mov	w8, wzr
   5748c:	ldr	x22, [sp, #32]
   57490:	ldr	w24, [sp, #28]
   57494:	cbz	w8, 5715c <ZDICT_finalizeDictionary@@Base+0xac8>
   57498:	mov	x0, #0xffffffffffffffff    	// #-1
   5749c:	b	57320 <ZDICT_finalizeDictionary@@Base+0xc8c>
   574a0:	adrp	x24, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   574a4:	ldr	x24, [x24, #4048]
   574a8:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   574ac:	add	x1, x1, #0xec2
   574b0:	mov	w2, w26
   574b4:	ldr	x0, [x24]
   574b8:	mov	w3, w23
   574bc:	bl	4ae0 <fprintf@plt>
   574c0:	ldr	x0, [x24]
   574c4:	ldr	w24, [sp, #28]
   574c8:	bl	4920 <fflush@plt>
   574cc:	b	571ac <ZDICT_finalizeDictionary@@Base+0xb18>
   574d0:	adrp	x24, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   574d4:	ldr	x24, [x24, #4048]
   574d8:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   574dc:	lsr	x2, x28, #20
   574e0:	add	x1, x1, #0xf11
   574e4:	ldr	x0, [x24]
   574e8:	bl	4ae0 <fprintf@plt>
   574ec:	ldr	x0, [x24]
   574f0:	bl	4920 <fflush@plt>
   574f4:	cmp	w27, #0x5
   574f8:	b.cs	571c8 <ZDICT_finalizeDictionary@@Base+0xb34>  // b.hs, b.nlast
   574fc:	b	571d4 <ZDICT_finalizeDictionary@@Base+0xb40>
   57500:	adrp	x27, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57504:	ldr	x27, [x27, #4048]
   57508:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   5750c:	add	w2, w25, #0x1
   57510:	add	x1, x1, #0xf54
   57514:	ldr	x0, [x27]
   57518:	bl	4ae0 <fprintf@plt>
   5751c:	ldr	x0, [x27]
   57520:	bl	4920 <fflush@plt>
   57524:	ldr	w8, [sp, #28]
   57528:	cmp	w8, #0x2
   5752c:	b.cc	571d4 <ZDICT_finalizeDictionary@@Base+0xb40>  // b.lo, b.ul, b.last
   57530:	ldr	x3, [x27]
   57534:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57538:	add	x0, x0, #0xf9d
   5753c:	mov	w1, #0x5a                  	// #90
   57540:	mov	w2, #0x1                   	// #1
   57544:	bl	48e0 <fwrite@plt>
   57548:	ldr	x0, [x27]
   5754c:	bl	4920 <fflush@plt>
   57550:	b	571d4 <ZDICT_finalizeDictionary@@Base+0xb40>
   57554:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57558:	ldr	x22, [x22, #4048]
   5755c:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57560:	add	x1, x1, #0xff8
   57564:	mov	w2, w26
   57568:	ldr	x0, [x22]
   5756c:	mov	w3, w23
   57570:	bl	4ae0 <fprintf@plt>
   57574:	ldr	x0, [x22]
   57578:	bl	4920 <fflush@plt>
   5757c:	ldr	x0, [x22]
   57580:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57584:	add	x1, x1, #0x48
   57588:	mov	w2, w25
   5758c:	bl	4ae0 <fprintf@plt>
   57590:	ldr	x0, [x22]
   57594:	bl	4920 <fflush@plt>
   57598:	ldr	x3, [x22]
   5759c:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   575a0:	add	x0, x0, #0x96
   575a4:	mov	w1, #0x36                  	// #54
   575a8:	mov	w2, #0x1                   	// #1
   575ac:	bl	48e0 <fwrite@plt>
   575b0:	ldr	x0, [x22]
   575b4:	bl	4920 <fflush@plt>
   575b8:	b	57210 <ZDICT_finalizeDictionary@@Base+0xb7c>
   575bc:	cbz	w1, 575e0 <ZDICT_finalizeDictionary@@Base+0xf4c>
   575c0:	mov	x8, x0
   575c4:	mov	x0, xzr
   575c8:	mov	w9, w1
   575cc:	ldr	x10, [x8], #8
   575d0:	subs	x9, x9, #0x1
   575d4:	add	x0, x10, x0
   575d8:	b.ne	575cc <ZDICT_finalizeDictionary@@Base+0xf38>  // b.any
   575dc:	ret
   575e0:	mov	x0, xzr
   575e4:	ret
   575e8:	mov	w8, #0x1                   	// #1
   575ec:	mov	w9, #0xffffffff            	// #-1
   575f0:	str	x8, [x0]
   575f4:	str	w9, [x0, #8]
   575f8:	ret
   575fc:	sub	sp, sp, #0xa0
   57600:	stp	x26, x25, [sp, #96]
   57604:	lsl	x25, x3, #2
   57608:	stp	x29, x30, [sp, #64]
   5760c:	add	x29, sp, #0x30
   57610:	str	x0, [sp, #24]
   57614:	add	x0, x25, #0x8
   57618:	str	d8, [sp, #48]
   5761c:	stp	x28, x27, [sp, #80]
   57620:	stp	x24, x23, [sp, #112]
   57624:	stp	x22, x21, [sp, #128]
   57628:	stp	x20, x19, [sp, #144]
   5762c:	mov	w19, w7
   57630:	mov	w22, w6
   57634:	mov	w28, w5
   57638:	mov	x23, x4
   5763c:	mov	x20, x3
   57640:	stur	x2, [x29, #-8]
   57644:	stur	w1, [x29, #-16]
   57648:	bl	4640 <malloc@plt>
   5764c:	mov	x24, x0
   57650:	mov	x0, x25
   57654:	bl	4640 <malloc@plt>
   57658:	add	x27, x20, #0x10
   5765c:	mov	x25, x0
   57660:	mov	x0, x27
   57664:	bl	4640 <malloc@plt>
   57668:	mov	w8, w28
   5766c:	mov	x26, x0
   57670:	lsl	x0, x8, #2
   57674:	bl	4640 <malloc@plt>
   57678:	cmp	w19, #0x2
   5767c:	str	x0, [x29, #8]
   57680:	b.cs	578d4 <ZDICT_finalizeDictionary@@Base+0x1240>  // b.hs, b.nlast
   57684:	cbz	x24, 57724 <ZDICT_finalizeDictionary@@Base+0x1090>
   57688:	cbz	x25, 57724 <ZDICT_finalizeDictionary@@Base+0x1090>
   5768c:	cbz	x26, 57724 <ZDICT_finalizeDictionary@@Base+0x1090>
   57690:	ldr	x8, [x29, #8]
   57694:	cbz	x8, 57724 <ZDICT_finalizeDictionary@@Base+0x1090>
   57698:	cmp	w22, #0x4
   5769c:	mov	w8, #0x4                   	// #4
   576a0:	csel	w8, w22, w8, hi  // hi = pmore
   576a4:	mov	x0, x26
   576a8:	mov	w1, wzr
   576ac:	mov	x2, x27
   576b0:	stur	w8, [x29, #-12]
   576b4:	bl	46a0 <memset@plt>
   576b8:	mov	w8, #0x1                   	// #1
   576bc:	movk	w8, #0x7d00, lsl #16
   576c0:	cmp	x20, x8
   576c4:	b.cc	576d0 <ZDICT_finalizeDictionary@@Base+0x103c>  // b.lo, b.ul, b.last
   576c8:	cmp	w19, #0x3
   576cc:	b.cs	57904 <ZDICT_finalizeDictionary@@Base+0x1270>  // b.hs, b.nlast
   576d0:	mov	w8, #0x1                   	// #1
   576d4:	movk	w8, #0x7d00, lsl #16
   576d8:	cmp	x20, x8
   576dc:	b.cc	57700 <ZDICT_finalizeDictionary@@Base+0x106c>  // b.lo, b.ul, b.last
   576e0:	ldur	x0, [x29, #-8]
   576e4:	mov	w8, #0x7d000000            	// #2097152000
   576e8:	sub	w28, w28, #0x1
   576ec:	ldr	x9, [x23, w28, uxtw #3]
   576f0:	sub	x20, x20, x9
   576f4:	cmp	x20, x8
   576f8:	b.hi	576e8 <ZDICT_finalizeDictionary@@Base+0x1054>  // b.pmore
   576fc:	b	57704 <ZDICT_finalizeDictionary@@Base+0x1070>
   57700:	ldur	x0, [x29, #-8]
   57704:	cmp	w19, #0x2
   57708:	add	x22, x24, #0x4
   5770c:	b.cs	5792c <ZDICT_finalizeDictionary@@Base+0x1298>  // b.hs, b.nlast
   57710:	mov	x1, x22
   57714:	mov	w2, w20
   57718:	mov	w3, wzr
   5771c:	bl	50278 <ZDICT_optimizeTrainFromBuffer_cover@@Base+0xf0c>
   57720:	cbz	w0, 57768 <ZDICT_finalizeDictionary@@Base+0x10d4>
   57724:	mov	x0, x24
   57728:	bl	4880 <free@plt>
   5772c:	mov	x0, x25
   57730:	bl	4880 <free@plt>
   57734:	mov	x0, x26
   57738:	bl	4880 <free@plt>
   5773c:	ldr	x0, [x29, #8]
   57740:	bl	4880 <free@plt>
   57744:	ldp	x20, x19, [sp, #144]
   57748:	ldp	x22, x21, [sp, #128]
   5774c:	ldp	x24, x23, [sp, #112]
   57750:	ldp	x26, x25, [sp, #96]
   57754:	ldp	x28, x27, [sp, #80]
   57758:	ldp	x29, x30, [sp, #64]
   5775c:	ldr	d8, [sp, #48]
   57760:	add	sp, sp, #0xa0
   57764:	ret
   57768:	str	w20, [x22, x20, lsl #2]
   5776c:	str	w20, [x24]
   57770:	cbz	x20, 5778c <ZDICT_finalizeDictionary@@Base+0x10f8>
   57774:	mov	x8, xzr
   57778:	ldrsw	x9, [x22, x8, lsl #2]
   5777c:	str	w8, [x25, x9, lsl #2]
   57780:	add	x8, x8, #0x1
   57784:	cmp	x20, x8
   57788:	b.ne	57778 <ZDICT_finalizeDictionary@@Base+0x10e4>  // b.any
   5778c:	ldr	x8, [x29, #8]
   57790:	cmp	w28, #0x2
   57794:	str	wzr, [x8]
   57798:	b.cc	577c0 <ZDICT_finalizeDictionary@@Base+0x112c>  // b.lo, b.ul, b.last
   5779c:	ldr	x8, [x29, #8]
   577a0:	mov	w10, w28
   577a4:	sub	x10, x10, #0x1
   577a8:	ldr	w9, [x8], #4
   577ac:	ldr	w11, [x23], #8
   577b0:	subs	x10, x10, #0x1
   577b4:	add	w9, w9, w11
   577b8:	str	w9, [x8], #4
   577bc:	b.ne	577ac <ZDICT_finalizeDictionary@@Base+0x1118>  // b.any
   577c0:	cmp	w19, #0x2
   577c4:	b.cs	5795c <ZDICT_finalizeDictionary@@Base+0x12c8>  // b.hs, b.nlast
   577c8:	cmp	w19, #0x3
   577cc:	b.cs	5798c <ZDICT_finalizeDictionary@@Base+0x12f8>  // b.hs, b.nlast
   577d0:	cbz	x20, 57724 <ZDICT_finalizeDictionary@@Base+0x1090>
   577d4:	str	xzr, [sp, #8]
   577d8:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   577dc:	ldr	x23, [x23, #4048]
   577e0:	ldur	x28, [x29, #-8]
   577e4:	mov	x8, xzr
   577e8:	mov	w27, wzr
   577ec:	ucvtf	d8, x20
   577f0:	b	57804 <ZDICT_finalizeDictionary@@Base+0x1170>
   577f4:	add	w27, w27, #0x1
   577f8:	mov	w8, w27
   577fc:	cmp	x20, x8
   57800:	b.ls	57724 <ZDICT_finalizeDictionary@@Base+0x1090>  // b.plast
   57804:	ldrb	w9, [x26, x8]
   57808:	cbnz	w9, 577f4 <ZDICT_finalizeDictionary@@Base+0x1160>
   5780c:	ldr	w2, [x25, x8, lsl #2]
   57810:	ldur	w4, [x29, #-12]
   57814:	mov	x0, x26
   57818:	mov	x1, x22
   5781c:	mov	x3, x28
   57820:	mov	w5, w19
   57824:	mov	x21, x24
   57828:	mov	x24, x23
   5782c:	bl	58024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x300>
   57830:	lsr	x23, x0, #32
   57834:	cbz	w23, 578c4 <ZDICT_finalizeDictionary@@Base+0x1230>
   57838:	mov	x2, x0
   5783c:	ldp	x3, x0, [sp, #16]
   57840:	mov	x4, x28
   57844:	bfxil	x3, x1, #0, #32
   57848:	ldur	w1, [x29, #-16]
   5784c:	str	x3, [sp, #16]
   57850:	bl	585fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d8>
   57854:	cmp	w19, #0x2
   57858:	add	w27, w27, w23
   5785c:	b.cc	578c8 <ZDICT_finalizeDictionary@@Base+0x1234>  // b.lo, b.ul, b.last
   57860:	ldr	x0, [sp, #8]
   57864:	bl	58744 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa20>
   57868:	mov	w8, #0x93e1                	// #37857
   5786c:	movk	w8, #0x4, lsl #16
   57870:	cmp	x0, x8
   57874:	b.lt	578c8 <ZDICT_finalizeDictionary@@Base+0x1234>  // b.tstop
   57878:	bl	4480 <clock@plt>
   5787c:	str	x0, [sp, #8]
   57880:	ldr	x0, [x24]
   57884:	ucvtf	d0, w27
   57888:	mov	x8, #0x4059000000000000    	// #4636737291354636288
   5788c:	fdiv	d0, d0, d8
   57890:	fmov	d1, x8
   57894:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57898:	fmul	d0, d0, d1
   5789c:	add	x1, x1, #0x393
   578a0:	mov	x23, x24
   578a4:	bl	4ae0 <fprintf@plt>
   578a8:	ldr	x0, [x24]
   578ac:	bl	4920 <fflush@plt>
   578b0:	cmp	w19, #0x4
   578b4:	b.cc	578cc <ZDICT_finalizeDictionary@@Base+0x1238>  // b.lo, b.ul, b.last
   578b8:	ldr	x0, [x23]
   578bc:	bl	4920 <fflush@plt>
   578c0:	b	578cc <ZDICT_finalizeDictionary@@Base+0x1238>
   578c4:	add	w27, w27, #0x1
   578c8:	mov	x23, x24
   578cc:	mov	x24, x21
   578d0:	b	577f8 <ZDICT_finalizeDictionary@@Base+0x1164>
   578d4:	adrp	x21, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   578d8:	ldr	x21, [x21, #4048]
   578dc:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   578e0:	adrp	x2, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   578e4:	add	x1, x1, #0xe38
   578e8:	ldr	x0, [x21]
   578ec:	add	x2, x2, #0x414
   578f0:	bl	4ae0 <fprintf@plt>
   578f4:	ldr	x0, [x21]
   578f8:	bl	4920 <fflush@plt>
   578fc:	cbnz	x24, 57688 <ZDICT_finalizeDictionary@@Base+0xff4>
   57900:	b	57724 <ZDICT_finalizeDictionary@@Base+0x1090>
   57904:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57908:	ldr	x22, [x22, #4048]
   5790c:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57910:	add	x1, x1, #0x310
   57914:	mov	w2, #0x7d0                 	// #2000
   57918:	ldr	x0, [x22]
   5791c:	bl	4ae0 <fprintf@plt>
   57920:	ldr	x0, [x22]
   57924:	bl	4920 <fflush@plt>
   57928:	b	576d0 <ZDICT_finalizeDictionary@@Base+0x103c>
   5792c:	adrp	x27, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57930:	ldr	x27, [x27, #4048]
   57934:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57938:	lsr	x3, x20, #20
   5793c:	add	x1, x1, #0x33d
   57940:	ldr	x0, [x27]
   57944:	mov	w2, w28
   57948:	bl	4ae0 <fprintf@plt>
   5794c:	ldr	x0, [x27]
   57950:	bl	4920 <fflush@plt>
   57954:	ldur	x0, [x29, #-8]
   57958:	b	57710 <ZDICT_finalizeDictionary@@Base+0x107c>
   5795c:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57960:	ldr	x23, [x23, #4048]
   57964:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57968:	add	x0, x0, #0x367
   5796c:	mov	w1, #0x16                  	// #22
   57970:	ldr	x3, [x23]
   57974:	mov	w2, #0x1                   	// #1
   57978:	bl	48e0 <fwrite@plt>
   5797c:	ldr	x0, [x23]
   57980:	bl	4920 <fflush@plt>
   57984:	cmp	w19, #0x3
   57988:	b.cc	577d0 <ZDICT_finalizeDictionary@@Base+0x113c>  // b.lo, b.ul, b.last
   5798c:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57990:	ldr	x23, [x23, #4048]
   57994:	ldur	w2, [x29, #-12]
   57998:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5799c:	add	x1, x1, #0x37e
   579a0:	ldr	x0, [x23]
   579a4:	bl	4ae0 <fprintf@plt>
   579a8:	ldr	x0, [x23]
   579ac:	bl	4920 <fflush@plt>
   579b0:	cbnz	x20, 577d4 <ZDICT_finalizeDictionary@@Base+0x1140>
   579b4:	b	57724 <ZDICT_finalizeDictionary@@Base+0x1090>
   579b8:	ldr	w8, [x0]
   579bc:	cmp	w8, #0x2
   579c0:	b.cc	579ec <ZDICT_finalizeDictionary@@Base+0x1358>  // b.lo, b.ul, b.last
   579c4:	ldr	w9, [x0], #16
   579c8:	mov	w8, wzr
   579cc:	mov	w10, #0x1                   	// #1
   579d0:	ldr	w11, [x0], #12
   579d4:	add	x10, x10, #0x1
   579d8:	cmp	x10, x9
   579dc:	add	w8, w11, w8
   579e0:	b.cc	579d0 <ZDICT_finalizeDictionary@@Base+0x133c>  // b.lo, b.ul, b.last
   579e4:	mov	w0, w8
   579e8:	ret
   579ec:	mov	w0, wzr
   579f0:	ret
   579f4:	stp	x29, x30, [sp, #-48]!
   579f8:	stp	x22, x21, [sp, #16]
   579fc:	stp	x20, x19, [sp, #32]
   57a00:	mov	x29, sp
   57a04:	cbnz	x1, 57a18 <ZDICT_finalizeDictionary@@Base+0x1384>
   57a08:	ldp	x20, x19, [sp, #32]
   57a0c:	ldp	x22, x21, [sp, #16]
   57a10:	ldp	x29, x30, [sp], #48
   57a14:	ret
   57a18:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57a1c:	ldr	x22, [x22, #4048]
   57a20:	mov	x19, x1
   57a24:	mov	x20, x0
   57a28:	mov	w21, #0x2e                  	// #46
   57a2c:	ldrb	w8, [x20], #1
   57a30:	ldr	x1, [x22]
   57a34:	sub	w9, w8, #0x20
   57a38:	cmp	w9, #0x5e
   57a3c:	csel	w8, w21, w8, hi  // hi = pmore
   57a40:	and	w0, w8, #0xff
   57a44:	bl	4540 <fputc@plt>
   57a48:	ldr	x0, [x22]
   57a4c:	bl	4920 <fflush@plt>
   57a50:	subs	x19, x19, #0x1
   57a54:	b.eq	57a08 <ZDICT_finalizeDictionary@@Base+0x1374>  // b.none
   57a58:	b	57a2c <ZDICT_finalizeDictionary@@Base+0x1398>
   57a5c:	sub	sp, sp, #0x70
   57a60:	stp	x28, x27, [sp, #32]
   57a64:	lsr	x28, x6, #32
   57a68:	cmp	w6, #0x0
   57a6c:	mov	w8, #0x3                   	// #3
   57a70:	stp	x26, x25, [sp, #48]
   57a74:	stp	x24, x23, [sp, #64]
   57a78:	stp	x22, x21, [sp, #80]
   57a7c:	stp	x20, x19, [sp, #96]
   57a80:	mov	x21, x7
   57a84:	mov	w24, w5
   57a88:	mov	x25, x4
   57a8c:	mov	x26, x3
   57a90:	mov	x19, x2
   57a94:	mov	x20, x1
   57a98:	csel	w27, w8, w6, eq  // eq = none
   57a9c:	cmp	w28, #0x2
   57aa0:	mov	x22, x0
   57aa4:	stp	x29, x30, [sp, #16]
   57aa8:	add	x29, sp, #0x10
   57aac:	b.cs	57b90 <ZDICT_finalizeDictionary@@Base+0x14fc>  // b.hs, b.nlast
   57ab0:	add	x8, x22, x19
   57ab4:	sub	x23, x8, x20
   57ab8:	add	x0, x22, #0x8
   57abc:	sub	x1, x19, #0x8
   57ac0:	mov	w2, w27
   57ac4:	mov	x3, x26
   57ac8:	mov	x4, x25
   57acc:	mov	w5, w24
   57ad0:	mov	x6, x23
   57ad4:	mov	x7, x20
   57ad8:	str	w28, [sp]
   57adc:	bl	56860 <ZDICT_finalizeDictionary@@Base+0x1cc>
   57ae0:	mov	x24, x0
   57ae4:	bl	4af0 <ZDICT_isError@plt>
   57ae8:	add	x8, x24, #0x8
   57aec:	cmp	w0, #0x0
   57af0:	mov	w9, #0x8                   	// #8
   57af4:	csel	x25, x8, x9, eq  // eq = none
   57af8:	cbnz	w0, 57b6c <ZDICT_finalizeDictionary@@Base+0x14d8>
   57afc:	mov	w1, #0xa437                	// #42039
   57b00:	movk	w1, #0xec30, lsl #16
   57b04:	mov	x0, x22
   57b08:	bl	5684c <ZDICT_finalizeDictionary@@Base+0x1b8>
   57b0c:	mov	x0, x23
   57b10:	mov	x1, x20
   57b14:	mov	x2, xzr
   57b18:	bl	6174 <ZSTD_initDStream_usingDDict@plt+0x1664>
   57b1c:	mov	x8, #0x8000800080008000    	// #-9223231297218904064
   57b20:	movk	x8, #0x8001
   57b24:	umulh	x8, x0, x8
   57b28:	mov	w9, #0x7fff8000            	// #2147450880
   57b2c:	lsr	x8, x8, #30
   57b30:	msub	w8, w8, w9, w0
   57b34:	cmp	w21, #0x0
   57b38:	add	w8, w8, #0x8, lsl #12
   57b3c:	csel	w1, w8, w21, eq  // eq = none
   57b40:	add	x0, x22, #0x4
   57b44:	bl	5684c <ZDICT_finalizeDictionary@@Base+0x1b8>
   57b48:	add	x21, x25, x20
   57b4c:	cmp	x21, x19
   57b50:	b.cs	57b64 <ZDICT_finalizeDictionary@@Base+0x14d0>  // b.hs, b.nlast
   57b54:	add	x0, x22, x25
   57b58:	mov	x1, x23
   57b5c:	mov	x2, x20
   57b60:	bl	4450 <memmove@plt>
   57b64:	cmp	x21, x19
   57b68:	csel	x24, x19, x21, hi  // hi = pmore
   57b6c:	mov	x0, x24
   57b70:	ldp	x20, x19, [sp, #96]
   57b74:	ldp	x22, x21, [sp, #80]
   57b78:	ldp	x24, x23, [sp, #64]
   57b7c:	ldp	x26, x25, [sp, #48]
   57b80:	ldp	x28, x27, [sp, #32]
   57b84:	ldp	x29, x30, [sp, #16]
   57b88:	add	sp, sp, #0x70
   57b8c:	ret
   57b90:	adrp	x23, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57b94:	ldr	x23, [x23, #4048]
   57b98:	adrp	x1, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57b9c:	adrp	x2, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57ba0:	add	x1, x1, #0xe38
   57ba4:	ldr	x0, [x23]
   57ba8:	add	x2, x2, #0x414
   57bac:	bl	4ae0 <fprintf@plt>
   57bb0:	ldr	x0, [x23]
   57bb4:	bl	4920 <fflush@plt>
   57bb8:	ldr	x3, [x23]
   57bbc:	adrp	x0, 6a000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x122dc>
   57bc0:	add	x0, x0, #0xe3f
   57bc4:	mov	w1, #0x10                  	// #16
   57bc8:	mov	w2, #0x1                   	// #1
   57bcc:	bl	48e0 <fwrite@plt>
   57bd0:	ldr	x0, [x23]
   57bd4:	bl	4920 <fflush@plt>
   57bd8:	b	57ab0 <ZDICT_finalizeDictionary@@Base+0x141c>

0000000000057bdc <ZDICT_trainFromBuffer_legacy@@Base>:
   57bdc:	stp	x29, x30, [sp, #-96]!
   57be0:	stp	x24, x23, [sp, #48]
   57be4:	mov	x23, x1
   57be8:	mov	x24, x0
   57bec:	mov	x0, x3
   57bf0:	mov	w1, w4
   57bf4:	str	x27, [sp, #16]
   57bf8:	stp	x26, x25, [sp, #32]
   57bfc:	stp	x22, x21, [sp, #64]
   57c00:	stp	x20, x19, [sp, #80]
   57c04:	mov	x29, sp
   57c08:	mov	x19, x6
   57c0c:	mov	x20, x5
   57c10:	mov	w21, w4
   57c14:	mov	x22, x3
   57c18:	mov	x26, x2
   57c1c:	bl	575bc <ZDICT_finalizeDictionary@@Base+0xf28>
   57c20:	cmp	x0, #0x200
   57c24:	b.cs	57c30 <ZDICT_trainFromBuffer_legacy@@Base+0x54>  // b.hs, b.nlast
   57c28:	mov	x19, xzr
   57c2c:	b	57c8c <ZDICT_trainFromBuffer_legacy@@Base+0xb0>
   57c30:	mov	x27, x0
   57c34:	add	x0, x0, #0x20
   57c38:	bl	4640 <malloc@plt>
   57c3c:	cbz	x0, 57c88 <ZDICT_trainFromBuffer_legacy@@Base+0xac>
   57c40:	mov	x1, x26
   57c44:	mov	x2, x27
   57c48:	mov	x25, x0
   57c4c:	bl	4420 <memcpy@plt>
   57c50:	add	x0, x25, x27
   57c54:	bl	57cac <ZDICT_trainFromBuffer_legacy@@Base+0xd0>
   57c58:	mov	x0, x24
   57c5c:	mov	x1, x23
   57c60:	mov	x2, x25
   57c64:	mov	x3, x22
   57c68:	mov	w4, w21
   57c6c:	mov	x5, x20
   57c70:	mov	x6, x19
   57c74:	bl	57058 <ZDICT_finalizeDictionary@@Base+0x9c4>
   57c78:	mov	x19, x0
   57c7c:	mov	x0, x25
   57c80:	bl	4880 <free@plt>
   57c84:	b	57c8c <ZDICT_trainFromBuffer_legacy@@Base+0xb0>
   57c88:	mov	x19, #0xffffffffffffffc0    	// #-64
   57c8c:	mov	x0, x19
   57c90:	ldp	x20, x19, [sp, #80]
   57c94:	ldp	x22, x21, [sp, #64]
   57c98:	ldp	x24, x23, [sp, #48]
   57c9c:	ldp	x26, x25, [sp, #32]
   57ca0:	ldr	x27, [sp, #16]
   57ca4:	ldp	x29, x30, [sp], #96
   57ca8:	ret
   57cac:	mov	w9, #0x79b1                	// #31153
   57cb0:	mov	w10, #0xca77                	// #51831
   57cb4:	mov	x8, xzr
   57cb8:	movk	w9, #0x9e37, lsl #16
   57cbc:	movk	w10, #0x85eb, lsl #16
   57cc0:	mul	w9, w9, w10
   57cc4:	lsr	w11, w9, #21
   57cc8:	strb	w11, [x0, x8]
   57ccc:	add	x8, x8, #0x1
   57cd0:	cmp	x8, #0x20
   57cd4:	b.ne	57cc0 <ZDICT_trainFromBuffer_legacy@@Base+0xe4>  // b.any
   57cd8:	ret

0000000000057cdc <ZDICT_trainFromBuffer@@Base>:
   57cdc:	sub	sp, sp, #0x50
   57ce0:	movi	v0.2d, #0x0
   57ce4:	mov	w8, #0x8                   	// #8
   57ce8:	mov	w9, #0x4                   	// #4
   57cec:	stp	q0, q0, [sp]
   57cf0:	str	w8, [sp, #4]
   57cf4:	mov	w8, #0x3                   	// #3
   57cf8:	mov	x5, sp
   57cfc:	stp	x29, x30, [sp, #64]
   57d00:	add	x29, sp, #0x40
   57d04:	str	xzr, [sp, #48]
   57d08:	str	w9, [sp, #12]
   57d0c:	str	q0, [sp, #32]
   57d10:	str	w8, [sp, #44]
   57d14:	bl	4610 <ZDICT_optimizeTrainFromBuffer_fastCover@plt>
   57d18:	ldp	x29, x30, [sp, #64]
   57d1c:	add	sp, sp, #0x50
   57d20:	ret

0000000000057d24 <ZDICT_addEntropyTablesFromBuffer@@Base>:
   57d24:	stp	x29, x30, [sp, #-16]!
   57d28:	mov	x6, xzr
   57d2c:	mov	x7, xzr
   57d30:	mov	x29, sp
   57d34:	bl	57a5c <ZDICT_finalizeDictionary@@Base+0x13c8>
   57d38:	ldp	x29, x30, [sp], #16
   57d3c:	ret
   57d40:	stp	x29, x30, [sp, #-32]!
   57d44:	str	x19, [sp, #16]
   57d48:	mov	x29, sp
   57d4c:	mov	x19, x0
   57d50:	bl	56600 <ZDICT_isError@@Base+0x14>
   57d54:	cmp	w0, #0x0
   57d58:	csneg	w0, wzr, w19, eq  // eq = none
   57d5c:	ldr	x19, [sp, #16]
   57d60:	ldp	x29, x30, [sp], #32
   57d64:	ret
   57d68:	ldr	w0, [x0]
   57d6c:	ret
   57d70:	str	w1, [x0]
   57d74:	ret
   57d78:	clz	w8, w0
   57d7c:	eor	w0, w8, #0x1f
   57d80:	ret
   57d84:	stp	x29, x30, [sp, #-96]!
   57d88:	stp	x26, x25, [sp, #32]
   57d8c:	stp	x24, x23, [sp, #48]
   57d90:	stp	x22, x21, [sp, #64]
   57d94:	stp	x20, x19, [sp, #80]
   57d98:	ldr	w8, [x1]
   57d9c:	mov	x29, sp
   57da0:	mov	w10, #0x1                   	// #1
   57da4:	mov	x23, x0
   57da8:	ldr	x9, [x29, #96]
   57dac:	lsl	w8, w10, w8
   57db0:	mov	w11, #0x20000               	// #131072
   57db4:	cmp	w8, #0x20, lsl #12
   57db8:	ldr	x0, [x0, #8]
   57dbc:	ldr	x1, [x23]
   57dc0:	str	x27, [sp, #16]
   57dc4:	ldr	w27, [x29, #104]
   57dc8:	csel	w8, w8, w11, lt  // lt = tstop
   57dcc:	sxtw	x8, w8
   57dd0:	cmp	x8, x9
   57dd4:	mov	x25, x7
   57dd8:	mov	x19, x6
   57ddc:	mov	x20, x5
   57de0:	mov	x21, x4
   57de4:	mov	x22, x3
   57de8:	mov	x24, x2
   57dec:	csel	x26, x8, x9, cc  // cc = lo, ul, last
   57df0:	bl	4990 <ZSTD_compressBegin_usingCDict@plt>
   57df4:	bl	56600 <ZDICT_isError@@Base+0x14>
   57df8:	cbz	w0, 57e24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x100>
   57dfc:	cbz	w27, 57e4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x128>
   57e00:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57e04:	ldr	x19, [x19, #4048]
   57e08:	adrp	x0, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57e0c:	add	x0, x0, #0x2b1
   57e10:	mov	w1, #0x30                  	// #48
   57e14:	ldr	x3, [x19]
   57e18:	mov	w2, #0x1                   	// #1
   57e1c:	bl	48e0 <fwrite@plt>
   57e20:	b	57f9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x278>
   57e24:	ldp	x0, x1, [x23, #8]
   57e28:	mov	w2, #0x20000               	// #131072
   57e2c:	mov	x3, x25
   57e30:	mov	x4, x26
   57e34:	bl	48a0 <ZSTD_compressBlock@plt>
   57e38:	mov	x25, x0
   57e3c:	bl	56600 <ZDICT_isError@@Base+0x14>
   57e40:	cbz	w0, 57e68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x144>
   57e44:	cmp	w27, #0x3
   57e48:	b.cs	57f80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x25c>  // b.hs, b.nlast
   57e4c:	ldp	x20, x19, [sp, #80]
   57e50:	ldp	x22, x21, [sp, #64]
   57e54:	ldp	x24, x23, [sp, #48]
   57e58:	ldp	x26, x25, [sp, #32]
   57e5c:	ldr	x27, [sp, #16]
   57e60:	ldp	x29, x30, [sp], #96
   57e64:	ret
   57e68:	cbz	x25, 57e4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x128>
   57e6c:	ldr	x0, [x23, #8]
   57e70:	bl	a29c <ZSTD_sizeof_CStream@@Base+0x14>
   57e74:	ldp	x8, x9, [x0, #16]
   57e78:	mov	x23, x0
   57e7c:	cmp	x8, x9
   57e80:	b.cs	57ea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x180>  // b.hs, b.nlast
   57e84:	ldr	x9, [x23, #24]
   57e88:	ldrb	w10, [x8], #1
   57e8c:	lsl	x10, x10, #2
   57e90:	ldr	w11, [x24, x10]
   57e94:	cmp	x8, x9
   57e98:	add	w11, w11, #0x1
   57e9c:	str	w11, [x24, x10]
   57ea0:	b.cc	57e88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x164>  // b.lo, b.ul, b.last
   57ea4:	ldp	x9, x8, [x23]
   57ea8:	mov	x0, x23
   57eac:	sub	x25, x8, x9
   57eb0:	lsr	x24, x25, #3
   57eb4:	bl	ba84 <ZSTD_copyCCtx@@Base+0x1f0>
   57eb8:	ubfx	x8, x25, #3, #32
   57ebc:	cbz	w24, 57ee4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c0>
   57ec0:	ldr	x9, [x23, #48]
   57ec4:	mov	x10, x8
   57ec8:	ldrb	w11, [x9], #1
   57ecc:	subs	x10, x10, #0x1
   57ed0:	lsl	x11, x11, #2
   57ed4:	ldr	w12, [x22, x11]
   57ed8:	add	w12, w12, #0x1
   57edc:	str	w12, [x22, x11]
   57ee0:	b.ne	57ec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a4>  // b.any
   57ee4:	cbz	w24, 57f0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e8>
   57ee8:	ldr	x9, [x23, #40]
   57eec:	mov	x10, x8
   57ef0:	ldrb	w11, [x9], #1
   57ef4:	subs	x10, x10, #0x1
   57ef8:	lsl	x11, x11, #2
   57efc:	ldr	w12, [x21, x11]
   57f00:	add	w12, w12, #0x1
   57f04:	str	w12, [x21, x11]
   57f08:	b.ne	57ef0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1cc>  // b.any
   57f0c:	cbz	w24, 57f30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x20c>
   57f10:	ldr	x9, [x23, #32]
   57f14:	ldrb	w10, [x9], #1
   57f18:	subs	x8, x8, #0x1
   57f1c:	lsl	x10, x10, #2
   57f20:	ldr	w11, [x20, x10]
   57f24:	add	w11, w11, #0x1
   57f28:	str	w11, [x20, x10]
   57f2c:	b.ne	57f14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f0>  // b.any
   57f30:	cmp	w24, #0x2
   57f34:	b.cc	57e4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x128>  // b.lo, b.ul, b.last
   57f38:	ldr	x8, [x23]
   57f3c:	ldr	w9, [x8]
   57f40:	ldr	w8, [x8, #8]
   57f44:	sub	w9, w9, #0x3
   57f48:	cmp	w9, #0x3ff
   57f4c:	csel	w9, wzr, w9, hi  // hi = pmore
   57f50:	lsl	x9, x9, #2
   57f54:	ldr	w10, [x19, x9]
   57f58:	sub	w8, w8, #0x3
   57f5c:	cmp	w8, #0x3ff
   57f60:	csel	w8, wzr, w8, hi  // hi = pmore
   57f64:	add	w10, w10, #0x3
   57f68:	str	w10, [x19, x9]
   57f6c:	lsl	x8, x8, #2
   57f70:	ldr	w9, [x19, x8]
   57f74:	add	w9, w9, #0x1
   57f78:	str	w9, [x19, x8]
   57f7c:	b	57e4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x128>
   57f80:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   57f84:	ldr	x19, [x19, #4048]
   57f88:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   57f8c:	add	x1, x1, #0x2e2
   57f90:	mov	w2, w26
   57f94:	ldr	x0, [x19]
   57f98:	bl	4ae0 <fprintf@plt>
   57f9c:	ldr	x0, [x19]
   57fa0:	bl	4920 <fflush@plt>
   57fa4:	b	57e4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x128>
   57fa8:	mov	w8, #0x4                   	// #4
   57fac:	mov	w9, #0x2                   	// #2
   57fb0:	str	w9, [x0, x8]
   57fb4:	add	x8, x8, #0x4
   57fb8:	cmp	x8, #0x400
   57fbc:	b.ne	57fb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28c>  // b.any
   57fc0:	mov	w8, #0x4                   	// #4
   57fc4:	add	x9, x0, #0x3f4
   57fc8:	mov	x10, #0x100000001           	// #4294967297
   57fcc:	str	w8, [x0]
   57fd0:	str	x10, [x9]
   57fd4:	ret
   57fd8:	mov	x8, x0
   57fdc:	str	w1, [x8, #24]!
   57fe0:	mov	w9, #0x2                   	// #2
   57fe4:	str	w2, [x8, #4]
   57fe8:	add	x10, x0, w9, uxtw #3
   57fec:	ldr	w10, [x10, #4]
   57ff0:	ldr	w11, [x8, #4]
   57ff4:	cmp	w10, w11
   57ff8:	b.cs	58020 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc>  // b.hs, b.nlast
   57ffc:	mov	w9, w9
   58000:	lsl	x11, x9, #3
   58004:	ldr	x10, [x8]
   58008:	ldr	x12, [x0, x11]
   5800c:	sub	w9, w9, #0x1
   58010:	cmn	w9, #0x1
   58014:	str	x10, [x0, x11]
   58018:	str	x12, [x8], #-8
   5801c:	b.ne	57fe8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c4>  // b.any
   58020:	ret
   58024:	stp	x29, x30, [sp, #-96]!
   58028:	stp	x28, x27, [sp, #16]
   5802c:	stp	x26, x25, [sp, #32]
   58030:	stp	x24, x23, [sp, #48]
   58034:	stp	x22, x21, [sp, #64]
   58038:	stp	x20, x19, [sp, #80]
   5803c:	mov	x29, sp
   58040:	sub	sp, sp, #0x330
   58044:	movi	v0.2d, #0x0
   58048:	stp	q0, q0, [sp, #768]
   5804c:	stp	q0, q0, [sp, #736]
   58050:	stp	q0, q0, [sp, #704]
   58054:	stp	q0, q0, [sp, #672]
   58058:	stp	q0, q0, [sp, #640]
   5805c:	stp	q0, q0, [sp, #608]
   58060:	stp	q0, q0, [sp, #576]
   58064:	stp	q0, q0, [sp, #544]
   58068:	stp	q0, q0, [sp, #512]
   5806c:	stp	q0, q0, [sp, #480]
   58070:	stp	q0, q0, [sp, #448]
   58074:	stp	q0, q0, [sp, #416]
   58078:	stp	q0, q0, [sp, #384]
   5807c:	stp	q0, q0, [sp, #352]
   58080:	stp	q0, q0, [sp, #320]
   58084:	stp	q0, q0, [sp, #288]
   58088:	stp	q0, q0, [sp, #256]
   5808c:	stp	q0, q0, [sp, #224]
   58090:	stp	q0, q0, [sp, #192]
   58094:	stp	q0, q0, [sp, #160]
   58098:	stp	q0, q0, [sp, #128]
   5809c:	stp	q0, q0, [sp, #96]
   580a0:	stp	q0, q0, [sp, #64]
   580a4:	stp	q0, q0, [sp, #32]
   580a8:	ldrsw	x24, [x1, w2, uxtw #2]
   580ac:	mov	w8, #0x1                   	// #1
   580b0:	mov	x19, x0
   580b4:	mov	w28, w5
   580b8:	add	x26, x3, x24
   580bc:	strb	w8, [x0, x24]
   580c0:	mov	x0, x26
   580c4:	mov	w23, w4
   580c8:	mov	x20, x3
   580cc:	mov	w25, w2
   580d0:	mov	x21, x1
   580d4:	bl	58768 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa44>
   580d8:	and	w22, w0, #0xffff
   580dc:	add	x0, x26, #0x2
   580e0:	bl	58768 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa44>
   580e4:	cmp	w22, w0, uxth
   580e8:	b.eq	58120 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fc>  // b.none
   580ec:	mov	w27, w0
   580f0:	add	x0, x26, #0x1
   580f4:	bl	58768 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa44>
   580f8:	and	w22, w0, #0xffff
   580fc:	add	x0, x26, #0x3
   58100:	bl	58768 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa44>
   58104:	cmp	w22, w0, uxth
   58108:	b.eq	58120 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fc>  // b.none
   5810c:	add	x0, x26, #0x4
   58110:	bl	58768 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa44>
   58114:	and	w8, w27, #0xffff
   58118:	cmp	w8, w0, uxth
   5811c:	b.ne	581b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x494>  // b.any
   58120:	add	x0, x26, #0x4
   58124:	bl	58768 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa44>
   58128:	mov	w21, w0
   5812c:	mov	w22, #0x4                   	// #4
   58130:	add	w22, w22, #0x2
   58134:	add	x0, x26, x22
   58138:	bl	58768 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa44>
   5813c:	and	w8, w0, #0xffff
   58140:	cmp	w8, w21, uxth
   58144:	b.eq	58130 <ZDICT_addEntropyTablesFromBuffer@@Base+0x40c>  // b.none
   58148:	add	x8, x24, w22, uxtw
   5814c:	add	x8, x20, x8
   58150:	ldrb	w9, [x8]
   58154:	ldurb	w8, [x8, #-1]
   58158:	cmp	w9, w8
   5815c:	cset	w8, eq  // eq = none
   58160:	orr	w8, w22, w8
   58164:	subs	w8, w8, #0x2
   58168:	b.cc	58180 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45c>  // b.lo, b.ul, b.last
   5816c:	add	x9, x24, x19
   58170:	add	x0, x9, #0x1
   58174:	add	x2, x8, #0x1
   58178:	mov	w1, #0x1                   	// #1
   5817c:	bl	46a0 <memset@plt>
   58180:	mov	w22, wzr
   58184:	mov	w23, wzr
   58188:	mov	w24, wzr
   5818c:	mov	w0, w24
   58190:	bfi	x0, x23, #32, #32
   58194:	mov	w1, w22
   58198:	add	sp, sp, #0x330
   5819c:	ldp	x20, x19, [sp, #80]
   581a0:	ldp	x22, x21, [sp, #64]
   581a4:	ldp	x24, x23, [sp, #48]
   581a8:	ldp	x26, x25, [sp, #32]
   581ac:	ldp	x28, x27, [sp, #16]
   581b0:	ldp	x29, x30, [sp], #96
   581b4:	ret
   581b8:	str	w28, [sp, #28]
   581bc:	mov	w28, #0xffffffff            	// #-1
   581c0:	add	w8, w25, w28
   581c4:	add	w8, w8, #0x2
   581c8:	ldrsw	x8, [x21, w8, uxtw #2]
   581cc:	mov	x0, x26
   581d0:	add	x1, x20, x8
   581d4:	bl	58770 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c>
   581d8:	cmp	x0, #0x6
   581dc:	add	w28, w28, #0x1
   581e0:	b.hi	581c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x49c>  // b.pmore
   581e4:	add	w8, w25, w28
   581e8:	sub	x27, x21, #0x4
   581ec:	neg	w22, w28
   581f0:	add	w28, w8, #0x1
   581f4:	ldrsw	x8, [x27, w25, uxtw #2]
   581f8:	mov	x0, x26
   581fc:	add	x1, x20, x8
   58200:	bl	58770 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c>
   58204:	sub	w25, w25, #0x1
   58208:	cmp	x0, #0x6
   5820c:	sub	w22, w22, #0x1
   58210:	b.hi	581f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d0>  // b.pmore
   58214:	cset	w8, hi  // hi = pmore
   58218:	sub	w26, w8, w22
   5821c:	sub	w8, w25, w8
   58220:	cmp	w26, w23
   58224:	add	w27, w8, #0x1
   58228:	b.cs	58268 <ZDICT_addEntropyTablesFromBuffer@@Base+0x544>  // b.hs, b.nlast
   5822c:	cmp	w28, w27
   58230:	b.ls	58180 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45c>  // b.plast
   58234:	cmp	x0, #0x6
   58238:	cset	w8, hi  // hi = pmore
   5823c:	sub	w8, w25, w8
   58240:	mov	w9, w28
   58244:	add	w10, w8, #0x1
   58248:	add	x8, x21, w10, uxtw #2
   5824c:	sub	x9, x9, x10
   58250:	mov	w10, #0x1                   	// #1
   58254:	ldrsw	x11, [x8], #4
   58258:	subs	x9, x9, #0x1
   5825c:	strb	w10, [x19, x11]
   58260:	b.ne	58254 <ZDICT_addEntropyTablesFromBuffer@@Base+0x530>  // b.any
   58264:	b	58180 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45c>
   58268:	ldr	w8, [sp, #28]
   5826c:	cmp	w8, #0x4
   58270:	b.cs	5855c <ZDICT_addEntropyTablesFromBuffer@@Base+0x838>  // b.hs, b.nlast
   58274:	mov	w8, #0x7                   	// #7
   58278:	cmp	w27, w28
   5827c:	b.cs	582e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5bc>  // b.hs, b.nlast
   58280:	mov	w9, wzr
   58284:	mov	w11, wzr
   58288:	mov	w15, wzr
   5828c:	mov	w12, w27
   58290:	mov	w13, w28
   58294:	mov	w10, w27
   58298:	mov	w14, w27
   5829c:	b	582b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x58c>
   582a0:	add	x12, x12, #0x1
   582a4:	cmp	x13, x12
   582a8:	add	w11, w11, #0x1
   582ac:	b.eq	582f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5cc>  // b.none
   582b0:	ldr	w16, [x21, x12, lsl #2]
   582b4:	add	w16, w16, w8
   582b8:	ldrb	w16, [x20, w16, uxtw]
   582bc:	cmp	w16, w15, uxtb
   582c0:	b.eq	582a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x57c>  // b.none
   582c4:	cmp	w11, w9
   582c8:	csel	w9, w11, w9, hi  // hi = pmore
   582cc:	csel	w10, w14, w10, hi  // hi = pmore
   582d0:	mov	w15, w16
   582d4:	mov	w14, w12
   582d8:	mov	w11, wzr
   582dc:	b	582a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x57c>
   582e0:	mov	w11, wzr
   582e4:	mov	w9, wzr
   582e8:	mov	w14, w27
   582ec:	mov	w10, w27
   582f0:	cmp	w11, w9
   582f4:	csel	w9, w11, w9, hi  // hi = pmore
   582f8:	csel	w10, w14, w10, hi  // hi = pmore
   582fc:	cmp	w9, w23
   58300:	csel	w27, w27, w10, cc  // cc = lo, ul, last
   58304:	b.cc	5831c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f8>  // b.lo, b.ul, b.last
   58308:	add	w28, w10, w9
   5830c:	add	w8, w8, #0x1
   58310:	cmp	w27, w28
   58314:	b.cs	582e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5bc>  // b.hs, b.nlast
   58318:	b	58280 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c>
   5831c:	ldr	w24, [x21, w27, uxtw #2]
   58320:	movi	v0.2d, #0x0
   58324:	mov	w22, #0x3f                  	// #63
   58328:	add	x26, sp, #0x220
   5832c:	sxtw	x8, w24
   58330:	add	x25, x20, x8
   58334:	mov	w28, w27
   58338:	stp	q0, q0, [sp, #768]
   5833c:	stp	q0, q0, [sp, #736]
   58340:	stp	q0, q0, [sp, #704]
   58344:	stp	q0, q0, [sp, #672]
   58348:	stp	q0, q0, [sp, #640]
   5834c:	stp	q0, q0, [sp, #608]
   58350:	stp	q0, q0, [sp, #576]
   58354:	stp	q0, q0, [sp, #544]
   58358:	str	x8, [sp, #16]
   5835c:	add	w28, w28, #0x1
   58360:	ldrsw	x8, [x21, w28, uxtw #2]
   58364:	mov	x0, x25
   58368:	add	x1, x20, x8
   5836c:	bl	58770 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c>
   58370:	cmp	x0, #0x3f
   58374:	csel	x8, x0, x22, cc  // cc = lo, ul, last
   58378:	lsl	x9, x8, #2
   5837c:	ldr	w10, [x26, x9]
   58380:	cmp	x8, #0x6
   58384:	add	w10, w10, #0x1
   58388:	str	w10, [x26, x9]
   5838c:	b.hi	5835c <ZDICT_addEntropyTablesFromBuffer@@Base+0x638>  // b.pmore
   58390:	str	x19, [sp, #8]
   58394:	cbz	w27, 583e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6bc>
   58398:	mov	w22, #0x3f                  	// #63
   5839c:	add	x26, sp, #0x220
   583a0:	sub	w19, w27, #0x1
   583a4:	ldrsw	x8, [x21, w19, uxtw #2]
   583a8:	mov	x0, x25
   583ac:	add	x1, x20, x8
   583b0:	bl	58770 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c>
   583b4:	cmp	x0, #0x3f
   583b8:	csel	x8, x0, x22, cc  // cc = lo, ul, last
   583bc:	lsl	x9, x8, #2
   583c0:	ldr	w10, [x26, x9]
   583c4:	cmp	x8, #0x6
   583c8:	csel	w27, w19, w27, hi  // hi = pmore
   583cc:	cmp	x8, #0x7
   583d0:	add	w10, w10, #0x1
   583d4:	str	w10, [x26, x9]
   583d8:	b.cc	583e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6bc>  // b.lo, b.ul, b.last
   583dc:	cbnz	w27, 583a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x67c>
   583e0:	ldr	w10, [sp, #796]
   583e4:	movi	v0.2d, #0x0
   583e8:	add	x9, sp, #0x220
   583ec:	mov	x8, xzr
   583f0:	stp	q0, q0, [sp, #512]
   583f4:	add	x9, x9, #0xf8
   583f8:	str	w10, [sp, #540]
   583fc:	add	x10, sp, #0x120
   58400:	stp	q0, q0, [sp, #480]
   58404:	stp	q0, q0, [sp, #448]
   58408:	stp	q0, q0, [sp, #416]
   5840c:	stp	q0, q0, [sp, #384]
   58410:	stp	q0, q0, [sp, #352]
   58414:	stp	q0, q0, [sp, #320]
   58418:	stp	q0, q0, [sp, #288]
   5841c:	add	x11, x10, x8
   58420:	ldr	w12, [x9, x8]
   58424:	ldr	w13, [x11, #252]
   58428:	sub	x8, x8, #0x4
   5842c:	cmn	x8, #0xfc
   58430:	add	w12, w12, w13
   58434:	str	w12, [x11, #248]
   58438:	b.ne	5841c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f8>  // b.any
   5843c:	ldr	x19, [sp, #8]
   58440:	mov	w8, #0x3f                  	// #63
   58444:	add	x9, sp, #0x120
   58448:	ldr	w10, [x9, x8, lsl #2]
   5844c:	cmp	w10, w23
   58450:	b.cs	58464 <ZDICT_addEntropyTablesFromBuffer@@Base+0x740>  // b.hs, b.nlast
   58454:	cmp	x8, #0x7
   58458:	sub	x8, x8, #0x1
   5845c:	b.hi	58448 <ZDICT_addEntropyTablesFromBuffer@@Base+0x724>  // b.pmore
   58460:	mov	w8, #0x6                   	// #6
   58464:	ldr	x10, [sp, #16]
   58468:	add	x9, x10, w8, sxtw
   5846c:	add	x9, x9, x20
   58470:	ldurb	w9, [x9, #-1]
   58474:	sub	x10, x10, #0x2
   58478:	add	x11, x10, w8, uxtw
   5847c:	ldrb	w11, [x20, x11]
   58480:	sub	w8, w8, #0x1
   58484:	cmp	w11, w9
   58488:	b.eq	58478 <ZDICT_addEntropyTablesFromBuffer@@Base+0x754>  // b.none
   5848c:	add	w23, w8, #0x1
   58490:	cmp	w23, #0x7
   58494:	b.cc	58180 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45c>  // b.lo, b.ul, b.last
   58498:	str	wzr, [sp, #52]
   5849c:	b.lt	584d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b4>  // b.tstop
   584a0:	add	w9, w8, #0x2
   584a4:	ldr	w8, [sp, #56]
   584a8:	mov	w9, w9
   584ac:	mov	w10, #0x7                   	// #7
   584b0:	add	x11, sp, #0x220
   584b4:	add	x12, sp, #0x20
   584b8:	lsl	x13, x10, #2
   584bc:	ldr	w14, [x11, x13]
   584c0:	sub	w15, w10, #0x3
   584c4:	add	x10, x10, #0x1
   584c8:	cmp	x9, x10
   584cc:	madd	w8, w14, w15, w8
   584d0:	str	w8, [x12, x13]
   584d4:	b.ne	584b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x794>  // b.any
   584d8:	ldr	w8, [sp, #28]
   584dc:	cmp	w8, #0x4
   584e0:	b.cs	585b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x890>  // b.hs, b.nlast
   584e4:	add	x8, sp, #0x20
   584e8:	ldr	w22, [x8, x23, lsl #2]
   584ec:	cmp	w27, w28
   584f0:	b.cs	5818c <ZDICT_addEntropyTablesFromBuffer@@Base+0x468>  // b.hs, b.nlast
   584f4:	mov	w8, w28
   584f8:	ldr	x28, [sp, #16]
   584fc:	add	x21, x21, w27, uxtw #2
   58500:	sub	x27, x8, w27, uxtw
   58504:	b	58514 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f0>
   58508:	subs	x27, x27, #0x1
   5850c:	add	x21, x21, #0x4
   58510:	b.eq	5818c <ZDICT_addEntropyTablesFromBuffer@@Base+0x468>  // b.none
   58514:	ldr	w26, [x21]
   58518:	mov	w8, w23
   5851c:	cmp	x26, x28
   58520:	b.eq	58538 <ZDICT_addEntropyTablesFromBuffer@@Base+0x814>  // b.none
   58524:	add	x1, x20, x26
   58528:	mov	x0, x25
   5852c:	bl	58770 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4c>
   58530:	cmp	w23, w0
   58534:	csel	w8, w23, w0, cc  // cc = lo, ul, last
   58538:	add	w9, w8, w26
   5853c:	cmp	w26, w9
   58540:	b.cs	58508 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e4>  // b.hs, b.nlast
   58544:	sub	w8, w8, #0x1
   58548:	add	x0, x19, x26
   5854c:	add	x2, x8, #0x1
   58550:	mov	w1, #0x1                   	// #1
   58554:	bl	46a0 <memset@plt>
   58558:	b	58508 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e4>
   5855c:	adrp	x22, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   58560:	ldr	x22, [x22, #4048]
   58564:	mov	w0, #0xa                   	// #10
   58568:	ldr	x1, [x22]
   5856c:	bl	4540 <fputc@plt>
   58570:	ldr	x0, [x22]
   58574:	bl	4920 <fflush@plt>
   58578:	ldr	x0, [x22]
   5857c:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   58580:	add	x1, x1, #0x39f
   58584:	mov	w3, #0x7                   	// #7
   58588:	mov	w2, w26
   5858c:	mov	w4, w24
   58590:	bl	4ae0 <fprintf@plt>
   58594:	ldr	x0, [x22]
   58598:	bl	4920 <fflush@plt>
   5859c:	ldr	x1, [x22]
   585a0:	mov	w0, #0xa                   	// #10
   585a4:	bl	4540 <fputc@plt>
   585a8:	ldr	x0, [x22]
   585ac:	bl	4920 <fflush@plt>
   585b0:	b	58274 <ZDICT_addEntropyTablesFromBuffer@@Base+0x550>
   585b4:	add	x8, sp, #0x20
   585b8:	mov	x22, x19
   585bc:	adrp	x19, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   585c0:	ldr	w4, [x8, x23, lsl #2]
   585c4:	ldr	x19, [x19, #4048]
   585c8:	ucvtf	d1, w23
   585cc:	adrp	x1, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   585d0:	ucvtf	d0, w4
   585d4:	ldr	x0, [x19]
   585d8:	fdiv	d0, d0, d1
   585dc:	add	x1, x1, #0x3ce
   585e0:	mov	w2, w24
   585e4:	mov	w3, w23
   585e8:	bl	4ae0 <fprintf@plt>
   585ec:	ldr	x0, [x19]
   585f0:	mov	x19, x22
   585f4:	bl	4920 <fflush@plt>
   585f8:	b	584e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7c0>
   585fc:	stp	x29, x30, [sp, #-64]!
   58600:	stp	x22, x21, [sp, #32]
   58604:	mov	x21, x2
   58608:	stp	x24, x23, [sp, #16]
   5860c:	stp	x20, x19, [sp, #48]
   58610:	mov	x20, x3
   58614:	mov	w24, w1
   58618:	and	x2, x3, #0xffffffff
   5861c:	mov	x1, x21
   58620:	mov	w3, wzr
   58624:	mov	x29, sp
   58628:	mov	x22, x4
   5862c:	mov	x19, x0
   58630:	bl	58804 <ZDICT_addEntropyTablesFromBuffer@@Base+0xae0>
   58634:	cbz	w0, 586a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x984>
   58638:	mov	w24, #0xc                   	// #12
   5863c:	umaddl	x8, w0, w24, x19
   58640:	ldr	w20, [x8, #8]
   58644:	ldr	x1, [x8]
   58648:	mov	w23, w0
   5864c:	mov	x0, x19
   58650:	mov	x2, x20
   58654:	mov	w3, w23
   58658:	mov	x4, x22
   5865c:	bl	58804 <ZDICT_addEntropyTablesFromBuffer@@Base+0xae0>
   58660:	cbz	w0, 58730 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0c>
   58664:	mov	w21, w0
   58668:	mov	x0, x19
   5866c:	mov	w1, w23
   58670:	bl	58af0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdcc>
   58674:	umaddl	x8, w21, w24, x19
   58678:	ldr	w9, [x8, #8]
   5867c:	ldr	x1, [x8]
   58680:	and	x8, x20, #0xffffffff00000000
   58684:	mov	x0, x19
   58688:	orr	x20, x8, x9
   5868c:	mov	x2, x20
   58690:	mov	w3, w21
   58694:	mov	x4, x22
   58698:	bl	58804 <ZDICT_addEntropyTablesFromBuffer@@Base+0xae0>
   5869c:	mov	w23, w21
   586a0:	cbnz	w0, 58664 <ZDICT_addEntropyTablesFromBuffer@@Base+0x940>
   586a4:	b	58730 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0c>
   586a8:	ldr	w8, [x19]
   586ac:	sub	w9, w24, #0x1
   586b0:	mov	w10, #0xc                   	// #12
   586b4:	cmp	w8, w24
   586b8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
   586bc:	sub	w11, w8, #0x1
   586c0:	umaddl	x9, w11, w10, x19
   586c4:	ldr	w9, [x9, #8]
   586c8:	cmp	w9, w20
   586cc:	umaddl	x9, w8, w10, x19
   586d0:	b.cs	58714 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f0>  // b.hs, b.nlast
   586d4:	mov	w12, w8
   586d8:	madd	x11, x11, x10, x19
   586dc:	ldr	w13, [x11, #8]
   586e0:	ldr	x14, [x11]
   586e4:	sub	w11, w12, #0x2
   586e8:	str	w13, [x9, #8]
   586ec:	str	x14, [x9]
   586f0:	umaddl	x9, w11, w10, x19
   586f4:	ldr	w9, [x9, #8]
   586f8:	sub	w13, w12, #0x1
   586fc:	mov	w12, w13
   58700:	cmp	w9, w20
   58704:	umaddl	x9, w13, w10, x19
   58708:	b.cc	586d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b4>  // b.lo, b.ul, b.last
   5870c:	mov	w10, w13
   58710:	b	58718 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f4>
   58714:	mov	x10, x8
   58718:	str	x21, [x9]
   5871c:	mov	w9, #0xc                   	// #12
   58720:	add	w8, w8, #0x1
   58724:	madd	x9, x10, x9, x19
   58728:	str	w20, [x9, #8]
   5872c:	str	w8, [x19]
   58730:	ldp	x20, x19, [sp, #48]
   58734:	ldp	x22, x21, [sp, #32]
   58738:	ldp	x24, x23, [sp, #16]
   5873c:	ldp	x29, x30, [sp], #64
   58740:	ret
   58744:	stp	x29, x30, [sp, #-32]!
   58748:	str	x19, [sp, #16]
   5874c:	mov	x29, sp
   58750:	mov	x19, x0
   58754:	bl	4480 <clock@plt>
   58758:	sub	x0, x0, x19
   5875c:	ldr	x19, [sp, #16]
   58760:	ldp	x29, x30, [sp], #32
   58764:	ret
   58768:	ldrh	w0, [x0]
   5876c:	ret
   58770:	stp	x29, x30, [sp, #-64]!
   58774:	stp	x22, x21, [sp, #32]
   58778:	stp	x20, x19, [sp, #48]
   5877c:	mov	x19, x1
   58780:	mov	x20, x0
   58784:	mov	x21, x0
   58788:	str	x23, [sp, #16]
   5878c:	mov	x29, sp
   58790:	b	587a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa84>
   58794:	bl	587f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad0>
   58798:	add	x21, x21, w0, uxtw
   5879c:	mov	w8, wzr
   587a0:	sub	x22, x21, x20
   587a4:	tbz	w8, #0, 587d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab0>
   587a8:	mov	x0, x19
   587ac:	bl	587ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xac8>
   587b0:	mov	x23, x0
   587b4:	mov	x0, x21
   587b8:	bl	587ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xac8>
   587bc:	eor	x0, x0, x23
   587c0:	cbnz	x0, 58794 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa70>
   587c4:	add	x21, x21, #0x8
   587c8:	add	x19, x19, #0x8
   587cc:	mov	w8, #0x1                   	// #1
   587d0:	tbnz	w8, #0, 587a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa84>
   587d4:	mov	x0, x22
   587d8:	ldp	x20, x19, [sp, #48]
   587dc:	ldp	x22, x21, [sp, #32]
   587e0:	ldr	x23, [sp, #16]
   587e4:	ldp	x29, x30, [sp], #64
   587e8:	ret
   587ec:	ldr	x0, [x0]
   587f0:	ret
   587f4:	rbit	x8, x0
   587f8:	clz	x8, x8
   587fc:	ubfx	x0, x8, #3, #29
   58800:	ret
   58804:	sub	sp, sp, #0x80
   58808:	stp	x29, x30, [sp, #32]
   5880c:	stp	x28, x27, [sp, #48]
   58810:	stp	x26, x25, [sp, #64]
   58814:	stp	x24, x23, [sp, #80]
   58818:	stp	x22, x21, [sp, #96]
   5881c:	stp	x20, x19, [sp, #112]
   58820:	ldr	w28, [x0]
   58824:	mov	x22, x1
   58828:	lsr	x13, x1, #32
   5882c:	add	x29, sp, #0x20
   58830:	mov	x19, x0
   58834:	cmp	w28, #0x2
   58838:	add	w12, w13, w22
   5883c:	stur	x4, [x29, #-8]
   58840:	b.cc	58914 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbf0>  // b.lo, b.ul, b.last
   58844:	mov	w8, w3
   58848:	add	x9, x19, #0xc
   5884c:	mov	w20, #0x1                   	// #1
   58850:	b	58864 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb40>
   58854:	add	x20, x20, #0x1
   58858:	cmp	x28, x20
   5885c:	add	x9, x9, #0xc
   58860:	b.eq	58914 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbf0>  // b.none
   58864:	cmp	x8, x20
   58868:	b.eq	58854 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb30>  // b.none
   5886c:	ldr	w11, [x9]
   58870:	subs	w10, w11, w22
   58874:	b.ls	58854 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb30>  // b.plast
   58878:	cmp	w11, w12
   5887c:	b.hi	58854 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb30>  // b.pmore
   58880:	and	x11, x20, #0xffffffff
   58884:	mov	w8, #0xc                   	// #12
   58888:	madd	x11, x11, x8, x19
   5888c:	ldr	w12, [x11, #4]
   58890:	add	w12, w12, w10
   58894:	str	w12, [x11, #4]
   58898:	str	w22, [x9]
   5889c:	ldr	w12, [x11, #8]
   588a0:	mul	w10, w10, w2
   588a4:	udiv	w10, w10, w13
   588a8:	lsr	x13, x22, #35
   588ac:	add	w10, w10, w13
   588b0:	add	w10, w10, w12
   588b4:	str	w10, [x11, #8]
   588b8:	ldr	x9, [x9]
   588bc:	cmp	w20, #0x2
   588c0:	b.cc	588e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbc0>  // b.lo, b.ul, b.last
   588c4:	sub	w11, w20, #0x1
   588c8:	umaddl	x11, w11, w8, x19
   588cc:	ldr	w11, [x11, #8]
   588d0:	cmp	w11, w10
   588d4:	cset	w12, cc  // cc = lo, ul, last
   588d8:	umaddl	x11, w20, w8, x19
   588dc:	cbnz	w12, 588f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbcc>
   588e0:	b	589fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd8>
   588e4:	mov	w12, wzr
   588e8:	umaddl	x11, w20, w8, x19
   588ec:	cbz	w12, 589fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd8>
   588f0:	sub	w20, w20, #0x1
   588f4:	umaddl	x12, w20, w8, x19
   588f8:	ldr	w13, [x12, #8]
   588fc:	ldr	x12, [x12]
   58900:	str	w13, [x11, #8]
   58904:	str	x12, [x11]
   58908:	cmp	w20, #0x2
   5890c:	b.cc	588e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbc0>  // b.lo, b.ul, b.last
   58910:	b	588c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xba0>
   58914:	cmp	w28, #0x2
   58918:	b.cc	589f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd0>  // b.lo, b.ul, b.last
   5891c:	ldur	x8, [x29, #-8]
   58920:	mov	w23, w3
   58924:	add	x21, x19, #0x10
   58928:	mov	w20, #0x1                   	// #1
   5892c:	add	x8, x8, w22, uxtw
   58930:	add	x25, x8, #0x1
   58934:	str	w12, [sp, #4]
   58938:	stp	x2, x13, [sp, #8]
   5893c:	b	58950 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc2c>
   58940:	add	x20, x20, #0x1
   58944:	cmp	x28, x20
   58948:	add	x21, x21, #0xc
   5894c:	b.eq	589f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd0>  // b.none
   58950:	cmp	x23, x20
   58954:	b.eq	58940 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc1c>  // b.none
   58958:	ldp	w8, w24, [x21, #-4]
   5895c:	cmp	w8, w22
   58960:	b.cs	58970 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4c>  // b.hs, b.nlast
   58964:	add	w10, w24, w8
   58968:	cmp	w10, w22
   5896c:	b.cs	58a10 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcec>  // b.hs, b.nlast
   58970:	ldur	x9, [x29, #-8]
   58974:	add	x26, x9, x8
   58978:	mov	x0, x26
   5897c:	bl	58b44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe20>
   58980:	mov	x27, x0
   58984:	mov	x0, x25
   58988:	bl	58b44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe20>
   5898c:	cmp	x27, x0
   58990:	b.ne	58940 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc1c>  // b.any
   58994:	mov	x0, x26
   58998:	mov	x1, x25
   5899c:	mov	x2, x24
   589a0:	bl	58b4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe28>
   589a4:	cbz	w0, 58940 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc1c>
   589a8:	ldp	x10, x13, [sp, #8]
   589ac:	and	x8, x20, #0xffffffff
   589b0:	mov	w11, #0xc                   	// #12
   589b4:	stur	w22, [x21, #-4]
   589b8:	sub	w9, w13, w24
   589bc:	madd	x8, x8, x11, x19
   589c0:	cmp	w9, #0x1
   589c4:	ldr	w12, [x8, #8]
   589c8:	and	x10, x10, #0xffffffff
   589cc:	csinc	w9, w9, wzr, gt
   589d0:	add	w11, w24, #0x1
   589d4:	mul	x9, x10, x9
   589d8:	cmp	w11, w13
   589dc:	udiv	x9, x9, x13
   589e0:	csinc	w10, w13, w24, hi  // hi = pmore
   589e4:	add	w9, w12, w9
   589e8:	str	w9, [x8, #8]
   589ec:	str	w10, [x21]
   589f0:	b	58acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xda8>
   589f4:	mov	w20, wzr
   589f8:	b	58acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xda8>
   589fc:	mov	w8, #0xc                   	// #12
   58a00:	umaddl	x8, w20, w8, x19
   58a04:	str	x9, [x11]
   58a08:	str	w10, [x8, #8]
   58a0c:	b	58acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xda8>
   58a10:	and	x9, x20, #0xffffffff
   58a14:	mov	w8, #0xc                   	// #12
   58a18:	madd	x9, x9, x8, x19
   58a1c:	ldr	w12, [x9, #8]!
   58a20:	ldr	w11, [sp, #4]
   58a24:	sub	w11, w11, w10
   58a28:	lsr	x10, x22, #35
   58a2c:	add	w10, w12, w10
   58a30:	cmp	w11, #0x1
   58a34:	str	w10, [x9]
   58a38:	b.lt	58a5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd38>  // b.tstop
   58a3c:	add	w12, w11, w24
   58a40:	ldr	x13, [sp, #8]
   58a44:	str	w12, [x21]
   58a48:	ldr	x12, [sp, #16]
   58a4c:	mul	w11, w11, w13
   58a50:	udiv	w11, w11, w12
   58a54:	add	w10, w11, w10
   58a58:	str	w10, [x9]
   58a5c:	ldur	x10, [x21, #-4]
   58a60:	ldr	w9, [x9]
   58a64:	cmp	w20, #0x2
   58a68:	b.cc	58a8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd68>  // b.lo, b.ul, b.last
   58a6c:	sub	w11, w20, #0x1
   58a70:	umaddl	x11, w11, w8, x19
   58a74:	ldr	w11, [x11, #8]
   58a78:	cmp	w11, w9
   58a7c:	cset	w12, cc  // cc = lo, ul, last
   58a80:	umaddl	x11, w20, w8, x19
   58a84:	cbnz	w12, 58a98 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd74>
   58a88:	b	58abc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd98>
   58a8c:	mov	w12, wzr
   58a90:	umaddl	x11, w20, w8, x19
   58a94:	cbz	w12, 58abc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd98>
   58a98:	sub	w20, w20, #0x1
   58a9c:	umaddl	x12, w20, w8, x19
   58aa0:	ldr	w13, [x12, #8]
   58aa4:	ldr	x12, [x12]
   58aa8:	str	w13, [x11, #8]
   58aac:	str	x12, [x11]
   58ab0:	cmp	w20, #0x2
   58ab4:	b.cc	58a8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd68>  // b.lo, b.ul, b.last
   58ab8:	b	58a6c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd48>
   58abc:	mov	w8, #0xc                   	// #12
   58ac0:	umaddl	x8, w20, w8, x19
   58ac4:	str	x10, [x11]
   58ac8:	str	w9, [x8, #8]
   58acc:	mov	w0, w20
   58ad0:	ldp	x20, x19, [sp, #112]
   58ad4:	ldp	x22, x21, [sp, #96]
   58ad8:	ldp	x24, x23, [sp, #80]
   58adc:	ldp	x26, x25, [sp, #64]
   58ae0:	ldp	x28, x27, [sp, #48]
   58ae4:	ldp	x29, x30, [sp, #32]
   58ae8:	add	sp, sp, #0x80
   58aec:	ret
   58af0:	cbz	w1, 58b40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe1c>
   58af4:	ldr	w8, [x0]
   58af8:	sub	w8, w8, #0x1
   58afc:	cmp	w8, w1
   58b00:	b.ls	58b34 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe10>  // b.plast
   58b04:	mov	w9, #0xc                   	// #12
   58b08:	mov	w8, w8
   58b0c:	umaddl	x10, w1, w9, x0
   58b10:	sub	x8, x8, w1, uxtw
   58b14:	mov	x9, x10
   58b18:	ldr	x11, [x9, #12]!
   58b1c:	ldr	w12, [x10, #20]
   58b20:	subs	x8, x8, #0x1
   58b24:	str	x11, [x10]
   58b28:	str	w12, [x10, #8]
   58b2c:	mov	x10, x9
   58b30:	b.ne	58b18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf4>  // b.any
   58b34:	ldr	w8, [x0]
   58b38:	sub	w8, w8, #0x1
   58b3c:	str	w8, [x0]
   58b40:	ret
   58b44:	ldr	x0, [x0]
   58b48:	ret
   58b4c:	mov	x8, xzr
   58b50:	cbz	x2, 58b74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe50>
   58b54:	ldrb	w9, [x0, x8]
   58b58:	ldrb	w10, [x1, x8]
   58b5c:	cmp	w9, w10
   58b60:	b.ne	58b74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe50>  // b.any
   58b64:	add	x8, x8, #0x1
   58b68:	cmp	x2, x8
   58b6c:	b.ne	58b54 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe30>  // b.any
   58b70:	mov	x8, x2
   58b74:	cmp	x8, x2
   58b78:	cset	w0, eq  // eq = none
   58b7c:	ret
   58b80:	stp	x29, x30, [sp, #-16]!
   58b84:	cmp	w0, #0xf
   58b88:	mov	w8, #0xf                   	// #15
   58b8c:	csel	w8, w0, w8, cc  // cc = lo, ul, last
   58b90:	mov	w9, #0x4                   	// #4
   58b94:	lsl	w8, w9, w8
   58b98:	add	w0, w8, #0x4
   58b9c:	mov	x29, sp
   58ba0:	bl	4640 <malloc@plt>
   58ba4:	ldp	x29, x30, [sp], #16
   58ba8:	ret
   58bac:	stp	x29, x30, [sp, #-16]!
   58bb0:	mov	x29, sp
   58bb4:	bl	4880 <free@plt>
   58bb8:	ldp	x29, x30, [sp], #16
   58bbc:	ret
   58bc0:	stp	x29, x30, [sp, #-96]!
   58bc4:	stp	x28, x27, [sp, #16]
   58bc8:	stp	x26, x25, [sp, #32]
   58bcc:	stp	x24, x23, [sp, #48]
   58bd0:	stp	x22, x21, [sp, #64]
   58bd4:	stp	x20, x19, [sp, #80]
   58bd8:	mov	x29, sp
   58bdc:	sub	sp, sp, #0x210
   58be0:	mov	w8, #0x1                   	// #1
   58be4:	lsl	w21, w8, w3
   58be8:	mov	x20, x0
   58bec:	mov	w0, w21
   58bf0:	mov	w19, w3
   58bf4:	mov	w22, w2
   58bf8:	mov	x23, x1
   58bfc:	bl	58d80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x105c>
   58c00:	cmp	w22, #0xff
   58c04:	b.ls	58c10 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeec>  // b.plast
   58c08:	mov	x0, #0xffffffffffffffd2    	// #-46
   58c0c:	b	58d60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x103c>
   58c10:	cmp	w19, #0xc
   58c14:	b.ls	58c20 <ZDICT_addEntropyTablesFromBuffer@@Base+0xefc>  // b.plast
   58c18:	mov	x0, #0xffffffffffffffd4    	// #-44
   58c1c:	b	58d60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x103c>
   58c20:	add	x25, x20, #0x4
   58c24:	mov	w24, w0
   58c28:	add	w2, w22, #0x1
   58c2c:	mov	x0, x25
   58c30:	mov	w1, wzr
   58c34:	sub	w27, w21, #0x1
   58c38:	sub	w28, w19, #0x1
   58c3c:	bl	46a0 <memset@plt>
   58c40:	mov	w8, #0x10000               	// #65536
   58c44:	lsl	w8, w8, w28
   58c48:	mov	w12, wzr
   58c4c:	mov	w26, #0x1                   	// #1
   58c50:	asr	w9, w8, #16
   58c54:	add	x10, sp, #0x8
   58c58:	mov	w8, w27
   58c5c:	b	58c7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf58>
   58c60:	cmp	w9, w14
   58c64:	and	w13, w14, #0xffff
   58c68:	csel	w26, w26, wzr, gt
   58c6c:	add	w12, w11, #0x1
   58c70:	cmp	w12, w22
   58c74:	strh	w13, [x10, x11, lsl #1]
   58c78:	b.hi	58ca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf7c>  // b.pmore
   58c7c:	ldrsh	w14, [x23, w12, uxtw #1]
   58c80:	mov	w11, w12
   58c84:	cmn	w14, #0x1
   58c88:	b.ne	58c60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf3c>  // b.any
   58c8c:	add	x12, x25, w8, uxtw #2
   58c90:	sub	w8, w8, #0x1
   58c94:	strb	w11, [x12, #2]
   58c98:	mov	w13, #0x1                   	// #1
   58c9c:	b	58c6c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf48>
   58ca0:	mov	w9, wzr
   58ca4:	mov	w10, wzr
   58ca8:	b	58cb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf94>
   58cac:	add	w10, w10, #0x1
   58cb0:	cmp	w10, w22
   58cb4:	b.hi	58cf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfd4>  // b.pmore
   58cb8:	ldrsh	w11, [x23, w10, uxtw #1]
   58cbc:	mov	w10, w10
   58cc0:	cmp	w11, #0x1
   58cc4:	b.lt	58cac <ZDICT_addEntropyTablesFromBuffer@@Base+0xf88>  // b.tstop
   58cc8:	ldrsh	w11, [x23, x10, lsl #1]
   58ccc:	mov	w12, wzr
   58cd0:	add	x13, x25, w9, uxtw #2
   58cd4:	strb	w10, [x13, #2]
   58cd8:	add	w9, w9, w24
   58cdc:	and	w9, w9, w27
   58ce0:	cmp	w9, w8
   58ce4:	b.hi	58cd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfb4>  // b.pmore
   58ce8:	add	w12, w12, #0x1
   58cec:	cmp	w12, w11
   58cf0:	b.lt	58cd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfac>  // b.tstop
   58cf4:	b	58cac <ZDICT_addEntropyTablesFromBuffer@@Base+0xf88>
   58cf8:	cbz	w9, 58d04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xfe0>
   58cfc:	mov	x0, #0xffffffffffffffff    	// #-1
   58d00:	b	58d60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x103c>
   58d04:	mov	x23, xzr
   58d08:	mov	w24, w21
   58d0c:	add	x25, x20, #0x7
   58d10:	add	x27, sp, #0x8
   58d14:	ldurb	w8, [x25, #-1]
   58d18:	lsl	x8, x8, #1
   58d1c:	ldrh	w22, [x27, x8]
   58d20:	add	w9, w22, #0x1
   58d24:	mov	w0, w22
   58d28:	strh	w9, [x27, x8]
   58d2c:	bl	58d90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x106c>
   58d30:	sub	w8, w19, w0
   58d34:	strb	w8, [x25]
   58d38:	lsl	w8, w22, w8
   58d3c:	add	x23, x23, #0x1
   58d40:	sub	w8, w8, w21
   58d44:	cmp	x23, x24
   58d48:	sturh	w8, [x25, #-3]
   58d4c:	add	x25, x25, #0x4
   58d50:	b.cc	58d14 <ZDICT_addEntropyTablesFromBuffer@@Base+0xff0>  // b.lo, b.ul, b.last
   58d54:	mov	x0, xzr
   58d58:	strh	w19, [x20]
   58d5c:	strh	w26, [x20, #2]
   58d60:	add	sp, sp, #0x210
   58d64:	ldp	x20, x19, [sp, #80]
   58d68:	ldp	x22, x21, [sp, #64]
   58d6c:	ldp	x24, x23, [sp, #48]
   58d70:	ldp	x26, x25, [sp, #32]
   58d74:	ldp	x28, x27, [sp, #16]
   58d78:	ldp	x29, x30, [sp], #96
   58d7c:	ret
   58d80:	lsr	w8, w0, #3
   58d84:	add	w8, w8, w0, lsr #1
   58d88:	add	w0, w8, #0x3
   58d8c:	ret
   58d90:	clz	w8, w0
   58d94:	eor	w0, w8, #0x1f
   58d98:	ret
   58d9c:	stp	x29, x30, [sp, #-16]!
   58da0:	mov	x29, sp
   58da4:	bl	58db0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x108c>
   58da8:	ldp	x29, x30, [sp], #16
   58dac:	ret
   58db0:	cmn	x0, #0x78
   58db4:	cset	w0, hi  // hi = pmore
   58db8:	ret
   58dbc:	stp	x29, x30, [sp, #-16]!
   58dc0:	mov	x29, sp
   58dc4:	bl	58dd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10ac>
   58dc8:	ldp	x29, x30, [sp], #16
   58dcc:	ret
   58dd0:	stp	x29, x30, [sp, #-16]!
   58dd4:	mov	x29, sp
   58dd8:	bl	5bfac <ZDICT_addEntropyTablesFromBuffer@@Base+0x4288>
   58ddc:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
   58de0:	ldp	x29, x30, [sp], #16
   58de4:	ret
   58de8:	sub	sp, sp, #0xa0
   58dec:	stp	x29, x30, [sp, #64]
   58df0:	add	x29, sp, #0x40
   58df4:	cmp	x4, #0x4
   58df8:	stp	x28, x27, [sp, #80]
   58dfc:	stp	x26, x25, [sp, #96]
   58e00:	stp	x24, x23, [sp, #112]
   58e04:	stp	x22, x21, [sp, #128]
   58e08:	stp	x20, x19, [sp, #144]
   58e0c:	stur	x0, [x29, #-8]
   58e10:	b.cs	58e1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x10f8>  // b.hs, b.nlast
   58e14:	mov	x0, #0xffffffffffffffb8    	// #-72
   58e18:	b	590d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13b4>
   58e1c:	mov	x0, x3
   58e20:	mov	x19, x4
   58e24:	mov	x21, x3
   58e28:	mov	x23, x2
   58e2c:	mov	x20, x1
   58e30:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   58e34:	and	w8, w0, #0xf
   58e38:	cmp	w8, #0xa
   58e3c:	b.ls	58e48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1124>  // b.plast
   58e40:	mov	x0, #0xffffffffffffffd4    	// #-44
   58e44:	b	590d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13b4>
   58e48:	mov	w10, #0x20                  	// #32
   58e4c:	lsl	w26, w10, w8
   58e50:	add	w9, w8, #0x5
   58e54:	cmp	w26, #0x2
   58e58:	orr	w25, w26, #0x1
   58e5c:	str	w9, [x23]
   58e60:	stp	x20, x19, [sp, #8]
   58e64:	b.cc	59088 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1364>  // b.lo, b.ul, b.last
   58e68:	add	w28, w8, #0x6
   58e6c:	ldr	w8, [x20]
   58e70:	add	x9, x21, x19
   58e74:	mov	w22, wzr
   58e78:	mov	w27, wzr
   58e7c:	stur	w8, [x29, #-12]
   58e80:	sub	x8, x9, #0x7
   58e84:	lsr	w19, w0, #4
   58e88:	sub	x20, x9, #0x5
   58e8c:	stur	x8, [x29, #-24]
   58e90:	sub	x8, x9, #0x4
   58e94:	mov	w24, #0x4                   	// #4
   58e98:	mov	x23, x21
   58e9c:	stp	x21, x8, [sp, #24]
   58ea0:	b	58ec0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x119c>
   58ea4:	add	x23, x23, w8, sxtw
   58ea8:	and	w24, w19, #0x7
   58eac:	mov	x0, x23
   58eb0:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   58eb4:	cmp	w25, #0x1
   58eb8:	lsr	w19, w0, w24
   58ebc:	b.le	59094 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1370>
   58ec0:	ldur	w8, [x29, #-12]
   58ec4:	cmp	w27, w8
   58ec8:	b.hi	59094 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1370>  // b.pmore
   58ecc:	cbz	w22, 58fd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12b0>
   58ed0:	mvn	w8, w19
   58ed4:	tst	w8, #0xffff
   58ed8:	mov	w22, w27
   58edc:	b.eq	58f34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1210>  // b.none
   58ee0:	and	w8, w19, #0x3
   58ee4:	cmp	w8, #0x3
   58ee8:	b.ne	58f04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x11e0>  // b.any
   58eec:	ubfx	w8, w19, #2, #2
   58ef0:	add	w22, w22, #0x3
   58ef4:	lsr	w19, w19, #2
   58ef8:	cmp	w8, #0x3
   58efc:	add	w24, w24, #0x2
   58f00:	b.eq	58eec <ZDICT_addEntropyTablesFromBuffer@@Base+0x11c8>  // b.none
   58f04:	ldur	w9, [x29, #-12]
   58f08:	add	w8, w22, w8
   58f0c:	add	w24, w24, #0x2
   58f10:	cmp	w8, w9
   58f14:	b.ls	58f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1230>  // b.plast
   58f18:	mov	w8, wzr
   58f1c:	b	58fd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12ac>
   58f20:	lsr	w19, w19, #16
   58f24:	add	w24, w24, #0x10
   58f28:	mvn	w8, w19
   58f2c:	tst	w8, #0xffff
   58f30:	b.ne	58ee0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x11bc>  // b.any
   58f34:	cmp	x23, x20
   58f38:	add	w22, w22, #0x18
   58f3c:	b.cs	58f20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x11fc>  // b.hs, b.nlast
   58f40:	add	x23, x23, #0x2
   58f44:	mov	x0, x23
   58f48:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   58f4c:	lsr	w19, w0, w24
   58f50:	b	58f28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1204>
   58f54:	cmp	w27, w8
   58f58:	b.cs	58f90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x126c>  // b.hs, b.nlast
   58f5c:	mov	w21, w8
   58f60:	ldur	x8, [x29, #-8]
   58f64:	mov	w22, w27
   58f68:	mov	w1, wzr
   58f6c:	add	x0, x8, w27, uxtw #1
   58f70:	sub	x8, x21, x22
   58f74:	lsl	x2, x8, #1
   58f78:	bl	46a0 <memset@plt>
   58f7c:	add	x22, x22, #0x1
   58f80:	cmp	x21, x22
   58f84:	b.ne	58f7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1258>  // b.any
   58f88:	ldr	x21, [sp, #24]
   58f8c:	mov	w27, w22
   58f90:	ldur	x8, [x29, #-24]
   58f94:	cmp	x23, x8
   58f98:	asr	w8, w24, #3
   58f9c:	b.ls	58fb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1294>  // b.plast
   58fa0:	ldr	x10, [sp, #32]
   58fa4:	add	x9, x23, w8, sxtw
   58fa8:	cmp	x9, x10
   58fac:	b.ls	58fb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1294>  // b.plast
   58fb0:	lsr	w19, w19, #2
   58fb4:	b	58fcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x12a8>
   58fb8:	add	x23, x23, w8, sxtw
   58fbc:	mov	x0, x23
   58fc0:	and	w24, w24, #0x7
   58fc4:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   58fc8:	lsr	w19, w0, w24
   58fcc:	mov	w8, #0x1                   	// #1
   58fd0:	cbz	w8, 590d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13b0>
   58fd4:	lsl	w8, w26, #1
   58fd8:	sub	w10, w8, #0x1
   58fdc:	sub	w9, w26, #0x1
   58fe0:	sub	w11, w10, w25
   58fe4:	and	w8, w19, w9
   58fe8:	sxth	w9, w11
   58fec:	cmp	w8, w9
   58ff0:	b.cs	58ffc <ZDICT_addEntropyTablesFromBuffer@@Base+0x12d8>  // b.hs, b.nlast
   58ff4:	sub	w9, w28, #0x1
   58ff8:	b	59014 <ZDICT_addEntropyTablesFromBuffer@@Base+0x12f0>
   58ffc:	and	w8, w19, w10
   59000:	sxth	w10, w8
   59004:	sub	w9, w10, w9
   59008:	cmp	w10, w26
   5900c:	csel	w8, w8, w9, lt  // lt = tstop
   59010:	mov	w9, w28
   59014:	add	w19, w9, w24
   59018:	sub	w24, w8, #0x1
   5901c:	mov	w0, w24
   59020:	bl	5910c <ZDICT_addEntropyTablesFromBuffer@@Base+0x13e8>
   59024:	ldur	x8, [x29, #-8]
   59028:	sub	w25, w25, w0, sxth
   5902c:	tst	w24, #0xffff
   59030:	cset	w22, eq  // eq = none
   59034:	cmp	w25, w26
   59038:	strh	w24, [x8, w27, uxtw #1]
   5903c:	b.ge	59050 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132c>  // b.tcont
   59040:	asr	w26, w26, #1
   59044:	cmp	w25, w26
   59048:	sub	w28, w28, #0x1
   5904c:	b.lt	59040 <ZDICT_addEntropyTablesFromBuffer@@Base+0x131c>  // b.tstop
   59050:	ldur	x8, [x29, #-24]
   59054:	add	w27, w27, #0x1
   59058:	cmp	x23, x8
   5905c:	asr	w8, w19, #3
   59060:	b.ls	58ea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1180>  // b.plast
   59064:	ldr	x10, [sp, #32]
   59068:	add	x9, x23, w8, sxtw
   5906c:	cmp	x9, x10
   59070:	b.ls	58ea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1180>  // b.plast
   59074:	ldr	x9, [sp, #32]
   59078:	sub	w8, w9, w23
   5907c:	sub	w24, w19, w8, lsl #3
   59080:	mov	x23, x9
   59084:	b	58eac <ZDICT_addEntropyTablesFromBuffer@@Base+0x1188>
   59088:	mov	w27, wzr
   5908c:	mov	w24, #0x4                   	// #4
   59090:	mov	x23, x21
   59094:	cmp	w25, #0x1
   59098:	b.ne	590cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x13a8>  // b.any
   5909c:	ldr	x10, [sp, #8]
   590a0:	sub	w8, w27, #0x1
   590a4:	add	w9, w24, #0x7
   590a8:	str	w8, [x10]
   590ac:	asr	w8, w9, #3
   590b0:	ldr	x9, [sp, #16]
   590b4:	add	x8, x23, w8, sxtw
   590b8:	sub	x8, x8, x21
   590bc:	cmp	x8, x9
   590c0:	mov	x9, #0xffffffffffffffb8    	// #-72
   590c4:	csel	x0, x9, x8, hi  // hi = pmore
   590c8:	b	590d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13b4>
   590cc:	mov	x0, #0xffffffffffffffff    	// #-1
   590d0:	b	590d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13b4>
   590d4:	mov	x0, #0xffffffffffffffd0    	// #-48
   590d8:	ldp	x20, x19, [sp, #144]
   590dc:	ldp	x22, x21, [sp, #128]
   590e0:	ldp	x24, x23, [sp, #112]
   590e4:	ldp	x26, x25, [sp, #96]
   590e8:	ldp	x28, x27, [sp, #80]
   590ec:	ldp	x29, x30, [sp, #64]
   590f0:	add	sp, sp, #0xa0
   590f4:	ret
   590f8:	stp	x29, x30, [sp, #-16]!
   590fc:	mov	x29, sp
   59100:	bl	5bfd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b0>
   59104:	ldp	x29, x30, [sp], #16
   59108:	ret
   5910c:	sxth	w8, w0
   59110:	cmp	w8, #0x0
   59114:	cneg	w0, w8, mi  // mi = first
   59118:	ret
   5911c:	str	wzr, [x0]
   59120:	strh	wzr, [x0, #4]
   59124:	strb	w1, [x0, #6]
   59128:	strb	wzr, [x0, #7]
   5912c:	mov	x0, xzr
   59130:	ret
   59134:	cbz	w1, 59170 <ZDICT_addEntropyTablesFromBuffer@@Base+0x144c>
   59138:	add	x8, x0, #0x4
   5913c:	mov	w9, #0x1                   	// #1
   59140:	strh	w1, [x0]
   59144:	strh	w9, [x0, #2]
   59148:	sub	w10, w9, #0x1
   5914c:	lsr	w11, w9, w1
   59150:	add	x12, x8, w10, uxtw #2
   59154:	add	w9, w9, #0x1
   59158:	strh	wzr, [x12]
   5915c:	strb	w10, [x12, #2]
   59160:	strb	w1, [x12, #3]
   59164:	cbz	w11, 59148 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1424>
   59168:	mov	x0, xzr
   5916c:	ret
   59170:	mov	x0, #0xffffffffffffffff    	// #-1
   59174:	ret
   59178:	sub	sp, sp, #0x80
   5917c:	stp	x29, x30, [sp, #64]
   59180:	stp	x24, x23, [sp, #80]
   59184:	stp	x22, x21, [sp, #96]
   59188:	stp	x20, x19, [sp, #112]
   5918c:	ldrh	w8, [x4, #2]
   59190:	add	x22, x0, x1
   59194:	mov	x20, x4
   59198:	mov	x19, x0
   5919c:	sub	x23, x22, #0x3
   591a0:	add	x0, sp, #0x20
   591a4:	mov	x1, x2
   591a8:	mov	x2, x3
   591ac:	add	x29, sp, #0x40
   591b0:	cbz	w8, 592f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x15cc>
   591b4:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   591b8:	mov	x21, x0
   591bc:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   591c0:	cbnz	w0, 5948c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1768>
   591c4:	add	x0, sp, #0x10
   591c8:	add	x1, sp, #0x20
   591cc:	mov	x2, x20
   591d0:	bl	5bfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b8>
   591d4:	mov	x0, sp
   591d8:	add	x1, sp, #0x20
   591dc:	mov	x2, x20
   591e0:	bl	5bfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b8>
   591e4:	add	x0, sp, #0x20
   591e8:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   591ec:	cmp	x23, x19
   591f0:	mov	x20, x19
   591f4:	b.ls	5925c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1538>  // b.plast
   591f8:	mov	x20, x19
   591fc:	cbnz	w0, 5925c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1538>
   59200:	mov	x20, x19
   59204:	add	x0, sp, #0x10
   59208:	add	x1, sp, #0x20
   5920c:	bl	5c024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4300>
   59210:	strb	w0, [x20]
   59214:	mov	x0, sp
   59218:	add	x1, sp, #0x20
   5921c:	bl	5c024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4300>
   59220:	strb	w0, [x20, #1]
   59224:	add	x0, sp, #0x10
   59228:	add	x1, sp, #0x20
   5922c:	bl	5c024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4300>
   59230:	strb	w0, [x20, #2]
   59234:	mov	x0, sp
   59238:	add	x1, sp, #0x20
   5923c:	bl	5c024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4300>
   59240:	strb	w0, [x20, #3]
   59244:	add	x0, sp, #0x20
   59248:	add	x20, x20, #0x4
   5924c:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59250:	cmp	x20, x23
   59254:	b.cs	5925c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1538>  // b.hs, b.nlast
   59258:	cbz	w0, 59204 <ZDICT_addEntropyTablesFromBuffer@@Base+0x14e0>
   5925c:	add	x0, sp, #0x20
   59260:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59264:	cmp	x20, x22
   59268:	b.eq	59444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1720>  // b.none
   5926c:	cmp	w0, #0x2
   59270:	b.hi	59444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1720>  // b.pmore
   59274:	sub	x21, x22, #0x2
   59278:	sub	x23, x22, #0x1
   5927c:	add	x0, sp, #0x20
   59280:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   59284:	cbnz	w0, 59444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1720>
   59288:	add	x0, sp, #0x10
   5928c:	add	x1, sp, #0x20
   59290:	bl	5c024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4300>
   59294:	strb	w0, [x20]
   59298:	add	x0, sp, #0x20
   5929c:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   592a0:	cmp	x23, x20
   592a4:	b.eq	5944c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1728>  // b.none
   592a8:	cmp	w0, #0x2
   592ac:	b.hi	5944c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1728>  // b.pmore
   592b0:	add	x0, sp, #0x20
   592b4:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   592b8:	cbnz	w0, 5944c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1728>
   592bc:	mov	x0, sp
   592c0:	add	x1, sp, #0x20
   592c4:	bl	5c024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4300>
   592c8:	strb	w0, [x20, #1]
   592cc:	add	x0, sp, #0x20
   592d0:	add	x24, x20, #0x2
   592d4:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   592d8:	cmp	x21, x20
   592dc:	b.eq	59450 <ZDICT_addEntropyTablesFromBuffer@@Base+0x172c>  // b.none
   592e0:	cmp	w0, #0x2
   592e4:	mov	x20, x24
   592e8:	b.ls	5927c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1558>  // b.plast
   592ec:	b	59450 <ZDICT_addEntropyTablesFromBuffer@@Base+0x172c>
   592f0:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   592f4:	mov	x21, x0
   592f8:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   592fc:	cbnz	w0, 5948c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1768>
   59300:	add	x0, sp, #0x10
   59304:	add	x1, sp, #0x20
   59308:	mov	x2, x20
   5930c:	bl	5bfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b8>
   59310:	mov	x0, sp
   59314:	add	x1, sp, #0x20
   59318:	mov	x2, x20
   5931c:	bl	5bfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b8>
   59320:	add	x0, sp, #0x20
   59324:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59328:	cmp	x23, x19
   5932c:	mov	x20, x19
   59330:	b.ls	59398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1674>  // b.plast
   59334:	mov	x20, x19
   59338:	cbnz	w0, 59398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1674>
   5933c:	mov	x20, x19
   59340:	add	x0, sp, #0x10
   59344:	add	x1, sp, #0x20
   59348:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5934c:	strb	w0, [x20]
   59350:	mov	x0, sp
   59354:	add	x1, sp, #0x20
   59358:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5935c:	strb	w0, [x20, #1]
   59360:	add	x0, sp, #0x10
   59364:	add	x1, sp, #0x20
   59368:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5936c:	strb	w0, [x20, #2]
   59370:	mov	x0, sp
   59374:	add	x1, sp, #0x20
   59378:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5937c:	strb	w0, [x20, #3]
   59380:	add	x0, sp, #0x20
   59384:	add	x20, x20, #0x4
   59388:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5938c:	cmp	x20, x23
   59390:	b.cs	59398 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1674>  // b.hs, b.nlast
   59394:	cbz	w0, 59340 <ZDICT_addEntropyTablesFromBuffer@@Base+0x161c>
   59398:	add	x0, sp, #0x20
   5939c:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   593a0:	cmp	x20, x22
   593a4:	b.eq	59444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1720>  // b.none
   593a8:	cmp	w0, #0x2
   593ac:	b.hi	59444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1720>  // b.pmore
   593b0:	sub	x21, x22, #0x2
   593b4:	sub	x23, x22, #0x1
   593b8:	add	x0, sp, #0x20
   593bc:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   593c0:	cbz	w0, 593d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x16ac>
   593c4:	add	x0, sp, #0x10
   593c8:	bl	5c0c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43a0>
   593cc:	cbnz	w0, 59444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1720>
   593d0:	add	x0, sp, #0x10
   593d4:	add	x1, sp, #0x20
   593d8:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   593dc:	strb	w0, [x20]
   593e0:	add	x0, sp, #0x20
   593e4:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   593e8:	cmp	x23, x20
   593ec:	b.eq	5944c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1728>  // b.none
   593f0:	cmp	w0, #0x2
   593f4:	b.hi	5944c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1728>  // b.pmore
   593f8:	add	x0, sp, #0x20
   593fc:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   59400:	cbz	w0, 59410 <ZDICT_addEntropyTablesFromBuffer@@Base+0x16ec>
   59404:	mov	x0, sp
   59408:	bl	5c0c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43a0>
   5940c:	cbnz	w0, 5944c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1728>
   59410:	mov	x0, sp
   59414:	add	x1, sp, #0x20
   59418:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5941c:	strb	w0, [x20, #1]
   59420:	add	x0, sp, #0x20
   59424:	add	x24, x20, #0x2
   59428:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5942c:	cmp	x21, x20
   59430:	b.eq	59450 <ZDICT_addEntropyTablesFromBuffer@@Base+0x172c>  // b.none
   59434:	cmp	w0, #0x2
   59438:	mov	x20, x24
   5943c:	b.ls	593b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1694>  // b.plast
   59440:	b	59450 <ZDICT_addEntropyTablesFromBuffer@@Base+0x172c>
   59444:	mov	x24, x20
   59448:	b	59450 <ZDICT_addEntropyTablesFromBuffer@@Base+0x172c>
   5944c:	add	x24, x20, #0x1
   59450:	add	x0, sp, #0x20
   59454:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   59458:	cbz	w0, 5947c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1758>
   5945c:	add	x0, sp, #0x10
   59460:	bl	5c0c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43a0>
   59464:	cbz	w0, 5947c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1758>
   59468:	mov	x0, sp
   5946c:	bl	5c0c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43a0>
   59470:	cbz	w0, 5947c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1758>
   59474:	sub	x21, x24, x19
   59478:	b	5948c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1768>
   5947c:	cmp	x24, x22
   59480:	mov	x8, #0xffffffffffffffec    	// #-20
   59484:	mov	x9, #0xffffffffffffffba    	// #-70
   59488:	csel	x21, x9, x8, eq  // eq = none
   5948c:	mov	x0, x21
   59490:	ldp	x20, x19, [sp, #112]
   59494:	ldp	x22, x21, [sp, #96]
   59498:	ldp	x24, x23, [sp, #80]
   5949c:	ldp	x29, x30, [sp, #64]
   594a0:	add	sp, sp, #0x80
   594a4:	ret
   594a8:	stp	x29, x30, [sp, #-80]!
   594ac:	str	x28, [sp, #16]
   594b0:	stp	x24, x23, [sp, #32]
   594b4:	stp	x22, x21, [sp, #48]
   594b8:	stp	x20, x19, [sp, #64]
   594bc:	mov	x29, sp
   594c0:	sub	sp, sp, #0x4, lsl #12
   594c4:	sub	sp, sp, #0x210
   594c8:	mov	w8, #0xff                  	// #255
   594cc:	cmp	x3, #0x2
   594d0:	str	w8, [x29, #24]
   594d4:	b.cs	594e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x17bc>  // b.hs, b.nlast
   594d8:	mov	x24, #0xffffffffffffffb8    	// #-72
   594dc:	b	5951c <ZDICT_addEntropyTablesFromBuffer@@Base+0x17f8>
   594e0:	mov	x22, x3
   594e4:	mov	x21, x2
   594e8:	mov	x20, x0
   594ec:	add	x0, sp, #0x4, lsl #12
   594f0:	mov	x19, x1
   594f4:	add	x0, x0, #0x10
   594f8:	add	x1, x29, #0x18
   594fc:	add	x2, x29, #0x1c
   59500:	mov	x3, x21
   59504:	mov	x4, x22
   59508:	bl	58de8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10c4>
   5950c:	mov	x23, x0
   59510:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   59514:	mov	x24, x23
   59518:	cbz	w0, 59540 <ZDICT_addEntropyTablesFromBuffer@@Base+0x181c>
   5951c:	mov	x0, x24
   59520:	add	sp, sp, #0x4, lsl #12
   59524:	add	sp, sp, #0x210
   59528:	ldp	x20, x19, [sp, #64]
   5952c:	ldp	x22, x21, [sp, #48]
   59530:	ldp	x24, x23, [sp, #32]
   59534:	ldr	x28, [sp, #16]
   59538:	ldp	x29, x30, [sp], #80
   5953c:	ret
   59540:	cmp	x23, x22
   59544:	b.cs	594d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x17b4>  // b.hs, b.nlast
   59548:	ldp	w2, w3, [x29, #24]
   5954c:	add	x1, sp, #0x4, lsl #12
   59550:	add	x0, sp, #0xc
   59554:	add	x1, x1, #0x10
   59558:	bl	58bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9c>
   5955c:	mov	x24, x0
   59560:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   59564:	cbnz	w0, 5951c <ZDICT_addEntropyTablesFromBuffer@@Base+0x17f8>
   59568:	sub	x3, x22, x23
   5956c:	add	x2, x21, x23
   59570:	add	x4, sp, #0xc
   59574:	mov	x0, x20
   59578:	mov	x1, x19
   5957c:	bl	59178 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1454>
   59580:	mov	x24, x0
   59584:	b	5951c <ZDICT_addEntropyTablesFromBuffer@@Base+0x17f8>
   59588:	stp	x29, x30, [sp, #-16]!
   5958c:	mov	x29, sp
   59590:	bl	58db0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x108c>
   59594:	ldp	x29, x30, [sp], #16
   59598:	ret
   5959c:	stp	x29, x30, [sp, #-16]!
   595a0:	mov	x29, sp
   595a4:	bl	58dd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10ac>
   595a8:	ldp	x29, x30, [sp], #16
   595ac:	ret
   595b0:	sub	sp, sp, #0x180
   595b4:	stp	x29, x30, [sp, #336]
   595b8:	add	x29, sp, #0x150
   595bc:	stp	x20, x19, [sp, #368]
   595c0:	mov	x5, x2
   595c4:	mov	x4, x1
   595c8:	mov	x20, x0
   595cc:	add	x0, sp, #0x50
   595d0:	add	x1, sp, #0xc
   595d4:	add	x2, x29, #0x18
   595d8:	add	x3, x29, #0x1c
   595dc:	str	x28, [sp, #352]
   595e0:	str	xzr, [x29, #24]
   595e4:	bl	596d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x19b4>
   595e8:	mov	x19, x0
   595ec:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   595f0:	cbnz	w0, 596c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x199c>
   595f4:	ldr	w9, [x29, #28]
   595f8:	ldrh	w8, [x20]
   595fc:	cmp	w9, w8
   59600:	b.ls	5960c <ZDICT_addEntropyTablesFromBuffer@@Base+0x18e8>  // b.plast
   59604:	mov	x19, #0xffffffffffffffd4    	// #-44
   59608:	b	596c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x199c>
   5960c:	strh	w9, [x20]
   59610:	cbz	w9, 5964c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1928>
   59614:	mov	w8, wzr
   59618:	mov	w10, #0x1                   	// #1
   5961c:	add	x11, sp, #0xc
   59620:	mov	w12, w10
   59624:	lsl	x12, x12, #2
   59628:	ldr	w13, [x11, x12]
   5962c:	sub	w14, w10, #0x1
   59630:	add	w10, w10, #0x1
   59634:	cmp	w10, w9
   59638:	lsl	w13, w13, w14
   5963c:	add	w13, w13, w8
   59640:	str	w8, [x11, x12]
   59644:	mov	w8, w13
   59648:	b.ls	59620 <ZDICT_addEntropyTablesFromBuffer@@Base+0x18fc>  // b.plast
   5964c:	ldr	w8, [x29, #24]
   59650:	cbz	w8, 596c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x199c>
   59654:	ldr	w10, [x29, #24]
   59658:	mov	x8, xzr
   5965c:	add	w9, w9, #0x1
   59660:	add	x11, x20, #0x3
   59664:	add	x12, sp, #0x50
   59668:	mov	w13, #0x1                   	// #1
   5966c:	add	x14, sp, #0xc
   59670:	b	59684 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1960>
   59674:	add	x8, x8, #0x1
   59678:	cmp	x8, x10
   5967c:	str	w16, [x14, x15, lsl #2]
   59680:	b.cs	596c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x199c>  // b.hs, b.nlast
   59684:	ldrb	w15, [x12, x8]
   59688:	ldr	w0, [x14, x15, lsl #2]
   5968c:	lsl	w16, w13, w15
   59690:	add	w16, w0, w16, asr #1
   59694:	cmp	w0, w16
   59698:	b.cs	59674 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1950>  // b.hs, b.nlast
   5969c:	mov	w1, w16
   596a0:	sub	w17, w9, w15
   596a4:	add	x18, x11, x0, lsl #1
   596a8:	sub	x0, x1, x0
   596ac:	sturb	w8, [x18, #-1]
   596b0:	strb	w17, [x18], #2
   596b4:	subs	x0, x0, #0x1
   596b8:	b.ne	596ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x1988>  // b.any
   596bc:	b	59674 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1950>
   596c0:	mov	x0, x19
   596c4:	ldp	x20, x19, [sp, #368]
   596c8:	ldr	x28, [sp, #352]
   596cc:	ldp	x29, x30, [sp, #336]
   596d0:	add	sp, sp, #0x180
   596d4:	ret
   596d8:	stp	x29, x30, [sp, #-96]!
   596dc:	str	x27, [sp, #16]
   596e0:	stp	x26, x25, [sp, #32]
   596e4:	stp	x24, x23, [sp, #48]
   596e8:	stp	x22, x21, [sp, #64]
   596ec:	stp	x20, x19, [sp, #80]
   596f0:	mov	x29, sp
   596f4:	cbz	x5, 59858 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b34>
   596f8:	ldrsb	w8, [x4]
   596fc:	mov	x19, x3
   59700:	mov	x20, x2
   59704:	mov	x21, x1
   59708:	mov	x22, x0
   5970c:	and	x24, x8, #0xff
   59710:	tbnz	w8, #31, 59748 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a24>
   59714:	cmp	x24, x5
   59718:	b.cs	59858 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b34>  // b.hs, b.nlast
   5971c:	add	x2, x4, #0x1
   59720:	mov	w1, #0xff                  	// #255
   59724:	mov	x0, x22
   59728:	mov	x3, x24
   5972c:	bl	594a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1784>
   59730:	mov	x23, x0
   59734:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   59738:	mov	w8, w0
   5973c:	mov	x0, x23
   59740:	cbnz	w8, 598e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bc0>
   59744:	b	5978c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a68>
   59748:	cmp	w24, #0xf2
   5974c:	b.cc	597f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1acc>  // b.lo, b.ul, b.last
   59750:	adrp	x8, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   59754:	add	x8, x8, #0x5b4
   59758:	add	x8, x8, x24, lsl #2
   5975c:	sub	x8, x8, #0x3c8
   59760:	ldrsw	x23, [x8]
   59764:	movi	v0.16b, #0x1
   59768:	stp	q0, q0, [x22, #224]
   5976c:	stp	q0, q0, [x22, #192]
   59770:	stp	q0, q0, [x22, #160]
   59774:	stp	q0, q0, [x22, #128]
   59778:	stp	q0, q0, [x22, #96]
   5977c:	stp	q0, q0, [x22, #64]
   59780:	stp	q0, q0, [x22, #32]
   59784:	stp	q0, q0, [x22]
   59788:	mov	x24, xzr
   5978c:	movi	v0.2d, #0x0
   59790:	str	wzr, [x21, #64]
   59794:	stp	q0, q0, [x21, #32]
   59798:	stp	q0, q0, [x21]
   5979c:	cbz	x23, 59860 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b3c>
   597a0:	mov	x8, xzr
   597a4:	mov	w25, wzr
   597a8:	mov	w9, #0x1                   	// #1
   597ac:	mov	w10, #0x1                   	// #1
   597b0:	ldrb	w11, [x22, x8]
   597b4:	cmp	x11, #0xf
   597b8:	b.hi	598e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bbc>  // b.pmore
   597bc:	lsl	x11, x11, #2
   597c0:	ldr	w12, [x21, x11]
   597c4:	add	w12, w12, #0x1
   597c8:	str	w12, [x21, x11]
   597cc:	ldrb	w11, [x22, x8]
   597d0:	mov	w8, w10
   597d4:	cmp	x23, x8
   597d8:	add	w10, w10, #0x1
   597dc:	lsl	w11, w9, w11
   597e0:	add	w25, w25, w11, asr #1
   597e4:	b.hi	597b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a8c>  // b.pmore
   597e8:	cbnz	w25, 59868 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b44>
   597ec:	b	598e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bbc>
   597f0:	sub	x8, x24, #0x7e
   597f4:	lsr	x8, x8, #1
   597f8:	cmp	x8, x5
   597fc:	b.cs	59858 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b34>  // b.hs, b.nlast
   59800:	sub	x23, x24, #0x7f
   59804:	cmp	x23, #0xff
   59808:	b.hi	598e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bbc>  // b.pmore
   5980c:	cbz	x23, 59850 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1b2c>
   59810:	mov	x11, xzr
   59814:	add	x9, x4, #0x1
   59818:	mov	w10, #0x2                   	// #2
   5981c:	sub	w12, w10, #0x2
   59820:	lsr	x12, x12, #1
   59824:	ldrb	w13, [x9, x12]
   59828:	lsr	w13, w13, #4
   5982c:	strb	w13, [x22, x11]
   59830:	ldrb	w12, [x9, x12]
   59834:	mov	w11, w10
   59838:	sub	w13, w10, #0x1
   5983c:	cmp	x23, x11
   59840:	and	w12, w12, #0xf
   59844:	add	w10, w10, #0x2
   59848:	strb	w12, [x22, w13, uxtw]
   5984c:	b.hi	5981c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1af8>  // b.pmore
   59850:	mov	x24, x8
   59854:	b	5978c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1a68>
   59858:	mov	x0, #0xffffffffffffffb8    	// #-72
   5985c:	b	598e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bc0>
   59860:	mov	w25, wzr
   59864:	cbz	w25, 598e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bbc>
   59868:	mov	w0, w25
   5986c:	bl	58d90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x106c>
   59870:	add	w26, w0, #0x1
   59874:	cmp	w26, #0x10
   59878:	b.hi	598e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bbc>  // b.pmore
   5987c:	mov	w27, #0x1                   	// #1
   59880:	lsl	w8, w27, w26
   59884:	sub	w25, w8, w25
   59888:	mov	w0, w25
   5988c:	bl	58d90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x106c>
   59890:	lsl	w8, w27, w0
   59894:	cmp	w8, w25
   59898:	b.ne	598e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bbc>  // b.any
   5989c:	add	w8, w0, #0x1
   598a0:	strb	w8, [x22, x23]
   598a4:	mov	w8, w8
   598a8:	lsl	x8, x8, #2
   598ac:	ldr	w9, [x21, x8]
   598b0:	mov	x0, #0xffffffffffffffec    	// #-20
   598b4:	add	w9, w9, #0x1
   598b8:	str	w9, [x21, x8]
   598bc:	ldr	w8, [x21, #4]
   598c0:	cmp	w8, #0x2
   598c4:	b.cc	598e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bc0>  // b.lo, b.ul, b.last
   598c8:	tbnz	w8, #0, 598e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bc0>
   598cc:	add	w8, w23, #0x1
   598d0:	add	x0, x24, #0x1
   598d4:	str	w8, [x20]
   598d8:	str	w26, [x19]
   598dc:	b	598e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bc0>
   598e0:	mov	x0, #0xffffffffffffffec    	// #-20
   598e4:	ldp	x20, x19, [sp, #80]
   598e8:	ldp	x22, x21, [sp, #64]
   598ec:	ldp	x24, x23, [sp, #48]
   598f0:	ldp	x26, x25, [sp, #32]
   598f4:	ldr	x27, [sp, #16]
   598f8:	ldp	x29, x30, [sp], #96
   598fc:	ret
   59900:	sub	sp, sp, #0x60
   59904:	stp	x29, x30, [sp, #32]
   59908:	str	x23, [sp, #48]
   5990c:	stp	x22, x21, [sp, #64]
   59910:	stp	x20, x19, [sp, #80]
   59914:	mov	x20, x4
   59918:	ldrh	w21, [x20], #2
   5991c:	cmp	x1, x3
   59920:	add	x29, sp, #0x20
   59924:	b.ls	5997c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c58>  // b.plast
   59928:	mov	x19, x1
   5992c:	mov	x22, x0
   59930:	mov	x0, sp
   59934:	mov	x1, x2
   59938:	mov	x2, x3
   5993c:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   59940:	mov	x23, x0
   59944:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   59948:	cbnz	w0, 59980 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c5c>
   5994c:	add	x2, x22, x19
   59950:	mov	x1, sp
   59954:	mov	x0, x22
   59958:	mov	x3, x20
   5995c:	mov	w4, w21
   59960:	bl	59ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1da4>
   59964:	mov	x0, sp
   59968:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5996c:	cmp	w0, #0x0
   59970:	mov	x8, #0xffffffffffffffec    	// #-20
   59974:	csel	x23, x8, x19, eq  // eq = none
   59978:	b	59980 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c5c>
   5997c:	mov	x23, #0xffffffffffffffba    	// #-70
   59980:	mov	x0, x23
   59984:	ldp	x20, x19, [sp, #80]
   59988:	ldp	x22, x21, [sp, #64]
   5998c:	ldr	x23, [sp, #48]
   59990:	ldp	x29, x30, [sp, #32]
   59994:	add	sp, sp, #0x60
   59998:	ret
   5999c:	stp	x29, x30, [sp, #-48]!
   599a0:	stp	x20, x19, [sp, #32]
   599a4:	mov	x20, x0
   599a8:	str	x21, [sp, #16]
   599ac:	mov	x29, sp
   599b0:	cbz	x2, 599f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ccc>
   599b4:	mov	x19, x2
   599b8:	cmp	x2, #0x8
   599bc:	str	x1, [x20, #24]
   599c0:	b.cc	59a00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1cdc>  // b.lo, b.ul, b.last
   599c4:	add	x21, x1, x19
   599c8:	sub	x0, x21, #0x8
   599cc:	str	x0, [x20, #16]
   599d0:	bl	5c19c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4478>
   599d4:	str	x0, [x20]
   599d8:	ldurb	w0, [x21, #-1]
   599dc:	cbz	w0, 59ab0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d8c>
   599e0:	bl	58d90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x106c>
   599e4:	mov	w8, #0x8                   	// #8
   599e8:	sub	w8, w8, w0
   599ec:	b	59aa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d84>
   599f0:	movi	v0.2d, #0x0
   599f4:	stp	q0, q0, [x20]
   599f8:	mov	x19, #0xffffffffffffffb8    	// #-72
   599fc:	b	59ab4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d90>
   59a00:	str	x1, [x20, #16]
   59a04:	ldrb	w8, [x1]
   59a08:	sub	x9, x19, #0x2
   59a0c:	cmp	x9, #0x5
   59a10:	str	x8, [x20]
   59a14:	b.hi	59a8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d68>  // b.pmore
   59a18:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   59a1c:	add	x10, x10, #0x418
   59a20:	adr	x11, 59a30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d0c>
   59a24:	ldrb	w12, [x10, x9]
   59a28:	add	x11, x11, x12, lsl #2
   59a2c:	br	x11
   59a30:	ldrb	w9, [x1, #6]
   59a34:	bfi	x8, x9, #48, #8
   59a38:	str	x8, [x20]
   59a3c:	ldrb	w8, [x1, #5]
   59a40:	ldr	x9, [x20]
   59a44:	add	x8, x9, x8, lsl #40
   59a48:	str	x8, [x20]
   59a4c:	ldrb	w8, [x1, #4]
   59a50:	ldr	x9, [x20]
   59a54:	add	x8, x9, x8, lsl #32
   59a58:	str	x8, [x20]
   59a5c:	ldrb	w8, [x1, #3]
   59a60:	ldr	x9, [x20]
   59a64:	add	x8, x9, x8, lsl #24
   59a68:	str	x8, [x20]
   59a6c:	ldrb	w8, [x1, #2]
   59a70:	ldr	x9, [x20]
   59a74:	add	x8, x9, x8, lsl #16
   59a78:	str	x8, [x20]
   59a7c:	ldrb	w8, [x1, #1]
   59a80:	ldr	x9, [x20]
   59a84:	add	x8, x9, x8, lsl #8
   59a88:	str	x8, [x20]
   59a8c:	add	x8, x19, x1
   59a90:	ldurb	w0, [x8, #-1]
   59a94:	cbz	w0, 59ab0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d8c>
   59a98:	bl	58d90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x106c>
   59a9c:	add	w8, w0, w19, lsl #3
   59aa0:	mov	w9, #0x48                  	// #72
   59aa4:	sub	w8, w9, w8
   59aa8:	str	w8, [x20, #8]
   59aac:	b	59ab4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1d90>
   59ab0:	mov	x19, #0xffffffffffffffff    	// #-1
   59ab4:	mov	x0, x19
   59ab8:	ldp	x20, x19, [sp, #32]
   59abc:	ldr	x21, [sp, #16]
   59ac0:	ldp	x29, x30, [sp], #48
   59ac4:	ret
   59ac8:	stp	x29, x30, [sp, #-80]!
   59acc:	stp	x24, x23, [sp, #32]
   59ad0:	mov	x23, x0
   59ad4:	mov	x0, x1
   59ad8:	str	x25, [sp, #16]
   59adc:	stp	x22, x21, [sp, #48]
   59ae0:	stp	x20, x19, [sp, #64]
   59ae4:	mov	x29, sp
   59ae8:	mov	w19, w4
   59aec:	mov	x20, x3
   59af0:	mov	x21, x2
   59af4:	mov	x22, x1
   59af8:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59afc:	sub	x25, x21, #0x4
   59b00:	cmp	x25, x23
   59b04:	b.cc	59b7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e58>  // b.lo, b.ul, b.last
   59b08:	cbnz	w0, 59b7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e58>
   59b0c:	mov	x0, x22
   59b10:	mov	x1, x20
   59b14:	mov	w2, w19
   59b18:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59b1c:	strb	w0, [x23]
   59b20:	mov	x0, x22
   59b24:	mov	x1, x20
   59b28:	mov	w2, w19
   59b2c:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59b30:	strb	w0, [x23, #1]
   59b34:	mov	x0, x22
   59b38:	mov	x1, x20
   59b3c:	mov	w2, w19
   59b40:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59b44:	strb	w0, [x23, #2]
   59b48:	mov	x0, x22
   59b4c:	mov	x1, x20
   59b50:	mov	w2, w19
   59b54:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59b58:	strb	w0, [x23, #3]
   59b5c:	mov	x0, x22
   59b60:	add	x24, x23, #0x4
   59b64:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59b68:	cmp	x24, x25
   59b6c:	b.hi	59b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e5c>  // b.pmore
   59b70:	mov	x23, x24
   59b74:	cbz	w0, 59b0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1de8>
   59b78:	b	59b80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e5c>
   59b7c:	mov	x24, x23
   59b80:	mov	x0, x22
   59b84:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59b88:	cmp	x24, x21
   59b8c:	b.cs	59bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e98>  // b.hs, b.nlast
   59b90:	cbnz	w0, 59bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e98>
   59b94:	mov	x0, x22
   59b98:	mov	x1, x20
   59b9c:	mov	w2, w19
   59ba0:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59ba4:	strb	w0, [x24], #1
   59ba8:	mov	x0, x22
   59bac:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59bb0:	cmp	x24, x21
   59bb4:	b.cs	59bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e98>  // b.hs, b.nlast
   59bb8:	cbz	w0, 59b94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1e70>
   59bbc:	cmp	x24, x21
   59bc0:	b.cs	59be0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ebc>  // b.hs, b.nlast
   59bc4:	mov	x0, x22
   59bc8:	mov	x1, x20
   59bcc:	mov	w2, w19
   59bd0:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59bd4:	strb	w0, [x24], #1
   59bd8:	cmp	x21, x24
   59bdc:	b.ne	59bc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ea0>  // b.any
   59be0:	ldp	x20, x19, [sp, #64]
   59be4:	ldp	x22, x21, [sp, #48]
   59be8:	ldp	x24, x23, [sp, #32]
   59bec:	ldr	x25, [sp, #16]
   59bf0:	ldp	x29, x30, [sp], #80
   59bf4:	ret
   59bf8:	ldp	x8, x9, [x0, #16]
   59bfc:	cmp	x8, x9
   59c00:	b.eq	59c0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ee8>  // b.none
   59c04:	mov	w0, wzr
   59c08:	ret
   59c0c:	ldr	w8, [x0, #8]
   59c10:	cmp	w8, #0x40
   59c14:	cset	w0, eq  // eq = none
   59c18:	ret
   59c1c:	stp	x29, x30, [sp, #-64]!
   59c20:	stp	x28, x23, [sp, #16]
   59c24:	stp	x22, x21, [sp, #32]
   59c28:	stp	x20, x19, [sp, #48]
   59c2c:	mov	x29, sp
   59c30:	sub	sp, sp, #0x2, lsl #12
   59c34:	sub	sp, sp, #0x10
   59c38:	mov	x22, x2
   59c3c:	mov	x19, x1
   59c40:	mov	x20, x0
   59c44:	add	x0, sp, #0xc
   59c48:	mov	w2, #0x2002                	// #8194
   59c4c:	mov	w1, wzr
   59c50:	mov	x21, x3
   59c54:	bl	46a0 <memset@plt>
   59c58:	mov	w8, #0xc                   	// #12
   59c5c:	add	x0, sp, #0xc
   59c60:	mov	x1, x22
   59c64:	mov	x2, x21
   59c68:	strh	w8, [sp, #12]
   59c6c:	bl	595b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188c>
   59c70:	mov	x23, x0
   59c74:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   59c78:	cbnz	w0, 59ca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f84>
   59c7c:	cmp	x23, x21
   59c80:	b.cs	59ca4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f80>  // b.hs, b.nlast
   59c84:	add	x2, x22, x23
   59c88:	sub	x3, x21, x23
   59c8c:	add	x4, sp, #0xc
   59c90:	mov	x0, x20
   59c94:	mov	x1, x19
   59c98:	bl	59900 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1bdc>
   59c9c:	mov	x23, x0
   59ca0:	b	59ca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1f84>
   59ca4:	mov	x23, #0xffffffffffffffb8    	// #-72
   59ca8:	mov	x0, x23
   59cac:	add	sp, sp, #0x2, lsl #12
   59cb0:	add	sp, sp, #0x10
   59cb4:	ldp	x20, x19, [sp, #48]
   59cb8:	ldp	x22, x21, [sp, #32]
   59cbc:	ldp	x28, x23, [sp, #16]
   59cc0:	ldp	x29, x30, [sp], #64
   59cc4:	ret
   59cc8:	sub	sp, sp, #0x120
   59ccc:	cmp	x3, #0xa
   59cd0:	stp	x29, x30, [sp, #192]
   59cd4:	stp	x28, x27, [sp, #208]
   59cd8:	stp	x26, x25, [sp, #224]
   59cdc:	stp	x24, x23, [sp, #240]
   59ce0:	stp	x22, x21, [sp, #256]
   59ce4:	stp	x20, x19, [sp, #272]
   59ce8:	add	x29, sp, #0xc0
   59cec:	b.cc	59d40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x201c>  // b.lo, b.ul, b.last
   59cf0:	mov	x20, x4
   59cf4:	ldrh	w21, [x20], #2
   59cf8:	mov	x22, x0
   59cfc:	mov	x0, x2
   59d00:	mov	x23, x3
   59d04:	mov	x27, x2
   59d08:	mov	x19, x1
   59d0c:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   59d10:	and	x26, x0, #0xffff
   59d14:	add	x0, x27, #0x2
   59d18:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   59d1c:	and	x25, x0, #0xffff
   59d20:	add	x0, x27, #0x4
   59d24:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   59d28:	and	x24, x0, #0xffff
   59d2c:	add	x8, x26, x25
   59d30:	add	x8, x8, x24
   59d34:	add	x8, x8, #0x6
   59d38:	subs	x23, x23, x8
   59d3c:	b.cs	59d68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2044>  // b.hs, b.nlast
   59d40:	mov	x27, #0xffffffffffffffec    	// #-20
   59d44:	mov	x0, x27
   59d48:	ldp	x20, x19, [sp, #272]
   59d4c:	ldp	x22, x21, [sp, #256]
   59d50:	ldp	x24, x23, [sp, #240]
   59d54:	ldp	x26, x25, [sp, #224]
   59d58:	ldp	x28, x27, [sp, #208]
   59d5c:	ldp	x29, x30, [sp, #192]
   59d60:	add	sp, sp, #0x120
   59d64:	ret
   59d68:	add	x28, x27, #0x6
   59d6c:	sub	x0, x29, #0x28
   59d70:	mov	x1, x28
   59d74:	mov	x2, x26
   59d78:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   59d7c:	mov	x27, x0
   59d80:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   59d84:	cbnz	w0, 59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>
   59d88:	add	x26, x28, x26
   59d8c:	sub	x0, x29, #0x48
   59d90:	mov	x1, x26
   59d94:	mov	x2, x25
   59d98:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   59d9c:	mov	x27, x0
   59da0:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   59da4:	cbnz	w0, 59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>
   59da8:	add	x25, x26, x25
   59dac:	add	x0, sp, #0x58
   59db0:	mov	x1, x25
   59db4:	mov	x2, x24
   59db8:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   59dbc:	mov	x27, x0
   59dc0:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   59dc4:	cbnz	w0, 59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>
   59dc8:	add	x1, x25, x24
   59dcc:	add	x0, sp, #0x38
   59dd0:	mov	x2, x23
   59dd4:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   59dd8:	mov	x27, x0
   59ddc:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   59de0:	cbnz	w0, 59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>
   59de4:	add	x8, x19, #0x3
   59de8:	lsr	x23, x8, #2
   59dec:	add	x8, x22, x23
   59df0:	str	x8, [sp, #16]
   59df4:	add	x8, x8, x23
   59df8:	sub	x0, x29, #0x28
   59dfc:	add	x28, x22, x19
   59e00:	str	x8, [sp, #32]
   59e04:	add	x24, x8, x23
   59e08:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59e0c:	mov	w25, w0
   59e10:	sub	x0, x29, #0x48
   59e14:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59e18:	mov	w26, w0
   59e1c:	add	x0, sp, #0x58
   59e20:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59e24:	mov	w27, w0
   59e28:	add	x0, sp, #0x38
   59e2c:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59e30:	sub	x8, x28, #0x7
   59e34:	cmp	x24, x8
   59e38:	str	x24, [sp, #24]
   59e3c:	str	x8, [sp, #48]
   59e40:	b.cs	5a028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2304>  // b.hs, b.nlast
   59e44:	orr	w8, w26, w25
   59e48:	orr	w8, w8, w27
   59e4c:	orr	w8, w8, w0
   59e50:	cbnz	w8, 5a028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2304>
   59e54:	lsl	x27, x23, #1
   59e58:	add	x8, x27, x23
   59e5c:	str	x28, [sp, #8]
   59e60:	str	x8, [sp, #40]
   59e64:	ldr	x8, [sp, #40]
   59e68:	sub	x0, x29, #0x28
   59e6c:	mov	x1, x20
   59e70:	mov	w2, w21
   59e74:	add	x24, x22, x8
   59e78:	add	x25, x22, x27
   59e7c:	add	x26, x22, x23
   59e80:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59e84:	strb	w0, [x22]
   59e88:	sub	x0, x29, #0x48
   59e8c:	mov	x1, x20
   59e90:	mov	w2, w21
   59e94:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59e98:	strb	w0, [x26]
   59e9c:	add	x0, sp, #0x58
   59ea0:	mov	x1, x20
   59ea4:	mov	w2, w21
   59ea8:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59eac:	strb	w0, [x25]
   59eb0:	add	x0, sp, #0x38
   59eb4:	mov	x1, x20
   59eb8:	mov	w2, w21
   59ebc:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59ec0:	strb	w0, [x24]
   59ec4:	sub	x0, x29, #0x28
   59ec8:	mov	x1, x20
   59ecc:	mov	w2, w21
   59ed0:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59ed4:	strb	w0, [x22, #1]
   59ed8:	sub	x0, x29, #0x48
   59edc:	mov	x1, x20
   59ee0:	mov	w2, w21
   59ee4:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59ee8:	strb	w0, [x26, #1]
   59eec:	add	x0, sp, #0x58
   59ef0:	mov	x1, x20
   59ef4:	mov	w2, w21
   59ef8:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59efc:	strb	w0, [x25, #1]
   59f00:	add	x0, sp, #0x38
   59f04:	mov	x1, x20
   59f08:	mov	w2, w21
   59f0c:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59f10:	strb	w0, [x24, #1]
   59f14:	sub	x0, x29, #0x28
   59f18:	mov	x1, x20
   59f1c:	mov	w2, w21
   59f20:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59f24:	strb	w0, [x22, #2]
   59f28:	sub	x0, x29, #0x48
   59f2c:	mov	x1, x20
   59f30:	mov	w2, w21
   59f34:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59f38:	strb	w0, [x26, #2]
   59f3c:	add	x0, sp, #0x58
   59f40:	mov	x1, x20
   59f44:	mov	w2, w21
   59f48:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59f4c:	strb	w0, [x25, #2]
   59f50:	add	x0, sp, #0x38
   59f54:	mov	x1, x20
   59f58:	mov	w2, w21
   59f5c:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59f60:	strb	w0, [x24, #2]
   59f64:	sub	x0, x29, #0x28
   59f68:	mov	x1, x20
   59f6c:	mov	w2, w21
   59f70:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59f74:	strb	w0, [x22, #3]
   59f78:	sub	x0, x29, #0x48
   59f7c:	mov	x1, x20
   59f80:	mov	w2, w21
   59f84:	add	x28, x22, #0x4
   59f88:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59f8c:	strb	w0, [x26, #3]
   59f90:	add	x0, sp, #0x58
   59f94:	mov	x1, x20
   59f98:	mov	w2, w21
   59f9c:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59fa0:	strb	w0, [x25, #3]
   59fa4:	add	x0, sp, #0x38
   59fa8:	mov	x1, x20
   59fac:	mov	w2, w21
   59fb0:	bl	5a1ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x2488>
   59fb4:	strb	w0, [x24, #3]
   59fb8:	sub	x0, x29, #0x28
   59fbc:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59fc0:	mov	w22, w0
   59fc4:	sub	x0, x29, #0x48
   59fc8:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59fcc:	mov	w25, w0
   59fd0:	add	x0, sp, #0x58
   59fd4:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59fd8:	mov	w26, w0
   59fdc:	add	x0, sp, #0x38
   59fe0:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   59fe4:	ldr	x9, [sp, #48]
   59fe8:	add	x8, x24, #0x4
   59fec:	cmp	x8, x9
   59ff0:	b.cs	5a008 <ZDICT_addEntropyTablesFromBuffer@@Base+0x22e4>  // b.hs, b.nlast
   59ff4:	orr	w8, w25, w22
   59ff8:	orr	w8, w8, w26
   59ffc:	orr	w8, w8, w0
   5a000:	mov	x22, x28
   5a004:	cbz	w8, 59e64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2140>
   5a008:	add	x8, x27, x23
   5a00c:	add	x25, x28, x27
   5a010:	add	x24, x28, x8
   5a014:	add	x26, x28, x23
   5a018:	mov	x22, x28
   5a01c:	ldp	x28, x2, [sp, #8]
   5a020:	ldr	x23, [sp, #24]
   5a024:	b	5a038 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2314>
   5a028:	ldp	x2, x23, [sp, #16]
   5a02c:	ldr	x25, [sp, #32]
   5a030:	mov	x26, x2
   5a034:	mov	x24, x23
   5a038:	cmp	x22, x2
   5a03c:	mov	x27, #0xffffffffffffffec    	// #-20
   5a040:	b.hi	59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>  // b.pmore
   5a044:	ldr	x8, [sp, #32]
   5a048:	cmp	x26, x8
   5a04c:	b.hi	59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>  // b.pmore
   5a050:	cmp	x25, x23
   5a054:	b.hi	59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>  // b.pmore
   5a058:	sub	x1, x29, #0x28
   5a05c:	mov	x0, x22
   5a060:	mov	x3, x20
   5a064:	mov	w4, w21
   5a068:	bl	59ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1da4>
   5a06c:	ldr	x2, [sp, #32]
   5a070:	sub	x1, x29, #0x48
   5a074:	mov	x0, x26
   5a078:	mov	x3, x20
   5a07c:	mov	w4, w21
   5a080:	bl	59ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1da4>
   5a084:	add	x1, sp, #0x58
   5a088:	mov	x0, x25
   5a08c:	mov	x2, x23
   5a090:	mov	x3, x20
   5a094:	mov	w4, w21
   5a098:	bl	59ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1da4>
   5a09c:	add	x1, sp, #0x38
   5a0a0:	mov	x0, x24
   5a0a4:	mov	x2, x28
   5a0a8:	mov	x3, x20
   5a0ac:	mov	w4, w21
   5a0b0:	bl	59ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1da4>
   5a0b4:	sub	x0, x29, #0x28
   5a0b8:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5a0bc:	mov	w20, w0
   5a0c0:	sub	x0, x29, #0x48
   5a0c4:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5a0c8:	and	w20, w0, w20
   5a0cc:	add	x0, sp, #0x58
   5a0d0:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5a0d4:	and	w20, w20, w0
   5a0d8:	add	x0, sp, #0x38
   5a0dc:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5a0e0:	tst	w20, w0
   5a0e4:	mov	x8, #0xffffffffffffffec    	// #-20
   5a0e8:	csel	x27, x8, x19, eq  // eq = none
   5a0ec:	b	59d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2020>
   5a0f0:	stp	x29, x30, [sp, #-16]!
   5a0f4:	mov	x29, sp
   5a0f8:	bl	5c1cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x44a8>
   5a0fc:	ldp	x29, x30, [sp], #16
   5a100:	ret
   5a104:	stp	x29, x30, [sp, #-32]!
   5a108:	stp	x20, x19, [sp, #16]
   5a10c:	ldr	w8, [x0, #8]
   5a110:	mov	x29, sp
   5a114:	cmp	w8, #0x40
   5a118:	b.ls	5a124 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2400>  // b.plast
   5a11c:	mov	w20, #0x3                   	// #3
   5a120:	b	5a19c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2478>
   5a124:	ldp	x9, x10, [x0, #16]
   5a128:	mov	x19, x0
   5a12c:	add	x11, x10, #0x8
   5a130:	cmp	x9, x11
   5a134:	b.cs	5a170 <ZDICT_addEntropyTablesFromBuffer@@Base+0x244c>  // b.hs, b.nlast
   5a138:	cmp	x9, x10
   5a13c:	b.eq	5a190 <ZDICT_addEntropyTablesFromBuffer@@Base+0x246c>  // b.none
   5a140:	lsr	x11, x8, #3
   5a144:	sub	x13, x9, x11
   5a148:	sub	w12, w9, w10
   5a14c:	cmp	x13, x10
   5a150:	csel	w10, w12, w11, cc  // cc = lo, ul, last
   5a154:	sub	x0, x9, x10
   5a158:	sub	w8, w8, w10, lsl #3
   5a15c:	cset	w20, cc  // cc = lo, ul, last
   5a160:	str	x0, [x19, #16]
   5a164:	str	w8, [x19, #8]
   5a168:	bl	5c19c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4478>
   5a16c:	b	5a188 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2464>
   5a170:	sub	x0, x9, x8, lsr #3
   5a174:	and	w8, w8, #0x7
   5a178:	str	x0, [x19, #16]
   5a17c:	str	w8, [x19, #8]
   5a180:	bl	5c19c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4478>
   5a184:	mov	w20, wzr
   5a188:	str	x0, [x19]
   5a18c:	b	5a19c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2478>
   5a190:	cmp	w8, #0x40
   5a194:	mov	w8, #0x1                   	// #1
   5a198:	cinc	w20, w8, cs  // cs = hs, nlast
   5a19c:	mov	w0, w20
   5a1a0:	ldp	x20, x19, [sp, #16]
   5a1a4:	ldp	x29, x30, [sp], #32
   5a1a8:	ret
   5a1ac:	stp	x29, x30, [sp, #-32]!
   5a1b0:	stp	x20, x19, [sp, #16]
   5a1b4:	mov	x19, x1
   5a1b8:	mov	w1, w2
   5a1bc:	mov	x29, sp
   5a1c0:	mov	x20, x0
   5a1c4:	bl	5c184 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4460>
   5a1c8:	add	x8, x19, x0, lsl #1
   5a1cc:	ldrb	w1, [x8, #1]
   5a1d0:	ldrb	w19, [x8]
   5a1d4:	mov	x0, x20
   5a1d8:	bl	5c134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4410>
   5a1dc:	mov	w0, w19
   5a1e0:	ldp	x20, x19, [sp, #16]
   5a1e4:	ldp	x29, x30, [sp], #32
   5a1e8:	ret
   5a1ec:	stp	x29, x30, [sp, #-64]!
   5a1f0:	stp	x28, x23, [sp, #16]
   5a1f4:	stp	x22, x21, [sp, #32]
   5a1f8:	stp	x20, x19, [sp, #48]
   5a1fc:	mov	x29, sp
   5a200:	sub	sp, sp, #0x2, lsl #12
   5a204:	sub	sp, sp, #0x10
   5a208:	mov	x22, x2
   5a20c:	mov	x19, x1
   5a210:	mov	x20, x0
   5a214:	add	x0, sp, #0xc
   5a218:	mov	w2, #0x2002                	// #8194
   5a21c:	mov	w1, wzr
   5a220:	mov	x21, x3
   5a224:	bl	46a0 <memset@plt>
   5a228:	mov	w8, #0xc                   	// #12
   5a22c:	add	x0, sp, #0xc
   5a230:	mov	x1, x22
   5a234:	mov	x2, x21
   5a238:	strh	w8, [sp, #12]
   5a23c:	bl	595b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x188c>
   5a240:	mov	x23, x0
   5a244:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a248:	cbnz	w0, 5a278 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2554>
   5a24c:	cmp	x23, x21
   5a250:	b.cs	5a274 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2550>  // b.hs, b.nlast
   5a254:	add	x2, x22, x23
   5a258:	sub	x3, x21, x23
   5a25c:	add	x4, sp, #0xc
   5a260:	mov	x0, x20
   5a264:	mov	x1, x19
   5a268:	bl	59cc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1fa4>
   5a26c:	mov	x23, x0
   5a270:	b	5a278 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2554>
   5a274:	mov	x23, #0xffffffffffffffb8    	// #-72
   5a278:	mov	x0, x23
   5a27c:	add	sp, sp, #0x2, lsl #12
   5a280:	add	sp, sp, #0x10
   5a284:	ldp	x20, x19, [sp, #48]
   5a288:	ldp	x22, x21, [sp, #32]
   5a28c:	ldp	x28, x23, [sp, #16]
   5a290:	ldp	x29, x30, [sp], #64
   5a294:	ret
   5a298:	stp	x29, x30, [sp, #-64]!
   5a29c:	str	x28, [sp, #16]
   5a2a0:	stp	x22, x21, [sp, #32]
   5a2a4:	stp	x20, x19, [sp, #48]
   5a2a8:	mov	x29, sp
   5a2ac:	sub	sp, sp, #0x7f0
   5a2b0:	add	x22, sp, #0x450
   5a2b4:	movi	v0.2d, #0x0
   5a2b8:	mov	x19, x0
   5a2bc:	str	wzr, [sp, #1248]
   5a2c0:	str	xzr, [sp, #1168]
   5a2c4:	stp	q0, q0, [x22, #112]
   5a2c8:	stp	q0, q0, [x22, #80]
   5a2cc:	stp	q0, q0, [x22, #32]
   5a2d0:	stp	q0, q0, [x22]
   5a2d4:	ldr	w21, [x19], #4
   5a2d8:	cmp	w21, #0x10
   5a2dc:	b.ls	5a2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x25c4>  // b.plast
   5a2e0:	mov	x20, #0xffffffffffffffd4    	// #-44
   5a2e4:	b	5a444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2720>
   5a2e8:	mov	x5, x2
   5a2ec:	mov	x4, x1
   5a2f0:	sub	x0, x29, #0x100
   5a2f4:	add	x1, sp, #0x4a0
   5a2f8:	add	x2, sp, #0x8
   5a2fc:	add	x3, sp, #0xc
   5a300:	bl	596d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x19b4>
   5a304:	mov	x20, x0
   5a308:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a30c:	cbnz	w0, 5a444 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2720>
   5a310:	ldr	w10, [sp, #12]
   5a314:	cmp	w10, w21
   5a318:	b.hi	5a2e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x25bc>  // b.pmore
   5a31c:	mov	w9, wzr
   5a320:	orr	x11, x22, #0x4
   5a324:	add	x8, sp, #0x4a0
   5a328:	add	w12, w10, w9
   5a32c:	ldr	w12, [x8, w12, uxtw #2]
   5a330:	sub	w9, w9, #0x1
   5a334:	cbz	w12, 5a328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2604>
   5a338:	add	w8, w10, w9
   5a33c:	cmn	w8, #0x1
   5a340:	add	w6, w8, #0x1
   5a344:	b.eq	5a37c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2658>  // b.none
   5a348:	mov	w12, wzr
   5a34c:	mov	w13, #0x1                   	// #1
   5a350:	add	x14, sp, #0x4a0
   5a354:	mov	w15, w13
   5a358:	lsl	x15, x15, #2
   5a35c:	ldr	w16, [x14, x15]
   5a360:	add	w13, w13, #0x1
   5a364:	cmp	w13, w6
   5a368:	str	w12, [x11, x15]
   5a36c:	add	w3, w16, w12
   5a370:	mov	w12, w3
   5a374:	b.ls	5a354 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2630>  // b.plast
   5a378:	b	5a380 <ZDICT_addEntropyTablesFromBuffer@@Base+0x265c>
   5a37c:	mov	w3, wzr
   5a380:	ldr	w12, [sp, #8]
   5a384:	str	w3, [sp, #1108]
   5a388:	cbz	w12, 5a3c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x26a4>
   5a38c:	ldr	w13, [sp, #8]
   5a390:	mov	x12, xzr
   5a394:	sub	x14, x29, #0x100
   5a398:	add	x15, sp, #0x4f0
   5a39c:	ldrb	w16, [x14, x12]
   5a3a0:	lsl	x17, x16, #2
   5a3a4:	ldr	w18, [x11, x17]
   5a3a8:	add	w0, w18, #0x1
   5a3ac:	add	x18, x15, x18, lsl #1
   5a3b0:	strb	w12, [x18]
   5a3b4:	add	x12, x12, #0x1
   5a3b8:	cmp	x12, x13
   5a3bc:	str	w0, [x11, x17]
   5a3c0:	strb	w16, [x18, #1]
   5a3c4:	b.cc	5a39c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2678>  // b.lo, b.ul, b.last
   5a3c8:	add	w7, w10, #0x1
   5a3cc:	cmn	w8, #0x1
   5a3d0:	neg	w11, w9
   5a3d4:	str	wzr, [sp, #1108]
   5a3d8:	b.eq	5a420 <ZDICT_addEntropyTablesFromBuffer@@Base+0x26fc>  // b.none
   5a3dc:	mov	w12, wzr
   5a3e0:	sub	w10, w21, w10
   5a3e4:	mov	w13, #0x1                   	// #1
   5a3e8:	add	x14, sp, #0x4a0
   5a3ec:	add	x15, sp, #0x10
   5a3f0:	mov	w16, w13
   5a3f4:	lsl	x16, x16, #2
   5a3f8:	ldr	w17, [x14, x16]
   5a3fc:	add	w18, w10, w13
   5a400:	sub	w18, w18, #0x1
   5a404:	add	w13, w13, #0x1
   5a408:	lsl	w17, w17, w18
   5a40c:	add	w17, w17, w12
   5a410:	cmp	w13, w6
   5a414:	str	w12, [x15, x16]
   5a418:	mov	w12, w17
   5a41c:	b.ls	5a3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x26cc>  // b.plast
   5a420:	add	w9, w21, w9
   5a424:	cmp	w11, w9
   5a428:	b.ls	5a460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x273c>  // b.plast
   5a42c:	add	x2, sp, #0x4f0
   5a430:	add	x4, sp, #0x450
   5a434:	add	x5, sp, #0x10
   5a438:	mov	x0, x19
   5a43c:	mov	w1, w21
   5a440:	bl	5a4b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x278c>
   5a444:	mov	x0, x20
   5a448:	add	sp, sp, #0x7f0
   5a44c:	ldp	x20, x19, [sp, #48]
   5a450:	ldp	x22, x21, [sp, #32]
   5a454:	ldr	x28, [sp, #16]
   5a458:	ldp	x29, x30, [sp], #64
   5a45c:	ret
   5a460:	add	x10, sp, #0x10
   5a464:	mov	w12, #0x44                  	// #68
   5a468:	b	5a478 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2754>
   5a46c:	add	w11, w11, #0x1
   5a470:	cmp	w11, w9
   5a474:	b.hi	5a42c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2708>  // b.pmore
   5a478:	cmn	w8, #0x1
   5a47c:	mov	w11, w11
   5a480:	b.eq	5a46c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2748>  // b.none
   5a484:	mov	w13, #0x1                   	// #1
   5a488:	mov	w14, w13
   5a48c:	lsl	x14, x14, #2
   5a490:	ldr	w15, [x10, x14]
   5a494:	add	w13, w13, #0x1
   5a498:	madd	x16, x11, x12, x10
   5a49c:	cmp	w13, w6
   5a4a0:	lsr	w15, w15, w11
   5a4a4:	str	w15, [x16, x14]
   5a4a8:	b.ls	5a488 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2764>  // b.plast
   5a4ac:	b	5a46c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2748>
   5a4b0:	sub	sp, sp, #0xf0
   5a4b4:	stp	x29, x30, [sp, #144]
   5a4b8:	stp	x28, x27, [sp, #160]
   5a4bc:	stp	x26, x25, [sp, #176]
   5a4c0:	stp	x24, x23, [sp, #192]
   5a4c4:	stp	x22, x21, [sp, #208]
   5a4c8:	stp	x20, x19, [sp, #224]
   5a4cc:	stp	x4, x5, [sp, #24]
   5a4d0:	str	x0, [sp, #48]
   5a4d4:	ldp	q0, q2, [x5]
   5a4d8:	add	x29, sp, #0x90
   5a4dc:	stp	q0, q2, [sp, #64]
   5a4e0:	ldr	w8, [x5, #64]
   5a4e4:	ldp	q1, q0, [x5, #32]
   5a4e8:	str	w3, [sp, #44]
   5a4ec:	str	w8, [sp, #128]
   5a4f0:	stp	q1, q0, [sp, #96]
   5a4f4:	cbz	w3, 5a620 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28fc>
   5a4f8:	sub	w8, w7, w1
   5a4fc:	stp	w7, w8, [sp, #16]
   5a500:	ldr	w8, [sp, #44]
   5a504:	mov	w19, w7
   5a508:	mov	x23, x2
   5a50c:	mov	w21, w1
   5a510:	mov	x27, xzr
   5a514:	sub	w28, w7, w6
   5a518:	mov	w22, w8
   5a51c:	add	x9, sp, #0x40
   5a520:	mov	w11, #0x1                   	// #1
   5a524:	b	5a554 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2830>
   5a528:	mov	w21, w28
   5a52c:	mov	w28, w22
   5a530:	mov	x22, x23
   5a534:	mov	x23, x19
   5a538:	ldr	w19, [sp, #16]
   5a53c:	add	x27, x27, #0x1
   5a540:	add	x9, sp, #0x40
   5a544:	add	w8, w24, w20
   5a548:	cmp	x27, x22
   5a54c:	str	w8, [x9, x25, lsl #2]
   5a550:	b.eq	5a620 <ZDICT_addEntropyTablesFromBuffer@@Base+0x28fc>  // b.none
   5a554:	add	x8, x23, x27, lsl #1
   5a558:	ldrb	w25, [x8, #1]
   5a55c:	ldrb	w1, [x8]
   5a560:	ldr	w20, [x9, x25, lsl #2]
   5a564:	sub	w26, w19, w25
   5a568:	sub	w8, w21, w26
   5a56c:	cmp	w8, w28
   5a570:	lsl	w24, w11, w8
   5a574:	b.cs	5a5cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x28a8>  // b.hs, b.nlast
   5a578:	add	x0, sp, #0x3c
   5a57c:	mov	x19, x23
   5a580:	mov	x23, x22
   5a584:	mov	w22, w28
   5a588:	mov	w28, w21
   5a58c:	add	w21, w24, w20
   5a590:	bl	5c314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45f0>
   5a594:	mov	w11, #0x1                   	// #1
   5a598:	cmp	w20, w21
   5a59c:	strb	w26, [sp, #62]
   5a5a0:	strb	w11, [sp, #63]
   5a5a4:	b.cs	5a528 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2804>  // b.hs, b.nlast
   5a5a8:	ldr	x9, [sp, #48]
   5a5ac:	ldr	w8, [sp, #60]
   5a5b0:	mov	w10, w21
   5a5b4:	sub	x10, x10, x20
   5a5b8:	add	x9, x9, x20, lsl #2
   5a5bc:	subs	x10, x10, #0x1
   5a5c0:	str	w8, [x9], #4
   5a5c4:	b.ne	5a5bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x2898>  // b.any
   5a5c8:	b	5a528 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2804>
   5a5cc:	ldr	w9, [sp, #20]
   5a5d0:	ldr	x10, [sp, #48]
   5a5d4:	mov	w11, #0x44                  	// #68
   5a5d8:	mov	w2, w26
   5a5dc:	add	w9, w26, w9
   5a5e0:	cmp	w9, #0x1
   5a5e4:	csinc	w4, w9, wzr, gt
   5a5e8:	ldr	x9, [sp, #24]
   5a5ec:	add	x0, x10, x20, lsl #2
   5a5f0:	ldr	x10, [sp, #32]
   5a5f4:	mov	w7, w19
   5a5f8:	ldr	w9, [x9, w4, uxtw #2]
   5a5fc:	strh	w1, [sp]
   5a600:	umaddl	x3, w26, w11, x10
   5a604:	ldr	w10, [sp, #44]
   5a608:	add	x5, x23, x9, lsl #1
   5a60c:	mov	w1, w8
   5a610:	sub	w6, w10, w9
   5a614:	bl	5c1d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44b0>
   5a618:	mov	w11, #0x1                   	// #1
   5a61c:	b	5a53c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2818>
   5a620:	ldp	x20, x19, [sp, #224]
   5a624:	ldp	x22, x21, [sp, #208]
   5a628:	ldp	x24, x23, [sp, #192]
   5a62c:	ldp	x26, x25, [sp, #176]
   5a630:	ldp	x28, x27, [sp, #160]
   5a634:	ldp	x29, x30, [sp, #144]
   5a638:	add	sp, sp, #0xf0
   5a63c:	ret
   5a640:	sub	sp, sp, #0x60
   5a644:	stp	x29, x30, [sp, #32]
   5a648:	stp	x22, x21, [sp, #64]
   5a64c:	stp	x20, x19, [sp, #80]
   5a650:	ldr	w20, [x4]
   5a654:	mov	x19, x1
   5a658:	mov	x21, x0
   5a65c:	mov	x0, sp
   5a660:	mov	x1, x2
   5a664:	mov	x2, x3
   5a668:	str	x23, [sp, #48]
   5a66c:	add	x29, sp, #0x20
   5a670:	mov	x22, x4
   5a674:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   5a678:	mov	x23, x0
   5a67c:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a680:	cbnz	w0, 5a6b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x298c>
   5a684:	add	x3, x22, #0x4
   5a688:	add	x2, x21, x19
   5a68c:	mov	x1, sp
   5a690:	mov	x0, x21
   5a694:	mov	w4, w20
   5a698:	bl	5a6cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x29a8>
   5a69c:	mov	x0, sp
   5a6a0:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5a6a4:	cmp	w0, #0x0
   5a6a8:	mov	x8, #0xffffffffffffffec    	// #-20
   5a6ac:	csel	x23, x8, x19, eq  // eq = none
   5a6b0:	mov	x0, x23
   5a6b4:	ldp	x20, x19, [sp, #80]
   5a6b8:	ldp	x22, x21, [sp, #64]
   5a6bc:	ldr	x23, [sp, #48]
   5a6c0:	ldp	x29, x30, [sp, #32]
   5a6c4:	add	sp, sp, #0x60
   5a6c8:	ret
   5a6cc:	stp	x29, x30, [sp, #-64]!
   5a6d0:	stp	x24, x23, [sp, #16]
   5a6d4:	mov	x23, x0
   5a6d8:	mov	x0, x1
   5a6dc:	stp	x22, x21, [sp, #32]
   5a6e0:	stp	x20, x19, [sp, #48]
   5a6e4:	mov	x29, sp
   5a6e8:	mov	w19, w4
   5a6ec:	mov	x20, x3
   5a6f0:	mov	x22, x2
   5a6f4:	mov	x21, x1
   5a6f8:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5a6fc:	sub	x24, x22, #0x7
   5a700:	cmp	x24, x23
   5a704:	b.ls	5a780 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a5c>  // b.plast
   5a708:	cbnz	w0, 5a780 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a5c>
   5a70c:	mov	x0, x23
   5a710:	mov	x1, x21
   5a714:	mov	x2, x20
   5a718:	mov	w3, w19
   5a71c:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5a720:	add	x23, x23, w0, uxtw
   5a724:	mov	x0, x23
   5a728:	mov	x1, x21
   5a72c:	mov	x2, x20
   5a730:	mov	w3, w19
   5a734:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5a738:	add	x23, x23, w0, uxtw
   5a73c:	mov	x0, x23
   5a740:	mov	x1, x21
   5a744:	mov	x2, x20
   5a748:	mov	w3, w19
   5a74c:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5a750:	add	x23, x23, w0, uxtw
   5a754:	mov	x0, x23
   5a758:	mov	x1, x21
   5a75c:	mov	x2, x20
   5a760:	mov	w3, w19
   5a764:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5a768:	add	x23, x23, w0, uxtw
   5a76c:	mov	x0, x21
   5a770:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5a774:	cmp	x23, x24
   5a778:	b.cs	5a780 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a5c>  // b.hs, b.nlast
   5a77c:	cbz	w0, 5a70c <ZDICT_addEntropyTablesFromBuffer@@Base+0x29e8>
   5a780:	mov	x0, x21
   5a784:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5a788:	sub	x24, x22, #0x2
   5a78c:	cmp	x23, x24
   5a790:	b.hi	5a7e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2abc>  // b.pmore
   5a794:	cbnz	w0, 5a7e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2abc>
   5a798:	mov	x0, x23
   5a79c:	mov	x1, x21
   5a7a0:	mov	x2, x20
   5a7a4:	mov	w3, w19
   5a7a8:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5a7ac:	add	x23, x23, w0, uxtw
   5a7b0:	mov	x0, x21
   5a7b4:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5a7b8:	cmp	x23, x24
   5a7bc:	b.hi	5a7e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2abc>  // b.pmore
   5a7c0:	cbz	w0, 5a798 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2a74>
   5a7c4:	b	5a7e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2abc>
   5a7c8:	mov	x0, x23
   5a7cc:	mov	x1, x21
   5a7d0:	mov	x2, x20
   5a7d4:	mov	w3, w19
   5a7d8:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5a7dc:	add	x23, x23, w0, uxtw
   5a7e0:	cmp	x23, x24
   5a7e4:	b.ls	5a7c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2aa4>  // b.plast
   5a7e8:	cmp	x23, x22
   5a7ec:	b.cs	5a804 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ae0>  // b.hs, b.nlast
   5a7f0:	mov	x0, x23
   5a7f4:	mov	x1, x21
   5a7f8:	mov	x2, x20
   5a7fc:	mov	w3, w19
   5a800:	bl	5c330 <ZDICT_addEntropyTablesFromBuffer@@Base+0x460c>
   5a804:	ldp	x20, x19, [sp, #48]
   5a808:	ldp	x22, x21, [sp, #32]
   5a80c:	ldp	x24, x23, [sp, #16]
   5a810:	ldp	x29, x30, [sp], #64
   5a814:	ret
   5a818:	stp	x29, x30, [sp, #-64]!
   5a81c:	stp	x28, x23, [sp, #16]
   5a820:	stp	x22, x21, [sp, #32]
   5a824:	stp	x20, x19, [sp, #48]
   5a828:	mov	x29, sp
   5a82c:	sub	sp, sp, #0x4, lsl #12
   5a830:	sub	sp, sp, #0x10
   5a834:	mov	x22, x2
   5a838:	mov	x19, x1
   5a83c:	mov	x20, x0
   5a840:	add	x0, sp, #0xc
   5a844:	mov	w2, #0x4004                	// #16388
   5a848:	mov	w1, wzr
   5a84c:	mov	x21, x3
   5a850:	bl	46a0 <memset@plt>
   5a854:	mov	w8, #0xc                   	// #12
   5a858:	add	x0, sp, #0xc
   5a85c:	mov	x1, x22
   5a860:	mov	x2, x21
   5a864:	str	w8, [sp, #12]
   5a868:	bl	5a298 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2574>
   5a86c:	mov	x23, x0
   5a870:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a874:	cbnz	w0, 5a8a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b80>
   5a878:	cmp	x23, x21
   5a87c:	b.cs	5a8a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b7c>  // b.hs, b.nlast
   5a880:	add	x2, x22, x23
   5a884:	sub	x3, x21, x23
   5a888:	add	x4, sp, #0xc
   5a88c:	mov	x0, x20
   5a890:	mov	x1, x19
   5a894:	bl	5a640 <ZDICT_addEntropyTablesFromBuffer@@Base+0x291c>
   5a898:	mov	x23, x0
   5a89c:	b	5a8a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2b80>
   5a8a0:	mov	x23, #0xffffffffffffffb8    	// #-72
   5a8a4:	mov	x0, x23
   5a8a8:	add	sp, sp, #0x4, lsl #12
   5a8ac:	add	sp, sp, #0x10
   5a8b0:	ldp	x20, x19, [sp, #48]
   5a8b4:	ldp	x22, x21, [sp, #32]
   5a8b8:	ldp	x28, x23, [sp, #16]
   5a8bc:	ldp	x29, x30, [sp], #64
   5a8c0:	ret
   5a8c4:	sub	sp, sp, #0x110
   5a8c8:	cmp	x3, #0xa
   5a8cc:	stp	x29, x30, [sp, #176]
   5a8d0:	stp	x28, x27, [sp, #192]
   5a8d4:	stp	x26, x25, [sp, #208]
   5a8d8:	stp	x24, x23, [sp, #224]
   5a8dc:	stp	x22, x21, [sp, #240]
   5a8e0:	stp	x20, x19, [sp, #256]
   5a8e4:	add	x29, sp, #0xb0
   5a8e8:	b.cc	5a93c <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c18>  // b.lo, b.ul, b.last
   5a8ec:	mov	x20, x4
   5a8f0:	ldr	w21, [x20], #4
   5a8f4:	mov	x24, x0
   5a8f8:	mov	x0, x2
   5a8fc:	mov	x22, x3
   5a900:	mov	x23, x2
   5a904:	mov	x19, x1
   5a908:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   5a90c:	and	x27, x0, #0xffff
   5a910:	add	x0, x23, #0x2
   5a914:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   5a918:	and	x26, x0, #0xffff
   5a91c:	add	x0, x23, #0x4
   5a920:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   5a924:	and	x25, x0, #0xffff
   5a928:	add	x8, x27, x26
   5a92c:	add	x8, x8, x25
   5a930:	add	x8, x8, #0x6
   5a934:	subs	x22, x22, x8
   5a938:	b.cs	5a964 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c40>  // b.hs, b.nlast
   5a93c:	mov	x23, #0xffffffffffffffec    	// #-20
   5a940:	mov	x0, x23
   5a944:	ldp	x20, x19, [sp, #256]
   5a948:	ldp	x22, x21, [sp, #240]
   5a94c:	ldp	x24, x23, [sp, #224]
   5a950:	ldp	x26, x25, [sp, #208]
   5a954:	ldp	x28, x27, [sp, #192]
   5a958:	ldp	x29, x30, [sp, #176]
   5a95c:	add	sp, sp, #0x110
   5a960:	ret
   5a964:	add	x28, x23, #0x6
   5a968:	sub	x0, x29, #0x28
   5a96c:	mov	x1, x28
   5a970:	mov	x2, x27
   5a974:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   5a978:	mov	x23, x0
   5a97c:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a980:	cbnz	w0, 5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>
   5a984:	add	x27, x28, x27
   5a988:	sub	x0, x29, #0x48
   5a98c:	mov	x1, x27
   5a990:	mov	x2, x26
   5a994:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   5a998:	mov	x23, x0
   5a99c:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a9a0:	cbnz	w0, 5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>
   5a9a4:	add	x26, x27, x26
   5a9a8:	add	x0, sp, #0x48
   5a9ac:	mov	x1, x26
   5a9b0:	mov	x2, x25
   5a9b4:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   5a9b8:	mov	x23, x0
   5a9bc:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a9c0:	cbnz	w0, 5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>
   5a9c4:	add	x1, x26, x25
   5a9c8:	add	x0, sp, #0x28
   5a9cc:	mov	x2, x22
   5a9d0:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   5a9d4:	mov	x23, x0
   5a9d8:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5a9dc:	cbnz	w0, 5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>
   5a9e0:	add	x8, x19, #0x3
   5a9e4:	lsr	x8, x8, #2
   5a9e8:	add	x9, x24, x8
   5a9ec:	add	x28, x9, x8
   5a9f0:	sub	x0, x29, #0x28
   5a9f4:	add	x22, x24, x19
   5a9f8:	str	x9, [sp, #24]
   5a9fc:	add	x27, x28, x8
   5aa00:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5aa04:	mov	w23, w0
   5aa08:	sub	x0, x29, #0x48
   5aa0c:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5aa10:	mov	w26, w0
   5aa14:	add	x0, sp, #0x48
   5aa18:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5aa1c:	mov	w25, w0
   5aa20:	add	x0, sp, #0x28
   5aa24:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5aa28:	sub	x8, x22, #0x7
   5aa2c:	cmp	x27, x8
   5aa30:	stp	x22, x27, [sp]
   5aa34:	str	x8, [sp, #32]
   5aa38:	str	x28, [sp, #16]
   5aa3c:	b.cs	5ac20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2efc>  // b.hs, b.nlast
   5aa40:	orr	w8, w26, w23
   5aa44:	orr	w8, w8, w25
   5aa48:	orr	w8, w8, w0
   5aa4c:	cbnz	w8, 5ac20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2efc>
   5aa50:	ldr	x26, [sp, #24]
   5aa54:	sub	x1, x29, #0x28
   5aa58:	mov	x0, x24
   5aa5c:	mov	x2, x20
   5aa60:	mov	w3, w21
   5aa64:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aa68:	add	x22, x24, w0, uxtw
   5aa6c:	sub	x1, x29, #0x48
   5aa70:	mov	x0, x26
   5aa74:	mov	x2, x20
   5aa78:	mov	w3, w21
   5aa7c:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aa80:	add	x23, x26, w0, uxtw
   5aa84:	add	x1, sp, #0x48
   5aa88:	mov	x0, x28
   5aa8c:	mov	x2, x20
   5aa90:	mov	w3, w21
   5aa94:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aa98:	add	x24, x28, w0, uxtw
   5aa9c:	add	x1, sp, #0x28
   5aaa0:	mov	x0, x27
   5aaa4:	mov	x2, x20
   5aaa8:	mov	w3, w21
   5aaac:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aab0:	add	x25, x27, w0, uxtw
   5aab4:	sub	x1, x29, #0x28
   5aab8:	mov	x0, x22
   5aabc:	mov	x2, x20
   5aac0:	mov	w3, w21
   5aac4:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aac8:	add	x22, x22, w0, uxtw
   5aacc:	sub	x1, x29, #0x48
   5aad0:	mov	x0, x23
   5aad4:	mov	x2, x20
   5aad8:	mov	w3, w21
   5aadc:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aae0:	add	x23, x23, w0, uxtw
   5aae4:	add	x1, sp, #0x48
   5aae8:	mov	x0, x24
   5aaec:	mov	x2, x20
   5aaf0:	mov	w3, w21
   5aaf4:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aaf8:	add	x24, x24, w0, uxtw
   5aafc:	add	x1, sp, #0x28
   5ab00:	mov	x0, x25
   5ab04:	mov	x2, x20
   5ab08:	mov	w3, w21
   5ab0c:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5ab10:	add	x25, x25, w0, uxtw
   5ab14:	sub	x1, x29, #0x28
   5ab18:	mov	x0, x22
   5ab1c:	mov	x2, x20
   5ab20:	mov	w3, w21
   5ab24:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5ab28:	add	x22, x22, w0, uxtw
   5ab2c:	sub	x1, x29, #0x48
   5ab30:	mov	x0, x23
   5ab34:	mov	x2, x20
   5ab38:	mov	w3, w21
   5ab3c:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5ab40:	add	x23, x23, w0, uxtw
   5ab44:	add	x1, sp, #0x48
   5ab48:	mov	x0, x24
   5ab4c:	mov	x2, x20
   5ab50:	mov	w3, w21
   5ab54:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5ab58:	add	x27, x24, w0, uxtw
   5ab5c:	add	x1, sp, #0x28
   5ab60:	mov	x0, x25
   5ab64:	mov	x2, x20
   5ab68:	mov	w3, w21
   5ab6c:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5ab70:	add	x25, x25, w0, uxtw
   5ab74:	sub	x1, x29, #0x28
   5ab78:	mov	x0, x22
   5ab7c:	mov	x2, x20
   5ab80:	mov	w3, w21
   5ab84:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5ab88:	add	x24, x22, w0, uxtw
   5ab8c:	sub	x1, x29, #0x48
   5ab90:	mov	x0, x23
   5ab94:	mov	x2, x20
   5ab98:	mov	w3, w21
   5ab9c:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5aba0:	add	x26, x23, w0, uxtw
   5aba4:	add	x1, sp, #0x48
   5aba8:	mov	x0, x27
   5abac:	mov	x2, x20
   5abb0:	mov	w3, w21
   5abb4:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5abb8:	add	x28, x27, w0, uxtw
   5abbc:	add	x1, sp, #0x28
   5abc0:	mov	x0, x25
   5abc4:	mov	x2, x20
   5abc8:	mov	w3, w21
   5abcc:	bl	5ace8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2fc4>
   5abd0:	add	x27, x25, w0, uxtw
   5abd4:	sub	x0, x29, #0x28
   5abd8:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5abdc:	mov	w23, w0
   5abe0:	sub	x0, x29, #0x48
   5abe4:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5abe8:	mov	w25, w0
   5abec:	add	x0, sp, #0x48
   5abf0:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5abf4:	mov	w22, w0
   5abf8:	add	x0, sp, #0x28
   5abfc:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5ac00:	ldr	x8, [sp, #32]
   5ac04:	cmp	x27, x8
   5ac08:	b.cs	5ac24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2f00>  // b.hs, b.nlast
   5ac0c:	orr	w8, w25, w23
   5ac10:	orr	w8, w8, w22
   5ac14:	orr	w8, w8, w0
   5ac18:	cbz	w8, 5aa54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2d30>
   5ac1c:	b	5ac24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2f00>
   5ac20:	ldr	x26, [sp, #24]
   5ac24:	ldr	x8, [sp, #24]
   5ac28:	mov	x23, #0xffffffffffffffec    	// #-20
   5ac2c:	cmp	x24, x8
   5ac30:	b.hi	5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>  // b.pmore
   5ac34:	ldr	x8, [sp, #16]
   5ac38:	cmp	x26, x8
   5ac3c:	b.hi	5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>  // b.pmore
   5ac40:	ldr	x22, [sp, #8]
   5ac44:	cmp	x28, x22
   5ac48:	b.hi	5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>  // b.pmore
   5ac4c:	ldr	x2, [sp, #24]
   5ac50:	sub	x1, x29, #0x28
   5ac54:	mov	x0, x24
   5ac58:	mov	x3, x20
   5ac5c:	mov	w4, w21
   5ac60:	bl	5a6cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x29a8>
   5ac64:	ldr	x2, [sp, #16]
   5ac68:	sub	x1, x29, #0x48
   5ac6c:	mov	x0, x26
   5ac70:	mov	x3, x20
   5ac74:	mov	w4, w21
   5ac78:	bl	5a6cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x29a8>
   5ac7c:	add	x1, sp, #0x48
   5ac80:	mov	x0, x28
   5ac84:	mov	x2, x22
   5ac88:	mov	x3, x20
   5ac8c:	mov	w4, w21
   5ac90:	bl	5a6cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x29a8>
   5ac94:	ldr	x2, [sp]
   5ac98:	add	x1, sp, #0x28
   5ac9c:	mov	x0, x27
   5aca0:	mov	x3, x20
   5aca4:	mov	w4, w21
   5aca8:	bl	5a6cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x29a8>
   5acac:	sub	x0, x29, #0x28
   5acb0:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5acb4:	mov	w20, w0
   5acb8:	sub	x0, x29, #0x48
   5acbc:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5acc0:	and	w20, w0, w20
   5acc4:	add	x0, sp, #0x48
   5acc8:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5accc:	and	w20, w20, w0
   5acd0:	add	x0, sp, #0x28
   5acd4:	bl	59bf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ed4>
   5acd8:	tst	w20, w0
   5acdc:	mov	x8, #0xffffffffffffffec    	// #-20
   5ace0:	csel	x23, x8, x19, eq  // eq = none
   5ace4:	b	5a940 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2c1c>
   5ace8:	stp	x29, x30, [sp, #-48]!
   5acec:	str	x21, [sp, #16]
   5acf0:	stp	x20, x19, [sp, #32]
   5acf4:	mov	x20, x1
   5acf8:	mov	x21, x0
   5acfc:	mov	x0, x1
   5ad00:	mov	w1, w3
   5ad04:	mov	x29, sp
   5ad08:	mov	x19, x2
   5ad0c:	bl	5c184 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4460>
   5ad10:	add	x19, x19, x0, lsl #2
   5ad14:	ldrh	w8, [x19]
   5ad18:	mov	x0, x20
   5ad1c:	strh	w8, [x21]
   5ad20:	ldrb	w1, [x19, #2]
   5ad24:	bl	5c134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4410>
   5ad28:	ldrb	w0, [x19, #3]
   5ad2c:	ldp	x20, x19, [sp, #32]
   5ad30:	ldr	x21, [sp, #16]
   5ad34:	ldp	x29, x30, [sp], #48
   5ad38:	ret
   5ad3c:	stp	x29, x30, [sp, #-64]!
   5ad40:	stp	x28, x23, [sp, #16]
   5ad44:	stp	x22, x21, [sp, #32]
   5ad48:	stp	x20, x19, [sp, #48]
   5ad4c:	mov	x29, sp
   5ad50:	sub	sp, sp, #0x4, lsl #12
   5ad54:	sub	sp, sp, #0x10
   5ad58:	mov	x22, x2
   5ad5c:	mov	x19, x1
   5ad60:	mov	x20, x0
   5ad64:	add	x0, sp, #0xc
   5ad68:	mov	w2, #0x4004                	// #16388
   5ad6c:	mov	w1, wzr
   5ad70:	mov	x21, x3
   5ad74:	bl	46a0 <memset@plt>
   5ad78:	mov	w8, #0xc                   	// #12
   5ad7c:	add	x0, sp, #0xc
   5ad80:	mov	x1, x22
   5ad84:	mov	x2, x21
   5ad88:	str	w8, [sp, #12]
   5ad8c:	bl	5a298 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2574>
   5ad90:	mov	x23, x0
   5ad94:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5ad98:	cbnz	w0, 5adc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x30a4>
   5ad9c:	cmp	x23, x21
   5ada0:	b.cs	5adc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x30a0>  // b.hs, b.nlast
   5ada4:	add	x2, x22, x23
   5ada8:	sub	x3, x21, x23
   5adac:	add	x4, sp, #0xc
   5adb0:	mov	x0, x20
   5adb4:	mov	x1, x19
   5adb8:	bl	5a8c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2ba0>
   5adbc:	mov	x23, x0
   5adc0:	b	5adc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x30a4>
   5adc4:	mov	x23, #0xffffffffffffffb8    	// #-72
   5adc8:	mov	x0, x23
   5adcc:	add	sp, sp, #0x4, lsl #12
   5add0:	add	sp, sp, #0x10
   5add4:	ldp	x20, x19, [sp, #48]
   5add8:	ldp	x22, x21, [sp, #32]
   5addc:	ldp	x28, x23, [sp, #16]
   5ade0:	ldp	x29, x30, [sp], #64
   5ade4:	ret
   5ade8:	sub	sp, sp, #0x30
   5adec:	stp	x29, x30, [sp, #16]
   5adf0:	str	x19, [sp, #32]
   5adf4:	add	x29, sp, #0x10
   5adf8:	cbz	x1, 5ae20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x30fc>
   5adfc:	mov	x19, x1
   5ae00:	cmp	x3, x1
   5ae04:	b.cs	5ae28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3104>  // b.hs, b.nlast
   5ae08:	cmp	x3, #0x1
   5ae0c:	b.ne	5ae30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x310c>  // b.any
   5ae10:	ldrb	w1, [x2]
   5ae14:	mov	x2, x19
   5ae18:	bl	46a0 <memset@plt>
   5ae1c:	b	5aeb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3190>
   5ae20:	mov	x19, #0xffffffffffffffba    	// #-70
   5ae24:	b	5aeb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3190>
   5ae28:	mov	x19, #0xffffffffffffffec    	// #-20
   5ae2c:	b	5aeb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3190>
   5ae30:	lsl	x11, x3, #4
   5ae34:	adrp	x13, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5ae38:	udiv	x11, x11, x19
   5ae3c:	mov	w12, #0x18                  	// #24
   5ae40:	add	x13, x13, #0x434
   5ae44:	and	x11, x11, #0xffffffff
   5ae48:	mov	x8, xzr
   5ae4c:	mov	x9, xzr
   5ae50:	lsr	x10, x19, #8
   5ae54:	madd	x11, x11, x12, x13
   5ae58:	add	x12, sp, #0x4
   5ae5c:	add	x13, x11, x9, lsl #3
   5ae60:	ldp	w14, w13, [x13]
   5ae64:	add	x9, x9, #0x1
   5ae68:	madd	w13, w13, w10, w14
   5ae6c:	str	w13, [x12, x8]
   5ae70:	add	x8, x8, #0x4
   5ae74:	cmp	x8, #0xc
   5ae78:	b.ne	5ae5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3138>  // b.any
   5ae7c:	ldp	w9, w8, [sp, #4]
   5ae80:	adrp	x11, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5ae84:	ldr	w10, [sp, #12]
   5ae88:	add	x11, x11, #0xd80
   5ae8c:	add	w8, w8, w8, lsr #4
   5ae90:	cmp	w8, w9
   5ae94:	cset	w9, cc  // cc = lo, ul, last
   5ae98:	ldr	x9, [x11, w9, uxtw #3]
   5ae9c:	str	w8, [sp, #8]
   5aea0:	add	w8, w10, w10, lsr #3
   5aea4:	mov	x1, x19
   5aea8:	str	w8, [sp, #12]
   5aeac:	blr	x9
   5aeb0:	mov	x19, x0
   5aeb4:	mov	x0, x19
   5aeb8:	ldr	x19, [sp, #32]
   5aebc:	ldp	x29, x30, [sp, #16]
   5aec0:	add	sp, sp, #0x30
   5aec4:	ret
   5aec8:	stp	x29, x30, [sp, #-16]!
   5aecc:	mov	x29, sp
   5aed0:	bl	58db0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x108c>
   5aed4:	ldp	x29, x30, [sp], #16
   5aed8:	ret
   5aedc:	stp	x29, x30, [sp, #-16]!
   5aee0:	mov	x29, sp
   5aee4:	bl	58dd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10ac>
   5aee8:	ldp	x29, x30, [sp], #16
   5aeec:	ret
   5aef0:	mov	w0, #0x6898                	// #26776
   5aef4:	movk	w0, #0x2, lsl #16
   5aef8:	ret
   5aefc:	mov	w8, #0x5                   	// #5
   5af00:	mov	w9, #0x686c                	// #26732
   5af04:	movi	v0.2d, #0x0
   5af08:	mov	w10, #0xc                   	// #12
   5af0c:	str	x8, [x0, #26672]
   5af10:	str	xzr, [x0, x9]
   5af14:	str	q0, [x0, #26640]
   5af18:	str	q0, [x0, #26656]
   5af1c:	str	w10, [x0, #10252]
   5af20:	mov	x0, xzr
   5af24:	ret
   5af28:	stp	x29, x30, [sp, #-32]!
   5af2c:	mov	w0, #0x6898                	// #26776
   5af30:	movk	w0, #0x2, lsl #16
   5af34:	str	x19, [sp, #16]
   5af38:	mov	x29, sp
   5af3c:	bl	4640 <malloc@plt>
   5af40:	mov	x19, x0
   5af44:	cbz	x0, 5af50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x322c>
   5af48:	mov	x0, x19
   5af4c:	bl	5aefc <ZDICT_addEntropyTablesFromBuffer@@Base+0x31d8>
   5af50:	mov	x0, x19
   5af54:	ldr	x19, [sp, #16]
   5af58:	ldp	x29, x30, [sp], #32
   5af5c:	ret
   5af60:	stp	x29, x30, [sp, #-16]!
   5af64:	mov	x29, sp
   5af68:	bl	4880 <free@plt>
   5af6c:	mov	x0, xzr
   5af70:	ldp	x29, x30, [sp], #16
   5af74:	ret
   5af78:	stp	x29, x30, [sp, #-16]!
   5af7c:	mov	w2, #0x688b                	// #26763
   5af80:	mov	x29, sp
   5af84:	bl	4420 <memcpy@plt>
   5af88:	ldp	x29, x30, [sp], #16
   5af8c:	ret
   5af90:	stp	x29, x30, [sp, #-32]!
   5af94:	cmp	x2, #0x5
   5af98:	stp	x20, x19, [sp, #16]
   5af9c:	mov	x29, sp
   5afa0:	b.cs	5afac <ZDICT_addEntropyTablesFromBuffer@@Base+0x3288>  // b.hs, b.nlast
   5afa4:	mov	w0, #0x5                   	// #5
   5afa8:	b	5b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x32dc>
   5afac:	mov	x20, x0
   5afb0:	mov	x0, x1
   5afb4:	mov	x19, x1
   5afb8:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   5afbc:	mov	w8, #0xb525                	// #46373
   5afc0:	movk	w8, #0xfd2f, lsl #16
   5afc4:	cmp	w0, w8
   5afc8:	b.ne	5affc <ZDICT_addEntropyTablesFromBuffer@@Base+0x32d8>  // b.any
   5afcc:	movi	v0.2d, #0x0
   5afd0:	str	xzr, [x20, #32]
   5afd4:	stp	q0, q0, [x20]
   5afd8:	ldrb	w8, [x19, #4]
   5afdc:	and	w8, w8, #0xf
   5afe0:	add	w8, w8, #0xb
   5afe4:	str	w8, [x20, #8]
   5afe8:	ldrb	w8, [x19, #4]
   5afec:	cmp	w8, #0xf
   5aff0:	mov	x8, #0xfffffffffffffff2    	// #-14
   5aff4:	csel	x0, x8, xzr, hi  // hi = pmore
   5aff8:	b	5b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x32dc>
   5affc:	mov	x0, #0xfffffffffffffff6    	// #-10
   5b000:	ldp	x20, x19, [sp, #16]
   5b004:	ldp	x29, x30, [sp], #32
   5b008:	ret
   5b00c:	stp	x29, x30, [sp, #-64]!
   5b010:	str	x23, [sp, #16]
   5b014:	stp	x22, x21, [sp, #32]
   5b018:	stp	x20, x19, [sp, #48]
   5b01c:	mov	x29, sp
   5b020:	mov	x19, x4
   5b024:	mov	x20, x3
   5b028:	mov	x21, x2
   5b02c:	mov	x22, x1
   5b030:	mov	x23, x0
   5b034:	bl	5b064 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3340>
   5b038:	mov	x0, x23
   5b03c:	mov	x1, x22
   5b040:	mov	x2, x21
   5b044:	mov	x3, x20
   5b048:	mov	x4, x19
   5b04c:	bl	5b094 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3370>
   5b050:	ldp	x20, x19, [sp, #48]
   5b054:	ldp	x22, x21, [sp, #32]
   5b058:	ldr	x23, [sp, #16]
   5b05c:	ldp	x29, x30, [sp], #64
   5b060:	ret
   5b064:	ldr	x8, [x0, #26640]
   5b068:	cmp	x8, x1
   5b06c:	b.eq	5b090 <ZDICT_addEntropyTablesFromBuffer@@Base+0x336c>  // b.none
   5b070:	ldr	x9, [x0, #26640]
   5b074:	ldr	x10, [x0, #26648]
   5b078:	str	x8, [x0, #26664]
   5b07c:	str	x1, [x0, #26648]
   5b080:	str	x1, [x0, #26640]
   5b084:	sub	x8, x10, x9
   5b088:	add	x8, x1, x8
   5b08c:	str	x8, [x0, #26656]
   5b090:	ret
   5b094:	stp	x29, x30, [sp, #-64]!
   5b098:	lsr	x8, x4, #17
   5b09c:	stp	x24, x23, [sp, #16]
   5b0a0:	stp	x22, x21, [sp, #32]
   5b0a4:	stp	x20, x19, [sp, #48]
   5b0a8:	mov	x29, sp
   5b0ac:	cbz	x8, 5b0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3394>
   5b0b0:	mov	x24, #0xffffffffffffffb8    	// #-72
   5b0b4:	b	5b100 <ZDICT_addEntropyTablesFromBuffer@@Base+0x33dc>
   5b0b8:	mov	x19, x2
   5b0bc:	mov	x20, x1
   5b0c0:	mov	x1, x3
   5b0c4:	mov	x2, x4
   5b0c8:	mov	x21, x4
   5b0cc:	mov	x22, x3
   5b0d0:	mov	x23, x0
   5b0d4:	bl	5c3c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x469c>
   5b0d8:	mov	x24, x0
   5b0dc:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b0e0:	cbnz	w0, 5b100 <ZDICT_addEntropyTablesFromBuffer@@Base+0x33dc>
   5b0e4:	add	x3, x22, x24
   5b0e8:	sub	x4, x21, x24
   5b0ec:	mov	x0, x23
   5b0f0:	mov	x1, x20
   5b0f4:	mov	x2, x19
   5b0f8:	bl	5c6a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x497c>
   5b0fc:	mov	x24, x0
   5b100:	mov	x0, x24
   5b104:	ldp	x20, x19, [sp, #48]
   5b108:	ldp	x22, x21, [sp, #32]
   5b10c:	ldp	x24, x23, [sp, #16]
   5b110:	ldp	x29, x30, [sp], #64
   5b114:	ret
   5b118:	stp	x29, x30, [sp, #-64]!
   5b11c:	str	x23, [sp, #16]
   5b120:	stp	x22, x21, [sp, #32]
   5b124:	stp	x20, x19, [sp, #48]
   5b128:	mov	x29, sp
   5b12c:	mov	x19, x5
   5b130:	mov	x20, x4
   5b134:	mov	x21, x3
   5b138:	mov	x22, x2
   5b13c:	mov	x23, x0
   5b140:	bl	5af78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3254>
   5b144:	mov	x0, x23
   5b148:	mov	x1, x22
   5b14c:	bl	5b064 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3340>
   5b150:	mov	x0, x23
   5b154:	mov	x1, x22
   5b158:	mov	x2, x21
   5b15c:	mov	x3, x20
   5b160:	mov	x4, x19
   5b164:	bl	5b17c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3458>
   5b168:	ldp	x20, x19, [sp, #48]
   5b16c:	ldp	x22, x21, [sp, #32]
   5b170:	ldr	x23, [sp, #16]
   5b174:	ldp	x29, x30, [sp], #64
   5b178:	ret
   5b17c:	sub	sp, sp, #0x70
   5b180:	stp	x26, x25, [sp, #48]
   5b184:	stp	x24, x23, [sp, #64]
   5b188:	stp	x20, x19, [sp, #96]
   5b18c:	mov	x23, x4
   5b190:	mov	x25, x3
   5b194:	mov	x24, x2
   5b198:	mov	x19, x1
   5b19c:	mov	x20, x0
   5b1a0:	cmp	x4, #0x8
   5b1a4:	stp	x29, x30, [sp, #16]
   5b1a8:	stp	x28, x27, [sp, #32]
   5b1ac:	stp	x22, x21, [sp, #80]
   5b1b0:	add	x29, sp, #0x10
   5b1b4:	str	xzr, [sp, #8]
   5b1b8:	b.cs	5b1c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x34a4>  // b.hs, b.nlast
   5b1bc:	mov	w8, wzr
   5b1c0:	mov	x21, #0xffffffffffffffb8    	// #-72
   5b1c4:	b	5b1e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x34c0>
   5b1c8:	mov	x0, x20
   5b1cc:	mov	x1, x25
   5b1d0:	bl	5b820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3afc>
   5b1d4:	mov	x21, x0
   5b1d8:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b1dc:	cbz	w0, 5b320 <ZDICT_addEntropyTablesFromBuffer@@Base+0x35fc>
   5b1e0:	mov	w8, wzr
   5b1e4:	mov	x22, x25
   5b1e8:	mov	x26, x23
   5b1ec:	cbz	w8, 5b2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x35d8>
   5b1f0:	add	x27, x25, x23
   5b1f4:	add	x28, x19, x24
   5b1f8:	mov	x23, x19
   5b1fc:	str	x19, [sp]
   5b200:	b	5b210 <ZDICT_addEntropyTablesFromBuffer@@Base+0x34ec>
   5b204:	mov	w8, #0x1                   	// #1
   5b208:	mov	x21, x24
   5b20c:	cbnz	w8, 5b2ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x35c8>
   5b210:	sub	x1, x27, x22
   5b214:	add	x2, sp, #0x8
   5b218:	mov	x0, x22
   5b21c:	bl	5b5e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x38c4>
   5b220:	mov	x24, x0
   5b224:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b228:	cbnz	w0, 5b204 <ZDICT_addEntropyTablesFromBuffer@@Base+0x34e0>
   5b22c:	sub	x26, x26, #0x3
   5b230:	subs	x19, x26, x24
   5b234:	add	x22, x22, #0x3
   5b238:	b.cs	5b248 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3524>  // b.hs, b.nlast
   5b23c:	mov	x21, #0xffffffffffffffb8    	// #-72
   5b240:	mov	w8, #0x1                   	// #1
   5b244:	b	5b20c <ZDICT_addEntropyTablesFromBuffer@@Base+0x34e8>
   5b248:	ldr	w8, [sp, #8]
   5b24c:	cmp	w8, #0x3
   5b250:	b.eq	5b2b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3594>  // b.none
   5b254:	cmp	w8, #0x1
   5b258:	b.eq	5b284 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3560>  // b.none
   5b25c:	cbnz	w8, 5b2cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x35a8>
   5b260:	sub	x2, x28, x23
   5b264:	mov	x0, x20
   5b268:	mov	x1, x23
   5b26c:	mov	x3, x22
   5b270:	mov	x4, x24
   5b274:	bl	5b094 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3370>
   5b278:	mov	x25, x0
   5b27c:	cbnz	x24, 5b2a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x357c>
   5b280:	b	5b2c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x35a0>
   5b284:	sub	x1, x28, x23
   5b288:	mov	x0, x23
   5b28c:	mov	x2, x22
   5b290:	mov	x3, x24
   5b294:	bl	5b898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b74>
   5b298:	mov	x25, x0
   5b29c:	cbz	x24, 5b2c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x35a0>
   5b2a0:	mov	x0, x25
   5b2a4:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b2a8:	cbz	w0, 5b2d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x35b4>
   5b2ac:	mov	w8, #0x1                   	// #1
   5b2b0:	mov	x21, x25
   5b2b4:	b	5b20c <ZDICT_addEntropyTablesFromBuffer@@Base+0x34e8>
   5b2b8:	cbnz	x26, 5b23c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3518>
   5b2bc:	mov	x25, xzr
   5b2c0:	cbnz	x24, 5b2a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x357c>
   5b2c4:	mov	w8, #0x3                   	// #3
   5b2c8:	b	5b20c <ZDICT_addEntropyTablesFromBuffer@@Base+0x34e8>
   5b2cc:	mov	x21, #0xffffffffffffffff    	// #-1
   5b2d0:	mov	w8, #0x1                   	// #1
   5b2d4:	b	5b20c <ZDICT_addEntropyTablesFromBuffer@@Base+0x34e8>
   5b2d8:	mov	w8, wzr
   5b2dc:	add	x23, x23, x25
   5b2e0:	add	x22, x22, x24
   5b2e4:	mov	x26, x19
   5b2e8:	b	5b20c <ZDICT_addEntropyTablesFromBuffer@@Base+0x34e8>
   5b2ec:	cmp	w8, #0x3
   5b2f0:	b.ne	5b2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x35d8>  // b.any
   5b2f4:	ldr	x8, [sp]
   5b2f8:	sub	x21, x23, x8
   5b2fc:	mov	x0, x21
   5b300:	ldp	x20, x19, [sp, #96]
   5b304:	ldp	x22, x21, [sp, #80]
   5b308:	ldp	x24, x23, [sp, #64]
   5b30c:	ldp	x26, x25, [sp, #48]
   5b310:	ldp	x28, x27, [sp, #32]
   5b314:	ldp	x29, x30, [sp, #16]
   5b318:	add	sp, sp, #0x70
   5b31c:	ret
   5b320:	add	x8, x21, #0x3
   5b324:	cmp	x8, x23
   5b328:	b.hi	5b1bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3498>  // b.pmore
   5b32c:	mov	x0, x20
   5b330:	mov	x1, x25
   5b334:	mov	x2, x21
   5b338:	add	x22, x25, x21
   5b33c:	sub	x26, x23, x21
   5b340:	bl	5b864 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b40>
   5b344:	mov	x21, x0
   5b348:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b34c:	cmp	w0, #0x0
   5b350:	cset	w8, eq  // eq = none
   5b354:	cbnz	w8, 5b1f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x34cc>
   5b358:	b	5b2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x35d8>
   5b35c:	stp	x29, x30, [sp, #-64]!
   5b360:	stp	x22, x21, [sp, #32]
   5b364:	mov	x21, x2
   5b368:	mov	x22, x1
   5b36c:	mov	x1, x5
   5b370:	mov	x2, x6
   5b374:	str	x23, [sp, #16]
   5b378:	stp	x20, x19, [sp, #48]
   5b37c:	mov	x29, sp
   5b380:	mov	x19, x4
   5b384:	mov	x20, x3
   5b388:	mov	x23, x0
   5b38c:	bl	5b3c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x36a4>
   5b390:	mov	x0, x23
   5b394:	mov	x1, x22
   5b398:	bl	5b064 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3340>
   5b39c:	mov	x0, x23
   5b3a0:	mov	x1, x22
   5b3a4:	mov	x2, x21
   5b3a8:	mov	x3, x20
   5b3ac:	mov	x4, x19
   5b3b0:	bl	5b17c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3458>
   5b3b4:	ldp	x20, x19, [sp, #48]
   5b3b8:	ldp	x22, x21, [sp, #32]
   5b3bc:	ldr	x23, [sp, #16]
   5b3c0:	ldp	x29, x30, [sp], #64
   5b3c4:	ret
   5b3c8:	stp	x29, x30, [sp, #-48]!
   5b3cc:	str	x21, [sp, #16]
   5b3d0:	stp	x20, x19, [sp, #32]
   5b3d4:	mov	x29, sp
   5b3d8:	mov	x19, x2
   5b3dc:	mov	x20, x1
   5b3e0:	mov	x21, x0
   5b3e4:	bl	5aefc <ZDICT_addEntropyTablesFromBuffer@@Base+0x31d8>
   5b3e8:	mov	x0, xzr
   5b3ec:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b3f0:	mov	w8, w0
   5b3f4:	mov	x0, xzr
   5b3f8:	cbnz	w8, 5b428 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3704>
   5b3fc:	cbz	x20, 5b424 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3700>
   5b400:	cbz	x19, 5b424 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3700>
   5b404:	mov	x0, x21
   5b408:	mov	x1, x20
   5b40c:	mov	x2, x19
   5b410:	bl	5b8dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bb8>
   5b414:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b418:	cbz	w0, 5b424 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3700>
   5b41c:	mov	x0, #0xffffffffffffffe2    	// #-30
   5b420:	b	5b428 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3704>
   5b424:	mov	x0, xzr
   5b428:	ldp	x20, x19, [sp, #32]
   5b42c:	ldr	x21, [sp, #16]
   5b430:	ldp	x29, x30, [sp], #48
   5b434:	ret
   5b438:	stp	x29, x30, [sp, #-16]!
   5b43c:	mov	x5, xzr
   5b440:	mov	x6, xzr
   5b444:	mov	x29, sp
   5b448:	bl	5b35c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3638>
   5b44c:	ldp	x29, x30, [sp], #16
   5b450:	ret
   5b454:	stp	x29, x30, [sp, #-64]!
   5b458:	str	x23, [sp, #16]
   5b45c:	stp	x22, x21, [sp, #32]
   5b460:	stp	x20, x19, [sp, #48]
   5b464:	mov	x29, sp
   5b468:	mov	x19, x3
   5b46c:	mov	x21, x2
   5b470:	mov	x22, x1
   5b474:	mov	x23, x0
   5b478:	bl	5af28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3204>
   5b47c:	cbz	x0, 5b4a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3784>
   5b480:	mov	x1, x23
   5b484:	mov	x2, x22
   5b488:	mov	x3, x21
   5b48c:	mov	x4, x19
   5b490:	mov	x20, x0
   5b494:	bl	5b438 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3714>
   5b498:	mov	x19, x0
   5b49c:	mov	x0, x20
   5b4a0:	bl	5af60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x323c>
   5b4a4:	b	5b4ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x3788>
   5b4a8:	mov	x19, #0xffffffffffffffc0    	// #-64
   5b4ac:	mov	x0, x19
   5b4b0:	ldp	x20, x19, [sp, #48]
   5b4b4:	ldp	x22, x21, [sp, #32]
   5b4b8:	ldr	x23, [sp, #16]
   5b4bc:	ldp	x29, x30, [sp], #64
   5b4c0:	ret
   5b4c4:	stp	x29, x30, [sp, #-80]!
   5b4c8:	stp	x20, x19, [sp, #64]
   5b4cc:	mov	x19, x3
   5b4d0:	mov	x20, x2
   5b4d4:	cmp	x1, #0x4
   5b4d8:	str	x25, [sp, #16]
   5b4dc:	stp	x24, x23, [sp, #32]
   5b4e0:	stp	x22, x21, [sp, #48]
   5b4e4:	mov	x29, sp
   5b4e8:	b.hi	5b4f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x37d0>  // b.pmore
   5b4ec:	mov	x2, #0xffffffffffffffb8    	// #-72
   5b4f0:	b	5b598 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3874>
   5b4f4:	mov	x23, x1
   5b4f8:	mov	x21, x0
   5b4fc:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   5b500:	mov	w8, #0xb525                	// #46373
   5b504:	movk	w8, #0xfd2f, lsl #16
   5b508:	cmp	w0, w8
   5b50c:	b.ne	5b594 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3870>  // b.any
   5b510:	mov	x25, xzr
   5b514:	add	x22, x21, #0x5
   5b518:	sub	x23, x23, #0x5
   5b51c:	b	5b538 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3814>
   5b520:	mov	x0, x20
   5b524:	mov	x1, x19
   5b528:	mov	x2, x24
   5b52c:	bl	5b5d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x38b4>
   5b530:	mov	w8, #0x1                   	// #1
   5b534:	cbnz	w8, 5b5bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3898>
   5b538:	add	x2, x29, #0x18
   5b53c:	mov	x0, x22
   5b540:	mov	x1, x23
   5b544:	bl	5b5e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x38c4>
   5b548:	mov	x24, x0
   5b54c:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b550:	cbnz	w0, 5b520 <ZDICT_addEntropyTablesFromBuffer@@Base+0x37fc>
   5b554:	sub	x23, x23, #0x3
   5b558:	subs	x9, x23, x24
   5b55c:	add	x22, x22, #0x3
   5b560:	b.cs	5b574 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3850>  // b.hs, b.nlast
   5b564:	mov	x2, #0xffffffffffffffb8    	// #-72
   5b568:	mov	x0, x20
   5b56c:	mov	x1, x19
   5b570:	b	5b52c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3808>
   5b574:	cbz	x24, 5b58c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3868>
   5b578:	mov	w8, wzr
   5b57c:	add	x22, x22, x24
   5b580:	add	x25, x25, #0x1
   5b584:	mov	x23, x9
   5b588:	b	5b534 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3810>
   5b58c:	mov	w8, #0x3                   	// #3
   5b590:	b	5b534 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3810>
   5b594:	mov	x2, #0xfffffffffffffff6    	// #-10
   5b598:	mov	x0, x20
   5b59c:	mov	x1, x19
   5b5a0:	bl	5b5d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x38b4>
   5b5a4:	ldp	x20, x19, [sp, #64]
   5b5a8:	ldp	x22, x21, [sp, #48]
   5b5ac:	ldp	x24, x23, [sp, #32]
   5b5b0:	ldr	x25, [sp, #16]
   5b5b4:	ldp	x29, x30, [sp], #80
   5b5b8:	ret
   5b5bc:	cmp	w8, #0x3
   5b5c0:	b.ne	5b5a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3880>  // b.any
   5b5c4:	sub	x8, x22, x21
   5b5c8:	lsl	x9, x25, #17
   5b5cc:	str	x8, [x20]
   5b5d0:	str	x9, [x19]
   5b5d4:	b	5b5a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3880>
   5b5d8:	mov	x8, #0xfffffffffffffffe    	// #-2
   5b5dc:	str	x2, [x0]
   5b5e0:	str	x8, [x1]
   5b5e4:	ret
   5b5e8:	cmp	x1, #0x3
   5b5ec:	b.cs	5b5f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x38d4>  // b.hs, b.nlast
   5b5f0:	mov	x0, #0xffffffffffffffb8    	// #-72
   5b5f4:	ret
   5b5f8:	ldrb	w8, [x0]
   5b5fc:	ldrb	w9, [x0, #2]
   5b600:	ldrb	w10, [x0, #1]
   5b604:	lsl	w11, w8, #16
   5b608:	and	x11, x11, #0x70000
   5b60c:	lsr	w8, w8, #6
   5b610:	orr	x0, x11, x9
   5b614:	cmp	w8, #0x2
   5b618:	bfi	x0, x10, #8, #8
   5b61c:	csel	w9, w0, wzr, eq  // eq = none
   5b620:	cmp	w8, #0x3
   5b624:	stp	w8, w9, [x2]
   5b628:	b.eq	5b63c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3918>  // b.none
   5b62c:	cmp	w8, #0x2
   5b630:	b.ne	5b638 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3914>  // b.any
   5b634:	mov	w0, #0x1                   	// #1
   5b638:	ret
   5b63c:	mov	x0, xzr
   5b640:	ret
   5b644:	ldr	x0, [x0, #26672]
   5b648:	ret
   5b64c:	sub	sp, sp, #0x50
   5b650:	stp	x29, x30, [sp, #16]
   5b654:	stp	x24, x23, [sp, #32]
   5b658:	stp	x22, x21, [sp, #48]
   5b65c:	stp	x20, x19, [sp, #64]
   5b660:	ldr	x8, [x0, #26672]
   5b664:	add	x29, sp, #0x10
   5b668:	cmp	x8, x4
   5b66c:	b.ne	5b73c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a18>  // b.any
   5b670:	mov	w8, #0x6868                	// #26728
   5b674:	mov	x20, x4
   5b678:	mov	x21, x3
   5b67c:	mov	x23, x2
   5b680:	mov	x19, x0
   5b684:	mov	x22, x1
   5b688:	add	x24, x0, x8
   5b68c:	bl	5b064 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3340>
   5b690:	ldr	w8, [x24, #4]
   5b694:	cmp	w8, #0x3
   5b698:	b.hi	5b7c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3aa0>  // b.pmore
   5b69c:	adrp	x9, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5b6a0:	add	x9, x9, #0x41e
   5b6a4:	adr	x10, 5b6b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3990>
   5b6a8:	ldrb	w11, [x9, x8]
   5b6ac:	add	x10, x10, x11, lsl #2
   5b6b0:	br	x10
   5b6b4:	cmp	x20, #0x5
   5b6b8:	b.ne	5b73c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a18>  // b.any
   5b6bc:	mov	x0, x19
   5b6c0:	mov	x1, x21
   5b6c4:	bl	5b820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3afc>
   5b6c8:	mov	x20, x0
   5b6cc:	str	x0, [x19, #26680]
   5b6d0:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b6d4:	cbnz	w0, 5b740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a1c>
   5b6d8:	ldrb	w9, [x21, #4]
   5b6dc:	ldr	w10, [x21]
   5b6e0:	mov	w8, #0x6890                	// #26768
   5b6e4:	movk	w8, #0x2, lsl #16
   5b6e8:	cmp	x20, #0x5
   5b6ec:	add	x8, x19, x8
   5b6f0:	strb	w9, [x8, #4]
   5b6f4:	str	w10, [x8]
   5b6f8:	b.hi	5b7c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3aa0>  // b.pmore
   5b6fc:	str	xzr, [x19, #26672]
   5b700:	ldr	x2, [x19, #26680]
   5b704:	mov	w8, #0x6890                	// #26768
   5b708:	movk	w8, #0x2, lsl #16
   5b70c:	add	x1, x19, x8
   5b710:	mov	x0, x19
   5b714:	bl	5b864 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b40>
   5b718:	mov	x20, x0
   5b71c:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b720:	cbnz	w0, 5b740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a1c>
   5b724:	mov	w8, #0x3                   	// #3
   5b728:	mov	w9, #0x2                   	// #2
   5b72c:	mov	x20, xzr
   5b730:	str	x8, [x19, #26672]
   5b734:	str	w9, [x24, #4]
   5b738:	b	5b740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a1c>
   5b73c:	mov	x20, #0xffffffffffffffb8    	// #-72
   5b740:	mov	x0, x20
   5b744:	ldp	x20, x19, [sp, #64]
   5b748:	ldp	x22, x21, [sp, #48]
   5b74c:	ldp	x24, x23, [sp, #32]
   5b750:	ldp	x29, x30, [sp, #16]
   5b754:	add	sp, sp, #0x50
   5b758:	ret
   5b75c:	add	x2, sp, #0x8
   5b760:	mov	w1, #0x3                   	// #3
   5b764:	mov	x0, x21
   5b768:	bl	5b5e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x38c4>
   5b76c:	mov	x20, x0
   5b770:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b774:	cbnz	w0, 5b740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a1c>
   5b778:	ldr	w8, [sp, #8]
   5b77c:	cmp	w8, #0x3
   5b780:	b.ne	5b808 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ae4>  // b.any
   5b784:	mov	w8, wzr
   5b788:	str	xzr, [x19, #26672]
   5b78c:	b	5b814 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3af0>
   5b790:	ldr	w8, [x24]
   5b794:	cmp	w8, #0x3
   5b798:	b.eq	5b7cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3aa8>  // b.none
   5b79c:	cmp	w8, #0x1
   5b7a0:	b.eq	5b7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ab0>  // b.none
   5b7a4:	cbnz	w8, 5b7c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3aa0>
   5b7a8:	mov	x0, x19
   5b7ac:	mov	x1, x22
   5b7b0:	mov	x2, x23
   5b7b4:	mov	x3, x21
   5b7b8:	mov	x4, x20
   5b7bc:	bl	5b094 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3370>
   5b7c0:	b	5b7e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ac4>
   5b7c4:	mov	x20, #0xffffffffffffffff    	// #-1
   5b7c8:	b	5b740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a1c>
   5b7cc:	mov	x20, xzr
   5b7d0:	b	5b7ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ac8>
   5b7d4:	mov	x0, x22
   5b7d8:	mov	x1, x23
   5b7dc:	mov	x2, x21
   5b7e0:	mov	x3, x20
   5b7e4:	bl	5b898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b74>
   5b7e8:	mov	x20, x0
   5b7ec:	mov	w8, #0x2                   	// #2
   5b7f0:	mov	w9, #0x3                   	// #3
   5b7f4:	add	x10, x22, x20
   5b7f8:	str	w8, [x24, #4]
   5b7fc:	str	x9, [x19, #26672]
   5b800:	str	x10, [x19, #26640]
   5b804:	b	5b740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a1c>
   5b808:	str	x20, [x19, #26672]
   5b80c:	str	w8, [x24]
   5b810:	mov	w8, #0x3                   	// #3
   5b814:	mov	x20, xzr
   5b818:	str	w8, [x24, #4]
   5b81c:	b	5b740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3a1c>
   5b820:	stp	x29, x30, [sp, #-32]!
   5b824:	str	x19, [sp, #16]
   5b828:	mov	x19, x0
   5b82c:	mov	x0, x1
   5b830:	mov	x29, sp
   5b834:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   5b838:	mov	w8, #0xb525                	// #46373
   5b83c:	movk	w8, #0xfd2f, lsl #16
   5b840:	cmp	w0, w8
   5b844:	b.ne	5b854 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b30>  // b.any
   5b848:	mov	w0, #0x5                   	// #5
   5b84c:	str	x0, [x19, #26680]
   5b850:	b	5b858 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b34>
   5b854:	mov	x0, #0xfffffffffffffff6    	// #-10
   5b858:	ldr	x19, [sp, #16]
   5b85c:	ldp	x29, x30, [sp], #32
   5b860:	ret
   5b864:	stp	x29, x30, [sp, #-16]!
   5b868:	ldr	x8, [x0, #26680]
   5b86c:	mov	x29, sp
   5b870:	cmp	x8, x2
   5b874:	b.ne	5b88c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3b68>  // b.any
   5b878:	mov	w8, #0x6840                	// #26688
   5b87c:	add	x0, x0, x8
   5b880:	bl	5af90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x326c>
   5b884:	ldp	x29, x30, [sp], #16
   5b888:	ret
   5b88c:	mov	x0, #0xffffffffffffffb8    	// #-72
   5b890:	ldp	x29, x30, [sp], #16
   5b894:	ret
   5b898:	stp	x29, x30, [sp, #-32]!
   5b89c:	mov	x8, x0
   5b8a0:	mov	x0, #0xffffffffffffffba    	// #-70
   5b8a4:	str	x19, [sp, #16]
   5b8a8:	mov	x29, sp
   5b8ac:	cbz	x8, 5b8d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bac>
   5b8b0:	mov	x19, x3
   5b8b4:	cmp	x3, x1
   5b8b8:	b.hi	5b8d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3bac>  // b.pmore
   5b8bc:	mov	x0, x8
   5b8c0:	mov	x1, x2
   5b8c4:	mov	x2, x19
   5b8c8:	bl	4420 <memcpy@plt>
   5b8cc:	mov	x0, x19
   5b8d0:	ldr	x19, [sp, #16]
   5b8d4:	ldp	x29, x30, [sp], #32
   5b8d8:	ret
   5b8dc:	stp	x29, x30, [sp, #-48]!
   5b8e0:	stp	x20, x19, [sp, #32]
   5b8e4:	mov	x19, x0
   5b8e8:	mov	x0, x1
   5b8ec:	stp	x22, x21, [sp, #16]
   5b8f0:	mov	x29, sp
   5b8f4:	mov	x20, x2
   5b8f8:	mov	x21, x1
   5b8fc:	bl	590f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x13d4>
   5b900:	mov	w8, #0xa435                	// #42037
   5b904:	movk	w8, #0xec30, lsl #16
   5b908:	cmp	w0, w8
   5b90c:	b.ne	5b93c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c18>  // b.any
   5b910:	add	x21, x21, #0x4
   5b914:	sub	x20, x20, #0x4
   5b918:	mov	x0, x19
   5b91c:	mov	x1, x21
   5b920:	mov	x2, x20
   5b924:	bl	5d19c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5478>
   5b928:	mov	x22, x0
   5b92c:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5b930:	cbz	w0, 5b94c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c28>
   5b934:	mov	x0, #0xffffffffffffffe2    	// #-30
   5b938:	b	5b960 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c3c>
   5b93c:	mov	x0, x19
   5b940:	mov	x1, x21
   5b944:	mov	x2, x20
   5b948:	b	5b958 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c34>
   5b94c:	add	x1, x21, x22
   5b950:	sub	x2, x20, x22
   5b954:	mov	x0, x19
   5b958:	bl	5d174 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5450>
   5b95c:	mov	x0, xzr
   5b960:	ldp	x20, x19, [sp, #32]
   5b964:	ldp	x22, x21, [sp, #16]
   5b968:	ldp	x29, x30, [sp], #48
   5b96c:	ret
   5b970:	stp	x29, x30, [sp, #-32]!
   5b974:	mov	w0, #0x80                  	// #128
   5b978:	str	x19, [sp, #16]
   5b97c:	mov	x29, sp
   5b980:	bl	4640 <malloc@plt>
   5b984:	mov	x19, x0
   5b988:	cbz	x0, 5b9ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x3c88>
   5b98c:	movi	v0.2d, #0x0
   5b990:	stp	q0, q0, [x19, #96]
   5b994:	stp	q0, q0, [x19, #64]
   5b998:	stp	q0, q0, [x19, #32]
   5b99c:	stp	q0, q0, [x19]
   5b9a0:	bl	5af28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3204>
   5b9a4:	str	x0, [x19]
   5b9a8:	str	wzr, [x19, #112]
   5b9ac:	mov	x0, x19
   5b9b0:	ldr	x19, [sp, #16]
   5b9b4:	ldp	x29, x30, [sp], #32
   5b9b8:	ret
   5b9bc:	cbz	x0, 5b9f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3cd4>
   5b9c0:	stp	x29, x30, [sp, #-32]!
   5b9c4:	str	x19, [sp, #16]
   5b9c8:	mov	x19, x0
   5b9cc:	ldr	x0, [x0]
   5b9d0:	mov	x29, sp
   5b9d4:	bl	5af60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x323c>
   5b9d8:	ldr	x0, [x19, #48]
   5b9dc:	bl	4880 <free@plt>
   5b9e0:	ldr	x0, [x19, #72]
   5b9e4:	bl	4880 <free@plt>
   5b9e8:	mov	x0, x19
   5b9ec:	bl	4880 <free@plt>
   5b9f0:	ldr	x19, [sp, #16]
   5b9f4:	ldp	x29, x30, [sp], #32
   5b9f8:	mov	x0, xzr
   5b9fc:	ret
   5ba00:	stp	x29, x30, [sp, #-16]!
   5ba04:	ldr	x8, [x0]
   5ba08:	mov	w9, #0x1                   	// #1
   5ba0c:	str	xzr, [x0, #64]
   5ba10:	str	w9, [x0, #112]
   5ba14:	stp	xzr, xzr, [x0, #96]
   5ba18:	str	xzr, [x0, #88]
   5ba1c:	mov	x0, x8
   5ba20:	mov	x29, sp
   5ba24:	bl	5b3c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x36a4>
   5ba28:	ldp	x29, x30, [sp], #16
   5ba2c:	ret
   5ba30:	stp	x29, x30, [sp, #-16]!
   5ba34:	mov	x1, xzr
   5ba38:	mov	x2, xzr
   5ba3c:	mov	x29, sp
   5ba40:	bl	5ba00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3cdc>
   5ba44:	ldp	x29, x30, [sp], #16
   5ba48:	ret
   5ba4c:	sub	sp, sp, #0xa0
   5ba50:	stp	x29, x30, [sp, #64]
   5ba54:	stp	x28, x27, [sp, #80]
   5ba58:	stp	x26, x25, [sp, #96]
   5ba5c:	stp	x24, x23, [sp, #112]
   5ba60:	stp	x22, x21, [sp, #128]
   5ba64:	stp	x20, x19, [sp, #144]
   5ba68:	ldr	x8, [x4]
   5ba6c:	ldr	x9, [x2]
   5ba70:	add	x29, sp, #0x40
   5ba74:	add	x10, x0, #0x74
   5ba78:	stur	x10, [x29, #-8]
   5ba7c:	add	x10, x0, #0x8
   5ba80:	adrp	x22, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5ba84:	add	x8, x3, x8
   5ba88:	mov	x20, x4
   5ba8c:	mov	x23, x3
   5ba90:	mov	x19, x0
   5ba94:	stur	x10, [x29, #-16]
   5ba98:	add	x10, x0, #0x58
   5ba9c:	add	x22, x22, #0x422
   5baa0:	mov	x27, x3
   5baa4:	mov	x26, x1
   5baa8:	stur	x8, [x29, #-24]
   5baac:	add	x8, x1, x9
   5bab0:	mov	w24, #0x1                   	// #1
   5bab4:	str	x2, [sp, #24]
   5bab8:	str	x10, [sp, #16]
   5babc:	str	x1, [sp, #8]
   5bac0:	str	x8, [sp, #32]
   5bac4:	b	5bad0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3dac>
   5bac8:	mov	w24, wzr
   5bacc:	cbz	w24, 5bed8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41b4>
   5bad0:	ldr	w8, [x19, #112]
   5bad4:	cmp	w8, #0x6
   5bad8:	b.hi	5bf10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41ec>  // b.pmore
   5badc:	adr	x9, 5baf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3dcc>
   5bae0:	ldrh	w10, [x22, x8, lsl #1]
   5bae4:	add	x9, x9, x10, lsl #2
   5bae8:	mov	x28, #0xffffffffffffffc2    	// #-62
   5baec:	br	x9
   5baf0:	ldr	x2, [x20]
   5baf4:	ldur	x0, [x29, #-16]
   5baf8:	mov	x1, x23
   5bafc:	bl	5af90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x326c>
   5bb00:	mov	x28, x0
   5bb04:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5bb08:	cbz	w0, 5bb68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e44>
   5bb0c:	mov	w8, wzr
   5bb10:	b	5bbe8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ec4>
   5bb14:	ldr	x8, [x19, #104]
   5bb18:	ldr	x3, [x20]
   5bb1c:	mov	x2, x23
   5bb20:	add	x9, x19, x8
   5bb24:	add	x0, x9, #0x74
   5bb28:	mov	w9, #0x5                   	// #5
   5bb2c:	sub	x1, x9, x8
   5bb30:	bl	5bf40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x421c>
   5bb34:	ldr	x8, [x19, #104]
   5bb38:	add	x27, x27, x0
   5bb3c:	add	x2, x8, x0
   5bb40:	str	x2, [x19, #104]
   5bb44:	ldp	x0, x1, [x29, #-16]
   5bb48:	bl	5af90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x326c>
   5bb4c:	mov	x28, x0
   5bb50:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5bb54:	cbz	w0, 5bbb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3e90>
   5bb58:	mov	w8, wzr
   5bb5c:	mov	x25, x28
   5bb60:	cbnz	w8, 5bc04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ee0>
   5bb64:	b	5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5bb68:	cbz	x28, 5bbd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3eb4>
   5bb6c:	ldr	x8, [x19, #104]
   5bb70:	ldr	x2, [x20]
   5bb74:	mov	x1, x23
   5bb78:	add	x8, x19, x8
   5bb7c:	add	x0, x8, #0x74
   5bb80:	bl	4420 <memcpy@plt>
   5bb84:	ldr	x9, [x20]
   5bb88:	ldr	x10, [x19, #104]
   5bb8c:	mov	w8, wzr
   5bb90:	add	x9, x10, x9
   5bb94:	str	x9, [x19, #104]
   5bb98:	ldr	x9, [sp, #24]
   5bb9c:	mov	w10, #0x2                   	// #2
   5bba0:	str	xzr, [x9]
   5bba4:	ldr	x9, [x19, #104]
   5bba8:	str	w10, [x19, #112]
   5bbac:	sub	x28, x28, x9
   5bbb0:	b	5bbe8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ec4>
   5bbb4:	cbz	x28, 5bbf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ed0>
   5bbb8:	ldr	x9, [sp, #24]
   5bbbc:	mov	w8, wzr
   5bbc0:	str	xzr, [x9]
   5bbc4:	ldr	x9, [x19, #104]
   5bbc8:	sub	x28, x28, x9
   5bbcc:	mov	x25, x28
   5bbd0:	cbnz	w8, 5bc04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3ee0>
   5bbd4:	b	5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5bbd8:	mov	w8, #0x3                   	// #3
   5bbdc:	str	w8, [x19, #112]
   5bbe0:	mov	w8, #0x1                   	// #1
   5bbe4:	mov	x28, x25
   5bbe8:	mov	x25, x28
   5bbec:	tbnz	w8, #0, 5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5bbf0:	b	5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5bbf4:	mov	w8, #0x1                   	// #1
   5bbf8:	mov	x28, x25
   5bbfc:	mov	x25, x28
   5bc00:	cbz	w8, 5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5bc04:	ldr	x8, [x19, #56]
   5bc08:	ldr	w21, [x19, #16]
   5bc0c:	lsr	x8, x8, #17
   5bc10:	cbnz	x8, 5bc34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f10>
   5bc14:	ldr	x0, [x19, #48]
   5bc18:	bl	4880 <free@plt>
   5bc1c:	mov	w8, #0x20000               	// #131072
   5bc20:	mov	w0, #0x20000               	// #131072
   5bc24:	str	x8, [x19, #56]
   5bc28:	bl	4640 <malloc@plt>
   5bc2c:	str	x0, [x19, #48]
   5bc30:	cbz	x0, 5bc70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f4c>
   5bc34:	ldr	x8, [x19, #80]
   5bc38:	mov	w9, #0x1                   	// #1
   5bc3c:	lsl	x21, x9, x21
   5bc40:	cmp	x8, x21
   5bc44:	b.cs	5bc64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f40>  // b.hs, b.nlast
   5bc48:	ldr	x0, [x19, #72]
   5bc4c:	bl	4880 <free@plt>
   5bc50:	mov	x0, x21
   5bc54:	str	x21, [x19, #80]
   5bc58:	bl	4640 <malloc@plt>
   5bc5c:	str	x0, [x19, #72]
   5bc60:	cbz	x0, 5bc70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f4c>
   5bc64:	mov	w8, #0x1                   	// #1
   5bc68:	cbnz	w8, 5bc7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f58>
   5bc6c:	b	5bf18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f4>
   5bc70:	mov	w8, wzr
   5bc74:	mov	x25, #0xffffffffffffffc0    	// #-64
   5bc78:	cbz	w8, 5bf18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f4>
   5bc7c:	ldr	x2, [x19, #104]
   5bc80:	cbz	x2, 5bca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3f84>
   5bc84:	ldr	x0, [x19, #48]
   5bc88:	ldur	x1, [x29, #-8]
   5bc8c:	bl	4420 <memcpy@plt>
   5bc90:	ldr	x8, [x19, #104]
   5bc94:	str	xzr, [x19, #104]
   5bc98:	str	x8, [x19, #64]
   5bc9c:	mov	w8, #0x5                   	// #5
   5bca0:	str	w8, [x19, #112]
   5bca4:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5bca8:	mov	w8, #0x4                   	// #4
   5bcac:	str	w8, [x19, #112]
   5bcb0:	ldr	x21, [x19]
   5bcb4:	mov	x0, x21
   5bcb8:	bl	5b644 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3920>
   5bcbc:	cbz	x0, 5bcf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fd0>
   5bcc0:	ldur	x9, [x29, #-24]
   5bcc4:	mov	x28, x0
   5bcc8:	sub	x8, x9, x27
   5bccc:	cmp	x8, x0
   5bcd0:	b.cs	5bd00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3fdc>  // b.hs, b.nlast
   5bcd4:	cmp	x27, x9
   5bcd8:	b.eq	5bd40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x401c>  // b.none
   5bcdc:	mov	w8, wzr
   5bce0:	mov	w9, #0x5                   	// #5
   5bce4:	str	w9, [x19, #112]
   5bce8:	cmp	w8, #0x4
   5bcec:	b.ne	5bd70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x404c>  // b.any
   5bcf0:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5bcf4:	mov	w24, wzr
   5bcf8:	str	wzr, [x19, #112]
   5bcfc:	b	5bd64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4040>
   5bd00:	ldp	x10, x8, [x19, #80]
   5bd04:	ldr	x9, [x19, #72]
   5bd08:	mov	x0, x21
   5bd0c:	mov	x3, x27
   5bd10:	sub	x2, x10, x8
   5bd14:	add	x1, x9, x8
   5bd18:	mov	x4, x28
   5bd1c:	bl	5b64c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3928>
   5bd20:	mov	x21, x0
   5bd24:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5bd28:	cbz	w0, 5bd48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4024>
   5bd2c:	mov	w8, #0x1                   	// #1
   5bd30:	mov	x25, x21
   5bd34:	cmp	w8, #0x4
   5bd38:	b.ne	5bd70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x404c>  // b.any
   5bd3c:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5bd40:	mov	w24, wzr
   5bd44:	b	5bd64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4040>
   5bd48:	add	x27, x27, x28
   5bd4c:	cbz	x21, 5bd64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4040>
   5bd50:	ldr	x8, [x19, #88]
   5bd54:	mov	w9, #0x6                   	// #6
   5bd58:	str	w9, [x19, #112]
   5bd5c:	add	x8, x8, x21
   5bd60:	str	x8, [x19, #96]
   5bd64:	mov	w8, #0x4                   	// #4
   5bd68:	cmp	w8, #0x4
   5bd6c:	b.eq	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>  // b.none
   5bd70:	mov	x28, x25
   5bd74:	cbnz	w8, 5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5bd78:	ldr	x0, [x19]
   5bd7c:	bl	5b644 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3920>
   5bd80:	ldp	x9, x8, [x19, #56]
   5bd84:	sub	x21, x0, x8
   5bd88:	sub	x9, x9, x8
   5bd8c:	cmp	x21, x9
   5bd90:	b.ls	5bda8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4084>  // b.plast
   5bd94:	mov	x25, #0xffffffffffffffec    	// #-20
   5bd98:	mov	w8, #0x1                   	// #1
   5bd9c:	cmp	w8, #0x4
   5bda0:	b.ne	5be70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x414c>  // b.any
   5bda4:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5bda8:	ldr	x9, [x19, #48]
   5bdac:	mov	x28, x0
   5bdb0:	mov	x1, x21
   5bdb4:	mov	x2, x27
   5bdb8:	add	x0, x9, x8
   5bdbc:	ldur	x8, [x29, #-24]
   5bdc0:	sub	x3, x8, x27
   5bdc4:	bl	5bf40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x421c>
   5bdc8:	ldr	x8, [x19, #64]
   5bdcc:	add	x27, x27, x0
   5bdd0:	cmp	x0, x21
   5bdd4:	add	x8, x8, x0
   5bdd8:	str	x8, [x19, #64]
   5bddc:	b.cs	5bdf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x40d0>  // b.hs, b.nlast
   5bde0:	mov	w24, wzr
   5bde4:	mov	w8, #0x4                   	// #4
   5bde8:	cmp	w8, #0x4
   5bdec:	b.ne	5be70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x414c>  // b.any
   5bdf0:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5bdf4:	ldp	x10, x8, [x19, #80]
   5bdf8:	ldr	x9, [x19, #72]
   5bdfc:	ldr	x0, [x19]
   5be00:	ldr	x3, [x19, #48]
   5be04:	sub	x2, x10, x8
   5be08:	add	x1, x9, x8
   5be0c:	mov	x4, x28
   5be10:	bl	5b64c <ZDICT_addEntropyTablesFromBuffer@@Base+0x3928>
   5be14:	mov	x21, x0
   5be18:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5be1c:	cbz	w0, 5be34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4110>
   5be20:	mov	w8, #0x1                   	// #1
   5be24:	mov	x25, x21
   5be28:	cmp	w8, #0x4
   5be2c:	b.ne	5be70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x414c>  // b.any
   5be30:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5be34:	str	xzr, [x19, #64]
   5be38:	cbz	x21, 5be60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x413c>
   5be3c:	ldr	x9, [x19, #88]
   5be40:	mov	w8, wzr
   5be44:	add	x9, x9, x21
   5be48:	str	x9, [x19, #96]
   5be4c:	mov	w9, #0x6                   	// #6
   5be50:	str	w9, [x19, #112]
   5be54:	cmp	w8, #0x4
   5be58:	b.ne	5be70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x414c>  // b.any
   5be5c:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5be60:	mov	w8, #0x4                   	// #4
   5be64:	str	w8, [x19, #112]
   5be68:	cmp	w8, #0x4
   5be6c:	b.eq	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>  // b.none
   5be70:	mov	x28, x25
   5be74:	cbnz	w8, 5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5be78:	ldp	x9, x8, [x19, #88]
   5be7c:	ldr	x10, [x19, #72]
   5be80:	ldr	x11, [sp, #32]
   5be84:	mov	x0, x26
   5be88:	sub	x21, x8, x9
   5be8c:	add	x2, x10, x9
   5be90:	sub	x1, x11, x26
   5be94:	mov	x3, x21
   5be98:	bl	5bf40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x421c>
   5be9c:	ldr	x8, [x19, #88]
   5bea0:	add	x26, x26, x0
   5bea4:	cmp	x0, x21
   5bea8:	add	x8, x8, x0
   5beac:	str	x8, [x19, #88]
   5beb0:	b.ne	5bac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da4>  // b.any
   5beb4:	ldr	x9, [x19, #80]
   5beb8:	add	x8, x8, #0x20, lsl #12
   5bebc:	cmp	x8, x9
   5bec0:	mov	w8, #0x4                   	// #4
   5bec4:	str	w8, [x19, #112]
   5bec8:	b.ls	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>  // b.plast
   5becc:	ldr	x8, [sp, #16]
   5bed0:	stp	xzr, xzr, [x8]
   5bed4:	b	5bacc <ZDICT_addEntropyTablesFromBuffer@@Base+0x3da8>
   5bed8:	sub	x8, x27, x23
   5bedc:	ldr	x9, [sp, #8]
   5bee0:	str	x8, [x20]
   5bee4:	ldr	x8, [sp, #24]
   5bee8:	sub	x9, x26, x9
   5beec:	str	x9, [x8]
   5bef0:	ldr	x0, [x19]
   5bef4:	bl	5b644 <ZDICT_addEntropyTablesFromBuffer@@Base+0x3920>
   5bef8:	ldr	x8, [x19, #64]
   5befc:	add	x9, x0, #0x3
   5bf00:	cmp	x0, #0x3
   5bf04:	csel	x9, x9, x0, hi  // hi = pmore
   5bf08:	sub	x28, x9, x8
   5bf0c:	b	5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5bf10:	mov	x28, #0xffffffffffffffff    	// #-1
   5bf14:	b	5bf1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x41f8>
   5bf18:	mov	x28, x25
   5bf1c:	mov	x0, x28
   5bf20:	ldp	x20, x19, [sp, #144]
   5bf24:	ldp	x22, x21, [sp, #128]
   5bf28:	ldp	x24, x23, [sp, #112]
   5bf2c:	ldp	x26, x25, [sp, #96]
   5bf30:	ldp	x28, x27, [sp, #80]
   5bf34:	ldp	x29, x30, [sp, #64]
   5bf38:	add	sp, sp, #0xa0
   5bf3c:	ret
   5bf40:	stp	x29, x30, [sp, #-32]!
   5bf44:	cmp	x1, x3
   5bf48:	str	x19, [sp, #16]
   5bf4c:	csel	x19, x1, x3, cc  // cc = lo, ul, last
   5bf50:	mov	x1, x2
   5bf54:	mov	x2, x19
   5bf58:	mov	x29, sp
   5bf5c:	bl	4420 <memcpy@plt>
   5bf60:	mov	x0, x19
   5bf64:	ldr	x19, [sp, #16]
   5bf68:	ldp	x29, x30, [sp], #32
   5bf6c:	ret
   5bf70:	stp	x29, x30, [sp, #-16]!
   5bf74:	mov	x29, sp
   5bf78:	bl	58db0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x108c>
   5bf7c:	ldp	x29, x30, [sp], #16
   5bf80:	ret
   5bf84:	stp	x29, x30, [sp, #-16]!
   5bf88:	mov	x29, sp
   5bf8c:	bl	58dd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10ac>
   5bf90:	ldp	x29, x30, [sp], #16
   5bf94:	ret
   5bf98:	mov	w0, #0x3                   	// #3
   5bf9c:	movk	w0, #0x2, lsl #16
   5bfa0:	ret
   5bfa4:	mov	w0, #0x20000               	// #131072
   5bfa8:	ret
   5bfac:	stp	x29, x30, [sp, #-32]!
   5bfb0:	str	x19, [sp, #16]
   5bfb4:	mov	x29, sp
   5bfb8:	mov	x19, x0
   5bfbc:	bl	58db0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x108c>
   5bfc0:	cmp	w0, #0x0
   5bfc4:	csneg	w0, wzr, w19, eq  // eq = none
   5bfc8:	ldr	x19, [sp, #16]
   5bfcc:	ldp	x29, x30, [sp], #32
   5bfd0:	ret
   5bfd4:	ldr	w0, [x0]
   5bfd8:	ret
   5bfdc:	stp	x29, x30, [sp, #-48]!
   5bfe0:	str	x21, [sp, #16]
   5bfe4:	stp	x20, x19, [sp, #32]
   5bfe8:	mov	x19, x2
   5bfec:	mov	x20, x1
   5bff0:	ldrh	w1, [x19], #4
   5bff4:	mov	x21, x0
   5bff8:	mov	x0, x20
   5bffc:	mov	x29, sp
   5c000:	bl	5c0d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43b0>
   5c004:	str	x0, [x21]
   5c008:	mov	x0, x20
   5c00c:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5c010:	str	x19, [x21, #8]
   5c014:	ldp	x20, x19, [sp, #32]
   5c018:	ldr	x21, [sp, #16]
   5c01c:	ldp	x29, x30, [sp], #48
   5c020:	ret
   5c024:	stp	x29, x30, [sp, #-48]!
   5c028:	str	x21, [sp, #16]
   5c02c:	stp	x20, x19, [sp, #32]
   5c030:	ldp	x9, x8, [x0]
   5c034:	mov	x19, x0
   5c038:	mov	x0, x1
   5c03c:	mov	x29, sp
   5c040:	add	x9, x8, x9, lsl #2
   5c044:	ldrb	w8, [x9, #3]
   5c048:	ldrh	w21, [x9]
   5c04c:	ldrb	w20, [x9, #2]
   5c050:	mov	w1, w8
   5c054:	bl	5c144 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4420>
   5c058:	add	x8, x0, x21
   5c05c:	str	x8, [x19]
   5c060:	mov	w0, w20
   5c064:	ldp	x20, x19, [sp, #32]
   5c068:	ldr	x21, [sp, #16]
   5c06c:	ldp	x29, x30, [sp], #48
   5c070:	ret
   5c074:	stp	x29, x30, [sp, #-48]!
   5c078:	str	x21, [sp, #16]
   5c07c:	stp	x20, x19, [sp, #32]
   5c080:	ldp	x9, x8, [x0]
   5c084:	mov	x19, x0
   5c088:	mov	x0, x1
   5c08c:	mov	x29, sp
   5c090:	add	x9, x8, x9, lsl #2
   5c094:	ldrb	w8, [x9, #3]
   5c098:	ldrh	w21, [x9]
   5c09c:	ldrb	w20, [x9, #2]
   5c0a0:	mov	w1, w8
   5c0a4:	bl	5c0d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43b0>
   5c0a8:	add	x8, x0, x21
   5c0ac:	str	x8, [x19]
   5c0b0:	mov	w0, w20
   5c0b4:	ldp	x20, x19, [sp, #32]
   5c0b8:	ldr	x21, [sp, #16]
   5c0bc:	ldp	x29, x30, [sp], #48
   5c0c0:	ret
   5c0c4:	ldr	x8, [x0]
   5c0c8:	cmp	x8, #0x0
   5c0cc:	cset	w0, eq  // eq = none
   5c0d0:	ret
   5c0d4:	stp	x29, x30, [sp, #-48]!
   5c0d8:	str	x21, [sp, #16]
   5c0dc:	stp	x20, x19, [sp, #32]
   5c0e0:	mov	x29, sp
   5c0e4:	mov	w19, w1
   5c0e8:	mov	x20, x0
   5c0ec:	bl	5c114 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43f0>
   5c0f0:	mov	x21, x0
   5c0f4:	mov	x0, x20
   5c0f8:	mov	w1, w19
   5c0fc:	bl	5c134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4410>
   5c100:	mov	x0, x21
   5c104:	ldp	x20, x19, [sp, #32]
   5c108:	ldr	x21, [sp, #16]
   5c10c:	ldp	x29, x30, [sp], #48
   5c110:	ret
   5c114:	ldr	x8, [x0]
   5c118:	ldr	w9, [x0, #8]
   5c11c:	mov	w10, #0x3f                  	// #63
   5c120:	lsl	x8, x8, x9
   5c124:	lsr	x8, x8, #1
   5c128:	sub	w9, w10, w1
   5c12c:	lsr	x0, x8, x9
   5c130:	ret
   5c134:	ldr	w8, [x0, #8]
   5c138:	add	w8, w8, w1
   5c13c:	str	w8, [x0, #8]
   5c140:	ret
   5c144:	stp	x29, x30, [sp, #-48]!
   5c148:	str	x21, [sp, #16]
   5c14c:	stp	x20, x19, [sp, #32]
   5c150:	mov	x29, sp
   5c154:	mov	w19, w1
   5c158:	mov	x20, x0
   5c15c:	bl	5c184 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4460>
   5c160:	mov	x21, x0
   5c164:	mov	x0, x20
   5c168:	mov	w1, w19
   5c16c:	bl	5c134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4410>
   5c170:	mov	x0, x21
   5c174:	ldp	x20, x19, [sp, #32]
   5c178:	ldr	x21, [sp, #16]
   5c17c:	ldp	x29, x30, [sp], #48
   5c180:	ret
   5c184:	ldr	x8, [x0]
   5c188:	ldr	w9, [x0, #8]
   5c18c:	lsl	x8, x8, x9
   5c190:	neg	w9, w1
   5c194:	lsr	x0, x8, x9
   5c198:	ret
   5c19c:	stp	x29, x30, [sp, #-16]!
   5c1a0:	mov	x29, sp
   5c1a4:	bl	5c1b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x448c>
   5c1a8:	ldp	x29, x30, [sp], #16
   5c1ac:	ret
   5c1b0:	stp	x29, x30, [sp, #-16]!
   5c1b4:	mov	x29, sp
   5c1b8:	bl	5c1c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x44a0>
   5c1bc:	ldp	x29, x30, [sp], #16
   5c1c0:	ret
   5c1c4:	ldr	x0, [x0]
   5c1c8:	ret
   5c1cc:	ldrh	w0, [x0]
   5c1d0:	ret
   5c1d4:	sub	sp, sp, #0xd0
   5c1d8:	stp	x29, x30, [sp, #112]
   5c1dc:	stp	x28, x27, [sp, #128]
   5c1e0:	stp	x26, x25, [sp, #144]
   5c1e4:	stp	x24, x23, [sp, #160]
   5c1e8:	stp	x22, x21, [sp, #176]
   5c1ec:	stp	x20, x19, [sp, #192]
   5c1f0:	ldr	q0, [x3]
   5c1f4:	add	x29, sp, #0x70
   5c1f8:	str	w7, [sp, #28]
   5c1fc:	str	x5, [sp, #16]
   5c200:	str	w1, [sp, #12]
   5c204:	str	q0, [sp, #32]
   5c208:	ldp	q0, q1, [x3, #16]
   5c20c:	ldr	w8, [x3, #64]
   5c210:	ldr	q2, [x3, #48]
   5c214:	ldrh	w24, [x29, #96]
   5c218:	mov	w25, w6
   5c21c:	mov	w21, w2
   5c220:	mov	x23, x0
   5c224:	cmp	w4, #0x2
   5c228:	str	w8, [sp, #96]
   5c22c:	stp	q1, q2, [sp, #64]
   5c230:	str	q0, [sp, #48]
   5c234:	b.lt	5c270 <ZDICT_addEntropyTablesFromBuffer@@Base+0x454c>  // b.tstop
   5c238:	add	x8, sp, #0x20
   5c23c:	ldr	w26, [x8, w4, sxtw #2]
   5c240:	sub	x0, x29, #0x4
   5c244:	mov	w1, w24
   5c248:	bl	5c314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45f0>
   5c24c:	mov	w8, #0x1                   	// #1
   5c250:	sturb	w21, [x29, #-2]
   5c254:	sturb	w8, [x29, #-1]
   5c258:	cbz	w26, 5c270 <ZDICT_addEntropyTablesFromBuffer@@Base+0x454c>
   5c25c:	ldur	w8, [x29, #-4]
   5c260:	mov	x9, x23
   5c264:	subs	x26, x26, #0x1
   5c268:	str	w8, [x9], #4
   5c26c:	b.ne	5c264 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4540>  // b.any
   5c270:	cbz	w25, 5c2f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45d0>
   5c274:	mov	x26, xzr
   5c278:	mov	w25, w25
   5c27c:	add	x28, sp, #0x20
   5c280:	ldr	x8, [sp, #16]
   5c284:	ldr	w9, [sp, #28]
   5c288:	mov	w10, #0x1                   	// #1
   5c28c:	sub	x0, x29, #0x4
   5c290:	add	x8, x8, x26, lsl #1
   5c294:	ldrb	w27, [x8, #1]
   5c298:	ldrb	w8, [x8]
   5c29c:	sub	w22, w9, w27
   5c2a0:	ldr	w9, [sp, #12]
   5c2a4:	ldr	w20, [x28, x27, lsl #2]
   5c2a8:	add	w1, w24, w8, lsl #8
   5c2ac:	sub	w9, w9, w22
   5c2b0:	lsl	w9, w10, w9
   5c2b4:	add	w19, w9, w20
   5c2b8:	bl	5c314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45f0>
   5c2bc:	add	w8, w22, w21
   5c2c0:	sturb	w8, [x29, #-2]
   5c2c4:	mov	w8, #0x2                   	// #2
   5c2c8:	sturb	w8, [x29, #-1]
   5c2cc:	ldur	w8, [x29, #-4]
   5c2d0:	add	w9, w20, #0x1
   5c2d4:	cmp	w9, w19
   5c2d8:	str	w8, [x23, w20, uxtw #2]
   5c2dc:	mov	w20, w9
   5c2e0:	b.cc	5c2d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x45ac>  // b.lo, b.ul, b.last
   5c2e4:	add	x26, x26, #0x1
   5c2e8:	cmp	x26, x25
   5c2ec:	str	w19, [x28, x27, lsl #2]
   5c2f0:	b.ne	5c280 <ZDICT_addEntropyTablesFromBuffer@@Base+0x455c>  // b.any
   5c2f4:	ldp	x20, x19, [sp, #192]
   5c2f8:	ldp	x22, x21, [sp, #176]
   5c2fc:	ldp	x24, x23, [sp, #160]
   5c300:	ldp	x26, x25, [sp, #144]
   5c304:	ldp	x28, x27, [sp, #128]
   5c308:	ldp	x29, x30, [sp, #112]
   5c30c:	add	sp, sp, #0xd0
   5c310:	ret
   5c314:	stp	x29, x30, [sp, #-16]!
   5c318:	mov	x29, sp
   5c31c:	bl	5c328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4604>
   5c320:	ldp	x29, x30, [sp], #16
   5c324:	ret
   5c328:	strh	w1, [x0]
   5c32c:	ret
   5c330:	stp	x29, x30, [sp, #-48]!
   5c334:	str	x21, [sp, #16]
   5c338:	stp	x20, x19, [sp, #32]
   5c33c:	mov	x19, x1
   5c340:	mov	x21, x0
   5c344:	mov	x0, x1
   5c348:	mov	w1, w3
   5c34c:	mov	x29, sp
   5c350:	mov	x20, x2
   5c354:	bl	5c184 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4460>
   5c358:	add	x8, x20, x0, lsl #2
   5c35c:	ldrb	w9, [x8]
   5c360:	strb	w9, [x21]
   5c364:	ldrb	w9, [x8, #3]
   5c368:	cmp	w9, #0x1
   5c36c:	b.ne	5c380 <ZDICT_addEntropyTablesFromBuffer@@Base+0x465c>  // b.any
   5c370:	ldrb	w1, [x8, #2]
   5c374:	mov	x0, x19
   5c378:	bl	5c134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4410>
   5c37c:	b	5c3b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x468c>
   5c380:	ldr	w8, [x19, #8]
   5c384:	cmp	w8, #0x3f
   5c388:	b.hi	5c3b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x468c>  // b.pmore
   5c38c:	add	x8, x20, x0, lsl #2
   5c390:	ldrb	w1, [x8, #2]
   5c394:	mov	x0, x19
   5c398:	bl	5c134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4410>
   5c39c:	ldr	w8, [x19, #8]
   5c3a0:	cmp	w8, #0x41
   5c3a4:	b.cc	5c3b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x468c>  // b.lo, b.ul, b.last
   5c3a8:	mov	w8, #0x40                  	// #64
   5c3ac:	str	w8, [x19, #8]
   5c3b0:	ldp	x20, x19, [sp, #32]
   5c3b4:	ldr	x21, [sp, #16]
   5c3b8:	ldp	x29, x30, [sp], #48
   5c3bc:	ret
   5c3c0:	stp	x29, x30, [sp, #-48]!
   5c3c4:	cmp	x2, #0x3
   5c3c8:	stp	x22, x21, [sp, #16]
   5c3cc:	stp	x20, x19, [sp, #32]
   5c3d0:	mov	x29, sp
   5c3d4:	b.cs	5c3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46cc>  // b.hs, b.nlast
   5c3d8:	mov	x20, #0xffffffffffffffec    	// #-20
   5c3dc:	mov	x0, x20
   5c3e0:	ldp	x20, x19, [sp, #32]
   5c3e4:	ldp	x22, x21, [sp, #16]
   5c3e8:	ldp	x29, x30, [sp], #48
   5c3ec:	ret
   5c3f0:	ldrb	w8, [x1]
   5c3f4:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5c3f8:	add	x10, x10, #0x430
   5c3fc:	mov	x19, x0
   5c400:	lsr	x9, x8, #6
   5c404:	adr	x11, 5c414 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46f0>
   5c408:	ldrb	w12, [x10, x9]
   5c40c:	add	x11, x11, x12, lsl #2
   5c410:	br	x11
   5c414:	cmp	x2, #0x5
   5c418:	b.cc	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.lo, b.ul, b.last
   5c41c:	ubfx	w9, w8, #4, #2
   5c420:	cmp	w9, #0x2
   5c424:	b.eq	5c5f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x48d4>  // b.none
   5c428:	cmp	w9, #0x3
   5c42c:	b.ne	5c628 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4904>  // b.any
   5c430:	ldrb	w11, [x1, #1]
   5c434:	ldrb	w12, [x1, #3]
   5c438:	ldrb	w13, [x1, #2]
   5c43c:	ubfiz	w8, w8, #14, #4
   5c440:	bfi	w8, w11, #6, #8
   5c444:	lsl	w11, w12, #8
   5c448:	mov	x9, xzr
   5c44c:	mov	w10, #0x5                   	// #5
   5c450:	orr	w21, w8, w13, lsr #2
   5c454:	bfi	w11, w13, #16, #2
   5c458:	mov	w8, #0x4                   	// #4
   5c45c:	cmp	w21, #0x20, lsl #12
   5c460:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c464:	b	5c64c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4928>
   5c468:	and	w9, w8, #0x30
   5c46c:	cmp	w9, #0x10
   5c470:	b.ne	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.any
   5c474:	mov	w9, #0x6870                	// #26736
   5c478:	ldr	w9, [x19, x9]
   5c47c:	cbz	w9, 5c5f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x48cc>
   5c480:	ldrb	w9, [x1, #1]
   5c484:	ldrb	w10, [x1, #2]
   5c488:	lsl	w11, w9, #8
   5c48c:	and	x11, x11, #0x300
   5c490:	orr	x3, x11, x10
   5c494:	add	x20, x3, #0x3
   5c498:	cmp	x20, x2
   5c49c:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c4a0:	lsl	w8, w8, #6
   5c4a4:	mov	w10, #0x6888                	// #26760
   5c4a8:	and	x8, x8, #0x3c0
   5c4ac:	mov	w11, #0x280c                	// #10252
   5c4b0:	add	x22, x19, x10
   5c4b4:	orr	x21, x8, x9, lsr #2
   5c4b8:	add	x2, x1, #0x3
   5c4bc:	add	x4, x19, x11
   5c4c0:	mov	x0, x22
   5c4c4:	mov	x1, x21
   5c4c8:	bl	5a640 <ZDICT_addEntropyTablesFromBuffer@@Base+0x291c>
   5c4cc:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5c4d0:	cbnz	w0, 5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>
   5c4d4:	b	5c68c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4968>
   5c4d8:	ubfx	w9, w8, #4, #2
   5c4dc:	cmp	w9, #0x2
   5c4e0:	b.eq	5c540 <ZDICT_addEntropyTablesFromBuffer@@Base+0x481c>  // b.none
   5c4e4:	cmp	w9, #0x3
   5c4e8:	b.ne	5c54c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4828>  // b.any
   5c4ec:	ldrb	w10, [x1, #1]
   5c4f0:	ldrb	w11, [x1, #2]
   5c4f4:	ubfiz	w8, w8, #16, #4
   5c4f8:	bfi	w8, w10, #8, #8
   5c4fc:	orr	w21, w8, w11
   5c500:	b	5c554 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4830>
   5c504:	ubfx	w21, w8, #4, #2
   5c508:	cmp	w21, #0x2
   5c50c:	b.eq	5c5a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4880>  // b.none
   5c510:	cmp	w21, #0x3
   5c514:	b.ne	5c5b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4894>  // b.any
   5c518:	cmp	x2, #0x4
   5c51c:	b.cc	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.lo, b.ul, b.last
   5c520:	ldrb	w9, [x1, #1]
   5c524:	ldrb	w10, [x1, #2]
   5c528:	ubfiz	w8, w8, #16, #4
   5c52c:	bfi	w8, w9, #8, #8
   5c530:	orr	w22, w8, w10
   5c534:	cmp	w22, #0x20, lsl #12
   5c538:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c53c:	b	5c5c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x48a4>
   5c540:	ldrb	w21, [x1, #1]
   5c544:	bfi	w21, w8, #8, #4
   5c548:	b	5c554 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4830>
   5c54c:	and	w21, w8, #0x1f
   5c550:	mov	w9, #0x1                   	// #1
   5c554:	add	x20, x9, x21
   5c558:	add	x8, x20, #0x8
   5c55c:	cmp	x8, x2
   5c560:	b.ls	5c594 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4870>  // b.plast
   5c564:	cmp	x20, x2
   5c568:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c56c:	mov	w8, #0x6888                	// #26760
   5c570:	add	x22, x19, x8
   5c574:	add	x1, x1, x9
   5c578:	mov	x0, x22
   5c57c:	mov	x2, x21
   5c580:	bl	4420 <memcpy@plt>
   5c584:	str	x22, [x19, #26744]
   5c588:	str	x21, [x19, #26752]
   5c58c:	str	xzr, [x22, x21]
   5c590:	b	5c3dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b8>
   5c594:	add	x8, x1, x9
   5c598:	str	x8, [x19, #26744]
   5c59c:	str	x21, [x19, #26752]
   5c5a0:	b	5c3dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b8>
   5c5a4:	ldrb	w22, [x1, #1]
   5c5a8:	bfi	w22, w8, #8, #4
   5c5ac:	cmp	w22, #0x20, lsl #12
   5c5b0:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c5b4:	b	5c5c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x48a4>
   5c5b8:	and	w22, w8, #0x1f
   5c5bc:	mov	w21, #0x1                   	// #1
   5c5c0:	cmp	w22, #0x20, lsl #12
   5c5c4:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c5c8:	ldrb	w1, [x1, w21, uxtw]
   5c5cc:	mov	w8, #0x6888                	// #26760
   5c5d0:	add	x20, x19, x8
   5c5d4:	add	x2, x22, #0x8
   5c5d8:	mov	x0, x20
   5c5dc:	bl	46a0 <memset@plt>
   5c5e0:	str	x20, [x19, #26744]
   5c5e4:	add	w20, w21, #0x1
   5c5e8:	str	x22, [x19, #26752]
   5c5ec:	b	5c3dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b8>
   5c5f0:	mov	x20, #0xffffffffffffffe2    	// #-30
   5c5f4:	b	5c3dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b8>
   5c5f8:	ldrb	w11, [x1, #1]
   5c5fc:	ldrb	w12, [x1, #2]
   5c600:	ubfiz	w8, w8, #10, #4
   5c604:	mov	x9, xzr
   5c608:	bfi	w8, w11, #2, #8
   5c60c:	mov	w10, #0x4                   	// #4
   5c610:	ubfiz	w11, w12, #8, #6
   5c614:	orr	w21, w8, w12, lsr #6
   5c618:	mov	w8, #0x3                   	// #3
   5c61c:	cmp	w21, #0x20, lsl #12
   5c620:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c624:	b	5c64c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4928>
   5c628:	ldrb	w11, [x1, #1]
   5c62c:	and	x9, x8, #0x10
   5c630:	mov	w10, #0x3                   	// #3
   5c634:	lsr	w21, w11, #2
   5c638:	ubfiz	w11, w11, #8, #2
   5c63c:	bfi	w21, w8, #6, #4
   5c640:	mov	w8, #0x2                   	// #2
   5c644:	cmp	w21, #0x20, lsl #12
   5c648:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c64c:	ldrb	w8, [x1, x8]
   5c650:	orr	x3, x11, x8
   5c654:	add	x20, x10, x3
   5c658:	cmp	x20, x2
   5c65c:	b.hi	5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>  // b.pmore
   5c660:	mov	w8, #0x6888                	// #26760
   5c664:	add	x22, x19, x8
   5c668:	add	x2, x1, x10
   5c66c:	mov	x0, x22
   5c670:	mov	x1, x21
   5c674:	cbz	x9, 5c680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x495c>
   5c678:	bl	59c1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1ef8>
   5c67c:	b	5c684 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4960>
   5c680:	bl	5ade8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x30c4>
   5c684:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5c688:	cbnz	w0, 5c3d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b4>
   5c68c:	add	x8, x19, x21
   5c690:	str	x22, [x19, #26744]
   5c694:	str	x21, [x19, #26752]
   5c698:	str	xzr, [x8, #26760]
   5c69c:	b	5c3dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x46b8>
   5c6a0:	sub	sp, sp, #0x170
   5c6a4:	stp	x29, x30, [sp, #272]
   5c6a8:	stp	x28, x27, [sp, #288]
   5c6ac:	stp	x26, x25, [sp, #304]
   5c6b0:	stp	x24, x23, [sp, #320]
   5c6b4:	stp	x22, x21, [sp, #336]
   5c6b8:	stp	x20, x19, [sp, #352]
   5c6bc:	stp	x2, x1, [sp, #64]
   5c6c0:	ldr	x23, [x0, #26744]
   5c6c4:	add	x29, sp, #0x110
   5c6c8:	mov	w9, #0x6870                	// #26736
   5c6cc:	mov	w8, #0x1808                	// #6152
   5c6d0:	stp	x23, xzr, [x29, #-24]
   5c6d4:	ldr	x10, [x0, #26752]
   5c6d8:	stur	wzr, [x29, #-28]
   5c6dc:	stur	xzr, [x29, #-40]
   5c6e0:	ldr	w9, [x0, x9]
   5c6e4:	ldr	x21, [x0, #26648]
   5c6e8:	ldr	x27, [x0, #26656]
   5c6ec:	ldr	x28, [x0, #26664]
   5c6f0:	add	x25, x0, x8
   5c6f4:	mov	w8, #0x1004                	// #4100
   5c6f8:	mov	x20, x4
   5c6fc:	mov	x19, x3
   5c700:	mov	x26, x0
   5c704:	add	x24, x0, x8
   5c708:	sub	x0, x29, #0x1c
   5c70c:	sub	x1, x29, #0x28
   5c710:	sub	x2, x29, #0x10
   5c714:	mov	x3, x26
   5c718:	mov	x4, x25
   5c71c:	mov	x5, x24
   5c720:	mov	x6, x19
   5c724:	mov	x7, x20
   5c728:	str	x10, [sp, #56]
   5c72c:	str	w9, [sp]
   5c730:	bl	5c93c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c18>
   5c734:	mov	x22, x0
   5c738:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5c73c:	cbz	w0, 5c764 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a40>
   5c740:	mov	x0, x22
   5c744:	ldp	x20, x19, [sp, #352]
   5c748:	ldp	x22, x21, [sp, #336]
   5c74c:	ldp	x24, x23, [sp, #320]
   5c750:	ldp	x26, x25, [sp, #304]
   5c754:	ldp	x28, x27, [sp, #288]
   5c758:	ldp	x29, x30, [sp, #272]
   5c75c:	add	sp, sp, #0x170
   5c760:	ret
   5c764:	stp	x24, x25, [sp, #16]
   5c768:	ldp	x9, x25, [sp, #64]
   5c76c:	ldur	w8, [x29, #-28]
   5c770:	str	x21, [sp, #48]
   5c774:	stp	x28, x27, [sp, #32]
   5c778:	add	x9, x25, x9
   5c77c:	str	x9, [sp, #64]
   5c780:	ldr	x9, [sp, #56]
   5c784:	add	x21, x23, x9
   5c788:	cbz	w8, 5c7e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ac4>
   5c78c:	ldur	x9, [x29, #-40]
   5c790:	ldur	x10, [x29, #-16]
   5c794:	add	x8, x19, x20
   5c798:	add	x1, x19, x22
   5c79c:	mov	w19, #0x1                   	// #1
   5c7a0:	add	x10, x9, x10
   5c7a4:	sub	x2, x8, x1
   5c7a8:	add	x0, sp, #0x68
   5c7ac:	mov	x23, x25
   5c7b0:	stp	xzr, xzr, [x29, #-64]
   5c7b4:	stur	x19, [x29, #-48]
   5c7b8:	stp	x19, x9, [sp, #184]
   5c7bc:	str	x10, [sp, #200]
   5c7c0:	add	x20, sp, #0x68
   5c7c4:	bl	5999c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1c78>
   5c7c8:	bl	58db0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x108c>
   5c7cc:	cbz	w0, 5c7f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ad4>
   5c7d0:	ldr	x24, [sp, #64]
   5c7d4:	mov	x22, #0xffffffffffffffec    	// #-20
   5c7d8:	mov	x26, x23
   5c7dc:	mov	x20, x23
   5c7e0:	tbnz	w19, #0, 5c740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a1c>
   5c7e4:	b	5c8e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4bc4>
   5c7e8:	ldr	x24, [sp, #64]
   5c7ec:	mov	x26, x25
   5c7f0:	mov	x20, x25
   5c7f4:	b	5c8e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4bc4>
   5c7f8:	add	x0, x20, #0x20
   5c7fc:	add	x1, sp, #0x68
   5c800:	mov	x2, x26
   5c804:	bl	5bfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b8>
   5c808:	ldr	x2, [sp, #16]
   5c80c:	add	x0, x20, #0x30
   5c810:	add	x1, sp, #0x68
   5c814:	bl	5bfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b8>
   5c818:	ldr	x2, [sp, #24]
   5c81c:	add	x0, x20, #0x40
   5c820:	add	x1, sp, #0x68
   5c824:	bl	5bfdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x42b8>
   5c828:	ldur	w20, [x29, #-28]
   5c82c:	ldr	x24, [sp, #64]
   5c830:	ldp	x27, x25, [sp, #40]
   5c834:	ldr	x28, [sp, #32]
   5c838:	mov	x26, x23
   5c83c:	add	x0, sp, #0x68
   5c840:	bl	5a104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23e0>
   5c844:	cmp	w20, #0x0
   5c848:	cset	w19, ne  // ne = any
   5c84c:	cmp	w0, #0x2
   5c850:	b.hi	5c8d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4bac>  // b.pmore
   5c854:	cbz	w20, 5c8d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4bac>
   5c858:	sub	x0, x29, #0x40
   5c85c:	add	x1, sp, #0x68
   5c860:	sub	w20, w20, #0x1
   5c864:	bl	5cca4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f80>
   5c868:	ldur	q0, [x29, #-64]
   5c86c:	ldur	x8, [x29, #-48]
   5c870:	add	x2, sp, #0x50
   5c874:	sub	x3, x29, #0x18
   5c878:	mov	x0, x26
   5c87c:	mov	x1, x24
   5c880:	mov	x4, x21
   5c884:	mov	x5, x25
   5c888:	mov	x6, x27
   5c88c:	mov	x7, x28
   5c890:	str	q0, [sp, #80]
   5c894:	str	x8, [sp, #96]
   5c898:	bl	5cec0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x519c>
   5c89c:	mov	x19, x0
   5c8a0:	bl	5aec8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x31a4>
   5c8a4:	add	x8, x26, x19
   5c8a8:	cmp	w0, #0x0
   5c8ac:	csel	x26, x8, x26, eq  // eq = none
   5c8b0:	csel	x22, x22, x19, eq  // eq = none
   5c8b4:	cbz	w0, 5c83c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4b18>
   5c8b8:	cmp	w0, #0x0
   5c8bc:	cset	w19, ne  // ne = any
   5c8c0:	stur	w20, [x29, #-28]
   5c8c4:	mov	x20, x23
   5c8c8:	tbnz	w19, #0, 5c740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a1c>
   5c8cc:	b	5c8e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4bc4>
   5c8d0:	cmp	w20, #0x0
   5c8d4:	mov	x8, #0xffffffffffffffec    	// #-20
   5c8d8:	stur	w20, [x29, #-28]
   5c8dc:	csel	x22, x8, x22, ne  // ne = any
   5c8e0:	mov	x20, x23
   5c8e4:	tbnz	w19, #0, 5c740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a1c>
   5c8e8:	ldur	x1, [x29, #-24]
   5c8ec:	subs	x2, x21, x1
   5c8f0:	b.cs	5c904 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4be0>  // b.hs, b.nlast
   5c8f4:	mov	w8, wzr
   5c8f8:	mov	x22, #0xffffffffffffffec    	// #-20
   5c8fc:	cbz	w8, 5c740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a1c>
   5c900:	b	5c934 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c10>
   5c904:	add	x19, x26, x2
   5c908:	cmp	x19, x24
   5c90c:	b.ls	5c920 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4bfc>  // b.plast
   5c910:	mov	w8, wzr
   5c914:	mov	x22, #0xffffffffffffffba    	// #-70
   5c918:	cbz	w8, 5c740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a1c>
   5c91c:	b	5c934 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c10>
   5c920:	mov	x0, x26
   5c924:	bl	4420 <memcpy@plt>
   5c928:	mov	w8, #0x1                   	// #1
   5c92c:	mov	x26, x19
   5c930:	cbz	w8, 5c740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a1c>
   5c934:	sub	x22, x26, x20
   5c938:	b	5c740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4a1c>
   5c93c:	sub	sp, sp, #0x170
   5c940:	stp	x29, x30, [sp, #272]
   5c944:	stp	x28, x27, [sp, #288]
   5c948:	stp	x26, x25, [sp, #304]
   5c94c:	stp	x24, x23, [sp, #320]
   5c950:	stp	x22, x21, [sp, #336]
   5c954:	stp	x20, x19, [sp, #352]
   5c958:	add	x29, sp, #0x110
   5c95c:	cbz	x7, 5ca10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cec>
   5c960:	mov	x8, x6
   5c964:	ldrb	w9, [x8], #1
   5c968:	mov	x19, x6
   5c96c:	str	w9, [x0]
   5c970:	cbz	w9, 5c9d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cb4>
   5c974:	mov	x23, x5
   5c978:	mov	x21, x4
   5c97c:	mov	x22, x3
   5c980:	sxtb	w10, w9
   5c984:	tbz	w10, #31, 5c9a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4c80>
   5c988:	cmp	x7, #0x2
   5c98c:	b.lt	5ca10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cec>  // b.tstop
   5c990:	ldrb	w10, [x19, #1]
   5c994:	add	x8, x19, #0x2
   5c998:	bfi	w10, w9, #8, #8
   5c99c:	sub	w9, w10, #0x8, lsl #12
   5c9a0:	str	w9, [x0]
   5c9a4:	add	x25, x19, x7
   5c9a8:	cmp	x8, x25
   5c9ac:	b.cs	5ca10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cec>  // b.hs, b.nlast
   5c9b0:	ldrb	w26, [x8]
   5c9b4:	tbnz	w26, #1, 5c9e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cbc>
   5c9b8:	add	x9, x8, #0x2
   5c9bc:	cmp	x9, x25
   5c9c0:	b.hi	5ca10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cec>  // b.pmore
   5c9c4:	ldrb	w8, [x8, #1]
   5c9c8:	lsl	w10, w26, #8
   5c9cc:	and	x10, x10, #0x100
   5c9d0:	orr	x8, x8, x10
   5c9d4:	b	5c9f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cd4>
   5c9d8:	mov	w22, #0x1                   	// #1
   5c9dc:	b	5ca14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cf0>
   5c9e0:	add	x9, x8, #0x3
   5c9e4:	cmp	x9, x25
   5c9e8:	b.hi	5ca10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cec>  // b.pmore
   5c9ec:	ldurh	w8, [x8, #1]
   5c9f0:	lsl	x8, x8, #48
   5c9f4:	rev	x8, x8
   5c9f8:	str	x9, [x1]
   5c9fc:	add	x20, x9, x8
   5ca00:	sub	x9, x25, #0x3
   5ca04:	cmp	x20, x9
   5ca08:	str	x8, [x2]
   5ca0c:	b.ls	5ca38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d14>  // b.plast
   5ca10:	mov	x22, #0xffffffffffffffb8    	// #-72
   5ca14:	mov	x0, x22
   5ca18:	ldp	x20, x19, [sp, #352]
   5ca1c:	ldp	x22, x21, [sp, #336]
   5ca20:	ldp	x24, x23, [sp, #320]
   5ca24:	ldp	x26, x25, [sp, #304]
   5ca28:	ldp	x28, x27, [sp, #288]
   5ca2c:	ldp	x29, x30, [sp, #272]
   5ca30:	add	sp, sp, #0x170
   5ca34:	ret
   5ca38:	ldr	w27, [x29, #96]
   5ca3c:	lsr	w8, w26, #6
   5ca40:	cbz	w8, 5ca68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d44>
   5ca44:	cmp	w8, #0x2
   5ca48:	b.eq	5ca80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d5c>  // b.none
   5ca4c:	cmp	w8, #0x1
   5ca50:	b.ne	5ca88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d64>  // b.any
   5ca54:	stur	wzr, [x29, #-4]
   5ca58:	ldrb	w1, [x20], #1
   5ca5c:	mov	x0, x22
   5ca60:	bl	5911c <ZDICT_addEntropyTablesFromBuffer@@Base+0x13f8>
   5ca64:	b	5caf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dd0>
   5ca68:	mov	w8, #0x6                   	// #6
   5ca6c:	mov	w1, #0x6                   	// #6
   5ca70:	mov	x0, x22
   5ca74:	stur	w8, [x29, #-4]
   5ca78:	bl	59134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1410>
   5ca7c:	b	5caf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dd0>
   5ca80:	cbz	w27, 5cc0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ee8>
   5ca84:	b	5caf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dd0>
   5ca88:	mov	w8, #0x3f                  	// #63
   5ca8c:	sub	x4, x25, x20
   5ca90:	add	x0, sp, #0x4
   5ca94:	sub	x1, x29, #0x8
   5ca98:	sub	x2, x29, #0x4
   5ca9c:	mov	x3, x20
   5caa0:	stur	w8, [x29, #-8]
   5caa4:	bl	58de8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10c4>
   5caa8:	mov	x24, x0
   5caac:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5cab0:	cbz	w0, 5cac0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4d9c>
   5cab4:	mov	w8, #0x1                   	// #1
   5cab8:	mov	x22, #0xffffffffffffffff    	// #-1
   5cabc:	b	5caf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dcc>
   5cac0:	ldur	w3, [x29, #-4]
   5cac4:	cmp	w3, #0xa
   5cac8:	b.ls	5cad8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4db4>  // b.plast
   5cacc:	mov	w8, #0x1                   	// #1
   5cad0:	mov	x22, #0xffffffffffffffec    	// #-20
   5cad4:	b	5caf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4dcc>
   5cad8:	ldur	w2, [x29, #-8]
   5cadc:	add	x1, sp, #0x4
   5cae0:	mov	x0, x22
   5cae4:	add	x20, x20, x24
   5cae8:	bl	58bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9c>
   5caec:	mov	w8, wzr
   5caf0:	cbnz	w8, 5cc98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f74>
   5caf4:	ubfx	w8, w26, #4, #2
   5caf8:	cbz	w8, 5cb30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e0c>
   5cafc:	cmp	w8, #0x2
   5cb00:	b.eq	5cb48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e24>  // b.none
   5cb04:	cmp	w8, #0x1
   5cb08:	b.ne	5cb50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e2c>  // b.any
   5cb0c:	sub	x8, x25, #0x2
   5cb10:	cmp	x20, x8
   5cb14:	stur	wzr, [x29, #-8]
   5cb18:	b.hi	5cbe4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ec0>  // b.pmore
   5cb1c:	ldrb	w8, [x20], #1
   5cb20:	mov	x0, x23
   5cb24:	and	w1, w8, #0x1f
   5cb28:	bl	5911c <ZDICT_addEntropyTablesFromBuffer@@Base+0x13f8>
   5cb2c:	b	5cbbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e98>
   5cb30:	mov	w8, #0x5                   	// #5
   5cb34:	mov	w1, #0x5                   	// #5
   5cb38:	mov	x0, x23
   5cb3c:	stur	w8, [x29, #-8]
   5cb40:	bl	59134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1410>
   5cb44:	b	5cbbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e98>
   5cb48:	cbnz	w27, 5cbbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e98>
   5cb4c:	b	5cc0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ee8>
   5cb50:	mov	w8, #0x1f                  	// #31
   5cb54:	sub	x4, x25, x20
   5cb58:	add	x0, sp, #0x4
   5cb5c:	sub	x1, x29, #0xc
   5cb60:	sub	x2, x29, #0x8
   5cb64:	mov	x3, x20
   5cb68:	stur	w8, [x29, #-12]
   5cb6c:	bl	58de8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10c4>
   5cb70:	mov	x24, x0
   5cb74:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5cb78:	cbz	w0, 5cb88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e64>
   5cb7c:	mov	w8, #0x1                   	// #1
   5cb80:	mov	x22, #0xffffffffffffffff    	// #-1
   5cb84:	b	5cbb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e94>
   5cb88:	ldur	w3, [x29, #-8]
   5cb8c:	cmp	w3, #0x9
   5cb90:	b.ls	5cba0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e7c>  // b.plast
   5cb94:	mov	w8, #0x1                   	// #1
   5cb98:	mov	x22, #0xffffffffffffffec    	// #-20
   5cb9c:	b	5cbb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4e94>
   5cba0:	ldur	w2, [x29, #-12]
   5cba4:	add	x1, sp, #0x4
   5cba8:	mov	x0, x23
   5cbac:	add	x20, x20, x24
   5cbb0:	bl	58bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9c>
   5cbb4:	mov	w8, wzr
   5cbb8:	cbnz	w8, 5cc98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f74>
   5cbbc:	ubfx	w8, w26, #2, #2
   5cbc0:	cbz	w8, 5cbf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ecc>
   5cbc4:	cmp	w8, #0x2
   5cbc8:	b.eq	5cc08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ee4>  // b.none
   5cbcc:	cmp	w8, #0x1
   5cbd0:	b.ne	5cc18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ef4>  // b.any
   5cbd4:	sub	x8, x25, #0x2
   5cbd8:	cmp	x20, x8
   5cbdc:	stur	wzr, [x29, #-12]
   5cbe0:	b.ls	5cc50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f2c>  // b.plast
   5cbe4:	mov	w8, #0x1                   	// #1
   5cbe8:	mov	x22, #0xffffffffffffffb8    	// #-72
   5cbec:	b	5cc98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f74>
   5cbf0:	mov	w8, #0x7                   	// #7
   5cbf4:	mov	w1, #0x7                   	// #7
   5cbf8:	mov	x0, x21
   5cbfc:	stur	w8, [x29, #-12]
   5cc00:	bl	59134 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1410>
   5cc04:	b	5cc94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f70>
   5cc08:	cbnz	w27, 5cc94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f70>
   5cc0c:	mov	w8, #0x1                   	// #1
   5cc10:	mov	x22, #0xffffffffffffffec    	// #-20
   5cc14:	b	5cc98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f74>
   5cc18:	mov	w8, #0x7f                  	// #127
   5cc1c:	sub	x4, x25, x20
   5cc20:	add	x0, sp, #0x4
   5cc24:	mov	x1, sp
   5cc28:	sub	x2, x29, #0xc
   5cc2c:	mov	x3, x20
   5cc30:	str	w8, [sp]
   5cc34:	bl	58de8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10c4>
   5cc38:	mov	x23, x0
   5cc3c:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5cc40:	cbz	w0, 5cc60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f3c>
   5cc44:	mov	w8, #0x1                   	// #1
   5cc48:	mov	x22, #0xffffffffffffffff    	// #-1
   5cc4c:	b	5cc90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f6c>
   5cc50:	ldrb	w1, [x20], #1
   5cc54:	mov	x0, x21
   5cc58:	bl	5911c <ZDICT_addEntropyTablesFromBuffer@@Base+0x13f8>
   5cc5c:	b	5cc94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f70>
   5cc60:	ldur	w3, [x29, #-12]
   5cc64:	cmp	w3, #0xa
   5cc68:	b.ls	5cc78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f54>  // b.plast
   5cc6c:	mov	w8, #0x1                   	// #1
   5cc70:	mov	x22, #0xffffffffffffffec    	// #-20
   5cc74:	b	5cc90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f6c>
   5cc78:	ldr	w2, [sp]
   5cc7c:	add	x1, sp, #0x4
   5cc80:	mov	x0, x21
   5cc84:	add	x20, x20, x23
   5cc88:	bl	58bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9c>
   5cc8c:	mov	w8, wzr
   5cc90:	cbnz	w8, 5cc98 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4f74>
   5cc94:	mov	w8, wzr
   5cc98:	cbnz	w8, 5ca14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cf0>
   5cc9c:	sub	x22, x20, x19
   5cca0:	b	5ca14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4cf0>
   5cca4:	sub	sp, sp, #0x70
   5cca8:	stp	x29, x30, [sp, #16]
   5ccac:	stp	x28, x27, [sp, #32]
   5ccb0:	stp	x26, x25, [sp, #48]
   5ccb4:	stp	x24, x23, [sp, #64]
   5ccb8:	stp	x22, x21, [sp, #80]
   5ccbc:	stp	x20, x19, [sp, #96]
   5ccc0:	ldp	x21, x24, [x1, #88]
   5ccc4:	add	x22, x1, #0x20
   5ccc8:	mov	x20, x0
   5cccc:	mov	x0, x22
   5ccd0:	add	x29, sp, #0x10
   5ccd4:	mov	x19, x1
   5ccd8:	bl	5d104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53e0>
   5ccdc:	add	x9, x20, #0x10
   5cce0:	add	x28, x19, #0x50
   5cce4:	tst	w0, #0xff
   5cce8:	csel	x8, x28, x9, eq  // eq = none
   5ccec:	ldr	x10, [x8]
   5ccf0:	and	w8, w0, #0xff
   5ccf4:	cmp	w8, #0x3f
   5ccf8:	stp	x9, x10, [sp]
   5ccfc:	b.ne	5cd18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4ff4>  // b.any
   5cd00:	mov	x0, x21
   5cd04:	ldrb	w8, [x0], #1
   5cd08:	cmp	x8, #0xff
   5cd0c:	b.eq	5cd24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5000>  // b.none
   5cd10:	add	x25, x8, #0x3f
   5cd14:	b	5cd60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x503c>
   5cd18:	mov	x27, x24
   5cd1c:	and	x25, x0, #0xff
   5cd20:	b	5cd70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x504c>
   5cd24:	add	x23, x21, #0x3
   5cd28:	cmp	x23, x24
   5cd2c:	b.ls	5cd38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5014>  // b.plast
   5cd30:	mov	w25, #0x3f                  	// #63
   5cd34:	b	5cd60 <ZDICT_addEntropyTablesFromBuffer@@Base+0x503c>
   5cd38:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   5cd3c:	cmp	x23, x24
   5cd40:	and	x8, x0, #0xffff
   5cd44:	b.cs	5cd58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5034>  // b.hs, b.nlast
   5cd48:	tbz	w0, #0, 5cd58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5034>
   5cd4c:	ldrb	w9, [x21, #3]
   5cd50:	add	x23, x21, #0x4
   5cd54:	bfi	x8, x9, #16, #8
   5cd58:	lsr	x25, x8, #1
   5cd5c:	mov	x0, x23
   5cd60:	sub	x8, x24, #0x1
   5cd64:	cmp	x0, x24
   5cd68:	mov	x27, x24
   5cd6c:	csel	x21, x0, x8, cc  // cc = lo, ul, last
   5cd70:	add	x23, x19, #0x30
   5cd74:	mov	x0, x23
   5cd78:	bl	5d104 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53e0>
   5cd7c:	and	w26, w0, #0xff
   5cd80:	sub	w8, w26, #0x1
   5cd84:	tst	w0, #0xff
   5cd88:	mov	w24, w0
   5cd8c:	csel	w1, wzr, w8, eq  // eq = none
   5cd90:	mov	x0, x19
   5cd94:	bl	5c0d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x43b0>
   5cd98:	adrp	x9, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5cd9c:	and	x8, x24, #0xff
   5cda0:	add	x9, x9, #0x5ec
   5cda4:	ldr	w8, [x9, x8, lsl #2]
   5cda8:	ldr	x9, [sp, #8]
   5cdac:	tst	w24, #0xff
   5cdb0:	mov	x24, x25
   5cdb4:	add	x8, x0, x8
   5cdb8:	csel	x8, x9, x8, eq  // eq = none
   5cdbc:	cmp	x25, #0x0
   5cdc0:	str	x8, [sp, #8]
   5cdc4:	cset	w8, eq  // eq = none
   5cdc8:	orr	w8, w26, w8
   5cdcc:	cbz	w8, 5cddc <ZDICT_addEntropyTablesFromBuffer@@Base+0x50b8>
   5cdd0:	ldr	x8, [sp]
   5cdd4:	ldr	x8, [x8]
   5cdd8:	str	x8, [x28]
   5cddc:	mov	x0, x23
   5cde0:	mov	x1, x19
   5cde4:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5cde8:	mov	x0, x22
   5cdec:	mov	x1, x19
   5cdf0:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5cdf4:	add	x0, x19, #0x40
   5cdf8:	mov	x1, x19
   5cdfc:	bl	5c074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x4350>
   5ce00:	and	w8, w0, #0xff
   5ce04:	cmp	w8, #0x7f
   5ce08:	b.ne	5ce28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5104>  // b.any
   5ce0c:	cmp	x21, x27
   5ce10:	b.cs	5ce34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5110>  // b.hs, b.nlast
   5ce14:	ldrb	w8, [x21], #1
   5ce18:	cmp	w8, #0xff
   5ce1c:	b.eq	5ce40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x511c>  // b.none
   5ce20:	add	w8, w8, #0x7f
   5ce24:	b	5ce80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x515c>
   5ce28:	ldr	x10, [sp, #8]
   5ce2c:	and	x8, x0, #0xff
   5ce30:	b	5ce90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x516c>
   5ce34:	mov	w8, wzr
   5ce38:	cmp	w8, #0xff
   5ce3c:	b.ne	5ce20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x50fc>  // b.any
   5ce40:	add	x22, x21, #0x2
   5ce44:	cmp	x22, x27
   5ce48:	b.ls	5ce54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5130>  // b.plast
   5ce4c:	mov	w8, #0x7f                  	// #127
   5ce50:	b	5ce80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x515c>
   5ce54:	mov	x0, x21
   5ce58:	bl	5a0f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x23cc>
   5ce5c:	cmp	x22, x27
   5ce60:	and	x8, x0, #0xffff
   5ce64:	b.cs	5ce78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5154>  // b.hs, b.nlast
   5ce68:	tbz	w0, #0, 5ce78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5154>
   5ce6c:	ldrb	w9, [x21, #2]
   5ce70:	add	x22, x21, #0x3
   5ce74:	bfi	x8, x9, #16, #8
   5ce78:	lsr	x8, x8, #1
   5ce7c:	mov	x21, x22
   5ce80:	ldr	x10, [sp, #8]
   5ce84:	sub	x9, x27, #0x1
   5ce88:	cmp	x21, x27
   5ce8c:	csel	x21, x21, x9, cc  // cc = lo, ul, last
   5ce90:	add	x8, x8, #0x4
   5ce94:	stp	x8, x10, [x20, #8]
   5ce98:	str	x24, [x20]
   5ce9c:	str	x21, [x19, #88]
   5cea0:	ldp	x20, x19, [sp, #96]
   5cea4:	ldp	x22, x21, [sp, #80]
   5cea8:	ldp	x24, x23, [sp, #64]
   5ceac:	ldp	x26, x25, [sp, #48]
   5ceb0:	ldp	x28, x27, [sp, #32]
   5ceb4:	ldp	x29, x30, [sp, #16]
   5ceb8:	add	sp, sp, #0x70
   5cebc:	ret
   5cec0:	sub	sp, sp, #0x80
   5cec4:	stp	x29, x30, [sp, #32]
   5cec8:	stp	x28, x27, [sp, #48]
   5cecc:	stp	x26, x25, [sp, #64]
   5ced0:	stp	x24, x23, [sp, #80]
   5ced4:	stp	x22, x21, [sp, #96]
   5ced8:	stp	x20, x19, [sp, #112]
   5cedc:	mov	x19, x2
   5cee0:	ldr	x2, [x2]
   5cee4:	sub	x10, x1, #0x8
   5cee8:	mov	x8, #0xffffffffffffffba    	// #-70
   5ceec:	add	x29, sp, #0x20
   5cef0:	add	x21, x0, x2
   5cef4:	cmp	x21, x10
   5cef8:	b.hi	5d09c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5378>  // b.pmore
   5cefc:	ldr	x23, [x19, #8]
   5cf00:	mov	x20, x1
   5cf04:	add	x9, x23, x2
   5cf08:	add	x28, x0, x9
   5cf0c:	cmp	x28, x1
   5cf10:	b.hi	5d09c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5378>  // b.pmore
   5cf14:	ldr	x1, [x3]
   5cf18:	mov	x26, x3
   5cf1c:	str	x10, [sp, #16]
   5cf20:	stur	x9, [x29, #-8]
   5cf24:	add	x27, x1, x2
   5cf28:	cmp	x27, x4
   5cf2c:	b.ls	5cf38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5214>  // b.plast
   5cf30:	mov	x8, #0xffffffffffffffec    	// #-20
   5cf34:	b	5d09c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5378>
   5cf38:	ldr	x8, [x19, #16]
   5cf3c:	mov	x24, x7
   5cf40:	mov	x25, x6
   5cf44:	mov	x22, x5
   5cf48:	sub	x8, x21, x8
   5cf4c:	str	x8, [sp, #8]
   5cf50:	bl	5d114 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f0>
   5cf54:	str	x27, [x26]
   5cf58:	ldr	x8, [x19, #16]
   5cf5c:	sub	x9, x21, x22
   5cf60:	cmp	x8, x9
   5cf64:	b.ls	5cfc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x52a4>  // b.plast
   5cf68:	sub	x9, x21, x25
   5cf6c:	cmp	x8, x9
   5cf70:	b.hi	5cf30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x520c>  // b.pmore
   5cf74:	ldr	x26, [sp, #8]
   5cf78:	ldr	x2, [x19, #8]
   5cf7c:	sub	x25, x26, x22
   5cf80:	add	x1, x24, x25
   5cf84:	add	x8, x1, x2
   5cf88:	cmp	x8, x24
   5cf8c:	b.ls	5d0c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x539c>  // b.plast
   5cf90:	neg	x2, x25
   5cf94:	mov	x0, x21
   5cf98:	bl	4450 <memmove@plt>
   5cf9c:	ldr	x8, [x19, #8]
   5cfa0:	sub	x21, x21, x25
   5cfa4:	add	x8, x8, x25
   5cfa8:	ldr	x25, [sp, #16]
   5cfac:	str	x8, [x19, #8]
   5cfb0:	cmp	x21, x25
   5cfb4:	b.hi	5d0d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53ac>  // b.pmore
   5cfb8:	cmp	x8, #0x3
   5cfbc:	b.ls	5d0d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53ac>  // b.plast
   5cfc0:	mov	w8, #0x1                   	// #1
   5cfc4:	b	5d0f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53d4>
   5cfc8:	ldur	x24, [x29, #-8]
   5cfcc:	ldp	x22, x25, [sp, #8]
   5cfd0:	ldr	x8, [x19, #16]
   5cfd4:	cmp	x8, #0x7
   5cfd8:	b.hi	5d030 <ZDICT_addEntropyTablesFromBuffer@@Base+0x530c>  // b.pmore
   5cfdc:	ldrb	w9, [x22]
   5cfe0:	adrp	x10, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   5cfe4:	add	x10, x10, #0xd60
   5cfe8:	add	x0, x21, #0x4
   5cfec:	strb	w9, [x21]
   5cff0:	ldrb	w9, [x22, #1]
   5cff4:	strb	w9, [x21, #1]
   5cff8:	ldrb	w9, [x22, #2]
   5cffc:	strb	w9, [x21, #2]
   5d000:	ldrb	w9, [x22, #3]
   5d004:	strb	w9, [x21, #3]
   5d008:	ldr	x9, [x19, #16]
   5d00c:	ldrsw	x9, [x10, x9, lsl #2]
   5d010:	adrp	x10, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   5d014:	add	x10, x10, #0xd80
   5d018:	ldrsw	x23, [x10, x8, lsl #2]
   5d01c:	add	x22, x22, x9
   5d020:	mov	x1, x22
   5d024:	bl	5d15c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5438>
   5d028:	sub	x22, x22, x23
   5d02c:	b	5d03c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5318>
   5d030:	mov	x0, x21
   5d034:	mov	x1, x22
   5d038:	bl	5d168 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5444>
   5d03c:	sub	x8, x20, #0xc
   5d040:	add	x0, x21, #0x8
   5d044:	cmp	x28, x8
   5d048:	add	x20, x22, #0x8
   5d04c:	b.ls	5d088 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5364>  // b.plast
   5d050:	cmp	x0, x25
   5d054:	b.cs	5d07c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5358>  // b.hs, b.nlast
   5d058:	sub	x19, x25, x0
   5d05c:	mov	x1, x20
   5d060:	mov	x2, x19
   5d064:	bl	5d114 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f0>
   5d068:	add	x20, x20, x19
   5d06c:	mov	x0, x25
   5d070:	b	5d07c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5358>
   5d074:	ldrb	w8, [x20], #1
   5d078:	strb	w8, [x0], #1
   5d07c:	cmp	x0, x28
   5d080:	b.cc	5d074 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5350>  // b.lo, b.ul, b.last
   5d084:	b	5d098 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5374>
   5d088:	ldr	x8, [x19, #8]
   5d08c:	mov	x1, x20
   5d090:	sub	x2, x8, #0x8
   5d094:	bl	5d114 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53f0>
   5d098:	mov	x8, x24
   5d09c:	ldp	x20, x19, [sp, #112]
   5d0a0:	ldp	x22, x21, [sp, #96]
   5d0a4:	ldp	x24, x23, [sp, #80]
   5d0a8:	ldp	x26, x25, [sp, #64]
   5d0ac:	ldp	x28, x27, [sp, #48]
   5d0b0:	ldp	x29, x30, [sp, #32]
   5d0b4:	mov	x0, x8
   5d0b8:	add	sp, sp, #0x80
   5d0bc:	ret
   5d0c0:	mov	x0, x21
   5d0c4:	bl	4450 <memmove@plt>
   5d0c8:	ldur	x8, [x29, #-8]
   5d0cc:	b	5d09c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5378>
   5d0d0:	cmp	x21, x28
   5d0d4:	b.cs	5d0f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53d0>  // b.hs, b.nlast
   5d0d8:	add	x8, x26, x23
   5d0dc:	sub	x8, x8, x22
   5d0e0:	ldrb	w9, [x22], #1
   5d0e4:	subs	x8, x8, #0x1
   5d0e8:	strb	w9, [x21], #1
   5d0ec:	b.ne	5d0e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53bc>  // b.any
   5d0f0:	b	5d0f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x53d4>
   5d0f4:	mov	w8, wzr
   5d0f8:	ldur	x24, [x29, #-8]
   5d0fc:	cbnz	w8, 5cfd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x52ac>
   5d100:	b	5d098 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5374>
   5d104:	ldp	x9, x8, [x0]
   5d108:	add	x8, x8, x9, lsl #2
   5d10c:	ldrb	w0, [x8, #2]
   5d110:	ret
   5d114:	stp	x29, x30, [sp, #-48]!
   5d118:	str	x21, [sp, #16]
   5d11c:	stp	x20, x19, [sp, #32]
   5d120:	mov	x19, x1
   5d124:	mov	x20, x0
   5d128:	add	x21, x0, x2
   5d12c:	mov	x29, sp
   5d130:	mov	x0, x20
   5d134:	mov	x1, x19
   5d138:	bl	5d168 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5444>
   5d13c:	add	x20, x20, #0x8
   5d140:	cmp	x20, x21
   5d144:	add	x19, x19, #0x8
   5d148:	b.cc	5d130 <ZDICT_addEntropyTablesFromBuffer@@Base+0x540c>  // b.lo, b.ul, b.last
   5d14c:	ldp	x20, x19, [sp, #32]
   5d150:	ldr	x21, [sp, #16]
   5d154:	ldp	x29, x30, [sp], #48
   5d158:	ret
   5d15c:	ldr	w8, [x1]
   5d160:	str	w8, [x0]
   5d164:	ret
   5d168:	ldr	x8, [x1]
   5d16c:	str	x8, [x0]
   5d170:	ret
   5d174:	ldr	x8, [x0, #26640]
   5d178:	ldr	x9, [x0, #26648]
   5d17c:	add	x10, x1, x2
   5d180:	str	x1, [x0, #26648]
   5d184:	str	x8, [x0, #26664]
   5d188:	sub	x8, x9, x8
   5d18c:	add	x8, x1, x8
   5d190:	str	x8, [x0, #26656]
   5d194:	str	x10, [x0, #26640]
   5d198:	ret
   5d19c:	stp	x29, x30, [sp, #-80]!
   5d1a0:	str	x28, [sp, #16]
   5d1a4:	stp	x24, x23, [sp, #32]
   5d1a8:	stp	x22, x21, [sp, #48]
   5d1ac:	stp	x20, x19, [sp, #64]
   5d1b0:	mov	x29, sp
   5d1b4:	sub	sp, sp, #0x1d0
   5d1b8:	mov	w11, #0x280c                	// #10252
   5d1bc:	mov	x19, x0
   5d1c0:	mov	w8, #0x1f                  	// #31
   5d1c4:	mov	w9, #0x7f                  	// #127
   5d1c8:	mov	w10, #0x3f                  	// #63
   5d1cc:	add	x0, x0, x11
   5d1d0:	mov	x21, x2
   5d1d4:	mov	x22, x1
   5d1d8:	str	w8, [x29, #28]
   5d1dc:	str	w9, [sp, #140]
   5d1e0:	str	w10, [sp, #4]
   5d1e4:	bl	5a298 <ZDICT_addEntropyTablesFromBuffer@@Base+0x2574>
   5d1e8:	mov	x20, x0
   5d1ec:	bl	59588 <ZDICT_addEntropyTablesFromBuffer@@Base+0x1864>
   5d1f0:	cbnz	w0, 5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>
   5d1f4:	add	x22, x22, x20
   5d1f8:	sub	x23, x21, x20
   5d1fc:	sub	x0, x29, #0x40
   5d200:	add	x1, x29, #0x1c
   5d204:	add	x2, x29, #0x18
   5d208:	mov	x3, x22
   5d20c:	mov	x4, x23
   5d210:	bl	58de8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10c4>
   5d214:	mov	x21, x0
   5d218:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5d21c:	cbnz	w0, 5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>
   5d220:	ldr	w3, [x29, #24]
   5d224:	cmp	w3, #0x9
   5d228:	b.hi	5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>  // b.pmore
   5d22c:	ldr	w2, [x29, #28]
   5d230:	mov	w8, #0x1004                	// #4100
   5d234:	add	x0, x19, x8
   5d238:	sub	x1, x29, #0x40
   5d23c:	bl	58bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9c>
   5d240:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5d244:	cbnz	w0, 5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>
   5d248:	add	x24, x22, x21
   5d24c:	sub	x23, x23, x21
   5d250:	add	x0, sp, #0x90
   5d254:	add	x1, sp, #0x8c
   5d258:	add	x2, sp, #0x88
   5d25c:	mov	x3, x24
   5d260:	mov	x4, x23
   5d264:	bl	58de8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10c4>
   5d268:	mov	x22, x0
   5d26c:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5d270:	cbnz	w0, 5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>
   5d274:	ldr	w3, [sp, #136]
   5d278:	cmp	w3, #0xa
   5d27c:	b.hi	5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>  // b.pmore
   5d280:	ldr	w2, [sp, #140]
   5d284:	mov	w8, #0x1808                	// #6152
   5d288:	add	x0, x19, x8
   5d28c:	add	x1, sp, #0x90
   5d290:	bl	58bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9c>
   5d294:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5d298:	cbnz	w0, 5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>
   5d29c:	add	x3, x24, x22
   5d2a0:	sub	x4, x23, x22
   5d2a4:	add	x0, sp, #0x8
   5d2a8:	add	x1, sp, #0x4
   5d2ac:	mov	x2, sp
   5d2b0:	bl	58de8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x10c4>
   5d2b4:	ldr	w24, [sp]
   5d2b8:	cmp	w24, #0xa
   5d2bc:	b.hi	5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>  // b.pmore
   5d2c0:	mov	x23, x0
   5d2c4:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5d2c8:	cbnz	w0, 5d2e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c4>
   5d2cc:	ldr	w2, [sp, #4]
   5d2d0:	add	x1, sp, #0x8
   5d2d4:	mov	x0, x19
   5d2d8:	mov	w3, w24
   5d2dc:	bl	58bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9c>
   5d2e0:	bl	58d9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x1078>
   5d2e4:	cbz	w0, 5d308 <ZDICT_addEntropyTablesFromBuffer@@Base+0x55e4>
   5d2e8:	mov	x0, #0xffffffffffffffe2    	// #-30
   5d2ec:	add	sp, sp, #0x1d0
   5d2f0:	ldp	x20, x19, [sp, #64]
   5d2f4:	ldp	x22, x21, [sp, #48]
   5d2f8:	ldp	x24, x23, [sp, #32]
   5d2fc:	ldr	x28, [sp, #16]
   5d300:	ldp	x29, x30, [sp], #80
   5d304:	ret
   5d308:	mov	w8, #0x6870                	// #26736
   5d30c:	mov	w9, #0x1                   	// #1
   5d310:	add	x10, x21, x20
   5d314:	str	w9, [x19, x8]
   5d318:	add	x8, x10, x22
   5d31c:	add	x0, x8, x23
   5d320:	b	5d2ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x55c8>
   5d324:	stp	x29, x30, [sp, #-16]!
   5d328:	mov	x29, sp
   5d32c:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5d330:	ldp	x29, x30, [sp], #16
   5d334:	ret
   5d338:	cmn	x0, #0x78
   5d33c:	cset	w0, hi  // hi = pmore
   5d340:	ret
   5d344:	stp	x29, x30, [sp, #-16]!
   5d348:	mov	x29, sp
   5d34c:	bl	5d358 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5634>
   5d350:	ldp	x29, x30, [sp], #16
   5d354:	ret
   5d358:	stp	x29, x30, [sp, #-16]!
   5d35c:	mov	x29, sp
   5d360:	bl	607f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ad0>
   5d364:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
   5d368:	ldp	x29, x30, [sp], #16
   5d36c:	ret
   5d370:	sub	sp, sp, #0xa0
   5d374:	stp	x29, x30, [sp, #64]
   5d378:	add	x29, sp, #0x40
   5d37c:	cmp	x4, #0x4
   5d380:	stp	x28, x27, [sp, #80]
   5d384:	stp	x26, x25, [sp, #96]
   5d388:	stp	x24, x23, [sp, #112]
   5d38c:	stp	x22, x21, [sp, #128]
   5d390:	stp	x20, x19, [sp, #144]
   5d394:	stur	x0, [x29, #-8]
   5d398:	b.cs	5d3a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5680>  // b.hs, b.nlast
   5d39c:	mov	x0, #0xffffffffffffffb8    	// #-72
   5d3a0:	b	5d660 <ZDICT_addEntropyTablesFromBuffer@@Base+0x593c>
   5d3a4:	mov	x0, x3
   5d3a8:	mov	x19, x4
   5d3ac:	mov	x21, x3
   5d3b0:	mov	x23, x2
   5d3b4:	mov	x20, x1
   5d3b8:	bl	5d680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x595c>
   5d3bc:	and	w8, w0, #0xf
   5d3c0:	cmp	w8, #0xa
   5d3c4:	b.ls	5d3d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x56ac>  // b.plast
   5d3c8:	mov	x0, #0xffffffffffffffd4    	// #-44
   5d3cc:	b	5d660 <ZDICT_addEntropyTablesFromBuffer@@Base+0x593c>
   5d3d0:	mov	w10, #0x20                  	// #32
   5d3d4:	lsl	w26, w10, w8
   5d3d8:	add	w9, w8, #0x5
   5d3dc:	cmp	w26, #0x2
   5d3e0:	orr	w25, w26, #0x1
   5d3e4:	str	w9, [x23]
   5d3e8:	stp	x20, x19, [sp, #8]
   5d3ec:	b.cc	5d610 <ZDICT_addEntropyTablesFromBuffer@@Base+0x58ec>  // b.lo, b.ul, b.last
   5d3f0:	add	w28, w8, #0x6
   5d3f4:	ldr	w8, [x20]
   5d3f8:	add	x9, x21, x19
   5d3fc:	mov	w22, wzr
   5d400:	mov	w27, wzr
   5d404:	stur	w8, [x29, #-12]
   5d408:	sub	x8, x9, #0x7
   5d40c:	lsr	w19, w0, #4
   5d410:	sub	x20, x9, #0x5
   5d414:	stur	x8, [x29, #-24]
   5d418:	sub	x8, x9, #0x4
   5d41c:	mov	w24, #0x4                   	// #4
   5d420:	mov	x23, x21
   5d424:	stp	x21, x8, [sp, #24]
   5d428:	b	5d448 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5724>
   5d42c:	add	x23, x23, w8, sxtw
   5d430:	and	w24, w19, #0x7
   5d434:	mov	x0, x23
   5d438:	bl	5d680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x595c>
   5d43c:	cmp	w25, #0x1
   5d440:	lsr	w19, w0, w24
   5d444:	b.le	5d61c <ZDICT_addEntropyTablesFromBuffer@@Base+0x58f8>
   5d448:	ldur	w8, [x29, #-12]
   5d44c:	cmp	w27, w8
   5d450:	b.hi	5d61c <ZDICT_addEntropyTablesFromBuffer@@Base+0x58f8>  // b.pmore
   5d454:	cbz	w22, 5d55c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5838>
   5d458:	mvn	w8, w19
   5d45c:	tst	w8, #0xffff
   5d460:	mov	w22, w27
   5d464:	b.eq	5d4bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x5798>  // b.none
   5d468:	and	w8, w19, #0x3
   5d46c:	cmp	w8, #0x3
   5d470:	b.ne	5d48c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5768>  // b.any
   5d474:	ubfx	w8, w19, #2, #2
   5d478:	add	w22, w22, #0x3
   5d47c:	lsr	w19, w19, #2
   5d480:	cmp	w8, #0x3
   5d484:	add	w24, w24, #0x2
   5d488:	b.eq	5d474 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5750>  // b.none
   5d48c:	ldur	w9, [x29, #-12]
   5d490:	add	w8, w22, w8
   5d494:	add	w24, w24, #0x2
   5d498:	cmp	w8, w9
   5d49c:	b.ls	5d4dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x57b8>  // b.plast
   5d4a0:	mov	w8, wzr
   5d4a4:	b	5d558 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5834>
   5d4a8:	lsr	w19, w19, #16
   5d4ac:	add	w24, w24, #0x10
   5d4b0:	mvn	w8, w19
   5d4b4:	tst	w8, #0xffff
   5d4b8:	b.ne	5d468 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5744>  // b.any
   5d4bc:	cmp	x23, x20
   5d4c0:	add	w22, w22, #0x18
   5d4c4:	b.cs	5d4a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5784>  // b.hs, b.nlast
   5d4c8:	add	x23, x23, #0x2
   5d4cc:	mov	x0, x23
   5d4d0:	bl	5d680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x595c>
   5d4d4:	lsr	w19, w0, w24
   5d4d8:	b	5d4b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x578c>
   5d4dc:	cmp	w27, w8
   5d4e0:	b.cs	5d518 <ZDICT_addEntropyTablesFromBuffer@@Base+0x57f4>  // b.hs, b.nlast
   5d4e4:	mov	w21, w8
   5d4e8:	ldur	x8, [x29, #-8]
   5d4ec:	mov	w22, w27
   5d4f0:	mov	w1, wzr
   5d4f4:	add	x0, x8, w27, uxtw #1
   5d4f8:	sub	x8, x21, x22
   5d4fc:	lsl	x2, x8, #1
   5d500:	bl	46a0 <memset@plt>
   5d504:	add	x22, x22, #0x1
   5d508:	cmp	x21, x22
   5d50c:	b.ne	5d504 <ZDICT_addEntropyTablesFromBuffer@@Base+0x57e0>  // b.any
   5d510:	ldr	x21, [sp, #24]
   5d514:	mov	w27, w22
   5d518:	ldur	x8, [x29, #-24]
   5d51c:	cmp	x23, x8
   5d520:	asr	w8, w24, #3
   5d524:	b.ls	5d540 <ZDICT_addEntropyTablesFromBuffer@@Base+0x581c>  // b.plast
   5d528:	ldr	x10, [sp, #32]
   5d52c:	add	x9, x23, w8, sxtw
   5d530:	cmp	x9, x10
   5d534:	b.ls	5d540 <ZDICT_addEntropyTablesFromBuffer@@Base+0x581c>  // b.plast
   5d538:	lsr	w19, w19, #2
   5d53c:	b	5d554 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5830>
   5d540:	add	x23, x23, w8, sxtw
   5d544:	mov	x0, x23
   5d548:	and	w24, w24, #0x7
   5d54c:	bl	5d680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x595c>
   5d550:	lsr	w19, w0, w24
   5d554:	mov	w8, #0x1                   	// #1
   5d558:	cbz	w8, 5d65c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5938>
   5d55c:	lsl	w8, w26, #1
   5d560:	sub	w10, w8, #0x1
   5d564:	sub	w9, w26, #0x1
   5d568:	sub	w11, w10, w25
   5d56c:	and	w8, w19, w9
   5d570:	sxth	w9, w11
   5d574:	cmp	w8, w9
   5d578:	b.cs	5d584 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5860>  // b.hs, b.nlast
   5d57c:	sub	w9, w28, #0x1
   5d580:	b	5d59c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5878>
   5d584:	and	w8, w19, w10
   5d588:	sxth	w10, w8
   5d58c:	sub	w9, w10, w9
   5d590:	cmp	w10, w26
   5d594:	csel	w8, w8, w9, lt  // lt = tstop
   5d598:	mov	w9, w28
   5d59c:	add	w19, w9, w24
   5d5a0:	sub	w24, w8, #0x1
   5d5a4:	mov	w0, w24
   5d5a8:	bl	5d694 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5970>
   5d5ac:	ldur	x8, [x29, #-8]
   5d5b0:	sub	w25, w25, w0, sxth
   5d5b4:	tst	w24, #0xffff
   5d5b8:	cset	w22, eq  // eq = none
   5d5bc:	cmp	w25, w26
   5d5c0:	strh	w24, [x8, w27, uxtw #1]
   5d5c4:	b.ge	5d5d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x58b4>  // b.tcont
   5d5c8:	asr	w26, w26, #1
   5d5cc:	cmp	w25, w26
   5d5d0:	sub	w28, w28, #0x1
   5d5d4:	b.lt	5d5c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x58a4>  // b.tstop
   5d5d8:	ldur	x8, [x29, #-24]
   5d5dc:	add	w27, w27, #0x1
   5d5e0:	cmp	x23, x8
   5d5e4:	asr	w8, w19, #3
   5d5e8:	b.ls	5d42c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5708>  // b.plast
   5d5ec:	ldr	x10, [sp, #32]
   5d5f0:	add	x9, x23, w8, sxtw
   5d5f4:	cmp	x9, x10
   5d5f8:	b.ls	5d42c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5708>  // b.plast
   5d5fc:	ldr	x9, [sp, #32]
   5d600:	sub	w8, w9, w23
   5d604:	sub	w24, w19, w8, lsl #3
   5d608:	mov	x23, x9
   5d60c:	b	5d434 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5710>
   5d610:	mov	w27, wzr
   5d614:	mov	w24, #0x4                   	// #4
   5d618:	mov	x23, x21
   5d61c:	cmp	w25, #0x1
   5d620:	b.ne	5d654 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5930>  // b.any
   5d624:	ldr	x10, [sp, #8]
   5d628:	sub	w8, w27, #0x1
   5d62c:	add	w9, w24, #0x7
   5d630:	str	w8, [x10]
   5d634:	asr	w8, w9, #3
   5d638:	ldr	x9, [sp, #16]
   5d63c:	add	x8, x23, w8, sxtw
   5d640:	sub	x8, x8, x21
   5d644:	cmp	x8, x9
   5d648:	mov	x9, #0xffffffffffffffb8    	// #-72
   5d64c:	csel	x0, x9, x8, hi  // hi = pmore
   5d650:	b	5d660 <ZDICT_addEntropyTablesFromBuffer@@Base+0x593c>
   5d654:	mov	x0, #0xffffffffffffffff    	// #-1
   5d658:	b	5d660 <ZDICT_addEntropyTablesFromBuffer@@Base+0x593c>
   5d65c:	mov	x0, #0xffffffffffffffd0    	// #-48
   5d660:	ldp	x20, x19, [sp, #144]
   5d664:	ldp	x22, x21, [sp, #128]
   5d668:	ldp	x24, x23, [sp, #112]
   5d66c:	ldp	x26, x25, [sp, #96]
   5d670:	ldp	x28, x27, [sp, #80]
   5d674:	ldp	x29, x30, [sp, #64]
   5d678:	add	sp, sp, #0xa0
   5d67c:	ret
   5d680:	stp	x29, x30, [sp, #-16]!
   5d684:	mov	x29, sp
   5d688:	bl	6081c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8af8>
   5d68c:	ldp	x29, x30, [sp], #16
   5d690:	ret
   5d694:	sxth	w8, w0
   5d698:	cmp	w8, #0x0
   5d69c:	cneg	w0, w8, mi  // mi = first
   5d6a0:	ret
   5d6a4:	stp	x29, x30, [sp, #-16]!
   5d6a8:	cmp	w0, #0xf
   5d6ac:	mov	w8, #0xf                   	// #15
   5d6b0:	csel	w8, w0, w8, cc  // cc = lo, ul, last
   5d6b4:	mov	w9, #0x4                   	// #4
   5d6b8:	lsl	w8, w9, w8
   5d6bc:	add	w0, w8, #0x4
   5d6c0:	mov	x29, sp
   5d6c4:	bl	4640 <malloc@plt>
   5d6c8:	ldp	x29, x30, [sp], #16
   5d6cc:	ret
   5d6d0:	stp	x29, x30, [sp, #-16]!
   5d6d4:	mov	x29, sp
   5d6d8:	bl	4880 <free@plt>
   5d6dc:	ldp	x29, x30, [sp], #16
   5d6e0:	ret
   5d6e4:	stp	x29, x30, [sp, #-80]!
   5d6e8:	stp	x28, x25, [sp, #16]
   5d6ec:	stp	x24, x23, [sp, #32]
   5d6f0:	stp	x22, x21, [sp, #48]
   5d6f4:	stp	x20, x19, [sp, #64]
   5d6f8:	mov	x29, sp
   5d6fc:	sub	sp, sp, #0x200
   5d700:	cmp	w2, #0xff
   5d704:	b.ls	5d710 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59ec>  // b.plast
   5d708:	mov	x0, #0xffffffffffffffd2    	// #-46
   5d70c:	b	5d87c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b58>
   5d710:	mov	w19, w3
   5d714:	cmp	w3, #0xc
   5d718:	b.ls	5d724 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a00>  // b.plast
   5d71c:	mov	x0, #0xffffffffffffffd4    	// #-44
   5d720:	b	5d87c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b58>
   5d724:	mov	w9, #0x1                   	// #1
   5d728:	lsl	w21, w9, w19
   5d72c:	add	x8, x0, #0x4
   5d730:	add	w11, w2, #0x1
   5d734:	sub	w9, w21, #0x1
   5d738:	cbz	w11, 5d7a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a7c>
   5d73c:	sub	w10, w19, #0x1
   5d740:	mov	w15, #0x10000               	// #65536
   5d744:	lsl	w10, w15, w10
   5d748:	mov	x13, xzr
   5d74c:	mov	w14, w11
   5d750:	mov	w12, #0x1                   	// #1
   5d754:	asr	w15, w10, #16
   5d758:	mov	x16, sp
   5d75c:	mov	w10, w9
   5d760:	b	5d780 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a5c>
   5d764:	cmp	w15, w18
   5d768:	and	w17, w18, #0xffff
   5d76c:	csel	w12, w12, wzr, gt
   5d770:	strh	w17, [x16, x13, lsl #1]
   5d774:	add	x13, x13, #0x1
   5d778:	cmp	x14, x13
   5d77c:	b.eq	5d7a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a84>  // b.none
   5d780:	ldrsh	w18, [x1, x13, lsl #1]
   5d784:	cmn	w18, #0x1
   5d788:	b.ne	5d764 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a40>  // b.any
   5d78c:	add	x17, x8, w10, uxtw #2
   5d790:	sub	w10, w10, #0x1
   5d794:	strb	w13, [x17, #2]
   5d798:	mov	w17, #0x1                   	// #1
   5d79c:	b	5d770 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5a4c>
   5d7a0:	mov	w12, #0x1                   	// #1
   5d7a4:	mov	w10, w9
   5d7a8:	strh	w19, [x0]
   5d7ac:	strh	w12, [x0, #2]
   5d7b0:	cbz	w11, 5d818 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5af4>
   5d7b4:	lsr	w14, w21, #3
   5d7b8:	add	w14, w14, w21, lsr #1
   5d7bc:	mov	x13, xzr
   5d7c0:	mov	w12, wzr
   5d7c4:	add	w14, w14, #0x3
   5d7c8:	mov	w11, w11
   5d7cc:	b	5d7dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x5ab8>
   5d7d0:	add	x13, x13, #0x1
   5d7d4:	cmp	x13, x11
   5d7d8:	b.eq	5d81c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5af8>  // b.none
   5d7dc:	ldrsh	w15, [x1, x13, lsl #1]
   5d7e0:	cmp	w15, #0x1
   5d7e4:	b.lt	5d7d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5aac>  // b.tstop
   5d7e8:	ldrsh	w15, [x1, x13, lsl #1]
   5d7ec:	mov	w16, wzr
   5d7f0:	add	x17, x8, w12, uxtw #2
   5d7f4:	strb	w13, [x17, #2]
   5d7f8:	add	w12, w14, w12
   5d7fc:	and	w12, w12, w9
   5d800:	cmp	w12, w10
   5d804:	b.hi	5d7f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5ad4>  // b.pmore
   5d808:	add	w16, w16, #0x1
   5d80c:	cmp	w16, w15
   5d810:	b.lt	5d7f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5acc>  // b.tstop
   5d814:	b	5d7d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5aac>
   5d818:	mov	w12, wzr
   5d81c:	cbz	w12, 5d828 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b04>
   5d820:	mov	x0, #0xffffffffffffffff    	// #-1
   5d824:	b	5d87c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b58>
   5d828:	mov	x22, xzr
   5d82c:	mov	w23, w21
   5d830:	add	x24, x0, #0x7
   5d834:	mov	x25, sp
   5d838:	ldurb	w8, [x24, #-1]
   5d83c:	lsl	x8, x8, #1
   5d840:	ldrh	w20, [x25, x8]
   5d844:	add	w9, w20, #0x1
   5d848:	mov	w0, w20
   5d84c:	strh	w9, [x25, x8]
   5d850:	bl	5d898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b74>
   5d854:	sub	w8, w19, w0
   5d858:	strb	w8, [x24]
   5d85c:	lsl	w8, w20, w8
   5d860:	add	x22, x22, #0x1
   5d864:	sub	w8, w8, w21
   5d868:	cmp	x22, x23
   5d86c:	sturh	w8, [x24, #-3]
   5d870:	add	x24, x24, #0x4
   5d874:	b.cc	5d838 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b14>  // b.lo, b.ul, b.last
   5d878:	mov	x0, xzr
   5d87c:	add	sp, sp, #0x200
   5d880:	ldp	x20, x19, [sp, #64]
   5d884:	ldp	x22, x21, [sp, #48]
   5d888:	ldp	x24, x23, [sp, #32]
   5d88c:	ldp	x28, x25, [sp, #16]
   5d890:	ldp	x29, x30, [sp], #80
   5d894:	ret
   5d898:	clz	w8, w0
   5d89c:	eor	w0, w8, #0x1f
   5d8a0:	ret
   5d8a4:	str	wzr, [x0]
   5d8a8:	strh	wzr, [x0, #4]
   5d8ac:	strb	w1, [x0, #6]
   5d8b0:	strb	wzr, [x0, #7]
   5d8b4:	mov	x0, xzr
   5d8b8:	ret
   5d8bc:	cbz	w1, 5d8f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5bd4>
   5d8c0:	add	x8, x0, #0x4
   5d8c4:	mov	w9, #0x1                   	// #1
   5d8c8:	strh	w1, [x0]
   5d8cc:	strh	w9, [x0, #2]
   5d8d0:	sub	w10, w9, #0x1
   5d8d4:	lsr	w11, w9, w1
   5d8d8:	add	x12, x8, w10, uxtw #2
   5d8dc:	add	w9, w9, #0x1
   5d8e0:	strh	wzr, [x12]
   5d8e4:	strb	w10, [x12, #2]
   5d8e8:	strb	w1, [x12, #3]
   5d8ec:	cbz	w11, 5d8d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5bac>
   5d8f0:	mov	x0, xzr
   5d8f4:	ret
   5d8f8:	mov	x0, #0xffffffffffffffff    	// #-1
   5d8fc:	ret
   5d900:	sub	sp, sp, #0x80
   5d904:	stp	x29, x30, [sp, #64]
   5d908:	stp	x22, x21, [sp, #96]
   5d90c:	stp	x20, x19, [sp, #112]
   5d910:	ldrh	w8, [x4, #2]
   5d914:	add	x22, x0, x1
   5d918:	str	x23, [sp, #80]
   5d91c:	mov	x20, x4
   5d920:	mov	x19, x0
   5d924:	sub	x23, x22, #0x3
   5d928:	add	x0, sp, #0x20
   5d92c:	mov	x1, x2
   5d930:	mov	x2, x3
   5d934:	add	x29, sp, #0x40
   5d938:	cbz	w8, 5da4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5d28>
   5d93c:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5d940:	mov	x21, x0
   5d944:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5d948:	cbnz	w0, 5db9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e78>
   5d94c:	add	x0, sp, #0x10
   5d950:	add	x1, sp, #0x20
   5d954:	mov	x2, x20
   5d958:	bl	60824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b00>
   5d95c:	mov	x0, sp
   5d960:	add	x1, sp, #0x20
   5d964:	mov	x2, x20
   5d968:	bl	60824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b00>
   5d96c:	add	x0, sp, #0x20
   5d970:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5d974:	cmp	x23, x19
   5d978:	mov	x20, x19
   5d97c:	b.ls	5d9e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5cc0>  // b.plast
   5d980:	mov	x20, x19
   5d984:	cbnz	w0, 5d9e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5cc0>
   5d988:	mov	x20, x19
   5d98c:	add	x0, sp, #0x10
   5d990:	add	x1, sp, #0x20
   5d994:	bl	6086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b48>
   5d998:	strb	w0, [x20]
   5d99c:	mov	x0, sp
   5d9a0:	add	x1, sp, #0x20
   5d9a4:	bl	6086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b48>
   5d9a8:	strb	w0, [x20, #1]
   5d9ac:	add	x0, sp, #0x10
   5d9b0:	add	x1, sp, #0x20
   5d9b4:	bl	6086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b48>
   5d9b8:	strb	w0, [x20, #2]
   5d9bc:	mov	x0, sp
   5d9c0:	add	x1, sp, #0x20
   5d9c4:	bl	6086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b48>
   5d9c8:	strb	w0, [x20, #3]
   5d9cc:	add	x0, sp, #0x20
   5d9d0:	add	x20, x20, #0x4
   5d9d4:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5d9d8:	cmp	x20, x23
   5d9dc:	b.cs	5d9e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5cc0>  // b.hs, b.nlast
   5d9e0:	cbz	w0, 5d98c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5c68>
   5d9e4:	sub	x23, x22, #0x2
   5d9e8:	mov	w22, #0x3                   	// #3
   5d9ec:	cmp	x20, x23
   5d9f0:	b.hi	5db5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e38>  // b.pmore
   5d9f4:	add	x0, sp, #0x10
   5d9f8:	add	x1, sp, #0x20
   5d9fc:	mov	x21, x20
   5da00:	bl	6086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b48>
   5da04:	strb	w0, [x20], #1
   5da08:	add	x0, sp, #0x20
   5da0c:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5da10:	cmp	w0, #0x3
   5da14:	b.eq	5db64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e40>  // b.none
   5da18:	cmp	x20, x23
   5da1c:	b.hi	5db5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e38>  // b.pmore
   5da20:	mov	x0, sp
   5da24:	add	x1, sp, #0x20
   5da28:	bl	6086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b48>
   5da2c:	strb	w0, [x21, #1]
   5da30:	add	x0, sp, #0x20
   5da34:	add	x20, x21, #0x2
   5da38:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5da3c:	cmp	w0, #0x3
   5da40:	b.ne	5d9ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x5cc8>  // b.any
   5da44:	add	x0, sp, #0x10
   5da48:	b	5db70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e4c>
   5da4c:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5da50:	mov	x21, x0
   5da54:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5da58:	cbnz	w0, 5db9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e78>
   5da5c:	add	x0, sp, #0x10
   5da60:	add	x1, sp, #0x20
   5da64:	mov	x2, x20
   5da68:	bl	60824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b00>
   5da6c:	mov	x0, sp
   5da70:	add	x1, sp, #0x20
   5da74:	mov	x2, x20
   5da78:	bl	60824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b00>
   5da7c:	add	x0, sp, #0x20
   5da80:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5da84:	cmp	x23, x19
   5da88:	mov	x20, x19
   5da8c:	b.ls	5daf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5dd0>  // b.plast
   5da90:	mov	x20, x19
   5da94:	cbnz	w0, 5daf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5dd0>
   5da98:	mov	x20, x19
   5da9c:	add	x0, sp, #0x10
   5daa0:	add	x1, sp, #0x20
   5daa4:	bl	608bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b98>
   5daa8:	strb	w0, [x20]
   5daac:	mov	x0, sp
   5dab0:	add	x1, sp, #0x20
   5dab4:	bl	608bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b98>
   5dab8:	strb	w0, [x20, #1]
   5dabc:	add	x0, sp, #0x10
   5dac0:	add	x1, sp, #0x20
   5dac4:	bl	608bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b98>
   5dac8:	strb	w0, [x20, #2]
   5dacc:	mov	x0, sp
   5dad0:	add	x1, sp, #0x20
   5dad4:	bl	608bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b98>
   5dad8:	strb	w0, [x20, #3]
   5dadc:	add	x0, sp, #0x20
   5dae0:	add	x20, x20, #0x4
   5dae4:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5dae8:	cmp	x20, x23
   5daec:	b.cs	5daf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5dd0>  // b.hs, b.nlast
   5daf0:	cbz	w0, 5da9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5d78>
   5daf4:	sub	x23, x22, #0x2
   5daf8:	mov	w22, #0x3                   	// #3
   5dafc:	cmp	x20, x23
   5db00:	b.hi	5db5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e38>  // b.pmore
   5db04:	add	x0, sp, #0x10
   5db08:	add	x1, sp, #0x20
   5db0c:	mov	x21, x20
   5db10:	bl	608bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b98>
   5db14:	strb	w0, [x20], #1
   5db18:	add	x0, sp, #0x20
   5db1c:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5db20:	cmp	w0, #0x3
   5db24:	b.eq	5db7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e58>  // b.none
   5db28:	cmp	x20, x23
   5db2c:	b.hi	5db5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e38>  // b.pmore
   5db30:	mov	x0, sp
   5db34:	add	x1, sp, #0x20
   5db38:	bl	608bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b98>
   5db3c:	strb	w0, [x21, #1]
   5db40:	add	x0, sp, #0x20
   5db44:	add	x20, x21, #0x2
   5db48:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5db4c:	cmp	w0, #0x3
   5db50:	b.ne	5dafc <ZDICT_addEntropyTablesFromBuffer@@Base+0x5dd8>  // b.any
   5db54:	add	x0, sp, #0x10
   5db58:	b	5db88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e64>
   5db5c:	mov	x21, #0xffffffffffffffba    	// #-70
   5db60:	b	5db9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e78>
   5db64:	add	x20, x21, #0x1
   5db68:	mov	x0, sp
   5db6c:	mov	w22, #0x2                   	// #2
   5db70:	add	x1, sp, #0x20
   5db74:	bl	6086c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b48>
   5db78:	b	5db90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e6c>
   5db7c:	add	x20, x21, #0x1
   5db80:	mov	x0, sp
   5db84:	mov	w22, #0x2                   	// #2
   5db88:	add	x1, sp, #0x20
   5db8c:	bl	608bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b98>
   5db90:	add	x8, x21, x22
   5db94:	sub	x21, x8, x19
   5db98:	strb	w0, [x20]
   5db9c:	mov	x0, x21
   5dba0:	ldp	x20, x19, [sp, #112]
   5dba4:	ldp	x22, x21, [sp, #96]
   5dba8:	ldr	x23, [sp, #80]
   5dbac:	ldp	x29, x30, [sp, #64]
   5dbb0:	add	sp, sp, #0x80
   5dbb4:	ret
   5dbb8:	stp	x29, x30, [sp, #-80]!
   5dbbc:	str	x28, [sp, #16]
   5dbc0:	stp	x24, x23, [sp, #32]
   5dbc4:	stp	x22, x21, [sp, #48]
   5dbc8:	stp	x20, x19, [sp, #64]
   5dbcc:	mov	x29, sp
   5dbd0:	sub	sp, sp, #0x4, lsl #12
   5dbd4:	sub	sp, sp, #0x210
   5dbd8:	mov	w8, #0xff                  	// #255
   5dbdc:	cmp	x3, #0x2
   5dbe0:	str	w8, [x29, #24]
   5dbe4:	b.cs	5dbf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5ecc>  // b.hs, b.nlast
   5dbe8:	mov	x23, #0xffffffffffffffb8    	// #-72
   5dbec:	b	5dca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f7c>
   5dbf0:	mov	x19, x3
   5dbf4:	mov	x20, x2
   5dbf8:	mov	x22, x0
   5dbfc:	add	x0, sp, #0x4, lsl #12
   5dc00:	mov	x21, x1
   5dc04:	add	x0, x0, #0x10
   5dc08:	add	x1, x29, #0x18
   5dc0c:	add	x2, x29, #0x1c
   5dc10:	mov	x3, x20
   5dc14:	mov	x4, x19
   5dc18:	bl	5d370 <ZDICT_addEntropyTablesFromBuffer@@Base+0x564c>
   5dc1c:	mov	x23, x0
   5dc20:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5dc24:	cbz	w0, 5dc34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f10>
   5dc28:	mov	w8, wzr
   5dc2c:	cbnz	w8, 5dc5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f38>
   5dc30:	b	5dca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f7c>
   5dc34:	cmp	x23, x19
   5dc38:	b.cs	5dc50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f2c>  // b.hs, b.nlast
   5dc3c:	add	x20, x20, x23
   5dc40:	sub	x19, x19, x23
   5dc44:	mov	w8, #0x1                   	// #1
   5dc48:	cbnz	w8, 5dc5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f38>
   5dc4c:	b	5dca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f7c>
   5dc50:	mov	w8, wzr
   5dc54:	mov	x23, #0xffffffffffffffb8    	// #-72
   5dc58:	cbz	w8, 5dca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f7c>
   5dc5c:	ldp	w2, w3, [x29, #24]
   5dc60:	add	x1, sp, #0x4, lsl #12
   5dc64:	add	x0, sp, #0xc
   5dc68:	add	x1, x1, #0x10
   5dc6c:	bl	5d6e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59c0>
   5dc70:	mov	x24, x0
   5dc74:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5dc78:	cmp	w0, #0x0
   5dc7c:	csel	x23, x23, x24, eq  // eq = none
   5dc80:	cbnz	w0, 5dca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5f7c>
   5dc84:	add	x4, sp, #0xc
   5dc88:	mov	x0, x22
   5dc8c:	mov	x1, x21
   5dc90:	mov	x2, x20
   5dc94:	mov	x3, x19
   5dc98:	bl	5d900 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5bdc>
   5dc9c:	mov	x23, x0
   5dca0:	mov	x0, x23
   5dca4:	add	sp, sp, #0x4, lsl #12
   5dca8:	add	sp, sp, #0x210
   5dcac:	ldp	x20, x19, [sp, #64]
   5dcb0:	ldp	x22, x21, [sp, #48]
   5dcb4:	ldp	x24, x23, [sp, #32]
   5dcb8:	ldr	x28, [sp, #16]
   5dcbc:	ldp	x29, x30, [sp], #80
   5dcc0:	ret
   5dcc4:	sub	sp, sp, #0x180
   5dcc8:	stp	x29, x30, [sp, #336]
   5dccc:	add	x29, sp, #0x150
   5dcd0:	stp	x20, x19, [sp, #368]
   5dcd4:	mov	x5, x2
   5dcd8:	mov	x4, x1
   5dcdc:	mov	x20, x0
   5dce0:	add	x0, sp, #0x50
   5dce4:	add	x1, sp, #0xc
   5dce8:	add	x2, x29, #0x18
   5dcec:	add	x3, x29, #0x1c
   5dcf0:	str	x28, [sp, #352]
   5dcf4:	str	xzr, [x29, #24]
   5dcf8:	bl	5ddf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x60d4>
   5dcfc:	mov	x19, x0
   5dd00:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5dd04:	cbnz	w0, 5dde0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x60bc>
   5dd08:	ldr	w9, [x29, #28]
   5dd0c:	ldrh	w8, [x20]
   5dd10:	cmp	w9, w8
   5dd14:	b.ls	5dd20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5ffc>  // b.plast
   5dd18:	mov	x19, #0xffffffffffffffd4    	// #-44
   5dd1c:	b	5dde0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x60bc>
   5dd20:	add	w11, w9, #0x1
   5dd24:	cmp	w11, #0x2
   5dd28:	strh	w9, [x20]
   5dd2c:	b.cc	5dd6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6048>  // b.lo, b.ul, b.last
   5dd30:	mov	w12, w11
   5dd34:	add	x11, sp, #0xc
   5dd38:	mov	x8, xzr
   5dd3c:	mov	w10, wzr
   5dd40:	add	x11, x11, #0x4
   5dd44:	sub	x12, x12, #0x1
   5dd48:	lsl	x13, x8, #2
   5dd4c:	ldr	w14, [x11, x13]
   5dd50:	str	w10, [x11, x13]
   5dd54:	lsl	w14, w14, w8
   5dd58:	add	x8, x8, #0x1
   5dd5c:	add	w14, w14, w10
   5dd60:	cmp	x12, x8
   5dd64:	mov	w10, w14
   5dd68:	b.ne	5dd48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6024>  // b.any
   5dd6c:	ldr	w8, [x29, #24]
   5dd70:	cbz	w8, 5dde0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x60bc>
   5dd74:	ldr	w10, [x29, #24]
   5dd78:	mov	x8, xzr
   5dd7c:	add	w9, w9, #0x1
   5dd80:	add	x11, x20, #0x3
   5dd84:	add	x12, sp, #0x50
   5dd88:	mov	w13, #0x1                   	// #1
   5dd8c:	add	x14, sp, #0xc
   5dd90:	b	5dda4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6080>
   5dd94:	add	x8, x8, #0x1
   5dd98:	cmp	x8, x10
   5dd9c:	str	w16, [x14, x15, lsl #2]
   5dda0:	b.cs	5dde0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x60bc>  // b.hs, b.nlast
   5dda4:	ldrb	w15, [x12, x8]
   5dda8:	ldr	w0, [x14, x15, lsl #2]
   5ddac:	lsl	w16, w13, w15
   5ddb0:	add	w16, w0, w16, asr #1
   5ddb4:	cmp	w0, w16
   5ddb8:	b.cs	5dd94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6070>  // b.hs, b.nlast
   5ddbc:	mov	w1, w16
   5ddc0:	sub	w17, w9, w15
   5ddc4:	add	x18, x11, x0, lsl #1
   5ddc8:	sub	x0, x1, x0
   5ddcc:	sturb	w8, [x18, #-1]
   5ddd0:	strb	w17, [x18], #2
   5ddd4:	subs	x0, x0, #0x1
   5ddd8:	b.ne	5ddcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x60a8>  // b.any
   5dddc:	b	5dd94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6070>
   5dde0:	mov	x0, x19
   5dde4:	ldp	x20, x19, [sp, #368]
   5dde8:	ldr	x28, [sp, #352]
   5ddec:	ldp	x29, x30, [sp, #336]
   5ddf0:	add	sp, sp, #0x180
   5ddf4:	ret
   5ddf8:	stp	x29, x30, [sp, #-80]!
   5ddfc:	stp	x26, x25, [sp, #16]
   5de00:	stp	x24, x23, [sp, #32]
   5de04:	stp	x22, x21, [sp, #48]
   5de08:	stp	x20, x19, [sp, #64]
   5de0c:	mov	x29, sp
   5de10:	cbz	x5, 5df74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6250>
   5de14:	ldrsb	w8, [x4]
   5de18:	mov	x22, x3
   5de1c:	mov	x19, x2
   5de20:	mov	x20, x1
   5de24:	mov	x21, x0
   5de28:	and	x24, x8, #0xff
   5de2c:	tbnz	w8, #31, 5de64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6140>
   5de30:	cmp	x24, x5
   5de34:	b.cs	5df74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6250>  // b.hs, b.nlast
   5de38:	add	x2, x4, #0x1
   5de3c:	mov	w1, #0xff                  	// #255
   5de40:	mov	x0, x21
   5de44:	mov	x3, x24
   5de48:	bl	5dbb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5e94>
   5de4c:	mov	x23, x0
   5de50:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5de54:	mov	w8, w0
   5de58:	mov	x0, x23
   5de5c:	cbnz	w8, 5e000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62dc>
   5de60:	b	5dea8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6184>
   5de64:	cmp	w24, #0xf2
   5de68:	b.cc	5df0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x61e8>  // b.lo, b.ul, b.last
   5de6c:	adrp	x8, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5de70:	add	x8, x8, #0x808
   5de74:	add	x8, x8, x24, lsl #2
   5de78:	sub	x8, x8, #0x3c8
   5de7c:	ldr	w23, [x8]
   5de80:	movi	v0.16b, #0x1
   5de84:	stp	q0, q0, [x21, #224]
   5de88:	stp	q0, q0, [x21, #192]
   5de8c:	stp	q0, q0, [x21, #160]
   5de90:	stp	q0, q0, [x21, #128]
   5de94:	stp	q0, q0, [x21, #96]
   5de98:	stp	q0, q0, [x21, #64]
   5de9c:	stp	q0, q0, [x21, #32]
   5dea0:	stp	q0, q0, [x21]
   5dea4:	mov	x24, xzr
   5dea8:	movi	v0.2d, #0x0
   5deac:	str	wzr, [x20, #64]
   5deb0:	stp	q0, q0, [x20, #32]
   5deb4:	stp	q0, q0, [x20]
   5deb8:	cbz	x23, 5df7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6258>
   5debc:	mov	x8, xzr
   5dec0:	mov	w25, wzr
   5dec4:	mov	w9, #0x1                   	// #1
   5dec8:	mov	w10, #0x1                   	// #1
   5decc:	ldrb	w11, [x21, x8]
   5ded0:	cmp	x11, #0xf
   5ded4:	b.hi	5dffc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62d8>  // b.pmore
   5ded8:	lsl	x11, x11, #2
   5dedc:	ldr	w12, [x20, x11]
   5dee0:	add	w12, w12, #0x1
   5dee4:	str	w12, [x20, x11]
   5dee8:	ldrb	w11, [x21, x8]
   5deec:	mov	w8, w10
   5def0:	cmp	x23, x8
   5def4:	add	w10, w10, #0x1
   5def8:	lsl	w11, w9, w11
   5defc:	add	w25, w25, w11, asr #1
   5df00:	b.hi	5decc <ZDICT_addEntropyTablesFromBuffer@@Base+0x61a8>  // b.pmore
   5df04:	cbnz	w25, 5df84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6260>
   5df08:	b	5dffc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62d8>
   5df0c:	sub	x8, x24, #0x7e
   5df10:	lsr	x8, x8, #1
   5df14:	cmp	x8, x5
   5df18:	b.cs	5df74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6250>  // b.hs, b.nlast
   5df1c:	sub	x23, x24, #0x7f
   5df20:	cmp	x23, #0xff
   5df24:	b.hi	5dffc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62d8>  // b.pmore
   5df28:	cbz	x23, 5df6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6248>
   5df2c:	mov	x11, xzr
   5df30:	add	x9, x4, #0x1
   5df34:	mov	w10, #0x2                   	// #2
   5df38:	sub	w12, w10, #0x2
   5df3c:	lsr	x12, x12, #1
   5df40:	ldrb	w13, [x9, x12]
   5df44:	lsr	w13, w13, #4
   5df48:	strb	w13, [x21, x11]
   5df4c:	ldrb	w12, [x9, x12]
   5df50:	mov	w11, w10
   5df54:	sub	w13, w10, #0x1
   5df58:	cmp	x23, x11
   5df5c:	and	w12, w12, #0xf
   5df60:	add	w10, w10, #0x2
   5df64:	strb	w12, [x21, w13, uxtw]
   5df68:	b.hi	5df38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6214>  // b.pmore
   5df6c:	mov	x24, x8
   5df70:	b	5dea8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6184>
   5df74:	mov	x0, #0xffffffffffffffb8    	// #-72
   5df78:	b	5e000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62dc>
   5df7c:	mov	w25, wzr
   5df80:	cbz	w25, 5dffc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62d8>
   5df84:	mov	w0, w25
   5df88:	bl	5d898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b74>
   5df8c:	add	w8, w0, #0x1
   5df90:	cmp	w8, #0x10
   5df94:	b.hi	5dffc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62d8>  // b.pmore
   5df98:	mov	w26, #0x1                   	// #1
   5df9c:	str	w8, [x22]
   5dfa0:	lsl	w8, w26, w8
   5dfa4:	sub	w22, w8, w25
   5dfa8:	mov	w0, w22
   5dfac:	bl	5d898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b74>
   5dfb0:	lsl	w8, w26, w0
   5dfb4:	cmp	w8, w22
   5dfb8:	b.ne	5dffc <ZDICT_addEntropyTablesFromBuffer@@Base+0x62d8>  // b.any
   5dfbc:	add	w8, w0, #0x1
   5dfc0:	strb	w8, [x21, x23]
   5dfc4:	mov	w8, w8
   5dfc8:	lsl	x8, x8, #2
   5dfcc:	ldr	w9, [x20, x8]
   5dfd0:	mov	x0, #0xffffffffffffffec    	// #-20
   5dfd4:	add	w9, w9, #0x1
   5dfd8:	str	w9, [x20, x8]
   5dfdc:	ldr	w8, [x20, #4]
   5dfe0:	cmp	w8, #0x2
   5dfe4:	b.cc	5e000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62dc>  // b.lo, b.ul, b.last
   5dfe8:	tbnz	w8, #0, 5e000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62dc>
   5dfec:	add	w8, w23, #0x1
   5dff0:	add	x0, x24, #0x1
   5dff4:	str	w8, [x19]
   5dff8:	b	5e000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62dc>
   5dffc:	mov	x0, #0xffffffffffffffec    	// #-20
   5e000:	ldp	x20, x19, [sp, #64]
   5e004:	ldp	x22, x21, [sp, #48]
   5e008:	ldp	x24, x23, [sp, #32]
   5e00c:	ldp	x26, x25, [sp, #16]
   5e010:	ldp	x29, x30, [sp], #80
   5e014:	ret
   5e018:	stp	x29, x30, [sp, #-16]!
   5e01c:	mov	x29, sp
   5e020:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5e024:	ldp	x29, x30, [sp], #16
   5e028:	ret
   5e02c:	sub	sp, sp, #0x60
   5e030:	stp	x29, x30, [sp, #32]
   5e034:	stp	x22, x21, [sp, #64]
   5e038:	stp	x20, x19, [sp, #80]
   5e03c:	ldrh	w20, [x4]
   5e040:	mov	x19, x1
   5e044:	mov	x21, x0
   5e048:	mov	x0, sp
   5e04c:	mov	x1, x2
   5e050:	mov	x2, x3
   5e054:	str	x23, [sp, #48]
   5e058:	add	x29, sp, #0x20
   5e05c:	mov	x22, x4
   5e060:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5e064:	mov	x23, x0
   5e068:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5e06c:	cbnz	w0, 5e09c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6378>
   5e070:	add	x3, x22, #0x2
   5e074:	add	x2, x21, x19
   5e078:	mov	x1, sp
   5e07c:	mov	x0, x21
   5e080:	mov	w4, w20
   5e084:	bl	5e1e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64c0>
   5e088:	mov	x0, sp
   5e08c:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5e090:	cmp	w0, #0x0
   5e094:	mov	x8, #0xffffffffffffffec    	// #-20
   5e098:	csel	x23, x8, x19, eq  // eq = none
   5e09c:	mov	x0, x23
   5e0a0:	ldp	x20, x19, [sp, #80]
   5e0a4:	ldp	x22, x21, [sp, #64]
   5e0a8:	ldr	x23, [sp, #48]
   5e0ac:	ldp	x29, x30, [sp, #32]
   5e0b0:	add	sp, sp, #0x60
   5e0b4:	ret
   5e0b8:	stp	x29, x30, [sp, #-48]!
   5e0bc:	stp	x20, x19, [sp, #32]
   5e0c0:	mov	x20, x0
   5e0c4:	str	x21, [sp, #16]
   5e0c8:	mov	x29, sp
   5e0cc:	cbz	x2, 5e10c <ZDICT_addEntropyTablesFromBuffer@@Base+0x63e8>
   5e0d0:	mov	x19, x2
   5e0d4:	cmp	x2, #0x8
   5e0d8:	str	x1, [x20, #24]
   5e0dc:	b.cc	5e11c <ZDICT_addEntropyTablesFromBuffer@@Base+0x63f8>  // b.lo, b.ul, b.last
   5e0e0:	add	x21, x1, x19
   5e0e4:	sub	x0, x21, #0x8
   5e0e8:	str	x0, [x20, #16]
   5e0ec:	bl	609d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8cb0>
   5e0f0:	str	x0, [x20]
   5e0f4:	ldurb	w0, [x21, #-1]
   5e0f8:	cbz	w0, 5e1cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x64a8>
   5e0fc:	bl	5d898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b74>
   5e100:	mov	w8, #0x8                   	// #8
   5e104:	sub	w8, w8, w0
   5e108:	b	5e1c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64a0>
   5e10c:	movi	v0.2d, #0x0
   5e110:	stp	q0, q0, [x20]
   5e114:	mov	x19, #0xffffffffffffffb8    	// #-72
   5e118:	b	5e1d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64ac>
   5e11c:	str	x1, [x20, #16]
   5e120:	ldrb	w8, [x1]
   5e124:	sub	x9, x19, #0x2
   5e128:	cmp	x9, #0x5
   5e12c:	str	x8, [x20]
   5e130:	b.hi	5e1a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6484>  // b.pmore
   5e134:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5e138:	add	x10, x10, #0x66c
   5e13c:	adr	x11, 5e14c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6428>
   5e140:	ldrb	w12, [x10, x9]
   5e144:	add	x11, x11, x12, lsl #2
   5e148:	br	x11
   5e14c:	ldrb	w9, [x1, #6]
   5e150:	bfi	x8, x9, #48, #8
   5e154:	str	x8, [x20]
   5e158:	ldrb	w8, [x1, #5]
   5e15c:	ldr	x9, [x20]
   5e160:	add	x8, x9, x8, lsl #40
   5e164:	str	x8, [x20]
   5e168:	ldrb	w8, [x1, #4]
   5e16c:	ldr	x9, [x20]
   5e170:	add	x8, x9, x8, lsl #32
   5e174:	str	x8, [x20]
   5e178:	ldrb	w8, [x1, #3]
   5e17c:	ldr	x9, [x20]
   5e180:	add	x8, x9, x8, lsl #24
   5e184:	str	x8, [x20]
   5e188:	ldrb	w8, [x1, #2]
   5e18c:	ldr	x9, [x20]
   5e190:	add	x8, x9, x8, lsl #16
   5e194:	str	x8, [x20]
   5e198:	ldrb	w8, [x1, #1]
   5e19c:	ldr	x9, [x20]
   5e1a0:	add	x8, x9, x8, lsl #8
   5e1a4:	str	x8, [x20]
   5e1a8:	add	x8, x19, x1
   5e1ac:	ldurb	w0, [x8, #-1]
   5e1b0:	cbz	w0, 5e1cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x64a8>
   5e1b4:	bl	5d898 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b74>
   5e1b8:	add	w8, w0, w19, lsl #3
   5e1bc:	mov	w9, #0x48                  	// #72
   5e1c0:	sub	w8, w9, w8
   5e1c4:	str	w8, [x20, #8]
   5e1c8:	b	5e1d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64ac>
   5e1cc:	mov	x19, #0xffffffffffffffff    	// #-1
   5e1d0:	mov	x0, x19
   5e1d4:	ldp	x20, x19, [sp, #32]
   5e1d8:	ldr	x21, [sp, #16]
   5e1dc:	ldp	x29, x30, [sp], #48
   5e1e0:	ret
   5e1e4:	stp	x29, x30, [sp, #-80]!
   5e1e8:	stp	x24, x23, [sp, #32]
   5e1ec:	mov	x23, x0
   5e1f0:	mov	x0, x1
   5e1f4:	str	x25, [sp, #16]
   5e1f8:	stp	x22, x21, [sp, #48]
   5e1fc:	stp	x20, x19, [sp, #64]
   5e200:	mov	x29, sp
   5e204:	mov	w19, w4
   5e208:	mov	x20, x3
   5e20c:	mov	x21, x2
   5e210:	mov	x22, x1
   5e214:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e218:	sub	x25, x21, #0x4
   5e21c:	cmp	x25, x23
   5e220:	b.cc	5e298 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6574>  // b.lo, b.ul, b.last
   5e224:	cbnz	w0, 5e298 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6574>
   5e228:	mov	x0, x22
   5e22c:	mov	x1, x20
   5e230:	mov	w2, w19
   5e234:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e238:	strb	w0, [x23]
   5e23c:	mov	x0, x22
   5e240:	mov	x1, x20
   5e244:	mov	w2, w19
   5e248:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e24c:	strb	w0, [x23, #1]
   5e250:	mov	x0, x22
   5e254:	mov	x1, x20
   5e258:	mov	w2, w19
   5e25c:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e260:	strb	w0, [x23, #2]
   5e264:	mov	x0, x22
   5e268:	mov	x1, x20
   5e26c:	mov	w2, w19
   5e270:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e274:	strb	w0, [x23, #3]
   5e278:	mov	x0, x22
   5e27c:	add	x24, x23, #0x4
   5e280:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e284:	cmp	x24, x25
   5e288:	b.hi	5e29c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6578>  // b.pmore
   5e28c:	mov	x23, x24
   5e290:	cbz	w0, 5e228 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6504>
   5e294:	b	5e29c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6578>
   5e298:	mov	x24, x23
   5e29c:	mov	x0, x22
   5e2a0:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e2a4:	cmp	x24, x21
   5e2a8:	b.cs	5e2d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65b4>  // b.hs, b.nlast
   5e2ac:	cbnz	w0, 5e2d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65b4>
   5e2b0:	mov	x0, x22
   5e2b4:	mov	x1, x20
   5e2b8:	mov	w2, w19
   5e2bc:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e2c0:	strb	w0, [x24], #1
   5e2c4:	mov	x0, x22
   5e2c8:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e2cc:	cmp	x24, x21
   5e2d0:	b.cs	5e2d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65b4>  // b.hs, b.nlast
   5e2d4:	cbz	w0, 5e2b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x658c>
   5e2d8:	cmp	x24, x21
   5e2dc:	b.cs	5e2fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x65d8>  // b.hs, b.nlast
   5e2e0:	mov	x0, x22
   5e2e4:	mov	x1, x20
   5e2e8:	mov	w2, w19
   5e2ec:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e2f0:	strb	w0, [x24], #1
   5e2f4:	cmp	x21, x24
   5e2f8:	b.ne	5e2e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65bc>  // b.any
   5e2fc:	ldp	x20, x19, [sp, #64]
   5e300:	ldp	x22, x21, [sp, #48]
   5e304:	ldp	x24, x23, [sp, #32]
   5e308:	ldr	x25, [sp, #16]
   5e30c:	ldp	x29, x30, [sp], #80
   5e310:	ret
   5e314:	ldp	x8, x9, [x0, #16]
   5e318:	cmp	x8, x9
   5e31c:	b.eq	5e328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6604>  // b.none
   5e320:	mov	w0, wzr
   5e324:	ret
   5e328:	ldr	w8, [x0, #8]
   5e32c:	cmp	w8, #0x40
   5e330:	cset	w0, eq  // eq = none
   5e334:	ret
   5e338:	stp	x29, x30, [sp, #-64]!
   5e33c:	stp	x28, x23, [sp, #16]
   5e340:	stp	x22, x21, [sp, #32]
   5e344:	stp	x20, x19, [sp, #48]
   5e348:	mov	x29, sp
   5e34c:	sub	sp, sp, #0x2, lsl #12
   5e350:	sub	sp, sp, #0x10
   5e354:	mov	x22, x2
   5e358:	mov	x19, x1
   5e35c:	mov	x20, x0
   5e360:	add	x0, sp, #0xc
   5e364:	mov	w2, #0x2002                	// #8194
   5e368:	mov	w1, wzr
   5e36c:	mov	x21, x3
   5e370:	bl	46a0 <memset@plt>
   5e374:	mov	w8, #0xc                   	// #12
   5e378:	add	x0, sp, #0xc
   5e37c:	mov	x1, x22
   5e380:	mov	x2, x21
   5e384:	strh	w8, [sp, #12]
   5e388:	bl	5dcc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5fa0>
   5e38c:	mov	x23, x0
   5e390:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5e394:	cbnz	w0, 5e3c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66a0>
   5e398:	cmp	x23, x21
   5e39c:	b.cs	5e3c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x669c>  // b.hs, b.nlast
   5e3a0:	add	x2, x22, x23
   5e3a4:	sub	x3, x21, x23
   5e3a8:	add	x4, sp, #0xc
   5e3ac:	mov	x0, x20
   5e3b0:	mov	x1, x19
   5e3b4:	bl	5e02c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6308>
   5e3b8:	mov	x23, x0
   5e3bc:	b	5e3c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66a0>
   5e3c0:	mov	x23, #0xffffffffffffffb8    	// #-72
   5e3c4:	mov	x0, x23
   5e3c8:	add	sp, sp, #0x2, lsl #12
   5e3cc:	add	sp, sp, #0x10
   5e3d0:	ldp	x20, x19, [sp, #48]
   5e3d4:	ldp	x22, x21, [sp, #32]
   5e3d8:	ldp	x28, x23, [sp, #16]
   5e3dc:	ldp	x29, x30, [sp], #64
   5e3e0:	ret
   5e3e4:	sub	sp, sp, #0x120
   5e3e8:	cmp	x3, #0xa
   5e3ec:	stp	x29, x30, [sp, #192]
   5e3f0:	stp	x28, x27, [sp, #208]
   5e3f4:	stp	x26, x25, [sp, #224]
   5e3f8:	stp	x24, x23, [sp, #240]
   5e3fc:	stp	x22, x21, [sp, #256]
   5e400:	stp	x20, x19, [sp, #272]
   5e404:	add	x29, sp, #0xc0
   5e408:	b.cc	5e45c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6738>  // b.lo, b.ul, b.last
   5e40c:	mov	x20, x4
   5e410:	ldrh	w21, [x20], #2
   5e414:	mov	x22, x0
   5e418:	mov	x0, x2
   5e41c:	mov	x23, x3
   5e420:	mov	x27, x2
   5e424:	mov	x19, x1
   5e428:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   5e42c:	and	x26, x0, #0xffff
   5e430:	add	x0, x27, #0x2
   5e434:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   5e438:	and	x25, x0, #0xffff
   5e43c:	add	x0, x27, #0x4
   5e440:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   5e444:	and	x24, x0, #0xffff
   5e448:	add	x8, x26, x25
   5e44c:	add	x8, x8, x24
   5e450:	add	x8, x8, #0x6
   5e454:	subs	x23, x23, x8
   5e458:	b.cs	5e484 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6760>  // b.hs, b.nlast
   5e45c:	mov	x27, #0xffffffffffffffec    	// #-20
   5e460:	mov	x0, x27
   5e464:	ldp	x20, x19, [sp, #272]
   5e468:	ldp	x22, x21, [sp, #256]
   5e46c:	ldp	x24, x23, [sp, #240]
   5e470:	ldp	x26, x25, [sp, #224]
   5e474:	ldp	x28, x27, [sp, #208]
   5e478:	ldp	x29, x30, [sp, #192]
   5e47c:	add	sp, sp, #0x120
   5e480:	ret
   5e484:	add	x28, x27, #0x6
   5e488:	sub	x0, x29, #0x28
   5e48c:	mov	x1, x28
   5e490:	mov	x2, x26
   5e494:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5e498:	mov	x27, x0
   5e49c:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5e4a0:	cbnz	w0, 5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>
   5e4a4:	add	x26, x28, x26
   5e4a8:	sub	x0, x29, #0x48
   5e4ac:	mov	x1, x26
   5e4b0:	mov	x2, x25
   5e4b4:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5e4b8:	mov	x27, x0
   5e4bc:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5e4c0:	cbnz	w0, 5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>
   5e4c4:	add	x25, x26, x25
   5e4c8:	add	x0, sp, #0x58
   5e4cc:	mov	x1, x25
   5e4d0:	mov	x2, x24
   5e4d4:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5e4d8:	mov	x27, x0
   5e4dc:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5e4e0:	cbnz	w0, 5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>
   5e4e4:	add	x1, x25, x24
   5e4e8:	add	x0, sp, #0x38
   5e4ec:	mov	x2, x23
   5e4f0:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5e4f4:	mov	x27, x0
   5e4f8:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5e4fc:	cbnz	w0, 5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>
   5e500:	add	x8, x19, #0x3
   5e504:	lsr	x23, x8, #2
   5e508:	add	x8, x22, x23
   5e50c:	str	x8, [sp, #16]
   5e510:	add	x8, x8, x23
   5e514:	sub	x0, x29, #0x28
   5e518:	add	x28, x22, x19
   5e51c:	str	x8, [sp, #32]
   5e520:	add	x24, x8, x23
   5e524:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e528:	mov	w25, w0
   5e52c:	sub	x0, x29, #0x48
   5e530:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e534:	mov	w26, w0
   5e538:	add	x0, sp, #0x58
   5e53c:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e540:	mov	w27, w0
   5e544:	add	x0, sp, #0x38
   5e548:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e54c:	sub	x8, x28, #0x7
   5e550:	cmp	x24, x8
   5e554:	str	x24, [sp, #24]
   5e558:	str	x8, [sp, #48]
   5e55c:	b.cs	5e744 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a20>  // b.hs, b.nlast
   5e560:	orr	w8, w26, w25
   5e564:	orr	w8, w8, w27
   5e568:	orr	w8, w8, w0
   5e56c:	cbnz	w8, 5e744 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a20>
   5e570:	lsl	x27, x23, #1
   5e574:	add	x8, x27, x23
   5e578:	str	x28, [sp, #8]
   5e57c:	str	x8, [sp, #40]
   5e580:	ldr	x8, [sp, #40]
   5e584:	sub	x0, x29, #0x28
   5e588:	mov	x1, x20
   5e58c:	mov	w2, w21
   5e590:	add	x24, x22, x8
   5e594:	add	x25, x22, x27
   5e598:	add	x26, x22, x23
   5e59c:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e5a0:	strb	w0, [x22]
   5e5a4:	sub	x0, x29, #0x48
   5e5a8:	mov	x1, x20
   5e5ac:	mov	w2, w21
   5e5b0:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e5b4:	strb	w0, [x26]
   5e5b8:	add	x0, sp, #0x58
   5e5bc:	mov	x1, x20
   5e5c0:	mov	w2, w21
   5e5c4:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e5c8:	strb	w0, [x25]
   5e5cc:	add	x0, sp, #0x38
   5e5d0:	mov	x1, x20
   5e5d4:	mov	w2, w21
   5e5d8:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e5dc:	strb	w0, [x24]
   5e5e0:	sub	x0, x29, #0x28
   5e5e4:	mov	x1, x20
   5e5e8:	mov	w2, w21
   5e5ec:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e5f0:	strb	w0, [x22, #1]
   5e5f4:	sub	x0, x29, #0x48
   5e5f8:	mov	x1, x20
   5e5fc:	mov	w2, w21
   5e600:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e604:	strb	w0, [x26, #1]
   5e608:	add	x0, sp, #0x58
   5e60c:	mov	x1, x20
   5e610:	mov	w2, w21
   5e614:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e618:	strb	w0, [x25, #1]
   5e61c:	add	x0, sp, #0x38
   5e620:	mov	x1, x20
   5e624:	mov	w2, w21
   5e628:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e62c:	strb	w0, [x24, #1]
   5e630:	sub	x0, x29, #0x28
   5e634:	mov	x1, x20
   5e638:	mov	w2, w21
   5e63c:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e640:	strb	w0, [x22, #2]
   5e644:	sub	x0, x29, #0x48
   5e648:	mov	x1, x20
   5e64c:	mov	w2, w21
   5e650:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e654:	strb	w0, [x26, #2]
   5e658:	add	x0, sp, #0x58
   5e65c:	mov	x1, x20
   5e660:	mov	w2, w21
   5e664:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e668:	strb	w0, [x25, #2]
   5e66c:	add	x0, sp, #0x38
   5e670:	mov	x1, x20
   5e674:	mov	w2, w21
   5e678:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e67c:	strb	w0, [x24, #2]
   5e680:	sub	x0, x29, #0x28
   5e684:	mov	x1, x20
   5e688:	mov	w2, w21
   5e68c:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e690:	strb	w0, [x22, #3]
   5e694:	sub	x0, x29, #0x48
   5e698:	mov	x1, x20
   5e69c:	mov	w2, w21
   5e6a0:	add	x28, x22, #0x4
   5e6a4:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e6a8:	strb	w0, [x26, #3]
   5e6ac:	add	x0, sp, #0x58
   5e6b0:	mov	x1, x20
   5e6b4:	mov	w2, w21
   5e6b8:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e6bc:	strb	w0, [x25, #3]
   5e6c0:	add	x0, sp, #0x38
   5e6c4:	mov	x1, x20
   5e6c8:	mov	w2, w21
   5e6cc:	bl	5e8c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ba4>
   5e6d0:	strb	w0, [x24, #3]
   5e6d4:	sub	x0, x29, #0x28
   5e6d8:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e6dc:	mov	w22, w0
   5e6e0:	sub	x0, x29, #0x48
   5e6e4:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e6e8:	mov	w25, w0
   5e6ec:	add	x0, sp, #0x58
   5e6f0:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e6f4:	mov	w26, w0
   5e6f8:	add	x0, sp, #0x38
   5e6fc:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5e700:	ldr	x9, [sp, #48]
   5e704:	add	x8, x24, #0x4
   5e708:	cmp	x8, x9
   5e70c:	b.cs	5e724 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a00>  // b.hs, b.nlast
   5e710:	orr	w8, w25, w22
   5e714:	orr	w8, w8, w26
   5e718:	orr	w8, w8, w0
   5e71c:	mov	x22, x28
   5e720:	cbz	w8, 5e580 <ZDICT_addEntropyTablesFromBuffer@@Base+0x685c>
   5e724:	add	x8, x27, x23
   5e728:	add	x25, x28, x27
   5e72c:	add	x24, x28, x8
   5e730:	add	x26, x28, x23
   5e734:	mov	x22, x28
   5e738:	ldp	x28, x2, [sp, #8]
   5e73c:	ldr	x23, [sp, #24]
   5e740:	b	5e754 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6a30>
   5e744:	ldp	x2, x23, [sp, #16]
   5e748:	ldr	x25, [sp, #32]
   5e74c:	mov	x26, x2
   5e750:	mov	x24, x23
   5e754:	cmp	x22, x2
   5e758:	mov	x27, #0xffffffffffffffec    	// #-20
   5e75c:	b.hi	5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>  // b.pmore
   5e760:	ldr	x8, [sp, #32]
   5e764:	cmp	x26, x8
   5e768:	b.hi	5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>  // b.pmore
   5e76c:	cmp	x25, x23
   5e770:	b.hi	5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>  // b.pmore
   5e774:	sub	x1, x29, #0x28
   5e778:	mov	x0, x22
   5e77c:	mov	x3, x20
   5e780:	mov	w4, w21
   5e784:	bl	5e1e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64c0>
   5e788:	ldr	x2, [sp, #32]
   5e78c:	sub	x1, x29, #0x48
   5e790:	mov	x0, x26
   5e794:	mov	x3, x20
   5e798:	mov	w4, w21
   5e79c:	bl	5e1e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64c0>
   5e7a0:	add	x1, sp, #0x58
   5e7a4:	mov	x0, x25
   5e7a8:	mov	x2, x23
   5e7ac:	mov	x3, x20
   5e7b0:	mov	w4, w21
   5e7b4:	bl	5e1e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64c0>
   5e7b8:	add	x1, sp, #0x38
   5e7bc:	mov	x0, x24
   5e7c0:	mov	x2, x28
   5e7c4:	mov	x3, x20
   5e7c8:	mov	w4, w21
   5e7cc:	bl	5e1e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x64c0>
   5e7d0:	sub	x0, x29, #0x28
   5e7d4:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5e7d8:	mov	w20, w0
   5e7dc:	sub	x0, x29, #0x48
   5e7e0:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5e7e4:	and	w20, w0, w20
   5e7e8:	add	x0, sp, #0x58
   5e7ec:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5e7f0:	and	w20, w20, w0
   5e7f4:	add	x0, sp, #0x38
   5e7f8:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5e7fc:	tst	w20, w0
   5e800:	mov	x8, #0xffffffffffffffec    	// #-20
   5e804:	csel	x27, x8, x19, eq  // eq = none
   5e808:	b	5e460 <ZDICT_addEntropyTablesFromBuffer@@Base+0x673c>
   5e80c:	stp	x29, x30, [sp, #-16]!
   5e810:	mov	x29, sp
   5e814:	bl	609e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8cc4>
   5e818:	ldp	x29, x30, [sp], #16
   5e81c:	ret
   5e820:	stp	x29, x30, [sp, #-32]!
   5e824:	stp	x20, x19, [sp, #16]
   5e828:	ldr	w8, [x0, #8]
   5e82c:	mov	x29, sp
   5e830:	cmp	w8, #0x40
   5e834:	b.ls	5e840 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b1c>  // b.plast
   5e838:	mov	w20, #0x3                   	// #3
   5e83c:	b	5e8b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b94>
   5e840:	ldp	x9, x10, [x0, #16]
   5e844:	mov	x19, x0
   5e848:	add	x11, x10, #0x8
   5e84c:	cmp	x9, x11
   5e850:	b.cs	5e88c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b68>  // b.hs, b.nlast
   5e854:	cmp	x9, x10
   5e858:	b.eq	5e8ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b88>  // b.none
   5e85c:	lsr	x11, x8, #3
   5e860:	sub	x13, x9, x11
   5e864:	sub	w12, w9, w10
   5e868:	cmp	x13, x10
   5e86c:	csel	w10, w12, w11, cc  // cc = lo, ul, last
   5e870:	sub	x0, x9, x10
   5e874:	sub	w8, w8, w10, lsl #3
   5e878:	cset	w20, cc  // cc = lo, ul, last
   5e87c:	str	x0, [x19, #16]
   5e880:	str	w8, [x19, #8]
   5e884:	bl	609d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8cb0>
   5e888:	b	5e8a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b80>
   5e88c:	sub	x0, x9, x8, lsr #3
   5e890:	and	w8, w8, #0x7
   5e894:	str	x0, [x19, #16]
   5e898:	str	w8, [x19, #8]
   5e89c:	bl	609d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8cb0>
   5e8a0:	mov	w20, wzr
   5e8a4:	str	x0, [x19]
   5e8a8:	b	5e8b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6b94>
   5e8ac:	cmp	w8, #0x40
   5e8b0:	mov	w8, #0x1                   	// #1
   5e8b4:	cinc	w20, w8, cs  // cs = hs, nlast
   5e8b8:	mov	w0, w20
   5e8bc:	ldp	x20, x19, [sp, #16]
   5e8c0:	ldp	x29, x30, [sp], #32
   5e8c4:	ret
   5e8c8:	stp	x29, x30, [sp, #-32]!
   5e8cc:	stp	x20, x19, [sp, #16]
   5e8d0:	mov	x19, x1
   5e8d4:	mov	w1, w2
   5e8d8:	mov	x29, sp
   5e8dc:	mov	x20, x0
   5e8e0:	bl	609bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c98>
   5e8e4:	add	x8, x19, x0, lsl #1
   5e8e8:	ldrb	w1, [x8, #1]
   5e8ec:	ldrb	w19, [x8]
   5e8f0:	mov	x0, x20
   5e8f4:	bl	6096c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c48>
   5e8f8:	mov	w0, w19
   5e8fc:	ldp	x20, x19, [sp, #16]
   5e900:	ldp	x29, x30, [sp], #32
   5e904:	ret
   5e908:	stp	x29, x30, [sp, #-64]!
   5e90c:	stp	x28, x23, [sp, #16]
   5e910:	stp	x22, x21, [sp, #32]
   5e914:	stp	x20, x19, [sp, #48]
   5e918:	mov	x29, sp
   5e91c:	sub	sp, sp, #0x2, lsl #12
   5e920:	sub	sp, sp, #0x10
   5e924:	mov	x22, x2
   5e928:	mov	x19, x1
   5e92c:	mov	x20, x0
   5e930:	add	x0, sp, #0xc
   5e934:	mov	w2, #0x2002                	// #8194
   5e938:	mov	w1, wzr
   5e93c:	mov	x21, x3
   5e940:	bl	46a0 <memset@plt>
   5e944:	mov	w8, #0xc                   	// #12
   5e948:	add	x0, sp, #0xc
   5e94c:	mov	x1, x22
   5e950:	mov	x2, x21
   5e954:	strh	w8, [sp, #12]
   5e958:	bl	5dcc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5fa0>
   5e95c:	mov	x23, x0
   5e960:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5e964:	cbnz	w0, 5e994 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c70>
   5e968:	cmp	x23, x21
   5e96c:	b.cs	5e990 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c6c>  // b.hs, b.nlast
   5e970:	add	x2, x22, x23
   5e974:	sub	x3, x21, x23
   5e978:	add	x4, sp, #0xc
   5e97c:	mov	x0, x20
   5e980:	mov	x1, x19
   5e984:	bl	5e3e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x66c0>
   5e988:	mov	x23, x0
   5e98c:	b	5e994 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c70>
   5e990:	mov	x23, #0xffffffffffffffb8    	// #-72
   5e994:	mov	x0, x23
   5e998:	add	sp, sp, #0x2, lsl #12
   5e99c:	add	sp, sp, #0x10
   5e9a0:	ldp	x20, x19, [sp, #48]
   5e9a4:	ldp	x22, x21, [sp, #32]
   5e9a8:	ldp	x28, x23, [sp, #16]
   5e9ac:	ldp	x29, x30, [sp], #64
   5e9b0:	ret
   5e9b4:	stp	x29, x30, [sp, #-64]!
   5e9b8:	str	x28, [sp, #16]
   5e9bc:	stp	x22, x21, [sp, #32]
   5e9c0:	stp	x20, x19, [sp, #48]
   5e9c4:	mov	x29, sp
   5e9c8:	sub	sp, sp, #0x7f0
   5e9cc:	add	x22, sp, #0x450
   5e9d0:	movi	v0.2d, #0x0
   5e9d4:	mov	x19, x0
   5e9d8:	str	wzr, [sp, #1248]
   5e9dc:	str	xzr, [sp, #1168]
   5e9e0:	stp	q0, q0, [x22, #112]
   5e9e4:	stp	q0, q0, [x22, #80]
   5e9e8:	stp	q0, q0, [x22, #32]
   5e9ec:	stp	q0, q0, [x22]
   5e9f0:	ldr	w21, [x19], #4
   5e9f4:	cmp	w21, #0x10
   5e9f8:	b.ls	5ea04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ce0>  // b.plast
   5e9fc:	mov	x20, #0xffffffffffffffd4    	// #-44
   5ea00:	b	5ebc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e9c>
   5ea04:	mov	x5, x2
   5ea08:	mov	x4, x1
   5ea0c:	sub	x0, x29, #0x100
   5ea10:	add	x1, sp, #0x4a0
   5ea14:	add	x2, sp, #0x8
   5ea18:	add	x3, sp, #0xc
   5ea1c:	bl	5ddf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x60d4>
   5ea20:	mov	x20, x0
   5ea24:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5ea28:	cbnz	w0, 5ebc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e9c>
   5ea2c:	ldr	w9, [sp, #12]
   5ea30:	cmp	w9, w21
   5ea34:	b.hi	5e9fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6cd8>  // b.pmore
   5ea38:	mov	w10, wzr
   5ea3c:	orr	x11, x22, #0x4
   5ea40:	add	x8, sp, #0x4a0
   5ea44:	add	w12, w9, w10
   5ea48:	ldr	w12, [x8, w12, uxtw #2]
   5ea4c:	sub	w10, w10, #0x1
   5ea50:	cbz	w12, 5ea44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d20>
   5ea54:	add	w12, w9, w10
   5ea58:	add	w8, w12, #0x2
   5ea5c:	cmp	w8, #0x2
   5ea60:	mov	w3, wzr
   5ea64:	b.cc	5ea9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d78>  // b.lo, b.ul, b.last
   5ea68:	add	x14, sp, #0x4a0
   5ea6c:	add	x15, sp, #0x450
   5ea70:	mov	w16, w8
   5ea74:	mov	w13, wzr
   5ea78:	orr	x14, x14, #0x4
   5ea7c:	orr	x15, x15, #0x8
   5ea80:	sub	x16, x16, #0x1
   5ea84:	ldr	w17, [x14], #4
   5ea88:	subs	x16, x16, #0x1
   5ea8c:	str	w13, [x15], #4
   5ea90:	add	w3, w17, w13
   5ea94:	mov	w13, w3
   5ea98:	b.ne	5ea84 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d60>  // b.any
   5ea9c:	ldr	w13, [sp, #8]
   5eaa0:	str	w3, [sp, #1108]
   5eaa4:	cbz	w13, 5eae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6dc0>
   5eaa8:	ldr	w14, [sp, #8]
   5eaac:	mov	x13, xzr
   5eab0:	sub	x15, x29, #0x100
   5eab4:	add	x16, sp, #0x4f0
   5eab8:	ldrb	w17, [x15, x13]
   5eabc:	lsl	x18, x17, #2
   5eac0:	ldr	w0, [x11, x18]
   5eac4:	add	w1, w0, #0x1
   5eac8:	add	x0, x16, x0, lsl #1
   5eacc:	strb	w13, [x0]
   5ead0:	add	x13, x13, #0x1
   5ead4:	cmp	x13, x14
   5ead8:	str	w1, [x11, x18]
   5eadc:	strb	w17, [x0, #1]
   5eae0:	b.cc	5eab8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6d94>  // b.lo, b.ul, b.last
   5eae4:	add	w6, w12, #0x1
   5eae8:	cmp	w8, #0x2
   5eaec:	str	wzr, [sp, #1108]
   5eaf0:	b.cc	5eb30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e0c>  // b.lo, b.ul, b.last
   5eaf4:	add	x12, sp, #0x4a0
   5eaf8:	add	x13, sp, #0x10
   5eafc:	mov	w14, w8
   5eb00:	mov	w15, wzr
   5eb04:	sub	w11, w21, w9
   5eb08:	orr	x12, x12, #0x4
   5eb0c:	add	x13, x13, #0x4
   5eb10:	sub	x14, x14, #0x1
   5eb14:	ldr	w16, [x12], #4
   5eb18:	str	w15, [x13], #4
   5eb1c:	subs	x14, x14, #0x1
   5eb20:	lsl	w16, w16, w11
   5eb24:	add	w15, w16, w15
   5eb28:	add	w11, w11, #0x1
   5eb2c:	b.ne	5eb14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6df0>  // b.any
   5eb30:	add	w11, w21, w10
   5eb34:	neg	w12, w10
   5eb38:	add	w11, w11, #0x1
   5eb3c:	cmp	w12, w11
   5eb40:	add	w7, w9, #0x1
   5eb44:	b.cs	5eba8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e84>  // b.hs, b.nlast
   5eb48:	neg	w13, w10
   5eb4c:	mov	w9, w12
   5eb50:	add	x10, sp, #0x10
   5eb54:	mov	w12, #0x44                  	// #68
   5eb58:	mov	w14, w8
   5eb5c:	add	x10, x10, #0x4
   5eb60:	umull	x12, w13, w12
   5eb64:	sub	x13, x14, #0x1
   5eb68:	b	5eb7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e58>
   5eb6c:	add	x9, x9, #0x1
   5eb70:	cmp	w11, w9
   5eb74:	add	x12, x12, #0x44
   5eb78:	b.eq	5eba8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e84>  // b.none
   5eb7c:	cmp	w8, #0x2
   5eb80:	b.cc	5eb6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e48>  // b.lo, b.ul, b.last
   5eb84:	mov	x14, x13
   5eb88:	mov	x15, x10
   5eb8c:	ldr	w16, [x15]
   5eb90:	subs	x14, x14, #0x1
   5eb94:	lsr	w16, w16, w9
   5eb98:	str	w16, [x15, x12]
   5eb9c:	add	x15, x15, #0x4
   5eba0:	b.ne	5eb8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e68>  // b.any
   5eba4:	b	5eb6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6e48>
   5eba8:	add	x2, sp, #0x4f0
   5ebac:	add	x4, sp, #0x450
   5ebb0:	add	x5, sp, #0x10
   5ebb4:	mov	x0, x19
   5ebb8:	mov	w1, w21
   5ebbc:	bl	5ebdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6eb8>
   5ebc0:	mov	x0, x20
   5ebc4:	add	sp, sp, #0x7f0
   5ebc8:	ldp	x20, x19, [sp, #48]
   5ebcc:	ldp	x22, x21, [sp, #32]
   5ebd0:	ldr	x28, [sp, #16]
   5ebd4:	ldp	x29, x30, [sp], #64
   5ebd8:	ret
   5ebdc:	sub	sp, sp, #0xf0
   5ebe0:	stp	x29, x30, [sp, #144]
   5ebe4:	stp	x28, x27, [sp, #160]
   5ebe8:	stp	x26, x25, [sp, #176]
   5ebec:	stp	x24, x23, [sp, #192]
   5ebf0:	stp	x22, x21, [sp, #208]
   5ebf4:	stp	x20, x19, [sp, #224]
   5ebf8:	stp	x4, x5, [sp, #24]
   5ebfc:	str	w1, [sp, #56]
   5ec00:	str	x0, [sp, #48]
   5ec04:	ldp	q0, q2, [x5]
   5ec08:	add	x29, sp, #0x90
   5ec0c:	stp	q0, q2, [sp, #64]
   5ec10:	ldr	w8, [x5, #64]
   5ec14:	ldp	q1, q0, [x5, #32]
   5ec18:	str	w3, [sp, #44]
   5ec1c:	str	w8, [sp, #128]
   5ec20:	stp	q1, q0, [sp, #96]
   5ec24:	cbz	w3, 5ed28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7004>
   5ec28:	ldr	w8, [sp, #56]
   5ec2c:	mov	w19, w7
   5ec30:	mov	x23, x2
   5ec34:	mov	x27, xzr
   5ec38:	sub	w8, w7, w8
   5ec3c:	str	w8, [sp, #20]
   5ec40:	ldr	w8, [sp, #44]
   5ec44:	sub	w21, w7, w6
   5ec48:	add	x22, sp, #0x40
   5ec4c:	mov	w11, #0x1                   	// #1
   5ec50:	mov	w28, w8
   5ec54:	b	5ecbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f98>
   5ec58:	ldr	w9, [sp, #20]
   5ec5c:	ldr	x10, [sp, #48]
   5ec60:	mov	w11, #0x44                  	// #68
   5ec64:	mov	w2, w26
   5ec68:	add	w9, w26, w9
   5ec6c:	cmp	w9, #0x1
   5ec70:	csinc	w4, w9, wzr, gt
   5ec74:	ldr	x9, [sp, #24]
   5ec78:	add	x0, x10, x20, lsl #2
   5ec7c:	ldr	x10, [sp, #32]
   5ec80:	mov	w7, w19
   5ec84:	ldr	w9, [x9, w4, uxtw #2]
   5ec88:	strh	w1, [sp]
   5ec8c:	umaddl	x3, w26, w11, x10
   5ec90:	ldr	w10, [sp, #44]
   5ec94:	add	x5, x23, x9, lsl #1
   5ec98:	mov	w1, w8
   5ec9c:	sub	w6, w10, w9
   5eca0:	bl	609f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ccc>
   5eca4:	mov	w11, #0x1                   	// #1
   5eca8:	add	x27, x27, #0x1
   5ecac:	add	w8, w24, w20
   5ecb0:	cmp	x27, x28
   5ecb4:	str	w8, [x22, x25, lsl #2]
   5ecb8:	b.eq	5ed28 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7004>  // b.none
   5ecbc:	add	x8, x23, x27, lsl #1
   5ecc0:	ldrb	w25, [x8, #1]
   5ecc4:	ldrb	w1, [x8]
   5ecc8:	ldr	w8, [sp, #56]
   5eccc:	ldr	w20, [x22, x25, lsl #2]
   5ecd0:	sub	w26, w19, w25
   5ecd4:	sub	w8, w8, w26
   5ecd8:	cmp	w8, w21
   5ecdc:	lsl	w24, w11, w8
   5ece0:	b.cs	5ec58 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f34>  // b.hs, b.nlast
   5ece4:	add	x0, sp, #0x3c
   5ece8:	bl	60b30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e0c>
   5ecec:	add	w9, w24, w20
   5ecf0:	mov	w11, #0x1                   	// #1
   5ecf4:	cmp	w20, w9
   5ecf8:	strb	w26, [sp, #62]
   5ecfc:	strb	w11, [sp, #63]
   5ed00:	b.cs	5eca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f84>  // b.hs, b.nlast
   5ed04:	mov	w10, w9
   5ed08:	ldr	x9, [sp, #48]
   5ed0c:	ldr	w8, [sp, #60]
   5ed10:	sub	x10, x10, x20
   5ed14:	add	x9, x9, x20, lsl #2
   5ed18:	subs	x10, x10, #0x1
   5ed1c:	str	w8, [x9], #4
   5ed20:	b.ne	5ed18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ff4>  // b.any
   5ed24:	b	5eca8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6f84>
   5ed28:	ldp	x20, x19, [sp, #224]
   5ed2c:	ldp	x22, x21, [sp, #208]
   5ed30:	ldp	x24, x23, [sp, #192]
   5ed34:	ldp	x26, x25, [sp, #176]
   5ed38:	ldp	x28, x27, [sp, #160]
   5ed3c:	ldp	x29, x30, [sp, #144]
   5ed40:	add	sp, sp, #0xf0
   5ed44:	ret
   5ed48:	sub	sp, sp, #0x60
   5ed4c:	stp	x29, x30, [sp, #32]
   5ed50:	stp	x22, x21, [sp, #64]
   5ed54:	stp	x20, x19, [sp, #80]
   5ed58:	ldr	w20, [x4]
   5ed5c:	mov	x19, x1
   5ed60:	mov	x21, x0
   5ed64:	mov	x0, sp
   5ed68:	mov	x1, x2
   5ed6c:	mov	x2, x3
   5ed70:	str	x23, [sp, #48]
   5ed74:	add	x29, sp, #0x20
   5ed78:	mov	x22, x4
   5ed7c:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5ed80:	mov	x23, x0
   5ed84:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5ed88:	cbnz	w0, 5edb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7094>
   5ed8c:	add	x3, x22, #0x4
   5ed90:	add	x2, x21, x19
   5ed94:	mov	x1, sp
   5ed98:	mov	x0, x21
   5ed9c:	mov	w4, w20
   5eda0:	bl	5edd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70b0>
   5eda4:	mov	x0, sp
   5eda8:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5edac:	cmp	w0, #0x0
   5edb0:	mov	x8, #0xffffffffffffffec    	// #-20
   5edb4:	csel	x23, x8, x19, eq  // eq = none
   5edb8:	mov	x0, x23
   5edbc:	ldp	x20, x19, [sp, #80]
   5edc0:	ldp	x22, x21, [sp, #64]
   5edc4:	ldr	x23, [sp, #48]
   5edc8:	ldp	x29, x30, [sp, #32]
   5edcc:	add	sp, sp, #0x60
   5edd0:	ret
   5edd4:	stp	x29, x30, [sp, #-64]!
   5edd8:	stp	x24, x23, [sp, #16]
   5eddc:	mov	x23, x0
   5ede0:	mov	x0, x1
   5ede4:	stp	x22, x21, [sp, #32]
   5ede8:	stp	x20, x19, [sp, #48]
   5edec:	mov	x29, sp
   5edf0:	mov	w19, w4
   5edf4:	mov	x20, x3
   5edf8:	mov	x22, x2
   5edfc:	mov	x21, x1
   5ee00:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5ee04:	sub	x24, x22, #0x7
   5ee08:	cmp	x24, x23
   5ee0c:	b.ls	5ee88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7164>  // b.plast
   5ee10:	cbnz	w0, 5ee88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7164>
   5ee14:	mov	x0, x23
   5ee18:	mov	x1, x21
   5ee1c:	mov	x2, x20
   5ee20:	mov	w3, w19
   5ee24:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5ee28:	add	x23, x23, w0, uxtw
   5ee2c:	mov	x0, x23
   5ee30:	mov	x1, x21
   5ee34:	mov	x2, x20
   5ee38:	mov	w3, w19
   5ee3c:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5ee40:	add	x23, x23, w0, uxtw
   5ee44:	mov	x0, x23
   5ee48:	mov	x1, x21
   5ee4c:	mov	x2, x20
   5ee50:	mov	w3, w19
   5ee54:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5ee58:	add	x23, x23, w0, uxtw
   5ee5c:	mov	x0, x23
   5ee60:	mov	x1, x21
   5ee64:	mov	x2, x20
   5ee68:	mov	w3, w19
   5ee6c:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5ee70:	add	x23, x23, w0, uxtw
   5ee74:	mov	x0, x21
   5ee78:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5ee7c:	cmp	x23, x24
   5ee80:	b.cs	5ee88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7164>  // b.hs, b.nlast
   5ee84:	cbz	w0, 5ee14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70f0>
   5ee88:	mov	x0, x21
   5ee8c:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5ee90:	sub	x24, x22, #0x2
   5ee94:	cmp	x23, x24
   5ee98:	b.hi	5eee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71c4>  // b.pmore
   5ee9c:	cbnz	w0, 5eee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71c4>
   5eea0:	mov	x0, x23
   5eea4:	mov	x1, x21
   5eea8:	mov	x2, x20
   5eeac:	mov	w3, w19
   5eeb0:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5eeb4:	add	x23, x23, w0, uxtw
   5eeb8:	mov	x0, x21
   5eebc:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5eec0:	cmp	x23, x24
   5eec4:	b.hi	5eee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71c4>  // b.pmore
   5eec8:	cbz	w0, 5eea0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x717c>
   5eecc:	b	5eee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71c4>
   5eed0:	mov	x0, x23
   5eed4:	mov	x1, x21
   5eed8:	mov	x2, x20
   5eedc:	mov	w3, w19
   5eee0:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5eee4:	add	x23, x23, w0, uxtw
   5eee8:	cmp	x23, x24
   5eeec:	b.ls	5eed0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x71ac>  // b.plast
   5eef0:	cmp	x23, x22
   5eef4:	b.cs	5ef0c <ZDICT_addEntropyTablesFromBuffer@@Base+0x71e8>  // b.hs, b.nlast
   5eef8:	mov	x0, x23
   5eefc:	mov	x1, x21
   5ef00:	mov	x2, x20
   5ef04:	mov	w3, w19
   5ef08:	bl	60b4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e28>
   5ef0c:	ldp	x20, x19, [sp, #48]
   5ef10:	ldp	x22, x21, [sp, #32]
   5ef14:	ldp	x24, x23, [sp, #16]
   5ef18:	ldp	x29, x30, [sp], #64
   5ef1c:	ret
   5ef20:	stp	x29, x30, [sp, #-64]!
   5ef24:	stp	x28, x23, [sp, #16]
   5ef28:	stp	x22, x21, [sp, #32]
   5ef2c:	stp	x20, x19, [sp, #48]
   5ef30:	mov	x29, sp
   5ef34:	sub	sp, sp, #0x4, lsl #12
   5ef38:	sub	sp, sp, #0x10
   5ef3c:	mov	x22, x2
   5ef40:	mov	x19, x1
   5ef44:	mov	x20, x0
   5ef48:	add	x0, sp, #0xc
   5ef4c:	mov	w2, #0x4004                	// #16388
   5ef50:	mov	w1, wzr
   5ef54:	mov	x21, x3
   5ef58:	bl	46a0 <memset@plt>
   5ef5c:	mov	w8, #0xc                   	// #12
   5ef60:	add	x0, sp, #0xc
   5ef64:	mov	x1, x22
   5ef68:	mov	x2, x21
   5ef6c:	str	w8, [sp, #12]
   5ef70:	bl	5e9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c90>
   5ef74:	mov	x23, x0
   5ef78:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5ef7c:	cbnz	w0, 5efac <ZDICT_addEntropyTablesFromBuffer@@Base+0x7288>
   5ef80:	cmp	x23, x21
   5ef84:	b.cs	5efa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7284>  // b.hs, b.nlast
   5ef88:	add	x2, x22, x23
   5ef8c:	sub	x3, x21, x23
   5ef90:	add	x4, sp, #0xc
   5ef94:	mov	x0, x20
   5ef98:	mov	x1, x19
   5ef9c:	bl	5ed48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7024>
   5efa0:	mov	x23, x0
   5efa4:	b	5efac <ZDICT_addEntropyTablesFromBuffer@@Base+0x7288>
   5efa8:	mov	x23, #0xffffffffffffffb8    	// #-72
   5efac:	mov	x0, x23
   5efb0:	add	sp, sp, #0x4, lsl #12
   5efb4:	add	sp, sp, #0x10
   5efb8:	ldp	x20, x19, [sp, #48]
   5efbc:	ldp	x22, x21, [sp, #32]
   5efc0:	ldp	x28, x23, [sp, #16]
   5efc4:	ldp	x29, x30, [sp], #64
   5efc8:	ret
   5efcc:	sub	sp, sp, #0x110
   5efd0:	cmp	x3, #0xa
   5efd4:	stp	x29, x30, [sp, #176]
   5efd8:	stp	x28, x27, [sp, #192]
   5efdc:	stp	x26, x25, [sp, #208]
   5efe0:	stp	x24, x23, [sp, #224]
   5efe4:	stp	x22, x21, [sp, #240]
   5efe8:	stp	x20, x19, [sp, #256]
   5efec:	add	x29, sp, #0xb0
   5eff0:	b.cc	5f044 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7320>  // b.lo, b.ul, b.last
   5eff4:	mov	x20, x4
   5eff8:	ldr	w21, [x20], #4
   5effc:	mov	x24, x0
   5f000:	mov	x0, x2
   5f004:	mov	x22, x3
   5f008:	mov	x23, x2
   5f00c:	mov	x19, x1
   5f010:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   5f014:	and	x27, x0, #0xffff
   5f018:	add	x0, x23, #0x2
   5f01c:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   5f020:	and	x26, x0, #0xffff
   5f024:	add	x0, x23, #0x4
   5f028:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   5f02c:	and	x25, x0, #0xffff
   5f030:	add	x8, x27, x26
   5f034:	add	x8, x8, x25
   5f038:	add	x8, x8, #0x6
   5f03c:	subs	x22, x22, x8
   5f040:	b.cs	5f06c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7348>  // b.hs, b.nlast
   5f044:	mov	x23, #0xffffffffffffffec    	// #-20
   5f048:	mov	x0, x23
   5f04c:	ldp	x20, x19, [sp, #256]
   5f050:	ldp	x22, x21, [sp, #240]
   5f054:	ldp	x24, x23, [sp, #224]
   5f058:	ldp	x26, x25, [sp, #208]
   5f05c:	ldp	x28, x27, [sp, #192]
   5f060:	ldp	x29, x30, [sp, #176]
   5f064:	add	sp, sp, #0x110
   5f068:	ret
   5f06c:	add	x28, x23, #0x6
   5f070:	sub	x0, x29, #0x28
   5f074:	mov	x1, x28
   5f078:	mov	x2, x27
   5f07c:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5f080:	mov	x23, x0
   5f084:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5f088:	cbnz	w0, 5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>
   5f08c:	add	x27, x28, x27
   5f090:	sub	x0, x29, #0x48
   5f094:	mov	x1, x27
   5f098:	mov	x2, x26
   5f09c:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5f0a0:	mov	x23, x0
   5f0a4:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5f0a8:	cbnz	w0, 5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>
   5f0ac:	add	x26, x27, x26
   5f0b0:	add	x0, sp, #0x48
   5f0b4:	mov	x1, x26
   5f0b8:	mov	x2, x25
   5f0bc:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5f0c0:	mov	x23, x0
   5f0c4:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5f0c8:	cbnz	w0, 5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>
   5f0cc:	add	x1, x26, x25
   5f0d0:	add	x0, sp, #0x28
   5f0d4:	mov	x2, x22
   5f0d8:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   5f0dc:	mov	x23, x0
   5f0e0:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5f0e4:	cbnz	w0, 5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>
   5f0e8:	add	x8, x19, #0x3
   5f0ec:	lsr	x8, x8, #2
   5f0f0:	add	x9, x24, x8
   5f0f4:	add	x28, x9, x8
   5f0f8:	sub	x0, x29, #0x28
   5f0fc:	add	x22, x24, x19
   5f100:	str	x9, [sp, #24]
   5f104:	add	x27, x28, x8
   5f108:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f10c:	mov	w23, w0
   5f110:	sub	x0, x29, #0x48
   5f114:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f118:	mov	w26, w0
   5f11c:	add	x0, sp, #0x48
   5f120:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f124:	mov	w25, w0
   5f128:	add	x0, sp, #0x28
   5f12c:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f130:	sub	x8, x22, #0x7
   5f134:	cmp	x27, x8
   5f138:	stp	x22, x27, [sp]
   5f13c:	str	x8, [sp, #32]
   5f140:	str	x28, [sp, #16]
   5f144:	b.cs	5f328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7604>  // b.hs, b.nlast
   5f148:	orr	w8, w26, w23
   5f14c:	orr	w8, w8, w25
   5f150:	orr	w8, w8, w0
   5f154:	cbnz	w8, 5f328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7604>
   5f158:	ldr	x26, [sp, #24]
   5f15c:	sub	x1, x29, #0x28
   5f160:	mov	x0, x24
   5f164:	mov	x2, x20
   5f168:	mov	w3, w21
   5f16c:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f170:	add	x22, x24, w0, uxtw
   5f174:	sub	x1, x29, #0x48
   5f178:	mov	x0, x26
   5f17c:	mov	x2, x20
   5f180:	mov	w3, w21
   5f184:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f188:	add	x23, x26, w0, uxtw
   5f18c:	add	x1, sp, #0x48
   5f190:	mov	x0, x28
   5f194:	mov	x2, x20
   5f198:	mov	w3, w21
   5f19c:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f1a0:	add	x24, x28, w0, uxtw
   5f1a4:	add	x1, sp, #0x28
   5f1a8:	mov	x0, x27
   5f1ac:	mov	x2, x20
   5f1b0:	mov	w3, w21
   5f1b4:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f1b8:	add	x25, x27, w0, uxtw
   5f1bc:	sub	x1, x29, #0x28
   5f1c0:	mov	x0, x22
   5f1c4:	mov	x2, x20
   5f1c8:	mov	w3, w21
   5f1cc:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f1d0:	add	x22, x22, w0, uxtw
   5f1d4:	sub	x1, x29, #0x48
   5f1d8:	mov	x0, x23
   5f1dc:	mov	x2, x20
   5f1e0:	mov	w3, w21
   5f1e4:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f1e8:	add	x23, x23, w0, uxtw
   5f1ec:	add	x1, sp, #0x48
   5f1f0:	mov	x0, x24
   5f1f4:	mov	x2, x20
   5f1f8:	mov	w3, w21
   5f1fc:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f200:	add	x24, x24, w0, uxtw
   5f204:	add	x1, sp, #0x28
   5f208:	mov	x0, x25
   5f20c:	mov	x2, x20
   5f210:	mov	w3, w21
   5f214:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f218:	add	x25, x25, w0, uxtw
   5f21c:	sub	x1, x29, #0x28
   5f220:	mov	x0, x22
   5f224:	mov	x2, x20
   5f228:	mov	w3, w21
   5f22c:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f230:	add	x22, x22, w0, uxtw
   5f234:	sub	x1, x29, #0x48
   5f238:	mov	x0, x23
   5f23c:	mov	x2, x20
   5f240:	mov	w3, w21
   5f244:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f248:	add	x23, x23, w0, uxtw
   5f24c:	add	x1, sp, #0x48
   5f250:	mov	x0, x24
   5f254:	mov	x2, x20
   5f258:	mov	w3, w21
   5f25c:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f260:	add	x27, x24, w0, uxtw
   5f264:	add	x1, sp, #0x28
   5f268:	mov	x0, x25
   5f26c:	mov	x2, x20
   5f270:	mov	w3, w21
   5f274:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f278:	add	x25, x25, w0, uxtw
   5f27c:	sub	x1, x29, #0x28
   5f280:	mov	x0, x22
   5f284:	mov	x2, x20
   5f288:	mov	w3, w21
   5f28c:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f290:	add	x24, x22, w0, uxtw
   5f294:	sub	x1, x29, #0x48
   5f298:	mov	x0, x23
   5f29c:	mov	x2, x20
   5f2a0:	mov	w3, w21
   5f2a4:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f2a8:	add	x26, x23, w0, uxtw
   5f2ac:	add	x1, sp, #0x48
   5f2b0:	mov	x0, x27
   5f2b4:	mov	x2, x20
   5f2b8:	mov	w3, w21
   5f2bc:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f2c0:	add	x28, x27, w0, uxtw
   5f2c4:	add	x1, sp, #0x28
   5f2c8:	mov	x0, x25
   5f2cc:	mov	x2, x20
   5f2d0:	mov	w3, w21
   5f2d4:	bl	5f3f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x76cc>
   5f2d8:	add	x27, x25, w0, uxtw
   5f2dc:	sub	x0, x29, #0x28
   5f2e0:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f2e4:	mov	w23, w0
   5f2e8:	sub	x0, x29, #0x48
   5f2ec:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f2f0:	mov	w25, w0
   5f2f4:	add	x0, sp, #0x48
   5f2f8:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f2fc:	mov	w22, w0
   5f300:	add	x0, sp, #0x28
   5f304:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   5f308:	ldr	x8, [sp, #32]
   5f30c:	cmp	x27, x8
   5f310:	b.cs	5f32c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7608>  // b.hs, b.nlast
   5f314:	orr	w8, w25, w23
   5f318:	orr	w8, w8, w22
   5f31c:	orr	w8, w8, w0
   5f320:	cbz	w8, 5f15c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7438>
   5f324:	b	5f32c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7608>
   5f328:	ldr	x26, [sp, #24]
   5f32c:	ldr	x8, [sp, #24]
   5f330:	mov	x23, #0xffffffffffffffec    	// #-20
   5f334:	cmp	x24, x8
   5f338:	b.hi	5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>  // b.pmore
   5f33c:	ldr	x8, [sp, #16]
   5f340:	cmp	x26, x8
   5f344:	b.hi	5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>  // b.pmore
   5f348:	ldr	x22, [sp, #8]
   5f34c:	cmp	x28, x22
   5f350:	b.hi	5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>  // b.pmore
   5f354:	ldr	x2, [sp, #24]
   5f358:	sub	x1, x29, #0x28
   5f35c:	mov	x0, x24
   5f360:	mov	x3, x20
   5f364:	mov	w4, w21
   5f368:	bl	5edd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70b0>
   5f36c:	ldr	x2, [sp, #16]
   5f370:	sub	x1, x29, #0x48
   5f374:	mov	x0, x26
   5f378:	mov	x3, x20
   5f37c:	mov	w4, w21
   5f380:	bl	5edd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70b0>
   5f384:	add	x1, sp, #0x48
   5f388:	mov	x0, x28
   5f38c:	mov	x2, x22
   5f390:	mov	x3, x20
   5f394:	mov	w4, w21
   5f398:	bl	5edd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70b0>
   5f39c:	ldr	x2, [sp]
   5f3a0:	add	x1, sp, #0x28
   5f3a4:	mov	x0, x27
   5f3a8:	mov	x3, x20
   5f3ac:	mov	w4, w21
   5f3b0:	bl	5edd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x70b0>
   5f3b4:	sub	x0, x29, #0x28
   5f3b8:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5f3bc:	mov	w20, w0
   5f3c0:	sub	x0, x29, #0x48
   5f3c4:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5f3c8:	and	w20, w0, w20
   5f3cc:	add	x0, sp, #0x48
   5f3d0:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5f3d4:	and	w20, w20, w0
   5f3d8:	add	x0, sp, #0x28
   5f3dc:	bl	5e314 <ZDICT_addEntropyTablesFromBuffer@@Base+0x65f0>
   5f3e0:	tst	w20, w0
   5f3e4:	mov	x8, #0xffffffffffffffec    	// #-20
   5f3e8:	csel	x23, x8, x19, eq  // eq = none
   5f3ec:	b	5f048 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7324>
   5f3f0:	stp	x29, x30, [sp, #-48]!
   5f3f4:	str	x21, [sp, #16]
   5f3f8:	stp	x20, x19, [sp, #32]
   5f3fc:	mov	x20, x1
   5f400:	mov	x21, x0
   5f404:	mov	x0, x1
   5f408:	mov	w1, w3
   5f40c:	mov	x29, sp
   5f410:	mov	x19, x2
   5f414:	bl	609bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c98>
   5f418:	add	x19, x19, x0, lsl #2
   5f41c:	ldrh	w8, [x19]
   5f420:	mov	x0, x20
   5f424:	strh	w8, [x21]
   5f428:	ldrb	w1, [x19, #2]
   5f42c:	bl	6096c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c48>
   5f430:	ldrb	w0, [x19, #3]
   5f434:	ldp	x20, x19, [sp, #32]
   5f438:	ldr	x21, [sp, #16]
   5f43c:	ldp	x29, x30, [sp], #48
   5f440:	ret
   5f444:	stp	x29, x30, [sp, #-64]!
   5f448:	stp	x28, x23, [sp, #16]
   5f44c:	stp	x22, x21, [sp, #32]
   5f450:	stp	x20, x19, [sp, #48]
   5f454:	mov	x29, sp
   5f458:	sub	sp, sp, #0x4, lsl #12
   5f45c:	sub	sp, sp, #0x10
   5f460:	mov	x22, x2
   5f464:	mov	x19, x1
   5f468:	mov	x20, x0
   5f46c:	add	x0, sp, #0xc
   5f470:	mov	w2, #0x4004                	// #16388
   5f474:	mov	w1, wzr
   5f478:	mov	x21, x3
   5f47c:	bl	46a0 <memset@plt>
   5f480:	mov	w8, #0xc                   	// #12
   5f484:	add	x0, sp, #0xc
   5f488:	mov	x1, x22
   5f48c:	mov	x2, x21
   5f490:	str	w8, [sp, #12]
   5f494:	bl	5e9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c90>
   5f498:	mov	x23, x0
   5f49c:	bl	5e018 <ZDICT_addEntropyTablesFromBuffer@@Base+0x62f4>
   5f4a0:	cbnz	w0, 5f4d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77ac>
   5f4a4:	cmp	x23, x21
   5f4a8:	b.cs	5f4cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x77a8>  // b.hs, b.nlast
   5f4ac:	add	x2, x22, x23
   5f4b0:	sub	x3, x21, x23
   5f4b4:	add	x4, sp, #0xc
   5f4b8:	mov	x0, x20
   5f4bc:	mov	x1, x19
   5f4c0:	bl	5efcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x72a8>
   5f4c4:	mov	x23, x0
   5f4c8:	b	5f4d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77ac>
   5f4cc:	mov	x23, #0xffffffffffffffb8    	// #-72
   5f4d0:	mov	x0, x23
   5f4d4:	add	sp, sp, #0x4, lsl #12
   5f4d8:	add	sp, sp, #0x10
   5f4dc:	ldp	x20, x19, [sp, #48]
   5f4e0:	ldp	x22, x21, [sp, #32]
   5f4e4:	ldp	x28, x23, [sp, #16]
   5f4e8:	ldp	x29, x30, [sp], #64
   5f4ec:	ret
   5f4f0:	sub	sp, sp, #0x30
   5f4f4:	stp	x29, x30, [sp, #16]
   5f4f8:	str	x19, [sp, #32]
   5f4fc:	add	x29, sp, #0x10
   5f500:	cbz	x1, 5f518 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77f4>
   5f504:	mov	x19, x1
   5f508:	cmp	x3, x1
   5f50c:	b.ls	5f520 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77fc>  // b.plast
   5f510:	mov	x19, #0xffffffffffffffec    	// #-20
   5f514:	b	5f5d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x78ac>
   5f518:	mov	x19, #0xffffffffffffffba    	// #-70
   5f51c:	b	5f5d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x78ac>
   5f520:	b.ne	5f534 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7810>  // b.any
   5f524:	mov	x1, x2
   5f528:	mov	x2, x19
   5f52c:	bl	4420 <memcpy@plt>
   5f530:	b	5f5d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x78ac>
   5f534:	cmp	x3, #0x1
   5f538:	b.ne	5f54c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7828>  // b.any
   5f53c:	ldrb	w1, [x2]
   5f540:	mov	x2, x19
   5f544:	bl	46a0 <memset@plt>
   5f548:	b	5f5d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x78ac>
   5f54c:	lsl	x11, x3, #4
   5f550:	adrp	x13, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5f554:	udiv	x11, x11, x19
   5f558:	mov	w12, #0x18                  	// #24
   5f55c:	add	x13, x13, #0x688
   5f560:	and	x11, x11, #0xffffffff
   5f564:	mov	x8, xzr
   5f568:	mov	x9, xzr
   5f56c:	lsr	x10, x19, #8
   5f570:	madd	x11, x11, x12, x13
   5f574:	add	x12, sp, #0x4
   5f578:	add	x13, x11, x9, lsl #3
   5f57c:	ldp	w14, w13, [x13]
   5f580:	add	x9, x9, #0x1
   5f584:	madd	w13, w13, w10, w14
   5f588:	str	w13, [x12, x8]
   5f58c:	add	x8, x8, #0x4
   5f590:	cmp	x8, #0xc
   5f594:	b.ne	5f578 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7854>  // b.any
   5f598:	ldp	w9, w8, [sp, #4]
   5f59c:	adrp	x11, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   5f5a0:	ldr	w10, [sp, #12]
   5f5a4:	add	x11, x11, #0xd98
   5f5a8:	add	w8, w8, w8, lsr #4
   5f5ac:	cmp	w8, w9
   5f5b0:	cset	w9, cc  // cc = lo, ul, last
   5f5b4:	ldr	x9, [x11, w9, uxtw #3]
   5f5b8:	str	w8, [sp, #8]
   5f5bc:	add	w8, w10, w10, lsr #3
   5f5c0:	mov	x1, x19
   5f5c4:	str	w8, [sp, #12]
   5f5c8:	blr	x9
   5f5cc:	mov	x19, x0
   5f5d0:	mov	x0, x19
   5f5d4:	ldr	x19, [sp, #32]
   5f5d8:	ldp	x29, x30, [sp, #16]
   5f5dc:	add	sp, sp, #0x30
   5f5e0:	ret
   5f5e4:	stp	x29, x30, [sp, #-16]!
   5f5e8:	mov	x29, sp
   5f5ec:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5f5f0:	ldp	x29, x30, [sp], #16
   5f5f4:	ret
   5f5f8:	stp	x29, x30, [sp, #-16]!
   5f5fc:	mov	x29, sp
   5f600:	bl	5d358 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5634>
   5f604:	ldp	x29, x30, [sp], #16
   5f608:	ret
   5f60c:	stp	x29, x30, [sp, #-16]!
   5f610:	mov	x29, sp
   5f614:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5f618:	ldp	x29, x30, [sp], #16
   5f61c:	ret
   5f620:	stp	x29, x30, [sp, #-16]!
   5f624:	mov	x29, sp
   5f628:	bl	5d358 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5634>
   5f62c:	ldp	x29, x30, [sp], #16
   5f630:	ret
   5f634:	mov	w0, #0x5488                	// #21640
   5f638:	movk	w0, #0x2, lsl #16
   5f63c:	ret
   5f640:	mov	w8, #0x5                   	// #5
   5f644:	mov	w9, #0x5454                	// #21588
   5f648:	movi	v0.2d, #0x0
   5f64c:	mov	w10, #0xc                   	// #12
   5f650:	str	x8, [x0, #21552]
   5f654:	str	xzr, [x0, x9]
   5f658:	str	q0, [x0, #21520]
   5f65c:	str	q0, [x0, #21536]
   5f660:	str	w10, [x0, #5132]
   5f664:	mov	x0, xzr
   5f668:	ret
   5f66c:	stp	x29, x30, [sp, #-32]!
   5f670:	mov	w0, #0x5488                	// #21640
   5f674:	movk	w0, #0x2, lsl #16
   5f678:	str	x19, [sp, #16]
   5f67c:	mov	x29, sp
   5f680:	bl	4640 <malloc@plt>
   5f684:	mov	x19, x0
   5f688:	cbz	x0, 5f694 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7970>
   5f68c:	mov	x0, x19
   5f690:	bl	5f640 <ZDICT_addEntropyTablesFromBuffer@@Base+0x791c>
   5f694:	mov	x0, x19
   5f698:	ldr	x19, [sp, #16]
   5f69c:	ldp	x29, x30, [sp], #32
   5f6a0:	ret
   5f6a4:	stp	x29, x30, [sp, #-16]!
   5f6a8:	mov	x29, sp
   5f6ac:	bl	4880 <free@plt>
   5f6b0:	mov	x0, xzr
   5f6b4:	ldp	x29, x30, [sp], #16
   5f6b8:	ret
   5f6bc:	stp	x29, x30, [sp, #-16]!
   5f6c0:	mov	w2, #0x5473                	// #21619
   5f6c4:	mov	x29, sp
   5f6c8:	bl	4420 <memcpy@plt>
   5f6cc:	ldp	x29, x30, [sp], #16
   5f6d0:	ret
   5f6d4:	stp	x29, x30, [sp, #-48]!
   5f6d8:	cmp	x2, #0x5
   5f6dc:	str	x21, [sp, #16]
   5f6e0:	stp	x20, x19, [sp, #32]
   5f6e4:	mov	x29, sp
   5f6e8:	b.cs	5f6f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x79d0>  // b.hs, b.nlast
   5f6ec:	mov	w0, #0x5                   	// #5
   5f6f0:	b	5f7b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a90>
   5f6f4:	mov	x19, x0
   5f6f8:	mov	x0, x1
   5f6fc:	mov	x21, x2
   5f700:	mov	x20, x1
   5f704:	bl	5d680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x595c>
   5f708:	mov	w8, #0xb526                	// #46374
   5f70c:	movk	w8, #0xfd2f, lsl #16
   5f710:	cmp	w0, w8
   5f714:	b.ne	5f76c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a48>  // b.any
   5f718:	mov	x0, x20
   5f71c:	mov	x1, x21
   5f720:	bl	5f7c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7aa0>
   5f724:	cmp	x0, x21
   5f728:	b.hi	5f7b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a90>  // b.pmore
   5f72c:	stp	xzr, xzr, [x19]
   5f730:	ldrb	w8, [x20, #4]
   5f734:	and	w9, w8, #0xf
   5f738:	add	w9, w9, #0xc
   5f73c:	str	w9, [x19, #8]
   5f740:	tbnz	w8, #5, 5f774 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a50>
   5f744:	adrp	x9, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5f748:	lsr	w8, w8, #6
   5f74c:	add	x9, x9, #0x672
   5f750:	adr	x10, 5f760 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a3c>
   5f754:	ldrb	w11, [x9, x8]
   5f758:	add	x10, x10, x11, lsl #2
   5f75c:	br	x10
   5f760:	mov	x0, xzr
   5f764:	str	xzr, [x19]
   5f768:	b	5f7b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a90>
   5f76c:	mov	x0, #0xfffffffffffffff6    	// #-10
   5f770:	b	5f7b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a90>
   5f774:	mov	x0, #0xfffffffffffffff2    	// #-14
   5f778:	b	5f7b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a90>
   5f77c:	add	x0, x20, #0x5
   5f780:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   5f784:	mov	w8, w0
   5f788:	and	x8, x8, #0xffff
   5f78c:	mov	x0, xzr
   5f790:	add	x8, x8, #0x100
   5f794:	b	5f7b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a8c>
   5f798:	add	x0, x20, #0x5
   5f79c:	bl	5f7f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ad0>
   5f7a0:	mov	x8, x0
   5f7a4:	b	5f7ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x7a88>
   5f7a8:	ldrb	w8, [x20, #5]
   5f7ac:	mov	x0, xzr
   5f7b0:	str	x8, [x19]
   5f7b4:	ldp	x20, x19, [sp, #32]
   5f7b8:	ldr	x21, [sp, #16]
   5f7bc:	ldp	x29, x30, [sp], #48
   5f7c0:	ret
   5f7c4:	cmp	x1, #0x5
   5f7c8:	b.cs	5f7d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ab0>  // b.hs, b.nlast
   5f7cc:	mov	x0, #0xffffffffffffffb8    	// #-72
   5f7d0:	ret
   5f7d4:	ldrb	w8, [x0, #4]
   5f7d8:	adrp	x9, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5f7dc:	add	x9, x9, #0xc68
   5f7e0:	lsr	x8, x8, #3
   5f7e4:	and	x8, x8, #0x18
   5f7e8:	ldr	x8, [x9, x8]
   5f7ec:	add	x0, x8, #0x5
   5f7f0:	ret
   5f7f4:	stp	x29, x30, [sp, #-16]!
   5f7f8:	mov	x29, sp
   5f7fc:	bl	60bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8eb8>
   5f800:	ldp	x29, x30, [sp], #16
   5f804:	ret
   5f808:	stp	x29, x30, [sp, #-64]!
   5f80c:	str	x23, [sp, #16]
   5f810:	stp	x22, x21, [sp, #32]
   5f814:	stp	x20, x19, [sp, #48]
   5f818:	mov	x29, sp
   5f81c:	mov	x19, x4
   5f820:	mov	x20, x3
   5f824:	mov	x21, x2
   5f828:	mov	x22, x1
   5f82c:	mov	x23, x0
   5f830:	bl	5f860 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b3c>
   5f834:	mov	x0, x23
   5f838:	mov	x1, x22
   5f83c:	mov	x2, x21
   5f840:	mov	x3, x20
   5f844:	mov	x4, x19
   5f848:	bl	5f890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b6c>
   5f84c:	ldp	x20, x19, [sp, #48]
   5f850:	ldp	x22, x21, [sp, #32]
   5f854:	ldr	x23, [sp, #16]
   5f858:	ldp	x29, x30, [sp], #64
   5f85c:	ret
   5f860:	ldr	x8, [x0, #21520]
   5f864:	cmp	x8, x1
   5f868:	b.eq	5f88c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b68>  // b.none
   5f86c:	ldr	x9, [x0, #21520]
   5f870:	ldr	x10, [x0, #21528]
   5f874:	str	x8, [x0, #21544]
   5f878:	str	x1, [x0, #21528]
   5f87c:	str	x1, [x0, #21520]
   5f880:	sub	x8, x10, x9
   5f884:	add	x8, x1, x8
   5f888:	str	x8, [x0, #21536]
   5f88c:	ret
   5f890:	stp	x29, x30, [sp, #-64]!
   5f894:	lsr	x8, x4, #17
   5f898:	stp	x24, x23, [sp, #16]
   5f89c:	stp	x22, x21, [sp, #32]
   5f8a0:	stp	x20, x19, [sp, #48]
   5f8a4:	mov	x29, sp
   5f8a8:	cbz	x8, 5f8b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b90>
   5f8ac:	mov	x24, #0xffffffffffffffb8    	// #-72
   5f8b0:	b	5f8fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7bd8>
   5f8b4:	mov	x19, x2
   5f8b8:	mov	x20, x1
   5f8bc:	mov	x1, x3
   5f8c0:	mov	x2, x4
   5f8c4:	mov	x21, x4
   5f8c8:	mov	x22, x3
   5f8cc:	mov	x23, x0
   5f8d0:	bl	60be4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ec0>
   5f8d4:	mov	x24, x0
   5f8d8:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5f8dc:	cbnz	w0, 5f8fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7bd8>
   5f8e0:	add	x3, x22, x24
   5f8e4:	sub	x4, x21, x24
   5f8e8:	mov	x0, x23
   5f8ec:	mov	x1, x20
   5f8f0:	mov	x2, x19
   5f8f4:	bl	60ec4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x91a0>
   5f8f8:	mov	x24, x0
   5f8fc:	mov	x0, x24
   5f900:	ldp	x20, x19, [sp, #48]
   5f904:	ldp	x22, x21, [sp, #32]
   5f908:	ldp	x24, x23, [sp, #16]
   5f90c:	ldp	x29, x30, [sp], #64
   5f910:	ret
   5f914:	stp	x29, x30, [sp, #-64]!
   5f918:	str	x23, [sp, #16]
   5f91c:	stp	x22, x21, [sp, #32]
   5f920:	stp	x20, x19, [sp, #48]
   5f924:	mov	x29, sp
   5f928:	mov	x19, x5
   5f92c:	mov	x20, x4
   5f930:	mov	x21, x3
   5f934:	mov	x22, x2
   5f938:	mov	x23, x0
   5f93c:	bl	5f6bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7998>
   5f940:	mov	x0, x23
   5f944:	mov	x1, x22
   5f948:	bl	5f860 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b3c>
   5f94c:	mov	x0, x23
   5f950:	mov	x1, x22
   5f954:	mov	x2, x21
   5f958:	mov	x3, x20
   5f95c:	mov	x4, x19
   5f960:	bl	5f978 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7c54>
   5f964:	ldp	x20, x19, [sp, #48]
   5f968:	ldp	x22, x21, [sp, #32]
   5f96c:	ldr	x23, [sp, #16]
   5f970:	ldp	x29, x30, [sp], #64
   5f974:	ret
   5f978:	sub	sp, sp, #0x70
   5f97c:	cmp	x4, #0x8
   5f980:	stp	x29, x30, [sp, #16]
   5f984:	stp	x28, x27, [sp, #32]
   5f988:	stp	x26, x25, [sp, #48]
   5f98c:	stp	x24, x23, [sp, #64]
   5f990:	stp	x22, x21, [sp, #80]
   5f994:	stp	x20, x19, [sp, #96]
   5f998:	add	x29, sp, #0x10
   5f99c:	str	xzr, [sp, #8]
   5f9a0:	b.cs	5f9ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x7c88>  // b.hs, b.nlast
   5f9a4:	mov	x21, #0xffffffffffffffb8    	// #-72
   5f9a8:	b	5fb30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e0c>
   5f9ac:	mov	x19, x1
   5f9b0:	mov	x20, x0
   5f9b4:	mov	w1, #0x5                   	// #5
   5f9b8:	mov	x0, x3
   5f9bc:	mov	x23, x4
   5f9c0:	mov	x25, x3
   5f9c4:	mov	x24, x2
   5f9c8:	bl	5f7c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7aa0>
   5f9cc:	mov	x21, x0
   5f9d0:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5f9d4:	cbz	w0, 5f9e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cbc>
   5f9d8:	mov	w8, wzr
   5f9dc:	b	5fa14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cf0>
   5f9e0:	add	x8, x21, #0x3
   5f9e4:	cmp	x8, x23
   5f9e8:	b.ls	5f9f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cd4>  // b.plast
   5f9ec:	mov	w8, wzr
   5f9f0:	mov	x21, #0xffffffffffffffb8    	// #-72
   5f9f4:	b	5fa14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cf0>
   5f9f8:	mov	x0, x20
   5f9fc:	mov	x1, x25
   5fa00:	mov	x2, x21
   5fa04:	bl	600b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8394>
   5fa08:	cbz	x0, 5fb54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e30>
   5fa0c:	mov	w8, wzr
   5fa10:	mov	x21, #0xffffffffffffffec    	// #-20
   5fa14:	mov	x26, x23
   5fa18:	mov	x22, x25
   5fa1c:	cbz	w8, 5fb30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e0c>
   5fa20:	add	x27, x25, x23
   5fa24:	add	x8, x19, x24
   5fa28:	mov	x23, x19
   5fa2c:	str	x8, [sp]
   5fa30:	b	5fa40 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d1c>
   5fa34:	mov	w8, #0x1                   	// #1
   5fa38:	mov	x21, x24
   5fa3c:	cbnz	w8, 5fb24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e00>
   5fa40:	sub	x1, x27, x22
   5fa44:	add	x2, sp, #0x8
   5fa48:	mov	x0, x22
   5fa4c:	bl	5fe3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8118>
   5fa50:	mov	x24, x0
   5fa54:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5fa58:	cbnz	w0, 5fa34 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d10>
   5fa5c:	sub	x26, x26, #0x3
   5fa60:	subs	x28, x26, x24
   5fa64:	add	x22, x22, #0x3
   5fa68:	b.cs	5fa78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d54>  // b.hs, b.nlast
   5fa6c:	mov	x21, #0xffffffffffffffb8    	// #-72
   5fa70:	mov	w8, #0x1                   	// #1
   5fa74:	b	5fa3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d18>
   5fa78:	ldr	w8, [sp, #8]
   5fa7c:	cmp	w8, #0x3
   5fa80:	b.eq	5fab8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d94>  // b.none
   5fa84:	cmp	w8, #0x1
   5fa88:	b.eq	5facc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7da8>  // b.none
   5fa8c:	cbnz	w8, 5fb04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7de0>
   5fa90:	ldr	x8, [sp]
   5fa94:	mov	x0, x20
   5fa98:	mov	x1, x23
   5fa9c:	mov	x3, x22
   5faa0:	sub	x2, x8, x23
   5faa4:	mov	x4, x24
   5faa8:	bl	5f890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b6c>
   5faac:	mov	x25, x0
   5fab0:	cbnz	x24, 5faec <ZDICT_addEntropyTablesFromBuffer@@Base+0x7dc8>
   5fab4:	b	5fac4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7da0>
   5fab8:	cbnz	x26, 5fa6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d48>
   5fabc:	mov	x25, xzr
   5fac0:	cbnz	x24, 5faec <ZDICT_addEntropyTablesFromBuffer@@Base+0x7dc8>
   5fac4:	mov	w8, #0x3                   	// #3
   5fac8:	b	5fa3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d18>
   5facc:	ldr	x8, [sp]
   5fad0:	mov	x0, x23
   5fad4:	mov	x2, x22
   5fad8:	mov	x3, x24
   5fadc:	sub	x1, x8, x23
   5fae0:	bl	600d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83b0>
   5fae4:	mov	x25, x0
   5fae8:	cbz	x24, 5fac4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7da0>
   5faec:	mov	x0, x25
   5faf0:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5faf4:	cbz	w0, 5fb10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7dec>
   5faf8:	mov	w8, #0x1                   	// #1
   5fafc:	mov	x21, x25
   5fb00:	b	5fa3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d18>
   5fb04:	mov	x21, #0xffffffffffffffff    	// #-1
   5fb08:	mov	w8, #0x1                   	// #1
   5fb0c:	b	5fa3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d18>
   5fb10:	mov	w8, wzr
   5fb14:	add	x23, x23, x25
   5fb18:	add	x22, x22, x24
   5fb1c:	mov	x26, x28
   5fb20:	b	5fa3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7d18>
   5fb24:	cmp	w8, #0x3
   5fb28:	b.ne	5fb30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e0c>  // b.any
   5fb2c:	sub	x21, x23, x19
   5fb30:	mov	x0, x21
   5fb34:	ldp	x20, x19, [sp, #96]
   5fb38:	ldp	x22, x21, [sp, #80]
   5fb3c:	ldp	x24, x23, [sp, #64]
   5fb40:	ldp	x26, x25, [sp, #48]
   5fb44:	ldp	x28, x27, [sp, #32]
   5fb48:	ldp	x29, x30, [sp, #16]
   5fb4c:	add	sp, sp, #0x70
   5fb50:	ret
   5fb54:	add	x22, x25, x21
   5fb58:	sub	x26, x23, x21
   5fb5c:	mov	w8, #0x1                   	// #1
   5fb60:	cbnz	w8, 5fa20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7cfc>
   5fb64:	b	5fb30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e0c>
   5fb68:	stp	x29, x30, [sp, #-64]!
   5fb6c:	stp	x22, x21, [sp, #32]
   5fb70:	mov	x21, x2
   5fb74:	mov	x22, x1
   5fb78:	mov	x1, x5
   5fb7c:	mov	x2, x6
   5fb80:	str	x23, [sp, #16]
   5fb84:	stp	x20, x19, [sp, #48]
   5fb88:	mov	x29, sp
   5fb8c:	mov	x19, x4
   5fb90:	mov	x20, x3
   5fb94:	mov	x23, x0
   5fb98:	bl	5fbd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7eb0>
   5fb9c:	mov	x0, x23
   5fba0:	mov	x1, x22
   5fba4:	bl	5f860 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b3c>
   5fba8:	mov	x0, x23
   5fbac:	mov	x1, x22
   5fbb0:	mov	x2, x21
   5fbb4:	mov	x3, x20
   5fbb8:	mov	x4, x19
   5fbbc:	bl	5f978 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7c54>
   5fbc0:	ldp	x20, x19, [sp, #48]
   5fbc4:	ldp	x22, x21, [sp, #32]
   5fbc8:	ldr	x23, [sp, #16]
   5fbcc:	ldp	x29, x30, [sp], #64
   5fbd0:	ret
   5fbd4:	stp	x29, x30, [sp, #-48]!
   5fbd8:	str	x21, [sp, #16]
   5fbdc:	stp	x20, x19, [sp, #32]
   5fbe0:	mov	x29, sp
   5fbe4:	mov	x19, x2
   5fbe8:	mov	x20, x1
   5fbec:	mov	x21, x0
   5fbf0:	bl	5f640 <ZDICT_addEntropyTablesFromBuffer@@Base+0x791c>
   5fbf4:	mov	x0, xzr
   5fbf8:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5fbfc:	mov	w8, w0
   5fc00:	mov	x0, xzr
   5fc04:	cbnz	w8, 5fc3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f18>
   5fc08:	cbz	x20, 5fc38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f14>
   5fc0c:	cbz	x19, 5fc38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f14>
   5fc10:	mov	x0, x21
   5fc14:	mov	x1, x20
   5fc18:	mov	x2, x19
   5fc1c:	bl	60118 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83f4>
   5fc20:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5fc24:	cmp	w0, #0x0
   5fc28:	mov	x9, #0xffffffffffffffe2    	// #-30
   5fc2c:	mov	w8, w0
   5fc30:	csel	x0, xzr, x9, eq  // eq = none
   5fc34:	cbnz	w8, 5fc3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f18>
   5fc38:	mov	x0, xzr
   5fc3c:	ldp	x20, x19, [sp, #32]
   5fc40:	ldr	x21, [sp, #16]
   5fc44:	ldp	x29, x30, [sp], #48
   5fc48:	ret
   5fc4c:	stp	x29, x30, [sp, #-16]!
   5fc50:	mov	x5, xzr
   5fc54:	mov	x6, xzr
   5fc58:	mov	x29, sp
   5fc5c:	bl	5fb68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7e44>
   5fc60:	ldp	x29, x30, [sp], #16
   5fc64:	ret
   5fc68:	stp	x29, x30, [sp, #-64]!
   5fc6c:	str	x23, [sp, #16]
   5fc70:	stp	x22, x21, [sp, #32]
   5fc74:	stp	x20, x19, [sp, #48]
   5fc78:	mov	x29, sp
   5fc7c:	mov	x19, x3
   5fc80:	mov	x21, x2
   5fc84:	mov	x22, x1
   5fc88:	mov	x23, x0
   5fc8c:	bl	5f66c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7948>
   5fc90:	cbz	x0, 5fcbc <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f98>
   5fc94:	mov	x1, x23
   5fc98:	mov	x2, x22
   5fc9c:	mov	x3, x21
   5fca0:	mov	x4, x19
   5fca4:	mov	x20, x0
   5fca8:	bl	5fc4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f28>
   5fcac:	mov	x19, x0
   5fcb0:	mov	x0, x20
   5fcb4:	bl	5f6a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7980>
   5fcb8:	b	5fcc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7f9c>
   5fcbc:	mov	x19, #0xffffffffffffffc0    	// #-64
   5fcc0:	mov	x0, x19
   5fcc4:	ldp	x20, x19, [sp, #48]
   5fcc8:	ldp	x22, x21, [sp, #32]
   5fccc:	ldr	x23, [sp, #16]
   5fcd0:	ldp	x29, x30, [sp], #64
   5fcd4:	ret
   5fcd8:	stp	x29, x30, [sp, #-80]!
   5fcdc:	mov	x29, sp
   5fce0:	str	x25, [sp, #16]
   5fce4:	stp	x24, x23, [sp, #32]
   5fce8:	stp	x22, x21, [sp, #48]
   5fcec:	stp	x20, x19, [sp, #64]
   5fcf0:	mov	x19, x3
   5fcf4:	mov	x20, x2
   5fcf8:	mov	x22, x1
   5fcfc:	mov	x21, x0
   5fd00:	str	xzr, [x29, #24]
   5fd04:	bl	5f7c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7aa0>
   5fd08:	mov	x24, x0
   5fd0c:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5fd10:	cbz	w0, 5fd24 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8000>
   5fd14:	mov	x0, x20
   5fd18:	mov	x1, x19
   5fd1c:	mov	x2, x24
   5fd20:	b	5fd5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8038>
   5fd24:	mov	x0, x21
   5fd28:	bl	5d680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x595c>
   5fd2c:	mov	w8, #0xb526                	// #46374
   5fd30:	movk	w8, #0xfd2f, lsl #16
   5fd34:	cmp	w0, w8
   5fd38:	b.ne	5fd50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x802c>  // b.any
   5fd3c:	add	x8, x24, #0x3
   5fd40:	cmp	x8, x22
   5fd44:	b.ls	5fe18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80f4>  // b.plast
   5fd48:	mov	x2, #0xffffffffffffffb8    	// #-72
   5fd4c:	b	5fd54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8030>
   5fd50:	mov	x2, #0xfffffffffffffff6    	// #-10
   5fd54:	mov	x0, x20
   5fd58:	mov	x1, x19
   5fd5c:	bl	5fe2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8108>
   5fd60:	mov	w8, wzr
   5fd64:	mov	x23, x21
   5fd68:	cbz	w8, 5fe00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80dc>
   5fd6c:	mov	x25, xzr
   5fd70:	b	5fd8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8068>
   5fd74:	mov	x0, x20
   5fd78:	mov	x1, x19
   5fd7c:	mov	x2, x24
   5fd80:	bl	5fe2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8108>
   5fd84:	mov	w8, #0x1                   	// #1
   5fd88:	cbnz	w8, 5fde8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80c4>
   5fd8c:	add	x2, x29, #0x18
   5fd90:	mov	x0, x23
   5fd94:	mov	x1, x22
   5fd98:	bl	5fe3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8118>
   5fd9c:	mov	x24, x0
   5fda0:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5fda4:	cbnz	w0, 5fd74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8050>
   5fda8:	sub	x22, x22, #0x3
   5fdac:	subs	x9, x22, x24
   5fdb0:	add	x23, x23, #0x3
   5fdb4:	b.cs	5fdc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80a4>  // b.hs, b.nlast
   5fdb8:	mov	x2, #0xffffffffffffffb8    	// #-72
   5fdbc:	mov	x0, x20
   5fdc0:	mov	x1, x19
   5fdc4:	b	5fd80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x805c>
   5fdc8:	cbz	x24, 5fde0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80bc>
   5fdcc:	mov	w8, wzr
   5fdd0:	add	x23, x23, x24
   5fdd4:	add	x25, x25, #0x1
   5fdd8:	mov	x22, x9
   5fddc:	b	5fd88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8064>
   5fde0:	mov	w8, #0x3                   	// #3
   5fde4:	b	5fd88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8064>
   5fde8:	cmp	w8, #0x3
   5fdec:	b.ne	5fe00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80dc>  // b.any
   5fdf0:	sub	x8, x23, x21
   5fdf4:	lsl	x9, x25, #17
   5fdf8:	str	x8, [x20]
   5fdfc:	str	x9, [x19]
   5fe00:	ldp	x20, x19, [sp, #64]
   5fe04:	ldp	x22, x21, [sp, #48]
   5fe08:	ldp	x24, x23, [sp, #32]
   5fe0c:	ldr	x25, [sp, #16]
   5fe10:	ldp	x29, x30, [sp], #80
   5fe14:	ret
   5fe18:	add	x23, x21, x24
   5fe1c:	sub	x22, x22, x24
   5fe20:	mov	w8, #0x1                   	// #1
   5fe24:	cbnz	w8, 5fd6c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8048>
   5fe28:	b	5fe00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x80dc>
   5fe2c:	mov	x8, #0xfffffffffffffffe    	// #-2
   5fe30:	str	x2, [x0]
   5fe34:	str	x8, [x1]
   5fe38:	ret
   5fe3c:	cmp	x1, #0x3
   5fe40:	b.cs	5fe4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8128>  // b.hs, b.nlast
   5fe44:	mov	x0, #0xffffffffffffffb8    	// #-72
   5fe48:	ret
   5fe4c:	ldrb	w8, [x0]
   5fe50:	lsr	w8, w8, #6
   5fe54:	str	w8, [x2]
   5fe58:	ldurh	w9, [x0, #1]
   5fe5c:	ldrb	w10, [x0]
   5fe60:	cmp	w8, #0x2
   5fe64:	lsl	x9, x9, #48
   5fe68:	and	x10, x10, #0x7
   5fe6c:	rev	x0, x9
   5fe70:	bfi	x0, x10, #16, #3
   5fe74:	csel	w9, w0, wzr, eq  // eq = none
   5fe78:	cmp	w8, #0x3
   5fe7c:	str	w9, [x2, #4]
   5fe80:	b.eq	5fe94 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8170>  // b.none
   5fe84:	cmp	w8, #0x2
   5fe88:	b.ne	5fe90 <ZDICT_addEntropyTablesFromBuffer@@Base+0x816c>  // b.any
   5fe8c:	mov	w0, #0x1                   	// #1
   5fe90:	ret
   5fe94:	mov	x0, xzr
   5fe98:	ret
   5fe9c:	ldr	x0, [x0, #21552]
   5fea0:	ret
   5fea4:	sub	sp, sp, #0x50
   5fea8:	stp	x29, x30, [sp, #16]
   5feac:	stp	x24, x23, [sp, #32]
   5feb0:	stp	x22, x21, [sp, #48]
   5feb4:	stp	x20, x19, [sp, #64]
   5feb8:	ldr	x8, [x0, #21552]
   5febc:	add	x29, sp, #0x10
   5fec0:	cmp	x8, x4
   5fec4:	b.ne	5ff78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8254>  // b.any
   5fec8:	mov	w8, #0x5450                	// #21584
   5fecc:	mov	x20, x4
   5fed0:	mov	x21, x3
   5fed4:	mov	x23, x2
   5fed8:	mov	x19, x0
   5fedc:	mov	x22, x1
   5fee0:	add	x24, x0, x8
   5fee4:	cbz	x2, 5fef4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x81d0>
   5fee8:	mov	x0, x19
   5feec:	mov	x1, x22
   5fef0:	bl	5f860 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b3c>
   5fef4:	ldr	w8, [x24, #4]
   5fef8:	cmp	w8, #0x3
   5fefc:	b.hi	60000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82dc>  // b.pmore
   5ff00:	adrp	x9, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   5ff04:	add	x9, x9, #0x676
   5ff08:	adr	x10, 5ff18 <ZDICT_addEntropyTablesFromBuffer@@Base+0x81f4>
   5ff0c:	ldrb	w11, [x9, x8]
   5ff10:	add	x10, x10, x11, lsl #2
   5ff14:	br	x10
   5ff18:	cmp	x20, #0x5
   5ff1c:	b.ne	5ff78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8254>  // b.any
   5ff20:	mov	w1, #0x5                   	// #5
   5ff24:	mov	x0, x21
   5ff28:	bl	5f7c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7aa0>
   5ff2c:	mov	x20, x0
   5ff30:	str	x0, [x19, #21560]
   5ff34:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5ff38:	cbnz	w0, 5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   5ff3c:	ldrb	w9, [x21, #4]
   5ff40:	ldr	w10, [x21]
   5ff44:	mov	w8, #0x5478                	// #21624
   5ff48:	movk	w8, #0x2, lsl #16
   5ff4c:	cmp	x20, #0x6
   5ff50:	add	x8, x19, x8
   5ff54:	strb	w9, [x8, #4]
   5ff58:	str	w10, [x8]
   5ff5c:	b.cc	6005c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8338>  // b.lo, b.ul, b.last
   5ff60:	sub	x8, x20, #0x5
   5ff64:	mov	w9, #0x1                   	// #1
   5ff68:	str	x8, [x19, #21552]
   5ff6c:	str	w9, [x24, #4]
   5ff70:	mov	x20, xzr
   5ff74:	b	5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   5ff78:	mov	x20, #0xffffffffffffffb8    	// #-72
   5ff7c:	mov	x0, x20
   5ff80:	ldp	x20, x19, [sp, #64]
   5ff84:	ldp	x22, x21, [sp, #48]
   5ff88:	ldp	x24, x23, [sp, #32]
   5ff8c:	ldp	x29, x30, [sp, #16]
   5ff90:	add	sp, sp, #0x50
   5ff94:	ret
   5ff98:	add	x2, sp, #0x8
   5ff9c:	mov	w1, #0x3                   	// #3
   5ffa0:	mov	x0, x21
   5ffa4:	bl	5fe3c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8118>
   5ffa8:	mov	x20, x0
   5ffac:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   5ffb0:	cbnz	w0, 5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   5ffb4:	ldr	w8, [sp, #8]
   5ffb8:	cmp	w8, #0x3
   5ffbc:	b.ne	60044 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8320>  // b.any
   5ffc0:	mov	w8, wzr
   5ffc4:	str	xzr, [x19, #21552]
   5ffc8:	b	60050 <ZDICT_addEntropyTablesFromBuffer@@Base+0x832c>
   5ffcc:	ldr	w8, [x24]
   5ffd0:	cmp	w8, #0x3
   5ffd4:	b.eq	60008 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82e4>  // b.none
   5ffd8:	cmp	w8, #0x1
   5ffdc:	b.eq	60010 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82ec>  // b.none
   5ffe0:	cbnz	w8, 60000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x82dc>
   5ffe4:	mov	x0, x19
   5ffe8:	mov	x1, x22
   5ffec:	mov	x2, x23
   5fff0:	mov	x3, x21
   5fff4:	mov	x4, x20
   5fff8:	bl	5f890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7b6c>
   5fffc:	b	60024 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8300>
   60000:	mov	x20, #0xffffffffffffffff    	// #-1
   60004:	b	5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   60008:	mov	x20, xzr
   6000c:	b	60028 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8304>
   60010:	mov	x0, x22
   60014:	mov	x1, x23
   60018:	mov	x2, x21
   6001c:	mov	x3, x20
   60020:	bl	600d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x83b0>
   60024:	mov	x20, x0
   60028:	mov	w8, #0x2                   	// #2
   6002c:	mov	w9, #0x3                   	// #3
   60030:	add	x10, x22, x20
   60034:	str	w8, [x24, #4]
   60038:	str	x9, [x19, #21552]
   6003c:	str	x10, [x19, #21520]
   60040:	b	5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   60044:	str	x20, [x19, #21552]
   60048:	str	w8, [x24]
   6004c:	mov	w8, #0x3                   	// #3
   60050:	mov	x20, xzr
   60054:	str	w8, [x24, #4]
   60058:	b	5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   6005c:	str	xzr, [x19, #21552]
   60060:	mov	w8, #0x5478                	// #21624
   60064:	movk	w8, #0x2, lsl #16
   60068:	ldr	x2, [x19, #21552]
   6006c:	add	x20, x19, x8
   60070:	mov	w8, #0x547d                	// #21629
   60074:	movk	w8, #0x2, lsl #16
   60078:	add	x0, x19, x8
   6007c:	mov	x1, x21
   60080:	bl	4420 <memcpy@plt>
   60084:	ldr	x2, [x19, #21560]
   60088:	mov	x0, x19
   6008c:	mov	x1, x20
   60090:	bl	600b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8394>
   60094:	mov	x20, x0
   60098:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   6009c:	cbnz	w0, 5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   600a0:	mov	w8, #0x3                   	// #3
   600a4:	mov	w9, #0x2                   	// #2
   600a8:	mov	x20, xzr
   600ac:	str	x8, [x19, #21552]
   600b0:	str	w9, [x24, #4]
   600b4:	b	5ff7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8258>
   600b8:	stp	x29, x30, [sp, #-16]!
   600bc:	mov	w8, #0x5440                	// #21568
   600c0:	add	x0, x0, x8
   600c4:	mov	x29, sp
   600c8:	bl	5f6d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x79b0>
   600cc:	ldp	x29, x30, [sp], #16
   600d0:	ret
   600d4:	stp	x29, x30, [sp, #-32]!
   600d8:	mov	x8, x0
   600dc:	mov	x0, #0xffffffffffffffba    	// #-70
   600e0:	str	x19, [sp, #16]
   600e4:	mov	x29, sp
   600e8:	cbz	x8, 6010c <ZDICT_addEntropyTablesFromBuffer@@Base+0x83e8>
   600ec:	mov	x19, x3
   600f0:	cmp	x3, x1
   600f4:	b.hi	6010c <ZDICT_addEntropyTablesFromBuffer@@Base+0x83e8>  // b.pmore
   600f8:	mov	x0, x8
   600fc:	mov	x1, x2
   60100:	mov	x2, x19
   60104:	bl	4420 <memcpy@plt>
   60108:	mov	x0, x19
   6010c:	ldr	x19, [sp, #16]
   60110:	ldp	x29, x30, [sp], #32
   60114:	ret
   60118:	stp	x29, x30, [sp, #-48]!
   6011c:	stp	x20, x19, [sp, #32]
   60120:	mov	x19, x0
   60124:	mov	x0, x1
   60128:	stp	x22, x21, [sp, #16]
   6012c:	mov	x29, sp
   60130:	mov	x20, x2
   60134:	mov	x21, x1
   60138:	bl	5d680 <ZDICT_addEntropyTablesFromBuffer@@Base+0x595c>
   6013c:	mov	w8, #0xa436                	// #42038
   60140:	movk	w8, #0xec30, lsl #16
   60144:	cmp	w0, w8
   60148:	b.ne	60178 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8454>  // b.any
   6014c:	add	x21, x21, #0x4
   60150:	sub	x20, x20, #0x4
   60154:	mov	x0, x19
   60158:	mov	x1, x21
   6015c:	mov	x2, x20
   60160:	bl	618fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9bd8>
   60164:	mov	x22, x0
   60168:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   6016c:	cbz	w0, 60188 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8464>
   60170:	mov	x0, #0xffffffffffffffe2    	// #-30
   60174:	b	6019c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8478>
   60178:	mov	x0, x19
   6017c:	mov	x1, x21
   60180:	mov	x2, x20
   60184:	b	60194 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8470>
   60188:	add	x1, x21, x22
   6018c:	sub	x2, x20, x22
   60190:	mov	x0, x19
   60194:	bl	618d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9bb0>
   60198:	mov	x0, xzr
   6019c:	ldp	x20, x19, [sp, #32]
   601a0:	ldp	x22, x21, [sp, #16]
   601a4:	ldp	x29, x30, [sp], #48
   601a8:	ret
   601ac:	stp	x29, x30, [sp, #-32]!
   601b0:	mov	w0, #0x78                  	// #120
   601b4:	str	x19, [sp, #16]
   601b8:	mov	x29, sp
   601bc:	bl	4640 <malloc@plt>
   601c0:	mov	x19, x0
   601c4:	cbz	x0, 601ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x84c8>
   601c8:	movi	v0.2d, #0x0
   601cc:	str	xzr, [x19, #112]
   601d0:	stp	q0, q0, [x19, #80]
   601d4:	stp	q0, q0, [x19, #48]
   601d8:	stp	q0, q0, [x19, #16]
   601dc:	str	q0, [x19]
   601e0:	bl	5f66c <ZDICT_addEntropyTablesFromBuffer@@Base+0x7948>
   601e4:	str	x0, [x19]
   601e8:	str	wzr, [x19, #24]
   601ec:	mov	x0, x19
   601f0:	ldr	x19, [sp, #16]
   601f4:	ldp	x29, x30, [sp], #32
   601f8:	ret
   601fc:	cbz	x0, 60238 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8514>
   60200:	stp	x29, x30, [sp, #-32]!
   60204:	str	x19, [sp, #16]
   60208:	mov	x19, x0
   6020c:	ldr	x0, [x0]
   60210:	mov	x29, sp
   60214:	bl	5f6a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7980>
   60218:	ldr	x0, [x19, #32]
   6021c:	bl	4880 <free@plt>
   60220:	ldr	x0, [x19, #56]
   60224:	bl	4880 <free@plt>
   60228:	mov	x0, x19
   6022c:	bl	4880 <free@plt>
   60230:	ldr	x19, [sp, #16]
   60234:	ldp	x29, x30, [sp], #32
   60238:	mov	x0, xzr
   6023c:	ret
   60240:	stp	x29, x30, [sp, #-16]!
   60244:	ldr	x8, [x0]
   60248:	mov	w9, #0x1                   	// #1
   6024c:	str	xzr, [x0, #48]
   60250:	str	w9, [x0, #24]
   60254:	str	xzr, [x0, #112]
   60258:	stp	xzr, xzr, [x0, #72]
   6025c:	mov	x0, x8
   60260:	mov	x29, sp
   60264:	bl	5fbd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7eb0>
   60268:	ldp	x29, x30, [sp], #16
   6026c:	ret
   60270:	stp	x29, x30, [sp, #-16]!
   60274:	mov	x1, xzr
   60278:	mov	x2, xzr
   6027c:	mov	x29, sp
   60280:	bl	60240 <ZDICT_addEntropyTablesFromBuffer@@Base+0x851c>
   60284:	ldp	x29, x30, [sp], #16
   60288:	ret
   6028c:	sub	sp, sp, #0xa0
   60290:	stp	x29, x30, [sp, #64]
   60294:	stp	x28, x27, [sp, #80]
   60298:	stp	x26, x25, [sp, #96]
   6029c:	stp	x24, x23, [sp, #112]
   602a0:	stp	x22, x21, [sp, #128]
   602a4:	stp	x20, x19, [sp, #144]
   602a8:	stp	x4, x3, [sp, #8]
   602ac:	ldr	x8, [x4]
   602b0:	ldr	x9, [x2]
   602b4:	add	x29, sp, #0x40
   602b8:	mov	x21, x1
   602bc:	add	x8, x3, x8
   602c0:	mov	x19, x0
   602c4:	add	x24, x0, #0x8
   602c8:	add	x23, x0, #0x60
   602cc:	add	x10, x0, #0x48
   602d0:	mov	w22, #0x1                   	// #1
   602d4:	mov	x27, x3
   602d8:	mov	x26, x1
   602dc:	stur	x8, [x29, #-16]
   602e0:	add	x8, x1, x9
   602e4:	mov	w25, #0x1                   	// #1
   602e8:	stp	x2, x10, [sp, #24]
   602ec:	stur	x8, [x29, #-24]
   602f0:	b	602fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d8>
   602f4:	mov	w25, wzr
   602f8:	cbz	w25, 6074c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a28>
   602fc:	ldr	w8, [x19, #24]
   60300:	cmp	w8, #0x4
   60304:	b.hi	60784 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a60>  // b.pmore
   60308:	adrp	x11, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   6030c:	add	x11, x11, #0x67a
   60310:	adr	x9, 60324 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8600>
   60314:	ldrh	w10, [x11, x8, lsl #1]
   60318:	add	x9, x9, x10, lsl #2
   6031c:	mov	x0, #0xffffffffffffffc2    	// #-62
   60320:	br	x9
   60324:	ldr	x2, [x19, #112]
   60328:	mov	x0, x24
   6032c:	mov	x1, x23
   60330:	bl	5f6d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x79b0>
   60334:	cbz	x0, 6035c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8638>
   60338:	mov	x22, x23
   6033c:	mov	x23, x24
   60340:	ldr	x24, [x19, #112]
   60344:	mov	x28, x0
   60348:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   6034c:	cbz	w0, 6036c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8648>
   60350:	mov	w8, #0x1                   	// #1
   60354:	stur	x28, [x29, #-8]
   60358:	b	603dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x86b8>
   6035c:	mov	w8, wzr
   60360:	cmp	w8, #0x4
   60364:	b.ne	603f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x86cc>  // b.any
   60368:	b	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>
   6036c:	ldur	x8, [x29, #-16]
   60370:	str	x21, [sp]
   60374:	sub	x20, x28, x24
   60378:	mov	x1, x27
   6037c:	sub	x21, x8, x27
   60380:	add	x8, x19, x24
   60384:	cmp	x20, x21
   60388:	add	x0, x8, #0x60
   6038c:	b.ls	603c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x86a0>  // b.plast
   60390:	mov	x2, x21
   60394:	bl	4420 <memcpy@plt>
   60398:	ldr	x8, [x19, #112]
   6039c:	add	x8, x8, x21
   603a0:	str	x8, [x19, #112]
   603a4:	ldr	x8, [sp, #24]
   603a8:	str	xzr, [x8]
   603ac:	ldr	x8, [x19, #112]
   603b0:	sub	x8, x28, x8
   603b4:	add	x8, x8, #0x3
   603b8:	stur	x8, [x29, #-8]
   603bc:	mov	w8, #0x1                   	// #1
   603c0:	b	603d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x86b4>
   603c4:	mov	x2, x20
   603c8:	bl	4420 <memcpy@plt>
   603cc:	add	x27, x27, x20
   603d0:	mov	w8, #0x4                   	// #4
   603d4:	str	x28, [x19, #112]
   603d8:	ldr	x21, [sp]
   603dc:	mov	x24, x23
   603e0:	mov	x23, x22
   603e4:	mov	w22, #0x1                   	// #1
   603e8:	cmp	w8, #0x4
   603ec:	b.eq	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>  // b.none
   603f0:	cbnz	w8, 6078c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a68>
   603f4:	ldr	x20, [x19]
   603f8:	mov	x0, x20
   603fc:	bl	5fe9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8178>
   60400:	mov	x28, x0
   60404:	mov	x0, x20
   60408:	mov	x1, xzr
   6040c:	mov	x2, xzr
   60410:	mov	x3, x23
   60414:	mov	x4, x28
   60418:	bl	5fea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8180>
   6041c:	mov	x20, x0
   60420:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60424:	cbz	w0, 60434 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8710>
   60428:	mov	w8, #0x1                   	// #1
   6042c:	stur	x20, [x29, #-8]
   60430:	b	6048c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8768>
   60434:	ldr	x8, [x19, #112]
   60438:	cmp	x28, x8
   6043c:	b.cs	60488 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8764>  // b.hs, b.nlast
   60440:	ldr	x20, [x19]
   60444:	mov	x0, x20
   60448:	bl	5fe9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8178>
   6044c:	add	x8, x19, x28
   60450:	mov	x4, x0
   60454:	add	x3, x8, #0x60
   60458:	mov	x0, x20
   6045c:	mov	x1, xzr
   60460:	mov	x2, xzr
   60464:	bl	5fea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8180>
   60468:	mov	x20, x0
   6046c:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60470:	ldur	x9, [x29, #-8]
   60474:	cmp	w0, #0x0
   60478:	cset	w8, ne  // ne = any
   6047c:	csel	x9, x9, x20, eq  // eq = none
   60480:	stur	x9, [x29, #-8]
   60484:	cbnz	w0, 6048c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8768>
   60488:	mov	w8, wzr
   6048c:	cbnz	w8, 6078c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a68>
   60490:	ldr	w8, [x19, #16]
   60494:	ldr	x9, [x19, #40]
   60498:	mov	w10, #0x20000               	// #131072
   6049c:	lsl	w8, w22, w8
   604a0:	cmp	w8, #0x20, lsl #12
   604a4:	csel	w8, w8, w10, lt  // lt = tstop
   604a8:	sxtw	x28, w8
   604ac:	cmp	x9, x28
   604b0:	str	x28, [x19, #88]
   604b4:	b.cs	604d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x87b0>  // b.hs, b.nlast
   604b8:	ldr	x0, [x19, #32]
   604bc:	bl	4880 <free@plt>
   604c0:	mov	x0, x28
   604c4:	str	x28, [x19, #40]
   604c8:	bl	4640 <malloc@plt>
   604cc:	str	x0, [x19, #32]
   604d0:	cbz	x0, 60518 <ZDICT_addEntropyTablesFromBuffer@@Base+0x87f4>
   604d4:	ldr	w8, [x19, #16]
   604d8:	ldr	x9, [x19, #64]
   604dc:	lsl	x8, x22, x8
   604e0:	add	x8, x28, x8
   604e4:	add	x20, x8, #0x10
   604e8:	cmp	x9, x20
   604ec:	b.cs	6050c <ZDICT_addEntropyTablesFromBuffer@@Base+0x87e8>  // b.hs, b.nlast
   604f0:	ldr	x0, [x19, #56]
   604f4:	bl	4880 <free@plt>
   604f8:	mov	x0, x20
   604fc:	str	x20, [x19, #64]
   60500:	bl	4640 <malloc@plt>
   60504:	str	x0, [x19, #56]
   60508:	cbz	x0, 60518 <ZDICT_addEntropyTablesFromBuffer@@Base+0x87f4>
   6050c:	mov	w8, #0x1                   	// #1
   60510:	cbnz	w8, 60528 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8804>
   60514:	b	6078c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a68>
   60518:	mov	x9, #0xffffffffffffffc0    	// #-64
   6051c:	mov	w8, wzr
   60520:	stur	x9, [x29, #-8]
   60524:	cbz	w8, 6078c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a68>
   60528:	mov	w8, #0x2                   	// #2
   6052c:	str	w8, [x19, #24]
   60530:	ldr	x20, [x19]
   60534:	mov	x0, x20
   60538:	bl	5fe9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8178>
   6053c:	cbz	x0, 6056c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8848>
   60540:	ldur	x9, [x29, #-16]
   60544:	mov	x28, x0
   60548:	sub	x8, x9, x27
   6054c:	cmp	x8, x0
   60550:	b.cs	6057c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8858>  // b.hs, b.nlast
   60554:	cmp	x27, x9
   60558:	b.eq	605b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8890>  // b.none
   6055c:	mov	w8, wzr
   60560:	mov	w9, #0x3                   	// #3
   60564:	str	w9, [x19, #24]
   60568:	b	605dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x88b8>
   6056c:	mov	w25, wzr
   60570:	str	wzr, [x19, #24]
   60574:	mov	w8, #0x4                   	// #4
   60578:	b	605dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x88b8>
   6057c:	ldp	x10, x8, [x19, #64]
   60580:	ldr	x9, [x19, #56]
   60584:	mov	x0, x20
   60588:	mov	x3, x27
   6058c:	sub	x2, x10, x8
   60590:	add	x1, x9, x8
   60594:	mov	x4, x28
   60598:	bl	5fea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8180>
   6059c:	mov	x20, x0
   605a0:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   605a4:	cbz	w0, 605c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x889c>
   605a8:	mov	w8, #0x1                   	// #1
   605ac:	stur	x20, [x29, #-8]
   605b0:	b	605dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x88b8>
   605b4:	mov	w25, wzr
   605b8:	mov	w8, #0x4                   	// #4
   605bc:	b	605dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x88b8>
   605c0:	add	x27, x27, x28
   605c4:	mov	w8, #0x4                   	// #4
   605c8:	cbz	x20, 605dc <ZDICT_addEntropyTablesFromBuffer@@Base+0x88b8>
   605cc:	ldr	x9, [x19, #72]
   605d0:	str	w8, [x19, #24]
   605d4:	add	x9, x9, x20
   605d8:	str	x9, [x19, #80]
   605dc:	cmp	w8, #0x4
   605e0:	b.eq	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>  // b.none
   605e4:	ldur	x0, [x29, #-8]
   605e8:	cbnz	w8, 60790 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a6c>
   605ec:	ldr	x0, [x19]
   605f0:	bl	5fe9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8178>
   605f4:	ldp	x9, x8, [x19, #40]
   605f8:	sub	x20, x0, x8
   605fc:	sub	x9, x9, x8
   60600:	cmp	x20, x9
   60604:	b.ls	60620 <ZDICT_addEntropyTablesFromBuffer@@Base+0x88fc>  // b.plast
   60608:	mov	x8, #0xffffffffffffffec    	// #-20
   6060c:	stur	x8, [x29, #-8]
   60610:	mov	w8, #0x1                   	// #1
   60614:	cmp	w8, #0x4
   60618:	b.ne	606d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x89b0>  // b.any
   6061c:	b	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>
   60620:	ldr	x9, [x19, #32]
   60624:	mov	x28, x0
   60628:	mov	x1, x20
   6062c:	mov	x2, x27
   60630:	add	x0, x9, x8
   60634:	ldur	x8, [x29, #-16]
   60638:	sub	x3, x8, x27
   6063c:	bl	607b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a8c>
   60640:	ldr	x8, [x19, #48]
   60644:	add	x27, x27, x0
   60648:	cmp	x0, x20
   6064c:	add	x8, x8, x0
   60650:	str	x8, [x19, #48]
   60654:	b.cs	6066c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8948>  // b.hs, b.nlast
   60658:	mov	w25, wzr
   6065c:	mov	w8, #0x4                   	// #4
   60660:	cmp	w8, #0x4
   60664:	b.ne	606d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x89b0>  // b.any
   60668:	b	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>
   6066c:	ldp	x10, x8, [x19, #64]
   60670:	ldr	x9, [x19, #56]
   60674:	ldr	x0, [x19]
   60678:	ldr	x3, [x19, #32]
   6067c:	sub	x2, x10, x8
   60680:	add	x1, x9, x8
   60684:	mov	x4, x28
   60688:	bl	5fea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8180>
   6068c:	mov	x20, x0
   60690:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60694:	cbz	w0, 606ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x8988>
   60698:	mov	w8, #0x1                   	// #1
   6069c:	stur	x20, [x29, #-8]
   606a0:	cmp	w8, #0x4
   606a4:	b.ne	606d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x89b0>  // b.any
   606a8:	b	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>
   606ac:	str	xzr, [x19, #48]
   606b0:	cbz	x20, 60740 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a1c>
   606b4:	ldr	x9, [x19, #72]
   606b8:	mov	w8, wzr
   606bc:	add	x9, x9, x20
   606c0:	str	x9, [x19, #80]
   606c4:	mov	w9, #0x4                   	// #4
   606c8:	str	w9, [x19, #24]
   606cc:	cmp	w8, #0x4
   606d0:	b.eq	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>  // b.none
   606d4:	ldur	x0, [x29, #-8]
   606d8:	cbnz	w8, 60790 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a6c>
   606dc:	ldp	x9, x8, [x19, #72]
   606e0:	ldr	x10, [x19, #56]
   606e4:	ldur	x11, [x29, #-24]
   606e8:	mov	x0, x26
   606ec:	sub	x20, x8, x9
   606f0:	add	x2, x10, x9
   606f4:	sub	x1, x11, x26
   606f8:	mov	x3, x20
   606fc:	bl	607b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a8c>
   60700:	ldr	x8, [x19, #72]
   60704:	add	x26, x26, x0
   60708:	cmp	x0, x20
   6070c:	add	x8, x8, x0
   60710:	str	x8, [x19, #72]
   60714:	b.ne	602f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d0>  // b.any
   60718:	ldr	x9, [x19, #88]
   6071c:	ldr	x10, [x19, #64]
   60720:	add	x8, x9, x8
   60724:	cmp	x8, x10
   60728:	mov	w8, #0x2                   	// #2
   6072c:	str	w8, [x19, #24]
   60730:	b.ls	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>  // b.plast
   60734:	ldr	x8, [sp, #32]
   60738:	stp	xzr, xzr, [x8]
   6073c:	b	602f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x85d4>
   60740:	mov	w8, #0x2                   	// #2
   60744:	str	w8, [x19, #24]
   60748:	b	6065c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8938>
   6074c:	ldp	x10, x8, [sp, #8]
   60750:	sub	x9, x26, x21
   60754:	sub	x8, x27, x8
   60758:	str	x8, [x10]
   6075c:	ldr	x8, [sp, #24]
   60760:	str	x9, [x8]
   60764:	ldr	x0, [x19]
   60768:	bl	5fe9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8178>
   6076c:	ldr	x8, [x19, #48]
   60770:	add	x9, x0, #0x3
   60774:	cmp	x0, #0x3
   60778:	csel	x9, x9, x0, hi  // hi = pmore
   6077c:	sub	x0, x9, x8
   60780:	b	60790 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a6c>
   60784:	mov	x0, #0xffffffffffffffff    	// #-1
   60788:	b	60790 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8a6c>
   6078c:	ldur	x0, [x29, #-8]
   60790:	ldp	x20, x19, [sp, #144]
   60794:	ldp	x22, x21, [sp, #128]
   60798:	ldp	x24, x23, [sp, #112]
   6079c:	ldp	x26, x25, [sp, #96]
   607a0:	ldp	x28, x27, [sp, #80]
   607a4:	ldp	x29, x30, [sp, #64]
   607a8:	add	sp, sp, #0xa0
   607ac:	ret
   607b0:	stp	x29, x30, [sp, #-32]!
   607b4:	cmp	x1, x3
   607b8:	str	x19, [sp, #16]
   607bc:	csel	x19, x1, x3, cc  // cc = lo, ul, last
   607c0:	mov	x1, x2
   607c4:	mov	x2, x19
   607c8:	mov	x29, sp
   607cc:	bl	4420 <memcpy@plt>
   607d0:	mov	x0, x19
   607d4:	ldr	x19, [sp, #16]
   607d8:	ldp	x29, x30, [sp], #32
   607dc:	ret
   607e0:	mov	w0, #0x3                   	// #3
   607e4:	movk	w0, #0x2, lsl #16
   607e8:	ret
   607ec:	mov	w0, #0x20000               	// #131072
   607f0:	ret
   607f4:	stp	x29, x30, [sp, #-32]!
   607f8:	str	x19, [sp, #16]
   607fc:	mov	x29, sp
   60800:	mov	x19, x0
   60804:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60808:	cmp	w0, #0x0
   6080c:	csneg	w0, wzr, w19, eq  // eq = none
   60810:	ldr	x19, [sp, #16]
   60814:	ldp	x29, x30, [sp], #32
   60818:	ret
   6081c:	ldr	w0, [x0]
   60820:	ret
   60824:	stp	x29, x30, [sp, #-48]!
   60828:	str	x21, [sp, #16]
   6082c:	stp	x20, x19, [sp, #32]
   60830:	mov	x19, x2
   60834:	mov	x20, x1
   60838:	ldrh	w1, [x19], #4
   6083c:	mov	x21, x0
   60840:	mov	x0, x20
   60844:	mov	x29, sp
   60848:	bl	6090c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8be8>
   6084c:	str	x0, [x21]
   60850:	mov	x0, x20
   60854:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   60858:	str	x19, [x21, #8]
   6085c:	ldp	x20, x19, [sp, #32]
   60860:	ldr	x21, [sp, #16]
   60864:	ldp	x29, x30, [sp], #48
   60868:	ret
   6086c:	stp	x29, x30, [sp, #-48]!
   60870:	str	x21, [sp, #16]
   60874:	stp	x20, x19, [sp, #32]
   60878:	ldp	x9, x8, [x0]
   6087c:	mov	x19, x0
   60880:	mov	x0, x1
   60884:	mov	x29, sp
   60888:	add	x9, x8, x9, lsl #2
   6088c:	ldrb	w8, [x9, #3]
   60890:	ldrh	w21, [x9]
   60894:	ldrb	w20, [x9, #2]
   60898:	mov	w1, w8
   6089c:	bl	6097c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c58>
   608a0:	add	x8, x0, x21
   608a4:	str	x8, [x19]
   608a8:	mov	w0, w20
   608ac:	ldp	x20, x19, [sp, #32]
   608b0:	ldr	x21, [sp, #16]
   608b4:	ldp	x29, x30, [sp], #48
   608b8:	ret
   608bc:	stp	x29, x30, [sp, #-48]!
   608c0:	str	x21, [sp, #16]
   608c4:	stp	x20, x19, [sp, #32]
   608c8:	ldp	x9, x8, [x0]
   608cc:	mov	x19, x0
   608d0:	mov	x0, x1
   608d4:	mov	x29, sp
   608d8:	add	x9, x8, x9, lsl #2
   608dc:	ldrb	w8, [x9, #3]
   608e0:	ldrh	w21, [x9]
   608e4:	ldrb	w20, [x9, #2]
   608e8:	mov	w1, w8
   608ec:	bl	6090c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8be8>
   608f0:	add	x8, x0, x21
   608f4:	str	x8, [x19]
   608f8:	mov	w0, w20
   608fc:	ldp	x20, x19, [sp, #32]
   60900:	ldr	x21, [sp, #16]
   60904:	ldp	x29, x30, [sp], #48
   60908:	ret
   6090c:	stp	x29, x30, [sp, #-48]!
   60910:	str	x21, [sp, #16]
   60914:	stp	x20, x19, [sp, #32]
   60918:	mov	x29, sp
   6091c:	mov	w19, w1
   60920:	mov	x20, x0
   60924:	bl	6094c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c28>
   60928:	mov	x21, x0
   6092c:	mov	x0, x20
   60930:	mov	w1, w19
   60934:	bl	6096c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c48>
   60938:	mov	x0, x21
   6093c:	ldp	x20, x19, [sp, #32]
   60940:	ldr	x21, [sp, #16]
   60944:	ldp	x29, x30, [sp], #48
   60948:	ret
   6094c:	ldr	x8, [x0]
   60950:	ldr	w9, [x0, #8]
   60954:	mov	w10, #0x3f                  	// #63
   60958:	lsl	x8, x8, x9
   6095c:	lsr	x8, x8, #1
   60960:	sub	w9, w10, w1
   60964:	lsr	x0, x8, x9
   60968:	ret
   6096c:	ldr	w8, [x0, #8]
   60970:	add	w8, w8, w1
   60974:	str	w8, [x0, #8]
   60978:	ret
   6097c:	stp	x29, x30, [sp, #-48]!
   60980:	str	x21, [sp, #16]
   60984:	stp	x20, x19, [sp, #32]
   60988:	mov	x29, sp
   6098c:	mov	w19, w1
   60990:	mov	x20, x0
   60994:	bl	609bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c98>
   60998:	mov	x21, x0
   6099c:	mov	x0, x20
   609a0:	mov	w1, w19
   609a4:	bl	6096c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c48>
   609a8:	mov	x0, x21
   609ac:	ldp	x20, x19, [sp, #32]
   609b0:	ldr	x21, [sp, #16]
   609b4:	ldp	x29, x30, [sp], #48
   609b8:	ret
   609bc:	ldr	x8, [x0]
   609c0:	ldr	w9, [x0, #8]
   609c4:	lsl	x8, x8, x9
   609c8:	neg	w9, w1
   609cc:	lsr	x0, x8, x9
   609d0:	ret
   609d4:	stp	x29, x30, [sp, #-16]!
   609d8:	mov	x29, sp
   609dc:	bl	5f7f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7ad0>
   609e0:	ldp	x29, x30, [sp], #16
   609e4:	ret
   609e8:	ldrh	w0, [x0]
   609ec:	ret
   609f0:	sub	sp, sp, #0xd0
   609f4:	stp	x29, x30, [sp, #112]
   609f8:	stp	x28, x27, [sp, #128]
   609fc:	stp	x26, x25, [sp, #144]
   60a00:	stp	x24, x23, [sp, #160]
   60a04:	stp	x22, x21, [sp, #176]
   60a08:	stp	x20, x19, [sp, #192]
   60a0c:	ldr	q0, [x3]
   60a10:	add	x29, sp, #0x70
   60a14:	str	w7, [sp, #28]
   60a18:	str	x5, [sp, #16]
   60a1c:	str	w1, [sp, #12]
   60a20:	str	q0, [sp, #32]
   60a24:	ldp	q0, q1, [x3, #16]
   60a28:	ldr	w8, [x3, #64]
   60a2c:	ldr	q2, [x3, #48]
   60a30:	ldrh	w24, [x29, #96]
   60a34:	mov	w25, w6
   60a38:	mov	w21, w2
   60a3c:	mov	x23, x0
   60a40:	cmp	w4, #0x2
   60a44:	str	w8, [sp, #96]
   60a48:	stp	q1, q2, [sp, #64]
   60a4c:	str	q0, [sp, #48]
   60a50:	b.lt	60a8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d68>  // b.tstop
   60a54:	add	x8, sp, #0x20
   60a58:	ldr	w26, [x8, w4, sxtw #2]
   60a5c:	sub	x0, x29, #0x4
   60a60:	mov	w1, w24
   60a64:	bl	60b30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e0c>
   60a68:	mov	w8, #0x1                   	// #1
   60a6c:	sturb	w21, [x29, #-2]
   60a70:	sturb	w8, [x29, #-1]
   60a74:	cbz	w26, 60a8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d68>
   60a78:	ldur	w8, [x29, #-4]
   60a7c:	mov	x9, x23
   60a80:	subs	x26, x26, #0x1
   60a84:	str	w8, [x9], #4
   60a88:	b.ne	60a80 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d5c>  // b.any
   60a8c:	cbz	w25, 60b10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dec>
   60a90:	mov	x26, xzr
   60a94:	mov	w25, w25
   60a98:	add	x28, sp, #0x20
   60a9c:	ldr	x8, [sp, #16]
   60aa0:	ldr	w9, [sp, #28]
   60aa4:	mov	w10, #0x1                   	// #1
   60aa8:	sub	x0, x29, #0x4
   60aac:	add	x8, x8, x26, lsl #1
   60ab0:	ldrb	w27, [x8, #1]
   60ab4:	ldrb	w8, [x8]
   60ab8:	sub	w22, w9, w27
   60abc:	ldr	w9, [sp, #12]
   60ac0:	ldr	w20, [x28, x27, lsl #2]
   60ac4:	add	w1, w24, w8, lsl #8
   60ac8:	sub	w9, w9, w22
   60acc:	lsl	w9, w10, w9
   60ad0:	add	w19, w9, w20
   60ad4:	bl	60b30 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e0c>
   60ad8:	add	w8, w22, w21
   60adc:	sturb	w8, [x29, #-2]
   60ae0:	mov	w8, #0x2                   	// #2
   60ae4:	sturb	w8, [x29, #-1]
   60ae8:	ldur	w8, [x29, #-4]
   60aec:	add	w9, w20, #0x1
   60af0:	cmp	w9, w19
   60af4:	str	w8, [x23, w20, uxtw #2]
   60af8:	mov	w20, w9
   60afc:	b.cc	60aec <ZDICT_addEntropyTablesFromBuffer@@Base+0x8dc8>  // b.lo, b.ul, b.last
   60b00:	add	x26, x26, #0x1
   60b04:	cmp	x26, x25
   60b08:	str	w19, [x28, x27, lsl #2]
   60b0c:	b.ne	60a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8d78>  // b.any
   60b10:	ldp	x20, x19, [sp, #192]
   60b14:	ldp	x22, x21, [sp, #176]
   60b18:	ldp	x24, x23, [sp, #160]
   60b1c:	ldp	x26, x25, [sp, #144]
   60b20:	ldp	x28, x27, [sp, #128]
   60b24:	ldp	x29, x30, [sp, #112]
   60b28:	add	sp, sp, #0xd0
   60b2c:	ret
   60b30:	stp	x29, x30, [sp, #-16]!
   60b34:	mov	x29, sp
   60b38:	bl	60b44 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e20>
   60b3c:	ldp	x29, x30, [sp], #16
   60b40:	ret
   60b44:	strh	w1, [x0]
   60b48:	ret
   60b4c:	stp	x29, x30, [sp, #-48]!
   60b50:	str	x21, [sp, #16]
   60b54:	stp	x20, x19, [sp, #32]
   60b58:	mov	x19, x1
   60b5c:	mov	x21, x0
   60b60:	mov	x0, x1
   60b64:	mov	w1, w3
   60b68:	mov	x29, sp
   60b6c:	mov	x20, x2
   60b70:	bl	609bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c98>
   60b74:	add	x8, x20, x0, lsl #2
   60b78:	ldrb	w9, [x8]
   60b7c:	strb	w9, [x21]
   60b80:	ldrb	w9, [x8, #3]
   60b84:	cmp	w9, #0x1
   60b88:	b.ne	60b9c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8e78>  // b.any
   60b8c:	ldrb	w1, [x8, #2]
   60b90:	mov	x0, x19
   60b94:	bl	6096c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c48>
   60b98:	b	60bcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ea8>
   60b9c:	ldr	w8, [x19, #8]
   60ba0:	cmp	w8, #0x3f
   60ba4:	b.hi	60bcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ea8>  // b.pmore
   60ba8:	add	x8, x20, x0, lsl #2
   60bac:	ldrb	w1, [x8, #2]
   60bb0:	mov	x0, x19
   60bb4:	bl	6096c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8c48>
   60bb8:	ldr	w8, [x19, #8]
   60bbc:	cmp	w8, #0x41
   60bc0:	b.cc	60bcc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ea8>  // b.lo, b.ul, b.last
   60bc4:	mov	w8, #0x40                  	// #64
   60bc8:	str	w8, [x19, #8]
   60bcc:	ldp	x20, x19, [sp, #32]
   60bd0:	ldr	x21, [sp, #16]
   60bd4:	ldp	x29, x30, [sp], #48
   60bd8:	ret
   60bdc:	ldr	x0, [x0]
   60be0:	ret
   60be4:	stp	x29, x30, [sp, #-48]!
   60be8:	cmp	x2, #0x3
   60bec:	stp	x22, x21, [sp, #16]
   60bf0:	stp	x20, x19, [sp, #32]
   60bf4:	mov	x29, sp
   60bf8:	b.cs	60c14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ef0>  // b.hs, b.nlast
   60bfc:	mov	x20, #0xffffffffffffffec    	// #-20
   60c00:	mov	x0, x20
   60c04:	ldp	x20, x19, [sp, #32]
   60c08:	ldp	x22, x21, [sp, #16]
   60c0c:	ldp	x29, x30, [sp], #48
   60c10:	ret
   60c14:	ldrb	w8, [x1]
   60c18:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   60c1c:	add	x10, x10, #0x684
   60c20:	mov	x19, x0
   60c24:	lsr	x9, x8, #6
   60c28:	adr	x11, 60c38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8f14>
   60c2c:	ldrb	w12, [x10, x9]
   60c30:	add	x11, x11, x12, lsl #2
   60c34:	br	x11
   60c38:	cmp	x2, #0x5
   60c3c:	b.cc	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.lo, b.ul, b.last
   60c40:	ubfx	w9, w8, #4, #2
   60c44:	cmp	w9, #0x2
   60c48:	b.eq	60e1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x90f8>  // b.none
   60c4c:	cmp	w9, #0x3
   60c50:	b.ne	60e4c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9128>  // b.any
   60c54:	ldrb	w11, [x1, #1]
   60c58:	ldrb	w12, [x1, #3]
   60c5c:	ldrb	w13, [x1, #2]
   60c60:	ubfiz	w8, w8, #14, #4
   60c64:	bfi	w8, w11, #6, #8
   60c68:	lsl	w11, w12, #8
   60c6c:	mov	x9, xzr
   60c70:	mov	w10, #0x5                   	// #5
   60c74:	orr	w21, w8, w13, lsr #2
   60c78:	bfi	w11, w13, #16, #2
   60c7c:	mov	w8, #0x4                   	// #4
   60c80:	cmp	w21, #0x20, lsl #12
   60c84:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60c88:	b	60e70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x914c>
   60c8c:	and	w9, w8, #0x30
   60c90:	cmp	w9, #0x10
   60c94:	b.ne	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.any
   60c98:	mov	w9, #0x5458                	// #21592
   60c9c:	ldr	w9, [x19, x9]
   60ca0:	cbz	w9, 60e14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x90f0>
   60ca4:	ldrb	w9, [x1, #1]
   60ca8:	ldrb	w10, [x1, #2]
   60cac:	lsl	w11, w9, #8
   60cb0:	and	x11, x11, #0x300
   60cb4:	orr	x3, x11, x10
   60cb8:	add	x20, x3, #0x3
   60cbc:	cmp	x20, x2
   60cc0:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60cc4:	lsl	w8, w8, #6
   60cc8:	mov	w10, #0x5470                	// #21616
   60ccc:	and	x8, x8, #0x3c0
   60cd0:	mov	w11, #0x140c                	// #5132
   60cd4:	add	x22, x19, x10
   60cd8:	orr	x21, x8, x9, lsr #2
   60cdc:	add	x2, x1, #0x3
   60ce0:	add	x4, x19, x11
   60ce4:	mov	x0, x22
   60ce8:	mov	x1, x21
   60cec:	bl	5ed48 <ZDICT_addEntropyTablesFromBuffer@@Base+0x7024>
   60cf0:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60cf4:	cbnz	w0, 60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>
   60cf8:	b	60eb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x918c>
   60cfc:	ubfx	w9, w8, #4, #2
   60d00:	cmp	w9, #0x2
   60d04:	b.eq	60d64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9040>  // b.none
   60d08:	cmp	w9, #0x3
   60d0c:	b.ne	60d70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x904c>  // b.any
   60d10:	ldrb	w10, [x1, #1]
   60d14:	ldrb	w11, [x1, #2]
   60d18:	ubfiz	w8, w8, #16, #4
   60d1c:	bfi	w8, w10, #8, #8
   60d20:	orr	w21, w8, w11
   60d24:	b	60d78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9054>
   60d28:	ubfx	w21, w8, #4, #2
   60d2c:	cmp	w21, #0x2
   60d30:	b.eq	60dc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x90a4>  // b.none
   60d34:	cmp	w21, #0x3
   60d38:	b.ne	60ddc <ZDICT_addEntropyTablesFromBuffer@@Base+0x90b8>  // b.any
   60d3c:	cmp	x2, #0x4
   60d40:	b.cc	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.lo, b.ul, b.last
   60d44:	ldrb	w9, [x1, #1]
   60d48:	ldrb	w10, [x1, #2]
   60d4c:	ubfiz	w8, w8, #16, #4
   60d50:	bfi	w8, w9, #8, #8
   60d54:	orr	w22, w8, w10
   60d58:	cmp	w22, #0x20, lsl #12
   60d5c:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60d60:	b	60dec <ZDICT_addEntropyTablesFromBuffer@@Base+0x90c8>
   60d64:	ldrb	w21, [x1, #1]
   60d68:	bfi	w21, w8, #8, #4
   60d6c:	b	60d78 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9054>
   60d70:	and	w21, w8, #0x1f
   60d74:	mov	w9, #0x1                   	// #1
   60d78:	add	x20, x9, x21
   60d7c:	add	x8, x20, #0x8
   60d80:	cmp	x8, x2
   60d84:	b.ls	60db8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9094>  // b.plast
   60d88:	cmp	x20, x2
   60d8c:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60d90:	mov	w8, #0x5470                	// #21616
   60d94:	add	x22, x19, x8
   60d98:	add	x1, x1, x9
   60d9c:	mov	x0, x22
   60da0:	mov	x2, x21
   60da4:	bl	4420 <memcpy@plt>
   60da8:	str	x22, [x19, #21600]
   60dac:	str	x21, [x19, #21608]
   60db0:	str	xzr, [x22, x21]
   60db4:	b	60c00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8edc>
   60db8:	add	x8, x1, x9
   60dbc:	str	x8, [x19, #21600]
   60dc0:	str	x21, [x19, #21608]
   60dc4:	b	60c00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8edc>
   60dc8:	ldrb	w22, [x1, #1]
   60dcc:	bfi	w22, w8, #8, #4
   60dd0:	cmp	w22, #0x20, lsl #12
   60dd4:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60dd8:	b	60dec <ZDICT_addEntropyTablesFromBuffer@@Base+0x90c8>
   60ddc:	and	w22, w8, #0x1f
   60de0:	mov	w21, #0x1                   	// #1
   60de4:	cmp	w22, #0x20, lsl #12
   60de8:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60dec:	ldrb	w1, [x1, w21, uxtw]
   60df0:	mov	w8, #0x5470                	// #21616
   60df4:	add	x20, x19, x8
   60df8:	add	x2, x22, #0x8
   60dfc:	mov	x0, x20
   60e00:	bl	46a0 <memset@plt>
   60e04:	str	x20, [x19, #21600]
   60e08:	add	w20, w21, #0x1
   60e0c:	str	x22, [x19, #21608]
   60e10:	b	60c00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8edc>
   60e14:	mov	x20, #0xffffffffffffffe2    	// #-30
   60e18:	b	60c00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8edc>
   60e1c:	ldrb	w11, [x1, #1]
   60e20:	ldrb	w12, [x1, #2]
   60e24:	ubfiz	w8, w8, #10, #4
   60e28:	mov	x9, xzr
   60e2c:	bfi	w8, w11, #2, #8
   60e30:	mov	w10, #0x4                   	// #4
   60e34:	ubfiz	w11, w12, #8, #6
   60e38:	orr	w21, w8, w12, lsr #6
   60e3c:	mov	w8, #0x3                   	// #3
   60e40:	cmp	w21, #0x20, lsl #12
   60e44:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60e48:	b	60e70 <ZDICT_addEntropyTablesFromBuffer@@Base+0x914c>
   60e4c:	ldrb	w11, [x1, #1]
   60e50:	and	x9, x8, #0x10
   60e54:	mov	w10, #0x3                   	// #3
   60e58:	lsr	w21, w11, #2
   60e5c:	ubfiz	w11, w11, #8, #2
   60e60:	bfi	w21, w8, #6, #4
   60e64:	mov	w8, #0x2                   	// #2
   60e68:	cmp	w21, #0x20, lsl #12
   60e6c:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60e70:	ldrb	w8, [x1, x8]
   60e74:	orr	x3, x11, x8
   60e78:	add	x20, x10, x3
   60e7c:	cmp	x20, x2
   60e80:	b.hi	60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>  // b.pmore
   60e84:	mov	w8, #0x5470                	// #21616
   60e88:	add	x22, x19, x8
   60e8c:	add	x2, x1, x10
   60e90:	mov	x0, x22
   60e94:	mov	x1, x21
   60e98:	cbz	x9, 60ea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9180>
   60e9c:	bl	5e338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6614>
   60ea0:	b	60ea8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9184>
   60ea4:	bl	5f4f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x77cc>
   60ea8:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60eac:	cbnz	w0, 60bfc <ZDICT_addEntropyTablesFromBuffer@@Base+0x8ed8>
   60eb0:	add	x8, x19, x21
   60eb4:	str	x22, [x19, #21600]
   60eb8:	str	x21, [x19, #21608]
   60ebc:	str	xzr, [x8, #21616]
   60ec0:	b	60c00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8edc>
   60ec4:	sub	sp, sp, #0x140
   60ec8:	stp	x29, x30, [sp, #224]
   60ecc:	stp	x28, x27, [sp, #240]
   60ed0:	stp	x26, x25, [sp, #256]
   60ed4:	stp	x24, x23, [sp, #272]
   60ed8:	stp	x22, x21, [sp, #288]
   60edc:	stp	x20, x19, [sp, #304]
   60ee0:	ldr	x21, [x0, #21600]
   60ee4:	add	x29, sp, #0xe0
   60ee8:	mov	w8, #0x5458                	// #21592
   60eec:	add	x24, x0, x8
   60ef0:	stur	x21, [x29, #-16]
   60ef4:	ldr	x8, [x0, #21528]
   60ef8:	ldr	x22, [x0, #21608]
   60efc:	mov	x23, x4
   60f00:	mov	x25, x3
   60f04:	stp	x8, x1, [sp, #32]
   60f08:	ldr	x8, [x0, #21536]
   60f0c:	ldr	w4, [x24]
   60f10:	mov	x27, x0
   60f14:	add	x28, x0, #0xc08
   60f18:	str	x8, [sp, #24]
   60f1c:	ldr	x8, [x0, #21544]
   60f20:	add	x19, x0, #0x804
   60f24:	mov	x26, x2
   60f28:	sub	x0, x29, #0x14
   60f2c:	mov	x1, x27
   60f30:	mov	x2, x28
   60f34:	mov	x3, x19
   60f38:	mov	x5, x25
   60f3c:	mov	x6, x23
   60f40:	str	x8, [sp, #16]
   60f44:	bl	6114c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9428>
   60f48:	mov	x20, x0
   60f4c:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60f50:	cbz	w0, 60f64 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9240>
   60f54:	mov	w8, wzr
   60f58:	mov	x1, x25
   60f5c:	cbnz	w8, 60f74 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9250>
   60f60:	b	61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   60f64:	add	x1, x25, x20
   60f68:	mov	w8, #0x1                   	// #1
   60f6c:	str	wzr, [x24]
   60f70:	cbz	w8, 61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   60f74:	ldr	x9, [sp, #40]
   60f78:	ldur	w8, [x29, #-20]
   60f7c:	add	x10, x21, x22
   60f80:	str	x10, [sp, #8]
   60f84:	add	x24, x9, x26
   60f88:	mov	x26, x9
   60f8c:	cbz	w8, 610d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93ac>
   60f90:	add	x8, x25, x23
   60f94:	mov	w9, #0x1                   	// #1
   60f98:	mov	w10, #0x50                  	// #80
   60f9c:	add	x11, sp, #0x48
   60fa0:	stp	xzr, xzr, [x29, #-48]
   60fa4:	stur	x9, [x29, #-32]
   60fa8:	str	x9, [x11, x10]
   60fac:	add	x10, x10, #0x8
   60fb0:	cmp	x10, #0x68
   60fb4:	b.ne	60fa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9284>  // b.any
   60fb8:	sub	x2, x8, x1
   60fbc:	add	x0, sp, #0x48
   60fc0:	add	x21, sp, #0x48
   60fc4:	bl	5e0b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6394>
   60fc8:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   60fcc:	cmp	w0, #0x0
   60fd0:	mov	x9, #0xffffffffffffffec    	// #-20
   60fd4:	cset	w8, ne  // ne = any
   60fd8:	csel	x20, x20, x9, eq  // eq = none
   60fdc:	cbz	w0, 60fec <ZDICT_addEntropyTablesFromBuffer@@Base+0x92c8>
   60fe0:	ldr	x26, [sp, #40]
   60fe4:	tbz	w8, #0, 610d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93ac>
   60fe8:	b	61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   60fec:	add	x0, x21, #0x20
   60ff0:	add	x1, sp, #0x48
   60ff4:	mov	x2, x27
   60ff8:	bl	60824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b00>
   60ffc:	add	x0, x21, #0x30
   61000:	add	x1, sp, #0x48
   61004:	mov	x2, x19
   61008:	bl	60824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b00>
   6100c:	add	x0, x21, #0x40
   61010:	add	x1, sp, #0x48
   61014:	mov	x2, x28
   61018:	bl	60824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x8b00>
   6101c:	ldur	w23, [x29, #-20]
   61020:	ldp	x21, x26, [sp, #32]
   61024:	ldp	x25, x22, [sp, #16]
   61028:	ldr	x27, [sp, #8]
   6102c:	add	x0, sp, #0x48
   61030:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   61034:	cmp	w23, #0x0
   61038:	cset	w8, ne  // ne = any
   6103c:	cmp	w0, #0x2
   61040:	b.hi	610bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9398>  // b.pmore
   61044:	cbz	w23, 610bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9398>
   61048:	sub	x0, x29, #0x30
   6104c:	add	x1, sp, #0x48
   61050:	sub	w23, w23, #0x1
   61054:	bl	61344 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9620>
   61058:	ldur	q0, [x29, #-48]
   6105c:	ldur	x8, [x29, #-32]
   61060:	add	x2, sp, #0x30
   61064:	sub	x3, x29, #0x10
   61068:	mov	x0, x26
   6106c:	mov	x1, x24
   61070:	mov	x4, x27
   61074:	mov	x5, x21
   61078:	mov	x6, x22
   6107c:	mov	x7, x25
   61080:	str	q0, [sp, #48]
   61084:	str	x8, [sp, #64]
   61088:	bl	614f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x97d4>
   6108c:	mov	x19, x0
   61090:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61094:	add	x8, x26, x19
   61098:	cmp	w0, #0x0
   6109c:	csel	x26, x8, x26, eq  // eq = none
   610a0:	csel	x20, x20, x19, eq  // eq = none
   610a4:	cbz	w0, 6102c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9308>
   610a8:	cmp	w0, #0x0
   610ac:	cset	w8, ne  // ne = any
   610b0:	stur	w23, [x29, #-20]
   610b4:	tbz	w8, #0, 610d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93ac>
   610b8:	b	61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   610bc:	cmp	w23, #0x0
   610c0:	mov	x9, #0xffffffffffffffec    	// #-20
   610c4:	stur	w23, [x29, #-20]
   610c8:	csel	x20, x9, x20, ne  // ne = any
   610cc:	tbnz	w8, #0, 61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   610d0:	ldur	x1, [x29, #-16]
   610d4:	ldr	x8, [sp, #8]
   610d8:	subs	x2, x8, x1
   610dc:	b.cs	610f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93cc>  // b.hs, b.nlast
   610e0:	mov	w8, wzr
   610e4:	mov	x20, #0xffffffffffffffec    	// #-20
   610e8:	cbnz	w8, 61120 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93fc>
   610ec:	b	61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   610f0:	add	x19, x26, x2
   610f4:	cmp	x19, x24
   610f8:	b.ls	6110c <ZDICT_addEntropyTablesFromBuffer@@Base+0x93e8>  // b.plast
   610fc:	mov	w8, wzr
   61100:	mov	x20, #0xffffffffffffffba    	// #-70
   61104:	cbnz	w8, 61120 <ZDICT_addEntropyTablesFromBuffer@@Base+0x93fc>
   61108:	b	61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   6110c:	mov	x0, x26
   61110:	bl	4420 <memcpy@plt>
   61114:	mov	w8, #0x1                   	// #1
   61118:	mov	x26, x19
   6111c:	cbz	w8, 61128 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9404>
   61120:	ldr	x8, [sp, #40]
   61124:	sub	x20, x26, x8
   61128:	mov	x0, x20
   6112c:	ldp	x20, x19, [sp, #304]
   61130:	ldp	x22, x21, [sp, #288]
   61134:	ldp	x24, x23, [sp, #272]
   61138:	ldp	x26, x25, [sp, #256]
   6113c:	ldp	x28, x27, [sp, #240]
   61140:	ldp	x29, x30, [sp, #224]
   61144:	add	sp, sp, #0x140
   61148:	ret
   6114c:	sub	sp, sp, #0x70
   61150:	stp	x29, x30, [sp, #16]
   61154:	stp	x28, x27, [sp, #32]
   61158:	stp	x26, x25, [sp, #48]
   6115c:	stp	x24, x23, [sp, #64]
   61160:	stp	x22, x21, [sp, #80]
   61164:	stp	x20, x19, [sp, #96]
   61168:	add	x29, sp, #0x10
   6116c:	cbz	x6, 61208 <ZDICT_addEntropyTablesFromBuffer@@Base+0x94e4>
   61170:	mov	x25, x5
   61174:	ldrb	w8, [x25], #1
   61178:	mov	x26, x6
   6117c:	mov	x19, x5
   61180:	mov	w20, w4
   61184:	mov	x23, x3
   61188:	mov	x21, x2
   6118c:	mov	x24, x1
   61190:	mov	x22, x0
   61194:	cbz	w8, 611b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x948c>
   61198:	sxtb	w9, w8
   6119c:	tbnz	w9, #31, 611c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x949c>
   611a0:	str	w8, [x22]
   611a4:	mov	w8, #0x1                   	// #1
   611a8:	cbnz	w8, 611f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x94d4>
   611ac:	b	6120c <ZDICT_addEntropyTablesFromBuffer@@Base+0x94e8>
   611b0:	str	wzr, [x22]
   611b4:	mov	w22, #0x1                   	// #1
   611b8:	cbnz	w8, 611f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x94d4>
   611bc:	b	6120c <ZDICT_addEntropyTablesFromBuffer@@Base+0x94e8>
   611c0:	cmp	w8, #0xff
   611c4:	b.eq	611e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x94c0>  // b.none
   611c8:	cmp	x26, #0x2
   611cc:	b.lt	611ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x94c8>  // b.tstop
   611d0:	ldrb	w9, [x19, #1]
   611d4:	add	x25, x19, #0x2
   611d8:	bfi	w9, w8, #8, #8
   611dc:	sub	w8, w9, #0x8, lsl #12
   611e0:	b	611a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x947c>
   611e4:	cmp	x26, #0x3
   611e8:	b.ge	61328 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9604>  // b.tcont
   611ec:	mov	w8, wzr
   611f0:	mov	x22, #0xffffffffffffffb8    	// #-72
   611f4:	cbz	w8, 6120c <ZDICT_addEntropyTablesFromBuffer@@Base+0x94e8>
   611f8:	add	x26, x19, x26
   611fc:	add	x8, x25, #0x4
   61200:	cmp	x8, x26
   61204:	b.ls	61230 <ZDICT_addEntropyTablesFromBuffer@@Base+0x950c>  // b.plast
   61208:	mov	x22, #0xffffffffffffffb8    	// #-72
   6120c:	mov	x0, x22
   61210:	ldp	x20, x19, [sp, #96]
   61214:	ldp	x22, x21, [sp, #80]
   61218:	ldp	x24, x23, [sp, #64]
   6121c:	ldp	x26, x25, [sp, #48]
   61220:	ldp	x28, x27, [sp, #32]
   61224:	ldp	x29, x30, [sp, #16]
   61228:	add	sp, sp, #0x70
   6122c:	ret
   61230:	ldrb	w27, [x25], #1
   61234:	adrp	x6, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   61238:	add	x6, x6, #0x840
   6123c:	mov	w2, #0x23                  	// #35
   61240:	lsr	w1, w27, #6
   61244:	sub	x5, x26, x25
   61248:	mov	w3, #0x9                   	// #9
   6124c:	mov	w7, #0x6                   	// #6
   61250:	mov	x0, x24
   61254:	mov	x4, x25
   61258:	str	w20, [sp]
   6125c:	bl	6173c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a18>
   61260:	mov	x24, x0
   61264:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61268:	cmp	w0, #0x0
   6126c:	add	x9, x25, x24
   61270:	mov	x28, #0xffffffffffffffec    	// #-20
   61274:	cset	w8, eq  // eq = none
   61278:	csel	x24, x9, x25, eq  // eq = none
   6127c:	csel	x22, x22, x28, eq  // eq = none
   61280:	cbnz	w0, 6131c <ZDICT_addEntropyTablesFromBuffer@@Base+0x95f8>
   61284:	adrp	x6, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   61288:	ubfx	w1, w27, #4, #2
   6128c:	sub	x5, x26, x24
   61290:	add	x6, x6, #0x888
   61294:	mov	w2, #0x1c                  	// #28
   61298:	mov	w3, #0x8                   	// #8
   6129c:	mov	w7, #0x5                   	// #5
   612a0:	mov	x0, x23
   612a4:	mov	x4, x24
   612a8:	str	w20, [sp]
   612ac:	bl	6173c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a18>
   612b0:	mov	x23, x0
   612b4:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   612b8:	cmp	w0, #0x0
   612bc:	add	x9, x24, x23
   612c0:	cset	w8, eq  // eq = none
   612c4:	csel	x24, x9, x24, eq  // eq = none
   612c8:	csel	x22, x22, x28, eq  // eq = none
   612cc:	cbnz	w0, 6131c <ZDICT_addEntropyTablesFromBuffer@@Base+0x95f8>
   612d0:	adrp	x6, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   612d4:	ubfx	w1, w27, #2, #2
   612d8:	sub	x5, x26, x24
   612dc:	add	x6, x6, #0x8c2
   612e0:	mov	w2, #0x34                  	// #52
   612e4:	mov	w3, #0x9                   	// #9
   612e8:	mov	w7, #0x6                   	// #6
   612ec:	mov	x0, x21
   612f0:	mov	x4, x24
   612f4:	str	w20, [sp]
   612f8:	bl	6173c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a18>
   612fc:	mov	x20, x0
   61300:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61304:	cmp	w0, #0x0
   61308:	add	x9, x24, x20
   6130c:	mov	x10, #0xffffffffffffffec    	// #-20
   61310:	cset	w8, eq  // eq = none
   61314:	csel	x24, x9, x24, eq  // eq = none
   61318:	csel	x22, x22, x10, eq  // eq = none
   6131c:	cbz	w8, 6120c <ZDICT_addEntropyTablesFromBuffer@@Base+0x94e8>
   61320:	sub	x22, x24, x19
   61324:	b	6120c <ZDICT_addEntropyTablesFromBuffer@@Base+0x94e8>
   61328:	mov	x0, x25
   6132c:	add	x27, x19, #0x3
   61330:	bl	5e80c <ZDICT_addEntropyTablesFromBuffer@@Base+0x6ae8>
   61334:	mov	w8, #0x7f00                	// #32512
   61338:	add	w8, w8, w0, uxth
   6133c:	mov	x25, x27
   61340:	b	611a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x947c>
   61344:	stp	x29, x30, [sp, #-96]!
   61348:	stp	x20, x19, [sp, #80]
   6134c:	add	x20, x1, #0x20
   61350:	stp	x24, x23, [sp, #48]
   61354:	mov	x23, x0
   61358:	mov	x0, x20
   6135c:	stp	x28, x27, [sp, #16]
   61360:	stp	x26, x25, [sp, #32]
   61364:	stp	x22, x21, [sp, #64]
   61368:	mov	x29, sp
   6136c:	mov	x19, x1
   61370:	bl	61824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b00>
   61374:	add	x21, x19, #0x40
   61378:	mov	w24, w0
   6137c:	mov	x0, x21
   61380:	bl	61824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b00>
   61384:	add	x22, x19, #0x30
   61388:	mov	w26, w0
   6138c:	mov	x0, x22
   61390:	bl	61824 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b00>
   61394:	and	x27, x24, #0xff
   61398:	adrp	x24, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   6139c:	ands	w25, w0, #0xff
   613a0:	add	x24, x24, #0x92c
   613a4:	and	x28, x26, #0xff
   613a8:	b.eq	613cc <ZDICT_addEntropyTablesFromBuffer@@Base+0x96a8>  // b.none
   613ac:	adrp	x8, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   613b0:	add	x8, x8, #0xbf4
   613b4:	ldr	w26, [x8, w25, uxtw #2]
   613b8:	mov	x0, x19
   613bc:	mov	w1, w25
   613c0:	bl	6090c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8be8>
   613c4:	add	x10, x0, x26
   613c8:	b	613d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x96ac>
   613cc:	mov	x10, xzr
   613d0:	ldr	w24, [x24, x27, lsl #2]
   613d4:	adrp	x8, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   613d8:	subs	x9, x10, #0x2
   613dc:	add	x8, x8, #0x9bc
   613e0:	b.hi	61420 <ZDICT_addEntropyTablesFromBuffer@@Base+0x96fc>  // b.pmore
   613e4:	mov	w9, #0x1                   	// #1
   613e8:	cmp	x10, #0x2
   613ec:	sub	x9, x9, x10
   613f0:	ccmp	w27, #0x0, #0x0, ne  // ne = any
   613f4:	csel	x10, x9, x10, eq  // eq = none
   613f8:	cbz	x10, 61430 <ZDICT_addEntropyTablesFromBuffer@@Base+0x970c>
   613fc:	add	x9, x19, x10, lsl #3
   61400:	ldr	x9, [x9, #80]
   61404:	cmp	x10, #0x1
   61408:	b.eq	61414 <ZDICT_addEntropyTablesFromBuffer@@Base+0x96f0>  // b.none
   6140c:	ldr	x10, [x19, #88]
   61410:	str	x10, [x19, #96]
   61414:	ldr	x10, [x19, #80]
   61418:	stp	x9, x10, [x19, #80]
   6141c:	b	61434 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9710>
   61420:	ldp	x11, x10, [x19, #80]
   61424:	str	x9, [x19, #80]
   61428:	stp	x11, x10, [x19, #88]
   6142c:	b	61434 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9710>
   61430:	ldr	x9, [x19, #80]
   61434:	ldr	w26, [x8, x28, lsl #2]
   61438:	adrp	x8, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   6143c:	add	x8, x8, #0xb20
   61440:	ldr	w8, [x8, x28, lsl #2]
   61444:	add	w25, w24, w25
   61448:	cmp	w28, #0x20
   6144c:	str	x9, [x23, #16]
   61450:	add	w28, w8, #0x3
   61454:	b.cc	61468 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9744>  // b.lo, b.ul, b.last
   61458:	mov	x0, x19
   6145c:	mov	w1, w26
   61460:	bl	6090c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8be8>
   61464:	b	6146c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9748>
   61468:	mov	x0, xzr
   6146c:	adrp	x8, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   61470:	add	x8, x8, #0xa90
   61474:	add	w25, w25, w26
   61478:	ldr	w26, [x8, x27, lsl #2]
   6147c:	add	x8, x0, x28
   61480:	cmp	w27, #0x10
   61484:	str	x8, [x23, #8]
   61488:	b.cc	6149c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9778>  // b.lo, b.ul, b.last
   6148c:	mov	x0, x19
   61490:	mov	w1, w24
   61494:	bl	6090c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8be8>
   61498:	b	614a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x977c>
   6149c:	mov	x0, xzr
   614a0:	add	x8, x0, x26
   614a4:	cmp	w25, #0x20
   614a8:	str	x8, [x23]
   614ac:	b.cc	614b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9794>  // b.lo, b.ul, b.last
   614b0:	mov	x0, x19
   614b4:	bl	5e820 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6afc>
   614b8:	mov	x0, x20
   614bc:	mov	x1, x19
   614c0:	bl	61834 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b10>
   614c4:	mov	x0, x21
   614c8:	mov	x1, x19
   614cc:	bl	61834 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b10>
   614d0:	mov	x0, x22
   614d4:	mov	x1, x19
   614d8:	bl	61834 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b10>
   614dc:	ldp	x20, x19, [sp, #80]
   614e0:	ldp	x22, x21, [sp, #64]
   614e4:	ldp	x24, x23, [sp, #48]
   614e8:	ldp	x26, x25, [sp, #32]
   614ec:	ldp	x28, x27, [sp, #16]
   614f0:	ldp	x29, x30, [sp], #96
   614f4:	ret
   614f8:	sub	sp, sp, #0x80
   614fc:	stp	x29, x30, [sp, #32]
   61500:	stp	x28, x27, [sp, #48]
   61504:	stp	x26, x25, [sp, #64]
   61508:	stp	x24, x23, [sp, #80]
   6150c:	stp	x22, x21, [sp, #96]
   61510:	stp	x20, x19, [sp, #112]
   61514:	mov	x19, x2
   61518:	ldr	x2, [x2]
   6151c:	sub	x10, x1, #0x8
   61520:	mov	x8, #0xffffffffffffffba    	// #-70
   61524:	add	x29, sp, #0x20
   61528:	add	x21, x0, x2
   6152c:	cmp	x21, x10
   61530:	b.hi	616d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99b0>  // b.pmore
   61534:	ldr	x23, [x19, #8]
   61538:	mov	x20, x1
   6153c:	add	x9, x23, x2
   61540:	add	x28, x0, x9
   61544:	cmp	x28, x1
   61548:	b.hi	616d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99b0>  // b.pmore
   6154c:	ldr	x1, [x3]
   61550:	mov	x26, x3
   61554:	str	x10, [sp, #16]
   61558:	stur	x9, [x29, #-8]
   6155c:	add	x27, x1, x2
   61560:	cmp	x27, x4
   61564:	b.ls	61570 <ZDICT_addEntropyTablesFromBuffer@@Base+0x984c>  // b.plast
   61568:	mov	x8, #0xffffffffffffffec    	// #-20
   6156c:	b	616d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99b0>
   61570:	ldr	x8, [x19, #16]
   61574:	mov	x24, x7
   61578:	mov	x25, x6
   6157c:	mov	x22, x5
   61580:	sub	x8, x21, x8
   61584:	str	x8, [sp, #8]
   61588:	bl	61874 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b50>
   6158c:	str	x27, [x26]
   61590:	ldr	x8, [x19, #16]
   61594:	sub	x9, x21, x22
   61598:	cmp	x8, x9
   6159c:	b.ls	61600 <ZDICT_addEntropyTablesFromBuffer@@Base+0x98dc>  // b.plast
   615a0:	sub	x9, x21, x25
   615a4:	cmp	x8, x9
   615a8:	b.hi	61568 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9844>  // b.pmore
   615ac:	ldr	x26, [sp, #8]
   615b0:	ldr	x2, [x19, #8]
   615b4:	sub	x25, x26, x22
   615b8:	add	x1, x24, x25
   615bc:	add	x8, x1, x2
   615c0:	cmp	x8, x24
   615c4:	b.ls	616f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99d4>  // b.plast
   615c8:	neg	x2, x25
   615cc:	mov	x0, x21
   615d0:	bl	4450 <memmove@plt>
   615d4:	ldr	x8, [x19, #8]
   615d8:	sub	x21, x21, x25
   615dc:	add	x8, x8, x25
   615e0:	ldr	x25, [sp, #16]
   615e4:	str	x8, [x19, #8]
   615e8:	cmp	x21, x25
   615ec:	b.hi	61708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99e4>  // b.pmore
   615f0:	cmp	x8, #0x2
   615f4:	b.ls	61708 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99e4>  // b.plast
   615f8:	mov	w8, #0x1                   	// #1
   615fc:	b	61730 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a0c>
   61600:	ldur	x24, [x29, #-8]
   61604:	ldp	x22, x25, [sp, #8]
   61608:	ldr	x8, [x19, #16]
   6160c:	cmp	x8, #0x7
   61610:	b.hi	61668 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9944>  // b.pmore
   61614:	ldrb	w9, [x22]
   61618:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   6161c:	add	x10, x10, #0xc88
   61620:	add	x0, x21, #0x4
   61624:	strb	w9, [x21]
   61628:	ldrb	w9, [x22, #1]
   6162c:	strb	w9, [x21, #1]
   61630:	ldrb	w9, [x22, #2]
   61634:	strb	w9, [x21, #2]
   61638:	ldrb	w9, [x22, #3]
   6163c:	strb	w9, [x21, #3]
   61640:	ldr	x9, [x19, #16]
   61644:	ldr	w9, [x10, x9, lsl #2]
   61648:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   6164c:	add	x10, x10, #0xca8
   61650:	ldrsw	x23, [x10, x8, lsl #2]
   61654:	add	x22, x22, x9
   61658:	mov	x1, x22
   6165c:	bl	618bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b98>
   61660:	sub	x22, x22, x23
   61664:	b	61674 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9950>
   61668:	mov	x0, x21
   6166c:	mov	x1, x22
   61670:	bl	618c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ba4>
   61674:	sub	x8, x20, #0xd
   61678:	add	x0, x21, #0x8
   6167c:	cmp	x28, x8
   61680:	add	x20, x22, #0x8
   61684:	b.ls	616c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x999c>  // b.plast
   61688:	cmp	x0, x25
   6168c:	b.cs	616b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9990>  // b.hs, b.nlast
   61690:	sub	x19, x25, x0
   61694:	mov	x1, x20
   61698:	mov	x2, x19
   6169c:	bl	61874 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b50>
   616a0:	add	x20, x20, x19
   616a4:	mov	x0, x25
   616a8:	b	616b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9990>
   616ac:	ldrb	w8, [x20], #1
   616b0:	strb	w8, [x0], #1
   616b4:	cmp	x0, x28
   616b8:	b.cc	616ac <ZDICT_addEntropyTablesFromBuffer@@Base+0x9988>  // b.lo, b.ul, b.last
   616bc:	b	616d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99ac>
   616c0:	ldr	x8, [x19, #8]
   616c4:	mov	x1, x20
   616c8:	sub	x2, x8, #0x8
   616cc:	bl	61874 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b50>
   616d0:	mov	x8, x24
   616d4:	ldp	x20, x19, [sp, #112]
   616d8:	ldp	x22, x21, [sp, #96]
   616dc:	ldp	x24, x23, [sp, #80]
   616e0:	ldp	x26, x25, [sp, #64]
   616e4:	ldp	x28, x27, [sp, #48]
   616e8:	ldp	x29, x30, [sp, #32]
   616ec:	mov	x0, x8
   616f0:	add	sp, sp, #0x80
   616f4:	ret
   616f8:	mov	x0, x21
   616fc:	bl	4450 <memmove@plt>
   61700:	ldur	x8, [x29, #-8]
   61704:	b	616d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99b0>
   61708:	cmp	x21, x28
   6170c:	b.cs	6172c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a08>  // b.hs, b.nlast
   61710:	add	x8, x26, x23
   61714:	sub	x8, x8, x22
   61718:	ldrb	w9, [x22], #1
   6171c:	subs	x8, x8, #0x1
   61720:	strb	w9, [x21], #1
   61724:	b.ne	61718 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99f4>  // b.any
   61728:	b	61730 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a0c>
   6172c:	mov	w8, wzr
   61730:	ldur	x24, [x29, #-8]
   61734:	cbnz	w8, 61608 <ZDICT_addEntropyTablesFromBuffer@@Base+0x98e4>
   61738:	b	616d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x99ac>
   6173c:	sub	sp, sp, #0xa0
   61740:	stp	x29, x30, [sp, #112]
   61744:	stp	x20, x19, [sp, #144]
   61748:	add	x29, sp, #0x70
   6174c:	mov	x20, x0
   61750:	str	x21, [sp, #128]
   61754:	str	w2, [x29, #28]
   61758:	cbz	w1, 6178c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a68>
   6175c:	cmp	w1, #0x2
   61760:	b.eq	617a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a80>  // b.none
   61764:	cmp	w1, #0x1
   61768:	b.ne	617b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9a94>  // b.any
   6176c:	cbz	x5, 617f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ad0>
   61770:	ldrb	w1, [x4]
   61774:	cmp	w1, w2
   61778:	b.hi	617ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ac8>  // b.pmore
   6177c:	mov	x0, x20
   61780:	bl	5d8a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5b80>
   61784:	mov	w19, #0x1                   	// #1
   61788:	b	6180c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ae8>
   6178c:	mov	x0, x20
   61790:	mov	x1, x6
   61794:	mov	w3, w7
   61798:	bl	5d6e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59c0>
   6179c:	mov	x19, xzr
   617a0:	b	6180c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ae8>
   617a4:	ldr	w8, [x29, #48]
   617a8:	cmp	w8, #0x0
   617ac:	mov	x8, #0xffffffffffffffec    	// #-20
   617b0:	csel	x19, x8, xzr, eq  // eq = none
   617b4:	b	6180c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ae8>
   617b8:	mov	w21, w3
   617bc:	add	x0, sp, #0x4
   617c0:	add	x1, x29, #0x1c
   617c4:	add	x2, x29, #0x18
   617c8:	mov	x3, x4
   617cc:	mov	x4, x5
   617d0:	bl	5d370 <ZDICT_addEntropyTablesFromBuffer@@Base+0x564c>
   617d4:	mov	x19, x0
   617d8:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   617dc:	cbnz	w0, 617ec <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ac8>
   617e0:	ldr	w3, [x29, #24]
   617e4:	cmp	w3, w21
   617e8:	b.ls	617fc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ad8>  // b.plast
   617ec:	mov	x19, #0xffffffffffffffec    	// #-20
   617f0:	b	6180c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ae8>
   617f4:	mov	x19, #0xffffffffffffffb8    	// #-72
   617f8:	b	6180c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ae8>
   617fc:	ldr	w2, [x29, #28]
   61800:	add	x1, sp, #0x4
   61804:	mov	x0, x20
   61808:	bl	5d6e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59c0>
   6180c:	mov	x0, x19
   61810:	ldp	x20, x19, [sp, #144]
   61814:	ldr	x21, [sp, #128]
   61818:	ldp	x29, x30, [sp, #112]
   6181c:	add	sp, sp, #0xa0
   61820:	ret
   61824:	ldp	x9, x8, [x0]
   61828:	add	x8, x8, x9, lsl #2
   6182c:	ldrb	w0, [x8, #2]
   61830:	ret
   61834:	stp	x29, x30, [sp, #-32]!
   61838:	stp	x20, x19, [sp, #16]
   6183c:	ldp	x9, x8, [x0]
   61840:	mov	x19, x0
   61844:	mov	x0, x1
   61848:	mov	x29, sp
   6184c:	add	x8, x8, x9, lsl #2
   61850:	ldrh	w20, [x8]
   61854:	ldrb	w8, [x8, #3]
   61858:	mov	w1, w8
   6185c:	bl	6090c <ZDICT_addEntropyTablesFromBuffer@@Base+0x8be8>
   61860:	add	x8, x0, x20
   61864:	str	x8, [x19]
   61868:	ldp	x20, x19, [sp, #16]
   6186c:	ldp	x29, x30, [sp], #32
   61870:	ret
   61874:	stp	x29, x30, [sp, #-48]!
   61878:	str	x21, [sp, #16]
   6187c:	stp	x20, x19, [sp, #32]
   61880:	mov	x19, x1
   61884:	mov	x20, x0
   61888:	add	x21, x0, x2
   6188c:	mov	x29, sp
   61890:	mov	x0, x20
   61894:	mov	x1, x19
   61898:	bl	618c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ba4>
   6189c:	add	x20, x20, #0x8
   618a0:	cmp	x20, x21
   618a4:	add	x19, x19, #0x8
   618a8:	b.cc	61890 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9b6c>  // b.lo, b.ul, b.last
   618ac:	ldp	x20, x19, [sp, #32]
   618b0:	ldr	x21, [sp, #16]
   618b4:	ldp	x29, x30, [sp], #48
   618b8:	ret
   618bc:	ldr	w8, [x1]
   618c0:	str	w8, [x0]
   618c4:	ret
   618c8:	ldr	x8, [x1]
   618cc:	str	x8, [x0]
   618d0:	ret
   618d4:	ldr	x8, [x0, #21520]
   618d8:	ldr	x9, [x0, #21528]
   618dc:	add	x10, x1, x2
   618e0:	str	x1, [x0, #21528]
   618e4:	str	x8, [x0, #21544]
   618e8:	sub	x8, x9, x8
   618ec:	add	x8, x1, x8
   618f0:	str	x8, [x0, #21536]
   618f4:	str	x10, [x0, #21520]
   618f8:	ret
   618fc:	sub	sp, sp, #0xc0
   61900:	mov	w8, #0x140c                	// #5132
   61904:	stp	x20, x19, [sp, #176]
   61908:	mov	x19, x0
   6190c:	add	x0, x0, x8
   61910:	stp	x29, x30, [sp, #128]
   61914:	stp	x24, x23, [sp, #144]
   61918:	stp	x22, x21, [sp, #160]
   6191c:	add	x29, sp, #0x80
   61920:	mov	x21, x2
   61924:	mov	x22, x1
   61928:	bl	5e9b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x6c90>
   6192c:	mov	x20, x0
   61930:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61934:	cbnz	w0, 61a10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cec>
   61938:	add	x22, x22, x20
   6193c:	sub	x23, x21, x20
   61940:	mov	w8, #0x1c                  	// #28
   61944:	add	x0, sp, #0xc
   61948:	sub	x1, x29, #0x4
   6194c:	sub	x2, x29, #0x8
   61950:	mov	x3, x22
   61954:	mov	x4, x23
   61958:	stur	w8, [x29, #-4]
   6195c:	bl	5d370 <ZDICT_addEntropyTablesFromBuffer@@Base+0x564c>
   61960:	mov	x21, x0
   61964:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61968:	cbnz	w0, 61978 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c54>
   6196c:	ldur	w3, [x29, #-8]
   61970:	cmp	w3, #0x8
   61974:	b.ls	61a2c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d08>  // b.plast
   61978:	mov	w8, #0x1                   	// #1
   6197c:	cbnz	w8, 61a10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cec>
   61980:	mov	w8, #0x34                  	// #52
   61984:	add	x0, sp, #0xc
   61988:	sub	x1, x29, #0x4
   6198c:	sub	x2, x29, #0x8
   61990:	mov	x3, x22
   61994:	mov	x4, x23
   61998:	stur	w8, [x29, #-4]
   6199c:	bl	5d370 <ZDICT_addEntropyTablesFromBuffer@@Base+0x564c>
   619a0:	mov	x24, x0
   619a4:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   619a8:	cbnz	w0, 619b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c94>
   619ac:	ldur	w3, [x29, #-8]
   619b0:	cmp	w3, #0x9
   619b4:	b.ls	61a5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d38>  // b.plast
   619b8:	mov	w8, #0x1                   	// #1
   619bc:	cbnz	w8, 61a10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cec>
   619c0:	mov	w8, #0x23                  	// #35
   619c4:	add	x0, sp, #0xc
   619c8:	sub	x1, x29, #0x4
   619cc:	sub	x2, x29, #0x8
   619d0:	mov	x3, x22
   619d4:	mov	x4, x23
   619d8:	stur	w8, [x29, #-4]
   619dc:	bl	5d370 <ZDICT_addEntropyTablesFromBuffer@@Base+0x564c>
   619e0:	mov	x22, x0
   619e4:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   619e8:	cbnz	w0, 61a10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cec>
   619ec:	ldur	w3, [x29, #-8]
   619f0:	cmp	w3, #0x9
   619f4:	b.hi	61a10 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cec>  // b.pmore
   619f8:	ldur	w2, [x29, #-4]
   619fc:	add	x1, sp, #0xc
   61a00:	mov	x0, x19
   61a04:	bl	5d6e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59c0>
   61a08:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61a0c:	cbz	w0, 61a8c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d68>
   61a10:	mov	x0, #0xffffffffffffffe2    	// #-30
   61a14:	ldp	x20, x19, [sp, #176]
   61a18:	ldp	x22, x21, [sp, #160]
   61a1c:	ldp	x24, x23, [sp, #144]
   61a20:	ldp	x29, x30, [sp, #128]
   61a24:	add	sp, sp, #0xc0
   61a28:	ret
   61a2c:	ldur	w2, [x29, #-4]
   61a30:	add	x0, x19, #0x804
   61a34:	add	x1, sp, #0xc
   61a38:	bl	5d6e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59c0>
   61a3c:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61a40:	cmp	w0, #0x0
   61a44:	cset	w8, ne  // ne = any
   61a48:	cbnz	w0, 6197c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c58>
   61a4c:	mov	w8, wzr
   61a50:	add	x22, x22, x21
   61a54:	sub	x23, x23, x21
   61a58:	b	6197c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c58>
   61a5c:	ldur	w2, [x29, #-4]
   61a60:	add	x0, x19, #0xc08
   61a64:	add	x1, sp, #0xc
   61a68:	bl	5d6e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x59c0>
   61a6c:	bl	5d338 <ZDICT_addEntropyTablesFromBuffer@@Base+0x5614>
   61a70:	cmp	w0, #0x0
   61a74:	cset	w8, ne  // ne = any
   61a78:	cbnz	w0, 619bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c98>
   61a7c:	mov	w8, wzr
   61a80:	add	x22, x22, x24
   61a84:	sub	x23, x23, x24
   61a88:	b	619bc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9c98>
   61a8c:	mov	w8, #0x5458                	// #21592
   61a90:	mov	w9, #0x1                   	// #1
   61a94:	add	x10, x21, x20
   61a98:	str	w9, [x19, x8]
   61a9c:	add	x8, x10, x24
   61aa0:	add	x0, x8, x22
   61aa4:	b	61a14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9cf0>
   61aa8:	stp	x29, x30, [sp, #-16]!
   61aac:	mov	x29, sp
   61ab0:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   61ab4:	ldp	x29, x30, [sp], #16
   61ab8:	ret
   61abc:	cmn	x0, #0x78
   61ac0:	cset	w0, hi  // hi = pmore
   61ac4:	ret
   61ac8:	stp	x29, x30, [sp, #-16]!
   61acc:	mov	x29, sp
   61ad0:	bl	61adc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9db8>
   61ad4:	ldp	x29, x30, [sp], #16
   61ad8:	ret
   61adc:	stp	x29, x30, [sp, #-16]!
   61ae0:	mov	x29, sp
   61ae4:	bl	65914 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdbf0>
   61ae8:	bl	5264 <ZSTD_initDStream_usingDDict@plt+0x754>
   61aec:	ldp	x29, x30, [sp], #16
   61af0:	ret
   61af4:	stp	x29, x30, [sp, #-16]!
   61af8:	mov	x29, sp
   61afc:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   61b00:	ldp	x29, x30, [sp], #16
   61b04:	ret
   61b08:	stp	x29, x30, [sp, #-16]!
   61b0c:	mov	x29, sp
   61b10:	bl	61adc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9db8>
   61b14:	ldp	x29, x30, [sp], #16
   61b18:	ret
   61b1c:	sub	sp, sp, #0xa0
   61b20:	stp	x29, x30, [sp, #64]
   61b24:	add	x29, sp, #0x40
   61b28:	cmp	x4, #0x4
   61b2c:	stp	x28, x27, [sp, #80]
   61b30:	stp	x26, x25, [sp, #96]
   61b34:	stp	x24, x23, [sp, #112]
   61b38:	stp	x22, x21, [sp, #128]
   61b3c:	stp	x20, x19, [sp, #144]
   61b40:	stur	x0, [x29, #-8]
   61b44:	b.cs	61b50 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9e2c>  // b.hs, b.nlast
   61b48:	mov	x0, #0xffffffffffffffb8    	// #-72
   61b4c:	b	61e0c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0e8>
   61b50:	mov	x0, x3
   61b54:	mov	x19, x4
   61b58:	mov	x21, x3
   61b5c:	mov	x23, x2
   61b60:	mov	x20, x1
   61b64:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   61b68:	and	w8, w0, #0xf
   61b6c:	cmp	w8, #0xa
   61b70:	b.ls	61b7c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9e58>  // b.plast
   61b74:	mov	x0, #0xffffffffffffffd4    	// #-44
   61b78:	b	61e0c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0e8>
   61b7c:	mov	w10, #0x20                  	// #32
   61b80:	lsl	w26, w10, w8
   61b84:	add	w9, w8, #0x5
   61b88:	cmp	w26, #0x2
   61b8c:	orr	w25, w26, #0x1
   61b90:	str	w9, [x23]
   61b94:	stp	x20, x19, [sp, #8]
   61b98:	b.cc	61dbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa098>  // b.lo, b.ul, b.last
   61b9c:	add	w28, w8, #0x6
   61ba0:	ldr	w8, [x20]
   61ba4:	add	x9, x21, x19
   61ba8:	mov	w22, wzr
   61bac:	mov	w27, wzr
   61bb0:	stur	w8, [x29, #-12]
   61bb4:	sub	x8, x9, #0x7
   61bb8:	lsr	w19, w0, #4
   61bbc:	sub	x20, x9, #0x5
   61bc0:	stur	x8, [x29, #-24]
   61bc4:	sub	x8, x9, #0x4
   61bc8:	mov	w24, #0x4                   	// #4
   61bcc:	mov	x23, x21
   61bd0:	stp	x21, x8, [sp, #24]
   61bd4:	b	61bf4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ed0>
   61bd8:	add	x23, x23, w8, sxtw
   61bdc:	and	w24, w19, #0x7
   61be0:	mov	x0, x23
   61be4:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   61be8:	cmp	w25, #0x1
   61bec:	lsr	w19, w0, w24
   61bf0:	b.le	61dc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0a4>
   61bf4:	ldur	w8, [x29, #-12]
   61bf8:	cmp	w27, w8
   61bfc:	b.hi	61dc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0a4>  // b.pmore
   61c00:	cbz	w22, 61d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fe4>
   61c04:	mvn	w8, w19
   61c08:	tst	w8, #0xffff
   61c0c:	mov	w22, w27
   61c10:	b.eq	61c68 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f44>  // b.none
   61c14:	and	w8, w19, #0x3
   61c18:	cmp	w8, #0x3
   61c1c:	b.ne	61c38 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f14>  // b.any
   61c20:	ubfx	w8, w19, #2, #2
   61c24:	add	w22, w22, #0x3
   61c28:	lsr	w19, w19, #2
   61c2c:	cmp	w8, #0x3
   61c30:	add	w24, w24, #0x2
   61c34:	b.eq	61c20 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9efc>  // b.none
   61c38:	ldur	w9, [x29, #-12]
   61c3c:	add	w8, w22, w8
   61c40:	add	w24, w24, #0x2
   61c44:	cmp	w8, w9
   61c48:	b.ls	61c88 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f64>  // b.plast
   61c4c:	mov	w8, wzr
   61c50:	b	61d04 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fe0>
   61c54:	lsr	w19, w19, #16
   61c58:	add	w24, w24, #0x10
   61c5c:	mvn	w8, w19
   61c60:	tst	w8, #0xffff
   61c64:	b.ne	61c14 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ef0>  // b.any
   61c68:	cmp	x23, x20
   61c6c:	add	w22, w22, #0x18
   61c70:	b.cs	61c54 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f30>  // b.hs, b.nlast
   61c74:	add	x23, x23, #0x2
   61c78:	mov	x0, x23
   61c7c:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   61c80:	lsr	w19, w0, w24
   61c84:	b	61c5c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f38>
   61c88:	cmp	w27, w8
   61c8c:	b.cs	61cc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fa0>  // b.hs, b.nlast
   61c90:	mov	w21, w8
   61c94:	ldur	x8, [x29, #-8]
   61c98:	mov	w22, w27
   61c9c:	mov	w1, wzr
   61ca0:	add	x0, x8, w27, uxtw #1
   61ca4:	sub	x8, x21, x22
   61ca8:	lsl	x2, x8, #1
   61cac:	bl	46a0 <memset@plt>
   61cb0:	add	x22, x22, #0x1
   61cb4:	cmp	x21, x22
   61cb8:	b.ne	61cb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9f8c>  // b.any
   61cbc:	ldr	x21, [sp, #24]
   61cc0:	mov	w27, w22
   61cc4:	ldur	x8, [x29, #-24]
   61cc8:	cmp	x23, x8
   61ccc:	asr	w8, w24, #3
   61cd0:	b.ls	61cec <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fc8>  // b.plast
   61cd4:	ldr	x10, [sp, #32]
   61cd8:	add	x9, x23, w8, sxtw
   61cdc:	cmp	x9, x10
   61ce0:	b.ls	61cec <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fc8>  // b.plast
   61ce4:	lsr	w19, w19, #2
   61ce8:	b	61d00 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9fdc>
   61cec:	add	x23, x23, w8, sxtw
   61cf0:	mov	x0, x23
   61cf4:	and	w24, w24, #0x7
   61cf8:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   61cfc:	lsr	w19, w0, w24
   61d00:	mov	w8, #0x1                   	// #1
   61d04:	cbz	w8, 61e08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0e4>
   61d08:	lsl	w8, w26, #1
   61d0c:	sub	w10, w8, #0x1
   61d10:	sub	w9, w26, #0x1
   61d14:	sub	w11, w10, w25
   61d18:	and	w8, w19, w9
   61d1c:	sxth	w9, w11
   61d20:	cmp	w8, w9
   61d24:	b.cs	61d30 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa00c>  // b.hs, b.nlast
   61d28:	sub	w9, w28, #0x1
   61d2c:	b	61d48 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa024>
   61d30:	and	w8, w19, w10
   61d34:	sxth	w10, w8
   61d38:	sub	w9, w10, w9
   61d3c:	cmp	w10, w26
   61d40:	csel	w8, w8, w9, lt  // lt = tstop
   61d44:	mov	w9, w28
   61d48:	add	w19, w9, w24
   61d4c:	sub	w24, w8, #0x1
   61d50:	mov	w0, w24
   61d54:	bl	61e40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa11c>
   61d58:	ldur	x8, [x29, #-8]
   61d5c:	sub	w25, w25, w0, sxth
   61d60:	tst	w24, #0xffff
   61d64:	cset	w22, eq  // eq = none
   61d68:	cmp	w25, w26
   61d6c:	strh	w24, [x8, w27, uxtw #1]
   61d70:	b.ge	61d84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa060>  // b.tcont
   61d74:	asr	w26, w26, #1
   61d78:	cmp	w25, w26
   61d7c:	sub	w28, w28, #0x1
   61d80:	b.lt	61d74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa050>  // b.tstop
   61d84:	ldur	x8, [x29, #-24]
   61d88:	add	w27, w27, #0x1
   61d8c:	cmp	x23, x8
   61d90:	asr	w8, w19, #3
   61d94:	b.ls	61bd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9eb4>  // b.plast
   61d98:	ldr	x10, [sp, #32]
   61d9c:	add	x9, x23, w8, sxtw
   61da0:	cmp	x9, x10
   61da4:	b.ls	61bd8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9eb4>  // b.plast
   61da8:	ldr	x9, [sp, #32]
   61dac:	sub	w8, w9, w23
   61db0:	sub	w24, w19, w8, lsl #3
   61db4:	mov	x23, x9
   61db8:	b	61be0 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9ebc>
   61dbc:	mov	w27, wzr
   61dc0:	mov	w24, #0x4                   	// #4
   61dc4:	mov	x23, x21
   61dc8:	cmp	w25, #0x1
   61dcc:	b.ne	61e00 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0dc>  // b.any
   61dd0:	ldr	x10, [sp, #8]
   61dd4:	sub	w8, w27, #0x1
   61dd8:	add	w9, w24, #0x7
   61ddc:	str	w8, [x10]
   61de0:	asr	w8, w9, #3
   61de4:	ldr	x9, [sp, #16]
   61de8:	add	x8, x23, w8, sxtw
   61dec:	sub	x8, x8, x21
   61df0:	cmp	x8, x9
   61df4:	mov	x9, #0xffffffffffffffb8    	// #-72
   61df8:	csel	x0, x9, x8, hi  // hi = pmore
   61dfc:	b	61e0c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0e8>
   61e00:	mov	x0, #0xffffffffffffffff    	// #-1
   61e04:	b	61e0c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa0e8>
   61e08:	mov	x0, #0xffffffffffffffd0    	// #-48
   61e0c:	ldp	x20, x19, [sp, #144]
   61e10:	ldp	x22, x21, [sp, #128]
   61e14:	ldp	x24, x23, [sp, #112]
   61e18:	ldp	x26, x25, [sp, #96]
   61e1c:	ldp	x28, x27, [sp, #80]
   61e20:	ldp	x29, x30, [sp, #64]
   61e24:	add	sp, sp, #0xa0
   61e28:	ret
   61e2c:	stp	x29, x30, [sp, #-16]!
   61e30:	mov	x29, sp
   61e34:	bl	6593c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc18>
   61e38:	ldp	x29, x30, [sp], #16
   61e3c:	ret
   61e40:	sxth	w8, w0
   61e44:	cmp	w8, #0x0
   61e48:	cneg	w0, w8, mi  // mi = first
   61e4c:	ret
   61e50:	stp	x29, x30, [sp, #-80]!
   61e54:	stp	x26, x25, [sp, #16]
   61e58:	stp	x24, x23, [sp, #32]
   61e5c:	stp	x22, x21, [sp, #48]
   61e60:	stp	x20, x19, [sp, #64]
   61e64:	mov	x29, sp
   61e68:	cbz	x6, 61fb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa294>
   61e6c:	ldrsb	w8, [x5]
   61e70:	mov	x22, x4
   61e74:	mov	x19, x3
   61e78:	mov	x20, x2
   61e7c:	mov	x2, x1
   61e80:	mov	x21, x0
   61e84:	and	x24, x8, #0xff
   61e88:	tbnz	w8, #31, 61ec0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa19c>
   61e8c:	cmp	x24, x6
   61e90:	b.cs	61fb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa294>  // b.hs, b.nlast
   61e94:	sub	x1, x2, #0x1
   61e98:	add	x2, x5, #0x1
   61e9c:	mov	x0, x21
   61ea0:	mov	x3, x24
   61ea4:	bl	6205c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa338>
   61ea8:	mov	x23, x0
   61eac:	bl	61aa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d84>
   61eb0:	mov	w8, w0
   61eb4:	mov	x0, x23
   61eb8:	cbnz	w8, 62044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa320>
   61ebc:	b	61eec <ZDICT_addEntropyTablesFromBuffer@@Base+0xa1c8>
   61ec0:	cmp	w24, #0xf2
   61ec4:	b.cc	61f50 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa22c>  // b.lo, b.ul, b.last
   61ec8:	adrp	x8, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   61ecc:	add	x8, x8, #0xce8
   61ed0:	add	x8, x8, x24, lsl #2
   61ed4:	sub	x8, x8, #0x3c8
   61ed8:	ldr	w23, [x8]
   61edc:	mov	w1, #0x1                   	// #1
   61ee0:	mov	x0, x21
   61ee4:	bl	46a0 <memset@plt>
   61ee8:	mov	x24, xzr
   61eec:	movi	v0.2d, #0x0
   61ef0:	str	wzr, [x20, #64]
   61ef4:	stp	q0, q0, [x20, #32]
   61ef8:	stp	q0, q0, [x20]
   61efc:	cbz	x23, 61fc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa29c>
   61f00:	mov	x8, xzr
   61f04:	mov	w25, wzr
   61f08:	mov	w9, #0x1                   	// #1
   61f0c:	mov	w10, #0x1                   	// #1
   61f10:	ldrb	w11, [x21, x8]
   61f14:	cmp	x11, #0xf
   61f18:	b.hi	62040 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa31c>  // b.pmore
   61f1c:	lsl	x11, x11, #2
   61f20:	ldr	w12, [x20, x11]
   61f24:	add	w12, w12, #0x1
   61f28:	str	w12, [x20, x11]
   61f2c:	ldrb	w11, [x21, x8]
   61f30:	mov	w8, w10
   61f34:	cmp	x23, x8
   61f38:	add	w10, w10, #0x1
   61f3c:	lsl	w11, w9, w11
   61f40:	add	w25, w25, w11, asr #1
   61f44:	b.hi	61f10 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa1ec>  // b.pmore
   61f48:	cbnz	w25, 61fc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa2a4>
   61f4c:	b	62040 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa31c>
   61f50:	sub	x8, x24, #0x7e
   61f54:	lsr	x8, x8, #1
   61f58:	cmp	x8, x6
   61f5c:	b.cs	61fb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa294>  // b.hs, b.nlast
   61f60:	sub	x23, x24, #0x7f
   61f64:	cmp	x23, x2
   61f68:	b.cs	62040 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa31c>  // b.hs, b.nlast
   61f6c:	cbz	x23, 61fb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa28c>
   61f70:	mov	x11, xzr
   61f74:	add	x9, x5, #0x1
   61f78:	mov	w10, #0x2                   	// #2
   61f7c:	sub	w12, w10, #0x2
   61f80:	lsr	x12, x12, #1
   61f84:	ldrb	w13, [x9, x12]
   61f88:	lsr	w13, w13, #4
   61f8c:	strb	w13, [x21, x11]
   61f90:	ldrb	w12, [x9, x12]
   61f94:	mov	w11, w10
   61f98:	sub	w13, w10, #0x1
   61f9c:	cmp	x23, x11
   61fa0:	and	w12, w12, #0xf
   61fa4:	add	w10, w10, #0x2
   61fa8:	strb	w12, [x21, w13, uxtw]
   61fac:	b.hi	61f7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa258>  // b.pmore
   61fb0:	mov	x24, x8
   61fb4:	b	61eec <ZDICT_addEntropyTablesFromBuffer@@Base+0xa1c8>
   61fb8:	mov	x0, #0xffffffffffffffb8    	// #-72
   61fbc:	b	62044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa320>
   61fc0:	mov	w25, wzr
   61fc4:	cbz	w25, 62040 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa31c>
   61fc8:	mov	w0, w25
   61fcc:	bl	62168 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa444>
   61fd0:	add	w8, w0, #0x1
   61fd4:	cmp	w8, #0x10
   61fd8:	b.hi	62040 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa31c>  // b.pmore
   61fdc:	mov	w26, #0x1                   	// #1
   61fe0:	str	w8, [x22]
   61fe4:	lsl	w8, w26, w8
   61fe8:	sub	w22, w8, w25
   61fec:	mov	w0, w22
   61ff0:	bl	62168 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa444>
   61ff4:	lsl	w8, w26, w0
   61ff8:	cmp	w8, w22
   61ffc:	b.ne	62040 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa31c>  // b.any
   62000:	add	w8, w0, #0x1
   62004:	strb	w8, [x21, x23]
   62008:	mov	w8, w8
   6200c:	lsl	x8, x8, #2
   62010:	ldr	w9, [x20, x8]
   62014:	mov	x0, #0xffffffffffffffec    	// #-20
   62018:	add	w9, w9, #0x1
   6201c:	str	w9, [x20, x8]
   62020:	ldr	w8, [x20, #4]
   62024:	cmp	w8, #0x2
   62028:	b.cc	62044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa320>  // b.lo, b.ul, b.last
   6202c:	tbnz	w8, #0, 62044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa320>
   62030:	add	w8, w23, #0x1
   62034:	add	x0, x24, #0x1
   62038:	str	w8, [x19]
   6203c:	b	62044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa320>
   62040:	mov	x0, #0xffffffffffffffec    	// #-20
   62044:	ldp	x20, x19, [sp, #64]
   62048:	ldp	x22, x21, [sp, #48]
   6204c:	ldp	x24, x23, [sp, #32]
   62050:	ldp	x26, x25, [sp, #16]
   62054:	ldp	x29, x30, [sp], #80
   62058:	ret
   6205c:	stp	x29, x30, [sp, #-80]!
   62060:	str	x28, [sp, #16]
   62064:	stp	x24, x23, [sp, #32]
   62068:	stp	x22, x21, [sp, #48]
   6206c:	stp	x20, x19, [sp, #64]
   62070:	mov	x29, sp
   62074:	sub	sp, sp, #0x4, lsl #12
   62078:	sub	sp, sp, #0x210
   6207c:	mov	w8, #0xff                  	// #255
   62080:	cmp	x3, #0x2
   62084:	str	w8, [x29, #24]
   62088:	b.cs	62094 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa370>  // b.hs, b.nlast
   6208c:	mov	x23, #0xffffffffffffffb8    	// #-72
   62090:	b	62144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa420>
   62094:	mov	x19, x3
   62098:	mov	x20, x2
   6209c:	mov	x22, x0
   620a0:	add	x0, sp, #0x4, lsl #12
   620a4:	mov	x21, x1
   620a8:	add	x0, x0, #0x10
   620ac:	add	x1, x29, #0x18
   620b0:	add	x2, x29, #0x1c
   620b4:	mov	x3, x20
   620b8:	mov	x4, x19
   620bc:	bl	61b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9df8>
   620c0:	mov	x23, x0
   620c4:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   620c8:	cbz	w0, 620d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3b4>
   620cc:	mov	w8, wzr
   620d0:	cbnz	w8, 62100 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3dc>
   620d4:	b	62144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa420>
   620d8:	cmp	x23, x19
   620dc:	b.cs	620f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3d0>  // b.hs, b.nlast
   620e0:	add	x20, x20, x23
   620e4:	sub	x19, x19, x23
   620e8:	mov	w8, #0x1                   	// #1
   620ec:	cbnz	w8, 62100 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa3dc>
   620f0:	b	62144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa420>
   620f4:	mov	w8, wzr
   620f8:	mov	x23, #0xffffffffffffffb8    	// #-72
   620fc:	cbz	w8, 62144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa420>
   62100:	ldp	w2, w3, [x29, #24]
   62104:	add	x1, sp, #0x4, lsl #12
   62108:	add	x0, sp, #0xc
   6210c:	add	x1, x1, #0x10
   62110:	bl	621b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa490>
   62114:	mov	x24, x0
   62118:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6211c:	cmp	w0, #0x0
   62120:	csel	x23, x23, x24, eq  // eq = none
   62124:	cbnz	w0, 62144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa420>
   62128:	add	x4, sp, #0xc
   6212c:	mov	x0, x22
   62130:	mov	x1, x21
   62134:	mov	x2, x20
   62138:	mov	x3, x19
   6213c:	bl	623c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa6a0>
   62140:	mov	x23, x0
   62144:	mov	x0, x23
   62148:	add	sp, sp, #0x4, lsl #12
   6214c:	add	sp, sp, #0x210
   62150:	ldp	x20, x19, [sp, #64]
   62154:	ldp	x22, x21, [sp, #48]
   62158:	ldp	x24, x23, [sp, #32]
   6215c:	ldr	x28, [sp, #16]
   62160:	ldp	x29, x30, [sp], #80
   62164:	ret
   62168:	clz	w8, w0
   6216c:	eor	w0, w8, #0x1f
   62170:	ret
   62174:	stp	x29, x30, [sp, #-16]!
   62178:	cmp	w0, #0xf
   6217c:	mov	w8, #0xf                   	// #15
   62180:	csel	w8, w0, w8, cc  // cc = lo, ul, last
   62184:	mov	w9, #0x4                   	// #4
   62188:	lsl	w8, w9, w8
   6218c:	add	w0, w8, #0x4
   62190:	mov	x29, sp
   62194:	bl	4640 <malloc@plt>
   62198:	ldp	x29, x30, [sp], #16
   6219c:	ret
   621a0:	stp	x29, x30, [sp, #-16]!
   621a4:	mov	x29, sp
   621a8:	bl	4880 <free@plt>
   621ac:	ldp	x29, x30, [sp], #16
   621b0:	ret
   621b4:	stp	x29, x30, [sp, #-80]!
   621b8:	stp	x28, x25, [sp, #16]
   621bc:	stp	x24, x23, [sp, #32]
   621c0:	stp	x22, x21, [sp, #48]
   621c4:	stp	x20, x19, [sp, #64]
   621c8:	mov	x29, sp
   621cc:	sub	sp, sp, #0x200
   621d0:	cmp	w2, #0xff
   621d4:	b.ls	621e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4bc>  // b.plast
   621d8:	mov	x0, #0xffffffffffffffd2    	// #-46
   621dc:	b	6234c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa628>
   621e0:	mov	w19, w3
   621e4:	cmp	w3, #0xc
   621e8:	b.ls	621f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa4d0>  // b.plast
   621ec:	mov	x0, #0xffffffffffffffd4    	// #-44
   621f0:	b	6234c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa628>
   621f4:	mov	w9, #0x1                   	// #1
   621f8:	lsl	w21, w9, w19
   621fc:	add	x8, x0, #0x4
   62200:	add	w11, w2, #0x1
   62204:	sub	w9, w21, #0x1
   62208:	cbz	w11, 62270 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa54c>
   6220c:	sub	w10, w19, #0x1
   62210:	mov	w15, #0x10000               	// #65536
   62214:	lsl	w10, w15, w10
   62218:	mov	x13, xzr
   6221c:	mov	w14, w11
   62220:	mov	w12, #0x1                   	// #1
   62224:	asr	w15, w10, #16
   62228:	mov	x16, sp
   6222c:	mov	w10, w9
   62230:	b	62250 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa52c>
   62234:	cmp	w15, w18
   62238:	and	w17, w18, #0xffff
   6223c:	csel	w12, w12, wzr, gt
   62240:	strh	w17, [x16, x13, lsl #1]
   62244:	add	x13, x13, #0x1
   62248:	cmp	x14, x13
   6224c:	b.eq	62278 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa554>  // b.none
   62250:	ldrsh	w18, [x1, x13, lsl #1]
   62254:	cmn	w18, #0x1
   62258:	b.ne	62234 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa510>  // b.any
   6225c:	add	x17, x8, w10, uxtw #2
   62260:	sub	w10, w10, #0x1
   62264:	strb	w13, [x17, #2]
   62268:	mov	w17, #0x1                   	// #1
   6226c:	b	62240 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa51c>
   62270:	mov	w12, #0x1                   	// #1
   62274:	mov	w10, w9
   62278:	strh	w19, [x0]
   6227c:	strh	w12, [x0, #2]
   62280:	cbz	w11, 622e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5c4>
   62284:	lsr	w14, w21, #3
   62288:	add	w14, w14, w21, lsr #1
   6228c:	mov	x13, xzr
   62290:	mov	w12, wzr
   62294:	add	w14, w14, #0x3
   62298:	mov	w11, w11
   6229c:	b	622ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xa588>
   622a0:	add	x13, x13, #0x1
   622a4:	cmp	x13, x11
   622a8:	b.eq	622ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5c8>  // b.none
   622ac:	ldrsh	w15, [x1, x13, lsl #1]
   622b0:	cmp	w15, #0x1
   622b4:	b.lt	622a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa57c>  // b.tstop
   622b8:	ldrsh	w15, [x1, x13, lsl #1]
   622bc:	mov	w16, wzr
   622c0:	add	x17, x8, w12, uxtw #2
   622c4:	strb	w13, [x17, #2]
   622c8:	add	w12, w14, w12
   622cc:	and	w12, w12, w9
   622d0:	cmp	w12, w10
   622d4:	b.hi	622c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5a4>  // b.pmore
   622d8:	add	w16, w16, #0x1
   622dc:	cmp	w16, w15
   622e0:	b.lt	622c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa59c>  // b.tstop
   622e4:	b	622a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa57c>
   622e8:	mov	w12, wzr
   622ec:	cbz	w12, 622f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5d4>
   622f0:	mov	x0, #0xffffffffffffffff    	// #-1
   622f4:	b	6234c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa628>
   622f8:	mov	x22, xzr
   622fc:	mov	w23, w21
   62300:	add	x24, x0, #0x7
   62304:	mov	x25, sp
   62308:	ldurb	w8, [x24, #-1]
   6230c:	lsl	x8, x8, #1
   62310:	ldrh	w20, [x25, x8]
   62314:	add	w9, w20, #0x1
   62318:	mov	w0, w20
   6231c:	strh	w9, [x25, x8]
   62320:	bl	62168 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa444>
   62324:	sub	w8, w19, w0
   62328:	strb	w8, [x24]
   6232c:	lsl	w8, w20, w8
   62330:	add	x22, x22, #0x1
   62334:	sub	w8, w8, w21
   62338:	cmp	x22, x23
   6233c:	sturh	w8, [x24, #-3]
   62340:	add	x24, x24, #0x4
   62344:	b.cc	62308 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa5e4>  // b.lo, b.ul, b.last
   62348:	mov	x0, xzr
   6234c:	add	sp, sp, #0x200
   62350:	ldp	x20, x19, [sp, #64]
   62354:	ldp	x22, x21, [sp, #48]
   62358:	ldp	x24, x23, [sp, #32]
   6235c:	ldp	x28, x25, [sp, #16]
   62360:	ldp	x29, x30, [sp], #80
   62364:	ret
   62368:	str	wzr, [x0]
   6236c:	strh	wzr, [x0, #4]
   62370:	strb	w1, [x0, #6]
   62374:	strb	wzr, [x0, #7]
   62378:	mov	x0, xzr
   6237c:	ret
   62380:	cbz	w1, 623bc <ZDICT_addEntropyTablesFromBuffer@@Base+0xa698>
   62384:	add	x8, x0, #0x4
   62388:	mov	w9, #0x1                   	// #1
   6238c:	strh	w1, [x0]
   62390:	strh	w9, [x0, #2]
   62394:	sub	w10, w9, #0x1
   62398:	lsr	w11, w9, w1
   6239c:	add	x12, x8, w10, uxtw #2
   623a0:	add	w9, w9, #0x1
   623a4:	strh	wzr, [x12]
   623a8:	strb	w10, [x12, #2]
   623ac:	strb	w1, [x12, #3]
   623b0:	cbz	w11, 62394 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa670>
   623b4:	mov	x0, xzr
   623b8:	ret
   623bc:	mov	x0, #0xffffffffffffffff    	// #-1
   623c0:	ret
   623c4:	sub	sp, sp, #0x80
   623c8:	stp	x29, x30, [sp, #64]
   623cc:	stp	x22, x21, [sp, #96]
   623d0:	stp	x20, x19, [sp, #112]
   623d4:	ldrh	w8, [x4, #2]
   623d8:	add	x22, x0, x1
   623dc:	str	x23, [sp, #80]
   623e0:	mov	x20, x4
   623e4:	mov	x19, x0
   623e8:	sub	x23, x22, #0x3
   623ec:	add	x0, sp, #0x20
   623f0:	mov	x1, x2
   623f4:	mov	x2, x3
   623f8:	add	x29, sp, #0x40
   623fc:	cbz	w8, 62510 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa7ec>
   62400:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   62404:	mov	x21, x0
   62408:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6240c:	cbnz	w0, 62660 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa93c>
   62410:	add	x0, sp, #0x10
   62414:	add	x1, sp, #0x20
   62418:	mov	x2, x20
   6241c:	bl	65a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd78>
   62420:	mov	x0, sp
   62424:	add	x1, sp, #0x20
   62428:	mov	x2, x20
   6242c:	bl	65a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd78>
   62430:	add	x0, sp, #0x20
   62434:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62438:	cmp	x23, x19
   6243c:	mov	x20, x19
   62440:	b.ls	624a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa784>  // b.plast
   62444:	mov	x20, x19
   62448:	cbnz	w0, 624a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa784>
   6244c:	mov	x20, x19
   62450:	add	x0, sp, #0x10
   62454:	add	x1, sp, #0x20
   62458:	bl	65b8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde68>
   6245c:	strb	w0, [x20]
   62460:	mov	x0, sp
   62464:	add	x1, sp, #0x20
   62468:	bl	65b8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde68>
   6246c:	strb	w0, [x20, #1]
   62470:	add	x0, sp, #0x10
   62474:	add	x1, sp, #0x20
   62478:	bl	65b8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde68>
   6247c:	strb	w0, [x20, #2]
   62480:	mov	x0, sp
   62484:	add	x1, sp, #0x20
   62488:	bl	65b8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde68>
   6248c:	strb	w0, [x20, #3]
   62490:	add	x0, sp, #0x20
   62494:	add	x20, x20, #0x4
   62498:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   6249c:	cmp	x20, x23
   624a0:	b.cs	624a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa784>  // b.hs, b.nlast
   624a4:	cbz	w0, 62450 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa72c>
   624a8:	sub	x23, x22, #0x2
   624ac:	mov	w22, #0x3                   	// #3
   624b0:	cmp	x20, x23
   624b4:	b.hi	62620 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8fc>  // b.pmore
   624b8:	add	x0, sp, #0x10
   624bc:	add	x1, sp, #0x20
   624c0:	mov	x21, x20
   624c4:	bl	65b8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde68>
   624c8:	strb	w0, [x20], #1
   624cc:	add	x0, sp, #0x20
   624d0:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   624d4:	cmp	w0, #0x3
   624d8:	b.eq	62628 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa904>  // b.none
   624dc:	cmp	x20, x23
   624e0:	b.hi	62620 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8fc>  // b.pmore
   624e4:	mov	x0, sp
   624e8:	add	x1, sp, #0x20
   624ec:	bl	65b8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde68>
   624f0:	strb	w0, [x21, #1]
   624f4:	add	x0, sp, #0x20
   624f8:	add	x20, x21, #0x2
   624fc:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62500:	cmp	w0, #0x3
   62504:	b.ne	624b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa78c>  // b.any
   62508:	add	x0, sp, #0x10
   6250c:	b	62634 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa910>
   62510:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   62514:	mov	x21, x0
   62518:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6251c:	cbnz	w0, 62660 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa93c>
   62520:	add	x0, sp, #0x10
   62524:	add	x1, sp, #0x20
   62528:	mov	x2, x20
   6252c:	bl	65a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd78>
   62530:	mov	x0, sp
   62534:	add	x1, sp, #0x20
   62538:	mov	x2, x20
   6253c:	bl	65a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd78>
   62540:	add	x0, sp, #0x20
   62544:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62548:	cmp	x23, x19
   6254c:	mov	x20, x19
   62550:	b.ls	625b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa894>  // b.plast
   62554:	mov	x20, x19
   62558:	cbnz	w0, 625b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa894>
   6255c:	mov	x20, x19
   62560:	add	x0, sp, #0x10
   62564:	add	x1, sp, #0x20
   62568:	bl	65bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdeb8>
   6256c:	strb	w0, [x20]
   62570:	mov	x0, sp
   62574:	add	x1, sp, #0x20
   62578:	bl	65bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdeb8>
   6257c:	strb	w0, [x20, #1]
   62580:	add	x0, sp, #0x10
   62584:	add	x1, sp, #0x20
   62588:	bl	65bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdeb8>
   6258c:	strb	w0, [x20, #2]
   62590:	mov	x0, sp
   62594:	add	x1, sp, #0x20
   62598:	bl	65bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdeb8>
   6259c:	strb	w0, [x20, #3]
   625a0:	add	x0, sp, #0x20
   625a4:	add	x20, x20, #0x4
   625a8:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   625ac:	cmp	x20, x23
   625b0:	b.cs	625b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa894>  // b.hs, b.nlast
   625b4:	cbz	w0, 62560 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa83c>
   625b8:	sub	x23, x22, #0x2
   625bc:	mov	w22, #0x3                   	// #3
   625c0:	cmp	x20, x23
   625c4:	b.hi	62620 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8fc>  // b.pmore
   625c8:	add	x0, sp, #0x10
   625cc:	add	x1, sp, #0x20
   625d0:	mov	x21, x20
   625d4:	bl	65bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdeb8>
   625d8:	strb	w0, [x20], #1
   625dc:	add	x0, sp, #0x20
   625e0:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   625e4:	cmp	w0, #0x3
   625e8:	b.eq	62640 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa91c>  // b.none
   625ec:	cmp	x20, x23
   625f0:	b.hi	62620 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa8fc>  // b.pmore
   625f4:	mov	x0, sp
   625f8:	add	x1, sp, #0x20
   625fc:	bl	65bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdeb8>
   62600:	strb	w0, [x21, #1]
   62604:	add	x0, sp, #0x20
   62608:	add	x20, x21, #0x2
   6260c:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62610:	cmp	w0, #0x3
   62614:	b.ne	625c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa89c>  // b.any
   62618:	add	x0, sp, #0x10
   6261c:	b	6264c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa928>
   62620:	mov	x21, #0xffffffffffffffba    	// #-70
   62624:	b	62660 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa93c>
   62628:	add	x20, x21, #0x1
   6262c:	mov	x0, sp
   62630:	mov	w22, #0x2                   	// #2
   62634:	add	x1, sp, #0x20
   62638:	bl	65b8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde68>
   6263c:	b	62654 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa930>
   62640:	add	x20, x21, #0x1
   62644:	mov	x0, sp
   62648:	mov	w22, #0x2                   	// #2
   6264c:	add	x1, sp, #0x20
   62650:	bl	65bdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdeb8>
   62654:	add	x8, x21, x22
   62658:	sub	x21, x8, x19
   6265c:	strb	w0, [x20]
   62660:	mov	x0, x21
   62664:	ldp	x20, x19, [sp, #112]
   62668:	ldp	x22, x21, [sp, #96]
   6266c:	ldr	x23, [sp, #80]
   62670:	ldp	x29, x30, [sp, #64]
   62674:	add	sp, sp, #0x80
   62678:	ret
   6267c:	sub	sp, sp, #0x180
   62680:	stp	x29, x30, [sp, #336]
   62684:	add	x29, sp, #0x150
   62688:	stp	x20, x19, [sp, #368]
   6268c:	mov	x6, x2
   62690:	mov	x5, x1
   62694:	mov	x20, x0
   62698:	add	x0, sp, #0x50
   6269c:	add	x2, sp, #0xc
   626a0:	add	x3, x29, #0x18
   626a4:	add	x4, x29, #0x1c
   626a8:	mov	w1, #0x100                 	// #256
   626ac:	str	x28, [sp, #352]
   626b0:	str	xzr, [x29, #24]
   626b4:	bl	61e50 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa12c>
   626b8:	mov	x19, x0
   626bc:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   626c0:	cbnz	w0, 627b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa94>
   626c4:	mov	x0, x20
   626c8:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   626cc:	ldr	w9, [x29, #28]
   626d0:	and	w8, w0, #0xff
   626d4:	add	w8, w8, #0x1
   626d8:	cmp	w9, w8
   626dc:	b.ls	626e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa9c4>  // b.plast
   626e0:	mov	x19, #0xffffffffffffffd4    	// #-44
   626e4:	b	627b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa94>
   626e8:	add	w11, w9, #0x1
   626ec:	lsr	w8, w0, #24
   626f0:	cmp	w11, #0x2
   626f4:	strb	w0, [x20]
   626f8:	strb	wzr, [x20, #1]
   626fc:	strb	w9, [x20, #2]
   62700:	strb	w8, [x20, #3]
   62704:	b.cc	62744 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa20>  // b.lo, b.ul, b.last
   62708:	mov	w12, w11
   6270c:	add	x11, sp, #0xc
   62710:	mov	x8, xzr
   62714:	mov	w10, wzr
   62718:	add	x11, x11, #0x4
   6271c:	sub	x12, x12, #0x1
   62720:	lsl	x13, x8, #2
   62724:	ldr	w14, [x11, x13]
   62728:	str	w10, [x11, x13]
   6272c:	lsl	w14, w14, w8
   62730:	add	x8, x8, #0x1
   62734:	add	w14, w14, w10
   62738:	cmp	x12, x8
   6273c:	mov	w10, w14
   62740:	b.ne	62720 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa9fc>  // b.any
   62744:	ldr	w8, [x29, #24]
   62748:	cbz	w8, 627b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa94>
   6274c:	ldr	w10, [x29, #24]
   62750:	mov	x8, xzr
   62754:	add	w9, w9, #0x1
   62758:	add	x11, x20, #0x5
   6275c:	add	x12, sp, #0x50
   62760:	mov	w13, #0x1                   	// #1
   62764:	add	x14, sp, #0xc
   62768:	b	6277c <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa58>
   6276c:	add	x8, x8, #0x1
   62770:	cmp	x8, x10
   62774:	str	w16, [x14, x15, lsl #2]
   62778:	b.cs	627b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa94>  // b.hs, b.nlast
   6277c:	ldrb	w15, [x12, x8]
   62780:	ldr	w0, [x14, x15, lsl #2]
   62784:	lsl	w16, w13, w15
   62788:	add	w16, w0, w16, asr #1
   6278c:	cmp	w0, w16
   62790:	b.cs	6276c <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa48>  // b.hs, b.nlast
   62794:	mov	w1, w16
   62798:	sub	w17, w9, w15
   6279c:	add	x18, x11, x0, lsl #1
   627a0:	sub	x0, x1, x0
   627a4:	sturb	w8, [x18, #-1]
   627a8:	strb	w17, [x18], #2
   627ac:	subs	x0, x0, #0x1
   627b0:	b.ne	627a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa80>  // b.any
   627b4:	b	6276c <ZDICT_addEntropyTablesFromBuffer@@Base+0xaa48>
   627b8:	mov	x0, x19
   627bc:	ldp	x20, x19, [sp, #368]
   627c0:	ldr	x28, [sp, #352]
   627c4:	ldp	x29, x30, [sp, #336]
   627c8:	add	sp, sp, #0x180
   627cc:	ret
   627d0:	ldr	w0, [x0]
   627d4:	ret
   627d8:	stp	x29, x30, [sp, #-64]!
   627dc:	str	x23, [sp, #16]
   627e0:	mov	x23, x0
   627e4:	mov	x0, x4
   627e8:	stp	x22, x21, [sp, #32]
   627ec:	stp	x20, x19, [sp, #48]
   627f0:	mov	x29, sp
   627f4:	mov	x19, x4
   627f8:	mov	x20, x3
   627fc:	mov	x21, x2
   62800:	mov	x22, x1
   62804:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   62808:	tst	x0, #0xff00
   6280c:	b.eq	62818 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaf4>  // b.none
   62810:	mov	x0, #0xffffffffffffffff    	// #-1
   62814:	b	62830 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab0c>
   62818:	mov	x0, x23
   6281c:	mov	x1, x22
   62820:	mov	x2, x21
   62824:	mov	x3, x20
   62828:	mov	x4, x19
   6282c:	bl	62844 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab20>
   62830:	ldp	x20, x19, [sp, #48]
   62834:	ldp	x22, x21, [sp, #32]
   62838:	ldr	x23, [sp, #16]
   6283c:	ldp	x29, x30, [sp], #64
   62840:	ret
   62844:	sub	sp, sp, #0x60
   62848:	stp	x20, x19, [sp, #80]
   6284c:	mov	x20, x0
   62850:	mov	x0, x4
   62854:	stp	x29, x30, [sp, #32]
   62858:	stp	x24, x23, [sp, #48]
   6285c:	stp	x22, x21, [sp, #64]
   62860:	add	x29, sp, #0x20
   62864:	mov	x21, x4
   62868:	mov	x23, x3
   6286c:	mov	x24, x2
   62870:	mov	x19, x1
   62874:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   62878:	mov	x22, x0
   6287c:	mov	x0, sp
   62880:	mov	x1, x24
   62884:	mov	x2, x23
   62888:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   6288c:	mov	x23, x0
   62890:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   62894:	cbnz	w0, 628c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaba0>
   62898:	ubfx	w4, w22, #16, #8
   6289c:	add	x3, x21, #0x4
   628a0:	add	x2, x20, x19
   628a4:	mov	x1, sp
   628a8:	mov	x0, x20
   628ac:	bl	65d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfe4>
   628b0:	mov	x0, sp
   628b4:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   628b8:	cmp	w0, #0x0
   628bc:	mov	x8, #0xffffffffffffffec    	// #-20
   628c0:	csel	x23, x8, x19, eq  // eq = none
   628c4:	mov	x0, x23
   628c8:	ldp	x20, x19, [sp, #80]
   628cc:	ldp	x22, x21, [sp, #64]
   628d0:	ldp	x24, x23, [sp, #48]
   628d4:	ldp	x29, x30, [sp, #32]
   628d8:	add	sp, sp, #0x60
   628dc:	ret
   628e0:	stp	x29, x30, [sp, #-64]!
   628e4:	stp	x22, x21, [sp, #32]
   628e8:	stp	x20, x19, [sp, #48]
   628ec:	mov	x20, x2
   628f0:	mov	x22, x1
   628f4:	mov	x1, x3
   628f8:	mov	x2, x4
   628fc:	stp	x24, x23, [sp, #16]
   62900:	mov	x29, sp
   62904:	mov	x21, x4
   62908:	mov	x23, x3
   6290c:	mov	x19, x0
   62910:	bl	6267c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa958>
   62914:	mov	x24, x0
   62918:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   6291c:	cbnz	w0, 6294c <ZDICT_addEntropyTablesFromBuffer@@Base+0xac28>
   62920:	cmp	x24, x21
   62924:	b.cs	62948 <ZDICT_addEntropyTablesFromBuffer@@Base+0xac24>  // b.hs, b.nlast
   62928:	add	x2, x23, x24
   6292c:	sub	x3, x21, x24
   62930:	mov	x0, x22
   62934:	mov	x1, x20
   62938:	mov	x4, x19
   6293c:	bl	62844 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab20>
   62940:	mov	x24, x0
   62944:	b	6294c <ZDICT_addEntropyTablesFromBuffer@@Base+0xac28>
   62948:	mov	x24, #0xffffffffffffffb8    	// #-72
   6294c:	mov	x0, x24
   62950:	ldp	x20, x19, [sp, #48]
   62954:	ldp	x22, x21, [sp, #32]
   62958:	ldp	x24, x23, [sp, #16]
   6295c:	ldp	x29, x30, [sp], #64
   62960:	ret
   62964:	stp	x29, x30, [sp, #-64]!
   62968:	str	x28, [sp, #16]
   6296c:	stp	x22, x21, [sp, #32]
   62970:	stp	x20, x19, [sp, #48]
   62974:	mov	x29, sp
   62978:	sub	sp, sp, #0x2, lsl #12
   6297c:	sub	sp, sp, #0x10
   62980:	mov	x20, x2
   62984:	mov	x21, x1
   62988:	mov	x22, x0
   6298c:	add	x0, sp, #0xc
   62990:	mov	w2, #0x2004                	// #8196
   62994:	mov	w1, wzr
   62998:	mov	x19, x3
   6299c:	bl	46a0 <memset@plt>
   629a0:	mov	w8, #0xb                   	// #11
   629a4:	movk	w8, #0xb00, lsl #16
   629a8:	add	x0, sp, #0xc
   629ac:	mov	x1, x22
   629b0:	mov	x2, x21
   629b4:	mov	x3, x20
   629b8:	mov	x4, x19
   629bc:	str	w8, [sp, #12]
   629c0:	bl	628e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabbc>
   629c4:	add	sp, sp, #0x2, lsl #12
   629c8:	add	sp, sp, #0x10
   629cc:	ldp	x20, x19, [sp, #48]
   629d0:	ldp	x22, x21, [sp, #32]
   629d4:	ldr	x28, [sp, #16]
   629d8:	ldp	x29, x30, [sp], #64
   629dc:	ret
   629e0:	stp	x29, x30, [sp, #-64]!
   629e4:	str	x23, [sp, #16]
   629e8:	mov	x23, x0
   629ec:	mov	x0, x4
   629f0:	stp	x22, x21, [sp, #32]
   629f4:	stp	x20, x19, [sp, #48]
   629f8:	mov	x29, sp
   629fc:	mov	x19, x4
   62a00:	mov	x20, x3
   62a04:	mov	x21, x2
   62a08:	mov	x22, x1
   62a0c:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   62a10:	tst	x0, #0xff00
   62a14:	b.eq	62a20 <ZDICT_addEntropyTablesFromBuffer@@Base+0xacfc>  // b.none
   62a18:	mov	x0, #0xffffffffffffffff    	// #-1
   62a1c:	b	62a38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xad14>
   62a20:	mov	x0, x23
   62a24:	mov	x1, x22
   62a28:	mov	x2, x21
   62a2c:	mov	x3, x20
   62a30:	mov	x4, x19
   62a34:	bl	62a4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xad28>
   62a38:	ldp	x20, x19, [sp, #48]
   62a3c:	ldp	x22, x21, [sp, #32]
   62a40:	ldr	x23, [sp, #16]
   62a44:	ldp	x29, x30, [sp], #64
   62a48:	ret
   62a4c:	sub	sp, sp, #0x120
   62a50:	cmp	x3, #0xa
   62a54:	stp	x29, x30, [sp, #192]
   62a58:	stp	x28, x27, [sp, #208]
   62a5c:	stp	x26, x25, [sp, #224]
   62a60:	stp	x24, x23, [sp, #240]
   62a64:	stp	x22, x21, [sp, #256]
   62a68:	stp	x20, x19, [sp, #272]
   62a6c:	add	x29, sp, #0xc0
   62a70:	b.cc	62ac8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xada4>  // b.lo, b.ul, b.last
   62a74:	mov	x20, x0
   62a78:	mov	x0, x2
   62a7c:	mov	x21, x4
   62a80:	mov	x23, x3
   62a84:	mov	x27, x2
   62a88:	mov	x19, x1
   62a8c:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   62a90:	and	x26, x0, #0xffff
   62a94:	add	x0, x27, #0x2
   62a98:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   62a9c:	and	x25, x0, #0xffff
   62aa0:	add	x0, x27, #0x4
   62aa4:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   62aa8:	and	x22, x0, #0xffff
   62aac:	add	x8, x26, x25
   62ab0:	add	x8, x8, x22
   62ab4:	mov	x0, x21
   62ab8:	add	x24, x8, #0x6
   62abc:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   62ac0:	subs	x24, x23, x24
   62ac4:	b.cs	62af0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xadcc>  // b.hs, b.nlast
   62ac8:	mov	x27, #0xffffffffffffffec    	// #-20
   62acc:	mov	x0, x27
   62ad0:	ldp	x20, x19, [sp, #272]
   62ad4:	ldp	x22, x21, [sp, #256]
   62ad8:	ldp	x24, x23, [sp, #240]
   62adc:	ldp	x26, x25, [sp, #224]
   62ae0:	ldp	x28, x27, [sp, #208]
   62ae4:	ldp	x29, x30, [sp, #192]
   62ae8:	add	sp, sp, #0x120
   62aec:	ret
   62af0:	add	x28, x27, #0x6
   62af4:	mov	x23, x0
   62af8:	sub	x0, x29, #0x28
   62afc:	mov	x1, x28
   62b00:	mov	x2, x26
   62b04:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   62b08:	mov	x27, x0
   62b0c:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   62b10:	cbnz	w0, 62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>
   62b14:	add	x26, x28, x26
   62b18:	sub	x0, x29, #0x48
   62b1c:	mov	x1, x26
   62b20:	mov	x2, x25
   62b24:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   62b28:	mov	x28, x0
   62b2c:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   62b30:	cmp	w0, #0x0
   62b34:	csel	x27, x27, x28, eq  // eq = none
   62b38:	cbnz	w0, 62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>
   62b3c:	add	x25, x26, x25
   62b40:	add	x0, sp, #0x58
   62b44:	mov	x1, x25
   62b48:	mov	x2, x22
   62b4c:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   62b50:	mov	x26, x0
   62b54:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   62b58:	cmp	w0, #0x0
   62b5c:	csel	x27, x27, x26, eq  // eq = none
   62b60:	cbnz	w0, 62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>
   62b64:	add	x1, x25, x22
   62b68:	add	x0, sp, #0x38
   62b6c:	mov	x2, x24
   62b70:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   62b74:	mov	x22, x0
   62b78:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   62b7c:	cmp	w0, #0x0
   62b80:	csel	x27, x27, x22, eq  // eq = none
   62b84:	cbnz	w0, 62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>
   62b88:	add	x8, x19, #0x3
   62b8c:	lsr	x27, x8, #2
   62b90:	add	x8, x20, x27
   62b94:	str	x8, [sp, #24]
   62b98:	add	x8, x8, x27
   62b9c:	sub	x0, x29, #0x28
   62ba0:	add	x24, x20, x19
   62ba4:	add	x21, x21, #0x4
   62ba8:	str	x8, [sp, #32]
   62bac:	add	x28, x8, x27
   62bb0:	ubfx	w23, w23, #16, #8
   62bb4:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62bb8:	mov	w25, w0
   62bbc:	sub	x0, x29, #0x48
   62bc0:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62bc4:	orr	w22, w0, w25
   62bc8:	add	x0, sp, #0x58
   62bcc:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62bd0:	orr	w22, w22, w0
   62bd4:	add	x0, sp, #0x38
   62bd8:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62bdc:	orr	w8, w22, w0
   62be0:	cbnz	w8, 62dc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb0a0>
   62be4:	sub	x8, x24, #0x7
   62be8:	cmp	x28, x8
   62bec:	mov	x25, x28
   62bf0:	str	x8, [sp, #48]
   62bf4:	b.cs	62de0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb0bc>  // b.hs, b.nlast
   62bf8:	lsl	x28, x27, #1
   62bfc:	add	x8, x28, x27
   62c00:	stp	x25, x24, [sp, #8]
   62c04:	str	x8, [sp, #40]
   62c08:	ldr	x8, [sp, #40]
   62c0c:	sub	x0, x29, #0x28
   62c10:	mov	x1, x21
   62c14:	mov	w2, w23
   62c18:	add	x26, x20, x27
   62c1c:	add	x22, x20, x28
   62c20:	add	x24, x20, x8
   62c24:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62c28:	strb	w0, [x20]
   62c2c:	sub	x0, x29, #0x48
   62c30:	mov	x1, x21
   62c34:	mov	w2, w23
   62c38:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62c3c:	strb	w0, [x26]
   62c40:	add	x0, sp, #0x58
   62c44:	mov	x1, x21
   62c48:	mov	w2, w23
   62c4c:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62c50:	strb	w0, [x22]
   62c54:	add	x0, sp, #0x38
   62c58:	mov	x1, x21
   62c5c:	mov	w2, w23
   62c60:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62c64:	strb	w0, [x24]
   62c68:	sub	x0, x29, #0x28
   62c6c:	mov	x1, x21
   62c70:	mov	w2, w23
   62c74:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62c78:	strb	w0, [x20, #1]
   62c7c:	sub	x0, x29, #0x48
   62c80:	mov	x1, x21
   62c84:	mov	w2, w23
   62c88:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62c8c:	strb	w0, [x26, #1]
   62c90:	add	x0, sp, #0x58
   62c94:	mov	x1, x21
   62c98:	mov	w2, w23
   62c9c:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62ca0:	strb	w0, [x22, #1]
   62ca4:	add	x0, sp, #0x38
   62ca8:	mov	x1, x21
   62cac:	mov	w2, w23
   62cb0:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62cb4:	strb	w0, [x24, #1]
   62cb8:	sub	x0, x29, #0x28
   62cbc:	mov	x1, x21
   62cc0:	mov	w2, w23
   62cc4:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62cc8:	strb	w0, [x20, #2]
   62ccc:	sub	x0, x29, #0x48
   62cd0:	mov	x1, x21
   62cd4:	mov	w2, w23
   62cd8:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62cdc:	strb	w0, [x26, #2]
   62ce0:	add	x0, sp, #0x58
   62ce4:	mov	x1, x21
   62ce8:	mov	w2, w23
   62cec:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62cf0:	strb	w0, [x22, #2]
   62cf4:	add	x0, sp, #0x38
   62cf8:	mov	x1, x21
   62cfc:	mov	w2, w23
   62d00:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62d04:	strb	w0, [x24, #2]
   62d08:	sub	x0, x29, #0x28
   62d0c:	mov	x1, x21
   62d10:	mov	w2, w23
   62d14:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62d18:	strb	w0, [x20, #3]
   62d1c:	sub	x0, x29, #0x48
   62d20:	mov	x1, x21
   62d24:	mov	w2, w23
   62d28:	add	x25, x20, #0x4
   62d2c:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62d30:	strb	w0, [x26, #3]
   62d34:	add	x0, sp, #0x58
   62d38:	mov	x1, x21
   62d3c:	mov	w2, w23
   62d40:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62d44:	strb	w0, [x22, #3]
   62d48:	add	x0, sp, #0x38
   62d4c:	mov	x1, x21
   62d50:	mov	w2, w23
   62d54:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   62d58:	strb	w0, [x24, #3]
   62d5c:	sub	x0, x29, #0x28
   62d60:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62d64:	mov	w20, w0
   62d68:	sub	x0, x29, #0x48
   62d6c:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62d70:	orr	w20, w0, w20
   62d74:	add	x0, sp, #0x58
   62d78:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62d7c:	orr	w20, w20, w0
   62d80:	add	x0, sp, #0x38
   62d84:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   62d88:	orr	w8, w20, w0
   62d8c:	cbnz	w8, 62da4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb080>
   62d90:	ldr	x9, [sp, #48]
   62d94:	add	x8, x24, #0x4
   62d98:	mov	x20, x25
   62d9c:	cmp	x8, x9
   62da0:	b.cc	62c08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaee4>  // b.lo, b.ul, b.last
   62da4:	add	x8, x28, x27
   62da8:	add	x26, x25, x27
   62dac:	add	x22, x25, x28
   62db0:	add	x9, x25, x8
   62db4:	mov	x20, x25
   62db8:	ldp	x25, x24, [sp, #8]
   62dbc:	ldp	x2, x28, [sp, #24]
   62dc0:	b	62df0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb0cc>
   62dc4:	ldp	x2, x8, [sp, #24]
   62dc8:	mov	x9, x28
   62dcc:	mov	x25, x28
   62dd0:	mov	x22, x8
   62dd4:	mov	x26, x2
   62dd8:	mov	x28, x8
   62ddc:	b	62df0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb0cc>
   62de0:	ldp	x2, x28, [sp, #24]
   62de4:	mov	x9, x25
   62de8:	mov	x22, x28
   62dec:	mov	x26, x2
   62df0:	cmp	x22, x25
   62df4:	mov	x27, #0xffffffffffffffec    	// #-20
   62df8:	b.hi	62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>  // b.pmore
   62dfc:	cmp	x26, x28
   62e00:	b.hi	62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>  // b.pmore
   62e04:	cmp	x20, x2
   62e08:	b.hi	62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>  // b.pmore
   62e0c:	sub	x1, x29, #0x28
   62e10:	mov	x0, x20
   62e14:	mov	x3, x21
   62e18:	mov	w4, w23
   62e1c:	mov	x27, x9
   62e20:	bl	65d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfe4>
   62e24:	sub	x1, x29, #0x48
   62e28:	mov	x0, x26
   62e2c:	mov	x2, x28
   62e30:	mov	x3, x21
   62e34:	mov	w4, w23
   62e38:	bl	65d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfe4>
   62e3c:	add	x1, sp, #0x58
   62e40:	mov	x0, x22
   62e44:	mov	x2, x25
   62e48:	mov	x3, x21
   62e4c:	mov	w4, w23
   62e50:	bl	65d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfe4>
   62e54:	add	x1, sp, #0x38
   62e58:	mov	x0, x27
   62e5c:	mov	x2, x24
   62e60:	mov	x3, x21
   62e64:	mov	w4, w23
   62e68:	bl	65d08 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfe4>
   62e6c:	sub	x0, x29, #0x28
   62e70:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   62e74:	mov	w20, w0
   62e78:	sub	x0, x29, #0x48
   62e7c:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   62e80:	and	w20, w0, w20
   62e84:	add	x0, sp, #0x58
   62e88:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   62e8c:	and	w20, w20, w0
   62e90:	add	x0, sp, #0x38
   62e94:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   62e98:	tst	w20, w0
   62e9c:	mov	x8, #0xffffffffffffffec    	// #-20
   62ea0:	csel	x27, x8, x19, eq  // eq = none
   62ea4:	b	62acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xada8>
   62ea8:	stp	x29, x30, [sp, #-64]!
   62eac:	stp	x22, x21, [sp, #32]
   62eb0:	stp	x20, x19, [sp, #48]
   62eb4:	mov	x20, x2
   62eb8:	mov	x22, x1
   62ebc:	mov	x1, x3
   62ec0:	mov	x2, x4
   62ec4:	stp	x24, x23, [sp, #16]
   62ec8:	mov	x29, sp
   62ecc:	mov	x21, x4
   62ed0:	mov	x23, x3
   62ed4:	mov	x19, x0
   62ed8:	bl	6267c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa958>
   62edc:	mov	x24, x0
   62ee0:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   62ee4:	cbnz	w0, 62f14 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb1f0>
   62ee8:	cmp	x24, x21
   62eec:	b.cs	62f10 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb1ec>  // b.hs, b.nlast
   62ef0:	add	x2, x23, x24
   62ef4:	sub	x3, x21, x24
   62ef8:	mov	x0, x22
   62efc:	mov	x1, x20
   62f00:	mov	x4, x19
   62f04:	bl	62a4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xad28>
   62f08:	mov	x24, x0
   62f0c:	b	62f14 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb1f0>
   62f10:	mov	x24, #0xffffffffffffffb8    	// #-72
   62f14:	mov	x0, x24
   62f18:	ldp	x20, x19, [sp, #48]
   62f1c:	ldp	x22, x21, [sp, #32]
   62f20:	ldp	x24, x23, [sp, #16]
   62f24:	ldp	x29, x30, [sp], #64
   62f28:	ret
   62f2c:	stp	x29, x30, [sp, #-64]!
   62f30:	str	x28, [sp, #16]
   62f34:	stp	x22, x21, [sp, #32]
   62f38:	stp	x20, x19, [sp, #48]
   62f3c:	mov	x29, sp
   62f40:	sub	sp, sp, #0x2, lsl #12
   62f44:	sub	sp, sp, #0x10
   62f48:	mov	x20, x2
   62f4c:	mov	x21, x1
   62f50:	mov	x22, x0
   62f54:	add	x0, sp, #0xc
   62f58:	mov	w2, #0x2004                	// #8196
   62f5c:	mov	w1, wzr
   62f60:	mov	x19, x3
   62f64:	bl	46a0 <memset@plt>
   62f68:	mov	w8, #0xb                   	// #11
   62f6c:	movk	w8, #0xb00, lsl #16
   62f70:	add	x0, sp, #0xc
   62f74:	mov	x1, x22
   62f78:	mov	x2, x21
   62f7c:	mov	x3, x20
   62f80:	mov	x4, x19
   62f84:	str	w8, [sp, #12]
   62f88:	bl	62ea8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb184>
   62f8c:	add	sp, sp, #0x2, lsl #12
   62f90:	add	sp, sp, #0x10
   62f94:	ldp	x20, x19, [sp, #48]
   62f98:	ldp	x22, x21, [sp, #32]
   62f9c:	ldr	x28, [sp, #16]
   62fa0:	ldp	x29, x30, [sp], #64
   62fa4:	ret
   62fa8:	stp	x29, x30, [sp, #-80]!
   62fac:	str	x28, [sp, #16]
   62fb0:	stp	x24, x23, [sp, #32]
   62fb4:	stp	x22, x21, [sp, #48]
   62fb8:	stp	x20, x19, [sp, #64]
   62fbc:	mov	x29, sp
   62fc0:	sub	sp, sp, #0x7f0
   62fc4:	add	x24, sp, #0x450
   62fc8:	movi	v0.2d, #0x0
   62fcc:	mov	x21, x2
   62fd0:	mov	x23, x1
   62fd4:	mov	x19, x0
   62fd8:	str	wzr, [sp, #1248]
   62fdc:	str	xzr, [sp, #1168]
   62fe0:	stp	q0, q0, [x24, #112]
   62fe4:	stp	q0, q0, [x24, #80]
   62fe8:	stp	q0, q0, [x24, #32]
   62fec:	stp	q0, q0, [x24]
   62ff0:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   62ff4:	mov	x20, x0
   62ff8:	and	w22, w20, #0xff
   62ffc:	cmp	w22, #0x10
   63000:	b.ls	6300c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb2e8>  // b.plast
   63004:	mov	x21, #0xffffffffffffffd4    	// #-44
   63008:	b	631e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb4c0>
   6300c:	sub	x0, x29, #0x100
   63010:	add	x2, sp, #0x4a0
   63014:	add	x3, sp, #0x8
   63018:	add	x4, sp, #0xc
   6301c:	mov	w1, #0x100                 	// #256
   63020:	mov	x5, x23
   63024:	mov	x6, x21
   63028:	bl	61e50 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa12c>
   6302c:	mov	x21, x0
   63030:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   63034:	cbnz	w0, 631e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb4c0>
   63038:	ldr	w9, [sp, #12]
   6303c:	cmp	w9, w22
   63040:	b.hi	63004 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb2e0>  // b.pmore
   63044:	mov	w10, wzr
   63048:	orr	x11, x24, #0x4
   6304c:	add	x0, x19, #0x4
   63050:	add	x8, sp, #0x4a0
   63054:	add	w12, w9, w10
   63058:	ldr	w12, [x8, w12, uxtw #2]
   6305c:	sub	w10, w10, #0x1
   63060:	cbz	w12, 63054 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb330>
   63064:	add	w12, w9, w10
   63068:	add	w8, w12, #0x2
   6306c:	cmp	w8, #0x2
   63070:	mov	w3, wzr
   63074:	b.cc	630ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xb388>  // b.lo, b.ul, b.last
   63078:	add	x14, sp, #0x4a0
   6307c:	add	x15, sp, #0x450
   63080:	mov	w16, w8
   63084:	mov	w13, wzr
   63088:	orr	x14, x14, #0x4
   6308c:	orr	x15, x15, #0x8
   63090:	sub	x16, x16, #0x1
   63094:	ldr	w17, [x14], #4
   63098:	subs	x16, x16, #0x1
   6309c:	str	w13, [x15], #4
   630a0:	add	w3, w17, w13
   630a4:	mov	w13, w3
   630a8:	b.ne	63094 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb370>  // b.any
   630ac:	ldr	w13, [sp, #8]
   630b0:	str	w3, [sp, #1108]
   630b4:	cbz	w13, 630f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb3d0>
   630b8:	ldr	w14, [sp, #8]
   630bc:	mov	x13, xzr
   630c0:	sub	x15, x29, #0x100
   630c4:	add	x16, sp, #0x4f0
   630c8:	ldrb	w17, [x15, x13]
   630cc:	lsl	x18, x17, #2
   630d0:	ldr	w1, [x11, x18]
   630d4:	add	w2, w1, #0x1
   630d8:	add	x1, x16, x1, lsl #1
   630dc:	strb	w13, [x1]
   630e0:	add	x13, x13, #0x1
   630e4:	cmp	x13, x14
   630e8:	str	w2, [x11, x18]
   630ec:	strb	w17, [x1, #1]
   630f0:	b.cc	630c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb3a4>  // b.lo, b.ul, b.last
   630f4:	add	w6, w12, #0x1
   630f8:	cmp	w8, #0x2
   630fc:	str	wzr, [sp, #1108]
   63100:	b.cc	63140 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb41c>  // b.lo, b.ul, b.last
   63104:	add	x12, sp, #0x4a0
   63108:	add	x13, sp, #0x10
   6310c:	mov	w14, w8
   63110:	mov	w15, wzr
   63114:	sub	w11, w22, w9
   63118:	orr	x12, x12, #0x4
   6311c:	add	x13, x13, #0x4
   63120:	sub	x14, x14, #0x1
   63124:	ldr	w16, [x12], #4
   63128:	str	w15, [x13], #4
   6312c:	subs	x14, x14, #0x1
   63130:	lsl	w16, w16, w11
   63134:	add	w15, w16, w15
   63138:	add	w11, w11, #0x1
   6313c:	b.ne	63124 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb400>  // b.any
   63140:	add	w11, w22, w10
   63144:	neg	w12, w10
   63148:	add	w11, w11, #0x1
   6314c:	cmp	w12, w11
   63150:	add	w7, w9, #0x1
   63154:	b.cs	631b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb494>  // b.hs, b.nlast
   63158:	neg	w13, w10
   6315c:	mov	w9, w12
   63160:	add	x10, sp, #0x10
   63164:	mov	w12, #0x44                  	// #68
   63168:	mov	w14, w8
   6316c:	add	x10, x10, #0x4
   63170:	umull	x12, w13, w12
   63174:	sub	x13, x14, #0x1
   63178:	b	6318c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb468>
   6317c:	add	x9, x9, #0x1
   63180:	cmp	w11, w9
   63184:	add	x12, x12, #0x44
   63188:	b.eq	631b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb494>  // b.none
   6318c:	cmp	w8, #0x2
   63190:	b.cc	6317c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb458>  // b.lo, b.ul, b.last
   63194:	mov	x14, x13
   63198:	mov	x15, x10
   6319c:	ldr	w16, [x15]
   631a0:	subs	x14, x14, #0x1
   631a4:	lsr	w16, w16, w9
   631a8:	str	w16, [x15, x12]
   631ac:	add	x15, x15, #0x4
   631b0:	b.ne	6319c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb478>  // b.any
   631b4:	b	6317c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb458>
   631b8:	add	x2, sp, #0x4f0
   631bc:	add	x4, sp, #0x450
   631c0:	add	x5, sp, #0x10
   631c4:	mov	w1, w22
   631c8:	lsr	w23, w20, #24
   631cc:	bl	63204 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb4e0>
   631d0:	mov	w8, #0x1                   	// #1
   631d4:	strb	w20, [x19]
   631d8:	strb	w20, [x19, #2]
   631dc:	strb	w8, [x19, #1]
   631e0:	strb	w23, [x19, #3]
   631e4:	mov	x0, x21
   631e8:	add	sp, sp, #0x7f0
   631ec:	ldp	x20, x19, [sp, #64]
   631f0:	ldp	x22, x21, [sp, #48]
   631f4:	ldp	x24, x23, [sp, #32]
   631f8:	ldr	x28, [sp, #16]
   631fc:	ldp	x29, x30, [sp], #80
   63200:	ret
   63204:	sub	sp, sp, #0xf0
   63208:	stp	x29, x30, [sp, #144]
   6320c:	stp	x28, x27, [sp, #160]
   63210:	stp	x26, x25, [sp, #176]
   63214:	stp	x24, x23, [sp, #192]
   63218:	stp	x22, x21, [sp, #208]
   6321c:	stp	x20, x19, [sp, #224]
   63220:	stp	x4, x5, [sp, #24]
   63224:	str	w1, [sp, #56]
   63228:	str	x0, [sp, #48]
   6322c:	ldp	q0, q2, [x5]
   63230:	add	x29, sp, #0x90
   63234:	stp	q0, q2, [sp, #64]
   63238:	ldr	w8, [x5, #64]
   6323c:	ldp	q1, q0, [x5, #32]
   63240:	str	w3, [sp, #44]
   63244:	str	w8, [sp, #128]
   63248:	stp	q1, q0, [sp, #96]
   6324c:	cbz	w3, 63350 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb62c>
   63250:	ldr	w8, [sp, #56]
   63254:	mov	w19, w7
   63258:	mov	x23, x2
   6325c:	mov	x27, xzr
   63260:	sub	w8, w7, w8
   63264:	str	w8, [sp, #20]
   63268:	ldr	w8, [sp, #44]
   6326c:	sub	w21, w7, w6
   63270:	add	x22, sp, #0x40
   63274:	mov	w11, #0x1                   	// #1
   63278:	mov	w28, w8
   6327c:	b	632e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5c0>
   63280:	ldr	w9, [sp, #20]
   63284:	ldr	x10, [sp, #48]
   63288:	mov	w11, #0x44                  	// #68
   6328c:	mov	w2, w26
   63290:	add	w9, w26, w9
   63294:	cmp	w9, #0x1
   63298:	csinc	w4, w9, wzr, gt
   6329c:	ldr	x9, [sp, #24]
   632a0:	add	x0, x10, x20, lsl #2
   632a4:	ldr	x10, [sp, #32]
   632a8:	mov	w7, w19
   632ac:	ldr	w9, [x9, w4, uxtw #2]
   632b0:	strh	w1, [sp]
   632b4:	umaddl	x3, w26, w11, x10
   632b8:	ldr	w10, [sp, #44]
   632bc:	add	x5, x23, x9, lsl #1
   632c0:	mov	w1, w8
   632c4:	sub	w6, w10, w9
   632c8:	bl	65e9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe178>
   632cc:	mov	w11, #0x1                   	// #1
   632d0:	add	x27, x27, #0x1
   632d4:	add	w8, w24, w20
   632d8:	cmp	x27, x28
   632dc:	str	w8, [x22, x25, lsl #2]
   632e0:	b.eq	63350 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb62c>  // b.none
   632e4:	add	x8, x23, x27, lsl #1
   632e8:	ldrb	w25, [x8, #1]
   632ec:	ldrb	w1, [x8]
   632f0:	ldr	w8, [sp, #56]
   632f4:	ldr	w20, [x22, x25, lsl #2]
   632f8:	sub	w26, w19, w25
   632fc:	sub	w8, w8, w26
   63300:	cmp	w8, w21
   63304:	lsl	w24, w11, w8
   63308:	b.cs	63280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb55c>  // b.hs, b.nlast
   6330c:	add	x0, sp, #0x3c
   63310:	bl	65fdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2b8>
   63314:	add	w9, w24, w20
   63318:	mov	w11, #0x1                   	// #1
   6331c:	cmp	w20, w9
   63320:	strb	w26, [sp, #62]
   63324:	strb	w11, [sp, #63]
   63328:	b.cs	632d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5ac>  // b.hs, b.nlast
   6332c:	mov	w10, w9
   63330:	ldr	x9, [sp, #48]
   63334:	ldr	w8, [sp, #60]
   63338:	sub	x10, x10, x20
   6333c:	add	x9, x9, x20, lsl #2
   63340:	subs	x10, x10, #0x1
   63344:	str	w8, [x9], #4
   63348:	b.ne	63340 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb61c>  // b.any
   6334c:	b	632d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb5ac>
   63350:	ldp	x20, x19, [sp, #224]
   63354:	ldp	x22, x21, [sp, #208]
   63358:	ldp	x24, x23, [sp, #192]
   6335c:	ldp	x26, x25, [sp, #176]
   63360:	ldp	x28, x27, [sp, #160]
   63364:	ldp	x29, x30, [sp, #144]
   63368:	add	sp, sp, #0xf0
   6336c:	ret
   63370:	stp	x29, x30, [sp, #-64]!
   63374:	str	x23, [sp, #16]
   63378:	mov	x23, x0
   6337c:	mov	x0, x4
   63380:	stp	x22, x21, [sp, #32]
   63384:	stp	x20, x19, [sp, #48]
   63388:	mov	x29, sp
   6338c:	mov	x19, x4
   63390:	mov	x20, x3
   63394:	mov	x21, x2
   63398:	mov	x22, x1
   6339c:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   633a0:	and	x8, x0, #0xff00
   633a4:	cmp	x8, #0x100
   633a8:	b.ne	633c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb6a4>  // b.any
   633ac:	mov	x0, x23
   633b0:	mov	x1, x22
   633b4:	mov	x2, x21
   633b8:	mov	x3, x20
   633bc:	mov	x4, x19
   633c0:	bl	633e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb6bc>
   633c4:	b	633cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xb6a8>
   633c8:	mov	x0, #0xffffffffffffffff    	// #-1
   633cc:	ldp	x20, x19, [sp, #48]
   633d0:	ldp	x22, x21, [sp, #32]
   633d4:	ldr	x23, [sp, #16]
   633d8:	ldp	x29, x30, [sp], #64
   633dc:	ret
   633e0:	sub	sp, sp, #0x60
   633e4:	stp	x20, x19, [sp, #80]
   633e8:	mov	x19, x1
   633ec:	mov	x20, x0
   633f0:	mov	x0, sp
   633f4:	mov	x1, x2
   633f8:	mov	x2, x3
   633fc:	stp	x29, x30, [sp, #32]
   63400:	str	x23, [sp, #48]
   63404:	stp	x22, x21, [sp, #64]
   63408:	add	x29, sp, #0x20
   6340c:	mov	x21, x4
   63410:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   63414:	mov	x22, x0
   63418:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   6341c:	cbnz	w0, 6345c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb738>
   63420:	mov	x0, x21
   63424:	add	x22, x20, x19
   63428:	add	x23, x21, #0x4
   6342c:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   63430:	ubfx	w4, w0, #16, #8
   63434:	mov	x1, sp
   63438:	mov	x0, x20
   6343c:	mov	x2, x22
   63440:	mov	x3, x23
   63444:	bl	65ff8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2d4>
   63448:	mov	x0, sp
   6344c:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   63450:	cmp	w0, #0x0
   63454:	mov	x8, #0xffffffffffffffec    	// #-20
   63458:	csel	x22, x8, x19, eq  // eq = none
   6345c:	mov	x0, x22
   63460:	ldp	x20, x19, [sp, #80]
   63464:	ldp	x22, x21, [sp, #64]
   63468:	ldr	x23, [sp, #48]
   6346c:	ldp	x29, x30, [sp, #32]
   63470:	add	sp, sp, #0x60
   63474:	ret
   63478:	stp	x29, x30, [sp, #-64]!
   6347c:	stp	x22, x21, [sp, #32]
   63480:	stp	x20, x19, [sp, #48]
   63484:	mov	x20, x2
   63488:	mov	x22, x1
   6348c:	mov	x1, x3
   63490:	mov	x2, x4
   63494:	stp	x24, x23, [sp, #16]
   63498:	mov	x29, sp
   6349c:	mov	x21, x4
   634a0:	mov	x23, x3
   634a4:	mov	x19, x0
   634a8:	bl	62fa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb284>
   634ac:	mov	x24, x0
   634b0:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   634b4:	cbnz	w0, 634e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb7c0>
   634b8:	cmp	x24, x21
   634bc:	b.cs	634e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb7bc>  // b.hs, b.nlast
   634c0:	add	x2, x23, x24
   634c4:	sub	x3, x21, x24
   634c8:	mov	x0, x22
   634cc:	mov	x1, x20
   634d0:	mov	x4, x19
   634d4:	bl	633e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb6bc>
   634d8:	mov	x24, x0
   634dc:	b	634e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb7c0>
   634e0:	mov	x24, #0xffffffffffffffb8    	// #-72
   634e4:	mov	x0, x24
   634e8:	ldp	x20, x19, [sp, #48]
   634ec:	ldp	x22, x21, [sp, #32]
   634f0:	ldp	x24, x23, [sp, #16]
   634f4:	ldp	x29, x30, [sp], #64
   634f8:	ret
   634fc:	stp	x29, x30, [sp, #-64]!
   63500:	str	x28, [sp, #16]
   63504:	stp	x22, x21, [sp, #32]
   63508:	stp	x20, x19, [sp, #48]
   6350c:	mov	x29, sp
   63510:	sub	sp, sp, #0x4, lsl #12
   63514:	sub	sp, sp, #0x10
   63518:	mov	x20, x2
   6351c:	mov	x21, x1
   63520:	mov	x22, x0
   63524:	add	x0, sp, #0xc
   63528:	mov	w2, #0x4004                	// #16388
   6352c:	mov	w1, wzr
   63530:	mov	x19, x3
   63534:	bl	46a0 <memset@plt>
   63538:	mov	w8, #0xc                   	// #12
   6353c:	movk	w8, #0xc00, lsl #16
   63540:	add	x0, sp, #0xc
   63544:	mov	x1, x22
   63548:	mov	x2, x21
   6354c:	mov	x3, x20
   63550:	mov	x4, x19
   63554:	str	w8, [sp, #12]
   63558:	bl	63478 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb754>
   6355c:	add	sp, sp, #0x4, lsl #12
   63560:	add	sp, sp, #0x10
   63564:	ldp	x20, x19, [sp, #48]
   63568:	ldp	x22, x21, [sp, #32]
   6356c:	ldr	x28, [sp, #16]
   63570:	ldp	x29, x30, [sp], #64
   63574:	ret
   63578:	stp	x29, x30, [sp, #-64]!
   6357c:	str	x23, [sp, #16]
   63580:	mov	x23, x0
   63584:	mov	x0, x4
   63588:	stp	x22, x21, [sp, #32]
   6358c:	stp	x20, x19, [sp, #48]
   63590:	mov	x29, sp
   63594:	mov	x19, x4
   63598:	mov	x20, x3
   6359c:	mov	x21, x2
   635a0:	mov	x22, x1
   635a4:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   635a8:	and	x8, x0, #0xff00
   635ac:	cmp	x8, #0x100
   635b0:	b.ne	635d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb8ac>  // b.any
   635b4:	mov	x0, x23
   635b8:	mov	x1, x22
   635bc:	mov	x2, x21
   635c0:	mov	x3, x20
   635c4:	mov	x4, x19
   635c8:	bl	635e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb8c4>
   635cc:	b	635d4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb8b0>
   635d0:	mov	x0, #0xffffffffffffffff    	// #-1
   635d4:	ldp	x20, x19, [sp, #48]
   635d8:	ldp	x22, x21, [sp, #32]
   635dc:	ldr	x23, [sp, #16]
   635e0:	ldp	x29, x30, [sp], #64
   635e4:	ret
   635e8:	sub	sp, sp, #0x100
   635ec:	cmp	x3, #0xa
   635f0:	stp	x29, x30, [sp, #160]
   635f4:	stp	x28, x27, [sp, #176]
   635f8:	stp	x26, x25, [sp, #192]
   635fc:	stp	x24, x23, [sp, #208]
   63600:	stp	x22, x21, [sp, #224]
   63604:	stp	x20, x19, [sp, #240]
   63608:	add	x29, sp, #0xa0
   6360c:	b.cc	63664 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb940>  // b.lo, b.ul, b.last
   63610:	mov	x23, x0
   63614:	mov	x0, x2
   63618:	mov	x20, x4
   6361c:	mov	x22, x3
   63620:	mov	x24, x2
   63624:	mov	x19, x1
   63628:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   6362c:	and	x27, x0, #0xffff
   63630:	add	x0, x24, #0x2
   63634:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   63638:	and	x26, x0, #0xffff
   6363c:	add	x0, x24, #0x4
   63640:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   63644:	and	x21, x0, #0xffff
   63648:	add	x8, x27, x26
   6364c:	add	x8, x8, x21
   63650:	mov	x0, x20
   63654:	add	x25, x8, #0x6
   63658:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   6365c:	subs	x25, x22, x25
   63660:	b.cs	6368c <ZDICT_addEntropyTablesFromBuffer@@Base+0xb968>  // b.hs, b.nlast
   63664:	mov	x24, #0xffffffffffffffec    	// #-20
   63668:	mov	x0, x24
   6366c:	ldp	x20, x19, [sp, #240]
   63670:	ldp	x22, x21, [sp, #224]
   63674:	ldp	x24, x23, [sp, #208]
   63678:	ldp	x26, x25, [sp, #192]
   6367c:	ldp	x28, x27, [sp, #176]
   63680:	ldp	x29, x30, [sp, #160]
   63684:	add	sp, sp, #0x100
   63688:	ret
   6368c:	add	x28, x24, #0x6
   63690:	mov	x22, x0
   63694:	sub	x0, x29, #0x20
   63698:	mov	x1, x28
   6369c:	mov	x2, x27
   636a0:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   636a4:	mov	x24, x0
   636a8:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   636ac:	cbnz	w0, 63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>
   636b0:	add	x27, x28, x27
   636b4:	sub	x0, x29, #0x40
   636b8:	mov	x1, x27
   636bc:	mov	x2, x26
   636c0:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   636c4:	mov	x28, x0
   636c8:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   636cc:	cmp	w0, #0x0
   636d0:	csel	x24, x24, x28, eq  // eq = none
   636d4:	cbnz	w0, 63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>
   636d8:	add	x26, x27, x26
   636dc:	add	x0, sp, #0x40
   636e0:	mov	x1, x26
   636e4:	mov	x2, x21
   636e8:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   636ec:	mov	x27, x0
   636f0:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   636f4:	cmp	w0, #0x0
   636f8:	csel	x24, x24, x27, eq  // eq = none
   636fc:	cbnz	w0, 63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>
   63700:	add	x1, x26, x21
   63704:	add	x0, sp, #0x20
   63708:	mov	x2, x25
   6370c:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   63710:	mov	x21, x0
   63714:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   63718:	cmp	w0, #0x0
   6371c:	csel	x24, x24, x21, eq  // eq = none
   63720:	cbnz	w0, 63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>
   63724:	add	x8, x19, #0x3
   63728:	lsr	x8, x8, #2
   6372c:	add	x9, x23, x8
   63730:	add	x25, x9, x8
   63734:	sub	x0, x29, #0x20
   63738:	add	x26, x23, x19
   6373c:	add	x20, x20, #0x4
   63740:	str	x9, [sp, #24]
   63744:	add	x27, x25, x8
   63748:	ubfx	w22, w22, #16, #8
   6374c:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   63750:	mov	w24, w0
   63754:	sub	x0, x29, #0x40
   63758:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   6375c:	orr	w21, w0, w24
   63760:	add	x0, sp, #0x40
   63764:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   63768:	orr	w21, w21, w0
   6376c:	add	x0, sp, #0x20
   63770:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   63774:	orr	w8, w21, w0
   63778:	stp	x26, x27, [sp, #8]
   6377c:	cbnz	w8, 63954 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbc30>
   63780:	sub	x21, x26, #0x7
   63784:	cmp	x27, x21
   63788:	b.cs	63954 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbc30>  // b.hs, b.nlast
   6378c:	ldr	x26, [sp, #24]
   63790:	mov	x28, x25
   63794:	sub	x1, x29, #0x20
   63798:	mov	x0, x23
   6379c:	mov	x2, x20
   637a0:	mov	w3, w22
   637a4:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   637a8:	add	x23, x23, w0, uxtw
   637ac:	sub	x1, x29, #0x40
   637b0:	mov	x0, x26
   637b4:	mov	x2, x20
   637b8:	mov	w3, w22
   637bc:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   637c0:	add	x24, x26, w0, uxtw
   637c4:	add	x1, sp, #0x40
   637c8:	mov	x0, x28
   637cc:	mov	x2, x20
   637d0:	mov	w3, w22
   637d4:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   637d8:	add	x26, x28, w0, uxtw
   637dc:	add	x1, sp, #0x20
   637e0:	mov	x0, x27
   637e4:	mov	x2, x20
   637e8:	mov	w3, w22
   637ec:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   637f0:	add	x27, x27, w0, uxtw
   637f4:	sub	x1, x29, #0x20
   637f8:	mov	x0, x23
   637fc:	mov	x2, x20
   63800:	mov	w3, w22
   63804:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63808:	add	x23, x23, w0, uxtw
   6380c:	sub	x1, x29, #0x40
   63810:	mov	x0, x24
   63814:	mov	x2, x20
   63818:	mov	w3, w22
   6381c:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63820:	add	x24, x24, w0, uxtw
   63824:	add	x1, sp, #0x40
   63828:	mov	x0, x26
   6382c:	mov	x2, x20
   63830:	mov	w3, w22
   63834:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63838:	add	x26, x26, w0, uxtw
   6383c:	add	x1, sp, #0x20
   63840:	mov	x0, x27
   63844:	mov	x2, x20
   63848:	mov	w3, w22
   6384c:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63850:	add	x27, x27, w0, uxtw
   63854:	sub	x1, x29, #0x20
   63858:	mov	x0, x23
   6385c:	mov	x2, x20
   63860:	mov	w3, w22
   63864:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63868:	add	x23, x23, w0, uxtw
   6386c:	sub	x1, x29, #0x40
   63870:	mov	x0, x24
   63874:	mov	x2, x20
   63878:	mov	w3, w22
   6387c:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63880:	add	x24, x24, w0, uxtw
   63884:	add	x1, sp, #0x40
   63888:	mov	x0, x26
   6388c:	mov	x2, x20
   63890:	mov	w3, w22
   63894:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63898:	add	x28, x26, w0, uxtw
   6389c:	add	x1, sp, #0x20
   638a0:	mov	x0, x27
   638a4:	mov	x2, x20
   638a8:	mov	w3, w22
   638ac:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   638b0:	add	x27, x27, w0, uxtw
   638b4:	sub	x1, x29, #0x20
   638b8:	mov	x0, x23
   638bc:	mov	x2, x20
   638c0:	mov	w3, w22
   638c4:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   638c8:	add	x23, x23, w0, uxtw
   638cc:	sub	x1, x29, #0x40
   638d0:	mov	x0, x24
   638d4:	mov	x2, x20
   638d8:	mov	w3, w22
   638dc:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   638e0:	add	x26, x24, w0, uxtw
   638e4:	add	x1, sp, #0x40
   638e8:	mov	x0, x28
   638ec:	mov	x2, x20
   638f0:	mov	w3, w22
   638f4:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   638f8:	add	x28, x28, w0, uxtw
   638fc:	add	x1, sp, #0x20
   63900:	mov	x0, x27
   63904:	mov	x2, x20
   63908:	mov	w3, w22
   6390c:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   63910:	add	x27, x27, w0, uxtw
   63914:	sub	x0, x29, #0x20
   63918:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   6391c:	mov	w24, w0
   63920:	sub	x0, x29, #0x40
   63924:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   63928:	orr	w24, w0, w24
   6392c:	add	x0, sp, #0x40
   63930:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   63934:	orr	w24, w24, w0
   63938:	add	x0, sp, #0x20
   6393c:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   63940:	orr	w8, w24, w0
   63944:	cbnz	w8, 6395c <ZDICT_addEntropyTablesFromBuffer@@Base+0xbc38>
   63948:	cmp	x27, x21
   6394c:	b.cc	63794 <ZDICT_addEntropyTablesFromBuffer@@Base+0xba70>  // b.lo, b.ul, b.last
   63950:	b	6395c <ZDICT_addEntropyTablesFromBuffer@@Base+0xbc38>
   63954:	ldr	x26, [sp, #24]
   63958:	mov	x28, x25
   6395c:	ldr	x8, [sp, #16]
   63960:	mov	x24, #0xffffffffffffffec    	// #-20
   63964:	cmp	x28, x8
   63968:	b.hi	63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>  // b.pmore
   6396c:	cmp	x26, x25
   63970:	b.hi	63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>  // b.pmore
   63974:	ldr	x2, [sp, #24]
   63978:	cmp	x23, x2
   6397c:	b.hi	63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>  // b.pmore
   63980:	sub	x1, x29, #0x20
   63984:	mov	x0, x23
   63988:	mov	x3, x20
   6398c:	mov	w4, w22
   63990:	bl	65ff8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2d4>
   63994:	sub	x1, x29, #0x40
   63998:	mov	x0, x26
   6399c:	mov	x2, x25
   639a0:	mov	x3, x20
   639a4:	mov	w4, w22
   639a8:	bl	65ff8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2d4>
   639ac:	ldr	x2, [sp, #16]
   639b0:	add	x1, sp, #0x40
   639b4:	mov	x0, x28
   639b8:	mov	x3, x20
   639bc:	mov	w4, w22
   639c0:	bl	65ff8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2d4>
   639c4:	ldr	x2, [sp, #8]
   639c8:	add	x1, sp, #0x20
   639cc:	mov	x0, x27
   639d0:	mov	x3, x20
   639d4:	mov	w4, w22
   639d8:	bl	65ff8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2d4>
   639dc:	sub	x0, x29, #0x20
   639e0:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   639e4:	mov	w20, w0
   639e8:	sub	x0, x29, #0x40
   639ec:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   639f0:	and	w20, w0, w20
   639f4:	add	x0, sp, #0x40
   639f8:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   639fc:	and	w20, w20, w0
   63a00:	add	x0, sp, #0x20
   63a04:	bl	65e38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe114>
   63a08:	tst	w20, w0
   63a0c:	mov	x8, #0xffffffffffffffec    	// #-20
   63a10:	csel	x24, x8, x19, eq  // eq = none
   63a14:	b	63668 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb944>
   63a18:	stp	x29, x30, [sp, #-64]!
   63a1c:	stp	x22, x21, [sp, #32]
   63a20:	stp	x20, x19, [sp, #48]
   63a24:	mov	x20, x2
   63a28:	mov	x22, x1
   63a2c:	mov	x1, x3
   63a30:	mov	x2, x4
   63a34:	stp	x24, x23, [sp, #16]
   63a38:	mov	x29, sp
   63a3c:	mov	x21, x4
   63a40:	mov	x23, x3
   63a44:	mov	x19, x0
   63a48:	bl	62fa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb284>
   63a4c:	mov	x24, x0
   63a50:	bl	61af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0x9dd0>
   63a54:	cbnz	w0, 63a84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbd60>
   63a58:	cmp	x24, x21
   63a5c:	b.cs	63a80 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbd5c>  // b.hs, b.nlast
   63a60:	add	x2, x23, x24
   63a64:	sub	x3, x21, x24
   63a68:	mov	x0, x22
   63a6c:	mov	x1, x20
   63a70:	mov	x4, x19
   63a74:	bl	635e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb8c4>
   63a78:	mov	x24, x0
   63a7c:	b	63a84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbd60>
   63a80:	mov	x24, #0xffffffffffffffb8    	// #-72
   63a84:	mov	x0, x24
   63a88:	ldp	x20, x19, [sp, #48]
   63a8c:	ldp	x22, x21, [sp, #32]
   63a90:	ldp	x24, x23, [sp, #16]
   63a94:	ldp	x29, x30, [sp], #64
   63a98:	ret
   63a9c:	stp	x29, x30, [sp, #-64]!
   63aa0:	str	x28, [sp, #16]
   63aa4:	stp	x22, x21, [sp, #32]
   63aa8:	stp	x20, x19, [sp, #48]
   63aac:	mov	x29, sp
   63ab0:	sub	sp, sp, #0x4, lsl #12
   63ab4:	sub	sp, sp, #0x10
   63ab8:	mov	x20, x2
   63abc:	mov	x21, x1
   63ac0:	mov	x22, x0
   63ac4:	add	x0, sp, #0xc
   63ac8:	mov	w2, #0x4004                	// #16388
   63acc:	mov	w1, wzr
   63ad0:	mov	x19, x3
   63ad4:	bl	46a0 <memset@plt>
   63ad8:	mov	w8, #0xc                   	// #12
   63adc:	movk	w8, #0xc00, lsl #16
   63ae0:	add	x0, sp, #0xc
   63ae4:	mov	x1, x22
   63ae8:	mov	x2, x21
   63aec:	mov	x3, x20
   63af0:	mov	x4, x19
   63af4:	str	w8, [sp, #12]
   63af8:	bl	63a18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbcf4>
   63afc:	add	sp, sp, #0x4, lsl #12
   63b00:	add	sp, sp, #0x10
   63b04:	ldp	x20, x19, [sp, #48]
   63b08:	ldp	x22, x21, [sp, #32]
   63b0c:	ldr	x28, [sp, #16]
   63b10:	ldp	x29, x30, [sp], #64
   63b14:	ret
   63b18:	stp	x29, x30, [sp, #-64]!
   63b1c:	str	x23, [sp, #16]
   63b20:	mov	x23, x0
   63b24:	mov	x0, x4
   63b28:	stp	x22, x21, [sp, #32]
   63b2c:	stp	x20, x19, [sp, #48]
   63b30:	mov	x29, sp
   63b34:	mov	x19, x4
   63b38:	mov	x20, x3
   63b3c:	mov	x21, x2
   63b40:	mov	x22, x1
   63b44:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   63b48:	tst	x0, #0xff00
   63b4c:	b.eq	63b6c <ZDICT_addEntropyTablesFromBuffer@@Base+0xbe48>  // b.none
   63b50:	mov	x0, x23
   63b54:	mov	x1, x22
   63b58:	mov	x2, x21
   63b5c:	mov	x3, x20
   63b60:	mov	x4, x19
   63b64:	bl	633e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb6bc>
   63b68:	b	63b84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbe60>
   63b6c:	mov	x0, x23
   63b70:	mov	x1, x22
   63b74:	mov	x2, x21
   63b78:	mov	x3, x20
   63b7c:	mov	x4, x19
   63b80:	bl	62844 <ZDICT_addEntropyTablesFromBuffer@@Base+0xab20>
   63b84:	ldp	x20, x19, [sp, #48]
   63b88:	ldp	x22, x21, [sp, #32]
   63b8c:	ldr	x23, [sp, #16]
   63b90:	ldp	x29, x30, [sp], #64
   63b94:	ret
   63b98:	stp	x29, x30, [sp, #-64]!
   63b9c:	str	x23, [sp, #16]
   63ba0:	mov	x23, x0
   63ba4:	mov	x0, x4
   63ba8:	stp	x22, x21, [sp, #32]
   63bac:	stp	x20, x19, [sp, #48]
   63bb0:	mov	x29, sp
   63bb4:	mov	x19, x4
   63bb8:	mov	x20, x3
   63bbc:	mov	x21, x2
   63bc0:	mov	x22, x1
   63bc4:	bl	627d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xaaac>
   63bc8:	tst	x0, #0xff00
   63bcc:	b.eq	63bec <ZDICT_addEntropyTablesFromBuffer@@Base+0xbec8>  // b.none
   63bd0:	mov	x0, x23
   63bd4:	mov	x1, x22
   63bd8:	mov	x2, x21
   63bdc:	mov	x3, x20
   63be0:	mov	x4, x19
   63be4:	bl	635e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb8c4>
   63be8:	b	63c04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbee0>
   63bec:	mov	x0, x23
   63bf0:	mov	x1, x22
   63bf4:	mov	x2, x21
   63bf8:	mov	x3, x20
   63bfc:	mov	x4, x19
   63c00:	bl	62a4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xad28>
   63c04:	ldp	x20, x19, [sp, #48]
   63c08:	ldp	x22, x21, [sp, #32]
   63c0c:	ldr	x23, [sp, #16]
   63c10:	ldp	x29, x30, [sp], #64
   63c14:	ret
   63c18:	lsl	x8, x1, #4
   63c1c:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   63c20:	udiv	x8, x8, x0
   63c24:	mov	w9, #0x18                  	// #24
   63c28:	add	x10, x10, #0xd20
   63c2c:	and	x8, x8, #0xffffffff
   63c30:	madd	x8, x8, x9, x10
   63c34:	ldp	w9, w10, [x8]
   63c38:	ldp	w11, w8, [x8, #8]
   63c3c:	lsr	x12, x0, #8
   63c40:	madd	w9, w10, w12, w9
   63c44:	madd	w8, w8, w12, w11
   63c48:	add	w8, w8, w8, lsr #3
   63c4c:	cmp	w8, w9
   63c50:	cset	w0, cc  // cc = lo, ul, last
   63c54:	ret
   63c58:	stp	x29, x30, [sp, #-48]!
   63c5c:	stp	x22, x21, [sp, #16]
   63c60:	stp	x20, x19, [sp, #32]
   63c64:	mov	x29, sp
   63c68:	cbz	x1, 63c84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbf60>
   63c6c:	mov	x21, x3
   63c70:	mov	x19, x1
   63c74:	cmp	x3, x1
   63c78:	b.ls	63c8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xbf68>  // b.plast
   63c7c:	mov	x19, #0xffffffffffffffec    	// #-20
   63c80:	b	63cf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbfd4>
   63c84:	mov	x19, #0xffffffffffffffba    	// #-70
   63c88:	b	63cf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbfd4>
   63c8c:	mov	x20, x2
   63c90:	mov	x22, x0
   63c94:	b.ne	63cac <ZDICT_addEntropyTablesFromBuffer@@Base+0xbf88>  // b.any
   63c98:	mov	x0, x22
   63c9c:	mov	x1, x20
   63ca0:	mov	x2, x19
   63ca4:	bl	4420 <memcpy@plt>
   63ca8:	b	63cf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbfd4>
   63cac:	cmp	x21, #0x1
   63cb0:	b.ne	63cc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbfa4>  // b.any
   63cb4:	ldrb	w1, [x20]
   63cb8:	mov	x0, x22
   63cbc:	mov	x2, x19
   63cc0:	bl	46a0 <memset@plt>
   63cc4:	b	63cf8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbfd4>
   63cc8:	mov	x0, x19
   63ccc:	mov	x1, x21
   63cd0:	bl	63c18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbef4>
   63cd4:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   63cd8:	add	x8, x8, #0xdb0
   63cdc:	ldr	x8, [x8, w0, uxtw #3]
   63ce0:	mov	x0, x22
   63ce4:	mov	x1, x19
   63ce8:	mov	x2, x20
   63cec:	mov	x3, x21
   63cf0:	blr	x8
   63cf4:	mov	x19, x0
   63cf8:	mov	x0, x19
   63cfc:	ldp	x20, x19, [sp, #32]
   63d00:	ldp	x22, x21, [sp, #16]
   63d04:	ldp	x29, x30, [sp], #48
   63d08:	ret
   63d0c:	stp	x29, x30, [sp, #-64]!
   63d10:	str	x23, [sp, #16]
   63d14:	stp	x22, x21, [sp, #32]
   63d18:	stp	x20, x19, [sp, #48]
   63d1c:	mov	x29, sp
   63d20:	cbz	x2, 63d3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc018>
   63d24:	mov	x21, x4
   63d28:	mov	x19, x2
   63d2c:	cmp	x4, x2
   63d30:	b.ls	63d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc020>  // b.plast
   63d34:	mov	x19, #0xffffffffffffffec    	// #-20
   63d38:	b	63dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc0a8>
   63d3c:	mov	x19, #0xffffffffffffffba    	// #-70
   63d40:	b	63dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc0a8>
   63d44:	mov	x20, x3
   63d48:	mov	x22, x1
   63d4c:	b.ne	63d64 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc040>  // b.any
   63d50:	mov	x0, x22
   63d54:	mov	x1, x20
   63d58:	mov	x2, x19
   63d5c:	bl	4420 <memcpy@plt>
   63d60:	b	63dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc0a8>
   63d64:	cmp	x21, #0x1
   63d68:	b.ne	63d80 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc05c>  // b.any
   63d6c:	ldrb	w1, [x20]
   63d70:	mov	x0, x22
   63d74:	mov	x2, x19
   63d78:	bl	46a0 <memset@plt>
   63d7c:	b	63dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc0a8>
   63d80:	mov	x23, x0
   63d84:	mov	x0, x19
   63d88:	mov	x1, x21
   63d8c:	bl	63c18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbef4>
   63d90:	cbz	w0, 63db0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc08c>
   63d94:	mov	x0, x23
   63d98:	mov	x1, x22
   63d9c:	mov	x2, x19
   63da0:	mov	x3, x20
   63da4:	mov	x4, x21
   63da8:	bl	63a18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbcf4>
   63dac:	b	63dc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc0a4>
   63db0:	mov	x0, x23
   63db4:	mov	x1, x22
   63db8:	mov	x2, x19
   63dbc:	mov	x3, x20
   63dc0:	mov	x4, x21
   63dc4:	bl	62ea8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb184>
   63dc8:	mov	x19, x0
   63dcc:	mov	x0, x19
   63dd0:	ldp	x20, x19, [sp, #48]
   63dd4:	ldp	x22, x21, [sp, #32]
   63dd8:	ldr	x23, [sp, #16]
   63ddc:	ldp	x29, x30, [sp], #64
   63de0:	ret
   63de4:	stp	x29, x30, [sp, #-64]!
   63de8:	str	x23, [sp, #16]
   63dec:	stp	x22, x21, [sp, #32]
   63df0:	stp	x20, x19, [sp, #48]
   63df4:	mov	x29, sp
   63df8:	cbz	x2, 63e50 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc12c>
   63dfc:	mov	x19, x4
   63e00:	mov	x21, x2
   63e04:	mov	x23, x0
   63e08:	cmp	x4, x2
   63e0c:	mov	x0, #0xffffffffffffffec    	// #-20
   63e10:	b.cs	63e70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc14c>  // b.hs, b.nlast
   63e14:	cmp	x19, #0x2
   63e18:	b.cc	63e70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc14c>  // b.lo, b.ul, b.last
   63e1c:	mov	x22, x1
   63e20:	mov	x0, x21
   63e24:	mov	x1, x19
   63e28:	mov	x20, x3
   63e2c:	bl	63c18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbef4>
   63e30:	cbz	w0, 63e58 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc134>
   63e34:	mov	x0, x23
   63e38:	mov	x1, x22
   63e3c:	mov	x2, x21
   63e40:	mov	x3, x20
   63e44:	mov	x4, x19
   63e48:	bl	63a18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbcf4>
   63e4c:	b	63e70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc14c>
   63e50:	mov	x0, #0xffffffffffffffba    	// #-70
   63e54:	b	63e70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc14c>
   63e58:	mov	x0, x23
   63e5c:	mov	x1, x22
   63e60:	mov	x2, x21
   63e64:	mov	x3, x20
   63e68:	mov	x4, x19
   63e6c:	bl	62ea8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb184>
   63e70:	ldp	x20, x19, [sp, #48]
   63e74:	ldp	x22, x21, [sp, #32]
   63e78:	ldr	x23, [sp, #16]
   63e7c:	ldp	x29, x30, [sp], #64
   63e80:	ret
   63e84:	stp	x29, x30, [sp, #-64]!
   63e88:	str	x23, [sp, #16]
   63e8c:	stp	x22, x21, [sp, #32]
   63e90:	stp	x20, x19, [sp, #48]
   63e94:	mov	x29, sp
   63e98:	cbz	x2, 63eb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc190>
   63e9c:	mov	x21, x4
   63ea0:	mov	x19, x2
   63ea4:	cmp	x4, x2
   63ea8:	b.ls	63ebc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc198>  // b.plast
   63eac:	mov	x19, #0xffffffffffffffec    	// #-20
   63eb0:	b	63f44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc220>
   63eb4:	mov	x19, #0xffffffffffffffba    	// #-70
   63eb8:	b	63f44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc220>
   63ebc:	mov	x20, x3
   63ec0:	mov	x22, x1
   63ec4:	b.ne	63edc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc1b8>  // b.any
   63ec8:	mov	x0, x22
   63ecc:	mov	x1, x20
   63ed0:	mov	x2, x19
   63ed4:	bl	4420 <memcpy@plt>
   63ed8:	b	63f44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc220>
   63edc:	cmp	x21, #0x1
   63ee0:	b.ne	63ef8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc1d4>  // b.any
   63ee4:	ldrb	w1, [x20]
   63ee8:	mov	x0, x22
   63eec:	mov	x2, x19
   63ef0:	bl	46a0 <memset@plt>
   63ef4:	b	63f44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc220>
   63ef8:	mov	x23, x0
   63efc:	mov	x0, x19
   63f00:	mov	x1, x21
   63f04:	bl	63c18 <ZDICT_addEntropyTablesFromBuffer@@Base+0xbef4>
   63f08:	cbz	w0, 63f28 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc204>
   63f0c:	mov	x0, x23
   63f10:	mov	x1, x22
   63f14:	mov	x2, x19
   63f18:	mov	x3, x20
   63f1c:	mov	x4, x21
   63f20:	bl	63478 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb754>
   63f24:	b	63f40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc21c>
   63f28:	mov	x0, x23
   63f2c:	mov	x1, x22
   63f30:	mov	x2, x19
   63f34:	mov	x3, x20
   63f38:	mov	x4, x21
   63f3c:	bl	628e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabbc>
   63f40:	mov	x19, x0
   63f44:	mov	x0, x19
   63f48:	ldp	x20, x19, [sp, #48]
   63f4c:	ldp	x22, x21, [sp, #32]
   63f50:	ldr	x23, [sp, #16]
   63f54:	ldp	x29, x30, [sp], #64
   63f58:	ret
   63f5c:	stp	x29, x30, [sp, #-16]!
   63f60:	mov	x29, sp
   63f64:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   63f68:	ldp	x29, x30, [sp], #16
   63f6c:	ret
   63f70:	stp	x29, x30, [sp, #-16]!
   63f74:	mov	x29, sp
   63f78:	bl	61adc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9db8>
   63f7c:	ldp	x29, x30, [sp], #16
   63f80:	ret
   63f84:	stp	x29, x30, [sp, #-16]!
   63f88:	mov	x29, sp
   63f8c:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   63f90:	ldp	x29, x30, [sp], #16
   63f94:	ret
   63f98:	stp	x29, x30, [sp, #-16]!
   63f9c:	mov	x29, sp
   63fa0:	bl	61adc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9db8>
   63fa4:	ldp	x29, x30, [sp], #16
   63fa8:	ret
   63fac:	mov	w0, #0x5520                	// #21792
   63fb0:	movk	w0, #0x2, lsl #16
   63fb4:	ret
   63fb8:	mov	w0, #0x5520                	// #21792
   63fbc:	movk	w0, #0x2, lsl #16
   63fc0:	ret
   63fc4:	mov	w9, #0x5                   	// #5
   63fc8:	mov	w8, #0x5464                	// #21604
   63fcc:	mov	w10, #0xc                   	// #12
   63fd0:	str	x9, [x0, #21552]
   63fd4:	adrp	x9, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   63fd8:	movk	w10, #0xc00, lsl #16
   63fdc:	add	x9, x9, #0xea0
   63fe0:	add	x8, x0, x8
   63fe4:	str	wzr, [x8]
   63fe8:	str	w10, [x0, #5132]
   63fec:	ldr	x10, [x9]
   63ff0:	ldr	w9, [x9, #8]
   63ff4:	movi	v0.2d, #0x0
   63ff8:	str	q0, [x0, #21520]
   63ffc:	str	q0, [x0, #21536]
   64000:	stur	xzr, [x8, #4]
   64004:	str	wzr, [x8, #108]
   64008:	mov	w8, #0x5440                	// #21568
   6400c:	str	w9, [x0, x8]
   64010:	str	x10, [x0, #21560]
   64014:	mov	x0, xzr
   64018:	ret
   6401c:	stp	x29, x30, [sp, #-32]!
   64020:	stp	x20, x19, [sp, #16]
   64024:	ldr	x8, [x0]
   64028:	mov	x19, x0
   6402c:	mov	x29, sp
   64030:	cbnz	x8, 6403c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc318>
   64034:	ldr	x8, [x19, #8]
   64038:	cbz	x8, 64080 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc35c>
   6403c:	ldr	x8, [x19]
   64040:	cbz	x8, 640a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc37c>
   64044:	ldr	x9, [x19, #8]
   64048:	cbz	x9, 640a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc37c>
   6404c:	ldr	x0, [x19, #16]
   64050:	mov	w1, #0x5520                	// #21792
   64054:	movk	w1, #0x2, lsl #16
   64058:	blr	x8
   6405c:	mov	x20, x0
   64060:	cbz	x0, 640a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc380>
   64064:	ldr	x8, [x19, #16]
   64068:	ldr	q0, [x19]
   6406c:	mov	x0, x20
   64070:	str	x8, [x20, #21744]
   64074:	str	q0, [x20, #21728]
   64078:	bl	63fc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc2a0>
   6407c:	b	640a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc380>
   64080:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   64084:	add	x8, x8, #0xdc0
   64088:	ldr	x9, [x8, #16]
   6408c:	ldr	q0, [x8]
   64090:	str	x9, [x19, #16]
   64094:	str	q0, [x19]
   64098:	ldr	x8, [x19]
   6409c:	cbnz	x8, 64044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc320>
   640a0:	mov	x20, xzr
   640a4:	mov	x0, x20
   640a8:	ldp	x20, x19, [sp, #16]
   640ac:	ldp	x29, x30, [sp], #32
   640b0:	ret
   640b4:	sub	sp, sp, #0x30
   640b8:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   640bc:	add	x8, x8, #0xdc0
   640c0:	ldr	q0, [x8]
   640c4:	ldr	x8, [x8, #16]
   640c8:	mov	x0, sp
   640cc:	stp	x29, x30, [sp, #32]
   640d0:	add	x29, sp, #0x20
   640d4:	str	q0, [sp]
   640d8:	str	x8, [sp, #16]
   640dc:	bl	6401c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc2f8>
   640e0:	ldp	x29, x30, [sp, #32]
   640e4:	add	sp, sp, #0x30
   640e8:	ret
   640ec:	cbz	x0, 6410c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc3e8>
   640f0:	stp	x29, x30, [sp, #-16]!
   640f4:	mov	x1, x0
   640f8:	ldr	x8, [x0, #21736]
   640fc:	ldr	x0, [x0, #21744]
   64100:	mov	x29, sp
   64104:	blr	x8
   64108:	ldp	x29, x30, [sp], #16
   6410c:	mov	x0, xzr
   64110:	ret
   64114:	stp	x29, x30, [sp, #-16]!
   64118:	mov	w2, #0x5506                	// #21766
   6411c:	mov	x29, sp
   64120:	bl	4420 <memcpy@plt>
   64124:	ldp	x29, x30, [sp], #16
   64128:	ret
   6412c:	stp	x29, x30, [sp, #-80]!
   64130:	cmp	x2, #0x5
   64134:	stp	x26, x25, [sp, #16]
   64138:	stp	x24, x23, [sp, #32]
   6413c:	stp	x22, x21, [sp, #48]
   64140:	stp	x20, x19, [sp, #64]
   64144:	mov	x29, sp
   64148:	b.cs	64154 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc430>  // b.hs, b.nlast
   6414c:	mov	w19, #0x5                   	// #5
   64150:	b	641f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4cc>
   64154:	mov	x20, x0
   64158:	stp	xzr, xzr, [x0]
   6415c:	str	xzr, [x0, #16]
   64160:	mov	x0, x1
   64164:	mov	x22, x2
   64168:	mov	x21, x1
   6416c:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   64170:	mov	w8, #0xb527                	// #46375
   64174:	movk	w8, #0xfd2f, lsl #16
   64178:	cmp	w0, w8
   6417c:	b.ne	641b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc48c>  // b.any
   64180:	mov	x0, x21
   64184:	mov	x1, x22
   64188:	bl	6433c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc618>
   6418c:	mov	x19, x0
   64190:	cmp	x0, x22
   64194:	b.hi	641f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4cc>  // b.pmore
   64198:	ldrb	w23, [x21, #4]
   6419c:	tbnz	w23, #3, 64310 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5ec>
   641a0:	tbz	w23, #5, 6420c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4e8>
   641a4:	mov	w24, wzr
   641a8:	mov	w25, #0x5                   	// #5
   641ac:	b	6424c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc528>
   641b0:	mov	w8, #0xd2a5                	// #53925
   641b4:	movk	w8, #0x184, lsl #16
   641b8:	cmp	w8, w0, lsr #4
   641bc:	b.ne	641d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4ac>  // b.any
   641c0:	cmp	x22, #0x8
   641c4:	b.cs	641d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4b4>  // b.hs, b.nlast
   641c8:	mov	w19, #0x8                   	// #8
   641cc:	b	641f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4cc>
   641d0:	mov	x19, #0xfffffffffffffff6    	// #-10
   641d4:	b	641f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4cc>
   641d8:	add	x0, x21, #0x4
   641dc:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   641e0:	mov	x19, xzr
   641e4:	mov	w8, w0
   641e8:	str	x8, [x20]
   641ec:	str	wzr, [x20, #8]
   641f0:	mov	x0, x19
   641f4:	ldp	x20, x19, [sp, #64]
   641f8:	ldp	x22, x21, [sp, #48]
   641fc:	ldp	x24, x23, [sp, #32]
   64200:	ldp	x26, x25, [sp, #16]
   64204:	ldp	x29, x30, [sp], #80
   64208:	ret
   6420c:	ldrb	w9, [x21, #5]
   64210:	cmp	w9, #0x8f
   64214:	b.ls	64228 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc504>  // b.plast
   64218:	mov	w24, wzr
   6421c:	mov	x19, #0xfffffffffffffff2    	// #-14
   64220:	mov	w8, #0x1                   	// #1
   64224:	b	64244 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc520>
   64228:	lsr	w10, w9, #3
   6422c:	mov	w11, #0x400                 	// #1024
   64230:	lsl	w10, w11, w10
   64234:	lsr	w11, w10, #3
   64238:	and	w9, w9, #0x7
   6423c:	mov	w8, wzr
   64240:	madd	w24, w11, w9, w10
   64244:	cbnz	w8, 64330 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc60c>
   64248:	mov	w25, #0x6                   	// #6
   6424c:	and	w8, w23, #0x3
   64250:	cmp	w8, #0x3
   64254:	lsr	w26, w23, #6
   64258:	b.eq	64278 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc554>  // b.none
   6425c:	cmp	w8, #0x2
   64260:	b.eq	6428c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc568>  // b.none
   64264:	cmp	w8, #0x1
   64268:	b.ne	642a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc57c>  // b.any
   6426c:	ldrb	w22, [x21, x25]
   64270:	add	x25, x25, #0x1
   64274:	b	642a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc580>
   64278:	add	x0, x21, x25
   6427c:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   64280:	mov	w22, w0
   64284:	add	x25, x25, #0x4
   64288:	b	642a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc580>
   6428c:	add	x0, x21, x25
   64290:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   64294:	and	w22, w0, #0xffff
   64298:	add	x25, x25, #0x2
   6429c:	b	642a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc580>
   642a0:	mov	w22, wzr
   642a4:	cmp	w26, #0x1
   642a8:	b.eq	642c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5a4>  // b.none
   642ac:	cmp	w26, #0x2
   642b0:	b.eq	642dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5b8>  // b.none
   642b4:	cmp	w26, #0x3
   642b8:	b.ne	642ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5c8>  // b.any
   642bc:	add	x0, x21, x25
   642c0:	bl	643ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xc688>
   642c4:	b	642fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5d8>
   642c8:	add	x0, x21, x25
   642cc:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   642d0:	and	x8, x0, #0xffff
   642d4:	add	x0, x8, #0x100
   642d8:	b	642fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5d8>
   642dc:	add	x0, x21, x25
   642e0:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   642e4:	mov	w0, w0
   642e8:	b	642fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5d8>
   642ec:	tbz	w23, #5, 642f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5d4>
   642f0:	ldrb	w0, [x21, x25]
   642f4:	b	642fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5d8>
   642f8:	mov	x0, xzr
   642fc:	cmp	w24, #0x0
   64300:	csel	w9, w0, w24, eq  // eq = none
   64304:	mov	w8, #0x8000000             	// #134217728
   64308:	cmp	w9, w8
   6430c:	b.ls	6431c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc5f8>  // b.plast
   64310:	mov	x19, #0xfffffffffffffff2    	// #-14
   64314:	mov	w8, #0x1                   	// #1
   64318:	b	64330 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc60c>
   6431c:	mov	w8, wzr
   64320:	ubfx	w10, w23, #2, #1
   64324:	str	x0, [x20]
   64328:	stp	w9, w22, [x20, #8]
   6432c:	str	w10, [x20, #16]
   64330:	cmp	w8, #0x0
   64334:	csel	x0, xzr, x19, eq  // eq = none
   64338:	b	641f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc4d0>
   6433c:	cmp	x1, #0x5
   64340:	b.cs	6434c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc628>  // b.hs, b.nlast
   64344:	mov	x0, #0xffffffffffffffb8    	// #-72
   64348:	ret
   6434c:	ldrb	w8, [x0, #4]
   64350:	adrp	x10, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   64354:	add	x10, x10, #0x3b0
   64358:	adrp	x11, 69000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x112dc>
   6435c:	and	x12, x8, #0x3
   64360:	add	x11, x11, #0x3d0
   64364:	ldr	x10, [x10, x12, lsl #3]
   64368:	lsr	x12, x8, #6
   6436c:	ldr	x11, [x11, x12, lsl #3]
   64370:	mov	w9, #0x5                   	// #5
   64374:	tst	w8, #0x20
   64378:	cinc	x9, x9, eq  // eq = none
   6437c:	cmp	w12, #0x0
   64380:	cset	w12, eq  // eq = none
   64384:	add	x10, x11, x10
   64388:	and	w8, w12, w8, lsr #5
   6438c:	add	x9, x10, x9
   64390:	add	x0, x9, x8
   64394:	ret
   64398:	stp	x29, x30, [sp, #-16]!
   6439c:	mov	x29, sp
   643a0:	bl	66258 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe534>
   643a4:	ldp	x29, x30, [sp], #16
   643a8:	ret
   643ac:	stp	x29, x30, [sp, #-16]!
   643b0:	mov	x29, sp
   643b4:	bl	66260 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe53c>
   643b8:	ldp	x29, x30, [sp], #16
   643bc:	ret
   643c0:	sub	sp, sp, #0x30
   643c4:	mov	x2, x1
   643c8:	mov	x1, x0
   643cc:	add	x0, sp, #0x8
   643d0:	stp	x29, x30, [sp, #32]
   643d4:	add	x29, sp, #0x20
   643d8:	bl	6412c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc408>
   643dc:	ldr	x8, [sp, #8]
   643e0:	ldp	x29, x30, [sp, #32]
   643e4:	cmp	x0, #0x0
   643e8:	csel	x0, x8, xzr, eq  // eq = none
   643ec:	add	sp, sp, #0x30
   643f0:	ret
   643f4:	stp	x29, x30, [sp, #-64]!
   643f8:	str	x23, [sp, #16]
   643fc:	stp	x22, x21, [sp, #32]
   64400:	stp	x20, x19, [sp, #48]
   64404:	mov	x29, sp
   64408:	mov	x19, x4
   6440c:	mov	x20, x3
   64410:	mov	x21, x2
   64414:	mov	x22, x1
   64418:	mov	x23, x0
   6441c:	bl	64454 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc730>
   64420:	mov	x0, x23
   64424:	mov	x1, x22
   64428:	mov	x2, x21
   6442c:	mov	x3, x20
   64430:	mov	x4, x19
   64434:	bl	64484 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc760>
   64438:	add	x8, x22, x0
   6443c:	str	x8, [x23, #21520]
   64440:	ldp	x20, x19, [sp, #48]
   64444:	ldp	x22, x21, [sp, #32]
   64448:	ldr	x23, [sp, #16]
   6444c:	ldp	x29, x30, [sp], #64
   64450:	ret
   64454:	ldr	x8, [x0, #21520]
   64458:	cmp	x8, x1
   6445c:	b.eq	64480 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc75c>  // b.none
   64460:	ldr	x9, [x0, #21520]
   64464:	ldr	x10, [x0, #21528]
   64468:	str	x8, [x0, #21544]
   6446c:	str	x1, [x0, #21528]
   64470:	str	x1, [x0, #21520]
   64474:	sub	x8, x10, x9
   64478:	add	x8, x1, x8
   6447c:	str	x8, [x0, #21536]
   64480:	ret
   64484:	stp	x29, x30, [sp, #-64]!
   64488:	lsr	x8, x4, #17
   6448c:	stp	x24, x23, [sp, #16]
   64490:	stp	x22, x21, [sp, #32]
   64494:	stp	x20, x19, [sp, #48]
   64498:	mov	x29, sp
   6449c:	cbz	x8, 644a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc784>
   644a0:	mov	x24, #0xffffffffffffffb8    	// #-72
   644a4:	b	644f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc7cc>
   644a8:	mov	x19, x2
   644ac:	mov	x20, x1
   644b0:	mov	x1, x3
   644b4:	mov	x2, x4
   644b8:	mov	x21, x4
   644bc:	mov	x22, x3
   644c0:	mov	x23, x0
   644c4:	bl	66268 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe544>
   644c8:	mov	x24, x0
   644cc:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   644d0:	cbnz	w0, 644f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc7cc>
   644d4:	add	x3, x22, x24
   644d8:	sub	x4, x21, x24
   644dc:	mov	x0, x23
   644e0:	mov	x1, x20
   644e4:	mov	x2, x19
   644e8:	bl	6656c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe848>
   644ec:	mov	x24, x0
   644f0:	mov	x0, x24
   644f4:	ldp	x20, x19, [sp, #48]
   644f8:	ldp	x22, x21, [sp, #32]
   644fc:	ldp	x24, x23, [sp, #16]
   64500:	ldp	x29, x30, [sp], #64
   64504:	ret
   64508:	stp	x29, x30, [sp, #-48]!
   6450c:	str	x21, [sp, #16]
   64510:	stp	x20, x19, [sp, #32]
   64514:	mov	x29, sp
   64518:	mov	x19, x2
   6451c:	mov	x20, x1
   64520:	mov	x21, x0
   64524:	bl	64454 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc730>
   64528:	add	x8, x20, x19
   6452c:	str	x8, [x21, #21520]
   64530:	mov	x0, x19
   64534:	ldp	x20, x19, [sp, #32]
   64538:	ldr	x21, [sp, #16]
   6453c:	ldp	x29, x30, [sp], #48
   64540:	ret
   64544:	stp	x29, x30, [sp, #-64]!
   64548:	stp	x22, x21, [sp, #32]
   6454c:	mov	x21, x2
   64550:	mov	x22, x1
   64554:	mov	x1, x5
   64558:	mov	x2, x6
   6455c:	str	x23, [sp, #16]
   64560:	stp	x20, x19, [sp, #48]
   64564:	mov	x29, sp
   64568:	mov	x19, x4
   6456c:	mov	x20, x3
   64570:	mov	x23, x0
   64574:	bl	645b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc88c>
   64578:	mov	x0, x23
   6457c:	mov	x1, x22
   64580:	bl	64454 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc730>
   64584:	mov	x0, x23
   64588:	mov	x1, x22
   6458c:	mov	x2, x21
   64590:	mov	x3, x20
   64594:	mov	x4, x19
   64598:	bl	64628 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc904>
   6459c:	ldp	x20, x19, [sp, #48]
   645a0:	ldp	x22, x21, [sp, #32]
   645a4:	ldr	x23, [sp, #16]
   645a8:	ldp	x29, x30, [sp], #64
   645ac:	ret
   645b0:	stp	x29, x30, [sp, #-48]!
   645b4:	str	x21, [sp, #16]
   645b8:	stp	x20, x19, [sp, #32]
   645bc:	mov	x29, sp
   645c0:	mov	x19, x2
   645c4:	mov	x20, x1
   645c8:	mov	x21, x0
   645cc:	bl	63fc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc2a0>
   645d0:	mov	x0, xzr
   645d4:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   645d8:	mov	w8, w0
   645dc:	mov	x0, xzr
   645e0:	cbnz	w8, 64618 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8f4>
   645e4:	cbz	x20, 64614 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8f0>
   645e8:	cbz	x19, 64614 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8f0>
   645ec:	mov	x0, x21
   645f0:	mov	x1, x20
   645f4:	mov	x2, x19
   645f8:	bl	64eb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd190>
   645fc:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   64600:	cmp	w0, #0x0
   64604:	mov	x9, #0xffffffffffffffe2    	// #-30
   64608:	mov	w8, w0
   6460c:	csel	x0, xzr, x9, eq  // eq = none
   64610:	cbnz	w8, 64618 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc8f4>
   64614:	mov	x0, xzr
   64618:	ldp	x20, x19, [sp, #32]
   6461c:	ldr	x21, [sp, #16]
   64620:	ldp	x29, x30, [sp], #48
   64624:	ret
   64628:	sub	sp, sp, #0x80
   6462c:	cmp	x4, #0x8
   64630:	stp	x29, x30, [sp, #32]
   64634:	stp	x28, x27, [sp, #48]
   64638:	stp	x26, x25, [sp, #64]
   6463c:	stp	x24, x23, [sp, #80]
   64640:	stp	x22, x21, [sp, #96]
   64644:	stp	x20, x19, [sp, #112]
   64648:	add	x29, sp, #0x20
   6464c:	b.cs	64658 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc934>  // b.hs, b.nlast
   64650:	mov	x21, #0xffffffffffffffb8    	// #-72
   64654:	b	64838 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb14>
   64658:	mov	x19, x1
   6465c:	mov	x20, x0
   64660:	mov	w1, #0x5                   	// #5
   64664:	mov	x0, x3
   64668:	mov	x23, x4
   6466c:	mov	x25, x3
   64670:	mov	x24, x2
   64674:	bl	6433c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc618>
   64678:	mov	x21, x0
   6467c:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   64680:	cbz	w0, 6468c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc968>
   64684:	mov	w8, wzr
   64688:	b	646c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc99c>
   6468c:	add	x8, x21, #0x3
   64690:	cmp	x8, x23
   64694:	b.ls	646a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc980>  // b.plast
   64698:	mov	w8, wzr
   6469c:	mov	x21, #0xffffffffffffffb8    	// #-72
   646a0:	b	646c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc99c>
   646a4:	mov	x0, x20
   646a8:	mov	x1, x25
   646ac:	mov	x2, x21
   646b0:	bl	64e04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd0e0>
   646b4:	cbz	x0, 6485c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb38>
   646b8:	mov	w8, wzr
   646bc:	mov	x21, #0xffffffffffffffec    	// #-20
   646c0:	mov	x27, x23
   646c4:	mov	x22, x25
   646c8:	cbz	w8, 64838 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb14>
   646cc:	add	x8, x19, x24
   646d0:	str	x8, [sp, #16]
   646d4:	mov	w8, #0x5458                	// #21592
   646d8:	mov	w9, #0x5470                	// #21616
   646dc:	add	x8, x20, x8
   646e0:	add	x28, x25, x23
   646e4:	str	x8, [sp, #8]
   646e8:	add	x8, x20, x9
   646ec:	mov	x23, x19
   646f0:	str	x8, [sp]
   646f4:	b	64704 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9e0>
   646f8:	mov	w8, #0x1                   	// #1
   646fc:	mov	x21, x25
   64700:	cbnz	w8, 6482c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb08>
   64704:	sub	x1, x28, x22
   64708:	sub	x2, x29, #0x8
   6470c:	mov	x0, x22
   64710:	bl	64a78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd54>
   64714:	mov	x25, x0
   64718:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6471c:	cbnz	w0, 646f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9d4>
   64720:	sub	x27, x27, #0x3
   64724:	subs	x24, x27, x25
   64728:	add	x22, x22, #0x3
   6472c:	b.cs	6473c <ZDICT_addEntropyTablesFromBuffer@@Base+0xca18>  // b.hs, b.nlast
   64730:	mov	x21, #0xffffffffffffffb8    	// #-72
   64734:	mov	w8, #0x1                   	// #1
   64738:	b	64700 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9dc>
   6473c:	ldur	w8, [x29, #-8]
   64740:	cmp	w8, #0x3
   64744:	b.hi	64784 <ZDICT_addEntropyTablesFromBuffer@@Base+0xca60>  // b.pmore
   64748:	adrp	x11, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   6474c:	add	x11, x11, #0xcc8
   64750:	adr	x9, 64760 <ZDICT_addEntropyTablesFromBuffer@@Base+0xca3c>
   64754:	ldrb	w10, [x11, x8]
   64758:	add	x9, x9, x10, lsl #2
   6475c:	br	x9
   64760:	ldr	x8, [sp, #16]
   64764:	mov	x0, x20
   64768:	mov	x1, x23
   6476c:	mov	x3, x22
   64770:	sub	x2, x8, x23
   64774:	mov	x4, x25
   64778:	bl	64484 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc760>
   6477c:	mov	x26, x0
   64780:	b	647d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcab4>
   64784:	mov	x21, #0xffffffffffffffff    	// #-1
   64788:	mov	w8, #0x1                   	// #1
   6478c:	b	64700 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9dc>
   64790:	ldr	x8, [sp, #16]
   64794:	mov	x0, x23
   64798:	mov	x2, x22
   6479c:	mov	x3, x25
   647a0:	sub	x1, x8, x23
   647a4:	bl	64e78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd154>
   647a8:	mov	x26, x0
   647ac:	b	647d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcab4>
   647b0:	ldr	x8, [sp, #16]
   647b4:	ldur	w3, [x29, #-4]
   647b8:	ldrb	w2, [x22]
   647bc:	mov	x0, x23
   647c0:	sub	x1, x8, x23
   647c4:	bl	66f98 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf274>
   647c8:	mov	x26, x0
   647cc:	b	647d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcab4>
   647d0:	cbnz	x27, 64730 <ZDICT_addEntropyTablesFromBuffer@@Base+0xca0c>
   647d4:	mov	x26, xzr
   647d8:	ldur	w8, [x29, #-8]
   647dc:	cmp	w8, #0x3
   647e0:	b.eq	64700 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9dc>  // b.none
   647e4:	mov	x0, x26
   647e8:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   647ec:	cbz	w0, 647fc <ZDICT_addEntropyTablesFromBuffer@@Base+0xcad8>
   647f0:	mov	w8, #0x1                   	// #1
   647f4:	mov	x21, x26
   647f8:	b	64700 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9dc>
   647fc:	ldr	x8, [sp, #8]
   64800:	ldr	w8, [x8]
   64804:	cbz	w8, 64818 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcaf4>
   64808:	ldr	x0, [sp]
   6480c:	mov	x1, x23
   64810:	mov	x2, x26
   64814:	bl	696c <ZSTD_initDStream_usingDDict@plt+0x1e5c>
   64818:	mov	w8, wzr
   6481c:	add	x23, x23, x26
   64820:	add	x22, x22, x25
   64824:	mov	x27, x24
   64828:	b	64700 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9dc>
   6482c:	cmp	w8, #0x3
   64830:	b.ne	64838 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb14>  // b.any
   64834:	sub	x21, x23, x19
   64838:	mov	x0, x21
   6483c:	ldp	x20, x19, [sp, #112]
   64840:	ldp	x22, x21, [sp, #96]
   64844:	ldp	x24, x23, [sp, #80]
   64848:	ldp	x26, x25, [sp, #64]
   6484c:	ldp	x28, x27, [sp, #48]
   64850:	ldp	x29, x30, [sp, #32]
   64854:	add	sp, sp, #0x80
   64858:	ret
   6485c:	add	x22, x25, x21
   64860:	sub	x27, x23, x21
   64864:	mov	w8, #0x1                   	// #1
   64868:	cbnz	w8, 646cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xc9a8>
   6486c:	b	64838 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb14>
   64870:	stp	x29, x30, [sp, #-16]!
   64874:	mov	x5, xzr
   64878:	mov	x6, xzr
   6487c:	mov	x29, sp
   64880:	bl	64544 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc820>
   64884:	ldp	x29, x30, [sp], #16
   64888:	ret
   6488c:	stp	x29, x30, [sp, #-64]!
   64890:	str	x23, [sp, #16]
   64894:	stp	x22, x21, [sp, #32]
   64898:	stp	x20, x19, [sp, #48]
   6489c:	mov	x29, sp
   648a0:	mov	x19, x3
   648a4:	mov	x21, x2
   648a8:	mov	x22, x1
   648ac:	mov	x23, x0
   648b0:	bl	640b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc390>
   648b4:	cbz	x0, 648e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcbbc>
   648b8:	mov	x1, x23
   648bc:	mov	x2, x22
   648c0:	mov	x3, x21
   648c4:	mov	x4, x19
   648c8:	mov	x20, x0
   648cc:	bl	64870 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcb4c>
   648d0:	mov	x19, x0
   648d4:	mov	x0, x20
   648d8:	bl	640ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xc3c8>
   648dc:	b	648e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcbc0>
   648e0:	mov	x19, #0xffffffffffffffc0    	// #-64
   648e4:	mov	x0, x19
   648e8:	ldp	x20, x19, [sp, #48]
   648ec:	ldp	x22, x21, [sp, #32]
   648f0:	ldr	x23, [sp, #16]
   648f4:	ldp	x29, x30, [sp], #64
   648f8:	ret
   648fc:	stp	x29, x30, [sp, #-80]!
   64900:	stp	x20, x19, [sp, #64]
   64904:	mov	x19, x3
   64908:	mov	x20, x2
   6490c:	cmp	x1, #0x7
   64910:	str	x25, [sp, #16]
   64914:	stp	x24, x23, [sp, #32]
   64918:	stp	x22, x21, [sp, #48]
   6491c:	mov	x29, sp
   64920:	b.hi	64938 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc14>  // b.pmore
   64924:	mov	x2, #0xffffffffffffffb8    	// #-72
   64928:	mov	x0, x20
   6492c:	mov	x1, x19
   64930:	bl	64a68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd44>
   64934:	b	64a3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd18>
   64938:	mov	x22, x1
   6493c:	mov	x21, x0
   64940:	bl	6433c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc618>
   64944:	mov	x24, x0
   64948:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6494c:	cbz	w0, 64960 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc3c>
   64950:	mov	x0, x20
   64954:	mov	x1, x19
   64958:	mov	x2, x24
   6495c:	b	64998 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc74>
   64960:	mov	x0, x21
   64964:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   64968:	mov	w8, #0xb527                	// #46375
   6496c:	movk	w8, #0xfd2f, lsl #16
   64970:	cmp	w0, w8
   64974:	b.ne	6498c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc68>  // b.any
   64978:	add	x8, x24, #0x3
   6497c:	cmp	x8, x22
   64980:	b.ls	64a54 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd30>  // b.plast
   64984:	mov	x2, #0xffffffffffffffb8    	// #-72
   64988:	b	64990 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc6c>
   6498c:	mov	x2, #0xfffffffffffffff6    	// #-10
   64990:	mov	x0, x20
   64994:	mov	x1, x19
   64998:	bl	64a68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd44>
   6499c:	mov	w8, wzr
   649a0:	mov	x23, x21
   649a4:	cbz	w8, 64a3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd18>
   649a8:	mov	x25, xzr
   649ac:	b	649c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcca4>
   649b0:	mov	x0, x20
   649b4:	mov	x1, x19
   649b8:	mov	x2, x24
   649bc:	bl	64a68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd44>
   649c0:	mov	w8, #0x1                   	// #1
   649c4:	cbnz	w8, 64a24 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd00>
   649c8:	add	x2, x29, #0x18
   649cc:	mov	x0, x23
   649d0:	mov	x1, x22
   649d4:	bl	64a78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd54>
   649d8:	mov	x24, x0
   649dc:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   649e0:	cbnz	w0, 649b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc8c>
   649e4:	ldr	w8, [x29, #24]
   649e8:	add	x23, x23, #0x3
   649ec:	sub	x22, x22, #0x3
   649f0:	cmp	w8, #0x3
   649f4:	b.eq	649c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcca0>  // b.none
   649f8:	subs	x9, x22, x24
   649fc:	b.cs	64a10 <ZDICT_addEntropyTablesFromBuffer@@Base+0xccec>  // b.hs, b.nlast
   64a00:	mov	x2, #0xffffffffffffffb8    	// #-72
   64a04:	mov	x0, x20
   64a08:	mov	x1, x19
   64a0c:	b	649bc <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc98>
   64a10:	mov	w8, wzr
   64a14:	add	x23, x23, x24
   64a18:	add	x25, x25, #0x1
   64a1c:	mov	x22, x9
   64a20:	b	649c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcca0>
   64a24:	cmp	w8, #0x3
   64a28:	b.ne	64a3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd18>  // b.any
   64a2c:	sub	x8, x23, x21
   64a30:	lsl	x9, x25, #17
   64a34:	str	x8, [x20]
   64a38:	str	x9, [x19]
   64a3c:	ldp	x20, x19, [sp, #64]
   64a40:	ldp	x22, x21, [sp, #48]
   64a44:	ldp	x24, x23, [sp, #32]
   64a48:	ldr	x25, [sp, #16]
   64a4c:	ldp	x29, x30, [sp], #80
   64a50:	ret
   64a54:	add	x23, x21, x24
   64a58:	sub	x22, x22, x24
   64a5c:	mov	w8, #0x1                   	// #1
   64a60:	cbnz	w8, 649a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcc84>
   64a64:	b	64a3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd18>
   64a68:	mov	x8, #0xfffffffffffffffe    	// #-2
   64a6c:	str	x2, [x0]
   64a70:	str	x8, [x1]
   64a74:	ret
   64a78:	cmp	x1, #0x3
   64a7c:	b.cs	64a88 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd64>  // b.hs, b.nlast
   64a80:	mov	x0, #0xffffffffffffffb8    	// #-72
   64a84:	ret
   64a88:	ldrb	w8, [x0]
   64a8c:	lsr	w8, w8, #6
   64a90:	str	w8, [x2]
   64a94:	ldurh	w9, [x0, #1]
   64a98:	ldrb	w10, [x0]
   64a9c:	cmp	w8, #0x2
   64aa0:	lsl	x9, x9, #48
   64aa4:	and	x10, x10, #0x7
   64aa8:	rev	x0, x9
   64aac:	bfi	x0, x10, #16, #3
   64ab0:	csel	w9, w0, wzr, eq  // eq = none
   64ab4:	cmp	w8, #0x3
   64ab8:	str	w9, [x2, #4]
   64abc:	b.eq	64ad0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdac>  // b.none
   64ac0:	cmp	w8, #0x2
   64ac4:	b.ne	64acc <ZDICT_addEntropyTablesFromBuffer@@Base+0xcda8>  // b.any
   64ac8:	mov	w0, #0x1                   	// #1
   64acc:	ret
   64ad0:	mov	x0, xzr
   64ad4:	ret
   64ad8:	ldr	x0, [x0, #21552]
   64adc:	ret
   64ae0:	mov	w8, #0x5464                	// #21604
   64ae4:	ldr	w8, [x0, x8]
   64ae8:	cmp	w8, #0x5
   64aec:	cset	w0, eq  // eq = none
   64af0:	ret
   64af4:	sub	sp, sp, #0x50
   64af8:	stp	x29, x30, [sp, #16]
   64afc:	stp	x24, x23, [sp, #32]
   64b00:	stp	x22, x21, [sp, #48]
   64b04:	stp	x20, x19, [sp, #64]
   64b08:	ldr	x8, [x0, #21552]
   64b0c:	add	x29, sp, #0x10
   64b10:	cmp	x8, x4
   64b14:	b.ne	64bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xce98>  // b.any
   64b18:	mov	w8, #0x5458                	// #21592
   64b1c:	mov	x20, x4
   64b20:	mov	x21, x3
   64b24:	mov	x23, x2
   64b28:	mov	x19, x0
   64b2c:	mov	x22, x1
   64b30:	add	x24, x0, x8
   64b34:	cbz	x2, 64b44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce20>
   64b38:	mov	x0, x19
   64b3c:	mov	x1, x22
   64b40:	bl	64454 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc730>
   64b44:	ldr	w8, [x24, #12]
   64b48:	cmp	w8, #0x5
   64b4c:	b.hi	64c7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcf58>  // b.pmore
   64b50:	adrp	x9, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   64b54:	add	x9, x9, #0xccc
   64b58:	adr	x10, 64b68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce44>
   64b5c:	ldrb	w11, [x9, x8]
   64b60:	add	x10, x10, x11, lsl #2
   64b64:	br	x10
   64b68:	cmp	x20, #0x5
   64b6c:	b.ne	64bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xce98>  // b.any
   64b70:	mov	x0, x21
   64b74:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   64b78:	mov	w8, #0xd2a5                	// #53925
   64b7c:	movk	w8, #0x184, lsl #16
   64b80:	cmp	w8, w0, lsr #4
   64b84:	b.ne	64ccc <ZDICT_addEntropyTablesFromBuffer@@Base+0xcfa8>  // b.any
   64b88:	ldr	w9, [x21]
   64b8c:	ldrb	w10, [x21, #4]
   64b90:	mov	w8, #0x5508                	// #21768
   64b94:	movk	w8, #0x2, lsl #16
   64b98:	mov	w11, #0x3                   	// #3
   64b9c:	mov	w12, #0x4                   	// #4
   64ba0:	add	x8, x19, x8
   64ba4:	mov	x20, xzr
   64ba8:	strb	w10, [x8, #4]
   64bac:	str	w9, [x8]
   64bb0:	str	x11, [x19, #21552]
   64bb4:	str	w12, [x24, #12]
   64bb8:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64bbc:	mov	x20, #0xffffffffffffffb8    	// #-72
   64bc0:	mov	x0, x20
   64bc4:	ldp	x20, x19, [sp, #64]
   64bc8:	ldp	x22, x21, [sp, #48]
   64bcc:	ldp	x24, x23, [sp, #32]
   64bd0:	ldp	x29, x30, [sp, #16]
   64bd4:	add	sp, sp, #0x50
   64bd8:	ret
   64bdc:	add	x2, sp, #0x8
   64be0:	mov	w1, #0x3                   	// #3
   64be4:	mov	x0, x21
   64be8:	bl	64a78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcd54>
   64bec:	mov	x20, x0
   64bf0:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   64bf4:	cbnz	w0, 64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64bf8:	ldr	w8, [sp, #8]
   64bfc:	cmp	w8, #0x3
   64c00:	b.ne	64d88 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd064>  // b.any
   64c04:	ldr	w8, [x24]
   64c08:	cbz	w8, 64c3c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcf18>
   64c0c:	mov	w8, #0x5470                	// #21616
   64c10:	add	x0, x19, x8
   64c14:	bl	6b34 <ZSTD_initDStream_usingDDict@plt+0x2024>
   64c18:	ldurh	w8, [x21, #1]
   64c1c:	ldrb	w9, [x21]
   64c20:	ubfx	x10, x0, #11, #22
   64c24:	lsl	w8, w8, #16
   64c28:	rev	w8, w8
   64c2c:	and	w9, w9, #0x3f
   64c30:	bfi	w8, w9, #16, #6
   64c34:	cmp	w8, w10
   64c38:	b.ne	64da0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd07c>  // b.any
   64c3c:	mov	w8, wzr
   64c40:	str	xzr, [x19, #21552]
   64c44:	b	64d94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd070>
   64c48:	ldr	w8, [x24, #8]
   64c4c:	cmp	w8, #0x3
   64c50:	b.eq	64d24 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd000>  // b.none
   64c54:	cmp	w8, #0x1
   64c58:	b.eq	64d2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd008>  // b.none
   64c5c:	cbnz	w8, 64c7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xcf58>
   64c60:	mov	x0, x19
   64c64:	mov	x1, x22
   64c68:	mov	x2, x23
   64c6c:	mov	x3, x21
   64c70:	mov	x4, x20
   64c74:	bl	64484 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc760>
   64c78:	b	64d40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd01c>
   64c7c:	mov	x20, #0xffffffffffffffff    	// #-1
   64c80:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64c84:	ldr	x2, [x19, #21552]
   64c88:	mov	w8, #0x550d                	// #21773
   64c8c:	movk	w8, #0x2, lsl #16
   64c90:	add	x0, x19, x8
   64c94:	mov	x1, x21
   64c98:	bl	4420 <memcpy@plt>
   64c9c:	mov	w8, #0x550c                	// #21772
   64ca0:	movk	w8, #0x2, lsl #16
   64ca4:	add	x0, x19, x8
   64ca8:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   64cac:	mov	x20, xzr
   64cb0:	mov	w8, w0
   64cb4:	mov	w9, #0x5                   	// #5
   64cb8:	b	64df8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd0d4>
   64cbc:	mov	x20, xzr
   64cc0:	str	xzr, [x19, #21552]
   64cc4:	str	wzr, [x24, #12]
   64cc8:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64ccc:	mov	w1, #0x5                   	// #5
   64cd0:	mov	x0, x21
   64cd4:	bl	6433c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc618>
   64cd8:	mov	x20, x0
   64cdc:	str	x0, [x19, #21704]
   64ce0:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   64ce4:	cbnz	w0, 64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64ce8:	ldrb	w9, [x21, #4]
   64cec:	ldr	w10, [x21]
   64cf0:	mov	w8, #0x5508                	// #21768
   64cf4:	movk	w8, #0x2, lsl #16
   64cf8:	cmp	x20, #0x6
   64cfc:	add	x8, x19, x8
   64d00:	strb	w9, [x8, #4]
   64d04:	str	w10, [x8]
   64d08:	b.cc	64da8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd084>  // b.lo, b.ul, b.last
   64d0c:	sub	x8, x20, #0x5
   64d10:	mov	w9, #0x1                   	// #1
   64d14:	str	x8, [x19, #21552]
   64d18:	str	w9, [x24, #12]
   64d1c:	mov	x20, xzr
   64d20:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64d24:	mov	x20, xzr
   64d28:	b	64d44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd020>
   64d2c:	mov	x0, x22
   64d30:	mov	x1, x23
   64d34:	mov	x2, x21
   64d38:	mov	x3, x20
   64d3c:	bl	64e78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd154>
   64d40:	mov	x20, x0
   64d44:	mov	w8, #0x2                   	// #2
   64d48:	mov	w9, #0x3                   	// #3
   64d4c:	add	x10, x22, x20
   64d50:	mov	x0, x20
   64d54:	str	w8, [x24, #12]
   64d58:	str	x9, [x19, #21552]
   64d5c:	str	x10, [x19, #21520]
   64d60:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   64d64:	cbnz	w0, 64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64d68:	ldr	w8, [x24]
   64d6c:	cbz	w8, 64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64d70:	mov	w8, #0x5470                	// #21616
   64d74:	add	x0, x19, x8
   64d78:	mov	x1, x22
   64d7c:	mov	x2, x20
   64d80:	bl	696c <ZSTD_initDStream_usingDDict@plt+0x1e5c>
   64d84:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64d88:	str	x20, [x19, #21552]
   64d8c:	str	w8, [x24, #8]
   64d90:	mov	w8, #0x3                   	// #3
   64d94:	mov	x20, xzr
   64d98:	str	w8, [x24, #12]
   64d9c:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64da0:	mov	x20, #0xffffffffffffffea    	// #-22
   64da4:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64da8:	str	xzr, [x19, #21552]
   64dac:	mov	w8, #0x5508                	// #21768
   64db0:	movk	w8, #0x2, lsl #16
   64db4:	ldr	x2, [x19, #21552]
   64db8:	add	x20, x19, x8
   64dbc:	mov	w8, #0x550d                	// #21773
   64dc0:	movk	w8, #0x2, lsl #16
   64dc4:	add	x0, x19, x8
   64dc8:	mov	x1, x21
   64dcc:	bl	4420 <memcpy@plt>
   64dd0:	ldr	x2, [x19, #21704]
   64dd4:	mov	x0, x19
   64dd8:	mov	x1, x20
   64ddc:	bl	64e04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd0e0>
   64de0:	mov	x20, x0
   64de4:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   64de8:	cbnz	w0, 64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64dec:	mov	x20, xzr
   64df0:	mov	w8, #0x3                   	// #3
   64df4:	mov	w9, #0x2                   	// #2
   64df8:	str	x8, [x19, #21552]
   64dfc:	str	w9, [x24, #12]
   64e00:	b	64bc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xce9c>
   64e04:	stp	x29, x30, [sp, #-48]!
   64e08:	mov	w8, #0x5454                	// #21588
   64e0c:	mov	w9, #0x5448                	// #21576
   64e10:	str	x21, [sp, #16]
   64e14:	stp	x20, x19, [sp, #32]
   64e18:	mov	x20, x0
   64e1c:	add	x21, x0, x8
   64e20:	add	x0, x0, x9
   64e24:	mov	x29, sp
   64e28:	bl	6412c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc408>
   64e2c:	ldr	w8, [x21]
   64e30:	mov	x19, x0
   64e34:	cbz	w8, 64e44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd120>
   64e38:	ldr	w9, [x21, #124]
   64e3c:	cmp	w9, w8
   64e40:	b.ne	64e60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd13c>  // b.any
   64e44:	ldr	w8, [x21, #4]
   64e48:	cbz	w8, 64e64 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd140>
   64e4c:	mov	w8, #0x5470                	// #21616
   64e50:	add	x0, x20, x8
   64e54:	mov	x1, xzr
   64e58:	bl	660c <ZSTD_initDStream_usingDDict@plt+0x1afc>
   64e5c:	b	64e64 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd140>
   64e60:	mov	x19, #0xffffffffffffffe0    	// #-32
   64e64:	mov	x0, x19
   64e68:	ldp	x20, x19, [sp, #32]
   64e6c:	ldr	x21, [sp, #16]
   64e70:	ldp	x29, x30, [sp], #48
   64e74:	ret
   64e78:	stp	x29, x30, [sp, #-32]!
   64e7c:	cmp	x3, x1
   64e80:	str	x19, [sp, #16]
   64e84:	mov	x29, sp
   64e88:	b.ls	64e94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd170>  // b.plast
   64e8c:	mov	x19, #0xffffffffffffffba    	// #-70
   64e90:	b	64ea4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd180>
   64e94:	mov	x1, x2
   64e98:	mov	x2, x3
   64e9c:	mov	x19, x3
   64ea0:	bl	4420 <memcpy@plt>
   64ea4:	mov	x0, x19
   64ea8:	ldr	x19, [sp, #16]
   64eac:	ldp	x29, x30, [sp], #32
   64eb0:	ret
   64eb4:	stp	x29, x30, [sp, #-48]!
   64eb8:	stp	x22, x21, [sp, #16]
   64ebc:	stp	x20, x19, [sp, #32]
   64ec0:	mov	x20, x2
   64ec4:	mov	x21, x1
   64ec8:	cmp	x2, #0x7
   64ecc:	mov	x19, x0
   64ed0:	mov	x29, sp
   64ed4:	b.ls	64f30 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd20c>  // b.plast
   64ed8:	mov	x0, x21
   64edc:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   64ee0:	mov	w8, #0xa437                	// #42039
   64ee4:	movk	w8, #0xec30, lsl #16
   64ee8:	cmp	w0, w8
   64eec:	b.ne	64f30 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd20c>  // b.any
   64ef0:	add	x0, x21, #0x4
   64ef4:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   64ef8:	mov	w8, #0x54d0                	// #21712
   64efc:	add	x21, x21, #0x8
   64f00:	sub	x20, x20, #0x8
   64f04:	str	w0, [x19, x8]
   64f08:	mov	x0, x19
   64f0c:	mov	x1, x21
   64f10:	mov	x2, x20
   64f14:	bl	66ffc <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2d8>
   64f18:	mov	x22, x0
   64f1c:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   64f20:	cbz	w0, 64f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd230>
   64f24:	mov	w8, wzr
   64f28:	mov	x0, #0xffffffffffffffe2    	// #-30
   64f2c:	cbz	w8, 64f44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd220>
   64f30:	mov	x0, x19
   64f34:	mov	x1, x21
   64f38:	mov	x2, x20
   64f3c:	bl	66fd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2b0>
   64f40:	mov	x0, xzr
   64f44:	ldp	x20, x19, [sp, #32]
   64f48:	ldp	x22, x21, [sp, #16]
   64f4c:	ldp	x29, x30, [sp], #48
   64f50:	ret
   64f54:	mov	x0, xzr
   64f58:	add	x21, x21, x22
   64f5c:	sub	x20, x20, x22
   64f60:	mov	w8, #0x1                   	// #1
   64f64:	cbnz	w8, 64f30 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd20c>
   64f68:	b	64f44 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd220>
   64f6c:	sub	sp, sp, #0x30
   64f70:	add	x2, sp, #0x8
   64f74:	stp	x29, x30, [sp, #32]
   64f78:	add	x29, sp, #0x20
   64f7c:	stp	xzr, xzr, [sp, #8]
   64f80:	str	xzr, [sp, #24]
   64f84:	bl	64f94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd270>
   64f88:	ldp	x29, x30, [sp, #32]
   64f8c:	add	sp, sp, #0x30
   64f90:	ret
   64f94:	sub	sp, sp, #0x60
   64f98:	stp	x29, x30, [sp, #32]
   64f9c:	stp	x24, x23, [sp, #48]
   64fa0:	stp	x22, x21, [sp, #64]
   64fa4:	stp	x20, x19, [sp, #80]
   64fa8:	ldr	x8, [x2]
   64fac:	mov	x19, x2
   64fb0:	mov	x21, x1
   64fb4:	mov	x23, x0
   64fb8:	add	x29, sp, #0x20
   64fbc:	cbnz	x8, 64fc8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd2a4>
   64fc0:	ldr	x8, [x19, #8]
   64fc4:	cbz	x8, 65094 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd370>
   64fc8:	ldr	x8, [x19]
   64fcc:	cbz	x8, 65074 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd350>
   64fd0:	ldr	x9, [x19, #8]
   64fd4:	cbz	x9, 65074 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd350>
   64fd8:	ldr	x0, [x19, #16]
   64fdc:	mov	w1, #0x18                  	// #24
   64fe0:	blr	x8
   64fe4:	ldr	x8, [x19, #16]
   64fe8:	ldr	x9, [x19]
   64fec:	mov	x20, x0
   64ff0:	mov	x1, x21
   64ff4:	mov	x0, x8
   64ff8:	blr	x9
   64ffc:	ldr	x8, [x19, #16]
   65000:	ldr	q0, [x19]
   65004:	mov	x24, x0
   65008:	mov	x0, sp
   6500c:	str	x8, [sp, #16]
   65010:	str	q0, [sp]
   65014:	bl	6401c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc2f8>
   65018:	mov	x22, x0
   6501c:	cbz	x20, 65050 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd32c>
   65020:	cbz	x24, 65050 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd32c>
   65024:	cbz	x22, 65050 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd32c>
   65028:	mov	x0, x24
   6502c:	mov	x1, x23
   65030:	mov	x2, x21
   65034:	bl	4420 <memcpy@plt>
   65038:	mov	x0, x22
   6503c:	mov	x1, x24
   65040:	mov	x2, x21
   65044:	bl	645b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc88c>
   65048:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6504c:	cbz	w0, 650b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd394>
   65050:	ldp	x8, x0, [x19, #8]
   65054:	mov	x1, x24
   65058:	blr	x8
   6505c:	ldp	x8, x0, [x19, #8]
   65060:	mov	x1, x20
   65064:	blr	x8
   65068:	ldp	x8, x0, [x19, #8]
   6506c:	mov	x1, x22
   65070:	blr	x8
   65074:	mov	x20, xzr
   65078:	mov	x0, x20
   6507c:	ldp	x20, x19, [sp, #80]
   65080:	ldp	x22, x21, [sp, #64]
   65084:	ldp	x24, x23, [sp, #48]
   65088:	ldp	x29, x30, [sp, #32]
   6508c:	add	sp, sp, #0x60
   65090:	ret
   65094:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   65098:	add	x8, x8, #0xdc0
   6509c:	ldr	x9, [x8, #16]
   650a0:	ldr	q0, [x8]
   650a4:	str	x9, [x19, #16]
   650a8:	str	q0, [x19]
   650ac:	ldr	x8, [x19]
   650b0:	cbnz	x8, 64fd0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd2ac>
   650b4:	b	65074 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd350>
   650b8:	stp	x24, x21, [x20]
   650bc:	str	x22, [x20, #16]
   650c0:	b	65078 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd354>
   650c4:	stp	x29, x30, [sp, #-48]!
   650c8:	stp	x20, x19, [sp, #32]
   650cc:	mov	x19, x0
   650d0:	ldr	x0, [x0, #16]
   650d4:	str	x21, [sp, #16]
   650d8:	mov	x29, sp
   650dc:	ldr	x21, [x0, #21736]
   650e0:	ldr	x20, [x0, #21744]
   650e4:	bl	640ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xc3c8>
   650e8:	ldr	x1, [x19]
   650ec:	mov	x0, x20
   650f0:	blr	x21
   650f4:	mov	x0, x20
   650f8:	mov	x1, x19
   650fc:	blr	x21
   65100:	ldp	x20, x19, [sp, #32]
   65104:	ldr	x21, [sp, #16]
   65108:	mov	x0, xzr
   6510c:	ldp	x29, x30, [sp], #48
   65110:	ret
   65114:	stp	x29, x30, [sp, #-16]!
   65118:	mov	x8, x4
   6511c:	mov	x4, x3
   65120:	mov	x3, x2
   65124:	mov	x2, x1
   65128:	ldr	x1, [x5, #16]
   6512c:	mov	x5, x8
   65130:	mov	x29, sp
   65134:	bl	65140 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd41c>
   65138:	ldp	x29, x30, [sp], #16
   6513c:	ret
   65140:	stp	x29, x30, [sp, #-64]!
   65144:	str	x23, [sp, #16]
   65148:	stp	x22, x21, [sp, #32]
   6514c:	stp	x20, x19, [sp, #48]
   65150:	mov	x29, sp
   65154:	mov	x19, x5
   65158:	mov	x20, x4
   6515c:	mov	x21, x3
   65160:	mov	x22, x2
   65164:	mov	x23, x0
   65168:	bl	64114 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc3f0>
   6516c:	mov	x0, x23
   65170:	mov	x1, x22
   65174:	bl	64454 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc730>
   65178:	mov	x0, x23
   6517c:	mov	x1, x22
   65180:	mov	x2, x21
   65184:	mov	x3, x20
   65188:	mov	x4, x19
   6518c:	bl	64628 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc904>
   65190:	ldp	x20, x19, [sp, #48]
   65194:	ldp	x22, x21, [sp, #32]
   65198:	ldr	x23, [sp, #16]
   6519c:	ldp	x29, x30, [sp], #64
   651a0:	ret
   651a4:	sub	sp, sp, #0x30
   651a8:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   651ac:	add	x8, x8, #0xdc0
   651b0:	ldr	q0, [x8]
   651b4:	ldr	x8, [x8, #16]
   651b8:	mov	x0, sp
   651bc:	stp	x29, x30, [sp, #32]
   651c0:	add	x29, sp, #0x20
   651c4:	str	q0, [sp]
   651c8:	str	x8, [sp, #16]
   651cc:	bl	651dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd4b8>
   651d0:	ldp	x29, x30, [sp, #32]
   651d4:	add	sp, sp, #0x30
   651d8:	ret
   651dc:	sub	sp, sp, #0x40
   651e0:	stp	x29, x30, [sp, #32]
   651e4:	stp	x20, x19, [sp, #48]
   651e8:	ldr	x8, [x0]
   651ec:	mov	x19, x0
   651f0:	add	x29, sp, #0x20
   651f4:	cbnz	x8, 65200 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd4dc>
   651f8:	ldr	x8, [x19, #8]
   651fc:	cbz	x8, 65274 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd550>
   65200:	ldr	x8, [x19]
   65204:	cbz	x8, 652a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd57c>
   65208:	ldr	x9, [x19, #8]
   6520c:	cbz	x9, 652a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd57c>
   65210:	ldr	x0, [x19, #16]
   65214:	mov	w1, #0xa0                  	// #160
   65218:	blr	x8
   6521c:	mov	x20, x0
   65220:	cbz	x0, 652a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd580>
   65224:	movi	v0.2d, #0x0
   65228:	stp	q0, q0, [x20, #128]
   6522c:	stp	q0, q0, [x20, #96]
   65230:	stp	q0, q0, [x20, #64]
   65234:	stp	q0, q0, [x20, #32]
   65238:	stp	q0, q0, [x20]
   6523c:	ldr	x8, [x19, #16]
   65240:	ldr	q0, [x19]
   65244:	mov	x0, sp
   65248:	str	x8, [x20, #152]
   6524c:	stur	q0, [x20, #136]
   65250:	ldr	x8, [x19, #16]
   65254:	ldr	q0, [x19]
   65258:	str	x8, [sp, #16]
   6525c:	str	q0, [sp]
   65260:	bl	6401c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc2f8>
   65264:	str	x0, [x20]
   65268:	cbz	x0, 65298 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd574>
   6526c:	str	wzr, [x20, #32]
   65270:	b	652a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd580>
   65274:	adrp	x8, 7c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x242dc>
   65278:	add	x8, x8, #0xdc0
   6527c:	ldr	x9, [x8, #16]
   65280:	ldr	q0, [x8]
   65284:	str	x9, [x19, #16]
   65288:	str	q0, [x19]
   6528c:	ldr	x8, [x19]
   65290:	cbnz	x8, 65208 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd4e4>
   65294:	b	652a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd57c>
   65298:	mov	x0, x20
   6529c:	bl	652b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd594>
   652a0:	mov	x20, xzr
   652a4:	mov	x0, x20
   652a8:	ldp	x20, x19, [sp, #48]
   652ac:	ldp	x29, x30, [sp, #32]
   652b0:	add	sp, sp, #0x40
   652b4:	ret
   652b8:	cbz	x0, 65308 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd5e4>
   652bc:	stp	x29, x30, [sp, #-32]!
   652c0:	str	x19, [sp, #16]
   652c4:	mov	x19, x0
   652c8:	ldr	x0, [x0]
   652cc:	mov	x29, sp
   652d0:	bl	640ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xc3c8>
   652d4:	ldr	x1, [x19, #40]
   652d8:	cbz	x1, 652e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd5c0>
   652dc:	ldp	x8, x0, [x19, #144]
   652e0:	blr	x8
   652e4:	ldr	x1, [x19, #64]
   652e8:	cbz	x1, 652f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd5d0>
   652ec:	ldp	x8, x0, [x19, #144]
   652f0:	blr	x8
   652f4:	ldp	x8, x0, [x19, #144]
   652f8:	mov	x1, x19
   652fc:	blr	x8
   65300:	ldr	x19, [sp, #16]
   65304:	ldp	x29, x30, [sp], #32
   65308:	mov	x0, xzr
   6530c:	ret
   65310:	stp	x29, x30, [sp, #-16]!
   65314:	ldr	x8, [x0]
   65318:	mov	w9, #0x1                   	// #1
   6531c:	str	xzr, [x0, #56]
   65320:	str	w9, [x0, #32]
   65324:	str	xzr, [x0, #128]
   65328:	stp	xzr, xzr, [x0, #80]
   6532c:	mov	x0, x8
   65330:	mov	x29, sp
   65334:	bl	645b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc88c>
   65338:	ldp	x29, x30, [sp], #16
   6533c:	ret
   65340:	stp	x29, x30, [sp, #-16]!
   65344:	mov	x1, xzr
   65348:	mov	x2, xzr
   6534c:	mov	x29, sp
   65350:	bl	65310 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd5ec>
   65354:	ldp	x29, x30, [sp], #16
   65358:	ret
   6535c:	sub	sp, sp, #0xa0
   65360:	stp	x29, x30, [sp, #64]
   65364:	stp	x28, x27, [sp, #80]
   65368:	stp	x26, x25, [sp, #96]
   6536c:	stp	x24, x23, [sp, #112]
   65370:	stp	x22, x21, [sp, #128]
   65374:	stp	x20, x19, [sp, #144]
   65378:	stp	x4, x2, [sp, #24]
   6537c:	ldr	x8, [x4]
   65380:	ldr	x9, [x2]
   65384:	add	x29, sp, #0x40
   65388:	add	x10, x0, #0x8
   6538c:	stur	x10, [x29, #-16]
   65390:	add	x10, x0, #0x68
   65394:	adrp	x22, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   65398:	mov	x27, x3
   6539c:	mov	x26, x1
   653a0:	mov	x19, x0
   653a4:	stur	x10, [x29, #-8]
   653a8:	add	x10, x0, #0x50
   653ac:	mov	w24, #0x1                   	// #1
   653b0:	add	x22, x22, #0xcd2
   653b4:	add	x25, x3, x8
   653b8:	add	x23, x1, x9
   653bc:	stur	x10, [x29, #-24]
   653c0:	stp	x3, x1, [sp, #8]
   653c4:	b	653d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6ac>
   653c8:	mov	w24, wzr
   653cc:	cbz	w24, 65870 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb4c>
   653d0:	ldr	w8, [x19, #32]
   653d4:	cmp	w8, #0x4
   653d8:	b.hi	658a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb7c>  // b.pmore
   653dc:	adr	x9, 653f0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6cc>
   653e0:	ldrh	w10, [x22, x8, lsl #1]
   653e4:	add	x9, x9, x10, lsl #2
   653e8:	mov	x28, #0xffffffffffffffc2    	// #-62
   653ec:	br	x9
   653f0:	ldr	x2, [x19, #128]
   653f4:	ldp	x0, x1, [x29, #-16]
   653f8:	bl	6412c <ZDICT_addEntropyTablesFromBuffer@@Base+0xc408>
   653fc:	mov	x28, x0
   65400:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   65404:	cbz	w0, 65454 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd730>
   65408:	mov	w8, #0x1                   	// #1
   6540c:	cmp	w8, #0x4
   65410:	b.eq	65534 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd810>  // b.none
   65414:	cbnz	w8, 658ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb88>
   65418:	ldr	x20, [x19]
   6541c:	mov	x0, x20
   65420:	bl	64ad8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdb4>
   65424:	ldur	x3, [x29, #-8]
   65428:	mov	x21, x0
   6542c:	mov	x0, x20
   65430:	mov	x1, xzr
   65434:	mov	x2, xzr
   65438:	mov	x4, x21
   6543c:	bl	64af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdd0>
   65440:	mov	x20, x0
   65444:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   65448:	cbz	w0, 654a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd784>
   6544c:	mov	w8, #0x1                   	// #1
   65450:	b	65544 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd820>
   65454:	cbz	x28, 654f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd7d4>
   65458:	ldr	x8, [x19, #128]
   6545c:	sub	x21, x25, x27
   65460:	mov	x1, x27
   65464:	sub	x22, x28, x8
   65468:	add	x8, x19, x8
   6546c:	cmp	x22, x21
   65470:	add	x0, x8, #0x68
   65474:	b.ls	6550c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd7e8>  // b.plast
   65478:	mov	x2, x21
   6547c:	bl	4420 <memcpy@plt>
   65480:	ldr	x8, [x19, #128]
   65484:	add	x8, x8, x21
   65488:	str	x8, [x19, #128]
   6548c:	ldr	x8, [sp, #32]
   65490:	str	xzr, [x8]
   65494:	ldr	x8, [x19, #128]
   65498:	sub	x8, x28, x8
   6549c:	add	x28, x8, #0x3
   654a0:	mov	w8, #0x1                   	// #1
   654a4:	b	65524 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd800>
   654a8:	ldr	x8, [x19, #128]
   654ac:	cmp	x21, x8
   654b0:	b.cs	6553c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd818>  // b.hs, b.nlast
   654b4:	ldr	x20, [x19]
   654b8:	mov	x0, x20
   654bc:	bl	64ad8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdb4>
   654c0:	add	x8, x19, x21
   654c4:	mov	x4, x0
   654c8:	add	x3, x8, #0x68
   654cc:	mov	x0, x20
   654d0:	mov	x1, xzr
   654d4:	mov	x2, xzr
   654d8:	bl	64af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdd0>
   654dc:	mov	x20, x0
   654e0:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   654e4:	cmp	w0, #0x0
   654e8:	cset	w8, ne  // ne = any
   654ec:	csel	x20, x28, x20, eq  // eq = none
   654f0:	cbnz	w0, 65544 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd820>
   654f4:	b	65540 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd81c>
   654f8:	mov	w8, wzr
   654fc:	mov	x28, x20
   65500:	cmp	w8, #0x4
   65504:	b.ne	65414 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6f0>  // b.any
   65508:	b	65534 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd810>
   6550c:	mov	x2, x22
   65510:	bl	4420 <memcpy@plt>
   65514:	str	x28, [x19, #128]
   65518:	add	x27, x27, x22
   6551c:	mov	w8, #0x4                   	// #4
   65520:	mov	x28, x20
   65524:	adrp	x22, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   65528:	add	x22, x22, #0xcd2
   6552c:	cmp	w8, #0x4
   65530:	b.ne	65414 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6f0>  // b.any
   65534:	mov	x20, x28
   65538:	b	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>
   6553c:	mov	x20, x28
   65540:	mov	w8, wzr
   65544:	cbnz	w8, 658a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb84>
   65548:	ldr	w8, [x19, #16]
   6554c:	ldr	x9, [x19, #48]
   65550:	mov	w10, #0x400                 	// #1024
   65554:	cmp	w8, #0x400
   65558:	csel	w8, w8, w10, hi  // hi = pmore
   6555c:	cmp	w8, #0x20, lsl #12
   65560:	mov	w10, #0x20000               	// #131072
   65564:	csel	w21, w8, w10, cc  // cc = lo, ul, last
   65568:	cmp	x9, x21
   6556c:	str	w8, [x19, #16]
   65570:	str	x21, [x19, #96]
   65574:	b.cs	655a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd87c>  // b.hs, b.nlast
   65578:	ldp	x8, x0, [x19, #144]
   6557c:	ldr	x1, [x19, #40]
   65580:	blr	x8
   65584:	ldr	x8, [x19, #136]
   65588:	ldr	x0, [x19, #152]
   6558c:	mov	x1, x21
   65590:	str	x21, [x19, #48]
   65594:	blr	x8
   65598:	str	x0, [x19, #40]
   6559c:	cbz	x0, 655ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xd8c8>
   655a0:	ldr	w8, [x19, #16]
   655a4:	ldr	x9, [x19, #72]
   655a8:	add	x8, x21, x8
   655ac:	add	x21, x8, #0x10
   655b0:	cmp	x9, x21
   655b4:	b.cs	655e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd8bc>  // b.hs, b.nlast
   655b8:	ldp	x8, x0, [x19, #144]
   655bc:	ldr	x1, [x19, #64]
   655c0:	blr	x8
   655c4:	ldr	x8, [x19, #136]
   655c8:	ldr	x0, [x19, #152]
   655cc:	mov	x1, x21
   655d0:	str	x21, [x19, #72]
   655d4:	blr	x8
   655d8:	str	x0, [x19, #64]
   655dc:	cbz	x0, 655ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xd8c8>
   655e0:	mov	w8, #0x1                   	// #1
   655e4:	cbnz	w8, 655f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd8d4>
   655e8:	b	658a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb84>
   655ec:	mov	w8, wzr
   655f0:	mov	x20, #0xffffffffffffffc0    	// #-64
   655f4:	cbz	w8, 658a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb84>
   655f8:	mov	w8, #0x2                   	// #2
   655fc:	str	w8, [x19, #32]
   65600:	ldr	x21, [x19]
   65604:	mov	x0, x21
   65608:	bl	64ad8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdb4>
   6560c:	cbz	x0, 65640 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd91c>
   65610:	sub	x8, x25, x27
   65614:	mov	x28, x0
   65618:	cmp	x8, x0
   6561c:	b.cs	6564c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd928>  // b.hs, b.nlast
   65620:	cmp	x27, x25
   65624:	b.eq	65670 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd94c>  // b.none
   65628:	mov	w8, wzr
   6562c:	mov	w9, #0x3                   	// #3
   65630:	str	w9, [x19, #32]
   65634:	cmp	w8, #0x4
   65638:	b.ne	656d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd9b4>  // b.any
   6563c:	b	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>
   65640:	mov	w24, wzr
   65644:	str	wzr, [x19, #32]
   65648:	b	65674 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd950>
   6564c:	mov	x0, x21
   65650:	bl	64ae0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdbc>
   65654:	ldr	x9, [x19, #64]
   65658:	ldr	x8, [x19, #80]
   6565c:	mov	w22, w0
   65660:	add	x1, x9, x8
   65664:	cbz	w0, 65684 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd960>
   65668:	mov	x2, xzr
   6566c:	b	6568c <ZDICT_addEntropyTablesFromBuffer@@Base+0xd968>
   65670:	mov	w24, wzr
   65674:	mov	w8, #0x4                   	// #4
   65678:	cmp	w8, #0x4
   6567c:	b.ne	656d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd9b4>  // b.any
   65680:	b	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>
   65684:	ldr	x9, [x19, #72]
   65688:	sub	x2, x9, x8
   6568c:	mov	x0, x21
   65690:	mov	x3, x27
   65694:	mov	x4, x28
   65698:	bl	64af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdd0>
   6569c:	mov	x21, x0
   656a0:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   656a4:	cbz	w0, 656b8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd994>
   656a8:	adrp	x22, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   656ac:	mov	w8, #0x1                   	// #1
   656b0:	mov	x20, x21
   656b4:	b	656cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd9a8>
   656b8:	add	x27, x27, x28
   656bc:	mov	w8, #0x4                   	// #4
   656c0:	cbnz	w22, 657bc <ZDICT_addEntropyTablesFromBuffer@@Base+0xda98>
   656c4:	cbnz	x21, 657bc <ZDICT_addEntropyTablesFromBuffer@@Base+0xda98>
   656c8:	adrp	x22, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   656cc:	add	x22, x22, #0xcd2
   656d0:	cmp	w8, #0x4
   656d4:	b.eq	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>  // b.none
   656d8:	mov	x28, x20
   656dc:	cbnz	w8, 658ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb88>
   656e0:	ldr	x0, [x19]
   656e4:	bl	64ad8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdb4>
   656e8:	ldp	x9, x8, [x19, #48]
   656ec:	sub	x21, x0, x8
   656f0:	sub	x9, x9, x8
   656f4:	cmp	x21, x9
   656f8:	b.ls	65710 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd9ec>  // b.plast
   656fc:	mov	x20, #0xffffffffffffffec    	// #-20
   65700:	mov	w8, #0x1                   	// #1
   65704:	cmp	w8, #0x4
   65708:	b.ne	65808 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae4>  // b.any
   6570c:	b	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>
   65710:	ldr	x9, [x19, #40]
   65714:	mov	x28, x0
   65718:	sub	x3, x25, x27
   6571c:	mov	x1, x21
   65720:	add	x0, x9, x8
   65724:	mov	x2, x27
   65728:	bl	658d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdbac>
   6572c:	ldr	x8, [x19, #56]
   65730:	add	x27, x27, x0
   65734:	cmp	x0, x21
   65738:	add	x8, x8, x0
   6573c:	str	x8, [x19, #56]
   65740:	b.cs	65758 <ZDICT_addEntropyTablesFromBuffer@@Base+0xda34>  // b.hs, b.nlast
   65744:	mov	w24, wzr
   65748:	mov	w8, #0x4                   	// #4
   6574c:	cmp	w8, #0x4
   65750:	b.ne	65808 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdae4>  // b.any
   65754:	b	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>
   65758:	ldr	x22, [x19]
   6575c:	mov	x0, x22
   65760:	bl	64ae0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdbc>
   65764:	ldp	x10, x8, [x19, #72]
   65768:	ldr	x9, [x19, #64]
   6576c:	ldr	x3, [x19, #40]
   65770:	mov	w21, w0
   65774:	sub	x2, x10, x8
   65778:	add	x1, x9, x8
   6577c:	mov	x0, x22
   65780:	mov	x4, x28
   65784:	bl	64af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdd0>
   65788:	mov	x22, x0
   6578c:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   65790:	cbz	w0, 657a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xda7c>
   65794:	mov	w8, #0x1                   	// #1
   65798:	mov	x20, x22
   6579c:	b	657f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdad4>
   657a0:	str	xzr, [x19, #56]
   657a4:	cbnz	w21, 657e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdabc>
   657a8:	cbnz	x22, 657e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdabc>
   657ac:	mov	w8, #0x2                   	// #2
   657b0:	str	w8, [x19, #32]
   657b4:	mov	w8, #0x4                   	// #4
   657b8:	b	657f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdad4>
   657bc:	ldr	x9, [x19, #80]
   657c0:	adrp	x22, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   657c4:	str	w8, [x19, #32]
   657c8:	add	x22, x22, #0xcd2
   657cc:	add	x9, x9, x21
   657d0:	str	x9, [x19, #88]
   657d4:	cmp	w8, #0x4
   657d8:	b.ne	656d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd9b4>  // b.any
   657dc:	b	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>
   657e0:	ldr	x9, [x19, #80]
   657e4:	mov	w8, wzr
   657e8:	add	x9, x9, x22
   657ec:	str	x9, [x19, #88]
   657f0:	mov	w9, #0x4                   	// #4
   657f4:	str	w9, [x19, #32]
   657f8:	adrp	x22, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   657fc:	add	x22, x22, #0xcd2
   65800:	cmp	w8, #0x4
   65804:	b.eq	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>  // b.none
   65808:	mov	x28, x20
   6580c:	cbnz	w8, 658ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb88>
   65810:	ldp	x9, x8, [x19, #80]
   65814:	ldr	x10, [x19, #64]
   65818:	sub	x1, x23, x26
   6581c:	mov	x0, x26
   65820:	sub	x21, x8, x9
   65824:	add	x2, x10, x9
   65828:	mov	x3, x21
   6582c:	bl	658d0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdbac>
   65830:	ldr	x8, [x19, #80]
   65834:	add	x26, x26, x0
   65838:	cmp	x0, x21
   6583c:	add	x8, x8, x0
   65840:	str	x8, [x19, #80]
   65844:	b.ne	653c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a4>  // b.any
   65848:	ldr	x9, [x19, #96]
   6584c:	ldr	x10, [x19, #72]
   65850:	add	x8, x9, x8
   65854:	cmp	x8, x10
   65858:	mov	w8, #0x2                   	// #2
   6585c:	str	w8, [x19, #32]
   65860:	b.ls	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>  // b.plast
   65864:	ldur	x8, [x29, #-24]
   65868:	stp	xzr, xzr, [x8]
   6586c:	b	653cc <ZDICT_addEntropyTablesFromBuffer@@Base+0xd6a8>
   65870:	ldp	x8, x9, [sp, #8]
   65874:	ldr	x10, [sp, #24]
   65878:	sub	x8, x27, x8
   6587c:	str	x8, [x10]
   65880:	ldr	x8, [sp, #32]
   65884:	sub	x9, x26, x9
   65888:	str	x9, [x8]
   6588c:	ldr	x0, [x19]
   65890:	bl	64ad8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xcdb4>
   65894:	ldr	x8, [x19, #56]
   65898:	sub	x28, x0, x8
   6589c:	b	658ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb88>
   658a0:	mov	x28, #0xffffffffffffffff    	// #-1
   658a4:	b	658ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xdb88>
   658a8:	mov	x28, x20
   658ac:	mov	x0, x28
   658b0:	ldp	x20, x19, [sp, #144]
   658b4:	ldp	x22, x21, [sp, #128]
   658b8:	ldp	x24, x23, [sp, #112]
   658bc:	ldp	x26, x25, [sp, #96]
   658c0:	ldp	x28, x27, [sp, #80]
   658c4:	ldp	x29, x30, [sp, #64]
   658c8:	add	sp, sp, #0xa0
   658cc:	ret
   658d0:	stp	x29, x30, [sp, #-32]!
   658d4:	cmp	x1, x3
   658d8:	str	x19, [sp, #16]
   658dc:	csel	x19, x1, x3, cc  // cc = lo, ul, last
   658e0:	mov	x1, x2
   658e4:	mov	x2, x19
   658e8:	mov	x29, sp
   658ec:	bl	4420 <memcpy@plt>
   658f0:	mov	x0, x19
   658f4:	ldr	x19, [sp, #16]
   658f8:	ldp	x29, x30, [sp], #32
   658fc:	ret
   65900:	mov	w0, #0x3                   	// #3
   65904:	movk	w0, #0x2, lsl #16
   65908:	ret
   6590c:	mov	w0, #0x20000               	// #131072
   65910:	ret
   65914:	stp	x29, x30, [sp, #-32]!
   65918:	str	x19, [sp, #16]
   6591c:	mov	x29, sp
   65920:	mov	x19, x0
   65924:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   65928:	cmp	w0, #0x0
   6592c:	csneg	w0, wzr, w19, eq  // eq = none
   65930:	ldr	x19, [sp, #16]
   65934:	ldp	x29, x30, [sp], #32
   65938:	ret
   6593c:	ldr	w0, [x0]
   65940:	ret
   65944:	stp	x29, x30, [sp, #-48]!
   65948:	stp	x20, x19, [sp, #32]
   6594c:	mov	x20, x0
   65950:	str	x21, [sp, #16]
   65954:	mov	x29, sp
   65958:	cbz	x2, 6599c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc78>
   6595c:	mov	x19, x2
   65960:	cmp	x2, #0x8
   65964:	str	x1, [x20, #24]
   65968:	b.cc	659ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc88>  // b.lo, b.ul, b.last
   6596c:	add	x21, x1, x19
   65970:	sub	x0, x21, #0x8
   65974:	str	x0, [x20, #16]
   65978:	bl	65c2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf08>
   6597c:	str	x0, [x20]
   65980:	ldurb	w0, [x21, #-1]
   65984:	cbz	w0, 65a60 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd3c>
   65988:	bl	62168 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa444>
   6598c:	mov	w8, #0x8                   	// #8
   65990:	sub	w8, w8, w0
   65994:	str	w8, [x20, #8]
   65998:	b	65a88 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd64>
   6599c:	movi	v0.2d, #0x0
   659a0:	stp	q0, q0, [x20]
   659a4:	mov	x19, #0xffffffffffffffb8    	// #-72
   659a8:	b	65a88 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd64>
   659ac:	str	x1, [x20, #16]
   659b0:	ldrb	w8, [x1]
   659b4:	sub	x9, x19, #0x2
   659b8:	cmp	x9, #0x5
   659bc:	str	x8, [x20]
   659c0:	b.hi	65a38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd14>  // b.pmore
   659c4:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   659c8:	add	x10, x10, #0xcdc
   659cc:	adr	x11, 659dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xdcb8>
   659d0:	ldrb	w12, [x10, x9]
   659d4:	add	x11, x11, x12, lsl #2
   659d8:	br	x11
   659dc:	ldrb	w9, [x1, #6]
   659e0:	bfi	x8, x9, #48, #8
   659e4:	str	x8, [x20]
   659e8:	ldrb	w8, [x1, #5]
   659ec:	ldr	x9, [x20]
   659f0:	add	x8, x9, x8, lsl #40
   659f4:	str	x8, [x20]
   659f8:	ldrb	w8, [x1, #4]
   659fc:	ldr	x9, [x20]
   65a00:	add	x8, x9, x8, lsl #32
   65a04:	str	x8, [x20]
   65a08:	ldrb	w8, [x1, #3]
   65a0c:	ldr	x9, [x20]
   65a10:	add	x8, x9, x8, lsl #24
   65a14:	str	x8, [x20]
   65a18:	ldrb	w8, [x1, #2]
   65a1c:	ldr	x9, [x20]
   65a20:	add	x8, x9, x8, lsl #16
   65a24:	str	x8, [x20]
   65a28:	ldrb	w8, [x1, #1]
   65a2c:	ldr	x9, [x20]
   65a30:	add	x8, x9, x8, lsl #8
   65a34:	str	x8, [x20]
   65a38:	add	x8, x19, x1
   65a3c:	ldurb	w21, [x8, #-1]
   65a40:	cbz	w21, 65a68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd44>
   65a44:	mov	w0, w21
   65a48:	bl	62168 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa444>
   65a4c:	mov	w8, #0x8                   	// #8
   65a50:	sub	w8, w8, w0
   65a54:	str	w8, [x20, #8]
   65a58:	cbnz	w21, 65a74 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd50>
   65a5c:	b	65a84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd60>
   65a60:	str	wzr, [x20, #8]
   65a64:	b	65a84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd60>
   65a68:	mov	w8, wzr
   65a6c:	str	w8, [x20, #8]
   65a70:	cbz	w21, 65a84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd60>
   65a74:	sub	w8, w8, w19, lsl #3
   65a78:	add	w8, w8, #0x40
   65a7c:	str	w8, [x20, #8]
   65a80:	b	65a88 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd64>
   65a84:	mov	x19, #0xffffffffffffffff    	// #-1
   65a88:	mov	x0, x19
   65a8c:	ldp	x20, x19, [sp, #32]
   65a90:	ldr	x21, [sp, #16]
   65a94:	ldp	x29, x30, [sp], #48
   65a98:	ret
   65a9c:	stp	x29, x30, [sp, #-48]!
   65aa0:	str	x21, [sp, #16]
   65aa4:	stp	x20, x19, [sp, #32]
   65aa8:	mov	x19, x2
   65aac:	mov	x20, x1
   65ab0:	ldrh	w1, [x19], #4
   65ab4:	mov	x21, x0
   65ab8:	mov	x0, x20
   65abc:	mov	x29, sp
   65ac0:	bl	65c40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf1c>
   65ac4:	str	x0, [x21]
   65ac8:	mov	x0, x20
   65acc:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   65ad0:	str	x19, [x21, #8]
   65ad4:	ldp	x20, x19, [sp, #32]
   65ad8:	ldr	x21, [sp, #16]
   65adc:	ldp	x29, x30, [sp], #48
   65ae0:	ret
   65ae4:	stp	x29, x30, [sp, #-32]!
   65ae8:	stp	x20, x19, [sp, #16]
   65aec:	ldr	w8, [x0, #8]
   65af0:	mov	x29, sp
   65af4:	cmp	w8, #0x40
   65af8:	b.ls	65b04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdde0>  // b.plast
   65afc:	mov	w20, #0x3                   	// #3
   65b00:	b	65b7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde58>
   65b04:	ldp	x9, x10, [x0, #16]
   65b08:	mov	x19, x0
   65b0c:	add	x11, x10, #0x8
   65b10:	cmp	x9, x11
   65b14:	b.cs	65b50 <ZDICT_addEntropyTablesFromBuffer@@Base+0xde2c>  // b.hs, b.nlast
   65b18:	cmp	x9, x10
   65b1c:	b.eq	65b70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xde4c>  // b.none
   65b20:	lsr	x11, x8, #3
   65b24:	sub	x13, x9, x11
   65b28:	sub	w12, w9, w10
   65b2c:	cmp	x13, x10
   65b30:	csel	w10, w12, w11, cc  // cc = lo, ul, last
   65b34:	sub	x0, x9, x10
   65b38:	sub	w8, w8, w10, lsl #3
   65b3c:	cset	w20, cc  // cc = lo, ul, last
   65b40:	str	x0, [x19, #16]
   65b44:	str	w8, [x19, #8]
   65b48:	bl	65c2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf08>
   65b4c:	b	65b68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xde44>
   65b50:	sub	x0, x9, x8, lsr #3
   65b54:	and	w8, w8, #0x7
   65b58:	str	x0, [x19, #16]
   65b5c:	str	w8, [x19, #8]
   65b60:	bl	65c2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf08>
   65b64:	mov	w20, wzr
   65b68:	str	x0, [x19]
   65b6c:	b	65b7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xde58>
   65b70:	cmp	w8, #0x40
   65b74:	mov	w8, #0x1                   	// #1
   65b78:	cinc	w20, w8, cs  // cs = hs, nlast
   65b7c:	mov	w0, w20
   65b80:	ldp	x20, x19, [sp, #16]
   65b84:	ldp	x29, x30, [sp], #32
   65b88:	ret
   65b8c:	stp	x29, x30, [sp, #-48]!
   65b90:	str	x21, [sp, #16]
   65b94:	stp	x20, x19, [sp, #32]
   65b98:	ldp	x9, x8, [x0]
   65b9c:	mov	x19, x0
   65ba0:	mov	x0, x1
   65ba4:	mov	x29, sp
   65ba8:	add	x9, x8, x9, lsl #2
   65bac:	ldrb	w8, [x9, #3]
   65bb0:	ldrh	w21, [x9]
   65bb4:	ldrb	w20, [x9, #2]
   65bb8:	mov	w1, w8
   65bbc:	bl	65cb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf8c>
   65bc0:	add	x8, x0, x21
   65bc4:	str	x8, [x19]
   65bc8:	mov	w0, w20
   65bcc:	ldp	x20, x19, [sp, #32]
   65bd0:	ldr	x21, [sp, #16]
   65bd4:	ldp	x29, x30, [sp], #48
   65bd8:	ret
   65bdc:	stp	x29, x30, [sp, #-48]!
   65be0:	str	x21, [sp, #16]
   65be4:	stp	x20, x19, [sp, #32]
   65be8:	ldp	x9, x8, [x0]
   65bec:	mov	x19, x0
   65bf0:	mov	x0, x1
   65bf4:	mov	x29, sp
   65bf8:	add	x9, x8, x9, lsl #2
   65bfc:	ldrb	w8, [x9, #3]
   65c00:	ldrh	w21, [x9]
   65c04:	ldrb	w20, [x9, #2]
   65c08:	mov	w1, w8
   65c0c:	bl	65c40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf1c>
   65c10:	add	x8, x0, x21
   65c14:	str	x8, [x19]
   65c18:	mov	w0, w20
   65c1c:	ldp	x20, x19, [sp, #32]
   65c20:	ldr	x21, [sp, #16]
   65c24:	ldp	x29, x30, [sp], #48
   65c28:	ret
   65c2c:	stp	x29, x30, [sp, #-16]!
   65c30:	mov	x29, sp
   65c34:	bl	643ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xc688>
   65c38:	ldp	x29, x30, [sp], #16
   65c3c:	ret
   65c40:	stp	x29, x30, [sp, #-48]!
   65c44:	str	x21, [sp, #16]
   65c48:	stp	x20, x19, [sp, #32]
   65c4c:	mov	x29, sp
   65c50:	mov	w19, w1
   65c54:	mov	x20, x0
   65c58:	bl	65c80 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf5c>
   65c5c:	mov	x21, x0
   65c60:	mov	x0, x20
   65c64:	mov	w1, w19
   65c68:	bl	65ca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf7c>
   65c6c:	mov	x0, x21
   65c70:	ldp	x20, x19, [sp, #32]
   65c74:	ldr	x21, [sp, #16]
   65c78:	ldp	x29, x30, [sp], #48
   65c7c:	ret
   65c80:	ldr	x8, [x0]
   65c84:	ldr	w9, [x0, #8]
   65c88:	mov	w10, #0x3f                  	// #63
   65c8c:	lsl	x8, x8, x9
   65c90:	lsr	x8, x8, #1
   65c94:	sub	w9, w10, w1
   65c98:	lsr	x0, x8, x9
   65c9c:	ret
   65ca0:	ldr	w8, [x0, #8]
   65ca4:	add	w8, w8, w1
   65ca8:	str	w8, [x0, #8]
   65cac:	ret
   65cb0:	stp	x29, x30, [sp, #-48]!
   65cb4:	str	x21, [sp, #16]
   65cb8:	stp	x20, x19, [sp, #32]
   65cbc:	mov	x29, sp
   65cc0:	mov	w19, w1
   65cc4:	mov	x20, x0
   65cc8:	bl	65cf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfcc>
   65ccc:	mov	x21, x0
   65cd0:	mov	x0, x20
   65cd4:	mov	w1, w19
   65cd8:	bl	65ca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf7c>
   65cdc:	mov	x0, x21
   65ce0:	ldp	x20, x19, [sp, #32]
   65ce4:	ldr	x21, [sp, #16]
   65ce8:	ldp	x29, x30, [sp], #48
   65cec:	ret
   65cf0:	ldr	x8, [x0]
   65cf4:	ldr	w9, [x0, #8]
   65cf8:	lsl	x8, x8, x9
   65cfc:	neg	w9, w1
   65d00:	lsr	x0, x8, x9
   65d04:	ret
   65d08:	stp	x29, x30, [sp, #-80]!
   65d0c:	stp	x24, x23, [sp, #32]
   65d10:	mov	x23, x0
   65d14:	mov	x0, x1
   65d18:	str	x25, [sp, #16]
   65d1c:	stp	x22, x21, [sp, #48]
   65d20:	stp	x20, x19, [sp, #64]
   65d24:	mov	x29, sp
   65d28:	mov	w19, w4
   65d2c:	mov	x20, x3
   65d30:	mov	x21, x2
   65d34:	mov	x22, x1
   65d38:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   65d3c:	sub	x25, x21, #0x4
   65d40:	cmp	x25, x23
   65d44:	b.cc	65dbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe098>  // b.lo, b.ul, b.last
   65d48:	cbnz	w0, 65dbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe098>
   65d4c:	mov	x0, x22
   65d50:	mov	x1, x20
   65d54:	mov	w2, w19
   65d58:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   65d5c:	strb	w0, [x23]
   65d60:	mov	x0, x22
   65d64:	mov	x1, x20
   65d68:	mov	w2, w19
   65d6c:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   65d70:	strb	w0, [x23, #1]
   65d74:	mov	x0, x22
   65d78:	mov	x1, x20
   65d7c:	mov	w2, w19
   65d80:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   65d84:	strb	w0, [x23, #2]
   65d88:	mov	x0, x22
   65d8c:	mov	x1, x20
   65d90:	mov	w2, w19
   65d94:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   65d98:	strb	w0, [x23, #3]
   65d9c:	mov	x0, x22
   65da0:	add	x24, x23, #0x4
   65da4:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   65da8:	cmp	x24, x25
   65dac:	b.hi	65dc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe09c>  // b.pmore
   65db0:	mov	x23, x24
   65db4:	cbz	w0, 65d4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe028>
   65db8:	b	65dc0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe09c>
   65dbc:	mov	x24, x23
   65dc0:	mov	x0, x22
   65dc4:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   65dc8:	cmp	x24, x21
   65dcc:	b.cs	65dfc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe0d8>  // b.hs, b.nlast
   65dd0:	cbnz	w0, 65dfc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe0d8>
   65dd4:	mov	x0, x22
   65dd8:	mov	x1, x20
   65ddc:	mov	w2, w19
   65de0:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   65de4:	strb	w0, [x24], #1
   65de8:	mov	x0, x22
   65dec:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   65df0:	cmp	x24, x21
   65df4:	b.cs	65dfc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe0d8>  // b.hs, b.nlast
   65df8:	cbz	w0, 65dd4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe0b0>
   65dfc:	cmp	x24, x21
   65e00:	b.cs	65e20 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe0fc>  // b.hs, b.nlast
   65e04:	mov	x0, x22
   65e08:	mov	x1, x20
   65e0c:	mov	w2, w19
   65e10:	bl	65e5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe138>
   65e14:	strb	w0, [x24], #1
   65e18:	cmp	x21, x24
   65e1c:	b.ne	65e04 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe0e0>  // b.any
   65e20:	ldp	x20, x19, [sp, #64]
   65e24:	ldp	x22, x21, [sp, #48]
   65e28:	ldp	x24, x23, [sp, #32]
   65e2c:	ldr	x25, [sp, #16]
   65e30:	ldp	x29, x30, [sp], #80
   65e34:	ret
   65e38:	ldp	x8, x9, [x0, #16]
   65e3c:	cmp	x8, x9
   65e40:	b.eq	65e4c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe128>  // b.none
   65e44:	mov	w0, wzr
   65e48:	ret
   65e4c:	ldr	w8, [x0, #8]
   65e50:	cmp	w8, #0x40
   65e54:	cset	w0, eq  // eq = none
   65e58:	ret
   65e5c:	stp	x29, x30, [sp, #-32]!
   65e60:	stp	x20, x19, [sp, #16]
   65e64:	mov	x19, x1
   65e68:	mov	w1, w2
   65e6c:	mov	x29, sp
   65e70:	mov	x20, x0
   65e74:	bl	65cf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfcc>
   65e78:	add	x8, x19, x0, lsl #1
   65e7c:	ldrb	w1, [x8, #1]
   65e80:	ldrb	w19, [x8]
   65e84:	mov	x0, x20
   65e88:	bl	65ca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf7c>
   65e8c:	mov	w0, w19
   65e90:	ldp	x20, x19, [sp, #16]
   65e94:	ldp	x29, x30, [sp], #32
   65e98:	ret
   65e9c:	sub	sp, sp, #0xd0
   65ea0:	stp	x29, x30, [sp, #112]
   65ea4:	stp	x28, x27, [sp, #128]
   65ea8:	stp	x26, x25, [sp, #144]
   65eac:	stp	x24, x23, [sp, #160]
   65eb0:	stp	x22, x21, [sp, #176]
   65eb4:	stp	x20, x19, [sp, #192]
   65eb8:	ldr	q0, [x3]
   65ebc:	add	x29, sp, #0x70
   65ec0:	str	w7, [sp, #28]
   65ec4:	str	x5, [sp, #16]
   65ec8:	str	w1, [sp, #12]
   65ecc:	str	q0, [sp, #32]
   65ed0:	ldp	q0, q1, [x3, #16]
   65ed4:	ldr	w8, [x3, #64]
   65ed8:	ldr	q2, [x3, #48]
   65edc:	ldrh	w24, [x29, #96]
   65ee0:	mov	w25, w6
   65ee4:	mov	w21, w2
   65ee8:	mov	x23, x0
   65eec:	cmp	w4, #0x2
   65ef0:	str	w8, [sp, #96]
   65ef4:	stp	q1, q2, [sp, #64]
   65ef8:	str	q0, [sp, #48]
   65efc:	b.lt	65f38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe214>  // b.tstop
   65f00:	add	x8, sp, #0x20
   65f04:	ldr	w26, [x8, w4, sxtw #2]
   65f08:	sub	x0, x29, #0x4
   65f0c:	mov	w1, w24
   65f10:	bl	65fdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2b8>
   65f14:	mov	w8, #0x1                   	// #1
   65f18:	sturb	w21, [x29, #-2]
   65f1c:	sturb	w8, [x29, #-1]
   65f20:	cbz	w26, 65f38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe214>
   65f24:	ldur	w8, [x29, #-4]
   65f28:	mov	x9, x23
   65f2c:	subs	x26, x26, #0x1
   65f30:	str	w8, [x9], #4
   65f34:	b.ne	65f2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe208>  // b.any
   65f38:	cbz	w25, 65fbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe298>
   65f3c:	mov	x26, xzr
   65f40:	mov	w25, w25
   65f44:	add	x28, sp, #0x20
   65f48:	ldr	x8, [sp, #16]
   65f4c:	ldr	w9, [sp, #28]
   65f50:	mov	w10, #0x1                   	// #1
   65f54:	sub	x0, x29, #0x4
   65f58:	add	x8, x8, x26, lsl #1
   65f5c:	ldrb	w27, [x8, #1]
   65f60:	ldrb	w8, [x8]
   65f64:	sub	w22, w9, w27
   65f68:	ldr	w9, [sp, #12]
   65f6c:	ldr	w20, [x28, x27, lsl #2]
   65f70:	add	w1, w24, w8, lsl #8
   65f74:	sub	w9, w9, w22
   65f78:	lsl	w9, w10, w9
   65f7c:	add	w19, w9, w20
   65f80:	bl	65fdc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2b8>
   65f84:	add	w8, w22, w21
   65f88:	sturb	w8, [x29, #-2]
   65f8c:	mov	w8, #0x2                   	// #2
   65f90:	sturb	w8, [x29, #-1]
   65f94:	ldur	w8, [x29, #-4]
   65f98:	add	w9, w20, #0x1
   65f9c:	cmp	w9, w19
   65fa0:	str	w8, [x23, w20, uxtw #2]
   65fa4:	mov	w20, w9
   65fa8:	b.cc	65f98 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe274>  // b.lo, b.ul, b.last
   65fac:	add	x26, x26, #0x1
   65fb0:	cmp	x26, x25
   65fb4:	str	w19, [x28, x27, lsl #2]
   65fb8:	b.ne	65f48 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe224>  // b.any
   65fbc:	ldp	x20, x19, [sp, #192]
   65fc0:	ldp	x22, x21, [sp, #176]
   65fc4:	ldp	x24, x23, [sp, #160]
   65fc8:	ldp	x26, x25, [sp, #144]
   65fcc:	ldp	x28, x27, [sp, #128]
   65fd0:	ldp	x29, x30, [sp, #112]
   65fd4:	add	sp, sp, #0xd0
   65fd8:	ret
   65fdc:	stp	x29, x30, [sp, #-16]!
   65fe0:	mov	x29, sp
   65fe4:	bl	65ff0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe2cc>
   65fe8:	ldp	x29, x30, [sp], #16
   65fec:	ret
   65ff0:	strh	w1, [x0]
   65ff4:	ret
   65ff8:	stp	x29, x30, [sp, #-64]!
   65ffc:	stp	x24, x23, [sp, #16]
   66000:	mov	x23, x0
   66004:	mov	x0, x1
   66008:	stp	x22, x21, [sp, #32]
   6600c:	stp	x20, x19, [sp, #48]
   66010:	mov	x29, sp
   66014:	mov	w19, w4
   66018:	mov	x20, x3
   6601c:	mov	x22, x2
   66020:	mov	x21, x1
   66024:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   66028:	sub	x24, x22, #0x7
   6602c:	cmp	x24, x23
   66030:	b.ls	660ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xe388>  // b.plast
   66034:	cbnz	w0, 660ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xe388>
   66038:	mov	x0, x23
   6603c:	mov	x1, x21
   66040:	mov	x2, x20
   66044:	mov	w3, w19
   66048:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   6604c:	add	x23, x23, w0, uxtw
   66050:	mov	x0, x23
   66054:	mov	x1, x21
   66058:	mov	x2, x20
   6605c:	mov	w3, w19
   66060:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   66064:	add	x23, x23, w0, uxtw
   66068:	mov	x0, x23
   6606c:	mov	x1, x21
   66070:	mov	x2, x20
   66074:	mov	w3, w19
   66078:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   6607c:	add	x23, x23, w0, uxtw
   66080:	mov	x0, x23
   66084:	mov	x1, x21
   66088:	mov	x2, x20
   6608c:	mov	w3, w19
   66090:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   66094:	add	x23, x23, w0, uxtw
   66098:	mov	x0, x21
   6609c:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   660a0:	cmp	x23, x24
   660a4:	b.cs	660ac <ZDICT_addEntropyTablesFromBuffer@@Base+0xe388>  // b.hs, b.nlast
   660a8:	cbz	w0, 66038 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe314>
   660ac:	mov	x0, x21
   660b0:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   660b4:	sub	x24, x22, #0x2
   660b8:	cmp	x23, x24
   660bc:	b.hi	6610c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe3e8>  // b.pmore
   660c0:	cbnz	w0, 6610c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe3e8>
   660c4:	mov	x0, x23
   660c8:	mov	x1, x21
   660cc:	mov	x2, x20
   660d0:	mov	w3, w19
   660d4:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   660d8:	add	x23, x23, w0, uxtw
   660dc:	mov	x0, x21
   660e0:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   660e4:	cmp	x23, x24
   660e8:	b.hi	6610c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe3e8>  // b.pmore
   660ec:	cbz	w0, 660c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe3a0>
   660f0:	b	6610c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe3e8>
   660f4:	mov	x0, x23
   660f8:	mov	x1, x21
   660fc:	mov	x2, x20
   66100:	mov	w3, w19
   66104:	bl	66144 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe420>
   66108:	add	x23, x23, w0, uxtw
   6610c:	cmp	x23, x24
   66110:	b.ls	660f4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe3d0>  // b.plast
   66114:	cmp	x23, x22
   66118:	b.cs	66130 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe40c>  // b.hs, b.nlast
   6611c:	mov	x0, x23
   66120:	mov	x1, x21
   66124:	mov	x2, x20
   66128:	mov	w3, w19
   6612c:	bl	66198 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe474>
   66130:	ldp	x20, x19, [sp, #48]
   66134:	ldp	x22, x21, [sp, #32]
   66138:	ldp	x24, x23, [sp, #16]
   6613c:	ldp	x29, x30, [sp], #64
   66140:	ret
   66144:	stp	x29, x30, [sp, #-48]!
   66148:	str	x21, [sp, #16]
   6614c:	stp	x20, x19, [sp, #32]
   66150:	mov	x20, x1
   66154:	mov	x21, x0
   66158:	mov	x0, x1
   6615c:	mov	w1, w3
   66160:	mov	x29, sp
   66164:	mov	x19, x2
   66168:	bl	65cf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfcc>
   6616c:	add	x19, x19, x0, lsl #2
   66170:	ldrh	w8, [x19]
   66174:	mov	x0, x20
   66178:	strh	w8, [x21]
   6617c:	ldrb	w1, [x19, #2]
   66180:	bl	65ca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf7c>
   66184:	ldrb	w0, [x19, #3]
   66188:	ldp	x20, x19, [sp, #32]
   6618c:	ldr	x21, [sp, #16]
   66190:	ldp	x29, x30, [sp], #48
   66194:	ret
   66198:	stp	x29, x30, [sp, #-48]!
   6619c:	str	x21, [sp, #16]
   661a0:	stp	x20, x19, [sp, #32]
   661a4:	mov	x19, x1
   661a8:	mov	x21, x0
   661ac:	mov	x0, x1
   661b0:	mov	w1, w3
   661b4:	mov	x29, sp
   661b8:	mov	x20, x2
   661bc:	bl	65cf0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdfcc>
   661c0:	add	x8, x20, x0, lsl #2
   661c4:	ldrb	w9, [x8]
   661c8:	strb	w9, [x21]
   661cc:	ldrb	w9, [x8, #3]
   661d0:	cmp	w9, #0x1
   661d4:	b.ne	661e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe4c4>  // b.any
   661d8:	ldrb	w1, [x8, #2]
   661dc:	mov	x0, x19
   661e0:	bl	65ca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf7c>
   661e4:	b	66218 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe4f4>
   661e8:	ldr	w8, [x19, #8]
   661ec:	cmp	w8, #0x3f
   661f0:	b.hi	66218 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe4f4>  // b.pmore
   661f4:	add	x8, x20, x0, lsl #2
   661f8:	ldrb	w1, [x8, #2]
   661fc:	mov	x0, x19
   66200:	bl	65ca0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf7c>
   66204:	ldr	w8, [x19, #8]
   66208:	cmp	w8, #0x41
   6620c:	b.cc	66218 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe4f4>  // b.lo, b.ul, b.last
   66210:	mov	w8, #0x40                  	// #64
   66214:	str	w8, [x19, #8]
   66218:	ldp	x20, x19, [sp, #32]
   6621c:	ldr	x21, [sp, #16]
   66220:	ldp	x29, x30, [sp], #48
   66224:	ret
   66228:	stp	x29, x30, [sp, #-16]!
   6622c:	mov	x0, x1
   66230:	mov	x29, sp
   66234:	bl	4640 <malloc@plt>
   66238:	ldp	x29, x30, [sp], #16
   6623c:	ret
   66240:	stp	x29, x30, [sp, #-16]!
   66244:	mov	x0, x1
   66248:	mov	x29, sp
   6624c:	bl	4880 <free@plt>
   66250:	ldp	x29, x30, [sp], #16
   66254:	ret
   66258:	ldrh	w0, [x0]
   6625c:	ret
   66260:	ldr	x0, [x0]
   66264:	ret
   66268:	stp	x29, x30, [sp, #-48]!
   6626c:	cmp	x2, #0x3
   66270:	stp	x22, x21, [sp, #16]
   66274:	stp	x20, x19, [sp, #32]
   66278:	mov	x29, sp
   6627c:	b.cs	66298 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe574>  // b.hs, b.nlast
   66280:	mov	x20, #0xffffffffffffffec    	// #-20
   66284:	mov	x0, x20
   66288:	ldp	x20, x19, [sp, #32]
   6628c:	ldp	x22, x21, [sp, #16]
   66290:	ldp	x29, x30, [sp], #48
   66294:	ret
   66298:	ldrb	w8, [x1]
   6629c:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   662a0:	add	x10, x10, #0xce2
   662a4:	mov	x19, x0
   662a8:	lsr	x9, x8, #6
   662ac:	adr	x11, 662bc <ZDICT_addEntropyTablesFromBuffer@@Base+0xe598>
   662b0:	ldrb	w12, [x10, x9]
   662b4:	add	x11, x11, x12, lsl #2
   662b8:	br	x11
   662bc:	cmp	x2, #0x5
   662c0:	b.cc	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.lo, b.ul, b.last
   662c4:	ubfx	w9, w8, #4, #2
   662c8:	cmp	w9, #0x2
   662cc:	b.eq	664b0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe78c>  // b.none
   662d0:	cmp	w9, #0x3
   662d4:	b.ne	664e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe7bc>  // b.any
   662d8:	ldrb	w11, [x1, #1]
   662dc:	ldrb	w12, [x1, #3]
   662e0:	ldrb	w13, [x1, #2]
   662e4:	ubfiz	w8, w8, #14, #4
   662e8:	bfi	w8, w11, #6, #8
   662ec:	lsl	w11, w12, #8
   662f0:	mov	x9, xzr
   662f4:	mov	w10, #0x5                   	// #5
   662f8:	orr	w21, w8, w13, lsr #2
   662fc:	bfi	w11, w13, #16, #2
   66300:	mov	w8, #0x4                   	// #4
   66304:	cmp	w21, #0x20, lsl #12
   66308:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   6630c:	b	66504 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe7e0>
   66310:	and	w9, w8, #0x30
   66314:	cmp	w9, #0x10
   66318:	b.ne	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.any
   6631c:	mov	w9, #0x5468                	// #21608
   66320:	ldr	w9, [x19, x9]
   66324:	cbz	w9, 664a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe784>
   66328:	ldrb	w9, [x1, #1]
   6632c:	ldrb	w10, [x1, #2]
   66330:	lsl	w11, w9, #8
   66334:	and	x11, x11, #0x300
   66338:	orr	x3, x11, x10
   6633c:	add	x20, x3, #0x3
   66340:	cmp	x20, x2
   66344:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   66348:	lsl	w8, w8, #6
   6634c:	mov	w10, #0x5500                	// #21760
   66350:	and	x8, x8, #0x3c0
   66354:	mov	w11, #0x140c                	// #5132
   66358:	add	x22, x19, x10
   6635c:	orr	x21, x8, x9, lsr #2
   66360:	add	x2, x1, #0x3
   66364:	add	x4, x19, x11
   66368:	mov	x0, x22
   6636c:	mov	x1, x21
   66370:	bl	63370 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb64c>
   66374:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   66378:	cbnz	w0, 66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>
   6637c:	add	x8, x19, x21
   66380:	str	x22, [x19, #21720]
   66384:	str	x21, [x19, #21752]
   66388:	str	xzr, [x8, #21760]
   6638c:	b	66284 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe560>
   66390:	ubfx	w9, w8, #4, #2
   66394:	cmp	w9, #0x2
   66398:	b.eq	663f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe6d4>  // b.none
   6639c:	cmp	w9, #0x3
   663a0:	b.ne	66404 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe6e0>  // b.any
   663a4:	ldrb	w10, [x1, #1]
   663a8:	ldrb	w11, [x1, #2]
   663ac:	ubfiz	w8, w8, #16, #4
   663b0:	bfi	w8, w10, #8, #8
   663b4:	orr	w21, w8, w11
   663b8:	b	6640c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe6e8>
   663bc:	ubfx	w21, w8, #4, #2
   663c0:	cmp	w21, #0x2
   663c4:	b.eq	6645c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe738>  // b.none
   663c8:	cmp	w21, #0x3
   663cc:	b.ne	66470 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe74c>  // b.any
   663d0:	cmp	x2, #0x4
   663d4:	b.cc	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.lo, b.ul, b.last
   663d8:	ldrb	w9, [x1, #1]
   663dc:	ldrb	w10, [x1, #2]
   663e0:	ubfiz	w8, w8, #16, #4
   663e4:	bfi	w8, w9, #8, #8
   663e8:	orr	w22, w8, w10
   663ec:	cmp	w22, #0x20, lsl #12
   663f0:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   663f4:	b	66480 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe75c>
   663f8:	ldrb	w21, [x1, #1]
   663fc:	bfi	w21, w8, #8, #4
   66400:	b	6640c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe6e8>
   66404:	and	w21, w8, #0x1f
   66408:	mov	w9, #0x1                   	// #1
   6640c:	add	x20, x9, x21
   66410:	add	x8, x20, #0x8
   66414:	cmp	x8, x2
   66418:	b.ls	6644c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe728>  // b.plast
   6641c:	cmp	x20, x2
   66420:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   66424:	mov	w8, #0x5500                	// #21760
   66428:	add	x22, x19, x8
   6642c:	add	x1, x1, x9
   66430:	mov	x0, x22
   66434:	mov	x2, x21
   66438:	bl	4420 <memcpy@plt>
   6643c:	str	x22, [x19, #21720]
   66440:	str	x21, [x19, #21752]
   66444:	str	xzr, [x22, x21]
   66448:	b	66284 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe560>
   6644c:	add	x8, x1, x9
   66450:	str	x8, [x19, #21720]
   66454:	str	x21, [x19, #21752]
   66458:	b	66284 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe560>
   6645c:	ldrb	w22, [x1, #1]
   66460:	bfi	w22, w8, #8, #4
   66464:	cmp	w22, #0x20, lsl #12
   66468:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   6646c:	b	66480 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe75c>
   66470:	and	w22, w8, #0x1f
   66474:	mov	w21, #0x1                   	// #1
   66478:	cmp	w22, #0x20, lsl #12
   6647c:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   66480:	ldrb	w1, [x1, w21, uxtw]
   66484:	mov	w8, #0x5500                	// #21760
   66488:	add	x20, x19, x8
   6648c:	add	x2, x22, #0x8
   66490:	mov	x0, x20
   66494:	bl	46a0 <memset@plt>
   66498:	str	x20, [x19, #21720]
   6649c:	add	w20, w21, #0x1
   664a0:	str	x22, [x19, #21752]
   664a4:	b	66284 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe560>
   664a8:	mov	x20, #0xffffffffffffffe2    	// #-30
   664ac:	b	66284 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe560>
   664b0:	ldrb	w11, [x1, #1]
   664b4:	ldrb	w12, [x1, #2]
   664b8:	ubfiz	w8, w8, #10, #4
   664bc:	mov	x9, xzr
   664c0:	bfi	w8, w11, #2, #8
   664c4:	mov	w10, #0x4                   	// #4
   664c8:	ubfiz	w11, w12, #8, #6
   664cc:	orr	w21, w8, w12, lsr #6
   664d0:	mov	w8, #0x3                   	// #3
   664d4:	cmp	w21, #0x20, lsl #12
   664d8:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   664dc:	b	66504 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe7e0>
   664e0:	ldrb	w11, [x1, #1]
   664e4:	and	x9, x8, #0x10
   664e8:	mov	w10, #0x3                   	// #3
   664ec:	lsr	w21, w11, #2
   664f0:	ubfiz	w11, w11, #8, #2
   664f4:	bfi	w21, w8, #6, #4
   664f8:	mov	w8, #0x2                   	// #2
   664fc:	cmp	w21, #0x20, lsl #12
   66500:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   66504:	ldrb	w8, [x1, x8]
   66508:	orr	x4, x11, x8
   6650c:	add	x20, x10, x4
   66510:	cmp	x20, x2
   66514:	b.hi	66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>  // b.pmore
   66518:	mov	w11, #0x5500                	// #21760
   6651c:	mov	w8, #0x140c                	// #5132
   66520:	add	x22, x19, x11
   66524:	add	x0, x19, x8
   66528:	add	x3, x1, x10
   6652c:	mov	x1, x22
   66530:	mov	x2, x21
   66534:	cbz	x9, 66540 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe81c>
   66538:	bl	628e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xabbc>
   6653c:	b	66544 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe820>
   66540:	bl	63de4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc0c0>
   66544:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   66548:	cbnz	w0, 66280 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe55c>
   6654c:	mov	w8, #0x5468                	// #21608
   66550:	mov	w9, #0x1                   	// #1
   66554:	add	x10, x19, x21
   66558:	str	x22, [x19, #21720]
   6655c:	str	x21, [x19, #21752]
   66560:	str	w9, [x19, x8]
   66564:	str	xzr, [x10, #21760]
   66568:	b	66284 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe560>
   6656c:	sub	sp, sp, #0x150
   66570:	stp	x29, x30, [sp, #240]
   66574:	stp	x28, x27, [sp, #256]
   66578:	stp	x26, x25, [sp, #272]
   6657c:	stp	x24, x23, [sp, #288]
   66580:	stp	x22, x21, [sp, #304]
   66584:	stp	x20, x19, [sp, #320]
   66588:	ldr	x25, [x0, #21720]
   6658c:	add	x29, sp, #0xf0
   66590:	mov	w8, #0x546c                	// #21612
   66594:	add	x24, x0, x8
   66598:	stur	x25, [x29, #-16]
   6659c:	ldr	x8, [x0, #21752]
   665a0:	mov	x21, x4
   665a4:	mov	x22, x3
   665a8:	mov	x23, x0
   665ac:	stp	x8, x2, [sp, #40]
   665b0:	ldr	x8, [x0, #21528]
   665b4:	ldr	w4, [x24]
   665b8:	ldr	x26, [x0, #21544]
   665bc:	add	x19, x0, #0xc08
   665c0:	str	x8, [sp, #32]
   665c4:	ldr	x8, [x0, #21536]
   665c8:	add	x27, x0, #0x804
   665cc:	mov	x28, x1
   665d0:	sub	x0, x29, #0x14
   665d4:	mov	x1, x23
   665d8:	mov	x2, x19
   665dc:	mov	x3, x27
   665e0:	mov	x5, x22
   665e4:	mov	x6, x21
   665e8:	str	x8, [sp, #24]
   665ec:	bl	66808 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeae4>
   665f0:	mov	x20, x0
   665f4:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   665f8:	add	x8, x22, x20
   665fc:	cmp	w0, #0x0
   66600:	csel	x1, x8, x22, eq  // eq = none
   66604:	cbz	w0, 6662c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe908>
   66608:	mov	x0, x20
   6660c:	ldp	x20, x19, [sp, #320]
   66610:	ldp	x22, x21, [sp, #304]
   66614:	ldp	x24, x23, [sp, #288]
   66618:	ldp	x26, x25, [sp, #272]
   6661c:	ldp	x28, x27, [sp, #256]
   66620:	ldp	x29, x30, [sp, #240]
   66624:	add	sp, sp, #0x150
   66628:	ret
   6662c:	ldp	x10, x9, [sp, #40]
   66630:	ldur	w8, [x29, #-20]
   66634:	stp	x27, x19, [sp, #8]
   66638:	str	x26, [sp, #56]
   6663c:	add	x9, x28, x9
   66640:	add	x26, x25, x10
   66644:	mov	x25, x9
   66648:	mov	x27, x28
   6664c:	cbz	w8, 667c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeaa0>
   66650:	mov	w10, #0x1                   	// #1
   66654:	mov	w11, #0x5438                	// #21560
   66658:	mov	x9, xzr
   6665c:	add	x8, x22, x21
   66660:	str	w10, [x24]
   66664:	add	x10, x23, x11
   66668:	add	x11, sp, #0x70
   6666c:	ldr	w12, [x10, x9, lsl #2]
   66670:	add	x13, x11, x9, lsl #3
   66674:	add	x9, x9, #0x1
   66678:	cmp	x9, #0x3
   6667c:	str	x12, [x13, #80]
   66680:	b.ne	6666c <ZDICT_addEntropyTablesFromBuffer@@Base+0xe948>  // b.any
   66684:	sub	x2, x8, x1
   66688:	add	x0, sp, #0x70
   6668c:	add	x21, sp, #0x70
   66690:	bl	65944 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdc20>
   66694:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   66698:	ldp	x24, x22, [sp, #24]
   6669c:	ldr	x19, [sp, #56]
   666a0:	ldr	x27, [sp, #16]
   666a4:	cmp	w0, #0x0
   666a8:	mov	x9, #0xffffffffffffffec    	// #-20
   666ac:	cset	w8, ne  // ne = any
   666b0:	csel	x20, x20, x9, eq  // eq = none
   666b4:	cbz	w0, 666c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe99c>
   666b8:	mov	x27, x28
   666bc:	b	667c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xea9c>
   666c0:	add	x0, x21, #0x20
   666c4:	add	x1, sp, #0x70
   666c8:	mov	x2, x23
   666cc:	bl	65a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd78>
   666d0:	ldr	x2, [sp, #8]
   666d4:	add	x0, x21, #0x30
   666d8:	add	x1, sp, #0x70
   666dc:	bl	65a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd78>
   666e0:	add	x0, x21, #0x40
   666e4:	add	x1, sp, #0x70
   666e8:	mov	x2, x27
   666ec:	bl	65a9c <ZDICT_addEntropyTablesFromBuffer@@Base+0xdd78>
   666f0:	ldur	w21, [x29, #-20]
   666f4:	mov	x27, x28
   666f8:	add	x0, sp, #0x70
   666fc:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   66700:	cmp	w0, #0x2
   66704:	b.hi	66780 <ZDICT_addEntropyTablesFromBuffer@@Base+0xea5c>  // b.pmore
   66708:	cbz	w21, 66780 <ZDICT_addEntropyTablesFromBuffer@@Base+0xea5c>
   6670c:	add	x8, sp, #0x58
   66710:	add	x0, sp, #0x70
   66714:	sub	w21, w21, #0x1
   66718:	bl	66a00 <ZDICT_addEntropyTablesFromBuffer@@Base+0xecdc>
   6671c:	ldur	q0, [sp, #88]
   66720:	ldr	x8, [sp, #104]
   66724:	add	x2, sp, #0x40
   66728:	sub	x3, x29, #0x10
   6672c:	mov	x0, x27
   66730:	mov	x1, x25
   66734:	mov	x4, x26
   66738:	mov	x5, x22
   6673c:	mov	x6, x24
   66740:	mov	x7, x19
   66744:	str	q0, [sp, #64]
   66748:	str	x8, [sp, #80]
   6674c:	bl	66bbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xee98>
   66750:	mov	x19, x0
   66754:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   66758:	cmp	w0, #0x0
   6675c:	add	x8, x27, x19
   66760:	csel	x20, x20, x19, eq  // eq = none
   66764:	ldr	x19, [sp, #56]
   66768:	csel	x27, x8, x27, eq  // eq = none
   6676c:	cbz	w0, 666f8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe9d4>
   66770:	cmp	w0, #0x0
   66774:	cset	w8, ne  // ne = any
   66778:	stur	w21, [x29, #-20]
   6677c:	b	667c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xea9c>
   66780:	stur	w21, [x29, #-20]
   66784:	cbz	w21, 66794 <ZDICT_addEntropyTablesFromBuffer@@Base+0xea70>
   66788:	mov	x20, #0xffffffffffffffec    	// #-20
   6678c:	mov	w8, #0x1                   	// #1
   66790:	b	667c0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xea9c>
   66794:	add	x9, sp, #0x70
   66798:	mov	w10, #0x5438                	// #21560
   6679c:	mov	x8, xzr
   667a0:	add	x9, x9, #0x50
   667a4:	add	x10, x23, x10
   667a8:	ldr	x11, [x9, x8, lsl #3]
   667ac:	str	w11, [x10, x8, lsl #2]
   667b0:	add	x8, x8, #0x1
   667b4:	cmp	x8, #0x3
   667b8:	b.ne	667a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xea84>  // b.any
   667bc:	mov	w8, wzr
   667c0:	tbnz	w8, #0, 66608 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe8e4>
   667c4:	ldur	x1, [x29, #-16]
   667c8:	sub	x8, x25, x27
   667cc:	sub	x19, x26, x1
   667d0:	cmp	x19, x8
   667d4:	b.ls	667e8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeac4>  // b.plast
   667d8:	mov	w8, wzr
   667dc:	mov	x20, #0xffffffffffffffba    	// #-70
   667e0:	cbz	w8, 66608 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe8e4>
   667e4:	b	66800 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeadc>
   667e8:	mov	x0, x27
   667ec:	mov	x2, x19
   667f0:	bl	4420 <memcpy@plt>
   667f4:	add	x27, x27, x19
   667f8:	mov	w8, #0x1                   	// #1
   667fc:	cbz	w8, 66608 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe8e4>
   66800:	sub	x20, x27, x28
   66804:	b	66608 <ZDICT_addEntropyTablesFromBuffer@@Base+0xe8e4>
   66808:	sub	sp, sp, #0x70
   6680c:	stp	x29, x30, [sp, #16]
   66810:	stp	x28, x27, [sp, #32]
   66814:	stp	x26, x25, [sp, #48]
   66818:	stp	x24, x23, [sp, #64]
   6681c:	stp	x22, x21, [sp, #80]
   66820:	stp	x20, x19, [sp, #96]
   66824:	add	x29, sp, #0x10
   66828:	cbz	x6, 668c4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeba0>
   6682c:	mov	x25, x5
   66830:	ldrb	w8, [x25], #1
   66834:	mov	x26, x6
   66838:	mov	x19, x5
   6683c:	mov	w20, w4
   66840:	mov	x23, x3
   66844:	mov	x21, x2
   66848:	mov	x24, x1
   6684c:	mov	x22, x0
   66850:	cbz	w8, 6686c <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb48>
   66854:	sxtb	w9, w8
   66858:	tbnz	w9, #31, 6687c <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb58>
   6685c:	str	w8, [x22]
   66860:	mov	w8, #0x1                   	// #1
   66864:	cbnz	w8, 668b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb90>
   66868:	b	668c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeba4>
   6686c:	str	wzr, [x22]
   66870:	mov	w22, #0x1                   	// #1
   66874:	cbnz	w8, 668b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb90>
   66878:	b	668c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeba4>
   6687c:	cmp	w8, #0xff
   66880:	b.eq	668a0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb7c>  // b.none
   66884:	cmp	x26, #0x2
   66888:	b.lt	668a8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb84>  // b.tstop
   6688c:	ldrb	w9, [x19, #1]
   66890:	add	x25, x19, #0x2
   66894:	bfi	w9, w8, #8, #8
   66898:	sub	w8, w9, #0x8, lsl #12
   6689c:	b	6685c <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb38>
   668a0:	cmp	x26, #0x3
   668a4:	b.ge	669e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xecc0>  // b.tcont
   668a8:	mov	w8, wzr
   668ac:	mov	x22, #0xffffffffffffffb8    	// #-72
   668b0:	cbz	w8, 668c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeba4>
   668b4:	add	x26, x19, x26
   668b8:	add	x8, x25, #0x4
   668bc:	cmp	x8, x26
   668c0:	b.ls	668ec <ZDICT_addEntropyTablesFromBuffer@@Base+0xebc8>  // b.plast
   668c4:	mov	x22, #0xffffffffffffffb8    	// #-72
   668c8:	mov	x0, x22
   668cc:	ldp	x20, x19, [sp, #96]
   668d0:	ldp	x22, x21, [sp, #80]
   668d4:	ldp	x24, x23, [sp, #64]
   668d8:	ldp	x26, x25, [sp, #48]
   668dc:	ldp	x28, x27, [sp, #32]
   668e0:	ldp	x29, x30, [sp, #16]
   668e4:	add	sp, sp, #0x70
   668e8:	ret
   668ec:	ldrb	w27, [x25], #1
   668f0:	adrp	x6, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   668f4:	add	x6, x6, #0xeac
   668f8:	mov	w2, #0x23                  	// #35
   668fc:	lsr	w1, w27, #6
   66900:	sub	x5, x26, x25
   66904:	mov	w3, #0x9                   	// #9
   66908:	mov	w7, #0x6                   	// #6
   6690c:	mov	x0, x24
   66910:	mov	x4, x25
   66914:	str	w20, [sp]
   66918:	bl	66e00 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0dc>
   6691c:	mov	x24, x0
   66920:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   66924:	cmp	w0, #0x0
   66928:	add	x9, x25, x24
   6692c:	mov	x28, #0xffffffffffffffec    	// #-20
   66930:	cset	w8, eq  // eq = none
   66934:	csel	x24, x9, x25, eq  // eq = none
   66938:	csel	x22, x22, x28, eq  // eq = none
   6693c:	cbnz	w0, 669d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xecb4>
   66940:	adrp	x6, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   66944:	ubfx	w1, w27, #4, #2
   66948:	sub	x5, x26, x24
   6694c:	add	x6, x6, #0xef4
   66950:	mov	w2, #0x1c                  	// #28
   66954:	mov	w3, #0x8                   	// #8
   66958:	mov	w7, #0x5                   	// #5
   6695c:	mov	x0, x23
   66960:	mov	x4, x24
   66964:	str	w20, [sp]
   66968:	bl	66e00 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0dc>
   6696c:	mov	x23, x0
   66970:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   66974:	cmp	w0, #0x0
   66978:	add	x9, x24, x23
   6697c:	cset	w8, eq  // eq = none
   66980:	csel	x24, x9, x24, eq  // eq = none
   66984:	csel	x22, x22, x28, eq  // eq = none
   66988:	cbnz	w0, 669d8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xecb4>
   6698c:	adrp	x6, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   66990:	ubfx	w1, w27, #2, #2
   66994:	sub	x5, x26, x24
   66998:	add	x6, x6, #0xf2e
   6699c:	mov	w2, #0x34                  	// #52
   669a0:	mov	w3, #0x9                   	// #9
   669a4:	mov	w7, #0x6                   	// #6
   669a8:	mov	x0, x21
   669ac:	mov	x4, x24
   669b0:	str	w20, [sp]
   669b4:	bl	66e00 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0dc>
   669b8:	mov	x20, x0
   669bc:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   669c0:	cmp	w0, #0x0
   669c4:	add	x9, x24, x20
   669c8:	mov	x10, #0xffffffffffffffec    	// #-20
   669cc:	cset	w8, eq  // eq = none
   669d0:	csel	x24, x9, x24, eq  // eq = none
   669d4:	csel	x22, x22, x10, eq  // eq = none
   669d8:	cbz	w8, 668c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeba4>
   669dc:	sub	x22, x24, x19
   669e0:	b	668c8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xeba4>
   669e4:	mov	x0, x25
   669e8:	add	x27, x19, #0x3
   669ec:	bl	64398 <ZDICT_addEntropyTablesFromBuffer@@Base+0xc674>
   669f0:	mov	w8, #0x7f00                	// #32512
   669f4:	add	w8, w8, w0, uxth
   669f8:	mov	x25, x27
   669fc:	b	6685c <ZDICT_addEntropyTablesFromBuffer@@Base+0xeb38>
   66a00:	sub	sp, sp, #0x70
   66a04:	stp	x20, x19, [sp, #96]
   66a08:	mov	x19, x0
   66a0c:	add	x0, x0, #0x20
   66a10:	stp	x29, x30, [sp, #16]
   66a14:	stp	x28, x27, [sp, #32]
   66a18:	stp	x26, x25, [sp, #48]
   66a1c:	stp	x24, x23, [sp, #64]
   66a20:	stp	x22, x21, [sp, #80]
   66a24:	add	x29, sp, #0x10
   66a28:	mov	x23, x8
   66a2c:	str	x0, [sp, #8]
   66a30:	bl	66ee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1c4>
   66a34:	add	x21, x19, #0x40
   66a38:	mov	w24, w0
   66a3c:	mov	x0, x21
   66a40:	bl	66ee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1c4>
   66a44:	add	x22, x19, #0x30
   66a48:	mov	w26, w0
   66a4c:	mov	x0, x22
   66a50:	bl	66ee8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1c4>
   66a54:	adrp	x20, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   66a58:	ands	w25, w0, #0xff
   66a5c:	and	x27, x24, #0xff
   66a60:	add	x20, x20, #0xf98
   66a64:	and	x28, x26, #0xff
   66a68:	b.eq	66a8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xed68>  // b.none
   66a6c:	adrp	x8, 6c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x142dc>
   66a70:	add	x8, x8, #0x260
   66a74:	ldr	w24, [x8, w25, uxtw #2]
   66a78:	mov	x0, x19
   66a7c:	mov	w1, w25
   66a80:	bl	65c40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf1c>
   66a84:	add	x8, x0, x24
   66a88:	b	66a90 <ZDICT_addEntropyTablesFromBuffer@@Base+0xed6c>
   66a8c:	mov	x8, xzr
   66a90:	ldr	w24, [x20, x27, lsl #2]
   66a94:	adrp	x9, 6c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x142dc>
   66a98:	cmp	w25, #0x1
   66a9c:	add	x9, x9, #0x28
   66aa0:	b.hi	66ae0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xedbc>  // b.pmore
   66aa4:	mov	w10, #0x1                   	// #1
   66aa8:	cmp	x8, #0x2
   66aac:	sub	x10, x10, x8
   66ab0:	ccmp	w27, #0x0, #0x0, cc  // cc = lo, ul, last
   66ab4:	csel	x10, x10, x8, eq  // eq = none
   66ab8:	cbz	x10, 66af0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xedcc>
   66abc:	add	x8, x19, x10, lsl #3
   66ac0:	ldr	x8, [x8, #80]
   66ac4:	cmp	x10, #0x1
   66ac8:	b.eq	66ad4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xedb0>  // b.none
   66acc:	ldr	x10, [x19, #88]
   66ad0:	str	x10, [x19, #96]
   66ad4:	ldr	x10, [x19, #80]
   66ad8:	stp	x8, x10, [x19, #80]
   66adc:	b	66af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xedd0>
   66ae0:	ldp	x11, x10, [x19, #80]
   66ae4:	str	x8, [x19, #80]
   66ae8:	stp	x11, x10, [x19, #88]
   66aec:	b	66af4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xedd0>
   66af0:	ldr	x8, [x19, #80]
   66af4:	ldr	w26, [x9, x28, lsl #2]
   66af8:	adrp	x9, 6c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x142dc>
   66afc:	add	x9, x9, #0x18c
   66b00:	ldr	w20, [x9, x28, lsl #2]
   66b04:	add	w25, w24, w25
   66b08:	cmp	w28, #0x20
   66b0c:	str	x8, [x23, #16]
   66b10:	b.cc	66b24 <ZDICT_addEntropyTablesFromBuffer@@Base+0xee00>  // b.lo, b.ul, b.last
   66b14:	mov	x0, x19
   66b18:	mov	w1, w26
   66b1c:	bl	65c40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf1c>
   66b20:	b	66b28 <ZDICT_addEntropyTablesFromBuffer@@Base+0xee04>
   66b24:	mov	x0, xzr
   66b28:	adrp	x8, 6c000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x142dc>
   66b2c:	add	x8, x8, #0xfc
   66b30:	add	w25, w25, w26
   66b34:	ldr	w26, [x8, x27, lsl #2]
   66b38:	add	x8, x0, x20
   66b3c:	cmp	w27, #0x10
   66b40:	str	x8, [x23, #8]
   66b44:	b.cc	66b58 <ZDICT_addEntropyTablesFromBuffer@@Base+0xee34>  // b.lo, b.ul, b.last
   66b48:	mov	x0, x19
   66b4c:	mov	w1, w24
   66b50:	bl	65c40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf1c>
   66b54:	b	66b5c <ZDICT_addEntropyTablesFromBuffer@@Base+0xee38>
   66b58:	mov	x0, xzr
   66b5c:	ldr	x20, [sp, #8]
   66b60:	add	x8, x0, x26
   66b64:	cmp	w25, #0x20
   66b68:	str	x8, [x23]
   66b6c:	b.cc	66b78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xee54>  // b.lo, b.ul, b.last
   66b70:	mov	x0, x19
   66b74:	bl	65ae4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xddc0>
   66b78:	mov	x0, x20
   66b7c:	mov	x1, x19
   66b80:	bl	66ef8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1d4>
   66b84:	mov	x0, x21
   66b88:	mov	x1, x19
   66b8c:	bl	66ef8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1d4>
   66b90:	mov	x0, x22
   66b94:	mov	x1, x19
   66b98:	bl	66ef8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1d4>
   66b9c:	ldp	x20, x19, [sp, #96]
   66ba0:	ldp	x22, x21, [sp, #80]
   66ba4:	ldp	x24, x23, [sp, #64]
   66ba8:	ldp	x26, x25, [sp, #48]
   66bac:	ldp	x28, x27, [sp, #32]
   66bb0:	ldp	x29, x30, [sp, #16]
   66bb4:	add	sp, sp, #0x70
   66bb8:	ret
   66bbc:	sub	sp, sp, #0x80
   66bc0:	stp	x29, x30, [sp, #32]
   66bc4:	stp	x28, x27, [sp, #48]
   66bc8:	stp	x26, x25, [sp, #64]
   66bcc:	stp	x24, x23, [sp, #80]
   66bd0:	stp	x22, x21, [sp, #96]
   66bd4:	stp	x20, x19, [sp, #112]
   66bd8:	mov	x19, x2
   66bdc:	ldr	x2, [x2]
   66be0:	sub	x10, x1, #0x8
   66be4:	mov	x8, #0xffffffffffffffba    	// #-70
   66be8:	add	x29, sp, #0x20
   66bec:	add	x21, x0, x2
   66bf0:	cmp	x21, x10
   66bf4:	b.hi	66d98 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf074>  // b.pmore
   66bf8:	ldr	x23, [x19, #8]
   66bfc:	mov	x20, x1
   66c00:	add	x9, x23, x2
   66c04:	add	x28, x0, x9
   66c08:	cmp	x28, x1
   66c0c:	b.hi	66d98 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf074>  // b.pmore
   66c10:	ldr	x1, [x3]
   66c14:	mov	x26, x3
   66c18:	str	x10, [sp, #16]
   66c1c:	stur	x9, [x29, #-8]
   66c20:	add	x27, x1, x2
   66c24:	cmp	x27, x4
   66c28:	b.ls	66c34 <ZDICT_addEntropyTablesFromBuffer@@Base+0xef10>  // b.plast
   66c2c:	mov	x8, #0xffffffffffffffec    	// #-20
   66c30:	b	66d98 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf074>
   66c34:	ldr	x8, [x19, #16]
   66c38:	mov	x24, x7
   66c3c:	mov	x25, x6
   66c40:	mov	x22, x5
   66c44:	sub	x8, x21, x8
   66c48:	str	x8, [sp, #8]
   66c4c:	bl	66f38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf214>
   66c50:	str	x27, [x26]
   66c54:	ldr	x8, [x19, #16]
   66c58:	sub	x9, x21, x22
   66c5c:	cmp	x8, x9
   66c60:	b.ls	66cc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xefa0>  // b.plast
   66c64:	sub	x9, x21, x25
   66c68:	cmp	x8, x9
   66c6c:	b.hi	66c2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xef08>  // b.pmore
   66c70:	ldr	x26, [sp, #8]
   66c74:	ldr	x2, [x19, #8]
   66c78:	sub	x25, x26, x22
   66c7c:	add	x1, x24, x25
   66c80:	add	x8, x1, x2
   66c84:	cmp	x8, x24
   66c88:	b.ls	66dbc <ZDICT_addEntropyTablesFromBuffer@@Base+0xf098>  // b.plast
   66c8c:	neg	x2, x25
   66c90:	mov	x0, x21
   66c94:	bl	4450 <memmove@plt>
   66c98:	ldr	x8, [x19, #8]
   66c9c:	sub	x21, x21, x25
   66ca0:	add	x8, x8, x25
   66ca4:	ldr	x25, [sp, #16]
   66ca8:	str	x8, [x19, #8]
   66cac:	cmp	x21, x25
   66cb0:	b.hi	66dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0a8>  // b.pmore
   66cb4:	cmp	x8, #0x2
   66cb8:	b.ls	66dcc <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0a8>  // b.plast
   66cbc:	mov	w8, #0x1                   	// #1
   66cc0:	b	66df4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0d0>
   66cc4:	ldur	x24, [x29, #-8]
   66cc8:	ldp	x22, x25, [sp, #8]
   66ccc:	ldr	x8, [x19, #16]
   66cd0:	cmp	x8, #0x7
   66cd4:	b.hi	66d2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf008>  // b.pmore
   66cd8:	ldrb	w9, [x22]
   66cdc:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   66ce0:	add	x10, x10, #0xc88
   66ce4:	add	x0, x21, #0x4
   66ce8:	strb	w9, [x21]
   66cec:	ldrb	w9, [x22, #1]
   66cf0:	strb	w9, [x21, #1]
   66cf4:	ldrb	w9, [x22, #2]
   66cf8:	strb	w9, [x21, #2]
   66cfc:	ldrb	w9, [x22, #3]
   66d00:	strb	w9, [x21, #3]
   66d04:	ldr	x9, [x19, #16]
   66d08:	ldr	w9, [x10, x9, lsl #2]
   66d0c:	adrp	x10, 6b000 <ZDICT_addEntropyTablesFromBuffer@@Base+0x132dc>
   66d10:	add	x10, x10, #0xca8
   66d14:	ldrsw	x23, [x10, x8, lsl #2]
   66d18:	add	x22, x22, x9
   66d1c:	mov	x1, x22
   66d20:	bl	66f80 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf25c>
   66d24:	sub	x22, x22, x23
   66d28:	b	66d38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf014>
   66d2c:	mov	x0, x21
   66d30:	mov	x1, x22
   66d34:	bl	66f8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf268>
   66d38:	sub	x8, x20, #0xd
   66d3c:	add	x0, x21, #0x8
   66d40:	cmp	x28, x8
   66d44:	add	x20, x22, #0x8
   66d48:	b.ls	66d84 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf060>  // b.plast
   66d4c:	cmp	x0, x25
   66d50:	b.cs	66d78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf054>  // b.hs, b.nlast
   66d54:	sub	x19, x25, x0
   66d58:	mov	x1, x20
   66d5c:	mov	x2, x19
   66d60:	bl	66f38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf214>
   66d64:	add	x20, x20, x19
   66d68:	mov	x0, x25
   66d6c:	b	66d78 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf054>
   66d70:	ldrb	w8, [x20], #1
   66d74:	strb	w8, [x0], #1
   66d78:	cmp	x0, x28
   66d7c:	b.cc	66d70 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf04c>  // b.lo, b.ul, b.last
   66d80:	b	66d94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf070>
   66d84:	ldr	x8, [x19, #8]
   66d88:	mov	x1, x20
   66d8c:	sub	x2, x8, #0x8
   66d90:	bl	66f38 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf214>
   66d94:	mov	x8, x24
   66d98:	ldp	x20, x19, [sp, #112]
   66d9c:	ldp	x22, x21, [sp, #96]
   66da0:	ldp	x24, x23, [sp, #80]
   66da4:	ldp	x26, x25, [sp, #64]
   66da8:	ldp	x28, x27, [sp, #48]
   66dac:	ldp	x29, x30, [sp, #32]
   66db0:	mov	x0, x8
   66db4:	add	sp, sp, #0x80
   66db8:	ret
   66dbc:	mov	x0, x21
   66dc0:	bl	4450 <memmove@plt>
   66dc4:	ldur	x8, [x29, #-8]
   66dc8:	b	66d98 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf074>
   66dcc:	cmp	x21, x28
   66dd0:	b.cs	66df0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0cc>  // b.hs, b.nlast
   66dd4:	add	x8, x26, x23
   66dd8:	sub	x8, x8, x22
   66ddc:	ldrb	w9, [x22], #1
   66de0:	subs	x8, x8, #0x1
   66de4:	strb	w9, [x21], #1
   66de8:	b.ne	66ddc <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0b8>  // b.any
   66dec:	b	66df4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf0d0>
   66df0:	mov	w8, wzr
   66df4:	ldur	x24, [x29, #-8]
   66df8:	cbnz	w8, 66ccc <ZDICT_addEntropyTablesFromBuffer@@Base+0xefa8>
   66dfc:	b	66d94 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf070>
   66e00:	sub	sp, sp, #0xa0
   66e04:	stp	x29, x30, [sp, #112]
   66e08:	stp	x20, x19, [sp, #144]
   66e0c:	add	x29, sp, #0x70
   66e10:	mov	x20, x0
   66e14:	str	x21, [sp, #128]
   66e18:	str	w2, [x29, #28]
   66e1c:	cbz	w1, 66e50 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf12c>
   66e20:	cmp	w1, #0x2
   66e24:	b.eq	66e68 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf144>  // b.none
   66e28:	cmp	w1, #0x1
   66e2c:	b.ne	66e7c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf158>  // b.any
   66e30:	cbz	x5, 66eb8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf194>
   66e34:	ldrb	w1, [x4]
   66e38:	cmp	w1, w2
   66e3c:	b.hi	66eb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf18c>  // b.pmore
   66e40:	mov	x0, x20
   66e44:	bl	62368 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa644>
   66e48:	mov	w19, #0x1                   	// #1
   66e4c:	b	66ed0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1ac>
   66e50:	mov	x0, x20
   66e54:	mov	x1, x6
   66e58:	mov	w3, w7
   66e5c:	bl	621b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa490>
   66e60:	mov	x19, xzr
   66e64:	b	66ed0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1ac>
   66e68:	ldr	w8, [x29, #48]
   66e6c:	cmp	w8, #0x0
   66e70:	mov	x8, #0xffffffffffffffec    	// #-20
   66e74:	csel	x19, x8, xzr, eq  // eq = none
   66e78:	b	66ed0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1ac>
   66e7c:	mov	w21, w3
   66e80:	add	x0, sp, #0x4
   66e84:	add	x1, x29, #0x1c
   66e88:	add	x2, x29, #0x18
   66e8c:	mov	x3, x4
   66e90:	mov	x4, x5
   66e94:	bl	61b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9df8>
   66e98:	mov	x19, x0
   66e9c:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   66ea0:	cbnz	w0, 66eb0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf18c>
   66ea4:	ldr	w3, [x29, #24]
   66ea8:	cmp	w3, w21
   66eac:	b.ls	66ec0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf19c>  // b.plast
   66eb0:	mov	x19, #0xffffffffffffffec    	// #-20
   66eb4:	b	66ed0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1ac>
   66eb8:	mov	x19, #0xffffffffffffffb8    	// #-72
   66ebc:	b	66ed0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf1ac>
   66ec0:	ldr	w2, [x29, #28]
   66ec4:	add	x1, sp, #0x4
   66ec8:	mov	x0, x20
   66ecc:	bl	621b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa490>
   66ed0:	mov	x0, x19
   66ed4:	ldp	x20, x19, [sp, #144]
   66ed8:	ldr	x21, [sp, #128]
   66edc:	ldp	x29, x30, [sp, #112]
   66ee0:	add	sp, sp, #0xa0
   66ee4:	ret
   66ee8:	ldp	x9, x8, [x0]
   66eec:	add	x8, x8, x9, lsl #2
   66ef0:	ldrb	w0, [x8, #2]
   66ef4:	ret
   66ef8:	stp	x29, x30, [sp, #-32]!
   66efc:	stp	x20, x19, [sp, #16]
   66f00:	ldp	x9, x8, [x0]
   66f04:	mov	x19, x0
   66f08:	mov	x0, x1
   66f0c:	mov	x29, sp
   66f10:	add	x8, x8, x9, lsl #2
   66f14:	ldrh	w20, [x8]
   66f18:	ldrb	w8, [x8, #3]
   66f1c:	mov	w1, w8
   66f20:	bl	65c40 <ZDICT_addEntropyTablesFromBuffer@@Base+0xdf1c>
   66f24:	add	x8, x0, x20
   66f28:	str	x8, [x19]
   66f2c:	ldp	x20, x19, [sp, #16]
   66f30:	ldp	x29, x30, [sp], #32
   66f34:	ret
   66f38:	stp	x29, x30, [sp, #-48]!
   66f3c:	str	x21, [sp, #16]
   66f40:	stp	x20, x19, [sp, #32]
   66f44:	mov	x19, x1
   66f48:	mov	x20, x0
   66f4c:	add	x21, x0, x2
   66f50:	mov	x29, sp
   66f54:	mov	x0, x20
   66f58:	mov	x1, x19
   66f5c:	bl	66f8c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf268>
   66f60:	add	x20, x20, #0x8
   66f64:	cmp	x20, x21
   66f68:	add	x19, x19, #0x8
   66f6c:	b.cc	66f54 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf230>  // b.lo, b.ul, b.last
   66f70:	ldp	x20, x19, [sp, #32]
   66f74:	ldr	x21, [sp, #16]
   66f78:	ldp	x29, x30, [sp], #48
   66f7c:	ret
   66f80:	ldr	w8, [x1]
   66f84:	str	w8, [x0]
   66f88:	ret
   66f8c:	ldr	x8, [x1]
   66f90:	str	x8, [x0]
   66f94:	ret
   66f98:	stp	x29, x30, [sp, #-32]!
   66f9c:	cmp	x3, x1
   66fa0:	str	x19, [sp, #16]
   66fa4:	mov	x29, sp
   66fa8:	b.ls	66fb4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf290>  // b.plast
   66fac:	mov	x19, #0xffffffffffffffba    	// #-70
   66fb0:	b	66fc4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf2a0>
   66fb4:	mov	w1, w2
   66fb8:	mov	x2, x3
   66fbc:	mov	x19, x3
   66fc0:	bl	46a0 <memset@plt>
   66fc4:	mov	x0, x19
   66fc8:	ldr	x19, [sp, #16]
   66fcc:	ldp	x29, x30, [sp], #32
   66fd0:	ret
   66fd4:	ldr	x8, [x0, #21520]
   66fd8:	ldr	x9, [x0, #21528]
   66fdc:	add	x10, x1, x2
   66fe0:	str	x1, [x0, #21528]
   66fe4:	str	x8, [x0, #21544]
   66fe8:	sub	x8, x9, x8
   66fec:	add	x8, x1, x8
   66ff0:	str	x8, [x0, #21536]
   66ff4:	str	x10, [x0, #21520]
   66ff8:	ret
   66ffc:	sub	sp, sp, #0xc0
   67000:	mov	w8, #0x140c                	// #5132
   67004:	stp	x22, x21, [sp, #160]
   67008:	mov	x22, x0
   6700c:	add	x0, x0, x8
   67010:	stp	x29, x30, [sp, #128]
   67014:	stp	x24, x23, [sp, #144]
   67018:	stp	x20, x19, [sp, #176]
   6701c:	add	x29, sp, #0x80
   67020:	mov	x20, x2
   67024:	mov	x19, x1
   67028:	bl	62fa8 <ZDICT_addEntropyTablesFromBuffer@@Base+0xb284>
   6702c:	mov	x21, x0
   67030:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   67034:	add	x8, x19, x21
   67038:	cmp	w0, #0x0
   6703c:	csel	x21, x8, x19, eq  // eq = none
   67040:	cbz	w0, 67060 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf33c>
   67044:	mov	x0, #0xffffffffffffffe2    	// #-30
   67048:	ldp	x20, x19, [sp, #176]
   6704c:	ldp	x22, x21, [sp, #160]
   67050:	ldp	x24, x23, [sp, #144]
   67054:	ldp	x29, x30, [sp, #128]
   67058:	add	sp, sp, #0xc0
   6705c:	ret
   67060:	add	x24, x19, x20
   67064:	mov	w8, #0x1c                  	// #28
   67068:	sub	x4, x24, x21
   6706c:	add	x0, sp, #0xc
   67070:	sub	x1, x29, #0x4
   67074:	sub	x2, x29, #0x8
   67078:	mov	x3, x21
   6707c:	stur	w8, [x29, #-4]
   67080:	bl	61b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9df8>
   67084:	mov	x23, x0
   67088:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6708c:	cbnz	w0, 6709c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf378>
   67090:	ldur	w3, [x29, #-8]
   67094:	cmp	w3, #0x8
   67098:	b.ls	671b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf490>  // b.plast
   6709c:	mov	w8, wzr
   670a0:	cbz	w8, 67044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf320>
   670a4:	mov	w8, #0x34                  	// #52
   670a8:	sub	x4, x24, x21
   670ac:	add	x0, sp, #0xc
   670b0:	sub	x1, x29, #0x4
   670b4:	sub	x2, x29, #0x8
   670b8:	mov	x3, x21
   670bc:	stur	w8, [x29, #-4]
   670c0:	bl	61b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9df8>
   670c4:	mov	x23, x0
   670c8:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   670cc:	cbnz	w0, 670dc <ZDICT_addEntropyTablesFromBuffer@@Base+0xf3b8>
   670d0:	ldur	w3, [x29, #-8]
   670d4:	cmp	w3, #0x9
   670d8:	b.ls	671e0 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf4bc>  // b.plast
   670dc:	mov	w8, wzr
   670e0:	cbz	w8, 67044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf320>
   670e4:	mov	w8, #0x23                  	// #35
   670e8:	sub	x4, x24, x21
   670ec:	add	x0, sp, #0xc
   670f0:	sub	x1, x29, #0x4
   670f4:	sub	x2, x29, #0x8
   670f8:	mov	x3, x21
   670fc:	stur	w8, [x29, #-4]
   67100:	bl	61b1c <ZDICT_addEntropyTablesFromBuffer@@Base+0x9df8>
   67104:	mov	x23, x0
   67108:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   6710c:	cbnz	w0, 6711c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf3f8>
   67110:	ldur	w3, [x29, #-8]
   67114:	cmp	w3, #0x9
   67118:	b.ls	6720c <ZDICT_addEntropyTablesFromBuffer@@Base+0xf4e8>  // b.plast
   6711c:	mov	w8, wzr
   67120:	cbz	w8, 67044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf320>
   67124:	add	x23, x21, #0xc
   67128:	cmp	x23, x24
   6712c:	b.hi	67044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf320>  // b.pmore
   67130:	mov	w8, #0x5438                	// #21560
   67134:	mov	x0, x21
   67138:	add	x22, x22, x8
   6713c:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   67140:	mov	w8, w0
   67144:	str	w0, [x22]
   67148:	mov	x0, #0xffffffffffffffe2    	// #-30
   6714c:	cbz	w8, 67048 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf324>
   67150:	mov	w8, w8
   67154:	cmp	x8, x20
   67158:	b.cs	67048 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf324>  // b.hs, b.nlast
   6715c:	add	x0, x21, #0x4
   67160:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   67164:	mov	w8, w0
   67168:	str	w0, [x22, #4]
   6716c:	mov	x0, #0xffffffffffffffe2    	// #-30
   67170:	cbz	w8, 67048 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf324>
   67174:	mov	w8, w8
   67178:	cmp	x8, x20
   6717c:	b.cs	67048 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf324>  // b.hs, b.nlast
   67180:	add	x0, x21, #0x8
   67184:	bl	61e2c <ZDICT_addEntropyTablesFromBuffer@@Base+0xa108>
   67188:	mov	w8, w0
   6718c:	str	w0, [x22, #8]
   67190:	mov	x0, #0xffffffffffffffe2    	// #-30
   67194:	cbz	w8, 67048 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf324>
   67198:	mov	w8, w8
   6719c:	cmp	x8, x20
   671a0:	b.cs	67048 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf324>  // b.hs, b.nlast
   671a4:	mov	x8, #0x100000001           	// #4294967297
   671a8:	sub	x0, x23, x19
   671ac:	str	x8, [x22, #48]
   671b0:	b	67048 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf324>
   671b4:	ldur	w2, [x29, #-4]
   671b8:	add	x0, x22, #0x804
   671bc:	add	x1, sp, #0xc
   671c0:	bl	621b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa490>
   671c4:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   671c8:	cmp	w0, #0x0
   671cc:	add	x9, x21, x23
   671d0:	cset	w8, eq  // eq = none
   671d4:	csel	x21, x9, x21, eq  // eq = none
   671d8:	cbz	w8, 67044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf320>
   671dc:	b	670a4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf380>
   671e0:	ldur	w2, [x29, #-4]
   671e4:	add	x0, x22, #0xc08
   671e8:	add	x1, sp, #0xc
   671ec:	bl	621b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa490>
   671f0:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   671f4:	cmp	w0, #0x0
   671f8:	add	x9, x21, x23
   671fc:	cset	w8, eq  // eq = none
   67200:	csel	x21, x9, x21, eq  // eq = none
   67204:	cbz	w8, 67044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf320>
   67208:	b	670e4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf3c0>
   6720c:	ldur	w2, [x29, #-4]
   67210:	add	x1, sp, #0xc
   67214:	mov	x0, x22
   67218:	bl	621b4 <ZDICT_addEntropyTablesFromBuffer@@Base+0xa490>
   6721c:	bl	61abc <ZDICT_addEntropyTablesFromBuffer@@Base+0x9d98>
   67220:	cmp	w0, #0x0
   67224:	add	x9, x21, x23
   67228:	cset	w8, eq  // eq = none
   6722c:	csel	x21, x9, x21, eq  // eq = none
   67230:	cbz	w8, 67044 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf320>
   67234:	b	67124 <ZDICT_addEntropyTablesFromBuffer@@Base+0xf400>

Disassembly of section .fini:

0000000000067238 <.fini>:
   67238:	stp	x29, x30, [sp, #-16]!
   6723c:	mov	x29, sp
   67240:	ldp	x29, x30, [sp], #16
   67244:	ret
