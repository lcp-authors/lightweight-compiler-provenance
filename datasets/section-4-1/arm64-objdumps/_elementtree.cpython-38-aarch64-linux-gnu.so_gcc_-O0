
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_elementtree.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003be8 <.init>:
    3be8:	stp	x29, x30, [sp, #-16]!
    3bec:	mov	x29, sp
    3bf0:	bl	4250 <PySequence_Fast@plt+0x10>
    3bf4:	ldp	x29, x30, [sp], #16
    3bf8:	ret

Disassembly of section .plt:

0000000000003c00 <memcpy@plt-0x20>:
    3c00:	stp	x16, x30, [sp, #-16]!
    3c04:	adrp	x16, 22000 <PyInit__elementtree@@Base+0x12b3c>
    3c08:	ldr	x17, [x16, #4088]
    3c0c:	add	x16, x16, #0xff8
    3c10:	br	x17
    3c14:	nop
    3c18:	nop
    3c1c:	nop

0000000000003c20 <memcpy@plt>:
    3c20:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c24:	ldr	x17, [x16]
    3c28:	add	x16, x16, #0x0
    3c2c:	br	x17

0000000000003c30 <PyUnicode_FromFormat@plt>:
    3c30:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c34:	ldr	x17, [x16, #8]
    3c38:	add	x16, x16, #0x8
    3c3c:	br	x17

0000000000003c40 <memmove@plt>:
    3c40:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c44:	ldr	x17, [x16, #16]
    3c48:	add	x16, x16, #0x10
    3c4c:	br	x17

0000000000003c50 <PyList_New@plt>:
    3c50:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c54:	ldr	x17, [x16, #24]
    3c58:	add	x16, x16, #0x18
    3c5c:	br	x17

0000000000003c60 <_PyUnicode_Ready@plt>:
    3c60:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c64:	ldr	x17, [x16, #32]
    3c68:	add	x16, x16, #0x20
    3c6c:	br	x17

0000000000003c70 <strlen@plt>:
    3c70:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c74:	ldr	x17, [x16, #40]
    3c78:	add	x16, x16, #0x28
    3c7c:	br	x17

0000000000003c80 <PyDict_Items@plt>:
    3c80:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c84:	ldr	x17, [x16, #48]
    3c88:	add	x16, x16, #0x30
    3c8c:	br	x17

0000000000003c90 <_PyObject_LookupAttrId@plt>:
    3c90:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3c94:	ldr	x17, [x16, #56]
    3c98:	add	x16, x16, #0x38
    3c9c:	br	x17

0000000000003ca0 <_PyBytes_Resize@plt>:
    3ca0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ca4:	ldr	x17, [x16, #64]
    3ca8:	add	x16, x16, #0x40
    3cac:	br	x17

0000000000003cb0 <PyObject_ClearWeakRefs@plt>:
    3cb0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3cb4:	ldr	x17, [x16, #72]
    3cb8:	add	x16, x16, #0x48
    3cbc:	br	x17

0000000000003cc0 <PyNumber_AsSsize_t@plt>:
    3cc0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3cc4:	ldr	x17, [x16, #80]
    3cc8:	add	x16, x16, #0x50
    3ccc:	br	x17

0000000000003cd0 <PyMem_Free@plt>:
    3cd0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3cd4:	ldr	x17, [x16, #88]
    3cd8:	add	x16, x16, #0x58
    3cdc:	br	x17

0000000000003ce0 <PyBuffer_Release@plt>:
    3ce0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x17, [x16, #96]
    3ce8:	add	x16, x16, #0x60
    3cec:	br	x17

0000000000003cf0 <PyNumber_Add@plt>:
    3cf0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x17, [x16, #104]
    3cf8:	add	x16, x16, #0x68
    3cfc:	br	x17

0000000000003d00 <PyObject_GetAttrString@plt>:
    3d00:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d04:	ldr	x17, [x16, #112]
    3d08:	add	x16, x16, #0x70
    3d0c:	br	x17

0000000000003d10 <__cxa_finalize@plt>:
    3d10:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d14:	ldr	x17, [x16, #120]
    3d18:	add	x16, x16, #0x78
    3d1c:	br	x17

0000000000003d20 <PyUnicode_Join@plt>:
    3d20:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d24:	ldr	x17, [x16, #128]
    3d28:	add	x16, x16, #0x80
    3d2c:	br	x17

0000000000003d30 <PyList_SetSlice@plt>:
    3d30:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d34:	ldr	x17, [x16, #136]
    3d38:	add	x16, x16, #0x88
    3d3c:	br	x17

0000000000003d40 <PyBytes_FromStringAndSize@plt>:
    3d40:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d44:	ldr	x17, [x16, #144]
    3d48:	add	x16, x16, #0x90
    3d4c:	br	x17

0000000000003d50 <PyObject_SetAttrString@plt>:
    3d50:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d54:	ldr	x17, [x16, #152]
    3d58:	add	x16, x16, #0x98
    3d5c:	br	x17

0000000000003d60 <PyErr_WarnEx@plt>:
    3d60:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d64:	ldr	x17, [x16, #160]
    3d68:	add	x16, x16, #0xa0
    3d6c:	br	x17

0000000000003d70 <_Py_Dealloc@plt>:
    3d70:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d74:	ldr	x17, [x16, #168]
    3d78:	add	x16, x16, #0xa8
    3d7c:	br	x17

0000000000003d80 <PyErr_NoMemory@plt>:
    3d80:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d84:	ldr	x17, [x16, #176]
    3d88:	add	x16, x16, #0xb0
    3d8c:	br	x17

0000000000003d90 <PyErr_SetObject@plt>:
    3d90:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3d94:	ldr	x17, [x16, #184]
    3d98:	add	x16, x16, #0xb8
    3d9c:	br	x17

0000000000003da0 <PyObject_GC_Del@plt>:
    3da0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3da4:	ldr	x17, [x16, #192]
    3da8:	add	x16, x16, #0xc0
    3dac:	br	x17

0000000000003db0 <_PyObject_CallFunction_SizeT@plt>:
    3db0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3db4:	ldr	x17, [x16, #200]
    3db8:	add	x16, x16, #0xc8
    3dbc:	br	x17

0000000000003dc0 <PyObject_GC_Track@plt>:
    3dc0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3dc4:	ldr	x17, [x16, #208]
    3dc8:	add	x16, x16, #0xd0
    3dcc:	br	x17

0000000000003dd0 <_PyArg_UnpackKeywords@plt>:
    3dd0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3dd4:	ldr	x17, [x16, #216]
    3dd8:	add	x16, x16, #0xd8
    3ddc:	br	x17

0000000000003de0 <PyErr_SetString@plt>:
    3de0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3de4:	ldr	x17, [x16, #224]
    3de8:	add	x16, x16, #0xe0
    3dec:	br	x17

0000000000003df0 <_PyObject_GC_New@plt>:
    3df0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3df4:	ldr	x17, [x16, #232]
    3df8:	add	x16, x16, #0xe8
    3dfc:	br	x17

0000000000003e00 <PyObject_Malloc@plt>:
    3e00:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e04:	ldr	x17, [x16, #240]
    3e08:	add	x16, x16, #0xf0
    3e0c:	br	x17

0000000000003e10 <PyModule_GetState@plt>:
    3e10:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e14:	ldr	x17, [x16, #248]
    3e18:	add	x16, x16, #0xf8
    3e1c:	br	x17

0000000000003e20 <PyUnicode_AsEncodedString@plt>:
    3e20:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e24:	ldr	x17, [x16, #256]
    3e28:	add	x16, x16, #0x100
    3e2c:	br	x17

0000000000003e30 <PyMem_Realloc@plt>:
    3e30:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e34:	ldr	x17, [x16, #264]
    3e38:	add	x16, x16, #0x108
    3e3c:	br	x17

0000000000003e40 <PyErr_SetNone@plt>:
    3e40:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e44:	ldr	x17, [x16, #272]
    3e48:	add	x16, x16, #0x110
    3e4c:	br	x17

0000000000003e50 <PyErr_ExceptionMatches@plt>:
    3e50:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e54:	ldr	x17, [x16, #280]
    3e58:	add	x16, x16, #0x118
    3e5c:	br	x17

0000000000003e60 <PyObject_Free@plt>:
    3e60:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e64:	ldr	x17, [x16, #288]
    3e68:	add	x16, x16, #0x120
    3e6c:	br	x17

0000000000003e70 <PyLong_FromSsize_t@plt>:
    3e70:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e74:	ldr	x17, [x16, #296]
    3e78:	add	x16, x16, #0x128
    3e7c:	br	x17

0000000000003e80 <PyCapsule_Import@plt>:
    3e80:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e84:	ldr	x17, [x16, #304]
    3e88:	add	x16, x16, #0x130
    3e8c:	br	x17

0000000000003e90 <PyType_Ready@plt>:
    3e90:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3e94:	ldr	x17, [x16, #312]
    3e98:	add	x16, x16, #0x138
    3e9c:	br	x17

0000000000003ea0 <PyLong_FromLong@plt>:
    3ea0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ea4:	ldr	x17, [x16, #320]
    3ea8:	add	x16, x16, #0x140
    3eac:	br	x17

0000000000003eb0 <PyLong_AsSsize_t@plt>:
    3eb0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3eb4:	ldr	x17, [x16, #328]
    3eb8:	add	x16, x16, #0x148
    3ebc:	br	x17

0000000000003ec0 <PyObject_RichCompareBool@plt>:
    3ec0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ec4:	ldr	x17, [x16, #336]
    3ec8:	add	x16, x16, #0x150
    3ecc:	br	x17

0000000000003ed0 <_PyArg_BadArgument@plt>:
    3ed0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ed4:	ldr	x17, [x16, #344]
    3ed8:	add	x16, x16, #0x158
    3edc:	br	x17

0000000000003ee0 <PyErr_NewException@plt>:
    3ee0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ee4:	ldr	x17, [x16, #352]
    3ee8:	add	x16, x16, #0x160
    3eec:	br	x17

0000000000003ef0 <PyErr_Clear@plt>:
    3ef0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ef4:	ldr	x17, [x16, #360]
    3ef8:	add	x16, x16, #0x168
    3efc:	br	x17

0000000000003f00 <PyList_Append@plt>:
    3f00:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f04:	ldr	x17, [x16, #368]
    3f08:	add	x16, x16, #0x170
    3f0c:	br	x17

0000000000003f10 <PySlice_AdjustIndices@plt>:
    3f10:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f14:	ldr	x17, [x16, #376]
    3f18:	add	x16, x16, #0x178
    3f1c:	br	x17

0000000000003f20 <PyDict_Update@plt>:
    3f20:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f24:	ldr	x17, [x16, #384]
    3f28:	add	x16, x16, #0x180
    3f2c:	br	x17

0000000000003f30 <__gmon_start__@plt>:
    3f30:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f34:	ldr	x17, [x16, #392]
    3f38:	add	x16, x16, #0x188
    3f3c:	br	x17

0000000000003f40 <PyTuple_New@plt>:
    3f40:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x17, [x16, #400]
    3f48:	add	x16, x16, #0x190
    3f4c:	br	x17

0000000000003f50 <PyThreadState_Get@plt>:
    3f50:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f54:	ldr	x17, [x16, #408]
    3f58:	add	x16, x16, #0x198
    3f5c:	br	x17

0000000000003f60 <_PyArg_CheckPositional@plt>:
    3f60:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f64:	ldr	x17, [x16, #416]
    3f68:	add	x16, x16, #0x1a0
    3f6c:	br	x17

0000000000003f70 <PyDict_DelItem@plt>:
    3f70:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f74:	ldr	x17, [x16, #424]
    3f78:	add	x16, x16, #0x1a8
    3f7c:	br	x17

0000000000003f80 <PyErr_Occurred@plt>:
    3f80:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f84:	ldr	x17, [x16, #432]
    3f88:	add	x16, x16, #0x1b0
    3f8c:	br	x17

0000000000003f90 <PyModule_Create2@plt>:
    3f90:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3f94:	ldr	x17, [x16, #440]
    3f98:	add	x16, x16, #0x1b8
    3f9c:	br	x17

0000000000003fa0 <PyImport_ImportModule@plt>:
    3fa0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16, #448]
    3fa8:	add	x16, x16, #0x1c0
    3fac:	br	x17

0000000000003fb0 <PyList_SetItem@plt>:
    3fb0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #456]
    3fb8:	add	x16, x16, #0x1c8
    3fbc:	br	x17

0000000000003fc0 <PyState_FindModule@plt>:
    3fc0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #464]
    3fc8:	add	x16, x16, #0x1d0
    3fcc:	br	x17

0000000000003fd0 <PyObject_CallFunctionObjArgs@plt>:
    3fd0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #472]
    3fd8:	add	x16, x16, #0x1d8
    3fdc:	br	x17

0000000000003fe0 <Py_ReprEnter@plt>:
    3fe0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #480]
    3fe8:	add	x16, x16, #0x1e0
    3fec:	br	x17

0000000000003ff0 <strcmp@plt>:
    3ff0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #488]
    3ff8:	add	x16, x16, #0x1e8
    3ffc:	br	x17

0000000000004000 <_PyObject_SetAttrId@plt>:
    4000:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #496]
    4008:	add	x16, x16, #0x1f0
    400c:	br	x17

0000000000004010 <_PyArg_ParseTuple_SizeT@plt>:
    4010:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #504]
    4018:	add	x16, x16, #0x1f8
    401c:	br	x17

0000000000004020 <_Py_CheckFunctionResult@plt>:
    4020:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #512]
    4028:	add	x16, x16, #0x200
    402c:	br	x17

0000000000004030 <PyUnicode_DecodeUTF8@plt>:
    4030:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #520]
    4038:	add	x16, x16, #0x208
    403c:	br	x17

0000000000004040 <_PyTrash_thread_deposit_object@plt>:
    4040:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #528]
    4048:	add	x16, x16, #0x210
    404c:	br	x17

0000000000004050 <PyObject_IsTrue@plt>:
    4050:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #536]
    4058:	add	x16, x16, #0x218
    405c:	br	x17

0000000000004060 <PyObject_Realloc@plt>:
    4060:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #544]
    4068:	add	x16, x16, #0x220
    406c:	br	x17

0000000000004070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    4070:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #552]
    4078:	add	x16, x16, #0x228
    407c:	br	x17

0000000000004080 <PyDict_New@plt>:
    4080:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #560]
    4088:	add	x16, x16, #0x230
    408c:	br	x17

0000000000004090 <PyCallable_Check@plt>:
    4090:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #568]
    4098:	add	x16, x16, #0x238
    409c:	br	x17

00000000000040a0 <PyObject_GetBuffer@plt>:
    40a0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #576]
    40a8:	add	x16, x16, #0x240
    40ac:	br	x17

00000000000040b0 <PyDict_Next@plt>:
    40b0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #584]
    40b8:	add	x16, x16, #0x248
    40bc:	br	x17

00000000000040c0 <PyUnicode_AsUTF8@plt>:
    40c0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #592]
    40c8:	add	x16, x16, #0x250
    40cc:	br	x17

00000000000040d0 <strncat@plt>:
    40d0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #600]
    40d8:	add	x16, x16, #0x258
    40dc:	br	x17

00000000000040e0 <PyDict_Keys@plt>:
    40e0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #608]
    40e8:	add	x16, x16, #0x260
    40ec:	br	x17

00000000000040f0 <_PyObject_GetAttrId@plt>:
    40f0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #616]
    40f8:	add	x16, x16, #0x268
    40fc:	br	x17

0000000000004100 <PyUnicode_FromString@plt>:
    4100:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #624]
    4108:	add	x16, x16, #0x270
    410c:	br	x17

0000000000004110 <_PyObject_CallMethodIdObjArgs@plt>:
    4110:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #632]
    4118:	add	x16, x16, #0x278
    411c:	br	x17

0000000000004120 <PyModule_AddObject@plt>:
    4120:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #640]
    4128:	add	x16, x16, #0x280
    412c:	br	x17

0000000000004130 <PySlice_Unpack@plt>:
    4130:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #648]
    4138:	add	x16, x16, #0x288
    413c:	br	x17

0000000000004140 <PyDict_SetItem@plt>:
    4140:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #656]
    4148:	add	x16, x16, #0x290
    414c:	br	x17

0000000000004150 <PyDict_Copy@plt>:
    4150:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #664]
    4158:	add	x16, x16, #0x298
    415c:	br	x17

0000000000004160 <PyType_IsSubtype@plt>:
    4160:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #672]
    4168:	add	x16, x16, #0x2a0
    416c:	br	x17

0000000000004170 <PyUnicode_AsUTF8AndSize@plt>:
    4170:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #680]
    4178:	add	x16, x16, #0x2a8
    417c:	br	x17

0000000000004180 <PyErr_Format@plt>:
    4180:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #688]
    4188:	add	x16, x16, #0x2b0
    418c:	br	x17

0000000000004190 <_Py_BuildValue_SizeT@plt>:
    4190:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #696]
    4198:	add	x16, x16, #0x2b8
    419c:	br	x17

00000000000041a0 <Py_ReprLeave@plt>:
    41a0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #704]
    41a8:	add	x16, x16, #0x2c0
    41ac:	br	x17

00000000000041b0 <PyUnicode_FromStringAndSize@plt>:
    41b0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #712]
    41b8:	add	x16, x16, #0x2c8
    41bc:	br	x17

00000000000041c0 <_PyTrash_thread_destroy_chain@plt>:
    41c0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #720]
    41c8:	add	x16, x16, #0x2d0
    41cc:	br	x17

00000000000041d0 <_PyObject_MakeTpCall@plt>:
    41d0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #728]
    41d8:	add	x16, x16, #0x2d8
    41dc:	br	x17

00000000000041e0 <PyNumber_Index@plt>:
    41e0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #736]
    41e8:	add	x16, x16, #0x2e0
    41ec:	br	x17

00000000000041f0 <PyMem_Malloc@plt>:
    41f0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #744]
    41f8:	add	x16, x16, #0x2e8
    41fc:	br	x17

0000000000004200 <PyUnicode_New@plt>:
    4200:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #752]
    4208:	add	x16, x16, #0x2f0
    420c:	br	x17

0000000000004210 <PyTuple_Pack@plt>:
    4210:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #760]
    4218:	add	x16, x16, #0x2f8
    421c:	br	x17

0000000000004220 <PyObject_GC_UnTrack@plt>:
    4220:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #768]
    4228:	add	x16, x16, #0x300
    422c:	br	x17

0000000000004230 <PyDict_GetItemWithError@plt>:
    4230:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #776]
    4238:	add	x16, x16, #0x308
    423c:	br	x17

0000000000004240 <PySequence_Fast@plt>:
    4240:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #784]
    4248:	add	x16, x16, #0x310
    424c:	br	x17

Disassembly of section .text:

0000000000004250 <PyInit__elementtree@@Base-0xb274>:
    4250:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4254:	ldr	x0, [x0, #3960]
    4258:	cbz	x0, 4260 <PySequence_Fast@plt+0x20>
    425c:	b	3f30 <__gmon_start__@plt>
    4260:	ret
    4264:	stp	x29, x30, [sp, #-32]!
    4268:	mov	x29, sp
    426c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    4270:	add	x0, x0, #0x428
    4274:	str	x0, [sp, #24]
    4278:	ldr	x0, [sp, #24]
    427c:	str	x0, [sp, #24]
    4280:	ldr	x1, [sp, #24]
    4284:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    4288:	add	x0, x0, #0x428
    428c:	cmp	x1, x0
    4290:	b.eq	42c8 <PySequence_Fast@plt+0x88>  // b.none
    4294:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4298:	ldr	x0, [x0, #3888]
    429c:	str	x0, [sp, #16]
    42a0:	ldr	x0, [sp, #16]
    42a4:	str	x0, [sp, #16]
    42a8:	ldr	x0, [sp, #16]
    42ac:	cmp	x0, #0x0
    42b0:	b.eq	42cc <PySequence_Fast@plt+0x8c>  // b.none
    42b4:	ldr	x1, [sp, #16]
    42b8:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    42bc:	add	x0, x0, #0x428
    42c0:	blr	x1
    42c4:	b	42cc <PySequence_Fast@plt+0x8c>
    42c8:	nop
    42cc:	ldp	x29, x30, [sp], #32
    42d0:	ret
    42d4:	stp	x29, x30, [sp, #-48]!
    42d8:	mov	x29, sp
    42dc:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    42e0:	add	x0, x0, #0x428
    42e4:	str	x0, [sp, #40]
    42e8:	ldr	x0, [sp, #40]
    42ec:	str	x0, [sp, #40]
    42f0:	ldr	x1, [sp, #40]
    42f4:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    42f8:	add	x0, x0, #0x428
    42fc:	sub	x0, x1, x0
    4300:	asr	x0, x0, #3
    4304:	lsr	x1, x0, #63
    4308:	add	x0, x1, x0
    430c:	asr	x0, x0, #1
    4310:	str	x0, [sp, #32]
    4314:	ldr	x0, [sp, #32]
    4318:	cmp	x0, #0x0
    431c:	b.eq	4358 <PySequence_Fast@plt+0x118>  // b.none
    4320:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4324:	ldr	x0, [x0, #4048]
    4328:	str	x0, [sp, #24]
    432c:	ldr	x0, [sp, #24]
    4330:	str	x0, [sp, #24]
    4334:	ldr	x0, [sp, #24]
    4338:	cmp	x0, #0x0
    433c:	b.eq	435c <PySequence_Fast@plt+0x11c>  // b.none
    4340:	ldr	x2, [sp, #24]
    4344:	ldr	x1, [sp, #32]
    4348:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    434c:	add	x0, x0, #0x428
    4350:	blr	x2
    4354:	b	435c <PySequence_Fast@plt+0x11c>
    4358:	nop
    435c:	ldp	x29, x30, [sp], #48
    4360:	ret
    4364:	stp	x29, x30, [sp, #-16]!
    4368:	mov	x29, sp
    436c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    4370:	add	x0, x0, #0x428
    4374:	ldrb	w0, [x0]
    4378:	and	x0, x0, #0xff
    437c:	cmp	x0, #0x0
    4380:	b.ne	43bc <PySequence_Fast@plt+0x17c>  // b.any
    4384:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4388:	ldr	x0, [x0, #3904]
    438c:	cmp	x0, #0x0
    4390:	b.eq	43a4 <PySequence_Fast@plt+0x164>  // b.none
    4394:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    4398:	add	x0, x0, #0x318
    439c:	ldr	x0, [x0]
    43a0:	bl	3d10 <__cxa_finalize@plt>
    43a4:	bl	4264 <PySequence_Fast@plt+0x24>
    43a8:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    43ac:	add	x0, x0, #0x428
    43b0:	mov	w1, #0x1                   	// #1
    43b4:	strb	w1, [x0]
    43b8:	b	43c0 <PySequence_Fast@plt+0x180>
    43bc:	nop
    43c0:	ldp	x29, x30, [sp], #16
    43c4:	ret
    43c8:	stp	x29, x30, [sp, #-16]!
    43cc:	mov	x29, sp
    43d0:	bl	42d4 <PySequence_Fast@plt+0x94>
    43d4:	nop
    43d8:	ldp	x29, x30, [sp], #16
    43dc:	ret
    43e0:	sub	sp, sp, #0x10
    43e4:	str	x0, [sp, #8]
    43e8:	ldr	x0, [sp, #8]
    43ec:	ldr	x0, [x0]
    43f0:	add	x1, x0, #0x1
    43f4:	ldr	x0, [sp, #8]
    43f8:	str	x1, [x0]
    43fc:	nop
    4400:	add	sp, sp, #0x10
    4404:	ret
    4408:	stp	x29, x30, [sp, #-48]!
    440c:	mov	x29, sp
    4410:	str	x0, [sp, #40]
    4414:	str	w1, [sp, #36]
    4418:	str	x2, [sp, #24]
    441c:	ldr	x0, [sp, #24]
    4420:	ldr	x0, [x0]
    4424:	sub	x1, x0, #0x1
    4428:	ldr	x0, [sp, #24]
    442c:	str	x1, [x0]
    4430:	ldr	x0, [sp, #24]
    4434:	ldr	x0, [x0]
    4438:	cmp	x0, #0x0
    443c:	b.ne	4448 <PySequence_Fast@plt+0x208>  // b.any
    4440:	ldr	x0, [sp, #24]
    4444:	bl	3d70 <_Py_Dealloc@plt>
    4448:	nop
    444c:	ldp	x29, x30, [sp], #48
    4450:	ret
    4454:	stp	x29, x30, [sp, #-32]!
    4458:	mov	x29, sp
    445c:	str	x0, [sp, #24]
    4460:	ldr	x0, [sp, #24]
    4464:	cmp	x0, #0x0
    4468:	b.eq	4474 <PySequence_Fast@plt+0x234>  // b.none
    446c:	ldr	x0, [sp, #24]
    4470:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4474:	nop
    4478:	ldp	x29, x30, [sp], #32
    447c:	ret
    4480:	stp	x29, x30, [sp, #-32]!
    4484:	mov	x29, sp
    4488:	str	x0, [sp, #24]
    448c:	ldr	x0, [sp, #24]
    4490:	cmp	x0, #0x0
    4494:	b.eq	44ac <PySequence_Fast@plt+0x26c>  // b.none
    4498:	ldr	x2, [sp, #24]
    449c:	mov	w1, #0x21d                 	// #541
    44a0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    44a4:	add	x0, x0, #0x7f0
    44a8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    44ac:	nop
    44b0:	ldp	x29, x30, [sp], #32
    44b4:	ret
    44b8:	sub	sp, sp, #0x10
    44bc:	str	x0, [sp, #8]
    44c0:	ldr	x0, [sp, #8]
    44c4:	and	x0, x0, #0x7fffffffffffffff
    44c8:	add	sp, sp, #0x10
    44cc:	ret
    44d0:	sub	sp, sp, #0x30
    44d4:	str	x0, [sp, #8]
    44d8:	ldr	x0, [sp, #8]
    44dc:	ldr	x0, [x0, #8]
    44e0:	str	x0, [sp, #40]
    44e4:	ldr	x0, [sp, #40]
    44e8:	ldr	x0, [x0, #56]
    44ec:	str	x0, [sp, #32]
    44f0:	ldr	x0, [sp, #40]
    44f4:	ldr	x0, [x0, #168]
    44f8:	and	x0, x0, #0x800
    44fc:	cmp	x0, #0x0
    4500:	b.ne	450c <PySequence_Fast@plt+0x2cc>  // b.any
    4504:	mov	x0, #0x0                   	// #0
    4508:	b	4524 <PySequence_Fast@plt+0x2e4>
    450c:	ldr	x0, [sp, #32]
    4510:	ldr	x1, [sp, #8]
    4514:	add	x0, x1, x0
    4518:	str	x0, [sp, #24]
    451c:	ldr	x0, [sp, #24]
    4520:	ldr	x0, [x0]
    4524:	add	sp, sp, #0x30
    4528:	ret
    452c:	stp	x29, x30, [sp, #-80]!
    4530:	mov	x29, sp
    4534:	str	x0, [sp, #40]
    4538:	str	x1, [sp, #32]
    453c:	str	x2, [sp, #24]
    4540:	str	x3, [sp, #16]
    4544:	ldr	x0, [sp, #40]
    4548:	bl	44d0 <PySequence_Fast@plt+0x290>
    454c:	str	x0, [sp, #72]
    4550:	ldr	x0, [sp, #72]
    4554:	cmp	x0, #0x0
    4558:	b.ne	4580 <PySequence_Fast@plt+0x340>  // b.any
    455c:	ldr	x0, [sp, #24]
    4560:	bl	44b8 <PySequence_Fast@plt+0x278>
    4564:	str	x0, [sp, #56]
    4568:	ldr	x3, [sp, #16]
    456c:	ldr	x2, [sp, #56]
    4570:	ldr	x1, [sp, #32]
    4574:	ldr	x0, [sp, #40]
    4578:	bl	41d0 <_PyObject_MakeTpCall@plt>
    457c:	b	45ac <PySequence_Fast@plt+0x36c>
    4580:	ldr	x4, [sp, #72]
    4584:	ldr	x3, [sp, #16]
    4588:	ldr	x2, [sp, #24]
    458c:	ldr	x1, [sp, #32]
    4590:	ldr	x0, [sp, #40]
    4594:	blr	x4
    4598:	str	x0, [sp, #64]
    459c:	mov	x2, #0x0                   	// #0
    45a0:	ldr	x1, [sp, #64]
    45a4:	ldr	x0, [sp, #40]
    45a8:	bl	4020 <_Py_CheckFunctionResult@plt>
    45ac:	ldp	x29, x30, [sp], #80
    45b0:	ret
    45b4:	stp	x29, x30, [sp, #-48]!
    45b8:	mov	x29, sp
    45bc:	str	x0, [sp, #40]
    45c0:	str	x1, [sp, #32]
    45c4:	str	x2, [sp, #24]
    45c8:	ldr	x0, [sp, #24]
    45cc:	mov	x3, #0x0                   	// #0
    45d0:	mov	x2, x0
    45d4:	ldr	x1, [sp, #32]
    45d8:	ldr	x0, [sp, #40]
    45dc:	bl	452c <PySequence_Fast@plt+0x2ec>
    45e0:	ldp	x29, x30, [sp], #48
    45e4:	ret
    45e8:	stp	x29, x30, [sp, #-32]!
    45ec:	mov	x29, sp
    45f0:	str	x0, [sp, #24]
    45f4:	mov	x3, #0x0                   	// #0
    45f8:	mov	x2, #0x0                   	// #0
    45fc:	mov	x1, #0x0                   	// #0
    4600:	ldr	x0, [sp, #24]
    4604:	bl	452c <PySequence_Fast@plt+0x2ec>
    4608:	ldp	x29, x30, [sp], #32
    460c:	ret
    4610:	stp	x29, x30, [sp, #-48]!
    4614:	mov	x29, sp
    4618:	str	x0, [sp, #24]
    461c:	str	x1, [sp, #16]
    4620:	ldr	x0, [sp, #24]
    4624:	ldr	x0, [x0]
    4628:	and	x0, x0, #0xfffffffffffffffe
    462c:	str	x0, [sp, #40]
    4630:	ldr	x0, [sp, #24]
    4634:	ldr	x1, [sp, #16]
    4638:	str	x1, [x0]
    463c:	ldr	x2, [sp, #40]
    4640:	mov	w1, #0x46                  	// #70
    4644:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4648:	add	x0, x0, #0x808
    464c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4650:	nop
    4654:	ldp	x29, x30, [sp], #48
    4658:	ret
    465c:	stp	x29, x30, [sp, #-32]!
    4660:	mov	x29, sp
    4664:	str	x0, [sp, #24]
    4668:	ldr	x0, [sp, #24]
    466c:	ldr	x0, [x0]
    4670:	cmp	x0, #0x0
    4674:	b.eq	4684 <PySequence_Fast@plt+0x444>  // b.none
    4678:	mov	x1, #0x0                   	// #0
    467c:	ldr	x0, [sp, #24]
    4680:	bl	4610 <PySequence_Fast@plt+0x3d0>
    4684:	nop
    4688:	ldp	x29, x30, [sp], #32
    468c:	ret
    4690:	stp	x29, x30, [sp, #-80]!
    4694:	mov	x29, sp
    4698:	str	x0, [sp, #24]
    469c:	ldr	x0, [sp, #24]
    46a0:	bl	3e10 <PyModule_GetState@plt>
    46a4:	str	x0, [sp, #72]
    46a8:	ldr	x0, [sp, #72]
    46ac:	ldr	x0, [x0]
    46b0:	str	x0, [sp, #64]
    46b4:	ldr	x0, [sp, #64]
    46b8:	cmp	x0, #0x0
    46bc:	b.eq	46dc <PySequence_Fast@plt+0x49c>  // b.none
    46c0:	ldr	x0, [sp, #72]
    46c4:	str	xzr, [x0]
    46c8:	ldr	x2, [sp, #64]
    46cc:	mov	w1, #0x74                  	// #116
    46d0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    46d4:	add	x0, x0, #0x808
    46d8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    46dc:	ldr	x0, [sp, #72]
    46e0:	ldr	x0, [x0, #8]
    46e4:	str	x0, [sp, #56]
    46e8:	ldr	x0, [sp, #56]
    46ec:	cmp	x0, #0x0
    46f0:	b.eq	4710 <PySequence_Fast@plt+0x4d0>  // b.none
    46f4:	ldr	x0, [sp, #72]
    46f8:	str	xzr, [x0, #8]
    46fc:	ldr	x2, [sp, #56]
    4700:	mov	w1, #0x75                  	// #117
    4704:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4708:	add	x0, x0, #0x808
    470c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4710:	ldr	x0, [sp, #72]
    4714:	ldr	x0, [x0, #16]
    4718:	str	x0, [sp, #48]
    471c:	ldr	x0, [sp, #48]
    4720:	cmp	x0, #0x0
    4724:	b.eq	4744 <PySequence_Fast@plt+0x504>  // b.none
    4728:	ldr	x0, [sp, #72]
    472c:	str	xzr, [x0, #16]
    4730:	ldr	x2, [sp, #48]
    4734:	mov	w1, #0x76                  	// #118
    4738:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    473c:	add	x0, x0, #0x808
    4740:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4744:	ldr	x0, [sp, #72]
    4748:	ldr	x0, [x0, #24]
    474c:	str	x0, [sp, #40]
    4750:	ldr	x0, [sp, #40]
    4754:	cmp	x0, #0x0
    4758:	b.eq	4778 <PySequence_Fast@plt+0x538>  // b.none
    475c:	ldr	x0, [sp, #72]
    4760:	str	xzr, [x0, #24]
    4764:	ldr	x2, [sp, #40]
    4768:	mov	w1, #0x77                  	// #119
    476c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4770:	add	x0, x0, #0x808
    4774:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4778:	ldr	x0, [sp, #72]
    477c:	ldr	x0, [x0, #32]
    4780:	str	x0, [sp, #32]
    4784:	ldr	x0, [sp, #32]
    4788:	cmp	x0, #0x0
    478c:	b.eq	47ac <PySequence_Fast@plt+0x56c>  // b.none
    4790:	ldr	x0, [sp, #72]
    4794:	str	xzr, [x0, #32]
    4798:	ldr	x2, [sp, #32]
    479c:	mov	w1, #0x78                  	// #120
    47a0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    47a4:	add	x0, x0, #0x808
    47a8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    47ac:	mov	w0, #0x0                   	// #0
    47b0:	ldp	x29, x30, [sp], #80
    47b4:	ret
    47b8:	stp	x29, x30, [sp, #-80]!
    47bc:	mov	x29, sp
    47c0:	str	x0, [sp, #40]
    47c4:	str	x1, [sp, #32]
    47c8:	str	x2, [sp, #24]
    47cc:	ldr	x0, [sp, #40]
    47d0:	bl	3e10 <PyModule_GetState@plt>
    47d4:	str	x0, [sp, #72]
    47d8:	ldr	x0, [sp, #72]
    47dc:	ldr	x0, [x0]
    47e0:	cmp	x0, #0x0
    47e4:	b.eq	4814 <PySequence_Fast@plt+0x5d4>  // b.none
    47e8:	ldr	x0, [sp, #72]
    47ec:	ldr	x0, [x0]
    47f0:	ldr	x2, [sp, #32]
    47f4:	ldr	x1, [sp, #24]
    47f8:	blr	x2
    47fc:	str	w0, [sp, #68]
    4800:	ldr	w0, [sp, #68]
    4804:	cmp	w0, #0x0
    4808:	b.eq	4814 <PySequence_Fast@plt+0x5d4>  // b.none
    480c:	ldr	w0, [sp, #68]
    4810:	b	4908 <PySequence_Fast@plt+0x6c8>
    4814:	ldr	x0, [sp, #72]
    4818:	ldr	x0, [x0, #8]
    481c:	cmp	x0, #0x0
    4820:	b.eq	4850 <PySequence_Fast@plt+0x610>  // b.none
    4824:	ldr	x0, [sp, #72]
    4828:	ldr	x0, [x0, #8]
    482c:	ldr	x2, [sp, #32]
    4830:	ldr	x1, [sp, #24]
    4834:	blr	x2
    4838:	str	w0, [sp, #64]
    483c:	ldr	w0, [sp, #64]
    4840:	cmp	w0, #0x0
    4844:	b.eq	4850 <PySequence_Fast@plt+0x610>  // b.none
    4848:	ldr	w0, [sp, #64]
    484c:	b	4908 <PySequence_Fast@plt+0x6c8>
    4850:	ldr	x0, [sp, #72]
    4854:	ldr	x0, [x0, #16]
    4858:	cmp	x0, #0x0
    485c:	b.eq	488c <PySequence_Fast@plt+0x64c>  // b.none
    4860:	ldr	x0, [sp, #72]
    4864:	ldr	x0, [x0, #16]
    4868:	ldr	x2, [sp, #32]
    486c:	ldr	x1, [sp, #24]
    4870:	blr	x2
    4874:	str	w0, [sp, #60]
    4878:	ldr	w0, [sp, #60]
    487c:	cmp	w0, #0x0
    4880:	b.eq	488c <PySequence_Fast@plt+0x64c>  // b.none
    4884:	ldr	w0, [sp, #60]
    4888:	b	4908 <PySequence_Fast@plt+0x6c8>
    488c:	ldr	x0, [sp, #72]
    4890:	ldr	x0, [x0, #24]
    4894:	cmp	x0, #0x0
    4898:	b.eq	48c8 <PySequence_Fast@plt+0x688>  // b.none
    489c:	ldr	x0, [sp, #72]
    48a0:	ldr	x0, [x0, #24]
    48a4:	ldr	x2, [sp, #32]
    48a8:	ldr	x1, [sp, #24]
    48ac:	blr	x2
    48b0:	str	w0, [sp, #56]
    48b4:	ldr	w0, [sp, #56]
    48b8:	cmp	w0, #0x0
    48bc:	b.eq	48c8 <PySequence_Fast@plt+0x688>  // b.none
    48c0:	ldr	w0, [sp, #56]
    48c4:	b	4908 <PySequence_Fast@plt+0x6c8>
    48c8:	ldr	x0, [sp, #72]
    48cc:	ldr	x0, [x0, #32]
    48d0:	cmp	x0, #0x0
    48d4:	b.eq	4904 <PySequence_Fast@plt+0x6c4>  // b.none
    48d8:	ldr	x0, [sp, #72]
    48dc:	ldr	x0, [x0, #32]
    48e0:	ldr	x2, [sp, #32]
    48e4:	ldr	x1, [sp, #24]
    48e8:	blr	x2
    48ec:	str	w0, [sp, #52]
    48f0:	ldr	w0, [sp, #52]
    48f4:	cmp	w0, #0x0
    48f8:	b.eq	4904 <PySequence_Fast@plt+0x6c4>  // b.none
    48fc:	ldr	w0, [sp, #52]
    4900:	b	4908 <PySequence_Fast@plt+0x6c8>
    4904:	mov	w0, #0x0                   	// #0
    4908:	ldp	x29, x30, [sp], #80
    490c:	ret
    4910:	stp	x29, x30, [sp, #-32]!
    4914:	mov	x29, sp
    4918:	str	x0, [sp, #24]
    491c:	ldr	x0, [sp, #24]
    4920:	bl	4690 <PySequence_Fast@plt+0x450>
    4924:	nop
    4928:	ldp	x29, x30, [sp], #32
    492c:	ret
    4930:	stp	x29, x30, [sp, #-48]!
    4934:	mov	x29, sp
    4938:	str	x0, [sp, #24]
    493c:	mov	x1, #0x0                   	// #0
    4940:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4944:	add	x0, x0, #0x8d0
    4948:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    494c:	str	x0, [sp, #40]
    4950:	ldr	x0, [sp, #40]
    4954:	cmp	x0, #0x0
    4958:	b.ne	4964 <PySequence_Fast@plt+0x724>  // b.any
    495c:	mov	x0, #0x0                   	// #0
    4960:	b	498c <PySequence_Fast@plt+0x74c>
    4964:	ldr	x1, [sp, #24]
    4968:	ldr	x0, [sp, #40]
    496c:	bl	3d20 <PyUnicode_Join@plt>
    4970:	str	x0, [sp, #32]
    4974:	ldr	x2, [sp, #40]
    4978:	mov	w1, #0x9b                  	// #155
    497c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4980:	add	x0, x0, #0x808
    4984:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4988:	ldr	x0, [sp, #32]
    498c:	ldp	x29, x30, [sp], #48
    4990:	ret
    4994:	sub	sp, sp, #0x10
    4998:	str	x0, [sp, #8]
    499c:	ldr	x0, [sp, #8]
    49a0:	ldr	x1, [x0, #8]
    49a4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    49a8:	ldr	x0, [x0, #3992]
    49ac:	cmp	x1, x0
    49b0:	b.ne	49cc <PySequence_Fast@plt+0x78c>  // b.any
    49b4:	ldr	x0, [sp, #8]
    49b8:	ldr	x0, [x0, #16]
    49bc:	cmp	x0, #0x0
    49c0:	b.ne	49cc <PySequence_Fast@plt+0x78c>  // b.any
    49c4:	mov	w0, #0x1                   	// #1
    49c8:	b	49d0 <PySequence_Fast@plt+0x790>
    49cc:	mov	w0, #0x0                   	// #0
    49d0:	add	sp, sp, #0x10
    49d4:	ret
    49d8:	stp	x29, x30, [sp, #-32]!
    49dc:	mov	x29, sp
    49e0:	str	x0, [sp, #24]
    49e4:	str	x1, [sp, #16]
    49e8:	mov	x0, #0x40                  	// #64
    49ec:	bl	3e00 <PyObject_Malloc@plt>
    49f0:	mov	x1, x0
    49f4:	ldr	x0, [sp, #24]
    49f8:	str	x1, [x0, #40]
    49fc:	ldr	x0, [sp, #24]
    4a00:	ldr	x0, [x0, #40]
    4a04:	cmp	x0, #0x0
    4a08:	b.ne	4a18 <PySequence_Fast@plt+0x7d8>  // b.any
    4a0c:	bl	3d80 <PyErr_NoMemory@plt>
    4a10:	mov	w0, #0xffffffff            	// #-1
    4a14:	b	4a80 <PySequence_Fast@plt+0x840>
    4a18:	ldr	x0, [sp, #16]
    4a1c:	cmp	x0, #0x0
    4a20:	b.ne	4a30 <PySequence_Fast@plt+0x7f0>  // b.any
    4a24:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4a28:	ldr	x0, [x0, #3976]
    4a2c:	str	x0, [sp, #16]
    4a30:	ldr	x0, [sp, #16]
    4a34:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4a38:	ldr	x0, [sp, #24]
    4a3c:	ldr	x0, [x0, #40]
    4a40:	ldr	x1, [sp, #16]
    4a44:	str	x1, [x0]
    4a48:	ldr	x0, [sp, #24]
    4a4c:	ldr	x0, [x0, #40]
    4a50:	str	xzr, [x0, #8]
    4a54:	ldr	x0, [sp, #24]
    4a58:	ldr	x0, [x0, #40]
    4a5c:	mov	x1, #0x4                   	// #4
    4a60:	str	x1, [x0, #16]
    4a64:	ldr	x0, [sp, #24]
    4a68:	ldr	x1, [x0, #40]
    4a6c:	ldr	x0, [sp, #24]
    4a70:	ldr	x0, [x0, #40]
    4a74:	add	x1, x1, #0x20
    4a78:	str	x1, [x0, #24]
    4a7c:	mov	w0, #0x0                   	// #0
    4a80:	ldp	x29, x30, [sp], #32
    4a84:	ret
    4a88:	stp	x29, x30, [sp, #-48]!
    4a8c:	mov	x29, sp
    4a90:	str	x0, [sp, #24]
    4a94:	ldr	x0, [sp, #24]
    4a98:	cmp	x0, #0x0
    4a9c:	b.eq	4b40 <PySequence_Fast@plt+0x900>  // b.none
    4aa0:	ldr	x0, [sp, #24]
    4aa4:	ldr	x0, [x0]
    4aa8:	mov	x2, x0
    4aac:	mov	w1, #0xf9                  	// #249
    4ab0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4ab4:	add	x0, x0, #0x808
    4ab8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4abc:	str	xzr, [sp, #40]
    4ac0:	b	4afc <PySequence_Fast@plt+0x8bc>
    4ac4:	ldr	x0, [sp, #24]
    4ac8:	ldr	x1, [x0, #24]
    4acc:	ldr	x0, [sp, #40]
    4ad0:	lsl	x0, x0, #3
    4ad4:	add	x0, x1, x0
    4ad8:	ldr	x0, [x0]
    4adc:	mov	x2, x0
    4ae0:	mov	w1, #0xfc                  	// #252
    4ae4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4ae8:	add	x0, x0, #0x808
    4aec:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4af0:	ldr	x0, [sp, #40]
    4af4:	add	x0, x0, #0x1
    4af8:	str	x0, [sp, #40]
    4afc:	ldr	x0, [sp, #24]
    4b00:	ldr	x0, [x0, #8]
    4b04:	ldr	x1, [sp, #40]
    4b08:	cmp	x1, x0
    4b0c:	b.lt	4ac4 <PySequence_Fast@plt+0x884>  // b.tstop
    4b10:	ldr	x0, [sp, #24]
    4b14:	ldr	x1, [x0, #24]
    4b18:	ldr	x0, [sp, #24]
    4b1c:	add	x0, x0, #0x20
    4b20:	cmp	x1, x0
    4b24:	b.eq	4b34 <PySequence_Fast@plt+0x8f4>  // b.none
    4b28:	ldr	x0, [sp, #24]
    4b2c:	ldr	x0, [x0, #24]
    4b30:	bl	3e60 <PyObject_Free@plt>
    4b34:	ldr	x0, [sp, #24]
    4b38:	bl	3e60 <PyObject_Free@plt>
    4b3c:	b	4b44 <PySequence_Fast@plt+0x904>
    4b40:	nop
    4b44:	ldp	x29, x30, [sp], #48
    4b48:	ret
    4b4c:	stp	x29, x30, [sp, #-48]!
    4b50:	mov	x29, sp
    4b54:	str	x0, [sp, #24]
    4b58:	ldr	x0, [sp, #24]
    4b5c:	ldr	x0, [x0, #40]
    4b60:	cmp	x0, #0x0
    4b64:	b.eq	4b88 <PySequence_Fast@plt+0x948>  // b.none
    4b68:	ldr	x0, [sp, #24]
    4b6c:	ldr	x0, [x0, #40]
    4b70:	str	x0, [sp, #40]
    4b74:	ldr	x0, [sp, #24]
    4b78:	str	xzr, [x0, #40]
    4b7c:	ldr	x0, [sp, #40]
    4b80:	bl	4a88 <PySequence_Fast@plt+0x848>
    4b84:	b	4b8c <PySequence_Fast@plt+0x94c>
    4b88:	nop
    4b8c:	ldp	x29, x30, [sp], #48
    4b90:	ret
    4b94:	stp	x29, x30, [sp, #-48]!
    4b98:	mov	x29, sp
    4b9c:	str	x0, [sp, #24]
    4ba0:	str	x1, [sp, #16]
    4ba4:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    4ba8:	add	x0, x0, #0x320
    4bac:	bl	3df0 <_PyObject_GC_New@plt>
    4bb0:	str	x0, [sp, #40]
    4bb4:	ldr	x0, [sp, #40]
    4bb8:	cmp	x0, #0x0
    4bbc:	b.ne	4bc8 <PySequence_Fast@plt+0x988>  // b.any
    4bc0:	mov	x0, #0x0                   	// #0
    4bc4:	b	4c84 <PySequence_Fast@plt+0xa44>
    4bc8:	ldr	x0, [sp, #40]
    4bcc:	str	xzr, [x0, #40]
    4bd0:	ldr	x0, [sp, #24]
    4bd4:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4bd8:	ldr	x0, [sp, #40]
    4bdc:	ldr	x1, [sp, #24]
    4be0:	str	x1, [x0, #16]
    4be4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4be8:	ldr	x0, [x0, #3976]
    4bec:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4bf0:	ldr	x0, [sp, #40]
    4bf4:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4bf8:	ldr	x1, [x1, #3976]
    4bfc:	str	x1, [x0, #24]
    4c00:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4c04:	ldr	x0, [x0, #3976]
    4c08:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4c0c:	ldr	x0, [sp, #40]
    4c10:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4c14:	ldr	x1, [x1, #3976]
    4c18:	str	x1, [x0, #32]
    4c1c:	ldr	x0, [sp, #40]
    4c20:	str	xzr, [x0, #48]
    4c24:	ldr	x0, [sp, #40]
    4c28:	bl	3dc0 <PyObject_GC_Track@plt>
    4c2c:	ldr	x1, [sp, #16]
    4c30:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4c34:	ldr	x0, [x0, #3976]
    4c38:	cmp	x1, x0
    4c3c:	b.eq	4c80 <PySequence_Fast@plt+0xa40>  // b.none
    4c40:	ldr	x0, [sp, #16]
    4c44:	bl	4994 <PySequence_Fast@plt+0x754>
    4c48:	cmp	w0, #0x0
    4c4c:	b.ne	4c80 <PySequence_Fast@plt+0xa40>  // b.any
    4c50:	ldr	x1, [sp, #16]
    4c54:	ldr	x0, [sp, #40]
    4c58:	bl	49d8 <PySequence_Fast@plt+0x798>
    4c5c:	cmp	w0, #0x0
    4c60:	b.ge	4c80 <PySequence_Fast@plt+0xa40>  // b.tcont
    4c64:	ldr	x2, [sp, #40]
    4c68:	mov	w1, #0x131                 	// #305
    4c6c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4c70:	add	x0, x0, #0x808
    4c74:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4c78:	mov	x0, #0x0                   	// #0
    4c7c:	b	4c84 <PySequence_Fast@plt+0xa44>
    4c80:	ldr	x0, [sp, #40]
    4c84:	ldp	x29, x30, [sp], #48
    4c88:	ret
    4c8c:	stp	x29, x30, [sp, #-64]!
    4c90:	mov	x29, sp
    4c94:	str	x0, [sp, #40]
    4c98:	str	x1, [sp, #32]
    4c9c:	str	x2, [sp, #24]
    4ca0:	ldr	x0, [sp, #40]
    4ca4:	ldr	x2, [x0, #304]
    4ca8:	mov	x1, #0x0                   	// #0
    4cac:	ldr	x0, [sp, #40]
    4cb0:	blr	x2
    4cb4:	str	x0, [sp, #56]
    4cb8:	ldr	x0, [sp, #56]
    4cbc:	cmp	x0, #0x0
    4cc0:	b.eq	4d28 <PySequence_Fast@plt+0xae8>  // b.none
    4cc4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4cc8:	ldr	x0, [x0, #3976]
    4ccc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4cd0:	ldr	x0, [sp, #56]
    4cd4:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4cd8:	ldr	x1, [x1, #3976]
    4cdc:	str	x1, [x0, #16]
    4ce0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4ce4:	ldr	x0, [x0, #3976]
    4ce8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4cec:	ldr	x0, [sp, #56]
    4cf0:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4cf4:	ldr	x1, [x1, #3976]
    4cf8:	str	x1, [x0, #24]
    4cfc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4d00:	ldr	x0, [x0, #3976]
    4d04:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4d08:	ldr	x0, [sp, #56]
    4d0c:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4d10:	ldr	x1, [x1, #3976]
    4d14:	str	x1, [x0, #32]
    4d18:	ldr	x0, [sp, #56]
    4d1c:	str	xzr, [x0, #40]
    4d20:	ldr	x0, [sp, #56]
    4d24:	str	xzr, [x0, #48]
    4d28:	ldr	x0, [sp, #56]
    4d2c:	ldp	x29, x30, [sp], #64
    4d30:	ret
    4d34:	stp	x29, x30, [sp, #-48]!
    4d38:	mov	x29, sp
    4d3c:	str	x0, [sp, #24]
    4d40:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4d44:	add	x0, x0, #0x8d8
    4d48:	bl	4100 <PyUnicode_FromString@plt>
    4d4c:	str	x0, [sp, #32]
    4d50:	ldr	x0, [sp, #32]
    4d54:	cmp	x0, #0x0
    4d58:	b.ne	4d64 <PySequence_Fast@plt+0xb24>  // b.any
    4d5c:	mov	x0, #0x0                   	// #0
    4d60:	b	4e90 <PySequence_Fast@plt+0xc50>
    4d64:	ldr	x1, [sp, #32]
    4d68:	ldr	x0, [sp, #24]
    4d6c:	bl	4230 <PyDict_GetItemWithError@plt>
    4d70:	str	x0, [sp, #40]
    4d74:	ldr	x0, [sp, #40]
    4d78:	cmp	x0, #0x0
    4d7c:	b.eq	4e28 <PySequence_Fast@plt+0xbe8>  // b.none
    4d80:	ldr	x0, [sp, #40]
    4d84:	ldr	x0, [x0, #8]
    4d88:	ldr	x0, [x0, #168]
    4d8c:	and	x0, x0, #0x20000000
    4d90:	cmp	x0, #0x0
    4d94:	b.ne	4de0 <PySequence_Fast@plt+0xba0>  // b.any
    4d98:	ldr	x2, [sp, #32]
    4d9c:	mov	w1, #0x163                 	// #355
    4da0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4da4:	add	x0, x0, #0x808
    4da8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4dac:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4db0:	ldr	x0, [x0, #3944]
    4db4:	ldr	x3, [x0]
    4db8:	ldr	x0, [sp, #40]
    4dbc:	ldr	x0, [x0, #8]
    4dc0:	ldr	x0, [x0, #24]
    4dc4:	mov	x2, x0
    4dc8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4dcc:	add	x1, x0, #0x8e0
    4dd0:	mov	x0, x3
    4dd4:	bl	4180 <PyErr_Format@plt>
    4dd8:	mov	x0, #0x0                   	// #0
    4ddc:	b	4e90 <PySequence_Fast@plt+0xc50>
    4de0:	ldr	x0, [sp, #40]
    4de4:	bl	4150 <PyDict_Copy@plt>
    4de8:	str	x0, [sp, #40]
    4dec:	ldr	x0, [sp, #40]
    4df0:	cmp	x0, #0x0
    4df4:	b.eq	4e3c <PySequence_Fast@plt+0xbfc>  // b.none
    4df8:	ldr	x1, [sp, #32]
    4dfc:	ldr	x0, [sp, #24]
    4e00:	bl	3f70 <PyDict_DelItem@plt>
    4e04:	cmp	w0, #0x0
    4e08:	b.ge	4e3c <PySequence_Fast@plt+0xbfc>  // b.tcont
    4e0c:	ldr	x2, [sp, #40]
    4e10:	mov	w1, #0x16a                 	// #362
    4e14:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4e18:	add	x0, x0, #0x808
    4e1c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4e20:	str	xzr, [sp, #40]
    4e24:	b	4e3c <PySequence_Fast@plt+0xbfc>
    4e28:	bl	3f80 <PyErr_Occurred@plt>
    4e2c:	cmp	x0, #0x0
    4e30:	b.ne	4e3c <PySequence_Fast@plt+0xbfc>  // b.any
    4e34:	bl	4080 <PyDict_New@plt>
    4e38:	str	x0, [sp, #40]
    4e3c:	ldr	x2, [sp, #32]
    4e40:	mov	w1, #0x172                 	// #370
    4e44:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4e48:	add	x0, x0, #0x808
    4e4c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4e50:	ldr	x0, [sp, #40]
    4e54:	cmp	x0, #0x0
    4e58:	b.eq	4e8c <PySequence_Fast@plt+0xc4c>  // b.none
    4e5c:	ldr	x1, [sp, #24]
    4e60:	ldr	x0, [sp, #40]
    4e64:	bl	3f20 <PyDict_Update@plt>
    4e68:	cmp	w0, #0x0
    4e6c:	b.ge	4e8c <PySequence_Fast@plt+0xc4c>  // b.tcont
    4e70:	ldr	x2, [sp, #40]
    4e74:	mov	w1, #0x175                 	// #373
    4e78:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4e7c:	add	x0, x0, #0x808
    4e80:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4e84:	mov	x0, #0x0                   	// #0
    4e88:	b	4e90 <PySequence_Fast@plt+0xc50>
    4e8c:	ldr	x0, [sp, #40]
    4e90:	ldp	x29, x30, [sp], #48
    4e94:	ret
    4e98:	stp	x29, x30, [sp, #-80]!
    4e9c:	mov	x29, sp
    4ea0:	str	x0, [sp, #40]
    4ea4:	str	x1, [sp, #32]
    4ea8:	str	x2, [sp, #24]
    4eac:	str	xzr, [sp, #48]
    4eb0:	add	x0, sp, #0x30
    4eb4:	add	x1, sp, #0x38
    4eb8:	mov	x4, x0
    4ebc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    4ec0:	ldr	x3, [x0, #3992]
    4ec4:	mov	x2, x1
    4ec8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4ecc:	add	x1, x0, #0x900
    4ed0:	ldr	x0, [sp, #32]
    4ed4:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    4ed8:	cmp	w0, #0x0
    4edc:	b.ne	4ee8 <PySequence_Fast@plt+0xca8>  // b.any
    4ee0:	mov	w0, #0xffffffff            	// #-1
    4ee4:	b	5058 <PySequence_Fast@plt+0xe18>
    4ee8:	ldr	x0, [sp, #48]
    4eec:	cmp	x0, #0x0
    4ef0:	b.eq	4f54 <PySequence_Fast@plt+0xd14>  // b.none
    4ef4:	ldr	x0, [sp, #48]
    4ef8:	bl	4150 <PyDict_Copy@plt>
    4efc:	str	x0, [sp, #48]
    4f00:	ldr	x0, [sp, #48]
    4f04:	cmp	x0, #0x0
    4f08:	b.ne	4f14 <PySequence_Fast@plt+0xcd4>  // b.any
    4f0c:	mov	w0, #0xffffffff            	// #-1
    4f10:	b	5058 <PySequence_Fast@plt+0xe18>
    4f14:	ldr	x0, [sp, #24]
    4f18:	cmp	x0, #0x0
    4f1c:	b.eq	4f80 <PySequence_Fast@plt+0xd40>  // b.none
    4f20:	ldr	x0, [sp, #48]
    4f24:	ldr	x1, [sp, #24]
    4f28:	bl	3f20 <PyDict_Update@plt>
    4f2c:	cmp	w0, #0x0
    4f30:	b.ge	4f80 <PySequence_Fast@plt+0xd40>  // b.tcont
    4f34:	ldr	x0, [sp, #48]
    4f38:	mov	x2, x0
    4f3c:	mov	w1, #0x194                 	// #404
    4f40:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4f44:	add	x0, x0, #0x808
    4f48:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4f4c:	mov	w0, #0xffffffff            	// #-1
    4f50:	b	5058 <PySequence_Fast@plt+0xe18>
    4f54:	ldr	x0, [sp, #24]
    4f58:	cmp	x0, #0x0
    4f5c:	b.eq	4f80 <PySequence_Fast@plt+0xd40>  // b.none
    4f60:	ldr	x0, [sp, #24]
    4f64:	bl	4d34 <PySequence_Fast@plt+0xaf4>
    4f68:	str	x0, [sp, #48]
    4f6c:	ldr	x0, [sp, #48]
    4f70:	cmp	x0, #0x0
    4f74:	b.ne	4f80 <PySequence_Fast@plt+0xd40>  // b.any
    4f78:	mov	w0, #0xffffffff            	// #-1
    4f7c:	b	5058 <PySequence_Fast@plt+0xe18>
    4f80:	ldr	x0, [sp, #40]
    4f84:	str	x0, [sp, #72]
    4f88:	ldr	x0, [sp, #48]
    4f8c:	cmp	x0, #0x0
    4f90:	b.eq	4fdc <PySequence_Fast@plt+0xd9c>  // b.none
    4f94:	ldr	x0, [sp, #48]
    4f98:	bl	4994 <PySequence_Fast@plt+0x754>
    4f9c:	cmp	w0, #0x0
    4fa0:	b.ne	4fdc <PySequence_Fast@plt+0xd9c>  // b.any
    4fa4:	ldr	x0, [sp, #48]
    4fa8:	mov	x1, x0
    4fac:	ldr	x0, [sp, #72]
    4fb0:	bl	49d8 <PySequence_Fast@plt+0x798>
    4fb4:	cmp	w0, #0x0
    4fb8:	b.ge	4fdc <PySequence_Fast@plt+0xd9c>  // b.tcont
    4fbc:	ldr	x0, [sp, #48]
    4fc0:	mov	x2, x0
    4fc4:	mov	w1, #0x1a3                 	// #419
    4fc8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    4fcc:	add	x0, x0, #0x808
    4fd0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    4fd4:	mov	w0, #0xffffffff            	// #-1
    4fd8:	b	5058 <PySequence_Fast@plt+0xe18>
    4fdc:	ldr	x0, [sp, #48]
    4fe0:	bl	4480 <PySequence_Fast@plt+0x240>
    4fe4:	ldr	x0, [sp, #56]
    4fe8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    4fec:	ldr	x0, [sp, #72]
    4ff0:	ldr	x0, [x0, #16]
    4ff4:	str	x0, [sp, #64]
    4ff8:	ldr	x1, [sp, #56]
    4ffc:	ldr	x0, [sp, #72]
    5000:	str	x1, [x0, #16]
    5004:	ldr	x0, [sp, #64]
    5008:	bl	4480 <PySequence_Fast@plt+0x240>
    500c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5010:	ldr	x0, [x0, #3976]
    5014:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5018:	ldr	x0, [sp, #72]
    501c:	add	x2, x0, #0x18
    5020:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5024:	ldr	x1, [x0, #3976]
    5028:	mov	x0, x2
    502c:	bl	4610 <PySequence_Fast@plt+0x3d0>
    5030:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5034:	ldr	x0, [x0, #3976]
    5038:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    503c:	ldr	x0, [sp, #72]
    5040:	add	x2, x0, #0x20
    5044:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5048:	ldr	x1, [x0, #3976]
    504c:	mov	x0, x2
    5050:	bl	4610 <PySequence_Fast@plt+0x3d0>
    5054:	mov	w0, #0x0                   	// #0
    5058:	ldp	x29, x30, [sp], #80
    505c:	ret
    5060:	stp	x29, x30, [sp, #-48]!
    5064:	mov	x29, sp
    5068:	str	x0, [sp, #24]
    506c:	str	x1, [sp, #16]
    5070:	ldr	x0, [sp, #24]
    5074:	ldr	x0, [x0, #40]
    5078:	cmp	x0, #0x0
    507c:	b.ne	509c <PySequence_Fast@plt+0xe5c>  // b.any
    5080:	mov	x1, #0x0                   	// #0
    5084:	ldr	x0, [sp, #24]
    5088:	bl	49d8 <PySequence_Fast@plt+0x798>
    508c:	cmp	w0, #0x0
    5090:	b.ge	509c <PySequence_Fast@plt+0xe5c>  // b.tcont
    5094:	mov	w0, #0xffffffff            	// #-1
    5098:	b	51fc <PySequence_Fast@plt+0xfbc>
    509c:	ldr	x0, [sp, #24]
    50a0:	ldr	x0, [x0, #40]
    50a4:	ldr	x0, [x0, #8]
    50a8:	ldr	x1, [sp, #16]
    50ac:	add	x0, x1, x0
    50b0:	str	x0, [sp, #32]
    50b4:	ldr	x0, [sp, #24]
    50b8:	ldr	x0, [x0, #40]
    50bc:	ldr	x0, [x0, #16]
    50c0:	ldr	x1, [sp, #32]
    50c4:	cmp	x1, x0
    50c8:	b.le	51e0 <PySequence_Fast@plt+0xfa0>
    50cc:	ldr	x0, [sp, #32]
    50d0:	asr	x1, x0, #3
    50d4:	ldr	x0, [sp, #32]
    50d8:	cmp	x0, #0x8
    50dc:	b.gt	50e8 <PySequence_Fast@plt+0xea8>
    50e0:	mov	x0, #0x3                   	// #3
    50e4:	b	50ec <PySequence_Fast@plt+0xeac>
    50e8:	mov	x0, #0x6                   	// #6
    50ec:	add	x0, x0, x1
    50f0:	ldr	x1, [sp, #32]
    50f4:	add	x0, x1, x0
    50f8:	str	x0, [sp, #32]
    50fc:	ldr	x0, [sp, #32]
    5100:	cmp	x0, #0x0
    5104:	b.eq	5110 <PySequence_Fast@plt+0xed0>  // b.none
    5108:	ldr	x0, [sp, #32]
    510c:	b	5114 <PySequence_Fast@plt+0xed4>
    5110:	mov	x0, #0x1                   	// #1
    5114:	str	x0, [sp, #32]
    5118:	ldr	x1, [sp, #32]
    511c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    5120:	cmp	x1, x0
    5124:	b.hi	51e8 <PySequence_Fast@plt+0xfa8>  // b.pmore
    5128:	ldr	x0, [sp, #24]
    512c:	ldr	x0, [x0, #40]
    5130:	ldr	x1, [x0, #24]
    5134:	ldr	x0, [sp, #24]
    5138:	ldr	x0, [x0, #40]
    513c:	add	x0, x0, #0x20
    5140:	cmp	x1, x0
    5144:	b.eq	517c <PySequence_Fast@plt+0xf3c>  // b.none
    5148:	ldr	x0, [sp, #24]
    514c:	ldr	x0, [x0, #40]
    5150:	ldr	x2, [x0, #24]
    5154:	ldr	x0, [sp, #32]
    5158:	lsl	x0, x0, #3
    515c:	mov	x1, x0
    5160:	mov	x0, x2
    5164:	bl	4060 <PyObject_Realloc@plt>
    5168:	str	x0, [sp, #40]
    516c:	ldr	x0, [sp, #40]
    5170:	cmp	x0, #0x0
    5174:	b.ne	51c0 <PySequence_Fast@plt+0xf80>  // b.any
    5178:	b	51f4 <PySequence_Fast@plt+0xfb4>
    517c:	ldr	x0, [sp, #32]
    5180:	lsl	x0, x0, #3
    5184:	bl	3e00 <PyObject_Malloc@plt>
    5188:	str	x0, [sp, #40]
    518c:	ldr	x0, [sp, #40]
    5190:	cmp	x0, #0x0
    5194:	b.eq	51f0 <PySequence_Fast@plt+0xfb0>  // b.none
    5198:	ldr	x0, [sp, #24]
    519c:	ldr	x0, [x0, #40]
    51a0:	ldr	x1, [x0, #24]
    51a4:	ldr	x0, [sp, #24]
    51a8:	ldr	x0, [x0, #40]
    51ac:	ldr	x0, [x0, #8]
    51b0:	lsl	x0, x0, #3
    51b4:	mov	x2, x0
    51b8:	ldr	x0, [sp, #40]
    51bc:	bl	3c20 <memcpy@plt>
    51c0:	ldr	x0, [sp, #24]
    51c4:	ldr	x0, [x0, #40]
    51c8:	ldr	x1, [sp, #40]
    51cc:	str	x1, [x0, #24]
    51d0:	ldr	x0, [sp, #24]
    51d4:	ldr	x0, [x0, #40]
    51d8:	ldr	x1, [sp, #32]
    51dc:	str	x1, [x0, #16]
    51e0:	mov	w0, #0x0                   	// #0
    51e4:	b	51fc <PySequence_Fast@plt+0xfbc>
    51e8:	nop
    51ec:	b	51f4 <PySequence_Fast@plt+0xfb4>
    51f0:	nop
    51f4:	bl	3d80 <PyErr_NoMemory@plt>
    51f8:	mov	w0, #0xffffffff            	// #-1
    51fc:	ldp	x29, x30, [sp], #48
    5200:	ret
    5204:	stp	x29, x30, [sp, #-32]!
    5208:	mov	x29, sp
    520c:	str	x0, [sp, #24]
    5210:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5214:	ldr	x0, [x0, #3944]
    5218:	ldr	x3, [x0]
    521c:	ldr	x0, [sp, #24]
    5220:	ldr	x0, [x0, #8]
    5224:	ldr	x0, [x0, #24]
    5228:	mov	x2, x0
    522c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5230:	add	x1, x0, #0x910
    5234:	mov	x0, x3
    5238:	bl	4180 <PyErr_Format@plt>
    523c:	nop
    5240:	ldp	x29, x30, [sp], #32
    5244:	ret
    5248:	stp	x29, x30, [sp, #-32]!
    524c:	mov	x29, sp
    5250:	str	x0, [sp, #24]
    5254:	str	x1, [sp, #16]
    5258:	ldr	x0, [sp, #16]
    525c:	ldr	x1, [x0, #8]
    5260:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    5264:	add	x0, x0, #0x320
    5268:	cmp	x1, x0
    526c:	b.eq	52a0 <PySequence_Fast@plt+0x1060>  // b.none
    5270:	ldr	x0, [sp, #16]
    5274:	ldr	x2, [x0, #8]
    5278:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    527c:	add	x1, x0, #0x320
    5280:	mov	x0, x2
    5284:	bl	4160 <PyType_IsSubtype@plt>
    5288:	cmp	w0, #0x0
    528c:	b.ne	52a0 <PySequence_Fast@plt+0x1060>  // b.any
    5290:	ldr	x0, [sp, #16]
    5294:	bl	5204 <PySequence_Fast@plt+0xfc4>
    5298:	mov	w0, #0xffffffff            	// #-1
    529c:	b	5304 <PySequence_Fast@plt+0x10c4>
    52a0:	mov	x1, #0x1                   	// #1
    52a4:	ldr	x0, [sp, #24]
    52a8:	bl	5060 <PySequence_Fast@plt+0xe20>
    52ac:	cmp	w0, #0x0
    52b0:	b.ge	52bc <PySequence_Fast@plt+0x107c>  // b.tcont
    52b4:	mov	w0, #0xffffffff            	// #-1
    52b8:	b	5304 <PySequence_Fast@plt+0x10c4>
    52bc:	ldr	x0, [sp, #16]
    52c0:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    52c4:	ldr	x0, [sp, #24]
    52c8:	ldr	x0, [x0, #40]
    52cc:	ldr	x1, [x0, #24]
    52d0:	ldr	x0, [sp, #24]
    52d4:	ldr	x0, [x0, #40]
    52d8:	ldr	x0, [x0, #8]
    52dc:	lsl	x0, x0, #3
    52e0:	add	x0, x1, x0
    52e4:	ldr	x1, [sp, #16]
    52e8:	str	x1, [x0]
    52ec:	ldr	x0, [sp, #24]
    52f0:	ldr	x0, [x0, #40]
    52f4:	ldr	x1, [x0, #8]
    52f8:	add	x1, x1, #0x1
    52fc:	str	x1, [x0, #8]
    5300:	mov	w0, #0x0                   	// #0
    5304:	ldp	x29, x30, [sp], #32
    5308:	ret
    530c:	stp	x29, x30, [sp, #-48]!
    5310:	mov	x29, sp
    5314:	str	x0, [sp, #24]
    5318:	ldr	x0, [sp, #24]
    531c:	ldr	x0, [x0, #40]
    5320:	ldr	x0, [x0]
    5324:	str	x0, [sp, #40]
    5328:	ldr	x1, [sp, #40]
    532c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5330:	ldr	x0, [x0, #3976]
    5334:	cmp	x1, x0
    5338:	b.ne	5380 <PySequence_Fast@plt+0x1140>  // b.any
    533c:	bl	4080 <PyDict_New@plt>
    5340:	str	x0, [sp, #40]
    5344:	ldr	x0, [sp, #40]
    5348:	cmp	x0, #0x0
    534c:	b.ne	5358 <PySequence_Fast@plt+0x1118>  // b.any
    5350:	mov	x0, #0x0                   	// #0
    5354:	b	5384 <PySequence_Fast@plt+0x1144>
    5358:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    535c:	ldr	x2, [x0, #3976]
    5360:	mov	w1, #0x21a                 	// #538
    5364:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5368:	add	x0, x0, #0x808
    536c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5370:	ldr	x0, [sp, #24]
    5374:	ldr	x0, [x0, #40]
    5378:	ldr	x1, [sp, #40]
    537c:	str	x1, [x0]
    5380:	ldr	x0, [sp, #40]
    5384:	ldp	x29, x30, [sp], #48
    5388:	ret
    538c:	stp	x29, x30, [sp, #-48]!
    5390:	mov	x29, sp
    5394:	str	x0, [sp, #24]
    5398:	ldr	x0, [sp, #24]
    539c:	ldr	x0, [x0, #24]
    53a0:	str	x0, [sp, #40]
    53a4:	ldr	x0, [sp, #40]
    53a8:	and	x0, x0, #0x1
    53ac:	cmp	x0, #0x0
    53b0:	b.eq	5420 <PySequence_Fast@plt+0x11e0>  // b.none
    53b4:	ldr	x0, [sp, #40]
    53b8:	and	x0, x0, #0xfffffffffffffffe
    53bc:	str	x0, [sp, #40]
    53c0:	ldr	x0, [sp, #40]
    53c4:	ldr	x1, [x0, #8]
    53c8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    53cc:	ldr	x0, [x0, #4064]
    53d0:	cmp	x1, x0
    53d4:	b.ne	5420 <PySequence_Fast@plt+0x11e0>  // b.any
    53d8:	ldr	x0, [sp, #40]
    53dc:	bl	4930 <PySequence_Fast@plt+0x6f0>
    53e0:	str	x0, [sp, #32]
    53e4:	ldr	x0, [sp, #32]
    53e8:	cmp	x0, #0x0
    53ec:	b.ne	53f8 <PySequence_Fast@plt+0x11b8>  // b.any
    53f0:	mov	x0, #0x0                   	// #0
    53f4:	b	5424 <PySequence_Fast@plt+0x11e4>
    53f8:	ldr	x0, [sp, #24]
    53fc:	ldr	x1, [sp, #32]
    5400:	str	x1, [x0, #24]
    5404:	ldr	x2, [sp, #40]
    5408:	mov	w1, #0x22f                 	// #559
    540c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5410:	add	x0, x0, #0x808
    5414:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5418:	ldr	x0, [sp, #32]
    541c:	str	x0, [sp, #40]
    5420:	ldr	x0, [sp, #40]
    5424:	ldp	x29, x30, [sp], #48
    5428:	ret
    542c:	stp	x29, x30, [sp, #-48]!
    5430:	mov	x29, sp
    5434:	str	x0, [sp, #24]
    5438:	ldr	x0, [sp, #24]
    543c:	ldr	x0, [x0, #32]
    5440:	str	x0, [sp, #40]
    5444:	ldr	x0, [sp, #40]
    5448:	and	x0, x0, #0x1
    544c:	cmp	x0, #0x0
    5450:	b.eq	54c0 <PySequence_Fast@plt+0x1280>  // b.none
    5454:	ldr	x0, [sp, #40]
    5458:	and	x0, x0, #0xfffffffffffffffe
    545c:	str	x0, [sp, #40]
    5460:	ldr	x0, [sp, #40]
    5464:	ldr	x1, [x0, #8]
    5468:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    546c:	ldr	x0, [x0, #4064]
    5470:	cmp	x1, x0
    5474:	b.ne	54c0 <PySequence_Fast@plt+0x1280>  // b.any
    5478:	ldr	x0, [sp, #40]
    547c:	bl	4930 <PySequence_Fast@plt+0x6f0>
    5480:	str	x0, [sp, #32]
    5484:	ldr	x0, [sp, #32]
    5488:	cmp	x0, #0x0
    548c:	b.ne	5498 <PySequence_Fast@plt+0x1258>  // b.any
    5490:	mov	x0, #0x0                   	// #0
    5494:	b	54c4 <PySequence_Fast@plt+0x1284>
    5498:	ldr	x0, [sp, #24]
    549c:	ldr	x1, [sp, #32]
    54a0:	str	x1, [x0, #32]
    54a4:	ldr	x2, [sp, #40]
    54a8:	mov	w1, #0x245                 	// #581
    54ac:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    54b0:	add	x0, x0, #0x808
    54b4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    54b8:	ldr	x0, [sp, #32]
    54bc:	str	x0, [sp, #40]
    54c0:	ldr	x0, [sp, #40]
    54c4:	ldp	x29, x30, [sp], #48
    54c8:	ret
    54cc:	stp	x29, x30, [sp, #-80]!
    54d0:	mov	x29, sp
    54d4:	str	x0, [sp, #40]
    54d8:	str	x1, [sp, #32]
    54dc:	str	x2, [sp, #24]
    54e0:	str	xzr, [sp, #48]
    54e4:	add	x0, sp, #0x30
    54e8:	add	x2, sp, #0x38
    54ec:	add	x1, sp, #0x40
    54f0:	mov	x6, x0
    54f4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    54f8:	ldr	x5, [x0, #3992]
    54fc:	mov	x4, x2
    5500:	mov	x3, x1
    5504:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    5508:	add	x2, x0, #0x320
    550c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5510:	add	x1, x0, #0x938
    5514:	ldr	x0, [sp, #32]
    5518:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    551c:	cmp	w0, #0x0
    5520:	b.ne	552c <PySequence_Fast@plt+0x12ec>  // b.any
    5524:	mov	x0, #0x0                   	// #0
    5528:	b	564c <PySequence_Fast@plt+0x140c>
    552c:	ldr	x0, [sp, #48]
    5530:	cmp	x0, #0x0
    5534:	b.eq	5598 <PySequence_Fast@plt+0x1358>  // b.none
    5538:	ldr	x0, [sp, #48]
    553c:	bl	4150 <PyDict_Copy@plt>
    5540:	str	x0, [sp, #48]
    5544:	ldr	x0, [sp, #48]
    5548:	cmp	x0, #0x0
    554c:	b.ne	5558 <PySequence_Fast@plt+0x1318>  // b.any
    5550:	mov	x0, #0x0                   	// #0
    5554:	b	564c <PySequence_Fast@plt+0x140c>
    5558:	ldr	x0, [sp, #24]
    555c:	cmp	x0, #0x0
    5560:	b.eq	55dc <PySequence_Fast@plt+0x139c>  // b.none
    5564:	ldr	x0, [sp, #48]
    5568:	ldr	x1, [sp, #24]
    556c:	bl	3f20 <PyDict_Update@plt>
    5570:	cmp	w0, #0x0
    5574:	b.ge	55dc <PySequence_Fast@plt+0x139c>  // b.tcont
    5578:	ldr	x0, [sp, #48]
    557c:	mov	x2, x0
    5580:	mov	w1, #0x261                 	// #609
    5584:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5588:	add	x0, x0, #0x808
    558c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5590:	mov	x0, #0x0                   	// #0
    5594:	b	564c <PySequence_Fast@plt+0x140c>
    5598:	ldr	x0, [sp, #24]
    559c:	cmp	x0, #0x0
    55a0:	b.eq	55c4 <PySequence_Fast@plt+0x1384>  // b.none
    55a4:	ldr	x0, [sp, #24]
    55a8:	bl	4d34 <PySequence_Fast@plt+0xaf4>
    55ac:	str	x0, [sp, #48]
    55b0:	ldr	x0, [sp, #48]
    55b4:	cmp	x0, #0x0
    55b8:	b.ne	55dc <PySequence_Fast@plt+0x139c>  // b.any
    55bc:	mov	x0, #0x0                   	// #0
    55c0:	b	564c <PySequence_Fast@plt+0x140c>
    55c4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    55c8:	ldr	x0, [x0, #3976]
    55cc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    55d0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    55d4:	ldr	x0, [x0, #3976]
    55d8:	str	x0, [sp, #48]
    55dc:	ldr	x0, [sp, #56]
    55e0:	ldr	x1, [sp, #48]
    55e4:	bl	4b94 <PySequence_Fast@plt+0x954>
    55e8:	str	x0, [sp, #72]
    55ec:	ldr	x0, [sp, #48]
    55f0:	mov	x2, x0
    55f4:	mov	w1, #0x270                 	// #624
    55f8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    55fc:	add	x0, x0, #0x808
    5600:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5604:	ldr	x0, [sp, #72]
    5608:	cmp	x0, #0x0
    560c:	b.ne	5618 <PySequence_Fast@plt+0x13d8>  // b.any
    5610:	mov	x0, #0x0                   	// #0
    5614:	b	564c <PySequence_Fast@plt+0x140c>
    5618:	ldr	x0, [sp, #64]
    561c:	ldr	x1, [sp, #72]
    5620:	bl	5248 <PySequence_Fast@plt+0x1008>
    5624:	cmp	w0, #0x0
    5628:	b.ge	5648 <PySequence_Fast@plt+0x1408>  // b.tcont
    562c:	ldr	x2, [sp, #72]
    5630:	mov	w1, #0x275                 	// #629
    5634:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5638:	add	x0, x0, #0x808
    563c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5640:	mov	x0, #0x0                   	// #0
    5644:	b	564c <PySequence_Fast@plt+0x140c>
    5648:	ldr	x0, [sp, #72]
    564c:	ldp	x29, x30, [sp], #80
    5650:	ret
    5654:	stp	x29, x30, [sp, #-80]!
    5658:	mov	x29, sp
    565c:	str	x0, [sp, #40]
    5660:	str	x1, [sp, #32]
    5664:	str	x2, [sp, #24]
    5668:	ldr	x0, [sp, #40]
    566c:	ldr	x0, [x0, #16]
    5670:	cmp	x0, #0x0
    5674:	b.eq	56a4 <PySequence_Fast@plt+0x1464>  // b.none
    5678:	ldr	x0, [sp, #40]
    567c:	ldr	x0, [x0, #16]
    5680:	ldr	x2, [sp, #32]
    5684:	ldr	x1, [sp, #24]
    5688:	blr	x2
    568c:	str	w0, [sp, #68]
    5690:	ldr	w0, [sp, #68]
    5694:	cmp	w0, #0x0
    5698:	b.eq	56a4 <PySequence_Fast@plt+0x1464>  // b.none
    569c:	ldr	w0, [sp, #68]
    56a0:	b	5814 <PySequence_Fast@plt+0x15d4>
    56a4:	ldr	x0, [sp, #40]
    56a8:	ldr	x0, [x0, #24]
    56ac:	and	x0, x0, #0xfffffffffffffffe
    56b0:	cmp	x0, #0x0
    56b4:	b.eq	56e8 <PySequence_Fast@plt+0x14a8>  // b.none
    56b8:	ldr	x0, [sp, #40]
    56bc:	ldr	x0, [x0, #24]
    56c0:	and	x0, x0, #0xfffffffffffffffe
    56c4:	ldr	x2, [sp, #32]
    56c8:	ldr	x1, [sp, #24]
    56cc:	blr	x2
    56d0:	str	w0, [sp, #64]
    56d4:	ldr	w0, [sp, #64]
    56d8:	cmp	w0, #0x0
    56dc:	b.eq	56e8 <PySequence_Fast@plt+0x14a8>  // b.none
    56e0:	ldr	w0, [sp, #64]
    56e4:	b	5814 <PySequence_Fast@plt+0x15d4>
    56e8:	ldr	x0, [sp, #40]
    56ec:	ldr	x0, [x0, #32]
    56f0:	and	x0, x0, #0xfffffffffffffffe
    56f4:	cmp	x0, #0x0
    56f8:	b.eq	572c <PySequence_Fast@plt+0x14ec>  // b.none
    56fc:	ldr	x0, [sp, #40]
    5700:	ldr	x0, [x0, #32]
    5704:	and	x0, x0, #0xfffffffffffffffe
    5708:	ldr	x2, [sp, #32]
    570c:	ldr	x1, [sp, #24]
    5710:	blr	x2
    5714:	str	w0, [sp, #60]
    5718:	ldr	w0, [sp, #60]
    571c:	cmp	w0, #0x0
    5720:	b.eq	572c <PySequence_Fast@plt+0x14ec>  // b.none
    5724:	ldr	w0, [sp, #60]
    5728:	b	5814 <PySequence_Fast@plt+0x15d4>
    572c:	ldr	x0, [sp, #40]
    5730:	ldr	x0, [x0, #40]
    5734:	cmp	x0, #0x0
    5738:	b.eq	5810 <PySequence_Fast@plt+0x15d0>  // b.none
    573c:	ldr	x0, [sp, #40]
    5740:	ldr	x0, [x0, #40]
    5744:	ldr	x0, [x0]
    5748:	cmp	x0, #0x0
    574c:	b.eq	5780 <PySequence_Fast@plt+0x1540>  // b.none
    5750:	ldr	x0, [sp, #40]
    5754:	ldr	x0, [x0, #40]
    5758:	ldr	x0, [x0]
    575c:	ldr	x2, [sp, #32]
    5760:	ldr	x1, [sp, #24]
    5764:	blr	x2
    5768:	str	w0, [sp, #56]
    576c:	ldr	w0, [sp, #56]
    5770:	cmp	w0, #0x0
    5774:	b.eq	5780 <PySequence_Fast@plt+0x1540>  // b.none
    5778:	ldr	w0, [sp, #56]
    577c:	b	5814 <PySequence_Fast@plt+0x15d4>
    5780:	str	xzr, [sp, #72]
    5784:	b	57f8 <PySequence_Fast@plt+0x15b8>
    5788:	ldr	x0, [sp, #40]
    578c:	ldr	x0, [x0, #40]
    5790:	ldr	x1, [x0, #24]
    5794:	ldr	x0, [sp, #72]
    5798:	lsl	x0, x0, #3
    579c:	add	x0, x1, x0
    57a0:	ldr	x0, [x0]
    57a4:	cmp	x0, #0x0
    57a8:	b.eq	57ec <PySequence_Fast@plt+0x15ac>  // b.none
    57ac:	ldr	x0, [sp, #40]
    57b0:	ldr	x0, [x0, #40]
    57b4:	ldr	x1, [x0, #24]
    57b8:	ldr	x0, [sp, #72]
    57bc:	lsl	x0, x0, #3
    57c0:	add	x0, x1, x0
    57c4:	ldr	x0, [x0]
    57c8:	ldr	x2, [sp, #32]
    57cc:	ldr	x1, [sp, #24]
    57d0:	blr	x2
    57d4:	str	w0, [sp, #52]
    57d8:	ldr	w0, [sp, #52]
    57dc:	cmp	w0, #0x0
    57e0:	b.eq	57ec <PySequence_Fast@plt+0x15ac>  // b.none
    57e4:	ldr	w0, [sp, #52]
    57e8:	b	5814 <PySequence_Fast@plt+0x15d4>
    57ec:	ldr	x0, [sp, #72]
    57f0:	add	x0, x0, #0x1
    57f4:	str	x0, [sp, #72]
    57f8:	ldr	x0, [sp, #40]
    57fc:	ldr	x0, [x0, #40]
    5800:	ldr	x0, [x0, #8]
    5804:	ldr	x1, [sp, #72]
    5808:	cmp	x1, x0
    580c:	b.lt	5788 <PySequence_Fast@plt+0x1548>  // b.tstop
    5810:	mov	w0, #0x0                   	// #0
    5814:	ldp	x29, x30, [sp], #80
    5818:	ret
    581c:	stp	x29, x30, [sp, #-48]!
    5820:	mov	x29, sp
    5824:	str	x0, [sp, #24]
    5828:	ldr	x0, [sp, #24]
    582c:	ldr	x0, [x0, #16]
    5830:	str	x0, [sp, #40]
    5834:	ldr	x0, [sp, #40]
    5838:	cmp	x0, #0x0
    583c:	b.eq	585c <PySequence_Fast@plt+0x161c>  // b.none
    5840:	ldr	x0, [sp, #24]
    5844:	str	xzr, [x0, #16]
    5848:	ldr	x2, [sp, #40]
    584c:	mov	w1, #0x290                 	// #656
    5850:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5854:	add	x0, x0, #0x808
    5858:	bl	4408 <PySequence_Fast@plt+0x1c8>
    585c:	ldr	x0, [sp, #24]
    5860:	add	x0, x0, #0x18
    5864:	bl	465c <PySequence_Fast@plt+0x41c>
    5868:	ldr	x0, [sp, #24]
    586c:	add	x0, x0, #0x20
    5870:	bl	465c <PySequence_Fast@plt+0x41c>
    5874:	ldr	x0, [sp, #24]
    5878:	bl	4b4c <PySequence_Fast@plt+0x90c>
    587c:	mov	w0, #0x0                   	// #0
    5880:	ldp	x29, x30, [sp], #48
    5884:	ret
    5888:	stp	x29, x30, [sp, #-48]!
    588c:	mov	x29, sp
    5890:	str	x0, [sp, #24]
    5894:	ldr	x0, [sp, #24]
    5898:	bl	4220 <PyObject_GC_UnTrack@plt>
    589c:	str	xzr, [sp, #40]
    58a0:	ldr	x0, [sp, #24]
    58a4:	ldr	x0, [x0, #8]
    58a8:	ldr	x1, [x0, #48]
    58ac:	adrp	x0, 5000 <PySequence_Fast@plt+0xdc0>
    58b0:	add	x0, x0, #0x888
    58b4:	cmp	x1, x0
    58b8:	b.ne	58f8 <PySequence_Fast@plt+0x16b8>  // b.any
    58bc:	bl	3f50 <PyThreadState_Get@plt>
    58c0:	str	x0, [sp, #40]
    58c4:	ldr	x0, [sp, #40]
    58c8:	ldr	w0, [x0, #184]
    58cc:	cmp	w0, #0x31
    58d0:	b.le	58e4 <PySequence_Fast@plt+0x16a4>
    58d4:	ldr	x0, [sp, #24]
    58d8:	bl	4040 <_PyTrash_thread_deposit_object@plt>
    58dc:	nop
    58e0:	b	5970 <PySequence_Fast@plt+0x1730>
    58e4:	ldr	x0, [sp, #40]
    58e8:	ldr	w0, [x0, #184]
    58ec:	add	w1, w0, #0x1
    58f0:	ldr	x0, [sp, #40]
    58f4:	str	w1, [x0, #184]
    58f8:	ldr	x0, [sp, #24]
    58fc:	ldr	x0, [x0, #48]
    5900:	cmp	x0, #0x0
    5904:	b.eq	5910 <PySequence_Fast@plt+0x16d0>  // b.none
    5908:	ldr	x0, [sp, #24]
    590c:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    5910:	ldr	x0, [sp, #24]
    5914:	bl	581c <PySequence_Fast@plt+0x15dc>
    5918:	ldr	x0, [sp, #24]
    591c:	ldr	x0, [x0, #8]
    5920:	ldr	x1, [x0, #320]
    5924:	ldr	x0, [sp, #24]
    5928:	blr	x1
    592c:	ldr	x0, [sp, #40]
    5930:	cmp	x0, #0x0
    5934:	b.eq	5970 <PySequence_Fast@plt+0x1730>  // b.none
    5938:	ldr	x0, [sp, #40]
    593c:	ldr	w0, [x0, #184]
    5940:	sub	w1, w0, #0x1
    5944:	ldr	x0, [sp, #40]
    5948:	str	w1, [x0, #184]
    594c:	ldr	x0, [sp, #40]
    5950:	ldr	x0, [x0, #192]
    5954:	cmp	x0, #0x0
    5958:	b.eq	5970 <PySequence_Fast@plt+0x1730>  // b.none
    595c:	ldr	x0, [sp, #40]
    5960:	ldr	w0, [x0, #184]
    5964:	cmp	w0, #0x0
    5968:	b.gt	5970 <PySequence_Fast@plt+0x1730>
    596c:	bl	41c0 <_PyTrash_thread_destroy_chain@plt>
    5970:	nop
    5974:	ldp	x29, x30, [sp], #48
    5978:	ret
    597c:	stp	x29, x30, [sp, #-32]!
    5980:	mov	x29, sp
    5984:	str	x0, [sp, #24]
    5988:	str	x1, [sp, #16]
    598c:	ldr	x1, [sp, #16]
    5990:	ldr	x0, [sp, #24]
    5994:	bl	5248 <PySequence_Fast@plt+0x1008>
    5998:	cmp	w0, #0x0
    599c:	b.ge	59a8 <PySequence_Fast@plt+0x1768>  // b.tcont
    59a0:	mov	x0, #0x0                   	// #0
    59a4:	b	59bc <PySequence_Fast@plt+0x177c>
    59a8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    59ac:	ldr	x0, [x0, #3976]
    59b0:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    59b4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    59b8:	ldr	x0, [x0, #3976]
    59bc:	ldp	x29, x30, [sp], #32
    59c0:	ret
    59c4:	stp	x29, x30, [sp, #-32]!
    59c8:	mov	x29, sp
    59cc:	str	x0, [sp, #24]
    59d0:	ldr	x0, [sp, #24]
    59d4:	bl	4b4c <PySequence_Fast@plt+0x90c>
    59d8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    59dc:	ldr	x0, [x0, #3976]
    59e0:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    59e4:	ldr	x0, [sp, #24]
    59e8:	add	x2, x0, #0x18
    59ec:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    59f0:	ldr	x1, [x0, #3976]
    59f4:	mov	x0, x2
    59f8:	bl	4610 <PySequence_Fast@plt+0x3d0>
    59fc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5a00:	ldr	x0, [x0, #3976]
    5a04:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5a08:	ldr	x0, [sp, #24]
    5a0c:	add	x2, x0, #0x20
    5a10:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5a14:	ldr	x1, [x0, #3976]
    5a18:	mov	x0, x2
    5a1c:	bl	4610 <PySequence_Fast@plt+0x3d0>
    5a20:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5a24:	ldr	x0, [x0, #3976]
    5a28:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5a2c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5a30:	ldr	x0, [x0, #3976]
    5a34:	ldp	x29, x30, [sp], #32
    5a38:	ret
    5a3c:	stp	x29, x30, [sp, #-48]!
    5a40:	mov	x29, sp
    5a44:	str	x0, [sp, #24]
    5a48:	ldr	x0, [sp, #24]
    5a4c:	ldr	x2, [x0, #16]
    5a50:	ldr	x0, [sp, #24]
    5a54:	ldr	x0, [x0, #40]
    5a58:	cmp	x0, #0x0
    5a5c:	b.eq	5a70 <PySequence_Fast@plt+0x1830>  // b.none
    5a60:	ldr	x0, [sp, #24]
    5a64:	ldr	x0, [x0, #40]
    5a68:	ldr	x0, [x0]
    5a6c:	b	5a78 <PySequence_Fast@plt+0x1838>
    5a70:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5a74:	ldr	x0, [x0, #3976]
    5a78:	mov	x1, x0
    5a7c:	mov	x0, x2
    5a80:	bl	4b94 <PySequence_Fast@plt+0x954>
    5a84:	str	x0, [sp, #32]
    5a88:	ldr	x0, [sp, #32]
    5a8c:	cmp	x0, #0x0
    5a90:	b.ne	5a9c <PySequence_Fast@plt+0x185c>  // b.any
    5a94:	mov	x0, #0x0                   	// #0
    5a98:	b	5be0 <PySequence_Fast@plt+0x19a0>
    5a9c:	ldr	x0, [sp, #24]
    5aa0:	ldr	x0, [x0, #24]
    5aa4:	and	x0, x0, #0xfffffffffffffffe
    5aa8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5aac:	ldr	x0, [sp, #32]
    5ab0:	add	x2, x0, #0x18
    5ab4:	ldr	x0, [sp, #24]
    5ab8:	ldr	x0, [x0, #24]
    5abc:	mov	x1, x0
    5ac0:	mov	x0, x2
    5ac4:	bl	4610 <PySequence_Fast@plt+0x3d0>
    5ac8:	ldr	x0, [sp, #24]
    5acc:	ldr	x0, [x0, #32]
    5ad0:	and	x0, x0, #0xfffffffffffffffe
    5ad4:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5ad8:	ldr	x0, [sp, #32]
    5adc:	add	x2, x0, #0x20
    5ae0:	ldr	x0, [sp, #24]
    5ae4:	ldr	x0, [x0, #32]
    5ae8:	mov	x1, x0
    5aec:	mov	x0, x2
    5af0:	bl	4610 <PySequence_Fast@plt+0x3d0>
    5af4:	ldr	x0, [sp, #24]
    5af8:	ldr	x0, [x0, #40]
    5afc:	cmp	x0, #0x0
    5b00:	b.eq	5bdc <PySequence_Fast@plt+0x199c>  // b.none
    5b04:	ldr	x0, [sp, #24]
    5b08:	ldr	x0, [x0, #40]
    5b0c:	ldr	x0, [x0, #8]
    5b10:	mov	x1, x0
    5b14:	ldr	x0, [sp, #32]
    5b18:	bl	5060 <PySequence_Fast@plt+0xe20>
    5b1c:	cmp	w0, #0x0
    5b20:	b.ge	5b40 <PySequence_Fast@plt+0x1900>  // b.tcont
    5b24:	ldr	x2, [sp, #32]
    5b28:	mov	w1, #0x2f0                 	// #752
    5b2c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5b30:	add	x0, x0, #0x808
    5b34:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5b38:	mov	x0, #0x0                   	// #0
    5b3c:	b	5be0 <PySequence_Fast@plt+0x19a0>
    5b40:	str	xzr, [sp, #40]
    5b44:	b	5bac <PySequence_Fast@plt+0x196c>
    5b48:	ldr	x0, [sp, #24]
    5b4c:	ldr	x0, [x0, #40]
    5b50:	ldr	x1, [x0, #24]
    5b54:	ldr	x0, [sp, #40]
    5b58:	lsl	x0, x0, #3
    5b5c:	add	x0, x1, x0
    5b60:	ldr	x0, [x0]
    5b64:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5b68:	ldr	x0, [sp, #24]
    5b6c:	ldr	x0, [x0, #40]
    5b70:	ldr	x1, [x0, #24]
    5b74:	ldr	x0, [sp, #40]
    5b78:	lsl	x0, x0, #3
    5b7c:	add	x1, x1, x0
    5b80:	ldr	x0, [sp, #32]
    5b84:	ldr	x0, [x0, #40]
    5b88:	ldr	x2, [x0, #24]
    5b8c:	ldr	x0, [sp, #40]
    5b90:	lsl	x0, x0, #3
    5b94:	add	x0, x2, x0
    5b98:	ldr	x1, [x1]
    5b9c:	str	x1, [x0]
    5ba0:	ldr	x0, [sp, #40]
    5ba4:	add	x0, x0, #0x1
    5ba8:	str	x0, [sp, #40]
    5bac:	ldr	x0, [sp, #24]
    5bb0:	ldr	x0, [x0, #40]
    5bb4:	ldr	x0, [x0, #8]
    5bb8:	ldr	x1, [sp, #40]
    5bbc:	cmp	x1, x0
    5bc0:	b.lt	5b48 <PySequence_Fast@plt+0x1908>  // b.tstop
    5bc4:	ldr	x0, [sp, #24]
    5bc8:	ldr	x1, [x0, #40]
    5bcc:	ldr	x0, [sp, #32]
    5bd0:	ldr	x0, [x0, #40]
    5bd4:	ldr	x1, [x1, #8]
    5bd8:	str	x1, [x0, #8]
    5bdc:	ldr	x0, [sp, #32]
    5be0:	ldp	x29, x30, [sp], #48
    5be4:	ret
    5be8:	stp	x29, x30, [sp, #-96]!
    5bec:	mov	x29, sp
    5bf0:	str	x0, [sp, #24]
    5bf4:	str	x1, [sp, #16]
    5bf8:	ldr	x0, [sp, #24]
    5bfc:	ldr	x0, [x0, #16]
    5c00:	ldr	x1, [sp, #16]
    5c04:	bl	5f4c <PySequence_Fast@plt+0x1d0c>
    5c08:	str	x0, [sp, #72]
    5c0c:	ldr	x0, [sp, #72]
    5c10:	cmp	x0, #0x0
    5c14:	b.ne	5c20 <PySequence_Fast@plt+0x19e0>  // b.any
    5c18:	mov	x0, #0x0                   	// #0
    5c1c:	b	5f44 <PySequence_Fast@plt+0x1d04>
    5c20:	ldr	x0, [sp, #24]
    5c24:	ldr	x0, [x0, #40]
    5c28:	cmp	x0, #0x0
    5c2c:	b.eq	5c70 <PySequence_Fast@plt+0x1a30>  // b.none
    5c30:	ldr	x0, [sp, #24]
    5c34:	ldr	x0, [x0, #40]
    5c38:	ldr	x0, [x0]
    5c3c:	ldr	x1, [sp, #16]
    5c40:	bl	5f4c <PySequence_Fast@plt+0x1d0c>
    5c44:	str	x0, [sp, #80]
    5c48:	ldr	x0, [sp, #80]
    5c4c:	cmp	x0, #0x0
    5c50:	b.ne	5c88 <PySequence_Fast@plt+0x1a48>  // b.any
    5c54:	ldr	x2, [sp, #72]
    5c58:	mov	w1, #0x31e                 	// #798
    5c5c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5c60:	add	x0, x0, #0x808
    5c64:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5c68:	mov	x0, #0x0                   	// #0
    5c6c:	b	5f44 <PySequence_Fast@plt+0x1d04>
    5c70:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5c74:	ldr	x0, [x0, #3976]
    5c78:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5c7c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5c80:	ldr	x0, [x0, #3976]
    5c84:	str	x0, [sp, #80]
    5c88:	ldr	x1, [sp, #80]
    5c8c:	ldr	x0, [sp, #72]
    5c90:	bl	4b94 <PySequence_Fast@plt+0x954>
    5c94:	str	x0, [sp, #64]
    5c98:	ldr	x2, [sp, #72]
    5c9c:	mov	w1, #0x328                 	// #808
    5ca0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5ca4:	add	x0, x0, #0x808
    5ca8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5cac:	ldr	x2, [sp, #80]
    5cb0:	mov	w1, #0x329                 	// #809
    5cb4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5cb8:	add	x0, x0, #0x808
    5cbc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5cc0:	ldr	x0, [sp, #64]
    5cc4:	cmp	x0, #0x0
    5cc8:	b.ne	5cd4 <PySequence_Fast@plt+0x1a94>  // b.any
    5ccc:	mov	x0, #0x0                   	// #0
    5cd0:	b	5f44 <PySequence_Fast@plt+0x1d04>
    5cd4:	ldr	x0, [sp, #24]
    5cd8:	ldr	x0, [x0, #24]
    5cdc:	and	x0, x0, #0xfffffffffffffffe
    5ce0:	ldr	x1, [sp, #16]
    5ce4:	bl	5f4c <PySequence_Fast@plt+0x1d0c>
    5ce8:	str	x0, [sp, #56]
    5cec:	ldr	x0, [sp, #56]
    5cf0:	cmp	x0, #0x0
    5cf4:	b.eq	5f08 <PySequence_Fast@plt+0x1cc8>  // b.none
    5cf8:	ldr	x0, [sp, #64]
    5cfc:	add	x2, x0, #0x18
    5d00:	ldr	x0, [sp, #56]
    5d04:	and	x1, x0, #0xfffffffffffffffe
    5d08:	ldr	x0, [sp, #24]
    5d0c:	ldr	x0, [x0, #24]
    5d10:	and	x0, x0, #0x1
    5d14:	orr	x0, x1, x0
    5d18:	mov	x1, x0
    5d1c:	mov	x0, x2
    5d20:	bl	4610 <PySequence_Fast@plt+0x3d0>
    5d24:	ldr	x0, [sp, #24]
    5d28:	ldr	x0, [x0, #32]
    5d2c:	and	x0, x0, #0xfffffffffffffffe
    5d30:	ldr	x1, [sp, #16]
    5d34:	bl	5f4c <PySequence_Fast@plt+0x1d0c>
    5d38:	str	x0, [sp, #48]
    5d3c:	ldr	x0, [sp, #48]
    5d40:	cmp	x0, #0x0
    5d44:	b.eq	5f10 <PySequence_Fast@plt+0x1cd0>  // b.none
    5d48:	ldr	x0, [sp, #64]
    5d4c:	add	x2, x0, #0x20
    5d50:	ldr	x0, [sp, #48]
    5d54:	and	x1, x0, #0xfffffffffffffffe
    5d58:	ldr	x0, [sp, #24]
    5d5c:	ldr	x0, [x0, #32]
    5d60:	and	x0, x0, #0x1
    5d64:	orr	x0, x1, x0
    5d68:	mov	x1, x0
    5d6c:	mov	x0, x2
    5d70:	bl	4610 <PySequence_Fast@plt+0x3d0>
    5d74:	ldr	x0, [sp, #24]
    5d78:	ldr	x0, [x0, #40]
    5d7c:	cmp	x0, #0x0
    5d80:	b.eq	5eb0 <PySequence_Fast@plt+0x1c70>  // b.none
    5d84:	ldr	x0, [sp, #24]
    5d88:	ldr	x0, [x0, #40]
    5d8c:	ldr	x0, [x0, #8]
    5d90:	mov	x1, x0
    5d94:	ldr	x0, [sp, #64]
    5d98:	bl	5060 <PySequence_Fast@plt+0xe20>
    5d9c:	cmp	w0, #0x0
    5da0:	b.lt	5f18 <PySequence_Fast@plt+0x1cd8>  // b.tstop
    5da4:	str	xzr, [sp, #88]
    5da8:	b	5e80 <PySequence_Fast@plt+0x1c40>
    5dac:	ldr	x0, [sp, #24]
    5db0:	ldr	x0, [x0, #40]
    5db4:	ldr	x1, [x0, #24]
    5db8:	ldr	x0, [sp, #88]
    5dbc:	lsl	x0, x0, #3
    5dc0:	add	x0, x1, x0
    5dc4:	ldr	x0, [x0]
    5dc8:	ldr	x1, [sp, #16]
    5dcc:	bl	5f4c <PySequence_Fast@plt+0x1d0c>
    5dd0:	str	x0, [sp, #40]
    5dd4:	ldr	x0, [sp, #40]
    5dd8:	cmp	x0, #0x0
    5ddc:	b.eq	5e18 <PySequence_Fast@plt+0x1bd8>  // b.none
    5de0:	ldr	x0, [sp, #40]
    5de4:	ldr	x1, [x0, #8]
    5de8:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    5dec:	add	x0, x0, #0x320
    5df0:	cmp	x1, x0
    5df4:	b.eq	5e54 <PySequence_Fast@plt+0x1c14>  // b.none
    5df8:	ldr	x0, [sp, #40]
    5dfc:	ldr	x2, [x0, #8]
    5e00:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    5e04:	add	x1, x0, #0x320
    5e08:	mov	x0, x2
    5e0c:	bl	4160 <PyType_IsSubtype@plt>
    5e10:	cmp	w0, #0x0
    5e14:	b.ne	5e54 <PySequence_Fast@plt+0x1c14>  // b.any
    5e18:	ldr	x0, [sp, #40]
    5e1c:	cmp	x0, #0x0
    5e20:	b.eq	5e40 <PySequence_Fast@plt+0x1c00>  // b.none
    5e24:	ldr	x0, [sp, #40]
    5e28:	bl	5204 <PySequence_Fast@plt+0xfc4>
    5e2c:	ldr	x2, [sp, #40]
    5e30:	mov	w1, #0x342                 	// #834
    5e34:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5e38:	add	x0, x0, #0x808
    5e3c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5e40:	ldr	x0, [sp, #64]
    5e44:	ldr	x0, [x0, #40]
    5e48:	ldr	x1, [sp, #88]
    5e4c:	str	x1, [x0, #8]
    5e50:	b	5f2c <PySequence_Fast@plt+0x1cec>
    5e54:	ldr	x0, [sp, #64]
    5e58:	ldr	x0, [x0, #40]
    5e5c:	ldr	x1, [x0, #24]
    5e60:	ldr	x0, [sp, #88]
    5e64:	lsl	x0, x0, #3
    5e68:	add	x0, x1, x0
    5e6c:	ldr	x1, [sp, #40]
    5e70:	str	x1, [x0]
    5e74:	ldr	x0, [sp, #88]
    5e78:	add	x0, x0, #0x1
    5e7c:	str	x0, [sp, #88]
    5e80:	ldr	x0, [sp, #24]
    5e84:	ldr	x0, [x0, #40]
    5e88:	ldr	x0, [x0, #8]
    5e8c:	ldr	x1, [sp, #88]
    5e90:	cmp	x1, x0
    5e94:	b.lt	5dac <PySequence_Fast@plt+0x1b6c>  // b.tstop
    5e98:	ldr	x0, [sp, #24]
    5e9c:	ldr	x1, [x0, #40]
    5ea0:	ldr	x0, [sp, #64]
    5ea4:	ldr	x0, [x0, #40]
    5ea8:	ldr	x1, [x1, #8]
    5eac:	str	x1, [x0, #8]
    5eb0:	ldr	x0, [sp, #24]
    5eb4:	bl	3e70 <PyLong_FromSsize_t@plt>
    5eb8:	str	x0, [sp, #32]
    5ebc:	ldr	x0, [sp, #32]
    5ec0:	cmp	x0, #0x0
    5ec4:	b.eq	5f20 <PySequence_Fast@plt+0x1ce0>  // b.none
    5ec8:	ldr	x2, [sp, #64]
    5ecc:	ldr	x1, [sp, #32]
    5ed0:	ldr	x0, [sp, #16]
    5ed4:	bl	4140 <PyDict_SetItem@plt>
    5ed8:	sxtw	x0, w0
    5edc:	str	x0, [sp, #88]
    5ee0:	ldr	x2, [sp, #32]
    5ee4:	mov	w1, #0x355                 	// #853
    5ee8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5eec:	add	x0, x0, #0x808
    5ef0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5ef4:	ldr	x0, [sp, #88]
    5ef8:	cmp	x0, #0x0
    5efc:	b.lt	5f28 <PySequence_Fast@plt+0x1ce8>  // b.tstop
    5f00:	ldr	x0, [sp, #64]
    5f04:	b	5f44 <PySequence_Fast@plt+0x1d04>
    5f08:	nop
    5f0c:	b	5f2c <PySequence_Fast@plt+0x1cec>
    5f10:	nop
    5f14:	b	5f2c <PySequence_Fast@plt+0x1cec>
    5f18:	nop
    5f1c:	b	5f2c <PySequence_Fast@plt+0x1cec>
    5f20:	nop
    5f24:	b	5f2c <PySequence_Fast@plt+0x1cec>
    5f28:	nop
    5f2c:	ldr	x2, [sp, #64]
    5f30:	mov	w1, #0x35d                 	// #861
    5f34:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    5f38:	add	x0, x0, #0x808
    5f3c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    5f40:	mov	x0, #0x0                   	// #0
    5f44:	ldp	x29, x30, [sp], #96
    5f48:	ret
    5f4c:	stp	x29, x30, [sp, #-96]!
    5f50:	mov	x29, sp
    5f54:	str	x0, [sp, #24]
    5f58:	str	x1, [sp, #16]
    5f5c:	ldr	x1, [sp, #24]
    5f60:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5f64:	ldr	x0, [x0, #3976]
    5f68:	cmp	x1, x0
    5f6c:	b.eq	5f88 <PySequence_Fast@plt+0x1d48>  // b.none
    5f70:	ldr	x0, [sp, #24]
    5f74:	ldr	x1, [x0, #8]
    5f78:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5f7c:	ldr	x0, [x0, #4032]
    5f80:	cmp	x1, x0
    5f84:	b.ne	5f98 <PySequence_Fast@plt+0x1d58>  // b.any
    5f88:	ldr	x0, [sp, #24]
    5f8c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    5f90:	ldr	x0, [sp, #24]
    5f94:	b	60dc <PySequence_Fast@plt+0x1e9c>
    5f98:	ldr	x0, [sp, #24]
    5f9c:	ldr	x0, [x0]
    5fa0:	cmp	x0, #0x1
    5fa4:	b.ne	6070 <PySequence_Fast@plt+0x1e30>  // b.any
    5fa8:	ldr	x0, [sp, #24]
    5fac:	ldr	x1, [x0, #8]
    5fb0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5fb4:	ldr	x0, [x0, #3992]
    5fb8:	cmp	x1, x0
    5fbc:	b.ne	6048 <PySequence_Fast@plt+0x1e08>  // b.any
    5fc0:	str	xzr, [sp, #40]
    5fc4:	mov	w0, #0x1                   	// #1
    5fc8:	str	w0, [sp, #92]
    5fcc:	b	6008 <PySequence_Fast@plt+0x1dc8>
    5fd0:	ldr	x0, [sp, #56]
    5fd4:	ldr	x1, [x0, #8]
    5fd8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5fdc:	ldr	x0, [x0, #4032]
    5fe0:	cmp	x1, x0
    5fe4:	b.ne	6000 <PySequence_Fast@plt+0x1dc0>  // b.any
    5fe8:	ldr	x0, [sp, #48]
    5fec:	ldr	x1, [x0, #8]
    5ff0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    5ff4:	ldr	x0, [x0, #4032]
    5ff8:	cmp	x1, x0
    5ffc:	b.eq	6008 <PySequence_Fast@plt+0x1dc8>  // b.none
    6000:	str	wzr, [sp, #92]
    6004:	b	6030 <PySequence_Fast@plt+0x1df0>
    6008:	add	x2, sp, #0x30
    600c:	add	x1, sp, #0x38
    6010:	add	x0, sp, #0x28
    6014:	mov	x3, x2
    6018:	mov	x2, x1
    601c:	mov	x1, x0
    6020:	ldr	x0, [sp, #24]
    6024:	bl	40b0 <PyDict_Next@plt>
    6028:	cmp	w0, #0x0
    602c:	b.ne	5fd0 <PySequence_Fast@plt+0x1d90>  // b.any
    6030:	ldr	w0, [sp, #92]
    6034:	cmp	w0, #0x0
    6038:	b.eq	6070 <PySequence_Fast@plt+0x1e30>  // b.none
    603c:	ldr	x0, [sp, #24]
    6040:	bl	4150 <PyDict_Copy@plt>
    6044:	b	60dc <PySequence_Fast@plt+0x1e9c>
    6048:	ldr	x0, [sp, #24]
    604c:	ldr	x1, [x0, #8]
    6050:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    6054:	add	x0, x0, #0x320
    6058:	cmp	x1, x0
    605c:	b.ne	6070 <PySequence_Fast@plt+0x1e30>  // b.any
    6060:	ldr	x1, [sp, #16]
    6064:	ldr	x0, [sp, #24]
    6068:	bl	5be8 <PySequence_Fast@plt+0x19a8>
    606c:	b	60dc <PySequence_Fast@plt+0x1e9c>
    6070:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    6074:	add	x0, x0, #0x9b8
    6078:	bl	3fc0 <PyState_FindModule@plt>
    607c:	bl	3e10 <PyModule_GetState@plt>
    6080:	str	x0, [sp, #80]
    6084:	ldr	x0, [sp, #80]
    6088:	ldr	x0, [x0, #8]
    608c:	cmp	x0, #0x0
    6090:	b.ne	60b8 <PySequence_Fast@plt+0x1e78>  // b.any
    6094:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6098:	ldr	x0, [x0, #3920]
    609c:	ldr	x2, [x0]
    60a0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    60a4:	add	x1, x0, #0x950
    60a8:	mov	x0, x2
    60ac:	bl	3de0 <PyErr_SetString@plt>
    60b0:	mov	x0, #0x0                   	// #0
    60b4:	b	60dc <PySequence_Fast@plt+0x1e9c>
    60b8:	ldr	x0, [sp, #24]
    60bc:	str	x0, [sp, #64]
    60c0:	ldr	x0, [sp, #16]
    60c4:	str	x0, [sp, #72]
    60c8:	ldr	x0, [sp, #80]
    60cc:	ldr	x0, [x0, #8]
    60d0:	add	x1, sp, #0x40
    60d4:	mov	x2, #0x2                   	// #2
    60d8:	bl	45b4 <PySequence_Fast@plt+0x374>
    60dc:	ldp	x29, x30, [sp], #96
    60e0:	ret
    60e4:	sub	sp, sp, #0x20
    60e8:	str	x0, [sp, #8]
    60ec:	ldr	x0, [sp, #8]
    60f0:	ldr	x0, [x0, #8]
    60f4:	ldr	x0, [x0, #32]
    60f8:	str	x0, [sp, #24]
    60fc:	ldr	x0, [sp, #8]
    6100:	ldr	x0, [x0, #40]
    6104:	cmp	x0, #0x0
    6108:	b.eq	6154 <PySequence_Fast@plt+0x1f14>  // b.none
    610c:	ldr	x0, [sp, #24]
    6110:	add	x0, x0, #0x40
    6114:	str	x0, [sp, #24]
    6118:	ldr	x0, [sp, #8]
    611c:	ldr	x0, [x0, #40]
    6120:	ldr	x1, [x0, #24]
    6124:	ldr	x0, [sp, #8]
    6128:	ldr	x0, [x0, #40]
    612c:	add	x0, x0, #0x20
    6130:	cmp	x1, x0
    6134:	b.eq	6154 <PySequence_Fast@plt+0x1f14>  // b.none
    6138:	ldr	x0, [sp, #8]
    613c:	ldr	x0, [x0, #40]
    6140:	ldr	x0, [x0, #16]
    6144:	lsl	x1, x0, #3
    6148:	ldr	x0, [sp, #24]
    614c:	add	x0, x1, x0
    6150:	str	x0, [sp, #24]
    6154:	ldr	x0, [sp, #24]
    6158:	add	sp, sp, #0x20
    615c:	ret
    6160:	sub	sp, sp, #0x70
    6164:	stp	x29, x30, [sp, #32]
    6168:	add	x29, sp, #0x20
    616c:	str	x0, [sp, #56]
    6170:	str	xzr, [sp, #96]
    6174:	ldr	x0, [sp, #56]
    6178:	ldr	x0, [x0, #40]
    617c:	cmp	x0, #0x0
    6180:	b.eq	6194 <PySequence_Fast@plt+0x1f54>  // b.none
    6184:	ldr	x0, [sp, #56]
    6188:	ldr	x0, [x0, #40]
    618c:	ldr	x0, [x0, #8]
    6190:	b	6198 <PySequence_Fast@plt+0x1f58>
    6194:	mov	x0, #0x0                   	// #0
    6198:	bl	3c50 <PyList_New@plt>
    619c:	str	x0, [sp, #88]
    61a0:	ldr	x0, [sp, #88]
    61a4:	cmp	x0, #0x0
    61a8:	b.ne	61b4 <PySequence_Fast@plt+0x1f74>  // b.any
    61ac:	mov	x0, #0x0                   	// #0
    61b0:	b	63f4 <PySequence_Fast@plt+0x21b4>
    61b4:	str	xzr, [sp, #104]
    61b8:	b	620c <PySequence_Fast@plt+0x1fcc>
    61bc:	ldr	x0, [sp, #56]
    61c0:	ldr	x0, [x0, #40]
    61c4:	ldr	x1, [x0, #24]
    61c8:	ldr	x0, [sp, #104]
    61cc:	lsl	x0, x0, #3
    61d0:	add	x0, x1, x0
    61d4:	ldr	x0, [x0]
    61d8:	str	x0, [sp, #72]
    61dc:	ldr	x0, [sp, #72]
    61e0:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    61e4:	ldr	x0, [sp, #88]
    61e8:	ldr	x1, [x0, #24]
    61ec:	ldr	x0, [sp, #104]
    61f0:	lsl	x0, x0, #3
    61f4:	add	x0, x1, x0
    61f8:	ldr	x1, [sp, #72]
    61fc:	str	x1, [x0]
    6200:	ldr	x0, [sp, #104]
    6204:	add	x0, x0, #0x1
    6208:	str	x0, [sp, #104]
    620c:	ldr	x0, [sp, #88]
    6210:	ldr	x0, [x0, #16]
    6214:	ldr	x1, [sp, #104]
    6218:	cmp	x1, x0
    621c:	b.lt	61bc <PySequence_Fast@plt+0x1f7c>  // b.tstop
    6220:	ldr	x0, [sp, #56]
    6224:	ldr	x0, [x0, #40]
    6228:	cmp	x0, #0x0
    622c:	b.eq	624c <PySequence_Fast@plt+0x200c>  // b.none
    6230:	ldr	x0, [sp, #56]
    6234:	ldr	x0, [x0, #40]
    6238:	ldr	x1, [x0]
    623c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6240:	ldr	x0, [x0, #3976]
    6244:	cmp	x1, x0
    6248:	b.ne	6254 <PySequence_Fast@plt+0x2014>  // b.any
    624c:	mov	w0, #0x1                   	// #1
    6250:	b	6258 <PySequence_Fast@plt+0x2018>
    6254:	mov	w0, #0x0                   	// #0
    6258:	sxtw	x0, w0
    625c:	str	x0, [sp, #80]
    6260:	ldr	x0, [sp, #80]
    6264:	cmp	x0, #0x0
    6268:	b.eq	62e0 <PySequence_Fast@plt+0x20a0>  // b.none
    626c:	ldr	x0, [sp, #56]
    6270:	ldr	x1, [x0, #16]
    6274:	ldr	x0, [sp, #56]
    6278:	ldr	x0, [x0, #24]
    627c:	and	x0, x0, #0xfffffffffffffffe
    6280:	mov	x2, x0
    6284:	ldr	x0, [sp, #56]
    6288:	ldr	x0, [x0, #32]
    628c:	and	x0, x0, #0xfffffffffffffffe
    6290:	str	x0, [sp, #8]
    6294:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6298:	add	x0, x0, #0x9a0
    629c:	str	x0, [sp]
    62a0:	mov	x7, x2
    62a4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    62a8:	add	x6, x0, #0x970
    62ac:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    62b0:	add	x5, x0, #0x8d8
    62b4:	ldr	x4, [sp, #88]
    62b8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    62bc:	add	x3, x0, #0x978
    62c0:	mov	x2, x1
    62c4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    62c8:	add	x1, x0, #0x988
    62cc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    62d0:	add	x0, x0, #0x990
    62d4:	bl	4190 <_Py_BuildValue_SizeT@plt>
    62d8:	str	x0, [sp, #96]
    62dc:	b	6360 <PySequence_Fast@plt+0x2120>
    62e0:	ldr	x0, [sp, #56]
    62e4:	ldr	x1, [x0, #16]
    62e8:	ldr	x0, [sp, #56]
    62ec:	ldr	x0, [x0, #40]
    62f0:	ldr	x2, [x0]
    62f4:	ldr	x0, [sp, #56]
    62f8:	ldr	x0, [x0, #24]
    62fc:	and	x0, x0, #0xfffffffffffffffe
    6300:	mov	x3, x0
    6304:	ldr	x0, [sp, #56]
    6308:	ldr	x0, [x0, #32]
    630c:	and	x0, x0, #0xfffffffffffffffe
    6310:	str	x0, [sp, #16]
    6314:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6318:	add	x0, x0, #0x9a0
    631c:	str	x0, [sp, #8]
    6320:	str	x3, [sp]
    6324:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6328:	add	x7, x0, #0x970
    632c:	mov	x6, x2
    6330:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6334:	add	x5, x0, #0x8d8
    6338:	ldr	x4, [sp, #88]
    633c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6340:	add	x3, x0, #0x978
    6344:	mov	x2, x1
    6348:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    634c:	add	x1, x0, #0x988
    6350:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6354:	add	x0, x0, #0x9a8
    6358:	bl	4190 <_Py_BuildValue_SizeT@plt>
    635c:	str	x0, [sp, #96]
    6360:	ldr	x0, [sp, #96]
    6364:	cmp	x0, #0x0
    6368:	b.eq	6388 <PySequence_Fast@plt+0x2148>  // b.none
    636c:	ldr	x2, [sp, #88]
    6370:	mov	w1, #0x3d7                 	// #983
    6374:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6378:	add	x0, x0, #0x808
    637c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    6380:	ldr	x0, [sp, #96]
    6384:	b	63f4 <PySequence_Fast@plt+0x21b4>
    6388:	str	xzr, [sp, #104]
    638c:	b	63c8 <PySequence_Fast@plt+0x2188>
    6390:	ldr	x0, [sp, #88]
    6394:	ldr	x1, [x0, #24]
    6398:	ldr	x0, [sp, #104]
    639c:	lsl	x0, x0, #3
    63a0:	add	x0, x1, x0
    63a4:	ldr	x0, [x0]
    63a8:	mov	x2, x0
    63ac:	mov	w1, #0x3dc                 	// #988
    63b0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    63b4:	add	x0, x0, #0x808
    63b8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    63bc:	ldr	x0, [sp, #104]
    63c0:	add	x0, x0, #0x1
    63c4:	str	x0, [sp, #104]
    63c8:	ldr	x0, [sp, #88]
    63cc:	ldr	x0, [x0, #16]
    63d0:	ldr	x1, [sp, #104]
    63d4:	cmp	x1, x0
    63d8:	b.lt	6390 <PySequence_Fast@plt+0x2150>  // b.tstop
    63dc:	ldr	x2, [sp, #88]
    63e0:	mov	w1, #0x3dd                 	// #989
    63e4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    63e8:	add	x0, x0, #0x808
    63ec:	bl	4408 <PySequence_Fast@plt+0x1c8>
    63f0:	mov	x0, #0x0                   	// #0
    63f4:	ldp	x29, x30, [sp, #32]
    63f8:	add	sp, sp, #0x70
    63fc:	ret
    6400:	stp	x29, x30, [sp, #-112]!
    6404:	mov	x29, sp
    6408:	str	x0, [sp, #56]
    640c:	str	x1, [sp, #48]
    6410:	str	x2, [sp, #40]
    6414:	str	x3, [sp, #32]
    6418:	str	x4, [sp, #24]
    641c:	str	x5, [sp, #16]
    6420:	str	xzr, [sp, #96]
    6424:	ldr	x0, [sp, #48]
    6428:	cmp	x0, #0x0
    642c:	b.ne	6454 <PySequence_Fast@plt+0x2214>  // b.any
    6430:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6434:	ldr	x0, [x0, #3944]
    6438:	ldr	x2, [x0]
    643c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6440:	add	x1, x0, #0x9b8
    6444:	mov	x0, x2
    6448:	bl	3de0 <PyErr_SetString@plt>
    644c:	mov	x0, #0x0                   	// #0
    6450:	b	678c <PySequence_Fast@plt+0x254c>
    6454:	ldr	x0, [sp, #48]
    6458:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    645c:	ldr	x0, [sp, #56]
    6460:	ldr	x0, [x0, #16]
    6464:	str	x0, [sp, #88]
    6468:	ldr	x0, [sp, #56]
    646c:	ldr	x1, [sp, #48]
    6470:	str	x1, [x0, #16]
    6474:	ldr	x0, [sp, #88]
    6478:	bl	4480 <PySequence_Fast@plt+0x240>
    647c:	ldr	x0, [sp, #32]
    6480:	cmp	x0, #0x0
    6484:	b.eq	64b8 <PySequence_Fast@plt+0x2278>  // b.none
    6488:	ldr	x0, [sp, #32]
    648c:	and	x1, x0, #0xfffffffffffffffe
    6490:	ldr	x0, [sp, #32]
    6494:	ldr	x2, [x0, #8]
    6498:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    649c:	ldr	x0, [x0, #4064]
    64a0:	cmp	x2, x0
    64a4:	cset	w0, eq  // eq = none
    64a8:	and	w0, w0, #0xff
    64ac:	and	x0, x0, #0xff
    64b0:	orr	x0, x1, x0
    64b4:	b	64c0 <PySequence_Fast@plt+0x2280>
    64b8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    64bc:	ldr	x0, [x0, #3976]
    64c0:	str	x0, [sp, #32]
    64c4:	ldr	x0, [sp, #32]
    64c8:	and	x0, x0, #0xfffffffffffffffe
    64cc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    64d0:	ldr	x0, [sp, #56]
    64d4:	add	x0, x0, #0x18
    64d8:	ldr	x1, [sp, #32]
    64dc:	bl	4610 <PySequence_Fast@plt+0x3d0>
    64e0:	ldr	x0, [sp, #24]
    64e4:	cmp	x0, #0x0
    64e8:	b.eq	651c <PySequence_Fast@plt+0x22dc>  // b.none
    64ec:	ldr	x0, [sp, #24]
    64f0:	and	x1, x0, #0xfffffffffffffffe
    64f4:	ldr	x0, [sp, #24]
    64f8:	ldr	x2, [x0, #8]
    64fc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6500:	ldr	x0, [x0, #4064]
    6504:	cmp	x2, x0
    6508:	cset	w0, eq  // eq = none
    650c:	and	w0, w0, #0xff
    6510:	and	x0, x0, #0xff
    6514:	orr	x0, x1, x0
    6518:	b	6524 <PySequence_Fast@plt+0x22e4>
    651c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6520:	ldr	x0, [x0, #3976]
    6524:	str	x0, [sp, #24]
    6528:	ldr	x0, [sp, #24]
    652c:	and	x0, x0, #0xfffffffffffffffe
    6530:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6534:	ldr	x0, [sp, #56]
    6538:	add	x0, x0, #0x20
    653c:	ldr	x1, [sp, #24]
    6540:	bl	4610 <PySequence_Fast@plt+0x3d0>
    6544:	ldr	x0, [sp, #16]
    6548:	cmp	x0, #0x0
    654c:	b.ne	6574 <PySequence_Fast@plt+0x2334>  // b.any
    6550:	ldr	x0, [sp, #40]
    6554:	cmp	x0, #0x0
    6558:	b.ne	6574 <PySequence_Fast@plt+0x2334>  // b.any
    655c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6560:	ldr	x0, [x0, #3976]
    6564:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6568:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    656c:	ldr	x0, [x0, #3976]
    6570:	b	678c <PySequence_Fast@plt+0x254c>
    6574:	ldr	x0, [sp, #16]
    6578:	cmp	x0, #0x0
    657c:	b.eq	6718 <PySequence_Fast@plt+0x24d8>  // b.none
    6580:	ldr	x0, [sp, #16]
    6584:	ldr	x0, [x0, #8]
    6588:	ldr	x0, [x0, #168]
    658c:	and	x0, x0, #0x2000000
    6590:	cmp	x0, #0x0
    6594:	b.ne	65bc <PySequence_Fast@plt+0x237c>  // b.any
    6598:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    659c:	ldr	x0, [x0, #3944]
    65a0:	ldr	x2, [x0]
    65a4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    65a8:	add	x1, x0, #0x9d0
    65ac:	mov	x0, x2
    65b0:	bl	3de0 <PyErr_SetString@plt>
    65b4:	mov	x0, #0x0                   	// #0
    65b8:	b	678c <PySequence_Fast@plt+0x254c>
    65bc:	ldr	x0, [sp, #16]
    65c0:	ldr	x0, [x0, #16]
    65c4:	str	x0, [sp, #80]
    65c8:	ldr	x0, [sp, #56]
    65cc:	ldr	x0, [x0, #40]
    65d0:	str	x0, [sp, #96]
    65d4:	ldr	x0, [sp, #56]
    65d8:	str	xzr, [x0, #40]
    65dc:	ldr	x1, [sp, #80]
    65e0:	ldr	x0, [sp, #56]
    65e4:	bl	5060 <PySequence_Fast@plt+0xe20>
    65e8:	cmp	w0, #0x0
    65ec:	b.eq	660c <PySequence_Fast@plt+0x23cc>  // b.none
    65f0:	ldr	x0, [sp, #56]
    65f4:	bl	4b4c <PySequence_Fast@plt+0x90c>
    65f8:	ldr	x0, [sp, #56]
    65fc:	ldr	x1, [sp, #96]
    6600:	str	x1, [x0, #40]
    6604:	mov	x0, #0x0                   	// #0
    6608:	b	678c <PySequence_Fast@plt+0x254c>
    660c:	ldr	x0, [sp, #96]
    6610:	cmp	x0, #0x0
    6614:	b.eq	663c <PySequence_Fast@plt+0x23fc>  // b.none
    6618:	ldr	x0, [sp, #56]
    661c:	ldr	x0, [x0, #40]
    6620:	ldr	x1, [sp, #96]
    6624:	ldr	x1, [x1]
    6628:	str	x1, [x0]
    662c:	ldr	x0, [sp, #96]
    6630:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6634:	ldr	x1, [x1, #3976]
    6638:	str	x1, [x0]
    663c:	str	xzr, [sp, #104]
    6640:	b	66f4 <PySequence_Fast@plt+0x24b4>
    6644:	ldr	x0, [sp, #16]
    6648:	ldr	x1, [x0, #24]
    664c:	ldr	x0, [sp, #104]
    6650:	lsl	x0, x0, #3
    6654:	add	x0, x1, x0
    6658:	ldr	x0, [x0]
    665c:	str	x0, [sp, #72]
    6660:	ldr	x0, [sp, #72]
    6664:	ldr	x1, [x0, #8]
    6668:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    666c:	add	x0, x0, #0x320
    6670:	cmp	x1, x0
    6674:	b.eq	66c0 <PySequence_Fast@plt+0x2480>  // b.none
    6678:	ldr	x0, [sp, #72]
    667c:	ldr	x2, [x0, #8]
    6680:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    6684:	add	x1, x0, #0x320
    6688:	mov	x0, x2
    668c:	bl	4160 <PyType_IsSubtype@plt>
    6690:	cmp	w0, #0x0
    6694:	b.ne	66c0 <PySequence_Fast@plt+0x2480>  // b.any
    6698:	ldr	x0, [sp, #72]
    669c:	bl	5204 <PySequence_Fast@plt+0xfc4>
    66a0:	ldr	x0, [sp, #56]
    66a4:	ldr	x0, [x0, #40]
    66a8:	ldr	x1, [sp, #104]
    66ac:	str	x1, [x0, #8]
    66b0:	ldr	x0, [sp, #96]
    66b4:	bl	4a88 <PySequence_Fast@plt+0x848>
    66b8:	mov	x0, #0x0                   	// #0
    66bc:	b	678c <PySequence_Fast@plt+0x254c>
    66c0:	ldr	x0, [sp, #72]
    66c4:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    66c8:	ldr	x0, [sp, #56]
    66cc:	ldr	x0, [x0, #40]
    66d0:	ldr	x1, [x0, #24]
    66d4:	ldr	x0, [sp, #104]
    66d8:	lsl	x0, x0, #3
    66dc:	add	x0, x1, x0
    66e0:	ldr	x1, [sp, #72]
    66e4:	str	x1, [x0]
    66e8:	ldr	x0, [sp, #104]
    66ec:	add	x0, x0, #0x1
    66f0:	str	x0, [sp, #104]
    66f4:	ldr	x1, [sp, #104]
    66f8:	ldr	x0, [sp, #80]
    66fc:	cmp	x1, x0
    6700:	b.lt	6644 <PySequence_Fast@plt+0x2404>  // b.tstop
    6704:	ldr	x0, [sp, #56]
    6708:	ldr	x0, [x0, #40]
    670c:	ldr	x1, [sp, #80]
    6710:	str	x1, [x0, #8]
    6714:	b	6734 <PySequence_Fast@plt+0x24f4>
    6718:	mov	x1, #0x0                   	// #0
    671c:	ldr	x0, [sp, #56]
    6720:	bl	5060 <PySequence_Fast@plt+0xe20>
    6724:	cmp	w0, #0x0
    6728:	b.eq	6734 <PySequence_Fast@plt+0x24f4>  // b.none
    672c:	mov	x0, #0x0                   	// #0
    6730:	b	678c <PySequence_Fast@plt+0x254c>
    6734:	ldr	x0, [sp, #40]
    6738:	cmp	x0, #0x0
    673c:	b.eq	6770 <PySequence_Fast@plt+0x2530>  // b.none
    6740:	ldr	x0, [sp, #40]
    6744:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6748:	ldr	x0, [sp, #56]
    674c:	ldr	x0, [x0, #40]
    6750:	ldr	x0, [x0]
    6754:	str	x0, [sp, #64]
    6758:	ldr	x0, [sp, #56]
    675c:	ldr	x0, [x0, #40]
    6760:	ldr	x1, [sp, #40]
    6764:	str	x1, [x0]
    6768:	ldr	x0, [sp, #64]
    676c:	bl	4480 <PySequence_Fast@plt+0x240>
    6770:	ldr	x0, [sp, #96]
    6774:	bl	4a88 <PySequence_Fast@plt+0x848>
    6778:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    677c:	ldr	x0, [x0, #3976]
    6780:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6784:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6788:	ldr	x0, [x0, #3976]
    678c:	ldp	x29, x30, [sp], #112
    6790:	ret
    6794:	sub	sp, sp, #0x70
    6798:	stp	x29, x30, [sp, #16]
    679c:	add	x29, sp, #0x10
    67a0:	str	x0, [sp, #40]
    67a4:	str	x1, [sp, #32]
    67a8:	str	xzr, [sp, #56]
    67ac:	ldr	x0, [sp, #56]
    67b0:	str	x0, [sp, #64]
    67b4:	ldr	x0, [sp, #64]
    67b8:	str	x0, [sp, #72]
    67bc:	ldr	x0, [sp, #72]
    67c0:	str	x0, [sp, #80]
    67c4:	ldr	x0, [sp, #80]
    67c8:	str	x0, [sp, #88]
    67cc:	mov	x0, #0x0                   	// #0
    67d0:	bl	3f40 <PyTuple_New@plt>
    67d4:	str	x0, [sp, #96]
    67d8:	ldr	x0, [sp, #96]
    67dc:	cmp	x0, #0x0
    67e0:	b.ne	67ec <PySequence_Fast@plt+0x25ac>  // b.any
    67e4:	mov	x0, #0x0                   	// #0
    67e8:	b	688c <PySequence_Fast@plt+0x264c>
    67ec:	add	x4, sp, #0x40
    67f0:	add	x3, sp, #0x48
    67f4:	add	x2, sp, #0x50
    67f8:	add	x1, sp, #0x58
    67fc:	add	x0, sp, #0x38
    6800:	str	x0, [sp]
    6804:	mov	x7, x4
    6808:	mov	x6, x3
    680c:	mov	x5, x2
    6810:	mov	x4, x1
    6814:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    6818:	add	x3, x0, #0xf8
    681c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6820:	add	x2, x0, #0x9f0
    6824:	ldr	x1, [sp, #32]
    6828:	ldr	x0, [sp, #96]
    682c:	bl	4070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    6830:	cmp	w0, #0x0
    6834:	b.eq	6870 <PySequence_Fast@plt+0x2630>  // b.none
    6838:	ldr	x0, [sp, #88]
    683c:	ldr	x1, [sp, #80]
    6840:	ldr	x2, [sp, #72]
    6844:	ldr	x3, [sp, #64]
    6848:	ldr	x4, [sp, #56]
    684c:	mov	x5, x4
    6850:	mov	x4, x3
    6854:	mov	x3, x2
    6858:	mov	x2, x1
    685c:	mov	x1, x0
    6860:	ldr	x0, [sp, #40]
    6864:	bl	6400 <PySequence_Fast@plt+0x21c0>
    6868:	str	x0, [sp, #104]
    686c:	b	6874 <PySequence_Fast@plt+0x2634>
    6870:	str	xzr, [sp, #104]
    6874:	ldr	x2, [sp, #96]
    6878:	mov	w1, #0x457                 	// #1111
    687c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6880:	add	x0, x0, #0x808
    6884:	bl	4408 <PySequence_Fast@plt+0x1c8>
    6888:	ldr	x0, [sp, #104]
    688c:	ldp	x29, x30, [sp, #16]
    6890:	add	sp, sp, #0x70
    6894:	ret
    6898:	stp	x29, x30, [sp, #-32]!
    689c:	mov	x29, sp
    68a0:	str	x0, [sp, #24]
    68a4:	str	x1, [sp, #16]
    68a8:	ldr	x0, [sp, #16]
    68ac:	ldr	x1, [x0, #8]
    68b0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    68b4:	ldr	x0, [x0, #3992]
    68b8:	cmp	x1, x0
    68bc:	b.eq	68e8 <PySequence_Fast@plt+0x26a8>  // b.none
    68c0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    68c4:	ldr	x0, [x0, #3944]
    68c8:	ldr	x3, [x0]
    68cc:	ldr	x2, [sp, #16]
    68d0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    68d4:	add	x1, x0, #0x9f8
    68d8:	mov	x0, x3
    68dc:	bl	4180 <PyErr_Format@plt>
    68e0:	mov	x0, #0x0                   	// #0
    68e4:	b	68f4 <PySequence_Fast@plt+0x26b4>
    68e8:	ldr	x1, [sp, #16]
    68ec:	ldr	x0, [sp, #24]
    68f0:	bl	6794 <PySequence_Fast@plt+0x2554>
    68f4:	ldp	x29, x30, [sp], #32
    68f8:	ret
    68fc:	sub	sp, sp, #0x50
    6900:	str	x0, [sp, #8]
    6904:	mov	w0, #0x1                   	// #1
    6908:	str	w0, [sp, #68]
    690c:	ldr	x0, [sp, #8]
    6910:	ldr	x0, [x0, #8]
    6914:	ldr	x0, [x0, #168]
    6918:	and	x0, x0, #0x10000000
    691c:	cmp	x0, #0x0
    6920:	b.eq	6c28 <PySequence_Fast@plt+0x29e8>  // b.none
    6924:	ldr	x0, [sp, #8]
    6928:	ldr	x0, [x0, #16]
    692c:	str	x0, [sp, #40]
    6930:	ldr	x0, [sp, #8]
    6934:	ldrb	w0, [x0, #32]
    6938:	and	w0, w0, #0x20
    693c:	and	w0, w0, #0xff
    6940:	cmp	w0, #0x0
    6944:	b.eq	6978 <PySequence_Fast@plt+0x2738>  // b.none
    6948:	ldr	x0, [sp, #8]
    694c:	ldrb	w0, [x0, #32]
    6950:	and	w0, w0, #0x40
    6954:	and	w0, w0, #0xff
    6958:	cmp	w0, #0x0
    695c:	b.eq	696c <PySequence_Fast@plt+0x272c>  // b.none
    6960:	ldr	x0, [sp, #8]
    6964:	add	x0, x0, #0x30
    6968:	b	6980 <PySequence_Fast@plt+0x2740>
    696c:	ldr	x0, [sp, #8]
    6970:	add	x0, x0, #0x48
    6974:	b	6980 <PySequence_Fast@plt+0x2740>
    6978:	ldr	x0, [sp, #8]
    697c:	ldr	x0, [x0, #72]
    6980:	str	x0, [sp, #32]
    6984:	ldr	x0, [sp, #8]
    6988:	ldrb	w0, [x0, #32]
    698c:	ubfx	x0, x0, #2, #3
    6990:	and	w0, w0, #0xff
    6994:	str	w0, [sp, #28]
    6998:	ldr	x0, [sp, #40]
    699c:	cmp	x0, #0x2
    69a0:	b.le	6b24 <PySequence_Fast@plt+0x28e4>
    69a4:	ldr	w0, [sp, #28]
    69a8:	cmp	w0, #0x1
    69ac:	b.ne	69c8 <PySequence_Fast@plt+0x2788>  // b.any
    69b0:	ldr	x0, [sp, #32]
    69b4:	ldrb	w0, [x0]
    69b8:	cmp	w0, #0x7b
    69bc:	cset	w0, eq  // eq = none
    69c0:	and	w0, w0, #0xff
    69c4:	b	6a00 <PySequence_Fast@plt+0x27c0>
    69c8:	ldr	w0, [sp, #28]
    69cc:	cmp	w0, #0x2
    69d0:	b.ne	69ec <PySequence_Fast@plt+0x27ac>  // b.any
    69d4:	ldr	x0, [sp, #32]
    69d8:	ldrh	w0, [x0]
    69dc:	cmp	w0, #0x7b
    69e0:	cset	w0, eq  // eq = none
    69e4:	and	w0, w0, #0xff
    69e8:	b	6a00 <PySequence_Fast@plt+0x27c0>
    69ec:	ldr	x0, [sp, #32]
    69f0:	ldr	w0, [x0]
    69f4:	cmp	w0, #0x7b
    69f8:	cset	w0, eq  // eq = none
    69fc:	and	w0, w0, #0xff
    6a00:	cmp	w0, #0x0
    6a04:	b.eq	6b24 <PySequence_Fast@plt+0x28e4>  // b.none
    6a08:	ldr	w0, [sp, #28]
    6a0c:	cmp	w0, #0x1
    6a10:	b.ne	6a2c <PySequence_Fast@plt+0x27ec>  // b.any
    6a14:	ldr	x0, [sp, #32]
    6a18:	add	x0, x0, #0x1
    6a1c:	ldrb	w0, [x0]
    6a20:	cmp	w0, #0x7d
    6a24:	b.eq	6b1c <PySequence_Fast@plt+0x28dc>  // b.none
    6a28:	b	6a64 <PySequence_Fast@plt+0x2824>
    6a2c:	ldr	w0, [sp, #28]
    6a30:	cmp	w0, #0x2
    6a34:	b.ne	6a50 <PySequence_Fast@plt+0x2810>  // b.any
    6a38:	ldr	x0, [sp, #32]
    6a3c:	add	x0, x0, #0x2
    6a40:	ldrh	w0, [x0]
    6a44:	cmp	w0, #0x7d
    6a48:	b.eq	6b1c <PySequence_Fast@plt+0x28dc>  // b.none
    6a4c:	b	6a64 <PySequence_Fast@plt+0x2824>
    6a50:	ldr	x0, [sp, #32]
    6a54:	add	x0, x0, #0x4
    6a58:	ldr	w0, [x0]
    6a5c:	cmp	w0, #0x7d
    6a60:	b.eq	6b1c <PySequence_Fast@plt+0x28dc>  // b.none
    6a64:	ldr	w0, [sp, #28]
    6a68:	cmp	w0, #0x1
    6a6c:	b.ne	6a88 <PySequence_Fast@plt+0x2848>  // b.any
    6a70:	ldr	x0, [sp, #32]
    6a74:	add	x0, x0, #0x1
    6a78:	ldrb	w0, [x0]
    6a7c:	cmp	w0, #0x2a
    6a80:	b.eq	6ac0 <PySequence_Fast@plt+0x2880>  // b.none
    6a84:	b	6b24 <PySequence_Fast@plt+0x28e4>
    6a88:	ldr	w0, [sp, #28]
    6a8c:	cmp	w0, #0x2
    6a90:	b.ne	6aac <PySequence_Fast@plt+0x286c>  // b.any
    6a94:	ldr	x0, [sp, #32]
    6a98:	add	x0, x0, #0x2
    6a9c:	ldrh	w0, [x0]
    6aa0:	cmp	w0, #0x2a
    6aa4:	b.eq	6ac0 <PySequence_Fast@plt+0x2880>  // b.none
    6aa8:	b	6b24 <PySequence_Fast@plt+0x28e4>
    6aac:	ldr	x0, [sp, #32]
    6ab0:	add	x0, x0, #0x4
    6ab4:	ldr	w0, [x0]
    6ab8:	cmp	w0, #0x2a
    6abc:	b.ne	6b24 <PySequence_Fast@plt+0x28e4>  // b.any
    6ac0:	ldr	w0, [sp, #28]
    6ac4:	cmp	w0, #0x1
    6ac8:	b.ne	6ae4 <PySequence_Fast@plt+0x28a4>  // b.any
    6acc:	ldr	x0, [sp, #32]
    6ad0:	add	x0, x0, #0x2
    6ad4:	ldrb	w0, [x0]
    6ad8:	cmp	w0, #0x7d
    6adc:	b.eq	6b1c <PySequence_Fast@plt+0x28dc>  // b.none
    6ae0:	b	6b24 <PySequence_Fast@plt+0x28e4>
    6ae4:	ldr	w0, [sp, #28]
    6ae8:	cmp	w0, #0x2
    6aec:	b.ne	6b08 <PySequence_Fast@plt+0x28c8>  // b.any
    6af0:	ldr	x0, [sp, #32]
    6af4:	add	x0, x0, #0x4
    6af8:	ldrh	w0, [x0]
    6afc:	cmp	w0, #0x7d
    6b00:	b.eq	6b1c <PySequence_Fast@plt+0x28dc>  // b.none
    6b04:	b	6b24 <PySequence_Fast@plt+0x28e4>
    6b08:	ldr	x0, [sp, #32]
    6b0c:	add	x0, x0, #0x8
    6b10:	ldr	w0, [x0]
    6b14:	cmp	w0, #0x7d
    6b18:	b.ne	6b24 <PySequence_Fast@plt+0x28e4>  // b.any
    6b1c:	mov	w0, #0x1                   	// #1
    6b20:	b	6db8 <PySequence_Fast@plt+0x2b78>
    6b24:	str	xzr, [sp, #72]
    6b28:	b	6c10 <PySequence_Fast@plt+0x29d0>
    6b2c:	ldr	w0, [sp, #28]
    6b30:	cmp	w0, #0x1
    6b34:	b.ne	6b4c <PySequence_Fast@plt+0x290c>  // b.any
    6b38:	ldr	x0, [sp, #72]
    6b3c:	ldr	x1, [sp, #32]
    6b40:	add	x0, x1, x0
    6b44:	ldrb	w0, [x0]
    6b48:	b	6b84 <PySequence_Fast@plt+0x2944>
    6b4c:	ldr	w0, [sp, #28]
    6b50:	cmp	w0, #0x2
    6b54:	b.ne	6b70 <PySequence_Fast@plt+0x2930>  // b.any
    6b58:	ldr	x0, [sp, #72]
    6b5c:	lsl	x0, x0, #1
    6b60:	ldr	x1, [sp, #32]
    6b64:	add	x0, x1, x0
    6b68:	ldrh	w0, [x0]
    6b6c:	b	6b84 <PySequence_Fast@plt+0x2944>
    6b70:	ldr	x0, [sp, #72]
    6b74:	lsl	x0, x0, #2
    6b78:	ldr	x1, [sp, #32]
    6b7c:	add	x0, x1, x0
    6b80:	ldr	w0, [x0]
    6b84:	str	w0, [sp, #24]
    6b88:	ldr	w0, [sp, #24]
    6b8c:	cmp	w0, #0x7b
    6b90:	b.ne	6b9c <PySequence_Fast@plt+0x295c>  // b.any
    6b94:	str	wzr, [sp, #68]
    6b98:	b	6c04 <PySequence_Fast@plt+0x29c4>
    6b9c:	ldr	w0, [sp, #24]
    6ba0:	cmp	w0, #0x7d
    6ba4:	b.ne	6bb4 <PySequence_Fast@plt+0x2974>  // b.any
    6ba8:	mov	w0, #0x1                   	// #1
    6bac:	str	w0, [sp, #68]
    6bb0:	b	6c04 <PySequence_Fast@plt+0x29c4>
    6bb4:	ldr	w0, [sp, #68]
    6bb8:	cmp	w0, #0x0
    6bbc:	b.eq	6c04 <PySequence_Fast@plt+0x29c4>  // b.none
    6bc0:	ldr	w0, [sp, #24]
    6bc4:	cmp	w0, #0x2f
    6bc8:	b.eq	6bfc <PySequence_Fast@plt+0x29bc>  // b.none
    6bcc:	ldr	w0, [sp, #24]
    6bd0:	cmp	w0, #0x2a
    6bd4:	b.eq	6bfc <PySequence_Fast@plt+0x29bc>  // b.none
    6bd8:	ldr	w0, [sp, #24]
    6bdc:	cmp	w0, #0x5b
    6be0:	b.eq	6bfc <PySequence_Fast@plt+0x29bc>  // b.none
    6be4:	ldr	w0, [sp, #24]
    6be8:	cmp	w0, #0x40
    6bec:	b.eq	6bfc <PySequence_Fast@plt+0x29bc>  // b.none
    6bf0:	ldr	w0, [sp, #24]
    6bf4:	cmp	w0, #0x2e
    6bf8:	b.ne	6c04 <PySequence_Fast@plt+0x29c4>  // b.any
    6bfc:	mov	w0, #0x1                   	// #1
    6c00:	b	6db8 <PySequence_Fast@plt+0x2b78>
    6c04:	ldr	x0, [sp, #72]
    6c08:	add	x0, x0, #0x1
    6c0c:	str	x0, [sp, #72]
    6c10:	ldr	x1, [sp, #72]
    6c14:	ldr	x0, [sp, #40]
    6c18:	cmp	x1, x0
    6c1c:	b.lt	6b2c <PySequence_Fast@plt+0x28ec>  // b.tstop
    6c20:	mov	w0, #0x0                   	// #0
    6c24:	b	6db8 <PySequence_Fast@plt+0x2b78>
    6c28:	ldr	x0, [sp, #8]
    6c2c:	ldr	x0, [x0, #8]
    6c30:	ldr	x0, [x0, #168]
    6c34:	and	x0, x0, #0x8000000
    6c38:	cmp	x0, #0x0
    6c3c:	b.eq	6db4 <PySequence_Fast@plt+0x2b74>  // b.none
    6c40:	ldr	x0, [sp, #8]
    6c44:	add	x0, x0, #0x20
    6c48:	str	x0, [sp, #56]
    6c4c:	ldr	x0, [sp, #8]
    6c50:	ldr	x0, [x0, #16]
    6c54:	str	x0, [sp, #48]
    6c58:	ldr	x0, [sp, #48]
    6c5c:	cmp	x0, #0x2
    6c60:	b.le	6cb8 <PySequence_Fast@plt+0x2a78>
    6c64:	ldr	x0, [sp, #56]
    6c68:	ldrb	w0, [x0]
    6c6c:	cmp	w0, #0x7b
    6c70:	b.ne	6cb8 <PySequence_Fast@plt+0x2a78>  // b.any
    6c74:	ldr	x0, [sp, #56]
    6c78:	add	x0, x0, #0x1
    6c7c:	ldrb	w0, [x0]
    6c80:	cmp	w0, #0x7d
    6c84:	b.eq	6cb0 <PySequence_Fast@plt+0x2a70>  // b.none
    6c88:	ldr	x0, [sp, #56]
    6c8c:	add	x0, x0, #0x1
    6c90:	ldrb	w0, [x0]
    6c94:	cmp	w0, #0x2a
    6c98:	b.ne	6cb8 <PySequence_Fast@plt+0x2a78>  // b.any
    6c9c:	ldr	x0, [sp, #56]
    6ca0:	add	x0, x0, #0x2
    6ca4:	ldrb	w0, [x0]
    6ca8:	cmp	w0, #0x7d
    6cac:	b.ne	6cb8 <PySequence_Fast@plt+0x2a78>  // b.any
    6cb0:	mov	w0, #0x1                   	// #1
    6cb4:	b	6db8 <PySequence_Fast@plt+0x2b78>
    6cb8:	str	xzr, [sp, #72]
    6cbc:	b	6d9c <PySequence_Fast@plt+0x2b5c>
    6cc0:	ldr	x0, [sp, #72]
    6cc4:	ldr	x1, [sp, #56]
    6cc8:	add	x0, x1, x0
    6ccc:	ldrb	w0, [x0]
    6cd0:	cmp	w0, #0x7b
    6cd4:	b.ne	6ce0 <PySequence_Fast@plt+0x2aa0>  // b.any
    6cd8:	str	wzr, [sp, #68]
    6cdc:	b	6d90 <PySequence_Fast@plt+0x2b50>
    6ce0:	ldr	x0, [sp, #72]
    6ce4:	ldr	x1, [sp, #56]
    6ce8:	add	x0, x1, x0
    6cec:	ldrb	w0, [x0]
    6cf0:	cmp	w0, #0x7d
    6cf4:	b.ne	6d04 <PySequence_Fast@plt+0x2ac4>  // b.any
    6cf8:	mov	w0, #0x1                   	// #1
    6cfc:	str	w0, [sp, #68]
    6d00:	b	6d90 <PySequence_Fast@plt+0x2b50>
    6d04:	ldr	w0, [sp, #68]
    6d08:	cmp	w0, #0x0
    6d0c:	b.eq	6d90 <PySequence_Fast@plt+0x2b50>  // b.none
    6d10:	ldr	x0, [sp, #72]
    6d14:	ldr	x1, [sp, #56]
    6d18:	add	x0, x1, x0
    6d1c:	ldrb	w0, [x0]
    6d20:	cmp	w0, #0x2f
    6d24:	b.eq	6d88 <PySequence_Fast@plt+0x2b48>  // b.none
    6d28:	ldr	x0, [sp, #72]
    6d2c:	ldr	x1, [sp, #56]
    6d30:	add	x0, x1, x0
    6d34:	ldrb	w0, [x0]
    6d38:	cmp	w0, #0x2a
    6d3c:	b.eq	6d88 <PySequence_Fast@plt+0x2b48>  // b.none
    6d40:	ldr	x0, [sp, #72]
    6d44:	ldr	x1, [sp, #56]
    6d48:	add	x0, x1, x0
    6d4c:	ldrb	w0, [x0]
    6d50:	cmp	w0, #0x5b
    6d54:	b.eq	6d88 <PySequence_Fast@plt+0x2b48>  // b.none
    6d58:	ldr	x0, [sp, #72]
    6d5c:	ldr	x1, [sp, #56]
    6d60:	add	x0, x1, x0
    6d64:	ldrb	w0, [x0]
    6d68:	cmp	w0, #0x40
    6d6c:	b.eq	6d88 <PySequence_Fast@plt+0x2b48>  // b.none
    6d70:	ldr	x0, [sp, #72]
    6d74:	ldr	x1, [sp, #56]
    6d78:	add	x0, x1, x0
    6d7c:	ldrb	w0, [x0]
    6d80:	cmp	w0, #0x2e
    6d84:	b.ne	6d90 <PySequence_Fast@plt+0x2b50>  // b.any
    6d88:	mov	w0, #0x1                   	// #1
    6d8c:	b	6db8 <PySequence_Fast@plt+0x2b78>
    6d90:	ldr	x0, [sp, #72]
    6d94:	add	x0, x0, #0x1
    6d98:	str	x0, [sp, #72]
    6d9c:	ldr	x1, [sp, #72]
    6da0:	ldr	x0, [sp, #48]
    6da4:	cmp	x1, x0
    6da8:	b.lt	6cc0 <PySequence_Fast@plt+0x2a80>  // b.tstop
    6dac:	mov	w0, #0x0                   	// #0
    6db0:	b	6db8 <PySequence_Fast@plt+0x2b78>
    6db4:	mov	w0, #0x1                   	// #1
    6db8:	add	sp, sp, #0x50
    6dbc:	ret
    6dc0:	stp	x29, x30, [sp, #-64]!
    6dc4:	mov	x29, sp
    6dc8:	str	x0, [sp, #24]
    6dcc:	str	x1, [sp, #16]
    6dd0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6dd4:	add	x1, x0, #0x8d0
    6dd8:	ldr	x0, [sp, #16]
    6ddc:	bl	4240 <PySequence_Fast@plt>
    6de0:	str	x0, [sp, #48]
    6de4:	ldr	x0, [sp, #48]
    6de8:	cmp	x0, #0x0
    6dec:	b.ne	6e24 <PySequence_Fast@plt+0x2be4>  // b.any
    6df0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6df4:	ldr	x0, [x0, #3944]
    6df8:	ldr	x3, [x0]
    6dfc:	ldr	x0, [sp, #16]
    6e00:	ldr	x0, [x0, #8]
    6e04:	ldr	x0, [x0, #24]
    6e08:	mov	x2, x0
    6e0c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6e10:	add	x1, x0, #0xa30
    6e14:	mov	x0, x3
    6e18:	bl	4180 <PyErr_Format@plt>
    6e1c:	mov	x0, #0x0                   	// #0
    6e20:	b	6f24 <PySequence_Fast@plt+0x2ce4>
    6e24:	str	xzr, [sp, #56]
    6e28:	b	6ee8 <PySequence_Fast@plt+0x2ca8>
    6e2c:	ldr	x0, [sp, #48]
    6e30:	ldr	x0, [x0, #8]
    6e34:	ldr	x0, [x0, #168]
    6e38:	and	x0, x0, #0x2000000
    6e3c:	cmp	x0, #0x0
    6e40:	b.eq	6e60 <PySequence_Fast@plt+0x2c20>  // b.none
    6e44:	ldr	x0, [sp, #48]
    6e48:	ldr	x1, [x0, #24]
    6e4c:	ldr	x0, [sp, #56]
    6e50:	lsl	x0, x0, #3
    6e54:	add	x0, x1, x0
    6e58:	ldr	x0, [x0]
    6e5c:	b	6e78 <PySequence_Fast@plt+0x2c38>
    6e60:	ldr	x1, [sp, #48]
    6e64:	ldr	x0, [sp, #56]
    6e68:	add	x0, x0, #0x2
    6e6c:	lsl	x0, x0, #3
    6e70:	add	x0, x1, x0
    6e74:	ldr	x0, [x0, #8]
    6e78:	str	x0, [sp, #40]
    6e7c:	ldr	x0, [sp, #40]
    6e80:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6e84:	ldr	x1, [sp, #40]
    6e88:	ldr	x0, [sp, #24]
    6e8c:	bl	5248 <PySequence_Fast@plt+0x1008>
    6e90:	cmp	w0, #0x0
    6e94:	b.ge	6ec8 <PySequence_Fast@plt+0x2c88>  // b.tcont
    6e98:	ldr	x2, [sp, #48]
    6e9c:	mov	w1, #0x4c4                 	// #1220
    6ea0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6ea4:	add	x0, x0, #0x808
    6ea8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    6eac:	ldr	x2, [sp, #40]
    6eb0:	mov	w1, #0x4c5                 	// #1221
    6eb4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6eb8:	add	x0, x0, #0x808
    6ebc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    6ec0:	mov	x0, #0x0                   	// #0
    6ec4:	b	6f24 <PySequence_Fast@plt+0x2ce4>
    6ec8:	ldr	x2, [sp, #40]
    6ecc:	mov	w1, #0x4c8                 	// #1224
    6ed0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6ed4:	add	x0, x0, #0x808
    6ed8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    6edc:	ldr	x0, [sp, #56]
    6ee0:	add	x0, x0, #0x1
    6ee4:	str	x0, [sp, #56]
    6ee8:	ldr	x0, [sp, #48]
    6eec:	ldr	x0, [x0, #16]
    6ef0:	ldr	x1, [sp, #56]
    6ef4:	cmp	x1, x0
    6ef8:	b.lt	6e2c <PySequence_Fast@plt+0x2bec>  // b.tstop
    6efc:	ldr	x2, [sp, #48]
    6f00:	mov	w1, #0x4cb                 	// #1227
    6f04:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    6f08:	add	x0, x0, #0x808
    6f0c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    6f10:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6f14:	ldr	x0, [x0, #3976]
    6f18:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6f1c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6f20:	ldr	x0, [x0, #3976]
    6f24:	ldp	x29, x30, [sp], #64
    6f28:	ret
    6f2c:	stp	x29, x30, [sp, #-80]!
    6f30:	mov	x29, sp
    6f34:	str	x0, [sp, #40]
    6f38:	str	x1, [sp, #32]
    6f3c:	str	x2, [sp, #24]
    6f40:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    6f44:	add	x0, x0, #0x9b8
    6f48:	bl	3fc0 <PyState_FindModule@plt>
    6f4c:	bl	3e10 <PyModule_GetState@plt>
    6f50:	str	x0, [sp, #64]
    6f54:	ldr	x0, [sp, #32]
    6f58:	bl	68fc <PySequence_Fast@plt+0x26bc>
    6f5c:	cmp	w0, #0x0
    6f60:	b.ne	6f78 <PySequence_Fast@plt+0x2d38>  // b.any
    6f64:	ldr	x1, [sp, #24]
    6f68:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6f6c:	ldr	x0, [x0, #3976]
    6f70:	cmp	x1, x0
    6f74:	b.eq	6fa4 <PySequence_Fast@plt+0x2d64>  // b.none
    6f78:	ldr	x0, [sp, #64]
    6f7c:	ldr	x6, [x0, #16]
    6f80:	mov	x5, #0x0                   	// #0
    6f84:	ldr	x4, [sp, #24]
    6f88:	ldr	x3, [sp, #32]
    6f8c:	ldr	x2, [sp, #40]
    6f90:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    6f94:	add	x1, x0, #0x128
    6f98:	mov	x0, x6
    6f9c:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    6fa0:	b	7088 <PySequence_Fast@plt+0x2e48>
    6fa4:	ldr	x0, [sp, #40]
    6fa8:	ldr	x0, [x0, #40]
    6fac:	cmp	x0, #0x0
    6fb0:	b.ne	6fcc <PySequence_Fast@plt+0x2d8c>  // b.any
    6fb4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6fb8:	ldr	x0, [x0, #3976]
    6fbc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6fc0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    6fc4:	ldr	x0, [x0, #3976]
    6fc8:	b	7088 <PySequence_Fast@plt+0x2e48>
    6fcc:	str	xzr, [sp, #72]
    6fd0:	b	705c <PySequence_Fast@plt+0x2e1c>
    6fd4:	ldr	x0, [sp, #40]
    6fd8:	ldr	x0, [x0, #40]
    6fdc:	ldr	x1, [x0, #24]
    6fe0:	ldr	x0, [sp, #72]
    6fe4:	lsl	x0, x0, #3
    6fe8:	add	x0, x1, x0
    6fec:	ldr	x0, [x0]
    6ff0:	str	x0, [sp, #56]
    6ff4:	ldr	x0, [sp, #56]
    6ff8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    6ffc:	ldr	x0, [sp, #56]
    7000:	ldr	x0, [x0, #16]
    7004:	mov	w2, #0x2                   	// #2
    7008:	ldr	x1, [sp, #32]
    700c:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7010:	str	w0, [sp, #52]
    7014:	ldr	w0, [sp, #52]
    7018:	cmp	w0, #0x0
    701c:	b.le	7028 <PySequence_Fast@plt+0x2de8>
    7020:	ldr	x0, [sp, #56]
    7024:	b	7088 <PySequence_Fast@plt+0x2e48>
    7028:	ldr	x2, [sp, #56]
    702c:	mov	w1, #0x4f2                 	// #1266
    7030:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7034:	add	x0, x0, #0x808
    7038:	bl	4408 <PySequence_Fast@plt+0x1c8>
    703c:	ldr	w0, [sp, #52]
    7040:	cmp	w0, #0x0
    7044:	b.ge	7050 <PySequence_Fast@plt+0x2e10>  // b.tcont
    7048:	mov	x0, #0x0                   	// #0
    704c:	b	7088 <PySequence_Fast@plt+0x2e48>
    7050:	ldr	x0, [sp, #72]
    7054:	add	x0, x0, #0x1
    7058:	str	x0, [sp, #72]
    705c:	ldr	x0, [sp, #40]
    7060:	ldr	x0, [x0, #40]
    7064:	ldr	x0, [x0, #8]
    7068:	ldr	x1, [sp, #72]
    706c:	cmp	x1, x0
    7070:	b.lt	6fd4 <PySequence_Fast@plt+0x2d94>  // b.tstop
    7074:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7078:	ldr	x0, [x0, #3976]
    707c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7080:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7084:	ldr	x0, [x0, #3976]
    7088:	ldp	x29, x30, [sp], #80
    708c:	ret
    7090:	stp	x29, x30, [sp, #-96]!
    7094:	mov	x29, sp
    7098:	str	x0, [sp, #40]
    709c:	str	x1, [sp, #32]
    70a0:	str	x2, [sp, #24]
    70a4:	str	x3, [sp, #16]
    70a8:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    70ac:	add	x0, x0, #0x9b8
    70b0:	bl	3fc0 <PyState_FindModule@plt>
    70b4:	bl	3e10 <PyModule_GetState@plt>
    70b8:	str	x0, [sp, #80]
    70bc:	ldr	x0, [sp, #32]
    70c0:	bl	68fc <PySequence_Fast@plt+0x26bc>
    70c4:	cmp	w0, #0x0
    70c8:	b.ne	70e0 <PySequence_Fast@plt+0x2ea0>  // b.any
    70cc:	ldr	x1, [sp, #16]
    70d0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    70d4:	ldr	x0, [x0, #3976]
    70d8:	cmp	x1, x0
    70dc:	b.eq	7110 <PySequence_Fast@plt+0x2ed0>  // b.none
    70e0:	ldr	x0, [sp, #80]
    70e4:	ldr	x7, [x0, #16]
    70e8:	mov	x6, #0x0                   	// #0
    70ec:	ldr	x5, [sp, #16]
    70f0:	ldr	x4, [sp, #24]
    70f4:	ldr	x3, [sp, #32]
    70f8:	ldr	x2, [sp, #40]
    70fc:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    7100:	add	x1, x0, #0x140
    7104:	mov	x0, x7
    7108:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    710c:	b	7244 <PySequence_Fast@plt+0x3004>
    7110:	ldr	x0, [sp, #40]
    7114:	ldr	x0, [x0, #40]
    7118:	cmp	x0, #0x0
    711c:	b.ne	7130 <PySequence_Fast@plt+0x2ef0>  // b.any
    7120:	ldr	x0, [sp, #24]
    7124:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7128:	ldr	x0, [sp, #24]
    712c:	b	7244 <PySequence_Fast@plt+0x3004>
    7130:	str	xzr, [sp, #88]
    7134:	b	7220 <PySequence_Fast@plt+0x2fe0>
    7138:	ldr	x0, [sp, #40]
    713c:	ldr	x0, [x0, #40]
    7140:	ldr	x1, [x0, #24]
    7144:	ldr	x0, [sp, #88]
    7148:	lsl	x0, x0, #3
    714c:	add	x0, x1, x0
    7150:	ldr	x0, [x0]
    7154:	str	x0, [sp, #72]
    7158:	ldr	x0, [sp, #72]
    715c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7160:	ldr	x0, [sp, #72]
    7164:	ldr	x0, [x0, #16]
    7168:	mov	w2, #0x2                   	// #2
    716c:	ldr	x1, [sp, #32]
    7170:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7174:	str	w0, [sp, #68]
    7178:	ldr	w0, [sp, #68]
    717c:	cmp	w0, #0x0
    7180:	b.le	71ec <PySequence_Fast@plt+0x2fac>
    7184:	ldr	x0, [sp, #72]
    7188:	bl	538c <PySequence_Fast@plt+0x114c>
    718c:	str	x0, [sp, #56]
    7190:	ldr	x1, [sp, #56]
    7194:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7198:	ldr	x0, [x0, #3976]
    719c:	cmp	x1, x0
    71a0:	b.ne	71c8 <PySequence_Fast@plt+0x2f88>  // b.any
    71a4:	ldr	x2, [sp, #72]
    71a8:	mov	w1, #0x521                 	// #1313
    71ac:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    71b0:	add	x0, x0, #0x808
    71b4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    71b8:	mov	w1, #0x0                   	// #0
    71bc:	mov	x0, #0x0                   	// #0
    71c0:	bl	4200 <PyUnicode_New@plt>
    71c4:	b	7244 <PySequence_Fast@plt+0x3004>
    71c8:	ldr	x0, [sp, #56]
    71cc:	bl	4454 <PySequence_Fast@plt+0x214>
    71d0:	ldr	x2, [sp, #72]
    71d4:	mov	w1, #0x525                 	// #1317
    71d8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    71dc:	add	x0, x0, #0x808
    71e0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    71e4:	ldr	x0, [sp, #56]
    71e8:	b	7244 <PySequence_Fast@plt+0x3004>
    71ec:	ldr	x2, [sp, #72]
    71f0:	mov	w1, #0x528                 	// #1320
    71f4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    71f8:	add	x0, x0, #0x808
    71fc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    7200:	ldr	w0, [sp, #68]
    7204:	cmp	w0, #0x0
    7208:	b.ge	7214 <PySequence_Fast@plt+0x2fd4>  // b.tcont
    720c:	mov	x0, #0x0                   	// #0
    7210:	b	7244 <PySequence_Fast@plt+0x3004>
    7214:	ldr	x0, [sp, #88]
    7218:	add	x0, x0, #0x1
    721c:	str	x0, [sp, #88]
    7220:	ldr	x0, [sp, #40]
    7224:	ldr	x0, [x0, #40]
    7228:	ldr	x0, [x0, #8]
    722c:	ldr	x1, [sp, #88]
    7230:	cmp	x1, x0
    7234:	b.lt	7138 <PySequence_Fast@plt+0x2ef8>  // b.tstop
    7238:	ldr	x0, [sp, #24]
    723c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7240:	ldr	x0, [sp, #24]
    7244:	ldp	x29, x30, [sp], #96
    7248:	ret
    724c:	stp	x29, x30, [sp, #-96]!
    7250:	mov	x29, sp
    7254:	str	x0, [sp, #40]
    7258:	str	x1, [sp, #32]
    725c:	str	x2, [sp, #24]
    7260:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    7264:	add	x0, x0, #0x9b8
    7268:	bl	3fc0 <PyState_FindModule@plt>
    726c:	bl	3e10 <PyModule_GetState@plt>
    7270:	str	x0, [sp, #80]
    7274:	ldr	x0, [sp, #32]
    7278:	bl	68fc <PySequence_Fast@plt+0x26bc>
    727c:	cmp	w0, #0x0
    7280:	b.ne	7298 <PySequence_Fast@plt+0x3058>  // b.any
    7284:	ldr	x1, [sp, #24]
    7288:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    728c:	ldr	x0, [x0, #3976]
    7290:	cmp	x1, x0
    7294:	b.eq	72c4 <PySequence_Fast@plt+0x3084>  // b.none
    7298:	ldr	x0, [sp, #80]
    729c:	ldr	x6, [x0, #16]
    72a0:	mov	x5, #0x0                   	// #0
    72a4:	ldr	x4, [sp, #24]
    72a8:	ldr	x3, [sp, #32]
    72ac:	ldr	x2, [sp, #40]
    72b0:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    72b4:	add	x1, x0, #0x158
    72b8:	mov	x0, x6
    72bc:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    72c0:	b	73dc <PySequence_Fast@plt+0x319c>
    72c4:	mov	x0, #0x0                   	// #0
    72c8:	bl	3c50 <PyList_New@plt>
    72cc:	str	x0, [sp, #72]
    72d0:	ldr	x0, [sp, #72]
    72d4:	cmp	x0, #0x0
    72d8:	b.ne	72e4 <PySequence_Fast@plt+0x30a4>  // b.any
    72dc:	mov	x0, #0x0                   	// #0
    72e0:	b	73dc <PySequence_Fast@plt+0x319c>
    72e4:	ldr	x0, [sp, #40]
    72e8:	ldr	x0, [x0, #40]
    72ec:	cmp	x0, #0x0
    72f0:	b.ne	72fc <PySequence_Fast@plt+0x30bc>  // b.any
    72f4:	ldr	x0, [sp, #72]
    72f8:	b	73dc <PySequence_Fast@plt+0x319c>
    72fc:	str	xzr, [sp, #88]
    7300:	b	73c0 <PySequence_Fast@plt+0x3180>
    7304:	ldr	x0, [sp, #40]
    7308:	ldr	x0, [x0, #40]
    730c:	ldr	x1, [x0, #24]
    7310:	ldr	x0, [sp, #88]
    7314:	lsl	x0, x0, #3
    7318:	add	x0, x1, x0
    731c:	ldr	x0, [x0]
    7320:	str	x0, [sp, #64]
    7324:	ldr	x0, [sp, #64]
    7328:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    732c:	ldr	x0, [sp, #64]
    7330:	ldr	x0, [x0, #16]
    7334:	mov	w2, #0x2                   	// #2
    7338:	ldr	x1, [sp, #32]
    733c:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7340:	str	w0, [sp, #60]
    7344:	ldr	w0, [sp, #60]
    7348:	cmp	w0, #0x0
    734c:	b.eq	73a0 <PySequence_Fast@plt+0x3160>  // b.none
    7350:	ldr	w0, [sp, #60]
    7354:	cmp	w0, #0x0
    7358:	b.lt	7370 <PySequence_Fast@plt+0x3130>  // b.tstop
    735c:	ldr	x1, [sp, #64]
    7360:	ldr	x0, [sp, #72]
    7364:	bl	3f00 <PyList_Append@plt>
    7368:	cmp	w0, #0x0
    736c:	b.ge	73a0 <PySequence_Fast@plt+0x3160>  // b.tcont
    7370:	ldr	x2, [sp, #64]
    7374:	mov	w1, #0x557                 	// #1367
    7378:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    737c:	add	x0, x0, #0x808
    7380:	bl	4408 <PySequence_Fast@plt+0x1c8>
    7384:	ldr	x2, [sp, #72]
    7388:	mov	w1, #0x558                 	// #1368
    738c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7390:	add	x0, x0, #0x808
    7394:	bl	4408 <PySequence_Fast@plt+0x1c8>
    7398:	mov	x0, #0x0                   	// #0
    739c:	b	73dc <PySequence_Fast@plt+0x319c>
    73a0:	ldr	x2, [sp, #64]
    73a4:	mov	w1, #0x55b                 	// #1371
    73a8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    73ac:	add	x0, x0, #0x808
    73b0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    73b4:	ldr	x0, [sp, #88]
    73b8:	add	x0, x0, #0x1
    73bc:	str	x0, [sp, #88]
    73c0:	ldr	x0, [sp, #40]
    73c4:	ldr	x0, [x0, #40]
    73c8:	ldr	x0, [x0, #8]
    73cc:	ldr	x1, [sp, #88]
    73d0:	cmp	x1, x0
    73d4:	b.lt	7304 <PySequence_Fast@plt+0x30c4>  // b.tstop
    73d8:	ldr	x0, [sp, #72]
    73dc:	ldp	x29, x30, [sp], #96
    73e0:	ret
    73e4:	stp	x29, x30, [sp, #-64]!
    73e8:	mov	x29, sp
    73ec:	str	x0, [sp, #40]
    73f0:	str	x1, [sp, #32]
    73f4:	str	x2, [sp, #24]
    73f8:	ldr	x0, [sp, #32]
    73fc:	str	x0, [sp, #56]
    7400:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    7404:	add	x0, x0, #0x9b8
    7408:	bl	3fc0 <PyState_FindModule@plt>
    740c:	bl	3e10 <PyModule_GetState@plt>
    7410:	str	x0, [sp, #48]
    7414:	ldr	x0, [sp, #48]
    7418:	ldr	x6, [x0, #16]
    741c:	mov	x5, #0x0                   	// #0
    7420:	ldr	x4, [sp, #24]
    7424:	ldr	x3, [sp, #56]
    7428:	ldr	x2, [sp, #40]
    742c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    7430:	add	x1, x0, #0x170
    7434:	mov	x0, x6
    7438:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    743c:	ldp	x29, x30, [sp], #64
    7440:	ret
    7444:	stp	x29, x30, [sp, #-64]!
    7448:	mov	x29, sp
    744c:	str	x0, [sp, #40]
    7450:	str	x1, [sp, #32]
    7454:	str	x2, [sp, #24]
    7458:	ldr	x0, [sp, #40]
    745c:	ldr	x0, [x0, #40]
    7460:	cmp	x0, #0x0
    7464:	b.eq	7484 <PySequence_Fast@plt+0x3244>  // b.none
    7468:	ldr	x0, [sp, #40]
    746c:	ldr	x0, [x0, #40]
    7470:	ldr	x1, [x0]
    7474:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7478:	ldr	x0, [x0, #3976]
    747c:	cmp	x1, x0
    7480:	b.ne	7490 <PySequence_Fast@plt+0x3250>  // b.any
    7484:	ldr	x0, [sp, #24]
    7488:	str	x0, [sp, #56]
    748c:	b	74d0 <PySequence_Fast@plt+0x3290>
    7490:	ldr	x0, [sp, #40]
    7494:	ldr	x0, [x0, #40]
    7498:	ldr	x0, [x0]
    749c:	ldr	x1, [sp, #32]
    74a0:	bl	4230 <PyDict_GetItemWithError@plt>
    74a4:	str	x0, [sp, #56]
    74a8:	ldr	x0, [sp, #56]
    74ac:	cmp	x0, #0x0
    74b0:	b.ne	74d0 <PySequence_Fast@plt+0x3290>  // b.any
    74b4:	bl	3f80 <PyErr_Occurred@plt>
    74b8:	cmp	x0, #0x0
    74bc:	b.eq	74c8 <PySequence_Fast@plt+0x3288>  // b.none
    74c0:	mov	x0, #0x0                   	// #0
    74c4:	b	74dc <PySequence_Fast@plt+0x329c>
    74c8:	ldr	x0, [sp, #24]
    74cc:	str	x0, [sp, #56]
    74d0:	ldr	x0, [sp, #56]
    74d4:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    74d8:	ldr	x0, [sp, #56]
    74dc:	ldp	x29, x30, [sp], #64
    74e0:	ret
    74e4:	stp	x29, x30, [sp, #-64]!
    74e8:	mov	x29, sp
    74ec:	str	x0, [sp, #24]
    74f0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    74f4:	ldr	x0, [x0, #3936]
    74f8:	ldr	x3, [x0]
    74fc:	mov	x2, #0x1                   	// #1
    7500:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7504:	add	x1, x0, #0xa50
    7508:	mov	x0, x3
    750c:	bl	3d60 <PyErr_WarnEx@plt>
    7510:	cmp	w0, #0x0
    7514:	b.ge	7520 <PySequence_Fast@plt+0x32e0>  // b.tcont
    7518:	mov	x0, #0x0                   	// #0
    751c:	b	75d8 <PySequence_Fast@plt+0x3398>
    7520:	ldr	x0, [sp, #24]
    7524:	ldr	x0, [x0, #40]
    7528:	cmp	x0, #0x0
    752c:	b.ne	753c <PySequence_Fast@plt+0x32fc>  // b.any
    7530:	mov	x0, #0x0                   	// #0
    7534:	bl	3c50 <PyList_New@plt>
    7538:	b	75d8 <PySequence_Fast@plt+0x3398>
    753c:	ldr	x0, [sp, #24]
    7540:	ldr	x0, [x0, #40]
    7544:	ldr	x0, [x0, #8]
    7548:	bl	3c50 <PyList_New@plt>
    754c:	str	x0, [sp, #48]
    7550:	ldr	x0, [sp, #48]
    7554:	cmp	x0, #0x0
    7558:	b.ne	7564 <PySequence_Fast@plt+0x3324>  // b.any
    755c:	mov	x0, #0x0                   	// #0
    7560:	b	75d8 <PySequence_Fast@plt+0x3398>
    7564:	str	xzr, [sp, #56]
    7568:	b	75bc <PySequence_Fast@plt+0x337c>
    756c:	ldr	x0, [sp, #24]
    7570:	ldr	x0, [x0, #40]
    7574:	ldr	x1, [x0, #24]
    7578:	ldr	x0, [sp, #56]
    757c:	lsl	x0, x0, #3
    7580:	add	x0, x1, x0
    7584:	ldr	x0, [x0]
    7588:	str	x0, [sp, #40]
    758c:	ldr	x0, [sp, #40]
    7590:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7594:	ldr	x0, [sp, #48]
    7598:	ldr	x1, [x0, #24]
    759c:	ldr	x0, [sp, #56]
    75a0:	lsl	x0, x0, #3
    75a4:	add	x0, x1, x0
    75a8:	ldr	x1, [sp, #40]
    75ac:	str	x1, [x0]
    75b0:	ldr	x0, [sp, #56]
    75b4:	add	x0, x0, #0x1
    75b8:	str	x0, [sp, #56]
    75bc:	ldr	x0, [sp, #24]
    75c0:	ldr	x0, [x0, #40]
    75c4:	ldr	x0, [x0, #8]
    75c8:	ldr	x1, [sp, #56]
    75cc:	cmp	x1, x0
    75d0:	b.lt	756c <PySequence_Fast@plt+0x332c>  // b.tstop
    75d4:	ldr	x0, [sp, #48]
    75d8:	ldp	x29, x30, [sp], #64
    75dc:	ret
    75e0:	stp	x29, x30, [sp, #-32]!
    75e4:	mov	x29, sp
    75e8:	str	x0, [sp, #24]
    75ec:	str	x1, [sp, #16]
    75f0:	ldr	x0, [sp, #16]
    75f4:	ldr	x0, [x0, #8]
    75f8:	ldr	x0, [x0, #168]
    75fc:	and	x0, x0, #0x10000000
    7600:	cmp	x0, #0x0
    7604:	b.eq	77b8 <PySequence_Fast@plt+0x3578>  // b.none
    7608:	ldr	x0, [sp, #16]
    760c:	ldrb	w0, [x0, #32]
    7610:	and	w0, w0, #0xffffff80
    7614:	and	w0, w0, #0xff
    7618:	cmp	w0, #0x0
    761c:	b.ne	7638 <PySequence_Fast@plt+0x33f8>  // b.any
    7620:	ldr	x0, [sp, #16]
    7624:	bl	3c60 <_PyUnicode_Ready@plt>
    7628:	cmp	w0, #0x0
    762c:	b.ge	7638 <PySequence_Fast@plt+0x33f8>  // b.tcont
    7630:	mov	x0, #0x0                   	// #0
    7634:	b	780c <PySequence_Fast@plt+0x35cc>
    7638:	ldr	x0, [sp, #16]
    763c:	ldr	x0, [x0, #16]
    7640:	cmp	x0, #0x1
    7644:	b.ne	77fc <PySequence_Fast@plt+0x35bc>  // b.any
    7648:	ldr	x0, [sp, #16]
    764c:	ldrb	w0, [x0, #32]
    7650:	and	w0, w0, #0x1c
    7654:	and	w0, w0, #0xff
    7658:	cmp	w0, #0x4
    765c:	b.ne	76c4 <PySequence_Fast@plt+0x3484>  // b.any
    7660:	ldr	x0, [sp, #16]
    7664:	ldrb	w0, [x0, #32]
    7668:	and	w0, w0, #0x20
    766c:	and	w0, w0, #0xff
    7670:	cmp	w0, #0x0
    7674:	b.eq	76a8 <PySequence_Fast@plt+0x3468>  // b.none
    7678:	ldr	x0, [sp, #16]
    767c:	ldrb	w0, [x0, #32]
    7680:	and	w0, w0, #0x40
    7684:	and	w0, w0, #0xff
    7688:	cmp	w0, #0x0
    768c:	b.eq	769c <PySequence_Fast@plt+0x345c>  // b.none
    7690:	ldr	x0, [sp, #16]
    7694:	add	x0, x0, #0x30
    7698:	b	76b0 <PySequence_Fast@plt+0x3470>
    769c:	ldr	x0, [sp, #16]
    76a0:	add	x0, x0, #0x48
    76a4:	b	76b0 <PySequence_Fast@plt+0x3470>
    76a8:	ldr	x0, [sp, #16]
    76ac:	ldr	x0, [x0, #72]
    76b0:	ldrb	w0, [x0]
    76b4:	cmp	w0, #0x2a
    76b8:	cset	w0, eq  // eq = none
    76bc:	and	w0, w0, #0xff
    76c0:	b	77a0 <PySequence_Fast@plt+0x3560>
    76c4:	ldr	x0, [sp, #16]
    76c8:	ldrb	w0, [x0, #32]
    76cc:	and	w0, w0, #0x1c
    76d0:	and	w0, w0, #0xff
    76d4:	cmp	w0, #0x8
    76d8:	b.ne	7740 <PySequence_Fast@plt+0x3500>  // b.any
    76dc:	ldr	x0, [sp, #16]
    76e0:	ldrb	w0, [x0, #32]
    76e4:	and	w0, w0, #0x20
    76e8:	and	w0, w0, #0xff
    76ec:	cmp	w0, #0x0
    76f0:	b.eq	7724 <PySequence_Fast@plt+0x34e4>  // b.none
    76f4:	ldr	x0, [sp, #16]
    76f8:	ldrb	w0, [x0, #32]
    76fc:	and	w0, w0, #0x40
    7700:	and	w0, w0, #0xff
    7704:	cmp	w0, #0x0
    7708:	b.eq	7718 <PySequence_Fast@plt+0x34d8>  // b.none
    770c:	ldr	x0, [sp, #16]
    7710:	add	x0, x0, #0x30
    7714:	b	772c <PySequence_Fast@plt+0x34ec>
    7718:	ldr	x0, [sp, #16]
    771c:	add	x0, x0, #0x48
    7720:	b	772c <PySequence_Fast@plt+0x34ec>
    7724:	ldr	x0, [sp, #16]
    7728:	ldr	x0, [x0, #72]
    772c:	ldrh	w0, [x0]
    7730:	cmp	w0, #0x2a
    7734:	cset	w0, eq  // eq = none
    7738:	and	w0, w0, #0xff
    773c:	b	77a0 <PySequence_Fast@plt+0x3560>
    7740:	ldr	x0, [sp, #16]
    7744:	ldrb	w0, [x0, #32]
    7748:	and	w0, w0, #0x20
    774c:	and	w0, w0, #0xff
    7750:	cmp	w0, #0x0
    7754:	b.eq	7788 <PySequence_Fast@plt+0x3548>  // b.none
    7758:	ldr	x0, [sp, #16]
    775c:	ldrb	w0, [x0, #32]
    7760:	and	w0, w0, #0x40
    7764:	and	w0, w0, #0xff
    7768:	cmp	w0, #0x0
    776c:	b.eq	777c <PySequence_Fast@plt+0x353c>  // b.none
    7770:	ldr	x0, [sp, #16]
    7774:	add	x0, x0, #0x30
    7778:	b	7790 <PySequence_Fast@plt+0x3550>
    777c:	ldr	x0, [sp, #16]
    7780:	add	x0, x0, #0x48
    7784:	b	7790 <PySequence_Fast@plt+0x3550>
    7788:	ldr	x0, [sp, #16]
    778c:	ldr	x0, [x0, #72]
    7790:	ldr	w0, [x0]
    7794:	cmp	w0, #0x2a
    7798:	cset	w0, eq  // eq = none
    779c:	and	w0, w0, #0xff
    77a0:	cmp	w0, #0x0
    77a4:	b.eq	77fc <PySequence_Fast@plt+0x35bc>  // b.none
    77a8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    77ac:	ldr	x0, [x0, #3976]
    77b0:	str	x0, [sp, #16]
    77b4:	b	77fc <PySequence_Fast@plt+0x35bc>
    77b8:	ldr	x0, [sp, #16]
    77bc:	ldr	x0, [x0, #8]
    77c0:	ldr	x0, [x0, #168]
    77c4:	and	x0, x0, #0x8000000
    77c8:	cmp	x0, #0x0
    77cc:	b.eq	77fc <PySequence_Fast@plt+0x35bc>  // b.none
    77d0:	ldr	x0, [sp, #16]
    77d4:	ldr	x0, [x0, #16]
    77d8:	cmp	x0, #0x1
    77dc:	b.ne	77fc <PySequence_Fast@plt+0x35bc>  // b.any
    77e0:	ldr	x0, [sp, #16]
    77e4:	ldrb	w0, [x0, #32]
    77e8:	cmp	w0, #0x2a
    77ec:	b.ne	77fc <PySequence_Fast@plt+0x35bc>  // b.any
    77f0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    77f4:	ldr	x0, [x0, #3976]
    77f8:	str	x0, [sp, #16]
    77fc:	mov	w2, #0x0                   	// #0
    7800:	ldr	x1, [sp, #16]
    7804:	ldr	x0, [sp, #24]
    7808:	bl	946c <PySequence_Fast@plt+0x522c>
    780c:	ldp	x29, x30, [sp], #32
    7810:	ret
    7814:	stp	x29, x30, [sp, #-32]!
    7818:	mov	x29, sp
    781c:	str	x0, [sp, #24]
    7820:	str	x1, [sp, #16]
    7824:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7828:	ldr	x0, [x0, #3936]
    782c:	ldr	x3, [x0]
    7830:	mov	x2, #0x1                   	// #1
    7834:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7838:	add	x1, x0, #0xab8
    783c:	mov	x0, x3
    7840:	bl	3d60 <PyErr_WarnEx@plt>
    7844:	cmp	w0, #0x0
    7848:	b.ge	7854 <PySequence_Fast@plt+0x3614>  // b.tcont
    784c:	mov	x0, #0x0                   	// #0
    7850:	b	7860 <PySequence_Fast@plt+0x3620>
    7854:	ldr	x1, [sp, #16]
    7858:	ldr	x0, [sp, #24]
    785c:	bl	75e0 <PySequence_Fast@plt+0x33a0>
    7860:	ldp	x29, x30, [sp], #32
    7864:	ret
    7868:	stp	x29, x30, [sp, #-32]!
    786c:	mov	x29, sp
    7870:	str	x0, [sp, #24]
    7874:	mov	w2, #0x1                   	// #1
    7878:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    787c:	ldr	x1, [x0, #3976]
    7880:	ldr	x0, [sp, #24]
    7884:	bl	946c <PySequence_Fast@plt+0x522c>
    7888:	ldp	x29, x30, [sp], #32
    788c:	ret
    7890:	stp	x29, x30, [sp, #-48]!
    7894:	mov	x29, sp
    7898:	str	x0, [sp, #24]
    789c:	str	x1, [sp, #16]
    78a0:	ldr	x0, [sp, #24]
    78a4:	str	x0, [sp, #40]
    78a8:	ldr	x0, [sp, #40]
    78ac:	ldr	x0, [x0, #40]
    78b0:	cmp	x0, #0x0
    78b4:	b.eq	78dc <PySequence_Fast@plt+0x369c>  // b.none
    78b8:	ldr	x0, [sp, #16]
    78bc:	cmp	x0, #0x0
    78c0:	b.lt	78dc <PySequence_Fast@plt+0x369c>  // b.tstop
    78c4:	ldr	x0, [sp, #40]
    78c8:	ldr	x0, [x0, #40]
    78cc:	ldr	x0, [x0, #8]
    78d0:	ldr	x1, [sp, #16]
    78d4:	cmp	x1, x0
    78d8:	b.lt	7900 <PySequence_Fast@plt+0x36c0>  // b.tstop
    78dc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    78e0:	ldr	x0, [x0, #3984]
    78e4:	ldr	x2, [x0]
    78e8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    78ec:	add	x1, x0, #0xb20
    78f0:	mov	x0, x2
    78f4:	bl	3de0 <PyErr_SetString@plt>
    78f8:	mov	x0, #0x0                   	// #0
    78fc:	b	793c <PySequence_Fast@plt+0x36fc>
    7900:	ldr	x0, [sp, #40]
    7904:	ldr	x0, [x0, #40]
    7908:	ldr	x1, [x0, #24]
    790c:	ldr	x0, [sp, #16]
    7910:	lsl	x0, x0, #3
    7914:	add	x0, x1, x0
    7918:	ldr	x0, [x0]
    791c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7920:	ldr	x0, [sp, #40]
    7924:	ldr	x0, [x0, #40]
    7928:	ldr	x1, [x0, #24]
    792c:	ldr	x0, [sp, #16]
    7930:	lsl	x0, x0, #3
    7934:	add	x0, x1, x0
    7938:	ldr	x0, [x0]
    793c:	ldp	x29, x30, [sp], #48
    7940:	ret
    7944:	stp	x29, x30, [sp, #-64]!
    7948:	mov	x29, sp
    794c:	str	x0, [sp, #40]
    7950:	str	x1, [sp, #32]
    7954:	str	x2, [sp, #24]
    7958:	ldr	x0, [sp, #40]
    795c:	ldr	x0, [x0, #40]
    7960:	cmp	x0, #0x0
    7964:	b.ne	7984 <PySequence_Fast@plt+0x3744>  // b.any
    7968:	mov	x1, #0x0                   	// #0
    796c:	ldr	x0, [sp, #40]
    7970:	bl	49d8 <PySequence_Fast@plt+0x798>
    7974:	cmp	w0, #0x0
    7978:	b.ge	7984 <PySequence_Fast@plt+0x3744>  // b.tcont
    797c:	mov	x0, #0x0                   	// #0
    7980:	b	7ab8 <PySequence_Fast@plt+0x3878>
    7984:	ldr	x0, [sp, #32]
    7988:	cmp	x0, #0x0
    798c:	b.ge	79b8 <PySequence_Fast@plt+0x3778>  // b.tcont
    7990:	ldr	x0, [sp, #40]
    7994:	ldr	x0, [x0, #40]
    7998:	ldr	x0, [x0, #8]
    799c:	ldr	x1, [sp, #32]
    79a0:	add	x0, x1, x0
    79a4:	str	x0, [sp, #32]
    79a8:	ldr	x0, [sp, #32]
    79ac:	cmp	x0, #0x0
    79b0:	b.ge	79b8 <PySequence_Fast@plt+0x3778>  // b.tcont
    79b4:	str	xzr, [sp, #32]
    79b8:	ldr	x0, [sp, #40]
    79bc:	ldr	x0, [x0, #40]
    79c0:	ldr	x0, [x0, #8]
    79c4:	ldr	x1, [sp, #32]
    79c8:	cmp	x1, x0
    79cc:	b.le	79e0 <PySequence_Fast@plt+0x37a0>
    79d0:	ldr	x0, [sp, #40]
    79d4:	ldr	x0, [x0, #40]
    79d8:	ldr	x0, [x0, #8]
    79dc:	str	x0, [sp, #32]
    79e0:	mov	x1, #0x1                   	// #1
    79e4:	ldr	x0, [sp, #40]
    79e8:	bl	5060 <PySequence_Fast@plt+0xe20>
    79ec:	cmp	w0, #0x0
    79f0:	b.ge	79fc <PySequence_Fast@plt+0x37bc>  // b.tcont
    79f4:	mov	x0, #0x0                   	// #0
    79f8:	b	7ab8 <PySequence_Fast@plt+0x3878>
    79fc:	ldr	x0, [sp, #40]
    7a00:	ldr	x0, [x0, #40]
    7a04:	ldr	x0, [x0, #8]
    7a08:	str	x0, [sp, #56]
    7a0c:	b	7a58 <PySequence_Fast@plt+0x3818>
    7a10:	ldr	x0, [sp, #40]
    7a14:	ldr	x0, [x0, #40]
    7a18:	ldr	x1, [x0, #24]
    7a1c:	ldr	x0, [sp, #56]
    7a20:	lsl	x0, x0, #3
    7a24:	sub	x0, x0, #0x8
    7a28:	add	x1, x1, x0
    7a2c:	ldr	x0, [sp, #40]
    7a30:	ldr	x0, [x0, #40]
    7a34:	ldr	x2, [x0, #24]
    7a38:	ldr	x0, [sp, #56]
    7a3c:	lsl	x0, x0, #3
    7a40:	add	x0, x2, x0
    7a44:	ldr	x1, [x1]
    7a48:	str	x1, [x0]
    7a4c:	ldr	x0, [sp, #56]
    7a50:	sub	x0, x0, #0x1
    7a54:	str	x0, [sp, #56]
    7a58:	ldr	x1, [sp, #56]
    7a5c:	ldr	x0, [sp, #32]
    7a60:	cmp	x1, x0
    7a64:	b.gt	7a10 <PySequence_Fast@plt+0x37d0>
    7a68:	ldr	x0, [sp, #24]
    7a6c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7a70:	ldr	x0, [sp, #40]
    7a74:	ldr	x0, [x0, #40]
    7a78:	ldr	x1, [x0, #24]
    7a7c:	ldr	x0, [sp, #32]
    7a80:	lsl	x0, x0, #3
    7a84:	add	x0, x1, x0
    7a88:	ldr	x1, [sp, #24]
    7a8c:	str	x1, [x0]
    7a90:	ldr	x0, [sp, #40]
    7a94:	ldr	x0, [x0, #40]
    7a98:	ldr	x1, [x0, #8]
    7a9c:	add	x1, x1, #0x1
    7aa0:	str	x1, [x0, #8]
    7aa4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7aa8:	ldr	x0, [x0, #3976]
    7aac:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7ab0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7ab4:	ldr	x0, [x0, #3976]
    7ab8:	ldp	x29, x30, [sp], #64
    7abc:	ret
    7ac0:	stp	x29, x30, [sp, #-32]!
    7ac4:	mov	x29, sp
    7ac8:	str	x0, [sp, #24]
    7acc:	ldr	x0, [sp, #24]
    7ad0:	ldr	x0, [x0, #40]
    7ad4:	cmp	x0, #0x0
    7ad8:	b.eq	7af8 <PySequence_Fast@plt+0x38b8>  // b.none
    7adc:	ldr	x0, [sp, #24]
    7ae0:	ldr	x0, [x0, #40]
    7ae4:	ldr	x1, [x0]
    7ae8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7aec:	ldr	x0, [x0, #3976]
    7af0:	cmp	x1, x0
    7af4:	b.ne	7b04 <PySequence_Fast@plt+0x38c4>  // b.any
    7af8:	mov	x0, #0x0                   	// #0
    7afc:	bl	3c50 <PyList_New@plt>
    7b00:	b	7b14 <PySequence_Fast@plt+0x38d4>
    7b04:	ldr	x0, [sp, #24]
    7b08:	ldr	x0, [x0, #40]
    7b0c:	ldr	x0, [x0]
    7b10:	bl	3c80 <PyDict_Items@plt>
    7b14:	ldp	x29, x30, [sp], #32
    7b18:	ret
    7b1c:	stp	x29, x30, [sp, #-32]!
    7b20:	mov	x29, sp
    7b24:	str	x0, [sp, #24]
    7b28:	ldr	x0, [sp, #24]
    7b2c:	ldr	x0, [x0, #40]
    7b30:	cmp	x0, #0x0
    7b34:	b.eq	7b54 <PySequence_Fast@plt+0x3914>  // b.none
    7b38:	ldr	x0, [sp, #24]
    7b3c:	ldr	x0, [x0, #40]
    7b40:	ldr	x1, [x0]
    7b44:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7b48:	ldr	x0, [x0, #3976]
    7b4c:	cmp	x1, x0
    7b50:	b.ne	7b60 <PySequence_Fast@plt+0x3920>  // b.any
    7b54:	mov	x0, #0x0                   	// #0
    7b58:	bl	3c50 <PyList_New@plt>
    7b5c:	b	7b70 <PySequence_Fast@plt+0x3930>
    7b60:	ldr	x0, [sp, #24]
    7b64:	ldr	x0, [x0, #40]
    7b68:	ldr	x0, [x0]
    7b6c:	bl	40e0 <PyDict_Keys@plt>
    7b70:	ldp	x29, x30, [sp], #32
    7b74:	ret
    7b78:	sub	sp, sp, #0x10
    7b7c:	str	x0, [sp, #8]
    7b80:	ldr	x0, [sp, #8]
    7b84:	ldr	x0, [x0, #40]
    7b88:	cmp	x0, #0x0
    7b8c:	b.ne	7b98 <PySequence_Fast@plt+0x3958>  // b.any
    7b90:	mov	x0, #0x0                   	// #0
    7b94:	b	7ba4 <PySequence_Fast@plt+0x3964>
    7b98:	ldr	x0, [sp, #8]
    7b9c:	ldr	x0, [x0, #40]
    7ba0:	ldr	x0, [x0, #8]
    7ba4:	add	sp, sp, #0x10
    7ba8:	ret
    7bac:	stp	x29, x30, [sp, #-64]!
    7bb0:	mov	x29, sp
    7bb4:	str	x0, [sp, #40]
    7bb8:	str	x1, [sp, #32]
    7bbc:	str	x2, [sp, #24]
    7bc0:	ldr	x0, [sp, #24]
    7bc4:	bl	4150 <PyDict_Copy@plt>
    7bc8:	str	x0, [sp, #24]
    7bcc:	ldr	x0, [sp, #24]
    7bd0:	cmp	x0, #0x0
    7bd4:	b.ne	7be0 <PySequence_Fast@plt+0x39a0>  // b.any
    7bd8:	mov	x0, #0x0                   	// #0
    7bdc:	b	7c08 <PySequence_Fast@plt+0x39c8>
    7be0:	ldr	x1, [sp, #24]
    7be4:	ldr	x0, [sp, #32]
    7be8:	bl	4b94 <PySequence_Fast@plt+0x954>
    7bec:	str	x0, [sp, #56]
    7bf0:	ldr	x2, [sp, #24]
    7bf4:	mov	w1, #0x672                 	// #1650
    7bf8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7bfc:	add	x0, x0, #0x808
    7c00:	bl	4408 <PySequence_Fast@plt+0x1c8>
    7c04:	ldr	x0, [sp, #56]
    7c08:	ldp	x29, x30, [sp], #64
    7c0c:	ret
    7c10:	stp	x29, x30, [sp, #-64]!
    7c14:	mov	x29, sp
    7c18:	str	x0, [sp, #24]
    7c1c:	str	x1, [sp, #16]
    7c20:	ldr	x0, [sp, #24]
    7c24:	ldr	x0, [x0, #40]
    7c28:	cmp	x0, #0x0
    7c2c:	b.ne	7c54 <PySequence_Fast@plt+0x3a14>  // b.any
    7c30:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7c34:	ldr	x0, [x0, #3928]
    7c38:	ldr	x2, [x0]
    7c3c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7c40:	add	x1, x0, #0xb40
    7c44:	mov	x0, x2
    7c48:	bl	3de0 <PyErr_SetString@plt>
    7c4c:	mov	x0, #0x0                   	// #0
    7c50:	b	7e00 <PySequence_Fast@plt+0x3bc0>
    7c54:	str	xzr, [sp, #56]
    7c58:	b	7cdc <PySequence_Fast@plt+0x3a9c>
    7c5c:	ldr	x0, [sp, #24]
    7c60:	ldr	x0, [x0, #40]
    7c64:	ldr	x1, [x0, #24]
    7c68:	ldr	x0, [sp, #56]
    7c6c:	lsl	x0, x0, #3
    7c70:	add	x0, x1, x0
    7c74:	ldr	x0, [x0]
    7c78:	ldr	x1, [sp, #16]
    7c7c:	cmp	x1, x0
    7c80:	b.eq	7cf8 <PySequence_Fast@plt+0x3ab8>  // b.none
    7c84:	ldr	x0, [sp, #24]
    7c88:	ldr	x0, [x0, #40]
    7c8c:	ldr	x1, [x0, #24]
    7c90:	ldr	x0, [sp, #56]
    7c94:	lsl	x0, x0, #3
    7c98:	add	x0, x1, x0
    7c9c:	ldr	x0, [x0]
    7ca0:	mov	w2, #0x2                   	// #2
    7ca4:	ldr	x1, [sp, #16]
    7ca8:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7cac:	str	w0, [sp, #52]
    7cb0:	ldr	w0, [sp, #52]
    7cb4:	cmp	w0, #0x0
    7cb8:	b.gt	7d00 <PySequence_Fast@plt+0x3ac0>
    7cbc:	ldr	w0, [sp, #52]
    7cc0:	cmp	w0, #0x0
    7cc4:	b.ge	7cd0 <PySequence_Fast@plt+0x3a90>  // b.tcont
    7cc8:	mov	x0, #0x0                   	// #0
    7ccc:	b	7e00 <PySequence_Fast@plt+0x3bc0>
    7cd0:	ldr	x0, [sp, #56]
    7cd4:	add	x0, x0, #0x1
    7cd8:	str	x0, [sp, #56]
    7cdc:	ldr	x0, [sp, #24]
    7ce0:	ldr	x0, [x0, #40]
    7ce4:	ldr	x0, [x0, #8]
    7ce8:	ldr	x1, [sp, #56]
    7cec:	cmp	x1, x0
    7cf0:	b.lt	7c5c <PySequence_Fast@plt+0x3a1c>  // b.tstop
    7cf4:	b	7d04 <PySequence_Fast@plt+0x3ac4>
    7cf8:	nop
    7cfc:	b	7d04 <PySequence_Fast@plt+0x3ac4>
    7d00:	nop
    7d04:	ldr	x0, [sp, #24]
    7d08:	ldr	x0, [x0, #40]
    7d0c:	ldr	x0, [x0, #8]
    7d10:	ldr	x1, [sp, #56]
    7d14:	cmp	x1, x0
    7d18:	b.lt	7d40 <PySequence_Fast@plt+0x3b00>  // b.tstop
    7d1c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7d20:	ldr	x0, [x0, #3928]
    7d24:	ldr	x2, [x0]
    7d28:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7d2c:	add	x1, x0, #0xb40
    7d30:	mov	x0, x2
    7d34:	bl	3de0 <PyErr_SetString@plt>
    7d38:	mov	x0, #0x0                   	// #0
    7d3c:	b	7e00 <PySequence_Fast@plt+0x3bc0>
    7d40:	ldr	x0, [sp, #24]
    7d44:	ldr	x0, [x0, #40]
    7d48:	ldr	x1, [x0, #24]
    7d4c:	ldr	x0, [sp, #56]
    7d50:	lsl	x0, x0, #3
    7d54:	add	x0, x1, x0
    7d58:	ldr	x0, [x0]
    7d5c:	str	x0, [sp, #40]
    7d60:	ldr	x0, [sp, #24]
    7d64:	ldr	x0, [x0, #40]
    7d68:	ldr	x1, [x0, #8]
    7d6c:	sub	x1, x1, #0x1
    7d70:	str	x1, [x0, #8]
    7d74:	b	7dc0 <PySequence_Fast@plt+0x3b80>
    7d78:	ldr	x0, [sp, #24]
    7d7c:	ldr	x0, [x0, #40]
    7d80:	ldr	x1, [x0, #24]
    7d84:	ldr	x0, [sp, #56]
    7d88:	add	x0, x0, #0x1
    7d8c:	lsl	x0, x0, #3
    7d90:	add	x1, x1, x0
    7d94:	ldr	x0, [sp, #24]
    7d98:	ldr	x0, [x0, #40]
    7d9c:	ldr	x2, [x0, #24]
    7da0:	ldr	x0, [sp, #56]
    7da4:	lsl	x0, x0, #3
    7da8:	add	x0, x2, x0
    7dac:	ldr	x1, [x1]
    7db0:	str	x1, [x0]
    7db4:	ldr	x0, [sp, #56]
    7db8:	add	x0, x0, #0x1
    7dbc:	str	x0, [sp, #56]
    7dc0:	ldr	x0, [sp, #24]
    7dc4:	ldr	x0, [x0, #40]
    7dc8:	ldr	x0, [x0, #8]
    7dcc:	ldr	x1, [sp, #56]
    7dd0:	cmp	x1, x0
    7dd4:	b.lt	7d78 <PySequence_Fast@plt+0x3b38>  // b.tstop
    7dd8:	ldr	x2, [sp, #40]
    7ddc:	mov	w1, #0x6a9                 	// #1705
    7de0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7de4:	add	x0, x0, #0x808
    7de8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    7dec:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7df0:	ldr	x0, [x0, #3976]
    7df4:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7df8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7dfc:	ldr	x0, [x0, #3976]
    7e00:	ldp	x29, x30, [sp], #64
    7e04:	ret
    7e08:	stp	x29, x30, [sp, #-48]!
    7e0c:	mov	x29, sp
    7e10:	str	x0, [sp, #24]
    7e14:	ldr	x0, [sp, #24]
    7e18:	ldr	x0, [x0, #16]
    7e1c:	cmp	x0, #0x0
    7e20:	b.ne	7e38 <PySequence_Fast@plt+0x3bf8>  // b.any
    7e24:	ldr	x1, [sp, #24]
    7e28:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7e2c:	add	x0, x0, #0xb60
    7e30:	bl	3c30 <PyUnicode_FromFormat@plt>
    7e34:	b	7ebc <PySequence_Fast@plt+0x3c7c>
    7e38:	ldr	x0, [sp, #24]
    7e3c:	bl	3fe0 <Py_ReprEnter@plt>
    7e40:	str	w0, [sp, #44]
    7e44:	ldr	w0, [sp, #44]
    7e48:	cmp	w0, #0x0
    7e4c:	b.ne	7e80 <PySequence_Fast@plt+0x3c40>  // b.any
    7e50:	ldr	x0, [sp, #24]
    7e54:	ldr	x0, [x0, #16]
    7e58:	ldr	x2, [sp, #24]
    7e5c:	mov	x1, x0
    7e60:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7e64:	add	x0, x0, #0xb70
    7e68:	bl	3c30 <PyUnicode_FromFormat@plt>
    7e6c:	str	x0, [sp, #32]
    7e70:	ldr	x0, [sp, #24]
    7e74:	bl	41a0 <Py_ReprLeave@plt>
    7e78:	ldr	x0, [sp, #32]
    7e7c:	b	7ebc <PySequence_Fast@plt+0x3c7c>
    7e80:	ldr	w0, [sp, #44]
    7e84:	cmp	w0, #0x0
    7e88:	b.le	7eb8 <PySequence_Fast@plt+0x3c78>
    7e8c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7e90:	ldr	x0, [x0, #3920]
    7e94:	ldr	x3, [x0]
    7e98:	ldr	x0, [sp, #24]
    7e9c:	ldr	x0, [x0, #8]
    7ea0:	ldr	x0, [x0, #24]
    7ea4:	mov	x2, x0
    7ea8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7eac:	add	x1, x0, #0xb88
    7eb0:	mov	x0, x3
    7eb4:	bl	4180 <PyErr_Format@plt>
    7eb8:	mov	x0, #0x0                   	// #0
    7ebc:	ldp	x29, x30, [sp], #48
    7ec0:	ret
    7ec4:	stp	x29, x30, [sp, #-64]!
    7ec8:	mov	x29, sp
    7ecc:	str	x0, [sp, #40]
    7ed0:	str	x1, [sp, #32]
    7ed4:	str	x2, [sp, #24]
    7ed8:	ldr	x0, [sp, #40]
    7edc:	ldr	x0, [x0, #40]
    7ee0:	cmp	x0, #0x0
    7ee4:	b.ne	7f04 <PySequence_Fast@plt+0x3cc4>  // b.any
    7ee8:	mov	x1, #0x0                   	// #0
    7eec:	ldr	x0, [sp, #40]
    7ef0:	bl	49d8 <PySequence_Fast@plt+0x798>
    7ef4:	cmp	w0, #0x0
    7ef8:	b.ge	7f04 <PySequence_Fast@plt+0x3cc4>  // b.tcont
    7efc:	mov	x0, #0x0                   	// #0
    7f00:	b	7f58 <PySequence_Fast@plt+0x3d18>
    7f04:	ldr	x0, [sp, #40]
    7f08:	bl	530c <PySequence_Fast@plt+0x10cc>
    7f0c:	str	x0, [sp, #56]
    7f10:	ldr	x0, [sp, #56]
    7f14:	cmp	x0, #0x0
    7f18:	b.ne	7f24 <PySequence_Fast@plt+0x3ce4>  // b.any
    7f1c:	mov	x0, #0x0                   	// #0
    7f20:	b	7f58 <PySequence_Fast@plt+0x3d18>
    7f24:	ldr	x2, [sp, #24]
    7f28:	ldr	x1, [sp, #32]
    7f2c:	ldr	x0, [sp, #56]
    7f30:	bl	4140 <PyDict_SetItem@plt>
    7f34:	cmp	w0, #0x0
    7f38:	b.ge	7f44 <PySequence_Fast@plt+0x3d04>  // b.tcont
    7f3c:	mov	x0, #0x0                   	// #0
    7f40:	b	7f58 <PySequence_Fast@plt+0x3d18>
    7f44:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7f48:	ldr	x0, [x0, #3976]
    7f4c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    7f50:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7f54:	ldr	x0, [x0, #3976]
    7f58:	ldp	x29, x30, [sp], #64
    7f5c:	ret
    7f60:	stp	x29, x30, [sp, #-80]!
    7f64:	mov	x29, sp
    7f68:	str	x0, [sp, #40]
    7f6c:	str	x1, [sp, #32]
    7f70:	str	x2, [sp, #24]
    7f74:	ldr	x0, [sp, #40]
    7f78:	str	x0, [sp, #64]
    7f7c:	ldr	x0, [sp, #64]
    7f80:	ldr	x0, [x0, #40]
    7f84:	cmp	x0, #0x0
    7f88:	b.eq	7fb0 <PySequence_Fast@plt+0x3d70>  // b.none
    7f8c:	ldr	x0, [sp, #32]
    7f90:	cmp	x0, #0x0
    7f94:	b.lt	7fb0 <PySequence_Fast@plt+0x3d70>  // b.tstop
    7f98:	ldr	x0, [sp, #64]
    7f9c:	ldr	x0, [x0, #40]
    7fa0:	ldr	x0, [x0, #8]
    7fa4:	ldr	x1, [sp, #32]
    7fa8:	cmp	x1, x0
    7fac:	b.lt	7fd4 <PySequence_Fast@plt+0x3d94>  // b.tstop
    7fb0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    7fb4:	ldr	x0, [x0, #3984]
    7fb8:	ldr	x2, [x0]
    7fbc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    7fc0:	add	x1, x0, #0xbb0
    7fc4:	mov	x0, x2
    7fc8:	bl	3de0 <PyErr_SetString@plt>
    7fcc:	mov	w0, #0xffffffff            	// #-1
    7fd0:	b	810c <PySequence_Fast@plt+0x3ecc>
    7fd4:	ldr	x0, [sp, #64]
    7fd8:	ldr	x0, [x0, #40]
    7fdc:	ldr	x1, [x0, #24]
    7fe0:	ldr	x0, [sp, #32]
    7fe4:	lsl	x0, x0, #3
    7fe8:	add	x0, x1, x0
    7fec:	ldr	x0, [x0]
    7ff0:	str	x0, [sp, #56]
    7ff4:	ldr	x0, [sp, #24]
    7ff8:	cmp	x0, #0x0
    7ffc:	b.eq	8074 <PySequence_Fast@plt+0x3e34>  // b.none
    8000:	ldr	x0, [sp, #24]
    8004:	ldr	x1, [x0, #8]
    8008:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    800c:	add	x0, x0, #0x320
    8010:	cmp	x1, x0
    8014:	b.eq	8048 <PySequence_Fast@plt+0x3e08>  // b.none
    8018:	ldr	x0, [sp, #24]
    801c:	ldr	x2, [x0, #8]
    8020:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    8024:	add	x1, x0, #0x320
    8028:	mov	x0, x2
    802c:	bl	4160 <PyType_IsSubtype@plt>
    8030:	cmp	w0, #0x0
    8034:	b.ne	8048 <PySequence_Fast@plt+0x3e08>  // b.any
    8038:	ldr	x0, [sp, #24]
    803c:	bl	5204 <PySequence_Fast@plt+0xfc4>
    8040:	mov	w0, #0xffffffff            	// #-1
    8044:	b	810c <PySequence_Fast@plt+0x3ecc>
    8048:	ldr	x0, [sp, #24]
    804c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    8050:	ldr	x0, [sp, #64]
    8054:	ldr	x0, [x0, #40]
    8058:	ldr	x1, [x0, #24]
    805c:	ldr	x0, [sp, #32]
    8060:	lsl	x0, x0, #3
    8064:	add	x0, x1, x0
    8068:	ldr	x1, [sp, #24]
    806c:	str	x1, [x0]
    8070:	b	80f4 <PySequence_Fast@plt+0x3eb4>
    8074:	ldr	x0, [sp, #64]
    8078:	ldr	x0, [x0, #40]
    807c:	ldr	x1, [x0, #8]
    8080:	sub	x1, x1, #0x1
    8084:	str	x1, [x0, #8]
    8088:	ldr	x0, [sp, #32]
    808c:	str	x0, [sp, #72]
    8090:	b	80dc <PySequence_Fast@plt+0x3e9c>
    8094:	ldr	x0, [sp, #64]
    8098:	ldr	x0, [x0, #40]
    809c:	ldr	x1, [x0, #24]
    80a0:	ldr	x0, [sp, #72]
    80a4:	add	x0, x0, #0x1
    80a8:	lsl	x0, x0, #3
    80ac:	add	x1, x1, x0
    80b0:	ldr	x0, [sp, #64]
    80b4:	ldr	x0, [x0, #40]
    80b8:	ldr	x2, [x0, #24]
    80bc:	ldr	x0, [sp, #72]
    80c0:	lsl	x0, x0, #3
    80c4:	add	x0, x2, x0
    80c8:	ldr	x1, [x1]
    80cc:	str	x1, [x0]
    80d0:	ldr	x0, [sp, #72]
    80d4:	add	x0, x0, #0x1
    80d8:	str	x0, [sp, #72]
    80dc:	ldr	x0, [sp, #64]
    80e0:	ldr	x0, [x0, #40]
    80e4:	ldr	x0, [x0, #8]
    80e8:	ldr	x1, [sp, #72]
    80ec:	cmp	x1, x0
    80f0:	b.lt	8094 <PySequence_Fast@plt+0x3e54>  // b.tstop
    80f4:	ldr	x2, [sp, #56]
    80f8:	mov	w1, #0x6ff                 	// #1791
    80fc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8100:	add	x0, x0, #0x808
    8104:	bl	4408 <PySequence_Fast@plt+0x1c8>
    8108:	mov	w0, #0x0                   	// #0
    810c:	ldp	x29, x30, [sp], #80
    8110:	ret
    8114:	stp	x29, x30, [sp, #-112]!
    8118:	mov	x29, sp
    811c:	str	x0, [sp, #24]
    8120:	str	x1, [sp, #16]
    8124:	ldr	x0, [sp, #24]
    8128:	str	x0, [sp, #80]
    812c:	ldr	x0, [sp, #16]
    8130:	ldr	x0, [x0, #8]
    8134:	ldr	x0, [x0, #96]
    8138:	cmp	x0, #0x0
    813c:	b.eq	81d8 <PySequence_Fast@plt+0x3f98>  // b.none
    8140:	ldr	x0, [sp, #16]
    8144:	ldr	x0, [x0, #8]
    8148:	ldr	x0, [x0, #96]
    814c:	ldr	x0, [x0, #264]
    8150:	cmp	x0, #0x0
    8154:	b.eq	81d8 <PySequence_Fast@plt+0x3f98>  // b.none
    8158:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    815c:	ldr	x0, [x0, #3984]
    8160:	ldr	x0, [x0]
    8164:	mov	x1, x0
    8168:	ldr	x0, [sp, #16]
    816c:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    8170:	str	x0, [sp, #104]
    8174:	ldr	x0, [sp, #104]
    8178:	cmn	x0, #0x1
    817c:	b.ne	8194 <PySequence_Fast@plt+0x3f54>  // b.any
    8180:	bl	3f80 <PyErr_Occurred@plt>
    8184:	cmp	x0, #0x0
    8188:	b.eq	8194 <PySequence_Fast@plt+0x3f54>  // b.none
    818c:	mov	x0, #0x0                   	// #0
    8190:	b	8340 <PySequence_Fast@plt+0x4100>
    8194:	ldr	x0, [sp, #104]
    8198:	cmp	x0, #0x0
    819c:	b.ge	81c8 <PySequence_Fast@plt+0x3f88>  // b.tcont
    81a0:	ldr	x0, [sp, #80]
    81a4:	ldr	x0, [x0, #40]
    81a8:	cmp	x0, #0x0
    81ac:	b.eq	81c8 <PySequence_Fast@plt+0x3f88>  // b.none
    81b0:	ldr	x0, [sp, #80]
    81b4:	ldr	x0, [x0, #40]
    81b8:	ldr	x0, [x0, #8]
    81bc:	ldr	x1, [sp, #104]
    81c0:	add	x0, x1, x0
    81c4:	str	x0, [sp, #104]
    81c8:	ldr	x1, [sp, #104]
    81cc:	ldr	x0, [sp, #24]
    81d0:	bl	7890 <PySequence_Fast@plt+0x3650>
    81d4:	b	8340 <PySequence_Fast@plt+0x4100>
    81d8:	ldr	x0, [sp, #16]
    81dc:	ldr	x1, [x0, #8]
    81e0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    81e4:	ldr	x0, [x0, #3952]
    81e8:	cmp	x1, x0
    81ec:	b.ne	8320 <PySequence_Fast@plt+0x40e0>  // b.any
    81f0:	ldr	x0, [sp, #80]
    81f4:	ldr	x0, [x0, #40]
    81f8:	cmp	x0, #0x0
    81fc:	b.ne	820c <PySequence_Fast@plt+0x3fcc>  // b.any
    8200:	mov	x0, #0x0                   	// #0
    8204:	bl	3c50 <PyList_New@plt>
    8208:	b	8340 <PySequence_Fast@plt+0x4100>
    820c:	add	x2, sp, #0x20
    8210:	add	x1, sp, #0x28
    8214:	add	x0, sp, #0x30
    8218:	mov	x3, x2
    821c:	mov	x2, x1
    8220:	mov	x1, x0
    8224:	ldr	x0, [sp, #16]
    8228:	bl	4130 <PySlice_Unpack@plt>
    822c:	cmp	w0, #0x0
    8230:	b.ge	823c <PySequence_Fast@plt+0x3ffc>  // b.tcont
    8234:	mov	x0, #0x0                   	// #0
    8238:	b	8340 <PySequence_Fast@plt+0x4100>
    823c:	ldr	x0, [sp, #80]
    8240:	ldr	x0, [x0, #40]
    8244:	ldr	x0, [x0, #8]
    8248:	ldr	x3, [sp, #32]
    824c:	add	x2, sp, #0x28
    8250:	add	x1, sp, #0x30
    8254:	bl	3f10 <PySlice_AdjustIndices@plt>
    8258:	str	x0, [sp, #72]
    825c:	ldr	x0, [sp, #72]
    8260:	cmp	x0, #0x0
    8264:	b.gt	8274 <PySequence_Fast@plt+0x4034>
    8268:	mov	x0, #0x0                   	// #0
    826c:	bl	3c50 <PyList_New@plt>
    8270:	b	8340 <PySequence_Fast@plt+0x4100>
    8274:	ldr	x0, [sp, #72]
    8278:	bl	3c50 <PyList_New@plt>
    827c:	str	x0, [sp, #64]
    8280:	ldr	x0, [sp, #64]
    8284:	cmp	x0, #0x0
    8288:	b.ne	8294 <PySequence_Fast@plt+0x4054>  // b.any
    828c:	mov	x0, #0x0                   	// #0
    8290:	b	8340 <PySequence_Fast@plt+0x4100>
    8294:	ldr	x0, [sp, #48]
    8298:	str	x0, [sp, #88]
    829c:	str	xzr, [sp, #96]
    82a0:	b	8308 <PySequence_Fast@plt+0x40c8>
    82a4:	ldr	x0, [sp, #80]
    82a8:	ldr	x0, [x0, #40]
    82ac:	ldr	x1, [x0, #24]
    82b0:	ldr	x0, [sp, #88]
    82b4:	lsl	x0, x0, #3
    82b8:	add	x0, x1, x0
    82bc:	ldr	x0, [x0]
    82c0:	str	x0, [sp, #56]
    82c4:	ldr	x0, [sp, #56]
    82c8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    82cc:	ldr	x0, [sp, #64]
    82d0:	ldr	x1, [x0, #24]
    82d4:	ldr	x0, [sp, #96]
    82d8:	lsl	x0, x0, #3
    82dc:	add	x0, x1, x0
    82e0:	ldr	x1, [sp, #56]
    82e4:	str	x1, [x0]
    82e8:	ldr	x0, [sp, #32]
    82ec:	mov	x1, x0
    82f0:	ldr	x0, [sp, #88]
    82f4:	add	x0, x0, x1
    82f8:	str	x0, [sp, #88]
    82fc:	ldr	x0, [sp, #96]
    8300:	add	x0, x0, #0x1
    8304:	str	x0, [sp, #96]
    8308:	ldr	x1, [sp, #96]
    830c:	ldr	x0, [sp, #72]
    8310:	cmp	x1, x0
    8314:	b.lt	82a4 <PySequence_Fast@plt+0x4064>  // b.tstop
    8318:	ldr	x0, [sp, #64]
    831c:	b	8340 <PySequence_Fast@plt+0x4100>
    8320:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8324:	ldr	x0, [x0, #3944]
    8328:	ldr	x2, [x0]
    832c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8330:	add	x1, x0, #0xbd8
    8334:	mov	x0, x2
    8338:	bl	3de0 <PyErr_SetString@plt>
    833c:	mov	x0, #0x0                   	// #0
    8340:	ldp	x29, x30, [sp], #112
    8344:	ret
    8348:	stp	x29, x30, [sp, #-176]!
    834c:	mov	x29, sp
    8350:	str	x0, [sp, #40]
    8354:	str	x1, [sp, #32]
    8358:	str	x2, [sp, #24]
    835c:	ldr	x0, [sp, #40]
    8360:	str	x0, [sp, #112]
    8364:	ldr	x0, [sp, #32]
    8368:	ldr	x0, [x0, #8]
    836c:	ldr	x0, [x0, #96]
    8370:	cmp	x0, #0x0
    8374:	b.eq	8414 <PySequence_Fast@plt+0x41d4>  // b.none
    8378:	ldr	x0, [sp, #32]
    837c:	ldr	x0, [x0, #8]
    8380:	ldr	x0, [x0, #96]
    8384:	ldr	x0, [x0, #264]
    8388:	cmp	x0, #0x0
    838c:	b.eq	8414 <PySequence_Fast@plt+0x41d4>  // b.none
    8390:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8394:	ldr	x0, [x0, #3984]
    8398:	ldr	x0, [x0]
    839c:	mov	x1, x0
    83a0:	ldr	x0, [sp, #32]
    83a4:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    83a8:	str	x0, [sp, #168]
    83ac:	ldr	x0, [sp, #168]
    83b0:	cmn	x0, #0x1
    83b4:	b.ne	83cc <PySequence_Fast@plt+0x418c>  // b.any
    83b8:	bl	3f80 <PyErr_Occurred@plt>
    83bc:	cmp	x0, #0x0
    83c0:	b.eq	83cc <PySequence_Fast@plt+0x418c>  // b.none
    83c4:	mov	w0, #0xffffffff            	// #-1
    83c8:	b	8be0 <PySequence_Fast@plt+0x49a0>
    83cc:	ldr	x0, [sp, #168]
    83d0:	cmp	x0, #0x0
    83d4:	b.ge	8400 <PySequence_Fast@plt+0x41c0>  // b.tcont
    83d8:	ldr	x0, [sp, #112]
    83dc:	ldr	x0, [x0, #40]
    83e0:	cmp	x0, #0x0
    83e4:	b.eq	8400 <PySequence_Fast@plt+0x41c0>  // b.none
    83e8:	ldr	x0, [sp, #112]
    83ec:	ldr	x0, [x0, #40]
    83f0:	ldr	x0, [x0, #8]
    83f4:	ldr	x1, [sp, #168]
    83f8:	add	x0, x1, x0
    83fc:	str	x0, [sp, #168]
    8400:	ldr	x2, [sp, #24]
    8404:	ldr	x1, [sp, #168]
    8408:	ldr	x0, [sp, #40]
    840c:	bl	7f60 <PySequence_Fast@plt+0x3d20>
    8410:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8414:	ldr	x0, [sp, #32]
    8418:	ldr	x1, [x0, #8]
    841c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8420:	ldr	x0, [x0, #3952]
    8424:	cmp	x1, x0
    8428:	b.ne	8bc0 <PySequence_Fast@plt+0x4980>  // b.any
    842c:	str	xzr, [sp, #144]
    8430:	ldr	x0, [sp, #112]
    8434:	ldr	x0, [x0, #40]
    8438:	cmp	x0, #0x0
    843c:	b.ne	845c <PySequence_Fast@plt+0x421c>  // b.any
    8440:	mov	x1, #0x0                   	// #0
    8444:	ldr	x0, [sp, #112]
    8448:	bl	49d8 <PySequence_Fast@plt+0x798>
    844c:	cmp	w0, #0x0
    8450:	b.ge	845c <PySequence_Fast@plt+0x421c>  // b.tcont
    8454:	mov	w0, #0xffffffff            	// #-1
    8458:	b	8be0 <PySequence_Fast@plt+0x49a0>
    845c:	add	x2, sp, #0x30
    8460:	add	x1, sp, #0x38
    8464:	add	x0, sp, #0x40
    8468:	mov	x3, x2
    846c:	mov	x2, x1
    8470:	mov	x1, x0
    8474:	ldr	x0, [sp, #32]
    8478:	bl	4130 <PySlice_Unpack@plt>
    847c:	cmp	w0, #0x0
    8480:	b.ge	848c <PySequence_Fast@plt+0x424c>  // b.tcont
    8484:	mov	w0, #0xffffffff            	// #-1
    8488:	b	8be0 <PySequence_Fast@plt+0x49a0>
    848c:	ldr	x0, [sp, #112]
    8490:	ldr	x0, [x0, #40]
    8494:	ldr	x0, [x0, #8]
    8498:	ldr	x3, [sp, #48]
    849c:	add	x2, sp, #0x38
    84a0:	add	x1, sp, #0x40
    84a4:	bl	3f10 <PySlice_AdjustIndices@plt>
    84a8:	str	x0, [sp, #104]
    84ac:	ldr	x0, [sp, #24]
    84b0:	cmp	x0, #0x0
    84b4:	b.ne	8718 <PySequence_Fast@plt+0x44d8>  // b.any
    84b8:	ldr	x0, [sp, #104]
    84bc:	cmp	x0, #0x0
    84c0:	b.gt	84cc <PySequence_Fast@plt+0x428c>
    84c4:	mov	w0, #0x0                   	// #0
    84c8:	b	8be0 <PySequence_Fast@plt+0x49a0>
    84cc:	ldr	x0, [sp, #48]
    84d0:	cmp	x0, #0x0
    84d4:	b.ge	8510 <PySequence_Fast@plt+0x42d0>  // b.tcont
    84d8:	ldr	x0, [sp, #64]
    84dc:	add	x0, x0, #0x1
    84e0:	str	x0, [sp, #56]
    84e4:	ldr	x0, [sp, #104]
    84e8:	sub	x1, x0, #0x1
    84ec:	ldr	x0, [sp, #48]
    84f0:	mul	x1, x1, x0
    84f4:	ldr	x0, [sp, #56]
    84f8:	add	x0, x1, x0
    84fc:	sub	x0, x0, #0x1
    8500:	str	x0, [sp, #64]
    8504:	ldr	x0, [sp, #48]
    8508:	neg	x0, x0
    850c:	str	x0, [sp, #48]
    8510:	ldr	x0, [sp, #104]
    8514:	bl	3c50 <PyList_New@plt>
    8518:	str	x0, [sp, #144]
    851c:	ldr	x0, [sp, #144]
    8520:	cmp	x0, #0x0
    8524:	b.ne	8530 <PySequence_Fast@plt+0x42f0>  // b.any
    8528:	mov	w0, #0xffffffff            	// #-1
    852c:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8530:	ldr	x0, [sp, #64]
    8534:	str	x0, [sp, #136]
    8538:	str	xzr, [sp, #128]
    853c:	b	8634 <PySequence_Fast@plt+0x43f4>
    8540:	ldr	x0, [sp, #48]
    8544:	sub	x0, x0, #0x1
    8548:	str	x0, [sp, #120]
    854c:	ldr	x0, [sp, #48]
    8550:	mov	x1, x0
    8554:	ldr	x0, [sp, #136]
    8558:	add	x0, x1, x0
    855c:	ldr	x1, [sp, #112]
    8560:	ldr	x1, [x1, #40]
    8564:	ldr	x1, [x1, #8]
    8568:	cmp	x0, x1
    856c:	b.cc	8590 <PySequence_Fast@plt+0x4350>  // b.lo, b.ul, b.last
    8570:	ldr	x0, [sp, #112]
    8574:	ldr	x0, [x0, #40]
    8578:	ldr	x0, [x0, #8]
    857c:	mov	x1, x0
    8580:	ldr	x0, [sp, #136]
    8584:	sub	x0, x1, x0
    8588:	sub	x0, x0, #0x1
    858c:	str	x0, [sp, #120]
    8590:	ldr	x0, [sp, #112]
    8594:	ldr	x0, [x0, #40]
    8598:	ldr	x1, [x0, #24]
    859c:	ldr	x0, [sp, #136]
    85a0:	lsl	x0, x0, #3
    85a4:	add	x1, x1, x0
    85a8:	ldr	x0, [sp, #144]
    85ac:	ldr	x2, [x0, #24]
    85b0:	ldr	x0, [sp, #128]
    85b4:	lsl	x0, x0, #3
    85b8:	add	x0, x2, x0
    85bc:	ldr	x1, [x1]
    85c0:	str	x1, [x0]
    85c4:	ldr	x0, [sp, #112]
    85c8:	ldr	x0, [x0, #40]
    85cc:	ldr	x1, [x0, #24]
    85d0:	ldr	x0, [sp, #128]
    85d4:	ldr	x2, [sp, #136]
    85d8:	sub	x0, x2, x0
    85dc:	lsl	x0, x0, #3
    85e0:	add	x3, x1, x0
    85e4:	ldr	x0, [sp, #112]
    85e8:	ldr	x0, [x0, #40]
    85ec:	ldr	x1, [x0, #24]
    85f0:	ldr	x0, [sp, #136]
    85f4:	add	x0, x0, #0x1
    85f8:	lsl	x0, x0, #3
    85fc:	add	x1, x1, x0
    8600:	ldr	x0, [sp, #120]
    8604:	lsl	x0, x0, #3
    8608:	mov	x2, x0
    860c:	mov	x0, x3
    8610:	bl	3c40 <memmove@plt>
    8614:	ldr	x0, [sp, #48]
    8618:	mov	x1, x0
    861c:	ldr	x0, [sp, #136]
    8620:	add	x0, x0, x1
    8624:	str	x0, [sp, #136]
    8628:	ldr	x0, [sp, #128]
    862c:	add	x0, x0, #0x1
    8630:	str	x0, [sp, #128]
    8634:	ldr	x0, [sp, #56]
    8638:	mov	x1, x0
    863c:	ldr	x0, [sp, #136]
    8640:	cmp	x0, x1
    8644:	b.cc	8540 <PySequence_Fast@plt+0x4300>  // b.lo, b.ul, b.last
    8648:	ldr	x0, [sp, #104]
    864c:	ldr	x1, [sp, #48]
    8650:	mul	x0, x0, x1
    8654:	ldr	x1, [sp, #64]
    8658:	add	x0, x0, x1
    865c:	str	x0, [sp, #136]
    8660:	ldr	x0, [sp, #112]
    8664:	ldr	x0, [x0, #40]
    8668:	ldr	x0, [x0, #8]
    866c:	mov	x1, x0
    8670:	ldr	x0, [sp, #136]
    8674:	cmp	x0, x1
    8678:	b.cs	86dc <PySequence_Fast@plt+0x449c>  // b.hs, b.nlast
    867c:	ldr	x0, [sp, #112]
    8680:	ldr	x0, [x0, #40]
    8684:	ldr	x1, [x0, #24]
    8688:	ldr	x0, [sp, #104]
    868c:	ldr	x2, [sp, #136]
    8690:	sub	x0, x2, x0
    8694:	lsl	x0, x0, #3
    8698:	add	x3, x1, x0
    869c:	ldr	x0, [sp, #112]
    86a0:	ldr	x0, [x0, #40]
    86a4:	ldr	x1, [x0, #24]
    86a8:	ldr	x0, [sp, #136]
    86ac:	lsl	x0, x0, #3
    86b0:	add	x1, x1, x0
    86b4:	ldr	x0, [sp, #112]
    86b8:	ldr	x0, [x0, #40]
    86bc:	ldr	x0, [x0, #8]
    86c0:	mov	x2, x0
    86c4:	ldr	x0, [sp, #136]
    86c8:	sub	x0, x2, x0
    86cc:	lsl	x0, x0, #3
    86d0:	mov	x2, x0
    86d4:	mov	x0, x3
    86d8:	bl	3c40 <memmove@plt>
    86dc:	ldr	x0, [sp, #112]
    86e0:	ldr	x0, [x0, #40]
    86e4:	ldr	x2, [x0, #8]
    86e8:	ldr	x0, [sp, #112]
    86ec:	ldr	x0, [x0, #40]
    86f0:	ldr	x1, [sp, #104]
    86f4:	sub	x1, x2, x1
    86f8:	str	x1, [x0, #8]
    86fc:	ldr	x2, [sp, #144]
    8700:	mov	w1, #0x798                 	// #1944
    8704:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8708:	add	x0, x0, #0x808
    870c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    8710:	mov	w0, #0x0                   	// #0
    8714:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8718:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    871c:	add	x1, x0, #0x8d0
    8720:	ldr	x0, [sp, #24]
    8724:	bl	4240 <PySequence_Fast@plt>
    8728:	str	x0, [sp, #96]
    872c:	ldr	x0, [sp, #96]
    8730:	cmp	x0, #0x0
    8734:	b.ne	876c <PySequence_Fast@plt+0x452c>  // b.any
    8738:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    873c:	ldr	x0, [x0, #3944]
    8740:	ldr	x3, [x0]
    8744:	ldr	x0, [sp, #24]
    8748:	ldr	x0, [x0, #8]
    874c:	ldr	x0, [x0, #24]
    8750:	mov	x2, x0
    8754:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8758:	add	x1, x0, #0xa30
    875c:	mov	x0, x3
    8760:	bl	4180 <PyErr_Format@plt>
    8764:	mov	w0, #0xffffffff            	// #-1
    8768:	b	8be0 <PySequence_Fast@plt+0x49a0>
    876c:	ldr	x0, [sp, #96]
    8770:	ldr	x0, [x0, #16]
    8774:	str	x0, [sp, #88]
    8778:	ldr	x0, [sp, #48]
    877c:	cmp	x0, #0x1
    8780:	b.eq	87d4 <PySequence_Fast@plt+0x4594>  // b.none
    8784:	ldr	x1, [sp, #88]
    8788:	ldr	x0, [sp, #104]
    878c:	cmp	x1, x0
    8790:	b.eq	87d4 <PySequence_Fast@plt+0x4594>  // b.none
    8794:	ldr	x2, [sp, #96]
    8798:	mov	w1, #0x7a9                 	// #1961
    879c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    87a0:	add	x0, x0, #0x808
    87a4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    87a8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    87ac:	ldr	x0, [x0, #3928]
    87b0:	ldr	x4, [x0]
    87b4:	ldr	x3, [sp, #104]
    87b8:	ldr	x2, [sp, #88]
    87bc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    87c0:	add	x1, x0, #0xc00
    87c4:	mov	x0, x4
    87c8:	bl	4180 <PyErr_Format@plt>
    87cc:	mov	w0, #0xffffffff            	// #-1
    87d0:	b	8be0 <PySequence_Fast@plt+0x49a0>
    87d4:	ldr	x1, [sp, #88]
    87d8:	ldr	x0, [sp, #104]
    87dc:	cmp	x1, x0
    87e0:	b.le	8820 <PySequence_Fast@plt+0x45e0>
    87e4:	ldr	x1, [sp, #88]
    87e8:	ldr	x0, [sp, #104]
    87ec:	sub	x0, x1, x0
    87f0:	mov	x1, x0
    87f4:	ldr	x0, [sp, #112]
    87f8:	bl	5060 <PySequence_Fast@plt+0xe20>
    87fc:	cmp	w0, #0x0
    8800:	b.ge	8820 <PySequence_Fast@plt+0x45e0>  // b.tcont
    8804:	ldr	x2, [sp, #96]
    8808:	mov	w1, #0x7b5                 	// #1973
    880c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8810:	add	x0, x0, #0x808
    8814:	bl	4408 <PySequence_Fast@plt+0x1c8>
    8818:	mov	w0, #0xffffffff            	// #-1
    881c:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8820:	str	xzr, [sp, #160]
    8824:	b	88e0 <PySequence_Fast@plt+0x46a0>
    8828:	ldr	x0, [sp, #96]
    882c:	ldr	x0, [x0, #8]
    8830:	ldr	x0, [x0, #168]
    8834:	and	x0, x0, #0x2000000
    8838:	cmp	x0, #0x0
    883c:	b.eq	885c <PySequence_Fast@plt+0x461c>  // b.none
    8840:	ldr	x0, [sp, #96]
    8844:	ldr	x1, [x0, #24]
    8848:	ldr	x0, [sp, #160]
    884c:	lsl	x0, x0, #3
    8850:	add	x0, x1, x0
    8854:	ldr	x0, [x0]
    8858:	b	8874 <PySequence_Fast@plt+0x4634>
    885c:	ldr	x1, [sp, #96]
    8860:	ldr	x0, [sp, #160]
    8864:	add	x0, x0, #0x2
    8868:	lsl	x0, x0, #3
    886c:	add	x0, x1, x0
    8870:	ldr	x0, [x0, #8]
    8874:	str	x0, [sp, #72]
    8878:	ldr	x0, [sp, #72]
    887c:	ldr	x1, [x0, #8]
    8880:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    8884:	add	x0, x0, #0x320
    8888:	cmp	x1, x0
    888c:	b.eq	88d4 <PySequence_Fast@plt+0x4694>  // b.none
    8890:	ldr	x0, [sp, #72]
    8894:	ldr	x2, [x0, #8]
    8898:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    889c:	add	x1, x0, #0x320
    88a0:	mov	x0, x2
    88a4:	bl	4160 <PyType_IsSubtype@plt>
    88a8:	cmp	w0, #0x0
    88ac:	b.ne	88d4 <PySequence_Fast@plt+0x4694>  // b.any
    88b0:	ldr	x0, [sp, #72]
    88b4:	bl	5204 <PySequence_Fast@plt+0xfc4>
    88b8:	ldr	x2, [sp, #96]
    88bc:	mov	w1, #0x7be                 	// #1982
    88c0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    88c4:	add	x0, x0, #0x808
    88c8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    88cc:	mov	w0, #0xffffffff            	// #-1
    88d0:	b	8be0 <PySequence_Fast@plt+0x49a0>
    88d4:	ldr	x0, [sp, #160]
    88d8:	add	x0, x0, #0x1
    88dc:	str	x0, [sp, #160]
    88e0:	ldr	x1, [sp, #160]
    88e4:	ldr	x0, [sp, #88]
    88e8:	cmp	x1, x0
    88ec:	b.lt	8828 <PySequence_Fast@plt+0x45e8>  // b.tstop
    88f0:	ldr	x0, [sp, #104]
    88f4:	cmp	x0, #0x0
    88f8:	b.le	89a4 <PySequence_Fast@plt+0x4764>
    88fc:	ldr	x0, [sp, #104]
    8900:	bl	3c50 <PyList_New@plt>
    8904:	str	x0, [sp, #144]
    8908:	ldr	x0, [sp, #144]
    890c:	cmp	x0, #0x0
    8910:	b.ne	8930 <PySequence_Fast@plt+0x46f0>  // b.any
    8914:	ldr	x2, [sp, #96]
    8918:	mov	w1, #0x7c9                 	// #1993
    891c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8920:	add	x0, x0, #0x808
    8924:	bl	4408 <PySequence_Fast@plt+0x1c8>
    8928:	mov	w0, #0xffffffff            	// #-1
    892c:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8930:	ldr	x0, [sp, #64]
    8934:	str	x0, [sp, #152]
    8938:	str	xzr, [sp, #160]
    893c:	b	8994 <PySequence_Fast@plt+0x4754>
    8940:	ldr	x0, [sp, #112]
    8944:	ldr	x0, [x0, #40]
    8948:	ldr	x1, [x0, #24]
    894c:	ldr	x0, [sp, #152]
    8950:	lsl	x0, x0, #3
    8954:	add	x1, x1, x0
    8958:	ldr	x0, [sp, #144]
    895c:	ldr	x2, [x0, #24]
    8960:	ldr	x0, [sp, #160]
    8964:	lsl	x0, x0, #3
    8968:	add	x0, x2, x0
    896c:	ldr	x1, [x1]
    8970:	str	x1, [x0]
    8974:	ldr	x0, [sp, #48]
    8978:	mov	x1, x0
    897c:	ldr	x0, [sp, #152]
    8980:	add	x0, x0, x1
    8984:	str	x0, [sp, #152]
    8988:	ldr	x0, [sp, #160]
    898c:	add	x0, x0, #0x1
    8990:	str	x0, [sp, #160]
    8994:	ldr	x1, [sp, #160]
    8998:	ldr	x0, [sp, #104]
    899c:	cmp	x1, x0
    89a0:	b.lt	8940 <PySequence_Fast@plt+0x4700>  // b.tstop
    89a4:	ldr	x1, [sp, #88]
    89a8:	ldr	x0, [sp, #104]
    89ac:	cmp	x1, x0
    89b0:	b.ge	8a30 <PySequence_Fast@plt+0x47f0>  // b.tcont
    89b4:	ldr	x0, [sp, #56]
    89b8:	str	x0, [sp, #160]
    89bc:	b	8a14 <PySequence_Fast@plt+0x47d4>
    89c0:	ldr	x0, [sp, #112]
    89c4:	ldr	x0, [x0, #40]
    89c8:	ldr	x1, [x0, #24]
    89cc:	ldr	x0, [sp, #160]
    89d0:	lsl	x0, x0, #3
    89d4:	add	x1, x1, x0
    89d8:	ldr	x0, [sp, #112]
    89dc:	ldr	x0, [x0, #40]
    89e0:	ldr	x2, [x0, #24]
    89e4:	ldr	x3, [sp, #160]
    89e8:	ldr	x0, [sp, #88]
    89ec:	add	x3, x3, x0
    89f0:	ldr	x0, [sp, #104]
    89f4:	sub	x0, x3, x0
    89f8:	lsl	x0, x0, #3
    89fc:	add	x0, x2, x0
    8a00:	ldr	x1, [x1]
    8a04:	str	x1, [x0]
    8a08:	ldr	x0, [sp, #160]
    8a0c:	add	x0, x0, #0x1
    8a10:	str	x0, [sp, #160]
    8a14:	ldr	x0, [sp, #112]
    8a18:	ldr	x0, [x0, #40]
    8a1c:	ldr	x0, [x0, #8]
    8a20:	ldr	x1, [sp, #160]
    8a24:	cmp	x1, x0
    8a28:	b.lt	89c0 <PySequence_Fast@plt+0x4780>  // b.tstop
    8a2c:	b	8abc <PySequence_Fast@plt+0x487c>
    8a30:	ldr	x1, [sp, #88]
    8a34:	ldr	x0, [sp, #104]
    8a38:	cmp	x1, x0
    8a3c:	b.le	8abc <PySequence_Fast@plt+0x487c>
    8a40:	ldr	x0, [sp, #112]
    8a44:	ldr	x0, [x0, #40]
    8a48:	ldr	x0, [x0, #8]
    8a4c:	sub	x0, x0, #0x1
    8a50:	str	x0, [sp, #160]
    8a54:	b	8aac <PySequence_Fast@plt+0x486c>
    8a58:	ldr	x0, [sp, #112]
    8a5c:	ldr	x0, [x0, #40]
    8a60:	ldr	x1, [x0, #24]
    8a64:	ldr	x0, [sp, #160]
    8a68:	lsl	x0, x0, #3
    8a6c:	add	x1, x1, x0
    8a70:	ldr	x0, [sp, #112]
    8a74:	ldr	x0, [x0, #40]
    8a78:	ldr	x2, [x0, #24]
    8a7c:	ldr	x3, [sp, #160]
    8a80:	ldr	x0, [sp, #88]
    8a84:	add	x3, x3, x0
    8a88:	ldr	x0, [sp, #104]
    8a8c:	sub	x0, x3, x0
    8a90:	lsl	x0, x0, #3
    8a94:	add	x0, x2, x0
    8a98:	ldr	x1, [x1]
    8a9c:	str	x1, [x0]
    8aa0:	ldr	x0, [sp, #160]
    8aa4:	sub	x0, x0, #0x1
    8aa8:	str	x0, [sp, #160]
    8aac:	ldr	x0, [sp, #56]
    8ab0:	ldr	x1, [sp, #160]
    8ab4:	cmp	x1, x0
    8ab8:	b.ge	8a58 <PySequence_Fast@plt+0x4818>  // b.tcont
    8abc:	ldr	x0, [sp, #64]
    8ac0:	str	x0, [sp, #152]
    8ac4:	str	xzr, [sp, #160]
    8ac8:	b	8b64 <PySequence_Fast@plt+0x4924>
    8acc:	ldr	x0, [sp, #96]
    8ad0:	ldr	x0, [x0, #8]
    8ad4:	ldr	x0, [x0, #168]
    8ad8:	and	x0, x0, #0x2000000
    8adc:	cmp	x0, #0x0
    8ae0:	b.eq	8b00 <PySequence_Fast@plt+0x48c0>  // b.none
    8ae4:	ldr	x0, [sp, #96]
    8ae8:	ldr	x1, [x0, #24]
    8aec:	ldr	x0, [sp, #160]
    8af0:	lsl	x0, x0, #3
    8af4:	add	x0, x1, x0
    8af8:	ldr	x0, [x0]
    8afc:	b	8b18 <PySequence_Fast@plt+0x48d8>
    8b00:	ldr	x1, [sp, #96]
    8b04:	ldr	x0, [sp, #160]
    8b08:	add	x0, x0, #0x2
    8b0c:	lsl	x0, x0, #3
    8b10:	add	x0, x1, x0
    8b14:	ldr	x0, [x0, #8]
    8b18:	str	x0, [sp, #80]
    8b1c:	ldr	x0, [sp, #80]
    8b20:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    8b24:	ldr	x0, [sp, #112]
    8b28:	ldr	x0, [x0, #40]
    8b2c:	ldr	x1, [x0, #24]
    8b30:	ldr	x0, [sp, #152]
    8b34:	lsl	x0, x0, #3
    8b38:	add	x0, x1, x0
    8b3c:	ldr	x1, [sp, #80]
    8b40:	str	x1, [x0]
    8b44:	ldr	x0, [sp, #48]
    8b48:	mov	x1, x0
    8b4c:	ldr	x0, [sp, #152]
    8b50:	add	x0, x0, x1
    8b54:	str	x0, [sp, #152]
    8b58:	ldr	x0, [sp, #160]
    8b5c:	add	x0, x0, #0x1
    8b60:	str	x0, [sp, #160]
    8b64:	ldr	x1, [sp, #160]
    8b68:	ldr	x0, [sp, #88]
    8b6c:	cmp	x1, x0
    8b70:	b.lt	8acc <PySequence_Fast@plt+0x488c>  // b.tstop
    8b74:	ldr	x0, [sp, #112]
    8b78:	ldr	x0, [x0, #40]
    8b7c:	ldr	x2, [x0, #8]
    8b80:	ldr	x1, [sp, #88]
    8b84:	ldr	x0, [sp, #104]
    8b88:	sub	x1, x1, x0
    8b8c:	ldr	x0, [sp, #112]
    8b90:	ldr	x0, [x0, #40]
    8b94:	add	x1, x2, x1
    8b98:	str	x1, [x0, #8]
    8b9c:	ldr	x2, [sp, #96]
    8ba0:	mov	w1, #0x7e5                 	// #2021
    8ba4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8ba8:	add	x0, x0, #0x808
    8bac:	bl	4408 <PySequence_Fast@plt+0x1c8>
    8bb0:	ldr	x0, [sp, #144]
    8bb4:	bl	4480 <PySequence_Fast@plt+0x240>
    8bb8:	mov	w0, #0x0                   	// #0
    8bbc:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8bc0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8bc4:	ldr	x0, [x0, #3944]
    8bc8:	ldr	x2, [x0]
    8bcc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8bd0:	add	x1, x0, #0xbd8
    8bd4:	mov	x0, x2
    8bd8:	bl	3de0 <PyErr_SetString@plt>
    8bdc:	mov	w0, #0xffffffff            	// #-1
    8be0:	ldp	x29, x30, [sp], #176
    8be4:	ret
    8be8:	stp	x29, x30, [sp, #-48]!
    8bec:	mov	x29, sp
    8bf0:	str	x0, [sp, #24]
    8bf4:	str	x1, [sp, #16]
    8bf8:	ldr	x0, [sp, #24]
    8bfc:	ldr	x0, [x0, #16]
    8c00:	str	x0, [sp, #40]
    8c04:	ldr	x0, [sp, #40]
    8c08:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    8c0c:	ldr	x0, [sp, #40]
    8c10:	ldp	x29, x30, [sp], #48
    8c14:	ret
    8c18:	stp	x29, x30, [sp, #-48]!
    8c1c:	mov	x29, sp
    8c20:	str	x0, [sp, #24]
    8c24:	str	x1, [sp, #16]
    8c28:	ldr	x0, [sp, #24]
    8c2c:	bl	538c <PySequence_Fast@plt+0x114c>
    8c30:	str	x0, [sp, #40]
    8c34:	ldr	x0, [sp, #40]
    8c38:	bl	4454 <PySequence_Fast@plt+0x214>
    8c3c:	ldr	x0, [sp, #40]
    8c40:	ldp	x29, x30, [sp], #48
    8c44:	ret
    8c48:	stp	x29, x30, [sp, #-48]!
    8c4c:	mov	x29, sp
    8c50:	str	x0, [sp, #24]
    8c54:	str	x1, [sp, #16]
    8c58:	ldr	x0, [sp, #24]
    8c5c:	bl	542c <PySequence_Fast@plt+0x11ec>
    8c60:	str	x0, [sp, #40]
    8c64:	ldr	x0, [sp, #40]
    8c68:	bl	4454 <PySequence_Fast@plt+0x214>
    8c6c:	ldr	x0, [sp, #40]
    8c70:	ldp	x29, x30, [sp], #48
    8c74:	ret
    8c78:	stp	x29, x30, [sp, #-48]!
    8c7c:	mov	x29, sp
    8c80:	str	x0, [sp, #24]
    8c84:	str	x1, [sp, #16]
    8c88:	ldr	x0, [sp, #24]
    8c8c:	ldr	x0, [x0, #40]
    8c90:	cmp	x0, #0x0
    8c94:	b.ne	8cb4 <PySequence_Fast@plt+0x4a74>  // b.any
    8c98:	mov	x1, #0x0                   	// #0
    8c9c:	ldr	x0, [sp, #24]
    8ca0:	bl	49d8 <PySequence_Fast@plt+0x798>
    8ca4:	cmp	w0, #0x0
    8ca8:	b.ge	8cb4 <PySequence_Fast@plt+0x4a74>  // b.tcont
    8cac:	mov	x0, #0x0                   	// #0
    8cb0:	b	8ccc <PySequence_Fast@plt+0x4a8c>
    8cb4:	ldr	x0, [sp, #24]
    8cb8:	bl	530c <PySequence_Fast@plt+0x10cc>
    8cbc:	str	x0, [sp, #40]
    8cc0:	ldr	x0, [sp, #40]
    8cc4:	bl	4454 <PySequence_Fast@plt+0x214>
    8cc8:	ldr	x0, [sp, #40]
    8ccc:	ldp	x29, x30, [sp], #48
    8cd0:	ret
    8cd4:	stp	x29, x30, [sp, #-64]!
    8cd8:	mov	x29, sp
    8cdc:	str	x0, [sp, #40]
    8ce0:	str	x1, [sp, #32]
    8ce4:	str	x2, [sp, #24]
    8ce8:	ldr	x0, [sp, #32]
    8cec:	cmp	x0, #0x0
    8cf0:	b.ne	8d18 <PySequence_Fast@plt+0x4ad8>  // b.any
    8cf4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8cf8:	ldr	x0, [x0, #4008]
    8cfc:	ldr	x2, [x0]
    8d00:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8d04:	add	x1, x0, #0xc48
    8d08:	mov	x0, x2
    8d0c:	bl	3de0 <PyErr_SetString@plt>
    8d10:	mov	w0, #0xffffffff            	// #-1
    8d14:	b	8d50 <PySequence_Fast@plt+0x4b10>
    8d18:	ldr	x0, [sp, #32]
    8d1c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    8d20:	ldr	x0, [sp, #40]
    8d24:	ldr	x0, [x0, #16]
    8d28:	str	x0, [sp, #56]
    8d2c:	ldr	x0, [sp, #40]
    8d30:	ldr	x1, [sp, #32]
    8d34:	str	x1, [x0, #16]
    8d38:	ldr	x2, [sp, #56]
    8d3c:	mov	w1, #0x826                 	// #2086
    8d40:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8d44:	add	x0, x0, #0x808
    8d48:	bl	4408 <PySequence_Fast@plt+0x1c8>
    8d4c:	mov	w0, #0x0                   	// #0
    8d50:	ldp	x29, x30, [sp], #64
    8d54:	ret
    8d58:	stp	x29, x30, [sp, #-48]!
    8d5c:	mov	x29, sp
    8d60:	str	x0, [sp, #40]
    8d64:	str	x1, [sp, #32]
    8d68:	str	x2, [sp, #24]
    8d6c:	ldr	x0, [sp, #32]
    8d70:	cmp	x0, #0x0
    8d74:	b.ne	8d9c <PySequence_Fast@plt+0x4b5c>  // b.any
    8d78:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8d7c:	ldr	x0, [x0, #4008]
    8d80:	ldr	x2, [x0]
    8d84:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8d88:	add	x1, x0, #0xc48
    8d8c:	mov	x0, x2
    8d90:	bl	3de0 <PyErr_SetString@plt>
    8d94:	mov	w0, #0xffffffff            	// #-1
    8d98:	b	8db8 <PySequence_Fast@plt+0x4b78>
    8d9c:	ldr	x0, [sp, #32]
    8da0:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    8da4:	ldr	x0, [sp, #40]
    8da8:	add	x0, x0, #0x18
    8dac:	ldr	x1, [sp, #32]
    8db0:	bl	4610 <PySequence_Fast@plt+0x3d0>
    8db4:	mov	w0, #0x0                   	// #0
    8db8:	ldp	x29, x30, [sp], #48
    8dbc:	ret
    8dc0:	stp	x29, x30, [sp, #-48]!
    8dc4:	mov	x29, sp
    8dc8:	str	x0, [sp, #40]
    8dcc:	str	x1, [sp, #32]
    8dd0:	str	x2, [sp, #24]
    8dd4:	ldr	x0, [sp, #32]
    8dd8:	cmp	x0, #0x0
    8ddc:	b.ne	8e04 <PySequence_Fast@plt+0x4bc4>  // b.any
    8de0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8de4:	ldr	x0, [x0, #4008]
    8de8:	ldr	x2, [x0]
    8dec:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8df0:	add	x1, x0, #0xc48
    8df4:	mov	x0, x2
    8df8:	bl	3de0 <PyErr_SetString@plt>
    8dfc:	mov	w0, #0xffffffff            	// #-1
    8e00:	b	8e20 <PySequence_Fast@plt+0x4be0>
    8e04:	ldr	x0, [sp, #32]
    8e08:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    8e0c:	ldr	x0, [sp, #40]
    8e10:	add	x0, x0, #0x20
    8e14:	ldr	x1, [sp, #32]
    8e18:	bl	4610 <PySequence_Fast@plt+0x3d0>
    8e1c:	mov	w0, #0x0                   	// #0
    8e20:	ldp	x29, x30, [sp], #48
    8e24:	ret
    8e28:	stp	x29, x30, [sp, #-64]!
    8e2c:	mov	x29, sp
    8e30:	str	x0, [sp, #40]
    8e34:	str	x1, [sp, #32]
    8e38:	str	x2, [sp, #24]
    8e3c:	ldr	x0, [sp, #32]
    8e40:	cmp	x0, #0x0
    8e44:	b.ne	8e6c <PySequence_Fast@plt+0x4c2c>  // b.any
    8e48:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    8e4c:	ldr	x0, [x0, #4008]
    8e50:	ldr	x2, [x0]
    8e54:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8e58:	add	x1, x0, #0xc48
    8e5c:	mov	x0, x2
    8e60:	bl	3de0 <PyErr_SetString@plt>
    8e64:	mov	w0, #0xffffffff            	// #-1
    8e68:	b	8ed8 <PySequence_Fast@plt+0x4c98>
    8e6c:	ldr	x0, [sp, #40]
    8e70:	ldr	x0, [x0, #40]
    8e74:	cmp	x0, #0x0
    8e78:	b.ne	8e98 <PySequence_Fast@plt+0x4c58>  // b.any
    8e7c:	mov	x1, #0x0                   	// #0
    8e80:	ldr	x0, [sp, #40]
    8e84:	bl	49d8 <PySequence_Fast@plt+0x798>
    8e88:	cmp	w0, #0x0
    8e8c:	b.ge	8e98 <PySequence_Fast@plt+0x4c58>  // b.tcont
    8e90:	mov	w0, #0xffffffff            	// #-1
    8e94:	b	8ed8 <PySequence_Fast@plt+0x4c98>
    8e98:	ldr	x0, [sp, #32]
    8e9c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    8ea0:	ldr	x0, [sp, #40]
    8ea4:	ldr	x0, [x0, #40]
    8ea8:	ldr	x0, [x0]
    8eac:	str	x0, [sp, #56]
    8eb0:	ldr	x0, [sp, #40]
    8eb4:	ldr	x0, [x0, #40]
    8eb8:	ldr	x1, [sp, #32]
    8ebc:	str	x1, [x0]
    8ec0:	ldr	x2, [sp, #56]
    8ec4:	mov	w1, #0x845                 	// #2117
    8ec8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    8ecc:	add	x0, x0, #0x808
    8ed0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    8ed4:	mov	w0, #0x0                   	// #0
    8ed8:	ldp	x29, x30, [sp], #64
    8edc:	ret
    8ee0:	stp	x29, x30, [sp, #-48]!
    8ee4:	mov	x29, sp
    8ee8:	str	x0, [sp, #24]
    8eec:	ldr	x0, [sp, #24]
    8ef0:	ldr	x0, [x0, #24]
    8ef4:	str	x0, [sp, #40]
    8ef8:	ldr	x0, [sp, #24]
    8efc:	str	xzr, [x0, #24]
    8f00:	ldr	x0, [sp, #24]
    8f04:	bl	4220 <PyObject_GC_UnTrack@plt>
    8f08:	b	8f28 <PySequence_Fast@plt+0x4ce8>
    8f0c:	ldr	x0, [sp, #24]
    8f10:	ldr	x1, [x0, #16]
    8f14:	ldr	x0, [sp, #40]
    8f18:	lsl	x0, x0, #4
    8f1c:	add	x0, x1, x0
    8f20:	ldr	x0, [x0]
    8f24:	bl	4480 <PySequence_Fast@plt+0x240>
    8f28:	ldr	x0, [sp, #40]
    8f2c:	sub	x1, x0, #0x1
    8f30:	str	x1, [sp, #40]
    8f34:	cmp	x0, #0x0
    8f38:	b.ne	8f0c <PySequence_Fast@plt+0x4ccc>  // b.any
    8f3c:	ldr	x0, [sp, #24]
    8f40:	ldr	x0, [x0, #16]
    8f44:	bl	3cd0 <PyMem_Free@plt>
    8f48:	ldr	x0, [sp, #24]
    8f4c:	ldr	x0, [x0, #48]
    8f50:	bl	4480 <PySequence_Fast@plt+0x240>
    8f54:	ldr	x0, [sp, #24]
    8f58:	ldr	x0, [x0, #40]
    8f5c:	bl	4480 <PySequence_Fast@plt+0x240>
    8f60:	ldr	x0, [sp, #24]
    8f64:	bl	3da0 <PyObject_GC_Del@plt>
    8f68:	nop
    8f6c:	ldp	x29, x30, [sp], #48
    8f70:	ret
    8f74:	stp	x29, x30, [sp, #-80]!
    8f78:	mov	x29, sp
    8f7c:	str	x0, [sp, #40]
    8f80:	str	x1, [sp, #32]
    8f84:	str	x2, [sp, #24]
    8f88:	ldr	x0, [sp, #40]
    8f8c:	ldr	x0, [x0, #24]
    8f90:	str	x0, [sp, #72]
    8f94:	b	8ff4 <PySequence_Fast@plt+0x4db4>
    8f98:	ldr	x0, [sp, #40]
    8f9c:	ldr	x1, [x0, #16]
    8fa0:	ldr	x0, [sp, #72]
    8fa4:	lsl	x0, x0, #4
    8fa8:	add	x0, x1, x0
    8fac:	ldr	x0, [x0]
    8fb0:	cmp	x0, #0x0
    8fb4:	b.eq	8ff4 <PySequence_Fast@plt+0x4db4>  // b.none
    8fb8:	ldr	x0, [sp, #40]
    8fbc:	ldr	x1, [x0, #16]
    8fc0:	ldr	x0, [sp, #72]
    8fc4:	lsl	x0, x0, #4
    8fc8:	add	x0, x1, x0
    8fcc:	ldr	x0, [x0]
    8fd0:	ldr	x2, [sp, #32]
    8fd4:	ldr	x1, [sp, #24]
    8fd8:	blr	x2
    8fdc:	str	w0, [sp, #60]
    8fe0:	ldr	w0, [sp, #60]
    8fe4:	cmp	w0, #0x0
    8fe8:	b.eq	8ff4 <PySequence_Fast@plt+0x4db4>  // b.none
    8fec:	ldr	w0, [sp, #60]
    8ff0:	b	9084 <PySequence_Fast@plt+0x4e44>
    8ff4:	ldr	x0, [sp, #72]
    8ff8:	sub	x1, x0, #0x1
    8ffc:	str	x1, [sp, #72]
    9000:	cmp	x0, #0x0
    9004:	b.ne	8f98 <PySequence_Fast@plt+0x4d58>  // b.any
    9008:	ldr	x0, [sp, #40]
    900c:	ldr	x0, [x0, #40]
    9010:	cmp	x0, #0x0
    9014:	b.eq	9044 <PySequence_Fast@plt+0x4e04>  // b.none
    9018:	ldr	x0, [sp, #40]
    901c:	ldr	x0, [x0, #40]
    9020:	ldr	x2, [sp, #32]
    9024:	ldr	x1, [sp, #24]
    9028:	blr	x2
    902c:	str	w0, [sp, #68]
    9030:	ldr	w0, [sp, #68]
    9034:	cmp	w0, #0x0
    9038:	b.eq	9044 <PySequence_Fast@plt+0x4e04>  // b.none
    903c:	ldr	w0, [sp, #68]
    9040:	b	9084 <PySequence_Fast@plt+0x4e44>
    9044:	ldr	x0, [sp, #40]
    9048:	ldr	x0, [x0, #48]
    904c:	cmp	x0, #0x0
    9050:	b.eq	9080 <PySequence_Fast@plt+0x4e40>  // b.none
    9054:	ldr	x0, [sp, #40]
    9058:	ldr	x0, [x0, #48]
    905c:	ldr	x2, [sp, #32]
    9060:	ldr	x1, [sp, #24]
    9064:	blr	x2
    9068:	str	w0, [sp, #64]
    906c:	ldr	w0, [sp, #64]
    9070:	cmp	w0, #0x0
    9074:	b.eq	9080 <PySequence_Fast@plt+0x4e40>  // b.none
    9078:	ldr	w0, [sp, #64]
    907c:	b	9084 <PySequence_Fast@plt+0x4e44>
    9080:	mov	w0, #0x0                   	// #0
    9084:	ldp	x29, x30, [sp], #80
    9088:	ret
    908c:	stp	x29, x30, [sp, #-64]!
    9090:	mov	x29, sp
    9094:	str	x0, [sp, #24]
    9098:	str	x1, [sp, #16]
    909c:	ldr	x0, [sp, #24]
    90a0:	ldr	x1, [x0, #24]
    90a4:	ldr	x0, [sp, #24]
    90a8:	ldr	x0, [x0, #32]
    90ac:	cmp	x1, x0
    90b0:	b.lt	912c <PySequence_Fast@plt+0x4eec>  // b.tstop
    90b4:	ldr	x0, [sp, #24]
    90b8:	ldr	x0, [x0, #32]
    90bc:	lsl	x0, x0, #1
    90c0:	str	x0, [sp, #56]
    90c4:	ldr	x0, [sp, #24]
    90c8:	ldr	x0, [x0, #16]
    90cc:	str	x0, [sp, #48]
    90d0:	ldr	x1, [sp, #56]
    90d4:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    90d8:	cmp	x1, x0
    90dc:	b.hi	90f8 <PySequence_Fast@plt+0x4eb8>  // b.pmore
    90e0:	ldr	x0, [sp, #56]
    90e4:	lsl	x0, x0, #4
    90e8:	mov	x1, x0
    90ec:	ldr	x0, [sp, #48]
    90f0:	bl	3e30 <PyMem_Realloc@plt>
    90f4:	b	90fc <PySequence_Fast@plt+0x4ebc>
    90f8:	mov	x0, #0x0                   	// #0
    90fc:	str	x0, [sp, #48]
    9100:	ldr	x0, [sp, #48]
    9104:	cmp	x0, #0x0
    9108:	b.ne	9114 <PySequence_Fast@plt+0x4ed4>  // b.any
    910c:	mov	w0, #0xffffffff            	// #-1
    9110:	b	9174 <PySequence_Fast@plt+0x4f34>
    9114:	ldr	x0, [sp, #24]
    9118:	ldr	x1, [sp, #48]
    911c:	str	x1, [x0, #16]
    9120:	ldr	x0, [sp, #24]
    9124:	ldr	x1, [sp, #56]
    9128:	str	x1, [x0, #32]
    912c:	ldr	x0, [sp, #24]
    9130:	ldr	x1, [x0, #16]
    9134:	ldr	x0, [sp, #24]
    9138:	ldr	x0, [x0, #24]
    913c:	add	x3, x0, #0x1
    9140:	ldr	x2, [sp, #24]
    9144:	str	x3, [x2, #24]
    9148:	lsl	x0, x0, #4
    914c:	add	x0, x1, x0
    9150:	str	x0, [sp, #40]
    9154:	ldr	x0, [sp, #16]
    9158:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    915c:	ldr	x0, [sp, #40]
    9160:	ldr	x1, [sp, #16]
    9164:	str	x1, [x0]
    9168:	ldr	x0, [sp, #40]
    916c:	str	xzr, [x0, #8]
    9170:	mov	w0, #0x0                   	// #0
    9174:	ldp	x29, x30, [sp], #64
    9178:	ret
    917c:	stp	x29, x30, [sp, #-80]!
    9180:	mov	x29, sp
    9184:	str	x0, [sp, #24]
    9188:	ldr	x0, [sp, #24]
    918c:	ldr	x0, [x0, #24]
    9190:	cmp	x0, #0x0
    9194:	b.ne	91d8 <PySequence_Fast@plt+0x4f98>  // b.any
    9198:	ldr	x0, [sp, #24]
    919c:	ldr	x0, [x0, #40]
    91a0:	cmp	x0, #0x0
    91a4:	b.ne	91c0 <PySequence_Fast@plt+0x4f80>  // b.any
    91a8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    91ac:	ldr	x0, [x0, #4016]
    91b0:	ldr	x0, [x0]
    91b4:	bl	3e40 <PyErr_SetNone@plt>
    91b8:	mov	x0, #0x0                   	// #0
    91bc:	b	9464 <PySequence_Fast@plt+0x5224>
    91c0:	ldr	x0, [sp, #24]
    91c4:	ldr	x0, [x0, #40]
    91c8:	str	x0, [sp, #72]
    91cc:	ldr	x0, [sp, #24]
    91d0:	str	xzr, [x0, #40]
    91d4:	b	92d0 <PySequence_Fast@plt+0x5090>
    91d8:	ldr	x0, [sp, #24]
    91dc:	ldr	x1, [x0, #16]
    91e0:	ldr	x0, [sp, #24]
    91e4:	ldr	x0, [x0, #24]
    91e8:	lsl	x0, x0, #4
    91ec:	sub	x0, x0, #0x10
    91f0:	add	x0, x1, x0
    91f4:	str	x0, [sp, #56]
    91f8:	ldr	x0, [sp, #56]
    91fc:	ldr	x0, [x0, #8]
    9200:	str	x0, [sp, #48]
    9204:	ldr	x0, [sp, #56]
    9208:	ldr	x0, [x0]
    920c:	str	x0, [sp, #72]
    9210:	ldr	x0, [sp, #72]
    9214:	ldr	x0, [x0, #40]
    9218:	str	x0, [sp, #40]
    921c:	ldr	x0, [sp, #40]
    9220:	cmp	x0, #0x0
    9224:	b.eq	923c <PySequence_Fast@plt+0x4ffc>  // b.none
    9228:	ldr	x0, [sp, #40]
    922c:	ldr	x0, [x0, #8]
    9230:	ldr	x1, [sp, #48]
    9234:	cmp	x1, x0
    9238:	b.lt	9298 <PySequence_Fast@plt+0x5058>  // b.tstop
    923c:	ldr	x0, [sp, #24]
    9240:	ldr	x0, [x0, #24]
    9244:	sub	x1, x0, #0x1
    9248:	ldr	x0, [sp, #24]
    924c:	str	x1, [x0, #24]
    9250:	ldr	x0, [sp, #24]
    9254:	ldr	w0, [x0, #56]
    9258:	cmp	w0, #0x0
    925c:	b.eq	9280 <PySequence_Fast@plt+0x5040>  // b.none
    9260:	ldr	x0, [sp, #24]
    9264:	ldr	x0, [x0, #24]
    9268:	cmp	x0, #0x0
    926c:	b.eq	9280 <PySequence_Fast@plt+0x5040>  // b.none
    9270:	ldr	x0, [sp, #72]
    9274:	bl	542c <PySequence_Fast@plt+0x11ec>
    9278:	str	x0, [sp, #64]
    927c:	b	93a4 <PySequence_Fast@plt+0x5164>
    9280:	ldr	x2, [sp, #72]
    9284:	mov	w1, #0x8d4                 	// #2260
    9288:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    928c:	add	x0, x0, #0x808
    9290:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9294:	b	9460 <PySequence_Fast@plt+0x5220>
    9298:	ldr	x0, [sp, #40]
    929c:	ldr	x1, [x0, #24]
    92a0:	ldr	x0, [sp, #48]
    92a4:	lsl	x0, x0, #3
    92a8:	add	x0, x1, x0
    92ac:	ldr	x0, [x0]
    92b0:	str	x0, [sp, #72]
    92b4:	ldr	x0, [sp, #56]
    92b8:	ldr	x0, [x0, #8]
    92bc:	add	x1, x0, #0x1
    92c0:	ldr	x0, [sp, #56]
    92c4:	str	x1, [x0, #8]
    92c8:	ldr	x0, [sp, #72]
    92cc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    92d0:	ldr	x1, [sp, #72]
    92d4:	ldr	x0, [sp, #24]
    92d8:	bl	908c <PySequence_Fast@plt+0x4e4c>
    92dc:	cmp	w0, #0x0
    92e0:	b.ge	9304 <PySequence_Fast@plt+0x50c4>  // b.tcont
    92e4:	ldr	x2, [sp, #72]
    92e8:	mov	w1, #0x8df                 	// #2271
    92ec:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    92f0:	add	x0, x0, #0x808
    92f4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    92f8:	bl	3d80 <PyErr_NoMemory@plt>
    92fc:	mov	x0, #0x0                   	// #0
    9300:	b	9464 <PySequence_Fast@plt+0x5224>
    9304:	ldr	x0, [sp, #24]
    9308:	ldr	w0, [x0, #56]
    930c:	cmp	w0, #0x0
    9310:	b.eq	9324 <PySequence_Fast@plt+0x50e4>  // b.none
    9314:	ldr	x0, [sp, #72]
    9318:	bl	538c <PySequence_Fast@plt+0x114c>
    931c:	str	x0, [sp, #64]
    9320:	b	93a4 <PySequence_Fast@plt+0x5164>
    9324:	ldr	x0, [sp, #24]
    9328:	ldr	x1, [x0, #48]
    932c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    9330:	ldr	x0, [x0, #3976]
    9334:	cmp	x1, x0
    9338:	b.ne	9344 <PySequence_Fast@plt+0x5104>  // b.any
    933c:	ldr	x0, [sp, #72]
    9340:	b	9464 <PySequence_Fast@plt+0x5224>
    9344:	ldr	x0, [sp, #72]
    9348:	ldr	x3, [x0, #16]
    934c:	ldr	x0, [sp, #24]
    9350:	ldr	x0, [x0, #48]
    9354:	mov	w2, #0x2                   	// #2
    9358:	mov	x1, x0
    935c:	mov	x0, x3
    9360:	bl	3ec0 <PyObject_RichCompareBool@plt>
    9364:	str	w0, [sp, #36]
    9368:	ldr	w0, [sp, #36]
    936c:	cmp	w0, #0x0
    9370:	b.le	937c <PySequence_Fast@plt+0x513c>
    9374:	ldr	x0, [sp, #72]
    9378:	b	9464 <PySequence_Fast@plt+0x5224>
    937c:	ldr	x2, [sp, #72]
    9380:	mov	w1, #0x8ef                 	// #2287
    9384:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9388:	add	x0, x0, #0x808
    938c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9390:	ldr	w0, [sp, #36]
    9394:	cmp	w0, #0x0
    9398:	b.ge	945c <PySequence_Fast@plt+0x521c>  // b.tcont
    939c:	mov	x0, #0x0                   	// #0
    93a0:	b	9464 <PySequence_Fast@plt+0x5224>
    93a4:	ldr	x0, [sp, #64]
    93a8:	cmp	x0, #0x0
    93ac:	b.ne	93cc <PySequence_Fast@plt+0x518c>  // b.any
    93b0:	ldr	x2, [sp, #72]
    93b4:	mov	w1, #0x8f6                 	// #2294
    93b8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    93bc:	add	x0, x0, #0x808
    93c0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    93c4:	mov	x0, #0x0                   	// #0
    93c8:	b	9464 <PySequence_Fast@plt+0x5224>
    93cc:	ldr	x1, [sp, #64]
    93d0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    93d4:	ldr	x0, [x0, #3976]
    93d8:	cmp	x1, x0
    93dc:	b.ne	93f8 <PySequence_Fast@plt+0x51b8>  // b.any
    93e0:	ldr	x2, [sp, #72]
    93e4:	mov	w1, #0x8fa                 	// #2298
    93e8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    93ec:	add	x0, x0, #0x808
    93f0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    93f4:	b	9188 <PySequence_Fast@plt+0x4f48>
    93f8:	ldr	x0, [sp, #64]
    93fc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    9400:	ldr	x2, [sp, #72]
    9404:	mov	w1, #0x8fe                 	// #2302
    9408:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    940c:	add	x0, x0, #0x808
    9410:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9414:	ldr	x0, [sp, #64]
    9418:	bl	4050 <PyObject_IsTrue@plt>
    941c:	str	w0, [sp, #36]
    9420:	ldr	w0, [sp, #36]
    9424:	cmp	w0, #0x0
    9428:	b.le	9434 <PySequence_Fast@plt+0x51f4>
    942c:	ldr	x0, [sp, #64]
    9430:	b	9464 <PySequence_Fast@plt+0x5224>
    9434:	ldr	x2, [sp, #64]
    9438:	mov	w1, #0x902                 	// #2306
    943c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9440:	add	x0, x0, #0x808
    9444:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9448:	ldr	w0, [sp, #36]
    944c:	cmp	w0, #0x0
    9450:	b.ge	9188 <PySequence_Fast@plt+0x4f48>  // b.tcont
    9454:	mov	x0, #0x0                   	// #0
    9458:	b	9464 <PySequence_Fast@plt+0x5224>
    945c:	nop
    9460:	b	9188 <PySequence_Fast@plt+0x4f48>
    9464:	ldp	x29, x30, [sp], #80
    9468:	ret
    946c:	stp	x29, x30, [sp, #-64]!
    9470:	mov	x29, sp
    9474:	str	x0, [sp, #40]
    9478:	str	x1, [sp, #32]
    947c:	str	w2, [sp, #28]
    9480:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    9484:	add	x0, x0, #0x4c0
    9488:	bl	3df0 <_PyObject_GC_New@plt>
    948c:	str	x0, [sp, #56]
    9490:	ldr	x0, [sp, #56]
    9494:	cmp	x0, #0x0
    9498:	b.ne	94a4 <PySequence_Fast@plt+0x5264>  // b.any
    949c:	mov	x0, #0x0                   	// #0
    94a0:	b	953c <PySequence_Fast@plt+0x52fc>
    94a4:	ldr	x0, [sp, #32]
    94a8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    94ac:	ldr	x0, [sp, #56]
    94b0:	ldr	x1, [sp, #32]
    94b4:	str	x1, [x0, #48]
    94b8:	ldr	x0, [sp, #56]
    94bc:	ldr	w1, [sp, #28]
    94c0:	str	w1, [x0, #56]
    94c4:	ldr	x0, [sp, #40]
    94c8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    94cc:	ldr	x0, [sp, #56]
    94d0:	ldr	x1, [sp, #40]
    94d4:	str	x1, [x0, #40]
    94d8:	ldr	x0, [sp, #56]
    94dc:	bl	3dc0 <PyObject_GC_Track@plt>
    94e0:	mov	x0, #0x80                  	// #128
    94e4:	bl	41f0 <PyMem_Malloc@plt>
    94e8:	mov	x1, x0
    94ec:	ldr	x0, [sp, #56]
    94f0:	str	x1, [x0, #16]
    94f4:	ldr	x0, [sp, #56]
    94f8:	ldr	x0, [x0, #16]
    94fc:	cmp	x0, #0x0
    9500:	b.ne	9524 <PySequence_Fast@plt+0x52e4>  // b.any
    9504:	ldr	x2, [sp, #56]
    9508:	mov	w1, #0x94d                 	// #2381
    950c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9510:	add	x0, x0, #0x808
    9514:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9518:	bl	3d80 <PyErr_NoMemory@plt>
    951c:	mov	x0, #0x0                   	// #0
    9520:	b	953c <PySequence_Fast@plt+0x52fc>
    9524:	ldr	x0, [sp, #56]
    9528:	str	xzr, [x0, #24]
    952c:	ldr	x0, [sp, #56]
    9530:	mov	x1, #0x8                   	// #8
    9534:	str	x1, [x0, #32]
    9538:	ldr	x0, [sp, #56]
    953c:	ldp	x29, x30, [sp], #64
    9540:	ret
    9544:	stp	x29, x30, [sp, #-64]!
    9548:	mov	x29, sp
    954c:	str	x0, [sp, #40]
    9550:	str	x1, [sp, #32]
    9554:	str	x2, [sp, #24]
    9558:	ldr	x0, [sp, #40]
    955c:	ldr	x2, [x0, #304]
    9560:	mov	x1, #0x0                   	// #0
    9564:	ldr	x0, [sp, #40]
    9568:	blr	x2
    956c:	str	x0, [sp, #56]
    9570:	ldr	x0, [sp, #56]
    9574:	cmp	x0, #0x0
    9578:	b.eq	96c4 <PySequence_Fast@plt+0x5484>  // b.none
    957c:	ldr	x0, [sp, #56]
    9580:	str	xzr, [x0, #16]
    9584:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    9588:	ldr	x0, [x0, #3976]
    958c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    9590:	ldr	x0, [sp, #56]
    9594:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    9598:	ldr	x1, [x1, #3976]
    959c:	str	x1, [x0, #24]
    95a0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    95a4:	ldr	x0, [x0, #3976]
    95a8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    95ac:	ldr	x0, [sp, #56]
    95b0:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    95b4:	ldr	x1, [x1, #3976]
    95b8:	str	x1, [x0, #32]
    95bc:	ldr	x0, [sp, #56]
    95c0:	str	xzr, [x0, #48]
    95c4:	ldr	x0, [sp, #56]
    95c8:	str	xzr, [x0, #72]
    95cc:	ldr	x0, [sp, #56]
    95d0:	str	xzr, [x0, #80]
    95d4:	ldr	x0, [sp, #56]
    95d8:	str	xzr, [x0, #88]
    95dc:	mov	x0, #0x14                  	// #20
    95e0:	bl	3c50 <PyList_New@plt>
    95e4:	mov	x1, x0
    95e8:	ldr	x0, [sp, #56]
    95ec:	str	x1, [x0, #56]
    95f0:	ldr	x0, [sp, #56]
    95f4:	ldr	x0, [x0, #56]
    95f8:	cmp	x0, #0x0
    95fc:	b.ne	9654 <PySequence_Fast@plt+0x5414>  // b.any
    9600:	ldr	x0, [sp, #56]
    9604:	ldr	x0, [x0, #24]
    9608:	mov	x2, x0
    960c:	mov	w1, #0x991                 	// #2449
    9610:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9614:	add	x0, x0, #0x808
    9618:	bl	4408 <PySequence_Fast@plt+0x1c8>
    961c:	ldr	x0, [sp, #56]
    9620:	ldr	x0, [x0, #32]
    9624:	mov	x2, x0
    9628:	mov	w1, #0x992                 	// #2450
    962c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9630:	add	x0, x0, #0x808
    9634:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9638:	ldr	x2, [sp, #56]
    963c:	mov	w1, #0x993                 	// #2451
    9640:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9644:	add	x0, x0, #0x808
    9648:	bl	4408 <PySequence_Fast@plt+0x1c8>
    964c:	mov	x0, #0x0                   	// #0
    9650:	b	96c8 <PySequence_Fast@plt+0x5488>
    9654:	ldr	x0, [sp, #56]
    9658:	str	xzr, [x0, #64]
    965c:	ldr	x0, [sp, #56]
    9660:	str	xzr, [x0, #96]
    9664:	ldr	x0, [sp, #56]
    9668:	str	xzr, [x0, #112]
    966c:	ldr	x0, [sp, #56]
    9670:	ldr	x1, [x0, #112]
    9674:	ldr	x0, [sp, #56]
    9678:	str	x1, [x0, #104]
    967c:	ldr	x0, [sp, #56]
    9680:	str	xzr, [x0, #128]
    9684:	ldr	x0, [sp, #56]
    9688:	ldr	x1, [x0, #128]
    968c:	ldr	x0, [sp, #56]
    9690:	str	x1, [x0, #120]
    9694:	ldr	x0, [sp, #56]
    9698:	str	xzr, [x0, #144]
    969c:	ldr	x0, [sp, #56]
    96a0:	ldr	x1, [x0, #144]
    96a4:	ldr	x0, [sp, #56]
    96a8:	str	x1, [x0, #136]
    96ac:	ldr	x0, [sp, #56]
    96b0:	strb	wzr, [x0, #153]
    96b4:	ldr	x0, [sp, #56]
    96b8:	ldrb	w1, [x0, #153]
    96bc:	ldr	x0, [sp, #56]
    96c0:	strb	w1, [x0, #152]
    96c4:	ldr	x0, [sp, #56]
    96c8:	ldp	x29, x30, [sp], #64
    96cc:	ret
    96d0:	stp	x29, x30, [sp, #-128]!
    96d4:	mov	x29, sp
    96d8:	str	x0, [sp, #56]
    96dc:	str	x1, [sp, #48]
    96e0:	str	x2, [sp, #40]
    96e4:	str	x3, [sp, #32]
    96e8:	str	w4, [sp, #28]
    96ec:	str	w5, [sp, #24]
    96f0:	ldr	x1, [sp, #48]
    96f4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    96f8:	ldr	x0, [x0, #3976]
    96fc:	cmp	x1, x0
    9700:	b.eq	9730 <PySequence_Fast@plt+0x54f0>  // b.none
    9704:	ldr	x0, [sp, #48]
    9708:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    970c:	ldr	x0, [sp, #56]
    9710:	ldr	x0, [x0, #72]
    9714:	str	x0, [sp, #112]
    9718:	ldr	x0, [sp, #56]
    971c:	ldr	x1, [sp, #48]
    9720:	str	x1, [x0, #72]
    9724:	ldr	x0, [sp, #112]
    9728:	bl	4480 <PySequence_Fast@plt+0x240>
    972c:	b	9764 <PySequence_Fast@plt+0x5524>
    9730:	ldr	x0, [sp, #56]
    9734:	ldr	x0, [x0, #72]
    9738:	str	x0, [sp, #120]
    973c:	ldr	x0, [sp, #120]
    9740:	cmp	x0, #0x0
    9744:	b.eq	9764 <PySequence_Fast@plt+0x5524>  // b.none
    9748:	ldr	x0, [sp, #56]
    974c:	str	xzr, [x0, #72]
    9750:	ldr	x2, [sp, #120]
    9754:	mov	w1, #0x9b9                 	// #2489
    9758:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    975c:	add	x0, x0, #0x808
    9760:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9764:	ldr	x1, [sp, #40]
    9768:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    976c:	ldr	x0, [x0, #3976]
    9770:	cmp	x1, x0
    9774:	b.ne	9798 <PySequence_Fast@plt+0x5558>  // b.any
    9778:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    977c:	add	x0, x0, #0x9b8
    9780:	bl	3fc0 <PyState_FindModule@plt>
    9784:	bl	3e10 <PyModule_GetState@plt>
    9788:	str	x0, [sp, #104]
    978c:	ldr	x0, [sp, #104]
    9790:	ldr	x0, [x0, #24]
    9794:	str	x0, [sp, #40]
    9798:	ldr	x0, [sp, #40]
    979c:	cmp	x0, #0x0
    97a0:	b.eq	97e0 <PySequence_Fast@plt+0x55a0>  // b.none
    97a4:	ldr	x0, [sp, #40]
    97a8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    97ac:	ldr	x0, [sp, #56]
    97b0:	ldr	x0, [x0, #80]
    97b4:	str	x0, [sp, #88]
    97b8:	ldr	x0, [sp, #56]
    97bc:	ldr	x1, [sp, #40]
    97c0:	str	x1, [x0, #80]
    97c4:	ldr	x0, [sp, #88]
    97c8:	bl	4480 <PySequence_Fast@plt+0x240>
    97cc:	ldr	w0, [sp, #28]
    97d0:	and	w1, w0, #0xff
    97d4:	ldr	x0, [sp, #56]
    97d8:	strb	w1, [x0, #152]
    97dc:	b	981c <PySequence_Fast@plt+0x55dc>
    97e0:	ldr	x0, [sp, #56]
    97e4:	ldr	x0, [x0, #80]
    97e8:	str	x0, [sp, #96]
    97ec:	ldr	x0, [sp, #96]
    97f0:	cmp	x0, #0x0
    97f4:	b.eq	9814 <PySequence_Fast@plt+0x55d4>  // b.none
    97f8:	ldr	x0, [sp, #56]
    97fc:	str	xzr, [x0, #80]
    9800:	ldr	x2, [sp, #96]
    9804:	mov	w1, #0x9c5                 	// #2501
    9808:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    980c:	add	x0, x0, #0x808
    9810:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9814:	ldr	x0, [sp, #56]
    9818:	strb	wzr, [x0, #152]
    981c:	ldr	x1, [sp, #32]
    9820:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    9824:	ldr	x0, [x0, #3976]
    9828:	cmp	x1, x0
    982c:	b.ne	9850 <PySequence_Fast@plt+0x5610>  // b.any
    9830:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    9834:	add	x0, x0, #0x9b8
    9838:	bl	3fc0 <PyState_FindModule@plt>
    983c:	bl	3e10 <PyModule_GetState@plt>
    9840:	str	x0, [sp, #80]
    9844:	ldr	x0, [sp, #80]
    9848:	ldr	x0, [x0, #32]
    984c:	str	x0, [sp, #32]
    9850:	ldr	x0, [sp, #32]
    9854:	cmp	x0, #0x0
    9858:	b.eq	9898 <PySequence_Fast@plt+0x5658>  // b.none
    985c:	ldr	x0, [sp, #32]
    9860:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    9864:	ldr	x0, [sp, #56]
    9868:	ldr	x0, [x0, #88]
    986c:	str	x0, [sp, #64]
    9870:	ldr	x0, [sp, #56]
    9874:	ldr	x1, [sp, #32]
    9878:	str	x1, [x0, #88]
    987c:	ldr	x0, [sp, #64]
    9880:	bl	4480 <PySequence_Fast@plt+0x240>
    9884:	ldr	w0, [sp, #24]
    9888:	and	w1, w0, #0xff
    988c:	ldr	x0, [sp, #56]
    9890:	strb	w1, [x0, #153]
    9894:	b	98d4 <PySequence_Fast@plt+0x5694>
    9898:	ldr	x0, [sp, #56]
    989c:	ldr	x0, [x0, #88]
    98a0:	str	x0, [sp, #72]
    98a4:	ldr	x0, [sp, #72]
    98a8:	cmp	x0, #0x0
    98ac:	b.eq	98cc <PySequence_Fast@plt+0x568c>  // b.none
    98b0:	ldr	x0, [sp, #56]
    98b4:	str	xzr, [x0, #88]
    98b8:	ldr	x2, [sp, #72]
    98bc:	mov	w1, #0x9d2                 	// #2514
    98c0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    98c4:	add	x0, x0, #0x808
    98c8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    98cc:	ldr	x0, [sp, #56]
    98d0:	strb	wzr, [x0, #153]
    98d4:	mov	w0, #0x0                   	// #0
    98d8:	ldp	x29, x30, [sp], #128
    98dc:	ret
    98e0:	stp	x29, x30, [sp, #-112]!
    98e4:	mov	x29, sp
    98e8:	str	x0, [sp, #40]
    98ec:	str	x1, [sp, #32]
    98f0:	str	x2, [sp, #24]
    98f4:	ldr	x0, [sp, #40]
    98f8:	ldr	x0, [x0, #144]
    98fc:	cmp	x0, #0x0
    9900:	b.eq	9930 <PySequence_Fast@plt+0x56f0>  // b.none
    9904:	ldr	x0, [sp, #40]
    9908:	ldr	x0, [x0, #144]
    990c:	ldr	x2, [sp, #32]
    9910:	ldr	x1, [sp, #24]
    9914:	blr	x2
    9918:	str	w0, [sp, #108]
    991c:	ldr	w0, [sp, #108]
    9920:	cmp	w0, #0x0
    9924:	b.eq	9930 <PySequence_Fast@plt+0x56f0>  // b.none
    9928:	ldr	w0, [sp, #108]
    992c:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9930:	ldr	x0, [sp, #40]
    9934:	ldr	x0, [x0, #136]
    9938:	cmp	x0, #0x0
    993c:	b.eq	996c <PySequence_Fast@plt+0x572c>  // b.none
    9940:	ldr	x0, [sp, #40]
    9944:	ldr	x0, [x0, #136]
    9948:	ldr	x2, [sp, #32]
    994c:	ldr	x1, [sp, #24]
    9950:	blr	x2
    9954:	str	w0, [sp, #104]
    9958:	ldr	w0, [sp, #104]
    995c:	cmp	w0, #0x0
    9960:	b.eq	996c <PySequence_Fast@plt+0x572c>  // b.none
    9964:	ldr	w0, [sp, #104]
    9968:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    996c:	ldr	x0, [sp, #40]
    9970:	ldr	x0, [x0, #128]
    9974:	cmp	x0, #0x0
    9978:	b.eq	99a8 <PySequence_Fast@plt+0x5768>  // b.none
    997c:	ldr	x0, [sp, #40]
    9980:	ldr	x0, [x0, #128]
    9984:	ldr	x2, [sp, #32]
    9988:	ldr	x1, [sp, #24]
    998c:	blr	x2
    9990:	str	w0, [sp, #100]
    9994:	ldr	w0, [sp, #100]
    9998:	cmp	w0, #0x0
    999c:	b.eq	99a8 <PySequence_Fast@plt+0x5768>  // b.none
    99a0:	ldr	w0, [sp, #100]
    99a4:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    99a8:	ldr	x0, [sp, #40]
    99ac:	ldr	x0, [x0, #120]
    99b0:	cmp	x0, #0x0
    99b4:	b.eq	99e4 <PySequence_Fast@plt+0x57a4>  // b.none
    99b8:	ldr	x0, [sp, #40]
    99bc:	ldr	x0, [x0, #120]
    99c0:	ldr	x2, [sp, #32]
    99c4:	ldr	x1, [sp, #24]
    99c8:	blr	x2
    99cc:	str	w0, [sp, #96]
    99d0:	ldr	w0, [sp, #96]
    99d4:	cmp	w0, #0x0
    99d8:	b.eq	99e4 <PySequence_Fast@plt+0x57a4>  // b.none
    99dc:	ldr	w0, [sp, #96]
    99e0:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    99e4:	ldr	x0, [sp, #40]
    99e8:	ldr	x0, [x0, #112]
    99ec:	cmp	x0, #0x0
    99f0:	b.eq	9a20 <PySequence_Fast@plt+0x57e0>  // b.none
    99f4:	ldr	x0, [sp, #40]
    99f8:	ldr	x0, [x0, #112]
    99fc:	ldr	x2, [sp, #32]
    9a00:	ldr	x1, [sp, #24]
    9a04:	blr	x2
    9a08:	str	w0, [sp, #92]
    9a0c:	ldr	w0, [sp, #92]
    9a10:	cmp	w0, #0x0
    9a14:	b.eq	9a20 <PySequence_Fast@plt+0x57e0>  // b.none
    9a18:	ldr	w0, [sp, #92]
    9a1c:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9a20:	ldr	x0, [sp, #40]
    9a24:	ldr	x0, [x0, #104]
    9a28:	cmp	x0, #0x0
    9a2c:	b.eq	9a5c <PySequence_Fast@plt+0x581c>  // b.none
    9a30:	ldr	x0, [sp, #40]
    9a34:	ldr	x0, [x0, #104]
    9a38:	ldr	x2, [sp, #32]
    9a3c:	ldr	x1, [sp, #24]
    9a40:	blr	x2
    9a44:	str	w0, [sp, #88]
    9a48:	ldr	w0, [sp, #88]
    9a4c:	cmp	w0, #0x0
    9a50:	b.eq	9a5c <PySequence_Fast@plt+0x581c>  // b.none
    9a54:	ldr	w0, [sp, #88]
    9a58:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9a5c:	ldr	x0, [sp, #40]
    9a60:	ldr	x0, [x0, #96]
    9a64:	cmp	x0, #0x0
    9a68:	b.eq	9a98 <PySequence_Fast@plt+0x5858>  // b.none
    9a6c:	ldr	x0, [sp, #40]
    9a70:	ldr	x0, [x0, #96]
    9a74:	ldr	x2, [sp, #32]
    9a78:	ldr	x1, [sp, #24]
    9a7c:	blr	x2
    9a80:	str	w0, [sp, #84]
    9a84:	ldr	w0, [sp, #84]
    9a88:	cmp	w0, #0x0
    9a8c:	b.eq	9a98 <PySequence_Fast@plt+0x5858>  // b.none
    9a90:	ldr	w0, [sp, #84]
    9a94:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9a98:	ldr	x0, [sp, #40]
    9a9c:	ldr	x0, [x0, #16]
    9aa0:	cmp	x0, #0x0
    9aa4:	b.eq	9ad4 <PySequence_Fast@plt+0x5894>  // b.none
    9aa8:	ldr	x0, [sp, #40]
    9aac:	ldr	x0, [x0, #16]
    9ab0:	ldr	x2, [sp, #32]
    9ab4:	ldr	x1, [sp, #24]
    9ab8:	blr	x2
    9abc:	str	w0, [sp, #80]
    9ac0:	ldr	w0, [sp, #80]
    9ac4:	cmp	w0, #0x0
    9ac8:	b.eq	9ad4 <PySequence_Fast@plt+0x5894>  // b.none
    9acc:	ldr	w0, [sp, #80]
    9ad0:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9ad4:	ldr	x0, [sp, #40]
    9ad8:	ldr	x0, [x0, #24]
    9adc:	cmp	x0, #0x0
    9ae0:	b.eq	9b10 <PySequence_Fast@plt+0x58d0>  // b.none
    9ae4:	ldr	x0, [sp, #40]
    9ae8:	ldr	x0, [x0, #24]
    9aec:	ldr	x2, [sp, #32]
    9af0:	ldr	x1, [sp, #24]
    9af4:	blr	x2
    9af8:	str	w0, [sp, #76]
    9afc:	ldr	w0, [sp, #76]
    9b00:	cmp	w0, #0x0
    9b04:	b.eq	9b10 <PySequence_Fast@plt+0x58d0>  // b.none
    9b08:	ldr	w0, [sp, #76]
    9b0c:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9b10:	ldr	x0, [sp, #40]
    9b14:	ldr	x0, [x0, #32]
    9b18:	cmp	x0, #0x0
    9b1c:	b.eq	9b4c <PySequence_Fast@plt+0x590c>  // b.none
    9b20:	ldr	x0, [sp, #40]
    9b24:	ldr	x0, [x0, #32]
    9b28:	ldr	x2, [sp, #32]
    9b2c:	ldr	x1, [sp, #24]
    9b30:	blr	x2
    9b34:	str	w0, [sp, #72]
    9b38:	ldr	w0, [sp, #72]
    9b3c:	cmp	w0, #0x0
    9b40:	b.eq	9b4c <PySequence_Fast@plt+0x590c>  // b.none
    9b44:	ldr	w0, [sp, #72]
    9b48:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9b4c:	ldr	x0, [sp, #40]
    9b50:	ldr	x0, [x0, #40]
    9b54:	cmp	x0, #0x0
    9b58:	b.eq	9b88 <PySequence_Fast@plt+0x5948>  // b.none
    9b5c:	ldr	x0, [sp, #40]
    9b60:	ldr	x0, [x0, #40]
    9b64:	ldr	x2, [sp, #32]
    9b68:	ldr	x1, [sp, #24]
    9b6c:	blr	x2
    9b70:	str	w0, [sp, #68]
    9b74:	ldr	w0, [sp, #68]
    9b78:	cmp	w0, #0x0
    9b7c:	b.eq	9b88 <PySequence_Fast@plt+0x5948>  // b.none
    9b80:	ldr	w0, [sp, #68]
    9b84:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9b88:	ldr	x0, [sp, #40]
    9b8c:	ldr	x0, [x0, #48]
    9b90:	cmp	x0, #0x0
    9b94:	b.eq	9bc4 <PySequence_Fast@plt+0x5984>  // b.none
    9b98:	ldr	x0, [sp, #40]
    9b9c:	ldr	x0, [x0, #48]
    9ba0:	ldr	x2, [sp, #32]
    9ba4:	ldr	x1, [sp, #24]
    9ba8:	blr	x2
    9bac:	str	w0, [sp, #64]
    9bb0:	ldr	w0, [sp, #64]
    9bb4:	cmp	w0, #0x0
    9bb8:	b.eq	9bc4 <PySequence_Fast@plt+0x5984>  // b.none
    9bbc:	ldr	w0, [sp, #64]
    9bc0:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9bc4:	ldr	x0, [sp, #40]
    9bc8:	ldr	x0, [x0, #56]
    9bcc:	cmp	x0, #0x0
    9bd0:	b.eq	9c00 <PySequence_Fast@plt+0x59c0>  // b.none
    9bd4:	ldr	x0, [sp, #40]
    9bd8:	ldr	x0, [x0, #56]
    9bdc:	ldr	x2, [sp, #32]
    9be0:	ldr	x1, [sp, #24]
    9be4:	blr	x2
    9be8:	str	w0, [sp, #60]
    9bec:	ldr	w0, [sp, #60]
    9bf0:	cmp	w0, #0x0
    9bf4:	b.eq	9c00 <PySequence_Fast@plt+0x59c0>  // b.none
    9bf8:	ldr	w0, [sp, #60]
    9bfc:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9c00:	ldr	x0, [sp, #40]
    9c04:	ldr	x0, [x0, #88]
    9c08:	cmp	x0, #0x0
    9c0c:	b.eq	9c3c <PySequence_Fast@plt+0x59fc>  // b.none
    9c10:	ldr	x0, [sp, #40]
    9c14:	ldr	x0, [x0, #88]
    9c18:	ldr	x2, [sp, #32]
    9c1c:	ldr	x1, [sp, #24]
    9c20:	blr	x2
    9c24:	str	w0, [sp, #56]
    9c28:	ldr	w0, [sp, #56]
    9c2c:	cmp	w0, #0x0
    9c30:	b.eq	9c3c <PySequence_Fast@plt+0x59fc>  // b.none
    9c34:	ldr	w0, [sp, #56]
    9c38:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9c3c:	ldr	x0, [sp, #40]
    9c40:	ldr	x0, [x0, #80]
    9c44:	cmp	x0, #0x0
    9c48:	b.eq	9c78 <PySequence_Fast@plt+0x5a38>  // b.none
    9c4c:	ldr	x0, [sp, #40]
    9c50:	ldr	x0, [x0, #80]
    9c54:	ldr	x2, [sp, #32]
    9c58:	ldr	x1, [sp, #24]
    9c5c:	blr	x2
    9c60:	str	w0, [sp, #52]
    9c64:	ldr	w0, [sp, #52]
    9c68:	cmp	w0, #0x0
    9c6c:	b.eq	9c78 <PySequence_Fast@plt+0x5a38>  // b.none
    9c70:	ldr	w0, [sp, #52]
    9c74:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9c78:	ldr	x0, [sp, #40]
    9c7c:	ldr	x0, [x0, #72]
    9c80:	cmp	x0, #0x0
    9c84:	b.eq	9cb4 <PySequence_Fast@plt+0x5a74>  // b.none
    9c88:	ldr	x0, [sp, #40]
    9c8c:	ldr	x0, [x0, #72]
    9c90:	ldr	x2, [sp, #32]
    9c94:	ldr	x1, [sp, #24]
    9c98:	blr	x2
    9c9c:	str	w0, [sp, #48]
    9ca0:	ldr	w0, [sp, #48]
    9ca4:	cmp	w0, #0x0
    9ca8:	b.eq	9cb4 <PySequence_Fast@plt+0x5a74>  // b.none
    9cac:	ldr	w0, [sp, #48]
    9cb0:	b	9cb8 <PySequence_Fast@plt+0x5a78>
    9cb4:	mov	w0, #0x0                   	// #0
    9cb8:	ldp	x29, x30, [sp], #112
    9cbc:	ret
    9cc0:	stp	x29, x30, [sp, #-160]!
    9cc4:	mov	x29, sp
    9cc8:	str	x0, [sp, #24]
    9ccc:	ldr	x0, [sp, #24]
    9cd0:	ldr	x0, [x0, #144]
    9cd4:	str	x0, [sp, #152]
    9cd8:	ldr	x0, [sp, #152]
    9cdc:	cmp	x0, #0x0
    9ce0:	b.eq	9d00 <PySequence_Fast@plt+0x5ac0>  // b.none
    9ce4:	ldr	x0, [sp, #24]
    9ce8:	str	xzr, [x0, #144]
    9cec:	ldr	x2, [sp, #152]
    9cf0:	mov	w1, #0x9f2                 	// #2546
    9cf4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9cf8:	add	x0, x0, #0x808
    9cfc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9d00:	ldr	x0, [sp, #24]
    9d04:	ldr	x0, [x0, #136]
    9d08:	str	x0, [sp, #144]
    9d0c:	ldr	x0, [sp, #144]
    9d10:	cmp	x0, #0x0
    9d14:	b.eq	9d34 <PySequence_Fast@plt+0x5af4>  // b.none
    9d18:	ldr	x0, [sp, #24]
    9d1c:	str	xzr, [x0, #136]
    9d20:	ldr	x2, [sp, #144]
    9d24:	mov	w1, #0x9f3                 	// #2547
    9d28:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9d2c:	add	x0, x0, #0x808
    9d30:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9d34:	ldr	x0, [sp, #24]
    9d38:	ldr	x0, [x0, #128]
    9d3c:	str	x0, [sp, #136]
    9d40:	ldr	x0, [sp, #136]
    9d44:	cmp	x0, #0x0
    9d48:	b.eq	9d68 <PySequence_Fast@plt+0x5b28>  // b.none
    9d4c:	ldr	x0, [sp, #24]
    9d50:	str	xzr, [x0, #128]
    9d54:	ldr	x2, [sp, #136]
    9d58:	mov	w1, #0x9f4                 	// #2548
    9d5c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9d60:	add	x0, x0, #0x808
    9d64:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9d68:	ldr	x0, [sp, #24]
    9d6c:	ldr	x0, [x0, #120]
    9d70:	str	x0, [sp, #128]
    9d74:	ldr	x0, [sp, #128]
    9d78:	cmp	x0, #0x0
    9d7c:	b.eq	9d9c <PySequence_Fast@plt+0x5b5c>  // b.none
    9d80:	ldr	x0, [sp, #24]
    9d84:	str	xzr, [x0, #120]
    9d88:	ldr	x2, [sp, #128]
    9d8c:	mov	w1, #0x9f5                 	// #2549
    9d90:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9d94:	add	x0, x0, #0x808
    9d98:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9d9c:	ldr	x0, [sp, #24]
    9da0:	ldr	x0, [x0, #112]
    9da4:	str	x0, [sp, #120]
    9da8:	ldr	x0, [sp, #120]
    9dac:	cmp	x0, #0x0
    9db0:	b.eq	9dd0 <PySequence_Fast@plt+0x5b90>  // b.none
    9db4:	ldr	x0, [sp, #24]
    9db8:	str	xzr, [x0, #112]
    9dbc:	ldr	x2, [sp, #120]
    9dc0:	mov	w1, #0x9f6                 	// #2550
    9dc4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9dc8:	add	x0, x0, #0x808
    9dcc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9dd0:	ldr	x0, [sp, #24]
    9dd4:	ldr	x0, [x0, #104]
    9dd8:	str	x0, [sp, #112]
    9ddc:	ldr	x0, [sp, #112]
    9de0:	cmp	x0, #0x0
    9de4:	b.eq	9e04 <PySequence_Fast@plt+0x5bc4>  // b.none
    9de8:	ldr	x0, [sp, #24]
    9dec:	str	xzr, [x0, #104]
    9df0:	ldr	x2, [sp, #112]
    9df4:	mov	w1, #0x9f7                 	// #2551
    9df8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9dfc:	add	x0, x0, #0x808
    9e00:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9e04:	ldr	x0, [sp, #24]
    9e08:	ldr	x0, [x0, #96]
    9e0c:	str	x0, [sp, #104]
    9e10:	ldr	x0, [sp, #104]
    9e14:	cmp	x0, #0x0
    9e18:	b.eq	9e38 <PySequence_Fast@plt+0x5bf8>  // b.none
    9e1c:	ldr	x0, [sp, #24]
    9e20:	str	xzr, [x0, #96]
    9e24:	ldr	x2, [sp, #104]
    9e28:	mov	w1, #0x9f8                 	// #2552
    9e2c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9e30:	add	x0, x0, #0x808
    9e34:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9e38:	ldr	x0, [sp, #24]
    9e3c:	ldr	x0, [x0, #56]
    9e40:	str	x0, [sp, #96]
    9e44:	ldr	x0, [sp, #96]
    9e48:	cmp	x0, #0x0
    9e4c:	b.eq	9e6c <PySequence_Fast@plt+0x5c2c>  // b.none
    9e50:	ldr	x0, [sp, #24]
    9e54:	str	xzr, [x0, #56]
    9e58:	ldr	x2, [sp, #96]
    9e5c:	mov	w1, #0x9f9                 	// #2553
    9e60:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9e64:	add	x0, x0, #0x808
    9e68:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9e6c:	ldr	x0, [sp, #24]
    9e70:	ldr	x0, [x0, #48]
    9e74:	str	x0, [sp, #88]
    9e78:	ldr	x0, [sp, #88]
    9e7c:	cmp	x0, #0x0
    9e80:	b.eq	9ea0 <PySequence_Fast@plt+0x5c60>  // b.none
    9e84:	ldr	x0, [sp, #24]
    9e88:	str	xzr, [x0, #48]
    9e8c:	ldr	x2, [sp, #88]
    9e90:	mov	w1, #0x9fa                 	// #2554
    9e94:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9e98:	add	x0, x0, #0x808
    9e9c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9ea0:	ldr	x0, [sp, #24]
    9ea4:	ldr	x0, [x0, #32]
    9ea8:	str	x0, [sp, #80]
    9eac:	ldr	x0, [sp, #80]
    9eb0:	cmp	x0, #0x0
    9eb4:	b.eq	9ed4 <PySequence_Fast@plt+0x5c94>  // b.none
    9eb8:	ldr	x0, [sp, #24]
    9ebc:	str	xzr, [x0, #32]
    9ec0:	ldr	x2, [sp, #80]
    9ec4:	mov	w1, #0x9fb                 	// #2555
    9ec8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9ecc:	add	x0, x0, #0x808
    9ed0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9ed4:	ldr	x0, [sp, #24]
    9ed8:	ldr	x0, [x0, #40]
    9edc:	str	x0, [sp, #72]
    9ee0:	ldr	x0, [sp, #72]
    9ee4:	cmp	x0, #0x0
    9ee8:	b.eq	9f08 <PySequence_Fast@plt+0x5cc8>  // b.none
    9eec:	ldr	x0, [sp, #24]
    9ef0:	str	xzr, [x0, #40]
    9ef4:	ldr	x2, [sp, #72]
    9ef8:	mov	w1, #0x9fc                 	// #2556
    9efc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9f00:	add	x0, x0, #0x808
    9f04:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9f08:	ldr	x0, [sp, #24]
    9f0c:	ldr	x0, [x0, #24]
    9f10:	str	x0, [sp, #64]
    9f14:	ldr	x0, [sp, #64]
    9f18:	cmp	x0, #0x0
    9f1c:	b.eq	9f3c <PySequence_Fast@plt+0x5cfc>  // b.none
    9f20:	ldr	x0, [sp, #24]
    9f24:	str	xzr, [x0, #24]
    9f28:	ldr	x2, [sp, #64]
    9f2c:	mov	w1, #0x9fd                 	// #2557
    9f30:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9f34:	add	x0, x0, #0x808
    9f38:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9f3c:	ldr	x0, [sp, #24]
    9f40:	ldr	x0, [x0, #88]
    9f44:	str	x0, [sp, #56]
    9f48:	ldr	x0, [sp, #56]
    9f4c:	cmp	x0, #0x0
    9f50:	b.eq	9f70 <PySequence_Fast@plt+0x5d30>  // b.none
    9f54:	ldr	x0, [sp, #24]
    9f58:	str	xzr, [x0, #88]
    9f5c:	ldr	x2, [sp, #56]
    9f60:	mov	w1, #0x9fe                 	// #2558
    9f64:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9f68:	add	x0, x0, #0x808
    9f6c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9f70:	ldr	x0, [sp, #24]
    9f74:	ldr	x0, [x0, #80]
    9f78:	str	x0, [sp, #48]
    9f7c:	ldr	x0, [sp, #48]
    9f80:	cmp	x0, #0x0
    9f84:	b.eq	9fa4 <PySequence_Fast@plt+0x5d64>  // b.none
    9f88:	ldr	x0, [sp, #24]
    9f8c:	str	xzr, [x0, #80]
    9f90:	ldr	x2, [sp, #48]
    9f94:	mov	w1, #0x9ff                 	// #2559
    9f98:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9f9c:	add	x0, x0, #0x808
    9fa0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9fa4:	ldr	x0, [sp, #24]
    9fa8:	ldr	x0, [x0, #72]
    9fac:	str	x0, [sp, #40]
    9fb0:	ldr	x0, [sp, #40]
    9fb4:	cmp	x0, #0x0
    9fb8:	b.eq	9fd8 <PySequence_Fast@plt+0x5d98>  // b.none
    9fbc:	ldr	x0, [sp, #24]
    9fc0:	str	xzr, [x0, #72]
    9fc4:	ldr	x2, [sp, #40]
    9fc8:	mov	w1, #0xa00                 	// #2560
    9fcc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    9fd0:	add	x0, x0, #0x808
    9fd4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    9fd8:	ldr	x0, [sp, #24]
    9fdc:	ldr	x0, [x0, #16]
    9fe0:	str	x0, [sp, #32]
    9fe4:	ldr	x0, [sp, #32]
    9fe8:	cmp	x0, #0x0
    9fec:	b.eq	a00c <PySequence_Fast@plt+0x5dcc>  // b.none
    9ff0:	ldr	x0, [sp, #24]
    9ff4:	str	xzr, [x0, #16]
    9ff8:	ldr	x2, [sp, #32]
    9ffc:	mov	w1, #0xa01                 	// #2561
    a000:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a004:	add	x0, x0, #0x808
    a008:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a00c:	mov	w0, #0x0                   	// #0
    a010:	ldp	x29, x30, [sp], #160
    a014:	ret
    a018:	stp	x29, x30, [sp, #-32]!
    a01c:	mov	x29, sp
    a020:	str	x0, [sp, #24]
    a024:	ldr	x0, [sp, #24]
    a028:	bl	4220 <PyObject_GC_UnTrack@plt>
    a02c:	ldr	x0, [sp, #24]
    a030:	bl	9cc0 <PySequence_Fast@plt+0x5a80>
    a034:	ldr	x0, [sp, #24]
    a038:	ldr	x0, [x0, #8]
    a03c:	ldr	x1, [x0, #320]
    a040:	ldr	x0, [sp, #24]
    a044:	blr	x1
    a048:	nop
    a04c:	ldp	x29, x30, [sp], #32
    a050:	ret
    a054:	stp	x29, x30, [sp, #-96]!
    a058:	mov	x29, sp
    a05c:	str	x0, [sp, #40]
    a060:	str	x1, [sp, #32]
    a064:	str	x2, [sp, #24]
    a068:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    a06c:	add	x0, x0, #0x9b8
    a070:	bl	3fc0 <PyState_FindModule@plt>
    a074:	bl	3e10 <PyModule_GetState@plt>
    a078:	str	x0, [sp, #88]
    a07c:	ldr	x0, [sp, #32]
    a080:	bl	4090 <PyCallable_Check@plt>
    a084:	cmp	w0, #0x0
    a088:	b.ne	a0d4 <PySequence_Fast@plt+0x5e94>  // b.any
    a08c:	ldr	x1, [sp, #32]
    a090:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a094:	ldr	x0, [x0, #3976]
    a098:	cmp	x1, x0
    a09c:	b.eq	a0d4 <PySequence_Fast@plt+0x5e94>  // b.none
    a0a0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a0a4:	ldr	x0, [x0, #3944]
    a0a8:	ldr	x3, [x0]
    a0ac:	ldr	x0, [sp, #32]
    a0b0:	ldr	x0, [x0, #8]
    a0b4:	ldr	x0, [x0, #24]
    a0b8:	mov	x2, x0
    a0bc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a0c0:	add	x1, x0, #0xc68
    a0c4:	mov	x0, x3
    a0c8:	bl	4180 <PyErr_Format@plt>
    a0cc:	mov	x0, #0x0                   	// #0
    a0d0:	b	a274 <PySequence_Fast@plt+0x6034>
    a0d4:	ldr	x0, [sp, #24]
    a0d8:	bl	4090 <PyCallable_Check@plt>
    a0dc:	cmp	w0, #0x0
    a0e0:	b.ne	a12c <PySequence_Fast@plt+0x5eec>  // b.any
    a0e4:	ldr	x1, [sp, #24]
    a0e8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a0ec:	ldr	x0, [x0, #3976]
    a0f0:	cmp	x1, x0
    a0f4:	b.eq	a12c <PySequence_Fast@plt+0x5eec>  // b.none
    a0f8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a0fc:	ldr	x0, [x0, #3944]
    a100:	ldr	x3, [x0]
    a104:	ldr	x0, [sp, #24]
    a108:	ldr	x0, [x0, #8]
    a10c:	ldr	x0, [x0, #24]
    a110:	mov	x2, x0
    a114:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a118:	add	x1, x0, #0xc98
    a11c:	mov	x0, x3
    a120:	bl	4180 <PyErr_Format@plt>
    a124:	mov	x0, #0x0                   	// #0
    a128:	b	a274 <PySequence_Fast@plt+0x6034>
    a12c:	ldr	x0, [sp, #88]
    a130:	ldr	x0, [x0, #24]
    a134:	cmp	x0, #0x0
    a138:	b.eq	a148 <PySequence_Fast@plt+0x5f08>  // b.none
    a13c:	ldr	x0, [sp, #88]
    a140:	ldr	x0, [x0, #24]
    a144:	b	a150 <PySequence_Fast@plt+0x5f10>
    a148:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a14c:	ldr	x0, [x0, #3976]
    a150:	ldr	x1, [sp, #88]
    a154:	ldr	x1, [x1, #32]
    a158:	cmp	x1, #0x0
    a15c:	b.eq	a16c <PySequence_Fast@plt+0x5f2c>  // b.none
    a160:	ldr	x1, [sp, #88]
    a164:	ldr	x1, [x1, #32]
    a168:	b	a174 <PySequence_Fast@plt+0x5f34>
    a16c:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a170:	ldr	x1, [x1, #3976]
    a174:	mov	x2, x1
    a178:	mov	x1, x0
    a17c:	mov	x0, #0x2                   	// #2
    a180:	bl	4210 <PyTuple_Pack@plt>
    a184:	str	x0, [sp, #80]
    a188:	ldr	x1, [sp, #32]
    a18c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a190:	ldr	x0, [x0, #3976]
    a194:	cmp	x1, x0
    a198:	b.ne	a1d4 <PySequence_Fast@plt+0x5f94>  // b.any
    a19c:	ldr	x0, [sp, #88]
    a1a0:	ldr	x0, [x0, #24]
    a1a4:	str	x0, [sp, #64]
    a1a8:	ldr	x0, [sp, #64]
    a1ac:	cmp	x0, #0x0
    a1b0:	b.eq	a1fc <PySequence_Fast@plt+0x5fbc>  // b.none
    a1b4:	ldr	x0, [sp, #88]
    a1b8:	str	xzr, [x0, #24]
    a1bc:	ldr	x2, [sp, #64]
    a1c0:	mov	w1, #0xa34                 	// #2612
    a1c4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a1c8:	add	x0, x0, #0x808
    a1cc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a1d0:	b	a1fc <PySequence_Fast@plt+0x5fbc>
    a1d4:	ldr	x0, [sp, #32]
    a1d8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    a1dc:	ldr	x0, [sp, #88]
    a1e0:	ldr	x0, [x0, #24]
    a1e4:	str	x0, [sp, #72]
    a1e8:	ldr	x0, [sp, #88]
    a1ec:	ldr	x1, [sp, #32]
    a1f0:	str	x1, [x0, #24]
    a1f4:	ldr	x0, [sp, #72]
    a1f8:	bl	4480 <PySequence_Fast@plt+0x240>
    a1fc:	ldr	x1, [sp, #24]
    a200:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a204:	ldr	x0, [x0, #3976]
    a208:	cmp	x1, x0
    a20c:	b.ne	a248 <PySequence_Fast@plt+0x6008>  // b.any
    a210:	ldr	x0, [sp, #88]
    a214:	ldr	x0, [x0, #32]
    a218:	str	x0, [sp, #48]
    a21c:	ldr	x0, [sp, #48]
    a220:	cmp	x0, #0x0
    a224:	b.eq	a270 <PySequence_Fast@plt+0x6030>  // b.none
    a228:	ldr	x0, [sp, #88]
    a22c:	str	xzr, [x0, #32]
    a230:	ldr	x2, [sp, #48]
    a234:	mov	w1, #0xa3a                 	// #2618
    a238:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a23c:	add	x0, x0, #0x808
    a240:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a244:	b	a270 <PySequence_Fast@plt+0x6030>
    a248:	ldr	x0, [sp, #24]
    a24c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    a250:	ldr	x0, [sp, #88]
    a254:	ldr	x0, [x0, #32]
    a258:	str	x0, [sp, #56]
    a25c:	ldr	x0, [sp, #88]
    a260:	ldr	x1, [sp, #24]
    a264:	str	x1, [x0, #32]
    a268:	ldr	x0, [sp, #56]
    a26c:	bl	4480 <PySequence_Fast@plt+0x240>
    a270:	ldr	x0, [sp, #80]
    a274:	ldp	x29, x30, [sp], #96
    a278:	ret
    a27c:	stp	x29, x30, [sp, #-112]!
    a280:	mov	x29, sp
    a284:	str	x0, [sp, #40]
    a288:	str	x1, [sp, #32]
    a28c:	str	x2, [sp, #24]
    a290:	str	x3, [sp, #16]
    a294:	ldr	x0, [sp, #40]
    a298:	ldr	x1, [x0, #8]
    a29c:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    a2a0:	add	x0, x0, #0x320
    a2a4:	cmp	x1, x0
    a2a8:	b.ne	a3b0 <PySequence_Fast@plt+0x6170>  // b.any
    a2ac:	ldr	x0, [sp, #24]
    a2b0:	ldr	x0, [x0]
    a2b4:	and	x0, x0, #0xfffffffffffffffe
    a2b8:	str	x0, [sp, #96]
    a2bc:	ldr	x1, [sp, #96]
    a2c0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a2c4:	ldr	x0, [x0, #3976]
    a2c8:	cmp	x1, x0
    a2cc:	b.ne	a334 <PySequence_Fast@plt+0x60f4>  // b.any
    a2d0:	ldr	x0, [sp, #32]
    a2d4:	ldr	x0, [x0]
    a2d8:	and	x1, x0, #0xfffffffffffffffe
    a2dc:	ldr	x0, [sp, #32]
    a2e0:	ldr	x0, [x0]
    a2e4:	ldr	x2, [x0, #8]
    a2e8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a2ec:	ldr	x0, [x0, #4064]
    a2f0:	cmp	x2, x0
    a2f4:	cset	w0, eq  // eq = none
    a2f8:	and	w0, w0, #0xff
    a2fc:	and	x0, x0, #0xff
    a300:	orr	x0, x1, x0
    a304:	mov	x1, x0
    a308:	ldr	x0, [sp, #24]
    a30c:	str	x1, [x0]
    a310:	ldr	x0, [sp, #32]
    a314:	str	xzr, [x0]
    a318:	ldr	x2, [sp, #96]
    a31c:	mov	w1, #0xa4d                 	// #2637
    a320:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a324:	add	x0, x0, #0x808
    a328:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a32c:	mov	w0, #0x0                   	// #0
    a330:	b	a500 <PySequence_Fast@plt+0x62c0>
    a334:	ldr	x0, [sp, #24]
    a338:	ldr	x0, [x0]
    a33c:	and	x0, x0, #0x1
    a340:	cmp	x0, #0x0
    a344:	b.eq	a3b0 <PySequence_Fast@plt+0x6170>  // b.none
    a348:	ldr	x0, [sp, #32]
    a34c:	ldr	x0, [x0]
    a350:	mov	x3, x0
    a354:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    a358:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    a35c:	ldr	x0, [sp, #96]
    a360:	bl	3d30 <PyList_SetSlice@plt>
    a364:	cmp	w0, #0x0
    a368:	b.ge	a374 <PySequence_Fast@plt+0x6134>  // b.tcont
    a36c:	mov	w0, #0xffffffff            	// #-1
    a370:	b	a500 <PySequence_Fast@plt+0x62c0>
    a374:	ldr	x0, [sp, #32]
    a378:	ldr	x0, [x0]
    a37c:	str	x0, [sp, #88]
    a380:	ldr	x0, [sp, #88]
    a384:	cmp	x0, #0x0
    a388:	b.eq	a3a8 <PySequence_Fast@plt+0x6168>  // b.none
    a38c:	ldr	x0, [sp, #32]
    a390:	str	xzr, [x0]
    a394:	ldr	x2, [sp, #88]
    a398:	mov	w1, #0xa54                 	// #2644
    a39c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a3a0:	add	x0, x0, #0x808
    a3a4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a3a8:	mov	w0, #0x0                   	// #0
    a3ac:	b	a500 <PySequence_Fast@plt+0x62c0>
    a3b0:	ldr	x1, [sp, #16]
    a3b4:	ldr	x0, [sp, #40]
    a3b8:	bl	40f0 <_PyObject_GetAttrId@plt>
    a3bc:	str	x0, [sp, #80]
    a3c0:	ldr	x0, [sp, #80]
    a3c4:	cmp	x0, #0x0
    a3c8:	b.ne	a3d4 <PySequence_Fast@plt+0x6194>  // b.any
    a3cc:	mov	w0, #0xffffffff            	// #-1
    a3d0:	b	a500 <PySequence_Fast@plt+0x62c0>
    a3d4:	ldr	x0, [sp, #32]
    a3d8:	ldr	x0, [x0]
    a3dc:	bl	4930 <PySequence_Fast@plt+0x6f0>
    a3e0:	str	x0, [sp, #104]
    a3e4:	ldr	x0, [sp, #104]
    a3e8:	cmp	x0, #0x0
    a3ec:	b.ne	a40c <PySequence_Fast@plt+0x61cc>  // b.any
    a3f0:	ldr	x2, [sp, #80]
    a3f4:	mov	w1, #0xa62                 	// #2658
    a3f8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a3fc:	add	x0, x0, #0x808
    a400:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a404:	mov	w0, #0xffffffff            	// #-1
    a408:	b	a500 <PySequence_Fast@plt+0x62c0>
    a40c:	ldr	x1, [sp, #80]
    a410:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a414:	ldr	x0, [x0, #3976]
    a418:	cmp	x1, x0
    a41c:	b.eq	a478 <PySequence_Fast@plt+0x6238>  // b.none
    a420:	ldr	x1, [sp, #104]
    a424:	ldr	x0, [sp, #80]
    a428:	bl	3cf0 <PyNumber_Add@plt>
    a42c:	str	x0, [sp, #72]
    a430:	ldr	x2, [sp, #104]
    a434:	mov	w1, #0xa67                 	// #2663
    a438:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a43c:	add	x0, x0, #0x808
    a440:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a444:	ldr	x2, [sp, #80]
    a448:	mov	w1, #0xa68                 	// #2664
    a44c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a450:	add	x0, x0, #0x808
    a454:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a458:	ldr	x0, [sp, #72]
    a45c:	cmp	x0, #0x0
    a460:	b.ne	a46c <PySequence_Fast@plt+0x622c>  // b.any
    a464:	mov	w0, #0xffffffff            	// #-1
    a468:	b	a500 <PySequence_Fast@plt+0x62c0>
    a46c:	ldr	x0, [sp, #72]
    a470:	str	x0, [sp, #104]
    a474:	b	a48c <PySequence_Fast@plt+0x624c>
    a478:	ldr	x2, [sp, #80]
    a47c:	mov	w1, #0xa6d                 	// #2669
    a480:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a484:	add	x0, x0, #0x808
    a488:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a48c:	ldr	x2, [sp, #104]
    a490:	ldr	x1, [sp, #16]
    a494:	ldr	x0, [sp, #40]
    a498:	bl	4000 <_PyObject_SetAttrId@plt>
    a49c:	str	w0, [sp, #68]
    a4a0:	ldr	x2, [sp, #104]
    a4a4:	mov	w1, #0xa71                 	// #2673
    a4a8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a4ac:	add	x0, x0, #0x808
    a4b0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a4b4:	ldr	w0, [sp, #68]
    a4b8:	cmp	w0, #0x0
    a4bc:	b.ge	a4c8 <PySequence_Fast@plt+0x6288>  // b.tcont
    a4c0:	mov	w0, #0xffffffff            	// #-1
    a4c4:	b	a500 <PySequence_Fast@plt+0x62c0>
    a4c8:	ldr	x0, [sp, #32]
    a4cc:	ldr	x0, [x0]
    a4d0:	str	x0, [sp, #56]
    a4d4:	ldr	x0, [sp, #56]
    a4d8:	cmp	x0, #0x0
    a4dc:	b.eq	a4fc <PySequence_Fast@plt+0x62bc>  // b.none
    a4e0:	ldr	x0, [sp, #32]
    a4e4:	str	xzr, [x0]
    a4e8:	ldr	x2, [sp, #56]
    a4ec:	mov	w1, #0xa74                 	// #2676
    a4f0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a4f4:	add	x0, x0, #0x808
    a4f8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a4fc:	mov	w0, #0x0                   	// #0
    a500:	ldp	x29, x30, [sp], #112
    a504:	ret
    a508:	stp	x29, x30, [sp, #-48]!
    a50c:	mov	x29, sp
    a510:	str	x0, [sp, #24]
    a514:	ldr	x0, [sp, #24]
    a518:	ldr	x0, [x0, #48]
    a51c:	cmp	x0, #0x0
    a520:	b.ne	a52c <PySequence_Fast@plt+0x62ec>  // b.any
    a524:	mov	w0, #0x0                   	// #0
    a528:	b	a598 <PySequence_Fast@plt+0x6358>
    a52c:	ldr	x0, [sp, #24]
    a530:	ldr	x0, [x0, #40]
    a534:	cmp	x0, #0x0
    a538:	b.ne	a56c <PySequence_Fast@plt+0x632c>  // b.any
    a53c:	ldr	x0, [sp, #24]
    a540:	ldr	x0, [x0, #32]
    a544:	str	x0, [sp, #32]
    a548:	ldr	x0, [sp, #24]
    a54c:	add	x1, x0, #0x30
    a550:	ldr	x0, [sp, #32]
    a554:	add	x2, x0, #0x18
    a558:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    a55c:	add	x3, x0, #0x188
    a560:	ldr	x0, [sp, #32]
    a564:	bl	a27c <PySequence_Fast@plt+0x603c>
    a568:	b	a598 <PySequence_Fast@plt+0x6358>
    a56c:	ldr	x0, [sp, #24]
    a570:	ldr	x0, [x0, #40]
    a574:	str	x0, [sp, #40]
    a578:	ldr	x0, [sp, #24]
    a57c:	add	x1, x0, #0x30
    a580:	ldr	x0, [sp, #40]
    a584:	add	x2, x0, #0x20
    a588:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    a58c:	add	x3, x0, #0x1a0
    a590:	ldr	x0, [sp, #40]
    a594:	bl	a27c <PySequence_Fast@plt+0x603c>
    a598:	ldp	x29, x30, [sp], #48
    a59c:	ret
    a5a0:	stp	x29, x30, [sp, #-48]!
    a5a4:	mov	x29, sp
    a5a8:	str	x0, [sp, #24]
    a5ac:	str	x1, [sp, #16]
    a5b0:	ldr	x0, [sp, #24]
    a5b4:	ldr	x1, [x0, #8]
    a5b8:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    a5bc:	add	x0, x0, #0x320
    a5c0:	cmp	x1, x0
    a5c4:	b.ne	a5e0 <PySequence_Fast@plt+0x63a0>  // b.any
    a5c8:	ldr	x0, [sp, #24]
    a5cc:	str	x0, [sp, #32]
    a5d0:	ldr	x1, [sp, #16]
    a5d4:	ldr	x0, [sp, #32]
    a5d8:	bl	5248 <PySequence_Fast@plt+0x1008>
    a5dc:	b	a628 <PySequence_Fast@plt+0x63e8>
    a5e0:	mov	x3, #0x0                   	// #0
    a5e4:	ldr	x2, [sp, #16]
    a5e8:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    a5ec:	add	x1, x0, #0x1b8
    a5f0:	ldr	x0, [sp, #24]
    a5f4:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    a5f8:	str	x0, [sp, #40]
    a5fc:	ldr	x0, [sp, #40]
    a600:	cmp	x0, #0x0
    a604:	b.ne	a610 <PySequence_Fast@plt+0x63d0>  // b.any
    a608:	mov	w0, #0xffffffff            	// #-1
    a60c:	b	a628 <PySequence_Fast@plt+0x63e8>
    a610:	ldr	x2, [sp, #40]
    a614:	mov	w1, #0xa9d                 	// #2717
    a618:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a61c:	add	x0, x0, #0x808
    a620:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a624:	mov	w0, #0x0                   	// #0
    a628:	ldp	x29, x30, [sp], #48
    a62c:	ret
    a630:	stp	x29, x30, [sp, #-64]!
    a634:	mov	x29, sp
    a638:	str	x0, [sp, #40]
    a63c:	str	x1, [sp, #32]
    a640:	str	x2, [sp, #24]
    a644:	ldr	x0, [sp, #32]
    a648:	cmp	x0, #0x0
    a64c:	b.eq	a6d0 <PySequence_Fast@plt+0x6490>  // b.none
    a650:	ldr	x2, [sp, #24]
    a654:	ldr	x1, [sp, #32]
    a658:	mov	x0, #0x2                   	// #2
    a65c:	bl	4210 <PyTuple_Pack@plt>
    a660:	str	x0, [sp, #48]
    a664:	ldr	x0, [sp, #48]
    a668:	cmp	x0, #0x0
    a66c:	b.ne	a678 <PySequence_Fast@plt+0x6438>  // b.any
    a670:	mov	w0, #0xffffffff            	// #-1
    a674:	b	a6d4 <PySequence_Fast@plt+0x6494>
    a678:	ldr	x0, [sp, #40]
    a67c:	ldr	x0, [x0, #96]
    a680:	add	x1, sp, #0x30
    a684:	mov	x2, #0x1                   	// #1
    a688:	bl	45b4 <PySequence_Fast@plt+0x374>
    a68c:	str	x0, [sp, #56]
    a690:	ldr	x0, [sp, #48]
    a694:	mov	x2, x0
    a698:	mov	w1, #0xaac                 	// #2732
    a69c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a6a0:	add	x0, x0, #0x808
    a6a4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a6a8:	ldr	x0, [sp, #56]
    a6ac:	cmp	x0, #0x0
    a6b0:	b.ne	a6bc <PySequence_Fast@plt+0x647c>  // b.any
    a6b4:	mov	w0, #0xffffffff            	// #-1
    a6b8:	b	a6d4 <PySequence_Fast@plt+0x6494>
    a6bc:	ldr	x2, [sp, #56]
    a6c0:	mov	w1, #0xaaf                 	// #2735
    a6c4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a6c8:	add	x0, x0, #0x808
    a6cc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a6d0:	mov	w0, #0x0                   	// #0
    a6d4:	ldp	x29, x30, [sp], #64
    a6d8:	ret
    a6dc:	stp	x29, x30, [sp, #-96]!
    a6e0:	mov	x29, sp
    a6e4:	str	x0, [sp, #40]
    a6e8:	str	x1, [sp, #32]
    a6ec:	str	x2, [sp, #24]
    a6f0:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    a6f4:	add	x0, x0, #0x9b8
    a6f8:	bl	3fc0 <PyState_FindModule@plt>
    a6fc:	bl	3e10 <PyModule_GetState@plt>
    a700:	str	x0, [sp, #80]
    a704:	ldr	x0, [sp, #40]
    a708:	bl	a508 <PySequence_Fast@plt+0x62c8>
    a70c:	cmp	w0, #0x0
    a710:	b.ge	a71c <PySequence_Fast@plt+0x64dc>  // b.tcont
    a714:	mov	x0, #0x0                   	// #0
    a718:	b	a9b8 <PySequence_Fast@plt+0x6778>
    a71c:	ldr	x0, [sp, #40]
    a720:	ldr	x0, [x0, #72]
    a724:	cmp	x0, #0x0
    a728:	b.ne	a740 <PySequence_Fast@plt+0x6500>  // b.any
    a72c:	ldr	x1, [sp, #24]
    a730:	ldr	x0, [sp, #32]
    a734:	bl	4b94 <PySequence_Fast@plt+0x954>
    a738:	str	x0, [sp, #88]
    a73c:	b	a7c0 <PySequence_Fast@plt+0x6580>
    a740:	ldr	x1, [sp, #24]
    a744:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a748:	ldr	x0, [x0, #3976]
    a74c:	cmp	x1, x0
    a750:	b.ne	a7a4 <PySequence_Fast@plt+0x6564>  // b.any
    a754:	bl	4080 <PyDict_New@plt>
    a758:	str	x0, [sp, #24]
    a75c:	ldr	x0, [sp, #24]
    a760:	cmp	x0, #0x0
    a764:	b.ne	a770 <PySequence_Fast@plt+0x6530>  // b.any
    a768:	mov	x0, #0x0                   	// #0
    a76c:	b	a9b8 <PySequence_Fast@plt+0x6778>
    a770:	ldr	x0, [sp, #40]
    a774:	ldr	x0, [x0, #72]
    a778:	mov	x3, #0x0                   	// #0
    a77c:	ldr	x2, [sp, #24]
    a780:	ldr	x1, [sp, #32]
    a784:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    a788:	str	x0, [sp, #88]
    a78c:	ldr	x2, [sp, #24]
    a790:	mov	w1, #0xacb                 	// #2763
    a794:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a798:	add	x0, x0, #0x808
    a79c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a7a0:	b	a7c0 <PySequence_Fast@plt+0x6580>
    a7a4:	ldr	x0, [sp, #40]
    a7a8:	ldr	x0, [x0, #72]
    a7ac:	mov	x3, #0x0                   	// #0
    a7b0:	ldr	x2, [sp, #24]
    a7b4:	ldr	x1, [sp, #32]
    a7b8:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    a7bc:	str	x0, [sp, #88]
    a7c0:	ldr	x0, [sp, #88]
    a7c4:	cmp	x0, #0x0
    a7c8:	b.ne	a7d4 <PySequence_Fast@plt+0x6594>  // b.any
    a7cc:	mov	x0, #0x0                   	// #0
    a7d0:	b	a9b8 <PySequence_Fast@plt+0x6778>
    a7d4:	ldr	x0, [sp, #40]
    a7d8:	ldr	x0, [x0, #24]
    a7dc:	str	x0, [sp, #72]
    a7e0:	ldr	x0, [sp, #40]
    a7e4:	ldr	x0, [x0, #40]
    a7e8:	str	x0, [sp, #64]
    a7ec:	ldr	x0, [sp, #64]
    a7f0:	cmp	x0, #0x0
    a7f4:	b.eq	a814 <PySequence_Fast@plt+0x65d4>  // b.none
    a7f8:	ldr	x0, [sp, #40]
    a7fc:	str	xzr, [x0, #40]
    a800:	ldr	x2, [sp, #64]
    a804:	mov	w1, #0xad6                 	// #2774
    a808:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a80c:	add	x0, x0, #0x808
    a810:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a814:	ldr	x1, [sp, #72]
    a818:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a81c:	ldr	x0, [x0, #3976]
    a820:	cmp	x1, x0
    a824:	b.eq	a840 <PySequence_Fast@plt+0x6600>  // b.none
    a828:	ldr	x1, [sp, #88]
    a82c:	ldr	x0, [sp, #72]
    a830:	bl	a5a0 <PySequence_Fast@plt+0x6360>
    a834:	cmp	w0, #0x0
    a838:	b.ge	a880 <PySequence_Fast@plt+0x6640>  // b.tcont
    a83c:	b	a9a0 <PySequence_Fast@plt+0x6760>
    a840:	ldr	x0, [sp, #40]
    a844:	ldr	x0, [x0, #16]
    a848:	cmp	x0, #0x0
    a84c:	b.eq	a86c <PySequence_Fast@plt+0x662c>  // b.none
    a850:	ldr	x0, [sp, #80]
    a854:	ldr	x2, [x0]
    a858:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a85c:	add	x1, x0, #0xcc0
    a860:	mov	x0, x2
    a864:	bl	3de0 <PyErr_SetString@plt>
    a868:	b	a9a0 <PySequence_Fast@plt+0x6760>
    a86c:	ldr	x0, [sp, #88]
    a870:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    a874:	ldr	x0, [sp, #40]
    a878:	ldr	x1, [sp, #88]
    a87c:	str	x1, [x0, #16]
    a880:	ldr	x0, [sp, #40]
    a884:	ldr	x1, [x0, #64]
    a888:	ldr	x0, [sp, #40]
    a88c:	ldr	x0, [x0, #56]
    a890:	ldr	x0, [x0, #16]
    a894:	cmp	x1, x0
    a898:	b.ge	a8d0 <PySequence_Fast@plt+0x6690>  // b.tcont
    a89c:	ldr	x0, [sp, #40]
    a8a0:	ldr	x3, [x0, #56]
    a8a4:	ldr	x0, [sp, #40]
    a8a8:	ldr	x0, [x0, #64]
    a8ac:	ldr	x2, [sp, #72]
    a8b0:	mov	x1, x0
    a8b4:	mov	x0, x3
    a8b8:	bl	3fb0 <PyList_SetItem@plt>
    a8bc:	cmp	w0, #0x0
    a8c0:	b.lt	a98c <PySequence_Fast@plt+0x674c>  // b.tstop
    a8c4:	ldr	x0, [sp, #72]
    a8c8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    a8cc:	b	a8e8 <PySequence_Fast@plt+0x66a8>
    a8d0:	ldr	x0, [sp, #40]
    a8d4:	ldr	x0, [x0, #56]
    a8d8:	ldr	x1, [sp, #72]
    a8dc:	bl	3f00 <PyList_Append@plt>
    a8e0:	cmp	w0, #0x0
    a8e4:	b.lt	a994 <PySequence_Fast@plt+0x6754>  // b.tstop
    a8e8:	ldr	x0, [sp, #40]
    a8ec:	ldr	x0, [x0, #64]
    a8f0:	add	x1, x0, #0x1
    a8f4:	ldr	x0, [sp, #40]
    a8f8:	str	x1, [x0, #64]
    a8fc:	ldr	x0, [sp, #88]
    a900:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    a904:	ldr	x0, [sp, #40]
    a908:	ldr	x0, [x0, #24]
    a90c:	str	x0, [sp, #56]
    a910:	ldr	x0, [sp, #40]
    a914:	ldr	x1, [sp, #88]
    a918:	str	x1, [x0, #24]
    a91c:	ldr	x2, [sp, #56]
    a920:	mov	w1, #0xaf2                 	// #2802
    a924:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a928:	add	x0, x0, #0x808
    a92c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a930:	ldr	x0, [sp, #88]
    a934:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    a938:	ldr	x0, [sp, #40]
    a93c:	ldr	x0, [x0, #32]
    a940:	str	x0, [sp, #48]
    a944:	ldr	x0, [sp, #40]
    a948:	ldr	x1, [sp, #88]
    a94c:	str	x1, [x0, #32]
    a950:	ldr	x2, [sp, #48]
    a954:	mov	w1, #0xaf4                 	// #2804
    a958:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a95c:	add	x0, x0, #0x808
    a960:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a964:	ldr	x0, [sp, #40]
    a968:	ldr	x0, [x0, #104]
    a96c:	ldr	x2, [sp, #88]
    a970:	mov	x1, x0
    a974:	ldr	x0, [sp, #40]
    a978:	bl	a630 <PySequence_Fast@plt+0x63f0>
    a97c:	cmp	w0, #0x0
    a980:	b.lt	a99c <PySequence_Fast@plt+0x675c>  // b.tstop
    a984:	ldr	x0, [sp, #88]
    a988:	b	a9b8 <PySequence_Fast@plt+0x6778>
    a98c:	nop
    a990:	b	a9a0 <PySequence_Fast@plt+0x6760>
    a994:	nop
    a998:	b	a9a0 <PySequence_Fast@plt+0x6760>
    a99c:	nop
    a9a0:	ldr	x2, [sp, #88]
    a9a4:	mov	w1, #0xafc                 	// #2812
    a9a8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    a9ac:	add	x0, x0, #0x808
    a9b0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    a9b4:	mov	x0, #0x0                   	// #0
    a9b8:	ldp	x29, x30, [sp], #96
    a9bc:	ret
    a9c0:	stp	x29, x30, [sp, #-48]!
    a9c4:	mov	x29, sp
    a9c8:	str	x0, [sp, #24]
    a9cc:	str	x1, [sp, #16]
    a9d0:	ldr	x0, [sp, #24]
    a9d4:	ldr	x0, [x0, #48]
    a9d8:	cmp	x0, #0x0
    a9dc:	b.ne	aa28 <PySequence_Fast@plt+0x67e8>  // b.any
    a9e0:	ldr	x0, [sp, #24]
    a9e4:	ldr	x1, [x0, #32]
    a9e8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a9ec:	ldr	x0, [x0, #3976]
    a9f0:	cmp	x1, x0
    a9f4:	b.ne	aa10 <PySequence_Fast@plt+0x67d0>  // b.any
    a9f8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    a9fc:	ldr	x0, [x0, #3976]
    aa00:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    aa04:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    aa08:	ldr	x0, [x0, #3976]
    aa0c:	b	ab8c <PySequence_Fast@plt+0x694c>
    aa10:	ldr	x0, [sp, #16]
    aa14:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    aa18:	ldr	x0, [sp, #24]
    aa1c:	ldr	x1, [sp, #16]
    aa20:	str	x1, [x0, #48]
    aa24:	b	ab78 <PySequence_Fast@plt+0x6938>
    aa28:	ldr	x0, [sp, #24]
    aa2c:	ldr	x0, [x0, #48]
    aa30:	ldr	x1, [x0, #8]
    aa34:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    aa38:	ldr	x0, [x0, #3912]
    aa3c:	cmp	x1, x0
    aa40:	b.ne	aae0 <PySequence_Fast@plt+0x68a0>  // b.any
    aa44:	ldr	x0, [sp, #24]
    aa48:	ldr	x0, [x0, #48]
    aa4c:	ldr	x0, [x0]
    aa50:	cmp	x0, #0x1
    aa54:	b.ne	aae0 <PySequence_Fast@plt+0x68a0>  // b.any
    aa58:	ldr	x0, [sp, #16]
    aa5c:	ldr	x1, [x0, #8]
    aa60:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    aa64:	ldr	x0, [x0, #3912]
    aa68:	cmp	x1, x0
    aa6c:	b.ne	aae0 <PySequence_Fast@plt+0x68a0>  // b.any
    aa70:	ldr	x0, [sp, #16]
    aa74:	ldr	x0, [x0, #16]
    aa78:	cmp	x0, #0x1
    aa7c:	b.ne	aae0 <PySequence_Fast@plt+0x68a0>  // b.any
    aa80:	ldr	x0, [sp, #24]
    aa84:	ldr	x0, [x0, #48]
    aa88:	ldr	x0, [x0, #16]
    aa8c:	str	x0, [sp, #40]
    aa90:	ldr	x0, [sp, #24]
    aa94:	add	x2, x0, #0x30
    aa98:	ldr	x0, [sp, #40]
    aa9c:	add	x0, x0, #0x1
    aaa0:	mov	x1, x0
    aaa4:	mov	x0, x2
    aaa8:	bl	3ca0 <_PyBytes_Resize@plt>
    aaac:	cmp	w0, #0x0
    aab0:	b.ge	aabc <PySequence_Fast@plt+0x687c>  // b.tcont
    aab4:	mov	x0, #0x0                   	// #0
    aab8:	b	ab8c <PySequence_Fast@plt+0x694c>
    aabc:	ldr	x0, [sp, #24]
    aac0:	ldr	x0, [x0, #48]
    aac4:	add	x1, x0, #0x20
    aac8:	ldr	x0, [sp, #40]
    aacc:	add	x0, x1, x0
    aad0:	ldr	x1, [sp, #16]
    aad4:	ldrb	w1, [x1, #32]
    aad8:	strb	w1, [x0]
    aadc:	b	ab78 <PySequence_Fast@plt+0x6938>
    aae0:	ldr	x0, [sp, #24]
    aae4:	ldr	x0, [x0, #48]
    aae8:	ldr	x1, [x0, #8]
    aaec:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    aaf0:	ldr	x0, [x0, #4064]
    aaf4:	cmp	x1, x0
    aaf8:	b.ne	ab1c <PySequence_Fast@plt+0x68dc>  // b.any
    aafc:	ldr	x0, [sp, #24]
    ab00:	ldr	x0, [x0, #48]
    ab04:	ldr	x1, [sp, #16]
    ab08:	bl	3f00 <PyList_Append@plt>
    ab0c:	cmp	w0, #0x0
    ab10:	b.ge	ab78 <PySequence_Fast@plt+0x6938>  // b.tcont
    ab14:	mov	x0, #0x0                   	// #0
    ab18:	b	ab8c <PySequence_Fast@plt+0x694c>
    ab1c:	mov	x0, #0x2                   	// #2
    ab20:	bl	3c50 <PyList_New@plt>
    ab24:	str	x0, [sp, #32]
    ab28:	ldr	x0, [sp, #32]
    ab2c:	cmp	x0, #0x0
    ab30:	b.ne	ab3c <PySequence_Fast@plt+0x68fc>  // b.any
    ab34:	mov	x0, #0x0                   	// #0
    ab38:	b	ab8c <PySequence_Fast@plt+0x694c>
    ab3c:	ldr	x0, [sp, #32]
    ab40:	ldr	x0, [x0, #24]
    ab44:	ldr	x1, [sp, #24]
    ab48:	ldr	x1, [x1, #48]
    ab4c:	str	x1, [x0]
    ab50:	ldr	x0, [sp, #16]
    ab54:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    ab58:	ldr	x0, [sp, #32]
    ab5c:	ldr	x0, [x0, #24]
    ab60:	add	x0, x0, #0x8
    ab64:	ldr	x1, [sp, #16]
    ab68:	str	x1, [x0]
    ab6c:	ldr	x0, [sp, #24]
    ab70:	ldr	x1, [sp, #32]
    ab74:	str	x1, [x0, #48]
    ab78:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ab7c:	ldr	x0, [x0, #3976]
    ab80:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    ab84:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ab88:	ldr	x0, [x0, #3976]
    ab8c:	ldp	x29, x30, [sp], #48
    ab90:	ret
    ab94:	stp	x29, x30, [sp, #-48]!
    ab98:	mov	x29, sp
    ab9c:	str	x0, [sp, #24]
    aba0:	str	x1, [sp, #16]
    aba4:	ldr	x0, [sp, #24]
    aba8:	bl	a508 <PySequence_Fast@plt+0x62c8>
    abac:	cmp	w0, #0x0
    abb0:	b.ge	abbc <PySequence_Fast@plt+0x697c>  // b.tcont
    abb4:	mov	x0, #0x0                   	// #0
    abb8:	b	acd8 <PySequence_Fast@plt+0x6a98>
    abbc:	ldr	x0, [sp, #24]
    abc0:	ldr	x0, [x0, #64]
    abc4:	cmp	x0, #0x0
    abc8:	b.ne	abf0 <PySequence_Fast@plt+0x69b0>  // b.any
    abcc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    abd0:	ldr	x0, [x0, #3984]
    abd4:	ldr	x2, [x0]
    abd8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    abdc:	add	x1, x0, #0xce0
    abe0:	mov	x0, x2
    abe4:	bl	3de0 <PyErr_SetString@plt>
    abe8:	mov	x0, #0x0                   	// #0
    abec:	b	acd8 <PySequence_Fast@plt+0x6a98>
    abf0:	ldr	x0, [sp, #24]
    abf4:	ldr	x0, [x0, #32]
    abf8:	str	x0, [sp, #40]
    abfc:	ldr	x0, [sp, #24]
    ac00:	ldr	x1, [x0, #24]
    ac04:	ldr	x0, [sp, #24]
    ac08:	str	x1, [x0, #32]
    ac0c:	ldr	x0, [sp, #24]
    ac10:	ldr	x0, [x0, #32]
    ac14:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    ac18:	ldr	x0, [sp, #24]
    ac1c:	ldr	x0, [x0, #40]
    ac20:	str	x0, [sp, #32]
    ac24:	ldr	x0, [sp, #24]
    ac28:	ldr	x1, [x0, #32]
    ac2c:	ldr	x0, [sp, #24]
    ac30:	str	x1, [x0, #40]
    ac34:	ldr	x0, [sp, #32]
    ac38:	bl	4480 <PySequence_Fast@plt+0x240>
    ac3c:	ldr	x0, [sp, #24]
    ac40:	ldr	x0, [x0, #64]
    ac44:	sub	x1, x0, #0x1
    ac48:	ldr	x0, [sp, #24]
    ac4c:	str	x1, [x0, #64]
    ac50:	ldr	x0, [sp, #24]
    ac54:	ldr	x0, [x0, #56]
    ac58:	ldr	x1, [x0, #24]
    ac5c:	ldr	x0, [sp, #24]
    ac60:	ldr	x0, [x0, #64]
    ac64:	lsl	x0, x0, #3
    ac68:	add	x0, x1, x0
    ac6c:	ldr	x1, [x0]
    ac70:	ldr	x0, [sp, #24]
    ac74:	str	x1, [x0, #24]
    ac78:	ldr	x0, [sp, #24]
    ac7c:	ldr	x0, [x0, #24]
    ac80:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    ac84:	ldr	x2, [sp, #40]
    ac88:	mov	w1, #0xb3d                 	// #2877
    ac8c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    ac90:	add	x0, x0, #0x808
    ac94:	bl	4408 <PySequence_Fast@plt+0x1c8>
    ac98:	ldr	x0, [sp, #24]
    ac9c:	ldr	x1, [x0, #112]
    aca0:	ldr	x0, [sp, #24]
    aca4:	ldr	x0, [x0, #32]
    aca8:	mov	x2, x0
    acac:	ldr	x0, [sp, #24]
    acb0:	bl	a630 <PySequence_Fast@plt+0x63f0>
    acb4:	cmp	w0, #0x0
    acb8:	b.ge	acc4 <PySequence_Fast@plt+0x6a84>  // b.tcont
    acbc:	mov	x0, #0x0                   	// #0
    acc0:	b	acd8 <PySequence_Fast@plt+0x6a98>
    acc4:	ldr	x0, [sp, #24]
    acc8:	ldr	x0, [x0, #32]
    accc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    acd0:	ldr	x0, [sp, #24]
    acd4:	ldr	x0, [x0, #32]
    acd8:	ldp	x29, x30, [sp], #48
    acdc:	ret
    ace0:	stp	x29, x30, [sp, #-64]!
    ace4:	mov	x29, sp
    ace8:	str	x0, [sp, #24]
    acec:	str	x1, [sp, #16]
    acf0:	ldr	x0, [sp, #24]
    acf4:	bl	a508 <PySequence_Fast@plt+0x62c8>
    acf8:	cmp	w0, #0x0
    acfc:	b.ge	ad08 <PySequence_Fast@plt+0x6ac8>  // b.tcont
    ad00:	mov	x0, #0x0                   	// #0
    ad04:	b	ae30 <PySequence_Fast@plt+0x6bf0>
    ad08:	ldr	x0, [sp, #24]
    ad0c:	ldr	x0, [x0, #80]
    ad10:	cmp	x0, #0x0
    ad14:	b.eq	adb4 <PySequence_Fast@plt+0x6b74>  // b.none
    ad18:	ldr	x0, [sp, #24]
    ad1c:	ldr	x0, [x0, #80]
    ad20:	add	x1, sp, #0x10
    ad24:	mov	x2, #0x1                   	// #1
    ad28:	bl	45b4 <PySequence_Fast@plt+0x374>
    ad2c:	str	x0, [sp, #56]
    ad30:	ldr	x0, [sp, #56]
    ad34:	cmp	x0, #0x0
    ad38:	b.ne	ad44 <PySequence_Fast@plt+0x6b04>  // b.any
    ad3c:	mov	x0, #0x0                   	// #0
    ad40:	b	ae30 <PySequence_Fast@plt+0x6bf0>
    ad44:	ldr	x0, [sp, #24]
    ad48:	ldr	x0, [x0, #24]
    ad4c:	str	x0, [sp, #48]
    ad50:	ldr	x0, [sp, #24]
    ad54:	ldrb	w0, [x0, #152]
    ad58:	cmp	w0, #0x0
    ad5c:	b.eq	adc4 <PySequence_Fast@plt+0x6b84>  // b.none
    ad60:	ldr	x1, [sp, #48]
    ad64:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ad68:	ldr	x0, [x0, #3976]
    ad6c:	cmp	x1, x0
    ad70:	b.eq	adc4 <PySequence_Fast@plt+0x6b84>  // b.none
    ad74:	ldr	x1, [sp, #56]
    ad78:	ldr	x0, [sp, #48]
    ad7c:	bl	a5a0 <PySequence_Fast@plt+0x6360>
    ad80:	cmp	w0, #0x0
    ad84:	b.lt	ae0c <PySequence_Fast@plt+0x6bcc>  // b.tstop
    ad88:	ldr	x0, [sp, #56]
    ad8c:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    ad90:	ldr	x0, [sp, #24]
    ad94:	ldr	x0, [x0, #40]
    ad98:	str	x0, [sp, #40]
    ad9c:	ldr	x0, [sp, #24]
    ada0:	ldr	x1, [sp, #56]
    ada4:	str	x1, [x0, #40]
    ada8:	ldr	x0, [sp, #40]
    adac:	bl	4480 <PySequence_Fast@plt+0x240>
    adb0:	b	adc4 <PySequence_Fast@plt+0x6b84>
    adb4:	ldr	x0, [sp, #16]
    adb8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    adbc:	ldr	x0, [sp, #16]
    adc0:	str	x0, [sp, #56]
    adc4:	ldr	x0, [sp, #24]
    adc8:	ldr	x0, [x0, #96]
    adcc:	cmp	x0, #0x0
    add0:	b.eq	ae04 <PySequence_Fast@plt+0x6bc4>  // b.none
    add4:	ldr	x0, [sp, #24]
    add8:	ldr	x0, [x0, #136]
    addc:	cmp	x0, #0x0
    ade0:	b.eq	ae04 <PySequence_Fast@plt+0x6bc4>  // b.none
    ade4:	ldr	x0, [sp, #24]
    ade8:	ldr	x0, [x0, #136]
    adec:	ldr	x2, [sp, #56]
    adf0:	mov	x1, x0
    adf4:	ldr	x0, [sp, #24]
    adf8:	bl	a630 <PySequence_Fast@plt+0x63f0>
    adfc:	cmp	w0, #0x0
    ae00:	b.lt	ae14 <PySequence_Fast@plt+0x6bd4>  // b.tstop
    ae04:	ldr	x0, [sp, #56]
    ae08:	b	ae30 <PySequence_Fast@plt+0x6bf0>
    ae0c:	nop
    ae10:	b	ae18 <PySequence_Fast@plt+0x6bd8>
    ae14:	nop
    ae18:	ldr	x2, [sp, #56]
    ae1c:	mov	w1, #0xb69                 	// #2921
    ae20:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    ae24:	add	x0, x0, #0x808
    ae28:	bl	4408 <PySequence_Fast@plt+0x1c8>
    ae2c:	mov	x0, #0x0                   	// #0
    ae30:	ldp	x29, x30, [sp], #64
    ae34:	ret
    ae38:	stp	x29, x30, [sp, #-96]!
    ae3c:	mov	x29, sp
    ae40:	str	x0, [sp, #40]
    ae44:	str	x1, [sp, #32]
    ae48:	str	x2, [sp, #24]
    ae4c:	ldr	x0, [sp, #32]
    ae50:	str	x0, [sp, #56]
    ae54:	ldr	x0, [sp, #24]
    ae58:	str	x0, [sp, #64]
    ae5c:	ldr	x0, [sp, #40]
    ae60:	bl	a508 <PySequence_Fast@plt+0x62c8>
    ae64:	cmp	w0, #0x0
    ae68:	b.ge	ae74 <PySequence_Fast@plt+0x6c34>  // b.tcont
    ae6c:	mov	x0, #0x0                   	// #0
    ae70:	b	afb4 <PySequence_Fast@plt+0x6d74>
    ae74:	ldr	x0, [sp, #40]
    ae78:	ldr	x0, [x0, #88]
    ae7c:	cmp	x0, #0x0
    ae80:	b.eq	af20 <PySequence_Fast@plt+0x6ce0>  // b.none
    ae84:	ldr	x0, [sp, #40]
    ae88:	ldr	x0, [x0, #88]
    ae8c:	add	x1, sp, #0x38
    ae90:	mov	x2, #0x2                   	// #2
    ae94:	bl	45b4 <PySequence_Fast@plt+0x374>
    ae98:	str	x0, [sp, #88]
    ae9c:	ldr	x0, [sp, #88]
    aea0:	cmp	x0, #0x0
    aea4:	b.ne	aeb0 <PySequence_Fast@plt+0x6c70>  // b.any
    aea8:	mov	x0, #0x0                   	// #0
    aeac:	b	afb4 <PySequence_Fast@plt+0x6d74>
    aeb0:	ldr	x0, [sp, #40]
    aeb4:	ldr	x0, [x0, #24]
    aeb8:	str	x0, [sp, #80]
    aebc:	ldr	x0, [sp, #40]
    aec0:	ldrb	w0, [x0, #153]
    aec4:	cmp	w0, #0x0
    aec8:	b.eq	af48 <PySequence_Fast@plt+0x6d08>  // b.none
    aecc:	ldr	x1, [sp, #80]
    aed0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    aed4:	ldr	x0, [x0, #3976]
    aed8:	cmp	x1, x0
    aedc:	b.eq	af48 <PySequence_Fast@plt+0x6d08>  // b.none
    aee0:	ldr	x1, [sp, #88]
    aee4:	ldr	x0, [sp, #80]
    aee8:	bl	a5a0 <PySequence_Fast@plt+0x6360>
    aeec:	cmp	w0, #0x0
    aef0:	b.lt	af90 <PySequence_Fast@plt+0x6d50>  // b.tstop
    aef4:	ldr	x0, [sp, #88]
    aef8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    aefc:	ldr	x0, [sp, #40]
    af00:	ldr	x0, [x0, #40]
    af04:	str	x0, [sp, #72]
    af08:	ldr	x0, [sp, #40]
    af0c:	ldr	x1, [sp, #88]
    af10:	str	x1, [x0, #40]
    af14:	ldr	x0, [sp, #72]
    af18:	bl	4480 <PySequence_Fast@plt+0x240>
    af1c:	b	af48 <PySequence_Fast@plt+0x6d08>
    af20:	ldr	x2, [sp, #24]
    af24:	ldr	x1, [sp, #32]
    af28:	mov	x0, #0x2                   	// #2
    af2c:	bl	4210 <PyTuple_Pack@plt>
    af30:	str	x0, [sp, #88]
    af34:	ldr	x0, [sp, #88]
    af38:	cmp	x0, #0x0
    af3c:	b.ne	af48 <PySequence_Fast@plt+0x6d08>  // b.any
    af40:	mov	x0, #0x0                   	// #0
    af44:	b	afb4 <PySequence_Fast@plt+0x6d74>
    af48:	ldr	x0, [sp, #40]
    af4c:	ldr	x0, [x0, #96]
    af50:	cmp	x0, #0x0
    af54:	b.eq	af88 <PySequence_Fast@plt+0x6d48>  // b.none
    af58:	ldr	x0, [sp, #40]
    af5c:	ldr	x0, [x0, #144]
    af60:	cmp	x0, #0x0
    af64:	b.eq	af88 <PySequence_Fast@plt+0x6d48>  // b.none
    af68:	ldr	x0, [sp, #40]
    af6c:	ldr	x0, [x0, #144]
    af70:	ldr	x2, [sp, #88]
    af74:	mov	x1, x0
    af78:	ldr	x0, [sp, #40]
    af7c:	bl	a630 <PySequence_Fast@plt+0x63f0>
    af80:	cmp	w0, #0x0
    af84:	b.lt	af98 <PySequence_Fast@plt+0x6d58>  // b.tstop
    af88:	ldr	x0, [sp, #88]
    af8c:	b	afb4 <PySequence_Fast@plt+0x6d74>
    af90:	nop
    af94:	b	af9c <PySequence_Fast@plt+0x6d5c>
    af98:	nop
    af9c:	ldr	x2, [sp, #88]
    afa0:	mov	w1, #0xb94                 	// #2964
    afa4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    afa8:	add	x0, x0, #0x808
    afac:	bl	4408 <PySequence_Fast@plt+0x1c8>
    afb0:	mov	x0, #0x0                   	// #0
    afb4:	ldp	x29, x30, [sp], #96
    afb8:	ret
    afbc:	stp	x29, x30, [sp, #-64]!
    afc0:	mov	x29, sp
    afc4:	str	x0, [sp, #40]
    afc8:	str	x1, [sp, #32]
    afcc:	str	x2, [sp, #24]
    afd0:	ldr	x0, [sp, #40]
    afd4:	ldr	x0, [x0, #96]
    afd8:	cmp	x0, #0x0
    afdc:	b.eq	b068 <PySequence_Fast@plt+0x6e28>  // b.none
    afe0:	ldr	x0, [sp, #40]
    afe4:	ldr	x0, [x0, #120]
    afe8:	cmp	x0, #0x0
    afec:	b.eq	b068 <PySequence_Fast@plt+0x6e28>  // b.none
    aff0:	ldr	x2, [sp, #24]
    aff4:	ldr	x1, [sp, #32]
    aff8:	mov	x0, #0x2                   	// #2
    affc:	bl	4210 <PyTuple_Pack@plt>
    b000:	str	x0, [sp, #56]
    b004:	ldr	x0, [sp, #56]
    b008:	cmp	x0, #0x0
    b00c:	b.ne	b018 <PySequence_Fast@plt+0x6dd8>  // b.any
    b010:	mov	x0, #0x0                   	// #0
    b014:	b	b07c <PySequence_Fast@plt+0x6e3c>
    b018:	ldr	x0, [sp, #40]
    b01c:	ldr	x0, [x0, #120]
    b020:	ldr	x2, [sp, #56]
    b024:	mov	x1, x0
    b028:	ldr	x0, [sp, #40]
    b02c:	bl	a630 <PySequence_Fast@plt+0x63f0>
    b030:	cmp	w0, #0x0
    b034:	b.ge	b054 <PySequence_Fast@plt+0x6e14>  // b.tcont
    b038:	ldr	x2, [sp, #56]
    b03c:	mov	w1, #0xba4                 	// #2980
    b040:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b044:	add	x0, x0, #0x808
    b048:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b04c:	mov	x0, #0x0                   	// #0
    b050:	b	b07c <PySequence_Fast@plt+0x6e3c>
    b054:	ldr	x2, [sp, #56]
    b058:	mov	w1, #0xba7                 	// #2983
    b05c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b060:	add	x0, x0, #0x808
    b064:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b068:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    b06c:	ldr	x0, [x0, #3976]
    b070:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    b074:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    b078:	ldr	x0, [x0, #3976]
    b07c:	ldp	x29, x30, [sp], #64
    b080:	ret
    b084:	stp	x29, x30, [sp, #-32]!
    b088:	mov	x29, sp
    b08c:	str	x0, [sp, #24]
    b090:	str	x1, [sp, #16]
    b094:	ldr	x0, [sp, #24]
    b098:	ldr	x0, [x0, #96]
    b09c:	cmp	x0, #0x0
    b0a0:	b.eq	b0dc <PySequence_Fast@plt+0x6e9c>  // b.none
    b0a4:	ldr	x0, [sp, #24]
    b0a8:	ldr	x0, [x0, #128]
    b0ac:	cmp	x0, #0x0
    b0b0:	b.eq	b0dc <PySequence_Fast@plt+0x6e9c>  // b.none
    b0b4:	ldr	x0, [sp, #24]
    b0b8:	ldr	x0, [x0, #128]
    b0bc:	ldr	x2, [sp, #16]
    b0c0:	mov	x1, x0
    b0c4:	ldr	x0, [sp, #24]
    b0c8:	bl	a630 <PySequence_Fast@plt+0x63f0>
    b0cc:	cmp	w0, #0x0
    b0d0:	b.ge	b0dc <PySequence_Fast@plt+0x6e9c>  // b.tcont
    b0d4:	mov	x0, #0x0                   	// #0
    b0d8:	b	b0f0 <PySequence_Fast@plt+0x6eb0>
    b0dc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    b0e0:	ldr	x0, [x0, #3976]
    b0e4:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    b0e8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    b0ec:	ldr	x0, [x0, #3976]
    b0f0:	ldp	x29, x30, [sp], #32
    b0f4:	ret
    b0f8:	stp	x29, x30, [sp, #-32]!
    b0fc:	mov	x29, sp
    b100:	str	x0, [sp, #24]
    b104:	str	x1, [sp, #16]
    b108:	ldr	x1, [sp, #16]
    b10c:	ldr	x0, [sp, #24]
    b110:	bl	a9c0 <PySequence_Fast@plt+0x6780>
    b114:	ldp	x29, x30, [sp], #32
    b118:	ret
    b11c:	stp	x29, x30, [sp, #-32]!
    b120:	mov	x29, sp
    b124:	str	x0, [sp, #24]
    b128:	str	x1, [sp, #16]
    b12c:	ldr	x1, [sp, #16]
    b130:	ldr	x0, [sp, #24]
    b134:	bl	ab94 <PySequence_Fast@plt+0x6954>
    b138:	ldp	x29, x30, [sp], #32
    b13c:	ret
    b140:	stp	x29, x30, [sp, #-32]!
    b144:	mov	x29, sp
    b148:	str	x0, [sp, #24]
    b14c:	str	x1, [sp, #16]
    b150:	ldr	x1, [sp, #16]
    b154:	ldr	x0, [sp, #24]
    b158:	bl	ace0 <PySequence_Fast@plt+0x6aa0>
    b15c:	ldp	x29, x30, [sp], #32
    b160:	ret
    b164:	stp	x29, x30, [sp, #-48]!
    b168:	mov	x29, sp
    b16c:	str	x0, [sp, #40]
    b170:	str	x1, [sp, #32]
    b174:	str	x2, [sp, #24]
    b178:	ldr	x2, [sp, #24]
    b17c:	ldr	x1, [sp, #32]
    b180:	ldr	x0, [sp, #40]
    b184:	bl	ae38 <PySequence_Fast@plt+0x6bf8>
    b188:	ldp	x29, x30, [sp], #48
    b18c:	ret
    b190:	stp	x29, x30, [sp, #-48]!
    b194:	mov	x29, sp
    b198:	str	x0, [sp, #24]
    b19c:	ldr	x0, [sp, #24]
    b1a0:	ldr	x0, [x0, #16]
    b1a4:	cmp	x0, #0x0
    b1a8:	b.eq	b1bc <PySequence_Fast@plt+0x6f7c>  // b.none
    b1ac:	ldr	x0, [sp, #24]
    b1b0:	ldr	x0, [x0, #16]
    b1b4:	str	x0, [sp, #40]
    b1b8:	b	b1c8 <PySequence_Fast@plt+0x6f88>
    b1bc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    b1c0:	ldr	x0, [x0, #3976]
    b1c4:	str	x0, [sp, #40]
    b1c8:	ldr	x0, [sp, #40]
    b1cc:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    b1d0:	ldr	x0, [sp, #40]
    b1d4:	ldp	x29, x30, [sp], #48
    b1d8:	ret
    b1dc:	stp	x29, x30, [sp, #-32]!
    b1e0:	mov	x29, sp
    b1e4:	str	x0, [sp, #24]
    b1e8:	ldr	x0, [sp, #24]
    b1ec:	bl	b190 <PySequence_Fast@plt+0x6f50>
    b1f0:	ldp	x29, x30, [sp], #32
    b1f4:	ret
    b1f8:	stp	x29, x30, [sp, #-48]!
    b1fc:	mov	x29, sp
    b200:	str	x0, [sp, #40]
    b204:	str	x1, [sp, #32]
    b208:	str	x2, [sp, #24]
    b20c:	ldr	x2, [sp, #24]
    b210:	ldr	x1, [sp, #32]
    b214:	ldr	x0, [sp, #40]
    b218:	bl	a6dc <PySequence_Fast@plt+0x649c>
    b21c:	ldp	x29, x30, [sp], #48
    b220:	ret
    b224:	stp	x29, x30, [sp, #-80]!
    b228:	mov	x29, sp
    b22c:	str	x0, [sp, #24]
    b230:	str	x1, [sp, #16]
    b234:	ldr	x0, [sp, #16]
    b238:	bl	3c70 <strlen@plt>
    b23c:	str	x0, [sp, #72]
    b240:	ldr	x1, [sp, #72]
    b244:	ldr	x0, [sp, #16]
    b248:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    b24c:	str	x0, [sp, #40]
    b250:	ldr	x0, [sp, #40]
    b254:	cmp	x0, #0x0
    b258:	b.ne	b264 <PySequence_Fast@plt+0x7024>  // b.any
    b25c:	mov	x0, #0x0                   	// #0
    b260:	b	b444 <PySequence_Fast@plt+0x7204>
    b264:	ldr	x0, [sp, #24]
    b268:	ldr	x0, [x0, #40]
    b26c:	ldr	x1, [sp, #40]
    b270:	bl	4230 <PyDict_GetItemWithError@plt>
    b274:	str	x0, [sp, #64]
    b278:	ldr	x0, [sp, #64]
    b27c:	cmp	x0, #0x0
    b280:	b.eq	b290 <PySequence_Fast@plt+0x7050>  // b.none
    b284:	ldr	x0, [sp, #64]
    b288:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    b28c:	b	b42c <PySequence_Fast@plt+0x71ec>
    b290:	bl	3f80 <PyErr_Occurred@plt>
    b294:	cmp	x0, #0x0
    b298:	b.ne	b42c <PySequence_Fast@plt+0x71ec>  // b.any
    b29c:	str	xzr, [sp, #48]
    b2a0:	b	b2c8 <PySequence_Fast@plt+0x7088>
    b2a4:	ldr	x0, [sp, #48]
    b2a8:	ldr	x1, [sp, #16]
    b2ac:	add	x0, x1, x0
    b2b0:	ldrb	w0, [x0]
    b2b4:	cmp	w0, #0x7d
    b2b8:	b.eq	b2dc <PySequence_Fast@plt+0x709c>  // b.none
    b2bc:	ldr	x0, [sp, #48]
    b2c0:	add	x0, x0, #0x1
    b2c4:	str	x0, [sp, #48]
    b2c8:	ldr	x1, [sp, #48]
    b2cc:	ldr	x0, [sp, #72]
    b2d0:	cmp	x1, x0
    b2d4:	b.lt	b2a4 <PySequence_Fast@plt+0x7064>  // b.tstop
    b2d8:	b	b2e0 <PySequence_Fast@plt+0x70a0>
    b2dc:	nop
    b2e0:	ldr	x1, [sp, #48]
    b2e4:	ldr	x0, [sp, #72]
    b2e8:	cmp	x1, x0
    b2ec:	b.eq	b370 <PySequence_Fast@plt+0x7130>  // b.none
    b2f0:	ldr	x0, [sp, #72]
    b2f4:	add	x0, x0, #0x1
    b2f8:	mov	x1, x0
    b2fc:	mov	x0, #0x0                   	// #0
    b300:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    b304:	str	x0, [sp, #56]
    b308:	ldr	x0, [sp, #56]
    b30c:	cmp	x0, #0x0
    b310:	b.ne	b330 <PySequence_Fast@plt+0x70f0>  // b.any
    b314:	ldr	x2, [sp, #40]
    b318:	mov	w1, #0xc74                 	// #3188
    b31c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b320:	add	x0, x0, #0x808
    b324:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b328:	mov	x0, #0x0                   	// #0
    b32c:	b	b444 <PySequence_Fast@plt+0x7204>
    b330:	ldr	x0, [sp, #56]
    b334:	add	x0, x0, #0x20
    b338:	str	x0, [sp, #32]
    b33c:	ldr	x0, [sp, #32]
    b340:	mov	w1, #0x7b                  	// #123
    b344:	strb	w1, [x0]
    b348:	ldr	x0, [sp, #32]
    b34c:	add	x0, x0, #0x1
    b350:	ldr	x1, [sp, #72]
    b354:	mov	x2, x1
    b358:	ldr	x1, [sp, #16]
    b35c:	bl	3c20 <memcpy@plt>
    b360:	ldr	x0, [sp, #72]
    b364:	add	x0, x0, #0x1
    b368:	str	x0, [sp, #72]
    b36c:	b	b380 <PySequence_Fast@plt+0x7140>
    b370:	ldr	x0, [sp, #40]
    b374:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    b378:	ldr	x0, [sp, #40]
    b37c:	str	x0, [sp, #56]
    b380:	ldr	x0, [sp, #56]
    b384:	add	x0, x0, #0x20
    b388:	str	x0, [sp, #32]
    b38c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b390:	add	x2, x0, #0xcf8
    b394:	ldr	x1, [sp, #72]
    b398:	ldr	x0, [sp, #32]
    b39c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b3a0:	str	x0, [sp, #64]
    b3a4:	ldr	x2, [sp, #56]
    b3a8:	mov	w1, #0xc84                 	// #3204
    b3ac:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b3b0:	add	x0, x0, #0x808
    b3b4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b3b8:	ldr	x0, [sp, #64]
    b3bc:	cmp	x0, #0x0
    b3c0:	b.ne	b3e0 <PySequence_Fast@plt+0x71a0>  // b.any
    b3c4:	ldr	x2, [sp, #40]
    b3c8:	mov	w1, #0xc86                 	// #3206
    b3cc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b3d0:	add	x0, x0, #0x808
    b3d4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b3d8:	mov	x0, #0x0                   	// #0
    b3dc:	b	b444 <PySequence_Fast@plt+0x7204>
    b3e0:	ldr	x0, [sp, #24]
    b3e4:	ldr	x0, [x0, #40]
    b3e8:	ldr	x2, [sp, #64]
    b3ec:	ldr	x1, [sp, #40]
    b3f0:	bl	4140 <PyDict_SetItem@plt>
    b3f4:	cmp	w0, #0x0
    b3f8:	b.ge	b42c <PySequence_Fast@plt+0x71ec>  // b.tcont
    b3fc:	ldr	x2, [sp, #40]
    b400:	mov	w1, #0xc8c                 	// #3212
    b404:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b408:	add	x0, x0, #0x808
    b40c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b410:	ldr	x2, [sp, #64]
    b414:	mov	w1, #0xc8d                 	// #3213
    b418:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b41c:	add	x0, x0, #0x808
    b420:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b424:	mov	x0, #0x0                   	// #0
    b428:	b	b444 <PySequence_Fast@plt+0x7204>
    b42c:	ldr	x2, [sp, #40]
    b430:	mov	w1, #0xc92                 	// #3218
    b434:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b438:	add	x0, x0, #0x808
    b43c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b440:	ldr	x0, [sp, #64]
    b444:	ldp	x29, x30, [sp], #80
    b448:	ret
    b44c:	stp	x29, x30, [sp, #-96]!
    b450:	mov	x29, sp
    b454:	str	w0, [sp, #44]
    b458:	str	x1, [sp, #32]
    b45c:	str	x2, [sp, #24]
    b460:	str	x3, [sp, #16]
    b464:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    b468:	add	x0, x0, #0x9b8
    b46c:	bl	3fc0 <PyState_FindModule@plt>
    b470:	bl	3e10 <PyModule_GetState@plt>
    b474:	str	x0, [sp, #88]
    b478:	ldr	x0, [sp, #16]
    b47c:	cmp	x0, #0x0
    b480:	b.ne	b4a0 <PySequence_Fast@plt+0x7260>  // b.any
    b484:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    b488:	add	x0, x0, #0x430
    b48c:	ldr	x0, [x0]
    b490:	ldr	x1, [x0, #24]
    b494:	ldr	w0, [sp, #44]
    b498:	blr	x1
    b49c:	b	b4a4 <PySequence_Fast@plt+0x7264>
    b4a0:	ldr	x0, [sp, #16]
    b4a4:	ldr	x3, [sp, #24]
    b4a8:	ldr	x2, [sp, #32]
    b4ac:	mov	x1, x0
    b4b0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b4b4:	add	x0, x0, #0xd00
    b4b8:	bl	3c30 <PyUnicode_FromFormat@plt>
    b4bc:	str	x0, [sp, #56]
    b4c0:	ldr	x0, [sp, #56]
    b4c4:	cmp	x0, #0x0
    b4c8:	b.eq	b654 <PySequence_Fast@plt+0x7414>  // b.none
    b4cc:	ldr	x0, [sp, #88]
    b4d0:	ldr	x0, [x0]
    b4d4:	add	x1, sp, #0x38
    b4d8:	mov	x2, #0x1                   	// #1
    b4dc:	bl	45b4 <PySequence_Fast@plt+0x374>
    b4e0:	str	x0, [sp, #80]
    b4e4:	ldr	x0, [sp, #56]
    b4e8:	mov	x2, x0
    b4ec:	mov	w1, #0xca8                 	// #3240
    b4f0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b4f4:	add	x0, x0, #0x808
    b4f8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b4fc:	ldr	x0, [sp, #80]
    b500:	cmp	x0, #0x0
    b504:	b.eq	b65c <PySequence_Fast@plt+0x741c>  // b.none
    b508:	ldr	w0, [sp, #44]
    b50c:	bl	3ea0 <PyLong_FromLong@plt>
    b510:	str	x0, [sp, #72]
    b514:	ldr	x0, [sp, #72]
    b518:	cmp	x0, #0x0
    b51c:	b.ne	b538 <PySequence_Fast@plt+0x72f8>  // b.any
    b520:	ldr	x2, [sp, #80]
    b524:	mov	w1, #0xcaf                 	// #3247
    b528:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b52c:	add	x0, x0, #0x808
    b530:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b534:	b	b660 <PySequence_Fast@plt+0x7420>
    b538:	ldr	x2, [sp, #72]
    b53c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b540:	add	x1, x0, #0xd20
    b544:	ldr	x0, [sp, #80]
    b548:	bl	3d50 <PyObject_SetAttrString@plt>
    b54c:	cmn	w0, #0x1
    b550:	b.ne	b580 <PySequence_Fast@plt+0x7340>  // b.any
    b554:	ldr	x2, [sp, #80]
    b558:	mov	w1, #0xcb3                 	// #3251
    b55c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b560:	add	x0, x0, #0x808
    b564:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b568:	ldr	x2, [sp, #72]
    b56c:	mov	w1, #0xcb4                 	// #3252
    b570:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b574:	add	x0, x0, #0x808
    b578:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b57c:	b	b660 <PySequence_Fast@plt+0x7420>
    b580:	ldr	x2, [sp, #72]
    b584:	mov	w1, #0xcb7                 	// #3255
    b588:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b58c:	add	x0, x0, #0x808
    b590:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b594:	ldr	x2, [sp, #24]
    b598:	ldr	x1, [sp, #32]
    b59c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b5a0:	add	x0, x0, #0xd28
    b5a4:	bl	4190 <_Py_BuildValue_SizeT@plt>
    b5a8:	str	x0, [sp, #64]
    b5ac:	ldr	x0, [sp, #64]
    b5b0:	cmp	x0, #0x0
    b5b4:	b.ne	b5d0 <PySequence_Fast@plt+0x7390>  // b.any
    b5b8:	ldr	x2, [sp, #80]
    b5bc:	mov	w1, #0xcbb                 	// #3259
    b5c0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b5c4:	add	x0, x0, #0x808
    b5c8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b5cc:	b	b660 <PySequence_Fast@plt+0x7420>
    b5d0:	ldr	x2, [sp, #64]
    b5d4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b5d8:	add	x1, x0, #0xd30
    b5dc:	ldr	x0, [sp, #80]
    b5e0:	bl	3d50 <PyObject_SetAttrString@plt>
    b5e4:	cmn	w0, #0x1
    b5e8:	b.ne	b618 <PySequence_Fast@plt+0x73d8>  // b.any
    b5ec:	ldr	x2, [sp, #80]
    b5f0:	mov	w1, #0xcbf                 	// #3263
    b5f4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b5f8:	add	x0, x0, #0x808
    b5fc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b600:	ldr	x2, [sp, #64]
    b604:	mov	w1, #0xcc0                 	// #3264
    b608:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b60c:	add	x0, x0, #0x808
    b610:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b614:	b	b660 <PySequence_Fast@plt+0x7420>
    b618:	ldr	x2, [sp, #64]
    b61c:	mov	w1, #0xcc3                 	// #3267
    b620:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b624:	add	x0, x0, #0x808
    b628:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b62c:	ldr	x0, [sp, #88]
    b630:	ldr	x0, [x0]
    b634:	ldr	x1, [sp, #80]
    b638:	bl	3d90 <PyErr_SetObject@plt>
    b63c:	ldr	x2, [sp, #80]
    b640:	mov	w1, #0xcc6                 	// #3270
    b644:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b648:	add	x0, x0, #0x808
    b64c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b650:	b	b660 <PySequence_Fast@plt+0x7420>
    b654:	nop
    b658:	b	b660 <PySequence_Fast@plt+0x7420>
    b65c:	nop
    b660:	ldp	x29, x30, [sp], #96
    b664:	ret
    b668:	stp	x29, x30, [sp, #-224]!
    b66c:	mov	x29, sp
    b670:	str	x19, [sp, #16]
    b674:	str	x0, [sp, #56]
    b678:	str	x1, [sp, #48]
    b67c:	str	w2, [sp, #44]
    b680:	ldr	w0, [sp, #44]
    b684:	cmp	w0, #0x1
    b688:	b.le	b86c <PySequence_Fast@plt+0x762c>
    b68c:	ldr	x0, [sp, #48]
    b690:	ldrb	w0, [x0]
    b694:	cmp	w0, #0x26
    b698:	b.ne	b86c <PySequence_Fast@plt+0x762c>  // b.any
    b69c:	bl	3f80 <PyErr_Occurred@plt>
    b6a0:	cmp	x0, #0x0
    b6a4:	b.ne	b874 <PySequence_Fast@plt+0x7634>  // b.any
    b6a8:	ldr	x0, [sp, #48]
    b6ac:	add	x3, x0, #0x1
    b6b0:	ldr	w0, [sp, #44]
    b6b4:	sub	w0, w0, #0x2
    b6b8:	sxtw	x1, w0
    b6bc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b6c0:	add	x2, x0, #0xcf8
    b6c4:	mov	x0, x3
    b6c8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b6cc:	str	x0, [sp, #208]
    b6d0:	ldr	x0, [sp, #208]
    b6d4:	cmp	x0, #0x0
    b6d8:	b.eq	b87c <PySequence_Fast@plt+0x763c>  // b.none
    b6dc:	ldr	x0, [sp, #56]
    b6e0:	ldr	x0, [x0, #32]
    b6e4:	ldr	x1, [sp, #208]
    b6e8:	bl	4230 <PyDict_GetItemWithError@plt>
    b6ec:	str	x0, [sp, #200]
    b6f0:	ldr	x0, [sp, #200]
    b6f4:	cmp	x0, #0x0
    b6f8:	b.eq	b76c <PySequence_Fast@plt+0x752c>  // b.none
    b6fc:	ldr	x0, [sp, #56]
    b700:	ldr	x0, [x0, #24]
    b704:	ldr	x1, [x0, #8]
    b708:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    b70c:	add	x0, x0, #0x660
    b710:	cmp	x1, x0
    b714:	b.ne	b730 <PySequence_Fast@plt+0x74f0>  // b.any
    b718:	ldr	x0, [sp, #56]
    b71c:	ldr	x0, [x0, #24]
    b720:	ldr	x1, [sp, #200]
    b724:	bl	a9c0 <PySequence_Fast@plt+0x6780>
    b728:	str	x0, [sp, #216]
    b72c:	b	b760 <PySequence_Fast@plt+0x7520>
    b730:	ldr	x0, [sp, #56]
    b734:	ldr	x0, [x0, #72]
    b738:	cmp	x0, #0x0
    b73c:	b.eq	b75c <PySequence_Fast@plt+0x751c>  // b.none
    b740:	ldr	x0, [sp, #56]
    b744:	ldr	x0, [x0, #72]
    b748:	add	x1, sp, #0xc8
    b74c:	mov	x2, #0x1                   	// #1
    b750:	bl	45b4 <PySequence_Fast@plt+0x374>
    b754:	str	x0, [sp, #216]
    b758:	b	b760 <PySequence_Fast@plt+0x7520>
    b75c:	str	xzr, [sp, #216]
    b760:	ldr	x0, [sp, #216]
    b764:	bl	4480 <PySequence_Fast@plt+0x240>
    b768:	b	b854 <PySequence_Fast@plt+0x7614>
    b76c:	bl	3f80 <PyErr_Occurred@plt>
    b770:	cmp	x0, #0x0
    b774:	b.ne	b854 <PySequence_Fast@plt+0x7614>  // b.any
    b778:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b77c:	add	x0, x0, #0xd40
    b780:	add	x2, sp, #0x48
    b784:	mov	x3, x0
    b788:	ldp	x0, x1, [x3]
    b78c:	stp	x0, x1, [x2]
    b790:	ldrh	w0, [x3, #16]
    b794:	strh	w0, [x2, #16]
    b798:	add	x0, sp, #0x2
    b79c:	stp	xzr, xzr, [x0, #88]
    b7a0:	add	x0, sp, #0x2
    b7a4:	stp	xzr, xzr, [x0, #104]
    b7a8:	add	x0, sp, #0x2
    b7ac:	stp	xzr, xzr, [x0, #120]
    b7b0:	add	x0, sp, #0x2
    b7b4:	stp	xzr, xzr, [x0, #136]
    b7b8:	add	x0, sp, #0x2
    b7bc:	stp	xzr, xzr, [x0, #152]
    b7c0:	add	x0, sp, #0x2
    b7c4:	stp	xzr, xzr, [x0, #168]
    b7c8:	stur	xzr, [sp, #186]
    b7cc:	stur	wzr, [sp, #194]
    b7d0:	strh	wzr, [sp, #198]
    b7d4:	ldr	w2, [sp, #44]
    b7d8:	ldr	w1, [sp, #44]
    b7dc:	mov	w0, #0x64                  	// #100
    b7e0:	cmp	w2, #0x64
    b7e4:	csel	w0, w1, w0, le
    b7e8:	sxtw	x1, w0
    b7ec:	add	x0, sp, #0x48
    b7f0:	mov	x2, x1
    b7f4:	ldr	x1, [sp, #48]
    b7f8:	bl	40d0 <strncat@plt>
    b7fc:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    b800:	add	x0, x0, #0x430
    b804:	ldr	x0, [x0]
    b808:	ldr	x1, [x0, #48]
    b80c:	ldr	x0, [sp, #56]
    b810:	ldr	x0, [x0, #16]
    b814:	blr	x1
    b818:	mov	x19, x0
    b81c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    b820:	add	x0, x0, #0x430
    b824:	ldr	x0, [x0]
    b828:	ldr	x1, [x0, #40]
    b82c:	ldr	x0, [sp, #56]
    b830:	ldr	x0, [x0, #16]
    b834:	blr	x1
    b838:	mov	x1, x0
    b83c:	add	x0, sp, #0x48
    b840:	mov	x3, x0
    b844:	mov	x2, x1
    b848:	mov	x1, x19
    b84c:	mov	w0, #0xb                   	// #11
    b850:	bl	b44c <PySequence_Fast@plt+0x720c>
    b854:	ldr	x2, [sp, #208]
    b858:	mov	w1, #0xcf6                 	// #3318
    b85c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b860:	add	x0, x0, #0x808
    b864:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b868:	b	b880 <PySequence_Fast@plt+0x7640>
    b86c:	nop
    b870:	b	b880 <PySequence_Fast@plt+0x7640>
    b874:	nop
    b878:	b	b880 <PySequence_Fast@plt+0x7640>
    b87c:	nop
    b880:	ldr	x19, [sp, #16]
    b884:	ldp	x29, x30, [sp], #224
    b888:	ret
    b88c:	stp	x29, x30, [sp, #-112]!
    b890:	mov	x29, sp
    b894:	str	x19, [sp, #16]
    b898:	str	x0, [sp, #56]
    b89c:	str	x1, [sp, #48]
    b8a0:	str	x2, [sp, #40]
    b8a4:	bl	3f80 <PyErr_Occurred@plt>
    b8a8:	cmp	x0, #0x0
    b8ac:	b.ne	bb5c <PySequence_Fast@plt+0x791c>  // b.any
    b8b0:	ldr	x1, [sp, #48]
    b8b4:	ldr	x0, [sp, #56]
    b8b8:	bl	b224 <PySequence_Fast@plt+0x6fe4>
    b8bc:	str	x0, [sp, #88]
    b8c0:	ldr	x0, [sp, #88]
    b8c4:	cmp	x0, #0x0
    b8c8:	b.eq	bb64 <PySequence_Fast@plt+0x7924>  // b.none
    b8cc:	ldr	x0, [sp, #40]
    b8d0:	ldr	x0, [x0]
    b8d4:	cmp	x0, #0x0
    b8d8:	b.eq	ba50 <PySequence_Fast@plt+0x7810>  // b.none
    b8dc:	bl	4080 <PyDict_New@plt>
    b8e0:	str	x0, [sp, #96]
    b8e4:	ldr	x0, [sp, #96]
    b8e8:	cmp	x0, #0x0
    b8ec:	b.ne	ba28 <PySequence_Fast@plt+0x77e8>  // b.any
    b8f0:	ldr	x2, [sp, #88]
    b8f4:	mov	w1, #0xd0e                 	// #3342
    b8f8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b8fc:	add	x0, x0, #0x808
    b900:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b904:	b	bb68 <PySequence_Fast@plt+0x7928>
    b908:	ldr	x0, [sp, #40]
    b90c:	ldr	x0, [x0]
    b910:	mov	x1, x0
    b914:	ldr	x0, [sp, #56]
    b918:	bl	b224 <PySequence_Fast@plt+0x6fe4>
    b91c:	str	x0, [sp, #80]
    b920:	ldr	x0, [sp, #40]
    b924:	add	x0, x0, #0x8
    b928:	ldr	x19, [x0]
    b92c:	ldr	x0, [sp, #40]
    b930:	add	x0, x0, #0x8
    b934:	ldr	x0, [x0]
    b938:	bl	3c70 <strlen@plt>
    b93c:	mov	x1, x0
    b940:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b944:	add	x2, x0, #0xcf8
    b948:	mov	x0, x19
    b94c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b950:	str	x0, [sp, #72]
    b954:	ldr	x0, [sp, #80]
    b958:	cmp	x0, #0x0
    b95c:	b.eq	b96c <PySequence_Fast@plt+0x772c>  // b.none
    b960:	ldr	x0, [sp, #72]
    b964:	cmp	x0, #0x0
    b968:	b.ne	b9a8 <PySequence_Fast@plt+0x7768>  // b.any
    b96c:	ldr	x0, [sp, #72]
    b970:	bl	4480 <PySequence_Fast@plt+0x240>
    b974:	ldr	x0, [sp, #80]
    b978:	bl	4480 <PySequence_Fast@plt+0x240>
    b97c:	ldr	x2, [sp, #96]
    b980:	mov	w1, #0xd17                 	// #3351
    b984:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b988:	add	x0, x0, #0x808
    b98c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b990:	ldr	x2, [sp, #88]
    b994:	mov	w1, #0xd18                 	// #3352
    b998:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b99c:	add	x0, x0, #0x808
    b9a0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b9a4:	b	bb68 <PySequence_Fast@plt+0x7928>
    b9a8:	ldr	x2, [sp, #72]
    b9ac:	ldr	x1, [sp, #80]
    b9b0:	ldr	x0, [sp, #96]
    b9b4:	bl	4140 <PyDict_SetItem@plt>
    b9b8:	str	w0, [sp, #68]
    b9bc:	ldr	x2, [sp, #72]
    b9c0:	mov	w1, #0xd1c                 	// #3356
    b9c4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b9c8:	add	x0, x0, #0x808
    b9cc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b9d0:	ldr	x2, [sp, #80]
    b9d4:	mov	w1, #0xd1d                 	// #3357
    b9d8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b9dc:	add	x0, x0, #0x808
    b9e0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    b9e4:	ldr	w0, [sp, #68]
    b9e8:	cmp	w0, #0x0
    b9ec:	b.ge	ba1c <PySequence_Fast@plt+0x77dc>  // b.tcont
    b9f0:	ldr	x2, [sp, #96]
    b9f4:	mov	w1, #0xd1f                 	// #3359
    b9f8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    b9fc:	add	x0, x0, #0x808
    ba00:	bl	4408 <PySequence_Fast@plt+0x1c8>
    ba04:	ldr	x2, [sp, #88]
    ba08:	mov	w1, #0xd20                 	// #3360
    ba0c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    ba10:	add	x0, x0, #0x808
    ba14:	bl	4408 <PySequence_Fast@plt+0x1c8>
    ba18:	b	bb68 <PySequence_Fast@plt+0x7928>
    ba1c:	ldr	x0, [sp, #40]
    ba20:	add	x0, x0, #0x10
    ba24:	str	x0, [sp, #40]
    ba28:	ldr	x0, [sp, #40]
    ba2c:	ldr	x0, [x0]
    ba30:	cmp	x0, #0x0
    ba34:	b.eq	ba68 <PySequence_Fast@plt+0x7828>  // b.none
    ba38:	ldr	x0, [sp, #40]
    ba3c:	add	x0, x0, #0x8
    ba40:	ldr	x0, [x0]
    ba44:	cmp	x0, #0x0
    ba48:	b.ne	b908 <PySequence_Fast@plt+0x76c8>  // b.any
    ba4c:	b	ba68 <PySequence_Fast@plt+0x7828>
    ba50:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ba54:	ldr	x0, [x0, #3976]
    ba58:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    ba5c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ba60:	ldr	x0, [x0, #3976]
    ba64:	str	x0, [sp, #96]
    ba68:	ldr	x0, [sp, #56]
    ba6c:	ldr	x0, [x0, #24]
    ba70:	ldr	x1, [x0, #8]
    ba74:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    ba78:	add	x0, x0, #0x660
    ba7c:	cmp	x1, x0
    ba80:	b.ne	baa0 <PySequence_Fast@plt+0x7860>  // b.any
    ba84:	ldr	x0, [sp, #56]
    ba88:	ldr	x0, [x0, #24]
    ba8c:	ldr	x2, [sp, #96]
    ba90:	ldr	x1, [sp, #88]
    ba94:	bl	a6dc <PySequence_Fast@plt+0x649c>
    ba98:	str	x0, [sp, #104]
    ba9c:	b	bb28 <PySequence_Fast@plt+0x78e8>
    baa0:	ldr	x0, [sp, #56]
    baa4:	ldr	x0, [x0, #64]
    baa8:	cmp	x0, #0x0
    baac:	b.eq	bb24 <PySequence_Fast@plt+0x78e4>  // b.none
    bab0:	ldr	x1, [sp, #96]
    bab4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    bab8:	ldr	x0, [x0, #3976]
    babc:	cmp	x1, x0
    bac0:	b.ne	bb04 <PySequence_Fast@plt+0x78c4>  // b.any
    bac4:	ldr	x2, [sp, #96]
    bac8:	mov	w1, #0xd31                 	// #3377
    bacc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bad0:	add	x0, x0, #0x808
    bad4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bad8:	bl	4080 <PyDict_New@plt>
    badc:	str	x0, [sp, #96]
    bae0:	ldr	x0, [sp, #96]
    bae4:	cmp	x0, #0x0
    bae8:	b.ne	bb04 <PySequence_Fast@plt+0x78c4>  // b.any
    baec:	ldr	x2, [sp, #88]
    baf0:	mov	w1, #0xd34                 	// #3380
    baf4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    baf8:	add	x0, x0, #0x808
    bafc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bb00:	b	bb68 <PySequence_Fast@plt+0x7928>
    bb04:	ldr	x0, [sp, #56]
    bb08:	ldr	x0, [x0, #64]
    bb0c:	mov	x3, #0x0                   	// #0
    bb10:	ldr	x2, [sp, #96]
    bb14:	ldr	x1, [sp, #88]
    bb18:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    bb1c:	str	x0, [sp, #104]
    bb20:	b	bb28 <PySequence_Fast@plt+0x78e8>
    bb24:	str	xzr, [sp, #104]
    bb28:	ldr	x2, [sp, #88]
    bb2c:	mov	w1, #0xd3d                 	// #3389
    bb30:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bb34:	add	x0, x0, #0x808
    bb38:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bb3c:	ldr	x2, [sp, #96]
    bb40:	mov	w1, #0xd3e                 	// #3390
    bb44:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bb48:	add	x0, x0, #0x808
    bb4c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bb50:	ldr	x0, [sp, #104]
    bb54:	bl	4480 <PySequence_Fast@plt+0x240>
    bb58:	b	bb68 <PySequence_Fast@plt+0x7928>
    bb5c:	nop
    bb60:	b	bb68 <PySequence_Fast@plt+0x7928>
    bb64:	nop
    bb68:	ldr	x19, [sp, #16]
    bb6c:	ldp	x29, x30, [sp], #112
    bb70:	ret
    bb74:	stp	x29, x30, [sp, #-64]!
    bb78:	mov	x29, sp
    bb7c:	str	x0, [sp, #40]
    bb80:	str	x1, [sp, #32]
    bb84:	str	w2, [sp, #28]
    bb88:	bl	3f80 <PyErr_Occurred@plt>
    bb8c:	cmp	x0, #0x0
    bb90:	b.ne	bc40 <PySequence_Fast@plt+0x7a00>  // b.any
    bb94:	ldrsw	x1, [sp, #28]
    bb98:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bb9c:	add	x2, x0, #0xcf8
    bba0:	ldr	x0, [sp, #32]
    bba4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bba8:	str	x0, [sp, #48]
    bbac:	ldr	x0, [sp, #48]
    bbb0:	cmp	x0, #0x0
    bbb4:	b.eq	bc48 <PySequence_Fast@plt+0x7a08>  // b.none
    bbb8:	ldr	x0, [sp, #40]
    bbbc:	ldr	x0, [x0, #24]
    bbc0:	ldr	x1, [x0, #8]
    bbc4:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    bbc8:	add	x0, x0, #0x660
    bbcc:	cmp	x1, x0
    bbd0:	b.ne	bbec <PySequence_Fast@plt+0x79ac>  // b.any
    bbd4:	ldr	x0, [sp, #40]
    bbd8:	ldr	x0, [x0, #24]
    bbdc:	ldr	x1, [sp, #48]
    bbe0:	bl	a9c0 <PySequence_Fast@plt+0x6780>
    bbe4:	str	x0, [sp, #56]
    bbe8:	b	bc1c <PySequence_Fast@plt+0x79dc>
    bbec:	ldr	x0, [sp, #40]
    bbf0:	ldr	x0, [x0, #72]
    bbf4:	cmp	x0, #0x0
    bbf8:	b.eq	bc18 <PySequence_Fast@plt+0x79d8>  // b.none
    bbfc:	ldr	x0, [sp, #40]
    bc00:	ldr	x0, [x0, #72]
    bc04:	add	x1, sp, #0x30
    bc08:	mov	x2, #0x1                   	// #1
    bc0c:	bl	45b4 <PySequence_Fast@plt+0x374>
    bc10:	str	x0, [sp, #56]
    bc14:	b	bc1c <PySequence_Fast@plt+0x79dc>
    bc18:	str	xzr, [sp, #56]
    bc1c:	ldr	x0, [sp, #48]
    bc20:	mov	x2, x0
    bc24:	mov	w1, #0xd59                 	// #3417
    bc28:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bc2c:	add	x0, x0, #0x808
    bc30:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bc34:	ldr	x0, [sp, #56]
    bc38:	bl	4480 <PySequence_Fast@plt+0x240>
    bc3c:	b	bc4c <PySequence_Fast@plt+0x7a0c>
    bc40:	nop
    bc44:	b	bc4c <PySequence_Fast@plt+0x7a0c>
    bc48:	nop
    bc4c:	ldp	x29, x30, [sp], #64
    bc50:	ret
    bc54:	stp	x29, x30, [sp, #-48]!
    bc58:	mov	x29, sp
    bc5c:	str	x0, [sp, #24]
    bc60:	str	x1, [sp, #16]
    bc64:	str	xzr, [sp, #40]
    bc68:	bl	3f80 <PyErr_Occurred@plt>
    bc6c:	cmp	x0, #0x0
    bc70:	b.ne	bd18 <PySequence_Fast@plt+0x7ad8>  // b.any
    bc74:	ldr	x0, [sp, #24]
    bc78:	ldr	x0, [x0, #24]
    bc7c:	ldr	x1, [x0, #8]
    bc80:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    bc84:	add	x0, x0, #0x660
    bc88:	cmp	x1, x0
    bc8c:	b.ne	bcb0 <PySequence_Fast@plt+0x7a70>  // b.any
    bc90:	ldr	x0, [sp, #24]
    bc94:	ldr	x2, [x0, #24]
    bc98:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    bc9c:	ldr	x1, [x0, #3976]
    bca0:	mov	x0, x2
    bca4:	bl	ab94 <PySequence_Fast@plt+0x6954>
    bca8:	str	x0, [sp, #40]
    bcac:	b	bd0c <PySequence_Fast@plt+0x7acc>
    bcb0:	ldr	x0, [sp, #24]
    bcb4:	ldr	x0, [x0, #80]
    bcb8:	cmp	x0, #0x0
    bcbc:	b.eq	bd0c <PySequence_Fast@plt+0x7acc>  // b.none
    bcc0:	ldr	x1, [sp, #16]
    bcc4:	ldr	x0, [sp, #24]
    bcc8:	bl	b224 <PySequence_Fast@plt+0x6fe4>
    bccc:	str	x0, [sp, #32]
    bcd0:	ldr	x0, [sp, #32]
    bcd4:	cmp	x0, #0x0
    bcd8:	b.eq	bd0c <PySequence_Fast@plt+0x7acc>  // b.none
    bcdc:	ldr	x0, [sp, #24]
    bce0:	ldr	x0, [x0, #80]
    bce4:	add	x1, sp, #0x20
    bce8:	mov	x2, #0x1                   	// #1
    bcec:	bl	45b4 <PySequence_Fast@plt+0x374>
    bcf0:	str	x0, [sp, #40]
    bcf4:	ldr	x0, [sp, #32]
    bcf8:	mov	x2, x0
    bcfc:	mov	w1, #0xd71                 	// #3441
    bd00:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bd04:	add	x0, x0, #0x808
    bd08:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bd0c:	ldr	x0, [sp, #40]
    bd10:	bl	4480 <PySequence_Fast@plt+0x240>
    bd14:	b	bd1c <PySequence_Fast@plt+0x7adc>
    bd18:	nop
    bd1c:	ldp	x29, x30, [sp], #48
    bd20:	ret
    bd24:	stp	x29, x30, [sp, #-96]!
    bd28:	mov	x29, sp
    bd2c:	str	x0, [sp, #40]
    bd30:	str	x1, [sp, #32]
    bd34:	str	x2, [sp, #24]
    bd38:	str	xzr, [sp, #88]
    bd3c:	bl	3f80 <PyErr_Occurred@plt>
    bd40:	cmp	x0, #0x0
    bd44:	b.ne	bf4c <PySequence_Fast@plt+0x7d0c>  // b.any
    bd48:	ldr	x0, [sp, #24]
    bd4c:	cmp	x0, #0x0
    bd50:	b.ne	bd60 <PySequence_Fast@plt+0x7b20>  // b.any
    bd54:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bd58:	add	x0, x0, #0x8d0
    bd5c:	str	x0, [sp, #24]
    bd60:	ldr	x0, [sp, #32]
    bd64:	cmp	x0, #0x0
    bd68:	b.ne	bd78 <PySequence_Fast@plt+0x7b38>  // b.any
    bd6c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bd70:	add	x0, x0, #0x8d0
    bd74:	str	x0, [sp, #32]
    bd78:	ldr	x0, [sp, #40]
    bd7c:	ldr	x0, [x0, #24]
    bd80:	ldr	x1, [x0, #8]
    bd84:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    bd88:	add	x0, x0, #0x660
    bd8c:	cmp	x1, x0
    bd90:	b.ne	be70 <PySequence_Fast@plt+0x7c30>  // b.any
    bd94:	ldr	x0, [sp, #40]
    bd98:	ldr	x0, [x0, #24]
    bd9c:	str	x0, [sp, #64]
    bda0:	ldr	x0, [sp, #64]
    bda4:	ldr	x0, [x0, #96]
    bda8:	cmp	x0, #0x0
    bdac:	b.eq	bf40 <PySequence_Fast@plt+0x7d00>  // b.none
    bdb0:	ldr	x0, [sp, #64]
    bdb4:	ldr	x0, [x0, #120]
    bdb8:	cmp	x0, #0x0
    bdbc:	b.eq	bf40 <PySequence_Fast@plt+0x7d00>  // b.none
    bdc0:	ldr	x0, [sp, #32]
    bdc4:	bl	3c70 <strlen@plt>
    bdc8:	mov	x1, x0
    bdcc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bdd0:	add	x2, x0, #0xcf8
    bdd4:	ldr	x0, [sp, #32]
    bdd8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bddc:	str	x0, [sp, #80]
    bde0:	ldr	x0, [sp, #80]
    bde4:	cmp	x0, #0x0
    bde8:	b.eq	bf54 <PySequence_Fast@plt+0x7d14>  // b.none
    bdec:	ldr	x0, [sp, #24]
    bdf0:	bl	3c70 <strlen@plt>
    bdf4:	mov	x1, x0
    bdf8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bdfc:	add	x2, x0, #0xcf8
    be00:	ldr	x0, [sp, #24]
    be04:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    be08:	str	x0, [sp, #72]
    be0c:	ldr	x0, [sp, #72]
    be10:	cmp	x0, #0x0
    be14:	b.ne	be30 <PySequence_Fast@plt+0x7bf0>  // b.any
    be18:	ldr	x2, [sp, #80]
    be1c:	mov	w1, #0xd93                 	// #3475
    be20:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    be24:	add	x0, x0, #0x808
    be28:	bl	4408 <PySequence_Fast@plt+0x1c8>
    be2c:	b	bf60 <PySequence_Fast@plt+0x7d20>
    be30:	ldr	x2, [sp, #72]
    be34:	ldr	x1, [sp, #80]
    be38:	ldr	x0, [sp, #64]
    be3c:	bl	afbc <PySequence_Fast@plt+0x6d7c>
    be40:	str	x0, [sp, #88]
    be44:	ldr	x2, [sp, #72]
    be48:	mov	w1, #0xd98                 	// #3480
    be4c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    be50:	add	x0, x0, #0x808
    be54:	bl	4408 <PySequence_Fast@plt+0x1c8>
    be58:	ldr	x2, [sp, #80]
    be5c:	mov	w1, #0xd99                 	// #3481
    be60:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    be64:	add	x0, x0, #0x808
    be68:	bl	4408 <PySequence_Fast@plt+0x1c8>
    be6c:	b	bf40 <PySequence_Fast@plt+0x7d00>
    be70:	ldr	x0, [sp, #40]
    be74:	ldr	x0, [x0, #48]
    be78:	cmp	x0, #0x0
    be7c:	b.eq	bf40 <PySequence_Fast@plt+0x7d00>  // b.none
    be80:	ldr	x0, [sp, #32]
    be84:	bl	3c70 <strlen@plt>
    be88:	mov	x1, x0
    be8c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    be90:	add	x2, x0, #0xcf8
    be94:	ldr	x0, [sp, #32]
    be98:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    be9c:	str	x0, [sp, #80]
    bea0:	ldr	x0, [sp, #80]
    bea4:	cmp	x0, #0x0
    bea8:	b.eq	bf5c <PySequence_Fast@plt+0x7d1c>  // b.none
    beac:	ldr	x0, [sp, #24]
    beb0:	bl	3c70 <strlen@plt>
    beb4:	mov	x1, x0
    beb8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bebc:	add	x2, x0, #0xcf8
    bec0:	ldr	x0, [sp, #24]
    bec4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bec8:	str	x0, [sp, #72]
    becc:	ldr	x0, [sp, #72]
    bed0:	cmp	x0, #0x0
    bed4:	b.ne	bef0 <PySequence_Fast@plt+0x7cb0>  // b.any
    bed8:	ldr	x2, [sp, #80]
    bedc:	mov	w1, #0xda1                 	// #3489
    bee0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bee4:	add	x0, x0, #0x808
    bee8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    beec:	b	bf60 <PySequence_Fast@plt+0x7d20>
    bef0:	ldr	x0, [sp, #80]
    bef4:	str	x0, [sp, #48]
    bef8:	ldr	x0, [sp, #72]
    befc:	str	x0, [sp, #56]
    bf00:	ldr	x0, [sp, #40]
    bf04:	ldr	x0, [x0, #48]
    bf08:	add	x1, sp, #0x30
    bf0c:	mov	x2, #0x2                   	// #2
    bf10:	bl	45b4 <PySequence_Fast@plt+0x374>
    bf14:	str	x0, [sp, #88]
    bf18:	ldr	x2, [sp, #72]
    bf1c:	mov	w1, #0xda8                 	// #3496
    bf20:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bf24:	add	x0, x0, #0x808
    bf28:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bf2c:	ldr	x2, [sp, #80]
    bf30:	mov	w1, #0xda9                 	// #3497
    bf34:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bf38:	add	x0, x0, #0x808
    bf3c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    bf40:	ldr	x0, [sp, #88]
    bf44:	bl	4480 <PySequence_Fast@plt+0x240>
    bf48:	b	bf60 <PySequence_Fast@plt+0x7d20>
    bf4c:	nop
    bf50:	b	bf60 <PySequence_Fast@plt+0x7d20>
    bf54:	nop
    bf58:	b	bf60 <PySequence_Fast@plt+0x7d20>
    bf5c:	nop
    bf60:	ldp	x29, x30, [sp], #96
    bf64:	ret
    bf68:	stp	x29, x30, [sp, #-64]!
    bf6c:	mov	x29, sp
    bf70:	str	x0, [sp, #24]
    bf74:	str	x1, [sp, #16]
    bf78:	str	xzr, [sp, #56]
    bf7c:	bl	3f80 <PyErr_Occurred@plt>
    bf80:	cmp	x0, #0x0
    bf84:	b.ne	c078 <PySequence_Fast@plt+0x7e38>  // b.any
    bf88:	ldr	x0, [sp, #16]
    bf8c:	cmp	x0, #0x0
    bf90:	b.ne	bfa0 <PySequence_Fast@plt+0x7d60>  // b.any
    bf94:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    bf98:	add	x0, x0, #0x8d0
    bf9c:	str	x0, [sp, #16]
    bfa0:	ldr	x0, [sp, #24]
    bfa4:	ldr	x0, [x0, #24]
    bfa8:	ldr	x1, [x0, #8]
    bfac:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    bfb0:	add	x0, x0, #0x660
    bfb4:	cmp	x1, x0
    bfb8:	b.ne	c000 <PySequence_Fast@plt+0x7dc0>  // b.any
    bfbc:	ldr	x0, [sp, #24]
    bfc0:	ldr	x0, [x0, #24]
    bfc4:	str	x0, [sp, #48]
    bfc8:	ldr	x0, [sp, #48]
    bfcc:	ldr	x0, [x0, #96]
    bfd0:	cmp	x0, #0x0
    bfd4:	b.eq	c06c <PySequence_Fast@plt+0x7e2c>  // b.none
    bfd8:	ldr	x0, [sp, #48]
    bfdc:	ldr	x0, [x0, #128]
    bfe0:	cmp	x0, #0x0
    bfe4:	b.eq	c06c <PySequence_Fast@plt+0x7e2c>  // b.none
    bfe8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    bfec:	ldr	x1, [x0, #3976]
    bff0:	ldr	x0, [sp, #48]
    bff4:	bl	b084 <PySequence_Fast@plt+0x6e44>
    bff8:	str	x0, [sp, #56]
    bffc:	b	c06c <PySequence_Fast@plt+0x7e2c>
    c000:	ldr	x0, [sp, #24]
    c004:	ldr	x0, [x0, #56]
    c008:	cmp	x0, #0x0
    c00c:	b.eq	c06c <PySequence_Fast@plt+0x7e2c>  // b.none
    c010:	ldr	x0, [sp, #16]
    c014:	bl	3c70 <strlen@plt>
    c018:	mov	x1, x0
    c01c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c020:	add	x2, x0, #0xcf8
    c024:	ldr	x0, [sp, #16]
    c028:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c02c:	str	x0, [sp, #40]
    c030:	ldr	x0, [sp, #40]
    c034:	cmp	x0, #0x0
    c038:	b.eq	c080 <PySequence_Fast@plt+0x7e40>  // b.none
    c03c:	ldr	x0, [sp, #24]
    c040:	ldr	x0, [x0, #56]
    c044:	add	x1, sp, #0x28
    c048:	mov	x2, #0x1                   	// #1
    c04c:	bl	45b4 <PySequence_Fast@plt+0x374>
    c050:	str	x0, [sp, #56]
    c054:	ldr	x0, [sp, #40]
    c058:	mov	x2, x0
    c05c:	mov	w1, #0xdc8                 	// #3528
    c060:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c064:	add	x0, x0, #0x808
    c068:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c06c:	ldr	x0, [sp, #56]
    c070:	bl	4480 <PySequence_Fast@plt+0x240>
    c074:	b	c084 <PySequence_Fast@plt+0x7e44>
    c078:	nop
    c07c:	b	c084 <PySequence_Fast@plt+0x7e44>
    c080:	nop
    c084:	ldp	x29, x30, [sp], #64
    c088:	ret
    c08c:	stp	x29, x30, [sp, #-64]!
    c090:	mov	x29, sp
    c094:	str	x0, [sp, #24]
    c098:	str	x1, [sp, #16]
    c09c:	bl	3f80 <PyErr_Occurred@plt>
    c0a0:	cmp	x0, #0x0
    c0a4:	b.ne	c1ac <PySequence_Fast@plt+0x7f6c>  // b.any
    c0a8:	ldr	x0, [sp, #24]
    c0ac:	ldr	x0, [x0, #24]
    c0b0:	ldr	x1, [x0, #8]
    c0b4:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    c0b8:	add	x0, x0, #0x660
    c0bc:	cmp	x1, x0
    c0c0:	b.ne	c134 <PySequence_Fast@plt+0x7ef4>  // b.any
    c0c4:	ldr	x0, [sp, #24]
    c0c8:	ldr	x0, [x0, #24]
    c0cc:	str	x0, [sp, #48]
    c0d0:	ldr	x0, [sp, #16]
    c0d4:	bl	3c70 <strlen@plt>
    c0d8:	mov	x1, x0
    c0dc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c0e0:	add	x2, x0, #0xcf8
    c0e4:	ldr	x0, [sp, #16]
    c0e8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c0ec:	str	x0, [sp, #40]
    c0f0:	ldr	x0, [sp, #40]
    c0f4:	cmp	x0, #0x0
    c0f8:	b.eq	c1b4 <PySequence_Fast@plt+0x7f74>  // b.none
    c0fc:	ldr	x0, [sp, #40]
    c100:	mov	x1, x0
    c104:	ldr	x0, [sp, #48]
    c108:	bl	ace0 <PySequence_Fast@plt+0x6aa0>
    c10c:	str	x0, [sp, #56]
    c110:	ldr	x0, [sp, #56]
    c114:	bl	4480 <PySequence_Fast@plt+0x240>
    c118:	ldr	x0, [sp, #40]
    c11c:	mov	x2, x0
    c120:	mov	w1, #0xde1                 	// #3553
    c124:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c128:	add	x0, x0, #0x808
    c12c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c130:	b	c1c0 <PySequence_Fast@plt+0x7f80>
    c134:	ldr	x0, [sp, #24]
    c138:	ldr	x0, [x0, #88]
    c13c:	cmp	x0, #0x0
    c140:	b.eq	c1c0 <PySequence_Fast@plt+0x7f80>  // b.none
    c144:	ldr	x0, [sp, #16]
    c148:	bl	3c70 <strlen@plt>
    c14c:	mov	x1, x0
    c150:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c154:	add	x2, x0, #0xcf8
    c158:	ldr	x0, [sp, #16]
    c15c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c160:	str	x0, [sp, #40]
    c164:	ldr	x0, [sp, #40]
    c168:	cmp	x0, #0x0
    c16c:	b.eq	c1bc <PySequence_Fast@plt+0x7f7c>  // b.none
    c170:	ldr	x0, [sp, #24]
    c174:	ldr	x0, [x0, #88]
    c178:	add	x1, sp, #0x28
    c17c:	mov	x2, #0x1                   	// #1
    c180:	bl	45b4 <PySequence_Fast@plt+0x374>
    c184:	str	x0, [sp, #56]
    c188:	ldr	x0, [sp, #56]
    c18c:	bl	4480 <PySequence_Fast@plt+0x240>
    c190:	ldr	x0, [sp, #40]
    c194:	mov	x2, x0
    c198:	mov	w1, #0xde9                 	// #3561
    c19c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c1a0:	add	x0, x0, #0x808
    c1a4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c1a8:	b	c1c0 <PySequence_Fast@plt+0x7f80>
    c1ac:	nop
    c1b0:	b	c1c0 <PySequence_Fast@plt+0x7f80>
    c1b4:	nop
    c1b8:	b	c1c0 <PySequence_Fast@plt+0x7f80>
    c1bc:	nop
    c1c0:	ldp	x29, x30, [sp], #64
    c1c4:	ret
    c1c8:	stp	x29, x30, [sp, #-96]!
    c1cc:	mov	x29, sp
    c1d0:	str	x0, [sp, #56]
    c1d4:	str	x1, [sp, #48]
    c1d8:	str	x2, [sp, #40]
    c1dc:	str	x3, [sp, #32]
    c1e0:	str	w4, [sp, #28]
    c1e4:	bl	3f80 <PyErr_Occurred@plt>
    c1e8:	cmp	x0, #0x0
    c1ec:	b.ne	c3a4 <PySequence_Fast@plt+0x8164>  // b.any
    c1f0:	ldr	x1, [sp, #48]
    c1f4:	ldr	x0, [sp, #56]
    c1f8:	bl	b224 <PySequence_Fast@plt+0x6fe4>
    c1fc:	str	x0, [sp, #72]
    c200:	ldr	x0, [sp, #72]
    c204:	cmp	x0, #0x0
    c208:	b.eq	c3ac <PySequence_Fast@plt+0x816c>  // b.none
    c20c:	ldr	x0, [sp, #40]
    c210:	cmp	x0, #0x0
    c214:	b.eq	c24c <PySequence_Fast@plt+0x800c>  // b.none
    c218:	ldr	x1, [sp, #40]
    c21c:	ldr	x0, [sp, #56]
    c220:	bl	b224 <PySequence_Fast@plt+0x6fe4>
    c224:	str	x0, [sp, #88]
    c228:	ldr	x0, [sp, #88]
    c22c:	cmp	x0, #0x0
    c230:	b.ne	c264 <PySequence_Fast@plt+0x8024>  // b.any
    c234:	ldr	x2, [sp, #72]
    c238:	mov	w1, #0xe02                 	// #3586
    c23c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c240:	add	x0, x0, #0x808
    c244:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c248:	b	c3b0 <PySequence_Fast@plt+0x8170>
    c24c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    c250:	ldr	x0, [x0, #3976]
    c254:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    c258:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    c25c:	ldr	x0, [x0, #3976]
    c260:	str	x0, [sp, #88]
    c264:	ldr	x0, [sp, #32]
    c268:	cmp	x0, #0x0
    c26c:	b.eq	c2b8 <PySequence_Fast@plt+0x8078>  // b.none
    c270:	ldr	x1, [sp, #32]
    c274:	ldr	x0, [sp, #56]
    c278:	bl	b224 <PySequence_Fast@plt+0x6fe4>
    c27c:	str	x0, [sp, #80]
    c280:	ldr	x0, [sp, #80]
    c284:	cmp	x0, #0x0
    c288:	b.ne	c2d0 <PySequence_Fast@plt+0x8090>  // b.any
    c28c:	ldr	x2, [sp, #72]
    c290:	mov	w1, #0xe0d                 	// #3597
    c294:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c298:	add	x0, x0, #0x808
    c29c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c2a0:	ldr	x2, [sp, #88]
    c2a4:	mov	w1, #0xe0e                 	// #3598
    c2a8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c2ac:	add	x0, x0, #0x808
    c2b0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c2b4:	b	c3b0 <PySequence_Fast@plt+0x8170>
    c2b8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    c2bc:	ldr	x0, [x0, #3976]
    c2c0:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    c2c4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    c2c8:	ldr	x0, [x0, #3976]
    c2cc:	str	x0, [sp, #80]
    c2d0:	ldr	x0, [sp, #56]
    c2d4:	ldr	x0, [x0, #104]
    c2d8:	cmp	x0, #0x0
    c2dc:	b.eq	c30c <PySequence_Fast@plt+0x80cc>  // b.none
    c2e0:	ldr	x0, [sp, #56]
    c2e4:	ldr	x0, [x0, #104]
    c2e8:	mov	x4, #0x0                   	// #0
    c2ec:	ldr	x3, [sp, #88]
    c2f0:	ldr	x2, [sp, #80]
    c2f4:	ldr	x1, [sp, #72]
    c2f8:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    c2fc:	str	x0, [sp, #64]
    c300:	ldr	x0, [sp, #64]
    c304:	bl	4480 <PySequence_Fast@plt+0x240>
    c308:	b	c364 <PySequence_Fast@plt+0x8124>
    c30c:	add	x0, sp, #0x40
    c310:	mov	x2, x0
    c314:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    c318:	add	x1, x0, #0x1d0
    c31c:	ldr	x0, [sp, #56]
    c320:	bl	3c90 <_PyObject_LookupAttrId@plt>
    c324:	cmp	w0, #0x0
    c328:	b.le	c364 <PySequence_Fast@plt+0x8124>
    c32c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    c330:	ldr	x0, [x0, #4024]
    c334:	ldr	x3, [x0]
    c338:	mov	x2, #0x1                   	// #1
    c33c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c340:	add	x1, x0, #0xdc0
    c344:	mov	x0, x3
    c348:	bl	3d60 <PyErr_WarnEx@plt>
    c34c:	ldr	x0, [sp, #64]
    c350:	mov	x2, x0
    c354:	mov	w1, #0xe22                 	// #3618
    c358:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c35c:	add	x0, x0, #0x808
    c360:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c364:	ldr	x2, [sp, #72]
    c368:	mov	w1, #0xe25                 	// #3621
    c36c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c370:	add	x0, x0, #0x808
    c374:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c378:	ldr	x2, [sp, #80]
    c37c:	mov	w1, #0xe26                 	// #3622
    c380:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c384:	add	x0, x0, #0x808
    c388:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c38c:	ldr	x2, [sp, #88]
    c390:	mov	w1, #0xe27                 	// #3623
    c394:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c398:	add	x0, x0, #0x808
    c39c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c3a0:	b	c3b0 <PySequence_Fast@plt+0x8170>
    c3a4:	nop
    c3a8:	b	c3b0 <PySequence_Fast@plt+0x8170>
    c3ac:	nop
    c3b0:	ldp	x29, x30, [sp], #96
    c3b4:	ret
    c3b8:	stp	x29, x30, [sp, #-96]!
    c3bc:	mov	x29, sp
    c3c0:	str	x0, [sp, #40]
    c3c4:	str	x1, [sp, #32]
    c3c8:	str	x2, [sp, #24]
    c3cc:	bl	3f80 <PyErr_Occurred@plt>
    c3d0:	cmp	x0, #0x0
    c3d4:	b.ne	c5bc <PySequence_Fast@plt+0x837c>  // b.any
    c3d8:	ldr	x0, [sp, #40]
    c3dc:	ldr	x0, [x0, #24]
    c3e0:	ldr	x1, [x0, #8]
    c3e4:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    c3e8:	add	x0, x0, #0x660
    c3ec:	cmp	x1, x0
    c3f0:	b.ne	c4d0 <PySequence_Fast@plt+0x8290>  // b.any
    c3f4:	ldr	x0, [sp, #40]
    c3f8:	ldr	x0, [x0, #24]
    c3fc:	str	x0, [sp, #64]
    c400:	ldr	x0, [sp, #64]
    c404:	ldr	x0, [x0, #96]
    c408:	cmp	x0, #0x0
    c40c:	b.eq	c420 <PySequence_Fast@plt+0x81e0>  // b.none
    c410:	ldr	x0, [sp, #64]
    c414:	ldr	x0, [x0, #144]
    c418:	cmp	x0, #0x0
    c41c:	b.ne	c430 <PySequence_Fast@plt+0x81f0>  // b.any
    c420:	ldr	x0, [sp, #64]
    c424:	ldrb	w0, [x0, #153]
    c428:	cmp	w0, #0x0
    c42c:	b.eq	c5c4 <PySequence_Fast@plt+0x8384>  // b.none
    c430:	ldr	x0, [sp, #32]
    c434:	bl	3c70 <strlen@plt>
    c438:	mov	x1, x0
    c43c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c440:	add	x2, x0, #0xcf8
    c444:	ldr	x0, [sp, #32]
    c448:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c44c:	str	x0, [sp, #88]
    c450:	ldr	x0, [sp, #88]
    c454:	cmp	x0, #0x0
    c458:	b.eq	c594 <PySequence_Fast@plt+0x8354>  // b.none
    c45c:	ldr	x0, [sp, #24]
    c460:	bl	3c70 <strlen@plt>
    c464:	mov	x1, x0
    c468:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c46c:	add	x2, x0, #0xcf8
    c470:	ldr	x0, [sp, #24]
    c474:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c478:	str	x0, [sp, #80]
    c47c:	ldr	x0, [sp, #80]
    c480:	cmp	x0, #0x0
    c484:	b.eq	c59c <PySequence_Fast@plt+0x835c>  // b.none
    c488:	ldr	x2, [sp, #80]
    c48c:	ldr	x1, [sp, #88]
    c490:	ldr	x0, [sp, #64]
    c494:	bl	ae38 <PySequence_Fast@plt+0x6bf8>
    c498:	str	x0, [sp, #72]
    c49c:	ldr	x0, [sp, #72]
    c4a0:	bl	4480 <PySequence_Fast@plt+0x240>
    c4a4:	ldr	x2, [sp, #80]
    c4a8:	mov	w1, #0xe43                 	// #3651
    c4ac:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c4b0:	add	x0, x0, #0x808
    c4b4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c4b8:	ldr	x2, [sp, #88]
    c4bc:	mov	w1, #0xe44                 	// #3652
    c4c0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c4c4:	add	x0, x0, #0x808
    c4c8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c4cc:	b	c5c4 <PySequence_Fast@plt+0x8384>
    c4d0:	ldr	x0, [sp, #40]
    c4d4:	ldr	x0, [x0, #96]
    c4d8:	cmp	x0, #0x0
    c4dc:	b.eq	c5c4 <PySequence_Fast@plt+0x8384>  // b.none
    c4e0:	ldr	x0, [sp, #32]
    c4e4:	bl	3c70 <strlen@plt>
    c4e8:	mov	x1, x0
    c4ec:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c4f0:	add	x2, x0, #0xcf8
    c4f4:	ldr	x0, [sp, #32]
    c4f8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c4fc:	str	x0, [sp, #88]
    c500:	ldr	x0, [sp, #88]
    c504:	cmp	x0, #0x0
    c508:	b.eq	c5a4 <PySequence_Fast@plt+0x8364>  // b.none
    c50c:	ldr	x0, [sp, #24]
    c510:	bl	3c70 <strlen@plt>
    c514:	mov	x1, x0
    c518:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c51c:	add	x2, x0, #0xcf8
    c520:	ldr	x0, [sp, #24]
    c524:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c528:	str	x0, [sp, #80]
    c52c:	ldr	x0, [sp, #80]
    c530:	cmp	x0, #0x0
    c534:	b.eq	c5ac <PySequence_Fast@plt+0x836c>  // b.none
    c538:	ldr	x0, [sp, #88]
    c53c:	str	x0, [sp, #48]
    c540:	ldr	x0, [sp, #80]
    c544:	str	x0, [sp, #56]
    c548:	ldr	x0, [sp, #40]
    c54c:	ldr	x0, [x0, #96]
    c550:	add	x1, sp, #0x30
    c554:	mov	x2, #0x2                   	// #2
    c558:	bl	45b4 <PySequence_Fast@plt+0x374>
    c55c:	str	x0, [sp, #72]
    c560:	ldr	x0, [sp, #72]
    c564:	bl	4480 <PySequence_Fast@plt+0x240>
    c568:	ldr	x2, [sp, #80]
    c56c:	mov	w1, #0xe52                 	// #3666
    c570:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c574:	add	x0, x0, #0x808
    c578:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c57c:	ldr	x2, [sp, #88]
    c580:	mov	w1, #0xe53                 	// #3667
    c584:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c588:	add	x0, x0, #0x808
    c58c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c590:	b	c5c4 <PySequence_Fast@plt+0x8384>
    c594:	nop
    c598:	b	c5b0 <PySequence_Fast@plt+0x8370>
    c59c:	nop
    c5a0:	b	c5b0 <PySequence_Fast@plt+0x8370>
    c5a4:	nop
    c5a8:	b	c5b0 <PySequence_Fast@plt+0x8370>
    c5ac:	nop
    c5b0:	ldr	x0, [sp, #88]
    c5b4:	bl	4480 <PySequence_Fast@plt+0x240>
    c5b8:	b	c5c8 <PySequence_Fast@plt+0x8388>
    c5bc:	nop
    c5c0:	b	c5c8 <PySequence_Fast@plt+0x8388>
    c5c4:	nop
    c5c8:	ldp	x29, x30, [sp], #96
    c5cc:	ret
    c5d0:	stp	x29, x30, [sp, #-64]!
    c5d4:	mov	x29, sp
    c5d8:	str	x0, [sp, #40]
    c5dc:	str	x1, [sp, #32]
    c5e0:	str	x2, [sp, #24]
    c5e4:	ldr	x0, [sp, #40]
    c5e8:	ldr	x2, [x0, #304]
    c5ec:	mov	x1, #0x0                   	// #0
    c5f0:	ldr	x0, [sp, #40]
    c5f4:	blr	x2
    c5f8:	str	x0, [sp, #56]
    c5fc:	ldr	x0, [sp, #56]
    c600:	cmp	x0, #0x0
    c604:	b.eq	c6a8 <PySequence_Fast@plt+0x8468>  // b.none
    c608:	ldr	x0, [sp, #56]
    c60c:	str	xzr, [x0, #16]
    c610:	ldr	x0, [sp, #56]
    c614:	str	xzr, [x0, #40]
    c618:	ldr	x0, [sp, #56]
    c61c:	ldr	x1, [x0, #40]
    c620:	ldr	x0, [sp, #56]
    c624:	str	x1, [x0, #32]
    c628:	ldr	x0, [sp, #56]
    c62c:	ldr	x1, [x0, #32]
    c630:	ldr	x0, [sp, #56]
    c634:	str	x1, [x0, #24]
    c638:	ldr	x0, [sp, #56]
    c63c:	str	xzr, [x0, #56]
    c640:	ldr	x0, [sp, #56]
    c644:	ldr	x1, [x0, #56]
    c648:	ldr	x0, [sp, #56]
    c64c:	str	x1, [x0, #48]
    c650:	ldr	x0, [sp, #56]
    c654:	str	xzr, [x0, #80]
    c658:	ldr	x0, [sp, #56]
    c65c:	ldr	x1, [x0, #80]
    c660:	ldr	x0, [sp, #56]
    c664:	str	x1, [x0, #72]
    c668:	ldr	x0, [sp, #56]
    c66c:	ldr	x1, [x0, #72]
    c670:	ldr	x0, [sp, #56]
    c674:	str	x1, [x0, #64]
    c678:	ldr	x0, [sp, #56]
    c67c:	str	xzr, [x0, #112]
    c680:	ldr	x0, [sp, #56]
    c684:	ldr	x1, [x0, #112]
    c688:	ldr	x0, [sp, #56]
    c68c:	str	x1, [x0, #96]
    c690:	ldr	x0, [sp, #56]
    c694:	ldr	x1, [x0, #96]
    c698:	ldr	x0, [sp, #56]
    c69c:	str	x1, [x0, #88]
    c6a0:	ldr	x0, [sp, #56]
    c6a4:	str	xzr, [x0, #104]
    c6a8:	ldr	x0, [sp, #56]
    c6ac:	ldp	x29, x30, [sp], #64
    c6b0:	ret
    c6b4:	stp	x29, x30, [sp, #-32]!
    c6b8:	mov	x29, sp
    c6bc:	str	x0, [sp, #24]
    c6c0:	ldr	x0, [sp, #24]
    c6c4:	cmp	x0, #0x0
    c6c8:	b.ne	c6f0 <PySequence_Fast@plt+0x84b0>  // b.any
    c6cc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    c6d0:	ldr	x0, [x0, #4008]
    c6d4:	ldr	x0, [x0]
    c6d8:	bl	3e50 <PyErr_ExceptionMatches@plt>
    c6dc:	cmp	w0, #0x0
    c6e0:	b.ne	c6ec <PySequence_Fast@plt+0x84ac>  // b.any
    c6e4:	mov	w0, #0xffffffff            	// #-1
    c6e8:	b	c6f4 <PySequence_Fast@plt+0x84b4>
    c6ec:	bl	3ef0 <PyErr_Clear@plt>
    c6f0:	mov	w0, #0x0                   	// #0
    c6f4:	ldp	x29, x30, [sp], #32
    c6f8:	ret
    c6fc:	stp	x29, x30, [sp, #-96]!
    c700:	mov	x29, sp
    c704:	str	x0, [sp, #40]
    c708:	str	x1, [sp, #32]
    c70c:	str	x2, [sp, #24]
    c710:	bl	4080 <PyDict_New@plt>
    c714:	mov	x1, x0
    c718:	ldr	x0, [sp, #40]
    c71c:	str	x1, [x0, #32]
    c720:	ldr	x0, [sp, #40]
    c724:	ldr	x0, [x0, #32]
    c728:	cmp	x0, #0x0
    c72c:	b.ne	c738 <PySequence_Fast@plt+0x84f8>  // b.any
    c730:	mov	w0, #0xffffffff            	// #-1
    c734:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    c738:	bl	4080 <PyDict_New@plt>
    c73c:	mov	x1, x0
    c740:	ldr	x0, [sp, #40]
    c744:	str	x1, [x0, #40]
    c748:	ldr	x0, [sp, #40]
    c74c:	ldr	x0, [x0, #40]
    c750:	cmp	x0, #0x0
    c754:	b.ne	c794 <PySequence_Fast@plt+0x8554>  // b.any
    c758:	ldr	x0, [sp, #40]
    c75c:	ldr	x0, [x0, #32]
    c760:	str	x0, [sp, #56]
    c764:	ldr	x0, [sp, #56]
    c768:	cmp	x0, #0x0
    c76c:	b.eq	c78c <PySequence_Fast@plt+0x854c>  // b.none
    c770:	ldr	x0, [sp, #40]
    c774:	str	xzr, [x0, #32]
    c778:	ldr	x2, [sp, #56]
    c77c:	mov	w1, #0xe8e                 	// #3726
    c780:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c784:	add	x0, x0, #0x808
    c788:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c78c:	mov	w0, #0xffffffff            	// #-1
    c790:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    c794:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    c798:	add	x0, x0, #0x430
    c79c:	ldr	x0, [x0]
    c7a0:	ldr	x3, [x0, #64]
    c7a4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c7a8:	add	x2, x0, #0xe28
    c7ac:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    c7b0:	add	x1, x0, #0x9a0
    c7b4:	ldr	x0, [sp, #24]
    c7b8:	blr	x3
    c7bc:	mov	x1, x0
    c7c0:	ldr	x0, [sp, #40]
    c7c4:	str	x1, [x0, #16]
    c7c8:	ldr	x0, [sp, #40]
    c7cc:	ldr	x0, [x0, #16]
    c7d0:	cmp	x0, #0x0
    c7d4:	b.ne	c84c <PySequence_Fast@plt+0x860c>  // b.any
    c7d8:	ldr	x0, [sp, #40]
    c7dc:	ldr	x0, [x0, #32]
    c7e0:	str	x0, [sp, #72]
    c7e4:	ldr	x0, [sp, #72]
    c7e8:	cmp	x0, #0x0
    c7ec:	b.eq	c80c <PySequence_Fast@plt+0x85cc>  // b.none
    c7f0:	ldr	x0, [sp, #40]
    c7f4:	str	xzr, [x0, #32]
    c7f8:	ldr	x2, [sp, #72]
    c7fc:	mov	w1, #0xe94                 	// #3732
    c800:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c804:	add	x0, x0, #0x808
    c808:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c80c:	ldr	x0, [sp, #40]
    c810:	ldr	x0, [x0, #40]
    c814:	str	x0, [sp, #64]
    c818:	ldr	x0, [sp, #64]
    c81c:	cmp	x0, #0x0
    c820:	b.eq	c840 <PySequence_Fast@plt+0x8600>  // b.none
    c824:	ldr	x0, [sp, #40]
    c828:	str	xzr, [x0, #40]
    c82c:	ldr	x2, [sp, #64]
    c830:	mov	w1, #0xe95                 	// #3733
    c834:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c838:	add	x0, x0, #0x808
    c83c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c840:	bl	3d80 <PyErr_NoMemory@plt>
    c844:	mov	w0, #0xffffffff            	// #-1
    c848:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    c84c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    c850:	add	x0, x0, #0x430
    c854:	ldr	x0, [x0]
    c858:	ldr	x0, [x0, #168]
    c85c:	cmp	x0, #0x0
    c860:	b.eq	c894 <PySequence_Fast@plt+0x8654>  // b.none
    c864:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    c868:	add	x0, x0, #0x430
    c86c:	ldr	x0, [x0]
    c870:	ldr	x2, [x0, #168]
    c874:	ldr	x0, [sp, #40]
    c878:	ldr	x3, [x0, #16]
    c87c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    c880:	ldr	x0, [x0, #4040]
    c884:	ldr	x0, [x0, #16]
    c888:	mov	x1, x0
    c88c:	mov	x0, x3
    c890:	blr	x2
    c894:	ldr	x0, [sp, #32]
    c898:	cmp	x0, #0x0
    c89c:	b.eq	c8ac <PySequence_Fast@plt+0x866c>  // b.none
    c8a0:	ldr	x0, [sp, #32]
    c8a4:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    c8a8:	b	c940 <PySequence_Fast@plt+0x8700>
    c8ac:	mov	x2, #0x0                   	// #0
    c8b0:	mov	x1, #0x0                   	// #0
    c8b4:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    c8b8:	add	x0, x0, #0x660
    c8bc:	bl	9544 <PySequence_Fast@plt+0x5304>
    c8c0:	str	x0, [sp, #32]
    c8c4:	ldr	x0, [sp, #32]
    c8c8:	cmp	x0, #0x0
    c8cc:	b.ne	c940 <PySequence_Fast@plt+0x8700>  // b.any
    c8d0:	ldr	x0, [sp, #40]
    c8d4:	ldr	x0, [x0, #32]
    c8d8:	str	x0, [sp, #88]
    c8dc:	ldr	x0, [sp, #88]
    c8e0:	cmp	x0, #0x0
    c8e4:	b.eq	c904 <PySequence_Fast@plt+0x86c4>  // b.none
    c8e8:	ldr	x0, [sp, #40]
    c8ec:	str	xzr, [x0, #32]
    c8f0:	ldr	x2, [sp, #88]
    c8f4:	mov	w1, #0xea4                 	// #3748
    c8f8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c8fc:	add	x0, x0, #0x808
    c900:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c904:	ldr	x0, [sp, #40]
    c908:	ldr	x0, [x0, #40]
    c90c:	str	x0, [sp, #80]
    c910:	ldr	x0, [sp, #80]
    c914:	cmp	x0, #0x0
    c918:	b.eq	c938 <PySequence_Fast@plt+0x86f8>  // b.none
    c91c:	ldr	x0, [sp, #40]
    c920:	str	xzr, [x0, #40]
    c924:	ldr	x2, [sp, #80]
    c928:	mov	w1, #0xea5                 	// #3749
    c92c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c930:	add	x0, x0, #0x808
    c934:	bl	4408 <PySequence_Fast@plt+0x1c8>
    c938:	mov	w0, #0xffffffff            	// #-1
    c93c:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    c940:	ldr	x0, [sp, #40]
    c944:	ldr	x1, [sp, #32]
    c948:	str	x1, [x0, #24]
    c94c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c950:	add	x1, x0, #0xe30
    c954:	ldr	x0, [sp, #32]
    c958:	bl	3d00 <PyObject_GetAttrString@plt>
    c95c:	mov	x1, x0
    c960:	ldr	x0, [sp, #40]
    c964:	str	x1, [x0, #48]
    c968:	ldr	x0, [sp, #40]
    c96c:	ldr	x0, [x0, #48]
    c970:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    c974:	cmp	w0, #0x0
    c978:	b.eq	c984 <PySequence_Fast@plt+0x8744>  // b.none
    c97c:	mov	w0, #0xffffffff            	// #-1
    c980:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    c984:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c988:	add	x1, x0, #0xe40
    c98c:	ldr	x0, [sp, #32]
    c990:	bl	3d00 <PyObject_GetAttrString@plt>
    c994:	mov	x1, x0
    c998:	ldr	x0, [sp, #40]
    c99c:	str	x1, [x0, #56]
    c9a0:	ldr	x0, [sp, #40]
    c9a4:	ldr	x0, [x0, #56]
    c9a8:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    c9ac:	cmp	w0, #0x0
    c9b0:	b.eq	c9bc <PySequence_Fast@plt+0x877c>  // b.none
    c9b4:	mov	w0, #0xffffffff            	// #-1
    c9b8:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    c9bc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c9c0:	add	x1, x0, #0xe48
    c9c4:	ldr	x0, [sp, #32]
    c9c8:	bl	3d00 <PyObject_GetAttrString@plt>
    c9cc:	mov	x1, x0
    c9d0:	ldr	x0, [sp, #40]
    c9d4:	str	x1, [x0, #64]
    c9d8:	ldr	x0, [sp, #40]
    c9dc:	ldr	x0, [x0, #64]
    c9e0:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    c9e4:	cmp	w0, #0x0
    c9e8:	b.eq	c9f4 <PySequence_Fast@plt+0x87b4>  // b.none
    c9ec:	mov	w0, #0xffffffff            	// #-1
    c9f0:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    c9f4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    c9f8:	add	x1, x0, #0xe50
    c9fc:	ldr	x0, [sp, #32]
    ca00:	bl	3d00 <PyObject_GetAttrString@plt>
    ca04:	mov	x1, x0
    ca08:	ldr	x0, [sp, #40]
    ca0c:	str	x1, [x0, #72]
    ca10:	ldr	x0, [sp, #40]
    ca14:	ldr	x0, [x0, #72]
    ca18:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    ca1c:	cmp	w0, #0x0
    ca20:	b.eq	ca2c <PySequence_Fast@plt+0x87ec>  // b.none
    ca24:	mov	w0, #0xffffffff            	// #-1
    ca28:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    ca2c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    ca30:	add	x1, x0, #0xe58
    ca34:	ldr	x0, [sp, #32]
    ca38:	bl	3d00 <PyObject_GetAttrString@plt>
    ca3c:	mov	x1, x0
    ca40:	ldr	x0, [sp, #40]
    ca44:	str	x1, [x0, #80]
    ca48:	ldr	x0, [sp, #40]
    ca4c:	ldr	x0, [x0, #80]
    ca50:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    ca54:	cmp	w0, #0x0
    ca58:	b.eq	ca64 <PySequence_Fast@plt+0x8824>  // b.none
    ca5c:	mov	w0, #0xffffffff            	// #-1
    ca60:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    ca64:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    ca68:	add	x1, x0, #0xe60
    ca6c:	ldr	x0, [sp, #32]
    ca70:	bl	3d00 <PyObject_GetAttrString@plt>
    ca74:	mov	x1, x0
    ca78:	ldr	x0, [sp, #40]
    ca7c:	str	x1, [x0, #88]
    ca80:	ldr	x0, [sp, #40]
    ca84:	ldr	x0, [x0, #88]
    ca88:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    ca8c:	cmp	w0, #0x0
    ca90:	b.eq	ca9c <PySequence_Fast@plt+0x885c>  // b.none
    ca94:	mov	w0, #0xffffffff            	// #-1
    ca98:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    ca9c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    caa0:	add	x1, x0, #0xe68
    caa4:	ldr	x0, [sp, #32]
    caa8:	bl	3d00 <PyObject_GetAttrString@plt>
    caac:	mov	x1, x0
    cab0:	ldr	x0, [sp, #40]
    cab4:	str	x1, [x0, #96]
    cab8:	ldr	x0, [sp, #40]
    cabc:	ldr	x0, [x0, #96]
    cac0:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    cac4:	cmp	w0, #0x0
    cac8:	b.eq	cad4 <PySequence_Fast@plt+0x8894>  // b.none
    cacc:	mov	w0, #0xffffffff            	// #-1
    cad0:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    cad4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    cad8:	add	x1, x0, #0xe70
    cadc:	ldr	x0, [sp, #32]
    cae0:	bl	3d00 <PyObject_GetAttrString@plt>
    cae4:	mov	x1, x0
    cae8:	ldr	x0, [sp, #40]
    caec:	str	x1, [x0, #112]
    caf0:	ldr	x0, [sp, #40]
    caf4:	ldr	x0, [x0, #112]
    caf8:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    cafc:	cmp	w0, #0x0
    cb00:	b.eq	cb0c <PySequence_Fast@plt+0x88cc>  // b.none
    cb04:	mov	w0, #0xffffffff            	// #-1
    cb08:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    cb0c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    cb10:	add	x1, x0, #0xe78
    cb14:	ldr	x0, [sp, #32]
    cb18:	bl	3d00 <PyObject_GetAttrString@plt>
    cb1c:	mov	x1, x0
    cb20:	ldr	x0, [sp, #40]
    cb24:	str	x1, [x0, #104]
    cb28:	ldr	x0, [sp, #40]
    cb2c:	ldr	x0, [x0, #104]
    cb30:	bl	c6b4 <PySequence_Fast@plt+0x8474>
    cb34:	cmp	w0, #0x0
    cb38:	b.eq	cb44 <PySequence_Fast@plt+0x8904>  // b.none
    cb3c:	mov	w0, #0xffffffff            	// #-1
    cb40:	b	cd08 <PySequence_Fast@plt+0x8ac8>
    cb44:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cb48:	add	x0, x0, #0x430
    cb4c:	ldr	x0, [x0]
    cb50:	ldr	x2, [x0, #136]
    cb54:	ldr	x0, [sp, #40]
    cb58:	ldr	x0, [x0, #16]
    cb5c:	ldr	x1, [sp, #40]
    cb60:	blr	x2
    cb64:	ldr	x0, [sp, #40]
    cb68:	ldr	x0, [x0, #48]
    cb6c:	cmp	x0, #0x0
    cb70:	b.ne	cb84 <PySequence_Fast@plt+0x8944>  // b.any
    cb74:	ldr	x0, [sp, #40]
    cb78:	ldr	x0, [x0, #56]
    cb7c:	cmp	x0, #0x0
    cb80:	b.eq	cbb4 <PySequence_Fast@plt+0x8974>  // b.none
    cb84:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cb88:	add	x0, x0, #0x430
    cb8c:	ldr	x0, [x0]
    cb90:	ldr	x3, [x0, #112]
    cb94:	ldr	x0, [sp, #40]
    cb98:	ldr	x4, [x0, #16]
    cb9c:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    cba0:	add	x2, x0, #0xf68
    cba4:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    cba8:	add	x1, x0, #0xd24
    cbac:	mov	x0, x4
    cbb0:	blr	x3
    cbb4:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cbb8:	add	x0, x0, #0x430
    cbbc:	ldr	x0, [x0]
    cbc0:	ldr	x3, [x0, #104]
    cbc4:	ldr	x0, [sp, #40]
    cbc8:	ldr	x4, [x0, #16]
    cbcc:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    cbd0:	add	x2, x0, #0xc54
    cbd4:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    cbd8:	add	x1, x0, #0x88c
    cbdc:	mov	x0, x4
    cbe0:	blr	x3
    cbe4:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cbe8:	add	x0, x0, #0x430
    cbec:	ldr	x0, [x0]
    cbf0:	ldr	x2, [x0, #96]
    cbf4:	ldr	x0, [sp, #40]
    cbf8:	ldr	x3, [x0, #16]
    cbfc:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    cc00:	add	x1, x0, #0x668
    cc04:	mov	x0, x3
    cc08:	blr	x2
    cc0c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cc10:	add	x0, x0, #0x430
    cc14:	ldr	x0, [x0]
    cc18:	ldr	x2, [x0, #80]
    cc1c:	ldr	x0, [sp, #40]
    cc20:	ldr	x3, [x0, #16]
    cc24:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    cc28:	add	x1, x0, #0xb74
    cc2c:	mov	x0, x3
    cc30:	blr	x2
    cc34:	ldr	x0, [sp, #40]
    cc38:	ldr	x0, [x0, #88]
    cc3c:	cmp	x0, #0x0
    cc40:	b.eq	cc6c <PySequence_Fast@plt+0x8a2c>  // b.none
    cc44:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cc48:	add	x0, x0, #0x430
    cc4c:	ldr	x0, [x0]
    cc50:	ldr	x2, [x0, #88]
    cc54:	ldr	x0, [sp, #40]
    cc58:	ldr	x3, [x0, #16]
    cc5c:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    cc60:	add	x1, x0, #0x8c
    cc64:	mov	x0, x3
    cc68:	blr	x2
    cc6c:	ldr	x0, [sp, #40]
    cc70:	ldr	x0, [x0, #96]
    cc74:	cmp	x0, #0x0
    cc78:	b.eq	cca4 <PySequence_Fast@plt+0x8a64>  // b.none
    cc7c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cc80:	add	x0, x0, #0x430
    cc84:	ldr	x0, [x0]
    cc88:	ldr	x2, [x0, #120]
    cc8c:	ldr	x0, [sp, #40]
    cc90:	ldr	x3, [x0, #16]
    cc94:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    cc98:	add	x1, x0, #0x3b8
    cc9c:	mov	x0, x3
    cca0:	blr	x2
    cca4:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cca8:	add	x0, x0, #0x430
    ccac:	ldr	x0, [x0]
    ccb0:	ldr	x2, [x0, #144]
    ccb4:	ldr	x0, [sp, #40]
    ccb8:	ldr	x3, [x0, #16]
    ccbc:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    ccc0:	add	x1, x0, #0x1c8
    ccc4:	mov	x0, x3
    ccc8:	blr	x2
    cccc:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    ccd0:	add	x0, x0, #0x430
    ccd4:	ldr	x0, [x0]
    ccd8:	ldr	x3, [x0, #128]
    ccdc:	ldr	x0, [sp, #40]
    cce0:	ldr	x4, [x0, #16]
    cce4:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    cce8:	add	x0, x0, #0x430
    ccec:	ldr	x0, [x0]
    ccf0:	ldr	x0, [x0, #160]
    ccf4:	mov	x2, #0x0                   	// #0
    ccf8:	mov	x1, x0
    ccfc:	mov	x0, x4
    cd00:	blr	x3
    cd04:	mov	w0, #0x0                   	// #0
    cd08:	ldp	x29, x30, [sp], #96
    cd0c:	ret
    cd10:	stp	x29, x30, [sp, #-96]!
    cd14:	mov	x29, sp
    cd18:	str	x0, [sp, #40]
    cd1c:	str	x1, [sp, #32]
    cd20:	str	x2, [sp, #24]
    cd24:	ldr	x0, [sp, #40]
    cd28:	ldr	x0, [x0, #112]
    cd2c:	cmp	x0, #0x0
    cd30:	b.eq	cd60 <PySequence_Fast@plt+0x8b20>  // b.none
    cd34:	ldr	x0, [sp, #40]
    cd38:	ldr	x0, [x0, #112]
    cd3c:	ldr	x2, [sp, #32]
    cd40:	ldr	x1, [sp, #24]
    cd44:	blr	x2
    cd48:	str	w0, [sp, #92]
    cd4c:	ldr	w0, [sp, #92]
    cd50:	cmp	w0, #0x0
    cd54:	b.eq	cd60 <PySequence_Fast@plt+0x8b20>  // b.none
    cd58:	ldr	w0, [sp, #92]
    cd5c:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cd60:	ldr	x0, [sp, #40]
    cd64:	ldr	x0, [x0, #96]
    cd68:	cmp	x0, #0x0
    cd6c:	b.eq	cd9c <PySequence_Fast@plt+0x8b5c>  // b.none
    cd70:	ldr	x0, [sp, #40]
    cd74:	ldr	x0, [x0, #96]
    cd78:	ldr	x2, [sp, #32]
    cd7c:	ldr	x1, [sp, #24]
    cd80:	blr	x2
    cd84:	str	w0, [sp, #88]
    cd88:	ldr	w0, [sp, #88]
    cd8c:	cmp	w0, #0x0
    cd90:	b.eq	cd9c <PySequence_Fast@plt+0x8b5c>  // b.none
    cd94:	ldr	w0, [sp, #88]
    cd98:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cd9c:	ldr	x0, [sp, #40]
    cda0:	ldr	x0, [x0, #88]
    cda4:	cmp	x0, #0x0
    cda8:	b.eq	cdd8 <PySequence_Fast@plt+0x8b98>  // b.none
    cdac:	ldr	x0, [sp, #40]
    cdb0:	ldr	x0, [x0, #88]
    cdb4:	ldr	x2, [sp, #32]
    cdb8:	ldr	x1, [sp, #24]
    cdbc:	blr	x2
    cdc0:	str	w0, [sp, #84]
    cdc4:	ldr	w0, [sp, #84]
    cdc8:	cmp	w0, #0x0
    cdcc:	b.eq	cdd8 <PySequence_Fast@plt+0x8b98>  // b.none
    cdd0:	ldr	w0, [sp, #84]
    cdd4:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cdd8:	ldr	x0, [sp, #40]
    cddc:	ldr	x0, [x0, #80]
    cde0:	cmp	x0, #0x0
    cde4:	b.eq	ce14 <PySequence_Fast@plt+0x8bd4>  // b.none
    cde8:	ldr	x0, [sp, #40]
    cdec:	ldr	x0, [x0, #80]
    cdf0:	ldr	x2, [sp, #32]
    cdf4:	ldr	x1, [sp, #24]
    cdf8:	blr	x2
    cdfc:	str	w0, [sp, #80]
    ce00:	ldr	w0, [sp, #80]
    ce04:	cmp	w0, #0x0
    ce08:	b.eq	ce14 <PySequence_Fast@plt+0x8bd4>  // b.none
    ce0c:	ldr	w0, [sp, #80]
    ce10:	b	cff8 <PySequence_Fast@plt+0x8db8>
    ce14:	ldr	x0, [sp, #40]
    ce18:	ldr	x0, [x0, #72]
    ce1c:	cmp	x0, #0x0
    ce20:	b.eq	ce50 <PySequence_Fast@plt+0x8c10>  // b.none
    ce24:	ldr	x0, [sp, #40]
    ce28:	ldr	x0, [x0, #72]
    ce2c:	ldr	x2, [sp, #32]
    ce30:	ldr	x1, [sp, #24]
    ce34:	blr	x2
    ce38:	str	w0, [sp, #76]
    ce3c:	ldr	w0, [sp, #76]
    ce40:	cmp	w0, #0x0
    ce44:	b.eq	ce50 <PySequence_Fast@plt+0x8c10>  // b.none
    ce48:	ldr	w0, [sp, #76]
    ce4c:	b	cff8 <PySequence_Fast@plt+0x8db8>
    ce50:	ldr	x0, [sp, #40]
    ce54:	ldr	x0, [x0, #64]
    ce58:	cmp	x0, #0x0
    ce5c:	b.eq	ce8c <PySequence_Fast@plt+0x8c4c>  // b.none
    ce60:	ldr	x0, [sp, #40]
    ce64:	ldr	x0, [x0, #64]
    ce68:	ldr	x2, [sp, #32]
    ce6c:	ldr	x1, [sp, #24]
    ce70:	blr	x2
    ce74:	str	w0, [sp, #72]
    ce78:	ldr	w0, [sp, #72]
    ce7c:	cmp	w0, #0x0
    ce80:	b.eq	ce8c <PySequence_Fast@plt+0x8c4c>  // b.none
    ce84:	ldr	w0, [sp, #72]
    ce88:	b	cff8 <PySequence_Fast@plt+0x8db8>
    ce8c:	ldr	x0, [sp, #40]
    ce90:	ldr	x0, [x0, #48]
    ce94:	cmp	x0, #0x0
    ce98:	b.eq	cec8 <PySequence_Fast@plt+0x8c88>  // b.none
    ce9c:	ldr	x0, [sp, #40]
    cea0:	ldr	x0, [x0, #48]
    cea4:	ldr	x2, [sp, #32]
    cea8:	ldr	x1, [sp, #24]
    ceac:	blr	x2
    ceb0:	str	w0, [sp, #68]
    ceb4:	ldr	w0, [sp, #68]
    ceb8:	cmp	w0, #0x0
    cebc:	b.eq	cec8 <PySequence_Fast@plt+0x8c88>  // b.none
    cec0:	ldr	w0, [sp, #68]
    cec4:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cec8:	ldr	x0, [sp, #40]
    cecc:	ldr	x0, [x0, #56]
    ced0:	cmp	x0, #0x0
    ced4:	b.eq	cf04 <PySequence_Fast@plt+0x8cc4>  // b.none
    ced8:	ldr	x0, [sp, #40]
    cedc:	ldr	x0, [x0, #56]
    cee0:	ldr	x2, [sp, #32]
    cee4:	ldr	x1, [sp, #24]
    cee8:	blr	x2
    ceec:	str	w0, [sp, #64]
    cef0:	ldr	w0, [sp, #64]
    cef4:	cmp	w0, #0x0
    cef8:	b.eq	cf04 <PySequence_Fast@plt+0x8cc4>  // b.none
    cefc:	ldr	w0, [sp, #64]
    cf00:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cf04:	ldr	x0, [sp, #40]
    cf08:	ldr	x0, [x0, #104]
    cf0c:	cmp	x0, #0x0
    cf10:	b.eq	cf40 <PySequence_Fast@plt+0x8d00>  // b.none
    cf14:	ldr	x0, [sp, #40]
    cf18:	ldr	x0, [x0, #104]
    cf1c:	ldr	x2, [sp, #32]
    cf20:	ldr	x1, [sp, #24]
    cf24:	blr	x2
    cf28:	str	w0, [sp, #60]
    cf2c:	ldr	w0, [sp, #60]
    cf30:	cmp	w0, #0x0
    cf34:	b.eq	cf40 <PySequence_Fast@plt+0x8d00>  // b.none
    cf38:	ldr	w0, [sp, #60]
    cf3c:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cf40:	ldr	x0, [sp, #40]
    cf44:	ldr	x0, [x0, #24]
    cf48:	cmp	x0, #0x0
    cf4c:	b.eq	cf7c <PySequence_Fast@plt+0x8d3c>  // b.none
    cf50:	ldr	x0, [sp, #40]
    cf54:	ldr	x0, [x0, #24]
    cf58:	ldr	x2, [sp, #32]
    cf5c:	ldr	x1, [sp, #24]
    cf60:	blr	x2
    cf64:	str	w0, [sp, #56]
    cf68:	ldr	w0, [sp, #56]
    cf6c:	cmp	w0, #0x0
    cf70:	b.eq	cf7c <PySequence_Fast@plt+0x8d3c>  // b.none
    cf74:	ldr	w0, [sp, #56]
    cf78:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cf7c:	ldr	x0, [sp, #40]
    cf80:	ldr	x0, [x0, #32]
    cf84:	cmp	x0, #0x0
    cf88:	b.eq	cfb8 <PySequence_Fast@plt+0x8d78>  // b.none
    cf8c:	ldr	x0, [sp, #40]
    cf90:	ldr	x0, [x0, #32]
    cf94:	ldr	x2, [sp, #32]
    cf98:	ldr	x1, [sp, #24]
    cf9c:	blr	x2
    cfa0:	str	w0, [sp, #52]
    cfa4:	ldr	w0, [sp, #52]
    cfa8:	cmp	w0, #0x0
    cfac:	b.eq	cfb8 <PySequence_Fast@plt+0x8d78>  // b.none
    cfb0:	ldr	w0, [sp, #52]
    cfb4:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cfb8:	ldr	x0, [sp, #40]
    cfbc:	ldr	x0, [x0, #40]
    cfc0:	cmp	x0, #0x0
    cfc4:	b.eq	cff4 <PySequence_Fast@plt+0x8db4>  // b.none
    cfc8:	ldr	x0, [sp, #40]
    cfcc:	ldr	x0, [x0, #40]
    cfd0:	ldr	x2, [sp, #32]
    cfd4:	ldr	x1, [sp, #24]
    cfd8:	blr	x2
    cfdc:	str	w0, [sp, #48]
    cfe0:	ldr	w0, [sp, #48]
    cfe4:	cmp	w0, #0x0
    cfe8:	b.eq	cff4 <PySequence_Fast@plt+0x8db4>  // b.none
    cfec:	ldr	w0, [sp, #48]
    cff0:	b	cff8 <PySequence_Fast@plt+0x8db8>
    cff4:	mov	w0, #0x0                   	// #0
    cff8:	ldp	x29, x30, [sp], #96
    cffc:	ret
    d000:	stp	x29, x30, [sp, #-144]!
    d004:	mov	x29, sp
    d008:	str	x0, [sp, #24]
    d00c:	ldr	x0, [sp, #24]
    d010:	ldr	x0, [x0, #16]
    d014:	cmp	x0, #0x0
    d018:	b.eq	d048 <PySequence_Fast@plt+0x8e08>  // b.none
    d01c:	ldr	x0, [sp, #24]
    d020:	ldr	x0, [x0, #16]
    d024:	str	x0, [sp, #136]
    d028:	ldr	x0, [sp, #24]
    d02c:	str	xzr, [x0, #16]
    d030:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    d034:	add	x0, x0, #0x430
    d038:	ldr	x0, [x0]
    d03c:	ldr	x1, [x0, #72]
    d040:	ldr	x0, [sp, #136]
    d044:	blr	x1
    d048:	ldr	x0, [sp, #24]
    d04c:	ldr	x0, [x0, #112]
    d050:	str	x0, [sp, #128]
    d054:	ldr	x0, [sp, #128]
    d058:	cmp	x0, #0x0
    d05c:	b.eq	d07c <PySequence_Fast@plt+0x8e3c>  // b.none
    d060:	ldr	x0, [sp, #24]
    d064:	str	xzr, [x0, #112]
    d068:	ldr	x2, [sp, #128]
    d06c:	mov	w1, #0xf18                 	// #3864
    d070:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d074:	add	x0, x0, #0x808
    d078:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d07c:	ldr	x0, [sp, #24]
    d080:	ldr	x0, [x0, #96]
    d084:	str	x0, [sp, #120]
    d088:	ldr	x0, [sp, #120]
    d08c:	cmp	x0, #0x0
    d090:	b.eq	d0b0 <PySequence_Fast@plt+0x8e70>  // b.none
    d094:	ldr	x0, [sp, #24]
    d098:	str	xzr, [x0, #96]
    d09c:	ldr	x2, [sp, #120]
    d0a0:	mov	w1, #0xf19                 	// #3865
    d0a4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d0a8:	add	x0, x0, #0x808
    d0ac:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d0b0:	ldr	x0, [sp, #24]
    d0b4:	ldr	x0, [x0, #88]
    d0b8:	str	x0, [sp, #112]
    d0bc:	ldr	x0, [sp, #112]
    d0c0:	cmp	x0, #0x0
    d0c4:	b.eq	d0e4 <PySequence_Fast@plt+0x8ea4>  // b.none
    d0c8:	ldr	x0, [sp, #24]
    d0cc:	str	xzr, [x0, #88]
    d0d0:	ldr	x2, [sp, #112]
    d0d4:	mov	w1, #0xf1a                 	// #3866
    d0d8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d0dc:	add	x0, x0, #0x808
    d0e0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d0e4:	ldr	x0, [sp, #24]
    d0e8:	ldr	x0, [x0, #80]
    d0ec:	str	x0, [sp, #104]
    d0f0:	ldr	x0, [sp, #104]
    d0f4:	cmp	x0, #0x0
    d0f8:	b.eq	d118 <PySequence_Fast@plt+0x8ed8>  // b.none
    d0fc:	ldr	x0, [sp, #24]
    d100:	str	xzr, [x0, #80]
    d104:	ldr	x2, [sp, #104]
    d108:	mov	w1, #0xf1b                 	// #3867
    d10c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d110:	add	x0, x0, #0x808
    d114:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d118:	ldr	x0, [sp, #24]
    d11c:	ldr	x0, [x0, #72]
    d120:	str	x0, [sp, #96]
    d124:	ldr	x0, [sp, #96]
    d128:	cmp	x0, #0x0
    d12c:	b.eq	d14c <PySequence_Fast@plt+0x8f0c>  // b.none
    d130:	ldr	x0, [sp, #24]
    d134:	str	xzr, [x0, #72]
    d138:	ldr	x2, [sp, #96]
    d13c:	mov	w1, #0xf1c                 	// #3868
    d140:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d144:	add	x0, x0, #0x808
    d148:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d14c:	ldr	x0, [sp, #24]
    d150:	ldr	x0, [x0, #64]
    d154:	str	x0, [sp, #88]
    d158:	ldr	x0, [sp, #88]
    d15c:	cmp	x0, #0x0
    d160:	b.eq	d180 <PySequence_Fast@plt+0x8f40>  // b.none
    d164:	ldr	x0, [sp, #24]
    d168:	str	xzr, [x0, #64]
    d16c:	ldr	x2, [sp, #88]
    d170:	mov	w1, #0xf1d                 	// #3869
    d174:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d178:	add	x0, x0, #0x808
    d17c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d180:	ldr	x0, [sp, #24]
    d184:	ldr	x0, [x0, #48]
    d188:	str	x0, [sp, #80]
    d18c:	ldr	x0, [sp, #80]
    d190:	cmp	x0, #0x0
    d194:	b.eq	d1b4 <PySequence_Fast@plt+0x8f74>  // b.none
    d198:	ldr	x0, [sp, #24]
    d19c:	str	xzr, [x0, #48]
    d1a0:	ldr	x2, [sp, #80]
    d1a4:	mov	w1, #0xf1e                 	// #3870
    d1a8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d1ac:	add	x0, x0, #0x808
    d1b0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d1b4:	ldr	x0, [sp, #24]
    d1b8:	ldr	x0, [x0, #56]
    d1bc:	str	x0, [sp, #72]
    d1c0:	ldr	x0, [sp, #72]
    d1c4:	cmp	x0, #0x0
    d1c8:	b.eq	d1e8 <PySequence_Fast@plt+0x8fa8>  // b.none
    d1cc:	ldr	x0, [sp, #24]
    d1d0:	str	xzr, [x0, #56]
    d1d4:	ldr	x2, [sp, #72]
    d1d8:	mov	w1, #0xf1f                 	// #3871
    d1dc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d1e0:	add	x0, x0, #0x808
    d1e4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d1e8:	ldr	x0, [sp, #24]
    d1ec:	ldr	x0, [x0, #104]
    d1f0:	str	x0, [sp, #64]
    d1f4:	ldr	x0, [sp, #64]
    d1f8:	cmp	x0, #0x0
    d1fc:	b.eq	d21c <PySequence_Fast@plt+0x8fdc>  // b.none
    d200:	ldr	x0, [sp, #24]
    d204:	str	xzr, [x0, #104]
    d208:	ldr	x2, [sp, #64]
    d20c:	mov	w1, #0xf20                 	// #3872
    d210:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d214:	add	x0, x0, #0x808
    d218:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d21c:	ldr	x0, [sp, #24]
    d220:	ldr	x0, [x0, #24]
    d224:	str	x0, [sp, #56]
    d228:	ldr	x0, [sp, #56]
    d22c:	cmp	x0, #0x0
    d230:	b.eq	d250 <PySequence_Fast@plt+0x9010>  // b.none
    d234:	ldr	x0, [sp, #24]
    d238:	str	xzr, [x0, #24]
    d23c:	ldr	x2, [sp, #56]
    d240:	mov	w1, #0xf22                 	// #3874
    d244:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d248:	add	x0, x0, #0x808
    d24c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d250:	ldr	x0, [sp, #24]
    d254:	ldr	x0, [x0, #32]
    d258:	str	x0, [sp, #48]
    d25c:	ldr	x0, [sp, #48]
    d260:	cmp	x0, #0x0
    d264:	b.eq	d284 <PySequence_Fast@plt+0x9044>  // b.none
    d268:	ldr	x0, [sp, #24]
    d26c:	str	xzr, [x0, #32]
    d270:	ldr	x2, [sp, #48]
    d274:	mov	w1, #0xf23                 	// #3875
    d278:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d27c:	add	x0, x0, #0x808
    d280:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d284:	ldr	x0, [sp, #24]
    d288:	ldr	x0, [x0, #40]
    d28c:	str	x0, [sp, #40]
    d290:	ldr	x0, [sp, #40]
    d294:	cmp	x0, #0x0
    d298:	b.eq	d2b8 <PySequence_Fast@plt+0x9078>  // b.none
    d29c:	ldr	x0, [sp, #24]
    d2a0:	str	xzr, [x0, #40]
    d2a4:	ldr	x2, [sp, #40]
    d2a8:	mov	w1, #0xf24                 	// #3876
    d2ac:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d2b0:	add	x0, x0, #0x808
    d2b4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d2b8:	mov	w0, #0x0                   	// #0
    d2bc:	ldp	x29, x30, [sp], #144
    d2c0:	ret
    d2c4:	stp	x29, x30, [sp, #-32]!
    d2c8:	mov	x29, sp
    d2cc:	str	x0, [sp, #24]
    d2d0:	ldr	x0, [sp, #24]
    d2d4:	bl	4220 <PyObject_GC_UnTrack@plt>
    d2d8:	ldr	x0, [sp, #24]
    d2dc:	bl	d000 <PySequence_Fast@plt+0x8dc0>
    d2e0:	ldr	x0, [sp, #24]
    d2e4:	ldr	x0, [x0, #8]
    d2e8:	ldr	x1, [x0, #320]
    d2ec:	ldr	x0, [sp, #24]
    d2f0:	blr	x1
    d2f4:	nop
    d2f8:	ldp	x29, x30, [sp], #32
    d2fc:	ret
    d300:	stp	x29, x30, [sp, #-80]!
    d304:	mov	x29, sp
    d308:	stp	x19, x20, [sp, #16]
    d30c:	str	x0, [sp, #56]
    d310:	str	x1, [sp, #48]
    d314:	str	w2, [sp, #44]
    d318:	str	w3, [sp, #40]
    d31c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    d320:	add	x0, x0, #0x430
    d324:	ldr	x0, [x0]
    d328:	ldr	x4, [x0, #56]
    d32c:	ldr	x0, [sp, #56]
    d330:	ldr	x0, [x0, #16]
    d334:	ldr	w3, [sp, #40]
    d338:	ldr	w2, [sp, #44]
    d33c:	ldr	x1, [sp, #48]
    d340:	blr	x4
    d344:	str	w0, [sp, #76]
    d348:	bl	3f80 <PyErr_Occurred@plt>
    d34c:	cmp	x0, #0x0
    d350:	b.eq	d35c <PySequence_Fast@plt+0x911c>  // b.none
    d354:	mov	x0, #0x0                   	// #0
    d358:	b	d3f4 <PySequence_Fast@plt+0x91b4>
    d35c:	ldr	w0, [sp, #76]
    d360:	cmp	w0, #0x0
    d364:	b.ne	d3e0 <PySequence_Fast@plt+0x91a0>  // b.any
    d368:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    d36c:	add	x0, x0, #0x430
    d370:	ldr	x0, [x0]
    d374:	ldr	x1, [x0, #32]
    d378:	ldr	x0, [sp, #56]
    d37c:	ldr	x0, [x0, #16]
    d380:	blr	x1
    d384:	mov	w19, w0
    d388:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    d38c:	add	x0, x0, #0x430
    d390:	ldr	x0, [x0]
    d394:	ldr	x1, [x0, #48]
    d398:	ldr	x0, [sp, #56]
    d39c:	ldr	x0, [x0, #16]
    d3a0:	blr	x1
    d3a4:	mov	x20, x0
    d3a8:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    d3ac:	add	x0, x0, #0x430
    d3b0:	ldr	x0, [x0]
    d3b4:	ldr	x1, [x0, #40]
    d3b8:	ldr	x0, [sp, #56]
    d3bc:	ldr	x0, [x0, #16]
    d3c0:	blr	x1
    d3c4:	mov	x3, #0x0                   	// #0
    d3c8:	mov	x2, x0
    d3cc:	mov	x1, x20
    d3d0:	mov	w0, w19
    d3d4:	bl	b44c <PySequence_Fast@plt+0x720c>
    d3d8:	mov	x0, #0x0                   	// #0
    d3dc:	b	d3f4 <PySequence_Fast@plt+0x91b4>
    d3e0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d3e4:	ldr	x0, [x0, #3976]
    d3e8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    d3ec:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d3f0:	ldr	x0, [x0, #3976]
    d3f4:	ldp	x19, x20, [sp, #16]
    d3f8:	ldp	x29, x30, [sp], #80
    d3fc:	ret
    d400:	stp	x29, x30, [sp, #-48]!
    d404:	mov	x29, sp
    d408:	str	x0, [sp, #24]
    d40c:	mov	w3, #0x1                   	// #1
    d410:	mov	w2, #0x0                   	// #0
    d414:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d418:	add	x1, x0, #0x8d0
    d41c:	ldr	x0, [sp, #24]
    d420:	bl	d300 <PySequence_Fast@plt+0x90c0>
    d424:	str	x0, [sp, #40]
    d428:	ldr	x0, [sp, #40]
    d42c:	cmp	x0, #0x0
    d430:	b.ne	d43c <PySequence_Fast@plt+0x91fc>  // b.any
    d434:	mov	x0, #0x0                   	// #0
    d438:	b	d4b4 <PySequence_Fast@plt+0x9274>
    d43c:	ldr	x0, [sp, #24]
    d440:	ldr	x0, [x0, #24]
    d444:	ldr	x1, [x0, #8]
    d448:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    d44c:	add	x0, x0, #0x660
    d450:	cmp	x1, x0
    d454:	b.ne	d47c <PySequence_Fast@plt+0x923c>  // b.any
    d458:	ldr	x2, [sp, #40]
    d45c:	mov	w1, #0xf5a                 	// #3930
    d460:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d464:	add	x0, x0, #0x808
    d468:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d46c:	ldr	x0, [sp, #24]
    d470:	ldr	x0, [x0, #24]
    d474:	bl	b190 <PySequence_Fast@plt+0x6f50>
    d478:	b	d4b4 <PySequence_Fast@plt+0x9274>
    d47c:	ldr	x0, [sp, #24]
    d480:	ldr	x0, [x0, #112]
    d484:	cmp	x0, #0x0
    d488:	b.eq	d4b0 <PySequence_Fast@plt+0x9270>  // b.none
    d48c:	ldr	x2, [sp, #40]
    d490:	mov	w1, #0xf5e                 	// #3934
    d494:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d498:	add	x0, x0, #0x808
    d49c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d4a0:	ldr	x0, [sp, #24]
    d4a4:	ldr	x0, [x0, #112]
    d4a8:	bl	45e8 <PySequence_Fast@plt+0x3a8>
    d4ac:	b	d4b4 <PySequence_Fast@plt+0x9274>
    d4b0:	ldr	x0, [sp, #40]
    d4b4:	ldp	x29, x30, [sp], #48
    d4b8:	ret
    d4bc:	stp	x29, x30, [sp, #-144]!
    d4c0:	mov	x29, sp
    d4c4:	str	x0, [sp, #24]
    d4c8:	str	x1, [sp, #16]
    d4cc:	ldr	x0, [sp, #16]
    d4d0:	ldr	x0, [x0, #8]
    d4d4:	ldr	x0, [x0, #168]
    d4d8:	and	x0, x0, #0x10000000
    d4dc:	cmp	x0, #0x0
    d4e0:	b.eq	d584 <PySequence_Fast@plt+0x9344>  // b.none
    d4e4:	add	x0, sp, #0x78
    d4e8:	mov	x1, x0
    d4ec:	ldr	x0, [sp, #16]
    d4f0:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    d4f4:	str	x0, [sp, #128]
    d4f8:	ldr	x0, [sp, #128]
    d4fc:	cmp	x0, #0x0
    d500:	b.ne	d50c <PySequence_Fast@plt+0x92cc>  // b.any
    d504:	mov	x0, #0x0                   	// #0
    d508:	b	d610 <PySequence_Fast@plt+0x93d0>
    d50c:	ldr	x1, [sp, #120]
    d510:	mov	x0, #0x7fffffff            	// #2147483647
    d514:	cmp	x1, x0
    d518:	b.le	d540 <PySequence_Fast@plt+0x9300>
    d51c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d520:	ldr	x0, [x0, #3968]
    d524:	ldr	x2, [x0]
    d528:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d52c:	add	x1, x0, #0xe80
    d530:	mov	x0, x2
    d534:	bl	3de0 <PyErr_SetString@plt>
    d538:	mov	x0, #0x0                   	// #0
    d53c:	b	d610 <PySequence_Fast@plt+0x93d0>
    d540:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    d544:	add	x0, x0, #0x430
    d548:	ldr	x0, [x0]
    d54c:	ldr	x2, [x0, #152]
    d550:	ldr	x0, [sp, #24]
    d554:	ldr	x3, [x0, #16]
    d558:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d55c:	add	x1, x0, #0xea0
    d560:	mov	x0, x3
    d564:	blr	x2
    d568:	ldr	x0, [sp, #120]
    d56c:	mov	w3, #0x0                   	// #0
    d570:	mov	w2, w0
    d574:	ldr	x1, [sp, #128]
    d578:	ldr	x0, [sp, #24]
    d57c:	bl	d300 <PySequence_Fast@plt+0x90c0>
    d580:	b	d610 <PySequence_Fast@plt+0x93d0>
    d584:	add	x0, sp, #0x28
    d588:	mov	w2, #0x0                   	// #0
    d58c:	mov	x1, x0
    d590:	ldr	x0, [sp, #16]
    d594:	bl	40a0 <PyObject_GetBuffer@plt>
    d598:	cmp	w0, #0x0
    d59c:	b.ge	d5a8 <PySequence_Fast@plt+0x9368>  // b.tcont
    d5a0:	mov	x0, #0x0                   	// #0
    d5a4:	b	d610 <PySequence_Fast@plt+0x93d0>
    d5a8:	ldr	x1, [sp, #56]
    d5ac:	mov	x0, #0x7fffffff            	// #2147483647
    d5b0:	cmp	x1, x0
    d5b4:	b.le	d5e4 <PySequence_Fast@plt+0x93a4>
    d5b8:	add	x0, sp, #0x28
    d5bc:	bl	3ce0 <PyBuffer_Release@plt>
    d5c0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d5c4:	ldr	x0, [x0, #3968]
    d5c8:	ldr	x2, [x0]
    d5cc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d5d0:	add	x1, x0, #0xe80
    d5d4:	mov	x0, x2
    d5d8:	bl	3de0 <PyErr_SetString@plt>
    d5dc:	mov	x0, #0x0                   	// #0
    d5e0:	b	d610 <PySequence_Fast@plt+0x93d0>
    d5e4:	ldr	x0, [sp, #40]
    d5e8:	ldr	x1, [sp, #56]
    d5ec:	mov	w3, #0x0                   	// #0
    d5f0:	mov	w2, w1
    d5f4:	mov	x1, x0
    d5f8:	ldr	x0, [sp, #24]
    d5fc:	bl	d300 <PySequence_Fast@plt+0x90c0>
    d600:	str	x0, [sp, #136]
    d604:	add	x0, sp, #0x28
    d608:	bl	3ce0 <PyBuffer_Release@plt>
    d60c:	ldr	x0, [sp, #136]
    d610:	ldp	x29, x30, [sp], #144
    d614:	ret
    d618:	stp	x29, x30, [sp, #-64]!
    d61c:	mov	x29, sp
    d620:	str	x0, [sp, #24]
    d624:	str	x1, [sp, #16]
    d628:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d62c:	add	x1, x0, #0xea8
    d630:	ldr	x0, [sp, #16]
    d634:	bl	3d00 <PyObject_GetAttrString@plt>
    d638:	str	x0, [sp, #48]
    d63c:	ldr	x0, [sp, #48]
    d640:	cmp	x0, #0x0
    d644:	b.ne	d650 <PySequence_Fast@plt+0x9410>  // b.any
    d648:	mov	x0, #0x0                   	// #0
    d64c:	b	d8cc <PySequence_Fast@plt+0x968c>
    d650:	mov	w2, #0x10000               	// #65536
    d654:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d658:	add	x1, x0, #0xeb0
    d65c:	ldr	x0, [sp, #48]
    d660:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    d664:	str	x0, [sp, #56]
    d668:	ldr	x0, [sp, #56]
    d66c:	cmp	x0, #0x0
    d670:	b.ne	d690 <PySequence_Fast@plt+0x9450>  // b.any
    d674:	ldr	x2, [sp, #48]
    d678:	mov	w1, #0xfae                 	// #4014
    d67c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d680:	add	x0, x0, #0x808
    d684:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d688:	mov	x0, #0x0                   	// #0
    d68c:	b	d8cc <PySequence_Fast@plt+0x968c>
    d690:	ldr	x0, [sp, #56]
    d694:	ldr	x1, [x0, #8]
    d698:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d69c:	ldr	x0, [x0, #4032]
    d6a0:	cmp	x1, x0
    d6a4:	b.ne	d734 <PySequence_Fast@plt+0x94f4>  // b.any
    d6a8:	ldr	x0, [sp, #56]
    d6ac:	ldr	x0, [x0, #16]
    d6b0:	cmp	x0, #0x0
    d6b4:	b.ne	d6d0 <PySequence_Fast@plt+0x9490>  // b.any
    d6b8:	ldr	x2, [sp, #56]
    d6bc:	mov	w1, #0xfb5                 	// #4021
    d6c0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d6c4:	add	x0, x0, #0x808
    d6c8:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d6cc:	b	d84c <PySequence_Fast@plt+0x960c>
    d6d0:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d6d4:	add	x2, x0, #0xeb8
    d6d8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d6dc:	add	x1, x0, #0xea0
    d6e0:	ldr	x0, [sp, #56]
    d6e4:	bl	3e20 <PyUnicode_AsEncodedString@plt>
    d6e8:	str	x0, [sp, #40]
    d6ec:	ldr	x2, [sp, #56]
    d6f0:	mov	w1, #0xfb9                 	// #4025
    d6f4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d6f8:	add	x0, x0, #0x808
    d6fc:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d700:	ldr	x0, [sp, #40]
    d704:	cmp	x0, #0x0
    d708:	b.ne	d728 <PySequence_Fast@plt+0x94e8>  // b.any
    d70c:	ldr	x2, [sp, #48]
    d710:	mov	w1, #0xfbc                 	// #4028
    d714:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d718:	add	x0, x0, #0x808
    d71c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d720:	mov	x0, #0x0                   	// #0
    d724:	b	d8cc <PySequence_Fast@plt+0x968c>
    d728:	ldr	x0, [sp, #40]
    d72c:	str	x0, [sp, #56]
    d730:	b	d774 <PySequence_Fast@plt+0x9534>
    d734:	ldr	x0, [sp, #56]
    d738:	ldr	x1, [x0, #8]
    d73c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d740:	ldr	x0, [x0, #3912]
    d744:	cmp	x1, x0
    d748:	b.ne	d75c <PySequence_Fast@plt+0x951c>  // b.any
    d74c:	ldr	x0, [sp, #56]
    d750:	ldr	x0, [x0, #16]
    d754:	cmp	x0, #0x0
    d758:	b.ne	d774 <PySequence_Fast@plt+0x9534>  // b.any
    d75c:	ldr	x2, [sp, #56]
    d760:	mov	w1, #0xfc2                 	// #4034
    d764:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d768:	add	x0, x0, #0x808
    d76c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d770:	b	d84c <PySequence_Fast@plt+0x960c>
    d774:	ldr	x0, [sp, #56]
    d778:	ldr	x1, [x0, #16]
    d77c:	mov	x0, #0x7fffffff            	// #2147483647
    d780:	cmp	x1, x0
    d784:	b.le	d7d4 <PySequence_Fast@plt+0x9594>
    d788:	ldr	x2, [sp, #56]
    d78c:	mov	w1, #0xfc7                 	// #4039
    d790:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d794:	add	x0, x0, #0x808
    d798:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d79c:	ldr	x2, [sp, #48]
    d7a0:	mov	w1, #0xfc8                 	// #4040
    d7a4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d7a8:	add	x0, x0, #0x808
    d7ac:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d7b0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d7b4:	ldr	x0, [x0, #3968]
    d7b8:	ldr	x2, [x0]
    d7bc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d7c0:	add	x1, x0, #0xe80
    d7c4:	mov	x0, x2
    d7c8:	bl	3de0 <PyErr_SetString@plt>
    d7cc:	mov	x0, #0x0                   	// #0
    d7d0:	b	d8cc <PySequence_Fast@plt+0x968c>
    d7d4:	ldr	x0, [sp, #56]
    d7d8:	add	x1, x0, #0x20
    d7dc:	ldr	x0, [sp, #56]
    d7e0:	ldr	x0, [x0, #16]
    d7e4:	mov	w3, #0x0                   	// #0
    d7e8:	mov	w2, w0
    d7ec:	ldr	x0, [sp, #24]
    d7f0:	bl	d300 <PySequence_Fast@plt+0x90c0>
    d7f4:	str	x0, [sp, #32]
    d7f8:	ldr	x2, [sp, #56]
    d7fc:	mov	w1, #0xfd0                 	// #4048
    d800:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d804:	add	x0, x0, #0x808
    d808:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d80c:	ldr	x0, [sp, #32]
    d810:	cmp	x0, #0x0
    d814:	b.ne	d834 <PySequence_Fast@plt+0x95f4>  // b.any
    d818:	ldr	x2, [sp, #48]
    d81c:	mov	w1, #0xfd3                 	// #4051
    d820:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d824:	add	x0, x0, #0x808
    d828:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d82c:	mov	x0, #0x0                   	// #0
    d830:	b	d8cc <PySequence_Fast@plt+0x968c>
    d834:	ldr	x2, [sp, #32]
    d838:	mov	w1, #0xfd6                 	// #4054
    d83c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d840:	add	x0, x0, #0x808
    d844:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d848:	b	d650 <PySequence_Fast@plt+0x9410>
    d84c:	ldr	x2, [sp, #48]
    d850:	mov	w1, #0xfda                 	// #4058
    d854:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d858:	add	x0, x0, #0x808
    d85c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d860:	mov	w3, #0x1                   	// #1
    d864:	mov	w2, #0x0                   	// #0
    d868:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d86c:	add	x1, x0, #0x8d0
    d870:	ldr	x0, [sp, #24]
    d874:	bl	d300 <PySequence_Fast@plt+0x90c0>
    d878:	str	x0, [sp, #32]
    d87c:	ldr	x0, [sp, #32]
    d880:	cmp	x0, #0x0
    d884:	b.eq	d8c8 <PySequence_Fast@plt+0x9688>  // b.none
    d888:	ldr	x0, [sp, #24]
    d88c:	ldr	x0, [x0, #24]
    d890:	ldr	x1, [x0, #8]
    d894:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    d898:	add	x0, x0, #0x660
    d89c:	cmp	x1, x0
    d8a0:	b.ne	d8c8 <PySequence_Fast@plt+0x9688>  // b.any
    d8a4:	ldr	x2, [sp, #32]
    d8a8:	mov	w1, #0xfdf                 	// #4063
    d8ac:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d8b0:	add	x0, x0, #0x808
    d8b4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d8b8:	ldr	x0, [sp, #24]
    d8bc:	ldr	x0, [x0, #24]
    d8c0:	bl	b190 <PySequence_Fast@plt+0x6f50>
    d8c4:	b	d8cc <PySequence_Fast@plt+0x968c>
    d8c8:	ldr	x0, [sp, #32]
    d8cc:	ldp	x29, x30, [sp], #64
    d8d0:	ret
    d8d4:	stp	x29, x30, [sp, #-208]!
    d8d8:	mov	x29, sp
    d8dc:	str	x0, [sp, #40]
    d8e0:	str	x1, [sp, #32]
    d8e4:	str	x2, [sp, #24]
    d8e8:	ldr	x0, [sp, #40]
    d8ec:	ldr	x0, [x0, #24]
    d8f0:	ldr	x1, [x0, #8]
    d8f4:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    d8f8:	add	x0, x0, #0x660
    d8fc:	cmp	x1, x0
    d900:	b.eq	d928 <PySequence_Fast@plt+0x96e8>  // b.none
    d904:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    d908:	ldr	x0, [x0, #3944]
    d90c:	ldr	x2, [x0]
    d910:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d914:	add	x1, x0, #0xec8
    d918:	mov	x0, x2
    d91c:	bl	3de0 <PyErr_SetString@plt>
    d920:	mov	x0, #0x0                   	// #0
    d924:	b	dec4 <PySequence_Fast@plt+0x9c84>
    d928:	ldr	x0, [sp, #40]
    d92c:	ldr	x0, [x0, #24]
    d930:	str	x0, [sp, #184]
    d934:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d938:	add	x1, x0, #0xf10
    d93c:	ldr	x0, [sp, #32]
    d940:	bl	3d00 <PyObject_GetAttrString@plt>
    d944:	str	x0, [sp, #176]
    d948:	ldr	x0, [sp, #176]
    d94c:	cmp	x0, #0x0
    d950:	b.ne	d95c <PySequence_Fast@plt+0x971c>  // b.any
    d954:	mov	x0, #0x0                   	// #0
    d958:	b	dec4 <PySequence_Fast@plt+0x9c84>
    d95c:	ldr	x0, [sp, #184]
    d960:	ldr	x0, [x0, #96]
    d964:	str	x0, [sp, #168]
    d968:	ldr	x0, [sp, #184]
    d96c:	ldr	x1, [sp, #176]
    d970:	str	x1, [x0, #96]
    d974:	ldr	x0, [sp, #168]
    d978:	bl	4480 <PySequence_Fast@plt+0x240>
    d97c:	ldr	x0, [sp, #184]
    d980:	ldr	x0, [x0, #104]
    d984:	str	x0, [sp, #160]
    d988:	ldr	x0, [sp, #160]
    d98c:	cmp	x0, #0x0
    d990:	b.eq	d9b0 <PySequence_Fast@plt+0x9770>  // b.none
    d994:	ldr	x0, [sp, #184]
    d998:	str	xzr, [x0, #104]
    d99c:	ldr	x2, [sp, #160]
    d9a0:	mov	w1, #0x100b                	// #4107
    d9a4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d9a8:	add	x0, x0, #0x808
    d9ac:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d9b0:	ldr	x0, [sp, #184]
    d9b4:	ldr	x0, [x0, #112]
    d9b8:	str	x0, [sp, #152]
    d9bc:	ldr	x0, [sp, #152]
    d9c0:	cmp	x0, #0x0
    d9c4:	b.eq	d9e4 <PySequence_Fast@plt+0x97a4>  // b.none
    d9c8:	ldr	x0, [sp, #184]
    d9cc:	str	xzr, [x0, #112]
    d9d0:	ldr	x2, [sp, #152]
    d9d4:	mov	w1, #0x100c                	// #4108
    d9d8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    d9dc:	add	x0, x0, #0x808
    d9e0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    d9e4:	ldr	x0, [sp, #184]
    d9e8:	ldr	x0, [x0, #120]
    d9ec:	str	x0, [sp, #144]
    d9f0:	ldr	x0, [sp, #144]
    d9f4:	cmp	x0, #0x0
    d9f8:	b.eq	da18 <PySequence_Fast@plt+0x97d8>  // b.none
    d9fc:	ldr	x0, [sp, #184]
    da00:	str	xzr, [x0, #120]
    da04:	ldr	x2, [sp, #144]
    da08:	mov	w1, #0x100d                	// #4109
    da0c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    da10:	add	x0, x0, #0x808
    da14:	bl	4408 <PySequence_Fast@plt+0x1c8>
    da18:	ldr	x0, [sp, #184]
    da1c:	ldr	x0, [x0, #128]
    da20:	str	x0, [sp, #136]
    da24:	ldr	x0, [sp, #136]
    da28:	cmp	x0, #0x0
    da2c:	b.eq	da4c <PySequence_Fast@plt+0x980c>  // b.none
    da30:	ldr	x0, [sp, #184]
    da34:	str	xzr, [x0, #128]
    da38:	ldr	x2, [sp, #136]
    da3c:	mov	w1, #0x100e                	// #4110
    da40:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    da44:	add	x0, x0, #0x808
    da48:	bl	4408 <PySequence_Fast@plt+0x1c8>
    da4c:	ldr	x0, [sp, #184]
    da50:	ldr	x0, [x0, #136]
    da54:	str	x0, [sp, #128]
    da58:	ldr	x0, [sp, #128]
    da5c:	cmp	x0, #0x0
    da60:	b.eq	da80 <PySequence_Fast@plt+0x9840>  // b.none
    da64:	ldr	x0, [sp, #184]
    da68:	str	xzr, [x0, #136]
    da6c:	ldr	x2, [sp, #128]
    da70:	mov	w1, #0x100f                	// #4111
    da74:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    da78:	add	x0, x0, #0x808
    da7c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    da80:	ldr	x0, [sp, #184]
    da84:	ldr	x0, [x0, #144]
    da88:	str	x0, [sp, #120]
    da8c:	ldr	x0, [sp, #120]
    da90:	cmp	x0, #0x0
    da94:	b.eq	dab4 <PySequence_Fast@plt+0x9874>  // b.none
    da98:	ldr	x0, [sp, #184]
    da9c:	str	xzr, [x0, #144]
    daa0:	ldr	x2, [sp, #120]
    daa4:	mov	w1, #0x1010                	// #4112
    daa8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    daac:	add	x0, x0, #0x808
    dab0:	bl	4408 <PySequence_Fast@plt+0x1c8>
    dab4:	ldr	x1, [sp, #24]
    dab8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    dabc:	ldr	x0, [x0, #3976]
    dac0:	cmp	x1, x0
    dac4:	b.ne	daf8 <PySequence_Fast@plt+0x98b8>  // b.any
    dac8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dacc:	add	x0, x0, #0xe58
    dad0:	bl	4100 <PyUnicode_FromString@plt>
    dad4:	mov	x1, x0
    dad8:	ldr	x0, [sp, #184]
    dadc:	str	x1, [x0, #112]
    dae0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    dae4:	ldr	x0, [x0, #3976]
    dae8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    daec:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    daf0:	ldr	x0, [x0, #3976]
    daf4:	b	dec4 <PySequence_Fast@plt+0x9c84>
    daf8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dafc:	add	x1, x0, #0xf18
    db00:	ldr	x0, [sp, #24]
    db04:	bl	4240 <PySequence_Fast@plt>
    db08:	str	x0, [sp, #112]
    db0c:	ldr	x0, [sp, #112]
    db10:	cmp	x0, #0x0
    db14:	b.ne	db20 <PySequence_Fast@plt+0x98e0>  // b.any
    db18:	mov	x0, #0x0                   	// #0
    db1c:	b	dec4 <PySequence_Fast@plt+0x9c84>
    db20:	str	xzr, [sp, #200]
    db24:	b	de88 <PySequence_Fast@plt+0x9c48>
    db28:	ldr	x0, [sp, #112]
    db2c:	ldr	x0, [x0, #8]
    db30:	ldr	x0, [x0, #168]
    db34:	and	x0, x0, #0x2000000
    db38:	cmp	x0, #0x0
    db3c:	b.eq	db5c <PySequence_Fast@plt+0x991c>  // b.none
    db40:	ldr	x0, [sp, #112]
    db44:	ldr	x1, [x0, #24]
    db48:	ldr	x0, [sp, #200]
    db4c:	lsl	x0, x0, #3
    db50:	add	x0, x1, x0
    db54:	ldr	x0, [x0]
    db58:	b	db74 <PySequence_Fast@plt+0x9934>
    db5c:	ldr	x1, [sp, #112]
    db60:	ldr	x0, [sp, #200]
    db64:	add	x0, x0, #0x2
    db68:	lsl	x0, x0, #3
    db6c:	add	x0, x1, x0
    db70:	ldr	x0, [x0, #8]
    db74:	str	x0, [sp, #104]
    db78:	str	xzr, [sp, #192]
    db7c:	ldr	x0, [sp, #104]
    db80:	ldr	x0, [x0, #8]
    db84:	ldr	x0, [x0, #168]
    db88:	and	x0, x0, #0x10000000
    db8c:	cmp	x0, #0x0
    db90:	b.eq	dba4 <PySequence_Fast@plt+0x9964>  // b.none
    db94:	ldr	x0, [sp, #104]
    db98:	bl	40c0 <PyUnicode_AsUTF8@plt>
    db9c:	str	x0, [sp, #192]
    dba0:	b	dbc8 <PySequence_Fast@plt+0x9988>
    dba4:	ldr	x0, [sp, #104]
    dba8:	ldr	x0, [x0, #8]
    dbac:	ldr	x0, [x0, #168]
    dbb0:	and	x0, x0, #0x8000000
    dbb4:	cmp	x0, #0x0
    dbb8:	b.eq	dbc8 <PySequence_Fast@plt+0x9988>  // b.none
    dbbc:	ldr	x0, [sp, #104]
    dbc0:	add	x0, x0, #0x20
    dbc4:	str	x0, [sp, #192]
    dbc8:	ldr	x0, [sp, #192]
    dbcc:	cmp	x0, #0x0
    dbd0:	b.ne	dc0c <PySequence_Fast@plt+0x99cc>  // b.any
    dbd4:	ldr	x2, [sp, #112]
    dbd8:	mov	w1, #0x1026                	// #4134
    dbdc:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dbe0:	add	x0, x0, #0x808
    dbe4:	bl	4408 <PySequence_Fast@plt+0x1c8>
    dbe8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    dbec:	ldr	x0, [x0, #3928]
    dbf0:	ldr	x2, [x0]
    dbf4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dbf8:	add	x1, x0, #0xf38
    dbfc:	mov	x0, x2
    dc00:	bl	4180 <PyErr_Format@plt>
    dc04:	mov	x0, #0x0                   	// #0
    dc08:	b	dec4 <PySequence_Fast@plt+0x9c84>
    dc0c:	ldr	x0, [sp, #104]
    dc10:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    dc14:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dc18:	add	x1, x0, #0xe48
    dc1c:	ldr	x0, [sp, #192]
    dc20:	bl	3ff0 <strcmp@plt>
    dc24:	cmp	w0, #0x0
    dc28:	b.ne	dc50 <PySequence_Fast@plt+0x9a10>  // b.any
    dc2c:	ldr	x0, [sp, #184]
    dc30:	ldr	x0, [x0, #104]
    dc34:	str	x0, [sp, #56]
    dc38:	ldr	x0, [sp, #184]
    dc3c:	ldr	x1, [sp, #104]
    dc40:	str	x1, [x0, #104]
    dc44:	ldr	x0, [sp, #56]
    dc48:	bl	4480 <PySequence_Fast@plt+0x240>
    dc4c:	b	de7c <PySequence_Fast@plt+0x9c3c>
    dc50:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dc54:	add	x1, x0, #0xe58
    dc58:	ldr	x0, [sp, #192]
    dc5c:	bl	3ff0 <strcmp@plt>
    dc60:	cmp	w0, #0x0
    dc64:	b.ne	dc8c <PySequence_Fast@plt+0x9a4c>  // b.any
    dc68:	ldr	x0, [sp, #184]
    dc6c:	ldr	x0, [x0, #112]
    dc70:	str	x0, [sp, #64]
    dc74:	ldr	x0, [sp, #184]
    dc78:	ldr	x1, [sp, #104]
    dc7c:	str	x1, [x0, #112]
    dc80:	ldr	x0, [sp, #64]
    dc84:	bl	4480 <PySequence_Fast@plt+0x240>
    dc88:	b	de7c <PySequence_Fast@plt+0x9c3c>
    dc8c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dc90:	add	x1, x0, #0xf50
    dc94:	ldr	x0, [sp, #192]
    dc98:	bl	3ff0 <strcmp@plt>
    dc9c:	cmp	w0, #0x0
    dca0:	b.ne	dcf8 <PySequence_Fast@plt+0x9ab8>  // b.any
    dca4:	ldr	x0, [sp, #184]
    dca8:	ldr	x0, [x0, #120]
    dcac:	str	x0, [sp, #72]
    dcb0:	ldr	x0, [sp, #184]
    dcb4:	ldr	x1, [sp, #104]
    dcb8:	str	x1, [x0, #120]
    dcbc:	ldr	x0, [sp, #72]
    dcc0:	bl	4480 <PySequence_Fast@plt+0x240>
    dcc4:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    dcc8:	add	x0, x0, #0x430
    dccc:	ldr	x0, [x0]
    dcd0:	ldr	x3, [x0, #112]
    dcd4:	ldr	x0, [sp, #40]
    dcd8:	ldr	x4, [x0, #16]
    dcdc:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    dce0:	add	x2, x0, #0xf68
    dce4:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    dce8:	add	x1, x0, #0xd24
    dcec:	mov	x0, x4
    dcf0:	blr	x3
    dcf4:	b	de7c <PySequence_Fast@plt+0x9c3c>
    dcf8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dcfc:	add	x1, x0, #0xf60
    dd00:	ldr	x0, [sp, #192]
    dd04:	bl	3ff0 <strcmp@plt>
    dd08:	cmp	w0, #0x0
    dd0c:	b.ne	dd64 <PySequence_Fast@plt+0x9b24>  // b.any
    dd10:	ldr	x0, [sp, #184]
    dd14:	ldr	x0, [x0, #128]
    dd18:	str	x0, [sp, #80]
    dd1c:	ldr	x0, [sp, #184]
    dd20:	ldr	x1, [sp, #104]
    dd24:	str	x1, [x0, #128]
    dd28:	ldr	x0, [sp, #80]
    dd2c:	bl	4480 <PySequence_Fast@plt+0x240>
    dd30:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    dd34:	add	x0, x0, #0x430
    dd38:	ldr	x0, [x0]
    dd3c:	ldr	x3, [x0, #112]
    dd40:	ldr	x0, [sp, #40]
    dd44:	ldr	x4, [x0, #16]
    dd48:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    dd4c:	add	x2, x0, #0xf68
    dd50:	adrp	x0, b000 <PySequence_Fast@plt+0x6dc0>
    dd54:	add	x1, x0, #0xd24
    dd58:	mov	x0, x4
    dd5c:	blr	x3
    dd60:	b	de7c <PySequence_Fast@plt+0x9c3c>
    dd64:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dd68:	add	x1, x0, #0xe60
    dd6c:	ldr	x0, [sp, #192]
    dd70:	bl	3ff0 <strcmp@plt>
    dd74:	cmp	w0, #0x0
    dd78:	b.ne	ddc8 <PySequence_Fast@plt+0x9b88>  // b.any
    dd7c:	ldr	x0, [sp, #184]
    dd80:	ldr	x0, [x0, #136]
    dd84:	str	x0, [sp, #88]
    dd88:	ldr	x0, [sp, #184]
    dd8c:	ldr	x1, [sp, #104]
    dd90:	str	x1, [x0, #136]
    dd94:	ldr	x0, [sp, #88]
    dd98:	bl	4480 <PySequence_Fast@plt+0x240>
    dd9c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    dda0:	add	x0, x0, #0x430
    dda4:	ldr	x0, [x0]
    dda8:	ldr	x2, [x0, #88]
    ddac:	ldr	x0, [sp, #40]
    ddb0:	ldr	x3, [x0, #16]
    ddb4:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    ddb8:	add	x1, x0, #0x8c
    ddbc:	mov	x0, x3
    ddc0:	blr	x2
    ddc4:	b	de7c <PySequence_Fast@plt+0x9c3c>
    ddc8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    ddcc:	add	x1, x0, #0xe68
    ddd0:	ldr	x0, [sp, #192]
    ddd4:	bl	3ff0 <strcmp@plt>
    ddd8:	cmp	w0, #0x0
    dddc:	b.ne	de2c <PySequence_Fast@plt+0x9bec>  // b.any
    dde0:	ldr	x0, [sp, #184]
    dde4:	ldr	x0, [x0, #144]
    dde8:	str	x0, [sp, #96]
    ddec:	ldr	x0, [sp, #184]
    ddf0:	ldr	x1, [sp, #104]
    ddf4:	str	x1, [x0, #144]
    ddf8:	ldr	x0, [sp, #96]
    ddfc:	bl	4480 <PySequence_Fast@plt+0x240>
    de00:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    de04:	add	x0, x0, #0x430
    de08:	ldr	x0, [x0]
    de0c:	ldr	x2, [x0, #120]
    de10:	ldr	x0, [sp, #40]
    de14:	ldr	x3, [x0, #16]
    de18:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    de1c:	add	x1, x0, #0x3b8
    de20:	mov	x0, x3
    de24:	blr	x2
    de28:	b	de7c <PySequence_Fast@plt+0x9c3c>
    de2c:	ldr	x2, [sp, #104]
    de30:	mov	w1, #0x104b                	// #4171
    de34:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    de38:	add	x0, x0, #0x808
    de3c:	bl	4408 <PySequence_Fast@plt+0x1c8>
    de40:	ldr	x2, [sp, #112]
    de44:	mov	w1, #0x104c                	// #4172
    de48:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    de4c:	add	x0, x0, #0x808
    de50:	bl	4408 <PySequence_Fast@plt+0x1c8>
    de54:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    de58:	ldr	x0, [x0, #3928]
    de5c:	ldr	x3, [x0]
    de60:	ldr	x2, [sp, #192]
    de64:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    de68:	add	x1, x0, #0xf68
    de6c:	mov	x0, x3
    de70:	bl	4180 <PyErr_Format@plt>
    de74:	mov	x0, #0x0                   	// #0
    de78:	b	dec4 <PySequence_Fast@plt+0x9c84>
    de7c:	ldr	x0, [sp, #200]
    de80:	add	x0, x0, #0x1
    de84:	str	x0, [sp, #200]
    de88:	ldr	x0, [sp, #112]
    de8c:	ldr	x0, [x0, #16]
    de90:	ldr	x1, [sp, #200]
    de94:	cmp	x1, x0
    de98:	b.lt	db28 <PySequence_Fast@plt+0x98e8>  // b.tstop
    de9c:	ldr	x2, [sp, #112]
    dea0:	mov	w1, #0x1052                	// #4178
    dea4:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    dea8:	add	x0, x0, #0x808
    deac:	bl	4408 <PySequence_Fast@plt+0x1c8>
    deb0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    deb4:	ldr	x0, [x0, #3976]
    deb8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    debc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    dec0:	ldr	x0, [x0, #3976]
    dec4:	ldp	x29, x30, [sp], #208
    dec8:	ret
    decc:	stp	x29, x30, [sp, #-32]!
    ded0:	mov	x29, sp
    ded4:	str	x0, [sp, #24]
    ded8:	str	x1, [sp, #16]
    dedc:	mov	w3, #0x9                   	// #9
    dee0:	mov	w2, #0x2                   	// #2
    dee4:	mov	w1, #0x2                   	// #2
    dee8:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    deec:	add	x0, x0, #0xf90
    def0:	bl	3c30 <PyUnicode_FromFormat@plt>
    def4:	ldp	x29, x30, [sp], #32
    def8:	ret
    defc:	stp	x29, x30, [sp, #-48]!
    df00:	mov	x29, sp
    df04:	str	x0, [sp, #24]
    df08:	str	x1, [sp, #16]
    df0c:	str	xzr, [sp, #40]
    df10:	ldr	x0, [sp, #16]
    df14:	ldr	x1, [x0, #8]
    df18:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    df1c:	add	x0, x0, #0x320
    df20:	cmp	x1, x0
    df24:	b.eq	df74 <PySequence_Fast@plt+0x9d34>  // b.none
    df28:	ldr	x0, [sp, #16]
    df2c:	ldr	x2, [x0, #8]
    df30:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    df34:	add	x1, x0, #0x320
    df38:	mov	x0, x2
    df3c:	bl	4160 <PyType_IsSubtype@plt>
    df40:	cmp	w0, #0x0
    df44:	b.ne	df74 <PySequence_Fast@plt+0x9d34>  // b.any
    df48:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    df4c:	add	x0, x0, #0x320
    df50:	ldr	x0, [x0, #24]
    df54:	ldr	x3, [sp, #16]
    df58:	mov	x2, x0
    df5c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    df60:	add	x1, x0, #0xfd0
    df64:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    df68:	add	x0, x0, #0xf10
    df6c:	bl	3ed0 <_PyArg_BadArgument@plt>
    df70:	b	df8c <PySequence_Fast@plt+0x9d4c>
    df74:	ldr	x0, [sp, #16]
    df78:	str	x0, [sp, #32]
    df7c:	ldr	x1, [sp, #32]
    df80:	ldr	x0, [sp, #24]
    df84:	bl	597c <PySequence_Fast@plt+0x173c>
    df88:	str	x0, [sp, #40]
    df8c:	ldr	x0, [sp, #40]
    df90:	ldp	x29, x30, [sp], #48
    df94:	ret
    df98:	stp	x29, x30, [sp, #-32]!
    df9c:	mov	x29, sp
    dfa0:	str	x0, [sp, #24]
    dfa4:	str	x1, [sp, #16]
    dfa8:	ldr	x0, [sp, #24]
    dfac:	bl	59c4 <PySequence_Fast@plt+0x1784>
    dfb0:	ldp	x29, x30, [sp], #32
    dfb4:	ret
    dfb8:	stp	x29, x30, [sp, #-32]!
    dfbc:	mov	x29, sp
    dfc0:	str	x0, [sp, #24]
    dfc4:	str	x1, [sp, #16]
    dfc8:	ldr	x0, [sp, #24]
    dfcc:	bl	5a3c <PySequence_Fast@plt+0x17fc>
    dfd0:	ldp	x29, x30, [sp], #32
    dfd4:	ret
    dfd8:	stp	x29, x30, [sp, #-48]!
    dfdc:	mov	x29, sp
    dfe0:	str	x0, [sp, #24]
    dfe4:	str	x1, [sp, #16]
    dfe8:	str	xzr, [sp, #40]
    dfec:	ldr	x0, [sp, #16]
    dff0:	ldr	x0, [x0, #8]
    dff4:	ldr	x0, [x0, #168]
    dff8:	and	x0, x0, #0x20000000
    dffc:	cmp	x0, #0x0
    e000:	b.ne	e028 <PySequence_Fast@plt+0x9de8>  // b.any
    e004:	ldr	x3, [sp, #16]
    e008:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    e00c:	add	x2, x0, #0x38
    e010:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    e014:	add	x1, x0, #0xfd0
    e018:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    e01c:	add	x0, x0, #0x40
    e020:	bl	3ed0 <_PyArg_BadArgument@plt>
    e024:	b	e040 <PySequence_Fast@plt+0x9e00>
    e028:	ldr	x0, [sp, #16]
    e02c:	str	x0, [sp, #32]
    e030:	ldr	x1, [sp, #32]
    e034:	ldr	x0, [sp, #24]
    e038:	bl	5be8 <PySequence_Fast@plt+0x19a8>
    e03c:	str	x0, [sp, #40]
    e040:	ldr	x0, [sp, #40]
    e044:	ldp	x29, x30, [sp], #48
    e048:	ret
    e04c:	stp	x29, x30, [sp, #-48]!
    e050:	mov	x29, sp
    e054:	str	x0, [sp, #24]
    e058:	str	x1, [sp, #16]
    e05c:	str	xzr, [sp, #40]
    e060:	ldr	x0, [sp, #24]
    e064:	bl	60e4 <PySequence_Fast@plt+0x1ea4>
    e068:	str	x0, [sp, #32]
    e06c:	ldr	x0, [sp, #32]
    e070:	cmn	x0, #0x1
    e074:	b.ne	e084 <PySequence_Fast@plt+0x9e44>  // b.any
    e078:	bl	3f80 <PyErr_Occurred@plt>
    e07c:	cmp	x0, #0x0
    e080:	b.ne	e094 <PySequence_Fast@plt+0x9e54>  // b.any
    e084:	ldr	x0, [sp, #32]
    e088:	bl	3e70 <PyLong_FromSsize_t@plt>
    e08c:	str	x0, [sp, #40]
    e090:	b	e098 <PySequence_Fast@plt+0x9e58>
    e094:	nop
    e098:	ldr	x0, [sp, #40]
    e09c:	ldp	x29, x30, [sp], #48
    e0a0:	ret
    e0a4:	stp	x29, x30, [sp, #-32]!
    e0a8:	mov	x29, sp
    e0ac:	str	x0, [sp, #24]
    e0b0:	str	x1, [sp, #16]
    e0b4:	ldr	x0, [sp, #24]
    e0b8:	bl	6160 <PySequence_Fast@plt+0x1f20>
    e0bc:	ldp	x29, x30, [sp], #32
    e0c0:	ret
    e0c4:	sub	sp, sp, #0x70
    e0c8:	stp	x29, x30, [sp, #16]
    e0cc:	add	x29, sp, #0x10
    e0d0:	str	x0, [sp, #56]
    e0d4:	str	x1, [sp, #48]
    e0d8:	str	x2, [sp, #40]
    e0dc:	str	x3, [sp, #32]
    e0e0:	str	xzr, [sp, #104]
    e0e4:	ldr	x0, [sp, #32]
    e0e8:	cmp	x0, #0x0
    e0ec:	b.eq	e0fc <PySequence_Fast@plt+0x9ebc>  // b.none
    e0f0:	ldr	x0, [sp, #32]
    e0f4:	ldr	x0, [x0, #16]
    e0f8:	b	e100 <PySequence_Fast@plt+0x9ec0>
    e0fc:	mov	x0, #0x0                   	// #0
    e100:	ldr	x1, [sp, #40]
    e104:	add	x0, x0, x1
    e108:	sub	x0, x0, #0x1
    e10c:	str	x0, [sp, #88]
    e110:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e114:	ldr	x0, [x0, #3976]
    e118:	str	x0, [sp, #96]
    e11c:	ldr	x0, [sp, #32]
    e120:	cmp	x0, #0x0
    e124:	b.ne	e14c <PySequence_Fast@plt+0x9f0c>  // b.any
    e128:	ldr	x0, [sp, #40]
    e12c:	cmp	x0, #0x0
    e130:	b.le	e14c <PySequence_Fast@plt+0x9f0c>
    e134:	ldr	x0, [sp, #40]
    e138:	cmp	x0, #0x2
    e13c:	b.gt	e14c <PySequence_Fast@plt+0x9f0c>
    e140:	ldr	x0, [sp, #48]
    e144:	cmp	x0, #0x0
    e148:	b.ne	e180 <PySequence_Fast@plt+0x9f40>  // b.any
    e14c:	add	x0, sp, #0x40
    e150:	str	x0, [sp]
    e154:	mov	w7, #0x0                   	// #0
    e158:	mov	w6, #0x2                   	// #2
    e15c:	mov	w5, #0x1                   	// #1
    e160:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    e164:	add	x4, x0, #0x1e8
    e168:	ldr	x3, [sp, #32]
    e16c:	mov	x2, #0x0                   	// #0
    e170:	ldr	x1, [sp, #40]
    e174:	ldr	x0, [sp, #48]
    e178:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    e17c:	b	e184 <PySequence_Fast@plt+0x9f44>
    e180:	ldr	x0, [sp, #48]
    e184:	str	x0, [sp, #48]
    e188:	ldr	x0, [sp, #48]
    e18c:	cmp	x0, #0x0
    e190:	b.eq	e1d8 <PySequence_Fast@plt+0x9f98>  // b.none
    e194:	ldr	x0, [sp, #48]
    e198:	ldr	x0, [x0]
    e19c:	str	x0, [sp, #80]
    e1a0:	ldr	x0, [sp, #88]
    e1a4:	cmp	x0, #0x0
    e1a8:	b.eq	e1bc <PySequence_Fast@plt+0x9f7c>  // b.none
    e1ac:	ldr	x0, [sp, #48]
    e1b0:	ldr	x0, [x0, #8]
    e1b4:	str	x0, [sp, #96]
    e1b8:	b	e1c0 <PySequence_Fast@plt+0x9f80>
    e1bc:	nop
    e1c0:	ldr	x2, [sp, #96]
    e1c4:	ldr	x1, [sp, #80]
    e1c8:	ldr	x0, [sp, #56]
    e1cc:	bl	6f2c <PySequence_Fast@plt+0x2cec>
    e1d0:	str	x0, [sp, #104]
    e1d4:	b	e1dc <PySequence_Fast@plt+0x9f9c>
    e1d8:	nop
    e1dc:	ldr	x0, [sp, #104]
    e1e0:	ldp	x29, x30, [sp, #16]
    e1e4:	add	sp, sp, #0x70
    e1e8:	ret
    e1ec:	sub	sp, sp, #0x80
    e1f0:	stp	x29, x30, [sp, #16]
    e1f4:	add	x29, sp, #0x10
    e1f8:	str	x0, [sp, #56]
    e1fc:	str	x1, [sp, #48]
    e200:	str	x2, [sp, #40]
    e204:	str	x3, [sp, #32]
    e208:	str	xzr, [sp, #120]
    e20c:	ldr	x0, [sp, #32]
    e210:	cmp	x0, #0x0
    e214:	b.eq	e224 <PySequence_Fast@plt+0x9fe4>  // b.none
    e218:	ldr	x0, [sp, #32]
    e21c:	ldr	x0, [x0, #16]
    e220:	b	e228 <PySequence_Fast@plt+0x9fe8>
    e224:	mov	x0, #0x0                   	// #0
    e228:	ldr	x1, [sp, #40]
    e22c:	add	x0, x0, x1
    e230:	sub	x0, x0, #0x1
    e234:	str	x0, [sp, #96]
    e238:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e23c:	ldr	x0, [x0, #3976]
    e240:	str	x0, [sp, #112]
    e244:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e248:	ldr	x0, [x0, #3976]
    e24c:	str	x0, [sp, #104]
    e250:	ldr	x0, [sp, #32]
    e254:	cmp	x0, #0x0
    e258:	b.ne	e280 <PySequence_Fast@plt+0xa040>  // b.any
    e25c:	ldr	x0, [sp, #40]
    e260:	cmp	x0, #0x0
    e264:	b.le	e280 <PySequence_Fast@plt+0xa040>
    e268:	ldr	x0, [sp, #40]
    e26c:	cmp	x0, #0x3
    e270:	b.gt	e280 <PySequence_Fast@plt+0xa040>
    e274:	ldr	x0, [sp, #48]
    e278:	cmp	x0, #0x0
    e27c:	b.ne	e2b4 <PySequence_Fast@plt+0xa074>  // b.any
    e280:	add	x0, sp, #0x40
    e284:	str	x0, [sp]
    e288:	mov	w7, #0x0                   	// #0
    e28c:	mov	w6, #0x3                   	// #3
    e290:	mov	w5, #0x1                   	// #1
    e294:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    e298:	add	x4, x0, #0x228
    e29c:	ldr	x3, [sp, #32]
    e2a0:	mov	x2, #0x0                   	// #0
    e2a4:	ldr	x1, [sp, #40]
    e2a8:	ldr	x0, [sp, #48]
    e2ac:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    e2b0:	b	e2b8 <PySequence_Fast@plt+0xa078>
    e2b4:	ldr	x0, [sp, #48]
    e2b8:	str	x0, [sp, #48]
    e2bc:	ldr	x0, [sp, #48]
    e2c0:	cmp	x0, #0x0
    e2c4:	b.eq	e350 <PySequence_Fast@plt+0xa110>  // b.none
    e2c8:	ldr	x0, [sp, #48]
    e2cc:	ldr	x0, [x0]
    e2d0:	str	x0, [sp, #88]
    e2d4:	ldr	x0, [sp, #96]
    e2d8:	cmp	x0, #0x0
    e2dc:	b.eq	e328 <PySequence_Fast@plt+0xa0e8>  // b.none
    e2e0:	ldr	x0, [sp, #48]
    e2e4:	add	x0, x0, #0x8
    e2e8:	ldr	x0, [x0]
    e2ec:	cmp	x0, #0x0
    e2f0:	b.eq	e318 <PySequence_Fast@plt+0xa0d8>  // b.none
    e2f4:	ldr	x0, [sp, #48]
    e2f8:	ldr	x0, [x0, #8]
    e2fc:	str	x0, [sp, #112]
    e300:	ldr	x0, [sp, #96]
    e304:	sub	x0, x0, #0x1
    e308:	str	x0, [sp, #96]
    e30c:	ldr	x0, [sp, #96]
    e310:	cmp	x0, #0x0
    e314:	b.eq	e330 <PySequence_Fast@plt+0xa0f0>  // b.none
    e318:	ldr	x0, [sp, #48]
    e31c:	ldr	x0, [x0, #16]
    e320:	str	x0, [sp, #104]
    e324:	b	e334 <PySequence_Fast@plt+0xa0f4>
    e328:	nop
    e32c:	b	e334 <PySequence_Fast@plt+0xa0f4>
    e330:	nop
    e334:	ldr	x3, [sp, #104]
    e338:	ldr	x2, [sp, #112]
    e33c:	ldr	x1, [sp, #88]
    e340:	ldr	x0, [sp, #56]
    e344:	bl	7090 <PySequence_Fast@plt+0x2e50>
    e348:	str	x0, [sp, #120]
    e34c:	b	e354 <PySequence_Fast@plt+0xa114>
    e350:	nop
    e354:	ldr	x0, [sp, #120]
    e358:	ldp	x29, x30, [sp, #16]
    e35c:	add	sp, sp, #0x80
    e360:	ret
    e364:	sub	sp, sp, #0x70
    e368:	stp	x29, x30, [sp, #16]
    e36c:	add	x29, sp, #0x10
    e370:	str	x0, [sp, #56]
    e374:	str	x1, [sp, #48]
    e378:	str	x2, [sp, #40]
    e37c:	str	x3, [sp, #32]
    e380:	str	xzr, [sp, #104]
    e384:	ldr	x0, [sp, #32]
    e388:	cmp	x0, #0x0
    e38c:	b.eq	e39c <PySequence_Fast@plt+0xa15c>  // b.none
    e390:	ldr	x0, [sp, #32]
    e394:	ldr	x0, [x0, #16]
    e398:	b	e3a0 <PySequence_Fast@plt+0xa160>
    e39c:	mov	x0, #0x0                   	// #0
    e3a0:	ldr	x1, [sp, #40]
    e3a4:	add	x0, x0, x1
    e3a8:	sub	x0, x0, #0x1
    e3ac:	str	x0, [sp, #88]
    e3b0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e3b4:	ldr	x0, [x0, #3976]
    e3b8:	str	x0, [sp, #96]
    e3bc:	ldr	x0, [sp, #32]
    e3c0:	cmp	x0, #0x0
    e3c4:	b.ne	e3ec <PySequence_Fast@plt+0xa1ac>  // b.any
    e3c8:	ldr	x0, [sp, #40]
    e3cc:	cmp	x0, #0x0
    e3d0:	b.le	e3ec <PySequence_Fast@plt+0xa1ac>
    e3d4:	ldr	x0, [sp, #40]
    e3d8:	cmp	x0, #0x2
    e3dc:	b.gt	e3ec <PySequence_Fast@plt+0xa1ac>
    e3e0:	ldr	x0, [sp, #48]
    e3e4:	cmp	x0, #0x0
    e3e8:	b.ne	e420 <PySequence_Fast@plt+0xa1e0>  // b.any
    e3ec:	add	x0, sp, #0x40
    e3f0:	str	x0, [sp]
    e3f4:	mov	w7, #0x0                   	// #0
    e3f8:	mov	w6, #0x2                   	// #2
    e3fc:	mov	w5, #0x1                   	// #1
    e400:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    e404:	add	x4, x0, #0x268
    e408:	ldr	x3, [sp, #32]
    e40c:	mov	x2, #0x0                   	// #0
    e410:	ldr	x1, [sp, #40]
    e414:	ldr	x0, [sp, #48]
    e418:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    e41c:	b	e424 <PySequence_Fast@plt+0xa1e4>
    e420:	ldr	x0, [sp, #48]
    e424:	str	x0, [sp, #48]
    e428:	ldr	x0, [sp, #48]
    e42c:	cmp	x0, #0x0
    e430:	b.eq	e478 <PySequence_Fast@plt+0xa238>  // b.none
    e434:	ldr	x0, [sp, #48]
    e438:	ldr	x0, [x0]
    e43c:	str	x0, [sp, #80]
    e440:	ldr	x0, [sp, #88]
    e444:	cmp	x0, #0x0
    e448:	b.eq	e45c <PySequence_Fast@plt+0xa21c>  // b.none
    e44c:	ldr	x0, [sp, #48]
    e450:	ldr	x0, [x0, #8]
    e454:	str	x0, [sp, #96]
    e458:	b	e460 <PySequence_Fast@plt+0xa220>
    e45c:	nop
    e460:	ldr	x2, [sp, #96]
    e464:	ldr	x1, [sp, #80]
    e468:	ldr	x0, [sp, #56]
    e46c:	bl	724c <PySequence_Fast@plt+0x300c>
    e470:	str	x0, [sp, #104]
    e474:	b	e47c <PySequence_Fast@plt+0xa23c>
    e478:	nop
    e47c:	ldr	x0, [sp, #104]
    e480:	ldp	x29, x30, [sp, #16]
    e484:	add	sp, sp, #0x70
    e488:	ret
    e48c:	sub	sp, sp, #0x70
    e490:	stp	x29, x30, [sp, #16]
    e494:	add	x29, sp, #0x10
    e498:	str	x0, [sp, #56]
    e49c:	str	x1, [sp, #48]
    e4a0:	str	x2, [sp, #40]
    e4a4:	str	x3, [sp, #32]
    e4a8:	str	xzr, [sp, #104]
    e4ac:	ldr	x0, [sp, #32]
    e4b0:	cmp	x0, #0x0
    e4b4:	b.eq	e4c4 <PySequence_Fast@plt+0xa284>  // b.none
    e4b8:	ldr	x0, [sp, #32]
    e4bc:	ldr	x0, [x0, #16]
    e4c0:	b	e4c8 <PySequence_Fast@plt+0xa288>
    e4c4:	mov	x0, #0x0                   	// #0
    e4c8:	ldr	x1, [sp, #40]
    e4cc:	add	x0, x0, x1
    e4d0:	sub	x0, x0, #0x1
    e4d4:	str	x0, [sp, #88]
    e4d8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e4dc:	ldr	x0, [x0, #3976]
    e4e0:	str	x0, [sp, #96]
    e4e4:	ldr	x0, [sp, #32]
    e4e8:	cmp	x0, #0x0
    e4ec:	b.ne	e514 <PySequence_Fast@plt+0xa2d4>  // b.any
    e4f0:	ldr	x0, [sp, #40]
    e4f4:	cmp	x0, #0x0
    e4f8:	b.le	e514 <PySequence_Fast@plt+0xa2d4>
    e4fc:	ldr	x0, [sp, #40]
    e500:	cmp	x0, #0x2
    e504:	b.gt	e514 <PySequence_Fast@plt+0xa2d4>
    e508:	ldr	x0, [sp, #48]
    e50c:	cmp	x0, #0x0
    e510:	b.ne	e548 <PySequence_Fast@plt+0xa308>  // b.any
    e514:	add	x0, sp, #0x40
    e518:	str	x0, [sp]
    e51c:	mov	w7, #0x0                   	// #0
    e520:	mov	w6, #0x2                   	// #2
    e524:	mov	w5, #0x1                   	// #1
    e528:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    e52c:	add	x4, x0, #0x2a8
    e530:	ldr	x3, [sp, #32]
    e534:	mov	x2, #0x0                   	// #0
    e538:	ldr	x1, [sp, #40]
    e53c:	ldr	x0, [sp, #48]
    e540:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    e544:	b	e54c <PySequence_Fast@plt+0xa30c>
    e548:	ldr	x0, [sp, #48]
    e54c:	str	x0, [sp, #48]
    e550:	ldr	x0, [sp, #48]
    e554:	cmp	x0, #0x0
    e558:	b.eq	e5a0 <PySequence_Fast@plt+0xa360>  // b.none
    e55c:	ldr	x0, [sp, #48]
    e560:	ldr	x0, [x0]
    e564:	str	x0, [sp, #80]
    e568:	ldr	x0, [sp, #88]
    e56c:	cmp	x0, #0x0
    e570:	b.eq	e584 <PySequence_Fast@plt+0xa344>  // b.none
    e574:	ldr	x0, [sp, #48]
    e578:	ldr	x0, [x0, #8]
    e57c:	str	x0, [sp, #96]
    e580:	b	e588 <PySequence_Fast@plt+0xa348>
    e584:	nop
    e588:	ldr	x2, [sp, #96]
    e58c:	ldr	x1, [sp, #80]
    e590:	ldr	x0, [sp, #56]
    e594:	bl	73e4 <PySequence_Fast@plt+0x31a4>
    e598:	str	x0, [sp, #104]
    e59c:	b	e5a4 <PySequence_Fast@plt+0xa364>
    e5a0:	nop
    e5a4:	ldr	x0, [sp, #104]
    e5a8:	ldp	x29, x30, [sp, #16]
    e5ac:	add	sp, sp, #0x70
    e5b0:	ret
    e5b4:	sub	sp, sp, #0x70
    e5b8:	stp	x29, x30, [sp, #16]
    e5bc:	add	x29, sp, #0x10
    e5c0:	str	x0, [sp, #56]
    e5c4:	str	x1, [sp, #48]
    e5c8:	str	x2, [sp, #40]
    e5cc:	str	x3, [sp, #32]
    e5d0:	str	xzr, [sp, #104]
    e5d4:	ldr	x0, [sp, #32]
    e5d8:	cmp	x0, #0x0
    e5dc:	b.eq	e5ec <PySequence_Fast@plt+0xa3ac>  // b.none
    e5e0:	ldr	x0, [sp, #32]
    e5e4:	ldr	x0, [x0, #16]
    e5e8:	b	e5f0 <PySequence_Fast@plt+0xa3b0>
    e5ec:	mov	x0, #0x0                   	// #0
    e5f0:	ldr	x1, [sp, #40]
    e5f4:	add	x0, x0, x1
    e5f8:	sub	x0, x0, #0x1
    e5fc:	str	x0, [sp, #88]
    e600:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e604:	ldr	x0, [x0, #3976]
    e608:	str	x0, [sp, #96]
    e60c:	ldr	x0, [sp, #32]
    e610:	cmp	x0, #0x0
    e614:	b.ne	e63c <PySequence_Fast@plt+0xa3fc>  // b.any
    e618:	ldr	x0, [sp, #40]
    e61c:	cmp	x0, #0x0
    e620:	b.le	e63c <PySequence_Fast@plt+0xa3fc>
    e624:	ldr	x0, [sp, #40]
    e628:	cmp	x0, #0x2
    e62c:	b.gt	e63c <PySequence_Fast@plt+0xa3fc>
    e630:	ldr	x0, [sp, #48]
    e634:	cmp	x0, #0x0
    e638:	b.ne	e670 <PySequence_Fast@plt+0xa430>  // b.any
    e63c:	add	x0, sp, #0x40
    e640:	str	x0, [sp]
    e644:	mov	w7, #0x0                   	// #0
    e648:	mov	w6, #0x2                   	// #2
    e64c:	mov	w5, #0x1                   	// #1
    e650:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    e654:	add	x4, x0, #0x2e8
    e658:	ldr	x3, [sp, #32]
    e65c:	mov	x2, #0x0                   	// #0
    e660:	ldr	x1, [sp, #40]
    e664:	ldr	x0, [sp, #48]
    e668:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    e66c:	b	e674 <PySequence_Fast@plt+0xa434>
    e670:	ldr	x0, [sp, #48]
    e674:	str	x0, [sp, #48]
    e678:	ldr	x0, [sp, #48]
    e67c:	cmp	x0, #0x0
    e680:	b.eq	e6c8 <PySequence_Fast@plt+0xa488>  // b.none
    e684:	ldr	x0, [sp, #48]
    e688:	ldr	x0, [x0]
    e68c:	str	x0, [sp, #80]
    e690:	ldr	x0, [sp, #88]
    e694:	cmp	x0, #0x0
    e698:	b.eq	e6ac <PySequence_Fast@plt+0xa46c>  // b.none
    e69c:	ldr	x0, [sp, #48]
    e6a0:	ldr	x0, [x0, #8]
    e6a4:	str	x0, [sp, #96]
    e6a8:	b	e6b0 <PySequence_Fast@plt+0xa470>
    e6ac:	nop
    e6b0:	ldr	x2, [sp, #96]
    e6b4:	ldr	x1, [sp, #80]
    e6b8:	ldr	x0, [sp, #56]
    e6bc:	bl	7444 <PySequence_Fast@plt+0x3204>
    e6c0:	str	x0, [sp, #104]
    e6c4:	b	e6cc <PySequence_Fast@plt+0xa48c>
    e6c8:	nop
    e6cc:	ldr	x0, [sp, #104]
    e6d0:	ldp	x29, x30, [sp, #16]
    e6d4:	add	sp, sp, #0x70
    e6d8:	ret
    e6dc:	stp	x29, x30, [sp, #-32]!
    e6e0:	mov	x29, sp
    e6e4:	str	x0, [sp, #24]
    e6e8:	str	x1, [sp, #16]
    e6ec:	ldr	x0, [sp, #24]
    e6f0:	bl	74e4 <PySequence_Fast@plt+0x32a4>
    e6f4:	ldp	x29, x30, [sp], #32
    e6f8:	ret
    e6fc:	sub	sp, sp, #0x60
    e700:	stp	x29, x30, [sp, #16]
    e704:	add	x29, sp, #0x10
    e708:	str	x0, [sp, #56]
    e70c:	str	x1, [sp, #48]
    e710:	str	x2, [sp, #40]
    e714:	str	x3, [sp, #32]
    e718:	str	xzr, [sp, #88]
    e71c:	ldr	x0, [sp, #32]
    e720:	cmp	x0, #0x0
    e724:	b.eq	e734 <PySequence_Fast@plt+0xa4f4>  // b.none
    e728:	ldr	x0, [sp, #32]
    e72c:	ldr	x0, [x0, #16]
    e730:	b	e738 <PySequence_Fast@plt+0xa4f8>
    e734:	mov	x0, #0x0                   	// #0
    e738:	ldr	x1, [sp, #40]
    e73c:	add	x0, x0, x1
    e740:	str	x0, [sp, #72]
    e744:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e748:	ldr	x0, [x0, #3976]
    e74c:	str	x0, [sp, #80]
    e750:	ldr	x0, [sp, #32]
    e754:	cmp	x0, #0x0
    e758:	b.ne	e780 <PySequence_Fast@plt+0xa540>  // b.any
    e75c:	ldr	x0, [sp, #40]
    e760:	cmp	x0, #0x0
    e764:	b.lt	e780 <PySequence_Fast@plt+0xa540>  // b.tstop
    e768:	ldr	x0, [sp, #40]
    e76c:	cmp	x0, #0x1
    e770:	b.gt	e780 <PySequence_Fast@plt+0xa540>
    e774:	ldr	x0, [sp, #48]
    e778:	cmp	x0, #0x0
    e77c:	b.ne	e7b4 <PySequence_Fast@plt+0xa574>  // b.any
    e780:	add	x0, sp, #0x40
    e784:	str	x0, [sp]
    e788:	mov	w7, #0x0                   	// #0
    e78c:	mov	w6, #0x1                   	// #1
    e790:	mov	w5, #0x0                   	// #0
    e794:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    e798:	add	x4, x0, #0x328
    e79c:	ldr	x3, [sp, #32]
    e7a0:	mov	x2, #0x0                   	// #0
    e7a4:	ldr	x1, [sp, #40]
    e7a8:	ldr	x0, [sp, #48]
    e7ac:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    e7b0:	b	e7b8 <PySequence_Fast@plt+0xa578>
    e7b4:	ldr	x0, [sp, #48]
    e7b8:	str	x0, [sp, #48]
    e7bc:	ldr	x0, [sp, #48]
    e7c0:	cmp	x0, #0x0
    e7c4:	b.eq	e7fc <PySequence_Fast@plt+0xa5bc>  // b.none
    e7c8:	ldr	x0, [sp, #72]
    e7cc:	cmp	x0, #0x0
    e7d0:	b.eq	e7e4 <PySequence_Fast@plt+0xa5a4>  // b.none
    e7d4:	ldr	x0, [sp, #48]
    e7d8:	ldr	x0, [x0]
    e7dc:	str	x0, [sp, #80]
    e7e0:	b	e7e8 <PySequence_Fast@plt+0xa5a8>
    e7e4:	nop
    e7e8:	ldr	x1, [sp, #80]
    e7ec:	ldr	x0, [sp, #56]
    e7f0:	bl	75e0 <PySequence_Fast@plt+0x33a0>
    e7f4:	str	x0, [sp, #88]
    e7f8:	b	e800 <PySequence_Fast@plt+0xa5c0>
    e7fc:	nop
    e800:	ldr	x0, [sp, #88]
    e804:	ldp	x29, x30, [sp, #16]
    e808:	add	sp, sp, #0x60
    e80c:	ret
    e810:	sub	sp, sp, #0x60
    e814:	stp	x29, x30, [sp, #16]
    e818:	add	x29, sp, #0x10
    e81c:	str	x0, [sp, #56]
    e820:	str	x1, [sp, #48]
    e824:	str	x2, [sp, #40]
    e828:	str	x3, [sp, #32]
    e82c:	str	xzr, [sp, #88]
    e830:	ldr	x0, [sp, #32]
    e834:	cmp	x0, #0x0
    e838:	b.eq	e848 <PySequence_Fast@plt+0xa608>  // b.none
    e83c:	ldr	x0, [sp, #32]
    e840:	ldr	x0, [x0, #16]
    e844:	b	e84c <PySequence_Fast@plt+0xa60c>
    e848:	mov	x0, #0x0                   	// #0
    e84c:	ldr	x1, [sp, #40]
    e850:	add	x0, x0, x1
    e854:	str	x0, [sp, #72]
    e858:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e85c:	ldr	x0, [x0, #3976]
    e860:	str	x0, [sp, #80]
    e864:	ldr	x0, [sp, #32]
    e868:	cmp	x0, #0x0
    e86c:	b.ne	e894 <PySequence_Fast@plt+0xa654>  // b.any
    e870:	ldr	x0, [sp, #40]
    e874:	cmp	x0, #0x0
    e878:	b.lt	e894 <PySequence_Fast@plt+0xa654>  // b.tstop
    e87c:	ldr	x0, [sp, #40]
    e880:	cmp	x0, #0x1
    e884:	b.gt	e894 <PySequence_Fast@plt+0xa654>
    e888:	ldr	x0, [sp, #48]
    e88c:	cmp	x0, #0x0
    e890:	b.ne	e8c8 <PySequence_Fast@plt+0xa688>  // b.any
    e894:	add	x0, sp, #0x40
    e898:	str	x0, [sp]
    e89c:	mov	w7, #0x0                   	// #0
    e8a0:	mov	w6, #0x1                   	// #1
    e8a4:	mov	w5, #0x0                   	// #0
    e8a8:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    e8ac:	add	x4, x0, #0x368
    e8b0:	ldr	x3, [sp, #32]
    e8b4:	mov	x2, #0x0                   	// #0
    e8b8:	ldr	x1, [sp, #40]
    e8bc:	ldr	x0, [sp, #48]
    e8c0:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    e8c4:	b	e8cc <PySequence_Fast@plt+0xa68c>
    e8c8:	ldr	x0, [sp, #48]
    e8cc:	str	x0, [sp, #48]
    e8d0:	ldr	x0, [sp, #48]
    e8d4:	cmp	x0, #0x0
    e8d8:	b.eq	e910 <PySequence_Fast@plt+0xa6d0>  // b.none
    e8dc:	ldr	x0, [sp, #72]
    e8e0:	cmp	x0, #0x0
    e8e4:	b.eq	e8f8 <PySequence_Fast@plt+0xa6b8>  // b.none
    e8e8:	ldr	x0, [sp, #48]
    e8ec:	ldr	x0, [x0]
    e8f0:	str	x0, [sp, #80]
    e8f4:	b	e8fc <PySequence_Fast@plt+0xa6bc>
    e8f8:	nop
    e8fc:	ldr	x1, [sp, #80]
    e900:	ldr	x0, [sp, #56]
    e904:	bl	7814 <PySequence_Fast@plt+0x35d4>
    e908:	str	x0, [sp, #88]
    e90c:	b	e914 <PySequence_Fast@plt+0xa6d4>
    e910:	nop
    e914:	ldr	x0, [sp, #88]
    e918:	ldp	x29, x30, [sp, #16]
    e91c:	add	sp, sp, #0x60
    e920:	ret
    e924:	stp	x29, x30, [sp, #-32]!
    e928:	mov	x29, sp
    e92c:	str	x0, [sp, #24]
    e930:	str	x1, [sp, #16]
    e934:	ldr	x0, [sp, #24]
    e938:	bl	7868 <PySequence_Fast@plt+0x3628>
    e93c:	ldp	x29, x30, [sp], #32
    e940:	ret
    e944:	stp	x29, x30, [sp, #-96]!
    e948:	mov	x29, sp
    e94c:	str	x0, [sp, #40]
    e950:	str	x1, [sp, #32]
    e954:	str	x2, [sp, #24]
    e958:	str	xzr, [sp, #88]
    e95c:	ldr	x0, [sp, #24]
    e960:	cmp	x0, #0x1
    e964:	b.le	e974 <PySequence_Fast@plt+0xa734>
    e968:	ldr	x0, [sp, #24]
    e96c:	cmp	x0, #0x2
    e970:	b.le	e994 <PySequence_Fast@plt+0xa754>
    e974:	mov	x3, #0x2                   	// #2
    e978:	mov	x2, #0x2                   	// #2
    e97c:	ldr	x1, [sp, #24]
    e980:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    e984:	add	x0, x0, #0x280
    e988:	bl	3f60 <_PyArg_CheckPositional@plt>
    e98c:	cmp	w0, #0x0
    e990:	b.eq	eafc <PySequence_Fast@plt+0xa8bc>  // b.none
    e994:	ldr	x0, [sp, #32]
    e998:	ldr	x0, [x0]
    e99c:	ldr	x1, [x0, #8]
    e9a0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e9a4:	ldr	x0, [x0, #3896]
    e9a8:	cmp	x1, x0
    e9ac:	b.eq	e9d4 <PySequence_Fast@plt+0xa794>  // b.none
    e9b0:	ldr	x0, [sp, #32]
    e9b4:	ldr	x0, [x0]
    e9b8:	ldr	x2, [x0, #8]
    e9bc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e9c0:	ldr	x1, [x0, #3896]
    e9c4:	mov	x0, x2
    e9c8:	bl	4160 <PyType_IsSubtype@plt>
    e9cc:	cmp	w0, #0x0
    e9d0:	b.eq	e9f4 <PySequence_Fast@plt+0xa7b4>  // b.none
    e9d4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    e9d8:	ldr	x0, [x0, #3944]
    e9dc:	ldr	x2, [x0]
    e9e0:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    e9e4:	add	x1, x0, #0x288
    e9e8:	mov	x0, x2
    e9ec:	bl	3de0 <PyErr_SetString@plt>
    e9f0:	b	eb08 <PySequence_Fast@plt+0xa8c8>
    e9f4:	mov	x0, #0xffffffffffffffff    	// #-1
    e9f8:	str	x0, [sp, #80]
    e9fc:	ldr	x0, [sp, #32]
    ea00:	ldr	x0, [x0]
    ea04:	bl	41e0 <PyNumber_Index@plt>
    ea08:	str	x0, [sp, #72]
    ea0c:	ldr	x0, [sp, #72]
    ea10:	cmp	x0, #0x0
    ea14:	b.eq	ea38 <PySequence_Fast@plt+0xa7f8>  // b.none
    ea18:	ldr	x0, [sp, #72]
    ea1c:	bl	3eb0 <PyLong_AsSsize_t@plt>
    ea20:	str	x0, [sp, #80]
    ea24:	ldr	x2, [sp, #72]
    ea28:	mov	w1, #0x1f0                 	// #496
    ea2c:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    ea30:	add	x0, x0, #0x2b0
    ea34:	bl	4408 <PySequence_Fast@plt+0x1c8>
    ea38:	ldr	x0, [sp, #80]
    ea3c:	cmn	x0, #0x1
    ea40:	b.ne	ea50 <PySequence_Fast@plt+0xa810>  // b.any
    ea44:	bl	3f80 <PyErr_Occurred@plt>
    ea48:	cmp	x0, #0x0
    ea4c:	b.ne	eb04 <PySequence_Fast@plt+0xa8c4>  // b.any
    ea50:	ldr	x0, [sp, #80]
    ea54:	str	x0, [sp, #64]
    ea58:	ldr	x0, [sp, #32]
    ea5c:	add	x0, x0, #0x8
    ea60:	ldr	x0, [x0]
    ea64:	ldr	x1, [x0, #8]
    ea68:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    ea6c:	add	x0, x0, #0x320
    ea70:	cmp	x1, x0
    ea74:	b.eq	ead8 <PySequence_Fast@plt+0xa898>  // b.none
    ea78:	ldr	x0, [sp, #32]
    ea7c:	add	x0, x0, #0x8
    ea80:	ldr	x0, [x0]
    ea84:	ldr	x2, [x0, #8]
    ea88:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    ea8c:	add	x1, x0, #0x320
    ea90:	mov	x0, x2
    ea94:	bl	4160 <PyType_IsSubtype@plt>
    ea98:	cmp	w0, #0x0
    ea9c:	b.ne	ead8 <PySequence_Fast@plt+0xa898>  // b.any
    eaa0:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    eaa4:	add	x0, x0, #0x320
    eaa8:	ldr	x1, [x0, #24]
    eaac:	ldr	x0, [sp, #32]
    eab0:	add	x0, x0, #0x8
    eab4:	ldr	x0, [x0]
    eab8:	mov	x3, x0
    eabc:	mov	x2, x1
    eac0:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    eac4:	add	x1, x0, #0x2e8
    eac8:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    eacc:	add	x0, x0, #0x280
    ead0:	bl	3ed0 <_PyArg_BadArgument@plt>
    ead4:	b	eb08 <PySequence_Fast@plt+0xa8c8>
    ead8:	ldr	x0, [sp, #32]
    eadc:	ldr	x0, [x0, #8]
    eae0:	str	x0, [sp, #56]
    eae4:	ldr	x2, [sp, #56]
    eae8:	ldr	x1, [sp, #64]
    eaec:	ldr	x0, [sp, #40]
    eaf0:	bl	7944 <PySequence_Fast@plt+0x3704>
    eaf4:	str	x0, [sp, #88]
    eaf8:	b	eb08 <PySequence_Fast@plt+0xa8c8>
    eafc:	nop
    eb00:	b	eb08 <PySequence_Fast@plt+0xa8c8>
    eb04:	nop
    eb08:	ldr	x0, [sp, #88]
    eb0c:	ldp	x29, x30, [sp], #96
    eb10:	ret
    eb14:	stp	x29, x30, [sp, #-32]!
    eb18:	mov	x29, sp
    eb1c:	str	x0, [sp, #24]
    eb20:	str	x1, [sp, #16]
    eb24:	ldr	x0, [sp, #24]
    eb28:	bl	7ac0 <PySequence_Fast@plt+0x3880>
    eb2c:	ldp	x29, x30, [sp], #32
    eb30:	ret
    eb34:	stp	x29, x30, [sp, #-32]!
    eb38:	mov	x29, sp
    eb3c:	str	x0, [sp, #24]
    eb40:	str	x1, [sp, #16]
    eb44:	ldr	x0, [sp, #24]
    eb48:	bl	7b1c <PySequence_Fast@plt+0x38dc>
    eb4c:	ldp	x29, x30, [sp], #32
    eb50:	ret
    eb54:	stp	x29, x30, [sp, #-80]!
    eb58:	mov	x29, sp
    eb5c:	str	x0, [sp, #40]
    eb60:	str	x1, [sp, #32]
    eb64:	str	x2, [sp, #24]
    eb68:	str	xzr, [sp, #72]
    eb6c:	ldr	x0, [sp, #24]
    eb70:	cmp	x0, #0x1
    eb74:	b.le	eb84 <PySequence_Fast@plt+0xa944>
    eb78:	ldr	x0, [sp, #24]
    eb7c:	cmp	x0, #0x2
    eb80:	b.le	eba4 <PySequence_Fast@plt+0xa964>
    eb84:	mov	x3, #0x2                   	// #2
    eb88:	mov	x2, #0x2                   	// #2
    eb8c:	ldr	x1, [sp, #24]
    eb90:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    eb94:	add	x0, x0, #0x350
    eb98:	bl	3f60 <_PyArg_CheckPositional@plt>
    eb9c:	cmp	w0, #0x0
    eba0:	b.eq	ebd4 <PySequence_Fast@plt+0xa994>  // b.none
    eba4:	ldr	x0, [sp, #32]
    eba8:	ldr	x0, [x0]
    ebac:	str	x0, [sp, #64]
    ebb0:	ldr	x0, [sp, #32]
    ebb4:	ldr	x0, [x0, #8]
    ebb8:	str	x0, [sp, #56]
    ebbc:	ldr	x2, [sp, #56]
    ebc0:	ldr	x1, [sp, #64]
    ebc4:	ldr	x0, [sp, #40]
    ebc8:	bl	7bac <PySequence_Fast@plt+0x396c>
    ebcc:	str	x0, [sp, #72]
    ebd0:	b	ebd8 <PySequence_Fast@plt+0xa998>
    ebd4:	nop
    ebd8:	ldr	x0, [sp, #72]
    ebdc:	ldp	x29, x30, [sp], #80
    ebe0:	ret
    ebe4:	stp	x29, x30, [sp, #-48]!
    ebe8:	mov	x29, sp
    ebec:	str	x0, [sp, #24]
    ebf0:	str	x1, [sp, #16]
    ebf4:	str	xzr, [sp, #40]
    ebf8:	ldr	x0, [sp, #16]
    ebfc:	ldr	x1, [x0, #8]
    ec00:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    ec04:	add	x0, x0, #0x320
    ec08:	cmp	x1, x0
    ec0c:	b.eq	ec5c <PySequence_Fast@plt+0xaa1c>  // b.none
    ec10:	ldr	x0, [sp, #16]
    ec14:	ldr	x2, [x0, #8]
    ec18:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    ec1c:	add	x1, x0, #0x320
    ec20:	mov	x0, x2
    ec24:	bl	4160 <PyType_IsSubtype@plt>
    ec28:	cmp	w0, #0x0
    ec2c:	b.ne	ec5c <PySequence_Fast@plt+0xaa1c>  // b.any
    ec30:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    ec34:	add	x0, x0, #0x320
    ec38:	ldr	x0, [x0, #24]
    ec3c:	ldr	x3, [sp, #16]
    ec40:	mov	x2, x0
    ec44:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    ec48:	add	x1, x0, #0xfd0
    ec4c:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    ec50:	add	x0, x0, #0x388
    ec54:	bl	3ed0 <_PyArg_BadArgument@plt>
    ec58:	b	ec74 <PySequence_Fast@plt+0xaa34>
    ec5c:	ldr	x0, [sp, #16]
    ec60:	str	x0, [sp, #32]
    ec64:	ldr	x1, [sp, #32]
    ec68:	ldr	x0, [sp, #24]
    ec6c:	bl	7c10 <PySequence_Fast@plt+0x39d0>
    ec70:	str	x0, [sp, #40]
    ec74:	ldr	x0, [sp, #40]
    ec78:	ldp	x29, x30, [sp], #48
    ec7c:	ret
    ec80:	stp	x29, x30, [sp, #-80]!
    ec84:	mov	x29, sp
    ec88:	str	x0, [sp, #40]
    ec8c:	str	x1, [sp, #32]
    ec90:	str	x2, [sp, #24]
    ec94:	str	xzr, [sp, #72]
    ec98:	ldr	x0, [sp, #24]
    ec9c:	cmp	x0, #0x1
    eca0:	b.le	ecb0 <PySequence_Fast@plt+0xaa70>
    eca4:	ldr	x0, [sp, #24]
    eca8:	cmp	x0, #0x2
    ecac:	b.le	ecd0 <PySequence_Fast@plt+0xaa90>
    ecb0:	mov	x3, #0x2                   	// #2
    ecb4:	mov	x2, #0x2                   	// #2
    ecb8:	ldr	x1, [sp, #24]
    ecbc:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    ecc0:	add	x0, x0, #0x3b0
    ecc4:	bl	3f60 <_PyArg_CheckPositional@plt>
    ecc8:	cmp	w0, #0x0
    eccc:	b.eq	ed00 <PySequence_Fast@plt+0xaac0>  // b.none
    ecd0:	ldr	x0, [sp, #32]
    ecd4:	ldr	x0, [x0]
    ecd8:	str	x0, [sp, #64]
    ecdc:	ldr	x0, [sp, #32]
    ece0:	ldr	x0, [x0, #8]
    ece4:	str	x0, [sp, #56]
    ece8:	ldr	x2, [sp, #56]
    ecec:	ldr	x1, [sp, #64]
    ecf0:	ldr	x0, [sp, #40]
    ecf4:	bl	7ec4 <PySequence_Fast@plt+0x3c84>
    ecf8:	str	x0, [sp, #72]
    ecfc:	b	ed04 <PySequence_Fast@plt+0xaac4>
    ed00:	nop
    ed04:	ldr	x0, [sp, #72]
    ed08:	ldp	x29, x30, [sp], #80
    ed0c:	ret
    ed10:	sub	sp, sp, #0xb0
    ed14:	stp	x29, x30, [sp, #16]
    ed18:	add	x29, sp, #0x10
    ed1c:	str	x0, [sp, #56]
    ed20:	str	x1, [sp, #48]
    ed24:	str	x2, [sp, #40]
    ed28:	mov	w0, #0xffffffff            	// #-1
    ed2c:	str	w0, [sp, #172]
    ed30:	ldr	x0, [sp, #48]
    ed34:	ldr	x0, [x0, #16]
    ed38:	str	x0, [sp, #120]
    ed3c:	ldr	x0, [sp, #40]
    ed40:	cmp	x0, #0x0
    ed44:	b.eq	ed54 <PySequence_Fast@plt+0xab14>  // b.none
    ed48:	ldr	x0, [sp, #40]
    ed4c:	ldr	x0, [x0, #16]
    ed50:	b	ed58 <PySequence_Fast@plt+0xab18>
    ed54:	mov	x0, #0x0                   	// #0
    ed58:	ldr	x1, [sp, #120]
    ed5c:	add	x0, x0, x1
    ed60:	str	x0, [sp, #160]
    ed64:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ed68:	ldr	x0, [x0, #3976]
    ed6c:	str	x0, [sp, #152]
    ed70:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ed74:	ldr	x0, [x0, #3976]
    ed78:	str	x0, [sp, #144]
    ed7c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    ed80:	ldr	x0, [x0, #3976]
    ed84:	str	x0, [sp, #136]
    ed88:	str	wzr, [sp, #132]
    ed8c:	str	wzr, [sp, #128]
    ed90:	ldr	x0, [sp, #40]
    ed94:	cmp	x0, #0x0
    ed98:	b.ne	edd0 <PySequence_Fast@plt+0xab90>  // b.any
    ed9c:	ldr	x0, [sp, #120]
    eda0:	cmp	x0, #0x0
    eda4:	b.lt	edd0 <PySequence_Fast@plt+0xab90>  // b.tstop
    eda8:	ldr	x0, [sp, #120]
    edac:	cmp	x0, #0x1
    edb0:	b.gt	edd0 <PySequence_Fast@plt+0xab90>
    edb4:	ldr	x0, [sp, #48]
    edb8:	add	x0, x0, #0x18
    edbc:	cmp	x0, #0x0
    edc0:	b.eq	edd0 <PySequence_Fast@plt+0xab90>  // b.none
    edc4:	ldr	x0, [sp, #48]
    edc8:	add	x0, x0, #0x18
    edcc:	b	ee08 <PySequence_Fast@plt+0xabc8>
    edd0:	ldr	x0, [sp, #48]
    edd4:	add	x8, x0, #0x18
    edd8:	add	x0, sp, #0x48
    eddc:	str	x0, [sp]
    ede0:	mov	w7, #0x0                   	// #0
    ede4:	mov	w6, #0x1                   	// #1
    ede8:	mov	w5, #0x0                   	// #0
    edec:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    edf0:	add	x4, x0, #0x3a8
    edf4:	mov	x3, #0x0                   	// #0
    edf8:	ldr	x2, [sp, #40]
    edfc:	ldr	x1, [sp, #120]
    ee00:	mov	x0, x8
    ee04:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    ee08:	str	x0, [sp, #112]
    ee0c:	ldr	x0, [sp, #112]
    ee10:	cmp	x0, #0x0
    ee14:	b.eq	ef90 <PySequence_Fast@plt+0xad50>  // b.none
    ee18:	ldr	x0, [sp, #160]
    ee1c:	cmp	x0, #0x0
    ee20:	b.eq	ee58 <PySequence_Fast@plt+0xac18>  // b.none
    ee24:	ldr	x0, [sp, #112]
    ee28:	ldr	x0, [x0]
    ee2c:	cmp	x0, #0x0
    ee30:	b.eq	ee60 <PySequence_Fast@plt+0xac20>  // b.none
    ee34:	ldr	x0, [sp, #112]
    ee38:	ldr	x0, [x0]
    ee3c:	str	x0, [sp, #152]
    ee40:	ldr	x0, [sp, #160]
    ee44:	sub	x0, x0, #0x1
    ee48:	str	x0, [sp, #160]
    ee4c:	ldr	x0, [sp, #160]
    ee50:	cmp	x0, #0x0
    ee54:	b	ee60 <PySequence_Fast@plt+0xac20>
    ee58:	nop
    ee5c:	b	ee64 <PySequence_Fast@plt+0xac24>
    ee60:	nop
    ee64:	ldr	x0, [sp, #160]
    ee68:	cmp	x0, #0x0
    ee6c:	b.eq	ef50 <PySequence_Fast@plt+0xad10>  // b.none
    ee70:	ldr	x0, [sp, #112]
    ee74:	add	x0, x0, #0x8
    ee78:	ldr	x0, [x0]
    ee7c:	cmp	x0, #0x0
    ee80:	b.eq	eea8 <PySequence_Fast@plt+0xac68>  // b.none
    ee84:	ldr	x0, [sp, #112]
    ee88:	ldr	x0, [x0, #8]
    ee8c:	str	x0, [sp, #144]
    ee90:	ldr	x0, [sp, #160]
    ee94:	sub	x0, x0, #0x1
    ee98:	str	x0, [sp, #160]
    ee9c:	ldr	x0, [sp, #160]
    eea0:	cmp	x0, #0x0
    eea4:	b.eq	ef58 <PySequence_Fast@plt+0xad18>  // b.none
    eea8:	ldr	x0, [sp, #112]
    eeac:	add	x0, x0, #0x10
    eeb0:	ldr	x0, [x0]
    eeb4:	cmp	x0, #0x0
    eeb8:	b.eq	eee0 <PySequence_Fast@plt+0xaca0>  // b.none
    eebc:	ldr	x0, [sp, #112]
    eec0:	ldr	x0, [x0, #16]
    eec4:	str	x0, [sp, #136]
    eec8:	ldr	x0, [sp, #160]
    eecc:	sub	x0, x0, #0x1
    eed0:	str	x0, [sp, #160]
    eed4:	ldr	x0, [sp, #160]
    eed8:	cmp	x0, #0x0
    eedc:	b.eq	ef60 <PySequence_Fast@plt+0xad20>  // b.none
    eee0:	ldr	x0, [sp, #112]
    eee4:	add	x0, x0, #0x18
    eee8:	ldr	x0, [x0]
    eeec:	cmp	x0, #0x0
    eef0:	b.eq	ef2c <PySequence_Fast@plt+0xacec>  // b.none
    eef4:	ldr	x0, [sp, #112]
    eef8:	add	x0, x0, #0x18
    eefc:	ldr	x0, [x0]
    ef00:	bl	4050 <PyObject_IsTrue@plt>
    ef04:	str	w0, [sp, #132]
    ef08:	ldr	w0, [sp, #132]
    ef0c:	cmp	w0, #0x0
    ef10:	b.lt	ef98 <PySequence_Fast@plt+0xad58>  // b.tstop
    ef14:	ldr	x0, [sp, #160]
    ef18:	sub	x0, x0, #0x1
    ef1c:	str	x0, [sp, #160]
    ef20:	ldr	x0, [sp, #160]
    ef24:	cmp	x0, #0x0
    ef28:	b.eq	ef68 <PySequence_Fast@plt+0xad28>  // b.none
    ef2c:	ldr	x0, [sp, #112]
    ef30:	add	x0, x0, #0x20
    ef34:	ldr	x0, [x0]
    ef38:	bl	4050 <PyObject_IsTrue@plt>
    ef3c:	str	w0, [sp, #128]
    ef40:	ldr	w0, [sp, #128]
    ef44:	cmp	w0, #0x0
    ef48:	b.lt	efa0 <PySequence_Fast@plt+0xad60>  // b.tstop
    ef4c:	b	ef6c <PySequence_Fast@plt+0xad2c>
    ef50:	nop
    ef54:	b	ef6c <PySequence_Fast@plt+0xad2c>
    ef58:	nop
    ef5c:	b	ef6c <PySequence_Fast@plt+0xad2c>
    ef60:	nop
    ef64:	b	ef6c <PySequence_Fast@plt+0xad2c>
    ef68:	nop
    ef6c:	ldr	w5, [sp, #128]
    ef70:	ldr	w4, [sp, #132]
    ef74:	ldr	x3, [sp, #136]
    ef78:	ldr	x2, [sp, #144]
    ef7c:	ldr	x1, [sp, #152]
    ef80:	ldr	x0, [sp, #56]
    ef84:	bl	96d0 <PySequence_Fast@plt+0x5490>
    ef88:	str	w0, [sp, #172]
    ef8c:	b	efa4 <PySequence_Fast@plt+0xad64>
    ef90:	nop
    ef94:	b	efa4 <PySequence_Fast@plt+0xad64>
    ef98:	nop
    ef9c:	b	efa4 <PySequence_Fast@plt+0xad64>
    efa0:	nop
    efa4:	ldr	w0, [sp, #172]
    efa8:	ldp	x29, x30, [sp, #16]
    efac:	add	sp, sp, #0xb0
    efb0:	ret
    efb4:	stp	x29, x30, [sp, #-80]!
    efb8:	mov	x29, sp
    efbc:	str	x0, [sp, #40]
    efc0:	str	x1, [sp, #32]
    efc4:	str	x2, [sp, #24]
    efc8:	str	xzr, [sp, #72]
    efcc:	ldr	x0, [sp, #24]
    efd0:	cmp	x0, #0x1
    efd4:	b.le	efe4 <PySequence_Fast@plt+0xada4>
    efd8:	ldr	x0, [sp, #24]
    efdc:	cmp	x0, #0x2
    efe0:	b.le	f004 <PySequence_Fast@plt+0xadc4>
    efe4:	mov	x3, #0x2                   	// #2
    efe8:	mov	x2, #0x2                   	// #2
    efec:	ldr	x1, [sp, #24]
    eff0:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    eff4:	add	x0, x0, #0x458
    eff8:	bl	3f60 <_PyArg_CheckPositional@plt>
    effc:	cmp	w0, #0x0
    f000:	b.eq	f034 <PySequence_Fast@plt+0xadf4>  // b.none
    f004:	ldr	x0, [sp, #32]
    f008:	ldr	x0, [x0]
    f00c:	str	x0, [sp, #64]
    f010:	ldr	x0, [sp, #32]
    f014:	ldr	x0, [x0, #8]
    f018:	str	x0, [sp, #56]
    f01c:	ldr	x2, [sp, #56]
    f020:	ldr	x1, [sp, #64]
    f024:	ldr	x0, [sp, #40]
    f028:	bl	a054 <PySequence_Fast@plt+0x5e14>
    f02c:	str	x0, [sp, #72]
    f030:	b	f038 <PySequence_Fast@plt+0xadf8>
    f034:	nop
    f038:	ldr	x0, [sp, #72]
    f03c:	ldp	x29, x30, [sp], #80
    f040:	ret
    f044:	stp	x29, x30, [sp, #-80]!
    f048:	mov	x29, sp
    f04c:	str	x0, [sp, #40]
    f050:	str	x1, [sp, #32]
    f054:	str	x2, [sp, #24]
    f058:	str	xzr, [sp, #72]
    f05c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    f060:	ldr	x0, [x0, #3976]
    f064:	str	x0, [sp, #64]
    f068:	ldr	x0, [sp, #24]
    f06c:	cmp	x0, #0x0
    f070:	b.le	f080 <PySequence_Fast@plt+0xae40>
    f074:	ldr	x0, [sp, #24]
    f078:	cmp	x0, #0x2
    f07c:	b.le	f0a0 <PySequence_Fast@plt+0xae60>
    f080:	mov	x3, #0x2                   	// #2
    f084:	mov	x2, #0x1                   	// #1
    f088:	ldr	x1, [sp, #24]
    f08c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    f090:	add	x0, x0, #0xe68
    f094:	bl	3f60 <_PyArg_CheckPositional@plt>
    f098:	cmp	w0, #0x0
    f09c:	b.eq	f0e4 <PySequence_Fast@plt+0xaea4>  // b.none
    f0a0:	ldr	x0, [sp, #32]
    f0a4:	ldr	x0, [x0]
    f0a8:	str	x0, [sp, #56]
    f0ac:	ldr	x0, [sp, #24]
    f0b0:	cmp	x0, #0x1
    f0b4:	b.le	f0c8 <PySequence_Fast@plt+0xae88>
    f0b8:	ldr	x0, [sp, #32]
    f0bc:	ldr	x0, [x0, #8]
    f0c0:	str	x0, [sp, #64]
    f0c4:	b	f0cc <PySequence_Fast@plt+0xae8c>
    f0c8:	nop
    f0cc:	ldr	x2, [sp, #64]
    f0d0:	ldr	x1, [sp, #56]
    f0d4:	ldr	x0, [sp, #40]
    f0d8:	bl	b164 <PySequence_Fast@plt+0x6f24>
    f0dc:	str	x0, [sp, #72]
    f0e0:	b	f0e8 <PySequence_Fast@plt+0xaea8>
    f0e4:	nop
    f0e8:	ldr	x0, [sp, #72]
    f0ec:	ldp	x29, x30, [sp], #80
    f0f0:	ret
    f0f4:	stp	x29, x30, [sp, #-32]!
    f0f8:	mov	x29, sp
    f0fc:	str	x0, [sp, #24]
    f100:	str	x1, [sp, #16]
    f104:	ldr	x0, [sp, #24]
    f108:	bl	b1dc <PySequence_Fast@plt+0x6f9c>
    f10c:	ldp	x29, x30, [sp], #32
    f110:	ret
    f114:	stp	x29, x30, [sp, #-80]!
    f118:	mov	x29, sp
    f11c:	str	x0, [sp, #40]
    f120:	str	x1, [sp, #32]
    f124:	str	x2, [sp, #24]
    f128:	str	xzr, [sp, #72]
    f12c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    f130:	ldr	x0, [x0, #3976]
    f134:	str	x0, [sp, #64]
    f138:	ldr	x0, [sp, #24]
    f13c:	cmp	x0, #0x0
    f140:	b.le	f150 <PySequence_Fast@plt+0xaf10>
    f144:	ldr	x0, [sp, #24]
    f148:	cmp	x0, #0x2
    f14c:	b.le	f170 <PySequence_Fast@plt+0xaf30>
    f150:	mov	x3, #0x2                   	// #2
    f154:	mov	x2, #0x1                   	// #1
    f158:	ldr	x1, [sp, #24]
    f15c:	adrp	x0, f000 <PySequence_Fast@plt+0xadc0>
    f160:	add	x0, x0, #0xe48
    f164:	bl	3f60 <_PyArg_CheckPositional@plt>
    f168:	cmp	w0, #0x0
    f16c:	b.eq	f1b4 <PySequence_Fast@plt+0xaf74>  // b.none
    f170:	ldr	x0, [sp, #32]
    f174:	ldr	x0, [x0]
    f178:	str	x0, [sp, #56]
    f17c:	ldr	x0, [sp, #24]
    f180:	cmp	x0, #0x1
    f184:	b.le	f198 <PySequence_Fast@plt+0xaf58>
    f188:	ldr	x0, [sp, #32]
    f18c:	ldr	x0, [x0, #8]
    f190:	str	x0, [sp, #64]
    f194:	b	f19c <PySequence_Fast@plt+0xaf5c>
    f198:	nop
    f19c:	ldr	x2, [sp, #64]
    f1a0:	ldr	x1, [sp, #56]
    f1a4:	ldr	x0, [sp, #40]
    f1a8:	bl	b1f8 <PySequence_Fast@plt+0x6fb8>
    f1ac:	str	x0, [sp, #72]
    f1b0:	b	f1b8 <PySequence_Fast@plt+0xaf78>
    f1b4:	nop
    f1b8:	ldr	x0, [sp, #72]
    f1bc:	ldp	x29, x30, [sp], #80
    f1c0:	ret
    f1c4:	sub	sp, sp, #0x90
    f1c8:	stp	x29, x30, [sp, #16]
    f1cc:	add	x29, sp, #0x10
    f1d0:	str	x0, [sp, #56]
    f1d4:	str	x1, [sp, #48]
    f1d8:	str	x2, [sp, #40]
    f1dc:	mov	w0, #0xffffffff            	// #-1
    f1e0:	str	w0, [sp, #140]
    f1e4:	ldr	x0, [sp, #48]
    f1e8:	ldr	x0, [x0, #16]
    f1ec:	str	x0, [sp, #112]
    f1f0:	ldr	x0, [sp, #40]
    f1f4:	cmp	x0, #0x0
    f1f8:	b.eq	f208 <PySequence_Fast@plt+0xafc8>  // b.none
    f1fc:	ldr	x0, [sp, #40]
    f200:	ldr	x0, [x0, #16]
    f204:	b	f20c <PySequence_Fast@plt+0xafcc>
    f208:	mov	x0, #0x0                   	// #0
    f20c:	ldr	x1, [sp, #112]
    f210:	add	x0, x0, x1
    f214:	str	x0, [sp, #104]
    f218:	str	xzr, [sp, #128]
    f21c:	str	xzr, [sp, #120]
    f220:	ldr	x0, [sp, #40]
    f224:	cmp	x0, #0x0
    f228:	b.ne	f260 <PySequence_Fast@plt+0xb020>  // b.any
    f22c:	ldr	x0, [sp, #112]
    f230:	cmp	x0, #0x0
    f234:	b.lt	f260 <PySequence_Fast@plt+0xb020>  // b.tstop
    f238:	ldr	x0, [sp, #112]
    f23c:	cmp	x0, #0x0
    f240:	b.gt	f260 <PySequence_Fast@plt+0xb020>
    f244:	ldr	x0, [sp, #48]
    f248:	add	x0, x0, #0x18
    f24c:	cmp	x0, #0x0
    f250:	b.eq	f260 <PySequence_Fast@plt+0xb020>  // b.none
    f254:	ldr	x0, [sp, #48]
    f258:	add	x0, x0, #0x18
    f25c:	b	f298 <PySequence_Fast@plt+0xb058>
    f260:	ldr	x0, [sp, #48]
    f264:	add	x8, x0, #0x18
    f268:	add	x0, sp, #0x50
    f26c:	str	x0, [sp]
    f270:	mov	w7, #0x0                   	// #0
    f274:	mov	w6, #0x0                   	// #0
    f278:	mov	w5, #0x0                   	// #0
    f27c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f280:	add	x4, x0, #0x3e8
    f284:	mov	x3, #0x0                   	// #0
    f288:	ldr	x2, [sp, #40]
    f28c:	ldr	x1, [sp, #112]
    f290:	mov	x0, x8
    f294:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    f298:	str	x0, [sp, #96]
    f29c:	ldr	x0, [sp, #96]
    f2a0:	cmp	x0, #0x0
    f2a4:	b.eq	f3d8 <PySequence_Fast@plt+0xb198>  // b.none
    f2a8:	ldr	x0, [sp, #104]
    f2ac:	cmp	x0, #0x0
    f2b0:	b.eq	f3b4 <PySequence_Fast@plt+0xb174>  // b.none
    f2b4:	ldr	x0, [sp, #96]
    f2b8:	ldr	x0, [x0]
    f2bc:	cmp	x0, #0x0
    f2c0:	b.eq	f2e8 <PySequence_Fast@plt+0xb0a8>  // b.none
    f2c4:	ldr	x0, [sp, #96]
    f2c8:	ldr	x0, [x0]
    f2cc:	str	x0, [sp, #128]
    f2d0:	ldr	x0, [sp, #104]
    f2d4:	sub	x0, x0, #0x1
    f2d8:	str	x0, [sp, #104]
    f2dc:	ldr	x0, [sp, #104]
    f2e0:	cmp	x0, #0x0
    f2e4:	b.eq	f3bc <PySequence_Fast@plt+0xb17c>  // b.none
    f2e8:	ldr	x0, [sp, #96]
    f2ec:	add	x0, x0, #0x8
    f2f0:	ldr	x1, [x0]
    f2f4:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    f2f8:	ldr	x0, [x0, #3976]
    f2fc:	cmp	x1, x0
    f300:	b.ne	f30c <PySequence_Fast@plt+0xb0cc>  // b.any
    f304:	str	xzr, [sp, #120]
    f308:	b	f3c0 <PySequence_Fast@plt+0xb180>
    f30c:	ldr	x0, [sp, #96]
    f310:	add	x0, x0, #0x8
    f314:	ldr	x0, [x0]
    f318:	ldr	x0, [x0, #8]
    f31c:	ldr	x0, [x0, #168]
    f320:	and	x0, x0, #0x10000000
    f324:	cmp	x0, #0x0
    f328:	b.eq	f384 <PySequence_Fast@plt+0xb144>  // b.none
    f32c:	ldr	x0, [sp, #96]
    f330:	add	x0, x0, #0x8
    f334:	ldr	x0, [x0]
    f338:	add	x1, sp, #0x48
    f33c:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    f340:	str	x0, [sp, #120]
    f344:	ldr	x0, [sp, #120]
    f348:	cmp	x0, #0x0
    f34c:	b.eq	f3e0 <PySequence_Fast@plt+0xb1a0>  // b.none
    f350:	ldr	x0, [sp, #120]
    f354:	bl	3c70 <strlen@plt>
    f358:	ldr	x1, [sp, #72]
    f35c:	cmp	x0, x1
    f360:	b.eq	f3c0 <PySequence_Fast@plt+0xb180>  // b.none
    f364:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    f368:	ldr	x0, [x0, #3928]
    f36c:	ldr	x2, [x0]
    f370:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f374:	add	x1, x0, #0x528
    f378:	mov	x0, x2
    f37c:	bl	3de0 <PyErr_SetString@plt>
    f380:	b	f3e4 <PySequence_Fast@plt+0xb1a4>
    f384:	ldr	x0, [sp, #96]
    f388:	add	x0, x0, #0x8
    f38c:	ldr	x0, [x0]
    f390:	mov	x3, x0
    f394:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f398:	add	x2, x0, #0x540
    f39c:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f3a0:	add	x1, x0, #0x550
    f3a4:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f3a8:	add	x0, x0, #0x568
    f3ac:	bl	3ed0 <_PyArg_BadArgument@plt>
    f3b0:	b	f3e4 <PySequence_Fast@plt+0xb1a4>
    f3b4:	nop
    f3b8:	b	f3c0 <PySequence_Fast@plt+0xb180>
    f3bc:	nop
    f3c0:	ldr	x2, [sp, #120]
    f3c4:	ldr	x1, [sp, #128]
    f3c8:	ldr	x0, [sp, #56]
    f3cc:	bl	c6fc <PySequence_Fast@plt+0x84bc>
    f3d0:	str	w0, [sp, #140]
    f3d4:	b	f3e4 <PySequence_Fast@plt+0xb1a4>
    f3d8:	nop
    f3dc:	b	f3e4 <PySequence_Fast@plt+0xb1a4>
    f3e0:	nop
    f3e4:	ldr	w0, [sp, #140]
    f3e8:	ldp	x29, x30, [sp, #16]
    f3ec:	add	sp, sp, #0x90
    f3f0:	ret
    f3f4:	stp	x29, x30, [sp, #-32]!
    f3f8:	mov	x29, sp
    f3fc:	str	x0, [sp, #24]
    f400:	str	x1, [sp, #16]
    f404:	ldr	x0, [sp, #24]
    f408:	bl	d400 <PySequence_Fast@plt+0x91c0>
    f40c:	ldp	x29, x30, [sp], #32
    f410:	ret
    f414:	stp	x29, x30, [sp, #-80]!
    f418:	mov	x29, sp
    f41c:	str	x0, [sp, #40]
    f420:	str	x1, [sp, #32]
    f424:	str	x2, [sp, #24]
    f428:	str	xzr, [sp, #72]
    f42c:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    f430:	ldr	x0, [x0, #3976]
    f434:	str	x0, [sp, #64]
    f438:	ldr	x0, [sp, #24]
    f43c:	cmp	x0, #0x0
    f440:	b.le	f450 <PySequence_Fast@plt+0xb210>
    f444:	ldr	x0, [sp, #24]
    f448:	cmp	x0, #0x2
    f44c:	b.le	f470 <PySequence_Fast@plt+0xb230>
    f450:	mov	x3, #0x2                   	// #2
    f454:	mov	x2, #0x1                   	// #1
    f458:	ldr	x1, [sp, #24]
    f45c:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f460:	add	x0, x0, #0x618
    f464:	bl	3f60 <_PyArg_CheckPositional@plt>
    f468:	cmp	w0, #0x0
    f46c:	b.eq	f4b4 <PySequence_Fast@plt+0xb274>  // b.none
    f470:	ldr	x0, [sp, #32]
    f474:	ldr	x0, [x0]
    f478:	str	x0, [sp, #56]
    f47c:	ldr	x0, [sp, #24]
    f480:	cmp	x0, #0x1
    f484:	b.le	f498 <PySequence_Fast@plt+0xb258>
    f488:	ldr	x0, [sp, #32]
    f48c:	ldr	x0, [x0, #8]
    f490:	str	x0, [sp, #64]
    f494:	b	f49c <PySequence_Fast@plt+0xb25c>
    f498:	nop
    f49c:	ldr	x2, [sp, #64]
    f4a0:	ldr	x1, [sp, #56]
    f4a4:	ldr	x0, [sp, #40]
    f4a8:	bl	d8d4 <PySequence_Fast@plt+0x9694>
    f4ac:	str	x0, [sp, #72]
    f4b0:	b	f4b8 <PySequence_Fast@plt+0xb278>
    f4b4:	nop
    f4b8:	ldr	x0, [sp, #72]
    f4bc:	ldp	x29, x30, [sp], #80
    f4c0:	ret

000000000000f4c4 <PyInit__elementtree@@Base>:
    f4c4:	stp	x29, x30, [sp, #-48]!
    f4c8:	mov	x29, sp
    f4cc:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f4d0:	add	x0, x0, #0x9b8
    f4d4:	bl	3fc0 <PyState_FindModule@plt>
    f4d8:	str	x0, [sp, #40]
    f4dc:	ldr	x0, [sp, #40]
    f4e0:	cmp	x0, #0x0
    f4e4:	b.eq	f4f8 <PyInit__elementtree@@Base+0x34>  // b.none
    f4e8:	ldr	x0, [sp, #40]
    f4ec:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    f4f0:	ldr	x0, [sp, #40]
    f4f4:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f4f8:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f4fc:	add	x0, x0, #0x4c0
    f500:	bl	3e90 <PyType_Ready@plt>
    f504:	cmp	w0, #0x0
    f508:	b.ge	f514 <PyInit__elementtree@@Base+0x50>  // b.tcont
    f50c:	mov	x0, #0x0                   	// #0
    f510:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f514:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f518:	add	x0, x0, #0x660
    f51c:	bl	3e90 <PyType_Ready@plt>
    f520:	cmp	w0, #0x0
    f524:	b.ge	f530 <PyInit__elementtree@@Base+0x6c>  // b.tcont
    f528:	mov	x0, #0x0                   	// #0
    f52c:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f530:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f534:	add	x0, x0, #0x320
    f538:	bl	3e90 <PyType_Ready@plt>
    f53c:	cmp	w0, #0x0
    f540:	b.ge	f54c <PyInit__elementtree@@Base+0x88>  // b.tcont
    f544:	mov	x0, #0x0                   	// #0
    f548:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f54c:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f550:	add	x0, x0, #0x800
    f554:	bl	3e90 <PyType_Ready@plt>
    f558:	cmp	w0, #0x0
    f55c:	b.ge	f568 <PyInit__elementtree@@Base+0xa4>  // b.tcont
    f560:	mov	x0, #0x0                   	// #0
    f564:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f568:	mov	w1, #0x3f5                 	// #1013
    f56c:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f570:	add	x0, x0, #0x9b8
    f574:	bl	3f90 <PyModule_Create2@plt>
    f578:	str	x0, [sp, #40]
    f57c:	ldr	x0, [sp, #40]
    f580:	cmp	x0, #0x0
    f584:	b.ne	f590 <PyInit__elementtree@@Base+0xcc>  // b.any
    f588:	mov	x0, #0x0                   	// #0
    f58c:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f590:	ldr	x0, [sp, #40]
    f594:	bl	3e10 <PyModule_GetState@plt>
    f598:	str	x0, [sp, #32]
    f59c:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f5a0:	add	x0, x0, #0x808
    f5a4:	bl	3fa0 <PyImport_ImportModule@plt>
    f5a8:	str	x0, [sp, #24]
    f5ac:	ldr	x0, [sp, #24]
    f5b0:	cmp	x0, #0x0
    f5b4:	b.ne	f5c0 <PyInit__elementtree@@Base+0xfc>  // b.any
    f5b8:	mov	x0, #0x0                   	// #0
    f5bc:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f5c0:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f5c4:	add	x1, x0, #0x810
    f5c8:	ldr	x0, [sp, #24]
    f5cc:	bl	3d00 <PyObject_GetAttrString@plt>
    f5d0:	mov	x1, x0
    f5d4:	ldr	x0, [sp, #32]
    f5d8:	str	x1, [x0, #8]
    f5dc:	ldr	x0, [sp, #24]
    f5e0:	bl	4480 <PySequence_Fast@plt+0x240>
    f5e4:	ldr	x0, [sp, #32]
    f5e8:	ldr	x0, [x0, #8]
    f5ec:	cmp	x0, #0x0
    f5f0:	b.ne	f5fc <PyInit__elementtree@@Base+0x138>  // b.any
    f5f4:	mov	x0, #0x0                   	// #0
    f5f8:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f5fc:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f600:	add	x0, x0, #0x820
    f604:	bl	3fa0 <PyImport_ImportModule@plt>
    f608:	mov	x1, x0
    f60c:	ldr	x0, [sp, #32]
    f610:	str	x1, [x0, #16]
    f614:	ldr	x0, [sp, #32]
    f618:	ldr	x0, [x0, #16]
    f61c:	cmp	x0, #0x0
    f620:	b.ne	f62c <PyInit__elementtree@@Base+0x168>  // b.any
    f624:	mov	x0, #0x0                   	// #0
    f628:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f62c:	mov	w1, #0x0                   	// #0
    f630:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f634:	add	x0, x0, #0x838
    f638:	bl	3e80 <PyCapsule_Import@plt>
    f63c:	mov	x1, x0
    f640:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f644:	add	x0, x0, #0x430
    f648:	str	x1, [x0]
    f64c:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f650:	add	x0, x0, #0x430
    f654:	ldr	x0, [x0]
    f658:	cmp	x0, #0x0
    f65c:	b.eq	f70c <PyInit__elementtree@@Base+0x248>  // b.none
    f660:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f664:	add	x0, x0, #0x430
    f668:	ldr	x0, [x0]
    f66c:	ldr	x2, [x0]
    f670:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f674:	add	x1, x0, #0x850
    f678:	mov	x0, x2
    f67c:	bl	3ff0 <strcmp@plt>
    f680:	cmp	w0, #0x0
    f684:	b.ne	f6e8 <PyInit__elementtree@@Base+0x224>  // b.any
    f688:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f68c:	add	x0, x0, #0x430
    f690:	ldr	x0, [x0]
    f694:	ldr	w0, [x0, #8]
    f698:	cmp	w0, #0xaf
    f69c:	b.ls	f6e8 <PyInit__elementtree@@Base+0x224>  // b.plast
    f6a0:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f6a4:	add	x0, x0, #0x430
    f6a8:	ldr	x0, [x0]
    f6ac:	ldr	w0, [x0, #12]
    f6b0:	cmp	w0, #0x2
    f6b4:	b.ne	f6e8 <PyInit__elementtree@@Base+0x224>  // b.any
    f6b8:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f6bc:	add	x0, x0, #0x430
    f6c0:	ldr	x0, [x0]
    f6c4:	ldr	w0, [x0, #16]
    f6c8:	cmp	w0, #0x2
    f6cc:	b.ne	f6e8 <PyInit__elementtree@@Base+0x224>  // b.any
    f6d0:	adrp	x0, 24000 <PyInit__elementtree@@Base+0x14b3c>
    f6d4:	add	x0, x0, #0x430
    f6d8:	ldr	x0, [x0]
    f6dc:	ldr	w0, [x0, #20]
    f6e0:	cmp	w0, #0x9
    f6e4:	b.eq	f714 <PyInit__elementtree@@Base+0x250>  // b.none
    f6e8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    f6ec:	ldr	x0, [x0, #4000]
    f6f0:	ldr	x2, [x0]
    f6f4:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f6f8:	add	x1, x0, #0x868
    f6fc:	mov	x0, x2
    f700:	bl	3de0 <PyErr_SetString@plt>
    f704:	mov	x0, #0x0                   	// #0
    f708:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f70c:	mov	x0, #0x0                   	// #0
    f710:	b	f7d8 <PyInit__elementtree@@Base+0x314>
    f714:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x12b3c>
    f718:	ldr	x0, [x0, #4056]
    f71c:	ldr	x0, [x0]
    f720:	mov	x2, #0x0                   	// #0
    f724:	mov	x1, x0
    f728:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f72c:	add	x0, x0, #0x888
    f730:	bl	3ee0 <PyErr_NewException@plt>
    f734:	mov	x1, x0
    f738:	ldr	x0, [sp, #32]
    f73c:	str	x1, [x0]
    f740:	ldr	x0, [sp, #32]
    f744:	ldr	x0, [x0]
    f748:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    f74c:	ldr	x0, [sp, #32]
    f750:	ldr	x0, [x0]
    f754:	mov	x2, x0
    f758:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f75c:	add	x1, x0, #0x8b0
    f760:	ldr	x0, [sp, #40]
    f764:	bl	4120 <PyModule_AddObject@plt>
    f768:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f76c:	add	x0, x0, #0x320
    f770:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    f774:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f778:	add	x2, x0, #0x320
    f77c:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f780:	add	x1, x0, #0x8c0
    f784:	ldr	x0, [sp, #40]
    f788:	bl	4120 <PyModule_AddObject@plt>
    f78c:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f790:	add	x0, x0, #0x660
    f794:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    f798:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f79c:	add	x2, x0, #0x660
    f7a0:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f7a4:	add	x1, x0, #0x8c8
    f7a8:	ldr	x0, [sp, #40]
    f7ac:	bl	4120 <PyModule_AddObject@plt>
    f7b0:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f7b4:	add	x0, x0, #0x800
    f7b8:	bl	43e0 <PySequence_Fast@plt+0x1a0>
    f7bc:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x13b3c>
    f7c0:	add	x2, x0, #0x800
    f7c4:	adrp	x0, 10000 <PyInit__elementtree@@Base+0xb3c>
    f7c8:	add	x1, x0, #0x568
    f7cc:	ldr	x0, [sp, #40]
    f7d0:	bl	4120 <PyModule_AddObject@plt>
    f7d4:	ldr	x0, [sp, #40]
    f7d8:	ldp	x29, x30, [sp], #48
    f7dc:	ret

Disassembly of section .fini:

000000000000f7e0 <.fini>:
    f7e0:	stp	x29, x30, [sp, #-16]!
    f7e4:	mov	x29, sp
    f7e8:	ldp	x29, x30, [sp], #16
    f7ec:	ret
