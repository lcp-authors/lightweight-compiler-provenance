
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mul_test.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1e0>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	stp	x19, x20, [sp, #32]
  10:	stp	x21, x22, [sp, #48]
  14:	stp	x23, x24, [sp, #64]
  18:	str	x25, [sp, #80]
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	mul	x1, x0, x1
  28:	mov	w2, #0x0                   	// #0
  2c:	mov	x19, #0x0                   	// #0
  30:	mov	x0, #0x1                   	// #1
  34:	lsl	x4, x0, x2
  38:	lsl	x3, x21, x2
  3c:	add	x3, x19, x3
  40:	tst	x4, x20
  44:	csel	x19, x3, x19, ne  // ne = any
  48:	add	w2, w2, #0x1
  4c:	cmp	w2, #0x40
  50:	b.ne	34 <grub_mod_init-0x1ac>  // b.any
  54:	mul	x25, x20, x21
  58:	cmp	x19, x1
  5c:	cset	w22, eq  // eq = none
  60:	adrp	x0, 0 <grub_mod_init-0x1e0>
  64:	ldr	x24, [x0]
  68:	adrp	x0, 0 <grub_mod_init-0x1e0>
  6c:	ldr	x23, [x0]
  70:	str	x25, [sp, #8]
  74:	str	x19, [sp]
  78:	mov	x7, x21
  7c:	mov	x6, x20
  80:	adrp	x0, 0 <grub_mod_init-0x1e0>
  84:	ldr	x5, [x0]
  88:	adrp	x0, 0 <grub_mod_init-0x1e0>
  8c:	ldr	x4, [x0]
  90:	mov	w3, #0x2a                  	// #42
  94:	mov	x2, x24
  98:	mov	x1, x23
  9c:	mov	w0, w22
  a0:	bl	0 <grub_test_assert_helper>
  a4:	str	x25, [sp, #8]
  a8:	str	x19, [sp]
  ac:	mov	x7, x21
  b0:	mov	x6, x20
  b4:	adrp	x0, 0 <grub_mod_init-0x1e0>
  b8:	ldr	x5, [x0]
  bc:	adrp	x0, 0 <grub_mod_init-0x1e0>
  c0:	ldr	x4, [x0]
  c4:	mov	w3, #0x2d                  	// #45
  c8:	mov	x2, x24
  cc:	mov	x1, x23
  d0:	mov	w0, w22
  d4:	bl	0 <grub_test_assert_helper>
  d8:	ldp	x19, x20, [sp, #32]
  dc:	ldp	x21, x22, [sp, #48]
  e0:	ldp	x23, x24, [sp, #64]
  e4:	ldr	x25, [sp, #80]
  e8:	ldp	x29, x30, [sp, #16]
  ec:	add	sp, sp, #0x60
  f0:	ret
  f4:	nop
	...
 128:	stp	x29, x30, [sp, #-48]!
 12c:	mov	x29, sp
 130:	stp	x19, x20, [sp, #16]
 134:	stp	x21, x22, [sp, #32]
 138:	mov	x1, #0x1                   	// #1
 13c:	mov	x0, #0xffffffffffffffff    	// #-1
 140:	bl	0 <grub_mod_init-0x1e0>
 144:	mov	x1, #0xffffffffffffffff    	// #-1
 148:	mov	x0, #0x1                   	// #1
 14c:	bl	0 <grub_mod_init-0x1e0>
 150:	mov	x1, #0xffffffffffffffff    	// #-1
 154:	mov	x0, x1
 158:	bl	0 <grub_mod_init-0x1e0>
 15c:	mov	x1, #0x1                   	// #1
 160:	mov	x0, x1
 164:	bl	0 <grub_mod_init-0x1e0>
 168:	mov	x1, #0x1                   	// #1
 16c:	mov	x0, #0x2                   	// #2
 170:	bl	0 <grub_mod_init-0x1e0>
 174:	mov	x20, #0x9c40                	// #40000
 178:	mov	x19, #0x7                   	// #7
 17c:	mov	x22, #0x194                 	// #404
 180:	mov	x21, #0x1                   	// #1
 184:	add	x22, x22, x22, lsl #4
 188:	add	x0, x19, x19, lsl #1
 18c:	add	x0, x19, x0, lsl #2
 190:	add	x0, x0, x22
 194:	lsl	x1, x19, #3
 198:	sub	x1, x1, x19
 19c:	add	x19, x19, x1, lsl #2
 1a0:	add	x1, x0, x0, lsl #1
 1a4:	lsl	x1, x1, #3
 1a8:	sub	x1, x1, x0
 1ac:	adds	x19, x1, x19
 1b0:	csel	x19, x19, x21, ne  // ne = any
 1b4:	cmp	x0, #0x0
 1b8:	csel	x22, x0, x21, ne  // ne = any
 1bc:	mov	x1, x19
 1c0:	mov	x0, x22
 1c4:	bl	0 <grub_mod_init-0x1e0>
 1c8:	subs	x20, x20, #0x1
 1cc:	b.ne	184 <grub_mod_init-0x5c>  // b.any
 1d0:	ldp	x19, x20, [sp, #16]
 1d4:	ldp	x21, x22, [sp, #32]
 1d8:	ldp	x29, x30, [sp], #48
 1dc:	ret

00000000000001e0 <grub_mod_init>:
 1e0:	stp	x29, x30, [sp, #-16]!
 1e4:	mov	x29, sp
 1e8:	adrp	x0, 0 <grub_mod_init-0x1e0>
 1ec:	ldr	x1, [x0]
 1f0:	adrp	x0, 0 <grub_mod_init-0x1e0>
 1f4:	ldr	x0, [x0]
 1f8:	bl	0 <grub_test_register>
 1fc:	ldp	x29, x30, [sp], #16
 200:	ret
 204:	nop
	...

0000000000000218 <grub_mod_fini>:
 218:	stp	x29, x30, [sp, #-16]!
 21c:	mov	x29, sp
 220:	adrp	x0, 0 <grub_mod_init-0x1e0>
 224:	ldr	x0, [x0]
 228:	bl	0 <grub_test_unregister>
 22c:	ldp	x29, x30, [sp], #16
 230:	ret
 234:	nop
	...
