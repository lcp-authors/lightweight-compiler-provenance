
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 13000 <PyInit__heapq@@Base+0x1239c>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0xd4>:
     b90:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	nop
     ba8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bac:	add	x0, x0, #0x1e8
     bb0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     bb4:	add	x1, x1, #0x1e8
     bb8:	cmp	x1, x0
     bbc:	b.eq	bd4 <PyModule_AddObject@plt+0x54>  // b.none
     bc0:	adrp	x1, 13000 <PyInit__heapq@@Base+0x1239c>
     bc4:	ldr	x1, [x1, #4008]
     bc8:	cbz	x1, bd4 <PyModule_AddObject@plt+0x54>
     bcc:	mov	x16, x1
     bd0:	br	x16
     bd4:	ret
     bd8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bdc:	add	x0, x0, #0x1e8
     be0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     be4:	add	x1, x1, #0x1e8
     be8:	sub	x1, x1, x0
     bec:	lsr	x2, x1, #63
     bf0:	add	x1, x2, x1, asr #3
     bf4:	cmp	xzr, x1, asr #1
     bf8:	asr	x1, x1, #1
     bfc:	b.eq	c14 <PyModule_AddObject@plt+0x94>  // b.none
     c00:	adrp	x2, 13000 <PyInit__heapq@@Base+0x1239c>
     c04:	ldr	x2, [x2, #4064]
     c08:	cbz	x2, c14 <PyModule_AddObject@plt+0x94>
     c0c:	mov	x16, x2
     c10:	br	x16
     c14:	ret
     c18:	stp	x29, x30, [sp, #-32]!
     c1c:	mov	x29, sp
     c20:	str	x19, [sp, #16]
     c24:	adrp	x19, 14000 <PyInit__heapq@@Base+0x1339c>
     c28:	ldrb	w0, [x19, #488]
     c2c:	cbnz	w0, c54 <PyModule_AddObject@plt+0xd4>
     c30:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     c34:	ldr	x0, [x0, #4016]
     c38:	cbz	x0, c48 <PyModule_AddObject@plt+0xc8>
     c3c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c40:	ldr	x0, [x0, #88]
     c44:	bl	ae0 <__cxa_finalize@plt>
     c48:	bl	ba8 <PyModule_AddObject@plt+0x28>
     c4c:	mov	w0, #0x1                   	// #1
     c50:	strb	w0, [x19, #488]
     c54:	ldr	x19, [sp, #16]
     c58:	ldp	x29, x30, [sp], #32
     c5c:	ret
     c60:	b	bd8 <PyModule_AddObject@plt+0x58>

0000000000000c64 <PyInit__heapq@@Base>:
     c64:	stp	x29, x30, [sp, #-32]!
     c68:	str	x19, [sp, #16]
     c6c:	mov	x29, sp
     c70:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c74:	add	x0, x0, #0x60
     c78:	mov	w1, #0x3f5                 	// #1013
     c7c:	bl	b60 <PyModule_Create2@plt>
     c80:	mov	x19, x0
     c84:	cbz	x0, cb0 <PyInit__heapq@@Base+0x4c>
     c88:	adrp	x0, 1000 <PyInit__heapq@@Base+0x39c>
     c8c:	add	x0, x0, #0x64c
     c90:	mov	w1, #0x126f                	// #4719
     c94:	mov	x2, xzr
     c98:	bl	b70 <PyUnicode_DecodeUTF8@plt>
     c9c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     ca0:	mov	x2, x0
     ca4:	add	x1, x1, #0x224
     ca8:	mov	x0, x19
     cac:	bl	b80 <PyModule_AddObject@plt>
     cb0:	mov	x0, x19
     cb4:	ldr	x19, [sp, #16]
     cb8:	ldp	x29, x30, [sp], #32
     cbc:	ret
     cc0:	stp	x29, x30, [sp, #-48]!
     cc4:	stp	x22, x21, [sp, #16]
     cc8:	stp	x20, x19, [sp, #32]
     ccc:	mov	x29, sp
     cd0:	cmp	x2, #0x2
     cd4:	mov	x20, x1
     cd8:	b.eq	cfc <PyInit__heapq@@Base+0x98>  // b.none
     cdc:	mov	x8, x2
     ce0:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     ce4:	add	x0, x0, #0x235
     ce8:	mov	w2, #0x2                   	// #2
     cec:	mov	w3, #0x2                   	// #2
     cf0:	mov	x1, x8
     cf4:	bl	b50 <_PyArg_CheckPositional@plt>
     cf8:	cbz	w0, d38 <PyInit__heapq@@Base+0xd4>
     cfc:	ldr	x19, [x20]
     d00:	ldr	x8, [x19, #8]
     d04:	ldrb	w8, [x8, #171]
     d08:	tbnz	w8, #1, d28 <PyInit__heapq@@Base+0xc4>
     d0c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     d10:	ldr	x8, [x8, #4032]
     d14:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     d18:	add	x1, x1, #0x291
     d1c:	ldr	x0, [x8]
     d20:	bl	b10 <PyErr_SetString@plt>
     d24:	b	d38 <PyInit__heapq@@Base+0xd4>
     d28:	ldr	x1, [x20, #8]
     d2c:	mov	x0, x19
     d30:	bl	b30 <PyList_Append@plt>
     d34:	cbz	w0, d4c <PyInit__heapq@@Base+0xe8>
     d38:	mov	x0, xzr
     d3c:	ldp	x20, x19, [sp, #32]
     d40:	ldp	x22, x21, [sp, #16]
     d44:	ldp	x29, x30, [sp], #48
     d48:	ret
     d4c:	ldr	x20, [x19, #16]
     d50:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
     d54:	cmp	x20, x8
     d58:	b.ne	d70 <PyInit__heapq@@Base+0x10c>  // b.any
     d5c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     d60:	ldr	x8, [x8, #4056]
     d64:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     d68:	add	x1, x1, #0x2ae
     d6c:	b	d1c <PyInit__heapq@@Base+0xb8>
     d70:	sub	x21, x20, #0x1
     d74:	cmp	x21, #0x1
     d78:	b.lt	dd4 <PyInit__heapq@@Base+0x170>  // b.tstop
     d7c:	ldr	x8, [x19, #24]
     d80:	ldr	x0, [x8, x21, lsl #3]
     d84:	sub	x9, x21, #0x1
     d88:	asr	x22, x9, #1
     d8c:	ldr	x1, [x8, x22, lsl #3]
     d90:	mov	w2, wzr
     d94:	bl	b20 <PyObject_RichCompareBool@plt>
     d98:	tbnz	w0, #31, d38 <PyInit__heapq@@Base+0xd4>
     d9c:	ldr	x8, [x19, #16]
     da0:	cmp	x20, x8
     da4:	b.ne	dec <PyInit__heapq@@Base+0x188>  // b.any
     da8:	cbz	w0, dd4 <PyInit__heapq@@Base+0x170>
     dac:	ldr	x8, [x19, #24]
     db0:	lsl	x9, x22, #3
     db4:	lsl	x10, x21, #3
     db8:	cmp	x21, #0x2
     dbc:	ldr	x0, [x8, x10]
     dc0:	ldr	x11, [x8, x9]
     dc4:	mov	x21, x22
     dc8:	str	x0, [x8, x9]
     dcc:	str	x11, [x8, x10]
     dd0:	b.gt	d84 <PyInit__heapq@@Base+0x120>
     dd4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     dd8:	ldr	x0, [x0, #4048]
     ddc:	ldr	x8, [x0]
     de0:	add	x8, x8, #0x1
     de4:	str	x8, [x0]
     de8:	b	d3c <PyInit__heapq@@Base+0xd8>
     dec:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     df0:	ldr	x8, [x8, #4024]
     df4:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     df8:	add	x1, x1, #0x2c1
     dfc:	b	d1c <PyInit__heapq@@Base+0xb8>
     e00:	stp	x29, x30, [sp, #-48]!
     e04:	str	x21, [sp, #16]
     e08:	stp	x20, x19, [sp, #32]
     e0c:	mov	x29, sp
     e10:	cmp	x2, #0x2
     e14:	mov	x19, x1
     e18:	b.eq	e3c <PyInit__heapq@@Base+0x1d8>  // b.none
     e1c:	mov	x8, x2
     e20:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     e24:	add	x0, x0, #0x23e
     e28:	mov	w2, #0x2                   	// #2
     e2c:	mov	w3, #0x2                   	// #2
     e30:	mov	x1, x8
     e34:	bl	b50 <_PyArg_CheckPositional@plt>
     e38:	cbz	w0, e64 <PyInit__heapq@@Base+0x200>
     e3c:	ldr	x20, [x19]
     e40:	ldr	x8, [x20, #8]
     e44:	ldrb	w8, [x8, #171]
     e48:	tbnz	w8, #1, e6c <PyInit__heapq@@Base+0x208>
     e4c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     e50:	ldr	x8, [x8, #4032]
     e54:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     e58:	add	x1, x1, #0x291
     e5c:	ldr	x0, [x8]
     e60:	bl	b10 <PyErr_SetString@plt>
     e64:	mov	x19, xzr
     e68:	b	eec <PyInit__heapq@@Base+0x288>
     e6c:	ldr	x8, [x20, #16]
     e70:	ldr	x19, [x19, #8]
     e74:	cbz	x8, ee0 <PyInit__heapq@@Base+0x27c>
     e78:	ldr	x8, [x20, #24]
     e7c:	mov	x1, x19
     e80:	mov	w2, wzr
     e84:	ldr	x0, [x8]
     e88:	bl	b20 <PyObject_RichCompareBool@plt>
     e8c:	tbnz	w0, #31, e64 <PyInit__heapq@@Base+0x200>
     e90:	cbz	w0, ee0 <PyInit__heapq@@Base+0x27c>
     e94:	ldr	x8, [x20, #16]
     e98:	cbz	x8, f00 <PyInit__heapq@@Base+0x29c>
     e9c:	ldr	x8, [x20, #24]
     ea0:	ldr	x9, [x19]
     ea4:	mov	x0, x20
     ea8:	mov	x1, xzr
     eac:	ldr	x21, [x8]
     eb0:	add	x9, x9, #0x1
     eb4:	str	x9, [x19]
     eb8:	str	x19, [x8]
     ebc:	bl	1114 <PyInit__heapq@@Base+0x4b0>
     ec0:	cbz	w0, f14 <PyInit__heapq@@Base+0x2b0>
     ec4:	ldr	x8, [x21]
     ec8:	subs	x8, x8, #0x1
     ecc:	str	x8, [x21]
     ed0:	b.ne	e64 <PyInit__heapq@@Base+0x200>  // b.any
     ed4:	mov	x0, x21
     ed8:	bl	b00 <_Py_Dealloc@plt>
     edc:	b	e64 <PyInit__heapq@@Base+0x200>
     ee0:	ldr	x8, [x19]
     ee4:	add	x8, x8, #0x1
     ee8:	str	x8, [x19]
     eec:	mov	x0, x19
     ef0:	ldp	x20, x19, [sp, #32]
     ef4:	ldr	x21, [sp, #16]
     ef8:	ldp	x29, x30, [sp], #48
     efc:	ret
     f00:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     f04:	ldr	x8, [x8, #4056]
     f08:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     f0c:	add	x1, x1, #0x2ae
     f10:	b	e5c <PyInit__heapq@@Base+0x1f8>
     f14:	mov	x19, x21
     f18:	b	eec <PyInit__heapq@@Base+0x288>
     f1c:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
     f20:	add	x8, x8, #0x114
     f24:	mov	x0, x1
     f28:	mov	x1, x8
     f2c:	b	127c <PyInit__heapq@@Base+0x618>
     f30:	stp	x29, x30, [sp, #-32]!
     f34:	str	x19, [sp, #16]
     f38:	mov	x29, sp
     f3c:	cmp	x2, #0x2
     f40:	mov	x19, x1
     f44:	b.eq	f68 <PyInit__heapq@@Base+0x304>  // b.none
     f48:	mov	x8, x2
     f4c:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     f50:	add	x0, x0, #0x252
     f54:	mov	w2, #0x2                   	// #2
     f58:	mov	w3, #0x2                   	// #2
     f5c:	mov	x1, x8
     f60:	bl	b50 <_PyArg_CheckPositional@plt>
     f64:	cbz	w0, ff0 <PyInit__heapq@@Base+0x38c>
     f68:	ldr	x0, [x19]
     f6c:	ldr	x8, [x0, #8]
     f70:	ldrb	w8, [x8, #171]
     f74:	tbnz	w8, #1, f8c <PyInit__heapq@@Base+0x328>
     f78:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     f7c:	ldr	x8, [x8, #4032]
     f80:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     f84:	add	x1, x1, #0x291
     f88:	b	fe8 <PyInit__heapq@@Base+0x384>
     f8c:	ldr	x8, [x0, #16]
     f90:	cbz	x8, fd8 <PyInit__heapq@@Base+0x374>
     f94:	ldr	x8, [x19, #8]
     f98:	ldr	x9, [x0, #24]
     f9c:	mov	x1, xzr
     fa0:	ldr	x10, [x8]
     fa4:	ldr	x19, [x9]
     fa8:	add	x10, x10, #0x1
     fac:	str	x10, [x8]
     fb0:	str	x8, [x9]
     fb4:	bl	1114 <PyInit__heapq@@Base+0x4b0>
     fb8:	cbz	w0, ff4 <PyInit__heapq@@Base+0x390>
     fbc:	ldr	x8, [x19]
     fc0:	subs	x8, x8, #0x1
     fc4:	str	x8, [x19]
     fc8:	b.ne	ff0 <PyInit__heapq@@Base+0x38c>  // b.any
     fcc:	mov	x0, x19
     fd0:	bl	b00 <_Py_Dealloc@plt>
     fd4:	b	ff0 <PyInit__heapq@@Base+0x38c>
     fd8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     fdc:	ldr	x8, [x8, #4056]
     fe0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     fe4:	add	x1, x1, #0x2ae
     fe8:	ldr	x0, [x8]
     fec:	bl	b10 <PyErr_SetString@plt>
     ff0:	mov	x19, xzr
     ff4:	mov	x0, x19
     ff8:	ldr	x19, [sp, #16]
     ffc:	ldp	x29, x30, [sp], #32
    1000:	ret
    1004:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
    1008:	add	x8, x8, #0x114
    100c:	mov	x0, x1
    1010:	mov	x1, x8
    1014:	b	1378 <PyInit__heapq@@Base+0x714>
    1018:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
    101c:	add	x8, x8, #0x4d8
    1020:	mov	x0, x1
    1024:	mov	x1, x8
    1028:	b	127c <PyInit__heapq@@Base+0x618>
    102c:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
    1030:	add	x8, x8, #0x4d8
    1034:	mov	x0, x1
    1038:	mov	x1, x8
    103c:	b	1378 <PyInit__heapq@@Base+0x714>
    1040:	stp	x29, x30, [sp, #-32]!
    1044:	str	x19, [sp, #16]
    1048:	mov	x29, sp
    104c:	cmp	x2, #0x2
    1050:	mov	x19, x1
    1054:	b.eq	1078 <PyInit__heapq@@Base+0x414>  // b.none
    1058:	mov	x8, x2
    105c:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
    1060:	add	x0, x0, #0x280
    1064:	mov	w2, #0x2                   	// #2
    1068:	mov	w3, #0x2                   	// #2
    106c:	mov	x1, x8
    1070:	bl	b50 <_PyArg_CheckPositional@plt>
    1074:	cbz	w0, 1100 <PyInit__heapq@@Base+0x49c>
    1078:	ldr	x0, [x19]
    107c:	ldr	x8, [x0, #8]
    1080:	ldrb	w8, [x8, #171]
    1084:	tbnz	w8, #1, 109c <PyInit__heapq@@Base+0x438>
    1088:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    108c:	ldr	x8, [x8, #4032]
    1090:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1094:	add	x1, x1, #0x291
    1098:	b	10f8 <PyInit__heapq@@Base+0x494>
    109c:	ldr	x8, [x0, #16]
    10a0:	cbz	x8, 10e8 <PyInit__heapq@@Base+0x484>
    10a4:	ldr	x8, [x19, #8]
    10a8:	ldr	x9, [x0, #24]
    10ac:	mov	x1, xzr
    10b0:	ldr	x10, [x8]
    10b4:	ldr	x19, [x9]
    10b8:	add	x10, x10, #0x1
    10bc:	str	x10, [x8]
    10c0:	str	x8, [x9]
    10c4:	bl	14d8 <PyInit__heapq@@Base+0x874>
    10c8:	cbz	w0, 1104 <PyInit__heapq@@Base+0x4a0>
    10cc:	ldr	x8, [x19]
    10d0:	subs	x8, x8, #0x1
    10d4:	str	x8, [x19]
    10d8:	b.ne	1100 <PyInit__heapq@@Base+0x49c>  // b.any
    10dc:	mov	x0, x19
    10e0:	bl	b00 <_Py_Dealloc@plt>
    10e4:	b	1100 <PyInit__heapq@@Base+0x49c>
    10e8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    10ec:	ldr	x8, [x8, #4056]
    10f0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    10f4:	add	x1, x1, #0x2ae
    10f8:	ldr	x0, [x8]
    10fc:	bl	b10 <PyErr_SetString@plt>
    1100:	mov	x19, xzr
    1104:	mov	x0, x19
    1108:	ldr	x19, [sp, #16]
    110c:	ldp	x29, x30, [sp], #32
    1110:	ret
    1114:	stp	x29, x30, [sp, #-64]!
    1118:	stp	x24, x23, [sp, #16]
    111c:	stp	x22, x21, [sp, #32]
    1120:	stp	x20, x19, [sp, #48]
    1124:	mov	x29, sp
    1128:	ldr	x21, [x0, #16]
    112c:	cmp	x21, x1
    1130:	b.le	1244 <PyInit__heapq@@Base+0x5e0>
    1134:	asr	x23, x21, #1
    1138:	mov	x19, x0
    113c:	mov	x20, x1
    1140:	cmp	x23, x1
    1144:	mov	x22, x1
    1148:	b.le	11d0 <PyInit__heapq@@Base+0x56c>
    114c:	ldr	x8, [x19, #24]
    1150:	mov	x24, x20
    1154:	b	1188 <PyInit__heapq@@Base+0x524>
    1158:	ldr	x8, [x19, #24]
    115c:	eor	w9, w0, #0x1
    1160:	add	x22, x22, x9
    1164:	lsl	x9, x22, #3
    1168:	lsl	x10, x24, #3
    116c:	ldr	x11, [x8, x10]
    1170:	ldr	x12, [x8, x9]
    1174:	cmp	x22, x23
    1178:	mov	x24, x22
    117c:	str	x11, [x8, x9]
    1180:	str	x12, [x8, x10]
    1184:	b.ge	11d0 <PyInit__heapq@@Base+0x56c>  // b.tcont
    1188:	mov	w22, #0x1                   	// #1
    118c:	bfi	x22, x24, #1, #63
    1190:	add	x9, x22, #0x1
    1194:	cmp	x9, x21
    1198:	b.ge	1164 <PyInit__heapq@@Base+0x500>  // b.tcont
    119c:	ldr	x0, [x8, x22, lsl #3]
    11a0:	ldr	x1, [x8, x9, lsl #3]
    11a4:	mov	w2, wzr
    11a8:	bl	b20 <PyObject_RichCompareBool@plt>
    11ac:	tbnz	w0, #31, 125c <PyInit__heapq@@Base+0x5f8>
    11b0:	ldr	x8, [x19, #16]
    11b4:	cmp	x21, x8
    11b8:	b.eq	1158 <PyInit__heapq@@Base+0x4f4>  // b.none
    11bc:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    11c0:	ldr	x8, [x8, #4024]
    11c4:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    11c8:	add	x1, x1, #0x2c1
    11cc:	b	1254 <PyInit__heapq@@Base+0x5f0>
    11d0:	cmp	x21, x22
    11d4:	b.le	1244 <PyInit__heapq@@Base+0x5e0>
    11d8:	cmp	x22, x20
    11dc:	b.le	1274 <PyInit__heapq@@Base+0x610>
    11e0:	ldr	x9, [x19, #24]
    11e4:	ldr	x8, [x9, x22, lsl #3]
    11e8:	sub	x10, x22, #0x1
    11ec:	asr	x23, x10, #1
    11f0:	ldr	x1, [x9, x23, lsl #3]
    11f4:	mov	x0, x8
    11f8:	mov	w2, wzr
    11fc:	bl	b20 <PyObject_RichCompareBool@plt>
    1200:	tbnz	w0, #31, 125c <PyInit__heapq@@Base+0x5f8>
    1204:	ldr	x8, [x19, #16]
    1208:	cmp	x21, x8
    120c:	b.ne	11bc <PyInit__heapq@@Base+0x558>  // b.any
    1210:	cbz	w0, 1260 <PyInit__heapq@@Base+0x5fc>
    1214:	ldr	x9, [x19, #24]
    1218:	lsl	x10, x23, #3
    121c:	lsl	x11, x22, #3
    1220:	mov	w0, wzr
    1224:	ldr	x8, [x9, x11]
    1228:	ldr	x12, [x9, x10]
    122c:	cmp	x23, x20
    1230:	mov	x22, x23
    1234:	str	x8, [x9, x10]
    1238:	str	x12, [x9, x11]
    123c:	b.gt	11e8 <PyInit__heapq@@Base+0x584>
    1240:	b	1260 <PyInit__heapq@@Base+0x5fc>
    1244:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1248:	ldr	x8, [x8, #4056]
    124c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1250:	add	x1, x1, #0x2ae
    1254:	ldr	x0, [x8]
    1258:	bl	b10 <PyErr_SetString@plt>
    125c:	mov	w0, #0xffffffff            	// #-1
    1260:	ldp	x20, x19, [sp, #48]
    1264:	ldp	x22, x21, [sp, #32]
    1268:	ldp	x24, x23, [sp, #16]
    126c:	ldp	x29, x30, [sp], #64
    1270:	ret
    1274:	mov	w0, wzr
    1278:	b	1260 <PyInit__heapq@@Base+0x5fc>
    127c:	stp	x29, x30, [sp, #-48]!
    1280:	stp	x22, x21, [sp, #16]
    1284:	stp	x20, x19, [sp, #32]
    1288:	mov	x29, sp
    128c:	ldr	x8, [x0, #8]
    1290:	ldrb	w8, [x8, #171]
    1294:	tbnz	w8, #1, 12ac <PyInit__heapq@@Base+0x648>
    1298:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    129c:	ldr	x8, [x8, #4032]
    12a0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    12a4:	add	x1, x1, #0x291
    12a8:	b	1314 <PyInit__heapq@@Base+0x6b0>
    12ac:	ldr	x22, [x0, #16]
    12b0:	mov	x20, x0
    12b4:	cbz	x22, 1304 <PyInit__heapq@@Base+0x6a0>
    12b8:	ldr	x8, [x20, #24]
    12bc:	mov	x21, x1
    12c0:	sub	x1, x22, #0x1
    12c4:	mov	x0, x20
    12c8:	ldr	x19, [x8, x1, lsl #3]
    12cc:	mov	x2, x22
    12d0:	mov	x3, xzr
    12d4:	ldr	x8, [x19]
    12d8:	add	x8, x8, #0x1
    12dc:	str	x8, [x19]
    12e0:	bl	af0 <PyList_SetSlice@plt>
    12e4:	cbz	w0, 1334 <PyInit__heapq@@Base+0x6d0>
    12e8:	ldr	x8, [x19]
    12ec:	subs	x8, x8, #0x1
    12f0:	str	x8, [x19]
    12f4:	b.ne	131c <PyInit__heapq@@Base+0x6b8>  // b.any
    12f8:	mov	x0, x19
    12fc:	bl	b00 <_Py_Dealloc@plt>
    1300:	b	131c <PyInit__heapq@@Base+0x6b8>
    1304:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1308:	ldr	x8, [x8, #4056]
    130c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1310:	add	x1, x1, #0x2ae
    1314:	ldr	x0, [x8]
    1318:	bl	b10 <PyErr_SetString@plt>
    131c:	mov	x19, xzr
    1320:	mov	x0, x19
    1324:	ldp	x20, x19, [sp, #32]
    1328:	ldp	x22, x21, [sp, #16]
    132c:	ldp	x29, x30, [sp], #48
    1330:	ret
    1334:	cmp	x22, #0x1
    1338:	b.eq	1320 <PyInit__heapq@@Base+0x6bc>  // b.none
    133c:	ldr	x8, [x20, #24]
    1340:	mov	x0, x20
    1344:	mov	x1, xzr
    1348:	ldr	x22, [x8]
    134c:	str	x19, [x8]
    1350:	blr	x21
    1354:	cbz	w0, 1370 <PyInit__heapq@@Base+0x70c>
    1358:	ldr	x8, [x22]
    135c:	subs	x8, x8, #0x1
    1360:	str	x8, [x22]
    1364:	b.ne	131c <PyInit__heapq@@Base+0x6b8>  // b.any
    1368:	mov	x0, x22
    136c:	b	12fc <PyInit__heapq@@Base+0x698>
    1370:	mov	x19, x22
    1374:	b	1320 <PyInit__heapq@@Base+0x6bc>
    1378:	stp	x29, x30, [sp, #-80]!
    137c:	str	x25, [sp, #16]
    1380:	stp	x24, x23, [sp, #32]
    1384:	stp	x22, x21, [sp, #48]
    1388:	stp	x20, x19, [sp, #64]
    138c:	mov	x29, sp
    1390:	ldr	x8, [x0, #8]
    1394:	ldrb	w8, [x8, #171]
    1398:	tbnz	w8, #1, 13d0 <PyInit__heapq@@Base+0x76c>
    139c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    13a0:	ldr	x8, [x8, #4032]
    13a4:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    13a8:	add	x1, x1, #0x291
    13ac:	ldr	x0, [x8]
    13b0:	bl	b10 <PyErr_SetString@plt>
    13b4:	mov	x0, xzr
    13b8:	ldp	x20, x19, [sp, #64]
    13bc:	ldp	x22, x21, [sp, #48]
    13c0:	ldp	x24, x23, [sp, #32]
    13c4:	ldr	x25, [sp, #16]
    13c8:	ldp	x29, x30, [sp], #80
    13cc:	ret
    13d0:	ldr	x8, [x0, #16]
    13d4:	mov	x19, x0
    13d8:	mov	x20, x1
    13dc:	cmp	x8, #0x9c5
    13e0:	b.lt	14b8 <PyInit__heapq@@Base+0x854>  // b.tstop
    13e4:	lsr	x23, x8, #1
    13e8:	mov	x9, xzr
    13ec:	add	x10, x23, #0x1
    13f0:	lsr	x11, x10, #1
    13f4:	cmp	x10, #0x3
    13f8:	add	x9, x9, #0x1
    13fc:	mov	x10, x11
    1400:	b.hi	13f0 <PyInit__heapq@@Base+0x78c>  // b.pmore
    1404:	lsl	x24, x11, x9
    1408:	asr	x25, x8, #2
    140c:	sub	x21, x24, #0x2
    1410:	cmp	x21, x25
    1414:	b.lt	1454 <PyInit__heapq@@Base+0x7f0>  // b.tstop
    1418:	mov	x0, x19
    141c:	mov	x1, x21
    1420:	blr	x20
    1424:	mov	x22, x21
    1428:	cbnz	w0, 13b4 <PyInit__heapq@@Base+0x750>
    142c:	tbz	w22, #0, 1448 <PyInit__heapq@@Base+0x7e4>
    1430:	asr	x22, x22, #1
    1434:	mov	x0, x19
    1438:	mov	x1, x22
    143c:	blr	x20
    1440:	cbz	w0, 142c <PyInit__heapq@@Base+0x7c8>
    1444:	b	13b4 <PyInit__heapq@@Base+0x750>
    1448:	sub	x21, x21, #0x1
    144c:	cmp	x21, x25
    1450:	b.ge	1418 <PyInit__heapq@@Base+0x7b4>  // b.tcont
    1454:	sub	x24, x24, #0x1
    1458:	cmp	x23, x24
    145c:	b.le	14a0 <PyInit__heapq@@Base+0x83c>
    1460:	sub	x21, x23, #0x1
    1464:	mov	x0, x19
    1468:	mov	x1, x21
    146c:	blr	x20
    1470:	mov	x22, x21
    1474:	cbnz	w0, 13b4 <PyInit__heapq@@Base+0x750>
    1478:	tbz	w22, #0, 1494 <PyInit__heapq@@Base+0x830>
    147c:	asr	x22, x22, #1
    1480:	mov	x0, x19
    1484:	mov	x1, x22
    1488:	blr	x20
    148c:	cbz	w0, 1478 <PyInit__heapq@@Base+0x814>
    1490:	b	13b4 <PyInit__heapq@@Base+0x750>
    1494:	sub	x21, x21, #0x1
    1498:	cmp	x21, x24
    149c:	b.ge	1464 <PyInit__heapq@@Base+0x800>  // b.tcont
    14a0:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
    14a4:	ldr	x0, [x0, #4048]
    14a8:	ldr	x8, [x0]
    14ac:	add	x8, x8, #0x1
    14b0:	str	x8, [x0]
    14b4:	b	13b8 <PyInit__heapq@@Base+0x754>
    14b8:	asr	x21, x8, #1
    14bc:	subs	x21, x21, #0x1
    14c0:	b.lt	14a0 <PyInit__heapq@@Base+0x83c>  // b.tstop
    14c4:	mov	x0, x19
    14c8:	mov	x1, x21
    14cc:	blr	x20
    14d0:	cbz	w0, 14bc <PyInit__heapq@@Base+0x858>
    14d4:	b	13b4 <PyInit__heapq@@Base+0x750>
    14d8:	stp	x29, x30, [sp, #-64]!
    14dc:	stp	x24, x23, [sp, #16]
    14e0:	stp	x22, x21, [sp, #32]
    14e4:	stp	x20, x19, [sp, #48]
    14e8:	mov	x29, sp
    14ec:	ldr	x21, [x0, #16]
    14f0:	cmp	x21, x1
    14f4:	b.le	1604 <PyInit__heapq@@Base+0x9a0>
    14f8:	asr	x23, x21, #1
    14fc:	mov	x19, x0
    1500:	mov	x20, x1
    1504:	cmp	x23, x1
    1508:	mov	x22, x1
    150c:	b.le	1594 <PyInit__heapq@@Base+0x930>
    1510:	ldr	x8, [x19, #24]
    1514:	mov	x24, x20
    1518:	b	154c <PyInit__heapq@@Base+0x8e8>
    151c:	ldr	x8, [x19, #24]
    1520:	eor	w9, w0, #0x1
    1524:	add	x22, x22, x9
    1528:	lsl	x9, x22, #3
    152c:	lsl	x10, x24, #3
    1530:	ldr	x11, [x8, x10]
    1534:	ldr	x12, [x8, x9]
    1538:	cmp	x22, x23
    153c:	mov	x24, x22
    1540:	str	x11, [x8, x9]
    1544:	str	x12, [x8, x10]
    1548:	b.ge	1594 <PyInit__heapq@@Base+0x930>  // b.tcont
    154c:	mov	w22, #0x1                   	// #1
    1550:	bfi	x22, x24, #1, #63
    1554:	add	x9, x22, #0x1
    1558:	cmp	x9, x21
    155c:	b.ge	1528 <PyInit__heapq@@Base+0x8c4>  // b.tcont
    1560:	ldr	x0, [x8, x9, lsl #3]
    1564:	ldr	x1, [x8, x22, lsl #3]
    1568:	mov	w2, wzr
    156c:	bl	b20 <PyObject_RichCompareBool@plt>
    1570:	tbnz	w0, #31, 161c <PyInit__heapq@@Base+0x9b8>
    1574:	ldr	x8, [x19, #16]
    1578:	cmp	x21, x8
    157c:	b.eq	151c <PyInit__heapq@@Base+0x8b8>  // b.none
    1580:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1584:	ldr	x8, [x8, #4024]
    1588:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    158c:	add	x1, x1, #0x2c1
    1590:	b	1614 <PyInit__heapq@@Base+0x9b0>
    1594:	cmp	x21, x22
    1598:	b.le	1604 <PyInit__heapq@@Base+0x9a0>
    159c:	cmp	x22, x20
    15a0:	b.le	1634 <PyInit__heapq@@Base+0x9d0>
    15a4:	ldr	x8, [x19, #24]
    15a8:	ldr	x1, [x8, x22, lsl #3]
    15ac:	sub	x9, x22, #0x1
    15b0:	asr	x23, x9, #1
    15b4:	ldr	x0, [x8, x23, lsl #3]
    15b8:	mov	w2, wzr
    15bc:	bl	b20 <PyObject_RichCompareBool@plt>
    15c0:	tbnz	w0, #31, 161c <PyInit__heapq@@Base+0x9b8>
    15c4:	ldr	x8, [x19, #16]
    15c8:	cmp	x21, x8
    15cc:	b.ne	1580 <PyInit__heapq@@Base+0x91c>  // b.any
    15d0:	cbz	w0, 1620 <PyInit__heapq@@Base+0x9bc>
    15d4:	ldr	x8, [x19, #24]
    15d8:	lsl	x9, x23, #3
    15dc:	lsl	x10, x22, #3
    15e0:	mov	w0, wzr
    15e4:	ldr	x1, [x8, x10]
    15e8:	ldr	x11, [x8, x9]
    15ec:	cmp	x23, x20
    15f0:	mov	x22, x23
    15f4:	str	x1, [x8, x9]
    15f8:	str	x11, [x8, x10]
    15fc:	b.gt	15ac <PyInit__heapq@@Base+0x948>
    1600:	b	1620 <PyInit__heapq@@Base+0x9bc>
    1604:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1608:	ldr	x8, [x8, #4056]
    160c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1610:	add	x1, x1, #0x2ae
    1614:	ldr	x0, [x8]
    1618:	bl	b10 <PyErr_SetString@plt>
    161c:	mov	w0, #0xffffffff            	// #-1
    1620:	ldp	x20, x19, [sp, #48]
    1624:	ldp	x22, x21, [sp, #32]
    1628:	ldp	x24, x23, [sp, #16]
    162c:	ldp	x29, x30, [sp], #64
    1630:	ret
    1634:	mov	w0, wzr
    1638:	b	1620 <PyInit__heapq@@Base+0x9bc>

Disassembly of section .fini:

000000000000163c <.fini>:
    163c:	stp	x29, x30, [sp, #-16]!
    1640:	mov	x29, sp
    1644:	ldp	x29, x30, [sp], #16
    1648:	ret
