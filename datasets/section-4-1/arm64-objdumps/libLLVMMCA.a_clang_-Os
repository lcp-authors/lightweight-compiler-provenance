In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCA.a_clang_-Os:

CodeEmitter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>:
   0:	sub	sp, sp, #0x120
   4:	stp	x29, x30, [sp, #224]
   8:	stp	x28, x23, [sp, #240]
   c:	stp	x22, x21, [sp, #256]
  10:	stp	x20, x19, [sp, #272]
  14:	add	x29, sp, #0xe0
  18:	ldr	w8, [x0, #368]
  1c:	cmp	w8, w1
  20:	b.ls	16c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x16c>  // b.plast
  24:	ldr	x9, [x0, #360]
  28:	mov	w8, w1
  2c:	mov	x19, x0
  30:	add	x22, x9, x8, lsl #3
  34:	mov	x23, x22
  38:	ldr	w9, [x23, #4]!
  3c:	cbz	w9, 48 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x48>
  40:	ldr	x19, [x22]
  44:	b	150 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x150>
  48:	adrp	x9, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  4c:	ldr	d0, [x9]
  50:	sub	x9, x29, #0x40
  54:	add	x9, x9, #0x10
  58:	stur	x9, [x29, #-64]
  5c:	stur	d0, [x29, #-56]
  60:	ldr	x9, [x19, #352]
  64:	cmp	x9, x8
  68:	b.ls	18c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x18c>  // b.plast
  6c:	ldr	x9, [x19, #344]
  70:	mov	w10, #0xa0                  	// #160
  74:	adrp	x12, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  78:	ldr	d1, [x12]
  7c:	madd	x21, x8, x10, x9
  80:	ldr	q0, [x21]
  84:	mov	x11, sp
  88:	add	x10, x11, #0x20
  8c:	str	x10, [sp, #16]
  90:	str	q0, [sp]
  94:	str	d1, [sp, #24]
  98:	ldr	w10, [x21, #24]
  9c:	add	x20, x11, #0x10
  a0:	cbz	w10, b8 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xb8>
  a4:	mov	w10, #0xa0                  	// #160
  a8:	madd	x8, x8, x10, x9
  ac:	add	x1, x8, #0x10
  b0:	mov	x0, x20
  b4:	bl	0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  b8:	ldp	x2, x0, [x19]
  bc:	mov	x1, x21
  c0:	ldr	x8, [x0]
  c4:	ldr	x8, [x8, #128]
  c8:	blr	x8
  cc:	tbz	w0, #0, e8 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xe8>
  d0:	ldp	x2, x0, [x19]
  d4:	mov	x3, sp
  d8:	mov	x1, x21
  dc:	ldr	x8, [x0]
  e0:	ldr	x8, [x8, #152]
  e4:	blr	x8
  e8:	ldr	w8, [x19, #32]
  ec:	add	x2, x19, #0x128
  f0:	mov	x1, sp
  f4:	sub	x3, x29, #0x40
  f8:	str	w8, [x22]
  fc:	ldr	x0, [x19, #16]
 100:	ldr	x4, [x19]
 104:	sub	x21, x29, #0x40
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #32]
 110:	blr	x8
 114:	ldr	w8, [x19, #32]
 118:	ldr	w9, [x22]
 11c:	sub	w8, w8, w9
 120:	str	w8, [x23]
 124:	ldr	x0, [sp, #16]
 128:	ldr	x19, [x22]
 12c:	add	x8, x20, #0x10
 130:	cmp	x0, x8
 134:	b.eq	13c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldur	x0, [x29, #-64]
 140:	add	x8, x21, #0x10
 144:	cmp	x0, x8
 148:	b.eq	150 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x19
 154:	ldp	x20, x19, [sp, #272]
 158:	ldp	x22, x21, [sp, #256]
 15c:	ldp	x28, x23, [sp, #240]
 160:	ldp	x29, x30, [sp, #224]
 164:	add	sp, sp, #0x120
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 170:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 174:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x95                  	// #149
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 190:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 194:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0xfa                  	// #250
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x10                  	// #16
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #4
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #4
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #4
  a4:	add	x8, x9, x8, lsl #4
  a8:	add	x0, x10, x22, lsl #4
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Context.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x28, x27, [sp, #96]
   c:	stp	x26, x25, [sp, #112]
  10:	stp	x24, x23, [sp, #128]
  14:	stp	x22, x21, [sp, #144]
  18:	stp	x20, x19, [sp, #160]
  1c:	add	x29, sp, #0x50
  20:	ldr	x9, [x0, #56]
  24:	mov	x23, x0
  28:	mov	w0, #0x38                  	// #56
  2c:	mov	x21, x2
  30:	ldr	x22, [x9, #152]
  34:	mov	x19, x1
  38:	str	x8, [sp]
  3c:	bl	0 <_Znwm>
  40:	mov	x1, x22
  44:	mov	x20, x0
  48:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  4c:	ldr	x24, [x23, #48]
  50:	mov	w0, #0x98                  	// #152
  54:	bl	0 <_Znwm>
  58:	ldr	w3, [x19, #12]
  5c:	mov	x1, x22
  60:	mov	x2, x24
  64:	mov	x28, x0
  68:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
  6c:	mov	w0, #0x50                  	// #80
  70:	bl	0 <_Znwm>
  74:	ldp	w2, w3, [x19, #16]
  78:	ldrb	w4, [x19, #24]
  7c:	mov	x1, x22
  80:	mov	x26, x0
  84:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  88:	adrp	x8, 0 <_ZTVN4llvm3mca6LSUnitE>
  8c:	ldr	x8, [x8]
  90:	movi	v0.2d, #0x0
  94:	mov	w0, #0x90                  	// #144
  98:	stur	d0, [x26, #68]
  9c:	add	x8, x8, #0x10
  a0:	str	x8, [x26]
  a4:	str	wzr, [x26, #76]
  a8:	bl	0 <_Znwm>
  ac:	mov	x1, x22
  b0:	mov	x2, x26
  b4:	mov	x27, x0
  b8:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
  bc:	mov	w0, #0xf0                  	// #240
  c0:	bl	0 <_Znwm>
  c4:	mov	x8, x0
  c8:	add	x9, x0, #0x60
  cc:	str	xzr, [x0, #8]
  d0:	str	wzr, [x8, #24]!
  d4:	stp	xzr, x9, [x0, #72]
  d8:	adrp	x9, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
  dc:	ldr	d0, [x9]
  e0:	str	x21, [x0, #224]
  e4:	adrp	x9, 0 <_ZTVN4llvm3mca10EntryStageE>
  e8:	ldr	x9, [x9]
  ec:	str	wzr, [x0, #64]
  f0:	str	wzr, [x0, #232]
  f4:	stp	xzr, x8, [x0, #32]
  f8:	add	x9, x9, #0x10
  fc:	stp	x8, xzr, [x0, #48]
 100:	str	x9, [x0]
 104:	str	d0, [x0, #88]
 108:	ldp	x22, x21, [x23, #48]
 10c:	mov	x25, x0
 110:	mov	w0, #0x78                  	// #120
 114:	bl	0 <_Znwm>
 118:	ldr	w3, [x19, #8]
 11c:	mov	x1, x21
 120:	mov	x2, x22
 124:	mov	x4, x20
 128:	mov	x5, x28
 12c:	mov	x24, x0
 130:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 134:	mov	w0, #0x58                  	// #88
 138:	bl	0 <_Znwm>
 13c:	ldrb	w8, [x19, #25]
 140:	str	xzr, [x0, #8]
 144:	adrp	x10, 0 <_ZTVN4llvm3mca12ExecuteStageE>
 148:	ldr	x10, [x10]
 14c:	mov	x9, x0
 150:	str	wzr, [x9, #24]!
 154:	movi	v0.2d, #0x0
 158:	add	x10, x10, #0x10
 15c:	mov	x22, x0
 160:	stp	xzr, x9, [x0, #32]
 164:	stp	x9, xzr, [x0, #48]
 168:	str	x10, [x0]
 16c:	str	x27, [x0, #64]
 170:	str	d0, [x0, #72]
 174:	strb	w8, [x0, #80]
 178:	mov	w0, #0x58                  	// #88
 17c:	bl	0 <_Znwm>
 180:	str	xzr, [x0, #8]
 184:	adrp	x9, 0 <_ZTVN4llvm3mca11RetireStageE>
 188:	ldr	x9, [x9]
 18c:	mov	x8, x0
 190:	str	wzr, [x8, #24]!
 194:	mov	x21, x0
 198:	add	x9, x9, #0x10
 19c:	stp	x20, x28, [x0, #64]
 1a0:	str	x26, [x0, #80]
 1a4:	stp	xzr, x8, [x0, #32]
 1a8:	stp	x8, xzr, [x0, #48]
 1ac:	str	x9, [x0]
 1b0:	sub	x1, x29, #0x8
 1b4:	mov	x0, x23
 1b8:	stur	x20, [x29, #-8]
 1bc:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 1c0:	ldur	x0, [x29, #-8]
 1c4:	cbz	x0, 1d4 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x1d4>
 1c8:	ldr	x8, [x0]
 1cc:	ldr	x8, [x8, #8]
 1d0:	blr	x8
 1d4:	sub	x1, x29, #0x10
 1d8:	mov	x0, x23
 1dc:	stp	x28, xzr, [x29, #-16]
 1e0:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 1e4:	ldur	x0, [x29, #-16]
 1e8:	cbz	x0, 1f8 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x1f8>
 1ec:	ldr	x8, [x0]
 1f0:	ldr	x8, [x8, #8]
 1f4:	blr	x8
 1f8:	sub	x1, x29, #0x18
 1fc:	mov	x0, x23
 200:	stp	x26, xzr, [x29, #-24]
 204:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 208:	ldur	x0, [x29, #-24]
 20c:	cbz	x0, 21c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x21c>
 210:	ldr	x8, [x0]
 214:	ldr	x8, [x8, #8]
 218:	blr	x8
 21c:	sub	x1, x29, #0x20
 220:	mov	x0, x23
 224:	stp	x27, xzr, [x29, #-32]
 228:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 22c:	ldur	x0, [x29, #-32]
 230:	cbz	x0, 240 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x240>
 234:	ldr	x8, [x0]
 238:	ldr	x8, [x8, #8]
 23c:	blr	x8
 240:	mov	w0, #0x88                  	// #136
 244:	stur	xzr, [x29, #-32]
 248:	bl	0 <_Znwm>
 24c:	adrp	x8, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 250:	ldr	d0, [x8]
 254:	ldr	x10, [sp]
 258:	add	x8, x0, #0x10
 25c:	mov	x9, x0
 260:	str	x8, [x0]
 264:	str	d0, [x0, #8]
 268:	str	wzr, [x9, #88]!
 26c:	add	x1, sp, #0x28
 270:	mov	x20, x0
 274:	str	x0, [x10]
 278:	str	wzr, [x0, #128]
 27c:	stp	xzr, x9, [x0, #96]
 280:	stp	x9, xzr, [x0, #112]
 284:	str	x25, [sp, #40]
 288:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 28c:	ldr	x0, [sp, #40]
 290:	cbz	x0, 2a0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2a0>
 294:	ldr	x8, [x0]
 298:	ldr	x8, [x8, #8]
 29c:	blr	x8
 2a0:	str	xzr, [sp, #40]
 2a4:	ldr	w23, [x19]
 2a8:	cbz	w23, 2f0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2f0>
 2ac:	mov	w0, #0xe8                  	// #232
 2b0:	bl	0 <_Znwm>
 2b4:	ldr	w2, [x19, #4]
 2b8:	mov	w3, #0x1                   	// #1
 2bc:	mov	w1, w23
 2c0:	mov	x19, x0
 2c4:	bl	0 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>
 2c8:	add	x1, sp, #0x20
 2cc:	mov	x0, x20
 2d0:	str	x19, [sp, #32]
 2d4:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 2d8:	ldr	x0, [sp, #32]
 2dc:	cbz	x0, 2ec <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2ec>
 2e0:	ldr	x8, [x0]
 2e4:	ldr	x8, [x8, #8]
 2e8:	blr	x8
 2ec:	str	xzr, [sp, #32]
 2f0:	add	x1, sp, #0x18
 2f4:	mov	x0, x20
 2f8:	str	x24, [sp, #24]
 2fc:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 300:	ldr	x0, [sp, #24]
 304:	cbz	x0, 314 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x314>
 308:	ldr	x8, [x0]
 30c:	ldr	x8, [x8, #8]
 310:	blr	x8
 314:	add	x1, sp, #0x10
 318:	mov	x0, x20
 31c:	stp	x22, xzr, [sp, #16]
 320:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 324:	ldr	x0, [sp, #16]
 328:	cbz	x0, 338 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x338>
 32c:	ldr	x8, [x0]
 330:	ldr	x8, [x8, #8]
 334:	blr	x8
 338:	add	x1, sp, #0x8
 33c:	mov	x0, x20
 340:	stp	x21, xzr, [sp, #8]
 344:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 348:	ldr	x0, [sp, #8]
 34c:	cbz	x0, 35c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x35c>
 350:	ldr	x8, [x0]
 354:	ldr	x8, [x8, #8]
 358:	blr	x8
 35c:	ldp	x20, x19, [sp, #160]
 360:	ldp	x22, x21, [sp, #144]
 364:	ldp	x24, x23, [sp, #128]
 368:	ldp	x26, x25, [sp, #112]
 36c:	ldp	x28, x27, [sp, #96]
 370:	ldp	x29, x30, [sp, #80]
 374:	add	sp, sp, #0xb0
 378:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x4c>  // b.hs, b.nlast
  20:	ldr	x10, [x19]
  24:	ldr	x11, [x20]
  28:	cmp	w8, w9
  2c:	str	xzr, [x20]
  30:	str	x11, [x10, w8, uxtw #3]
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  58:	ldp	w8, w9, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 114 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x114>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 114 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x114>
  ec:	sub	x23, x0, #0x8
  f0:	ldr	x0, [x23, x22]
  f4:	cbz	x0, 104 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x104>
  f8:	ldr	x8, [x0]
  fc:	ldr	x8, [x8, #8]
 100:	blr	x8
 104:	str	xzr, [x23, x22]
 108:	subs	x22, x22, #0x8
 10c:	b.ne	f0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xf0>  // b.any
 110:	ldr	x0, [x19]
 114:	add	x8, x19, #0x10
 118:	cmp	x0, x8
 11c:	b.eq	124 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x124>  // b.none
 120:	bl	0 <free>
 124:	str	x20, [x19]
 128:	str	w21, [x19, #12]
 12c:	ldp	x20, x19, [sp, #48]
 130:	ldp	x22, x21, [sp, #32]
 134:	ldr	x23, [sp, #16]
 138:	ldp	x29, x30, [sp], #64
 13c:	ret

Disassembly of section .text._ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseE:

0000000000000000 <_ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseE>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	add	x3, sp, #0x8
  10:	str	xzr, [sp, #8]
  14:	bl	0 <_ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseE>
  18:	ldr	x0, [sp, #8]
  1c:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseE+0x2c>
  20:	ldr	x8, [x0]
  24:	ldr	x8, [x8, #8]
  28:	blr	x8
  2c:	ldp	x29, x30, [sp, #16]
  30:	add	sp, sp, #0x20
  34:	ret

Disassembly of section .text._ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS8_EE:

0000000000000000 <_ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS8_EE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	mov	x22, x0
  1c:	mov	w0, #0x168                 	// #360
  20:	mov	x19, x3
  24:	mov	x20, x2
  28:	mov	x21, x1
  2c:	bl	0 <_Znwm>
  30:	mov	x1, x21
  34:	mov	x23, x0
  38:	bl	0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>
  3c:	str	x23, [x29, #24]
  40:	ldr	x8, [x19]
  44:	add	x1, x29, #0x18
  48:	add	x3, sp, #0x8
  4c:	mov	x0, x22
  50:	mov	x2, x20
  54:	str	xzr, [x19]
  58:	str	x8, [sp, #8]
  5c:	bl	0 <_ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS8_EE>
  60:	ldr	x0, [sp, #8]
  64:	cbz	x0, 74 <_ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS8_EE+0x74>
  68:	ldr	x8, [x0]
  6c:	ldr	x8, [x8, #8]
  70:	blr	x8
  74:	ldr	x0, [x29, #24]
  78:	str	xzr, [sp, #8]
  7c:	cbz	x0, 8c <_ZN4llvm3mca9SchedulerC2ERKNS_12MCSchedModelERNS0_10LSUnitBaseESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS8_EE+0x8c>
  80:	ldr	x8, [x0]
  84:	ldr	x8, [x8, #8]
  88:	blr	x8
  8c:	ldp	x20, x19, [sp, #64]
  90:	ldp	x22, x21, [sp, #48]
  94:	ldr	x23, [sp, #32]
  98:	ldp	x29, x30, [sp, #16]
  9c:	add	sp, sp, #0x50
  a0:	ret

Disassembly of section .text._ZN4llvm3mca9SchedulerC2ESt10unique_ptrINS0_15ResourceManagerESt14default_deleteIS3_EERNS0_10LSUnitBaseES2_INS0_17SchedulerStrategyES4_IS9_EE:

0000000000000000 <_ZN4llvm3mca9SchedulerC2ESt10unique_ptrINS0_15ResourceManagerESt14default_deleteIS3_EERNS0_10LSUnitBaseES2_INS0_17SchedulerStrategyES4_IS9_EE>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <_ZN4llvm3mca9SchedulerC2ESt10unique_ptrINS0_15ResourceManagerESt14default_deleteIS3_EERNS0_10LSUnitBaseES2_INS0_17SchedulerStrategyES4_IS9_EE>
  10:	ldr	x8, [x8]
  14:	stp	x2, xzr, [x0, #8]
  18:	movi	v0.2d, #0x0
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x0]
  24:	ldr	x8, [x1]
  28:	str	xzr, [x1]
  2c:	stp	q0, q0, [x0, #32]
  30:	stp	q0, q0, [x0, #64]
  34:	stp	q0, q0, [x0, #96]
  38:	str	x8, [x0, #24]
  3c:	stur	q0, [x0, #125]
  40:	ldr	x8, [x3]
  44:	add	x1, sp, #0x8
  48:	str	xzr, [x3]
  4c:	str	x8, [sp, #8]
  50:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  54:	ldr	x0, [sp, #8]
  58:	cbz	x0, 68 <_ZN4llvm3mca9SchedulerC2ESt10unique_ptrINS0_15ResourceManagerESt14default_deleteIS3_EERNS0_10LSUnitBaseES2_INS0_17SchedulerStrategyES4_IS9_EE+0x68>
  5c:	ldr	x8, [x0]
  60:	ldr	x8, [x8, #8]
  64:	blr	x8
  68:	ldp	x29, x30, [sp, #16]
  6c:	add	sp, sp, #0x20
  70:	ret

Disassembly of section .text._ZN4llvm3mca9SchedulerD2Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca9SchedulerD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #104]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD2Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD2Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD2Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x0, [x19, #24]
  54:	cbz	x0, 64 <_ZN4llvm3mca9SchedulerD2Ev+0x64>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #8]
  60:	blr	x8
  64:	ldr	x0, [x19, #16]
  68:	str	xzr, [x19, #24]
  6c:	cbz	x0, 7c <_ZN4llvm3mca9SchedulerD2Ev+0x7c>
  70:	ldr	x8, [x0]
  74:	ldr	x8, [x8, #8]
  78:	blr	x8
  7c:	str	xzr, [x19, #16]
  80:	mov	x0, x19
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca9SchedulerD0Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca9SchedulerD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #104]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD0Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD0Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x0, [x19, #24]
  54:	cbz	x0, 64 <_ZN4llvm3mca9SchedulerD0Ev+0x64>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #8]
  60:	blr	x8
  64:	ldr	x0, [x19, #16]
  68:	str	xzr, [x19, #24]
  6c:	cbz	x0, 7c <_ZN4llvm3mca9SchedulerD0Ev+0x7c>
  70:	ldr	x8, [x0]
  74:	ldr	x8, [x8, #8]
  78:	blr	x8
  7c:	mov	x0, x19
  80:	str	xzr, [x19, #16]
  84:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZdlPv>

HWEventListener.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca15HWEventListener6anchorEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD2Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD0Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD0Ev>:
   0:	b	0 <_ZdlPv>

HardwareUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12HardwareUnitD1Ev>:
   0:	ret

0000000000000004 <_ZN4llvm3mca12HardwareUnitD0Ev>:
   4:	b	0 <_ZdlPv>

LSUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  14:	ldr	x9, [x9]
  18:	and	w8, w4, #0x1
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	add	x9, x9, #0x10
  28:	stp	w2, w3, [x0, #8]
  2c:	str	xzr, [x0, #16]
  30:	strb	w8, [x0, #24]
  34:	str	x9, [x0]
  38:	str	xzr, [x0, #32]!
  3c:	mov	w1, wzr
  40:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  44:	mov	w8, #0x1                   	// #1
  48:	str	w8, [x19, #64]
  4c:	ldr	x21, [x20, #64]
  50:	cbz	x21, 9c <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x9c>
  54:	ldr	w8, [x19, #8]
  58:	cbnz	w8, 78 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x78>
  5c:	ldr	w1, [x21, #36]
  60:	cbz	w1, 78 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x78>
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  6c:	ldr	w8, [x0, #16]
  70:	bic	w8, w8, w8, asr #31
  74:	str	w8, [x19, #8]
  78:	ldr	w8, [x19, #12]
  7c:	cbnz	w8, 9c <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x9c>
  80:	ldr	w1, [x21, #40]
  84:	cbz	w1, 9c <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x9c>
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  90:	ldr	w8, [x0, #16]
  94:	bic	w8, w8, w8, asr #31
  98:	str	w8, [x19, #12]
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <_ZN4llvm3mca10LSUnitBaseD0Ev>:
  ac:	brk	#0x1

00000000000000b0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv>:
  b0:	sub	sp, sp, #0x70
  b4:	stp	x29, x30, [sp, #64]
  b8:	str	x21, [sp, #80]
  bc:	stp	x20, x19, [sp, #96]
  c0:	add	x29, sp, #0x40
  c4:	ldr	x1, [x0, #40]
  c8:	ldr	w8, [x0, #56]
  cc:	ldr	w9, [x0, #48]
  d0:	add	x19, x0, #0x20
  d4:	add	x2, x1, x8, lsl #4
  d8:	cbz	w9, f8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x48>
  dc:	add	x0, sp, #0x20
  e0:	mov	x3, x19
  e4:	mov	w4, wzr
  e8:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  ec:	ldr	w8, [x19, #24]
  f0:	ldp	x20, x1, [x19]
  f4:	b	104 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x54>
  f8:	ldr	x20, [x19]
  fc:	stp	x2, x2, [sp, #48]
 100:	stp	x19, x20, [sp, #32]
 104:	add	x21, x1, x8, lsl #4
 108:	add	x0, sp, #0x20
 10c:	mov	x1, sp
 110:	stp	x19, x20, [sp]
 114:	stp	x21, x21, [sp, #16]
 118:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 11c:	tbz	w0, #0, 170 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xc0>
 120:	ldp	x8, x9, [sp, #32]
 124:	ldr	x8, [x8]
 128:	cmp	x8, x9
 12c:	b.ne	184 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xd4>  // b.any
 130:	ldr	x8, [sp, #48]
 134:	ldr	x9, [x8, #8]
 138:	ldp	w10, w11, [x9, #4]
 13c:	ldr	w12, [x9]
 140:	add	w10, w11, w10
 144:	cmp	w12, w10
 148:	b.ls	15c <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xac>  // b.plast
 14c:	ldr	w10, [x9, #80]
 150:	cbz	w10, 15c <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xac>
 154:	sub	w10, w10, #0x1
 158:	str	w10, [x9, #80]
 15c:	add	x8, x8, #0x10
 160:	add	x0, sp, #0x20
 164:	str	x8, [sp, #48]
 168:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 16c:	b	108 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x58>
 170:	ldp	x20, x19, [sp, #96]
 174:	ldr	x21, [sp, #80]
 178:	ldp	x29, x30, [sp, #64]
 17c:	add	sp, sp, #0x70
 180:	ret
 184:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 188:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 18c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 190:	add	x0, x0, #0x0
 194:	add	x1, x1, #0x0
 198:	add	x3, x3, #0x0
 19c:	mov	w2, #0x4b3                 	// #1203
 1a0:	bl	0 <__assert_fail>

00000000000001a4 <_ZNK4llvm3mca10LSUnitBase4dumpEv>:
 1a4:	sub	sp, sp, #0xa0
 1a8:	stp	x29, x30, [sp, #64]
 1ac:	stp	x28, x27, [sp, #80]
 1b0:	stp	x26, x25, [sp, #96]
 1b4:	stp	x24, x23, [sp, #112]
 1b8:	stp	x22, x21, [sp, #128]
 1bc:	stp	x20, x19, [sp, #144]
 1c0:	add	x29, sp, #0x40
 1c4:	mov	x19, x0
 1c8:	bl	0 <_ZN4llvm4dbgsEv>
 1cc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 1d0:	add	x1, x1, #0x0
 1d4:	mov	w2, #0x13                  	// #19
 1d8:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 1dc:	ldr	w1, [x19, #8]
 1e0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 1e4:	ldp	x9, x8, [x0, #16]
 1e8:	cmp	x8, x9
 1ec:	b.cs	204 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x60>  // b.hs, b.nlast
 1f0:	add	x9, x8, #0x1
 1f4:	mov	w10, #0xa                   	// #10
 1f8:	str	x9, [x0, #24]
 1fc:	strb	w10, [x8]
 200:	b	20c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x68>
 204:	mov	w1, #0xa                   	// #10
 208:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 20c:	bl	0 <_ZN4llvm4dbgsEv>
 210:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 214:	add	x1, x1, #0x0
 218:	mov	w2, #0x13                  	// #19
 21c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 220:	ldr	w1, [x19, #12]
 224:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 228:	ldp	x9, x8, [x0, #16]
 22c:	cmp	x8, x9
 230:	b.cs	248 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xa4>  // b.hs, b.nlast
 234:	add	x9, x8, #0x1
 238:	mov	w10, #0xa                   	// #10
 23c:	str	x9, [x0, #24]
 240:	strb	w10, [x8]
 244:	b	250 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xac>
 248:	mov	w1, #0xa                   	// #10
 24c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 250:	bl	0 <_ZN4llvm4dbgsEv>
 254:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 258:	add	x1, x1, #0x0
 25c:	mov	w2, #0x19                  	// #25
 260:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 264:	ldr	w1, [x19, #16]
 268:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 26c:	ldp	x9, x8, [x0, #16]
 270:	cmp	x8, x9
 274:	b.cs	28c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xe8>  // b.hs, b.nlast
 278:	add	x9, x8, #0x1
 27c:	mov	w10, #0xa                   	// #10
 280:	str	x9, [x0, #24]
 284:	strb	w10, [x8]
 288:	b	294 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xf0>
 28c:	mov	w1, #0xa                   	// #10
 290:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 294:	bl	0 <_ZN4llvm4dbgsEv>
 298:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 29c:	add	x1, x1, #0x0
 2a0:	mov	w2, #0x19                  	// #25
 2a4:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 2a8:	ldr	w1, [x19, #20]
 2ac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 2b0:	ldp	x9, x8, [x0, #16]
 2b4:	cmp	x8, x9
 2b8:	b.cs	2d0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x12c>  // b.hs, b.nlast
 2bc:	add	x9, x8, #0x1
 2c0:	mov	w10, #0xa                   	// #10
 2c4:	str	x9, [x0, #24]
 2c8:	strb	w10, [x8]
 2cc:	b	2d8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x134>
 2d0:	mov	w1, #0xa                   	// #10
 2d4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 2d8:	bl	0 <_ZN4llvm4dbgsEv>
 2dc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 2e0:	add	x1, x1, #0x0
 2e4:	mov	w2, #0x1                   	// #1
 2e8:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 2ec:	ldr	x1, [x19, #40]
 2f0:	ldr	w8, [x19, #56]
 2f4:	ldr	w9, [x19, #48]
 2f8:	add	x19, x19, #0x20
 2fc:	add	x2, x1, x8, lsl #4
 300:	cbz	w9, 320 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x17c>
 304:	add	x0, sp, #0x20
 308:	mov	x3, x19
 30c:	mov	w4, wzr
 310:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 314:	ldr	w8, [x19, #24]
 318:	ldp	x9, x1, [x19]
 31c:	b	32c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x188>
 320:	ldr	x9, [x19]
 324:	stp	x2, x2, [sp, #48]
 328:	stp	x19, x9, [sp, #32]
 32c:	add	x8, x1, x8, lsl #4
 330:	add	x0, sp, #0x20
 334:	mov	x1, sp
 338:	stp	x19, x9, [sp]
 33c:	stp	x8, x8, [sp, #16]
 340:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 344:	tbz	w0, #0, 498 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2f4>
 348:	adrp	x19, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 34c:	adrp	x20, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 350:	adrp	x21, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 354:	adrp	x22, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 358:	adrp	x23, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 35c:	adrp	x24, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 360:	adrp	x25, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 364:	adrp	x26, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 368:	add	x19, x19, #0x0
 36c:	add	x20, x20, #0x0
 370:	add	x21, x21, #0x0
 374:	add	x22, x22, #0x0
 378:	add	x23, x23, #0x0
 37c:	add	x24, x24, #0x0
 380:	add	x25, x25, #0x0
 384:	add	x26, x26, #0x0
 388:	ldp	x8, x9, [sp, #32]
 38c:	ldr	x8, [x8]
 390:	cmp	x8, x9
 394:	b.ne	4b8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x314>  // b.any
 398:	ldr	x27, [sp, #48]
 39c:	ldr	x28, [x27, #8]
 3a0:	bl	0 <_ZN4llvm4dbgsEv>
 3a4:	mov	w2, #0x10                  	// #16
 3a8:	mov	x1, x19
 3ac:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 3b0:	ldr	w1, [x27]
 3b4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3b8:	mov	w2, #0x3                   	// #3
 3bc:	mov	x1, x20
 3c0:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 3c4:	mov	w2, #0xb                   	// #11
 3c8:	mov	x1, x21
 3cc:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 3d0:	ldr	w1, [x28]
 3d4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3d8:	mov	w2, #0xd                   	// #13
 3dc:	mov	x1, x22
 3e0:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 3e4:	ldr	w1, [x28, #4]
 3e8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3ec:	mov	w2, #0xf                   	// #15
 3f0:	mov	x1, x23
 3f4:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 3f8:	ldr	w1, [x28, #8]
 3fc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 400:	mov	w2, #0xa                   	// #10
 404:	mov	x1, x24
 408:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 40c:	ldr	w1, [x28, #12]
 410:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 414:	mov	w2, #0xd                   	// #13
 418:	mov	x1, x25
 41c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 420:	ldr	w1, [x28, #16]
 424:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 428:	mov	w2, #0xf                   	// #15
 42c:	mov	x1, x26
 430:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 434:	ldr	w1, [x28, #20]
 438:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 43c:	ldp	x9, x8, [x0, #16]
 440:	cmp	x8, x9
 444:	b.cs	45c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2b8>  // b.hs, b.nlast
 448:	add	x9, x8, #0x1
 44c:	str	x9, [x0, #24]
 450:	mov	w9, #0xa                   	// #10
 454:	strb	w9, [x8]
 458:	b	464 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2c0>
 45c:	mov	w1, #0xa                   	// #10
 460:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 464:	ldp	x8, x9, [sp, #32]
 468:	ldr	x8, [x8]
 46c:	cmp	x8, x9
 470:	b.ne	4d8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x334>  // b.any
 474:	ldr	x8, [sp, #48]
 478:	add	x0, sp, #0x20
 47c:	add	x8, x8, #0x10
 480:	str	x8, [sp, #48]
 484:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 488:	add	x0, sp, #0x20
 48c:	mov	x1, sp
 490:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 494:	tbnz	w0, #0, 388 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1e4>
 498:	ldp	x20, x19, [sp, #144]
 49c:	ldp	x22, x21, [sp, #128]
 4a0:	ldp	x24, x23, [sp, #112]
 4a4:	ldp	x26, x25, [sp, #96]
 4a8:	ldp	x28, x27, [sp, #80]
 4ac:	ldp	x29, x30, [sp, #64]
 4b0:	add	sp, sp, #0xa0
 4b4:	ret
 4b8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 4bc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 4c0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 4c4:	add	x0, x0, #0x0
 4c8:	add	x1, x1, #0x0
 4cc:	add	x3, x3, #0x0
 4d0:	mov	w2, #0x4b3                 	// #1203
 4d4:	bl	0 <__assert_fail>
 4d8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 4dc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 4e0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 4e4:	add	x0, x0, #0x0
 4e8:	add	x1, x1, #0x0
 4ec:	add	x3, x3, #0x0
 4f0:	mov	w2, #0x4cf                 	// #1231
 4f4:	bl	0 <__assert_fail>

00000000000004f8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE>:
 4f8:	stp	x29, x30, [sp, #-80]!
 4fc:	str	x25, [sp, #16]
 500:	stp	x24, x23, [sp, #32]
 504:	stp	x22, x21, [sp, #48]
 508:	stp	x20, x19, [sp, #64]
 50c:	mov	x29, sp
 510:	ldr	x8, [x1, #8]
 514:	mov	x19, x0
 518:	ldr	x25, [x8]
 51c:	ldrb	w8, [x25, #324]
 520:	ldrb	w24, [x25, #326]
 524:	cbz	w8, 584 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c>
 528:	ldr	w8, [x19, #16]
 52c:	add	w8, w8, #0x1
 530:	str	w8, [x19, #16]
 534:	ldrb	w8, [x25, #325]
 538:	cbnz	w8, 58c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x94>
 53c:	cbnz	w24, 6ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1f4>
 540:	ldr	w1, [x19, #68]
 544:	cbz	w1, 6ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1f4>
 548:	ldr	w8, [x19, #76]
 54c:	cmp	w1, w8
 550:	b.ls	6ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1f4>  // b.plast
 554:	ldr	w8, [x19, #72]
 558:	cmp	w1, w8
 55c:	b.ls	6ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1f4>  // b.plast
 560:	mov	x0, x19
 564:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 568:	ldr	w8, [x0, #32]
 56c:	cbnz	w8, 854 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x35c>
 570:	ldr	w8, [x0, #12]
 574:	add	w8, w8, #0x1
 578:	str	w8, [x0, #12]
 57c:	ldr	w20, [x19, #68]
 580:	b	838 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x340>
 584:	ldrb	w8, [x25, #325]
 588:	cbz	w8, 874 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x37c>
 58c:	ldr	w8, [x19, #20]
 590:	mov	x0, x19
 594:	add	w8, w8, #0x1
 598:	str	w8, [x19, #20]
 59c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 5a0:	mov	w20, w0
 5a4:	mov	x0, x19
 5a8:	mov	w1, w20
 5ac:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 5b0:	ldr	w8, [x0, #32]
 5b4:	cbnz	w8, 854 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x35c>
 5b8:	ldr	w8, [x0, #12]
 5bc:	mov	x21, x0
 5c0:	add	w8, w8, #0x1
 5c4:	str	w8, [x0, #12]
 5c8:	ldp	w8, w9, [x19, #68]
 5cc:	cmp	w8, w9
 5d0:	csel	w23, w9, w8, cc  // cc = lo, ul, last
 5d4:	cbz	w23, 658 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x160>
 5d8:	mov	x0, x19
 5dc:	mov	w1, w23
 5e0:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 5e4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 5e8:	ldr	x8, [x8]
 5ec:	mov	x22, x0
 5f0:	ldrb	w8, [x8]
 5f4:	cbz	w8, 64c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x154>
 5f8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 5fc:	add	x0, x0, #0x0
 600:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 604:	tbz	w0, #0, 64c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x154>
 608:	bl	0 <_ZN4llvm4dbgsEv>
 60c:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 610:	add	x1, x1, #0x0
 614:	mov	w2, #0x16                  	// #22
 618:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 61c:	mov	w1, w23
 620:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 624:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 628:	add	x1, x1, #0x0
 62c:	mov	w2, #0x7                   	// #7
 630:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 634:	mov	w1, w20
 638:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 63c:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 640:	add	x1, x1, #0x0
 644:	mov	w2, #0x2                   	// #2
 648:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 64c:	mov	x0, x22
 650:	mov	x1, x21
 654:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 658:	ldr	w1, [x19, #76]
 65c:	cbz	w1, 6dc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>
 660:	mov	x0, x19
 664:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 668:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 66c:	ldr	x8, [x8]
 670:	mov	x22, x0
 674:	ldrb	w8, [x8]
 678:	cbz	w8, 6d0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1d8>
 67c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 680:	add	x0, x0, #0x0
 684:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 688:	tbz	w0, #0, 6d0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1d8>
 68c:	bl	0 <_ZN4llvm4dbgsEv>
 690:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 694:	add	x1, x1, #0x0
 698:	mov	w2, #0x16                  	// #22
 69c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 6a0:	ldr	w1, [x19, #76]
 6a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 6a8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 6ac:	add	x1, x1, #0x0
 6b0:	mov	w2, #0x7                   	// #7
 6b4:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 6b8:	mov	w1, w20
 6bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 6c0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 6c4:	add	x1, x1, #0x0
 6c8:	mov	w2, #0x2                   	// #2
 6cc:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 6d0:	mov	x0, x22
 6d4:	mov	x1, x21
 6d8:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 6dc:	str	w20, [x19, #76]
 6e0:	ldrb	w8, [x25, #324]
 6e4:	cbnz	w8, 82c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x334>
 6e8:	b	838 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x340>
 6ec:	mov	x0, x19
 6f0:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 6f4:	mov	w20, w0
 6f8:	mov	x0, x19
 6fc:	mov	w1, w20
 700:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 704:	ldr	w8, [x0, #32]
 708:	cbnz	w8, 854 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x35c>
 70c:	ldr	w8, [x0, #12]
 710:	mov	x21, x0
 714:	add	w8, w8, #0x1
 718:	str	w8, [x0, #12]
 71c:	ldrb	w8, [x19, #24]
 720:	cbnz	w8, 7a8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2b0>
 724:	ldr	w1, [x19, #76]
 728:	cbz	w1, 7a8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2b0>
 72c:	mov	x0, x19
 730:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 734:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 738:	ldr	x8, [x8]
 73c:	mov	x22, x0
 740:	ldrb	w8, [x8]
 744:	cbz	w8, 79c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2a4>
 748:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 74c:	add	x0, x0, #0x0
 750:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 754:	tbz	w0, #0, 79c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2a4>
 758:	bl	0 <_ZN4llvm4dbgsEv>
 75c:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 760:	add	x1, x1, #0x0
 764:	mov	w2, #0x16                  	// #22
 768:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 76c:	ldr	w1, [x19, #76]
 770:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 774:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 778:	add	x1, x1, #0x0
 77c:	mov	w2, #0x7                   	// #7
 780:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 784:	mov	w1, w20
 788:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 78c:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 790:	add	x1, x1, #0x0
 794:	mov	w2, #0x2                   	// #2
 798:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 79c:	mov	x0, x22
 7a0:	mov	x1, x21
 7a4:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 7a8:	ldr	w1, [x19, #72]
 7ac:	cbz	w1, 82c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x334>
 7b0:	mov	x0, x19
 7b4:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 7b8:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 7bc:	ldr	x8, [x8]
 7c0:	mov	x22, x0
 7c4:	ldrb	w8, [x8]
 7c8:	cbz	w8, 820 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x328>
 7cc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 7d0:	add	x0, x0, #0x0
 7d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 7d8:	tbz	w0, #0, 820 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x328>
 7dc:	bl	0 <_ZN4llvm4dbgsEv>
 7e0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 7e4:	add	x1, x1, #0x0
 7e8:	mov	w2, #0x16                  	// #22
 7ec:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 7f0:	ldr	w1, [x19, #72]
 7f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 7f8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 7fc:	add	x1, x1, #0x0
 800:	mov	w2, #0x7                   	// #7
 804:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 808:	mov	w1, w20
 80c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 810:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 814:	add	x1, x1, #0x0
 818:	mov	w2, #0x2                   	// #2
 81c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 820:	mov	x0, x22
 824:	mov	x1, x21
 828:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 82c:	str	w20, [x19, #68]
 830:	cbz	w24, 838 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x340>
 834:	str	w20, [x19, #72]
 838:	mov	w0, w20
 83c:	ldp	x20, x19, [sp, #64]
 840:	ldp	x22, x21, [sp, #48]
 844:	ldp	x24, x23, [sp, #32]
 848:	ldr	x25, [sp, #16]
 84c:	ldp	x29, x30, [sp], #80
 850:	ret
 854:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 858:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 85c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 860:	add	x0, x0, #0x0
 864:	add	x1, x1, #0x0
 868:	add	x3, x3, #0x0
 86c:	mov	w2, #0x9c                  	// #156
 870:	bl	0 <__assert_fail>
 874:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 878:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 87c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 880:	add	x0, x0, #0x0
 884:	add	x1, x1, #0x0
 888:	add	x3, x3, #0x0
 88c:	mov	w2, #0x48                  	// #72
 890:	bl	0 <__assert_fail>

0000000000000894 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>:
 894:	ldr	x8, [x1, #8]
 898:	ldr	x8, [x8]
 89c:	ldrb	w9, [x8, #324]
 8a0:	cbz	w9, 8c0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>
 8a4:	ldr	w9, [x0, #8]
 8a8:	cbz	w9, 8c0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>
 8ac:	ldr	w10, [x0, #16]
 8b0:	cmp	w9, w10
 8b4:	b.ne	8c0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>  // b.any
 8b8:	mov	w0, #0x1                   	// #1
 8bc:	ret
 8c0:	ldrb	w8, [x8, #325]
 8c4:	cbz	w8, 8e4 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>
 8c8:	ldr	w8, [x0, #12]
 8cc:	cbz	w8, 8e4 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>
 8d0:	ldr	w9, [x0, #20]
 8d4:	cmp	w8, w9
 8d8:	b.ne	8e4 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>  // b.any
 8dc:	mov	w0, #0x2                   	// #2
 8e0:	ret
 8e4:	mov	w0, wzr
 8e8:	ret

00000000000008ec <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>:
 8ec:	sub	sp, sp, #0x90
 8f0:	stp	x29, x30, [sp, #112]
 8f4:	stp	x20, x19, [sp, #128]
 8f8:	add	x29, sp, #0x70
 8fc:	ldr	x8, [x1, #8]
 900:	add	x19, x0, #0x20
 904:	mov	x20, x0
 908:	sub	x1, x29, #0x4
 90c:	ldr	w8, [x8, #796]
 910:	sub	x2, x29, #0x28
 914:	mov	x0, x19
 918:	stur	w8, [x29, #-4]
 91c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 920:	ldp	x9, x8, [x20, #32]
 924:	ldr	w11, [x20, #56]
 928:	ldur	x10, [x29, #-40]
 92c:	stp	x19, x9, [x29, #-40]
 930:	add	x8, x8, x11, lsl #4
 934:	tbz	w0, #0, 940 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x54>
 938:	stur	x10, [x29, #-24]
 93c:	b	944 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x58>
 940:	stur	x8, [x29, #-24]
 944:	sub	x0, x29, #0x28
 948:	add	x1, sp, #0x28
 94c:	stur	x8, [x29, #-16]
 950:	stp	x19, x9, [sp, #40]
 954:	stp	x8, x8, [sp, #56]
 958:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 95c:	tbz	w0, #0, 9ec <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x100>
 960:	ldp	x8, x9, [x29, #-40]
 964:	ldr	x8, [x8]
 968:	cmp	x8, x9
 96c:	b.ne	9cc <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xe0>  // b.any
 970:	ldur	x8, [x29, #-24]
 974:	ldr	x0, [x8, #8]
 978:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 97c:	ldp	x8, x9, [x29, #-40]
 980:	ldr	x8, [x8]
 984:	cmp	x8, x9
 988:	b.ne	9cc <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xe0>  // b.any
 98c:	ldur	x8, [x29, #-24]
 990:	ldr	x8, [x8, #8]
 994:	ldr	w9, [x8, #12]
 998:	ldr	w8, [x8, #20]
 99c:	cmp	w9, w8
 9a0:	b.ne	9bc <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xd0>  // b.any
 9a4:	ldur	q0, [x29, #-40]
 9a8:	ldur	q1, [x29, #-24]
 9ac:	mov	x1, sp
 9b0:	mov	x0, x19
 9b4:	stp	q0, q1, [sp]
 9b8:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 9bc:	ldp	x20, x19, [sp, #128]
 9c0:	ldp	x29, x30, [sp, #112]
 9c4:	add	sp, sp, #0x90
 9c8:	ret
 9cc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 9d0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 9d4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 9d8:	add	x0, x0, #0x0
 9dc:	add	x1, x1, #0x0
 9e0:	add	x3, x3, #0x0
 9e4:	mov	w2, #0x4b9                 	// #1209
 9e8:	bl	0 <__assert_fail>
 9ec:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 9f0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 9f4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 9f8:	add	x0, x0, #0x0
 9fc:	add	x1, x1, #0x0
 a00:	add	x3, x3, #0x0
 a04:	mov	w2, #0xa5                  	// #165
 a08:	bl	0 <__assert_fail>

0000000000000a0c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE>:
 a0c:	stp	x29, x30, [sp, #-48]!
 a10:	stp	x22, x21, [sp, #16]
 a14:	stp	x20, x19, [sp, #32]
 a18:	mov	x29, sp
 a1c:	ldr	x8, [x1, #8]
 a20:	ldr	x9, [x8]
 a24:	ldrb	w8, [x9, #324]
 a28:	ldrb	w21, [x9, #325]
 a2c:	orr	w9, w21, w8
 a30:	cbz	w9, b08 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xfc>
 a34:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
 a38:	ldr	x22, [x22]
 a3c:	mov	x19, x1
 a40:	mov	x20, x0
 a44:	cbz	w8, a98 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x8c>
 a48:	ldr	w8, [x20, #16]
 a4c:	sub	w8, w8, #0x1
 a50:	str	w8, [x20, #16]
 a54:	ldrb	w8, [x22]
 a58:	cbz	w8, a98 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x8c>
 a5c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 a60:	add	x0, x0, #0x0
 a64:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 a68:	tbz	w0, #0, a98 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x8c>
 a6c:	bl	0 <_ZN4llvm4dbgsEv>
 a70:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 a74:	add	x1, x1, #0x0
 a78:	mov	w2, #0x1a                  	// #26
 a7c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 a80:	ldr	w1, [x19]
 a84:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 a88:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 a8c:	add	x1, x1, #0x0
 a90:	mov	w2, #0x27                  	// #39
 a94:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 a98:	cbz	w21, af8 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xec>
 a9c:	ldr	w8, [x20, #20]
 aa0:	sub	w8, w8, #0x1
 aa4:	str	w8, [x20, #20]
 aa8:	ldrb	w8, [x22]
 aac:	cbz	w8, af8 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xec>
 ab0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 ab4:	add	x0, x0, #0x0
 ab8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 abc:	tbz	w0, #0, af8 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xec>
 ac0:	bl	0 <_ZN4llvm4dbgsEv>
 ac4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 ac8:	add	x1, x1, #0x0
 acc:	mov	w2, #0x1a                  	// #26
 ad0:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 ad4:	ldr	w1, [x19]
 ad8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 adc:	ldp	x20, x19, [sp, #32]
 ae0:	ldp	x22, x21, [sp, #16]
 ae4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 ae8:	add	x1, x1, #0x0
 aec:	mov	w2, #0x28                  	// #40
 af0:	ldp	x29, x30, [sp], #48
 af4:	b	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 af8:	ldp	x20, x19, [sp, #32]
 afc:	ldp	x22, x21, [sp, #16]
 b00:	ldp	x29, x30, [sp], #48
 b04:	ret
 b08:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 b0c:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 b10:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 b14:	add	x0, x0, #0x0
 b18:	add	x1, x1, #0x0
 b1c:	add	x3, x3, #0x0
 b20:	mov	w2, #0xaf                  	// #175
 b24:	bl	0 <__assert_fail>

0000000000000b28 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE>:
 b28:	stp	x29, x30, [sp, #-32]!
 b2c:	stp	x20, x19, [sp, #16]
 b30:	mov	x29, sp
 b34:	ldr	x20, [x1, #8]
 b38:	mov	x19, x0
 b3c:	ldr	x8, [x20]
 b40:	ldrb	w9, [x8, #324]
 b44:	cbnz	w9, b50 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x28>
 b48:	ldrb	w8, [x8, #325]
 b4c:	cbz	w8, b9c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x74>
 b50:	mov	x0, x19
 b54:	bl	8ec <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>
 b58:	ldr	w20, [x20, #796]
 b5c:	mov	x0, x19
 b60:	mov	w1, w20
 b64:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 b68:	tbnz	w0, #0, b9c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x74>
 b6c:	ldr	w8, [x19, #68]
 b70:	cmp	w20, w8
 b74:	b.ne	b7c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x54>  // b.any
 b78:	str	wzr, [x19, #68]
 b7c:	ldr	w8, [x19, #76]
 b80:	cmp	w20, w8
 b84:	b.ne	b8c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x64>  // b.any
 b88:	str	wzr, [x19, #76]
 b8c:	ldr	w8, [x19, #72]
 b90:	cmp	w20, w8
 b94:	b.ne	b9c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x74>  // b.any
 b98:	str	wzr, [x19, #72]
 b9c:	ldp	x20, x19, [sp, #16]
 ba0:	ldp	x29, x30, [sp], #32
 ba4:	ret

0000000000000ba8 <_ZN4llvm3mca10LSUnitBaseD1Ev>:
 ba8:	stp	x29, x30, [sp, #-32]!
 bac:	str	x19, [sp, #16]
 bb0:	mov	x29, sp
 bb4:	adrp	x8, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 bb8:	ldr	x8, [x8]
 bbc:	mov	x19, x0
 bc0:	add	x8, x8, #0x10
 bc4:	str	x8, [x0], #32
 bc8:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
 bcc:	ldr	x0, [x19, #40]
 bd0:	bl	0 <_ZdlPv>
 bd4:	ldr	x8, [x19, #32]
 bd8:	mov	x0, x19
 bdc:	add	x8, x8, #0x1
 be0:	str	x8, [x19, #32]
 be4:	ldr	x19, [sp, #16]
 be8:	ldp	x29, x30, [sp], #32
 bec:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	ldr	w8, [x0, #48]
  14:	cmp	w8, w1
  18:	b.ls	50 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x50>  // b.plast
  1c:	ldr	x8, [x0, #32]
  20:	mov	w9, w1
  24:	add	x0, x8, x9, lsl #5
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  34:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  38:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x154                 	// #340
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  54:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  58:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x156                 	// #342
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase17createMemoryGroupEv:

0000000000000000 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x20, x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	mov	x19, x0
  14:	add	x20, x0, #0x20
  18:	mov	w0, #0x68                  	// #104
  1c:	bl	0 <_Znwm>
  20:	adrp	x8, 0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  24:	ldr	d0, [x8]
  28:	add	x8, x0, #0x28
  2c:	stp	xzr, xzr, [x0]
  30:	str	xzr, [x0, #72]
  34:	str	wzr, [x0, #80]
  38:	str	wzr, [x0, #88]
  3c:	str	xzr, [x0, #96]
  40:	stp	xzr, x8, [x0, #16]
  44:	str	d0, [x0, #32]
  48:	ldr	w8, [x19, #64]
  4c:	stur	x0, [x29, #-8]
  50:	sub	x1, x29, #0x10
  54:	mov	x0, x20
  58:	stur	w8, [x29, #-16]
  5c:	sub	x8, x29, #0x10
  60:	add	x2, x8, #0x8
  64:	add	x8, sp, #0x8
  68:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  6c:	ldur	x20, [x29, #-8]
  70:	cbz	x20, 90 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x90>
  74:	ldr	x0, [x20, #24]
  78:	add	x8, x20, #0x28
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x88>  // b.none
  84:	bl	0 <free>
  88:	mov	x0, x20
  8c:	bl	0 <_ZdlPv>
  90:	ldr	w0, [x19, #64]
  94:	add	w8, w0, #0x1
  98:	str	w8, [x19, #64]
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x29, x30, [sp, #64]
  a4:	add	sp, sp, #0x60
  a8:	ret

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	stur	w1, [x29, #-4]
  18:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  1c:	tbz	w0, #0, 5c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x5c>
  20:	add	x0, x19, #0x20
  24:	sub	x1, x29, #0x4
  28:	add	x2, x29, #0x18
  2c:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  30:	ldr	x8, [x19, #40]
  34:	ldr	w9, [x19, #56]
  38:	ldr	x10, [x29, #24]
  3c:	tst	w0, #0x1
  40:	ldr	x19, [sp, #32]
  44:	add	x8, x8, x9, lsl #4
  48:	csel	x8, x10, x8, ne  // ne = any
  4c:	ldr	x0, [x8, #8]
  50:	ldp	x29, x30, [sp, #16]
  54:	add	sp, sp, #0x30
  58:	ret
  5c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  60:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  64:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x11c                 	// #284
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_:

0000000000000000 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	str	x1, [x29, #24]
  10:	ldr	w8, [x1]
  14:	add	w8, w8, #0x1
  18:	str	w8, [x1]
  1c:	ldr	w8, [x0, #12]
  20:	ldr	w9, [x0, #20]
  24:	subs	w8, w8, w9
  28:	b.eq	68 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x68>  // b.none
  2c:	ldr	w9, [x0, #16]
  30:	mov	x19, x0
  34:	cbz	w9, 50 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x50>
  38:	cmp	w9, w8
  3c:	b.ne	50 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x50>  // b.any
  40:	add	x8, x19, #0x58
  44:	mov	x0, x1
  48:	mov	x1, x8
  4c:	bl	0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  50:	add	x0, x19, #0x18
  54:	add	x1, x29, #0x18
  58:	bl	0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  6c:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  70:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x52                  	// #82
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv:

0000000000000000 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	ldr	w9, [x0]
  14:	cmp	w8, w9
  18:	b.ne	70 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv+0x70>  // b.any
  1c:	ldr	w8, [x0, #12]
  20:	ldr	w9, [x0, #20]
  24:	cmp	w8, w9
  28:	b.eq	70 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv+0x70>  // b.none
  2c:	ldr	w10, [x0, #16]
  30:	add	w9, w9, #0x1
  34:	cmp	w8, w9
  38:	sub	w8, w10, #0x1
  3c:	stp	w8, w9, [x0, #16]
  40:	b.ne	64 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv+0x64>  // b.any
  44:	ldr	w8, [x0, #32]
  48:	cbz	w8, 64 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv+0x64>
  4c:	ldr	x19, [x0, #24]
  50:	lsl	x20, x8, #3
  54:	ldr	x0, [x19], #8
  58:	bl	0 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv>
  5c:	subs	x20, x20, #0x8
  60:	b.ne	54 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv+0x54>  // b.any
  64:	ldp	x20, x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv>
  74:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv>
  78:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup21onInstructionExecutedEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x8f                  	// #143
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x8, x9, [x1]
  14:	ldr	x8, [x8]
  18:	cmp	x8, x9
  1c:	b.ne	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE+0x7c>  // b.any
  20:	ldr	x21, [x1, #16]
  24:	mov	x19, x0
  28:	ldr	x20, [x21, #8]
  2c:	cbz	x20, 4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE+0x4c>
  30:	ldr	x0, [x20, #24]
  34:	add	x8, x20, #0x28
  38:	cmp	x0, x8
  3c:	b.eq	44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE+0x44>  // b.none
  40:	bl	0 <free>
  44:	mov	x0, x20
  48:	bl	0 <_ZdlPv>
  4c:	mov	w8, #0xfffffffe            	// #-2
  50:	str	xzr, [x21, #8]
  54:	adrp	x9, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE>
  58:	str	w8, [x21]
  5c:	ldr	d0, [x19, #16]
  60:	ldr	d1, [x9]
  64:	ldr	x21, [sp, #16]
  68:	add	v0.2s, v0.2s, v1.2s
  6c:	str	d0, [x19, #16]
  70:	ldp	x20, x19, [sp, #32]
  74:	ldp	x29, x30, [sp], #48
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE>
  80:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE>
  84:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E5eraseENS_16DenseMapIteratorIjS7_S9_SC_Lb0EEE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x4b3                 	// #1203
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	str	x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	str	w1, [x29, #28]
  14:	cbz	w1, 48 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x48>
  18:	add	x19, x0, #0x20
  1c:	add	x1, x29, #0x1c
  20:	mov	x2, sp
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  2c:	tbz	w0, #0, 50 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x50>
  30:	ldr	w8, [x19, #24]
  34:	ldp	x10, x9, [x19]
  38:	ldr	x12, [sp]
  3c:	add	x11, x9, x8, lsl #4
  40:	str	x12, [sp, #48]
  44:	b	60 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x60>
  48:	mov	w0, wzr
  4c:	b	80 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x80>
  50:	ldr	w8, [x19, #24]
  54:	ldp	x10, x9, [x19]
  58:	add	x11, x9, x8, lsl #4
  5c:	str	x11, [sp, #48]
  60:	add	x8, x9, x8, lsl #4
  64:	add	x0, sp, #0x20
  68:	mov	x1, sp
  6c:	stp	x19, x10, [sp, #32]
  70:	str	x11, [sp, #56]
  74:	stp	x19, x10, [sp]
  78:	stp	x8, x8, [sp, #16]
  7c:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  80:	ldr	x19, [sp, #80]
  84:	ldp	x29, x30, [sp, #64]
  88:	and	w0, w0, #0x1
  8c:	add	sp, sp, #0x60
  90:	ret

Disassembly of section .text._ZN4llvm3mca6LSUnitD0Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	ba8 <_ZN4llvm3mca10LSUnitBaseD1Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #8]
  10:	mov	x19, x1
  14:	add	x0, x0, #0x20
  18:	add	x1, x29, #0x1c
  1c:	ldr	w8, [x8, #796]
  20:	str	w8, [x29, #28]
  24:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  28:	ldr	x0, [x0, #8]
  2c:	mov	x1, x19
  30:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x21, x2
  18:	add	x2, sp, #0x8
  1c:	mov	x22, x1
  20:	mov	x20, x0
  24:	mov	x19, x8
  28:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>
  2c:	ldr	x3, [sp, #8]
  30:	tbz	w0, #0, 3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0x3c>
  34:	mov	w8, wzr
  38:	b	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0x68>
  3c:	mov	x0, x20
  40:	mov	x1, x22
  44:	mov	x2, x22
  48:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>
  4c:	ldr	w8, [x22]
  50:	mov	x3, x0
  54:	str	w8, [x0]
  58:	ldr	x8, [x21]
  5c:	str	xzr, [x21]
  60:	str	x8, [x0, #8]
  64:	mov	w8, #0x1                   	// #1
  68:	ldr	w9, [x20, #24]
  6c:	ldp	x11, x10, [x20]
  70:	strb	w8, [x19, #32]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldp	x29, x30, [sp, #16]
  7c:	add	x9, x10, x9, lsl #4
  80:	stp	x20, x11, [x19]
  84:	stp	x3, x9, [x19, #16]
  88:	ldp	x20, x19, [sp, #48]
  8c:	add	sp, sp, #0x40
  90:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 48 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x48>
  10:	ldr	w9, [x1]
  14:	cmn	w9, #0x2
  18:	b.cs	ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0xac>  // b.hs, b.nlast
  1c:	ldr	x10, [x0, #8]
  20:	mov	w11, #0x25                  	// #37
  24:	mul	w12, w9, w11
  28:	sub	w11, w8, #0x1
  2c:	and	w12, w12, w11
  30:	add	x8, x10, w12, uxtw #4
  34:	ldr	w14, [x8]
  38:	cmp	w9, w14
  3c:	b.ne	5c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x5c>  // b.any
  40:	mov	w0, #0x1                   	// #1
  44:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x50>
  48:	mov	x8, xzr
  4c:	mov	w0, wzr
  50:	str	x8, [x2]
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	mov	x13, xzr
  60:	mov	w15, #0x1                   	// #1
  64:	mov	w0, #0x1                   	// #1
  68:	cmn	w14, #0x1
  6c:	b.eq	9c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x9c>  // b.none
  70:	cmn	w14, #0x2
  74:	add	w12, w12, w15
  78:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  7c:	and	w12, w12, w11
  80:	csel	x13, x13, x8, ne  // ne = any
  84:	add	x8, x10, w12, uxtw #4
  88:	ldr	w14, [x8]
  8c:	add	w15, w15, #0x1
  90:	cmp	w9, w14
  94:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x50>  // b.none
  98:	b	68 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x68>
  9c:	cmp	x13, #0x0
  a0:	mov	w0, wzr
  a4:	csel	x8, x8, x13, eq  // eq = none
  a8:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x50>
  ac:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  b0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  b4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x252                 	// #594
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	x3, [x0]
   c:	ldr	x8, [x3]
  10:	str	x2, [x0, #24]
  14:	stp	x8, x1, [x0, #8]
  18:	ldr	x9, [x3]
  1c:	cmp	x9, x8
  20:	b.ne	38 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb+0x38>  // b.any
  24:	tbz	w4, #0, 30 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb+0x30>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb>
  38:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb>
  3c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb>
  40:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x49f                 	// #1183
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x34>  // b.none
  18:	ldr	w10, [x8]
  1c:	cmn	w10, #0x2
  20:	b.cc	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x10
  28:	cmp	x9, x8
  2c:	str	x8, [x0, #16]
  30:	b.ne	18 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>
  40:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>
  44:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x4e0                 	// #1248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	w8, [x3]
  6c:	cmn	w8, #0x1
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	w10, #0xffffffff            	// #-1
  2c:	subs	x9, x9, #0x10
  30:	str	w10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x2
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  24:	cmp	x20, x19
  28:	b.eq	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xa4>  // b.none
  2c:	ldr	w8, [x20]
  30:	cmn	w8, #0x3
  34:	b.hi	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x98>  // b.pmore
  38:	add	x2, sp, #0x8
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  48:	tbnz	w0, #0, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>
  4c:	ldr	x8, [sp, #8]
  50:	ldr	w9, [x20]
  54:	str	w9, [x8]
  58:	ldr	x9, [x20, #8]
  5c:	str	xzr, [x20, #8]
  60:	str	x9, [x8, #8]
  64:	ldr	w8, [x21, #16]
  68:	add	w8, w8, #0x1
  6c:	str	w8, [x21, #16]
  70:	ldr	x22, [x20, #8]
  74:	cbz	x22, 94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x94>
  78:	ldr	x0, [x22, #24]
  7c:	add	x8, x22, #0x28
  80:	cmp	x0, x8
  84:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	mov	x0, x22
  90:	bl	0 <_ZdlPv>
  94:	str	xzr, [x20, #8]
  98:	add	x20, x20, #0x10
  9c:	cmp	x19, x20
  a0:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x2c>  // b.any
  a4:	ldp	x20, x19, [sp, #48]
  a8:	ldp	x22, x21, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x40
  b4:	ret
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x17a                 	// #378
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	ldr	w9, [x0]
  10:	cmp	w8, w9
  14:	b.eq	4c <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE+0x4c>  // b.none
  18:	ldr	w8, [x0, #4]
  1c:	ldr	w9, [x0, #80]
  20:	add	w8, w8, #0x1
  24:	str	w8, [x0, #4]
  28:	ldr	x8, [x1, #8]
  2c:	ldr	w8, [x8, #788]
  30:	cmp	w9, w8
  34:	b.cs	44 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE+0x44>  // b.hs, b.nlast
  38:	ldr	w9, [x1]
  3c:	str	w8, [x0, #80]
  40:	str	w9, [x0, #72]
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>
  50:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>
  54:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x68                  	// #104
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	54 <_ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_+0x54>  // b.hs, b.nlast
  20:	ldr	x10, [x19]
  24:	ldr	x11, [x20]
  28:	cmp	w8, w9
  2c:	str	x11, [x10, w8, uxtw #3]
  30:	b.cs	70 <_ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_+0x70>  // b.hs, b.nlast
  34:	ldr	x9, [x19]
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	add	x9, x9, w8, uxtw #3
  48:	sub	x0, x9, #0x8
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	add	x1, x19, #0x10
  58:	mov	w3, #0x8                   	// #8
  5c:	mov	x0, x19
  60:	mov	x2, xzr
  64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  68:	ldp	w8, w9, [x19, #8]
  6c:	b	20 <_ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_+0x20>
  70:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_>
  74:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_>
  78:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_3mca11MemoryGroupEE12emplace_backIJRS3_EEES6_DpOT_>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x43                  	// #67
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup15onGroupExecutedEv:

0000000000000000 <_ZN4llvm3mca11MemoryGroup15onGroupExecutedEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	ldr	w9, [x0]
  10:	cmp	w8, w9
  14:	b.eq	30 <_ZN4llvm3mca11MemoryGroup15onGroupExecutedEv+0x30>  // b.none
  18:	ldr	w9, [x0, #4]
  1c:	add	w8, w8, #0x1
  20:	sub	w9, w9, #0x1
  24:	stp	w9, w8, [x0, #4]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup15onGroupExecutedEv>
  34:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup15onGroupExecutedEv>
  38:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup15onGroupExecutedEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x73                  	// #115
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	x3, [x0]
   c:	ldr	x8, [x3]
  10:	str	x2, [x0, #24]
  14:	stp	x8, x1, [x0, #8]
  18:	ldr	x9, [x3]
  1c:	cmp	x9, x8
  20:	b.ne	38 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb+0x38>  // b.any
  24:	tbz	w4, #0, 30 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb+0x30>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb>
  38:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb>
  3c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb>
  40:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x49f                 	// #1183
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x34>  // b.none
  18:	ldr	w10, [x8]
  1c:	cmn	w10, #0x2
  20:	b.cc	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x10
  28:	cmp	x9, x8
  2c:	str	x8, [x0, #16]
  30:	b.ne	18 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>
  40:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>
  44:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x4e0                 	// #1248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #16]
  14:	cbz	w8, 2c <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x2c>
  18:	ldr	w9, [x0, #12]
  1c:	ldr	w10, [x0, #20]
  20:	sub	w9, w9, w10
  24:	cmp	w8, w9
  28:	b.eq	bc <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xbc>  // b.none
  2c:	ldr	x10, [x0, #96]
  30:	add	w8, w8, #0x1
  34:	add	x19, x0, #0x58
  38:	str	w8, [x0, #16]
  3c:	cbz	x10, 60 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x60>
  40:	ldr	x9, [x1, #8]
  44:	ldr	w10, [x10, #788]
  48:	ldr	w11, [x9, #788]
  4c:	cmp	w10, w11
  50:	b.ge	70 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x70>  // b.tcont
  54:	ldr	w10, [x1]
  58:	str	w10, [x19]
  5c:	b	6c <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x6c>
  60:	ldr	w9, [x1]
  64:	str	w9, [x19]
  68:	ldr	x9, [x1, #8]
  6c:	str	x9, [x0, #96]
  70:	cbz	w8, ac <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xac>
  74:	ldr	w9, [x0, #12]
  78:	ldr	w10, [x0, #20]
  7c:	sub	w9, w9, w10
  80:	cmp	w8, w9
  84:	b.ne	ac <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xac>  // b.any
  88:	ldr	w8, [x0, #32]
  8c:	cbz	w8, ac <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xac>
  90:	ldr	x20, [x0, #24]
  94:	lsl	x21, x8, #3
  98:	ldr	x0, [x20], #8
  9c:	mov	x1, x19
  a0:	bl	0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  a4:	subs	x21, x21, #0x8
  a8:	b.ne	98 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x98>  // b.any
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldr	x21, [sp, #16]
  b4:	ldp	x29, x30, [sp], #48
  b8:	ret
  bc:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  c0:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  c4:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x79                  	// #121
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E16FindAndConstructERKj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E16FindAndConstructERKj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E16FindAndConstructERKj>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E16FindAndConstructERKj+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E16FindAndConstructERKj>
  38:	ldr	w8, [x19]
  3c:	mov	x3, x0
  40:	str	xzr, [x0, #8]
  44:	str	w8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E10destroyAllEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E10destroyAllEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	cbz	w8, 64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E10destroyAllEv+0x64>
  18:	ldr	x9, [x0, #8]
  1c:	lsl	x20, x8, #4
  20:	add	x21, x9, #0x8
  24:	ldur	w8, [x21, #-8]
  28:	cmn	w8, #0x3
  2c:	b.hi	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E10destroyAllEv+0x58>  // b.pmore
  30:	ldr	x19, [x21]
  34:	cbz	x19, 54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E10destroyAllEv+0x54>
  38:	ldr	x0, [x19, #24]
  3c:	add	x8, x19, #0x28
  40:	cmp	x0, x8
  44:	b.eq	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E10destroyAllEv+0x4c>  // b.none
  48:	bl	0 <free>
  4c:	mov	x0, x19
  50:	bl	0 <_ZdlPv>
  54:	str	xzr, [x21]
  58:	subs	x20, x20, #0x10
  5c:	add	x21, x21, #0x10
  60:	b.ne	24 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E10destroyAllEv+0x24>  // b.any
  64:	ldp	x20, x19, [sp, #32]
  68:	ldr	x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

RegisterFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>:
       0:	sub	sp, sp, #0x60
       4:	stp	x29, x30, [sp, #48]
       8:	stp	x22, x21, [sp, #64]
       c:	stp	x20, x19, [sp, #80]
      10:	add	x29, sp, #0x30
      14:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      18:	ldr	x8, [x8]
      1c:	add	x9, x0, #0x20
      20:	adrp	x10, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      24:	str	x9, [x0, #16]
      28:	ldr	d0, [x10]
      2c:	adrp	x9, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
      30:	ldr	x9, [x9]
      34:	mov	x22, x0
      38:	add	x8, x8, #0x10
      3c:	stp	x8, x2, [x22]
      40:	str	d0, [x22, #24]
      44:	mov	x21, x1
      48:	ldr	w9, [x9]
      4c:	ldr	w1, [x2, #8]
      50:	mov	w19, w3
      54:	mov	x20, x2
      58:	add	x0, x0, #0x70
      5c:	mov	x8, #0x100000000           	// #4294967296
      60:	add	x2, sp, #0x10
      64:	add	x3, sp, #0x8
      68:	str	w9, [sp, #16]
      6c:	stp	xzr, x8, [sp, #24]
      70:	str	wzr, [sp, #40]
      74:	strb	wzr, [sp, #44]
      78:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      7c:	ldr	w1, [x20, #8]
      80:	add	x0, x22, #0x88
      84:	mov	x2, xzr
      88:	mov	w3, wzr
      8c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      90:	mov	x0, x22
      94:	mov	x1, x21
      98:	mov	w2, w19
      9c:	bl	b4 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>
      a0:	ldp	x20, x19, [sp, #80]
      a4:	ldp	x22, x21, [sp, #64]
      a8:	ldp	x29, x30, [sp, #48]
      ac:	add	sp, sp, #0x60
      b0:	ret

00000000000000b4 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>:
      b4:	stp	x29, x30, [sp, #-64]!
      b8:	str	x23, [sp, #16]
      bc:	stp	x22, x21, [sp, #32]
      c0:	stp	x20, x19, [sp, #48]
      c4:	mov	x29, sp
      c8:	mov	x20, x1
      cc:	mov	x19, x0
      d0:	add	x0, x0, #0x10
      d4:	add	x1, x29, #0x1c
      d8:	str	w2, [x29, #28]
      dc:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      e0:	ldr	x20, [x20, #64]
      e4:	cbz	x20, 138 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x84>
      e8:	ldr	w8, [x20, #16]
      ec:	cmp	w8, #0x2
      f0:	b.cc	138 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x84>  // b.lo, b.ul, b.last
      f4:	mov	x21, xzr
      f8:	sub	x22, x8, #0x1
      fc:	mov	w23, #0xc                   	// #12
     100:	ldr	x8, [x20, #8]
     104:	add	x8, x8, x21
     108:	ldrh	w9, [x8, #32]
     10c:	cbz	w9, 14c <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x98>
     110:	ldr	x9, [x20, #24]
     114:	ldrh	w10, [x8, #36]
     118:	ldrh	w3, [x8, #34]
     11c:	add	x1, x8, #0x18
     120:	mov	x0, x19
     124:	madd	x2, x10, x23, x9
     128:	bl	16c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>
     12c:	subs	x22, x22, #0x1
     130:	add	x21, x21, #0x18
     134:	b.ne	100 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x4c>  // b.any
     138:	ldp	x20, x19, [sp, #48]
     13c:	ldp	x22, x21, [sp, #32]
     140:	ldr	x23, [sp, #16]
     144:	ldp	x29, x30, [sp], #64
     148:	ret
     14c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     150:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     154:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     158:	add	x0, x0, #0x0
     15c:	add	x1, x1, #0x0
     160:	add	x3, x3, #0x0
     164:	mov	w2, #0x32                  	// #50
     168:	bl	0 <__assert_fail>

000000000000016c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>:
     16c:	sub	sp, sp, #0x90
     170:	stp	x29, x30, [sp, #48]
     174:	stp	x28, x27, [sp, #64]
     178:	stp	x26, x25, [sp, #80]
     17c:	stp	x24, x23, [sp, #96]
     180:	stp	x22, x21, [sp, #112]
     184:	stp	x20, x19, [sp, #128]
     188:	add	x29, sp, #0x30
     18c:	mov	x20, x0
     190:	ldr	w25, [x20, #24]
     194:	add	x8, x1, #0x8
     198:	mov	x22, x3
     19c:	mov	x19, x2
     1a0:	add	x0, x0, #0x10
     1a4:	add	x2, x1, #0xe
     1a8:	add	x3, x1, #0x10
     1ac:	mov	x1, x8
     1b0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     1b4:	cbz	x22, 344 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1d8>
     1b8:	mov	w8, #0xc                   	// #12
     1bc:	madd	x8, x22, x8, x19
     1c0:	str	x8, [sp, #8]
     1c4:	ldr	x9, [x20, #8]
     1c8:	ldr	w8, [x19]
     1cc:	ldr	w10, [x9, #32]
     1d0:	cmp	w10, w8
     1d4:	b.ls	384 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x218>  // b.plast
     1d8:	ldr	x9, [x9, #24]
     1dc:	add	x9, x9, x8, lsl #5
     1e0:	ldrh	w8, [x9, #20]
     1e4:	cbz	x8, 334 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1c8>
     1e8:	ldr	x27, [x9]
     1ec:	add	x28, x27, x8, lsl #1
     1f0:	ldrh	w23, [x27]
     1f4:	ldr	x8, [x20, #112]
     1f8:	add	x21, x8, x23, lsl #5
     1fc:	mov	x26, x21
     200:	ldr	w8, [x26, #16]!
     204:	cmp	w8, #0x0
     208:	ccmp	w8, w25, #0x4, ne  // ne = any
     20c:	b.eq	254 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xe8>  // b.none
     210:	bl	0 <_ZN4llvm4errsEv>
     214:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     218:	mov	w2, #0x12                  	// #18
     21c:	add	x1, x1, #0x0
     220:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     224:	ldr	x8, [x20, #8]
     228:	mov	x24, x0
     22c:	mov	x1, x23
     230:	mov	x0, x8
     234:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     238:	mov	x1, x0
     23c:	mov	x0, x24
     240:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     244:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     248:	mov	w2, #0x24                  	// #36
     24c:	add	x1, x1, #0x0
     250:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     254:	ldr	w8, [x19, #4]
     258:	str	w25, [x26]
     25c:	strh	w23, [x21, #24]
     260:	add	x0, sp, #0x10
     264:	str	w8, [x21, #20]
     268:	ldrb	w8, [x19, #8]
     26c:	mov	x1, x23
     270:	mov	w3, wzr
     274:	strb	w8, [x21, #28]
     278:	ldr	x2, [x20, #8]
     27c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     280:	ldr	x8, [sp, #24]
     284:	cbz	x8, 328 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1bc>
     288:	ldrh	w8, [sp, #16]
     28c:	ldr	x9, [x20, #112]
     290:	and	x1, x8, #0xffff
     294:	add	x21, x9, x1, lsl #5
     298:	mov	x24, x21
     29c:	ldr	w8, [x24, #16]!
     2a0:	cbnz	w8, 300 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x194>
     2a4:	ldrh	w22, [x21, #24]!
     2a8:	cbz	w22, 2f4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x188>
     2ac:	ldr	x2, [x20, #8]
     2b0:	sub	x0, x29, #0x10
     2b4:	mov	w3, wzr
     2b8:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     2bc:	ldur	x9, [x29, #-8]
     2c0:	cbz	x9, 300 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x194>
     2c4:	ldurh	w8, [x29, #-16]
     2c8:	add	x9, x9, #0x2
     2cc:	cmp	w22, w8, uxth
     2d0:	b.eq	2f4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x188>  // b.none
     2d4:	stur	x9, [x29, #-8]
     2d8:	ldurh	w10, [x9, #-2]
     2dc:	add	x9, x9, #0x2
     2e0:	add	w8, w10, w8
     2e4:	sturh	w8, [x29, #-16]
     2e8:	cbnz	w10, 2cc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x160>
     2ec:	stur	xzr, [x29, #-8]
     2f0:	b	300 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x194>
     2f4:	ldr	x8, [x26]
     2f8:	str	x8, [x24]
     2fc:	strh	w23, [x21]
     300:	ldr	x8, [sp, #24]
     304:	cbz	x8, 364 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1f8>
     308:	add	x9, x8, #0x2
     30c:	str	x9, [sp, #24]
     310:	ldrh	w9, [x8]
     314:	ldrh	w8, [sp, #16]
     318:	add	w8, w8, w9
     31c:	strh	w8, [sp, #16]
     320:	cbnz	w9, 28c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x120>
     324:	str	xzr, [sp, #24]
     328:	add	x27, x27, #0x2
     32c:	cmp	x27, x28
     330:	b.ne	1f0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x84>  // b.any
     334:	ldr	x8, [sp, #8]
     338:	add	x19, x19, #0xc
     33c:	cmp	x19, x8
     340:	b.ne	1c4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x58>  // b.any
     344:	ldp	x20, x19, [sp, #128]
     348:	ldp	x22, x21, [sp, #112]
     34c:	ldp	x24, x23, [sp, #96]
     350:	ldp	x26, x25, [sp, #80]
     354:	ldp	x28, x27, [sp, #64]
     358:	ldp	x29, x30, [sp, #48]
     35c:	add	sp, sp, #0x90
     360:	ret
     364:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     368:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     36c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     370:	add	x0, x0, #0x0
     374:	add	x1, x1, #0x0
     378:	add	x3, x3, #0x0
     37c:	mov	w2, #0xd1                  	// #209
     380:	bl	0 <__assert_fail>
     384:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     388:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     38c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     390:	add	x0, x0, #0x0
     394:	add	x1, x1, #0x0
     398:	add	x3, x3, #0x0
     39c:	mov	w2, #0x219                 	// #537
     3a0:	bl	0 <__assert_fail>

00000000000003a4 <_ZN4llvm3mca12RegisterFile10cycleStartEv>:
     3a4:	ldr	w8, [x0, #24]
     3a8:	cbz	w8, 3c8 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x24>
     3ac:	ldr	x9, [x0, #16]
     3b0:	add	x8, x8, x8, lsl #2
     3b4:	lsl	x8, x8, #2
     3b8:	add	x9, x9, #0xc
     3bc:	subs	x8, x8, #0x14
     3c0:	str	wzr, [x9], #20
     3c4:	b.ne	3bc <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x18>  // b.any
     3c8:	ret

00000000000003cc <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     3cc:	stp	x29, x30, [sp, #-16]!
     3d0:	mov	x29, sp
     3d4:	ldp	w9, w8, [x1]
     3d8:	cbz	w9, 414 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x48>
     3dc:	ldr	w10, [x0, #24]
     3e0:	cmp	w10, w9
     3e4:	b.ls	444 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x78>  // b.plast
     3e8:	ldr	x10, [x0, #16]
     3ec:	mov	w11, #0x14                  	// #20
     3f0:	cmp	x3, x9
     3f4:	madd	x10, x9, x11, x10
     3f8:	ldr	w11, [x10, #4]
     3fc:	add	w11, w11, w8
     400:	str	w11, [x10, #4]
     404:	b.ls	464 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x98>  // b.plast
     408:	ldr	w10, [x2, x9, lsl #2]
     40c:	add	w10, w10, w8
     410:	str	w10, [x2, x9, lsl #2]
     414:	ldr	w9, [x0, #24]
     418:	cbz	w9, 444 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x78>
     41c:	ldr	x9, [x0, #16]
     420:	ldr	w10, [x9, #4]
     424:	add	w10, w10, w8
     428:	str	w10, [x9, #4]
     42c:	cbz	x3, 464 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x98>
     430:	ldr	w9, [x2]
     434:	add	w8, w9, w8
     438:	str	w8, [x2]
     43c:	ldp	x29, x30, [sp], #16
     440:	ret
     444:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     448:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     44c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     450:	add	x0, x0, #0x0
     454:	add	x1, x1, #0x0
     458:	add	x3, x3, #0x0
     45c:	mov	w2, #0x95                  	// #149
     460:	bl	0 <__assert_fail>
     464:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     468:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     46c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     470:	add	x0, x0, #0x0
     474:	add	x1, x1, #0x0
     478:	add	x3, x3, #0x0
     47c:	mov	w2, #0x1ab                 	// #427
     480:	bl	0 <__assert_fail>

0000000000000484 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     484:	stp	x29, x30, [sp, #-16]!
     488:	mov	x29, sp
     48c:	ldp	w9, w8, [x1]
     490:	cbz	w9, 4cc <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x48>
     494:	ldr	w10, [x0, #24]
     498:	cmp	w10, w9
     49c:	b.ls	4fc <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x78>  // b.plast
     4a0:	ldr	x10, [x0, #16]
     4a4:	mov	w11, #0x14                  	// #20
     4a8:	cmp	x3, x9
     4ac:	madd	x10, x9, x11, x10
     4b0:	ldr	w11, [x10, #4]
     4b4:	sub	w11, w11, w8
     4b8:	str	w11, [x10, #4]
     4bc:	b.ls	51c <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x98>  // b.plast
     4c0:	ldr	w10, [x2, x9, lsl #2]
     4c4:	add	w10, w10, w8
     4c8:	str	w10, [x2, x9, lsl #2]
     4cc:	ldr	w9, [x0, #24]
     4d0:	cbz	w9, 4fc <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x78>
     4d4:	ldr	x9, [x0, #16]
     4d8:	ldr	w10, [x9, #4]
     4dc:	sub	w10, w10, w8
     4e0:	str	w10, [x9, #4]
     4e4:	cbz	x3, 51c <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x98>
     4e8:	ldr	w9, [x2]
     4ec:	add	w8, w9, w8
     4f0:	str	w8, [x2]
     4f4:	ldp	x29, x30, [sp], #16
     4f8:	ret
     4fc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     500:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     504:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     508:	add	x0, x0, #0x0
     50c:	add	x1, x1, #0x0
     510:	add	x3, x3, #0x0
     514:	mov	w2, #0x95                  	// #149
     518:	bl	0 <__assert_fail>
     51c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     520:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     524:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     528:	add	x0, x0, #0x0
     52c:	add	x1, x1, #0x0
     530:	add	x3, x3, #0x0
     534:	mov	w2, #0x1ab                 	// #427
     538:	bl	0 <__assert_fail>

000000000000053c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>:
     53c:	sub	sp, sp, #0x80
     540:	stp	x29, x30, [sp, #32]
     544:	stp	x28, x27, [sp, #48]
     548:	stp	x26, x25, [sp, #64]
     54c:	stp	x24, x23, [sp, #80]
     550:	stp	x22, x21, [sp, #96]
     554:	stp	x20, x19, [sp, #112]
     558:	add	x29, sp, #0x20
     55c:	ldrh	w25, [x2, #12]
     560:	cbz	x25, 874 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x338>
     564:	str	x4, [sp, #8]
     568:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     56c:	ldr	x8, [x8]
     570:	mov	x19, x2
     574:	mov	x20, x1
     578:	mov	x21, x0
     57c:	ldrb	w8, [x8]
     580:	mov	x23, x3
     584:	cbz	w8, 5f4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xb8>
     588:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     58c:	add	x0, x0, #0x0
     590:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     594:	tbz	w0, #0, 5f4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xb8>
     598:	bl	0 <_ZN4llvm4dbgsEv>
     59c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5a0:	add	x1, x1, #0x0
     5a4:	mov	w2, #0x21                  	// #33
     5a8:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5ac:	and	x1, x20, #0xffffffff
     5b0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5b4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5b8:	add	x1, x1, #0x0
     5bc:	mov	w2, #0x2                   	// #2
     5c0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5c4:	ldr	x8, [x21, #8]
     5c8:	mov	x24, x0
     5cc:	mov	x1, x25
     5d0:	mov	x0, x8
     5d4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5d8:	mov	x1, x0
     5dc:	mov	x0, x24
     5e0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5e4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5e8:	add	x1, x1, #0x0
     5ec:	mov	w2, #0x2                   	// #2
     5f0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5f4:	ldr	x8, [x21, #112]
     5f8:	ldrb	w27, [x19, #21]
     5fc:	ldrb	w28, [x19, #22]
     600:	add	x9, x8, x25, lsl #5
     604:	ldr	w10, [x9, #16]
     608:	str	w10, [x19, #16]
     60c:	ldrh	w24, [x9, #24]
     610:	orr	w9, w28, w27
     614:	cmp	w9, #0x0
     618:	cset	w22, eq  // eq = none
     61c:	cbz	x24, 660 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x124>
     620:	cmp	w24, w25
     624:	b.eq	660 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x124>  // b.none
     628:	ldrb	w9, [x19, #20]
     62c:	cbnz	w9, 664 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x128>
     630:	add	x9, x8, x24, lsl #5
     634:	ldr	x0, [x9, #8]
     638:	cbz	x0, 658 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x11c>
     63c:	lsl	x9, x24, #5
     640:	ldr	w1, [x8, x9]
     644:	cmp	w1, w20
     648:	b.eq	658 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x11c>  // b.none
     64c:	cbnz	w28, 894 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x358>
     650:	mov	x2, x19
     654:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPS1_>
     658:	mov	w22, wzr
     65c:	b	664 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x128>
     660:	mov	w24, w25
     664:	ldrb	w8, [x19, #20]
     668:	mov	w26, w24
     66c:	cbnz	w8, 674 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x138>
     670:	ldrh	w26, [x19, #12]
     674:	add	x25, x21, #0x88
     678:	mov	x0, x25
     67c:	mov	w1, w26
     680:	cbz	w27, 6dc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1a0>
     684:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     688:	ldr	x2, [x21, #8]
     68c:	add	x0, sp, #0x10
     690:	mov	x1, x26
     694:	mov	w3, wzr
     698:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     69c:	ldr	x8, [sp, #24]
     6a0:	cbz	x8, 734 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1f8>
     6a4:	ldrh	w8, [sp, #16]
     6a8:	and	w1, w8, #0xffff
     6ac:	mov	x0, x25
     6b0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     6b4:	ldr	x8, [sp, #24]
     6b8:	cbz	x8, 854 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x318>
     6bc:	add	x9, x8, #0x2
     6c0:	str	x9, [sp, #24]
     6c4:	ldrh	w9, [x8]
     6c8:	ldrh	w8, [sp, #16]
     6cc:	add	w8, w8, w9
     6d0:	strh	w8, [sp, #16]
     6d4:	cbnz	w9, 6a8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x16c>
     6d8:	b	730 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1f4>
     6dc:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     6e0:	ldr	x2, [x21, #8]
     6e4:	add	x0, sp, #0x10
     6e8:	mov	x1, x26
     6ec:	mov	w3, wzr
     6f0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     6f4:	ldr	x8, [sp, #24]
     6f8:	cbz	x8, 734 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1f8>
     6fc:	ldrh	w8, [sp, #16]
     700:	and	w1, w8, #0xffff
     704:	mov	x0, x25
     708:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     70c:	ldr	x8, [sp, #24]
     710:	cbz	x8, 854 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x318>
     714:	add	x9, x8, #0x2
     718:	str	x9, [sp, #24]
     71c:	ldrh	w9, [x8]
     720:	ldrh	w8, [sp, #16]
     724:	add	w8, w8, w9
     728:	strh	w8, [sp, #16]
     72c:	cbnz	w9, 700 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1c4>
     730:	str	xzr, [sp, #24]
     734:	cbnz	w28, 7b8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x27c>
     738:	ldr	x8, [x21, #112]
     73c:	add	x0, sp, #0x10
     740:	mov	x1, x24
     744:	mov	w3, wzr
     748:	add	x8, x8, x24, lsl #5
     74c:	str	w20, [x8]
     750:	str	x19, [x8, #8]
     754:	strh	wzr, [x8, #26]
     758:	ldr	x2, [x21, #8]
     75c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     760:	ldr	x8, [sp, #24]
     764:	cbz	x8, 798 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x25c>
     768:	ldr	x9, [x21, #112]
     76c:	ldrh	w10, [sp, #16]
     770:	and	x11, x10, #0xffff
     774:	add	x11, x9, x11, lsl #5
     778:	str	w20, [x11]
     77c:	str	x19, [x11, #8]
     780:	strh	wzr, [x11, #26]
     784:	ldrh	w11, [x8], #2
     788:	add	w10, w11, w10
     78c:	strh	w10, [sp, #16]
     790:	cbnz	w11, 770 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x234>
     794:	str	xzr, [sp, #24]
     798:	tbz	w22, #0, 7b8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x27c>
     79c:	ldr	x8, [x21, #112]
     7a0:	ldr	x3, [sp, #8]
     7a4:	mov	x0, x21
     7a8:	mov	x2, x23
     7ac:	add	x8, x8, x24, lsl #5
     7b0:	add	x1, x8, #0x10
     7b4:	bl	3cc <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
     7b8:	ldrb	w8, [x19, #20]
     7bc:	cbz	w8, 834 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2f8>
     7c0:	ldr	x2, [x21, #8]
     7c4:	add	x0, sp, #0x10
     7c8:	mov	x1, x24
     7cc:	mov	w3, wzr
     7d0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7d4:	ldr	x8, [sp, #24]
     7d8:	cbz	x8, 834 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2f8>
     7dc:	ldrh	w1, [sp, #16]
     7e0:	cbnz	w28, 7f8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2bc>
     7e4:	ldr	x8, [x21, #112]
     7e8:	add	x8, x8, x1, lsl #5
     7ec:	str	w20, [x8]
     7f0:	str	x19, [x8, #8]
     7f4:	strh	wzr, [x8, #26]
     7f8:	mov	x0, x25
     7fc:	cbz	w27, 808 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2cc>
     800:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     804:	b	80c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2d0>
     808:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     80c:	ldr	x8, [sp, #24]
     810:	cbz	x8, 854 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x318>
     814:	add	x9, x8, #0x2
     818:	str	x9, [sp, #24]
     81c:	ldrh	w8, [x8]
     820:	ldrh	w9, [sp, #16]
     824:	add	w9, w9, w8
     828:	strh	w9, [sp, #16]
     82c:	cbnz	w8, 7dc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2a0>
     830:	str	xzr, [sp, #24]
     834:	ldp	x20, x19, [sp, #112]
     838:	ldp	x22, x21, [sp, #96]
     83c:	ldp	x24, x23, [sp, #80]
     840:	ldp	x26, x25, [sp, #64]
     844:	ldp	x28, x27, [sp, #48]
     848:	ldp	x29, x30, [sp, #32]
     84c:	add	sp, sp, #0x80
     850:	ret
     854:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     858:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     85c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     860:	add	x0, x0, #0x0
     864:	add	x1, x1, #0x0
     868:	add	x3, x3, #0x0
     86c:	mov	w2, #0xd1                  	// #209
     870:	bl	0 <__assert_fail>
     874:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     878:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     87c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     880:	add	x0, x0, #0x0
     884:	add	x1, x1, #0x0
     888:	add	x3, x3, #0x0
     88c:	mov	w2, #0x97                  	// #151
     890:	bl	0 <__assert_fail>
     894:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     898:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     89c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     8a0:	add	x0, x0, #0x0
     8a4:	add	x1, x1, #0x0
     8a8:	add	x3, x3, #0x0
     8ac:	mov	w2, #0xbe                  	// #190
     8b0:	bl	0 <__assert_fail>

00000000000008b4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>:
     8b4:	sub	sp, sp, #0x40
     8b8:	stp	x29, x30, [sp, #16]
     8bc:	str	x21, [sp, #32]
     8c0:	stp	x20, x19, [sp, #48]
     8c4:	add	x29, sp, #0x10
     8c8:	ldrb	w8, [x1, #22]
     8cc:	cbz	w8, 8e4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x30>
     8d0:	ldp	x20, x19, [sp, #48]
     8d4:	ldr	x21, [sp, #32]
     8d8:	ldp	x29, x30, [sp, #16]
     8dc:	add	sp, sp, #0x40
     8e0:	ret
     8e4:	ldrh	w21, [x1, #12]
     8e8:	mov	x19, x1
     8ec:	cbz	x21, a18 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x164>
     8f0:	ldr	w8, [x19, #8]
     8f4:	cmn	w8, #0x200
     8f8:	b.eq	a38 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x184>  // b.none
     8fc:	cmp	w8, #0x1
     900:	b.ge	a58 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1a4>  // b.tcont
     904:	ldr	x8, [x0, #112]
     908:	ldrb	w10, [x19, #21]
     90c:	mov	x20, x0
     910:	add	x9, x8, x21, lsl #5
     914:	ldrh	w9, [x9, #24]
     918:	cbz	w9, 938 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x84>
     91c:	cmp	w9, w21
     920:	b.eq	938 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x84>  // b.none
     924:	cbnz	w10, 954 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa0>
     928:	ldrb	w10, [x19, #20]
     92c:	mov	x21, x9
     930:	cbnz	w10, 93c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x88>
     934:	b	958 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa4>
     938:	cbnz	w10, 958 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa4>
     93c:	add	x8, x8, x21, lsl #5
     940:	add	x1, x8, #0x10
     944:	mov	x0, x20
     948:	bl	484 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
     94c:	ldr	x8, [x20, #112]
     950:	b	958 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa4>
     954:	mov	x21, x9
     958:	add	x8, x8, x21, lsl #5
     95c:	ldr	x9, [x8, #8]!
     960:	cmp	x9, x19
     964:	b.ne	96c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xb8>  // b.any
     968:	str	xzr, [x8]
     96c:	ldr	x2, [x20, #8]
     970:	mov	x0, sp
     974:	mov	x1, x21
     978:	mov	w3, wzr
     97c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     980:	ldr	x8, [sp, #8]
     984:	cbz	x8, 9bc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x108>
     988:	ldr	x9, [x20, #112]
     98c:	ldrh	w10, [sp]
     990:	and	x11, x10, #0xffff
     994:	add	x11, x9, x11, lsl #5
     998:	ldr	x12, [x11, #8]!
     99c:	cmp	x12, x19
     9a0:	b.ne	9a8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xf4>  // b.any
     9a4:	str	xzr, [x11]
     9a8:	ldrh	w11, [x8], #2
     9ac:	add	w10, w11, w10
     9b0:	strh	w10, [sp]
     9b4:	cbnz	w11, 990 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xdc>
     9b8:	str	xzr, [sp, #8]
     9bc:	ldrb	w8, [x19, #20]
     9c0:	cbz	w8, 8d0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1c>
     9c4:	ldr	x2, [x20, #8]
     9c8:	mov	x0, sp
     9cc:	mov	x1, x21
     9d0:	mov	w3, wzr
     9d4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     9d8:	ldr	x8, [sp, #8]
     9dc:	cbz	x8, 8d0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1c>
     9e0:	ldr	x9, [x20, #112]
     9e4:	ldrh	w10, [sp]
     9e8:	and	x11, x10, #0xffff
     9ec:	add	x11, x9, x11, lsl #5
     9f0:	ldr	x12, [x11, #8]!
     9f4:	cmp	x12, x19
     9f8:	b.ne	a00 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x14c>  // b.any
     9fc:	str	xzr, [x11]
     a00:	ldrh	w11, [x8], #2
     a04:	add	w10, w11, w10
     a08:	strh	w10, [sp]
     a0c:	cbnz	w11, 9e8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x134>
     a10:	str	xzr, [sp, #8]
     a14:	b	8d0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1c>
     a18:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a1c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a20:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a24:	add	x0, x0, #0x0
     a28:	add	x1, x1, #0x0
     a2c:	add	x3, x3, #0x0
     a30:	mov	w2, #0xfc                  	// #252
     a34:	bl	0 <__assert_fail>
     a38:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a3c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a40:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a44:	add	x0, x0, #0x0
     a48:	add	x1, x1, #0x0
     a4c:	add	x3, x3, #0x0
     a50:	mov	w2, #0xfe                  	// #254
     a54:	bl	0 <__assert_fail>
     a58:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a5c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a60:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     a64:	add	x0, x0, #0x0
     a68:	add	x1, x1, #0x0
     a6c:	add	x3, x3, #0x0
     a70:	mov	w2, #0xff                  	// #255
     a74:	bl	0 <__assert_fail>

0000000000000a78 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>:
     a78:	sub	sp, sp, #0x70
     a7c:	stp	x29, x30, [sp, #16]
     a80:	str	x27, [sp, #32]
     a84:	stp	x26, x25, [sp, #48]
     a88:	stp	x24, x23, [sp, #64]
     a8c:	stp	x22, x21, [sp, #80]
     a90:	stp	x20, x19, [sp, #96]
     a94:	add	x29, sp, #0x10
     a98:	ldrh	w23, [x2, #8]
     a9c:	ldr	x27, [x0, #112]
     aa0:	ldrh	w8, [x1, #12]
     aa4:	add	x9, x27, x23, lsl #5
     aa8:	add	x26, x27, x8, lsl #5
     aac:	ldr	w24, [x9, #16]
     ab0:	ldr	w9, [x26, #16]
     ab4:	cmp	w24, w9
     ab8:	b.ne	b44 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xcc>  // b.any
     abc:	ldrh	w9, [x26, #24]!
     ac0:	mov	x20, x2
     ac4:	mov	x19, x1
     ac8:	mov	x21, x0
     acc:	cbz	w9, aec <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x74>
     ad0:	cmp	w9, w8
     ad4:	b.eq	aec <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x74>  // b.none
     ad8:	add	x8, x27, x9, lsl #5
     adc:	ldrb	w8, [x8, #28]
     ae0:	cbz	w8, b44 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xcc>
     ae4:	ldrb	w8, [x19, #20]
     ae8:	cbz	w8, b44 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xcc>
     aec:	ldr	w8, [x21, #24]
     af0:	cmp	w8, w24
     af4:	b.ls	c24 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1ac>  // b.plast
     af8:	ldr	x25, [x21, #16]
     afc:	mov	w8, #0x14                  	// #20
     b00:	madd	x8, x24, x8, x25
     b04:	ldr	w8, [x8, #8]
     b08:	cbz	w8, b20 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xa8>
     b0c:	mov	w9, #0x14                  	// #20
     b10:	madd	x9, x24, x9, x25
     b14:	ldr	w9, [x9, #12]
     b18:	cmp	w9, w8
     b1c:	b.eq	b44 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xcc>  // b.none
     b20:	add	x0, x21, #0x88
     b24:	mov	w1, w23
     b28:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     b2c:	mov	w22, w0
     b30:	tbnz	w0, #0, b68 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xf0>
     b34:	mov	w8, #0x14                  	// #20
     b38:	madd	x8, x24, x8, x25
     b3c:	ldrb	w8, [x8, #16]
     b40:	cbz	w8, b68 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xf0>
     b44:	mov	w0, wzr
     b48:	ldp	x20, x19, [sp, #96]
     b4c:	ldp	x22, x21, [sp, #80]
     b50:	ldp	x24, x23, [sp, #64]
     b54:	ldp	x26, x25, [sp, #48]
     b58:	ldr	x27, [sp, #32]
     b5c:	ldp	x29, x30, [sp, #16]
     b60:	add	sp, sp, #0x70
     b64:	ret
     b68:	add	x8, x27, x23, lsl #5
     b6c:	ldrh	w8, [x8, #24]
     b70:	cbnz	w8, b78 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x100>
     b74:	ldrh	w8, [x20, #8]
     b78:	ldr	x9, [x21, #112]
     b7c:	ldrh	w10, [x26]
     b80:	ldrh	w11, [x19, #12]
     b84:	mov	x0, sp
     b88:	add	x12, x9, x8, lsl #5
     b8c:	ldrh	w12, [x12, #26]
     b90:	cmp	w10, #0x0
     b94:	csel	w10, w11, w10, eq  // eq = none
     b98:	and	x1, x10, #0xffff
     b9c:	cmp	w12, #0x0
     ba0:	csel	w23, w8, w12, eq  // eq = none
     ba4:	add	x8, x9, x1, lsl #5
     ba8:	strh	w23, [x8, #26]
     bac:	ldr	x2, [x21, #8]
     bb0:	mov	w3, wzr
     bb4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     bb8:	ldr	x8, [sp, #8]
     bbc:	cbz	x8, be8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x170>
     bc0:	ldr	x9, [x21, #112]
     bc4:	ldrh	w10, [sp]
     bc8:	and	x11, x10, #0xffff
     bcc:	add	x11, x9, x11, lsl #5
     bd0:	strh	w23, [x11, #26]
     bd4:	ldrh	w11, [x8], #2
     bd8:	add	w10, w11, w10
     bdc:	strh	w10, [sp]
     be0:	cbnz	w11, bc8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x150>
     be4:	str	xzr, [sp, #8]
     be8:	tbz	w22, #0, bf8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x180>
     bec:	mov	w8, #0x1                   	// #1
     bf0:	strb	w8, [x19, #21]
     bf4:	strb	w8, [x20, #41]
     bf8:	ldr	w8, [x19, #64]
     bfc:	cbnz	w8, c44 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1cc>
     c00:	mov	w0, #0x1                   	// #1
     c04:	mov	w8, #0x14                  	// #20
     c08:	str	wzr, [x19, #8]
     c0c:	strb	w0, [x19, #22]
     c10:	madd	x8, x24, x8, x25
     c14:	ldr	w9, [x8, #12]
     c18:	add	w9, w9, #0x1
     c1c:	str	w9, [x8, #12]
     c20:	b	b48 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>
     c24:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     c28:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     c2c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     c30:	add	x0, x0, #0x0
     c34:	add	x1, x1, #0x0
     c38:	add	x3, x3, #0x0
     c3c:	mov	w2, #0x95                  	// #149
     c40:	bl	0 <__assert_fail>
     c44:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     c48:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     c4c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     c50:	add	x0, x0, #0x0
     c54:	add	x1, x1, #0x0
     c58:	add	x3, x3, #0x0
     c5c:	mov	w2, #0xcf                  	// #207
     c60:	bl	0 <__assert_fail>

0000000000000c64 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>:
     c64:	sub	sp, sp, #0x60
     c68:	stp	x29, x30, [sp, #16]
     c6c:	str	x25, [sp, #32]
     c70:	stp	x24, x23, [sp, #48]
     c74:	stp	x22, x21, [sp, #64]
     c78:	stp	x20, x19, [sp, #80]
     c7c:	add	x29, sp, #0x10
     c80:	ldrh	w21, [x1, #8]
     c84:	cbz	x21, f94 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x330>
     c88:	ldp	x9, x8, [x0, #112]
     c8c:	mov	x19, x0
     c90:	sub	x8, x8, x9
     c94:	cmp	x21, x8, asr #5
     c98:	b.cs	f94 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x330>  // b.hs, b.nlast
     c9c:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
     ca0:	ldr	x24, [x24]
     ca4:	mov	x20, x2
     ca8:	ldrb	w8, [x24]
     cac:	cbz	w8, d1c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb8>
     cb0:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     cb4:	add	x0, x0, #0x0
     cb8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     cbc:	tbz	w0, #0, d1c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb8>
     cc0:	bl	0 <_ZN4llvm4dbgsEv>
     cc4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     cc8:	add	x1, x1, #0x0
     ccc:	mov	w2, #0x2d                  	// #45
     cd0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     cd4:	ldr	x8, [x19, #8]
     cd8:	mov	x22, x0
     cdc:	mov	x1, x21
     ce0:	mov	x0, x8
     ce4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     ce8:	mov	x1, x0
     cec:	mov	x0, x22
     cf0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     cf4:	ldp	x9, x8, [x0, #16]
     cf8:	cmp	x8, x9
     cfc:	b.cs	d14 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb0>  // b.hs, b.nlast
     d00:	add	x9, x8, #0x1
     d04:	mov	w10, #0xa                   	// #10
     d08:	str	x9, [x0, #24]
     d0c:	strb	w10, [x8]
     d10:	b	d1c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb8>
     d14:	mov	w1, #0xa                   	// #10
     d18:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     d1c:	ldr	x8, [x19, #112]
     d20:	adrp	x22, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
     d24:	add	x9, x8, x21, lsl #5
     d28:	ldrh	w9, [x9, #26]
     d2c:	cmp	w9, #0x0
     d30:	csel	w21, w21, w9, eq  // eq = none
     d34:	add	x1, x8, x21, lsl #5
     d38:	ldr	x8, [x1, #8]
     d3c:	ldr	x22, [x22]
     d40:	cbz	x8, d5c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xf8>
     d44:	ldr	w8, [x1]
     d48:	ldr	w9, [x22]
     d4c:	cmp	w8, w9
     d50:	b.eq	d5c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xf8>  // b.none
     d54:	mov	x0, x20
     d58:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d5c:	ldr	x2, [x19, #8]
     d60:	mov	x0, sp
     d64:	mov	x1, x21
     d68:	mov	w3, wzr
     d6c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d70:	ldr	x8, [sp, #8]
     d74:	cbz	x8, dd4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x170>
     d78:	ldr	w21, [x22]
     d7c:	ldrh	w9, [sp]
     d80:	ldr	x10, [x19, #112]
     d84:	and	x9, x9, #0xffff
     d88:	add	x1, x10, x9, lsl #5
     d8c:	ldr	x9, [x1, #8]
     d90:	cbz	x9, db0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x14c>
     d94:	ldr	w9, [x1]
     d98:	cmp	w9, w21
     d9c:	b.eq	db0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x14c>  // b.none
     da0:	mov	x0, x20
     da4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     da8:	ldr	x8, [sp, #8]
     dac:	cbz	x8, f74 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x310>
     db0:	add	x10, x8, #0x2
     db4:	str	x10, [sp, #8]
     db8:	ldrh	w11, [x8]
     dbc:	ldrh	w8, [sp]
     dc0:	add	w9, w8, w11
     dc4:	mov	x8, x10
     dc8:	strh	w9, [sp]
     dcc:	cbnz	w11, d80 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x11c>
     dd0:	str	xzr, [sp, #8]
     dd4:	ldr	w22, [x20, #8]
     dd8:	cmp	w22, #0x1
     ddc:	b.ls	eb4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x250>  // b.plast
     de0:	ldr	x23, [x20]
     de4:	clz	x8, x22
     de8:	mov	w9, #0x7e                  	// #126
     dec:	sub	x2, x9, x8, lsl #1
     df0:	add	x21, x23, x22, lsl #4
     df4:	mov	x0, x23
     df8:	mov	x1, x21
     dfc:	mov	x3, xzr
     e00:	bl	1530 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>
     e04:	cmp	w22, #0x11
     e08:	b.cc	e80 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x21c>  // b.lo, b.ul, b.last
     e0c:	add	x22, x23, #0x100
     e10:	mov	x0, x23
     e14:	mov	x1, x22
     e18:	mov	x2, xzr
     e1c:	bl	188c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_>
     e20:	add	x8, x23, #0xe8
     e24:	ldr	x9, [x22, #8]
     e28:	ldur	x11, [x22, #-8]
     e2c:	ldr	w10, [x22]
     e30:	cmp	x11, x9
     e34:	mov	x11, x22
     e38:	b.ls	e64 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x200>  // b.plast
     e3c:	mov	x11, x8
     e40:	ldr	w12, [x11, #8]
     e44:	ldr	x13, [x11, #16]
     e48:	ldr	x14, [x11]
     e4c:	str	w12, [x11, #24]
     e50:	str	x13, [x11, #32]
     e54:	cmp	x14, x9
     e58:	sub	x11, x11, #0x10
     e5c:	b.hi	e40 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1dc>  // b.pmore
     e60:	add	x11, x11, #0x18
     e64:	add	x22, x22, #0x10
     e68:	cmp	x22, x21
     e6c:	add	x8, x8, #0x10
     e70:	str	w10, [x11]
     e74:	str	x9, [x11, #8]
     e78:	b.ne	e24 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1c0>  // b.any
     e7c:	b	e90 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x22c>
     e80:	mov	x0, x23
     e84:	mov	x1, x21
     e88:	mov	x2, xzr
     e8c:	bl	188c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_>
     e90:	ldr	x0, [x20]
     e94:	ldr	w8, [x20, #8]
     e98:	add	x1, x0, x8, lsl #4
     e9c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     ea0:	ldr	x8, [x20]
     ea4:	sub	x8, x0, x8
     ea8:	asr	x1, x8, #4
     eac:	mov	x0, x20
     eb0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     eb4:	ldrb	w8, [x24]
     eb8:	cbz	w8, f58 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2f4>
     ebc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     ec0:	add	x0, x0, #0x0
     ec4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     ec8:	tbz	w0, #0, f58 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2f4>
     ecc:	ldr	w8, [x20, #8]
     ed0:	cbz	w8, f58 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2f4>
     ed4:	ldr	x9, [x20]
     ed8:	adrp	x20, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     edc:	adrp	x21, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     ee0:	adrp	x22, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     ee4:	lsl	x24, x8, #4
     ee8:	add	x20, x20, #0x0
     eec:	add	x21, x21, #0x0
     ef0:	add	x25, x9, #0x8
     ef4:	add	x22, x22, #0x0
     ef8:	ldr	x23, [x25]
     efc:	bl	0 <_ZN4llvm4dbgsEv>
     f00:	mov	w2, #0x28                  	// #40
     f04:	mov	x1, x20
     f08:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f0c:	ldr	x8, [x19, #8]
     f10:	ldrh	w1, [x23, #12]
     f14:	mov	x23, x0
     f18:	mov	x0, x8
     f1c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f20:	mov	x1, x0
     f24:	mov	x0, x23
     f28:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f2c:	mov	w2, #0x1a                  	// #26
     f30:	mov	x1, x21
     f34:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f38:	ldur	w1, [x25, #-8]
     f3c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f40:	mov	w2, #0x2                   	// #2
     f44:	mov	x1, x22
     f48:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f4c:	subs	x24, x24, #0x10
     f50:	add	x25, x25, #0x10
     f54:	b.ne	ef8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x294>  // b.any
     f58:	ldp	x20, x19, [sp, #80]
     f5c:	ldp	x22, x21, [sp, #64]
     f60:	ldp	x24, x23, [sp, #48]
     f64:	ldr	x25, [sp, #32]
     f68:	ldp	x29, x30, [sp, #16]
     f6c:	add	sp, sp, #0x60
     f70:	ret
     f74:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f78:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f7c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f80:	add	x0, x0, #0x0
     f84:	add	x1, x1, #0x0
     f88:	add	x3, x3, #0x0
     f8c:	mov	w2, #0xd1                  	// #209
     f90:	bl	0 <__assert_fail>
     f94:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f98:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f9c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fa0:	add	x0, x0, #0x0
     fa4:	add	x1, x1, #0x0
     fa8:	add	x3, x3, #0x0
     fac:	mov	w2, #0x167                 	// #359
     fb0:	bl	0 <__assert_fail>

0000000000000fb4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>:
     fb4:	sub	sp, sp, #0xa0
     fb8:	stp	x29, x30, [sp, #80]
     fbc:	stp	x26, x25, [sp, #96]
     fc0:	stp	x24, x23, [sp, #112]
     fc4:	stp	x22, x21, [sp, #128]
     fc8:	stp	x20, x19, [sp, #144]
     fcc:	add	x29, sp, #0x50
     fd0:	mov	x20, x1
     fd4:	ldrh	w1, [x1, #8]
     fd8:	ldr	x8, [x0, #112]
     fdc:	ldrb	w9, [x20, #42]
     fe0:	add	x8, x8, x1, lsl #5
     fe4:	ldr	w8, [x8, #16]
     fe8:	str	w8, [x20, #12]
     fec:	cbnz	w9, 10c0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x10c>
     ff0:	mov	x21, x0
     ff4:	add	x0, x0, #0x88
     ff8:	mov	x19, x2
     ffc:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1000:	tbz	w0, #0, 100c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x58>
    1004:	mov	w8, #0x1                   	// #1
    1008:	strb	w8, [x20, #41]
    100c:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1010:	ldr	d0, [x8]
    1014:	mov	x8, sp
    1018:	add	x23, x8, #0x10
    101c:	mov	x2, sp
    1020:	mov	x0, x21
    1024:	mov	x1, x20
    1028:	str	x23, [sp]
    102c:	str	d0, [sp, #8]
    1030:	bl	c64 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>
    1034:	ldr	w8, [sp, #8]
    1038:	ldr	x24, [x20]
    103c:	cmp	w8, #0x0
    1040:	str	w8, [x20, #16]
    1044:	cset	w8, eq  // eq = none
    1048:	strb	w8, [x20, #40]
    104c:	ldr	x0, [x19, #152]
    1050:	ldr	w1, [x24, #12]
    1054:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1058:	ldr	w9, [sp, #8]
    105c:	ldr	x8, [sp]
    1060:	cbz	w9, 10b0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0xfc>
    1064:	mov	x21, x0
    1068:	lsl	x25, x9, #4
    106c:	add	x26, x8, #0x8
    1070:	ldr	x22, [x26]
    1074:	ldr	w2, [x24, #4]
    1078:	mov	x0, x19
    107c:	mov	x1, x21
    1080:	ldr	x8, [x22]
    1084:	ldr	w3, [x8, #12]
    1088:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    108c:	ldur	w1, [x26, #-8]
    1090:	mov	w3, w0
    1094:	mov	x0, x22
    1098:	mov	x2, x20
    109c:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>
    10a0:	subs	x25, x25, #0x10
    10a4:	add	x26, x26, #0x10
    10a8:	b.ne	1070 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0xbc>  // b.any
    10ac:	ldr	x8, [sp]
    10b0:	cmp	x8, x23
    10b4:	b.eq	10c0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x10c>  // b.none
    10b8:	mov	x0, x8
    10bc:	bl	0 <free>
    10c0:	ldp	x20, x19, [sp, #144]
    10c4:	ldp	x22, x21, [sp, #128]
    10c8:	ldp	x24, x23, [sp, #112]
    10cc:	ldp	x26, x25, [sp, #96]
    10d0:	ldp	x29, x30, [sp, #80]
    10d4:	add	sp, sp, #0xa0
    10d8:	ret

00000000000010dc <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>:
    10dc:	sub	sp, sp, #0x90
    10e0:	stp	x29, x30, [sp, #48]
    10e4:	stp	x28, x27, [sp, #64]
    10e8:	stp	x26, x25, [sp, #80]
    10ec:	stp	x24, x23, [sp, #96]
    10f0:	stp	x22, x21, [sp, #112]
    10f4:	stp	x20, x19, [sp, #128]
    10f8:	add	x29, sp, #0x30
    10fc:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1100:	mov	x20, x1
    1104:	ldr	w1, [x0, #24]
    1108:	ldr	d0, [x8]
    110c:	add	x8, sp, #0x10
    1110:	mov	x21, x2
    1114:	mov	x19, x0
    1118:	add	x8, x8, #0x10
    111c:	add	x0, sp, #0x10
    1120:	add	x2, sp, #0xc
    1124:	str	wzr, [sp, #12]
    1128:	str	x8, [sp, #16]
    112c:	str	d0, [sp, #24]
    1130:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1134:	cbz	x21, 119c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xc0>
    1138:	ldr	x8, [x19, #112]
    113c:	ldr	x9, [sp, #16]
    1140:	lsl	x10, x21, #1
    1144:	ldrh	w11, [x20]
    1148:	add	x12, x8, x11, lsl #5
    114c:	ldr	w12, [x12, #16]
    1150:	cbz	w12, 1174 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x98>
    1154:	ldr	w13, [sp, #24]
    1158:	cmp	w13, w12
    115c:	b.ls	129c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1c0>  // b.plast
    1160:	add	x13, x8, x11, lsl #5
    1164:	ldr	w13, [x13, #20]
    1168:	ldr	w14, [x9, x12, lsl #2]
    116c:	add	w13, w14, w13
    1170:	str	w13, [x9, x12, lsl #2]
    1174:	ldr	w12, [sp, #24]
    1178:	cbz	w12, 129c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1c0>
    117c:	add	x11, x8, x11, lsl #5
    1180:	ldr	w12, [x9]
    1184:	ldr	w11, [x11, #20]
    1188:	subs	x10, x10, #0x2
    118c:	add	x20, x20, #0x2
    1190:	add	w11, w12, w11
    1194:	str	w11, [x9]
    1198:	b.ne	1144 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x68>  // b.any
    119c:	ldr	w23, [x19, #24]
    11a0:	cbz	w23, 125c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x180>
    11a4:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
    11a8:	ldr	x26, [x26]
    11ac:	adrp	x21, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    11b0:	mov	x24, xzr
    11b4:	mov	w20, wzr
    11b8:	mov	w25, #0x4                   	// #4
    11bc:	add	x21, x21, #0x0
    11c0:	mov	w27, #0x1                   	// #1
    11c4:	ldr	w8, [sp, #24]
    11c8:	cmp	x24, x8
    11cc:	b.cs	129c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1c0>  // b.hs, b.nlast
    11d0:	ldr	x8, [sp, #16]
    11d4:	ldr	w8, [x8, x24, lsl #2]
    11d8:	cbz	w8, 1248 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x16c>
    11dc:	ldr	w9, [x19, #24]
    11e0:	cmp	x24, x9
    11e4:	b.cs	12bc <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1e0>  // b.hs, b.nlast
    11e8:	ldr	x28, [x19, #16]
    11ec:	add	x22, x28, x25
    11f0:	ldur	w9, [x22, #-4]
    11f4:	cbz	w9, 1248 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x16c>
    11f8:	cmp	w9, w8
    11fc:	b.cs	1230 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x154>  // b.hs, b.nlast
    1200:	ldrb	w8, [x26]
    1204:	cbz	w8, 1228 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x14c>
    1208:	mov	x0, x21
    120c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1210:	tbz	w0, #0, 1228 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x14c>
    1214:	bl	0 <_ZN4llvm4dbgsEv>
    1218:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    121c:	mov	w2, #0x2b                  	// #43
    1220:	add	x1, x1, #0x0
    1224:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1228:	ldur	w9, [x22, #-4]
    122c:	mov	w8, w9
    1230:	ldr	w10, [x28, x25]
    1234:	add	w8, w10, w8
    1238:	lsl	w10, w27, w24
    123c:	cmp	w9, w8
    1240:	csel	w8, w10, wzr, cc  // cc = lo, ul, last
    1244:	orr	w20, w8, w20
    1248:	add	x24, x24, #0x1
    124c:	cmp	x23, x24
    1250:	add	x25, x25, #0x14
    1254:	b.ne	11c4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xe8>  // b.any
    1258:	b	1260 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x184>
    125c:	mov	w20, wzr
    1260:	ldr	x0, [sp, #16]
    1264:	add	x8, sp, #0x10
    1268:	add	x8, x8, #0x10
    126c:	cmp	x0, x8
    1270:	b.eq	1278 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x19c>  // b.none
    1274:	bl	0 <free>
    1278:	mov	w0, w20
    127c:	ldp	x20, x19, [sp, #128]
    1280:	ldp	x22, x21, [sp, #112]
    1284:	ldp	x24, x23, [sp, #96]
    1288:	ldp	x26, x25, [sp, #80]
    128c:	ldp	x28, x27, [sp, #64]
    1290:	ldp	x29, x30, [sp, #48]
    1294:	add	sp, sp, #0x90
    1298:	ret
    129c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12a0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12a4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12a8:	add	x0, x0, #0x0
    12ac:	add	x1, x1, #0x0
    12b0:	add	x3, x3, #0x0
    12b4:	mov	w2, #0x95                  	// #149
    12b8:	bl	0 <__assert_fail>
    12bc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12c0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12c4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12c8:	add	x0, x0, #0x0
    12cc:	add	x1, x1, #0x0
    12d0:	add	x3, x3, #0x0
    12d4:	mov	w2, #0x99                  	// #153
    12d8:	bl	0 <__assert_fail>

00000000000012dc <_ZNK4llvm3mca12RegisterFile4dumpEv>:
    12dc:	stp	x29, x30, [sp, #-96]!
    12e0:	stp	x28, x27, [sp, #16]
    12e4:	stp	x26, x25, [sp, #32]
    12e8:	stp	x24, x23, [sp, #48]
    12ec:	stp	x22, x21, [sp, #64]
    12f0:	stp	x20, x19, [sp, #80]
    12f4:	mov	x29, sp
    12f8:	ldr	x8, [x0, #8]
    12fc:	mov	x19, x0
    1300:	ldr	w22, [x8, #8]
    1304:	cbz	w22, 143c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x160>
    1308:	adrp	x25, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    130c:	adrp	x26, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1310:	adrp	x27, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1314:	mov	x20, xzr
    1318:	add	x21, x19, #0x88
    131c:	mov	w23, #0x10                  	// #16
    1320:	add	x25, x25, #0x0
    1324:	add	x26, x26, #0x0
    1328:	add	x27, x27, #0x0
    132c:	ldr	x24, [x19, #112]
    1330:	mov	x0, x21
    1334:	mov	w1, w20
    1338:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    133c:	tbz	w0, #0, 142c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x150>
    1340:	bl	0 <_ZN4llvm4dbgsEv>
    1344:	ldr	x8, [x19, #8]
    1348:	mov	x28, x0
    134c:	mov	x1, x20
    1350:	mov	x0, x8
    1354:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1358:	mov	x1, x0
    135c:	mov	x0, x28
    1360:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1364:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1368:	mov	w2, #0x2                   	// #2
    136c:	add	x1, x1, #0x0
    1370:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1374:	mov	x1, x20
    1378:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    137c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1380:	mov	w2, #0x6                   	// #6
    1384:	add	x1, x1, #0x0
    1388:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    138c:	add	x24, x24, x23
    1390:	ldr	w1, [x24]
    1394:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1398:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    139c:	mov	w2, #0x7                   	// #7
    13a0:	add	x1, x1, #0x0
    13a4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13a8:	ldr	w1, [x24, #4]
    13ac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    13b0:	mov	w2, #0xb                   	// #11
    13b4:	mov	x1, x25
    13b8:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13bc:	ldrh	w1, [x24, #8]
    13c0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    13c4:	mov	w2, #0x9                   	// #9
    13c8:	mov	x1, x26
    13cc:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13d0:	mov	x28, x0
    13d4:	mov	x0, x21
    13d8:	mov	w1, w20
    13dc:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13e0:	and	x1, x0, #0x1
    13e4:	mov	x0, x28
    13e8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    13ec:	mov	w2, #0x1                   	// #1
    13f0:	mov	x1, x27
    13f4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13f8:	sub	x0, x24, #0x10
    13fc:	bl	0 <_ZNK4llvm3mca8WriteRef4dumpEv>
    1400:	bl	0 <_ZN4llvm4dbgsEv>
    1404:	ldp	x9, x8, [x0, #16]
    1408:	cmp	x8, x9
    140c:	b.cs	1424 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x148>  // b.hs, b.nlast
    1410:	add	x9, x8, #0x1
    1414:	str	x9, [x0, #24]
    1418:	mov	w9, #0xa                   	// #10
    141c:	strb	w9, [x8]
    1420:	b	142c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x150>
    1424:	mov	w1, #0xa                   	// #10
    1428:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    142c:	add	x20, x20, #0x1
    1430:	cmp	x22, x20
    1434:	add	x23, x23, #0x20
    1438:	b.ne	132c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x50>  // b.any
    143c:	ldr	w24, [x19, #24]
    1440:	cbz	w24, 14f4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x218>
    1444:	adrp	x21, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1448:	adrp	x22, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    144c:	adrp	x23, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1450:	mov	x20, xzr
    1454:	mov	w25, #0x4                   	// #4
    1458:	add	x21, x21, #0x0
    145c:	add	x22, x22, #0x0
    1460:	add	x23, x23, #0x0
    1464:	mov	w26, #0xa                   	// #10
    1468:	bl	0 <_ZN4llvm4dbgsEv>
    146c:	mov	w2, #0xf                   	// #15
    1470:	mov	x1, x21
    1474:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1478:	mov	x1, x20
    147c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1480:	ldr	w8, [x19, #24]
    1484:	cmp	x20, x8
    1488:	b.cs	1510 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x234>  // b.hs, b.nlast
    148c:	ldr	x27, [x19, #16]
    1490:	bl	0 <_ZN4llvm4dbgsEv>
    1494:	mov	w2, #0x19                  	// #25
    1498:	mov	x1, x22
    149c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    14a0:	add	x27, x27, x25
    14a4:	ldur	w1, [x27, #-4]
    14a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    14ac:	mov	w2, #0x19                  	// #25
    14b0:	mov	x1, x23
    14b4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    14b8:	ldr	w1, [x27]
    14bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    14c0:	ldp	x9, x8, [x0, #16]
    14c4:	cmp	x8, x9
    14c8:	b.cs	14dc <_ZNK4llvm3mca12RegisterFile4dumpEv+0x200>  // b.hs, b.nlast
    14cc:	add	x9, x8, #0x1
    14d0:	str	x9, [x0, #24]
    14d4:	strb	w26, [x8]
    14d8:	b	14e4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x208>
    14dc:	mov	w1, #0xa                   	// #10
    14e0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    14e4:	add	x20, x20, #0x1
    14e8:	cmp	x24, x20
    14ec:	add	x25, x25, #0x14
    14f0:	b.ne	1468 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x18c>  // b.any
    14f4:	ldp	x20, x19, [sp, #80]
    14f8:	ldp	x22, x21, [sp, #64]
    14fc:	ldp	x24, x23, [sp, #48]
    1500:	ldp	x26, x25, [sp, #32]
    1504:	ldp	x28, x27, [sp, #16]
    1508:	ldp	x29, x30, [sp], #96
    150c:	ret
    1510:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1514:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1518:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    151c:	add	x0, x0, #0x0
    1520:	add	x1, x1, #0x0
    1524:	add	x3, x3, #0x0
    1528:	mov	w2, #0x99                  	// #153
    152c:	bl	0 <__assert_fail>

0000000000001530 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>:
    1530:	stp	x29, x30, [sp, #-80]!
    1534:	str	x25, [sp, #16]
    1538:	stp	x24, x23, [sp, #32]
    153c:	stp	x22, x21, [sp, #48]
    1540:	stp	x20, x19, [sp, #64]
    1544:	mov	x29, sp
    1548:	sub	x25, x1, x0
    154c:	cmp	x25, #0x101
    1550:	b.lt	176c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>  // b.tstop
    1554:	mov	x21, x1
    1558:	mov	x19, x0
    155c:	mov	x22, x2
    1560:	and	x20, x3, #0xff
    1564:	add	x24, x0, #0x10
    1568:	cbz	x22, 16e0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x1b0>
    156c:	lsr	x8, x25, #1
    1570:	and	x8, x8, #0x7ffffffffffffff0
    1574:	add	x8, x19, x8
    1578:	mov	x9, x8
    157c:	ldr	x10, [x19, #24]
    1580:	ldr	x12, [x9, #8]!
    1584:	ldur	x11, [x21, #-8]
    1588:	sub	x22, x22, #0x1
    158c:	cmp	x10, x12
    1590:	b.cs	15bc <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x8c>  // b.hs, b.nlast
    1594:	cmp	x12, x11
    1598:	b.cs	15e4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0xb4>  // b.hs, b.nlast
    159c:	ldr	w10, [x8]
    15a0:	ldr	w11, [x19]
    15a4:	ldr	x13, [x19, #8]
    15a8:	str	x12, [x19, #8]
    15ac:	str	w10, [x19]
    15b0:	str	w11, [x8]
    15b4:	str	x13, [x9]
    15b8:	b	1660 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x130>
    15bc:	cmp	x10, x11
    15c0:	b.cs	160c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0xdc>  // b.hs, b.nlast
    15c4:	ldr	w8, [x19, #16]
    15c8:	ldr	w9, [x19]
    15cc:	ldr	x11, [x19, #8]
    15d0:	str	x10, [x19, #8]
    15d4:	str	w8, [x19]
    15d8:	str	w9, [x19, #16]
    15dc:	str	x11, [x19, #24]
    15e0:	b	1660 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x130>
    15e4:	ldr	w9, [x19]
    15e8:	ldr	x8, [x19, #8]
    15ec:	cmp	x10, x11
    15f0:	b.cs	1634 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x104>  // b.hs, b.nlast
    15f4:	ldur	w10, [x21, #-16]
    15f8:	str	x11, [x19, #8]
    15fc:	str	w10, [x19]
    1600:	stur	w9, [x21, #-16]
    1604:	stur	x8, [x21, #-8]
    1608:	b	1660 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x130>
    160c:	ldr	w13, [x19]
    1610:	ldr	x10, [x19, #8]
    1614:	cmp	x12, x11
    1618:	b.cs	164c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x11c>  // b.hs, b.nlast
    161c:	ldur	w8, [x21, #-16]
    1620:	str	x11, [x19, #8]
    1624:	str	w8, [x19]
    1628:	stur	w13, [x21, #-16]
    162c:	stur	x10, [x21, #-8]
    1630:	b	1660 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x130>
    1634:	ldr	w11, [x19, #16]
    1638:	str	x10, [x19, #8]
    163c:	str	w9, [x19, #16]
    1640:	str	x8, [x19, #24]
    1644:	str	w11, [x19]
    1648:	b	1660 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x130>
    164c:	ldr	w11, [x8]
    1650:	str	x12, [x19, #8]
    1654:	str	w11, [x19]
    1658:	str	w13, [x8]
    165c:	str	x10, [x9]
    1660:	mov	x8, x21
    1664:	mov	x10, x24
    1668:	ldr	x11, [x19, #8]
    166c:	sub	x23, x10, #0x10
    1670:	ldr	x9, [x23, #24]
    1674:	add	x23, x23, #0x10
    1678:	cmp	x9, x11
    167c:	b.cc	1670 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x140>  // b.lo, b.ul, b.last
    1680:	add	x10, x23, #0x10
    1684:	ldur	x12, [x8, #-8]
    1688:	sub	x8, x8, #0x10
    168c:	cmp	x11, x12
    1690:	b.cc	1684 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x154>  // b.lo, b.ul, b.last
    1694:	cmp	x23, x8
    1698:	b.cs	16b8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x188>  // b.hs, b.nlast
    169c:	ldr	w11, [x8]
    16a0:	ldr	w13, [x23]
    16a4:	str	x12, [x23, #8]
    16a8:	str	w11, [x23]
    16ac:	str	w13, [x8]
    16b0:	str	x9, [x8, #8]
    16b4:	b	1668 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x138>
    16b8:	mov	x0, x23
    16bc:	mov	x1, x21
    16c0:	mov	x2, x22
    16c4:	mov	x3, x20
    16c8:	bl	1530 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>
    16cc:	sub	x25, x23, x19
    16d0:	cmp	x25, #0x100
    16d4:	mov	x21, x23
    16d8:	b.gt	1568 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x38>
    16dc:	b	176c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>
    16e0:	lsr	x22, x25, #4
    16e4:	sub	x8, x22, #0x2
    16e8:	sub	x9, x22, #0x1
    16ec:	cmp	x8, #0x0
    16f0:	csel	x8, x9, x8, lt  // lt = tstop
    16f4:	asr	x23, x8, #1
    16f8:	add	x8, x19, x23, lsl #4
    16fc:	add	x24, x8, #0x8
    1700:	ldp	x3, x4, [x24, #-8]
    1704:	mov	x0, x19
    1708:	mov	x1, x23
    170c:	mov	x2, x22
    1710:	mov	x5, x20
    1714:	bl	1784 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>
    1718:	sub	x23, x23, #0x1
    171c:	cmn	x23, #0x1
    1720:	sub	x24, x24, #0x10
    1724:	b.ne	1700 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x1d0>  // b.any
    1728:	cmp	x25, #0x11
    172c:	b.lt	176c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>  // b.tstop
    1730:	sub	x21, x21, #0x10
    1734:	ldr	w8, [x19]
    1738:	ldp	x3, x4, [x21]
    173c:	sub	x22, x21, x19
    1740:	asr	x2, x22, #4
    1744:	str	w8, [x21]
    1748:	ldr	x8, [x19, #8]
    174c:	mov	x0, x19
    1750:	mov	x1, xzr
    1754:	mov	x5, x20
    1758:	str	x8, [x21, #8]
    175c:	bl	1784 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>
    1760:	cmp	x22, #0x10
    1764:	sub	x21, x21, #0x10
    1768:	b.gt	1734 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x204>
    176c:	ldp	x20, x19, [sp, #64]
    1770:	ldp	x22, x21, [sp, #48]
    1774:	ldp	x24, x23, [sp, #32]
    1778:	ldr	x25, [sp, #16]
    177c:	ldp	x29, x30, [sp], #80
    1780:	ret

0000000000001784 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>:
    1784:	sub	x9, x2, #0x1
    1788:	cmp	x9, #0x0
    178c:	csel	x8, x2, x9, lt  // lt = tstop
    1790:	asr	x10, x8, #1
    1794:	cmp	x10, x1
    1798:	mov	x8, x1
    179c:	b.le	17f0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x6c>
    17a0:	mov	x11, x1
    17a4:	lsl	x8, x11, #1
    17a8:	mov	w12, #0x1                   	// #1
    17ac:	add	x8, x8, #0x2
    17b0:	bfi	x12, x11, #1, #63
    17b4:	add	x13, x0, x8, lsl #4
    17b8:	add	x14, x0, x12, lsl #4
    17bc:	ldr	x13, [x13, #8]
    17c0:	ldr	x14, [x14, #8]
    17c4:	add	x11, x0, x11, lsl #4
    17c8:	cmp	x13, x14
    17cc:	csel	x8, x12, x8, cc  // cc = lo, ul, last
    17d0:	add	x12, x0, x8, lsl #4
    17d4:	ldr	w13, [x12]
    17d8:	cmp	x8, x10
    17dc:	str	w13, [x11]
    17e0:	ldr	x12, [x12, #8]
    17e4:	str	x12, [x11, #8]
    17e8:	mov	x11, x8
    17ec:	b.lt	17a4 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x20>  // b.tstop
    17f0:	tbnz	w2, #0, 182c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xa8>
    17f4:	sub	x10, x2, #0x2
    17f8:	cmp	x10, #0x0
    17fc:	csel	x9, x9, x10, lt  // lt = tstop
    1800:	cmp	x8, x9, asr #1
    1804:	b.ne	182c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xa8>  // b.any
    1808:	mov	w9, #0x1                   	// #1
    180c:	bfi	x9, x8, #1, #63
    1810:	add	x10, x0, x9, lsl #4
    1814:	ldr	w11, [x10]
    1818:	add	x8, x0, x8, lsl #4
    181c:	str	w11, [x8]
    1820:	ldr	x10, [x10, #8]
    1824:	str	x10, [x8, #8]
    1828:	mov	x8, x9
    182c:	cmp	x8, x1
    1830:	b.le	1878 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xf4>
    1834:	sub	x9, x8, #0x1
    1838:	cmp	x9, #0x0
    183c:	csel	x9, x8, x9, lt  // lt = tstop
    1840:	asr	x9, x9, #1
    1844:	add	x10, x0, x9, lsl #4
    1848:	ldr	x10, [x10, #8]
    184c:	cmp	x10, x4
    1850:	b.cs	1878 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xf4>  // b.hs, b.nlast
    1854:	lsl	x11, x9, #4
    1858:	ldr	w11, [x0, x11]
    185c:	add	x8, x0, x8, lsl #4
    1860:	cmp	x9, x1
    1864:	str	x10, [x8, #8]
    1868:	str	w11, [x8]
    186c:	mov	x8, x9
    1870:	b.gt	1834 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xb0>
    1874:	b	187c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xf8>
    1878:	mov	x9, x8
    187c:	add	x8, x0, x9, lsl #4
    1880:	str	w3, [x8]
    1884:	str	x4, [x8, #8]
    1888:	ret

000000000000188c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_>:
    188c:	cmp	x0, x1
    1890:	b.eq	1960 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0xd4>  // b.none
    1894:	add	x12, x0, #0x10
    1898:	cmp	x12, x1
    189c:	b.eq	1960 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0xd4>  // b.none
    18a0:	add	x8, x0, #0x8
    18a4:	mov	x9, x8
    18a8:	mov	x13, x0
    18ac:	ldr	x11, [x13, #24]
    18b0:	ldr	x10, [x0, #8]
    18b4:	cmp	x11, x10
    18b8:	mov	x10, x12
    18bc:	b.cs	190c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0x80>  // b.hs, b.nlast
    18c0:	ldr	w12, [x13, #16]
    18c4:	sub	x13, x10, x0
    18c8:	cmp	x13, #0x1
    18cc:	b.lt	1900 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0x74>  // b.tstop
    18d0:	lsr	x13, x13, #4
    18d4:	add	x13, x13, #0x1
    18d8:	mov	x15, x10
    18dc:	mov	x14, x10
    18e0:	ldr	w16, [x14, #-16]!
    18e4:	ldur	x17, [x15, #-8]
    18e8:	sub	x13, x13, #0x1
    18ec:	cmp	x13, #0x1
    18f0:	str	w16, [x15]
    18f4:	str	x17, [x15, #8]
    18f8:	mov	x15, x14
    18fc:	b.gt	18e0 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0x54>
    1900:	str	w12, [x0]
    1904:	mov	x13, x8
    1908:	b	1948 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0xbc>
    190c:	ldr	x13, [x13, #8]
    1910:	ldr	w12, [x10]
    1914:	cmp	x13, x11
    1918:	mov	x13, x10
    191c:	b.ls	1944 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0xb8>  // b.plast
    1920:	mov	x13, x9
    1924:	ldur	w14, [x13, #-8]
    1928:	ldr	x15, [x13]
    192c:	str	w14, [x13, #8]
    1930:	str	x15, [x13, #16]
    1934:	ldr	x14, [x13, #-16]!
    1938:	cmp	x14, x11
    193c:	b.hi	1924 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0x98>  // b.pmore
    1940:	add	x13, x13, #0x8
    1944:	str	w12, [x13], #8
    1948:	add	x12, x10, #0x10
    194c:	str	x11, [x13]
    1950:	cmp	x12, x1
    1954:	add	x9, x9, #0x10
    1958:	mov	x13, x10
    195c:	b.ne	18ac <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_+0x20>  // b.any
    1960:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EEC2EmRKS6_RKS7_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EEC2EmRKS6_RKS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	lsr	x8, x1, #58
  14:	cbnz	x8, 68 <_ZNSt6vectorISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EEC2EmRKS6_RKS7_+0x68>
  18:	mov	x20, x2
  1c:	mov	x21, x1
  20:	mov	x19, x0
  24:	stp	xzr, xzr, [x0]
  28:	str	xzr, [x0, #16]
  2c:	bl	0 <_ZNSt6vectorISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EEC2EmRKS6_RKS7_>
  30:	add	x8, x0, x21, lsl #5
  34:	stp	x0, x0, [x19]
  38:	str	x8, [x19, #16]
  3c:	cbz	x21, 54 <_ZNSt6vectorISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EEC2EmRKS6_RKS7_+0x54>
  40:	ldp	q1, q0, [x20]
  44:	subs	x21, x21, #0x1
  48:	stp	q1, q0, [x0]
  4c:	add	x0, x0, #0x20
  50:	b.ne	40 <_ZNSt6vectorISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EEC2EmRKS6_RKS7_+0x40>  // b.any
  54:	str	x0, [x19, #8]
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	adrp	x0, 0 <_ZNSt6vectorISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EEC2EmRKS6_RKS7_>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm5APIntC2Ejmb:

0000000000000000 <_ZN4llvm5APIntC2Ejmb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	w1, [x0, #8]
   c:	cbz	w1, 38 <_ZN4llvm5APIntC2Ejmb+0x38>
  10:	cmp	w1, #0x40
  14:	b.hi	24 <_ZN4llvm5APIntC2Ejmb+0x24>  // b.pmore
  18:	str	x2, [x0]
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <_ZN4llvm5APIntC2Ejmb>
  24:	and	w8, w3, #0x1
  28:	mov	x1, x2
  2c:	mov	w2, w8
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm5APInt12initSlowCaseEmb>
  38:	adrp	x0, 0 <_ZN4llvm5APIntC2Ejmb>
  3c:	adrp	x1, 0 <_ZN4llvm5APIntC2Ejmb>
  40:	adrp	x3, 0 <_ZN4llvm5APIntC2Ejmb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x117                 	// #279
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	60 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_+0x60>  // b.hs, b.nlast
  20:	ldr	x10, [x19]
  24:	ldr	w12, [x20]
  28:	mov	w11, #0x14                  	// #20
  2c:	cmp	w8, w9
  30:	umaddl	x9, w8, w11, x10
  34:	str	w12, [x9]
  38:	stur	xzr, [x9, #4]
  3c:	stur	xzr, [x9, #9]
  40:	b.cs	7c <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_+0x7c>  // b.hs, b.nlast
  44:	add	w8, w8, #0x1
  48:	str	w8, [x19, #8]
  4c:	ldp	x20, x19, [sp, #16]
  50:	umaddl	x9, w8, w11, x10
  54:	sub	x0, x9, #0x14
  58:	ldp	x29, x30, [sp], #32
  5c:	ret
  60:	add	x1, x19, #0x10
  64:	mov	w3, #0x14                  	// #20
  68:	mov	x0, x19
  6c:	mov	x2, xzr
  70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  74:	ldp	w8, w9, [x19, #8]
  78:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_+0x20>
  7c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_>
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_>
  84:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRjEEERS3_DpOT_>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x43                  	// #67
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	mov	x20, x3
  18:	mov	x21, x2
  1c:	mov	x19, x0
  20:	cmp	w8, w9
  24:	mov	x22, x1
  28:	b.cs	78 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_+0x78>  // b.hs, b.nlast
  2c:	ldr	x10, [x19]
  30:	ldrh	w12, [x22]
  34:	ldrh	w13, [x21]
  38:	ldrb	w14, [x20]
  3c:	mov	w11, #0x14                  	// #20
  40:	cmp	w8, w9
  44:	umaddl	x9, w8, w11, x10
  48:	stp	w12, wzr, [x9]
  4c:	stp	w13, wzr, [x9, #8]
  50:	strb	w14, [x9, #16]
  54:	b.cs	94 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_+0x94>  // b.hs, b.nlast
  58:	add	w8, w8, #0x1
  5c:	str	w8, [x19, #8]
  60:	ldp	x20, x19, [sp, #32]
  64:	ldp	x22, x21, [sp, #16]
  68:	umaddl	x9, w8, w11, x10
  6c:	sub	x0, x9, #0x14
  70:	ldp	x29, x30, [sp], #48
  74:	ret
  78:	add	x1, x19, #0x10
  7c:	mov	w3, #0x14                  	// #20
  80:	mov	x0, x19
  84:	mov	x2, xzr
  88:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  8c:	ldp	w8, w9, [x19, #8]
  90:	b	2c <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_+0x2c>
  94:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_>
  98:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_>
  9c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca12RegisterFile22RegisterMappingTrackerEE12emplace_backIJRKtS7_RKbEEERS3_DpOT_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x43                  	// #67
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE:

0000000000000000 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	38 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE+0x38>  // b.plast
  14:	ldr	x9, [x0]
  18:	and	x8, x1, #0xffffffff
  1c:	mov	w11, #0x18                  	// #24
  20:	mul	x8, x8, x11
  24:	ldr	x10, [x0, #64]
  28:	ldr	w8, [x9, x8]
  2c:	add	x0, x10, x8
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  3c:	adrp	x1, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  40:	adrp	x3, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x1b9                 	// #441
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb:

0000000000000000 <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	strh	wzr, [x0]
  10:	str	xzr, [x0, #8]
  14:	ldr	w8, [x2, #8]
  18:	cmp	w8, w1
  1c:	b.ls	68 <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x68>  // b.plast
  20:	ldr	x8, [x2]
  24:	and	x9, x1, #0xffffffff
  28:	mov	w11, #0x18                  	// #24
  2c:	ldr	x10, [x2, #48]
  30:	madd	x8, x9, x11, x8
  34:	ldr	w8, [x8, #4]
  38:	mov	x19, x0
  3c:	strh	w1, [x0]
  40:	add	x8, x10, x8, lsl #1
  44:	str	x8, [x0, #8]
  48:	tbnz	w3, #0, 5c <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x5c>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  54:	cbnz	w0, 5c <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x5c>
  58:	str	xzr, [x19, #8]
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  6c:	adrp	x1, 0 <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  70:	adrp	x3, 0 <_ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x1b9                 	// #441
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APInt6setBitEj:

0000000000000000 <_ZN4llvm5APInt6setBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZN4llvm5APInt6setBitEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZN4llvm5APInt6setBitEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZN4llvm5APInt6setBitEj>
  48:	adrp	x1, 0 <_ZN4llvm5APInt6setBitEj>
  4c:	adrp	x3, 0 <_ZN4llvm5APInt6setBitEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x59d                 	// #1437
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APInt8clearBitEj:

0000000000000000 <_ZN4llvm5APInt8clearBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	48 <_ZN4llvm5APInt8clearBitEj+0x48>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	lsl	x9, x9, x1
  1c:	cmp	w8, #0x40
  20:	mvn	x8, x9
  24:	b.ls	34 <_ZN4llvm5APInt8clearBitEj+0x34>  // b.plast
  28:	ldr	x9, [x0]
  2c:	lsr	w10, w1, #6
  30:	add	x0, x9, w10, uxtw #3
  34:	ldr	x9, [x0]
  38:	and	x8, x9, x8
  3c:	str	x8, [x0]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm5APInt8clearBitEj>
  4c:	adrp	x1, 0 <_ZN4llvm5APInt8clearBitEj>
  50:	adrp	x3, 0 <_ZN4llvm5APInt8clearBitEj>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x5e7                 	// #1511
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb:

0000000000000000 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	strh	wzr, [x0]
  10:	str	xzr, [x0, #8]
  14:	ldr	w8, [x2, #8]
  18:	cmp	w8, w1
  1c:	b.ls	68 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x68>  // b.plast
  20:	ldr	x8, [x2]
  24:	and	x9, x1, #0xffffffff
  28:	mov	w11, #0x18                  	// #24
  2c:	ldr	x10, [x2, #48]
  30:	madd	x8, x9, x11, x8
  34:	ldr	w8, [x8, #8]
  38:	mov	x19, x0
  3c:	strh	w1, [x0]
  40:	add	x8, x10, x8, lsl #1
  44:	str	x8, [x0, #8]
  48:	tbnz	w3, #0, 5c <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x5c>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  54:	cbnz	w0, 5c <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x5c>
  58:	str	xzr, [x19, #8]
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  6c:	adrp	x1, 0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  70:	adrp	x3, 0 <_ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x1b9                 	// #441
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZNK4llvm5APIntixEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZNK4llvm5APIntixEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	tst	x9, x8
  38:	cset	w0, ne  // ne = any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  48:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  4c:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x472                 	// #1138
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_>
  58:	ldr	w8, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	98 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x98>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	8c <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x8c>
  34:	b.cs	8c <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x8c>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	54 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x54>  // b.hs, b.nlast
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  50:	ldr	w8, [x19, #8]
  54:	cmp	x8, x20
  58:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x20>  // b.none
  5c:	adrp	x9, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
  60:	ldr	x11, [x19]
  64:	ldr	x9, [x9]
  68:	add	x10, x11, x20, lsl #4
  6c:	ldr	w9, [x9]
  70:	add	x8, x11, x8, lsl #4
  74:	str	w9, [x8]
  78:	str	xzr, [x8, #8]
  7c:	add	x8, x8, #0x10
  80:	cmp	x8, x10
  84:	b.ne	74 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x74>  // b.any
  88:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x20>
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  9c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  a0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x43                  	// #67
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12MCSchedModel17getSchedClassDescEj:

0000000000000000 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 2c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x2c>
  10:	ldr	w9, [x0, #52]
  14:	cmp	w9, w1
  18:	b.ls	4c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x4c>  // b.plast
  1c:	mov	w9, #0x18                  	// #24
  20:	umaddl	x0, w1, w9, x8
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  30:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  34:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x15b                 	// #347
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  50:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  54:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x15d                 	// #349
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj>:
   0:	ldrh	w8, [x1, #20]
   4:	cbz	x8, 50 <_ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj+0x50>
   8:	ldr	x9, [x0, #144]
   c:	ldrh	w10, [x1, #18]
  10:	mov	w11, #0xc                   	// #12
  14:	add	x12, x8, x8, lsl #1
  18:	madd	x8, x10, x11, x9
  1c:	add	x8, x8, #0x8
  20:	lsl	x9, x12, #2
  24:	ldur	w10, [x8, #-8]
  28:	cmp	w10, w2
  2c:	b.cc	44 <_ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj+0x44>  // b.lo, b.ul, b.last
  30:	b.hi	50 <_ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj+0x50>  // b.pmore
  34:	ldur	w10, [x8, #-4]
  38:	cbz	w10, 58 <_ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj+0x58>
  3c:	cmp	w10, w3
  40:	b.eq	58 <_ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj+0x58>  // b.none
  44:	subs	x9, x9, #0xc
  48:	add	x8, x8, #0xc
  4c:	b.ne	24 <_ZNK4llvm15MCSubtargetInfo20getReadAdvanceCyclesEPKNS_16MCSchedClassDescEjj+0x24>  // b.any
  50:	mov	w0, wzr
  54:	ret
  58:	ldr	w0, [x8]
  5c:	ret

Disassembly of section .text._ZN4llvm3mca12RegisterFileD2Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileD2Ev>
  10:	ldr	w8, [x0, #144]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x41
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	b.cc	38 <_ZN4llvm3mca12RegisterFileD2Ev+0x38>  // b.lo, b.ul, b.last
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD2Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD2Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x8, x19, #0x20
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD0Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileD0Ev>
  10:	ldr	w8, [x0, #144]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x41
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	b.cc	38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>  // b.lo, b.ul, b.last
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x8, x19, #0x20
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD0Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  60:	mov	x0, x19
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w9, [x0, #8]
   4:	mov	x8, #0xffffffffffffffff    	// #-1
   8:	neg	w10, w9
   c:	cmp	w9, #0x40
  10:	lsr	x8, x8, x10
  14:	b.hi	20 <_ZN4llvm5APInt15clearUnusedBitsEv+0x20>  // b.pmore
  18:	mov	x9, x0
  1c:	b	34 <_ZN4llvm5APInt15clearUnusedBitsEv+0x34>
  20:	ldr	x10, [x0]
  24:	add	x9, x9, #0x3f
  28:	lsr	x9, x9, #6
  2c:	sub	w9, w9, #0x1
  30:	add	x9, x10, w9, uxtw #3
  34:	ldr	x10, [x9]
  38:	and	x8, x10, x8
  3c:	str	x8, [x9]
  40:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv:

0000000000000000 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cbz	x8, 34 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv+0x34>
  10:	add	x9, x8, #0x2
  14:	str	x9, [x0, #8]
  18:	ldrh	w8, [x8]
  1c:	ldrh	w9, [x0]
  20:	add	w9, w9, w8
  24:	strh	w9, [x0]
  28:	mov	x0, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>
  38:	adrp	x1, 0 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>
  3c:	adrp	x3, 0 <_ZN4llvm14MCRegisterInfo16DiffListIterator7advanceEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0xd1                  	// #209
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt12_Vector_baseISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #58
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt4pairIN4llvm3mca8WriteRefENS2_12RegisterFile20RegisterRenamingInfoEESaIS6_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #5
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_:

0000000000000000 <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_>:
   0:	cmp	x0, x1
   4:	b.eq	3c <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0x3c>  // b.none
   8:	sub	x8, x1, #0x10
   c:	cmp	x8, x0
  10:	b.eq	84 <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0x84>  // b.none
  14:	mov	x9, x0
  18:	ldr	w10, [x0]
  1c:	ldr	w11, [x0, #16]!
  20:	cmp	w10, w11
  24:	b.ne	c <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0xc>  // b.any
  28:	ldr	x10, [x9, #8]
  2c:	ldr	x9, [x9, #24]
  30:	cmp	x10, x9
  34:	b.ne	c <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0xc>  // b.any
  38:	sub	x0, x0, #0x10
  3c:	cmp	x0, x1
  40:	b.eq	84 <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0x84>  // b.none
  44:	add	x8, x0, #0x20
  48:	cmp	x8, x1
  4c:	b.eq	80 <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0x80>  // b.none
  50:	ldr	w11, [x0]
  54:	ldr	w10, [x8]
  58:	ldr	x9, [x8, #8]
  5c:	cmp	w11, w10
  60:	b.ne	70 <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0x70>  // b.any
  64:	ldr	x11, [x0, #8]
  68:	cmp	x11, x9
  6c:	b.eq	78 <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0x78>  // b.none
  70:	str	w10, [x0, #16]!
  74:	str	x9, [x0, #8]
  78:	add	x8, x8, #0x10
  7c:	b	48 <_ZSt8__uniqueIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops19_Iter_equal_to_iterEET_S7_S7_T0_+0x48>
  80:	add	x1, x0, #0x10
  84:	mov	x0, x1
  88:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6assignEmRKj:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x21, x1
  20:	cmp	x8, x1
  24:	str	wzr, [x0, #8]
  28:	b.cs	44 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x44>  // b.hs, b.nlast
  2c:	add	x1, x20, #0x10
  30:	mov	w3, #0x4                   	// #4
  34:	mov	x0, x20
  38:	mov	x2, x21
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x20, #12]
  44:	cmp	x8, x21
  48:	b.cc	80 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x80>  // b.lo, b.ul, b.last
  4c:	ands	x10, x21, #0xffffffff
  50:	str	w21, [x20, #8]
  54:	b.eq	70 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x70>  // b.none
  58:	ldr	x8, [x20]
  5c:	ldr	w9, [x19]
  60:	lsl	x10, x10, #2
  64:	subs	x10, x10, #0x4
  68:	str	w9, [x8], #4
  6c:	b.ne	64 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x64>  // b.any
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

ResourceManager.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca16ResourceStrategyD0Ev>:
       0:	brk	#0x1

0000000000000004 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm>:
       4:	mov	x8, x0
       8:	ldr	x10, [x8, #16]!
       c:	mov	x9, x0
      10:	ands	x0, x10, x1
      14:	b.ne	38 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x34>  // b.any
      18:	ldr	x10, [x9, #8]
      1c:	ldr	x11, [x9, #24]
      20:	eor	x11, x11, x10
      24:	ands	x0, x11, x1
      28:	stp	x11, xzr, [x9, #16]
      2c:	b.ne	38 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x34>  // b.any
      30:	and	x0, x10, x1
      34:	str	x10, [x8]
      38:	mov	x1, x8
      3c:	b	40 <_ZN4llvm3mcaL10selectImplEmRm>

0000000000000040 <_ZN4llvm3mcaL10selectImplEmRm>:
      40:	stp	x29, x30, [sp, #-16]!
      44:	mov	x29, sp
      48:	cbz	x0, 78 <_ZN4llvm3mcaL10selectImplEmRm+0x38>
      4c:	clz	x8, x0
      50:	mov	w9, #0x1                   	// #1
      54:	eor	x8, x8, #0x3f
      58:	ldr	x10, [x1]
      5c:	lsl	x0, x9, x8
      60:	sub	x8, x0, #0x1
      64:	orr	x8, x8, x0
      68:	and	x8, x10, x8
      6c:	str	x8, [x1]
      70:	ldp	x29, x30, [sp], #16
      74:	ret
      78:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      7c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      80:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      84:	add	x0, x0, #0x0
      88:	add	x1, x1, #0x0
      8c:	add	x3, x3, #0x0
      90:	mov	w2, #0x64                  	// #100
      94:	bl	0 <__assert_fail>

0000000000000098 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>:
      98:	ldr	x8, [x0, #16]
      9c:	cmp	x8, x1
      a0:	b.cs	b4 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x1c>  // b.hs, b.nlast
      a4:	ldr	x8, [x0, #24]
      a8:	orr	x8, x8, x1
      ac:	str	x8, [x0, #24]
      b0:	ret
      b4:	bics	x8, x8, x1
      b8:	str	x8, [x0, #16]
      bc:	b.eq	c4 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x2c>  // b.none
      c0:	ret
      c4:	ldr	x8, [x0, #8]
      c8:	ldr	x9, [x0, #24]
      cc:	eor	x8, x9, x8
      d0:	stp	x8, xzr, [x0, #16]
      d4:	ret

00000000000000d8 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>:
      d8:	stp	x29, x30, [sp, #-16]!
      dc:	mov	x29, sp
      e0:	fmov	d0, x3
      e4:	str	w2, [x0]
      e8:	str	x3, [x0, #8]
      ec:	cnt	v0.8b, v0.8b
      f0:	uaddlv	h0, v0.8b
      f4:	ldr	w8, [x1, #16]
      f8:	fmov	w9, s0
      fc:	cmp	w9, #0x1
     100:	cset	w10, hi  // hi = pmore
     104:	cmp	w9, #0x2
     108:	str	w8, [x0, #32]
     10c:	strb	w10, [x0, #41]
     110:	b.cc	12c <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x54>  // b.lo, b.ul, b.last
     114:	cbz	x3, 158 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x80>
     118:	clz	x9, x3
     11c:	eor	x9, x9, #0x3f
     120:	mov	w10, #0x1                   	// #1
     124:	lsl	x9, x10, x9
     128:	b	138 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x60>
     12c:	ldr	w9, [x1, #8]
     130:	mov	x3, #0xffffffffffffffff    	// #-1
     134:	lsl	x9, x3, x9
     138:	cmn	w8, #0x1
     13c:	eor	x9, x9, x3
     140:	csel	w8, wzr, w8, eq  // eq = none
     144:	stp	x9, x9, [x0, #16]
     148:	str	w8, [x0, #36]
     14c:	strb	wzr, [x0, #40]
     150:	ldp	x29, x30, [sp], #16
     154:	ret
     158:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     15c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     160:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     164:	add	x0, x0, #0x0
     168:	add	x1, x1, #0x0
     16c:	add	x3, x3, #0x0
     170:	mov	w2, #0x64                  	// #100
     174:	bl	0 <__assert_fail>

0000000000000178 <_ZNK4llvm3mca13ResourceState7isReadyEj>:
     178:	ldrb	w8, [x0, #40]
     17c:	cbz	w8, 190 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     180:	ldr	w8, [x0, #32]
     184:	cbz	w8, 190 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     188:	mov	w0, wzr
     18c:	ret
     190:	ldr	d0, [x0, #24]
     194:	cnt	v0.8b, v0.8b
     198:	uaddlv	h0, v0.8b
     19c:	fmov	w8, s0
     1a0:	cmp	w8, w1
     1a4:	cset	w0, cs  // cs = hs, nlast
     1a8:	ret

00000000000001ac <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>:
     1ac:	ldr	w8, [x0, #32]
     1b0:	cbz	w8, 1cc <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x20>
     1b4:	cmp	w8, #0x1
     1b8:	b.lt	1d8 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x2c>  // b.tstop
     1bc:	ldr	w8, [x0, #36]
     1c0:	cmp	w8, #0x0
     1c4:	cset	w0, eq  // eq = none
     1c8:	ret
     1cc:	ldrb	w8, [x0, #40]
     1d0:	lsl	w0, w8, #1
     1d4:	ret
     1d8:	mov	w0, wzr
     1dc:	ret

00000000000001e0 <_ZNK4llvm3mca13ResourceState4dumpEv>:
     1e0:	sub	sp, sp, #0x80
     1e4:	stp	x29, x30, [sp, #80]
     1e8:	stp	x22, x21, [sp, #96]
     1ec:	stp	x20, x19, [sp, #112]
     1f0:	add	x29, sp, #0x50
     1f4:	mov	x19, x0
     1f8:	bl	0 <_ZN4llvm4dbgsEv>
     1fc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     200:	add	x1, x1, #0x0
     204:	mov	w2, #0x5                   	// #5
     208:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     20c:	ldr	x8, [x19, #8]
     210:	mov	w21, #0x10                  	// #16
     214:	mov	w22, #0x1                   	// #1
     218:	sub	x1, x29, #0x18
     21c:	stur	w21, [x29, #-8]
     220:	sturh	w22, [x29, #-4]
     224:	stp	x8, xzr, [x29, #-24]
     228:	sturb	w22, [x29, #-2]
     22c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     230:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     234:	add	x1, x1, #0x0
     238:	mov	w2, #0x9                   	// #9
     23c:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     240:	ldr	x8, [x19, #16]
     244:	add	x1, sp, #0x20
     248:	str	w21, [sp, #48]
     24c:	strh	w22, [sp, #52]
     250:	stp	x8, xzr, [sp, #32]
     254:	strb	w22, [sp, #54]
     258:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     25c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     260:	add	x1, x1, #0x0
     264:	mov	w2, #0xa                   	// #10
     268:	mov	w20, #0xa                   	// #10
     26c:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     270:	ldr	x8, [x19, #24]
     274:	add	x1, sp, #0x8
     278:	str	w21, [sp, #24]
     27c:	strh	w22, [sp, #28]
     280:	stp	x8, xzr, [sp, #8]
     284:	strb	w22, [sp, #30]
     288:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     28c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     290:	add	x1, x1, #0x0
     294:	mov	w2, #0xd                   	// #13
     298:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     29c:	ldrsw	x1, [x19, #32]
     2a0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     2a4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2a8:	add	x1, x1, #0x0
     2ac:	mov	w2, #0x11                  	// #17
     2b0:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2b4:	ldr	w1, [x19, #36]
     2b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     2bc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2c0:	add	x1, x1, #0x0
     2c4:	mov	w2, #0xb                   	// #11
     2c8:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2cc:	ldrb	w1, [x19, #40]
     2d0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     2d4:	ldp	x9, x8, [x0, #16]
     2d8:	cmp	x8, x9
     2dc:	b.cs	2f0 <_ZNK4llvm3mca13ResourceState4dumpEv+0x110>  // b.hs, b.nlast
     2e0:	add	x9, x8, #0x1
     2e4:	str	x9, [x0, #24]
     2e8:	strb	w20, [x8]
     2ec:	b	2f8 <_ZNK4llvm3mca13ResourceState4dumpEv+0x118>
     2f0:	mov	w1, #0xa                   	// #10
     2f4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2f8:	ldp	x20, x19, [sp, #112]
     2fc:	ldp	x22, x21, [sp, #96]
     300:	ldp	x29, x30, [sp, #80]
     304:	add	sp, sp, #0x80
     308:	ret

000000000000030c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>:
     30c:	sub	sp, sp, #0x90
     310:	str	d8, [sp, #32]
     314:	stp	x29, x30, [sp, #48]
     318:	stp	x28, x27, [sp, #64]
     31c:	stp	x26, x25, [sp, #80]
     320:	stp	x24, x23, [sp, #96]
     324:	stp	x22, x21, [sp, #112]
     328:	stp	x20, x19, [sp, #128]
     32c:	add	x29, sp, #0x20
     330:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     334:	ldr	x8, [x8]
     338:	add	x20, x0, #0x8
     33c:	mov	x23, x1
     340:	mov	x19, x0
     344:	add	x8, x8, #0x10
     348:	str	x8, [x0]
     34c:	ldr	w8, [x1, #48]
     350:	add	x2, x29, #0x8
     354:	mov	x0, x20
     358:	sub	w1, w8, #0x1
     35c:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     360:	ldr	w8, [x23, #48]
     364:	add	x0, x19, #0x20
     368:	add	x2, x29, #0x8
     36c:	str	x0, [sp, #8]
     370:	sub	w1, w8, #0x1
     374:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     378:	ldr	w8, [x23, #48]
     37c:	add	x21, x19, #0x38
     380:	add	x2, x29, #0x8
     384:	sub	x3, x29, #0x8
     388:	sub	w1, w8, #0x1
     38c:	mov	x0, x21
     390:	str	xzr, [x29, #8]
     394:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     398:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     39c:	ldr	w1, [x23, #48]
     3a0:	ldr	d8, [x8]
     3a4:	add	x8, x19, #0x60
     3a8:	mov	x22, x19
     3ac:	str	xzr, [x29, #8]
     3b0:	str	x8, [x22, #80]!
     3b4:	add	x2, x29, #0x8
     3b8:	mov	x0, x22
     3bc:	str	d8, [x19, #88]
     3c0:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3c4:	ldr	w8, [x23, #48]
     3c8:	add	x9, x19, #0xb0
     3cc:	mov	x25, x19
     3d0:	str	wzr, [x29, #8]
     3d4:	str	x9, [x25, #160]!
     3d8:	sub	w1, w8, #0x1
     3dc:	add	x2, x29, #0x8
     3e0:	mov	x0, x25
     3e4:	str	d8, [x19, #168]
     3e8:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3ec:	mov	x26, x19
     3f0:	str	xzr, [x26, #208]!
     3f4:	ldr	w8, [x26, #8]
     3f8:	mov	x0, x26
     3fc:	orr	w8, w8, #0x1
     400:	str	w8, [x26, #8]
     404:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     408:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     40c:	ldr	q0, [x8]
     410:	str	xzr, [x26, #112]
     414:	str	xzr, [x26, #144]
     418:	mov	x0, x23
     41c:	str	q0, [x26, #128]
     420:	ldr	x1, [x22]
     424:	ldr	w2, [x19, #88]
     428:	bl	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     42c:	ldr	w8, [x23, #48]
     430:	str	x23, [sp, #16]
     434:	cmp	w8, #0x2
     438:	b.cc	614 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x308>  // b.lo, b.ul, b.last
     43c:	mov	w9, #0x1                   	// #1
     440:	ldr	w10, [x19, #88]
     444:	cmp	x9, x10
     448:	b.cs	660 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x354>  // b.hs, b.nlast
     44c:	ldr	x10, [x22]
     450:	ldr	x10, [x10, x9, lsl #3]
     454:	cbz	x10, 640 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x334>
     458:	ldr	w11, [x19, #168]
     45c:	clz	x10, x10
     460:	eor	x10, x10, #0x3f
     464:	cmp	x10, x11
     468:	b.cs	67c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x370>  // b.hs, b.nlast
     46c:	ldr	x11, [x25]
     470:	str	w9, [x11, x10, lsl #2]
     474:	add	x9, x9, #0x1
     478:	cmp	x8, x9
     47c:	b.ne	440 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x134>  // b.any
     480:	ldr	x8, [sp, #16]
     484:	ldr	w24, [x8, #48]
     488:	cmp	w24, #0x2
     48c:	b.cc	614 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x308>  // b.lo, b.ul, b.last
     490:	adrp	x8, 30 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x2c>
     494:	ldr	x8, [x8]
     498:	mov	w25, #0x1                   	// #1
     49c:	add	x8, x8, #0x10
     4a0:	str	x8, [sp]
     4a4:	ldr	w8, [x19, #88]
     4a8:	cmp	x25, x8
     4ac:	b.cs	660 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x354>  // b.hs, b.nlast
     4b0:	ldr	x8, [x22]
     4b4:	ldr	x26, [x8, x25, lsl #3]
     4b8:	cbz	x26, 640 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x334>
     4bc:	ldr	x0, [sp, #16]
     4c0:	clz	x8, x26
     4c4:	mov	w1, w25
     4c8:	eor	x23, x8, #0x3f
     4cc:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     4d0:	mov	x27, x0
     4d4:	mov	w0, #0x30                  	// #48
     4d8:	bl	0 <_Znwm>
     4dc:	mov	x1, x27
     4e0:	mov	w2, w25
     4e4:	mov	x3, x26
     4e8:	mov	x28, x0
     4ec:	bl	d8 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>
     4f0:	ldr	x8, [x20]
     4f4:	ldr	x0, [x8, x23, lsl #3]
     4f8:	str	x28, [x8, x23, lsl #3]
     4fc:	cbz	x0, 504 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1f8>
     500:	bl	0 <_ZdlPv>
     504:	ldr	x8, [x20]
     508:	ldr	x8, [x8, x23, lsl #3]
     50c:	ldrb	w9, [x8, #41]
     510:	cbnz	w9, 524 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x218>
     514:	ldr	x9, [x8, #16]
     518:	sub	x10, x9, #0x1
     51c:	tst	x9, x10
     520:	b.eq	570 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x264>  // b.none
     524:	ldr	x26, [x8, #24]
     528:	mov	w0, #0x20                  	// #32
     52c:	bl	0 <_Znwm>
     530:	ldr	x8, [sp]
     534:	stp	x26, xzr, [x0, #16]
     538:	stp	x8, x26, [x0]
     53c:	ldr	x8, [sp, #8]
     540:	ldr	x9, [x8]
     544:	ldr	x8, [x9, x23, lsl #3]
     548:	str	x0, [x9, x23, lsl #3]
     54c:	cbz	x8, 560 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x254>
     550:	ldr	x9, [x8]
     554:	mov	x0, x8
     558:	ldr	x9, [x9, #8]
     55c:	blr	x9
     560:	add	x25, x25, #0x1
     564:	cmp	x24, x25
     568:	b.ne	4a4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x198>  // b.any
     56c:	b	578 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x26c>
     570:	mov	x0, xzr
     574:	b	53c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x230>
     578:	ldr	x8, [sp, #16]
     57c:	ldr	w8, [x8, #48]
     580:	cmp	w8, #0x2
     584:	b.cc	614 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x308>  // b.lo, b.ul, b.last
     588:	ldr	w9, [x19, #88]
     58c:	mov	w10, #0x1                   	// #1
     590:	mov	w11, #0x1                   	// #1
     594:	cmp	w9, w11
     598:	b.ls	660 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x354>  // b.plast
     59c:	ldr	x12, [x22]
     5a0:	ldr	x13, [x12, w11, uxtw #3]
     5a4:	cbz	x13, 640 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x334>
     5a8:	ldr	x14, [x20]
     5ac:	clz	x12, x13
     5b0:	eor	x12, x12, #0x3f
     5b4:	ldr	x14, [x14, x12, lsl #3]
     5b8:	ldrb	w14, [x14, #41]
     5bc:	cbz	w14, 5fc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2f0>
     5c0:	lsl	x12, x10, x12
     5c4:	subs	x13, x13, x12
     5c8:	b.eq	608 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2fc>  // b.none
     5cc:	neg	x14, x13
     5d0:	ands	x14, x13, x14
     5d4:	b.eq	640 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x334>  // b.none
     5d8:	ldr	x15, [x21]
     5dc:	clz	x16, x14
     5e0:	eor	x16, x16, #0x3f
     5e4:	eor	x13, x14, x13
     5e8:	ldr	x17, [x15, x16, lsl #3]
     5ec:	orr	x17, x17, x12
     5f0:	str	x17, [x15, x16, lsl #3]
     5f4:	cbnz	x13, 5cc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2c0>
     5f8:	b	608 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2fc>
     5fc:	ldr	x12, [x19, #320]
     600:	orr	x12, x12, x13
     604:	str	x12, [x19, #320]
     608:	add	w11, w11, #0x1
     60c:	cmp	w11, w8
     610:	b.ne	594 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x288>  // b.any
     614:	ldr	x8, [x19, #320]
     618:	ldr	d8, [sp, #32]
     61c:	str	x8, [x19, #328]
     620:	ldp	x20, x19, [sp, #128]
     624:	ldp	x22, x21, [sp, #112]
     628:	ldp	x24, x23, [sp, #96]
     62c:	ldp	x26, x25, [sp, #80]
     630:	ldp	x28, x27, [sp, #64]
     634:	ldp	x29, x30, [sp, #48]
     638:	add	sp, sp, #0x90
     63c:	ret
     640:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     644:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     648:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     64c:	add	x0, x0, #0x0
     650:	add	x1, x1, #0x0
     654:	add	x3, x3, #0x0
     658:	mov	w2, #0x64                  	// #100
     65c:	bl	0 <__assert_fail>
     660:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     664:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     668:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     66c:	add	x0, x0, #0x0
     670:	add	x1, x1, #0x0
     674:	add	x3, x3, #0x0
     678:	b	694 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x388>
     67c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     680:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     684:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     688:	add	x0, x0, #0x0
     68c:	add	x1, x1, #0x0
     690:	add	x3, x3, #0x0
     694:	mov	w2, #0x95                  	// #149
     698:	bl	0 <__assert_fail>

000000000000069c <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm>:
     69c:	stp	x29, x30, [sp, #-16]!
     6a0:	mov	x29, sp
     6a4:	cbz	x2, 6f4 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x58>
     6a8:	ldp	x10, x9, [x0, #8]
     6ac:	clz	x8, x2
     6b0:	eor	x8, x8, #0x3f
     6b4:	sub	x9, x9, x10
     6b8:	cmp	x8, x9, asr #3
     6bc:	b.cs	714 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x78>  // b.hs, b.nlast
     6c0:	ldr	x9, [x1]
     6c4:	cbz	x9, 734 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x98>
     6c8:	ldr	x10, [x0, #32]
     6cc:	str	xzr, [x1]
     6d0:	ldr	x0, [x10, x8, lsl #3]
     6d4:	str	x9, [x10, x8, lsl #3]
     6d8:	cbz	x0, 6ec <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x50>
     6dc:	ldr	x8, [x0]
     6e0:	ldr	x1, [x8, #8]
     6e4:	ldp	x29, x30, [sp], #16
     6e8:	br	x1
     6ec:	ldp	x29, x30, [sp], #16
     6f0:	ret
     6f4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     6f8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     6fc:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     700:	add	x0, x0, #0x0
     704:	add	x1, x1, #0x0
     708:	add	x3, x3, #0x0
     70c:	mov	w2, #0x64                  	// #100
     710:	bl	0 <__assert_fail>
     714:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     718:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     71c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     720:	add	x0, x0, #0x0
     724:	add	x1, x1, #0x0
     728:	add	x3, x3, #0x0
     72c:	mov	w2, #0xa1                  	// #161
     730:	bl	0 <__assert_fail>
     734:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     738:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     73c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     740:	add	x0, x0, #0x0
     744:	add	x1, x1, #0x0
     748:	add	x3, x3, #0x0
     74c:	mov	w2, #0xa2                  	// #162
     750:	bl	0 <__assert_fail>

0000000000000754 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>:
     754:	stp	x29, x30, [sp, #-16]!
     758:	mov	x29, sp
     75c:	cbz	x1, 784 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x30>
     760:	ldr	w9, [x0, #168]
     764:	clz	x8, x1
     768:	eor	x8, x8, #0x3f
     76c:	cmp	x8, x9
     770:	b.cs	7a4 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x50>  // b.hs, b.nlast
     774:	ldr	x9, [x0, #160]
     778:	ldr	w0, [x9, x8, lsl #2]
     77c:	ldp	x29, x30, [sp], #16
     780:	ret
     784:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     788:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     78c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     790:	add	x0, x0, #0x0
     794:	add	x1, x1, #0x0
     798:	add	x3, x3, #0x0
     79c:	mov	w2, #0x64                  	// #100
     7a0:	bl	0 <__assert_fail>
     7a4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     7a8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     7ac:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     7b0:	add	x0, x0, #0x0
     7b4:	add	x1, x1, #0x0
     7b8:	add	x3, x3, #0x0
     7bc:	mov	w2, #0x99                  	// #153
     7c0:	bl	0 <__assert_fail>

00000000000007c4 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm>:
     7c4:	stp	x29, x30, [sp, #-16]!
     7c8:	mov	x29, sp
     7cc:	cbz	x1, 808 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x44>
     7d0:	ldr	x8, [x0, #8]
     7d4:	clz	x9, x1
     7d8:	eor	x9, x9, #0x3f
     7dc:	ldr	x8, [x8, x9, lsl #3]
     7e0:	ldrb	w9, [x8, #41]
     7e4:	cbz	w9, 7f0 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x2c>
     7e8:	mov	w0, #0x1                   	// #1
     7ec:	b	800 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x3c>
     7f0:	ldr	d0, [x8, #16]
     7f4:	cnt	v0.8b, v0.8b
     7f8:	uaddlv	h0, v0.8b
     7fc:	fmov	w0, s0
     800:	ldp	x29, x30, [sp], #16
     804:	ret
     808:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     80c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     810:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     814:	add	x0, x0, #0x0
     818:	add	x1, x1, #0x0
     81c:	add	x3, x3, #0x0
     820:	mov	w2, #0x64                  	// #100
     824:	bl	0 <__assert_fail>

0000000000000828 <_ZN4llvm3mca15ResourceManager10selectPipeEm>:
     828:	stp	x29, x30, [sp, #-48]!
     82c:	str	x21, [sp, #16]
     830:	stp	x20, x19, [sp, #32]
     834:	mov	x29, sp
     838:	cbz	x1, 8f8 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xd0>
     83c:	ldp	x9, x10, [x0, #8]
     840:	clz	x8, x1
     844:	eor	x8, x8, #0x3f
     848:	mov	x19, x1
     84c:	sub	x10, x10, x9
     850:	mov	x20, x0
     854:	cmp	x8, x10, asr #3
     858:	b.cs	918 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xf0>  // b.hs, b.nlast
     85c:	ldr	x21, [x9, x8, lsl #3]
     860:	ldrb	w9, [x21, #40]
     864:	cbz	w9, 870 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x48>
     868:	ldr	w9, [x21, #32]
     86c:	cbnz	w9, 8d8 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb0>
     870:	ldr	x1, [x21, #24]
     874:	cbz	x1, 8d8 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb0>
     878:	ldrb	w9, [x21, #41]
     87c:	cbnz	w9, 898 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x70>
     880:	ldr	d0, [x21, #16]
     884:	cnt	v0.8b, v0.8b
     888:	uaddlv	h0, v0.8b
     88c:	fmov	w9, s0
     890:	cmp	x9, #0x1
     894:	b.eq	8c4 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x9c>  // b.none
     898:	ldr	x9, [x20, #32]
     89c:	ldr	x0, [x9, x8, lsl #3]
     8a0:	ldr	x8, [x0]
     8a4:	ldr	x8, [x8, #16]
     8a8:	blr	x8
     8ac:	ldrb	w8, [x21, #41]
     8b0:	mov	x1, x0
     8b4:	cbz	w8, 8c4 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x9c>
     8b8:	mov	x0, x20
     8bc:	bl	828 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
     8c0:	mov	x19, x0
     8c4:	mov	x0, x19
     8c8:	ldp	x20, x19, [sp, #32]
     8cc:	ldr	x21, [sp, #16]
     8d0:	ldp	x29, x30, [sp], #48
     8d4:	ret
     8d8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     8dc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     8e0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     8e4:	add	x0, x0, #0x0
     8e8:	add	x1, x1, #0x0
     8ec:	add	x3, x3, #0x0
     8f0:	mov	w2, #0xb5                  	// #181
     8f4:	bl	0 <__assert_fail>
     8f8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     8fc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     900:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     904:	add	x0, x0, #0x0
     908:	add	x1, x1, #0x0
     90c:	add	x3, x3, #0x0
     910:	mov	w2, #0x64                  	// #100
     914:	bl	0 <__assert_fail>
     918:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     91c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     920:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     924:	add	x0, x0, #0x0
     928:	add	x1, x1, #0x0
     92c:	add	x3, x3, #0x0
     930:	mov	w2, #0xb3                  	// #179
     934:	bl	0 <__assert_fail>

0000000000000938 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>:
     938:	stp	x29, x30, [sp, #-48]!
     93c:	stp	x22, x21, [sp, #16]
     940:	stp	x20, x19, [sp, #32]
     944:	mov	x29, sp
     948:	ldr	x8, [x1]
     94c:	cbz	x8, a44 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x10c>
     950:	ldr	x9, [x0, #8]
     954:	clz	x8, x8
     958:	eor	x21, x8, #0x3f
     95c:	mov	x19, x1
     960:	ldr	x22, [x9, x21, lsl #3]
     964:	ldr	x1, [x1, #8]
     968:	mov	x20, x0
     96c:	ldr	x8, [x22, #24]
     970:	tst	x8, x1
     974:	b.eq	a64 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     978:	ldrb	w9, [x22, #41]
     97c:	eor	x8, x8, x1
     980:	str	x8, [x22, #24]
     984:	cbnz	w9, 9ac <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x74>
     988:	ldr	x8, [x22, #16]
     98c:	sub	x9, x8, #0x1
     990:	tst	x8, x9
     994:	b.eq	9ac <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x74>  // b.none
     998:	ldr	x8, [x20, #32]
     99c:	ldr	x0, [x8, x21, lsl #3]
     9a0:	ldr	x8, [x0]
     9a4:	ldr	x8, [x8, #24]
     9a8:	blr	x8
     9ac:	ldrb	w8, [x22, #40]
     9b0:	cbz	w8, 9bc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x84>
     9b4:	ldr	w8, [x22, #32]
     9b8:	cbnz	w8, 9c4 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x8c>
     9bc:	ldr	x8, [x22, #24]
     9c0:	cbnz	x8, a34 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
     9c4:	ldr	x8, [x19]
     9c8:	ldr	x9, [x20, #328]
     9cc:	ldr	x10, [x20, #56]
     9d0:	eor	x8, x9, x8
     9d4:	str	x8, [x20, #328]
     9d8:	ldr	x21, [x10, x21, lsl #3]
     9dc:	cbz	x21, a34 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
     9e0:	neg	x8, x21
     9e4:	ands	x8, x21, x8
     9e8:	b.eq	a44 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x10c>  // b.none
     9ec:	ldr	x9, [x20, #8]
     9f0:	clz	x8, x8
     9f4:	eor	x8, x8, #0x3f
     9f8:	ldr	x1, [x19]
     9fc:	ldr	x9, [x9, x8, lsl #3]
     a00:	ldr	x10, [x9, #24]
     a04:	tst	x10, x1
     a08:	b.eq	a64 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     a0c:	eor	x10, x10, x1
     a10:	str	x10, [x9, #24]
     a14:	ldr	x9, [x20, #32]
     a18:	ldr	x0, [x9, x8, lsl #3]
     a1c:	ldr	x8, [x0]
     a20:	ldr	x8, [x8, #24]
     a24:	blr	x8
     a28:	sub	x8, x21, #0x1
     a2c:	ands	x21, x8, x21
     a30:	b.ne	9e0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xa8>  // b.any
     a34:	ldp	x20, x19, [sp, #32]
     a38:	ldp	x22, x21, [sp, #16]
     a3c:	ldp	x29, x30, [sp], #48
     a40:	ret
     a44:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a48:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a4c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a50:	add	x0, x0, #0x0
     a54:	add	x1, x1, #0x0
     a58:	add	x3, x3, #0x0
     a5c:	mov	w2, #0x64                  	// #100
     a60:	bl	0 <__assert_fail>
     a64:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a68:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a6c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a70:	add	x0, x0, #0x0
     a74:	add	x1, x1, #0x0
     a78:	add	x3, x3, #0x0
     a7c:	mov	w2, #0xf1                  	// #241
     a80:	bl	0 <__assert_fail>

0000000000000a84 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>:
     a84:	stp	x29, x30, [sp, #-16]!
     a88:	mov	x29, sp
     a8c:	ldr	x8, [x1]
     a90:	cbz	x8, b5c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd8>
     a94:	ldr	x9, [x0, #8]
     a98:	clz	x10, x8
     a9c:	eor	x10, x10, #0x3f
     aa0:	ldr	x11, [x9, x10, lsl #3]
     aa4:	ldrb	w12, [x11, #40]
     aa8:	cbz	w12, ac0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x3c>
     aac:	ldr	w12, [x11, #32]
     ab0:	cbz	w12, ac0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x3c>
     ab4:	ldr	x12, [x11, #24]
     ab8:	mov	w13, wzr
     abc:	b	acc <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x48>
     ac0:	ldr	x12, [x11, #24]
     ac4:	cmp	x12, #0x0
     ac8:	cset	w13, ne  // ne = any
     acc:	ldr	x14, [x1, #8]
     ad0:	tst	x12, x14
     ad4:	b.ne	b3c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb8>  // b.any
     ad8:	eor	x12, x12, x14
     adc:	str	x12, [x11, #24]
     ae0:	tbnz	w13, #0, b34 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb0>
     ae4:	ldr	x11, [x0, #328]
     ae8:	ldr	x12, [x0, #56]
     aec:	eor	x11, x11, x8
     af0:	str	x11, [x0, #328]
     af4:	ldr	x10, [x12, x10, lsl #3]
     af8:	cbz	x10, b34 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb0>
     afc:	neg	x11, x10
     b00:	ands	x11, x10, x11
     b04:	b.eq	b5c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd8>  // b.none
     b08:	clz	x11, x11
     b0c:	eor	x11, x11, #0x3f
     b10:	ldr	x11, [x9, x11, lsl #3]
     b14:	ldr	x12, [x11, #24]
     b18:	tst	x12, x8
     b1c:	b.ne	b3c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb8>  // b.any
     b20:	sub	x13, x10, #0x1
     b24:	eor	x12, x12, x8
     b28:	ands	x10, x13, x10
     b2c:	str	x12, [x11, #24]
     b30:	b.ne	afc <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x78>  // b.any
     b34:	ldp	x29, x30, [sp], #16
     b38:	ret
     b3c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b40:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b44:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b48:	add	x0, x0, #0x0
     b4c:	add	x1, x1, #0x0
     b50:	add	x3, x3, #0x0
     b54:	mov	w2, #0xf6                  	// #246
     b58:	bl	0 <__assert_fail>
     b5c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b60:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b64:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b68:	add	x0, x0, #0x0
     b6c:	add	x1, x1, #0x0
     b70:	add	x3, x3, #0x0
     b74:	mov	w2, #0x64                  	// #100
     b78:	bl	0 <__assert_fail>

0000000000000b7c <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>:
     b7c:	ldr	x8, [x0, #352]
     b80:	tst	x8, x1
     b84:	b.eq	b90 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm+0x14>  // b.none
     b88:	mov	w0, #0x2                   	// #2
     b8c:	ret
     b90:	ldr	x8, [x0, #344]
     b94:	bics	xzr, x1, x8
     b98:	cset	w0, ne  // ne = any
     b9c:	ret

0000000000000ba0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>:
     ba0:	stp	x29, x30, [sp, #-48]!
     ba4:	stp	x22, x21, [sp, #16]
     ba8:	stp	x20, x19, [sp, #32]
     bac:	mov	x29, sp
     bb0:	cbz	x1, c38 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x98>
     bb4:	mov	x19, x1
     bb8:	mov	x20, x0
     bbc:	neg	x8, x19
     bc0:	ands	x22, x19, x8
     bc4:	b.eq	c48 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xa8>  // b.none
     bc8:	ldr	x8, [x20, #8]
     bcc:	clz	x9, x22
     bd0:	eor	x9, x9, #0x3f
     bd4:	ldr	x21, [x8, x9, lsl #3]
     bd8:	ldr	w8, [x21, #32]
     bdc:	cbz	w8, bf4 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x54>
     be0:	cmp	w8, #0x1
     be4:	b.lt	bfc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x5c>  // b.tstop
     be8:	ldr	w8, [x21, #36]
     bec:	cbnz	w8, bfc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x5c>
     bf0:	b	c68 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xc8>
     bf4:	ldrb	w8, [x21, #40]
     bf8:	cbnz	w8, c68 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xc8>
     bfc:	mov	x0, x21
     c00:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c04:	tbnz	w0, #0, c14 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x74>
     c08:	ldr	x8, [x20, #344]
     c0c:	eor	x8, x8, x22
     c10:	str	x8, [x20, #344]
     c14:	ldr	w8, [x21, #32]
     c18:	eor	x19, x22, x19
     c1c:	cbz	w8, c28 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x88>
     c20:	cbnz	x19, bbc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x1c>
     c24:	b	c38 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x98>
     c28:	ldr	x8, [x20, #352]
     c2c:	eor	x8, x8, x22
     c30:	str	x8, [x20, #352]
     c34:	cbnz	x19, bbc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x1c>
     c38:	ldp	x20, x19, [sp, #32]
     c3c:	ldp	x22, x21, [sp, #16]
     c40:	ldp	x29, x30, [sp], #48
     c44:	ret
     c48:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c4c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c50:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c54:	add	x0, x0, #0x0
     c58:	add	x1, x1, #0x0
     c5c:	add	x3, x3, #0x0
     c60:	mov	w2, #0x64                  	// #100
     c64:	bl	0 <__assert_fail>
     c68:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c6c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c70:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c74:	add	x0, x0, #0x0
     c78:	add	x1, x1, #0x0
     c7c:	add	x3, x3, #0x0
     c80:	mov	w2, #0x102                 	// #258
     c84:	bl	0 <__assert_fail>

0000000000000c88 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>:
     c88:	stp	x29, x30, [sp, #-32]!
     c8c:	stp	x20, x19, [sp, #16]
     c90:	mov	x29, sp
     c94:	ldr	x8, [x0, #344]
     c98:	orr	x8, x8, x1
     c9c:	str	x8, [x0, #344]
     ca0:	cbz	x1, cd4 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x4c>
     ca4:	mov	x19, x0
     ca8:	mov	x20, x1
     cac:	neg	x8, x20
     cb0:	ands	x8, x20, x8
     cb4:	b.eq	ce0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x58>  // b.none
     cb8:	ldr	x9, [x19, #8]
     cbc:	clz	x10, x8
     cc0:	eor	x10, x10, #0x3f
     cc4:	eor	x20, x8, x20
     cc8:	ldr	x0, [x9, x10, lsl #3]
     ccc:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cd0:	cbnz	x20, cac <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x24>
     cd4:	ldp	x20, x19, [sp, #16]
     cd8:	ldp	x29, x30, [sp], #32
     cdc:	ret
     ce0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ce4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ce8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cec:	add	x0, x0, #0x0
     cf0:	add	x1, x1, #0x0
     cf4:	add	x3, x3, #0x0
     cf8:	mov	w2, #0x64                  	// #100
     cfc:	bl	0 <__assert_fail>

0000000000000d00 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>:
     d00:	stp	x29, x30, [sp, #-16]!
     d04:	mov	x29, sp
     d08:	ldr	w9, [x1, #184]
     d0c:	cbz	w9, d8c <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x8c>
     d10:	ldr	x10, [x1, #176]
     d14:	add	x11, x9, x9, lsl #1
     d18:	mov	x8, xzr
     d1c:	add	x9, x10, #0x14
     d20:	lsl	x10, x11, #3
     d24:	ldurb	w11, [x9, #-4]
     d28:	cbz	w11, d34 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x34>
     d2c:	mov	w11, wzr
     d30:	b	d38 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x38>
     d34:	ldr	w11, [x9]
     d38:	ldur	x12, [x9, #-20]
     d3c:	cbz	x12, db4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xb4>
     d40:	ldr	x13, [x0, #8]
     d44:	clz	x14, x12
     d48:	eor	x14, x14, #0x3f
     d4c:	ldr	x13, [x13, x14, lsl #3]
     d50:	ldrb	w14, [x13, #40]
     d54:	cbz	w14, d60 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x60>
     d58:	ldr	w14, [x13, #32]
     d5c:	cbnz	w14, d78 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x78>
     d60:	ldr	d0, [x13, #24]
     d64:	cnt	v0.8b, v0.8b
     d68:	uaddlv	h0, v0.8b
     d6c:	fmov	w13, s0
     d70:	cmp	w11, w13
     d74:	b.ls	d7c <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x7c>  // b.plast
     d78:	orr	x8, x12, x8
     d7c:	subs	x10, x10, #0x18
     d80:	add	x9, x9, #0x18
     d84:	b.ne	d24 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x24>  // b.any
     d88:	b	d90 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x90>
     d8c:	mov	x8, xzr
     d90:	ldr	x9, [x0, #320]
     d94:	ands	x8, x9, x8
     d98:	b.ne	da8 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xa8>  // b.any
     d9c:	ldr	x8, [x1, #304]
     da0:	ldr	x9, [x0, #336]
     da4:	and	x8, x9, x8
     da8:	mov	x0, x8
     dac:	ldp	x29, x30, [sp], #16
     db0:	ret
     db4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     db8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     dbc:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     dc0:	add	x0, x0, #0x0
     dc4:	add	x1, x1, #0x0
     dc8:	add	x3, x3, #0x0
     dcc:	mov	w2, #0x64                  	// #100
     dd0:	bl	0 <__assert_fail>

0000000000000dd4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
     dd4:	sub	sp, sp, #0x70
     dd8:	stp	x29, x30, [sp, #48]
     ddc:	stp	x24, x23, [sp, #64]
     de0:	stp	x22, x21, [sp, #80]
     de4:	stp	x20, x19, [sp, #96]
     de8:	add	x29, sp, #0x30
     dec:	ldr	w8, [x1, #184]
     df0:	cbz	w8, ef0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x11c>
     df4:	ldr	x9, [x1, #176]
     df8:	add	x8, x8, x8, lsl #1
     dfc:	mov	x19, x2
     e00:	mov	x20, x0
     e04:	add	x21, x0, #0xd0
     e08:	lsl	x22, x8, #3
     e0c:	add	x23, x9, #0x8
     e10:	ldp	w8, w9, [x23]
     e14:	cmp	w9, w8
     e18:	b.ne	e2c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x58>  // b.any
     e1c:	ldur	x1, [x23, #-8]
     e20:	mov	x0, x20
     e24:	bl	f48 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
     e28:	b	ee4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x110>
     e2c:	cbnz	w8, f08 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x134>
     e30:	ldrb	w8, [x23, #8]
     e34:	cbz	w8, e84 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xb0>
     e38:	ldur	x1, [x23, #-8]
     e3c:	sub	x8, x1, #0x1
     e40:	tst	x1, x8
     e44:	b.eq	f28 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x154>  // b.none
     e48:	mov	x0, x20
     e4c:	bl	fc8 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>
     e50:	ldur	x8, [x23, #-8]
     e54:	ldp	w10, w9, [x23]
     e58:	mov	x1, sp
     e5c:	mov	x0, x21
     e60:	str	x8, [sp]
     e64:	ldur	x8, [x23, #-8]
     e68:	sub	w24, w9, w10
     e6c:	str	x8, [sp, #8]
     e70:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     e74:	ldr	w8, [x0, #16]
     e78:	add	w8, w24, w8
     e7c:	str	w8, [x0, #16]
     e80:	b	ee4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x110>
     e84:	ldur	x1, [x23, #-8]
     e88:	mov	x0, x20
     e8c:	bl	828 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
     e90:	stp	x0, x1, [x29, #-16]
     e94:	sub	x1, x29, #0x10
     e98:	mov	x0, x20
     e9c:	bl	938 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>
     ea0:	ldp	w9, w8, [x23]
     ea4:	sub	x1, x29, #0x10
     ea8:	mov	x0, x21
     eac:	sub	w24, w8, w9
     eb0:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     eb4:	ldr	w8, [x0, #16]
     eb8:	mov	x1, sp
     ebc:	add	w8, w24, w8
     ec0:	str	w8, [x0, #16]
     ec4:	ldp	w9, w8, [x23]
     ec8:	ldur	q0, [x29, #-16]
     ecc:	mov	x0, x19
     ed0:	sub	w8, w8, w9
     ed4:	orr	x8, x8, #0x100000000
     ed8:	str	q0, [sp]
     edc:	str	x8, [sp, #16]
     ee0:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ee4:	subs	x22, x22, #0x18
     ee8:	add	x23, x23, #0x18
     eec:	b.ne	e10 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3c>  // b.any
     ef0:	ldp	x20, x19, [sp, #96]
     ef4:	ldp	x22, x21, [sp, #80]
     ef8:	ldp	x24, x23, [sp, #64]
     efc:	ldp	x29, x30, [sp, #48]
     f00:	add	sp, sp, #0x70
     f04:	ret
     f08:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f0c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f10:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f14:	add	x0, x0, #0x0
     f18:	add	x1, x1, #0x0
     f1c:	add	x3, x3, #0x0
     f20:	mov	w2, #0x133                 	// #307
     f24:	bl	0 <__assert_fail>
     f28:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f2c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f30:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f34:	add	x0, x0, #0x0
     f38:	add	x1, x1, #0x0
     f3c:	add	x3, x3, #0x0
     f40:	mov	w2, #0x13b                 	// #315
     f44:	bl	0 <__assert_fail>

0000000000000f48 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>:
     f48:	stp	x29, x30, [sp, #-16]!
     f4c:	mov	x29, sp
     f50:	cbz	x1, fa8 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x60>
     f54:	ldr	x9, [x0, #8]
     f58:	clz	x8, x1
     f5c:	eor	x8, x8, #0x3f
     f60:	ldr	x9, [x9, x8, lsl #3]
     f64:	ldrb	w10, [x9, #41]
     f68:	strb	wzr, [x9, #40]
     f6c:	cbz	w10, f84 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x3c>
     f70:	ldr	x10, [x0, #336]
     f74:	mov	w11, #0x1                   	// #1
     f78:	lsl	x11, x11, x8
     f7c:	eor	x10, x10, x11
     f80:	str	x10, [x0, #336]
     f84:	ldr	w9, [x9, #32]
     f88:	cbnz	w9, fa0 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x58>
     f8c:	ldr	x9, [x0, #352]
     f90:	mov	w10, #0x1                   	// #1
     f94:	lsl	x8, x10, x8
     f98:	eor	x8, x9, x8
     f9c:	str	x8, [x0, #352]
     fa0:	ldp	x29, x30, [sp], #16
     fa4:	ret
     fa8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fac:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fb0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fb4:	add	x0, x0, #0x0
     fb8:	add	x1, x1, #0x0
     fbc:	add	x3, x3, #0x0
     fc0:	mov	w2, #0x64                  	// #100
     fc4:	bl	0 <__assert_fail>

0000000000000fc8 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>:
     fc8:	stp	x29, x30, [sp, #-16]!
     fcc:	mov	x29, sp
     fd0:	cbz	x1, 1034 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x6c>
     fd4:	ldr	x9, [x0, #8]
     fd8:	clz	x8, x1
     fdc:	eor	x8, x8, #0x3f
     fe0:	ldr	x9, [x9, x8, lsl #3]
     fe4:	ldrb	w10, [x9, #41]
     fe8:	cbz	w10, 1014 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x4c>
     fec:	ldrb	w10, [x9, #40]
     ff0:	cbnz	w10, 1014 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x4c>
     ff4:	mov	w10, #0x1                   	// #1
     ff8:	strb	w10, [x9, #40]
     ffc:	ldr	x9, [x0, #336]
    1000:	lsl	x8, x10, x8
    1004:	eor	x8, x9, x8
    1008:	str	x8, [x0, #336]
    100c:	ldp	x29, x30, [sp], #16
    1010:	ret
    1014:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1018:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    101c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1020:	add	x0, x0, #0x0
    1024:	add	x1, x1, #0x0
    1028:	add	x3, x3, #0x0
    102c:	mov	w2, #0x15b                 	// #347
    1030:	bl	0 <__assert_fail>
    1034:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1038:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    103c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1040:	add	x0, x0, #0x0
    1044:	add	x1, x1, #0x0
    1048:	add	x3, x3, #0x0
    104c:	mov	w2, #0x64                  	// #100
    1050:	bl	0 <__assert_fail>

0000000000001054 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>:
    1054:	sub	sp, sp, #0x90
    1058:	stp	x29, x30, [sp, #64]
    105c:	str	x25, [sp, #80]
    1060:	stp	x24, x23, [sp, #96]
    1064:	stp	x22, x21, [sp, #112]
    1068:	stp	x20, x19, [sp, #128]
    106c:	add	x29, sp, #0x40
    1070:	ldr	w8, [x0, #216]
    1074:	mov	x20, x1
    1078:	mov	x21, x0
    107c:	add	x19, x0, #0xd0
    1080:	cmp	w8, #0x1
    1084:	b.hi	109c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x48>  // b.pmore
    1088:	cbz	w8, 10e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x90>
    108c:	add	x9, x19, #0x10
    1090:	add	x10, x19, #0x70
    1094:	mov	w11, #0x4                   	// #4
    1098:	b	10f4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xa0>
    109c:	tbnz	w8, #0, 10ac <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x58>
    10a0:	ldr	x1, [x19, #16]
    10a4:	ldr	w8, [x19, #24]
    10a8:	b	10b4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x60>
    10ac:	add	x1, x19, #0x10
    10b0:	mov	w8, #0x4                   	// #4
    10b4:	mov	w9, #0x18                  	// #24
    10b8:	madd	x2, x8, x9, x1
    10bc:	add	x0, sp, #0x20
    10c0:	mov	x3, x19
    10c4:	mov	w4, wzr
    10c8:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10cc:	ldr	w8, [x19, #8]
    10d0:	tbz	w8, #0, 110c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xb8>
    10d4:	add	x8, x19, #0x10
    10d8:	add	x23, x19, #0x70
    10dc:	mov	w9, #0x4                   	// #4
    10e0:	b	111c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xc8>
    10e4:	ldr	x9, [x19, #16]
    10e8:	ldr	w11, [x19, #24]
    10ec:	mov	w10, #0x18                  	// #24
    10f0:	madd	x10, x11, x10, x9
    10f4:	ldr	x12, [x19]
    10f8:	mov	w13, #0x18                  	// #24
    10fc:	madd	x9, x11, x13, x9
    1100:	stp	x10, x9, [sp, #48]
    1104:	stp	x19, x12, [sp, #32]
    1108:	tbnz	w8, #0, 10d4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x80>
    110c:	ldr	x8, [x19, #16]
    1110:	ldr	w9, [x19, #24]
    1114:	mov	w10, #0x18                  	// #24
    1118:	madd	x23, x9, x10, x8
    111c:	ldr	x24, [x19]
    1120:	mov	w10, #0x18                  	// #24
    1124:	madd	x25, x9, x10, x8
    1128:	add	x0, sp, #0x20
    112c:	mov	x1, sp
    1130:	stp	x19, x24, [sp]
    1134:	stp	x23, x25, [sp, #16]
    1138:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    113c:	tbz	w0, #0, 11d0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x17c>
    1140:	ldp	x8, x9, [sp, #32]
    1144:	ldr	x8, [x8]
    1148:	cmp	x8, x9
    114c:	b.ne	1214 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1c0>  // b.any
    1150:	ldr	x22, [sp, #48]
    1154:	ldr	w8, [x22, #16]
    1158:	cbz	w8, 1168 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x114>
    115c:	subs	w8, w8, #0x1
    1160:	str	w8, [x22, #16]
    1164:	b.ne	11b8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x164>  // b.any
    1168:	ldr	x1, [x22]
    116c:	fmov	d0, x1
    1170:	cnt	v0.8b, v0.8b
    1174:	uaddlv	h0, v0.8b
    1178:	fmov	w8, s0
    117c:	cmp	x8, #0x1
    1180:	b.ne	1194 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x140>  // b.any
    1184:	mov	x0, x21
    1188:	mov	x1, x22
    118c:	bl	a84 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>
    1190:	ldr	x1, [x22]
    1194:	mov	x0, x21
    1198:	bl	f48 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    119c:	mov	x0, x20
    11a0:	mov	x1, x22
    11a4:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    11a8:	ldp	x8, x9, [sp, #32]
    11ac:	ldr	x8, [x8]
    11b0:	cmp	x8, x9
    11b4:	b.ne	1234 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1e0>  // b.any
    11b8:	ldr	x8, [sp, #48]
    11bc:	add	x0, sp, #0x20
    11c0:	add	x8, x8, #0x18
    11c4:	str	x8, [sp, #48]
    11c8:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    11cc:	b	1128 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xd4>
    11d0:	ldr	w8, [x20, #8]
    11d4:	cbz	w8, 11f8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1a4>
    11d8:	ldr	x20, [x20]
    11dc:	lsl	x21, x8, #4
    11e0:	mov	x0, x19
    11e4:	mov	x1, x20
    11e8:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    11ec:	subs	x21, x21, #0x10
    11f0:	add	x20, x20, #0x10
    11f4:	b.ne	11e0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x18c>  // b.any
    11f8:	ldp	x20, x19, [sp, #128]
    11fc:	ldp	x22, x21, [sp, #112]
    1200:	ldp	x24, x23, [sp, #96]
    1204:	ldr	x25, [sp, #80]
    1208:	ldp	x29, x30, [sp, #64]
    120c:	add	sp, sp, #0x90
    1210:	ret
    1214:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1218:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    121c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1220:	add	x0, x0, #0x0
    1224:	add	x1, x1, #0x0
    1228:	add	x3, x3, #0x0
    122c:	mov	w2, #0x4b3                 	// #1203
    1230:	bl	0 <__assert_fail>
    1234:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1238:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    123c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1240:	add	x0, x0, #0x0
    1244:	add	x1, x1, #0x0
    1248:	add	x3, x3, #0x0
    124c:	mov	w2, #0x4cf                 	// #1231
    1250:	bl	0 <__assert_fail>

0000000000001254 <_ZN4llvm3mca16ResourceStrategyD1Ev>:
    1254:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	lsr	x8, x1, #60
  14:	cbnz	x8, 60 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_+0x60>
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	stp	xzr, xzr, [x0]
  24:	str	xzr, [x0, #16]
  28:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_>
  2c:	add	x21, x0, x20, lsl #3
  30:	stp	x0, x0, [x19]
  34:	str	x21, [x19, #16]
  38:	cbz	x20, 4c <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_+0x4c>
  3c:	lsl	x2, x20, #3
  40:	mov	w1, wzr
  44:	bl	0 <memset>
  48:	mov	x0, x21
  4c:	str	x0, [x19, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_>
  64:	add	x0, x0, #0x0
  68:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	lsr	x8, x1, #60
  14:	cbnz	x8, 60 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_+0x60>
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	stp	xzr, xzr, [x0]
  24:	str	xzr, [x0, #16]
  28:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_>
  2c:	add	x21, x0, x20, lsl #3
  30:	stp	x0, x0, [x19]
  34:	str	x21, [x19, #16]
  38:	cbz	x20, 4c <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_+0x4c>
  3c:	lsl	x2, x20, #3
  40:	mov	w1, wzr
  44:	bl	0 <memset>
  48:	mov	x0, x21
  4c:	str	x0, [x19, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EEC2EmRKS7_>
  64:	add	x0, x0, #0x0
  68:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorImSaImEEC2EmRKmRKS0_:

0000000000000000 <_ZNSt6vectorImSaImEEC2EmRKmRKS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	lsr	x8, x1, #60
  14:	cbnz	x8, 64 <_ZNSt6vectorImSaImEEC2EmRKmRKS0_+0x64>
  18:	mov	x21, x2
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	stp	xzr, xzr, [x0]
  28:	str	xzr, [x0, #16]
  2c:	bl	0 <_ZNSt6vectorImSaImEEC2EmRKmRKS0_>
  30:	add	x8, x0, x20, lsl #3
  34:	stp	x0, x0, [x19]
  38:	str	x8, [x19, #16]
  3c:	cbz	x20, 50 <_ZNSt6vectorImSaImEEC2EmRKmRKS0_+0x50>
  40:	ldr	x8, [x21]
  44:	subs	x20, x20, #0x1
  48:	str	x8, [x0], #8
  4c:	b.ne	44 <_ZNSt6vectorImSaImEEC2EmRKmRKS0_+0x44>  // b.any
  50:	str	x0, [x19, #8]
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	adrp	x0, 0 <_ZNSt6vectorImSaImEEC2EmRKmRKS0_>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	ldr	w8, [x0, #48]
  14:	cmp	w8, w1
  18:	b.ls	50 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x50>  // b.plast
  1c:	ldr	x8, [x0, #32]
  20:	mov	w9, w1
  24:	add	x0, x8, x9, lsl #5
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  34:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  38:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x154                 	// #340
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  54:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  58:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x156                 	// #342
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca13ResourceState13reserveBufferEv:

0000000000000000 <_ZN4llvm3mca13ResourceState13reserveBufferEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #32]
   c:	cmp	w8, #0x1
  10:	b.lt	34 <_ZN4llvm3mca13ResourceState13reserveBufferEv+0x34>  // b.tstop
  14:	ldr	w9, [x0, #36]
  18:	sub	w9, w9, #0x1
  1c:	cmp	w9, w8
  20:	str	w9, [x0, #36]
  24:	b.hi	40 <_ZN4llvm3mca13ResourceState13reserveBufferEv+0x40>  // b.pmore
  28:	cmp	w9, #0x0
  2c:	cset	w0, ne  // ne = any
  30:	b	38 <_ZN4llvm3mca13ResourceState13reserveBufferEv+0x38>
  34:	mov	w0, #0x1                   	// #1
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm3mca13ResourceState13reserveBufferEv>
  44:	adrp	x1, 0 <_ZN4llvm3mca13ResourceState13reserveBufferEv>
  48:	adrp	x3, 0 <_ZN4llvm3mca13ResourceState13reserveBufferEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca13ResourceState13releaseBufferEv:

0000000000000000 <_ZN4llvm3mca13ResourceState13releaseBufferEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #32]
   c:	cmp	w8, #0x1
  10:	b.lt	28 <_ZN4llvm3mca13ResourceState13releaseBufferEv+0x28>  // b.tstop
  14:	ldr	w9, [x0, #36]
  18:	add	w9, w9, #0x1
  1c:	cmp	w9, w8
  20:	str	w9, [x0, #36]
  24:	b.hi	30 <_ZN4llvm3mca13ResourceState13releaseBufferEv+0x30>  // b.pmore
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZN4llvm3mca13ResourceState13releaseBufferEv>
  34:	adrp	x1, 0 <_ZN4llvm3mca13ResourceState13releaseBufferEv>
  38:	adrp	x3, 0 <_ZN4llvm3mca13ResourceState13releaseBufferEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x11d                 	// #285
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	6c <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x6c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20, #16]
  28:	ldr	q0, [x20]
  2c:	mov	w11, #0x18                  	// #24
  30:	umaddl	x8, w8, w11, x9
  34:	str	x10, [x8, #16]
  38:	str	q0, [x8]
  3c:	ldp	w8, w9, [x19, #8]
  40:	cmp	w8, w9
  44:	b.cs	80 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x80>  // b.hs, b.nlast
  48:	ldr	x9, [x19]
  4c:	add	x8, x8, #0x1
  50:	str	w8, [x19, #8]
  54:	ldp	x20, x19, [sp, #16]
  58:	mov	w10, #0x18                  	// #24
  5c:	madd	x9, x8, x10, x9
  60:	sub	x0, x9, #0x18
  64:	ldp	x29, x30, [sp], #32
  68:	ret
  6c:	mov	x0, x19
  70:	mov	x1, xzr
  74:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  78:	ldr	w8, [x19, #8]
  7c:	b	20 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x20>
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEneERKNS0_IS2_jS4_S7_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_>
  58:	ldr	w8, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE9push_backERKS2_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x2, x29, #0x18
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_>
  18:	tbz	w0, #0, 54 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_+0x54>
  1c:	ldr	x8, [x29, #24]
  20:	mov	x9, #0xfffffffffffffffe    	// #-2
  24:	dup	v0.2d, x9
  28:	str	q0, [x8]
  2c:	ldr	w8, [x19, #8]
  30:	cmp	w8, #0x1
  34:	b.ls	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_+0x64>  // b.plast
  38:	ldr	w9, [x19, #12]
  3c:	sub	w8, w8, #0x2
  40:	str	w8, [x19, #8]
  44:	mov	w0, #0x1                   	// #1
  48:	add	w8, w9, #0x1
  4c:	str	w8, [x19, #12]
  50:	b	58 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_+0x58>
  54:	mov	w0, wzr
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_>
  68:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_>
  6c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E5eraseERKS3_>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x441                 	// #1089
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca16ResourceStrategy4usedEm:

0000000000000000 <_ZN4llvm3mca16ResourceStrategy4usedEm>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD0Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	add	x8, x8, #0x10
  1c:	str	x8, [x0], #208
  20:	bl	0 <_ZN4llvm3mca15ResourceManagerD2Ev>
  24:	ldr	x8, [x19, #208]
  28:	ldr	x0, [x19, #160]
  2c:	add	x9, x19, #0xb0
  30:	add	x8, x8, #0x1
  34:	cmp	x0, x9
  38:	str	x8, [x19, #208]
  3c:	b.eq	44 <_ZN4llvm3mca15ResourceManagerD2Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19, #80]
  48:	add	x8, x19, #0x60
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN4llvm3mca15ResourceManagerD2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x0, [x19, #56]
  5c:	cbz	x0, 64 <_ZN4llvm3mca15ResourceManagerD2Ev+0x64>
  60:	bl	0 <_ZdlPv>
  64:	add	x0, x19, #0x20
  68:	bl	0 <_ZN4llvm3mca15ResourceManagerD2Ev>
  6c:	add	x0, x19, #0x8
  70:	ldr	x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	b	0 <_ZN4llvm3mca15ResourceManagerD2Ev>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt12_Vector_baseImSaImEE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseImSaImEE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseImSaImEE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseImSaImEE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6assignEmRKm:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6assignEmRKm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x21, x1
  20:	cmp	x8, x1
  24:	str	wzr, [x0, #8]
  28:	b.cs	44 <_ZN4llvm15SmallVectorImplImE6assignEmRKm+0x44>  // b.hs, b.nlast
  2c:	add	x1, x20, #0x10
  30:	mov	w3, #0x8                   	// #8
  34:	mov	x0, x20
  38:	mov	x2, x21
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x20, #12]
  44:	cmp	x8, x21
  48:	b.cc	80 <_ZN4llvm15SmallVectorImplImE6assignEmRKm+0x80>  // b.lo, b.ul, b.last
  4c:	ands	x10, x21, #0xffffffff
  50:	str	w21, [x20, #8]
  54:	b.eq	70 <_ZN4llvm15SmallVectorImplImE6assignEmRKm+0x70>  // b.none
  58:	ldr	x8, [x20]
  5c:	ldr	x9, [x19]
  60:	lsl	x10, x10, #3
  64:	subs	x10, x10, #0x8
  68:	str	x9, [x8], #8
  6c:	b.ne	64 <_ZN4llvm15SmallVectorImplImE6assignEmRKm+0x64>  // b.any
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6assignEmRKm>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6assignEmRKm>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6assignEmRKm>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6assignEmRKj:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x21, x1
  20:	cmp	x8, x1
  24:	str	wzr, [x0, #8]
  28:	b.cs	44 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x44>  // b.hs, b.nlast
  2c:	add	x1, x20, #0x10
  30:	mov	w3, #0x4                   	// #4
  34:	mov	x0, x20
  38:	mov	x2, x21
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x20, #12]
  44:	cmp	x8, x21
  48:	b.cc	80 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x80>  // b.lo, b.ul, b.last
  4c:	ands	x10, x21, #0xffffffff
  50:	str	w21, [x20, #8]
  54:	b.eq	70 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x70>  // b.none
  58:	ldr	x8, [x20]
  5c:	ldr	w9, [x19]
  60:	lsl	x10, x10, #2
  64:	subs	x10, x10, #0x4
  68:	str	w9, [x8], #4
  6c:	b.ne	64 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x64>  // b.any
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	cmp	w1, #0x4
  10:	b.ls	38 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj+0x38>  // b.plast
  14:	mov	w19, w1
  18:	lsl	x8, x19, #1
  1c:	add	x8, x8, w1, uxtw
  20:	lsl	x0, x8, #3
  24:	bl	0 <_Znwm>
  28:	mov	x1, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj>
  3c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj>
  40:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x47d                 	// #1149
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #8]
   c:	and	w8, w9, #0x1
  10:	stp	w8, wzr, [x0, #8]
  14:	tbnz	w9, #0, 24 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x24>
  18:	ldr	w9, [x0, #24]
  1c:	sub	w10, w9, #0x1
  20:	b	2c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x2c>
  24:	mov	w10, #0x3                   	// #3
  28:	mov	w9, #0x4                   	// #4
  2c:	tst	w10, w9
  30:	b.ne	7c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x7c>  // b.any
  34:	cbnz	w8, 48 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x48>
  38:	ldr	x8, [x0, #16]
  3c:	ldr	w9, [x0, #24]
  40:	cbnz	x9, 54 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x54>
  44:	b	74 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x74>
  48:	add	x8, x0, #0x10
  4c:	mov	w9, #0x4                   	// #4
  50:	cbz	x9, 74 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x74>
  54:	add	x9, x9, x9, lsl #1
  58:	lsl	x9, x9, #3
  5c:	mov	x10, #0xffffffffffffffff    	// #-1
  60:	add	x11, x8, #0x18
  64:	subs	x9, x9, #0x18
  68:	stp	x10, x10, [x8]
  6c:	mov	x8, x11
  70:	b.ne	60 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x60>  // b.any
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  80:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  84:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x15c                 	// #348
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructERKS3_>
  38:	ldr	q0, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #16]
  44:	str	q0, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #8]
  14:	mov	x19, x2
  18:	mov	x20, x1
  1c:	tbnz	w8, #0, 30 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x30>
  20:	ldr	w22, [x0, #24]
  24:	cbz	w22, a0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xa0>
  28:	ldr	x21, [x0, #16]
  2c:	b	38 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x38>
  30:	add	x21, x0, #0x10
  34:	mov	w22, #0x4                   	// #4
  38:	ldp	x9, x8, [x20]
  3c:	and	x10, x8, x9
  40:	cmn	x10, #0x1
  44:	b.eq	118 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x118>  // b.none
  48:	cmn	x9, #0x2
  4c:	b.ne	58 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x58>  // b.any
  50:	cmn	x8, #0x2
  54:	b.eq	118 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x118>  // b.none
  58:	mov	x0, x20
  5c:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  60:	sub	w9, w22, #0x1
  64:	mov	w10, #0x18                  	// #24
  68:	and	w11, w0, w9
  6c:	umaddl	x8, w11, w10, x21
  70:	ldp	x14, x16, [x8]
  74:	ldp	x12, x13, [x20]
  78:	cmp	x12, x14
  7c:	b.ne	ac <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xac>  // b.any
  80:	cmp	x13, x16
  84:	b.ne	ac <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xac>  // b.any
  88:	mov	w0, #0x1                   	// #1
  8c:	str	x8, [x19]
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	mov	x8, xzr
  a4:	mov	w0, wzr
  a8:	b	8c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x8c>
  ac:	mov	x15, xzr
  b0:	mov	w18, #0x1                   	// #1
  b4:	mov	x17, #0xfffffffffffffffe    	// #-2
  b8:	and	x0, x16, x14
  bc:	cmn	x0, #0x1
  c0:	b.eq	108 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x108>  // b.none
  c4:	cmn	x16, #0x2
  c8:	add	w11, w11, w18
  cc:	ccmp	x14, x17, #0x0, eq  // eq = none
  d0:	and	w11, w11, w9
  d4:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  d8:	csel	x15, x15, x8, ne  // ne = any
  dc:	umaddl	x8, w11, w10, x21
  e0:	ldp	x14, x16, [x8]
  e4:	add	w1, w18, #0x1
  e8:	mov	w18, w1
  ec:	cmp	x12, x14
  f0:	b.ne	b8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>  // b.any
  f4:	cmp	x13, x16
  f8:	mov	w0, #0x1                   	// #1
  fc:	mov	w18, w1
 100:	b.eq	8c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x8c>  // b.none
 104:	b	b8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>
 108:	cmp	x15, #0x0
 10c:	mov	w0, wzr
 110:	csel	x8, x8, x15, eq  // eq = none
 114:	b	8c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x8c>
 118:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 11c:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 120:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x252                 	// #594
 134:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapInfoISt4pairImmEE12getHashValueERKS2_:

0000000000000000 <_ZN4llvm12DenseMapInfoISt4pairImmEE12getHashValueERKS2_>:
   0:	ldr	x8, [x0]
   4:	ldr	w9, [x0, #8]
   8:	mov	x10, #0x2500000000          	// #158913789952
   c:	mul	x8, x8, x10
  10:	mov	w10, #0x25                  	// #37
  14:	mul	w9, w9, w10
  18:	mov	x10, #0xffffffffffffffff    	// #-1
  1c:	orr	x8, x9, x8
  20:	eor	x9, x10, x9, lsl #32
  24:	add	x8, x8, x9
  28:	eor	x8, x8, x8, lsr #22
  2c:	eor	x9, x10, x8, lsl #13
  30:	add	x8, x8, x9
  34:	eor	x8, x8, x8, lsr #8
  38:	add	x8, x8, x8, lsl #3
  3c:	eor	x8, x8, x8, lsr #15
  40:	eor	x9, x10, x8, lsl #27
  44:	add	x8, x8, x9
  48:	lsr	x9, x8, #31
  4c:	eor	w0, w9, w8
  50:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0]
  14:	ldr	w9, [x0, #8]
  18:	mov	x20, x3
  1c:	mov	x21, x2
  20:	add	x8, x8, #0x1
  24:	mov	x19, x0
  28:	str	x8, [x0]
  2c:	lsr	w8, w9, #1
  30:	tbnz	w9, #0, 3c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x3c>
  34:	ldr	w1, [x19, #24]
  38:	b	40 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x40>
  3c:	mov	w1, #0x4                   	// #4
  40:	lsl	w9, w8, #2
  44:	add	w9, w9, #0x4
  48:	add	w10, w1, w1, lsl #1
  4c:	cmp	w9, w10
  50:	b.cs	a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xa8>  // b.hs, b.nlast
  54:	ldr	w9, [x19, #12]
  58:	mvn	w8, w8
  5c:	add	w8, w1, w8
  60:	sub	w8, w8, w9
  64:	cmp	w8, w1, lsr #3
  68:	b.ls	ac <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xac>  // b.plast
  6c:	cbz	x20, cc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xcc>
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  78:	ldp	x8, x9, [x20]
  7c:	and	x8, x9, x8
  80:	cmn	x8, #0x1
  84:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x94>  // b.none
  88:	ldr	w8, [x19, #12]
  8c:	sub	w8, w8, #0x1
  90:	str	w8, [x19, #12]
  94:	mov	x0, x20
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldr	x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret
  a8:	lsl	w1, w1, #1
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  b4:	add	x2, x29, #0x18
  b8:	mov	x0, x19
  bc:	mov	x1, x21
  c0:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c4:	ldr	x20, [x29, #24]
  c8:	cbnz	x20, 70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x70>
  cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  d0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  d4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x22f                 	// #559
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E19incrementNumEntriesEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E19incrementNumEntriesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	lsr	w9, w8, #1
  10:	adds	w9, w9, #0x1
  14:	b.mi	28 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E19incrementNumEntriesEv+0x28>  // b.first
  18:	bfi	w8, w9, #1, #31
  1c:	str	w8, [x0, #8]
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E19incrementNumEntriesEv>
  2c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E19incrementNumEntriesEv>
  30:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E19incrementNumEntriesEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x441                 	// #1089
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	str	x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	cmp	w1, #0x5
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x4
  64:	b.hi	128 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x128>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	134 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x134>
  74:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  78:	mov	x8, xzr
  7c:	mov	x9, sp
  80:	movk	x10, #0xaaab
  84:	mov	x20, sp
  88:	add	x11, x19, x8
  8c:	ldp	x12, x11, [x11, #16]
  90:	and	x13, x11, x12
  94:	cmn	x13, #0x1
  98:	b.eq	d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xd8>  // b.none
  9c:	cmn	x12, #0x2
  a0:	b.ne	ac <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xac>  // b.any
  a4:	cmn	x11, #0x2
  a8:	b.eq	d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xd8>  // b.none
  ac:	sub	x11, x20, x9
  b0:	asr	x11, x11, #3
  b4:	mul	x11, x11, x10
  b8:	cmp	x11, #0x4
  bc:	b.cs	160 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x160>  // b.hs, b.nlast
  c0:	add	x11, x19, x8
  c4:	ldr	q0, [x11, #16]
  c8:	str	q0, [x20]
  cc:	ldr	w11, [x11, #32]
  d0:	str	w11, [x20, #16]
  d4:	add	x20, x20, #0x18
  d8:	add	x8, x8, #0x18
  dc:	cmp	x8, #0x60
  e0:	b.ne	88 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x88>  // b.any
  e4:	cmp	w1, #0x4
  e8:	b.ls	104 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x104>  // b.plast
  ec:	ldr	w8, [x19, #8]
  f0:	mov	x0, x19
  f4:	and	w8, w8, #0xfffffffe
  f8:	str	w8, [x19, #8]
  fc:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 100:	stp	x0, x1, [x19, #16]
 104:	mov	x1, sp
 108:	mov	x0, x19
 10c:	mov	x2, x20
 110:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 114:	ldp	x20, x19, [sp, #128]
 118:	ldr	x21, [sp, #112]
 11c:	ldp	x29, x30, [sp, #96]
 120:	add	sp, sp, #0x90
 124:	ret
 128:	mov	x0, x19
 12c:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 130:	stp	x0, x1, [x19, #16]
 134:	mov	w8, #0x18                  	// #24
 138:	madd	x2, x21, x8, x20
 13c:	mov	x0, x19
 140:	mov	x1, x20
 144:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 148:	mov	x0, x20
 14c:	ldp	x20, x19, [sp, #128]
 150:	ldr	x21, [sp, #112]
 154:	ldp	x29, x30, [sp, #96]
 158:	add	sp, sp, #0x90
 15c:	b	0 <_ZdlPv>
 160:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 164:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 168:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x402                 	// #1026
 17c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  20:	cmp	x20, x19
  24:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x8c>  // b.none
  28:	ldp	x9, x8, [x20]
  2c:	and	x10, x8, x9
  30:	cmn	x10, #0x1
  34:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>  // b.none
  38:	cmn	x9, #0x2
  3c:	b.ne	48 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x48>  // b.any
  40:	cmn	x8, #0x2
  44:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>  // b.none
  48:	add	x2, x29, #0x18
  4c:	mov	x0, x21
  50:	mov	x1, x20
  54:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  58:	tbnz	w0, #0, 9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>
  5c:	ldr	x8, [x29, #24]
  60:	ldr	x9, [x20]
  64:	mov	x0, x21
  68:	str	x9, [x8]
  6c:	ldr	x9, [x20, #8]
  70:	str	x9, [x8, #8]
  74:	ldr	w9, [x20, #16]
  78:	str	w9, [x8, #16]
  7c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  80:	add	x20, x20, #0x18
  84:	cmp	x19, x20
  88:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x28>  // b.any
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldr	x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  a4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x17a                 	// #378
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructEOS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructEOS3_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructEOS3_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 50 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructEOS3_+0x50>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E16FindAndConstructEOS3_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	x8, [x0]
  44:	ldr	x8, [x19, #8]
  48:	str	wzr, [x0, #16]
  4c:	str	x8, [x0, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldp	x29, x30, [sp, #16]
  58:	mov	x0, x3
  5c:	add	sp, sp, #0x30
  60:	ret

Disassembly of section .text._ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	x3, [x0]
   c:	ldr	x8, [x3]
  10:	str	x2, [x0, #24]
  14:	stp	x8, x1, [x0, #8]
  18:	ldr	x9, [x3]
  1c:	cmp	x9, x8
  20:	b.ne	38 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb+0x38>  // b.any
  24:	tbz	w4, #0, 30 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb+0x30>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb>
  38:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb>
  3c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb>
  40:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEC2EPS7_S9_RKNS_14DebugEpochBaseEb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x49f                 	// #1183
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	cmp	x8, x9
  10:	b.hi	50 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x50>  // b.pmore
  14:	b.eq	48 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x48>  // b.none
  18:	ldp	x11, x10, [x8]
  1c:	and	x12, x10, x11
  20:	cmn	x12, #0x1
  24:	b.eq	38 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x38>  // b.none
  28:	cmn	x11, #0x2
  2c:	b.ne	48 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x48>  // b.any
  30:	cmn	x10, #0x2
  34:	b.ne	48 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x48>  // b.any
  38:	add	x8, x8, #0x18
  3c:	cmp	x8, x9
  40:	str	x8, [x0, #16]
  44:	b.ne	18 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x18>  // b.any
  48:	ldp	x29, x30, [sp], #16
  4c:	ret
  50:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  54:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  58:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x4e0                 	// #1248
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EED2Ev:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	44 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EED2Ev+0x44>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19]
  24:	cbz	x0, 34 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EED2Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19], #8
  38:	cmp	x21, x19
  3c:	b.ne	20 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EED2Ev+0x20>  // b.any
  40:	ldr	x19, [x20]
  44:	cbz	x19, 5c <_ZNSt6vectorISt10unique_ptrIN4llvm3mca16ResourceStrategyESt14default_deleteIS3_EESaIS6_EED2Ev+0x5c>
  48:	mov	x0, x19
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZdlPv>
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EED2Ev:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	3c <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EED2Ev+0x3c>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19]
  24:	cbz	x0, 2c <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EED2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	str	xzr, [x19], #8
  30:	cmp	x21, x19
  34:	b.ne	20 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EED2Ev+0x20>  // b.any
  38:	ldr	x19, [x20]
  3c:	cbz	x19, 54 <_ZNSt6vectorISt10unique_ptrIN4llvm3mca13ResourceStateESt14default_deleteIS3_EESaIS6_EED2Ev+0x54>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE17deallocateBucketsEv:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE17deallocateBucketsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	tbnz	w8, #0, 28 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE17deallocateBucketsEv+0x28>
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #16]
  1c:	bl	0 <_ZdlPv>
  20:	ldrb	w8, [x19, #8]
  24:	tbnz	w8, #0, 34 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE17deallocateBucketsEv+0x34>
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE17deallocateBucketsEv>
  38:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE17deallocateBucketsEv>
  3c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE17deallocateBucketsEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x45b                 	// #1115
  50:	bl	0 <__assert_fail>

RetireControlUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x8, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
   c:	ldr	x8, [x8]
  10:	add	x8, x8, #0x10
  14:	stp	x8, xzr, [x0]
  18:	ldr	w9, [x1, #4]
  1c:	mov	x8, x0
  20:	str	xzr, [x8, #32]!
  24:	stp	xzr, xzr, [x8, #8]
  28:	stp	w9, wzr, [x8, #-12]
  2c:	stur	w9, [x8, #-16]
  30:	ldr	x10, [x1, #64]
  34:	cbz	x10, 50 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x50>
  38:	ldr	w11, [x10]
  3c:	cbz	w11, 48 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x48>
  40:	mov	w9, w11
  44:	str	w11, [x0, #20]
  48:	ldr	w10, [x10, #4]
  4c:	str	w10, [x0, #24]
  50:	str	w9, [x0, #16]
  54:	cbz	w9, 68 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x68>
  58:	lsl	w1, w9, #1
  5c:	mov	x0, x8
  60:	ldp	x29, x30, [sp], #16
  64:	b	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  68:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  6c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  70:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x24                  	// #36
  84:	bl	0 <__assert_fail>

0000000000000088 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>:
  88:	stp	x29, x30, [sp, #-16]!
  8c:	mov	x29, sp
  90:	ldr	x10, [x1, #8]
  94:	ldp	w9, w11, [x0, #16]
  98:	ldr	x8, [x10]
  9c:	ldr	w8, [x8, #316]
  a0:	cmp	w9, w8
  a4:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  a8:	cmp	w8, #0x0
  ac:	csinc	w9, w8, wzr, ne  // ne = any
  b0:	cmp	w11, w9
  b4:	b.cc	128 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE+0xa0>  // b.lo, b.ul, b.last
  b8:	ldr	w8, [x0, #8]
  bc:	ldr	x11, [x0, #32]
  c0:	ldr	w12, [x1]
  c4:	mov	w13, #0x18                  	// #24
  c8:	cmp	w9, #0x1
  cc:	madd	x11, x8, x13, x11
  d0:	str	w12, [x11]
  d4:	str	x10, [x11, #8]
  d8:	str	w9, [x11, #16]
  dc:	strb	wzr, [x11, #20]
  e0:	ldp	x12, x11, [x0, #32]
  e4:	ldr	w10, [x0, #8]
  e8:	ldr	w14, [x0, #20]
  ec:	csinc	w13, w9, wzr, hi  // hi = pmore
  f0:	sub	x11, x11, x12
  f4:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  f8:	movk	x12, #0xaaab
  fc:	asr	x11, x11, #3
 100:	add	w10, w10, w13
 104:	mul	x11, x11, x12
 108:	udiv	x12, x10, x11
 10c:	sub	w9, w14, w9
 110:	msub	w10, w12, w11, w10
 114:	str	w10, [x0, #8]
 118:	str	w9, [x0, #20]
 11c:	mov	w0, w8
 120:	ldp	x29, x30, [sp], #16
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 12c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 130:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x2c                  	// #44
 144:	bl	0 <__assert_fail>

0000000000000148 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>:
 148:	stp	x29, x30, [sp, #-16]!
 14c:	mov	x29, sp
 150:	ldr	w8, [x0, #12]
 154:	ldr	x9, [x0, #32]
 158:	mov	w10, #0x18                  	// #24
 15c:	madd	x10, x8, x10, x9
 160:	ldr	x10, [x10, #8]
 164:	cbz	x10, 178 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv+0x30>
 168:	mov	w10, #0x18                  	// #24
 16c:	madd	x0, x8, x10, x9
 170:	ldp	x29, x30, [sp], #16
 174:	ret
 178:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 17c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 180:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x3b                  	// #59
 194:	bl	0 <__assert_fail>

0000000000000198 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>:
 198:	stp	x29, x30, [sp, #-32]!
 19c:	str	x19, [sp, #16]
 1a0:	mov	x29, sp
 1a4:	mov	x19, x0
 1a8:	bl	148 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 1ac:	ldr	w8, [x0, #16]
 1b0:	ldp	x10, x9, [x19, #32]
 1b4:	ldr	w11, [x19, #12]
 1b8:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1bc:	cmp	w8, #0x1
 1c0:	sub	x9, x9, x10
 1c4:	movk	x12, #0xaaab
 1c8:	csinc	w8, w8, wzr, hi  // hi = pmore
 1cc:	asr	x9, x9, #3
 1d0:	ldr	x19, [sp, #16]
 1d4:	add	w8, w8, w11
 1d8:	mul	x9, x9, x12
 1dc:	udiv	x10, x8, x9
 1e0:	msub	w0, w10, w9, w8
 1e4:	ldp	x29, x30, [sp], #32
 1e8:	ret

00000000000001ec <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv>:
 1ec:	stp	x29, x30, [sp, #-32]!
 1f0:	str	x19, [sp, #16]
 1f4:	mov	x29, sp
 1f8:	mov	x19, x0
 1fc:	bl	148 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 200:	ldr	w8, [x0, #16]
 204:	ldr	w9, [x19, #12]
 208:	ldp	x11, x10, [x19, #32]
 20c:	ldr	x19, [sp, #16]
 210:	cmp	w8, #0x1
 214:	csinc	w8, w8, wzr, hi  // hi = pmore
 218:	add	w8, w8, w9
 21c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 220:	sub	x10, x10, x11
 224:	movk	x9, #0xaaab
 228:	asr	x10, x10, #3
 22c:	mul	x9, x10, x9
 230:	udiv	x10, x8, x9
 234:	msub	x8, x10, x9, x8
 238:	mov	w9, #0x18                  	// #24
 23c:	madd	x0, x8, x9, x11
 240:	ldp	x29, x30, [sp], #32
 244:	ret

0000000000000248 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>:
 248:	stp	x29, x30, [sp, #-16]!
 24c:	mov	x29, sp
 250:	ldr	w8, [x0, #12]
 254:	ldr	x10, [x0, #32]
 258:	mov	w9, #0x18                  	// #24
 25c:	madd	x9, x8, x9, x10
 260:	ldr	x11, [x9, #8]!
 264:	ldr	w12, [x11, #784]
 268:	cmp	w12, #0x5
 26c:	b.ne	2d8 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv+0x90>  // b.any
 270:	mov	w12, #0x6                   	// #6
 274:	mov	w13, #0x18                  	// #24
 278:	str	w12, [x11, #784]
 27c:	madd	x11, x8, x13, x10
 280:	ldr	w12, [x11, #16]
 284:	ldr	x13, [x0, #40]
 288:	ldr	w14, [x0, #20]
 28c:	cmp	w12, #0x1
 290:	sub	x10, x13, x10
 294:	add	w13, w14, w12
 298:	str	w13, [x0, #20]
 29c:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 2a0:	movk	x13, #0xaaab
 2a4:	csinc	w12, w12, wzr, hi  // hi = pmore
 2a8:	asr	x10, x10, #3
 2ac:	add	w8, w12, w8
 2b0:	mul	x10, x10, x13
 2b4:	udiv	x12, x8, x10
 2b8:	msub	w8, w12, w10, w8
 2bc:	str	w8, [x0, #12]
 2c0:	str	wzr, [x11]
 2c4:	str	xzr, [x9]
 2c8:	str	wzr, [x11, #16]
 2cc:	strb	wzr, [x11, #20]
 2d0:	ldp	x29, x30, [sp], #16
 2d4:	ret
 2d8:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 2dc:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 2e0:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 2e4:	add	x0, x0, #0x0
 2e8:	add	x1, x1, #0x0
 2ec:	add	x3, x3, #0x0
 2f0:	mov	w2, #0x21c                 	// #540
 2f4:	bl	0 <__assert_fail>

00000000000002f8 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>:
 2f8:	stp	x29, x30, [sp, #-16]!
 2fc:	mov	x29, sp
 300:	ldp	x8, x9, [x0, #32]
 304:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 308:	movk	x10, #0xaaab
 30c:	sub	x9, x9, x8
 310:	asr	x9, x9, #3
 314:	mul	x9, x9, x10
 318:	cmp	x9, w1, uxtw
 31c:	b.ls	354 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x5c>  // b.plast
 320:	mov	w9, w1
 324:	mov	w10, #0x18                  	// #24
 328:	madd	x10, x9, x10, x8
 32c:	ldr	x10, [x10, #8]
 330:	cbz	x10, 374 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x7c>
 334:	mov	w10, #0x18                  	// #24
 338:	madd	x8, x9, x10, x8
 33c:	ldrb	w9, [x8, #20]!
 340:	cbnz	w9, 394 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x9c>
 344:	mov	w9, #0x1                   	// #1
 348:	strb	w9, [x8]
 34c:	ldp	x29, x30, [sp], #16
 350:	ret
 354:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 358:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 35c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 360:	add	x0, x0, #0x0
 364:	add	x1, x1, #0x0
 368:	add	x3, x3, #0x0
 36c:	mov	w2, #0x56                  	// #86
 370:	bl	0 <__assert_fail>
 374:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 378:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 37c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 380:	add	x0, x0, #0x0
 384:	add	x1, x1, #0x0
 388:	add	x3, x3, #0x0
 38c:	mov	w2, #0x57                  	// #87
 390:	bl	0 <__assert_fail>
 394:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 398:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 39c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3a0:	add	x0, x0, #0x0
 3a4:	add	x1, x1, #0x0
 3a8:	add	x3, x3, #0x0
 3ac:	mov	w2, #0x58                  	// #88
 3b0:	bl	0 <__assert_fail>

00000000000003b4 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>:
 3b4:	stp	x29, x30, [sp, #-32]!
 3b8:	str	x19, [sp, #16]
 3bc:	mov	x29, sp
 3c0:	mov	x19, x0
 3c4:	bl	0 <_ZN4llvm4dbgsEv>
 3c8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3cc:	add	x1, x1, #0x0
 3d0:	mov	w2, #0x22                  	// #34
 3d4:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3d8:	ldr	w1, [x19, #16]
 3dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3e0:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3e4:	add	x1, x1, #0x0
 3e8:	mov	w2, #0x18                  	// #24
 3ec:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3f0:	ldr	w1, [x19, #20]
 3f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3f8:	ldr	x19, [sp, #16]
 3fc:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 400:	add	x1, x1, #0x0
 404:	mov	w2, #0x3                   	// #3
 408:	ldp	x29, x30, [sp], #32
 40c:	b	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE6resizeEm>:
   0:	ldp	x9, x8, [x0]
   4:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x11, #0xaaab
   c:	sub	x10, x8, x9
  10:	asr	x10, x10, #3
  14:	mul	x10, x10, x11
  18:	cmp	x10, x1
  1c:	b.cs	28 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE6resizeEm+0x28>  // b.hs, b.nlast
  20:	sub	x1, x1, x10
  24:	b	0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE6resizeEm>
  28:	b.ls	40 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE6resizeEm+0x40>  // b.plast
  2c:	mov	w10, #0x18                  	// #24
  30:	madd	x9, x1, x10, x9
  34:	cmp	x9, x8
  38:	b.eq	40 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE6resizeEm+0x40>  // b.none
  3c:	str	x9, [x0, #8]
  40:	ret

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD2Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17RetireControlUnitD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD0Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17RetireControlUnitD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>:
   0:	cbz	x1, 118 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x118>
   4:	stp	x29, x30, [sp, #-64]!
   8:	stp	x24, x23, [sp, #16]
   c:	stp	x22, x21, [sp, #32]
  10:	stp	x20, x19, [sp, #48]
  14:	mov	x29, sp
  18:	mov	x22, x0
  1c:	mov	x24, x0
  20:	ldr	x21, [x22, #8]!
  24:	ldr	x9, [x0]
  28:	ldr	x10, [x24, #16]!
  2c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  30:	movk	x8, #0xaaab
  34:	mov	x19, x1
  38:	sub	x10, x10, x21
  3c:	asr	x10, x10, #3
  40:	mul	x10, x10, x8
  44:	mov	x20, x0
  48:	cmp	x10, x1
  4c:	b.cs	e8 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xe8>  // b.hs, b.nlast
  50:	sub	x9, x21, x9
  54:	adrp	x2, 0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
  58:	asr	x9, x9, #3
  5c:	add	x2, x2, #0x0
  60:	mov	x0, x20
  64:	mov	x1, x19
  68:	mul	x23, x9, x8
  6c:	bl	0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
  70:	mov	x21, x0
  74:	mov	x0, x20
  78:	mov	x1, x21
  7c:	bl	0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
  80:	mov	w8, #0x18                  	// #24
  84:	add	x9, x19, x19, lsl #1
  88:	madd	x23, x23, x8, x0
  8c:	mov	x22, x0
  90:	lsl	x2, x9, #3
  94:	mov	x0, x23
  98:	mov	w1, wzr
  9c:	bl	0 <memset>
  a0:	ldp	x0, x8, [x20]
  a4:	cmp	x0, x8
  a8:	b.eq	cc <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xcc>  // b.none
  ac:	mov	x9, x22
  b0:	ldr	x10, [x0, #16]
  b4:	ldr	q0, [x0], #24
  b8:	str	x10, [x9, #16]
  bc:	cmp	x8, x0
  c0:	str	q0, [x9], #24
  c4:	b.ne	b0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xb0>  // b.any
  c8:	ldr	x0, [x20]
  cc:	cbz	x0, d4 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xd4>
  d0:	bl	0 <_ZdlPv>
  d4:	mov	w8, #0x18                  	// #24
  d8:	madd	x9, x19, x8, x23
  dc:	madd	x8, x21, x8, x22
  e0:	stp	x22, x9, [x20]
  e4:	b	104 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x104>
  e8:	add	x19, x19, x19, lsl #1
  ec:	lsl	x2, x19, #3
  f0:	mov	x0, x21
  f4:	mov	w1, wzr
  f8:	bl	0 <memset>
  fc:	add	x8, x21, x19, lsl #3
 100:	mov	x24, x22
 104:	str	x8, [x24]
 108:	ldp	x20, x19, [sp, #48]
 10c:	ldp	x22, x21, [sp, #32]
 110:	ldp	x24, x23, [sp, #16]
 114:	ldp	x29, x30, [sp], #64
 118:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x10, x9, [x0]
   c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  10:	movk	x8, #0x555, lsl #48
  14:	sub	x9, x9, x10
  18:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  1c:	asr	x9, x9, #3
  20:	movk	x10, #0xaaab
  24:	mul	x9, x9, x10
  28:	sub	x10, x8, x9
  2c:	cmp	x10, x1
  30:	b.cc	60 <_ZNKSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE12_M_check_lenEmPKc+0x60>  // b.lo, b.ul, b.last
  34:	cmp	x9, x1
  38:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  3c:	adds	x9, x10, x9
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x9, x8
  48:	cset	w11, hi  // hi = pmore
  4c:	orr	w10, w10, w11
  50:	cmp	w10, #0x0
  54:	csel	x0, x8, x9, ne  // ne = any
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x0, x2
  64:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE11_M_allocateEm>:
   0:	cbz	x1, 24 <_ZNSt12_Vector_baseIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE11_M_allocateEm+0x24>
   4:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   8:	movk	x8, #0x5556
   c:	movk	x8, #0x555, lsl #48
  10:	cmp	x1, x8
  14:	b.cs	2c <_ZNSt12_Vector_baseIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE11_M_allocateEm+0x2c>  // b.hs, b.nlast
  18:	add	x8, x1, x1, lsl #1
  1c:	lsl	x0, x8, #3
  20:	b	0 <_Znwm>
  24:	mov	x0, xzr
  28:	ret
  2c:	stp	x29, x30, [sp, #-16]!
  30:	mov	x29, sp
  34:	bl	0 <_ZSt17__throw_bad_allocv>

Scheduler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	cbz	x8, 20 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x20>
  18:	str	xzr, [x1]
  1c:	b	3c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x3c>
  20:	mov	w0, #0x8                   	// #8
  24:	bl	0 <_Znwm>
  28:	adrp	x9, 28 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x28>
  2c:	ldr	x9, [x9]
  30:	mov	x8, x0
  34:	add	x9, x9, #0x10
  38:	str	x9, [x0]
  3c:	ldr	x0, [x19, #16]
  40:	str	x8, [x19, #16]
  44:	cbz	x0, 5c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x5c>
  48:	ldr	x8, [x0]
  4c:	ldr	x19, [sp, #16]
  50:	ldr	x1, [x8, #8]
  54:	ldp	x29, x30, [sp], #32
  58:	br	x1
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret

0000000000000068 <_ZN4llvm3mca17SchedulerStrategyD1Ev>:
  68:	ret

000000000000006c <_ZN4llvm3mca17SchedulerStrategyD0Ev>:
  6c:	brk	#0x1

0000000000000070 <_ZN4llvm3mca24DefaultSchedulerStrategyD0Ev>:
  70:	b	0 <_ZdlPv>

0000000000000074 <_ZNK4llvm3mca9Scheduler4dumpEv>:
  74:	stp	x29, x30, [sp, #-32]!
  78:	stp	x20, x19, [sp, #16]
  7c:	mov	x29, sp
  80:	mov	x19, x0
  84:	bl	0 <_ZN4llvm4dbgsEv>
  88:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  8c:	add	x1, x1, #0x0
  90:	mov	w2, #0x1e                  	// #30
  94:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  98:	ldp	x9, x8, [x19, #32]
  9c:	sub	x8, x8, x9
  a0:	asr	x1, x8, #4
  a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  a8:	ldp	x9, x8, [x0, #16]
  ac:	cmp	x8, x9
  b0:	b.cs	c8 <_ZNK4llvm3mca9Scheduler4dumpEv+0x54>  // b.hs, b.nlast
  b4:	add	x9, x8, #0x1
  b8:	mov	w10, #0xa                   	// #10
  bc:	str	x9, [x0, #24]
  c0:	strb	w10, [x8]
  c4:	b	d0 <_ZNK4llvm3mca9Scheduler4dumpEv+0x5c>
  c8:	mov	w1, #0xa                   	// #10
  cc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
  d0:	bl	0 <_ZN4llvm4dbgsEv>
  d4:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  d8:	add	x1, x1, #0x0
  dc:	mov	w2, #0x1f                  	// #31
  e0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  e4:	ldp	x9, x8, [x19, #80]
  e8:	sub	x8, x8, x9
  ec:	asr	x1, x8, #4
  f0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  f4:	ldp	x9, x8, [x0, #16]
  f8:	cmp	x8, x9
  fc:	b.cs	114 <_ZNK4llvm3mca9Scheduler4dumpEv+0xa0>  // b.hs, b.nlast
 100:	add	x9, x8, #0x1
 104:	mov	w10, #0xa                   	// #10
 108:	str	x9, [x0, #24]
 10c:	strb	w10, [x8]
 110:	b	11c <_ZNK4llvm3mca9Scheduler4dumpEv+0xa8>
 114:	mov	w1, #0xa                   	// #10
 118:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 11c:	bl	0 <_ZN4llvm4dbgsEv>
 120:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 124:	add	x1, x1, #0x0
 128:	mov	w2, #0x20                  	// #32
 12c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 130:	ldp	x9, x8, [x19, #104]
 134:	sub	x8, x8, x9
 138:	asr	x1, x8, #4
 13c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 140:	ldp	x9, x8, [x0, #16]
 144:	cmp	x8, x9
 148:	b.cs	160 <_ZNK4llvm3mca9Scheduler4dumpEv+0xec>  // b.hs, b.nlast
 14c:	add	x9, x8, #0x1
 150:	mov	w10, #0xa                   	// #10
 154:	str	x9, [x0, #24]
 158:	strb	w10, [x8]
 15c:	b	168 <_ZNK4llvm3mca9Scheduler4dumpEv+0xf4>
 160:	mov	w1, #0xa                   	// #10
 164:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 168:	ldr	x8, [x19, #24]
 16c:	ldp	x19, x20, [x8, #8]
 170:	cmp	x19, x20
 174:	b.eq	188 <_ZNK4llvm3mca9Scheduler4dumpEv+0x114>  // b.none
 178:	ldr	x0, [x19], #8
 17c:	bl	0 <_ZNK4llvm3mca13ResourceState4dumpEv>
 180:	cmp	x20, x19
 184:	b.ne	178 <_ZNK4llvm3mca9Scheduler4dumpEv+0x104>  // b.any
 188:	ldp	x20, x19, [sp, #16]
 18c:	ldp	x29, x30, [sp], #32
 190:	ret

0000000000000194 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>:
 194:	stp	x29, x30, [sp, #-32]!
 198:	stp	x20, x19, [sp, #16]
 19c:	mov	x29, sp
 1a0:	ldr	x8, [x1, #8]
 1a4:	mov	x20, x1
 1a8:	mov	x19, x0
 1ac:	ldr	x0, [x0, #24]
 1b0:	ldr	x1, [x8, #800]
 1b4:	bl	0 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>
 1b8:	cmp	w0, #0x0
 1bc:	cset	w8, ne  // ne = any
 1c0:	cmp	w0, #0x1
 1c4:	strb	w8, [x19, #140]
 1c8:	b.eq	1dc <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x48>  // b.none
 1cc:	cmp	w0, #0x2
 1d0:	b.ne	1e4 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x50>  // b.any
 1d4:	mov	w0, #0x4                   	// #4
 1d8:	b	20c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x78>
 1dc:	mov	w0, #0x3                   	// #3
 1e0:	b	20c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x78>
 1e4:	ldr	x0, [x19, #8]
 1e8:	mov	x1, x20
 1ec:	ldr	x8, [x0]
 1f0:	ldr	x8, [x8, #16]
 1f4:	blr	x8
 1f8:	cmp	w0, #0x0
 1fc:	cset	w8, ne  // ne = any
 200:	cmp	w0, #0x3
 204:	strb	w8, [x19, #140]
 208:	b.cs	218 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x84>  // b.hs, b.nlast
 20c:	ldp	x20, x19, [sp, #16]
 210:	ldp	x29, x30, [sp], #32
 214:	ret
 218:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 21c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 220:	add	x0, x0, #0x0
 224:	add	x1, x1, #0x0
 228:	mov	w2, #0x43                  	// #67
 22c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000230 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>:
 230:	stp	x29, x30, [sp, #-48]!
 234:	str	x21, [sp, #16]
 238:	stp	x20, x19, [sp, #32]
 23c:	mov	x29, sp
 240:	ldr	x21, [x1, #8]
 244:	mov	x19, x1
 248:	mov	x20, x0
 24c:	ldr	x0, [x0, #24]
 250:	ldr	x1, [x21]
 254:	bl	0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
 258:	ldr	w1, [x19]
 25c:	mov	x0, x21
 260:	bl	0 <_ZN4llvm3mca11Instruction7executeEj>
 264:	mov	x0, x21
 268:	bl	0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>
 26c:	ldr	x8, [x21]
 270:	ldrb	w9, [x8, #324]
 274:	cbnz	w9, 280 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x50>
 278:	ldrb	w8, [x8, #325]
 27c:	cbz	w8, 2b4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x84>
 280:	ldr	x0, [x20, #8]
 284:	mov	x1, x19
 288:	ldr	x8, [x0]
 28c:	ldr	x8, [x8, #48]
 290:	blr	x8
 294:	ldr	x0, [x20, #8]
 298:	ldr	w1, [x21, #796]
 29c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 2a0:	ldr	x8, [x0, #72]
 2a4:	ldr	w9, [x0, #80]
 2a8:	add	x10, x21, #0x334
 2ac:	str	x8, [x10]
 2b0:	str	w9, [x10, #8]
 2b4:	ldr	w8, [x21, #784]
 2b8:	cmp	w8, #0x5
 2bc:	b.eq	2f8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xc8>  // b.none
 2c0:	cmp	w8, #0x4
 2c4:	b.ne	2e8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xb8>  // b.any
 2c8:	ldp	x1, x8, [x20, #112]
 2cc:	cmp	x1, x8
 2d0:	b.eq	318 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xe8>  // b.none
 2d4:	ldr	q0, [x19]
 2d8:	str	q0, [x1]
 2dc:	ldr	x8, [x20, #112]
 2e0:	add	x8, x8, #0x10
 2e4:	str	x8, [x20, #112]
 2e8:	ldp	x20, x19, [sp, #32]
 2ec:	ldr	x21, [sp, #16]
 2f0:	ldp	x29, x30, [sp], #48
 2f4:	ret
 2f8:	ldr	x0, [x20, #8]
 2fc:	mov	x1, x19
 300:	ldp	x20, x19, [sp, #32]
 304:	ldr	x21, [sp, #16]
 308:	ldr	x8, [x0]
 30c:	ldr	x2, [x8, #32]
 310:	ldp	x29, x30, [sp], #48
 314:	br	x2
 318:	add	x0, x20, #0x68
 31c:	mov	x2, x19
 320:	ldp	x20, x19, [sp, #32]
 324:	ldr	x21, [sp, #16]
 328:	ldp	x29, x30, [sp], #48
 32c:	b	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>

0000000000000330 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>:
 330:	stp	x29, x30, [sp, #-80]!
 334:	stp	x26, x25, [sp, #16]
 338:	stp	x24, x23, [sp, #32]
 33c:	stp	x22, x21, [sp, #48]
 340:	stp	x20, x19, [sp, #64]
 344:	mov	x29, sp
 348:	ldr	x26, [x1, #8]
 34c:	mov	x20, x0
 350:	mov	w9, #0x88                  	// #136
 354:	mov	x22, x2
 358:	ldr	x0, [x26, #16]
 35c:	ldr	w8, [x26, #24]
 360:	mov	x23, x1
 364:	mov	x2, xzr
 368:	mov	x19, x4
 36c:	madd	x24, x8, x9, x0
 370:	mov	x1, x24
 374:	mov	x21, x3
 378:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 37c:	ldr	x8, [x26]
 380:	mov	x25, x0
 384:	ldrb	w9, [x8, #324]
 388:	cbnz	w9, 394 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x64>
 38c:	ldrb	w8, [x8, #325]
 390:	cbz	w8, 3c4 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x94>
 394:	ldr	x8, [x23, #8]
 398:	ldr	x0, [x20, #8]
 39c:	ldr	w1, [x8, #796]
 3a0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 3a4:	ldr	w8, [x0, #12]
 3a8:	ldr	w9, [x0, #20]
 3ac:	ldr	w10, [x0, #32]
 3b0:	cmp	w8, w9
 3b4:	cset	w8, ne  // ne = any
 3b8:	cmp	w10, #0x0
 3bc:	cset	w9, ne  // ne = any
 3c0:	and	w8, w8, w9
 3c4:	ldr	x0, [x20, #24]
 3c8:	ldr	x1, [x26, #800]
 3cc:	cmp	x25, x24
 3d0:	cset	w9, ne  // ne = any
 3d4:	orr	w24, w8, w9
 3d8:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
 3dc:	mov	x0, x20
 3e0:	mov	x1, x23
 3e4:	mov	x2, x22
 3e8:	bl	230 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
 3ec:	cbz	w24, 420 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xf0>
 3f0:	mov	x0, x20
 3f4:	mov	x1, x21
 3f8:	bl	438 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
 3fc:	tbz	w0, #0, 420 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xf0>
 400:	mov	x0, x20
 404:	mov	x1, x19
 408:	ldp	x20, x19, [sp, #64]
 40c:	ldp	x22, x21, [sp, #48]
 410:	ldp	x24, x23, [sp, #32]
 414:	ldp	x26, x25, [sp, #16]
 418:	ldp	x29, x30, [sp], #80
 41c:	b	5e0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
 420:	ldp	x20, x19, [sp, #64]
 424:	ldp	x22, x21, [sp, #48]
 428:	ldp	x24, x23, [sp, #32]
 42c:	ldp	x26, x25, [sp, #16]
 430:	ldp	x29, x30, [sp], #80
 434:	ret

0000000000000438 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
 438:	stp	x29, x30, [sp, #-96]!
 43c:	stp	x28, x27, [sp, #16]
 440:	stp	x26, x25, [sp, #32]
 444:	stp	x24, x23, [sp, #48]
 448:	stp	x22, x21, [sp, #64]
 44c:	stp	x20, x19, [sp, #80]
 450:	mov	x29, sp
 454:	mov	x19, x0
 458:	ldr	x20, [x19, #32]!
 45c:	ldr	x25, [x19, #8]
 460:	cmp	x25, x20
 464:	b.eq	5a4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x16c>  // b.none
 468:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
 46c:	ldr	x26, [x26]
 470:	adrp	x24, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 474:	mov	x21, x0
 478:	mov	x22, x1
 47c:	mov	w28, wzr
 480:	add	x23, x0, #0x38
 484:	add	x24, x24, #0x0
 488:	ldr	x27, [x20, #8]
 48c:	cbz	x27, 59c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x164>
 490:	ldr	w8, [x27, #784]
 494:	cmp	w8, #0x1
 498:	b.ne	4a8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x70>  // b.any
 49c:	mov	x0, x27
 4a0:	bl	0 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
 4a4:	tbz	w0, #0, 4e0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xa8>
 4a8:	ldr	x8, [x27]
 4ac:	ldrb	w9, [x8, #324]
 4b0:	cbnz	w9, 4bc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x84>
 4b4:	ldrb	w8, [x8, #325]
 4b8:	cbz	w8, 4e8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb0>
 4bc:	ldr	x8, [x20, #8]
 4c0:	ldr	x0, [x21, #8]
 4c4:	ldr	w1, [x8, #796]
 4c8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 4cc:	ldp	w8, w9, [x0, #4]
 4d0:	ldr	w10, [x0]
 4d4:	add	w8, w9, w8
 4d8:	cmp	w10, w8
 4dc:	b.ls	4e8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb0>  // b.plast
 4e0:	add	x20, x20, #0x10
 4e4:	b	594 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x15c>
 4e8:	ldrb	w8, [x26]
 4ec:	cbz	w8, 530 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf8>
 4f0:	mov	x0, x24
 4f4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 4f8:	tbz	w0, #0, 530 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf8>
 4fc:	bl	0 <_ZN4llvm4dbgsEv>
 500:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 504:	mov	w2, #0x1a                  	// #26
 508:	add	x1, x1, #0x0
 50c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 510:	ldr	w1, [x20]
 514:	mov	x27, x0
 518:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 51c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 520:	mov	w2, #0x1e                  	// #30
 524:	mov	x0, x27
 528:	add	x1, x1, #0x0
 52c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 530:	mov	x0, x22
 534:	mov	x1, x20
 538:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 53c:	ldp	x1, x8, [x21, #64]
 540:	cmp	x1, x8
 544:	b.eq	560 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x128>  // b.none
 548:	ldr	q0, [x20]
 54c:	str	q0, [x1]
 550:	ldr	x8, [x21, #64]
 554:	add	x8, x8, #0x10
 558:	str	x8, [x21, #64]
 55c:	b	56c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x134>
 560:	mov	x0, x23
 564:	mov	x2, x20
 568:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 56c:	add	w28, w28, #0x1
 570:	str	xzr, [x20, #8]
 574:	sub	x8, x25, w28, uxtw #4
 578:	ldr	w9, [x8]
 57c:	ldr	w10, [x20]
 580:	str	w9, [x20]
 584:	ldr	x9, [x8, #8]
 588:	str	x9, [x20, #8]
 58c:	str	w10, [x8]
 590:	str	xzr, [x8, #8]
 594:	cmp	x25, x20
 598:	b.ne	488 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x50>  // b.any
 59c:	ldp	x20, x25, [x21, #32]
 5a0:	b	5a8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x170>
 5a4:	mov	w28, wzr
 5a8:	sub	x8, x25, x20
 5ac:	asr	x8, x8, #4
 5b0:	sub	x1, x8, w28, uxtw
 5b4:	mov	x0, x19
 5b8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 5bc:	cmp	w28, #0x0
 5c0:	ldp	x20, x19, [sp, #80]
 5c4:	ldp	x22, x21, [sp, #64]
 5c8:	ldp	x24, x23, [sp, #48]
 5cc:	ldp	x26, x25, [sp, #32]
 5d0:	ldp	x28, x27, [sp, #16]
 5d4:	cset	w0, ne  // ne = any
 5d8:	ldp	x29, x30, [sp], #96
 5dc:	ret

00000000000005e0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>:
 5e0:	stp	x29, x30, [sp, #-96]!
 5e4:	stp	x28, x27, [sp, #16]
 5e8:	stp	x26, x25, [sp, #32]
 5ec:	stp	x24, x23, [sp, #48]
 5f0:	stp	x22, x21, [sp, #64]
 5f4:	stp	x20, x19, [sp, #80]
 5f8:	mov	x29, sp
 5fc:	mov	x19, x0
 600:	ldr	x20, [x19, #56]!
 604:	ldr	x25, [x19, #8]
 608:	cmp	x25, x20
 60c:	b.eq	748 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x168>  // b.none
 610:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
 614:	ldr	x26, [x26]
 618:	adrp	x24, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 61c:	mov	x21, x0
 620:	mov	x22, x1
 624:	mov	w28, wzr
 628:	add	x23, x0, #0x50
 62c:	add	x24, x24, #0x0
 630:	ldr	x27, [x20, #8]
 634:	cbz	x27, 740 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x160>
 638:	ldr	w8, [x27, #784]
 63c:	cmp	w8, #0x3
 640:	b.eq	650 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x70>  // b.none
 644:	mov	x0, x27
 648:	bl	0 <_ZN4llvm3mca11Instruction13updatePendingEv>
 64c:	tbz	w0, #0, 6fc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x11c>
 650:	ldr	x8, [x27]
 654:	ldrb	w9, [x8, #324]
 658:	cbnz	w9, 664 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x84>
 65c:	ldrb	w8, [x8, #325]
 660:	cbz	w8, 684 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xa4>
 664:	ldr	x8, [x20, #8]
 668:	ldr	x0, [x21, #8]
 66c:	ldr	w1, [x8, #796]
 670:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 674:	ldr	w8, [x0, #8]
 678:	ldr	w9, [x0]
 67c:	cmp	w8, w9
 680:	b.ne	6fc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x11c>  // b.any
 684:	ldrb	w8, [x26]
 688:	cbz	w8, 6cc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xec>
 68c:	mov	x0, x24
 690:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 694:	tbz	w0, #0, 6cc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xec>
 698:	bl	0 <_ZN4llvm4dbgsEv>
 69c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 6a0:	mov	w2, #0x1a                  	// #26
 6a4:	add	x1, x1, #0x0
 6a8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 6ac:	ldr	w1, [x20]
 6b0:	mov	x27, x0
 6b4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 6b8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 6bc:	mov	w2, #0x1c                  	// #28
 6c0:	mov	x0, x27
 6c4:	add	x1, x1, #0x0
 6c8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 6cc:	mov	x0, x22
 6d0:	mov	x1, x20
 6d4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 6d8:	ldp	x1, x8, [x21, #88]
 6dc:	cmp	x1, x8
 6e0:	b.eq	704 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x124>  // b.none
 6e4:	ldr	q0, [x20]
 6e8:	str	q0, [x1]
 6ec:	ldr	x8, [x21, #88]
 6f0:	add	x8, x8, #0x10
 6f4:	str	x8, [x21, #88]
 6f8:	b	710 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x130>
 6fc:	add	x20, x20, #0x10
 700:	b	738 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x158>
 704:	mov	x0, x23
 708:	mov	x2, x20
 70c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 710:	add	w28, w28, #0x1
 714:	str	xzr, [x20, #8]
 718:	sub	x8, x25, w28, uxtw #4
 71c:	ldr	w9, [x8]
 720:	ldr	w10, [x20]
 724:	str	w9, [x20]
 728:	ldr	x9, [x8, #8]
 72c:	str	x9, [x20, #8]
 730:	str	w10, [x8]
 734:	str	xzr, [x8, #8]
 738:	cmp	x25, x20
 73c:	b.ne	630 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x50>  // b.any
 740:	ldp	x20, x25, [x21, #56]
 744:	b	74c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x16c>
 748:	mov	w28, wzr
 74c:	sub	x8, x25, x20
 750:	asr	x8, x8, #4
 754:	sub	x1, x8, w28, uxtw
 758:	mov	x0, x19
 75c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 760:	cmp	w28, #0x0
 764:	ldp	x20, x19, [sp, #80]
 768:	ldp	x22, x21, [sp, #64]
 76c:	ldp	x24, x23, [sp, #48]
 770:	ldp	x26, x25, [sp, #32]
 774:	ldp	x28, x27, [sp, #16]
 778:	cset	w0, ne  // ne = any
 77c:	ldp	x29, x30, [sp], #96
 780:	ret

0000000000000784 <_ZN4llvm3mca9Scheduler6selectEv>:
 784:	stp	x29, x30, [sp, #-64]!
 788:	stp	x24, x23, [sp, #16]
 78c:	stp	x22, x21, [sp, #32]
 790:	stp	x20, x19, [sp, #48]
 794:	mov	x29, sp
 798:	ldp	x21, x8, [x0, #80]
 79c:	mov	x19, x0
 7a0:	sub	x9, x8, x21
 7a4:	lsr	x20, x9, #4
 7a8:	cbz	w20, 838 <_ZN4llvm3mca9Scheduler6selectEv+0xb4>
 7ac:	ubfx	x9, x9, #4, #32
 7b0:	mov	x22, xzr
 7b4:	sub	x23, x9, #0x1
 7b8:	mov	w24, #0x8                   	// #8
 7bc:	mov	w9, w20
 7c0:	sub	x8, x8, x21
 7c4:	cmp	x9, x8, asr #4
 7c8:	b.eq	7ec <_ZN4llvm3mca9Scheduler6selectEv+0x68>  // b.none
 7cc:	ldr	x0, [x19, #16]
 7d0:	add	x10, x21, x24
 7d4:	sub	x1, x10, #0x8
 7d8:	add	x2, x21, x9, lsl #4
 7dc:	ldr	x8, [x0]
 7e0:	ldr	x8, [x8, #16]
 7e4:	blr	x8
 7e8:	tbz	w0, #0, 818 <_ZN4llvm3mca9Scheduler6selectEv+0x94>
 7ec:	ldr	x21, [x21, x24]
 7f0:	ldr	x0, [x19, #24]
 7f4:	ldr	x1, [x21]
 7f8:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
 7fc:	cbz	x0, 804 <_ZN4llvm3mca9Scheduler6selectEv+0x80>
 800:	str	x0, [x21, #832]
 804:	ldr	x8, [x19, #128]
 808:	cmp	x0, #0x0
 80c:	csel	w20, w20, w22, ne  // ne = any
 810:	orr	x8, x8, x0
 814:	str	x8, [x19, #128]
 818:	cmp	x23, x22
 81c:	b.eq	830 <_ZN4llvm3mca9Scheduler6selectEv+0xac>  // b.none
 820:	ldp	x21, x8, [x19, #80]
 824:	add	x22, x22, #0x1
 828:	add	x24, x24, #0x10
 82c:	b	7bc <_ZN4llvm3mca9Scheduler6selectEv+0x38>
 830:	ldp	x21, x8, [x19, #80]
 834:	sub	x9, x8, x21
 838:	asr	x9, x9, #4
 83c:	cmp	x9, w20, uxtw
 840:	b.ne	854 <_ZN4llvm3mca9Scheduler6selectEv+0xd0>  // b.any
 844:	mov	x8, xzr
 848:	mov	x9, xzr
 84c:	mov	x1, xzr
 850:	b	88c <_ZN4llvm3mca9Scheduler6selectEv+0x108>
 854:	add	x9, x21, x9, lsl #4
 858:	ldur	w11, [x9, #-16]
 85c:	mov	w10, w20
 860:	add	x10, x21, x10, lsl #4
 864:	ldp	x12, x1, [x10]
 868:	str	w11, [x10]
 86c:	ldur	x11, [x9, #-8]
 870:	sub	x13, x8, #0x10
 874:	and	x8, x12, #0xffffffff00000000
 878:	str	x11, [x10, #8]
 87c:	stur	w12, [x9, #-16]
 880:	stur	x1, [x9, #-8]
 884:	and	x9, x12, #0xffffffff
 888:	str	x13, [x19, #88]
 88c:	ldp	x20, x19, [sp, #48]
 890:	ldp	x22, x21, [sp, #32]
 894:	ldp	x24, x23, [sp, #16]
 898:	orr	x0, x9, x8
 89c:	ldp	x29, x30, [sp], #64
 8a0:	ret

00000000000008a4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
 8a4:	stp	x29, x30, [sp, #-96]!
 8a8:	stp	x28, x27, [sp, #16]
 8ac:	stp	x26, x25, [sp, #32]
 8b0:	stp	x24, x23, [sp, #48]
 8b4:	stp	x22, x21, [sp, #64]
 8b8:	stp	x20, x19, [sp, #80]
 8bc:	mov	x29, sp
 8c0:	mov	x19, x0
 8c4:	ldr	x20, [x19, #104]!
 8c8:	ldr	x27, [x19, #8]
 8cc:	cmp	x27, x20
 8d0:	b.eq	9b0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x10c>  // b.none
 8d4:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
 8d8:	ldr	x24, [x24]
 8dc:	adrp	x23, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 8e0:	adrp	x25, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 8e4:	mov	x21, x0
 8e8:	mov	x22, x1
 8ec:	mov	w28, wzr
 8f0:	add	x23, x23, #0x0
 8f4:	add	x25, x25, #0x0
 8f8:	ldr	x8, [x20, #8]
 8fc:	cbz	x8, 9a8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x104>
 900:	ldr	w8, [x8, #784]
 904:	cmp	w8, #0x5
 908:	b.ne	958 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>  // b.any
 90c:	ldr	x0, [x21, #8]
 910:	mov	x1, x20
 914:	ldr	x8, [x0]
 918:	ldr	x8, [x8, #32]
 91c:	blr	x8
 920:	mov	x0, x22
 924:	mov	x1, x20
 928:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 92c:	add	w28, w28, #0x1
 930:	str	xzr, [x20, #8]
 934:	sub	x8, x27, w28, uxtw #4
 938:	ldr	w9, [x8]
 93c:	ldr	w10, [x20]
 940:	str	w9, [x20]
 944:	ldr	x9, [x8, #8]
 948:	str	x9, [x20, #8]
 94c:	str	w10, [x8]
 950:	str	xzr, [x8, #8]
 954:	b	9a0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xfc>
 958:	ldrb	w8, [x24]
 95c:	cbz	w8, 99c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf8>
 960:	mov	x0, x23
 964:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 968:	tbz	w0, #0, 99c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf8>
 96c:	bl	0 <_ZN4llvm4dbgsEv>
 970:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 974:	mov	w2, #0x1a                  	// #26
 978:	add	x1, x1, #0x0
 97c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 980:	ldr	w1, [x20]
 984:	mov	x26, x0
 988:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 98c:	mov	w2, #0x15                  	// #21
 990:	mov	x0, x26
 994:	mov	x1, x25
 998:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 99c:	add	x20, x20, #0x10
 9a0:	cmp	x27, x20
 9a4:	b.ne	8f8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>  // b.any
 9a8:	ldp	x20, x27, [x21, #104]
 9ac:	b	9b4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x110>
 9b0:	mov	w28, wzr
 9b4:	sub	x8, x27, x20
 9b8:	asr	x8, x8, #4
 9bc:	sub	x1, x8, w28, uxtw
 9c0:	mov	x0, x19
 9c4:	ldp	x20, x19, [sp, #80]
 9c8:	ldp	x22, x21, [sp, #64]
 9cc:	ldp	x24, x23, [sp, #48]
 9d0:	ldp	x26, x25, [sp, #32]
 9d4:	ldp	x28, x27, [sp, #16]
 9d8:	ldp	x29, x30, [sp], #96
 9dc:	b	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>

00000000000009e0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>:
 9e0:	stp	x29, x30, [sp, #-32]!
 9e4:	str	x19, [sp, #16]
 9e8:	mov	x29, sp
 9ec:	ldr	x9, [x1]
 9f0:	ldr	w10, [x1, #8]
 9f4:	ldp	x2, x3, [x0, #80]
 9f8:	mov	x8, x1
 9fc:	mov	x19, x0
 a00:	add	x1, x9, x10, lsl #4
 a04:	mov	x0, x8
 a08:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 a0c:	ldr	x0, [x19, #128]
 a10:	ldr	x19, [sp, #16]
 a14:	ldp	x29, x30, [sp], #32
 a18:	ret

0000000000000a1c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>:
 a1c:	stp	x29, x30, [sp, #-64]!
 a20:	stp	x24, x23, [sp, #16]
 a24:	stp	x22, x21, [sp, #32]
 a28:	stp	x20, x19, [sp, #48]
 a2c:	mov	x29, sp
 a30:	ldr	w8, [x0, #136]
 a34:	ldp	x21, x9, [x0, #56]
 a38:	sub	x23, x9, x8, lsl #4
 a3c:	cmp	x21, x23
 a40:	b.eq	ad4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xb8>  // b.none
 a44:	mov	x19, x2
 a48:	mov	x20, x0
 a4c:	mov	x22, x1
 a50:	ldr	x24, [x21, #8]
 a54:	ldr	x0, [x20, #24]
 a58:	ldr	x1, [x24]
 a5c:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
 a60:	cbnz	x0, ac8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xac>
 a64:	ldr	x8, [x24]
 a68:	ldrb	w9, [x8, #324]
 a6c:	cbnz	w9, a78 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x5c>
 a70:	ldrb	w8, [x8, #325]
 a74:	cbz	w8, ab0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x94>
 a78:	ldr	x8, [x21, #8]
 a7c:	ldr	x0, [x20, #8]
 a80:	ldr	w1, [x8, #796]
 a84:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 a88:	ldr	w8, [x0, #4]
 a8c:	cbz	w8, ab0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x94>
 a90:	ldr	w9, [x0, #8]
 a94:	ldr	w10, [x0]
 a98:	add	w8, w9, w8
 a9c:	cmp	w8, w10
 aa0:	b.ne	ab0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x94>  // b.any
 aa4:	mov	x0, x19
 aa8:	mov	x1, x21
 aac:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 ab0:	ldr	w8, [x24, #784]
 ab4:	cmp	w8, #0x2
 ab8:	b.ne	ac8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xac>  // b.any
 abc:	mov	x0, x22
 ac0:	mov	x1, x21
 ac4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 ac8:	add	x21, x21, #0x10
 acc:	cmp	x23, x21
 ad0:	b.ne	a50 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x34>  // b.any
 ad4:	ldp	x20, x19, [sp, #48]
 ad8:	ldp	x22, x21, [sp, #32]
 adc:	ldp	x24, x23, [sp, #16]
 ae0:	ldp	x29, x30, [sp], #64
 ae4:	ret

0000000000000ae8 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>:
 ae8:	stp	x29, x30, [sp, #-64]!
 aec:	stp	x24, x23, [sp, #16]
 af0:	stp	x22, x21, [sp, #32]
 af4:	stp	x20, x19, [sp, #48]
 af8:	mov	x29, sp
 afc:	mov	x19, x0
 b00:	ldr	x0, [x0, #8]
 b04:	mov	x20, x4
 b08:	mov	x21, x3
 b0c:	mov	x22, x2
 b10:	ldr	x8, [x0]
 b14:	mov	x23, x1
 b18:	ldr	x8, [x8, #56]
 b1c:	blr	x8
 b20:	ldr	x0, [x19, #24]
 b24:	mov	x1, x23
 b28:	bl	0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>
 b2c:	ldp	x23, x24, [x19, #104]
 b30:	cmp	x23, x24
 b34:	b.eq	b4c <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x64>  // b.none
 b38:	ldr	x0, [x23, #8]
 b3c:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
 b40:	add	x23, x23, #0x10
 b44:	cmp	x24, x23
 b48:	b.ne	b38 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x50>  // b.any
 b4c:	mov	x0, x19
 b50:	mov	x1, x22
 b54:	bl	8a4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>
 b58:	ldp	x22, x23, [x19, #56]
 b5c:	cmp	x22, x23
 b60:	b.eq	b78 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x90>  // b.none
 b64:	ldr	x0, [x22, #8]
 b68:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
 b6c:	add	x22, x22, #0x10
 b70:	cmp	x23, x22
 b74:	b.ne	b64 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x7c>  // b.any
 b78:	ldp	x22, x23, [x19, #32]
 b7c:	cmp	x22, x23
 b80:	b.eq	b98 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xb0>  // b.none
 b84:	ldr	x0, [x22, #8]
 b88:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
 b8c:	add	x22, x22, #0x10
 b90:	cmp	x23, x22
 b94:	b.ne	b84 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x9c>  // b.any
 b98:	mov	x0, x19
 b9c:	mov	x1, x21
 ba0:	bl	438 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
 ba4:	mov	x0, x19
 ba8:	mov	x1, x20
 bac:	bl	5e0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
 bb0:	str	wzr, [x19, #136]
 bb4:	str	xzr, [x19, #128]
 bb8:	ldp	x20, x19, [sp, #48]
 bbc:	ldp	x22, x21, [sp, #32]
 bc0:	ldp	x24, x23, [sp, #16]
 bc4:	ldp	x29, x30, [sp], #64
 bc8:	ret

0000000000000bcc <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>:
 bcc:	ldr	x8, [x1, #8]
 bd0:	ldr	x8, [x8]
 bd4:	ldr	w9, [x8, #312]
 bd8:	cbz	w9, bec <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
 bdc:	ldrb	w8, [x8, #329]
 be0:	cmp	w8, #0x0
 be4:	cset	w0, ne  // ne = any
 be8:	ret
 bec:	ldr	w9, [x8, #184]
 bf0:	ldrb	w8, [x8, #329]
 bf4:	cmp	w9, #0x0
 bf8:	cset	w9, eq  // eq = none
 bfc:	cmp	w8, #0x0
 c00:	cset	w8, ne  // ne = any
 c04:	orr	w0, w9, w8
 c08:	ret

0000000000000c0c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>:
 c0c:	stp	x29, x30, [sp, #-48]!
 c10:	str	x21, [sp, #16]
 c14:	stp	x20, x19, [sp, #32]
 c18:	mov	x29, sp
 c1c:	ldr	x21, [x1, #8]
 c20:	mov	x20, x1
 c24:	mov	x19, x0
 c28:	ldr	x0, [x0, #24]
 c2c:	ldr	x1, [x21, #800]
 c30:	bl	0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>
 c34:	ldr	x8, [x21]
 c38:	ldrb	w9, [x8, #324]
 c3c:	cbnz	w9, c48 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3c>
 c40:	ldrb	w8, [x8, #325]
 c44:	cbz	w8, c60 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x54>
 c48:	ldr	x0, [x19, #8]
 c4c:	mov	x1, x20
 c50:	ldr	x8, [x0]
 c54:	ldr	x8, [x8, #24]
 c58:	blr	x8
 c5c:	str	w0, [x21, #796]
 c60:	ldr	w8, [x21, #784]
 c64:	cmp	w8, #0x1
 c68:	b.eq	ca4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x98>  // b.none
 c6c:	ldr	x9, [x21]
 c70:	ldrb	w10, [x9, #324]
 c74:	cbnz	w10, c80 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x74>
 c78:	ldrb	w9, [x9, #325]
 c7c:	cbz	w9, d38 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x12c>
 c80:	ldr	x8, [x20, #8]
 c84:	ldr	x0, [x19, #8]
 c88:	ldr	w1, [x8, #796]
 c8c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 c90:	ldp	w8, w9, [x0, #4]
 c94:	ldr	w10, [x0]
 c98:	add	w8, w9, w8
 c9c:	cmp	w10, w8
 ca0:	b.ls	d34 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x128>  // b.plast
 ca4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 ca8:	ldr	x8, [x8]
 cac:	ldrb	w8, [x8]
 cb0:	cbz	w8, cf8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xec>
 cb4:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 cb8:	add	x0, x0, #0x0
 cbc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 cc0:	tbz	w0, #0, cf8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xec>
 cc4:	bl	0 <_ZN4llvm4dbgsEv>
 cc8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 ccc:	add	x1, x1, #0x0
 cd0:	mov	w2, #0x14                  	// #20
 cd4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 cd8:	ldr	w1, [x20]
 cdc:	mov	x21, x0
 ce0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 ce4:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 ce8:	add	x1, x1, #0x0
 cec:	mov	w2, #0x10                  	// #16
 cf0:	mov	x0, x21
 cf4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 cf8:	ldp	x1, x8, [x19, #40]
 cfc:	cmp	x1, x8
 d00:	b.eq	d20 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>  // b.none
 d04:	ldr	q0, [x20]
 d08:	mov	w0, wzr
 d0c:	str	q0, [x1]
 d10:	ldr	x8, [x19, #40]
 d14:	add	x8, x8, #0x10
 d18:	str	x8, [x19, #40]
 d1c:	b	f10 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x304>
 d20:	add	x0, x19, #0x20
 d24:	mov	x2, x20
 d28:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 d2c:	mov	w0, wzr
 d30:	b	f10 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x304>
 d34:	ldr	w8, [x21, #784]
 d38:	cmp	w8, #0x2
 d3c:	b.eq	d80 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x174>  // b.none
 d40:	ldr	x9, [x21]
 d44:	ldrb	w10, [x9, #324]
 d48:	cbnz	w10, d54 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x148>
 d4c:	ldrb	w9, [x9, #325]
 d50:	cbz	w9, e1c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x210>
 d54:	ldr	x8, [x20, #8]
 d58:	ldr	x0, [x19, #8]
 d5c:	ldr	w1, [x8, #796]
 d60:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 d64:	ldr	w8, [x0, #4]
 d68:	cbz	w8, e18 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x20c>
 d6c:	ldr	w9, [x0, #8]
 d70:	ldr	w10, [x0]
 d74:	add	w8, w9, w8
 d78:	cmp	w8, w10
 d7c:	b.ne	e18 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x20c>  // b.any
 d80:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 d84:	ldr	x8, [x8]
 d88:	ldrb	w8, [x8]
 d8c:	cbz	w8, dd4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1c8>
 d90:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 d94:	add	x0, x0, #0x0
 d98:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 d9c:	tbz	w0, #0, dd4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1c8>
 da0:	bl	0 <_ZN4llvm4dbgsEv>
 da4:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 da8:	add	x1, x1, #0x0
 dac:	mov	w2, #0x14                  	// #20
 db0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 db4:	ldr	w1, [x20]
 db8:	mov	x21, x0
 dbc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 dc0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 dc4:	add	x1, x1, #0x0
 dc8:	mov	w2, #0x13                  	// #19
 dcc:	mov	x0, x21
 dd0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 dd4:	ldp	x1, x8, [x19, #64]
 dd8:	cmp	x1, x8
 ddc:	b.eq	df8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1ec>  // b.none
 de0:	ldr	q0, [x20]
 de4:	str	q0, [x1]
 de8:	ldr	x8, [x19, #64]
 dec:	add	x8, x8, #0x10
 df0:	str	x8, [x19, #64]
 df4:	b	e04 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1f8>
 df8:	add	x0, x19, #0x38
 dfc:	mov	x2, x20
 e00:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 e04:	ldr	w8, [x19, #136]
 e08:	mov	w0, wzr
 e0c:	add	w8, w8, #0x1
 e10:	str	w8, [x19, #136]
 e14:	b	f10 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x304>
 e18:	ldr	w8, [x21, #784]
 e1c:	cmp	w8, #0x3
 e20:	b.ne	f20 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x314>  // b.any
 e24:	ldr	x8, [x21]
 e28:	ldrb	w9, [x8, #324]
 e2c:	cbnz	w9, e38 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x22c>
 e30:	ldrb	w8, [x8, #325]
 e34:	cbz	w8, e58 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x24c>
 e38:	ldr	x8, [x20, #8]
 e3c:	ldr	x0, [x19, #8]
 e40:	ldr	w1, [x8, #796]
 e44:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 e48:	ldr	w8, [x0, #8]
 e4c:	ldr	w9, [x0]
 e50:	cmp	w8, w9
 e54:	b.ne	f20 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x314>  // b.any
 e58:	ldr	x8, [x20, #8]
 e5c:	ldr	x8, [x8]
 e60:	ldr	w9, [x8, #312]
 e64:	cbz	w9, e74 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x268>
 e68:	ldrb	w8, [x8, #329]
 e6c:	cbnz	w8, f0c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x300>
 e70:	b	e88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x27c>
 e74:	ldr	w9, [x8, #184]
 e78:	mov	w0, #0x1                   	// #1
 e7c:	cbz	w9, f10 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x304>
 e80:	ldrb	w8, [x8, #329]
 e84:	cbnz	w8, f10 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x304>
 e88:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 e8c:	ldr	x8, [x8]
 e90:	ldrb	w8, [x8]
 e94:	cbz	w8, edc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2d0>
 e98:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 e9c:	add	x0, x0, #0x0
 ea0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 ea4:	tbz	w0, #0, edc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2d0>
 ea8:	bl	0 <_ZN4llvm4dbgsEv>
 eac:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 eb0:	add	x1, x1, #0x0
 eb4:	mov	w2, #0x14                  	// #20
 eb8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 ebc:	ldr	w1, [x20]
 ec0:	mov	x21, x0
 ec4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 ec8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 ecc:	add	x1, x1, #0x0
 ed0:	mov	w2, #0x11                  	// #17
 ed4:	mov	x0, x21
 ed8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 edc:	ldp	x1, x8, [x19, #88]
 ee0:	cmp	x1, x8
 ee4:	b.eq	f00 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2f4>  // b.none
 ee8:	ldr	q0, [x20]
 eec:	str	q0, [x1]
 ef0:	ldr	x8, [x19, #88]
 ef4:	add	x8, x8, #0x10
 ef8:	str	x8, [x19, #88]
 efc:	b	f0c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x300>
 f00:	add	x0, x19, #0x50
 f04:	mov	x2, x20
 f08:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 f0c:	mov	w0, #0x1                   	// #1
 f10:	ldp	x20, x19, [sp, #32]
 f14:	ldr	x21, [sp, #16]
 f18:	ldp	x29, x30, [sp], #48
 f1c:	ret
 f20:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 f24:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 f28:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 f2c:	add	x0, x0, #0x0
 f30:	add	x1, x1, #0x0
 f34:	add	x3, x3, #0x0
 f38:	mov	w2, #0x143                 	// #323
 f3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	stur	w1, [x29, #-4]
  18:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  1c:	tbz	w0, #0, 5c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x5c>
  20:	add	x0, x19, #0x20
  24:	sub	x1, x29, #0x4
  28:	add	x2, x29, #0x18
  2c:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  30:	ldr	x8, [x19, #40]
  34:	ldr	w9, [x19, #56]
  38:	ldr	x10, [x29, #24]
  3c:	tst	w0, #0x1
  40:	ldr	x19, [sp, #32]
  44:	add	x8, x8, x9, lsl #4
  48:	csel	x8, x10, x8, ne  // ne = any
  4c:	ldr	x0, [x8, #8]
  50:	ldp	x29, x30, [sp, #16]
  54:	add	sp, sp, #0x30
  58:	ret
  5c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  60:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  64:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x11c                 	// #284
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_+0x58>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	6c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_+0x6c>  // b.hs, b.nlast
  38:	ldr	x9, [x19]
  3c:	add	x8, x8, #0x1
  40:	str	w8, [x19, #8]
  44:	ldp	x20, x19, [sp, #16]
  48:	add	x9, x9, x8, lsl #4
  4c:	sub	x0, x9, #0x10
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	mov	x0, x19
  5c:	mov	x1, xzr
  60:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_>
  64:	ldr	w8, [x19, #8]
  68:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_+0x20>
  6c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_>
  70:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_>
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRS2_EEES5_DpOT_>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm>:
   0:	ldp	x9, x8, [x0]
   4:	sub	x10, x8, x9
   8:	asr	x10, x10, #4
   c:	cmp	x10, x1
  10:	b.cs	1c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm+0x1c>  // b.hs, b.nlast
  14:	sub	x1, x1, x10
  18:	b	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm>
  1c:	b.ls	30 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm+0x30>  // b.plast
  20:	add	x9, x9, x1, lsl #4
  24:	cmp	x9, x8
  28:	b.eq	30 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm+0x30>  // b.none
  2c:	str	x9, [x0, #8]
  30:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x23, [x0]
  20:	ldr	w24, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x19, x2
  2c:	sub	x9, x1, x23
  30:	add	x8, x23, x24, lsl #4
  34:	mov	x22, x0
  38:	cmp	x8, x1
  3c:	asr	x26, x9, #4
  40:	b.eq	120 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x120>  // b.none
  44:	cmp	x23, x1
  48:	b.hi	1e4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1e4>  // b.pmore
  4c:	cmp	x8, x1
  50:	b.cc	204 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x204>  // b.lo, b.ul, b.last
  54:	ldr	w8, [x22, #12]
  58:	sub	x25, x21, x19
  5c:	add	x1, x24, x25, asr #4
  60:	asr	x27, x25, #4
  64:	cmp	x1, x8
  68:	b.ls	7c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x7c>  // b.plast
  6c:	mov	x0, x22
  70:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  74:	ldr	x23, [x22]
  78:	ldr	w24, [x22, #8]
  7c:	add	x20, x23, x26, lsl #4
  80:	add	x2, x23, x24, lsl #4
  84:	sub	x9, x2, x20
  88:	asr	x8, x9, #4
  8c:	cmp	x8, x27
  90:	b.cs	13c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x13c>  // b.hs, b.nlast
  94:	ldr	w11, [x22, #12]
  98:	add	x10, x27, x24
  9c:	cmp	x10, x11
  a0:	b.hi	224 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x224>  // b.pmore
  a4:	cmp	x26, x24
  a8:	str	w10, [x22, #8]
  ac:	b.eq	d8 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xd8>  // b.none
  b0:	add	x10, x23, w10, uxtw #4
  b4:	lsl	x11, x24, #4
  b8:	sub	x10, x10, x8, lsl #4
  bc:	sub	x11, x11, x26, lsl #4
  c0:	mov	x12, x20
  c4:	ldr	q0, [x12], #16
  c8:	subs	x11, x11, #0x10
  cc:	str	q0, [x10]
  d0:	add	x10, x10, #0x10
  d4:	b.ne	c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xc4>  // b.any
  d8:	cbz	x9, 100 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x100>
  dc:	mov	x9, x20
  e0:	ldr	w10, [x19]
  e4:	subs	x8, x8, #0x1
  e8:	str	w10, [x9]
  ec:	ldr	x10, [x19, #8]
  f0:	add	x19, x19, #0x10
  f4:	str	x10, [x9, #8]
  f8:	add	x9, x9, #0x10
  fc:	b.ne	e0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xe0>  // b.any
 100:	cmp	x19, x21
 104:	b.eq	1c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1c4>  // b.none
 108:	ldr	q0, [x19], #16
 10c:	cmp	x21, x19
 110:	str	q0, [x2]
 114:	add	x2, x2, #0x10
 118:	b.ne	108 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x108>  // b.any
 11c:	b	1c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1c4>
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	mov	x2, x21
 12c:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 130:	ldr	x8, [x22]
 134:	add	x20, x8, x26, lsl #4
 138:	b	1c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1c4>
 13c:	sub	x21, x2, x27, lsl #4
 140:	mov	x0, x22
 144:	mov	x1, x21
 148:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 14c:	sub	x8, x21, x20
 150:	cmp	x8, #0x1
 154:	b.lt	18c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x18c>  // b.tstop
 158:	lsr	x8, x8, #4
 15c:	add	x9, x23, x24, lsl #4
 160:	add	x8, x8, #0x1
 164:	sub	x9, x9, #0x8
 168:	neg	x10, x27, lsl #4
 16c:	add	x11, x9, x10
 170:	ldur	w12, [x11, #-8]
 174:	sub	x8, x8, #0x1
 178:	cmp	x8, #0x1
 17c:	stur	w12, [x9, #-8]
 180:	ldr	x11, [x11]
 184:	str	x11, [x9], #-16
 188:	b.gt	16c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x16c>
 18c:	cmp	x25, #0x1
 190:	b.lt	1c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1c4>  // b.tstop
 194:	lsr	x8, x25, #4
 198:	add	x8, x8, #0x1
 19c:	mov	x9, x20
 1a0:	ldr	w10, [x19]
 1a4:	sub	x8, x8, #0x1
 1a8:	cmp	x8, #0x1
 1ac:	str	w10, [x9]
 1b0:	ldr	x10, [x19, #8]
 1b4:	add	x19, x19, #0x10
 1b8:	str	x10, [x9, #8]
 1bc:	add	x9, x9, #0x10
 1c0:	b.gt	1a0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1a0>
 1c4:	mov	x0, x20
 1c8:	ldp	x20, x19, [sp, #80]
 1cc:	ldp	x22, x21, [sp, #64]
 1d0:	ldp	x24, x23, [sp, #48]
 1d4:	ldp	x26, x25, [sp, #32]
 1d8:	ldr	x27, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #96
 1e0:	ret
 1e4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 1e8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 1ec:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x24e                 	// #590
 200:	bl	0 <__assert_fail>
 204:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 20c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x24f                 	// #591
 220:	bl	0 <__assert_fail>
 224:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 228:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 22c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 230:	add	x0, x0, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x3, x3, #0x0
 23c:	mov	w2, #0x43                  	// #67
 240:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_+0x58>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	6c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_+0x6c>  // b.hs, b.nlast
  38:	ldr	x9, [x19]
  3c:	add	x8, x8, #0x1
  40:	str	w8, [x19, #8]
  44:	ldp	x20, x19, [sp, #16]
  48:	add	x9, x9, x8, lsl #4
  4c:	sub	x0, x9, #0x10
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	mov	x0, x19
  5c:	mov	x1, xzr
  60:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_>
  64:	ldr	w8, [x19, #8]
  68:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_+0x20>
  6c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_>
  70:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_>
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_:

0000000000000000 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>:
   0:	ldr	x11, [x1, #8]
   4:	ldr	w8, [x1]
   8:	mov	w9, wzr
   c:	ldr	w10, [x11, #24]
  10:	cbz	w10, 40 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x40>
  14:	ldr	x11, [x11, #16]
  18:	add	x10, x10, x10, lsl #4
  1c:	lsl	x10, x10, #3
  20:	add	x11, x11, #0x40
  24:	ldur	x12, [x11, #-32]
  28:	ldr	w13, [x11], #136
  2c:	cmp	x12, #0x0
  30:	add	w9, w13, w9
  34:	cinc	w9, w9, ne  // ne = any
  38:	subs	x10, x10, #0x88
  3c:	b.ne	24 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x24>  // b.any
  40:	ldr	x13, [x2, #8]
  44:	ldr	w10, [x2]
  48:	sub	w9, w8, w9
  4c:	mov	w11, wzr
  50:	ldr	w12, [x13, #24]
  54:	cbz	w12, 84 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x84>
  58:	ldr	x13, [x13, #16]
  5c:	add	x12, x12, x12, lsl #4
  60:	lsl	x12, x12, #3
  64:	add	x13, x13, #0x40
  68:	ldur	x14, [x13, #-32]
  6c:	ldr	w15, [x13], #136
  70:	cmp	x14, #0x0
  74:	add	w11, w15, w11
  78:	cinc	w11, w11, ne  // ne = any
  7c:	subs	x12, x12, #0x88
  80:	b.ne	68 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x68>  // b.any
  84:	sub	w11, w10, w11
  88:	cmp	w8, w10
  8c:	cset	w8, cc  // cc = lo, ul, last
  90:	cmp	w9, w11
  94:	cset	w9, lt  // lt = tstop
  98:	csel	w0, w8, w9, eq  // eq = none
  9c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	str	x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	str	w1, [x29, #28]
  14:	cbz	w1, 48 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x48>
  18:	add	x19, x0, #0x20
  1c:	add	x1, x29, #0x1c
  20:	mov	x2, sp
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  2c:	tbz	w0, #0, 50 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x50>
  30:	ldr	w8, [x19, #24]
  34:	ldp	x10, x9, [x19]
  38:	ldr	x12, [sp]
  3c:	add	x11, x9, x8, lsl #4
  40:	str	x12, [sp, #48]
  44:	b	60 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x60>
  48:	mov	w0, wzr
  4c:	b	80 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x80>
  50:	ldr	w8, [x19, #24]
  54:	ldp	x10, x9, [x19]
  58:	add	x11, x9, x8, lsl #4
  5c:	str	x11, [sp, #48]
  60:	add	x8, x9, x8, lsl #4
  64:	add	x0, sp, #0x20
  68:	mov	x1, sp
  6c:	stp	x19, x10, [sp, #32]
  70:	str	x11, [sp, #56]
  74:	stp	x19, x10, [sp]
  78:	stp	x8, x8, [sp, #16]
  7c:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  80:	ldr	x19, [sp, #80]
  84:	ldp	x29, x30, [sp, #64]
  88:	and	w0, w0, #0x1
  8c:	add	sp, sp, #0x60
  90:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 48 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x48>
  10:	ldr	w9, [x1]
  14:	cmn	w9, #0x2
  18:	b.cs	ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0xac>  // b.hs, b.nlast
  1c:	ldr	x10, [x0, #8]
  20:	mov	w11, #0x25                  	// #37
  24:	mul	w12, w9, w11
  28:	sub	w11, w8, #0x1
  2c:	and	w12, w12, w11
  30:	add	x8, x10, w12, uxtw #4
  34:	ldr	w14, [x8]
  38:	cmp	w9, w14
  3c:	b.ne	5c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x5c>  // b.any
  40:	mov	w0, #0x1                   	// #1
  44:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x50>
  48:	mov	x8, xzr
  4c:	mov	w0, wzr
  50:	str	x8, [x2]
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	mov	x13, xzr
  60:	mov	w15, #0x1                   	// #1
  64:	mov	w0, #0x1                   	// #1
  68:	cmn	w14, #0x1
  6c:	b.eq	9c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x9c>  // b.none
  70:	cmn	w14, #0x2
  74:	add	w12, w12, w15
  78:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  7c:	and	w12, w12, w11
  80:	csel	x13, x13, x8, ne  // ne = any
  84:	add	x8, x10, w12, uxtw #4
  88:	ldr	w14, [x8]
  8c:	add	w15, w15, #0x1
  90:	cmp	w9, w14
  94:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x50>  // b.none
  98:	b	68 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x68>
  9c:	cmp	x13, #0x0
  a0:	mov	w0, wzr
  a4:	csel	x8, x8, x13, eq  // eq = none
  a8:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x50>
  ac:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  b0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  b4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x252                 	// #594
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag>:
   0:	sub	x8, x1, x0
   4:	cmp	x8, #0x199
   8:	b.lt	94 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x94>  // b.tstop
   c:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  10:	movk	x9, #0xf0f1
  14:	umulh	x8, x8, x9
  18:	lsr	x8, x8, #9
  1c:	add	x8, x8, #0x1
  20:	ldr	x9, [x0, #32]
  24:	ldr	w10, [x0, #64]
  28:	cmp	x9, #0x0
  2c:	csetm	w9, ne  // ne = any
  30:	cmp	w10, w9
  34:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
  38:	ldr	x9, [x0, #168]
  3c:	ldr	w10, [x0, #200]
  40:	cmp	x9, #0x0
  44:	csetm	w9, ne  // ne = any
  48:	cmp	w10, w9
  4c:	b.ne	114 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x114>  // b.any
  50:	ldr	x9, [x0, #304]
  54:	ldr	w10, [x0, #336]
  58:	cmp	x9, #0x0
  5c:	csetm	w9, ne  // ne = any
  60:	cmp	w10, w9
  64:	b.ne	11c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x11c>  // b.any
  68:	ldr	x9, [x0, #440]
  6c:	ldr	w10, [x0, #472]
  70:	cmp	x9, #0x0
  74:	csetm	w9, ne  // ne = any
  78:	cmp	w10, w9
  7c:	b.ne	124 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x124>  // b.any
  80:	sub	x8, x8, #0x1
  84:	cmp	x8, #0x1
  88:	add	x0, x0, #0x220
  8c:	b.gt	20 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x20>
  90:	sub	x8, x1, x0
  94:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  98:	asr	x8, x8, #3
  9c:	movk	x9, #0xf0f1
  a0:	mul	x8, x8, x9
  a4:	cmp	x8, #0x1
  a8:	b.eq	f4 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xf4>  // b.none
  ac:	cmp	x8, #0x2
  b0:	b.eq	d8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xd8>  // b.none
  b4:	cmp	x8, #0x3
  b8:	b.ne	10c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x10c>  // b.any
  bc:	ldr	x8, [x0, #32]
  c0:	ldr	w9, [x0, #64]
  c4:	cmp	x8, #0x0
  c8:	csetm	w8, ne  // ne = any
  cc:	cmp	w9, w8
  d0:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
  d4:	add	x0, x0, #0x88
  d8:	ldr	x8, [x0, #32]
  dc:	ldr	w9, [x0, #64]
  e0:	cmp	x8, #0x0
  e4:	csetm	w8, ne  // ne = any
  e8:	cmp	w9, w8
  ec:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
  f0:	add	x0, x0, #0x88
  f4:	ldr	x8, [x0, #32]
  f8:	ldr	w9, [x0, #64]
  fc:	cmp	x8, #0x0
 100:	csetm	w8, ne  // ne = any
 104:	cmp	w9, w8
 108:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
 10c:	mov	x0, x1
 110:	ret
 114:	add	x0, x0, #0x88
 118:	ret
 11c:	add	x0, x0, #0x110
 120:	ret
 124:	add	x0, x0, #0x198
 128:	ret

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	stur	w1, [x29, #-4]
  18:	bl	0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  1c:	tbz	w0, #0, 60 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x60>
  20:	add	x19, x19, #0x20
  24:	sub	x1, x29, #0x4
  28:	add	x2, x29, #0x18
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  34:	tbz	w0, #0, 40 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x40>
  38:	ldr	x8, [x29, #24]
  3c:	b	4c <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x4c>
  40:	ldr	x8, [x19, #8]
  44:	ldr	w9, [x19, #24]
  48:	add	x8, x8, x9, lsl #4
  4c:	ldr	x0, [x8, #8]
  50:	ldr	x19, [sp, #32]
  54:	ldp	x29, x30, [sp, #16]
  58:	add	sp, sp, #0x30
  5c:	ret
  60:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  64:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  68:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x117                 	// #279
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  48:	ldr	q0, [x24]
  4c:	subs	x8, x21, x22
  50:	mov	x23, x0
  54:	str	q0, [x0, x8]
  58:	mov	x8, x0
  5c:	b.eq	7c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x7c>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	q0, [x9], #16
  6c:	cmp	x21, x9
  70:	str	q0, [x8]
  74:	add	x8, x8, #0x10
  78:	b.ne	68 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>  // b.any
  7c:	cmp	x25, x21
  80:	add	x24, x8, #0x10
  84:	b.eq	9c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x9c>  // b.none
  88:	ldr	q0, [x21], #16
  8c:	cmp	x25, x21
  90:	str	q0, [x24]
  94:	add	x24, x24, #0x10
  98:	b.ne	88 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>  // b.any
  9c:	cbz	x22, a8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa8>
  a0:	mov	x0, x22
  a4:	bl	0 <_ZdlPv>
  a8:	add	x8, x23, x20, lsl #4
  ac:	stp	x23, x24, [x19]
  b0:	str	x8, [x19, #16]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldr	x25, [sp, #16]
  c4:	ldp	x29, x30, [sp], #80
  c8:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm3mca7InstRefESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm3mca7InstRefESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  14:	sub	x10, x8, x9, asr #4
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIN4llvm3mca7InstRefESaIS2_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #4
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #59
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm3mca7InstRefESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm3mca7InstRefESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIN4llvm3mca7InstRefESaIS2_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #59
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIN4llvm3mca7InstRefESaIS2_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #4
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, e4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xe4>
  18:	ldp	x8, x9, [x0, #8]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	sub	x9, x9, x8
  28:	cmp	x1, x9, asr #4
  2c:	b.ls	cc <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xcc>  // b.plast
  30:	ldr	x9, [x19]
  34:	adrp	x2, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
  38:	add	x2, x2, #0x0
  3c:	mov	x0, x19
  40:	sub	x8, x8, x9
  44:	mov	x1, x20
  48:	asr	x24, x8, #4
  4c:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
  50:	mov	x21, x0
  54:	mov	x0, x19
  58:	mov	x1, x21
  5c:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
  60:	mov	x22, x0
  64:	add	x23, x0, x24, lsl #4
  68:	lsl	x8, x24, #4
  6c:	mov	x9, x20
  70:	add	x10, x22, x8
  74:	subs	x9, x9, #0x1
  78:	add	x8, x8, #0x10
  7c:	str	wzr, [x10]
  80:	str	xzr, [x10, #8]
  84:	b.ne	70 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x70>  // b.any
  88:	ldp	x0, x8, [x19]
  8c:	cmp	x0, x8
  90:	b.eq	b0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xb0>  // b.none
  94:	mov	x9, x22
  98:	ldr	q0, [x0], #16
  9c:	cmp	x8, x0
  a0:	str	q0, [x9]
  a4:	add	x9, x9, #0x10
  a8:	b.ne	98 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x98>  // b.any
  ac:	ldr	x0, [x19]
  b0:	cbz	x0, b8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xb8>
  b4:	bl	0 <_ZdlPv>
  b8:	add	x8, x23, x20, lsl #4
  bc:	add	x9, x22, x21, lsl #4
  c0:	stp	x22, x8, [x19]
  c4:	str	x9, [x19, #16]
  c8:	b	e4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xe4>
  cc:	str	wzr, [x8]
  d0:	str	xzr, [x8, #8]
  d4:	subs	x20, x20, #0x1
  d8:	add	x8, x8, #0x10
  dc:	b.ne	cc <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xcc>  // b.any
  e0:	str	x8, [x19, #8]
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x24, x23, [sp, #16]
  f0:	ldp	x29, x30, [sp], #64
  f4:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x10, x2, x1
  18:	asr	x22, x10, #4
  1c:	mov	x20, x2
  20:	sub	x9, x9, x8
  24:	mov	x21, x1
  28:	mov	x19, x0
  2c:	cmp	x22, x9
  30:	b.ls	44 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_+0x44>  // b.plast
  34:	add	x1, x22, x8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_>
  40:	ldr	w8, [x19, #8]
  44:	cmp	x21, x20
  48:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_+0x6c>  // b.none
  4c:	ldr	x9, [x19]
  50:	add	x8, x9, x8, lsl #4
  54:	ldr	q0, [x21], #16
  58:	cmp	x20, x21
  5c:	str	q0, [x8]
  60:	add	x8, x8, #0x10
  64:	b.ne	54 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_+0x54>  // b.any
  68:	ldr	w8, [x19, #8]
  6c:	ldr	w9, [x19, #12]
  70:	add	x8, x22, x8
  74:	cmp	x8, x9
  78:	b.hi	90 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_+0x90>  // b.pmore
  7c:	str	w8, [x19, #8]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x22, x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_>
  94:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_>
  98:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEEvT_SC_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x43                  	// #67
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x10, x2, x1
  18:	asr	x22, x10, #4
  1c:	mov	x20, x2
  20:	sub	x9, x9, x8
  24:	mov	x21, x1
  28:	mov	x19, x0
  2c:	cmp	x22, x9
  30:	b.ls	44 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_+0x44>  // b.plast
  34:	add	x1, x22, x8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_>
  40:	ldr	w8, [x19, #8]
  44:	cmp	x21, x20
  48:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_+0x6c>  // b.none
  4c:	ldr	x9, [x19]
  50:	add	x8, x9, x8, lsl #4
  54:	ldr	q0, [x21], #16
  58:	cmp	x20, x21
  5c:	str	q0, [x8]
  60:	add	x8, x8, #0x10
  64:	b.ne	54 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_+0x54>  // b.any
  68:	ldr	w8, [x19, #8]
  6c:	ldr	w9, [x19, #12]
  70:	add	x8, x22, x8
  74:	cmp	x8, x9
  78:	b.hi	90 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_+0x90>  // b.pmore
  7c:	str	w8, [x19, #8]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x22, x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_>
  94:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_>
  98:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6appendISt13move_iteratorIPS2_EvEEvT_S8_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x43                  	// #67
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  48:	ldr	q0, [x24]
  4c:	subs	x8, x21, x22
  50:	mov	x23, x0
  54:	str	q0, [x0, x8]
  58:	mov	x8, x0
  5c:	b.eq	7c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x7c>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	q0, [x9], #16
  6c:	cmp	x21, x9
  70:	str	q0, [x8]
  74:	add	x8, x8, #0x10
  78:	b.ne	68 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>  // b.any
  7c:	cmp	x25, x21
  80:	add	x24, x8, #0x10
  84:	b.eq	9c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x9c>  // b.none
  88:	ldr	q0, [x21], #16
  8c:	cmp	x25, x21
  90:	str	q0, [x24]
  94:	add	x24, x24, #0x10
  98:	b.ne	88 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>  // b.any
  9c:	cbz	x22, a8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa8>
  a0:	mov	x0, x22
  a4:	bl	0 <_ZdlPv>
  a8:	add	x8, x23, x20, lsl #4
  ac:	stp	x23, x24, [x19]
  b0:	str	x8, [x19, #16]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldr	x25, [sp, #16]
  c4:	ldp	x29, x30, [sp], #80
  c8:	ret

InstrBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      10:	ldr	d0, [x8]
      14:	add	x8, x0, #0x30
      18:	mov	x20, x0
      1c:	mov	x19, x0
      20:	stp	x1, x2, [x0]
      24:	stp	x3, x4, [x0, #16]
      28:	str	x8, [x20, #32]!
      2c:	str	d0, [x0, #40]
      30:	str	xzr, [x0, #112]!
      34:	mov	w1, wzr
      38:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      3c:	mov	x0, x19
      40:	str	xzr, [x0, #144]!
      44:	mov	w1, wzr
      48:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      4c:	ldr	x8, [x19]
      50:	mov	w9, #0x101                 	// #257
      54:	strh	w9, [x19, #176]
      58:	mov	x0, x20
      5c:	ldr	x8, [x8, #152]
      60:	ldr	w1, [x8, #48]
      64:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      68:	ldr	x8, [x19]
      6c:	ldr	x1, [x20]
      70:	ldr	w2, [x19, #40]
      74:	ldp	x20, x19, [sp, #16]
      78:	ldr	x0, [x8, #152]
      7c:	ldp	x29, x30, [sp], #32
      80:	b	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>

0000000000000084 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>:
      84:	sub	sp, sp, #0xb0
      88:	stp	x29, x30, [sp, #80]
      8c:	stp	x28, x27, [sp, #96]
      90:	stp	x26, x25, [sp, #112]
      94:	stp	x24, x23, [sp, #128]
      98:	stp	x22, x21, [sp, #144]
      9c:	stp	x20, x19, [sp, #160]
      a0:	add	x29, sp, #0x50
      a4:	ldr	x8, [x0, #8]
      a8:	ldr	w19, [x2]
      ac:	ldr	w9, [x8, #24]
      b0:	cmp	w9, w19
      b4:	b.ls	7a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x724>  // b.plast
      b8:	ldr	x9, [x0]
      bc:	stur	x0, [x29, #-24]
      c0:	ldr	x21, [x8]
      c4:	mov	x20, x1
      c8:	ldr	x0, [x9, #152]
      cc:	mov	w1, w3
      d0:	mov	x22, x2
      d4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      d8:	add	x10, x21, x19, lsl #6
      dc:	mov	x9, x10
      e0:	ldr	x8, [x9, #32]!
      e4:	ldurb	w27, [x9, #-28]
      e8:	stur	x9, [x29, #-32]
      ec:	cbz	x8, 104 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x80>
      f0:	mov	w28, #0xffffffff            	// #-1
      f4:	add	w28, w28, #0x1
      f8:	ldrh	w9, [x8, w28, uxtw #1]
      fc:	cbnz	w9, f4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x70>
     100:	b	108 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x84>
     104:	mov	w28, wzr
     108:	ldrh	w8, [x0, #16]
     10c:	stp	x0, x8, [x29, #-16]
     110:	ldr	w8, [x10, #8]!
     114:	ldr	w9, [x22, #24]
     118:	mov	x0, x20
     11c:	str	x10, [sp, #24]
     120:	mov	x11, x10
     124:	ldrh	w10, [x11, #-6]!
     128:	ubfx	w8, w8, #2, #1
     12c:	str	x11, [sp, #8]
     130:	add	w11, w28, w27
     134:	add	w8, w8, w11
     138:	sub	w9, w9, w10
     13c:	add	w1, w8, w9
     140:	str	w11, [sp, #20]
     144:	str	w9, [sp, #36]
     148:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     14c:	mov	w25, wzr
     150:	str	x22, [sp, #40]
     154:	cbz	w27, 2dc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x258>
     158:	ldr	w8, [x22, #24]
     15c:	ldur	x13, [x29, #-16]
     160:	cbz	w8, 2e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x25c>
     164:	mov	x21, xzr
     168:	mov	x23, xzr
     16c:	mov	w25, wzr
     170:	mov	w19, #0x14                  	// #20
     174:	ldr	x9, [x22, #16]
     178:	ldrb	w9, [x9, x21]
     17c:	cmp	w9, #0x1
     180:	b.ne	2bc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x238>  // b.any
     184:	ldr	w8, [x20, #8]
     188:	cmp	w8, w25
     18c:	b.ls	728 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6a4>  // b.plast
     190:	ldr	x22, [x20]
     194:	ldur	x8, [x29, #-8]
     198:	mov	w26, w25
     19c:	umaddl	x24, w25, w19, x22
     1a0:	cmp	w25, w8
     1a4:	str	w23, [x24]
     1a8:	b.cs	1e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x15c>  // b.hs, b.nlast
     1ac:	ldrh	w8, [x13, #16]
     1b0:	cmp	w25, w8
     1b4:	b.cs	768 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6e4>  // b.hs, b.nlast
     1b8:	ldur	x8, [x29, #-24]
     1bc:	ldrh	w9, [x13, #14]
     1c0:	ldr	x8, [x8]
     1c4:	add	w9, w25, w9
     1c8:	lsl	x10, x9, #2
     1cc:	ldr	x8, [x8, #136]
     1d0:	ldrsh	w10, [x8, x10]
     1d4:	tbnz	w10, #31, 1f4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x170>
     1d8:	and	w10, w10, #0xffff
     1dc:	b	1f8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x174>
     1e0:	ldr	w9, [x20, #312]
     1e4:	mov	w8, wzr
     1e8:	madd	x10, x26, x19, x22
     1ec:	str	w9, [x10, #4]
     1f0:	b	208 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x184>
     1f4:	ldr	w10, [x20, #312]
     1f8:	madd	x11, x26, x19, x22
     1fc:	str	w10, [x11, #4]
     200:	add	x8, x8, x9, lsl #2
     204:	ldrh	w8, [x8, #2]
     208:	madd	x9, x26, x19, x22
     20c:	str	w8, [x9, #12]
     210:	strb	wzr, [x9, #16]
     214:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     218:	ldr	x8, [x8]
     21c:	ldrb	w8, [x8]
     220:	cbz	w8, 2ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x228>
     224:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     228:	add	x0, x0, #0x0
     22c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     230:	tbz	w0, #0, 2ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x228>
     234:	bl	0 <_ZN4llvm4dbgsEv>
     238:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     23c:	mov	w2, #0x11                  	// #17
     240:	add	x1, x1, #0x0
     244:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     248:	ldrsw	x1, [x24]
     24c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     250:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     254:	mov	w2, #0xa                   	// #10
     258:	add	x1, x1, #0x0
     25c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     260:	madd	x22, x26, x19, x22
     264:	ldr	w1, [x22, #4]
     268:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     26c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     270:	mov	w2, #0x12                  	// #18
     274:	add	x1, x1, #0x0
     278:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     27c:	ldr	w1, [x22, #12]
     280:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     284:	ldp	x9, x8, [x0, #16]
     288:	cmp	x8, x9
     28c:	b.cs	2a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x220>  // b.hs, b.nlast
     290:	add	x9, x8, #0x1
     294:	str	x9, [x0, #24]
     298:	mov	w9, #0xa                   	// #10
     29c:	strb	w9, [x8]
     2a0:	b	2ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x228>
     2a4:	mov	w1, #0xa                   	// #10
     2a8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2ac:	ldr	x22, [sp, #40]
     2b0:	ldur	x13, [x29, #-16]
     2b4:	add	w25, w25, #0x1
     2b8:	ldr	w8, [x22, #24]
     2bc:	cmp	w25, w27
     2c0:	b.cs	2e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x25c>  // b.hs, b.nlast
     2c4:	add	x23, x23, #0x1
     2c8:	mov	w9, w8
     2cc:	cmp	x23, x9
     2d0:	add	x21, x21, #0x10
     2d4:	b.cc	174 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xf0>  // b.lo, b.ul, b.last
     2d8:	b	2e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x25c>
     2dc:	ldur	x13, [x29, #-16]
     2e0:	cmp	w25, w27
     2e4:	b.ne	7c8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x744>  // b.any
     2e8:	cbz	w28, 4ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x428>
     2ec:	add	x8, x27, w27, uxtw #2
     2f0:	mov	w9, #0x14                  	// #20
     2f4:	mov	x25, xzr
     2f8:	mov	x23, xzr
     2fc:	mov	w21, #0xffffffff            	// #-1
     300:	lsl	x26, x8, #2
     304:	umull	x19, w28, w9
     308:	ldr	w8, [x20, #8]
     30c:	add	x9, x27, x23
     310:	cmp	x9, x8
     314:	b.cs	728 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6a4>  // b.hs, b.nlast
     318:	ldr	x22, [x20]
     31c:	ldur	x8, [x29, #-32]
     320:	ldur	x10, [x29, #-8]
     324:	add	x24, x22, x26
     328:	add	x28, x24, x25
     32c:	str	w21, [x28]
     330:	ldr	x8, [x8]
     334:	cmp	x9, x10
     338:	ldrh	w8, [x8, x23, lsl #1]
     33c:	strh	w8, [x28, #8]
     340:	b.cs	37c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2f8>  // b.hs, b.nlast
     344:	ldrh	w10, [x13, #16]
     348:	cmp	x9, x10
     34c:	b.cs	768 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6e4>  // b.hs, b.nlast
     350:	ldur	x9, [x29, #-24]
     354:	ldrh	w10, [x13, #14]
     358:	add	w11, w27, w23
     35c:	ldr	x9, [x9]
     360:	add	w10, w11, w10
     364:	lsl	x11, x10, #2
     368:	ldr	x9, [x9, #136]
     36c:	ldrsh	w11, [x9, x11]
     370:	tbnz	w11, #31, 38c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x308>
     374:	and	w11, w11, #0xffff
     378:	b	390 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x30c>
     37c:	ldr	w10, [x20, #312]
     380:	mov	w9, wzr
     384:	str	w10, [x28, #4]
     388:	b	3a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x320>
     38c:	ldr	w11, [x20, #312]
     390:	add	x12, x22, x26
     394:	add	x12, x12, x25
     398:	str	w11, [x12, #4]
     39c:	add	x9, x9, x10, lsl #2
     3a0:	ldrh	w9, [x9, #2]
     3a4:	add	x10, x22, x26
     3a8:	add	x10, x10, x25
     3ac:	str	w9, [x10, #12]
     3b0:	strb	wzr, [x10, #16]
     3b4:	cbz	w8, 748 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6c4>
     3b8:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     3bc:	ldr	x8, [x8]
     3c0:	ldrb	w8, [x8]
     3c4:	cbz	w8, 498 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x414>
     3c8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     3cc:	add	x0, x0, #0x0
     3d0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     3d4:	ldur	x13, [x29, #-16]
     3d8:	tbz	w0, #0, 498 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x414>
     3dc:	bl	0 <_ZN4llvm4dbgsEv>
     3e0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     3e4:	mov	w2, #0x11                  	// #17
     3e8:	add	x1, x1, #0x0
     3ec:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     3f0:	ldr	w8, [x24, x25]
     3f4:	mvn	w8, w8
     3f8:	sxtw	x1, w8
     3fc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     400:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     404:	mov	w2, #0xa                   	// #10
     408:	add	x1, x1, #0x0
     40c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     410:	ldur	x8, [x29, #-24]
     414:	ldrh	w1, [x28, #8]
     418:	mov	x28, x0
     41c:	ldr	x8, [x8, #16]
     420:	mov	x0, x8
     424:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     428:	mov	x1, x0
     42c:	mov	x0, x28
     430:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     434:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     438:	mov	w2, #0xa                   	// #10
     43c:	add	x1, x1, #0x0
     440:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     444:	add	x8, x22, x26
     448:	add	x22, x8, x25
     44c:	ldr	w1, [x22, #4]
     450:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     454:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     458:	mov	w2, #0x12                  	// #18
     45c:	add	x1, x1, #0x0
     460:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     464:	ldr	w1, [x22, #12]
     468:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     46c:	ldp	x9, x8, [x0, #16]
     470:	cmp	x8, x9
     474:	b.cs	48c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x408>  // b.hs, b.nlast
     478:	add	x9, x8, #0x1
     47c:	str	x9, [x0, #24]
     480:	mov	w9, #0xa                   	// #10
     484:	strb	w9, [x8]
     488:	b	494 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x410>
     48c:	mov	w1, #0xa                   	// #10
     490:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     494:	ldur	x13, [x29, #-16]
     498:	add	x25, x25, #0x14
     49c:	add	x23, x23, #0x1
     4a0:	cmp	x19, x25
     4a4:	sub	w21, w21, #0x1
     4a8:	b.ne	308 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x284>  // b.any
     4ac:	ldr	x23, [sp, #24]
     4b0:	ldr	w24, [sp, #20]
     4b4:	ldrb	w8, [x23]
     4b8:	tbz	w8, #2, 594 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x510>
     4bc:	ldr	w8, [x20, #8]
     4c0:	cmp	w8, w24
     4c4:	b.ls	728 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6a4>  // b.plast
     4c8:	ldr	x8, [sp, #8]
     4cc:	ldr	x9, [x20]
     4d0:	mov	w10, #0x14                  	// #20
     4d4:	ldrh	w8, [x8]
     4d8:	umaddl	x22, w24, w10, x9
     4dc:	mov	w9, #0x1                   	// #1
     4e0:	mov	x21, x22
     4e4:	sub	w8, w8, #0x1
     4e8:	str	w8, [x22]
     4ec:	ldr	w8, [x20, #312]
     4f0:	mov	x19, x22
     4f4:	str	w8, [x21, #4]!
     4f8:	str	wzr, [x19, #12]!
     4fc:	strb	w9, [x22, #16]
     500:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     504:	ldr	x8, [x8]
     508:	ldrb	w8, [x8]
     50c:	cbz	w8, 594 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x510>
     510:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     514:	add	x0, x0, #0x0
     518:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     51c:	tbz	w0, #0, 594 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x510>
     520:	bl	0 <_ZN4llvm4dbgsEv>
     524:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     528:	add	x1, x1, #0x0
     52c:	mov	w2, #0x11                  	// #17
     530:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     534:	ldrsw	x1, [x22]
     538:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     53c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     540:	add	x1, x1, #0x0
     544:	mov	w2, #0xa                   	// #10
     548:	mov	w22, #0xa                   	// #10
     54c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     550:	ldr	w1, [x21]
     554:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     558:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     55c:	add	x1, x1, #0x0
     560:	mov	w2, #0x12                  	// #18
     564:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     568:	ldr	w1, [x19]
     56c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     570:	ldp	x9, x8, [x0, #16]
     574:	cmp	x8, x9
     578:	b.cs	58c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x508>  // b.hs, b.nlast
     57c:	add	x9, x8, #0x1
     580:	str	x9, [x0, #24]
     584:	strb	w22, [x8]
     588:	b	594 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x510>
     58c:	mov	w1, #0xa                   	// #10
     590:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     594:	ldr	w11, [sp, #36]
     598:	cbz	w11, 708 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x684>
     59c:	ldr	x8, [x23]
     5a0:	mov	w9, #0x8c0000              	// #9175040
     5a4:	and	x9, x8, x9
     5a8:	ubfx	w8, w8, #2, #1
     5ac:	cmp	x9, #0x80, lsl #12
     5b0:	add	w19, w8, w24
     5b4:	b.eq	6e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x65c>  // b.none
     5b8:	ldr	x8, [sp, #8]
     5bc:	ldr	x10, [sp, #40]
     5c0:	adrp	x21, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     5c4:	mov	x24, xzr
     5c8:	ldrh	w25, [x8]
     5cc:	mov	w27, #0x14                  	// #20
     5d0:	add	x21, x21, #0x0
     5d4:	lsl	x28, x25, #4
     5d8:	ldr	w8, [x10, #24]
     5dc:	add	x9, x25, x24
     5e0:	cmp	x9, x8
     5e4:	b.cs	788 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x704>  // b.hs, b.nlast
     5e8:	ldr	x8, [x10, #16]
     5ec:	ldrb	w8, [x8, x28]
     5f0:	cmp	w8, #0x1
     5f4:	b.ne	6d0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x64c>  // b.any
     5f8:	ldr	w8, [x20, #8]
     5fc:	cmp	w8, w19
     600:	b.ls	728 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6a4>  // b.plast
     604:	ldr	x8, [x20]
     608:	add	w9, w25, w24
     60c:	umaddl	x23, w19, w27, x8
     610:	str	w9, [x23]
     614:	ldr	w8, [x20, #312]
     618:	mov	x26, x23
     61c:	mov	x22, x23
     620:	add	w19, w19, #0x1
     624:	str	w8, [x26, #4]!
     628:	str	wzr, [x22, #12]!
     62c:	strb	wzr, [x23, #16]
     630:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     634:	ldr	x8, [x8]
     638:	ldrb	w8, [x8]
     63c:	cbz	w8, 6b8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x634>
     640:	mov	x0, x21
     644:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     648:	tbz	w0, #0, 6c8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x644>
     64c:	bl	0 <_ZN4llvm4dbgsEv>
     650:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     654:	mov	w2, #0x11                  	// #17
     658:	add	x1, x1, #0x0
     65c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     660:	ldrsw	x1, [x23]
     664:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     668:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     66c:	mov	w2, #0xa                   	// #10
     670:	add	x1, x1, #0x0
     674:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     678:	ldr	w1, [x26]
     67c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     680:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     684:	mov	w2, #0x12                  	// #18
     688:	add	x1, x1, #0x0
     68c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     690:	ldr	w1, [x22]
     694:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     698:	ldp	x9, x8, [x0, #16]
     69c:	cmp	x8, x9
     6a0:	b.cs	6c0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>  // b.hs, b.nlast
     6a4:	add	x9, x8, #0x1
     6a8:	str	x9, [x0, #24]
     6ac:	mov	w9, #0xa                   	// #10
     6b0:	strb	w9, [x8]
     6b4:	b	6c8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x644>
     6b8:	ldr	x10, [sp, #40]
     6bc:	b	6d0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x64c>
     6c0:	mov	w1, #0xa                   	// #10
     6c4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     6c8:	ldr	x10, [sp, #40]
     6cc:	ldr	w11, [sp, #36]
     6d0:	add	x24, x24, #0x1
     6d4:	cmp	w24, w11
     6d8:	add	x28, x28, #0x10
     6dc:	b.cc	5d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x554>  // b.lo, b.ul, b.last
     6e0:	mov	w1, w19
     6e4:	mov	x0, x20
     6e8:	ldp	x20, x19, [sp, #160]
     6ec:	ldp	x22, x21, [sp, #144]
     6f0:	ldp	x24, x23, [sp, #128]
     6f4:	ldp	x26, x25, [sp, #112]
     6f8:	ldp	x28, x27, [sp, #96]
     6fc:	ldp	x29, x30, [sp, #80]
     700:	add	sp, sp, #0xb0
     704:	b	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     708:	ldp	x20, x19, [sp, #160]
     70c:	ldp	x22, x21, [sp, #144]
     710:	ldp	x24, x23, [sp, #128]
     714:	ldp	x26, x25, [sp, #112]
     718:	ldp	x28, x27, [sp, #96]
     71c:	ldp	x29, x30, [sp, #80]
     720:	add	sp, sp, #0xb0
     724:	ret
     728:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     72c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     730:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     734:	add	x0, x0, #0x0
     738:	add	x1, x1, #0x0
     73c:	add	x3, x3, #0x0
     740:	mov	w2, #0x95                  	// #149
     744:	bl	0 <__assert_fail>
     748:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     74c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     750:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     754:	add	x0, x0, #0x0
     758:	add	x1, x1, #0x0
     75c:	add	x3, x3, #0x0
     760:	mov	w2, #0x166                 	// #358
     764:	bl	0 <__assert_fail>
     768:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     76c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     770:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     774:	add	x0, x0, #0x0
     778:	add	x1, x1, #0x0
     77c:	add	x3, x3, #0x0
     780:	mov	w2, #0xac                  	// #172
     784:	bl	0 <__assert_fail>
     788:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     78c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     790:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     794:	add	x0, x0, #0x0
     798:	add	x1, x1, #0x0
     79c:	add	x3, x3, #0x0
     7a0:	mov	w2, #0x99                  	// #153
     7a4:	bl	0 <__assert_fail>
     7a8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7ac:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7b0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7b4:	add	x0, x0, #0x0
     7b8:	add	x1, x1, #0x0
     7bc:	add	x3, x3, #0x0
     7c0:	mov	w2, #0x2d                  	// #45
     7c4:	bl	0 <__assert_fail>
     7c8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7cc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7d0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7d4:	add	x0, x0, #0x0
     7d8:	add	x1, x1, #0x0
     7dc:	add	x3, x3, #0x0
     7e0:	mov	w2, #0x152                 	// #338
     7e4:	bl	0 <__assert_fail>

00000000000007e8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>:
     7e8:	sub	sp, sp, #0xc0
     7ec:	stp	x29, x30, [sp, #96]
     7f0:	stp	x28, x27, [sp, #112]
     7f4:	stp	x26, x25, [sp, #128]
     7f8:	stp	x24, x23, [sp, #144]
     7fc:	stp	x22, x21, [sp, #160]
     800:	stp	x20, x19, [sp, #176]
     804:	add	x29, sp, #0x60
     808:	ldr	x9, [x0, #8]
     80c:	ldr	w8, [x2]
     810:	stur	w3, [x29, #-20]
     814:	str	x0, [sp, #48]
     818:	ldr	w10, [x9, #24]
     81c:	stur	x1, [x29, #-8]
     820:	cmp	w10, w8
     824:	b.ls	c98 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x4b0>  // b.plast
     828:	ldr	x9, [x9]
     82c:	mov	x20, x2
     830:	add	x11, x9, x8, lsl #6
     834:	mov	x8, x11
     838:	ldrh	w22, [x8, #2]!
     83c:	mov	x19, x8
     840:	str	x8, [sp, #8]
     844:	ldrb	w10, [x19, #2]!
     848:	ldr	x9, [x8, #22]!
     84c:	stur	x8, [x29, #-32]
     850:	sub	w8, w22, w10
     854:	str	w10, [sp, #44]
     858:	cbz	x9, 870 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x88>
     85c:	mov	w27, #0xffffffff            	// #-1
     860:	add	w27, w27, #0x1
     864:	ldrh	w10, [x9, w27, uxtw #1]
     868:	cbnz	w10, 860 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x78>
     86c:	b	874 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x8c>
     870:	mov	w27, wzr
     874:	ldr	x9, [x11, #8]!
     878:	ldr	w10, [x20, #24]
     87c:	sbfx	x24, x9, #2, #1
     880:	add	w21, w8, w24
     884:	sub	w9, w10, w22
     888:	add	w8, w21, w27
     88c:	str	x11, [sp, #32]
     890:	stur	w9, [x29, #-36]
     894:	str	w8, [sp, #4]
     898:	add	w1, w8, w9
     89c:	ldur	x8, [x29, #-8]
     8a0:	add	x0, x8, #0x60
     8a4:	stur	x0, [x29, #-16]
     8a8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     8ac:	str	w22, [sp, #28]
     8b0:	str	x24, [sp, #16]
     8b4:	cbz	w21, 9c4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1dc>
     8b8:	ldrb	w26, [x19]
     8bc:	ldr	w9, [sp, #44]
     8c0:	add	w8, w22, w24
     8c4:	adrp	x24, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     8c8:	mov	x25, xzr
     8cc:	mov	w23, wzr
     8d0:	add	x24, x24, #0x0
     8d4:	sub	w19, w8, w9
     8d8:	lsl	x21, x26, #4
     8dc:	ldr	w8, [x20, #24]
     8e0:	add	x9, x26, x25
     8e4:	cmp	x9, x8
     8e8:	b.cs	c78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x490>  // b.hs, b.nlast
     8ec:	ldr	x8, [x20, #16]
     8f0:	ldrb	w8, [x8, x21]
     8f4:	cmp	w8, #0x1
     8f8:	b.ne	9ac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1c4>  // b.any
     8fc:	ldur	x8, [x29, #-8]
     900:	ldr	w8, [x8, #104]
     904:	cmp	w8, w23
     908:	b.ls	c58 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x470>  // b.plast
     90c:	ldur	x8, [x29, #-16]
     910:	add	w9, w26, w25
     914:	ldr	x8, [x8]
     918:	add	x22, x8, w23, uxtw #4
     91c:	ldur	w8, [x29, #-20]
     920:	mov	x28, x22
     924:	str	w9, [x22]
     928:	str	w25, [x28, #4]!
     92c:	str	w8, [x22, #12]
     930:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     934:	ldr	x8, [x8]
     938:	add	w23, w23, #0x1
     93c:	ldrb	w8, [x8]
     940:	cbz	w8, 9ac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1c4>
     944:	mov	x0, x24
     948:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     94c:	tbz	w0, #0, 9ac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1c4>
     950:	bl	0 <_ZN4llvm4dbgsEv>
     954:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     958:	mov	w2, #0x11                  	// #17
     95c:	add	x1, x1, #0x0
     960:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     964:	ldrsw	x1, [x22]
     968:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     96c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     970:	mov	w2, #0xb                   	// #11
     974:	add	x1, x1, #0x0
     978:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     97c:	ldr	w1, [x28]
     980:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     984:	ldp	x9, x8, [x0, #16]
     988:	cmp	x8, x9
     98c:	b.cs	9a4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1bc>  // b.hs, b.nlast
     990:	add	x9, x8, #0x1
     994:	str	x9, [x0, #24]
     998:	mov	w9, #0xa                   	// #10
     99c:	strb	w9, [x8]
     9a0:	b	9ac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1c4>
     9a4:	mov	w1, #0xa                   	// #10
     9a8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     9ac:	add	x25, x25, #0x1
     9b0:	cmp	w19, w25
     9b4:	add	x21, x21, #0x10
     9b8:	b.ne	8dc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf4>  // b.any
     9bc:	cbnz	w27, 9cc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1e4>
     9c0:	b	b00 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x318>
     9c4:	mov	w23, wzr
     9c8:	cbz	w27, b00 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x318>
     9cc:	ldr	w8, [sp, #28]
     9d0:	ldr	x9, [sp, #16]
     9d4:	mov	w24, w23
     9d8:	mov	x25, xzr
     9dc:	mov	w26, w27
     9e0:	add	w8, w8, w9
     9e4:	ldr	w9, [sp, #44]
     9e8:	mov	w19, #0xffffffff            	// #-1
     9ec:	lsl	x21, x24, #4
     9f0:	sub	w22, w8, w9
     9f4:	ldur	x8, [x29, #-8]
     9f8:	add	x9, x24, x25
     9fc:	ldr	w8, [x8, #104]
     a00:	cmp	x9, x8
     a04:	b.cs	c58 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x470>  // b.hs, b.nlast
     a08:	ldur	x8, [x29, #-16]
     a0c:	add	w9, w22, w25
     a10:	ldr	x8, [x8]
     a14:	add	x28, x8, x21
     a18:	stp	w19, w9, [x28]
     a1c:	ldur	x8, [x29, #-32]
     a20:	ldr	x8, [x8]
     a24:	ldrh	w8, [x8, x25, lsl #1]
     a28:	strh	w8, [x28, #8]
     a2c:	ldur	w8, [x29, #-20]
     a30:	str	w8, [x28, #12]
     a34:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     a38:	ldr	x8, [x8]
     a3c:	ldrb	w8, [x8]
     a40:	cbz	w8, aec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x304>
     a44:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a48:	add	x0, x0, #0x0
     a4c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a50:	tbz	w0, #0, aec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x304>
     a54:	bl	0 <_ZN4llvm4dbgsEv>
     a58:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a5c:	mov	w2, #0x11                  	// #17
     a60:	add	x1, x1, #0x0
     a64:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a68:	ldr	w8, [x28]
     a6c:	mvn	w8, w8
     a70:	sxtw	x1, w8
     a74:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     a78:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a7c:	mov	w2, #0xb                   	// #11
     a80:	add	x1, x1, #0x0
     a84:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a88:	ldr	w1, [x28, #4]
     a8c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a90:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a94:	mov	w2, #0xd                   	// #13
     a98:	add	x1, x1, #0x0
     a9c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     aa0:	ldr	x8, [sp, #48]
     aa4:	ldrh	w1, [x28, #8]
     aa8:	mov	x28, x0
     aac:	ldr	x8, [x8, #16]
     ab0:	mov	x0, x8
     ab4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ab8:	mov	x1, x0
     abc:	mov	x0, x28
     ac0:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ac4:	ldp	x9, x8, [x0, #16]
     ac8:	cmp	x8, x9
     acc:	b.cs	ae4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2fc>  // b.hs, b.nlast
     ad0:	add	x9, x8, #0x1
     ad4:	str	x9, [x0, #24]
     ad8:	mov	w9, #0xa                   	// #10
     adc:	strb	w9, [x8]
     ae0:	b	aec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x304>
     ae4:	mov	w1, #0xa                   	// #10
     ae8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     aec:	add	x25, x25, #0x1
     af0:	add	x21, x21, #0x10
     af4:	cmp	x26, x25
     af8:	sub	w19, w19, #0x1
     afc:	b.ne	9f4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x20c>  // b.any
     b00:	ldr	x8, [sp, #32]
     b04:	mov	w9, #0x8c0000              	// #9175040
     b08:	add	w23, w23, w27
     b0c:	ldr	x8, [x8]
     b10:	and	x8, x8, x9
     b14:	cmp	x8, #0x40, lsl #12
     b18:	b.eq	c30 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x448>  // b.none
     b1c:	ldur	w8, [x29, #-36]
     b20:	cbz	w8, c30 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x448>
     b24:	ldr	x8, [sp, #8]
     b28:	adrp	x26, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b2c:	adrp	x27, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b30:	mov	x25, xzr
     b34:	ldrh	w28, [x8]
     b38:	ldr	w8, [sp, #4]
     b3c:	add	x26, x26, #0x0
     b40:	add	x27, x27, #0x0
     b44:	lsl	x21, x28, #4
     b48:	mov	w19, w8
     b4c:	ldr	w8, [x20, #24]
     b50:	add	x9, x28, x25
     b54:	cmp	x9, x8
     b58:	b.cs	c78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x490>  // b.hs, b.nlast
     b5c:	ldr	x8, [x20, #16]
     b60:	ldrb	w8, [x8, x21]
     b64:	cmp	w8, #0x1
     b68:	b.ne	c1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x434>  // b.any
     b6c:	ldur	x8, [x29, #-8]
     b70:	ldr	w8, [x8, #104]
     b74:	cmp	w8, w23
     b78:	b.ls	c58 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x470>  // b.plast
     b7c:	ldur	x8, [x29, #-16]
     b80:	add	w9, w28, w25
     b84:	add	w10, w19, w25
     b88:	ldr	x8, [x8]
     b8c:	add	x22, x8, w23, uxtw #4
     b90:	ldur	w8, [x29, #-20]
     b94:	mov	x24, x22
     b98:	str	w9, [x22]
     b9c:	str	w10, [x24, #4]!
     ba0:	str	w8, [x22, #12]
     ba4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     ba8:	ldr	x8, [x8]
     bac:	add	w23, w23, #0x1
     bb0:	ldrb	w8, [x8]
     bb4:	cbz	w8, c1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x434>
     bb8:	mov	x0, x26
     bbc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     bc0:	tbz	w0, #0, c1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x434>
     bc4:	bl	0 <_ZN4llvm4dbgsEv>
     bc8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bcc:	mov	w2, #0x11                  	// #17
     bd0:	add	x1, x1, #0x0
     bd4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bd8:	ldrsw	x1, [x22]
     bdc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     be0:	mov	w2, #0xb                   	// #11
     be4:	mov	x1, x27
     be8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bec:	ldr	w1, [x24]
     bf0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     bf4:	ldp	x9, x8, [x0, #16]
     bf8:	cmp	x8, x9
     bfc:	b.cs	c14 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x42c>  // b.hs, b.nlast
     c00:	add	x9, x8, #0x1
     c04:	str	x9, [x0, #24]
     c08:	mov	w9, #0xa                   	// #10
     c0c:	strb	w9, [x8]
     c10:	b	c1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x434>
     c14:	mov	w1, #0xa                   	// #10
     c18:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     c1c:	ldur	w8, [x29, #-36]
     c20:	add	x25, x25, #0x1
     c24:	add	x21, x21, #0x10
     c28:	cmp	w25, w8
     c2c:	b.cc	b4c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x364>  // b.lo, b.ul, b.last
     c30:	mov	w1, w23
     c34:	ldur	x0, [x29, #-16]
     c38:	ldp	x20, x19, [sp, #176]
     c3c:	ldp	x22, x21, [sp, #160]
     c40:	ldp	x24, x23, [sp, #144]
     c44:	ldp	x26, x25, [sp, #128]
     c48:	ldp	x28, x27, [sp, #112]
     c4c:	ldp	x29, x30, [sp, #96]
     c50:	add	sp, sp, #0xc0
     c54:	b	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c58:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c5c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c60:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c64:	add	x0, x0, #0x0
     c68:	add	x1, x1, #0x0
     c6c:	add	x3, x3, #0x0
     c70:	mov	w2, #0x95                  	// #149
     c74:	bl	0 <__assert_fail>
     c78:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c7c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c80:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c84:	add	x0, x0, #0x0
     c88:	add	x1, x1, #0x0
     c8c:	add	x3, x3, #0x0
     c90:	mov	w2, #0x99                  	// #153
     c94:	bl	0 <__assert_fail>
     c98:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c9c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ca0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ca4:	add	x0, x0, #0x0
     ca8:	add	x1, x1, #0x0
     cac:	add	x3, x3, #0x0
     cb0:	mov	w2, #0x2d                  	// #45
     cb4:	bl	0 <__assert_fail>

0000000000000cb8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>:
     cb8:	sub	sp, sp, #0x20
     cbc:	stp	x29, x30, [sp, #16]
     cc0:	add	x29, sp, #0x10
     cc4:	ldr	w9, [x1, #316]
     cc8:	cbnz	w9, cf0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x38>
     ccc:	ldrb	w9, [x1, #324]
     cd0:	ldrb	w10, [x1, #325]
     cd4:	orr	w9, w10, w9
     cd8:	tst	w9, #0xff
     cdc:	b.ne	cfc <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x44>  // b.any
     ce0:	ldr	x10, [x1, #288]
     ce4:	cbnz	x10, cfc <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x44>
     ce8:	ldr	w10, [x1, #184]
     cec:	cbnz	w10, cfc <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x44>
     cf0:	mov	w9, #0x1                   	// #1
     cf4:	str	x9, [x8]
     cf8:	b	d30 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x78>
     cfc:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     d00:	adrp	x11, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     d04:	add	x10, x10, #0x0
     d08:	add	x11, x11, #0x0
     d0c:	tst	w9, #0xff
     d10:	mov	w9, #0x65                  	// #101
     d14:	mov	w12, #0x6d                  	// #109
     d18:	csel	x10, x11, x10, ne  // ne = any
     d1c:	csel	x9, x12, x9, ne  // ne = any
     d20:	mov	x0, sp
     d24:	mov	x1, x2
     d28:	stp	x10, x9, [sp]
     d2c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     d30:	ldp	x29, x30, [sp, #16]
     d34:	add	sp, sp, #0x20
     d38:	ret

0000000000000d3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>:
     d3c:	sub	sp, sp, #0x1c0
     d40:	stp	x29, x30, [sp, #352]
     d44:	stp	x28, x27, [sp, #368]
     d48:	stp	x26, x25, [sp, #384]
     d4c:	stp	x24, x23, [sp, #400]
     d50:	stp	x22, x21, [sp, #416]
     d54:	stp	x20, x19, [sp, #432]
     d58:	add	x29, sp, #0x160
     d5c:	ldr	x9, [x0]
     d60:	ldr	x19, [x9, #152]
     d64:	ldr	x9, [x19, #40]
     d68:	cbz	x9, 2180 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1444>
     d6c:	mov	x26, x8
     d70:	ldr	x8, [x0, #8]
     d74:	ldrh	w20, [x1]
     d78:	mov	x22, x1
     d7c:	mov	x25, x0
     d80:	ldr	w9, [x8, #24]
     d84:	cmp	w9, w20
     d88:	b.ls	21a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1464>  // b.plast
     d8c:	ldr	x8, [x8]
     d90:	mov	x0, x19
     d94:	str	x8, [sp, #64]
     d98:	add	x8, x8, x20, lsl #6
     d9c:	ldrh	w24, [x8, #6]
     da0:	mov	w1, w24
     da4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     da8:	ldrh	w8, [x0, #8]
     dac:	and	w23, w8, #0x3fff
     db0:	mov	w8, #0x3ffe                	// #16382
     db4:	cmp	w23, w8
     db8:	b.ne	e40 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x104>  // b.any
     dbc:	cbz	w24, e0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd0>
     dc0:	mov	x27, x20
     dc4:	ldr	w20, [x19, #28]
     dc8:	mov	w21, #0x3ffe                	// #16382
     dcc:	mov	x0, x19
     dd0:	mov	w1, w24
     dd4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     dd8:	ldrh	w8, [x0, #8]
     ddc:	and	w8, w8, #0x3fff
     de0:	cmp	w8, w21
     de4:	b.ne	e3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x100>  // b.any
     de8:	ldr	x0, [x25]
     dec:	mov	w1, w24
     df0:	mov	x2, x22
     df4:	mov	w3, w20
     df8:	ldr	x8, [x0]
     dfc:	ldr	x8, [x8, #16]
     e00:	blr	x8
     e04:	mov	w24, w0
     e08:	cbnz	w0, dcc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x90>
     e0c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e10:	add	x0, x0, #0x0
     e14:	sub	x8, x29, #0x98
     e18:	mov	x1, x22
     e1c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e20:	sub	x1, x29, #0x98
     e24:	mov	x0, x26
     e28:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e2c:	ldur	x8, [x29, #-152]
     e30:	cbz	x8, 20a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1364>
     e34:	sub	x0, x29, #0x98
     e38:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     e3c:	mov	x20, x27
     e40:	mov	x0, x19
     e44:	mov	w1, w24
     e48:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e4c:	ldrh	w8, [x0, #8]
     e50:	str	x0, [sp, #136]
     e54:	mvn	w8, w8
     e58:	tst	w8, #0x3fff
     e5c:	b.ne	e90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x154>  // b.any
     e60:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e64:	add	x0, x0, #0x0
     e68:	sub	x8, x29, #0xa0
     e6c:	mov	x1, x22
     e70:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e74:	sub	x1, x29, #0xa0
     e78:	mov	x0, x26
     e7c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e80:	ldur	x8, [x29, #-160]
     e84:	cbz	x8, 20a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1364>
     e88:	sub	x0, x29, #0xa0
     e8c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     e90:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     e94:	ldr	x8, [x8]
     e98:	ldrb	w8, [x8]
     e9c:	cbz	w8, f7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x240>
     ea0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ea4:	add	x0, x0, #0x0
     ea8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     eac:	tbz	w0, #0, f18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dc>
     eb0:	bl	0 <_ZN4llvm4dbgsEv>
     eb4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     eb8:	add	x1, x1, #0x0
     ebc:	mov	w2, #0x10                  	// #16
     ec0:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ec4:	ldr	x8, [x25, #8]
     ec8:	mov	x19, x0
     ecc:	mov	w1, w20
     ed0:	mov	x0, x8
     ed4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ed8:	mov	x2, x0
     edc:	mov	x3, x1
     ee0:	mov	x0, x19
     ee4:	mov	x1, x2
     ee8:	mov	x2, x3
     eec:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ef0:	ldp	x9, x8, [x0, #16]
     ef4:	cmp	x8, x9
     ef8:	b.cs	f10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d4>  // b.hs, b.nlast
     efc:	add	x9, x8, #0x1
     f00:	mov	w10, #0xa                   	// #10
     f04:	str	x9, [x0, #24]
     f08:	strb	w10, [x8]
     f0c:	b	f18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dc>
     f10:	mov	w1, #0xa                   	// #10
     f14:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f18:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     f1c:	ldr	x8, [x8]
     f20:	ldrb	w8, [x8]
     f24:	cbz	w8, f7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x240>
     f28:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f2c:	add	x0, x0, #0x0
     f30:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     f34:	tbz	w0, #0, f7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x240>
     f38:	bl	0 <_ZN4llvm4dbgsEv>
     f3c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f40:	add	x1, x1, #0x0
     f44:	mov	w2, #0xf                   	// #15
     f48:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f4c:	mov	w1, w24
     f50:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f54:	ldp	x9, x8, [x0, #16]
     f58:	cmp	x8, x9
     f5c:	b.cs	f74 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x238>  // b.hs, b.nlast
     f60:	add	x9, x8, #0x1
     f64:	mov	w10, #0xa                   	// #10
     f68:	str	x9, [x0, #24]
     f6c:	strb	w10, [x8]
     f70:	b	f7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x240>
     f74:	mov	w1, #0xa                   	// #10
     f78:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f7c:	mov	w0, #0x150                 	// #336
     f80:	bl	0 <_Znwm>
     f84:	add	x19, x0, #0x10
     f88:	mov	x21, x0
     f8c:	mov	w2, #0x140                 	// #320
     f90:	mov	x0, x19
     f94:	mov	w1, wzr
     f98:	bl	0 <memset>
     f9c:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     fa0:	ldr	d0, [x8]
     fa4:	add	x8, x21, #0xc0
     fa8:	str	x8, [x21, #176]
     fac:	ldr	x8, [sp, #136]
     fb0:	add	x9, x21, #0x70
     fb4:	str	x19, [x21]
     fb8:	stur	x21, [x29, #-168]
     fbc:	str	x9, [x21, #96]
     fc0:	str	d0, [x21, #8]
     fc4:	str	d0, [x21, #104]
     fc8:	str	d0, [x21, #184]
     fcc:	ldrh	w8, [x8, #8]
     fd0:	str	w24, [x21, #320]
     fd4:	str	x21, [sp, #72]
     fd8:	and	w8, w8, #0x3fff
     fdc:	str	w8, [x21, #316]
     fe0:	ldr	x8, [sp, #64]
     fe4:	add	x9, x8, x20, lsl #6
     fe8:	ldr	x8, [x9, #8]!
     fec:	str	x9, [sp, #56]
     ff0:	tbz	w8, #6, 1040 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x304>
     ff4:	ldrb	w9, [x25, #176]
     ff8:	cbz	w9, 1040 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x304>
     ffc:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1000:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1004:	add	x1, x1, #0x0
    1008:	mov	w2, #0x2d                  	// #45
    100c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1010:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1014:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1018:	add	x1, x1, #0x0
    101c:	mov	w2, #0x2d                  	// #45
    1020:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1024:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1028:	add	x1, x1, #0x0
    102c:	mov	w2, #0x1b                  	// #27
    1030:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1034:	ldr	x8, [sp, #56]
    1038:	strb	wzr, [x25, #176]
    103c:	ldr	x8, [x8]
    1040:	str	x26, [sp, #40]
    1044:	tbz	w8, #4, 1094 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x358>
    1048:	ldrb	w9, [x25, #177]
    104c:	cbz	w9, 1094 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x358>
    1050:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1054:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1058:	add	x1, x1, #0x0
    105c:	mov	w2, #0x27                  	// #39
    1060:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1064:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1068:	add	x1, x1, #0x0
    106c:	mov	w2, #0x14                  	// #20
    1070:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1074:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1078:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    107c:	add	x1, x1, #0x0
    1080:	mov	w2, #0x25                  	// #37
    1084:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1088:	ldr	x8, [sp, #56]
    108c:	strb	wzr, [x25, #177]
    1090:	ldr	x8, [x8]
    1094:	ldr	x11, [sp, #72]
    1098:	ldr	x19, [sp, #136]
    109c:	ubfx	w9, w8, #18, #1
    10a0:	ubfx	w10, w8, #19, #1
    10a4:	ubfx	w8, w8, #23, #1
    10a8:	strb	w9, [x11, #324]
    10ac:	strb	w10, [x11, #325]
    10b0:	strb	w8, [x11, #326]
    10b4:	ldrh	w8, [x19, #8]
    10b8:	str	x20, [sp, #8]
    10bc:	sub	x0, x29, #0x28
    10c0:	mov	w1, wzr
    10c4:	ubfx	w8, w8, #14, #1
    10c8:	strb	w8, [x11, #327]
    10cc:	ldrh	w8, [x19, #8]
    10d0:	lsr	w8, w8, #15
    10d4:	strb	w8, [x11, #328]
    10d8:	ldr	x8, [x25]
    10dc:	ldr	x27, [x25, #32]
    10e0:	ldr	w28, [x25, #40]
    10e4:	ldr	x20, [x8, #152]
    10e8:	str	x8, [sp, #128]
    10ec:	stp	xzr, xzr, [x29, #-64]
    10f0:	stp	xzr, xzr, [x29, #-48]
    10f4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    10f8:	ldr	w1, [x20, #48]
    10fc:	sub	x0, x29, #0x50
    1100:	mov	x2, xzr
    1104:	mov	w3, wzr
    1108:	stp	x1, x20, [sp, #152]
    110c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1110:	ldrh	w8, [x19, #12]
    1114:	str	x22, [sp, #24]
    1118:	str	w24, [sp, #20]
    111c:	str	x27, [sp, #120]
    1120:	str	x28, [sp, #144]
    1124:	str	x25, [sp, #48]
    1128:	str	w23, [sp, #36]
    112c:	cbz	x8, 1400 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6c4>
    1130:	adrp	x27, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1134:	mov	x26, x8
    1138:	mov	x24, xzr
    113c:	mov	x28, xzr
    1140:	add	x27, x27, #0x0
    1144:	mov	w20, #0x1                   	// #1
    1148:	str	wzr, [sp, #116]
    114c:	ldp	x8, x9, [sp, #128]
    1150:	ldr	x0, [sp, #160]
    1154:	ldr	x8, [x8, #128]
    1158:	ldrh	w9, [x9, #10]
    115c:	add	x23, x8, x9, lsl #2
    1160:	add	x19, x23, x24
    1164:	ldrh	w1, [x19]
    1168:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    116c:	ldrh	w8, [x19, #2]
    1170:	mov	x21, x0
    1174:	cbz	w8, 11d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x49c>
    1178:	ldrh	w9, [x23, x24]
    117c:	ldr	x10, [sp, #144]
    1180:	cmp	x10, x9
    1184:	b.ls	20c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1384>  // b.plast
    1188:	ldr	x11, [sp, #120]
    118c:	ldr	w10, [x21, #16]
    1190:	ldr	x25, [x11, x9, lsl #3]
    1194:	tbnz	w10, #31, 1200 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4c4>
    1198:	cbz	x25, 20e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13a4>
    119c:	clz	x8, x25
    11a0:	eor	w1, w8, #0x3f
    11a4:	sub	x0, x29, #0x50
    11a8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    11ac:	ldr	w9, [x21, #16]
    11b0:	ldrh	w8, [x19, #2]
    11b4:	cmp	w9, #0x0
    11b8:	cset	w10, eq  // eq = none
    11bc:	cmp	w9, #0x2
    11c0:	ldr	w9, [sp, #116]
    11c4:	orr	w9, w9, w10
    11c8:	str	w9, [sp, #116]
    11cc:	cset	w9, lt  // lt = tstop
    11d0:	and	w20, w20, w9
    11d4:	b	1204 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4c8>
    11d8:	bl	0 <_ZN4llvm9WithColor7warningEv>
    11dc:	ldp	x9, x8, [x0, #16]
    11e0:	sub	x9, x9, x8
    11e4:	cmp	x9, #0x3b
    11e8:	b.hi	1298 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x55c>  // b.pmore
    11ec:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    11f0:	mov	w2, #0x3c                  	// #60
    11f4:	add	x1, x1, #0x0
    11f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11fc:	b	12c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x588>
    1200:	mov	w20, wzr
    1204:	ldp	x1, x9, [x29, #-56]
    1208:	lsl	x8, x8, #32
    120c:	and	w22, w22, #0xffffff00
    1210:	stp	x25, x8, [x29, #-112]
    1214:	cmp	x1, x9
    1218:	mov	w8, #0x1                   	// #1
    121c:	stp	w22, w8, [x29, #-96]
    1220:	b.eq	1244 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x508>  // b.none
    1224:	ldur	x8, [x29, #-96]
    1228:	ldur	q0, [x29, #-112]
    122c:	str	x8, [x1, #16]
    1230:	str	q0, [x1]
    1234:	ldur	x8, [x29, #-56]
    1238:	add	x8, x8, #0x18
    123c:	stur	x8, [x29, #-56]
    1240:	b	1250 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x514>
    1244:	sub	x0, x29, #0x40
    1248:	sub	x2, x29, #0x70
    124c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1250:	ldr	w8, [x21, #12]
    1254:	cbz	w8, 128c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x550>
    1258:	ldr	x9, [sp, #144]
    125c:	cmp	w9, w8
    1260:	b.ls	20c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1384>  // b.plast
    1264:	ldr	x9, [sp, #120]
    1268:	sub	x0, x29, #0x28
    126c:	sub	x1, x29, #0x70
    1270:	ldr	x8, [x9, x8, lsl #3]
    1274:	stur	x8, [x29, #-112]
    1278:	ldrh	w19, [x19, #2]
    127c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1280:	ldr	w8, [x0, #8]
    1284:	add	w8, w8, w19
    1288:	str	w8, [x0, #8]
    128c:	cmp	w20, #0x0
    1290:	cset	w20, ne  // ne = any
    1294:	b	13d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x69c>
    1298:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    129c:	add	x9, x9, #0x0
    12a0:	ldur	q0, [x9, #44]
    12a4:	ldp	q2, q1, [x9, #16]
    12a8:	ldr	q3, [x9]
    12ac:	stur	q0, [x8, #44]
    12b0:	stp	q2, q1, [x8, #16]
    12b4:	str	q3, [x8]
    12b8:	ldr	x8, [x0, #24]
    12bc:	add	x8, x8, #0x3c
    12c0:	str	x8, [x0, #24]
    12c4:	ldr	x1, [x21]
    12c8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12cc:	ldp	x9, x8, [x0, #16]
    12d0:	cmp	x9, x8
    12d4:	b.ne	12ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5b0>  // b.any
    12d8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12dc:	mov	w2, #0x1                   	// #1
    12e0:	add	x1, x1, #0x0
    12e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    12e8:	b	1300 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5c4>
    12ec:	mov	w9, #0xa                   	// #10
    12f0:	strb	w9, [x8]
    12f4:	ldr	x8, [x0, #24]
    12f8:	add	x8, x8, #0x1
    12fc:	str	x8, [x0, #24]
    1300:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1304:	ldp	x9, x8, [x0, #16]
    1308:	sub	x9, x9, x8
    130c:	cmp	x9, #0x19
    1310:	b.hi	1328 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5ec>  // b.pmore
    1314:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1318:	mov	w2, #0x1a                  	// #26
    131c:	add	x1, x1, #0x0
    1320:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1324:	b	134c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x610>
    1328:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    132c:	add	x9, x9, #0x0
    1330:	ldur	q0, [x9, #10]
    1334:	ldr	q1, [x9]
    1338:	stur	q0, [x8, #10]
    133c:	str	q1, [x8]
    1340:	ldr	x8, [x0, #24]
    1344:	add	x8, x8, #0x1a
    1348:	str	x8, [x0, #24]
    134c:	ldr	x8, [sp, #136]
    1350:	ldr	x1, [x8]
    1354:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1358:	ldp	x9, x8, [x0, #16]
    135c:	sub	x9, x9, x8
    1360:	cmp	x9, #0xe
    1364:	b.hi	1378 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x63c>  // b.pmore
    1368:	mov	w2, #0xf                   	// #15
    136c:	mov	x1, x27
    1370:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1374:	b	1398 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x65c>
    1378:	mov	x10, x27
    137c:	ldur	x9, [x27, #7]
    1380:	ldr	x10, [x27]
    1384:	stur	x9, [x8, #7]
    1388:	str	x10, [x8]
    138c:	ldr	x8, [x0, #24]
    1390:	add	x8, x8, #0xf
    1394:	str	x8, [x0, #24]
    1398:	mov	x1, x28
    139c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    13a0:	ldp	x9, x8, [x0, #16]
    13a4:	sub	x9, x9, x8
    13a8:	cmp	x9, #0x1
    13ac:	b.hi	13c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x688>  // b.pmore
    13b0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    13b4:	mov	w2, #0x2                   	// #2
    13b8:	add	x1, x1, #0x0
    13bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    13c0:	b	13d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x69c>
    13c4:	mov	w9, #0xa29                 	// #2601
    13c8:	strh	w9, [x8]
    13cc:	ldr	x8, [x0, #24]
    13d0:	add	x8, x8, #0x2
    13d4:	str	x8, [x0, #24]
    13d8:	add	x28, x28, #0x1
    13dc:	cmp	x26, x28
    13e0:	add	x24, x24, #0x4
    13e4:	b.ne	114c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x410>  // b.any
    13e8:	ldp	x21, x19, [x29, #-64]
    13ec:	ldr	x25, [sp, #48]
    13f0:	ldr	x27, [sp, #120]
    13f4:	ldr	x28, [sp, #144]
    13f8:	ldr	w8, [sp, #116]
    13fc:	b	140c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6d0>
    1400:	mov	x19, xzr
    1404:	mov	x21, xzr
    1408:	mov	w20, #0x1                   	// #1
    140c:	ldr	x9, [sp, #72]
    1410:	and	w8, w8, w20
    1414:	and	w8, w8, #0x1
    1418:	cmp	x21, x19
    141c:	strb	w8, [x9, #329]
    1420:	b.eq	1514 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7d8>  // b.none
    1424:	sub	x20, x19, x21
    1428:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    142c:	movk	x8, #0xaaab
    1430:	asr	x9, x20, #3
    1434:	mul	x8, x9, x8
    1438:	clz	x8, x8
    143c:	mov	w9, #0x7e                  	// #126
    1440:	sub	x2, x9, x8, lsl #1
    1444:	mov	x0, x21
    1448:	mov	x1, x19
    144c:	mov	x3, xzr
    1450:	bl	27a8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>
    1454:	cmp	x20, #0x181
    1458:	b.lt	1504 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7c8>  // b.tstop
    145c:	add	x20, x21, #0x180
    1460:	mov	x0, x21
    1464:	mov	x1, x20
    1468:	mov	x2, xzr
    146c:	bl	2cb0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_>
    1470:	cmp	x20, x19
    1474:	b.eq	1514 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7d8>  // b.none
    1478:	add	x8, x21, #0x168
    147c:	ldr	x9, [x20]
    1480:	ldur	q0, [x20, #8]
    1484:	mov	x12, x8
    1488:	mov	x10, x20
    148c:	fmov	d1, x9
    1490:	cnt	v1.8b, v1.8b
    1494:	uaddlv	h1, v1.8b
    1498:	fmov	w11, s1
    149c:	stur	q0, [x29, #-112]
    14a0:	ldr	x13, [x12]
    14a4:	fmov	d0, x13
    14a8:	cnt	v0.8b, v0.8b
    14ac:	uaddlv	h0, v0.8b
    14b0:	fmov	w14, s0
    14b4:	cmp	w11, w14
    14b8:	b.cc	14cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x790>  // b.lo, b.ul, b.last
    14bc:	cmp	x9, x13
    14c0:	b.cs	14e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7a8>  // b.hs, b.nlast
    14c4:	cmp	w11, w14
    14c8:	b.hi	14e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7a8>  // b.pmore
    14cc:	str	x13, [x10]
    14d0:	ldur	q0, [x12, #8]
    14d4:	stur	q0, [x10, #8]
    14d8:	mov	x10, x12
    14dc:	sub	x12, x12, #0x18
    14e0:	b	14a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x764>
    14e4:	str	x9, [x10]
    14e8:	ldur	q0, [x29, #-112]
    14ec:	add	x20, x20, #0x18
    14f0:	cmp	x20, x19
    14f4:	add	x8, x8, #0x18
    14f8:	stur	q0, [x10, #8]
    14fc:	b.ne	147c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x740>  // b.any
    1500:	b	1514 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7d8>
    1504:	mov	x0, x21
    1508:	mov	x1, x19
    150c:	mov	x2, xzr
    1510:	bl	2cb0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_>
    1514:	ldp	x8, x9, [x29, #-64]
    1518:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    151c:	movk	x10, #0xaaab
    1520:	sub	x9, x9, x8
    1524:	asr	x9, x9, #3
    1528:	mul	x9, x9, x10
    152c:	cbz	w9, 16e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9a4>
    1530:	ldr	x10, [sp, #72]
    1534:	mov	x23, xzr
    1538:	mov	x24, xzr
    153c:	mov	x26, xzr
    1540:	add	x10, x10, #0xb0
    1544:	str	x10, [sp, #104]
    1548:	and	x10, x9, #0xffffffff
    154c:	mov	x19, xzr
    1550:	str	x10, [sp, #128]
    1554:	sub	w10, w9, #0x1
    1558:	mov	w11, #0x18                  	// #24
    155c:	madd	x20, x24, x11, x8
    1560:	mov	x21, x20
    1564:	mov	x28, x20
    1568:	ldr	w8, [x21, #12]!
    156c:	ldr	w9, [x28, #8]!
    1570:	cmp	w8, w9
    1574:	b.ne	15b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x878>  // b.any
    1578:	ldr	x8, [x20]
    157c:	sub	x9, x8, #0x1
    1580:	tst	x8, x9
    1584:	b.eq	2140 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1404>  // b.none
    1588:	clz	x9, x8
    158c:	cmp	x8, #0x0
    1590:	mov	w8, #0x3f                  	// #63
    1594:	sub	w8, w8, w9
    1598:	mov	w9, #0x1                   	// #1
    159c:	ldr	x28, [sp, #144]
    15a0:	lsl	x8, x9, x8
    15a4:	csel	x8, xzr, x8, eq  // eq = none
    15a8:	orr	x19, x8, x19
    15ac:	add	x24, x24, #0x1
    15b0:	b	16bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x980>
    15b4:	ldr	x0, [sp, #104]
    15b8:	mov	x1, x20
    15bc:	str	w10, [sp, #116]
    15c0:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    15c4:	ldr	x25, [x20]
    15c8:	fmov	d0, x25
    15cc:	cnt	v0.8b, v0.8b
    15d0:	uaddlv	h0, v0.8b
    15d4:	fmov	w8, s0
    15d8:	cmp	x8, #0x1
    15dc:	b.ne	15e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8ac>  // b.any
    15e0:	orr	x26, x25, x26
    15e4:	b	160c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8d0>
    15e8:	clz	x8, x25
    15ec:	mov	w9, #0x3f                  	// #63
    15f0:	sub	w8, w9, w8
    15f4:	mov	w9, #0x1                   	// #1
    15f8:	cmp	x25, #0x0
    15fc:	lsl	x8, x9, x8
    1600:	csel	x8, xzr, x8, eq  // eq = none
    1604:	eor	x25, x8, x25
    1608:	orr	x19, x8, x19
    160c:	ldr	x8, [sp, #128]
    1610:	add	x24, x24, #0x1
    1614:	cmp	x24, x8
    1618:	b.cs	16b0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x974>  // b.hs, b.nlast
    161c:	stp	x26, x19, [sp, #88]
    1620:	ldr	w19, [sp, #116]
    1624:	mov	x22, x23
    1628:	str	x23, [sp, #80]
    162c:	ldur	x23, [x29, #-64]
    1630:	add	x27, x23, x22
    1634:	ldr	x8, [x27, #24]
    1638:	bics	xzr, x25, x8
    163c:	b.ne	1690 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x954>  // b.any
    1640:	ldr	w8, [x21]
    1644:	ldr	w9, [x28]
    1648:	sub	x0, x29, #0x28
    164c:	mov	x1, x20
    1650:	sub	w26, w8, w9
    1654:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1658:	ldr	w8, [x0, #8]
    165c:	ldr	w9, [x27, #36]
    1660:	sub	w8, w26, w8
    1664:	subs	w8, w9, w8
    1668:	b.cc	2100 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13c4>  // b.lo, b.ul, b.last
    166c:	ldr	x9, [x27, #24]
    1670:	str	w8, [x27, #36]
    1674:	sub	x10, x9, #0x1
    1678:	tst	x9, x10
    167c:	b.eq	1690 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x954>  // b.none
    1680:	add	x8, x23, x22
    1684:	ldr	w9, [x8, #44]
    1688:	add	w9, w9, #0x1
    168c:	str	w9, [x8, #44]
    1690:	subs	w19, w19, #0x1
    1694:	add	x22, x22, #0x18
    1698:	b.ne	162c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8f0>  // b.any
    169c:	ldr	x27, [sp, #120]
    16a0:	ldr	x28, [sp, #144]
    16a4:	ldp	x26, x19, [sp, #88]
    16a8:	ldr	x23, [sp, #80]
    16ac:	b	16b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x978>
    16b0:	ldr	x28, [sp, #144]
    16b4:	ldr	w10, [sp, #116]
    16b8:	mov	w11, #0x18                  	// #24
    16bc:	ldr	x8, [sp, #128]
    16c0:	cmp	x24, x8
    16c4:	b.eq	16d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x99c>  // b.none
    16c8:	ldur	x8, [x29, #-64]
    16cc:	add	x23, x23, #0x18
    16d0:	sub	w10, w10, #0x1
    16d4:	b	155c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x820>
    16d8:	ldr	x25, [sp, #48]
    16dc:	b	16e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9ac>
    16e0:	mov	x19, xzr
    16e4:	mov	x26, xzr
    16e8:	ldr	x8, [sp, #72]
    16ec:	ldr	w8, [x8, #184]
    16f0:	cbz	w8, 1758 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa1c>
    16f4:	ldr	x9, [sp, #72]
    16f8:	mov	w11, #0x1                   	// #1
    16fc:	ldr	x10, [x9, #176]
    1700:	add	x9, x8, x8, lsl #1
    1704:	mov	w8, #0x3f                  	// #63
    1708:	lsl	x9, x9, #3
    170c:	add	x10, x10, #0x10
    1710:	ldur	x12, [x10, #-16]
    1714:	sub	x13, x12, #0x1
    1718:	tst	x12, x13
    171c:	b.eq	174c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa10>  // b.none
    1720:	ldrb	w13, [x10]
    1724:	cbnz	w13, 174c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa10>
    1728:	clz	x13, x12
    172c:	sub	w13, w8, w13
    1730:	lsl	x13, x11, x13
    1734:	cmp	x12, #0x0
    1738:	csel	x13, xzr, x13, eq  // eq = none
    173c:	eor	x12, x13, x12
    1740:	bics	xzr, x12, x26
    1744:	b.ne	174c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa10>  // b.any
    1748:	strb	w11, [x10]
    174c:	subs	x9, x9, #0x18
    1750:	add	x10, x10, #0x18
    1754:	b.ne	1710 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9d4>  // b.any
    1758:	ldur	x1, [x29, #-32]
    175c:	ldur	w8, [x29, #-16]
    1760:	ldur	w9, [x29, #-24]
    1764:	mov	x23, x19
    1768:	add	x2, x1, x8, lsl #4
    176c:	cbz	w9, 178c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa50>
    1770:	sub	x0, x29, #0x70
    1774:	sub	x3, x29, #0x28
    1778:	mov	w4, wzr
    177c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1780:	ldur	w8, [x29, #-16]
    1784:	ldp	x20, x1, [x29, #-40]
    1788:	b	179c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa60>
    178c:	ldur	x20, [x29, #-40]
    1790:	sub	x9, x29, #0x28
    1794:	stp	x2, x2, [x29, #-96]
    1798:	stp	x9, x20, [x29, #-112]
    179c:	add	x22, x1, x8, lsl #4
    17a0:	sub	x24, x29, #0x28
    17a4:	sub	x0, x29, #0x70
    17a8:	sub	x1, x29, #0x90
    17ac:	stp	x24, x20, [x29, #-144]
    17b0:	stp	x22, x22, [x29, #-128]
    17b4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    17b8:	tbz	w0, #0, 1868 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb2c>
    17bc:	ldp	x8, x9, [x29, #-112]
    17c0:	ldr	x8, [x8]
    17c4:	cmp	x8, x9
    17c8:	b.ne	2120 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13e4>  // b.any
    17cc:	ldr	x8, [sp, #152]
    17d0:	cmp	w8, #0x2
    17d4:	b.cc	1850 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb14>  // b.lo, b.ul, b.last
    17d8:	ldur	x21, [x29, #-96]
    17dc:	mov	w19, #0x1                   	// #1
    17e0:	ldr	x0, [sp, #160]
    17e4:	mov	w1, w19
    17e8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    17ec:	ldr	w8, [x0, #16]
    17f0:	cmn	w8, #0x1
    17f4:	b.eq	1830 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xaf4>  // b.none
    17f8:	cmp	x19, x28
    17fc:	b.cs	20c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1384>  // b.hs, b.nlast
    1800:	ldr	x8, [x27, x19, lsl #3]
    1804:	ldr	x9, [x21]
    1808:	cmp	x8, x9
    180c:	b.eq	1830 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xaf4>  // b.none
    1810:	and	x10, x9, x8
    1814:	cmp	x10, x9
    1818:	b.ne	1830 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xaf4>  // b.any
    181c:	cbz	x8, 20e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13a4>
    1820:	clz	x8, x8
    1824:	eor	w1, w8, #0x3f
    1828:	sub	x0, x29, #0x50
    182c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1830:	ldr	x8, [sp, #152]
    1834:	add	x19, x19, #0x1
    1838:	cmp	x8, x19
    183c:	b.ne	17e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xaa4>  // b.any
    1840:	ldp	x8, x9, [x29, #-112]
    1844:	ldr	x8, [x8]
    1848:	cmp	x8, x9
    184c:	b.ne	2160 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1424>  // b.any
    1850:	ldur	x8, [x29, #-96]
    1854:	sub	x0, x29, #0x70
    1858:	add	x8, x8, #0x10
    185c:	stur	x8, [x29, #-96]
    1860:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1864:	b	17a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa68>
    1868:	sub	x0, x29, #0x50
    186c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1870:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    1874:	ldr	x8, [x8]
    1878:	ldr	x9, [sp, #72]
    187c:	ldrb	w8, [x8]
    1880:	stp	x0, x26, [x9, #288]
    1884:	str	x23, [x9, #304]
    1888:	ldr	x23, [sp, #40]
    188c:	ldr	w26, [sp, #36]
    1890:	cbz	w8, 1cd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf94>
    1894:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1898:	add	x0, x0, #0x0
    189c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    18a0:	tbz	w0, #0, 1cd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf94>
    18a4:	ldr	x8, [sp, #72]
    18a8:	ldr	w8, [x8, #184]
    18ac:	cbz	w8, 1ae4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xda8>
    18b0:	ldr	x9, [sp, #72]
    18b4:	adrp	x19, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    18b8:	adrp	x20, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    18bc:	adrp	x23, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    18c0:	ldr	x21, [x9, #176]
    18c4:	mov	w9, #0x18                  	// #24
    18c8:	mov	w27, #0x5523                	// #21795
    18cc:	add	x19, x19, #0x0
    18d0:	mov	w22, #0x10                  	// #16
    18d4:	mov	w24, #0x1                   	// #1
    18d8:	add	x20, x20, #0x0
    18dc:	add	x23, x23, #0x0
    18e0:	mov	w28, #0x3d                  	// #61
    18e4:	mov	w25, #0x202c                	// #8236
    18e8:	madd	x26, x8, x9, x21
    18ec:	movk	w27, #0x696e, lsl #16
    18f0:	bl	0 <_ZN4llvm4dbgsEv>
    18f4:	ldp	x9, x8, [x0, #16]
    18f8:	sub	x9, x9, x8
    18fc:	cmp	x9, #0xf
    1900:	b.hi	1914 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbd8>  // b.pmore
    1904:	mov	w2, #0x10                  	// #16
    1908:	mov	x1, x19
    190c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1910:	b	1928 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbec>
    1914:	ldr	q0, [x19]
    1918:	str	q0, [x8]
    191c:	ldr	x8, [x0, #24]
    1920:	add	x8, x8, #0x10
    1924:	str	x8, [x0, #24]
    1928:	ldr	x8, [x21]
    192c:	sub	x1, x29, #0x70
    1930:	stur	w22, [x29, #-96]
    1934:	sturh	w24, [x29, #-92]
    1938:	stp	x8, xzr, [x29, #-112]
    193c:	sturb	w24, [x29, #-90]
    1940:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1944:	ldp	x9, x8, [x0, #16]
    1948:	sub	x9, x9, x8
    194c:	cmp	x9, #0x1
    1950:	b.hi	1968 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc2c>  // b.pmore
    1954:	mov	w2, #0x2                   	// #2
    1958:	mov	x1, x20
    195c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1960:	ldr	x8, [x0, #24]
    1964:	b	1978 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc3c>
    1968:	strh	w25, [x8]
    196c:	ldr	x8, [x0, #24]
    1970:	add	x8, x8, #0x2
    1974:	str	x8, [x0, #24]
    1978:	ldr	x9, [x0, #16]
    197c:	sub	x9, x9, x8
    1980:	cmp	x9, #0x8
    1984:	b.hi	1998 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc5c>  // b.pmore
    1988:	mov	w2, #0x9                   	// #9
    198c:	mov	x1, x23
    1990:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1994:	b	19b0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc74>
    1998:	ldr	x9, [x23]
    199c:	strb	w28, [x8, #8]
    19a0:	str	x9, [x8]
    19a4:	ldr	x8, [x0, #24]
    19a8:	add	x8, x8, #0x9
    19ac:	str	x8, [x0, #24]
    19b0:	ldrb	w1, [x21, #16]
    19b4:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    19b8:	ldp	x9, x8, [x0, #16]
    19bc:	sub	x9, x9, x8
    19c0:	cmp	x9, #0x1
    19c4:	b.hi	19dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xca0>  // b.pmore
    19c8:	mov	w2, #0x2                   	// #2
    19cc:	mov	x1, x20
    19d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    19d4:	ldr	x8, [x0, #24]
    19d8:	b	19ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcb0>
    19dc:	strh	w25, [x8]
    19e0:	ldr	x8, [x0, #24]
    19e4:	add	x8, x8, #0x2
    19e8:	str	x8, [x0, #24]
    19ec:	ldr	x9, [x0, #16]
    19f0:	sub	x9, x9, x8
    19f4:	cmp	x9, #0x6
    19f8:	b.hi	1a10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcd4>  // b.pmore
    19fc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1a00:	mov	w2, #0x7                   	// #7
    1a04:	add	x1, x1, #0x0
    1a08:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a0c:	b	1a2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcf0>
    1a10:	mov	w9, #0x7469                	// #29801
    1a14:	movk	w9, #0x3d73, lsl #16
    1a18:	stur	w9, [x8, #3]
    1a1c:	str	w27, [x8]
    1a20:	ldr	x8, [x0, #24]
    1a24:	add	x8, x8, #0x7
    1a28:	str	x8, [x0, #24]
    1a2c:	ldr	w1, [x21, #20]
    1a30:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1a34:	ldp	x9, x8, [x0, #16]
    1a38:	sub	x9, x9, x8
    1a3c:	cmp	x9, #0x1
    1a40:	b.hi	1a58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd1c>  // b.pmore
    1a44:	mov	w2, #0x2                   	// #2
    1a48:	mov	x1, x20
    1a4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a50:	ldr	x8, [x0, #24]
    1a54:	b	1a68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd2c>
    1a58:	strh	w25, [x8]
    1a5c:	ldr	x8, [x0, #24]
    1a60:	add	x8, x8, #0x2
    1a64:	str	x8, [x0, #24]
    1a68:	ldr	x9, [x0, #16]
    1a6c:	sub	x9, x9, x8
    1a70:	cmp	x9, #0x2
    1a74:	b.hi	1a8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd50>  // b.pmore
    1a78:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1a7c:	mov	w2, #0x3                   	// #3
    1a80:	add	x1, x1, #0x0
    1a84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a88:	b	1aa4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd68>
    1a8c:	mov	w9, #0x7963                	// #31075
    1a90:	strb	w28, [x8, #2]
    1a94:	strh	w9, [x8]
    1a98:	ldr	x8, [x0, #24]
    1a9c:	add	x8, x8, #0x3
    1aa0:	str	x8, [x0, #24]
    1aa4:	ldp	w9, w8, [x21, #8]
    1aa8:	sub	w1, w8, w9
    1aac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1ab0:	ldp	x9, x8, [x0, #16]
    1ab4:	cmp	x8, x9
    1ab8:	b.cs	1ad0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd94>  // b.hs, b.nlast
    1abc:	add	x9, x8, #0x1
    1ac0:	str	x9, [x0, #24]
    1ac4:	mov	w9, #0xa                   	// #10
    1ac8:	strb	w9, [x8]
    1acc:	b	1ad8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd9c>
    1ad0:	mov	w1, #0xa                   	// #10
    1ad4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1ad8:	add	x21, x21, #0x18
    1adc:	cmp	x21, x26
    1ae0:	b.ne	18f0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbb4>  // b.any
    1ae4:	ldr	x8, [sp, #72]
    1ae8:	ldr	x20, [x8, #288]
    1aec:	cbz	x20, 1b90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe54>
    1af0:	adrp	x19, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1af4:	add	x19, x19, #0x0
    1af8:	mov	w21, #0x10                  	// #16
    1afc:	mov	w22, #0x1                   	// #1
    1b00:	mov	w23, #0xa                   	// #10
    1b04:	neg	x8, x20
    1b08:	and	x24, x20, x8
    1b0c:	bl	0 <_ZN4llvm4dbgsEv>
    1b10:	ldp	x9, x8, [x0, #16]
    1b14:	sub	x9, x9, x8
    1b18:	cmp	x9, #0xd
    1b1c:	b.hi	1b30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdf4>  // b.pmore
    1b20:	mov	w2, #0xe                   	// #14
    1b24:	mov	x1, x19
    1b28:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b2c:	b	1b4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe10>
    1b30:	ldur	x9, [x19, #6]
    1b34:	ldr	x10, [x19]
    1b38:	stur	x9, [x8, #6]
    1b3c:	str	x10, [x8]
    1b40:	ldr	x8, [x0, #24]
    1b44:	add	x8, x8, #0xe
    1b48:	str	x8, [x0, #24]
    1b4c:	sub	x1, x29, #0x70
    1b50:	stp	x24, xzr, [x29, #-112]
    1b54:	stur	w21, [x29, #-96]
    1b58:	sturh	w22, [x29, #-92]
    1b5c:	sturb	w22, [x29, #-90]
    1b60:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1b64:	ldp	x9, x8, [x0, #16]
    1b68:	cmp	x8, x9
    1b6c:	b.cs	1b80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe44>  // b.hs, b.nlast
    1b70:	add	x9, x8, #0x1
    1b74:	str	x9, [x0, #24]
    1b78:	strb	w23, [x8]
    1b7c:	b	1b88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe4c>
    1b80:	mov	w1, #0xa                   	// #10
    1b84:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1b88:	eor	x20, x24, x20
    1b8c:	cbnz	x20, 1b04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdc8>
    1b90:	bl	0 <_ZN4llvm4dbgsEv>
    1b94:	ldp	x9, x8, [x0, #16]
    1b98:	sub	x9, x9, x8
    1b9c:	cmp	x9, #0xd
    1ba0:	b.hi	1bb8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe7c>  // b.pmore
    1ba4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1ba8:	add	x1, x1, #0x0
    1bac:	mov	w2, #0xe                   	// #14
    1bb0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1bb4:	b	1bdc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xea0>
    1bb8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1bbc:	add	x9, x9, #0x0
    1bc0:	ldur	x10, [x9, #6]
    1bc4:	ldr	x9, [x9]
    1bc8:	stur	x10, [x8, #6]
    1bcc:	str	x9, [x8]
    1bd0:	ldr	x8, [x0, #24]
    1bd4:	add	x8, x8, #0xe
    1bd8:	str	x8, [x0, #24]
    1bdc:	ldr	x8, [sp, #72]
    1be0:	mov	w9, #0x10                  	// #16
    1be4:	mov	w10, #0x1                   	// #1
    1be8:	sub	x1, x29, #0x70
    1bec:	ldr	x8, [x8, #296]
    1bf0:	stur	w9, [x29, #-96]
    1bf4:	sturh	w10, [x29, #-92]
    1bf8:	sturb	w10, [x29, #-90]
    1bfc:	stp	x8, xzr, [x29, #-112]
    1c00:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1c04:	ldp	x9, x8, [x0, #16]
    1c08:	ldp	x23, x25, [sp, #40]
    1c0c:	ldr	w26, [sp, #36]
    1c10:	cmp	x8, x9
    1c14:	b.cs	1c2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xef0>  // b.hs, b.nlast
    1c18:	add	x9, x8, #0x1
    1c1c:	mov	w10, #0xa                   	// #10
    1c20:	str	x9, [x0, #24]
    1c24:	strb	w10, [x8]
    1c28:	b	1c34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xef8>
    1c2c:	mov	w1, #0xa                   	// #10
    1c30:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1c34:	bl	0 <_ZN4llvm4dbgsEv>
    1c38:	ldp	x9, x8, [x0, #16]
    1c3c:	sub	x9, x9, x8
    1c40:	cmp	x9, #0xd
    1c44:	b.hi	1c5c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf20>  // b.pmore
    1c48:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1c4c:	add	x1, x1, #0x0
    1c50:	mov	w2, #0xe                   	// #14
    1c54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c58:	b	1c80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf44>
    1c5c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1c60:	add	x9, x9, #0x0
    1c64:	ldur	x10, [x9, #6]
    1c68:	ldr	x9, [x9]
    1c6c:	stur	x10, [x8, #6]
    1c70:	str	x9, [x8]
    1c74:	ldr	x8, [x0, #24]
    1c78:	add	x8, x8, #0xe
    1c7c:	str	x8, [x0, #24]
    1c80:	ldr	x8, [sp, #72]
    1c84:	mov	w9, #0x10                  	// #16
    1c88:	mov	w10, #0x1                   	// #1
    1c8c:	sub	x1, x29, #0x70
    1c90:	ldr	x8, [x8, #304]
    1c94:	stur	w9, [x29, #-96]
    1c98:	sturh	w10, [x29, #-92]
    1c9c:	sturb	w10, [x29, #-90]
    1ca0:	stp	x8, xzr, [x29, #-112]
    1ca4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1ca8:	ldp	x9, x8, [x0, #16]
    1cac:	cmp	x8, x9
    1cb0:	b.cs	1cc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf8c>  // b.hs, b.nlast
    1cb4:	add	x9, x8, #0x1
    1cb8:	mov	w10, #0xa                   	// #10
    1cbc:	str	x9, [x0, #24]
    1cc0:	strb	w10, [x8]
    1cc4:	b	1cd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf94>
    1cc8:	mov	w1, #0xa                   	// #10
    1ccc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1cd0:	ldur	w8, [x29, #-72]
    1cd4:	ldr	x22, [sp, #24]
    1cd8:	ldr	w24, [sp, #20]
    1cdc:	cmp	w8, #0x41
    1ce0:	b.cc	1cf0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfb4>  // b.lo, b.ul, b.last
    1ce4:	ldur	x0, [x29, #-80]
    1ce8:	cbz	x0, 1cf0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfb4>
    1cec:	bl	0 <_ZdaPv>
    1cf0:	ldur	x0, [x29, #-32]
    1cf4:	bl	0 <_ZdlPv>
    1cf8:	ldur	x0, [x29, #-64]
    1cfc:	cbz	x0, 1d04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfc8>
    1d00:	bl	0 <_ZdlPv>
    1d04:	ldr	x8, [sp, #56]
    1d08:	ldur	x19, [x29, #-168]
    1d0c:	mov	w20, #0x64                  	// #100
    1d10:	ldrb	w8, [x8]
    1d14:	tbnz	w8, #6, 1d2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xff0>
    1d18:	ldr	x0, [x25]
    1d1c:	ldr	x1, [sp, #136]
    1d20:	bl	0 <_ZN4llvm12MCSchedModel19computeInstrLatencyERKNS_15MCSubtargetInfoERKNS_16MCSchedClassDescE>
    1d24:	cmp	w0, #0x0
    1d28:	csel	w20, w20, w0, lt  // lt = tstop
    1d2c:	ldr	x13, [sp, #8]
    1d30:	ldr	x8, [sp, #64]
    1d34:	str	w20, [x19, #312]
    1d38:	add	x8, x8, x13, lsl #6
    1d3c:	ldrb	w10, [x8, #4]
    1d40:	ldr	w8, [x22, #24]
    1d44:	cbz	w10, 1d7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1040>
    1d48:	cbz	w8, 1d7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1040>
    1d4c:	ldr	x11, [x22, #16]
    1d50:	mov	x9, xzr
    1d54:	ldrb	w12, [x11], #16
    1d58:	add	x9, x9, #0x1
    1d5c:	cmp	w12, #0x1
    1d60:	cset	w12, eq  // eq = none
    1d64:	cmp	x9, x8
    1d68:	sub	w10, w10, w12
    1d6c:	b.cs	1d74 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1038>  // b.hs, b.nlast
    1d70:	cbnz	w10, 1d54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1018>
    1d74:	cbnz	w10, 1d80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1044>
    1d78:	b	1d9c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1060>
    1d7c:	cbz	w10, 1d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x105c>
    1d80:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1d84:	add	x0, x0, #0x0
    1d88:	sub	x8, x29, #0x90
    1d8c:	mov	x1, x22
    1d90:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1d94:	b	1e54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1118>
    1d98:	mov	w9, wzr
    1d9c:	ldr	x10, [sp, #56]
    1da0:	ldrb	w10, [x10]
    1da4:	tbnz	w10, #2, 1db4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1078>
    1da8:	mov	w8, #0x1                   	// #1
    1dac:	stur	x8, [x29, #-144]
    1db0:	b	1e54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1118>
    1db4:	ldr	x10, [sp, #64]
    1db8:	add	x10, x10, x13, lsl #6
    1dbc:	ldrh	w10, [x10, #2]
    1dc0:	sub	w10, w10, #0x1
    1dc4:	cmp	w8, w10
    1dc8:	b.ls	21e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14a4>  // b.plast
    1dcc:	cmp	w9, w8
    1dd0:	b.eq	1de8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10ac>  // b.none
    1dd4:	ldr	x8, [x22, #16]
    1dd8:	lsl	x9, x10, #4
    1ddc:	ldrb	w8, [x8, x9]
    1de0:	cmp	w8, #0x1
    1de4:	b.eq	1da8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x106c>  // b.none
    1de8:	sub	x8, x29, #0x28
    1dec:	mov	w9, #0x64                  	// #100
    1df0:	add	x20, x8, #0x10
    1df4:	sub	x0, x29, #0x28
    1df8:	sub	x1, x29, #0x70
    1dfc:	mov	x2, xzr
    1e00:	stur	x20, [x29, #-40]
    1e04:	stur	x9, [x29, #-112]
    1e08:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1e0c:	ldur	x21, [x29, #-112]
    1e10:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1e14:	add	x1, x1, #0x0
    1e18:	mov	w2, #0x64                  	// #100
    1e1c:	mov	x19, x0
    1e20:	stur	x0, [x29, #-40]
    1e24:	stur	x21, [x29, #-24]
    1e28:	bl	0 <memcpy>
    1e2c:	sub	x8, x29, #0x90
    1e30:	sub	x0, x29, #0x28
    1e34:	mov	x1, x22
    1e38:	stur	x21, [x29, #-32]
    1e3c:	strb	wzr, [x19, x21]
    1e40:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1e44:	ldur	x0, [x29, #-40]
    1e48:	cmp	x0, x20
    1e4c:	b.eq	1e54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1118>  // b.none
    1e50:	bl	0 <_ZdlPv>
    1e54:	ldur	x8, [x29, #-144]
    1e58:	tst	x8, #0xfffffffffffffffe
    1e5c:	and	x10, x8, #0xfffffffffffffffe
    1e60:	cset	w9, ne  // ne = any
    1e64:	orr	x9, x10, x9
    1e68:	stur	x9, [x29, #-144]
    1e6c:	cbz	x10, 1e9c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1160>
    1e70:	orr	x8, x8, #0x1
    1e74:	add	x1, sp, #0xb0
    1e78:	mov	x0, x23
    1e7c:	str	x8, [sp, #176]
    1e80:	stur	xzr, [x29, #-144]
    1e84:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1e88:	ldr	x8, [sp, #176]
    1e8c:	cbnz	x8, 21c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x148c>
    1e90:	ldur	x8, [x29, #-144]
    1e94:	cbz	x8, 2098 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x135c>
    1e98:	b	21c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1484>
    1e9c:	cbnz	x9, 21c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1484>
    1ea0:	ldur	x1, [x29, #-168]
    1ea4:	mov	x0, x25
    1ea8:	mov	x2, x22
    1eac:	mov	w3, w24
    1eb0:	bl	84 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>
    1eb4:	ldur	x1, [x29, #-168]
    1eb8:	mov	x0, x25
    1ebc:	mov	x2, x22
    1ec0:	mov	w3, w24
    1ec4:	bl	7e8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>
    1ec8:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    1ecc:	ldr	x8, [x8]
    1ed0:	ldrb	w8, [x8]
    1ed4:	cbz	w8, 1f98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x125c>
    1ed8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1edc:	add	x0, x0, #0x0
    1ee0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1ee4:	tbz	w0, #0, 1f30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11f4>
    1ee8:	bl	0 <_ZN4llvm4dbgsEv>
    1eec:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1ef0:	add	x1, x1, #0x0
    1ef4:	mov	w2, #0xd                   	// #13
    1ef8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1efc:	ldur	x8, [x29, #-168]
    1f00:	ldr	w1, [x8, #312]
    1f04:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1f08:	ldp	x9, x8, [x0, #16]
    1f0c:	cmp	x8, x9
    1f10:	b.cs	1f28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11ec>  // b.hs, b.nlast
    1f14:	add	x9, x8, #0x1
    1f18:	mov	w10, #0xa                   	// #10
    1f1c:	str	x9, [x0, #24]
    1f20:	strb	w10, [x8]
    1f24:	b	1f30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11f4>
    1f28:	mov	w1, #0xa                   	// #10
    1f2c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1f30:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    1f34:	ldr	x8, [x8]
    1f38:	ldrb	w8, [x8]
    1f3c:	cbz	w8, 1f98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x125c>
    1f40:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1f44:	add	x0, x0, #0x0
    1f48:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1f4c:	tbz	w0, #0, 1f98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x125c>
    1f50:	bl	0 <_ZN4llvm4dbgsEv>
    1f54:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1f58:	add	x1, x1, #0x0
    1f5c:	mov	w2, #0xe                   	// #14
    1f60:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1f64:	ldur	x8, [x29, #-168]
    1f68:	ldr	w1, [x8, #316]
    1f6c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1f70:	ldp	x9, x8, [x0, #16]
    1f74:	cmp	x8, x9
    1f78:	b.cs	1f90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1254>  // b.hs, b.nlast
    1f7c:	add	x9, x8, #0x1
    1f80:	mov	w10, #0xa                   	// #10
    1f84:	str	x9, [x0, #24]
    1f88:	strb	w10, [x8]
    1f8c:	b	1f98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x125c>
    1f90:	mov	w1, #0xa                   	// #10
    1f94:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1f98:	ldur	x1, [x29, #-168]
    1f9c:	sub	x8, x29, #0x28
    1fa0:	mov	x2, x22
    1fa4:	bl	cb8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>
    1fa8:	ldur	x8, [x29, #-40]
    1fac:	tst	x8, #0xfffffffffffffffe
    1fb0:	and	x10, x8, #0xfffffffffffffffe
    1fb4:	cset	w9, ne  // ne = any
    1fb8:	orr	x9, x10, x9
    1fbc:	stur	x9, [x29, #-40]
    1fc0:	cbz	x10, 1ff0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12b4>
    1fc4:	orr	x8, x8, #0x1
    1fc8:	add	x1, sp, #0xa8
    1fcc:	mov	x0, x23
    1fd0:	str	x8, [sp, #168]
    1fd4:	stur	xzr, [x29, #-40]
    1fd8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1fdc:	ldr	x8, [sp, #168]
    1fe0:	cbnz	x8, 21d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x149c>
    1fe4:	ldur	x8, [x29, #-40]
    1fe8:	cbz	x8, 2098 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x135c>
    1fec:	b	21d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1494>
    1ff0:	cbnz	x9, 21d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1494>
    1ff4:	mov	w8, #0x3ffe                	// #16382
    1ff8:	cmp	w26, w8
    1ffc:	b.eq	204c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1310>  // b.none
    2000:	ldr	x8, [sp, #56]
    2004:	ldr	x8, [x8]
    2008:	tbnz	w8, #1, 204c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1310>
    200c:	ldr	w8, [x22]
    2010:	add	x19, x25, #0x70
    2014:	sub	x1, x29, #0x28
    2018:	mov	x0, x19
    201c:	sturh	w8, [x29, #-40]
    2020:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2024:	ldur	x1, [x29, #-168]
    2028:	add	x0, x0, #0x8
    202c:	stur	xzr, [x29, #-168]
    2030:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2034:	ldr	w8, [x22]
    2038:	sub	x1, x29, #0x28
    203c:	mov	x0, x19
    2040:	sturh	w8, [x29, #-40]
    2044:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2048:	b	2080 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1344>
    204c:	add	x19, x25, #0x90
    2050:	sub	x1, x29, #0x28
    2054:	mov	x0, x19
    2058:	stur	x22, [x29, #-40]
    205c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2060:	ldur	x1, [x29, #-168]
    2064:	add	x0, x0, #0x8
    2068:	stur	xzr, [x29, #-168]
    206c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2070:	sub	x1, x29, #0x28
    2074:	mov	x0, x19
    2078:	stur	x22, [x29, #-40]
    207c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2080:	ldrb	w8, [x23, #8]
    2084:	ldr	x9, [x0, #8]
    2088:	and	w8, w8, #0xfc
    208c:	orr	w8, w8, #0x2
    2090:	strb	w8, [x23, #8]
    2094:	str	x9, [x23]
    2098:	sub	x0, x29, #0xa8
    209c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20a0:	ldp	x20, x19, [sp, #432]
    20a4:	ldp	x22, x21, [sp, #416]
    20a8:	ldp	x24, x23, [sp, #400]
    20ac:	ldp	x26, x25, [sp, #384]
    20b0:	ldp	x28, x27, [sp, #368]
    20b4:	ldp	x29, x30, [sp, #352]
    20b8:	add	sp, sp, #0x1c0
    20bc:	ret
    20c0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20c4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20c8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20cc:	add	x0, x0, #0x0
    20d0:	add	x1, x1, #0x0
    20d4:	add	x3, x3, #0x0
    20d8:	mov	w2, #0xfa                  	// #250
    20dc:	bl	0 <__assert_fail>
    20e0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20e4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20e8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20ec:	add	x0, x0, #0x0
    20f0:	add	x1, x1, #0x0
    20f4:	add	x3, x3, #0x0
    20f8:	mov	w2, #0x64                  	// #100
    20fc:	bl	0 <__assert_fail>
    2100:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2104:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2108:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    210c:	add	x0, x0, #0x0
    2110:	add	x1, x1, #0x0
    2114:	add	x3, x3, #0x0
    2118:	mov	w2, #0x141                 	// #321
    211c:	bl	0 <__assert_fail>
    2120:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2124:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2128:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    212c:	add	x0, x0, #0x0
    2130:	add	x1, x1, #0x0
    2134:	add	x3, x3, #0x0
    2138:	mov	w2, #0x4b3                 	// #1203
    213c:	bl	0 <__assert_fail>
    2140:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2144:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2148:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    214c:	add	x0, x0, #0x0
    2150:	add	x1, x1, #0x0
    2154:	add	x3, x3, #0x0
    2158:	mov	w2, #0x75                  	// #117
    215c:	bl	0 <__assert_fail>
    2160:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2164:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2168:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    216c:	add	x0, x0, #0x0
    2170:	add	x1, x1, #0x0
    2174:	add	x3, x3, #0x0
    2178:	mov	w2, #0x4cf                 	// #1231
    217c:	bl	0 <__assert_fail>
    2180:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2184:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2188:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    218c:	add	x0, x0, #0x0
    2190:	add	x1, x1, #0x0
    2194:	add	x3, x3, #0x0
    2198:	mov	w2, #0x1ff                 	// #511
    219c:	bl	0 <__assert_fail>
    21a0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    21a4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    21a8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    21ac:	add	x0, x0, #0x0
    21b0:	add	x1, x1, #0x0
    21b4:	add	x3, x3, #0x0
    21b8:	mov	w2, #0x2d                  	// #45
    21bc:	bl	0 <__assert_fail>
    21c0:	sub	x0, x29, #0x90
    21c4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    21c8:	add	x0, sp, #0xb0
    21cc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    21d0:	sub	x0, x29, #0x28
    21d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    21d8:	add	x0, sp, #0xa8
    21dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    21e0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    21e4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    21e8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    21ec:	add	x0, x0, #0x0
    21f0:	add	x1, x1, #0x0
    21f4:	add	x3, x3, #0x0
    21f8:	mov	w2, #0x99                  	// #153
    21fc:	bl	0 <__assert_fail>

0000000000002200 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>:
    2200:	sub	sp, sp, #0x80
    2204:	stp	x29, x30, [sp, #80]
    2208:	stp	x22, x21, [sp, #96]
    220c:	stp	x20, x19, [sp, #112]
    2210:	add	x29, sp, #0x50
    2214:	mov	x19, x8
    2218:	ldr	w8, [x1]
    221c:	add	x22, x0, #0x70
    2220:	mov	x20, x1
    2224:	mov	x21, x0
    2228:	sub	x1, x29, #0x24
    222c:	sub	x2, x29, #0x20
    2230:	mov	x0, x22
    2234:	stur	w8, [x29, #-36]
    2238:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    223c:	ldp	x9, x8, [x21, #112]
    2240:	ldr	w11, [x21, #136]
    2244:	ldur	x10, [x29, #-32]
    2248:	stp	x22, x9, [x29, #-32]
    224c:	add	x8, x8, x11, lsl #4
    2250:	tbz	w0, #0, 225c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5c>
    2254:	stur	x10, [x29, #-16]
    2258:	b	2260 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x60>
    225c:	stur	x8, [x29, #-16]
    2260:	sub	x0, x29, #0x20
    2264:	add	x1, sp, #0x8
    2268:	stur	x8, [x29, #-8]
    226c:	stp	x22, x9, [sp, #8]
    2270:	stp	x8, x8, [sp, #24]
    2274:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2278:	tbz	w0, #0, 2294 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x94>
    227c:	ldr	w8, [x20]
    2280:	sub	x1, x29, #0x20
    2284:	mov	x0, x22
    2288:	sturh	w8, [x29, #-32]
    228c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2290:	b	22fc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xfc>
    2294:	add	x22, x21, #0x90
    2298:	add	x1, sp, #0x8
    229c:	sub	x2, x29, #0x20
    22a0:	mov	x0, x22
    22a4:	str	x20, [sp, #8]
    22a8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    22ac:	ldp	x9, x8, [x21, #144]
    22b0:	ldr	w11, [x21, #168]
    22b4:	ldur	x10, [x29, #-32]
    22b8:	stp	x22, x9, [x29, #-32]
    22bc:	add	x8, x8, x11, lsl #4
    22c0:	tbz	w0, #0, 22cc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcc>
    22c4:	stur	x10, [x29, #-16]
    22c8:	b	22d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd0>
    22cc:	stur	x8, [x29, #-16]
    22d0:	sub	x0, x29, #0x20
    22d4:	add	x1, sp, #0x8
    22d8:	stur	x8, [x29, #-8]
    22dc:	stp	x22, x9, [sp, #8]
    22e0:	stp	x8, x8, [sp, #24]
    22e4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    22e8:	tbz	w0, #0, 2318 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x118>
    22ec:	sub	x1, x29, #0x20
    22f0:	mov	x0, x22
    22f4:	stur	x20, [x29, #-32]
    22f8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    22fc:	ldrb	w8, [x19, #8]
    2300:	ldr	x9, [x0, #8]
    2304:	and	w8, w8, #0xfc
    2308:	orr	w8, w8, #0x2
    230c:	strb	w8, [x19, #8]
    2310:	str	x9, [x19]
    2314:	b	2328 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x128>
    2318:	mov	x8, x19
    231c:	mov	x0, x21
    2320:	mov	x1, x20
    2324:	bl	d3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>
    2328:	ldp	x20, x19, [sp, #112]
    232c:	ldp	x22, x21, [sp, #96]
    2330:	ldp	x29, x30, [sp, #80]
    2334:	add	sp, sp, #0x80
    2338:	ret

000000000000233c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE>:
    233c:	sub	sp, sp, #0xb0
    2340:	stp	x29, x30, [sp, #80]
    2344:	stp	x28, x27, [sp, #96]
    2348:	stp	x26, x25, [sp, #112]
    234c:	stp	x24, x23, [sp, #128]
    2350:	stp	x22, x21, [sp, #144]
    2354:	stp	x20, x19, [sp, #160]
    2358:	add	x29, sp, #0x50
    235c:	mov	x19, x8
    2360:	sub	x8, x29, #0x10
    2364:	mov	x20, x1
    2368:	mov	x21, x0
    236c:	bl	2200 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>
    2370:	ldurb	w9, [x29, #-8]
    2374:	ubfiz	w10, w9, #1, #1
    2378:	and	w8, w9, #0xfffffffd
    237c:	orr	w10, w10, w8
    2380:	sturb	w10, [x29, #-8]
    2384:	tbnz	w9, #0, 2440 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x104>
    2388:	sub	x0, x29, #0x10
    238c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2390:	mov	x22, x0
    2394:	mov	w0, #0x350                 	// #848
    2398:	bl	0 <_Znwm>
    239c:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    23a0:	ldr	d0, [x8]
    23a4:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    23a8:	str	x22, [x0]
    23ac:	strb	wzr, [x0, #8]
    23b0:	str	d0, [x0, #24]
    23b4:	str	d0, [x0, #584]
    23b8:	ldr	d0, [x8]
    23bc:	add	x8, x0, #0x20
    23c0:	str	x8, [x0, #16]
    23c4:	add	x8, x0, #0x250
    23c8:	str	d0, [x0, #784]
    23cc:	movi	v0.2d, #0x0
    23d0:	str	x8, [x0, #576]
    23d4:	str	d0, [x0, #792]
    23d8:	ldr	x8, [x22, #288]
    23dc:	mov	w9, #0x1                   	// #1
    23e0:	stur	x0, [x29, #-32]
    23e4:	str	w9, [sp, #40]
    23e8:	str	x8, [x0, #800]
    23ec:	add	x8, x0, #0x328
    23f0:	str	xzr, [sp, #32]
    23f4:	strb	wzr, [x8, #32]
    23f8:	stp	q0, q0, [x8]
    23fc:	strb	wzr, [sp, #28]
    2400:	ldr	x0, [x21, #24]
    2404:	cbz	x0, 246c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x130>
    2408:	ldr	x8, [x21]
    240c:	ldr	x9, [x0]
    2410:	add	x2, sp, #0x20
    2414:	mov	x1, x20
    2418:	ldr	x8, [x8, #152]
    241c:	ldr	w24, [x8, #28]
    2420:	ldr	x8, [x9, #80]
    2424:	mov	w3, w24
    2428:	blr	x8
    242c:	and	w8, w0, #0x1
    2430:	strb	w8, [sp, #28]
    2434:	tbz	w0, #0, 2474 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x138>
    2438:	mov	w23, #0x1                   	// #1
    243c:	b	2494 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x158>
    2440:	ldur	x9, [x29, #-16]
    2444:	sturb	w8, [x29, #-8]
    2448:	sub	x1, x29, #0x18
    244c:	mov	x0, x19
    2450:	orr	x8, x9, #0x1
    2454:	stp	x8, xzr, [x29, #-24]
    2458:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    245c:	ldur	x8, [x29, #-24]
    2460:	cbz	x8, 2700 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3c4>
    2464:	sub	x0, x29, #0x18
    2468:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    246c:	mov	w23, wzr
    2470:	b	24bc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x180>
    2474:	ldr	x0, [x21, #24]
    2478:	add	x2, sp, #0x20
    247c:	mov	x1, x20
    2480:	mov	w3, w24
    2484:	ldr	x8, [x0]
    2488:	ldr	x8, [x8, #88]
    248c:	blr	x8
    2490:	mov	w23, w0
    2494:	ldr	x0, [x21, #24]
    2498:	mov	x1, x20
    249c:	mov	w2, w24
    24a0:	ldr	x8, [x0]
    24a4:	ldr	x8, [x8, #96]
    24a8:	blr	x8
    24ac:	tbz	w0, #0, 24bc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x180>
    24b0:	ldur	x8, [x29, #-32]
    24b4:	mov	w9, #0x1                   	// #1
    24b8:	strb	w9, [x8, #8]
    24bc:	strh	wzr, [sp, #24]
    24c0:	ldr	w8, [x22, #104]
    24c4:	cbz	w8, 25a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x268>
    24c8:	ldr	x24, [x22, #96]
    24cc:	lsl	x25, x8, #4
    24d0:	mov	w26, #0x30                  	// #48
    24d4:	ldr	w8, [x24]
    24d8:	tbnz	w8, #31, 2508 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1cc>
    24dc:	ldr	w9, [x20, #24]
    24e0:	cmp	w9, w8
    24e4:	b.ls	2728 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3ec>  // b.plast
    24e8:	ldr	x9, [x20, #16]
    24ec:	lsl	x10, x8, #4
    24f0:	ldrb	w10, [x9, x10]
    24f4:	cmp	w10, #0x1
    24f8:	b.ne	2598 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x25c>  // b.any
    24fc:	add	x8, x9, x8, lsl #4
    2500:	ldr	w8, [x8, #8]
    2504:	b	250c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1d0>
    2508:	ldrh	w8, [x24, #8]
    250c:	tst	w8, #0xffff
    2510:	strh	w8, [sp, #24]
    2514:	b.eq	2598 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x25c>  // b.none
    2518:	ldur	x8, [x29, #-32]
    251c:	add	x2, sp, #0x18
    2520:	mov	x1, x24
    2524:	add	x0, x8, #0x240
    2528:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    252c:	ldur	x9, [x29, #-32]
    2530:	ldr	w8, [x9, #584]
    2534:	cbz	w8, 2748 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x40c>
    2538:	tbz	w23, #0, 2598 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x25c>
    253c:	ldr	x9, [x9, #576]
    2540:	ldr	w27, [sp, #40]
    2544:	madd	x8, x8, x26, x9
    2548:	cmp	w27, #0x40
    254c:	sub	x28, x8, #0x30
    2550:	b.hi	2578 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x23c>  // b.pmore
    2554:	ldr	x8, [sp, #32]
    2558:	cbz	x8, 2588 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x24c>
    255c:	ldr	w1, [x24, #4]
    2560:	cmp	w27, w1
    2564:	b.ls	2598 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x25c>  // b.plast
    2568:	add	x0, sp, #0x20
    256c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2570:	tbnz	w0, #0, 2590 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x254>
    2574:	b	2598 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x25c>
    2578:	add	x0, sp, #0x20
    257c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2580:	cmp	w0, w27
    2584:	b.ne	255c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x220>  // b.any
    2588:	ldr	w8, [x24]
    258c:	tbnz	w8, #31, 2598 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x25c>
    2590:	mov	w8, #0x1                   	// #1
    2594:	strb	w8, [x28, #42]
    2598:	subs	x25, x25, #0x10
    259c:	add	x24, x24, #0x10
    25a0:	b.ne	24d4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x198>  // b.any
    25a4:	ldr	w1, [x22, #8]
    25a8:	cbz	w1, 26c4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x388>
    25ac:	add	x0, sp, #0x8
    25b0:	mov	x2, xzr
    25b4:	mov	w3, wzr
    25b8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    25bc:	ldr	x0, [x21, #24]
    25c0:	cbz	x0, 25dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a0>
    25c4:	ldr	x8, [x0]
    25c8:	ldr	x1, [x21, #16]
    25cc:	add	x3, sp, #0x8
    25d0:	mov	x2, x20
    25d4:	ldr	x8, [x8, #72]
    25d8:	blr	x8
    25dc:	ldr	w8, [x22, #8]
    25e0:	cbz	w8, 268c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x350>
    25e4:	ldr	x22, [x22]
    25e8:	mov	w9, #0x14                  	// #20
    25ec:	mov	w21, wzr
    25f0:	madd	x24, x8, x9, x22
    25f4:	ldr	w8, [x22]
    25f8:	tbnz	w8, #31, 2628 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2ec>
    25fc:	ldr	w9, [x20, #24]
    2600:	cmp	w9, w8
    2604:	b.ls	2728 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3ec>  // b.plast
    2608:	ldr	x9, [x20, #16]
    260c:	lsl	x10, x8, #4
    2610:	ldrb	w10, [x9, x10]
    2614:	cmp	w10, #0x1
    2618:	b.ne	2768 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x42c>  // b.any
    261c:	add	x8, x9, x8, lsl #4
    2620:	ldr	w8, [x8, #8]
    2624:	b	262c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2f0>
    2628:	ldrh	w8, [x22, #8]
    262c:	tst	w8, #0xffff
    2630:	strh	w8, [sp, #24]
    2634:	b.ne	2640 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x304>  // b.any
    2638:	ldrb	w9, [x22, #16]
    263c:	cbnz	w9, 267c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x340>
    2640:	tst	w8, #0xffff
    2644:	b.eq	2788 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x44c>  // b.none
    2648:	ldur	x8, [x29, #-32]
    264c:	add	x0, sp, #0x8
    2650:	mov	w1, w21
    2654:	add	x23, x8, #0x10
    2658:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    265c:	and	w8, w0, #0x1
    2660:	add	x2, sp, #0x18
    2664:	add	x3, sp, #0x4
    2668:	add	x4, sp, #0x1c
    266c:	mov	x0, x23
    2670:	mov	x1, x22
    2674:	strb	w8, [sp, #4]
    2678:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    267c:	add	x22, x22, #0x14
    2680:	cmp	x22, x24
    2684:	add	w21, w21, #0x1
    2688:	b.ne	25f4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2b8>  // b.any
    268c:	ldrb	w8, [x19, #8]
    2690:	ldr	w9, [sp, #16]
    2694:	ldur	x10, [x29, #-32]
    2698:	stur	xzr, [x29, #-32]
    269c:	and	w8, w8, #0xfc
    26a0:	cmp	w9, #0x41
    26a4:	orr	w8, w8, #0x2
    26a8:	strb	w8, [x19, #8]
    26ac:	str	x10, [x19]
    26b0:	b.cc	26e0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3a4>  // b.lo, b.ul, b.last
    26b4:	ldr	x0, [sp, #8]
    26b8:	cbz	x0, 26e0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3a4>
    26bc:	bl	0 <_ZdaPv>
    26c0:	b	26e0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3a4>
    26c4:	ldrb	w8, [x19, #8]
    26c8:	ldur	x9, [x29, #-32]
    26cc:	stur	xzr, [x29, #-32]
    26d0:	and	w8, w8, #0xfc
    26d4:	orr	w8, w8, #0x2
    26d8:	strb	w8, [x19, #8]
    26dc:	str	x9, [x19]
    26e0:	ldr	w8, [sp, #40]
    26e4:	cmp	w8, #0x41
    26e8:	b.cc	26f8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3bc>  // b.lo, b.ul, b.last
    26ec:	ldr	x0, [sp, #32]
    26f0:	cbz	x0, 26f8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3bc>
    26f4:	bl	0 <_ZdaPv>
    26f8:	sub	x0, x29, #0x20
    26fc:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2700:	sub	x0, x29, #0x10
    2704:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2708:	ldp	x20, x19, [sp, #160]
    270c:	ldp	x22, x21, [sp, #144]
    2710:	ldp	x24, x23, [sp, #128]
    2714:	ldp	x26, x25, [sp, #112]
    2718:	ldp	x28, x27, [sp, #96]
    271c:	ldp	x29, x30, [sp, #80]
    2720:	add	sp, sp, #0xb0
    2724:	ret
    2728:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    272c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2730:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2734:	add	x0, x0, #0x0
    2738:	add	x1, x1, #0x0
    273c:	add	x3, x3, #0x0
    2740:	mov	w2, #0x99                  	// #153
    2744:	bl	0 <__assert_fail>
    2748:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    274c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2750:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2754:	add	x0, x0, #0x0
    2758:	add	x1, x1, #0x0
    275c:	add	x3, x3, #0x0
    2760:	mov	w2, #0xa7                  	// #167
    2764:	bl	0 <__assert_fail>
    2768:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    276c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2770:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2774:	add	x0, x0, #0x0
    2778:	add	x1, x1, #0x0
    277c:	add	x3, x3, #0x0
    2780:	mov	w2, #0x41                  	// #65
    2784:	bl	0 <__assert_fail>
    2788:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    278c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2790:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2794:	add	x0, x0, #0x0
    2798:	add	x1, x1, #0x0
    279c:	add	x3, x3, #0x0
    27a0:	mov	w2, #0x2bb                 	// #699
    27a4:	bl	0 <__assert_fail>

00000000000027a8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>:
    27a8:	sub	sp, sp, #0xb0
    27ac:	stp	x29, x30, [sp, #80]
    27b0:	stp	x28, x27, [sp, #96]
    27b4:	stp	x26, x25, [sp, #112]
    27b8:	stp	x24, x23, [sp, #128]
    27bc:	stp	x22, x21, [sp, #144]
    27c0:	stp	x20, x19, [sp, #160]
    27c4:	add	x29, sp, #0x50
    27c8:	sub	x26, x1, x0
    27cc:	cmp	x26, #0x181
    27d0:	b.lt	2b00 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>  // b.tstop
    27d4:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    27d8:	mov	x21, x1
    27dc:	mov	x19, x0
    27e0:	mov	x22, x2
    27e4:	and	x20, x3, #0xff
    27e8:	add	x25, x0, #0x18
    27ec:	add	x24, x0, #0x8
    27f0:	add	x8, x0, #0x20
    27f4:	movk	x27, #0xaaab
    27f8:	mov	w28, #0x18                  	// #24
    27fc:	str	x8, [sp, #8]
    2800:	cbz	x22, 2a30 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x288>
    2804:	umulh	x8, x26, x27
    2808:	lsr	x8, x8, #5
    280c:	madd	x10, x8, x28, x19
    2810:	ldr	x9, [x19, #24]
    2814:	ldr	x11, [x10]
    2818:	sub	x22, x22, #0x1
    281c:	fmov	d0, x9
    2820:	fmov	d1, x11
    2824:	cnt	v0.8b, v0.8b
    2828:	cnt	v1.8b, v1.8b
    282c:	uaddlv	h0, v0.8b
    2830:	uaddlv	h1, v1.8b
    2834:	fmov	w12, s0
    2838:	fmov	w13, s1
    283c:	cmp	w12, w13
    2840:	b.cc	2854 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0xac>  // b.lo, b.ul, b.last
    2844:	cmp	x9, x11
    2848:	b.cs	28ac <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x104>  // b.hs, b.nlast
    284c:	cmp	w12, w13
    2850:	b.hi	28ac <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x104>  // b.pmore
    2854:	ldur	x14, [x21, #-24]
    2858:	fmov	d0, x14
    285c:	cnt	v0.8b, v0.8b
    2860:	uaddlv	h0, v0.8b
    2864:	fmov	w15, s0
    2868:	cmp	w13, w15
    286c:	b.cc	2880 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0xd8>  // b.lo, b.ul, b.last
    2870:	cmp	x11, x14
    2874:	b.cs	28f4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x14c>  // b.hs, b.nlast
    2878:	cmp	w13, w15
    287c:	b.hi	28f4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x14c>  // b.pmore
    2880:	ldr	x9, [x19]
    2884:	str	x11, [x19]
    2888:	madd	x8, x8, x28, x19
    288c:	str	x9, [x10]
    2890:	ldr	q0, [x24]
    2894:	stur	q0, [x29, #-32]
    2898:	ldur	q0, [x8, #8]
    289c:	str	q0, [x24]
    28a0:	ldur	q0, [x29, #-32]
    28a4:	stur	q0, [x8, #8]
    28a8:	b	295c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>
    28ac:	ldur	x14, [x21, #-24]
    28b0:	fmov	d0, x14
    28b4:	cnt	v0.8b, v0.8b
    28b8:	uaddlv	h0, v0.8b
    28bc:	fmov	w15, s0
    28c0:	cmp	w12, w15
    28c4:	b.cc	2934 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.lo, b.ul, b.last
    28c8:	cmp	x9, x14
    28cc:	b.cs	28d8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x130>  // b.hs, b.nlast
    28d0:	cmp	w12, w15
    28d4:	b.ls	2934 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.plast
    28d8:	cmp	w13, w15
    28dc:	b.cc	290c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x164>  // b.lo, b.ul, b.last
    28e0:	cmp	x11, x14
    28e4:	b.cs	2880 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0xd8>  // b.hs, b.nlast
    28e8:	cmp	w13, w15
    28ec:	b.ls	290c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x164>  // b.plast
    28f0:	b	2880 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0xd8>
    28f4:	cmp	w12, w15
    28f8:	b.cc	290c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x164>  // b.lo, b.ul, b.last
    28fc:	cmp	x9, x14
    2900:	b.cs	2934 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.hs, b.nlast
    2904:	cmp	w12, w15
    2908:	b.hi	2934 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.pmore
    290c:	ldr	x8, [x19]
    2910:	str	x14, [x19]
    2914:	stur	x8, [x21, #-24]
    2918:	ldr	q0, [x24]
    291c:	stur	q0, [x29, #-32]
    2920:	ldur	q0, [x21, #-16]
    2924:	str	q0, [x24]
    2928:	ldur	q0, [x29, #-32]
    292c:	stur	q0, [x21, #-16]
    2930:	b	295c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>
    2934:	ldr	x8, [x19]
    2938:	str	x9, [x19]
    293c:	str	x8, [x19, #24]
    2940:	ldr	q0, [x24]
    2944:	ldr	x8, [sp, #8]
    2948:	stur	q0, [x29, #-32]
    294c:	ldr	q0, [x8]
    2950:	str	q0, [x24]
    2954:	ldur	q0, [x29, #-32]
    2958:	str	q0, [x8]
    295c:	mov	x8, x21
    2960:	mov	x23, x25
    2964:	ldr	x9, [x19]
    2968:	fmov	d0, x9
    296c:	cnt	v0.8b, v0.8b
    2970:	uaddlv	h0, v0.8b
    2974:	fmov	w10, s0
    2978:	ldr	x11, [x23]
    297c:	fmov	d0, x11
    2980:	cnt	v0.8b, v0.8b
    2984:	uaddlv	h0, v0.8b
    2988:	fmov	w12, s0
    298c:	cmp	w12, w10
    2990:	b.cc	29a4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1fc>  // b.lo, b.ul, b.last
    2994:	cmp	x11, x9
    2998:	b.cs	29ac <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x204>  // b.hs, b.nlast
    299c:	cmp	w12, w10
    29a0:	b.hi	29ac <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x204>  // b.pmore
    29a4:	add	x23, x23, #0x18
    29a8:	b	2978 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1d0>
    29ac:	ldr	x12, [x8, #-24]!
    29b0:	fmov	d0, x12
    29b4:	cnt	v0.8b, v0.8b
    29b8:	uaddlv	h0, v0.8b
    29bc:	fmov	w13, s0
    29c0:	cmp	w10, w13
    29c4:	b.cc	29ac <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x204>  // b.lo, b.ul, b.last
    29c8:	cmp	x9, x12
    29cc:	b.cs	29d8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x230>  // b.hs, b.nlast
    29d0:	cmp	w10, w13
    29d4:	b.ls	29ac <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x204>  // b.plast
    29d8:	cmp	x8, x23
    29dc:	b.ls	2a08 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x260>  // b.plast
    29e0:	str	x12, [x23]
    29e4:	str	x11, [x8]
    29e8:	ldur	q0, [x23, #8]
    29ec:	stur	q0, [x29, #-32]
    29f0:	ldur	q0, [x8, #8]
    29f4:	stur	q0, [x23, #8]
    29f8:	ldur	q0, [x29, #-32]
    29fc:	add	x23, x23, #0x18
    2a00:	stur	q0, [x8, #8]
    2a04:	b	2964 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1bc>
    2a08:	mov	x0, x23
    2a0c:	mov	x1, x21
    2a10:	mov	x2, x22
    2a14:	mov	x3, x20
    2a18:	bl	27a8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>
    2a1c:	sub	x26, x23, x19
    2a20:	cmp	x26, #0x180
    2a24:	mov	x21, x23
    2a28:	b.gt	2800 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x58>
    2a2c:	b	2b00 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>
    2a30:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2a34:	movk	x8, #0xaaab
    2a38:	umulh	x8, x26, x8
    2a3c:	lsr	x22, x8, #4
    2a40:	sub	x8, x22, #0x2
    2a44:	sub	x9, x22, #0x1
    2a48:	cmp	x8, #0x0
    2a4c:	csel	x8, x9, x8, lt  // lt = tstop
    2a50:	asr	x23, x8, #1
    2a54:	mov	w8, #0x18                  	// #24
    2a58:	madd	x25, x23, x8, x19
    2a5c:	ldr	x8, [x25, #16]
    2a60:	ldr	q0, [x25], #-24
    2a64:	sub	x3, x29, #0x20
    2a68:	mov	x0, x19
    2a6c:	mov	x1, x23
    2a70:	mov	x2, x22
    2a74:	mov	x4, x20
    2a78:	stur	x8, [x29, #-16]
    2a7c:	stur	q0, [x29, #-32]
    2a80:	bl	2b20 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>
    2a84:	sub	x23, x23, #0x1
    2a88:	cmn	x23, #0x1
    2a8c:	b.ne	2a5c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x2b4>  // b.any
    2a90:	cmp	x26, #0x19
    2a94:	b.lt	2b00 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>  // b.tstop
    2a98:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2a9c:	sub	x21, x21, #0x18
    2aa0:	movk	x22, #0xaaab
    2aa4:	ldr	x8, [x21, #16]
    2aa8:	ldr	q0, [x21]
    2aac:	sub	x23, x21, x19
    2ab0:	asr	x9, x23, #3
    2ab4:	stur	x8, [x29, #-16]
    2ab8:	stur	q0, [x29, #-32]
    2abc:	ldr	x8, [x19]
    2ac0:	mul	x2, x9, x22
    2ac4:	add	x3, sp, #0x10
    2ac8:	mov	x0, x19
    2acc:	str	x8, [x21]
    2ad0:	ldr	q0, [x24]
    2ad4:	mov	x1, xzr
    2ad8:	mov	x4, x20
    2adc:	stur	q0, [x21, #8]
    2ae0:	ldur	q0, [x29, #-32]
    2ae4:	ldur	x8, [x29, #-16]
    2ae8:	str	q0, [sp, #16]
    2aec:	str	x8, [sp, #32]
    2af0:	bl	2b20 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>
    2af4:	cmp	x23, #0x18
    2af8:	sub	x21, x21, #0x18
    2afc:	b.gt	2aa4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x2fc>
    2b00:	ldp	x20, x19, [sp, #160]
    2b04:	ldp	x22, x21, [sp, #144]
    2b08:	ldp	x24, x23, [sp, #128]
    2b0c:	ldp	x26, x25, [sp, #112]
    2b10:	ldp	x28, x27, [sp, #96]
    2b14:	ldp	x29, x30, [sp, #80]
    2b18:	add	sp, sp, #0xb0
    2b1c:	ret

0000000000002b20 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>:
    2b20:	sub	sp, sp, #0x10
    2b24:	sub	x9, x2, #0x1
    2b28:	cmp	x9, #0x0
    2b2c:	csel	x8, x2, x9, lt  // lt = tstop
    2b30:	asr	x10, x8, #1
    2b34:	cmp	x10, x1
    2b38:	mov	x8, x1
    2b3c:	b.le	2bc8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xa8>
    2b40:	mov	w11, #0x18                  	// #24
    2b44:	mov	x12, x1
    2b48:	lsl	x8, x12, #1
    2b4c:	mov	w13, #0x1                   	// #1
    2b50:	add	x8, x8, #0x2
    2b54:	bfi	x13, x12, #1, #63
    2b58:	mul	x14, x8, x11
    2b5c:	mul	x15, x13, x11
    2b60:	ldr	x14, [x0, x14]
    2b64:	ldr	x15, [x0, x15]
    2b68:	fmov	d0, x14
    2b6c:	fmov	d1, x15
    2b70:	cnt	v0.8b, v0.8b
    2b74:	cnt	v1.8b, v1.8b
    2b78:	uaddlv	h0, v0.8b
    2b7c:	uaddlv	h1, v1.8b
    2b80:	fmov	w16, s0
    2b84:	fmov	w17, s1
    2b88:	cmp	w16, w17
    2b8c:	b.cc	2ba0 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x80>  // b.lo, b.ul, b.last
    2b90:	cmp	x14, x15
    2b94:	b.cs	2ba8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x88>  // b.hs, b.nlast
    2b98:	cmp	w16, w17
    2b9c:	b.hi	2ba8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x88>  // b.pmore
    2ba0:	mov	x14, x15
    2ba4:	mov	x8, x13
    2ba8:	madd	x12, x12, x11, x0
    2bac:	str	x14, [x12]
    2bb0:	madd	x13, x8, x11, x0
    2bb4:	ldur	q0, [x13, #8]
    2bb8:	cmp	x8, x10
    2bbc:	stur	q0, [x12, #8]
    2bc0:	mov	x12, x8
    2bc4:	b.lt	2b48 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x28>  // b.tstop
    2bc8:	tbnz	w2, #0, 2c08 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xe8>
    2bcc:	sub	x10, x2, #0x2
    2bd0:	cmp	x10, #0x0
    2bd4:	csel	x9, x9, x10, lt  // lt = tstop
    2bd8:	cmp	x8, x9, asr #1
    2bdc:	b.ne	2c08 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xe8>  // b.any
    2be0:	mov	w9, #0x1                   	// #1
    2be4:	bfi	x9, x8, #1, #63
    2be8:	mov	w10, #0x18                  	// #24
    2bec:	madd	x11, x9, x10, x0
    2bf0:	ldr	x12, [x11]
    2bf4:	madd	x8, x8, x10, x0
    2bf8:	str	x12, [x8]
    2bfc:	ldur	q0, [x11, #8]
    2c00:	stur	q0, [x8, #8]
    2c04:	mov	x8, x9
    2c08:	ldur	q0, [x3, #8]
    2c0c:	ldr	x9, [x3]
    2c10:	cmp	x8, x1
    2c14:	str	q0, [sp]
    2c18:	b.le	2c94 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x174>
    2c1c:	fmov	d0, x9
    2c20:	cnt	v0.8b, v0.8b
    2c24:	uaddlv	h0, v0.8b
    2c28:	fmov	w11, s0
    2c2c:	mov	w12, #0x18                  	// #24
    2c30:	sub	x10, x8, #0x1
    2c34:	cmp	x10, #0x0
    2c38:	csel	x10, x8, x10, lt  // lt = tstop
    2c3c:	asr	x10, x10, #1
    2c40:	mul	x13, x10, x12
    2c44:	ldr	x13, [x0, x13]
    2c48:	fmov	d0, x13
    2c4c:	cnt	v0.8b, v0.8b
    2c50:	uaddlv	h0, v0.8b
    2c54:	fmov	w14, s0
    2c58:	cmp	w14, w11
    2c5c:	b.cc	2c70 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x150>  // b.lo, b.ul, b.last
    2c60:	cmp	x13, x9
    2c64:	b.cs	2c94 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x174>  // b.hs, b.nlast
    2c68:	cmp	w14, w11
    2c6c:	b.hi	2c94 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x174>  // b.pmore
    2c70:	madd	x8, x8, x12, x0
    2c74:	str	x13, [x8]
    2c78:	madd	x13, x10, x12, x0
    2c7c:	ldur	q0, [x13, #8]
    2c80:	cmp	x10, x1
    2c84:	stur	q0, [x8, #8]
    2c88:	mov	x8, x10
    2c8c:	b.gt	2c30 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x110>
    2c90:	b	2c98 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x178>
    2c94:	mov	x10, x8
    2c98:	mov	w8, #0x18                  	// #24
    2c9c:	madd	x8, x10, x8, x0
    2ca0:	str	x9, [x8]
    2ca4:	ldr	q0, [sp], #16
    2ca8:	stur	q0, [x8, #8]
    2cac:	ret

0000000000002cb0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_>:
    2cb0:	sub	sp, sp, #0x10
    2cb4:	cmp	x0, x1
    2cb8:	b.eq	2de8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x138>  // b.none
    2cbc:	add	x8, x0, #0x18
    2cc0:	cmp	x8, x1
    2cc4:	b.eq	2de8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x138>  // b.none
    2cc8:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2ccc:	add	x9, x0, #0x8
    2cd0:	add	x10, x0, #0x20
    2cd4:	movk	x11, #0xaaab
    2cd8:	mov	x12, x0
    2cdc:	ldr	x13, [x8]
    2ce0:	ldr	x15, [x0]
    2ce4:	fmov	d0, x13
    2ce8:	fmov	d1, x15
    2cec:	cnt	v0.8b, v0.8b
    2cf0:	cnt	v1.8b, v1.8b
    2cf4:	uaddlv	h0, v0.8b
    2cf8:	uaddlv	h1, v1.8b
    2cfc:	fmov	w14, s0
    2d00:	fmov	w16, s1
    2d04:	cmp	w14, w16
    2d08:	b.cc	2d1c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x6c>  // b.lo, b.ul, b.last
    2d0c:	cmp	x13, x15
    2d10:	b.cs	2d74 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0xc4>  // b.hs, b.nlast
    2d14:	cmp	w14, w16
    2d18:	b.hi	2d74 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0xc4>  // b.pmore
    2d1c:	ldr	q0, [x12, #32]
    2d20:	sub	x14, x8, x0
    2d24:	cmp	x14, #0x1
    2d28:	str	q0, [sp]
    2d2c:	b.lt	2d64 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0xb4>  // b.tstop
    2d30:	umulh	x14, x14, x11
    2d34:	lsr	x14, x14, #4
    2d38:	add	x14, x14, #0x1
    2d3c:	mov	x15, x10
    2d40:	ldur	x16, [x15, #-32]
    2d44:	ldur	q0, [x15, #-24]
    2d48:	sub	x14, x14, #0x1
    2d4c:	cmp	x14, #0x1
    2d50:	stur	x16, [x15, #-8]
    2d54:	sub	x16, x15, #0x18
    2d58:	str	q0, [x15]
    2d5c:	mov	x15, x16
    2d60:	b.gt	2d40 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x90>
    2d64:	str	x13, [x0]
    2d68:	ldr	q0, [sp]
    2d6c:	str	q0, [x9]
    2d70:	b	2dd4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x124>
    2d74:	ldr	q0, [x12, #32]
    2d78:	mov	x15, x12
    2d7c:	mov	x16, x8
    2d80:	str	q0, [sp]
    2d84:	ldr	x17, [x15]
    2d88:	fmov	d0, x17
    2d8c:	cnt	v0.8b, v0.8b
    2d90:	uaddlv	h0, v0.8b
    2d94:	fmov	w18, s0
    2d98:	cmp	w14, w18
    2d9c:	b.cc	2db0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x100>  // b.lo, b.ul, b.last
    2da0:	cmp	x13, x17
    2da4:	b.cs	2dc8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x118>  // b.hs, b.nlast
    2da8:	cmp	w14, w18
    2dac:	b.hi	2dc8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x118>  // b.pmore
    2db0:	str	x17, [x16]
    2db4:	ldur	q0, [x15, #8]
    2db8:	stur	q0, [x16, #8]
    2dbc:	mov	x16, x15
    2dc0:	sub	x15, x15, #0x18
    2dc4:	b	2d84 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0xd4>
    2dc8:	str	x13, [x16]
    2dcc:	ldr	q0, [sp]
    2dd0:	stur	q0, [x16, #8]
    2dd4:	add	x8, x8, #0x18
    2dd8:	add	x12, x12, #0x18
    2ddc:	cmp	x8, x1
    2de0:	add	x10, x10, #0x18
    2de4:	b.ne	2cdc <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_+0x2c>  // b.any
    2de8:	add	sp, sp, #0x10
    2dec:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	8c <_ZN4llvm15SmallVectorImplImE6resizeEm+0x8c>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	80 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x80>
  34:	b.cs	80 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x80>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplImE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x8                   	// #8
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	lsl	x10, x20, #3
  6c:	sub	x2, x10, x8, lsl #3
  70:	mov	w1, wzr
  74:	add	x0, x9, x8, lsl #3
  78:	bl	0 <memset>
  7c:	b	20 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x20>
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6resizeEm>
  90:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6resizeEm>
  94:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6resizeEm>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x43                  	// #67
  a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12MCSchedModel17getSchedClassDescEj:

0000000000000000 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 2c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x2c>
  10:	ldr	w9, [x0, #52]
  14:	cmp	w9, w1
  18:	b.ls	4c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x4c>  // b.plast
  1c:	mov	w9, #0x18                  	// #24
  20:	umaddl	x0, w1, w9, x8
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  30:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  34:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x15b                 	// #347
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  50:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  54:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x15d                 	// #349
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	b0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xb0>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	a4 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xa4>
  34:	b.cs	a4 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xa4>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x14                  	// #20
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	mov	x11, #0xffffffffffffffec    	// #-20
  6c:	mov	w10, #0x14                  	// #20
  70:	mul	x11, x8, x11
  74:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
  78:	madd	x11, x20, x10, x11
  7c:	movk	x12, #0xcccd
  80:	sub	x11, x11, #0x14
  84:	madd	x0, x8, x10, x9
  88:	umulh	x8, x11, x12
  8c:	lsr	x8, x8, #4
  90:	mul	x8, x8, x10
  94:	add	x2, x8, #0x14
  98:	mov	w1, wzr
  9c:	bl	0 <memset>
  a0:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x20>
  a4:	ldp	x20, x19, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE:

0000000000000000 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	38 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE+0x38>  // b.plast
  14:	ldr	x9, [x0]
  18:	and	x8, x1, #0xffffffff
  1c:	mov	w11, #0x18                  	// #24
  20:	mul	x8, x8, x11
  24:	ldr	x10, [x0, #64]
  28:	ldr	w8, [x9, x8]
  2c:	add	x0, x10, x8
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  3c:	adrp	x1, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  40:	adrp	x3, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x1b9                 	// #441
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	8c <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x8c>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	80 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x80>
  34:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x80>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x10                  	// #16
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	lsl	x10, x20, #4
  6c:	sub	x2, x10, x8, lsl #4
  70:	mov	w1, wzr
  74:	add	x0, x9, x8, lsl #4
  78:	bl	0 <memset>
  7c:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x20>
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>
  90:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>
  94:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x43                  	// #67
  a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNS_9StringRefERKS3_EEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNS_9StringRefERKS3_EEENS_5ErrorEDpOT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x22, x0
  1c:	mov	w0, #0x30                  	// #48
  20:	mov	x20, x1
  24:	mov	x19, x8
  28:	bl	0 <_Znwm>
  2c:	mov	x21, x0
  30:	mov	x8, sp
  34:	mov	x0, x22
  38:	mov	x23, sp
  3c:	bl	0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNS_9StringRefERKS3_EEENS_5ErrorEDpOT0_>
  40:	adrp	x10, 0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNS_9StringRefERKS3_EEENS_5ErrorEDpOT0_>
  44:	ldr	x10, [x10]
  48:	ldr	x8, [sp]
  4c:	add	x11, x23, #0x10
  50:	add	x9, x21, #0x18
  54:	add	x10, x10, #0x10
  58:	cmp	x8, x11
  5c:	stp	x10, x9, [x21]
  60:	b.eq	74 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNS_9StringRefERKS3_EEENS_5ErrorEDpOT0_+0x74>  // b.none
  64:	ldr	x9, [sp, #16]
  68:	str	x8, [x21, #8]
  6c:	str	x9, [x21, #24]
  70:	b	7c <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNS_9StringRefERKS3_EEENS_5ErrorEDpOT0_+0x7c>
  74:	ldr	q0, [x8]
  78:	str	q0, [x9]
  7c:	ldr	x8, [sp, #8]
  80:	orr	x9, x21, #0x1
  84:	str	x20, [x21, #40]
  88:	str	x9, [x19]
  8c:	str	x8, [x21, #16]
  90:	ldp	x20, x19, [sp, #80]
  94:	ldp	x22, x21, [sp, #64]
  98:	ldr	x23, [sp, #48]
  9c:	ldp	x29, x30, [sp, #32]
  a0:	add	sp, sp, #0x60
  a4:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA54_KcRKS3_EEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA54_KcRKS3_EEENS_5ErrorEDpOT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x22, x0
  1c:	mov	w0, #0x30                  	// #48
  20:	mov	x20, x1
  24:	mov	x19, x8
  28:	bl	0 <_Znwm>
  2c:	mov	x8, sp
  30:	mov	x21, x0
  34:	add	x23, x8, #0x10
  38:	mov	x0, x22
  3c:	str	x23, [sp]
  40:	bl	0 <strlen>
  44:	add	x2, x22, x0
  48:	mov	x0, sp
  4c:	mov	x1, x22
  50:	bl	0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA54_KcRKS3_EEENS_5ErrorEDpOT0_>
  54:	adrp	x10, 0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA54_KcRKS3_EEENS_5ErrorEDpOT0_>
  58:	ldr	x8, [sp]
  5c:	ldr	x10, [x10]
  60:	add	x9, x21, #0x18
  64:	cmp	x8, x23
  68:	add	x10, x10, #0x10
  6c:	stp	x10, x9, [x21]
  70:	b.eq	84 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA54_KcRKS3_EEENS_5ErrorEDpOT0_+0x84>  // b.none
  74:	ldr	x9, [sp, #16]
  78:	str	x8, [x21, #8]
  7c:	str	x9, [x21, #24]
  80:	b	8c <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA54_KcRKS3_EEENS_5ErrorEDpOT0_+0x8c>
  84:	ldr	q0, [x8]
  88:	str	q0, [x9]
  8c:	ldr	x8, [sp, #8]
  90:	orr	x9, x21, #0x1
  94:	str	x20, [x21, #40]
  98:	str	x9, [x19]
  9c:	str	x8, [x21, #16]
  a0:	ldp	x20, x19, [sp, #80]
  a4:	ldp	x22, x21, [sp, #64]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x60
  b4:	ret

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #8]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #8]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA65_KcRKS3_EEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA65_KcRKS3_EEENS_5ErrorEDpOT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x22, x0
  1c:	mov	w0, #0x30                  	// #48
  20:	mov	x20, x1
  24:	mov	x19, x8
  28:	bl	0 <_Znwm>
  2c:	mov	x8, sp
  30:	mov	x21, x0
  34:	add	x23, x8, #0x10
  38:	mov	x0, x22
  3c:	str	x23, [sp]
  40:	bl	0 <strlen>
  44:	add	x2, x22, x0
  48:	mov	x0, sp
  4c:	mov	x1, x22
  50:	bl	0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA65_KcRKS3_EEENS_5ErrorEDpOT0_>
  54:	adrp	x10, 0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA65_KcRKS3_EEENS_5ErrorEDpOT0_>
  58:	ldr	x8, [sp]
  5c:	ldr	x10, [x10]
  60:	add	x9, x21, #0x18
  64:	cmp	x8, x23
  68:	add	x10, x10, #0x10
  6c:	stp	x10, x9, [x21]
  70:	b.eq	84 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA65_KcRKS3_EEENS_5ErrorEDpOT0_+0x84>  // b.none
  74:	ldr	x9, [sp, #16]
  78:	str	x8, [x21, #8]
  7c:	str	x9, [x21, #24]
  80:	b	8c <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA65_KcRKS3_EEENS_5ErrorEDpOT0_+0x8c>
  84:	ldr	q0, [x8]
  88:	str	q0, [x9]
  8c:	ldr	x8, [sp, #8]
  90:	orr	x9, x21, #0x1
  94:	str	x20, [x21, #40]
  98:	str	x9, [x19]
  9c:	str	x8, [x21, #16]
  a0:	ldp	x20, x19, [sp, #80]
  a4:	ldp	x22, x21, [sp, #64]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x60
  b4:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm11MCInstrInfo7getNameEj:

0000000000000000 <_ZNK4llvm11MCInstrInfo7getNameEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	cmp	w8, w1
  14:	b.ls	4c <_ZNK4llvm11MCInstrInfo7getNameEj+0x4c>  // b.plast
  18:	ldp	x8, x9, [x0, #8]
  1c:	ldr	w8, [x8, w1, uxtw #2]
  20:	add	x19, x9, x8
  24:	cbz	x9, 38 <_ZNK4llvm11MCInstrInfo7getNameEj+0x38>
  28:	mov	x0, x19
  2c:	bl	0 <strlen>
  30:	mov	x1, x0
  34:	b	3c <_ZNK4llvm11MCInstrInfo7getNameEj+0x3c>
  38:	mov	x1, xzr
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo7getNameEj>
  50:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo7getNameEj>
  54:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo7getNameEj>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x33                  	// #51
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3mca9InstrDescESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3mca9InstrDescESt14default_deleteIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 5c <_ZNSt10unique_ptrIN4llvm3mca9InstrDescESt14default_deleteIS2_EED2Ev+0x5c>
  18:	ldr	x0, [x20, #176]
  1c:	add	x8, x20, #0xc0
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZNSt10unique_ptrIN4llvm3mca9InstrDescESt14default_deleteIS2_EED2Ev+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #96]
  30:	add	x8, x20, #0x70
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZNSt10unique_ptrIN4llvm3mca9InstrDescESt14default_deleteIS2_EED2Ev+0x40>  // b.none
  3c:	bl	0 <free>
  40:	mov	x8, x20
  44:	ldr	x0, [x8], #16
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZNSt10unique_ptrIN4llvm3mca9InstrDescESt14default_deleteIS2_EED2Ev+0x54>  // b.none
  50:	bl	0 <free>
  54:	mov	x0, x20
  58:	bl	0 <_ZdlPv>
  5c:	str	xzr, [x19]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EELb0EEneERKNS0_ItS7_S9_SC_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EELb0EEneERKNS0_IS3_SA_SC_SF_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #8]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #8]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #1, 20 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv+0x20>
  10:	tbnz	w8, #0, 24 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv+0x24>
  14:	ldr	x0, [x0]
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv>
  24:	adrp	x0, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv>
  28:	adrp	x1, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv>
  2c:	adrp	x3, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEdeEv>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x272                 	// #626
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	mov	x21, x2
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	cmp	w8, w9
  24:	b.cs	90 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_+0x90>  // b.hs, b.nlast
  28:	ldr	x9, [x19]
  2c:	ldrh	w10, [x21]
  30:	mov	w11, #0x30                  	// #48
  34:	umaddl	x8, w8, w11, x9
  38:	mov	w9, #0xfffffe00            	// #-512
  3c:	mov	w11, #0x1                   	// #1
  40:	str	x20, [x8]
  44:	strh	w10, [x8, #8]
  48:	stp	wzr, wzr, [x8, #12]
  4c:	str	w9, [x8, #20]
  50:	stp	xzr, xzr, [x8, #24]
  54:	strh	w11, [x8, #40]
  58:	strb	wzr, [x8, #42]
  5c:	ldp	w8, w9, [x19, #8]
  60:	cmp	w8, w9
  64:	b.cs	ac <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_+0xac>  // b.hs, b.nlast
  68:	ldr	x9, [x19]
  6c:	add	x8, x8, #0x1
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	mov	w10, #0x30                  	// #48
  80:	madd	x9, x8, x10, x9
  84:	sub	x0, x9, #0x30
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	add	x1, x19, #0x10
  94:	mov	w3, #0x30                  	// #48
  98:	mov	x0, x19
  9c:	mov	x2, xzr
  a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a4:	ldr	w8, [x19, #8]
  a8:	b	28 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_+0x28>
  ac:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_>
  b0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_>
  b4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEE12emplace_backIJRKNS1_14ReadDescriptorERtEEERS2_DpOT_>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x43                  	// #67
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZNK4llvm5APIntixEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZNK4llvm5APIntixEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	tst	x9, x8
  38:	cset	w0, ne  // ne = any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  48:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  4c:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x472                 	// #1138
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APIntC2Ejmb:

0000000000000000 <_ZN4llvm5APIntC2Ejmb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	w1, [x0, #8]
   c:	cbz	w1, 38 <_ZN4llvm5APIntC2Ejmb+0x38>
  10:	cmp	w1, #0x40
  14:	b.hi	24 <_ZN4llvm5APIntC2Ejmb+0x24>  // b.pmore
  18:	str	x2, [x0]
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <_ZN4llvm5APIntC2Ejmb>
  24:	and	w8, w3, #0x1
  28:	mov	x1, x2
  2c:	mov	w2, w8
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm5APInt12initSlowCaseEmb>
  38:	adrp	x0, 0 <_ZN4llvm5APIntC2Ejmb>
  3c:	adrp	x1, 0 <_ZN4llvm5APIntC2Ejmb>
  40:	adrp	x3, 0 <_ZN4llvm5APIntC2Ejmb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x117                 	// #279
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x0, #8]
  18:	mov	x21, x4
  1c:	mov	x22, x3
  20:	mov	x23, x2
  24:	mov	x19, x0
  28:	cmp	w8, w9
  2c:	mov	x20, x1
  30:	b.cs	c4 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_+0xc4>  // b.hs, b.nlast
  34:	ldr	x9, [x19]
  38:	mov	w13, #0x88                  	// #136
  3c:	movi	v0.2d, #0x0
  40:	ldrh	w10, [x23]
  44:	umaddl	x8, w8, w13, x9
  48:	adrp	x13, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_>
  4c:	ldrb	w11, [x22]
  50:	ldrb	w12, [x21]
  54:	stur	q0, [x8, #40]
  58:	stur	q0, [x8, #24]
  5c:	ldr	d0, [x13]
  60:	mov	w9, #0xfffffe00            	// #-512
  64:	str	w9, [x8, #8]
  68:	add	x9, x8, #0x48
  6c:	str	x20, [x8]
  70:	strh	w10, [x8, #12]
  74:	str	wzr, [x8, #16]
  78:	strb	w11, [x8, #20]
  7c:	strb	w12, [x8, #21]
  80:	strb	wzr, [x8, #22]
  84:	str	d0, [x8, #64]
  88:	str	x9, [x8, #56]
  8c:	ldp	w8, w9, [x19, #8]
  90:	cmp	w8, w9
  94:	b.cs	d8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_+0xd8>  // b.hs, b.nlast
  98:	ldr	x9, [x19]
  9c:	add	x8, x8, #0x1
  a0:	str	w8, [x19, #8]
  a4:	ldp	x20, x19, [sp, #48]
  a8:	ldp	x22, x21, [sp, #32]
  ac:	ldr	x23, [sp, #16]
  b0:	mov	w10, #0x88                  	// #136
  b4:	madd	x9, x8, x10, x9
  b8:	sub	x0, x9, #0x88
  bc:	ldp	x29, x30, [sp], #64
  c0:	ret
  c4:	mov	x0, x19
  c8:	mov	x1, xzr
  cc:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_>
  d0:	ldr	w8, [x19, #8]
  d4:	b	34 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_+0x34>
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEE12emplace_backIJRKNS1_15WriteDescriptorERtbRbEEERS2_DpOT_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 3c <_ZNSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS2_EED2Ev+0x3c>
  18:	ldr	x0, [x20, #576]
  1c:	add	x8, x20, #0x250
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZNSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS2_EED2Ev+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	add	x0, x20, #0x10
  30:	bl	0 <_ZNSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS2_EED2Ev>
  34:	mov	x0, x20
  38:	bl	0 <_ZdlPv>
  3c:	str	xzr, [x19]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 40 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev+0x40>
  18:	tbz	w8, #0, 34 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev+0x34>
  1c:	ldr	x0, [x19]
  20:	cbz	x0, 30 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev+0x30>
  24:	ldr	x8, [x0]
  28:	ldr	x8, [x8, #8]
  2c:	blr	x8
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev>

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	ldr	w8, [x0, #48]
  14:	cmp	w8, w1
  18:	b.ls	50 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x50>  // b.plast
  1c:	ldr	x8, [x0, #32]
  20:	mov	w9, w1
  24:	add	x0, x8, x9, lsl #5
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  34:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  38:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x154                 	// #340
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  54:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  58:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x156                 	// #342
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APInt6setBitEj:

0000000000000000 <_ZN4llvm5APInt6setBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZN4llvm5APInt6setBitEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZN4llvm5APInt6setBitEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZN4llvm5APInt6setBitEj>
  48:	adrp	x1, 0 <_ZN4llvm5APInt6setBitEj>
  4c:	adrp	x3, 0 <_ZN4llvm5APInt6setBitEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x59d                 	// #1437
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	6c <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_+0x6c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20, #16]
  28:	ldr	q0, [x20]
  2c:	mov	w11, #0x18                  	// #24
  30:	umaddl	x8, w8, w11, x9
  34:	str	x10, [x8, #16]
  38:	str	q0, [x8]
  3c:	ldp	w8, w9, [x19, #8]
  40:	cmp	w8, w9
  44:	b.cs	80 <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_+0x80>  // b.hs, b.nlast
  48:	ldr	x9, [x19]
  4c:	add	x8, x8, #0x1
  50:	str	w8, [x19, #8]
  54:	ldp	x20, x19, [sp, #16]
  58:	mov	w10, #0x18                  	// #24
  5c:	madd	x9, x8, x10, x9
  60:	sub	x0, x9, #0x18
  64:	ldp	x29, x30, [sp], #32
  68:	ret
  6c:	mov	x0, x19
  70:	mov	x1, xzr
  74:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_>
  78:	ldr	w8, [x19, #8]
  7c:	b	20 <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_+0x20>
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairImNS_3mca13ResourceUsageEEE12emplace_backIJRS4_EEES7_DpOT_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEneERKNS0_ImjS2_S5_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w20, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w20, #0x40
  18:	b.ls	34 <_ZNK4llvm5APInt12getZExtValueEv+0x34>  // b.plast
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  24:	sub	w8, w20, w0
  28:	cmp	w8, #0x41
  2c:	b.cs	44 <_ZNK4llvm5APInt12getZExtValueEv+0x44>  // b.hs, b.nlast
  30:	ldr	x19, [x19]
  34:	ldr	x0, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  4c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x657                 	// #1623
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xffffffffffffffff    	// #-1
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>
  48:	ldr	x8, [x24, #16]
  4c:	ldr	q0, [x24]
  50:	subs	x9, x21, x22
  54:	add	x9, x0, x9
  58:	mov	x23, x0
  5c:	str	x8, [x9, #16]
  60:	mov	x8, x0
  64:	str	q0, [x9]
  68:	b.eq	8c <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x8c>  // b.none
  6c:	mov	x8, x23
  70:	mov	x9, x22
  74:	ldr	x10, [x9, #16]
  78:	ldr	q0, [x9], #24
  7c:	str	x10, [x8, #16]
  80:	cmp	x21, x9
  84:	str	q0, [x8], #24
  88:	b.ne	74 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x74>  // b.any
  8c:	cmp	x25, x21
  90:	add	x24, x8, #0x18
  94:	b.eq	b0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xb0>  // b.none
  98:	ldr	x8, [x21, #16]
  9c:	ldr	q0, [x21], #24
  a0:	str	x8, [x24, #16]
  a4:	cmp	x25, x21
  a8:	str	q0, [x24], #24
  ac:	b.ne	98 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x98>  // b.any
  b0:	cbz	x22, bc <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xbc>
  b4:	mov	x0, x22
  b8:	bl	0 <_ZdlPv>
  bc:	mov	w8, #0x18                  	// #24
  c0:	madd	x8, x20, x8, x23
  c4:	stp	x23, x24, [x19]
  c8:	str	x8, [x19, #16]
  cc:	ldp	x20, x19, [sp, #64]
  d0:	ldp	x22, x21, [sp, #48]
  d4:	ldp	x24, x23, [sp, #32]
  d8:	ldr	x25, [sp, #16]
  dc:	ldp	x29, x30, [sp], #80
  e0:	ret

Disassembly of section .text._ZNKSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x10, x9, [x0]
   c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  10:	movk	x8, #0x555, lsl #48
  14:	sub	x9, x9, x10
  18:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  1c:	asr	x9, x9, #3
  20:	movk	x10, #0xaaab
  24:	mul	x9, x9, x10
  28:	sub	x10, x8, x9
  2c:	cmp	x10, x1
  30:	b.cc	60 <_ZNKSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE12_M_check_lenEmPKc+0x60>  // b.lo, b.ul, b.last
  34:	cmp	x9, x1
  38:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  3c:	adds	x9, x10, x9
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x9, x8
  48:	cset	w11, hi  // hi = pmore
  4c:	orr	w10, w10, w11
  50:	cmp	w10, #0x0
  54:	csel	x0, x8, x9, ne  // ne = any
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x0, x2
  64:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE11_M_allocateEm>:
   0:	cbz	x1, 24 <_ZNSt12_Vector_baseISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE11_M_allocateEm+0x24>
   4:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   8:	movk	x8, #0x5556
   c:	movk	x8, #0x555, lsl #48
  10:	cmp	x1, x8
  14:	b.cs	2c <_ZNSt12_Vector_baseISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE11_M_allocateEm+0x2c>  // b.hs, b.nlast
  18:	add	x8, x1, x1, lsl #1
  1c:	lsl	x0, x8, #3
  20:	b	0 <_Znwm>
  24:	mov	x0, xzr
  28:	ret
  2c:	stp	x29, x30, [sp, #-16]!
  30:	mov	x29, sp
  34:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	str	wzr, [x0, #8]
  44:	str	x8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 48 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0x48>
  10:	ldr	x9, [x1]
  14:	cmn	x9, #0x2
  18:	b.cs	ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0xac>  // b.hs, b.nlast
  1c:	ldr	x10, [x0, #8]
  20:	mov	w11, #0x25                  	// #37
  24:	mul	w12, w9, w11
  28:	sub	w11, w8, #0x1
  2c:	and	w12, w12, w11
  30:	add	x8, x10, w12, uxtw #4
  34:	ldr	x14, [x8]
  38:	cmp	x9, x14
  3c:	b.ne	5c <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0x5c>  // b.any
  40:	mov	w0, #0x1                   	// #1
  44:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0x50>
  48:	mov	x8, xzr
  4c:	mov	w0, wzr
  50:	str	x8, [x2]
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	mov	x13, xzr
  60:	mov	w15, #0x1                   	// #1
  64:	mov	w0, #0x1                   	// #1
  68:	cmn	x14, #0x1
  6c:	b.eq	9c <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0x9c>  // b.none
  70:	cmn	x14, #0x2
  74:	add	w12, w12, w15
  78:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  7c:	and	w12, w12, w11
  80:	csel	x13, x13, x8, ne  // ne = any
  84:	add	x8, x10, w12, uxtw #4
  88:	ldr	x14, [x8]
  8c:	add	w15, w15, #0x1
  90:	cmp	x9, x14
  94:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0x50>  // b.none
  98:	b	68 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0x68>
  9c:	cmp	x13, #0x0
  a0:	mov	w0, wzr
  a4:	csel	x8, x8, x13, eq  // eq = none
  a8:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_+0x50>
  ac:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_>
  b0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_>
  b4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPKS6_>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x252                 	// #594
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x1
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
  20:	cmp	x20, x19
  24:	b.eq	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x74>  // b.none
  28:	ldr	x8, [x20]
  2c:	cmn	x8, #0x3
  30:	b.hi	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x68>  // b.pmore
  34:	add	x2, x29, #0x18
  38:	mov	x0, x21
  3c:	mov	x1, x20
  40:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
  44:	tbnz	w0, #0, 84 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x84>
  48:	ldr	x8, [x29, #24]
  4c:	ldr	x9, [x20]
  50:	str	x9, [x8]
  54:	ldr	w9, [x20, #8]
  58:	str	w9, [x8, #8]
  5c:	ldr	w8, [x21, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x21, #16]
  68:	add	x20, x20, #0x10
  6c:	cmp	x19, x20
  70:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x28>  // b.any
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
  88:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
  8c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x17a                 	// #378
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	x3, [x0]
   c:	ldr	x8, [x3]
  10:	str	x2, [x0, #24]
  14:	stp	x8, x1, [x0, #8]
  18:	ldr	x9, [x3]
  1c:	cmp	x9, x8
  20:	b.ne	38 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb+0x38>  // b.any
  24:	tbz	w4, #0, 30 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb+0x30>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb>
  38:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb>
  3c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb>
  40:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EEC2EPS5_S7_RKNS_14DebugEpochBaseEb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x49f                 	// #1183
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x10
  28:	cmp	x9, x8
  2c:	str	x8, [x0, #16]
  30:	b.ne	18 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>
  40:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>
  44:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x4e0                 	// #1248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA44_KcRKS3_EEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA44_KcRKS3_EEENS_5ErrorEDpOT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x22, x0
  1c:	mov	w0, #0x30                  	// #48
  20:	mov	x20, x1
  24:	mov	x19, x8
  28:	bl	0 <_Znwm>
  2c:	mov	x8, sp
  30:	mov	x21, x0
  34:	add	x23, x8, #0x10
  38:	mov	x0, x22
  3c:	str	x23, [sp]
  40:	bl	0 <strlen>
  44:	add	x2, x22, x0
  48:	mov	x0, sp
  4c:	mov	x1, x22
  50:	bl	0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA44_KcRKS3_EEENS_5ErrorEDpOT0_>
  54:	adrp	x10, 0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA44_KcRKS3_EEENS_5ErrorEDpOT0_>
  58:	ldr	x8, [sp]
  5c:	ldr	x10, [x10]
  60:	add	x9, x21, #0x18
  64:	cmp	x8, x23
  68:	add	x10, x10, #0x10
  6c:	stp	x10, x9, [x21]
  70:	b.eq	84 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA44_KcRKS3_EEENS_5ErrorEDpOT0_+0x84>  // b.none
  74:	ldr	x9, [sp, #16]
  78:	str	x8, [x21, #8]
  7c:	str	x9, [x21, #24]
  80:	b	8c <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRA44_KcRKS3_EEENS_5ErrorEDpOT0_+0x8c>
  84:	ldr	q0, [x8]
  88:	str	q0, [x9]
  8c:	ldr	x8, [sp, #8]
  90:	orr	x9, x21, #0x1
  94:	str	x20, [x21, #40]
  98:	str	x9, [x19]
  9c:	str	x8, [x21, #16]
  a0:	ldp	x20, x19, [sp, #80]
  a4:	ldp	x22, x21, [sp, #64]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x60
  b4:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS3_EEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS3_EEENS_5ErrorEDpOT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x22, x0
  1c:	mov	w0, #0x30                  	// #48
  20:	mov	x20, x1
  24:	mov	x19, x8
  28:	bl	0 <_Znwm>
  2c:	mov	x8, sp
  30:	add	x23, x8, #0x10
  34:	str	x23, [sp]
  38:	ldp	x1, x8, [x22]
  3c:	mov	x21, x0
  40:	mov	x0, sp
  44:	add	x2, x1, x8
  48:	bl	0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS3_EEENS_5ErrorEDpOT0_>
  4c:	adrp	x10, 0 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS3_EEENS_5ErrorEDpOT0_>
  50:	ldr	x8, [sp]
  54:	ldr	x10, [x10]
  58:	add	x9, x21, #0x18
  5c:	cmp	x8, x23
  60:	add	x10, x10, #0x10
  64:	stp	x10, x9, [x21]
  68:	b.eq	7c <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS3_EEENS_5ErrorEDpOT0_+0x7c>  // b.none
  6c:	ldr	x9, [sp, #16]
  70:	str	x8, [x21, #8]
  74:	str	x9, [x21, #24]
  78:	b	84 <_ZN4llvm10make_errorINS_3mca16InstructionErrorINS_6MCInstEEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS3_EEENS_5ErrorEDpOT0_+0x84>
  7c:	ldr	q0, [x8]
  80:	str	q0, [x9]
  84:	ldr	x8, [sp, #8]
  88:	orr	x9, x21, #0x1
  8c:	str	x20, [x21, #40]
  90:	str	x9, [x19]
  94:	str	x8, [x21, #16]
  98:	ldp	x20, x19, [sp, #80]
  9c:	ldp	x22, x21, [sp, #64]
  a0:	ldr	x23, [sp, #48]
  a4:	ldp	x29, x30, [sp, #32]
  a8:	add	sp, sp, #0x60
  ac:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev>:
   0:	adrp	x9, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x18
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x18
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE>:
   0:	ldp	x8, x2, [x0, #8]
   4:	mov	x0, x1
   8:	mov	x1, x8
   c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x20, x19, [sp, #96]
   c:	add	x29, sp, #0x50
  10:	sturb	wzr, [x29, #-16]
  14:	stp	xzr, xzr, [sp, #16]
  18:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
  1c:	ldr	x11, [x11]
  20:	sub	x9, x29, #0x20
  24:	mov	w10, #0x1                   	// #1
  28:	str	w10, [sp, #32]
  2c:	add	x20, x9, #0x10
  30:	add	x10, x11, #0x10
  34:	stp	x20, xzr, [x29, #-32]
  38:	stp	x10, xzr, [sp]
  3c:	str	x9, [sp, #40]
  40:	ldr	x9, [x0]
  44:	mov	x1, sp
  48:	mov	x19, x8
  4c:	ldr	x9, [x9, #16]
  50:	blr	x9
  54:	ldr	x8, [sp, #24]
  58:	ldr	x9, [sp, #8]
  5c:	cmp	x8, x9
  60:	b.eq	6c <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x6c>  // b.none
  64:	mov	x0, sp
  68:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  6c:	ldr	x8, [sp, #40]
  70:	add	x9, x19, #0x10
  74:	str	x9, [x19]
  78:	mov	x0, x19
  7c:	ldp	x1, x8, [x8]
  80:	add	x2, x1, x8
  84:	bl	0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
  88:	mov	x0, sp
  8c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  90:	ldur	x0, [x29, #-32]
  94:	cmp	x0, x20
  98:	b.eq	a0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xa0>  // b.none
  9c:	bl	0 <_ZdlPv>
  a0:	ldp	x20, x19, [sp, #96]
  a4:	ldp	x29, x30, [sp, #80]
  a8:	add	sp, sp, #0x70
  ac:	ret

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x8, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>
   4:	ldr	x8, [x8]
   8:	adrp	x9, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x9, [x9]
  10:	cmp	x1, x8
  14:	cset	w8, eq  // eq = none
  18:	cmp	x1, x9
  1c:	cset	w9, eq  // eq = none
  20:	orr	w0, w8, w9
  24:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w9, [x0, #8]
   4:	mov	x8, #0xffffffffffffffff    	// #-1
   8:	neg	w10, w9
   c:	cmp	w9, #0x40
  10:	lsr	x8, x8, x10
  14:	b.hi	20 <_ZN4llvm5APInt15clearUnusedBitsEv+0x20>  // b.pmore
  18:	mov	x9, x0
  1c:	b	34 <_ZN4llvm5APInt15clearUnusedBitsEv+0x34>
  20:	ldr	x10, [x0]
  24:	add	x9, x9, #0x3f
  28:	lsr	x9, x9, #6
  2c:	sub	w9, w9, #0x1
  30:	add	x9, x10, w9, uxtw #3
  34:	ldr	x10, [x9]
  38:	and	x8, x10, x8
  3c:	str	x8, [x9]
  40:	ret

Disassembly of section .text._ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	w10, #0xffff                	// #65535
  2c:	subs	x9, x9, #0x10
  30:	strh	w10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9StringRef3strB5cxx11Ev:

0000000000000000 <_ZNK4llvm9StringRef3strB5cxx11Ev>:
   0:	ldr	x1, [x0]
   4:	cbz	x1, 20 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x20>
   8:	ldr	x9, [x0, #8]
   c:	add	x10, x8, #0x10
  10:	mov	x0, x8
  14:	str	x10, [x8]
  18:	add	x2, x1, x9
  1c:	b	0 <_ZNK4llvm9StringRef3strB5cxx11Ev>
  20:	mov	x9, x8
  24:	strb	wzr, [x9, #16]!
  28:	stp	x9, xzr, [x8]
  2c:	ret

Disassembly of section .text._ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	mov	w2, #0x3a                  	// #58
  20:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  24:	ldrb	w20, [x19, #8]
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	tbnz	w20, #0, 44 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x44>
  30:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  34:	add	x1, x1, #0x0
  38:	mov	w2, #0x83                  	// #131
  3c:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  40:	bl	0 <abort>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x27                  	// #39
  50:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  54:	ldrb	w8, [x19, #8]
  58:	tbnz	w8, #0, 7c <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x7c>
  5c:	adrp	x0, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  60:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  64:	adrp	x3, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x281                 	// #641
  78:	bl	0 <__assert_fail>
  7c:	ldr	x19, [x19]
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	ldr	x8, [x19]
  88:	mov	x1, x0
  8c:	mov	x0, x19
  90:	ldr	x8, [x8, #16]
  94:	blr	x8
  98:	bl	0 <abort>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt+0x48>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  38:	ldrh	w8, [x19]
  3c:	mov	x3, x0
  40:	str	xzr, [x0, #8]
  44:	strh	w8, [x0]
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldp	x29, x30, [sp, #16]
  50:	mov	x0, x3
  54:	add	sp, sp, #0x30
  58:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0x4c>
  10:	ldrh	w9, [x1]
  14:	mov	w10, #0xfffe                	// #65534
  18:	cmp	w9, w10
  1c:	b.cs	bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0xbc>  // b.hs, b.nlast
  20:	ldr	x10, [x0, #8]
  24:	mov	w11, #0x25                  	// #37
  28:	mul	w12, w9, w11
  2c:	sub	w11, w8, #0x1
  30:	and	x12, x12, x11
  34:	add	x8, x10, x12, lsl #4
  38:	ldrh	w15, [x8]
  3c:	cmp	w9, w15
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w16, #0x1                   	// #1
  68:	mov	w14, #0xfffe                	// #65534
  6c:	mov	w0, #0x1                   	// #1
  70:	mvn	w17, w15
  74:	tst	w17, #0xffff
  78:	b.eq	ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0xac>  // b.none
  7c:	and	w15, w15, #0xffff
  80:	add	w12, w12, w16
  84:	cmp	w15, w14
  88:	and	w12, w12, w11
  8c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  90:	csel	x13, x13, x8, ne  // ne = any
  94:	add	x8, x10, w12, uxtw #4
  98:	ldrh	w15, [x8]
  9c:	add	w16, w16, #0x1
  a0:	cmp	w9, w15
  a4:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0x54>  // b.none
  a8:	b	70 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0x70>
  ac:	cmp	x13, #0x0
  b0:	mov	w0, wzr
  b4:	csel	x8, x8, x13, eq  // eq = none
  b8:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_+0x54>
  bc:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_>
  c0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_>
  c4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPKSD_>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x252                 	// #594
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldrsh	w8, [x3]
  6c:	cmn	w8, #0x1
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x2
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
  24:	cmp	x20, x19
  28:	b.eq	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x88>  // b.none
  2c:	mov	w22, #0xfffd                	// #65533
  30:	ldrh	w8, [x20]
  34:	cmp	w8, w22
  38:	b.hi	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x7c>  // b.pmore
  3c:	add	x2, sp, #0x8
  40:	mov	x0, x21
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
  4c:	tbnz	w0, #0, 9c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x9c>
  50:	ldr	x8, [sp, #8]
  54:	ldrh	w9, [x20]
  58:	mov	x0, x20
  5c:	strh	w9, [x8]
  60:	ldr	x9, [x0, #8]!
  64:	str	xzr, [x0]
  68:	str	x9, [x8, #8]
  6c:	ldr	w8, [x21, #16]
  70:	add	w8, w8, #0x1
  74:	str	w8, [x21, #16]
  78:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
  7c:	add	x20, x20, #0x10
  80:	cmp	x19, x20
  84:	b.ne	30 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x30>  // b.any
  88:	ldp	x20, x19, [sp, #48]
  8c:	ldp	x22, x21, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	add	sp, sp, #0x40
  98:	ret
  9c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
  a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
  a4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x17a                 	// #378
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 5c <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EED2Ev+0x5c>
  18:	ldr	x0, [x20, #176]
  1c:	add	x8, x20, #0xc0
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EED2Ev+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #96]
  30:	add	x8, x20, #0x70
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EED2Ev+0x40>  // b.none
  3c:	bl	0 <free>
  40:	mov	x8, x20
  44:	ldr	x0, [x8], #16
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EED2Ev+0x54>  // b.none
  50:	bl	0 <free>
  54:	mov	x0, x20
  58:	bl	0 <_ZdlPv>
  5c:	str	xzr, [x19]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EE5resetEPS3_:

0000000000000000 <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EE5resetEPS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x19, [x0]
  10:	str	x1, [x0]
  14:	cbz	x19, 64 <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EE5resetEPS3_+0x64>
  18:	ldr	x0, [x19, #176]
  1c:	add	x8, x19, #0xc0
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EE5resetEPS3_+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x19, #96]
  30:	add	x8, x19, #0x70
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EE5resetEPS3_+0x40>  // b.none
  3c:	bl	0 <free>
  40:	mov	x8, x19
  44:	ldr	x0, [x8], #16
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZNSt10unique_ptrIKN4llvm3mca9InstrDescESt14default_deleteIS3_EE5resetEPS3_+0x54>  // b.none
  50:	bl	0 <free>
  54:	mov	x0, x19
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZdlPv>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_+0x44>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	stp	x8, xzr, [x0]
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x29, x30, [sp, #16]
  4c:	mov	x0, x3
  50:	add	sp, sp, #0x30
  54:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPKSG_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
  20:	cmp	x20, x19
  24:	b.eq	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x84>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x78>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
  48:	tbnz	w0, #0, 94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x94>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	mov	x0, x20
  58:	str	x9, [x8]
  5c:	ldr	x9, [x0, #8]!
  60:	str	xzr, [x0]
  64:	str	x9, [x8, #8]
  68:	ldr	w8, [x21, #16]
  6c:	add	w8, w8, #0x1
  70:	str	w8, [x21, #16]
  74:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
  78:	add	x20, x20, #0x10
  7c:	cmp	x19, x20
  80:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x28>  // b.any
  84:	ldp	x20, x19, [sp, #32]
  88:	ldr	x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
  98:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
  9c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x17a                 	// #378
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0x50>
  10:	ldr	w10, [x1]
  14:	mov	w9, #0xfffe                	// #65534
  18:	cmp	w9, w10, uxth
  1c:	b.ls	c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0xc0>  // b.plast
  20:	ldr	x9, [x0, #8]
  24:	and	x10, x10, #0xffff
  28:	mov	w11, #0x25                  	// #37
  2c:	mul	w12, w10, w11
  30:	sub	w11, w8, #0x1
  34:	and	x12, x12, x11
  38:	add	x8, x9, x12, lsl #4
  3c:	ldrh	w15, [x8]
  40:	cmp	w15, w10
  44:	b.ne	64 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0x64>  // b.any
  48:	mov	w0, #0x1                   	// #1
  4c:	b	58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0x58>
  50:	mov	x8, xzr
  54:	mov	w0, wzr
  58:	str	x8, [x2]
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	mov	x13, xzr
  68:	mov	w16, #0x1                   	// #1
  6c:	mov	w14, #0xfffe                	// #65534
  70:	mov	w0, #0x1                   	// #1
  74:	mvn	w17, w15
  78:	tst	w17, #0xffff
  7c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0xb0>  // b.none
  80:	and	w15, w15, #0xffff
  84:	add	w12, w12, w16
  88:	cmp	w15, w14
  8c:	and	w12, w12, w11
  90:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  94:	csel	x13, x13, x8, ne  // ne = any
  98:	add	x8, x9, w12, uxtw #4
  9c:	ldrh	w15, [x8]
  a0:	add	w16, w16, #0x1
  a4:	cmp	w15, w10
  a8:	b.eq	58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0x58>  // b.none
  ac:	b	74 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0x74>
  b0:	cmp	x13, #0x0
  b4:	mov	w0, wzr
  b8:	csel	x8, x8, x13, eq  // eq = none
  bc:	b	58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_+0x58>
  c0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_>
  c4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_>
  c8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForIjEEbRKT_RPKSD_>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x252                 	// #594
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev:

0000000000000000 <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #8]
  14:	ldr	x19, [x0]
  18:	mov	x20, x0
  1c:	cbz	w8, 4c <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x4c>
  20:	add	x8, x8, x8, lsl #4
  24:	lsl	x21, x8, #3
  28:	add	x8, x19, x21
  2c:	ldur	x0, [x8, #-80]
  30:	sub	x8, x8, #0x40
  34:	cmp	x8, x0
  38:	b.eq	40 <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x40>  // b.none
  3c:	bl	0 <free>
  40:	subs	x21, x21, #0x88
  44:	b.ne	28 <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x28>  // b.any
  48:	ldr	x19, [x20]
  4c:	add	x8, x20, #0x10
  50:	cmp	x19, x8
  54:	b.eq	6c <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x6c>  // b.none
  58:	mov	x0, x19
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <free>
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	add	x8, x22, x22, lsl #4
  70:	lsl	x0, x8, #3
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	x0, [x19]
  c0:	ldr	w8, [x19, #8]
  c4:	mov	w9, #0x88                  	// #136
  c8:	mov	x2, x20
  cc:	madd	x1, x8, x9, x0
  d0:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  d4:	ldr	w8, [x19, #8]
  d8:	ldr	x21, [x19]
  dc:	cbz	w8, 10c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x10c>
  e0:	add	x8, x8, x8, lsl #4
  e4:	lsl	x23, x8, #3
  e8:	add	x8, x21, x23
  ec:	ldur	x0, [x8, #-80]
  f0:	sub	x8, x8, #0x40
  f4:	cmp	x8, x0
  f8:	b.eq	100 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x100>  // b.none
  fc:	bl	0 <free>
 100:	subs	x23, x23, #0x88
 104:	b.ne	e8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xe8>  // b.any
 108:	ldr	x21, [x19]
 10c:	add	x8, x19, #0x10
 110:	cmp	x21, x8
 114:	b.eq	120 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x120>  // b.none
 118:	mov	x0, x21
 11c:	bl	0 <free>
 120:	str	x20, [x19]
 124:	str	w22, [x19, #12]
 128:	ldp	x20, x19, [sp, #48]
 12c:	ldp	x22, x21, [sp, #32]
 130:	ldr	x23, [sp, #16]
 134:	ldp	x29, x30, [sp], #64
 138:	ret

Disassembly of section .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_:

0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_>:
   0:	mov	x8, x0
   4:	cmp	x0, x1
   8:	mov	x0, x2
   c:	b.eq	a4 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_+0xa4>  // b.none
  10:	str	d8, [sp, #-64]!
  14:	stp	x29, x30, [sp, #8]
  18:	str	x23, [sp, #24]
  1c:	stp	x22, x21, [sp, #32]
  20:	stp	x20, x19, [sp, #48]
  24:	mov	x29, sp
  28:	adrp	x9, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_>
  2c:	ldr	d8, [x9]
  30:	mov	x19, x1
  34:	add	x20, x8, #0x38
  38:	ldur	q0, [x20, #-56]
  3c:	ldur	q1, [x20, #-24]
  40:	ldur	q2, [x20, #-40]
  44:	ldur	x8, [x20, #-8]
  48:	add	x22, x0, #0x48
  4c:	str	q0, [x0]
  50:	stp	q2, q1, [x0, #16]
  54:	stp	x8, x22, [x0, #48]
  58:	str	d8, [x0, #64]
  5c:	ldr	w8, [x20, #8]
  60:	mov	x21, x0
  64:	sub	x23, x20, #0x38
  68:	cbz	w8, 78 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_+0x78>
  6c:	add	x0, x21, #0x38
  70:	mov	x1, x20
  74:	bl	0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_>
  78:	add	x8, x23, #0x88
  7c:	add	x20, x20, #0x88
  80:	cmp	x8, x19
  84:	add	x0, x22, #0x40
  88:	b.ne	38 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_+0x38>  // b.any
  8c:	add	x0, x21, #0x88
  90:	ldp	x20, x19, [sp, #48]
  94:	ldp	x22, x21, [sp, #32]
  98:	ldr	x23, [sp, #24]
  9c:	ldp	x29, x30, [sp, #8]
  a0:	ldr	d8, [sp], #64
  a4:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	114 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x114>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x58>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	90 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x90>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  4c:	ldr	w9, [x21, #8]
  50:	mov	x8, xzr
  54:	b	d0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xd0>
  58:	cbz	w20, 104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>
  5c:	ldr	x8, [x21]
  60:	ldr	x9, [x19]
  64:	add	x10, x20, #0x1
  68:	ldr	x11, [x8]
  6c:	sub	x10, x10, #0x1
  70:	cmp	x10, #0x1
  74:	str	x11, [x9]
  78:	ldr	w11, [x8, #8]
  7c:	add	x8, x8, #0x10
  80:	str	w11, [x9, #8]
  84:	add	x9, x9, #0x10
  88:	b.gt	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
  8c:	b	104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>
  90:	cbz	w8, c8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xc8>
  94:	ldr	x9, [x21]
  98:	ldr	x10, [x19]
  9c:	add	x11, x8, #0x1
  a0:	ldr	x12, [x9]
  a4:	sub	x11, x11, #0x1
  a8:	cmp	x11, #0x1
  ac:	str	x12, [x10]
  b0:	ldr	w12, [x9, #8]
  b4:	add	x9, x9, #0x10
  b8:	str	w12, [x10, #8]
  bc:	add	x10, x10, #0x10
  c0:	b.gt	a0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xa0>
  c4:	b	cc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xcc>
  c8:	mov	x8, xzr
  cc:	mov	x9, x20
  d0:	cmp	x8, x9
  d4:	b.eq	104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>  // b.none
  d8:	ldr	x10, [x19]
  dc:	ldr	x11, [x21]
  e0:	lsl	x12, x9, #4
  e4:	add	x9, x10, x8, lsl #4
  e8:	add	x10, x11, x8, lsl #4
  ec:	sub	x8, x12, x8, lsl #4
  f0:	ldr	q0, [x10], #16
  f4:	subs	x8, x8, #0x10
  f8:	str	q0, [x9]
  fc:	add	x9, x9, #0x10
 100:	b.ne	f0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf0>  // b.any
 104:	ldr	w8, [x19, #12]
 108:	cmp	w8, w20
 10c:	b.cc	128 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x128>  // b.lo, b.ul, b.last
 110:	str	w20, [x19, #8]
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x43                  	// #67
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Instruction.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>:
   0:	strh	w2, [x0, #48]
   4:	str	w3, [x0, #52]
   8:	stp	w3, w1, [x0, #40]
   c:	str	xzr, [x0, #24]
  10:	ret

0000000000000014 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>:
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	ldr	w8, [x0, #16]
  20:	cbz	w8, 70 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x5c>
  24:	ldr	w9, [x0, #20]
  28:	cmn	w9, #0x200
  2c:	b.ne	90 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x7c>  // b.any
  30:	ldr	w9, [x0, #24]
  34:	sub	w8, w8, #0x1
  38:	str	w8, [x0, #16]
  3c:	cmp	w9, w3
  40:	b.cs	54 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x40>  // b.hs, b.nlast
  44:	mov	w9, w3
  48:	strh	w2, [x0, #32]
  4c:	str	w3, [x0, #36]
  50:	stp	w3, w1, [x0, #24]
  54:	cbnz	w8, 68 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x54>
  58:	cmp	w9, #0x0
  5c:	cset	w8, eq  // eq = none
  60:	str	w9, [x0, #20]
  64:	strb	w8, [x0, #40]
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
  74:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
  78:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x1f                  	// #31
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
  94:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
  98:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x20                  	// #32
  ac:	bl	0 <__assert_fail>

00000000000000b0 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>:
  b0:	stp	x29, x30, [sp, #-48]!
  b4:	stp	x22, x21, [sp, #16]
  b8:	stp	x20, x19, [sp, #32]
  bc:	mov	x29, sp
  c0:	ldr	w8, [x0, #8]
  c4:	cmn	w8, #0x200
  c8:	b.ne	170 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xc0>  // b.any
  cc:	ldr	x8, [x0]
  d0:	ldr	w21, [x0, #64]
  d4:	mov	x20, x0
  d8:	mov	w19, w1
  dc:	ldr	w8, [x8, #4]
  e0:	str	w8, [x0, #8]
  e4:	cbz	w21, 140 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x90>
  e8:	ldr	x22, [x20, #56]
  ec:	ldrh	w2, [x20, #12]
  f0:	mov	w1, w19
  f4:	ldr	w9, [x22, #8]
  f8:	ldr	x0, [x22]
  fc:	sub	w8, w8, w9
 100:	bic	w3, w8, w8, asr #31
 104:	bl	14 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
 108:	cmp	w21, #0x1
 10c:	b.eq	140 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x90>  // b.none
 110:	add	x21, x22, x21, lsl #4
 114:	add	x22, x22, #0x10
 118:	ldr	w8, [x20, #8]
 11c:	ldr	w9, [x22, #8]
 120:	ldr	x0, [x22], #16
 124:	ldrh	w2, [x20, #12]
 128:	mov	w1, w19
 12c:	sub	w8, w8, w9
 130:	bic	w3, w8, w8, asr #31
 134:	bl	14 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
 138:	cmp	x22, x21
 13c:	b.ne	118 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x68>  // b.any
 140:	ldr	x8, [x20, #32]
 144:	cbz	x8, 160 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xb0>
 148:	ldrh	w9, [x20, #12]
 14c:	ldr	w10, [x20, #8]
 150:	str	xzr, [x8, #24]
 154:	strh	w9, [x8, #48]
 158:	str	w10, [x8, #52]
 15c:	stp	w10, w19, [x8, #40]
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	ldp	x29, x30, [sp], #48
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 174:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 178:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x36                  	// #54
 18c:	bl	0 <__assert_fail>

0000000000000190 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>:
 190:	sub	sp, sp, #0x20
 194:	stp	x29, x30, [sp, #16]
 198:	add	x29, sp, #0x10
 19c:	str	x2, [sp, #8]
 1a0:	str	w3, [sp, #4]
 1a4:	ldr	w9, [x0, #8]
 1a8:	cmn	w9, #0x200
 1ac:	b.ne	1cc <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x3c>  // b.any
 1b0:	add	x0, x0, #0x38
 1b4:	add	x1, sp, #0x8
 1b8:	add	x2, sp, #0x4
 1bc:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 1c0:	ldp	x29, x30, [sp, #16]
 1c4:	add	sp, sp, #0x20
 1c8:	ret
 1cc:	ldrh	w8, [x0, #12]
 1d0:	ldp	x29, x30, [sp, #16]
 1d4:	sub	w9, w9, w3
 1d8:	bic	w3, w9, w9, asr #31
 1dc:	mov	x0, x2
 1e0:	mov	w2, w8
 1e4:	add	sp, sp, #0x20
 1e8:	b	14 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>

00000000000001ec <_ZN4llvm3mca10WriteState7addUserEjPS1_>:
 1ec:	stp	x29, x30, [sp, #-16]!
 1f0:	mov	x29, sp
 1f4:	ldr	w8, [x0, #8]
 1f8:	cmn	w8, #0x200
 1fc:	b.ne	210 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x24>  // b.any
 200:	ldr	x8, [x0, #32]
 204:	cbnz	x8, 234 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x48>
 208:	str	x2, [x0, #32]
 20c:	b	228 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x3c>
 210:	ldrh	w9, [x0, #12]
 214:	bic	w8, w8, w8, asr #31
 218:	str	w8, [x2, #52]
 21c:	stp	w8, w1, [x2, #40]
 220:	strh	w9, [x2, #48]
 224:	mov	x0, xzr
 228:	str	x0, [x2, #24]
 22c:	ldp	x29, x30, [sp], #16
 230:	ret
 234:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 238:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 23c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 240:	add	x0, x0, #0x0
 244:	add	x1, x1, #0x0
 248:	add	x3, x3, #0x0
 24c:	mov	w2, #0x5a                  	// #90
 250:	bl	0 <__assert_fail>

0000000000000254 <_ZN4llvm3mca10WriteState10cycleEventEv>:
 254:	ldr	w8, [x0, #8]
 258:	cmn	w8, #0x200
 25c:	b.eq	268 <_ZN4llvm3mca10WriteState10cycleEventEv+0x14>  // b.none
 260:	sub	w8, w8, #0x1
 264:	str	w8, [x0, #8]
 268:	ldr	w8, [x0, #40]
 26c:	cbz	w8, 278 <_ZN4llvm3mca10WriteState10cycleEventEv+0x24>
 270:	sub	w8, w8, #0x1
 274:	str	w8, [x0, #40]
 278:	ret

000000000000027c <_ZN4llvm3mca9ReadState10cycleEventEv>:
 27c:	ldr	w8, [x0, #16]
 280:	cbz	w8, 298 <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
 284:	ldr	w8, [x0, #24]
 288:	cbz	w8, 298 <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
 28c:	sub	w8, w8, #0x1
 290:	str	w8, [x0, #24]
 294:	ret
 298:	ldr	w8, [x0, #20]
 29c:	cmn	w8, #0x200
 2a0:	b.eq	2a8 <_ZN4llvm3mca9ReadState10cycleEventEv+0x2c>  // b.none
 2a4:	cbnz	w8, 2ac <_ZN4llvm3mca9ReadState10cycleEventEv+0x30>
 2a8:	ret
 2ac:	subs	w8, w8, #0x1
 2b0:	str	w8, [x0, #20]
 2b4:	cset	w8, eq  // eq = none
 2b8:	strb	w8, [x0, #40]
 2bc:	ret

00000000000002c0 <_ZNK4llvm3mca10WriteState4dumpEv>:
 2c0:	stp	x29, x30, [sp, #-32]!
 2c4:	str	x19, [sp, #16]
 2c8:	mov	x29, sp
 2cc:	mov	x19, x0
 2d0:	bl	0 <_ZN4llvm4dbgsEv>
 2d4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 2d8:	add	x1, x1, #0x0
 2dc:	mov	w2, #0x8                   	// #8
 2e0:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 2e4:	ldr	x8, [x19]
 2e8:	ldrsw	x1, [x8]
 2ec:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
 2f0:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 2f4:	add	x1, x1, #0x0
 2f8:	mov	w2, #0x6                   	// #6
 2fc:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 300:	ldr	x8, [x19]
 304:	ldr	w1, [x8, #4]
 308:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 30c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 310:	add	x1, x1, #0x0
 314:	mov	w2, #0x8                   	// #8
 318:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 31c:	ldrh	w1, [x19, #12]
 320:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
 324:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 328:	add	x1, x1, #0x0
 32c:	mov	w2, #0xe                   	// #14
 330:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 334:	ldrsw	x1, [x19, #8]
 338:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
 33c:	ldr	x19, [sp, #16]
 340:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 344:	add	x1, x1, #0x0
 348:	mov	w2, #0x2                   	// #2
 34c:	ldp	x29, x30, [sp], #32
 350:	b	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>

0000000000000354 <_ZNK4llvm3mca8WriteRef4dumpEv>:
 354:	stp	x29, x30, [sp, #-32]!
 358:	str	x19, [sp, #16]
 35c:	mov	x29, sp
 360:	mov	x19, x0
 364:	bl	0 <_ZN4llvm4dbgsEv>
 368:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 36c:	add	x1, x1, #0x0
 370:	mov	w2, #0x4                   	// #4
 374:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 378:	ldr	w1, [x19]
 37c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 380:	ldp	x9, x8, [x0, #16]
 384:	cmp	x8, x9
 388:	b.cs	3a0 <_ZNK4llvm3mca8WriteRef4dumpEv+0x4c>  // b.hs, b.nlast
 38c:	add	x9, x8, #0x1
 390:	mov	w10, #0x20                  	// #32
 394:	str	x9, [x0, #24]
 398:	strb	w10, [x8]
 39c:	b	3a8 <_ZNK4llvm3mca8WriteRef4dumpEv+0x54>
 3a0:	mov	w1, #0x20                  	// #32
 3a4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3a8:	ldr	x0, [x19, #8]
 3ac:	cbz	x0, 3c8 <_ZNK4llvm3mca8WriteRef4dumpEv+0x74>
 3b0:	ldr	w8, [x19]
 3b4:	cmn	w8, #0x1
 3b8:	b.eq	3c8 <_ZNK4llvm3mca8WriteRef4dumpEv+0x74>  // b.none
 3bc:	ldr	x19, [sp, #16]
 3c0:	ldp	x29, x30, [sp], #32
 3c4:	b	2c0 <_ZNK4llvm3mca10WriteState4dumpEv>
 3c8:	bl	0 <_ZN4llvm4dbgsEv>
 3cc:	ldr	x19, [sp, #16]
 3d0:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 3d4:	add	x1, x1, #0x0
 3d8:	mov	w2, #0x6                   	// #6
 3dc:	ldp	x29, x30, [sp], #32
 3e0:	b	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>

00000000000003e4 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>:
 3e4:	ldr	w9, [x0, #816]
 3e8:	mov	x8, x0
 3ec:	add	x0, x0, #0x328
 3f0:	cbnz	w9, 46c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x88>
 3f4:	ldr	w9, [x8, #24]
 3f8:	cbz	w9, 430 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x4c>
 3fc:	ldr	x10, [x8, #16]
 400:	add	x9, x9, x9, lsl #4
 404:	lsl	x9, x9, #3
 408:	add	x10, x10, #0x34
 40c:	ldr	w11, [x10]
 410:	cbz	w11, 424 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x40>
 414:	ldr	w11, [x10]
 418:	ldur	x12, [x10, #-8]
 41c:	str	w11, [x0, #8]
 420:	str	x12, [x0]
 424:	subs	x9, x9, #0x88
 428:	add	x10, x10, #0x88
 42c:	b.ne	40c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x28>  // b.any
 430:	ldr	w9, [x8, #584]
 434:	cbz	w9, 46c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x88>
 438:	ldr	x10, [x8, #576]
 43c:	add	x8, x9, x9, lsl #1
 440:	lsl	x8, x8, #4
 444:	add	x9, x10, #0x24
 448:	ldr	w10, [x9]
 44c:	cbz	w10, 460 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x7c>
 450:	ldr	w10, [x9]
 454:	ldur	x11, [x9, #-8]
 458:	str	w10, [x0, #8]
 45c:	str	x11, [x0]
 460:	subs	x8, x8, #0x30
 464:	add	x9, x9, #0x30
 468:	b.ne	448 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x64>  // b.any
 46c:	ret

0000000000000470 <_ZN4llvm3mca11Instruction8dispatchEj>:
 470:	stp	x29, x30, [sp, #-32]!
 474:	str	x19, [sp, #16]
 478:	mov	x29, sp
 47c:	ldr	w8, [x0, #784]
 480:	cbnz	w8, 4b8 <_ZN4llvm3mca11Instruction8dispatchEj+0x48>
 484:	mov	w8, #0x1                   	// #1
 488:	mov	x19, x0
 48c:	str	w8, [x0, #784]
 490:	str	w1, [x0, #792]
 494:	bl	4d8 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
 498:	tbz	w0, #0, 4ac <_ZN4llvm3mca11Instruction8dispatchEj+0x3c>
 49c:	mov	x0, x19
 4a0:	ldr	x19, [sp, #16]
 4a4:	ldp	x29, x30, [sp], #32
 4a8:	b	750 <_ZN4llvm3mca11Instruction13updatePendingEv>
 4ac:	ldr	x19, [sp, #16]
 4b0:	ldp	x29, x30, [sp], #32
 4b4:	ret
 4b8:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 4bc:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 4c0:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 4c4:	add	x0, x0, #0x0
 4c8:	add	x1, x1, #0x0
 4cc:	add	x3, x3, #0x0
 4d0:	mov	w2, #0x9f                  	// #159
 4d4:	bl	0 <__assert_fail>

00000000000004d8 <_ZN4llvm3mca11Instruction16updateDispatchedEv>:
 4d8:	stp	x29, x30, [sp, #-16]!
 4dc:	mov	x29, sp
 4e0:	ldr	w8, [x0, #784]
 4e4:	cmp	w8, #0x1
 4e8:	b.ne	730 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>  // b.any
 4ec:	ldr	w11, [x0, #584]
 4f0:	ldr	x8, [x0, #576]
 4f4:	add	x9, x11, x11, lsl #1
 4f8:	lsl	x10, x9, #4
 4fc:	cmp	x10, #0x91
 500:	add	x9, x8, x9, lsl #4
 504:	b.cc	5a4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xcc>  // b.lo, b.ul, b.last
 508:	lsr	x10, x11, #2
 50c:	add	x10, x10, #0x1
 510:	ldrb	w11, [x8, #42]
 514:	cbz	w11, 524 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x4c>
 518:	ldrb	w11, [x8, #40]
 51c:	cbnz	w11, 530 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x58>
 520:	b	63c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x164>
 524:	ldr	w11, [x8, #20]
 528:	cmp	w11, #0x0
 52c:	b.le	518 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x40>
 530:	ldrb	w11, [x8, #90]
 534:	cbz	w11, 544 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x6c>
 538:	ldrb	w11, [x8, #88]
 53c:	cbnz	w11, 550 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x78>
 540:	b	5e0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x108>
 544:	ldr	w11, [x8, #68]
 548:	cmp	w11, #0x0
 54c:	b.le	538 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x60>
 550:	ldrb	w11, [x8, #138]
 554:	cbz	w11, 564 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x8c>
 558:	ldrb	w11, [x8, #136]
 55c:	cbnz	w11, 570 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x98>
 560:	b	5e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x110>
 564:	ldr	w11, [x8, #116]
 568:	cmp	w11, #0x0
 56c:	b.le	558 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x80>
 570:	ldrb	w11, [x8, #186]
 574:	cbz	w11, 584 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xac>
 578:	ldrb	w11, [x8, #184]
 57c:	cbnz	w11, 590 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xb8>
 580:	b	5f0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x118>
 584:	ldr	w11, [x8, #164]
 588:	cmp	w11, #0x0
 58c:	b.le	578 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xa0>
 590:	sub	x10, x10, #0x1
 594:	cmp	x10, #0x1
 598:	add	x8, x8, #0xc0
 59c:	b.gt	510 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x38>
 5a0:	sub	x10, x9, x8
 5a4:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 5a8:	asr	x10, x10, #4
 5ac:	movk	x11, #0xaaab
 5b0:	mul	x10, x10, x11
 5b4:	cmp	x10, #0x1
 5b8:	b.eq	62c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x154>  // b.none
 5bc:	cmp	x10, #0x2
 5c0:	b.eq	608 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x130>  // b.none
 5c4:	cmp	x10, #0x3
 5c8:	b.ne	654 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x17c>  // b.any
 5cc:	ldrb	w10, [x8, #42]
 5d0:	cbz	w10, 5f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x120>
 5d4:	ldrb	w10, [x8, #40]
 5d8:	cbnz	w10, 604 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x12c>
 5dc:	b	63c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x164>
 5e0:	add	x8, x8, #0x30
 5e4:	b	63c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x164>
 5e8:	add	x8, x8, #0x60
 5ec:	b	63c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x164>
 5f0:	add	x8, x8, #0x90
 5f4:	b	63c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x164>
 5f8:	ldr	w10, [x8, #20]
 5fc:	cmp	w10, #0x0
 600:	b.le	5d4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xfc>
 604:	add	x8, x8, #0x30
 608:	ldrb	w10, [x8, #42]
 60c:	cbz	w10, 61c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x144>
 610:	ldrb	w10, [x8, #40]
 614:	cbnz	w10, 628 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x150>
 618:	b	63c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x164>
 61c:	ldr	w10, [x8, #20]
 620:	cmp	w10, #0x0
 624:	b.le	610 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>
 628:	add	x8, x8, #0x30
 62c:	ldrb	w10, [x8, #42]
 630:	cbz	w10, 648 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x170>
 634:	ldrb	w10, [x8, #40]
 638:	cbnz	w10, 654 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x17c>
 63c:	cmp	x8, x9
 640:	b.ne	714 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x23c>  // b.any
 644:	b	654 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x17c>
 648:	ldr	w10, [x8, #20]
 64c:	cmp	w10, #0x0
 650:	b.le	634 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x15c>
 654:	ldr	w11, [x0, #24]
 658:	ldr	x8, [x0, #16]
 65c:	add	x9, x11, x11, lsl #4
 660:	lsl	x10, x9, #3
 664:	cmp	x10, #0x199
 668:	add	x9, x8, x9, lsl #3
 66c:	b.cc	6ac <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1d4>  // b.lo, b.ul, b.last
 670:	lsr	x10, x11, #2
 674:	add	x10, x10, #0x1
 678:	ldr	x11, [x8, #24]
 67c:	cbnz	x11, 70c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
 680:	ldr	x11, [x8, #160]
 684:	cbnz	x11, 6f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x220>
 688:	ldr	x11, [x8, #296]
 68c:	cbnz	x11, 700 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x228>
 690:	ldr	x11, [x8, #432]
 694:	cbnz	x11, 708 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x230>
 698:	sub	x10, x10, #0x1
 69c:	cmp	x10, #0x1
 6a0:	add	x8, x8, #0x220
 6a4:	b.gt	678 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
 6a8:	sub	x10, x9, x8
 6ac:	mov	x11, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
 6b0:	asr	x10, x10, #3
 6b4:	movk	x11, #0xf0f1
 6b8:	mul	x10, x10, x11
 6bc:	cmp	x10, #0x1
 6c0:	b.eq	6ec <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x214>  // b.none
 6c4:	cmp	x10, #0x2
 6c8:	b.eq	6e0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x208>  // b.none
 6cc:	cmp	x10, #0x3
 6d0:	b.ne	71c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x244>  // b.any
 6d4:	ldr	x10, [x8, #24]
 6d8:	cbnz	x10, 70c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
 6dc:	add	x8, x8, #0x88
 6e0:	ldr	x10, [x8, #24]
 6e4:	cbnz	x10, 70c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
 6e8:	add	x8, x8, #0x88
 6ec:	ldr	x10, [x8, #24]
 6f0:	cbnz	x10, 70c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
 6f4:	b	71c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x244>
 6f8:	add	x8, x8, #0x88
 6fc:	b	70c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
 700:	add	x8, x8, #0x110
 704:	b	70c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
 708:	add	x8, x8, #0x198
 70c:	cmp	x8, x9
 710:	b.eq	71c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x244>  // b.none
 714:	mov	w0, wzr
 718:	b	728 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x250>
 71c:	mov	w8, #0x2                   	// #2
 720:	str	w8, [x0, #784]
 724:	mov	w0, #0x1                   	// #1
 728:	ldp	x29, x30, [sp], #16
 72c:	ret
 730:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 734:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 738:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 73c:	add	x0, x0, #0x0
 740:	add	x1, x1, #0x0
 744:	add	x3, x3, #0x0
 748:	mov	w2, #0xcc                  	// #204
 74c:	bl	0 <__assert_fail>

0000000000000750 <_ZN4llvm3mca11Instruction13updatePendingEv>:
 750:	stp	x29, x30, [sp, #-16]!
 754:	mov	x29, sp
 758:	ldr	w8, [x0, #784]
 75c:	cmp	w8, #0x2
 760:	b.ne	9b4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x264>  // b.any
 764:	ldr	w11, [x0, #584]
 768:	ldr	x8, [x0, #576]
 76c:	add	x9, x11, x11, lsl #1
 770:	lsl	x10, x9, #4
 774:	cmp	x10, #0x91
 778:	add	x9, x8, x9, lsl #4
 77c:	b.cc	7c4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x74>  // b.lo, b.ul, b.last
 780:	lsr	x10, x11, #2
 784:	add	x10, x10, #0x1
 788:	add	x8, x8, #0x60
 78c:	ldurb	w11, [x8, #-56]
 790:	cbz	w11, 810 <_ZN4llvm3mca11Instruction13updatePendingEv+0xc0>
 794:	ldurb	w11, [x8, #-8]
 798:	cbz	w11, 818 <_ZN4llvm3mca11Instruction13updatePendingEv+0xc8>
 79c:	ldrb	w11, [x8, #40]
 7a0:	cbz	w11, 824 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
 7a4:	ldrb	w11, [x8, #88]
 7a8:	cbz	w11, 820 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd0>
 7ac:	sub	x10, x10, #0x1
 7b0:	cmp	x10, #0x1
 7b4:	add	x8, x8, #0xc0
 7b8:	b.gt	78c <_ZN4llvm3mca11Instruction13updatePendingEv+0x3c>
 7bc:	sub	x8, x8, #0x60
 7c0:	sub	x10, x9, x8
 7c4:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 7c8:	asr	x10, x10, #4
 7cc:	movk	x11, #0xaaab
 7d0:	mul	x10, x10, x11
 7d4:	cmp	x10, #0x1
 7d8:	b.eq	804 <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>  // b.none
 7dc:	cmp	x10, #0x2
 7e0:	b.eq	7f8 <_ZN4llvm3mca11Instruction13updatePendingEv+0xa8>  // b.none
 7e4:	cmp	x10, #0x3
 7e8:	b.ne	82c <_ZN4llvm3mca11Instruction13updatePendingEv+0xdc>  // b.any
 7ec:	ldrb	w10, [x8, #40]
 7f0:	cbz	w10, 824 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
 7f4:	add	x8, x8, #0x30
 7f8:	ldrb	w10, [x8, #40]
 7fc:	cbz	w10, 824 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
 800:	add	x8, x8, #0x30
 804:	ldrb	w10, [x8, #40]
 808:	cbnz	w10, 82c <_ZN4llvm3mca11Instruction13updatePendingEv+0xdc>
 80c:	b	824 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
 810:	sub	x8, x8, #0x60
 814:	b	824 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
 818:	sub	x8, x8, #0x30
 81c:	b	824 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
 820:	add	x8, x8, #0x30
 824:	cmp	x8, x9
 828:	b.ne	998 <_ZN4llvm3mca11Instruction13updatePendingEv+0x248>  // b.any
 82c:	ldr	w11, [x0, #24]
 830:	ldr	x8, [x0, #16]
 834:	add	x9, x11, x11, lsl #4
 838:	lsl	x10, x9, #3
 83c:	cmp	x10, #0x199
 840:	add	x9, x8, x9, lsl #3
 844:	b.cc	8e8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x198>  // b.lo, b.ul, b.last
 848:	lsr	x10, x11, #2
 84c:	add	x10, x10, #0x1
 850:	ldr	x11, [x8, #24]
 854:	cbnz	x11, 990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>
 858:	ldr	w11, [x8, #40]
 85c:	cbz	w11, 870 <_ZN4llvm3mca11Instruction13updatePendingEv+0x120>
 860:	ldr	x12, [x8]
 864:	ldr	w12, [x12, #4]
 868:	cmp	w11, w12
 86c:	b.cs	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>  // b.hs, b.nlast
 870:	ldr	x11, [x8, #160]
 874:	cbnz	x11, 97c <_ZN4llvm3mca11Instruction13updatePendingEv+0x22c>
 878:	ldr	w11, [x8, #176]
 87c:	cbz	w11, 890 <_ZN4llvm3mca11Instruction13updatePendingEv+0x140>
 880:	ldr	x12, [x8, #136]
 884:	ldr	w12, [x12, #4]
 888:	cmp	w11, w12
 88c:	b.cs	97c <_ZN4llvm3mca11Instruction13updatePendingEv+0x22c>  // b.hs, b.nlast
 890:	ldr	x12, [x8, #296]
 894:	add	x11, x8, #0x110
 898:	cbnz	x12, 984 <_ZN4llvm3mca11Instruction13updatePendingEv+0x234>
 89c:	ldr	w12, [x8, #312]
 8a0:	cbz	w12, 8b4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x164>
 8a4:	ldr	x13, [x8, #272]
 8a8:	ldr	w13, [x13, #4]
 8ac:	cmp	w12, w13
 8b0:	b.cs	984 <_ZN4llvm3mca11Instruction13updatePendingEv+0x234>  // b.hs, b.nlast
 8b4:	ldr	x11, [x8, #432]
 8b8:	cbnz	x11, 98c <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>
 8bc:	ldr	w11, [x8, #448]
 8c0:	cbz	w11, 8d4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x184>
 8c4:	ldr	x12, [x8, #408]
 8c8:	ldr	w12, [x12, #4]
 8cc:	cmp	w11, w12
 8d0:	b.cs	98c <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>  // b.hs, b.nlast
 8d4:	sub	x10, x10, #0x1
 8d8:	cmp	x10, #0x1
 8dc:	add	x8, x8, #0x220
 8e0:	b.gt	850 <_ZN4llvm3mca11Instruction13updatePendingEv+0x100>
 8e4:	sub	x10, x9, x8
 8e8:	mov	x11, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
 8ec:	asr	x10, x10, #3
 8f0:	movk	x11, #0xf0f1
 8f4:	mul	x10, x10, x11
 8f8:	cmp	x10, #0x1
 8fc:	b.eq	958 <_ZN4llvm3mca11Instruction13updatePendingEv+0x208>  // b.none
 900:	cmp	x10, #0x2
 904:	b.eq	934 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1e4>  // b.none
 908:	cmp	x10, #0x3
 90c:	b.ne	9a0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x250>  // b.any
 910:	ldr	x10, [x8, #24]
 914:	cbnz	x10, 990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>
 918:	ldr	w10, [x8, #40]
 91c:	cbz	w10, 930 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1e0>
 920:	ldr	x11, [x8]
 924:	ldr	w11, [x11, #4]
 928:	cmp	w10, w11
 92c:	b.cs	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>  // b.hs, b.nlast
 930:	add	x8, x8, #0x88
 934:	ldr	x10, [x8, #24]
 938:	cbnz	x10, 990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>
 93c:	ldr	w10, [x8, #40]
 940:	cbz	w10, 954 <_ZN4llvm3mca11Instruction13updatePendingEv+0x204>
 944:	ldr	x11, [x8]
 948:	ldr	w11, [x11, #4]
 94c:	cmp	w10, w11
 950:	b.cs	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>  // b.hs, b.nlast
 954:	add	x8, x8, #0x88
 958:	ldr	x10, [x8, #24]
 95c:	cbnz	x10, 990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>
 960:	ldr	w10, [x8, #40]
 964:	cbz	w10, 9a0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x250>
 968:	ldr	x11, [x8]
 96c:	ldr	w11, [x11, #4]
 970:	cmp	w10, w11
 974:	b.cs	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>  // b.hs, b.nlast
 978:	b	9a0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x250>
 97c:	add	x8, x8, #0x88
 980:	b	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>
 984:	mov	x8, x11
 988:	b	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x240>
 98c:	add	x8, x8, #0x198
 990:	cmp	x8, x9
 994:	b.eq	9a0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x250>  // b.none
 998:	mov	w0, wzr
 99c:	b	9ac <_ZN4llvm3mca11Instruction13updatePendingEv+0x25c>
 9a0:	mov	w8, #0x3                   	// #3
 9a4:	str	w8, [x0, #784]
 9a8:	mov	w0, #0x1                   	// #1
 9ac:	ldp	x29, x30, [sp], #16
 9b0:	ret
 9b4:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 9b8:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 9bc:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 9c0:	add	x0, x0, #0x0
 9c4:	add	x1, x1, #0x0
 9c8:	add	x3, x3, #0x0
 9cc:	mov	w2, #0xbe                  	// #190
 9d0:	bl	0 <__assert_fail>

00000000000009d4 <_ZN4llvm3mca11Instruction7executeEj>:
 9d4:	stp	x29, x30, [sp, #-48]!
 9d8:	stp	x22, x21, [sp, #16]
 9dc:	stp	x20, x19, [sp, #32]
 9e0:	mov	x29, sp
 9e4:	ldr	w8, [x0, #784]
 9e8:	cmp	w8, #0x3
 9ec:	b.ne	a58 <_ZN4llvm3mca11Instruction7executeEj+0x84>  // b.any
 9f0:	ldr	x8, [x0]
 9f4:	mov	w9, #0x4                   	// #4
 9f8:	str	w9, [x0, #784]
 9fc:	ldr	w9, [x0, #24]
 a00:	ldr	w8, [x8, #312]
 a04:	mov	x19, x0
 a08:	str	w8, [x0, #788]
 a0c:	cbz	w9, a3c <_ZN4llvm3mca11Instruction7executeEj+0x68>
 a10:	ldr	x21, [x19, #16]
 a14:	add	x8, x9, x9, lsl #4
 a18:	mov	w20, w1
 a1c:	lsl	x22, x8, #3
 a20:	mov	x0, x21
 a24:	mov	w1, w20
 a28:	bl	b0 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>
 a2c:	subs	x22, x22, #0x88
 a30:	add	x21, x21, #0x88
 a34:	b.ne	a20 <_ZN4llvm3mca11Instruction7executeEj+0x4c>  // b.any
 a38:	ldr	w8, [x19, #788]
 a3c:	cbnz	w8, a48 <_ZN4llvm3mca11Instruction7executeEj+0x74>
 a40:	mov	w8, #0x5                   	// #5
 a44:	str	w8, [x19, #784]
 a48:	ldp	x20, x19, [sp, #32]
 a4c:	ldp	x22, x21, [sp, #16]
 a50:	ldp	x29, x30, [sp], #48
 a54:	ret
 a58:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 a5c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 a60:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 a64:	add	x0, x0, #0x0
 a68:	add	x1, x1, #0x0
 a6c:	add	x3, x3, #0x0
 a70:	mov	w2, #0xa9                  	// #169
 a74:	bl	0 <__assert_fail>

0000000000000a78 <_ZN4llvm3mca11Instruction13forceExecutedEv>:
 a78:	stp	x29, x30, [sp, #-16]!
 a7c:	mov	x29, sp
 a80:	ldr	w8, [x0, #784]
 a84:	cmp	w8, #0x3
 a88:	b.ne	aa0 <_ZN4llvm3mca11Instruction13forceExecutedEv+0x28>  // b.any
 a8c:	adrp	x8, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 a90:	ldr	d0, [x8]
 a94:	str	d0, [x0, #784]
 a98:	ldp	x29, x30, [sp], #16
 a9c:	ret
 aa0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 aa4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 aa8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 aac:	add	x0, x0, #0x0
 ab0:	add	x1, x1, #0x0
 ab4:	add	x3, x3, #0x0
 ab8:	mov	w2, #0xb8                  	// #184
 abc:	bl	0 <__assert_fail>

0000000000000ac0 <_ZN4llvm3mca11Instruction6updateEv>:
 ac0:	stp	x29, x30, [sp, #-32]!
 ac4:	str	x19, [sp, #16]
 ac8:	mov	x29, sp
 acc:	ldr	w8, [x0, #784]
 ad0:	mov	x19, x0
 ad4:	cmp	w8, #0x1
 ad8:	b.ne	ae8 <_ZN4llvm3mca11Instruction6updateEv+0x28>  // b.any
 adc:	mov	x0, x19
 ae0:	bl	4d8 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
 ae4:	ldr	w8, [x19, #784]
 ae8:	cmp	w8, #0x2
 aec:	b.ne	b00 <_ZN4llvm3mca11Instruction6updateEv+0x40>  // b.any
 af0:	mov	x0, x19
 af4:	ldr	x19, [sp, #16]
 af8:	ldp	x29, x30, [sp], #32
 afc:	b	750 <_ZN4llvm3mca11Instruction13updatePendingEv>
 b00:	ldr	x19, [sp, #16]
 b04:	ldp	x29, x30, [sp], #32
 b08:	ret

0000000000000b0c <_ZN4llvm3mca11Instruction10cycleEventEv>:
 b0c:	stp	x29, x30, [sp, #-48]!
 b10:	str	x21, [sp, #16]
 b14:	stp	x20, x19, [sp, #32]
 b18:	mov	x29, sp
 b1c:	ldr	w8, [x0, #784]
 b20:	mov	x19, x0
 b24:	sub	w9, w8, #0x1
 b28:	cmp	w9, #0x2
 b2c:	b.cc	bb4 <_ZN4llvm3mca11Instruction10cycleEventEv+0xa8>  // b.lo, b.ul, b.last
 b30:	cmp	w8, #0x3
 b34:	b.eq	ba4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x98>  // b.none
 b38:	cmp	w8, #0x4
 b3c:	b.ne	c38 <_ZN4llvm3mca11Instruction10cycleEventEv+0x12c>  // b.any
 b40:	ldr	w8, [x19, #788]
 b44:	cbz	w8, c58 <_ZN4llvm3mca11Instruction10cycleEventEv+0x14c>
 b48:	ldr	w9, [x19, #24]
 b4c:	cbz	w9, b90 <_ZN4llvm3mca11Instruction10cycleEventEv+0x84>
 b50:	ldr	x10, [x19, #16]
 b54:	add	x9, x9, x9, lsl #4
 b58:	lsl	x9, x9, #3
 b5c:	add	x10, x10, #0x28
 b60:	ldur	w11, [x10, #-32]
 b64:	cmn	w11, #0x200
 b68:	b.eq	b74 <_ZN4llvm3mca11Instruction10cycleEventEv+0x68>  // b.none
 b6c:	sub	w11, w11, #0x1
 b70:	stur	w11, [x10, #-32]
 b74:	ldr	w11, [x10]
 b78:	cbz	w11, b84 <_ZN4llvm3mca11Instruction10cycleEventEv+0x78>
 b7c:	sub	w11, w11, #0x1
 b80:	str	w11, [x10]
 b84:	subs	x9, x9, #0x88
 b88:	add	x10, x10, #0x88
 b8c:	b.ne	b60 <_ZN4llvm3mca11Instruction10cycleEventEv+0x54>  // b.any
 b90:	subs	w8, w8, #0x1
 b94:	str	w8, [x19, #788]
 b98:	b.ne	ba4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x98>  // b.any
 b9c:	mov	w8, #0x5                   	// #5
 ba0:	str	w8, [x19, #784]
 ba4:	ldp	x20, x19, [sp, #32]
 ba8:	ldr	x21, [sp, #16]
 bac:	ldp	x29, x30, [sp], #48
 bb0:	ret
 bb4:	ldr	w8, [x19, #584]
 bb8:	cbz	w8, bdc <_ZN4llvm3mca11Instruction10cycleEventEv+0xd0>
 bbc:	ldr	x20, [x19, #576]
 bc0:	add	x8, x8, x8, lsl #1
 bc4:	lsl	x21, x8, #4
 bc8:	mov	x0, x20
 bcc:	bl	27c <_ZN4llvm3mca9ReadState10cycleEventEv>
 bd0:	subs	x21, x21, #0x30
 bd4:	add	x20, x20, #0x30
 bd8:	b.ne	bc8 <_ZN4llvm3mca11Instruction10cycleEventEv+0xbc>  // b.any
 bdc:	ldr	w8, [x19, #24]
 be0:	cbz	w8, c24 <_ZN4llvm3mca11Instruction10cycleEventEv+0x118>
 be4:	ldr	x9, [x19, #16]
 be8:	add	x8, x8, x8, lsl #4
 bec:	lsl	x8, x8, #3
 bf0:	add	x9, x9, #0x28
 bf4:	ldur	w10, [x9, #-32]
 bf8:	cmn	w10, #0x200
 bfc:	b.eq	c08 <_ZN4llvm3mca11Instruction10cycleEventEv+0xfc>  // b.none
 c00:	sub	w10, w10, #0x1
 c04:	stur	w10, [x9, #-32]
 c08:	ldr	w10, [x9]
 c0c:	cbz	w10, c18 <_ZN4llvm3mca11Instruction10cycleEventEv+0x10c>
 c10:	sub	w10, w10, #0x1
 c14:	str	w10, [x9]
 c18:	subs	x8, x8, #0x88
 c1c:	add	x9, x9, #0x88
 c20:	b.ne	bf4 <_ZN4llvm3mca11Instruction10cycleEventEv+0xe8>  // b.any
 c24:	mov	x0, x19
 c28:	ldp	x20, x19, [sp, #32]
 c2c:	ldr	x21, [sp, #16]
 c30:	ldp	x29, x30, [sp], #48
 c34:	b	ac0 <_ZN4llvm3mca11Instruction6updateEv>
 c38:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 c3c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 c40:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 c44:	add	x0, x0, #0x0
 c48:	add	x1, x1, #0x0
 c4c:	add	x3, x3, #0x0
 c50:	mov	w2, #0xf2                  	// #242
 c54:	bl	0 <__assert_fail>
 c58:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 c5c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 c60:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 c64:	add	x0, x0, #0x0
 c68:	add	x1, x1, #0x0
 c6c:	add	x3, x3, #0x0
 c70:	mov	w2, #0xf3                  	// #243
 c74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x0
  1c:	mov	x21, x1
  20:	cmp	w8, w9
  24:	b.cs	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_+0x68>  // b.hs, b.nlast
  28:	ldr	x10, [x19]
  2c:	ldr	x11, [x21]
  30:	cmp	w8, w9
  34:	add	x12, x10, w8, uxtw #4
  38:	str	x11, [x12]
  3c:	ldr	w11, [x20]
  40:	str	w11, [x12, #8]
  44:	b.cs	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_+0x7c>  // b.hs, b.nlast
  48:	add	w8, w8, #0x1
  4c:	str	w8, [x19, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	add	x9, x10, w8, uxtw #4
  5c:	sub	x0, x9, #0x10
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x0, x19
  6c:	mov	x1, xzr
  70:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_>
  74:	ldp	w8, w9, [x19, #8]
  78:	b	28 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_+0x28>
  7c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_>
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_>
  84:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEE12emplace_backIJRS4_RiEEERS5_DpOT_>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x43                  	// #67
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Pipeline.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	str	x1, [sp, #8]
  18:	cbz	x1, 28 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x28>
  1c:	add	x0, x19, #0x50
  20:	add	x1, sp, #0x8
  24:	bl	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
  28:	ldr	w8, [x19, #8]
  2c:	cbz	w8, 4c <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x4c>
  30:	ldr	x19, [x19]
  34:	lsl	x20, x8, #3
  38:	ldr	x0, [x19], #8
  3c:	ldr	x1, [sp, #8]
  40:	bl	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
  44:	subs	x20, x20, #0x8
  48:	b.ne	38 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x38>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	add	sp, sp, #0x30
  58:	ret

000000000000005c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>:
  5c:	stp	x29, x30, [sp, #-48]!
  60:	str	x21, [sp, #16]
  64:	stp	x20, x19, [sp, #32]
  68:	mov	x29, sp
  6c:	ldr	w8, [x0, #8]
  70:	ldr	x19, [x0]
  74:	cmp	w8, #0x4
  78:	add	x20, x19, x8, lsl #3
  7c:	b.cc	f0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x94>  // b.lo, b.ul, b.last
  80:	lsr	x8, x8, #2
  84:	add	x21, x8, #0x1
  88:	ldr	x0, [x19]
  8c:	ldr	x8, [x0]
  90:	ldr	x8, [x8, #24]
  94:	blr	x8
  98:	tbnz	w0, #0, 170 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>
  9c:	ldr	x0, [x19, #8]
  a0:	ldr	x8, [x0]
  a4:	ldr	x8, [x8, #24]
  a8:	blr	x8
  ac:	tbnz	w0, #0, 15c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x100>
  b0:	ldr	x0, [x19, #16]
  b4:	ldr	x8, [x0]
  b8:	ldr	x8, [x8, #24]
  bc:	blr	x8
  c0:	tbnz	w0, #0, 164 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x108>
  c4:	ldr	x0, [x19, #24]
  c8:	ldr	x8, [x0]
  cc:	ldr	x8, [x8, #24]
  d0:	blr	x8
  d4:	tbnz	w0, #0, 16c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
  d8:	sub	x21, x21, #0x1
  dc:	cmp	x21, #0x1
  e0:	add	x19, x19, #0x20
  e4:	b.gt	88 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x2c>
  e8:	sub	x8, x20, x19
  ec:	b	f4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x98>
  f0:	lsl	x8, x8, #3
  f4:	asr	x8, x8, #3
  f8:	cmp	x8, #0x1
  fc:	b.eq	140 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xe4>  // b.none
 100:	cmp	x8, #0x2
 104:	b.eq	128 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xcc>  // b.none
 108:	cmp	x8, #0x3
 10c:	b.ne	154 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xf8>  // b.any
 110:	ldr	x0, [x19]
 114:	ldr	x8, [x0]
 118:	ldr	x8, [x8, #24]
 11c:	blr	x8
 120:	tbnz	w0, #0, 170 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>
 124:	add	x19, x19, #0x8
 128:	ldr	x0, [x19]
 12c:	ldr	x8, [x0]
 130:	ldr	x8, [x8, #24]
 134:	blr	x8
 138:	tbnz	w0, #0, 170 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>
 13c:	add	x19, x19, #0x8
 140:	ldr	x0, [x19]
 144:	ldr	x8, [x0]
 148:	ldr	x8, [x8, #24]
 14c:	blr	x8
 150:	tbnz	w0, #0, 170 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>
 154:	mov	x19, x20
 158:	b	170 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>
 15c:	add	x19, x19, #0x8
 160:	b	170 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>
 164:	add	x19, x19, #0x10
 168:	b	170 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>
 16c:	add	x19, x19, #0x18
 170:	cmp	x19, x20
 174:	ldp	x20, x19, [sp, #32]
 178:	ldr	x21, [sp, #16]
 17c:	cset	w0, ne  // ne = any
 180:	ldp	x29, x30, [sp], #48
 184:	ret

0000000000000188 <_ZN4llvm3mca8Pipeline3runEv>:
 188:	sub	sp, sp, #0x30
 18c:	stp	x29, x30, [sp, #16]
 190:	stp	x20, x19, [sp, #32]
 194:	add	x29, sp, #0x10
 198:	ldr	w9, [x0, #8]
 19c:	cbz	w9, 254 <_ZN4llvm3mca8Pipeline3runEv+0xcc>
 1a0:	mov	x20, x0
 1a4:	mov	x19, x8
 1a8:	mov	x0, x20
 1ac:	bl	27c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>
 1b0:	add	x8, sp, #0x8
 1b4:	mov	x0, x20
 1b8:	bl	330 <_ZN4llvm3mca8Pipeline8runCycleEv>
 1bc:	ldr	x8, [sp, #8]
 1c0:	tst	x8, #0xfffffffffffffffe
 1c4:	and	x10, x8, #0xfffffffffffffffe
 1c8:	cset	w9, ne  // ne = any
 1cc:	orr	x9, x10, x9
 1d0:	str	x9, [sp, #8]
 1d4:	cbnz	x10, 218 <_ZN4llvm3mca8Pipeline3runEv+0x90>
 1d8:	cbnz	x9, 24c <_ZN4llvm3mca8Pipeline3runEv+0xc4>
 1dc:	mov	x0, x20
 1e0:	bl	4d4 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>
 1e4:	ldr	w8, [x20, #128]
 1e8:	mov	x0, x20
 1ec:	add	w8, w8, #0x1
 1f0:	str	w8, [x20, #128]
 1f4:	bl	5c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 1f8:	tbnz	w0, #0, 1a8 <_ZN4llvm3mca8Pipeline3runEv+0x20>
 1fc:	ldrb	w8, [x19, #8]
 200:	and	w8, w8, #0xfc
 204:	orr	w8, w8, #0x2
 208:	strb	w8, [x19, #8]
 20c:	ldr	w8, [x20, #128]
 210:	str	w8, [x19]
 214:	b	23c <_ZN4llvm3mca8Pipeline3runEv+0xb4>
 218:	orr	x8, x8, #0x1
 21c:	mov	x1, sp
 220:	mov	x0, x19
 224:	stp	x8, xzr, [sp]
 228:	bl	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 22c:	ldr	x8, [sp]
 230:	cbnz	x8, 274 <_ZN4llvm3mca8Pipeline3runEv+0xec>
 234:	ldr	x8, [sp, #8]
 238:	cbnz	x8, 24c <_ZN4llvm3mca8Pipeline3runEv+0xc4>
 23c:	ldp	x20, x19, [sp, #32]
 240:	ldp	x29, x30, [sp, #16]
 244:	add	sp, sp, #0x30
 248:	ret
 24c:	add	x0, sp, #0x8
 250:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 254:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 258:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 25c:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 260:	add	x0, x0, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x3, x3, #0x0
 26c:	mov	w2, #0x26                  	// #38
 270:	bl	0 <__assert_fail>
 274:	mov	x0, sp
 278:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000000027c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>:
 27c:	stp	x29, x30, [sp, #-32]!
 280:	stp	x20, x19, [sp, #16]
 284:	mov	x29, sp
 288:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 28c:	ldr	x8, [x8]
 290:	mov	x19, x0
 294:	ldrb	w8, [x8]
 298:	cbz	w8, 2f0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x74>
 29c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 2a0:	add	x0, x0, #0x0
 2a4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 2a8:	tbz	w0, #0, 2f0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x74>
 2ac:	bl	0 <_ZN4llvm4dbgsEv>
 2b0:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 2b4:	add	x1, x1, #0x0
 2b8:	mov	w2, #0x12                  	// #18
 2bc:	bl	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 2c0:	ldr	w1, [x19, #128]
 2c4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 2c8:	ldp	x9, x8, [x0, #16]
 2cc:	cmp	x8, x9
 2d0:	b.cs	2e8 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x6c>  // b.hs, b.nlast
 2d4:	add	x9, x8, #0x1
 2d8:	mov	w10, #0xa                   	// #10
 2dc:	str	x9, [x0, #24]
 2e0:	strb	w10, [x8]
 2e4:	b	2f0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x74>
 2e8:	mov	w1, #0xa                   	// #10
 2ec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 2f0:	ldr	x20, [x19, #104]
 2f4:	add	x19, x19, #0x58
 2f8:	cmp	x20, x19
 2fc:	b.eq	324 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xa8>  // b.none
 300:	ldr	x0, [x20, #32]
 304:	ldr	x8, [x0]
 308:	ldr	x8, [x8]
 30c:	blr	x8
 310:	mov	x0, x20
 314:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 318:	mov	x20, x0
 31c:	cmp	x0, x19
 320:	b.ne	300 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x84>  // b.any
 324:	ldp	x20, x19, [sp, #16]
 328:	ldp	x29, x30, [sp], #32
 32c:	ret

0000000000000330 <_ZN4llvm3mca8Pipeline8runCycleEv>:
 330:	sub	sp, sp, #0x50
 334:	stp	x29, x30, [sp, #32]
 338:	stp	x22, x21, [sp, #48]
 33c:	stp	x20, x19, [sp, #64]
 340:	add	x29, sp, #0x20
 344:	mov	x19, x8
 348:	mov	w8, #0x1                   	// #1
 34c:	str	x8, [x19]
 350:	ldr	w9, [x0, #8]
 354:	mov	x20, x0
 358:	cbz	w9, 3b8 <_ZN4llvm3mca8Pipeline8runCycleEv+0x88>
 35c:	ldr	x8, [x20]
 360:	lsl	x21, x9, #3
 364:	sub	x22, x8, #0x8
 368:	mov	w8, #0x1                   	// #1
 36c:	tst	x8, #0xfffffffffffffffe
 370:	and	x9, x8, #0xfffffffffffffffe
 374:	cset	w8, ne  // ne = any
 378:	orr	x8, x9, x8
 37c:	str	x8, [x19]
 380:	cbnz	x9, 3b4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x84>
 384:	ldr	x0, [x22, x21]
 388:	ldr	x8, [x0]
 38c:	ldr	x9, [x8, #32]
 390:	add	x8, sp, #0x10
 394:	blr	x9
 398:	ldr	x8, [x19]
 39c:	cbnz	x8, 4ac <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 3a0:	ldr	x8, [sp, #16]
 3a4:	subs	x21, x21, #0x8
 3a8:	orr	x8, x8, #0x1
 3ac:	str	x8, [x19]
 3b0:	b.ne	36c <_ZN4llvm3mca8Pipeline8runCycleEv+0x3c>  // b.any
 3b4:	ldr	w9, [x20, #8]
 3b8:	str	wzr, [sp, #16]
 3bc:	str	xzr, [sp, #24]
 3c0:	cbz	w9, 4b4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x184>
 3c4:	ldr	x22, [x20]
 3c8:	tst	x8, #0xfffffffffffffffe
 3cc:	and	x10, x8, #0xfffffffffffffffe
 3d0:	cset	w8, ne  // ne = any
 3d4:	ldr	x21, [x22]
 3d8:	orr	x8, x10, x8
 3dc:	str	x8, [x19]
 3e0:	cbz	x10, 428 <_ZN4llvm3mca8Pipeline8runCycleEv+0xf8>
 3e4:	add	x8, x22, w9, uxtw #3
 3e8:	b	450 <_ZN4llvm3mca8Pipeline8runCycleEv+0x120>
 3ec:	ldr	x8, [x21]
 3f0:	add	x1, sp, #0x10
 3f4:	mov	x0, x21
 3f8:	ldr	x9, [x8, #48]
 3fc:	add	x8, sp, #0x8
 400:	blr	x9
 404:	ldr	x8, [x19]
 408:	cbnz	x8, 4ac <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 40c:	ldr	x8, [sp, #8]
 410:	tst	x8, #0xfffffffffffffffe
 414:	and	x9, x8, #0xfffffffffffffffe
 418:	cset	w8, ne  // ne = any
 41c:	orr	x8, x9, x8
 420:	str	x8, [x19]
 424:	cbnz	x9, 440 <_ZN4llvm3mca8Pipeline8runCycleEv+0x110>
 428:	ldr	x8, [x21]
 42c:	add	x1, sp, #0x10
 430:	mov	x0, x21
 434:	ldr	x8, [x8, #16]
 438:	blr	x8
 43c:	tbnz	w0, #0, 3ec <_ZN4llvm3mca8Pipeline8runCycleEv+0xbc>
 440:	ldr	w8, [x20, #8]
 444:	cbz	w8, 498 <_ZN4llvm3mca8Pipeline8runCycleEv+0x168>
 448:	ldr	x22, [x20]
 44c:	add	x8, x22, x8, lsl #3
 450:	sub	x20, x8, #0x8
 454:	ldr	x0, [x22]
 458:	ldr	x8, [x0]
 45c:	ldr	x9, [x8, #40]
 460:	add	x8, sp, #0x8
 464:	blr	x9
 468:	ldr	x8, [x19]
 46c:	cbnz	x8, 4ac <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 470:	ldr	x8, [sp, #8]
 474:	tst	x8, #0xfffffffffffffffe
 478:	and	x9, x8, #0xfffffffffffffffe
 47c:	cset	w8, ne  // ne = any
 480:	orr	x8, x9, x8
 484:	str	x8, [x19]
 488:	cbnz	x9, 498 <_ZN4llvm3mca8Pipeline8runCycleEv+0x168>
 48c:	cmp	x20, x22
 490:	add	x22, x22, #0x8
 494:	b.ne	454 <_ZN4llvm3mca8Pipeline8runCycleEv+0x124>  // b.any
 498:	ldp	x20, x19, [sp, #64]
 49c:	ldp	x22, x21, [sp, #48]
 4a0:	ldp	x29, x30, [sp, #32]
 4a4:	add	sp, sp, #0x50
 4a8:	ret
 4ac:	mov	x0, x19
 4b0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4b4:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 4b8:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 4bc:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 4c0:	add	x0, x0, #0x0
 4c4:	add	x1, x1, #0x0
 4c8:	add	x3, x3, #0x0
 4cc:	mov	w2, #0x95                  	// #149
 4d0:	bl	0 <__assert_fail>

00000000000004d4 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>:
 4d4:	stp	x29, x30, [sp, #-32]!
 4d8:	stp	x20, x19, [sp, #16]
 4dc:	mov	x29, sp
 4e0:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 4e4:	ldr	x8, [x8]
 4e8:	mov	x19, x0
 4ec:	ldrb	w8, [x8]
 4f0:	cbz	w8, 530 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x5c>
 4f4:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 4f8:	add	x0, x0, #0x0
 4fc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 500:	tbz	w0, #0, 530 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x5c>
 504:	bl	0 <_ZN4llvm4dbgsEv>
 508:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 50c:	add	x1, x1, #0x0
 510:	mov	w2, #0xf                   	// #15
 514:	bl	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 518:	ldr	w1, [x19, #128]
 51c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 520:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 524:	add	x1, x1, #0x0
 528:	mov	w2, #0x1                   	// #1
 52c:	bl	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 530:	ldr	x20, [x19, #104]
 534:	add	x19, x19, #0x58
 538:	cmp	x20, x19
 53c:	b.eq	564 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x90>  // b.none
 540:	ldr	x0, [x20, #32]
 544:	ldr	x8, [x0]
 548:	ldr	x8, [x8, #8]
 54c:	blr	x8
 550:	mov	x0, x20
 554:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 558:	mov	x20, x0
 55c:	cmp	x0, x19
 560:	b.ne	540 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x6c>  // b.any
 564:	ldp	x20, x19, [sp, #16]
 568:	ldp	x29, x30, [sp], #32
 56c:	ret

0000000000000570 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>:
 570:	stp	x29, x30, [sp, #-16]!
 574:	mov	x29, sp
 578:	ldr	x8, [x1]
 57c:	cbz	x8, 5a8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x38>
 580:	ldr	w9, [x0, #8]
 584:	cbz	w9, 5a0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x30>
 588:	ldr	x10, [x0]
 58c:	add	x9, x10, x9, lsl #3
 590:	ldur	x9, [x9, #-8]
 594:	ldr	x10, [x9, #8]
 598:	cbnz	x10, 5c8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x58>
 59c:	str	x8, [x9, #8]
 5a0:	ldp	x29, x30, [sp], #16
 5a4:	b	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5a8:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5ac:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5b0:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5b4:	add	x0, x0, #0x0
 5b8:	add	x1, x1, #0x0
 5bc:	add	x3, x3, #0x0
 5c0:	mov	w2, #0x4c                  	// #76
 5c4:	bl	0 <__assert_fail>
 5c8:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5cc:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5d0:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5d4:	add	x0, x0, #0x0
 5d8:	add	x1, x1, #0x0
 5dc:	add	x3, x3, #0x0
 5e0:	mov	w2, #0x3a                  	// #58
 5e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIjEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #8]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #8]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x4c>  // b.hs, b.nlast
  20:	ldr	x10, [x19]
  24:	ldr	x11, [x20]
  28:	cmp	w8, w9
  2c:	str	xzr, [x20]
  30:	str	x11, [x10, w8, uxtw #3]
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  58:	ldp	w8, w9, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>
  1c:	mov	x2, x0
  20:	cbz	x1, 4c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x4c>
  24:	mov	x8, x1
  28:	add	x4, sp, #0x8
  2c:	mov	x0, x20
  30:	mov	x1, x2
  34:	mov	x2, x8
  38:	mov	x3, x19
  3c:	str	x20, [sp, #8]
  40:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>
  44:	mov	x2, x0
  48:	mov	w1, #0x1                   	// #1
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x2
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0, #16]
  10:	mov	x20, x1
  14:	cbz	x9, 4c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x4c>
  18:	ldr	x8, [x20]
  1c:	ldr	x10, [x9, #32]
  20:	mov	x19, x9
  24:	add	x9, x9, #0x10
  28:	add	x11, x19, #0x18
  2c:	cmp	x8, x10
  30:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  34:	ldr	x9, [x9]
  38:	cbnz	x9, 1c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x1c>
  3c:	cmp	x8, x10
  40:	mov	x8, x19
  44:	b.cc	50 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x50>  // b.lo, b.ul, b.last
  48:	b	68 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x68>
  4c:	add	x19, x0, #0x8
  50:	ldr	x8, [x0, #24]
  54:	cmp	x8, x19
  58:	b.eq	80 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x80>  // b.none
  5c:	mov	x0, x19
  60:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  64:	mov	x8, x0
  68:	ldr	x9, [x8, #32]
  6c:	ldr	x10, [x20]
  70:	cmp	x9, x10
  74:	csel	x0, xzr, x8, cc  // cc = lo, ul, last
  78:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
  7c:	b	84 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x84>
  80:	mov	x0, xzr
  84:	mov	x1, x19
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x3
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	cbz	x1, 2c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x2c>
  24:	mov	w22, #0x1                   	// #1
  28:	b	48 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x48>
  2c:	add	x8, x19, #0x8
  30:	cmp	x8, x20
  34:	b.eq	24 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x24>  // b.none
  38:	ldr	x8, [x21]
  3c:	ldr	x9, [x20, #32]
  40:	cmp	x8, x9
  44:	cset	w22, cc  // cc = lo, ul, last
  48:	mov	w0, #0x28                  	// #40
  4c:	bl	0 <_Znwm>
  50:	ldr	x8, [x21]
  54:	mov	x23, x0
  58:	add	x3, x19, #0x8
  5c:	mov	x1, x23
  60:	str	x8, [x0, #32]
  64:	mov	w0, w22
  68:	mov	x2, x20
  6c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  70:	ldr	x8, [x19, #40]
  74:	mov	x0, x23
  78:	ldr	x23, [sp, #16]
  7c:	add	x8, x8, #0x1
  80:	str	x8, [x19, #40]
  84:	ldp	x20, x19, [sp, #48]
  88:	ldp	x22, x21, [sp, #32]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 114 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x114>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 114 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x114>
  ec:	sub	x23, x0, #0x8
  f0:	ldr	x0, [x23, x22]
  f4:	cbz	x0, 104 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x104>
  f8:	ldr	x8, [x0]
  fc:	ldr	x8, [x8, #8]
 100:	blr	x8
 104:	str	xzr, [x23, x22]
 108:	subs	x22, x22, #0x8
 10c:	b.ne	f0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xf0>  // b.any
 110:	ldr	x0, [x19]
 114:	add	x8, x19, #0x10
 118:	cmp	x0, x8
 11c:	b.eq	124 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x124>  // b.none
 120:	bl	0 <free>
 124:	str	x20, [x19]
 128:	str	w21, [x19, #12]
 12c:	ldp	x20, x19, [sp, #48]
 130:	ldp	x22, x21, [sp, #32]
 134:	ldr	x23, [sp, #16]
 138:	ldp	x29, x30, [sp], #64
 13c:	ret

DispatchStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>:
   0:	str	xzr, [x0, #8]
   4:	adrp	x9, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
   8:	ldr	x9, [x9]
   c:	mov	x8, x0
  10:	str	wzr, [x8, #24]!
  14:	stp	w3, w3, [x0, #64]
  18:	add	x9, x9, #0x10
  1c:	str	wzr, [x0, #72]
  20:	str	wzr, [x0, #80]
  24:	stp	xzr, x1, [x0, #88]
  28:	stp	xzr, x8, [x0, #32]
  2c:	stp	x8, xzr, [x0, #48]
  30:	str	x9, [x0]
  34:	stp	x4, x5, [x0, #104]
  38:	cbz	w3, 40 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE+0x40>
  3c:	ret
  40:	ldr	x8, [x1, #152]
  44:	ldr	w8, [x8]
  48:	str	w8, [x0, #64]
  4c:	ret

0000000000000050 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>:
  50:	sub	sp, sp, #0x70
  54:	stp	x29, x30, [sp, #48]
  58:	stp	x24, x23, [sp, #64]
  5c:	stp	x22, x21, [sp, #80]
  60:	stp	x20, x19, [sp, #96]
  64:	add	x29, sp, #0x30
  68:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
  6c:	ldr	x8, [x8]
  70:	mov	w19, w4
  74:	mov	x20, x3
  78:	mov	x22, x2
  7c:	ldrb	w8, [x8]
  80:	mov	x23, x1
  84:	mov	x21, x0
  88:	cbz	w8, e8 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x98>
  8c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  90:	add	x0, x0, #0x0
  94:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  98:	tbz	w0, #0, e8 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x98>
  9c:	bl	0 <_ZN4llvm4dbgsEv>
  a0:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  a4:	add	x1, x1, #0x0
  a8:	mov	w2, #0x1d                  	// #29
  ac:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  b0:	ldr	w1, [x23]
  b4:	mov	x24, x0
  b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  bc:	ldp	x9, x8, [x24, #16]
  c0:	cmp	x8, x9
  c4:	b.cs	dc <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x8c>  // b.hs, b.nlast
  c8:	add	x9, x8, #0x1
  cc:	mov	w10, #0xa                   	// #10
  d0:	str	x9, [x24, #24]
  d4:	strb	w10, [x8]
  d8:	b	e8 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x98>
  dc:	mov	w1, #0xa                   	// #10
  e0:	mov	x0, x24
  e4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
  e8:	mov	w8, #0x6                   	// #6
  ec:	add	x1, sp, #0x8
  f0:	mov	x0, x21
  f4:	stp	x23, x22, [sp, #16]
  f8:	str	x20, [sp, #32]
  fc:	str	w8, [sp, #8]
 100:	str	w19, [sp, #40]
 104:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 108:	ldp	x20, x19, [sp, #96]
 10c:	ldp	x22, x21, [sp, #80]
 110:	ldp	x24, x23, [sp, #64]
 114:	ldp	x29, x30, [sp, #48]
 118:	add	sp, sp, #0x70
 11c:	ret

0000000000000120 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>:
 120:	sub	sp, sp, #0x60
 124:	stp	x29, x30, [sp, #48]
 128:	stp	x22, x21, [sp, #64]
 12c:	stp	x20, x19, [sp, #80]
 130:	add	x29, sp, #0x30
 134:	adrp	x8, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 138:	ldr	d0, [x8]
 13c:	add	x8, sp, #0x18
 140:	mov	x19, x1
 144:	add	x1, x8, #0x10
 148:	str	x1, [sp, #24]
 14c:	str	d0, [sp, #32]
 150:	ldr	x9, [x19, #8]
 154:	mov	x20, x0
 158:	ldr	w8, [x9, #24]
 15c:	cbz	w8, 198 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x78>
 160:	ldr	x9, [x9, #16]
 164:	add	x8, x8, x8, lsl #4
 168:	lsl	x21, x8, #3
 16c:	add	x22, x9, #0xc
 170:	ldrh	w8, [x22], #136
 174:	add	x0, sp, #0x18
 178:	add	x1, sp, #0x8
 17c:	strh	w8, [sp, #8]
 180:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 184:	subs	x21, x21, #0x88
 188:	b.ne	170 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x50>  // b.any
 18c:	ldr	x1, [sp, #24]
 190:	ldr	w2, [sp, #32]
 194:	b	19c <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x7c>
 198:	mov	x2, xzr
 19c:	ldr	x0, [x20, #112]
 1a0:	bl	0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>
 1a4:	mov	w21, #0x1                   	// #1
 1a8:	cbz	w0, 1c4 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xa4>
 1ac:	add	x1, sp, #0x8
 1b0:	mov	x0, x20
 1b4:	str	w21, [sp, #8]
 1b8:	str	x19, [sp, #16]
 1bc:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 1c0:	mov	w21, wzr
 1c4:	ldr	x0, [sp, #24]
 1c8:	add	x8, sp, #0x18
 1cc:	add	x8, x8, #0x10
 1d0:	cmp	x0, x8
 1d4:	b.eq	1dc <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xbc>  // b.none
 1d8:	bl	0 <free>
 1dc:	mov	w0, w21
 1e0:	ldp	x20, x19, [sp, #80]
 1e4:	ldp	x22, x21, [sp, #64]
 1e8:	ldp	x29, x30, [sp, #48]
 1ec:	add	sp, sp, #0x60
 1f0:	ret

00000000000001f4 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>:
 1f4:	sub	sp, sp, #0x20
 1f8:	stp	x29, x30, [sp, #16]
 1fc:	add	x29, sp, #0x10
 200:	ldr	x8, [x1, #8]
 204:	ldr	x9, [x0, #104]
 208:	ldr	x8, [x8]
 20c:	ldp	w10, w9, [x9, #16]
 210:	ldr	w8, [x8, #316]
 214:	cmp	w10, w8
 218:	csel	w8, w10, w8, cc  // cc = lo, ul, last
 21c:	cmp	w8, #0x0
 220:	csinc	w8, w8, wzr, ne  // ne = any
 224:	cmp	w9, w8
 228:	b.cs	248 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x54>  // b.hs, b.nlast
 22c:	mov	w8, #0x2                   	// #2
 230:	str	x1, [sp, #8]
 234:	mov	x1, sp
 238:	str	w8, [sp]
 23c:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 240:	mov	w0, wzr
 244:	b	24c <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x58>
 248:	mov	w0, #0x1                   	// #1
 24c:	ldp	x29, x30, [sp, #16]
 250:	add	sp, sp, #0x20
 254:	ret

0000000000000258 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>:
 258:	stp	x29, x30, [sp, #-48]!
 25c:	str	x21, [sp, #16]
 260:	stp	x20, x19, [sp, #32]
 264:	mov	x29, sp
 268:	mov	x19, x1
 26c:	mov	x20, x0
 270:	bl	1f4 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>
 274:	mov	w21, w0
 278:	mov	x0, x20
 27c:	mov	x1, x19
 280:	bl	120 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 284:	ldr	x8, [x20, #8]
 288:	and	w20, w21, w0
 28c:	cbz	x8, 2a8 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x50>
 290:	ldr	x9, [x8]
 294:	mov	x0, x8
 298:	mov	x1, x19
 29c:	ldr	x9, [x9, #16]
 2a0:	blr	x9
 2a4:	b	2ac <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x54>
 2a8:	mov	w0, wzr
 2ac:	and	w8, w20, w0
 2b0:	ldp	x20, x19, [sp, #32]
 2b4:	ldr	x21, [sp, #16]
 2b8:	and	w0, w8, #0x1
 2bc:	ldp	x29, x30, [sp], #48
 2c0:	ret

00000000000002c4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>:
 2c4:	sub	sp, sp, #0x90
 2c8:	stp	x29, x30, [sp, #64]
 2cc:	stp	x26, x25, [sp, #80]
 2d0:	stp	x24, x23, [sp, #96]
 2d4:	stp	x22, x21, [sp, #112]
 2d8:	stp	x20, x19, [sp, #128]
 2dc:	add	x29, sp, #0x40
 2e0:	stp	x1, x2, [x29, #-16]
 2e4:	ldr	w9, [x0, #72]
 2e8:	cbnz	w9, 4b8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1f4>
 2ec:	mov	x20, x8
 2f0:	ldr	x8, [x2]
 2f4:	ldp	w11, w10, [x0, #64]
 2f8:	mov	x21, x2
 2fc:	mov	x22, x1
 300:	ldr	w24, [x8, #316]
 304:	mov	x19, x0
 308:	subs	w9, w24, w11
 30c:	b.ls	328 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x64>  // b.plast
 310:	cmp	w10, w11
 314:	b.ne	518 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x254>  // b.any
 318:	stp	wzr, w9, [x19, #68]
 31c:	str	w22, [x19, #80]
 320:	str	x21, [x19, #88]
 324:	b	334 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x70>
 328:	subs	w9, w10, w24
 32c:	b.cc	538 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x274>  // b.lo, b.ul, b.last
 330:	str	w9, [x19, #68]
 334:	ldrb	w8, [x8, #328]
 338:	cbz	w8, 340 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x7c>
 33c:	str	wzr, [x19, #68]
 340:	ldrb	w8, [x21, #8]
 344:	cbz	w8, 37c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xb8>
 348:	ldr	w8, [x21, #24]
 34c:	cmp	w8, #0x1
 350:	b.ne	4d8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x214>  // b.any
 354:	ldr	w8, [x21, #584]
 358:	cmp	w8, #0x1
 35c:	b.ne	4f8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x234>  // b.any
 360:	ldr	x0, [x19, #112]
 364:	ldr	x1, [x21, #16]
 368:	ldr	x2, [x21, #576]
 36c:	bl	0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>
 370:	tbz	w0, #0, 37c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xb8>
 374:	mov	w8, #0x1                   	// #1
 378:	strb	w8, [x21, #840]
 37c:	ldrb	w8, [x21, #840]
 380:	cbnz	w8, 3b4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xf0>
 384:	ldr	w8, [x21, #584]
 388:	cbz	w8, 3b4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xf0>
 38c:	ldr	x23, [x21, #576]
 390:	add	x8, x8, x8, lsl #1
 394:	lsl	x25, x8, #4
 398:	ldr	x0, [x19, #112]
 39c:	ldr	x2, [x19, #96]
 3a0:	mov	x1, x23
 3a4:	bl	0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>
 3a8:	subs	x25, x25, #0x30
 3ac:	add	x23, x23, #0x30
 3b0:	b.ne	398 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xd4>  // b.any
 3b4:	ldr	x8, [x19, #112]
 3b8:	adrp	x9, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 3bc:	ldr	d0, [x9]
 3c0:	add	x0, sp, #0x10
 3c4:	ldr	w1, [x8, #24]
 3c8:	add	x8, sp, #0x10
 3cc:	add	x25, x8, #0x10
 3d0:	add	x2, sp, #0xc
 3d4:	str	wzr, [sp, #12]
 3d8:	str	x25, [sp, #16]
 3dc:	str	d0, [sp, #24]
 3e0:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 3e4:	ldr	w26, [x21, #24]
 3e8:	cbz	w26, 444 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x180>
 3ec:	ldr	x23, [x21, #16]
 3f0:	ldr	x0, [x19, #112]
 3f4:	ldr	x3, [sp, #16]
 3f8:	ldr	w4, [sp, #24]
 3fc:	and	x1, x22, #0xffffffff
 400:	mov	x2, x23
 404:	bl	0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>
 408:	cmp	w26, #0x1
 40c:	b.eq	444 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x180>  // b.none
 410:	mov	w8, #0x88                  	// #136
 414:	mul	x8, x26, x8
 418:	add	x22, x23, #0x88
 41c:	sub	x23, x8, #0x88
 420:	ldur	w1, [x29, #-16]
 424:	ldr	x0, [x19, #112]
 428:	ldr	x3, [sp, #16]
 42c:	ldr	w4, [sp, #24]
 430:	mov	x2, x22
 434:	bl	0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>
 438:	subs	x23, x23, #0x88
 43c:	add	x22, x22, #0x88
 440:	b.ne	420 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x15c>  // b.any
 444:	ldr	x0, [x19, #104]
 448:	sub	x1, x29, #0x10
 44c:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 450:	mov	w1, w0
 454:	mov	x0, x21
 458:	bl	0 <_ZN4llvm3mca11Instruction8dispatchEj>
 45c:	ldr	w8, [x19, #64]
 460:	ldr	x2, [sp, #16]
 464:	ldr	w3, [sp, #24]
 468:	sub	x1, x29, #0x10
 46c:	cmp	w24, w8
 470:	csel	w4, w24, w8, cc  // cc = lo, ul, last
 474:	mov	x0, x19
 478:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 47c:	sub	x1, x29, #0x10
 480:	mov	x8, x20
 484:	mov	x0, x19
 488:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 48c:	ldr	x0, [sp, #16]
 490:	cmp	x0, x25
 494:	b.eq	49c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1d8>  // b.none
 498:	bl	0 <free>
 49c:	ldp	x20, x19, [sp, #128]
 4a0:	ldp	x22, x21, [sp, #112]
 4a4:	ldp	x24, x23, [sp, #96]
 4a8:	ldp	x26, x25, [sp, #80]
 4ac:	ldp	x29, x30, [sp, #64]
 4b0:	add	sp, sp, #0x90
 4b4:	ret
 4b8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4bc:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4c0:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4c4:	add	x0, x0, #0x0
 4c8:	add	x1, x1, #0x0
 4cc:	add	x3, x3, #0x0
 4d0:	mov	w2, #0x4f                  	// #79
 4d4:	bl	0 <__assert_fail>
 4d8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4dc:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4e0:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4e4:	add	x0, x0, #0x0
 4e8:	add	x1, x1, #0x0
 4ec:	add	x3, x3, #0x0
 4f0:	mov	w2, #0x63                  	// #99
 4f4:	bl	0 <__assert_fail>
 4f8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4fc:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 500:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 504:	add	x0, x0, #0x0
 508:	add	x1, x1, #0x0
 50c:	add	x3, x3, #0x0
 510:	mov	w2, #0x64                  	// #100
 514:	bl	0 <__assert_fail>
 518:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 51c:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 520:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 524:	add	x0, x0, #0x0
 528:	add	x1, x1, #0x0
 52c:	add	x3, x3, #0x0
 530:	mov	w2, #0x54                  	// #84
 534:	bl	0 <__assert_fail>
 538:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 53c:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 540:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 544:	add	x0, x0, #0x0
 548:	add	x1, x1, #0x0
 54c:	add	x3, x3, #0x0
 550:	mov	w2, #0x59                  	// #89
 554:	bl	0 <__assert_fail>

0000000000000558 <_ZN4llvm3mca13DispatchStage10cycleStartEv>:
 558:	sub	sp, sp, #0x70
 55c:	stp	x29, x30, [sp, #48]
 560:	str	x23, [sp, #64]
 564:	stp	x22, x21, [sp, #80]
 568:	stp	x20, x19, [sp, #96]
 56c:	add	x29, sp, #0x30
 570:	mov	x20, x0
 574:	ldr	x0, [x0, #112]
 578:	mov	x19, x8
 57c:	bl	0 <_ZN4llvm3mca12RegisterFile10cycleStartEv>
 580:	ldr	w9, [x20, #72]
 584:	ldr	w8, [x20, #64]
 588:	cbz	w9, 620 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xc8>
 58c:	subs	w10, w8, w9
 590:	ldr	x11, [x20, #88]
 594:	csel	w10, wzr, w10, cc  // cc = lo, ul, last
 598:	sub	w21, w8, w10
 59c:	sub	w8, w9, w21
 5a0:	stp	w10, w8, [x20, #68]
 5a4:	cbz	x11, 644 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xec>
 5a8:	ldr	x8, [x20, #112]
 5ac:	adrp	x9, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 5b0:	ldr	d0, [x9]
 5b4:	mov	x0, sp
 5b8:	ldr	w1, [x8, #24]
 5bc:	mov	x8, sp
 5c0:	add	x23, x8, #0x10
 5c4:	add	x2, x29, #0x1c
 5c8:	add	x22, x20, #0x50
 5cc:	str	wzr, [x29, #28]
 5d0:	str	x23, [sp]
 5d4:	str	d0, [sp, #8]
 5d8:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 5dc:	ldr	x2, [sp]
 5e0:	ldr	w3, [sp, #8]
 5e4:	mov	x0, x20
 5e8:	mov	x1, x22
 5ec:	mov	w4, w21
 5f0:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 5f4:	ldr	w8, [x20, #72]
 5f8:	cbnz	w8, 604 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xac>
 5fc:	str	wzr, [x20, #80]
 600:	str	xzr, [x20, #88]
 604:	ldr	x0, [sp]
 608:	mov	w8, #0x1                   	// #1
 60c:	str	x8, [x19]
 610:	cmp	x0, x23
 614:	b.eq	62c <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xd4>  // b.none
 618:	bl	0 <free>
 61c:	b	62c <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xd4>
 620:	str	w8, [x20, #68]
 624:	mov	w8, #0x1                   	// #1
 628:	str	x8, [x19]
 62c:	ldp	x20, x19, [sp, #96]
 630:	ldp	x22, x21, [sp, #80]
 634:	ldr	x23, [sp, #64]
 638:	ldp	x29, x30, [sp, #48]
 63c:	add	sp, sp, #0x70
 640:	ret
 644:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 648:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 64c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 650:	add	x0, x0, #0x0
 654:	add	x1, x1, #0x0
 658:	add	x3, x3, #0x0
 65c:	mov	w2, #0x95                  	// #149
 660:	bl	0 <__assert_fail>

0000000000000664 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE>:
 664:	ldr	x8, [x1, #8]
 668:	ldp	w9, w10, [x0, #64]
 66c:	ldr	x8, [x8]
 670:	ldr	w11, [x8, #316]
 674:	cmp	w9, w11
 678:	csel	w11, w9, w11, cc  // cc = lo, ul, last
 67c:	cmp	w11, w10
 680:	b.hi	694 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x30>  // b.pmore
 684:	cmp	w10, w9
 688:	b.eq	69c <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x38>  // b.none
 68c:	ldrb	w8, [x8, #327]
 690:	cbz	w8, 69c <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x38>
 694:	mov	w0, wzr
 698:	ret
 69c:	b	258 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>

00000000000006a0 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE>:
 6a0:	stp	x29, x30, [sp, #-48]!
 6a4:	str	x21, [sp, #16]
 6a8:	stp	x20, x19, [sp, #32]
 6ac:	mov	x29, sp
 6b0:	mov	x20, x1
 6b4:	mov	x19, x0
 6b8:	mov	x21, x8
 6bc:	bl	258 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 6c0:	tbz	w0, #0, 6e0 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x40>
 6c4:	ldp	x1, x2, [x20]
 6c8:	mov	x8, x21
 6cc:	mov	x0, x19
 6d0:	ldp	x20, x19, [sp, #32]
 6d4:	ldr	x21, [sp, #16]
 6d8:	ldp	x29, x30, [sp], #48
 6dc:	b	2c4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>
 6e0:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6e4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6e8:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6ec:	add	x0, x0, #0x0
 6f0:	add	x1, x1, #0x0
 6f4:	add	x3, x3, #0x0
 6f8:	mov	w2, #0xb0                  	// #176
 6fc:	bl	0 <__assert_fail>

0000000000000700 <_ZNK4llvm3mca13DispatchStage4dumpEv>:
 700:	stp	x29, x30, [sp, #-32]!
 704:	str	x19, [sp, #16]
 708:	mov	x29, sp
 70c:	mov	x19, x0
 710:	ldr	x0, [x0, #112]
 714:	bl	0 <_ZNK4llvm3mca12RegisterFile4dumpEv>
 718:	ldr	x0, [x19, #104]
 71c:	ldr	x19, [sp, #16]
 720:	ldp	x29, x30, [sp], #32
 724:	b	0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #40]
  14:	add	x21, x0, #0x18
  18:	cmp	x20, x21
  1c:	b.eq	4c <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x4c>  // b.none
  20:	mov	x19, x1
  24:	ldr	x0, [x20, #32]
  28:	mov	x1, x19
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x20
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x20, x0
  44:	cmp	x0, x21
  48:	b.ne	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x24>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	50 <_ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_+0x50>  // b.hs, b.nlast
  20:	ldr	x10, [x19]
  24:	ldrh	w11, [x20]
  28:	cmp	w8, w9
  2c:	strh	w11, [x10, w8, uxtw #1]
  30:	b.cs	6c <_ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_+0x6c>  // b.hs, b.nlast
  34:	add	w8, w8, #0x1
  38:	str	w8, [x19, #8]
  3c:	ldp	x20, x19, [sp, #16]
  40:	add	x9, x10, w8, uxtw #1
  44:	sub	x0, x9, #0x2
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	add	x1, x19, #0x10
  54:	mov	w3, #0x2                   	// #2
  58:	mov	x0, x19
  5c:	mov	x2, xzr
  60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  64:	ldp	w8, w9, [x19, #8]
  68:	b	20 <_ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_+0x20>
  6c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_>
  70:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_>
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplItE12emplace_backIJtEEERtDpOT_>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #40]
  14:	add	x21, x0, #0x18
  18:	cmp	x20, x21
  1c:	b.eq	4c <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_+0x4c>  // b.none
  20:	mov	x19, x1
  24:	ldr	x0, [x20, #32]
  28:	mov	x1, x19
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #24]
  34:	blr	x8
  38:	mov	x0, x20
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x20, x0
  44:	cmp	x0, x21
  48:	b.ne	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_+0x24>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x0, [x0, #8]
  18:	cbz	x0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  1c:	mov	x20, x8
  20:	ldr	x8, [x0]
  24:	mov	x19, x1
  28:	ldr	x8, [x8, #16]
  2c:	blr	x8
  30:	tbz	w0, #0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  34:	ldr	x0, [x21, #8]
  38:	mov	x1, x19
  3c:	ldr	x21, [sp, #16]
  40:	ldr	x8, [x0]
  44:	ldr	x2, [x8, #48]
  48:	mov	x8, x20
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	br	x2
  58:	adrp	x0, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  5c:	adrp	x1, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  60:	adrp	x3, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x47                  	// #71
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca13DispatchStageD0Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6assignEmRKj:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x21, x1
  20:	cmp	x8, x1
  24:	str	wzr, [x0, #8]
  28:	b.cs	44 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x44>  // b.hs, b.nlast
  2c:	add	x1, x20, #0x10
  30:	mov	w3, #0x4                   	// #4
  34:	mov	x0, x20
  38:	mov	x2, x21
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x20, #12]
  44:	cmp	x8, x21
  48:	b.cc	80 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x80>  // b.lo, b.ul, b.last
  4c:	ands	x10, x21, #0xffffffff
  50:	str	w21, [x20, #8]
  54:	b.eq	70 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x70>  // b.none
  58:	ldr	x8, [x20]
  5c:	ldr	w9, [x19]
  60:	lsl	x10, x10, #2
  64:	subs	x10, x10, #0x4
  68:	str	w9, [x8], #4
  6c:	b.ne	64 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x64>  // b.any
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

EntryStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>:
   0:	ldr	x8, [x0, #72]
   4:	cmp	x8, #0x0
   8:	cset	w0, ne  // ne = any
   c:	ret

0000000000000010 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE>:
  10:	ldr	x8, [x0, #72]
  14:	cbz	x8, 34 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x24>
  18:	ldr	x8, [x0, #8]
  1c:	cbz	x8, 34 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x24>
  20:	ldr	x9, [x8]
  24:	add	x1, x0, #0x40
  28:	mov	x0, x8
  2c:	ldr	x2, [x9, #16]
  30:	br	x2
  34:	mov	w0, wzr
  38:	ret

000000000000003c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>:
  3c:	str	d8, [sp, #-64]!
  40:	stp	x29, x30, [sp, #16]
  44:	stp	x22, x21, [sp, #32]
  48:	stp	x20, x19, [sp, #48]
  4c:	mov	x29, sp
  50:	ldr	x8, [x0, #72]
  54:	cbnz	x8, 14c <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x110>
  58:	mov	x19, x0
  5c:	ldr	x0, [x0, #224]
  60:	ldp	w10, w8, [x0, #16]
  64:	ldr	x9, [x0, #8]
  68:	mul	x8, x9, x8
  6c:	cmp	x8, x10
  70:	b.ls	138 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xfc>  // b.plast
  74:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  78:	mov	x20, x0
  7c:	mov	w0, #0x350                 	// #848
  80:	mov	x22, x1
  84:	bl	0 <_Znwm>
  88:	adrp	x11, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  8c:	ldr	x8, [x22]
  90:	ldrb	w9, [x22, #8]
  94:	ldr	d8, [x11]
  98:	mov	x21, x0
  9c:	add	x10, x0, #0x20
  a0:	strb	w9, [x0, #8]
  a4:	str	x8, [x0]
  a8:	str	x10, [x0, #16]!
  ac:	str	d8, [x21, #24]
  b0:	ldr	w8, [x22, #24]
  b4:	cbz	w8, c0 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x84>
  b8:	add	x1, x22, #0x10
  bc:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  c0:	add	x8, x21, #0x250
  c4:	str	x8, [x21, #576]
  c8:	str	d8, [x21, #584]
  cc:	ldr	w8, [x22, #584]
  d0:	cbz	w8, e0 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xa4>
  d4:	add	x0, x21, #0x240
  d8:	add	x1, x22, #0x240
  dc:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  e0:	add	x9, x22, #0x310
  e4:	ldp	q0, q1, [x22, #784]
  e8:	ldr	q2, [x22, #816]
  ec:	ldur	q3, [x9, #41]
  f0:	add	x8, x21, #0x310
  f4:	add	x0, x19, #0x50
  f8:	add	x1, x29, #0x8
  fc:	str	x21, [x29, #8]
 100:	stp	q0, q1, [x21, #784]
 104:	stur	q3, [x8, #41]
 108:	str	q2, [x21, #816]
 10c:	str	w20, [x19, #64]
 110:	str	x21, [x19, #72]
 114:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 118:	ldr	x8, [x19, #224]
 11c:	ldr	w9, [x8, #16]
 120:	add	w9, w9, #0x1
 124:	str	w9, [x8, #16]
 128:	ldr	x1, [x29, #8]
 12c:	cbz	x1, 138 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xfc>
 130:	add	x0, x29, #0x8
 134:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 138:	ldp	x20, x19, [sp, #48]
 13c:	ldp	x22, x21, [sp, #32]
 140:	ldp	x29, x30, [sp, #16]
 144:	ldr	d8, [sp], #64
 148:	ret
 14c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 150:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 154:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x20                  	// #32
 168:	bl	0 <__assert_fail>

000000000000016c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE>:
 16c:	stp	x29, x30, [sp, #-32]!
 170:	stp	x20, x19, [sp, #16]
 174:	mov	x29, sp
 178:	ldr	x9, [x0, #72]
 17c:	cbz	x9, 1d0 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x64>
 180:	add	x1, x0, #0x40
 184:	mov	x20, x0
 188:	mov	x19, x8
 18c:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 190:	ldr	x8, [x19]
 194:	tst	x8, #0xfffffffffffffffe
 198:	and	x9, x8, #0xfffffffffffffffe
 19c:	cset	w8, ne  // ne = any
 1a0:	orr	x8, x9, x8
 1a4:	str	x8, [x19]
 1a8:	cbnz	x9, 1c4 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x58>
 1ac:	cbnz	x8, 1f0 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x84>
 1b0:	mov	x0, x20
 1b4:	str	xzr, [x20, #72]
 1b8:	bl	3c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 1bc:	mov	w8, #0x1                   	// #1
 1c0:	str	x8, [x19]
 1c4:	ldp	x20, x19, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #32
 1cc:	ret
 1d0:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 1d4:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 1d8:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 1dc:	add	x0, x0, #0x0
 1e0:	add	x1, x1, #0x0
 1e4:	add	x3, x3, #0x0
 1e8:	mov	w2, #0x2b                  	// #43
 1ec:	bl	0 <__assert_fail>
 1f0:	mov	x0, x19
 1f4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000001f8 <_ZN4llvm3mca10EntryStage10cycleStartEv>:
 1f8:	stp	x29, x30, [sp, #-32]!
 1fc:	str	x19, [sp, #16]
 200:	mov	x29, sp
 204:	ldr	x9, [x0, #72]
 208:	mov	x19, x8
 20c:	cbnz	x9, 214 <_ZN4llvm3mca10EntryStage10cycleStartEv+0x1c>
 210:	bl	3c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 214:	mov	w8, #0x1                   	// #1
 218:	str	x8, [x19]
 21c:	ldr	x19, [sp, #16]
 220:	ldp	x29, x30, [sp], #32
 224:	ret

0000000000000228 <_ZN4llvm3mca10EntryStage8cycleEndEv>:
 228:	stp	x29, x30, [sp, #-32]!
 22c:	stp	x20, x19, [sp, #16]
 230:	mov	x29, sp
 234:	ldr	w10, [x0, #232]
 238:	ldr	w9, [x0, #88]
 23c:	cmp	w9, w10
 240:	b.ls	36c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x144>  // b.plast
 244:	mov	x19, x0
 248:	add	x0, x0, #0x50
 24c:	ldr	x1, [x0]
 250:	mov	x20, x8
 254:	add	x2, x1, x10, lsl #3
 258:	add	x8, x1, x9, lsl #3
 25c:	sub	x10, x8, x2
 260:	cmp	x10, #0x20
 264:	b.lt	2c4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x9c>  // b.tstop
 268:	lsr	x10, x10, #5
 26c:	add	x10, x10, #0x1
 270:	ldr	x11, [x2]
 274:	ldr	w11, [x11, #784]
 278:	cmp	w11, #0x6
 27c:	b.ne	334 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 280:	ldr	x11, [x2, #8]
 284:	ldr	w11, [x11, #784]
 288:	cmp	w11, #0x6
 28c:	b.ne	320 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xf8>  // b.any
 290:	ldr	x11, [x2, #16]
 294:	ldr	w11, [x11, #784]
 298:	cmp	w11, #0x6
 29c:	b.ne	328 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x100>  // b.any
 2a0:	ldr	x11, [x2, #24]
 2a4:	ldr	w11, [x11, #784]
 2a8:	cmp	w11, #0x6
 2ac:	b.ne	330 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x108>  // b.any
 2b0:	sub	x10, x10, #0x1
 2b4:	cmp	x10, #0x1
 2b8:	add	x2, x2, #0x20
 2bc:	b.gt	270 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x48>
 2c0:	sub	x10, x8, x2
 2c4:	asr	x10, x10, #3
 2c8:	cmp	x10, #0x1
 2cc:	b.eq	308 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xe0>  // b.none
 2d0:	cmp	x10, #0x2
 2d4:	b.eq	2f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xcc>  // b.none
 2d8:	cmp	x10, #0x3
 2dc:	b.ne	318 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xf0>  // b.any
 2e0:	ldr	x10, [x2]
 2e4:	ldr	w10, [x10, #784]
 2e8:	cmp	w10, #0x6
 2ec:	b.ne	334 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 2f0:	add	x2, x2, #0x8
 2f4:	ldr	x10, [x2]
 2f8:	ldr	w10, [x10, #784]
 2fc:	cmp	w10, #0x6
 300:	b.ne	334 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 304:	add	x2, x2, #0x8
 308:	ldr	x10, [x2]
 30c:	ldr	w10, [x10, #784]
 310:	cmp	w10, #0x6
 314:	b.ne	334 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 318:	mov	x2, x8
 31c:	b	334 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 320:	add	x2, x2, #0x8
 324:	b	334 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 328:	add	x2, x2, #0x10
 32c:	b	334 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 330:	add	x2, x2, #0x18
 334:	sub	x8, x2, x1
 338:	lsr	x10, x8, #3
 33c:	lsr	x8, x8, #2
 340:	and	x8, x8, #0xfffffffe
 344:	cmp	x8, x9
 348:	str	w10, [x19, #232]
 34c:	b.cc	358 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x130>  // b.lo, b.ul, b.last
 350:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 354:	str	wzr, [x19, #232]
 358:	mov	w8, #0x1                   	// #1
 35c:	str	x8, [x20]
 360:	ldp	x20, x19, [sp, #16]
 364:	ldp	x29, x30, [sp], #32
 368:	ret
 36c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 370:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 374:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 378:	add	x0, x0, #0x0
 37c:	add	x1, x1, #0x0
 380:	add	x3, x3, #0x0
 384:	mov	w2, #0x95                  	// #149
 388:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca9SourceMgr8peekNextEv:

0000000000000000 <_ZNK4llvm3mca9SourceMgr8peekNextEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	w8, w10, [x0, #16]
   c:	ldr	x9, [x0, #8]
  10:	mul	x10, x9, x10
  14:	cmp	x10, x8
  18:	b.ls	38 <_ZNK4llvm3mca9SourceMgr8peekNextEv+0x38>  // b.plast
  1c:	ldr	x10, [x0]
  20:	udiv	x11, x8, x9
  24:	msub	x9, x11, x9, x8
  28:	mov	x0, x8
  2c:	ldr	x1, [x10, x9, lsl #3]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm3mca9SourceMgr8peekNextEv>
  3c:	adrp	x1, 0 <_ZNK4llvm3mca9SourceMgr8peekNextEv>
  40:	adrp	x3, 0 <_ZNK4llvm3mca9SourceMgr8peekNextEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x2d                  	// #45
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	58 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_+0x58>  // b.hs, b.nlast
  20:	ldr	x10, [x19]
  24:	ldr	x11, [x20]
  28:	cmp	w8, w9
  2c:	str	xzr, [x20]
  30:	str	x11, [x10, w8, uxtw #3]
  34:	b.cs	6c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_+0x6c>  // b.hs, b.nlast
  38:	ldr	x9, [x19]
  3c:	add	w8, w8, #0x1
  40:	str	w8, [x19, #8]
  44:	ldp	x20, x19, [sp, #16]
  48:	add	x9, x9, w8, uxtw #3
  4c:	sub	x0, x9, #0x8
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	mov	x0, x19
  5c:	mov	x1, xzr
  60:	bl	0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_>
  64:	ldp	w8, w9, [x19, #8]
  68:	b	20 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_+0x20>
  6c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_>
  70:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_>
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE12emplace_backIJS6_EEERS6_DpOT_>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x0, [x0, #8]
  18:	cbz	x0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  1c:	mov	x20, x8
  20:	ldr	x8, [x0]
  24:	mov	x19, x1
  28:	ldr	x8, [x8, #16]
  2c:	blr	x8
  30:	tbz	w0, #0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  34:	ldr	x0, [x21, #8]
  38:	mov	x1, x19
  3c:	ldr	x21, [sp, #16]
  40:	ldr	x8, [x0]
  44:	ldr	x2, [x8, #48]
  48:	mov	x8, x20
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	br	x2
  58:	adrp	x0, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  5c:	adrp	x1, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  60:	adrp	x3, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x47                  	// #71
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0]
  18:	cmp	x8, x1
  1c:	b.hi	bc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xbc>  // b.pmore
  20:	mov	x19, x0
  24:	mov	x20, x1
  28:	mov	x0, x2
  2c:	cmp	x1, x2
  30:	b.hi	dc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xdc>  // b.pmore
  34:	ldr	w9, [x19, #8]
  38:	add	x1, x8, x9, lsl #3
  3c:	cmp	x1, x0
  40:	b.cc	fc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xfc>  // b.lo, b.ul, b.last
  44:	mov	x2, x20
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  4c:	ldr	x8, [x19]
  50:	ldr	w9, [x19, #8]
  54:	mov	x21, x0
  58:	add	x22, x8, x9, lsl #3
  5c:	cmp	x22, x0
  60:	b.eq	8c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x8c>  // b.none
  64:	mov	x23, x22
  68:	ldr	x1, [x23, #-8]!
  6c:	cbz	x1, 78 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x78>
  70:	sub	x0, x22, #0x8
  74:	bl	0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  78:	cmp	x21, x23
  7c:	stur	xzr, [x22, #-8]
  80:	mov	x22, x23
  84:	b.ne	68 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x68>  // b.any
  88:	ldr	x8, [x19]
  8c:	ldr	w9, [x19, #12]
  90:	sub	x8, x21, x8
  94:	cmp	x9, x8, asr #3
  98:	b.cc	11c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x11c>  // b.lo, b.ul, b.last
  9c:	lsr	x8, x8, #3
  a0:	str	w8, [x19, #8]
  a4:	mov	x0, x20
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret
  bc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  c0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x1c6                 	// #454
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  e0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  e4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x1c7                 	// #455
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 100:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 104:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x1c8                 	// #456
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 124:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x43                  	// #67
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10EntryStageD2Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca10EntryStageD2Ev>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	add	x8, x8, #0x10
  1c:	str	x8, [x0], #80
  20:	bl	0 <_ZN4llvm3mca10EntryStageD2Ev>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca10EntryStageD0Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca10EntryStageD0Ev>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	add	x8, x8, #0x10
  1c:	str	x8, [x0], #80
  20:	bl	0 <_ZN4llvm3mca10EntryStageD0Ev>
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm11SmallVectorISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELj16EED2Ev:

0000000000000000 <_ZN4llvm11SmallVectorISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELj16EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	w8, [x0, #8]
  18:	ldr	x0, [x0]
  1c:	cbz	w8, 48 <_ZN4llvm11SmallVectorISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELj16EED2Ev+0x48>
  20:	lsl	x20, x8, #3
  24:	sub	x21, x0, #0x8
  28:	ldr	x1, [x21, x20]
  2c:	cbz	x1, 38 <_ZN4llvm11SmallVectorISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELj16EED2Ev+0x38>
  30:	add	x0, x21, x20
  34:	bl	0 <_ZN4llvm11SmallVectorISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELj16EED2Ev>
  38:	str	xzr, [x21, x20]
  3c:	subs	x20, x20, #0x8
  40:	b.ne	28 <_ZN4llvm11SmallVectorISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELj16EED2Ev+0x28>  // b.any
  44:	ldr	x0, [x19]
  48:	add	x8, x19, #0x10
  4c:	cmp	x0, x8
  50:	b.eq	64 <_ZN4llvm11SmallVectorISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELj16EED2Ev+0x64>  // b.none
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	b	0 <free>
  64:	ldp	x20, x19, [sp, #32]
  68:	ldr	x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	cmp	x0, x1
  20:	b.eq	1a0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1a0>  // b.none
  24:	ldr	w20, [x1, #8]
  28:	ldr	w22, [x19, #8]
  2c:	mov	x21, x1
  30:	cmp	w22, w20
  34:	b.cs	88 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x88>  // b.hs, b.nlast
  38:	ldr	w8, [x19, #12]
  3c:	cmp	w8, w20
  40:	b.cs	e0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xe0>  // b.hs, b.nlast
  44:	cbz	w22, 74 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x74>
  48:	ldr	x23, [x19]
  4c:	add	x8, x22, x22, lsl #4
  50:	lsl	x22, x8, #3
  54:	add	x8, x23, x22
  58:	ldur	x0, [x8, #-80]
  5c:	sub	x8, x8, #0x40
  60:	cmp	x8, x0
  64:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x6c>  // b.none
  68:	bl	0 <free>
  6c:	subs	x22, x22, #0x88
  70:	b.ne	54 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x54>  // b.any
  74:	mov	x0, x19
  78:	mov	x1, x20
  7c:	str	wzr, [x19, #8]
  80:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  84:	b	12c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x12c>
  88:	ldr	x23, [x19]
  8c:	cbz	w20, 158 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x158>
  90:	ldr	x21, [x21]
  94:	add	x22, x20, #0x1
  98:	ldp	q2, q0, [x21, #16]
  9c:	ldr	x8, [x21, #48]
  a0:	ldr	q1, [x21]
  a4:	add	x0, x23, #0x38
  a8:	add	x1, x21, #0x38
  ac:	str	x8, [x23, #48]
  b0:	stp	q2, q0, [x23, #16]
  b4:	str	q1, [x23]
  b8:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  bc:	sub	x22, x22, #0x1
  c0:	add	x23, x23, #0x88
  c4:	cmp	x22, #0x1
  c8:	add	x21, x21, #0x88
  cc:	b.gt	98 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x98>
  d0:	mov	x21, x23
  d4:	ldr	x23, [x19]
  d8:	ldr	w22, [x19, #8]
  dc:	b	15c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x15c>
  e0:	cbz	w22, 12c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x12c>
  e4:	ldr	x23, [x21]
  e8:	ldr	x24, [x19]
  ec:	add	x25, x22, #0x1
  f0:	ldp	q2, q0, [x23, #16]
  f4:	ldr	x8, [x23, #48]
  f8:	ldr	q1, [x23]
  fc:	add	x0, x24, #0x38
 100:	add	x1, x23, #0x38
 104:	str	x8, [x24, #48]
 108:	stp	q2, q0, [x24, #16]
 10c:	str	q1, [x24]
 110:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 114:	sub	x25, x25, #0x1
 118:	add	x24, x24, #0x88
 11c:	cmp	x25, #0x1
 120:	add	x23, x23, #0x88
 124:	b.gt	f0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xf0>
 128:	b	130 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x130>
 12c:	mov	x22, xzr
 130:	ldr	x8, [x21]
 134:	ldr	w10, [x21, #8]
 138:	ldr	x11, [x19]
 13c:	add	x9, x22, x22, lsl #4
 140:	mov	w12, #0x88                  	// #136
 144:	add	x0, x8, x9, lsl #3
 148:	madd	x1, x10, x12, x8
 14c:	add	x2, x11, x9, lsl #3
 150:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 154:	b	190 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x190>
 158:	mov	x21, x23
 15c:	mov	w8, #0x88                  	// #136
 160:	madd	x8, x22, x8, x23
 164:	cmp	x8, x21
 168:	b.eq	190 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x190>  // b.none
 16c:	ldur	x0, [x8, #-80]
 170:	sub	x9, x8, #0x40
 174:	sub	x22, x8, #0x88
 178:	cmp	x9, x0
 17c:	b.eq	184 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x184>  // b.none
 180:	bl	0 <free>
 184:	cmp	x21, x22
 188:	mov	x8, x22
 18c:	b.ne	16c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x16c>  // b.any
 190:	ldr	w8, [x19, #12]
 194:	cmp	w8, w20
 198:	b.cc	1bc <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1bc>  // b.lo, b.ul, b.last
 19c:	str	w20, [x19, #8]
 1a0:	mov	x0, x19
 1a4:	ldp	x20, x19, [sp, #64]
 1a8:	ldp	x22, x21, [sp, #48]
 1ac:	ldp	x24, x23, [sp, #32]
 1b0:	ldr	x25, [sp, #16]
 1b4:	ldp	x29, x30, [sp], #80
 1b8:	ret
 1bc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 1c0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 1c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x43                  	// #67
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	add	x8, x22, x22, lsl #4
  70:	lsl	x0, x8, #3
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	x0, [x19]
  c0:	ldr	w8, [x19, #8]
  c4:	mov	w9, #0x88                  	// #136
  c8:	mov	x2, x20
  cc:	madd	x1, x8, x9, x0
  d0:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  d4:	ldr	w8, [x19, #8]
  d8:	ldr	x21, [x19]
  dc:	cbz	w8, 10c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x10c>
  e0:	add	x8, x8, x8, lsl #4
  e4:	lsl	x23, x8, #3
  e8:	add	x8, x21, x23
  ec:	ldur	x0, [x8, #-80]
  f0:	sub	x8, x8, #0x40
  f4:	cmp	x8, x0
  f8:	b.eq	100 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x100>  // b.none
  fc:	bl	0 <free>
 100:	subs	x23, x23, #0x88
 104:	b.ne	e8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xe8>  // b.any
 108:	ldr	x21, [x19]
 10c:	add	x8, x19, #0x10
 110:	cmp	x21, x8
 114:	b.eq	120 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x120>  // b.none
 118:	mov	x0, x21
 11c:	bl	0 <free>
 120:	str	x20, [x19]
 124:	str	w22, [x19, #12]
 128:	ldp	x20, x19, [sp, #48]
 12c:	ldp	x22, x21, [sp, #32]
 130:	ldr	x23, [sp, #16]
 134:	ldp	x29, x30, [sp], #64
 138:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	114 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x114>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x58>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	90 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x90>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  4c:	ldr	w9, [x21, #8]
  50:	mov	x8, xzr
  54:	b	d0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xd0>
  58:	cbz	w20, 104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>
  5c:	ldr	x8, [x21]
  60:	ldr	x9, [x19]
  64:	add	x10, x20, #0x1
  68:	ldr	x11, [x8]
  6c:	sub	x10, x10, #0x1
  70:	cmp	x10, #0x1
  74:	str	x11, [x9]
  78:	ldr	w11, [x8, #8]
  7c:	add	x8, x8, #0x10
  80:	str	w11, [x9, #8]
  84:	add	x9, x9, #0x10
  88:	b.gt	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
  8c:	b	104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>
  90:	cbz	w8, c8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xc8>
  94:	ldr	x9, [x21]
  98:	ldr	x10, [x19]
  9c:	add	x11, x8, #0x1
  a0:	ldr	x12, [x9]
  a4:	sub	x11, x11, #0x1
  a8:	cmp	x11, #0x1
  ac:	str	x12, [x10]
  b0:	ldr	w12, [x9, #8]
  b4:	add	x9, x9, #0x10
  b8:	str	w12, [x10, #8]
  bc:	add	x10, x10, #0x10
  c0:	b.gt	a0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xa0>
  c4:	b	cc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xcc>
  c8:	mov	x8, xzr
  cc:	mov	x9, x20
  d0:	cmp	x8, x9
  d4:	b.eq	104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>  // b.none
  d8:	ldr	x10, [x19]
  dc:	ldr	x11, [x21]
  e0:	lsl	x12, x9, #4
  e4:	add	x9, x10, x8, lsl #4
  e8:	add	x10, x11, x8, lsl #4
  ec:	sub	x8, x12, x8, lsl #4
  f0:	ldr	q0, [x10], #16
  f4:	subs	x8, x8, #0x10
  f8:	str	q0, [x9]
  fc:	add	x9, x9, #0x10
 100:	b.ne	f0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf0>  // b.any
 104:	ldr	w8, [x19, #12]
 108:	cmp	w8, w20
 10c:	b.cc	128 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x128>  // b.lo, b.ul, b.last
 110:	str	w20, [x19, #8]
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x43                  	// #67
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_:

0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_>:
   0:	mov	x8, x0
   4:	cmp	x0, x1
   8:	mov	x0, x2
   c:	b.eq	a4 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_+0xa4>  // b.none
  10:	str	d8, [sp, #-64]!
  14:	stp	x29, x30, [sp, #8]
  18:	str	x23, [sp, #24]
  1c:	stp	x22, x21, [sp, #32]
  20:	stp	x20, x19, [sp, #48]
  24:	mov	x29, sp
  28:	adrp	x9, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_>
  2c:	ldr	d8, [x9]
  30:	mov	x19, x1
  34:	add	x20, x8, #0x38
  38:	ldur	q0, [x20, #-56]
  3c:	ldur	q1, [x20, #-24]
  40:	ldur	q2, [x20, #-40]
  44:	ldur	x8, [x20, #-8]
  48:	add	x22, x0, #0x48
  4c:	str	q0, [x0]
  50:	stp	q2, q1, [x0, #16]
  54:	stp	x8, x22, [x0, #48]
  58:	str	d8, [x0, #64]
  5c:	ldr	w8, [x20, #8]
  60:	mov	x21, x0
  64:	sub	x23, x20, #0x38
  68:	cbz	w8, 78 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_+0x78>
  6c:	add	x0, x21, #0x38
  70:	mov	x1, x20
  74:	bl	0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_>
  78:	add	x8, x23, #0x88
  7c:	add	x20, x20, #0x88
  80:	cmp	x8, x19
  84:	add	x0, x22, #0x40
  88:	b.ne	38 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN4llvm3mca10WriteStateEES6_EET0_T_S9_S8_+0x38>  // b.any
  8c:	add	x0, x21, #0x88
  90:	ldp	x20, x19, [sp, #48]
  94:	ldp	x22, x21, [sp, #32]
  98:	ldr	x23, [sp, #24]
  9c:	ldp	x29, x30, [sp, #8]
  a0:	ldr	d8, [sp], #64
  a4:	ret

Disassembly of section .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm3mca10WriteStateEPS4_EET0_T_S9_S8_:

0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm3mca10WriteStateEPS4_EET0_T_S9_S8_>:
   0:	mov	x8, x0
   4:	cmp	x0, x1
   8:	mov	x0, x2
   c:	b.eq	a4 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm3mca10WriteStateEPS4_EET0_T_S9_S8_+0xa4>  // b.none
  10:	str	d8, [sp, #-64]!
  14:	stp	x29, x30, [sp, #8]
  18:	str	x23, [sp, #24]
  1c:	stp	x22, x21, [sp, #32]
  20:	stp	x20, x19, [sp, #48]
  24:	mov	x29, sp
  28:	adrp	x9, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm3mca10WriteStateEPS4_EET0_T_S9_S8_>
  2c:	ldr	d8, [x9]
  30:	mov	x19, x1
  34:	add	x20, x8, #0x38
  38:	ldur	q0, [x20, #-56]
  3c:	ldur	q1, [x20, #-24]
  40:	ldur	q2, [x20, #-40]
  44:	ldur	x8, [x20, #-8]
  48:	add	x22, x0, #0x48
  4c:	str	q0, [x0]
  50:	stp	q2, q1, [x0, #16]
  54:	stp	x8, x22, [x0, #48]
  58:	str	d8, [x0, #64]
  5c:	ldr	w8, [x20, #8]
  60:	mov	x21, x0
  64:	sub	x23, x20, #0x38
  68:	cbz	w8, 78 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm3mca10WriteStateEPS4_EET0_T_S9_S8_+0x78>
  6c:	add	x0, x21, #0x38
  70:	mov	x1, x20
  74:	bl	0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm3mca10WriteStateEPS4_EET0_T_S9_S8_>
  78:	add	x8, x23, #0x88
  7c:	add	x20, x20, #0x88
  80:	cmp	x8, x19
  84:	add	x0, x22, #0x40
  88:	b.ne	38 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN4llvm3mca10WriteStateEPS4_EET0_T_S9_S8_+0x38>  // b.any
  8c:	add	x0, x21, #0x88
  90:	ldp	x20, x19, [sp, #48]
  94:	ldp	x22, x21, [sp, #32]
  98:	ldr	x23, [sp, #24]
  9c:	ldp	x29, x30, [sp, #8]
  a0:	ldr	d8, [sp], #64
  a4:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	d4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xd4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	74 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x74>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x30                  	// #48
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	90 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x90>
  58:	cbz	w20, c4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xc4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	add	x8, x20, x20, lsl #1
  68:	lsl	x2, x8, #4
  6c:	bl	0 <memmove>
  70:	b	c4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xc4>
  74:	cbz	w22, 90 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x90>
  78:	ldr	x1, [x21]
  7c:	ldr	x0, [x19]
  80:	add	x8, x22, x22, lsl #1
  84:	lsl	x2, x8, #4
  88:	bl	0 <memmove>
  8c:	b	94 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x94>
  90:	mov	x22, xzr
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xc4>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x11, [x19]
  a8:	mov	w10, #0x30                  	// #48
  ac:	mov	w12, #0x30                  	// #48
  b0:	madd	x1, x22, x10, x9
  b4:	madd	x8, x8, x12, x9
  b8:	madd	x0, x22, x12, x11
  bc:	sub	x2, x8, x1
  c0:	bl	0 <memcpy>
  c4:	ldr	w8, [x19, #12]
  c8:	cmp	w8, w20
  cc:	b.cc	e8 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xe8>  // b.lo, b.ul, b.last
  d0:	str	w20, [x19, #8]
  d4:	mov	x0, x19
  d8:	ldp	x20, x19, [sp, #32]
  dc:	ldp	x22, x21, [sp, #16]
  e0:	ldp	x29, x30, [sp], #48
  e4:	ret
  e8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  ec:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  f0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x43                  	// #67
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_:

0000000000000000 <_ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_>:
   0:	cbz	x1, 40 <_ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	str	x19, [sp, #16]
   c:	mov	x29, sp
  10:	ldr	x0, [x1, #576]
  14:	add	x8, x1, #0x250
  18:	mov	x19, x1
  1c:	cmp	x0, x8
  20:	b.eq	28 <_ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_+0x28>  // b.none
  24:	bl	0 <free>
  28:	add	x0, x19, #0x10
  2c:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_>
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZdlPv>
  40:	ret

Disassembly of section .text._ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev:

0000000000000000 <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #8]
  14:	ldr	x19, [x0]
  18:	mov	x20, x0
  1c:	cbz	w8, 4c <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x4c>
  20:	add	x8, x8, x8, lsl #4
  24:	lsl	x21, x8, #3
  28:	add	x8, x19, x21
  2c:	ldur	x0, [x8, #-80]
  30:	sub	x8, x8, #0x40
  34:	cmp	x8, x0
  38:	b.eq	40 <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x40>  // b.none
  3c:	bl	0 <free>
  40:	subs	x21, x21, #0x88
  44:	b.ne	28 <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x28>  // b.any
  48:	ldr	x19, [x20]
  4c:	add	x8, x20, #0x10
  50:	cmp	x19, x8
  54:	b.eq	6c <_ZN4llvm11SmallVectorINS_3mca10WriteStateELj4EED2Ev+0x6c>  // b.none
  58:	mov	x0, x19
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <free>
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 110 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x110>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 110 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x110>
  ec:	sub	x23, x0, #0x8
  f0:	ldr	x1, [x23, x22]
  f4:	cbz	x1, 100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x100>
  f8:	add	x0, x23, x22
  fc:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
 100:	str	xzr, [x23, x22]
 104:	subs	x22, x22, #0x8
 108:	b.ne	f0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xf0>  // b.any
 10c:	ldr	x0, [x19]
 110:	add	x8, x19, #0x10
 114:	cmp	x0, x8
 118:	b.eq	120 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x120>  // b.none
 11c:	bl	0 <free>
 120:	str	x20, [x19]
 124:	str	w21, [x19, #12]
 128:	ldp	x20, x19, [sp, #48]
 12c:	ldp	x22, x21, [sp, #32]
 130:	ldr	x23, [sp, #16]
 134:	ldp	x29, x30, [sp], #64
 138:	ret

Disassembly of section .text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS6_EESA_EET0_T_SC_SB_:

0000000000000000 <_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS6_EESA_EET0_T_SC_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, x0
  14:	cmp	x8, #0x1
  18:	mov	x19, x2
  1c:	b.lt	5c <_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS6_EESA_EET0_T_SC_SB_+0x5c>  // b.tstop
  20:	lsr	x8, x8, #3
  24:	mov	x20, x0
  28:	add	x21, x8, #0x1
  2c:	ldr	x8, [x20]
  30:	str	xzr, [x20]
  34:	ldr	x1, [x19]
  38:	str	x8, [x19]
  3c:	cbz	x1, 48 <_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS6_EESA_EET0_T_SC_SB_+0x48>
  40:	mov	x0, x19
  44:	bl	0 <_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS6_EESA_EET0_T_SC_SB_>
  48:	sub	x21, x21, #0x1
  4c:	add	x20, x20, #0x8
  50:	cmp	x21, #0x1
  54:	add	x19, x19, #0x8
  58:	b.gt	2c <_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrIN4llvm3mca11InstructionESt14default_deleteIS6_EESA_EET0_T_SC_SB_+0x2c>
  5c:	mov	x0, x19
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

ExecuteStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	w0, #0x5
   c:	b.cs	24 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE+0x24>  // b.hs, b.nlast
  10:	adrp	x8, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  14:	add	x8, x8, #0x0
  18:	ldr	w0, [x8, w0, sxtw #2]
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  28:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	mov	w2, #0x28                  	// #40
  38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000003c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>:
  3c:	sub	sp, sp, #0x30
  40:	stp	x29, x30, [sp, #16]
  44:	stp	x20, x19, [sp, #32]
  48:	add	x29, sp, #0x10
  4c:	mov	x19, x0
  50:	ldr	x0, [x0, #64]
  54:	mov	x20, x1
  58:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
  5c:	cbz	w0, 80 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x44>
  60:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  64:	str	w0, [sp]
  68:	mov	x1, sp
  6c:	mov	x0, x19
  70:	str	x20, [sp, #8]
  74:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  78:	mov	w0, wzr
  7c:	b	84 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x48>
  80:	mov	w0, #0x1                   	// #1
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x29, x30, [sp, #16]
  8c:	add	sp, sp, #0x30
  90:	ret

0000000000000094 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>:
  94:	sub	sp, sp, #0x150
  98:	stp	x29, x30, [sp, #272]
  9c:	str	x28, [sp, #288]
  a0:	stp	x22, x21, [sp, #304]
  a4:	stp	x20, x19, [sp, #320]
  a8:	add	x29, sp, #0x110
  ac:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  b0:	ldr	d0, [x9]
  b4:	sub	x9, x29, #0x70
  b8:	add	x9, x9, #0x10
  bc:	stur	x9, [x29, #-112]
  c0:	add	x9, sp, #0x50
  c4:	add	x9, x9, #0x10
  c8:	str	x9, [sp, #80]
  cc:	mov	x9, sp
  d0:	add	x9, x9, #0x10
  d4:	str	x9, [sp]
  d8:	stur	d0, [x29, #-104]
  dc:	str	d0, [sp, #88]
  e0:	str	d0, [sp, #8]
  e4:	mov	x19, x0
  e8:	ldr	x0, [x0, #64]
  ec:	sub	x2, x29, #0x70
  f0:	add	x3, sp, #0x50
  f4:	mov	x4, sp
  f8:	mov	x21, x1
  fc:	mov	x20, x8
 100:	bl	0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>
 104:	ldr	x22, [x21, #8]
 108:	ldr	w9, [x19, #76]
 10c:	mov	x0, x19
 110:	mov	x1, x21
 114:	ldr	x8, [x22]
 118:	mov	w2, wzr
 11c:	ldr	w8, [x8, #316]
 120:	add	w8, w9, w8
 124:	str	w8, [x19, #76]
 128:	bl	24c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
 12c:	ldur	x2, [x29, #-112]
 130:	ldur	w3, [x29, #-104]
 134:	mov	x0, x19
 138:	mov	x1, x21
 13c:	bl	3d4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
 140:	ldr	w8, [x22, #784]
 144:	cmp	w8, #0x5
 148:	b.ne	18c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xf8>  // b.any
 14c:	mov	x0, x19
 150:	mov	x1, x21
 154:	bl	5dc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
 158:	mov	x8, x20
 15c:	mov	x0, x19
 160:	mov	x1, x21
 164:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 168:	ldr	x9, [x20]
 16c:	tst	x9, #0xfffffffffffffffe
 170:	and	x8, x9, #0xfffffffffffffffe
 174:	cset	w9, ne  // ne = any
 178:	orr	x9, x8, x9
 17c:	str	x9, [x20]
 180:	cbnz	x8, 188 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xf4>
 184:	cbnz	x9, 244 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1b0>
 188:	cbnz	x8, 1e4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x150>
 18c:	ldr	w8, [sp, #88]
 190:	cbz	w8, 1b4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x120>
 194:	ldr	x21, [sp, #80]
 198:	lsl	x22, x8, #4
 19c:	mov	x0, x19
 1a0:	mov	x1, x21
 1a4:	bl	690 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 1a8:	subs	x22, x22, #0x10
 1ac:	add	x21, x21, #0x10
 1b0:	b.ne	19c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x108>  // b.any
 1b4:	ldr	w8, [sp, #8]
 1b8:	cbz	w8, 1dc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x148>
 1bc:	ldr	x21, [sp]
 1c0:	lsl	x22, x8, #4
 1c4:	mov	x0, x19
 1c8:	mov	x1, x21
 1cc:	bl	744 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 1d0:	subs	x22, x22, #0x10
 1d4:	add	x21, x21, #0x10
 1d8:	b.ne	1c4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x130>  // b.any
 1dc:	mov	w8, #0x1                   	// #1
 1e0:	str	x8, [x20]
 1e4:	ldr	x0, [sp]
 1e8:	mov	x8, sp
 1ec:	add	x8, x8, #0x10
 1f0:	cmp	x0, x8
 1f4:	b.eq	1fc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x168>  // b.none
 1f8:	bl	0 <free>
 1fc:	ldr	x0, [sp, #80]
 200:	add	x8, sp, #0x50
 204:	add	x8, x8, #0x10
 208:	cmp	x0, x8
 20c:	b.eq	214 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x180>  // b.none
 210:	bl	0 <free>
 214:	ldur	x0, [x29, #-112]
 218:	sub	x8, x29, #0x70
 21c:	add	x8, x8, #0x10
 220:	cmp	x0, x8
 224:	b.eq	22c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x198>  // b.none
 228:	bl	0 <free>
 22c:	ldp	x20, x19, [sp, #320]
 230:	ldp	x22, x21, [sp, #304]
 234:	ldr	x28, [sp, #288]
 238:	ldp	x29, x30, [sp, #272]
 23c:	add	sp, sp, #0x150
 240:	ret
 244:	mov	x0, x20
 248:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000000024c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>:
 24c:	sub	sp, sp, #0x70
 250:	stp	x29, x30, [sp, #32]
 254:	str	x25, [sp, #48]
 258:	stp	x24, x23, [sp, #64]
 25c:	stp	x22, x21, [sp, #80]
 260:	stp	x20, x19, [sp, #96]
 264:	add	x29, sp, #0x20
 268:	ldr	x8, [x1, #8]
 26c:	ldr	x8, [x8]
 270:	ldr	x23, [x8, #288]
 274:	cbz	x23, 398 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x14c>
 278:	adrp	x8, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 27c:	fmov	d0, x23
 280:	ldr	d1, [x8]
 284:	cnt	v0.8b, v0.8b
 288:	uaddlv	h0, v0.8b
 28c:	mov	x8, sp
 290:	mov	w20, w2
 294:	mov	x19, x1
 298:	mov	x21, x0
 29c:	fmov	w1, s0
 2a0:	add	x8, x8, #0x10
 2a4:	mov	x0, sp
 2a8:	add	x2, x29, #0x1c
 2ac:	str	wzr, [x29, #28]
 2b0:	str	x8, [sp]
 2b4:	str	d1, [sp, #8]
 2b8:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 2bc:	ldr	w24, [sp, #8]
 2c0:	cbz	w24, 304 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xb8>
 2c4:	mov	x25, xzr
 2c8:	ldr	x8, [x21, #64]
 2cc:	ldr	x0, [x8, #24]
 2d0:	neg	x8, x23
 2d4:	and	x22, x23, x8
 2d8:	mov	x1, x22
 2dc:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
 2e0:	ldr	w8, [sp, #8]
 2e4:	cmp	x25, x8
 2e8:	b.cs	3b4 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x168>  // b.hs, b.nlast
 2ec:	ldr	x8, [sp]
 2f0:	eor	x23, x22, x23
 2f4:	str	w0, [x8, x25, lsl #2]
 2f8:	add	x25, x25, #0x1
 2fc:	cmp	x24, x25
 300:	b.ne	2c8 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x7c>  // b.any
 304:	ldr	x22, [x21, #40]
 308:	add	x21, x21, #0x18
 30c:	cmp	x22, x21
 310:	tbz	w20, #0, 34c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x100>
 314:	b.eq	380 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x134>  // b.none
 318:	ldr	x0, [x22, #32]
 31c:	ldr	x2, [sp]
 320:	ldr	w3, [sp, #8]
 324:	mov	x1, x19
 328:	ldr	x8, [x0]
 32c:	ldr	x8, [x8, #48]
 330:	blr	x8
 334:	mov	x0, x22
 338:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 33c:	mov	x22, x0
 340:	cmp	x0, x21
 344:	b.ne	318 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xcc>  // b.any
 348:	b	380 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x134>
 34c:	b.eq	380 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x134>  // b.none
 350:	ldr	x0, [x22, #32]
 354:	ldr	x2, [sp]
 358:	ldr	w3, [sp, #8]
 35c:	mov	x1, x19
 360:	ldr	x8, [x0]
 364:	ldr	x8, [x8, #56]
 368:	blr	x8
 36c:	mov	x0, x22
 370:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 374:	mov	x22, x0
 378:	cmp	x0, x21
 37c:	b.ne	350 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x104>  // b.any
 380:	ldr	x0, [sp]
 384:	mov	x8, sp
 388:	add	x8, x8, #0x10
 38c:	cmp	x0, x8
 390:	b.eq	398 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x14c>  // b.none
 394:	bl	0 <free>
 398:	ldp	x20, x19, [sp, #96]
 39c:	ldp	x22, x21, [sp, #80]
 3a0:	ldp	x24, x23, [sp, #64]
 3a4:	ldr	x25, [sp, #48]
 3a8:	ldp	x29, x30, [sp, #32]
 3ac:	add	sp, sp, #0x70
 3b0:	ret
 3b4:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 3b8:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 3bc:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 3c0:	add	x0, x0, #0x0
 3c4:	add	x1, x1, #0x0
 3c8:	add	x3, x3, #0x0
 3cc:	mov	w2, #0x95                  	// #149
 3d0:	bl	0 <__assert_fail>

00000000000003d4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
 3d4:	sub	sp, sp, #0x90
 3d8:	stp	x29, x30, [sp, #48]
 3dc:	stp	x28, x27, [sp, #64]
 3e0:	stp	x26, x25, [sp, #80]
 3e4:	stp	x24, x23, [sp, #96]
 3e8:	stp	x22, x21, [sp, #112]
 3ec:	stp	x20, x19, [sp, #128]
 3f0:	add	x29, sp, #0x30
 3f4:	str	x1, [sp, #8]
 3f8:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 3fc:	ldr	x8, [x8]
 400:	mov	x19, x3
 404:	mov	x20, x2
 408:	mov	x21, x0
 40c:	ldrb	w8, [x8]
 410:	cbz	w8, 54c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x178>
 414:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 418:	add	x0, x0, #0x0
 41c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 420:	tbz	w0, #0, 54c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x178>
 424:	bl	0 <_ZN4llvm4dbgsEv>
 428:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 42c:	add	x1, x1, #0x0
 430:	mov	w2, #0x19                  	// #25
 434:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 438:	ldr	x8, [sp, #8]
 43c:	mov	x23, x0
 440:	ldr	w1, [x8]
 444:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 448:	ldp	x9, x8, [x23, #16]
 44c:	cmp	x8, x9
 450:	b.cs	46c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x98>  // b.hs, b.nlast
 454:	add	x9, x8, #0x1
 458:	mov	w10, #0xa                   	// #10
 45c:	str	x9, [x23, #24]
 460:	strb	w10, [x8]
 464:	cbnz	x19, 47c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa8>
 468:	b	57c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1a8>
 46c:	mov	w1, #0xa                   	// #10
 470:	mov	x0, x23
 474:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 478:	cbz	x19, 57c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1a8>
 47c:	add	x8, x19, x19, lsl #1
 480:	adrp	x23, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 484:	adrp	x24, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 488:	adrp	x25, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 48c:	add	x26, x20, #0x10
 490:	add	x23, x23, #0x0
 494:	mov	w27, #0x2e                  	// #46
 498:	add	x24, x24, #0x0
 49c:	add	x25, x25, #0x0
 4a0:	lsl	x28, x8, #3
 4a4:	mov	w22, #0xa                   	// #10
 4a8:	ldr	w8, [x26, #4]
 4ac:	cmp	w8, #0x1
 4b0:	b.ne	5bc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1e8>  // b.any
 4b4:	bl	0 <_ZN4llvm4dbgsEv>
 4b8:	mov	w2, #0x14                  	// #20
 4bc:	mov	x1, x23
 4c0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 4c4:	ldur	x1, [x26, #-16]
 4c8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 4cc:	ldp	x9, x8, [x0, #16]
 4d0:	cmp	x8, x9
 4d4:	b.cs	4e8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x114>  // b.hs, b.nlast
 4d8:	add	x9, x8, #0x1
 4dc:	str	x9, [x0, #24]
 4e0:	strb	w27, [x8]
 4e4:	b	4f0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x11c>
 4e8:	mov	w1, #0x2e                  	// #46
 4ec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 4f0:	ldur	x1, [x26, #-8]
 4f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 4f8:	mov	w2, #0x3                   	// #3
 4fc:	mov	x1, x24
 500:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 504:	bl	0 <_ZN4llvm4dbgsEv>
 508:	mov	w2, #0x8                   	// #8
 50c:	mov	x1, x25
 510:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 514:	ldr	w1, [x26]
 518:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 51c:	ldp	x9, x8, [x0, #16]
 520:	cmp	x8, x9
 524:	b.cs	538 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x164>  // b.hs, b.nlast
 528:	add	x9, x8, #0x1
 52c:	str	x9, [x0, #24]
 530:	strb	w22, [x8]
 534:	b	540 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x16c>
 538:	mov	w1, #0xa                   	// #10
 53c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 540:	subs	x28, x28, #0x18
 544:	add	x26, x26, #0x18
 548:	b.ne	4a8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xd4>  // b.any
 54c:	cbz	x19, 57c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1a8>
 550:	add	x8, x19, x19, lsl #1
 554:	lsl	x22, x8, #3
 558:	mov	x23, x20
 55c:	ldr	x8, [x21, #64]
 560:	ldr	x1, [x23]
 564:	ldr	x0, [x8, #24]
 568:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
 56c:	mov	w8, w0
 570:	subs	x22, x22, #0x18
 574:	str	x8, [x23], #24
 578:	b.ne	55c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x188>  // b.any
 57c:	ldr	x9, [sp, #8]
 580:	mov	w8, #0x4                   	// #4
 584:	add	x1, sp, #0x10
 588:	mov	x0, x21
 58c:	stp	x9, x20, [sp, #24]
 590:	str	w8, [sp, #16]
 594:	str	x19, [sp, #40]
 598:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 59c:	ldp	x20, x19, [sp, #128]
 5a0:	ldp	x22, x21, [sp, #112]
 5a4:	ldp	x24, x23, [sp, #96]
 5a8:	ldp	x26, x25, [sp, #80]
 5ac:	ldp	x28, x27, [sp, #64]
 5b0:	ldp	x29, x30, [sp, #48]
 5b4:	add	sp, sp, #0x90
 5b8:	ret
 5bc:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 5c0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 5c4:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 5c8:	add	x0, x0, #0x0
 5cc:	add	x1, x1, #0x0
 5d0:	add	x3, x3, #0x0
 5d4:	mov	w2, #0x102                 	// #258
 5d8:	bl	0 <__assert_fail>

00000000000005dc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>:
 5dc:	sub	sp, sp, #0x40
 5e0:	stp	x29, x30, [sp, #16]
 5e4:	str	x21, [sp, #32]
 5e8:	stp	x20, x19, [sp, #48]
 5ec:	add	x29, sp, #0x10
 5f0:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 5f4:	ldr	x8, [x8]
 5f8:	mov	x20, x1
 5fc:	mov	x19, x0
 600:	ldrb	w8, [x8]
 604:	cbz	w8, 664 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x88>
 608:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 60c:	add	x0, x0, #0x0
 610:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 614:	tbz	w0, #0, 664 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x88>
 618:	bl	0 <_ZN4llvm4dbgsEv>
 61c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 620:	add	x1, x1, #0x0
 624:	mov	w2, #0x1b                  	// #27
 628:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 62c:	ldr	w1, [x20]
 630:	mov	x21, x0
 634:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 638:	ldp	x9, x8, [x21, #16]
 63c:	cmp	x8, x9
 640:	b.cs	658 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x7c>  // b.hs, b.nlast
 644:	add	x9, x8, #0x1
 648:	mov	w10, #0xa                   	// #10
 64c:	str	x9, [x21, #24]
 650:	strb	w10, [x8]
 654:	b	664 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x88>
 658:	mov	w1, #0xa                   	// #10
 65c:	mov	x0, x21
 660:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 664:	mov	w8, #0x5                   	// #5
 668:	mov	x1, sp
 66c:	mov	x0, x19
 670:	str	w8, [sp]
 674:	str	x20, [sp, #8]
 678:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 67c:	ldp	x20, x19, [sp, #48]
 680:	ldr	x21, [sp, #32]
 684:	ldp	x29, x30, [sp, #16]
 688:	add	sp, sp, #0x40
 68c:	ret

0000000000000690 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>:
 690:	sub	sp, sp, #0x40
 694:	stp	x29, x30, [sp, #16]
 698:	str	x21, [sp, #32]
 69c:	stp	x20, x19, [sp, #48]
 6a0:	add	x29, sp, #0x10
 6a4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 6a8:	ldr	x8, [x8]
 6ac:	mov	x20, x1
 6b0:	mov	x19, x0
 6b4:	ldrb	w8, [x8]
 6b8:	cbz	w8, 718 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x88>
 6bc:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 6c0:	add	x0, x0, #0x0
 6c4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 6c8:	tbz	w0, #0, 718 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x88>
 6cc:	bl	0 <_ZN4llvm4dbgsEv>
 6d0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 6d4:	add	x1, x1, #0x0
 6d8:	mov	w2, #0x1a                  	// #26
 6dc:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 6e0:	ldr	w1, [x20]
 6e4:	mov	x21, x0
 6e8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 6ec:	ldp	x9, x8, [x21, #16]
 6f0:	cmp	x8, x9
 6f4:	b.cs	70c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x7c>  // b.hs, b.nlast
 6f8:	add	x9, x8, #0x1
 6fc:	mov	w10, #0xa                   	// #10
 700:	str	x9, [x21, #24]
 704:	strb	w10, [x8]
 708:	b	718 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x88>
 70c:	mov	w1, #0xa                   	// #10
 710:	mov	x0, x21
 714:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 718:	mov	w8, #0x2                   	// #2
 71c:	mov	x1, sp
 720:	mov	x0, x19
 724:	str	w8, [sp]
 728:	str	x20, [sp, #8]
 72c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 730:	ldp	x20, x19, [sp, #48]
 734:	ldr	x21, [sp, #32]
 738:	ldp	x29, x30, [sp, #16]
 73c:	add	sp, sp, #0x40
 740:	ret

0000000000000744 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>:
 744:	sub	sp, sp, #0x40
 748:	stp	x29, x30, [sp, #16]
 74c:	str	x21, [sp, #32]
 750:	stp	x20, x19, [sp, #48]
 754:	add	x29, sp, #0x10
 758:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 75c:	ldr	x8, [x8]
 760:	mov	x20, x1
 764:	mov	x19, x0
 768:	ldrb	w8, [x8]
 76c:	cbz	w8, 7cc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x88>
 770:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 774:	add	x0, x0, #0x0
 778:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 77c:	tbz	w0, #0, 7cc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x88>
 780:	bl	0 <_ZN4llvm4dbgsEv>
 784:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 788:	add	x1, x1, #0x0
 78c:	mov	w2, #0x18                  	// #24
 790:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 794:	ldr	w1, [x20]
 798:	mov	x21, x0
 79c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 7a0:	ldp	x9, x8, [x21, #16]
 7a4:	cmp	x8, x9
 7a8:	b.cs	7c0 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x7c>  // b.hs, b.nlast
 7ac:	add	x9, x8, #0x1
 7b0:	mov	w10, #0xa                   	// #10
 7b4:	str	x9, [x21, #24]
 7b8:	strb	w10, [x8]
 7bc:	b	7cc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x88>
 7c0:	mov	w1, #0xa                   	// #10
 7c4:	mov	x0, x21
 7c8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 7cc:	mov	w8, #0x3                   	// #3
 7d0:	mov	x1, sp
 7d4:	mov	x0, x19
 7d8:	str	w8, [sp]
 7dc:	str	x20, [sp, #8]
 7e0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 7e4:	ldp	x20, x19, [sp, #48]
 7e8:	ldr	x21, [sp, #32]
 7ec:	ldp	x29, x30, [sp, #16]
 7f0:	add	sp, sp, #0x40
 7f4:	ret

00000000000007f8 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>:
 7f8:	sub	sp, sp, #0x30
 7fc:	stp	x29, x30, [sp, #16]
 800:	stp	x20, x19, [sp, #32]
 804:	add	x29, sp, #0x10
 808:	mov	x20, x0
 80c:	ldr	x0, [x0, #64]
 810:	mov	x19, x8
 814:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
 818:	str	x0, [sp]
 81c:	str	x1, [sp, #8]
 820:	cbz	x1, 868 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x70>
 824:	mov	x1, sp
 828:	mov	x8, x19
 82c:	mov	x0, x20
 830:	bl	94 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
 834:	ldr	x9, [x19]
 838:	tst	x9, #0xfffffffffffffffe
 83c:	and	x8, x9, #0xfffffffffffffffe
 840:	cset	w9, ne  // ne = any
 844:	orr	x9, x8, x9
 848:	str	x9, [x19]
 84c:	cbnz	x8, 854 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x5c>
 850:	cbnz	x9, 880 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x88>
 854:	cbnz	x8, 870 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x78>
 858:	ldr	x0, [x20, #64]
 85c:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
 860:	str	w0, [sp]
 864:	b	81c <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x24>
 868:	mov	w8, #0x1                   	// #1
 86c:	str	x8, [x19]
 870:	ldp	x20, x19, [sp, #32]
 874:	ldp	x29, x30, [sp, #16]
 878:	add	sp, sp, #0x30
 87c:	ret
 880:	mov	x0, x19
 884:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000888 <_ZN4llvm3mca12ExecuteStage10cycleStartEv>:
 888:	sub	sp, sp, #0x1c0
 88c:	stp	x29, x30, [sp, #384]
 890:	str	x28, [sp, #400]
 894:	stp	x22, x21, [sp, #416]
 898:	stp	x20, x19, [sp, #432]
 89c:	add	x29, sp, #0x180
 8a0:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 8a4:	ldr	d0, [x9]
 8a8:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 8ac:	mov	x19, x0
 8b0:	sub	x1, x29, #0x90
 8b4:	stur	d0, [x29, #-136]
 8b8:	ldr	d0, [x9]
 8bc:	sub	x9, x29, #0x90
 8c0:	add	x9, x9, #0x10
 8c4:	stur	x9, [x29, #-144]
 8c8:	add	x9, sp, #0xa0
 8cc:	add	x9, x9, #0x10
 8d0:	str	x9, [sp, #160]
 8d4:	add	x9, sp, #0x50
 8d8:	add	x9, x9, #0x10
 8dc:	str	x9, [sp, #80]
 8e0:	mov	x9, sp
 8e4:	add	x9, x9, #0x10
 8e8:	str	x9, [sp]
 8ec:	str	d0, [sp, #168]
 8f0:	str	d0, [sp, #88]
 8f4:	str	d0, [sp, #8]
 8f8:	ldr	x0, [x0, #64]
 8fc:	add	x2, sp, #0xa0
 900:	add	x3, sp, #0x50
 904:	mov	x4, sp
 908:	mov	x20, x8
 90c:	bl	0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>
 910:	str	xzr, [x19, #72]
 914:	ldur	w8, [x29, #-136]
 918:	cbz	w8, 93c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xb4>
 91c:	ldur	x21, [x29, #-144]
 920:	lsl	x22, x8, #4
 924:	mov	x0, x19
 928:	mov	x1, x21
 92c:	bl	a74 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>
 930:	subs	x22, x22, #0x10
 934:	add	x21, x21, #0x10
 938:	b.ne	924 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x9c>  // b.any
 93c:	ldr	w8, [sp, #168]
 940:	cbz	w8, 998 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x110>
 944:	ldr	x21, [sp, #160]
 948:	lsl	x22, x8, #4
 94c:	mov	x0, x19
 950:	mov	x1, x21
 954:	bl	5dc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
 958:	mov	x8, x20
 95c:	mov	x0, x19
 960:	mov	x1, x21
 964:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 968:	ldr	x9, [x20]
 96c:	tst	x9, #0xfffffffffffffffe
 970:	and	x8, x9, #0xfffffffffffffffe
 974:	cset	w9, ne  // ne = any
 978:	orr	x9, x8, x9
 97c:	str	x9, [x20]
 980:	cbnz	x8, 988 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x100>
 984:	cbnz	x9, a6c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1e4>
 988:	cbnz	x8, 9f4 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x16c>
 98c:	subs	x22, x22, #0x10
 990:	add	x21, x21, #0x10
 994:	b.ne	94c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xc4>  // b.any
 998:	ldr	w8, [sp, #88]
 99c:	cbz	w8, 9c0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x138>
 9a0:	ldr	x21, [sp, #80]
 9a4:	lsl	x22, x8, #4
 9a8:	mov	x0, x19
 9ac:	mov	x1, x21
 9b0:	bl	690 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 9b4:	subs	x22, x22, #0x10
 9b8:	add	x21, x21, #0x10
 9bc:	b.ne	9a8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x120>  // b.any
 9c0:	ldr	w8, [sp, #8]
 9c4:	cbz	w8, 9e8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x160>
 9c8:	ldr	x21, [sp]
 9cc:	lsl	x22, x8, #4
 9d0:	mov	x0, x19
 9d4:	mov	x1, x21
 9d8:	bl	744 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 9dc:	subs	x22, x22, #0x10
 9e0:	add	x21, x21, #0x10
 9e4:	b.ne	9d0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x148>  // b.any
 9e8:	mov	x8, x20
 9ec:	mov	x0, x19
 9f0:	bl	7f8 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>
 9f4:	ldr	x0, [sp]
 9f8:	mov	x8, sp
 9fc:	add	x8, x8, #0x10
 a00:	cmp	x0, x8
 a04:	b.eq	a0c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x184>  // b.none
 a08:	bl	0 <free>
 a0c:	ldr	x0, [sp, #80]
 a10:	add	x8, sp, #0x50
 a14:	add	x8, x8, #0x10
 a18:	cmp	x0, x8
 a1c:	b.eq	a24 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x19c>  // b.none
 a20:	bl	0 <free>
 a24:	ldr	x0, [sp, #160]
 a28:	add	x8, sp, #0xa0
 a2c:	add	x8, x8, #0x10
 a30:	cmp	x0, x8
 a34:	b.eq	a3c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1b4>  // b.none
 a38:	bl	0 <free>
 a3c:	ldur	x0, [x29, #-144]
 a40:	sub	x8, x29, #0x90
 a44:	add	x8, x8, #0x10
 a48:	cmp	x0, x8
 a4c:	b.eq	a54 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1cc>  // b.none
 a50:	bl	0 <free>
 a54:	ldp	x20, x19, [sp, #432]
 a58:	ldp	x22, x21, [sp, #416]
 a5c:	ldr	x28, [sp, #400]
 a60:	ldp	x29, x30, [sp, #384]
 a64:	add	sp, sp, #0x1c0
 a68:	ret
 a6c:	mov	x0, x20
 a70:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000a74 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>:
 a74:	stp	x29, x30, [sp, #-48]!
 a78:	str	x21, [sp, #16]
 a7c:	stp	x20, x19, [sp, #32]
 a80:	mov	x29, sp
 a84:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 a88:	ldr	x8, [x8]
 a8c:	mov	x19, x1
 a90:	mov	x20, x0
 a94:	ldrb	w8, [x8]
 a98:	cbz	w8, b08 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x94>
 a9c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 aa0:	add	x0, x0, #0x0
 aa4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 aa8:	tbz	w0, #0, b08 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x94>
 aac:	bl	0 <_ZN4llvm4dbgsEv>
 ab0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ab4:	add	x1, x1, #0x0
 ab8:	mov	w2, #0x19                  	// #25
 abc:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ac0:	ldr	x1, [x19]
 ac4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 ac8:	ldp	x9, x8, [x0, #16]
 acc:	cmp	x8, x9
 ad0:	b.cs	ae8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x74>  // b.hs, b.nlast
 ad4:	add	x9, x8, #0x1
 ad8:	mov	w10, #0x2e                  	// #46
 adc:	str	x9, [x0, #24]
 ae0:	strb	w10, [x8]
 ae4:	b	af0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x7c>
 ae8:	mov	w1, #0x2e                  	// #46
 aec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 af0:	ldr	x1, [x19, #8]
 af4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 af8:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 afc:	add	x1, x1, #0x0
 b00:	mov	w2, #0x2                   	// #2
 b04:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 b08:	ldr	x21, [x20, #40]
 b0c:	add	x20, x20, #0x18
 b10:	cmp	x21, x20
 b14:	b.eq	b40 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xcc>  // b.none
 b18:	ldr	x0, [x21, #32]
 b1c:	mov	x1, x19
 b20:	ldr	x8, [x0]
 b24:	ldr	x8, [x8, #40]
 b28:	blr	x8
 b2c:	mov	x0, x21
 b30:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 b34:	mov	x21, x0
 b38:	cmp	x0, x20
 b3c:	b.ne	b18 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xa4>  // b.any
 b40:	ldp	x20, x19, [sp, #32]
 b44:	ldr	x21, [sp, #16]
 b48:	ldp	x29, x30, [sp], #48
 b4c:	ret

0000000000000b50 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>:
 b50:	str	d8, [sp, #-64]!
 b54:	stp	x29, x30, [sp, #8]
 b58:	str	x28, [sp, #24]
 b5c:	stp	x22, x21, [sp, #32]
 b60:	stp	x20, x19, [sp, #48]
 b64:	mov	x29, sp
 b68:	sub	sp, sp, #0x1d0
 b6c:	ldrb	w9, [x0, #80]
 b70:	mov	x19, x8
 b74:	cbz	w9, c30 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xe0>
 b78:	mov	x20, x0
 b7c:	ldr	x0, [x0, #64]
 b80:	ldrb	w8, [x0, #140]
 b84:	cbnz	w8, b94 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x44>
 b88:	ldp	w8, w9, [x20, #72]
 b8c:	cmp	w8, w9
 b90:	b.ls	c30 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xe0>  // b.plast
 b94:	adrp	x8, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 b98:	ldr	d8, [x8]
 b9c:	sub	x8, x29, #0x90
 ba0:	add	x8, x8, #0x10
 ba4:	sub	x1, x29, #0x90
 ba8:	stur	x8, [x29, #-144]
 bac:	stur	d8, [x29, #-136]
 bb0:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>
 bb4:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
 bb8:	ldr	x22, [x22]
 bbc:	cbz	x0, c68 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x118>
 bc0:	ldrb	w8, [x22]
 bc4:	mov	x21, x0
 bc8:	cbz	w8, c44 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xf4>
 bcc:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 bd0:	add	x0, x0, #0x0
 bd4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 bd8:	tbz	w0, #0, c44 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xf4>
 bdc:	bl	0 <_ZN4llvm4dbgsEv>
 be0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 be4:	add	x1, x1, #0x0
 be8:	mov	w2, #0x46                  	// #70
 bec:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 bf0:	mov	w8, #0x10                  	// #16
 bf4:	mov	w9, #0x1                   	// #1
 bf8:	add	x1, sp, #0xb0
 bfc:	stp	x21, xzr, [sp, #176]
 c00:	str	w8, [sp, #192]
 c04:	strh	w9, [sp, #196]
 c08:	strb	w9, [sp, #198]
 c0c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 c10:	ldp	x9, x8, [x0, #16]
 c14:	cmp	x8, x9
 c18:	b.cs	c3c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xec>  // b.hs, b.nlast
 c1c:	add	x9, x8, #0x1
 c20:	mov	w10, #0xa                   	// #10
 c24:	str	x9, [x0, #24]
 c28:	strb	w10, [x8]
 c2c:	b	c44 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xf4>
 c30:	mov	w8, #0x1                   	// #1
 c34:	str	x8, [x19]
 c38:	b	d98 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x248>
 c3c:	mov	w1, #0xa                   	// #10
 c40:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 c44:	ldur	x8, [x29, #-144]
 c48:	ldur	w9, [x29, #-136]
 c4c:	mov	w10, #0x1                   	// #1
 c50:	add	x1, sp, #0xb0
 c54:	mov	x0, x20
 c58:	str	w10, [sp, #176]
 c5c:	stp	x8, x9, [sp, #184]
 c60:	str	x21, [sp, #200]
 c64:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 c68:	add	x8, sp, #0xb0
 c6c:	add	x9, sp, #0x20
 c70:	add	x8, x8, #0x10
 c74:	add	x9, x9, #0x10
 c78:	str	d8, [sp, #184]
 c7c:	str	x8, [sp, #176]
 c80:	str	x9, [sp, #32]
 c84:	str	d8, [sp, #40]
 c88:	ldr	x0, [x20, #64]
 c8c:	add	x1, sp, #0xb0
 c90:	add	x2, sp, #0x20
 c94:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>
 c98:	ldr	w8, [sp, #184]
 c9c:	cbz	w8, cf0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1a0>
 ca0:	ldrb	w8, [x22]
 ca4:	cbz	w8, ccc <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x17c>
 ca8:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 cac:	add	x0, x0, #0x0
 cb0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 cb4:	tbz	w0, #0, ccc <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x17c>
 cb8:	bl	0 <_ZN4llvm4dbgsEv>
 cbc:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 cc0:	add	x1, x1, #0x0
 cc4:	mov	w2, #0x34                  	// #52
 cc8:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ccc:	ldr	x8, [sp, #176]
 cd0:	ldr	w9, [sp, #184]
 cd4:	mov	w10, #0x2                   	// #2
 cd8:	mov	x1, sp
 cdc:	mov	x0, x20
 ce0:	str	w10, [sp]
 ce4:	stp	x8, x9, [sp, #8]
 ce8:	str	xzr, [sp, #24]
 cec:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 cf0:	ldr	w8, [sp, #40]
 cf4:	cbz	w8, d48 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1f8>
 cf8:	ldrb	w8, [x22]
 cfc:	cbz	w8, d24 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1d4>
 d00:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d04:	add	x0, x0, #0x0
 d08:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 d0c:	tbz	w0, #0, d24 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1d4>
 d10:	bl	0 <_ZN4llvm4dbgsEv>
 d14:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d18:	add	x1, x1, #0x0
 d1c:	mov	w2, #0x32                  	// #50
 d20:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d24:	ldr	x8, [sp, #32]
 d28:	ldr	w9, [sp, #40]
 d2c:	mov	w10, #0x3                   	// #3
 d30:	mov	x1, sp
 d34:	mov	x0, x20
 d38:	str	w10, [sp]
 d3c:	stp	x8, x9, [sp, #8]
 d40:	str	xzr, [sp, #24]
 d44:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d48:	ldr	x0, [sp, #32]
 d4c:	add	x9, sp, #0x20
 d50:	add	x9, x9, #0x10
 d54:	mov	w8, #0x1                   	// #1
 d58:	cmp	x0, x9
 d5c:	str	x8, [x19]
 d60:	b.eq	d68 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x218>  // b.none
 d64:	bl	0 <free>
 d68:	ldr	x0, [sp, #176]
 d6c:	add	x8, sp, #0xb0
 d70:	add	x8, x8, #0x10
 d74:	cmp	x0, x8
 d78:	b.eq	d80 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x230>  // b.none
 d7c:	bl	0 <free>
 d80:	ldur	x0, [x29, #-144]
 d84:	sub	x8, x29, #0x90
 d88:	add	x8, x8, #0x10
 d8c:	cmp	x0, x8
 d90:	b.eq	d98 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x248>  // b.none
 d94:	bl	0 <free>
 d98:	add	sp, sp, #0x1d0
 d9c:	ldp	x20, x19, [sp, #48]
 da0:	ldp	x22, x21, [sp, #32]
 da4:	ldr	x28, [sp, #24]
 da8:	ldp	x29, x30, [sp, #8]
 dac:	ldr	d8, [sp], #64
 db0:	ret

0000000000000db4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>:
 db4:	stp	x29, x30, [sp, #-48]!
 db8:	str	x21, [sp, #16]
 dbc:	stp	x20, x19, [sp, #32]
 dc0:	mov	x29, sp
 dc4:	ldr	x9, [x1, #8]
 dc8:	ldrb	w10, [x9, #840]
 dcc:	cbz	w10, e70 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xbc>
 dd0:	mov	x21, x8
 dd4:	ldr	w8, [x9, #784]
 dd8:	cmp	w8, #0x3
 ddc:	b.ne	e90 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xdc>  // b.any
 de0:	ldr	x8, [x9]
 de4:	ldrb	w9, [x8, #324]
 de8:	cbnz	w9, e50 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x9c>
 dec:	ldrb	w8, [x8, #325]
 df0:	cbnz	w8, e50 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x9c>
 df4:	mov	x19, x1
 df8:	mov	x20, x0
 dfc:	bl	690 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 e00:	mov	x0, x20
 e04:	mov	x1, x19
 e08:	bl	744 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 e0c:	mov	x0, x20
 e10:	mov	x1, x19
 e14:	mov	x2, xzr
 e18:	mov	x3, xzr
 e1c:	bl	3d4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
 e20:	ldr	x0, [x19, #8]
 e24:	bl	0 <_ZN4llvm3mca11Instruction13forceExecutedEv>
 e28:	mov	x0, x20
 e2c:	mov	x1, x19
 e30:	bl	5dc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
 e34:	mov	x8, x21
 e38:	mov	x0, x20
 e3c:	mov	x1, x19
 e40:	ldp	x20, x19, [sp, #32]
 e44:	ldr	x21, [sp, #16]
 e48:	ldp	x29, x30, [sp], #48
 e4c:	b	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e50:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e54:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e58:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e5c:	add	x0, x0, #0x0
 e60:	add	x1, x1, #0x0
 e64:	add	x3, x3, #0x0
 e68:	mov	w2, #0xa9                  	// #169
 e6c:	bl	0 <__assert_fail>
 e70:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e74:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e78:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e7c:	add	x0, x0, #0x0
 e80:	add	x1, x1, #0x0
 e84:	add	x3, x3, #0x0
 e88:	mov	w2, #0xa3                  	// #163
 e8c:	bl	0 <__assert_fail>
 e90:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e94:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e98:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e9c:	add	x0, x0, #0x0
 ea0:	add	x1, x1, #0x0
 ea4:	add	x3, x3, #0x0
 ea8:	mov	w2, #0xa4                  	// #164
 eac:	bl	0 <__assert_fail>

0000000000000eb0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE>:
 eb0:	stp	x29, x30, [sp, #-64]!
 eb4:	str	x23, [sp, #16]
 eb8:	stp	x22, x21, [sp, #32]
 ebc:	stp	x20, x19, [sp, #48]
 ec0:	mov	x29, sp
 ec4:	mov	x20, x1
 ec8:	mov	x21, x0
 ecc:	mov	x19, x8
 ed0:	bl	3c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>
 ed4:	tbz	w0, #0, fc8 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x118>
 ed8:	ldr	x0, [x21, #64]
 edc:	mov	x1, x20
 ee0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ee4:	ldr	x8, [x20, #8]
 ee8:	ldrb	w8, [x8, #840]
 eec:	cbz	w8, f10 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x60>
 ef0:	mov	x8, x19
 ef4:	mov	x0, x21
 ef8:	mov	x1, x20
 efc:	ldp	x20, x19, [sp, #48]
 f00:	ldp	x22, x21, [sp, #32]
 f04:	ldr	x23, [sp, #16]
 f08:	ldp	x29, x30, [sp], #64
 f0c:	b	db4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>
 f10:	ldr	x0, [x21, #64]
 f14:	mov	x1, x20
 f18:	bl	0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>
 f1c:	ldr	x23, [x20, #8]
 f20:	ldr	w9, [x21, #72]
 f24:	mov	w22, w0
 f28:	mov	w2, #0x1                   	// #1
 f2c:	ldr	x8, [x23]
 f30:	mov	x0, x21
 f34:	mov	x1, x20
 f38:	ldr	w8, [x8, #316]
 f3c:	add	w8, w9, w8
 f40:	str	w8, [x21, #72]
 f44:	bl	24c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
 f48:	tbz	w22, #0, f94 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xe4>
 f4c:	mov	x0, x21
 f50:	mov	x1, x20
 f54:	bl	690 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 f58:	mov	x0, x21
 f5c:	mov	x1, x20
 f60:	bl	744 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 f64:	ldr	x0, [x21, #64]
 f68:	mov	x1, x20
 f6c:	bl	0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
 f70:	tbz	w0, #0, fac <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xfc>
 f74:	mov	x8, x19
 f78:	mov	x0, x21
 f7c:	mov	x1, x20
 f80:	ldp	x20, x19, [sp, #48]
 f84:	ldp	x22, x21, [sp, #32]
 f88:	ldr	x23, [sp, #16]
 f8c:	ldp	x29, x30, [sp], #64
 f90:	b	94 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
 f94:	ldr	w8, [x23, #784]
 f98:	cmp	w8, #0x2
 f9c:	b.ne	fac <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xfc>  // b.any
 fa0:	mov	x0, x21
 fa4:	mov	x1, x20
 fa8:	bl	690 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 fac:	mov	w8, #0x1                   	// #1
 fb0:	str	x8, [x19]
 fb4:	ldp	x20, x19, [sp, #48]
 fb8:	ldp	x22, x21, [sp, #32]
 fbc:	ldr	x23, [sp, #16]
 fc0:	ldp	x29, x30, [sp], #64
 fc4:	ret
 fc8:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 fcc:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 fd0:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 fd4:	add	x0, x0, #0x0
 fd8:	add	x1, x1, #0x0
 fdc:	add	x3, x3, #0x0
 fe0:	mov	w2, #0xbb                  	// #187
 fe4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #40]
  14:	add	x21, x0, #0x18
  18:	cmp	x20, x21
  1c:	b.eq	4c <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_+0x4c>  // b.none
  20:	mov	x19, x1
  24:	ldr	x0, [x20, #32]
  28:	mov	x1, x19
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #24]
  34:	blr	x8
  38:	mov	x0, x20
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x20, x0
  44:	cmp	x0, x21
  48:	b.ne	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_+0x24>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x0, [x0, #8]
  18:	cbz	x0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  1c:	mov	x20, x8
  20:	ldr	x8, [x0]
  24:	mov	x19, x1
  28:	ldr	x8, [x8, #16]
  2c:	blr	x8
  30:	tbz	w0, #0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  34:	ldr	x0, [x21, #8]
  38:	mov	x1, x19
  3c:	ldr	x21, [sp, #16]
  40:	ldr	x8, [x0]
  44:	ldr	x2, [x8, #48]
  48:	mov	x8, x20
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	br	x2
  58:	adrp	x0, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  5c:	adrp	x1, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  60:	adrp	x3, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x47                  	// #71
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #40]
  14:	add	x21, x0, #0x18
  18:	cmp	x20, x21
  1c:	b.eq	4c <_ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_+0x4c>  // b.none
  20:	mov	x19, x1
  24:	ldr	x0, [x20, #32]
  28:	mov	x1, x19
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #32]
  34:	blr	x8
  38:	mov	x0, x20
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x20, x0
  44:	cmp	x0, x21
  48:	b.ne	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_+0x24>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x8, [x19, #40]
  14:	ldr	x0, [x0, #32]
  18:	mov	x20, x1
  1c:	mov	x2, x20
  20:	mov	x1, x8
  24:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  28:	ldr	x8, [x19, #40]
  2c:	cmp	x8, x0
  30:	b.ne	70 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x70>  // b.any
  34:	ldp	x0, x1, [x19, #80]
  38:	mov	x2, x20
  3c:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  40:	ldr	x8, [x19, #88]
  44:	cmp	x8, x0
  48:	b.ne	90 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x90>  // b.any
  4c:	ldp	x0, x1, [x19, #104]
  50:	mov	x2, x20
  54:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  58:	ldr	x8, [x19, #112]
  5c:	cmp	x8, x0
  60:	b.ne	b0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0xb0>  // b.any
  64:	ldp	x20, x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  74:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  78:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x10e                 	// #270
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  94:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  98:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x10f                 	// #271
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  b4:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  b8:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x110                 	// #272
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #40]
  14:	add	x21, x0, #0x18
  18:	cmp	x20, x21
  1c:	b.eq	4c <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x4c>  // b.none
  20:	mov	x19, x1
  24:	ldr	x0, [x20, #32]
  28:	mov	x1, x19
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x20
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x20, x0
  44:	cmp	x0, x21
  48:	b.ne	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x24>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD0Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	sub	x11, x1, x0
   4:	cmp	x11, #0x40
   8:	b.lt	98 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x98>  // b.tstop
   c:	ldr	w9, [x2]
  10:	ldr	x10, [x2, #8]
  14:	lsr	x8, x11, #6
  18:	add	x11, x8, #0x1
  1c:	mov	x8, x0
  20:	ldr	w12, [x8]
  24:	cmp	w12, w9
  28:	b.ne	38 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x38>  // b.any
  2c:	ldr	x12, [x8, #8]
  30:	cmp	x12, x10
  34:	b.eq	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>  // b.none
  38:	ldr	w12, [x8, #16]
  3c:	cmp	w12, w9
  40:	b.ne	50 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x50>  // b.any
  44:	ldr	x12, [x8, #24]
  48:	cmp	x12, x10
  4c:	b.eq	130 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x130>  // b.none
  50:	ldr	w12, [x8, #32]
  54:	cmp	w12, w9
  58:	b.ne	68 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x68>  // b.any
  5c:	ldr	x12, [x8, #40]
  60:	cmp	x12, x10
  64:	b.eq	138 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x138>  // b.none
  68:	ldr	w12, [x8, #48]
  6c:	cmp	w12, w9
  70:	b.ne	80 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x80>  // b.any
  74:	ldr	x12, [x8, #56]
  78:	cmp	x12, x10
  7c:	b.eq	140 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x140>  // b.none
  80:	sub	x11, x11, #0x1
  84:	cmp	x11, #0x1
  88:	add	x8, x8, #0x40
  8c:	b.gt	20 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x20>
  90:	sub	x11, x1, x8
  94:	mov	x0, x8
  98:	asr	x8, x11, #4
  9c:	cmp	x8, #0x3
  a0:	b.eq	d0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd0>  // b.none
  a4:	cmp	x8, #0x2
  a8:	b.eq	c4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xc4>  // b.none
  ac:	cmp	x8, #0x1
  b0:	mov	x8, x1
  b4:	b.ne	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>  // b.any
  b8:	ldr	w8, [x2]
  bc:	ldr	x9, [x2, #8]
  c0:	b	118 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x118>
  c4:	ldr	w8, [x2]
  c8:	ldr	x9, [x2, #8]
  cc:	b	f4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xf4>
  d0:	ldr	w10, [x0]
  d4:	ldr	w8, [x2]
  d8:	ldr	x9, [x2, #8]
  dc:	cmp	w10, w8
  e0:	b.ne	f0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xf0>  // b.any
  e4:	ldr	x10, [x0, #8]
  e8:	cmp	x10, x9
  ec:	b.eq	10c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x10c>  // b.none
  f0:	add	x0, x0, #0x10
  f4:	ldr	w10, [x0]
  f8:	cmp	w10, w8
  fc:	b.ne	114 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x114>  // b.any
 100:	ldr	x10, [x0, #8]
 104:	cmp	x10, x9
 108:	b.ne	114 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x114>  // b.any
 10c:	mov	x8, x0
 110:	b	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>
 114:	add	x0, x0, #0x10
 118:	ldr	x10, [x0, #8]
 11c:	ldr	w11, [x0]
 120:	cmp	x10, x9
 124:	ccmp	w11, w8, #0x0, eq  // eq = none
 128:	csel	x8, x0, x1, eq  // eq = none
 12c:	b	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>
 130:	add	x8, x8, #0x10
 134:	b	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>
 138:	add	x8, x8, #0x20
 13c:	b	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>
 140:	add	x8, x8, #0x30
 144:	mov	x0, x8
 148:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6assignEmRKj:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x21, x1
  20:	cmp	x8, x1
  24:	str	wzr, [x0, #8]
  28:	b.cs	44 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x44>  // b.hs, b.nlast
  2c:	add	x1, x20, #0x10
  30:	mov	w3, #0x4                   	// #4
  34:	mov	x0, x20
  38:	mov	x2, x21
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x20, #12]
  44:	cmp	x8, x21
  48:	b.cc	80 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x80>  // b.lo, b.ul, b.last
  4c:	ands	x10, x21, #0xffffffff
  50:	str	w21, [x20, #8]
  54:	b.eq	70 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x70>  // b.none
  58:	ldr	x8, [x20]
  5c:	ldr	w9, [x19]
  60:	lsl	x10, x10, #2
  64:	subs	x10, x10, #0x4
  68:	str	w9, [x8], #4
  6c:	b.ne	64 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x64>  // b.any
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

InstructionTables.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>:
   0:	sub	sp, sp, #0xd0
   4:	stp	x29, x30, [sp, #112]
   8:	stp	x28, x27, [sp, #128]
   c:	stp	x26, x25, [sp, #144]
  10:	stp	x24, x23, [sp, #160]
  14:	stp	x22, x21, [sp, #176]
  18:	stp	x20, x19, [sp, #192]
  1c:	add	x29, sp, #0x70
  20:	ldr	x9, [x1, #8]
  24:	mov	x25, x0
  28:	mov	x19, x8
  2c:	ldr	x10, [x9]
  30:	str	wzr, [x0, #80]
  34:	ldr	w9, [x10, #184]
  38:	cbz	w9, 1c0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1c0>
  3c:	stp	x1, x19, [sp, #8]
  40:	ldr	x11, [x10, #176]
  44:	mov	w8, #0x18                  	// #24
  48:	add	x10, sp, #0x38
  4c:	add	x22, x25, #0x48
  50:	add	x10, x10, #0x8
  54:	madd	x8, x9, x8, x11
  58:	mov	w19, #0x1                   	// #1
  5c:	stp	x8, x10, [sp, #24]
  60:	ldr	x8, [x11]
  64:	str	x11, [sp, #40]
  68:	str	x8, [sp, #56]
  6c:	ldur	q0, [x11, #8]
  70:	ldr	x8, [sp, #32]
  74:	str	q0, [x8]
  78:	ldp	w9, w8, [sp, #64]
  7c:	subs	w20, w8, w9
  80:	b.eq	1a0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1a0>  // b.none
  84:	ldr	x23, [x25, #184]
  88:	ldr	w8, [x25, #192]
  8c:	add	x2, sp, #0x38
  90:	mov	x0, x23
  94:	add	x1, x23, x8, lsl #3
  98:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
  9c:	ldr	x8, [x25, #64]
  a0:	sub	x24, x0, x23
  a4:	lsr	x1, x24, #3
  a8:	mov	x0, x8
  ac:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
  b0:	ldr	x8, [x0, #24]
  b4:	ldr	w21, [x0, #8]
  b8:	str	x0, [sp, #48]
  bc:	cbz	x8, 168 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x168>
  c0:	cbz	w21, 1a0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1a0>
  c4:	mov	x27, xzr
  c8:	mov	w28, w20
  cc:	ldr	w24, [x8, x27, lsl #2]
  d0:	ldr	x0, [x25, #64]
  d4:	mov	x23, x25
  d8:	mov	w1, w24
  dc:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
  e0:	ldr	w20, [x0, #8]
  e4:	cbz	w20, 14c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x14c>
  e8:	mul	w8, w20, w21
  ec:	mov	x9, x28
  f0:	mov	x25, x0
  f4:	bfi	x9, x8, #32, #32
  f8:	sub	x1, x29, #0x18
  fc:	mov	x0, x22
 100:	stp	x24, x19, [x29, #-24]
 104:	stur	x9, [x29, #-8]
 108:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 10c:	cmp	w20, #0x1
 110:	b.eq	14c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x14c>  // b.none
 114:	mov	w26, #0x1                   	// #1
 118:	ldr	w8, [x25, #8]
 11c:	lsl	w9, w19, w26
 120:	stp	x24, x9, [x29, #-24]
 124:	mov	x9, x28
 128:	mul	w8, w8, w21
 12c:	bfi	x9, x8, #32, #32
 130:	sub	x1, x29, #0x18
 134:	mov	x0, x22
 138:	stur	x9, [x29, #-8]
 13c:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 140:	add	w26, w26, #0x1
 144:	cmp	w20, w26
 148:	b.ne	118 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x118>  // b.any
 14c:	add	x27, x27, #0x1
 150:	cmp	x27, x21
 154:	mov	x25, x23
 158:	b.eq	1a0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1a0>  // b.none
 15c:	ldr	x8, [sp, #48]
 160:	ldr	x8, [x8, #24]
 164:	b	cc <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xcc>
 168:	cbz	w21, 1a0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1a0>
 16c:	mov	w20, w20
 170:	mov	w23, wzr
 174:	ubfx	x24, x24, #3, #32
 178:	bfi	x20, x21, #32, #32
 17c:	lsl	w8, w19, w23
 180:	sub	x1, x29, #0x18
 184:	mov	x0, x22
 188:	stp	x24, x8, [x29, #-24]
 18c:	stur	x20, [x29, #-8]
 190:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 194:	add	w23, w23, #0x1
 198:	cmp	w21, w23
 19c:	b.ne	17c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x17c>  // b.any
 1a0:	ldr	x11, [sp, #40]
 1a4:	ldr	x8, [sp, #24]
 1a8:	add	x11, x11, #0x18
 1ac:	cmp	x11, x8
 1b0:	b.ne	60 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x60>  // b.any
 1b4:	ldr	w8, [x25, #80]
 1b8:	ldp	x1, x19, [sp, #8]
 1bc:	b	1c4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1c4>
 1c0:	mov	x8, xzr
 1c4:	ldr	x9, [x25, #72]
 1c8:	mov	w10, #0x4                   	// #4
 1cc:	mov	x0, x25
 1d0:	str	w10, [sp, #56]
 1d4:	stp	x1, x9, [sp, #64]
 1d8:	add	x1, sp, #0x38
 1dc:	str	x8, [sp, #80]
 1e0:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 1e4:	mov	w8, #0x1                   	// #1
 1e8:	str	x8, [x19]
 1ec:	ldp	x20, x19, [sp, #192]
 1f0:	ldp	x22, x21, [sp, #176]
 1f4:	ldp	x24, x23, [sp, #160]
 1f8:	ldp	x26, x25, [sp, #144]
 1fc:	ldp	x28, x27, [sp, #128]
 200:	ldp	x29, x30, [sp, #112]
 204:	add	sp, sp, #0xd0
 208:	ret

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	ldr	w8, [x0, #48]
  14:	cmp	w8, w1
  18:	b.ls	50 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x50>  // b.plast
  1c:	ldr	x8, [x0, #32]
  20:	mov	w9, w1
  24:	add	x0, x8, x9, lsl #5
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  34:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  38:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x154                 	// #340
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  54:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  58:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x156                 	// #342
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	6c <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x6c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20, #16]
  28:	ldr	q0, [x20]
  2c:	mov	w11, #0x18                  	// #24
  30:	umaddl	x8, w8, w11, x9
  34:	str	x10, [x8, #16]
  38:	str	q0, [x8]
  3c:	ldp	w8, w9, [x19, #8]
  40:	cmp	w8, w9
  44:	b.cs	80 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x80>  // b.hs, b.nlast
  48:	ldr	x9, [x19]
  4c:	add	x8, x8, #0x1
  50:	str	w8, [x19, #8]
  54:	ldp	x20, x19, [sp, #16]
  58:	mov	w10, #0x18                  	// #24
  5c:	madd	x9, x8, x10, x9
  60:	sub	x0, x9, #0x18
  64:	ldp	x29, x30, [sp], #32
  68:	ret
  6c:	mov	x0, x19
  70:	mov	x1, xzr
  74:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  78:	ldr	w8, [x19, #8]
  7c:	b	20 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x20>
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_24HWInstructionIssuedEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_24HWInstructionIssuedEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #40]
  14:	add	x21, x0, #0x18
  18:	cmp	x20, x21
  1c:	b.eq	4c <_ZNK4llvm3mca5Stage11notifyEventINS0_24HWInstructionIssuedEventEEEvRKT_+0x4c>  // b.none
  20:	mov	x19, x1
  24:	ldr	x0, [x20, #32]
  28:	mov	x1, x19
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x20
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x20, x0
  44:	cmp	x0, x21
  48:	b.ne	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_24HWInstructionIssuedEventEEEvRKT_+0x24>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD2Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17InstructionTablesD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #184]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0xc8
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x8, x19, #0x58
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD2Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD0Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17InstructionTablesD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #184]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0xc8
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x8, x19, #0x58
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  50:	mov	x0, x19
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag>:
   0:	sub	x9, x1, x0
   4:	cmp	x9, #0x20
   8:	b.lt	64 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0x64>  // b.tstop
   c:	ldr	x8, [x2]
  10:	lsr	x9, x9, #5
  14:	add	x9, x9, #0x1
  18:	add	x0, x0, #0x10
  1c:	ldur	x10, [x0, #-16]
  20:	cmp	x10, x8
  24:	b.eq	c8 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xc8>  // b.none
  28:	ldur	x10, [x0, #-8]
  2c:	cmp	x10, x8
  30:	b.eq	d0 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xd0>  // b.none
  34:	ldr	x10, [x0]
  38:	cmp	x10, x8
  3c:	b.eq	cc <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xcc>  // b.none
  40:	ldr	x10, [x0, #8]
  44:	cmp	x10, x8
  48:	b.eq	d8 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xd8>  // b.none
  4c:	sub	x9, x9, #0x1
  50:	cmp	x9, #0x1
  54:	add	x0, x0, #0x20
  58:	b.gt	1c <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0x1c>
  5c:	sub	x0, x0, #0x10
  60:	sub	x9, x1, x0
  64:	asr	x8, x9, #3
  68:	cmp	x8, #0x3
  6c:	b.eq	90 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0x90>  // b.none
  70:	cmp	x8, #0x2
  74:	b.eq	88 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0x88>  // b.none
  78:	cmp	x8, #0x1
  7c:	b.ne	c0 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xc0>  // b.any
  80:	ldr	x8, [x2]
  84:	b	b4 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xb4>
  88:	ldr	x8, [x2]
  8c:	b	a4 <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xa4>
  90:	ldr	x9, [x0]
  94:	ldr	x8, [x2]
  98:	cmp	x9, x8
  9c:	b.eq	cc <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xcc>  // b.none
  a0:	add	x0, x0, #0x8
  a4:	ldr	x9, [x0]
  a8:	cmp	x9, x8
  ac:	b.eq	cc <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xcc>  // b.none
  b0:	add	x0, x0, #0x8
  b4:	ldr	x9, [x0]
  b8:	cmp	x9, x8
  bc:	b.eq	cc <_ZSt9__find_ifIPmN9__gnu_cxx5__ops16_Iter_equals_valIKmEEET_S6_S6_T0_St26random_access_iterator_tag+0xcc>  // b.none
  c0:	mov	x0, x1
  c4:	ret
  c8:	sub	x0, x0, #0x10
  cc:	ret
  d0:	sub	x0, x0, #0x8
  d4:	ret
  d8:	add	x0, x0, #0x8
  dc:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

MicroOpQueueStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w9, [x0, #212]
  14:	ldr	w10, [x0, #72]
  18:	cmp	w10, w9
  1c:	b.ls	118 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x118>  // b.plast
  20:	mov	x20, x8
  24:	ldr	x8, [x0, #64]
  28:	mov	x19, x0
  2c:	ldr	q0, [x8, x9, lsl #4]
  30:	str	q0, [sp]
  34:	ldr	x8, [sp, #8]
  38:	cbz	x8, f8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xf8>
  3c:	ldr	x0, [x19, #8]
  40:	cbz	x0, f8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xf8>
  44:	ldr	x8, [x0]
  48:	mov	x1, sp
  4c:	ldr	x8, [x8, #16]
  50:	blr	x8
  54:	tbz	w0, #0, f8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xf8>
  58:	mov	x1, sp
  5c:	mov	x8, x20
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
  68:	ldr	x9, [x20]
  6c:	tst	x9, #0xfffffffffffffffe
  70:	and	x8, x9, #0xfffffffffffffffe
  74:	cset	w9, ne  // ne = any
  78:	orr	x9, x8, x9
  7c:	str	x9, [x20]
  80:	cbnz	x8, 88 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x88>
  84:	cbnz	x9, 110 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x110>
  88:	cbnz	x8, 100 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x100>
  8c:	ldr	w8, [x19, #212]
  90:	ldr	w9, [x19, #72]
  94:	cmp	w9, w8
  98:	b.ls	118 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x118>  // b.plast
  9c:	ldr	x10, [x19, #64]
  a0:	add	x11, x10, x8, lsl #4
  a4:	str	xzr, [x11, #8]
  a8:	ldr	x11, [sp, #8]
  ac:	ldr	w12, [x19, #224]
  b0:	ldr	x11, [x11]
  b4:	ldr	w11, [x11, #316]
  b8:	cmp	w11, w9
  bc:	csel	w11, w11, w9, cc  // cc = lo, ul, last
  c0:	cmp	w11, #0x0
  c4:	csinc	w11, w11, wzr, ne  // ne = any
  c8:	add	w8, w11, w8
  cc:	add	w11, w12, w11
  d0:	udiv	w12, w8, w9
  d4:	msub	w8, w12, w9, w8
  d8:	str	w11, [x19, #224]
  dc:	str	w8, [x19, #212]
  e0:	add	x8, x10, w8, uxtw #4
  e4:	ldr	w9, [x8]
  e8:	str	w9, [sp]
  ec:	ldr	x8, [x8, #8]
  f0:	str	x8, [sp, #8]
  f4:	cbnz	x8, 3c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x3c>
  f8:	mov	w8, #0x1                   	// #1
  fc:	str	x8, [x20]
 100:	ldp	x20, x19, [sp, #32]
 104:	ldp	x29, x30, [sp, #16]
 108:	add	sp, sp, #0x30
 10c:	ret
 110:	mov	x0, x20
 114:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 118:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 11c:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 120:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x95                  	// #149
 134:	bl	0 <__assert_fail>

0000000000000138 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>:
 138:	stp	x29, x30, [sp, #-32]!
 13c:	str	x19, [sp, #16]
 140:	mov	x29, sp
 144:	str	xzr, [x0, #8]
 148:	adrp	x10, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 14c:	ldr	x10, [x10]
 150:	adrp	x11, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 154:	ldr	d0, [x11]
 158:	mov	x9, x0
 15c:	add	x11, x0, #0x50
 160:	str	wzr, [x9, #24]!
 164:	add	x10, x10, #0x10
 168:	cmp	w1, #0x0
 16c:	mov	x19, x0
 170:	and	w8, w3, #0x1
 174:	str	x10, [x0]
 178:	stp	xzr, x9, [x0, #32]
 17c:	stp	x9, xzr, [x0, #48]
 180:	str	x11, [x0, #64]!
 184:	csinc	w1, w1, wzr, ne  // ne = any
 188:	str	xzr, [x19, #208]
 18c:	stp	w2, wzr, [x19, #216]
 190:	strb	w8, [x19, #228]
 194:	str	d0, [x19, #72]
 198:	bl	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 19c:	ldr	w8, [x19, #72]
 1a0:	str	w8, [x19, #224]
 1a4:	ldr	x19, [sp, #16]
 1a8:	ldp	x29, x30, [sp], #32
 1ac:	ret

00000000000001b0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>:
 1b0:	stp	x29, x30, [sp, #-16]!
 1b4:	mov	x29, sp
 1b8:	ldr	w9, [x0, #208]
 1bc:	ldr	w10, [x0, #72]
 1c0:	cmp	w10, w9
 1c4:	b.ls	230 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE+0x80>  // b.plast
 1c8:	ldr	x11, [x0, #64]
 1cc:	ldr	w12, [x1]
 1d0:	add	x11, x11, x9, lsl #4
 1d4:	str	w12, [x11]
 1d8:	ldr	x12, [x1, #8]
 1dc:	str	x12, [x11, #8]
 1e0:	ldr	x11, [x1, #8]
 1e4:	ldp	w12, w13, [x0, #220]
 1e8:	ldr	x11, [x11]
 1ec:	add	w12, w12, #0x1
 1f0:	ldr	w11, [x11, #316]
 1f4:	str	w12, [x0, #220]
 1f8:	mov	w12, #0x1                   	// #1
 1fc:	cmp	w11, w10
 200:	csel	w11, w11, w10, cc  // cc = lo, ul, last
 204:	cmp	w11, #0x0
 208:	csinc	w11, w11, wzr, ne  // ne = any
 20c:	add	w9, w11, w9
 210:	sub	w11, w13, w11
 214:	udiv	w13, w9, w10
 218:	msub	w9, w13, w10, w9
 21c:	str	w11, [x0, #224]
 220:	str	w9, [x0, #208]
 224:	str	x12, [x8]
 228:	ldp	x29, x30, [sp], #16
 22c:	ret
 230:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 234:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 238:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 23c:	add	x0, x0, #0x0
 240:	add	x1, x1, #0x0
 244:	add	x3, x3, #0x0
 248:	mov	w2, #0x95                  	// #149
 24c:	bl	0 <__assert_fail>

0000000000000250 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv>:
 250:	ldrb	w9, [x0, #228]
 254:	str	wzr, [x0, #220]
 258:	cbz	w9, 268 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv+0x18>
 25c:	mov	w9, #0x1                   	// #1
 260:	str	x9, [x8]
 264:	ret
 268:	b	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>

000000000000026c <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv>:
 26c:	ldrb	w9, [x0, #228]
 270:	cbz	w9, 278 <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv+0xc>
 274:	b	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 278:	mov	w9, #0x1                   	// #1
 27c:	str	x9, [x8]
 280:	ret

Disassembly of section .text._ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x0, [x0, #8]
  18:	cbz	x0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  1c:	mov	x20, x8
  20:	ldr	x8, [x0]
  24:	mov	x19, x1
  28:	ldr	x8, [x8, #16]
  2c:	blr	x8
  30:	tbz	w0, #0, 58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>
  34:	ldr	x0, [x21, #8]
  38:	mov	x1, x19
  3c:	ldr	x21, [sp, #16]
  40:	ldr	x8, [x0]
  44:	ldr	x2, [x8, #48]
  48:	mov	x8, x20
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	br	x2
  58:	adrp	x0, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  5c:	adrp	x1, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  60:	adrp	x3, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x47                  	// #71
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	8c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x8c>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	80 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x80>
  34:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x80>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	54 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x54>  // b.hs, b.nlast
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm>
  50:	ldr	w8, [x19, #8]
  54:	cmp	x8, x20
  58:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x20>  // b.none
  5c:	ldr	x10, [x19]
  60:	add	x9, x10, x20, lsl #4
  64:	add	x8, x10, x8, lsl #4
  68:	str	wzr, [x8]
  6c:	str	xzr, [x8, #8]
  70:	add	x8, x8, #0x10
  74:	cmp	x8, x9
  78:	b.ne	68 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x68>  // b.any
  7c:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm+0x20>
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm>
  90:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm>
  94:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6resizeEm>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x43                  	// #67
  a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD2Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17MicroOpQueueStageD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x50
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD0Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x50
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE>:
   0:	ldr	w8, [x0, #216]
   4:	cbz	w8, 1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>
   8:	ldr	w9, [x0, #220]
   c:	cmp	w9, w8
  10:	b.ne	1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>  // b.any
  14:	mov	w0, wzr
  18:	ret
  1c:	ldr	x8, [x1, #8]
  20:	ldr	w9, [x0, #72]
  24:	ldr	w10, [x0, #224]
  28:	ldr	x8, [x8]
  2c:	ldr	w8, [x8, #316]
  30:	cmp	w8, w9
  34:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  38:	cmp	w8, #0x0
  3c:	csinc	w8, w8, wzr, ne  // ne = any
  40:	cmp	w8, w10
  44:	cset	w0, ls  // ls = plast
  48:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv>:
   0:	ldr	w8, [x0, #224]
   4:	ldr	w9, [x0, #72]
   8:	cmp	w9, w8
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

RetireStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11RetireStage10cycleStartEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	mov	x20, x8
  1c:	ldp	w10, w9, [x0, #16]
  20:	cmp	w9, w10
  24:	b.eq	6c <_ZN4llvm3mca11RetireStage10cycleStartEv+0x6c>  // b.none
  28:	ldr	w21, [x0, #24]
  2c:	mov	w22, w21
  30:	cbz	w21, 38 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x38>
  34:	cbz	w22, 6c <_ZN4llvm3mca11RetireStage10cycleStartEv+0x6c>
  38:	bl	0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
  3c:	ldrb	w8, [x0, #20]
  40:	cbz	w8, 6c <_ZN4llvm3mca11RetireStage10cycleStartEv+0x6c>
  44:	mov	x1, x0
  48:	mov	x0, x19
  4c:	bl	84 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>
  50:	ldr	x0, [x19, #64]
  54:	bl	0 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>
  58:	ldr	x0, [x19, #64]
  5c:	sub	w22, w22, #0x1
  60:	ldp	w9, w8, [x0, #16]
  64:	cmp	w8, w9
  68:	b.ne	30 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x30>  // b.any
  6c:	mov	w8, #0x1                   	// #1
  70:	str	x8, [x20]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

0000000000000084 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>:
  84:	sub	sp, sp, #0x70
  88:	stp	x29, x30, [sp, #64]
  8c:	stp	x22, x21, [sp, #80]
  90:	stp	x20, x19, [sp, #96]
  94:	add	x29, sp, #0x40
  98:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
  9c:	ldr	x8, [x8]
  a0:	mov	x20, x1
  a4:	mov	x19, x0
  a8:	ldrb	w8, [x8]
  ac:	cbz	w8, 10c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x88>
  b0:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
  b4:	add	x0, x0, #0x0
  b8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  bc:	tbz	w0, #0, 10c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x88>
  c0:	bl	0 <_ZN4llvm4dbgsEv>
  c4:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
  c8:	add	x1, x1, #0x0
  cc:	mov	w2, #0x1a                  	// #26
  d0:	bl	0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
  d4:	ldr	w1, [x20]
  d8:	mov	x21, x0
  dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  e0:	ldp	x9, x8, [x21, #16]
  e4:	cmp	x8, x9
  e8:	b.cs	100 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x7c>  // b.hs, b.nlast
  ec:	add	x9, x8, #0x1
  f0:	mov	w10, #0xa                   	// #10
  f4:	str	x9, [x21, #24]
  f8:	strb	w10, [x8]
  fc:	b	10c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x88>
 100:	mov	w1, #0xa                   	// #10
 104:	mov	x0, x21
 108:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 10c:	ldr	x8, [x19, #72]
 110:	adrp	x9, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 114:	ldr	d0, [x9]
 118:	add	x0, sp, #0x20
 11c:	ldr	w1, [x8, #24]
 120:	add	x8, sp, #0x20
 124:	add	x8, x8, #0x10
 128:	mov	x2, sp
 12c:	str	wzr, [sp]
 130:	str	x8, [sp, #32]
 134:	str	d0, [sp, #40]
 138:	bl	0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 13c:	ldr	x21, [x20, #8]
 140:	ldr	x8, [x21]
 144:	ldrb	w9, [x8, #324]
 148:	cbnz	w9, 154 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xd0>
 14c:	ldrb	w8, [x8, #325]
 150:	cbz	w8, 168 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xe4>
 154:	ldr	x0, [x19, #80]
 158:	mov	x1, x20
 15c:	ldr	x8, [x0]
 160:	ldr	x8, [x8, #40]
 164:	blr	x8
 168:	ldr	w8, [x21, #24]
 16c:	cbz	w8, 19c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x118>
 170:	ldr	x21, [x21, #16]
 174:	add	x8, x8, x8, lsl #4
 178:	lsl	x22, x8, #3
 17c:	ldr	x0, [x19, #72]
 180:	ldr	x2, [sp, #32]
 184:	ldr	w3, [sp, #40]
 188:	mov	x1, x21
 18c:	bl	0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>
 190:	subs	x22, x22, #0x88
 194:	add	x21, x21, #0x88
 198:	b.ne	17c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xf8>  // b.any
 19c:	ldr	x8, [sp, #32]
 1a0:	ldr	w9, [sp, #40]
 1a4:	mov	w10, #0x1                   	// #1
 1a8:	mov	x1, sp
 1ac:	mov	x0, x19
 1b0:	str	w10, [sp]
 1b4:	stp	x20, x8, [sp, #8]
 1b8:	str	x9, [sp, #24]
 1bc:	bl	0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 1c0:	ldr	x0, [sp, #32]
 1c4:	add	x8, sp, #0x20
 1c8:	add	x8, x8, #0x10
 1cc:	cmp	x0, x8
 1d0:	b.eq	1d8 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x154>  // b.none
 1d4:	bl	0 <free>
 1d8:	ldp	x20, x19, [sp, #96]
 1dc:	ldp	x22, x21, [sp, #80]
 1e0:	ldp	x29, x30, [sp, #64]
 1e4:	add	sp, sp, #0x70
 1e8:	ret

00000000000001ec <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>:
 1ec:	stp	x29, x30, [sp, #-32]!
 1f0:	str	x19, [sp, #16]
 1f4:	mov	x29, sp
 1f8:	ldr	x9, [x1, #8]
 1fc:	ldr	x0, [x0, #64]
 200:	mov	x19, x8
 204:	ldr	w1, [x9, #792]
 208:	bl	0 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>
 20c:	mov	w8, #0x1                   	// #1
 210:	str	x8, [x19]
 214:	ldr	x19, [sp, #16]
 218:	ldp	x29, x30, [sp], #32
 21c:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #40]
  14:	add	x21, x0, #0x18
  18:	cmp	x20, x21
  1c:	b.eq	4c <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x4c>  // b.none
  20:	mov	x19, x1
  24:	ldr	x0, [x20, #32]
  28:	mov	x1, x19
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x20
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x20, x0
  44:	cmp	x0, x21
  48:	b.ne	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x24>  // b.any
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm3mca11RetireStageD0Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv>:
   0:	ldr	x8, [x0, #64]
   4:	ldp	w8, w9, [x8, #16]
   8:	cmp	w9, w8
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6assignEmRKj:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x21, x1
  20:	cmp	x8, x1
  24:	str	wzr, [x0, #8]
  28:	b.cs	44 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x44>  // b.hs, b.nlast
  2c:	add	x1, x20, #0x10
  30:	mov	w3, #0x4                   	// #4
  34:	mov	x0, x20
  38:	mov	x2, x21
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x20, #12]
  44:	cmp	x8, x21
  48:	b.cc	80 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x80>  // b.lo, b.ul, b.last
  4c:	ands	x10, x21, #0xffffffff
  50:	str	w21, [x20, #8]
  54:	b.eq	70 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x70>  // b.none
  58:	ldr	x8, [x20]
  5c:	ldr	w9, [x19]
  60:	lsl	x10, x10, #2
  64:	subs	x10, x10, #0x4
  68:	str	w9, [x8], #4
  6c:	b.ne	64 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x64>  // b.any
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  84:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  88:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

Stage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca5StageD1Ev>:
   0:	adrp	x8, 0 <_ZN4llvm3mca5StageD1Ev>
   4:	ldr	x1, [x0, #32]
   8:	ldr	x8, [x8]
   c:	add	x9, x8, #0x10
  10:	add	x8, x0, #0x10
  14:	str	x9, [x0]
  18:	mov	x0, x8
  1c:	b	0 <_ZN4llvm3mca5StageD1Ev>

0000000000000020 <_ZN4llvm3mca5StageD0Ev>:
  20:	brk	#0x1

0000000000000024 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>:
  24:	sub	sp, sp, #0x20
  28:	stp	x29, x30, [sp, #16]
  2c:	add	x29, sp, #0x10
  30:	str	x1, [sp, #8]
  34:	add	x0, x0, #0x10
  38:	add	x1, sp, #0x8
  3c:	bl	0 <_ZN4llvm3mca5StageD1Ev>
  40:	ldp	x29, x30, [sp, #16]
  44:	add	sp, sp, #0x20
  48:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>
  1c:	mov	x2, x0
  20:	cbz	x1, 4c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x4c>
  24:	mov	x8, x1
  28:	add	x4, sp, #0x8
  2c:	mov	x0, x20
  30:	mov	x1, x2
  34:	mov	x2, x8
  38:	mov	x3, x19
  3c:	str	x20, [sp, #8]
  40:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>
  44:	mov	x2, x0
  48:	mov	w1, #0x1                   	// #1
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x2
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0, #16]
  10:	mov	x20, x1
  14:	cbz	x9, 4c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x4c>
  18:	ldr	x8, [x20]
  1c:	ldr	x10, [x9, #32]
  20:	mov	x19, x9
  24:	add	x9, x9, #0x10
  28:	add	x11, x19, #0x18
  2c:	cmp	x8, x10
  30:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  34:	ldr	x9, [x9]
  38:	cbnz	x9, 1c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x1c>
  3c:	cmp	x8, x10
  40:	mov	x8, x19
  44:	b.cc	50 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x50>  // b.lo, b.ul, b.last
  48:	b	68 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x68>
  4c:	add	x19, x0, #0x8
  50:	ldr	x8, [x0, #24]
  54:	cmp	x8, x19
  58:	b.eq	80 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x80>  // b.none
  5c:	mov	x0, x19
  60:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  64:	mov	x8, x0
  68:	ldr	x9, [x8, #32]
  6c:	ldr	x10, [x20]
  70:	cmp	x9, x10
  74:	csel	x0, xzr, x8, cc  // cc = lo, ul, last
  78:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
  7c:	b	84 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE24_M_get_insert_unique_posERKS3_+0x84>
  80:	mov	x0, xzr
  84:	mov	x1, x19
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x3
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	cbz	x1, 2c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x2c>
  24:	mov	w22, #0x1                   	// #1
  28:	b	48 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x48>
  2c:	add	x8, x19, #0x8
  30:	cmp	x8, x20
  34:	b.eq	24 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x24>  // b.none
  38:	ldr	x8, [x21]
  3c:	ldr	x9, [x20, #32]
  40:	cmp	x8, x9
  44:	cset	w22, cc  // cc = lo, ul, last
  48:	mov	w0, #0x28                  	// #40
  4c:	bl	0 <_Znwm>
  50:	ldr	x8, [x21]
  54:	mov	x23, x0
  58:	add	x3, x19, #0x8
  5c:	mov	x1, x23
  60:	str	x8, [x0, #32]
  64:	mov	w0, w22
  68:	mov	x2, x20
  6c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  70:	ldr	x8, [x19, #40]
  74:	mov	x0, x23
  78:	ldr	x23, [sp, #16]
  7c:	add	x8, x8, #0x1
  80:	str	x8, [x19, #40]
  84:	ldp	x20, x19, [sp, #48]
  88:	ldp	x22, x21, [sp, #32]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret

Support.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca14ResourceCyclespLERKS1_>:
   0:	ldr	w8, [x0, #4]
   4:	ldr	w9, [x1, #4]
   8:	cmp	w8, w9
   c:	b.ne	24 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x24>  // b.any
  10:	ldr	w8, [x1]
  14:	ldr	w9, [x0]
  18:	add	w8, w9, w8
  1c:	str	w8, [x0]
  20:	ret
  24:	mov	x10, x8
  28:	cbz	w9, 48 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x48>
  2c:	mov	x11, x8
  30:	mov	x12, x9
  34:	mov	x10, x12
  38:	udiv	x12, x11, x12
  3c:	msub	x12, x12, x10, x11
  40:	mov	x11, x10
  44:	cbnz	x12, 34 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x34>
  48:	ldr	w12, [x0]
  4c:	mul	w11, w9, w8
  50:	ldr	w13, [x1]
  54:	udiv	w10, w11, w10
  58:	udiv	w8, w10, w8
  5c:	udiv	w9, w10, w9
  60:	mul	w8, w8, w12
  64:	madd	w8, w9, w13, w8
  68:	stp	w8, w10, [x0]
  6c:	ret

0000000000000070 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>:
  70:	sub	sp, sp, #0x90
  74:	stp	x29, x30, [sp, #48]
  78:	stp	x28, x27, [sp, #64]
  7c:	stp	x26, x25, [sp, #80]
  80:	stp	x24, x23, [sp, #96]
  84:	stp	x22, x21, [sp, #112]
  88:	stp	x20, x19, [sp, #128]
  8c:	add	x29, sp, #0x30
  90:	ldr	w8, [x0, #48]
  94:	cmp	x2, x8
  98:	b.ne	30c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x29c>  // b.any
  9c:	mov	x20, x2
  a0:	cbz	x2, 2ec <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x27c>
  a4:	mov	x19, x0
  a8:	mov	x21, x1
  ac:	cmp	w8, #0x2
  b0:	str	xzr, [x1]
  b4:	b.cc	170 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x100>  // b.lo, b.ul, b.last
  b8:	mov	w23, wzr
  bc:	mov	w24, #0x1                   	// #1
  c0:	mov	w22, #0x1                   	// #1
  c4:	mov	x0, x19
  c8:	mov	w1, w22
  cc:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
  d0:	ldr	x8, [x0, #24]
  d4:	cbnz	x8, ec <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x7c>
  d8:	cmp	x20, x22
  dc:	b.ls	2ec <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x27c>  // b.plast
  e0:	lsl	x8, x24, x23
  e4:	add	w23, w23, #0x1
  e8:	str	x8, [x21, x22, lsl #3]
  ec:	add	x22, x22, #0x1
  f0:	cmp	x20, x22
  f4:	b.ne	c4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x54>  // b.any
  f8:	ldr	w24, [x19, #48]
  fc:	cmp	w24, #0x2
 100:	b.cc	170 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x100>  // b.lo, b.ul, b.last
 104:	mov	w25, #0x1                   	// #1
 108:	mov	w22, #0x1                   	// #1
 10c:	mov	x0, x19
 110:	mov	w1, w22
 114:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 118:	ldr	x8, [x0, #24]
 11c:	cbz	x8, 164 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xf4>
 120:	cmp	x20, x22
 124:	b.ls	2ec <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x27c>  // b.plast
 128:	lsl	x9, x25, x23
 12c:	str	x9, [x21, x22, lsl #3]
 130:	ldr	w10, [x0, #8]
 134:	cbz	w10, 160 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xf0>
 138:	mov	x11, xzr
 13c:	ldr	w12, [x8, x11, lsl #2]
 140:	cmp	x20, x12
 144:	b.ls	2ec <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x27c>  // b.plast
 148:	ldr	x12, [x21, x12, lsl #3]
 14c:	add	x11, x11, #0x1
 150:	cmp	x11, x10
 154:	orr	x9, x9, x12
 158:	str	x9, [x21, x22, lsl #3]
 15c:	b.cc	13c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xcc>  // b.lo, b.ul, b.last
 160:	add	w23, w23, #0x1
 164:	add	x22, x22, #0x1
 168:	cmp	x22, x24
 16c:	b.ne	10c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x9c>  // b.any
 170:	adrp	x27, 0 <_ZN4llvm9DebugFlagE>
 174:	ldr	x27, [x27]
 178:	ldrb	w8, [x27]
 17c:	cbz	w8, 1b4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x144>
 180:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 184:	add	x0, x0, #0x0
 188:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 18c:	tbz	w0, #0, 1b4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x144>
 190:	bl	0 <_ZN4llvm4dbgsEv>
 194:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 198:	add	x1, x1, #0x0
 19c:	mov	w2, #0x1a                  	// #26
 1a0:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1a4:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1a8:	add	x1, x1, #0x0
 1ac:	mov	w2, #0x1                   	// #1
 1b0:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1b4:	ldr	w28, [x19, #48]
 1b8:	cbz	w28, 2cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x25c>
 1bc:	adrp	x23, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1c0:	adrp	x25, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1c4:	mov	x22, xzr
 1c8:	add	x23, x23, #0x0
 1cc:	add	x25, x25, #0x0
 1d0:	mov	w24, #0x1                   	// #1
 1d4:	mov	x0, x19
 1d8:	mov	w1, w22
 1dc:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1e0:	ldrb	w8, [x27]
 1e4:	cbz	w8, 2c0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x250>
 1e8:	mov	x26, x0
 1ec:	mov	x0, x23
 1f0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 1f4:	tbz	w0, #0, 2c0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x250>
 1f8:	bl	0 <_ZN4llvm4dbgsEv>
 1fc:	ldp	x9, x8, [x0, #16]
 200:	cmp	x8, x9
 204:	b.cs	21c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1ac>  // b.hs, b.nlast
 208:	add	x9, x8, #0x1
 20c:	str	x9, [x0, #24]
 210:	mov	w9, #0x5b                  	// #91
 214:	strb	w9, [x8]
 218:	b	224 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1b4>
 21c:	mov	w1, #0x5b                  	// #91
 220:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 224:	mov	w8, #0x2                   	// #2
 228:	add	x1, sp, #0x18
 22c:	stp	xzr, x22, [sp, #24]
 230:	str	w8, [sp, #40]
 234:	strh	wzr, [sp, #44]
 238:	strb	wzr, [sp, #46]
 23c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 240:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 244:	mov	w2, #0x2                   	// #2
 248:	add	x1, x1, #0x0
 24c:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 250:	mov	w2, #0x3                   	// #3
 254:	mov	x1, x25
 258:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 25c:	cmp	x20, x22
 260:	b.ls	2ec <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x27c>  // b.plast
 264:	ldr	x8, [x21, x22, lsl #3]
 268:	mov	w9, #0x10                  	// #16
 26c:	mov	x1, sp
 270:	str	w9, [sp, #16]
 274:	strh	w24, [sp, #20]
 278:	stp	x8, xzr, [sp]
 27c:	strb	w24, [sp, #22]
 280:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 284:	mov	w2, #0x3                   	// #3
 288:	mov	x1, x25
 28c:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 290:	ldr	x1, [x26]
 294:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 298:	ldp	x9, x8, [x0, #16]
 29c:	cmp	x8, x9
 2a0:	b.cs	2b8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x248>  // b.hs, b.nlast
 2a4:	add	x9, x8, #0x1
 2a8:	str	x9, [x0, #24]
 2ac:	mov	w9, #0xa                   	// #10
 2b0:	strb	w9, [x8]
 2b4:	b	2c0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x250>
 2b8:	mov	w1, #0xa                   	// #10
 2bc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 2c0:	add	x22, x22, #0x1
 2c4:	cmp	x28, x22
 2c8:	b.ne	1d4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x164>  // b.any
 2cc:	ldp	x20, x19, [sp, #128]
 2d0:	ldp	x22, x21, [sp, #112]
 2d4:	ldp	x24, x23, [sp, #96]
 2d8:	ldp	x26, x25, [sp, #80]
 2dc:	ldp	x28, x27, [sp, #64]
 2e0:	ldp	x29, x30, [sp, #48]
 2e4:	add	sp, sp, #0x90
 2e8:	ret
 2ec:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2f0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2f4:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2f8:	add	x0, x0, #0x0
 2fc:	add	x1, x1, #0x0
 300:	add	x3, x3, #0x0
 304:	mov	w2, #0x1ab                 	// #427
 308:	bl	0 <__assert_fail>
 30c:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 310:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 314:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 318:	add	x0, x0, #0x0
 31c:	add	x1, x1, #0x0
 320:	add	x3, x3, #0x0
 324:	mov	w2, #0x2c                  	// #44
 328:	bl	0 <__assert_fail>

000000000000032c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE>:
 32c:	str	d8, [sp, #-80]!
 330:	stp	x29, x30, [sp, #16]
 334:	stp	x24, x23, [sp, #32]
 338:	stp	x22, x21, [sp, #48]
 33c:	stp	x20, x19, [sp, #64]
 340:	mov	x29, sp
 344:	ldr	w23, [x0, #48]
 348:	ucvtf	d0, w2
 34c:	ucvtf	d1, w1
 350:	fdiv	d8, d0, d1
 354:	cbz	w23, 3a8 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x7c>
 358:	mov	x19, x4
 35c:	mov	x20, x3
 360:	mov	x21, x0
 364:	mov	x22, xzr
 368:	cmp	x19, x22
 36c:	b.eq	3c4 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x98>  // b.none
 370:	ldr	w24, [x20, x22, lsl #2]
 374:	cbz	w24, 39c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x70>
 378:	mov	x0, x21
 37c:	mov	w1, w22
 380:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 384:	ldr	s0, [x0, #8]
 388:	ucvtf	d1, w24
 38c:	ucvtf	d0, d0
 390:	fdiv	d0, d1, d0
 394:	fcmp	d8, d0
 398:	fcsel	d8, d0, d8, mi  // mi = first
 39c:	add	x22, x22, #0x1
 3a0:	cmp	x23, x22
 3a4:	b.ne	368 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x3c>  // b.any
 3a8:	ldp	x20, x19, [sp, #64]
 3ac:	ldp	x22, x21, [sp, #48]
 3b0:	ldp	x24, x23, [sp, #32]
 3b4:	ldp	x29, x30, [sp, #16]
 3b8:	mov	v0.16b, v8.16b
 3bc:	ldr	d8, [sp], #80
 3c0:	ret
 3c4:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 3c8:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 3cc:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 3d0:	add	x0, x0, #0x0
 3d4:	add	x1, x1, #0x0
 3d8:	add	x3, x3, #0x0
 3dc:	mov	w2, #0xfa                  	// #250
 3e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	ldr	w8, [x0, #48]
  14:	cmp	w8, w1
  18:	b.ls	50 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x50>  // b.plast
  1c:	ldr	x8, [x0, #32]
  20:	mov	w9, w1
  24:	add	x0, x8, x9, lsl #5
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  34:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  38:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x154                 	// #340
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  54:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  58:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x156                 	// #342
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret
