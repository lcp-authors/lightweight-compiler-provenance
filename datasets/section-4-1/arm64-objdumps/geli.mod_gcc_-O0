
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//geli.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1140>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x0, [sp, #24]
      10:	bl	0 <grub_free>
      14:	nop
      18:	ldp	x29, x30, [sp], #32
      1c:	ret
      20:	stp	x29, x30, [sp, #-32]!
      24:	mov	x29, sp
      28:	str	x0, [sp, #24]
      2c:	ldr	x1, [sp, #24]
      30:	adrp	x0, 0 <grub_mod_init-0x1140>
      34:	add	x0, x0, #0x0
      38:	ldr	x0, [x0]
      3c:	bl	0 <grub_list_push>
      40:	nop
      44:	ldp	x29, x30, [sp], #32
      48:	ret
      4c:	nop
	...
      58:	stp	x29, x30, [sp, #-32]!
      5c:	mov	x29, sp
      60:	str	x0, [sp, #24]
      64:	ldr	x0, [sp, #24]
      68:	bl	0 <grub_list_remove>
      6c:	nop
      70:	ldp	x29, x30, [sp], #32
      74:	ret
      78:	stp	x29, x30, [sp, #-48]!
      7c:	mov	x29, sp
      80:	str	x0, [sp, #40]
      84:	str	x1, [sp, #32]
      88:	str	x2, [sp, #24]
      8c:	ldr	x2, [sp, #24]
      90:	ldr	x1, [sp, #32]
      94:	ldr	x0, [sp, #40]
      98:	bl	0 <grub_memmove>
      9c:	ldp	x29, x30, [sp], #48
      a0:	ret
      a4:	sub	sp, sp, #0x10
      a8:	str	w0, [sp, #12]
      ac:	ldr	w0, [sp, #12]
      b0:	cmp	w0, #0x40
      b4:	b.le	d0 <grub_mod_init-0x1070>
      b8:	ldr	w0, [sp, #12]
      bc:	cmp	w0, #0x5a
      c0:	b.gt	d0 <grub_mod_init-0x1070>
      c4:	ldr	w0, [sp, #12]
      c8:	add	w0, w0, #0x20
      cc:	b	d4 <grub_mod_init-0x106c>
      d0:	ldr	w0, [sp, #12]
      d4:	add	sp, sp, #0x10
      d8:	ret
      dc:	stp	x29, x30, [sp, #-48]!
      e0:	mov	x29, sp
      e4:	str	x19, [sp, #16]
      e8:	str	x0, [sp, #40]
      ec:	str	x1, [sp, #32]
      f0:	b	130 <grub_mod_init-0x1010>
      f4:	ldr	x0, [sp, #40]
      f8:	ldrb	w0, [x0]
      fc:	bl	a4 <grub_mod_init-0x109c>
     100:	mov	w19, w0
     104:	ldr	x0, [sp, #32]
     108:	ldrb	w0, [x0]
     10c:	bl	a4 <grub_mod_init-0x109c>
     110:	cmp	w19, w0
     114:	b.ne	154 <grub_mod_init-0xfec>  // b.any
     118:	ldr	x0, [sp, #40]
     11c:	add	x0, x0, #0x1
     120:	str	x0, [sp, #40]
     124:	ldr	x0, [sp, #32]
     128:	add	x0, x0, #0x1
     12c:	str	x0, [sp, #32]
     130:	ldr	x0, [sp, #40]
     134:	ldrb	w0, [x0]
     138:	cmp	w0, #0x0
     13c:	b.eq	158 <grub_mod_init-0xfe8>  // b.none
     140:	ldr	x0, [sp, #32]
     144:	ldrb	w0, [x0]
     148:	cmp	w0, #0x0
     14c:	b.ne	f4 <grub_mod_init-0x104c>  // b.any
     150:	b	158 <grub_mod_init-0xfe8>
     154:	nop
     158:	ldr	x0, [sp, #40]
     15c:	ldrb	w0, [x0]
     160:	bl	a4 <grub_mod_init-0x109c>
     164:	mov	w19, w0
     168:	ldr	x0, [sp, #32]
     16c:	ldrb	w0, [x0]
     170:	bl	a4 <grub_mod_init-0x109c>
     174:	sub	w0, w19, w0
     178:	ldr	x19, [sp, #16]
     17c:	ldp	x29, x30, [sp], #48
     180:	ret
     184:	stp	x29, x30, [sp, #-112]!
     188:	mov	x29, sp
     18c:	str	x0, [sp, #24]
     190:	str	x1, [sp, #16]
     194:	mov	w0, #0x6b65                	// #27493
     198:	movk	w0, #0x7965, lsl #16
     19c:	str	w0, [sp, #96]
     1a0:	ldr	x0, [sp, #16]
     1a4:	stur	x0, [sp, #100]
     1a8:	ldr	x0, [sp, #24]
     1ac:	ldr	x0, [x0, #88]
     1b0:	ldr	x0, [x0, #32]
     1b4:	cmp	x0, #0x40
     1b8:	b.ls	1c4 <grub_mod_init-0xf7c>  // b.plast
     1bc:	mov	w0, #0xa                   	// #10
     1c0:	b	26c <grub_mod_init-0xed4>
     1c4:	ldr	x0, [sp, #24]
     1c8:	ldr	w0, [x0, #552]
     1cc:	mov	w5, w0
     1d0:	ldr	x4, [sp, #16]
     1d4:	adrp	x0, 0 <grub_mod_init-0x1140>
     1d8:	add	x0, x0, #0x0
     1dc:	ldr	x3, [x0]
     1e0:	adrp	x0, 0 <grub_mod_init-0x1140>
     1e4:	add	x0, x0, #0x0
     1e8:	ldr	x2, [x0]
     1ec:	mov	w1, #0x9a                  	// #154
     1f0:	adrp	x0, 0 <grub_mod_init-0x1140>
     1f4:	add	x0, x0, #0x0
     1f8:	ldr	x0, [x0]
     1fc:	bl	0 <grub_real_dprintf>
     200:	ldr	x0, [sp, #24]
     204:	ldr	x6, [x0, #88]
     208:	ldr	x0, [sp, #24]
     20c:	add	x0, x0, #0x1dc
     210:	add	x2, sp, #0x20
     214:	add	x1, sp, #0x60
     218:	mov	x5, x2
     21c:	mov	x4, #0xc                   	// #12
     220:	mov	x3, x1
     224:	mov	x2, #0x40                  	// #64
     228:	mov	x1, x0
     22c:	mov	x0, x6
     230:	bl	0 <grub_crypto_hmac_buffer>
     234:	str	w0, [sp, #108]
     238:	ldr	w0, [sp, #108]
     23c:	cmp	w0, #0x0
     240:	b.eq	24c <grub_mod_init-0xef4>  // b.none
     244:	ldr	w0, [sp, #108]
     248:	b	26c <grub_mod_init-0xed4>
     24c:	ldr	x0, [sp, #24]
     250:	ldr	w0, [x0, #552]
     254:	sxtw	x1, w0
     258:	add	x0, sp, #0x20
     25c:	mov	x2, x1
     260:	mov	x1, x0
     264:	ldr	x0, [sp, #24]
     268:	bl	0 <grub_cryptodisk_setkey>
     26c:	ldp	x29, x30, [sp], #112
     270:	ret
     274:	nop
	...
     290:	stp	x29, x30, [sp, #-128]!
     294:	mov	x29, sp
     298:	str	x0, [sp, #24]
     29c:	str	x1, [sp, #16]
     2a0:	adrp	x0, 0 <grub_mod_init-0x1140>
     2a4:	add	x0, x0, #0x0
     2a8:	ldr	x0, [x0]
     2ac:	ldr	x0, [x0, #32]
     2b0:	lsl	x0, x0, #1
     2b4:	add	x0, x0, #0x1
     2b8:	cmp	x0, #0x47
     2bc:	b.ls	2c8 <grub_mod_init-0xe78>  // b.plast
     2c0:	mov	w0, #0x23                  	// #35
     2c4:	b	394 <grub_mod_init-0xdac>
     2c8:	ldr	x0, [sp, #24]
     2cc:	add	x1, x0, #0x2f
     2d0:	add	x0, sp, #0x20
     2d4:	mov	x5, x0
     2d8:	mov	x4, #0x4                   	// #4
     2dc:	adrp	x0, 0 <grub_mod_init-0x1140>
     2e0:	add	x0, x0, #0x0
     2e4:	ldr	x3, [x0]
     2e8:	mov	x2, #0x40                  	// #64
     2ec:	adrp	x0, 0 <grub_mod_init-0x1140>
     2f0:	add	x0, x0, #0x0
     2f4:	ldr	x0, [x0]
     2f8:	bl	0 <grub_crypto_hmac_buffer>
     2fc:	str	w0, [sp, #108]
     300:	ldr	w0, [sp, #108]
     304:	cmp	w0, #0x0
     308:	b.eq	314 <grub_mod_init-0xe2c>  // b.none
     30c:	ldr	w0, [sp, #108]
     310:	b	394 <grub_mod_init-0xdac>
     314:	ldr	x0, [sp, #16]
     318:	str	x0, [sp, #112]
     31c:	add	x0, sp, #0x20
     320:	str	x0, [sp, #120]
     324:	b	364 <grub_mod_init-0xddc>
     328:	ldr	x0, [sp, #120]
     32c:	ldrb	w0, [x0]
     330:	mov	w3, w0
     334:	adrp	x0, 0 <grub_mod_init-0x1140>
     338:	add	x0, x0, #0x0
     33c:	ldr	x2, [x0]
     340:	mov	x1, #0x3                   	// #3
     344:	ldr	x0, [sp, #112]
     348:	bl	0 <grub_snprintf>
     34c:	ldr	x0, [sp, #112]
     350:	add	x0, x0, #0x2
     354:	str	x0, [sp, #112]
     358:	ldr	x0, [sp, #120]
     35c:	add	x0, x0, #0x1
     360:	str	x0, [sp, #120]
     364:	adrp	x0, 0 <grub_mod_init-0x1140>
     368:	add	x0, x0, #0x0
     36c:	ldr	x0, [x0]
     370:	ldr	x0, [x0, #32]
     374:	add	x1, sp, #0x20
     378:	add	x0, x1, x0
     37c:	ldr	x1, [sp, #120]
     380:	cmp	x1, x0
     384:	b.cc	328 <grub_mod_init-0xe18>  // b.lo, b.ul, b.last
     388:	ldr	x0, [sp, #112]
     38c:	strb	wzr, [x0]
     390:	mov	w0, #0x0                   	// #0
     394:	ldp	x29, x30, [sp], #128
     398:	ret
     39c:	nop
	...
     3b8:	sub	sp, sp, #0x2a0
     3bc:	stp	x29, x30, [sp]
     3c0:	mov	x29, sp
     3c4:	str	x0, [sp, #40]
     3c8:	str	x1, [sp, #32]
     3cc:	str	w2, [sp, #28]
     3d0:	str	xzr, [sp, #656]
     3d4:	str	xzr, [sp, #664]
     3d8:	str	xzr, [sp, #648]
     3dc:	adrp	x0, 0 <grub_mod_init-0x1140>
     3e0:	add	x0, x0, #0x0
     3e4:	ldr	x0, [x0]
     3e8:	ldr	x0, [x0, #32]
     3ec:	lsl	x0, x0, #1
     3f0:	add	x0, x0, #0x1
     3f4:	cmp	x0, #0x47
     3f8:	b.ls	404 <grub_mod_init-0xd3c>  // b.plast
     3fc:	mov	x0, #0x0                   	// #0
     400:	b	928 <grub_mod_init-0x818>
     404:	ldr	x0, [sp, #40]
     408:	bl	0 <grub_disk_get_size>
     40c:	str	x0, [sp, #640]
     410:	ldr	x0, [sp, #640]
     414:	cmn	x0, #0x1
     418:	b.eq	428 <grub_mod_init-0xd18>  // b.none
     41c:	ldr	x0, [sp, #640]
     420:	cmp	x0, #0x0
     424:	b.ne	430 <grub_mod_init-0xd10>  // b.any
     428:	mov	x0, #0x0                   	// #0
     42c:	b	928 <grub_mod_init-0x818>
     430:	ldr	x0, [sp, #640]
     434:	sub	x0, x0, #0x1
     438:	add	x1, sp, #0x78
     43c:	mov	x4, x1
     440:	mov	x3, #0x1ef                 	// #495
     444:	mov	x2, #0x0                   	// #0
     448:	mov	x1, x0
     44c:	ldr	x0, [sp, #40]
     450:	bl	0 <grub_disk_read>
     454:	str	w0, [sp, #636]
     458:	ldr	w0, [sp, #636]
     45c:	cmp	w0, #0x0
     460:	b.eq	46c <grub_mod_init-0xcd4>  // b.none
     464:	mov	x0, #0x0                   	// #0
     468:	b	928 <grub_mod_init-0x818>
     46c:	add	x3, sp, #0x78
     470:	mov	x2, #0xa                   	// #10
     474:	adrp	x0, 0 <grub_mod_init-0x1140>
     478:	add	x0, x0, #0x0
     47c:	ldr	x1, [x0]
     480:	mov	x0, x3
     484:	bl	0 <grub_memcmp>
     488:	cmp	w0, #0x0
     48c:	b.ne	4a8 <grub_mod_init-0xc98>  // b.any
     490:	ldr	w0, [sp, #136]
     494:	cmp	w0, #0x7
     498:	b.hi	4a8 <grub_mod_init-0xc98>  // b.pmore
     49c:	ldr	w0, [sp, #136]
     4a0:	cmp	w0, #0x0
     4a4:	b.ne	4e4 <grub_mod_init-0xc5c>  // b.any
     4a8:	ldrb	w0, [sp, #120]
     4ac:	mov	w4, w0
     4b0:	adrp	x0, 0 <grub_mod_init-0x1140>
     4b4:	add	x0, x0, #0x0
     4b8:	ldr	x3, [x0]
     4bc:	adrp	x0, 0 <grub_mod_init-0x1140>
     4c0:	add	x0, x0, #0x0
     4c4:	ldr	x2, [x0]
     4c8:	mov	w1, #0x113                 	// #275
     4cc:	adrp	x0, 0 <grub_mod_init-0x1140>
     4d0:	add	x0, x0, #0x0
     4d4:	ldr	x0, [x0]
     4d8:	bl	0 <grub_real_dprintf>
     4dc:	mov	x0, #0x0                   	// #0
     4e0:	b	928 <grub_mod_init-0x818>
     4e4:	ldur	w1, [sp, #158]
     4e8:	ldur	w0, [sp, #158]
     4ec:	sub	w0, w0, #0x1
     4f0:	and	w0, w1, w0
     4f4:	cmp	w0, #0x0
     4f8:	b.ne	508 <grub_mod_init-0xc38>  // b.any
     4fc:	ldur	w0, [sp, #158]
     500:	cmp	w0, #0x0
     504:	b.ne	544 <grub_mod_init-0xbfc>  // b.any
     508:	ldur	w0, [sp, #158]
     50c:	mov	w4, w0
     510:	adrp	x0, 0 <grub_mod_init-0x1140>
     514:	add	x0, x0, #0x0
     518:	ldr	x3, [x0]
     51c:	adrp	x0, 0 <grub_mod_init-0x1140>
     520:	add	x0, x0, #0x0
     524:	ldr	x2, [x0]
     528:	mov	w1, #0x11b                 	// #283
     52c:	adrp	x0, 0 <grub_mod_init-0x1140>
     530:	add	x0, x0, #0x0
     534:	ldr	x0, [x0]
     538:	bl	0 <grub_real_dprintf>
     53c:	mov	x0, #0x0                   	// #0
     540:	b	928 <grub_mod_init-0x818>
     544:	ldr	w0, [sp, #140]
     548:	and	w0, w0, #0x1
     54c:	cmp	w0, #0x0
     550:	b.eq	588 <grub_mod_init-0xbb8>  // b.none
     554:	adrp	x0, 0 <grub_mod_init-0x1140>
     558:	add	x0, x0, #0x0
     55c:	ldr	x3, [x0]
     560:	adrp	x0, 0 <grub_mod_init-0x1140>
     564:	add	x0, x0, #0x0
     568:	ldr	x2, [x0]
     56c:	mov	w1, #0x122                 	// #290
     570:	adrp	x0, 0 <grub_mod_init-0x1140>
     574:	add	x0, x0, #0x0
     578:	ldr	x0, [x0]
     57c:	bl	0 <grub_real_dprintf>
     580:	mov	x0, #0x0                   	// #0
     584:	b	928 <grub_mod_init-0x818>
     588:	ldr	w0, [sp, #28]
     58c:	cmp	w0, #0x0
     590:	b.eq	5d8 <grub_mod_init-0xb68>  // b.none
     594:	ldr	w0, [sp, #140]
     598:	and	w0, w0, #0x2
     59c:	cmp	w0, #0x0
     5a0:	b.ne	5d8 <grub_mod_init-0xb68>  // b.any
     5a4:	adrp	x0, 0 <grub_mod_init-0x1140>
     5a8:	add	x0, x0, #0x0
     5ac:	ldr	x3, [x0]
     5b0:	adrp	x0, 0 <grub_mod_init-0x1140>
     5b4:	add	x0, x0, #0x0
     5b8:	ldr	x2, [x0]
     5bc:	mov	w1, #0x128                 	// #296
     5c0:	adrp	x0, 0 <grub_mod_init-0x1140>
     5c4:	add	x0, x0, #0x0
     5c8:	ldr	x0, [x0]
     5cc:	bl	0 <grub_real_dprintf>
     5d0:	mov	x0, #0x0                   	// #0
     5d4:	b	928 <grub_mod_init-0x818>
     5d8:	add	x1, sp, #0x30
     5dc:	add	x0, sp, #0x78
     5e0:	bl	290 <grub_mod_init-0xeb0>
     5e4:	str	w0, [sp, #632]
     5e8:	ldr	w0, [sp, #632]
     5ec:	cmp	w0, #0x0
     5f0:	b.eq	604 <grub_mod_init-0xb3c>  // b.none
     5f4:	ldr	w0, [sp, #632]
     5f8:	bl	0 <grub_crypto_gcry_error>
     5fc:	mov	x0, #0x0                   	// #0
     600:	b	928 <grub_mod_init-0x818>
     604:	ldr	x0, [sp, #32]
     608:	cmp	x0, #0x0
     60c:	b.eq	668 <grub_mod_init-0xad8>  // b.none
     610:	add	x0, sp, #0x30
     614:	mov	x1, x0
     618:	ldr	x0, [sp, #32]
     61c:	bl	dc <grub_mod_init-0x1064>
     620:	cmp	w0, #0x0
     624:	b.eq	668 <grub_mod_init-0xad8>  // b.none
     628:	add	x0, sp, #0x30
     62c:	ldr	x5, [sp, #32]
     630:	mov	x4, x0
     634:	adrp	x0, 0 <grub_mod_init-0x1140>
     638:	add	x0, x0, #0x0
     63c:	ldr	x3, [x0]
     640:	adrp	x0, 0 <grub_mod_init-0x1140>
     644:	add	x0, x0, #0x0
     648:	ldr	x2, [x0]
     64c:	mov	w1, #0x135                 	// #309
     650:	adrp	x0, 0 <grub_mod_init-0x1140>
     654:	add	x0, x0, #0x0
     658:	ldr	x0, [x0]
     65c:	bl	0 <grub_real_dprintf>
     660:	mov	x0, #0x0                   	// #0
     664:	b	928 <grub_mod_init-0x818>
     668:	ldrh	w0, [sp, #144]
     66c:	cmp	w0, #0x16
     670:	b.hi	698 <grub_mod_init-0xaa8>  // b.pmore
     674:	ldrh	w0, [sp, #144]
     678:	mov	w1, w0
     67c:	adrp	x0, 0 <grub_mod_init-0x1140>
     680:	add	x0, x0, #0x0
     684:	ldr	x0, [x0]
     688:	sxtw	x1, w1
     68c:	ldr	x0, [x0, x1, lsl #3]
     690:	cmp	x0, #0x0
     694:	b.ne	6bc <grub_mod_init-0xa84>  // b.any
     698:	ldrh	w0, [sp, #144]
     69c:	mov	w2, w0
     6a0:	adrp	x0, 0 <grub_mod_init-0x1140>
     6a4:	add	x0, x0, #0x0
     6a8:	ldr	x1, [x0]
     6ac:	mov	w0, #0x5                   	// #5
     6b0:	bl	0 <grub_error>
     6b4:	mov	x0, #0x0                   	// #0
     6b8:	b	928 <grub_mod_init-0x818>
     6bc:	ldrh	w0, [sp, #144]
     6c0:	mov	w1, w0
     6c4:	adrp	x0, 0 <grub_mod_init-0x1140>
     6c8:	add	x0, x0, #0x0
     6cc:	ldr	x0, [x0]
     6d0:	sxtw	x1, w1
     6d4:	ldr	x0, [x0, x1, lsl #3]
     6d8:	str	x0, [sp, #648]
     6dc:	ldr	x0, [sp, #648]
     6e0:	bl	0 <grub_crypto_lookup_cipher_by_name>
     6e4:	str	x0, [sp, #624]
     6e8:	ldr	x0, [sp, #624]
     6ec:	cmp	x0, #0x0
     6f0:	b.ne	714 <grub_mod_init-0xa2c>  // b.any
     6f4:	ldr	x2, [sp, #648]
     6f8:	adrp	x0, 0 <grub_mod_init-0x1140>
     6fc:	add	x0, x0, #0x0
     700:	ldr	x1, [x0]
     704:	mov	w0, #0x5                   	// #5
     708:	bl	0 <grub_error>
     70c:	mov	x0, #0x0                   	// #0
     710:	b	928 <grub_mod_init-0x818>
     714:	ldr	x0, [sp, #624]
     718:	bl	0 <grub_crypto_cipher_open>
     71c:	str	x0, [sp, #656]
     720:	ldr	x0, [sp, #656]
     724:	cmp	x0, #0x0
     728:	b.ne	734 <grub_mod_init-0xa0c>  // b.any
     72c:	mov	x0, #0x0                   	// #0
     730:	b	928 <grub_mod_init-0x818>
     734:	ldrh	w0, [sp, #144]
     738:	cmp	w0, #0x16
     73c:	b.ne	768 <grub_mod_init-0x9d8>  // b.any
     740:	ldr	x0, [sp, #624]
     744:	bl	0 <grub_crypto_cipher_open>
     748:	str	x0, [sp, #664]
     74c:	ldr	x0, [sp, #664]
     750:	cmp	x0, #0x0
     754:	b.ne	768 <grub_mod_init-0x9d8>  // b.any
     758:	ldr	x0, [sp, #656]
     75c:	bl	0 <grub_mod_init-0x1140>
     760:	mov	x0, #0x0                   	// #0
     764:	b	928 <grub_mod_init-0x818>
     768:	ldrh	w0, [sp, #146]
     76c:	cmp	w0, #0x400
     770:	b.ls	7a8 <grub_mod_init-0x998>  // b.plast
     774:	ldrh	w0, [sp, #146]
     778:	mov	w2, w0
     77c:	adrp	x0, 0 <grub_mod_init-0x1140>
     780:	add	x0, x0, #0x0
     784:	ldr	x1, [x0]
     788:	mov	w0, #0x12                  	// #18
     78c:	bl	0 <grub_error>
     790:	ldr	x0, [sp, #656]
     794:	bl	0 <grub_mod_init-0x1140>
     798:	ldr	x0, [sp, #664]
     79c:	bl	0 <grub_mod_init-0x1140>
     7a0:	mov	x0, #0x0                   	// #0
     7a4:	b	928 <grub_mod_init-0x818>
     7a8:	mov	x0, #0x238                 	// #568
     7ac:	bl	0 <grub_zalloc>
     7b0:	str	x0, [sp, #616]
     7b4:	ldr	x0, [sp, #616]
     7b8:	cmp	x0, #0x0
     7bc:	b.ne	7d8 <grub_mod_init-0x968>  // b.any
     7c0:	ldr	x0, [sp, #656]
     7c4:	bl	0 <grub_mod_init-0x1140>
     7c8:	ldr	x0, [sp, #664]
     7cc:	bl	0 <grub_mod_init-0x1140>
     7d0:	mov	x0, #0x0                   	// #0
     7d4:	b	928 <grub_mod_init-0x818>
     7d8:	ldr	x0, [sp, #616]
     7dc:	ldr	x1, [sp, #656]
     7e0:	str	x1, [x0, #56]
     7e4:	ldr	x0, [sp, #616]
     7e8:	ldr	x1, [sp, #664]
     7ec:	str	x1, [x0, #64]
     7f0:	ldr	x0, [sp, #616]
     7f4:	str	xzr, [x0, #24]
     7f8:	ldr	x0, [sp, #616]
     7fc:	str	xzr, [x0, #40]
     800:	ldr	x0, [sp, #616]
     804:	str	wzr, [x0, #112]
     808:	ldrh	w0, [sp, #144]
     80c:	cmp	w0, #0x16
     810:	b.ne	830 <grub_mod_init-0x910>  // b.any
     814:	ldr	x0, [sp, #616]
     818:	mov	w1, #0x3                   	// #3
     81c:	str	w1, [x0, #104]
     820:	ldr	x0, [sp, #616]
     824:	mov	w1, #0x5                   	// #5
     828:	str	w1, [x0, #108]
     82c:	b	848 <grub_mod_init-0x8f8>
     830:	ldr	x0, [sp, #616]
     834:	mov	w1, #0x1                   	// #1
     838:	str	w1, [x0, #104]
     83c:	ldr	x0, [sp, #616]
     840:	mov	w1, #0x6                   	// #6
     844:	str	w1, [x0, #108]
     848:	ldr	x0, [sp, #616]
     84c:	str	xzr, [x0, #72]
     850:	ldr	x0, [sp, #616]
     854:	str	xzr, [x0, #80]
     858:	ldr	x0, [sp, #616]
     85c:	adrp	x1, 0 <grub_mod_init-0x1140>
     860:	add	x1, x1, #0x0
     864:	ldr	x1, [x1]
     868:	str	x1, [x0, #88]
     86c:	ldr	x0, [sp, #616]
     870:	adrp	x1, 0 <grub_mod_init-0x1140>
     874:	add	x1, x1, #0x0
     878:	ldr	x1, [x1]
     87c:	str	x1, [x0, #96]
     880:	ldr	x0, [sp, #616]
     884:	str	wzr, [x0, #456]
     888:	b	8a0 <grub_mod_init-0x8a0>
     88c:	ldr	x0, [sp, #616]
     890:	ldr	w0, [x0, #456]
     894:	add	w1, w0, #0x1
     898:	ldr	x0, [sp, #616]
     89c:	str	w1, [x0, #456]
     8a0:	ldr	x0, [sp, #616]
     8a4:	ldr	w0, [x0, #456]
     8a8:	mov	w1, #0x1                   	// #1
     8ac:	lsl	w1, w1, w0
     8b0:	ldur	w0, [sp, #158]
     8b4:	cmp	w1, w0
     8b8:	b.cc	88c <grub_mod_init-0x8b4>  // b.lo, b.ul, b.last
     8bc:	ldr	w0, [sp, #136]
     8c0:	cmp	w0, #0x4
     8c4:	b.ls	8e8 <grub_mod_init-0x858>  // b.plast
     8c8:	ldr	x0, [sp, #616]
     8cc:	adrp	x1, 0 <grub_mod_init-0x1140>
     8d0:	add	x1, x1, #0x0
     8d4:	ldr	x1, [x1]
     8d8:	str	x1, [x0, #464]
     8dc:	ldr	x0, [sp, #616]
     8e0:	mov	w1, #0x14                  	// #20
     8e4:	str	w1, [x0, #472]
     8e8:	ldr	x0, [sp, #616]
     8ec:	adrp	x1, 0 <grub_mod_init-0x1140>
     8f0:	add	x1, x1, #0x0
     8f4:	ldr	x1, [x1]
     8f8:	str	x1, [x0, #448]
     8fc:	ldr	x0, [sp, #40]
     900:	bl	0 <grub_disk_get_size>
     904:	sub	x1, x0, #0x1
     908:	ldr	x0, [sp, #616]
     90c:	str	x1, [x0, #32]
     910:	ldr	x0, [sp, #616]
     914:	add	x0, x0, #0x8c
     918:	add	x1, sp, #0x30
     91c:	mov	x2, #0x48                  	// #72
     920:	bl	78 <grub_mod_init-0x10c8>
     924:	ldr	x0, [sp, #616]
     928:	ldp	x29, x30, [sp]
     92c:	add	sp, sp, #0x2a0
     930:	ret
     934:	nop
	...
     9b0:	sub	sp, sp, #0x580
     9b4:	stp	x29, x30, [sp]
     9b8:	mov	x29, sp
     9bc:	str	x19, [sp, #16]
     9c0:	str	x0, [sp, #40]
     9c4:	str	x1, [sp, #32]
     9c8:	add	x0, sp, #0x400
     9cc:	stp	xzr, xzr, [x0, #-216]
     9d0:	add	x0, sp, #0x338
     9d4:	mov	x1, #0xf0                  	// #240
     9d8:	mov	x2, x1
     9dc:	mov	w1, #0x0                   	// #0
     9e0:	bl	0 <memset>
     9e4:	ldr	x0, [sp, #32]
     9e8:	ldr	x0, [x0, #56]
     9ec:	ldr	x0, [x0]
     9f0:	ldr	x0, [x0, #24]
     9f4:	cmp	x0, #0x10
     9f8:	b.ls	a14 <grub_mod_init-0x72c>  // b.plast
     9fc:	adrp	x0, 0 <grub_mod_init-0x1140>
     a00:	add	x0, x0, #0x0
     a04:	ldr	x1, [x0]
     a08:	mov	w0, #0x26                  	// #38
     a0c:	bl	0 <grub_error>
     a10:	b	10ac <grub_mod_init-0x94>
     a14:	ldr	x0, [sp, #32]
     a18:	ldr	x0, [x0, #88]
     a1c:	ldr	x0, [x0, #32]
     a20:	cmp	x0, #0x40
     a24:	b.ls	a40 <grub_mod_init-0x700>  // b.plast
     a28:	adrp	x0, 0 <grub_mod_init-0x1140>
     a2c:	add	x0, x0, #0x0
     a30:	ldr	x1, [x0]
     a34:	mov	w0, #0x26                  	// #38
     a38:	bl	0 <grub_error>
     a3c:	b	10ac <grub_mod_init-0x94>
     a40:	ldr	x0, [sp, #40]
     a44:	bl	0 <grub_disk_get_size>
     a48:	str	x0, [sp, #1368]
     a4c:	ldr	x0, [sp, #1368]
     a50:	cmn	x0, #0x1
     a54:	b.eq	a64 <grub_mod_init-0x6dc>  // b.none
     a58:	ldr	x0, [sp, #1368]
     a5c:	cmp	x0, #0x0
     a60:	b.ne	a7c <grub_mod_init-0x6c4>  // b.any
     a64:	adrp	x0, 0 <grub_mod_init-0x1140>
     a68:	add	x0, x0, #0x0
     a6c:	ldr	x1, [x0]
     a70:	mov	w0, #0x26                  	// #38
     a74:	bl	0 <grub_error>
     a78:	b	10ac <grub_mod_init-0x94>
     a7c:	ldr	x0, [sp, #1368]
     a80:	sub	x0, x0, #0x1
     a84:	add	x1, sp, #0x138
     a88:	mov	x4, x1
     a8c:	mov	x3, #0x1ef                 	// #495
     a90:	mov	x2, #0x0                   	// #0
     a94:	mov	x1, x0
     a98:	ldr	x0, [sp, #40]
     a9c:	bl	0 <grub_disk_read>
     aa0:	str	w0, [sp, #1364]
     aa4:	ldr	w0, [sp, #1364]
     aa8:	cmp	w0, #0x0
     aac:	b.eq	ab8 <grub_mod_init-0x688>  // b.none
     ab0:	ldr	w0, [sp, #1364]
     ab4:	b	10ac <grub_mod_init-0x94>
     ab8:	ldrh	w0, [sp, #338]
     abc:	lsr	w0, w0, #3
     ac0:	and	w0, w0, #0xffff
     ac4:	and	x0, x0, #0xffff
     ac8:	str	x0, [sp, #1352]
     acc:	add	x0, sp, #0x468
     ad0:	mov	x2, #0x10                  	// #16
     ad4:	mov	w1, #0x0                   	// #0
     ad8:	bl	0 <grub_memset>
     adc:	adrp	x0, 0 <grub_mod_init-0x1140>
     ae0:	add	x0, x0, #0x0
     ae4:	ldr	x0, [x0]
     ae8:	bl	0 <grub_puts_>
     aec:	str	xzr, [sp, #1392]
     af0:	ldr	x0, [sp, #40]
     af4:	ldr	x0, [x0, #40]
     af8:	cmp	x0, #0x0
     afc:	b.eq	b10 <grub_mod_init-0x630>  // b.none
     b00:	ldr	x0, [sp, #40]
     b04:	ldr	x0, [x0, #40]
     b08:	bl	0 <grub_partition_get_name>
     b0c:	str	x0, [sp, #1392]
     b10:	ldr	x0, [sp, #40]
     b14:	ldr	x5, [x0]
     b18:	ldr	x0, [sp, #40]
     b1c:	ldr	x0, [x0, #40]
     b20:	cmp	x0, #0x0
     b24:	b.eq	b38 <grub_mod_init-0x608>  // b.none
     b28:	adrp	x0, 0 <grub_mod_init-0x1140>
     b2c:	add	x0, x0, #0x0
     b30:	ldr	x1, [x0]
     b34:	b	b44 <grub_mod_init-0x5fc>
     b38:	adrp	x0, 0 <grub_mod_init-0x1140>
     b3c:	add	x0, x0, #0x0
     b40:	ldr	x1, [x0]
     b44:	ldr	x0, [sp, #1392]
     b48:	cmp	x0, #0x0
     b4c:	b.ne	b5c <grub_mod_init-0x5e4>  // b.any
     b50:	adrp	x0, 0 <grub_mod_init-0x1140>
     b54:	add	x0, x0, #0x0
     b58:	ldr	x0, [x0]
     b5c:	ldr	x2, [sp, #32]
     b60:	add	x2, x2, #0x8c
     b64:	mov	x4, x2
     b68:	mov	x3, x0
     b6c:	mov	x2, x1
     b70:	mov	x1, x5
     b74:	adrp	x0, 0 <grub_mod_init-0x1140>
     b78:	add	x0, x0, #0x0
     b7c:	ldr	x0, [x0]
     b80:	bl	0 <grub_printf_>
     b84:	ldr	x0, [sp, #1392]
     b88:	bl	0 <grub_free>
     b8c:	add	x0, sp, #0x328
     b90:	mov	w1, #0x100                 	// #256
     b94:	bl	0 <grub_password_get>
     b98:	cmp	w0, #0x0
     b9c:	b.ne	bb8 <grub_mod_init-0x588>  // b.any
     ba0:	adrp	x0, 0 <grub_mod_init-0x1140>
     ba4:	add	x0, x0, #0x0
     ba8:	ldr	x1, [x0]
     bac:	mov	w0, #0x12                  	// #18
     bb0:	bl	0 <grub_error>
     bb4:	b	10ac <grub_mod_init-0x94>
     bb8:	add	x0, sp, #0x200
     bbc:	ldur	w0, [x0, #-157]
     bc0:	cmp	w0, #0x0
     bc4:	b.eq	c78 <grub_mod_init-0x4c8>  // b.none
     bc8:	ldr	x0, [sp, #32]
     bcc:	ldr	x19, [x0, #88]
     bd0:	add	x0, sp, #0x328
     bd4:	bl	0 <grub_strlen>
     bd8:	mov	x8, x0
     bdc:	add	x0, sp, #0x200
     be0:	ldur	w2, [x0, #-157]
     be4:	add	x3, sp, #0x78
     be8:	add	x0, sp, #0x138
     bec:	add	x1, x0, #0x2f
     bf0:	add	x0, sp, #0x328
     bf4:	mov	x7, #0x40                  	// #64
     bf8:	mov	x6, x3
     bfc:	mov	w5, w2
     c00:	mov	x4, #0x40                  	// #64
     c04:	mov	x3, x1
     c08:	mov	x2, x8
     c0c:	mov	x1, x0
     c10:	mov	x0, x19
     c14:	bl	0 <grub_crypto_pbkdf2>
     c18:	str	w0, [sp, #1340]
     c1c:	ldr	w0, [sp, #1340]
     c20:	cmp	w0, #0x0
     c24:	b.eq	c34 <grub_mod_init-0x50c>  // b.none
     c28:	ldr	w0, [sp, #1340]
     c2c:	bl	0 <grub_crypto_gcry_error>
     c30:	b	10ac <grub_mod_init-0x94>
     c34:	ldr	x0, [sp, #32]
     c38:	ldr	x0, [x0, #88]
     c3c:	add	x2, sp, #0x4b8
     c40:	add	x1, sp, #0x78
     c44:	mov	x5, x2
     c48:	mov	x4, #0x40                  	// #64
     c4c:	mov	x3, x1
     c50:	mov	x2, #0x0                   	// #0
     c54:	mov	x1, #0x0                   	// #0
     c58:	bl	0 <grub_crypto_hmac_buffer>
     c5c:	str	w0, [sp, #1340]
     c60:	ldr	w0, [sp, #1340]
     c64:	cmp	w0, #0x0
     c68:	b.eq	d0c <grub_mod_init-0x434>  // b.none
     c6c:	ldr	w0, [sp, #1340]
     c70:	bl	0 <grub_crypto_gcry_error>
     c74:	b	10ac <grub_mod_init-0x94>
     c78:	ldr	x0, [sp, #32]
     c7c:	ldr	x0, [x0, #88]
     c80:	mov	x2, #0x0                   	// #0
     c84:	mov	x1, #0x0                   	// #0
     c88:	bl	0 <grub_crypto_hmac_init>
     c8c:	str	x0, [sp, #1344]
     c90:	ldr	x0, [sp, #1344]
     c94:	cmp	x0, #0x0
     c98:	b.ne	ca8 <grub_mod_init-0x498>  // b.any
     c9c:	mov	w0, #0x22                  	// #34
     ca0:	bl	0 <grub_crypto_gcry_error>
     ca4:	b	10ac <grub_mod_init-0x94>
     ca8:	add	x0, sp, #0x138
     cac:	add	x0, x0, #0x2f
     cb0:	mov	x2, #0x40                  	// #64
     cb4:	mov	x1, x0
     cb8:	ldr	x0, [sp, #1344]
     cbc:	bl	0 <grub_crypto_hmac_write>
     cc0:	add	x0, sp, #0x328
     cc4:	bl	0 <grub_strlen>
     cc8:	mov	x1, x0
     ccc:	add	x0, sp, #0x328
     cd0:	mov	x2, x1
     cd4:	mov	x1, x0
     cd8:	ldr	x0, [sp, #1344]
     cdc:	bl	0 <grub_crypto_hmac_write>
     ce0:	add	x0, sp, #0x4b8
     ce4:	mov	x1, x0
     ce8:	ldr	x0, [sp, #1344]
     cec:	bl	0 <grub_crypto_hmac_fini>
     cf0:	str	w0, [sp, #1340]
     cf4:	ldr	w0, [sp, #1340]
     cf8:	cmp	w0, #0x0
     cfc:	b.eq	d0c <grub_mod_init-0x434>  // b.none
     d00:	ldr	w0, [sp, #1340]
     d04:	bl	0 <grub_crypto_gcry_error>
     d08:	b	10ac <grub_mod_init-0x94>
     d0c:	ldr	x0, [sp, #32]
     d10:	ldr	x6, [x0, #88]
     d14:	ldr	x0, [sp, #32]
     d18:	ldr	x0, [x0, #88]
     d1c:	ldr	x2, [x0, #32]
     d20:	add	x0, sp, #0x4f8
     d24:	add	x1, sp, #0x4b8
     d28:	mov	x5, x0
     d2c:	mov	x4, #0x1                   	// #1
     d30:	adrp	x0, 0 <grub_mod_init-0x1140>
     d34:	add	x0, x0, #0x0
     d38:	ldr	x3, [x0]
     d3c:	mov	x0, x6
     d40:	bl	0 <grub_crypto_hmac_buffer>
     d44:	str	w0, [sp, #1340]
     d48:	ldr	w0, [sp, #1340]
     d4c:	cmp	w0, #0x0
     d50:	b.eq	d60 <grub_mod_init-0x3e0>  // b.none
     d54:	ldr	w0, [sp, #1340]
     d58:	bl	0 <grub_crypto_gcry_error>
     d5c:	b	10ac <grub_mod_init-0x94>
     d60:	ldr	x0, [sp, #32]
     d64:	ldr	x6, [x0, #88]
     d68:	ldr	x0, [sp, #32]
     d6c:	ldr	x0, [x0, #88]
     d70:	ldr	x2, [x0, #32]
     d74:	add	x0, sp, #0x478
     d78:	add	x1, sp, #0x4b8
     d7c:	mov	x5, x0
     d80:	mov	x4, #0x1                   	// #1
     d84:	adrp	x0, 0 <grub_mod_init-0x1140>
     d88:	add	x0, x0, #0x0
     d8c:	ldr	x3, [x0]
     d90:	mov	x0, x6
     d94:	bl	0 <grub_crypto_hmac_buffer>
     d98:	str	w0, [sp, #1340]
     d9c:	ldr	w0, [sp, #1340]
     da0:	cmp	w0, #0x0
     da4:	b.eq	db4 <grub_mod_init-0x38c>  // b.none
     da8:	ldr	w0, [sp, #1340]
     dac:	bl	0 <grub_crypto_gcry_error>
     db0:	b	10ac <grub_mod_init-0x94>
     db4:	ldr	x4, [sp, #1352]
     db8:	adrp	x0, 0 <grub_mod_init-0x1140>
     dbc:	add	x0, x0, #0x0
     dc0:	ldr	x3, [x0]
     dc4:	adrp	x0, 0 <grub_mod_init-0x1140>
     dc8:	add	x0, x0, #0x0
     dcc:	ldr	x2, [x0]
     dd0:	mov	w1, #0x1ed                 	// #493
     dd4:	adrp	x0, 0 <grub_mod_init-0x1140>
     dd8:	add	x0, x0, #0x0
     ddc:	ldr	x0, [x0]
     de0:	bl	0 <grub_real_dprintf>
     de4:	str	wzr, [sp, #1404]
     de8:	b	108c <grub_mod_init-0xb4>
     dec:	ldrb	w0, [sp, #354]
     df0:	mov	w1, w0
     df4:	ldr	w0, [sp, #1404]
     df8:	asr	w0, w1, w0
     dfc:	and	w0, w0, #0x1
     e00:	cmp	w0, #0x0
     e04:	b.eq	1074 <grub_mod_init-0xcc>  // b.none
     e08:	ldr	w4, [sp, #1404]
     e0c:	adrp	x0, 0 <grub_mod_init-0x1140>
     e10:	add	x0, x0, #0x0
     e14:	ldr	x3, [x0]
     e18:	adrp	x0, 0 <grub_mod_init-0x1140>
     e1c:	add	x0, x0, #0x0
     e20:	ldr	x2, [x0]
     e24:	mov	w1, #0x1f9                 	// #505
     e28:	adrp	x0, 0 <grub_mod_init-0x1140>
     e2c:	add	x0, x0, #0x0
     e30:	ldr	x0, [x0]
     e34:	bl	0 <grub_real_dprintf>
     e38:	ldr	x0, [sp, #32]
     e3c:	ldr	x0, [x0, #56]
     e40:	ldr	x1, [sp, #1352]
     e44:	mov	w2, w1
     e48:	add	x1, sp, #0x4f8
     e4c:	bl	0 <grub_crypto_cipher_set_key>
     e50:	str	w0, [sp, #1340]
     e54:	ldr	w0, [sp, #1340]
     e58:	cmp	w0, #0x0
     e5c:	b.eq	e6c <grub_mod_init-0x2d4>  // b.none
     e60:	ldr	w0, [sp, #1340]
     e64:	bl	0 <grub_crypto_gcry_error>
     e68:	b	10ac <grub_mod_init-0x94>
     e6c:	ldr	x0, [sp, #32]
     e70:	ldr	x5, [x0, #56]
     e74:	add	x2, sp, #0x138
     e78:	ldr	w1, [sp, #1404]
     e7c:	mov	x0, x1
     e80:	lsl	x0, x0, #1
     e84:	add	x0, x0, x1
     e88:	lsl	x0, x0, #6
     e8c:	add	x0, x0, #0x60
     e90:	add	x0, x2, x0
     e94:	add	x1, x0, #0xf
     e98:	add	x2, sp, #0x468
     e9c:	add	x0, sp, #0x78
     ea0:	mov	x4, x2
     ea4:	mov	x3, #0xc0                  	// #192
     ea8:	mov	x2, x1
     eac:	mov	x1, x0
     eb0:	mov	x0, x5
     eb4:	bl	0 <grub_crypto_cbc_decrypt>
     eb8:	str	w0, [sp, #1340]
     ebc:	ldr	w0, [sp, #1340]
     ec0:	cmp	w0, #0x0
     ec4:	b.eq	ed4 <grub_mod_init-0x26c>  // b.none
     ec8:	ldr	w0, [sp, #1340]
     ecc:	bl	0 <grub_crypto_gcry_error>
     ed0:	b	10ac <grub_mod_init-0x94>
     ed4:	ldr	x0, [sp, #32]
     ed8:	ldr	x6, [x0, #88]
     edc:	ldr	x0, [sp, #32]
     ee0:	ldr	x0, [x0, #88]
     ee4:	ldr	x1, [x0, #32]
     ee8:	add	x3, sp, #0x38
     eec:	add	x2, sp, #0x78
     ef0:	add	x0, sp, #0x478
     ef4:	mov	x5, x3
     ef8:	mov	x4, #0x80                  	// #128
     efc:	mov	x3, x2
     f00:	mov	x2, x1
     f04:	mov	x1, x0
     f08:	mov	x0, x6
     f0c:	bl	0 <grub_crypto_hmac_buffer>
     f10:	str	w0, [sp, #1340]
     f14:	ldr	w0, [sp, #1340]
     f18:	cmp	w0, #0x0
     f1c:	b.eq	f2c <grub_mod_init-0x214>  // b.none
     f20:	ldr	w0, [sp, #1340]
     f24:	bl	0 <grub_crypto_gcry_error>
     f28:	b	10ac <grub_mod_init-0x94>
     f2c:	ldr	x0, [sp, #32]
     f30:	ldr	x0, [x0, #88]
     f34:	ldr	x2, [x0, #32]
     f38:	add	x1, sp, #0x38
     f3c:	add	x0, sp, #0x78
     f40:	add	x0, x0, #0x80
     f44:	bl	0 <grub_memcmp>
     f48:	cmp	w0, #0x0
     f4c:	b.ne	107c <grub_mod_init-0xc4>  // b.any
     f50:	ldr	w1, [sp, #1404]
     f54:	adrp	x0, 0 <grub_mod_init-0x1140>
     f58:	add	x0, x0, #0x0
     f5c:	ldr	x0, [x0]
     f60:	bl	0 <grub_printf_>
     f64:	ldr	w0, [sp, #328]
     f68:	cmp	w0, #0x6
     f6c:	b.ls	f88 <grub_mod_init-0x1b8>  // b.plast
     f70:	add	x0, sp, #0x78
     f74:	add	x1, x0, #0x40
     f78:	add	x0, sp, #0x428
     f7c:	mov	x2, #0x40                  	// #64
     f80:	bl	78 <grub_mod_init-0x10c8>
     f84:	b	f98 <grub_mod_init-0x1a8>
     f88:	add	x1, sp, #0x78
     f8c:	add	x0, sp, #0x428
     f90:	mov	x2, #0x40                  	// #64
     f94:	bl	78 <grub_mod_init-0x10c8>
     f98:	ldr	x0, [sp, #32]
     f9c:	ldr	x0, [x0, #464]
     fa0:	cmp	x0, #0x0
     fa4:	b.ne	ffc <grub_mod_init-0x144>  // b.any
     fa8:	ldr	x0, [sp, #1352]
     fac:	str	x0, [sp, #1384]
     fb0:	ldrh	w0, [sp, #336]
     fb4:	cmp	w0, #0x16
     fb8:	b.ne	fc8 <grub_mod_init-0x178>  // b.any
     fbc:	ldr	x0, [sp, #1384]
     fc0:	lsl	x0, x0, #1
     fc4:	str	x0, [sp, #1384]
     fc8:	add	x0, sp, #0x78
     fcc:	add	x0, x0, #0x40
     fd0:	ldr	x2, [sp, #1384]
     fd4:	mov	x1, x0
     fd8:	ldr	x0, [sp, #32]
     fdc:	bl	0 <grub_cryptodisk_setkey>
     fe0:	str	w0, [sp, #1340]
     fe4:	ldr	w0, [sp, #1340]
     fe8:	cmp	w0, #0x0
     fec:	b.eq	104c <grub_mod_init-0xf4>  // b.none
     ff0:	ldr	w0, [sp, #1340]
     ff4:	bl	0 <grub_crypto_gcry_error>
     ff8:	b	10ac <grub_mod_init-0x94>
     ffc:	ldr	x0, [sp, #1352]
    1000:	str	x0, [sp, #1376]
    1004:	ldrh	w0, [sp, #336]
    1008:	cmp	w0, #0x16
    100c:	b.ne	101c <grub_mod_init-0x124>  // b.any
    1010:	ldr	x0, [sp, #1376]
    1014:	lsl	x0, x0, #1
    1018:	str	x0, [sp, #1376]
    101c:	ldr	x0, [sp, #32]
    1020:	add	x0, x0, #0x1dc
    1024:	add	x1, sp, #0x428
    1028:	mov	x2, #0x40                  	// #64
    102c:	bl	78 <grub_mod_init-0x10c8>
    1030:	ldr	x0, [sp, #1376]
    1034:	mov	w1, w0
    1038:	ldr	x0, [sp, #32]
    103c:	str	w1, [x0, #552]
    1040:	ldr	x0, [sp, #32]
    1044:	mov	x1, #0xffffffffffffffff    	// #-1
    1048:	str	x1, [x0, #544]
    104c:	ldr	x0, [sp, #32]
    1050:	mov	x1, #0x40                  	// #64
    1054:	str	x1, [x0, #304]
    1058:	ldr	x0, [sp, #32]
    105c:	add	x0, x0, #0xf0
    1060:	add	x1, sp, #0x78
    1064:	mov	x2, #0x40                  	// #64
    1068:	bl	78 <grub_mod_init-0x10c8>
    106c:	mov	w0, #0x0                   	// #0
    1070:	b	10ac <grub_mod_init-0x94>
    1074:	nop
    1078:	b	1080 <grub_mod_init-0xc0>
    107c:	nop
    1080:	ldr	w0, [sp, #1404]
    1084:	add	w0, w0, #0x1
    1088:	str	w0, [sp, #1404]
    108c:	ldr	w0, [sp, #1404]
    1090:	cmp	w0, #0x1
    1094:	b.ls	dec <grub_mod_init-0x354>  // b.plast
    1098:	adrp	x0, 0 <grub_mod_init-0x1140>
    109c:	add	x0, x0, #0x0
    10a0:	ldr	x1, [x0]
    10a4:	mov	w0, #0x1e                  	// #30
    10a8:	bl	0 <grub_error>
    10ac:	ldr	x19, [sp, #16]
    10b0:	ldp	x29, x30, [sp]
    10b4:	add	sp, sp, #0x580
    10b8:	ret
    10bc:	nop
	...

0000000000001140 <grub_mod_init>:
    1140:	stp	x29, x30, [sp, #-32]!
    1144:	mov	x29, sp
    1148:	str	x0, [sp, #24]
    114c:	adrp	x0, 0 <grub_mod_init-0x1140>
    1150:	add	x0, x0, #0x0
    1154:	ldr	x0, [x0]
    1158:	bl	20 <grub_mod_init-0x1120>
    115c:	nop
    1160:	ldp	x29, x30, [sp], #32
    1164:	ret
	...

0000000000001170 <grub_mod_fini>:
    1170:	stp	x29, x30, [sp, #-16]!
    1174:	mov	x29, sp
    1178:	adrp	x0, 0 <grub_mod_init-0x1140>
    117c:	add	x0, x0, #0x0
    1180:	ldr	x0, [x0]
    1184:	bl	58 <grub_mod_init-0x10e8>
    1188:	nop
    118c:	ldp	x29, x30, [sp], #16
    1190:	ret
    1194:	nop
	...
