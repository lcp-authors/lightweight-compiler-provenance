
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgomp.so.1.0.0_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000085c0 <.init>:
    85c0:	stp	x29, x30, [sp, #-16]!
    85c4:	mov	x29, sp
    85c8:	bl	acdc <fprintf@plt+0x217c>
    85cc:	ldp	x29, x30, [sp], #16
    85d0:	ret

Disassembly of section .plt:

00000000000085e0 <memcpy@plt-0x20>:
    85e0:	stp	x16, x30, [sp, #-16]!
    85e4:	adrp	x16, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    85e8:	ldr	x17, [x16, #4088]
    85ec:	add	x16, x16, #0xff8
    85f0:	br	x17
    85f4:	nop
    85f8:	nop
    85fc:	nop

0000000000008600 <memcpy@plt>:
    8600:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16]
    8608:	add	x16, x16, #0x0
    860c:	br	x17

0000000000008610 <memmove@plt>:
    8610:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #8]
    8618:	add	x16, x16, #0x8
    861c:	br	x17

0000000000008620 <strtoul@plt>:
    8620:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #16]
    8628:	add	x16, x16, #0x10
    862c:	br	x17

0000000000008630 <strlen@plt>:
    8630:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #24]
    8638:	add	x16, x16, #0x18
    863c:	br	x17

0000000000008640 <fputs@plt>:
    8640:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #32]
    8648:	add	x16, x16, #0x20
    864c:	br	x17

0000000000008650 <exit@plt>:
    8650:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #40]
    8658:	add	x16, x16, #0x28
    865c:	br	x17

0000000000008660 <acc_wait_all@plt>:
    8660:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #48]
    8668:	add	x16, x16, #0x30
    866c:	br	x17

0000000000008670 <secure_getenv@plt>:
    8670:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #56]
    8678:	add	x16, x16, #0x38
    867c:	br	x17

0000000000008680 <pthread_key_create@plt>:
    8680:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #64]
    8688:	add	x16, x16, #0x40
    868c:	br	x17

0000000000008690 <acc_copyout_finalize@plt>:
    8690:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #72]
    8698:	add	x16, x16, #0x48
    869c:	br	x17

00000000000086a0 <__cxa_finalize@plt>:
    86a0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #80]
    86a8:	add	x16, x16, #0x50
    86ac:	br	x17

00000000000086b0 <sprintf@plt>:
    86b0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #88]
    86b8:	add	x16, x16, #0x58
    86bc:	br	x17

00000000000086c0 <getloadavg@plt>:
    86c0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #96]
    86c8:	add	x16, x16, #0x60
    86cc:	br	x17

00000000000086d0 <__cxa_atexit@plt>:
    86d0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #104]
    86d8:	add	x16, x16, #0x68
    86dc:	br	x17

00000000000086e0 <pthread_attr_init@plt>:
    86e0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #112]
    86e8:	add	x16, x16, #0x70
    86ec:	br	x17

00000000000086f0 <fputc@plt>:
    86f0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #120]
    86f8:	add	x16, x16, #0x78
    86fc:	br	x17

0000000000008700 <clock_gettime@plt>:
    8700:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #128]
    8708:	add	x16, x16, #0x80
    870c:	br	x17

0000000000008710 <acc_copyin@plt>:
    8710:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #136]
    8718:	add	x16, x16, #0x88
    871c:	br	x17

0000000000008720 <acc_delete_finalize@plt>:
    8720:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #144]
    8728:	add	x16, x16, #0x90
    872c:	br	x17

0000000000008730 <__ctype_tolower_loc@plt>:
    8730:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #152]
    8738:	add	x16, x16, #0x98
    873c:	br	x17

0000000000008740 <acc_create@plt>:
    8740:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #160]
    8748:	add	x16, x16, #0xa0
    874c:	br	x17

0000000000008750 <acc_unmap_data@plt>:
    8750:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #168]
    8758:	add	x16, x16, #0xa8
    875c:	br	x17

0000000000008760 <acc_wait_async@plt>:
    8760:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #176]
    8768:	add	x16, x16, #0xb0
    876c:	br	x17

0000000000008770 <fclose@plt>:
    8770:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #184]
    8778:	add	x16, x16, #0xb8
    877c:	br	x17

0000000000008780 <getpid@plt>:
    8780:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #192]
    8788:	add	x16, x16, #0xc0
    878c:	br	x17

0000000000008790 <fopen@plt>:
    8790:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #200]
    8798:	add	x16, x16, #0xc8
    879c:	br	x17

00000000000087a0 <malloc@plt>:
    87a0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #208]
    87a8:	add	x16, x16, #0xd0
    87ac:	br	x17

00000000000087b0 <acc_async_test@plt>:
    87b0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #216]
    87b8:	add	x16, x16, #0xd8
    87bc:	br	x17

00000000000087c0 <pthread_attr_destroy@plt>:
    87c0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #224]
    87c8:	add	x16, x16, #0xe0
    87cc:	br	x17

00000000000087d0 <strncmp@plt>:
    87d0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #232]
    87d8:	add	x16, x16, #0xe8
    87dc:	br	x17

00000000000087e0 <aligned_alloc@plt>:
    87e0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #240]
    87e8:	add	x16, x16, #0xf0
    87ec:	br	x17

00000000000087f0 <pthread_detach@plt>:
    87f0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #248]
    87f8:	add	x16, x16, #0xf8
    87fc:	br	x17

0000000000008800 <memset@plt>:
    8800:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #256]
    8808:	add	x16, x16, #0x100
    880c:	br	x17

0000000000008810 <pthread_attr_setstacksize@plt>:
    8810:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #264]
    8818:	add	x16, x16, #0x108
    881c:	br	x17

0000000000008820 <calloc@plt>:
    8820:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #272]
    8828:	add	x16, x16, #0x110
    882c:	br	x17

0000000000008830 <acc_is_present@plt>:
    8830:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #280]
    8838:	add	x16, x16, #0x118
    883c:	br	x17

0000000000008840 <strcasecmp@plt>:
    8840:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #288]
    8848:	add	x16, x16, #0x120
    884c:	br	x17

0000000000008850 <realloc@plt>:
    8850:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #296]
    8858:	add	x16, x16, #0x128
    885c:	br	x17

0000000000008860 <strdup@plt>:
    8860:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #304]
    8868:	add	x16, x16, #0x130
    886c:	br	x17

0000000000008870 <strerror@plt>:
    8870:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #312]
    8878:	add	x16, x16, #0x138
    887c:	br	x17

0000000000008880 <pthread_create@plt>:
    8880:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #320]
    8888:	add	x16, x16, #0x140
    888c:	br	x17

0000000000008890 <__gmon_start__@plt>:
    8890:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #328]
    8898:	add	x16, x16, #0x148
    889c:	br	x17

00000000000088a0 <pthread_join@plt>:
    88a0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #336]
    88a8:	add	x16, x16, #0x150
    88ac:	br	x17

00000000000088b0 <abort@plt>:
    88b0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #344]
    88b8:	add	x16, x16, #0x158
    88bc:	br	x17

00000000000088c0 <pthread_exit@plt>:
    88c0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #352]
    88c8:	add	x16, x16, #0x160
    88cc:	br	x17

00000000000088d0 <memcmp@plt>:
    88d0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #360]
    88d8:	add	x16, x16, #0x168
    88dc:	br	x17

00000000000088e0 <strcmp@plt>:
    88e0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #368]
    88e8:	add	x16, x16, #0x170
    88ec:	br	x17

00000000000088f0 <__ctype_b_loc@plt>:
    88f0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #376]
    88f8:	add	x16, x16, #0x178
    88fc:	br	x17

0000000000008900 <strtol@plt>:
    8900:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #384]
    8908:	add	x16, x16, #0x180
    890c:	br	x17

0000000000008910 <acc_wait_all_async@plt>:
    8910:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #392]
    8918:	add	x16, x16, #0x188
    891c:	br	x17

0000000000008920 <getline@plt>:
    8920:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #400]
    8928:	add	x16, x16, #0x190
    892c:	br	x17

0000000000008930 <acc_deviceptr@plt>:
    8930:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #408]
    8938:	add	x16, x16, #0x198
    893c:	br	x17

0000000000008940 <clock_getres@plt>:
    8940:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #416]
    8948:	add	x16, x16, #0x1a0
    894c:	br	x17

0000000000008950 <free@plt>:
    8950:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #424]
    8958:	add	x16, x16, #0x1a8
    895c:	br	x17

0000000000008960 <acc_delete@plt>:
    8960:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #432]
    8968:	add	x16, x16, #0x1b0
    896c:	br	x17

0000000000008970 <GOMP_offload_unregister_ver@plt>:
    8970:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #440]
    8978:	add	x16, x16, #0x1b8
    897c:	br	x17

0000000000008980 <pthread_key_delete@plt>:
    8980:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #448]
    8988:	add	x16, x16, #0x1c0
    898c:	br	x17

0000000000008990 <strncasecmp@plt>:
    8990:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #456]
    8998:	add	x16, x16, #0x1c8
    899c:	br	x17

00000000000089a0 <pthread_once@plt>:
    89a0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #464]
    89a8:	add	x16, x16, #0x1d0
    89ac:	br	x17

00000000000089b0 <pthread_getaffinity_np@plt>:
    89b0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #472]
    89b8:	add	x16, x16, #0x1d8
    89bc:	br	x17

00000000000089c0 <acc_init@plt>:
    89c0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #480]
    89c8:	add	x16, x16, #0x1e0
    89cc:	br	x17

00000000000089d0 <acc_copyout@plt>:
    89d0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #488]
    89d8:	add	x16, x16, #0x1e8
    89dc:	br	x17

00000000000089e0 <acc_wait@plt>:
    89e0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #496]
    89e8:	add	x16, x16, #0x1f0
    89ec:	br	x17

00000000000089f0 <strchr@plt>:
    89f0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #504]
    89f8:	add	x16, x16, #0x1f8
    89fc:	br	x17

0000000000008a00 <pthread_setspecific@plt>:
    8a00:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #512]
    8a08:	add	x16, x16, #0x200
    8a0c:	br	x17

0000000000008a10 <strtoull@plt>:
    8a10:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #520]
    8a18:	add	x16, x16, #0x208
    8a1c:	br	x17

0000000000008a20 <fwrite@plt>:
    8a20:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #528]
    8a28:	add	x16, x16, #0x210
    8a2c:	br	x17

0000000000008a30 <__sched_cpucount@plt>:
    8a30:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #536]
    8a38:	add	x16, x16, #0x218
    8a3c:	br	x17

0000000000008a40 <acc_update_self@plt>:
    8a40:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #544]
    8a48:	add	x16, x16, #0x220
    8a4c:	br	x17

0000000000008a50 <pthread_attr_getstacksize@plt>:
    8a50:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #552]
    8a58:	add	x16, x16, #0x228
    8a5c:	br	x17

0000000000008a60 <strcpy@plt>:
    8a60:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #560]
    8a68:	add	x16, x16, #0x230
    8a6c:	br	x17

0000000000008a70 <GOMP_offload_register_ver@plt>:
    8a70:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #568]
    8a78:	add	x16, x16, #0x238
    8a7c:	br	x17

0000000000008a80 <GOACC_enter_exit_data@plt>:
    8a80:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #576]
    8a88:	add	x16, x16, #0x240
    8a8c:	br	x17

0000000000008a90 <sysconf@plt>:
    8a90:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #584]
    8a98:	add	x16, x16, #0x248
    8a9c:	br	x17

0000000000008aa0 <gethostname@plt>:
    8aa0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #592]
    8aa8:	add	x16, x16, #0x250
    8aac:	br	x17

0000000000008ab0 <omp_get_team_num@plt>:
    8ab0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #600]
    8ab8:	add	x16, x16, #0x258
    8abc:	br	x17

0000000000008ac0 <pthread_attr_setaffinity_np@plt>:
    8ac0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #608]
    8ac8:	add	x16, x16, #0x260
    8acc:	br	x17

0000000000008ad0 <pthread_setaffinity_np@plt>:
    8ad0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #616]
    8ad8:	add	x16, x16, #0x268
    8adc:	br	x17

0000000000008ae0 <omp_get_num_teams@plt>:
    8ae0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #624]
    8ae8:	add	x16, x16, #0x270
    8aec:	br	x17

0000000000008af0 <pthread_self@plt>:
    8af0:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #632]
    8af8:	add	x16, x16, #0x278
    8afc:	br	x17

0000000000008b00 <vfprintf@plt>:
    8b00:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #640]
    8b08:	add	x16, x16, #0x280
    8b0c:	br	x17

0000000000008b10 <__assert_fail@plt>:
    8b10:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #648]
    8b18:	add	x16, x16, #0x288
    8b1c:	br	x17

0000000000008b20 <__errno_location@plt>:
    8b20:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8b24:	ldr	x17, [x16, #656]
    8b28:	add	x16, x16, #0x290
    8b2c:	br	x17

0000000000008b30 <getenv@plt>:
    8b30:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8b34:	ldr	x17, [x16, #664]
    8b38:	add	x16, x16, #0x298
    8b3c:	br	x17

0000000000008b40 <syscall@plt>:
    8b40:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8b44:	ldr	x17, [x16, #672]
    8b48:	add	x16, x16, #0x2a0
    8b4c:	br	x17

0000000000008b50 <acc_update_device@plt>:
    8b50:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8b54:	ldr	x17, [x16, #680]
    8b58:	add	x16, x16, #0x2a8
    8b5c:	br	x17

0000000000008b60 <fprintf@plt>:
    8b60:	adrp	x16, 38000 <memcpy@GLIBC_2.17>
    8b64:	ldr	x17, [x16, #688]
    8b68:	add	x16, x16, #0x2b0
    8b6c:	br	x17

Disassembly of section .text:

0000000000008b70 <GOMP_atomic_start@@GOMP_1.0-0x2328>:
    8b70:	sub	sp, sp, #0x250
    8b74:	mov	w5, w2
    8b78:	mov	x4, x1
    8b7c:	mov	x3, x0
    8b80:	stp	x29, x30, [sp]
    8b84:	mov	x29, sp
    8b88:	str	x25, [sp, #64]
    8b8c:	adrp	x25, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    8b90:	stp	x23, x24, [sp, #48]
    8b94:	mov	w24, w2
    8b98:	mov	x23, x1
    8b9c:	ldr	x2, [x25, #832]
    8ba0:	stp	x19, x20, [sp, #16]
    8ba4:	add	x20, sp, #0x50
    8ba8:	mov	x1, #0x200                 	// #512
    8bac:	stp	x21, x22, [sp, #32]
    8bb0:	mov	x22, x0
    8bb4:	mov	x0, x20
    8bb8:	bl	1f748 <omp_get_affinity_format@@OMP_5.0+0x314>
    8bbc:	mov	x19, x0
    8bc0:	cmp	x0, #0x1ff
    8bc4:	add	x21, x0, #0x1
    8bc8:	b.hi	8bfc <fprintf@plt+0x9c>  // b.pmore
    8bcc:	mov	w0, #0xa                   	// #10
    8bd0:	mov	x1, x21
    8bd4:	strb	w0, [x20, x19]
    8bd8:	mov	x0, x20
    8bdc:	bl	1f35c <acc_set_cuda_stream@@OACC_2.0+0x57c>
    8be0:	ldp	x29, x30, [sp]
    8be4:	ldp	x19, x20, [sp, #16]
    8be8:	ldp	x21, x22, [sp, #32]
    8bec:	ldp	x23, x24, [sp, #48]
    8bf0:	ldr	x25, [sp, #64]
    8bf4:	add	sp, sp, #0x250
    8bf8:	ret
    8bfc:	mov	x0, x21
    8c00:	bl	adb0 <fprintf@plt+0x2250>
    8c04:	ldr	x2, [x25, #832]
    8c08:	mov	x20, x0
    8c0c:	mov	w5, w24
    8c10:	mov	x4, x23
    8c14:	mov	x3, x22
    8c18:	mov	x1, x21
    8c1c:	bl	1f748 <omp_get_affinity_format@@OMP_5.0+0x314>
    8c20:	mov	w0, #0xa                   	// #10
    8c24:	strb	w0, [x20, x19]
    8c28:	mov	x1, x21
    8c2c:	mov	x0, x20
    8c30:	bl	1f35c <acc_set_cuda_stream@@OACC_2.0+0x57c>
    8c34:	mov	x0, x20
    8c38:	ldp	x29, x30, [sp]
    8c3c:	ldp	x19, x20, [sp, #16]
    8c40:	ldp	x21, x22, [sp, #32]
    8c44:	ldp	x23, x24, [sp, #48]
    8c48:	ldr	x25, [sp, #64]
    8c4c:	add	sp, sp, #0x250
    8c50:	b	8950 <free@plt>
    8c54:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    8c58:	ldr	w0, [x0, #1704]
    8c5c:	b	8980 <pthread_key_delete@plt>
    8c60:	stp	x29, x30, [sp, #-48]!
    8c64:	mov	x29, sp
    8c68:	stp	x19, x20, [sp, #16]
    8c6c:	mov	x20, x1
    8c70:	stp	x21, x22, [sp, #32]
    8c74:	mov	x21, x0
    8c78:	bl	8b30 <getenv@plt>
    8c7c:	cbz	x0, 8d2c <fprintf@plt+0x1cc>
    8c80:	mov	x19, x0
    8c84:	bl	88f0 <__ctype_b_loc@plt>
    8c88:	ldr	x22, [x0]
    8c8c:	ldrb	w0, [x19]
    8c90:	ldrh	w0, [x22, x0, lsl #1]
    8c94:	tbnz	w0, #13, 8cec <fprintf@plt+0x18c>
    8c98:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    8c9c:	mov	x0, x19
    8ca0:	add	x1, x1, #0xead
    8ca4:	mov	x2, #0x4                   	// #4
    8ca8:	bl	8990 <strncasecmp@plt>
    8cac:	cbnz	w0, 8d00 <fprintf@plt+0x1a0>
    8cb0:	add	x19, x19, #0x4
    8cb4:	mov	w0, #0x1                   	// #1
    8cb8:	strb	w0, [x20]
    8cbc:	ldrb	w1, [x19]
    8cc0:	ldrb	w0, [x19]
    8cc4:	ldrh	w1, [x22, x1, lsl #1]
    8cc8:	tbnz	w1, #13, 8d24 <fprintf@plt+0x1c4>
    8ccc:	cbz	w0, 8d2c <fprintf@plt+0x1cc>
    8cd0:	mov	x1, x21
    8cd4:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    8cd8:	ldp	x19, x20, [sp, #16]
    8cdc:	add	x0, x0, #0xeb8
    8ce0:	ldp	x21, x22, [sp, #32]
    8ce4:	ldp	x29, x30, [sp], #48
    8ce8:	b	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    8cec:	add	x19, x19, #0x1
    8cf0:	b	8c8c <fprintf@plt+0x12c>
    8cf4:	adrp	x19, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    8cf8:	add	x19, x19, #0xeab
    8cfc:	b	8cbc <fprintf@plt+0x15c>
    8d00:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    8d04:	mov	x0, x19
    8d08:	add	x1, x1, #0xeb2
    8d0c:	mov	x2, #0x5                   	// #5
    8d10:	bl	8990 <strncasecmp@plt>
    8d14:	cbnz	w0, 8cf4 <fprintf@plt+0x194>
    8d18:	add	x19, x19, #0x5
    8d1c:	strb	wzr, [x20]
    8d20:	b	8cbc <fprintf@plt+0x15c>
    8d24:	add	x19, x19, #0x1
    8d28:	b	8cbc <fprintf@plt+0x15c>
    8d2c:	ldp	x19, x20, [sp, #16]
    8d30:	ldp	x21, x22, [sp, #32]
    8d34:	ldp	x29, x30, [sp], #48
    8d38:	ret
    8d3c:	stp	x29, x30, [sp, #-80]!
    8d40:	tst	w3, #0xff
    8d44:	mov	x29, sp
    8d48:	stp	x19, x20, [sp, #16]
    8d4c:	stp	x21, x22, [sp, #32]
    8d50:	mov	x21, x0
    8d54:	mov	x22, x1
    8d58:	stp	x23, x24, [sp, #48]
    8d5c:	and	w23, w2, #0xff
    8d60:	b.eq	8dfc <fprintf@plt+0x29c>  // b.none
    8d64:	bl	8670 <secure_getenv@plt>
    8d68:	mov	x19, x0
    8d6c:	cbz	x0, 8e28 <fprintf@plt+0x2c8>
    8d70:	bl	88f0 <__ctype_b_loc@plt>
    8d74:	mov	x20, x0
    8d78:	ldr	x2, [x0]
    8d7c:	ldrb	w1, [x19]
    8d80:	ldrb	w0, [x19]
    8d84:	ldrh	w1, [x2, x1, lsl #1]
    8d88:	tbnz	w1, #13, 8e04 <fprintf@plt+0x2a4>
    8d8c:	cbz	w0, 8e18 <fprintf@plt+0x2b8>
    8d90:	bl	8b20 <__errno_location@plt>
    8d94:	mov	x24, x0
    8d98:	add	x1, sp, #0x48
    8d9c:	mov	x0, x19
    8da0:	mov	w2, #0xa                   	// #10
    8da4:	str	wzr, [x24]
    8da8:	bl	8620 <strtoul@plt>
    8dac:	mov	x3, x0
    8db0:	ldr	w0, [x24]
    8db4:	cbnz	w0, 8e18 <fprintf@plt+0x2b8>
    8db8:	neg	w23, w23
    8dbc:	cmp	x3, w23, sxtw
    8dc0:	b.le	8e18 <fprintf@plt+0x2b8>
    8dc4:	ldr	x4, [x20]
    8dc8:	ldr	x2, [sp, #72]
    8dcc:	ldrb	w1, [x2]
    8dd0:	ldrb	w0, [x2]
    8dd4:	ldrh	w1, [x4, x1, lsl #1]
    8dd8:	tbnz	w1, #13, 8e0c <fprintf@plt+0x2ac>
    8ddc:	cbnz	w0, 8e18 <fprintf@plt+0x2b8>
    8de0:	mov	w0, #0x1                   	// #1
    8de4:	str	x3, [x22]
    8de8:	ldp	x19, x20, [sp, #16]
    8dec:	ldp	x21, x22, [sp, #32]
    8df0:	ldp	x23, x24, [sp, #48]
    8df4:	ldp	x29, x30, [sp], #80
    8df8:	ret
    8dfc:	bl	8b30 <getenv@plt>
    8e00:	b	8d68 <fprintf@plt+0x208>
    8e04:	add	x19, x19, #0x1
    8e08:	b	8d7c <fprintf@plt+0x21c>
    8e0c:	add	x2, x2, #0x1
    8e10:	str	x2, [sp, #72]
    8e14:	b	8dc8 <fprintf@plt+0x268>
    8e18:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    8e1c:	mov	x1, x21
    8e20:	add	x0, x0, #0xeb8
    8e24:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    8e28:	mov	w0, #0x0                   	// #0
    8e2c:	b	8de8 <fprintf@plt+0x288>
    8e30:	stp	x29, x30, [sp, #-160]!
    8e34:	mov	x29, sp
    8e38:	stp	x23, x24, [sp, #48]
    8e3c:	adrp	x24, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    8e40:	stp	x21, x22, [sp, #32]
    8e44:	ldr	x22, [x24, #1576]
    8e48:	stp	x25, x26, [sp, #64]
    8e4c:	mov	x25, x0
    8e50:	ldr	x0, [x0]
    8e54:	stp	x19, x20, [sp, #16]
    8e58:	stp	x27, x28, [sp, #80]
    8e5c:	str	x1, [sp, #96]
    8e60:	stp	x2, x3, [sp, #112]
    8e64:	str	x0, [sp, #152]
    8e68:	cbz	x22, 8e78 <fprintf@plt+0x318>
    8e6c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    8e70:	ldr	x0, [x0, #1616]
    8e74:	ldr	x22, [x22, x0, lsl #3]
    8e78:	ldr	x0, [sp, #96]
    8e7c:	strb	wzr, [x0]
    8e80:	bl	88f0 <__ctype_b_loc@plt>
    8e84:	mov	x19, x0
    8e88:	ldr	x1, [x0]
    8e8c:	ldr	x0, [sp, #152]
    8e90:	ldrb	w3, [x0]
    8e94:	ldrb	w2, [x0]
    8e98:	ldrh	w3, [x1, x3, lsl #1]
    8e9c:	tbnz	w3, #13, 9158 <fprintf@plt+0x5f8>
    8ea0:	cmp	w2, #0x21
    8ea4:	b.eq	9164 <fprintf@plt+0x604>  // b.none
    8ea8:	ldr	x0, [sp, #152]
    8eac:	ldrb	w2, [x0]
    8eb0:	cmp	w2, #0x7b
    8eb4:	b.ne	9224 <fprintf@plt+0x6c4>  // b.any
    8eb8:	add	x0, x0, #0x1
    8ebc:	str	x0, [sp, #152]
    8ec0:	ldr	x23, [sp, #152]
    8ec4:	ldrb	w0, [x23]
    8ec8:	ldrh	w0, [x1, x0, lsl #1]
    8ecc:	tbnz	w0, #13, 918c <fprintf@plt+0x62c>
    8ed0:	add	x21, sp, #0x98
    8ed4:	mov	w27, #0x0                   	// #0
    8ed8:	mov	w26, #0x0                   	// #0
    8edc:	str	x23, [sp, #152]
    8ee0:	ldr	x0, [sp, #152]
    8ee4:	ldrb	w28, [x0]
    8ee8:	cmp	w28, #0x21
    8eec:	cset	w1, eq  // eq = none
    8ef0:	str	w1, [sp, #108]
    8ef4:	b.ne	8f20 <fprintf@plt+0x3c0>  // b.any
    8ef8:	ldr	x1, [x24, #1576]
    8efc:	add	x0, x0, #0x1
    8f00:	ldr	x2, [x19]
    8f04:	cmp	x1, #0x0
    8f08:	csinc	w27, w27, wzr, eq  // eq = none
    8f0c:	str	x0, [sp, #152]
    8f10:	ldr	x0, [sp, #152]
    8f14:	ldrb	w1, [x0]
    8f18:	ldrh	w1, [x2, x1, lsl #1]
    8f1c:	tbnz	w1, #13, 91a0 <fprintf@plt+0x640>
    8f20:	bl	8b20 <__errno_location@plt>
    8f24:	mov	x20, x0
    8f28:	ldr	x0, [sp, #152]
    8f2c:	mov	x1, x21
    8f30:	str	wzr, [x20]
    8f34:	mov	w2, #0xa                   	// #10
    8f38:	bl	8620 <strtoul@plt>
    8f3c:	mov	x6, x0
    8f40:	ldr	w0, [x20]
    8f44:	cbnz	w0, 9224 <fprintf@plt+0x6c4>
    8f48:	ldr	x2, [x19]
    8f4c:	ldr	x1, [sp, #152]
    8f50:	ldrb	w3, [x1]
    8f54:	ldrb	w0, [x1]
    8f58:	ldrh	w3, [x2, x3, lsl #1]
    8f5c:	tbnz	w3, #13, 91ac <fprintf@plt+0x64c>
    8f60:	cmp	w0, #0x3a
    8f64:	b.ne	91e8 <fprintf@plt+0x688>  // b.any
    8f68:	add	x1, x1, #0x1
    8f6c:	str	x1, [sp, #152]
    8f70:	ldr	x0, [sp, #152]
    8f74:	ldrb	w1, [x0]
    8f78:	ldrh	w1, [x2, x1, lsl #1]
    8f7c:	tbnz	w1, #13, 91b8 <fprintf@plt+0x658>
    8f80:	str	wzr, [x20]
    8f84:	mov	x1, x21
    8f88:	mov	w2, #0xa                   	// #10
    8f8c:	str	x6, [sp, #128]
    8f90:	bl	8620 <strtoul@plt>
    8f94:	mov	x5, x0
    8f98:	ldr	w0, [x20]
    8f9c:	cbnz	w0, 9224 <fprintf@plt+0x6c4>
    8fa0:	cbz	x5, 9224 <fprintf@plt+0x6c4>
    8fa4:	ldr	x2, [x19]
    8fa8:	ldr	x6, [sp, #128]
    8fac:	ldr	x1, [sp, #152]
    8fb0:	ldrb	w3, [x1]
    8fb4:	ldrb	w0, [x1]
    8fb8:	ldrh	w3, [x2, x3, lsl #1]
    8fbc:	tbnz	w3, #13, 91c4 <fprintf@plt+0x664>
    8fc0:	cmp	w0, #0x3a
    8fc4:	b.ne	91f4 <fprintf@plt+0x694>  // b.any
    8fc8:	add	x1, x1, #0x1
    8fcc:	str	x1, [sp, #152]
    8fd0:	ldr	x0, [sp, #152]
    8fd4:	ldrb	w1, [x0]
    8fd8:	ldrh	w1, [x2, x1, lsl #1]
    8fdc:	tbnz	w1, #13, 91d0 <fprintf@plt+0x670>
    8fe0:	str	wzr, [x20]
    8fe4:	mov	x1, x21
    8fe8:	mov	w2, #0xa                   	// #10
    8fec:	stp	x5, x6, [sp, #128]
    8ff0:	bl	8900 <strtol@plt>
    8ff4:	mov	x3, x0
    8ff8:	ldr	w0, [x20]
    8ffc:	cbnz	w0, 9224 <fprintf@plt+0x6c4>
    9000:	ldp	x5, x6, [sp, #128]
    9004:	ldr	x2, [x19]
    9008:	ldr	x0, [sp, #152]
    900c:	ldrb	w1, [x0]
    9010:	ldrh	w1, [x2, x1, lsl #1]
    9014:	tbnz	w1, #13, 91dc <fprintf@plt+0x67c>
    9018:	ldr	w0, [sp, #108]
    901c:	cmp	w0, #0x0
    9020:	ccmp	x5, #0x1, #0x4, ne  // ne = any
    9024:	b.ne	9224 <fprintf@plt+0x6c4>  // b.any
    9028:	ldr	x0, [x24, #1576]
    902c:	cbnz	x0, 91fc <fprintf@plt+0x69c>
    9030:	ldr	x0, [sp, #152]
    9034:	ldrb	w1, [x0]
    9038:	cmp	w1, #0x7d
    903c:	b.ne	925c <fprintf@plt+0x6fc>  // b.any
    9040:	cbz	w27, 9048 <fprintf@plt+0x4e8>
    9044:	cbz	w26, 9198 <fprintf@plt+0x638>
    9048:	ldr	x1, [x19]
    904c:	add	x0, x0, #0x1
    9050:	str	x0, [sp, #152]
    9054:	ldr	x0, [sp, #152]
    9058:	ldrb	w3, [x0]
    905c:	ldrb	w2, [x0]
    9060:	ldrh	w3, [x1, x3, lsl #1]
    9064:	tbnz	w3, #13, 9270 <fprintf@plt+0x710>
    9068:	cmp	w2, #0x3a
    906c:	b.ne	92ac <fprintf@plt+0x74c>  // b.any
    9070:	add	x0, x0, #0x1
    9074:	str	x0, [sp, #152]
    9078:	ldr	x22, [sp, #152]
    907c:	ldrb	w0, [x22]
    9080:	ldrh	w0, [x1, x0, lsl #1]
    9084:	tbnz	w0, #13, 927c <fprintf@plt+0x71c>
    9088:	bl	8b20 <__errno_location@plt>
    908c:	mov	x23, x0
    9090:	mov	x1, x21
    9094:	mov	x0, x22
    9098:	mov	w2, #0xa                   	// #10
    909c:	str	wzr, [x23]
    90a0:	bl	8620 <strtoul@plt>
    90a4:	mov	x22, x0
    90a8:	ldr	w0, [x23]
    90ac:	cbnz	w0, 9224 <fprintf@plt+0x6c4>
    90b0:	sub	x1, x22, #0x1
    90b4:	mov	x0, #0xfffe                	// #65534
    90b8:	cmp	x1, x0
    90bc:	b.hi	9224 <fprintf@plt+0x6c4>  // b.pmore
    90c0:	ldr	x2, [x19]
    90c4:	ldr	x1, [sp, #152]
    90c8:	ldrb	w3, [x1]
    90cc:	ldrb	w0, [x1]
    90d0:	ldrh	w3, [x2, x3, lsl #1]
    90d4:	tbnz	w3, #13, 9288 <fprintf@plt+0x728>
    90d8:	cmp	w0, #0x3a
    90dc:	b.ne	92b8 <fprintf@plt+0x758>  // b.any
    90e0:	add	x1, x1, #0x1
    90e4:	str	x1, [sp, #152]
    90e8:	ldr	x0, [sp, #152]
    90ec:	ldrb	w1, [x0]
    90f0:	ldrh	w1, [x2, x1, lsl #1]
    90f4:	tbnz	w1, #13, 9294 <fprintf@plt+0x734>
    90f8:	str	wzr, [x23]
    90fc:	mov	x1, x21
    9100:	mov	w2, #0xa                   	// #10
    9104:	bl	8900 <strtol@plt>
    9108:	ldr	w1, [x23]
    910c:	cbnz	w1, 9224 <fprintf@plt+0x6c4>
    9110:	ldr	x3, [x19]
    9114:	ldr	x1, [sp, #152]
    9118:	ldrb	w2, [x1]
    911c:	ldrh	w2, [x3, x2, lsl #1]
    9120:	tbnz	w2, #13, 92a0 <fprintf@plt+0x740>
    9124:	ldr	x1, [sp, #96]
    9128:	ldrb	w1, [x1]
    912c:	cbz	w1, 9138 <fprintf@plt+0x5d8>
    9130:	cmp	x22, #0x1
    9134:	b.ne	9224 <fprintf@plt+0x6c4>  // b.any
    9138:	ldr	x1, [sp, #152]
    913c:	str	x1, [x25]
    9140:	ldr	x1, [sp, #112]
    9144:	str	x22, [x1]
    9148:	ldr	x1, [sp, #120]
    914c:	str	x0, [x1]
    9150:	mov	w0, #0x1                   	// #1
    9154:	b	9228 <fprintf@plt+0x6c8>
    9158:	add	x0, x0, #0x1
    915c:	str	x0, [sp, #152]
    9160:	b	8e8c <fprintf@plt+0x32c>
    9164:	ldr	x3, [sp, #96]
    9168:	mov	w2, #0x1                   	// #1
    916c:	strb	w2, [x3]
    9170:	add	x0, x0, #0x1
    9174:	str	x0, [sp, #152]
    9178:	ldr	x0, [sp, #152]
    917c:	ldrb	w2, [x0]
    9180:	ldrh	w2, [x1, x2, lsl #1]
    9184:	tbnz	w2, #13, 9170 <fprintf@plt+0x610>
    9188:	b	8ea8 <fprintf@plt+0x348>
    918c:	add	x23, x23, #0x1
    9190:	str	x23, [sp, #152]
    9194:	b	8ec0 <fprintf@plt+0x360>
    9198:	mov	w26, #0x1                   	// #1
    919c:	b	8edc <fprintf@plt+0x37c>
    91a0:	add	x0, x0, #0x1
    91a4:	str	x0, [sp, #152]
    91a8:	b	8f10 <fprintf@plt+0x3b0>
    91ac:	add	x1, x1, #0x1
    91b0:	str	x1, [sp, #152]
    91b4:	b	8f4c <fprintf@plt+0x3ec>
    91b8:	add	x0, x0, #0x1
    91bc:	str	x0, [sp, #152]
    91c0:	b	8f70 <fprintf@plt+0x410>
    91c4:	add	x1, x1, #0x1
    91c8:	str	x1, [sp, #152]
    91cc:	b	8fac <fprintf@plt+0x44c>
    91d0:	add	x0, x0, #0x1
    91d4:	str	x0, [sp, #152]
    91d8:	b	8fd0 <fprintf@plt+0x470>
    91dc:	add	x0, x0, #0x1
    91e0:	str	x0, [sp, #152]
    91e4:	b	9008 <fprintf@plt+0x4a8>
    91e8:	mov	x3, #0x1                   	// #1
    91ec:	mov	x5, x3
    91f0:	b	9018 <fprintf@plt+0x4b8>
    91f4:	mov	x3, #0x1                   	// #1
    91f8:	b	9018 <fprintf@plt+0x4b8>
    91fc:	ldr	w0, [sp, #108]
    9200:	cmp	w0, w26
    9204:	b.ne	9030 <fprintf@plt+0x4d0>  // b.any
    9208:	cmp	w28, #0x21
    920c:	b.ne	9244 <fprintf@plt+0x6e4>  // b.any
    9210:	mov	x1, x6
    9214:	mov	x0, x22
    9218:	bl	171d8 <omp_pause_resource_all_@@OMP_5.0+0x54c>
    921c:	tst	w0, #0xff
    9220:	b.ne	9030 <fprintf@plt+0x4d0>  // b.any
    9224:	mov	w0, #0x0                   	// #0
    9228:	ldp	x19, x20, [sp, #16]
    922c:	ldp	x21, x22, [sp, #32]
    9230:	ldp	x23, x24, [sp, #48]
    9234:	ldp	x25, x26, [sp, #64]
    9238:	ldp	x27, x28, [sp, #80]
    923c:	ldp	x29, x30, [sp], #160
    9240:	ret
    9244:	mov	x2, x5
    9248:	mov	x1, x6
    924c:	mov	x0, x22
    9250:	mov	w4, #0x0                   	// #0
    9254:	bl	16d58 <omp_pause_resource_all_@@OMP_5.0+0xcc>
    9258:	b	921c <fprintf@plt+0x6bc>
    925c:	cmp	w1, #0x2c
    9260:	b.ne	9224 <fprintf@plt+0x6c4>  // b.any
    9264:	add	x0, x0, #0x1
    9268:	str	x0, [sp, #152]
    926c:	b	8ee0 <fprintf@plt+0x380>
    9270:	add	x0, x0, #0x1
    9274:	str	x0, [sp, #152]
    9278:	b	9054 <fprintf@plt+0x4f4>
    927c:	add	x22, x22, #0x1
    9280:	str	x22, [sp, #152]
    9284:	b	9078 <fprintf@plt+0x518>
    9288:	add	x1, x1, #0x1
    928c:	str	x1, [sp, #152]
    9290:	b	90c4 <fprintf@plt+0x564>
    9294:	add	x0, x0, #0x1
    9298:	str	x0, [sp, #152]
    929c:	b	90e8 <fprintf@plt+0x588>
    92a0:	add	x1, x1, #0x1
    92a4:	str	x1, [sp, #152]
    92a8:	b	9114 <fprintf@plt+0x5b4>
    92ac:	mov	x0, #0x1                   	// #1
    92b0:	mov	x22, x0
    92b4:	b	9124 <fprintf@plt+0x5c4>
    92b8:	mov	x0, #0x1                   	// #1
    92bc:	b	9124 <fprintf@plt+0x5c4>
    92c0:	stp	x29, x30, [sp, #-80]!
    92c4:	mov	x29, sp
    92c8:	stp	x19, x20, [sp, #16]
    92cc:	mov	x20, x0
    92d0:	stp	x21, x22, [sp, #32]
    92d4:	mov	x21, x1
    92d8:	stp	x23, x24, [sp, #48]
    92dc:	bl	8b30 <getenv@plt>
    92e0:	cbz	x0, 93c4 <fprintf@plt+0x864>
    92e4:	mov	x19, x0
    92e8:	bl	88f0 <__ctype_b_loc@plt>
    92ec:	ldr	x2, [x0]
    92f0:	mov	x23, x0
    92f4:	ldrb	w1, [x19]
    92f8:	ldrb	w0, [x19]
    92fc:	ldrh	w1, [x2, x1, lsl #1]
    9300:	tbnz	w1, #13, 937c <fprintf@plt+0x81c>
    9304:	cbz	w0, 93b4 <fprintf@plt+0x854>
    9308:	bl	8b20 <__errno_location@plt>
    930c:	mov	x24, x0
    9310:	add	x1, sp, #0x48
    9314:	mov	x0, x19
    9318:	mov	w2, #0xa                   	// #10
    931c:	str	wzr, [x24]
    9320:	bl	8620 <strtoul@plt>
    9324:	mov	x22, x0
    9328:	ldr	w0, [x24]
    932c:	cbnz	w0, 93b4 <fprintf@plt+0x854>
    9330:	ldr	x23, [x23]
    9334:	ldr	x19, [sp, #72]
    9338:	ldrb	w24, [x19]
    933c:	ldrb	w0, [x19]
    9340:	ldrh	w1, [x23, x24, lsl #1]
    9344:	tbnz	w1, #13, 9384 <fprintf@plt+0x824>
    9348:	cbz	w0, 93f0 <fprintf@plt+0x890>
    934c:	bl	8730 <__ctype_tolower_loc@plt>
    9350:	ldr	x0, [x0]
    9354:	ldr	w0, [x0, x24, lsl #2]
    9358:	sub	w0, w0, #0x62
    935c:	cmp	w0, #0xb
    9360:	b.hi	93b4 <fprintf@plt+0x854>  // b.pmore
    9364:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9368:	add	x1, x1, #0x528
    936c:	ldrb	w0, [x1, w0, uxtw]
    9370:	adr	x1, 937c <fprintf@plt+0x81c>
    9374:	add	x0, x1, w0, sxtb #2
    9378:	br	x0
    937c:	add	x19, x19, #0x1
    9380:	b	92f4 <fprintf@plt+0x794>
    9384:	add	x19, x19, #0x1
    9388:	str	x19, [sp, #72]
    938c:	b	9334 <fprintf@plt+0x7d4>
    9390:	mov	x2, #0x0                   	// #0
    9394:	add	x19, x19, #0x1
    9398:	str	x19, [sp, #72]
    939c:	ldr	x3, [sp, #72]
    93a0:	ldrb	w1, [x3]
    93a4:	ldrb	w0, [x3]
    93a8:	ldrh	w1, [x23, x1, lsl #1]
    93ac:	tbnz	w1, #13, 93e4 <fprintf@plt+0x884>
    93b0:	cbz	w0, 93f4 <fprintf@plt+0x894>
    93b4:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    93b8:	mov	x1, x20
    93bc:	add	x0, x0, #0xeb8
    93c0:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    93c4:	mov	w0, #0x0                   	// #0
    93c8:	b	940c <fprintf@plt+0x8ac>
    93cc:	mov	x2, #0x14                  	// #20
    93d0:	b	9394 <fprintf@plt+0x834>
    93d4:	mov	x2, #0x1e                  	// #30
    93d8:	b	9394 <fprintf@plt+0x834>
    93dc:	mov	x2, #0xa                   	// #10
    93e0:	b	9394 <fprintf@plt+0x834>
    93e4:	add	x3, x3, #0x1
    93e8:	str	x3, [sp, #72]
    93ec:	b	939c <fprintf@plt+0x83c>
    93f0:	mov	x2, #0xa                   	// #10
    93f4:	lsl	x0, x22, x2
    93f8:	lsr	x2, x0, x2
    93fc:	cmp	x2, x22
    9400:	b.ne	93b4 <fprintf@plt+0x854>  // b.any
    9404:	str	x0, [x21]
    9408:	mov	w0, #0x1                   	// #1
    940c:	ldp	x19, x20, [sp, #16]
    9410:	ldp	x21, x22, [sp, #32]
    9414:	ldp	x23, x24, [sp, #48]
    9418:	ldp	x29, x30, [sp], #80
    941c:	ret
    9420:	stp	x29, x30, [sp, #-48]!
    9424:	mov	w3, #0x0                   	// #0
    9428:	mov	w2, #0x1                   	// #1
    942c:	mov	x29, sp
    9430:	stp	x19, x20, [sp, #16]
    9434:	mov	x20, x0
    9438:	mov	x19, x1
    943c:	add	x1, sp, #0x28
    9440:	bl	8d3c <fprintf@plt+0x1dc>
    9444:	ands	w0, w0, #0xff
    9448:	b.eq	9470 <fprintf@plt+0x910>  // b.none
    944c:	ldr	x1, [sp, #40]
    9450:	mov	x2, #0x7fffffff            	// #2147483647
    9454:	cmp	x1, x2
    9458:	b.ls	947c <fprintf@plt+0x91c>  // b.plast
    945c:	mov	x1, x20
    9460:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9464:	add	x0, x0, #0xeb8
    9468:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    946c:	mov	w0, #0x0                   	// #0
    9470:	ldp	x19, x20, [sp, #16]
    9474:	ldp	x29, x30, [sp], #48
    9478:	ret
    947c:	str	w1, [x19]
    9480:	b	9470 <fprintf@plt+0x910>
    9484:	stp	x29, x30, [sp, #-208]!
    9488:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    948c:	add	x0, x0, #0xf92
    9490:	mov	x29, sp
    9494:	stp	x19, x20, [sp, #16]
    9498:	stp	x21, x22, [sp, #32]
    949c:	stp	x23, x24, [sp, #48]
    94a0:	stp	x25, x26, [sp, #64]
    94a4:	stp	x27, x28, [sp, #80]
    94a8:	str	xzr, [sp, #168]
    94ac:	bl	8b30 <getenv@plt>
    94b0:	cbz	x0, 9604 <fprintf@plt+0xaa4>
    94b4:	mov	x19, x0
    94b8:	bl	88f0 <__ctype_b_loc@plt>
    94bc:	ldr	x21, [x0]
    94c0:	mov	x22, x0
    94c4:	ldrb	w0, [x19]
    94c8:	ldrh	w0, [x21, x0, lsl #1]
    94cc:	tbnz	w0, #13, 9548 <fprintf@plt+0x9e8>
    94d0:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    94d4:	mov	x0, x19
    94d8:	add	x1, x1, #0xf04
    94dc:	mov	x2, #0x9                   	// #9
    94e0:	bl	8990 <strncasecmp@plt>
    94e4:	cbnz	w0, 9550 <fprintf@plt+0x9f0>
    94e8:	add	x19, x19, #0x9
    94ec:	mov	w23, #0x1                   	// #1
    94f0:	ldrb	w1, [x19]
    94f4:	ldrb	w0, [x19]
    94f8:	ldrh	w1, [x21, x1, lsl #1]
    94fc:	tbnz	w1, #13, 9574 <fprintf@plt+0xa14>
    9500:	cmp	w0, #0x3a
    9504:	b.ne	98fc <fprintf@plt+0xd9c>  // b.any
    9508:	ldrb	w0, [x19, #1]
    950c:	add	x19, x19, #0x1
    9510:	ldrh	w0, [x21, x0, lsl #1]
    9514:	tbnz	w0, #13, 9508 <fprintf@plt+0x9a8>
    9518:	mov	x0, x19
    951c:	mov	x2, #0x6                   	// #6
    9520:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9524:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9528:	add	x1, x1, #0xf0e
    952c:	bl	8990 <strncasecmp@plt>
    9530:	cbnz	w0, 9584 <fprintf@plt+0xa24>
    9534:	add	x0, x20, #0x2c0
    9538:	mov	w1, #0x1                   	// #1
    953c:	add	x19, x19, #0x6
    9540:	str	w1, [x0, #8]
    9544:	b	95ac <fprintf@plt+0xa4c>
    9548:	add	x19, x19, #0x1
    954c:	b	94c4 <fprintf@plt+0x964>
    9550:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9554:	mov	x0, x19
    9558:	add	x1, x1, #0xf01
    955c:	mov	x2, #0xc                   	// #12
    9560:	bl	8990 <strncasecmp@plt>
    9564:	cbnz	w0, 957c <fprintf@plt+0xa1c>
    9568:	add	x19, x19, #0xc
    956c:	mov	w23, #0xffffffff            	// #-1
    9570:	b	94f0 <fprintf@plt+0x990>
    9574:	add	x19, x19, #0x1
    9578:	b	94f0 <fprintf@plt+0x990>
    957c:	mov	w23, #0x0                   	// #0
    9580:	b	9518 <fprintf@plt+0x9b8>
    9584:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9588:	mov	x0, x19
    958c:	add	x1, x1, #0xf15
    9590:	mov	x2, #0x7                   	// #7
    9594:	bl	8990 <strncasecmp@plt>
    9598:	cbnz	w0, 9810 <fprintf@plt+0xcb0>
    959c:	add	x0, x20, #0x2c0
    95a0:	add	x19, x19, #0x7
    95a4:	mov	w1, #0x2                   	// #2
    95a8:	str	w1, [x0, #8]
    95ac:	cmp	w23, #0x1
    95b0:	b.eq	95c8 <fprintf@plt+0xa68>  // b.none
    95b4:	cbnz	w23, 95d8 <fprintf@plt+0xa78>
    95b8:	add	x0, x20, #0x2c0
    95bc:	ldr	w0, [x0, #8]
    95c0:	cmp	w0, #0x1
    95c4:	b.ne	95d8 <fprintf@plt+0xa78>  // b.any
    95c8:	add	x1, x20, #0x2c0
    95cc:	ldr	w0, [x1, #8]
    95d0:	orr	w0, w0, #0x80000000
    95d4:	str	w0, [x1, #8]
    95d8:	ldrb	w1, [x19]
    95dc:	ldrb	w0, [x19]
    95e0:	ldrh	w1, [x21, x1, lsl #1]
    95e4:	tbnz	w1, #13, 9860 <fprintf@plt+0xd00>
    95e8:	cbnz	w0, 9868 <fprintf@plt+0xd08>
    95ec:	add	x1, x20, #0x2c0
    95f0:	ldr	w0, [x1, #8]
    95f4:	and	w0, w0, #0x7fffffff
    95f8:	cmp	w0, #0x1
    95fc:	cset	w0, ne  // ne = any
    9600:	str	w0, [x1, #12]
    9604:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9608:	add	x20, x19, #0x2c0
    960c:	add	x1, x20, #0x18
    9610:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9614:	add	x0, x0, #0xf9f
    9618:	bl	8c60 <fprintf@plt+0x100>
    961c:	add	x1, x20, #0x19
    9620:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9624:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9628:	add	x22, x21, #0x55c
    962c:	add	x0, x0, #0xfab
    9630:	bl	8c60 <fprintf@plt+0x100>
    9634:	mov	x1, x22
    9638:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    963c:	add	x0, x0, #0xfb6
    9640:	bl	8c60 <fprintf@plt+0x100>
    9644:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9648:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    964c:	add	x1, x1, #0x5f8
    9650:	add	x0, x0, #0xfc7
    9654:	bl	8c60 <fprintf@plt+0x100>
    9658:	add	x1, x20, #0x10
    965c:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9660:	add	x0, x0, #0xfdc
    9664:	bl	9420 <fprintf@plt+0x8c0>
    9668:	add	x1, x22, #0x4
    966c:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9670:	add	x0, x0, #0xfef
    9674:	bl	9420 <fprintf@plt+0x8c0>
    9678:	add	x1, x20, #0x28
    967c:	mov	w3, #0x0                   	// #0
    9680:	mov	w2, #0x1                   	// #1
    9684:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9688:	add	x0, x0, #0x5
    968c:	bl	8d3c <fprintf@plt+0x1dc>
    9690:	add	x1, sp, #0xa0
    9694:	mov	w3, #0x0                   	// #0
    9698:	mov	w2, #0x0                   	// #0
    969c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    96a0:	add	x0, x0, #0x1b
    96a4:	bl	8d3c <fprintf@plt+0x1dc>
    96a8:	str	x21, [sp, #112]
    96ac:	tst	w0, #0xff
    96b0:	b.eq	96cc <fprintf@plt+0xb6c>  // b.none
    96b4:	ldr	x0, [sp, #160]
    96b8:	mov	x1, #0x7fffffff            	// #2147483647
    96bc:	cmp	x0, x1
    96c0:	mov	x1, #0xffffffff            	// #4294967295
    96c4:	csel	x0, x0, x1, ls  // ls = plast
    96c8:	str	w0, [x20, #20]
    96cc:	add	x22, sp, #0xc8
    96d0:	adrp	x20, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    96d4:	add	x20, x20, #0x2c
    96d8:	mov	w3, #0x1                   	// #1
    96dc:	mov	x1, x22
    96e0:	mov	w2, w3
    96e4:	mov	x0, x20
    96e8:	bl	8d3c <fprintf@plt+0x1dc>
    96ec:	tst	w0, #0xff
    96f0:	b.eq	9714 <fprintf@plt+0xbb4>  // b.none
    96f4:	ldr	x0, [sp, #200]
    96f8:	mov	x1, #0x7fffffff            	// #2147483647
    96fc:	cmp	x0, x1
    9700:	b.ls	9918 <fprintf@plt+0xdb8>  // b.plast
    9704:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9708:	mov	x1, x20
    970c:	add	x0, x0, #0xeb8
    9710:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    9714:	bl	15aa0 <omp_test_nest_lock@OMP_1.0+0x328>
    9718:	adrp	x24, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    971c:	ldr	x1, [x19, #704]
    9720:	add	x0, x19, #0x2c0
    9724:	str	x1, [x0, #48]
    9728:	add	x0, x24, #0x37
    972c:	bl	8b30 <getenv@plt>
    9730:	mov	x20, x0
    9734:	cbz	x0, 9800 <fprintf@plt+0xca0>
    9738:	bl	88f0 <__ctype_b_loc@plt>
    973c:	mov	x23, x0
    9740:	ldr	x2, [x0]
    9744:	ldrb	w1, [x20]
    9748:	ldrb	w0, [x20]
    974c:	ldrh	w1, [x2, x1, lsl #1]
    9750:	tbnz	w1, #13, 9924 <fprintf@plt+0xdc4>
    9754:	cbz	w0, 9af0 <fprintf@plt+0xf90>
    9758:	bl	8b20 <__errno_location@plt>
    975c:	mov	x25, x0
    9760:	mov	x1, x22
    9764:	mov	x0, x20
    9768:	mov	w2, #0xa                   	// #10
    976c:	str	wzr, [x25]
    9770:	bl	8620 <strtoul@plt>
    9774:	mov	x26, x0
    9778:	ldr	w0, [x25]
    977c:	cbnz	w0, 9af0 <fprintf@plt+0xf90>
    9780:	cmp	x26, #0x0
    9784:	b.le	9af0 <fprintf@plt+0xf90>
    9788:	ldr	x4, [x23]
    978c:	ldr	x1, [sp, #200]
    9790:	ldrb	w2, [x1]
    9794:	ldrb	w0, [x1]
    9798:	ldrh	w2, [x4, x2, lsl #1]
    979c:	tbnz	w2, #13, 992c <fprintf@plt+0xdcc>
    97a0:	cbz	w0, 9ae8 <fprintf@plt+0xf88>
    97a4:	cmp	w0, #0x2c
    97a8:	b.ne	9af0 <fprintf@plt+0xf90>  // b.any
    97ac:	mov	x28, #0x0                   	// #0
    97b0:	mov	x20, #0x0                   	// #0
    97b4:	mov	x27, #0x0                   	// #0
    97b8:	ldr	x21, [sp, #200]
    97bc:	cmp	x20, x28
    97c0:	add	x21, x21, #0x1
    97c4:	b.ne	9948 <fprintf@plt+0xde8>  // b.any
    97c8:	lsl	x28, x20, #1
    97cc:	cmp	x20, #0x0
    97d0:	mov	x0, #0x10                  	// #16
    97d4:	csel	x28, x28, x0, ne  // ne = any
    97d8:	mov	x0, x27
    97dc:	lsl	x1, x28, #3
    97e0:	bl	8850 <realloc@plt>
    97e4:	cbnz	x0, 9938 <fprintf@plt+0xdd8>
    97e8:	mov	x0, x27
    97ec:	bl	8950 <free@plt>
    97f0:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    97f4:	add	x1, x24, #0x37
    97f8:	add	x0, x0, #0x47
    97fc:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    9800:	add	x0, x19, #0x2c0
    9804:	ldr	x0, [x0, #48]
    9808:	str	x0, [x19, #704]
    980c:	b	99f0 <fprintf@plt+0xe90>
    9810:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9814:	mov	x0, x19
    9818:	add	x1, x1, #0xf1d
    981c:	mov	x2, #0x6                   	// #6
    9820:	bl	8990 <strncasecmp@plt>
    9824:	cbnz	w0, 9834 <fprintf@plt+0xcd4>
    9828:	add	x0, x20, #0x2c0
    982c:	mov	w1, #0x3                   	// #3
    9830:	b	953c <fprintf@plt+0x9dc>
    9834:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9838:	mov	x0, x19
    983c:	add	x1, x1, #0xf24
    9840:	mov	x2, #0x4                   	// #4
    9844:	bl	8990 <strncasecmp@plt>
    9848:	cbnz	w0, 98fc <fprintf@plt+0xd9c>
    984c:	add	x0, x20, #0x2c0
    9850:	mov	w1, #0x4                   	// #4
    9854:	add	x19, x19, #0x4
    9858:	str	w1, [x0, #8]
    985c:	b	95ac <fprintf@plt+0xa4c>
    9860:	add	x19, x19, #0x1
    9864:	b	95d8 <fprintf@plt+0xa78>
    9868:	cmp	w0, #0x2c
    986c:	b.ne	98fc <fprintf@plt+0xd9c>  // b.any
    9870:	ldrb	w1, [x19, #1]
    9874:	add	x19, x19, #0x1
    9878:	ldrb	w0, [x19]
    987c:	ldrh	w1, [x21, x1, lsl #1]
    9880:	tbnz	w1, #13, 9870 <fprintf@plt+0xd10>
    9884:	cbz	w0, 990c <fprintf@plt+0xdac>
    9888:	bl	8b20 <__errno_location@plt>
    988c:	mov	x21, x0
    9890:	add	x1, sp, #0xc8
    9894:	mov	x0, x19
    9898:	mov	w2, #0xa                   	// #10
    989c:	str	wzr, [x21]
    98a0:	bl	8620 <strtoul@plt>
    98a4:	ldr	w1, [x21]
    98a8:	cbnz	w1, 990c <fprintf@plt+0xdac>
    98ac:	ldr	x4, [x22]
    98b0:	ldr	x1, [sp, #200]
    98b4:	ldrb	w3, [x1]
    98b8:	ldrb	w2, [x1]
    98bc:	ldrh	w3, [x4, x3, lsl #1]
    98c0:	tbnz	w3, #13, 98f0 <fprintf@plt+0xd90>
    98c4:	cbnz	w2, 990c <fprintf@plt+0xdac>
    98c8:	cmp	x0, w0, sxtw
    98cc:	b.ne	990c <fprintf@plt+0xdac>  // b.any
    98d0:	cbnz	x0, 98e8 <fprintf@plt+0xd88>
    98d4:	add	x0, x20, #0x2c0
    98d8:	ldr	w0, [x0, #8]
    98dc:	and	w0, w0, #0x7fffffff
    98e0:	cmp	w0, #0x1
    98e4:	cset	x0, ne  // ne = any
    98e8:	add	x1, x20, #0x2c0
    98ec:	b	9600 <fprintf@plt+0xaa0>
    98f0:	add	x1, x1, #0x1
    98f4:	str	x1, [sp, #200]
    98f8:	b	98b0 <fprintf@plt+0xd50>
    98fc:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9900:	add	x0, x0, #0xf29
    9904:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    9908:	b	9604 <fprintf@plt+0xaa4>
    990c:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9910:	add	x0, x0, #0xf5d
    9914:	b	9904 <fprintf@plt+0xda4>
    9918:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    991c:	str	w0, [x1, #1544]
    9920:	b	9714 <fprintf@plt+0xbb4>
    9924:	add	x20, x20, #0x1
    9928:	b	9744 <fprintf@plt+0xbe4>
    992c:	add	x1, x1, #0x1
    9930:	str	x1, [sp, #200]
    9934:	b	978c <fprintf@plt+0xc2c>
    9938:	cbnz	x20, 99bc <fprintf@plt+0xe5c>
    993c:	mov	x27, x0
    9940:	mov	x20, #0x1                   	// #1
    9944:	str	x26, [x0]
    9948:	ldr	x2, [x23]
    994c:	ldrb	w1, [x21]
    9950:	ldrb	w0, [x21]
    9954:	ldrh	w1, [x2, x1, lsl #1]
    9958:	tbnz	w1, #13, 99c4 <fprintf@plt+0xe64>
    995c:	cbz	w0, 9af4 <fprintf@plt+0xf94>
    9960:	str	wzr, [x25]
    9964:	mov	x1, x22
    9968:	mov	x0, x21
    996c:	mov	w2, #0xa                   	// #10
    9970:	bl	8620 <strtoul@plt>
    9974:	mov	x26, x0
    9978:	ldr	w0, [x25]
    997c:	cbnz	w0, 9af4 <fprintf@plt+0xf94>
    9980:	cmp	x26, #0x0
    9984:	b.le	9af4 <fprintf@plt+0xf94>
    9988:	ldr	x5, [x23]
    998c:	add	x0, x20, #0x1
    9990:	str	x26, [x27, x20, lsl #3]
    9994:	ldr	x1, [sp, #200]
    9998:	ldrb	w4, [x1]
    999c:	ldrb	w2, [x1]
    99a0:	ldrh	w4, [x5, x4, lsl #1]
    99a4:	tbnz	w4, #13, 99cc <fprintf@plt+0xe6c>
    99a8:	cbz	w2, 99d8 <fprintf@plt+0xe78>
    99ac:	cmp	w2, #0x2c
    99b0:	b.ne	9af4 <fprintf@plt+0xf94>  // b.any
    99b4:	mov	x20, x0
    99b8:	b	97b8 <fprintf@plt+0xc58>
    99bc:	mov	x27, x0
    99c0:	b	9948 <fprintf@plt+0xde8>
    99c4:	add	x21, x21, #0x1
    99c8:	b	994c <fprintf@plt+0xdec>
    99cc:	add	x1, x1, #0x1
    99d0:	str	x1, [sp, #200]
    99d4:	b	9994 <fprintf@plt+0xe34>
    99d8:	ldr	x1, [x27]
    99dc:	str	x1, [x19, #704]
    99e0:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    99e4:	str	x27, [x1, #1512]
    99e8:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    99ec:	str	x0, [x1, #1632]
    99f0:	adrp	x21, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    99f4:	add	x0, x21, #0x83
    99f8:	bl	8b30 <getenv@plt>
    99fc:	mov	x20, x0
    9a00:	cbz	x0, 9ae0 <fprintf@plt+0xf80>
    9a04:	bl	88f0 <__ctype_b_loc@plt>
    9a08:	ldr	x23, [x0]
    9a0c:	ldrb	w1, [x20]
    9a10:	ldrb	w0, [x20]
    9a14:	ldrh	w1, [x23, x1, lsl #1]
    9a18:	tbnz	w1, #13, 9b0c <fprintf@plt+0xfac>
    9a1c:	cbz	w0, 9b24 <fprintf@plt+0xfc4>
    9a20:	add	x24, x19, #0x2c0
    9a24:	mov	w25, #0x0                   	// #0
    9a28:	add	x0, x24, #0x38
    9a2c:	str	x0, [sp, #96]
    9a30:	mov	x26, x0
    9a34:	ldrb	w28, [x26, #7]
    9a38:	mov	x1, x26
    9a3c:	mov	x0, x20
    9a40:	mov	x2, x28
    9a44:	bl	8990 <strncasecmp@plt>
    9a48:	cbnz	w0, 9b14 <fprintf@plt+0xfb4>
    9a4c:	add	x1, x19, #0x2c0
    9a50:	sxtw	x0, w25
    9a54:	mov	x2, #0xc                   	// #12
    9a58:	madd	x25, x0, x2, x1
    9a5c:	add	x2, x20, x28
    9a60:	ldrb	w27, [x25, #64]
    9a64:	ldrb	w1, [x2]
    9a68:	ldrb	w0, [x2]
    9a6c:	ldrh	w1, [x23, x1, lsl #1]
    9a70:	tbnz	w1, #13, 9b2c <fprintf@plt+0xfcc>
    9a74:	cbz	w0, 9d64 <fprintf@plt+0x1204>
    9a78:	cmp	w0, #0x2c
    9a7c:	b.ne	9b24 <fprintf@plt+0xfc4>  // b.any
    9a80:	cmp	w27, #0x1
    9a84:	b.ls	9b24 <fprintf@plt+0xfc4>  // b.plast
    9a88:	add	x20, x19, #0x2c0
    9a8c:	mov	x24, #0x0                   	// #0
    9a90:	add	x20, x20, #0x38
    9a94:	mov	x26, #0x0                   	// #0
    9a98:	mov	x25, #0x0                   	// #0
    9a9c:	add	x28, x2, #0x1
    9aa0:	cmp	x26, x24
    9aa4:	b.ne	9b44 <fprintf@plt+0xfe4>  // b.any
    9aa8:	lsl	x5, x26, #1
    9aac:	cmp	x26, #0x0
    9ab0:	mov	x0, #0x10                  	// #16
    9ab4:	csel	x24, x5, x0, ne  // ne = any
    9ab8:	mov	x1, x24
    9abc:	mov	x0, x25
    9ac0:	bl	8850 <realloc@plt>
    9ac4:	cbnz	x0, 9b34 <fprintf@plt+0xfd4>
    9ac8:	mov	x0, x25
    9acc:	bl	8950 <free@plt>
    9ad0:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9ad4:	add	x1, x21, #0x83
    9ad8:	add	x0, x0, #0x47
    9adc:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    9ae0:	mov	w20, #0x0                   	// #0
    9ae4:	b	9c30 <fprintf@plt+0x10d0>
    9ae8:	str	x26, [x19, #704]
    9aec:	b	99f0 <fprintf@plt+0xe90>
    9af0:	mov	x27, #0x0                   	// #0
    9af4:	mov	x0, x27
    9af8:	bl	8950 <free@plt>
    9afc:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9b00:	add	x1, x24, #0x37
    9b04:	add	x0, x0, #0xeb8
    9b08:	b	97fc <fprintf@plt+0xc9c>
    9b0c:	add	x20, x20, #0x1
    9b10:	b	9a0c <fprintf@plt+0xeac>
    9b14:	add	w25, w25, #0x1
    9b18:	add	x26, x26, #0xc
    9b1c:	cmp	w25, #0x5
    9b20:	b.ne	9a34 <fprintf@plt+0xed4>  // b.any
    9b24:	mov	x25, #0x0                   	// #0
    9b28:	b	9be4 <fprintf@plt+0x1084>
    9b2c:	add	x2, x2, #0x1
    9b30:	b	9a64 <fprintf@plt+0xf04>
    9b34:	cbnz	x26, 9bc4 <fprintf@plt+0x1064>
    9b38:	mov	x25, x0
    9b3c:	mov	x26, #0x1                   	// #1
    9b40:	strb	w27, [x0]
    9b44:	ldrb	w1, [x28]
    9b48:	ldrb	w0, [x28]
    9b4c:	ldrh	w1, [x23, x1, lsl #1]
    9b50:	tbnz	w1, #13, 9bcc <fprintf@plt+0x106c>
    9b54:	cbz	w0, 9be4 <fprintf@plt+0x1084>
    9b58:	ldr	x6, [sp, #96]
    9b5c:	mov	w27, #0x2                   	// #2
    9b60:	ldrb	w2, [x6, #31]
    9b64:	add	x1, x6, #0x18
    9b68:	mov	x0, x28
    9b6c:	str	x6, [sp, #104]
    9b70:	str	x2, [sp, #120]
    9b74:	bl	8990 <strncasecmp@plt>
    9b78:	ldr	x6, [sp, #104]
    9b7c:	ldr	x2, [sp, #120]
    9b80:	cbnz	w0, 9bd4 <fprintf@plt+0x1074>
    9b84:	sxtw	x27, w27
    9b88:	mov	x0, #0xc                   	// #12
    9b8c:	add	x2, x28, x2
    9b90:	add	x1, x26, #0x1
    9b94:	madd	x27, x27, x0, x20
    9b98:	ldrb	w27, [x27, #8]
    9b9c:	strb	w27, [x25, x26]
    9ba0:	ldrb	w4, [x2]
    9ba4:	ldrb	w0, [x2]
    9ba8:	ldrh	w4, [x23, x4, lsl #1]
    9bac:	tbnz	w4, #13, 9bfc <fprintf@plt+0x109c>
    9bb0:	cbz	w0, 9c04 <fprintf@plt+0x10a4>
    9bb4:	cmp	w0, #0x2c
    9bb8:	b.ne	9be4 <fprintf@plt+0x1084>  // b.any
    9bbc:	mov	x26, x1
    9bc0:	b	9a9c <fprintf@plt+0xf3c>
    9bc4:	mov	x25, x0
    9bc8:	b	9b44 <fprintf@plt+0xfe4>
    9bcc:	add	x28, x28, #0x1
    9bd0:	b	9b44 <fprintf@plt+0xfe4>
    9bd4:	add	w27, w27, #0x1
    9bd8:	add	x6, x6, #0xc
    9bdc:	cmp	w27, #0x5
    9be0:	b.ne	9b60 <fprintf@plt+0x1000>  // b.any
    9be4:	mov	x0, x25
    9be8:	bl	8950 <free@plt>
    9bec:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9bf0:	add	x1, x21, #0x83
    9bf4:	add	x0, x0, #0xeb8
    9bf8:	b	9adc <fprintf@plt+0xf7c>
    9bfc:	add	x2, x2, #0x1
    9c00:	b	9ba0 <fprintf@plt+0x1040>
    9c04:	add	x0, x19, #0x2c0
    9c08:	ldrb	w2, [x25]
    9c0c:	strb	w2, [x0, #26]
    9c10:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9c14:	str	x25, [x0, #1552]
    9c18:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9c1c:	str	x1, [x0, #1536]
    9c20:	add	x0, x19, #0x2c0
    9c24:	ldrb	w0, [x0, #26]
    9c28:	cmp	w0, #0x0
    9c2c:	cset	w20, eq  // eq = none
    9c30:	adrp	x23, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9c34:	add	x0, x23, #0x91
    9c38:	bl	8b30 <getenv@plt>
    9c3c:	str	x0, [sp, #176]
    9c40:	cbz	x0, 9e7c <fprintf@plt+0x131c>
    9c44:	bl	88f0 <__ctype_b_loc@plt>
    9c48:	mov	x24, x0
    9c4c:	ldr	x25, [x0]
    9c50:	ldr	x21, [sp, #176]
    9c54:	ldrb	w1, [x21]
    9c58:	ldrb	w0, [x21]
    9c5c:	ldrh	w1, [x25, x1, lsl #1]
    9c60:	tbnz	w1, #13, 9d70 <fprintf@plt+0x1210>
    9c64:	cbz	w0, 9d38 <fprintf@plt+0x11d8>
    9c68:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9c6c:	mov	x0, x21
    9c70:	add	x1, x1, #0x9c
    9c74:	mov	x2, #0x7                   	// #7
    9c78:	bl	8990 <strncasecmp@plt>
    9c7c:	cbnz	w0, 9d7c <fprintf@plt+0x121c>
    9c80:	add	x21, x21, #0x7
    9c84:	mov	w26, #0x1                   	// #1
    9c88:	str	x21, [sp, #176]
    9c8c:	ldr	x0, [sp, #176]
    9c90:	ldrb	w2, [x0]
    9c94:	ldrb	w1, [x0]
    9c98:	ldrh	w2, [x25, x2, lsl #1]
    9c9c:	tbnz	w2, #13, 9e3c <fprintf@plt+0x12dc>
    9ca0:	cbz	w1, 9e60 <fprintf@plt+0x1300>
    9ca4:	add	x1, x0, #0x1
    9ca8:	str	x1, [sp, #176]
    9cac:	ldrb	w0, [x0]
    9cb0:	cmp	w0, #0x28
    9cb4:	b.ne	9d38 <fprintf@plt+0x11d8>  // b.any
    9cb8:	ldr	x21, [sp, #176]
    9cbc:	ldrb	w0, [x21]
    9cc0:	ldrh	w0, [x25, x0, lsl #1]
    9cc4:	tbnz	w0, #13, 9e48 <fprintf@plt+0x12e8>
    9cc8:	bl	8b20 <__errno_location@plt>
    9ccc:	mov	x25, x0
    9cd0:	add	x1, sp, #0xb8
    9cd4:	mov	x0, x21
    9cd8:	mov	w2, #0xa                   	// #10
    9cdc:	str	wzr, [x25]
    9ce0:	bl	8620 <strtoul@plt>
    9ce4:	mov	x1, x0
    9ce8:	ldr	w0, [x25]
    9cec:	cbnz	w0, 9d38 <fprintf@plt+0x11d8>
    9cf0:	ldr	x0, [sp, #184]
    9cf4:	str	x0, [sp, #176]
    9cf8:	ldr	x0, [x24]
    9cfc:	ldr	x2, [sp, #176]
    9d00:	ldrb	w4, [x2]
    9d04:	ldrb	w3, [x2]
    9d08:	ldrh	w4, [x0, x4, lsl #1]
    9d0c:	tbnz	w4, #13, 9e54 <fprintf@plt+0x12f4>
    9d10:	cmp	w3, #0x29
    9d14:	b.ne	9d38 <fprintf@plt+0x11d8>  // b.any
    9d18:	add	x2, x2, #0x1
    9d1c:	str	x2, [sp, #176]
    9d20:	ldr	x2, [sp, #176]
    9d24:	ldrb	w4, [x2]
    9d28:	ldrb	w3, [x2]
    9d2c:	ldrh	w4, [x0, x4, lsl #1]
    9d30:	tbnz	w4, #13, 9d18 <fprintf@plt+0x11b8>
    9d34:	cbz	w3, 9e64 <fprintf@plt+0x1304>
    9d38:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9d3c:	ldr	x0, [x21, #1576]
    9d40:	bl	8950 <free@plt>
    9d44:	str	xzr, [x21, #1576]
    9d48:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9d4c:	add	x1, x23, #0x91
    9d50:	str	xzr, [x0, #1616]
    9d54:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    9d58:	add	x0, x0, #0xeb8
    9d5c:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    9d60:	b	9e7c <fprintf@plt+0x131c>
    9d64:	add	x0, x19, #0x2c0
    9d68:	strb	w27, [x0, #26]
    9d6c:	b	9c20 <fprintf@plt+0x10c0>
    9d70:	add	x21, x21, #0x1
    9d74:	str	x21, [sp, #176]
    9d78:	b	9c50 <fprintf@plt+0x10f0>
    9d7c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9d80:	mov	x0, x21
    9d84:	add	x1, x1, #0xa4
    9d88:	mov	x2, #0x5                   	// #5
    9d8c:	bl	8990 <strncasecmp@plt>
    9d90:	cbnz	w0, 9da4 <fprintf@plt+0x1244>
    9d94:	add	x21, x21, #0x5
    9d98:	mov	w26, #0x2                   	// #2
    9d9c:	str	x21, [sp, #176]
    9da0:	b	9c8c <fprintf@plt+0x112c>
    9da4:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9da8:	mov	x0, x21
    9dac:	add	x1, x1, #0xaa
    9db0:	mov	x2, #0x7                   	// #7
    9db4:	bl	8990 <strncasecmp@plt>
    9db8:	cbnz	w0, 9dcc <fprintf@plt+0x126c>
    9dbc:	add	x21, x21, #0x7
    9dc0:	mov	w26, #0x3                   	// #3
    9dc4:	str	x21, [sp, #176]
    9dc8:	b	9c8c <fprintf@plt+0x112c>
    9dcc:	add	x24, sp, #0xc0
    9dd0:	add	x25, sp, #0x9f
    9dd4:	add	x27, sp, #0xb8
    9dd8:	mov	w26, #0x0                   	// #0
    9ddc:	str	x21, [sp, #184]
    9de0:	mov	x21, #0x0                   	// #0
    9de4:	mov	x3, x22
    9de8:	mov	x2, x24
    9dec:	mov	x1, x25
    9df0:	mov	x0, x27
    9df4:	bl	8e30 <fprintf@plt+0x2d0>
    9df8:	tst	w0, #0xff
    9dfc:	b.eq	9d38 <fprintf@plt+0x11d8>  // b.none
    9e00:	ldrb	w0, [sp, #159]
    9e04:	cbz	w0, 9fb4 <fprintf@plt+0x1454>
    9e08:	cbnz	w26, 9e1c <fprintf@plt+0x12bc>
    9e0c:	add	x21, x21, #0x1
    9e10:	mov	w26, w0
    9e14:	cmp	x21, #0x10, lsl #12
    9e18:	b.hi	9d38 <fprintf@plt+0x11d8>  // b.pmore
    9e1c:	ldr	x0, [sp, #184]
    9e20:	ldrb	w1, [x0]
    9e24:	cbz	w1, 9fc0 <fprintf@plt+0x1460>
    9e28:	cmp	w1, #0x2c
    9e2c:	b.ne	9d38 <fprintf@plt+0x11d8>  // b.any
    9e30:	add	x0, x0, #0x1
    9e34:	str	x0, [sp, #184]
    9e38:	b	9de4 <fprintf@plt+0x1284>
    9e3c:	add	x0, x0, #0x1
    9e40:	str	x0, [sp, #176]
    9e44:	b	9c8c <fprintf@plt+0x112c>
    9e48:	add	x21, x21, #0x1
    9e4c:	str	x21, [sp, #176]
    9e50:	b	9cb8 <fprintf@plt+0x1158>
    9e54:	add	x2, x2, #0x1
    9e58:	str	x2, [sp, #176]
    9e5c:	b	9cfc <fprintf@plt+0x119c>
    9e60:	mov	x1, #0xffffffffffffffff    	// #-1
    9e64:	cbnz	w20, a16c <fprintf@plt+0x160c>
    9e68:	mov	w0, w26
    9e6c:	mov	w2, #0x0                   	// #0
    9e70:	bl	17470 <omp_pause_resource_all_@@OMP_5.0+0x7e4>
    9e74:	ands	w20, w0, #0xff
    9e78:	b.ne	a158 <fprintf@plt+0x15f8>  // b.any
    9e7c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    9e80:	add	x0, x0, #0x12f
    9e84:	bl	8b30 <getenv@plt>
    9e88:	str	x0, [sp, #96]
    9e8c:	cbz	x0, a194 <fprintf@plt+0x1634>
    9e90:	bl	88f0 <__ctype_b_loc@plt>
    9e94:	mov	x26, #0x0                   	// #0
    9e98:	mov	w21, #0x0                   	// #0
    9e9c:	adrp	x25, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9ea0:	adrp	x28, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9ea4:	str	x0, [sp, #104]
    9ea8:	ldr	x23, [sp, #96]
    9eac:	ldr	x0, [sp, #104]
    9eb0:	ldrb	w1, [x23]
    9eb4:	ldr	x0, [x0]
    9eb8:	ldrh	w0, [x0, x1, lsl #1]
    9ebc:	tbnz	w0, #13, 9fac <fprintf@plt+0x144c>
    9ec0:	bl	8b20 <__errno_location@plt>
    9ec4:	mov	x24, x0
    9ec8:	mov	x1, x22
    9ecc:	mov	x0, x23
    9ed0:	mov	w2, #0x0                   	// #0
    9ed4:	str	wzr, [x24]
    9ed8:	bl	8620 <strtoul@plt>
    9edc:	mov	x27, x0
    9ee0:	ldr	w0, [x24]
    9ee4:	cbnz	w0, a344 <fprintf@plt+0x17e4>
    9ee8:	mov	x0, #0xffff                	// #65535
    9eec:	cmp	x27, x0
    9ef0:	b.hi	a344 <fprintf@plt+0x17e4>  // b.pmore
    9ef4:	ldr	x23, [sp, #200]
    9ef8:	ldrb	w0, [x23]
    9efc:	cmp	w0, #0x2d
    9f00:	b.ne	a2ac <fprintf@plt+0x174c>  // b.any
    9f04:	mov	x1, x22
    9f08:	add	x0, x23, #0x1
    9f0c:	mov	w2, #0x0                   	// #0
    9f10:	bl	8620 <strtoul@plt>
    9f14:	mov	x5, x0
    9f18:	ldr	w0, [x24]
    9f1c:	cbnz	w0, a344 <fprintf@plt+0x17e4>
    9f20:	mov	x0, #0xffff                	// #65535
    9f24:	cmp	x5, x0
    9f28:	ccmp	x27, x5, #0x2, ls  // ls = plast
    9f2c:	b.hi	a344 <fprintf@plt+0x17e4>  // b.pmore
    9f30:	ldr	x23, [sp, #200]
    9f34:	ldrb	w0, [x23]
    9f38:	cmp	w0, #0x3a
    9f3c:	b.ne	a2b0 <fprintf@plt+0x1750>  // b.any
    9f40:	mov	x1, x22
    9f44:	add	x0, x23, #0x1
    9f48:	mov	w2, #0x0                   	// #0
    9f4c:	str	x5, [sp, #120]
    9f50:	bl	8620 <strtoul@plt>
    9f54:	mov	x8, x0
    9f58:	ldr	w0, [x24]
    9f5c:	cbnz	w0, a344 <fprintf@plt+0x17e4>
    9f60:	sub	x1, x8, #0x1
    9f64:	mov	x0, #0xfffe                	// #65534
    9f68:	cmp	x1, x0
    9f6c:	b.hi	a344 <fprintf@plt+0x17e4>  // b.pmore
    9f70:	ldr	x5, [sp, #120]
    9f74:	ldr	x23, [sp, #200]
    9f78:	sub	x5, x5, x27
    9f7c:	udiv	x5, x5, x8
    9f80:	add	x5, x5, #0x1
    9f84:	cbnz	w21, a304 <fprintf@plt+0x17a4>
    9f88:	add	x26, x26, x5
    9f8c:	ldr	x0, [sp, #104]
    9f90:	ldr	x2, [x0]
    9f94:	ldrb	w1, [x23]
    9f98:	ldrb	w0, [x23]
    9f9c:	ldrh	w1, [x2, x1, lsl #1]
    9fa0:	tbnz	w1, #13, a314 <fprintf@plt+0x17b4>
    9fa4:	cmp	w0, #0x2c
    9fa8:	b.ne	a31c <fprintf@plt+0x17bc>  // b.any
    9fac:	add	x23, x23, #0x1
    9fb0:	b	9eac <fprintf@plt+0x134c>
    9fb4:	ldr	x0, [sp, #192]
    9fb8:	add	x21, x21, x0
    9fbc:	b	9e14 <fprintf@plt+0x12b4>
    9fc0:	cbnz	w20, a16c <fprintf@plt+0x160c>
    9fc4:	adrp	x27, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9fc8:	adrp	x28, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    9fcc:	mov	x0, x21
    9fd0:	mov	w1, #0x0                   	// #0
    9fd4:	str	xzr, [x27, #1616]
    9fd8:	bl	16cac <omp_pause_resource_all_@@OMP_5.0+0x20>
    9fdc:	str	x0, [x28, #1576]
    9fe0:	cbz	x0, 9e7c <fprintf@plt+0x131c>
    9fe4:	add	x26, sp, #0xb0
    9fe8:	ldr	x1, [x27, #1616]
    9fec:	ldr	x0, [x28, #1576]
    9ff0:	ldr	x0, [x0, x1, lsl #3]
    9ff4:	bl	16d48 <omp_pause_resource_all_@@OMP_5.0+0xbc>
    9ff8:	mov	x3, x22
    9ffc:	mov	x2, x24
    a000:	mov	x1, x25
    a004:	mov	x0, x26
    a008:	bl	8e30 <fprintf@plt+0x2d0>
    a00c:	tst	w0, #0xff
    a010:	b.eq	9d38 <fprintf@plt+0x11d8>  // b.none
    a014:	ldrb	w0, [sp, #159]
    a018:	cbz	w0, a0c4 <fprintf@plt+0x1564>
    a01c:	mov	x21, #0x0                   	// #0
    a020:	b	a028 <fprintf@plt+0x14c8>
    a024:	add	x21, x21, #0x1
    a028:	ldr	x0, [x27, #1616]
    a02c:	cmp	x21, x0
    a030:	b.cs	a04c <fprintf@plt+0x14ec>  // b.hs, b.nlast
    a034:	ldr	x2, [x28, #1576]
    a038:	ldr	x1, [x2, x0, lsl #3]
    a03c:	ldr	x0, [x2, x21, lsl #3]
    a040:	bl	1733c <omp_pause_resource_all_@@OMP_5.0+0x6b0>
    a044:	tst	w0, #0xff
    a048:	b.eq	a024 <fprintf@plt+0x14c4>  // b.none
    a04c:	ldr	x2, [x27, #1616]
    a050:	cmp	x21, x2
    a054:	b.ne	a068 <fprintf@plt+0x1508>  // b.any
    a058:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a05c:	add	x0, x0, #0xb2
    a060:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    a064:	b	9d38 <fprintf@plt+0x11d8>
    a068:	ldr	x0, [x28, #1576]
    a06c:	lsl	x1, x21, #3
    a070:	sub	x2, x2, #0x1
    a074:	sub	x2, x2, x21
    a078:	ldr	x3, [x0, x1]
    a07c:	add	x1, x1, #0x8
    a080:	add	x1, x0, x1
    a084:	lsl	x2, x2, #3
    a088:	add	x0, x0, x21, lsl #3
    a08c:	str	x3, [sp, #96]
    a090:	bl	8610 <memmove@plt>
    a094:	ldr	x0, [x27, #1616]
    a098:	ldr	x1, [x28, #1576]
    a09c:	sub	x0, x0, #0x1
    a0a0:	str	x0, [x27, #1616]
    a0a4:	ldr	x3, [sp, #96]
    a0a8:	str	x3, [x1, x0, lsl #3]
    a0ac:	ldr	x0, [sp, #176]
    a0b0:	ldrb	w1, [x0]
    a0b4:	cbz	w1, a134 <fprintf@plt+0x15d4>
    a0b8:	add	x0, x0, #0x1
    a0bc:	str	x0, [sp, #176]
    a0c0:	b	9fe8 <fprintf@plt+0x1488>
    a0c4:	ldr	x0, [sp, #192]
    a0c8:	cmp	x0, #0x1
    a0cc:	b.ne	a12c <fprintf@plt+0x15cc>  // b.any
    a0d0:	ldr	x0, [x27, #1616]
    a0d4:	add	x0, x0, #0x1
    a0d8:	str	x0, [x27, #1616]
    a0dc:	b	a0ac <fprintf@plt+0x154c>
    a0e0:	ldr	x3, [x28, #1576]
    a0e4:	add	x0, x21, x0
    a0e8:	add	x4, x0, #0x1
    a0ec:	ldr	x2, [sp, #200]
    a0f0:	ldr	x1, [x3, x0, lsl #3]
    a0f4:	ldr	x0, [x3, x4, lsl #3]
    a0f8:	bl	17254 <omp_pause_resource_all_@@OMP_5.0+0x5c8>
    a0fc:	tst	w0, #0xff
    a100:	b.eq	9d38 <fprintf@plt+0x11d8>  // b.none
    a104:	add	x21, x21, #0x1
    a108:	ldr	x1, [sp, #192]
    a10c:	add	x2, x27, #0x650
    a110:	ldr	x0, [x27, #1616]
    a114:	sub	x3, x1, #0x1
    a118:	cmp	x21, x3
    a11c:	b.cc	a0e0 <fprintf@plt+0x1580>  // b.lo, b.ul, b.last
    a120:	add	x0, x1, x0
    a124:	str	x0, [x2]
    a128:	b	a0ac <fprintf@plt+0x154c>
    a12c:	mov	x21, #0x0                   	// #0
    a130:	b	a108 <fprintf@plt+0x15a8>
    a134:	ldr	x0, [x27, #1616]
    a138:	cbnz	x0, a148 <fprintf@plt+0x15e8>
    a13c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a140:	add	x0, x0, #0xec
    a144:	b	a060 <fprintf@plt+0x1500>
    a148:	mov	w0, #0x0                   	// #0
    a14c:	bl	17360 <omp_pause_resource_all_@@OMP_5.0+0x6d4>
    a150:	tst	w0, #0xff
    a154:	b.eq	9d38 <fprintf@plt+0x11d8>  // b.none
    a158:	add	x0, x19, #0x2c0
    a15c:	ldrb	w1, [x0, #26]
    a160:	cbnz	w1, a16c <fprintf@plt+0x160c>
    a164:	mov	w1, #0x1                   	// #1
    a168:	strb	w1, [x0, #26]
    a16c:	mov	w20, #0x1                   	// #1
    a170:	b	9e7c <fprintf@plt+0x131c>
    a174:	cbnz	w20, a194 <fprintf@plt+0x1634>
    a178:	mov	x0, x26
    a17c:	str	xzr, [x25, #1616]
    a180:	mov	w1, #0x1                   	// #1
    a184:	bl	16cac <omp_pause_resource_all_@@OMP_5.0+0x20>
    a188:	str	x0, [x28, #1576]
    a18c:	mov	w21, #0x1                   	// #1
    a190:	cbnz	x0, 9ea8 <fprintf@plt+0x1348>
    a194:	add	x0, x19, #0x2c0
    a198:	ldrb	w0, [x0, #26]
    a19c:	cbnz	w0, a364 <fprintf@plt+0x1804>
    a1a0:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a1a4:	add	x0, x0, #0x141
    a1a8:	bl	8b30 <getenv@plt>
    a1ac:	mov	x20, x0
    a1b0:	cbz	x0, a1c4 <fprintf@plt+0x1664>
    a1b4:	bl	8630 <strlen@plt>
    a1b8:	mov	x1, x0
    a1bc:	mov	x0, x20
    a1c0:	bl	1f374 <acc_set_cuda_stream@@OACC_2.0+0x594>
    a1c4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a1c8:	add	x0, x0, #0x184
    a1cc:	bl	8b30 <getenv@plt>
    a1d0:	mov	x20, x0
    a1d4:	cbz	x0, a22c <fprintf@plt+0x16cc>
    a1d8:	bl	88f0 <__ctype_b_loc@plt>
    a1dc:	ldr	x23, [x0]
    a1e0:	ldrb	w0, [x20]
    a1e4:	ldrh	w0, [x23, x0, lsl #1]
    a1e8:	tbnz	w0, #13, a36c <fprintf@plt+0x180c>
    a1ec:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
    a1f0:	mov	x0, x20
    a1f4:	add	x1, x1, #0x652
    a1f8:	mov	x2, #0x6                   	// #6
    a1fc:	bl	8990 <strncasecmp@plt>
    a200:	cbnz	w0, a374 <fprintf@plt+0x1814>
    a204:	add	x20, x20, #0x6
    a208:	mov	w21, #0x1                   	// #1
    a20c:	ldrb	w1, [x20]
    a210:	ldrb	w0, [x20]
    a214:	ldrh	w1, [x23, x1, lsl #1]
    a218:	tbnz	w1, #13, a398 <fprintf@plt+0x1838>
    a21c:	cbz	w0, a230 <fprintf@plt+0x16d0>
    a220:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a224:	add	x0, x0, #0x15d
    a228:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    a22c:	mov	w21, #0xffffffff            	// #-1
    a230:	adrp	x24, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a234:	add	x0, x24, #0x194
    a238:	bl	8b30 <getenv@plt>
    a23c:	mov	x20, x0
    a240:	cbz	x0, a438 <fprintf@plt+0x18d8>
    a244:	bl	88f0 <__ctype_b_loc@plt>
    a248:	mov	x23, x0
    a24c:	ldr	x2, [x0]
    a250:	ldrb	w1, [x20]
    a254:	ldrb	w0, [x20]
    a258:	ldrh	w1, [x2, x1, lsl #1]
    a25c:	tbnz	w1, #13, a3b0 <fprintf@plt+0x1850>
    a260:	cbz	w0, a428 <fprintf@plt+0x18c8>
    a264:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a268:	mov	x0, x20
    a26c:	add	x1, x1, #0x1a3
    a270:	mov	x2, #0x8                   	// #8
    a274:	bl	8990 <strncasecmp@plt>
    a278:	cbz	w0, a294 <fprintf@plt+0x1734>
    a27c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a280:	mov	x0, x20
    a284:	add	x1, x1, #0x1ac
    a288:	mov	x2, #0x8                   	// #8
    a28c:	bl	8990 <strncasecmp@plt>
    a290:	cbnz	w0, a3b8 <fprintf@plt+0x1858>
    a294:	add	x20, x20, #0x8
    a298:	mov	x1, #0x1                   	// #1
    a29c:	mov	x26, #0xffffffffffffffff    	// #-1
    a2a0:	str	x20, [sp, #200]
    a2a4:	ldr	x4, [x23]
    a2a8:	b	a4b0 <fprintf@plt+0x1950>
    a2ac:	mov	x5, x27
    a2b0:	mov	x8, #0x1                   	// #1
    a2b4:	b	9f78 <fprintf@plt+0x1418>
    a2b8:	ldr	x1, [x25, #1616]
    a2bc:	str	x5, [sp, #136]
    a2c0:	ldr	x0, [x28, #1576]
    a2c4:	ldr	x0, [x0, x1, lsl #3]
    a2c8:	stp	x0, x8, [sp, #120]
    a2cc:	bl	16d48 <omp_pause_resource_all_@@OMP_5.0+0xbc>
    a2d0:	ldr	x0, [sp, #120]
    a2d4:	mov	x1, x27
    a2d8:	mov	w4, #0x1                   	// #1
    a2dc:	mov	x3, #0x0                   	// #0
    a2e0:	mov	x2, #0x1                   	// #1
    a2e4:	bl	16d58 <omp_pause_resource_all_@@OMP_5.0+0xcc>
    a2e8:	tst	w0, #0xff
    a2ec:	ldp	x8, x5, [sp, #128]
    a2f0:	b.eq	a300 <fprintf@plt+0x17a0>  // b.none
    a2f4:	ldr	x0, [x25, #1616]
    a2f8:	add	x0, x0, #0x1
    a2fc:	str	x0, [x25, #1616]
    a300:	add	x27, x27, x8
    a304:	sub	x5, x5, #0x1
    a308:	cmn	x5, #0x1
    a30c:	b.ne	a2b8 <fprintf@plt+0x1758>  // b.any
    a310:	b	9f8c <fprintf@plt+0x142c>
    a314:	add	x23, x23, #0x1
    a318:	b	9f94 <fprintf@plt+0x1434>
    a31c:	cbnz	w0, 9eac <fprintf@plt+0x134c>
    a320:	cbz	w21, a174 <fprintf@plt+0x1614>
    a324:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a328:	ldr	x0, [x0, #1616]
    a32c:	cbnz	x0, a354 <fprintf@plt+0x17f4>
    a330:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a334:	ldr	x0, [x20, #1576]
    a338:	bl	8950 <free@plt>
    a33c:	str	xzr, [x20, #1576]
    a340:	b	a194 <fprintf@plt+0x1634>
    a344:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a348:	add	x0, x0, #0x109
    a34c:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    a350:	b	a194 <fprintf@plt+0x1634>
    a354:	add	x0, x19, #0x2c0
    a358:	ldrb	w1, [x0, #26]
    a35c:	cbnz	w1, a364 <fprintf@plt+0x1804>
    a360:	strb	w21, [x0, #26]
    a364:	bl	17580 <omp_pause_resource_all_@@OMP_5.0+0x8f4>
    a368:	b	a1a0 <fprintf@plt+0x1640>
    a36c:	add	x20, x20, #0x1
    a370:	b	a1e0 <fprintf@plt+0x1680>
    a374:	mov	x0, x20
    a378:	mov	x2, #0x7                   	// #7
    a37c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a380:	add	x1, x1, #0x155
    a384:	bl	8990 <strncasecmp@plt>
    a388:	mov	w21, w0
    a38c:	cbnz	w0, a3a0 <fprintf@plt+0x1840>
    a390:	add	x20, x20, #0x7
    a394:	b	a20c <fprintf@plt+0x16ac>
    a398:	add	x20, x20, #0x1
    a39c:	b	a20c <fprintf@plt+0x16ac>
    a3a0:	adrp	x20, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a3a4:	mov	w21, #0xffffffff            	// #-1
    a3a8:	add	x20, x20, #0xeab
    a3ac:	b	a20c <fprintf@plt+0x16ac>
    a3b0:	add	x20, x20, #0x1
    a3b4:	b	a250 <fprintf@plt+0x16f0>
    a3b8:	bl	8b20 <__errno_location@plt>
    a3bc:	mov	x25, x0
    a3c0:	mov	x1, x22
    a3c4:	mov	x0, x20
    a3c8:	mov	w2, #0xa                   	// #10
    a3cc:	str	wzr, [x25]
    a3d0:	bl	8a10 <strtoull@plt>
    a3d4:	mov	x26, x0
    a3d8:	ldr	w0, [x25]
    a3dc:	cbnz	w0, a428 <fprintf@plt+0x18c8>
    a3e0:	ldr	x2, [x23]
    a3e4:	ldr	x20, [sp, #200]
    a3e8:	ldrb	w25, [x20]
    a3ec:	ldrb	w0, [x20]
    a3f0:	ldrh	w1, [x2, x25, lsl #1]
    a3f4:	tbnz	w1, #13, a464 <fprintf@plt+0x1904>
    a3f8:	cbz	w0, a568 <fprintf@plt+0x1a08>
    a3fc:	bl	8730 <__ctype_tolower_loc@plt>
    a400:	ldr	x0, [x0]
    a404:	ldr	w2, [x0, x25, lsl #2]
    a408:	cmp	w2, #0x6d
    a40c:	b.eq	a490 <fprintf@plt+0x1930>  // b.none
    a410:	b.gt	a470 <fprintf@plt+0x1910>
    a414:	cmp	w2, #0x67
    a418:	b.eq	a49c <fprintf@plt+0x193c>  // b.none
    a41c:	cmp	w2, #0x6b
    a420:	mov	x1, #0x3e8                 	// #1000
    a424:	b.eq	a484 <fprintf@plt+0x1924>  // b.none
    a428:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a42c:	add	x1, x24, #0x194
    a430:	add	x0, x0, #0xeb8
    a434:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    a438:	cmp	w21, #0x1
    a43c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a440:	b.ne	a574 <fprintf@plt+0x1a14>  // b.any
    a444:	mov	x1, #0xac00                	// #44032
    a448:	movk	x1, #0xfc23, lsl #16
    a44c:	movk	x1, #0x6, lsl #32
    a450:	str	x1, [x0, #1592]
    a454:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a458:	mov	x1, #0x3e8                 	// #1000
    a45c:	str	x1, [x0, #1608]
    a460:	b	a4e8 <fprintf@plt+0x1988>
    a464:	add	x20, x20, #0x1
    a468:	str	x20, [sp, #200]
    a46c:	b	a3e4 <fprintf@plt+0x1884>
    a470:	cmp	w2, #0x74
    a474:	b.ne	a428 <fprintf@plt+0x18c8>  // b.any
    a478:	mov	x1, #0x1000                	// #4096
    a47c:	movk	x1, #0xd4a5, lsl #16
    a480:	movk	x1, #0xe8, lsl #32
    a484:	add	x20, x20, #0x1
    a488:	str	x20, [sp, #200]
    a48c:	b	a2a4 <fprintf@plt+0x1744>
    a490:	mov	x1, #0x4240                	// #16960
    a494:	movk	x1, #0xf, lsl #16
    a498:	b	a484 <fprintf@plt+0x1924>
    a49c:	mov	x1, #0xca00                	// #51712
    a4a0:	movk	x1, #0x3b9a, lsl #16
    a4a4:	b	a484 <fprintf@plt+0x1924>
    a4a8:	add	x2, x2, #0x1
    a4ac:	str	x2, [sp, #200]
    a4b0:	ldr	x2, [sp, #200]
    a4b4:	ldrb	w3, [x2]
    a4b8:	ldrb	w0, [x2]
    a4bc:	ldrh	w3, [x4, x3, lsl #1]
    a4c0:	tbnz	w3, #13, a4a8 <fprintf@plt+0x1948>
    a4c4:	cbnz	w0, a428 <fprintf@plt+0x18c8>
    a4c8:	umulh	x0, x26, x1
    a4cc:	cbz	x0, a56c <fprintf@plt+0x1a0c>
    a4d0:	mov	x1, #0xffffffffffffffff    	// #-1
    a4d4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a4d8:	cmp	w21, #0x1
    a4dc:	str	x1, [x0, #1592]
    a4e0:	b.eq	a454 <fprintf@plt+0x18f4>  // b.none
    a4e4:	cbnz	w21, a584 <fprintf@plt+0x1a24>
    a4e8:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a4ec:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a4f0:	str	x2, [sp, #104]
    a4f4:	ldr	x1, [x2, #1592]
    a4f8:	ldr	x3, [x0, #1608]
    a4fc:	cmp	x3, x1
    a500:	b.ls	a508 <fprintf@plt+0x19a8>  // b.plast
    a504:	str	x1, [x0, #1608]
    a508:	add	x23, sp, #0xa8
    a50c:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a510:	add	x0, x20, #0x668
    a514:	bl	86e0 <pthread_attr_init@plt>
    a518:	mov	x1, x23
    a51c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a520:	add	x0, x0, #0x1b6
    a524:	bl	92c0 <fprintf@plt+0x760>
    a528:	tst	w0, #0xff
    a52c:	b.eq	a590 <fprintf@plt+0x1a30>  // b.none
    a530:	ldr	x1, [sp, #168]
    a534:	add	x0, x20, #0x668
    a538:	bl	8810 <pthread_attr_setstacksize@plt>
    a53c:	cmp	w0, #0x16
    a540:	b.ne	a75c <fprintf@plt+0x1bfc>  // b.any
    a544:	ldr	x1, [sp, #168]
    a548:	mov	x0, #0x1ffff               	// #131071
    a54c:	cmp	x1, x0
    a550:	b.hi	a74c <fprintf@plt+0x1bec>  // b.pmore
    a554:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a558:	add	x0, x0, #0x1c4
    a55c:	mov	x1, #0x80                  	// #128
    a560:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    a564:	b	a5a8 <fprintf@plt+0x1a48>
    a568:	mov	x1, #0x1                   	// #1
    a56c:	mul	x1, x1, x26
    a570:	b	a4d4 <fprintf@plt+0x1974>
    a574:	cbz	w21, a4e8 <fprintf@plt+0x1988>
    a578:	mov	x1, #0x93e0                	// #37856
    a57c:	movk	x1, #0x4, lsl #16
    a580:	str	x1, [x0, #1592]
    a584:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a588:	mov	x1, #0x64                  	// #100
    a58c:	b	a45c <fprintf@plt+0x18fc>
    a590:	mov	x1, x23
    a594:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a598:	add	x0, x0, #0x1b5
    a59c:	bl	92c0 <fprintf@plt+0x760>
    a5a0:	tst	w0, #0xff
    a5a4:	b.ne	a530 <fprintf@plt+0x19d0>  // b.any
    a5a8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a5ac:	add	x0, x0, #0x259
    a5b0:	ldr	x27, [sp, #168]
    a5b4:	bl	8b30 <getenv@plt>
    a5b8:	mov	x20, x0
    a5bc:	cbz	x0, ab60 <fprintf@plt+0x2000>
    a5c0:	bl	88f0 <__ctype_b_loc@plt>
    a5c4:	ldr	x23, [x0]
    a5c8:	ldrb	w0, [x20]
    a5cc:	ldrh	w0, [x23, x0, lsl #1]
    a5d0:	tbnz	w0, #13, a774 <fprintf@plt+0x1c14>
    a5d4:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a5d8:	mov	x0, x20
    a5dc:	add	x1, x1, #0xead
    a5e0:	mov	x2, #0x4                   	// #4
    a5e4:	bl	8990 <strncasecmp@plt>
    a5e8:	cbnz	w0, a77c <fprintf@plt+0x1c1c>
    a5ec:	add	x20, x20, #0x4
    a5f0:	mov	w24, #0x0                   	// #0
    a5f4:	mov	w25, #0x1                   	// #1
    a5f8:	ldrb	w1, [x20]
    a5fc:	ldrb	w0, [x20]
    a600:	ldrh	w1, [x23, x1, lsl #1]
    a604:	tbnz	w1, #13, a7c8 <fprintf@plt+0x1c68>
    a608:	cbz	w0, a618 <fprintf@plt+0x1ab8>
    a60c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a610:	add	x0, x0, #0x232
    a614:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    a618:	cbz	w25, ab60 <fprintf@plt+0x2000>
    a61c:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    a620:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a624:	add	x0, x0, #0x269
    a628:	add	x28, x19, #0x2c0
    a62c:	ldr	x23, [x20, #4040]
    a630:	adrp	x25, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a634:	adrp	x26, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a638:	add	x25, x25, #0xee7
    a63c:	add	x26, x26, #0xee2
    a640:	ldr	x1, [x23]
    a644:	bl	8640 <fputs@plt>
    a648:	ldr	x1, [x23]
    a64c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a650:	add	x0, x0, #0x28c
    a654:	bl	8640 <fputs@plt>
    a658:	ldrb	w0, [x28, #24]
    a65c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a660:	add	x1, x1, #0x2a2
    a664:	cmp	w0, #0x0
    a668:	ldr	x0, [x23]
    a66c:	csel	x2, x26, x25, ne  // ne = any
    a670:	bl	8b60 <fprintf@plt>
    a674:	ldrb	w0, [x28, #25]
    a678:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a67c:	add	x1, x1, #0x2b8
    a680:	adrp	x28, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a684:	cmp	w0, #0x0
    a688:	ldr	x0, [x23]
    a68c:	csel	x2, x26, x25, ne  // ne = any
    a690:	mov	x25, x23
    a694:	mov	x26, #0x0                   	// #0
    a698:	bl	8b60 <fprintf@plt>
    a69c:	ldr	x2, [x19, #704]
    a6a0:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a6a4:	ldr	x0, [x23]
    a6a8:	add	x1, x1, #0x2cd
    a6ac:	adrp	x23, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a6b0:	add	x23, x23, #0x2e6
    a6b4:	bl	8b60 <fprintf@plt>
    a6b8:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a6bc:	ldr	x1, [x28, #1632]
    a6c0:	add	x26, x26, #0x1
    a6c4:	ldr	x0, [x25]
    a6c8:	cmp	x1, x26
    a6cc:	b.hi	a7e4 <fprintf@plt+0x1c84>  // b.pmore
    a6d0:	mov	x1, x0
    a6d4:	adrp	x23, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a6d8:	add	x0, x23, #0x482
    a6dc:	bl	8640 <fputs@plt>
    a6e0:	ldr	x1, [x25]
    a6e4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a6e8:	add	x0, x0, #0x2eb
    a6ec:	bl	8640 <fputs@plt>
    a6f0:	add	x0, x19, #0x2c0
    a6f4:	ldr	w0, [x0, #8]
    a6f8:	tbz	w0, #31, a7fc <fprintf@plt+0x1c9c>
    a6fc:	mov	w1, #0x80000001            	// #-2147483647
    a700:	cmp	w0, w1
    a704:	b.eq	a844 <fprintf@plt+0x1ce4>  // b.none
    a708:	ldr	x1, [x25]
    a70c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a710:	add	x0, x0, #0x301
    a714:	bl	8640 <fputs@plt>
    a718:	ldr	x0, [x20, #4040]
    a71c:	ldr	x1, [x0]
    a720:	add	x0, x19, #0x2c0
    a724:	ldr	w0, [x0, #8]
    a728:	and	w0, w0, #0x7fffffff
    a72c:	cmp	w0, #0x4
    a730:	b.hi	a874 <fprintf@plt+0x1d14>  // b.pmore
    a734:	adrp	x2, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a738:	add	x2, x2, #0x534
    a73c:	ldrb	w0, [x2, w0, uxtw]
    a740:	adr	x2, a74c <fprintf@plt+0x1bec>
    a744:	add	x0, x2, w0, sxtb #2
    a748:	br	x0
    a74c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a750:	add	x0, x0, #0x1e9
    a754:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
    a758:	b	a5a8 <fprintf@plt+0x1a48>
    a75c:	cbz	w0, a5a8 <fprintf@plt+0x1a48>
    a760:	bl	8870 <strerror@plt>
    a764:	mov	x1, x0
    a768:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a76c:	add	x0, x0, #0x20d
    a770:	b	a560 <fprintf@plt+0x1a00>
    a774:	add	x20, x20, #0x1
    a778:	b	a5c8 <fprintf@plt+0x1a68>
    a77c:	adrp	x1, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a780:	mov	x0, x20
    a784:	add	x1, x1, #0xeb2
    a788:	mov	x2, #0x5                   	// #5
    a78c:	bl	8990 <strncasecmp@plt>
    a790:	cbnz	w0, a7a4 <fprintf@plt+0x1c44>
    a794:	add	x20, x20, #0x5
    a798:	mov	w24, #0x0                   	// #0
    a79c:	mov	w25, #0x0                   	// #0
    a7a0:	b	a5f8 <fprintf@plt+0x1a98>
    a7a4:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a7a8:	mov	x0, x20
    a7ac:	add	x1, x1, #0x22a
    a7b0:	mov	x2, #0x7                   	// #7
    a7b4:	bl	8990 <strncasecmp@plt>
    a7b8:	cbnz	w0, a7d0 <fprintf@plt+0x1c70>
    a7bc:	add	x20, x20, #0x7
    a7c0:	mov	w24, #0x1                   	// #1
    a7c4:	b	a5f4 <fprintf@plt+0x1a94>
    a7c8:	add	x20, x20, #0x1
    a7cc:	b	a5f8 <fprintf@plt+0x1a98>
    a7d0:	adrp	x20, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a7d4:	mov	w24, #0x0                   	// #0
    a7d8:	add	x20, x20, #0xeab
    a7dc:	mov	w25, #0x0                   	// #0
    a7e0:	b	a5f8 <fprintf@plt+0x1a98>
    a7e4:	ldr	x1, [x3, #1512]
    a7e8:	ldr	x2, [x1, x26, lsl #3]
    a7ec:	mov	x1, x23
    a7f0:	bl	8b60 <fprintf@plt>
    a7f4:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a7f8:	b	a6bc <fprintf@plt+0x1b5c>
    a7fc:	cmp	w0, #0x1
    a800:	b.ne	a718 <fprintf@plt+0x1bb8>  // b.any
    a804:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a808:	add	x0, x0, #0x2fe
    a80c:	ldr	x1, [x25]
    a810:	b	a714 <fprintf@plt+0x1bb4>
    a814:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a818:	add	x0, x0, #0x30c
    a81c:	bl	8640 <fputs@plt>
    a820:	add	x0, x19, #0x2c0
    a824:	ldr	w2, [x0, #12]
    a828:	cmp	w2, #0x1
    a82c:	b.eq	a874 <fprintf@plt+0x1d14>  // b.none
    a830:	ldr	x0, [x20, #4040]
    a834:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a838:	add	x1, x1, #0x314
    a83c:	ldr	x0, [x0]
    a840:	b	a870 <fprintf@plt+0x1d10>
    a844:	ldr	x25, [x20, #4040]
    a848:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a84c:	add	x0, x0, #0x318
    a850:	ldr	x1, [x25]
    a854:	bl	8640 <fputs@plt>
    a858:	add	x0, x19, #0x2c0
    a85c:	ldr	w2, [x0, #12]
    a860:	cbz	w2, a874 <fprintf@plt+0x1d14>
    a864:	ldr	x0, [x25]
    a868:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a86c:	add	x1, x1, #0x314
    a870:	bl	8b60 <fprintf@plt>
    a874:	ldr	x25, [x20, #4040]
    a878:	add	x0, x23, #0x482
    a87c:	ldr	x1, [x25]
    a880:	bl	8640 <fputs@plt>
    a884:	ldr	x1, [x25]
    a888:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a88c:	add	x0, x0, #0x32b
    a890:	bl	8640 <fputs@plt>
    a894:	add	x0, x19, #0x2c0
    a898:	ldrb	w1, [x0, #26]
    a89c:	cmp	w1, #0x4
    a8a0:	b.hi	a8f8 <fprintf@plt+0x1d98>  // b.pmore
    a8a4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a8a8:	add	x0, x0, #0x53c
    a8ac:	ldrb	w0, [x0, w1, uxtw]
    a8b0:	adr	x1, a8bc <fprintf@plt+0x1d5c>
    a8b4:	add	x0, x1, w0, sxtb #2
    a8b8:	br	x0
    a8bc:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a8c0:	add	x0, x0, #0xfa3
    a8c4:	b	a81c <fprintf@plt+0x1cbc>
    a8c8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a8cc:	add	x0, x0, #0x31f
    a8d0:	b	a81c <fprintf@plt+0x1cbc>
    a8d4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a8d8:	add	x0, x0, #0x326
    a8dc:	bl	8640 <fputs@plt>
    a8e0:	b	a874 <fprintf@plt+0x1d14>
    a8e4:	ldr	x0, [x20, #4040]
    a8e8:	ldr	x1, [x0]
    a8ec:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a8f0:	add	x0, x0, #0xee7
    a8f4:	bl	8640 <fputs@plt>
    a8f8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a8fc:	adrp	x26, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a900:	add	x0, x0, #0x347
    a904:	add	x26, x26, #0x34e
    a908:	ldr	x28, [x20, #4040]
    a90c:	mov	x25, #0x1                   	// #1
    a910:	str	x0, [sp, #96]
    a914:	b	a99c <fprintf@plt+0x1e3c>
    a918:	ldr	x0, [x20, #4040]
    a91c:	ldr	x1, [x0]
    a920:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a924:	add	x0, x0, #0xee2
    a928:	b	a8f4 <fprintf@plt+0x1d94>
    a92c:	ldr	x0, [x20, #4040]
    a930:	ldr	x1, [x0]
    a934:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a938:	add	x0, x0, #0x340
    a93c:	b	a8f4 <fprintf@plt+0x1d94>
    a940:	ldr	x0, [x20, #4040]
    a944:	ldr	x1, [x0]
    a948:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a94c:	add	x0, x0, #0x348
    a950:	b	a8f4 <fprintf@plt+0x1d94>
    a954:	ldr	x0, [x20, #4040]
    a958:	ldr	x1, [x0]
    a95c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a960:	add	x0, x0, #0x34f
    a964:	b	a8f4 <fprintf@plt+0x1d94>
    a968:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a96c:	ldr	x0, [x0, #1552]
    a970:	ldrb	w0, [x0, x25]
    a974:	cmp	w0, #0x3
    a978:	b.eq	abd8 <fprintf@plt+0x2078>  // b.none
    a97c:	cmp	w0, #0x4
    a980:	b.eq	abe0 <fprintf@plt+0x2080>  // b.none
    a984:	cmp	w0, #0x2
    a988:	b.ne	a998 <fprintf@plt+0x1e38>  // b.any
    a98c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a990:	add	x0, x0, #0x33f
    a994:	bl	8640 <fputs@plt>
    a998:	add	x25, x25, #0x1
    a99c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a9a0:	ldr	x1, [x28]
    a9a4:	ldr	x0, [x0, #1536]
    a9a8:	cmp	x0, x25
    a9ac:	b.hi	a968 <fprintf@plt+0x1e08>  // b.pmore
    a9b0:	add	x0, x23, #0x482
    a9b4:	bl	8640 <fputs@plt>
    a9b8:	ldr	x1, [x28]
    a9bc:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    a9c0:	add	x0, x0, #0x356
    a9c4:	adrp	x26, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a9c8:	adrp	x28, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    a9cc:	add	x26, x26, #0xef0
    a9d0:	bl	8640 <fputs@plt>
    a9d4:	add	x28, x28, #0xeed
    a9d8:	ldr	x0, [x20, #4040]
    a9dc:	mov	x25, #0x0                   	// #0
    a9e0:	str	x0, [sp, #96]
    a9e4:	ldr	x0, [sp, #96]
    a9e8:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    a9ec:	ldr	x1, [x0]
    a9f0:	ldr	x0, [x3, #1616]
    a9f4:	cmp	x0, x25
    a9f8:	b.hi	abe8 <fprintf@plt+0x2088>  // b.pmore
    a9fc:	add	x0, x23, #0x482
    aa00:	bl	8640 <fputs@plt>
    aa04:	ldr	x0, [sp, #96]
    aa08:	mov	x2, x27
    aa0c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aa10:	add	x1, x1, #0x367
    aa14:	add	x19, x19, #0x2c0
    aa18:	adrp	x23, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    aa1c:	ldr	x0, [x0]
    aa20:	add	x23, x23, #0xee7
    aa24:	adrp	x25, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    aa28:	add	x25, x25, #0xee2
    aa2c:	bl	8b60 <fprintf@plt>
    aa30:	cmp	w21, #0x1
    aa34:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    aa38:	adrp	x2, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    aa3c:	add	x0, x0, #0xef9
    aa40:	add	x2, x2, #0xef2
    aa44:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aa48:	csel	x2, x2, x0, eq  // eq = none
    aa4c:	add	x1, x1, #0x380
    aa50:	ldr	x0, [sp, #96]
    aa54:	ldr	x0, [x0]
    aa58:	bl	8b60 <fprintf@plt>
    aa5c:	ldr	x21, [x20, #4040]
    aa60:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aa64:	ldr	w2, [x19, #20]
    aa68:	add	x1, x1, #0x39a
    aa6c:	ldr	x0, [x21]
    aa70:	bl	8b60 <fprintf@plt>
    aa74:	ldr	x0, [x21]
    aa78:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aa7c:	ldr	x2, [x19, #40]
    aa80:	add	x1, x1, #0x3b5
    aa84:	bl	8b60 <fprintf@plt>
    aa88:	ldr	x0, [sp, #112]
    aa8c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aa90:	add	x1, x1, #0x3d6
    aa94:	ldrb	w0, [x0, #1372]
    aa98:	cmp	w0, #0x0
    aa9c:	ldr	x0, [x21]
    aaa0:	csel	x2, x25, x23, ne  // ne = any
    aaa4:	bl	8b60 <fprintf@plt>
    aaa8:	ldr	w2, [x19, #16]
    aaac:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aab0:	ldr	x0, [x21]
    aab4:	add	x1, x1, #0x3f1
    aab8:	bl	8b60 <fprintf@plt>
    aabc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    aac0:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aac4:	add	x1, x1, #0x40e
    aac8:	ldr	w2, [x0, #1376]
    aacc:	ldr	x0, [x21]
    aad0:	bl	8b60 <fprintf@plt>
    aad4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    aad8:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aadc:	add	x1, x1, #0x42e
    aae0:	ldrb	w0, [x0, #1528]
    aae4:	cmp	w0, #0x0
    aae8:	ldr	x0, [x21]
    aaec:	csel	x2, x25, x23, ne  // ne = any
    aaf0:	bl	8b60 <fprintf@plt>
    aaf4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    aaf8:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aafc:	add	x1, x1, #0x44d
    ab00:	ldr	x2, [x0, #832]
    ab04:	ldr	x0, [x21]
    ab08:	bl	8b60 <fprintf@plt>
    ab0c:	cbz	w24, ab4c <fprintf@plt+0x1fec>
    ab10:	ldr	x1, [x21]
    ab14:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    ab18:	add	x0, x0, #0x46b
    ab1c:	bl	8640 <fputs@plt>
    ab20:	ldr	x0, [x21]
    ab24:	mov	x2, x27
    ab28:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    ab2c:	add	x1, x1, #0x485
    ab30:	bl	8b60 <fprintf@plt>
    ab34:	ldr	x0, [sp, #104]
    ab38:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    ab3c:	add	x1, x1, #0x49f
    ab40:	ldr	x2, [x0, #1592]
    ab44:	ldr	x0, [x21]
    ab48:	bl	8b60 <fprintf@plt>
    ab4c:	ldr	x20, [x20, #4040]
    ab50:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    ab54:	add	x0, x0, #0x4b9
    ab58:	ldr	x1, [x20]
    ab5c:	bl	8640 <fputs@plt>
    ab60:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ab64:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    ab68:	add	x1, x19, #0x658
    ab6c:	add	x0, x0, #0x4d9
    ab70:	bl	9420 <fprintf@plt+0x8c0>
    ab74:	tst	w0, #0xff
    ab78:	b.ne	ab80 <fprintf@plt+0x2020>  // b.any
    ab7c:	str	wzr, [x19, #1624]
    ab80:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    ab84:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ab88:	add	x0, x0, #0x4e8
    ab8c:	bl	8b30 <getenv@plt>
    ab90:	cbz	x0, ac24 <fprintf@plt+0x20c4>
    ab94:	ldrb	w1, [x0]
    ab98:	cbz	w1, ac24 <fprintf@plt+0x20c4>
    ab9c:	bl	8860 <strdup@plt>
    aba0:	str	x0, [x19, #1520]
    aba4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    aba8:	add	x0, x0, #0x4f8
    abac:	bl	8b30 <getenv@plt>
    abb0:	mov	x19, x0
    abb4:	cbnz	x0, ac98 <fprintf@plt+0x2138>
    abb8:	bl	1d6d4 <acc_on_device@@OACC_2.0+0xc>
    abbc:	ldp	x19, x20, [sp, #16]
    abc0:	ldp	x21, x22, [sp, #32]
    abc4:	ldp	x23, x24, [sp, #48]
    abc8:	ldp	x25, x26, [sp, #64]
    abcc:	ldp	x27, x28, [sp, #80]
    abd0:	ldp	x29, x30, [sp], #208
    abd4:	ret
    abd8:	ldr	x0, [sp, #96]
    abdc:	b	a994 <fprintf@plt+0x1e34>
    abe0:	mov	x0, x26
    abe4:	b	a994 <fprintf@plt+0x1e34>
    abe8:	mov	w0, #0x7b                  	// #123
    abec:	bl	86f0 <fputc@plt>
    abf0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    abf4:	ldr	x0, [x0, #1576]
    abf8:	ldr	x0, [x0, x25, lsl #3]
    abfc:	add	x25, x25, #0x1
    ac00:	bl	17604 <omp_pause_resource_all_@@OMP_5.0+0x978>
    ac04:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ac08:	ldr	x0, [x3, #1616]
    ac0c:	cmp	x0, x25
    ac10:	ldr	x0, [x20, #4040]
    ac14:	ldr	x1, [x0]
    ac18:	csel	x0, x28, x26, ne  // ne = any
    ac1c:	bl	8640 <fputs@plt>
    ac20:	b	a9e4 <fprintf@plt+0x1e84>
    ac24:	str	xzr, [x19, #1520]
    ac28:	b	aba4 <fprintf@plt+0x2044>
    ac2c:	cbz	x20, ac3c <fprintf@plt+0x20dc>
    ac30:	add	x19, x19, #0x1
    ac34:	cmp	w0, #0x3a
    ac38:	b.ne	abb8 <fprintf@plt+0x2058>  // b.any
    ac3c:	ldrb	w0, [x19]
    ac40:	cmp	w0, #0x3a
    ac44:	b.eq	ac80 <fprintf@plt+0x2120>  // b.none
    ac48:	bl	8b20 <__errno_location@plt>
    ac4c:	mov	x21, x0
    ac50:	mov	x1, x22
    ac54:	mov	x0, x19
    ac58:	mov	w2, #0xa                   	// #10
    ac5c:	str	wzr, [x21]
    ac60:	bl	8900 <strtol@plt>
    ac64:	ldr	w1, [x21]
    ac68:	cbnz	w1, abb8 <fprintf@plt+0x2058>
    ac6c:	tbnz	x0, #63, abb8 <fprintf@plt+0x2058>
    ac70:	tst	x0, #0xffffffff00000000
    ac74:	b.ne	abb8 <fprintf@plt+0x2058>  // b.any
    ac78:	ldr	x19, [sp, #200]
    ac7c:	str	w0, [x23, x20, lsl #2]
    ac80:	add	x20, x20, #0x1
    ac84:	ldrb	w0, [x19]
    ac88:	cbz	w0, abb8 <fprintf@plt+0x2058>
    ac8c:	cmp	x20, #0x3
    ac90:	b.ne	ac2c <fprintf@plt+0x20cc>  // b.any
    ac94:	b	abb8 <fprintf@plt+0x2058>
    ac98:	adrp	x23, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ac9c:	mov	x20, #0x0                   	// #0
    aca0:	add	x23, x23, #0x618
    aca4:	b	ac84 <fprintf@plt+0x2124>
    aca8:	stp	x29, x30, [sp, #-16]!
    acac:	adrp	x1, 14000 <omp_in_final@@OMP_3.1+0x488>
    acb0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    acb4:	mov	x29, sp
    acb8:	add	x1, x1, #0xd10
    acbc:	add	x0, x0, #0x6a8
    acc0:	bl	8680 <pthread_key_create@plt>
    acc4:	cbz	w0, acd4 <fprintf@plt+0x2174>
    acc8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    accc:	add	x0, x0, #0x7ef
    acd0:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
    acd4:	ldp	x29, x30, [sp], #16
    acd8:	ret
    acdc:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ace0:	ldr	x0, [x0, #4056]
    ace4:	cbz	x0, acec <fprintf@plt+0x218c>
    ace8:	b	8890 <__gmon_start__@plt>
    acec:	ret
    acf0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    acf4:	add	x0, x0, #0x550
    acf8:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    acfc:	add	x1, x1, #0x550
    ad00:	cmp	x1, x0
    ad04:	b.eq	ad1c <fprintf@plt+0x21bc>  // b.none
    ad08:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ad0c:	ldr	x1, [x1, #4024]
    ad10:	cbz	x1, ad1c <fprintf@plt+0x21bc>
    ad14:	mov	x16, x1
    ad18:	br	x16
    ad1c:	ret
    ad20:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ad24:	add	x0, x0, #0x550
    ad28:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ad2c:	add	x1, x1, #0x550
    ad30:	sub	x1, x1, x0
    ad34:	mov	x2, #0x2                   	// #2
    ad38:	asr	x1, x1, #3
    ad3c:	sdiv	x1, x1, x2
    ad40:	cbz	x1, ad58 <fprintf@plt+0x21f8>
    ad44:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ad48:	ldr	x2, [x2, #4064]
    ad4c:	cbz	x2, ad58 <fprintf@plt+0x21f8>
    ad50:	mov	x16, x2
    ad54:	br	x16
    ad58:	ret
    ad5c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ad60:	ldrb	w1, [x0, #1360]
    ad64:	cbnz	w1, ada8 <fprintf@plt+0x2248>
    ad68:	stp	x29, x30, [sp, #-32]!
    ad6c:	mov	x29, sp
    ad70:	str	x19, [sp, #16]
    ad74:	mov	x19, x0
    ad78:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ad7c:	ldr	x0, [x0, #4032]
    ad80:	cbz	x0, ad90 <fprintf@plt+0x2230>
    ad84:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ad88:	ldr	x0, [x0, #696]
    ad8c:	bl	86a0 <__cxa_finalize@plt>
    ad90:	bl	acf0 <fprintf@plt+0x2190>
    ad94:	mov	w0, #0x1                   	// #1
    ad98:	strb	w0, [x19, #1360]
    ad9c:	ldr	x19, [sp, #16]
    ada0:	ldp	x29, x30, [sp], #32
    ada4:	ret
    ada8:	ret
    adac:	b	ad20 <fprintf@plt+0x21c0>
    adb0:	stp	x29, x30, [sp, #-32]!
    adb4:	mov	x29, sp
    adb8:	str	x19, [sp, #16]
    adbc:	mov	x19, x0
    adc0:	bl	87a0 <malloc@plt>
    adc4:	cbnz	x0, add8 <fprintf@plt+0x2278>
    adc8:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    adcc:	mov	x1, x19
    add0:	add	x0, x0, #0xe88
    add4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
    add8:	ldr	x19, [sp, #16]
    addc:	ldp	x29, x30, [sp], #32
    ade0:	ret
    ade4:	stp	x29, x30, [sp, #-32]!
    ade8:	mov	x1, x0
    adec:	mov	x29, sp
    adf0:	str	x19, [sp, #16]
    adf4:	mov	x19, x0
    adf8:	mov	x0, #0x1                   	// #1
    adfc:	bl	8820 <calloc@plt>
    ae00:	cbnz	x0, ae14 <fprintf@plt+0x22b4>
    ae04:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    ae08:	mov	x1, x19
    ae0c:	add	x0, x0, #0xe88
    ae10:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
    ae14:	ldr	x19, [sp, #16]
    ae18:	ldp	x29, x30, [sp], #32
    ae1c:	ret
    ae20:	stp	x29, x30, [sp, #-32]!
    ae24:	mov	x29, sp
    ae28:	str	x19, [sp, #16]
    ae2c:	mov	x19, x1
    ae30:	bl	8850 <realloc@plt>
    ae34:	cbnz	x0, ae48 <fprintf@plt+0x22e8>
    ae38:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    ae3c:	mov	x1, x19
    ae40:	add	x0, x0, #0xe88
    ae44:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
    ae48:	ldr	x19, [sp, #16]
    ae4c:	ldp	x29, x30, [sp], #32
    ae50:	ret
    ae54:	stp	x29, x30, [sp, #-32]!
    ae58:	cmp	x0, #0x8
    ae5c:	mov	x2, #0x8                   	// #8
    ae60:	mov	x29, sp
    ae64:	csel	x0, x0, x2, cs  // cs = hs, nlast
    ae68:	str	x19, [sp, #16]
    ae6c:	mov	x19, x1
    ae70:	bl	87e0 <aligned_alloc@plt>
    ae74:	cbnz	x0, ae88 <fprintf@plt+0x2328>
    ae78:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
    ae7c:	mov	x1, x19
    ae80:	add	x0, x0, #0xe88
    ae84:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
    ae88:	ldr	x19, [sp, #16]
    ae8c:	ldp	x29, x30, [sp], #32
    ae90:	ret
    ae94:	b	8950 <free@plt>

000000000000ae98 <GOMP_atomic_start@@GOMP_1.0>:
    ae98:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ae9c:	add	x0, x0, #0x554
    aea0:	mov	w2, #0x1                   	// #1
    aea4:	ldaxr	w1, [x0]
    aea8:	cbnz	w1, aeb4 <GOMP_atomic_start@@GOMP_1.0+0x1c>
    aeac:	stxr	w3, w2, [x0]
    aeb0:	cbnz	w3, aea4 <GOMP_atomic_start@@GOMP_1.0+0xc>
    aeb4:	cmp	w1, #0x0
    aeb8:	b.eq	aec0 <GOMP_atomic_start@@GOMP_1.0+0x28>  // b.none
    aebc:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
    aec0:	ret

000000000000aec4 <GOMP_atomic_end@@GOMP_1.0>:
    aec4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    aec8:	add	x0, x0, #0x554
    aecc:	ldxr	w1, [x0]
    aed0:	stlxr	w2, wzr, [x0]
    aed4:	cbnz	w2, aecc <GOMP_atomic_end@@GOMP_1.0+0x8>
    aed8:	tbz	w1, #31, aee0 <GOMP_atomic_end@@GOMP_1.0+0x1c>
    aedc:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
    aee0:	ret

000000000000aee4 <GOMP_barrier@@GOMP_1.0>:
    aee4:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    aee8:	ldr	x0, [x0, #4016]
    aeec:	mrs	x1, tpidr_el0
    aef0:	add	x0, x1, x0
    aef4:	ldr	x0, [x0, #16]
    aef8:	cbz	x0, af04 <GOMP_barrier@@GOMP_1.0+0x20>
    aefc:	add	x0, x0, #0x80
    af00:	b	16208 <omp_get_num_procs@@OMP_1.0+0x594>
    af04:	ret

000000000000af08 <GOMP_barrier_cancel@@GOMP_4.0>:
    af08:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    af0c:	ldr	x0, [x0, #4016]
    af10:	mrs	x1, tpidr_el0
    af14:	add	x0, x1, x0
    af18:	ldr	x0, [x0, #16]
    af1c:	add	x0, x0, #0x80
    af20:	b	16324 <omp_get_num_procs@@OMP_1.0+0x6b0>
    af24:	mov	x1, x0
    af28:	ldxr	w2, [x1]
    af2c:	stlxr	w3, wzr, [x1]
    af30:	cbnz	w3, af28 <GOMP_barrier_cancel@@GOMP_4.0+0x20>
    af34:	tbz	w2, #31, af3c <GOMP_barrier_cancel@@GOMP_4.0+0x34>
    af38:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
    af3c:	ret

000000000000af40 <GOMP_critical_start@@GOMP_1.0>:
    af40:	dmb	ish
    af44:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    af48:	add	x0, x0, #0x558
    af4c:	mov	w2, #0x1                   	// #1
    af50:	ldaxr	w1, [x0]
    af54:	cbnz	w1, af60 <GOMP_critical_start@@GOMP_1.0+0x20>
    af58:	stxr	w3, w2, [x0]
    af5c:	cbnz	w3, af50 <GOMP_critical_start@@GOMP_1.0+0x10>
    af60:	cmp	w1, #0x0
    af64:	b.eq	af6c <GOMP_critical_start@@GOMP_1.0+0x2c>  // b.none
    af68:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
    af6c:	ret

000000000000af70 <GOMP_critical_end@@GOMP_1.0>:
    af70:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    af74:	add	x0, x0, #0x558
    af78:	b	af24 <GOMP_barrier_cancel@@GOMP_4.0+0x1c>

000000000000af7c <GOMP_critical_name_start@@GOMP_1.0>:
    af7c:	mov	x2, x0
    af80:	mov	w3, #0x1                   	// #1
    af84:	ldaxr	w1, [x2]
    af88:	cbnz	w1, af94 <GOMP_critical_name_start@@GOMP_1.0+0x18>
    af8c:	stxr	w4, w3, [x2]
    af90:	cbnz	w4, af84 <GOMP_critical_name_start@@GOMP_1.0+0x8>
    af94:	cmp	w1, #0x0
    af98:	b.eq	afa0 <GOMP_critical_name_start@@GOMP_1.0+0x24>  // b.none
    af9c:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
    afa0:	ret

000000000000afa4 <GOMP_critical_name_end@@GOMP_1.0>:
    afa4:	b	af24 <GOMP_barrier_cancel@@GOMP_4.0+0x1c>
    afa8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    afac:	ldr	w0, [x0, #1544]
    afb0:	cbz	w0, afe8 <GOMP_critical_name_end@@GOMP_1.0+0x44>
    afb4:	stp	x29, x30, [sp, #-48]!
    afb8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    afbc:	mov	x29, sp
    afc0:	ldp	x4, x5, [x2]
    afc4:	stp	x4, x5, [sp, #16]
    afc8:	ldr	x0, [x0, #4040]
    afcc:	ldp	x2, x3, [x2, #16]
    afd0:	stp	x2, x3, [sp, #32]
    afd4:	ldr	x0, [x0]
    afd8:	add	x2, sp, #0x10
    afdc:	bl	8b00 <vfprintf@plt>
    afe0:	ldp	x29, x30, [sp], #48
    afe4:	ret
    afe8:	ret
    afec:	stp	x29, x30, [sp, #-256]!
    aff0:	mov	x29, sp
    aff4:	stp	x2, x3, [sp, #208]
    aff8:	add	x2, sp, #0x100
    affc:	stp	x2, x2, [sp, #48]
    b000:	add	x2, sp, #0xd0
    b004:	str	x2, [sp, #64]
    b008:	mov	w2, #0xffffffd0            	// #-48
    b00c:	str	w2, [sp, #72]
    b010:	mov	w2, #0xffffff80            	// #-128
    b014:	str	w2, [sp, #76]
    b018:	ldp	x2, x3, [sp, #48]
    b01c:	stp	x2, x3, [sp, #16]
    b020:	ldp	x2, x3, [sp, #64]
    b024:	stp	x2, x3, [sp, #32]
    b028:	add	x2, sp, #0x10
    b02c:	str	q0, [sp, #80]
    b030:	str	q1, [sp, #96]
    b034:	str	q2, [sp, #112]
    b038:	str	q3, [sp, #128]
    b03c:	str	q4, [sp, #144]
    b040:	str	q5, [sp, #160]
    b044:	str	q6, [sp, #176]
    b048:	str	q7, [sp, #192]
    b04c:	stp	x4, x5, [sp, #224]
    b050:	stp	x6, x7, [sp, #240]
    b054:	bl	afa8 <GOMP_critical_name_end@@GOMP_1.0+0x4>
    b058:	ldp	x29, x30, [sp], #256
    b05c:	ret
    b060:	stp	x29, x30, [sp, #-80]!
    b064:	mov	x29, sp
    b068:	stp	x19, x20, [sp, #16]
    b06c:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b070:	mov	x20, x1
    b074:	ldr	x19, [x19, #4040]
    b078:	ldr	x1, [x19]
    b07c:	str	x21, [sp, #32]
    b080:	mov	x21, x0
    b084:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    b088:	add	x0, x0, #0x541
    b08c:	bl	8640 <fputs@plt>
    b090:	ldp	x0, x1, [x20]
    b094:	stp	x0, x1, [sp, #48]
    b098:	add	x2, sp, #0x30
    b09c:	ldp	x0, x1, [x20, #16]
    b0a0:	stp	x0, x1, [sp, #64]
    b0a4:	ldr	x0, [x19]
    b0a8:	mov	x1, x21
    b0ac:	bl	8b00 <vfprintf@plt>
    b0b0:	ldr	x1, [x19]
    b0b4:	mov	w0, #0xa                   	// #10
    b0b8:	ldp	x19, x20, [sp, #16]
    b0bc:	ldr	x21, [sp, #32]
    b0c0:	ldp	x29, x30, [sp], #80
    b0c4:	b	86f0 <fputc@plt>
    b0c8:	stp	x29, x30, [sp, #-272]!
    b0cc:	mov	x29, sp
    b0d0:	stp	x1, x2, [sp, #216]
    b0d4:	add	x1, sp, #0x110
    b0d8:	stp	x1, x1, [sp, #48]
    b0dc:	add	x1, sp, #0xd0
    b0e0:	str	x1, [sp, #64]
    b0e4:	mov	w1, #0xffffffc8            	// #-56
    b0e8:	str	w1, [sp, #72]
    b0ec:	mov	w1, #0xffffff80            	// #-128
    b0f0:	str	w1, [sp, #76]
    b0f4:	add	x1, sp, #0x10
    b0f8:	stp	x3, x4, [sp, #232]
    b0fc:	ldp	x2, x3, [sp, #48]
    b100:	stp	x2, x3, [sp, #16]
    b104:	ldp	x2, x3, [sp, #64]
    b108:	stp	x2, x3, [sp, #32]
    b10c:	str	q0, [sp, #80]
    b110:	str	q1, [sp, #96]
    b114:	str	q2, [sp, #112]
    b118:	str	q3, [sp, #128]
    b11c:	str	q4, [sp, #144]
    b120:	str	q5, [sp, #160]
    b124:	str	q6, [sp, #176]
    b128:	str	q7, [sp, #192]
    b12c:	stp	x5, x6, [sp, #248]
    b130:	str	x7, [sp, #264]
    b134:	bl	b060 <GOMP_critical_name_end@@GOMP_1.0+0xbc>
    b138:	ldp	x29, x30, [sp], #272
    b13c:	ret
    b140:	stp	x29, x30, [sp, #-48]!
    b144:	mov	x29, sp
    b148:	ldp	x2, x3, [x1]
    b14c:	stp	x2, x3, [sp, #16]
    b150:	ldp	x2, x3, [x1, #16]
    b154:	add	x1, sp, #0x10
    b158:	stp	x2, x3, [sp, #32]
    b15c:	bl	b060 <GOMP_critical_name_end@@GOMP_1.0+0xbc>
    b160:	mov	w0, #0x1                   	// #1
    b164:	bl	8650 <exit@plt>
    b168:	stp	x29, x30, [sp, #-272]!
    b16c:	mov	x29, sp
    b170:	stp	x1, x2, [sp, #216]
    b174:	add	x1, sp, #0x110
    b178:	stp	x1, x1, [sp, #48]
    b17c:	add	x1, sp, #0xd0
    b180:	str	x1, [sp, #64]
    b184:	mov	w1, #0xffffffc8            	// #-56
    b188:	str	w1, [sp, #72]
    b18c:	mov	w1, #0xffffff80            	// #-128
    b190:	str	w1, [sp, #76]
    b194:	add	x1, sp, #0x10
    b198:	stp	x3, x4, [sp, #232]
    b19c:	ldp	x2, x3, [sp, #48]
    b1a0:	stp	x2, x3, [sp, #16]
    b1a4:	ldp	x2, x3, [sp, #64]
    b1a8:	stp	x2, x3, [sp, #32]
    b1ac:	str	q0, [sp, #80]
    b1b0:	str	q1, [sp, #96]
    b1b4:	str	q2, [sp, #112]
    b1b8:	str	q3, [sp, #128]
    b1bc:	str	q4, [sp, #144]
    b1c0:	str	q5, [sp, #160]
    b1c4:	str	q6, [sp, #176]
    b1c8:	str	q7, [sp, #192]
    b1cc:	stp	x5, x6, [sp, #248]
    b1d0:	str	x7, [sp, #264]
    b1d4:	bl	b140 <GOMP_critical_name_end@@GOMP_1.0+0x19c>

000000000000b1d8 <omp_set_num_threads@@OMP_1.0>:
    b1d8:	stp	x29, x30, [sp, #-32]!
    b1dc:	mrs	x1, tpidr_el0
    b1e0:	mov	x29, sp
    b1e4:	str	x19, [sp, #16]
    b1e8:	mov	w19, w0
    b1ec:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b1f0:	ldr	x0, [x0, #4016]
    b1f4:	add	x0, x1, x0
    b1f8:	ldr	x0, [x0, #80]
    b1fc:	cbz	x0, b220 <omp_set_num_threads@@OMP_1.0+0x48>
    b200:	add	x0, x0, #0x90
    b204:	cmp	w19, #0x0
    b208:	csinc	w19, w19, wzr, gt
    b20c:	sxtw	x19, w19
    b210:	str	x19, [x0]
    b214:	ldr	x19, [sp, #16]
    b218:	ldp	x29, x30, [sp], #32
    b21c:	ret
    b220:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
    b224:	b	b204 <omp_set_num_threads@@OMP_1.0+0x2c>

000000000000b228 <omp_set_dynamic@@OMP_1.0>:
    b228:	stp	x29, x30, [sp, #-32]!
    b22c:	mrs	x1, tpidr_el0
    b230:	mov	x29, sp
    b234:	str	x19, [sp, #16]
    b238:	mov	w19, w0
    b23c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b240:	ldr	x0, [x0, #4016]
    b244:	add	x0, x1, x0
    b248:	ldr	x1, [x0, #80]
    b24c:	cbz	x1, b26c <omp_set_dynamic@@OMP_1.0+0x44>
    b250:	add	x0, x1, #0x90
    b254:	cmp	w19, #0x0
    b258:	cset	w1, ne  // ne = any
    b25c:	strb	w1, [x0, #24]
    b260:	ldr	x19, [sp, #16]
    b264:	ldp	x29, x30, [sp], #32
    b268:	ret
    b26c:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
    b270:	b	b254 <omp_set_dynamic@@OMP_1.0+0x2c>

000000000000b274 <omp_get_dynamic@@OMP_1.0>:
    b274:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b278:	ldr	x0, [x0, #4016]
    b27c:	mrs	x1, tpidr_el0
    b280:	add	x0, x1, x0
    b284:	ldr	x1, [x0, #80]
    b288:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b28c:	add	x0, x0, #0x2c0
    b290:	add	x2, x1, #0x90
    b294:	cmp	x1, #0x0
    b298:	csel	x0, x0, x2, eq  // eq = none
    b29c:	ldrb	w0, [x0, #24]
    b2a0:	ret

000000000000b2a4 <omp_set_nested@@OMP_1.0>:
    b2a4:	stp	x29, x30, [sp, #-32]!
    b2a8:	mrs	x1, tpidr_el0
    b2ac:	mov	x29, sp
    b2b0:	str	x19, [sp, #16]
    b2b4:	mov	w19, w0
    b2b8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b2bc:	ldr	x0, [x0, #4016]
    b2c0:	add	x0, x1, x0
    b2c4:	ldr	x1, [x0, #80]
    b2c8:	cbz	x1, b2e8 <omp_set_nested@@OMP_1.0+0x44>
    b2cc:	add	x0, x1, #0x90
    b2d0:	cmp	w19, #0x0
    b2d4:	cset	w1, ne  // ne = any
    b2d8:	strb	w1, [x0, #25]
    b2dc:	ldr	x19, [sp, #16]
    b2e0:	ldp	x29, x30, [sp], #32
    b2e4:	ret
    b2e8:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
    b2ec:	b	b2d0 <omp_set_nested@@OMP_1.0+0x2c>

000000000000b2f0 <omp_get_nested@@OMP_1.0>:
    b2f0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b2f4:	ldr	x0, [x0, #4016]
    b2f8:	mrs	x1, tpidr_el0
    b2fc:	add	x0, x1, x0
    b300:	ldr	x1, [x0, #80]
    b304:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b308:	add	x0, x0, #0x2c0
    b30c:	add	x2, x1, #0x90
    b310:	cmp	x1, #0x0
    b314:	csel	x0, x0, x2, eq  // eq = none
    b318:	ldrb	w0, [x0, #25]
    b31c:	ret

000000000000b320 <omp_set_schedule@@OMP_3.0>:
    b320:	stp	x29, x30, [sp, #-32]!
    b324:	mov	x29, sp
    b328:	stp	x19, x20, [sp, #16]
    b32c:	mov	w20, w0
    b330:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b334:	ldr	x0, [x0, #4016]
    b338:	mov	w19, w1
    b33c:	mrs	x1, tpidr_el0
    b340:	add	x0, x1, x0
    b344:	ldr	x1, [x0, #80]
    b348:	cbz	x1, b378 <omp_set_schedule@@OMP_3.0+0x58>
    b34c:	add	x0, x1, #0x90
    b350:	and	w1, w20, #0x7fffffff
    b354:	tst	w20, #0x7ffffffc
    b358:	b.ne	b380 <omp_set_schedule@@OMP_3.0+0x60>  // b.any
    b35c:	tst	w20, #0x7ffffffe
    b360:	b.ne	b3a0 <omp_set_schedule@@OMP_3.0+0x80>  // b.any
    b364:	cmp	w1, #0x1
    b368:	b.eq	b390 <omp_set_schedule@@OMP_3.0+0x70>  // b.none
    b36c:	ldp	x19, x20, [sp, #16]
    b370:	ldp	x29, x30, [sp], #32
    b374:	ret
    b378:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
    b37c:	b	b350 <omp_set_schedule@@OMP_3.0+0x30>
    b380:	cmp	w1, #0x4
    b384:	b.ne	b36c <omp_set_schedule@@OMP_3.0+0x4c>  // b.any
    b388:	str	w20, [x0, #8]
    b38c:	b	b36c <omp_set_schedule@@OMP_3.0+0x4c>
    b390:	cmp	w19, #0x0
    b394:	csel	w19, w19, wzr, ge  // ge = tcont
    b398:	str	w19, [x0, #12]
    b39c:	b	b388 <omp_set_schedule@@OMP_3.0+0x68>
    b3a0:	cmp	w19, #0x0
    b3a4:	csinc	w19, w19, wzr, gt
    b3a8:	b	b398 <omp_set_schedule@@OMP_3.0+0x78>

000000000000b3ac <omp_get_schedule@@OMP_3.0>:
    b3ac:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b3b0:	ldr	x2, [x2, #4016]
    b3b4:	mrs	x3, tpidr_el0
    b3b8:	add	x2, x3, x2
    b3bc:	ldr	x3, [x2, #80]
    b3c0:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b3c4:	add	x2, x2, #0x2c0
    b3c8:	add	x4, x3, #0x90
    b3cc:	cmp	x3, #0x0
    b3d0:	csel	x2, x2, x4, eq  // eq = none
    b3d4:	ldr	w3, [x2, #8]
    b3d8:	str	w3, [x0]
    b3dc:	ldr	w0, [x2, #12]
    b3e0:	str	w0, [x1]
    b3e4:	ret

000000000000b3e8 <omp_get_max_threads@@OMP_1.0>:
    b3e8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b3ec:	ldr	x0, [x0, #4016]
    b3f0:	mrs	x1, tpidr_el0
    b3f4:	add	x0, x1, x0
    b3f8:	ldr	x1, [x0, #80]
    b3fc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b400:	add	x0, x0, #0x2c0
    b404:	add	x2, x1, #0x90
    b408:	cmp	x1, #0x0
    b40c:	csel	x0, x0, x2, eq  // eq = none
    b410:	ldr	w0, [x0]
    b414:	ret

000000000000b418 <omp_get_thread_limit@@OMP_3.0>:
    b418:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b41c:	ldr	x0, [x0, #4016]
    b420:	mrs	x1, tpidr_el0
    b424:	add	x0, x1, x0
    b428:	ldr	x1, [x0, #80]
    b42c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b430:	add	x0, x0, #0x2c0
    b434:	add	x2, x1, #0x90
    b438:	cmp	x1, #0x0
    b43c:	csel	x0, x0, x2, eq  // eq = none
    b440:	mov	w1, #0x7fffffff            	// #2147483647
    b444:	ldr	w0, [x0, #20]
    b448:	cmp	w0, #0x0
    b44c:	csel	w0, w0, w1, ge  // ge = tcont
    b450:	ret

000000000000b454 <omp_set_max_active_levels@@OMP_3.0>:
    b454:	tbnz	w0, #31, b464 <omp_set_max_active_levels@@OMP_3.0+0x10>
    b458:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b45c:	sxtw	x0, w0
    b460:	str	x0, [x1, #744]
    b464:	ret

000000000000b468 <omp_get_max_active_levels@@OMP_3.0>:
    b468:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b46c:	ldr	w0, [x0, #744]
    b470:	ret

000000000000b474 <omp_get_cancellation@@OMP_4.0>:
    b474:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b478:	ldrb	w0, [x0, #1372]
    b47c:	ret

000000000000b480 <omp_get_max_task_priority@@OMP_4.5>:
    b480:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b484:	ldr	w0, [x0, #1376]
    b488:	ret

000000000000b48c <omp_get_proc_bind@@OMP_4.0>:
    b48c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b490:	ldr	x0, [x0, #4016]
    b494:	mrs	x1, tpidr_el0
    b498:	add	x0, x1, x0
    b49c:	ldr	x1, [x0, #80]
    b4a0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b4a4:	add	x0, x0, #0x2c0
    b4a8:	add	x2, x1, #0x90
    b4ac:	cmp	x1, #0x0
    b4b0:	csel	x0, x0, x2, eq  // eq = none
    b4b4:	ldrb	w0, [x0, #26]
    b4b8:	ret

000000000000b4bc <omp_get_initial_device@@OMP_4.5>:
    b4bc:	mov	w0, #0xfffffffe            	// #-2
    b4c0:	ret

000000000000b4c4 <omp_get_num_places@@OMP_4.5>:
    b4c4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b4c8:	ldr	w0, [x0, #1616]
    b4cc:	ret

000000000000b4d0 <omp_get_place_num@@OMP_4.5>:
    b4d0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b4d4:	ldr	x0, [x0, #1576]
    b4d8:	cbz	x0, b51c <omp_get_place_num@@OMP_4.5+0x4c>
    b4dc:	stp	x29, x30, [sp, #-32]!
    b4e0:	mov	x29, sp
    b4e4:	stp	x19, x20, [sp, #16]
    b4e8:	mrs	x19, tpidr_el0
    b4ec:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b4f0:	ldr	x20, [x20, #4016]
    b4f4:	add	x0, x19, x20
    b4f8:	ldr	w0, [x0, #92]
    b4fc:	cbnz	w0, b504 <omp_get_place_num@@OMP_4.5+0x34>
    b500:	bl	17580 <omp_pause_resource_all_@@OMP_5.0+0x8f4>
    b504:	add	x19, x19, x20
    b508:	ldr	w0, [x19, #92]
    b50c:	ldp	x19, x20, [sp, #16]
    b510:	sub	w0, w0, #0x1
    b514:	ldp	x29, x30, [sp], #32
    b518:	ret
    b51c:	mov	w0, #0xffffffff            	// #-1
    b520:	ret

000000000000b524 <omp_get_partition_num_places@@OMP_4.5>:
    b524:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b528:	ldr	x0, [x0, #1576]
    b52c:	cbz	x0, b56c <omp_get_partition_num_places@@OMP_4.5+0x48>
    b530:	stp	x29, x30, [sp, #-32]!
    b534:	mov	x29, sp
    b538:	stp	x19, x20, [sp, #16]
    b53c:	mrs	x19, tpidr_el0
    b540:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b544:	ldr	x20, [x20, #4016]
    b548:	add	x0, x19, x20
    b54c:	ldr	w0, [x0, #92]
    b550:	cbnz	w0, b558 <omp_get_partition_num_places@@OMP_4.5+0x34>
    b554:	bl	17580 <omp_pause_resource_all_@@OMP_5.0+0x8f4>
    b558:	add	x19, x19, x20
    b55c:	ldr	w0, [x19, #56]
    b560:	ldp	x19, x20, [sp, #16]
    b564:	ldp	x29, x30, [sp], #32
    b568:	ret
    b56c:	mov	w0, #0x0                   	// #0
    b570:	ret

000000000000b574 <omp_get_partition_place_nums@@OMP_4.5>:
    b574:	stp	x29, x30, [sp, #-48]!
    b578:	mov	x29, sp
    b57c:	stp	x19, x20, [sp, #16]
    b580:	mov	x20, x0
    b584:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b588:	str	x21, [sp, #32]
    b58c:	ldr	x0, [x0, #1576]
    b590:	cbz	x0, b5c4 <omp_get_partition_place_nums@@OMP_4.5+0x50>
    b594:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b598:	ldr	x21, [x21, #4016]
    b59c:	mrs	x19, tpidr_el0
    b5a0:	add	x0, x19, x21
    b5a4:	ldr	w0, [x0, #92]
    b5a8:	cbnz	w0, b5b0 <omp_get_partition_place_nums@@OMP_4.5+0x3c>
    b5ac:	bl	17580 <omp_pause_resource_all_@@OMP_5.0+0x8f4>
    b5b0:	add	x19, x19, x21
    b5b4:	mov	x1, #0x0                   	// #0
    b5b8:	ldr	w0, [x19, #56]
    b5bc:	cmp	w0, w1
    b5c0:	b.hi	b5d4 <omp_get_partition_place_nums@@OMP_4.5+0x60>  // b.pmore
    b5c4:	ldp	x19, x20, [sp, #16]
    b5c8:	ldr	x21, [sp, #32]
    b5cc:	ldp	x29, x30, [sp], #48
    b5d0:	ret
    b5d4:	ldr	w0, [x19, #52]
    b5d8:	add	w0, w0, w1
    b5dc:	str	w0, [x20, x1, lsl #2]
    b5e0:	add	x1, x1, #0x1
    b5e4:	b	b5b8 <omp_get_partition_place_nums@@OMP_4.5+0x44>

000000000000b5e8 <omp_set_default_device@@OMP_4.0>:
    b5e8:	stp	x29, x30, [sp, #-32]!
    b5ec:	mrs	x1, tpidr_el0
    b5f0:	mov	x29, sp
    b5f4:	str	x19, [sp, #16]
    b5f8:	mov	w19, w0
    b5fc:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b600:	ldr	x0, [x0, #4016]
    b604:	add	x0, x1, x0
    b608:	ldr	x1, [x0, #80]
    b60c:	cbz	x1, b62c <omp_set_default_device@@OMP_4.0+0x44>
    b610:	add	x0, x1, #0x90
    b614:	cmp	w19, #0x0
    b618:	csel	w19, w19, wzr, ge  // ge = tcont
    b61c:	str	w19, [x0, #16]
    b620:	ldr	x19, [sp, #16]
    b624:	ldp	x29, x30, [sp], #32
    b628:	ret
    b62c:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
    b630:	b	b614 <omp_set_default_device@@OMP_4.0+0x2c>

000000000000b634 <omp_get_default_device@@OMP_4.0>:
    b634:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b638:	ldr	x0, [x0, #4016]
    b63c:	mrs	x1, tpidr_el0
    b640:	add	x0, x1, x0
    b644:	ldr	x1, [x0, #80]
    b648:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    b64c:	add	x0, x0, #0x2c0
    b650:	add	x2, x1, #0x90
    b654:	cmp	x1, #0x0
    b658:	csel	x0, x0, x2, eq  // eq = none
    b65c:	ldr	w0, [x0, #16]
    b660:	ret

000000000000b664 <omp_get_num_devices@@OMP_4.0>:
    b664:	b	18d30 <omp_get_place_proc_ids@@OMP_4.5+0x15b8>

000000000000b668 <omp_is_initial_device@@OMP_4.0>:
    b668:	mov	w0, #0x1                   	// #1
    b66c:	ret
    b670:	adrp	x10, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b674:	ldr	x10, [x10, #4016]
    b678:	mrs	x7, tpidr_el0
    b67c:	mov	x9, x0
    b680:	add	x0, x7, x10
    b684:	ldr	x0, [x0, #16]
    b688:	cbz	x0, b6d4 <omp_is_initial_device@@OMP_4.0+0x6c>
    b68c:	ldr	w5, [x0]
    b690:	add	x6, x7, x10
    b694:	ldr	x2, [x6, #72]
    b698:	cmn	x2, #0x1
    b69c:	b.eq	b7e8 <omp_is_initial_device@@OMP_4.0+0x180>  // b.none
    b6a0:	cmp	x5, #0x1
    b6a4:	ldr	x4, [x6, #24]
    b6a8:	b.ne	b6dc <omp_is_initial_device@@OMP_4.0+0x74>  // b.any
    b6ac:	ldr	x0, [x4, #72]
    b6b0:	str	x0, [x9]
    b6b4:	ldr	x0, [x4, #16]
    b6b8:	str	x0, [x1]
    b6bc:	mov	x1, #0xffffffffffffffff    	// #-1
    b6c0:	str	x1, [x6, #72]
    b6c4:	ldr	x1, [x4, #72]
    b6c8:	cmp	x1, x0
    b6cc:	cset	w0, eq  // eq = none
    b6d0:	ret
    b6d4:	mov	x5, #0x1                   	// #1
    b6d8:	b	b690 <omp_is_initial_device@@OMP_4.0+0x28>
    b6dc:	ldr	x8, [x4, #8]
    b6e0:	cbnz	x8, b778 <omp_is_initial_device@@OMP_4.0+0x110>
    b6e4:	cbnz	x2, b7f0 <omp_is_initial_device@@OMP_4.0+0x188>
    b6e8:	ldr	x8, [x4, #24]
    b6ec:	mov	x2, #0x1                   	// #1
    b6f0:	ldr	x0, [x4, #72]
    b6f4:	cmp	x8, #0x0
    b6f8:	ldr	x4, [x4, #16]
    b6fc:	cneg	x2, x2, gt
    b700:	add	x2, x8, x2
    b704:	ldr	w6, [x6, #40]
    b708:	sub	x4, x4, x0
    b70c:	add	x4, x4, x2
    b710:	sdiv	x4, x4, x8
    b714:	udiv	x3, x4, x5
    b718:	msub	x2, x3, x5, x4
    b71c:	cmp	x6, x2
    b720:	b.cs	b72c <omp_is_initial_device@@OMP_4.0+0xc4>  // b.hs, b.nlast
    b724:	add	x3, x3, #0x1
    b728:	mov	x2, #0x0                   	// #0
    b72c:	madd	x2, x3, x6, x2
    b730:	add	x3, x3, x2
    b734:	cmp	x2, x3
    b738:	b.cc	b74c <omp_is_initial_device@@OMP_4.0+0xe4>  // b.lo, b.ul, b.last
    b73c:	add	x7, x7, x10
    b740:	mov	x0, #0x1                   	// #1
    b744:	str	x0, [x7, #72]
    b748:	b	b6d0 <omp_is_initial_device@@OMP_4.0+0x68>
    b74c:	madd	x2, x2, x8, x0
    b750:	add	x7, x7, x10
    b754:	madd	x8, x3, x8, x0
    b758:	str	x2, [x9]
    b75c:	cmp	x4, x3
    b760:	str	x8, [x1]
    b764:	mov	x0, #0x1                   	// #1
    b768:	cneg	x0, x0, eq  // eq = none
    b76c:	str	x0, [x7, #72]
    b770:	mov	w0, #0x0                   	// #0
    b774:	b	b6d0 <omp_is_initial_device@@OMP_4.0+0x68>
    b778:	ldp	x3, x7, [x4, #16]
    b77c:	mov	x0, #0x1                   	// #1
    b780:	ldr	x10, [x4, #72]
    b784:	cmp	x7, #0x0
    b788:	sub	x3, x3, x10
    b78c:	cneg	x11, x0, gt
    b790:	add	x4, x7, x11
    b794:	add	x3, x3, x4
    b798:	ldr	w4, [x6, #40]
    b79c:	sdiv	x3, x3, x7
    b7a0:	madd	x2, x2, x5, x4
    b7a4:	mul	x2, x2, x8
    b7a8:	cmp	x3, x2
    b7ac:	b.ls	b6d0 <omp_is_initial_device@@OMP_4.0+0x68>  // b.plast
    b7b0:	add	x4, x8, x2
    b7b4:	madd	x2, x2, x7, x10
    b7b8:	cmp	x3, x4
    b7bc:	str	x2, [x9]
    b7c0:	csel	x0, x3, x4, ls  // ls = plast
    b7c4:	madd	x7, x0, x7, x10
    b7c8:	str	x7, [x1]
    b7cc:	b.hi	b7dc <omp_is_initial_device@@OMP_4.0+0x174>  // b.pmore
    b7d0:	mov	x0, #0xffffffffffffffff    	// #-1
    b7d4:	str	x0, [x6, #72]
    b7d8:	b	b770 <omp_is_initial_device@@OMP_4.0+0x108>
    b7dc:	ldr	x0, [x6, #72]
    b7e0:	add	x0, x0, #0x1
    b7e4:	b	b7d4 <omp_is_initial_device@@OMP_4.0+0x16c>
    b7e8:	mov	w0, w2
    b7ec:	b	b6d0 <omp_is_initial_device@@OMP_4.0+0x68>
    b7f0:	mov	w0, #0x1                   	// #1
    b7f4:	b	b6d0 <omp_is_initial_device@@OMP_4.0+0x68>
    b7f8:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b7fc:	ldr	x2, [x2, #4016]
    b800:	mrs	x3, tpidr_el0
    b804:	add	x2, x3, x2
    b808:	ldr	x4, [x2, #24]
    b80c:	ldr	x3, [x4, #16]
    b810:	ldr	x5, [x4, #72]
    b814:	cmp	x3, x5
    b818:	b.eq	b858 <omp_is_initial_device@@OMP_4.0+0x1f0>  // b.none
    b81c:	ldr	x6, [x4, #24]
    b820:	sub	x3, x3, x5
    b824:	ldr	x2, [x4, #8]
    b828:	tbz	x6, #63, b84c <omp_is_initial_device@@OMP_4.0+0x1e4>
    b82c:	cmp	x2, x3
    b830:	csel	x2, x2, x3, ge  // ge = tcont
    b834:	add	x2, x2, x5
    b838:	str	x2, [x4, #72]
    b83c:	str	x5, [x0]
    b840:	mov	w0, #0x1                   	// #1
    b844:	str	x2, [x1]
    b848:	ret
    b84c:	cmp	x2, x3
    b850:	csel	x2, x2, x3, le
    b854:	b	b834 <omp_is_initial_device@@OMP_4.0+0x1cc>
    b858:	mov	w0, #0x0                   	// #0
    b85c:	b	b848 <omp_is_initial_device@@OMP_4.0+0x1e0>
    b860:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b864:	ldr	x2, [x2, #4016]
    b868:	mrs	x3, tpidr_el0
    b86c:	add	x2, x3, x2
    b870:	ldr	x4, [x2, #24]
    b874:	add	x5, x4, #0x48
    b878:	ldp	x2, x3, [x4, #8]
    b87c:	ldr	x8, [x4, #24]
    b880:	ldr	w4, [x4, #4]
    b884:	cbz	w4, b8ec <omp_is_initial_device@@OMP_4.0+0x284>
    b888:	ldxr	x4, [x5]
    b88c:	add	x6, x4, x2
    b890:	stlxr	w7, x6, [x5]
    b894:	cbnz	w7, b888 <omp_is_initial_device@@OMP_4.0+0x220>
    b898:	dmb	ish
    b89c:	cmp	x8, #0x0
    b8a0:	b.le	b8d0 <omp_is_initial_device@@OMP_4.0+0x268>
    b8a4:	cmp	x3, x4
    b8a8:	b.gt	b8b4 <omp_is_initial_device@@OMP_4.0+0x24c>
    b8ac:	mov	w0, #0x0                   	// #0
    b8b0:	ret
    b8b4:	add	x2, x2, x4
    b8b8:	str	x4, [x0]
    b8bc:	cmp	x3, x2
    b8c0:	csel	x2, x3, x2, le
    b8c4:	str	x2, [x1]
    b8c8:	mov	w0, #0x1                   	// #1
    b8cc:	b	b8b0 <omp_is_initial_device@@OMP_4.0+0x248>
    b8d0:	cmp	x3, x4
    b8d4:	b.ge	b8ac <omp_is_initial_device@@OMP_4.0+0x244>  // b.tcont
    b8d8:	add	x2, x2, x4
    b8dc:	str	x4, [x0]
    b8e0:	cmp	x3, x2
    b8e4:	csel	x2, x3, x2, ge  // ge = tcont
    b8e8:	b	b8c4 <omp_is_initial_device@@OMP_4.0+0x25c>
    b8ec:	ldr	x4, [x5]
    b8f0:	sub	x6, x3, x4
    b8f4:	cmp	x4, x3
    b8f8:	b.eq	b8ac <omp_is_initial_device@@OMP_4.0+0x244>  // b.none
    b8fc:	tbz	x8, #63, b940 <omp_is_initial_device@@OMP_4.0+0x2d8>
    b900:	cmp	x2, x6
    b904:	csel	x2, x2, x6, ge  // ge = tcont
    b908:	add	x6, x4, x2
    b90c:	ldxr	x7, [x5]
    b910:	cmp	x7, x4
    b914:	b.ne	b920 <omp_is_initial_device@@OMP_4.0+0x2b8>  // b.any
    b918:	stlxr	w9, x6, [x5]
    b91c:	cbnz	w9, b90c <omp_is_initial_device@@OMP_4.0+0x2a4>
    b920:	dmb	ish
    b924:	cmp	x4, x7
    b928:	b.ne	b938 <omp_is_initial_device@@OMP_4.0+0x2d0>  // b.any
    b92c:	str	x4, [x0]
    b930:	str	x6, [x1]
    b934:	b	b8c8 <omp_is_initial_device@@OMP_4.0+0x260>
    b938:	mov	x4, x7
    b93c:	b	b8f0 <omp_is_initial_device@@OMP_4.0+0x288>
    b940:	cmp	x2, x6
    b944:	csel	x2, x2, x6, le
    b948:	b	b908 <omp_is_initial_device@@OMP_4.0+0x2a0>
    b94c:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b950:	ldr	x2, [x2, #4016]
    b954:	mrs	x3, tpidr_el0
    b958:	add	x2, x3, x2
    b95c:	ldr	x4, [x2, #24]
    b960:	ldr	x2, [x2, #16]
    b964:	cbz	x2, b9c0 <omp_is_initial_device@@OMP_4.0+0x358>
    b968:	ldr	w5, [x2]
    b96c:	ldr	x3, [x4, #16]
    b970:	ldr	x6, [x4, #72]
    b974:	cmp	x6, x3
    b978:	b.eq	b9c8 <omp_is_initial_device@@OMP_4.0+0x360>  // b.none
    b97c:	ldr	x8, [x4, #24]
    b980:	sub	x7, x3, x6
    b984:	sdiv	x7, x7, x8
    b988:	sub	x2, x7, #0x1
    b98c:	add	x2, x2, x5
    b990:	udiv	x2, x2, x5
    b994:	ldr	x5, [x4, #8]
    b998:	cmp	x5, x2
    b99c:	csel	x2, x5, x2, cs  // cs = hs, nlast
    b9a0:	cmp	x2, x7
    b9a4:	b.hi	b9ac <omp_is_initial_device@@OMP_4.0+0x344>  // b.pmore
    b9a8:	madd	x3, x8, x2, x6
    b9ac:	str	x3, [x4, #72]
    b9b0:	str	x6, [x0]
    b9b4:	mov	w0, #0x1                   	// #1
    b9b8:	str	x3, [x1]
    b9bc:	ret
    b9c0:	mov	x5, #0x1                   	// #1
    b9c4:	b	b96c <omp_is_initial_device@@OMP_4.0+0x304>
    b9c8:	mov	w0, #0x0                   	// #0
    b9cc:	b	b9bc <omp_is_initial_device@@OMP_4.0+0x354>
    b9d0:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    b9d4:	ldr	x2, [x2, #4016]
    b9d8:	mrs	x3, tpidr_el0
    b9dc:	add	x2, x3, x2
    b9e0:	ldr	x3, [x2, #24]
    b9e4:	ldr	x2, [x2, #16]
    b9e8:	cbz	x2, ba60 <omp_is_initial_device@@OMP_4.0+0x3f8>
    b9ec:	ldr	w8, [x2]
    b9f0:	add	x6, x3, #0x48
    b9f4:	ldr	x2, [x6]
    b9f8:	ldp	x10, x7, [x3, #8]
    b9fc:	sub	x11, x8, #0x1
    ba00:	ldr	x9, [x3, #24]
    ba04:	cmp	x2, x7
    ba08:	b.eq	ba70 <omp_is_initial_device@@OMP_4.0+0x408>  // b.none
    ba0c:	sub	x5, x7, x2
    ba10:	sdiv	x5, x5, x9
    ba14:	add	x3, x11, x5
    ba18:	udiv	x3, x3, x8
    ba1c:	cmp	x10, x3
    ba20:	csel	x3, x10, x3, cs  // cs = hs, nlast
    ba24:	cmp	x3, x5
    ba28:	madd	x4, x9, x3, x2
    ba2c:	csel	x3, x4, x7, ls  // ls = plast
    ba30:	ldxr	x4, [x6]
    ba34:	cmp	x4, x2
    ba38:	b.ne	ba44 <omp_is_initial_device@@OMP_4.0+0x3dc>  // b.any
    ba3c:	stlxr	w5, x3, [x6]
    ba40:	cbnz	w5, ba30 <omp_is_initial_device@@OMP_4.0+0x3c8>
    ba44:	dmb	ish
    ba48:	cmp	x2, x4
    ba4c:	b.ne	ba68 <omp_is_initial_device@@OMP_4.0+0x400>  // b.any
    ba50:	str	x2, [x0]
    ba54:	mov	w0, #0x1                   	// #1
    ba58:	str	x3, [x1]
    ba5c:	ret
    ba60:	mov	x8, #0x1                   	// #1
    ba64:	b	b9f0 <omp_is_initial_device@@OMP_4.0+0x388>
    ba68:	mov	x2, x4
    ba6c:	b	ba04 <omp_is_initial_device@@OMP_4.0+0x39c>
    ba70:	mov	w0, #0x0                   	// #0
    ba74:	b	ba5c <omp_is_initial_device@@OMP_4.0+0x3f4>
    ba78:	adrp	x6, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ba7c:	ldr	x6, [x6, #4016]
    ba80:	mrs	x5, tpidr_el0
    ba84:	mov	x9, x0
    ba88:	add	x0, x5, x6
    ba8c:	ldr	x0, [x0, #16]
    ba90:	cbz	x0, badc <omp_is_initial_device@@OMP_4.0+0x474>
    ba94:	ldr	w2, [x0]
    ba98:	add	x3, x5, x6
    ba9c:	ldr	x0, [x3, #72]
    baa0:	cmn	x0, #0x1
    baa4:	b.eq	bad8 <omp_is_initial_device@@OMP_4.0+0x470>  // b.none
    baa8:	cmp	x2, #0x1
    baac:	ldr	x4, [x3, #24]
    bab0:	b.ne	bae4 <omp_is_initial_device@@OMP_4.0+0x47c>  // b.any
    bab4:	ldr	x0, [x4, #72]
    bab8:	str	x0, [x9]
    babc:	ldr	x0, [x4, #16]
    bac0:	str	x0, [x1]
    bac4:	mov	x1, #0xffffffffffffffff    	// #-1
    bac8:	str	x1, [x3, #72]
    bacc:	ldr	x1, [x4, #72]
    bad0:	cmp	x1, x0
    bad4:	cset	w0, eq  // eq = none
    bad8:	ret
    badc:	mov	x2, #0x1                   	// #1
    bae0:	b	ba98 <omp_is_initial_device@@OMP_4.0+0x430>
    bae4:	ldr	x7, [x4, #8]
    bae8:	cbnz	x7, bb90 <omp_is_initial_device@@OMP_4.0+0x528>
    baec:	cbnz	x0, bc0c <omp_is_initial_device@@OMP_4.0+0x5a4>
    baf0:	ldp	x3, x8, [x4, #16]
    baf4:	ldr	x0, [x4, #72]
    baf8:	add	x7, x8, x3
    bafc:	ldr	w3, [x4, #4]
    bb00:	cbnz	w3, bb50 <omp_is_initial_device@@OMP_4.0+0x4e8>
    bb04:	mvn	x3, x0
    bb08:	add	x3, x3, x7
    bb0c:	udiv	x3, x3, x8
    bb10:	add	x4, x5, x6
    bb14:	ldr	w7, [x4, #40]
    bb18:	udiv	x4, x3, x2
    bb1c:	msub	x2, x4, x2, x3
    bb20:	cmp	x7, x2
    bb24:	b.cs	bb30 <omp_is_initial_device@@OMP_4.0+0x4c8>  // b.hs, b.nlast
    bb28:	add	x4, x4, #0x1
    bb2c:	mov	x2, #0x0                   	// #0
    bb30:	madd	x2, x4, x7, x2
    bb34:	add	x4, x4, x2
    bb38:	cmp	x2, x4
    bb3c:	b.cc	bb64 <omp_is_initial_device@@OMP_4.0+0x4fc>  // b.lo, b.ul, b.last
    bb40:	add	x5, x5, x6
    bb44:	mov	x0, #0x1                   	// #1
    bb48:	str	x0, [x5, #72]
    bb4c:	b	bad8 <omp_is_initial_device@@OMP_4.0+0x470>
    bb50:	sub	x3, x0, #0x1
    bb54:	neg	x4, x8
    bb58:	sub	x3, x3, x7
    bb5c:	udiv	x3, x3, x4
    bb60:	b	bb10 <omp_is_initial_device@@OMP_4.0+0x4a8>
    bb64:	madd	x2, x8, x2, x0
    bb68:	cmp	x3, x4
    bb6c:	madd	x8, x8, x4, x0
    bb70:	add	x5, x5, x6
    bb74:	mov	x0, #0x1                   	// #1
    bb78:	cneg	x0, x0, eq  // eq = none
    bb7c:	str	x2, [x9]
    bb80:	str	x8, [x1]
    bb84:	str	x0, [x5, #72]
    bb88:	mov	w0, #0x0                   	// #0
    bb8c:	b	bad8 <omp_is_initial_device@@OMP_4.0+0x470>
    bb90:	ldp	x3, x8, [x4, #16]
    bb94:	ldr	x10, [x4, #72]
    bb98:	add	x11, x8, x3
    bb9c:	ldr	w3, [x4, #4]
    bba0:	cbnz	w3, bbf0 <omp_is_initial_device@@OMP_4.0+0x588>
    bba4:	mvn	x3, x10
    bba8:	add	x3, x3, x11
    bbac:	udiv	x3, x3, x8
    bbb0:	add	x5, x5, x6
    bbb4:	ldr	w4, [x5, #40]
    bbb8:	madd	x2, x0, x2, x4
    bbbc:	mul	x2, x2, x7
    bbc0:	cmp	x3, x2
    bbc4:	b.ls	bc0c <omp_is_initial_device@@OMP_4.0+0x5a4>  // b.plast
    bbc8:	add	x4, x7, x2
    bbcc:	madd	x2, x2, x8, x10
    bbd0:	cmp	x3, x4
    bbd4:	str	x2, [x9]
    bbd8:	csel	x2, x3, x4, ls  // ls = plast
    bbdc:	madd	x8, x2, x8, x10
    bbe0:	str	x8, [x1]
    bbe4:	b.hi	bc04 <omp_is_initial_device@@OMP_4.0+0x59c>  // b.pmore
    bbe8:	mov	x0, #0xffffffffffffffff    	// #-1
    bbec:	b	bb84 <omp_is_initial_device@@OMP_4.0+0x51c>
    bbf0:	sub	x3, x10, #0x1
    bbf4:	neg	x4, x8
    bbf8:	sub	x3, x3, x11
    bbfc:	udiv	x3, x3, x4
    bc00:	b	bbb0 <omp_is_initial_device@@OMP_4.0+0x548>
    bc04:	add	x0, x0, #0x1
    bc08:	b	bb84 <omp_is_initial_device@@OMP_4.0+0x51c>
    bc0c:	mov	w0, #0x1                   	// #1
    bc10:	b	bad8 <omp_is_initial_device@@OMP_4.0+0x470>
    bc14:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    bc18:	ldr	x2, [x2, #4016]
    bc1c:	mrs	x3, tpidr_el0
    bc20:	add	x2, x3, x2
    bc24:	ldr	x4, [x2, #24]
    bc28:	ldr	x3, [x4, #16]
    bc2c:	ldr	x5, [x4, #72]
    bc30:	cmp	x3, x5
    bc34:	b.eq	bc74 <omp_is_initial_device@@OMP_4.0+0x60c>  // b.none
    bc38:	ldr	w6, [x4, #4]
    bc3c:	sub	x3, x3, x5
    bc40:	ldr	x2, [x4, #8]
    bc44:	tbz	w6, #1, bc68 <omp_is_initial_device@@OMP_4.0+0x600>
    bc48:	cmp	x2, x3
    bc4c:	csel	x2, x2, x3, cs  // cs = hs, nlast
    bc50:	add	x2, x2, x5
    bc54:	str	x2, [x4, #72]
    bc58:	str	x5, [x0]
    bc5c:	mov	w0, #0x1                   	// #1
    bc60:	str	x2, [x1]
    bc64:	ret
    bc68:	cmp	x2, x3
    bc6c:	csel	x2, x2, x3, ls  // ls = plast
    bc70:	b	bc50 <omp_is_initial_device@@OMP_4.0+0x5e8>
    bc74:	mov	w0, #0x0                   	// #0
    bc78:	b	bc64 <omp_is_initial_device@@OMP_4.0+0x5fc>
    bc7c:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    bc80:	ldr	x2, [x2, #4016]
    bc84:	mrs	x3, tpidr_el0
    bc88:	add	x2, x3, x2
    bc8c:	ldr	x6, [x2, #24]
    bc90:	add	x5, x6, #0x48
    bc94:	ldr	w4, [x6, #4]
    bc98:	ldp	x2, x3, [x6, #8]
    bc9c:	tbz	w4, #0, bd04 <omp_is_initial_device@@OMP_4.0+0x69c>
    bca0:	ldxr	x4, [x5]
    bca4:	add	x7, x4, x2
    bca8:	stlxr	w8, x7, [x5]
    bcac:	cbnz	w8, bca0 <omp_is_initial_device@@OMP_4.0+0x638>
    bcb0:	dmb	ish
    bcb4:	ldr	w5, [x6, #4]
    bcb8:	tbnz	w5, #1, bce8 <omp_is_initial_device@@OMP_4.0+0x680>
    bcbc:	cmp	x3, x4
    bcc0:	b.hi	bccc <omp_is_initial_device@@OMP_4.0+0x664>  // b.pmore
    bcc4:	mov	w0, #0x0                   	// #0
    bcc8:	ret
    bccc:	add	x2, x2, x4
    bcd0:	str	x4, [x0]
    bcd4:	cmp	x3, x2
    bcd8:	csel	x2, x3, x2, ls  // ls = plast
    bcdc:	str	x2, [x1]
    bce0:	mov	w0, #0x1                   	// #1
    bce4:	b	bcc8 <omp_is_initial_device@@OMP_4.0+0x660>
    bce8:	cmp	x3, x4
    bcec:	b.cs	bcc4 <omp_is_initial_device@@OMP_4.0+0x65c>  // b.hs, b.nlast
    bcf0:	add	x2, x2, x4
    bcf4:	str	x4, [x0]
    bcf8:	cmp	x3, x2
    bcfc:	csel	x2, x3, x2, cs  // cs = hs, nlast
    bd00:	b	bcdc <omp_is_initial_device@@OMP_4.0+0x674>
    bd04:	ldr	x4, [x5]
    bd08:	sub	x7, x3, x4
    bd0c:	cmp	x4, x3
    bd10:	b.eq	bcc4 <omp_is_initial_device@@OMP_4.0+0x65c>  // b.none
    bd14:	ldr	w8, [x6, #4]
    bd18:	tbz	w8, #1, bd5c <omp_is_initial_device@@OMP_4.0+0x6f4>
    bd1c:	cmp	x2, x7
    bd20:	csel	x2, x2, x7, cs  // cs = hs, nlast
    bd24:	add	x7, x4, x2
    bd28:	ldxr	x8, [x5]
    bd2c:	cmp	x8, x4
    bd30:	b.ne	bd3c <omp_is_initial_device@@OMP_4.0+0x6d4>  // b.any
    bd34:	stlxr	w9, x7, [x5]
    bd38:	cbnz	w9, bd28 <omp_is_initial_device@@OMP_4.0+0x6c0>
    bd3c:	dmb	ish
    bd40:	cmp	x4, x8
    bd44:	b.ne	bd54 <omp_is_initial_device@@OMP_4.0+0x6ec>  // b.any
    bd48:	str	x4, [x0]
    bd4c:	str	x7, [x1]
    bd50:	b	bce0 <omp_is_initial_device@@OMP_4.0+0x678>
    bd54:	mov	x4, x8
    bd58:	b	bd08 <omp_is_initial_device@@OMP_4.0+0x6a0>
    bd5c:	cmp	x2, x7
    bd60:	csel	x2, x2, x7, ls  // ls = plast
    bd64:	b	bd24 <omp_is_initial_device@@OMP_4.0+0x6bc>
    bd68:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    bd6c:	ldr	x2, [x2, #4016]
    bd70:	mrs	x3, tpidr_el0
    bd74:	add	x2, x3, x2
    bd78:	ldr	x4, [x2, #24]
    bd7c:	ldr	x2, [x2, #16]
    bd80:	cbz	x2, bde4 <omp_is_initial_device@@OMP_4.0+0x77c>
    bd84:	ldr	w7, [x2]
    bd88:	ldr	x3, [x4, #16]
    bd8c:	ldr	x6, [x4, #72]
    bd90:	cmp	x6, x3
    bd94:	b.eq	bdfc <omp_is_initial_device@@OMP_4.0+0x794>  // b.none
    bd98:	ldr	w2, [x4, #4]
    bd9c:	ldr	x8, [x4, #24]
    bda0:	cbnz	w2, bdec <omp_is_initial_device@@OMP_4.0+0x784>
    bda4:	sub	x2, x3, x6
    bda8:	udiv	x2, x2, x8
    bdac:	sub	x5, x7, #0x1
    bdb0:	add	x5, x5, x2
    bdb4:	udiv	x5, x5, x7
    bdb8:	ldr	x7, [x4, #8]
    bdbc:	cmp	x7, x5
    bdc0:	csel	x5, x7, x5, cs  // cs = hs, nlast
    bdc4:	cmp	x2, x5
    bdc8:	b.cc	bdd0 <omp_is_initial_device@@OMP_4.0+0x768>  // b.lo, b.ul, b.last
    bdcc:	madd	x3, x5, x8, x6
    bdd0:	str	x3, [x4, #72]
    bdd4:	str	x6, [x0]
    bdd8:	mov	w0, #0x1                   	// #1
    bddc:	str	x3, [x1]
    bde0:	ret
    bde4:	mov	x7, #0x1                   	// #1
    bde8:	b	bd88 <omp_is_initial_device@@OMP_4.0+0x720>
    bdec:	sub	x2, x6, x3
    bdf0:	neg	x5, x8
    bdf4:	udiv	x2, x2, x5
    bdf8:	b	bdac <omp_is_initial_device@@OMP_4.0+0x744>
    bdfc:	mov	w0, #0x0                   	// #0
    be00:	b	bde0 <omp_is_initial_device@@OMP_4.0+0x778>
    be04:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    be08:	ldr	x2, [x2, #4016]
    be0c:	mrs	x3, tpidr_el0
    be10:	add	x2, x3, x2
    be14:	ldr	x5, [x2, #24]
    be18:	ldr	x2, [x2, #16]
    be1c:	cbz	x2, bea0 <omp_is_initial_device@@OMP_4.0+0x838>
    be20:	ldr	w10, [x2]
    be24:	add	x8, x5, #0x48
    be28:	ldr	x2, [x8]
    be2c:	ldp	x11, x7, [x5, #8]
    be30:	sub	x12, x10, #0x1
    be34:	ldr	x9, [x5, #24]
    be38:	neg	x13, x9
    be3c:	cmp	x2, x7
    be40:	b.eq	bebc <omp_is_initial_device@@OMP_4.0+0x854>  // b.none
    be44:	ldr	w3, [x5, #4]
    be48:	cbnz	w3, beb0 <omp_is_initial_device@@OMP_4.0+0x848>
    be4c:	sub	x4, x7, x2
    be50:	udiv	x4, x4, x9
    be54:	add	x3, x12, x4
    be58:	udiv	x3, x3, x10
    be5c:	cmp	x11, x3
    be60:	csel	x3, x11, x3, cs  // cs = hs, nlast
    be64:	cmp	x4, x3
    be68:	madd	x6, x3, x9, x2
    be6c:	csel	x3, x6, x7, cs  // cs = hs, nlast
    be70:	ldxr	x4, [x8]
    be74:	cmp	x4, x2
    be78:	b.ne	be84 <omp_is_initial_device@@OMP_4.0+0x81c>  // b.any
    be7c:	stlxr	w6, x3, [x8]
    be80:	cbnz	w6, be70 <omp_is_initial_device@@OMP_4.0+0x808>
    be84:	dmb	ish
    be88:	cmp	x2, x4
    be8c:	b.ne	bea8 <omp_is_initial_device@@OMP_4.0+0x840>  // b.any
    be90:	str	x2, [x0]
    be94:	mov	w0, #0x1                   	// #1
    be98:	str	x3, [x1]
    be9c:	ret
    bea0:	mov	x10, #0x1                   	// #1
    bea4:	b	be24 <omp_is_initial_device@@OMP_4.0+0x7bc>
    bea8:	mov	x2, x4
    beac:	b	be3c <omp_is_initial_device@@OMP_4.0+0x7d4>
    beb0:	sub	x4, x2, x7
    beb4:	udiv	x4, x4, x13
    beb8:	b	be54 <omp_is_initial_device@@OMP_4.0+0x7ec>
    bebc:	mov	w0, #0x0                   	// #0
    bec0:	b	be9c <omp_is_initial_device@@OMP_4.0+0x834>
    bec4:	str	w4, [x0]
    bec8:	cmp	x3, #0x0
    becc:	str	x5, [x0, #8]
    bed0:	ccmp	x1, x2, #0x4, gt
    bed4:	b.gt	bf38 <omp_is_initial_device@@OMP_4.0+0x8d0>
    bed8:	cmp	x3, #0x0
    bedc:	ccmp	x1, x2, #0x0, lt  // lt = tstop
    bee0:	csel	x2, x2, x1, ge  // ge = tcont
    bee4:	stp	x2, x3, [x0, #16]
    bee8:	cmp	w4, #0x2
    beec:	str	x1, [x0, #72]
    bef0:	b.ne	bf34 <omp_is_initial_device@@OMP_4.0+0x8cc>  // b.any
    bef4:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    bef8:	ldr	x1, [x1, #4016]
    befc:	mrs	x4, tpidr_el0
    bf00:	mul	x5, x5, x3
    bf04:	add	x1, x4, x1
    bf08:	ldr	x1, [x1, #16]
    bf0c:	str	x5, [x0, #8]
    bf10:	cbz	x1, bf40 <omp_is_initial_device@@OMP_4.0+0x8d8>
    bf14:	ldr	w1, [x1]
    bf18:	cmp	x3, #0x0
    bf1c:	mov	x3, #0x7fffffff            	// #2147483647
    bf20:	b.le	bf64 <omp_is_initial_device@@OMP_4.0+0x8fc>
    bf24:	orr	x4, x5, x1
    bf28:	cmp	x4, x3
    bf2c:	b.ls	bf48 <omp_is_initial_device@@OMP_4.0+0x8e0>  // b.plast
    bf30:	str	wzr, [x0, #4]
    bf34:	ret
    bf38:	mov	x2, x1
    bf3c:	b	bee4 <omp_is_initial_device@@OMP_4.0+0x87c>
    bf40:	mov	x1, #0x1                   	// #1
    bf44:	b	bf18 <omp_is_initial_device@@OMP_4.0+0x8b0>
    bf48:	madd	x5, x1, x5, x5
    bf4c:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    bf50:	sub	x5, x1, x5
    bf54:	cmp	x5, x2
    bf58:	cset	w1, gt
    bf5c:	str	w1, [x0, #4]
    bf60:	b	bf34 <omp_is_initial_device@@OMP_4.0+0x8cc>
    bf64:	neg	x5, x5
    bf68:	orr	x4, x5, x1
    bf6c:	cmp	x4, x3
    bf70:	b.hi	bf30 <omp_is_initial_device@@OMP_4.0+0x8c8>  // b.pmore
    bf74:	madd	x5, x1, x5, x5
    bf78:	mov	x1, #0x2                   	// #2
    bf7c:	movk	x1, #0x8000, lsl #48
    bf80:	add	x5, x5, x1
    bf84:	cmp	x5, x2
    bf88:	cset	w1, le
    bf8c:	b	bf5c <omp_is_initial_device@@OMP_4.0+0x8f4>
    bf90:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    bf94:	ldr	x1, [x1, #4016]
    bf98:	mrs	x0, tpidr_el0
    bf9c:	add	x1, x0, x1
    bfa0:	ldr	x0, [x1, #32]
    bfa4:	cbz	x0, bfc8 <omp_is_initial_device@@OMP_4.0+0x960>
    bfa8:	ldr	x2, [x1, #24]
    bfac:	add	x0, x0, #0x50
    bfb0:	ldxr	x1, [x0]
    bfb4:	stlxr	w3, x2, [x0]
    bfb8:	cbnz	w3, bfb0 <omp_is_initial_device@@OMP_4.0+0x948>
    bfbc:	cmp	x1, #0x1
    bfc0:	b.eq	bfc8 <omp_is_initial_device@@OMP_4.0+0x960>  // b.none
    bfc4:	b	164c4 <omp_get_num_procs@@OMP_1.0+0x850>
    bfc8:	ret
    bfcc:	mov	x2, x0
    bfd0:	mov	w3, #0x1                   	// #1
    bfd4:	ldaxr	w1, [x2]
    bfd8:	cbnz	w1, bfe4 <omp_is_initial_device@@OMP_4.0+0x97c>
    bfdc:	stxr	w4, w3, [x2]
    bfe0:	cbnz	w4, bfd4 <omp_is_initial_device@@OMP_4.0+0x96c>
    bfe4:	cmp	w1, #0x0
    bfe8:	b.eq	bff0 <omp_is_initial_device@@OMP_4.0+0x988>  // b.none
    bfec:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
    bff0:	ret
    bff4:	mov	x1, x0
    bff8:	ldxr	w2, [x1]
    bffc:	stlxr	w3, wzr, [x1]
    c000:	cbnz	w3, bff8 <omp_is_initial_device@@OMP_4.0+0x990>
    c004:	tbz	w2, #31, c00c <omp_is_initial_device@@OMP_4.0+0x9a4>
    c008:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
    c00c:	ret
    c010:	stp	x29, x30, [sp, #-96]!
    c014:	mov	x29, sp
    c018:	stp	x19, x20, [sp, #16]
    c01c:	mov	x20, x1
    c020:	mov	w1, #0x0                   	// #0
    c024:	mov	x19, x0
    c028:	mov	w0, w2
    c02c:	stp	x21, x22, [sp, #32]
    c030:	mov	x22, x3
    c034:	stp	x23, x24, [sp, #48]
    c038:	mov	x23, x4
    c03c:	mov	x24, x5
    c040:	stp	x25, x26, [sp, #64]
    c044:	mov	w25, w6
    c048:	mov	x26, x7
    c04c:	str	x27, [sp, #80]
    c050:	ldr	w27, [sp, #96]
    c054:	bl	f084 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>
    c058:	mov	w21, w0
    c05c:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
    c060:	mov	x8, x0
    c064:	mov	x5, x26
    c068:	mov	w4, w25
    c06c:	mov	x3, x24
    c070:	mov	x2, x23
    c074:	mov	x1, x22
    c078:	add	x0, x0, #0x100
    c07c:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c080:	mov	w3, w27
    c084:	mov	w2, w21
    c088:	mov	x1, x20
    c08c:	mov	x0, x19
    c090:	ldp	x19, x20, [sp, #16]
    c094:	mov	x4, x8
    c098:	ldp	x21, x22, [sp, #32]
    c09c:	mov	x5, #0x0                   	// #0
    c0a0:	ldp	x23, x24, [sp, #48]
    c0a4:	ldp	x25, x26, [sp, #64]
    c0a8:	ldr	x27, [sp, #80]
    c0ac:	ldp	x29, x30, [sp], #96
    c0b0:	b	13e7c <omp_in_final@@OMP_3.1+0x304>
    c0b4:	mov	x2, x0
    c0b8:	and	x0, x0, #0x7fffffff
    c0bc:	tst	x2, #0x7ffffffc
    c0c0:	b.ne	c110 <omp_is_initial_device@@OMP_4.0+0xaa8>  // b.any
    c0c4:	cbnz	x0, c138 <omp_is_initial_device@@OMP_4.0+0xad0>
    c0c8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c0cc:	ldr	x0, [x0, #4016]
    c0d0:	mrs	x2, tpidr_el0
    c0d4:	add	x0, x2, x0
    c0d8:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    c0dc:	add	x2, x2, #0x2c0
    c0e0:	ldr	x0, [x0, #80]
    c0e4:	add	x3, x0, #0x90
    c0e8:	cmp	x0, #0x0
    c0ec:	csel	x2, x2, x3, eq  // eq = none
    c0f0:	ldr	w3, [x2, #8]
    c0f4:	and	w0, w3, #0x7fffffff
    c0f8:	tst	w3, #0x7ffffffc
    c0fc:	b.ne	c124 <omp_is_initial_device@@OMP_4.0+0xabc>  // b.any
    c100:	cbz	w0, c118 <omp_is_initial_device@@OMP_4.0+0xab0>
    c104:	ldrsw	x2, [x2, #12]
    c108:	str	x2, [x1]
    c10c:	ret
    c110:	cmp	x0, #0x4
    c114:	b.eq	c0c8 <omp_is_initial_device@@OMP_4.0+0xa60>  // b.none
    c118:	stp	x29, x30, [sp, #-16]!
    c11c:	mov	x29, sp
    c120:	bl	88b0 <abort@plt>
    c124:	cmp	w0, #0x4
    c128:	b.ne	c118 <omp_is_initial_device@@OMP_4.0+0xab0>  // b.any
    c12c:	mov	x0, #0x1                   	// #1
    c130:	str	xzr, [x1]
    c134:	ret
    c138:	ret

000000000000c13c <GOMP_loop_static_start@@GOMP_1.0>:
    c13c:	stp	x29, x30, [sp, #-80]!
    c140:	mrs	x6, tpidr_el0
    c144:	mov	x29, sp
    c148:	stp	x19, x20, [sp, #16]
    c14c:	mov	x20, x4
    c150:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c154:	ldr	x19, [x19, #4016]
    c158:	stp	x21, x22, [sp, #32]
    c15c:	mov	x22, x0
    c160:	add	x19, x6, x19
    c164:	stp	x23, x24, [sp, #48]
    c168:	mov	x21, x5
    c16c:	mov	x23, x1
    c170:	str	x25, [sp, #64]
    c174:	mov	x24, x2
    c178:	mov	x25, x3
    c17c:	mov	x0, #0x0                   	// #0
    c180:	str	xzr, [x19, #72]
    c184:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c188:	tst	w0, #0xff
    c18c:	b.eq	c1b0 <GOMP_loop_static_start@@GOMP_1.0+0x74>  // b.none
    c190:	ldr	x0, [x19, #24]
    c194:	mov	x5, x25
    c198:	mov	x3, x24
    c19c:	mov	x2, x23
    c1a0:	mov	x1, x22
    c1a4:	mov	w4, #0x1                   	// #1
    c1a8:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c1ac:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c1b0:	mov	x1, x21
    c1b4:	mov	x0, x20
    c1b8:	bl	b670 <omp_is_initial_device@@OMP_4.0+0x8>
    c1bc:	cmp	w0, #0x0
    c1c0:	cset	w0, eq  // eq = none
    c1c4:	ldp	x19, x20, [sp, #16]
    c1c8:	ldp	x21, x22, [sp, #32]
    c1cc:	ldp	x23, x24, [sp, #48]
    c1d0:	ldr	x25, [sp, #64]
    c1d4:	ldp	x29, x30, [sp], #80
    c1d8:	ret

000000000000c1dc <GOMP_loop_dynamic_start@@GOMP_1.0>:
    c1dc:	stp	x29, x30, [sp, #-64]!
    c1e0:	mov	x29, sp
    c1e4:	stp	x19, x20, [sp, #16]
    c1e8:	mov	x19, x4
    c1ec:	mov	x20, x5
    c1f0:	stp	x21, x22, [sp, #32]
    c1f4:	mov	x21, x0
    c1f8:	mov	x22, x1
    c1fc:	mov	x0, #0x0                   	// #0
    c200:	stp	x23, x24, [sp, #48]
    c204:	mov	x23, x2
    c208:	mov	x24, x3
    c20c:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c210:	tst	w0, #0xff
    c214:	b.eq	c248 <GOMP_loop_dynamic_start@@GOMP_1.0+0x6c>  // b.none
    c218:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c21c:	ldr	x0, [x0, #4016]
    c220:	mrs	x6, tpidr_el0
    c224:	mov	x5, x24
    c228:	mov	x3, x23
    c22c:	add	x0, x6, x0
    c230:	mov	x2, x22
    c234:	mov	x1, x21
    c238:	mov	w4, #0x2                   	// #2
    c23c:	ldr	x0, [x0, #24]
    c240:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c244:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c248:	mov	x1, x20
    c24c:	mov	x0, x19
    c250:	ldp	x19, x20, [sp, #16]
    c254:	ldp	x21, x22, [sp, #32]
    c258:	ldp	x23, x24, [sp, #48]
    c25c:	ldp	x29, x30, [sp], #64
    c260:	b	b860 <omp_is_initial_device@@OMP_4.0+0x1f8>

000000000000c264 <GOMP_loop_guided_start@@GOMP_1.0>:
    c264:	stp	x29, x30, [sp, #-64]!
    c268:	mov	x29, sp
    c26c:	stp	x19, x20, [sp, #16]
    c270:	mov	x19, x4
    c274:	mov	x20, x5
    c278:	stp	x21, x22, [sp, #32]
    c27c:	mov	x21, x0
    c280:	mov	x22, x1
    c284:	mov	x0, #0x0                   	// #0
    c288:	stp	x23, x24, [sp, #48]
    c28c:	mov	x23, x2
    c290:	mov	x24, x3
    c294:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c298:	tst	w0, #0xff
    c29c:	b.eq	c2d0 <GOMP_loop_guided_start@@GOMP_1.0+0x6c>  // b.none
    c2a0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c2a4:	ldr	x0, [x0, #4016]
    c2a8:	mrs	x6, tpidr_el0
    c2ac:	mov	x5, x24
    c2b0:	mov	x3, x23
    c2b4:	add	x0, x6, x0
    c2b8:	mov	x2, x22
    c2bc:	mov	x1, x21
    c2c0:	mov	w4, #0x3                   	// #3
    c2c4:	ldr	x0, [x0, #24]
    c2c8:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c2cc:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c2d0:	mov	x1, x20
    c2d4:	mov	x0, x19
    c2d8:	ldp	x19, x20, [sp, #16]
    c2dc:	ldp	x21, x22, [sp, #32]
    c2e0:	ldp	x23, x24, [sp, #48]
    c2e4:	ldp	x29, x30, [sp], #64
    c2e8:	b	b9d0 <omp_is_initial_device@@OMP_4.0+0x368>

000000000000c2ec <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    c2ec:	mov	x5, x4
    c2f0:	adrp	x4, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c2f4:	ldr	x4, [x4, #4016]
    c2f8:	mrs	x6, tpidr_el0
    c2fc:	add	x4, x6, x4
    c300:	adrp	x6, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    c304:	add	x6, x6, #0x2c0
    c308:	ldr	x4, [x4, #80]
    c30c:	cmp	x4, #0x0
    c310:	add	x7, x4, #0x90
    c314:	csel	x6, x6, x7, eq  // eq = none
    c318:	ldr	w4, [x6, #8]
    c31c:	and	w4, w4, #0x7fffffff
    c320:	sub	w4, w4, #0x1
    c324:	cmp	w4, #0x3
    c328:	b.hi	c374 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x88>  // b.pmore
    c32c:	adrp	x7, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    c330:	add	x7, x7, #0x54c
    c334:	ldrb	w4, [x7, w4, uxtw]
    c338:	adr	x7, c344 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x58>
    c33c:	add	x4, x7, w4, sxtb #2
    c340:	br	x4
    c344:	mov	x4, x3
    c348:	ldrsw	x3, [x6, #12]
    c34c:	b	c13c <GOMP_loop_static_start@@GOMP_1.0>
    c350:	mov	x4, x3
    c354:	ldrsw	x3, [x6, #12]
    c358:	b	c1dc <GOMP_loop_dynamic_start@@GOMP_1.0>
    c35c:	mov	x4, x3
    c360:	ldrsw	x3, [x6, #12]
    c364:	b	c264 <GOMP_loop_guided_start@@GOMP_1.0>
    c368:	mov	x4, x3
    c36c:	mov	x3, #0x0                   	// #0
    c370:	b	c34c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x60>
    c374:	stp	x29, x30, [sp, #-16]!
    c378:	mov	x29, sp
    c37c:	bl	88b0 <abort@plt>

000000000000c380 <GOMP_loop_ordered_static_start@@GOMP_1.0>:
    c380:	stp	x29, x30, [sp, #-80]!
    c384:	mrs	x6, tpidr_el0
    c388:	mov	x29, sp
    c38c:	stp	x19, x20, [sp, #16]
    c390:	mov	x20, x4
    c394:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c398:	ldr	x19, [x19, #4016]
    c39c:	stp	x21, x22, [sp, #32]
    c3a0:	mov	x22, x0
    c3a4:	add	x19, x6, x19
    c3a8:	stp	x23, x24, [sp, #48]
    c3ac:	mov	x21, x5
    c3b0:	mov	x23, x1
    c3b4:	str	x25, [sp, #64]
    c3b8:	mov	x24, x2
    c3bc:	mov	x25, x3
    c3c0:	mov	x0, #0x1                   	// #1
    c3c4:	str	xzr, [x19, #72]
    c3c8:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c3cc:	tst	w0, #0xff
    c3d0:	b.eq	c3f8 <GOMP_loop_ordered_static_start@@GOMP_1.0+0x78>  // b.none
    c3d4:	ldr	x0, [x19, #24]
    c3d8:	mov	x5, x25
    c3dc:	mov	x3, x24
    c3e0:	mov	x2, x23
    c3e4:	mov	x1, x22
    c3e8:	mov	w4, #0x1                   	// #1
    c3ec:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c3f0:	bl	e420 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x200>
    c3f4:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c3f8:	mov	x1, x21
    c3fc:	mov	x0, x20
    c400:	bl	b670 <omp_is_initial_device@@OMP_4.0+0x8>
    c404:	cmp	w0, #0x0
    c408:	cset	w0, eq  // eq = none
    c40c:	ldp	x19, x20, [sp, #16]
    c410:	ldp	x21, x22, [sp, #32]
    c414:	ldp	x23, x24, [sp, #48]
    c418:	ldr	x25, [sp, #64]
    c41c:	ldp	x29, x30, [sp], #80
    c420:	ret

000000000000c424 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>:
    c424:	stp	x29, x30, [sp, #-80]!
    c428:	mov	x29, sp
    c42c:	stp	x19, x20, [sp, #16]
    c430:	mov	x20, x4
    c434:	mrs	x19, tpidr_el0
    c438:	stp	x21, x22, [sp, #32]
    c43c:	mov	x22, x5
    c440:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c444:	ldr	x21, [x21, #4016]
    c448:	stp	x23, x24, [sp, #48]
    c44c:	mov	x23, x0
    c450:	mov	x24, x1
    c454:	mov	x0, #0x1                   	// #1
    c458:	stp	x25, x26, [sp, #64]
    c45c:	mov	x25, x2
    c460:	mov	x26, x3
    c464:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c468:	tst	w0, #0xff
    c46c:	b.eq	c4e8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0xc4>  // b.none
    c470:	add	x6, x19, x21
    c474:	mov	x5, x26
    c478:	mov	x3, x25
    c47c:	mov	x2, x24
    c480:	mov	x1, x23
    c484:	mov	w4, #0x2                   	// #2
    c488:	ldr	x0, [x6, #24]
    c48c:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c490:	ldr	x0, [x6, #24]
    c494:	add	x0, x0, #0x40
    c498:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    c49c:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c4a0:	mov	x0, x20
    c4a4:	mov	x1, x22
    c4a8:	bl	b7f8 <omp_is_initial_device@@OMP_4.0+0x190>
    c4ac:	mov	w20, w0
    c4b0:	tst	w0, #0xff
    c4b4:	b.eq	c4bc <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x98>  // b.none
    c4b8:	bl	e2a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x88>
    c4bc:	add	x19, x19, x21
    c4c0:	ldr	x0, [x19, #24]
    c4c4:	add	x0, x0, #0x40
    c4c8:	bl	bff4 <omp_is_initial_device@@OMP_4.0+0x98c>
    c4cc:	mov	w0, w20
    c4d0:	ldp	x19, x20, [sp, #16]
    c4d4:	ldp	x21, x22, [sp, #32]
    c4d8:	ldp	x23, x24, [sp, #48]
    c4dc:	ldp	x25, x26, [sp, #64]
    c4e0:	ldp	x29, x30, [sp], #80
    c4e4:	ret
    c4e8:	add	x0, x19, x21
    c4ec:	ldr	x0, [x0, #24]
    c4f0:	add	x0, x0, #0x40
    c4f4:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    c4f8:	b	c4a0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x7c>

000000000000c4fc <GOMP_loop_ordered_guided_start@@GOMP_1.0>:
    c4fc:	stp	x29, x30, [sp, #-80]!
    c500:	mov	x29, sp
    c504:	stp	x19, x20, [sp, #16]
    c508:	mov	x20, x4
    c50c:	mrs	x19, tpidr_el0
    c510:	stp	x21, x22, [sp, #32]
    c514:	mov	x22, x5
    c518:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c51c:	ldr	x21, [x21, #4016]
    c520:	stp	x23, x24, [sp, #48]
    c524:	mov	x23, x0
    c528:	mov	x24, x1
    c52c:	mov	x0, #0x1                   	// #1
    c530:	stp	x25, x26, [sp, #64]
    c534:	mov	x25, x2
    c538:	mov	x26, x3
    c53c:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c540:	tst	w0, #0xff
    c544:	b.eq	c5c0 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xc4>  // b.none
    c548:	add	x6, x19, x21
    c54c:	mov	x5, x26
    c550:	mov	x3, x25
    c554:	mov	x2, x24
    c558:	mov	x1, x23
    c55c:	mov	w4, #0x3                   	// #3
    c560:	ldr	x0, [x6, #24]
    c564:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c568:	ldr	x0, [x6, #24]
    c56c:	add	x0, x0, #0x40
    c570:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    c574:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c578:	mov	x0, x20
    c57c:	mov	x1, x22
    c580:	bl	b94c <omp_is_initial_device@@OMP_4.0+0x2e4>
    c584:	mov	w20, w0
    c588:	tst	w0, #0xff
    c58c:	b.eq	c594 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x98>  // b.none
    c590:	bl	e2a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x88>
    c594:	add	x19, x19, x21
    c598:	ldr	x0, [x19, #24]
    c59c:	add	x0, x0, #0x40
    c5a0:	bl	bff4 <omp_is_initial_device@@OMP_4.0+0x98c>
    c5a4:	mov	w0, w20
    c5a8:	ldp	x19, x20, [sp, #16]
    c5ac:	ldp	x21, x22, [sp, #32]
    c5b0:	ldp	x23, x24, [sp, #48]
    c5b4:	ldp	x25, x26, [sp, #64]
    c5b8:	ldp	x29, x30, [sp], #80
    c5bc:	ret
    c5c0:	add	x0, x19, x21
    c5c4:	ldr	x0, [x0, #24]
    c5c8:	add	x0, x0, #0x40
    c5cc:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    c5d0:	b	c578 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x7c>

000000000000c5d4 <GOMP_loop_ordered_runtime_start@@GOMP_1.0>:
    c5d4:	mov	x5, x4
    c5d8:	adrp	x4, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c5dc:	ldr	x4, [x4, #4016]
    c5e0:	mrs	x6, tpidr_el0
    c5e4:	add	x4, x6, x4
    c5e8:	adrp	x6, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    c5ec:	add	x6, x6, #0x2c0
    c5f0:	ldr	x4, [x4, #80]
    c5f4:	cmp	x4, #0x0
    c5f8:	add	x7, x4, #0x90
    c5fc:	csel	x6, x6, x7, eq  // eq = none
    c600:	ldr	w4, [x6, #8]
    c604:	and	w4, w4, #0x7fffffff
    c608:	sub	w4, w4, #0x1
    c60c:	cmp	w4, #0x3
    c610:	b.hi	c65c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x88>  // b.pmore
    c614:	adrp	x7, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    c618:	add	x7, x7, #0x550
    c61c:	ldrb	w4, [x7, w4, uxtw]
    c620:	adr	x7, c62c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x58>
    c624:	add	x4, x7, w4, sxtb #2
    c628:	br	x4
    c62c:	mov	x4, x3
    c630:	ldrsw	x3, [x6, #12]
    c634:	b	c380 <GOMP_loop_ordered_static_start@@GOMP_1.0>
    c638:	mov	x4, x3
    c63c:	ldrsw	x3, [x6, #12]
    c640:	b	c424 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>
    c644:	mov	x4, x3
    c648:	ldrsw	x3, [x6, #12]
    c64c:	b	c4fc <GOMP_loop_ordered_guided_start@@GOMP_1.0>
    c650:	mov	x4, x3
    c654:	mov	x3, #0x0                   	// #0
    c658:	b	c634 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x60>
    c65c:	stp	x29, x30, [sp, #-16]!
    c660:	mov	x29, sp
    c664:	bl	88b0 <abort@plt>

000000000000c668 <GOMP_loop_ordered_start@@GOMP_5.0>:
    c668:	stp	x29, x30, [sp, #-112]!
    c66c:	mov	x29, sp
    c670:	stp	x19, x20, [sp, #16]
    c674:	mov	x19, x3
    c678:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c67c:	ldr	x20, [x20, #4016]
    c680:	stp	x21, x22, [sp, #32]
    c684:	mrs	x22, tpidr_el0
    c688:	mov	x21, x7
    c68c:	stp	x0, x4, [sp, #96]
    c690:	add	x0, x22, x20
    c694:	stp	x23, x24, [sp, #48]
    c698:	mov	x23, x5
    c69c:	mov	x24, x6
    c6a0:	stp	x25, x26, [sp, #64]
    c6a4:	stp	x27, x28, [sp, #80]
    c6a8:	mov	x27, x1
    c6ac:	mov	x28, x2
    c6b0:	str	xzr, [x0, #72]
    c6b4:	ldr	x25, [sp, #112]
    c6b8:	cbz	x7, c6c0 <GOMP_loop_ordered_start@@GOMP_5.0+0x58>
    c6bc:	bl	13aac <GOMP_task_reduction_remap@@GOMP_5.0+0x3f8>
    c6c0:	cbz	x25, c794 <GOMP_loop_ordered_start@@GOMP_5.0+0x12c>
    c6c4:	ldr	x0, [x25]
    c6c8:	add	x0, x0, #0x1
    c6cc:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c6d0:	tst	w0, #0xff
    c6d4:	b.eq	c7b0 <GOMP_loop_ordered_start@@GOMP_5.0+0x148>  // b.none
    c6d8:	add	x1, sp, #0x68
    c6dc:	mov	x0, x19
    c6e0:	add	x26, x22, x20
    c6e4:	bl	c0b4 <omp_is_initial_device@@OMP_4.0+0xa4c>
    c6e8:	ldp	x1, x5, [sp, #96]
    c6ec:	mov	x19, x0
    c6f0:	mov	w4, w0
    c6f4:	mov	x3, x28
    c6f8:	ldr	x0, [x26, #24]
    c6fc:	mov	x2, x27
    c700:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c704:	cbz	x21, c728 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    c708:	mov	x0, x21
    c70c:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    c710:	ldr	x0, [x26, #80]
    c714:	mov	w1, #0x1                   	// #1
    c718:	ldr	x0, [x0, #40]
    c71c:	strb	w1, [x0, #50]
    c720:	ldr	x0, [x26, #24]
    c724:	str	x21, [x0, #88]
    c728:	cmp	x19, #0x1
    c72c:	b.ne	c79c <GOMP_loop_ordered_start@@GOMP_5.0+0x134>  // b.any
    c730:	bl	e420 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x200>
    c734:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c738:	cbz	x25, c768 <GOMP_loop_ordered_start@@GOMP_5.0+0x100>
    c73c:	add	x1, x22, x20
    c740:	ldr	x0, [x1, #24]
    c744:	ldr	x1, [x1, #16]
    c748:	ldr	x0, [x0, #32]
    c74c:	cbz	x1, c7e8 <GOMP_loop_ordered_start@@GOMP_5.0+0x180>
    c750:	ldr	w1, [x1]
    c754:	lsl	x1, x1, #2
    c758:	add	x0, x0, x1
    c75c:	add	x0, x0, #0x7
    c760:	and	x0, x0, #0xfffffffffffffff8
    c764:	str	x0, [x25]
    c768:	sub	x19, x19, #0x1
    c76c:	cmp	x19, #0x3
    c770:	b.hi	c82c <GOMP_loop_ordered_start@@GOMP_5.0+0x1c4>  // b.pmore
    c774:	cmp	w19, #0x3
    c778:	b.hi	c82c <GOMP_loop_ordered_start@@GOMP_5.0+0x1c4>  // b.pmore
    c77c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    c780:	add	x1, x1, #0x554
    c784:	ldrb	w0, [x1, w19, uxtw]
    c788:	adr	x1, c794 <GOMP_loop_ordered_start@@GOMP_5.0+0x12c>
    c78c:	add	x0, x1, w0, sxtb #2
    c790:	br	x0
    c794:	mov	x0, #0x1                   	// #1
    c798:	b	c6cc <GOMP_loop_ordered_start@@GOMP_5.0+0x64>
    c79c:	add	x0, x22, x20
    c7a0:	ldr	x0, [x0, #24]
    c7a4:	add	x0, x0, #0x40
    c7a8:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    c7ac:	b	c734 <GOMP_loop_ordered_start@@GOMP_5.0+0xcc>
    c7b0:	cbz	x21, c7c8 <GOMP_loop_ordered_start@@GOMP_5.0+0x160>
    c7b4:	add	x0, x22, x20
    c7b8:	ldr	x0, [x0, #24]
    c7bc:	ldr	x1, [x0, #88]
    c7c0:	mov	x0, x21
    c7c4:	bl	138f4 <GOMP_task_reduction_remap@@GOMP_5.0+0x240>
    c7c8:	add	x0, x22, x20
    c7cc:	ldr	x0, [x0, #24]
    c7d0:	ldr	w19, [x0]
    c7d4:	cmp	x19, #0x1
    c7d8:	b.eq	c830 <GOMP_loop_ordered_start@@GOMP_5.0+0x1c8>  // b.none
    c7dc:	add	x0, x0, #0x40
    c7e0:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    c7e4:	b	c738 <GOMP_loop_ordered_start@@GOMP_5.0+0xd0>
    c7e8:	mov	x1, #0x4                   	// #4
    c7ec:	b	c758 <GOMP_loop_ordered_start@@GOMP_5.0+0xf0>
    c7f0:	mov	x1, x24
    c7f4:	mov	x0, x23
    c7f8:	bl	b7f8 <omp_is_initial_device@@OMP_4.0+0x190>
    c7fc:	and	w19, w0, #0xff
    c800:	cbz	w19, c808 <GOMP_loop_ordered_start@@GOMP_5.0+0x1a0>
    c804:	bl	e2a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x88>
    c808:	add	x20, x22, x20
    c80c:	ldr	x0, [x20, #24]
    c810:	add	x0, x0, #0x40
    c814:	bl	bff4 <omp_is_initial_device@@OMP_4.0+0x98c>
    c818:	b	c848 <GOMP_loop_ordered_start@@GOMP_5.0+0x1e0>
    c81c:	mov	x1, x24
    c820:	mov	x0, x23
    c824:	bl	b94c <omp_is_initial_device@@OMP_4.0+0x2e4>
    c828:	b	c7fc <GOMP_loop_ordered_start@@GOMP_5.0+0x194>
    c82c:	bl	88b0 <abort@plt>
    c830:	cbnz	x25, c73c <GOMP_loop_ordered_start@@GOMP_5.0+0xd4>
    c834:	mov	x1, x24
    c838:	mov	x0, x23
    c83c:	bl	b670 <omp_is_initial_device@@OMP_4.0+0x8>
    c840:	cmp	w0, #0x0
    c844:	cset	w19, eq  // eq = none
    c848:	mov	w0, w19
    c84c:	ldp	x19, x20, [sp, #16]
    c850:	ldp	x21, x22, [sp, #32]
    c854:	ldp	x23, x24, [sp, #48]
    c858:	ldp	x25, x26, [sp, #64]
    c85c:	ldp	x27, x28, [sp, #80]
    c860:	ldp	x29, x30, [sp], #112
    c864:	ret

000000000000c868 <GOMP_loop_doacross_static_start@@GOMP_4.5>:
    c868:	stp	x29, x30, [sp, #-64]!
    c86c:	mov	x29, sp
    c870:	stp	x21, x22, [sp, #32]
    c874:	mov	x22, x3
    c878:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c87c:	ldr	x21, [x21, #4016]
    c880:	stp	x19, x20, [sp, #16]
    c884:	mov	x19, x1
    c888:	mrs	x1, tpidr_el0
    c88c:	add	x21, x1, x21
    c890:	stp	x23, x24, [sp, #48]
    c894:	mov	x20, x2
    c898:	mov	w24, w0
    c89c:	mov	x23, x4
    c8a0:	mov	x0, #0x0                   	// #0
    c8a4:	str	xzr, [x21, #72]
    c8a8:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c8ac:	tst	w0, #0xff
    c8b0:	b.eq	c8e8 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x80>  // b.none
    c8b4:	ldr	x2, [x19]
    c8b8:	mov	x5, x20
    c8bc:	ldr	x0, [x21, #24]
    c8c0:	mov	w4, #0x1                   	// #1
    c8c4:	mov	x3, #0x1                   	// #1
    c8c8:	mov	x1, #0x0                   	// #0
    c8cc:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c8d0:	mov	x2, x20
    c8d4:	mov	x1, x19
    c8d8:	mov	w0, w24
    c8dc:	mov	x3, #0x0                   	// #0
    c8e0:	bl	e554 <GOMP_ordered_end@@GOMP_1.0+0x4>
    c8e4:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c8e8:	mov	x1, x23
    c8ec:	mov	x0, x22
    c8f0:	bl	b670 <omp_is_initial_device@@OMP_4.0+0x8>
    c8f4:	cmp	w0, #0x0
    c8f8:	cset	w0, eq  // eq = none
    c8fc:	ldp	x19, x20, [sp, #16]
    c900:	ldp	x21, x22, [sp, #32]
    c904:	ldp	x23, x24, [sp, #48]
    c908:	ldp	x29, x30, [sp], #64
    c90c:	ret

000000000000c910 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>:
    c910:	stp	x29, x30, [sp, #-64]!
    c914:	mov	x29, sp
    c918:	stp	x19, x20, [sp, #16]
    c91c:	mov	x19, x1
    c920:	mov	x20, x2
    c924:	stp	x21, x22, [sp, #32]
    c928:	mov	x21, x3
    c92c:	mov	x22, x4
    c930:	str	x23, [sp, #48]
    c934:	mov	w23, w0
    c938:	mov	x0, #0x0                   	// #0
    c93c:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c940:	tst	w0, #0xff
    c944:	b.eq	c98c <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x7c>  // b.none
    c948:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c94c:	ldr	x0, [x0, #4016]
    c950:	mrs	x6, tpidr_el0
    c954:	ldr	x2, [x19]
    c958:	add	x0, x6, x0
    c95c:	mov	x5, x20
    c960:	mov	w4, #0x2                   	// #2
    c964:	mov	x3, #0x1                   	// #1
    c968:	mov	x1, #0x0                   	// #0
    c96c:	ldr	x0, [x0, #24]
    c970:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    c974:	mov	x2, x20
    c978:	mov	x1, x19
    c97c:	mov	w0, w23
    c980:	mov	x3, #0x0                   	// #0
    c984:	bl	e554 <GOMP_ordered_end@@GOMP_1.0+0x4>
    c988:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    c98c:	mov	x1, x22
    c990:	mov	x0, x21
    c994:	ldp	x19, x20, [sp, #16]
    c998:	ldp	x21, x22, [sp, #32]
    c99c:	ldr	x23, [sp, #48]
    c9a0:	ldp	x29, x30, [sp], #64
    c9a4:	b	b860 <omp_is_initial_device@@OMP_4.0+0x1f8>

000000000000c9a8 <GOMP_loop_doacross_guided_start@@GOMP_4.5>:
    c9a8:	stp	x29, x30, [sp, #-64]!
    c9ac:	mov	x29, sp
    c9b0:	stp	x19, x20, [sp, #16]
    c9b4:	mov	x19, x1
    c9b8:	mov	x20, x2
    c9bc:	stp	x21, x22, [sp, #32]
    c9c0:	mov	x21, x3
    c9c4:	mov	x22, x4
    c9c8:	str	x23, [sp, #48]
    c9cc:	mov	w23, w0
    c9d0:	mov	x0, #0x0                   	// #0
    c9d4:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    c9d8:	tst	w0, #0xff
    c9dc:	b.eq	ca24 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x7c>  // b.none
    c9e0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    c9e4:	ldr	x0, [x0, #4016]
    c9e8:	mrs	x6, tpidr_el0
    c9ec:	ldr	x2, [x19]
    c9f0:	add	x0, x6, x0
    c9f4:	mov	x5, x20
    c9f8:	mov	w4, #0x3                   	// #3
    c9fc:	mov	x3, #0x1                   	// #1
    ca00:	mov	x1, #0x0                   	// #0
    ca04:	ldr	x0, [x0, #24]
    ca08:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    ca0c:	mov	x2, x20
    ca10:	mov	x1, x19
    ca14:	mov	w0, w23
    ca18:	mov	x3, #0x0                   	// #0
    ca1c:	bl	e554 <GOMP_ordered_end@@GOMP_1.0+0x4>
    ca20:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    ca24:	mov	x1, x22
    ca28:	mov	x0, x21
    ca2c:	ldp	x19, x20, [sp, #16]
    ca30:	ldp	x21, x22, [sp, #32]
    ca34:	ldr	x23, [sp, #48]
    ca38:	ldp	x29, x30, [sp], #64
    ca3c:	b	b9d0 <omp_is_initial_device@@OMP_4.0+0x368>

000000000000ca40 <GOMP_loop_doacross_runtime_start@@GOMP_4.5>:
    ca40:	mov	x4, x3
    ca44:	adrp	x3, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ca48:	ldr	x3, [x3, #4016]
    ca4c:	mrs	x5, tpidr_el0
    ca50:	add	x3, x5, x3
    ca54:	adrp	x5, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    ca58:	add	x5, x5, #0x2c0
    ca5c:	ldr	x3, [x3, #80]
    ca60:	cmp	x3, #0x0
    ca64:	add	x6, x3, #0x90
    ca68:	csel	x5, x5, x6, eq  // eq = none
    ca6c:	ldr	w3, [x5, #8]
    ca70:	and	w3, w3, #0x7fffffff
    ca74:	sub	w3, w3, #0x1
    ca78:	cmp	w3, #0x3
    ca7c:	b.hi	cac8 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x88>  // b.pmore
    ca80:	adrp	x6, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    ca84:	add	x6, x6, #0x558
    ca88:	ldrb	w3, [x6, w3, uxtw]
    ca8c:	adr	x6, ca98 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x58>
    ca90:	add	x3, x6, w3, sxtb #2
    ca94:	br	x3
    ca98:	mov	x3, x2
    ca9c:	ldrsw	x2, [x5, #12]
    caa0:	b	c868 <GOMP_loop_doacross_static_start@@GOMP_4.5>
    caa4:	mov	x3, x2
    caa8:	ldrsw	x2, [x5, #12]
    caac:	b	c910 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>
    cab0:	mov	x3, x2
    cab4:	ldrsw	x2, [x5, #12]
    cab8:	b	c9a8 <GOMP_loop_doacross_guided_start@@GOMP_4.5>
    cabc:	mov	x3, x2
    cac0:	mov	x2, #0x0                   	// #0
    cac4:	b	caa0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x60>
    cac8:	stp	x29, x30, [sp, #-16]!
    cacc:	mov	x29, sp
    cad0:	bl	88b0 <abort@plt>

000000000000cad4 <GOMP_loop_static_next@@GOMP_1.0>:
    cad4:	stp	x29, x30, [sp, #-16]!
    cad8:	mov	x29, sp
    cadc:	bl	b670 <omp_is_initial_device@@OMP_4.0+0x8>
    cae0:	cmp	w0, #0x0
    cae4:	cset	w0, eq  // eq = none
    cae8:	ldp	x29, x30, [sp], #16
    caec:	ret

000000000000caf0 <GOMP_loop_dynamic_next@@GOMP_1.0>:
    caf0:	b	b860 <omp_is_initial_device@@OMP_4.0+0x1f8>

000000000000caf4 <GOMP_loop_guided_next@@GOMP_1.0>:
    caf4:	b	b9d0 <omp_is_initial_device@@OMP_4.0+0x368>

000000000000caf8 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
    caf8:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    cafc:	ldr	x2, [x2, #4016]
    cb00:	mrs	x3, tpidr_el0
    cb04:	add	x2, x3, x2
    cb08:	ldr	x2, [x2, #24]
    cb0c:	ldr	w2, [x2]
    cb10:	sub	w2, w2, #0x1
    cb14:	cmp	w2, #0x3
    cb18:	b.hi	cb40 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x48>  // b.pmore
    cb1c:	adrp	x3, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    cb20:	add	x3, x3, #0x55c
    cb24:	ldrb	w2, [x3, w2, uxtw]
    cb28:	adr	x3, cb34 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x3c>
    cb2c:	add	x2, x3, w2, sxtb #2
    cb30:	br	x2
    cb34:	b	cad4 <GOMP_loop_static_next@@GOMP_1.0>
    cb38:	b	b860 <omp_is_initial_device@@OMP_4.0+0x1f8>
    cb3c:	b	b9d0 <omp_is_initial_device@@OMP_4.0+0x368>
    cb40:	stp	x29, x30, [sp, #-16]!
    cb44:	mov	x29, sp
    cb48:	bl	88b0 <abort@plt>

000000000000cb4c <GOMP_loop_start@@GOMP_5.0>:
    cb4c:	stp	x29, x30, [sp, #-112]!
    cb50:	mov	x29, sp
    cb54:	stp	x27, x28, [sp, #80]
    cb58:	mov	x27, x3
    cb5c:	adrp	x28, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    cb60:	ldr	x28, [x28, #4016]
    cb64:	stp	x19, x20, [sp, #16]
    cb68:	mrs	x20, tpidr_el0
    cb6c:	mov	x19, x7
    cb70:	stp	x23, x24, [sp, #48]
    cb74:	mov	x24, x0
    cb78:	add	x0, x20, x28
    cb7c:	stp	x21, x22, [sp, #32]
    cb80:	mov	x23, x6
    cb84:	mov	x22, x5
    cb88:	stp	x25, x26, [sp, #64]
    cb8c:	mov	x25, x1
    cb90:	mov	x26, x2
    cb94:	str	xzr, [x0, #72]
    cb98:	str	x4, [sp, #104]
    cb9c:	ldr	x21, [sp, #112]
    cba0:	cbz	x7, cba8 <GOMP_loop_start@@GOMP_5.0+0x5c>
    cba4:	bl	13aac <GOMP_task_reduction_remap@@GOMP_5.0+0x3f8>
    cba8:	mov	x0, #0x0                   	// #0
    cbac:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    cbb0:	tst	w0, #0xff
    cbb4:	b.eq	cc74 <GOMP_loop_start@@GOMP_5.0+0x128>  // b.none
    cbb8:	mov	x0, x27
    cbbc:	add	x27, x20, x28
    cbc0:	add	x1, sp, #0x68
    cbc4:	bl	c0b4 <omp_is_initial_device@@OMP_4.0+0xa4c>
    cbc8:	mov	w4, w0
    cbcc:	mov	x3, x26
    cbd0:	ldr	x0, [x27, #24]
    cbd4:	mov	x2, x25
    cbd8:	ldr	x5, [sp, #104]
    cbdc:	mov	x1, x24
    cbe0:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    cbe4:	cbz	x19, cc08 <GOMP_loop_start@@GOMP_5.0+0xbc>
    cbe8:	mov	x0, x19
    cbec:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    cbf0:	ldr	x0, [x27, #80]
    cbf4:	mov	w1, #0x1                   	// #1
    cbf8:	ldr	x0, [x0, #40]
    cbfc:	strb	w1, [x0, #50]
    cc00:	ldr	x0, [x27, #24]
    cc04:	str	x19, [x0, #88]
    cc08:	cbz	x21, cc2c <GOMP_loop_start@@GOMP_5.0+0xe0>
    cc0c:	add	x20, x20, x28
    cc10:	ldr	x0, [x21]
    cc14:	ldr	x19, [x20, #24]
    cc18:	cmp	x0, #0x20
    cc1c:	b.ls	cc60 <GOMP_loop_start@@GOMP_5.0+0x114>  // b.plast
    cc20:	bl	ade4 <fprintf@plt+0x2284>
    cc24:	str	x0, [x19, #32]
    cc28:	str	x0, [x21]
    cc2c:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    cc30:	cbz	x22, cca4 <GOMP_loop_start@@GOMP_5.0+0x158>
    cc34:	mov	x1, x23
    cc38:	mov	x0, x22
    cc3c:	bl	caf8 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    cc40:	and	w0, w0, #0xff
    cc44:	ldp	x19, x20, [sp, #16]
    cc48:	ldp	x21, x22, [sp, #32]
    cc4c:	ldp	x23, x24, [sp, #48]
    cc50:	ldp	x25, x26, [sp, #64]
    cc54:	ldp	x27, x28, [sp, #80]
    cc58:	ldp	x29, x30, [sp], #112
    cc5c:	ret
    cc60:	mov	x2, x0
    cc64:	mov	w1, #0x0                   	// #0
    cc68:	add	x0, x19, #0x60
    cc6c:	bl	8800 <memset@plt>
    cc70:	b	cc28 <GOMP_loop_start@@GOMP_5.0+0xdc>
    cc74:	cbz	x19, cc8c <GOMP_loop_start@@GOMP_5.0+0x140>
    cc78:	add	x0, x20, x28
    cc7c:	ldr	x0, [x0, #24]
    cc80:	ldr	x1, [x0, #88]
    cc84:	mov	x0, x19
    cc88:	bl	138f4 <GOMP_task_reduction_remap@@GOMP_5.0+0x240>
    cc8c:	cbz	x21, cc30 <GOMP_loop_start@@GOMP_5.0+0xe4>
    cc90:	add	x20, x20, x28
    cc94:	ldr	x0, [x20, #24]
    cc98:	ldr	x0, [x0, #32]
    cc9c:	str	x0, [x21]
    cca0:	b	cc30 <GOMP_loop_start@@GOMP_5.0+0xe4>
    cca4:	mov	w0, #0x1                   	// #1
    cca8:	b	cc44 <GOMP_loop_start@@GOMP_5.0+0xf8>

000000000000ccac <GOMP_loop_doacross_start@@GOMP_5.0>:
    ccac:	stp	x29, x30, [sp, #-112]!
    ccb0:	mov	x29, sp
    ccb4:	stp	x21, x22, [sp, #32]
    ccb8:	mrs	x21, tpidr_el0
    ccbc:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ccc0:	ldr	x22, [x22, #4016]
    ccc4:	stp	x27, x28, [sp, #80]
    ccc8:	mov	w27, w0
    cccc:	add	x0, x21, x22
    ccd0:	stp	x19, x20, [sp, #16]
    ccd4:	mov	x19, x6
    ccd8:	mov	x20, x7
    ccdc:	stp	x23, x24, [sp, #48]
    cce0:	mov	x23, x1
    cce4:	mov	x24, x4
    cce8:	stp	x25, x26, [sp, #64]
    ccec:	mov	x26, x2
    ccf0:	mov	x25, x5
    ccf4:	str	xzr, [x0, #72]
    ccf8:	str	x3, [sp, #104]
    ccfc:	cbz	x6, cd04 <GOMP_loop_doacross_start@@GOMP_5.0+0x58>
    cd00:	bl	13aac <GOMP_task_reduction_remap@@GOMP_5.0+0x3f8>
    cd04:	mov	x0, #0x0                   	// #0
    cd08:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    cd0c:	tst	w0, #0xff
    cd10:	b.eq	cdcc <GOMP_loop_doacross_start@@GOMP_5.0+0x120>  // b.none
    cd14:	cbz	x20, cdc4 <GOMP_loop_doacross_start@@GOMP_5.0+0x118>
    cd18:	ldr	x28, [x20]
    cd1c:	mov	x0, x26
    cd20:	add	x26, x21, x22
    cd24:	add	x1, sp, #0x68
    cd28:	bl	c0b4 <omp_is_initial_device@@OMP_4.0+0xa4c>
    cd2c:	mov	w4, w0
    cd30:	ldr	x2, [x23]
    cd34:	mov	x3, #0x1                   	// #1
    cd38:	ldr	x0, [x26, #24]
    cd3c:	mov	x1, #0x0                   	// #0
    cd40:	ldr	x5, [sp, #104]
    cd44:	bl	bec4 <omp_is_initial_device@@OMP_4.0+0x85c>
    cd48:	ldr	x2, [sp, #104]
    cd4c:	mov	x3, x28
    cd50:	mov	x1, x23
    cd54:	mov	w0, w27
    cd58:	bl	e554 <GOMP_ordered_end@@GOMP_1.0+0x4>
    cd5c:	cbz	x19, cd80 <GOMP_loop_doacross_start@@GOMP_5.0+0xd4>
    cd60:	mov	x0, x19
    cd64:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    cd68:	ldr	x0, [x26, #80]
    cd6c:	mov	w1, #0x1                   	// #1
    cd70:	ldr	x0, [x0, #40]
    cd74:	strb	w1, [x0, #50]
    cd78:	ldr	x0, [x26, #24]
    cd7c:	str	x19, [x0, #88]
    cd80:	bl	bf90 <omp_is_initial_device@@OMP_4.0+0x928>
    cd84:	cbz	x20, cd9c <GOMP_loop_doacross_start@@GOMP_5.0+0xf0>
    cd88:	add	x21, x21, x22
    cd8c:	ldr	x0, [x21, #24]
    cd90:	ldr	x0, [x0, #32]
    cd94:	ldr	x0, [x0, #48]
    cd98:	str	x0, [x20]
    cd9c:	mov	x1, x25
    cda0:	mov	x0, x24
    cda4:	bl	caf8 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    cda8:	ldp	x19, x20, [sp, #16]
    cdac:	ldp	x21, x22, [sp, #32]
    cdb0:	ldp	x23, x24, [sp, #48]
    cdb4:	ldp	x25, x26, [sp, #64]
    cdb8:	ldp	x27, x28, [sp, #80]
    cdbc:	ldp	x29, x30, [sp], #112
    cdc0:	ret
    cdc4:	mov	x28, #0x0                   	// #0
    cdc8:	b	cd1c <GOMP_loop_doacross_start@@GOMP_5.0+0x70>
    cdcc:	cbz	x19, cd84 <GOMP_loop_doacross_start@@GOMP_5.0+0xd8>
    cdd0:	add	x0, x21, x22
    cdd4:	ldr	x0, [x0, #24]
    cdd8:	ldr	x1, [x0, #88]
    cddc:	mov	x0, x19
    cde0:	bl	138f4 <GOMP_task_reduction_remap@@GOMP_5.0+0x240>
    cde4:	b	cd84 <GOMP_loop_doacross_start@@GOMP_5.0+0xd8>

000000000000cde8 <GOMP_loop_ordered_static_next@@GOMP_1.0>:
    cde8:	stp	x29, x30, [sp, #-48]!
    cdec:	mov	x29, sp
    cdf0:	stp	x21, x22, [sp, #32]
    cdf4:	mov	x21, x1
    cdf8:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    cdfc:	ldr	x22, [x22, #4016]
    ce00:	stp	x19, x20, [sp, #16]
    ce04:	mov	x19, x0
    ce08:	mrs	x20, tpidr_el0
    ce0c:	bl	e4ac <GOMP_ordered_start@@GOMP_1.0>
    ce10:	add	x0, x20, x22
    ce14:	ldr	x0, [x0, #24]
    ce18:	add	x0, x0, #0x40
    ce1c:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    ce20:	mov	x0, x19
    ce24:	mov	x1, x21
    ce28:	bl	b670 <omp_is_initial_device@@OMP_4.0+0x8>
    ce2c:	mov	w19, w0
    ce30:	tbnz	w0, #31, ce38 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x50>
    ce34:	bl	e454 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x234>
    ce38:	add	x20, x20, x22
    ce3c:	ldr	x0, [x20, #24]
    ce40:	add	x0, x0, #0x40
    ce44:	bl	bff4 <omp_is_initial_device@@OMP_4.0+0x98c>
    ce48:	cmp	w19, #0x0
    ce4c:	cset	w0, eq  // eq = none
    ce50:	ldp	x19, x20, [sp, #16]
    ce54:	ldp	x21, x22, [sp, #32]
    ce58:	ldp	x29, x30, [sp], #48
    ce5c:	ret

000000000000ce60 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>:
    ce60:	stp	x29, x30, [sp, #-48]!
    ce64:	mov	x29, sp
    ce68:	stp	x21, x22, [sp, #32]
    ce6c:	mov	x21, x1
    ce70:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ce74:	ldr	x22, [x22, #4016]
    ce78:	stp	x19, x20, [sp, #16]
    ce7c:	mov	x19, x0
    ce80:	mrs	x20, tpidr_el0
    ce84:	bl	e4ac <GOMP_ordered_start@@GOMP_1.0>
    ce88:	add	x0, x20, x22
    ce8c:	ldr	x0, [x0, #24]
    ce90:	add	x0, x0, #0x40
    ce94:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    ce98:	mov	x0, x19
    ce9c:	mov	x1, x21
    cea0:	bl	b7f8 <omp_is_initial_device@@OMP_4.0+0x190>
    cea4:	mov	w19, w0
    cea8:	tst	w0, #0xff
    ceac:	b.eq	ced8 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x78>  // b.none
    ceb0:	bl	e384 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x164>
    ceb4:	add	x20, x20, x22
    ceb8:	ldr	x0, [x20, #24]
    cebc:	add	x0, x0, #0x40
    cec0:	bl	bff4 <omp_is_initial_device@@OMP_4.0+0x98c>
    cec4:	mov	w0, w19
    cec8:	ldp	x19, x20, [sp, #16]
    cecc:	ldp	x21, x22, [sp, #32]
    ced0:	ldp	x29, x30, [sp], #48
    ced4:	ret
    ced8:	bl	e318 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf8>
    cedc:	b	ceb4 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x54>

000000000000cee0 <GOMP_loop_ordered_guided_next@@GOMP_1.0>:
    cee0:	stp	x29, x30, [sp, #-48]!
    cee4:	mov	x29, sp
    cee8:	stp	x21, x22, [sp, #32]
    ceec:	mov	x21, x1
    cef0:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    cef4:	ldr	x22, [x22, #4016]
    cef8:	stp	x19, x20, [sp, #16]
    cefc:	mov	x19, x0
    cf00:	mrs	x20, tpidr_el0
    cf04:	bl	e4ac <GOMP_ordered_start@@GOMP_1.0>
    cf08:	add	x0, x20, x22
    cf0c:	ldr	x0, [x0, #24]
    cf10:	add	x0, x0, #0x40
    cf14:	bl	bfcc <omp_is_initial_device@@OMP_4.0+0x964>
    cf18:	mov	x0, x19
    cf1c:	mov	x1, x21
    cf20:	bl	b94c <omp_is_initial_device@@OMP_4.0+0x2e4>
    cf24:	mov	w19, w0
    cf28:	tst	w0, #0xff
    cf2c:	b.eq	cf58 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x78>  // b.none
    cf30:	bl	e384 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x164>
    cf34:	add	x20, x20, x22
    cf38:	ldr	x0, [x20, #24]
    cf3c:	add	x0, x0, #0x40
    cf40:	bl	bff4 <omp_is_initial_device@@OMP_4.0+0x98c>
    cf44:	mov	w0, w19
    cf48:	ldp	x19, x20, [sp, #16]
    cf4c:	ldp	x21, x22, [sp, #32]
    cf50:	ldp	x29, x30, [sp], #48
    cf54:	ret
    cf58:	bl	e318 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf8>
    cf5c:	b	cf34 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x54>

000000000000cf60 <GOMP_loop_ordered_runtime_next@@GOMP_1.0>:
    cf60:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    cf64:	ldr	x2, [x2, #4016]
    cf68:	mrs	x3, tpidr_el0
    cf6c:	add	x2, x3, x2
    cf70:	ldr	x2, [x2, #24]
    cf74:	ldr	w2, [x2]
    cf78:	sub	w2, w2, #0x1
    cf7c:	cmp	w2, #0x3
    cf80:	b.hi	cfa8 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x48>  // b.pmore
    cf84:	adrp	x3, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    cf88:	add	x3, x3, #0x560
    cf8c:	ldrb	w2, [x3, w2, uxtw]
    cf90:	adr	x3, cf9c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x3c>
    cf94:	add	x2, x3, w2, sxtb #2
    cf98:	br	x2
    cf9c:	b	cde8 <GOMP_loop_ordered_static_next@@GOMP_1.0>
    cfa0:	b	ce60 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>
    cfa4:	b	cee0 <GOMP_loop_ordered_guided_next@@GOMP_1.0>
    cfa8:	stp	x29, x30, [sp, #-16]!
    cfac:	mov	x29, sp
    cfb0:	bl	88b0 <abort@plt>

000000000000cfb4 <GOMP_parallel_loop_static_start@@GOMP_1.0>:
    cfb4:	sub	sp, sp, #0x20
    cfb8:	mov	x7, x6
    cfbc:	mov	w6, #0x1                   	// #1
    cfc0:	stp	x29, x30, [sp, #16]
    cfc4:	add	x29, sp, #0x10
    cfc8:	str	wzr, [sp]
    cfcc:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    cfd0:	ldp	x29, x30, [sp, #16]
    cfd4:	add	sp, sp, #0x20
    cfd8:	ret

000000000000cfdc <GOMP_parallel_loop_dynamic_start@@GOMP_1.0>:
    cfdc:	sub	sp, sp, #0x20
    cfe0:	mov	x7, x6
    cfe4:	mov	w6, #0x2                   	// #2
    cfe8:	stp	x29, x30, [sp, #16]
    cfec:	add	x29, sp, #0x10
    cff0:	str	wzr, [sp]
    cff4:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    cff8:	ldp	x29, x30, [sp, #16]
    cffc:	add	sp, sp, #0x20
    d000:	ret

000000000000d004 <GOMP_parallel_loop_guided_start@@GOMP_1.0>:
    d004:	sub	sp, sp, #0x20
    d008:	mov	x7, x6
    d00c:	mov	w6, #0x3                   	// #3
    d010:	stp	x29, x30, [sp, #16]
    d014:	add	x29, sp, #0x10
    d018:	str	wzr, [sp]
    d01c:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    d020:	ldp	x29, x30, [sp, #16]
    d024:	add	sp, sp, #0x20
    d028:	ret

000000000000d02c <GOMP_parallel_loop_runtime_start@@GOMP_1.0>:
    d02c:	sub	sp, sp, #0x20
    d030:	adrp	x6, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d034:	ldr	x6, [x6, #4016]
    d038:	mrs	x7, tpidr_el0
    d03c:	add	x6, x7, x6
    d040:	stp	x29, x30, [sp, #16]
    d044:	add	x29, sp, #0x10
    d048:	ldr	x7, [x6, #80]
    d04c:	adrp	x6, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    d050:	add	x6, x6, #0x2c0
    d054:	add	x8, x7, #0x90
    d058:	cmp	x7, #0x0
    d05c:	csel	x6, x6, x8, eq  // eq = none
    d060:	ldrsw	x7, [x6, #12]
    d064:	ldr	w6, [x6, #8]
    d068:	str	wzr, [sp]
    d06c:	and	w6, w6, #0x7fffffff
    d070:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    d074:	ldp	x29, x30, [sp, #16]
    d078:	add	sp, sp, #0x20
    d07c:	ret

000000000000d080 <GOMP_parallel_loop_static@@GOMP_4.0>:
    d080:	sub	sp, sp, #0x30
    d084:	stp	x29, x30, [sp, #16]
    d088:	add	x29, sp, #0x10
    d08c:	str	w7, [sp]
    d090:	mov	x7, x6
    d094:	mov	w6, #0x1                   	// #1
    d098:	stp	x19, x20, [sp, #32]
    d09c:	mov	x20, x1
    d0a0:	mov	x19, x0
    d0a4:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    d0a8:	mov	x0, x20
    d0ac:	blr	x19
    d0b0:	ldp	x29, x30, [sp, #16]
    d0b4:	ldp	x19, x20, [sp, #32]
    d0b8:	add	sp, sp, #0x30
    d0bc:	b	f224 <GOMP_parallel_end@@GOMP_1.0>

000000000000d0c0 <GOMP_parallel_loop_dynamic@@GOMP_4.0>:
    d0c0:	sub	sp, sp, #0x30
    d0c4:	stp	x29, x30, [sp, #16]
    d0c8:	add	x29, sp, #0x10
    d0cc:	str	w7, [sp]
    d0d0:	mov	x7, x6
    d0d4:	mov	w6, #0x2                   	// #2
    d0d8:	stp	x19, x20, [sp, #32]
    d0dc:	mov	x20, x1
    d0e0:	mov	x19, x0
    d0e4:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    d0e8:	mov	x0, x20
    d0ec:	blr	x19
    d0f0:	ldp	x29, x30, [sp, #16]
    d0f4:	ldp	x19, x20, [sp, #32]
    d0f8:	add	sp, sp, #0x30
    d0fc:	b	f224 <GOMP_parallel_end@@GOMP_1.0>

000000000000d100 <GOMP_parallel_loop_guided@@GOMP_4.0>:
    d100:	sub	sp, sp, #0x30
    d104:	stp	x29, x30, [sp, #16]
    d108:	add	x29, sp, #0x10
    d10c:	str	w7, [sp]
    d110:	mov	x7, x6
    d114:	mov	w6, #0x3                   	// #3
    d118:	stp	x19, x20, [sp, #32]
    d11c:	mov	x20, x1
    d120:	mov	x19, x0
    d124:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    d128:	mov	x0, x20
    d12c:	blr	x19
    d130:	ldp	x29, x30, [sp, #16]
    d134:	ldp	x19, x20, [sp, #32]
    d138:	add	sp, sp, #0x30
    d13c:	b	f224 <GOMP_parallel_end@@GOMP_1.0>

000000000000d140 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0>:
    d140:	sub	sp, sp, #0x30
    d144:	adrp	x7, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d148:	ldr	x7, [x7, #4016]
    d14c:	mrs	x8, tpidr_el0
    d150:	add	x7, x8, x7
    d154:	adrp	x8, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    d158:	stp	x29, x30, [sp, #16]
    d15c:	add	x29, sp, #0x10
    d160:	add	x8, x8, #0x2c0
    d164:	ldr	x7, [x7, #80]
    d168:	stp	x19, x20, [sp, #32]
    d16c:	mov	x20, x1
    d170:	add	x9, x7, #0x90
    d174:	cmp	x7, #0x0
    d178:	csel	x8, x8, x9, eq  // eq = none
    d17c:	mov	x19, x0
    d180:	ldrsw	x7, [x8, #12]
    d184:	ldr	w8, [x8, #8]
    d188:	str	w6, [sp]
    d18c:	and	w6, w8, #0x7fffffff
    d190:	bl	c010 <omp_is_initial_device@@OMP_4.0+0x9a8>
    d194:	mov	x0, x20
    d198:	blr	x19
    d19c:	ldp	x29, x30, [sp, #16]
    d1a0:	ldp	x19, x20, [sp, #32]
    d1a4:	add	sp, sp, #0x30
    d1a8:	b	f224 <GOMP_parallel_end@@GOMP_1.0>

000000000000d1ac <GOMP_loop_end@@GOMP_1.0>:
    d1ac:	b	15274 <omp_in_final@@OMP_3.1+0x16fc>

000000000000d1b0 <GOMP_loop_end_cancel@@GOMP_4.0>:
    d1b0:	b	15308 <omp_in_final@@OMP_3.1+0x1790>

000000000000d1b4 <GOMP_loop_end_nowait@@GOMP_1.0>:
    d1b4:	b	15378 <omp_in_final@@OMP_3.1+0x1800>
    d1b8:	str	w5, [x0]
    d1bc:	ands	w1, w1, #0xff
    d1c0:	str	x6, [x0, #8]
    d1c4:	ccmp	x2, x3, #0x0, ne  // ne = any
    d1c8:	b.hi	d244 <GOMP_loop_end_nowait@@GOMP_1.0+0x90>  // b.pmore
    d1cc:	cmp	x2, x3
    d1d0:	eor	w7, w1, #0x1
    d1d4:	cset	w8, cc  // cc = lo, ul, last
    d1d8:	tst	w8, w7
    d1dc:	csel	x3, x3, x2, eq  // eq = none
    d1e0:	str	wzr, [x0, #4]
    d1e4:	cmp	w5, #0x2
    d1e8:	stp	x3, x4, [x0, #16]
    d1ec:	str	x2, [x0, #72]
    d1f0:	b.ne	d284 <GOMP_loop_end_nowait@@GOMP_1.0+0xd0>  // b.any
    d1f4:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d1f8:	ldr	x2, [x2, #4016]
    d1fc:	mrs	x5, tpidr_el0
    d200:	mul	x4, x6, x4
    d204:	add	x2, x5, x2
    d208:	ldr	x2, [x2, #16]
    d20c:	str	x4, [x0, #8]
    d210:	cbz	x2, d24c <GOMP_loop_end_nowait@@GOMP_1.0+0x98>
    d214:	ldr	w6, [x2]
    d218:	mov	x2, #0x7fffffff            	// #2147483647
    d21c:	cbz	w1, d254 <GOMP_loop_end_nowait@@GOMP_1.0+0xa0>
    d220:	orr	x1, x4, x6
    d224:	cmp	x1, x2
    d228:	b.hi	d288 <GOMP_loop_end_nowait@@GOMP_1.0+0xd4>  // b.pmore
    d22c:	madd	x4, x6, x4, x4
    d230:	mvn	x4, x4
    d234:	cmp	x4, x3
    d238:	cset	w1, hi  // hi = pmore
    d23c:	str	w1, [x0, #4]
    d240:	b	d288 <GOMP_loop_end_nowait@@GOMP_1.0+0xd4>
    d244:	mov	x3, x2
    d248:	b	d1e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x2c>
    d24c:	mov	x6, #0x1                   	// #1
    d250:	b	d218 <GOMP_loop_end_nowait@@GOMP_1.0+0x64>
    d254:	neg	x4, x4
    d258:	orr	x1, x4, x6
    d25c:	cmp	x1, x2
    d260:	b.hi	d278 <GOMP_loop_end_nowait@@GOMP_1.0+0xc4>  // b.pmore
    d264:	madd	x4, x6, x4, x4
    d268:	add	x4, x4, #0x1
    d26c:	cmp	x4, x3
    d270:	cset	w1, cc  // cc = lo, ul, last
    d274:	str	w1, [x0, #4]
    d278:	ldr	w1, [x0, #4]
    d27c:	orr	w1, w1, #0x2
    d280:	b	d23c <GOMP_loop_end_nowait@@GOMP_1.0+0x88>
    d284:	cbz	w1, d278 <GOMP_loop_end_nowait@@GOMP_1.0+0xc4>
    d288:	ret
    d28c:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d290:	ldr	x1, [x1, #4016]
    d294:	mrs	x0, tpidr_el0
    d298:	add	x1, x0, x1
    d29c:	ldr	x0, [x1, #32]
    d2a0:	cbz	x0, d2c4 <GOMP_loop_end_nowait@@GOMP_1.0+0x110>
    d2a4:	ldr	x2, [x1, #24]
    d2a8:	add	x0, x0, #0x50
    d2ac:	ldxr	x1, [x0]
    d2b0:	stlxr	w3, x2, [x0]
    d2b4:	cbnz	w3, d2ac <GOMP_loop_end_nowait@@GOMP_1.0+0xf8>
    d2b8:	cmp	x1, #0x1
    d2bc:	b.eq	d2c4 <GOMP_loop_end_nowait@@GOMP_1.0+0x110>  // b.none
    d2c0:	b	164c4 <omp_get_num_procs@@OMP_1.0+0x850>
    d2c4:	ret
    d2c8:	mov	x2, x0
    d2cc:	mov	w3, #0x1                   	// #1
    d2d0:	ldaxr	w1, [x2]
    d2d4:	cbnz	w1, d2e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x12c>
    d2d8:	stxr	w4, w3, [x2]
    d2dc:	cbnz	w4, d2d0 <GOMP_loop_end_nowait@@GOMP_1.0+0x11c>
    d2e0:	cmp	w1, #0x0
    d2e4:	b.eq	d2ec <GOMP_loop_end_nowait@@GOMP_1.0+0x138>  // b.none
    d2e8:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
    d2ec:	ret
    d2f0:	mov	x1, x0
    d2f4:	ldxr	w2, [x1]
    d2f8:	stlxr	w3, wzr, [x1]
    d2fc:	cbnz	w3, d2f4 <GOMP_loop_end_nowait@@GOMP_1.0+0x140>
    d300:	tbz	w2, #31, d308 <GOMP_loop_end_nowait@@GOMP_1.0+0x154>
    d304:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
    d308:	ret
    d30c:	mov	x2, x0
    d310:	and	x0, x0, #0x7fffffff
    d314:	tst	x2, #0x7ffffffc
    d318:	b.ne	d368 <GOMP_loop_end_nowait@@GOMP_1.0+0x1b4>  // b.any
    d31c:	cbnz	x0, d390 <GOMP_loop_end_nowait@@GOMP_1.0+0x1dc>
    d320:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d324:	ldr	x0, [x0, #4016]
    d328:	mrs	x2, tpidr_el0
    d32c:	add	x0, x2, x0
    d330:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    d334:	add	x2, x2, #0x2c0
    d338:	ldr	x0, [x0, #80]
    d33c:	add	x3, x0, #0x90
    d340:	cmp	x0, #0x0
    d344:	csel	x2, x2, x3, eq  // eq = none
    d348:	ldr	w3, [x2, #8]
    d34c:	and	w0, w3, #0x7fffffff
    d350:	tst	w3, #0x7ffffffc
    d354:	b.ne	d37c <GOMP_loop_end_nowait@@GOMP_1.0+0x1c8>  // b.any
    d358:	cbz	w0, d370 <GOMP_loop_end_nowait@@GOMP_1.0+0x1bc>
    d35c:	ldrsw	x2, [x2, #12]
    d360:	str	x2, [x1]
    d364:	ret
    d368:	cmp	x0, #0x4
    d36c:	b.eq	d320 <GOMP_loop_end_nowait@@GOMP_1.0+0x16c>  // b.none
    d370:	stp	x29, x30, [sp, #-16]!
    d374:	mov	x29, sp
    d378:	bl	88b0 <abort@plt>
    d37c:	cmp	w0, #0x4
    d380:	b.ne	d370 <GOMP_loop_end_nowait@@GOMP_1.0+0x1bc>  // b.any
    d384:	mov	x0, #0x1                   	// #1
    d388:	str	xzr, [x1]
    d38c:	ret
    d390:	ret

000000000000d394 <GOMP_loop_ull_static_start@@GOMP_2.0>:
    d394:	stp	x29, x30, [sp, #-80]!
    d398:	mov	x29, sp
    d39c:	stp	x19, x20, [sp, #16]
    d3a0:	mov	x20, x5
    d3a4:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d3a8:	ldr	x19, [x19, #4016]
    d3ac:	stp	x25, x26, [sp, #64]
    d3b0:	and	w26, w0, #0xff
    d3b4:	mrs	x0, tpidr_el0
    d3b8:	add	x19, x0, x19
    d3bc:	stp	x21, x22, [sp, #32]
    d3c0:	mov	x25, x4
    d3c4:	stp	x23, x24, [sp, #48]
    d3c8:	mov	x22, x1
    d3cc:	mov	x23, x2
    d3d0:	mov	x24, x3
    d3d4:	mov	x21, x6
    d3d8:	mov	x0, #0x0                   	// #0
    d3dc:	str	xzr, [x19, #72]
    d3e0:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    d3e4:	tst	w0, #0xff
    d3e8:	b.eq	d410 <GOMP_loop_ull_static_start@@GOMP_2.0+0x7c>  // b.none
    d3ec:	ldr	x0, [x19, #24]
    d3f0:	mov	x6, x25
    d3f4:	mov	x4, x24
    d3f8:	mov	x3, x23
    d3fc:	mov	x2, x22
    d400:	mov	w1, w26
    d404:	mov	w5, #0x1                   	// #1
    d408:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    d40c:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    d410:	mov	x1, x21
    d414:	mov	x0, x20
    d418:	bl	ba78 <omp_is_initial_device@@OMP_4.0+0x410>
    d41c:	cmp	w0, #0x0
    d420:	cset	w0, eq  // eq = none
    d424:	ldp	x19, x20, [sp, #16]
    d428:	ldp	x21, x22, [sp, #32]
    d42c:	ldp	x23, x24, [sp, #48]
    d430:	ldp	x25, x26, [sp, #64]
    d434:	ldp	x29, x30, [sp], #80
    d438:	ret

000000000000d43c <GOMP_loop_ull_dynamic_start@@GOMP_2.0>:
    d43c:	stp	x29, x30, [sp, #-80]!
    d440:	mov	x29, sp
    d444:	stp	x19, x20, [sp, #16]
    d448:	mov	x19, x5
    d44c:	mov	x20, x6
    d450:	stp	x21, x22, [sp, #32]
    d454:	mov	x21, x1
    d458:	mov	x22, x2
    d45c:	stp	x23, x24, [sp, #48]
    d460:	mov	x23, x3
    d464:	mov	x24, x4
    d468:	str	x25, [sp, #64]
    d46c:	and	w25, w0, #0xff
    d470:	mov	x0, #0x0                   	// #0
    d474:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    d478:	tst	w0, #0xff
    d47c:	b.eq	d4b4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x78>  // b.none
    d480:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d484:	ldr	x0, [x0, #4016]
    d488:	mrs	x7, tpidr_el0
    d48c:	mov	x6, x24
    d490:	mov	x4, x23
    d494:	add	x0, x7, x0
    d498:	mov	x3, x22
    d49c:	mov	x2, x21
    d4a0:	mov	w1, w25
    d4a4:	mov	w5, #0x2                   	// #2
    d4a8:	ldr	x0, [x0, #24]
    d4ac:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    d4b0:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    d4b4:	mov	x1, x20
    d4b8:	mov	x0, x19
    d4bc:	ldp	x19, x20, [sp, #16]
    d4c0:	ldp	x21, x22, [sp, #32]
    d4c4:	ldp	x23, x24, [sp, #48]
    d4c8:	ldr	x25, [sp, #64]
    d4cc:	ldp	x29, x30, [sp], #80
    d4d0:	b	bc7c <omp_is_initial_device@@OMP_4.0+0x614>

000000000000d4d4 <GOMP_loop_ull_guided_start@@GOMP_2.0>:
    d4d4:	stp	x29, x30, [sp, #-80]!
    d4d8:	mov	x29, sp
    d4dc:	stp	x19, x20, [sp, #16]
    d4e0:	mov	x19, x5
    d4e4:	mov	x20, x6
    d4e8:	stp	x21, x22, [sp, #32]
    d4ec:	mov	x21, x1
    d4f0:	mov	x22, x2
    d4f4:	stp	x23, x24, [sp, #48]
    d4f8:	mov	x23, x3
    d4fc:	mov	x24, x4
    d500:	str	x25, [sp, #64]
    d504:	and	w25, w0, #0xff
    d508:	mov	x0, #0x0                   	// #0
    d50c:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    d510:	tst	w0, #0xff
    d514:	b.eq	d54c <GOMP_loop_ull_guided_start@@GOMP_2.0+0x78>  // b.none
    d518:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d51c:	ldr	x0, [x0, #4016]
    d520:	mrs	x7, tpidr_el0
    d524:	mov	x6, x24
    d528:	mov	x4, x23
    d52c:	add	x0, x7, x0
    d530:	mov	x3, x22
    d534:	mov	x2, x21
    d538:	mov	w1, w25
    d53c:	mov	w5, #0x3                   	// #3
    d540:	ldr	x0, [x0, #24]
    d544:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    d548:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    d54c:	mov	x1, x20
    d550:	mov	x0, x19
    d554:	ldp	x19, x20, [sp, #16]
    d558:	ldp	x21, x22, [sp, #32]
    d55c:	ldp	x23, x24, [sp, #48]
    d560:	ldr	x25, [sp, #64]
    d564:	ldp	x29, x30, [sp], #80
    d568:	b	be04 <omp_is_initial_device@@OMP_4.0+0x79c>

000000000000d56c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    d56c:	mov	x6, x5
    d570:	adrp	x5, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d574:	ldr	x5, [x5, #4016]
    d578:	mrs	x7, tpidr_el0
    d57c:	add	x5, x7, x5
    d580:	adrp	x7, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    d584:	add	x7, x7, #0x2c0
    d588:	ldr	x5, [x5, #80]
    d58c:	cmp	x5, #0x0
    d590:	add	x8, x5, #0x90
    d594:	csel	x7, x7, x8, eq  // eq = none
    d598:	ldr	w5, [x7, #8]
    d59c:	and	w5, w5, #0x7fffffff
    d5a0:	sub	w5, w5, #0x1
    d5a4:	cmp	w5, #0x3
    d5a8:	b.hi	d5f8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x8c>  // b.pmore
    d5ac:	adrp	x8, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    d5b0:	and	w0, w0, #0xff
    d5b4:	add	x8, x8, #0x564
    d5b8:	ldrb	w5, [x8, w5, uxtw]
    d5bc:	adr	x8, d5c8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x5c>
    d5c0:	add	x5, x8, w5, sxtb #2
    d5c4:	br	x5
    d5c8:	mov	x5, x4
    d5cc:	ldrsw	x4, [x7, #12]
    d5d0:	b	d394 <GOMP_loop_ull_static_start@@GOMP_2.0>
    d5d4:	mov	x5, x4
    d5d8:	ldrsw	x4, [x7, #12]
    d5dc:	b	d43c <GOMP_loop_ull_dynamic_start@@GOMP_2.0>
    d5e0:	mov	x5, x4
    d5e4:	ldrsw	x4, [x7, #12]
    d5e8:	b	d4d4 <GOMP_loop_ull_guided_start@@GOMP_2.0>
    d5ec:	mov	x5, x4
    d5f0:	mov	x4, #0x0                   	// #0
    d5f4:	b	d5d0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x64>
    d5f8:	stp	x29, x30, [sp, #-16]!
    d5fc:	mov	x29, sp
    d600:	bl	88b0 <abort@plt>

000000000000d604 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>:
    d604:	stp	x29, x30, [sp, #-80]!
    d608:	mov	x29, sp
    d60c:	stp	x19, x20, [sp, #16]
    d610:	mov	x20, x5
    d614:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d618:	ldr	x19, [x19, #4016]
    d61c:	stp	x25, x26, [sp, #64]
    d620:	and	w26, w0, #0xff
    d624:	mrs	x0, tpidr_el0
    d628:	add	x19, x0, x19
    d62c:	stp	x21, x22, [sp, #32]
    d630:	mov	x25, x4
    d634:	stp	x23, x24, [sp, #48]
    d638:	mov	x22, x1
    d63c:	mov	x23, x2
    d640:	mov	x24, x3
    d644:	mov	x21, x6
    d648:	mov	x0, #0x1                   	// #1
    d64c:	str	xzr, [x19, #72]
    d650:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    d654:	tst	w0, #0xff
    d658:	b.eq	d684 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x80>  // b.none
    d65c:	ldr	x0, [x19, #24]
    d660:	mov	x6, x25
    d664:	mov	x4, x24
    d668:	mov	x3, x23
    d66c:	mov	x2, x22
    d670:	mov	w1, w26
    d674:	mov	w5, #0x1                   	// #1
    d678:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    d67c:	bl	e420 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x200>
    d680:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    d684:	mov	x1, x21
    d688:	mov	x0, x20
    d68c:	bl	ba78 <omp_is_initial_device@@OMP_4.0+0x410>
    d690:	cmp	w0, #0x0
    d694:	cset	w0, eq  // eq = none
    d698:	ldp	x19, x20, [sp, #16]
    d69c:	ldp	x21, x22, [sp, #32]
    d6a0:	ldp	x23, x24, [sp, #48]
    d6a4:	ldp	x25, x26, [sp, #64]
    d6a8:	ldp	x29, x30, [sp], #80
    d6ac:	ret

000000000000d6b0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>:
    d6b0:	stp	x29, x30, [sp, #-96]!
    d6b4:	mov	x29, sp
    d6b8:	stp	x19, x20, [sp, #16]
    d6bc:	mov	x20, x5
    d6c0:	mrs	x19, tpidr_el0
    d6c4:	stp	x21, x22, [sp, #32]
    d6c8:	mov	x22, x6
    d6cc:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d6d0:	ldr	x21, [x21, #4016]
    d6d4:	stp	x23, x24, [sp, #48]
    d6d8:	mov	x23, x1
    d6dc:	mov	x24, x2
    d6e0:	stp	x25, x26, [sp, #64]
    d6e4:	mov	x25, x3
    d6e8:	mov	x26, x4
    d6ec:	str	x27, [sp, #80]
    d6f0:	and	w27, w0, #0xff
    d6f4:	mov	x0, #0x1                   	// #1
    d6f8:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    d6fc:	tst	w0, #0xff
    d700:	b.eq	d784 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xd4>  // b.none
    d704:	add	x9, x19, x21
    d708:	mov	x6, x26
    d70c:	mov	x4, x25
    d710:	mov	x3, x24
    d714:	mov	x2, x23
    d718:	mov	w1, w27
    d71c:	ldr	x0, [x9, #24]
    d720:	mov	w5, #0x2                   	// #2
    d724:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    d728:	ldr	x0, [x9, #24]
    d72c:	add	x0, x0, #0x40
    d730:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    d734:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    d738:	mov	x0, x20
    d73c:	mov	x1, x22
    d740:	bl	bc14 <omp_is_initial_device@@OMP_4.0+0x5ac>
    d744:	mov	w20, w0
    d748:	tst	w0, #0xff
    d74c:	b.eq	d754 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xa4>  // b.none
    d750:	bl	e2a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x88>
    d754:	add	x19, x19, x21
    d758:	ldr	x0, [x19, #24]
    d75c:	add	x0, x0, #0x40
    d760:	bl	d2f0 <GOMP_loop_end_nowait@@GOMP_1.0+0x13c>
    d764:	mov	w0, w20
    d768:	ldp	x19, x20, [sp, #16]
    d76c:	ldp	x21, x22, [sp, #32]
    d770:	ldp	x23, x24, [sp, #48]
    d774:	ldp	x25, x26, [sp, #64]
    d778:	ldr	x27, [sp, #80]
    d77c:	ldp	x29, x30, [sp], #96
    d780:	ret
    d784:	add	x0, x19, x21
    d788:	ldr	x0, [x0, #24]
    d78c:	add	x0, x0, #0x40
    d790:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    d794:	b	d738 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x88>

000000000000d798 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>:
    d798:	stp	x29, x30, [sp, #-96]!
    d79c:	mov	x29, sp
    d7a0:	stp	x19, x20, [sp, #16]
    d7a4:	mov	x20, x5
    d7a8:	mrs	x19, tpidr_el0
    d7ac:	stp	x21, x22, [sp, #32]
    d7b0:	mov	x22, x6
    d7b4:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d7b8:	ldr	x21, [x21, #4016]
    d7bc:	stp	x23, x24, [sp, #48]
    d7c0:	mov	x23, x1
    d7c4:	mov	x24, x2
    d7c8:	stp	x25, x26, [sp, #64]
    d7cc:	mov	x25, x3
    d7d0:	mov	x26, x4
    d7d4:	str	x27, [sp, #80]
    d7d8:	and	w27, w0, #0xff
    d7dc:	mov	x0, #0x1                   	// #1
    d7e0:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    d7e4:	tst	w0, #0xff
    d7e8:	b.eq	d86c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xd4>  // b.none
    d7ec:	add	x9, x19, x21
    d7f0:	mov	x6, x26
    d7f4:	mov	x4, x25
    d7f8:	mov	x3, x24
    d7fc:	mov	x2, x23
    d800:	mov	w1, w27
    d804:	ldr	x0, [x9, #24]
    d808:	mov	w5, #0x3                   	// #3
    d80c:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    d810:	ldr	x0, [x9, #24]
    d814:	add	x0, x0, #0x40
    d818:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    d81c:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    d820:	mov	x0, x20
    d824:	mov	x1, x22
    d828:	bl	bd68 <omp_is_initial_device@@OMP_4.0+0x700>
    d82c:	mov	w20, w0
    d830:	tst	w0, #0xff
    d834:	b.eq	d83c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xa4>  // b.none
    d838:	bl	e2a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x88>
    d83c:	add	x19, x19, x21
    d840:	ldr	x0, [x19, #24]
    d844:	add	x0, x0, #0x40
    d848:	bl	d2f0 <GOMP_loop_end_nowait@@GOMP_1.0+0x13c>
    d84c:	mov	w0, w20
    d850:	ldp	x19, x20, [sp, #16]
    d854:	ldp	x21, x22, [sp, #32]
    d858:	ldp	x23, x24, [sp, #48]
    d85c:	ldp	x25, x26, [sp, #64]
    d860:	ldr	x27, [sp, #80]
    d864:	ldp	x29, x30, [sp], #96
    d868:	ret
    d86c:	add	x0, x19, x21
    d870:	ldr	x0, [x0, #24]
    d874:	add	x0, x0, #0x40
    d878:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    d87c:	b	d820 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x88>

000000000000d880 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0>:
    d880:	mov	x6, x5
    d884:	adrp	x5, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d888:	ldr	x5, [x5, #4016]
    d88c:	mrs	x7, tpidr_el0
    d890:	add	x5, x7, x5
    d894:	adrp	x7, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    d898:	add	x7, x7, #0x2c0
    d89c:	ldr	x5, [x5, #80]
    d8a0:	cmp	x5, #0x0
    d8a4:	add	x8, x5, #0x90
    d8a8:	csel	x7, x7, x8, eq  // eq = none
    d8ac:	ldr	w5, [x7, #8]
    d8b0:	and	w5, w5, #0x7fffffff
    d8b4:	sub	w5, w5, #0x1
    d8b8:	cmp	w5, #0x3
    d8bc:	b.hi	d90c <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x8c>  // b.pmore
    d8c0:	adrp	x8, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    d8c4:	and	w0, w0, #0xff
    d8c8:	add	x8, x8, #0x568
    d8cc:	ldrb	w5, [x8, w5, uxtw]
    d8d0:	adr	x8, d8dc <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x5c>
    d8d4:	add	x5, x8, w5, sxtb #2
    d8d8:	br	x5
    d8dc:	mov	x5, x4
    d8e0:	ldrsw	x4, [x7, #12]
    d8e4:	b	d604 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
    d8e8:	mov	x5, x4
    d8ec:	ldrsw	x4, [x7, #12]
    d8f0:	b	d6b0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>
    d8f4:	mov	x5, x4
    d8f8:	ldrsw	x4, [x7, #12]
    d8fc:	b	d798 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>
    d900:	mov	x5, x4
    d904:	mov	x4, #0x0                   	// #0
    d908:	b	d8e4 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x64>
    d90c:	stp	x29, x30, [sp, #-16]!
    d910:	mov	x29, sp
    d914:	bl	88b0 <abort@plt>

000000000000d918 <GOMP_loop_ull_ordered_start@@GOMP_5.0>:
    d918:	stp	x29, x30, [sp, #-128]!
    d91c:	and	w0, w0, #0xff
    d920:	mov	x29, sp
    d924:	stp	x19, x20, [sp, #16]
    d928:	mov	x19, x4
    d92c:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    d930:	ldr	x20, [x20, #4016]
    d934:	stp	x21, x22, [sp, #32]
    d938:	mrs	x21, tpidr_el0
    d93c:	stp	x25, x26, [sp, #64]
    d940:	ldp	x22, x25, [sp, #128]
    d944:	str	w0, [sp, #108]
    d948:	add	x0, x21, x20
    d94c:	stp	x23, x24, [sp, #48]
    d950:	mov	x23, x6
    d954:	stp	x27, x28, [sp, #80]
    d958:	mov	x24, x7
    d95c:	mov	x27, x2
    d960:	str	xzr, [x0, #72]
    d964:	mov	x28, x3
    d968:	stp	x1, x5, [sp, #112]
    d96c:	cbz	x22, d974 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x5c>
    d970:	bl	13aac <GOMP_task_reduction_remap@@GOMP_5.0+0x3f8>
    d974:	cbz	x25, da4c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x134>
    d978:	ldr	x0, [x25]
    d97c:	add	x0, x0, #0x1
    d980:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    d984:	tst	w0, #0xff
    d988:	b.eq	da68 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x150>  // b.none
    d98c:	add	x1, sp, #0x78
    d990:	mov	x0, x19
    d994:	add	x26, x21, x20
    d998:	bl	d30c <GOMP_loop_end_nowait@@GOMP_1.0+0x158>
    d99c:	ldp	x2, x6, [sp, #112]
    d9a0:	mov	x19, x0
    d9a4:	mov	w5, w0
    d9a8:	ldrb	w1, [sp, #108]
    d9ac:	ldr	x0, [x26, #24]
    d9b0:	mov	x4, x28
    d9b4:	mov	x3, x27
    d9b8:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    d9bc:	cbz	x22, d9e0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xc8>
    d9c0:	mov	x0, x22
    d9c4:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    d9c8:	ldr	x0, [x26, #80]
    d9cc:	mov	w1, #0x1                   	// #1
    d9d0:	ldr	x0, [x0, #40]
    d9d4:	strb	w1, [x0, #50]
    d9d8:	ldr	x0, [x26, #24]
    d9dc:	str	x22, [x0, #88]
    d9e0:	cmp	x19, #0x1
    d9e4:	b.ne	da54 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x13c>  // b.any
    d9e8:	bl	e420 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x200>
    d9ec:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    d9f0:	cbz	x25, da20 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x108>
    d9f4:	add	x1, x21, x20
    d9f8:	ldr	x0, [x1, #24]
    d9fc:	ldr	x1, [x1, #16]
    da00:	ldr	x0, [x0, #32]
    da04:	cbz	x1, daa0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x188>
    da08:	ldr	w1, [x1]
    da0c:	lsl	x1, x1, #2
    da10:	add	x0, x0, x1
    da14:	add	x0, x0, #0x7
    da18:	and	x0, x0, #0xfffffffffffffff8
    da1c:	str	x0, [x25]
    da20:	sub	x19, x19, #0x1
    da24:	cmp	x19, #0x3
    da28:	b.hi	dae4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1cc>  // b.pmore
    da2c:	cmp	w19, #0x3
    da30:	b.hi	dae4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1cc>  // b.pmore
    da34:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    da38:	add	x1, x1, #0x56c
    da3c:	ldrb	w0, [x1, w19, uxtw]
    da40:	adr	x1, da4c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x134>
    da44:	add	x0, x1, w0, sxtb #2
    da48:	br	x0
    da4c:	mov	x0, #0x1                   	// #1
    da50:	b	d980 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x68>
    da54:	add	x0, x21, x20
    da58:	ldr	x0, [x0, #24]
    da5c:	add	x0, x0, #0x40
    da60:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    da64:	b	d9ec <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xd4>
    da68:	cbz	x22, da80 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x168>
    da6c:	add	x0, x21, x20
    da70:	ldr	x0, [x0, #24]
    da74:	ldr	x1, [x0, #88]
    da78:	mov	x0, x22
    da7c:	bl	138f4 <GOMP_task_reduction_remap@@GOMP_5.0+0x240>
    da80:	add	x0, x21, x20
    da84:	ldr	x0, [x0, #24]
    da88:	ldr	w19, [x0]
    da8c:	cmp	x19, #0x1
    da90:	b.eq	dae8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1d0>  // b.none
    da94:	add	x0, x0, #0x40
    da98:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    da9c:	b	d9f0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xd8>
    daa0:	mov	x1, #0x4                   	// #4
    daa4:	b	da10 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xf8>
    daa8:	mov	x1, x24
    daac:	mov	x0, x23
    dab0:	bl	bc14 <omp_is_initial_device@@OMP_4.0+0x5ac>
    dab4:	and	w19, w0, #0xff
    dab8:	cbz	w19, dac0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1a8>
    dabc:	bl	e2a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x88>
    dac0:	add	x20, x21, x20
    dac4:	ldr	x0, [x20, #24]
    dac8:	add	x0, x0, #0x40
    dacc:	bl	d2f0 <GOMP_loop_end_nowait@@GOMP_1.0+0x13c>
    dad0:	b	db00 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1e8>
    dad4:	mov	x1, x24
    dad8:	mov	x0, x23
    dadc:	bl	bd68 <omp_is_initial_device@@OMP_4.0+0x700>
    dae0:	b	dab4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x19c>
    dae4:	bl	88b0 <abort@plt>
    dae8:	cbnz	x25, d9f4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xdc>
    daec:	mov	x1, x24
    daf0:	mov	x0, x23
    daf4:	bl	ba78 <omp_is_initial_device@@OMP_4.0+0x410>
    daf8:	cmp	w0, #0x0
    dafc:	cset	w19, eq  // eq = none
    db00:	mov	w0, w19
    db04:	ldp	x19, x20, [sp, #16]
    db08:	ldp	x21, x22, [sp, #32]
    db0c:	ldp	x23, x24, [sp, #48]
    db10:	ldp	x25, x26, [sp, #64]
    db14:	ldp	x27, x28, [sp, #80]
    db18:	ldp	x29, x30, [sp], #128
    db1c:	ret

000000000000db20 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>:
    db20:	stp	x29, x30, [sp, #-64]!
    db24:	mov	x29, sp
    db28:	stp	x21, x22, [sp, #32]
    db2c:	mov	x22, x3
    db30:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    db34:	ldr	x21, [x21, #4016]
    db38:	stp	x19, x20, [sp, #16]
    db3c:	mov	x19, x1
    db40:	mrs	x1, tpidr_el0
    db44:	add	x21, x1, x21
    db48:	stp	x23, x24, [sp, #48]
    db4c:	mov	x20, x2
    db50:	mov	w24, w0
    db54:	mov	x23, x4
    db58:	mov	x0, #0x0                   	// #0
    db5c:	str	xzr, [x21, #72]
    db60:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    db64:	tst	w0, #0xff
    db68:	b.eq	dba4 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x84>  // b.none
    db6c:	ldr	x3, [x19]
    db70:	mov	w5, #0x1                   	// #1
    db74:	ldr	x0, [x21, #24]
    db78:	mov	w1, w5
    db7c:	mov	x6, x20
    db80:	mov	x4, #0x1                   	// #1
    db84:	mov	x2, #0x0                   	// #0
    db88:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    db8c:	mov	x2, x20
    db90:	mov	x1, x19
    db94:	mov	w0, w24
    db98:	mov	x3, #0x0                   	// #0
    db9c:	bl	eae8 <GOMP_doacross_wait@@GOMP_4.5+0x23c>
    dba0:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    dba4:	mov	x1, x23
    dba8:	mov	x0, x22
    dbac:	bl	ba78 <omp_is_initial_device@@OMP_4.0+0x410>
    dbb0:	cmp	w0, #0x0
    dbb4:	cset	w0, eq  // eq = none
    dbb8:	ldp	x19, x20, [sp, #16]
    dbbc:	ldp	x21, x22, [sp, #32]
    dbc0:	ldp	x23, x24, [sp, #48]
    dbc4:	ldp	x29, x30, [sp], #64
    dbc8:	ret

000000000000dbcc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>:
    dbcc:	stp	x29, x30, [sp, #-64]!
    dbd0:	mov	x29, sp
    dbd4:	stp	x19, x20, [sp, #16]
    dbd8:	mov	x19, x1
    dbdc:	mov	x20, x2
    dbe0:	stp	x21, x22, [sp, #32]
    dbe4:	mov	x21, x3
    dbe8:	mov	x22, x4
    dbec:	str	x23, [sp, #48]
    dbf0:	mov	w23, w0
    dbf4:	mov	x0, #0x0                   	// #0
    dbf8:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    dbfc:	tst	w0, #0xff
    dc00:	b.eq	dc4c <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x80>  // b.none
    dc04:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    dc08:	ldr	x0, [x0, #4016]
    dc0c:	mrs	x7, tpidr_el0
    dc10:	ldr	x3, [x19]
    dc14:	add	x0, x7, x0
    dc18:	mov	x4, #0x1                   	// #1
    dc1c:	mov	x6, x20
    dc20:	mov	w1, w4
    dc24:	mov	w5, #0x2                   	// #2
    dc28:	ldr	x0, [x0, #24]
    dc2c:	mov	x2, #0x0                   	// #0
    dc30:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    dc34:	mov	x2, x20
    dc38:	mov	x1, x19
    dc3c:	mov	w0, w23
    dc40:	mov	x3, #0x0                   	// #0
    dc44:	bl	eae8 <GOMP_doacross_wait@@GOMP_4.5+0x23c>
    dc48:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    dc4c:	mov	x1, x22
    dc50:	mov	x0, x21
    dc54:	ldp	x19, x20, [sp, #16]
    dc58:	ldp	x21, x22, [sp, #32]
    dc5c:	ldr	x23, [sp, #48]
    dc60:	ldp	x29, x30, [sp], #64
    dc64:	b	bc7c <omp_is_initial_device@@OMP_4.0+0x614>

000000000000dc68 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>:
    dc68:	stp	x29, x30, [sp, #-64]!
    dc6c:	mov	x29, sp
    dc70:	stp	x19, x20, [sp, #16]
    dc74:	mov	x19, x1
    dc78:	mov	x20, x2
    dc7c:	stp	x21, x22, [sp, #32]
    dc80:	mov	x21, x3
    dc84:	mov	x22, x4
    dc88:	str	x23, [sp, #48]
    dc8c:	mov	w23, w0
    dc90:	mov	x0, #0x0                   	// #0
    dc94:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    dc98:	tst	w0, #0xff
    dc9c:	b.eq	dce8 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x80>  // b.none
    dca0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    dca4:	ldr	x0, [x0, #4016]
    dca8:	mrs	x7, tpidr_el0
    dcac:	ldr	x3, [x19]
    dcb0:	add	x0, x7, x0
    dcb4:	mov	x4, #0x1                   	// #1
    dcb8:	mov	x6, x20
    dcbc:	mov	w1, w4
    dcc0:	mov	w5, #0x3                   	// #3
    dcc4:	ldr	x0, [x0, #24]
    dcc8:	mov	x2, #0x0                   	// #0
    dccc:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    dcd0:	mov	x2, x20
    dcd4:	mov	x1, x19
    dcd8:	mov	w0, w23
    dcdc:	mov	x3, #0x0                   	// #0
    dce0:	bl	eae8 <GOMP_doacross_wait@@GOMP_4.5+0x23c>
    dce4:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    dce8:	mov	x1, x22
    dcec:	mov	x0, x21
    dcf0:	ldp	x19, x20, [sp, #16]
    dcf4:	ldp	x21, x22, [sp, #32]
    dcf8:	ldr	x23, [sp, #48]
    dcfc:	ldp	x29, x30, [sp], #64
    dd00:	b	be04 <omp_is_initial_device@@OMP_4.0+0x79c>

000000000000dd04 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5>:
    dd04:	mov	x4, x3
    dd08:	adrp	x3, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    dd0c:	ldr	x3, [x3, #4016]
    dd10:	mrs	x5, tpidr_el0
    dd14:	add	x3, x5, x3
    dd18:	adrp	x5, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    dd1c:	add	x5, x5, #0x2c0
    dd20:	ldr	x3, [x3, #80]
    dd24:	cmp	x3, #0x0
    dd28:	add	x6, x3, #0x90
    dd2c:	csel	x5, x5, x6, eq  // eq = none
    dd30:	ldr	w3, [x5, #8]
    dd34:	and	w3, w3, #0x7fffffff
    dd38:	sub	w3, w3, #0x1
    dd3c:	cmp	w3, #0x3
    dd40:	b.hi	dd8c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x88>  // b.pmore
    dd44:	adrp	x6, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    dd48:	add	x6, x6, #0x570
    dd4c:	ldrb	w3, [x6, w3, uxtw]
    dd50:	adr	x6, dd5c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x58>
    dd54:	add	x3, x6, w3, sxtb #2
    dd58:	br	x3
    dd5c:	mov	x3, x2
    dd60:	ldrsw	x2, [x5, #12]
    dd64:	b	db20 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
    dd68:	mov	x3, x2
    dd6c:	ldrsw	x2, [x5, #12]
    dd70:	b	dbcc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>
    dd74:	mov	x3, x2
    dd78:	ldrsw	x2, [x5, #12]
    dd7c:	b	dc68 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>
    dd80:	mov	x3, x2
    dd84:	mov	x2, #0x0                   	// #0
    dd88:	b	dd64 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x60>
    dd8c:	stp	x29, x30, [sp, #-16]!
    dd90:	mov	x29, sp
    dd94:	bl	88b0 <abort@plt>

000000000000dd98 <GOMP_loop_ull_static_next@@GOMP_2.0>:
    dd98:	stp	x29, x30, [sp, #-16]!
    dd9c:	mov	x29, sp
    dda0:	bl	ba78 <omp_is_initial_device@@OMP_4.0+0x410>
    dda4:	cmp	w0, #0x0
    dda8:	cset	w0, eq  // eq = none
    ddac:	ldp	x29, x30, [sp], #16
    ddb0:	ret

000000000000ddb4 <GOMP_loop_ull_dynamic_next@@GOMP_2.0>:
    ddb4:	b	bc7c <omp_is_initial_device@@OMP_4.0+0x614>

000000000000ddb8 <GOMP_loop_ull_guided_next@@GOMP_2.0>:
    ddb8:	b	be04 <omp_is_initial_device@@OMP_4.0+0x79c>

000000000000ddbc <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
    ddbc:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ddc0:	ldr	x2, [x2, #4016]
    ddc4:	mrs	x3, tpidr_el0
    ddc8:	add	x2, x3, x2
    ddcc:	ldr	x2, [x2, #24]
    ddd0:	ldr	w2, [x2]
    ddd4:	sub	w2, w2, #0x1
    ddd8:	cmp	w2, #0x3
    dddc:	b.hi	de04 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x48>  // b.pmore
    dde0:	adrp	x3, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    dde4:	add	x3, x3, #0x574
    dde8:	ldrb	w2, [x3, w2, uxtw]
    ddec:	adr	x3, ddf8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x3c>
    ddf0:	add	x2, x3, w2, sxtb #2
    ddf4:	br	x2
    ddf8:	b	dd98 <GOMP_loop_ull_static_next@@GOMP_2.0>
    ddfc:	b	bc7c <omp_is_initial_device@@OMP_4.0+0x614>
    de00:	b	be04 <omp_is_initial_device@@OMP_4.0+0x79c>
    de04:	stp	x29, x30, [sp, #-16]!
    de08:	mov	x29, sp
    de0c:	bl	88b0 <abort@plt>

000000000000de10 <GOMP_loop_ull_start@@GOMP_5.0>:
    de10:	stp	x29, x30, [sp, #-112]!
    de14:	and	w0, w0, #0xff
    de18:	mov	x29, sp
    de1c:	stp	x19, x20, [sp, #16]
    de20:	mrs	x19, tpidr_el0
    de24:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    de28:	ldr	x20, [x20, #4016]
    de2c:	stp	x21, x22, [sp, #32]
    de30:	ldp	x22, x21, [sp, #112]
    de34:	str	w0, [sp, #100]
    de38:	add	x0, x19, x20
    de3c:	stp	x23, x24, [sp, #48]
    de40:	mov	x23, x6
    de44:	stp	x25, x26, [sp, #64]
    de48:	mov	x24, x7
    de4c:	mov	x25, x1
    de50:	stp	x27, x28, [sp, #80]
    de54:	mov	x26, x2
    de58:	mov	x27, x3
    de5c:	str	xzr, [x0, #72]
    de60:	mov	x28, x4
    de64:	str	x5, [sp, #104]
    de68:	cbz	x22, de70 <GOMP_loop_ull_start@@GOMP_5.0+0x60>
    de6c:	bl	13aac <GOMP_task_reduction_remap@@GOMP_5.0+0x3f8>
    de70:	mov	x0, #0x0                   	// #0
    de74:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    de78:	tst	w0, #0xff
    de7c:	b.eq	df38 <GOMP_loop_ull_start@@GOMP_5.0+0x128>  // b.none
    de80:	mov	x0, x28
    de84:	add	x28, x19, x20
    de88:	add	x1, sp, #0x68
    de8c:	bl	d30c <GOMP_loop_end_nowait@@GOMP_1.0+0x158>
    de90:	ldrb	w1, [sp, #100]
    de94:	mov	w5, w0
    de98:	ldr	x0, [x28, #24]
    de9c:	mov	x4, x27
    dea0:	ldr	x6, [sp, #104]
    dea4:	mov	x3, x26
    dea8:	mov	x2, x25
    deac:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    deb0:	cbz	x22, ded4 <GOMP_loop_ull_start@@GOMP_5.0+0xc4>
    deb4:	mov	x0, x22
    deb8:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    debc:	ldr	x0, [x28, #80]
    dec0:	mov	w1, #0x1                   	// #1
    dec4:	ldr	x0, [x0, #40]
    dec8:	strb	w1, [x0, #50]
    decc:	ldr	x0, [x28, #24]
    ded0:	str	x22, [x0, #88]
    ded4:	cbz	x21, def8 <GOMP_loop_ull_start@@GOMP_5.0+0xe8>
    ded8:	add	x19, x19, x20
    dedc:	ldr	x0, [x21]
    dee0:	ldr	x19, [x19, #24]
    dee4:	cmp	x0, #0x20
    dee8:	b.ls	df24 <GOMP_loop_ull_start@@GOMP_5.0+0x114>  // b.plast
    deec:	bl	ade4 <fprintf@plt+0x2284>
    def0:	str	x0, [x19, #32]
    def4:	str	x0, [x21]
    def8:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    defc:	mov	x1, x24
    df00:	mov	x0, x23
    df04:	bl	ddbc <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    df08:	ldp	x19, x20, [sp, #16]
    df0c:	ldp	x21, x22, [sp, #32]
    df10:	ldp	x23, x24, [sp, #48]
    df14:	ldp	x25, x26, [sp, #64]
    df18:	ldp	x27, x28, [sp, #80]
    df1c:	ldp	x29, x30, [sp], #112
    df20:	ret
    df24:	mov	x2, x0
    df28:	mov	w1, #0x0                   	// #0
    df2c:	add	x0, x19, #0x60
    df30:	bl	8800 <memset@plt>
    df34:	b	def4 <GOMP_loop_ull_start@@GOMP_5.0+0xe4>
    df38:	cbz	x22, df50 <GOMP_loop_ull_start@@GOMP_5.0+0x140>
    df3c:	add	x0, x19, x20
    df40:	ldr	x0, [x0, #24]
    df44:	ldr	x1, [x0, #88]
    df48:	mov	x0, x22
    df4c:	bl	138f4 <GOMP_task_reduction_remap@@GOMP_5.0+0x240>
    df50:	cbz	x21, defc <GOMP_loop_ull_start@@GOMP_5.0+0xec>
    df54:	add	x19, x19, x20
    df58:	ldr	x0, [x19, #24]
    df5c:	ldr	x0, [x0, #32]
    df60:	str	x0, [x21]
    df64:	b	defc <GOMP_loop_ull_start@@GOMP_5.0+0xec>

000000000000df68 <GOMP_loop_ull_doacross_start@@GOMP_5.0>:
    df68:	stp	x29, x30, [sp, #-112]!
    df6c:	mov	x29, sp
    df70:	stp	x21, x22, [sp, #32]
    df74:	mrs	x21, tpidr_el0
    df78:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    df7c:	ldr	x22, [x22, #4016]
    df80:	stp	x27, x28, [sp, #80]
    df84:	mov	w27, w0
    df88:	add	x0, x21, x22
    df8c:	stp	x19, x20, [sp, #16]
    df90:	mov	x19, x6
    df94:	mov	x20, x7
    df98:	stp	x23, x24, [sp, #48]
    df9c:	mov	x23, x1
    dfa0:	mov	x24, x4
    dfa4:	stp	x25, x26, [sp, #64]
    dfa8:	mov	x26, x2
    dfac:	mov	x25, x5
    dfb0:	str	xzr, [x0, #72]
    dfb4:	str	x3, [sp, #104]
    dfb8:	cbz	x6, dfc0 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x58>
    dfbc:	bl	13aac <GOMP_task_reduction_remap@@GOMP_5.0+0x3f8>
    dfc0:	mov	x0, #0x0                   	// #0
    dfc4:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    dfc8:	tst	w0, #0xff
    dfcc:	b.eq	e08c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x124>  // b.none
    dfd0:	cbz	x20, e084 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x11c>
    dfd4:	ldr	x28, [x20]
    dfd8:	mov	x0, x26
    dfdc:	add	x26, x21, x22
    dfe0:	add	x1, sp, #0x68
    dfe4:	bl	d30c <GOMP_loop_end_nowait@@GOMP_1.0+0x158>
    dfe8:	mov	w5, w0
    dfec:	ldr	x3, [x23]
    dff0:	mov	x4, #0x1                   	// #1
    dff4:	ldr	x0, [x26, #24]
    dff8:	mov	w1, w4
    dffc:	ldr	x6, [sp, #104]
    e000:	mov	x2, #0x0                   	// #0
    e004:	bl	d1b8 <GOMP_loop_end_nowait@@GOMP_1.0+0x4>
    e008:	ldr	x2, [sp, #104]
    e00c:	mov	x3, x28
    e010:	mov	x1, x23
    e014:	mov	w0, w27
    e018:	bl	eae8 <GOMP_doacross_wait@@GOMP_4.5+0x23c>
    e01c:	cbz	x19, e040 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xd8>
    e020:	mov	x0, x19
    e024:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    e028:	ldr	x0, [x26, #80]
    e02c:	mov	w1, #0x1                   	// #1
    e030:	ldr	x0, [x0, #40]
    e034:	strb	w1, [x0, #50]
    e038:	ldr	x0, [x26, #24]
    e03c:	str	x19, [x0, #88]
    e040:	bl	d28c <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
    e044:	cbz	x20, e05c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xf4>
    e048:	add	x21, x21, x22
    e04c:	ldr	x0, [x21, #24]
    e050:	ldr	x0, [x0, #32]
    e054:	ldr	x0, [x0, #48]
    e058:	str	x0, [x20]
    e05c:	mov	x1, x25
    e060:	mov	x0, x24
    e064:	bl	ddbc <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    e068:	ldp	x19, x20, [sp, #16]
    e06c:	ldp	x21, x22, [sp, #32]
    e070:	ldp	x23, x24, [sp, #48]
    e074:	ldp	x25, x26, [sp, #64]
    e078:	ldp	x27, x28, [sp, #80]
    e07c:	ldp	x29, x30, [sp], #112
    e080:	ret
    e084:	mov	x28, #0x0                   	// #0
    e088:	b	dfd8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x70>
    e08c:	cbz	x19, e044 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xdc>
    e090:	add	x0, x21, x22
    e094:	ldr	x0, [x0, #24]
    e098:	ldr	x1, [x0, #88]
    e09c:	mov	x0, x19
    e0a0:	bl	138f4 <GOMP_task_reduction_remap@@GOMP_5.0+0x240>
    e0a4:	b	e044 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xdc>

000000000000e0a8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>:
    e0a8:	stp	x29, x30, [sp, #-48]!
    e0ac:	mov	x29, sp
    e0b0:	stp	x21, x22, [sp, #32]
    e0b4:	mov	x21, x1
    e0b8:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e0bc:	ldr	x22, [x22, #4016]
    e0c0:	stp	x19, x20, [sp, #16]
    e0c4:	mov	x19, x0
    e0c8:	mrs	x20, tpidr_el0
    e0cc:	bl	e4ac <GOMP_ordered_start@@GOMP_1.0>
    e0d0:	add	x0, x20, x22
    e0d4:	ldr	x0, [x0, #24]
    e0d8:	add	x0, x0, #0x40
    e0dc:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    e0e0:	mov	x0, x19
    e0e4:	mov	x1, x21
    e0e8:	bl	ba78 <omp_is_initial_device@@OMP_4.0+0x410>
    e0ec:	mov	w19, w0
    e0f0:	tbnz	w0, #31, e0f8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x50>
    e0f4:	bl	e454 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x234>
    e0f8:	add	x20, x20, x22
    e0fc:	ldr	x0, [x20, #24]
    e100:	add	x0, x0, #0x40
    e104:	bl	d2f0 <GOMP_loop_end_nowait@@GOMP_1.0+0x13c>
    e108:	cmp	w19, #0x0
    e10c:	cset	w0, eq  // eq = none
    e110:	ldp	x19, x20, [sp, #16]
    e114:	ldp	x21, x22, [sp, #32]
    e118:	ldp	x29, x30, [sp], #48
    e11c:	ret

000000000000e120 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>:
    e120:	stp	x29, x30, [sp, #-48]!
    e124:	mov	x29, sp
    e128:	stp	x21, x22, [sp, #32]
    e12c:	mov	x21, x1
    e130:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e134:	ldr	x22, [x22, #4016]
    e138:	stp	x19, x20, [sp, #16]
    e13c:	mov	x19, x0
    e140:	mrs	x20, tpidr_el0
    e144:	bl	e4ac <GOMP_ordered_start@@GOMP_1.0>
    e148:	add	x0, x20, x22
    e14c:	ldr	x0, [x0, #24]
    e150:	add	x0, x0, #0x40
    e154:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    e158:	mov	x0, x19
    e15c:	mov	x1, x21
    e160:	bl	bc14 <omp_is_initial_device@@OMP_4.0+0x5ac>
    e164:	mov	w19, w0
    e168:	tst	w0, #0xff
    e16c:	b.eq	e198 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x78>  // b.none
    e170:	bl	e384 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x164>
    e174:	add	x20, x20, x22
    e178:	ldr	x0, [x20, #24]
    e17c:	add	x0, x0, #0x40
    e180:	bl	d2f0 <GOMP_loop_end_nowait@@GOMP_1.0+0x13c>
    e184:	mov	w0, w19
    e188:	ldp	x19, x20, [sp, #16]
    e18c:	ldp	x21, x22, [sp, #32]
    e190:	ldp	x29, x30, [sp], #48
    e194:	ret
    e198:	bl	e318 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf8>
    e19c:	b	e174 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x54>

000000000000e1a0 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>:
    e1a0:	stp	x29, x30, [sp, #-48]!
    e1a4:	mov	x29, sp
    e1a8:	stp	x21, x22, [sp, #32]
    e1ac:	mov	x21, x1
    e1b0:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e1b4:	ldr	x22, [x22, #4016]
    e1b8:	stp	x19, x20, [sp, #16]
    e1bc:	mov	x19, x0
    e1c0:	mrs	x20, tpidr_el0
    e1c4:	bl	e4ac <GOMP_ordered_start@@GOMP_1.0>
    e1c8:	add	x0, x20, x22
    e1cc:	ldr	x0, [x0, #24]
    e1d0:	add	x0, x0, #0x40
    e1d4:	bl	d2c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>
    e1d8:	mov	x0, x19
    e1dc:	mov	x1, x21
    e1e0:	bl	bd68 <omp_is_initial_device@@OMP_4.0+0x700>
    e1e4:	mov	w19, w0
    e1e8:	tst	w0, #0xff
    e1ec:	b.eq	e218 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x78>  // b.none
    e1f0:	bl	e384 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x164>
    e1f4:	add	x20, x20, x22
    e1f8:	ldr	x0, [x20, #24]
    e1fc:	add	x0, x0, #0x40
    e200:	bl	d2f0 <GOMP_loop_end_nowait@@GOMP_1.0+0x13c>
    e204:	mov	w0, w19
    e208:	ldp	x19, x20, [sp, #16]
    e20c:	ldp	x21, x22, [sp, #32]
    e210:	ldp	x29, x30, [sp], #48
    e214:	ret
    e218:	bl	e318 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf8>
    e21c:	b	e1f4 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x54>

000000000000e220 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0>:
    e220:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e224:	ldr	x2, [x2, #4016]
    e228:	mrs	x3, tpidr_el0
    e22c:	add	x2, x3, x2
    e230:	ldr	x2, [x2, #24]
    e234:	ldr	w2, [x2]
    e238:	sub	w2, w2, #0x1
    e23c:	cmp	w2, #0x3
    e240:	b.hi	e268 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x48>  // b.pmore
    e244:	adrp	x3, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    e248:	add	x3, x3, #0x578
    e24c:	ldrb	w2, [x3, w2, uxtw]
    e250:	adr	x3, e25c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3c>
    e254:	add	x2, x3, w2, sxtb #2
    e258:	br	x2
    e25c:	b	e0a8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>
    e260:	b	e120 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>
    e264:	b	e1a0 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>
    e268:	stp	x29, x30, [sp, #-16]!
    e26c:	mov	x29, sp
    e270:	bl	88b0 <abort@plt>
    e274:	ldr	w1, [x0]
    e278:	add	w2, w1, #0x1
    e27c:	and	w2, w2, #0x7fffffff
    e280:	ldxr	w3, [x0]
    e284:	cmp	w3, w1
    e288:	b.ne	e294 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x74>  // b.any
    e28c:	stlxr	w4, w2, [x0]
    e290:	cmp	w4, #0x0
    e294:	mov	w1, w3
    e298:	b.ne	e278 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58>  // b.any
    e29c:	tbz	w3, #31, e2a4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x84>
    e2a0:	b	15d58 <omp_get_num_procs@@OMP_1.0+0xe4>
    e2a4:	ret
    e2a8:	adrp	x5, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e2ac:	ldr	x5, [x5, #4016]
    e2b0:	mrs	x2, tpidr_el0
    e2b4:	add	x0, x2, x5
    e2b8:	ldr	x3, [x0, #16]
    e2bc:	cbz	x3, e314 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf4>
    e2c0:	ldr	w4, [x3]
    e2c4:	cmp	w4, #0x1
    e2c8:	b.eq	e314 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf4>  // b.none
    e2cc:	ldr	x1, [x0, #24]
    e2d0:	ldr	w6, [x1, #40]
    e2d4:	ldr	w0, [x1, #48]
    e2d8:	add	w0, w0, w6
    e2dc:	cmp	w4, w0
    e2e0:	b.hi	e2e8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xc8>  // b.pmore
    e2e4:	sub	w0, w0, w4
    e2e8:	add	x2, x2, x5
    e2ec:	ldr	x4, [x1, #32]
    e2f0:	ldr	w2, [x2, #40]
    e2f4:	str	w2, [x4, w0, uxtw #2]
    e2f8:	ldr	w0, [x1, #40]
    e2fc:	add	w4, w0, #0x1
    e300:	str	w4, [x1, #40]
    e304:	cbnz	w0, e314 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf4>
    e308:	ldr	x0, [x3, #80]
    e30c:	ldr	x0, [x0, w2, uxtw #3]
    e310:	b	e274 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x54>
    e314:	ret
    e318:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e31c:	ldr	x0, [x0, #4016]
    e320:	mrs	x1, tpidr_el0
    e324:	add	x0, x1, x0
    e328:	ldr	x2, [x0, #16]
    e32c:	cbz	x2, e380 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x160>
    e330:	ldr	w3, [x2]
    e334:	cmp	w3, #0x1
    e338:	b.eq	e380 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x160>  // b.none
    e33c:	ldr	x1, [x0, #24]
    e340:	mov	w0, #0xffffffff            	// #-1
    e344:	str	w0, [x1, #44]
    e348:	ldr	w0, [x1, #40]
    e34c:	sub	w0, w0, #0x1
    e350:	str	w0, [x1, #40]
    e354:	cbz	w0, e380 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x160>
    e358:	ldr	w0, [x1, #48]
    e35c:	add	w0, w0, #0x1
    e360:	cmp	w3, w0
    e364:	csel	w0, w0, wzr, ne  // ne = any
    e368:	str	w0, [x1, #48]
    e36c:	ldr	x1, [x1, #32]
    e370:	ldr	w1, [x1, w0, uxtw #2]
    e374:	ldr	x0, [x2, #80]
    e378:	ldr	x0, [x0, x1, lsl #3]
    e37c:	b	e274 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x54>
    e380:	ret
    e384:	adrp	x7, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e388:	ldr	x7, [x7, #4016]
    e38c:	mrs	x3, tpidr_el0
    e390:	add	x5, x3, x7
    e394:	ldr	x2, [x5, #16]
    e398:	cbz	x2, e41c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1fc>
    e39c:	ldr	w4, [x2]
    e3a0:	cmp	w4, #0x1
    e3a4:	b.eq	e41c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1fc>  // b.none
    e3a8:	ldr	x1, [x5, #24]
    e3ac:	mov	w0, #0xffffffff            	// #-1
    e3b0:	ldr	x6, [x2, #80]
    e3b4:	str	w0, [x1, #44]
    e3b8:	ldr	w0, [x1, #40]
    e3bc:	cmp	w0, #0x1
    e3c0:	b.ne	e3d0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1b0>  // b.any
    e3c4:	ldr	w0, [x5, #40]
    e3c8:	ldr	x0, [x6, x0, lsl #3]
    e3cc:	b	e274 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x54>
    e3d0:	cmp	w4, w0
    e3d4:	ldr	x5, [x1, #32]
    e3d8:	b.ls	e3fc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1dc>  // b.plast
    e3dc:	ldr	w8, [x1, #48]
    e3e0:	add	w0, w0, w8
    e3e4:	cmp	w4, w0
    e3e8:	b.hi	e3f0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1d0>  // b.pmore
    e3ec:	sub	w0, w0, w4
    e3f0:	add	x3, x3, x7
    e3f4:	ldr	w3, [x3, #40]
    e3f8:	str	w3, [x5, w0, uxtw #2]
    e3fc:	ldr	w0, [x1, #48]
    e400:	ldr	w2, [x2]
    e404:	add	w0, w0, #0x1
    e408:	cmp	w2, w0
    e40c:	csel	w0, w0, wzr, ne  // ne = any
    e410:	str	w0, [x1, #48]
    e414:	ldr	w0, [x5, w0, uxtw #2]
    e418:	b	e3c8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a8>
    e41c:	ret
    e420:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e424:	ldr	x0, [x0, #4016]
    e428:	mrs	x1, tpidr_el0
    e42c:	add	x0, x1, x0
    e430:	ldr	x0, [x0, #16]
    e434:	cbz	x0, e450 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x230>
    e438:	ldr	w1, [x0]
    e43c:	cmp	w1, #0x1
    e440:	b.eq	e450 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x230>  // b.none
    e444:	ldr	x0, [x0, #80]
    e448:	ldr	x0, [x0]
    e44c:	b	e274 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x54>
    e450:	ret
    e454:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e458:	ldr	x0, [x0, #4016]
    e45c:	mrs	x1, tpidr_el0
    e460:	add	x0, x1, x0
    e464:	ldr	x1, [x0, #16]
    e468:	cbz	x1, e4a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x288>
    e46c:	ldr	w3, [x1]
    e470:	cmp	w3, #0x1
    e474:	b.eq	e4a8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x288>  // b.none
    e478:	ldr	x2, [x0, #24]
    e47c:	mov	w4, #0xffffffff            	// #-1
    e480:	ldr	w0, [x0, #40]
    e484:	ldr	x1, [x1, #80]
    e488:	add	w0, w0, #0x1
    e48c:	cmp	w3, w0
    e490:	str	w4, [x2, #44]
    e494:	ldr	x2, [x2, #32]
    e498:	csel	w0, w0, wzr, ne  // ne = any
    e49c:	str	w0, [x2]
    e4a0:	ldr	x0, [x1, w0, uxtw #3]
    e4a4:	b	e274 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x54>
    e4a8:	ret

000000000000e4ac <GOMP_ordered_start@@GOMP_1.0>:
    e4ac:	stp	x29, x30, [sp, #-48]!
    e4b0:	mov	x29, sp
    e4b4:	str	x21, [sp, #32]
    e4b8:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e4bc:	ldr	x21, [x21, #4016]
    e4c0:	stp	x19, x20, [sp, #16]
    e4c4:	mrs	x19, tpidr_el0
    e4c8:	add	x1, x19, x21
    e4cc:	ldr	x0, [x1, #16]
    e4d0:	cbz	x0, e540 <GOMP_ordered_start@@GOMP_1.0+0x94>
    e4d4:	ldr	w2, [x0]
    e4d8:	cmp	w2, #0x1
    e4dc:	b.eq	e540 <GOMP_ordered_start@@GOMP_1.0+0x94>  // b.none
    e4e0:	ldr	x20, [x1, #24]
    e4e4:	dmb	ish
    e4e8:	ldr	w1, [x1, #40]
    e4ec:	ldr	w2, [x20, #44]
    e4f0:	cmp	w2, w1
    e4f4:	b.eq	e540 <GOMP_ordered_start@@GOMP_1.0+0x94>  // b.none
    e4f8:	ldr	x0, [x0, #80]
    e4fc:	ldr	x0, [x0, w1, uxtw #3]
    e500:	ldr	w1, [x0]
    e504:	tst	x1, #0x7fffffff
    e508:	b.ne	e514 <GOMP_ordered_start@@GOMP_1.0+0x68>  // b.any
    e50c:	bl	15dd4 <omp_get_num_procs@@OMP_1.0+0x160>
    e510:	b	e534 <GOMP_ordered_start@@GOMP_1.0+0x88>
    e514:	sub	w3, w1, #0x1
    e518:	ldaxr	w2, [x0]
    e51c:	cmp	w2, w1
    e520:	b.ne	e52c <GOMP_ordered_start@@GOMP_1.0+0x80>  // b.any
    e524:	stxr	w4, w3, [x0]
    e528:	cmp	w4, #0x0
    e52c:	mov	w1, w2
    e530:	b.ne	e504 <GOMP_ordered_start@@GOMP_1.0+0x58>  // b.any
    e534:	add	x19, x19, x21
    e538:	ldr	w0, [x19, #40]
    e53c:	str	w0, [x20, #44]
    e540:	ldp	x19, x20, [sp, #16]
    e544:	ldr	x21, [sp, #32]
    e548:	ldp	x29, x30, [sp], #48
    e54c:	ret

000000000000e550 <GOMP_ordered_end@@GOMP_1.0>:
    e550:	ret
    e554:	stp	x29, x30, [sp, #-368]!
    e558:	mov	x29, sp
    e55c:	stp	x23, x24, [sp, #48]
    e560:	mov	x24, x1
    e564:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e568:	ldr	x1, [x1, #4016]
    e56c:	stp	x25, x26, [sp, #64]
    e570:	mov	x25, x2
    e574:	mrs	x2, tpidr_el0
    e578:	add	x1, x2, x1
    e57c:	stp	x19, x20, [sp, #16]
    e580:	stp	x21, x22, [sp, #32]
    e584:	ldp	x2, x23, [x1, #16]
    e588:	stp	x27, x28, [sp, #80]
    e58c:	mov	x28, x3
    e590:	cbnz	x2, e5b0 <GOMP_ordered_end@@GOMP_1.0+0x60>
    e594:	cbz	x28, e6a0 <GOMP_ordered_end@@GOMP_1.0+0x150>
    e598:	add	x0, x28, #0x38
    e59c:	bl	ade4 <fprintf@plt+0x2284>
    e5a0:	add	x1, x0, #0x38
    e5a4:	str	x1, [x0, #48]
    e5a8:	str	x0, [x23, #32]
    e5ac:	b	e6a4 <GOMP_ordered_end@@GOMP_1.0+0x154>
    e5b0:	ldr	w19, [x2]
    e5b4:	cmp	w19, #0x1
    e5b8:	b.eq	e594 <GOMP_ordered_end@@GOMP_1.0+0x44>  // b.none
    e5bc:	mov	w26, w0
    e5c0:	add	x6, sp, #0x70
    e5c4:	add	x0, x3, #0x77
    e5c8:	mov	x2, #0x0                   	// #0
    e5cc:	mov	w27, #0x0                   	// #0
    e5d0:	mov	w4, #0x1                   	// #1
    e5d4:	mov	w5, #0x40                  	// #64
    e5d8:	cmp	w26, w2
    e5dc:	b.hi	e6c0 <GOMP_ordered_end@@GOMP_1.0+0x170>  // b.pmore
    e5e0:	ldr	w1, [x23]
    e5e4:	cmp	w1, #0x1
    e5e8:	b.ne	e704 <GOMP_ordered_end@@GOMP_1.0+0x1b4>  // b.any
    e5ec:	mov	w19, w19
    e5f0:	cmp	w27, #0x40
    e5f4:	mov	w3, w26
    e5f8:	b.hi	e720 <GOMP_ordered_end@@GOMP_1.0+0x1d0>  // b.pmore
    e5fc:	lsl	x21, x3, #2
    e600:	mov	x22, #0x8                   	// #8
    e604:	add	x22, x22, #0x3f
    e608:	and	x22, x22, #0xffffffffffffffc0
    e60c:	mul	x1, x19, x22
    e610:	stp	x1, x3, [sp, #96]
    e614:	add	x2, x1, x21
    e618:	add	x21, x21, #0x77
    e61c:	add	x0, x2, x0
    e620:	bl	adb0 <fprintf@plt+0x2250>
    e624:	add	x21, x0, x21
    e628:	and	x21, x21, #0xffffffffffffffc0
    e62c:	stp	x25, x22, [x0]
    e630:	mov	x20, x0
    e634:	str	w26, [x0, #16]
    e638:	strb	wzr, [x0, #20]
    e63c:	str	x21, [x0, #24]
    e640:	ldp	x1, x3, [sp, #96]
    e644:	cbz	x28, e72c <GOMP_ordered_end@@GOMP_1.0+0x1dc>
    e648:	add	x0, x21, x1
    e64c:	mov	x2, x28
    e650:	mov	w1, #0x0                   	// #0
    e654:	str	x0, [x20, #48]
    e658:	str	x3, [sp, #96]
    e65c:	bl	8800 <memset@plt>
    e660:	ldr	x3, [sp, #96]
    e664:	cmp	w27, #0x40
    e668:	b.ls	e734 <GOMP_ordered_end@@GOMP_1.0+0x1e4>  // b.plast
    e66c:	lsl	x21, x3, #3
    e670:	mov	x27, #0x0                   	// #0
    e674:	mov	x26, #0x0                   	// #0
    e678:	cmp	x26, x19
    e67c:	b.eq	e758 <GOMP_ordered_end@@GOMP_1.0+0x208>  // b.none
    e680:	ldr	x0, [x20, #24]
    e684:	mov	x2, x21
    e688:	mov	w1, #0x0                   	// #0
    e68c:	add	x26, x26, #0x1
    e690:	add	x0, x0, x27
    e694:	add	x27, x27, x22
    e698:	bl	8800 <memset@plt>
    e69c:	b	e678 <GOMP_ordered_end@@GOMP_1.0+0x128>
    e6a0:	str	xzr, [x23, #32]
    e6a4:	ldp	x19, x20, [sp, #16]
    e6a8:	ldp	x21, x22, [sp, #32]
    e6ac:	ldp	x23, x24, [sp, #48]
    e6b0:	ldp	x25, x26, [sp, #64]
    e6b4:	ldp	x27, x28, [sp, #80]
    e6b8:	ldp	x29, x30, [sp], #368
    e6bc:	ret
    e6c0:	ldr	x3, [x24, x2, lsl #3]
    e6c4:	cbz	x3, e594 <GOMP_ordered_end@@GOMP_1.0+0x44>
    e6c8:	cmp	w27, #0x40
    e6cc:	b.hi	e6f4 <GOMP_ordered_end@@GOMP_1.0+0x1a4>  // b.pmore
    e6d0:	sub	x1, x3, #0x1
    e6d4:	cmp	x3, #0x1
    e6d8:	clz	x1, x1
    e6dc:	sub	w1, w5, w1
    e6e0:	csel	w1, w1, w4, ne  // ne = any
    e6e4:	add	w27, w27, w1
    e6e8:	cmp	w27, #0x40
    e6ec:	b.hi	e6fc <GOMP_ordered_end@@GOMP_1.0+0x1ac>  // b.pmore
    e6f0:	str	w1, [x6, x2, lsl #2]
    e6f4:	add	x2, x2, #0x1
    e6f8:	b	e5d8 <GOMP_ordered_end@@GOMP_1.0+0x88>
    e6fc:	mov	w27, #0x41                  	// #65
    e700:	b	e6f4 <GOMP_ordered_end@@GOMP_1.0+0x1a4>
    e704:	cmp	w1, #0x3
    e708:	ldr	x19, [x24]
    e70c:	b.eq	e5f0 <GOMP_ordered_end@@GOMP_1.0+0xa0>  // b.none
    e710:	sub	x19, x19, #0x1
    e714:	sdiv	x19, x19, x25
    e718:	add	x19, x19, #0x1
    e71c:	b	e5f0 <GOMP_ordered_end@@GOMP_1.0+0xa0>
    e720:	lsl	x22, x3, #3
    e724:	mov	x21, #0x0                   	// #0
    e728:	b	e604 <GOMP_ordered_end@@GOMP_1.0+0xb4>
    e72c:	str	xzr, [x0, #48]
    e730:	b	e664 <GOMP_ordered_end@@GOMP_1.0+0x114>
    e734:	mov	w0, #0x1                   	// #1
    e738:	add	x2, sp, #0x70
    e73c:	strb	w0, [x20, #20]
    e740:	mov	w0, #0x0                   	// #0
    e744:	cbnz	w26, e788 <GOMP_ordered_end@@GOMP_1.0+0x238>
    e748:	mov	x1, #0x0                   	// #0
    e74c:	mov	x0, #0x0                   	// #0
    e750:	cmp	x0, x19
    e754:	b.ne	e7a4 <GOMP_ordered_end@@GOMP_1.0+0x254>  // b.any
    e758:	ldr	w0, [x23]
    e75c:	cmp	w0, #0x1
    e760:	b.ne	e780 <GOMP_ordered_end@@GOMP_1.0+0x230>  // b.any
    e764:	cbnz	x25, e780 <GOMP_ordered_end@@GOMP_1.0+0x230>
    e768:	ldr	x1, [x24]
    e76c:	udiv	x0, x1, x19
    e770:	msub	x19, x0, x19, x1
    e774:	str	x0, [x20]
    e778:	madd	x1, x0, x19, x19
    e77c:	stp	x19, x1, [x20, #32]
    e780:	str	x20, [x23, #32]
    e784:	b	e6a4 <GOMP_ordered_end@@GOMP_1.0+0x154>
    e788:	sub	w1, w26, #0x1
    e78c:	mov	x26, x1
    e790:	add	x3, x20, x1, lsl #2
    e794:	ldr	w1, [x2, x1, lsl #2]
    e798:	str	w0, [x3, #56]
    e79c:	add	w0, w0, w1
    e7a0:	b	e744 <GOMP_ordered_end@@GOMP_1.0+0x1f4>
    e7a4:	ldr	x2, [x20, #24]
    e7a8:	add	x0, x0, #0x1
    e7ac:	str	xzr, [x2, x1]
    e7b0:	add	x1, x1, x22
    e7b4:	b	e750 <GOMP_ordered_end@@GOMP_1.0+0x200>

000000000000e7b8 <GOMP_doacross_post@@GOMP_4.5>:
    e7b8:	adrp	x3, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e7bc:	ldr	x3, [x3, #4016]
    e7c0:	mrs	x1, tpidr_el0
    e7c4:	add	x3, x1, x3
    e7c8:	ldr	x2, [x3, #24]
    e7cc:	ldr	x1, [x2, #32]
    e7d0:	cbz	x1, e7dc <GOMP_doacross_post@@GOMP_4.5+0x24>
    e7d4:	ldr	x4, [x1, #24]
    e7d8:	cbnz	x4, e7e4 <GOMP_doacross_post@@GOMP_4.5+0x2c>
    e7dc:	dmb	ish
    e7e0:	ret
    e7e4:	ldr	w5, [x2]
    e7e8:	cmp	w5, #0x1
    e7ec:	b.ne	e840 <GOMP_doacross_post@@GOMP_4.5+0x88>  // b.any
    e7f0:	ldr	w2, [x3, #40]
    e7f4:	ldr	x3, [x1, #8]
    e7f8:	madd	x2, x2, x3, x4
    e7fc:	ldrb	w3, [x1, #20]
    e800:	cbz	w3, e874 <GOMP_doacross_post@@GOMP_4.5+0xbc>
    e804:	ldr	x3, [x0]
    e808:	add	x1, x1, #0x38
    e80c:	ldr	w4, [x1]
    e810:	ldur	w6, [x1, #-40]
    e814:	lsl	x3, x3, x4
    e818:	mov	x4, #0x0                   	// #0
    e81c:	add	x4, x4, #0x1
    e820:	cmp	w6, w4
    e824:	b.hi	e858 <GOMP_doacross_post@@GOMP_4.5+0xa0>  // b.pmore
    e828:	add	x3, x3, #0x1
    e82c:	ldar	x0, [x2]
    e830:	cmp	x0, x3
    e834:	b.ne	e86c <GOMP_doacross_post@@GOMP_4.5+0xb4>  // b.any
    e838:	dmb	ish
    e83c:	b	e7e0 <GOMP_doacross_post@@GOMP_4.5+0x28>
    e840:	cmp	w5, #0x3
    e844:	ldr	x2, [x0]
    e848:	b.eq	e7f4 <GOMP_doacross_post@@GOMP_4.5+0x3c>  // b.none
    e84c:	ldr	x3, [x1]
    e850:	sdiv	x2, x2, x3
    e854:	b	e7f4 <GOMP_doacross_post@@GOMP_4.5+0x3c>
    e858:	ldr	x5, [x0, x4, lsl #3]
    e85c:	ldr	w7, [x1, x4, lsl #2]
    e860:	lsl	x5, x5, x7
    e864:	orr	x3, x3, x5
    e868:	b	e81c <GOMP_doacross_post@@GOMP_4.5+0x64>
    e86c:	stlr	x3, [x2]
    e870:	b	e7e0 <GOMP_doacross_post@@GOMP_4.5+0x28>
    e874:	dmb	ishld
    e878:	ldr	w3, [x1, #16]
    e87c:	sub	w3, w3, #0x1
    e880:	cmn	w3, #0x1
    e884:	b.eq	e7e0 <GOMP_doacross_post@@GOMP_4.5+0x28>  // b.none
    e888:	ubfiz	x1, x3, #3, #32
    e88c:	ldr	x4, [x0, x1]
    e890:	add	x1, x2, x1
    e894:	add	x4, x4, #0x1
    e898:	ldr	x5, [x1]
    e89c:	cmp	x4, x5
    e8a0:	b.eq	e87c <GOMP_doacross_post@@GOMP_4.5+0xc4>  // b.none
    e8a4:	stlr	x4, [x1]
    e8a8:	b	e87c <GOMP_doacross_post@@GOMP_4.5+0xc4>

000000000000e8ac <GOMP_doacross_wait@@GOMP_4.5>:
    e8ac:	sub	sp, sp, #0x60
    e8b0:	stp	x1, x2, [sp, #40]
    e8b4:	mrs	x1, tpidr_el0
    e8b8:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    e8bc:	ldr	x2, [x2, #4016]
    e8c0:	stp	x3, x4, [sp, #56]
    e8c4:	add	x2, x1, x2
    e8c8:	stp	x5, x6, [sp, #72]
    e8cc:	str	x7, [sp, #88]
    e8d0:	ldr	x4, [x2, #24]
    e8d4:	ldr	x3, [x4, #32]
    e8d8:	cbz	x3, e8e4 <GOMP_doacross_wait@@GOMP_4.5+0x38>
    e8dc:	ldr	x5, [x3, #24]
    e8e0:	cbnz	x5, e8ec <GOMP_doacross_wait@@GOMP_4.5+0x40>
    e8e4:	dmb	ish
    e8e8:	b	ea44 <GOMP_doacross_wait@@GOMP_4.5+0x198>
    e8ec:	ldr	w1, [x4]
    e8f0:	cmp	w1, #0x1
    e8f4:	b.ne	e9c4 <GOMP_doacross_wait@@GOMP_4.5+0x118>  // b.any
    e8f8:	ldr	x1, [x4, #8]
    e8fc:	cbnz	x1, e9ac <GOMP_doacross_wait@@GOMP_4.5+0x100>
    e900:	ldr	x2, [x3, #40]
    e904:	ldr	x1, [x3]
    e908:	cmp	x2, x0
    e90c:	b.le	e91c <GOMP_doacross_wait@@GOMP_4.5+0x70>
    e910:	add	x1, x1, #0x1
    e914:	sdiv	x1, x0, x1
    e918:	b	e92c <GOMP_doacross_wait@@GOMP_4.5+0x80>
    e91c:	sub	x2, x0, x2
    e920:	sdiv	x1, x2, x1
    e924:	ldr	x2, [x3, #32]
    e928:	add	x1, x1, x2
    e92c:	ldrb	w6, [x3, #20]
    e930:	add	x7, sp, #0x20
    e934:	ldr	x2, [x3, #8]
    e938:	madd	x1, x1, x2, x5
    e93c:	cbnz	w6, e9dc <GOMP_doacross_wait@@GOMP_4.5+0x130>
    e940:	add	x0, x0, #0x1
    e944:	mov	w9, #0xffffffc8            	// #-56
    e948:	add	x2, sp, #0x60
    e94c:	stp	x2, x2, [sp]
    e950:	mov	w2, #0x0                   	// #0
    e954:	str	x7, [sp, #16]
    e958:	stp	w9, wzr, [sp, #24]
    e95c:	ldr	w5, [x3, #16]
    e960:	cmp	w5, w2
    e964:	b.ls	e9a0 <GOMP_doacross_wait@@GOMP_4.5+0xf4>  // b.plast
    e968:	cbz	w2, ead4 <GOMP_doacross_wait@@GOMP_4.5+0x228>
    e96c:	ldr	w6, [sp, #24]
    e970:	ldr	x4, [sp]
    e974:	tbnz	w6, #31, eab8 <GOMP_doacross_wait@@GOMP_4.5+0x20c>
    e978:	add	x6, x4, #0xf
    e97c:	and	x6, x6, #0xfffffffffffffff8
    e980:	str	x6, [sp]
    e984:	ldr	x4, [x4]
    e988:	add	x4, x4, #0x1
    e98c:	add	x6, x1, w2, uxtw #3
    e990:	ldr	x6, [x6]
    e994:	cmp	x4, x6
    e998:	b.cs	eadc <GOMP_doacross_wait@@GOMP_4.5+0x230>  // b.hs, b.nlast
    e99c:	mov	w2, w5
    e9a0:	cmp	w5, w2
    e9a4:	b.eq	e8e4 <GOMP_doacross_wait@@GOMP_4.5+0x38>  // b.none
    e9a8:	b	e948 <GOMP_doacross_wait@@GOMP_4.5+0x9c>
    e9ac:	ldr	x2, [x2, #16]
    e9b0:	sdiv	x1, x0, x1
    e9b4:	ldr	w4, [x2]
    e9b8:	sdiv	x2, x1, x4
    e9bc:	msub	x1, x2, x4, x1
    e9c0:	b	e92c <GOMP_doacross_wait@@GOMP_4.5+0x80>
    e9c4:	cmp	w1, #0x3
    e9c8:	b.ne	e9d4 <GOMP_doacross_wait@@GOMP_4.5+0x128>  // b.any
    e9cc:	mov	x1, x0
    e9d0:	b	e92c <GOMP_doacross_wait@@GOMP_4.5+0x80>
    e9d4:	ldr	x1, [x3]
    e9d8:	b	e914 <GOMP_doacross_wait@@GOMP_4.5+0x68>
    e9dc:	ldr	w2, [x3, #56]
    e9e0:	add	x4, sp, #0x60
    e9e4:	ldr	w11, [x3, #16]
    e9e8:	mov	x12, x4
    e9ec:	add	x3, x3, #0x3c
    e9f0:	mov	w8, #0x0                   	// #0
    e9f4:	lsl	x0, x0, x2
    e9f8:	add	x2, sp, #0x60
    e9fc:	mov	w9, #0x0                   	// #0
    ea00:	stp	x2, x2, [sp]
    ea04:	mov	w2, #0xffffffc8            	// #-56
    ea08:	str	x7, [sp, #16]
    ea0c:	mov	x7, #0x0                   	// #0
    ea10:	str	w2, [sp, #24]
    ea14:	str	wzr, [sp, #28]
    ea18:	add	w5, w7, #0x1
    ea1c:	cmp	w11, w5
    ea20:	b.hi	ea4c <GOMP_doacross_wait@@GOMP_4.5+0x1a0>  // b.pmore
    ea24:	cbz	w9, ea2c <GOMP_doacross_wait@@GOMP_4.5+0x180>
    ea28:	str	w2, [sp, #24]
    ea2c:	cbz	w8, ea34 <GOMP_doacross_wait@@GOMP_4.5+0x188>
    ea30:	str	x4, [sp]
    ea34:	ldar	x2, [x1]
    ea38:	cmp	x0, x2
    ea3c:	b.cs	eab0 <GOMP_doacross_wait@@GOMP_4.5+0x204>  // b.hs, b.nlast
    ea40:	dmb	ish
    ea44:	add	sp, sp, #0x60
    ea48:	ret
    ea4c:	tbnz	w2, #31, ea80 <GOMP_doacross_wait@@GOMP_4.5+0x1d4>
    ea50:	add	x5, x4, #0xf
    ea54:	mov	w8, w6
    ea58:	and	x5, x5, #0xfffffffffffffff8
    ea5c:	mov	w10, w2
    ea60:	ldr	x2, [x4]
    ea64:	mov	x4, x5
    ea68:	ldr	w13, [x3, x7, lsl #2]
    ea6c:	add	x7, x7, #0x1
    ea70:	lsl	x2, x2, x13
    ea74:	orr	x0, x0, x2
    ea78:	mov	w2, w10
    ea7c:	b	ea18 <GOMP_doacross_wait@@GOMP_4.5+0x16c>
    ea80:	add	w10, w2, #0x8
    ea84:	cmp	w10, #0x0
    ea88:	b.le	eaa0 <GOMP_doacross_wait@@GOMP_4.5+0x1f4>
    ea8c:	add	x5, x4, #0xf
    ea90:	mov	w8, w6
    ea94:	and	x5, x5, #0xfffffffffffffff8
    ea98:	mov	w9, w6
    ea9c:	b	ea60 <GOMP_doacross_wait@@GOMP_4.5+0x1b4>
    eaa0:	mov	x5, x4
    eaa4:	mov	w9, w6
    eaa8:	add	x4, x12, w2, sxtw
    eaac:	b	ea60 <GOMP_doacross_wait@@GOMP_4.5+0x1b4>
    eab0:	ldr	x2, [x1]
    eab4:	b	ea38 <GOMP_doacross_wait@@GOMP_4.5+0x18c>
    eab8:	add	w8, w6, #0x8
    eabc:	str	w8, [sp, #24]
    eac0:	cmp	w8, #0x0
    eac4:	b.gt	e978 <GOMP_doacross_wait@@GOMP_4.5+0xcc>
    eac8:	ldr	x4, [sp, #8]
    eacc:	add	x4, x4, w6, sxtw
    ead0:	b	e984 <GOMP_doacross_wait@@GOMP_4.5+0xd8>
    ead4:	mov	x4, x0
    ead8:	b	e98c <GOMP_doacross_wait@@GOMP_4.5+0xe0>
    eadc:	b.hi	e9a0 <GOMP_doacross_wait@@GOMP_4.5+0xf4>  // b.pmore
    eae0:	add	w2, w2, #0x1
    eae4:	b	e95c <GOMP_doacross_wait@@GOMP_4.5+0xb0>
    eae8:	stp	x29, x30, [sp, #-368]!
    eaec:	mov	x29, sp
    eaf0:	stp	x25, x26, [sp, #64]
    eaf4:	mov	w26, w0
    eaf8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    eafc:	ldr	x0, [x0, #4016]
    eb00:	stp	x23, x24, [sp, #48]
    eb04:	mov	x24, x1
    eb08:	mrs	x1, tpidr_el0
    eb0c:	add	x0, x1, x0
    eb10:	stp	x19, x20, [sp, #16]
    eb14:	mov	x25, x2
    eb18:	stp	x21, x22, [sp, #32]
    eb1c:	mov	x2, x3
    eb20:	ldp	x1, x23, [x0, #16]
    eb24:	stp	x27, x28, [sp, #80]
    eb28:	cbnz	x1, eb48 <GOMP_doacross_wait@@GOMP_4.5+0x29c>
    eb2c:	cbz	x2, ec24 <GOMP_doacross_wait@@GOMP_4.5+0x378>
    eb30:	add	x0, x2, #0x38
    eb34:	bl	ade4 <fprintf@plt+0x2284>
    eb38:	add	x1, x0, #0x38
    eb3c:	str	x1, [x0, #48]
    eb40:	str	x0, [x23, #32]
    eb44:	b	ec28 <GOMP_doacross_wait@@GOMP_4.5+0x37c>
    eb48:	ldr	w20, [x1]
    eb4c:	cmp	w20, #0x1
    eb50:	b.eq	eb2c <GOMP_doacross_wait@@GOMP_4.5+0x280>  // b.none
    eb54:	add	x6, sp, #0x70
    eb58:	mov	x1, #0x0                   	// #0
    eb5c:	mov	w28, #0x0                   	// #0
    eb60:	mov	w4, #0x1                   	// #1
    eb64:	mov	w5, #0x40                  	// #64
    eb68:	cmp	w26, w1
    eb6c:	b.hi	ec44 <GOMP_doacross_wait@@GOMP_4.5+0x398>  // b.pmore
    eb70:	ldr	w0, [x23]
    eb74:	cmp	w0, #0x1
    eb78:	b.ne	ec88 <GOMP_doacross_wait@@GOMP_4.5+0x3dc>  // b.any
    eb7c:	mov	w20, w20
    eb80:	cmp	w28, #0x40
    eb84:	mov	w27, w26
    eb88:	b.hi	eca4 <GOMP_doacross_wait@@GOMP_4.5+0x3f8>  // b.pmore
    eb8c:	lsl	x21, x27, #2
    eb90:	mov	x22, #0x8                   	// #8
    eb94:	add	x22, x22, #0x3f
    eb98:	add	x21, x21, #0x77
    eb9c:	and	x22, x22, #0xffffffffffffffc0
    eba0:	mul	x1, x20, x22
    eba4:	stp	x1, x2, [sp, #96]
    eba8:	add	x0, x1, x21
    ebac:	bl	adb0 <fprintf@plt+0x2250>
    ebb0:	add	x21, x0, x21
    ebb4:	ldp	x1, x2, [sp, #96]
    ebb8:	and	x21, x21, #0xffffffffffffffc0
    ebbc:	stp	x25, x22, [x0]
    ebc0:	mov	x19, x0
    ebc4:	str	w26, [x0, #16]
    ebc8:	strb	wzr, [x0, #20]
    ebcc:	str	x21, [x0, #24]
    ebd0:	str	xzr, [x0, #40]
    ebd4:	cbz	x2, ecb0 <GOMP_doacross_wait@@GOMP_4.5+0x404>
    ebd8:	add	x0, x21, x1
    ebdc:	mov	w1, #0x0                   	// #0
    ebe0:	str	x0, [x19, #48]
    ebe4:	bl	8800 <memset@plt>
    ebe8:	cmp	w28, #0x40
    ebec:	b.ls	ecb8 <GOMP_doacross_wait@@GOMP_4.5+0x40c>  // b.plast
    ebf0:	lsl	x27, x27, #3
    ebf4:	mov	x26, #0x0                   	// #0
    ebf8:	mov	x21, #0x0                   	// #0
    ebfc:	cmp	x21, x20
    ec00:	b.eq	ecdc <GOMP_doacross_wait@@GOMP_4.5+0x430>  // b.none
    ec04:	ldr	x0, [x19, #24]
    ec08:	mov	x2, x27
    ec0c:	mov	w1, #0x0                   	// #0
    ec10:	add	x21, x21, #0x1
    ec14:	add	x0, x0, x26
    ec18:	add	x26, x26, x22
    ec1c:	bl	8800 <memset@plt>
    ec20:	b	ebfc <GOMP_doacross_wait@@GOMP_4.5+0x350>
    ec24:	str	xzr, [x23, #32]
    ec28:	ldp	x19, x20, [sp, #16]
    ec2c:	ldp	x21, x22, [sp, #32]
    ec30:	ldp	x23, x24, [sp, #48]
    ec34:	ldp	x25, x26, [sp, #64]
    ec38:	ldp	x27, x28, [sp, #80]
    ec3c:	ldp	x29, x30, [sp], #368
    ec40:	ret
    ec44:	ldr	x3, [x24, x1, lsl #3]
    ec48:	cbz	x3, eb2c <GOMP_doacross_wait@@GOMP_4.5+0x280>
    ec4c:	cmp	w28, #0x40
    ec50:	b.hi	ec78 <GOMP_doacross_wait@@GOMP_4.5+0x3cc>  // b.pmore
    ec54:	sub	x0, x3, #0x1
    ec58:	cmp	x3, #0x1
    ec5c:	clz	x0, x0
    ec60:	sub	w0, w5, w0
    ec64:	csel	w0, w0, w4, ne  // ne = any
    ec68:	add	w28, w28, w0
    ec6c:	cmp	w28, #0x40
    ec70:	b.hi	ec80 <GOMP_doacross_wait@@GOMP_4.5+0x3d4>  // b.pmore
    ec74:	str	w0, [x6, x1, lsl #2]
    ec78:	add	x1, x1, #0x1
    ec7c:	b	eb68 <GOMP_doacross_wait@@GOMP_4.5+0x2bc>
    ec80:	mov	w28, #0x41                  	// #65
    ec84:	b	ec78 <GOMP_doacross_wait@@GOMP_4.5+0x3cc>
    ec88:	cmp	w0, #0x3
    ec8c:	ldr	x20, [x24]
    ec90:	b.eq	eb80 <GOMP_doacross_wait@@GOMP_4.5+0x2d4>  // b.none
    ec94:	sub	x20, x20, #0x1
    ec98:	udiv	x20, x20, x25
    ec9c:	add	x20, x20, #0x1
    eca0:	b	eb80 <GOMP_doacross_wait@@GOMP_4.5+0x2d4>
    eca4:	lsl	x22, x27, #3
    eca8:	mov	x21, #0x0                   	// #0
    ecac:	b	eb94 <GOMP_doacross_wait@@GOMP_4.5+0x2e8>
    ecb0:	str	xzr, [x0, #48]
    ecb4:	b	ebe8 <GOMP_doacross_wait@@GOMP_4.5+0x33c>
    ecb8:	mov	w0, #0x1                   	// #1
    ecbc:	add	x2, sp, #0x70
    ecc0:	strb	w0, [x19, #20]
    ecc4:	mov	w0, #0x0                   	// #0
    ecc8:	cbnz	w26, ed0c <GOMP_doacross_wait@@GOMP_4.5+0x460>
    eccc:	mov	x1, #0x0                   	// #0
    ecd0:	mov	x0, #0x0                   	// #0
    ecd4:	cmp	x0, x20
    ecd8:	b.ne	ed28 <GOMP_doacross_wait@@GOMP_4.5+0x47c>  // b.any
    ecdc:	ldr	w0, [x23]
    ece0:	cmp	w0, #0x1
    ece4:	b.ne	ed04 <GOMP_doacross_wait@@GOMP_4.5+0x458>  // b.any
    ece8:	cbnz	x25, ed04 <GOMP_doacross_wait@@GOMP_4.5+0x458>
    ecec:	ldr	x1, [x24]
    ecf0:	udiv	x0, x1, x20
    ecf4:	msub	x20, x0, x20, x1
    ecf8:	str	x0, [x19]
    ecfc:	madd	x1, x0, x20, x20
    ed00:	stp	x20, x1, [x19, #32]
    ed04:	str	x19, [x23, #32]
    ed08:	b	ec28 <GOMP_doacross_wait@@GOMP_4.5+0x37c>
    ed0c:	sub	w1, w26, #0x1
    ed10:	mov	x26, x1
    ed14:	add	x3, x19, x1, lsl #2
    ed18:	ldr	w1, [x2, x1, lsl #2]
    ed1c:	str	w0, [x3, #56]
    ed20:	add	w0, w0, w1
    ed24:	b	ecc8 <GOMP_doacross_wait@@GOMP_4.5+0x41c>
    ed28:	ldr	x2, [x19, #24]
    ed2c:	add	x0, x0, #0x1
    ed30:	str	xzr, [x2, x1]
    ed34:	add	x1, x1, x22
    ed38:	b	ecd4 <GOMP_doacross_wait@@GOMP_4.5+0x428>

000000000000ed3c <GOMP_doacross_ull_post@@GOMP_4.5>:
    ed3c:	adrp	x3, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ed40:	ldr	x3, [x3, #4016]
    ed44:	mrs	x1, tpidr_el0
    ed48:	add	x3, x1, x3
    ed4c:	ldr	x2, [x3, #24]
    ed50:	ldr	x1, [x2, #32]
    ed54:	cbz	x1, ed60 <GOMP_doacross_ull_post@@GOMP_4.5+0x24>
    ed58:	ldr	x4, [x1, #24]
    ed5c:	cbnz	x4, ed68 <GOMP_doacross_ull_post@@GOMP_4.5+0x2c>
    ed60:	dmb	ish
    ed64:	ret
    ed68:	ldr	w5, [x2]
    ed6c:	cmp	w5, #0x1
    ed70:	b.ne	edc4 <GOMP_doacross_ull_post@@GOMP_4.5+0x88>  // b.any
    ed74:	ldr	w2, [x3, #40]
    ed78:	ldrb	w3, [x1, #20]
    ed7c:	cbz	w3, edf8 <GOMP_doacross_ull_post@@GOMP_4.5+0xbc>
    ed80:	ldr	x3, [x1, #8]
    ed84:	add	x1, x1, #0x38
    ed88:	ldur	w6, [x1, #-40]
    ed8c:	madd	x2, x2, x3, x4
    ed90:	ldr	w4, [x1]
    ed94:	ldr	x3, [x0]
    ed98:	lsl	x3, x3, x4
    ed9c:	mov	x4, #0x0                   	// #0
    eda0:	add	x4, x4, #0x1
    eda4:	cmp	w6, w4
    eda8:	b.hi	eddc <GOMP_doacross_ull_post@@GOMP_4.5+0xa0>  // b.pmore
    edac:	add	x3, x3, #0x1
    edb0:	ldar	x0, [x2]
    edb4:	cmp	x0, x3
    edb8:	b.ne	edf0 <GOMP_doacross_ull_post@@GOMP_4.5+0xb4>  // b.any
    edbc:	dmb	ish
    edc0:	b	ed64 <GOMP_doacross_ull_post@@GOMP_4.5+0x28>
    edc4:	cmp	w5, #0x3
    edc8:	ldr	x2, [x0]
    edcc:	b.eq	ed78 <GOMP_doacross_ull_post@@GOMP_4.5+0x3c>  // b.none
    edd0:	ldr	x3, [x1]
    edd4:	udiv	x2, x2, x3
    edd8:	b	ed78 <GOMP_doacross_ull_post@@GOMP_4.5+0x3c>
    eddc:	ldr	x5, [x0, x4, lsl #3]
    ede0:	ldr	w7, [x1, x4, lsl #2]
    ede4:	lsl	x5, x5, x7
    ede8:	orr	x3, x3, x5
    edec:	b	eda0 <GOMP_doacross_ull_post@@GOMP_4.5+0x64>
    edf0:	stlr	x3, [x2]
    edf4:	b	ed64 <GOMP_doacross_ull_post@@GOMP_4.5+0x28>
    edf8:	dmb	ishld
    edfc:	ldr	x3, [x1, #8]
    ee00:	ldr	x5, [x1, #24]
    ee04:	mul	x2, x2, x3
    ee08:	ldr	w3, [x1, #16]
    ee0c:	sub	w3, w3, #0x1
    ee10:	cmn	w3, #0x1
    ee14:	b.eq	ed64 <GOMP_doacross_ull_post@@GOMP_4.5+0x28>  // b.none
    ee18:	ubfiz	x1, x3, #3, #32
    ee1c:	ldr	x4, [x0, x1]
    ee20:	add	x1, x2, x1
    ee24:	add	x1, x5, x1
    ee28:	add	x4, x4, #0x1
    ee2c:	ldr	x6, [x1]
    ee30:	cmp	x4, x6
    ee34:	b.eq	ee0c <GOMP_doacross_ull_post@@GOMP_4.5+0xd0>  // b.none
    ee38:	stlr	x4, [x1]
    ee3c:	b	ee0c <GOMP_doacross_ull_post@@GOMP_4.5+0xd0>

000000000000ee40 <GOMP_doacross_ull_wait@@GOMP_4.5>:
    ee40:	sub	sp, sp, #0x60
    ee44:	stp	x1, x2, [sp, #40]
    ee48:	mrs	x1, tpidr_el0
    ee4c:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    ee50:	ldr	x2, [x2, #4016]
    ee54:	stp	x3, x4, [sp, #56]
    ee58:	add	x2, x1, x2
    ee5c:	stp	x5, x6, [sp, #72]
    ee60:	str	x7, [sp, #88]
    ee64:	ldr	x1, [x2, #24]
    ee68:	ldr	x3, [x1, #32]
    ee6c:	cbz	x3, ee78 <GOMP_doacross_ull_wait@@GOMP_4.5+0x38>
    ee70:	ldr	x5, [x3, #24]
    ee74:	cbnz	x5, ee80 <GOMP_doacross_ull_wait@@GOMP_4.5+0x40>
    ee78:	dmb	ish
    ee7c:	b	efe0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
    ee80:	ldr	w4, [x1]
    ee84:	cmp	w4, #0x1
    ee88:	b.ne	ef5c <GOMP_doacross_ull_wait@@GOMP_4.5+0x11c>  // b.any
    ee8c:	ldr	x1, [x1, #8]
    ee90:	cbnz	x1, ef44 <GOMP_doacross_ull_wait@@GOMP_4.5+0x104>
    ee94:	ldr	x2, [x3, #40]
    ee98:	ldr	x1, [x3]
    ee9c:	cmp	x2, x0
    eea0:	b.ls	eeb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x70>  // b.plast
    eea4:	add	x1, x1, #0x1
    eea8:	udiv	x1, x0, x1
    eeac:	b	eec0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x80>
    eeb0:	sub	x2, x0, x2
    eeb4:	udiv	x2, x2, x1
    eeb8:	ldr	x1, [x3, #32]
    eebc:	add	x1, x2, x1
    eec0:	ldrb	w6, [x3, #20]
    eec4:	add	x8, sp, #0x20
    eec8:	ldr	x2, [x3, #8]
    eecc:	mul	x1, x1, x2
    eed0:	cbnz	w6, ef74 <GOMP_doacross_ull_wait@@GOMP_4.5+0x134>
    eed4:	add	x0, x0, #0x1
    eed8:	mov	w10, #0xffffffc8            	// #-56
    eedc:	add	x2, sp, #0x60
    eee0:	stp	x2, x2, [sp]
    eee4:	mov	w2, #0x0                   	// #0
    eee8:	str	x8, [sp, #16]
    eeec:	stp	w10, wzr, [sp, #24]
    eef0:	ldr	w6, [x3, #16]
    eef4:	cmp	w6, w2
    eef8:	b.ls	ef38 <GOMP_doacross_ull_wait@@GOMP_4.5+0xf8>  // b.plast
    eefc:	cbz	w2, f070 <GOMP_doacross_ull_wait@@GOMP_4.5+0x230>
    ef00:	ldr	w7, [sp, #24]
    ef04:	ldr	x4, [sp]
    ef08:	tbnz	w7, #31, f054 <GOMP_doacross_ull_wait@@GOMP_4.5+0x214>
    ef0c:	add	x7, x4, #0xf
    ef10:	and	x7, x7, #0xfffffffffffffff8
    ef14:	str	x7, [sp]
    ef18:	ldr	x4, [x4]
    ef1c:	add	x4, x4, #0x1
    ef20:	add	x7, x1, w2, uxtw #3
    ef24:	add	x7, x5, x7
    ef28:	ldr	x7, [x7]
    ef2c:	cmp	x4, x7
    ef30:	b.cs	f078 <GOMP_doacross_ull_wait@@GOMP_4.5+0x238>  // b.hs, b.nlast
    ef34:	mov	w2, w6
    ef38:	cmp	w6, w2
    ef3c:	b.eq	ee78 <GOMP_doacross_ull_wait@@GOMP_4.5+0x38>  // b.none
    ef40:	b	eedc <GOMP_doacross_ull_wait@@GOMP_4.5+0x9c>
    ef44:	ldr	x2, [x2, #16]
    ef48:	udiv	x1, x0, x1
    ef4c:	ldr	w4, [x2]
    ef50:	udiv	x2, x1, x4
    ef54:	msub	x1, x2, x4, x1
    ef58:	b	eec0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x80>
    ef5c:	cmp	w4, #0x3
    ef60:	b.eq	ef6c <GOMP_doacross_ull_wait@@GOMP_4.5+0x12c>  // b.none
    ef64:	ldr	x1, [x3]
    ef68:	b	eea8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x68>
    ef6c:	mov	x1, x0
    ef70:	b	eec0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x80>
    ef74:	ldr	w2, [x3, #56]
    ef78:	add	x4, sp, #0x60
    ef7c:	ldr	w11, [x3, #16]
    ef80:	add	x1, x5, x1
    ef84:	mov	x12, x4
    ef88:	add	x3, x3, #0x3c
    ef8c:	lsl	x0, x0, x2
    ef90:	add	x2, sp, #0x60
    ef94:	mov	x7, #0x0                   	// #0
    ef98:	mov	w9, #0x0                   	// #0
    ef9c:	stp	x2, x2, [sp]
    efa0:	mov	w2, #0xffffffc8            	// #-56
    efa4:	str	x8, [sp, #16]
    efa8:	mov	w8, #0x0                   	// #0
    efac:	str	w2, [sp, #24]
    efb0:	str	wzr, [sp, #28]
    efb4:	add	w5, w7, #0x1
    efb8:	cmp	w11, w5
    efbc:	b.hi	efe8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a8>  // b.pmore
    efc0:	cbz	w9, efc8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x188>
    efc4:	str	w2, [sp, #24]
    efc8:	cbz	w8, efd0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x190>
    efcc:	str	x4, [sp]
    efd0:	ldar	x2, [x1]
    efd4:	cmp	x0, x2
    efd8:	b.cs	f04c <GOMP_doacross_ull_wait@@GOMP_4.5+0x20c>  // b.hs, b.nlast
    efdc:	dmb	ish
    efe0:	add	sp, sp, #0x60
    efe4:	ret
    efe8:	tbnz	w2, #31, f01c <GOMP_doacross_ull_wait@@GOMP_4.5+0x1dc>
    efec:	add	x5, x4, #0xf
    eff0:	mov	w8, w6
    eff4:	and	x5, x5, #0xfffffffffffffff8
    eff8:	mov	w10, w2
    effc:	ldr	x2, [x4]
    f000:	mov	x4, x5
    f004:	ldr	w13, [x3, x7, lsl #2]
    f008:	add	x7, x7, #0x1
    f00c:	lsl	x2, x2, x13
    f010:	orr	x0, x0, x2
    f014:	mov	w2, w10
    f018:	b	efb4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x174>
    f01c:	add	w10, w2, #0x8
    f020:	cmp	w10, #0x0
    f024:	b.le	f03c <GOMP_doacross_ull_wait@@GOMP_4.5+0x1fc>
    f028:	add	x5, x4, #0xf
    f02c:	mov	w8, w6
    f030:	and	x5, x5, #0xfffffffffffffff8
    f034:	mov	w9, w6
    f038:	b	effc <GOMP_doacross_ull_wait@@GOMP_4.5+0x1bc>
    f03c:	mov	x5, x4
    f040:	mov	w9, w6
    f044:	add	x4, x12, w2, sxtw
    f048:	b	effc <GOMP_doacross_ull_wait@@GOMP_4.5+0x1bc>
    f04c:	ldr	x2, [x1]
    f050:	b	efd4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x194>
    f054:	add	w9, w7, #0x8
    f058:	str	w9, [sp, #24]
    f05c:	cmp	w9, #0x0
    f060:	b.gt	ef0c <GOMP_doacross_ull_wait@@GOMP_4.5+0xcc>
    f064:	ldr	x4, [sp, #8]
    f068:	add	x4, x4, w7, sxtw
    f06c:	b	ef18 <GOMP_doacross_ull_wait@@GOMP_4.5+0xd8>
    f070:	mov	x4, x0
    f074:	b	ef20 <GOMP_doacross_ull_wait@@GOMP_4.5+0xe0>
    f078:	b.hi	ef38 <GOMP_doacross_ull_wait@@GOMP_4.5+0xf8>  // b.pmore
    f07c:	add	w2, w2, #0x1
    f080:	b	eef0 <GOMP_doacross_ull_wait@@GOMP_4.5+0xb0>
    f084:	stp	x29, x30, [sp, #-64]!
    f088:	mov	x29, sp
    f08c:	str	x23, [sp, #48]
    f090:	adrp	x23, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f094:	ldr	x23, [x23, #4016]
    f098:	stp	x21, x22, [sp, #32]
    f09c:	mrs	x21, tpidr_el0
    f0a0:	mov	w22, w1
    f0a4:	stp	x19, x20, [sp, #16]
    f0a8:	mov	w19, w0
    f0ac:	add	x0, x21, x23
    f0b0:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    f0b4:	add	x20, x20, #0x2c0
    f0b8:	ldr	x1, [x0, #80]
    f0bc:	cmp	x1, #0x0
    f0c0:	add	x2, x1, #0x90
    f0c4:	csel	x20, x20, x2, eq  // eq = none
    f0c8:	cmp	w19, #0x1
    f0cc:	b.eq	f1c8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>  // b.none
    f0d0:	ldr	w0, [x0, #48]
    f0d4:	cbz	w0, f0e0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2a0>
    f0d8:	ldrb	w1, [x20, #25]
    f0dc:	cbz	w1, f1c8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>
    f0e0:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    f0e4:	ldr	x1, [x1, #744]
    f0e8:	cmp	x1, w0, uxtw
    f0ec:	b.ls	f1c8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>  // b.plast
    f0f0:	cbnz	w19, f0f8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2b8>
    f0f4:	ldr	w19, [x20]
    f0f8:	ldrb	w0, [x20, #24]
    f0fc:	cbz	w0, f118 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2d8>
    f100:	bl	15be8 <omp_test_nest_lock@OMP_1.0+0x470>
    f104:	cmp	w19, w0
    f108:	csel	w19, w19, w0, ls  // ls = plast
    f10c:	cmp	w22, #0x0
    f110:	ccmp	w19, w22, #0x0, ne  // ne = any
    f114:	csel	w19, w19, w22, ls  // ls = plast
    f118:	ldr	w1, [x20, #20]
    f11c:	mov	w0, w19
    f120:	cmn	w1, #0x1
    f124:	b.eq	f1b4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x374>  // b.none
    f128:	cmp	w19, #0x1
    f12c:	b.eq	f1c8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>  // b.none
    f130:	add	x21, x21, x23
    f134:	ldr	x0, [x21, #16]
    f138:	ldr	x3, [x21, #96]
    f13c:	cbz	x0, f1a0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x360>
    f140:	cbz	x3, f1a0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x360>
    f144:	mov	w7, w19
    f148:	add	x5, x3, #0x18
    f14c:	mov	x6, #0x1                   	// #1
    f150:	ldr	x2, [x3, #24]
    f154:	ldr	w4, [x20, #20]
    f158:	sub	x0, x6, x2
    f15c:	sub	w1, w6, w2
    f160:	add	w1, w1, w4
    f164:	add	x0, x0, w4, uxtw
    f168:	sub	x4, x2, #0x1
    f16c:	cmp	x0, x7
    f170:	csel	w0, w1, w19, cc  // cc = lo, ul, last
    f174:	csel	w1, w1, w19, cc  // cc = lo, ul, last
    f178:	add	x1, x4, x1
    f17c:	ldxr	x4, [x5]
    f180:	cmp	x4, x2
    f184:	b.ne	f190 <GOMP_doacross_ull_wait@@GOMP_4.5+0x350>  // b.any
    f188:	stlxr	w8, x1, [x5]
    f18c:	cbnz	w8, f17c <GOMP_doacross_ull_wait@@GOMP_4.5+0x33c>
    f190:	dmb	ish
    f194:	cmp	x4, x2
    f198:	b.ne	f150 <GOMP_doacross_ull_wait@@GOMP_4.5+0x310>  // b.any
    f19c:	b	f1b4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x374>
    f1a0:	cmp	w1, w19
    f1a4:	csel	w0, w1, w19, ls  // ls = plast
    f1a8:	cbz	x3, f1b4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x374>
    f1ac:	mov	w1, w0
    f1b0:	str	x1, [x3, #24]
    f1b4:	ldp	x19, x20, [sp, #16]
    f1b8:	ldp	x21, x22, [sp, #32]
    f1bc:	ldr	x23, [sp, #48]
    f1c0:	ldp	x29, x30, [sp], #64
    f1c4:	ret
    f1c8:	mov	w0, #0x1                   	// #1
    f1cc:	b	f1b4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x374>

000000000000f1d0 <GOMP_parallel_start@@GOMP_1.0>:
    f1d0:	stp	x29, x30, [sp, #-48]!
    f1d4:	mov	x29, sp
    f1d8:	stp	x19, x20, [sp, #16]
    f1dc:	mov	x20, x1
    f1e0:	mov	w1, #0x0                   	// #0
    f1e4:	mov	x19, x0
    f1e8:	mov	w0, w2
    f1ec:	str	x21, [sp, #32]
    f1f0:	bl	f084 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>
    f1f4:	mov	w21, w0
    f1f8:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
    f1fc:	mov	w2, w21
    f200:	mov	x4, x0
    f204:	mov	x1, x20
    f208:	mov	x0, x19
    f20c:	ldp	x19, x20, [sp, #16]
    f210:	mov	x5, #0x0                   	// #0
    f214:	ldr	x21, [sp, #32]
    f218:	mov	w3, #0x0                   	// #0
    f21c:	ldp	x29, x30, [sp], #48
    f220:	b	13e7c <omp_in_final@@OMP_3.1+0x304>

000000000000f224 <GOMP_parallel_end@@GOMP_1.0>:
    f224:	stp	x29, x30, [sp, #-32]!
    f228:	mrs	x0, tpidr_el0
    f22c:	mov	x29, sp
    f230:	stp	x19, x20, [sp, #16]
    f234:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f238:	ldr	x19, [x19, #4016]
    f23c:	add	x19, x0, x19
    f240:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    f244:	add	x0, x0, #0x2c0
    f248:	ldr	x1, [x19, #80]
    f24c:	cmp	x1, #0x0
    f250:	add	x2, x1, #0x90
    f254:	csel	x0, x0, x2, eq  // eq = none
    f258:	ldr	w0, [x0, #20]
    f25c:	cmn	w0, #0x1
    f260:	b.eq	f26c <GOMP_parallel_end@@GOMP_1.0+0x48>  // b.none
    f264:	ldr	x0, [x19, #16]
    f268:	cbnz	x0, f278 <GOMP_parallel_end@@GOMP_1.0+0x54>
    f26c:	ldp	x19, x20, [sp, #16]
    f270:	ldp	x29, x30, [sp], #32
    f274:	b	14b70 <omp_in_final@@OMP_3.1+0xff8>
    f278:	ldr	w20, [x0]
    f27c:	bl	14b70 <omp_in_final@@OMP_3.1+0xff8>
    f280:	cmp	w20, #0x1
    f284:	b.ls	f29c <GOMP_parallel_end@@GOMP_1.0+0x78>  // b.plast
    f288:	ldr	x0, [x19, #16]
    f28c:	mov	x1, #0x1                   	// #1
    f290:	cbnz	x0, f2a8 <GOMP_parallel_end@@GOMP_1.0+0x84>
    f294:	ldr	x0, [x19, #96]
    f298:	str	x1, [x0, #24]
    f29c:	ldp	x19, x20, [sp, #16]
    f2a0:	ldp	x29, x30, [sp], #32
    f2a4:	ret
    f2a8:	ldr	x0, [x19, #96]
    f2ac:	sub	x1, x1, w20, uxtw
    f2b0:	add	x0, x0, #0x18
    f2b4:	ldxr	x2, [x0]
    f2b8:	add	x2, x2, x1
    f2bc:	stlxr	w3, x2, [x0]
    f2c0:	cbnz	w3, f2b4 <GOMP_parallel_end@@GOMP_1.0+0x90>
    f2c4:	dmb	ish
    f2c8:	b	f29c <GOMP_parallel_end@@GOMP_1.0+0x78>

000000000000f2cc <GOMP_parallel@@GOMP_4.0>:
    f2cc:	stp	x29, x30, [sp, #-48]!
    f2d0:	mov	x29, sp
    f2d4:	stp	x19, x20, [sp, #16]
    f2d8:	mov	x20, x1
    f2dc:	mov	w1, #0x0                   	// #0
    f2e0:	mov	x19, x0
    f2e4:	mov	w0, w2
    f2e8:	stp	x21, x22, [sp, #32]
    f2ec:	mov	w22, w3
    f2f0:	bl	f084 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>
    f2f4:	mov	w21, w0
    f2f8:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
    f2fc:	mov	w3, w22
    f300:	mov	x4, x0
    f304:	mov	w2, w21
    f308:	mov	x1, x20
    f30c:	mov	x5, #0x0                   	// #0
    f310:	mov	x0, x19
    f314:	bl	13e7c <omp_in_final@@OMP_3.1+0x304>
    f318:	mov	x0, x20
    f31c:	blr	x19
    f320:	ldp	x19, x20, [sp, #16]
    f324:	ldp	x21, x22, [sp, #32]
    f328:	ldp	x29, x30, [sp], #48
    f32c:	b	f224 <GOMP_parallel_end@@GOMP_1.0>

000000000000f330 <GOMP_parallel_reductions@@GOMP_5.0>:
    f330:	stp	x29, x30, [sp, #-64]!
    f334:	mov	x29, sp
    f338:	stp	x19, x20, [sp, #16]
    f33c:	mov	x20, x1
    f340:	mov	w1, #0x0                   	// #0
    f344:	stp	x21, x22, [sp, #32]
    f348:	mov	x22, x0
    f34c:	mov	w0, w2
    f350:	str	x23, [sp, #48]
    f354:	mov	w23, w3
    f358:	bl	f084 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>
    f35c:	mov	w19, w0
    f360:	mov	w1, w0
    f364:	ldr	x0, [x20]
    f368:	bl	137fc <GOMP_task_reduction_remap@@GOMP_5.0+0x148>
    f36c:	mov	x21, x0
    f370:	mov	w0, w19
    f374:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
    f378:	mov	x5, x21
    f37c:	mov	x4, x0
    f380:	mov	w3, w23
    f384:	mov	w2, w19
    f388:	mov	x1, x20
    f38c:	mov	x0, x22
    f390:	bl	13e7c <omp_in_final@@OMP_3.1+0x304>
    f394:	mov	x0, x20
    f398:	blr	x22
    f39c:	bl	f224 <GOMP_parallel_end@@GOMP_1.0>
    f3a0:	mov	x0, x21
    f3a4:	bl	8950 <free@plt>
    f3a8:	mov	w0, w19
    f3ac:	ldp	x19, x20, [sp, #16]
    f3b0:	ldp	x21, x22, [sp, #32]
    f3b4:	ldr	x23, [sp, #48]
    f3b8:	ldp	x29, x30, [sp], #64
    f3bc:	ret

000000000000f3c0 <GOMP_cancellation_point@@GOMP_4.0>:
    f3c0:	mov	w3, w0
    f3c4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    f3c8:	ldrb	w0, [x0, #1372]
    f3cc:	cbz	w0, f3fc <GOMP_cancellation_point@@GOMP_4.0+0x3c>
    f3d0:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f3d4:	ldr	x2, [x2, #4016]
    f3d8:	mrs	x1, tpidr_el0
    f3dc:	tst	w3, #0x6
    f3e0:	add	x2, x1, x2
    f3e4:	ldr	x1, [x2, #16]
    f3e8:	b.eq	f400 <GOMP_cancellation_point@@GOMP_4.0+0x40>  // b.none
    f3ec:	cbz	x1, f440 <GOMP_cancellation_point@@GOMP_4.0+0x80>
    f3f0:	ldr	w0, [x1, #1332]
    f3f4:	cmp	w0, #0x0
    f3f8:	cset	w0, ne  // ne = any
    f3fc:	ret
    f400:	tbz	w3, #3, f430 <GOMP_cancellation_point@@GOMP_4.0+0x70>
    f404:	ldr	x0, [x2, #80]
    f408:	ldr	x2, [x0, #40]
    f40c:	cbz	x2, f430 <GOMP_cancellation_point@@GOMP_4.0+0x70>
    f410:	ldrb	w0, [x2, #49]
    f414:	cbnz	w0, f3fc <GOMP_cancellation_point@@GOMP_4.0+0x3c>
    f418:	ldrb	w0, [x2, #50]
    f41c:	cbz	w0, f430 <GOMP_cancellation_point@@GOMP_4.0+0x70>
    f420:	ldr	x0, [x2]
    f424:	cbz	x0, f430 <GOMP_cancellation_point@@GOMP_4.0+0x70>
    f428:	ldrb	w0, [x0, #49]
    f42c:	cbnz	w0, f3fc <GOMP_cancellation_point@@GOMP_4.0+0x3c>
    f430:	cbz	x1, f440 <GOMP_cancellation_point@@GOMP_4.0+0x80>
    f434:	ldr	w0, [x1, #132]
    f438:	ubfx	x0, x0, #2, #1
    f43c:	b	f3fc <GOMP_cancellation_point@@GOMP_4.0+0x3c>
    f440:	mov	w0, #0x0                   	// #0
    f444:	b	f3fc <GOMP_cancellation_point@@GOMP_4.0+0x3c>

000000000000f448 <GOMP_cancel@@GOMP_4.0>:
    f448:	stp	x29, x30, [sp, #-48]!
    f44c:	mov	x29, sp
    f450:	str	x21, [sp, #32]
    f454:	and	w21, w1, #0xff
    f458:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
    f45c:	stp	x19, x20, [sp, #16]
    f460:	ldrb	w1, [x1, #1372]
    f464:	cbz	w1, f544 <GOMP_cancel@@GOMP_4.0+0xfc>
    f468:	cbnz	w21, f47c <GOMP_cancel@@GOMP_4.0+0x34>
    f46c:	ldp	x19, x20, [sp, #16]
    f470:	ldr	x21, [sp, #32]
    f474:	ldp	x29, x30, [sp], #48
    f478:	b	f3c0 <GOMP_cancellation_point@@GOMP_4.0>
    f47c:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f480:	ldr	x1, [x1, #4016]
    f484:	mrs	x2, tpidr_el0
    f488:	mov	w3, w0
    f48c:	tst	w0, #0x6
    f490:	add	x1, x2, x1
    f494:	ldr	x0, [x1, #16]
    f498:	b.eq	f4bc <GOMP_cancel@@GOMP_4.0+0x74>  // b.none
    f49c:	cbz	x0, f4a8 <GOMP_cancel@@GOMP_4.0+0x60>
    f4a0:	mov	w1, #0x1                   	// #1
    f4a4:	str	w1, [x0, #1332]
    f4a8:	mov	w0, w21
    f4ac:	ldp	x19, x20, [sp, #16]
    f4b0:	ldr	x21, [sp, #32]
    f4b4:	ldp	x29, x30, [sp], #48
    f4b8:	ret
    f4bc:	tbz	w3, #3, f534 <GOMP_cancel@@GOMP_4.0+0xec>
    f4c0:	ldr	x1, [x1, #80]
    f4c4:	ldr	x20, [x1, #40]
    f4c8:	cbz	x20, f4a8 <GOMP_cancel@@GOMP_4.0+0x60>
    f4cc:	ldrb	w1, [x20, #50]
    f4d0:	cbz	w1, f4e0 <GOMP_cancel@@GOMP_4.0+0x98>
    f4d4:	ldr	x1, [x20]
    f4d8:	cmp	x1, #0x0
    f4dc:	csel	x20, x20, x1, eq  // eq = none
    f4e0:	ldrb	w1, [x20, #49]
    f4e4:	cbnz	w1, f4a8 <GOMP_cancel@@GOMP_4.0+0x60>
    f4e8:	add	x19, x0, #0x500
    f4ec:	mov	w0, #0x1                   	// #1
    f4f0:	ldaxr	w1, [x19]
    f4f4:	cbnz	w1, f500 <GOMP_cancel@@GOMP_4.0+0xb8>
    f4f8:	stxr	w2, w0, [x19]
    f4fc:	cbnz	w2, f4f0 <GOMP_cancel@@GOMP_4.0+0xa8>
    f500:	cmp	w1, #0x0
    f504:	b.eq	f510 <GOMP_cancel@@GOMP_4.0+0xc8>  // b.none
    f508:	mov	x0, x19
    f50c:	bl	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
    f510:	mov	w0, #0x1                   	// #1
    f514:	strb	w0, [x20, #49]
    f518:	ldxr	w0, [x19]
    f51c:	stlxr	w1, wzr, [x19]
    f520:	cbnz	w1, f518 <GOMP_cancel@@GOMP_4.0+0xd0>
    f524:	tbz	w0, #31, f4a8 <GOMP_cancel@@GOMP_4.0+0x60>
    f528:	mov	x0, x19
    f52c:	bl	15980 <omp_test_nest_lock@OMP_1.0+0x208>
    f530:	b	f4a8 <GOMP_cancel@@GOMP_4.0+0x60>
    f534:	mov	w1, #0x1                   	// #1
    f538:	str	w1, [x0, #1336]
    f53c:	bl	16344 <omp_get_num_procs@@OMP_1.0+0x6d0>
    f540:	b	f4a8 <GOMP_cancel@@GOMP_4.0+0x60>
    f544:	mov	w21, #0x0                   	// #0
    f548:	b	f4a8 <GOMP_cancel@@GOMP_4.0+0x60>

000000000000f54c <omp_get_num_threads@@OMP_1.0>:
    f54c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f550:	ldr	x0, [x0, #4016]
    f554:	mrs	x1, tpidr_el0
    f558:	add	x0, x1, x0
    f55c:	ldr	x0, [x0, #16]
    f560:	cbz	x0, f56c <omp_get_num_threads@@OMP_1.0+0x20>
    f564:	ldr	w0, [x0]
    f568:	ret
    f56c:	mov	w0, #0x1                   	// #1
    f570:	b	f568 <omp_get_num_threads@@OMP_1.0+0x1c>

000000000000f574 <omp_get_thread_num@@OMP_1.0>:
    f574:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f578:	ldr	x0, [x0, #4016]
    f57c:	mrs	x1, tpidr_el0
    f580:	add	x0, x1, x0
    f584:	ldr	w0, [x0, #40]
    f588:	ret

000000000000f58c <omp_in_parallel@@OMP_1.0>:
    f58c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f590:	ldr	x0, [x0, #4016]
    f594:	mrs	x1, tpidr_el0
    f598:	add	x0, x1, x0
    f59c:	ldr	w0, [x0, #48]
    f5a0:	cmp	w0, #0x0
    f5a4:	cset	w0, ne  // ne = any
    f5a8:	ret

000000000000f5ac <omp_get_level@@OMP_3.0>:
    f5ac:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f5b0:	ldr	x0, [x0, #4016]
    f5b4:	mrs	x1, tpidr_el0
    f5b8:	add	x0, x1, x0
    f5bc:	ldr	w0, [x0, #44]
    f5c0:	ret

000000000000f5c4 <omp_get_ancestor_thread_num@@OMP_3.0>:
    f5c4:	tbnz	w0, #31, f60c <omp_get_ancestor_thread_num@@OMP_3.0+0x48>
    f5c8:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f5cc:	ldr	x1, [x1, #4016]
    f5d0:	mrs	x2, tpidr_el0
    f5d4:	add	x1, x2, x1
    f5d8:	ldr	w2, [x1, #44]
    f5dc:	cmp	w2, w0
    f5e0:	b.cc	f60c <omp_get_ancestor_thread_num@@OMP_3.0+0x48>  // b.lo, b.ul, b.last
    f5e4:	sub	w0, w2, w0
    f5e8:	add	x1, x1, #0x10
    f5ec:	cmp	w0, #0x0
    f5f0:	b.gt	f5fc <omp_get_ancestor_thread_num@@OMP_3.0+0x38>
    f5f4:	ldr	w0, [x1, #24]
    f5f8:	ret
    f5fc:	ldr	x1, [x1]
    f600:	sub	w0, w0, #0x1
    f604:	add	x1, x1, #0x8
    f608:	b	f5ec <omp_get_ancestor_thread_num@@OMP_3.0+0x28>
    f60c:	mov	w0, #0xffffffff            	// #-1
    f610:	b	f5f8 <omp_get_ancestor_thread_num@@OMP_3.0+0x34>

000000000000f614 <omp_get_team_size@@OMP_3.0>:
    f614:	tbnz	w0, #31, f660 <omp_get_team_size@@OMP_3.0+0x4c>
    f618:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f61c:	ldr	x1, [x1, #4016]
    f620:	mrs	x2, tpidr_el0
    f624:	add	x1, x2, x1
    f628:	ldr	w2, [x1, #44]
    f62c:	cmp	w2, w0
    f630:	b.cc	f660 <omp_get_team_size@@OMP_3.0+0x4c>  // b.lo, b.ul, b.last
    f634:	sub	w0, w2, w0
    f638:	add	x1, x1, #0x10
    f63c:	cmp	w0, #0x0
    f640:	ldr	x1, [x1]
    f644:	b.gt	f654 <omp_get_team_size@@OMP_3.0+0x40>
    f648:	cbz	x1, f668 <omp_get_team_size@@OMP_3.0+0x54>
    f64c:	ldr	w0, [x1]
    f650:	ret
    f654:	add	x1, x1, #0x8
    f658:	sub	w0, w0, #0x1
    f65c:	b	f63c <omp_get_team_size@@OMP_3.0+0x28>
    f660:	mov	w0, #0xffffffff            	// #-1
    f664:	b	f650 <omp_get_team_size@@OMP_3.0+0x3c>
    f668:	mov	w0, #0x1                   	// #1
    f66c:	b	f650 <omp_get_team_size@@OMP_3.0+0x3c>

000000000000f670 <omp_get_active_level@@OMP_3.0>:
    f670:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f674:	ldr	x0, [x0, #4016]
    f678:	mrs	x1, tpidr_el0
    f67c:	add	x0, x1, x0
    f680:	ldr	w0, [x0, #48]
    f684:	ret
    f688:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f68c:	ldr	x1, [x1, #4016]
    f690:	mrs	x0, tpidr_el0
    f694:	add	x1, x0, x1
    f698:	ldr	x0, [x1, #32]
    f69c:	cbz	x0, f6c0 <omp_get_active_level@@OMP_3.0+0x50>
    f6a0:	ldr	x2, [x1, #24]
    f6a4:	add	x0, x0, #0x50
    f6a8:	ldxr	x1, [x0]
    f6ac:	stlxr	w3, x2, [x0]
    f6b0:	cbnz	w3, f6a8 <omp_get_active_level@@OMP_3.0+0x38>
    f6b4:	cmp	x1, #0x1
    f6b8:	b.eq	f6c0 <omp_get_active_level@@OMP_3.0+0x50>  // b.none
    f6bc:	b	164c4 <omp_get_num_procs@@OMP_1.0+0x850>
    f6c0:	ret

000000000000f6c4 <GOMP_sections_start@@GOMP_1.0>:
    f6c4:	stp	x29, x30, [sp, #-48]!
    f6c8:	mov	x29, sp
    f6cc:	str	x19, [sp, #16]
    f6d0:	mov	w19, w0
    f6d4:	mov	x0, #0x0                   	// #0
    f6d8:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    f6dc:	tst	w0, #0xff
    f6e0:	b.eq	f718 <GOMP_sections_start@@GOMP_1.0+0x54>  // b.none
    f6e4:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f6e8:	ldr	x0, [x0, #4016]
    f6ec:	mrs	x1, tpidr_el0
    f6f0:	mov	x2, #0x2                   	// #2
    f6f4:	add	x19, x19, #0x1
    f6f8:	add	x0, x1, x0
    f6fc:	movk	x2, #0x1, lsl #32
    f700:	mov	x1, #0x1                   	// #1
    f704:	ldr	x0, [x0, #24]
    f708:	stp	x2, x1, [x0]
    f70c:	stp	x19, x1, [x0, #16]
    f710:	str	x1, [x0, #72]
    f714:	bl	f688 <omp_get_active_level@@OMP_3.0+0x18>
    f718:	add	x1, sp, #0x28
    f71c:	add	x0, sp, #0x20
    f720:	bl	b860 <omp_is_initial_device@@OMP_4.0+0x1f8>
    f724:	tst	w0, #0xff
    f728:	ldr	x0, [sp, #32]
    f72c:	ldr	x19, [sp, #16]
    f730:	csel	x0, x0, xzr, ne  // ne = any
    f734:	ldp	x29, x30, [sp], #48
    f738:	ret

000000000000f73c <GOMP_sections2_start@@GOMP_5.0>:
    f73c:	stp	x29, x30, [sp, #-80]!
    f740:	mov	x29, sp
    f744:	stp	x19, x20, [sp, #16]
    f748:	mov	x20, x1
    f74c:	mov	x19, x2
    f750:	stp	x21, x22, [sp, #32]
    f754:	mov	w21, w0
    f758:	stp	x23, x24, [sp, #48]
    f75c:	cbz	x1, f764 <GOMP_sections2_start@@GOMP_5.0+0x28>
    f760:	bl	13aac <GOMP_task_reduction_remap@@GOMP_5.0+0x3f8>
    f764:	mov	x0, #0x0                   	// #0
    f768:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    f76c:	tst	w0, #0xff
    f770:	b.eq	f834 <GOMP_sections2_start@@GOMP_5.0+0xf8>  // b.none
    f774:	adrp	x24, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f778:	ldr	x24, [x24, #4016]
    f77c:	mrs	x22, tpidr_el0
    f780:	add	x21, x21, #0x1
    f784:	mov	x1, #0x2                   	// #2
    f788:	add	x23, x22, x24
    f78c:	movk	x1, #0x1, lsl #32
    f790:	ldr	x0, [x23, #24]
    f794:	str	x1, [x0]
    f798:	str	x21, [x0, #16]
    f79c:	mov	x21, #0x1                   	// #1
    f7a0:	str	x21, [x0, #8]
    f7a4:	str	x21, [x0, #24]
    f7a8:	str	x21, [x0, #72]
    f7ac:	cbz	x20, f7cc <GOMP_sections2_start@@GOMP_5.0+0x90>
    f7b0:	mov	x0, x20
    f7b4:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    f7b8:	ldr	x0, [x23, #80]
    f7bc:	ldr	x0, [x0, #40]
    f7c0:	strb	w21, [x0, #50]
    f7c4:	ldr	x0, [x23, #24]
    f7c8:	str	x20, [x0, #88]
    f7cc:	cbz	x19, f7f0 <GOMP_sections2_start@@GOMP_5.0+0xb4>
    f7d0:	add	x22, x22, x24
    f7d4:	ldr	x0, [x19]
    f7d8:	ldr	x20, [x22, #24]
    f7dc:	cmp	x0, #0x20
    f7e0:	b.ls	f820 <GOMP_sections2_start@@GOMP_5.0+0xe4>  // b.plast
    f7e4:	bl	ade4 <fprintf@plt+0x2284>
    f7e8:	str	x0, [x20, #32]
    f7ec:	str	x0, [x19]
    f7f0:	bl	f688 <omp_get_active_level@@OMP_3.0+0x18>
    f7f4:	add	x1, sp, #0x48
    f7f8:	add	x0, sp, #0x40
    f7fc:	bl	b860 <omp_is_initial_device@@OMP_4.0+0x1f8>
    f800:	tst	w0, #0xff
    f804:	ldr	x0, [sp, #64]
    f808:	ldp	x19, x20, [sp, #16]
    f80c:	csel	x0, x0, xzr, ne  // ne = any
    f810:	ldp	x21, x22, [sp, #32]
    f814:	ldp	x23, x24, [sp, #48]
    f818:	ldp	x29, x30, [sp], #80
    f81c:	ret
    f820:	mov	x2, x0
    f824:	mov	w1, #0x0                   	// #0
    f828:	add	x0, x20, #0x60
    f82c:	bl	8800 <memset@plt>
    f830:	b	f7ec <GOMP_sections2_start@@GOMP_5.0+0xb0>
    f834:	cbz	x20, f858 <GOMP_sections2_start@@GOMP_5.0+0x11c>
    f838:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f83c:	ldr	x0, [x0, #4016]
    f840:	mrs	x1, tpidr_el0
    f844:	add	x0, x1, x0
    f848:	ldr	x0, [x0, #24]
    f84c:	ldr	x1, [x0, #88]
    f850:	mov	x0, x20
    f854:	bl	138f4 <GOMP_task_reduction_remap@@GOMP_5.0+0x240>
    f858:	cbz	x19, f7f4 <GOMP_sections2_start@@GOMP_5.0+0xb8>
    f85c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f860:	ldr	x0, [x0, #4016]
    f864:	mrs	x1, tpidr_el0
    f868:	add	x0, x1, x0
    f86c:	ldr	x0, [x0, #24]
    f870:	ldr	x0, [x0, #32]
    f874:	str	x0, [x19]
    f878:	b	f7f4 <GOMP_sections2_start@@GOMP_5.0+0xb8>

000000000000f87c <GOMP_sections_next@@GOMP_1.0>:
    f87c:	stp	x29, x30, [sp, #-32]!
    f880:	mov	x29, sp
    f884:	add	x1, sp, #0x18
    f888:	add	x0, sp, #0x10
    f88c:	bl	b860 <omp_is_initial_device@@OMP_4.0+0x1f8>
    f890:	tst	w0, #0xff
    f894:	ldr	x0, [sp, #16]
    f898:	ldp	x29, x30, [sp], #32
    f89c:	csel	x0, x0, xzr, ne  // ne = any
    f8a0:	ret

000000000000f8a4 <GOMP_parallel_sections_start@@GOMP_1.0>:
    f8a4:	stp	x29, x30, [sp, #-48]!
    f8a8:	mov	x29, sp
    f8ac:	stp	x19, x20, [sp, #16]
    f8b0:	mov	w19, w3
    f8b4:	mov	x20, x0
    f8b8:	stp	x21, x22, [sp, #32]
    f8bc:	mov	x21, x1
    f8c0:	mov	w1, w19
    f8c4:	mov	w0, w2
    f8c8:	bl	f084 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>
    f8cc:	mov	w22, w0
    f8d0:	add	x19, x19, #0x1
    f8d4:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
    f8d8:	mov	x4, x0
    f8dc:	mov	x1, #0x2                   	// #2
    f8e0:	mov	x0, #0x1                   	// #1
    f8e4:	movk	x1, #0x1, lsl #32
    f8e8:	mov	w2, w22
    f8ec:	stp	x1, x0, [x4, #256]
    f8f0:	mov	x1, x21
    f8f4:	mov	x5, #0x0                   	// #0
    f8f8:	stp	x19, x0, [x4, #272]
    f8fc:	mov	w3, #0x0                   	// #0
    f900:	str	x0, [x4, #328]
    f904:	mov	x0, x20
    f908:	ldp	x19, x20, [sp, #16]
    f90c:	ldp	x21, x22, [sp, #32]
    f910:	ldp	x29, x30, [sp], #48
    f914:	b	13e7c <omp_in_final@@OMP_3.1+0x304>

000000000000f918 <GOMP_parallel_sections@@GOMP_4.0>:
    f918:	stp	x29, x30, [sp, #-64]!
    f91c:	mov	x29, sp
    f920:	stp	x19, x20, [sp, #16]
    f924:	mov	w19, w3
    f928:	mov	x20, x0
    f92c:	stp	x21, x22, [sp, #32]
    f930:	mov	x21, x1
    f934:	mov	w1, w19
    f938:	mov	w0, w2
    f93c:	str	x23, [sp, #48]
    f940:	mov	w23, w4
    f944:	bl	f084 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>
    f948:	mov	w22, w0
    f94c:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
    f950:	mov	x4, x0
    f954:	mov	x2, #0x2                   	// #2
    f958:	movk	x2, #0x1, lsl #32
    f95c:	mov	w3, w23
    f960:	mov	x1, x21
    f964:	mov	x0, #0x1                   	// #1
    f968:	add	x19, x19, #0x1
    f96c:	stp	x2, x0, [x4, #256]
    f970:	mov	w2, w22
    f974:	stp	x19, x0, [x4, #272]
    f978:	mov	x5, #0x0                   	// #0
    f97c:	str	x0, [x4, #328]
    f980:	mov	x0, x20
    f984:	bl	13e7c <omp_in_final@@OMP_3.1+0x304>
    f988:	mov	x0, x21
    f98c:	blr	x20
    f990:	ldp	x19, x20, [sp, #16]
    f994:	ldp	x21, x22, [sp, #32]
    f998:	ldr	x23, [sp, #48]
    f99c:	ldp	x29, x30, [sp], #64
    f9a0:	b	f224 <GOMP_parallel_end@@GOMP_1.0>

000000000000f9a4 <GOMP_sections_end@@GOMP_1.0>:
    f9a4:	b	15274 <omp_in_final@@OMP_3.1+0x16fc>

000000000000f9a8 <GOMP_sections_end_cancel@@GOMP_4.0>:
    f9a8:	b	15308 <omp_in_final@@OMP_3.1+0x1790>

000000000000f9ac <GOMP_sections_end_nowait@@GOMP_1.0>:
    f9ac:	b	15378 <omp_in_final@@OMP_3.1+0x1800>

000000000000f9b0 <GOMP_single_start@@GOMP_1.0>:
    f9b0:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    f9b4:	ldr	x1, [x1, #4016]
    f9b8:	mrs	x0, tpidr_el0
    f9bc:	add	x1, x0, x1
    f9c0:	ldr	x0, [x1, #16]
    f9c4:	cbz	x0, f9f8 <GOMP_single_start@@GOMP_1.0+0x48>
    f9c8:	ldr	x2, [x1, #64]
    f9cc:	add	x0, x0, #0x70
    f9d0:	add	x3, x2, #0x1
    f9d4:	str	x3, [x1, #64]
    f9d8:	ldxr	x1, [x0]
    f9dc:	cmp	x1, x2
    f9e0:	b.ne	f9ec <GOMP_single_start@@GOMP_1.0+0x3c>  // b.any
    f9e4:	stlxr	w4, x3, [x0]
    f9e8:	cbnz	w4, f9d8 <GOMP_single_start@@GOMP_1.0+0x28>
    f9ec:	cset	w0, eq  // eq = none
    f9f0:	dmb	ish
    f9f4:	ret
    f9f8:	mov	w0, #0x1                   	// #1
    f9fc:	b	f9f4 <GOMP_single_start@@GOMP_1.0+0x44>

000000000000fa00 <GOMP_single_copy_start@@GOMP_1.0>:
    fa00:	stp	x29, x30, [sp, #-32]!
    fa04:	mov	x0, #0x0                   	// #0
    fa08:	mov	x29, sp
    fa0c:	str	x19, [sp, #16]
    fa10:	bl	150fc <omp_in_final@@OMP_3.1+0x1584>
    fa14:	tst	w0, #0xff
    fa18:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    fa1c:	ldr	x0, [x0, #4016]
    fa20:	mrs	x19, tpidr_el0
    fa24:	add	x19, x19, x0
    fa28:	b.eq	fa6c <GOMP_single_copy_start@@GOMP_1.0+0x6c>  // b.none
    fa2c:	ldr	x0, [x19, #32]
    fa30:	cbnz	x0, fa48 <GOMP_single_copy_start@@GOMP_1.0+0x48>
    fa34:	mov	x19, #0x0                   	// #0
    fa38:	mov	x0, x19
    fa3c:	ldr	x19, [sp, #16]
    fa40:	ldp	x29, x30, [sp], #32
    fa44:	ret
    fa48:	ldr	x2, [x19, #24]
    fa4c:	add	x0, x0, #0x50
    fa50:	ldxr	x1, [x0]
    fa54:	stlxr	w3, x2, [x0]
    fa58:	cbnz	w3, fa50 <GOMP_single_copy_start@@GOMP_1.0+0x50>
    fa5c:	cmp	x1, #0x1
    fa60:	b.eq	fa34 <GOMP_single_copy_start@@GOMP_1.0+0x34>  // b.none
    fa64:	bl	164c4 <omp_get_num_procs@@OMP_1.0+0x850>
    fa68:	b	fa34 <GOMP_single_copy_start@@GOMP_1.0+0x34>
    fa6c:	ldr	x0, [x19, #16]
    fa70:	add	x0, x0, #0x80
    fa74:	bl	16208 <omp_get_num_procs@@OMP_1.0+0x594>
    fa78:	ldr	x0, [x19, #24]
    fa7c:	ldr	x19, [x0, #72]
    fa80:	bl	15378 <omp_in_final@@OMP_3.1+0x1800>
    fa84:	b	fa38 <GOMP_single_copy_start@@GOMP_1.0+0x38>

000000000000fa88 <GOMP_single_copy_end@@GOMP_1.0>:
    fa88:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
    fa8c:	ldr	x1, [x1, #4016]
    fa90:	mrs	x2, tpidr_el0
    fa94:	add	x1, x2, x1
    fa98:	ldr	x2, [x1, #16]
    fa9c:	cbz	x2, fabc <GOMP_single_copy_end@@GOMP_1.0+0x34>
    faa0:	stp	x29, x30, [sp, #-16]!
    faa4:	mov	x29, sp
    faa8:	ldr	x1, [x1, #24]
    faac:	str	x0, [x1, #72]
    fab0:	add	x0, x2, #0x80
    fab4:	bl	16208 <omp_get_num_procs@@OMP_1.0+0x594>
    fab8:	ldp	x29, x30, [sp], #16
    fabc:	b	15378 <omp_in_final@@OMP_3.1+0x1800>
    fac0:	ldr	w3, [x1, #24]
    fac4:	adrp	x4, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    fac8:	add	x4, x4, #0x5f4
    facc:	add	w5, w0, #0x1
    fad0:	lsl	x6, x3, #4
    fad4:	add	x3, x4, x3, lsl #4
    fad8:	ldr	w1, [x3, #8]
    fadc:	umull	x1, w0, w1
    fae0:	lsr	x2, x1, #32
    fae4:	sub	w1, w0, w2
    fae8:	ldr	w0, [x3, #12]
    faec:	add	w1, w2, w1, lsr #1
    faf0:	lsr	w1, w1, w0
    faf4:	ldr	w0, [x4, x6]
    faf8:	sub	w0, w0, #0x2
    fafc:	msub	w0, w1, w0, w5
    fb00:	ret
    fb04:	ldr	x2, [x0, #16]
    fb08:	cbz	x2, fb38 <GOMP_single_copy_end@@GOMP_1.0+0xb0>
    fb0c:	ldp	x4, x3, [x1]
    fb10:	str	x4, [x3]
    fb14:	ldr	x4, [x1]
    fb18:	str	x3, [x4, #8]
    fb1c:	ldr	x3, [x2]
    fb20:	stp	x3, x2, [x1]
    fb24:	str	x1, [x2]
    fb28:	ldr	x2, [x1]
    fb2c:	str	x1, [x2, #8]
    fb30:	str	x1, [x0, #16]
    fb34:	ret
    fb38:	ldr	x2, [x0, #8]
    fb3c:	cmp	x2, x1
    fb40:	b.eq	fb30 <GOMP_single_copy_end@@GOMP_1.0+0xa8>  // b.none
    fb44:	ldp	x3, x4, [x1]
    fb48:	str	x3, [x4]
    fb4c:	str	x4, [x3, #8]
    fb50:	ldr	x3, [x2, #8]
    fb54:	stp	x2, x3, [x1]
    fb58:	str	x1, [x0, #8]
    fb5c:	str	x1, [x3]
    fb60:	b	fb28 <GOMP_single_copy_end@@GOMP_1.0+0xa0>
    fb64:	ubfiz	x0, x0, #4, #32
    fb68:	add	x0, x0, #0x60
    fb6c:	ldr	x4, [x1, #8]
    fb70:	add	x3, x2, x0
    fb74:	ldr	x5, [x2, x0]
    fb78:	cmp	x4, x3
    fb7c:	b.ne	fbc4 <GOMP_single_copy_end@@GOMP_1.0+0x13c>  // b.any
    fb80:	str	x5, [x1, #8]
    fb84:	ldrb	w2, [x2, #207]
    fb88:	cbz	w2, fbc0 <GOMP_single_copy_end@@GOMP_1.0+0x138>
    fb8c:	ldr	x2, [x1, #16]
    fb90:	cmp	x2, x3
    fb94:	b.ne	fbc0 <GOMP_single_copy_end@@GOMP_1.0+0x138>  // b.any
    fb98:	ldr	x2, [x3, #8]
    fb9c:	cmp	x2, x3
    fba0:	b.eq	fc04 <GOMP_single_copy_end@@GOMP_1.0+0x17c>  // b.none
    fba4:	sub	x0, x2, x0
    fba8:	ldr	w3, [x0, #200]
    fbac:	cmp	w3, #0x2
    fbb0:	b.ne	fc04 <GOMP_single_copy_end@@GOMP_1.0+0x17c>  // b.any
    fbb4:	ldrb	w0, [x0, #207]
    fbb8:	cbz	w0, fc04 <GOMP_single_copy_end@@GOMP_1.0+0x17c>
    fbbc:	str	x2, [x1, #16]
    fbc0:	ret
    fbc4:	cmp	x4, x5
    fbc8:	b.eq	fb84 <GOMP_single_copy_end@@GOMP_1.0+0xfc>  // b.none
    fbcc:	sub	x6, x5, x0
    fbd0:	ldr	w6, [x6, #200]
    fbd4:	cmp	w6, #0x2
    fbd8:	b.ne	fb84 <GOMP_single_copy_end@@GOMP_1.0+0xfc>  // b.any
    fbdc:	ldr	x6, [x3, #8]
    fbe0:	str	x5, [x6]
    fbe4:	str	x6, [x5, #8]
    fbe8:	str	x4, [x2, x0]
    fbec:	ldr	x5, [x4, #8]
    fbf0:	str	x5, [x3, #8]
    fbf4:	ldr	x5, [x4, #8]
    fbf8:	str	x3, [x5]
    fbfc:	str	x3, [x4, #8]
    fc00:	b	fb84 <GOMP_single_copy_end@@GOMP_1.0+0xfc>
    fc04:	str	xzr, [x1, #16]
    fc08:	b	fbc0 <GOMP_single_copy_end@@GOMP_1.0+0x138>
    fc0c:	ldr	x0, [x0, #56]
    fc10:	cbz	x0, fc18 <GOMP_single_copy_end@@GOMP_1.0+0x190>
    fc14:	b	8950 <free@plt>
    fc18:	ret
    fc1c:	stp	x29, x30, [sp, #-32]!
    fc20:	mov	x29, sp
    fc24:	str	x19, [sp, #16]
    fc28:	mov	x19, x0
    fc2c:	mov	x0, #0x40                  	// #64
    fc30:	bl	adb0 <fprintf@plt+0x2250>
    fc34:	mov	x1, x0
    fc38:	str	x19, [x1], #8
    fc3c:	str	xzr, [x0, #8]
    fc40:	stp	xzr, xzr, [x1, #16]
    fc44:	cbz	x19, fc4c <GOMP_single_copy_end@@GOMP_1.0+0x1c4>
    fc48:	ldr	x19, [x19, #40]
    fc4c:	str	x19, [x0, #40]
    fc50:	strh	wzr, [x0, #48]
    fc54:	strb	wzr, [x0, #50]
    fc58:	str	wzr, [x0, #52]
    fc5c:	str	xzr, [x0, #56]
    fc60:	ldr	x19, [sp, #16]
    fc64:	ldp	x29, x30, [sp], #32
    fc68:	ret
    fc6c:	mov	x2, x0
    fc70:	mov	w3, #0x1                   	// #1
    fc74:	ldaxr	w1, [x2]
    fc78:	cbnz	w1, fc84 <GOMP_single_copy_end@@GOMP_1.0+0x1fc>
    fc7c:	stxr	w4, w3, [x2]
    fc80:	cbnz	w4, fc74 <GOMP_single_copy_end@@GOMP_1.0+0x1ec>
    fc84:	cmp	w1, #0x0
    fc88:	b.eq	fc90 <GOMP_single_copy_end@@GOMP_1.0+0x208>  // b.none
    fc8c:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
    fc90:	ret
    fc94:	stp	x29, x30, [sp, #-48]!
    fc98:	adrp	x3, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
    fc9c:	add	x5, x3, #0x5f4
    fca0:	mov	x29, sp
    fca4:	mov	w2, #0x0                   	// #0
    fca8:	stp	x19, x20, [sp, #16]
    fcac:	mov	w20, #0x1e                  	// #30
    fcb0:	stp	x21, x22, [sp, #32]
    fcb4:	cmp	w20, w2
    fcb8:	b.ne	fcd4 <GOMP_single_copy_end@@GOMP_1.0+0x24c>  // b.any
    fcbc:	add	x3, x3, #0x5f4
    fcc0:	ubfiz	x1, x20, #4, #32
    fcc4:	ldr	w22, [x3, x1]
    fcc8:	cmp	x0, x22
    fccc:	b.ls	fd00 <GOMP_single_copy_end@@GOMP_1.0+0x278>  // b.plast
    fcd0:	bl	88b0 <abort@plt>
    fcd4:	sub	w1, w20, w2
    fcd8:	add	w4, w2, w1, lsr #1
    fcdc:	add	w1, w2, w1, lsr #1
    fce0:	lsl	x1, x1, #4
    fce4:	ldr	w1, [x5, x1]
    fce8:	cmp	x0, x1
    fcec:	b.ls	fcf8 <GOMP_single_copy_end@@GOMP_1.0+0x270>  // b.plast
    fcf0:	add	w2, w4, #0x1
    fcf4:	b	fcb4 <GOMP_single_copy_end@@GOMP_1.0+0x22c>
    fcf8:	mov	w20, w4
    fcfc:	b	fcb4 <GOMP_single_copy_end@@GOMP_1.0+0x22c>
    fd00:	add	x21, x22, #0x4
    fd04:	lsl	x21, x21, #3
    fd08:	mov	x0, x21
    fd0c:	bl	adb0 <fprintf@plt+0x2250>
    fd10:	mov	x19, x0
    fd14:	sub	x2, x21, #0x20
    fd18:	mov	w1, #0x0                   	// #0
    fd1c:	add	x0, x0, #0x20
    fd20:	stp	x22, xzr, [x19]
    fd24:	str	xzr, [x19, #16]
    fd28:	str	w20, [x19, #24]
    fd2c:	bl	8800 <memset@plt>
    fd30:	mov	x0, x19
    fd34:	ldp	x19, x20, [sp, #16]
    fd38:	ldp	x21, x22, [sp, #32]
    fd3c:	ldp	x29, x30, [sp], #48
    fd40:	ret
    fd44:	ldr	x2, [x0]
    fd48:	cbz	x2, fd68 <GOMP_single_copy_end@@GOMP_1.0+0x2e0>
    fd4c:	stp	x29, x30, [sp, #-48]!
    fd50:	mov	x29, sp
    fd54:	str	w1, [sp, #24]
    fd58:	add	x1, sp, #0x18
    fd5c:	bl	1f1f8 <acc_set_cuda_stream@@OACC_2.0+0x418>
    fd60:	ldp	x29, x30, [sp], #48
    fd64:	ret
    fd68:	mov	x0, x2
    fd6c:	ret
    fd70:	mov	x1, x0
    fd74:	ldxr	w2, [x1]
    fd78:	stlxr	w3, wzr, [x1]
    fd7c:	cbnz	w3, fd74 <GOMP_single_copy_end@@GOMP_1.0+0x2ec>
    fd80:	tbz	w2, #31, fd88 <GOMP_single_copy_end@@GOMP_1.0+0x300>
    fd84:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
    fd88:	ret
    fd8c:	ldr	w1, [x0]
    fd90:	add	w2, w1, #0x1
    fd94:	and	w2, w2, #0x7fffffff
    fd98:	ldxr	w3, [x0]
    fd9c:	cmp	w3, w1
    fda0:	b.ne	fdac <GOMP_single_copy_end@@GOMP_1.0+0x324>  // b.any
    fda4:	stlxr	w4, w2, [x0]
    fda8:	cmp	w4, #0x0
    fdac:	mov	w1, w3
    fdb0:	b.ne	fd90 <GOMP_single_copy_end@@GOMP_1.0+0x308>  // b.any
    fdb4:	tbz	w3, #31, fdbc <GOMP_single_copy_end@@GOMP_1.0+0x334>
    fdb8:	b	15d58 <omp_get_num_procs@@OMP_1.0+0xe4>
    fdbc:	ret
    fdc0:	ldr	w1, [x0]
    fdc4:	tst	x1, #0x7fffffff
    fdc8:	b.ne	fdd0 <GOMP_single_copy_end@@GOMP_1.0+0x348>  // b.any
    fdcc:	b	15dd4 <omp_get_num_procs@@OMP_1.0+0x160>
    fdd0:	sub	w3, w1, #0x1
    fdd4:	ldaxr	w2, [x0]
    fdd8:	cmp	w2, w1
    fddc:	b.ne	fde8 <GOMP_single_copy_end@@GOMP_1.0+0x360>  // b.any
    fde0:	stxr	w4, w3, [x0]
    fde4:	cmp	w4, #0x0
    fde8:	mov	w1, w2
    fdec:	b.ne	fdc4 <GOMP_single_copy_end@@GOMP_1.0+0x33c>  // b.any
    fdf0:	ret
    fdf4:	ldr	x7, [x1, #8]
    fdf8:	ubfiz	x0, x0, #4, #32
    fdfc:	add	x0, x0, #0x60
    fe00:	and	w4, w4, #0xff
    fe04:	and	w5, w5, #0xff
    fe08:	add	x6, x2, x0
    fe0c:	cbz	x7, fe70 <GOMP_single_copy_end@@GOMP_1.0+0x3e8>
    fe10:	bic	x8, x4, x3
    fe14:	tbz	w8, #0, fe58 <GOMP_single_copy_end@@GOMP_1.0+0x3d0>
    fe18:	ldr	x8, [x1, #16]
    fe1c:	cbz	x8, fe58 <GOMP_single_copy_end@@GOMP_1.0+0x3d0>
    fe20:	cbnz	w5, fe58 <GOMP_single_copy_end@@GOMP_1.0+0x3d0>
    fe24:	ldr	x3, [x8]
    fe28:	str	x3, [x2, x0]
    fe2c:	str	x8, [x6, #8]
    fe30:	ldr	x0, [x2, x0]
    fe34:	str	x6, [x0, #8]
    fe38:	ldr	x0, [x6, #8]
    fe3c:	str	x6, [x0]
    fe40:	cbz	w4, fe54 <GOMP_single_copy_end@@GOMP_1.0+0x3cc>
    fe44:	ldr	x0, [x1, #16]
    fe48:	cbnz	x0, fe54 <GOMP_single_copy_end@@GOMP_1.0+0x3cc>
    fe4c:	cbz	w5, fe54 <GOMP_single_copy_end@@GOMP_1.0+0x3cc>
    fe50:	str	x6, [x1, #16]
    fe54:	ret
    fe58:	str	x7, [x2, x0]
    fe5c:	ldr	x7, [x7, #8]
    fe60:	str	x7, [x6, #8]
    fe64:	cbnz	w3, fe30 <GOMP_single_copy_end@@GOMP_1.0+0x3a8>
    fe68:	str	x6, [x1, #8]
    fe6c:	b	fe30 <GOMP_single_copy_end@@GOMP_1.0+0x3a8>
    fe70:	str	x6, [x2, x0]
    fe74:	str	x6, [x6, #8]
    fe78:	str	x6, [x1, #8]
    fe7c:	b	fe40 <GOMP_single_copy_end@@GOMP_1.0+0x3b8>
    fe80:	stp	x29, x30, [sp, #-80]!
    fe84:	mov	x29, sp
    fe88:	stp	x25, x26, [sp, #64]
    fe8c:	mov	x26, x1
    fe90:	and	w25, w6, #0xff
    fe94:	ldr	x1, [x1]
    fe98:	stp	x19, x20, [sp, #16]
    fe9c:	mov	w20, w3
    fea0:	stp	x21, x22, [sp, #32]
    fea4:	mov	w22, w0
    fea8:	mov	w21, w4
    feac:	stp	x23, x24, [sp, #48]
    feb0:	mov	x23, x2
    feb4:	and	w24, w5, #0xff
    feb8:	cbnz	x1, fefc <GOMP_single_copy_end@@GOMP_1.0+0x474>
    febc:	cmp	w3, #0x0
    fec0:	b.le	ff64 <GOMP_single_copy_end@@GOMP_1.0+0x4dc>
    fec4:	ldr	x0, [x26, #16]
    fec8:	cbz	x0, fefc <GOMP_single_copy_end@@GOMP_1.0+0x474>
    fecc:	mov	x0, #0x28                  	// #40
    fed0:	bl	adb0 <fprintf@plt+0x2250>
    fed4:	mov	x1, x0
    fed8:	ldr	x0, [x26, #16]
    fedc:	str	x0, [x1, #8]
    fee0:	ldr	x0, [x26, #24]
    fee4:	str	wzr, [x1]
    fee8:	str	x0, [x1, #16]
    feec:	mov	x0, x26
    fef0:	stp	xzr, xzr, [x1, #24]
    fef4:	bl	1f0d8 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
    fef8:	str	xzr, [x26, #16]
    fefc:	mov	w1, w20
    ff00:	mov	x0, x26
    ff04:	bl	fd44 <GOMP_single_copy_end@@GOMP_1.0+0x2bc>
    ff08:	mov	x1, x0
    ff0c:	cbnz	x0, ff38 <GOMP_single_copy_end@@GOMP_1.0+0x4b0>
    ff10:	mov	x0, #0x28                  	// #40
    ff14:	bl	adb0 <fprintf@plt+0x2250>
    ff18:	mov	x19, x0
    ff1c:	mov	x1, x0
    ff20:	mov	x0, x26
    ff24:	str	w20, [x19]
    ff28:	stp	xzr, xzr, [x19, #8]
    ff2c:	stp	xzr, xzr, [x19, #24]
    ff30:	bl	1f0d8 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
    ff34:	mov	x1, x19
    ff38:	mov	w5, w25
    ff3c:	mov	w4, w24
    ff40:	mov	w3, w21
    ff44:	mov	x2, x23
    ff48:	mov	w0, w22
    ff4c:	ldp	x19, x20, [sp, #16]
    ff50:	ldp	x21, x22, [sp, #32]
    ff54:	ldp	x23, x24, [sp, #48]
    ff58:	ldp	x25, x26, [sp, #64]
    ff5c:	ldp	x29, x30, [sp], #80
    ff60:	b	fdf4 <GOMP_single_copy_end@@GOMP_1.0+0x36c>
    ff64:	mov	w5, w25
    ff68:	mov	w4, w24
    ff6c:	mov	w3, w21
    ff70:	add	x1, x26, #0x8
    ff74:	b	ff4c <GOMP_single_copy_end@@GOMP_1.0+0x4c4>
    ff78:	stp	x29, x30, [sp, #-32]!
    ff7c:	mov	x29, sp
    ff80:	ldr	x6, [x1]
    ff84:	stp	x19, x20, [sp, #16]
    ff88:	mov	w19, w0
    ff8c:	mov	x20, x1
    ff90:	cbz	x6, ffbc <GOMP_single_copy_end@@GOMP_1.0+0x534>
    ff94:	bl	1f05c <acc_set_cuda_stream@@OACC_2.0+0x27c>
    ff98:	cbnz	x0, ffb0 <GOMP_single_copy_end@@GOMP_1.0+0x528>
    ff9c:	ldr	x1, [x20]
    ffa0:	ubfiz	x0, x19, #4, #32
    ffa4:	add	x0, x0, #0x60
    ffa8:	ldr	x19, [x1, #8]
    ffac:	sub	x0, x19, x0
    ffb0:	ldp	x19, x20, [sp, #16]
    ffb4:	ldp	x29, x30, [sp], #32
    ffb8:	ret
    ffbc:	mov	w0, #0x1                   	// #1
    ffc0:	strb	w0, [x4]
    ffc4:	ubfiz	x0, x19, #4, #32
    ffc8:	add	x0, x0, #0x60
    ffcc:	ldr	x19, [x1, #16]
    ffd0:	b	ffac <GOMP_single_copy_end@@GOMP_1.0+0x524>
    ffd4:	stp	x29, x30, [sp, #-48]!
    ffd8:	mov	x29, sp
    ffdc:	stp	x19, x20, [sp, #16]
    ffe0:	mov	x19, x0
    ffe4:	mov	x0, x1
    ffe8:	str	x21, [sp, #32]
    ffec:	cbz	x0, 10028 <GOMP_single_copy_end@@GOMP_1.0+0x5a0>
    fff0:	ldr	x3, [x0, #8]
    fff4:	ldp	x21, x20, [x0, #24]
    fff8:	cbz	x3, 10010 <GOMP_single_copy_end@@GOMP_1.0+0x588>
    fffc:	mov	x2, x3
   10000:	stur	xzr, [x2, #-112]
   10004:	ldr	x2, [x2]
   10008:	cmp	x3, x2
   1000c:	b.ne	10000 <GOMP_single_copy_end@@GOMP_1.0+0x578>  // b.any
   10010:	bl	8950 <free@plt>
   10014:	mov	x0, x19
   10018:	mov	x1, x21
   1001c:	bl	ffd4 <GOMP_single_copy_end@@GOMP_1.0+0x54c>
   10020:	mov	x0, x20
   10024:	b	ffec <GOMP_single_copy_end@@GOMP_1.0+0x564>
   10028:	ldp	x19, x20, [sp, #16]
   1002c:	ldr	x21, [sp, #32]
   10030:	ldp	x29, x30, [sp], #48
   10034:	ret
   10038:	stp	x29, x30, [sp, #-32]!
   1003c:	mov	x29, sp
   10040:	ldr	x1, [x0]
   10044:	str	x19, [sp, #16]
   10048:	mov	x19, x0
   1004c:	cbz	x1, 10064 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>
   10050:	bl	ffd4 <GOMP_single_copy_end@@GOMP_1.0+0x54c>
   10054:	str	xzr, [x19]
   10058:	ldr	x19, [sp, #16]
   1005c:	ldp	x29, x30, [sp], #32
   10060:	ret
   10064:	ldr	x1, [x0, #16]
   10068:	cbz	x1, 10058 <GOMP_single_copy_end@@GOMP_1.0+0x5d0>
   1006c:	mov	x0, x1
   10070:	stur	xzr, [x0, #-112]
   10074:	ldr	x0, [x0]
   10078:	cmp	x1, x0
   1007c:	b.ne	10070 <GOMP_single_copy_end@@GOMP_1.0+0x5e8>  // b.any
   10080:	b	10058 <GOMP_single_copy_end@@GOMP_1.0+0x5d0>
   10084:	ldr	w3, [x1, #24]
   10088:	adrp	x4, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1008c:	add	x4, x4, #0x5f4
   10090:	lsl	x5, x3, #4
   10094:	add	x3, x4, x3, lsl #4
   10098:	ldr	w1, [x3, #4]
   1009c:	umull	x1, w0, w1
   100a0:	lsr	x1, x1, #32
   100a4:	sub	w2, w0, w1
   100a8:	add	w1, w1, w2, lsr #1
   100ac:	ldr	w2, [x3, #12]
   100b0:	lsr	w1, w1, w2
   100b4:	ldr	w2, [x4, x5]
   100b8:	msub	w0, w1, w2, w0
   100bc:	ret
   100c0:	stp	x29, x30, [sp, #-16]!
   100c4:	mov	x8, x0
   100c8:	mov	x29, sp
   100cc:	ldr	x9, [x1]
   100d0:	mov	x1, x0
   100d4:	eor	x6, x9, x9, lsr #32
   100d8:	mov	w0, w6
   100dc:	bl	10084 <GOMP_single_copy_end@@GOMP_1.0+0x5fc>
   100e0:	mov	w7, w0
   100e4:	add	x0, x8, w7, uxtw #3
   100e8:	ldr	x0, [x0, #32]
   100ec:	cbnz	x0, 100fc <GOMP_single_copy_end@@GOMP_1.0+0x674>
   100f0:	mov	x0, #0x0                   	// #0
   100f4:	ldp	x29, x30, [sp], #16
   100f8:	ret
   100fc:	cmp	x0, #0x1
   10100:	b.eq	10110 <GOMP_single_copy_end@@GOMP_1.0+0x688>  // b.none
   10104:	ldr	x1, [x0]
   10108:	cmp	x9, x1
   1010c:	b.eq	100f4 <GOMP_single_copy_end@@GOMP_1.0+0x66c>  // b.none
   10110:	ldr	x10, [x8]
   10114:	mov	x1, x8
   10118:	mov	w0, w6
   1011c:	bl	fac0 <GOMP_single_copy_end@@GOMP_1.0+0x38>
   10120:	mov	w1, w0
   10124:	add	w7, w7, w1
   10128:	cmp	x10, w7, uxtw
   1012c:	b.hi	10134 <GOMP_single_copy_end@@GOMP_1.0+0x6ac>  // b.pmore
   10130:	sub	w7, w7, w10
   10134:	add	x0, x8, w7, uxtw #3
   10138:	ldr	x0, [x0, #32]
   1013c:	cbz	x0, 100f0 <GOMP_single_copy_end@@GOMP_1.0+0x668>
   10140:	cmp	x0, #0x1
   10144:	b.eq	10124 <GOMP_single_copy_end@@GOMP_1.0+0x69c>  // b.none
   10148:	ldr	x2, [x0]
   1014c:	cmp	x9, x2
   10150:	b.ne	10124 <GOMP_single_copy_end@@GOMP_1.0+0x69c>  // b.any
   10154:	b	100f4 <GOMP_single_copy_end@@GOMP_1.0+0x66c>
   10158:	mov	x6, x0
   1015c:	mov	w9, w1
   10160:	stp	x29, x30, [sp, #-16]!
   10164:	mov	x1, x0
   10168:	mov	w0, w9
   1016c:	mov	x29, sp
   10170:	bl	10084 <GOMP_single_copy_end@@GOMP_1.0+0x5fc>
   10174:	mov	w7, w0
   10178:	add	x8, x6, #0x20
   1017c:	ubfiz	x1, x7, #3, #32
   10180:	add	x0, x8, x1
   10184:	ldr	x1, [x8, x1]
   10188:	cbz	x1, 101d8 <GOMP_single_copy_end@@GOMP_1.0+0x750>
   1018c:	cmp	x1, #0x1
   10190:	b.ne	10198 <GOMP_single_copy_end@@GOMP_1.0+0x710>  // b.any
   10194:	bl	88b0 <abort@plt>
   10198:	ldr	x10, [x6]
   1019c:	mov	x1, x6
   101a0:	mov	w0, w9
   101a4:	bl	fac0 <GOMP_single_copy_end@@GOMP_1.0+0x38>
   101a8:	mov	w1, w0
   101ac:	add	w7, w7, w1
   101b0:	cmp	x10, w7, uxtw
   101b4:	b.hi	101bc <GOMP_single_copy_end@@GOMP_1.0+0x734>  // b.pmore
   101b8:	sub	w7, w7, w10
   101bc:	ubfiz	x2, x7, #3, #32
   101c0:	add	x0, x8, x2
   101c4:	ldr	x2, [x8, x2]
   101c8:	cbz	x2, 101d8 <GOMP_single_copy_end@@GOMP_1.0+0x750>
   101cc:	cmp	x2, #0x1
   101d0:	b.ne	101ac <GOMP_single_copy_end@@GOMP_1.0+0x724>  // b.any
   101d4:	b	10194 <GOMP_single_copy_end@@GOMP_1.0+0x70c>
   101d8:	ldp	x29, x30, [sp], #16
   101dc:	ret
   101e0:	stp	x29, x30, [sp, #-96]!
   101e4:	cmp	w2, #0x1
   101e8:	mov	x29, sp
   101ec:	stp	x19, x20, [sp, #16]
   101f0:	mov	w20, w2
   101f4:	ldr	x19, [x0]
   101f8:	stp	x21, x22, [sp, #32]
   101fc:	mov	x21, x1
   10200:	ldr	x22, [x1]
   10204:	stp	x23, x24, [sp, #48]
   10208:	stp	x25, x26, [sp, #64]
   1020c:	eor	x22, x22, x22, lsr #32
   10210:	ldr	x9, [x19]
   10214:	str	x27, [sp, #80]
   10218:	b.ne	102b0 <GOMP_single_copy_end@@GOMP_1.0+0x828>  // b.any
   1021c:	ldr	x1, [x19, #8]
   10220:	mov	x24, x0
   10224:	add	x0, x9, x9, lsl #1
   10228:	cmp	x0, x1, lsl #2
   1022c:	b.hi	102b0 <GOMP_single_copy_end@@GOMP_1.0+0x828>  // b.pmore
   10230:	ldr	x0, [x19, #16]
   10234:	add	x26, x19, #0x20
   10238:	add	x25, x26, x9, lsl #3
   1023c:	sub	x1, x1, x0
   10240:	lsl	x0, x1, #1
   10244:	cmp	x9, x1, lsl #1
   10248:	b.cc	1025c <GOMP_single_copy_end@@GOMP_1.0+0x7d4>  // b.lo, b.ul, b.last
   1024c:	cmp	x9, x1, lsl #3
   10250:	b.ls	10320 <GOMP_single_copy_end@@GOMP_1.0+0x898>  // b.plast
   10254:	cmp	x9, #0x20
   10258:	b.ls	10320 <GOMP_single_copy_end@@GOMP_1.0+0x898>  // b.plast
   1025c:	bl	fc94 <GOMP_single_copy_end@@GOMP_1.0+0x20c>
   10260:	mov	x23, x0
   10264:	ldp	x0, x1, [x19, #8]
   10268:	sub	x0, x0, x1
   1026c:	str	x0, [x23, #8]
   10270:	ldr	x27, [x26]
   10274:	cmp	x27, #0x1
   10278:	b.ls	10290 <GOMP_single_copy_end@@GOMP_1.0+0x808>  // b.plast
   1027c:	ldr	x1, [x27]
   10280:	mov	x0, x23
   10284:	eor	x1, x1, x1, lsr #32
   10288:	bl	10158 <GOMP_single_copy_end@@GOMP_1.0+0x6d0>
   1028c:	str	x27, [x0]
   10290:	add	x26, x26, #0x8
   10294:	cmp	x25, x26
   10298:	b.hi	10270 <GOMP_single_copy_end@@GOMP_1.0+0x7e8>  // b.pmore
   1029c:	mov	x0, x19
   102a0:	mov	x19, x23
   102a4:	bl	8950 <free@plt>
   102a8:	ldr	x9, [x23]
   102ac:	str	x23, [x24]
   102b0:	mov	x1, x19
   102b4:	mov	w0, w22
   102b8:	bl	10084 <GOMP_single_copy_end@@GOMP_1.0+0x5fc>
   102bc:	mov	w8, w0
   102c0:	mov	x7, x8
   102c4:	add	x8, x8, #0x4
   102c8:	ldr	x0, [x19, x8, lsl #3]
   102cc:	cbz	x0, 10398 <GOMP_single_copy_end@@GOMP_1.0+0x910>
   102d0:	cmp	x0, #0x1
   102d4:	b.ne	10328 <GOMP_single_copy_end@@GOMP_1.0+0x8a0>  // b.any
   102d8:	add	x8, x19, x8, lsl #3
   102dc:	mov	x1, x19
   102e0:	mov	w0, w22
   102e4:	bl	fac0 <GOMP_single_copy_end@@GOMP_1.0+0x38>
   102e8:	mov	w2, w0
   102ec:	add	w7, w7, w2
   102f0:	cmp	x9, w7, uxtw
   102f4:	b.hi	102fc <GOMP_single_copy_end@@GOMP_1.0+0x874>  // b.pmore
   102f8:	sub	w7, w7, w9
   102fc:	mov	w1, w7
   10300:	add	x1, x1, #0x4
   10304:	ldr	x0, [x19, x1, lsl #3]
   10308:	cbz	x0, 10378 <GOMP_single_copy_end@@GOMP_1.0+0x8f0>
   1030c:	cmp	x0, #0x1
   10310:	b.ne	10360 <GOMP_single_copy_end@@GOMP_1.0+0x8d8>  // b.any
   10314:	cbnz	x8, 102ec <GOMP_single_copy_end@@GOMP_1.0+0x864>
   10318:	add	x8, x19, x1, lsl #3
   1031c:	b	102ec <GOMP_single_copy_end@@GOMP_1.0+0x864>
   10320:	sub	x0, x9, #0x1
   10324:	b	1025c <GOMP_single_copy_end@@GOMP_1.0+0x7d4>
   10328:	ldr	x1, [x0]
   1032c:	ldr	x0, [x21]
   10330:	cmp	x1, x0
   10334:	b.ne	10358 <GOMP_single_copy_end@@GOMP_1.0+0x8d0>  // b.any
   10338:	add	x0, x19, x8, lsl #3
   1033c:	ldp	x19, x20, [sp, #16]
   10340:	ldp	x21, x22, [sp, #32]
   10344:	ldp	x23, x24, [sp, #48]
   10348:	ldp	x25, x26, [sp, #64]
   1034c:	ldr	x27, [sp, #80]
   10350:	ldp	x29, x30, [sp], #96
   10354:	ret
   10358:	mov	x8, #0x0                   	// #0
   1035c:	b	102dc <GOMP_single_copy_end@@GOMP_1.0+0x854>
   10360:	ldr	x3, [x0]
   10364:	ldr	x0, [x21]
   10368:	cmp	x3, x0
   1036c:	b.ne	102ec <GOMP_single_copy_end@@GOMP_1.0+0x864>  // b.any
   10370:	add	x0, x19, x1, lsl #3
   10374:	b	1033c <GOMP_single_copy_end@@GOMP_1.0+0x8b4>
   10378:	cbz	w20, 1033c <GOMP_single_copy_end@@GOMP_1.0+0x8b4>
   1037c:	cbz	x8, 1039c <GOMP_single_copy_end@@GOMP_1.0+0x914>
   10380:	ldr	x0, [x19, #16]
   10384:	sub	x0, x0, #0x1
   10388:	str	x0, [x19, #16]
   1038c:	mov	x0, x8
   10390:	str	xzr, [x8]
   10394:	b	1033c <GOMP_single_copy_end@@GOMP_1.0+0x8b4>
   10398:	cbz	w20, 1033c <GOMP_single_copy_end@@GOMP_1.0+0x8b4>
   1039c:	ldr	x0, [x19, #8]
   103a0:	add	x0, x0, #0x1
   103a4:	str	x0, [x19, #8]
   103a8:	ubfiz	x0, x7, #3, #32
   103ac:	add	x0, x0, #0x20
   103b0:	add	x0, x19, x0
   103b4:	b	1033c <GOMP_single_copy_end@@GOMP_1.0+0x8b4>
   103b8:	stp	x29, x30, [sp, #-96]!
   103bc:	mov	x29, sp
   103c0:	stp	x21, x22, [sp, #32]
   103c4:	mov	x22, x1
   103c8:	ldp	x1, x5, [x2]
   103cc:	stp	x19, x20, [sp, #16]
   103d0:	mov	x20, x0
   103d4:	stp	x23, x24, [sp, #48]
   103d8:	stp	x25, x26, [sp, #64]
   103dc:	stp	x27, x28, [sp, #80]
   103e0:	cbz	x1, 1046c <GOMP_single_copy_end@@GOMP_1.0+0x9e4>
   103e4:	add	x0, x0, #0xd0
   103e8:	add	x2, x2, #0x10
   103ec:	mov	x26, #0x0                   	// #0
   103f0:	cmp	x5, x26
   103f4:	add	x0, x0, #0x28
   103f8:	ldr	x3, [x2, x26, lsl #3]
   103fc:	stur	x3, [x0, #-40]
   10400:	cset	w3, ls  // ls = plast
   10404:	sturb	w3, [x0, #-8]
   10408:	add	x26, x26, #0x1
   1040c:	cmp	x1, x26
   10410:	b.ne	103f0 <GOMP_single_copy_end@@GOMP_1.0+0x968>  // b.any
   10414:	ldr	x0, [x22, #56]
   10418:	stp	x26, xzr, [x20, #72]
   1041c:	cbnz	x0, 10438 <GOMP_single_copy_end@@GOMP_1.0+0x9b0>
   10420:	lsl	x0, x26, #1
   10424:	mov	x1, #0xc                   	// #12
   10428:	cmp	x0, #0xc
   1042c:	csel	x0, x0, x1, cs  // cs = hs, nlast
   10430:	bl	fc94 <GOMP_single_copy_end@@GOMP_1.0+0x20c>
   10434:	str	x0, [x22, #56]
   10438:	add	x21, x20, #0xd0
   1043c:	add	x22, x22, #0x38
   10440:	mov	x23, #0x0                   	// #0
   10444:	mov	x25, #0x6                   	// #6
   10448:	cmp	x26, x23
   1044c:	b.ne	10558 <GOMP_single_copy_end@@GOMP_1.0+0xad0>  // b.any
   10450:	ldp	x19, x20, [sp, #16]
   10454:	ldp	x21, x22, [sp, #32]
   10458:	ldp	x23, x24, [sp, #48]
   1045c:	ldp	x25, x26, [sp, #64]
   10460:	ldp	x27, x28, [sp, #80]
   10464:	ldp	x29, x30, [sp], #96
   10468:	ret
   1046c:	ldp	x6, x0, [x2, #16]
   10470:	add	x8, x2, #0x28
   10474:	mov	x3, #0x0                   	// #0
   10478:	mov	x9, #0x28                  	// #40
   1047c:	add	x6, x6, x0
   10480:	ldr	x0, [x2, #32]
   10484:	add	x0, x0, x6
   10488:	mov	x4, x0
   1048c:	cmp	x4, x5
   10490:	b.cc	104cc <GOMP_single_copy_end@@GOMP_1.0+0xa44>  // b.lo, b.ul, b.last
   10494:	mov	x4, #0x28                  	// #40
   10498:	add	x7, x2, #0x28
   1049c:	mov	x1, #0x0                   	// #0
   104a0:	madd	x4, x3, x4, x20
   104a4:	add	x4, x4, #0x28
   104a8:	cmp	x1, x0
   104ac:	b.ne	10510 <GOMP_single_copy_end@@GOMP_1.0+0xa88>  // b.any
   104b0:	add	x3, x3, x0
   104b4:	add	x2, x2, #0x28
   104b8:	mov	x6, #0x28                  	// #40
   104bc:	cmp	x0, x5
   104c0:	b.cc	1052c <GOMP_single_copy_end@@GOMP_1.0+0xaa4>  // b.lo, b.ul, b.last
   104c4:	mov	x26, x5
   104c8:	b	10414 <GOMP_single_copy_end@@GOMP_1.0+0x98c>
   104cc:	ldr	x7, [x8, x4, lsl #3]
   104d0:	ldr	x1, [x7, #8]
   104d4:	cmp	x1, #0x1
   104d8:	b.eq	104fc <GOMP_single_copy_end@@GOMP_1.0+0xa74>  // b.none
   104dc:	sub	x10, x1, #0x2
   104e0:	cmp	x10, #0x2
   104e4:	b.hi	10504 <GOMP_single_copy_end@@GOMP_1.0+0xa7c>  // b.pmore
   104e8:	madd	x1, x3, x9, x20
   104ec:	add	x3, x3, #0x1
   104f0:	ldr	x7, [x7]
   104f4:	str	x7, [x1, #208]
   104f8:	strb	wzr, [x1, #240]
   104fc:	add	x4, x4, #0x1
   10500:	b	1048c <GOMP_single_copy_end@@GOMP_1.0+0xa04>
   10504:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   10508:	add	x0, x0, #0x57c
   1050c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   10510:	cmp	x6, x1
   10514:	ldr	x8, [x7, x1, lsl #3]
   10518:	add	x1, x1, #0x1
   1051c:	str	x8, [x4, #168]
   10520:	cset	w8, ls  // ls = plast
   10524:	strb	w8, [x4, #200]
   10528:	b	104a4 <GOMP_single_copy_end@@GOMP_1.0+0xa1c>
   1052c:	ldr	x1, [x2, x0, lsl #3]
   10530:	ldr	x4, [x1, #8]
   10534:	cmp	x4, #0x1
   10538:	b.ne	10550 <GOMP_single_copy_end@@GOMP_1.0+0xac8>  // b.any
   1053c:	ldr	x7, [x1]
   10540:	madd	x1, x3, x6, x20
   10544:	add	x3, x3, #0x1
   10548:	str	x7, [x1, #208]
   1054c:	strb	w4, [x1, #240]
   10550:	add	x0, x0, #0x1
   10554:	b	104bc <GOMP_single_copy_end@@GOMP_1.0+0xa34>
   10558:	stp	xzr, xzr, [x21, #8]
   1055c:	mov	x1, x21
   10560:	mov	x0, x22
   10564:	str	x20, [x21, #24]
   10568:	mov	w2, #0x1                   	// #1
   1056c:	strb	wzr, [x21, #33]
   10570:	strb	wzr, [x21, #34]
   10574:	bl	101e0 <GOMP_single_copy_end@@GOMP_1.0+0x758>
   10578:	mov	x27, x0
   1057c:	ldr	x19, [x0]
   10580:	cbz	x19, 106d4 <GOMP_single_copy_end@@GOMP_1.0+0xc4c>
   10584:	ldr	x0, [x19, #24]
   10588:	cmp	x0, x20
   1058c:	b.ne	105a4 <GOMP_single_copy_end@@GOMP_1.0+0xb1c>  // b.any
   10590:	mov	w0, #0x1                   	// #1
   10594:	strb	w0, [x21, #33]
   10598:	add	x23, x23, #0x1
   1059c:	add	x21, x21, #0x28
   105a0:	b	10448 <GOMP_single_copy_end@@GOMP_1.0+0x9c0>
   105a4:	mov	x1, #0x0                   	// #0
   105a8:	mov	x28, #0x0                   	// #0
   105ac:	ldrb	w0, [x19, #34]
   105b0:	ldrb	w2, [x21, #32]
   105b4:	cbnz	w0, 10604 <GOMP_single_copy_end@@GOMP_1.0+0xb7c>
   105b8:	ldrb	w0, [x19, #32]
   105bc:	cbz	w2, 10664 <GOMP_single_copy_end@@GOMP_1.0+0xbdc>
   105c0:	cbnz	w0, 105f8 <GOMP_single_copy_end@@GOMP_1.0+0xb70>
   105c4:	mov	x28, x19
   105c8:	ldr	x24, [x19, #24]
   105cc:	ldr	x0, [x24, #48]
   105d0:	cbnz	x0, 10670 <GOMP_single_copy_end@@GOMP_1.0+0xbe8>
   105d4:	mov	x0, #0x40                  	// #64
   105d8:	bl	adb0 <fprintf@plt+0x2250>
   105dc:	str	x0, [x24, #48]
   105e0:	mov	x1, #0x1                   	// #1
   105e4:	stp	x1, x25, [x0]
   105e8:	str	x20, [x0, #16]
   105ec:	ldr	x0, [x20, #80]
   105f0:	add	x0, x0, x1
   105f4:	str	x0, [x20, #80]
   105f8:	ldr	x0, [x19, #8]
   105fc:	mov	x1, x19
   10600:	cbnz	x0, 1065c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   10604:	ldr	x0, [x27]
   10608:	mov	x19, x28
   1060c:	str	x0, [x21, #8]
   10610:	str	x21, [x0, #16]
   10614:	ldrb	w0, [x21, #32]
   10618:	str	x21, [x27]
   1061c:	cbnz	w0, 10598 <GOMP_single_copy_end@@GOMP_1.0+0xb10>
   10620:	cbz	x19, 10598 <GOMP_single_copy_end@@GOMP_1.0+0xb10>
   10624:	cmp	x19, x1
   10628:	b.eq	10650 <GOMP_single_copy_end@@GOMP_1.0+0xbc8>  // b.none
   1062c:	ldp	x2, x0, [x19, #8]
   10630:	str	x0, [x2, #16]
   10634:	str	x2, [x0, #8]
   10638:	ldr	x0, [x1, #8]
   1063c:	stp	x0, x1, [x19, #8]
   10640:	str	x19, [x1, #8]
   10644:	ldr	x0, [x19, #8]
   10648:	cbz	x0, 10650 <GOMP_single_copy_end@@GOMP_1.0+0xbc8>
   1064c:	str	x19, [x0, #16]
   10650:	mov	w0, #0x1                   	// #1
   10654:	strb	w0, [x19, #34]
   10658:	b	10598 <GOMP_single_copy_end@@GOMP_1.0+0xb10>
   1065c:	mov	x19, x0
   10660:	b	105ac <GOMP_single_copy_end@@GOMP_1.0+0xb24>
   10664:	cmp	w0, #0x0
   10668:	csel	x28, x28, x19, ne  // ne = any
   1066c:	b	105c8 <GOMP_single_copy_end@@GOMP_1.0+0xb40>
   10670:	ldr	x1, [x0]
   10674:	cbz	x1, 10688 <GOMP_single_copy_end@@GOMP_1.0+0xc00>
   10678:	add	x3, x1, #0x1
   1067c:	ldr	x3, [x0, x3, lsl #3]
   10680:	cmp	x3, x20
   10684:	b.eq	105f8 <GOMP_single_copy_end@@GOMP_1.0+0xb70>  // b.none
   10688:	ldr	x3, [x0, #8]
   1068c:	cmp	x1, x3
   10690:	b.ne	106b0 <GOMP_single_copy_end@@GOMP_1.0+0xc28>  // b.any
   10694:	add	x1, x1, #0x1
   10698:	lsl	x1, x1, #1
   1069c:	str	x1, [x0, #8]
   106a0:	add	x1, x1, #0x2
   106a4:	lsl	x1, x1, #3
   106a8:	bl	ae20 <fprintf@plt+0x22c0>
   106ac:	str	x0, [x24, #48]
   106b0:	ldr	x1, [x24, #48]
   106b4:	ldr	x0, [x1]
   106b8:	add	x2, x0, #0x1
   106bc:	add	x0, x0, #0x2
   106c0:	str	x2, [x1]
   106c4:	str	x20, [x1, x0, lsl #3]
   106c8:	ldr	x0, [x20, #80]
   106cc:	add	x0, x0, #0x1
   106d0:	b	105f4 <GOMP_single_copy_end@@GOMP_1.0+0xb6c>
   106d4:	mov	x1, #0x0                   	// #0
   106d8:	b	10614 <GOMP_single_copy_end@@GOMP_1.0+0xb8c>
   106dc:	stp	x29, x30, [sp, #-80]!
   106e0:	mov	x29, sp
   106e4:	stp	x19, x20, [sp, #16]
   106e8:	mov	x19, x0
   106ec:	mov	x20, x0
   106f0:	stp	x23, x24, [sp, #48]
   106f4:	ldr	x23, [x19], #216
   106f8:	stp	x21, x22, [sp, #32]
   106fc:	mov	x22, #0x0                   	// #0
   10700:	add	x24, x23, #0x38
   10704:	str	x25, [sp, #64]
   10708:	mov	x25, #0x1                   	// #1
   1070c:	ldr	x0, [x20, #72]
   10710:	cmp	x0, x22
   10714:	b.hi	10730 <GOMP_single_copy_end@@GOMP_1.0+0xca8>  // b.pmore
   10718:	ldp	x19, x20, [sp, #16]
   1071c:	ldp	x21, x22, [sp, #32]
   10720:	ldp	x23, x24, [sp, #48]
   10724:	ldr	x25, [sp, #64]
   10728:	ldp	x29, x30, [sp], #80
   1072c:	ret
   10730:	ldrb	w0, [x19, #25]
   10734:	cbnz	w0, 10754 <GOMP_single_copy_end@@GOMP_1.0+0xccc>
   10738:	ldr	x0, [x19]
   1073c:	cbz	x0, 10748 <GOMP_single_copy_end@@GOMP_1.0+0xcc0>
   10740:	ldr	x1, [x19, #8]
   10744:	str	x1, [x0, #16]
   10748:	ldr	x1, [x19, #8]
   1074c:	cbz	x1, 10760 <GOMP_single_copy_end@@GOMP_1.0+0xcd8>
   10750:	str	x0, [x1, #8]
   10754:	add	x22, x22, #0x1
   10758:	add	x19, x19, #0x28
   1075c:	b	1070c <GOMP_single_copy_end@@GOMP_1.0+0xc84>
   10760:	sub	x21, x19, #0x8
   10764:	mov	x0, x24
   10768:	mov	x1, x21
   1076c:	mov	w2, #0x0                   	// #0
   10770:	bl	101e0 <GOMP_single_copy_end@@GOMP_1.0+0x758>
   10774:	ldr	x1, [x0]
   10778:	cmp	x1, x21
   1077c:	b.eq	10784 <GOMP_single_copy_end@@GOMP_1.0+0xcfc>  // b.none
   10780:	bl	88b0 <abort@plt>
   10784:	ldr	x1, [x19]
   10788:	cbz	x1, 10794 <GOMP_single_copy_end@@GOMP_1.0+0xd0c>
   1078c:	str	x1, [x0]
   10790:	b	10754 <GOMP_single_copy_end@@GOMP_1.0+0xccc>
   10794:	ldr	x1, [x23, #56]
   10798:	add	x3, x1, #0x20
   1079c:	cmp	x0, x3
   107a0:	b.cc	10780 <GOMP_single_copy_end@@GOMP_1.0+0xcf8>  // b.lo, b.ul, b.last
   107a4:	ldr	x2, [x1]
   107a8:	add	x2, x3, x2, lsl #3
   107ac:	cmp	x0, x2
   107b0:	b.cs	10780 <GOMP_single_copy_end@@GOMP_1.0+0xcf8>  // b.hs, b.nlast
   107b4:	cmp	x19, #0x9
   107b8:	b.eq	10780 <GOMP_single_copy_end@@GOMP_1.0+0xcf8>  // b.none
   107bc:	str	x25, [x0]
   107c0:	ldr	x0, [x1, #16]
   107c4:	add	x0, x0, #0x1
   107c8:	str	x0, [x1, #16]
   107cc:	b	10754 <GOMP_single_copy_end@@GOMP_1.0+0xccc>
   107d0:	stp	x29, x30, [sp, #-96]!
   107d4:	mov	x29, sp
   107d8:	stp	x19, x20, [sp, #16]
   107dc:	mov	x20, x1
   107e0:	ldr	x1, [x0, #72]
   107e4:	stp	x21, x22, [sp, #32]
   107e8:	stp	x23, x24, [sp, #48]
   107ec:	stp	x25, x26, [sp, #64]
   107f0:	stp	x27, x28, [sp, #80]
   107f4:	cbnz	x1, 1081c <GOMP_single_copy_end@@GOMP_1.0+0xd94>
   107f8:	mov	x22, #0x0                   	// #0
   107fc:	mov	x0, x22
   10800:	ldp	x19, x20, [sp, #16]
   10804:	ldp	x21, x22, [sp, #32]
   10808:	ldp	x23, x24, [sp, #48]
   1080c:	ldp	x25, x26, [sp, #64]
   10810:	ldp	x27, x28, [sp, #80]
   10814:	ldp	x29, x30, [sp], #96
   10818:	ret
   1081c:	ldr	x1, [x0]
   10820:	mov	x21, x0
   10824:	cbz	x1, 1082c <GOMP_single_copy_end@@GOMP_1.0+0xda4>
   10828:	bl	106dc <GOMP_single_copy_end@@GOMP_1.0+0xc54>
   1082c:	ldr	x0, [x21, #48]
   10830:	cbz	x0, 107f8 <GOMP_single_copy_end@@GOMP_1.0+0xd70>
   10834:	ldr	x25, [x21]
   10838:	add	x27, x20, #0x508
   1083c:	ldr	x26, [x0]
   10840:	add	x28, x25, #0x8
   10844:	mov	x22, #0x0                   	// #0
   10848:	mov	x24, #0x0                   	// #0
   1084c:	cmp	x26, x24
   10850:	ldr	x0, [x21, #48]
   10854:	b.ne	10878 <GOMP_single_copy_end@@GOMP_1.0+0xdf0>  // b.any
   10858:	bl	8950 <free@plt>
   1085c:	str	xzr, [x21, #48]
   10860:	cmp	x22, #0x1
   10864:	b.ls	107fc <GOMP_single_copy_end@@GOMP_1.0+0xd74>  // b.plast
   10868:	ldr	w0, [x20, #132]
   1086c:	orr	w0, w0, #0x1
   10870:	str	w0, [x20, #132]
   10874:	b	107fc <GOMP_single_copy_end@@GOMP_1.0+0xd74>
   10878:	add	x1, x24, #0x2
   1087c:	ldr	x19, [x0, x1, lsl #3]
   10880:	ldr	x0, [x19, #80]
   10884:	sub	x0, x0, #0x1
   10888:	str	x0, [x19, #80]
   1088c:	cbnz	x0, 10944 <GOMP_single_copy_end@@GOMP_1.0+0xebc>
   10890:	ldr	x23, [x19, #40]
   10894:	cbz	x25, 108d0 <GOMP_single_copy_end@@GOMP_1.0+0xe48>
   10898:	ldrb	w6, [x19, #207]
   1089c:	mov	w0, #0x1                   	// #1
   108a0:	ldr	w3, [x19, #88]
   108a4:	mov	x2, x19
   108a8:	mov	x1, x28
   108ac:	mov	w5, #0x1                   	// #1
   108b0:	mov	w4, #0x0                   	// #0
   108b4:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   108b8:	ldr	x0, [x25, #64]
   108bc:	cbz	x0, 108d0 <GOMP_single_copy_end@@GOMP_1.0+0xe48>
   108c0:	ldrb	w1, [x0]
   108c4:	cbz	w1, 1094c <GOMP_single_copy_end@@GOMP_1.0+0xec4>
   108c8:	strb	wzr, [x0], #16
   108cc:	bl	fd8c <GOMP_single_copy_end@@GOMP_1.0+0x304>
   108d0:	cbz	x23, 10908 <GOMP_single_copy_end@@GOMP_1.0+0xe80>
   108d4:	ldrb	w6, [x19, #207]
   108d8:	mov	w0, #0x2                   	// #2
   108dc:	ldr	w3, [x19, #88]
   108e0:	mov	x2, x19
   108e4:	add	x1, x23, #0x8
   108e8:	mov	w5, #0x0                   	// #0
   108ec:	mov	w4, #0x0                   	// #0
   108f0:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   108f4:	ldrb	w0, [x23, #48]
   108f8:	cbz	w0, 10908 <GOMP_single_copy_end@@GOMP_1.0+0xe80>
   108fc:	strb	wzr, [x23, #48]
   10900:	add	x0, x23, #0x34
   10904:	bl	fd8c <GOMP_single_copy_end@@GOMP_1.0+0x304>
   10908:	ldrb	w6, [x19, #207]
   1090c:	mov	w0, #0x0                   	// #0
   10910:	ldr	w3, [x19, #88]
   10914:	mov	x2, x19
   10918:	mov	x1, x27
   1091c:	mov	w5, #0x0                   	// #0
   10920:	mov	w4, #0x1                   	// #1
   10924:	add	x22, x22, #0x1
   10928:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   1092c:	ldr	w0, [x20, #1320]
   10930:	add	w0, w0, #0x1
   10934:	str	w0, [x20, #1320]
   10938:	ldr	w0, [x20, #1324]
   1093c:	add	w0, w0, #0x1
   10940:	str	w0, [x20, #1324]
   10944:	add	x24, x24, #0x1
   10948:	b	1084c <GOMP_single_copy_end@@GOMP_1.0+0xdc4>
   1094c:	ldrb	w1, [x0, #1]
   10950:	cbz	w1, 108d0 <GOMP_single_copy_end@@GOMP_1.0+0xe48>
   10954:	add	x0, x0, #0x10
   10958:	sturb	wzr, [x0, #-15]
   1095c:	b	108cc <GOMP_single_copy_end@@GOMP_1.0+0xe44>
   10960:	stp	x29, x30, [sp, #-32]!
   10964:	ubfiz	x4, x0, #4, #32
   10968:	add	x4, x4, #0x60
   1096c:	mov	x29, sp
   10970:	stp	x19, x20, [sp, #16]
   10974:	mov	w20, w3
   10978:	mov	x5, x2
   1097c:	ldr	x3, [x1]
   10980:	mov	x19, x1
   10984:	add	x2, x2, x4
   10988:	cbz	x3, 109bc <GOMP_single_copy_end@@GOMP_1.0+0xf34>
   1098c:	bl	1f250 <acc_set_cuda_stream@@OACC_2.0+0x470>
   10990:	ldr	x0, [x19]
   10994:	cbz	x0, 109a8 <GOMP_single_copy_end@@GOMP_1.0+0xf20>
   10998:	mov	w0, #0x0                   	// #0
   1099c:	ldp	x19, x20, [sp, #16]
   109a0:	ldp	x29, x30, [sp], #32
   109a4:	ret
   109a8:	cmp	w20, #0x3
   109ac:	b.ne	109b4 <GOMP_single_copy_end@@GOMP_1.0+0xf2c>  // b.any
   109b0:	stlr	xzr, [x19]
   109b4:	mov	w0, #0x1                   	// #1
   109b8:	b	1099c <GOMP_single_copy_end@@GOMP_1.0+0xf14>
   109bc:	ldr	x1, [x2, #8]
   109c0:	ldr	x0, [x5, x4]
   109c4:	str	x0, [x1]
   109c8:	str	x1, [x0, #8]
   109cc:	add	x1, x19, #0x8
   109d0:	ldr	x3, [x1, #8]
   109d4:	cmp	x2, x3
   109d8:	b.ne	10998 <GOMP_single_copy_end@@GOMP_1.0+0xf10>  // b.any
   109dc:	cmp	x2, x0
   109e0:	b.eq	109ec <GOMP_single_copy_end@@GOMP_1.0+0xf64>  // b.none
   109e4:	str	x0, [x1, #8]
   109e8:	b	10998 <GOMP_single_copy_end@@GOMP_1.0+0xf10>
   109ec:	cmp	w20, #0x3
   109f0:	b.ne	109fc <GOMP_single_copy_end@@GOMP_1.0+0xf74>  // b.any
   109f4:	add	x19, x19, #0x10
   109f8:	b	109b0 <GOMP_single_copy_end@@GOMP_1.0+0xf28>
   109fc:	str	xzr, [x1, #8]
   10a00:	b	109b4 <GOMP_single_copy_end@@GOMP_1.0+0xf2c>
   10a04:	stp	x29, x30, [sp, #-32]!
   10a08:	mov	x29, sp
   10a0c:	stp	x19, x20, [sp, #16]
   10a10:	ldr	x20, [x0]
   10a14:	cbz	x20, 10a84 <GOMP_single_copy_end@@GOMP_1.0+0xffc>
   10a18:	mov	x19, x0
   10a1c:	ldrb	w0, [x0, #207]
   10a20:	cbz	w0, 10a4c <GOMP_single_copy_end@@GOMP_1.0+0xfc4>
   10a24:	ldr	x0, [x20, #64]
   10a28:	ldr	x1, [x0, #8]
   10a2c:	sub	x1, x1, #0x1
   10a30:	str	x1, [x0, #8]
   10a34:	cbnz	x1, 10a4c <GOMP_single_copy_end@@GOMP_1.0+0xfc4>
   10a38:	ldrb	w1, [x0, #1]
   10a3c:	cbz	w1, 10a4c <GOMP_single_copy_end@@GOMP_1.0+0xfc4>
   10a40:	strb	wzr, [x0, #1]
   10a44:	add	x0, x0, #0x10
   10a48:	bl	fd8c <GOMP_single_copy_end@@GOMP_1.0+0x304>
   10a4c:	mov	x2, x19
   10a50:	add	x1, x20, #0x8
   10a54:	mov	w3, #0x3                   	// #3
   10a58:	mov	w0, #0x1                   	// #1
   10a5c:	bl	10960 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   10a60:	tst	w0, #0xff
   10a64:	b.eq	10a80 <GOMP_single_copy_end@@GOMP_1.0+0xff8>  // b.none
   10a68:	ldr	x0, [x20, #64]
   10a6c:	cbz	x0, 10a80 <GOMP_single_copy_end@@GOMP_1.0+0xff8>
   10a70:	ldrb	w1, [x0]
   10a74:	cbz	w1, 10a80 <GOMP_single_copy_end@@GOMP_1.0+0xff8>
   10a78:	strb	wzr, [x0], #16
   10a7c:	bl	fd8c <GOMP_single_copy_end@@GOMP_1.0+0x304>
   10a80:	stp	xzr, xzr, [x19, #112]
   10a84:	ldp	x19, x20, [sp, #16]
   10a88:	ldp	x29, x30, [sp], #32
   10a8c:	ret
   10a90:	stp	x29, x30, [sp, #-32]!
   10a94:	mov	x29, sp
   10a98:	stp	x19, x20, [sp, #16]
   10a9c:	ldr	x19, [x0, #40]
   10aa0:	cbz	x19, 10b04 <GOMP_single_copy_end@@GOMP_1.0+0x107c>
   10aa4:	mov	x20, x0
   10aa8:	mov	x2, x0
   10aac:	add	x1, x19, #0x8
   10ab0:	mov	w3, #0x0                   	// #0
   10ab4:	mov	w0, #0x2                   	// #2
   10ab8:	bl	10960 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   10abc:	ldr	x1, [x19, #56]
   10ac0:	stp	xzr, xzr, [x20, #128]
   10ac4:	and	w0, w0, #0xff
   10ac8:	cmp	x1, #0x1
   10acc:	b.ls	10af8 <GOMP_single_copy_end@@GOMP_1.0+0x1070>  // b.plast
   10ad0:	sub	x1, x1, #0x1
   10ad4:	str	x1, [x19, #56]
   10ad8:	cbz	w0, 10b04 <GOMP_single_copy_end@@GOMP_1.0+0x107c>
   10adc:	ldrb	w0, [x19, #48]
   10ae0:	cbz	w0, 10b04 <GOMP_single_copy_end@@GOMP_1.0+0x107c>
   10ae4:	strb	wzr, [x19, #48]
   10ae8:	add	x0, x19, #0x34
   10aec:	ldp	x19, x20, [sp, #16]
   10af0:	ldp	x29, x30, [sp], #32
   10af4:	b	fd8c <GOMP_single_copy_end@@GOMP_1.0+0x304>
   10af8:	add	x1, x19, #0x38
   10afc:	stlr	xzr, [x1]
   10b00:	b	10ad8 <GOMP_single_copy_end@@GOMP_1.0+0x1050>
   10b04:	ldp	x19, x20, [sp, #16]
   10b08:	ldp	x29, x30, [sp], #32
   10b0c:	ret
   10b10:	stp	x29, x30, [sp, #-32]!
   10b14:	mov	x29, sp
   10b18:	stp	x19, x20, [sp, #16]
   10b1c:	mov	w20, w0
   10b20:	mov	x19, x2
   10b24:	mov	x0, x1
   10b28:	ldr	x2, [x1], #8
   10b2c:	cbz	x2, 10b3c <GOMP_single_copy_end@@GOMP_1.0+0x10b4>
   10b30:	ldr	w1, [x19, #88]
   10b34:	bl	fd44 <GOMP_single_copy_end@@GOMP_1.0+0x2bc>
   10b38:	mov	x1, x0
   10b3c:	ubfiz	x0, x20, #4, #32
   10b40:	add	x0, x0, #0x60
   10b44:	add	x3, x19, x0
   10b48:	ldr	x2, [x19, x0]
   10b4c:	ldr	x4, [x3, #8]
   10b50:	ldr	x0, [x1, #8]
   10b54:	str	x2, [x4]
   10b58:	str	x4, [x2, #8]
   10b5c:	cmp	x3, x0
   10b60:	b.ne	10b70 <GOMP_single_copy_end@@GOMP_1.0+0x10e8>  // b.any
   10b64:	cmp	x3, x2
   10b68:	csel	x2, x2, xzr, ne  // ne = any
   10b6c:	str	x2, [x1, #8]
   10b70:	cmp	w20, #0x1
   10b74:	ldrb	w5, [x19, #207]
   10b78:	mov	x2, x19
   10b7c:	mov	w0, w20
   10b80:	ldp	x19, x20, [sp, #16]
   10b84:	cset	w4, eq  // eq = none
   10b88:	ldp	x29, x30, [sp], #32
   10b8c:	mov	w3, #0x0                   	// #0
   10b90:	b	fdf4 <GOMP_single_copy_end@@GOMP_1.0+0x36c>
   10b94:	stp	x29, x30, [sp, #-48]!
   10b98:	mov	x29, sp
   10b9c:	stp	x21, x22, [sp, #32]
   10ba0:	ldr	x22, [x1]
   10ba4:	stp	x19, x20, [sp, #16]
   10ba8:	mov	x19, x0
   10bac:	mov	x20, x1
   10bb0:	cbz	x22, 10bc4 <GOMP_single_copy_end@@GOMP_1.0+0x113c>
   10bb4:	mov	x2, x1
   10bb8:	mov	w0, #0x1                   	// #1
   10bbc:	add	x1, x22, #0x8
   10bc0:	bl	10b10 <GOMP_single_copy_end@@GOMP_1.0+0x1088>
   10bc4:	ldr	x21, [x20, #40]
   10bc8:	cbz	x21, 10bdc <GOMP_single_copy_end@@GOMP_1.0+0x1154>
   10bcc:	mov	x2, x20
   10bd0:	add	x1, x21, #0x8
   10bd4:	mov	w0, #0x2                   	// #2
   10bd8:	bl	10b10 <GOMP_single_copy_end@@GOMP_1.0+0x1088>
   10bdc:	ldrb	w6, [x20, #207]
   10be0:	mov	w0, #0x0                   	// #0
   10be4:	ldr	w3, [x20, #88]
   10be8:	mov	x2, x20
   10bec:	add	x1, x19, #0x508
   10bf0:	mov	w5, #0x0                   	// #0
   10bf4:	mov	w4, #0x0                   	// #0
   10bf8:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   10bfc:	mov	w0, #0x2                   	// #2
   10c00:	str	w0, [x20, #200]
   10c04:	cbz	x22, 10c20 <GOMP_single_copy_end@@GOMP_1.0+0x1198>
   10c08:	ldr	x0, [x22, #64]
   10c0c:	cbz	x0, 10c20 <GOMP_single_copy_end@@GOMP_1.0+0x1198>
   10c10:	ldrb	w1, [x0]
   10c14:	cbz	w1, 10c78 <GOMP_single_copy_end@@GOMP_1.0+0x11f0>
   10c18:	strb	wzr, [x0], #16
   10c1c:	bl	fd8c <GOMP_single_copy_end@@GOMP_1.0+0x304>
   10c20:	cbz	x21, 10c38 <GOMP_single_copy_end@@GOMP_1.0+0x11b0>
   10c24:	ldrb	w0, [x21, #48]
   10c28:	cbz	w0, 10c38 <GOMP_single_copy_end@@GOMP_1.0+0x11b0>
   10c2c:	strb	wzr, [x21, #48]
   10c30:	add	x0, x21, #0x34
   10c34:	bl	fd8c <GOMP_single_copy_end@@GOMP_1.0+0x304>
   10c38:	ldr	w0, [x19, #1324]
   10c3c:	ldr	w1, [x19]
   10c40:	add	w0, w0, #0x1
   10c44:	str	w0, [x19, #1324]
   10c48:	ldr	w0, [x19, #132]
   10c4c:	orr	w0, w0, #0x1
   10c50:	str	w0, [x19, #132]
   10c54:	ldr	w0, [x19, #1328]
   10c58:	cmp	w1, w0
   10c5c:	b.ls	10c8c <GOMP_single_copy_end@@GOMP_1.0+0x1204>  // b.plast
   10c60:	add	x0, x19, #0x80
   10c64:	mov	w1, #0x1                   	// #1
   10c68:	ldp	x19, x20, [sp, #16]
   10c6c:	ldp	x21, x22, [sp, #32]
   10c70:	ldp	x29, x30, [sp], #48
   10c74:	b	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   10c78:	ldrb	w1, [x0, #1]
   10c7c:	cbz	w1, 10c20 <GOMP_single_copy_end@@GOMP_1.0+0x1198>
   10c80:	add	x0, x0, #0x10
   10c84:	sturb	wzr, [x0, #-15]
   10c88:	b	10c1c <GOMP_single_copy_end@@GOMP_1.0+0x1194>
   10c8c:	ldp	x19, x20, [sp, #16]
   10c90:	ldp	x21, x22, [sp, #32]
   10c94:	ldp	x29, x30, [sp], #48
   10c98:	ret
   10c9c:	stp	x29, x30, [sp, #-48]!
   10ca0:	mov	x29, sp
   10ca4:	stp	x19, x20, [sp, #16]
   10ca8:	mov	x19, x0
   10cac:	mov	x20, x2
   10cb0:	str	x21, [sp, #32]
   10cb4:	cbz	x1, 10cdc <GOMP_single_copy_end@@GOMP_1.0+0x1254>
   10cb8:	mov	x0, x1
   10cbc:	ldr	x1, [x0, #8]!
   10cc0:	cbz	x1, 10d90 <GOMP_single_copy_end@@GOMP_1.0+0x1308>
   10cc4:	ldr	w1, [x19, #88]
   10cc8:	bl	fd44 <GOMP_single_copy_end@@GOMP_1.0+0x2bc>
   10ccc:	mov	x1, x0
   10cd0:	mov	x2, x19
   10cd4:	mov	w0, #0x1                   	// #1
   10cd8:	bl	fb64 <GOMP_single_copy_end@@GOMP_1.0+0xdc>
   10cdc:	ldr	x21, [x19, #40]
   10ce0:	cbz	x21, 10d08 <GOMP_single_copy_end@@GOMP_1.0+0x1280>
   10ce4:	mov	x0, x21
   10ce8:	ldr	x1, [x0, #8]!
   10cec:	cbz	x1, 10d9c <GOMP_single_copy_end@@GOMP_1.0+0x1314>
   10cf0:	ldr	w1, [x19, #88]
   10cf4:	bl	fd44 <GOMP_single_copy_end@@GOMP_1.0+0x2bc>
   10cf8:	mov	x1, x0
   10cfc:	mov	x2, x19
   10d00:	mov	w0, #0x2                   	// #2
   10d04:	bl	fb64 <GOMP_single_copy_end@@GOMP_1.0+0xdc>
   10d08:	mov	x2, x19
   10d0c:	add	x1, x20, #0x508
   10d10:	mov	w3, #0x0                   	// #0
   10d14:	mov	w0, #0x0                   	// #0
   10d18:	bl	10960 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   10d1c:	stp	xzr, xzr, [x19, #96]
   10d20:	mov	w0, #0x3                   	// #3
   10d24:	str	w0, [x19, #200]
   10d28:	ldr	w0, [x20, #1324]
   10d2c:	sub	w0, w0, #0x1
   10d30:	str	w0, [x20, #1324]
   10d34:	cbnz	w0, 10d44 <GOMP_single_copy_end@@GOMP_1.0+0x12bc>
   10d38:	ldr	w0, [x20, #132]
   10d3c:	and	w0, w0, #0xfffffffe
   10d40:	str	w0, [x20, #132]
   10d44:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   10d48:	ldrb	w0, [x0, #1372]
   10d4c:	cbz	w0, 10d80 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   10d50:	ldrb	w1, [x19, #206]
   10d54:	cbnz	w1, 10da8 <GOMP_single_copy_end@@GOMP_1.0+0x1320>
   10d58:	ldr	w1, [x20, #132]
   10d5c:	tbnz	w1, #2, 10d80 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   10d60:	cbz	x21, 10da8 <GOMP_single_copy_end@@GOMP_1.0+0x1320>
   10d64:	ldrb	w0, [x21, #49]
   10d68:	cbnz	w0, 10d80 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   10d6c:	ldrb	w1, [x21, #50]
   10d70:	cbz	w1, 10d80 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   10d74:	ldr	x1, [x21]
   10d78:	cbz	x1, 10d80 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   10d7c:	ldrb	w0, [x1, #49]
   10d80:	ldp	x19, x20, [sp, #16]
   10d84:	ldr	x21, [sp, #32]
   10d88:	ldp	x29, x30, [sp], #48
   10d8c:	ret
   10d90:	mov	x2, x19
   10d94:	add	x1, x0, #0x8
   10d98:	b	10cd4 <GOMP_single_copy_end@@GOMP_1.0+0x124c>
   10d9c:	mov	x2, x19
   10da0:	add	x1, x0, #0x8
   10da4:	b	10d00 <GOMP_single_copy_end@@GOMP_1.0+0x1278>
   10da8:	mov	w0, #0x0                   	// #0
   10dac:	b	10d80 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   10db0:	mov	x3, x0
   10db4:	ldp	x4, x5, [x2]
   10db8:	str	x1, [x3], #144
   10dbc:	stp	x4, x5, [x0, #144]
   10dc0:	ldp	x4, x5, [x2, #16]
   10dc4:	stp	x4, x5, [x3, #16]
   10dc8:	ldr	x1, [x2, #32]
   10dcc:	str	x1, [x3, #32]
   10dd0:	str	xzr, [x0, #8]
   10dd4:	stp	xzr, xzr, [x0, #24]
   10dd8:	stp	xzr, xzr, [x0, #40]
   10ddc:	stp	xzr, xzr, [x0, #56]
   10de0:	str	xzr, [x0, #72]
   10de4:	str	xzr, [x0, #200]
   10de8:	ret
   10dec:	stp	x29, x30, [sp, #-32]!
   10df0:	mrs	x0, tpidr_el0
   10df4:	mov	x29, sp
   10df8:	stp	x19, x20, [sp, #16]
   10dfc:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   10e00:	ldr	x19, [x19, #4016]
   10e04:	add	x19, x0, x19
   10e08:	ldr	x20, [x19, #80]
   10e0c:	mov	x0, x20
   10e10:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   10e14:	ldr	x0, [x20]
   10e18:	str	x0, [x19, #80]
   10e1c:	ldp	x19, x20, [sp, #16]
   10e20:	ldp	x29, x30, [sp], #32
   10e24:	ret
   10e28:	stp	x29, x30, [sp, #-48]!
   10e2c:	mov	w0, #0x1                   	// #1
   10e30:	mov	x29, sp
   10e34:	stp	x19, x20, [sp, #16]
   10e38:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   10e3c:	ldr	x19, [x19, #4016]
   10e40:	str	x21, [sp, #32]
   10e44:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
   10e48:	mrs	x1, tpidr_el0
   10e4c:	add	x3, x0, #0x100
   10e50:	add	x19, x1, x19
   10e54:	add	x20, x0, #0x540
   10e58:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   10e5c:	add	x1, x1, #0x2c0
   10e60:	ldp	x6, x7, [x19, #16]
   10e64:	ldp	x4, x5, [x19, #64]
   10e68:	ldr	x21, [x19, #80]
   10e6c:	stp	x6, x7, [x0, #8]
   10e70:	ldp	x6, x7, [x19, #32]
   10e74:	stp	x6, x7, [x0, #24]
   10e78:	cmp	x21, #0x0
   10e7c:	ldp	x6, x7, [x19, #48]
   10e80:	stp	x6, x7, [x0, #40]
   10e84:	add	x2, x21, #0x90
   10e88:	stp	x4, x5, [x0, #56]
   10e8c:	csel	x2, x1, x2, eq  // eq = none
   10e90:	mov	x1, #0x0                   	// #0
   10e94:	stp	x0, x3, [x19, #16]
   10e98:	mov	x0, x20
   10e9c:	str	xzr, [x19, #32]
   10ea0:	str	wzr, [x19, #40]
   10ea4:	stp	xzr, xzr, [x19, #64]
   10ea8:	str	x20, [x19, #80]
   10eac:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   10eb0:	cbz	x21, 10ed8 <GOMP_single_copy_end@@GOMP_1.0+0x1450>
   10eb4:	str	x21, [x19, #80]
   10eb8:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   10ebc:	mov	x0, x21
   10ec0:	bl	8950 <free@plt>
   10ec4:	ldr	x21, [sp, #32]
   10ec8:	str	x20, [x19, #80]
   10ecc:	ldp	x19, x20, [sp, #16]
   10ed0:	ldp	x29, x30, [sp], #48
   10ed4:	ret
   10ed8:	mov	x1, x19
   10edc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   10ee0:	ldp	x19, x20, [sp, #16]
   10ee4:	ldr	x21, [sp, #32]
   10ee8:	ldp	x29, x30, [sp], #48
   10eec:	ldr	w0, [x0, #1704]
   10ef0:	b	8a00 <pthread_setspecific@plt>

0000000000010ef4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1>:
   10ef4:	stp	x29, x30, [sp, #-48]!
   10ef8:	mov	x29, sp
   10efc:	stp	x21, x22, [sp, #32]
   10f00:	ldp	x22, x21, [x0, #56]
   10f04:	stp	x19, x20, [sp, #16]
   10f08:	mov	x19, x0
   10f0c:	add	x20, x21, #0x500
   10f10:	mov	x0, x20
   10f14:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   10f18:	ldr	w0, [x19, #44]
   10f1c:	cmp	w0, #0x3
   10f20:	mov	w0, #0x5                   	// #5
   10f24:	str	w0, [x19, #44]
   10f28:	b.ne	10f40 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4c>  // b.any
   10f2c:	mov	x0, x20
   10f30:	ldp	x19, x20, [sp, #16]
   10f34:	ldp	x21, x22, [sp, #32]
   10f38:	ldp	x29, x30, [sp], #48
   10f3c:	b	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   10f40:	mov	x1, x22
   10f44:	mov	x0, x21
   10f48:	bl	10b94 <GOMP_single_copy_end@@GOMP_1.0+0x110c>
   10f4c:	b	10f2c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x38>
   10f50:	stp	x29, x30, [sp, #-176]!
   10f54:	mov	x29, sp
   10f58:	stp	x27, x28, [sp, #80]
   10f5c:	mov	x28, x1
   10f60:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   10f64:	stp	x0, x5, [sp, #112]
   10f68:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   10f6c:	ldr	x0, [x0, #4016]
   10f70:	stp	x19, x20, [sp, #16]
   10f74:	mov	x19, x2
   10f78:	ldrb	w2, [x1, #1372]
   10f7c:	stp	x21, x22, [sp, #32]
   10f80:	mrs	x21, tpidr_el0
   10f84:	mov	x22, x7
   10f88:	str	x0, [sp, #96]
   10f8c:	add	x0, x21, x0
   10f90:	stp	x23, x24, [sp, #48]
   10f94:	stp	x25, x26, [sp, #64]
   10f98:	mov	x25, x4
   10f9c:	str	x3, [sp, #128]
   10fa0:	str	w6, [sp, #140]
   10fa4:	str	x1, [sp, #144]
   10fa8:	ldr	x27, [x0, #16]
   10fac:	cbz	w2, 10ff0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc>
   10fb0:	cbz	x27, 10ff0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc>
   10fb4:	ldr	w1, [x27, #132]
   10fb8:	tbz	w1, #2, 10fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd0>
   10fbc:	mov	w25, #0x1                   	// #1
   10fc0:	b	11160 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x26c>
   10fc4:	ldr	x0, [x0, #80]
   10fc8:	ldr	x0, [x0, #40]
   10fcc:	cbz	x0, 10ff0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc>
   10fd0:	ldrb	w1, [x0, #49]
   10fd4:	cbnz	w1, 10fbc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc8>
   10fd8:	ldrb	w1, [x0, #50]
   10fdc:	cbz	w1, 10ff0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc>
   10fe0:	ldr	x0, [x0]
   10fe4:	cbz	x0, 10ff0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc>
   10fe8:	ldrb	w0, [x0, #49]
   10fec:	cbnz	w0, 10fbc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc8>
   10ff0:	ldr	x0, [sp, #96]
   10ff4:	add	x0, x21, x0
   10ff8:	ldr	x20, [x0, #80]
   10ffc:	ldr	x26, [x20, #40]
   11000:	cbz	x22, 11180 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x28c>
   11004:	ldr	x3, [x22]
   11008:	cbnz	x3, 11010 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x11c>
   1100c:	ldr	x3, [x22, #8]
   11010:	mov	x24, #0x28                  	// #40
   11014:	mul	x0, x3, x24
   11018:	str	x0, [sp, #104]
   1101c:	mov	x2, #0x0                   	// #0
   11020:	cbnz	x28, 111e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2f4>
   11024:	mov	x5, #0x0                   	// #0
   11028:	ldr	x1, [sp, #104]
   1102c:	mov	x0, #0x12                  	// #18
   11030:	stp	x3, x5, [sp, #152]
   11034:	add	x2, x1, x2
   11038:	mul	x0, x19, x0
   1103c:	add	x0, x0, #0x120
   11040:	add	x0, x0, x2
   11044:	bl	adb0 <fprintf@plt+0x2250>
   11048:	ldr	x1, [sp, #96]
   1104c:	mov	x23, x0
   11050:	add	x1, x21, x1
   11054:	ldr	x6, [x1, #80]
   11058:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1105c:	add	x1, x1, #0x2c0
   11060:	cmp	x6, #0x0
   11064:	add	x2, x6, #0x90
   11068:	csel	x2, x1, x2, eq  // eq = none
   1106c:	mov	x1, x20
   11070:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   11074:	str	wzr, [x23, #88]
   11078:	mov	w0, #0x2                   	// #2
   1107c:	str	w0, [x23, #200]
   11080:	ldrb	w0, [x20, #204]
   11084:	lsl	x2, x19, #3
   11088:	ldr	x3, [sp, #152]
   1108c:	strb	w0, [x23, #204]
   11090:	mov	x0, #0x28                  	// #40
   11094:	str	x26, [x23, #40]
   11098:	ldr	x1, [sp, #128]
   1109c:	mul	x3, x3, x0
   110a0:	ldr	x0, [sp, #112]
   110a4:	add	x3, x3, #0xd0
   110a8:	add	x24, x23, x3
   110ac:	str	x2, [sp, #152]
   110b0:	str	x0, [x23, x3]
   110b4:	ldr	x0, [sp, #176]
   110b8:	stp	x28, x19, [x24, #8]
   110bc:	add	x28, x24, #0x50
   110c0:	str	x0, [x24, #72]
   110c4:	mov	x0, x28
   110c8:	bl	8600 <memcpy@plt>
   110cc:	ldr	x2, [sp, #152]
   110d0:	mov	x1, x25
   110d4:	add	x0, x2, #0x50
   110d8:	add	x0, x24, x0
   110dc:	str	x0, [x24, #24]
   110e0:	bl	8600 <memcpy@plt>
   110e4:	ldr	x0, [x24, #24]
   110e8:	ldr	x2, [sp, #152]
   110ec:	ldr	x1, [sp, #120]
   110f0:	add	x0, x0, x2
   110f4:	str	x0, [x24, #32]
   110f8:	lsl	x2, x19, #1
   110fc:	str	x2, [sp, #152]
   11100:	bl	8600 <memcpy@plt>
   11104:	ldp	x2, x5, [sp, #152]
   11108:	cbnz	x5, 111f8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x304>
   1110c:	ldr	w0, [sp, #140]
   11110:	add	x19, x27, #0x500
   11114:	str	w0, [x24, #40]
   11118:	ldr	w0, [sp, #184]
   1111c:	str	w0, [x24, #44]
   11120:	mov	x0, x19
   11124:	stp	x23, x27, [x24, #56]
   11128:	stp	xzr, x24, [x23, #184]
   1112c:	strb	wzr, [x23, #205]
   11130:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   11134:	ldr	x0, [sp, #144]
   11138:	ldrb	w25, [x0, #1372]
   1113c:	cbz	w25, 112b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3c4>
   11140:	ldr	w0, [x27, #132]
   11144:	tbz	w0, #2, 11294 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3a0>
   11148:	mov	x0, x19
   1114c:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   11150:	mov	x0, x23
   11154:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   11158:	mov	x0, x23
   1115c:	bl	8950 <free@plt>
   11160:	mov	w0, w25
   11164:	ldp	x19, x20, [sp, #16]
   11168:	ldp	x21, x22, [sp, #32]
   1116c:	ldp	x23, x24, [sp, #48]
   11170:	ldp	x25, x26, [sp, #64]
   11174:	ldp	x27, x28, [sp, #80]
   11178:	ldp	x29, x30, [sp], #176
   1117c:	ret
   11180:	mov	x3, #0x0                   	// #0
   11184:	str	xzr, [sp, #104]
   11188:	b	1101c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x128>
   1118c:	ldr	x1, [sp, #120]
   11190:	ldrh	w1, [x1, x2, lsl #1]
   11194:	and	w7, w1, #0xff
   11198:	cmp	w7, #0xc
   1119c:	b.ne	111c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2d4>  // b.any
   111a0:	lsr	w1, w1, #8
   111a4:	sub	x0, x0, #0x1
   111a8:	lsl	x1, x6, x1
   111ac:	cmp	x5, x1
   111b0:	add	x0, x0, x1
   111b4:	csel	x5, x5, x1, cs  // cs = hs, nlast
   111b8:	neg	x1, x1
   111bc:	and	x1, x1, x0
   111c0:	ldr	x0, [x25, x2, lsl #3]
   111c4:	add	x0, x1, x0
   111c8:	add	x2, x2, #0x1
   111cc:	cmp	x2, x19
   111d0:	b.ne	1118c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x298>  // b.any
   111d4:	add	x2, x5, x0
   111d8:	cmp	x5, #0x0
   111dc:	sub	x2, x2, #0x1
   111e0:	csel	x2, x2, xzr, ne  // ne = any
   111e4:	b	11028 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x134>
   111e8:	mov	x0, #0x0                   	// #0
   111ec:	mov	x5, #0x0                   	// #0
   111f0:	mov	x6, #0x1                   	// #1
   111f4:	b	111cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2d8>
   111f8:	ldr	x6, [x24, #32]
   111fc:	sub	x0, x5, #0x1
   11200:	add	x6, x6, x2
   11204:	ands	x0, x6, x0
   11208:	b.eq	11214 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x320>  // b.none
   1120c:	sub	x5, x5, x0
   11210:	add	x6, x6, x5
   11214:	mov	x5, #0x0                   	// #0
   11218:	mov	x3, #0x0                   	// #0
   1121c:	mov	x11, #0x1                   	// #1
   11220:	cmp	x5, x19
   11224:	b.eq	1110c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x218>  // b.none
   11228:	ldr	x0, [sp, #120]
   1122c:	ldrh	w0, [x0, x5, lsl #1]
   11230:	and	w1, w0, #0xff
   11234:	cmp	w1, #0xc
   11238:	b.ne	1128c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x398>  // b.any
   1123c:	lsr	w0, w0, #8
   11240:	sub	x3, x3, #0x1
   11244:	ldr	x2, [x25, x5, lsl #3]
   11248:	lsl	x0, x11, x0
   1124c:	add	x3, x3, x0
   11250:	neg	x0, x0
   11254:	and	x3, x0, x3
   11258:	stp	x5, x6, [sp, #152]
   1125c:	add	x12, x6, x3
   11260:	ldr	x0, [sp, #128]
   11264:	str	x3, [sp, #168]
   11268:	ldr	x1, [x0, x5, lsl #3]
   1126c:	mov	x0, x12
   11270:	bl	8600 <memcpy@plt>
   11274:	ldp	x5, x6, [sp, #152]
   11278:	str	x0, [x28, x5, lsl #3]
   1127c:	ldr	x3, [sp, #168]
   11280:	mov	x11, #0x1                   	// #1
   11284:	ldr	x0, [x25, x5, lsl #3]
   11288:	add	x3, x3, x0
   1128c:	add	x5, x5, #0x1
   11290:	b	11220 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x32c>
   11294:	cbz	x26, 112b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3c4>
   11298:	ldrb	w0, [x26, #49]
   1129c:	cbnz	w0, 11148 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x254>
   112a0:	ldrb	w0, [x26, #50]
   112a4:	cbz	w0, 112b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3c4>
   112a8:	ldr	x0, [x26]
   112ac:	cbz	x0, 112b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3c4>
   112b0:	ldrb	w0, [x0, #49]
   112b4:	cbnz	w0, 11148 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x254>
   112b8:	ldr	x0, [sp, #104]
   112bc:	cbz	x0, 112f4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x400>
   112c0:	mov	x0, x23
   112c4:	mov	x2, x22
   112c8:	mov	x1, x20
   112cc:	bl	103b8 <GOMP_single_copy_end@@GOMP_1.0+0x930>
   112d0:	ldr	x0, [x23, #80]
   112d4:	cbz	x0, 112f4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x400>
   112d8:	cbz	x26, 112e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f4>
   112dc:	ldr	x0, [x26, #56]
   112e0:	add	x0, x0, #0x1
   112e4:	str	x0, [x26, #56]
   112e8:	mov	x0, x19
   112ec:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   112f0:	b	10fbc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc8>
   112f4:	ldr	w0, [sp, #184]
   112f8:	cbnz	w0, 11324 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x430>
   112fc:	mov	x0, x23
   11300:	bl	106dc <GOMP_single_copy_end@@GOMP_1.0+0xc54>
   11304:	mov	x0, x19
   11308:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   1130c:	mov	x0, x23
   11310:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   11314:	mov	x0, x23
   11318:	mov	w25, #0x0                   	// #0
   1131c:	bl	8950 <free@plt>
   11320:	b	11160 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x26c>
   11324:	cbz	x26, 11334 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x440>
   11328:	ldr	x0, [x26, #56]
   1132c:	add	x0, x0, #0x1
   11330:	str	x0, [x26, #56]
   11334:	ldr	x0, [sp, #112]
   11338:	add	x1, x20, #0x8
   1133c:	ldrb	w6, [x23, #207]
   11340:	mov	w5, #0x0                   	// #0
   11344:	cbz	x0, 113f4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x500>
   11348:	ldr	w0, [x0, #8]
   1134c:	tbz	w0, #2, 113f4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x500>
   11350:	mov	w4, #0x1                   	// #1
   11354:	mov	x2, x23
   11358:	mov	w0, w4
   1135c:	mov	w3, #0x0                   	// #0
   11360:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   11364:	cbz	x26, 11388 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x494>
   11368:	ldrb	w6, [x23, #207]
   1136c:	mov	x2, x23
   11370:	add	x1, x26, #0x8
   11374:	mov	w5, #0x0                   	// #0
   11378:	mov	w4, #0x1                   	// #1
   1137c:	mov	w3, #0x0                   	// #0
   11380:	mov	w0, #0x2                   	// #2
   11384:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   11388:	mov	w0, #0x3                   	// #3
   1138c:	str	w0, [x23, #200]
   11390:	ldr	w0, [x27, #1320]
   11394:	stp	xzr, xzr, [x23, #96]
   11398:	add	w0, w0, #0x1
   1139c:	str	w0, [x27, #1320]
   113a0:	mov	x0, x19
   113a4:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   113a8:	ldr	x0, [sp, #96]
   113ac:	add	x21, x21, x0
   113b0:	ldr	x0, [x23, #192]
   113b4:	str	x23, [x21, #80]
   113b8:	bl	1ae40 <GOMP_target_enter_exit_data@@GOMP_4.5+0x224>
   113bc:	str	x20, [x21, #80]
   113c0:	mov	x0, x19
   113c4:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   113c8:	ldr	w1, [x24, #44]
   113cc:	mov	w0, #0x4                   	// #4
   113d0:	str	w0, [x23, #200]
   113d4:	cmp	w1, #0x5
   113d8:	b.ne	113ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4f8>  // b.any
   113dc:	mov	x1, x23
   113e0:	mov	x0, x27
   113e4:	bl	10b94 <GOMP_single_copy_end@@GOMP_1.0+0x110c>
   113e8:	b	112e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f4>
   113ec:	str	w0, [x24, #44]
   113f0:	b	112e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f4>
   113f4:	mov	x2, x23
   113f8:	mov	w4, #0x0                   	// #0
   113fc:	mov	w3, #0x0                   	// #0
   11400:	mov	w0, #0x1                   	// #1
   11404:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   11408:	cbz	x26, 1142c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   1140c:	ldrb	w6, [x23, #207]
   11410:	mov	x2, x23
   11414:	add	x1, x26, #0x8
   11418:	mov	w5, #0x0                   	// #0
   1141c:	mov	w4, #0x0                   	// #0
   11420:	mov	w3, #0x0                   	// #0
   11424:	mov	w0, #0x2                   	// #2
   11428:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   1142c:	ldrb	w6, [x23, #207]
   11430:	mov	x2, x23
   11434:	add	x1, x27, #0x508
   11438:	mov	w5, #0x0                   	// #0
   1143c:	mov	w4, #0x1                   	// #1
   11440:	mov	w3, #0x0                   	// #0
   11444:	mov	w0, #0x0                   	// #0
   11448:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   1144c:	ldrb	w20, [x20, #204]
   11450:	ldr	w0, [x27, #1320]
   11454:	ldr	w21, [x27]
   11458:	eor	w20, w20, #0x1
   1145c:	add	w0, w0, #0x1
   11460:	str	w0, [x27, #1320]
   11464:	ldr	w0, [x27, #1324]
   11468:	add	w0, w0, #0x1
   1146c:	str	w0, [x27, #1324]
   11470:	ldr	w0, [x27, #132]
   11474:	orr	w0, w0, #0x1
   11478:	str	w0, [x27, #132]
   1147c:	ldr	w0, [x27, #1328]
   11480:	add	w20, w20, w0
   11484:	mov	x0, x19
   11488:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   1148c:	cmp	w20, w21
   11490:	b.cs	10fbc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc8>  // b.hs, b.nlast
   11494:	add	x0, x27, #0x80
   11498:	mov	w1, #0x1                   	// #1
   1149c:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   114a0:	b	10fbc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc8>
   114a4:	stp	x29, x30, [sp, #-144]!
   114a8:	mov	x29, sp
   114ac:	stp	x23, x24, [sp, #48]
   114b0:	mrs	x24, tpidr_el0
   114b4:	adrp	x23, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   114b8:	ldr	x23, [x23, #4016]
   114bc:	stp	x19, x20, [sp, #16]
   114c0:	mov	w20, w0
   114c4:	add	x0, x24, x23
   114c8:	stp	x27, x28, [sp, #80]
   114cc:	ldr	x28, [x0, #16]
   114d0:	stp	x21, x22, [sp, #32]
   114d4:	add	x21, x28, #0x500
   114d8:	stp	x25, x26, [sp, #64]
   114dc:	ldr	x0, [x0, #80]
   114e0:	str	x0, [sp, #96]
   114e4:	mov	x0, x21
   114e8:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   114ec:	tbz	w20, #0, 11540 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x64c>
   114f0:	ldr	w0, [x28, #1320]
   114f4:	cbnz	w0, 11534 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x640>
   114f8:	and	w20, w20, #0xfffffff8
   114fc:	mov	x0, x21
   11500:	add	w20, w20, #0x8
   11504:	str	w20, [x28, #132]
   11508:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   1150c:	add	x0, x28, #0x80
   11510:	mov	w1, #0x0                   	// #0
   11514:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   11518:	ldp	x19, x20, [sp, #16]
   1151c:	ldp	x21, x22, [sp, #32]
   11520:	ldp	x23, x24, [sp, #48]
   11524:	ldp	x25, x26, [sp, #64]
   11528:	ldp	x27, x28, [sp, #80]
   1152c:	ldp	x29, x30, [sp], #144
   11530:	ret
   11534:	ldr	w0, [x28, #132]
   11538:	orr	w0, w0, #0x2
   1153c:	str	w0, [x28, #132]
   11540:	and	w20, w20, #0xfffffff8
   11544:	add	x27, x28, #0x508
   11548:	add	w0, w20, #0x8
   1154c:	add	x25, x28, #0x80
   11550:	mov	w22, #0x0                   	// #0
   11554:	mov	x26, #0x0                   	// #0
   11558:	str	w0, [sp, #108]
   1155c:	add	x0, sp, #0x8f
   11560:	str	x0, [sp, #112]
   11564:	ldr	x0, [x28, #1288]
   11568:	cbnz	x0, 11574 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x680>
   1156c:	ldr	x19, [x27, #16]
   11570:	cbz	x19, 11668 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x774>
   11574:	ldr	x4, [sp, #112]
   11578:	mov	x1, x27
   1157c:	mov	x3, #0x0                   	// #0
   11580:	mov	w2, #0x3e7                 	// #999
   11584:	mov	w0, #0x0                   	// #0
   11588:	bl	ff78 <GOMP_single_copy_end@@GOMP_1.0+0x4f0>
   1158c:	mov	x19, x0
   11590:	ldr	x1, [x0]
   11594:	mov	x2, x28
   11598:	bl	10c9c <GOMP_single_copy_end@@GOMP_1.0+0x1214>
   1159c:	ands	w20, w0, #0xff
   115a0:	b.eq	11654 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x760>  // b.none
   115a4:	cbz	x26, 115b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6c4>
   115a8:	mov	x0, x26
   115ac:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   115b0:	mov	x0, x26
   115b4:	bl	8950 <free@plt>
   115b8:	mov	x1, x28
   115bc:	mov	x0, x19
   115c0:	bl	107d0 <GOMP_single_copy_end@@GOMP_1.0+0xd48>
   115c4:	mov	x1, x0
   115c8:	mov	x0, x19
   115cc:	str	x1, [sp, #120]
   115d0:	bl	10a04 <GOMP_single_copy_end@@GOMP_1.0+0xf7c>
   115d4:	add	x0, x19, #0x8
   115d8:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   115dc:	mov	x0, x19
   115e0:	bl	10a90 <GOMP_single_copy_end@@GOMP_1.0+0x1008>
   115e4:	ldr	x1, [sp, #120]
   115e8:	cbnz	w20, 115f8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x704>
   115ec:	ldr	w0, [x28, #1328]
   115f0:	sub	w0, w0, #0x1
   115f4:	str	w0, [x28, #1328]
   115f8:	cmp	x1, #0x1
   115fc:	b.ls	11614 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x720>  // b.plast
   11600:	ldr	w6, [x28]
   11604:	ldr	w0, [x28, #1328]
   11608:	sub	w22, w6, w0
   1160c:	cmp	x1, w22, sxtw
   11610:	csel	w22, w1, w22, cc  // cc = lo, ul, last
   11614:	ldr	w0, [x28, #1320]
   11618:	sub	w0, w0, #0x1
   1161c:	str	w0, [x28, #1320]
   11620:	cbnz	w0, 116fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x808>
   11624:	ldr	w0, [x28, #132]
   11628:	tbz	w0, #1, 116fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x808>
   1162c:	ldr	w0, [sp, #108]
   11630:	str	w0, [x28, #132]
   11634:	mov	x0, x21
   11638:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   1163c:	mov	w1, #0x0                   	// #0
   11640:	mov	x0, x25
   11644:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   11648:	mov	x0, x21
   1164c:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   11650:	b	116fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x808>
   11654:	ldr	w0, [x28, #1328]
   11658:	add	w0, w0, #0x1
   1165c:	str	w0, [x28, #1328]
   11660:	mov	w0, #0x1                   	// #1
   11664:	strb	w0, [x19, #204]
   11668:	mov	x0, x21
   1166c:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   11670:	cbz	w22, 11680 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x78c>
   11674:	mov	w1, w22
   11678:	mov	x0, x25
   1167c:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   11680:	cbz	x26, 11694 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7a0>
   11684:	mov	x0, x26
   11688:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   1168c:	mov	x0, x26
   11690:	bl	8950 <free@plt>
   11694:	cbz	x19, 11518 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x624>
   11698:	ldp	x1, x0, [x19, #184]
   1169c:	add	x22, x24, x23
   116a0:	str	x19, [x22, #80]
   116a4:	cbnz	x1, 1170c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x818>
   116a8:	bl	1ae40 <GOMP_target_enter_exit_data@@GOMP_4.5+0x224>
   116ac:	tst	w0, #0xff
   116b0:	b.eq	11710 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x81c>  // b.none
   116b4:	ldr	x0, [sp, #96]
   116b8:	str	x0, [x22, #80]
   116bc:	mov	x0, x21
   116c0:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   116c4:	ldr	w0, [x28, #1328]
   116c8:	mov	w1, #0x4                   	// #4
   116cc:	str	w1, [x19, #200]
   116d0:	sub	w0, w0, #0x1
   116d4:	str	w0, [x28, #1328]
   116d8:	ldr	x0, [x19, #192]
   116dc:	ldr	w2, [x0, #44]
   116e0:	cmp	w2, #0x5
   116e4:	b.ne	11704 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x810>  // b.any
   116e8:	mov	x1, x19
   116ec:	mov	x0, x28
   116f0:	bl	10b94 <GOMP_single_copy_end@@GOMP_1.0+0x110c>
   116f4:	mov	w22, #0x0                   	// #0
   116f8:	mov	x19, #0x0                   	// #0
   116fc:	mov	x26, x19
   11700:	b	11564 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x670>
   11704:	str	w1, [x0, #44]
   11708:	b	116f4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x800>
   1170c:	blr	x1
   11710:	ldr	x1, [sp, #96]
   11714:	add	x0, x24, x23
   11718:	mov	w20, #0x0                   	// #0
   1171c:	mov	w22, #0x0                   	// #0
   11720:	str	x1, [x0, #80]
   11724:	mov	x0, x21
   11728:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   1172c:	b	115b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6c4>

0000000000011730 <GOMP_taskwait@@GOMP_2.0>:
   11730:	stp	x29, x30, [sp, #-160]!
   11734:	mov	x29, sp
   11738:	stp	x25, x26, [sp, #64]
   1173c:	adrp	x26, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   11740:	ldr	x26, [x26, #4016]
   11744:	stp	x27, x28, [sp, #80]
   11748:	mrs	x27, tpidr_el0
   1174c:	add	x0, x27, x26
   11750:	stp	x21, x22, [sp, #32]
   11754:	ldr	x21, [x0, #80]
   11758:	stp	x19, x20, [sp, #16]
   1175c:	stp	x23, x24, [sp, #48]
   11760:	cbz	x21, 117f0 <GOMP_taskwait@@GOMP_2.0+0xc0>
   11764:	ldr	x22, [x0, #16]
   11768:	add	x25, x21, #0x8
   1176c:	ldr	x0, [x21, #8]
   11770:	cbz	x0, 1180c <GOMP_taskwait@@GOMP_2.0+0xdc>
   11774:	ldar	x0, [x25]
   11778:	cmp	x0, #0x0
   1177c:	cset	w0, eq  // eq = none
   11780:	cbnz	w0, 117f0 <GOMP_taskwait@@GOMP_2.0+0xc0>
   11784:	add	x24, x22, #0x500
   11788:	strb	wzr, [sp, #135]
   1178c:	mov	x0, x24
   11790:	stp	xzr, xzr, [sp, #136]
   11794:	add	x28, sp, #0x88
   11798:	str	xzr, [sp, #152]
   1179c:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   117a0:	add	x0, sp, #0x87
   117a4:	str	x0, [sp, #104]
   117a8:	add	x0, x22, #0x508
   117ac:	mov	w20, #0x0                   	// #0
   117b0:	mov	x23, #0x0                   	// #0
   117b4:	str	x0, [sp, #112]
   117b8:	add	x0, x28, #0x10
   117bc:	str	x0, [sp, #120]
   117c0:	ldr	x0, [x21, #8]
   117c4:	cbnz	x0, 11818 <GOMP_taskwait@@GOMP_2.0+0xe8>
   117c8:	ldr	x0, [x25, #16]
   117cc:	cbnz	x0, 11818 <GOMP_taskwait@@GOMP_2.0+0xe8>
   117d0:	str	xzr, [x21, #64]
   117d4:	mov	x0, x24
   117d8:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   117dc:	cbz	x23, 117f0 <GOMP_taskwait@@GOMP_2.0+0xc0>
   117e0:	mov	x0, x23
   117e4:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   117e8:	mov	x0, x23
   117ec:	bl	8950 <free@plt>
   117f0:	ldp	x19, x20, [sp, #16]
   117f4:	ldp	x21, x22, [sp, #32]
   117f8:	ldp	x23, x24, [sp, #48]
   117fc:	ldp	x25, x26, [sp, #64]
   11800:	ldp	x27, x28, [sp, #80]
   11804:	ldp	x29, x30, [sp], #160
   11808:	ret
   1180c:	add	x0, x21, #0x18
   11810:	ldar	x0, [x0]
   11814:	b	11778 <GOMP_taskwait@@GOMP_2.0+0x48>
   11818:	ldp	x4, x3, [sp, #104]
   1181c:	mov	x1, x25
   11820:	mov	w2, #0x0                   	// #0
   11824:	mov	w0, #0x1                   	// #1
   11828:	bl	ff78 <GOMP_single_copy_end@@GOMP_1.0+0x4f0>
   1182c:	ldr	w1, [x0, #200]
   11830:	mov	x19, x0
   11834:	cmp	w1, #0x2
   11838:	b.ne	118dc <GOMP_taskwait@@GOMP_2.0+0x1ac>  // b.any
   1183c:	mov	x2, x22
   11840:	mov	x1, x21
   11844:	bl	10c9c <GOMP_single_copy_end@@GOMP_1.0+0x1214>
   11848:	tst	w0, #0xff
   1184c:	b.eq	118fc <GOMP_taskwait@@GOMP_2.0+0x1cc>  // b.none
   11850:	cbz	x23, 11864 <GOMP_taskwait@@GOMP_2.0+0x134>
   11854:	mov	x0, x23
   11858:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   1185c:	mov	x0, x23
   11860:	bl	8950 <free@plt>
   11864:	mov	x1, x22
   11868:	mov	x0, x19
   1186c:	bl	107d0 <GOMP_single_copy_end@@GOMP_1.0+0xd48>
   11870:	mov	x23, x0
   11874:	ldrb	w0, [sp, #135]
   11878:	cbz	w0, 11894 <GOMP_taskwait@@GOMP_2.0+0x164>
   1187c:	mov	x2, x19
   11880:	mov	x1, x25
   11884:	mov	w3, #0x0                   	// #0
   11888:	mov	w0, #0x1                   	// #1
   1188c:	bl	10960 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   11890:	stp	xzr, xzr, [x19, #112]
   11894:	add	x0, x19, #0x8
   11898:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   1189c:	mov	x0, x19
   118a0:	bl	10a90 <GOMP_single_copy_end@@GOMP_1.0+0x1008>
   118a4:	ldr	w0, [x22, #1320]
   118a8:	cmp	x23, #0x1
   118ac:	sub	w0, w0, #0x1
   118b0:	str	w0, [x22, #1320]
   118b4:	b.ls	11980 <GOMP_taskwait@@GOMP_2.0+0x250>  // b.plast
   118b8:	ldr	w0, [x22, #1328]
   118bc:	ldr	w20, [x22]
   118c0:	sub	w20, w20, w0
   118c4:	ldrb	w0, [x21, #204]
   118c8:	eor	w0, w0, #0x1
   118cc:	sub	w20, w20, w0
   118d0:	cmp	x23, w20, sxtw
   118d4:	csel	w20, w23, w20, cc  // cc = lo, ul, last
   118d8:	b	11980 <GOMP_taskwait@@GOMP_2.0+0x250>
   118dc:	ldr	x0, [x21, #64]
   118e0:	cbnz	x0, 118f0 <GOMP_taskwait@@GOMP_2.0+0x1c0>
   118e4:	str	x28, [x21, #64]
   118e8:	strb	wzr, [sp, #137]
   118ec:	str	wzr, [sp, #152]
   118f0:	mov	w0, #0x1                   	// #1
   118f4:	mov	x19, #0x0                   	// #0
   118f8:	strb	w0, [sp, #136]
   118fc:	mov	x0, x24
   11900:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   11904:	cbz	w20, 11914 <GOMP_taskwait@@GOMP_2.0+0x1e4>
   11908:	mov	w1, w20
   1190c:	add	x0, x22, #0x80
   11910:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   11914:	cbz	x23, 11928 <GOMP_taskwait@@GOMP_2.0+0x1f8>
   11918:	mov	x0, x23
   1191c:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   11920:	mov	x0, x23
   11924:	bl	8950 <free@plt>
   11928:	cbz	x19, 119b0 <GOMP_taskwait@@GOMP_2.0+0x280>
   1192c:	ldp	x1, x0, [x19, #184]
   11930:	add	x20, x27, x26
   11934:	str	x19, [x20, #80]
   11938:	cbnz	x1, 11990 <GOMP_taskwait@@GOMP_2.0+0x260>
   1193c:	bl	1ae40 <GOMP_target_enter_exit_data@@GOMP_4.5+0x224>
   11940:	tst	w0, #0xff
   11944:	b.eq	11994 <GOMP_taskwait@@GOMP_2.0+0x264>  // b.none
   11948:	mov	x0, x24
   1194c:	str	x21, [x20, #80]
   11950:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   11954:	ldr	x0, [x19, #192]
   11958:	mov	w1, #0x4                   	// #4
   1195c:	ldr	w2, [x0, #44]
   11960:	str	w1, [x19, #200]
   11964:	cmp	w2, #0x5
   11968:	b.ne	11988 <GOMP_taskwait@@GOMP_2.0+0x258>  // b.any
   1196c:	mov	x1, x19
   11970:	mov	x0, x22
   11974:	bl	10b94 <GOMP_single_copy_end@@GOMP_1.0+0x110c>
   11978:	mov	w20, #0x0                   	// #0
   1197c:	mov	x19, #0x0                   	// #0
   11980:	mov	x23, x19
   11984:	b	117c0 <GOMP_taskwait@@GOMP_2.0+0x90>
   11988:	str	w1, [x0, #44]
   1198c:	b	11978 <GOMP_taskwait@@GOMP_2.0+0x248>
   11990:	blr	x1
   11994:	add	x0, x27, x26
   11998:	str	x21, [x0, #80]
   1199c:	mov	x0, x24
   119a0:	mov	w20, #0x0                   	// #0
   119a4:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   119a8:	cbnz	x19, 11864 <GOMP_taskwait@@GOMP_2.0+0x134>
   119ac:	b	11980 <GOMP_taskwait@@GOMP_2.0+0x250>
   119b0:	ldr	x0, [sp, #120]
   119b4:	bl	fdc0 <GOMP_single_copy_end@@GOMP_1.0+0x338>
   119b8:	b	1199c <GOMP_taskwait@@GOMP_2.0+0x26c>
   119bc:	stp	x29, x30, [sp, #-224]!
   119c0:	mov	x29, sp
   119c4:	stp	x25, x26, [sp, #64]
   119c8:	adrp	x26, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   119cc:	ldr	x26, [x26, #4016]
   119d0:	stp	x27, x28, [sp, #80]
   119d4:	mrs	x27, tpidr_el0
   119d8:	stp	x23, x24, [sp, #48]
   119dc:	mov	x24, x0
   119e0:	add	x0, x27, x26
   119e4:	stp	x19, x20, [sp, #16]
   119e8:	stp	x21, x22, [sp, #32]
   119ec:	ldr	x20, [x0, #16]
   119f0:	ldr	x19, [x0, #80]
   119f4:	ldp	x22, x0, [x24]
   119f8:	cbz	x22, 11a6c <GOMP_taskwait@@GOMP_2.0+0x33c>
   119fc:	mov	x23, x0
   11a00:	mov	x28, #0x2                   	// #2
   11a04:	str	x22, [sp, #96]
   11a08:	add	x21, x20, #0x500
   11a0c:	mov	x0, x21
   11a10:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   11a14:	add	x0, x24, x28, lsl #3
   11a18:	str	x0, [sp, #104]
   11a1c:	add	x0, sp, #0xb8
   11a20:	str	x0, [sp, #112]
   11a24:	add	x0, x19, #0x8
   11a28:	mov	x24, #0x0                   	// #0
   11a2c:	mov	x28, #0x0                   	// #0
   11a30:	str	x0, [sp, #120]
   11a34:	add	x0, x19, #0x10
   11a38:	str	x0, [sp, #128]
   11a3c:	cmp	x22, x28
   11a40:	b.ne	11a8c <GOMP_taskwait@@GOMP_2.0+0x35c>  // b.any
   11a44:	cbnz	x24, 11b70 <GOMP_taskwait@@GOMP_2.0+0x440>
   11a48:	mov	x0, x21
   11a4c:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   11a50:	ldp	x19, x20, [sp, #16]
   11a54:	ldp	x21, x22, [sp, #32]
   11a58:	ldp	x23, x24, [sp, #48]
   11a5c:	ldp	x25, x26, [sp, #64]
   11a60:	ldp	x27, x28, [sp, #80]
   11a64:	ldp	x29, x30, [sp], #224
   11a68:	ret
   11a6c:	ldp	x23, x1, [x24, #16]
   11a70:	mov	x22, x0
   11a74:	ldr	x25, [x24, #32]
   11a78:	mov	x28, #0x5                   	// #5
   11a7c:	add	x23, x23, x1
   11a80:	add	x1, x25, x23
   11a84:	str	x1, [sp, #96]
   11a88:	b	11a08 <GOMP_taskwait@@GOMP_2.0+0x2d8>
   11a8c:	cmp	x23, x28
   11a90:	cset	w1, ls  // ls = plast
   11a94:	strb	w1, [sp, #216]
   11a98:	ldp	x1, x0, [sp, #96]
   11a9c:	ldr	x0, [x0, x28, lsl #3]
   11aa0:	str	x0, [sp, #184]
   11aa4:	cmp	x1, x28
   11aa8:	b.hi	11ad0 <GOMP_taskwait@@GOMP_2.0+0x3a0>  // b.pmore
   11aac:	ldr	x1, [x0, #8]
   11ab0:	cmp	x1, #0x1
   11ab4:	b.eq	11ac8 <GOMP_taskwait@@GOMP_2.0+0x398>  // b.none
   11ab8:	sub	x2, x1, #0x2
   11abc:	cmp	x2, #0x2
   11ac0:	b.hi	11aec <GOMP_taskwait@@GOMP_2.0+0x3bc>  // b.pmore
   11ac4:	strb	wzr, [sp, #216]
   11ac8:	ldr	x0, [x0]
   11acc:	str	x0, [sp, #184]
   11ad0:	ldr	x0, [x19, #56]
   11ad4:	ldr	x1, [sp, #112]
   11ad8:	bl	100c0 <GOMP_single_copy_end@@GOMP_1.0+0x638>
   11adc:	mov	x25, x0
   11ae0:	cbnz	x25, 11af8 <GOMP_taskwait@@GOMP_2.0+0x3c8>
   11ae4:	add	x28, x28, #0x1
   11ae8:	b	11a3c <GOMP_taskwait@@GOMP_2.0+0x30c>
   11aec:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   11af0:	add	x0, x0, #0x57c
   11af4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   11af8:	ldrb	w0, [sp, #216]
   11afc:	cbz	w0, 11b08 <GOMP_taskwait@@GOMP_2.0+0x3d8>
   11b00:	ldrb	w0, [x25, #32]
   11b04:	cbnz	w0, 11b5c <GOMP_taskwait@@GOMP_2.0+0x42c>
   11b08:	ldr	x0, [x25, #24]
   11b0c:	ldrb	w1, [x0, #207]
   11b10:	cbnz	w1, 11b5c <GOMP_taskwait@@GOMP_2.0+0x42c>
   11b14:	mov	w1, #0x1                   	// #1
   11b18:	strb	w1, [x0, #207]
   11b1c:	ldr	x1, [x0, #80]
   11b20:	add	x24, x24, #0x1
   11b24:	cbnz	x1, 11b5c <GOMP_taskwait@@GOMP_2.0+0x42c>
   11b28:	ldr	w1, [x0, #200]
   11b2c:	cmp	w1, #0x2
   11b30:	b.ne	11b5c <GOMP_taskwait@@GOMP_2.0+0x42c>  // b.any
   11b34:	ldr	x1, [x19, #8]
   11b38:	add	x4, x0, #0x70
   11b3c:	cbz	x1, 11b64 <GOMP_taskwait@@GOMP_2.0+0x434>
   11b40:	ldr	w1, [x0, #88]
   11b44:	ldr	x0, [sp, #120]
   11b48:	str	x4, [sp, #136]
   11b4c:	bl	fd44 <GOMP_single_copy_end@@GOMP_1.0+0x2bc>
   11b50:	ldr	x4, [sp, #136]
   11b54:	mov	x1, x4
   11b58:	bl	fb04 <GOMP_single_copy_end@@GOMP_1.0+0x7c>
   11b5c:	ldr	x25, [x25, #8]
   11b60:	b	11ae0 <GOMP_taskwait@@GOMP_2.0+0x3b0>
   11b64:	mov	x1, x4
   11b68:	ldr	x0, [sp, #128]
   11b6c:	b	11b58 <GOMP_taskwait@@GOMP_2.0+0x428>
   11b70:	add	x0, sp, #0xa0
   11b74:	stp	xzr, xzr, [sp, #160]
   11b78:	add	x25, x19, #0x8
   11b7c:	stp	x24, xzr, [sp, #168]
   11b80:	mov	x24, x0
   11b84:	mov	w23, #0x0                   	// #0
   11b88:	str	x24, [x19, #64]
   11b8c:	add	x24, x24, #0x10
   11b90:	add	x0, sp, #0x9f
   11b94:	mov	x28, #0x0                   	// #0
   11b98:	str	x0, [sp, #96]
   11b9c:	ldr	x4, [sp, #96]
   11ba0:	mov	x1, x25
   11ba4:	mov	x3, #0x0                   	// #0
   11ba8:	mov	w2, #0x3e7                 	// #999
   11bac:	mov	w0, #0x1                   	// #1
   11bb0:	bl	ff78 <GOMP_single_copy_end@@GOMP_1.0+0x4f0>
   11bb4:	ldr	w1, [x0, #200]
   11bb8:	mov	x22, x0
   11bbc:	cmp	w1, #0x2
   11bc0:	b.ne	11c70 <GOMP_taskwait@@GOMP_2.0+0x540>  // b.any
   11bc4:	mov	x2, x20
   11bc8:	mov	x1, x19
   11bcc:	bl	10c9c <GOMP_single_copy_end@@GOMP_1.0+0x1214>
   11bd0:	tst	w0, #0xff
   11bd4:	b.eq	11c7c <GOMP_taskwait@@GOMP_2.0+0x54c>  // b.none
   11bd8:	cbz	x28, 11bec <GOMP_taskwait@@GOMP_2.0+0x4bc>
   11bdc:	mov	x0, x28
   11be0:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   11be4:	mov	x0, x28
   11be8:	bl	8950 <free@plt>
   11bec:	mov	x1, x20
   11bf0:	mov	x0, x22
   11bf4:	bl	107d0 <GOMP_single_copy_end@@GOMP_1.0+0xd48>
   11bf8:	mov	x28, x0
   11bfc:	ldrb	w0, [x22, #207]
   11c00:	cbz	w0, 11c10 <GOMP_taskwait@@GOMP_2.0+0x4e0>
   11c04:	ldr	x0, [sp, #168]
   11c08:	sub	x0, x0, #0x1
   11c0c:	str	x0, [sp, #168]
   11c10:	mov	x2, x22
   11c14:	mov	x1, x25
   11c18:	mov	w3, #0x0                   	// #0
   11c1c:	mov	w0, #0x1                   	// #1
   11c20:	bl	10960 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   11c24:	stp	xzr, xzr, [x22, #112]
   11c28:	add	x0, x22, #0x8
   11c2c:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   11c30:	mov	x0, x22
   11c34:	bl	10a90 <GOMP_single_copy_end@@GOMP_1.0+0x1008>
   11c38:	ldr	w0, [x20, #1320]
   11c3c:	cmp	x28, #0x1
   11c40:	sub	w0, w0, #0x1
   11c44:	str	w0, [x20, #1320]
   11c48:	b.ls	11d50 <GOMP_taskwait@@GOMP_2.0+0x620>  // b.plast
   11c4c:	ldr	w0, [x20, #1328]
   11c50:	ldr	w23, [x20]
   11c54:	sub	w23, w23, w0
   11c58:	ldrb	w0, [x19, #204]
   11c5c:	eor	w0, w0, #0x1
   11c60:	sub	w23, w23, w0
   11c64:	cmp	x28, w23, sxtw
   11c68:	csel	w23, w28, w23, cc  // cc = lo, ul, last
   11c6c:	b	11d50 <GOMP_taskwait@@GOMP_2.0+0x620>
   11c70:	mov	w0, #0x1                   	// #1
   11c74:	mov	x22, #0x0                   	// #0
   11c78:	strb	w0, [sp, #161]
   11c7c:	mov	x0, x21
   11c80:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   11c84:	cbz	w23, 11c94 <GOMP_taskwait@@GOMP_2.0+0x564>
   11c88:	mov	w1, w23
   11c8c:	add	x0, x20, #0x80
   11c90:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   11c94:	cbz	x28, 11ca8 <GOMP_taskwait@@GOMP_2.0+0x578>
   11c98:	mov	x0, x28
   11c9c:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   11ca0:	mov	x0, x28
   11ca4:	bl	8950 <free@plt>
   11ca8:	cbz	x22, 11d58 <GOMP_taskwait@@GOMP_2.0+0x628>
   11cac:	ldp	x1, x0, [x22, #184]
   11cb0:	add	x23, x27, x26
   11cb4:	str	x22, [x23, #80]
   11cb8:	cbnz	x1, 11d34 <GOMP_taskwait@@GOMP_2.0+0x604>
   11cbc:	bl	1ae40 <GOMP_target_enter_exit_data@@GOMP_4.5+0x224>
   11cc0:	tst	w0, #0xff
   11cc4:	b.eq	11d38 <GOMP_taskwait@@GOMP_2.0+0x608>  // b.none
   11cc8:	mov	x0, x21
   11ccc:	str	x19, [x23, #80]
   11cd0:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   11cd4:	ldr	x0, [x22, #192]
   11cd8:	mov	w1, #0x4                   	// #4
   11cdc:	ldr	w2, [x0, #44]
   11ce0:	str	w1, [x22, #200]
   11ce4:	cmp	w2, #0x5
   11ce8:	b.ne	11d2c <GOMP_taskwait@@GOMP_2.0+0x5fc>  // b.any
   11cec:	mov	x1, x22
   11cf0:	mov	x0, x20
   11cf4:	bl	10b94 <GOMP_single_copy_end@@GOMP_1.0+0x110c>
   11cf8:	mov	w23, #0x0                   	// #0
   11cfc:	mov	x28, #0x0                   	// #0
   11d00:	ldr	x0, [sp, #168]
   11d04:	cbnz	x0, 11b9c <GOMP_taskwait@@GOMP_2.0+0x46c>
   11d08:	str	xzr, [x19, #64]
   11d0c:	mov	x0, x21
   11d10:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   11d14:	cbz	x28, 11a50 <GOMP_taskwait@@GOMP_2.0+0x320>
   11d18:	mov	x0, x28
   11d1c:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   11d20:	mov	x0, x28
   11d24:	bl	8950 <free@plt>
   11d28:	b	11a50 <GOMP_taskwait@@GOMP_2.0+0x320>
   11d2c:	str	w1, [x0, #44]
   11d30:	b	11cf8 <GOMP_taskwait@@GOMP_2.0+0x5c8>
   11d34:	blr	x1
   11d38:	add	x0, x27, x26
   11d3c:	str	x19, [x0, #80]
   11d40:	mov	x0, x21
   11d44:	mov	w23, #0x0                   	// #0
   11d48:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   11d4c:	cbnz	x22, 11bec <GOMP_taskwait@@GOMP_2.0+0x4bc>
   11d50:	mov	x28, x22
   11d54:	b	11d00 <GOMP_taskwait@@GOMP_2.0+0x5d0>
   11d58:	mov	x0, x24
   11d5c:	bl	fdc0 <GOMP_single_copy_end@@GOMP_1.0+0x338>
   11d60:	b	11d40 <GOMP_taskwait@@GOMP_2.0+0x610>

0000000000011d64 <GOMP_task@@GOMP_2.0>:
   11d64:	stp	x29, x30, [sp, #-368]!
   11d68:	mov	x9, x1
   11d6c:	and	w5, w5, #0xff
   11d70:	mov	x29, sp
   11d74:	stp	x19, x20, [sp, #16]
   11d78:	stp	x21, x22, [sp, #32]
   11d7c:	mov	x22, x4
   11d80:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   11d84:	ldr	x21, [x21, #4016]
   11d88:	stp	x23, x24, [sp, #48]
   11d8c:	ldr	w1, [x29, #368]
   11d90:	stp	x25, x26, [sp, #64]
   11d94:	mrs	x25, tpidr_el0
   11d98:	stp	x27, x28, [sp, #80]
   11d9c:	mov	x27, x7
   11da0:	str	x2, [x29, #152]
   11da4:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   11da8:	stp	x3, x0, [x29, #128]
   11dac:	add	x0, x25, x21
   11db0:	ldrb	w3, [x2, #1372]
   11db4:	str	x2, [x29, #120]
   11db8:	str	w6, [x29, #144]
   11dbc:	ldr	x19, [x0, #16]
   11dc0:	cbz	w3, 11dfc <GOMP_task@@GOMP_2.0+0x98>
   11dc4:	cbz	x19, 11dfc <GOMP_task@@GOMP_2.0+0x98>
   11dc8:	ldr	w2, [x19, #132]
   11dcc:	tbnz	w2, #2, 11f68 <GOMP_task@@GOMP_2.0+0x204>
   11dd0:	ldr	x0, [x0, #80]
   11dd4:	ldr	x0, [x0, #40]
   11dd8:	cbz	x0, 11dfc <GOMP_task@@GOMP_2.0+0x98>
   11ddc:	ldrb	w2, [x0, #49]
   11de0:	cbnz	w2, 11f68 <GOMP_task@@GOMP_2.0+0x204>
   11de4:	ldrb	w2, [x0, #50]
   11de8:	cbz	w2, 11dfc <GOMP_task@@GOMP_2.0+0x98>
   11dec:	ldr	x0, [x0]
   11df0:	cbz	x0, 11dfc <GOMP_task@@GOMP_2.0+0x98>
   11df4:	ldrb	w0, [x0, #49]
   11df8:	cbnz	w0, 11f68 <GOMP_task@@GOMP_2.0+0x204>
   11dfc:	ldr	x0, [x29, #144]
   11e00:	tbz	w0, #4, 11f88 <GOMP_task@@GOMP_2.0+0x224>
   11e04:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   11e08:	ldr	w23, [x0, #1376]
   11e0c:	cmp	w23, w1
   11e10:	csel	w23, w23, w1, le
   11e14:	add	x0, x25, x21
   11e18:	cmp	x19, #0x0
   11e1c:	ldr	x20, [x0, #80]
   11e20:	eor	w0, w5, #0x1
   11e24:	cset	w5, eq  // eq = none
   11e28:	orr	w5, w5, w0
   11e2c:	ldr	w0, [x29, #144]
   11e30:	and	w0, w0, #0x8
   11e34:	cbnz	w5, 11e54 <GOMP_task@@GOMP_2.0+0xf0>
   11e38:	cbz	x20, 11e44 <GOMP_task@@GOMP_2.0+0xe0>
   11e3c:	ldrb	w1, [x20, #205]
   11e40:	cbnz	w1, 11e54 <GOMP_task@@GOMP_2.0+0xf0>
   11e44:	ldr	w2, [x19]
   11e48:	ldr	w1, [x19, #1320]
   11e4c:	cmp	w1, w2, lsl #6
   11e50:	b.ls	11fa0 <GOMP_task@@GOMP_2.0+0x23c>  // b.plast
   11e54:	cbz	w0, 11e74 <GOMP_task@@GOMP_2.0+0x110>
   11e58:	cbz	x20, 11e74 <GOMP_task@@GOMP_2.0+0x110>
   11e5c:	ldr	x0, [x20, #56]
   11e60:	cbz	x0, 11e74 <GOMP_task@@GOMP_2.0+0x110>
   11e64:	mov	x0, x27
   11e68:	str	x9, [x29, #120]
   11e6c:	bl	119bc <GOMP_taskwait@@GOMP_2.0+0x28c>
   11e70:	ldr	x9, [x29, #120]
   11e74:	add	x7, x25, x21
   11e78:	add	x20, x29, #0xa0
   11e7c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   11e80:	add	x0, x0, #0x2c0
   11e84:	str	x9, [x29, #120]
   11e88:	ldr	x1, [x7, #80]
   11e8c:	cmp	x1, #0x0
   11e90:	add	x2, x1, #0x90
   11e94:	csel	x2, x0, x2, eq  // eq = none
   11e98:	mov	x0, x20
   11e9c:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   11ea0:	ldr	x0, [x7, #80]
   11ea4:	mov	w6, #0x1                   	// #1
   11ea8:	str	w6, [x29, #360]
   11eac:	ldr	x9, [x29, #120]
   11eb0:	cbz	x0, 11ebc <GOMP_task@@GOMP_2.0+0x158>
   11eb4:	ldrb	w1, [x0, #205]
   11eb8:	cbnz	w1, 11ec4 <GOMP_task@@GOMP_2.0+0x160>
   11ebc:	ldr	x1, [x29, #144]
   11ec0:	ubfx	x6, x1, #1, #1
   11ec4:	str	w23, [x29, #248]
   11ec8:	strb	w6, [x29, #365]
   11ecc:	cbz	x0, 11ee0 <GOMP_task@@GOMP_2.0+0x17c>
   11ed0:	ldrb	w1, [x0, #204]
   11ed4:	ldr	x0, [x0, #40]
   11ed8:	str	x0, [x29, #200]
   11edc:	strb	w1, [x29, #364]
   11ee0:	add	x25, x25, x21
   11ee4:	ldr	x0, [x29, #152]
   11ee8:	str	x20, [x25, #80]
   11eec:	cbz	x0, 11f90 <GOMP_task@@GOMP_2.0+0x22c>
   11ef0:	ldr	x0, [x29, #128]
   11ef4:	mov	x23, sp
   11ef8:	ldr	x2, [x29, #152]
   11efc:	add	x21, x0, x22
   11f00:	add	x21, x21, #0xe
   11f04:	sub	x0, x22, #0x1
   11f08:	and	x21, x21, #0xfffffffffffffff0
   11f0c:	neg	x22, x22
   11f10:	sub	sp, sp, x21
   11f14:	mov	x1, x9
   11f18:	add	x0, sp, x0
   11f1c:	and	x22, x0, x22
   11f20:	mov	x0, x22
   11f24:	blr	x2
   11f28:	ldr	x1, [x29, #136]
   11f2c:	mov	x0, x22
   11f30:	blr	x1
   11f34:	mov	sp, x23
   11f38:	ldr	x0, [x29, #168]
   11f3c:	cbnz	x0, 11f48 <GOMP_task@@GOMP_2.0+0x1e4>
   11f40:	ldr	x0, [x29, #184]
   11f44:	cbz	x0, 11f64 <GOMP_task@@GOMP_2.0+0x200>
   11f48:	add	x19, x19, #0x500
   11f4c:	mov	x0, x19
   11f50:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   11f54:	add	x0, x20, #0x8
   11f58:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   11f5c:	mov	x0, x19
   11f60:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   11f64:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   11f68:	mov	sp, x29
   11f6c:	ldp	x19, x20, [sp, #16]
   11f70:	ldp	x21, x22, [sp, #32]
   11f74:	ldp	x23, x24, [sp, #48]
   11f78:	ldp	x25, x26, [sp, #64]
   11f7c:	ldp	x27, x28, [sp, #80]
   11f80:	ldp	x29, x30, [sp], #368
   11f84:	ret
   11f88:	mov	w23, #0x0                   	// #0
   11f8c:	b	11e14 <GOMP_task@@GOMP_2.0+0xb0>
   11f90:	ldr	x1, [x29, #136]
   11f94:	mov	x0, x9
   11f98:	blr	x1
   11f9c:	b	11f38 <GOMP_task@@GOMP_2.0+0x1d4>
   11fa0:	ldr	x26, [x20, #40]
   11fa4:	cbz	w0, 120c0 <GOMP_task@@GOMP_2.0+0x35c>
   11fa8:	ldr	x0, [x27]
   11fac:	mov	x24, #0x28                  	// #40
   11fb0:	cbz	x0, 120b8 <GOMP_task@@GOMP_2.0+0x354>
   11fb4:	mul	x24, x0, x24
   11fb8:	ldr	x0, [x29, #128]
   11fbc:	add	x1, x22, #0xcf
   11fc0:	stp	x9, x1, [x29, #104]
   11fc4:	neg	x22, x22
   11fc8:	add	x0, x1, x0
   11fcc:	add	x0, x0, x24
   11fd0:	bl	adb0 <fprintf@plt+0x2250>
   11fd4:	add	x6, x25, x21
   11fd8:	mov	x28, x0
   11fdc:	ldr	x1, [x29, #112]
   11fe0:	ldr	x3, [x6, #80]
   11fe4:	add	x1, x1, x24
   11fe8:	add	x1, x0, x1
   11fec:	cmp	x3, #0x0
   11ff0:	add	x2, x3, #0x90
   11ff4:	and	x22, x1, x22
   11ff8:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   11ffc:	add	x1, x1, #0x2c0
   12000:	csel	x2, x1, x2, eq  // eq = none
   12004:	mov	x1, x20
   12008:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   1200c:	str	x28, [x6, #80]
   12010:	ldrb	w0, [x20, #204]
   12014:	mov	w2, #0x1                   	// #1
   12018:	strb	w0, [x28, #204]
   1201c:	ldr	x0, [x29, #152]
   12020:	str	x26, [x28, #40]
   12024:	str	w23, [x28, #88]
   12028:	str	w2, [x28, #200]
   1202c:	ldr	x9, [x29, #104]
   12030:	cbz	x0, 120c8 <GOMP_task@@GOMP_2.0+0x364>
   12034:	ldr	x2, [x29, #152]
   12038:	mov	x1, x9
   1203c:	mov	x0, x22
   12040:	blr	x2
   12044:	mov	w2, #0x1                   	// #1
   12048:	strb	w2, [x28, #206]
   1204c:	mov	w0, #0x2                   	// #2
   12050:	str	w0, [x28, #200]
   12054:	ldr	x0, [x29, #136]
   12058:	str	x0, [x28, #184]
   1205c:	ldr	x0, [x29, #144]
   12060:	add	x25, x25, x21
   12064:	add	x21, x19, #0x500
   12068:	str	x22, [x28, #192]
   1206c:	ubfx	x6, x0, #1, #1
   12070:	mov	x0, x21
   12074:	str	x20, [x25, #80]
   12078:	strb	w6, [x28, #205]
   1207c:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   12080:	ldr	x0, [x29, #120]
   12084:	ldrb	w0, [x0, #1372]
   12088:	cbz	w0, 12110 <GOMP_task@@GOMP_2.0+0x3ac>
   1208c:	ldrb	w0, [x28, #206]
   12090:	cbnz	w0, 12110 <GOMP_task@@GOMP_2.0+0x3ac>
   12094:	ldr	w0, [x19, #132]
   12098:	tbz	w0, #2, 120dc <GOMP_task@@GOMP_2.0+0x378>
   1209c:	mov	x0, x21
   120a0:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   120a4:	mov	x0, x28
   120a8:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   120ac:	mov	x0, x28
   120b0:	bl	8950 <free@plt>
   120b4:	b	11f68 <GOMP_task@@GOMP_2.0+0x204>
   120b8:	ldr	x0, [x27, #8]
   120bc:	b	11fb4 <GOMP_task@@GOMP_2.0+0x250>
   120c0:	mov	x24, #0x0                   	// #0
   120c4:	b	11fb8 <GOMP_task@@GOMP_2.0+0x254>
   120c8:	ldr	x2, [x29, #128]
   120cc:	mov	x1, x9
   120d0:	mov	x0, x22
   120d4:	bl	8600 <memcpy@plt>
   120d8:	b	1204c <GOMP_task@@GOMP_2.0+0x2e8>
   120dc:	cbz	x26, 12114 <GOMP_task@@GOMP_2.0+0x3b0>
   120e0:	ldrb	w0, [x26, #49]
   120e4:	cbnz	w0, 1209c <GOMP_task@@GOMP_2.0+0x338>
   120e8:	ldrb	w0, [x26, #50]
   120ec:	cbz	w0, 12100 <GOMP_task@@GOMP_2.0+0x39c>
   120f0:	ldr	x0, [x26]
   120f4:	cbz	x0, 12100 <GOMP_task@@GOMP_2.0+0x39c>
   120f8:	ldrb	w0, [x0, #49]
   120fc:	cbnz	w0, 1209c <GOMP_task@@GOMP_2.0+0x338>
   12100:	ldr	x0, [x26, #56]
   12104:	add	x0, x0, #0x1
   12108:	str	x0, [x26, #56]
   1210c:	b	12114 <GOMP_task@@GOMP_2.0+0x3b0>
   12110:	cbnz	x26, 12100 <GOMP_task@@GOMP_2.0+0x39c>
   12114:	cbz	x24, 1213c <GOMP_task@@GOMP_2.0+0x3d8>
   12118:	mov	x0, x28
   1211c:	mov	x2, x27
   12120:	mov	x1, x20
   12124:	bl	103b8 <GOMP_single_copy_end@@GOMP_1.0+0x930>
   12128:	ldr	x0, [x28, #80]
   1212c:	cbz	x0, 1213c <GOMP_task@@GOMP_2.0+0x3d8>
   12130:	mov	x0, x21
   12134:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   12138:	b	11f68 <GOMP_task@@GOMP_2.0+0x204>
   1213c:	ldrb	w6, [x28, #207]
   12140:	mov	w3, w23
   12144:	mov	x2, x28
   12148:	add	x1, x20, #0x8
   1214c:	mov	w5, #0x0                   	// #0
   12150:	mov	w4, #0x0                   	// #0
   12154:	mov	w0, #0x1                   	// #1
   12158:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   1215c:	cbz	x26, 12180 <GOMP_task@@GOMP_2.0+0x41c>
   12160:	ldrb	w6, [x28, #207]
   12164:	mov	w3, w23
   12168:	mov	x2, x28
   1216c:	add	x1, x26, #0x8
   12170:	mov	w5, #0x0                   	// #0
   12174:	mov	w4, #0x0                   	// #0
   12178:	mov	w0, #0x2                   	// #2
   1217c:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   12180:	ldrb	w6, [x28, #207]
   12184:	mov	w3, w23
   12188:	mov	x2, x28
   1218c:	add	x1, x19, #0x508
   12190:	mov	w5, #0x0                   	// #0
   12194:	mov	w4, #0x1                   	// #1
   12198:	mov	w0, #0x0                   	// #0
   1219c:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   121a0:	ldrb	w20, [x20, #204]
   121a4:	ldr	w0, [x19, #1320]
   121a8:	ldr	w22, [x19]
   121ac:	eor	w20, w20, #0x1
   121b0:	add	w0, w0, #0x1
   121b4:	str	w0, [x19, #1320]
   121b8:	ldr	w0, [x19, #1324]
   121bc:	add	w0, w0, #0x1
   121c0:	str	w0, [x19, #1324]
   121c4:	ldr	w0, [x19, #132]
   121c8:	orr	w0, w0, #0x1
   121cc:	str	w0, [x19, #132]
   121d0:	ldr	w0, [x19, #1328]
   121d4:	add	w20, w20, w0
   121d8:	mov	x0, x21
   121dc:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   121e0:	cmp	w20, w22
   121e4:	b.cs	11f68 <GOMP_task@@GOMP_2.0+0x204>  // b.hs, b.nlast
   121e8:	add	x0, x19, #0x80
   121ec:	mov	w1, #0x1                   	// #1
   121f0:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   121f4:	b	11f68 <GOMP_task@@GOMP_2.0+0x204>

00000000000121f8 <GOMP_taskwait_depend@@GOMP_5.0>:
   121f8:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   121fc:	adrp	x3, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   12200:	ldr	x3, [x3, #4016]
   12204:	ldrb	w2, [x1, #1372]
   12208:	mrs	x1, tpidr_el0
   1220c:	cbz	w2, 12250 <GOMP_taskwait_depend@@GOMP_5.0+0x58>
   12210:	add	x2, x1, x3
   12214:	ldr	x4, [x2, #16]
   12218:	cbz	x4, 12250 <GOMP_taskwait_depend@@GOMP_5.0+0x58>
   1221c:	ldr	w4, [x4, #132]
   12220:	tbnz	w4, #2, 12268 <GOMP_taskwait_depend@@GOMP_5.0+0x70>
   12224:	ldr	x2, [x2, #80]
   12228:	ldr	x2, [x2, #40]
   1222c:	cbz	x2, 12250 <GOMP_taskwait_depend@@GOMP_5.0+0x58>
   12230:	ldrb	w4, [x2, #49]
   12234:	cbnz	w4, 12268 <GOMP_taskwait_depend@@GOMP_5.0+0x70>
   12238:	ldrb	w4, [x2, #50]
   1223c:	cbz	w4, 12250 <GOMP_taskwait_depend@@GOMP_5.0+0x58>
   12240:	ldr	x2, [x2]
   12244:	cbz	x2, 12250 <GOMP_taskwait_depend@@GOMP_5.0+0x58>
   12248:	ldrb	w2, [x2, #49]
   1224c:	cbnz	w2, 12268 <GOMP_taskwait_depend@@GOMP_5.0+0x70>
   12250:	add	x1, x1, x3
   12254:	ldr	x1, [x1, #80]
   12258:	cbz	x1, 12268 <GOMP_taskwait_depend@@GOMP_5.0+0x70>
   1225c:	ldr	x1, [x1, #56]
   12260:	cbz	x1, 12268 <GOMP_taskwait_depend@@GOMP_5.0+0x70>
   12264:	b	119bc <GOMP_taskwait@@GOMP_2.0+0x28c>
   12268:	ret

000000000001226c <GOMP_taskyield@@GOMP_3.0>:
   1226c:	ret

0000000000012270 <GOMP_taskgroup_start@@GOMP_4.0>:
   12270:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   12274:	ldr	x0, [x0, #4016]
   12278:	mrs	x1, tpidr_el0
   1227c:	add	x0, x1, x0
   12280:	ldr	x1, [x0, #16]
   12284:	cbz	x1, 122b0 <GOMP_taskgroup_start@@GOMP_4.0+0x40>
   12288:	stp	x29, x30, [sp, #-32]!
   1228c:	mov	x29, sp
   12290:	str	x19, [sp, #16]
   12294:	ldr	x19, [x0, #80]
   12298:	ldr	x0, [x19, #40]
   1229c:	bl	fc1c <GOMP_single_copy_end@@GOMP_1.0+0x194>
   122a0:	str	x0, [x19, #40]
   122a4:	ldr	x19, [sp, #16]
   122a8:	ldp	x29, x30, [sp], #32
   122ac:	ret
   122b0:	ret

00000000000122b4 <GOMP_taskgroup_end@@GOMP_4.0>:
   122b4:	stp	x29, x30, [sp, #-128]!
   122b8:	mov	x29, sp
   122bc:	stp	x19, x20, [sp, #16]
   122c0:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   122c4:	ldr	x19, [x19, #4016]
   122c8:	stp	x25, x26, [sp, #64]
   122cc:	mrs	x25, tpidr_el0
   122d0:	add	x0, x25, x19
   122d4:	stp	x21, x22, [sp, #32]
   122d8:	ldr	x21, [x0, #16]
   122dc:	stp	x23, x24, [sp, #48]
   122e0:	stp	x27, x28, [sp, #80]
   122e4:	cbz	x21, 12304 <GOMP_taskgroup_end@@GOMP_4.0+0x50>
   122e8:	ldr	x24, [x0, #80]
   122ec:	ldr	x23, [x24, #40]
   122f0:	cbnz	x23, 12320 <GOMP_taskgroup_end@@GOMP_4.0+0x6c>
   122f4:	ldr	w0, [x0, #44]
   122f8:	cbnz	w0, 12320 <GOMP_taskgroup_end@@GOMP_4.0+0x6c>
   122fc:	add	x0, x21, #0x80
   12300:	bl	16208 <omp_get_num_procs@@OMP_1.0+0x594>
   12304:	ldp	x19, x20, [sp, #16]
   12308:	ldp	x21, x22, [sp, #32]
   1230c:	ldp	x23, x24, [sp, #48]
   12310:	ldp	x25, x26, [sp, #64]
   12314:	ldp	x27, x28, [sp, #80]
   12318:	ldp	x29, x30, [sp], #128
   1231c:	ret
   12320:	add	x0, x23, #0x38
   12324:	ldar	x0, [x0]
   12328:	cbz	x0, 1244c <GOMP_taskgroup_end@@GOMP_4.0+0x198>
   1232c:	add	x26, x21, #0x500
   12330:	add	x27, x23, #0x8
   12334:	mov	x0, x26
   12338:	add	x25, x25, x19
   1233c:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   12340:	add	x28, sp, #0x7f
   12344:	add	x0, x23, #0x34
   12348:	mov	w20, #0x0                   	// #0
   1234c:	mov	x22, #0x0                   	// #0
   12350:	str	x0, [sp, #104]
   12354:	ldr	x0, [x23, #8]
   12358:	cbnz	x0, 12460 <GOMP_taskgroup_end@@GOMP_4.0+0x1ac>
   1235c:	ldr	x0, [x27, #16]
   12360:	cbnz	x0, 12460 <GOMP_taskgroup_end@@GOMP_4.0+0x1ac>
   12364:	ldr	x0, [x23, #56]
   12368:	cbz	x0, 12430 <GOMP_taskgroup_end@@GOMP_4.0+0x17c>
   1236c:	mov	x1, x24
   12370:	ldr	x0, [x1, #8]!
   12374:	cbnz	x0, 12380 <GOMP_taskgroup_end@@GOMP_4.0+0xcc>
   12378:	ldr	x0, [x1, #16]
   1237c:	cbz	x0, 12478 <GOMP_taskgroup_end@@GOMP_4.0+0x1c4>
   12380:	mov	x4, x28
   12384:	add	x3, x21, #0x508
   12388:	mov	w2, #0x0                   	// #0
   1238c:	mov	w0, #0x1                   	// #1
   12390:	bl	ff78 <GOMP_single_copy_end@@GOMP_1.0+0x4f0>
   12394:	mov	x19, x0
   12398:	ldr	w0, [x0, #200]
   1239c:	cmp	w0, #0x2
   123a0:	b.ne	12478 <GOMP_taskgroup_end@@GOMP_4.0+0x1c4>  // b.any
   123a4:	ldr	x1, [x19]
   123a8:	mov	x2, x21
   123ac:	mov	x0, x19
   123b0:	bl	10c9c <GOMP_single_copy_end@@GOMP_1.0+0x1214>
   123b4:	tst	w0, #0xff
   123b8:	b.eq	12484 <GOMP_taskgroup_end@@GOMP_4.0+0x1d0>  // b.none
   123bc:	cbz	x22, 123d0 <GOMP_taskgroup_end@@GOMP_4.0+0x11c>
   123c0:	mov	x0, x22
   123c4:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   123c8:	mov	x0, x22
   123cc:	bl	8950 <free@plt>
   123d0:	mov	x1, x21
   123d4:	mov	x0, x19
   123d8:	bl	107d0 <GOMP_single_copy_end@@GOMP_1.0+0xd48>
   123dc:	mov	x22, x0
   123e0:	mov	x0, x19
   123e4:	bl	10a04 <GOMP_single_copy_end@@GOMP_1.0+0xf7c>
   123e8:	add	x0, x19, #0x8
   123ec:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   123f0:	mov	x0, x19
   123f4:	bl	10a90 <GOMP_single_copy_end@@GOMP_1.0+0x1008>
   123f8:	ldr	w0, [x21, #1320]
   123fc:	cmp	x22, #0x1
   12400:	sub	w0, w0, #0x1
   12404:	str	w0, [x21, #1320]
   12408:	b.ls	12504 <GOMP_taskgroup_end@@GOMP_4.0+0x250>  // b.plast
   1240c:	ldr	w0, [x21, #1328]
   12410:	ldr	w20, [x21]
   12414:	sub	w20, w20, w0
   12418:	ldrb	w0, [x24, #204]
   1241c:	eor	w0, w0, #0x1
   12420:	sub	w20, w20, w0
   12424:	cmp	x22, w20, sxtw
   12428:	csel	w20, w22, w20, cc  // cc = lo, ul, last
   1242c:	b	12504 <GOMP_taskgroup_end@@GOMP_4.0+0x250>
   12430:	mov	x0, x26
   12434:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   12438:	cbz	x22, 1244c <GOMP_taskgroup_end@@GOMP_4.0+0x198>
   1243c:	mov	x0, x22
   12440:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   12444:	mov	x0, x22
   12448:	bl	8950 <free@plt>
   1244c:	ldr	x0, [x23]
   12450:	str	x0, [x24, #40]
   12454:	mov	x0, x23
   12458:	bl	8950 <free@plt>
   1245c:	b	12304 <GOMP_taskgroup_end@@GOMP_4.0+0x50>
   12460:	mov	x4, x28
   12464:	add	x3, x21, #0x508
   12468:	mov	x1, x27
   1246c:	mov	w2, #0x0                   	// #0
   12470:	mov	w0, #0x2                   	// #2
   12474:	b	12390 <GOMP_taskgroup_end@@GOMP_4.0+0xdc>
   12478:	mov	w0, #0x1                   	// #1
   1247c:	mov	x19, #0x0                   	// #0
   12480:	strb	w0, [x23, #48]
   12484:	mov	x0, x26
   12488:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   1248c:	cbz	w20, 1249c <GOMP_taskgroup_end@@GOMP_4.0+0x1e8>
   12490:	mov	w1, w20
   12494:	add	x0, x21, #0x80
   12498:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   1249c:	cbz	x22, 124b0 <GOMP_taskgroup_end@@GOMP_4.0+0x1fc>
   124a0:	mov	x0, x22
   124a4:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   124a8:	mov	x0, x22
   124ac:	bl	8950 <free@plt>
   124b0:	cbz	x19, 12530 <GOMP_taskgroup_end@@GOMP_4.0+0x27c>
   124b4:	ldp	x1, x0, [x19, #184]
   124b8:	str	x19, [x25, #80]
   124bc:	cbnz	x1, 12514 <GOMP_taskgroup_end@@GOMP_4.0+0x260>
   124c0:	bl	1ae40 <GOMP_target_enter_exit_data@@GOMP_4.5+0x224>
   124c4:	tst	w0, #0xff
   124c8:	b.eq	12518 <GOMP_taskgroup_end@@GOMP_4.0+0x264>  // b.none
   124cc:	mov	x0, x26
   124d0:	str	x24, [x25, #80]
   124d4:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   124d8:	ldr	x0, [x19, #192]
   124dc:	mov	w1, #0x4                   	// #4
   124e0:	ldr	w2, [x0, #44]
   124e4:	str	w1, [x19, #200]
   124e8:	cmp	w2, #0x5
   124ec:	b.ne	1250c <GOMP_taskgroup_end@@GOMP_4.0+0x258>  // b.any
   124f0:	mov	x1, x19
   124f4:	mov	x0, x21
   124f8:	bl	10b94 <GOMP_single_copy_end@@GOMP_1.0+0x110c>
   124fc:	mov	w20, #0x0                   	// #0
   12500:	mov	x19, #0x0                   	// #0
   12504:	mov	x22, x19
   12508:	b	12354 <GOMP_taskgroup_end@@GOMP_4.0+0xa0>
   1250c:	str	w1, [x0, #44]
   12510:	b	124fc <GOMP_taskgroup_end@@GOMP_4.0+0x248>
   12514:	blr	x1
   12518:	str	x24, [x25, #80]
   1251c:	mov	x0, x26
   12520:	mov	w20, #0x0                   	// #0
   12524:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   12528:	cbnz	x19, 123d0 <GOMP_taskgroup_end@@GOMP_4.0+0x11c>
   1252c:	b	12504 <GOMP_taskgroup_end@@GOMP_4.0+0x250>
   12530:	ldr	x0, [sp, #104]
   12534:	bl	fdc0 <GOMP_single_copy_end@@GOMP_1.0+0x338>
   12538:	b	1251c <GOMP_taskgroup_end@@GOMP_4.0+0x268>

000000000001253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>:
   1253c:	stp	x29, x30, [sp, #-96]!
   12540:	mov	x29, sp
   12544:	stp	x19, x20, [sp, #16]
   12548:	mrs	x19, tpidr_el0
   1254c:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   12550:	ldr	x20, [x20, #4016]
   12554:	stp	x21, x22, [sp, #32]
   12558:	mov	x22, x0
   1255c:	add	x21, x19, x20
   12560:	stp	x23, x24, [sp, #48]
   12564:	ldr	x0, [x21, #16]
   12568:	stp	x25, x26, [sp, #64]
   1256c:	cbnz	x0, 1257c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x40>
   12570:	bl	10e28 <GOMP_single_copy_end@@GOMP_1.0+0x13a0>
   12574:	bl	12270 <GOMP_taskgroup_start@@GOMP_4.0>
   12578:	ldr	x0, [x21, #16]
   1257c:	add	x19, x19, x20
   12580:	ldr	w26, [x0]
   12584:	mov	x20, x22
   12588:	mov	x24, #0x0                   	// #0
   1258c:	ldr	x23, [x19, #80]
   12590:	ldr	x1, [x23, #40]
   12594:	ldr	x19, [x1, #40]
   12598:	ldp	x21, x0, [x20, #8]
   1259c:	mul	x21, x26, x21
   125a0:	mov	x1, x21
   125a4:	bl	ae54 <fprintf@plt+0x22f4>
   125a8:	mov	x2, x21
   125ac:	mov	x25, x0
   125b0:	mov	w1, #0x0                   	// #0
   125b4:	bl	8800 <memset@plt>
   125b8:	ldr	x0, [x20]
   125bc:	add	x21, x21, x25
   125c0:	str	x25, [x20, #16]
   125c4:	add	x24, x24, x0
   125c8:	stp	xzr, x21, [x20, #40]
   125cc:	ldr	x0, [x20, #32]
   125d0:	cbnz	x0, 12664 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x128>
   125d4:	str	x19, [x20, #32]
   125d8:	mov	x21, x19
   125dc:	cbnz	x19, 1266c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x130>
   125e0:	mov	x0, x24
   125e4:	bl	fc94 <GOMP_single_copy_end@@GOMP_1.0+0x20c>
   125e8:	str	x0, [sp, #88]
   125ec:	mov	x20, x0
   125f0:	cbz	x19, 12634 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xf8>
   125f4:	ldp	x0, x1, [x19, #8]
   125f8:	ldr	x24, [x19], #32
   125fc:	add	x24, x19, x24, lsl #3
   12600:	sub	x0, x0, x1
   12604:	str	x0, [x20, #8]
   12608:	ldr	x25, [x19]
   1260c:	cmp	x25, #0x1
   12610:	b.ls	12628 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xec>  // b.plast
   12614:	ldr	x1, [x25]
   12618:	mov	x0, x20
   1261c:	eor	x1, x1, x1, lsr #32
   12620:	bl	10158 <GOMP_single_copy_end@@GOMP_1.0+0x6d0>
   12624:	str	x25, [x0]
   12628:	add	x19, x19, #0x8
   1262c:	cmp	x24, x19
   12630:	b.hi	12608 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xcc>  // b.pmore
   12634:	mov	x19, x22
   12638:	add	x26, sp, #0x58
   1263c:	add	x20, x19, #0x38
   12640:	mov	x25, #0x0                   	// #0
   12644:	ldr	x0, [x19]
   12648:	cmp	x25, x0
   1264c:	b.cc	1268c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x150>  // b.lo, b.ul, b.last
   12650:	ldr	x0, [x19, #32]
   12654:	cmp	x21, x0
   12658:	b.eq	126b4 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x178>  // b.none
   1265c:	mov	x19, x0
   12660:	b	1263c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x100>
   12664:	mov	x20, x0
   12668:	b	12598 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x5c>
   1266c:	ldr	x19, [x19, #40]
   12670:	cbz	x19, 12684 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x148>
   12674:	ldp	x0, x1, [x19, #8]
   12678:	sub	x0, x0, x1
   1267c:	add	x24, x24, x0
   12680:	b	125e0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xa4>
   12684:	mov	x19, #0x0                   	// #0
   12688:	b	125e0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xa4>
   1268c:	str	x19, [x20, #16]
   12690:	mov	x24, x20
   12694:	mov	x0, x26
   12698:	mov	w2, #0x1                   	// #1
   1269c:	add	x25, x25, #0x1
   126a0:	mov	x1, x24
   126a4:	add	x20, x20, #0x18
   126a8:	bl	101e0 <GOMP_single_copy_end@@GOMP_1.0+0x758>
   126ac:	str	x24, [x0]
   126b0:	b	12644 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x108>
   126b4:	ldr	x0, [sp, #88]
   126b8:	ldp	x25, x26, [sp, #64]
   126bc:	str	x0, [x19, #40]
   126c0:	ldr	x0, [x23, #40]
   126c4:	ldp	x19, x20, [sp, #16]
   126c8:	ldp	x23, x24, [sp, #48]
   126cc:	str	x22, [x0, #40]
   126d0:	ldp	x21, x22, [sp, #32]
   126d4:	ldp	x29, x30, [sp], #96
   126d8:	ret

00000000000126dc <GOMP_taskloop@@GOMP_4.5>:
   126dc:	stp	x29, x30, [sp, #-432]!
   126e0:	mov	x29, sp
   126e4:	stp	x19, x20, [sp, #16]
   126e8:	stp	x21, x22, [sp, #32]
   126ec:	stp	x23, x24, [sp, #48]
   126f0:	mov	x23, x4
   126f4:	stp	x25, x26, [sp, #64]
   126f8:	mov	w26, w5
   126fc:	stp	x27, x28, [sp, #80]
   12700:	mov	w27, w7
   12704:	stp	x3, x0, [x29, #160]
   12708:	mrs	x0, tpidr_el0
   1270c:	str	x0, [x29, #208]
   12710:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   12714:	ldr	x0, [x0, #4016]
   12718:	str	x0, [x29, #216]
   1271c:	str	x1, [x29, #200]
   12720:	ldp	x0, x1, [x29, #208]
   12724:	str	x2, [x29, #184]
   12728:	ldp	x24, x19, [x29, #432]
   1272c:	ldr	x25, [x29, #448]
   12730:	add	x0, x0, x1
   12734:	ldr	x21, [x0, #16]
   12738:	cbz	x21, 12744 <GOMP_taskloop@@GOMP_4.5+0x68>
   1273c:	ldr	w0, [x21, #132]
   12740:	tbnz	w0, #2, 127e8 <GOMP_taskloop@@GOMP_4.5+0x10c>
   12744:	cmp	x25, #0x0
   12748:	b.le	12808 <GOMP_taskloop@@GOMP_4.5+0x12c>
   1274c:	cmp	x24, x19
   12750:	b.ge	127e8 <GOMP_taskloop@@GOMP_4.5+0x10c>  // b.tcont
   12754:	sub	x22, x25, #0x1
   12758:	sub	x19, x19, x24
   1275c:	add	x22, x19, x22
   12760:	sdiv	x22, x22, x25
   12764:	tbz	w26, #9, 12818 <GOMP_taskloop@@GOMP_4.5+0x13c>
   12768:	udiv	x20, x22, x6
   1276c:	cmp	x20, #0x1
   12770:	b.ls	12858 <GOMP_taskloop@@GOMP_4.5+0x17c>  // b.plast
   12774:	cmp	x6, x20
   12778:	b.hi	1282c <GOMP_taskloop@@GOMP_4.5+0x150>  // b.pmore
   1277c:	mul	x0, x6, x20
   12780:	mul	x19, x6, x25
   12784:	cmp	x22, x0
   12788:	b.eq	12798 <GOMP_taskloop@@GOMP_4.5+0xbc>  // b.none
   1278c:	sub	x22, x22, x0
   12790:	add	x19, x19, x25
   12794:	sub	x22, x22, #0x1
   12798:	and	w0, w26, #0x800
   1279c:	str	w0, [x29, #192]
   127a0:	tbz	w26, #11, 1286c <GOMP_taskloop@@GOMP_4.5+0x190>
   127a4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   127a8:	ldrb	w0, [x0, #1372]
   127ac:	cbz	w0, 12880 <GOMP_taskloop@@GOMP_4.5+0x1a4>
   127b0:	ldp	x0, x1, [x29, #208]
   127b4:	add	x0, x0, x1
   127b8:	ldr	x0, [x0, #80]
   127bc:	cbz	x0, 12880 <GOMP_taskloop@@GOMP_4.5+0x1a4>
   127c0:	ldr	x0, [x0, #40]
   127c4:	cbz	x0, 12880 <GOMP_taskloop@@GOMP_4.5+0x1a4>
   127c8:	ldrb	w1, [x0, #49]
   127cc:	cbnz	w1, 127e8 <GOMP_taskloop@@GOMP_4.5+0x10c>
   127d0:	ldrb	w1, [x0, #50]
   127d4:	cbz	w1, 12880 <GOMP_taskloop@@GOMP_4.5+0x1a4>
   127d8:	ldr	x0, [x0]
   127dc:	cbz	x0, 12880 <GOMP_taskloop@@GOMP_4.5+0x1a4>
   127e0:	ldrb	w0, [x0, #49]
   127e4:	cbz	w0, 12880 <GOMP_taskloop@@GOMP_4.5+0x1a4>
   127e8:	mov	sp, x29
   127ec:	ldp	x19, x20, [sp, #16]
   127f0:	ldp	x21, x22, [sp, #32]
   127f4:	ldp	x23, x24, [sp, #48]
   127f8:	ldp	x25, x26, [sp, #64]
   127fc:	ldp	x27, x28, [sp, #80]
   12800:	ldp	x29, x30, [sp], #432
   12804:	ret
   12808:	cmp	x24, x19
   1280c:	b.le	127e8 <GOMP_taskloop@@GOMP_4.5+0x10c>
   12810:	add	x22, x25, #0x1
   12814:	b	12758 <GOMP_taskloop@@GOMP_4.5+0x7c>
   12818:	cbnz	x6, 12848 <GOMP_taskloop@@GOMP_4.5+0x16c>
   1281c:	cbz	x21, 12850 <GOMP_taskloop@@GOMP_4.5+0x174>
   12820:	ldr	w20, [x21]
   12824:	cmp	x20, x22
   12828:	b.cs	12860 <GOMP_taskloop@@GOMP_4.5+0x184>  // b.hs, b.nlast
   1282c:	udiv	x19, x22, x20
   12830:	msub	x0, x19, x20, x22
   12834:	mul	x19, x19, x25
   12838:	cbz	x0, 12798 <GOMP_taskloop@@GOMP_4.5+0xbc>
   1283c:	add	x19, x19, x25
   12840:	sub	x22, x0, #0x1
   12844:	b	12798 <GOMP_taskloop@@GOMP_4.5+0xbc>
   12848:	mov	x20, x6
   1284c:	b	12824 <GOMP_taskloop@@GOMP_4.5+0x148>
   12850:	mov	x20, #0x1                   	// #1
   12854:	b	12824 <GOMP_taskloop@@GOMP_4.5+0x148>
   12858:	mov	x20, #0x1                   	// #1
   1285c:	b	12798 <GOMP_taskloop@@GOMP_4.5+0xbc>
   12860:	mov	x19, x25
   12864:	mov	x20, x22
   12868:	b	12798 <GOMP_taskloop@@GOMP_4.5+0xbc>
   1286c:	bl	12270 <GOMP_taskgroup_start@@GOMP_4.0>
   12870:	tbz	w26, #12, 12880 <GOMP_taskloop@@GOMP_4.5+0x1a4>
   12874:	ldr	x0, [x29, #200]
   12878:	ldr	x0, [x0, #16]
   1287c:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   12880:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   12884:	ldr	w7, [x0, #1376]
   12888:	cmp	w7, w27
   1288c:	csel	w0, w7, w27, le
   12890:	str	w0, [x29, #196]
   12894:	tbz	w26, #10, 128cc <GOMP_taskloop@@GOMP_4.5+0x1f0>
   12898:	cbz	x21, 128cc <GOMP_taskloop@@GOMP_4.5+0x1f0>
   1289c:	ldp	x0, x1, [x29, #208]
   128a0:	add	x0, x0, x1
   128a4:	ldr	x28, [x0, #80]
   128a8:	cbz	x28, 128b4 <GOMP_taskloop@@GOMP_4.5+0x1d8>
   128ac:	ldrb	w0, [x28, #205]
   128b0:	cbnz	w0, 128cc <GOMP_taskloop@@GOMP_4.5+0x1f0>
   128b4:	ldr	w0, [x21]
   128b8:	ldr	w1, [x21, #1320]
   128bc:	lsl	w0, w0, #6
   128c0:	add	x1, x1, x20
   128c4:	cmp	x1, x0
   128c8:	b.ls	12b98 <GOMP_taskloop@@GOMP_4.5+0x4bc>  // b.plast
   128cc:	ldr	x0, [x29, #184]
   128d0:	mov	x27, #0x0                   	// #0
   128d4:	cbnz	x0, 12904 <GOMP_taskloop@@GOMP_4.5+0x228>
   128d8:	add	x23, x29, #0xe0
   128dc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   128e0:	add	x28, x23, #0x8
   128e4:	add	x0, x0, #0x2c0
   128e8:	str	x0, [x29, #184]
   128ec:	cmp	x20, x27
   128f0:	b.ne	12ac4 <GOMP_taskloop@@GOMP_4.5+0x3e8>  // b.any
   128f4:	ldr	w0, [x29, #192]
   128f8:	cbnz	w0, 127e8 <GOMP_taskloop@@GOMP_4.5+0x10c>
   128fc:	bl	122b4 <GOMP_taskgroup_end@@GOMP_4.0>
   12900:	b	127e8 <GOMP_taskloop@@GOMP_4.5+0x10c>
   12904:	mov	x0, sp
   12908:	str	x0, [x29, #152]
   1290c:	ldr	x0, [x29, #208]
   12910:	neg	x3, x23
   12914:	ldr	x1, [x29, #216]
   12918:	sub	x4, x23, #0x1
   1291c:	mov	x2, #0xd0                  	// #208
   12920:	ubfx	x26, x26, #1, #1
   12924:	add	x0, x0, x1
   12928:	mul	x2, x20, x2
   1292c:	ldr	x1, [x0, #80]
   12930:	str	x1, [x29, #144]
   12934:	ldr	x1, [x29, #160]
   12938:	sub	sp, sp, x2
   1293c:	mov	x28, sp
   12940:	add	x27, x1, x23
   12944:	sub	x27, x27, #0x1
   12948:	and	x27, x27, x3
   1294c:	madd	x1, x27, x20, x4
   12950:	add	x1, x1, #0xf
   12954:	and	x1, x1, #0xfffffffffffffff0
   12958:	sub	sp, sp, x1
   1295c:	add	x1, x2, x28
   12960:	add	x4, sp, x4
   12964:	str	x1, [x29, #176]
   12968:	and	x23, x4, x3
   1296c:	mov	x3, x28
   12970:	mov	x6, x23
   12974:	mov	x4, x0
   12978:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1297c:	add	x0, x0, #0x2c0
   12980:	str	x0, [x29, #160]
   12984:	ldr	x0, [x29, #176]
   12988:	cmp	x0, x3
   1298c:	b.ne	129bc <GOMP_taskloop@@GOMP_4.5+0x2e0>  // b.any
   12990:	ldp	x0, x1, [x29, #208]
   12994:	add	x28, x28, #0x8
   12998:	add	x21, x21, #0x500
   1299c:	mov	x26, #0x0                   	// #0
   129a0:	add	x0, x0, x1
   129a4:	str	x0, [x29, #216]
   129a8:	cmp	x20, x26
   129ac:	b.ne	12a58 <GOMP_taskloop@@GOMP_4.5+0x37c>  // b.any
   129b0:	ldr	x0, [x29, #152]
   129b4:	mov	sp, x0
   129b8:	b	128f4 <GOMP_taskloop@@GOMP_4.5+0x218>
   129bc:	ldr	x0, [x4, #80]
   129c0:	stp	x6, x4, [x29, #120]
   129c4:	ldr	x1, [x29, #144]
   129c8:	cmp	x0, #0x0
   129cc:	add	x2, x0, #0x90
   129d0:	str	x3, [x29, #136]
   129d4:	ldr	x0, [x29, #160]
   129d8:	csel	x2, x0, x2, eq  // eq = none
   129dc:	mov	x0, x3
   129e0:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   129e4:	ldp	x6, x4, [x29, #120]
   129e8:	mov	w1, #0x1                   	// #1
   129ec:	ldr	x3, [x29, #136]
   129f0:	ldr	w0, [x29, #196]
   129f4:	str	w0, [x3, #88]
   129f8:	ldr	x0, [x4, #80]
   129fc:	str	w1, [x3, #200]
   12a00:	cbz	x0, 12a0c <GOMP_taskloop@@GOMP_4.5+0x330>
   12a04:	ldrb	w2, [x0, #205]
   12a08:	cbnz	w2, 12a10 <GOMP_taskloop@@GOMP_4.5+0x334>
   12a0c:	mov	w1, w26
   12a10:	strb	w1, [x3, #205]
   12a14:	cbz	x0, 12a28 <GOMP_taskloop@@GOMP_4.5+0x34c>
   12a18:	ldrb	w1, [x0, #204]
   12a1c:	ldr	x0, [x0, #40]
   12a20:	str	x0, [x3, #40]
   12a24:	strb	w1, [x3, #204]
   12a28:	ldr	x2, [x29, #184]
   12a2c:	str	x3, [x4, #80]
   12a30:	ldr	x1, [x29, #200]
   12a34:	mov	x0, x6
   12a38:	stp	x3, x4, [x29, #120]
   12a3c:	str	x6, [x29, #136]
   12a40:	blr	x2
   12a44:	ldp	x3, x4, [x29, #120]
   12a48:	ldr	x6, [x29, #136]
   12a4c:	add	x6, x6, x27
   12a50:	add	x3, x3, #0xd0
   12a54:	b	12984 <GOMP_taskloop@@GOMP_4.5+0x2a8>
   12a58:	ldr	x1, [x29, #216]
   12a5c:	sub	x0, x28, #0x8
   12a60:	cmp	x22, x26
   12a64:	str	x0, [x1, #80]
   12a68:	str	x24, [x23]
   12a6c:	add	x24, x24, x19
   12a70:	str	x24, [x23, #8]
   12a74:	b.ne	12a7c <GOMP_taskloop@@GOMP_4.5+0x3a0>  // b.any
   12a78:	sub	x19, x19, x25
   12a7c:	ldr	x1, [x29, #168]
   12a80:	mov	x0, x23
   12a84:	add	x23, x23, x27
   12a88:	blr	x1
   12a8c:	ldr	x0, [x28]
   12a90:	cbnz	x0, 12a9c <GOMP_taskloop@@GOMP_4.5+0x3c0>
   12a94:	ldr	x0, [x28, #16]
   12a98:	cbz	x0, 12ab4 <GOMP_taskloop@@GOMP_4.5+0x3d8>
   12a9c:	mov	x0, x21
   12aa0:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   12aa4:	mov	x0, x28
   12aa8:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   12aac:	mov	x0, x21
   12ab0:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   12ab4:	add	x26, x26, #0x1
   12ab8:	add	x28, x28, #0xd0
   12abc:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   12ac0:	b	129a8 <GOMP_taskloop@@GOMP_4.5+0x2cc>
   12ac4:	ldp	x0, x1, [x29, #208]
   12ac8:	add	x6, x0, x1
   12acc:	ldr	x0, [x29, #184]
   12ad0:	ldr	x1, [x6, #80]
   12ad4:	cmp	x1, #0x0
   12ad8:	add	x2, x1, #0x90
   12adc:	csel	x2, x0, x2, eq  // eq = none
   12ae0:	mov	x0, x23
   12ae4:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   12ae8:	ldr	w0, [x29, #196]
   12aec:	mov	w1, #0x1                   	// #1
   12af0:	str	w0, [x29, #312]
   12af4:	ldr	x0, [x6, #80]
   12af8:	str	w1, [x29, #424]
   12afc:	cbz	x0, 12b08 <GOMP_taskloop@@GOMP_4.5+0x42c>
   12b00:	ldrb	w2, [x0, #205]
   12b04:	cbnz	w2, 12b0c <GOMP_taskloop@@GOMP_4.5+0x430>
   12b08:	ubfx	x1, x26, #1, #1
   12b0c:	strb	w1, [x29, #429]
   12b10:	cbz	x0, 12b24 <GOMP_taskloop@@GOMP_4.5+0x448>
   12b14:	ldrb	w1, [x0, #204]
   12b18:	ldr	x0, [x0, #40]
   12b1c:	str	x0, [x29, #264]
   12b20:	strb	w1, [x29, #428]
   12b24:	ldp	x0, x1, [x29, #208]
   12b28:	cmp	x22, x27
   12b2c:	add	x0, x0, x1
   12b30:	str	x23, [x0, #80]
   12b34:	ldr	x0, [x29, #200]
   12b38:	str	x24, [x0]
   12b3c:	add	x24, x24, x19
   12b40:	str	x24, [x0, #8]
   12b44:	b.ne	12b4c <GOMP_taskloop@@GOMP_4.5+0x470>  // b.any
   12b48:	sub	x19, x19, x25
   12b4c:	ldr	x1, [x29, #168]
   12b50:	ldr	x0, [x29, #200]
   12b54:	blr	x1
   12b58:	ldr	x0, [x29, #232]
   12b5c:	cbnz	x0, 12b68 <GOMP_taskloop@@GOMP_4.5+0x48c>
   12b60:	ldr	x0, [x29, #248]
   12b64:	cbz	x0, 12b8c <GOMP_taskloop@@GOMP_4.5+0x4b0>
   12b68:	add	x1, x21, #0x500
   12b6c:	str	x1, [x29, #176]
   12b70:	mov	x0, x1
   12b74:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   12b78:	mov	x0, x28
   12b7c:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   12b80:	ldr	x1, [x29, #176]
   12b84:	mov	x0, x1
   12b88:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   12b8c:	add	x27, x27, #0x1
   12b90:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   12b94:	b	128ec <GOMP_taskloop@@GOMP_4.5+0x210>
   12b98:	mov	x0, sp
   12b9c:	str	x0, [x29, #152]
   12ba0:	lsl	x0, x20, #3
   12ba4:	add	x1, x23, #0xcf
   12ba8:	add	x0, x0, #0xf
   12bac:	and	x0, x0, #0xfffffffffffffff0
   12bb0:	sub	sp, sp, x0
   12bb4:	mov	x0, sp
   12bb8:	str	x0, [x29, #176]
   12bbc:	ubfx	x0, x26, #1, #1
   12bc0:	str	x0, [x29, #144]
   12bc4:	add	x0, x23, #0xcf
   12bc8:	str	x0, [x29, #136]
   12bcc:	ldr	x0, [x29, #160]
   12bd0:	mov	x26, #0x0                   	// #0
   12bd4:	ldr	x27, [x28, #40]
   12bd8:	add	x0, x0, x1
   12bdc:	str	x0, [x29, #128]
   12be0:	neg	x0, x23
   12be4:	str	x0, [x29, #120]
   12be8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   12bec:	add	x0, x0, #0x2c0
   12bf0:	str	x0, [x29, #112]
   12bf4:	cmp	x20, x26
   12bf8:	b.ne	12c50 <GOMP_taskloop@@GOMP_4.5+0x574>  // b.any
   12bfc:	add	x22, x21, #0x500
   12c00:	mov	x0, x22
   12c04:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   12c08:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   12c0c:	ldrb	w0, [x0, #1372]
   12c10:	cbz	w0, 12d9c <GOMP_taskloop@@GOMP_4.5+0x6c0>
   12c14:	ldr	x0, [x29, #184]
   12c18:	cbnz	x0, 12d9c <GOMP_taskloop@@GOMP_4.5+0x6c0>
   12c1c:	ldr	w0, [x21, #132]
   12c20:	tbz	w0, #2, 12d68 <GOMP_taskloop@@GOMP_4.5+0x68c>
   12c24:	mov	x19, #0x0                   	// #0
   12c28:	mov	x0, x22
   12c2c:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   12c30:	cmp	x20, x19
   12c34:	b.ne	12d48 <GOMP_taskloop@@GOMP_4.5+0x66c>  // b.any
   12c38:	ldr	w0, [x29, #192]
   12c3c:	cbnz	w0, 12c44 <GOMP_taskloop@@GOMP_4.5+0x568>
   12c40:	bl	122b4 <GOMP_taskgroup_end@@GOMP_4.0>
   12c44:	ldr	x0, [x29, #152]
   12c48:	mov	sp, x0
   12c4c:	b	127e8 <GOMP_taskloop@@GOMP_4.5+0x10c>
   12c50:	ldr	x0, [x29, #128]
   12c54:	bl	adb0 <fprintf@plt+0x2250>
   12c58:	mov	x23, x0
   12c5c:	ldr	x1, [x29, #176]
   12c60:	ldr	x2, [x29, #216]
   12c64:	str	x0, [x1, x26, lsl #3]
   12c68:	ldr	x1, [x29, #136]
   12c6c:	add	x4, x0, x1
   12c70:	ldr	x1, [x29, #120]
   12c74:	and	x4, x4, x1
   12c78:	str	x4, [x29, #104]
   12c7c:	ldr	x1, [x29, #208]
   12c80:	add	x6, x1, x2
   12c84:	ldr	x1, [x6, #80]
   12c88:	cmp	x1, #0x0
   12c8c:	add	x2, x1, #0x90
   12c90:	ldr	x1, [x29, #112]
   12c94:	csel	x2, x1, x2, eq  // eq = none
   12c98:	mov	x1, x28
   12c9c:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   12ca0:	str	x23, [x6, #80]
   12ca4:	ldr	w0, [x29, #196]
   12ca8:	mov	w2, #0x1                   	// #1
   12cac:	str	w0, [x23, #88]
   12cb0:	ldrb	w0, [x28, #204]
   12cb4:	strb	w0, [x23, #204]
   12cb8:	ldr	x0, [x29, #184]
   12cbc:	str	x27, [x23, #40]
   12cc0:	str	w2, [x23, #200]
   12cc4:	ldr	x4, [x29, #104]
   12cc8:	cbz	x0, 12d30 <GOMP_taskloop@@GOMP_4.5+0x654>
   12ccc:	ldr	x2, [x29, #184]
   12cd0:	mov	x0, x4
   12cd4:	ldr	x1, [x29, #200]
   12cd8:	blr	x2
   12cdc:	ldr	x4, [x29, #104]
   12ce0:	mov	w2, #0x1                   	// #1
   12ce4:	strb	w2, [x23, #206]
   12ce8:	str	x24, [x4]
   12cec:	add	x24, x24, x19
   12cf0:	str	x24, [x4, #8]
   12cf4:	cmp	x22, x26
   12cf8:	b.ne	12d00 <GOMP_taskloop@@GOMP_4.5+0x624>  // b.any
   12cfc:	sub	x19, x19, x25
   12d00:	ldp	x0, x1, [x29, #208]
   12d04:	add	x26, x26, #0x1
   12d08:	str	x4, [x23, #192]
   12d0c:	add	x0, x0, x1
   12d10:	str	x28, [x0, #80]
   12d14:	mov	w0, #0x2                   	// #2
   12d18:	str	w0, [x23, #200]
   12d1c:	ldr	x0, [x29, #168]
   12d20:	str	x0, [x23, #184]
   12d24:	ldrb	w0, [x29, #144]
   12d28:	strb	w0, [x23, #205]
   12d2c:	b	12bf4 <GOMP_taskloop@@GOMP_4.5+0x518>
   12d30:	ldr	x2, [x29, #160]
   12d34:	mov	x0, x4
   12d38:	ldr	x1, [x29, #200]
   12d3c:	bl	8600 <memcpy@plt>
   12d40:	mov	x4, x0
   12d44:	b	12ce8 <GOMP_taskloop@@GOMP_4.5+0x60c>
   12d48:	ldr	x0, [x29, #176]
   12d4c:	ldr	x21, [x0, x19, lsl #3]
   12d50:	add	x19, x19, #0x1
   12d54:	mov	x0, x21
   12d58:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   12d5c:	mov	x0, x21
   12d60:	bl	8950 <free@plt>
   12d64:	b	12c30 <GOMP_taskloop@@GOMP_4.5+0x554>
   12d68:	cbz	x27, 12da0 <GOMP_taskloop@@GOMP_4.5+0x6c4>
   12d6c:	ldrb	w0, [x27, #49]
   12d70:	cbnz	w0, 12c24 <GOMP_taskloop@@GOMP_4.5+0x548>
   12d74:	ldrb	w0, [x27, #50]
   12d78:	cbz	w0, 12d8c <GOMP_taskloop@@GOMP_4.5+0x6b0>
   12d7c:	ldr	x0, [x27]
   12d80:	cbz	x0, 12d8c <GOMP_taskloop@@GOMP_4.5+0x6b0>
   12d84:	ldrb	w0, [x0, #49]
   12d88:	cbnz	w0, 12c24 <GOMP_taskloop@@GOMP_4.5+0x548>
   12d8c:	ldr	x0, [x27, #56]
   12d90:	add	x0, x0, x20
   12d94:	str	x0, [x27, #56]
   12d98:	b	12da0 <GOMP_taskloop@@GOMP_4.5+0x6c4>
   12d9c:	cbnz	x27, 12d8c <GOMP_taskloop@@GOMP_4.5+0x6b0>
   12da0:	add	x23, x28, #0x8
   12da4:	add	x24, x27, #0x8
   12da8:	add	x25, x21, #0x508
   12dac:	mov	x19, #0x0                   	// #0
   12db0:	b	12e3c <GOMP_taskloop@@GOMP_4.5+0x760>
   12db4:	ldr	x0, [x29, #176]
   12db8:	mov	x1, x23
   12dbc:	ldr	w3, [x29, #196]
   12dc0:	mov	w5, #0x0                   	// #0
   12dc4:	mov	w4, #0x0                   	// #0
   12dc8:	ldr	x26, [x0, x19, lsl #3]
   12dcc:	mov	w0, #0x1                   	// #1
   12dd0:	mov	x2, x26
   12dd4:	ldrb	w6, [x26, #207]
   12dd8:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   12ddc:	cbz	x27, 12e00 <GOMP_taskloop@@GOMP_4.5+0x724>
   12de0:	ldrb	w6, [x26, #207]
   12de4:	mov	x2, x26
   12de8:	ldr	w3, [x29, #196]
   12dec:	mov	x1, x24
   12df0:	mov	w5, #0x0                   	// #0
   12df4:	mov	w4, #0x0                   	// #0
   12df8:	mov	w0, #0x2                   	// #2
   12dfc:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   12e00:	ldrb	w6, [x26, #207]
   12e04:	mov	w0, #0x0                   	// #0
   12e08:	ldr	w3, [x29, #196]
   12e0c:	mov	x2, x26
   12e10:	mov	x1, x25
   12e14:	mov	w5, #0x0                   	// #0
   12e18:	mov	w4, #0x1                   	// #1
   12e1c:	add	x19, x19, #0x1
   12e20:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   12e24:	ldr	w0, [x21, #1320]
   12e28:	add	w0, w0, #0x1
   12e2c:	str	w0, [x21, #1320]
   12e30:	ldr	w0, [x21, #1324]
   12e34:	add	w0, w0, #0x1
   12e38:	str	w0, [x21, #1324]
   12e3c:	cmp	x20, x19
   12e40:	b.ne	12db4 <GOMP_taskloop@@GOMP_4.5+0x6d8>  // b.any
   12e44:	ldr	w0, [x21, #132]
   12e48:	ldrb	w19, [x28, #204]
   12e4c:	orr	w0, w0, #0x1
   12e50:	ldr	w1, [x21, #1328]
   12e54:	eor	w19, w19, #0x1
   12e58:	str	w0, [x21, #132]
   12e5c:	ldr	w0, [x21]
   12e60:	add	w2, w1, w19
   12e64:	cmp	w2, w0
   12e68:	b.cs	12e98 <GOMP_taskloop@@GOMP_4.5+0x7bc>  // b.hs, b.nlast
   12e6c:	sub	w0, w0, w1
   12e70:	sub	w19, w0, w19
   12e74:	cmp	x20, w19, sxtw
   12e78:	csel	w19, w20, w19, cc  // cc = lo, ul, last
   12e7c:	mov	x0, x22
   12e80:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   12e84:	cbz	w19, 129b0 <GOMP_taskloop@@GOMP_4.5+0x2d4>
   12e88:	mov	w1, w19
   12e8c:	add	x0, x21, #0x80
   12e90:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   12e94:	b	129b0 <GOMP_taskloop@@GOMP_4.5+0x2d4>
   12e98:	mov	w19, #0x0                   	// #0
   12e9c:	b	12e7c <GOMP_taskloop@@GOMP_4.5+0x7a0>

0000000000012ea0 <GOMP_taskloop_ull@@GOMP_4.5>:
   12ea0:	stp	x29, x30, [sp, #-432]!
   12ea4:	mov	x29, sp
   12ea8:	stp	x19, x20, [sp, #16]
   12eac:	stp	x21, x22, [sp, #32]
   12eb0:	stp	x23, x24, [sp, #48]
   12eb4:	mov	x23, x4
   12eb8:	stp	x25, x26, [sp, #64]
   12ebc:	mov	w26, w5
   12ec0:	stp	x27, x28, [sp, #80]
   12ec4:	mov	w27, w7
   12ec8:	str	x1, [x29, #200]
   12ecc:	mrs	x1, tpidr_el0
   12ed0:	str	x1, [x29, #208]
   12ed4:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   12ed8:	ldr	x1, [x1, #4016]
   12edc:	str	x1, [x29, #216]
   12ee0:	str	x2, [x29, #184]
   12ee4:	ldp	x1, x2, [x29, #208]
   12ee8:	stp	x3, x0, [x29, #160]
   12eec:	ldr	x25, [x29, #448]
   12ef0:	ldp	x24, x19, [x29, #432]
   12ef4:	add	x1, x1, x2
   12ef8:	sub	x0, x25, #0x1
   12efc:	ldr	x21, [x1, #16]
   12f00:	cbz	x21, 12f0c <GOMP_taskloop_ull@@GOMP_4.5+0x6c>
   12f04:	ldr	w1, [x21, #132]
   12f08:	tbnz	w1, #2, 12f8c <GOMP_taskloop_ull@@GOMP_4.5+0xec>
   12f0c:	tbz	w26, #8, 12fac <GOMP_taskloop_ull@@GOMP_4.5+0x10c>
   12f10:	cmp	x24, x19
   12f14:	b.cs	12f8c <GOMP_taskloop_ull@@GOMP_4.5+0xec>  // b.hs, b.nlast
   12f18:	sub	x22, x19, x24
   12f1c:	add	x22, x22, x0
   12f20:	udiv	x22, x22, x25
   12f24:	tbz	w26, #9, 12ff8 <GOMP_taskloop_ull@@GOMP_4.5+0x158>
   12f28:	udiv	x20, x22, x6
   12f2c:	cmp	x20, #0x1
   12f30:	b.hi	12fcc <GOMP_taskloop_ull@@GOMP_4.5+0x12c>  // b.pmore
   12f34:	sub	x19, x19, x24
   12f38:	mov	x20, #0x1                   	// #1
   12f3c:	and	w0, w26, #0x800
   12f40:	str	w0, [x29, #192]
   12f44:	tbz	w26, #11, 13044 <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   12f48:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   12f4c:	ldrb	w0, [x0, #1372]
   12f50:	cbz	w0, 13058 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   12f54:	ldp	x0, x1, [x29, #208]
   12f58:	add	x0, x0, x1
   12f5c:	ldr	x0, [x0, #80]
   12f60:	cbz	x0, 13058 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   12f64:	ldr	x0, [x0, #40]
   12f68:	cbz	x0, 13058 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   12f6c:	ldrb	w1, [x0, #49]
   12f70:	cbnz	w1, 12f8c <GOMP_taskloop_ull@@GOMP_4.5+0xec>
   12f74:	ldrb	w1, [x0, #50]
   12f78:	cbz	w1, 13058 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   12f7c:	ldr	x0, [x0]
   12f80:	cbz	x0, 13058 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   12f84:	ldrb	w0, [x0, #49]
   12f88:	cbz	w0, 13058 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   12f8c:	mov	sp, x29
   12f90:	ldp	x19, x20, [sp, #16]
   12f94:	ldp	x21, x22, [sp, #32]
   12f98:	ldp	x23, x24, [sp, #48]
   12f9c:	ldp	x25, x26, [sp, #64]
   12fa0:	ldp	x27, x28, [sp, #80]
   12fa4:	ldp	x29, x30, [sp], #432
   12fa8:	ret
   12fac:	cmp	x24, x19
   12fb0:	b.ls	12f8c <GOMP_taskloop_ull@@GOMP_4.5+0xec>  // b.plast
   12fb4:	sub	x0, x24, x19
   12fb8:	mvn	x22, x25
   12fbc:	add	x22, x22, x0
   12fc0:	neg	x0, x25
   12fc4:	udiv	x22, x22, x0
   12fc8:	b	12f24 <GOMP_taskloop_ull@@GOMP_4.5+0x84>
   12fcc:	cmp	x6, x20
   12fd0:	ccmn	x20, #0x1, #0x4, ls  // ls = plast
   12fd4:	b.eq	1300c <GOMP_taskloop_ull@@GOMP_4.5+0x16c>  // b.none
   12fd8:	mul	x0, x6, x20
   12fdc:	mul	x19, x25, x6
   12fe0:	cmp	x22, x0
   12fe4:	b.eq	12f3c <GOMP_taskloop_ull@@GOMP_4.5+0x9c>  // b.none
   12fe8:	sub	x22, x22, x0
   12fec:	add	x19, x19, x25
   12ff0:	sub	x22, x22, #0x1
   12ff4:	b	12f3c <GOMP_taskloop_ull@@GOMP_4.5+0x9c>
   12ff8:	cbnz	x6, 13028 <GOMP_taskloop_ull@@GOMP_4.5+0x188>
   12ffc:	cbz	x21, 13030 <GOMP_taskloop_ull@@GOMP_4.5+0x190>
   13000:	ldr	w20, [x21]
   13004:	cmp	x22, x20
   13008:	b.ls	13038 <GOMP_taskloop_ull@@GOMP_4.5+0x198>  // b.plast
   1300c:	udiv	x19, x22, x20
   13010:	msub	x0, x19, x20, x22
   13014:	mul	x19, x19, x25
   13018:	cbz	x0, 12f3c <GOMP_taskloop_ull@@GOMP_4.5+0x9c>
   1301c:	add	x19, x19, x25
   13020:	sub	x22, x0, #0x1
   13024:	b	12f3c <GOMP_taskloop_ull@@GOMP_4.5+0x9c>
   13028:	mov	x20, x6
   1302c:	b	13004 <GOMP_taskloop_ull@@GOMP_4.5+0x164>
   13030:	mov	x20, #0x1                   	// #1
   13034:	b	13004 <GOMP_taskloop_ull@@GOMP_4.5+0x164>
   13038:	mov	x19, x25
   1303c:	mov	x20, x22
   13040:	b	12f3c <GOMP_taskloop_ull@@GOMP_4.5+0x9c>
   13044:	bl	12270 <GOMP_taskgroup_start@@GOMP_4.0>
   13048:	tbz	w26, #12, 13058 <GOMP_taskloop_ull@@GOMP_4.5+0x1b8>
   1304c:	ldr	x0, [x29, #200]
   13050:	ldr	x0, [x0, #16]
   13054:	bl	1253c <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   13058:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1305c:	ldr	w7, [x0, #1376]
   13060:	cmp	w7, w27
   13064:	csel	w0, w7, w27, le
   13068:	str	w0, [x29, #196]
   1306c:	tbz	w26, #10, 130a4 <GOMP_taskloop_ull@@GOMP_4.5+0x204>
   13070:	cbz	x21, 130a4 <GOMP_taskloop_ull@@GOMP_4.5+0x204>
   13074:	ldp	x0, x1, [x29, #208]
   13078:	add	x0, x0, x1
   1307c:	ldr	x28, [x0, #80]
   13080:	cbz	x28, 1308c <GOMP_taskloop_ull@@GOMP_4.5+0x1ec>
   13084:	ldrb	w0, [x28, #205]
   13088:	cbnz	w0, 130a4 <GOMP_taskloop_ull@@GOMP_4.5+0x204>
   1308c:	ldr	w0, [x21]
   13090:	ldr	w1, [x21, #1320]
   13094:	lsl	w0, w0, #6
   13098:	add	x1, x1, x20
   1309c:	cmp	x1, x0
   130a0:	b.ls	1336c <GOMP_taskloop_ull@@GOMP_4.5+0x4cc>  // b.plast
   130a4:	ldr	x0, [x29, #184]
   130a8:	mov	x27, #0x0                   	// #0
   130ac:	cbnz	x0, 130dc <GOMP_taskloop_ull@@GOMP_4.5+0x23c>
   130b0:	add	x23, x29, #0xe0
   130b4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   130b8:	add	x28, x23, #0x8
   130bc:	add	x0, x0, #0x2c0
   130c0:	str	x0, [x29, #184]
   130c4:	cmp	x20, x27
   130c8:	b.ne	13298 <GOMP_taskloop_ull@@GOMP_4.5+0x3f8>  // b.any
   130cc:	ldr	w0, [x29, #192]
   130d0:	cbnz	w0, 12f8c <GOMP_taskloop_ull@@GOMP_4.5+0xec>
   130d4:	bl	122b4 <GOMP_taskgroup_end@@GOMP_4.0>
   130d8:	b	12f8c <GOMP_taskloop_ull@@GOMP_4.5+0xec>
   130dc:	mov	x0, sp
   130e0:	str	x0, [x29, #176]
   130e4:	ldr	x0, [x29, #208]
   130e8:	neg	x3, x23
   130ec:	ldr	x1, [x29, #216]
   130f0:	sub	x4, x23, #0x1
   130f4:	mov	x2, #0xd0                  	// #208
   130f8:	ubfx	x26, x26, #1, #1
   130fc:	add	x0, x0, x1
   13100:	mul	x2, x20, x2
   13104:	ldr	x1, [x0, #80]
   13108:	str	x1, [x29, #152]
   1310c:	ldr	x1, [x29, #160]
   13110:	sub	sp, sp, x2
   13114:	mov	x28, sp
   13118:	add	x27, x1, x23
   1311c:	sub	x27, x27, #0x1
   13120:	and	x27, x27, x3
   13124:	madd	x1, x27, x20, x4
   13128:	add	x1, x1, #0xf
   1312c:	and	x1, x1, #0xfffffffffffffff0
   13130:	sub	sp, sp, x1
   13134:	add	x1, x28, x2
   13138:	add	x4, sp, x4
   1313c:	str	x1, [x29, #160]
   13140:	and	x23, x4, x3
   13144:	mov	x3, x28
   13148:	mov	x6, x23
   1314c:	mov	x4, x0
   13150:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13154:	add	x0, x0, #0x2c0
   13158:	str	x0, [x29, #144]
   1315c:	ldr	x0, [x29, #160]
   13160:	cmp	x3, x0
   13164:	b.ne	13194 <GOMP_taskloop_ull@@GOMP_4.5+0x2f4>  // b.any
   13168:	ldp	x0, x1, [x29, #208]
   1316c:	add	x28, x28, #0x8
   13170:	add	x21, x21, #0x500
   13174:	mov	x26, #0x0                   	// #0
   13178:	add	x0, x0, x1
   1317c:	str	x0, [x29, #216]
   13180:	cmp	x20, x26
   13184:	b.ne	1322c <GOMP_taskloop_ull@@GOMP_4.5+0x38c>  // b.any
   13188:	ldr	x0, [x29, #176]
   1318c:	mov	sp, x0
   13190:	b	130cc <GOMP_taskloop_ull@@GOMP_4.5+0x22c>
   13194:	ldr	x0, [x4, #80]
   13198:	stp	x6, x4, [x29, #120]
   1319c:	cmp	x0, #0x0
   131a0:	add	x2, x0, #0x90
   131a4:	ldp	x0, x1, [x29, #144]
   131a8:	str	x3, [x29, #136]
   131ac:	csel	x2, x0, x2, eq  // eq = none
   131b0:	mov	x0, x3
   131b4:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   131b8:	ldp	x6, x4, [x29, #120]
   131bc:	mov	w1, #0x1                   	// #1
   131c0:	ldr	x3, [x29, #136]
   131c4:	ldr	w0, [x29, #196]
   131c8:	str	w0, [x3, #88]
   131cc:	ldr	x0, [x4, #80]
   131d0:	str	w1, [x3, #200]
   131d4:	cbz	x0, 131e0 <GOMP_taskloop_ull@@GOMP_4.5+0x340>
   131d8:	ldrb	w2, [x0, #205]
   131dc:	cbnz	w2, 131e4 <GOMP_taskloop_ull@@GOMP_4.5+0x344>
   131e0:	mov	w1, w26
   131e4:	strb	w1, [x3, #205]
   131e8:	cbz	x0, 131fc <GOMP_taskloop_ull@@GOMP_4.5+0x35c>
   131ec:	ldrb	w1, [x0, #204]
   131f0:	ldr	x0, [x0, #40]
   131f4:	str	x0, [x3, #40]
   131f8:	strb	w1, [x3, #204]
   131fc:	ldr	x2, [x29, #184]
   13200:	str	x3, [x4, #80]
   13204:	ldr	x1, [x29, #200]
   13208:	mov	x0, x6
   1320c:	stp	x3, x4, [x29, #120]
   13210:	str	x6, [x29, #136]
   13214:	blr	x2
   13218:	ldp	x3, x4, [x29, #120]
   1321c:	ldr	x6, [x29, #136]
   13220:	add	x6, x6, x27
   13224:	add	x3, x3, #0xd0
   13228:	b	1315c <GOMP_taskloop_ull@@GOMP_4.5+0x2bc>
   1322c:	ldr	x1, [x29, #216]
   13230:	sub	x0, x28, #0x8
   13234:	cmp	x22, x26
   13238:	str	x0, [x1, #80]
   1323c:	str	x24, [x23]
   13240:	add	x24, x24, x19
   13244:	str	x24, [x23, #8]
   13248:	b.ne	13250 <GOMP_taskloop_ull@@GOMP_4.5+0x3b0>  // b.any
   1324c:	sub	x19, x19, x25
   13250:	ldr	x1, [x29, #168]
   13254:	mov	x0, x23
   13258:	add	x23, x23, x27
   1325c:	blr	x1
   13260:	ldr	x0, [x28]
   13264:	cbnz	x0, 13270 <GOMP_taskloop_ull@@GOMP_4.5+0x3d0>
   13268:	ldr	x0, [x28, #16]
   1326c:	cbz	x0, 13288 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>
   13270:	mov	x0, x21
   13274:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   13278:	mov	x0, x28
   1327c:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   13280:	mov	x0, x21
   13284:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   13288:	add	x26, x26, #0x1
   1328c:	add	x28, x28, #0xd0
   13290:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   13294:	b	13180 <GOMP_taskloop_ull@@GOMP_4.5+0x2e0>
   13298:	ldp	x0, x1, [x29, #208]
   1329c:	add	x6, x0, x1
   132a0:	ldr	x0, [x29, #184]
   132a4:	ldr	x1, [x6, #80]
   132a8:	cmp	x1, #0x0
   132ac:	add	x2, x1, #0x90
   132b0:	csel	x2, x0, x2, eq  // eq = none
   132b4:	mov	x0, x23
   132b8:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   132bc:	ldr	w0, [x29, #196]
   132c0:	mov	w1, #0x1                   	// #1
   132c4:	str	w0, [x29, #312]
   132c8:	ldr	x0, [x6, #80]
   132cc:	str	w1, [x29, #424]
   132d0:	cbz	x0, 132dc <GOMP_taskloop_ull@@GOMP_4.5+0x43c>
   132d4:	ldrb	w2, [x0, #205]
   132d8:	cbnz	w2, 132e0 <GOMP_taskloop_ull@@GOMP_4.5+0x440>
   132dc:	ubfx	x1, x26, #1, #1
   132e0:	strb	w1, [x29, #429]
   132e4:	cbz	x0, 132f8 <GOMP_taskloop_ull@@GOMP_4.5+0x458>
   132e8:	ldrb	w1, [x0, #204]
   132ec:	ldr	x0, [x0, #40]
   132f0:	str	x0, [x29, #264]
   132f4:	strb	w1, [x29, #428]
   132f8:	ldp	x0, x1, [x29, #208]
   132fc:	cmp	x22, x27
   13300:	add	x0, x0, x1
   13304:	str	x23, [x0, #80]
   13308:	ldr	x0, [x29, #200]
   1330c:	str	x24, [x0]
   13310:	add	x24, x24, x19
   13314:	str	x24, [x0, #8]
   13318:	b.ne	13320 <GOMP_taskloop_ull@@GOMP_4.5+0x480>  // b.any
   1331c:	sub	x19, x19, x25
   13320:	ldr	x1, [x29, #168]
   13324:	ldr	x0, [x29, #200]
   13328:	blr	x1
   1332c:	ldr	x0, [x29, #232]
   13330:	cbnz	x0, 1333c <GOMP_taskloop_ull@@GOMP_4.5+0x49c>
   13334:	ldr	x0, [x29, #248]
   13338:	cbz	x0, 13360 <GOMP_taskloop_ull@@GOMP_4.5+0x4c0>
   1333c:	add	x1, x21, #0x500
   13340:	str	x1, [x29, #176]
   13344:	mov	x0, x1
   13348:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   1334c:	mov	x0, x28
   13350:	bl	10038 <GOMP_single_copy_end@@GOMP_1.0+0x5b0>
   13354:	ldr	x1, [x29, #176]
   13358:	mov	x0, x1
   1335c:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   13360:	add	x27, x27, #0x1
   13364:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   13368:	b	130c4 <GOMP_taskloop_ull@@GOMP_4.5+0x224>
   1336c:	mov	x0, sp
   13370:	str	x0, [x29, #152]
   13374:	lsl	x0, x20, #3
   13378:	add	x1, x23, #0xcf
   1337c:	add	x0, x0, #0xf
   13380:	and	x0, x0, #0xfffffffffffffff0
   13384:	sub	sp, sp, x0
   13388:	mov	x0, sp
   1338c:	str	x0, [x29, #176]
   13390:	ubfx	x0, x26, #1, #1
   13394:	str	x0, [x29, #144]
   13398:	add	x0, x23, #0xcf
   1339c:	str	x0, [x29, #136]
   133a0:	ldr	x0, [x29, #160]
   133a4:	mov	x26, #0x0                   	// #0
   133a8:	ldr	x27, [x28, #40]
   133ac:	add	x0, x0, x1
   133b0:	str	x0, [x29, #128]
   133b4:	neg	x0, x23
   133b8:	str	x0, [x29, #120]
   133bc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   133c0:	add	x0, x0, #0x2c0
   133c4:	str	x0, [x29, #112]
   133c8:	cmp	x20, x26
   133cc:	b.ne	13424 <GOMP_taskloop_ull@@GOMP_4.5+0x584>  // b.any
   133d0:	add	x22, x21, #0x500
   133d4:	mov	x0, x22
   133d8:	bl	fc6c <GOMP_single_copy_end@@GOMP_1.0+0x1e4>
   133dc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   133e0:	ldrb	w0, [x0, #1372]
   133e4:	cbz	w0, 13570 <GOMP_taskloop_ull@@GOMP_4.5+0x6d0>
   133e8:	ldr	x0, [x29, #184]
   133ec:	cbnz	x0, 13570 <GOMP_taskloop_ull@@GOMP_4.5+0x6d0>
   133f0:	ldr	w0, [x21, #132]
   133f4:	tbz	w0, #2, 1353c <GOMP_taskloop_ull@@GOMP_4.5+0x69c>
   133f8:	mov	x19, #0x0                   	// #0
   133fc:	mov	x0, x22
   13400:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   13404:	cmp	x20, x19
   13408:	b.ne	1351c <GOMP_taskloop_ull@@GOMP_4.5+0x67c>  // b.any
   1340c:	ldr	w0, [x29, #192]
   13410:	cbnz	w0, 13418 <GOMP_taskloop_ull@@GOMP_4.5+0x578>
   13414:	bl	122b4 <GOMP_taskgroup_end@@GOMP_4.0>
   13418:	ldr	x0, [x29, #152]
   1341c:	mov	sp, x0
   13420:	b	12f8c <GOMP_taskloop_ull@@GOMP_4.5+0xec>
   13424:	ldr	x0, [x29, #128]
   13428:	bl	adb0 <fprintf@plt+0x2250>
   1342c:	mov	x23, x0
   13430:	ldr	x1, [x29, #176]
   13434:	ldr	x2, [x29, #216]
   13438:	str	x0, [x1, x26, lsl #3]
   1343c:	ldr	x1, [x29, #136]
   13440:	add	x4, x0, x1
   13444:	ldr	x1, [x29, #120]
   13448:	and	x4, x4, x1
   1344c:	str	x4, [x29, #104]
   13450:	ldr	x1, [x29, #208]
   13454:	add	x6, x1, x2
   13458:	ldr	x1, [x6, #80]
   1345c:	cmp	x1, #0x0
   13460:	add	x2, x1, #0x90
   13464:	ldr	x1, [x29, #112]
   13468:	csel	x2, x1, x2, eq  // eq = none
   1346c:	mov	x1, x28
   13470:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   13474:	str	x23, [x6, #80]
   13478:	ldr	w0, [x29, #196]
   1347c:	mov	w2, #0x1                   	// #1
   13480:	str	w0, [x23, #88]
   13484:	ldrb	w0, [x28, #204]
   13488:	strb	w0, [x23, #204]
   1348c:	ldr	x0, [x29, #184]
   13490:	str	x27, [x23, #40]
   13494:	str	w2, [x23, #200]
   13498:	ldr	x4, [x29, #104]
   1349c:	cbz	x0, 13504 <GOMP_taskloop_ull@@GOMP_4.5+0x664>
   134a0:	ldr	x2, [x29, #184]
   134a4:	mov	x0, x4
   134a8:	ldr	x1, [x29, #200]
   134ac:	blr	x2
   134b0:	ldr	x4, [x29, #104]
   134b4:	mov	w2, #0x1                   	// #1
   134b8:	strb	w2, [x23, #206]
   134bc:	str	x24, [x4]
   134c0:	add	x24, x24, x19
   134c4:	str	x24, [x4, #8]
   134c8:	cmp	x22, x26
   134cc:	b.ne	134d4 <GOMP_taskloop_ull@@GOMP_4.5+0x634>  // b.any
   134d0:	sub	x19, x19, x25
   134d4:	ldp	x0, x1, [x29, #208]
   134d8:	add	x26, x26, #0x1
   134dc:	str	x4, [x23, #192]
   134e0:	add	x0, x0, x1
   134e4:	str	x28, [x0, #80]
   134e8:	mov	w0, #0x2                   	// #2
   134ec:	str	w0, [x23, #200]
   134f0:	ldr	x0, [x29, #168]
   134f4:	str	x0, [x23, #184]
   134f8:	ldrb	w0, [x29, #144]
   134fc:	strb	w0, [x23, #205]
   13500:	b	133c8 <GOMP_taskloop_ull@@GOMP_4.5+0x528>
   13504:	ldr	x2, [x29, #160]
   13508:	mov	x0, x4
   1350c:	ldr	x1, [x29, #200]
   13510:	bl	8600 <memcpy@plt>
   13514:	mov	x4, x0
   13518:	b	134bc <GOMP_taskloop_ull@@GOMP_4.5+0x61c>
   1351c:	ldr	x0, [x29, #176]
   13520:	ldr	x21, [x0, x19, lsl #3]
   13524:	add	x19, x19, #0x1
   13528:	mov	x0, x21
   1352c:	bl	fc0c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   13530:	mov	x0, x21
   13534:	bl	8950 <free@plt>
   13538:	b	13404 <GOMP_taskloop_ull@@GOMP_4.5+0x564>
   1353c:	cbz	x27, 13574 <GOMP_taskloop_ull@@GOMP_4.5+0x6d4>
   13540:	ldrb	w0, [x27, #49]
   13544:	cbnz	w0, 133f8 <GOMP_taskloop_ull@@GOMP_4.5+0x558>
   13548:	ldrb	w0, [x27, #50]
   1354c:	cbz	w0, 13560 <GOMP_taskloop_ull@@GOMP_4.5+0x6c0>
   13550:	ldr	x0, [x27]
   13554:	cbz	x0, 13560 <GOMP_taskloop_ull@@GOMP_4.5+0x6c0>
   13558:	ldrb	w0, [x0, #49]
   1355c:	cbnz	w0, 133f8 <GOMP_taskloop_ull@@GOMP_4.5+0x558>
   13560:	ldr	x0, [x27, #56]
   13564:	add	x0, x0, x20
   13568:	str	x0, [x27, #56]
   1356c:	b	13574 <GOMP_taskloop_ull@@GOMP_4.5+0x6d4>
   13570:	cbnz	x27, 13560 <GOMP_taskloop_ull@@GOMP_4.5+0x6c0>
   13574:	add	x23, x28, #0x8
   13578:	add	x24, x27, #0x8
   1357c:	add	x25, x21, #0x508
   13580:	mov	x19, #0x0                   	// #0
   13584:	b	13610 <GOMP_taskloop_ull@@GOMP_4.5+0x770>
   13588:	ldr	x0, [x29, #176]
   1358c:	mov	x1, x23
   13590:	ldr	w3, [x29, #196]
   13594:	mov	w5, #0x0                   	// #0
   13598:	mov	w4, #0x0                   	// #0
   1359c:	ldr	x26, [x0, x19, lsl #3]
   135a0:	mov	w0, #0x1                   	// #1
   135a4:	mov	x2, x26
   135a8:	ldrb	w6, [x26, #207]
   135ac:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   135b0:	cbz	x27, 135d4 <GOMP_taskloop_ull@@GOMP_4.5+0x734>
   135b4:	ldrb	w6, [x26, #207]
   135b8:	mov	x2, x26
   135bc:	ldr	w3, [x29, #196]
   135c0:	mov	x1, x24
   135c4:	mov	w5, #0x0                   	// #0
   135c8:	mov	w4, #0x0                   	// #0
   135cc:	mov	w0, #0x2                   	// #2
   135d0:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   135d4:	ldrb	w6, [x26, #207]
   135d8:	mov	w0, #0x0                   	// #0
   135dc:	ldr	w3, [x29, #196]
   135e0:	mov	x2, x26
   135e4:	mov	x1, x25
   135e8:	mov	w5, #0x0                   	// #0
   135ec:	mov	w4, #0x1                   	// #1
   135f0:	add	x19, x19, #0x1
   135f4:	bl	fe80 <GOMP_single_copy_end@@GOMP_1.0+0x3f8>
   135f8:	ldr	w0, [x21, #1320]
   135fc:	add	w0, w0, #0x1
   13600:	str	w0, [x21, #1320]
   13604:	ldr	w0, [x21, #1324]
   13608:	add	w0, w0, #0x1
   1360c:	str	w0, [x21, #1324]
   13610:	cmp	x20, x19
   13614:	b.ne	13588 <GOMP_taskloop_ull@@GOMP_4.5+0x6e8>  // b.any
   13618:	ldr	w0, [x21, #132]
   1361c:	ldrb	w19, [x28, #204]
   13620:	orr	w0, w0, #0x1
   13624:	ldr	w1, [x21, #1328]
   13628:	eor	w19, w19, #0x1
   1362c:	str	w0, [x21, #132]
   13630:	ldr	w0, [x21]
   13634:	add	w2, w1, w19
   13638:	cmp	w2, w0
   1363c:	b.cs	13670 <GOMP_taskloop_ull@@GOMP_4.5+0x7d0>  // b.hs, b.nlast
   13640:	sub	w0, w0, w1
   13644:	sub	w19, w0, w19
   13648:	cmp	x20, w19, sxtw
   1364c:	csel	w19, w20, w19, cc  // cc = lo, ul, last
   13650:	mov	x0, x22
   13654:	bl	fd70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>
   13658:	cbz	w19, 13668 <GOMP_taskloop_ull@@GOMP_4.5+0x7c8>
   1365c:	mov	w1, w19
   13660:	add	x0, x21, #0x80
   13664:	bl	16138 <omp_get_num_procs@@OMP_1.0+0x4c4>
   13668:	ldr	x0, [x29, #152]
   1366c:	b	1318c <GOMP_taskloop_ull@@GOMP_4.5+0x2ec>
   13670:	mov	w19, #0x0                   	// #0
   13674:	b	13650 <GOMP_taskloop_ull@@GOMP_4.5+0x7b0>

0000000000013678 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>:
   13678:	stp	x29, x30, [sp, #-32]!
   1367c:	mov	x29, sp
   13680:	str	x19, [sp, #16]
   13684:	mov	x19, x0
   13688:	ldr	x0, [x0, #40]
   1368c:	bl	8950 <free@plt>
   13690:	ldr	x0, [x19, #16]
   13694:	bl	ae94 <fprintf@plt+0x2334>
   13698:	ldr	x19, [x19, #32]
   1369c:	cbz	x19, 136a8 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x30>
   136a0:	ldr	x0, [x19, #40]
   136a4:	cbz	x0, 13690 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x18>
   136a8:	ldr	x19, [sp, #16]
   136ac:	ldp	x29, x30, [sp], #32
   136b0:	ret

00000000000136b4 <GOMP_task_reduction_remap@@GOMP_5.0>:
   136b4:	mov	x13, x0
   136b8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   136bc:	ldr	x0, [x0, #4016]
   136c0:	mov	x14, x1
   136c4:	mrs	x1, tpidr_el0
   136c8:	add	x0, x1, x0
   136cc:	stp	x29, x30, [sp, #-48]!
   136d0:	mov	x12, x2
   136d4:	mov	x29, sp
   136d8:	ldr	x1, [x0, #80]
   136dc:	add	x18, x2, x13, lsl #3
   136e0:	mov	x11, #0x0                   	// #0
   136e4:	stp	x19, x20, [sp, #16]
   136e8:	ldr	w19, [x0, #40]
   136ec:	ldr	x1, [x1, #40]
   136f0:	ldr	x15, [x1, #40]
   136f4:	ldr	x20, [x15, #40]
   136f8:	str	x21, [sp, #32]
   136fc:	mov	x21, #0x18                  	// #24
   13700:	cmp	x11, x13
   13704:	b.ne	13718 <GOMP_task_reduction_remap@@GOMP_5.0+0x64>  // b.any
   13708:	ldp	x19, x20, [sp, #16]
   1370c:	ldr	x21, [sp, #32]
   13710:	ldp	x29, x30, [sp], #48
   13714:	ret
   13718:	add	x1, x12, x11, lsl #3
   1371c:	mov	x0, x20
   13720:	bl	100c0 <GOMP_single_copy_end@@GOMP_1.0+0x638>
   13724:	mov	x3, x0
   13728:	cbz	x0, 1375c <GOMP_task_reduction_remap@@GOMP_5.0+0xa8>
   1372c:	ldp	x1, x2, [x3, #8]
   13730:	cmp	x11, x14
   13734:	ldr	x0, [x2, #16]
   13738:	add	x1, x0, x1
   1373c:	ldr	x0, [x2, #8]
   13740:	madd	x0, x19, x0, x1
   13744:	str	x0, [x12, x11, lsl #3]
   13748:	b.cs	13754 <GOMP_task_reduction_remap@@GOMP_5.0+0xa0>  // b.hs, b.nlast
   1374c:	ldr	x0, [x3]
   13750:	str	x0, [x18, x11, lsl #3]
   13754:	add	x11, x11, #0x1
   13758:	b	13700 <GOMP_task_reduction_remap@@GOMP_5.0+0x4c>
   1375c:	ldr	x1, [x12, x11, lsl #3]
   13760:	mov	x4, x15
   13764:	ldr	x0, [x4, #16]
   13768:	cmp	x1, x0
   1376c:	b.cc	1377c <GOMP_task_reduction_remap@@GOMP_5.0+0xc8>  // b.lo, b.ul, b.last
   13770:	ldr	x2, [x4, #48]
   13774:	cmp	x1, x2
   13778:	b.cc	137a4 <GOMP_task_reduction_remap@@GOMP_5.0+0xf0>  // b.lo, b.ul, b.last
   1377c:	ldr	x4, [x4, #32]
   13780:	cbnz	x4, 13764 <GOMP_task_reduction_remap@@GOMP_5.0+0xb0>
   13784:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   13788:	add	x0, x0, #0x5a4
   1378c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   13790:	b.ne	1379c <GOMP_task_reduction_remap@@GOMP_5.0+0xe8>  // b.any
   13794:	ldr	x0, [x6, #56]
   13798:	b	13750 <GOMP_task_reduction_remap@@GOMP_5.0+0x9c>
   1379c:	sub	x3, x5, #0x1
   137a0:	b	137f0 <GOMP_task_reduction_remap@@GOMP_5.0+0x13c>
   137a4:	ldr	x3, [x4, #8]
   137a8:	sub	x2, x1, x0
   137ac:	cmp	x11, x14
   137b0:	udiv	x1, x2, x3
   137b4:	msub	x2, x1, x3, x2
   137b8:	madd	x3, x19, x3, x2
   137bc:	add	x1, x3, x0
   137c0:	str	x1, [x12, x11, lsl #3]
   137c4:	b.cs	13754 <GOMP_task_reduction_remap@@GOMP_5.0+0xa0>  // b.hs, b.nlast
   137c8:	ldr	x3, [x4]
   137cc:	mov	x0, #0x0                   	// #0
   137d0:	sub	x3, x3, #0x1
   137d4:	add	x5, x0, x3
   137d8:	lsr	x5, x5, #1
   137dc:	madd	x6, x5, x21, x4
   137e0:	ldr	x7, [x6, #64]
   137e4:	cmp	x7, x2
   137e8:	b.cs	13790 <GOMP_task_reduction_remap@@GOMP_5.0+0xdc>  // b.hs, b.nlast
   137ec:	add	x0, x5, #0x1
   137f0:	cmp	x3, x0
   137f4:	b.cs	137d4 <GOMP_task_reduction_remap@@GOMP_5.0+0x120>  // b.hs, b.nlast
   137f8:	b	13784 <GOMP_task_reduction_remap@@GOMP_5.0+0xd0>
   137fc:	stp	x29, x30, [sp, #-96]!
   13800:	mov	x29, sp
   13804:	stp	x21, x22, [sp, #32]
   13808:	mov	x21, x0
   1380c:	mov	w22, w1
   13810:	mov	x0, #0x0                   	// #0
   13814:	stp	x19, x20, [sp, #16]
   13818:	mov	x19, x21
   1381c:	stp	x23, x24, [sp, #48]
   13820:	str	x25, [sp, #64]
   13824:	bl	fc1c <GOMP_single_copy_end@@GOMP_1.0+0x194>
   13828:	mov	x23, x0
   1382c:	mov	x25, #0x0                   	// #0
   13830:	ldp	x20, x0, [x19, #8]
   13834:	mul	x20, x22, x20
   13838:	mov	x1, x20
   1383c:	bl	ae54 <fprintf@plt+0x22f4>
   13840:	mov	x2, x20
   13844:	mov	x24, x0
   13848:	mov	w1, #0x0                   	// #0
   1384c:	bl	8800 <memset@plt>
   13850:	add	x20, x20, x24
   13854:	str	x24, [x19, #16]
   13858:	stp	xzr, x20, [x19, #40]
   1385c:	ldr	x0, [x19]
   13860:	ldr	x19, [x19, #32]
   13864:	add	x25, x25, x0
   13868:	cbnz	x19, 13830 <GOMP_task_reduction_remap@@GOMP_5.0+0x17c>
   1386c:	mov	x0, x25
   13870:	mov	x19, x21
   13874:	add	x25, sp, #0x58
   13878:	bl	fc94 <GOMP_single_copy_end@@GOMP_1.0+0x20c>
   1387c:	str	x0, [sp, #88]
   13880:	add	x20, x19, #0x38
   13884:	mov	x24, #0x0                   	// #0
   13888:	ldr	x0, [x19]
   1388c:	cmp	x24, x0
   13890:	b.cc	138a4 <GOMP_task_reduction_remap@@GOMP_5.0+0x1f0>  // b.lo, b.ul, b.last
   13894:	ldr	x0, [x19, #32]
   13898:	cbz	x0, 138cc <GOMP_task_reduction_remap@@GOMP_5.0+0x218>
   1389c:	mov	x19, x0
   138a0:	b	13880 <GOMP_task_reduction_remap@@GOMP_5.0+0x1cc>
   138a4:	str	x19, [x20, #16]
   138a8:	mov	x22, x20
   138ac:	mov	x0, x25
   138b0:	mov	w2, #0x1                   	// #1
   138b4:	add	x24, x24, #0x1
   138b8:	mov	x1, x22
   138bc:	add	x20, x20, #0x18
   138c0:	bl	101e0 <GOMP_single_copy_end@@GOMP_1.0+0x758>
   138c4:	str	x22, [x0]
   138c8:	b	13888 <GOMP_task_reduction_remap@@GOMP_5.0+0x1d4>
   138cc:	ldr	x0, [sp, #88]
   138d0:	ldr	x25, [sp, #64]
   138d4:	str	x0, [x19, #40]
   138d8:	ldp	x19, x20, [sp, #16]
   138dc:	str	x21, [x23, #40]
   138e0:	mov	x0, x23
   138e4:	ldp	x21, x22, [sp, #32]
   138e8:	ldp	x23, x24, [sp, #48]
   138ec:	ldp	x29, x30, [sp], #96
   138f0:	ret
   138f4:	stp	x29, x30, [sp, #-112]!
   138f8:	mov	x29, sp
   138fc:	stp	x23, x24, [sp, #48]
   13900:	mov	x23, x0
   13904:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13908:	ldr	x0, [x0, #4016]
   1390c:	stp	x21, x22, [sp, #32]
   13910:	mov	x21, x1
   13914:	mrs	x1, tpidr_el0
   13918:	add	x0, x1, x0
   1391c:	stp	x19, x20, [sp, #16]
   13920:	mov	x20, x23
   13924:	stp	x25, x26, [sp, #64]
   13928:	mov	x25, #0x0                   	// #0
   1392c:	ldr	x24, [x0, #80]
   13930:	ldr	x0, [x0, #16]
   13934:	ldr	x1, [x24, #40]
   13938:	ldr	x19, [x1, #40]
   1393c:	str	x27, [sp, #80]
   13940:	ldr	w27, [x0]
   13944:	cbz	x21, 13a00 <GOMP_task_reduction_remap@@GOMP_5.0+0x34c>
   13948:	ldr	x0, [x21, #16]
   1394c:	str	x0, [x20, #16]
   13950:	ldr	x0, [x21, #48]
   13954:	str	x0, [x20, #48]
   13958:	ldr	x21, [x21, #32]
   1395c:	str	xzr, [x20, #40]
   13960:	ldr	x0, [x20]
   13964:	add	x25, x25, x0
   13968:	ldr	x0, [x20, #32]
   1396c:	cbnz	x0, 13a30 <GOMP_task_reduction_remap@@GOMP_5.0+0x37c>
   13970:	str	x19, [x20, #32]
   13974:	mov	x21, x19
   13978:	cbnz	x19, 13a38 <GOMP_task_reduction_remap@@GOMP_5.0+0x384>
   1397c:	mov	x0, x25
   13980:	bl	fc94 <GOMP_single_copy_end@@GOMP_1.0+0x20c>
   13984:	str	x0, [sp, #104]
   13988:	mov	x20, x0
   1398c:	cbz	x19, 139d0 <GOMP_task_reduction_remap@@GOMP_5.0+0x31c>
   13990:	ldp	x0, x1, [x19, #8]
   13994:	ldr	x22, [x19], #32
   13998:	add	x22, x19, x22, lsl #3
   1399c:	sub	x0, x0, x1
   139a0:	str	x0, [x20, #8]
   139a4:	ldr	x25, [x19]
   139a8:	cmp	x25, #0x1
   139ac:	b.ls	139c4 <GOMP_task_reduction_remap@@GOMP_5.0+0x310>  // b.plast
   139b0:	ldr	x1, [x25]
   139b4:	mov	x0, x20
   139b8:	eor	x1, x1, x1, lsr #32
   139bc:	bl	10158 <GOMP_single_copy_end@@GOMP_1.0+0x6d0>
   139c0:	str	x25, [x0]
   139c4:	add	x19, x19, #0x8
   139c8:	cmp	x22, x19
   139cc:	b.hi	139a4 <GOMP_task_reduction_remap@@GOMP_5.0+0x2f0>  // b.pmore
   139d0:	mov	x19, x23
   139d4:	add	x26, sp, #0x68
   139d8:	add	x20, x19, #0x38
   139dc:	mov	x25, #0x0                   	// #0
   139e0:	ldr	x0, [x19]
   139e4:	cmp	x25, x0
   139e8:	b.cc	13a58 <GOMP_task_reduction_remap@@GOMP_5.0+0x3a4>  // b.lo, b.ul, b.last
   139ec:	ldr	x0, [x19, #32]
   139f0:	cmp	x21, x0
   139f4:	b.eq	13a80 <GOMP_task_reduction_remap@@GOMP_5.0+0x3cc>  // b.none
   139f8:	mov	x19, x0
   139fc:	b	139d8 <GOMP_task_reduction_remap@@GOMP_5.0+0x324>
   13a00:	ldp	x22, x0, [x20, #8]
   13a04:	mul	x22, x27, x22
   13a08:	mov	x1, x22
   13a0c:	bl	ae54 <fprintf@plt+0x22f4>
   13a10:	mov	x26, x0
   13a14:	mov	x2, x22
   13a18:	mov	w1, #0x0                   	// #0
   13a1c:	add	x22, x22, x26
   13a20:	bl	8800 <memset@plt>
   13a24:	str	x26, [x20, #16]
   13a28:	str	x22, [x20, #48]
   13a2c:	b	1395c <GOMP_task_reduction_remap@@GOMP_5.0+0x2a8>
   13a30:	mov	x20, x0
   13a34:	b	13944 <GOMP_task_reduction_remap@@GOMP_5.0+0x290>
   13a38:	ldr	x19, [x19, #40]
   13a3c:	cbz	x19, 13a50 <GOMP_task_reduction_remap@@GOMP_5.0+0x39c>
   13a40:	ldp	x0, x1, [x19, #8]
   13a44:	sub	x0, x0, x1
   13a48:	add	x25, x25, x0
   13a4c:	b	1397c <GOMP_task_reduction_remap@@GOMP_5.0+0x2c8>
   13a50:	mov	x19, #0x0                   	// #0
   13a54:	b	1397c <GOMP_task_reduction_remap@@GOMP_5.0+0x2c8>
   13a58:	str	x19, [x20, #16]
   13a5c:	mov	x22, x20
   13a60:	mov	x0, x26
   13a64:	mov	w2, #0x1                   	// #1
   13a68:	add	x25, x25, #0x1
   13a6c:	mov	x1, x22
   13a70:	add	x20, x20, #0x18
   13a74:	bl	101e0 <GOMP_single_copy_end@@GOMP_1.0+0x758>
   13a78:	str	x22, [x0]
   13a7c:	b	139e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x32c>
   13a80:	ldr	x0, [sp, #104]
   13a84:	ldp	x21, x22, [sp, #32]
   13a88:	ldp	x25, x26, [sp, #64]
   13a8c:	ldr	x27, [sp, #80]
   13a90:	str	x0, [x19, #40]
   13a94:	ldr	x0, [x24, #40]
   13a98:	ldp	x19, x20, [sp, #16]
   13a9c:	str	x23, [x0, #40]
   13aa0:	ldp	x23, x24, [sp, #48]
   13aa4:	ldp	x29, x30, [sp], #112
   13aa8:	ret
   13aac:	stp	x29, x30, [sp, #-32]!
   13ab0:	mov	x29, sp
   13ab4:	stp	x19, x20, [sp, #16]
   13ab8:	mrs	x19, tpidr_el0
   13abc:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13ac0:	ldr	x20, [x20, #4016]
   13ac4:	add	x0, x19, x20
   13ac8:	ldr	x0, [x0, #16]
   13acc:	cbnz	x0, 13ad4 <GOMP_task_reduction_remap@@GOMP_5.0+0x420>
   13ad0:	bl	10e28 <GOMP_single_copy_end@@GOMP_1.0+0x13a0>
   13ad4:	add	x19, x19, x20
   13ad8:	ldr	x19, [x19, #80]
   13adc:	ldr	x0, [x19, #40]
   13ae0:	bl	fc1c <GOMP_single_copy_end@@GOMP_1.0+0x194>
   13ae4:	str	x0, [x19, #40]
   13ae8:	mov	w1, #0x1                   	// #1
   13aec:	strb	w1, [x0, #50]
   13af0:	ldp	x19, x20, [sp, #16]
   13af4:	ldp	x29, x30, [sp], #32
   13af8:	ret

0000000000013afc <GOMP_workshare_task_reduction_unregister@@GOMP_5.0>:
   13afc:	stp	x29, x30, [sp, #-48]!
   13b00:	mov	x29, sp
   13b04:	stp	x19, x20, [sp, #16]
   13b08:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13b0c:	ldr	x19, [x19, #4016]
   13b10:	stp	x21, x22, [sp, #32]
   13b14:	and	w22, w0, #0xff
   13b18:	mrs	x0, tpidr_el0
   13b1c:	add	x19, x0, x19
   13b20:	ldr	x0, [x19, #80]
   13b24:	ldr	x21, [x19, #16]
   13b28:	ldr	x0, [x0, #40]
   13b2c:	ldr	x20, [x0, #40]
   13b30:	bl	122b4 <GOMP_taskgroup_end@@GOMP_4.0>
   13b34:	ldr	w0, [x19, #40]
   13b38:	cbnz	w0, 13b5c <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x60>
   13b3c:	mov	x0, x20
   13b40:	bl	13678 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>
   13b44:	cbnz	w22, 13b68 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x6c>
   13b48:	add	x0, x21, #0x80
   13b4c:	ldp	x19, x20, [sp, #16]
   13b50:	ldp	x21, x22, [sp, #32]
   13b54:	ldp	x29, x30, [sp], #48
   13b58:	b	16208 <omp_get_num_procs@@OMP_1.0+0x594>
   13b5c:	ldr	x0, [x20, #40]
   13b60:	bl	8950 <free@plt>
   13b64:	b	13b44 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x48>
   13b68:	ldp	x19, x20, [sp, #16]
   13b6c:	ldp	x21, x22, [sp, #32]
   13b70:	ldp	x29, x30, [sp], #48
   13b74:	ret

0000000000013b78 <omp_in_final@@OMP_3.1>:
   13b78:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13b7c:	ldr	x0, [x0, #4016]
   13b80:	mrs	x1, tpidr_el0
   13b84:	add	x0, x1, x0
   13b88:	ldr	x0, [x0, #80]
   13b8c:	cbz	x0, 13b98 <omp_in_final@@OMP_3.1+0x20>
   13b90:	ldrb	w0, [x0, #205]
   13b94:	ret
   13b98:	mov	w0, #0x0                   	// #0
   13b9c:	b	13b94 <omp_in_final@@OMP_3.1+0x1c>
   13ba0:	stp	x29, x30, [sp, #-16]!
   13ba4:	add	x0, x0, #0x40
   13ba8:	mov	x29, sp
   13bac:	bl	1610c <omp_get_num_procs@@OMP_1.0+0x498>
   13bb0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13bb4:	ldr	x0, [x0, #3992]
   13bb8:	mrs	x1, tpidr_el0
   13bbc:	add	x0, x1, x0
   13bc0:	str	xzr, [x0, #80]
   13bc4:	str	xzr, [x0, #96]
   13bc8:	bl	8af0 <pthread_self@plt>
   13bcc:	bl	87f0 <pthread_detach@plt>
   13bd0:	mov	x0, #0x0                   	// #0
   13bd4:	bl	88c0 <pthread_exit@plt>
   13bd8:	stp	x29, x30, [sp, #-16]!
   13bdc:	add	x0, x0, #0x40
   13be0:	mov	x29, sp
   13be4:	bl	1610c <omp_get_num_procs@@OMP_1.0+0x498>
   13be8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13bec:	ldr	x0, [x0, #3992]
   13bf0:	mrs	x1, tpidr_el0
   13bf4:	add	x0, x1, x0
   13bf8:	str	xzr, [x0, #80]
   13bfc:	str	xzr, [x0, #96]
   13c00:	mov	x0, #0x0                   	// #0
   13c04:	bl	88c0 <pthread_exit@plt>
   13c08:	stp	x29, x30, [sp, #-80]!
   13c0c:	mov	x29, sp
   13c10:	stp	x23, x24, [sp, #48]
   13c14:	adrp	x23, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13c18:	ldr	x23, [x23, #3992]
   13c1c:	stp	x21, x22, [sp, #32]
   13c20:	mrs	x21, tpidr_el0
   13c24:	stp	x19, x20, [sp, #16]
   13c28:	add	x19, x21, x23
   13c2c:	add	x4, x19, #0x58
   13c30:	stp	x25, x26, [sp, #64]
   13c34:	ldp	x1, x2, [x0, #16]
   13c38:	ldp	x22, x24, [x0]
   13c3c:	ldp	x25, x20, [x0, #80]
   13c40:	stp	x1, x2, [x19, #16]
   13c44:	ldp	x2, x3, [x0, #32]
   13c48:	stp	x2, x3, [x19, #32]
   13c4c:	ldp	x2, x3, [x0, #48]
   13c50:	stp	x2, x3, [x19, #48]
   13c54:	ldp	x2, x3, [x0, #64]
   13c58:	stp	x2, x3, [x19, #64]
   13c5c:	ldr	w2, [x0, #96]
   13c60:	ldr	x3, [x1, #80]
   13c64:	str	w2, [x19, #92]
   13c68:	ldr	w2, [x19, #40]
   13c6c:	str	x25, [x19, #80]
   13c70:	str	wzr, [x19, #88]
   13c74:	lsl	x2, x2, #3
   13c78:	str	x20, [x19, #96]
   13c7c:	str	x4, [x3, x2]
   13c80:	ldrb	w0, [x0, #100]
   13c84:	cbz	w0, 13ce8 <omp_in_final@@OMP_3.1+0x170>
   13c88:	add	x19, x1, #0x80
   13c8c:	mov	x0, x19
   13c90:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   13c94:	mov	x0, x24
   13c98:	blr	x22
   13c9c:	mov	x0, x19
   13ca0:	bl	16228 <omp_get_num_procs@@OMP_1.0+0x5b4>
   13ca4:	ldr	x0, [x25, #56]
   13ca8:	cbz	x0, 13cb0 <omp_in_final@@OMP_3.1+0x138>
   13cac:	bl	8950 <free@plt>
   13cb0:	mov	x0, x19
   13cb4:	bl	1610c <omp_get_num_procs@@OMP_1.0+0x498>
   13cb8:	add	x21, x21, x23
   13cbc:	bl	8af0 <pthread_self@plt>
   13cc0:	bl	87f0 <pthread_detach@plt>
   13cc4:	ldp	x19, x20, [sp, #16]
   13cc8:	mov	x0, #0x0                   	// #0
   13ccc:	ldp	x23, x24, [sp, #48]
   13cd0:	ldp	x25, x26, [sp, #64]
   13cd4:	str	xzr, [x21, #80]
   13cd8:	str	xzr, [x21, #96]
   13cdc:	ldp	x21, x22, [sp, #32]
   13ce0:	ldp	x29, x30, [sp], #80
   13ce4:	ret
   13ce8:	ldr	x0, [x20], #64
   13cec:	str	x19, [x0, x2]
   13cf0:	mov	x0, x20
   13cf4:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   13cf8:	ldr	x26, [x19, #16]
   13cfc:	mov	x0, x24
   13d00:	ldr	x25, [x19, #80]
   13d04:	blr	x22
   13d08:	add	x0, x26, #0x80
   13d0c:	bl	16228 <omp_get_num_procs@@OMP_1.0+0x5b4>
   13d10:	ldr	x0, [x25, #56]
   13d14:	cbz	x0, 13d1c <omp_in_final@@OMP_3.1+0x1a4>
   13d18:	bl	8950 <free@plt>
   13d1c:	mov	x0, x20
   13d20:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   13d24:	ldp	x22, x24, [x19]
   13d28:	str	xzr, [x19]
   13d2c:	cbnz	x22, 13cf8 <omp_in_final@@OMP_3.1+0x180>
   13d30:	b	13cb8 <omp_in_final@@OMP_3.1+0x140>
   13d34:	stp	x29, x30, [sp, #-48]!
   13d38:	mrs	x1, tpidr_el0
   13d3c:	mov	x29, sp
   13d40:	stp	x19, x20, [sp, #16]
   13d44:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13d48:	ldr	x19, [x19, #3992]
   13d4c:	stp	x21, x22, [sp, #32]
   13d50:	mov	w22, w0
   13d54:	add	x19, x1, x19
   13d58:	mov	x20, x22
   13d5c:	ldr	x0, [x19, #16]
   13d60:	cbnz	x0, 13e54 <omp_in_final@@OMP_3.1+0x2dc>
   13d64:	ldr	x21, [x19, #96]
   13d68:	cbnz	x21, 13d94 <omp_in_final@@OMP_3.1+0x21c>
   13d6c:	mov	x0, #0xc0                  	// #192
   13d70:	bl	adb0 <fprintf@plt+0x2250>
   13d74:	mov	x21, x0
   13d78:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13d7c:	mov	x1, x19
   13d80:	str	x21, [x19, #96]
   13d84:	ldr	w0, [x0, #1704]
   13d88:	stp	xzr, xzr, [x21]
   13d8c:	stp	xzr, x22, [x21, #16]
   13d90:	bl	8a00 <pthread_setspecific@plt>
   13d94:	ldr	x19, [x21, #16]
   13d98:	cbz	x19, 13e54 <omp_in_final@@OMP_3.1+0x2dc>
   13d9c:	ldr	w0, [x19]
   13da0:	cmp	w20, w0
   13da4:	b.ne	13e54 <omp_in_final@@OMP_3.1+0x2dc>  // b.any
   13da8:	str	xzr, [x21, #16]
   13dac:	mov	w0, #0x8                   	// #8
   13db0:	str	w0, [x19, #4]
   13db4:	add	x0, x19, #0x100
   13db8:	str	x0, [x19, #88]
   13dbc:	str	xzr, [x19, #112]
   13dc0:	mov	w2, w20
   13dc4:	mov	x1, #0x0                   	// #0
   13dc8:	bl	14ff0 <omp_in_final@@OMP_3.1+0x1478>
   13dcc:	str	wzr, [x19, #72]
   13dd0:	add	x0, x19, #0x180
   13dd4:	stp	x0, xzr, [x19, #96]
   13dd8:	add	x0, x19, #0x200
   13ddc:	str	x0, [x19, #464]
   13de0:	add	x0, x19, #0x280
   13de4:	str	x0, [x19, #592]
   13de8:	add	x0, x19, #0x300
   13dec:	str	x0, [x19, #720]
   13df0:	add	x0, x19, #0x380
   13df4:	str	x0, [x19, #848]
   13df8:	add	x0, x19, #0x400
   13dfc:	str	x0, [x19, #976]
   13e00:	add	x0, x19, #0x480
   13e04:	mov	x2, #0x540                 	// #1344
   13e08:	str	x0, [x19, #1104]
   13e0c:	mov	w0, #0xd0                  	// #208
   13e10:	add	x1, x19, #0x518
   13e14:	str	xzr, [x19, #312]
   13e18:	umaddl	x20, w20, w0, x2
   13e1c:	str	xzr, [x19, #1232]
   13e20:	add	x0, x19, x20
   13e24:	str	x0, [x19, #80]
   13e28:	add	x0, x19, #0x48
   13e2c:	str	x0, [x19, x20]
   13e30:	mov	x0, x19
   13e34:	str	xzr, [x19, #1288]
   13e38:	stp	xzr, xzr, [x1]
   13e3c:	stp	xzr, xzr, [x1, #16]
   13e40:	str	wzr, [x19, #1336]
   13e44:	ldp	x19, x20, [sp, #16]
   13e48:	ldp	x21, x22, [sp, #32]
   13e4c:	ldp	x29, x30, [sp], #48
   13e50:	ret
   13e54:	mov	w1, #0xd8                  	// #216
   13e58:	mov	x0, #0x540                 	// #1344
   13e5c:	umaddl	x0, w20, w1, x0
   13e60:	bl	adb0 <fprintf@plt+0x2250>
   13e64:	mov	x19, x0
   13e68:	str	w20, [x0]
   13e6c:	stp	w20, wzr, [x0, #128]
   13e70:	stp	w20, w20, [x0, #192]
   13e74:	str	wzr, [x0, #1280]
   13e78:	b	13dac <omp_in_final@@OMP_3.1+0x234>
   13e7c:	stp	x29, x30, [sp, #-320]!
   13e80:	mov	x29, sp
   13e84:	stp	x25, x26, [sp, #64]
   13e88:	mrs	x25, tpidr_el0
   13e8c:	adrp	x26, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   13e90:	ldr	x26, [x26, #3992]
   13e94:	stp	x27, x28, [sp, #80]
   13e98:	mov	w27, w3
   13e9c:	add	x28, x25, x26
   13ea0:	stp	x19, x20, [sp, #16]
   13ea4:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13ea8:	stp	x21, x22, [sp, #32]
   13eac:	mov	w21, w2
   13eb0:	mov	x22, x4
   13eb4:	stp	x23, x24, [sp, #48]
   13eb8:	adrp	x24, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13ebc:	add	x24, x24, #0x2c0
   13ec0:	stp	x1, x0, [x29, #136]
   13ec4:	ldr	w0, [x28, #44]
   13ec8:	str	w0, [x29, #188]
   13ecc:	mov	w0, w0
   13ed0:	str	x5, [x29, #168]
   13ed4:	cmp	w0, #0x0
   13ed8:	cset	w0, ne  // ne = any
   13edc:	str	w0, [x29, #184]
   13ee0:	ldr	x0, [x28, #80]
   13ee4:	str	x0, [x29, #192]
   13ee8:	ldr	x23, [x28, #96]
   13eec:	add	x0, x0, #0x90
   13ef0:	ldr	x1, [x29, #192]
   13ef4:	cmp	x1, #0x0
   13ef8:	csel	x0, x24, x0, eq  // eq = none
   13efc:	str	x0, [x29, #200]
   13f00:	ldr	x0, [x19, #1576]
   13f04:	cbz	x0, 13f38 <omp_in_final@@OMP_3.1+0x3c0>
   13f08:	ldr	w0, [x28, #92]
   13f0c:	cbnz	w0, 13f38 <omp_in_final@@OMP_3.1+0x3c0>
   13f10:	bl	17580 <omp_pause_resource_all_@@OMP_5.0+0x8f4>
   13f14:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13f18:	ldrb	w0, [x0, #1528]
   13f1c:	cbz	w0, 13f38 <omp_in_final@@OMP_3.1+0x3c0>
   13f20:	cmp	w21, #0x1
   13f24:	b.ne	13f38 <omp_in_final@@OMP_3.1+0x3c0>  // b.any
   13f28:	bl	8af0 <pthread_self@plt>
   13f2c:	ldr	w2, [x28, #92]
   13f30:	add	x1, x28, #0x10
   13f34:	bl	8b70 <fprintf@plt+0x10>
   13f38:	add	x2, x25, x26
   13f3c:	cmp	w21, #0x1
   13f40:	ldp	x0, x1, [x2, #16]
   13f44:	stp	x0, x1, [x22, #8]
   13f48:	ldp	x0, x1, [x2, #32]
   13f4c:	stp	x0, x1, [x22, #24]
   13f50:	ldp	x0, x1, [x2, #48]
   13f54:	stp	x0, x1, [x22, #40]
   13f58:	ldp	x0, x1, [x2, #64]
   13f5c:	stp	x0, x1, [x22, #56]
   13f60:	ldr	w1, [x2, #44]
   13f64:	str	x22, [x2, #16]
   13f68:	add	w1, w1, #0x1
   13f6c:	stp	wzr, w1, [x2, #40]
   13f70:	b.ls	13f80 <omp_in_final@@OMP_3.1+0x408>  // b.plast
   13f74:	ldr	w0, [x2, #48]
   13f78:	add	w0, w0, #0x1
   13f7c:	str	w0, [x2, #48]
   13f80:	add	x2, x25, x26
   13f84:	add	x0, x22, #0x100
   13f88:	str	x0, [x29, #152]
   13f8c:	stp	x0, xzr, [x2, #24]
   13f90:	add	x0, x22, #0x540
   13f94:	stp	xzr, xzr, [x2, #64]
   13f98:	str	x0, [x2, #80]
   13f9c:	ldr	x2, [x29, #200]
   13fa0:	ldr	x2, [x2]
   13fa4:	str	x2, [x29, #176]
   13fa8:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13fac:	ldr	x2, [x2, #1512]
   13fb0:	cbz	x2, 13fd0 <omp_in_final@@OMP_3.1+0x458>
   13fb4:	adrp	x5, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13fb8:	mov	w3, w1
   13fbc:	ldr	x5, [x5, #1632]
   13fc0:	cmp	x5, w1, uxtw
   13fc4:	b.ls	13fd0 <omp_in_final@@OMP_3.1+0x458>  // b.plast
   13fc8:	ldr	x2, [x2, x3, lsl #3]
   13fcc:	str	x2, [x29, #176]
   13fd0:	ldr	x2, [x29, #200]
   13fd4:	ldrb	w2, [x2, #26]
   13fd8:	str	w2, [x29, #232]
   13fdc:	cbz	w2, 13ff0 <omp_in_final@@OMP_3.1+0x478>
   13fe0:	ands	w2, w27, #0x7
   13fe4:	b.eq	13ff0 <omp_in_final@@OMP_3.1+0x478>  // b.none
   13fe8:	and	w2, w2, #0xff
   13fec:	str	w2, [x29, #232]
   13ff0:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   13ff4:	ldr	w3, [x29, #232]
   13ff8:	str	w3, [x29, #216]
   13ffc:	ldr	x2, [x2, #1552]
   14000:	cbz	x2, 14020 <omp_in_final@@OMP_3.1+0x4a8>
   14004:	adrp	x5, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14008:	mov	w3, w1
   1400c:	ldr	x5, [x5, #1536]
   14010:	cmp	x5, w1, uxtw
   14014:	b.ls	142ac <omp_in_final@@OMP_3.1+0x734>  // b.plast
   14018:	ldrb	w1, [x2, x3]
   1401c:	str	w1, [x29, #216]
   14020:	ldp	x1, x2, [x29, #192]
   14024:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   14028:	add	x0, x25, x26
   1402c:	cmp	w21, #0x1
   14030:	ldr	x2, [x29, #168]
   14034:	ldr	x1, [x0, #80]
   14038:	str	x2, [x1, #40]
   1403c:	ldr	x1, [x29, #176]
   14040:	str	x1, [x22, #1488]
   14044:	ldrb	w1, [x29, #216]
   14048:	strb	w1, [x22, #1514]
   1404c:	b.eq	14a68 <omp_in_final@@OMP_3.1+0xef0>  // b.none
   14050:	ldr	x1, [x19, #1576]
   14054:	cbz	x1, 1432c <omp_in_final@@OMP_3.1+0x7b4>
   14058:	ldr	w5, [x0, #92]
   1405c:	ldr	w1, [x29, #232]
   14060:	sub	w27, w5, #0x1
   14064:	cmp	w1, #0x3
   14068:	b.eq	1407c <omp_in_final@@OMP_3.1+0x504>  // b.none
   1406c:	cmp	w1, #0x4
   14070:	b.eq	142b4 <omp_in_final@@OMP_3.1+0x73c>  // b.none
   14074:	cmp	w1, #0x1
   14078:	b.ne	14344 <omp_in_final@@OMP_3.1+0x7cc>  // b.any
   1407c:	add	x0, x25, x26
   14080:	ldr	w19, [x0, #56]
   14084:	cmp	w19, w21
   14088:	b.cs	14354 <omp_in_final@@OMP_3.1+0x7dc>  // b.hs, b.nlast
   1408c:	udiv	w24, w21, w19
   14090:	msub	w19, w24, w19, w21
   14094:	mov	w28, #0x1                   	// #1
   14098:	ldr	w0, [x29, #188]
   1409c:	cbnz	w0, 147f8 <omp_in_final@@OMP_3.1+0xc80>
   140a0:	ldr	w0, [x23, #12]
   140a4:	str	w0, [x29, #224]
   140a8:	mov	w0, w0
   140ac:	cmp	w21, w0
   140b0:	b.ls	1438c <omp_in_final@@OMP_3.1+0x814>  // b.plast
   140b4:	cbnz	w0, 14364 <omp_in_final@@OMP_3.1+0x7ec>
   140b8:	mov	w14, #0x0                   	// #0
   140bc:	stp	w21, wzr, [x23, #64]
   140c0:	stp	w21, w21, [x23, #128]
   140c4:	ldr	w0, [x23, #8]
   140c8:	str	w21, [x23, #12]
   140cc:	cmp	w0, w21
   140d0:	b.hi	140fc <omp_in_final@@OMP_3.1+0x584>  // b.pmore
   140d4:	ldr	x0, [x23]
   140d8:	add	w1, w21, #0x1
   140dc:	str	w1, [x23, #8]
   140e0:	add	x25, x25, x26
   140e4:	ubfiz	x1, x1, #3, #32
   140e8:	str	w14, [x29, #220]
   140ec:	bl	ae20 <fprintf@plt+0x22c0>
   140f0:	str	x0, [x23]
   140f4:	ldr	w14, [x29, #220]
   140f8:	str	x25, [x0]
   140fc:	ldr	x0, [x29, #224]
   14100:	mrs	x25, tpidr_el0
   14104:	mov	x11, #0x0                   	// #0
   14108:	mov	w26, #0x1                   	// #1
   1410c:	str	wzr, [x29, #208]
   14110:	ubfiz	x0, x0, #3, #32
   14114:	str	x0, [x29, #128]
   14118:	ldr	w0, [x29, #224]
   1411c:	str	wzr, [x29, #220]
   14120:	sub	w0, w21, w0
   14124:	lsl	x0, x0, #3
   14128:	str	x0, [x29, #120]
   1412c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14130:	ldr	x0, [x0, #3992]
   14134:	add	x0, x25, x0
   14138:	str	x0, [x29, #160]
   1413c:	cmp	w26, w14
   14140:	b.cc	14394 <omp_in_final@@OMP_3.1+0x81c>  // b.lo, b.ul, b.last
   14144:	cbz	x11, 14180 <omp_in_final@@OMP_3.1+0x608>
   14148:	ldr	w0, [x29, #224]
   1414c:	cmp	w21, w0
   14150:	b.hi	14748 <omp_in_final@@OMP_3.1+0xbd0>  // b.pmore
   14154:	ldr	w1, [x29, #220]
   14158:	sub	w0, w0, w21
   1415c:	cmp	w0, w1
   14160:	cset	w0, eq  // eq = none
   14164:	cbz	w0, 14754 <omp_in_final@@OMP_3.1+0xbdc>
   14168:	ldr	w0, [x22, #48]
   1416c:	cmp	w0, #0x40
   14170:	b.ls	1417c <omp_in_final@@OMP_3.1+0x604>  // b.plast
   14174:	mov	x0, x11
   14178:	bl	8950 <free@plt>
   1417c:	str	wzr, [x29, #220]
   14180:	cmp	w26, w21
   14184:	mov	x11, #0x0                   	// #0
   14188:	b.eq	149ec <omp_in_final@@OMP_3.1+0xe74>  // b.none
   1418c:	ldp	w0, w1, [x29, #220]
   14190:	add	w0, w0, w21
   14194:	cmp	w0, w1
   14198:	b.ls	141c8 <omp_in_final@@OMP_3.1+0x650>  // b.plast
   1419c:	cmp	w1, #0x0
   141a0:	sub	x0, x0, w1, uxtw
   141a4:	cset	x1, eq  // eq = none
   141a8:	sub	x0, x0, x1
   141ac:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   141b0:	add	x1, x1, #0x338
   141b4:	ldxr	x2, [x1]
   141b8:	add	x2, x2, x0
   141bc:	stlxr	w3, x2, [x1]
   141c0:	cbnz	w3, 141b4 <omp_in_final@@OMP_3.1+0x63c>
   141c4:	dmb	ish
   141c8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   141cc:	adrp	x25, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   141d0:	ldr	x0, [x0, #1576]
   141d4:	cbz	x0, 14808 <omp_in_final@@OMP_3.1+0xc90>
   141d8:	add	x20, x29, #0x100
   141dc:	str	x11, [x29, #160]
   141e0:	mov	x0, x20
   141e4:	bl	86e0 <pthread_attr_init@plt>
   141e8:	add	x1, x29, #0xf8
   141ec:	add	x0, x25, #0x668
   141f0:	bl	8a50 <pthread_attr_getstacksize@plt>
   141f4:	ldr	x11, [x29, #160]
   141f8:	cbnz	w0, 1420c <omp_in_final@@OMP_3.1+0x694>
   141fc:	ldr	x1, [x29, #248]
   14200:	mov	x0, x20
   14204:	bl	8810 <pthread_attr_setstacksize@plt>
   14208:	ldr	x11, [x29, #160]
   1420c:	mov	x25, x20
   14210:	mov	x2, sp
   14214:	sub	w0, w21, w26
   14218:	mov	w1, #0x70                  	// #112
   1421c:	mov	w13, #0xd0                  	// #208
   14220:	mrs	x14, tpidr_el0
   14224:	ubfiz	x15, x26, #3, #32
   14228:	umsubl	x0, w0, w1, x2
   1422c:	umaddl	x13, w26, w13, x22
   14230:	mov	sp, x0
   14234:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14238:	ldr	x0, [x0, #3992]
   1423c:	mov	x20, sp
   14240:	add	x14, x14, x0
   14244:	adrp	x0, 13000 <GOMP_taskloop_ull@@GOMP_4.5+0x160>
   14248:	add	x0, x0, #0xc08
   1424c:	str	x0, [x29, #160]
   14250:	cmp	w26, w21
   14254:	b.cc	14810 <omp_in_final@@OMP_3.1+0xc98>  // b.lo, b.ul, b.last
   14258:	add	x0, x29, #0x100
   1425c:	cmp	x25, x0
   14260:	b.ne	14274 <omp_in_final@@OMP_3.1+0x6fc>  // b.any
   14264:	mov	x0, x25
   14268:	str	x11, [x29, #232]
   1426c:	bl	87c0 <pthread_attr_destroy@plt>
   14270:	ldr	x11, [x29, #232]
   14274:	ldr	w0, [x29, #188]
   14278:	cbz	w0, 149ec <omp_in_final@@OMP_3.1+0xe74>
   1427c:	add	x0, x22, #0x80
   14280:	str	x11, [x29, #232]
   14284:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   14288:	ldr	w0, [x29, #224]
   1428c:	ldr	x11, [x29, #232]
   14290:	cmp	w21, w0
   14294:	ldr	w0, [x29, #220]
   14298:	b.cc	149f8 <omp_in_final@@OMP_3.1+0xe80>  // b.lo, b.ul, b.last
   1429c:	cbz	w0, 14a44 <omp_in_final@@OMP_3.1+0xecc>
   142a0:	ldr	w0, [x29, #220]
   142a4:	neg	w2, w0
   142a8:	b	14a08 <omp_in_final@@OMP_3.1+0xe90>
   142ac:	ldr	w1, [x29, #232]
   142b0:	b	1401c <omp_in_final@@OMP_3.1+0x4a4>
   142b4:	ldr	w19, [x0, #56]
   142b8:	cmp	w19, w21
   142bc:	b.cc	14318 <omp_in_final@@OMP_3.1+0x7a0>  // b.lo, b.ul, b.last
   142c0:	udiv	w24, w19, w21
   142c4:	ldr	w0, [x0, #52]
   142c8:	msub	w19, w24, w21, w19
   142cc:	add	w1, w24, #0x1
   142d0:	madd	w19, w24, w19, w19
   142d4:	add	w19, w19, w0
   142d8:	cmp	w27, w19
   142dc:	b.cs	14300 <omp_in_final@@OMP_3.1+0x788>  // b.hs, b.nlast
   142e0:	sub	w0, w27, w0
   142e4:	udiv	w2, w0, w1
   142e8:	msub	w0, w2, w1, w0
   142ec:	sub	w27, w27, w0
   142f0:	add	x0, x25, x26
   142f4:	mov	w28, #0x0                   	// #0
   142f8:	stp	w27, w1, [x0, #52]
   142fc:	b	14098 <omp_in_final@@OMP_3.1+0x520>
   14300:	sub	w1, w27, w19
   14304:	udiv	w0, w1, w24
   14308:	msub	w0, w0, w24, w1
   1430c:	mov	w1, w24
   14310:	sub	w27, w27, w0
   14314:	b	142f0 <omp_in_final@@OMP_3.1+0x778>
   14318:	udiv	w24, w21, w19
   1431c:	mov	w7, #0x1                   	// #1
   14320:	stp	w27, w7, [x0, #52]
   14324:	msub	w19, w24, w19, w21
   14328:	b	14094 <omp_in_final@@OMP_3.1+0x51c>
   1432c:	mov	w28, #0x0                   	// #0
   14330:	mov	w27, #0x0                   	// #0
   14334:	mov	w19, #0x0                   	// #0
   14338:	mov	w24, #0x0                   	// #0
   1433c:	str	wzr, [x29, #232]
   14340:	b	14098 <omp_in_final@@OMP_3.1+0x520>
   14344:	mov	w28, #0x0                   	// #0
   14348:	mov	w19, #0x0                   	// #0
   1434c:	mov	w24, #0x0                   	// #0
   14350:	b	14098 <omp_in_final@@OMP_3.1+0x520>
   14354:	mov	w28, #0x1                   	// #1
   14358:	mov	w19, #0x0                   	// #0
   1435c:	mov	w24, w28
   14360:	b	14098 <omp_in_final@@OMP_3.1+0x520>
   14364:	ldr	w0, [x23, #64]
   14368:	add	x1, x23, #0x80
   1436c:	sub	w0, w21, w0
   14370:	ldaxr	w2, [x1]
   14374:	add	w2, w2, w0
   14378:	stlxr	w3, w2, [x1]
   1437c:	cbnz	w3, 14370 <omp_in_final@@OMP_3.1+0x7f8>
   14380:	ldr	w14, [x29, #224]
   14384:	str	w21, [x23, #64]
   14388:	b	140c4 <omp_in_final@@OMP_3.1+0x54c>
   1438c:	mov	w14, w21
   14390:	b	140c4 <omp_in_final@@OMP_3.1+0x54c>
   14394:	ldr	x0, [x29, #160]
   14398:	ldp	w15, w13, [x0, #52]
   1439c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   143a0:	ldr	x0, [x0, #1576]
   143a4:	cbz	x0, 14724 <omp_in_final@@OMP_3.1+0xbac>
   143a8:	ldr	w0, [x29, #232]
   143ac:	cmp	w0, #0x3
   143b0:	b.eq	143c4 <omp_in_final@@OMP_3.1+0x84c>  // b.none
   143b4:	cmp	w0, #0x4
   143b8:	b.eq	14534 <omp_in_final@@OMP_3.1+0x9bc>  // b.none
   143bc:	cmp	w0, #0x1
   143c0:	b.ne	14b68 <omp_in_final@@OMP_3.1+0xff0>  // b.any
   143c4:	cmp	w24, w28
   143c8:	b.ne	143f8 <omp_in_final@@OMP_3.1+0x880>  // b.any
   143cc:	ldp	w1, w0, [x22, #44]
   143d0:	add	w25, w27, #0x1
   143d4:	add	w0, w1, w0
   143d8:	cmp	w0, w25
   143dc:	sub	w0, w21, w19
   143e0:	csel	w25, w25, w1, ne  // ne = any
   143e4:	cmp	w0, w26
   143e8:	b.ne	143f0 <omp_in_final@@OMP_3.1+0x878>  // b.any
   143ec:	mov	w24, #0x1                   	// #1
   143f0:	mov	w28, #0x1                   	// #1
   143f4:	b	14400 <omp_in_final@@OMP_3.1+0x888>
   143f8:	add	w28, w28, #0x1
   143fc:	mov	w25, w27
   14400:	cbnz	x11, 144f0 <omp_in_final@@OMP_3.1+0x978>
   14404:	ldr	w0, [x29, #232]
   14408:	cmp	w0, #0x1
   1440c:	b.eq	14428 <omp_in_final@@OMP_3.1+0x8b0>  // b.none
   14410:	ldr	x0, [x23]
   14414:	ldr	x1, [x0, w26, uxtw #3]
   14418:	add	w0, w25, #0x1
   1441c:	ldr	w1, [x1, #92]
   14420:	cmp	w1, w0
   14424:	b.ne	14448 <omp_in_final@@OMP_3.1+0x8d0>  // b.any
   14428:	ldr	x0, [x23]
   1442c:	ldr	x12, [x0, w26, uxtw #3]
   14430:	ldr	w0, [x12, #92]
   14434:	cmp	w0, w15
   14438:	b.ls	14448 <omp_in_final@@OMP_3.1+0x8d0>  // b.plast
   1443c:	add	w1, w13, w15
   14440:	cmp	w0, w1
   14444:	b.ls	1471c <omp_in_final@@OMP_3.1+0xba4>  // b.plast
   14448:	ldr	w1, [x22, #48]
   1444c:	cmp	w1, #0x40
   14450:	ubfiz	x0, x1, #3, #32
   14454:	b.ls	145b0 <omp_in_final@@OMP_3.1+0xa38>  // b.plast
   14458:	str	w15, [x29, #208]
   1445c:	str	w13, [x29, #220]
   14460:	bl	adb0 <fprintf@plt+0x2250>
   14464:	ldr	w15, [x29, #208]
   14468:	mov	x11, x0
   1446c:	ldr	w13, [x29, #220]
   14470:	ldr	w27, [x22, #48]
   14474:	mov	x0, x11
   14478:	mov	w1, #0x0                   	// #0
   1447c:	str	w15, [x29, #208]
   14480:	str	w13, [x29, #220]
   14484:	ubfiz	x2, x27, #3, #32
   14488:	bl	8800 <memset@plt>
   1448c:	ldr	w15, [x29, #208]
   14490:	mov	x11, x0
   14494:	ldr	w13, [x29, #220]
   14498:	ubfiz	x1, x26, #3, #32
   1449c:	mov	w2, w26
   144a0:	ldr	w0, [x29, #224]
   144a4:	cmp	w2, w0
   144a8:	b.cc	145c4 <omp_in_final@@OMP_3.1+0xa4c>  // b.lo, b.ul, b.last
   144ac:	cmp	w21, w0
   144b0:	b.ls	144e0 <omp_in_final@@OMP_3.1+0x968>  // b.plast
   144b4:	ldp	x2, x3, [x29, #120]
   144b8:	mov	w1, #0x0                   	// #0
   144bc:	ldr	x0, [x23]
   144c0:	str	w15, [x29, #112]
   144c4:	str	x11, [x29, #208]
   144c8:	str	w13, [x29, #220]
   144cc:	add	x0, x0, x3
   144d0:	bl	8800 <memset@plt>
   144d4:	ldr	w15, [x29, #112]
   144d8:	ldr	w13, [x29, #220]
   144dc:	ldr	x11, [x29, #208]
   144e0:	mov	w14, w21
   144e4:	ldr	w0, [x29, #224]
   144e8:	sub	w0, w0, w26
   144ec:	str	w0, [x29, #220]
   144f0:	ldr	w0, [x29, #220]
   144f4:	cbz	w0, 14738 <omp_in_final@@OMP_3.1+0xbc0>
   144f8:	ldr	w1, [x22, #44]
   144fc:	sub	w0, w25, w1
   14500:	ldr	x0, [x11, x0, lsl #3]
   14504:	cbnz	x0, 1462c <omp_in_final@@OMP_3.1+0xab4>
   14508:	ldr	w0, [x29, #232]
   1450c:	cmp	w0, #0x1
   14510:	b.ne	14528 <omp_in_final@@OMP_3.1+0x9b0>  // b.any
   14514:	mov	w0, w15
   14518:	add	w2, w13, w15
   1451c:	cmp	w2, w0
   14520:	b.hi	14618 <omp_in_final@@OMP_3.1+0xaa0>  // b.pmore
   14524:	b.ne	14630 <omp_in_final@@OMP_3.1+0xab8>  // b.any
   14528:	mov	w0, #0x1                   	// #1
   1452c:	str	w0, [x29, #208]
   14530:	b	14710 <omp_in_final@@OMP_3.1+0xb98>
   14534:	cbnz	w28, 14568 <omp_in_final@@OMP_3.1+0x9f0>
   14538:	ldp	w1, w0, [x22, #44]
   1453c:	cmp	w19, w27
   14540:	add	w25, w24, w27
   14544:	cinc	w25, w25, hi  // hi = pmore
   14548:	add	w0, w1, w0
   1454c:	cmp	w0, w25
   14550:	csel	w25, w25, w1, ne  // ne = any
   14554:	cmp	w19, w25
   14558:	cinc	w13, w24, hi  // hi = pmore
   1455c:	mov	w15, w25
   14560:	cbnz	x11, 144f0 <omp_in_final@@OMP_3.1+0x978>
   14564:	b	14410 <omp_in_final@@OMP_3.1+0x898>
   14568:	cmp	w24, w28
   1456c:	b.ne	145a0 <omp_in_final@@OMP_3.1+0xa28>  // b.any
   14570:	ldp	w1, w0, [x22, #44]
   14574:	add	w25, w27, #0x1
   14578:	mov	w28, #0x1                   	// #1
   1457c:	mov	w13, w28
   14580:	add	w0, w1, w0
   14584:	cmp	w0, w25
   14588:	sub	w0, w21, w19
   1458c:	csel	w25, w25, w1, ne  // ne = any
   14590:	cmp	w0, w26
   14594:	b.ne	1455c <omp_in_final@@OMP_3.1+0x9e4>  // b.any
   14598:	mov	w24, w28
   1459c:	b	1455c <omp_in_final@@OMP_3.1+0x9e4>
   145a0:	add	w28, w28, #0x1
   145a4:	mov	w25, w27
   145a8:	mov	w13, #0x1                   	// #1
   145ac:	b	1455c <omp_in_final@@OMP_3.1+0x9e4>
   145b0:	add	x0, x0, #0xf
   145b4:	and	x0, x0, #0xffffffff0
   145b8:	sub	sp, sp, x0
   145bc:	mov	x11, sp
   145c0:	b	14470 <omp_in_final@@OMP_3.1+0x8f8>
   145c4:	ldr	x0, [x23]
   145c8:	add	x12, x0, x1
   145cc:	ldr	x14, [x0, x1]
   145d0:	ldr	w0, [x22, #44]
   145d4:	ldr	w5, [x14, #92]
   145d8:	cmp	w5, w0
   145dc:	b.ls	14608 <omp_in_final@@OMP_3.1+0xa90>  // b.plast
   145e0:	add	w16, w27, w0
   145e4:	cmp	w5, w16
   145e8:	b.hi	14608 <omp_in_final@@OMP_3.1+0xa90>  // b.pmore
   145ec:	mvn	w0, w0
   145f0:	add	w0, w0, w5
   145f4:	lsl	x0, x0, #3
   145f8:	ldr	x5, [x11, x0]
   145fc:	str	x5, [x14, #8]
   14600:	ldr	x5, [x12]
   14604:	str	x5, [x11, x0]
   14608:	add	w2, w2, #0x1
   1460c:	add	x1, x1, #0x8
   14610:	str	xzr, [x12]
   14614:	b	144a0 <omp_in_final@@OMP_3.1+0x928>
   14618:	sub	w5, w0, w1
   1461c:	ldr	x5, [x11, x5, lsl #3]
   14620:	cbnz	x5, 14630 <omp_in_final@@OMP_3.1+0xab8>
   14624:	add	w0, w0, #0x1
   14628:	b	1451c <omp_in_final@@OMP_3.1+0x9a4>
   1462c:	mov	w0, w25
   14630:	sub	w0, w0, w1
   14634:	lsl	x0, x0, #3
   14638:	ldr	x12, [x11, x0]
   1463c:	ldr	x1, [x12, #8]
   14640:	str	x1, [x11, x0]
   14644:	ldr	w0, [x29, #220]
   14648:	sub	w0, w0, #0x1
   1464c:	str	w0, [x29, #220]
   14650:	ldr	x0, [x23]
   14654:	str	x12, [x0, w26, uxtw #3]
   14658:	mov	w0, #0x1                   	// #1
   1465c:	str	w0, [x29, #208]
   14660:	add	w1, w25, #0x1
   14664:	ldr	x0, [x29, #152]
   14668:	stp	x22, x0, [x12, #16]
   1466c:	ldr	w0, [x22, #36]
   14670:	str	w1, [x12, #92]
   14674:	add	w0, w0, #0x1
   14678:	str	w0, [x12, #44]
   1467c:	ldr	x0, [x29, #160]
   14680:	str	xzr, [x12, #32]
   14684:	ldr	x1, [x29, #192]
   14688:	str	w26, [x12, #40]
   1468c:	ldr	w0, [x0, #48]
   14690:	str	w0, [x12, #48]
   14694:	mov	w0, #0xd0                  	// #208
   14698:	stp	w15, w13, [x12, #52]
   1469c:	ldr	x2, [x29, #200]
   146a0:	umaddl	x0, w26, w0, x22
   146a4:	stp	xzr, xzr, [x12, #64]
   146a8:	add	x0, x0, #0x540
   146ac:	str	x0, [x12, #80]
   146b0:	str	x11, [x29, #96]
   146b4:	str	w14, [x29, #104]
   146b8:	str	x12, [x29, #112]
   146bc:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   146c0:	mov	w0, w26
   146c4:	mov	x1, #0xd0                  	// #208
   146c8:	ldr	x12, [x29, #112]
   146cc:	madd	x1, x0, x1, x22
   146d0:	ldr	w14, [x29, #104]
   146d4:	ldr	x2, [x29, #176]
   146d8:	add	x12, x12, #0x58
   146dc:	ldr	x11, [x29, #96]
   146e0:	str	x2, [x1, #1488]
   146e4:	ldrb	w2, [x29, #216]
   146e8:	strb	w2, [x1, #1514]
   146ec:	ldr	x2, [x29, #168]
   146f0:	ldur	x1, [x12, #-8]
   146f4:	str	x2, [x1, #40]
   146f8:	ldr	x1, [x29, #144]
   146fc:	stur	x1, [x12, #-88]
   14700:	ldr	x1, [x29, #136]
   14704:	stur	x1, [x12, #-80]
   14708:	ldr	x1, [x22, #80]
   1470c:	str	x12, [x1, x0, lsl #3]
   14710:	add	w26, w26, #0x1
   14714:	mov	w27, w25
   14718:	b	1413c <omp_in_final@@OMP_3.1+0x5c4>
   1471c:	mov	x11, #0x0                   	// #0
   14720:	b	14660 <omp_in_final@@OMP_3.1+0xae8>
   14724:	ldr	x0, [x23]
   14728:	mov	w25, w27
   1472c:	mov	w1, #0x0                   	// #0
   14730:	ldr	x12, [x0, w26, uxtw #3]
   14734:	b	14664 <omp_in_final@@OMP_3.1+0xaec>
   14738:	mov	w0, #0x1                   	// #1
   1473c:	mov	w27, w25
   14740:	str	w0, [x29, #208]
   14744:	b	14148 <omp_in_final@@OMP_3.1+0x5d0>
   14748:	ldr	w0, [x29, #224]
   1474c:	cmp	w26, w0
   14750:	b	14160 <omp_in_final@@OMP_3.1+0x5e8>
   14754:	ldr	w0, [x29, #232]
   14758:	cmp	w0, #0x3
   1475c:	b.eq	14770 <omp_in_final@@OMP_3.1+0xbf8>  // b.none
   14760:	cmp	w0, #0x4
   14764:	b.eq	147d4 <omp_in_final@@OMP_3.1+0xc5c>  // b.none
   14768:	cmp	w0, #0x1
   1476c:	b.ne	147a0 <omp_in_final@@OMP_3.1+0xc28>  // b.any
   14770:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14774:	ldr	x1, [x1, #3992]
   14778:	mrs	x0, tpidr_el0
   1477c:	add	x2, x0, x1
   14780:	ldr	w2, [x2, #56]
   14784:	cmp	w2, w21
   14788:	b.cs	14790 <omp_in_final@@OMP_3.1+0xc18>  // b.hs, b.nlast
   1478c:	udiv	w24, w21, w2
   14790:	add	x0, x0, x1
   14794:	ldr	w5, [x0, #92]
   14798:	sub	w27, w5, #0x1
   1479c:	mov	w28, #0x1                   	// #1
   147a0:	ldr	w0, [x29, #220]
   147a4:	cbz	w0, 147cc <omp_in_final@@OMP_3.1+0xc54>
   147a8:	ldr	w1, [x23, #64]
   147ac:	add	w0, w21, w0
   147b0:	add	x2, x23, #0x80
   147b4:	sub	w1, w0, w1
   147b8:	ldaxr	w3, [x2]
   147bc:	add	w3, w3, w1
   147c0:	stlxr	w4, w3, [x2]
   147c4:	cbnz	w4, 147b8 <omp_in_final@@OMP_3.1+0xc40>
   147c8:	str	w0, [x23, #64]
   147cc:	mov	w26, #0x1                   	// #1
   147d0:	b	1418c <omp_in_final@@OMP_3.1+0x614>
   147d4:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   147d8:	ldr	x0, [x0, #3992]
   147dc:	mrs	x1, tpidr_el0
   147e0:	add	x0, x1, x0
   147e4:	ldr	w27, [x0, #52]
   147e8:	cbz	w28, 147a0 <omp_in_final@@OMP_3.1+0xc28>
   147ec:	ldr	w8, [x22, #48]
   147f0:	udiv	w24, w21, w8
   147f4:	b	1479c <omp_in_final@@OMP_3.1+0xc24>
   147f8:	mov	x11, #0x0                   	// #0
   147fc:	str	wzr, [x29, #208]
   14800:	stp	wzr, wzr, [x29, #220]
   14804:	b	147cc <omp_in_final@@OMP_3.1+0xc54>
   14808:	add	x25, x25, #0x668
   1480c:	b	14210 <omp_in_final@@OMP_3.1+0x698>
   14810:	ldur	x0, [x14, #52]
   14814:	stur	x0, [x20, #52]
   14818:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1481c:	str	wzr, [x20, #96]
   14820:	ldr	x0, [x0, #1576]
   14824:	cbz	x0, 148b0 <omp_in_final@@OMP_3.1+0xd38>
   14828:	ldr	w0, [x29, #232]
   1482c:	cmp	w0, #0x3
   14830:	b.eq	14844 <omp_in_final@@OMP_3.1+0xccc>  // b.none
   14834:	cmp	w0, #0x4
   14838:	b.eq	14964 <omp_in_final@@OMP_3.1+0xdec>  // b.none
   1483c:	cmp	w0, #0x1
   14840:	b.ne	1487c <omp_in_final@@OMP_3.1+0xd04>  // b.any
   14844:	cmp	w24, w28
   14848:	b.ne	14878 <omp_in_final@@OMP_3.1+0xd00>  // b.any
   1484c:	ldp	w1, w0, [x22, #44]
   14850:	add	w27, w27, #0x1
   14854:	add	w0, w1, w0
   14858:	cmp	w27, w0
   1485c:	sub	w0, w21, w19
   14860:	csel	w27, w27, w1, ne  // ne = any
   14864:	cmp	w0, w26
   14868:	b.ne	14870 <omp_in_final@@OMP_3.1+0xcf8>  // b.any
   1486c:	mov	w24, #0x1                   	// #1
   14870:	mov	w28, #0x1                   	// #1
   14874:	b	1487c <omp_in_final@@OMP_3.1+0xd04>
   14878:	add	w28, w28, #0x1
   1487c:	add	w0, w27, #0x1
   14880:	str	w0, [x20, #96]
   14884:	cbz	x11, 14894 <omp_in_final@@OMP_3.1+0xd1c>
   14888:	ldr	x0, [x23]
   1488c:	ldr	x0, [x0, x15]
   14890:	cbnz	x0, 149dc <omp_in_final@@OMP_3.1+0xe64>
   14894:	mov	w1, w27
   14898:	mov	x0, x25
   1489c:	stp	x14, x15, [x29, #104]
   148a0:	stp	x11, x13, [x29, #120]
   148a4:	bl	16c94 <omp_pause_resource_all_@@OMP_5.0+0x8>
   148a8:	ldp	x14, x15, [x29, #104]
   148ac:	ldp	x11, x13, [x29, #120]
   148b0:	str	x22, [x20, #16]
   148b4:	ldr	x0, [x29, #144]
   148b8:	str	x0, [x20]
   148bc:	ldr	x0, [x29, #136]
   148c0:	str	x0, [x20, #8]
   148c4:	ldr	x0, [x29, #152]
   148c8:	str	x0, [x20, #24]
   148cc:	ldr	w0, [x22, #36]
   148d0:	ldp	x1, x2, [x29, #192]
   148d4:	add	w0, w0, #0x1
   148d8:	str	w0, [x20, #44]
   148dc:	ldr	w0, [x14, #48]
   148e0:	str	xzr, [x20, #32]
   148e4:	str	w26, [x20, #40]
   148e8:	str	w0, [x20, #48]
   148ec:	add	x0, x13, #0x540
   148f0:	stp	xzr, xzr, [x20, #64]
   148f4:	str	x0, [x20, #80]
   148f8:	stp	x15, x11, [x29, #104]
   148fc:	stp	x14, x13, [x29, #120]
   14900:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   14904:	mov	x3, x20
   14908:	ldr	x13, [x29, #128]
   1490c:	ldr	x0, [x29, #176]
   14910:	str	x0, [x13, #1488]
   14914:	ldrb	w0, [x29, #216]
   14918:	strb	w0, [x13, #1514]
   1491c:	ldr	x0, [x20, #80]
   14920:	ldp	x2, x1, [x29, #160]
   14924:	str	x1, [x0, #40]
   14928:	ldrb	w0, [x29, #184]
   1492c:	mov	x1, x25
   14930:	str	x23, [x20, #88]
   14934:	strb	w0, [x20, #100]
   14938:	add	x0, x20, #0x68
   1493c:	add	x20, x20, #0x70
   14940:	bl	8880 <pthread_create@plt>
   14944:	ldp	x15, x11, [x29, #104]
   14948:	ldp	x14, x13, [x29, #120]
   1494c:	cbz	w0, 149dc <omp_in_final@@OMP_3.1+0xe64>
   14950:	bl	8870 <strerror@plt>
   14954:	mov	x1, x0
   14958:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1495c:	add	x0, x0, #0x7d4
   14960:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   14964:	cbnz	w28, 14998 <omp_in_final@@OMP_3.1+0xe20>
   14968:	add	w0, w24, w27
   1496c:	cmp	w19, w27
   14970:	cinc	w27, w0, hi  // hi = pmore
   14974:	ldp	w1, w0, [x22, #44]
   14978:	add	w0, w1, w0
   1497c:	cmp	w0, w27
   14980:	csel	w27, w27, w1, ne  // ne = any
   14984:	str	w27, [x20, #52]
   14988:	cmp	w19, w27
   1498c:	cinc	w0, w24, hi  // hi = pmore
   14990:	str	w0, [x20, #56]
   14994:	b	1487c <omp_in_final@@OMP_3.1+0xd04>
   14998:	cmp	w24, w28
   1499c:	b.ne	149cc <omp_in_final@@OMP_3.1+0xe54>  // b.any
   149a0:	ldp	w1, w0, [x22, #44]
   149a4:	add	w27, w27, #0x1
   149a8:	add	w0, w1, w0
   149ac:	cmp	w0, w27
   149b0:	sub	w0, w21, w19
   149b4:	csel	w27, w27, w1, ne  // ne = any
   149b8:	cmp	w0, w26
   149bc:	b.ne	149c4 <omp_in_final@@OMP_3.1+0xe4c>  // b.any
   149c0:	mov	w24, #0x1                   	// #1
   149c4:	mov	w28, #0x1                   	// #1
   149c8:	b	149d0 <omp_in_final@@OMP_3.1+0xe58>
   149cc:	add	w28, w28, #0x1
   149d0:	mov	w0, #0x1                   	// #1
   149d4:	str	w27, [x20, #52]
   149d8:	b	14990 <omp_in_final@@OMP_3.1+0xe18>
   149dc:	add	w26, w26, #0x1
   149e0:	add	x13, x13, #0xd0
   149e4:	add	x15, x15, #0x8
   149e8:	b	14250 <omp_in_final@@OMP_3.1+0x6d8>
   149ec:	add	x0, x23, #0x40
   149f0:	str	x11, [x29, #232]
   149f4:	b	14284 <omp_in_final@@OMP_3.1+0x70c>
   149f8:	cbnz	w0, 142a0 <omp_in_final@@OMP_3.1+0x728>
   149fc:	ldr	w1, [x29, #224]
   14a00:	mov	w0, w21
   14a04:	sub	x2, x0, w1, uxtw
   14a08:	ldr	w0, [x23, #64]
   14a0c:	add	x1, x23, #0x80
   14a10:	sub	w0, w21, w0
   14a14:	ldaxr	w3, [x1]
   14a18:	add	w3, w3, w0
   14a1c:	stlxr	w4, w3, [x1]
   14a20:	cbnz	w4, 14a14 <omp_in_final@@OMP_3.1+0xe9c>
   14a24:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14a28:	add	x0, x0, #0x338
   14a2c:	str	w21, [x23, #64]
   14a30:	ldxr	x1, [x0]
   14a34:	add	x1, x1, x2
   14a38:	stlxr	w3, x1, [x0]
   14a3c:	cbnz	w3, 14a30 <omp_in_final@@OMP_3.1+0xeb8>
   14a40:	dmb	ish
   14a44:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14a48:	ldrb	w0, [x0, #1528]
   14a4c:	cbnz	w0, 14a88 <omp_in_final@@OMP_3.1+0xf10>
   14a50:	cbz	x11, 14a68 <omp_in_final@@OMP_3.1+0xef0>
   14a54:	ldr	w0, [x22, #48]
   14a58:	cmp	w0, #0x40
   14a5c:	b.ls	14a68 <omp_in_final@@OMP_3.1+0xef0>  // b.plast
   14a60:	mov	x0, x11
   14a64:	bl	8950 <free@plt>
   14a68:	mov	sp, x29
   14a6c:	ldp	x19, x20, [sp, #16]
   14a70:	ldp	x21, x22, [sp, #32]
   14a74:	ldp	x23, x24, [sp, #48]
   14a78:	ldp	x25, x26, [sp, #64]
   14a7c:	ldp	x27, x28, [sp, #80]
   14a80:	ldp	x29, x30, [sp], #320
   14a84:	ret
   14a88:	ldr	w0, [x29, #184]
   14a8c:	cmp	w0, #0x0
   14a90:	ldr	w0, [x29, #224]
   14a94:	ccmp	w21, w0, #0x0, eq  // eq = none
   14a98:	b.ne	14aa4 <omp_in_final@@OMP_3.1+0xf2c>  // b.any
   14a9c:	ldr	w0, [x29, #208]
   14aa0:	cbz	w0, 14a50 <omp_in_final@@OMP_3.1+0xed8>
   14aa4:	adrp	x19, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14aa8:	ldr	x19, [x19, #3992]
   14aac:	str	x11, [x29, #232]
   14ab0:	bl	8af0 <pthread_self@plt>
   14ab4:	mrs	x1, tpidr_el0
   14ab8:	mov	x25, x0
   14abc:	add	x19, x1, x19
   14ac0:	add	x1, x19, #0x10
   14ac4:	ldr	w2, [x19, #92]
   14ac8:	bl	8b70 <fprintf@plt+0x10>
   14acc:	ldr	w0, [x29, #188]
   14ad0:	ldr	x11, [x29, #232]
   14ad4:	cbz	w0, 14b58 <omp_in_final@@OMP_3.1+0xfe0>
   14ad8:	sub	w1, w21, #0x1
   14adc:	mov	w0, #0x70                  	// #112
   14ae0:	mov	x2, #0x10                  	// #16
   14ae4:	mov	w19, #0x1                   	// #1
   14ae8:	umsubl	x1, w1, w0, x2
   14aec:	add	x20, x20, x1
   14af0:	cmp	w19, w21
   14af4:	b.cs	14a50 <omp_in_final@@OMP_3.1+0xed8>  // b.hs, b.nlast
   14af8:	ldr	w2, [x20, #80]
   14afc:	mov	x1, x20
   14b00:	ldr	x0, [x20, #88]
   14b04:	str	x11, [x29, #232]
   14b08:	add	w19, w19, #0x1
   14b0c:	add	x20, x20, #0x70
   14b10:	bl	8b70 <fprintf@plt+0x10>
   14b14:	ldr	x11, [x29, #232]
   14b18:	b	14af0 <omp_in_final@@OMP_3.1+0xf78>
   14b1c:	ldr	x0, [x23]
   14b20:	str	x11, [x29, #232]
   14b24:	add	w24, w24, #0x1
   14b28:	ldr	x1, [x0, x20]
   14b2c:	add	x20, x20, #0x8
   14b30:	cmp	x19, x1
   14b34:	add	x0, x1, x26
   14b38:	ldr	w2, [x1, #92]
   14b3c:	csel	x0, x0, x25, ne  // ne = any
   14b40:	add	x1, x1, #0x10
   14b44:	bl	8b70 <fprintf@plt+0x10>
   14b48:	ldr	x11, [x29, #232]
   14b4c:	cmp	w24, w21
   14b50:	b.cc	14b1c <omp_in_final@@OMP_3.1+0xfa4>  // b.lo, b.ul, b.last
   14b54:	b	14a50 <omp_in_final@@OMP_3.1+0xed8>
   14b58:	sub	x26, x25, x19
   14b5c:	mov	x20, #0x8                   	// #8
   14b60:	mov	w24, #0x1                   	// #1
   14b64:	b	14b4c <omp_in_final@@OMP_3.1+0xfd4>
   14b68:	mov	w25, w27
   14b6c:	b	14560 <omp_in_final@@OMP_3.1+0x9e8>
   14b70:	stp	x29, x30, [sp, #-80]!
   14b74:	mov	x29, sp
   14b78:	stp	x23, x24, [sp, #48]
   14b7c:	adrp	x23, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14b80:	ldr	x23, [x23, #3992]
   14b84:	stp	x21, x22, [sp, #32]
   14b88:	mrs	x22, tpidr_el0
   14b8c:	stp	x19, x20, [sp, #16]
   14b90:	add	x19, x22, x23
   14b94:	stp	x25, x26, [sp, #64]
   14b98:	ldr	x20, [x19, #16]
   14b9c:	add	x24, x20, #0x80
   14ba0:	mov	x0, x24
   14ba4:	bl	16228 <omp_get_num_procs@@OMP_1.0+0x5b4>
   14ba8:	ldr	w0, [x20, #1336]
   14bac:	cbz	w0, 14ca4 <omp_in_final@@OMP_3.1+0x112c>
   14bb0:	ldr	x25, [x20, #88]
   14bb4:	mov	x26, #0x1                   	// #1
   14bb8:	add	x21, x25, #0x50
   14bbc:	ldar	x19, [x21]
   14bc0:	cmp	x19, #0x2
   14bc4:	b.hi	14c14 <omp_in_final@@OMP_3.1+0x109c>  // b.pmore
   14bc8:	ldaxr	x0, [x21]
   14bcc:	cbnz	x0, 14bd8 <omp_in_final@@OMP_3.1+0x1060>
   14bd0:	stxr	w1, x26, [x21]
   14bd4:	cbnz	w1, 14bc8 <omp_in_final@@OMP_3.1+0x1050>
   14bd8:	cmp	x0, #0x0
   14bdc:	b.ne	14c04 <omp_in_final@@OMP_3.1+0x108c>  // b.any
   14be0:	ldxr	x0, [x21]
   14be4:	stlxr	w1, x25, [x21]
   14be8:	cbnz	w1, 14be0 <omp_in_final@@OMP_3.1+0x1068>
   14bec:	cmp	x0, #0x1
   14bf0:	b.ne	14c98 <omp_in_final@@OMP_3.1+0x1120>  // b.any
   14bf4:	mov	x19, #0x0                   	// #0
   14bf8:	b	14c14 <omp_in_final@@OMP_3.1+0x109c>
   14bfc:	mov	x25, x19
   14c00:	b	14bb8 <omp_in_final@@OMP_3.1+0x1040>
   14c04:	mov	x0, x21
   14c08:	bl	163b8 <omp_get_num_procs@@OMP_1.0+0x744>
   14c0c:	mov	x19, x0
   14c10:	cbz	x0, 14be0 <omp_in_final@@OMP_3.1+0x1068>
   14c14:	mov	x0, x25
   14c18:	bl	1507c <omp_in_final@@OMP_3.1+0x1504>
   14c1c:	cbnz	x19, 14bfc <omp_in_final@@OMP_3.1+0x1084>
   14c20:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   14c24:	add	x0, x22, x23
   14c28:	ldp	x4, x5, [x20, #8]
   14c2c:	stp	x4, x5, [x0, #16]
   14c30:	ldp	x4, x5, [x20, #24]
   14c34:	stp	x4, x5, [x0, #32]
   14c38:	ldp	x4, x5, [x20, #40]
   14c3c:	stp	x4, x5, [x0, #48]
   14c40:	ldp	x2, x3, [x20, #56]
   14c44:	stp	x2, x3, [x0, #64]
   14c48:	ldr	w0, [x0, #44]
   14c4c:	cbz	w0, 14c80 <omp_in_final@@OMP_3.1+0x1108>
   14c50:	ldr	w2, [x20]
   14c54:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14c58:	mov	x1, #0x1                   	// #1
   14c5c:	add	x0, x0, #0x338
   14c60:	sub	x1, x1, x2
   14c64:	ldxr	x2, [x0]
   14c68:	add	x2, x2, x1
   14c6c:	stlxr	w3, x2, [x0]
   14c70:	cbnz	w3, 14c64 <omp_in_final@@OMP_3.1+0x10ec>
   14c74:	mov	x0, x24
   14c78:	dmb	ish
   14c7c:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   14c80:	ldr	x19, [x20, #312]
   14c84:	cbz	x19, 14cb0 <omp_in_final@@OMP_3.1+0x1138>
   14c88:	mov	x0, x19
   14c8c:	ldr	x19, [x19, #56]
   14c90:	bl	8950 <free@plt>
   14c94:	b	14c84 <omp_in_final@@OMP_3.1+0x110c>
   14c98:	mov	x0, x21
   14c9c:	bl	164c4 <omp_get_num_procs@@OMP_1.0+0x850>
   14ca0:	b	14bf4 <omp_in_final@@OMP_3.1+0x107c>
   14ca4:	ldr	x0, [x19, #24]
   14ca8:	bl	1507c <omp_in_final@@OMP_3.1+0x1504>
   14cac:	b	14c20 <omp_in_final@@OMP_3.1+0x10a8>
   14cb0:	add	x22, x22, x23
   14cb4:	ldr	x0, [x22, #16]
   14cb8:	cbnz	x0, 14cc8 <omp_in_final@@OMP_3.1+0x1150>
   14cbc:	ldr	w0, [x20]
   14cc0:	cmp	w0, #0x1
   14cc4:	b.ne	14ce4 <omp_in_final@@OMP_3.1+0x116c>  // b.any
   14cc8:	mov	x0, x20
   14ccc:	ldp	x19, x20, [sp, #16]
   14cd0:	ldp	x21, x22, [sp, #32]
   14cd4:	ldp	x23, x24, [sp, #48]
   14cd8:	ldp	x25, x26, [sp, #64]
   14cdc:	ldp	x29, x30, [sp], #80
   14ce0:	b	8950 <free@plt>
   14ce4:	ldr	x19, [x22, #96]
   14ce8:	ldr	x0, [x19, #16]
   14cec:	cbz	x0, 14cf4 <omp_in_final@@OMP_3.1+0x117c>
   14cf0:	bl	8950 <free@plt>
   14cf4:	ldp	x21, x22, [sp, #32]
   14cf8:	ldp	x23, x24, [sp, #48]
   14cfc:	ldp	x25, x26, [sp, #64]
   14d00:	str	x20, [x19, #16]
   14d04:	ldp	x19, x20, [sp, #16]
   14d08:	ldp	x29, x30, [sp], #80
   14d0c:	ret
   14d10:	stp	x29, x30, [sp, #-48]!
   14d14:	mov	x29, sp
   14d18:	stp	x21, x22, [sp, #32]
   14d1c:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14d20:	ldr	x21, [x21, #3992]
   14d24:	stp	x19, x20, [sp, #16]
   14d28:	mrs	x20, tpidr_el0
   14d2c:	add	x0, x20, x21
   14d30:	ldr	x19, [x0, #96]
   14d34:	cbz	x19, 14d64 <omp_in_final@@OMP_3.1+0x11ec>
   14d38:	ldr	w2, [x19, #12]
   14d3c:	cbnz	w2, 14df8 <omp_in_final@@OMP_3.1+0x1280>
   14d40:	ldr	x0, [x19, #16]
   14d44:	cbz	x0, 14d4c <omp_in_final@@OMP_3.1+0x11d4>
   14d48:	bl	8950 <free@plt>
   14d4c:	ldr	x0, [x19]
   14d50:	bl	8950 <free@plt>
   14d54:	mov	x0, x19
   14d58:	bl	8950 <free@plt>
   14d5c:	add	x0, x20, x21
   14d60:	str	xzr, [x0, #96]
   14d64:	add	x0, x20, x21
   14d68:	ldr	w1, [x0, #44]
   14d6c:	cbnz	w1, 14d7c <omp_in_final@@OMP_3.1+0x1204>
   14d70:	ldr	x0, [x0, #16]
   14d74:	cbz	x0, 14d7c <omp_in_final@@OMP_3.1+0x1204>
   14d78:	bl	14b70 <omp_in_final@@OMP_3.1+0xff8>
   14d7c:	add	x20, x20, x21
   14d80:	ldr	x19, [x20, #80]
   14d84:	cbz	x19, 14e08 <omp_in_final@@OMP_3.1+0x1290>
   14d88:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   14d8c:	mov	x0, x19
   14d90:	ldp	x19, x20, [sp, #16]
   14d94:	ldp	x21, x22, [sp, #32]
   14d98:	ldp	x29, x30, [sp], #48
   14d9c:	b	8950 <free@plt>
   14da0:	ldr	x3, [x19]
   14da4:	ldr	x3, [x3, x0, lsl #3]
   14da8:	stp	x1, x19, [x3]
   14dac:	add	x0, x0, #0x1
   14db0:	cmp	w2, w0
   14db4:	b.hi	14da0 <omp_in_final@@OMP_3.1+0x1228>  // b.pmore
   14db8:	add	x22, x19, #0x40
   14dbc:	mov	x0, x22
   14dc0:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   14dc4:	mov	x0, x22
   14dc8:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   14dcc:	ldr	w2, [x19, #12]
   14dd0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14dd4:	mov	x1, #0x1                   	// #1
   14dd8:	add	x0, x0, #0x338
   14ddc:	sub	x1, x1, x2
   14de0:	ldxr	x2, [x0]
   14de4:	add	x2, x2, x1
   14de8:	stlxr	w3, x2, [x0]
   14dec:	cbnz	w3, 14de0 <omp_in_final@@OMP_3.1+0x1268>
   14df0:	dmb	ish
   14df4:	b	14d40 <omp_in_final@@OMP_3.1+0x11c8>
   14df8:	adrp	x1, 13000 <GOMP_taskloop_ull@@GOMP_4.5+0x160>
   14dfc:	mov	x0, #0x0                   	// #0
   14e00:	add	x1, x1, #0xba0
   14e04:	b	14dac <omp_in_final@@OMP_3.1+0x1234>
   14e08:	ldp	x19, x20, [sp, #16]
   14e0c:	ldp	x21, x22, [sp, #32]
   14e10:	ldp	x29, x30, [sp], #48
   14e14:	ret
   14e18:	stp	x29, x30, [sp, #-96]!
   14e1c:	mov	x29, sp
   14e20:	stp	x23, x24, [sp, #48]
   14e24:	mrs	x23, tpidr_el0
   14e28:	adrp	x24, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14e2c:	ldr	x24, [x24, #3992]
   14e30:	stp	x19, x20, [sp, #16]
   14e34:	add	x0, x23, x24
   14e38:	stp	x21, x22, [sp, #32]
   14e3c:	ldr	w1, [x0, #44]
   14e40:	stp	x25, x26, [sp, #64]
   14e44:	ldr	x19, [x0, #96]
   14e48:	str	x27, [sp, #80]
   14e4c:	cbnz	w1, 14f44 <omp_in_final@@OMP_3.1+0x13cc>
   14e50:	cbz	x19, 14e7c <omp_in_final@@OMP_3.1+0x1304>
   14e54:	ldr	w26, [x19, #12]
   14e58:	cbnz	w26, 14e84 <omp_in_final@@OMP_3.1+0x130c>
   14e5c:	ldr	x0, [x19, #16]
   14e60:	cbnz	x0, 14f3c <omp_in_final@@OMP_3.1+0x13c4>
   14e64:	ldr	x0, [x19]
   14e68:	add	x23, x23, x24
   14e6c:	bl	8950 <free@plt>
   14e70:	mov	x0, x19
   14e74:	bl	8950 <free@plt>
   14e78:	str	xzr, [x23, #96]
   14e7c:	mov	w0, #0x0                   	// #0
   14e80:	b	14f48 <omp_in_final@@OMP_3.1+0x13d0>
   14e84:	ubfiz	x1, x26, #3, #32
   14e88:	adrp	x27, 13000 <GOMP_taskloop_ull@@GOMP_4.5+0x160>
   14e8c:	add	x1, x1, #0xf
   14e90:	add	x27, x27, #0xbd8
   14e94:	and	x1, x1, #0xffffffff0
   14e98:	mov	x20, x0
   14e9c:	sub	sp, sp, x1
   14ea0:	mov	x22, #0x1                   	// #1
   14ea4:	mov	x25, sp
   14ea8:	cmp	w26, w22
   14eac:	b.hi	14f10 <omp_in_final@@OMP_3.1+0x1398>  // b.pmore
   14eb0:	add	x20, x19, #0x40
   14eb4:	mov	x0, x20
   14eb8:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   14ebc:	mov	x0, x20
   14ec0:	bl	160ec <omp_get_num_procs@@OMP_1.0+0x478>
   14ec4:	ldr	w2, [x19, #12]
   14ec8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14ecc:	mov	x1, #0x1                   	// #1
   14ed0:	add	x0, x0, #0x338
   14ed4:	sub	x1, x1, x2
   14ed8:	ldxr	x2, [x0]
   14edc:	add	x2, x2, x1
   14ee0:	stlxr	w3, x2, [x0]
   14ee4:	cbnz	w3, 14ed8 <omp_in_final@@OMP_3.1+0x1360>
   14ee8:	mov	x20, #0x0                   	// #0
   14eec:	dmb	ish
   14ef0:	ldr	w0, [x19, #12]
   14ef4:	add	x20, x20, #0x1
   14ef8:	cmp	w0, w20
   14efc:	b.ls	14e5c <omp_in_final@@OMP_3.1+0x12e4>  // b.plast
   14f00:	ldr	x0, [x25, x20, lsl #3]
   14f04:	mov	x1, #0x0                   	// #0
   14f08:	bl	88a0 <pthread_join@plt>
   14f0c:	b	14ef0 <omp_in_final@@OMP_3.1+0x1378>
   14f10:	ldr	x0, [x19]
   14f14:	ldr	x21, [x0, x22, lsl #3]
   14f18:	stp	x27, x19, [x21]
   14f1c:	bl	8af0 <pthread_self@plt>
   14f20:	cmp	x20, x21
   14f24:	b.eq	14f30 <omp_in_final@@OMP_3.1+0x13b8>  // b.none
   14f28:	sub	x21, x21, x20
   14f2c:	add	x0, x0, x21
   14f30:	str	x0, [x25, x22, lsl #3]
   14f34:	add	x22, x22, #0x1
   14f38:	b	14ea8 <omp_in_final@@OMP_3.1+0x1330>
   14f3c:	bl	8950 <free@plt>
   14f40:	b	14e64 <omp_in_final@@OMP_3.1+0x12ec>
   14f44:	mov	w0, #0xffffffff            	// #-1
   14f48:	mov	sp, x29
   14f4c:	ldp	x19, x20, [sp, #16]
   14f50:	ldp	x21, x22, [sp, #32]
   14f54:	ldp	x23, x24, [sp, #48]
   14f58:	ldp	x25, x26, [sp, #64]
   14f5c:	ldr	x27, [sp, #80]
   14f60:	ldp	x29, x30, [sp], #96
   14f64:	ret
   14f68:	stp	x29, x30, [sp, #-32]!
   14f6c:	mov	x0, #0xd0                  	// #208
   14f70:	mov	x29, sp
   14f74:	str	x19, [sp, #16]
   14f78:	bl	adb0 <fprintf@plt+0x2250>
   14f7c:	mov	x1, #0x0                   	// #0
   14f80:	mov	x19, x0
   14f84:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14f88:	add	x2, x2, #0x2c0
   14f8c:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   14f90:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   14f94:	ldr	x1, [x1, #3992]
   14f98:	mrs	x0, tpidr_el0
   14f9c:	add	x1, x0, x1
   14fa0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   14fa4:	ldr	w0, [x0, #1704]
   14fa8:	str	x19, [x1, #80]
   14fac:	bl	8a00 <pthread_setspecific@plt>
   14fb0:	add	x0, x19, #0x90
   14fb4:	ldr	x19, [sp, #16]
   14fb8:	ldp	x29, x30, [sp], #32
   14fbc:	ret
   14fc0:	mov	x1, x0
   14fc4:	add	x0, x0, #0x4
   14fc8:	ldar	w0, [x0]
   14fcc:	and	w0, w0, #0xfffffffc
   14fd0:	add	x1, x1, #0x40
   14fd4:	ldaxr	w2, [x1]
   14fd8:	sub	w2, w2, #0x1
   14fdc:	stlxr	w3, w2, [x1]
   14fe0:	cbnz	w3, 14fd4 <omp_in_final@@OMP_3.1+0x145c>
   14fe4:	cbnz	w2, 14fec <omp_in_final@@OMP_3.1+0x1474>
   14fe8:	orr	w0, w0, #0x1
   14fec:	ret
   14ff0:	stp	x29, x30, [sp, #-32]!
   14ff4:	mov	x29, sp
   14ff8:	stp	x19, x20, [sp, #16]
   14ffc:	mov	x19, x0
   15000:	str	wzr, [x0, #64]
   15004:	cbz	x1, 15070 <omp_in_final@@OMP_3.1+0x14f8>
   15008:	ubfiz	x20, x2, #2, #32
   1500c:	cmp	x1, #0x1
   15010:	b.eq	15024 <omp_in_final@@OMP_3.1+0x14ac>  // b.none
   15014:	add	x20, x20, #0x7
   15018:	sub	x1, x1, #0x1
   1501c:	and	x20, x20, #0xfffffffffffffff8
   15020:	add	x20, x20, x1
   15024:	cmp	x20, #0x20
   15028:	b.ls	15068 <omp_in_final@@OMP_3.1+0x14f0>  // b.plast
   1502c:	mov	x0, x20
   15030:	bl	adb0 <fprintf@plt+0x2250>
   15034:	str	x0, [x19, #32]
   15038:	mov	x2, x20
   1503c:	mov	w1, #0x0                   	// #0
   15040:	ldr	x0, [x19, #32]
   15044:	bl	8800 <memset@plt>
   15048:	str	wzr, [x19, #48]
   1504c:	mov	x0, #0xffffffff00000000    	// #-4294967296
   15050:	str	x0, [x19, #40]
   15054:	str	wzr, [x19, #68]
   15058:	str	xzr, [x19, #80]
   1505c:	ldp	x19, x20, [sp, #16]
   15060:	ldp	x29, x30, [sp], #32
   15064:	ret
   15068:	add	x0, x19, #0x60
   1506c:	b	15034 <omp_in_final@@OMP_3.1+0x14bc>
   15070:	add	x0, x0, #0x60
   15074:	str	x0, [x19, #32]
   15078:	b	15054 <omp_in_final@@OMP_3.1+0x14dc>
   1507c:	mov	x1, x0
   15080:	ldr	x0, [x0, #32]
   15084:	add	x1, x1, #0x60
   15088:	cmp	x0, x1
   1508c:	b.eq	15094 <omp_in_final@@OMP_3.1+0x151c>  // b.none
   15090:	b	8950 <free@plt>
   15094:	ret
   15098:	stp	x29, x30, [sp, #-32]!
   1509c:	mov	x29, sp
   150a0:	stp	x19, x20, [sp, #16]
   150a4:	mov	x20, x0
   150a8:	mov	x19, x1
   150ac:	mov	x0, x1
   150b0:	bl	1507c <omp_in_final@@OMP_3.1+0x1504>
   150b4:	cbz	x20, 150ec <omp_in_final@@OMP_3.1+0x1574>
   150b8:	add	x0, x20, #0x68
   150bc:	ldr	x1, [x20, #104]
   150c0:	str	x1, [x19, #80]
   150c4:	ldxr	x2, [x0]
   150c8:	cmp	x2, x1
   150cc:	b.ne	150d8 <omp_in_final@@OMP_3.1+0x1560>  // b.any
   150d0:	stlxr	w3, x19, [x0]
   150d4:	cbnz	w3, 150c4 <omp_in_final@@OMP_3.1+0x154c>
   150d8:	dmb	ish
   150dc:	b.ne	150bc <omp_in_final@@OMP_3.1+0x1544>  // b.any
   150e0:	ldp	x19, x20, [sp, #16]
   150e4:	ldp	x29, x30, [sp], #32
   150e8:	ret
   150ec:	mov	x0, x19
   150f0:	ldp	x19, x20, [sp, #16]
   150f4:	ldp	x29, x30, [sp], #32
   150f8:	b	8950 <free@plt>
   150fc:	stp	x29, x30, [sp, #-64]!
   15100:	mov	x29, sp
   15104:	stp	x21, x22, [sp, #32]
   15108:	mrs	x21, tpidr_el0
   1510c:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   15110:	ldr	x22, [x22, #4016]
   15114:	stp	x19, x20, [sp, #16]
   15118:	add	x19, x21, x22
   1511c:	ldr	x20, [x19, #16]
   15120:	str	x23, [sp, #48]
   15124:	mov	x23, x0
   15128:	cbnz	x20, 15160 <omp_in_final@@OMP_3.1+0x15e8>
   1512c:	mov	x0, #0x80                  	// #128
   15130:	bl	adb0 <fprintf@plt+0x2250>
   15134:	mov	x1, x23
   15138:	mov	x20, x0
   1513c:	mov	w2, #0x1                   	// #1
   15140:	bl	14ff0 <omp_in_final@@OMP_3.1+0x1478>
   15144:	str	x20, [x19, #24]
   15148:	mov	w0, #0x1                   	// #1
   1514c:	ldp	x19, x20, [sp, #16]
   15150:	ldp	x21, x22, [sp, #32]
   15154:	ldr	x23, [sp, #48]
   15158:	ldp	x29, x30, [sp], #64
   1515c:	ret
   15160:	ldr	x0, [x19, #24]
   15164:	str	x0, [x19, #32]
   15168:	add	x0, x0, #0x50
   1516c:	ldar	x1, [x0]
   15170:	cmp	x1, #0x2
   15174:	b.ls	1518c <omp_in_final@@OMP_3.1+0x1614>  // b.plast
   15178:	mov	x0, x1
   1517c:	add	x21, x21, x22
   15180:	str	x0, [x21, #24]
   15184:	mov	w0, #0x0                   	// #0
   15188:	b	1514c <omp_in_final@@OMP_3.1+0x15d4>
   1518c:	mov	x1, #0x1                   	// #1
   15190:	ldaxr	x2, [x0]
   15194:	cbnz	x2, 151a0 <omp_in_final@@OMP_3.1+0x1628>
   15198:	stxr	w3, x1, [x0]
   1519c:	cbnz	w3, 15190 <omp_in_final@@OMP_3.1+0x1618>
   151a0:	cmp	x2, #0x0
   151a4:	b.ne	151e8 <omp_in_final@@OMP_3.1+0x1670>  // b.any
   151a8:	ldr	x19, [x20, #96]
   151ac:	cbnz	x19, 151c4 <omp_in_final@@OMP_3.1+0x164c>
   151b0:	ldr	x0, [x20, #104]
   151b4:	cbz	x0, 151f4 <omp_in_final@@OMP_3.1+0x167c>
   151b8:	ldr	x19, [x0, #80]
   151bc:	cbz	x19, 151f4 <omp_in_final@@OMP_3.1+0x167c>
   151c0:	str	xzr, [x0, #80]
   151c4:	ldr	x0, [x19, #80]
   151c8:	str	x0, [x20, #96]
   151cc:	ldr	w2, [x20]
   151d0:	add	x21, x21, x22
   151d4:	mov	x1, x23
   151d8:	mov	x0, x19
   151dc:	bl	14ff0 <omp_in_final@@OMP_3.1+0x1478>
   151e0:	str	x19, [x21, #24]
   151e4:	b	15148 <omp_in_final@@OMP_3.1+0x15d0>
   151e8:	bl	163b8 <omp_get_num_procs@@OMP_1.0+0x744>
   151ec:	cbz	x0, 151a8 <omp_in_final@@OMP_3.1+0x1630>
   151f0:	b	1517c <omp_in_final@@OMP_3.1+0x1604>
   151f4:	ldr	w1, [x20, #4]
   151f8:	mov	x0, #0x40                  	// #64
   151fc:	lsl	w1, w1, #1
   15200:	str	w1, [x20, #4]
   15204:	lsl	x1, x1, #7
   15208:	bl	ae54 <fprintf@plt+0x22f4>
   1520c:	mov	x19, x0
   15210:	ldr	w2, [x20, #4]
   15214:	add	x3, x0, #0xd0
   15218:	ldr	x0, [x20, #312]
   1521c:	sub	w4, w2, #0x1
   15220:	str	x0, [x19, #56]
   15224:	add	x0, x19, #0x80
   15228:	str	x0, [x20, #96]
   1522c:	mov	w0, #0x1                   	// #1
   15230:	str	x19, [x20, #312]
   15234:	cmp	w0, w4
   15238:	b.cc	15260 <omp_in_final@@OMP_3.1+0x16e8>  // b.lo, b.ul, b.last
   1523c:	sub	w1, w2, #0x2
   15240:	cmp	w2, #0x1
   15244:	add	x1, x1, #0x1
   15248:	mov	x0, #0x80                  	// #128
   1524c:	lsl	x1, x1, #7
   15250:	csel	x1, x1, x0, ne  // ne = any
   15254:	add	x1, x19, x1
   15258:	str	xzr, [x1, #80]
   1525c:	b	151cc <omp_in_final@@OMP_3.1+0x1654>
   15260:	add	w0, w0, #0x1
   15264:	ubfiz	x1, x0, #7, #32
   15268:	add	x1, x19, x1
   1526c:	str	x1, [x3], #128
   15270:	b	15234 <omp_in_final@@OMP_3.1+0x16bc>
   15274:	stp	x29, x30, [sp, #-64]!
   15278:	mov	x29, sp
   1527c:	stp	x21, x22, [sp, #32]
   15280:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   15284:	ldr	x22, [x22, #4016]
   15288:	stp	x19, x20, [sp, #16]
   1528c:	mrs	x20, tpidr_el0
   15290:	add	x19, x20, x22
   15294:	ldr	x4, [x19, #16]
   15298:	str	x23, [sp, #48]
   1529c:	cbnz	x4, 152c4 <omp_in_final@@OMP_3.1+0x174c>
   152a0:	ldr	x1, [x19, #24]
   152a4:	mov	x0, #0x0                   	// #0
   152a8:	bl	15098 <omp_in_final@@OMP_3.1+0x1520>
   152ac:	str	xzr, [x19, #24]
   152b0:	ldp	x19, x20, [sp, #16]
   152b4:	ldp	x21, x22, [sp, #32]
   152b8:	ldr	x23, [sp, #48]
   152bc:	ldp	x29, x30, [sp], #64
   152c0:	ret
   152c4:	add	x23, x4, #0x80
   152c8:	mov	x0, x23
   152cc:	bl	14fc0 <omp_in_final@@OMP_3.1+0x1448>
   152d0:	mov	w21, w0
   152d4:	tbz	w21, #0, 152f0 <omp_in_final@@OMP_3.1+0x1778>
   152d8:	ldr	x1, [x19, #32]
   152dc:	cbz	x1, 152f0 <omp_in_final@@OMP_3.1+0x1778>
   152e0:	ldr	x0, [x19, #24]
   152e4:	str	x0, [x4, #88]
   152e8:	mov	x0, x4
   152ec:	bl	15098 <omp_in_final@@OMP_3.1+0x1520>
   152f0:	add	x20, x20, x22
   152f4:	mov	w1, w21
   152f8:	mov	x0, x23
   152fc:	bl	1614c <omp_get_num_procs@@OMP_1.0+0x4d8>
   15300:	str	xzr, [x20, #32]
   15304:	b	152b0 <omp_in_final@@OMP_3.1+0x1738>
   15308:	stp	x29, x30, [sp, #-48]!
   1530c:	mov	x29, sp
   15310:	stp	x21, x22, [sp, #32]
   15314:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   15318:	ldr	x22, [x22, #4016]
   1531c:	stp	x19, x20, [sp, #16]
   15320:	mrs	x20, tpidr_el0
   15324:	add	x5, x20, x22
   15328:	ldr	x4, [x5, #16]
   1532c:	add	x21, x4, #0x80
   15330:	mov	x0, x21
   15334:	bl	14fc0 <omp_in_final@@OMP_3.1+0x1448>
   15338:	mov	w19, w0
   1533c:	tbz	w19, #0, 15358 <omp_in_final@@OMP_3.1+0x17e0>
   15340:	ldr	x1, [x5, #32]
   15344:	cbz	x1, 15358 <omp_in_final@@OMP_3.1+0x17e0>
   15348:	ldr	x0, [x5, #24]
   1534c:	str	x0, [x4, #88]
   15350:	mov	x0, x4
   15354:	bl	15098 <omp_in_final@@OMP_3.1+0x1520>
   15358:	add	x20, x20, x22
   1535c:	mov	x0, x21
   15360:	ldp	x21, x22, [sp, #32]
   15364:	mov	w1, w19
   15368:	str	xzr, [x20, #32]
   1536c:	ldp	x19, x20, [sp, #16]
   15370:	ldp	x29, x30, [sp], #48
   15374:	b	1625c <omp_get_num_procs@@OMP_1.0+0x5e8>
   15378:	stp	x29, x30, [sp, #-48]!
   1537c:	mov	x29, sp
   15380:	str	x21, [sp, #32]
   15384:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   15388:	ldr	x21, [x21, #4016]
   1538c:	stp	x19, x20, [sp, #16]
   15390:	mrs	x20, tpidr_el0
   15394:	add	x19, x20, x21
   15398:	ldp	x0, x1, [x19, #16]
   1539c:	cbnz	x0, 153b8 <omp_in_final@@OMP_3.1+0x1840>
   153a0:	bl	15098 <omp_in_final@@OMP_3.1+0x1520>
   153a4:	str	xzr, [x19, #24]
   153a8:	ldp	x19, x20, [sp, #16]
   153ac:	ldr	x21, [sp, #32]
   153b0:	ldp	x29, x30, [sp], #48
   153b4:	ret
   153b8:	ldr	x2, [x19, #32]
   153bc:	cbz	x2, 153a8 <omp_in_final@@OMP_3.1+0x1830>
   153c0:	add	x1, x1, #0x44
   153c4:	ldxr	w2, [x1]
   153c8:	add	w2, w2, #0x1
   153cc:	stlxr	w3, w2, [x1]
   153d0:	cbnz	w3, 153c4 <omp_in_final@@OMP_3.1+0x184c>
   153d4:	dmb	ish
   153d8:	ldr	w1, [x0]
   153dc:	cmp	w1, w2
   153e0:	b.ne	153f4 <omp_in_final@@OMP_3.1+0x187c>  // b.any
   153e4:	ldr	x1, [x19, #24]
   153e8:	str	x1, [x0, #88]
   153ec:	ldr	x1, [x19, #32]
   153f0:	bl	15098 <omp_in_final@@OMP_3.1+0x1520>
   153f4:	add	x20, x20, x21
   153f8:	str	xzr, [x20, #32]
   153fc:	b	153a8 <omp_in_final@@OMP_3.1+0x1830>
   15400:	mov	x1, x0
   15404:	ldxr	w2, [x1]
   15408:	stlxr	w3, wzr, [x1]
   1540c:	cbnz	w3, 15404 <omp_in_final@@OMP_3.1+0x188c>
   15410:	tbz	w2, #31, 15418 <omp_in_final@@OMP_3.1+0x18a0>
   15414:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
   15418:	ret

000000000001541c <omp_init_lock@@OMP_3.0>:
   1541c:	str	wzr, [x0]
   15420:	ret

0000000000015424 <omp_destroy_lock@OMP_1.0>:
   15424:	ret

0000000000015428 <omp_set_lock@@OMP_3.0>:
   15428:	mov	x2, x0
   1542c:	mov	w3, #0x1                   	// #1
   15430:	ldaxr	w1, [x2]
   15434:	cbnz	w1, 15440 <omp_set_lock@@OMP_3.0+0x18>
   15438:	stxr	w4, w3, [x2]
   1543c:	cbnz	w4, 15430 <omp_set_lock@@OMP_3.0+0x8>
   15440:	cmp	w1, #0x0
   15444:	b.eq	1544c <omp_set_lock@@OMP_3.0+0x24>  // b.none
   15448:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
   1544c:	ret

0000000000015450 <omp_unset_lock@@OMP_3.0>:
   15450:	b	15400 <omp_in_final@@OMP_3.1+0x1888>

0000000000015454 <omp_test_lock@OMP_1.0>:
   15454:	mov	w1, #0x1                   	// #1
   15458:	ldaxr	w2, [x0]
   1545c:	cbnz	w2, 15468 <omp_test_lock@OMP_1.0+0x14>
   15460:	stxr	w3, w1, [x0]
   15464:	cbnz	w3, 15458 <omp_test_lock@OMP_1.0+0x4>
   15468:	cmp	w2, #0x0
   1546c:	cset	w0, eq  // eq = none
   15470:	ret

0000000000015474 <omp_init_nest_lock@@OMP_3.0>:
   15474:	stp	xzr, xzr, [x0]
   15478:	ret

000000000001547c <omp_destroy_nest_lock@@OMP_3.0>:
   1547c:	ret

0000000000015480 <omp_set_nest_lock@@OMP_3.0>:
   15480:	stp	x29, x30, [sp, #-32]!
   15484:	mrs	x1, tpidr_el0
   15488:	mov	x29, sp
   1548c:	stp	x19, x20, [sp, #16]
   15490:	mov	x19, x0
   15494:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   15498:	ldr	x0, [x0, #4016]
   1549c:	add	x0, x1, x0
   154a0:	ldr	x20, [x0, #80]
   154a4:	cbz	x20, 154f8 <omp_set_nest_lock@@OMP_3.0+0x78>
   154a8:	add	x20, x20, #0x90
   154ac:	ldr	x0, [x19, #8]
   154b0:	cmp	x0, x20
   154b4:	b.eq	154e0 <omp_set_nest_lock@@OMP_3.0+0x60>  // b.none
   154b8:	mov	w0, #0x1                   	// #1
   154bc:	ldaxr	w1, [x19]
   154c0:	cbnz	w1, 154cc <omp_set_nest_lock@@OMP_3.0+0x4c>
   154c4:	stxr	w2, w0, [x19]
   154c8:	cbnz	w2, 154bc <omp_set_nest_lock@@OMP_3.0+0x3c>
   154cc:	cmp	w1, #0x0
   154d0:	b.eq	154dc <omp_set_nest_lock@@OMP_3.0+0x5c>  // b.none
   154d4:	mov	x0, x19
   154d8:	bl	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
   154dc:	str	x20, [x19, #8]
   154e0:	ldr	w0, [x19, #4]
   154e4:	add	w0, w0, #0x1
   154e8:	str	w0, [x19, #4]
   154ec:	ldp	x19, x20, [sp, #16]
   154f0:	ldp	x29, x30, [sp], #32
   154f4:	ret
   154f8:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
   154fc:	mov	x20, x0
   15500:	b	154ac <omp_set_nest_lock@@OMP_3.0+0x2c>

0000000000015504 <omp_unset_nest_lock@@OMP_3.0>:
   15504:	ldr	w2, [x0, #4]
   15508:	sub	w2, w2, #0x1
   1550c:	str	w2, [x0, #4]
   15510:	cbnz	w2, 1551c <omp_unset_nest_lock@@OMP_3.0+0x18>
   15514:	str	xzr, [x0, #8]
   15518:	b	15400 <omp_in_final@@OMP_3.1+0x1888>
   1551c:	ret

0000000000015520 <omp_test_nest_lock@@OMP_3.0>:
   15520:	stp	x29, x30, [sp, #-32]!
   15524:	mrs	x1, tpidr_el0
   15528:	mov	x29, sp
   1552c:	str	x19, [sp, #16]
   15530:	mov	x19, x0
   15534:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   15538:	ldr	x0, [x0, #4016]
   1553c:	add	x0, x1, x0
   15540:	ldr	x1, [x0, #80]
   15544:	cbz	x1, 15570 <omp_test_nest_lock@@OMP_3.0+0x50>
   15548:	add	x1, x1, #0x90
   1554c:	ldr	x0, [x19, #8]
   15550:	cmp	x0, x1
   15554:	b.ne	1557c <omp_test_nest_lock@@OMP_3.0+0x5c>  // b.any
   15558:	ldr	w1, [x19, #4]
   1555c:	add	w0, w1, #0x1
   15560:	str	w0, [x19, #4]
   15564:	ldr	x19, [sp, #16]
   15568:	ldp	x29, x30, [sp], #32
   1556c:	ret
   15570:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
   15574:	mov	x1, x0
   15578:	b	1554c <omp_test_nest_lock@@OMP_3.0+0x2c>
   1557c:	mov	w0, #0x1                   	// #1
   15580:	ldaxr	w2, [x19]
   15584:	cbnz	w2, 15590 <omp_test_nest_lock@@OMP_3.0+0x70>
   15588:	stxr	w3, w0, [x19]
   1558c:	cbnz	w3, 15580 <omp_test_nest_lock@@OMP_3.0+0x60>
   15590:	cmp	w2, #0x0
   15594:	b.ne	155a0 <omp_test_nest_lock@@OMP_3.0+0x80>  // b.any
   15598:	str	x1, [x19, #8]
   1559c:	b	15560 <omp_test_nest_lock@@OMP_3.0+0x40>
   155a0:	mov	w0, #0x0                   	// #0
   155a4:	b	15564 <omp_test_nest_lock@@OMP_3.0+0x44>

00000000000155a8 <omp_init_nest_lock@OMP_1.0>:
   155a8:	str	xzr, [x0]
   155ac:	ret

00000000000155b0 <omp_destroy_nest_lock@OMP_1.0>:
   155b0:	ret

00000000000155b4 <omp_set_nest_lock@OMP_1.0>:
   155b4:	stp	x29, x30, [sp, #-64]!
   155b8:	mov	x29, sp
   155bc:	stp	x21, x22, [sp, #32]
   155c0:	mrs	x22, tpidr_el0
   155c4:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   155c8:	ldr	x21, [x21, #4000]
   155cc:	stp	x19, x20, [sp, #16]
   155d0:	mov	x19, x0
   155d4:	stp	x23, x24, [sp, #48]
   155d8:	ldr	w20, [x22, x21]
   155dc:	cbnz	w20, 155f0 <omp_set_nest_lock@OMP_1.0+0x3c>
   155e0:	mov	x0, #0xb2                  	// #178
   155e4:	bl	8b40 <syscall@plt>
   155e8:	mov	w20, w0
   155ec:	str	w0, [x22, x21]
   155f0:	adrp	x23, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   155f4:	add	x23, x23, #0x338
   155f8:	adrp	x24, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   155fc:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15600:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15604:	ldaxr	w21, [x19]
   15608:	cbnz	w21, 15614 <omp_set_nest_lock@OMP_1.0+0x60>
   1560c:	stxr	w0, w20, [x19]
   15610:	cbnz	w0, 15604 <omp_set_nest_lock@OMP_1.0+0x50>
   15614:	cmp	w21, #0x0
   15618:	b.ne	15638 <omp_set_nest_lock@OMP_1.0+0x84>  // b.any
   1561c:	mov	w0, #0x1                   	// #1
   15620:	str	w0, [x19, #4]
   15624:	ldp	x19, x20, [sp, #16]
   15628:	ldp	x21, x22, [sp, #32]
   1562c:	ldp	x23, x24, [sp, #48]
   15630:	ldp	x29, x30, [sp], #64
   15634:	ret
   15638:	cmp	w21, w20
   1563c:	b.ne	1564c <omp_set_nest_lock@OMP_1.0+0x98>  // b.any
   15640:	ldr	w0, [x19, #4]
   15644:	add	w0, w0, #0x1
   15648:	b	15620 <omp_set_nest_lock@OMP_1.0+0x6c>
   1564c:	ldr	x1, [x24, #1592]
   15650:	ldr	x4, [x23]
   15654:	ldr	x0, [x2, #752]
   15658:	cmp	x4, x0
   1565c:	b.ls	15664 <omp_set_nest_lock@OMP_1.0+0xb0>  // b.plast
   15660:	ldr	x1, [x3, #1608]
   15664:	mov	x0, #0x0                   	// #0
   15668:	cmp	x0, x1
   1566c:	b.ne	156d4 <omp_set_nest_lock@OMP_1.0+0x120>  // b.any
   15670:	adrp	x22, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15674:	mov	w3, w21
   15678:	mov	x1, x19
   1567c:	mov	x4, #0x0                   	// #0
   15680:	ldr	w2, [x22, #840]
   15684:	mov	x0, #0x62                  	// #98
   15688:	bl	8b40 <syscall@plt>
   1568c:	tbz	w0, #31, 155fc <omp_set_nest_lock@OMP_1.0+0x48>
   15690:	bl	8b20 <__errno_location@plt>
   15694:	ldr	w0, [x0]
   15698:	cmp	w0, #0x26
   1569c:	b.ne	155fc <omp_set_nest_lock@OMP_1.0+0x48>  // b.any
   156a0:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   156a4:	ldr	w2, [x22, #840]
   156a8:	mov	w3, w21
   156ac:	mov	x4, #0x0                   	// #0
   156b0:	ldr	w0, [x1, #844]
   156b4:	and	w2, w2, #0xffffff7f
   156b8:	str	w2, [x22, #840]
   156bc:	and	w0, w0, #0xffffff7f
   156c0:	str	w0, [x1, #844]
   156c4:	mov	x1, x19
   156c8:	mov	x0, #0x62                  	// #98
   156cc:	bl	8b40 <syscall@plt>
   156d0:	b	155fc <omp_set_nest_lock@OMP_1.0+0x48>
   156d4:	ldr	w4, [x19]
   156d8:	cmp	w21, w4
   156dc:	b.ne	15604 <omp_set_nest_lock@OMP_1.0+0x50>  // b.any
   156e0:	add	x0, x0, #0x1
   156e4:	b	15668 <omp_set_nest_lock@OMP_1.0+0xb4>

00000000000156e8 <omp_unset_nest_lock@OMP_1.0>:
   156e8:	stp	x29, x30, [sp, #-32]!
   156ec:	mov	x29, sp
   156f0:	stp	x19, x20, [sp, #16]
   156f4:	mov	x19, x0
   156f8:	ldr	w0, [x0, #4]
   156fc:	sub	w0, w0, #0x1
   15700:	str	w0, [x19, #4]
   15704:	cbnz	w0, 1576c <omp_unset_nest_lock@OMP_1.0+0x84>
   15708:	stlr	wzr, [x19]
   1570c:	mov	x1, x19
   15710:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15714:	mov	w3, #0x1                   	// #1
   15718:	mov	x0, #0x62                  	// #98
   1571c:	ldr	w2, [x20, #844]
   15720:	bl	8b40 <syscall@plt>
   15724:	tbz	w0, #31, 1576c <omp_unset_nest_lock@OMP_1.0+0x84>
   15728:	bl	8b20 <__errno_location@plt>
   1572c:	ldr	w0, [x0]
   15730:	cmp	w0, #0x26
   15734:	b.ne	1576c <omp_unset_nest_lock@OMP_1.0+0x84>  // b.any
   15738:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1573c:	ldr	w2, [x20, #844]
   15740:	mov	w3, #0x1                   	// #1
   15744:	ldr	w0, [x1, #840]
   15748:	and	w2, w2, #0xffffff7f
   1574c:	str	w2, [x20, #844]
   15750:	and	w0, w0, #0xffffff7f
   15754:	str	w0, [x1, #840]
   15758:	mov	x1, x19
   1575c:	mov	x0, #0x62                  	// #98
   15760:	ldp	x19, x20, [sp, #16]
   15764:	ldp	x29, x30, [sp], #32
   15768:	b	8b40 <syscall@plt>
   1576c:	ldp	x19, x20, [sp, #16]
   15770:	ldp	x29, x30, [sp], #32
   15774:	ret

0000000000015778 <omp_test_nest_lock@OMP_1.0>:
   15778:	stp	x29, x30, [sp, #-48]!
   1577c:	mov	x29, sp
   15780:	stp	x19, x20, [sp, #16]
   15784:	mov	x19, x0
   15788:	adrp	x20, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1578c:	ldr	x20, [x20, #4000]
   15790:	str	x21, [sp, #32]
   15794:	mrs	x21, tpidr_el0
   15798:	ldr	w1, [x21, x20]
   1579c:	cbnz	w1, 157b0 <omp_test_nest_lock@OMP_1.0+0x38>
   157a0:	mov	x0, #0xb2                  	// #178
   157a4:	bl	8b40 <syscall@plt>
   157a8:	mov	w1, w0
   157ac:	str	w0, [x21, x20]
   157b0:	ldaxr	w0, [x19]
   157b4:	cbnz	w0, 157c0 <omp_test_nest_lock@OMP_1.0+0x48>
   157b8:	stxr	w2, w1, [x19]
   157bc:	cbnz	w2, 157b0 <omp_test_nest_lock@OMP_1.0+0x38>
   157c0:	cmp	w0, #0x0
   157c4:	b.ne	157e0 <omp_test_nest_lock@OMP_1.0+0x68>  // b.any
   157c8:	mov	w0, #0x1                   	// #1
   157cc:	str	w0, [x19, #4]
   157d0:	ldp	x19, x20, [sp, #16]
   157d4:	ldr	x21, [sp, #32]
   157d8:	ldp	x29, x30, [sp], #48
   157dc:	ret
   157e0:	cmp	w0, w1
   157e4:	b.ne	157f4 <omp_test_nest_lock@OMP_1.0+0x7c>  // b.any
   157e8:	ldr	w1, [x19, #4]
   157ec:	add	w0, w1, #0x1
   157f0:	b	157cc <omp_test_nest_lock@OMP_1.0+0x54>
   157f4:	mov	w0, #0x0                   	// #0
   157f8:	b	157d0 <omp_test_nest_lock@OMP_1.0+0x58>
   157fc:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15800:	ldr	x3, [x2, #1592]
   15804:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15808:	add	x2, x2, #0x338
   1580c:	ldr	x4, [x2]
   15810:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15814:	ldr	x2, [x2, #752]
   15818:	cmp	x4, x2
   1581c:	b.ls	15828 <omp_test_nest_lock@OMP_1.0+0xb0>  // b.plast
   15820:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15824:	ldr	x3, [x2, #1608]
   15828:	mov	x2, #0x0                   	// #0
   1582c:	cmp	x2, x3
   15830:	b.ne	1583c <omp_test_nest_lock@OMP_1.0+0xc4>  // b.any
   15834:	mov	w0, #0x1                   	// #1
   15838:	ret
   1583c:	ldr	w4, [x0]
   15840:	cmp	w4, w1
   15844:	b.ne	15850 <omp_test_nest_lock@OMP_1.0+0xd8>  // b.any
   15848:	add	x2, x2, #0x1
   1584c:	b	1582c <omp_test_nest_lock@OMP_1.0+0xb4>
   15850:	mov	w0, #0x0                   	// #0
   15854:	b	15838 <omp_test_nest_lock@OMP_1.0+0xc0>
   15858:	stp	x29, x30, [sp, #-48]!
   1585c:	mov	x1, x0
   15860:	mov	x4, #0x0                   	// #0
   15864:	mov	x29, sp
   15868:	stp	x19, x20, [sp, #16]
   1586c:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15870:	mov	x19, x0
   15874:	ldr	w2, [x20, #840]
   15878:	mov	w3, #0xffffffff            	// #-1
   1587c:	mov	x0, #0x62                  	// #98
   15880:	str	x21, [sp, #32]
   15884:	bl	8b40 <syscall@plt>
   15888:	tbz	w0, #31, 158d8 <omp_test_nest_lock@OMP_1.0+0x160>
   1588c:	bl	8b20 <__errno_location@plt>
   15890:	ldr	w0, [x0]
   15894:	cmp	w0, #0x26
   15898:	b.ne	158d8 <omp_test_nest_lock@OMP_1.0+0x160>  // b.any
   1589c:	add	x21, x20, #0x348
   158a0:	ldr	w2, [x20, #840]
   158a4:	mov	x1, x19
   158a8:	mov	x4, #0x0                   	// #0
   158ac:	and	w2, w2, #0xffffff7f
   158b0:	str	w2, [x20, #840]
   158b4:	ldr	w0, [x21, #4]
   158b8:	mov	w3, #0xffffffff            	// #-1
   158bc:	ldp	x19, x20, [sp, #16]
   158c0:	and	w0, w0, #0xffffff7f
   158c4:	str	w0, [x21, #4]
   158c8:	mov	x0, #0x62                  	// #98
   158cc:	ldr	x21, [sp, #32]
   158d0:	ldp	x29, x30, [sp], #48
   158d4:	b	8b40 <syscall@plt>
   158d8:	ldp	x19, x20, [sp, #16]
   158dc:	ldr	x21, [sp, #32]
   158e0:	ldp	x29, x30, [sp], #48
   158e4:	ret
   158e8:	stp	x29, x30, [sp, #-32]!
   158ec:	mov	x29, sp
   158f0:	stp	x19, x20, [sp, #16]
   158f4:	mov	x19, x0
   158f8:	cmp	w1, #0x1
   158fc:	b.ne	15928 <omp_test_nest_lock@OMP_1.0+0x1b0>  // b.any
   15900:	mov	x0, x19
   15904:	bl	157fc <omp_test_nest_lock@OMP_1.0+0x84>
   15908:	cbz	w0, 15958 <omp_test_nest_lock@OMP_1.0+0x1e0>
   1590c:	mov	w1, #0xffffffff            	// #-1
   15910:	ldaxr	w0, [x19]
   15914:	stxr	w2, w1, [x19]
   15918:	cbnz	w2, 15910 <omp_test_nest_lock@OMP_1.0+0x198>
   1591c:	cbz	w0, 15974 <omp_test_nest_lock@OMP_1.0+0x1fc>
   15920:	mov	x0, x19
   15924:	bl	15858 <omp_test_nest_lock@OMP_1.0+0xe0>
   15928:	mov	w20, #0xffffffff            	// #-1
   1592c:	ldaxr	w0, [x19]
   15930:	stxr	w1, w20, [x19]
   15934:	cbnz	w1, 1592c <omp_test_nest_lock@OMP_1.0+0x1b4>
   15938:	cbz	w0, 15974 <omp_test_nest_lock@OMP_1.0+0x1fc>
   1593c:	mov	x0, x19
   15940:	mov	w1, #0xffffffff            	// #-1
   15944:	bl	157fc <omp_test_nest_lock@OMP_1.0+0x84>
   15948:	cbz	w0, 1592c <omp_test_nest_lock@OMP_1.0+0x1b4>
   1594c:	mov	x0, x19
   15950:	bl	15858 <omp_test_nest_lock@OMP_1.0+0xe0>
   15954:	b	1592c <omp_test_nest_lock@OMP_1.0+0x1b4>
   15958:	ldaxr	w0, [x19]
   1595c:	cbnz	w0, 15968 <omp_test_nest_lock@OMP_1.0+0x1f0>
   15960:	stxr	w2, w1, [x19]
   15964:	cbnz	w2, 15958 <omp_test_nest_lock@OMP_1.0+0x1e0>
   15968:	cmp	w0, #0x0
   1596c:	mov	w1, w0
   15970:	b.ne	158f8 <omp_test_nest_lock@OMP_1.0+0x180>  // b.any
   15974:	ldp	x19, x20, [sp, #16]
   15978:	ldp	x29, x30, [sp], #32
   1597c:	ret
   15980:	stp	x29, x30, [sp, #-48]!
   15984:	mov	x1, x0
   15988:	mov	w3, #0x1                   	// #1
   1598c:	mov	x29, sp
   15990:	stp	x19, x20, [sp, #16]
   15994:	mov	x19, x0
   15998:	mov	x0, #0x62                  	// #98
   1599c:	str	x21, [sp, #32]
   159a0:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   159a4:	add	x20, x21, #0x348
   159a8:	ldr	w2, [x20, #4]
   159ac:	bl	8b40 <syscall@plt>
   159b0:	tbz	w0, #31, 159f8 <omp_test_nest_lock@OMP_1.0+0x280>
   159b4:	bl	8b20 <__errno_location@plt>
   159b8:	ldr	w0, [x0]
   159bc:	cmp	w0, #0x26
   159c0:	b.ne	159f8 <omp_test_nest_lock@OMP_1.0+0x280>  // b.any
   159c4:	ldr	w0, [x21, #840]
   159c8:	mov	x1, x19
   159cc:	ldr	w2, [x20, #4]
   159d0:	mov	w3, #0x1                   	// #1
   159d4:	and	w0, w0, #0xffffff7f
   159d8:	str	w0, [x21, #840]
   159dc:	and	w2, w2, #0xffffff7f
   159e0:	str	w2, [x20, #4]
   159e4:	ldp	x19, x20, [sp, #16]
   159e8:	mov	x0, #0x62                  	// #98
   159ec:	ldr	x21, [sp, #32]
   159f0:	ldp	x29, x30, [sp], #48
   159f4:	b	8b40 <syscall@plt>
   159f8:	ldp	x19, x20, [sp, #16]
   159fc:	ldr	x21, [sp, #32]
   15a00:	ldp	x29, x30, [sp], #48
   15a04:	ret
   15a08:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15a0c:	ldr	x0, [x0, #1576]
   15a10:	cbnz	x0, 15a70 <omp_test_nest_lock@OMP_1.0+0x2f8>
   15a14:	stp	x29, x30, [sp, #-48]!
   15a18:	mov	x29, sp
   15a1c:	stp	x19, x20, [sp, #16]
   15a20:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15a24:	str	x21, [sp, #32]
   15a28:	ldr	x21, [x20, #1720]
   15a2c:	cbz	x21, 15a7c <omp_test_nest_lock@OMP_1.0+0x304>
   15a30:	bl	8af0 <pthread_self@plt>
   15a34:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15a38:	mov	x2, x21
   15a3c:	ldr	x19, [x1, #1384]
   15a40:	mov	x1, x19
   15a44:	bl	89b0 <pthread_getaffinity_np@plt>
   15a48:	cbnz	w0, 15a7c <omp_test_nest_lock@OMP_1.0+0x304>
   15a4c:	ldr	x1, [x20, #1720]
   15a50:	mov	x0, x19
   15a54:	bl	8a30 <__sched_cpucount@plt>
   15a58:	cmp	w0, #0x0
   15a5c:	csinc	w0, w0, wzr, ne  // ne = any
   15a60:	ldp	x19, x20, [sp, #16]
   15a64:	ldr	x21, [sp, #32]
   15a68:	ldp	x29, x30, [sp], #48
   15a6c:	ret
   15a70:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15a74:	ldr	w0, [x0, #752]
   15a78:	ret
   15a7c:	mov	w0, #0x54                  	// #84
   15a80:	bl	8a90 <sysconf@plt>
   15a84:	b	15a60 <omp_test_nest_lock@OMP_1.0+0x2e8>
   15a88:	stp	x29, x30, [sp, #-16]!
   15a8c:	mov	x29, sp
   15a90:	bl	8a30 <__sched_cpucount@plt>
   15a94:	sxtw	x0, w0
   15a98:	ldp	x29, x30, [sp], #16
   15a9c:	ret
   15aa0:	stp	x29, x30, [sp, #-64]!
   15aa4:	mov	w0, #0x53                  	// #83
   15aa8:	mov	x29, sp
   15aac:	stp	x19, x20, [sp, #16]
   15ab0:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15ab4:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15ab8:	stp	x21, x22, [sp, #32]
   15abc:	mov	x22, #0x80                  	// #128
   15ac0:	stp	x23, x24, [sp, #48]
   15ac4:	bl	8a90 <sysconf@plt>
   15ac8:	add	x0, x0, #0x3f
   15acc:	lsr	x0, x0, #6
   15ad0:	lsl	x0, x0, #3
   15ad4:	str	x0, [x20, #1712]
   15ad8:	bl	adb0 <fprintf@plt+0x2250>
   15adc:	str	x0, [x19, #1720]
   15ae0:	bl	8af0 <pthread_self@plt>
   15ae4:	mov	x21, x0
   15ae8:	ldr	x2, [x19, #1720]
   15aec:	add	x23, x19, #0x6b8
   15af0:	ldr	x1, [x20, #1712]
   15af4:	add	x24, x20, #0x6b0
   15af8:	mov	x0, x21
   15afc:	bl	89b0 <pthread_getaffinity_np@plt>
   15b00:	cbnz	w0, 15b80 <omp_test_nest_lock@OMP_1.0+0x408>
   15b04:	ldr	x1, [x23]
   15b08:	ldr	x0, [x24]
   15b0c:	bl	8a30 <__sched_cpucount@plt>
   15b10:	sxtw	x0, w0
   15b14:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15b18:	str	x0, [x1, #704]
   15b1c:	cbz	x0, 15bbc <omp_test_nest_lock@OMP_1.0+0x444>
   15b20:	ldr	x2, [x24]
   15b24:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15b28:	ldr	x4, [x23]
   15b2c:	str	x2, [x0, #1384]
   15b30:	lsl	x0, x2, #3
   15b34:	cbnz	x0, 15b5c <omp_test_nest_lock@OMP_1.0+0x3e4>
   15b38:	add	x0, x0, #0x3f
   15b3c:	lsr	x0, x0, #6
   15b40:	lsl	x0, x0, #3
   15b44:	str	x0, [x20, #1712]
   15b48:	ldp	x19, x20, [sp, #16]
   15b4c:	ldp	x21, x22, [sp, #32]
   15b50:	ldp	x23, x24, [sp, #48]
   15b54:	ldp	x29, x30, [sp], #64
   15b58:	ret
   15b5c:	sub	x1, x0, #0x1
   15b60:	cmp	x2, x1, lsr #3
   15b64:	b.ls	15b78 <omp_test_nest_lock@OMP_1.0+0x400>  // b.plast
   15b68:	lsr	x3, x1, #6
   15b6c:	ldr	x3, [x4, x3, lsl #3]
   15b70:	lsr	x3, x3, x1
   15b74:	tbnz	w3, #0, 15b38 <omp_test_nest_lock@OMP_1.0+0x3c0>
   15b78:	mov	x0, x1
   15b7c:	b	15b34 <omp_test_nest_lock@OMP_1.0+0x3bc>
   15b80:	cmp	w0, #0x16
   15b84:	b.ne	15bbc <omp_test_nest_lock@OMP_1.0+0x444>  // b.any
   15b88:	ldr	x0, [x20, #1712]
   15b8c:	cmp	x0, #0x7f
   15b90:	lsl	x1, x0, #1
   15b94:	csel	x1, x1, x22, hi  // hi = pmore
   15b98:	str	x1, [x20, #1712]
   15b9c:	ldr	x0, [x19, #1720]
   15ba0:	cmp	x1, #0x3ff
   15ba4:	b.hi	15bb4 <omp_test_nest_lock@OMP_1.0+0x43c>  // b.pmore
   15ba8:	bl	ae20 <fprintf@plt+0x22c0>
   15bac:	str	x0, [x19, #1720]
   15bb0:	b	15ae8 <omp_test_nest_lock@OMP_1.0+0x370>
   15bb4:	bl	8850 <realloc@plt>
   15bb8:	cbnz	x0, 15bac <omp_test_nest_lock@OMP_1.0+0x434>
   15bbc:	str	xzr, [x20, #1712]
   15bc0:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15bc4:	mov	x0, #0x1                   	// #1
   15bc8:	str	x0, [x20, #704]
   15bcc:	ldr	x0, [x19, #1720]
   15bd0:	bl	8950 <free@plt>
   15bd4:	str	xzr, [x19, #1720]
   15bd8:	mov	w0, #0x54                  	// #84
   15bdc:	bl	8a90 <sysconf@plt>
   15be0:	str	x0, [x20, #704]
   15be4:	b	15b48 <omp_test_nest_lock@OMP_1.0+0x3d0>
   15be8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   15bec:	ldr	x0, [x0, #4016]
   15bf0:	mrs	x1, tpidr_el0
   15bf4:	stp	x29, x30, [sp, #-64]!
   15bf8:	add	x0, x1, x0
   15bfc:	mov	x29, sp
   15c00:	ldr	x1, [x0, #80]
   15c04:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15c08:	add	x0, x0, #0x2c0
   15c0c:	str	x20, [sp, #16]
   15c10:	add	x2, x1, #0x90
   15c14:	cmp	x1, #0x0
   15c18:	csel	x0, x0, x2, eq  // eq = none
   15c1c:	ldr	x20, [x0]
   15c20:	bl	15a08 <omp_test_nest_lock@OMP_1.0+0x290>
   15c24:	mov	w1, #0x3                   	// #3
   15c28:	cmp	w20, w0
   15c2c:	csel	w20, w20, w0, ls  // ls = plast
   15c30:	add	x0, sp, #0x28
   15c34:	bl	86c0 <getloadavg@plt>
   15c38:	cmp	w0, #0x3
   15c3c:	b.ne	15c6c <omp_test_nest_lock@OMP_1.0+0x4f4>  // b.any
   15c40:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   15c44:	ldr	d0, [sp, #56]
   15c48:	ldr	d1, [x0, #2072]
   15c4c:	fadd	d0, d0, d1
   15c50:	fcvtzu	w1, d0
   15c54:	sub	w0, w20, w1
   15c58:	cmp	w1, w20
   15c5c:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
   15c60:	ldr	x20, [sp, #16]
   15c64:	ldp	x29, x30, [sp], #64
   15c68:	ret
   15c6c:	mov	w1, #0x0                   	// #0
   15c70:	b	15c54 <omp_test_nest_lock@OMP_1.0+0x4dc>

0000000000015c74 <omp_get_num_procs@@OMP_1.0>:
   15c74:	b	15a08 <omp_test_nest_lock@OMP_1.0+0x290>
   15c78:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15c7c:	ldr	x3, [x2, #1592]
   15c80:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15c84:	add	x2, x2, #0x338
   15c88:	ldr	x4, [x2]
   15c8c:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15c90:	ldr	x2, [x2, #752]
   15c94:	cmp	x4, x2
   15c98:	b.ls	15ca4 <omp_get_num_procs@@OMP_1.0+0x30>  // b.plast
   15c9c:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15ca0:	ldr	x3, [x2, #1608]
   15ca4:	mov	x2, #0x0                   	// #0
   15ca8:	cmp	x2, x3
   15cac:	b.ne	15cb8 <omp_get_num_procs@@OMP_1.0+0x44>  // b.any
   15cb0:	mov	w0, #0x1                   	// #1
   15cb4:	ret
   15cb8:	ldr	w4, [x0]
   15cbc:	cmp	w4, w1
   15cc0:	b.ne	15ccc <omp_get_num_procs@@OMP_1.0+0x58>  // b.any
   15cc4:	add	x2, x2, #0x1
   15cc8:	b	15ca8 <omp_get_num_procs@@OMP_1.0+0x34>
   15ccc:	mov	w0, #0x0                   	// #0
   15cd0:	b	15cb4 <omp_get_num_procs@@OMP_1.0+0x40>
   15cd4:	stp	x29, x30, [sp, #-32]!
   15cd8:	mov	x1, x0
   15cdc:	mov	x4, #0x0                   	// #0
   15ce0:	mov	x29, sp
   15ce4:	stp	x19, x20, [sp, #16]
   15ce8:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15cec:	mov	x19, x0
   15cf0:	ldr	w2, [x20, #840]
   15cf4:	mov	w3, #0x80000000            	// #-2147483648
   15cf8:	mov	x0, #0x62                  	// #98
   15cfc:	bl	8b40 <syscall@plt>
   15d00:	tbz	w0, #31, 15d4c <omp_get_num_procs@@OMP_1.0+0xd8>
   15d04:	bl	8b20 <__errno_location@plt>
   15d08:	ldr	w0, [x0]
   15d0c:	cmp	w0, #0x26
   15d10:	b.ne	15d4c <omp_get_num_procs@@OMP_1.0+0xd8>  // b.any
   15d14:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15d18:	ldr	w2, [x20, #840]
   15d1c:	mov	x4, #0x0                   	// #0
   15d20:	mov	w3, #0x80000000            	// #-2147483648
   15d24:	ldr	w0, [x1, #844]
   15d28:	and	w2, w2, #0xffffff7f
   15d2c:	str	w2, [x20, #840]
   15d30:	and	w0, w0, #0xffffff7f
   15d34:	str	w0, [x1, #844]
   15d38:	mov	x1, x19
   15d3c:	mov	x0, #0x62                  	// #98
   15d40:	ldp	x19, x20, [sp, #16]
   15d44:	ldp	x29, x30, [sp], #32
   15d48:	b	8b40 <syscall@plt>
   15d4c:	ldp	x19, x20, [sp, #16]
   15d50:	ldp	x29, x30, [sp], #32
   15d54:	ret
   15d58:	stp	x29, x30, [sp, #-32]!
   15d5c:	mov	x1, x0
   15d60:	mov	w3, #0x1                   	// #1
   15d64:	mov	x29, sp
   15d68:	stp	x19, x20, [sp, #16]
   15d6c:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15d70:	mov	x19, x0
   15d74:	ldr	w2, [x20, #844]
   15d78:	mov	x0, #0x62                  	// #98
   15d7c:	bl	8b40 <syscall@plt>
   15d80:	tbz	w0, #31, 15dc8 <omp_get_num_procs@@OMP_1.0+0x154>
   15d84:	bl	8b20 <__errno_location@plt>
   15d88:	ldr	w0, [x0]
   15d8c:	cmp	w0, #0x26
   15d90:	b.ne	15dc8 <omp_get_num_procs@@OMP_1.0+0x154>  // b.any
   15d94:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15d98:	ldr	w2, [x20, #844]
   15d9c:	mov	w3, #0x1                   	// #1
   15da0:	ldr	w0, [x1, #840]
   15da4:	and	w2, w2, #0xffffff7f
   15da8:	str	w2, [x20, #844]
   15dac:	and	w0, w0, #0xffffff7f
   15db0:	str	w0, [x1, #840]
   15db4:	mov	x1, x19
   15db8:	mov	x0, #0x62                  	// #98
   15dbc:	ldp	x19, x20, [sp, #16]
   15dc0:	ldp	x29, x30, [sp], #32
   15dc4:	b	8b40 <syscall@plt>
   15dc8:	ldp	x19, x20, [sp, #16]
   15dcc:	ldp	x29, x30, [sp], #32
   15dd0:	ret
   15dd4:	stp	x29, x30, [sp, #-32]!
   15dd8:	mov	w5, #0x80000000            	// #-2147483648
   15ddc:	mov	x29, sp
   15de0:	stp	x19, x20, [sp, #16]
   15de4:	mov	x19, x0
   15de8:	cbnz	w1, 15e20 <omp_get_num_procs@@OMP_1.0+0x1ac>
   15dec:	mov	x0, x19
   15df0:	mov	w1, #0x0                   	// #0
   15df4:	bl	15c78 <omp_get_num_procs@@OMP_1.0+0x4>
   15df8:	cbz	w0, 15e6c <omp_get_num_procs@@OMP_1.0+0x1f8>
   15dfc:	ldaxr	w0, [x19]
   15e00:	cbnz	w0, 15e0c <omp_get_num_procs@@OMP_1.0+0x198>
   15e04:	stxr	w1, w5, [x19]
   15e08:	cbnz	w1, 15dfc <omp_get_num_procs@@OMP_1.0+0x188>
   15e0c:	cmp	w0, #0x0
   15e10:	b.ne	15e6c <omp_get_num_procs@@OMP_1.0+0x1f8>  // b.any
   15e14:	mov	x0, x19
   15e18:	bl	15cd4 <omp_get_num_procs@@OMP_1.0+0x60>
   15e1c:	ldr	w1, [x19]
   15e20:	mov	w20, #0x80000000            	// #-2147483648
   15e24:	ands	w3, w1, #0x7fffffff
   15e28:	mov	w2, w1
   15e2c:	sub	w0, w3, #0x1
   15e30:	orr	w0, w0, #0x80000000
   15e34:	csel	w0, w0, w20, ne  // ne = any
   15e38:	ldaxr	w1, [x19]
   15e3c:	cmp	w1, w2
   15e40:	b.ne	15e4c <omp_get_num_procs@@OMP_1.0+0x1d8>  // b.any
   15e44:	stxr	w4, w0, [x19]
   15e48:	cbnz	w4, 15e38 <omp_get_num_procs@@OMP_1.0+0x1c4>
   15e4c:	b.ne	15e24 <omp_get_num_procs@@OMP_1.0+0x1b0>  // b.any
   15e50:	cbz	w3, 15ea0 <omp_get_num_procs@@OMP_1.0+0x22c>
   15e54:	tst	w2, #0x7ffffffe
   15e58:	b.eq	15ec0 <omp_get_num_procs@@OMP_1.0+0x24c>  // b.none
   15e5c:	mov	x0, x19
   15e60:	ldp	x19, x20, [sp, #16]
   15e64:	ldp	x29, x30, [sp], #32
   15e68:	b	15d58 <omp_get_num_procs@@OMP_1.0+0xe4>
   15e6c:	ldr	w1, [x19]
   15e70:	cmp	w1, #0x0
   15e74:	b.lt	15de8 <omp_get_num_procs@@OMP_1.0+0x174>  // b.tstop
   15e78:	b.eq	15dec <omp_get_num_procs@@OMP_1.0+0x178>  // b.none
   15e7c:	sub	w2, w1, #0x1
   15e80:	ldaxr	w0, [x19]
   15e84:	cmp	w0, w1
   15e88:	b.ne	15e94 <omp_get_num_procs@@OMP_1.0+0x220>  // b.any
   15e8c:	stxr	w3, w2, [x19]
   15e90:	cbnz	w3, 15e80 <omp_get_num_procs@@OMP_1.0+0x20c>
   15e94:	b.eq	15ec0 <omp_get_num_procs@@OMP_1.0+0x24c>  // b.none
   15e98:	mov	w1, w0
   15e9c:	b	15de8 <omp_get_num_procs@@OMP_1.0+0x174>
   15ea0:	mov	x0, x19
   15ea4:	mov	w1, #0x80000000            	// #-2147483648
   15ea8:	bl	15c78 <omp_get_num_procs@@OMP_1.0+0x4>
   15eac:	cbz	w0, 15eb8 <omp_get_num_procs@@OMP_1.0+0x244>
   15eb0:	mov	x0, x19
   15eb4:	bl	15cd4 <omp_get_num_procs@@OMP_1.0+0x60>
   15eb8:	ldr	w1, [x19]
   15ebc:	b	15e24 <omp_get_num_procs@@OMP_1.0+0x1b0>
   15ec0:	ldp	x19, x20, [sp, #16]
   15ec4:	ldp	x29, x30, [sp], #32
   15ec8:	ret
   15ecc:	stp	x29, x30, [sp, #-48]!
   15ed0:	mov	x29, sp
   15ed4:	stp	x19, x20, [sp, #16]
   15ed8:	mov	x19, x0
   15edc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15ee0:	mov	w20, w1
   15ee4:	str	x21, [sp, #32]
   15ee8:	ldr	x1, [x0, #1592]
   15eec:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15ef0:	add	x0, x0, #0x338
   15ef4:	ldr	x2, [x0]
   15ef8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15efc:	ldr	x0, [x0, #752]
   15f00:	cmp	x2, x0
   15f04:	b.ls	15f10 <omp_get_num_procs@@OMP_1.0+0x29c>  // b.plast
   15f08:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15f0c:	ldr	x1, [x0, #1608]
   15f10:	mov	x0, #0x0                   	// #0
   15f14:	cmp	x0, x1
   15f18:	b.ne	15f4c <omp_get_num_procs@@OMP_1.0+0x2d8>  // b.any
   15f1c:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15f20:	mov	w3, w20
   15f24:	mov	x1, x19
   15f28:	mov	x4, #0x0                   	// #0
   15f2c:	ldr	w2, [x21, #840]
   15f30:	mov	x0, #0x62                  	// #98
   15f34:	bl	8b40 <syscall@plt>
   15f38:	tbnz	w0, #31, 15f60 <omp_get_num_procs@@OMP_1.0+0x2ec>
   15f3c:	ldp	x19, x20, [sp, #16]
   15f40:	ldr	x21, [sp, #32]
   15f44:	ldp	x29, x30, [sp], #48
   15f48:	ret
   15f4c:	ldr	w2, [x19]
   15f50:	cmp	w20, w2
   15f54:	b.ne	15f3c <omp_get_num_procs@@OMP_1.0+0x2c8>  // b.any
   15f58:	add	x0, x0, #0x1
   15f5c:	b	15f14 <omp_get_num_procs@@OMP_1.0+0x2a0>
   15f60:	bl	8b20 <__errno_location@plt>
   15f64:	ldr	w0, [x0]
   15f68:	cmp	w0, #0x26
   15f6c:	b.ne	15f3c <omp_get_num_procs@@OMP_1.0+0x2c8>  // b.any
   15f70:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   15f74:	ldr	w2, [x21, #840]
   15f78:	mov	w3, w20
   15f7c:	mov	x4, #0x0                   	// #0
   15f80:	ldr	w0, [x1, #844]
   15f84:	and	w2, w2, #0xffffff7f
   15f88:	str	w2, [x21, #840]
   15f8c:	and	w0, w0, #0xffffff7f
   15f90:	str	w0, [x1, #844]
   15f94:	mov	x1, x19
   15f98:	mov	x0, #0x62                  	// #98
   15f9c:	ldp	x19, x20, [sp, #16]
   15fa0:	ldr	x21, [sp, #32]
   15fa4:	ldp	x29, x30, [sp], #48
   15fa8:	b	8b40 <syscall@plt>
   15fac:	mov	x1, x0
   15fb0:	add	x0, x0, #0x4
   15fb4:	ldar	w0, [x0]
   15fb8:	and	w0, w0, #0xfffffffc
   15fbc:	add	x1, x1, #0x40
   15fc0:	ldaxr	w2, [x1]
   15fc4:	sub	w2, w2, #0x1
   15fc8:	stlxr	w3, w2, [x1]
   15fcc:	cbnz	w3, 15fc0 <omp_get_num_procs@@OMP_1.0+0x34c>
   15fd0:	cbnz	w2, 15fd8 <omp_get_num_procs@@OMP_1.0+0x364>
   15fd4:	orr	w0, w0, #0x1
   15fd8:	ret
   15fdc:	mov	x1, x0
   15fe0:	ldxr	w2, [x1]
   15fe4:	stlxr	w3, wzr, [x1]
   15fe8:	cbnz	w3, 15fe0 <omp_get_num_procs@@OMP_1.0+0x36c>
   15fec:	tbz	w2, #31, 15ff4 <omp_get_num_procs@@OMP_1.0+0x380>
   15ff0:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
   15ff4:	ret
   15ff8:	stp	x29, x30, [sp, #-48]!
   15ffc:	mov	w3, w1
   16000:	mov	x29, sp
   16004:	str	x21, [sp, #32]
   16008:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1600c:	stp	x19, x20, [sp, #16]
   16010:	mov	x19, x0
   16014:	ldr	w2, [x21, #844]
   16018:	mov	w20, w1
   1601c:	mov	x1, x0
   16020:	mov	x0, #0x62                  	// #98
   16024:	bl	8b40 <syscall@plt>
   16028:	tbz	w0, #31, 16074 <omp_get_num_procs@@OMP_1.0+0x400>
   1602c:	bl	8b20 <__errno_location@plt>
   16030:	ldr	w0, [x0]
   16034:	cmp	w0, #0x26
   16038:	b.ne	16074 <omp_get_num_procs@@OMP_1.0+0x400>  // b.any
   1603c:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16040:	ldr	w2, [x21, #844]
   16044:	mov	w3, w20
   16048:	ldr	w0, [x1, #840]
   1604c:	and	w2, w2, #0xffffff7f
   16050:	str	w2, [x21, #844]
   16054:	and	w0, w0, #0xffffff7f
   16058:	str	w0, [x1, #840]
   1605c:	mov	x1, x19
   16060:	mov	x0, #0x62                  	// #98
   16064:	ldp	x19, x20, [sp, #16]
   16068:	ldr	x21, [sp, #32]
   1606c:	ldp	x29, x30, [sp], #48
   16070:	b	8b40 <syscall@plt>
   16074:	ldp	x19, x20, [sp, #16]
   16078:	ldr	x21, [sp, #32]
   1607c:	ldp	x29, x30, [sp], #48
   16080:	ret
   16084:	stp	x29, x30, [sp, #-32]!
   16088:	mov	x29, sp
   1608c:	stp	x19, x20, [sp, #16]
   16090:	mov	w19, w1
   16094:	add	x20, x0, #0x4
   16098:	tbz	w19, #0, 160c8 <omp_get_num_procs@@OMP_1.0+0x454>
   1609c:	mov	x2, x0
   160a0:	ldr	w0, [x0]
   160a4:	str	w0, [x2, #64]
   160a8:	ldr	w0, [x2, #4]
   160ac:	add	w0, w0, #0x8
   160b0:	stlr	w0, [x20]
   160b4:	mov	x0, x20
   160b8:	ldp	x19, x20, [sp, #16]
   160bc:	mov	w1, #0x7fffffff            	// #2147483647
   160c0:	ldp	x29, x30, [sp], #32
   160c4:	b	15ff8 <omp_get_num_procs@@OMP_1.0+0x384>
   160c8:	mov	x0, x20
   160cc:	mov	w1, w19
   160d0:	bl	15ecc <omp_get_num_procs@@OMP_1.0+0x258>
   160d4:	ldar	w0, [x20]
   160d8:	cmp	w0, w19
   160dc:	b.eq	160c8 <omp_get_num_procs@@OMP_1.0+0x454>  // b.none
   160e0:	ldp	x19, x20, [sp, #16]
   160e4:	ldp	x29, x30, [sp], #32
   160e8:	ret
   160ec:	mov	x4, x0
   160f0:	stp	x29, x30, [sp, #-16]!
   160f4:	mov	x29, sp
   160f8:	bl	15fac <omp_get_num_procs@@OMP_1.0+0x338>
   160fc:	mov	w1, w0
   16100:	ldp	x29, x30, [sp], #16
   16104:	mov	x0, x4
   16108:	b	16084 <omp_get_num_procs@@OMP_1.0+0x410>
   1610c:	mov	x4, x0
   16110:	stp	x29, x30, [sp, #-16]!
   16114:	mov	x29, sp
   16118:	bl	15fac <omp_get_num_procs@@OMP_1.0+0x338>
   1611c:	mov	w1, w0
   16120:	tbz	w1, #0, 16130 <omp_get_num_procs@@OMP_1.0+0x4bc>
   16124:	ldp	x29, x30, [sp], #16
   16128:	mov	x0, x4
   1612c:	b	16084 <omp_get_num_procs@@OMP_1.0+0x410>
   16130:	ldp	x29, x30, [sp], #16
   16134:	ret
   16138:	cmp	w1, #0x0
   1613c:	mov	w2, #0x7fffffff            	// #2147483647
   16140:	add	x0, x0, #0x4
   16144:	csel	w1, w1, w2, ne  // ne = any
   16148:	b	15ff8 <omp_get_num_procs@@OMP_1.0+0x384>
   1614c:	stp	x29, x30, [sp, #-48]!
   16150:	mov	x29, sp
   16154:	stp	x19, x20, [sp, #16]
   16158:	mov	w19, w1
   1615c:	add	x20, x0, #0x4
   16160:	stp	x21, x22, [sp, #32]
   16164:	tbz	w19, #0, 1619c <omp_get_num_procs@@OMP_1.0+0x528>
   16168:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1616c:	ldr	x1, [x1, #4016]
   16170:	mrs	x2, tpidr_el0
   16174:	add	x1, x2, x1
   16178:	ldr	w2, [x0]
   1617c:	str	w2, [x0, #64]
   16180:	ldr	x1, [x1, #16]
   16184:	ldr	w0, [x1, #1320]
   16188:	str	wzr, [x1, #1332]
   1618c:	cbz	w0, 161e4 <omp_get_num_procs@@OMP_1.0+0x570>
   16190:	mov	w0, w19
   16194:	and	w19, w19, #0xfffffffe
   16198:	bl	114a4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b0>
   1619c:	and	w21, w19, #0xfffffffb
   161a0:	add	w22, w21, #0x8
   161a4:	mov	x0, x20
   161a8:	mov	w1, w19
   161ac:	bl	15ecc <omp_get_num_procs@@OMP_1.0+0x258>
   161b0:	ldar	w0, [x20]
   161b4:	tbz	w0, #0, 161c4 <omp_get_num_procs@@OMP_1.0+0x550>
   161b8:	mov	w0, w21
   161bc:	bl	114a4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b0>
   161c0:	ldar	w0, [x20]
   161c4:	and	w1, w0, #0x2
   161c8:	cmp	w22, w0
   161cc:	orr	w19, w19, w1
   161d0:	b.ne	161a4 <omp_get_num_procs@@OMP_1.0+0x530>  // b.any
   161d4:	ldp	x19, x20, [sp, #16]
   161d8:	ldp	x21, x22, [sp, #32]
   161dc:	ldp	x29, x30, [sp], #48
   161e0:	ret
   161e4:	and	w19, w19, #0xfffffffb
   161e8:	add	w19, w19, #0x7
   161ec:	stlr	w19, [x20]
   161f0:	mov	x0, x20
   161f4:	ldp	x19, x20, [sp, #16]
   161f8:	mov	w1, #0x7fffffff            	// #2147483647
   161fc:	ldp	x21, x22, [sp, #32]
   16200:	ldp	x29, x30, [sp], #48
   16204:	b	15ff8 <omp_get_num_procs@@OMP_1.0+0x384>
   16208:	mov	x4, x0
   1620c:	stp	x29, x30, [sp, #-16]!
   16210:	mov	x29, sp
   16214:	bl	15fac <omp_get_num_procs@@OMP_1.0+0x338>
   16218:	mov	w1, w0
   1621c:	ldp	x29, x30, [sp], #16
   16220:	mov	x0, x4
   16224:	b	1614c <omp_get_num_procs@@OMP_1.0+0x4d8>
   16228:	add	x1, x0, #0x4
   1622c:	ldar	w1, [x1]
   16230:	and	w1, w1, #0xfffffffc
   16234:	add	x2, x0, #0x44
   16238:	ldaxr	w3, [x2]
   1623c:	sub	w3, w3, #0x1
   16240:	stlxr	w4, w3, [x2]
   16244:	cbnz	w4, 16238 <omp_get_num_procs@@OMP_1.0+0x5c4>
   16248:	cbnz	w3, 16258 <omp_get_num_procs@@OMP_1.0+0x5e4>
   1624c:	ldr	w2, [x0]
   16250:	orr	w1, w1, #0x1
   16254:	str	w2, [x0, #68]
   16258:	b	1614c <omp_get_num_procs@@OMP_1.0+0x4d8>
   1625c:	stp	x29, x30, [sp, #-48]!
   16260:	mov	x29, sp
   16264:	stp	x19, x20, [sp, #16]
   16268:	mov	x19, x0
   1626c:	mov	w20, w1
   16270:	stp	x21, x22, [sp, #32]
   16274:	tbz	w20, #0, 162ac <omp_get_num_procs@@OMP_1.0+0x638>
   16278:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1627c:	ldr	x0, [x0, #4016]
   16280:	mrs	x1, tpidr_el0
   16284:	add	x0, x1, x0
   16288:	ldr	w1, [x19]
   1628c:	str	w1, [x19, #64]
   16290:	ldr	x0, [x0, #16]
   16294:	str	wzr, [x0, #1332]
   16298:	ldr	w0, [x0, #1320]
   1629c:	cbz	w0, 162f4 <omp_get_num_procs@@OMP_1.0+0x680>
   162a0:	mov	w0, w20
   162a4:	and	w20, w20, #0xfffffffe
   162a8:	bl	114a4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b0>
   162ac:	tbnz	w20, #2, 1631c <omp_get_num_procs@@OMP_1.0+0x6a8>
   162b0:	mov	w21, w20
   162b4:	add	x19, x19, #0x4
   162b8:	add	w22, w20, #0x8
   162bc:	mov	x0, x19
   162c0:	mov	w1, w21
   162c4:	bl	15ecc <omp_get_num_procs@@OMP_1.0+0x258>
   162c8:	ldar	w0, [x19]
   162cc:	tbnz	w0, #2, 1631c <omp_get_num_procs@@OMP_1.0+0x6a8>
   162d0:	tbz	w0, #0, 162e0 <omp_get_num_procs@@OMP_1.0+0x66c>
   162d4:	mov	w0, w20
   162d8:	bl	114a4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b0>
   162dc:	ldar	w0, [x19]
   162e0:	and	w1, w0, #0x2
   162e4:	cmp	w22, w0
   162e8:	orr	w21, w21, w1
   162ec:	b.ne	162bc <omp_get_num_procs@@OMP_1.0+0x648>  // b.any
   162f0:	b	16308 <omp_get_num_procs@@OMP_1.0+0x694>
   162f4:	add	x0, x19, #0x4
   162f8:	add	w20, w20, #0x7
   162fc:	stlr	w20, [x0]
   16300:	mov	w1, #0x7fffffff            	// #2147483647
   16304:	bl	15ff8 <omp_get_num_procs@@OMP_1.0+0x384>
   16308:	mov	w0, #0x0                   	// #0
   1630c:	ldp	x19, x20, [sp, #16]
   16310:	ldp	x21, x22, [sp, #32]
   16314:	ldp	x29, x30, [sp], #48
   16318:	ret
   1631c:	mov	w0, #0x1                   	// #1
   16320:	b	1630c <omp_get_num_procs@@OMP_1.0+0x698>
   16324:	mov	x4, x0
   16328:	stp	x29, x30, [sp, #-16]!
   1632c:	mov	x29, sp
   16330:	bl	15fac <omp_get_num_procs@@OMP_1.0+0x338>
   16334:	mov	w1, w0
   16338:	ldp	x29, x30, [sp], #16
   1633c:	mov	x0, x4
   16340:	b	1625c <omp_get_num_procs@@OMP_1.0+0x5e8>
   16344:	stp	x29, x30, [sp, #-32]!
   16348:	mov	x29, sp
   1634c:	stp	x19, x20, [sp, #16]
   16350:	mov	x19, x0
   16354:	add	x20, x0, #0x500
   16358:	mov	w0, #0x1                   	// #1
   1635c:	ldaxr	w1, [x20]
   16360:	cbnz	w1, 1636c <omp_get_num_procs@@OMP_1.0+0x6f8>
   16364:	stxr	w2, w0, [x20]
   16368:	cbnz	w2, 1635c <omp_get_num_procs@@OMP_1.0+0x6e8>
   1636c:	cmp	w1, #0x0
   16370:	b.eq	1637c <omp_get_num_procs@@OMP_1.0+0x708>  // b.none
   16374:	mov	x0, x20
   16378:	bl	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
   1637c:	ldr	w0, [x19, #132]
   16380:	tbz	w0, #2, 16394 <omp_get_num_procs@@OMP_1.0+0x720>
   16384:	mov	x0, x20
   16388:	ldp	x19, x20, [sp, #16]
   1638c:	ldp	x29, x30, [sp], #32
   16390:	b	15fdc <omp_get_num_procs@@OMP_1.0+0x368>
   16394:	orr	w0, w0, #0x4
   16398:	str	w0, [x19, #132]!
   1639c:	mov	x0, x20
   163a0:	bl	15fdc <omp_get_num_procs@@OMP_1.0+0x368>
   163a4:	mov	x0, x19
   163a8:	mov	w1, #0x7fffffff            	// #2147483647
   163ac:	ldp	x19, x20, [sp, #16]
   163b0:	ldp	x29, x30, [sp], #32
   163b4:	b	15ff8 <omp_get_num_procs@@OMP_1.0+0x384>
   163b8:	stp	x29, x30, [sp, #-64]!
   163bc:	mov	x29, sp
   163c0:	stp	x19, x20, [sp, #16]
   163c4:	mov	x20, x0
   163c8:	mov	x0, #0x2                   	// #2
   163cc:	stp	x21, x22, [sp, #32]
   163d0:	str	x23, [sp, #48]
   163d4:	ldxr	x1, [x20]
   163d8:	cmp	x1, #0x1
   163dc:	b.ne	163e8 <omp_get_num_procs@@OMP_1.0+0x774>  // b.any
   163e0:	stxr	w2, x0, [x20]
   163e4:	cbnz	w2, 163d4 <omp_get_num_procs@@OMP_1.0+0x760>
   163e8:	mov	x19, x20
   163ec:	adrp	x23, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   163f0:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   163f4:	adrp	x22, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   163f8:	add	x23, x23, #0x338
   163fc:	add	x21, x21, #0x348
   16400:	add	x22, x22, #0x34c
   16404:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16408:	ldr	x1, [x0, #1592]
   1640c:	ldr	x2, [x23]
   16410:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16414:	ldr	x0, [x0, #752]
   16418:	cmp	x2, x0
   1641c:	b.ls	16428 <omp_get_num_procs@@OMP_1.0+0x7b4>  // b.plast
   16420:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16424:	ldr	x1, [x0, #1608]
   16428:	mov	x0, #0x0                   	// #0
   1642c:	cmp	x0, x1
   16430:	b.ne	164b0 <omp_get_num_procs@@OMP_1.0+0x83c>  // b.any
   16434:	ldr	w2, [x21]
   16438:	mov	x1, x19
   1643c:	mov	x4, #0x0                   	// #0
   16440:	mov	w3, #0x2                   	// #2
   16444:	mov	x0, #0x62                  	// #98
   16448:	bl	8b40 <syscall@plt>
   1644c:	tbz	w0, #31, 1648c <omp_get_num_procs@@OMP_1.0+0x818>
   16450:	bl	8b20 <__errno_location@plt>
   16454:	ldr	w0, [x0]
   16458:	cmp	w0, #0x26
   1645c:	b.ne	1648c <omp_get_num_procs@@OMP_1.0+0x818>  // b.any
   16460:	ldr	w0, [x22]
   16464:	mov	x1, x19
   16468:	ldr	w2, [x21]
   1646c:	mov	x4, #0x0                   	// #0
   16470:	and	w0, w0, #0xffffff7f
   16474:	mov	w3, #0x2                   	// #2
   16478:	and	w2, w2, #0xffffff7f
   1647c:	str	w0, [x22]
   16480:	mov	x0, #0x62                  	// #98
   16484:	str	w2, [x21]
   16488:	bl	8b40 <syscall@plt>
   1648c:	ldr	w0, [x19]
   16490:	cmp	w0, #0x2
   16494:	b.eq	16404 <omp_get_num_procs@@OMP_1.0+0x790>  // b.none
   16498:	ldar	x0, [x20]
   1649c:	ldp	x19, x20, [sp, #16]
   164a0:	ldp	x21, x22, [sp, #32]
   164a4:	ldr	x23, [sp, #48]
   164a8:	ldp	x29, x30, [sp], #64
   164ac:	ret
   164b0:	ldr	w2, [x19]
   164b4:	cmp	w2, #0x2
   164b8:	b.ne	1648c <omp_get_num_procs@@OMP_1.0+0x818>  // b.any
   164bc:	add	x0, x0, #0x1
   164c0:	b	1642c <omp_get_num_procs@@OMP_1.0+0x7b8>
   164c4:	stp	x29, x30, [sp, #-32]!
   164c8:	mov	x29, sp
   164cc:	stp	x19, x20, [sp, #16]
   164d0:	mov	x19, x0
   164d4:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   164d8:	mov	x1, x19
   164dc:	mov	w3, #0x7fffffff            	// #2147483647
   164e0:	mov	x0, #0x62                  	// #98
   164e4:	ldr	w2, [x20, #844]
   164e8:	bl	8b40 <syscall@plt>
   164ec:	tbz	w0, #31, 16534 <omp_get_num_procs@@OMP_1.0+0x8c0>
   164f0:	bl	8b20 <__errno_location@plt>
   164f4:	ldr	w0, [x0]
   164f8:	cmp	w0, #0x26
   164fc:	b.ne	16534 <omp_get_num_procs@@OMP_1.0+0x8c0>  // b.any
   16500:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16504:	ldr	w2, [x20, #844]
   16508:	mov	w3, #0x7fffffff            	// #2147483647
   1650c:	ldr	w0, [x1, #840]
   16510:	and	w2, w2, #0xffffff7f
   16514:	str	w2, [x20, #844]
   16518:	and	w0, w0, #0xffffff7f
   1651c:	str	w0, [x1, #840]
   16520:	mov	x1, x19
   16524:	mov	x0, #0x62                  	// #98
   16528:	ldp	x19, x20, [sp, #16]
   1652c:	ldp	x29, x30, [sp], #32
   16530:	b	8b40 <syscall@plt>
   16534:	ldp	x19, x20, [sp, #16]
   16538:	ldp	x29, x30, [sp], #32
   1653c:	ret

0000000000016540 <omp_get_wtime@@OMP_2.0>:
   16540:	stp	x29, x30, [sp, #-48]!
   16544:	mov	w0, #0x1                   	// #1
   16548:	mov	x29, sp
   1654c:	str	x19, [sp, #16]
   16550:	add	x19, sp, #0x20
   16554:	mov	x1, x19
   16558:	bl	8700 <clock_gettime@plt>
   1655c:	tbz	w0, #31, 1656c <omp_get_wtime@@OMP_2.0+0x2c>
   16560:	mov	x1, x19
   16564:	mov	w0, #0x0                   	// #0
   16568:	bl	8700 <clock_gettime@plt>
   1656c:	ldr	d1, [sp, #40]
   16570:	mov	x0, #0xcd6500000000        	// #225833675390976
   16574:	movk	x0, #0x41cd, lsl #48
   16578:	fmov	d0, x0
   1657c:	ldr	x19, [sp, #16]
   16580:	scvtf	d1, d1
   16584:	fdiv	d1, d1, d0
   16588:	ldr	d0, [sp, #32]
   1658c:	ldp	x29, x30, [sp], #48
   16590:	scvtf	d0, d0
   16594:	fadd	d0, d1, d0
   16598:	ret

000000000001659c <omp_get_wtick@@OMP_2.0>:
   1659c:	stp	x29, x30, [sp, #-48]!
   165a0:	mov	w0, #0x1                   	// #1
   165a4:	mov	x29, sp
   165a8:	str	x19, [sp, #16]
   165ac:	add	x19, sp, #0x20
   165b0:	mov	x1, x19
   165b4:	bl	8940 <clock_getres@plt>
   165b8:	tbz	w0, #31, 165c8 <omp_get_wtick@@OMP_2.0+0x2c>
   165bc:	mov	x1, x19
   165c0:	mov	w0, #0x0                   	// #0
   165c4:	bl	8940 <clock_getres@plt>
   165c8:	ldr	d1, [sp, #40]
   165cc:	mov	x0, #0xcd6500000000        	// #225833675390976
   165d0:	movk	x0, #0x41cd, lsl #48
   165d4:	fmov	d0, x0
   165d8:	ldr	x19, [sp, #16]
   165dc:	scvtf	d1, d1
   165e0:	fdiv	d1, d1, d0
   165e4:	ldr	d0, [sp, #32]
   165e8:	ldp	x29, x30, [sp], #48
   165ec:	scvtf	d0, d0
   165f0:	fadd	d0, d1, d0
   165f4:	ret

00000000000165f8 <omp_init_lock_@@OMP_3.0>:
   165f8:	b	1541c <omp_init_lock@@OMP_3.0>

00000000000165fc <omp_init_nest_lock_@@OMP_3.0>:
   165fc:	stp	x29, x30, [sp, #-32]!
   16600:	mov	x29, sp
   16604:	str	x19, [sp, #16]
   16608:	mov	x19, x0
   1660c:	mov	x0, #0x10                  	// #16
   16610:	bl	87a0 <malloc@plt>
   16614:	str	x0, [x19]
   16618:	ldr	x19, [sp, #16]
   1661c:	ldp	x29, x30, [sp], #32
   16620:	b	15474 <omp_init_nest_lock@@OMP_3.0>

0000000000016624 <omp_destroy_lock_@@OMP_3.0>:
   16624:	b	15424 <omp_destroy_lock@OMP_1.0>

0000000000016628 <omp_destroy_nest_lock_@@OMP_3.0>:
   16628:	stp	x29, x30, [sp, #-32]!
   1662c:	mov	x29, sp
   16630:	str	x19, [sp, #16]
   16634:	mov	x19, x0
   16638:	ldr	x0, [x0]
   1663c:	bl	1547c <omp_destroy_nest_lock@@OMP_3.0>
   16640:	ldr	x0, [x19]
   16644:	bl	8950 <free@plt>
   16648:	str	xzr, [x19]
   1664c:	ldr	x19, [sp, #16]
   16650:	ldp	x29, x30, [sp], #32
   16654:	ret

0000000000016658 <omp_set_lock_@@OMP_3.0>:
   16658:	b	15428 <omp_set_lock@@OMP_3.0>

000000000001665c <omp_set_nest_lock_@@OMP_3.0>:
   1665c:	ldr	x0, [x0]
   16660:	b	15480 <omp_set_nest_lock@@OMP_3.0>

0000000000016664 <omp_unset_lock_@@OMP_3.0>:
   16664:	b	15450 <omp_unset_lock@@OMP_3.0>

0000000000016668 <omp_unset_nest_lock_@@OMP_3.0>:
   16668:	ldr	x0, [x0]
   1666c:	b	15504 <omp_unset_nest_lock@@OMP_3.0>

0000000000016670 <omp_test_lock_@@OMP_3.0>:
   16670:	b	15454 <omp_test_lock@OMP_1.0>

0000000000016674 <omp_test_nest_lock_@@OMP_3.0>:
   16674:	ldr	x0, [x0]
   16678:	b	15520 <omp_test_nest_lock@@OMP_3.0>

000000000001667c <omp_init_lock_@OMP_1.0>:
   1667c:	b	1541c <omp_init_lock@@OMP_3.0>

0000000000016680 <omp_init_nest_lock_@OMP_1.0>:
   16680:	b	155a8 <omp_init_nest_lock@OMP_1.0>

0000000000016684 <omp_destroy_lock_@OMP_1.0>:
   16684:	b	15424 <omp_destroy_lock@OMP_1.0>

0000000000016688 <omp_destroy_nest_lock_@OMP_1.0>:
   16688:	b	155b0 <omp_destroy_nest_lock@OMP_1.0>

000000000001668c <omp_set_lock_@OMP_1.0>:
   1668c:	b	15428 <omp_set_lock@@OMP_3.0>

0000000000016690 <omp_set_nest_lock_@OMP_1.0>:
   16690:	b	155b4 <omp_set_nest_lock@OMP_1.0>

0000000000016694 <omp_unset_lock_@OMP_1.0>:
   16694:	b	15450 <omp_unset_lock@@OMP_3.0>

0000000000016698 <omp_unset_nest_lock_@OMP_1.0>:
   16698:	b	156e8 <omp_unset_nest_lock@OMP_1.0>

000000000001669c <omp_test_lock_@OMP_1.0>:
   1669c:	b	15454 <omp_test_lock@OMP_1.0>

00000000000166a0 <omp_test_nest_lock_@OMP_1.0>:
   166a0:	b	15778 <omp_test_nest_lock@OMP_1.0>

00000000000166a4 <omp_set_dynamic_@@OMP_1.0>:
   166a4:	ldr	w0, [x0]
   166a8:	b	b228 <omp_set_dynamic@@OMP_1.0>

00000000000166ac <omp_set_dynamic_8_@@OMP_1.0>:
   166ac:	ldr	x0, [x0]
   166b0:	cmp	x0, #0x0
   166b4:	cset	w0, ne  // ne = any
   166b8:	b	b228 <omp_set_dynamic@@OMP_1.0>

00000000000166bc <omp_set_nested_@@OMP_1.0>:
   166bc:	ldr	w0, [x0]
   166c0:	b	b2a4 <omp_set_nested@@OMP_1.0>

00000000000166c4 <omp_set_nested_8_@@OMP_1.0>:
   166c4:	ldr	x0, [x0]
   166c8:	cmp	x0, #0x0
   166cc:	cset	w0, ne  // ne = any
   166d0:	b	b2a4 <omp_set_nested@@OMP_1.0>

00000000000166d4 <omp_set_num_threads_@@OMP_1.0>:
   166d4:	ldr	w0, [x0]
   166d8:	b	b1d8 <omp_set_num_threads@@OMP_1.0>

00000000000166dc <omp_set_num_threads_8_@@OMP_1.0>:
   166dc:	ldr	x0, [x0]
   166e0:	mov	x1, #0xffffffff80000001    	// #-2147483647
   166e4:	cmp	x0, x1
   166e8:	b.lt	166fc <omp_set_num_threads_8_@@OMP_1.0+0x20>  // b.tstop
   166ec:	mov	x1, #0x7fffffff            	// #2147483647
   166f0:	cmp	x0, x1
   166f4:	csel	x0, x0, x1, le
   166f8:	b	b1d8 <omp_set_num_threads@@OMP_1.0>
   166fc:	mov	w0, #0x80000000            	// #-2147483648
   16700:	b	166f8 <omp_set_num_threads_8_@@OMP_1.0+0x1c>

0000000000016704 <omp_get_dynamic_@@OMP_1.0>:
   16704:	b	b274 <omp_get_dynamic@@OMP_1.0>

0000000000016708 <omp_get_nested_@@OMP_1.0>:
   16708:	b	b2f0 <omp_get_nested@@OMP_1.0>

000000000001670c <omp_in_parallel_@@OMP_1.0>:
   1670c:	b	f58c <omp_in_parallel@@OMP_1.0>

0000000000016710 <omp_get_max_threads_@@OMP_1.0>:
   16710:	b	b3e8 <omp_get_max_threads@@OMP_1.0>

0000000000016714 <omp_get_num_procs_@@OMP_1.0>:
   16714:	b	15c74 <omp_get_num_procs@@OMP_1.0>

0000000000016718 <omp_get_num_threads_@@OMP_1.0>:
   16718:	b	f54c <omp_get_num_threads@@OMP_1.0>

000000000001671c <omp_get_thread_num_@@OMP_1.0>:
   1671c:	b	f574 <omp_get_thread_num@@OMP_1.0>

0000000000016720 <omp_get_wtick_@@OMP_2.0>:
   16720:	b	1659c <omp_get_wtick@@OMP_2.0>

0000000000016724 <omp_get_wtime_@@OMP_2.0>:
   16724:	b	16540 <omp_get_wtime@@OMP_2.0>

0000000000016728 <omp_set_schedule_@@OMP_3.0>:
   16728:	ldr	w0, [x0]
   1672c:	ldr	w1, [x1]
   16730:	b	b320 <omp_set_schedule@@OMP_3.0>

0000000000016734 <omp_set_schedule_8_@@OMP_3.0>:
   16734:	ldr	x1, [x1]
   16738:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1673c:	ldr	w0, [x0]
   16740:	cmp	x1, x2
   16744:	b.lt	16758 <omp_set_schedule_8_@@OMP_3.0+0x24>  // b.tstop
   16748:	mov	x2, #0x7fffffff            	// #2147483647
   1674c:	cmp	x1, x2
   16750:	csel	x1, x1, x2, le
   16754:	b	b320 <omp_set_schedule@@OMP_3.0>
   16758:	mov	w1, #0x80000000            	// #-2147483648
   1675c:	b	16754 <omp_set_schedule_8_@@OMP_3.0+0x20>

0000000000016760 <omp_get_schedule_@@OMP_3.0>:
   16760:	stp	x29, x30, [sp, #-48]!
   16764:	mov	x29, sp
   16768:	stp	x19, x20, [sp, #16]
   1676c:	mov	x20, x0
   16770:	mov	x19, x1
   16774:	add	x0, sp, #0x28
   16778:	add	x1, sp, #0x2c
   1677c:	bl	b3ac <omp_get_schedule@@OMP_3.0>
   16780:	ldr	w0, [sp, #40]
   16784:	and	w0, w0, #0x7fffffff
   16788:	str	w0, [x20]
   1678c:	ldr	w0, [sp, #44]
   16790:	str	w0, [x19]
   16794:	ldp	x19, x20, [sp, #16]
   16798:	ldp	x29, x30, [sp], #48
   1679c:	ret

00000000000167a0 <omp_get_schedule_8_@@OMP_3.0>:
   167a0:	stp	x29, x30, [sp, #-48]!
   167a4:	mov	x29, sp
   167a8:	stp	x19, x20, [sp, #16]
   167ac:	mov	x20, x0
   167b0:	mov	x19, x1
   167b4:	add	x0, sp, #0x28
   167b8:	add	x1, sp, #0x2c
   167bc:	bl	b3ac <omp_get_schedule@@OMP_3.0>
   167c0:	ldr	w0, [sp, #40]
   167c4:	and	w0, w0, #0x7fffffff
   167c8:	str	w0, [x20]
   167cc:	ldrsw	x0, [sp, #44]
   167d0:	str	x0, [x19]
   167d4:	ldp	x19, x20, [sp, #16]
   167d8:	ldp	x29, x30, [sp], #48
   167dc:	ret

00000000000167e0 <omp_get_thread_limit_@@OMP_3.0>:
   167e0:	b	b418 <omp_get_thread_limit@@OMP_3.0>

00000000000167e4 <omp_set_max_active_levels_@@OMP_3.0>:
   167e4:	ldr	w0, [x0]
   167e8:	b	b454 <omp_set_max_active_levels@@OMP_3.0>

00000000000167ec <omp_set_max_active_levels_8_@@OMP_3.0>:
   167ec:	ldr	x0, [x0]
   167f0:	mov	x1, #0xffffffff80000001    	// #-2147483647
   167f4:	cmp	x0, x1
   167f8:	b.lt	1680c <omp_set_max_active_levels_8_@@OMP_3.0+0x20>  // b.tstop
   167fc:	mov	x1, #0x7fffffff            	// #2147483647
   16800:	cmp	x0, x1
   16804:	csel	x0, x0, x1, le
   16808:	b	b454 <omp_set_max_active_levels@@OMP_3.0>
   1680c:	mov	w0, #0x80000000            	// #-2147483648
   16810:	b	16808 <omp_set_max_active_levels_8_@@OMP_3.0+0x1c>

0000000000016814 <omp_get_max_active_levels_@@OMP_3.0>:
   16814:	b	b468 <omp_get_max_active_levels@@OMP_3.0>

0000000000016818 <omp_get_level_@@OMP_3.0>:
   16818:	b	f5ac <omp_get_level@@OMP_3.0>

000000000001681c <omp_get_ancestor_thread_num_@@OMP_3.0>:
   1681c:	ldr	w0, [x0]
   16820:	b	f5c4 <omp_get_ancestor_thread_num@@OMP_3.0>

0000000000016824 <omp_get_ancestor_thread_num_8_@@OMP_3.0>:
   16824:	ldr	x0, [x0]
   16828:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1682c:	cmp	x0, x1
   16830:	b.lt	16844 <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x20>  // b.tstop
   16834:	mov	x1, #0x7fffffff            	// #2147483647
   16838:	cmp	x0, x1
   1683c:	csel	x0, x0, x1, le
   16840:	b	f5c4 <omp_get_ancestor_thread_num@@OMP_3.0>
   16844:	mov	w0, #0x80000000            	// #-2147483648
   16848:	b	16840 <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x1c>

000000000001684c <omp_get_team_size_@@OMP_3.0>:
   1684c:	ldr	w0, [x0]
   16850:	b	f614 <omp_get_team_size@@OMP_3.0>

0000000000016854 <omp_get_team_size_8_@@OMP_3.0>:
   16854:	ldr	x0, [x0]
   16858:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1685c:	cmp	x0, x1
   16860:	b.lt	16874 <omp_get_team_size_8_@@OMP_3.0+0x20>  // b.tstop
   16864:	mov	x1, #0x7fffffff            	// #2147483647
   16868:	cmp	x0, x1
   1686c:	csel	x0, x0, x1, le
   16870:	b	f614 <omp_get_team_size@@OMP_3.0>
   16874:	mov	w0, #0x80000000            	// #-2147483648
   16878:	b	16870 <omp_get_team_size_8_@@OMP_3.0+0x1c>

000000000001687c <omp_get_active_level_@@OMP_3.0>:
   1687c:	b	f670 <omp_get_active_level@@OMP_3.0>

0000000000016880 <omp_in_final_@@OMP_3.1>:
   16880:	b	13b78 <omp_in_final@@OMP_3.1>

0000000000016884 <omp_get_cancellation_@@OMP_4.0>:
   16884:	b	b474 <omp_get_cancellation@@OMP_4.0>

0000000000016888 <omp_get_proc_bind_@@OMP_4.0>:
   16888:	b	b48c <omp_get_proc_bind@@OMP_4.0>

000000000001688c <omp_get_num_places_@@OMP_4.5>:
   1688c:	b	b4c4 <omp_get_num_places@@OMP_4.5>

0000000000016890 <omp_get_place_num_procs_@@OMP_4.5>:
   16890:	ldr	w0, [x0]
   16894:	b	17730 <omp_get_place_num_procs@@OMP_4.5>

0000000000016898 <omp_get_place_num_procs_8_@@OMP_4.5>:
   16898:	ldr	x0, [x0]
   1689c:	mov	x1, #0xffffffff80000001    	// #-2147483647
   168a0:	cmp	x0, x1
   168a4:	b.lt	168b8 <omp_get_place_num_procs_8_@@OMP_4.5+0x20>  // b.tstop
   168a8:	mov	x1, #0x7fffffff            	// #2147483647
   168ac:	cmp	x0, x1
   168b0:	csel	x0, x0, x1, le
   168b4:	b	17730 <omp_get_place_num_procs@@OMP_4.5>
   168b8:	mov	w0, #0x80000000            	// #-2147483648
   168bc:	b	168b4 <omp_get_place_num_procs_8_@@OMP_4.5+0x1c>

00000000000168c0 <omp_get_place_proc_ids_@@OMP_4.5>:
   168c0:	ldr	w0, [x0]
   168c4:	b	17778 <omp_get_place_proc_ids@@OMP_4.5>

00000000000168c8 <omp_get_place_proc_ids_8_@@OMP_4.5>:
   168c8:	ldr	x0, [x0]
   168cc:	mov	x2, #0xffffffff80000001    	// #-2147483647
   168d0:	cmp	x0, x2
   168d4:	b.lt	168e8 <omp_get_place_proc_ids_8_@@OMP_4.5+0x20>  // b.tstop
   168d8:	mov	x2, #0x7fffffff            	// #2147483647
   168dc:	cmp	x0, x2
   168e0:	csel	x0, x0, x2, le
   168e4:	b	177dc <omp_get_place_proc_ids@@OMP_4.5+0x64>
   168e8:	mov	w0, #0x80000000            	// #-2147483648
   168ec:	b	168e4 <omp_get_place_proc_ids_8_@@OMP_4.5+0x1c>

00000000000168f0 <omp_get_place_num_@@OMP_4.5>:
   168f0:	b	b4d0 <omp_get_place_num@@OMP_4.5>

00000000000168f4 <omp_get_partition_num_places_@@OMP_4.5>:
   168f4:	b	b524 <omp_get_partition_num_places@@OMP_4.5>

00000000000168f8 <omp_get_partition_place_nums_@@OMP_4.5>:
   168f8:	b	b574 <omp_get_partition_place_nums@@OMP_4.5>

00000000000168fc <omp_get_partition_place_nums_8_@@OMP_4.5>:
   168fc:	stp	x29, x30, [sp, #-48]!
   16900:	mov	x29, sp
   16904:	stp	x19, x20, [sp, #16]
   16908:	mov	x20, x0
   1690c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16910:	str	x21, [sp, #32]
   16914:	ldr	x0, [x0, #1576]
   16918:	cbz	x0, 1694c <omp_get_partition_place_nums_8_@@OMP_4.5+0x50>
   1691c:	adrp	x21, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   16920:	ldr	x21, [x21, #4016]
   16924:	mrs	x19, tpidr_el0
   16928:	add	x0, x19, x21
   1692c:	ldr	w0, [x0, #92]
   16930:	cbnz	w0, 16938 <omp_get_partition_place_nums_8_@@OMP_4.5+0x3c>
   16934:	bl	17580 <omp_pause_resource_all_@@OMP_5.0+0x8f4>
   16938:	add	x19, x19, x21
   1693c:	mov	x1, #0x0                   	// #0
   16940:	ldp	w2, w0, [x19, #52]
   16944:	cmp	w0, w1
   16948:	b.hi	1695c <omp_get_partition_place_nums_8_@@OMP_4.5+0x60>  // b.pmore
   1694c:	ldp	x19, x20, [sp, #16]
   16950:	ldr	x21, [sp, #32]
   16954:	ldp	x29, x30, [sp], #48
   16958:	ret
   1695c:	add	x3, x2, x1
   16960:	str	x3, [x20, x1, lsl #3]
   16964:	add	x1, x1, #0x1
   16968:	b	16944 <omp_get_partition_place_nums_8_@@OMP_4.5+0x48>

000000000001696c <omp_set_default_device_@@OMP_4.0>:
   1696c:	ldr	w0, [x0]
   16970:	b	b5e8 <omp_set_default_device@@OMP_4.0>

0000000000016974 <omp_set_default_device_8_@@OMP_4.0>:
   16974:	ldr	x0, [x0]
   16978:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1697c:	cmp	x0, x1
   16980:	b.lt	16994 <omp_set_default_device_8_@@OMP_4.0+0x20>  // b.tstop
   16984:	mov	x1, #0x7fffffff            	// #2147483647
   16988:	cmp	x0, x1
   1698c:	csel	x0, x0, x1, le
   16990:	b	b5e8 <omp_set_default_device@@OMP_4.0>
   16994:	mov	w0, #0x80000000            	// #-2147483648
   16998:	b	16990 <omp_set_default_device_8_@@OMP_4.0+0x1c>

000000000001699c <omp_get_default_device_@@OMP_4.0>:
   1699c:	b	b634 <omp_get_default_device@@OMP_4.0>

00000000000169a0 <omp_get_num_devices_@@OMP_4.0>:
   169a0:	b	b664 <omp_get_num_devices@@OMP_4.0>

00000000000169a4 <omp_get_num_teams_@@OMP_4.0>:
   169a4:	b	1fe4c <omp_get_num_teams@@OMP_4.0>

00000000000169a8 <omp_get_team_num_@@OMP_4.0>:
   169a8:	b	1fe58 <omp_get_team_num@@OMP_4.0>

00000000000169ac <omp_is_initial_device_@@OMP_4.0>:
   169ac:	b	b668 <omp_is_initial_device@@OMP_4.0>

00000000000169b0 <omp_get_initial_device_@@OMP_4.5>:
   169b0:	b	b4bc <omp_get_initial_device@@OMP_4.5>

00000000000169b4 <omp_get_max_task_priority_@@OMP_4.5>:
   169b4:	b	b480 <omp_get_max_task_priority@@OMP_4.5>

00000000000169b8 <omp_set_affinity_format_@@OMP_5.0>:
   169b8:	b	1f374 <acc_set_cuda_stream@@OACC_2.0+0x594>

00000000000169bc <omp_get_affinity_format_@@OMP_5.0>:
   169bc:	stp	x29, x30, [sp, #-48]!
   169c0:	mov	x29, sp
   169c4:	stp	x21, x22, [sp, #32]
   169c8:	mov	x21, x0
   169cc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   169d0:	stp	x19, x20, [sp, #16]
   169d4:	mov	x20, x1
   169d8:	ldr	x22, [x0, #832]
   169dc:	mov	x0, x22
   169e0:	bl	8630 <strlen@plt>
   169e4:	mov	x19, x0
   169e8:	cbz	x20, 16a14 <omp_get_affinity_format_@@OMP_5.0+0x58>
   169ec:	cmp	x0, x20
   169f0:	b.cs	16a28 <omp_get_affinity_format_@@OMP_5.0+0x6c>  // b.hs, b.nlast
   169f4:	mov	x2, x0
   169f8:	mov	x1, x22
   169fc:	mov	x0, x21
   16a00:	bl	8600 <memcpy@plt>
   16a04:	sub	x2, x20, x19
   16a08:	add	x0, x21, x19
   16a0c:	mov	w1, #0x20                  	// #32
   16a10:	bl	8800 <memset@plt>
   16a14:	mov	w0, w19
   16a18:	ldp	x19, x20, [sp, #16]
   16a1c:	ldp	x21, x22, [sp, #32]
   16a20:	ldp	x29, x30, [sp], #48
   16a24:	ret
   16a28:	mov	x2, x20
   16a2c:	mov	x1, x22
   16a30:	mov	x0, x21
   16a34:	bl	8600 <memcpy@plt>
   16a38:	b	16a14 <omp_get_affinity_format_@@OMP_5.0+0x58>

0000000000016a3c <omp_display_affinity_@@OMP_5.0>:
   16a3c:	sub	sp, sp, #0x360
   16a40:	stp	x29, x30, [sp]
   16a44:	mov	x29, sp
   16a48:	stp	x19, x20, [sp, #16]
   16a4c:	mov	x20, x1
   16a50:	stp	x21, x22, [sp, #32]
   16a54:	stp	x23, x24, [sp, #48]
   16a58:	stp	x25, x26, [sp, #64]
   16a5c:	str	x27, [sp, #80]
   16a60:	cbz	x1, 16b88 <omp_display_affinity_@@OMP_5.0+0x14c>
   16a64:	mov	x21, x0
   16a68:	cmp	x1, #0xff
   16a6c:	b.ls	16b2c <omp_display_affinity_@@OMP_5.0+0xf0>  // b.plast
   16a70:	add	x0, x1, #0x1
   16a74:	bl	adb0 <fprintf@plt+0x2250>
   16a78:	mov	x19, x0
   16a7c:	mov	x1, x21
   16a80:	mov	x21, x19
   16a84:	mov	x2, x20
   16a88:	mov	x0, x19
   16a8c:	bl	8600 <memcpy@plt>
   16a90:	strb	wzr, [x19, x20]
   16a94:	bl	8af0 <pthread_self@plt>
   16a98:	adrp	x23, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   16a9c:	ldr	x23, [x23, #4016]
   16aa0:	mrs	x1, tpidr_el0
   16aa4:	add	x24, sp, #0x160
   16aa8:	add	x23, x1, x23
   16aac:	mov	x3, x0
   16ab0:	add	x27, x23, #0x10
   16ab4:	mov	x2, x19
   16ab8:	mov	x25, x0
   16abc:	mov	x4, x27
   16ac0:	ldr	w5, [x23, #92]
   16ac4:	mov	x0, x24
   16ac8:	mov	x1, #0x200                 	// #512
   16acc:	bl	1f748 <omp_get_affinity_format@@OMP_5.0+0x314>
   16ad0:	mov	x19, x0
   16ad4:	cmp	x0, #0x1ff
   16ad8:	add	x26, x0, #0x1
   16adc:	b.hi	16b34 <omp_display_affinity_@@OMP_5.0+0xf8>  // b.pmore
   16ae0:	mov	w0, #0xa                   	// #10
   16ae4:	mov	x1, x26
   16ae8:	strb	w0, [x24, x19]
   16aec:	mov	x0, x24
   16af0:	bl	1f35c <acc_set_cuda_stream@@OACC_2.0+0x57c>
   16af4:	cbz	x21, 16b0c <omp_display_affinity_@@OMP_5.0+0xd0>
   16af8:	add	x0, sp, #0x60
   16afc:	cmp	x21, x0
   16b00:	b.eq	16b0c <omp_display_affinity_@@OMP_5.0+0xd0>  // b.none
   16b04:	mov	x0, x21
   16b08:	bl	8950 <free@plt>
   16b0c:	ldp	x29, x30, [sp]
   16b10:	ldp	x19, x20, [sp, #16]
   16b14:	ldp	x21, x22, [sp, #32]
   16b18:	ldp	x23, x24, [sp, #48]
   16b1c:	ldp	x25, x26, [sp, #64]
   16b20:	ldr	x27, [sp, #80]
   16b24:	add	sp, sp, #0x360
   16b28:	ret
   16b2c:	add	x19, sp, #0x60
   16b30:	b	16a7c <omp_display_affinity_@@OMP_5.0+0x40>
   16b34:	mov	x0, x26
   16b38:	bl	adb0 <fprintf@plt+0x2250>
   16b3c:	mov	x22, x0
   16b40:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16b44:	ldr	w5, [x23, #92]
   16b48:	cmp	x20, #0x0
   16b4c:	ldr	x2, [x0, #832]
   16b50:	mov	x4, x27
   16b54:	mov	x3, x25
   16b58:	mov	x0, x24
   16b5c:	csel	x2, x2, x21, eq  // eq = none
   16b60:	mov	x1, #0x200                 	// #512
   16b64:	bl	1f748 <omp_get_affinity_format@@OMP_5.0+0x314>
   16b68:	mov	x1, x26
   16b6c:	mov	w0, #0xa                   	// #10
   16b70:	strb	w0, [x22, x19]
   16b74:	mov	x0, x22
   16b78:	bl	1f35c <acc_set_cuda_stream@@OACC_2.0+0x57c>
   16b7c:	mov	x0, x22
   16b80:	bl	8950 <free@plt>
   16b84:	b	16af4 <omp_display_affinity_@@OMP_5.0+0xb8>
   16b88:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16b8c:	mov	x21, #0x0                   	// #0
   16b90:	ldr	x19, [x0, #832]
   16b94:	b	16a94 <omp_display_affinity_@@OMP_5.0+0x58>

0000000000016b98 <omp_capture_affinity_@@OMP_5.0>:
   16b98:	stp	x29, x30, [sp, #-320]!
   16b9c:	mov	x29, sp
   16ba0:	stp	x19, x20, [sp, #16]
   16ba4:	stp	x21, x22, [sp, #32]
   16ba8:	mov	x22, x0
   16bac:	mov	x21, x2
   16bb0:	str	x23, [sp, #48]
   16bb4:	cbz	x3, 16c70 <omp_capture_affinity_@@OMP_5.0+0xd8>
   16bb8:	mov	x23, x1
   16bbc:	mov	x20, x3
   16bc0:	cmp	x3, #0xff
   16bc4:	b.ls	16c68 <omp_capture_affinity_@@OMP_5.0+0xd0>  // b.plast
   16bc8:	add	x0, x3, #0x1
   16bcc:	bl	adb0 <fprintf@plt+0x2250>
   16bd0:	mov	x19, x0
   16bd4:	mov	x2, x20
   16bd8:	mov	x1, x23
   16bdc:	mov	x0, x19
   16be0:	bl	8600 <memcpy@plt>
   16be4:	strb	wzr, [x19, x20]
   16be8:	mov	x20, x19
   16bec:	bl	8af0 <pthread_self@plt>
   16bf0:	mov	x3, x0
   16bf4:	adrp	x4, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   16bf8:	ldr	x4, [x4, #4016]
   16bfc:	mrs	x1, tpidr_el0
   16c00:	mov	x2, x19
   16c04:	mov	x0, x22
   16c08:	add	x4, x1, x4
   16c0c:	mov	x1, x21
   16c10:	add	x4, x4, #0x10
   16c14:	ldr	w5, [x4, #76]
   16c18:	bl	1f748 <omp_get_affinity_format@@OMP_5.0+0x314>
   16c1c:	mov	x19, x0
   16c20:	cbz	x20, 16c38 <omp_capture_affinity_@@OMP_5.0+0xa0>
   16c24:	add	x0, sp, #0x40
   16c28:	cmp	x20, x0
   16c2c:	b.eq	16c38 <omp_capture_affinity_@@OMP_5.0+0xa0>  // b.none
   16c30:	mov	x0, x20
   16c34:	bl	8950 <free@plt>
   16c38:	cmp	x21, x19
   16c3c:	b.ls	16c50 <omp_capture_affinity_@@OMP_5.0+0xb8>  // b.plast
   16c40:	sub	x2, x21, x19
   16c44:	add	x0, x22, x19
   16c48:	mov	w1, #0x20                  	// #32
   16c4c:	bl	8800 <memset@plt>
   16c50:	mov	w0, w19
   16c54:	ldp	x19, x20, [sp, #16]
   16c58:	ldp	x21, x22, [sp, #32]
   16c5c:	ldr	x23, [sp, #48]
   16c60:	ldp	x29, x30, [sp], #320
   16c64:	ret
   16c68:	add	x19, sp, #0x40
   16c6c:	b	16bd4 <omp_capture_affinity_@@OMP_5.0+0x3c>
   16c70:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16c74:	mov	x20, #0x0                   	// #0
   16c78:	ldr	x19, [x0, #832]
   16c7c:	b	16bec <omp_capture_affinity_@@OMP_5.0+0x54>

0000000000016c80 <omp_pause_resource_@@OMP_5.0>:
   16c80:	ldr	w0, [x0]
   16c84:	ldr	w1, [x1]
   16c88:	b	1b718 <omp_pause_resource@@OMP_5.0>

0000000000016c8c <omp_pause_resource_all_@@OMP_5.0>:
   16c8c:	ldr	w0, [x0]
   16c90:	b	1b760 <omp_pause_resource_all@@OMP_5.0>
   16c94:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16c98:	ldr	x2, [x2, #1576]
   16c9c:	ldr	x2, [x2, w1, uxtw #3]
   16ca0:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16ca4:	ldr	x1, [x1, #1712]
   16ca8:	b	8ac0 <pthread_attr_setaffinity_np@plt>
   16cac:	stp	x29, x30, [sp, #-48]!
   16cb0:	mov	x29, sp
   16cb4:	stp	x19, x20, [sp, #16]
   16cb8:	mov	x20, x0
   16cbc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16cc0:	stp	x21, x22, [sp, #32]
   16cc4:	and	w22, w1, #0xff
   16cc8:	ldr	x19, [x0, #1720]
   16ccc:	cbnz	x19, 16cfc <omp_pause_resource_all_@@OMP_5.0+0x70>
   16cd0:	cbz	w22, 16cec <omp_pause_resource_all_@@OMP_5.0+0x60>
   16cd4:	mov	x19, #0x0                   	// #0
   16cd8:	mov	x0, x19
   16cdc:	ldp	x19, x20, [sp, #16]
   16ce0:	ldp	x21, x22, [sp, #32]
   16ce4:	ldp	x29, x30, [sp], #48
   16ce8:	ret
   16cec:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16cf0:	add	x0, x0, #0x820
   16cf4:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   16cf8:	b	16cd8 <omp_pause_resource_all_@@OMP_5.0+0x4c>
   16cfc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16d00:	ldr	x21, [x0, #1712]
   16d04:	add	x0, x21, #0x8
   16d08:	mul	x0, x0, x20
   16d0c:	bl	87a0 <malloc@plt>
   16d10:	mov	x19, x0
   16d14:	cbnz	x0, 16d28 <omp_pause_resource_all_@@OMP_5.0+0x9c>
   16d18:	cbnz	w22, 16cd4 <omp_pause_resource_all_@@OMP_5.0+0x48>
   16d1c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16d20:	add	x0, x0, #0x83f
   16d24:	b	16cf4 <omp_pause_resource_all_@@OMP_5.0+0x68>
   16d28:	add	x1, x0, x20, lsl #3
   16d2c:	mov	x0, #0x0                   	// #0
   16d30:	cmp	x0, x20
   16d34:	b.eq	16cd8 <omp_pause_resource_all_@@OMP_5.0+0x4c>  // b.none
   16d38:	str	x1, [x19, x0, lsl #3]
   16d3c:	add	x0, x0, #0x1
   16d40:	add	x1, x1, x21
   16d44:	b	16d30 <omp_pause_resource_all_@@OMP_5.0+0xa4>
   16d48:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16d4c:	ldr	x2, [x1, #1712]
   16d50:	mov	w1, #0x0                   	// #0
   16d54:	b	8800 <memset@plt>
   16d58:	stp	x29, x30, [sp, #-32]!
   16d5c:	mov	x5, x2
   16d60:	mov	x2, x3
   16d64:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16d68:	mov	x29, sp
   16d6c:	mov	x9, #0x1                   	// #1
   16d70:	ldr	x6, [x3, #1712]
   16d74:	str	x19, [sp, #16]
   16d78:	and	w19, w4, #0xff
   16d7c:	lsl	x6, x6, #3
   16d80:	cmp	x1, x6
   16d84:	b.cc	16db0 <omp_pause_resource_all_@@OMP_5.0+0x124>  // b.lo, b.ul, b.last
   16d88:	cbz	w19, 16da0 <omp_pause_resource_all_@@OMP_5.0+0x114>
   16d8c:	mov	w19, #0x0                   	// #0
   16d90:	mov	w0, w19
   16d94:	ldr	x19, [sp, #16]
   16d98:	ldp	x29, x30, [sp], #32
   16d9c:	ret
   16da0:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16da4:	add	x0, x0, #0x86c
   16da8:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   16dac:	b	16d90 <omp_pause_resource_all_@@OMP_5.0+0x104>
   16db0:	ldr	x4, [x3, #1712]
   16db4:	cmp	x4, x1, lsr #3
   16db8:	b.ls	16dd4 <omp_pause_resource_all_@@OMP_5.0+0x148>  // b.plast
   16dbc:	lsr	x4, x1, #6
   16dc0:	lsl	x7, x9, x1
   16dc4:	lsl	x4, x4, #3
   16dc8:	ldr	x8, [x0, x4]
   16dcc:	orr	x7, x8, x7
   16dd0:	str	x7, [x0, x4]
   16dd4:	subs	x5, x5, #0x1
   16dd8:	b.eq	16e18 <omp_pause_resource_all_@@OMP_5.0+0x18c>  // b.none
   16ddc:	cmp	x2, #0x0
   16de0:	add	x4, x1, x2
   16de4:	b.ge	16e04 <omp_pause_resource_all_@@OMP_5.0+0x178>  // b.tcont
   16de8:	cmp	x1, x4
   16dec:	b.cs	16e10 <omp_pause_resource_all_@@OMP_5.0+0x184>  // b.hs, b.nlast
   16df0:	cbnz	w19, 16d8c <omp_pause_resource_all_@@OMP_5.0+0x100>
   16df4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16df8:	add	x0, x0, #0x890
   16dfc:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   16e00:	b	16d90 <omp_pause_resource_all_@@OMP_5.0+0x104>
   16e04:	b.eq	16e10 <omp_pause_resource_all_@@OMP_5.0+0x184>  // b.none
   16e08:	cmp	x1, x4
   16e0c:	b.hi	16df0 <omp_pause_resource_all_@@OMP_5.0+0x164>  // b.pmore
   16e10:	mov	x1, x4
   16e14:	b	16d80 <omp_pause_resource_all_@@OMP_5.0+0xf4>
   16e18:	mov	w19, #0x1                   	// #1
   16e1c:	b	16d90 <omp_pause_resource_all_@@OMP_5.0+0x104>
   16e20:	stp	x29, x30, [sp, #-240]!
   16e24:	cmp	w1, #0x3
   16e28:	mov	x29, sp
   16e2c:	stp	x21, x22, [sp, #32]
   16e30:	adrp	x22, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16e34:	mov	w21, w0
   16e38:	and	w0, w5, #0xff
   16e3c:	str	w0, [sp, #180]
   16e40:	ldr	x0, [x22, #1712]
   16e44:	stp	x23, x24, [sp, #48]
   16e48:	mov	w24, w1
   16e4c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16e50:	add	x1, x1, #0x8b8
   16e54:	lsl	x0, x0, #3
   16e58:	str	x0, [sp, #168]
   16e5c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16e60:	add	x0, x0, #0x8bd
   16e64:	csel	x0, x1, x0, eq  // eq = none
   16e68:	stp	x19, x20, [sp, #16]
   16e6c:	mov	x19, x3
   16e70:	stp	x25, x26, [sp, #64]
   16e74:	mov	x20, #0x0                   	// #0
   16e78:	stp	x27, x28, [sp, #80]
   16e7c:	adrp	x28, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16e80:	mov	x25, x28
   16e84:	str	x0, [sp, #160]
   16e88:	add	x0, sp, #0xe0
   16e8c:	str	x4, [sp, #120]
   16e90:	str	x2, [sp, #144]
   16e94:	str	x0, [sp, #192]
   16e98:	add	x0, sp, #0xe8
   16e9c:	str	x0, [sp, #152]
   16ea0:	stp	xzr, xzr, [sp, #216]
   16ea4:	ldr	x0, [sp, #168]
   16ea8:	cmp	x20, x0
   16eac:	b.eq	16ec0 <omp_pause_resource_all_@@OMP_5.0+0x234>  // b.none
   16eb0:	ldr	x0, [x28, #1616]
   16eb4:	ldr	x1, [sp, #144]
   16eb8:	cmp	x0, x1
   16ebc:	b.cc	16ee4 <omp_pause_resource_all_@@OMP_5.0+0x258>  // b.lo, b.ul, b.last
   16ec0:	ldr	x0, [sp, #216]
   16ec4:	bl	8950 <free@plt>
   16ec8:	ldp	x19, x20, [sp, #16]
   16ecc:	ldp	x21, x22, [sp, #32]
   16ed0:	ldp	x23, x24, [sp, #48]
   16ed4:	ldp	x25, x26, [sp, #64]
   16ed8:	ldp	x27, x28, [sp, #80]
   16edc:	ldp	x29, x30, [sp], #240
   16ee0:	ret
   16ee4:	lsr	x0, x20, #3
   16ee8:	str	x0, [sp, #128]
   16eec:	ldr	x0, [x22, #1712]
   16ef0:	cmp	x0, x20, lsr #3
   16ef4:	b.ls	16f74 <omp_pause_resource_all_@@OMP_5.0+0x2e8>  // b.plast
   16ef8:	lsr	x23, x20, #6
   16efc:	and	w0, w20, #0x3f
   16f00:	str	w0, [sp, #176]
   16f04:	lsl	x23, x23, #3
   16f08:	ldrb	w1, [sp, #176]
   16f0c:	ldr	x0, [x19, x23]
   16f10:	lsr	x0, x0, x1
   16f14:	tbz	w0, #0, 16f74 <omp_pause_resource_all_@@OMP_5.0+0x2e8>
   16f18:	ldr	x3, [sp, #160]
   16f1c:	mov	x2, x20
   16f20:	ldr	x0, [sp, #120]
   16f24:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16f28:	add	x1, x1, #0x8c4
   16f2c:	add	x0, x0, #0x1b
   16f30:	bl	86b0 <sprintf@plt>
   16f34:	ldr	x0, [sp, #120]
   16f38:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   16f3c:	add	x1, x1, #0xaa0
   16f40:	bl	8790 <fopen@plt>
   16f44:	str	x0, [sp, #104]
   16f48:	cbnz	x0, 16f7c <omp_pause_resource_all_@@OMP_5.0+0x2f0>
   16f4c:	ldr	x0, [x22, #1712]
   16f50:	lsr	x1, x20, #3
   16f54:	cmp	x1, x0
   16f58:	b.cs	16f74 <omp_pause_resource_all_@@OMP_5.0+0x2e8>  // b.hs, b.nlast
   16f5c:	ldrb	w1, [sp, #176]
   16f60:	mov	x0, #0x1                   	// #1
   16f64:	lsl	x0, x0, x1
   16f68:	ldr	x1, [x19, x23]
   16f6c:	bic	x0, x1, x0
   16f70:	str	x0, [x19, x23]
   16f74:	add	x20, x20, #0x1
   16f78:	b	16ea4 <omp_pause_resource_all_@@OMP_5.0+0x218>
   16f7c:	ldr	x2, [sp, #104]
   16f80:	add	x0, sp, #0xd8
   16f84:	ldr	x1, [sp, #192]
   16f88:	bl	8920 <getline@plt>
   16f8c:	cmp	x0, #0x0
   16f90:	b.le	1704c <omp_pause_resource_all_@@OMP_5.0+0x3c0>
   16f94:	ldr	x0, [sp, #216]
   16f98:	str	x0, [sp, #232]
   16f9c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   16fa0:	str	x0, [sp, #184]
   16fa4:	ldr	x2, [x28, #1616]
   16fa8:	cmp	w24, w21
   16fac:	ldr	x1, [x0, #1576]
   16fb0:	ldr	x27, [x1, x2, lsl #3]
   16fb4:	b.ne	16fc0 <omp_pause_resource_all_@@OMP_5.0+0x334>  // b.any
   16fb8:	mov	x0, x27
   16fbc:	bl	16d48 <omp_pause_resource_all_@@OMP_5.0+0xbc>
   16fc0:	ldr	x4, [sp, #232]
   16fc4:	ldrb	w0, [x4]
   16fc8:	cmp	w0, #0x0
   16fcc:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   16fd0:	b.eq	1700c <omp_pause_resource_all_@@OMP_5.0+0x380>  // b.none
   16fd4:	str	x4, [sp, #136]
   16fd8:	bl	8b20 <__errno_location@plt>
   16fdc:	mov	x3, x0
   16fe0:	mov	w2, #0xa                   	// #10
   16fe4:	ldr	x4, [sp, #136]
   16fe8:	str	x3, [sp, #112]
   16fec:	ldr	x1, [sp, #152]
   16ff0:	str	wzr, [x3]
   16ff4:	mov	x0, x4
   16ff8:	bl	8620 <strtoul@plt>
   16ffc:	mov	x26, x0
   17000:	ldr	x3, [sp, #112]
   17004:	ldr	w0, [x3]
   17008:	cbz	w0, 17058 <omp_pause_resource_all_@@OMP_5.0+0x3cc>
   1700c:	ldr	x1, [x22, #1712]
   17010:	cmp	w24, w21
   17014:	b.ne	171c8 <omp_pause_resource_all_@@OMP_5.0+0x53c>  // b.any
   17018:	ldr	x0, [sp, #128]
   1701c:	cmp	x0, x1
   17020:	b.cs	171bc <omp_pause_resource_all_@@OMP_5.0+0x530>  // b.hs, b.nlast
   17024:	ldr	x0, [x19, x23]
   17028:	ldrb	w2, [sp, #176]
   1702c:	lsr	x0, x0, x2
   17030:	tbz	w0, #0, 171bc <omp_pause_resource_all_@@OMP_5.0+0x530>
   17034:	ldrb	w1, [sp, #176]
   17038:	mov	x0, #0x1                   	// #1
   1703c:	lsl	x0, x0, x1
   17040:	ldr	x1, [x19, x23]
   17044:	bic	x0, x1, x0
   17048:	str	x0, [x19, x23]
   1704c:	ldr	x0, [sp, #104]
   17050:	bl	8770 <fclose@plt>
   17054:	b	16f74 <omp_pause_resource_all_@@OMP_5.0+0x2e8>
   17058:	ldr	x0, [sp, #232]
   1705c:	ldrb	w1, [x0]
   17060:	cmp	w1, #0x2d
   17064:	b.ne	171b4 <omp_pause_resource_all_@@OMP_5.0+0x528>  // b.any
   17068:	ldr	x1, [sp, #152]
   1706c:	add	x0, x0, #0x1
   17070:	mov	w2, #0xa                   	// #10
   17074:	str	x3, [sp, #136]
   17078:	bl	8620 <strtoul@plt>
   1707c:	str	x0, [sp, #112]
   17080:	ldr	x3, [sp, #136]
   17084:	ldr	w0, [x3]
   17088:	cbnz	w0, 1700c <omp_pause_resource_all_@@OMP_5.0+0x380>
   1708c:	ldr	x0, [sp, #112]
   17090:	cmp	x26, x0
   17094:	b.hi	1700c <omp_pause_resource_all_@@OMP_5.0+0x380>  // b.pmore
   17098:	ldr	x0, [sp, #112]
   1709c:	cmp	x26, x0
   170a0:	b.ls	170c0 <omp_pause_resource_all_@@OMP_5.0+0x434>  // b.plast
   170a4:	ldr	x0, [sp, #232]
   170a8:	ldrb	w1, [x0]
   170ac:	cmp	w1, #0x2c
   170b0:	b.ne	16fc0 <omp_pause_resource_all_@@OMP_5.0+0x334>  // b.any
   170b4:	add	x0, x0, #0x1
   170b8:	str	x0, [sp, #232]
   170bc:	b	16fc0 <omp_pause_resource_all_@@OMP_5.0+0x334>
   170c0:	lsr	x0, x26, #3
   170c4:	str	x0, [sp, #136]
   170c8:	ldr	x0, [x22, #1712]
   170cc:	cmp	x0, x26, lsr #3
   170d0:	b.ls	1711c <omp_pause_resource_all_@@OMP_5.0+0x490>  // b.plast
   170d4:	lsr	x5, x26, #6
   170d8:	and	w0, w26, #0x3f
   170dc:	str	w0, [sp, #136]
   170e0:	lsl	x5, x5, #3
   170e4:	ldrb	w1, [sp, #136]
   170e8:	ldr	x0, [x19, x5]
   170ec:	lsr	x0, x0, x1
   170f0:	tbz	w0, #0, 1711c <omp_pause_resource_all_@@OMP_5.0+0x490>
   170f4:	cmp	w24, #0x3
   170f8:	ccmp	w24, w21, #0x4, eq  // eq = none
   170fc:	b.le	17124 <omp_pause_resource_all_@@OMP_5.0+0x498>
   17100:	ldrb	w5, [sp, #180]
   17104:	mov	x3, x19
   17108:	ldr	x4, [sp, #120]
   1710c:	mov	w0, w21
   17110:	ldr	x2, [sp, #144]
   17114:	mov	w1, #0x2                   	// #2
   17118:	bl	16e20 <omp_pause_resource_all_@@OMP_5.0+0x194>
   1711c:	add	x26, x26, #0x1
   17120:	b	17098 <omp_pause_resource_all_@@OMP_5.0+0x40c>
   17124:	cmp	w21, #0x1
   17128:	b.ne	1714c <omp_pause_resource_all_@@OMP_5.0+0x4c0>  // b.any
   1712c:	ldr	x0, [sp, #184]
   17130:	str	x5, [sp, #200]
   17134:	ldr	x1, [x25, #1616]
   17138:	ldr	x0, [x0, #1576]
   1713c:	ldr	x27, [x0, x1, lsl #3]
   17140:	mov	x0, x27
   17144:	bl	16d48 <omp_pause_resource_all_@@OMP_5.0+0xbc>
   17148:	ldr	x5, [sp, #200]
   1714c:	mov	x1, x26
   17150:	mov	x0, x27
   17154:	mov	w4, #0x1                   	// #1
   17158:	mov	x3, #0x0                   	// #0
   1715c:	mov	x2, #0x1                   	// #1
   17160:	str	x5, [sp, #200]
   17164:	bl	16d58 <omp_pause_resource_all_@@OMP_5.0+0xcc>
   17168:	tst	w0, #0xff
   1716c:	b.eq	1711c <omp_pause_resource_all_@@OMP_5.0+0x490>  // b.none
   17170:	ldr	x0, [x22, #1712]
   17174:	lsr	x1, x26, #3
   17178:	cmp	x1, x0
   1717c:	b.cs	1719c <omp_pause_resource_all_@@OMP_5.0+0x510>  // b.hs, b.nlast
   17180:	ldr	x5, [sp, #200]
   17184:	mov	x0, #0x1                   	// #1
   17188:	ldrb	w1, [sp, #136]
   1718c:	lsl	x0, x0, x1
   17190:	ldr	x1, [x19, x5]
   17194:	bic	x0, x1, x0
   17198:	str	x0, [x19, x5]
   1719c:	cmp	w21, #0x1
   171a0:	b.ne	1711c <omp_pause_resource_all_@@OMP_5.0+0x490>  // b.any
   171a4:	ldr	x0, [x25, #1616]
   171a8:	add	x0, x0, #0x1
   171ac:	str	x0, [x25, #1616]
   171b0:	b	1711c <omp_pause_resource_all_@@OMP_5.0+0x490>
   171b4:	str	x26, [sp, #112]
   171b8:	b	17098 <omp_pause_resource_all_@@OMP_5.0+0x40c>
   171bc:	ldr	x0, [x25, #1616]
   171c0:	add	x0, x0, #0x1
   171c4:	str	x0, [x25, #1616]
   171c8:	ldr	x0, [sp, #128]
   171cc:	cmp	x0, x1
   171d0:	b.cs	1704c <omp_pause_resource_all_@@OMP_5.0+0x3c0>  // b.hs, b.nlast
   171d4:	b	17034 <omp_pause_resource_all_@@OMP_5.0+0x3a8>
   171d8:	stp	x29, x30, [sp, #-16]!
   171dc:	mov	x4, x0
   171e0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   171e4:	mov	x29, sp
   171e8:	ldr	x0, [x0, #1712]
   171ec:	cmp	x1, x0, lsl #3
   171f0:	b.cc	1720c <omp_pause_resource_all_@@OMP_5.0+0x580>  // b.lo, b.ul, b.last
   171f4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   171f8:	add	x0, x0, #0x86c
   171fc:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   17200:	mov	w0, #0x0                   	// #0
   17204:	ldp	x29, x30, [sp], #16
   17208:	ret
   1720c:	mov	x2, x1
   17210:	cmp	x0, x1, lsr #3
   17214:	b.ls	17230 <omp_pause_resource_all_@@OMP_5.0+0x5a4>  // b.plast
   17218:	lsr	x3, x1, #6
   1721c:	and	w1, w1, #0x3f
   17220:	lsl	x3, x3, #3
   17224:	ldr	x5, [x4, x3]
   17228:	lsr	x0, x5, x1
   1722c:	tbnz	w0, #0, 17240 <omp_pause_resource_all_@@OMP_5.0+0x5b4>
   17230:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17234:	mov	x1, x2
   17238:	add	x0, x0, #0x8e2
   1723c:	b	171fc <omp_pause_resource_all_@@OMP_5.0+0x570>
   17240:	mov	x0, #0x1                   	// #1
   17244:	lsl	x1, x0, x1
   17248:	bic	x1, x5, x1
   1724c:	str	x1, [x4, x3]
   17250:	b	17204 <omp_pause_resource_all_@@OMP_5.0+0x578>
   17254:	stp	x29, x30, [sp, #-64]!
   17258:	mov	x29, sp
   1725c:	stp	x21, x22, [sp, #32]
   17260:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17264:	mov	x22, x1
   17268:	stp	x19, x20, [sp, #16]
   1726c:	mov	x19, x2
   17270:	mov	w1, #0x0                   	// #0
   17274:	ldr	x2, [x21, #1712]
   17278:	mov	x20, x0
   1727c:	str	x23, [sp, #48]
   17280:	lsl	x23, x2, #3
   17284:	bl	8800 <memset@plt>
   17288:	mov	x1, #0x0                   	// #0
   1728c:	mov	x5, #0x1                   	// #1
   17290:	cmp	x1, x23
   17294:	b.ne	172a0 <omp_pause_resource_all_@@OMP_5.0+0x614>  // b.any
   17298:	mov	w0, #0x1                   	// #1
   1729c:	b	172ec <omp_pause_resource_all_@@OMP_5.0+0x660>
   172a0:	ldr	x4, [x21, #1712]
   172a4:	cmp	x4, x1, lsr #3
   172a8:	b.ls	17334 <omp_pause_resource_all_@@OMP_5.0+0x6a8>  // b.plast
   172ac:	lsr	x0, x1, #6
   172b0:	mov	w2, w1
   172b4:	ldr	x0, [x22, x0, lsl #3]
   172b8:	lsr	x0, x0, x1
   172bc:	tbz	w0, #0, 17334 <omp_pause_resource_all_@@OMP_5.0+0x6a8>
   172c0:	adds	x3, x19, x1
   172c4:	cset	x0, cs  // cs = hs, nlast
   172c8:	cmp	x19, #0x0
   172cc:	b.ge	17300 <omp_pause_resource_all_@@OMP_5.0+0x674>  // b.tcont
   172d0:	cmp	x1, x3
   172d4:	b.cs	17310 <omp_pause_resource_all_@@OMP_5.0+0x684>  // b.hs, b.nlast
   172d8:	mov	x2, x19
   172dc:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   172e0:	add	x0, x0, #0x890
   172e4:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   172e8:	mov	w0, #0x0                   	// #0
   172ec:	ldp	x19, x20, [sp, #16]
   172f0:	ldp	x21, x22, [sp, #32]
   172f4:	ldr	x23, [sp, #48]
   172f8:	ldp	x29, x30, [sp], #64
   172fc:	ret
   17300:	b.eq	17310 <omp_pause_resource_all_@@OMP_5.0+0x684>  // b.none
   17304:	cbnz	x0, 172d8 <omp_pause_resource_all_@@OMP_5.0+0x64c>
   17308:	cmp	x23, x3
   1730c:	b.ls	172d8 <omp_pause_resource_all_@@OMP_5.0+0x64c>  // b.plast
   17310:	cmp	x4, x3, lsr #3
   17314:	b.ls	17334 <omp_pause_resource_all_@@OMP_5.0+0x6a8>  // b.plast
   17318:	lsr	x3, x3, #6
   1731c:	add	w2, w2, w19
   17320:	lsl	x3, x3, #3
   17324:	lsl	x2, x5, x2
   17328:	ldr	x0, [x20, x3]
   1732c:	orr	x2, x0, x2
   17330:	str	x2, [x20, x3]
   17334:	add	x1, x1, #0x1
   17338:	b	17290 <omp_pause_resource_all_@@OMP_5.0+0x604>
   1733c:	stp	x29, x30, [sp, #-16]!
   17340:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17344:	mov	x29, sp
   17348:	ldr	x2, [x2, #1712]
   1734c:	bl	88d0 <memcmp@plt>
   17350:	cmp	w0, #0x0
   17354:	cset	w0, eq  // eq = none
   17358:	ldp	x29, x30, [sp], #16
   1735c:	ret
   17360:	stp	x29, x30, [sp, #-96]!
   17364:	mov	x29, sp
   17368:	stp	x19, x20, [sp, #16]
   1736c:	and	w20, w0, #0xff
   17370:	mov	x19, #0x0                   	// #0
   17374:	stp	x21, x22, [sp, #32]
   17378:	mov	x21, #0x0                   	// #0
   1737c:	stp	x23, x24, [sp, #48]
   17380:	adrp	x23, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17384:	adrp	x24, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17388:	mov	x22, x23
   1738c:	str	x27, [sp, #80]
   17390:	mov	x27, x24
   17394:	stp	x25, x26, [sp, #64]
   17398:	adrp	x26, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1739c:	ldr	x1, [x23, #1616]
   173a0:	cmp	x1, x21
   173a4:	b.hi	173dc <omp_pause_resource_all_@@OMP_5.0+0x750>  // b.pmore
   173a8:	cbnz	x19, 17440 <omp_pause_resource_all_@@OMP_5.0+0x7b4>
   173ac:	cbnz	w20, 17468 <omp_pause_resource_all_@@OMP_5.0+0x7dc>
   173b0:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   173b4:	add	x0, x0, #0x912
   173b8:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   173bc:	mov	w0, w20
   173c0:	ldp	x19, x20, [sp, #16]
   173c4:	ldp	x21, x22, [sp, #32]
   173c8:	ldp	x23, x24, [sp, #48]
   173cc:	ldp	x25, x26, [sp, #64]
   173d0:	ldr	x27, [sp, #80]
   173d4:	ldp	x29, x30, [sp], #96
   173d8:	ret
   173dc:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   173e0:	lsl	x25, x21, #3
   173e4:	ldr	x0, [x24, #1576]
   173e8:	ldr	x3, [x2, #1712]
   173ec:	ldr	x5, [x26, #1720]
   173f0:	lsr	x3, x3, #3
   173f4:	ldr	x1, [x0, x25]
   173f8:	mov	x0, #0x0                   	// #0
   173fc:	cmp	x0, x3
   17400:	b.ne	17428 <omp_pause_resource_all_@@OMP_5.0+0x79c>  // b.any
   17404:	ldr	x0, [x2, #1712]
   17408:	bl	15a88 <omp_test_nest_lock@OMP_1.0+0x310>
   1740c:	cbz	x0, 17420 <omp_pause_resource_all_@@OMP_5.0+0x794>
   17410:	ldr	x0, [x27, #1576]
   17414:	ldr	x1, [x0, x25]
   17418:	str	x1, [x0, x19, lsl #3]
   1741c:	add	x19, x19, #0x1
   17420:	add	x21, x21, #0x1
   17424:	b	1739c <omp_pause_resource_all_@@OMP_5.0+0x710>
   17428:	ldr	x4, [x1, x0, lsl #3]
   1742c:	ldr	x6, [x5, x0, lsl #3]
   17430:	and	x4, x4, x6
   17434:	str	x4, [x1, x0, lsl #3]
   17438:	add	x0, x0, #0x1
   1743c:	b	173fc <omp_pause_resource_all_@@OMP_5.0+0x770>
   17440:	cmp	x1, x19
   17444:	b.ls	17460 <omp_pause_resource_all_@@OMP_5.0+0x7d4>  // b.plast
   17448:	cbnz	w20, 1745c <omp_pause_resource_all_@@OMP_5.0+0x7d0>
   1744c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17450:	mov	x2, x19
   17454:	add	x0, x0, #0x941
   17458:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   1745c:	str	x19, [x22, #1616]
   17460:	mov	w20, #0x1                   	// #1
   17464:	b	173bc <omp_pause_resource_all_@@OMP_5.0+0x730>
   17468:	mov	w20, #0x0                   	// #0
   1746c:	b	173bc <omp_pause_resource_all_@@OMP_5.0+0x730>
   17470:	stp	x29, x30, [sp, #-192]!
   17474:	mov	x29, sp
   17478:	stp	x21, x22, [sp, #32]
   1747c:	adrp	x22, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17480:	stp	x19, x20, [sp, #16]
   17484:	mov	x19, x1
   17488:	ldr	x1, [x22, #1720]
   1748c:	stp	x23, x24, [sp, #48]
   17490:	mov	w24, w0
   17494:	stp	x25, x26, [sp, #64]
   17498:	and	w23, w2, #0xff
   1749c:	str	x27, [sp, #80]
   174a0:	cbz	x1, 174b8 <omp_pause_resource_all_@@OMP_5.0+0x82c>
   174a4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   174a8:	ldr	x0, [x0, #1712]
   174ac:	bl	15a88 <omp_test_nest_lock@OMP_1.0+0x310>
   174b0:	cmp	x19, x0
   174b4:	csel	x19, x19, x0, ls  // ls = plast
   174b8:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   174bc:	adrp	x25, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   174c0:	mov	w1, w23
   174c4:	mov	x0, x19
   174c8:	bl	16cac <omp_pause_resource_all_@@OMP_5.0+0x20>
   174cc:	str	xzr, [x25, #1616]
   174d0:	str	x0, [x20, #1576]
   174d4:	cbz	x0, 17554 <omp_pause_resource_all_@@OMP_5.0+0x8c8>
   174d8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   174dc:	add	x21, x29, #0x68
   174e0:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   174e4:	add	x1, x1, #0x9a5
   174e8:	ldr	x27, [x0, #1712]
   174ec:	add	x0, x27, #0xf
   174f0:	and	x0, x0, #0xfffffffffffffff0
   174f4:	sub	sp, sp, x0
   174f8:	mov	x0, x21
   174fc:	bl	8a60 <strcpy@plt>
   17500:	mov	x26, sp
   17504:	ldr	x1, [x22, #1720]
   17508:	mov	x2, x27
   1750c:	mov	x0, x26
   17510:	bl	8600 <memcpy@plt>
   17514:	mov	w0, w24
   17518:	mov	w5, w23
   1751c:	mov	x4, x21
   17520:	mov	x3, x26
   17524:	mov	x2, x19
   17528:	mov	w1, #0x3                   	// #3
   1752c:	bl	16e20 <omp_pause_resource_all_@@OMP_5.0+0x194>
   17530:	ldr	x0, [x25, #1616]
   17534:	cbnz	x0, 17578 <omp_pause_resource_all_@@OMP_5.0+0x8ec>
   17538:	cbnz	w23, 17548 <omp_pause_resource_all_@@OMP_5.0+0x8bc>
   1753c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17540:	add	x0, x0, #0x9c1
   17544:	bl	b0c8 <GOMP_critical_name_end@@GOMP_1.0+0x124>
   17548:	ldr	x0, [x20, #1576]
   1754c:	bl	8950 <free@plt>
   17550:	str	xzr, [x20, #1576]
   17554:	mov	w0, #0x0                   	// #0
   17558:	mov	sp, x29
   1755c:	ldp	x19, x20, [sp, #16]
   17560:	ldp	x21, x22, [sp, #32]
   17564:	ldp	x23, x24, [sp, #48]
   17568:	ldp	x25, x26, [sp, #64]
   1756c:	ldr	x27, [sp, #80]
   17570:	ldp	x29, x30, [sp], #192
   17574:	ret
   17578:	mov	w0, #0x1                   	// #1
   1757c:	b	17558 <omp_pause_resource_all_@@OMP_5.0+0x8cc>
   17580:	stp	x29, x30, [sp, #-32]!
   17584:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17588:	mov	x29, sp
   1758c:	ldr	x1, [x0, #1576]
   17590:	str	x19, [sp, #16]
   17594:	mov	x19, x0
   17598:	cbz	x1, 175e8 <omp_pause_resource_all_@@OMP_5.0+0x95c>
   1759c:	bl	8af0 <pthread_self@plt>
   175a0:	ldr	x1, [x19, #1576]
   175a4:	ldr	x2, [x1]
   175a8:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   175ac:	ldr	x1, [x1, #1712]
   175b0:	bl	8ad0 <pthread_setaffinity_np@plt>
   175b4:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   175b8:	ldr	x0, [x0, #4016]
   175bc:	mrs	x1, tpidr_el0
   175c0:	add	x0, x1, x0
   175c4:	mov	w1, #0x1                   	// #1
   175c8:	str	w1, [x0, #92]
   175cc:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   175d0:	str	wzr, [x0, #52]
   175d4:	ldr	x1, [x1, #1616]
   175d8:	str	w1, [x0, #56]
   175dc:	ldr	x19, [sp, #16]
   175e0:	ldp	x29, x30, [sp], #32
   175e4:	ret
   175e8:	mov	w2, #0x1                   	// #1
   175ec:	mov	x1, #0xffffffffffffffff    	// #-1
   175f0:	mov	w0, #0x1                   	// #1
   175f4:	bl	17470 <omp_pause_resource_all_@@OMP_5.0+0x7e4>
   175f8:	tst	w0, #0xff
   175fc:	b.ne	1759c <omp_pause_resource_all_@@OMP_5.0+0x910>  // b.any
   17600:	b	175dc <omp_pause_resource_all_@@OMP_5.0+0x950>
   17604:	stp	x29, x30, [sp, #-96]!
   17608:	mov	x29, sp
   1760c:	stp	x21, x22, [sp, #32]
   17610:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17614:	ldr	x22, [x21, #1712]
   17618:	stp	x25, x26, [sp, #64]
   1761c:	adrp	x25, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   17620:	stp	x23, x24, [sp, #48]
   17624:	adrp	x24, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17628:	mov	x23, x0
   1762c:	ldr	x26, [x25, #4040]
   17630:	lsl	x22, x22, #3
   17634:	add	x24, x24, #0x9e4
   17638:	stp	x19, x20, [sp, #16]
   1763c:	mov	x19, #0x0                   	// #0
   17640:	mov	x20, #0x0                   	// #0
   17644:	stp	x27, x28, [sp, #80]
   17648:	mov	w28, #0x0                   	// #0
   1764c:	adrp	x27, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17650:	cmp	x20, x22
   17654:	b.ne	17694 <omp_pause_resource_all_@@OMP_5.0+0xa08>  // b.any
   17658:	cmp	x19, #0x1
   1765c:	b.ls	17714 <omp_pause_resource_all_@@OMP_5.0+0xa88>  // b.plast
   17660:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   17664:	mov	x2, x19
   17668:	ldp	x19, x20, [sp, #16]
   1766c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17670:	ldr	x0, [x0, #4040]
   17674:	add	x1, x1, #0x9e4
   17678:	ldp	x21, x22, [sp, #32]
   1767c:	ldp	x23, x24, [sp, #48]
   17680:	ldp	x25, x26, [sp, #64]
   17684:	ldp	x27, x28, [sp, #80]
   17688:	ldp	x29, x30, [sp], #96
   1768c:	ldr	x0, [x0]
   17690:	b	8b60 <fprintf@plt>
   17694:	ldr	x0, [x21, #1712]
   17698:	cmp	x0, x20, lsr #3
   1769c:	b.ls	176c0 <omp_pause_resource_all_@@OMP_5.0+0xa34>  // b.plast
   176a0:	lsr	x0, x20, #6
   176a4:	ldr	x0, [x23, x0, lsl #3]
   176a8:	lsr	x0, x0, x20
   176ac:	tbz	w0, #0, 176c0 <omp_pause_resource_all_@@OMP_5.0+0xa34>
   176b0:	cbz	x19, 176d0 <omp_pause_resource_all_@@OMP_5.0+0xa44>
   176b4:	add	x19, x19, #0x1
   176b8:	add	x20, x20, #0x1
   176bc:	b	17650 <omp_pause_resource_all_@@OMP_5.0+0x9c4>
   176c0:	cmp	x19, #0x1
   176c4:	b.hi	17700 <omp_pause_resource_all_@@OMP_5.0+0xa74>  // b.pmore
   176c8:	mov	x19, #0x0                   	// #0
   176cc:	b	176b8 <omp_pause_resource_all_@@OMP_5.0+0xa2c>
   176d0:	cbz	w28, 176e4 <omp_pause_resource_all_@@OMP_5.0+0xa58>
   176d4:	ldr	x0, [x25, #4040]
   176d8:	ldr	x1, [x0]
   176dc:	mov	w0, #0x2c                  	// #44
   176e0:	bl	86f0 <fputc@plt>
   176e4:	ldr	x0, [x25, #4040]
   176e8:	mov	x2, x20
   176ec:	add	x1, x27, #0x2e2
   176f0:	mov	w28, #0x1                   	// #1
   176f4:	ldr	x0, [x0]
   176f8:	bl	8b60 <fprintf@plt>
   176fc:	b	176b4 <omp_pause_resource_all_@@OMP_5.0+0xa28>
   17700:	ldr	x0, [x26]
   17704:	mov	x2, x19
   17708:	mov	x1, x24
   1770c:	bl	8b60 <fprintf@plt>
   17710:	b	176c8 <omp_pause_resource_all_@@OMP_5.0+0xa3c>
   17714:	ldp	x19, x20, [sp, #16]
   17718:	ldp	x21, x22, [sp, #32]
   1771c:	ldp	x23, x24, [sp, #48]
   17720:	ldp	x25, x26, [sp, #64]
   17724:	ldp	x27, x28, [sp, #80]
   17728:	ldp	x29, x30, [sp], #96
   1772c:	ret

0000000000017730 <omp_get_place_num_procs@@OMP_4.5>:
   17730:	tbnz	w0, #31, 17770 <omp_get_place_num_procs@@OMP_4.5+0x40>
   17734:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17738:	sxtw	x1, w0
   1773c:	ldr	x2, [x2, #1616]
   17740:	cmp	x2, w0, sxtw
   17744:	b.ls	17770 <omp_get_place_num_procs@@OMP_4.5+0x40>  // b.plast
   17748:	stp	x29, x30, [sp, #-16]!
   1774c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17750:	mov	x29, sp
   17754:	ldr	x0, [x0, #1576]
   17758:	ldr	x1, [x0, x1, lsl #3]
   1775c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17760:	ldr	x0, [x0, #1712]
   17764:	bl	15a88 <omp_test_nest_lock@OMP_1.0+0x310>
   17768:	ldp	x29, x30, [sp], #16
   1776c:	ret
   17770:	mov	w0, #0x0                   	// #0
   17774:	ret

0000000000017778 <omp_get_place_proc_ids@@OMP_4.5>:
   17778:	tbnz	w0, #31, 177b4 <omp_get_place_proc_ids@@OMP_4.5+0x3c>
   1777c:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17780:	sxtw	x2, w0
   17784:	ldr	x3, [x3, #1616]
   17788:	cmp	x3, w0, sxtw
   1778c:	b.ls	177b4 <omp_get_place_proc_ids@@OMP_4.5+0x3c>  // b.plast
   17790:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17794:	ldr	x0, [x0, #1576]
   17798:	ldr	x5, [x0, x2, lsl #3]
   1779c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   177a0:	ldr	x3, [x0, #1712]
   177a4:	mov	x0, #0x0                   	// #0
   177a8:	lsl	x4, x3, #3
   177ac:	cmp	x0, x4
   177b0:	b.ne	177b8 <omp_get_place_proc_ids@@OMP_4.5+0x40>  // b.any
   177b4:	ret
   177b8:	cmp	x3, x0, lsr #3
   177bc:	b.ls	177d4 <omp_get_place_proc_ids@@OMP_4.5+0x5c>  // b.plast
   177c0:	lsr	x2, x0, #6
   177c4:	ldr	x2, [x5, x2, lsl #3]
   177c8:	lsr	x2, x2, x0
   177cc:	tbz	w2, #0, 177d4 <omp_get_place_proc_ids@@OMP_4.5+0x5c>
   177d0:	str	w0, [x1], #4
   177d4:	add	x0, x0, #0x1
   177d8:	b	177ac <omp_get_place_proc_ids@@OMP_4.5+0x34>
   177dc:	tbnz	w0, #31, 17818 <omp_get_place_proc_ids@@OMP_4.5+0xa0>
   177e0:	adrp	x3, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   177e4:	sxtw	x2, w0
   177e8:	ldr	x3, [x3, #1616]
   177ec:	cmp	x3, w0, sxtw
   177f0:	b.ls	17818 <omp_get_place_proc_ids@@OMP_4.5+0xa0>  // b.plast
   177f4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   177f8:	ldr	x0, [x0, #1576]
   177fc:	ldr	x5, [x0, x2, lsl #3]
   17800:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17804:	mov	x0, #0x0                   	// #0
   17808:	ldr	x3, [x2, #1712]
   1780c:	lsl	x3, x3, #3
   17810:	cmp	x0, x3
   17814:	b.ne	1781c <omp_get_place_proc_ids@@OMP_4.5+0xa4>  // b.any
   17818:	ret
   1781c:	ldr	x4, [x2, #1712]
   17820:	cmp	x4, x0, lsr #3
   17824:	b.ls	1783c <omp_get_place_proc_ids@@OMP_4.5+0xc4>  // b.plast
   17828:	lsr	x4, x0, #6
   1782c:	ldr	x4, [x5, x4, lsl #3]
   17830:	lsr	x4, x4, x0
   17834:	tbz	w4, #0, 1783c <omp_get_place_proc_ids@@OMP_4.5+0xc4>
   17838:	str	x0, [x1], #8
   1783c:	add	x0, x0, #0x1
   17840:	b	17810 <omp_get_place_proc_ids@@OMP_4.5+0x98>
   17844:	stp	x29, x30, [sp, #-144]!
   17848:	mov	x29, sp
   1784c:	stp	x19, x20, [sp, #16]
   17850:	stp	x21, x22, [sp, #32]
   17854:	mov	x22, x0
   17858:	stp	x23, x24, [sp, #48]
   1785c:	mov	x23, x1
   17860:	mov	x24, x2
   17864:	stp	x25, x26, [sp, #64]
   17868:	stp	x27, x28, [sp, #80]
   1786c:	tbnz	w3, #31, 17950 <omp_get_place_proc_ids@@OMP_4.5+0x1d8>
   17870:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17874:	sxtw	x1, w3
   17878:	ldr	x0, [x0, #1616]
   1787c:	cmp	x0, w3, sxtw
   17880:	b.ls	17950 <omp_get_place_proc_ids@@OMP_4.5+0x1d8>  // b.plast
   17884:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17888:	ldr	x0, [x0, #1576]
   1788c:	ldr	x26, [x0, x1, lsl #3]
   17890:	adrp	x25, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17894:	adrp	x27, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17898:	add	x27, x27, #0x9ea
   1789c:	ldr	x21, [x25, #1712]
   178a0:	str	x25, [sp, #96]
   178a4:	add	x25, sp, #0x70
   178a8:	mov	w0, #0x0                   	// #0
   178ac:	add	x1, x25, #0x1
   178b0:	mov	x19, #0x0                   	// #0
   178b4:	lsl	x21, x21, #3
   178b8:	str	x1, [sp, #104]
   178bc:	mov	x28, x21
   178c0:	cmp	x21, x19
   178c4:	b.eq	179ec <omp_get_place_proc_ids@@OMP_4.5+0x274>  // b.none
   178c8:	ldr	x1, [sp, #96]
   178cc:	ldr	x1, [x1, #1712]
   178d0:	cmp	x1, x19, lsr #3
   178d4:	b.ls	179d4 <omp_get_place_proc_ids@@OMP_4.5+0x25c>  // b.plast
   178d8:	lsr	x1, x19, #6
   178dc:	ldr	x20, [x26, x1, lsl #3]
   178e0:	lsr	x20, x20, x19
   178e4:	and	w20, w20, #0x1
   178e8:	cmp	w20, w0
   178ec:	b.eq	17940 <omp_get_place_proc_ids@@OMP_4.5+0x1c8>  // b.none
   178f0:	cbz	w20, 179f0 <omp_get_place_proc_ids@@OMP_4.5+0x278>
   178f4:	cmp	x21, x28
   178f8:	b.eq	179dc <omp_get_place_proc_ids@@OMP_4.5+0x264>  // b.none
   178fc:	mov	w0, #0x2c                  	// #44
   17900:	strb	w0, [sp, #112]
   17904:	ldr	x0, [sp, #104]
   17908:	mov	x28, x19
   1790c:	mov	x2, x19
   17910:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17914:	add	x1, x1, #0x2e2
   17918:	bl	86b0 <sprintf@plt>
   1791c:	mov	x0, x25
   17920:	bl	8630 <strlen@plt>
   17924:	mov	x3, x25
   17928:	mov	x4, x0
   1792c:	mov	x2, x24
   17930:	mov	x0, x22
   17934:	mov	x1, x23
   17938:	bl	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1793c:	mov	w0, w20
   17940:	add	x19, x19, #0x1
   17944:	cmp	x21, x19
   17948:	b.cs	178c0 <omp_get_place_proc_ids@@OMP_4.5+0x148>  // b.hs, b.nlast
   1794c:	b	179a4 <omp_get_place_proc_ids@@OMP_4.5+0x22c>
   17950:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17954:	ldr	x26, [x0, #1720]
   17958:	cbnz	x26, 17890 <omp_get_place_proc_ids@@OMP_4.5+0x118>
   1795c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17960:	add	x19, sp, #0x70
   17964:	ldr	x2, [x0, #752]
   17968:	cmp	x2, #0x1
   1796c:	b.ls	179c0 <omp_get_place_proc_ids@@OMP_4.5+0x248>  // b.plast
   17970:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17974:	sub	x2, x2, #0x1
   17978:	add	x1, x1, #0x9e9
   1797c:	mov	x0, x19
   17980:	bl	86b0 <sprintf@plt>
   17984:	mov	x0, x19
   17988:	bl	8630 <strlen@plt>
   1798c:	mov	x3, x19
   17990:	mov	x4, x0
   17994:	mov	x2, x24
   17998:	mov	x1, x23
   1799c:	mov	x0, x22
   179a0:	bl	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   179a4:	ldp	x19, x20, [sp, #16]
   179a8:	ldp	x21, x22, [sp, #32]
   179ac:	ldp	x23, x24, [sp, #48]
   179b0:	ldp	x25, x26, [sp, #64]
   179b4:	ldp	x27, x28, [sp, #80]
   179b8:	ldp	x29, x30, [sp], #144
   179bc:	ret
   179c0:	mov	x0, x19
   179c4:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   179c8:	add	x1, x1, #0x9ef
   179cc:	bl	8a60 <strcpy@plt>
   179d0:	b	17984 <omp_get_place_proc_ids@@OMP_4.5+0x20c>
   179d4:	mov	w20, #0x0                   	// #0
   179d8:	b	178e8 <omp_get_place_proc_ids@@OMP_4.5+0x170>
   179dc:	mov	x0, x25
   179e0:	b	17908 <omp_get_place_proc_ids@@OMP_4.5+0x190>
   179e4:	mov	w0, #0x0                   	// #0
   179e8:	b	17940 <omp_get_place_proc_ids@@OMP_4.5+0x1c8>
   179ec:	cbz	w0, 17940 <omp_get_place_proc_ids@@OMP_4.5+0x1c8>
   179f0:	add	x0, x28, #0x1
   179f4:	cmp	x0, x19
   179f8:	b.eq	179e4 <omp_get_place_proc_ids@@OMP_4.5+0x26c>  // b.none
   179fc:	sub	x2, x19, #0x1
   17a00:	mov	x1, x27
   17a04:	mov	x0, x25
   17a08:	mov	w20, #0x0                   	// #0
   17a0c:	bl	86b0 <sprintf@plt>
   17a10:	b	1791c <omp_get_place_proc_ids@@OMP_4.5+0x1a4>
   17a14:	cmp	w0, #0x12
   17a18:	b.gt	17a38 <omp_get_place_proc_ids@@OMP_4.5+0x2c0>
   17a1c:	mov	x1, #0x1                   	// #1
   17a20:	lsl	x0, x1, x0
   17a24:	mov	x1, #0x5                   	// #5
   17a28:	movk	x1, #0x4, lsl #16
   17a2c:	tst	x0, x1
   17a30:	cset	w0, eq  // eq = none
   17a34:	ret
   17a38:	cmp	w0, #0x80
   17a3c:	cset	w0, ne  // ne = any
   17a40:	b	17a34 <omp_get_place_proc_ids@@OMP_4.5+0x2bc>
   17a44:	sxtw	x2, w2
   17a48:	tst	w0, #0xff
   17a4c:	b.eq	17a58 <omp_get_place_proc_ids@@OMP_4.5+0x2e0>  // b.none
   17a50:	ldrh	w0, [x1, x2, lsl #1]
   17a54:	ret
   17a58:	ldrb	w0, [x1, x2]
   17a5c:	b	17a54 <omp_get_place_proc_ids@@OMP_4.5+0x2dc>
   17a60:	mov	x7, #0x0                   	// #0
   17a64:	mov	x8, #0x1                   	// #1
   17a68:	cmp	x7, x0
   17a6c:	b.ne	17a74 <omp_get_place_proc_ids@@OMP_4.5+0x2fc>  // b.any
   17a70:	ret
   17a74:	ldrh	w5, [x2, x7, lsl #1]
   17a78:	and	w6, w5, #0xff
   17a7c:	cmp	w6, #0xc
   17a80:	b.ne	17ac0 <omp_get_place_proc_ids@@OMP_4.5+0x348>  // b.any
   17a84:	ldr	x6, [x3]
   17a88:	lsr	w5, w5, #8
   17a8c:	lsl	x5, x8, x5
   17a90:	cmp	x6, x5
   17a94:	b.cs	17a9c <omp_get_place_proc_ids@@OMP_4.5+0x324>  // b.hs, b.nlast
   17a98:	str	x5, [x3]
   17a9c:	ldr	x6, [x4]
   17aa0:	sub	x6, x6, #0x1
   17aa4:	add	x6, x6, x5
   17aa8:	neg	x5, x5
   17aac:	and	x5, x6, x5
   17ab0:	str	x5, [x4]
   17ab4:	ldr	x6, [x1, x7, lsl #3]
   17ab8:	add	x5, x6, x5
   17abc:	str	x5, [x4]
   17ac0:	add	x7, x7, #0x1
   17ac4:	b	17a68 <omp_get_place_proc_ids@@OMP_4.5+0x2f0>
   17ac8:	sub	sp, sp, #0xb0
   17acc:	cmp	w3, #0x1
   17ad0:	stp	x29, x30, [sp, #32]
   17ad4:	add	x29, sp, #0x20
   17ad8:	stp	x19, x20, [sp, #48]
   17adc:	stp	x21, x22, [sp, #64]
   17ae0:	mov	x22, x2
   17ae4:	stp	x23, x24, [sp, #80]
   17ae8:	stp	x25, x26, [sp, #96]
   17aec:	stp	x27, x28, [sp, #112]
   17af0:	mov	x27, x4
   17af4:	ldp	x28, x23, [sp, #176]
   17af8:	ldr	x26, [sp, #192]
   17afc:	b.ne	17c84 <omp_get_place_proc_ids@@OMP_4.5+0x50c>  // b.any
   17b00:	ldr	x2, [x4]
   17b04:	mul	x3, x22, x2
   17b08:	umulh	x2, x22, x2
   17b0c:	cbnz	x2, 17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>
   17b10:	ldr	x2, [x5]
   17b14:	mul	x4, x22, x2
   17b18:	umulh	x2, x22, x2
   17b1c:	cbnz	x2, 17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>
   17b20:	ldr	x2, [x6]
   17b24:	mul	x5, x22, x2
   17b28:	umulh	x2, x22, x2
   17b2c:	cbnz	x2, 17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>
   17b30:	orr	x2, x23, x26
   17b34:	cbnz	x2, 17b6c <omp_get_place_proc_ids@@OMP_4.5+0x3f4>
   17b38:	mov	x2, x3
   17b3c:	add	x1, x1, x5
   17b40:	add	x0, x0, x4
   17b44:	bl	8600 <memcpy@plt>
   17b48:	mov	w0, #0x0                   	// #0
   17b4c:	ldp	x29, x30, [sp, #32]
   17b50:	ldp	x19, x20, [sp, #48]
   17b54:	ldp	x21, x22, [sp, #64]
   17b58:	ldp	x23, x24, [sp, #80]
   17b5c:	ldp	x25, x26, [sp, #96]
   17b60:	ldp	x27, x28, [sp, #112]
   17b64:	add	sp, sp, #0xb0
   17b68:	ret
   17b6c:	cbnz	x26, 17b84 <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   17b70:	ldr	x6, [x23, #120]
   17b74:	add	x2, x1, x5
   17b78:	add	x1, x0, x4
   17b7c:	ldr	w0, [x23, #12]
   17b80:	b	17b98 <omp_get_place_proc_ids@@OMP_4.5+0x420>
   17b84:	cbnz	x23, 17bac <omp_get_place_proc_ids@@OMP_4.5+0x434>
   17b88:	add	x2, x1, x5
   17b8c:	add	x1, x0, x4
   17b90:	ldr	w0, [x26, #12]
   17b94:	ldr	x6, [x26, #112]
   17b98:	blr	x6
   17b9c:	and	w0, w0, #0xff
   17ba0:	cbnz	w0, 17b48 <omp_get_place_proc_ids@@OMP_4.5+0x3d0>
   17ba4:	mov	w0, #0x16                  	// #22
   17ba8:	b	17b4c <omp_get_place_proc_ids@@OMP_4.5+0x3d4>
   17bac:	cmp	x23, x26
   17bb0:	b.ne	17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>  // b.any
   17bb4:	ldr	x6, [x23, #128]
   17bb8:	b	17b74 <omp_get_place_proc_ids@@OMP_4.5+0x3fc>
   17bbc:	ldr	x4, [x7, x2, lsl #3]
   17bc0:	umulh	x8, x24, x4
   17bc4:	mul	x24, x24, x4
   17bc8:	cbnz	x8, 17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>
   17bcc:	ldr	x4, [x28, x2, lsl #3]
   17bd0:	add	x2, x2, #0x1
   17bd4:	umulh	x8, x25, x4
   17bd8:	mul	x25, x25, x4
   17bdc:	cbnz	x8, 17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>
   17be0:	cmp	w3, w2
   17be4:	b.gt	17bbc <omp_get_place_proc_ids@@OMP_4.5+0x444>
   17be8:	ldr	x2, [x5]
   17bec:	mul	x21, x24, x2
   17bf0:	umulh	x2, x24, x2
   17bf4:	cbnz	x2, 17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>
   17bf8:	ldr	x2, [x6]
   17bfc:	mul	x4, x25, x2
   17c00:	umulh	x2, x25, x2
   17c04:	cmp	x2, #0x0
   17c08:	cset	x8, ne  // ne = any
   17c0c:	b.ne	17ba4 <omp_get_place_proc_ids@@OMP_4.5+0x42c>  // b.any
   17c10:	add	x1, x1, x4
   17c14:	add	x21, x0, x21
   17c18:	add	x7, x7, #0x8
   17c1c:	add	x6, x6, #0x8
   17c20:	add	x19, x5, #0x8
   17c24:	add	x4, x27, #0x8
   17c28:	sub	w20, w3, #0x1
   17c2c:	ldr	x0, [x27]
   17c30:	cmp	x0, x8
   17c34:	b.ls	17b48 <omp_get_place_proc_ids@@OMP_4.5+0x3d0>  // b.plast
   17c38:	add	x0, x28, #0x8
   17c3c:	stp	x0, x23, [sp]
   17c40:	mov	x5, x19
   17c44:	str	x26, [sp, #16]
   17c48:	mov	x0, x21
   17c4c:	mov	w3, w20
   17c50:	mov	x2, x22
   17c54:	stp	x1, x4, [sp, #136]
   17c58:	add	x21, x21, x24
   17c5c:	stp	x6, x7, [sp, #152]
   17c60:	str	x8, [sp, #168]
   17c64:	bl	17ac8 <omp_get_place_proc_ids@@OMP_4.5+0x350>
   17c68:	ldr	x1, [sp, #136]
   17c6c:	add	x1, x1, x25
   17c70:	cbnz	w0, 17b4c <omp_get_place_proc_ids@@OMP_4.5+0x3d4>
   17c74:	ldp	x7, x8, [sp, #160]
   17c78:	ldp	x4, x6, [sp, #144]
   17c7c:	add	x8, x8, #0x1
   17c80:	b	17c2c <omp_get_place_proc_ids@@OMP_4.5+0x4b4>
   17c84:	mov	x25, x2
   17c88:	mov	x24, x2
   17c8c:	mov	x2, #0x1                   	// #1
   17c90:	b	17be0 <omp_get_place_proc_ids@@OMP_4.5+0x468>
   17c94:	stp	x29, x30, [sp, #-32]!
   17c98:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17c9c:	mov	x29, sp
   17ca0:	str	x19, [sp, #16]
   17ca4:	add	x19, x0, #0x570
   17ca8:	str	wzr, [x0, #1392]
   17cac:	mov	x0, #0x0                   	// #0
   17cb0:	bl	87a0 <malloc@plt>
   17cb4:	str	wzr, [x19, #4]
   17cb8:	str	x0, [x19, #8]
   17cbc:	adrp	x0, 17000 <omp_pause_resource_all_@@OMP_5.0+0x374>
   17cc0:	add	x0, x0, #0xd28
   17cc4:	bl	1fe68 <omp_get_team_num@@OMP_4.0+0x10>
   17cc8:	cbz	w0, 17cd8 <omp_get_place_proc_ids@@OMP_4.5+0x560>
   17ccc:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17cd0:	add	x0, x0, #0x9f1
   17cd4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   17cd8:	ldr	x19, [sp, #16]
   17cdc:	ldp	x29, x30, [sp], #32
   17ce0:	ret
   17ce4:	mov	x2, x0
   17ce8:	mov	w3, #0x1                   	// #1
   17cec:	ldaxr	w1, [x2]
   17cf0:	cbnz	w1, 17cfc <omp_get_place_proc_ids@@OMP_4.5+0x584>
   17cf4:	stxr	w4, w3, [x2]
   17cf8:	cbnz	w4, 17cec <omp_get_place_proc_ids@@OMP_4.5+0x574>
   17cfc:	cmp	w1, #0x0
   17d00:	b.eq	17d08 <omp_get_place_proc_ids@@OMP_4.5+0x590>  // b.none
   17d04:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
   17d08:	ret
   17d0c:	mov	x1, x0
   17d10:	ldxr	w2, [x1]
   17d14:	stlxr	w3, wzr, [x1]
   17d18:	cbnz	w3, 17d10 <omp_get_place_proc_ids@@OMP_4.5+0x598>
   17d1c:	tbz	w2, #31, 17d24 <omp_get_place_proc_ids@@OMP_4.5+0x5ac>
   17d20:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
   17d24:	ret
   17d28:	stp	x29, x30, [sp, #-80]!
   17d2c:	mov	x29, sp
   17d30:	stp	x21, x22, [sp, #32]
   17d34:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17d38:	add	x21, x21, #0x570
   17d3c:	stp	x19, x20, [sp, #16]
   17d40:	mov	x20, #0x0                   	// #0
   17d44:	stp	x23, x24, [sp, #48]
   17d48:	mov	x24, #0x130                 	// #304
   17d4c:	str	x25, [sp, #64]
   17d50:	mov	w25, #0x2                   	// #2
   17d54:	ldr	w0, [x21]
   17d58:	cmp	w0, w20
   17d5c:	b.gt	17d78 <omp_get_place_proc_ids@@OMP_4.5+0x600>
   17d60:	ldp	x19, x20, [sp, #16]
   17d64:	ldp	x21, x22, [sp, #32]
   17d68:	ldp	x23, x24, [sp, #48]
   17d6c:	ldr	x25, [sp, #64]
   17d70:	ldp	x29, x30, [sp], #80
   17d74:	ret
   17d78:	ldr	x19, [x21, #8]
   17d7c:	madd	x19, x20, x24, x19
   17d80:	add	x23, x19, #0xa8
   17d84:	mov	x0, x23
   17d88:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   17d8c:	ldr	w0, [x19, #172]
   17d90:	cmp	w0, #0x1
   17d94:	b.ne	17dc8 <omp_get_place_proc_ids@@OMP_4.5+0x650>  // b.any
   17d98:	ldr	w0, [x19, #12]
   17d9c:	ldr	x1, [x19, #64]
   17da0:	blr	x1
   17da4:	and	w22, w0, #0xff
   17da8:	str	w25, [x19, #172]
   17dac:	mov	x0, x23
   17db0:	add	x20, x20, #0x1
   17db4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   17db8:	cbnz	w22, 17d54 <omp_get_place_proc_ids@@OMP_4.5+0x5dc>
   17dbc:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17dc0:	add	x0, x0, #0x9ff
   17dc4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   17dc8:	mov	w22, #0x1                   	// #1
   17dcc:	b	17dac <omp_get_place_proc_ids@@OMP_4.5+0x634>
   17dd0:	ldp	x2, x3, [x1]
   17dd4:	cmp	x2, x3
   17dd8:	b.eq	17de0 <omp_get_place_proc_ids@@OMP_4.5+0x668>  // b.none
   17ddc:	b	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   17de0:	stp	x29, x30, [sp, #-32]!
   17de4:	add	x2, x2, #0x1
   17de8:	mov	x29, sp
   17dec:	str	x19, [sp, #16]
   17df0:	mov	x19, x1
   17df4:	str	x2, [x1, #8]
   17df8:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   17dfc:	ldr	x1, [x19, #8]
   17e00:	sub	x1, x1, #0x1
   17e04:	str	x1, [x19, #8]
   17e08:	ldr	x19, [sp, #16]
   17e0c:	ldp	x29, x30, [sp], #32
   17e10:	ret
   17e14:	stp	x29, x30, [sp, #-128]!
   17e18:	mov	x29, sp
   17e1c:	stp	x27, x28, [sp, #80]
   17e20:	mov	x28, x0
   17e24:	mov	x0, x2
   17e28:	stp	x19, x20, [sp, #16]
   17e2c:	mov	x2, x3
   17e30:	add	x3, sp, #0x78
   17e34:	stp	x21, x22, [sp, #32]
   17e38:	ldp	x22, x19, [x0, #16]
   17e3c:	stp	x23, x24, [sp, #48]
   17e40:	and	w23, w4, #0xff
   17e44:	ldp	x24, x20, [x0]
   17e48:	mov	x0, #0x2                   	// #2
   17e4c:	ldr	x4, [x28, #80]
   17e50:	sub	x19, x19, x22
   17e54:	stp	x25, x26, [sp, #64]
   17e58:	asr	x19, x19, #3
   17e5c:	sub	x20, x20, x24
   17e60:	str	xzr, [sp, #120]
   17e64:	sdiv	x19, x19, x0
   17e68:	ldr	w0, [x28, #12]
   17e6c:	asr	x20, x20, #3
   17e70:	mov	w25, w19
   17e74:	add	w19, w19, w20
   17e78:	blr	x4
   17e7c:	cmp	w19, w0
   17e80:	b.eq	17eb8 <omp_get_place_proc_ids@@OMP_4.5+0x740>  // b.none
   17e84:	mov	w21, w0
   17e88:	add	x0, x28, #0xa8
   17e8c:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   17e90:	cbz	w23, 17ea4 <omp_get_place_proc_ids@@OMP_4.5+0x72c>
   17e94:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17e98:	add	x0, x0, #0x570
   17e9c:	add	x0, x0, #0x10
   17ea0:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   17ea4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17ea8:	mov	w2, w21
   17eac:	mov	w1, w19
   17eb0:	add	x0, x0, #0xa1a
   17eb4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   17eb8:	mov	x0, #0x40                  	// #64
   17ebc:	bl	adb0 <fprintf@plt+0x2250>
   17ec0:	mov	x21, x0
   17ec4:	mov	w0, #0x48                  	// #72
   17ec8:	mov	w26, w20
   17ecc:	smull	x0, w19, w0
   17ed0:	bl	adb0 <fprintf@plt+0x2250>
   17ed4:	mov	x19, x0
   17ed8:	mov	x0, #0xffffffffffffffff    	// #-1
   17edc:	mov	x27, x19
   17ee0:	mov	x3, x0
   17ee4:	stp	x0, x19, [x21]
   17ee8:	add	x0, x28, #0xa0
   17eec:	mov	x2, #0x0                   	// #0
   17ef0:	stp	xzr, xzr, [x21, #16]
   17ef4:	stp	xzr, xzr, [x21, #32]
   17ef8:	stp	xzr, x28, [x21, #48]
   17efc:	cmp	w26, w2
   17f00:	ldr	x4, [sp, #120]
   17f04:	b.gt	17f58 <omp_get_place_proc_ids@@OMP_4.5+0x7e0>
   17f08:	and	x1, x20, #0xffffffff
   17f0c:	mov	x0, #0x48                  	// #72
   17f10:	cmp	w20, #0x0
   17f14:	add	x26, x28, #0xa0
   17f18:	sbfiz	x20, x20, #4, #32
   17f1c:	mov	w24, #0x0                   	// #0
   17f20:	mul	x1, x1, x0
   17f24:	csel	x1, x1, xzr, ge  // ge = tcont
   17f28:	add	x19, x19, x1
   17f2c:	cmp	w24, w25
   17f30:	ldr	x0, [sp, #120]
   17f34:	b.lt	17fa0 <omp_get_place_proc_ids@@OMP_4.5+0x828>  // b.tstop
   17f38:	bl	8950 <free@plt>
   17f3c:	ldp	x19, x20, [sp, #16]
   17f40:	ldp	x21, x22, [sp, #32]
   17f44:	ldp	x23, x24, [sp, #48]
   17f48:	ldp	x25, x26, [sp, #64]
   17f4c:	ldp	x27, x28, [sp, #80]
   17f50:	ldp	x29, x30, [sp], #128
   17f54:	ret
   17f58:	ldr	x1, [x24, x2, lsl #3]
   17f5c:	str	x1, [x27]
   17f60:	str	x21, [x27, #16]
   17f64:	add	x1, x1, #0x1
   17f68:	str	x1, [x27, #8]
   17f6c:	lsl	x1, x2, #4
   17f70:	stp	x0, x2, [sp, #96]
   17f74:	ldr	x1, [x4, x1]
   17f78:	stp	x1, x3, [x27, #24]
   17f7c:	mov	x1, x27
   17f80:	stp	xzr, xzr, [x27, #48]
   17f84:	add	x27, x27, #0x48
   17f88:	stur	xzr, [x27, #-8]
   17f8c:	bl	1b958 <omp_pause_resource_all@@OMP_5.0+0x1f8>
   17f90:	ldp	x0, x2, [sp, #96]
   17f94:	mov	x3, #0xffffffffffffffff    	// #-1
   17f98:	add	x2, x2, #0x1
   17f9c:	b	17efc <omp_get_place_proc_ids@@OMP_4.5+0x784>
   17fa0:	add	x1, x0, x20
   17fa4:	ldr	x3, [x0, x20]
   17fa8:	ldr	x2, [x1, #8]
   17fac:	ldr	x1, [x22, #8]
   17fb0:	sub	x2, x2, x3
   17fb4:	cmp	x1, x2
   17fb8:	b.eq	17fe4 <omp_get_place_proc_ids@@OMP_4.5+0x86c>  // b.none
   17fbc:	add	x0, x28, #0xa8
   17fc0:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   17fc4:	cbz	w23, 17fd8 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   17fc8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   17fcc:	add	x0, x0, #0x570
   17fd0:	add	x0, x0, #0x10
   17fd4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   17fd8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   17fdc:	add	x0, x0, #0xa5a
   17fe0:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   17fe4:	ldr	x4, [x22], #16
   17fe8:	and	x2, x1, #0x7fffffffffffffff
   17fec:	mvn	x1, x1
   17ff0:	stp	x21, x3, [x19, #16]
   17ff4:	add	x2, x2, x4
   17ff8:	lsr	x1, x1, #63
   17ffc:	stp	x4, x2, [x19]
   18000:	sub	x1, x1, #0x2
   18004:	str	x1, [x19, #32]
   18008:	mov	x0, x26
   1800c:	stp	xzr, xzr, [x19, #48]
   18010:	mov	x1, x19
   18014:	add	w24, w24, #0x1
   18018:	str	xzr, [x19, #64]
   1801c:	add	x20, x20, #0x10
   18020:	add	x19, x19, #0x48
   18024:	bl	1b958 <omp_pause_resource_all@@OMP_5.0+0x1f8>
   18028:	b	17f2c <omp_get_place_proc_ids@@OMP_4.5+0x7b4>
   1802c:	stp	x29, x30, [sp, #-176]!
   18030:	mov	x2, #0x68                  	// #104
   18034:	mov	x29, sp
   18038:	stp	x23, x24, [sp, #48]
   1803c:	add	x23, sp, #0x48
   18040:	adrp	x24, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   18044:	ldr	x24, [x24, #4016]
   18048:	stp	x19, x20, [sp, #16]
   1804c:	mrs	x20, tpidr_el0
   18050:	add	x19, x20, x24
   18054:	stp	x21, x22, [sp, #32]
   18058:	mov	x21, x0
   1805c:	mov	x22, x1
   18060:	mov	x0, x23
   18064:	mov	x1, x19
   18068:	bl	8600 <memcpy@plt>
   1806c:	stp	xzr, xzr, [x19]
   18070:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   18074:	ldr	w0, [x19, #92]
   18078:	ldr	x1, [x1, #1576]
   1807c:	stp	xzr, xzr, [x19, #16]
   18080:	stp	xzr, xzr, [x19, #32]
   18084:	stp	xzr, xzr, [x19, #48]
   18088:	stp	xzr, xzr, [x19, #64]
   1808c:	stp	xzr, xzr, [x19, #80]
   18090:	str	xzr, [x19, #96]
   18094:	cbz	x1, 180a8 <omp_get_place_proc_ids@@OMP_4.5+0x930>
   18098:	str	w0, [x19, #92]
   1809c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   180a0:	ldr	x0, [x0, #1616]
   180a4:	str	w0, [x19, #56]
   180a8:	add	x20, x20, x24
   180ac:	mov	x0, x22
   180b0:	blr	x21
   180b4:	mov	x0, x20
   180b8:	bl	14d10 <omp_in_final@@OMP_3.1+0x1198>
   180bc:	mov	x1, x23
   180c0:	mov	x0, x20
   180c4:	mov	x2, #0x68                  	// #104
   180c8:	bl	8600 <memcpy@plt>
   180cc:	ldp	x19, x20, [sp, #16]
   180d0:	ldp	x21, x22, [sp, #32]
   180d4:	ldp	x23, x24, [sp, #48]
   180d8:	ldp	x29, x30, [sp], #176
   180dc:	ret
   180e0:	sub	x4, x2, #0x1
   180e4:	mov	x3, #0x7fff                	// #32767
   180e8:	cmp	x4, x3
   180ec:	b.hi	18124 <omp_get_place_proc_ids@@OMP_4.5+0x9ac>  // b.pmore
   180f0:	ldr	x3, [x0, #24]
   180f4:	cmp	x3, #0x0
   180f8:	cbz	x3, 1815c <omp_get_place_proc_ids@@OMP_4.5+0x9e4>
   180fc:	b.lt	18124 <omp_get_place_proc_ids@@OMP_4.5+0x9ac>  // b.tstop
   18100:	lsl	x5, x3, #4
   18104:	sub	x4, x5, #0x10
   18108:	ldr	x5, [x0, #16]
   1810c:	add	x5, x5, x4
   18110:	ldr	x6, [x5, #8]
   18114:	cmp	x6, x1
   18118:	b.ls	18128 <omp_get_place_proc_ids@@OMP_4.5+0x9b0>  // b.plast
   1811c:	mov	x1, #0xffffffffffffffff    	// #-1
   18120:	str	x1, [x0, #24]
   18124:	ret
   18128:	add	x6, x6, #0x1, lsl #12
   1812c:	cmp	x6, x1
   18130:	ldr	x4, [x0, #32]
   18134:	b.ls	1814c <omp_get_place_proc_ids@@OMP_4.5+0x9d4>  // b.plast
   18138:	add	x2, x2, x1
   1813c:	str	x2, [x5, #8]
   18140:	add	x4, x4, #0x1
   18144:	str	x4, [x0, #32]
   18148:	b	18124 <omp_get_place_proc_ids@@OMP_4.5+0x9ac>
   1814c:	cmp	x4, #0x1
   18150:	b.ne	1815c <omp_get_place_proc_ids@@OMP_4.5+0x9e4>  // b.any
   18154:	sub	x3, x3, #0x1
   18158:	str	x3, [x0, #24]
   1815c:	ldp	x4, x3, [x0, #16]
   18160:	add	x2, x2, x1
   18164:	lsl	x6, x3, #4
   18168:	add	x5, x4, x3, lsl #4
   1816c:	add	x3, x3, #0x1
   18170:	str	x1, [x4, x6]
   18174:	mov	x1, #0x1                   	// #1
   18178:	str	x2, [x5, #8]
   1817c:	stp	x3, x1, [x0, #24]
   18180:	b	18124 <omp_get_place_proc_ids@@OMP_4.5+0x9ac>
   18184:	add	x4, x0, x2, lsl #5
   18188:	ldr	x5, [x4, #64]
   1818c:	ldr	x3, [x4, #80]
   18190:	cbz	x5, 181a8 <omp_get_place_proc_ids@@OMP_4.5+0xa30>
   18194:	ldp	x1, x0, [x5, #16]
   18198:	ldr	x1, [x1, #16]
   1819c:	add	x0, x3, x0
   181a0:	add	x0, x0, x1
   181a4:	ret
   181a8:	cmn	x3, #0x1
   181ac:	b.ne	181b8 <omp_get_place_proc_ids@@OMP_4.5+0xa40>  // b.any
   181b0:	ldr	x0, [x1, x2, lsl #3]
   181b4:	b	181a4 <omp_get_place_proc_ids@@OMP_4.5+0xa2c>
   181b8:	cmn	x3, #0x2
   181bc:	b.eq	1820c <omp_get_place_proc_ids@@OMP_4.5+0xa94>  // b.none
   181c0:	cmn	x3, #0x3
   181c4:	b.ne	18200 <omp_get_place_proc_ids@@OMP_4.5+0xa88>  // b.any
   181c8:	ldr	x5, [x4, #96]
   181cc:	lsl	x4, x2, #3
   181d0:	add	x2, x0, x2, lsl #5
   181d4:	ldr	x3, [x1, x4]
   181d8:	add	x1, x1, x4
   181dc:	ldr	x0, [x2, #112]
   181e0:	ldp	x6, x2, [x5, #16]
   181e4:	ldr	x1, [x1, #8]
   181e8:	ldr	x6, [x6, #16]
   181ec:	add	x0, x0, x2
   181f0:	add	x3, x3, x6
   181f4:	add	x0, x3, x0
   181f8:	sub	x0, x0, x1
   181fc:	b	181a4 <omp_get_place_proc_ids@@OMP_4.5+0xa2c>
   18200:	ldr	x0, [x0, #16]
   18204:	add	x0, x3, x0
   18208:	b	181a4 <omp_get_place_proc_ids@@OMP_4.5+0xa2c>
   1820c:	mov	x0, #0x0                   	// #0
   18210:	b	181a4 <omp_get_place_proc_ids@@OMP_4.5+0xa2c>
   18214:	stp	x29, x30, [sp, #-80]!
   18218:	mov	x29, sp
   1821c:	stp	x19, x20, [sp, #16]
   18220:	mov	x20, x4
   18224:	stp	x21, x22, [sp, #32]
   18228:	mov	x21, x2
   1822c:	mov	x22, x3
   18230:	stp	x23, x24, [sp, #48]
   18234:	mov	x23, x0
   18238:	sub	x0, x5, #0x1
   1823c:	str	x25, [sp, #64]
   18240:	ands	x0, x23, x0
   18244:	b.eq	18250 <omp_get_place_proc_ids@@OMP_4.5+0xad8>  // b.none
   18248:	sub	x5, x5, x0
   1824c:	add	x23, x23, x5
   18250:	add	x24, x20, x1, lsl #1
   18254:	mov	x19, #0x0                   	// #0
   18258:	mov	x25, #0x1                   	// #1
   1825c:	cmp	x20, x24
   18260:	b.ne	1827c <omp_get_place_proc_ids@@OMP_4.5+0xb04>  // b.any
   18264:	ldp	x19, x20, [sp, #16]
   18268:	ldp	x21, x22, [sp, #32]
   1826c:	ldp	x23, x24, [sp, #48]
   18270:	ldr	x25, [sp, #64]
   18274:	ldp	x29, x30, [sp], #80
   18278:	ret
   1827c:	ldrb	w0, [x20]
   18280:	ldrh	w1, [x20]
   18284:	cmp	w0, #0xc
   18288:	b.ne	182c4 <omp_get_place_proc_ids@@OMP_4.5+0xb4c>  // b.any
   1828c:	lsr	w1, w1, #8
   18290:	sub	x19, x19, #0x1
   18294:	ldr	x2, [x22]
   18298:	lsl	x1, x25, x1
   1829c:	add	x19, x19, x1
   182a0:	neg	x1, x1
   182a4:	and	x19, x1, x19
   182a8:	ldr	x1, [x21]
   182ac:	add	x3, x23, x19
   182b0:	mov	x0, x3
   182b4:	bl	8600 <memcpy@plt>
   182b8:	ldr	x1, [x22]
   182bc:	str	x0, [x21]
   182c0:	add	x19, x19, x1
   182c4:	add	x21, x21, #0x8
   182c8:	add	x22, x22, #0x8
   182cc:	add	x20, x20, #0x2
   182d0:	b	1825c <omp_get_place_proc_ids@@OMP_4.5+0xae4>
   182d4:	stp	x29, x30, [sp, #-48]!
   182d8:	mov	x29, sp
   182dc:	stp	x19, x20, [sp, #16]
   182e0:	mov	x20, x2
   182e4:	mov	x19, x3
   182e8:	stp	x21, x22, [sp, #32]
   182ec:	mov	x22, x0
   182f0:	mov	x21, x1
   182f4:	cbz	x4, 1832c <omp_get_place_proc_ids@@OMP_4.5+0xbb4>
   182f8:	ldr	x0, [x4, #8]
   182fc:	ldr	x1, [x4, #24]
   18300:	ldr	x6, [x0, #16]
   18304:	ldr	x0, [x4, #16]
   18308:	sub	x6, x21, x6
   1830c:	add	x2, x0, x1, lsl #4
   18310:	ldur	x2, [x2, #-8]
   18314:	cmp	x2, x6
   18318:	b.ls	1832c <omp_get_place_proc_ids@@OMP_4.5+0xbb4>  // b.plast
   1831c:	sub	x1, x1, #0x1
   18320:	mov	x3, #0x0                   	// #0
   18324:	cmp	x3, x1
   18328:	b.le	18380 <omp_get_place_proc_ids@@OMP_4.5+0xc08>
   1832c:	ldr	w0, [x22, #12]
   18330:	mov	x3, x19
   18334:	ldr	x4, [x22, #120]
   18338:	mov	x2, x20
   1833c:	mov	x1, x21
   18340:	blr	x4
   18344:	tst	w0, #0xff
   18348:	b.ne	183f8 <omp_get_place_proc_ids@@OMP_4.5+0xc80>  // b.any
   1834c:	add	x0, x22, #0xa8
   18350:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18354:	adrp	x4, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   18358:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1835c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18360:	add	x6, x21, x19
   18364:	mov	x5, x21
   18368:	add	x4, x4, #0x388
   1836c:	add	x3, x20, x19
   18370:	mov	x2, x20
   18374:	add	x1, x1, #0x1c9
   18378:	add	x0, x0, #0xaa2
   1837c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   18380:	add	x2, x3, x1
   18384:	asr	x2, x2, #1
   18388:	add	x5, x0, x2, lsl #4
   1838c:	lsl	x7, x2, #4
   18390:	ldr	x5, [x5, #8]
   18394:	cmp	x5, x6
   18398:	b.hi	183a4 <omp_get_place_proc_ids@@OMP_4.5+0xc2c>  // b.pmore
   1839c:	add	x3, x2, #0x1
   183a0:	b	18324 <omp_get_place_proc_ids@@OMP_4.5+0xbac>
   183a4:	ldr	x1, [x0, x7]
   183a8:	cmp	x1, x6
   183ac:	b.hi	183f0 <omp_get_place_proc_ids@@OMP_4.5+0xc78>  // b.pmore
   183b0:	add	x1, x6, x19
   183b4:	cmp	x5, x1
   183b8:	b.cs	183c8 <omp_get_place_proc_ids@@OMP_4.5+0xc50>  // b.hs, b.nlast
   183bc:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   183c0:	add	x0, x0, #0xa86
   183c4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   183c8:	mov	x2, x19
   183cc:	mov	x1, x20
   183d0:	ldr	x0, [x0]
   183d4:	ldp	x19, x20, [sp, #16]
   183d8:	sub	x6, x6, x0
   183dc:	ldp	x21, x22, [sp, #32]
   183e0:	ldp	x29, x30, [sp], #48
   183e4:	ldr	x0, [x4]
   183e8:	add	x0, x0, x6
   183ec:	b	8600 <memcpy@plt>
   183f0:	sub	x1, x2, #0x1
   183f4:	b	18324 <omp_get_place_proc_ids@@OMP_4.5+0xbac>
   183f8:	ldp	x19, x20, [sp, #16]
   183fc:	ldp	x21, x22, [sp, #32]
   18400:	ldp	x29, x30, [sp], #48
   18404:	ret
   18408:	stp	x29, x30, [sp, #-32]!
   1840c:	and	w7, w4, #0xff
   18410:	and	w4, w4, #0xe
   18414:	mov	x29, sp
   18418:	stp	x19, x20, [sp, #16]
   1841c:	mov	x20, x2
   18420:	cmp	w4, #0x2
   18424:	mov	x19, x1
   18428:	mov	x6, x3
   1842c:	ldr	x2, [x2]
   18430:	mov	x8, x0
   18434:	ldr	x4, [x20, #8]
   18438:	str	x1, [x3]
   1843c:	cset	w1, eq  // eq = none
   18440:	strb	w1, [x3, #8]
   18444:	sub	w1, w7, #0x12
   18448:	and	w1, w1, #0xff
   1844c:	cmp	w1, #0x1
   18450:	cset	w1, ls  // ls = plast
   18454:	strb	w1, [x3, #9]
   18458:	ldr	x1, [x19]
   1845c:	sub	x3, x2, x1
   18460:	str	x3, [x6, #16]
   18464:	sub	x3, x4, x2
   18468:	str	x3, [x6, #24]
   1846c:	tbnz	w7, #7, 18484 <omp_get_place_proc_ids@@OMP_4.5+0xd0c>
   18470:	cmp	x2, x1
   18474:	b.cc	18484 <omp_get_place_proc_ids@@OMP_4.5+0xd0c>  // b.lo, b.ul, b.last
   18478:	ldr	x6, [x19, #8]
   1847c:	cmp	x4, x6
   18480:	b.ls	184a0 <omp_get_place_proc_ids@@OMP_4.5+0xd28>  // b.plast
   18484:	add	x0, x8, #0xa8
   18488:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1848c:	ldp	x3, x4, [x19]
   18490:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18494:	ldp	x1, x2, [x20]
   18498:	add	x0, x0, #0xadd
   1849c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   184a0:	and	w7, w7, #0xfffffffd
   184a4:	cmp	w7, #0x11
   184a8:	b.ne	184cc <omp_get_place_proc_ids@@OMP_4.5+0xd54>  // b.any
   184ac:	ldr	x4, [x19, #16]
   184b0:	ldr	x6, [x4, #16]
   184b4:	mov	x4, x5
   184b8:	sub	x6, x6, x1
   184bc:	ldr	x1, [x19, #24]
   184c0:	add	x1, x2, x1
   184c4:	add	x1, x6, x1
   184c8:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   184cc:	ldr	x0, [x19, #32]
   184d0:	cmn	x0, #0x1
   184d4:	b.eq	184e0 <omp_get_place_proc_ids@@OMP_4.5+0xd68>  // b.none
   184d8:	add	x0, x0, #0x1
   184dc:	str	x0, [x19, #32]
   184e0:	ldp	x19, x20, [sp, #16]
   184e4:	ldp	x29, x30, [sp], #32
   184e8:	ret
   184ec:	stp	x29, x30, [sp, #-176]!
   184f0:	mov	x29, sp
   184f4:	stp	x19, x20, [sp, #16]
   184f8:	mov	x20, x2
   184fc:	lsl	x2, x3, #3
   18500:	stp	x23, x24, [sp, #48]
   18504:	mov	x19, x1
   18508:	add	x23, sp, #0x78
   1850c:	ldr	x24, [x0, #56]
   18510:	stp	x21, x22, [sp, #32]
   18514:	mov	x22, x0
   18518:	ldr	x1, [x4, x2]
   1851c:	mov	x21, x3
   18520:	ldr	x0, [x5, x2]
   18524:	add	x3, x24, #0xa0
   18528:	stp	x27, x28, [sp, #80]
   1852c:	mov	x28, x6
   18530:	add	x0, x0, x1
   18534:	mov	x27, x5
   18538:	stp	x25, x26, [sp, #64]
   1853c:	mov	x26, x4
   18540:	mov	x25, x7
   18544:	stp	x3, x2, [sp, #96]
   18548:	stp	x1, x0, [sp, #120]
   1854c:	mov	x0, x3
   18550:	mov	x1, x23
   18554:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18558:	ldrh	w28, [x28, w21, sxtw #1]
   1855c:	add	x21, x21, #0x2
   18560:	ldp	x3, x2, [sp, #96]
   18564:	cbz	x0, 185d0 <omp_get_place_proc_ids@@OMP_4.5+0xe58>
   18568:	ldr	x4, [x0, #16]
   1856c:	ldr	x1, [x19, #16]
   18570:	cmp	x4, x1
   18574:	b.ne	185d0 <omp_get_place_proc_ids@@OMP_4.5+0xe58>  // b.any
   18578:	ldr	x1, [x19]
   1857c:	ldr	x4, [x0]
   18580:	ldr	x5, [x19, #24]
   18584:	sub	x4, x4, x1
   18588:	ldr	x1, [x0, #24]
   1858c:	sub	x1, x1, x5
   18590:	cmp	x4, x1
   18594:	b.ne	185d0 <omp_get_place_proc_ids@@OMP_4.5+0xe58>  // b.any
   18598:	mov	x5, x25
   1859c:	mov	w4, w28
   185a0:	add	x3, x22, x21, lsl #5
   185a4:	mov	x2, x23
   185a8:	mov	x1, x0
   185ac:	mov	x0, x24
   185b0:	bl	18408 <omp_get_place_proc_ids@@OMP_4.5+0xc90>
   185b4:	ldp	x19, x20, [sp, #16]
   185b8:	ldp	x21, x22, [sp, #32]
   185bc:	ldp	x23, x24, [sp, #48]
   185c0:	ldp	x25, x26, [sp, #64]
   185c4:	ldp	x27, x28, [sp, #80]
   185c8:	ldp	x29, x30, [sp], #176
   185cc:	ret
   185d0:	ldr	x0, [x27, x2]
   185d4:	cbnz	x0, 186a0 <omp_get_place_proc_ids@@OMP_4.5+0xf28>
   185d8:	add	x20, x26, x20, lsl #3
   185dc:	ldr	x0, [sp, #120]
   185e0:	ldur	x1, [x20, #-8]
   185e4:	cmp	x1, x0
   185e8:	b.cs	18648 <omp_get_place_proc_ids@@OMP_4.5+0xed0>  // b.hs, b.nlast
   185ec:	sub	x0, x0, #0x1
   185f0:	mov	x1, x23
   185f4:	str	x3, [sp, #96]
   185f8:	str	x0, [sp, #120]
   185fc:	mov	x0, x3
   18600:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18604:	ldr	x1, [sp, #120]
   18608:	ldr	x3, [sp, #96]
   1860c:	add	x1, x1, #0x1
   18610:	str	x1, [sp, #120]
   18614:	cbz	x0, 18648 <omp_get_place_proc_ids@@OMP_4.5+0xed0>
   18618:	ldr	x2, [x0, #16]
   1861c:	ldr	x1, [x19, #16]
   18620:	cmp	x2, x1
   18624:	b.ne	18648 <omp_get_place_proc_ids@@OMP_4.5+0xed0>  // b.any
   18628:	ldr	x1, [x19]
   1862c:	ldr	x2, [x0]
   18630:	ldr	x4, [x19, #24]
   18634:	sub	x2, x2, x1
   18638:	ldr	x1, [x0, #24]
   1863c:	sub	x1, x1, x4
   18640:	cmp	x2, x1
   18644:	b.eq	18598 <omp_get_place_proc_ids@@OMP_4.5+0xe20>  // b.none
   18648:	ldr	x0, [sp, #128]
   1864c:	mov	x1, x23
   18650:	add	x0, x0, #0x1
   18654:	str	x0, [sp, #128]
   18658:	mov	x0, x3
   1865c:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18660:	ldr	x1, [sp, #128]
   18664:	sub	x1, x1, #0x1
   18668:	str	x1, [sp, #128]
   1866c:	cbz	x0, 186a0 <omp_get_place_proc_ids@@OMP_4.5+0xf28>
   18670:	ldr	x2, [x0, #16]
   18674:	ldr	x1, [x19, #16]
   18678:	cmp	x2, x1
   1867c:	b.ne	186a0 <omp_get_place_proc_ids@@OMP_4.5+0xf28>  // b.any
   18680:	ldr	x1, [x19]
   18684:	ldr	x2, [x0]
   18688:	ldr	x3, [x19, #24]
   1868c:	sub	x2, x2, x1
   18690:	ldr	x1, [x0, #24]
   18694:	sub	x1, x1, x3
   18698:	cmp	x2, x1
   1869c:	b.eq	18598 <omp_get_place_proc_ids@@OMP_4.5+0xe20>  // b.none
   186a0:	add	x0, x24, #0xa8
   186a4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   186a8:	ldp	x1, x2, [sp, #120]
   186ac:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   186b0:	add	x0, x0, #0xb27
   186b4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   186b8:	stp	x29, x30, [sp, #-32]!
   186bc:	mov	x29, sp
   186c0:	stp	x19, x20, [sp, #16]
   186c4:	mov	x19, x0
   186c8:	mov	x20, x1
   186cc:	ldr	x2, [x0, #104]
   186d0:	ldr	w0, [x0, #12]
   186d4:	blr	x2
   186d8:	tst	w0, #0xff
   186dc:	b.ne	186f8 <omp_get_place_proc_ids@@OMP_4.5+0xf80>  // b.any
   186e0:	add	x0, x19, #0xa8
   186e4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   186e8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   186ec:	mov	x1, x20
   186f0:	add	x0, x0, #0xbaf
   186f4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   186f8:	ldp	x19, x20, [sp, #16]
   186fc:	ldp	x29, x30, [sp], #32
   18700:	ret
   18704:	stp	x29, x30, [sp, #-32]!
   18708:	mov	x29, sp
   1870c:	str	x19, [sp, #16]
   18710:	mov	x19, x0
   18714:	ldr	x0, [x0, #24]
   18718:	cbz	x0, 18728 <omp_get_place_proc_ids@@OMP_4.5+0xfb0>
   1871c:	ldr	x1, [x19, #32]
   18720:	ldr	x0, [x19, #56]
   18724:	bl	186b8 <omp_get_place_proc_ids@@OMP_4.5+0xf40>
   18728:	ldr	x0, [x19, #8]
   1872c:	bl	8950 <free@plt>
   18730:	mov	x0, x19
   18734:	ldr	x19, [sp, #16]
   18738:	ldp	x29, x30, [sp], #32
   1873c:	b	8950 <free@plt>
   18740:	ldp	x2, x3, [x1]
   18744:	cmp	x2, x3
   18748:	b.eq	18750 <omp_get_place_proc_ids@@OMP_4.5+0xfd8>  // b.none
   1874c:	b	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18750:	stp	x29, x30, [sp, #-32]!
   18754:	add	x2, x2, #0x1
   18758:	mov	x29, sp
   1875c:	stp	x19, x20, [sp, #16]
   18760:	mov	x19, x1
   18764:	mov	x20, x0
   18768:	str	x2, [x1, #8]
   1876c:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18770:	ldr	x1, [x19, #8]
   18774:	sub	x1, x1, #0x1
   18778:	str	x1, [x19, #8]
   1877c:	cbnz	x0, 187bc <omp_get_place_proc_ids@@OMP_4.5+0x1044>
   18780:	ldr	x0, [x19]
   18784:	mov	x1, x19
   18788:	sub	x0, x0, #0x1
   1878c:	str	x0, [x19]
   18790:	mov	x0, x20
   18794:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18798:	ldr	x1, [x19]
   1879c:	add	x1, x1, #0x1
   187a0:	str	x1, [x19]
   187a4:	cbnz	x0, 187bc <omp_get_place_proc_ids@@OMP_4.5+0x1044>
   187a8:	mov	x1, x19
   187ac:	mov	x0, x20
   187b0:	ldp	x19, x20, [sp, #16]
   187b4:	ldp	x29, x30, [sp], #32
   187b8:	b	1874c <omp_get_place_proc_ids@@OMP_4.5+0xfd4>
   187bc:	ldp	x19, x20, [sp, #16]
   187c0:	ldp	x29, x30, [sp], #32
   187c4:	ret
   187c8:	stp	x29, x30, [sp, #-128]!
   187cc:	mov	x29, sp
   187d0:	stp	x19, x20, [sp, #16]
   187d4:	mov	x19, x0
   187d8:	stp	x21, x22, [sp, #32]
   187dc:	mov	x21, x2
   187e0:	stp	x23, x24, [sp, #48]
   187e4:	add	x23, sp, #0x48
   187e8:	str	x1, [sp, #72]
   187ec:	ldr	x20, [x0, #56]
   187f0:	cbnz	x1, 18824 <omp_get_place_proc_ids@@OMP_4.5+0x10ac>
   187f4:	ldr	x1, [x0, #16]
   187f8:	str	xzr, [sp, #96]
   187fc:	add	x2, x23, #0x18
   18800:	add	x1, x21, x1
   18804:	mov	x0, x20
   18808:	mov	x3, #0x8                   	// #8
   1880c:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   18810:	ldp	x19, x20, [sp, #16]
   18814:	ldp	x21, x22, [sp, #32]
   18818:	ldp	x23, x24, [sp, #48]
   1881c:	ldp	x29, x30, [sp], #128
   18820:	ret
   18824:	add	x6, x1, x3
   18828:	mov	x22, x3
   1882c:	mov	x24, x4
   18830:	mov	x1, x23
   18834:	add	x0, x20, #0xa0
   18838:	stp	x6, x6, [sp, #72]
   1883c:	bl	18740 <omp_get_place_proc_ids@@OMP_4.5+0xfc8>
   18840:	cbnz	x0, 18858 <omp_get_place_proc_ids@@OMP_4.5+0x10e0>
   18844:	add	x0, x20, #0xa8
   18848:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1884c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18850:	add	x0, x0, #0xbda
   18854:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   18858:	ldr	x1, [x0]
   1885c:	mov	x4, x24
   18860:	ldr	x5, [sp, #72]
   18864:	ldr	x3, [x0, #24]
   18868:	sub	x5, x5, x1
   1886c:	ldr	x1, [x0, #16]
   18870:	sub	x22, x3, x22
   18874:	str	x5, [sp, #72]
   18878:	ldr	x1, [x1, #16]
   1887c:	add	x5, x5, x1
   18880:	add	x5, x5, x22
   18884:	str	x5, [sp, #96]
   18888:	ldr	x1, [x19, #16]
   1888c:	b	187fc <omp_get_place_proc_ids@@OMP_4.5+0x1084>
   18890:	stp	x29, x30, [sp, #-112]!
   18894:	mov	x29, sp
   18898:	stp	x19, x20, [sp, #16]
   1889c:	mov	x20, x0
   188a0:	ldr	w0, [x0, #8]
   188a4:	str	x21, [sp, #32]
   188a8:	mov	x19, x1
   188ac:	tbnz	w0, #1, 188d4 <omp_get_place_proc_ids@@OMP_4.5+0x115c>
   188b0:	add	x21, x20, #0xa8
   188b4:	mov	x0, x21
   188b8:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   188bc:	ldr	w0, [x20, #172]
   188c0:	cmp	w0, #0x2
   188c4:	b.ne	188e8 <omp_get_place_proc_ids@@OMP_4.5+0x1170>  // b.any
   188c8:	mov	x19, #0x0                   	// #0
   188cc:	mov	x0, x21
   188d0:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   188d4:	mov	x0, x19
   188d8:	ldp	x19, x20, [sp, #16]
   188dc:	ldr	x21, [sp, #32]
   188e0:	ldp	x29, x30, [sp], #112
   188e4:	ret
   188e8:	add	x1, sp, #0x38
   188ec:	add	x0, x20, #0xa0
   188f0:	str	x19, [sp, #56]
   188f4:	add	x19, x19, #0x1
   188f8:	str	x19, [sp, #64]
   188fc:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18900:	mov	x19, x0
   18904:	mov	x0, x21
   18908:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1890c:	cbz	x19, 188d4 <omp_get_place_proc_ids@@OMP_4.5+0x115c>
   18910:	ldr	x19, [x19, #24]
   18914:	b	188d4 <omp_get_place_proc_ids@@OMP_4.5+0x115c>
   18918:	stp	x29, x30, [sp, #-48]!
   1891c:	mov	x29, sp
   18920:	stp	x19, x20, [sp, #16]
   18924:	mov	x19, x0
   18928:	mov	x20, x2
   1892c:	ldr	x4, [x0, #112]
   18930:	stp	x21, x22, [sp, #32]
   18934:	ldr	w0, [x0, #12]
   18938:	mov	x22, x1
   1893c:	mov	x21, x3
   18940:	blr	x4
   18944:	tst	w0, #0xff
   18948:	b.ne	18980 <omp_get_place_proc_ids@@OMP_4.5+0x1208>  // b.any
   1894c:	add	x0, x19, #0xa8
   18950:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18954:	adrp	x4, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   18958:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1895c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18960:	add	x6, x22, x21
   18964:	mov	x5, x22
   18968:	add	x4, x4, #0x1c9
   1896c:	add	x3, x20, x21
   18970:	mov	x2, x20
   18974:	add	x1, x1, #0x388
   18978:	add	x0, x0, #0xaa2
   1897c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   18980:	ldp	x19, x20, [sp, #16]
   18984:	ldp	x21, x22, [sp, #32]
   18988:	ldp	x29, x30, [sp], #48
   1898c:	ret
   18990:	stp	x29, x30, [sp, #-208]!
   18994:	mov	x29, sp
   18998:	stp	x19, x20, [sp, #16]
   1899c:	mov	x19, x0
   189a0:	ands	w0, w5, #0xff
   189a4:	stp	x21, x22, [sp, #32]
   189a8:	mov	x21, x1
   189ac:	mov	w1, #0xff                  	// #255
   189b0:	stp	x23, x24, [sp, #48]
   189b4:	stp	x25, x26, [sp, #64]
   189b8:	stp	x27, x28, [sp, #80]
   189bc:	str	x3, [sp, #104]
   189c0:	str	w0, [sp, #136]
   189c4:	mov	w0, #0x7                   	// #7
   189c8:	csel	w0, w1, w0, ne  // ne = any
   189cc:	str	w0, [sp, #100]
   189d0:	cbz	x19, 18b08 <omp_get_place_proc_ids@@OMP_4.5+0x1390>
   189d4:	cbz	x21, 18b08 <omp_get_place_proc_ids@@OMP_4.5+0x1390>
   189d8:	add	x20, x19, #0xa8
   189dc:	mov	x22, x2
   189e0:	mov	x0, x20
   189e4:	mov	x24, x4
   189e8:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   189ec:	mov	x23, #0x0                   	// #0
   189f0:	ldr	w0, [x19, #172]
   189f4:	cmp	w0, #0x2
   189f8:	b.eq	18b00 <omp_get_place_proc_ids@@OMP_4.5+0x1388>  // b.none
   189fc:	add	x26, sp, #0x98
   18a00:	add	x27, x19, #0xa0
   18a04:	mov	w28, #0xd                   	// #13
   18a08:	ldr	x0, [sp, #104]
   18a0c:	ldr	x0, [x0, x23, lsl #3]
   18a10:	cbz	x0, 18af4 <omp_get_place_proc_ids@@OMP_4.5+0x137c>
   18a14:	ldr	x1, [x22, x23, lsl #3]
   18a18:	add	x0, x0, x1
   18a1c:	stp	x1, x0, [sp, #152]
   18a20:	mov	x1, x26
   18a24:	mov	x0, x27
   18a28:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18a2c:	mov	x25, x0
   18a30:	cbz	x0, 18af4 <omp_get_place_proc_ids@@OMP_4.5+0x137c>
   18a34:	ldrb	w0, [sp, #136]
   18a38:	mov	w2, w23
   18a3c:	mov	x1, x24
   18a40:	bl	17a44 <omp_get_place_proc_ids@@OMP_4.5+0x2cc>
   18a44:	ldr	x2, [x25]
   18a48:	ldr	x7, [sp, #152]
   18a4c:	cmp	x2, x7
   18a50:	b.ls	18a70 <omp_get_place_proc_ids@@OMP_4.5+0x12f8>  // b.plast
   18a54:	mov	x0, x20
   18a58:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18a5c:	ldp	x3, x4, [x25]
   18a60:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18a64:	ldp	x1, x2, [sp, #152]
   18a68:	add	x0, x0, #0xc08
   18a6c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   18a70:	ldr	x1, [x25, #8]
   18a74:	ldr	x3, [sp, #160]
   18a78:	cmp	x1, x3
   18a7c:	b.cc	18a54 <omp_get_place_proc_ids@@OMP_4.5+0x12dc>  // b.lo, b.ul, b.last
   18a80:	ldr	x1, [x25, #16]
   18a84:	sub	x3, x3, x7
   18a88:	ldr	x1, [x1, #16]
   18a8c:	sub	x1, x1, x2
   18a90:	ldr	x2, [x25, #24]
   18a94:	add	x2, x7, x2
   18a98:	add	x1, x1, x2
   18a9c:	ldr	w2, [sp, #100]
   18aa0:	and	w5, w2, w0
   18aa4:	and	w0, w5, w28
   18aa8:	cmp	w0, #0x1
   18aac:	b.ne	18ad8 <omp_get_place_proc_ids@@OMP_4.5+0x1360>  // b.any
   18ab0:	mov	x2, x7
   18ab4:	mov	x0, x19
   18ab8:	mov	x4, #0x0                   	// #0
   18abc:	stp	x1, x7, [sp, #112]
   18ac0:	str	x3, [sp, #128]
   18ac4:	str	w5, [sp, #140]
   18ac8:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   18acc:	ldp	x1, x7, [sp, #112]
   18ad0:	ldr	w5, [sp, #140]
   18ad4:	ldr	x3, [sp, #128]
   18ad8:	and	w5, w5, #0xe
   18adc:	cmp	w5, #0x2
   18ae0:	b.ne	18af4 <omp_get_place_proc_ids@@OMP_4.5+0x137c>  // b.any
   18ae4:	mov	x2, x1
   18ae8:	mov	x0, x19
   18aec:	mov	x1, x7
   18af0:	bl	18918 <omp_get_place_proc_ids@@OMP_4.5+0x11a0>
   18af4:	add	x23, x23, #0x1
   18af8:	cmp	x21, x23
   18afc:	b.ne	18a08 <omp_get_place_proc_ids@@OMP_4.5+0x1290>  // b.any
   18b00:	mov	x0, x20
   18b04:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18b08:	ldp	x19, x20, [sp, #16]
   18b0c:	ldp	x21, x22, [sp, #32]
   18b10:	ldp	x23, x24, [sp, #48]
   18b14:	ldp	x25, x26, [sp, #64]
   18b18:	ldp	x27, x28, [sp, #80]
   18b1c:	ldp	x29, x30, [sp], #208
   18b20:	ret
   18b24:	stp	x29, x30, [sp, #-176]!
   18b28:	mov	x29, sp
   18b2c:	stp	x19, x20, [sp, #16]
   18b30:	mov	x20, x0
   18b34:	stp	x21, x22, [sp, #32]
   18b38:	add	x21, x0, #0xa8
   18b3c:	mov	x0, x21
   18b40:	stp	x23, x24, [sp, #48]
   18b44:	mov	x23, x2
   18b48:	mov	x24, x3
   18b4c:	stp	x25, x26, [sp, #64]
   18b50:	mov	x25, x4
   18b54:	stp	x27, x28, [sp, #80]
   18b58:	str	x1, [sp, #104]
   18b5c:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   18b60:	ldr	w0, [x20, #172]
   18b64:	cmp	w0, #0x2
   18b68:	b.eq	18b84 <omp_get_place_proc_ids@@OMP_4.5+0x140c>  // b.none
   18b6c:	add	x22, x20, #0xa0
   18b70:	add	x26, sp, #0x78
   18b74:	mov	x19, #0x0                   	// #0
   18b78:	ldr	x0, [sp, #104]
   18b7c:	cmp	x19, x0
   18b80:	b.ne	18ba8 <omp_get_place_proc_ids@@OMP_4.5+0x1430>  // b.any
   18b84:	mov	x0, x21
   18b88:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18b8c:	ldp	x19, x20, [sp, #16]
   18b90:	ldp	x21, x22, [sp, #32]
   18b94:	ldp	x23, x24, [sp, #48]
   18b98:	ldp	x25, x26, [sp, #64]
   18b9c:	ldp	x27, x28, [sp, #80]
   18ba0:	ldp	x29, x30, [sp], #176
   18ba4:	ret
   18ba8:	ldrh	w0, [x25, x19, lsl #1]
   18bac:	and	w27, w0, #0xff
   18bb0:	cmp	w27, #0x1f
   18bb4:	b.hi	18ce0 <omp_get_place_proc_ids@@OMP_4.5+0x1568>  // b.pmore
   18bb8:	mov	x0, #0x1                   	// #1
   18bbc:	mov	x1, #0x8084                	// #32900
   18bc0:	lsl	x0, x0, x27
   18bc4:	movk	x1, #0x8084, lsl #16
   18bc8:	tst	x0, x1
   18bcc:	b.eq	18ce0 <omp_get_place_proc_ids@@OMP_4.5+0x1568>  // b.none
   18bd0:	ldr	x1, [x23, x19, lsl #3]
   18bd4:	cmp	w27, #0x1f
   18bd8:	ldr	x0, [x24, x19, lsl #3]
   18bdc:	add	x0, x0, x1
   18be0:	stp	x1, x0, [sp, #120]
   18be4:	cset	w0, eq  // eq = none
   18be8:	str	w0, [sp, #100]
   18bec:	and	w0, w27, #0xffffffef
   18bf0:	cmp	w0, #0xf
   18bf4:	mov	x1, x26
   18bf8:	mov	x0, x22
   18bfc:	b.ne	18c14 <omp_get_place_proc_ids@@OMP_4.5+0x149c>  // b.any
   18c00:	bl	17dd0 <omp_get_place_proc_ids@@OMP_4.5+0x658>
   18c04:	mov	x28, x0
   18c08:	cbnz	x0, 18c1c <omp_get_place_proc_ids@@OMP_4.5+0x14a4>
   18c0c:	add	x19, x19, #0x1
   18c10:	b	18b78 <omp_get_place_proc_ids@@OMP_4.5+0x1400>
   18c14:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   18c18:	b	18c04 <omp_get_place_proc_ids@@OMP_4.5+0x148c>
   18c1c:	ldr	x0, [x0, #32]
   18c20:	sub	x0, x0, #0x1
   18c24:	cmn	x0, #0x3
   18c28:	b.hi	18c30 <omp_get_place_proc_ids@@OMP_4.5+0x14b8>  // b.pmore
   18c2c:	str	x0, [x28, #32]
   18c30:	ldr	w0, [sp, #100]
   18c34:	cmp	w0, #0x0
   18c38:	ccmp	w27, #0x7, #0x4, eq  // eq = none
   18c3c:	b.ne	18cc4 <omp_get_place_proc_ids@@OMP_4.5+0x154c>  // b.any
   18c40:	ldr	x0, [x28, #32]
   18c44:	cmn	x0, #0x1
   18c48:	b.eq	18d04 <omp_get_place_proc_ids@@OMP_4.5+0x158c>  // b.none
   18c4c:	str	xzr, [x28, #32]
   18c50:	cmp	w27, #0x2
   18c54:	b.ne	18cf8 <omp_get_place_proc_ids@@OMP_4.5+0x1580>  // b.any
   18c58:	ldr	x0, [x28, #16]
   18c5c:	ldp	x1, x3, [sp, #120]
   18c60:	ldr	x2, [x0, #16]
   18c64:	ldr	x0, [x28]
   18c68:	sub	x3, x3, x1
   18c6c:	sub	x2, x2, x0
   18c70:	ldr	x0, [x28, #24]
   18c74:	add	x0, x1, x0
   18c78:	add	x2, x2, x0
   18c7c:	mov	x0, x20
   18c80:	bl	18918 <omp_get_place_proc_ids@@OMP_4.5+0x11a0>
   18c84:	ldr	x0, [x28, #32]
   18c88:	cbnz	x0, 18c0c <omp_get_place_proc_ids@@OMP_4.5+0x1494>
   18c8c:	mov	x1, x28
   18c90:	mov	x0, x22
   18c94:	bl	1b9d0 <omp_pause_resource_all@@OMP_5.0+0x270>
   18c98:	ldr	x1, [x28, #48]
   18c9c:	cbz	x1, 18ca8 <omp_get_place_proc_ids@@OMP_4.5+0x1530>
   18ca0:	mov	x0, x22
   18ca4:	bl	1b958 <omp_pause_resource_all@@OMP_5.0+0x1f8>
   18ca8:	ldr	x0, [x28, #16]
   18cac:	ldr	x1, [x0]
   18cb0:	cmp	x1, #0x1
   18cb4:	b.ls	18cd8 <omp_get_place_proc_ids@@OMP_4.5+0x1560>  // b.plast
   18cb8:	sub	x1, x1, #0x1
   18cbc:	str	x1, [x0]
   18cc0:	b	18c0c <omp_get_place_proc_ids@@OMP_4.5+0x1494>
   18cc4:	cmp	w27, #0x2
   18cc8:	b.ne	18d0c <omp_get_place_proc_ids@@OMP_4.5+0x1594>  // b.any
   18ccc:	ldr	x0, [x28, #32]
   18cd0:	cbnz	x0, 18c0c <omp_get_place_proc_ids@@OMP_4.5+0x1494>
   18cd4:	b	18c58 <omp_get_place_proc_ids@@OMP_4.5+0x14e0>
   18cd8:	bl	18704 <omp_get_place_proc_ids@@OMP_4.5+0xf8c>
   18cdc:	b	18c0c <omp_get_place_proc_ids@@OMP_4.5+0x1494>
   18ce0:	mov	x0, x21
   18ce4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18ce8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18cec:	mov	w1, w27
   18cf0:	add	x0, x0, #0xc46
   18cf4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   18cf8:	cmp	w27, #0x12
   18cfc:	b.ne	18c8c <omp_get_place_proc_ids@@OMP_4.5+0x1514>  // b.any
   18d00:	b	18c58 <omp_get_place_proc_ids@@OMP_4.5+0x14e0>
   18d04:	cmp	w27, #0x2
   18d08:	b.eq	18c0c <omp_get_place_proc_ids@@OMP_4.5+0x1494>  // b.none
   18d0c:	cmp	w27, #0x12
   18d10:	b.ne	18c84 <omp_get_place_proc_ids@@OMP_4.5+0x150c>  // b.any
   18d14:	b	18c58 <omp_get_place_proc_ids@@OMP_4.5+0x14e0>
   18d18:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   18d1c:	add	x0, x0, #0x570
   18d20:	add	x0, x0, #0x14
   18d24:	adrp	x1, 17000 <omp_pause_resource_all_@@OMP_5.0+0x374>
   18d28:	add	x1, x1, #0xc94
   18d2c:	b	89a0 <pthread_once@plt>
   18d30:	stp	x29, x30, [sp, #-16]!
   18d34:	mov	x29, sp
   18d38:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   18d3c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   18d40:	ldp	x29, x30, [sp], #16
   18d44:	ldr	w0, [x0, #1396]
   18d48:	ret
   18d4c:	stp	x29, x30, [sp, #-352]!
   18d50:	mov	x29, sp
   18d54:	stp	x23, x24, [sp, #48]
   18d58:	mov	x23, x0
   18d5c:	ands	w0, w6, #0xff
   18d60:	str	w0, [x29, #180]
   18d64:	mov	w0, #0x8                   	// #8
   18d68:	stp	x1, x4, [x29, #224]
   18d6c:	mov	w1, #0x3                   	// #3
   18d70:	csel	w0, w1, w0, eq  // eq = none
   18d74:	str	w0, [x29, #172]
   18d78:	mov	w1, #0x7                   	// #7
   18d7c:	ldr	w0, [x29, #180]
   18d80:	stp	x19, x20, [sp, #16]
   18d84:	cmp	w0, #0x0
   18d88:	mov	w0, #0xff                  	// #255
   18d8c:	csel	w0, w1, w0, eq  // eq = none
   18d90:	str	w0, [x29, #176]
   18d94:	ldr	x0, [x29, #224]
   18d98:	stp	x21, x22, [sp, #32]
   18d9c:	mov	x22, x3
   18da0:	add	x0, x0, #0x2
   18da4:	stp	x25, x26, [sp, #64]
   18da8:	lsl	x0, x0, #5
   18dac:	stp	x27, x28, [sp, #80]
   18db0:	mov	x27, x2
   18db4:	str	w7, [x29, #168]
   18db8:	str	x5, [x29, #192]
   18dbc:	bl	adb0 <fprintf@plt+0x2250>
   18dc0:	mov	x19, x0
   18dc4:	ldr	x0, [x29, #224]
   18dc8:	stp	x0, x23, [x19, #48]
   18dcc:	ldr	w0, [x29, #168]
   18dd0:	cmp	w0, #0x3
   18dd4:	cset	x0, ne  // ne = any
   18dd8:	str	x0, [x19]
   18ddc:	ldr	x0, [x29, #224]
   18de0:	cbnz	x0, 18e0c <omp_get_place_proc_ids@@OMP_4.5+0x1694>
   18de4:	stp	xzr, xzr, [x19, #16]
   18de8:	mov	sp, x29
   18dec:	mov	x0, x19
   18df0:	ldp	x19, x20, [sp, #16]
   18df4:	ldp	x21, x22, [sp, #32]
   18df8:	ldp	x23, x24, [sp, #48]
   18dfc:	ldp	x25, x26, [sp, #64]
   18e00:	ldp	x27, x28, [sp, #80]
   18e04:	ldp	x29, x30, [sp], #352
   18e08:	ret
   18e0c:	mov	x0, #0xffffffffffffffff    	// #-1
   18e10:	stp	xzr, x0, [x29, #272]
   18e14:	ldr	w0, [x29, #168]
   18e18:	str	xzr, [x29, #256]
   18e1c:	cmp	w0, #0x1
   18e20:	str	xzr, [x29, #288]
   18e24:	cset	w0, eq  // eq = none
   18e28:	str	w0, [x29, #136]
   18e2c:	cmp	w0, #0x0
   18e30:	ldr	x0, [x29, #224]
   18e34:	ccmp	x0, #0x1, #0x2, eq  // eq = none
   18e38:	b.hi	18eb4 <omp_get_place_proc_ids@@OMP_4.5+0x173c>  // b.pmore
   18e3c:	mov	x24, #0x8                   	// #8
   18e40:	str	xzr, [x29, #184]
   18e44:	add	x0, x23, #0xa8
   18e48:	str	x0, [x29, #208]
   18e4c:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   18e50:	ldr	w0, [x23, #172]
   18e54:	cmp	w0, #0x2
   18e58:	b.eq	18f1c <omp_get_place_proc_ids@@OMP_4.5+0x17a4>  // b.none
   18e5c:	add	x0, x23, #0xa0
   18e60:	add	x26, x29, #0x128
   18e64:	ldr	x20, [x29, #184]
   18e68:	str	x0, [x29, #216]
   18e6c:	add	x0, x19, #0x40
   18e70:	mov	x25, #0x0                   	// #0
   18e74:	str	x0, [x29, #128]
   18e78:	add	x0, x29, #0x100
   18e7c:	str	x0, [x29, #144]
   18e80:	str	wzr, [x29, #152]
   18e84:	str	xzr, [x29, #200]
   18e88:	ldr	x0, [x29, #224]
   18e8c:	cmp	x25, x0
   18e90:	b.cc	18f34 <omp_get_place_proc_ids@@OMP_4.5+0x17bc>  // b.lo, b.ul, b.last
   18e94:	cbz	x22, 193dc <omp_get_place_proc_ids@@OMP_4.5+0x1c64>
   18e98:	cmp	x0, #0x1
   18e9c:	b.eq	1934c <omp_get_place_proc_ids@@OMP_4.5+0x1bd4>  // b.none
   18ea0:	ldr	x0, [x29, #208]
   18ea4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18ea8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18eac:	add	x0, x0, #0xc9d
   18eb0:	b	18fc0 <omp_get_place_proc_ids@@OMP_4.5+0x1848>
   18eb4:	ldr	x0, [x29, #224]
   18eb8:	ldr	w1, [x29, #168]
   18ebc:	lsl	x0, x0, #4
   18ec0:	cmp	w1, #0x1
   18ec4:	add	x0, x0, #0x10
   18ec8:	sub	sp, sp, x0
   18ecc:	mov	x0, sp
   18ed0:	str	x0, [x29, #272]
   18ed4:	b.eq	18ee0 <omp_get_place_proc_ids@@OMP_4.5+0x1768>  // b.none
   18ed8:	str	xzr, [x29, #280]
   18edc:	b	18e3c <omp_get_place_proc_ids@@OMP_4.5+0x16c4>
   18ee0:	ldr	x1, [x29, #224]
   18ee4:	mov	x24, #0x20                  	// #32
   18ee8:	str	xzr, [x0]
   18eec:	lsl	x1, x1, #3
   18ef0:	str	x1, [x29, #184]
   18ef4:	mov	x1, #0x1                   	// #1
   18ef8:	str	x1, [x29, #280]
   18efc:	ldr	x1, [x29, #224]
   18f00:	cmp	x1, #0x1
   18f04:	cset	x1, hi  // hi = pmore
   18f08:	add	x1, x1, #0x1
   18f0c:	str	x1, [x29, #288]
   18f10:	ldr	x1, [x29, #184]
   18f14:	str	x1, [x0, #8]
   18f18:	b	18e44 <omp_get_place_proc_ids@@OMP_4.5+0x16cc>
   18f1c:	ldr	x0, [x29, #208]
   18f20:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18f24:	mov	x0, x19
   18f28:	mov	x19, #0x0                   	// #0
   18f2c:	bl	8950 <free@plt>
   18f30:	b	18de8 <omp_get_place_proc_ids@@OMP_4.5+0x1670>
   18f34:	ldrb	w0, [x29, #180]
   18f38:	mov	w2, w25
   18f3c:	ldr	x1, [x29, #192]
   18f40:	add	x21, x25, #0x2
   18f44:	bl	17a44 <omp_get_place_proc_ids@@OMP_4.5+0x2cc>
   18f48:	str	w0, [x29, #160]
   18f4c:	lsl	x2, x25, #3
   18f50:	add	x4, x27, x25, lsl #3
   18f54:	ldr	x0, [x27, x2]
   18f58:	cbz	x0, 18f70 <omp_get_place_proc_ids@@OMP_4.5+0x17f8>
   18f5c:	ldr	w3, [x29, #160]
   18f60:	ldr	w1, [x29, #176]
   18f64:	and	w28, w1, w3
   18f68:	cmp	w28, #0xd
   18f6c:	b.ne	18f8c <omp_get_place_proc_ids@@OMP_4.5+0x1814>  // b.any
   18f70:	lsl	x3, x21, #5
   18f74:	add	x0, x19, x25, lsl #5
   18f78:	mov	x1, #0xffffffffffffffff    	// #-1
   18f7c:	str	xzr, [x19, x3]
   18f80:	str	x1, [x0, #80]
   18f84:	add	x25, x25, #0x1
   18f88:	b	18e88 <omp_get_place_proc_ids@@OMP_4.5+0x1710>
   18f8c:	cmp	w28, #0xe
   18f90:	b.ne	18fec <omp_get_place_proc_ids@@OMP_4.5+0x1874>  // b.any
   18f94:	stp	x0, x0, [x29, #296]
   18f98:	mov	x1, x26
   18f9c:	ldr	x0, [x29, #216]
   18fa0:	str	x2, [x29, #160]
   18fa4:	bl	18740 <omp_get_place_proc_ids@@OMP_4.5+0xfc8>
   18fa8:	ldr	x2, [x29, #160]
   18fac:	cbnz	x0, 18fc4 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   18fb0:	ldr	x0, [x29, #208]
   18fb4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   18fb8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   18fbc:	add	x0, x0, #0xc78
   18fc0:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   18fc4:	ldr	x4, [x0]
   18fc8:	ldr	x1, [x29, #296]
   18fcc:	sub	x1, x1, x4
   18fd0:	str	x1, [x29, #296]
   18fd4:	ldp	x4, x0, [x0, #16]
   18fd8:	ldr	x4, [x4, #16]
   18fdc:	add	x1, x1, x4
   18fe0:	add	x1, x1, x0
   18fe4:	str	x1, [x27, x2]
   18fe8:	b	18f70 <omp_get_place_proc_ids@@OMP_4.5+0x17f8>
   18fec:	add	x8, x25, #0x1
   18ff0:	cmp	w28, #0x1c
   18ff4:	b.ne	19168 <omp_get_place_proc_ids@@OMP_4.5+0x19f0>  // b.any
   18ff8:	ldr	x1, [x29, #232]
   18ffc:	str	x0, [x29, #296]
   19000:	lsl	x3, x21, #5
   19004:	add	x6, x19, x25, lsl #5
   19008:	stp	x8, x4, [x29, #104]
   1900c:	ldr	x2, [x1, x2]
   19010:	str	x2, [x29, #120]
   19014:	str	xzr, [x19, x3]
   19018:	add	x28, x2, x25
   1901c:	ldr	x2, [x29, #232]
   19020:	lsl	x1, x28, #3
   19024:	ldr	x0, [x27, x1]
   19028:	ldr	x1, [x2, x1]
   1902c:	add	x0, x0, x1
   19030:	str	x0, [x29, #304]
   19034:	mov	x0, #0xfffffffffffffffd    	// #-3
   19038:	str	x0, [x6, #80]
   1903c:	ldr	x0, [x29, #216]
   19040:	mov	x1, x26
   19044:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   19048:	mov	x21, x0
   1904c:	ldp	x8, x4, [x29, #104]
   19050:	ldr	x2, [x29, #120]
   19054:	cbnz	x0, 19160 <omp_get_place_proc_ids@@OMP_4.5+0x19e8>
   19058:	ldrb	w1, [x29, #172]
   1905c:	ldr	w0, [x29, #160]
   19060:	asr	w21, w0, w1
   19064:	mov	x1, #0x1                   	// #1
   19068:	lsl	x21, x1, x21
   1906c:	cmp	x24, x21
   19070:	ldr	x1, [x4, #8]
   19074:	csel	x24, x24, x21, cs  // cs = hs, nlast
   19078:	ldr	x0, [x29, #296]
   1907c:	sub	x20, x20, x1
   19080:	sub	x1, x0, #0x1
   19084:	add	x20, x20, x1
   19088:	add	x20, x20, x21
   1908c:	neg	x21, x21
   19090:	and	x21, x21, x20
   19094:	ldr	x20, [x29, #304]
   19098:	sub	x20, x20, x0
   1909c:	ldr	x0, [x29, #200]
   190a0:	add	x20, x20, x21
   190a4:	add	x0, x0, x2
   190a8:	str	x0, [x29, #200]
   190ac:	cmp	x8, x28
   190b0:	b.ls	190bc <omp_get_place_proc_ids@@OMP_4.5+0x1944>  // b.plast
   190b4:	sub	x25, x8, #0x1
   190b8:	b	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>
   190bc:	ldr	x1, [x29, #128]
   190c0:	lsl	x0, x8, #5
   190c4:	mov	w2, w8
   190c8:	str	x8, [x29, #160]
   190cc:	str	xzr, [x1, x0]
   190d0:	ldrb	w0, [x29, #180]
   190d4:	ldr	x1, [x29, #192]
   190d8:	bl	17a44 <omp_get_place_proc_ids@@OMP_4.5+0x2cc>
   190dc:	ldr	w1, [x29, #176]
   190e0:	and	w0, w0, w1
   190e4:	bl	17a14 <omp_get_place_proc_ids@@OMP_4.5+0x29c>
   190e8:	tst	w0, #0xff
   190ec:	ldr	x8, [x29, #160]
   190f0:	b.eq	19118 <omp_get_place_proc_ids@@OMP_4.5+0x19a0>  // b.none
   190f4:	ldr	x2, [x29, #232]
   190f8:	ldr	x0, [x29, #304]
   190fc:	ldr	x1, [x27, x8, lsl #3]
   19100:	sub	x0, x20, x0
   19104:	ldr	x2, [x2, x8, lsl #3]
   19108:	add	x1, x1, x0
   1910c:	ldr	x0, [x29, #144]
   19110:	bl	180e0 <omp_get_place_proc_ids@@OMP_4.5+0x968>
   19114:	ldr	x8, [x29, #160]
   19118:	add	x8, x8, #0x1
   1911c:	b	190ac <omp_get_place_proc_ids@@OMP_4.5+0x1934>
   19120:	ldr	x6, [x29, #192]
   19124:	mov	x3, x25
   19128:	ldr	x5, [x29, #232]
   1912c:	mov	x2, x8
   19130:	mov	x4, x27
   19134:	mov	x1, x21
   19138:	mov	x0, x19
   1913c:	mov	x7, #0x0                   	// #0
   19140:	str	x8, [x29, #160]
   19144:	bl	184ec <omp_get_place_proc_ids@@OMP_4.5+0xd74>
   19148:	ldr	x8, [x29, #160]
   1914c:	add	x25, x25, #0x1
   19150:	cmp	x25, x28
   19154:	b.ls	19120 <omp_get_place_proc_ids@@OMP_4.5+0x19a8>  // b.plast
   19158:	sub	x25, x25, #0x1
   1915c:	b	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>
   19160:	mov	x25, x8
   19164:	b	19150 <omp_get_place_proc_ids@@OMP_4.5+0x19d8>
   19168:	cmp	w28, #0x1d
   1916c:	b.ne	19190 <omp_get_place_proc_ids@@OMP_4.5+0x1a18>  // b.any
   19170:	lsl	x3, x21, #5
   19174:	add	x0, x19, x25, lsl #5
   19178:	mov	x1, #0xfffffffffffffffe    	// #-2
   1917c:	str	xzr, [x19, x3]
   19180:	str	x1, [x0, #80]
   19184:	mov	w0, #0x1                   	// #1
   19188:	str	w0, [x29, #152]
   1918c:	b	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>
   19190:	str	x0, [x29, #296]
   19194:	cmp	w28, #0x4
   19198:	b.eq	1920c <omp_get_place_proc_ids@@OMP_4.5+0x1a94>  // b.none
   1919c:	ldr	x1, [x29, #232]
   191a0:	ldr	x2, [x1, x2]
   191a4:	add	x2, x0, x2
   191a8:	str	x2, [x29, #304]
   191ac:	cmp	w28, #0xc
   191b0:	b.ne	19214 <omp_get_place_proc_ids@@OMP_4.5+0x1a9c>  // b.any
   191b4:	lsl	x3, x21, #5
   191b8:	ldr	w1, [x29, #160]
   191bc:	mov	x7, #0x1                   	// #1
   191c0:	sub	x2, x2, x0
   191c4:	ldr	x0, [x29, #144]
   191c8:	str	xzr, [x19, x3]
   191cc:	ldrb	w3, [x29, #172]
   191d0:	sub	x20, x20, #0x1
   191d4:	asr	w21, w1, w3
   191d8:	lsl	x21, x7, x21
   191dc:	cmp	x24, x21
   191e0:	add	x20, x20, x21
   191e4:	csel	x24, x24, x21, cs  // cs = hs, nlast
   191e8:	neg	x21, x21
   191ec:	and	x21, x21, x20
   191f0:	mov	x1, x21
   191f4:	bl	180e0 <omp_get_place_proc_ids@@OMP_4.5+0x968>
   191f8:	ldp	x1, x20, [x29, #296]
   191fc:	str	w7, [x29, #152]
   19200:	sub	x20, x20, x1
   19204:	add	x20, x20, x21
   19208:	b	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>
   1920c:	add	x2, x0, #0x8
   19210:	b	191a8 <omp_get_place_proc_ids@@OMP_4.5+0x1a30>
   19214:	mov	x1, x26
   19218:	cmp	w28, #0xf
   1921c:	ldr	x0, [x29, #216]
   19220:	b.ne	19244 <omp_get_place_proc_ids@@OMP_4.5+0x1acc>  // b.any
   19224:	bl	17dd0 <omp_get_place_proc_ids@@OMP_4.5+0x658>
   19228:	mov	x1, x0
   1922c:	cbnz	x0, 19250 <omp_get_place_proc_ids@@OMP_4.5+0x1ad8>
   19230:	lsl	x3, x21, #5
   19234:	add	x0, x19, x25, lsl #5
   19238:	mov	x1, #0xfffffffffffffffe    	// #-2
   1923c:	str	xzr, [x19, x3]
   19240:	b	18f80 <omp_get_place_proc_ids@@OMP_4.5+0x1808>
   19244:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   19248:	mov	x1, x0
   1924c:	cbz	x0, 19278 <omp_get_place_proc_ids@@OMP_4.5+0x1b00>
   19250:	ldr	x0, [x1, #32]
   19254:	cmn	x0, #0x2
   19258:	b.eq	19278 <omp_get_place_proc_ids@@OMP_4.5+0x1b00>  // b.none
   1925c:	mov	w4, w28
   19260:	add	x3, x19, x21, lsl #5
   19264:	mov	x2, x26
   19268:	mov	x0, x23
   1926c:	mov	x5, #0x0                   	// #0
   19270:	bl	18408 <omp_get_place_proc_ids@@OMP_4.5+0xc90>
   19274:	b	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>
   19278:	ldrb	w1, [x29, #172]
   1927c:	lsl	x3, x21, #5
   19280:	ldr	w0, [x29, #160]
   19284:	sub	x20, x20, #0x1
   19288:	str	xzr, [x19, x3]
   1928c:	asr	w21, w0, w1
   19290:	mov	x1, #0x1                   	// #1
   19294:	ldr	x0, [x29, #200]
   19298:	lsl	x21, x1, x21
   1929c:	cmp	x24, x21
   192a0:	add	x20, x20, x21
   192a4:	csel	x24, x24, x21, cs  // cs = hs, nlast
   192a8:	add	x0, x0, x1
   192ac:	neg	x21, x21
   192b0:	str	x0, [x29, #200]
   192b4:	and	x21, x21, x20
   192b8:	mov	w0, w28
   192bc:	bl	17a14 <omp_get_place_proc_ids@@OMP_4.5+0x29c>
   192c0:	tst	w0, #0xff
   192c4:	b.eq	192dc <omp_get_place_proc_ids@@OMP_4.5+0x1b64>  // b.none
   192c8:	ldp	x0, x2, [x29, #296]
   192cc:	mov	x1, x21
   192d0:	sub	x2, x2, x0
   192d4:	ldr	x0, [x29, #144]
   192d8:	bl	180e0 <omp_get_place_proc_ids@@OMP_4.5+0x968>
   192dc:	ldp	x5, x4, [x29, #296]
   192e0:	cmp	w28, #0x5
   192e4:	sub	x20, x4, x5
   192e8:	add	x20, x20, x21
   192ec:	b.ne	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>  // b.any
   192f0:	ldr	x0, [x29, #224]
   192f4:	add	x3, x25, #0x1
   192f8:	cmp	x0, x3
   192fc:	b.eq	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>  // b.none
   19300:	ldrb	w0, [x29, #180]
   19304:	mov	w2, w3
   19308:	ldr	x1, [x29, #192]
   1930c:	bl	17a44 <omp_get_place_proc_ids@@OMP_4.5+0x2cc>
   19310:	ldr	w1, [x29, #176]
   19314:	and	w0, w0, w1
   19318:	cmp	w0, #0x4
   1931c:	b.ne	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>  // b.any
   19320:	ldr	x0, [x27, x3, lsl #3]
   19324:	cmp	x5, x0
   19328:	b.hi	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>  // b.pmore
   1932c:	add	x0, x0, #0x8
   19330:	cmp	x4, x0
   19334:	b.cc	18f84 <omp_get_place_proc_ids@@OMP_4.5+0x180c>  // b.lo, b.ul, b.last
   19338:	ldr	x1, [x29, #128]
   1933c:	lsl	x0, x3, #5
   19340:	mov	x25, x3
   19344:	str	xzr, [x1, x0]
   19348:	b	192f0 <omp_get_place_proc_ids@@OMP_4.5+0x1b78>
   1934c:	ldr	x0, [x29, #232]
   19350:	ldr	x1, [x22]
   19354:	mov	x22, #0x0                   	// #0
   19358:	ldr	x0, [x0]
   1935c:	str	x1, [x19, #32]
   19360:	add	x0, x0, x1
   19364:	stp	x1, x0, [x19, #16]
   19368:	ldr	x0, [x29, #200]
   1936c:	str	xzr, [x19, #8]
   19370:	cmp	x0, #0x0
   19374:	ldr	w0, [x29, #152]
   19378:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1937c:	b.ne	19498 <omp_get_place_proc_ids@@OMP_4.5+0x1d20>  // b.any
   19380:	ldr	w0, [x29, #168]
   19384:	cmp	w0, #0x1
   19388:	b.ne	19b1c <omp_get_place_proc_ids@@OMP_4.5+0x23a4>  // b.any
   1938c:	add	x21, x29, #0x140
   19390:	mov	x20, #0x0                   	// #0
   19394:	mov	x2, x20
   19398:	mov	x1, x27
   1939c:	mov	x0, x19
   193a0:	bl	18184 <omp_get_place_proc_ids@@OMP_4.5+0xa0c>
   193a4:	ldr	x1, [x19, #16]
   193a8:	mov	x4, x22
   193ac:	mov	x2, x21
   193b0:	mov	x3, #0x8                   	// #8
   193b4:	str	x0, [x29, #320]
   193b8:	mov	x0, x23
   193bc:	add	x1, x1, x20, lsl #3
   193c0:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   193c4:	ldr	x0, [x29, #224]
   193c8:	add	x20, x20, #0x1
   193cc:	cmp	x0, x20
   193d0:	b.ne	19394 <omp_get_place_proc_ids@@OMP_4.5+0x1c1c>  // b.any
   193d4:	cbnz	x22, 19b20 <omp_get_place_proc_ids@@OMP_4.5+0x23a8>
   193d8:	b	19b5c <omp_get_place_proc_ids@@OMP_4.5+0x23e4>
   193dc:	ldr	x0, [x29, #200]
   193e0:	cmp	x0, #0x0
   193e4:	ldr	w0, [x29, #136]
   193e8:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   193ec:	b.eq	1948c <omp_get_place_proc_ids@@OMP_4.5+0x1d14>  // b.none
   193f0:	ldr	w0, [x23, #12]
   193f4:	add	x1, x24, x20
   193f8:	ldr	x2, [x23, #96]
   193fc:	sub	x1, x1, #0x1
   19400:	blr	x2
   19404:	str	x0, [x19, #32]
   19408:	cbnz	x0, 19420 <omp_get_place_proc_ids@@OMP_4.5+0x1ca8>
   1940c:	ldr	x0, [x29, #208]
   19410:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   19414:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19418:	add	x0, x0, #0xcb4
   1941c:	b	18fc0 <omp_get_place_proc_ids@@OMP_4.5+0x1848>
   19420:	sub	x1, x24, #0x1
   19424:	neg	x24, x24
   19428:	add	x0, x0, x1
   1942c:	and	x24, x0, x24
   19430:	str	x24, [x19, #16]
   19434:	ldr	x0, [x29, #288]
   19438:	add	x24, x24, x20
   1943c:	str	x24, [x19, #24]
   19440:	cmp	x0, #0x1
   19444:	b.ne	19454 <omp_get_place_proc_ids@@OMP_4.5+0x1cdc>  // b.any
   19448:	ldr	x0, [x29, #280]
   1944c:	sub	x0, x0, #0x1
   19450:	str	x0, [x29, #280]
   19454:	ldr	x0, [x29, #280]
   19458:	cmp	x0, #0x0
   1945c:	b.le	19368 <omp_get_place_proc_ids@@OMP_4.5+0x1bf0>
   19460:	ldr	x1, [x29, #272]
   19464:	add	x0, x1, x0, lsl #4
   19468:	ldur	x2, [x0, #-8]
   1946c:	ldr	x0, [x1]
   19470:	sub	x0, x2, x0
   19474:	bl	87a0 <malloc@plt>
   19478:	str	x0, [x29, #256]
   1947c:	cbz	x0, 19368 <omp_get_place_proc_ids@@OMP_4.5+0x1bf0>
   19480:	add	x22, x29, #0x100
   19484:	str	x19, [x29, #264]
   19488:	b	19368 <omp_get_place_proc_ids@@OMP_4.5+0x1bf0>
   1948c:	stp	xzr, xzr, [x19, #16]
   19490:	str	xzr, [x19, #32]
   19494:	b	19368 <omp_get_place_proc_ids@@OMP_4.5+0x1bf0>
   19498:	ldr	x0, [x29, #200]
   1949c:	cbz	x0, 194b4 <omp_get_place_proc_ids@@OMP_4.5+0x1d3c>
   194a0:	ldr	x1, [x29, #200]
   194a4:	mov	x0, #0x48                  	// #72
   194a8:	mul	x0, x1, x0
   194ac:	bl	adb0 <fprintf@plt+0x2250>
   194b0:	str	x0, [x19, #8]
   194b4:	mov	x0, #0xffffffffffffffff    	// #-1
   194b8:	str	x0, [x29, #200]
   194bc:	add	x0, x29, #0x128
   194c0:	str	x0, [x29, #128]
   194c4:	add	x0, x29, #0xf8
   194c8:	str	x0, [x29, #120]
   194cc:	ldr	x0, [x29, #128]
   194d0:	mov	x20, #0x0                   	// #0
   194d4:	ldr	x28, [x19, #8]
   194d8:	add	x0, x0, #0x18
   194dc:	str	x0, [x29, #112]
   194e0:	stp	xzr, xzr, [x29, #152]
   194e4:	ldr	x0, [x29, #224]
   194e8:	cmp	x20, x0
   194ec:	b.cs	19380 <omp_get_place_proc_ids@@OMP_4.5+0x1c08>  // b.hs, b.nlast
   194f0:	add	x25, x19, x20, lsl #5
   194f4:	lsl	x0, x20, #5
   194f8:	str	x0, [x29, #144]
   194fc:	ldr	x0, [x25, #64]
   19500:	cbnz	x0, 19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   19504:	ldrb	w0, [x29, #180]
   19508:	lsl	x24, x20, #3
   1950c:	ldr	x1, [x29, #192]
   19510:	mov	w2, w20
   19514:	bl	17a44 <omp_get_place_proc_ids@@OMP_4.5+0x2cc>
   19518:	mov	w26, w0
   1951c:	ldr	x2, [x27, x24]
   19520:	add	x3, x27, x20, lsl #3
   19524:	cbz	x2, 19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   19528:	ldr	x0, [x29, #184]
   1952c:	sub	x0, x0, #0x1
   19530:	str	x0, [x29, #144]
   19534:	ldr	w0, [x29, #176]
   19538:	and	w4, w0, w26
   1953c:	add	x0, x20, #0x1
   19540:	str	x0, [x29, #136]
   19544:	cmp	w4, #0x1c
   19548:	b.eq	19628 <omp_get_place_proc_ids@@OMP_4.5+0x1eb0>  // b.none
   1954c:	b.gt	1956c <omp_get_place_proc_ids@@OMP_4.5+0x1df4>
   19550:	cmp	w4, #0xc
   19554:	b.eq	195d8 <omp_get_place_proc_ids@@OMP_4.5+0x1e60>  // b.none
   19558:	sub	w0, w4, #0xd
   1955c:	cmp	w0, #0x2
   19560:	b.hi	19574 <omp_get_place_proc_ids@@OMP_4.5+0x1dfc>  // b.pmore
   19564:	add	x20, x20, #0x1
   19568:	b	194e4 <omp_get_place_proc_ids@@OMP_4.5+0x1d6c>
   1956c:	cmp	w4, #0x1d
   19570:	b.eq	19718 <omp_get_place_proc_ids@@OMP_4.5+0x1fa0>  // b.none
   19574:	str	x2, [x28]
   19578:	cmp	w4, #0x4
   1957c:	b.eq	1980c <omp_get_place_proc_ids@@OMP_4.5+0x2094>  // b.none
   19580:	ldr	x0, [x29, #232]
   19584:	ldr	x0, [x0, x24]
   19588:	add	x2, x2, x0
   1958c:	ldr	x0, [x29, #216]
   19590:	str	x2, [x28, #8]
   19594:	mov	x1, x28
   19598:	str	w4, [x29, #104]
   1959c:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   195a0:	mov	x21, x0
   195a4:	ldr	w4, [x29, #104]
   195a8:	cbz	x0, 19814 <omp_get_place_proc_ids@@OMP_4.5+0x209c>
   195ac:	ldr	x0, [x0, #32]
   195b0:	cmn	x0, #0x2
   195b4:	b.eq	19814 <omp_get_place_proc_ids@@OMP_4.5+0x209c>  // b.none
   195b8:	add	x3, x20, #0x2
   195bc:	mov	x5, x22
   195c0:	mov	x2, x28
   195c4:	mov	x1, x21
   195c8:	add	x3, x19, x3, lsl #5
   195cc:	mov	x0, x23
   195d0:	bl	18408 <omp_get_place_proc_ids@@OMP_4.5+0xc90>
   195d4:	b	19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   195d8:	ldrb	w0, [x29, #172]
   195dc:	mov	x4, x22
   195e0:	ldr	x1, [x19, #16]
   195e4:	asr	w26, w26, w0
   195e8:	mov	x0, #0x1                   	// #1
   195ec:	lsl	x26, x0, x26
   195f0:	ldr	x0, [x29, #144]
   195f4:	add	x0, x0, x26
   195f8:	neg	x26, x26
   195fc:	and	x26, x0, x26
   19600:	str	x26, [x25, #80]
   19604:	ldr	x0, [x29, #232]
   19608:	add	x1, x26, x1
   1960c:	ldr	x21, [x0, x24]
   19610:	mov	x0, x23
   19614:	mov	x3, x21
   19618:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   1961c:	add	x0, x26, x21
   19620:	str	x0, [x29, #184]
   19624:	b	19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   19628:	ldr	x0, [x29, #232]
   1962c:	str	x2, [x29, #296]
   19630:	ldr	x2, [x29, #232]
   19634:	ldr	x21, [x0, x24]
   19638:	add	x21, x20, x21
   1963c:	lsl	x1, x21, #3
   19640:	ldr	x0, [x27, x1]
   19644:	ldr	x1, [x2, x1]
   19648:	add	x0, x0, x1
   1964c:	str	x0, [x29, #304]
   19650:	ldr	x0, [x25, #96]
   19654:	cbnz	x0, 19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   19658:	ldr	x1, [x29, #128]
   1965c:	str	x3, [x29, #104]
   19660:	ldr	x0, [x29, #216]
   19664:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   19668:	mov	x25, x0
   1966c:	cbnz	x0, 19710 <omp_get_place_proc_ids@@OMP_4.5+0x1f98>
   19670:	ldr	x3, [x29, #104]
   19674:	str	x21, [x29, #200]
   19678:	ldrb	w0, [x29, #172]
   1967c:	ldr	x1, [x3, #8]
   19680:	asr	w26, w26, w0
   19684:	mov	x0, #0x1                   	// #1
   19688:	str	x1, [x29, #160]
   1968c:	lsl	x26, x0, x26
   19690:	ldr	x0, [x27, x24]
   19694:	ldr	x1, [x29, #144]
   19698:	ldr	x3, [x29, #304]
   1969c:	add	x2, x0, x1
   196a0:	ldr	x1, [x29, #160]
   196a4:	sub	x1, x26, x1
   196a8:	neg	x26, x26
   196ac:	add	x1, x2, x1
   196b0:	and	x26, x1, x26
   196b4:	ldr	x1, [x29, #160]
   196b8:	sub	x0, x1, x0
   196bc:	sub	x3, x3, x1
   196c0:	add	x0, x0, x26
   196c4:	str	x0, [x29, #152]
   196c8:	ldr	x0, [x29, #152]
   196cc:	add	x0, x3, x0
   196d0:	str	x0, [x29, #184]
   196d4:	b	19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   196d8:	ldr	x2, [x29, #136]
   196dc:	mov	x3, x20
   196e0:	ldr	x6, [x29, #192]
   196e4:	mov	x7, x22
   196e8:	ldr	x5, [x29, #232]
   196ec:	mov	x4, x27
   196f0:	mov	x1, x25
   196f4:	mov	x0, x19
   196f8:	add	x20, x20, #0x1
   196fc:	bl	184ec <omp_get_place_proc_ids@@OMP_4.5+0xd74>
   19700:	cmp	x20, x21
   19704:	b.ls	196d8 <omp_get_place_proc_ids@@OMP_4.5+0x1f60>  // b.plast
   19708:	sub	x20, x20, #0x1
   1970c:	b	19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   19710:	ldr	x20, [x29, #136]
   19714:	b	19700 <omp_get_place_proc_ids@@OMP_4.5+0x1f88>
   19718:	ldr	x1, [x29, #128]
   1971c:	str	x2, [x29, #296]
   19720:	ldr	x0, [x29, #216]
   19724:	add	x2, x2, #0x8
   19728:	str	x2, [x29, #304]
   1972c:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   19730:	mov	x21, x0
   19734:	cbz	x0, 19758 <omp_get_place_proc_ids@@OMP_4.5+0x1fe0>
   19738:	ldr	x9, [x0]
   1973c:	ldr	x7, [x29, #296]
   19740:	cmp	x9, x7
   19744:	b.hi	19758 <omp_get_place_proc_ids@@OMP_4.5+0x1fe0>  // b.pmore
   19748:	ldr	x1, [x0, #8]
   1974c:	ldr	x0, [x29, #304]
   19750:	cmp	x1, x0
   19754:	b.cs	1976c <omp_get_place_proc_ids@@OMP_4.5+0x1ff4>  // b.hs, b.nlast
   19758:	ldr	x0, [x29, #208]
   1975c:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   19760:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19764:	add	x0, x0, #0xcd2
   19768:	b	18fc0 <omp_get_place_proc_ids@@OMP_4.5+0x1848>
   1976c:	ldrb	w0, [x29, #180]
   19770:	sub	w2, w20, #0x1
   19774:	ldr	x1, [x29, #192]
   19778:	bl	17a44 <omp_get_place_proc_ids@@OMP_4.5+0x2cc>
   1977c:	ldr	w1, [x29, #176]
   19780:	and	w0, w0, w1
   19784:	cmp	w0, #0x1d
   19788:	b.eq	197a0 <omp_get_place_proc_ids@@OMP_4.5+0x2028>  // b.none
   1978c:	sub	x2, x20, #0x1
   19790:	mov	x1, x27
   19794:	mov	x0, x19
   19798:	bl	18184 <omp_get_place_proc_ids@@OMP_4.5+0xa0c>
   1979c:	str	x0, [x29, #320]
   197a0:	ldr	x0, [x29, #320]
   197a4:	cbz	x0, 197b8 <omp_get_place_proc_ids@@OMP_4.5+0x2040>
   197a8:	ldr	x1, [x29, #232]
   197ac:	ldr	x1, [x1, x24]
   197b0:	sub	x0, x0, x1
   197b4:	str	x0, [x29, #320]
   197b8:	ldr	x0, [x21, #16]
   197bc:	mov	x4, x22
   197c0:	ldr	x2, [x29, #112]
   197c4:	mov	x3, #0x8                   	// #8
   197c8:	ldr	x1, [x0, #16]
   197cc:	ldr	x0, [x21, #24]
   197d0:	sub	x1, x1, x9
   197d4:	add	x7, x7, x0
   197d8:	mov	x0, x23
   197dc:	add	x1, x1, x7
   197e0:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   197e4:	ldr	x0, [x21, #16]
   197e8:	ldr	x1, [x21]
   197ec:	ldr	x0, [x0, #16]
   197f0:	ldr	x2, [x29, #296]
   197f4:	sub	x0, x0, x1
   197f8:	ldr	x1, [x21, #24]
   197fc:	add	x1, x1, x2
   19800:	add	x0, x0, x1
   19804:	str	x0, [x29, #320]
   19808:	b	19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   1980c:	add	x2, x2, #0x8
   19810:	b	1958c <omp_get_place_proc_ids@@OMP_4.5+0x1e14>
   19814:	str	xzr, [x28, #48]
   19818:	cbz	x21, 19840 <omp_get_place_proc_ids@@OMP_4.5+0x20c8>
   1981c:	ldr	x0, [x21, #32]
   19820:	cmn	x0, #0x2
   19824:	b.ne	19840 <omp_get_place_proc_ids@@OMP_4.5+0x20c8>  // b.any
   19828:	ldr	x0, [x29, #216]
   1982c:	mov	x1, x21
   19830:	str	w4, [x29, #104]
   19834:	bl	1b9d0 <omp_pause_resource_all@@OMP_5.0+0x270>
   19838:	str	x21, [x28, #48]
   1983c:	ldr	w4, [x29, #104]
   19840:	ldp	x0, x1, [x28]
   19844:	str	x28, [x25, #64]
   19848:	ldr	x2, [x29, #200]
   1984c:	str	x19, [x28, #16]
   19850:	cmn	x2, #0x1
   19854:	sub	x1, x1, x0
   19858:	b.eq	19910 <omp_get_place_proc_ids@@OMP_4.5+0x2198>  // b.none
   1985c:	ldr	x2, [x29, #160]
   19860:	sub	x0, x0, x2
   19864:	ldr	x2, [x29, #152]
   19868:	add	x0, x0, x2
   1986c:	str	x0, [x28, #24]
   19870:	ldr	x0, [x29, #200]
   19874:	cmp	x20, x0
   19878:	csinv	x0, x0, xzr, ne  // ne = any
   1987c:	str	x0, [x29, #200]
   19880:	and	w0, w4, #0xe
   19884:	str	w4, [x29, #144]
   19888:	cmp	w0, #0x2
   1988c:	cset	w0, eq  // eq = none
   19890:	strb	w0, [x25, #72]
   19894:	and	w0, w4, #0xfffffffe
   19898:	cmp	w0, #0x12
   1989c:	cset	w0, eq  // eq = none
   198a0:	strb	w0, [x25, #73]
   198a4:	lsl	x0, x20, #5
   198a8:	add	x0, x19, x0
   198ac:	stp	xzr, x1, [x0, #80]
   198b0:	mov	x0, #0x1                   	// #1
   198b4:	mov	x1, x28
   198b8:	stp	x0, xzr, [x28, #32]
   198bc:	ldr	x0, [x19]
   198c0:	add	x0, x0, #0x1
   198c4:	str	x0, [x19]
   198c8:	ldr	x0, [x29, #216]
   198cc:	stp	xzr, xzr, [x28, #56]
   198d0:	bl	1b958 <omp_pause_resource_all@@OMP_5.0+0x1f8>
   198d4:	ldr	w4, [x29, #144]
   198d8:	cmp	w4, #0x13
   198dc:	b.le	19958 <omp_get_place_proc_ids@@OMP_4.5+0x21e0>
   198e0:	sub	w4, w4, #0x80
   198e4:	cmp	w4, #0x3
   198e8:	b.ls	19940 <omp_get_place_proc_ids@@OMP_4.5+0x21c8>  // b.plast
   198ec:	ldr	x0, [x29, #208]
   198f0:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   198f4:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   198f8:	add	x1, x1, #0xdf8
   198fc:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19900:	mov	w2, w26
   19904:	add	x1, x1, #0xe
   19908:	add	x0, x0, #0xd67
   1990c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   19910:	ldrb	w0, [x29, #172]
   19914:	asr	w3, w26, w0
   19918:	mov	x0, #0x1                   	// #1
   1991c:	lsl	x3, x0, x3
   19920:	ldr	x0, [x29, #144]
   19924:	add	x0, x0, x3
   19928:	neg	x3, x3
   1992c:	and	x3, x0, x3
   19930:	str	x3, [x28, #24]
   19934:	add	x0, x1, x3
   19938:	str	x0, [x29, #184]
   1993c:	b	19880 <omp_get_place_proc_ids@@OMP_4.5+0x2108>
   19940:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19944:	add	x0, x0, #0xde0
   19948:	ldrb	w0, [x0, w4, uxtw]
   1994c:	adr	x1, 19958 <omp_get_place_proc_ids@@OMP_4.5+0x21e0>
   19950:	add	x0, x1, w0, sxtb #2
   19954:	br	x0
   19958:	b.hi	198ec <omp_get_place_proc_ids@@OMP_4.5+0x2174>  // b.pmore
   1995c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19960:	add	x0, x0, #0xde4
   19964:	ldrb	w0, [x0, w4, uxtw]
   19968:	adr	x1, 19974 <omp_get_place_proc_ids@@OMP_4.5+0x21fc>
   1996c:	add	x0, x1, w0, sxtb #2
   19970:	br	x0
   19974:	ldp	x2, x3, [x28]
   19978:	mov	x4, x22
   1997c:	ldr	x1, [x19, #16]
   19980:	ldr	x0, [x28, #24]
   19984:	sub	x3, x3, x2
   19988:	add	x1, x1, x0
   1998c:	mov	x0, x23
   19990:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   19994:	b	199b8 <omp_get_place_proc_ids@@OMP_4.5+0x2240>
   19998:	ldr	x0, [x28]
   1999c:	mov	x4, x22
   199a0:	ldr	x1, [x29, #232]
   199a4:	ldr	x2, [x28, #24]
   199a8:	ldr	x3, [x1, x24]
   199ac:	ldr	x1, [x0]
   199b0:	mov	x0, x19
   199b4:	bl	187c8 <omp_get_place_proc_ids@@OMP_4.5+0x1050>
   199b8:	ldr	x0, [x28, #48]
   199bc:	cbz	x0, 199e8 <omp_get_place_proc_ids@@OMP_4.5+0x2270>
   199c0:	ldr	x0, [x19, #16]
   199c4:	mov	x4, #0x0                   	// #0
   199c8:	ldr	x1, [x28, #24]
   199cc:	mov	x3, #0x8                   	// #8
   199d0:	ldr	x2, [x29, #120]
   199d4:	add	x0, x0, x1
   199d8:	ldr	x1, [x21, #24]
   199dc:	str	x0, [x29, #248]
   199e0:	mov	x0, x23
   199e4:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   199e8:	add	x28, x28, #0x48
   199ec:	b	19564 <omp_get_place_proc_ids@@OMP_4.5+0x1dec>
   199f0:	ldp	x2, x3, [x28]
   199f4:	mov	x4, x22
   199f8:	ldr	x1, [x19, #16]
   199fc:	ldr	x0, [x28, #24]
   19a00:	sub	x3, x3, x2
   19a04:	add	x1, x1, x0
   19a08:	mov	x0, x23
   19a0c:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   19a10:	ldr	x24, [x29, #136]
   19a14:	sub	x20, x24, #0x1
   19a18:	ldr	x0, [x29, #224]
   19a1c:	cmp	x24, x0
   19a20:	b.eq	199b8 <omp_get_place_proc_ids@@OMP_4.5+0x2240>  // b.none
   19a24:	ldrb	w0, [x29, #180]
   19a28:	mov	w2, w24
   19a2c:	ldr	x1, [x29, #192]
   19a30:	bl	17a44 <omp_get_place_proc_ids@@OMP_4.5+0x2cc>
   19a34:	ldr	w1, [x29, #176]
   19a38:	and	w0, w0, w1
   19a3c:	cmp	w0, #0x4
   19a40:	b.ne	199b8 <omp_get_place_proc_ids@@OMP_4.5+0x2240>  // b.any
   19a44:	ldr	x0, [x27, x24, lsl #3]
   19a48:	ldr	x3, [x28]
   19a4c:	cmp	x0, x3
   19a50:	b.cc	199b8 <omp_get_place_proc_ids@@OMP_4.5+0x2240>  // b.lo, b.ul, b.last
   19a54:	ldr	x2, [x28, #8]
   19a58:	add	x1, x0, #0x8
   19a5c:	cmp	x1, x2
   19a60:	b.hi	199b8 <omp_get_place_proc_ids@@OMP_4.5+0x2240>  // b.pmore
   19a64:	ldr	x1, [x28, #32]
   19a68:	str	x28, [x25, #96]
   19a6c:	strb	wzr, [x25, #104]
   19a70:	strb	wzr, [x25, #105]
   19a74:	cmn	x1, #0x1
   19a78:	b.eq	19a84 <omp_get_place_proc_ids@@OMP_4.5+0x230c>  // b.none
   19a7c:	add	x1, x1, #0x1
   19a80:	str	x1, [x28, #32]
   19a84:	ldr	x1, [x29, #232]
   19a88:	mov	x4, x22
   19a8c:	ldr	x2, [x28, #24]
   19a90:	add	x25, x25, #0x20
   19a94:	sub	x2, x2, x3
   19a98:	ldr	x3, [x1, x24, lsl #3]
   19a9c:	add	x2, x0, x2
   19aa0:	ldr	x1, [x0]
   19aa4:	add	x24, x24, #0x1
   19aa8:	mov	x0, x19
   19aac:	bl	187c8 <omp_get_place_proc_ids@@OMP_4.5+0x1050>
   19ab0:	b	19a14 <omp_get_place_proc_ids@@OMP_4.5+0x229c>
   19ab4:	ldp	x3, x19, [x28]
   19ab8:	ldr	x0, [x29, #208]
   19abc:	sub	x19, x19, x3
   19ac0:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   19ac4:	ldr	x1, [x28]
   19ac8:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19acc:	mov	x3, x19
   19ad0:	mov	x2, x19
   19ad4:	add	x0, x0, #0xcec
   19ad8:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   19adc:	ldp	x2, x3, [x28]
   19ae0:	sub	x3, x3, x2
   19ae4:	cmp	x3, #0x8
   19ae8:	b.eq	19b0c <omp_get_place_proc_ids@@OMP_4.5+0x2394>  // b.none
   19aec:	adrp	x3, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19af0:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19af4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19af8:	add	x3, x3, #0xdf8
   19afc:	add	x1, x1, #0xd1e
   19b00:	add	x0, x0, #0xd38
   19b04:	mov	w2, #0x3b4                 	// #948
   19b08:	bl	8b10 <__assert_fail@plt>
   19b0c:	mov	x4, x22
   19b10:	ldr	x1, [x19, #16]
   19b14:	ldr	x0, [x28, #24]
   19b18:	b	19988 <omp_get_place_proc_ids@@OMP_4.5+0x2210>
   19b1c:	cbz	x22, 19b3c <omp_get_place_proc_ids@@OMP_4.5+0x23c4>
   19b20:	mov	x20, #0x0                   	// #0
   19b24:	ldr	x1, [x29, #280]
   19b28:	ldr	x0, [x29, #256]
   19b2c:	cmp	x1, x20
   19b30:	b.gt	19b68 <omp_get_place_proc_ids@@OMP_4.5+0x23f0>
   19b34:	bl	8950 <free@plt>
   19b38:	str	xzr, [x29, #256]
   19b3c:	ldr	w0, [x29, #168]
   19b40:	cmp	w0, #0x3
   19b44:	b.ne	19b5c <omp_get_place_proc_ids@@OMP_4.5+0x23e4>  // b.any
   19b48:	ldr	x0, [x19]
   19b4c:	cbnz	x0, 19b5c <omp_get_place_proc_ids@@OMP_4.5+0x23e4>
   19b50:	mov	x0, x19
   19b54:	mov	x19, #0x0                   	// #0
   19b58:	bl	8950 <free@plt>
   19b5c:	ldr	x0, [x29, #208]
   19b60:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   19b64:	b	18de8 <omp_get_place_proc_ids@@OMP_4.5+0x1670>
   19b68:	ldr	x4, [x29, #272]
   19b6c:	lsl	x1, x20, #4
   19b70:	ldr	x5, [x19, #16]
   19b74:	add	x2, x4, x20, lsl #4
   19b78:	add	x20, x20, #0x1
   19b7c:	ldr	x1, [x4, x1]
   19b80:	ldr	x3, [x2, #8]
   19b84:	ldr	x2, [x4]
   19b88:	sub	x3, x3, x1
   19b8c:	mov	x4, #0x0                   	// #0
   19b90:	sub	x2, x1, x2
   19b94:	add	x1, x1, x5
   19b98:	add	x2, x0, x2
   19b9c:	mov	x0, x23
   19ba0:	bl	182d4 <omp_get_place_proc_ids@@OMP_4.5+0xb5c>
   19ba4:	b	19b24 <omp_get_place_proc_ids@@OMP_4.5+0x23ac>
   19ba8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   19bac:	ldr	x0, [x0, #4016]
   19bb0:	mrs	x1, tpidr_el0
   19bb4:	stp	x29, x30, [sp, #-32]!
   19bb8:	add	x0, x1, x0
   19bbc:	mov	x29, sp
   19bc0:	ldr	x0, [x0, #80]
   19bc4:	str	x19, [sp, #16]
   19bc8:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   19bcc:	add	x19, x19, #0x2c0
   19bd0:	add	x1, x0, #0x90
   19bd4:	cmp	x0, #0x0
   19bd8:	csel	x19, x19, x1, eq  // eq = none
   19bdc:	ldr	x0, [x19, #32]
   19be0:	cbz	x0, 19c14 <omp_get_place_proc_ids@@OMP_4.5+0x249c>
   19be4:	mov	x1, #0x0                   	// #0
   19be8:	mov	w7, #0x2                   	// #2
   19bec:	mov	w6, #0x0                   	// #0
   19bf0:	mov	x5, #0x0                   	// #0
   19bf4:	mov	x4, #0x0                   	// #0
   19bf8:	mov	x3, #0x0                   	// #0
   19bfc:	mov	x2, #0x0                   	// #0
   19c00:	mov	x0, #0x0                   	// #0
   19c04:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   19c08:	ldr	x1, [x19, #32]
   19c0c:	str	x1, [x0, #40]
   19c10:	str	x0, [x19, #32]
   19c14:	ldr	x19, [sp, #16]
   19c18:	ldp	x29, x30, [sp], #32
   19c1c:	ret
   19c20:	stp	x29, x30, [sp, #-32]!
   19c24:	mov	x29, sp
   19c28:	stp	x19, x20, [sp, #16]
   19c2c:	mov	x19, x1
   19c30:	add	x20, x0, #0xa0
   19c34:	mov	x0, x20
   19c38:	bl	1b9d0 <omp_pause_resource_all@@OMP_5.0+0x270>
   19c3c:	ldr	x1, [x19, #48]
   19c40:	cbz	x1, 19c4c <omp_get_place_proc_ids@@OMP_4.5+0x24d4>
   19c44:	mov	x0, x20
   19c48:	bl	1b958 <omp_pause_resource_all@@OMP_5.0+0x1f8>
   19c4c:	ldr	x0, [x19, #16]
   19c50:	ldr	x1, [x0]
   19c54:	cmp	x1, #0x1
   19c58:	b.ls	19c74 <omp_get_place_proc_ids@@OMP_4.5+0x24fc>  // b.plast
   19c5c:	sub	x1, x1, #0x1
   19c60:	str	x1, [x0]
   19c64:	mov	w0, #0x0                   	// #0
   19c68:	ldp	x19, x20, [sp, #16]
   19c6c:	ldp	x29, x30, [sp], #32
   19c70:	ret
   19c74:	bl	18704 <omp_get_place_proc_ids@@OMP_4.5+0xf8c>
   19c78:	mov	w0, #0x1                   	// #1
   19c7c:	b	19c68 <omp_get_place_proc_ids@@OMP_4.5+0x24f0>
   19c80:	stp	x29, x30, [sp, #-160]!
   19c84:	mov	x29, sp
   19c88:	stp	x19, x20, [sp, #16]
   19c8c:	mov	x19, x0
   19c90:	ldp	x20, x4, [x2, #16]
   19c94:	stp	x21, x22, [sp, #32]
   19c98:	ldp	x21, x0, [x2]
   19c9c:	stp	x25, x26, [sp, #64]
   19ca0:	mov	w25, w1
   19ca4:	sub	x4, x4, x20
   19ca8:	mov	x1, #0x2                   	// #2
   19cac:	stp	x23, x24, [sp, #48]
   19cb0:	mov	x26, x3
   19cb4:	asr	x4, x4, #3
   19cb8:	sub	x0, x0, x21
   19cbc:	str	x27, [sp, #80]
   19cc0:	sdiv	x4, x4, x1
   19cc4:	asr	x0, x0, #3
   19cc8:	mov	w22, w0
   19ccc:	mov	w24, w4
   19cd0:	orr	w4, w4, w0
   19cd4:	cbz	w4, 19d8c <omp_get_place_proc_ids@@OMP_4.5+0x2614>
   19cd8:	cbz	w0, 19d84 <omp_get_place_proc_ids@@OMP_4.5+0x260c>
   19cdc:	ldr	x0, [x21]
   19ce0:	str	x0, [sp, #104]
   19ce4:	add	x0, x0, #0x1
   19ce8:	add	x1, sp, #0x68
   19cec:	str	x0, [sp, #112]
   19cf0:	add	x0, x19, #0xa0
   19cf4:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   19cf8:	mov	x23, x0
   19cfc:	ldr	w0, [x19, #12]
   19d00:	mov	w1, w25
   19d04:	ldr	x3, [x19, #88]
   19d08:	mov	x2, x26
   19d0c:	mov	x25, #0x0                   	// #0
   19d10:	blr	x3
   19d14:	tst	w0, #0xff
   19d18:	b.eq	19d94 <omp_get_place_proc_ids@@OMP_4.5+0x261c>  // b.none
   19d1c:	add	x26, sp, #0x68
   19d20:	add	x27, x19, #0xa0
   19d24:	cmp	w22, w25
   19d28:	b.gt	19da8 <omp_get_place_proc_ids@@OMP_4.5+0x2630>
   19d2c:	add	x25, x19, #0xa0
   19d30:	add	x26, sp, #0x68
   19d34:	mov	w21, #0x0                   	// #0
   19d38:	mov	w22, #0x0                   	// #0
   19d3c:	cmp	w22, w24
   19d40:	b.lt	19dcc <omp_get_place_proc_ids@@OMP_4.5+0x2654>  // b.tstop
   19d44:	cmp	x23, #0x0
   19d48:	eor	w21, w21, #0x1
   19d4c:	cset	w0, ne  // ne = any
   19d50:	tst	w0, w21
   19d54:	b.eq	19d68 <omp_get_place_proc_ids@@OMP_4.5+0x25f0>  // b.none
   19d58:	ldr	x0, [x23, #16]
   19d5c:	bl	8950 <free@plt>
   19d60:	mov	x0, x23
   19d64:	bl	8950 <free@plt>
   19d68:	ldp	x19, x20, [sp, #16]
   19d6c:	ldp	x21, x22, [sp, #32]
   19d70:	ldp	x23, x24, [sp, #48]
   19d74:	ldp	x25, x26, [sp, #64]
   19d78:	ldr	x27, [sp, #80]
   19d7c:	ldp	x29, x30, [sp], #160
   19d80:	ret
   19d84:	ldr	x0, [x20]
   19d88:	b	19ce0 <omp_get_place_proc_ids@@OMP_4.5+0x2568>
   19d8c:	mov	x23, #0x0                   	// #0
   19d90:	b	19cfc <omp_get_place_proc_ids@@OMP_4.5+0x2584>
   19d94:	add	x0, x19, #0xa8
   19d98:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   19d9c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19da0:	add	x0, x0, #0xd81
   19da4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   19da8:	ldr	x2, [x21, x25, lsl #3]
   19dac:	str	x2, [sp, #104]
   19db0:	mov	x1, x26
   19db4:	mov	x0, x27
   19db8:	add	x2, x2, #0x1
   19dbc:	add	x25, x25, #0x1
   19dc0:	str	x2, [sp, #112]
   19dc4:	bl	1b9d0 <omp_pause_resource_all@@OMP_5.0+0x270>
   19dc8:	b	19d24 <omp_get_place_proc_ids@@OMP_4.5+0x25ac>
   19dcc:	ldp	x2, x1, [x20]
   19dd0:	and	x0, x1, #0x7fffffffffffffff
   19dd4:	add	x0, x0, x2
   19dd8:	stp	x2, x0, [sp, #104]
   19ddc:	tbnz	x1, #63, 19df8 <omp_get_place_proc_ids@@OMP_4.5+0x2680>
   19de0:	mov	x1, x26
   19de4:	mov	x0, x25
   19de8:	bl	1b9d0 <omp_pause_resource_all@@OMP_5.0+0x270>
   19dec:	add	w22, w22, #0x1
   19df0:	add	x20, x20, #0x10
   19df4:	b	19d3c <omp_get_place_proc_ids@@OMP_4.5+0x25c4>
   19df8:	mov	x1, x26
   19dfc:	mov	x0, x25
   19e00:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   19e04:	mov	x1, x0
   19e08:	mov	x0, x19
   19e0c:	bl	19c20 <omp_get_place_proc_ids@@OMP_4.5+0x24a8>
   19e10:	and	w21, w0, #0xff
   19e14:	b	19dec <omp_get_place_proc_ids@@OMP_4.5+0x2674>
   19e18:	stp	x29, x30, [sp, #-80]!
   19e1c:	mov	x29, sp
   19e20:	stp	x25, x26, [sp, #64]
   19e24:	and	w26, w1, #0xff
   19e28:	ldr	x1, [x0, #48]
   19e2c:	stp	x19, x20, [sp, #16]
   19e30:	stp	x21, x22, [sp, #32]
   19e34:	stp	x23, x24, [sp, #48]
   19e38:	cbnz	x1, 19e54 <omp_get_place_proc_ids@@OMP_4.5+0x26dc>
   19e3c:	ldp	x19, x20, [sp, #16]
   19e40:	ldp	x21, x22, [sp, #32]
   19e44:	ldp	x23, x24, [sp, #48]
   19e48:	ldp	x25, x26, [sp, #64]
   19e4c:	ldp	x29, x30, [sp], #80
   19e50:	b	8950 <free@plt>
   19e54:	ldr	x23, [x0, #56]
   19e58:	mov	x19, x0
   19e5c:	add	x24, x23, #0xa8
   19e60:	mov	x0, x24
   19e64:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   19e68:	ldr	w0, [x23, #172]
   19e6c:	cmp	w0, #0x2
   19e70:	b.eq	19eb8 <omp_get_place_proc_ids@@OMP_4.5+0x2740>  // b.none
   19e74:	add	x22, x19, #0x40
   19e78:	mov	x25, #0x0                   	// #0
   19e7c:	ldr	x0, [x19, #48]
   19e80:	cmp	x0, x25
   19e84:	b.hi	19ed0 <omp_get_place_proc_ids@@OMP_4.5+0x2758>  // b.pmore
   19e88:	ldr	x0, [x19]
   19e8c:	cmp	x0, #0x1
   19e90:	b.ls	19f60 <omp_get_place_proc_ids@@OMP_4.5+0x27e8>  // b.plast
   19e94:	sub	x0, x0, #0x1
   19e98:	str	x0, [x19]
   19e9c:	mov	x0, x24
   19ea0:	ldp	x19, x20, [sp, #16]
   19ea4:	ldp	x21, x22, [sp, #32]
   19ea8:	ldp	x23, x24, [sp, #48]
   19eac:	ldp	x25, x26, [sp, #64]
   19eb0:	ldp	x29, x30, [sp], #80
   19eb4:	b	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   19eb8:	mov	x0, x24
   19ebc:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   19ec0:	ldr	x0, [x19, #8]
   19ec4:	bl	8950 <free@plt>
   19ec8:	mov	x0, x19
   19ecc:	b	19e3c <omp_get_place_proc_ids@@OMP_4.5+0x26c4>
   19ed0:	ldr	x21, [x22]
   19ed4:	cbz	x21, 19f54 <omp_get_place_proc_ids@@OMP_4.5+0x27dc>
   19ed8:	ldr	x20, [x21, #32]
   19edc:	sub	x0, x20, #0x2
   19ee0:	cmn	x0, #0x4
   19ee4:	b.hi	19ef8 <omp_get_place_proc_ids@@OMP_4.5+0x2780>  // b.pmore
   19ee8:	sub	x20, x20, #0x1
   19eec:	str	x20, [x21, #32]
   19ef0:	mov	w20, #0x0                   	// #0
   19ef4:	b	19f04 <omp_get_place_proc_ids@@OMP_4.5+0x278c>
   19ef8:	cmp	x20, #0x1
   19efc:	b.ne	19ef0 <omp_get_place_proc_ids@@OMP_4.5+0x2778>  // b.any
   19f00:	str	xzr, [x21, #32]
   19f04:	cmp	w20, #0x0
   19f08:	ccmp	w26, #0x0, #0x4, ne  // ne = any
   19f0c:	b.eq	19f18 <omp_get_place_proc_ids@@OMP_4.5+0x27a0>  // b.none
   19f10:	ldrb	w0, [x22, #8]
   19f14:	cbnz	w0, 19f20 <omp_get_place_proc_ids@@OMP_4.5+0x27a8>
   19f18:	ldrb	w0, [x22, #9]
   19f1c:	cbz	w0, 19f44 <omp_get_place_proc_ids@@OMP_4.5+0x27cc>
   19f20:	ldp	x2, x0, [x21, #16]
   19f24:	ldp	x1, x3, [x22, #16]
   19f28:	ldr	x4, [x21]
   19f2c:	ldr	x2, [x2, #16]
   19f30:	add	x0, x1, x0
   19f34:	add	x1, x1, x4
   19f38:	add	x2, x0, x2
   19f3c:	mov	x0, x23
   19f40:	bl	18918 <omp_get_place_proc_ids@@OMP_4.5+0x11a0>
   19f44:	cbz	w20, 19f54 <omp_get_place_proc_ids@@OMP_4.5+0x27dc>
   19f48:	mov	x1, x21
   19f4c:	mov	x0, x23
   19f50:	bl	19c20 <omp_get_place_proc_ids@@OMP_4.5+0x24a8>
   19f54:	add	x25, x25, #0x1
   19f58:	add	x22, x22, #0x20
   19f5c:	b	19e7c <omp_get_place_proc_ids@@OMP_4.5+0x2704>
   19f60:	mov	x0, x19
   19f64:	bl	18704 <omp_get_place_proc_ids@@OMP_4.5+0xf8c>
   19f68:	b	19e9c <omp_get_place_proc_ids@@OMP_4.5+0x2724>

0000000000019f6c <GOMP_offload_register_ver@@GOMP_4.5>:
   19f6c:	stp	x29, x30, [sp, #-96]!
   19f70:	mov	x29, sp
   19f74:	stp	x19, x20, [sp, #16]
   19f78:	stp	x21, x22, [sp, #32]
   19f7c:	stp	x23, x24, [sp, #48]
   19f80:	mov	w24, w2
   19f84:	lsr	w2, w0, #16
   19f88:	stp	x25, x26, [sp, #64]
   19f8c:	cmp	w2, #0x1
   19f90:	str	x27, [sp, #80]
   19f94:	b.ls	19fa8 <GOMP_offload_register_ver@@GOMP_4.5+0x3c>  // b.plast
   19f98:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   19f9c:	mov	w1, #0x1                   	// #1
   19fa0:	add	x0, x0, #0xd93
   19fa4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   19fa8:	mov	x25, #0x0                   	// #0
   19fac:	mov	x27, #0x130                 	// #304
   19fb0:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   19fb4:	add	x19, x19, #0x570
   19fb8:	mov	w21, w0
   19fbc:	mov	x23, x1
   19fc0:	mov	x22, x3
   19fc4:	add	x0, x19, #0x10
   19fc8:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   19fcc:	ldr	w0, [x19]
   19fd0:	cmp	w0, w25
   19fd4:	b.gt	1a014 <GOMP_offload_register_ver@@GOMP_4.5+0xa8>
   19fd8:	ldr	w25, [x19, #24]
   19fdc:	mov	w20, #0x18                  	// #24
   19fe0:	ldr	x0, [x19, #32]
   19fe4:	add	w25, w25, #0x1
   19fe8:	smull	x20, w25, w20
   19fec:	mov	x1, x20
   19ff0:	bl	8850 <realloc@plt>
   19ff4:	mov	x1, x0
   19ff8:	add	x0, x19, #0x10
   19ffc:	cbnz	x1, 1a064 <GOMP_offload_register_ver@@GOMP_4.5+0xf8>
   1a000:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1a004:	adrp	x0, 1f000 <acc_set_cuda_stream@@OACC_2.0+0x220>
   1a008:	mov	x1, x20
   1a00c:	add	x0, x0, #0xe88
   1a010:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1a014:	ldr	x20, [x19, #8]
   1a018:	madd	x20, x25, x27, x20
   1a01c:	add	x26, x20, #0xa8
   1a020:	mov	x0, x26
   1a024:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1a028:	ldr	w0, [x20, #16]
   1a02c:	cmp	w0, w24
   1a030:	b.ne	1a054 <GOMP_offload_register_ver@@GOMP_4.5+0xe8>  // b.any
   1a034:	ldr	w4, [x20, #172]
   1a038:	cmp	w4, #0x1
   1a03c:	b.ne	1a054 <GOMP_offload_register_ver@@GOMP_4.5+0xe8>  // b.any
   1a040:	mov	x3, x22
   1a044:	mov	x2, x23
   1a048:	mov	w1, w21
   1a04c:	mov	x0, x20
   1a050:	bl	17e14 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   1a054:	mov	x0, x26
   1a058:	add	x25, x25, #0x1
   1a05c:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1a060:	b	19fcc <GOMP_offload_register_ver@@GOMP_4.5+0x60>
   1a064:	sub	x20, x20, #0x18
   1a068:	str	w25, [x19, #24]
   1a06c:	add	x2, x1, x20
   1a070:	str	x1, [x19, #32]
   1a074:	ldr	x27, [sp, #80]
   1a078:	str	w21, [x1, x20]
   1a07c:	str	w24, [x2, #4]
   1a080:	stp	x23, x22, [x2, #8]
   1a084:	ldp	x19, x20, [sp, #16]
   1a088:	ldp	x21, x22, [sp, #32]
   1a08c:	ldp	x23, x24, [sp, #48]
   1a090:	ldp	x25, x26, [sp, #64]
   1a094:	ldp	x29, x30, [sp], #96
   1a098:	b	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>

000000000001a09c <GOMP_offload_register@@GOMP_4.0.1>:
   1a09c:	mov	x3, x2
   1a0a0:	mov	w2, w1
   1a0a4:	mov	x1, x0
   1a0a8:	mov	w0, #0x0                   	// #0
   1a0ac:	b	8a70 <GOMP_offload_register_ver@plt>

000000000001a0b0 <GOMP_offload_unregister_ver@@GOMP_4.5>:
   1a0b0:	stp	x29, x30, [sp, #-96]!
   1a0b4:	mov	x29, sp
   1a0b8:	stp	x23, x24, [sp, #48]
   1a0bc:	mov	x23, #0x0                   	// #0
   1a0c0:	mov	w24, w0
   1a0c4:	stp	x27, x28, [sp, #80]
   1a0c8:	mov	x27, #0x130                 	// #304
   1a0cc:	stp	x19, x20, [sp, #16]
   1a0d0:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a0d4:	add	x20, x19, #0x570
   1a0d8:	add	x0, x20, #0x10
   1a0dc:	stp	x21, x22, [sp, #32]
   1a0e0:	mov	x22, x3
   1a0e4:	stp	x25, x26, [sp, #64]
   1a0e8:	mov	x25, x1
   1a0ec:	mov	w26, w2
   1a0f0:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1a0f4:	ldr	w0, [x20]
   1a0f8:	cmp	w0, w23
   1a0fc:	b.gt	1a174 <GOMP_offload_unregister_ver@@GOMP_4.5+0xc4>
   1a100:	ldr	x3, [x20, #32]
   1a104:	mov	w2, #0x0                   	// #0
   1a108:	ldr	w1, [x20, #24]
   1a10c:	mov	x0, x3
   1a110:	cmp	w1, w2
   1a114:	b.le	1a150 <GOMP_offload_unregister_ver@@GOMP_4.5+0xa0>
   1a118:	mov	x4, x0
   1a11c:	add	x0, x0, #0x18
   1a120:	ldur	x5, [x0, #-8]
   1a124:	cmp	x5, x22
   1a128:	b.ne	1a1c4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x114>  // b.any
   1a12c:	add	x0, x19, #0x570
   1a130:	sub	w1, w1, #0x1
   1a134:	str	w1, [x0, #24]
   1a138:	mov	w0, #0x18                  	// #24
   1a13c:	smaddl	x1, w1, w0, x3
   1a140:	ldp	x2, x3, [x1]
   1a144:	stp	x2, x3, [x4]
   1a148:	ldr	x0, [x1, #16]
   1a14c:	str	x0, [x4, #16]
   1a150:	add	x0, x19, #0x570
   1a154:	ldp	x19, x20, [sp, #16]
   1a158:	add	x0, x0, #0x10
   1a15c:	ldp	x21, x22, [sp, #32]
   1a160:	ldp	x23, x24, [sp, #48]
   1a164:	ldp	x25, x26, [sp, #64]
   1a168:	ldp	x27, x28, [sp, #80]
   1a16c:	ldp	x29, x30, [sp], #96
   1a170:	b	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1a174:	ldr	x21, [x20, #8]
   1a178:	madd	x21, x23, x27, x21
   1a17c:	add	x28, x21, #0xa8
   1a180:	mov	x0, x28
   1a184:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1a188:	ldr	w0, [x21, #16]
   1a18c:	cmp	w0, w26
   1a190:	b.ne	1a1b4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x104>  // b.any
   1a194:	ldr	w0, [x21, #172]
   1a198:	cmp	w0, #0x1
   1a19c:	b.ne	1a1b4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x104>  // b.any
   1a1a0:	mov	x3, x22
   1a1a4:	mov	x2, x25
   1a1a8:	mov	w1, w24
   1a1ac:	mov	x0, x21
   1a1b0:	bl	19c80 <omp_get_place_proc_ids@@OMP_4.5+0x2508>
   1a1b4:	mov	x0, x28
   1a1b8:	add	x23, x23, #0x1
   1a1bc:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1a1c0:	b	1a0f4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x44>
   1a1c4:	add	w2, w2, #0x1
   1a1c8:	b	1a110 <GOMP_offload_unregister_ver@@GOMP_4.5+0x60>

000000000001a1cc <GOMP_offload_unregister@@GOMP_4.0.1>:
   1a1cc:	mov	x3, x2
   1a1d0:	mov	w2, w1
   1a1d4:	mov	x1, x0
   1a1d8:	mov	w0, #0x0                   	// #0
   1a1dc:	b	8970 <GOMP_offload_unregister_ver@plt>
   1a1e0:	stp	x29, x30, [sp, #-48]!
   1a1e4:	mov	x29, sp
   1a1e8:	stp	x19, x20, [sp, #16]
   1a1ec:	mov	x19, x0
   1a1f0:	ldr	x1, [x0, #56]
   1a1f4:	stp	x21, x22, [sp, #32]
   1a1f8:	ldr	w0, [x0, #12]
   1a1fc:	blr	x1
   1a200:	tst	w0, #0xff
   1a204:	b.eq	1a23c <GOMP_offload_unregister@@GOMP_4.0.1+0x70>  // b.none
   1a208:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a20c:	add	x21, x21, #0x570
   1a210:	mov	x20, #0x0                   	// #0
   1a214:	mov	x22, #0x18                  	// #24
   1a218:	ldr	w0, [x21, #24]
   1a21c:	cmp	w0, w20
   1a220:	b.gt	1a250 <GOMP_offload_unregister@@GOMP_4.0.1+0x84>
   1a224:	mov	w0, #0x1                   	// #1
   1a228:	ldp	x21, x22, [sp, #32]
   1a22c:	str	w0, [x19, #172]
   1a230:	ldp	x19, x20, [sp, #16]
   1a234:	ldp	x29, x30, [sp], #48
   1a238:	ret
   1a23c:	add	x0, x19, #0xa8
   1a240:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1a244:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1a248:	add	x0, x0, #0xdc1
   1a24c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1a250:	ldr	x5, [x21, #32]
   1a254:	mul	x1, x20, x22
   1a258:	ldr	w2, [x19, #16]
   1a25c:	add	x0, x5, x1
   1a260:	ldr	w3, [x0, #4]
   1a264:	cmp	w3, w2
   1a268:	b.ne	1a280 <GOMP_offload_unregister@@GOMP_4.0.1+0xb4>  // b.any
   1a26c:	ldp	x2, x3, [x0, #8]
   1a270:	mov	w4, #0x0                   	// #0
   1a274:	ldr	w1, [x5, x1]
   1a278:	mov	x0, x19
   1a27c:	bl	17e14 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   1a280:	add	x20, x20, #0x1
   1a284:	b	1a218 <GOMP_offload_unregister@@GOMP_4.0.1+0x4c>
   1a288:	stp	x29, x30, [sp, #-48]!
   1a28c:	cmn	w0, #0x1
   1a290:	mov	x29, sp
   1a294:	stp	x19, x20, [sp, #16]
   1a298:	str	x21, [sp, #32]
   1a29c:	b.ne	1a2e4 <GOMP_offload_unregister@@GOMP_4.0.1+0x118>  // b.any
   1a2a0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1a2a4:	ldr	x0, [x0, #4016]
   1a2a8:	mrs	x1, tpidr_el0
   1a2ac:	add	x0, x1, x0
   1a2b0:	ldr	x1, [x0, #80]
   1a2b4:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a2b8:	add	x0, x0, #0x2c0
   1a2bc:	add	x2, x1, #0x90
   1a2c0:	cmp	x1, #0x0
   1a2c4:	csel	x0, x0, x2, eq  // eq = none
   1a2c8:	ldr	w20, [x0, #16]
   1a2cc:	tbz	w20, #31, 1a2ec <GOMP_offload_unregister@@GOMP_4.0.1+0x120>
   1a2d0:	mov	x0, #0x0                   	// #0
   1a2d4:	ldp	x19, x20, [sp, #16]
   1a2d8:	ldr	x21, [sp, #32]
   1a2dc:	ldp	x29, x30, [sp], #48
   1a2e0:	ret
   1a2e4:	mov	w20, w0
   1a2e8:	b	1a2cc <GOMP_offload_unregister@@GOMP_4.0.1+0x100>
   1a2ec:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a2f0:	add	x21, x19, #0x570
   1a2f4:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1a2f8:	ldr	w0, [x21, #4]
   1a2fc:	cmp	w20, w0
   1a300:	b.ge	1a2d0 <GOMP_offload_unregister@@GOMP_4.0.1+0x104>  // b.tcont
   1a304:	mov	w0, #0x130                 	// #304
   1a308:	smull	x20, w20, w0
   1a30c:	ldr	x0, [x21, #8]
   1a310:	add	x0, x0, x20
   1a314:	add	x0, x0, #0xa8
   1a318:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1a31c:	ldr	x0, [x21, #8]
   1a320:	add	x0, x0, x20
   1a324:	ldr	w1, [x0, #172]
   1a328:	cbnz	w1, 1a350 <GOMP_offload_unregister@@GOMP_4.0.1+0x184>
   1a32c:	bl	1a1e0 <GOMP_offload_unregister@@GOMP_4.0.1+0x14>
   1a330:	add	x19, x19, #0x570
   1a334:	ldr	x0, [x19, #8]
   1a338:	add	x0, x0, x20
   1a33c:	add	x0, x0, #0xa8
   1a340:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1a344:	ldr	x0, [x19, #8]
   1a348:	add	x0, x0, x20
   1a34c:	b	1a2d4 <GOMP_offload_unregister@@GOMP_4.0.1+0x108>
   1a350:	cmp	w1, #0x2
   1a354:	b.ne	1a330 <GOMP_offload_unregister@@GOMP_4.0.1+0x164>  // b.any
   1a358:	add	x0, x0, #0xa8
   1a35c:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1a360:	b	1a2d0 <GOMP_offload_unregister@@GOMP_4.0.1+0x104>
   1a364:	stp	x29, x30, [sp, #-48]!
   1a368:	mov	x29, sp
   1a36c:	stp	x19, x20, [sp, #16]
   1a370:	mov	x19, x0
   1a374:	ldr	w0, [x0, #172]
   1a378:	stp	x21, x22, [sp, #32]
   1a37c:	cmp	w0, #0x1
   1a380:	b.ne	1a3d4 <GOMP_offload_unregister@@GOMP_4.0.1+0x208>  // b.any
   1a384:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a388:	mov	w20, #0x0                   	// #0
   1a38c:	add	x21, x21, #0x570
   1a390:	mov	w22, #0x18                  	// #24
   1a394:	b	1a3c8 <GOMP_offload_unregister@@GOMP_4.0.1+0x1fc>
   1a398:	ldr	x4, [x21, #32]
   1a39c:	umull	x1, w20, w22
   1a3a0:	ldr	w2, [x19, #16]
   1a3a4:	add	x0, x4, x1
   1a3a8:	ldr	w3, [x0, #4]
   1a3ac:	cmp	w3, w2
   1a3b0:	b.ne	1a3c4 <GOMP_offload_unregister@@GOMP_4.0.1+0x1f8>  // b.any
   1a3b4:	ldp	x2, x3, [x0, #8]
   1a3b8:	mov	x0, x19
   1a3bc:	ldr	w1, [x4, x1]
   1a3c0:	bl	19c80 <omp_get_place_proc_ids@@OMP_4.5+0x2508>
   1a3c4:	add	w20, w20, #0x1
   1a3c8:	ldr	w0, [x21, #24]
   1a3cc:	cmp	w0, w20
   1a3d0:	b.hi	1a398 <GOMP_offload_unregister@@GOMP_4.0.1+0x1cc>  // b.pmore
   1a3d4:	ldp	x19, x20, [sp, #16]
   1a3d8:	ldp	x21, x22, [sp, #32]
   1a3dc:	ldp	x29, x30, [sp], #48
   1a3e0:	ret
   1a3e4:	stp	x29, x30, [sp, #-32]!
   1a3e8:	mov	x29, sp
   1a3ec:	stp	x19, x20, [sp, #16]
   1a3f0:	mov	x19, x0
   1a3f4:	ldr	x1, [x19]
   1a3f8:	cbnz	x1, 1a408 <GOMP_offload_unregister@@GOMP_4.0.1+0x23c>
   1a3fc:	ldp	x19, x20, [sp, #16]
   1a400:	ldp	x29, x30, [sp], #32
   1a404:	ret
   1a408:	ldr	x20, [x1, #16]
   1a40c:	mov	x0, x19
   1a410:	bl	1b9d0 <omp_pause_resource_all@@OMP_5.0+0x270>
   1a414:	ldr	x0, [x20, #8]
   1a418:	bl	8950 <free@plt>
   1a41c:	mov	x0, x20
   1a420:	bl	8950 <free@plt>
   1a424:	b	1a3f4 <GOMP_offload_unregister@@GOMP_4.0.1+0x228>

000000000001a428 <GOMP_target@@GOMP_4.0>:
   1a428:	stp	x29, x30, [sp, #-80]!
   1a42c:	mov	x29, sp
   1a430:	stp	x19, x20, [sp, #16]
   1a434:	mov	x20, x4
   1a438:	stp	x21, x22, [sp, #32]
   1a43c:	mov	x22, x1
   1a440:	stp	x23, x24, [sp, #48]
   1a444:	mov	x23, x3
   1a448:	mov	x24, x5
   1a44c:	str	x25, [sp, #64]
   1a450:	mov	x25, x6
   1a454:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1a458:	cbnz	x0, 1a47c <GOMP_target@@GOMP_4.0+0x54>
   1a45c:	mov	x1, x20
   1a460:	mov	x0, x22
   1a464:	ldp	x19, x20, [sp, #16]
   1a468:	ldp	x21, x22, [sp, #32]
   1a46c:	ldp	x23, x24, [sp, #48]
   1a470:	ldr	x25, [sp, #64]
   1a474:	ldp	x29, x30, [sp], #80
   1a478:	b	1802c <omp_get_place_proc_ids@@OMP_4.5+0x8b4>
   1a47c:	ldr	w1, [x0, #8]
   1a480:	mov	w2, #0x5                   	// #5
   1a484:	mov	x19, x0
   1a488:	and	w1, w1, w2
   1a48c:	cmp	w1, #0x4
   1a490:	b.ne	1a45c <GOMP_target@@GOMP_4.0+0x34>  // b.any
   1a494:	mov	x1, x22
   1a498:	bl	18890 <omp_get_place_proc_ids@@OMP_4.5+0x1118>
   1a49c:	mov	x21, x0
   1a4a0:	cbz	x0, 1a45c <GOMP_target@@GOMP_4.0+0x34>
   1a4a4:	mov	x5, x25
   1a4a8:	mov	x4, x24
   1a4ac:	mov	x2, x20
   1a4b0:	mov	x1, x23
   1a4b4:	mov	w7, #0x1                   	// #1
   1a4b8:	mov	w6, #0x0                   	// #0
   1a4bc:	mov	x0, x19
   1a4c0:	mov	x3, #0x0                   	// #0
   1a4c4:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1a4c8:	mov	x20, x0
   1a4cc:	ldr	w0, [x19, #12]
   1a4d0:	mov	x1, x21
   1a4d4:	ldr	x4, [x19, #144]
   1a4d8:	mov	x3, #0x0                   	// #0
   1a4dc:	ldr	x2, [x20, #16]
   1a4e0:	blr	x4
   1a4e4:	mov	x0, x20
   1a4e8:	mov	w1, #0x1                   	// #1
   1a4ec:	ldp	x19, x20, [sp, #16]
   1a4f0:	ldp	x21, x22, [sp, #32]
   1a4f4:	ldp	x23, x24, [sp, #48]
   1a4f8:	ldr	x25, [sp, #64]
   1a4fc:	ldp	x29, x30, [sp], #80
   1a500:	b	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>

000000000001a504 <GOMP_target_ext@@GOMP_4.5>:
   1a504:	stp	x29, x30, [sp, #-144]!
   1a508:	mov	x29, sp
   1a50c:	stp	x19, x20, [sp, #16]
   1a510:	mov	x20, x2
   1a514:	stp	x21, x22, [sp, #32]
   1a518:	mov	x21, x3
   1a51c:	mov	x22, x4
   1a520:	stp	x23, x24, [sp, #48]
   1a524:	mov	x24, x1
   1a528:	mov	x23, x5
   1a52c:	stp	x25, x26, [sp, #64]
   1a530:	mov	x25, x7
   1a534:	stp	x27, x28, [sp, #80]
   1a538:	sub	sp, sp, #0x10
   1a53c:	str	w6, [x29, #120]
   1a540:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1a544:	mov	x19, x0
   1a548:	stp	xzr, xzr, [x29, #128]
   1a54c:	ldr	x0, [x29, #120]
   1a550:	tbz	w0, #0, 1a66c <GOMP_target_ext@@GOMP_4.5+0x168>
   1a554:	adrp	x26, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1a558:	ldr	x26, [x26, #4016]
   1a55c:	mrs	x28, tpidr_el0
   1a560:	add	x27, x28, x26
   1a564:	ldr	x0, [x27, #16]
   1a568:	cbz	x0, 1a5d0 <GOMP_target_ext@@GOMP_4.5+0xcc>
   1a56c:	add	x26, x28, x26
   1a570:	ldr	x0, [x26, #80]
   1a574:	ldrb	w0, [x0, #205]
   1a578:	cbnz	w0, 1a66c <GOMP_target_ext@@GOMP_4.5+0x168>
   1a57c:	mov	w0, #0x1                   	// #1
   1a580:	ldr	w6, [x29, #120]
   1a584:	str	w0, [sp, #8]
   1a588:	mov	x7, x25
   1a58c:	ldr	x0, [x29, #144]
   1a590:	str	x0, [sp]
   1a594:	mov	x5, x23
   1a598:	mov	x4, x22
   1a59c:	mov	x3, x21
   1a5a0:	mov	x2, x20
   1a5a4:	mov	x1, x24
   1a5a8:	mov	x0, x19
   1a5ac:	bl	10f50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c>
   1a5b0:	mov	sp, x29
   1a5b4:	ldp	x19, x20, [sp, #16]
   1a5b8:	ldp	x21, x22, [sp, #32]
   1a5bc:	ldp	x23, x24, [sp, #48]
   1a5c0:	ldp	x25, x26, [sp, #64]
   1a5c4:	ldp	x27, x28, [sp, #80]
   1a5c8:	ldp	x29, x30, [sp], #144
   1a5cc:	ret
   1a5d0:	mov	w0, #0x1                   	// #1
   1a5d4:	bl	13d34 <omp_in_final@@OMP_3.1+0x1bc>
   1a5d8:	ldp	x6, x7, [x27, #16]
   1a5dc:	add	x4, x0, #0x100
   1a5e0:	ldr	x5, [x27, #80]
   1a5e4:	stp	x6, x7, [x0, #8]
   1a5e8:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a5ec:	ldp	x6, x7, [x27, #32]
   1a5f0:	stp	x6, x7, [x0, #24]
   1a5f4:	cmp	x5, #0x0
   1a5f8:	ldp	x6, x7, [x27, #48]
   1a5fc:	stp	x6, x7, [x0, #40]
   1a600:	add	x2, x5, #0x90
   1a604:	ldp	x6, x7, [x27, #64]
   1a608:	stp	x0, x4, [x27, #16]
   1a60c:	add	x4, x0, #0x540
   1a610:	stp	x6, x7, [x0, #56]
   1a614:	add	x1, x1, #0x2c0
   1a618:	csel	x2, x1, x2, eq  // eq = none
   1a61c:	mov	x0, x4
   1a620:	mov	x1, #0x0                   	// #0
   1a624:	str	xzr, [x27, #32]
   1a628:	str	wzr, [x27, #40]
   1a62c:	stp	xzr, xzr, [x27, #64]
   1a630:	str	x4, [x27, #80]
   1a634:	stp	x4, x5, [x29, #104]
   1a638:	bl	10db0 <GOMP_single_copy_end@@GOMP_1.0+0x1328>
   1a63c:	ldr	x5, [x29, #112]
   1a640:	cbz	x5, 1a754 <GOMP_target_ext@@GOMP_4.5+0x250>
   1a644:	str	x5, [x27, #80]
   1a648:	bl	10dec <GOMP_single_copy_end@@GOMP_1.0+0x1364>
   1a64c:	ldr	x5, [x29, #112]
   1a650:	mov	x0, x5
   1a654:	bl	8950 <free@plt>
   1a658:	ldr	x4, [x29, #104]
   1a65c:	str	x4, [x27, #80]
   1a660:	add	x0, x28, x26
   1a664:	ldr	x0, [x0, #16]
   1a668:	cbnz	x0, 1a56c <GOMP_target_ext@@GOMP_4.5+0x68>
   1a66c:	cbz	x25, 1a850 <GOMP_target_ext@@GOMP_4.5+0x34c>
   1a670:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1a674:	ldr	x0, [x0, #4016]
   1a678:	mrs	x1, tpidr_el0
   1a67c:	add	x0, x1, x0
   1a680:	ldr	x0, [x0, #80]
   1a684:	cbz	x0, 1a850 <GOMP_target_ext@@GOMP_4.5+0x34c>
   1a688:	ldr	x0, [x0, #56]
   1a68c:	cbz	x0, 1a850 <GOMP_target_ext@@GOMP_4.5+0x34c>
   1a690:	add	x4, x29, #0x88
   1a694:	add	x3, x29, #0x80
   1a698:	mov	x2, x23
   1a69c:	mov	x1, x22
   1a6a0:	mov	x0, x20
   1a6a4:	bl	17a60 <omp_get_place_proc_ids@@OMP_4.5+0x2e8>
   1a6a8:	ldr	x5, [x29, #128]
   1a6ac:	cbz	x5, 1a6dc <GOMP_target_ext@@GOMP_4.5+0x1d8>
   1a6b0:	ldr	x0, [x29, #136]
   1a6b4:	mov	x4, x23
   1a6b8:	mov	x3, x22
   1a6bc:	mov	x2, x21
   1a6c0:	add	x0, x5, x0
   1a6c4:	mov	x1, x20
   1a6c8:	add	x0, x0, #0xe
   1a6cc:	and	x0, x0, #0xfffffffffffffff0
   1a6d0:	sub	sp, sp, x0
   1a6d4:	add	x0, sp, #0x10
   1a6d8:	bl	18214 <omp_get_place_proc_ids@@OMP_4.5+0xa9c>
   1a6dc:	mov	x0, x25
   1a6e0:	bl	119bc <GOMP_taskwait@@GOMP_2.0+0x28c>
   1a6e4:	cbz	x19, 1a744 <GOMP_target_ext@@GOMP_4.5+0x240>
   1a6e8:	mov	w26, #0x1                   	// #1
   1a6ec:	ldr	w0, [x19, #8]
   1a6f0:	tbnz	w0, #2, 1a768 <GOMP_target_ext@@GOMP_4.5+0x264>
   1a6f4:	cbnz	w26, 1a744 <GOMP_target_ext@@GOMP_4.5+0x240>
   1a6f8:	add	x4, x29, #0x88
   1a6fc:	add	x3, x29, #0x80
   1a700:	mov	x2, x23
   1a704:	mov	x1, x22
   1a708:	mov	x0, x20
   1a70c:	bl	17a60 <omp_get_place_proc_ids@@OMP_4.5+0x2e8>
   1a710:	ldr	x5, [x29, #128]
   1a714:	cbz	x5, 1a744 <GOMP_target_ext@@GOMP_4.5+0x240>
   1a718:	ldr	x0, [x29, #136]
   1a71c:	mov	x4, x23
   1a720:	mov	x3, x22
   1a724:	mov	x2, x21
   1a728:	add	x0, x5, x0
   1a72c:	mov	x1, x20
   1a730:	add	x0, x0, #0xe
   1a734:	and	x0, x0, #0xfffffffffffffff0
   1a738:	sub	sp, sp, x0
   1a73c:	add	x0, sp, #0x10
   1a740:	bl	18214 <omp_get_place_proc_ids@@OMP_4.5+0xa9c>
   1a744:	mov	x1, x21
   1a748:	mov	x0, x24
   1a74c:	bl	1802c <omp_get_place_proc_ids@@OMP_4.5+0x8b4>
   1a750:	b	1a5b0 <GOMP_target_ext@@GOMP_4.5+0xac>
   1a754:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a758:	mov	x1, x27
   1a75c:	ldr	w0, [x0, #1704]
   1a760:	bl	8a00 <pthread_setspecific@plt>
   1a764:	b	1a660 <GOMP_target_ext@@GOMP_4.5+0x15c>
   1a768:	mov	x1, x24
   1a76c:	mov	x0, x19
   1a770:	bl	18890 <omp_get_place_proc_ids@@OMP_4.5+0x1118>
   1a774:	mov	x25, x0
   1a778:	cbz	x0, 1a6f4 <GOMP_target_ext@@GOMP_4.5+0x1f0>
   1a77c:	ldr	x1, [x19, #136]
   1a780:	cbz	x1, 1a790 <GOMP_target_ext@@GOMP_4.5+0x28c>
   1a784:	blr	x1
   1a788:	tst	w0, #0xff
   1a78c:	b.eq	1a6f4 <GOMP_target_ext@@GOMP_4.5+0x1f0>  // b.none
   1a790:	ldr	w0, [x19, #8]
   1a794:	tbz	w0, #0, 1a824 <GOMP_target_ext@@GOMP_4.5+0x320>
   1a798:	cbz	w26, 1a7d4 <GOMP_target_ext@@GOMP_4.5+0x2d0>
   1a79c:	mov	x20, #0x0                   	// #0
   1a7a0:	ldr	w0, [x19, #12]
   1a7a4:	ldr	x4, [x19, #144]
   1a7a8:	cbz	x20, 1a7b0 <GOMP_target_ext@@GOMP_4.5+0x2ac>
   1a7ac:	ldr	x21, [x20, #16]
   1a7b0:	mov	x2, x21
   1a7b4:	ldr	x3, [x29, #144]
   1a7b8:	mov	x1, x25
   1a7bc:	blr	x4
   1a7c0:	cbz	x20, 1a5b0 <GOMP_target_ext@@GOMP_4.5+0xac>
   1a7c4:	mov	x0, x20
   1a7c8:	mov	w1, #0x1                   	// #1
   1a7cc:	bl	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1a7d0:	b	1a5b0 <GOMP_target_ext@@GOMP_4.5+0xac>
   1a7d4:	add	x4, x29, #0x88
   1a7d8:	add	x3, x29, #0x80
   1a7dc:	mov	x2, x23
   1a7e0:	mov	x1, x22
   1a7e4:	mov	x0, x20
   1a7e8:	bl	17a60 <omp_get_place_proc_ids@@OMP_4.5+0x2e8>
   1a7ec:	ldr	x5, [x29, #128]
   1a7f0:	cbz	x5, 1a79c <GOMP_target_ext@@GOMP_4.5+0x298>
   1a7f4:	ldr	x0, [x29, #136]
   1a7f8:	mov	x4, x23
   1a7fc:	mov	x3, x22
   1a800:	mov	x2, x21
   1a804:	add	x0, x5, x0
   1a808:	mov	x1, x20
   1a80c:	add	x0, x0, #0xe
   1a810:	and	x0, x0, #0xfffffffffffffff0
   1a814:	sub	sp, sp, x0
   1a818:	add	x0, sp, #0x10
   1a81c:	bl	18214 <omp_get_place_proc_ids@@OMP_4.5+0xa9c>
   1a820:	b	1a79c <GOMP_target_ext@@GOMP_4.5+0x298>
   1a824:	mov	x1, x20
   1a828:	mov	w7, #0x1                   	// #1
   1a82c:	mov	x5, x23
   1a830:	mov	w6, w7
   1a834:	mov	x4, x22
   1a838:	mov	x2, x21
   1a83c:	mov	x0, x19
   1a840:	mov	x3, #0x0                   	// #0
   1a844:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1a848:	mov	x20, x0
   1a84c:	b	1a7a0 <GOMP_target_ext@@GOMP_4.5+0x29c>
   1a850:	cbz	x19, 1a6f8 <GOMP_target_ext@@GOMP_4.5+0x1f4>
   1a854:	mov	w26, #0x0                   	// #0
   1a858:	b	1a6ec <GOMP_target_ext@@GOMP_4.5+0x1e8>

000000000001a85c <GOMP_target_data@@GOMP_4.0>:
   1a85c:	stp	x29, x30, [sp, #-48]!
   1a860:	mov	x29, sp
   1a864:	stp	x19, x20, [sp, #16]
   1a868:	mov	x19, x2
   1a86c:	mov	x20, x3
   1a870:	stp	x21, x22, [sp, #32]
   1a874:	mov	x21, x4
   1a878:	mov	x22, x5
   1a87c:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1a880:	cbz	x0, 1a898 <GOMP_target_data@@GOMP_4.0+0x3c>
   1a884:	ldr	w1, [x0, #8]
   1a888:	mov	w2, #0x5                   	// #5
   1a88c:	and	w1, w1, w2
   1a890:	cmp	w1, #0x4
   1a894:	b.eq	1a8a8 <GOMP_target_data@@GOMP_4.0+0x4c>  // b.none
   1a898:	ldp	x19, x20, [sp, #16]
   1a89c:	ldp	x21, x22, [sp, #32]
   1a8a0:	ldp	x29, x30, [sp], #48
   1a8a4:	b	19ba8 <omp_get_place_proc_ids@@OMP_4.5+0x2430>
   1a8a8:	mov	x1, x19
   1a8ac:	mov	x5, x22
   1a8b0:	mov	x4, x21
   1a8b4:	mov	x2, x20
   1a8b8:	mov	w7, #0x2                   	// #2
   1a8bc:	mov	w6, #0x0                   	// #0
   1a8c0:	mov	x3, #0x0                   	// #0
   1a8c4:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1a8c8:	mov	x19, x0
   1a8cc:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1a8d0:	ldr	x0, [x0, #4016]
   1a8d4:	mrs	x1, tpidr_el0
   1a8d8:	add	x0, x1, x0
   1a8dc:	ldr	x1, [x0, #80]
   1a8e0:	cbz	x1, 1a904 <GOMP_target_data@@GOMP_4.0+0xa8>
   1a8e4:	add	x0, x1, #0x90
   1a8e8:	ldr	x1, [x0, #32]
   1a8ec:	ldp	x21, x22, [sp, #32]
   1a8f0:	str	x1, [x19, #40]
   1a8f4:	str	x19, [x0, #32]
   1a8f8:	ldp	x19, x20, [sp, #16]
   1a8fc:	ldp	x29, x30, [sp], #48
   1a900:	ret
   1a904:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
   1a908:	b	1a8e8 <GOMP_target_data@@GOMP_4.0+0x8c>

000000000001a90c <GOMP_target_data_ext@@GOMP_4.5>:
   1a90c:	stp	x29, x30, [sp, #-48]!
   1a910:	mov	x29, sp
   1a914:	stp	x19, x20, [sp, #16]
   1a918:	mov	x19, x1
   1a91c:	mov	x20, x2
   1a920:	stp	x21, x22, [sp, #32]
   1a924:	mov	x21, x3
   1a928:	mov	x22, x4
   1a92c:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1a930:	cbz	x0, 1a948 <GOMP_target_data_ext@@GOMP_4.5+0x3c>
   1a934:	ldr	w1, [x0, #8]
   1a938:	mov	w2, #0x5                   	// #5
   1a93c:	and	w1, w1, w2
   1a940:	cmp	w1, #0x4
   1a944:	b.eq	1a958 <GOMP_target_data_ext@@GOMP_4.5+0x4c>  // b.none
   1a948:	ldp	x19, x20, [sp, #16]
   1a94c:	ldp	x21, x22, [sp, #32]
   1a950:	ldp	x29, x30, [sp], #48
   1a954:	b	19ba8 <omp_get_place_proc_ids@@OMP_4.5+0x2430>
   1a958:	mov	x1, x19
   1a95c:	mov	x5, x22
   1a960:	mov	x4, x21
   1a964:	mov	x2, x20
   1a968:	mov	w7, #0x2                   	// #2
   1a96c:	mov	w6, #0x1                   	// #1
   1a970:	mov	x3, #0x0                   	// #0
   1a974:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1a978:	mov	x19, x0
   1a97c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1a980:	ldr	x0, [x0, #4016]
   1a984:	mrs	x1, tpidr_el0
   1a988:	add	x0, x1, x0
   1a98c:	ldr	x1, [x0, #80]
   1a990:	cbz	x1, 1a9b4 <GOMP_target_data_ext@@GOMP_4.5+0xa8>
   1a994:	add	x0, x1, #0x90
   1a998:	ldr	x1, [x0, #32]
   1a99c:	ldp	x21, x22, [sp, #32]
   1a9a0:	str	x1, [x19, #40]
   1a9a4:	str	x19, [x0, #32]
   1a9a8:	ldp	x19, x20, [sp, #16]
   1a9ac:	ldp	x29, x30, [sp], #48
   1a9b0:	ret
   1a9b4:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
   1a9b8:	b	1a998 <GOMP_target_data_ext@@GOMP_4.5+0x8c>

000000000001a9bc <GOMP_target_end_data@@GOMP_4.0>:
   1a9bc:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1a9c0:	ldr	x0, [x0, #4016]
   1a9c4:	mrs	x1, tpidr_el0
   1a9c8:	add	x0, x1, x0
   1a9cc:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1a9d0:	add	x1, x1, #0x2c0
   1a9d4:	ldr	x0, [x0, #80]
   1a9d8:	add	x2, x0, #0x90
   1a9dc:	cmp	x0, #0x0
   1a9e0:	csel	x1, x1, x2, eq  // eq = none
   1a9e4:	ldr	x0, [x1, #32]
   1a9e8:	cbz	x0, 1a9fc <GOMP_target_end_data@@GOMP_4.0+0x40>
   1a9ec:	ldr	x2, [x0, #40]
   1a9f0:	str	x2, [x1, #32]
   1a9f4:	mov	w1, #0x1                   	// #1
   1a9f8:	b	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1a9fc:	ret

000000000001aa00 <GOMP_target_update@@GOMP_4.0>:
   1aa00:	stp	x29, x30, [sp, #-48]!
   1aa04:	mov	x29, sp
   1aa08:	stp	x19, x20, [sp, #16]
   1aa0c:	mov	x19, x2
   1aa10:	mov	x20, x3
   1aa14:	stp	x21, x22, [sp, #32]
   1aa18:	mov	x21, x4
   1aa1c:	mov	x22, x5
   1aa20:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1aa24:	cbz	x0, 1aa60 <GOMP_target_update@@GOMP_4.0+0x60>
   1aa28:	ldr	w1, [x0, #8]
   1aa2c:	mov	w2, #0x5                   	// #5
   1aa30:	and	w1, w1, w2
   1aa34:	cmp	w1, #0x4
   1aa38:	b.ne	1aa60 <GOMP_target_update@@GOMP_4.0+0x60>  // b.any
   1aa3c:	mov	x4, x22
   1aa40:	mov	x3, x21
   1aa44:	mov	x2, x20
   1aa48:	mov	x1, x19
   1aa4c:	ldp	x19, x20, [sp, #16]
   1aa50:	mov	w5, #0x0                   	// #0
   1aa54:	ldp	x21, x22, [sp, #32]
   1aa58:	ldp	x29, x30, [sp], #48
   1aa5c:	b	18990 <omp_get_place_proc_ids@@OMP_4.5+0x1218>
   1aa60:	ldp	x19, x20, [sp, #16]
   1aa64:	ldp	x21, x22, [sp, #32]
   1aa68:	ldp	x29, x30, [sp], #48
   1aa6c:	ret

000000000001aa70 <GOMP_target_update_ext@@GOMP_4.5>:
   1aa70:	sub	sp, sp, #0x60
   1aa74:	stp	x29, x30, [sp, #16]
   1aa78:	add	x29, sp, #0x10
   1aa7c:	stp	x19, x20, [sp, #32]
   1aa80:	mov	x20, x6
   1aa84:	stp	x21, x22, [sp, #48]
   1aa88:	mov	x21, x1
   1aa8c:	mov	x22, x2
   1aa90:	stp	x23, x24, [sp, #64]
   1aa94:	mov	x23, x3
   1aa98:	mov	x24, x4
   1aa9c:	str	x25, [sp, #80]
   1aaa0:	mov	w25, w5
   1aaa4:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1aaa8:	mov	x19, x0
   1aaac:	cbz	x20, 1ab78 <GOMP_target_update_ext@@GOMP_4.5+0x108>
   1aab0:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1aab4:	ldr	x2, [x2, #4016]
   1aab8:	mrs	x1, tpidr_el0
   1aabc:	add	x2, x1, x2
   1aac0:	ldr	x1, [x2, #80]
   1aac4:	cbz	x1, 1ab78 <GOMP_target_update_ext@@GOMP_4.5+0x108>
   1aac8:	ldr	x3, [x1, #56]
   1aacc:	cbz	x3, 1ab78 <GOMP_target_update_ext@@GOMP_4.5+0x108>
   1aad0:	ldr	x2, [x2, #16]
   1aad4:	tbz	w25, #0, 1ab30 <GOMP_target_update_ext@@GOMP_4.5+0xc0>
   1aad8:	cbz	x2, 1ab30 <GOMP_target_update_ext@@GOMP_4.5+0xc0>
   1aadc:	ldrb	w3, [x1, #205]
   1aae0:	cbnz	w3, 1ab30 <GOMP_target_update_ext@@GOMP_4.5+0xc0>
   1aae4:	str	xzr, [sp]
   1aae8:	mov	x7, x20
   1aaec:	str	wzr, [sp, #8]
   1aaf0:	orr	w6, w25, #0x80000000
   1aaf4:	mov	x5, x24
   1aaf8:	mov	x4, x23
   1aafc:	mov	x3, x22
   1ab00:	mov	x2, x21
   1ab04:	mov	x1, #0x0                   	// #0
   1ab08:	bl	10f50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c>
   1ab0c:	tst	w0, #0xff
   1ab10:	b.eq	1ab78 <GOMP_target_update_ext@@GOMP_4.5+0x108>  // b.none
   1ab14:	ldp	x29, x30, [sp, #16]
   1ab18:	ldp	x19, x20, [sp, #32]
   1ab1c:	ldp	x21, x22, [sp, #48]
   1ab20:	ldp	x23, x24, [sp, #64]
   1ab24:	ldr	x25, [sp, #80]
   1ab28:	add	sp, sp, #0x60
   1ab2c:	ret
   1ab30:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ab34:	ldrb	w0, [x0, #1372]
   1ab38:	cbz	w0, 1ab70 <GOMP_target_update_ext@@GOMP_4.5+0x100>
   1ab3c:	cbz	x2, 1ab70 <GOMP_target_update_ext@@GOMP_4.5+0x100>
   1ab40:	ldr	w0, [x2, #132]
   1ab44:	tbnz	w0, #2, 1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>
   1ab48:	ldr	x0, [x1, #40]
   1ab4c:	cbz	x0, 1ab70 <GOMP_target_update_ext@@GOMP_4.5+0x100>
   1ab50:	ldrb	w1, [x0, #49]
   1ab54:	cbnz	w1, 1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>
   1ab58:	ldrb	w1, [x0, #50]
   1ab5c:	cbz	w1, 1ab70 <GOMP_target_update_ext@@GOMP_4.5+0x100>
   1ab60:	ldr	x0, [x0]
   1ab64:	cbz	x0, 1ab70 <GOMP_target_update_ext@@GOMP_4.5+0x100>
   1ab68:	ldrb	w0, [x0, #49]
   1ab6c:	cbnz	w0, 1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>
   1ab70:	mov	x0, x20
   1ab74:	bl	119bc <GOMP_taskwait@@GOMP_2.0+0x28c>
   1ab78:	cbz	x19, 1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>
   1ab7c:	ldr	w0, [x19, #8]
   1ab80:	mov	w1, #0x5                   	// #5
   1ab84:	and	w0, w0, w1
   1ab88:	cmp	w0, #0x4
   1ab8c:	b.ne	1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>  // b.any
   1ab90:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ab94:	ldrb	w0, [x0, #1372]
   1ab98:	cbz	w0, 1abe8 <GOMP_target_update_ext@@GOMP_4.5+0x178>
   1ab9c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1aba0:	ldr	x0, [x0, #4016]
   1aba4:	mrs	x1, tpidr_el0
   1aba8:	add	x0, x1, x0
   1abac:	ldr	x1, [x0, #16]
   1abb0:	cbz	x1, 1abe8 <GOMP_target_update_ext@@GOMP_4.5+0x178>
   1abb4:	ldr	w1, [x1, #132]
   1abb8:	tbnz	w1, #2, 1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>
   1abbc:	ldr	x0, [x0, #80]
   1abc0:	ldr	x0, [x0, #40]
   1abc4:	cbz	x0, 1abe8 <GOMP_target_update_ext@@GOMP_4.5+0x178>
   1abc8:	ldrb	w1, [x0, #49]
   1abcc:	cbnz	w1, 1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>
   1abd0:	ldrb	w1, [x0, #50]
   1abd4:	cbz	w1, 1abe8 <GOMP_target_update_ext@@GOMP_4.5+0x178>
   1abd8:	ldr	x0, [x0]
   1abdc:	cbz	x0, 1abe8 <GOMP_target_update_ext@@GOMP_4.5+0x178>
   1abe0:	ldrb	w0, [x0, #49]
   1abe4:	cbnz	w0, 1ab14 <GOMP_target_update_ext@@GOMP_4.5+0xa4>
   1abe8:	mov	x4, x24
   1abec:	mov	x3, x23
   1abf0:	mov	x2, x22
   1abf4:	mov	x1, x21
   1abf8:	mov	x0, x19
   1abfc:	mov	w5, #0x1                   	// #1
   1ac00:	ldp	x29, x30, [sp, #16]
   1ac04:	ldp	x19, x20, [sp, #32]
   1ac08:	ldp	x21, x22, [sp, #48]
   1ac0c:	ldp	x23, x24, [sp, #64]
   1ac10:	ldr	x25, [sp, #80]
   1ac14:	add	sp, sp, #0x60
   1ac18:	b	18990 <omp_get_place_proc_ids@@OMP_4.5+0x1218>

000000000001ac1c <GOMP_target_enter_exit_data@@GOMP_4.5>:
   1ac1c:	sub	sp, sp, #0x60
   1ac20:	stp	x29, x30, [sp, #16]
   1ac24:	add	x29, sp, #0x10
   1ac28:	stp	x19, x20, [sp, #32]
   1ac2c:	mov	w19, w5
   1ac30:	stp	x21, x22, [sp, #48]
   1ac34:	mov	x21, x3
   1ac38:	mov	x22, x4
   1ac3c:	stp	x23, x24, [sp, #64]
   1ac40:	mov	x23, x1
   1ac44:	mov	x24, x2
   1ac48:	str	x25, [sp, #80]
   1ac4c:	mov	x25, x6
   1ac50:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1ac54:	mov	x20, x0
   1ac58:	cbz	x25, 1ad24 <GOMP_target_enter_exit_data@@GOMP_4.5+0x108>
   1ac5c:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ac60:	ldr	x2, [x2, #4016]
   1ac64:	mrs	x1, tpidr_el0
   1ac68:	add	x2, x1, x2
   1ac6c:	ldr	x1, [x2, #80]
   1ac70:	cbz	x1, 1ad24 <GOMP_target_enter_exit_data@@GOMP_4.5+0x108>
   1ac74:	ldr	x3, [x1, #56]
   1ac78:	cbz	x3, 1ad24 <GOMP_target_enter_exit_data@@GOMP_4.5+0x108>
   1ac7c:	ldr	x2, [x2, #16]
   1ac80:	tbz	w19, #0, 1acdc <GOMP_target_enter_exit_data@@GOMP_4.5+0xc0>
   1ac84:	cbz	x2, 1acdc <GOMP_target_enter_exit_data@@GOMP_4.5+0xc0>
   1ac88:	ldrb	w3, [x1, #205]
   1ac8c:	cbnz	w3, 1acdc <GOMP_target_enter_exit_data@@GOMP_4.5+0xc0>
   1ac90:	str	xzr, [sp]
   1ac94:	mov	x7, x25
   1ac98:	str	wzr, [sp, #8]
   1ac9c:	mov	w6, w19
   1aca0:	mov	x5, x22
   1aca4:	mov	x4, x21
   1aca8:	mov	x3, x24
   1acac:	mov	x2, x23
   1acb0:	mov	x1, #0x0                   	// #0
   1acb4:	bl	10f50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c>
   1acb8:	tst	w0, #0xff
   1acbc:	b.eq	1ad24 <GOMP_target_enter_exit_data@@GOMP_4.5+0x108>  // b.none
   1acc0:	ldp	x29, x30, [sp, #16]
   1acc4:	ldp	x19, x20, [sp, #32]
   1acc8:	ldp	x21, x22, [sp, #48]
   1accc:	ldp	x23, x24, [sp, #64]
   1acd0:	ldr	x25, [sp, #80]
   1acd4:	add	sp, sp, #0x60
   1acd8:	ret
   1acdc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ace0:	ldrb	w0, [x0, #1372]
   1ace4:	cbz	w0, 1ad1c <GOMP_target_enter_exit_data@@GOMP_4.5+0x100>
   1ace8:	cbz	x2, 1ad1c <GOMP_target_enter_exit_data@@GOMP_4.5+0x100>
   1acec:	ldr	w0, [x2, #132]
   1acf0:	tbnz	w0, #2, 1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1acf4:	ldr	x0, [x1, #40]
   1acf8:	cbz	x0, 1ad1c <GOMP_target_enter_exit_data@@GOMP_4.5+0x100>
   1acfc:	ldrb	w1, [x0, #49]
   1ad00:	cbnz	w1, 1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1ad04:	ldrb	w1, [x0, #50]
   1ad08:	cbz	w1, 1ad1c <GOMP_target_enter_exit_data@@GOMP_4.5+0x100>
   1ad0c:	ldr	x0, [x0]
   1ad10:	cbz	x0, 1ad1c <GOMP_target_enter_exit_data@@GOMP_4.5+0x100>
   1ad14:	ldrb	w0, [x0, #49]
   1ad18:	cbnz	w0, 1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1ad1c:	mov	x0, x25
   1ad20:	bl	119bc <GOMP_taskwait@@GOMP_2.0+0x28c>
   1ad24:	cbz	x20, 1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1ad28:	ldr	w0, [x20, #8]
   1ad2c:	mov	w1, #0x5                   	// #5
   1ad30:	and	w0, w0, w1
   1ad34:	cmp	w0, #0x4
   1ad38:	b.ne	1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>  // b.any
   1ad3c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ad40:	ldrb	w0, [x0, #1372]
   1ad44:	cbz	w0, 1ad94 <GOMP_target_enter_exit_data@@GOMP_4.5+0x178>
   1ad48:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ad4c:	ldr	x0, [x0, #4016]
   1ad50:	mrs	x1, tpidr_el0
   1ad54:	add	x0, x1, x0
   1ad58:	ldr	x1, [x0, #16]
   1ad5c:	cbz	x1, 1ad94 <GOMP_target_enter_exit_data@@GOMP_4.5+0x178>
   1ad60:	ldr	w1, [x1, #132]
   1ad64:	tbnz	w1, #2, 1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1ad68:	ldr	x0, [x0, #80]
   1ad6c:	ldr	x0, [x0, #40]
   1ad70:	cbz	x0, 1ad94 <GOMP_target_enter_exit_data@@GOMP_4.5+0x178>
   1ad74:	ldrb	w1, [x0, #49]
   1ad78:	cbnz	w1, 1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1ad7c:	ldrb	w1, [x0, #50]
   1ad80:	cbz	w1, 1ad94 <GOMP_target_enter_exit_data@@GOMP_4.5+0x178>
   1ad84:	ldr	x0, [x0]
   1ad88:	cbz	x0, 1ad94 <GOMP_target_enter_exit_data@@GOMP_4.5+0x178>
   1ad8c:	ldrb	w0, [x0, #49]
   1ad90:	cbnz	w0, 1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1ad94:	tbz	w19, #1, 1ae38 <GOMP_target_enter_exit_data@@GOMP_4.5+0x21c>
   1ad98:	mov	x4, x22
   1ad9c:	mov	x3, x21
   1ada0:	mov	x2, x24
   1ada4:	mov	x1, x23
   1ada8:	mov	x0, x20
   1adac:	ldp	x29, x30, [sp, #16]
   1adb0:	ldp	x19, x20, [sp, #32]
   1adb4:	ldp	x21, x22, [sp, #48]
   1adb8:	ldp	x23, x24, [sp, #64]
   1adbc:	ldr	x25, [sp, #80]
   1adc0:	add	sp, sp, #0x60
   1adc4:	b	18b24 <omp_get_place_proc_ids@@OMP_4.5+0x13ac>
   1adc8:	ldrh	w0, [x22, x19, lsl #1]
   1adcc:	add	x5, x22, x19, lsl #1
   1add0:	lsl	x25, x19, #3
   1add4:	add	x2, x24, x19, lsl #3
   1add8:	and	w0, w0, #0xff
   1addc:	add	x4, x21, x19, lsl #3
   1ade0:	cmp	w0, #0x1c
   1ade4:	b.ne	1ae1c <GOMP_target_enter_exit_data@@GOMP_4.5+0x200>  // b.any
   1ade8:	ldr	x1, [x21, x25]
   1adec:	mov	x0, x20
   1adf0:	mov	w7, #0x3                   	// #3
   1adf4:	mov	w6, #0x1                   	// #1
   1adf8:	add	x1, x1, #0x1
   1adfc:	mov	x3, #0x0                   	// #0
   1ae00:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1ae04:	ldr	x0, [x21, x25]
   1ae08:	add	x19, x19, x0
   1ae0c:	add	x19, x19, #0x1
   1ae10:	cmp	x19, x23
   1ae14:	b.cc	1adc8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1ac>  // b.lo, b.ul, b.last
   1ae18:	b	1acc0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xa4>
   1ae1c:	mov	x0, x20
   1ae20:	mov	w7, #0x3                   	// #3
   1ae24:	mov	w6, #0x1                   	// #1
   1ae28:	mov	x3, #0x0                   	// #0
   1ae2c:	mov	x1, #0x1                   	// #1
   1ae30:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1ae34:	b	1ae0c <GOMP_target_enter_exit_data@@GOMP_4.5+0x1f0>
   1ae38:	mov	x19, #0x0                   	// #0
   1ae3c:	b	1ae10 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1f4>
   1ae40:	stp	x29, x30, [sp, #-48]!
   1ae44:	mov	x29, sp
   1ae48:	stp	x19, x20, [sp, #16]
   1ae4c:	mov	x19, x0
   1ae50:	ldp	x20, x1, [x0]
   1ae54:	stp	x21, x22, [sp, #32]
   1ae58:	cbz	x1, 1af34 <GOMP_target_enter_exit_data@@GOMP_4.5+0x318>
   1ae5c:	cbnz	x20, 1ae7c <GOMP_target_enter_exit_data@@GOMP_4.5+0x260>
   1ae60:	mov	w0, #0x2                   	// #2
   1ae64:	str	w0, [x19, #44]
   1ae68:	ldr	x0, [x19, #8]
   1ae6c:	add	x1, x19, #0x50
   1ae70:	bl	1802c <omp_get_place_proc_ids@@OMP_4.5+0x8b4>
   1ae74:	mov	w0, #0x0                   	// #0
   1ae78:	b	1aefc <GOMP_target_enter_exit_data@@GOMP_4.5+0x2e0>
   1ae7c:	ldr	w0, [x20, #8]
   1ae80:	tbz	w0, #2, 1ae60 <GOMP_target_enter_exit_data@@GOMP_4.5+0x244>
   1ae84:	mov	x0, x20
   1ae88:	bl	18890 <omp_get_place_proc_ids@@OMP_4.5+0x1118>
   1ae8c:	mov	x21, x0
   1ae90:	cbz	x0, 1ae60 <GOMP_target_enter_exit_data@@GOMP_4.5+0x244>
   1ae94:	ldr	x1, [x20, #136]
   1ae98:	cbz	x1, 1aea8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x28c>
   1ae9c:	blr	x1
   1aea0:	tst	w0, #0xff
   1aea4:	b.eq	1ae60 <GOMP_target_enter_exit_data@@GOMP_4.5+0x244>  // b.none
   1aea8:	ldr	w0, [x19, #44]
   1aeac:	cmp	w0, #0x5
   1aeb0:	b.ne	1aec8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ac>  // b.any
   1aeb4:	ldr	x0, [x19, #48]
   1aeb8:	cbz	x0, 1ae74 <GOMP_target_enter_exit_data@@GOMP_4.5+0x258>
   1aebc:	mov	w1, #0x1                   	// #1
   1aec0:	bl	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1aec4:	b	1ae74 <GOMP_target_enter_exit_data@@GOMP_4.5+0x258>
   1aec8:	ldr	w0, [x20, #8]
   1aecc:	add	x2, x19, #0x50
   1aed0:	tbz	w0, #0, 1af0c <GOMP_target_enter_exit_data@@GOMP_4.5+0x2f0>
   1aed4:	str	xzr, [x19, #48]
   1aed8:	mov	w0, #0x3                   	// #3
   1aedc:	mov	x4, x19
   1aee0:	ldr	x3, [x19, #72]
   1aee4:	mov	x1, x21
   1aee8:	ldr	x5, [x20, #152]
   1aeec:	str	w0, [x19, #44]
   1aef0:	ldr	w0, [x20, #12]
   1aef4:	blr	x5
   1aef8:	mov	w0, #0x1                   	// #1
   1aefc:	ldp	x19, x20, [sp, #16]
   1af00:	ldp	x21, x22, [sp, #32]
   1af04:	ldp	x29, x30, [sp], #48
   1af08:	ret
   1af0c:	ldp	x1, x4, [x19, #16]
   1af10:	mov	w7, #0x1                   	// #1
   1af14:	ldr	x5, [x19, #32]
   1af18:	mov	w6, w7
   1af1c:	mov	x0, x20
   1af20:	mov	x3, #0x0                   	// #0
   1af24:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1af28:	ldr	x2, [x0, #16]
   1af2c:	str	x0, [x19, #48]
   1af30:	b	1aed8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2bc>
   1af34:	cbz	x20, 1ae74 <GOMP_target_enter_exit_data@@GOMP_4.5+0x258>
   1af38:	ldr	w0, [x20, #8]
   1af3c:	mov	w1, #0x5                   	// #5
   1af40:	and	w0, w0, w1
   1af44:	cmp	w0, #0x4
   1af48:	b.ne	1ae74 <GOMP_target_enter_exit_data@@GOMP_4.5+0x258>  // b.any
   1af4c:	ldr	w0, [x19, #40]
   1af50:	ldr	x1, [x19, #16]
   1af54:	tbz	w0, #31, 1af70 <GOMP_target_enter_exit_data@@GOMP_4.5+0x354>
   1af58:	ldp	x3, x4, [x19, #24]
   1af5c:	add	x2, x19, #0x50
   1af60:	mov	x0, x20
   1af64:	mov	w5, #0x1                   	// #1
   1af68:	bl	18990 <omp_get_place_proc_ids@@OMP_4.5+0x1218>
   1af6c:	b	1ae74 <GOMP_target_enter_exit_data@@GOMP_4.5+0x258>
   1af70:	tbz	w0, #1, 1b00c <GOMP_target_enter_exit_data@@GOMP_4.5+0x3f0>
   1af74:	ldp	x3, x4, [x19, #24]
   1af78:	add	x2, x19, #0x50
   1af7c:	mov	x0, x20
   1af80:	bl	18b24 <omp_get_place_proc_ids@@OMP_4.5+0x13ac>
   1af84:	b	1ae74 <GOMP_target_enter_exit_data@@GOMP_4.5+0x258>
   1af88:	ldp	x1, x0, [x19, #24]
   1af8c:	add	x2, x21, #0xa
   1af90:	lsl	x22, x2, #3
   1af94:	add	x2, x19, x2, lsl #3
   1af98:	sub	x22, x22, #0x50
   1af9c:	add	x5, x0, x21, lsl #1
   1afa0:	ldrh	w0, [x0, x21, lsl #1]
   1afa4:	add	x4, x1, x22
   1afa8:	and	w0, w0, #0xff
   1afac:	cmp	w0, #0x1c
   1afb0:	b.ne	1aff0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3d4>  // b.any
   1afb4:	ldr	x1, [x1, x22]
   1afb8:	mov	x0, x20
   1afbc:	mov	w7, #0x3                   	// #3
   1afc0:	mov	w6, #0x1                   	// #1
   1afc4:	add	x1, x1, #0x1
   1afc8:	mov	x3, #0x0                   	// #0
   1afcc:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1afd0:	ldr	x0, [x19, #24]
   1afd4:	ldr	x0, [x0, x22]
   1afd8:	add	x21, x21, x0
   1afdc:	add	x21, x21, #0x1
   1afe0:	ldr	x0, [x19, #16]
   1afe4:	cmp	x0, x21
   1afe8:	b.hi	1af88 <GOMP_target_enter_exit_data@@GOMP_4.5+0x36c>  // b.pmore
   1afec:	b	1ae74 <GOMP_target_enter_exit_data@@GOMP_4.5+0x258>
   1aff0:	mov	x0, x20
   1aff4:	mov	w7, #0x3                   	// #3
   1aff8:	mov	w6, #0x1                   	// #1
   1affc:	mov	x3, #0x0                   	// #0
   1b000:	mov	x1, #0x1                   	// #1
   1b004:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1b008:	b	1afdc <GOMP_target_enter_exit_data@@GOMP_4.5+0x3c0>
   1b00c:	mov	x21, #0x0                   	// #0
   1b010:	b	1afe0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3c4>

000000000001b014 <GOMP_teams@@GOMP_4.0>:
   1b014:	cbz	w1, 1b064 <GOMP_teams@@GOMP_4.0+0x50>
   1b018:	stp	x29, x30, [sp, #-32]!
   1b01c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1b020:	ldr	x0, [x0, #4016]
   1b024:	mov	x29, sp
   1b028:	str	x19, [sp, #16]
   1b02c:	mov	w19, w1
   1b030:	mrs	x1, tpidr_el0
   1b034:	add	x0, x1, x0
   1b038:	ldr	x0, [x0, #80]
   1b03c:	cbz	x0, 1b05c <GOMP_teams@@GOMP_4.0+0x48>
   1b040:	add	x0, x0, #0x90
   1b044:	cmp	w19, #0x0
   1b048:	csinv	w19, w19, wzr, ge  // ge = tcont
   1b04c:	str	w19, [x0, #20]
   1b050:	ldr	x19, [sp, #16]
   1b054:	ldp	x29, x30, [sp], #32
   1b058:	ret
   1b05c:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
   1b060:	b	1b044 <GOMP_teams@@GOMP_4.0+0x30>
   1b064:	ret

000000000001b068 <omp_target_alloc@@OMP_4.5>:
   1b068:	cmn	w1, #0x2
   1b06c:	b.ne	1b074 <omp_target_alloc@@OMP_4.5+0xc>  // b.any
   1b070:	b	87a0 <malloc@plt>
   1b074:	stp	x29, x30, [sp, #-48]!
   1b078:	mov	x29, sp
   1b07c:	stp	x19, x20, [sp, #16]
   1b080:	str	x21, [sp, #32]
   1b084:	tbz	w1, #31, 1b0a0 <omp_target_alloc@@OMP_4.5+0x38>
   1b088:	mov	x19, #0x0                   	// #0
   1b08c:	mov	x0, x19
   1b090:	ldp	x19, x20, [sp, #16]
   1b094:	ldr	x21, [sp, #32]
   1b098:	ldp	x29, x30, [sp], #48
   1b09c:	ret
   1b0a0:	mov	x20, x0
   1b0a4:	mov	w0, w1
   1b0a8:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b0ac:	mov	x19, x0
   1b0b0:	cbz	x0, 1b088 <omp_target_alloc@@OMP_4.5+0x20>
   1b0b4:	ldr	w0, [x0, #8]
   1b0b8:	mov	w1, #0x5                   	// #5
   1b0bc:	and	w0, w0, w1
   1b0c0:	cmp	w0, #0x4
   1b0c4:	b.eq	1b0dc <omp_target_alloc@@OMP_4.5+0x74>  // b.none
   1b0c8:	mov	x0, x20
   1b0cc:	ldp	x19, x20, [sp, #16]
   1b0d0:	ldr	x21, [sp, #32]
   1b0d4:	ldp	x29, x30, [sp], #48
   1b0d8:	b	1b070 <omp_target_alloc@@OMP_4.5+0x8>
   1b0dc:	add	x21, x19, #0xa8
   1b0e0:	mov	x0, x21
   1b0e4:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b0e8:	ldr	w0, [x19, #12]
   1b0ec:	mov	x1, x20
   1b0f0:	ldr	x2, [x19, #96]
   1b0f4:	blr	x2
   1b0f8:	mov	x19, x0
   1b0fc:	mov	x0, x21
   1b100:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1b104:	b	1b08c <omp_target_alloc@@OMP_4.5+0x24>

000000000001b108 <omp_target_free@@OMP_4.5>:
   1b108:	stp	x29, x30, [sp, #-48]!
   1b10c:	mov	x29, sp
   1b110:	stp	x19, x20, [sp, #16]
   1b114:	mov	x20, x0
   1b118:	str	x21, [sp, #32]
   1b11c:	cbz	x0, 1b190 <omp_target_free@@OMP_4.5+0x88>
   1b120:	mov	w0, w1
   1b124:	cmn	w1, #0x2
   1b128:	b.ne	1b140 <omp_target_free@@OMP_4.5+0x38>  // b.any
   1b12c:	mov	x0, x20
   1b130:	ldp	x19, x20, [sp, #16]
   1b134:	ldr	x21, [sp, #32]
   1b138:	ldp	x29, x30, [sp], #48
   1b13c:	b	8950 <free@plt>
   1b140:	tbnz	w1, #31, 1b190 <omp_target_free@@OMP_4.5+0x88>
   1b144:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b148:	mov	x19, x0
   1b14c:	cbz	x0, 1b190 <omp_target_free@@OMP_4.5+0x88>
   1b150:	ldr	w0, [x0, #8]
   1b154:	mov	w1, #0x5                   	// #5
   1b158:	and	w0, w0, w1
   1b15c:	cmp	w0, #0x4
   1b160:	b.ne	1b12c <omp_target_free@@OMP_4.5+0x24>  // b.any
   1b164:	add	x21, x19, #0xa8
   1b168:	mov	x0, x21
   1b16c:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b170:	mov	x1, x20
   1b174:	mov	x0, x19
   1b178:	bl	186b8 <omp_get_place_proc_ids@@OMP_4.5+0xf40>
   1b17c:	mov	x0, x21
   1b180:	ldp	x19, x20, [sp, #16]
   1b184:	ldr	x21, [sp, #32]
   1b188:	ldp	x29, x30, [sp], #48
   1b18c:	b	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1b190:	ldp	x19, x20, [sp, #16]
   1b194:	ldr	x21, [sp, #32]
   1b198:	ldp	x29, x30, [sp], #48
   1b19c:	ret

000000000001b1a0 <omp_target_is_present@@OMP_4.5>:
   1b1a0:	stp	x29, x30, [sp, #-112]!
   1b1a4:	mov	x29, sp
   1b1a8:	stp	x19, x20, [sp, #16]
   1b1ac:	mov	x20, x0
   1b1b0:	str	x21, [sp, #32]
   1b1b4:	cbnz	x0, 1b1d0 <omp_target_is_present@@OMP_4.5+0x30>
   1b1b8:	mov	w19, #0x1                   	// #1
   1b1bc:	mov	w0, w19
   1b1c0:	ldp	x19, x20, [sp, #16]
   1b1c4:	ldr	x21, [sp, #32]
   1b1c8:	ldp	x29, x30, [sp], #112
   1b1cc:	ret
   1b1d0:	mov	w0, w1
   1b1d4:	cmn	w1, #0x2
   1b1d8:	b.eq	1b1b8 <omp_target_is_present@@OMP_4.5+0x18>  // b.none
   1b1dc:	tbz	w1, #31, 1b1e8 <omp_target_is_present@@OMP_4.5+0x48>
   1b1e0:	mov	w19, #0x0                   	// #0
   1b1e4:	b	1b1bc <omp_target_is_present@@OMP_4.5+0x1c>
   1b1e8:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b1ec:	mov	x19, x0
   1b1f0:	cbz	x0, 1b1e0 <omp_target_is_present@@OMP_4.5+0x40>
   1b1f4:	ldr	w0, [x0, #8]
   1b1f8:	mov	w1, #0x5                   	// #5
   1b1fc:	and	w0, w0, w1
   1b200:	cmp	w0, #0x4
   1b204:	b.ne	1b1b8 <omp_target_is_present@@OMP_4.5+0x18>  // b.any
   1b208:	add	x21, x19, #0xa8
   1b20c:	mov	x0, x21
   1b210:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b214:	add	x1, sp, #0x38
   1b218:	add	x0, x19, #0xa0
   1b21c:	stp	x20, x20, [sp, #56]
   1b220:	bl	17dd0 <omp_get_place_proc_ids@@OMP_4.5+0x658>
   1b224:	cmp	x0, #0x0
   1b228:	cset	w19, ne  // ne = any
   1b22c:	mov	x0, x21
   1b230:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1b234:	b	1b1bc <omp_target_is_present@@OMP_4.5+0x1c>

000000000001b238 <omp_target_memcpy@@OMP_4.5>:
   1b238:	stp	x29, x30, [sp, #-80]!
   1b23c:	cmn	w5, #0x2
   1b240:	mov	x29, sp
   1b244:	stp	x19, x20, [sp, #16]
   1b248:	mov	w20, w6
   1b24c:	stp	x21, x22, [sp, #32]
   1b250:	mov	x21, x0
   1b254:	mov	x22, x1
   1b258:	stp	x23, x24, [sp, #48]
   1b25c:	mov	x23, x2
   1b260:	mov	x24, x3
   1b264:	stp	x25, x26, [sp, #64]
   1b268:	mov	x25, x4
   1b26c:	b.eq	1b298 <omp_target_memcpy@@OMP_4.5+0x60>  // b.none
   1b270:	mov	w0, w5
   1b274:	tbnz	w5, #31, 1b388 <omp_target_memcpy@@OMP_4.5+0x150>
   1b278:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b27c:	mov	x19, x0
   1b280:	cbz	x0, 1b388 <omp_target_memcpy@@OMP_4.5+0x150>
   1b284:	ldr	w0, [x0, #8]
   1b288:	mov	w1, #0x5                   	// #5
   1b28c:	and	w0, w0, w1
   1b290:	cmp	w0, #0x4
   1b294:	b.eq	1b34c <omp_target_memcpy@@OMP_4.5+0x114>  // b.none
   1b298:	cmn	w20, #0x2
   1b29c:	b.eq	1b2d0 <omp_target_memcpy@@OMP_4.5+0x98>  // b.none
   1b2a0:	mov	x19, #0x0                   	// #0
   1b2a4:	tbnz	w20, #31, 1b388 <omp_target_memcpy@@OMP_4.5+0x150>
   1b2a8:	mov	w0, w20
   1b2ac:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b2b0:	mov	x20, x0
   1b2b4:	cbz	x0, 1b388 <omp_target_memcpy@@OMP_4.5+0x150>
   1b2b8:	ldr	w0, [x0, #8]
   1b2bc:	mov	w1, #0x5                   	// #5
   1b2c0:	and	w0, w0, w1
   1b2c4:	cmp	w0, #0x4
   1b2c8:	b.eq	1b318 <omp_target_memcpy@@OMP_4.5+0xe0>  // b.none
   1b2cc:	cbnz	x19, 1b354 <omp_target_memcpy@@OMP_4.5+0x11c>
   1b2d0:	mov	x2, x23
   1b2d4:	add	x1, x22, x25
   1b2d8:	add	x0, x21, x24
   1b2dc:	bl	8600 <memcpy@plt>
   1b2e0:	mov	w0, #0x0                   	// #0
   1b2e4:	ldp	x19, x20, [sp, #16]
   1b2e8:	ldp	x21, x22, [sp, #32]
   1b2ec:	ldp	x23, x24, [sp, #48]
   1b2f0:	ldp	x25, x26, [sp, #64]
   1b2f4:	ldp	x29, x30, [sp], #80
   1b2f8:	ret
   1b2fc:	cmp	x20, x19
   1b300:	b.ne	1b388 <omp_target_memcpy@@OMP_4.5+0x150>  // b.any
   1b304:	add	x20, x19, #0xa8
   1b308:	mov	x0, x20
   1b30c:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b310:	ldr	x4, [x19, #128]
   1b314:	b	1b364 <omp_target_memcpy@@OMP_4.5+0x12c>
   1b318:	cbnz	x19, 1b2fc <omp_target_memcpy@@OMP_4.5+0xc4>
   1b31c:	add	x26, x20, #0xa8
   1b320:	mov	x0, x26
   1b324:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b328:	ldr	w0, [x20, #12]
   1b32c:	mov	x3, x23
   1b330:	ldr	x4, [x20, #112]
   1b334:	add	x2, x22, x25
   1b338:	add	x1, x21, x24
   1b33c:	blr	x4
   1b340:	and	w19, w0, #0xff
   1b344:	mov	x0, x26
   1b348:	b	1b380 <omp_target_memcpy@@OMP_4.5+0x148>
   1b34c:	cmn	w20, #0x2
   1b350:	b.ne	1b2a4 <omp_target_memcpy@@OMP_4.5+0x6c>  // b.any
   1b354:	add	x20, x19, #0xa8
   1b358:	mov	x0, x20
   1b35c:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b360:	ldr	x4, [x19, #120]
   1b364:	mov	x3, x23
   1b368:	ldr	w0, [x19, #12]
   1b36c:	add	x2, x22, x25
   1b370:	add	x1, x21, x24
   1b374:	blr	x4
   1b378:	and	w19, w0, #0xff
   1b37c:	mov	x0, x20
   1b380:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1b384:	cbnz	w19, 1b2e0 <omp_target_memcpy@@OMP_4.5+0xa8>
   1b388:	mov	w0, #0x16                  	// #22
   1b38c:	b	1b2e4 <omp_target_memcpy@@OMP_4.5+0xac>

000000000001b390 <omp_target_memcpy_rect@@OMP_4.5>:
   1b390:	sub	sp, sp, #0x80
   1b394:	stp	x29, x30, [sp, #32]
   1b398:	add	x29, sp, #0x20
   1b39c:	stp	x19, x20, [sp, #48]
   1b3a0:	ldr	w20, [sp, #144]
   1b3a4:	stp	x21, x22, [sp, #64]
   1b3a8:	mov	x21, x0
   1b3ac:	mov	x22, x1
   1b3b0:	stp	x23, x24, [sp, #80]
   1b3b4:	orr	x1, x0, x1
   1b3b8:	ldr	w0, [sp, #136]
   1b3bc:	stp	x25, x26, [sp, #96]
   1b3c0:	stp	x27, x28, [sp, #112]
   1b3c4:	cbz	x1, 1b4e8 <omp_target_memcpy_rect@@OMP_4.5+0x158>
   1b3c8:	mov	x23, x2
   1b3cc:	mov	w24, w3
   1b3d0:	mov	x25, x4
   1b3d4:	mov	x26, x5
   1b3d8:	mov	x27, x6
   1b3dc:	mov	x28, x7
   1b3e0:	cmn	w0, #0x2
   1b3e4:	b.eq	1b434 <omp_target_memcpy_rect@@OMP_4.5+0xa4>  // b.none
   1b3e8:	tbz	w0, #31, 1b414 <omp_target_memcpy_rect@@OMP_4.5+0x84>
   1b3ec:	mov	w21, #0x16                  	// #22
   1b3f0:	mov	w0, w21
   1b3f4:	ldp	x29, x30, [sp, #32]
   1b3f8:	ldp	x19, x20, [sp, #48]
   1b3fc:	ldp	x21, x22, [sp, #64]
   1b400:	ldp	x23, x24, [sp, #80]
   1b404:	ldp	x25, x26, [sp, #96]
   1b408:	ldp	x27, x28, [sp, #112]
   1b40c:	add	sp, sp, #0x80
   1b410:	ret
   1b414:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b418:	mov	x19, x0
   1b41c:	cbz	x0, 1b3ec <omp_target_memcpy_rect@@OMP_4.5+0x5c>
   1b420:	ldr	w0, [x0, #8]
   1b424:	mov	w1, #0x5                   	// #5
   1b428:	and	w0, w0, w1
   1b42c:	cmp	w0, #0x4
   1b430:	b.eq	1b438 <omp_target_memcpy_rect@@OMP_4.5+0xa8>  // b.none
   1b434:	mov	x19, #0x0                   	// #0
   1b438:	cmn	w20, #0x2
   1b43c:	b.eq	1b468 <omp_target_memcpy_rect@@OMP_4.5+0xd8>  // b.none
   1b440:	tbnz	w20, #31, 1b3ec <omp_target_memcpy_rect@@OMP_4.5+0x5c>
   1b444:	mov	w0, w20
   1b448:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b44c:	mov	x20, x0
   1b450:	cbz	x0, 1b3ec <omp_target_memcpy_rect@@OMP_4.5+0x5c>
   1b454:	ldr	w0, [x0, #8]
   1b458:	mov	w1, #0x5                   	// #5
   1b45c:	and	w0, w0, w1
   1b460:	cmp	w0, #0x4
   1b464:	b.eq	1b46c <omp_target_memcpy_rect@@OMP_4.5+0xdc>  // b.none
   1b468:	mov	x20, #0x0                   	// #0
   1b46c:	cmp	x20, #0x0
   1b470:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   1b474:	b.eq	1b4cc <omp_target_memcpy_rect@@OMP_4.5+0x13c>  // b.none
   1b478:	cmp	x19, x20
   1b47c:	b.ne	1b3ec <omp_target_memcpy_rect@@OMP_4.5+0x5c>  // b.any
   1b480:	add	x0, x20, #0xa8
   1b484:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b488:	ldr	x0, [sp, #128]
   1b48c:	stp	x0, x19, [sp]
   1b490:	mov	x7, x28
   1b494:	str	x20, [sp, #16]
   1b498:	mov	x0, x21
   1b49c:	mov	x6, x27
   1b4a0:	mov	x5, x26
   1b4a4:	mov	x4, x25
   1b4a8:	mov	w3, w24
   1b4ac:	mov	x2, x23
   1b4b0:	mov	x1, x22
   1b4b4:	bl	17ac8 <omp_get_place_proc_ids@@OMP_4.5+0x350>
   1b4b8:	mov	w21, w0
   1b4bc:	cbz	x20, 1b4dc <omp_target_memcpy_rect@@OMP_4.5+0x14c>
   1b4c0:	add	x0, x20, #0xa8
   1b4c4:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1b4c8:	b	1b3f0 <omp_target_memcpy_rect@@OMP_4.5+0x60>
   1b4cc:	cbnz	x20, 1b480 <omp_target_memcpy_rect@@OMP_4.5+0xf0>
   1b4d0:	cbz	x19, 1b488 <omp_target_memcpy_rect@@OMP_4.5+0xf8>
   1b4d4:	add	x0, x19, #0xa8
   1b4d8:	b	1b484 <omp_target_memcpy_rect@@OMP_4.5+0xf4>
   1b4dc:	cbz	x19, 1b3f0 <omp_target_memcpy_rect@@OMP_4.5+0x60>
   1b4e0:	add	x0, x19, #0xa8
   1b4e4:	b	1b4c4 <omp_target_memcpy_rect@@OMP_4.5+0x134>
   1b4e8:	mov	w21, #0x7fffffff            	// #2147483647
   1b4ec:	b	1b3f0 <omp_target_memcpy_rect@@OMP_4.5+0x60>

000000000001b4f0 <omp_target_associate_ptr@@OMP_4.5>:
   1b4f0:	stp	x29, x30, [sp, #-144]!
   1b4f4:	mov	x29, sp
   1b4f8:	stp	x19, x20, [sp, #16]
   1b4fc:	stp	x21, x22, [sp, #32]
   1b500:	stp	x23, x24, [sp, #48]
   1b504:	str	x25, [sp, #64]
   1b508:	tbz	w4, #31, 1b52c <omp_target_associate_ptr@@OMP_4.5+0x3c>
   1b50c:	mov	w19, #0x16                  	// #22
   1b510:	mov	w0, w19
   1b514:	ldp	x19, x20, [sp, #16]
   1b518:	ldp	x21, x22, [sp, #32]
   1b51c:	ldp	x23, x24, [sp, #48]
   1b520:	ldr	x25, [sp, #64]
   1b524:	ldp	x29, x30, [sp], #144
   1b528:	ret
   1b52c:	mov	x19, x0
   1b530:	mov	x22, x1
   1b534:	mov	x23, x2
   1b538:	mov	x21, x3
   1b53c:	mov	w0, w4
   1b540:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b544:	mov	x20, x0
   1b548:	cbz	x0, 1b50c <omp_target_associate_ptr@@OMP_4.5+0x1c>
   1b54c:	ldr	w0, [x0, #8]
   1b550:	mov	w1, #0x5                   	// #5
   1b554:	and	w0, w0, w1
   1b558:	cmp	w0, #0x4
   1b55c:	b.ne	1b50c <omp_target_associate_ptr@@OMP_4.5+0x1c>  // b.any
   1b560:	add	x24, x20, #0xa8
   1b564:	add	x25, x20, #0xa0
   1b568:	mov	x0, x24
   1b56c:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b570:	add	x1, sp, #0x58
   1b574:	mov	x0, x25
   1b578:	add	x21, x22, x21
   1b57c:	str	x19, [sp, #88]
   1b580:	add	x19, x19, x23
   1b584:	str	x19, [sp, #96]
   1b588:	bl	18740 <omp_get_place_proc_ids@@OMP_4.5+0xfc8>
   1b58c:	cbz	x0, 1b5d4 <omp_target_associate_ptr@@OMP_4.5+0xe4>
   1b590:	ldp	x1, x2, [x0, #16]
   1b594:	ldr	x1, [x1, #16]
   1b598:	add	x1, x1, x2
   1b59c:	cmp	x1, x21
   1b5a0:	b.ne	1b630 <omp_target_associate_ptr@@OMP_4.5+0x140>  // b.any
   1b5a4:	ldr	x2, [x0]
   1b5a8:	ldr	x1, [sp, #88]
   1b5ac:	cmp	x2, x1
   1b5b0:	b.hi	1b630 <omp_target_associate_ptr@@OMP_4.5+0x140>  // b.pmore
   1b5b4:	ldr	x1, [x0, #8]
   1b5b8:	mov	w19, #0x16                  	// #22
   1b5bc:	ldr	x0, [sp, #96]
   1b5c0:	cmp	x1, x0
   1b5c4:	csel	w19, w19, wzr, cc  // cc = lo, ul, last
   1b5c8:	mov	x0, x24
   1b5cc:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1b5d0:	b	1b510 <omp_target_associate_ptr@@OMP_4.5+0x20>
   1b5d4:	mov	x0, #0x40                  	// #64
   1b5d8:	bl	adb0 <fprintf@plt+0x2250>
   1b5dc:	mov	x19, x0
   1b5e0:	mov	x0, #0x48                  	// #72
   1b5e4:	bl	adb0 <fprintf@plt+0x2250>
   1b5e8:	mov	x1, x0
   1b5ec:	mov	x0, #0x1                   	// #1
   1b5f0:	stp	x0, x1, [x19]
   1b5f4:	ldr	x0, [sp, #88]
   1b5f8:	str	x0, [x1]
   1b5fc:	ldr	x0, [sp, #96]
   1b600:	str	x0, [x1, #8]
   1b604:	mov	x0, #0xffffffffffffffff    	// #-1
   1b608:	stp	x19, x21, [x1, #16]
   1b60c:	stp	xzr, xzr, [x19, #16]
   1b610:	str	x0, [x1, #32]
   1b614:	mov	x0, x25
   1b618:	stp	xzr, xzr, [x19, #32]
   1b61c:	stp	xzr, x20, [x19, #48]
   1b620:	mov	w19, #0x0                   	// #0
   1b624:	stp	xzr, xzr, [x1, #56]
   1b628:	bl	1b958 <omp_pause_resource_all@@OMP_5.0+0x1f8>
   1b62c:	b	1b5c8 <omp_target_associate_ptr@@OMP_4.5+0xd8>
   1b630:	mov	w19, #0x16                  	// #22
   1b634:	b	1b5c8 <omp_target_associate_ptr@@OMP_4.5+0xd8>

000000000001b638 <omp_target_disassociate_ptr@@OMP_4.5>:
   1b638:	stp	x29, x30, [sp, #-112]!
   1b63c:	mov	x29, sp
   1b640:	stp	x19, x20, [sp, #16]
   1b644:	str	x21, [sp, #32]
   1b648:	tbz	w1, #31, 1b664 <omp_target_disassociate_ptr@@OMP_4.5+0x2c>
   1b64c:	mov	w19, #0x16                  	// #22
   1b650:	mov	w0, w19
   1b654:	ldp	x19, x20, [sp, #16]
   1b658:	ldr	x21, [sp, #32]
   1b65c:	ldp	x29, x30, [sp], #112
   1b660:	ret
   1b664:	mov	x20, x0
   1b668:	mov	w0, w1
   1b66c:	bl	1a288 <GOMP_offload_unregister@@GOMP_4.0.1+0xbc>
   1b670:	mov	x19, x0
   1b674:	cbz	x0, 1b64c <omp_target_disassociate_ptr@@OMP_4.5+0x14>
   1b678:	ldr	w0, [x0, #8]
   1b67c:	tbz	w0, #2, 1b64c <omp_target_disassociate_ptr@@OMP_4.5+0x14>
   1b680:	add	x21, x19, #0xa8
   1b684:	add	x19, x19, #0xa0
   1b688:	mov	x0, x21
   1b68c:	bl	17ce4 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   1b690:	add	x1, sp, #0x38
   1b694:	mov	x0, x19
   1b698:	stp	x20, x20, [sp, #56]
   1b69c:	bl	18740 <omp_get_place_proc_ids@@OMP_4.5+0xfc8>
   1b6a0:	mov	x20, x0
   1b6a4:	cbz	x0, 1b710 <omp_target_disassociate_ptr@@OMP_4.5+0xd8>
   1b6a8:	ldr	x1, [x0]
   1b6ac:	ldr	x0, [sp, #56]
   1b6b0:	cmp	x1, x0
   1b6b4:	b.ne	1b710 <omp_target_disassociate_ptr@@OMP_4.5+0xd8>  // b.any
   1b6b8:	ldr	x0, [x20, #32]
   1b6bc:	cmn	x0, #0x1
   1b6c0:	b.ne	1b710 <omp_target_disassociate_ptr@@OMP_4.5+0xd8>  // b.any
   1b6c4:	ldr	x0, [x20, #16]
   1b6c8:	ldr	x1, [x0, #16]
   1b6cc:	cbnz	x1, 1b710 <omp_target_disassociate_ptr@@OMP_4.5+0xd8>
   1b6d0:	ldr	x1, [x0, #32]
   1b6d4:	cbnz	x1, 1b710 <omp_target_disassociate_ptr@@OMP_4.5+0xd8>
   1b6d8:	ldr	x1, [x0]
   1b6dc:	cmp	x1, #0x1
   1b6e0:	b.ne	1b710 <omp_target_disassociate_ptr@@OMP_4.5+0xd8>  // b.any
   1b6e4:	ldr	x0, [x0, #48]
   1b6e8:	cbnz	x0, 1b710 <omp_target_disassociate_ptr@@OMP_4.5+0xd8>
   1b6ec:	mov	x0, x19
   1b6f0:	mov	x1, x20
   1b6f4:	bl	1b9d0 <omp_pause_resource_all@@OMP_5.0+0x270>
   1b6f8:	mov	w19, #0x0                   	// #0
   1b6fc:	ldr	x0, [x20, #16]
   1b700:	bl	18704 <omp_get_place_proc_ids@@OMP_4.5+0xf8c>
   1b704:	mov	x0, x21
   1b708:	bl	17d0c <omp_get_place_proc_ids@@OMP_4.5+0x594>
   1b70c:	b	1b650 <omp_target_disassociate_ptr@@OMP_4.5+0x18>
   1b710:	mov	w19, #0x16                  	// #22
   1b714:	b	1b704 <omp_target_disassociate_ptr@@OMP_4.5+0xcc>

000000000001b718 <omp_pause_resource@@OMP_5.0>:
   1b718:	cmn	w1, #0x2
   1b71c:	b.ne	1b724 <omp_pause_resource@@OMP_5.0+0xc>  // b.any
   1b720:	b	14e18 <omp_in_final@@OMP_3.1+0x12a0>
   1b724:	stp	x29, x30, [sp, #-32]!
   1b728:	mov	x29, sp
   1b72c:	str	x19, [sp, #16]
   1b730:	mov	w19, w1
   1b734:	tbnz	w1, #31, 1b758 <omp_pause_resource@@OMP_5.0+0x40>
   1b738:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1b73c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1b740:	ldr	w0, [x0, #1396]
   1b744:	cmp	w19, w0
   1b748:	csetm	w0, ge  // ge = tcont
   1b74c:	ldr	x19, [sp, #16]
   1b750:	ldp	x29, x30, [sp], #32
   1b754:	ret
   1b758:	mov	w0, #0xffffffff            	// #-1
   1b75c:	b	1b74c <omp_pause_resource@@OMP_5.0+0x34>

000000000001b760 <omp_pause_resource_all@@OMP_5.0>:
   1b760:	stp	x29, x30, [sp, #-16]!
   1b764:	mov	x29, sp
   1b768:	bl	14e18 <omp_in_final@@OMP_3.1+0x12a0>
   1b76c:	cmp	w0, #0x0
   1b770:	csetm	w0, ne  // ne = any
   1b774:	ldp	x29, x30, [sp], #16
   1b778:	ret
   1b77c:	ldp	x2, x3, [x0]
   1b780:	ldr	x0, [x1]
   1b784:	cmp	x2, x3
   1b788:	b.ne	1b798 <omp_pause_resource_all@@OMP_5.0+0x38>  // b.any
   1b78c:	ldr	x4, [x1, #8]
   1b790:	cmp	x4, x0
   1b794:	b.eq	1b7b0 <omp_pause_resource_all@@OMP_5.0+0x50>  // b.none
   1b798:	cmp	x3, x0
   1b79c:	b.ls	1b7b8 <omp_pause_resource_all@@OMP_5.0+0x58>  // b.plast
   1b7a0:	ldr	x0, [x1, #8]
   1b7a4:	cmp	x2, x0
   1b7a8:	cset	w0, cs  // cs = hs, nlast
   1b7ac:	ret
   1b7b0:	mov	w0, #0x0                   	// #0
   1b7b4:	b	1b7ac <omp_pause_resource_all@@OMP_5.0+0x4c>
   1b7b8:	mov	w0, #0xffffffff            	// #-1
   1b7bc:	b	1b7ac <omp_pause_resource_all@@OMP_5.0+0x4c>
   1b7c0:	stp	x29, x30, [sp, #-48]!
   1b7c4:	mov	x29, sp
   1b7c8:	stp	x19, x20, [sp, #16]
   1b7cc:	mov	x19, x0
   1b7d0:	mov	x20, x1
   1b7d4:	str	x21, [sp, #32]
   1b7d8:	mov	x21, x2
   1b7dc:	cbz	x19, 1b804 <omp_pause_resource_all@@OMP_5.0+0xa4>
   1b7e0:	mov	x0, x19
   1b7e4:	mov	x1, x21
   1b7e8:	blr	x20
   1b7ec:	ldr	x0, [x19, #56]
   1b7f0:	mov	x2, x21
   1b7f4:	mov	x1, x20
   1b7f8:	bl	1b7c0 <omp_pause_resource_all@@OMP_5.0+0x60>
   1b7fc:	ldr	x19, [x19, #64]
   1b800:	b	1b7dc <omp_pause_resource_all@@OMP_5.0+0x7c>
   1b804:	ldp	x19, x20, [sp, #16]
   1b808:	ldr	x21, [sp, #32]
   1b80c:	ldp	x29, x30, [sp], #48
   1b810:	ret
   1b814:	mov	x6, x0
   1b818:	mov	x8, x1
   1b81c:	stp	x29, x30, [sp, #-16]!
   1b820:	mov	x29, sp
   1b824:	ldr	x5, [x6]
   1b828:	mov	x0, x8
   1b82c:	mov	x1, x5
   1b830:	bl	1b77c <omp_pause_resource_all@@OMP_5.0+0x1c>
   1b834:	mov	w7, w0
   1b838:	cmp	w0, #0x0
   1b83c:	cbz	w0, 1b870 <omp_pause_resource_all@@OMP_5.0+0x110>
   1b840:	ldp	x0, x1, [x5, #56]
   1b844:	csel	x1, x1, x0, ge  // ge = tcont
   1b848:	cbz	x1, 1b870 <omp_pause_resource_all@@OMP_5.0+0x110>
   1b84c:	mov	x0, x8
   1b850:	bl	1b77c <omp_pause_resource_all@@OMP_5.0+0x1c>
   1b854:	cmp	w0, #0x0
   1b858:	cbnz	w0, 1b878 <omp_pause_resource_all@@OMP_5.0+0x118>
   1b85c:	tbz	w7, #31, 1b8c8 <omp_pause_resource_all@@OMP_5.0+0x168>
   1b860:	ldr	x0, [x1, #64]
   1b864:	str	x5, [x1, #64]
   1b868:	str	x0, [x5, #56]
   1b86c:	str	x1, [x6]
   1b870:	ldp	x29, x30, [sp], #16
   1b874:	ret
   1b878:	b.ge	1b8c0 <omp_pause_resource_all@@OMP_5.0+0x160>  // b.tcont
   1b87c:	ldr	x2, [x1, #56]
   1b880:	cbz	x2, 1b85c <omp_pause_resource_all@@OMP_5.0+0xfc>
   1b884:	lsr	w4, w7, #31
   1b888:	lsr	w3, w0, #31
   1b88c:	cmp	w4, #0x0
   1b890:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   1b894:	b.eq	1b8d8 <omp_pause_resource_all@@OMP_5.0+0x178>  // b.none
   1b898:	ldr	x0, [x1, #56]
   1b89c:	ldr	x2, [x0, #64]
   1b8a0:	str	x1, [x0, #64]
   1b8a4:	str	x2, [x1, #56]
   1b8a8:	str	x0, [x5, #56]
   1b8ac:	ldr	x1, [x0, #64]
   1b8b0:	str	x5, [x0, #64]
   1b8b4:	str	x1, [x5, #56]
   1b8b8:	str	x0, [x6]
   1b8bc:	b	1b824 <omp_pause_resource_all@@OMP_5.0+0xc4>
   1b8c0:	ldr	x2, [x1, #64]
   1b8c4:	b	1b880 <omp_pause_resource_all@@OMP_5.0+0x120>
   1b8c8:	ldr	x0, [x1, #56]
   1b8cc:	str	x5, [x1, #56]
   1b8d0:	str	x0, [x5, #64]
   1b8d4:	b	1b86c <omp_pause_resource_all@@OMP_5.0+0x10c>
   1b8d8:	cmp	w7, #0x0
   1b8dc:	cset	w2, gt
   1b8e0:	cmp	w0, #0x0
   1b8e4:	cset	w0, gt
   1b8e8:	cmp	w2, #0x0
   1b8ec:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1b8f0:	b.eq	1b918 <omp_pause_resource_all@@OMP_5.0+0x1b8>  // b.none
   1b8f4:	ldr	x0, [x1, #64]
   1b8f8:	ldr	x2, [x0, #56]
   1b8fc:	str	x1, [x0, #56]
   1b900:	str	x2, [x1, #64]
   1b904:	str	x0, [x5, #64]
   1b908:	ldr	x1, [x0, #56]
   1b90c:	str	x5, [x0, #56]
   1b910:	str	x1, [x5, #64]
   1b914:	b	1b8b8 <omp_pause_resource_all@@OMP_5.0+0x158>
   1b918:	cmp	w4, #0x0
   1b91c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1b920:	b.eq	1b938 <omp_pause_resource_all@@OMP_5.0+0x1d8>  // b.none
   1b924:	ldr	x0, [x1, #64]
   1b928:	ldr	x2, [x0, #56]
   1b92c:	str	x1, [x0, #56]
   1b930:	str	x2, [x1, #64]
   1b934:	b	1b8a8 <omp_pause_resource_all@@OMP_5.0+0x148>
   1b938:	cmp	w3, #0x0
   1b93c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   1b940:	b.eq	1b824 <omp_pause_resource_all@@OMP_5.0+0xc4>  // b.none
   1b944:	ldr	x0, [x1, #56]
   1b948:	ldr	x2, [x0, #64]
   1b94c:	str	x1, [x0, #64]
   1b950:	str	x2, [x1, #56]
   1b954:	b	1b904 <omp_pause_resource_all@@OMP_5.0+0x1a4>
   1b958:	stp	x29, x30, [sp, #-16]!
   1b95c:	mov	x10, x0
   1b960:	mov	x9, x1
   1b964:	mov	x29, sp
   1b968:	ldr	x2, [x0]
   1b96c:	cbz	x2, 1b974 <omp_pause_resource_all@@OMP_5.0+0x214>
   1b970:	bl	1b814 <omp_pause_resource_all@@OMP_5.0+0xb4>
   1b974:	ldr	x5, [x10]
   1b978:	cbz	x5, 1b9c8 <omp_pause_resource_all@@OMP_5.0+0x268>
   1b97c:	mov	x1, x9
   1b980:	mov	x0, x5
   1b984:	bl	1b77c <omp_pause_resource_all@@OMP_5.0+0x1c>
   1b988:	cmp	w0, #0x0
   1b98c:	cbnz	w0, 1b99c <omp_pause_resource_all@@OMP_5.0+0x23c>
   1b990:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1b994:	add	x0, x0, #0xe14
   1b998:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1b99c:	b.ge	1b9b8 <omp_pause_resource_all@@OMP_5.0+0x258>  // b.tcont
   1b9a0:	ldr	x0, [x5, #64]
   1b9a4:	stp	x5, x0, [x9, #56]
   1b9a8:	str	xzr, [x5, #64]
   1b9ac:	ldp	x29, x30, [sp], #16
   1b9b0:	str	x9, [x10]
   1b9b4:	ret
   1b9b8:	ldr	x0, [x5, #56]
   1b9bc:	stp	x0, x5, [x9, #56]
   1b9c0:	str	xzr, [x5, #56]
   1b9c4:	b	1b9ac <omp_pause_resource_all@@OMP_5.0+0x24c>
   1b9c8:	stp	xzr, xzr, [x9, #56]
   1b9cc:	b	1b9ac <omp_pause_resource_all@@OMP_5.0+0x24c>
   1b9d0:	stp	x29, x30, [sp, #-16]!
   1b9d4:	mov	x9, x0
   1b9d8:	mov	x10, x1
   1b9dc:	mov	x29, sp
   1b9e0:	ldr	x2, [x0]
   1b9e4:	cbz	x2, 1b9ec <omp_pause_resource_all@@OMP_5.0+0x28c>
   1b9e8:	bl	1b814 <omp_pause_resource_all@@OMP_5.0+0xb4>
   1b9ec:	ldr	x5, [x9]
   1b9f0:	cbz	x5, 1ba24 <omp_pause_resource_all@@OMP_5.0+0x2c4>
   1b9f4:	mov	x1, x10
   1b9f8:	mov	x0, x5
   1b9fc:	bl	1b77c <omp_pause_resource_all@@OMP_5.0+0x1c>
   1ba00:	cbnz	w0, 1ba24 <omp_pause_resource_all@@OMP_5.0+0x2c4>
   1ba04:	ldp	x0, x1, [x5, #56]
   1ba08:	cbz	x0, 1ba2c <omp_pause_resource_all@@OMP_5.0+0x2cc>
   1ba0c:	str	x0, [x9]
   1ba10:	cbz	x1, 1ba24 <omp_pause_resource_all@@OMP_5.0+0x2c4>
   1ba14:	mov	x2, x0
   1ba18:	ldr	x0, [x0, #64]
   1ba1c:	cbnz	x0, 1ba14 <omp_pause_resource_all@@OMP_5.0+0x2b4>
   1ba20:	str	x1, [x2, #64]
   1ba24:	ldp	x29, x30, [sp], #16
   1ba28:	ret
   1ba2c:	str	x1, [x9]
   1ba30:	b	1ba24 <omp_pause_resource_all@@OMP_5.0+0x2c4>
   1ba34:	stp	x29, x30, [sp, #-16]!
   1ba38:	mov	x9, x0
   1ba3c:	mov	x10, x1
   1ba40:	mov	x29, sp
   1ba44:	ldr	x2, [x0]
   1ba48:	cbz	x2, 1ba50 <omp_pause_resource_all@@OMP_5.0+0x2f0>
   1ba4c:	bl	1b814 <omp_pause_resource_all@@OMP_5.0+0xb4>
   1ba50:	ldr	x5, [x9]
   1ba54:	cbz	x5, 1ba6c <omp_pause_resource_all@@OMP_5.0+0x30c>
   1ba58:	mov	x0, x5
   1ba5c:	mov	x1, x10
   1ba60:	bl	1b77c <omp_pause_resource_all@@OMP_5.0+0x1c>
   1ba64:	cmp	w0, #0x0
   1ba68:	csel	x5, x5, xzr, eq  // eq = none
   1ba6c:	mov	x0, x5
   1ba70:	ldp	x29, x30, [sp], #16
   1ba74:	ret
   1ba78:	ldr	x0, [x0]
   1ba7c:	b	1b7c0 <omp_pause_resource_all@@OMP_5.0+0x60>

000000000001ba80 <GOMP_PLUGIN_malloc@@GOMP_PLUGIN_1.0>:
   1ba80:	b	adb0 <fprintf@plt+0x2250>

000000000001ba84 <GOMP_PLUGIN_malloc_cleared@@GOMP_PLUGIN_1.0>:
   1ba84:	b	ade4 <fprintf@plt+0x2284>

000000000001ba88 <GOMP_PLUGIN_realloc@@GOMP_PLUGIN_1.0>:
   1ba88:	b	ae20 <fprintf@plt+0x22c0>

000000000001ba8c <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0>:
   1ba8c:	stp	x29, x30, [sp, #-256]!
   1ba90:	mov	x29, sp
   1ba94:	stp	x2, x3, [sp, #208]
   1ba98:	add	x2, sp, #0x100
   1ba9c:	stp	x2, x2, [sp, #48]
   1baa0:	add	x2, sp, #0xd0
   1baa4:	str	x2, [sp, #64]
   1baa8:	mov	w2, #0xffffffd0            	// #-48
   1baac:	str	w2, [sp, #72]
   1bab0:	mov	w2, #0xffffff80            	// #-128
   1bab4:	str	w2, [sp, #76]
   1bab8:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1babc:	str	q0, [sp, #80]
   1bac0:	ldr	w2, [x2, #1544]
   1bac4:	str	q1, [sp, #96]
   1bac8:	str	q2, [sp, #112]
   1bacc:	str	q3, [sp, #128]
   1bad0:	str	q4, [sp, #144]
   1bad4:	str	q5, [sp, #160]
   1bad8:	str	q6, [sp, #176]
   1badc:	str	q7, [sp, #192]
   1bae0:	stp	x4, x5, [sp, #224]
   1bae4:	stp	x6, x7, [sp, #240]
   1bae8:	cbz	w2, 1bb04 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0+0x78>
   1baec:	ldp	x2, x3, [sp, #48]
   1baf0:	stp	x2, x3, [sp, #16]
   1baf4:	ldp	x2, x3, [sp, #64]
   1baf8:	stp	x2, x3, [sp, #32]
   1bafc:	add	x2, sp, #0x10
   1bb00:	bl	afa8 <GOMP_critical_name_end@@GOMP_1.0+0x4>
   1bb04:	ldp	x29, x30, [sp], #256
   1bb08:	ret

000000000001bb0c <GOMP_PLUGIN_error@@GOMP_PLUGIN_1.0>:
   1bb0c:	stp	x29, x30, [sp, #-272]!
   1bb10:	mov	x29, sp
   1bb14:	stp	x1, x2, [sp, #216]
   1bb18:	add	x1, sp, #0x110
   1bb1c:	stp	x1, x1, [sp, #48]
   1bb20:	add	x1, sp, #0xd0
   1bb24:	str	x1, [sp, #64]
   1bb28:	mov	w1, #0xffffffc8            	// #-56
   1bb2c:	str	w1, [sp, #72]
   1bb30:	mov	w1, #0xffffff80            	// #-128
   1bb34:	str	w1, [sp, #76]
   1bb38:	add	x1, sp, #0x10
   1bb3c:	stp	x3, x4, [sp, #232]
   1bb40:	ldp	x2, x3, [sp, #48]
   1bb44:	stp	x2, x3, [sp, #16]
   1bb48:	ldp	x2, x3, [sp, #64]
   1bb4c:	stp	x2, x3, [sp, #32]
   1bb50:	str	q0, [sp, #80]
   1bb54:	str	q1, [sp, #96]
   1bb58:	str	q2, [sp, #112]
   1bb5c:	str	q3, [sp, #128]
   1bb60:	str	q4, [sp, #144]
   1bb64:	str	q5, [sp, #160]
   1bb68:	str	q6, [sp, #176]
   1bb6c:	str	q7, [sp, #192]
   1bb70:	stp	x5, x6, [sp, #248]
   1bb74:	str	x7, [sp, #264]
   1bb78:	bl	b060 <GOMP_critical_name_end@@GOMP_1.0+0xbc>
   1bb7c:	ldp	x29, x30, [sp], #272
   1bb80:	ret

000000000001bb84 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0>:
   1bb84:	stp	x29, x30, [sp, #-272]!
   1bb88:	mov	x29, sp
   1bb8c:	stp	x1, x2, [sp, #216]
   1bb90:	add	x1, sp, #0x110
   1bb94:	stp	x1, x1, [sp, #48]
   1bb98:	add	x1, sp, #0xd0
   1bb9c:	str	x1, [sp, #64]
   1bba0:	mov	w1, #0xffffffc8            	// #-56
   1bba4:	str	w1, [sp, #72]
   1bba8:	mov	w1, #0xffffff80            	// #-128
   1bbac:	str	w1, [sp, #76]
   1bbb0:	add	x1, sp, #0x10
   1bbb4:	stp	x3, x4, [sp, #232]
   1bbb8:	ldp	x2, x3, [sp, #48]
   1bbbc:	stp	x2, x3, [sp, #16]
   1bbc0:	ldp	x2, x3, [sp, #64]
   1bbc4:	stp	x2, x3, [sp, #32]
   1bbc8:	str	q0, [sp, #80]
   1bbcc:	str	q1, [sp, #96]
   1bbd0:	str	q2, [sp, #112]
   1bbd4:	str	q3, [sp, #128]
   1bbd8:	str	q4, [sp, #144]
   1bbdc:	str	q5, [sp, #160]
   1bbe0:	str	q6, [sp, #176]
   1bbe4:	str	q7, [sp, #192]
   1bbe8:	stp	x5, x6, [sp, #248]
   1bbec:	str	x7, [sp, #264]
   1bbf0:	bl	b140 <GOMP_critical_name_end@@GOMP_1.0+0x19c>
   1bbf4:	stp	x29, x30, [sp, #-48]!
   1bbf8:	mov	x29, sp
   1bbfc:	stp	x19, x20, [sp, #16]
   1bc00:	mov	w20, w0
   1bc04:	mov	x19, x2
   1bc08:	stp	x21, x22, [sp, #32]
   1bc0c:	mov	w21, w1
   1bc10:	cbnz	w21, 1bc24 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xa0>
   1bc14:	ldp	x19, x20, [sp, #16]
   1bc18:	ldp	x21, x22, [sp, #32]
   1bc1c:	ldp	x29, x30, [sp], #48
   1bc20:	ret
   1bc24:	ldr	w1, [x19, #24]
   1bc28:	ldr	x0, [x19]
   1bc2c:	tbnz	w1, #31, 1bc60 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xdc>
   1bc30:	add	x1, x0, #0xb
   1bc34:	and	x1, x1, #0xfffffffffffffff8
   1bc38:	str	x1, [x19]
   1bc3c:	ldr	w22, [x0]
   1bc40:	cmn	w22, #0x1
   1bc44:	b.ne	1bc90 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x10c>  // b.any
   1bc48:	cmn	w20, #0x2
   1bc4c:	b.ne	1bc7c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xf8>  // b.any
   1bc50:	ldp	x19, x20, [sp, #16]
   1bc54:	ldp	x21, x22, [sp, #32]
   1bc58:	ldp	x29, x30, [sp], #48
   1bc5c:	b	8660 <acc_wait_all@plt>
   1bc60:	add	w2, w1, #0x8
   1bc64:	str	w2, [x19, #24]
   1bc68:	cmp	w2, #0x0
   1bc6c:	b.gt	1bc30 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xac>
   1bc70:	ldr	x0, [x19, #8]
   1bc74:	add	x0, x0, w1, sxtw
   1bc78:	b	1bc3c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xb8>
   1bc7c:	mov	w0, w20
   1bc80:	ldp	x19, x20, [sp, #16]
   1bc84:	ldp	x21, x22, [sp, #32]
   1bc88:	ldp	x29, x30, [sp], #48
   1bc8c:	b	8910 <acc_wait_all_async@plt>
   1bc90:	mov	w0, w22
   1bc94:	bl	87b0 <acc_async_test@plt>
   1bc98:	cbnz	w0, 1bcac <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x128>
   1bc9c:	cmn	w20, #0x2
   1bca0:	b.ne	1bcb4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x130>  // b.any
   1bca4:	mov	w0, w22
   1bca8:	bl	89e0 <acc_wait@plt>
   1bcac:	sub	w21, w21, #0x1
   1bcb0:	b	1bc10 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x8c>
   1bcb4:	cmp	w22, w20
   1bcb8:	b.eq	1bcac <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x128>  // b.none
   1bcbc:	mov	w1, w20
   1bcc0:	mov	w0, w22
   1bcc4:	bl	8760 <acc_wait_async@plt>
   1bcc8:	b	1bcac <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x128>

000000000001bccc <GOACC_parallel_keyed@@GOACC_2.0.1>:
   1bccc:	stp	x29, x30, [sp, #-352]!
   1bcd0:	mov	x29, sp
   1bcd4:	stp	x19, x20, [sp, #16]
   1bcd8:	mvn	w20, w0
   1bcdc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1bce0:	stp	x21, x22, [sp, #32]
   1bce4:	mov	x19, x1
   1bce8:	ldr	w0, [x0, #1544]
   1bcec:	stp	x23, x24, [sp, #48]
   1bcf0:	mov	x21, x4
   1bcf4:	mov	x24, x2
   1bcf8:	stp	x25, x26, [sp, #64]
   1bcfc:	mov	x23, x3
   1bd00:	mov	x26, x5
   1bd04:	stp	x27, x28, [sp, #80]
   1bd08:	str	q0, [x29, #208]
   1bd0c:	str	q1, [x29, #224]
   1bd10:	str	q2, [x29, #240]
   1bd14:	str	q3, [x29, #256]
   1bd18:	str	q4, [x29, #272]
   1bd1c:	str	q5, [x29, #288]
   1bd20:	str	q6, [x29, #304]
   1bd24:	str	q7, [x29, #320]
   1bd28:	stp	x6, x7, [x29, #336]
   1bd2c:	cbz	w0, 1bd58 <GOACC_parallel_keyed@@GOACC_2.0.1+0x8c>
   1bd30:	mov	x6, x5
   1bd34:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1bd38:	mov	x5, x4
   1bd3c:	add	x1, x1, #0xe23
   1bd40:	mov	x4, x3
   1bd44:	mov	w0, #0x0                   	// #0
   1bd48:	mov	x3, x2
   1bd4c:	adrp	x2, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1bd50:	add	x2, x2, #0xfd9
   1bd54:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1bd58:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1bd5c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1bd60:	ldr	x0, [x0, #4048]
   1bd64:	mrs	x1, tpidr_el0
   1bd68:	sub	w4, w24, #0x1
   1bd6c:	mov	x2, #0x1                   	// #1
   1bd70:	mov	x5, #0x8                   	// #8
   1bd74:	ldr	x0, [x1, x0]
   1bd78:	mov	x1, #0x0                   	// #0
   1bd7c:	ldr	x25, [x0, #8]
   1bd80:	cmp	x24, x1
   1bd84:	b.ne	1bdc0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xf4>  // b.any
   1bd88:	tbz	w20, #0, 1be30 <GOACC_parallel_keyed@@GOACC_2.0.1+0x164>
   1bd8c:	mov	w0, #0x2                   	// #2
   1bd90:	bl	1d710 <acc_on_device@@OACC_2.0+0x48>
   1bd94:	mov	x0, x23
   1bd98:	blr	x19
   1bd9c:	bl	1d770 <acc_on_device@@OACC_2.0+0xa8>
   1bda0:	mov	sp, x29
   1bda4:	ldp	x19, x20, [sp, #16]
   1bda8:	ldp	x21, x22, [sp, #32]
   1bdac:	ldp	x23, x24, [sp, #48]
   1bdb0:	ldp	x25, x26, [sp, #64]
   1bdb4:	ldp	x27, x28, [sp, #80]
   1bdb8:	ldp	x29, x30, [sp], #352
   1bdbc:	ret
   1bdc0:	ldrh	w0, [x26, x1, lsl #1]
   1bdc4:	and	w3, w0, #0xff
   1bdc8:	cmp	w3, #0x8
   1bdcc:	b.ne	1be1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x150>  // b.any
   1bdd0:	cmp	w4, w1
   1bdd4:	b.le	1be28 <GOACC_parallel_keyed@@GOACC_2.0.1+0x15c>
   1bdd8:	ldrh	w3, [x26, x2, lsl #1]
   1bddc:	and	w3, w3, #0xff
   1bde0:	ldr	x6, [x21, x1, lsl #3]
   1bde4:	cmp	x6, #0x8
   1bde8:	b.eq	1be1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x150>  // b.none
   1bdec:	cmp	w3, #0x4
   1bdf0:	b.ne	1be18 <GOACC_parallel_keyed@@GOACC_2.0.1+0x14c>  // b.any
   1bdf4:	ldr	x3, [x21, x2, lsl #3]
   1bdf8:	cbnz	x3, 1be18 <GOACC_parallel_keyed@@GOACC_2.0.1+0x14c>
   1bdfc:	ldr	x3, [x23, x2, lsl #3]
   1be00:	ldr	x6, [x23, x1, lsl #3]
   1be04:	ldr	x3, [x3]
   1be08:	cmp	x6, x3
   1be0c:	b.ne	1be18 <GOACC_parallel_keyed@@GOACC_2.0.1+0x14c>  // b.any
   1be10:	strh	w0, [x26, x2, lsl #1]
   1be14:	str	x5, [x21, x2, lsl #3]
   1be18:	str	xzr, [x23, x1, lsl #3]
   1be1c:	add	x1, x1, #0x1
   1be20:	add	x2, x2, #0x1
   1be24:	b	1bd80 <GOACC_parallel_keyed@@GOACC_2.0.1+0xb4>
   1be28:	mov	w3, #0xffff                	// #65535
   1be2c:	b	1bde0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x114>
   1be30:	ldr	w0, [x25, #16]
   1be34:	cmp	w0, #0x2
   1be38:	b.eq	1bf10 <GOACC_parallel_keyed@@GOACC_2.0.1+0x244>  // b.none
   1be3c:	add	x0, x29, #0x160
   1be40:	stp	x0, x0, [x29, #120]
   1be44:	add	x0, x29, #0x150
   1be48:	add	x28, x29, #0x78
   1be4c:	add	x27, x29, #0x68
   1be50:	str	x0, [x29, #136]
   1be54:	mov	w0, #0xfffffff0            	// #-16
   1be58:	mov	w22, #0xfffffffe            	// #-2
   1be5c:	str	xzr, [x29, #104]
   1be60:	str	wzr, [x29, #112]
   1be64:	str	w0, [x29, #144]
   1be68:	mov	w0, #0xffffff80            	// #-128
   1be6c:	str	w0, [x29, #148]
   1be70:	ldr	w1, [x29, #144]
   1be74:	ldr	x0, [x29, #120]
   1be78:	tbnz	w1, #31, 1c024 <GOACC_parallel_keyed@@GOACC_2.0.1+0x358>
   1be7c:	add	x1, x0, #0xb
   1be80:	and	x1, x1, #0xfffffffffffffff8
   1be84:	str	x1, [x29, #120]
   1be88:	ldr	w20, [x0]
   1be8c:	cbnz	w20, 1bf1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x250>
   1be90:	ldr	x1, [x25, #248]
   1be94:	mov	w0, w22
   1be98:	blr	x1
   1be9c:	ldr	w0, [x25, #8]
   1bea0:	tbnz	w0, #1, 1c044 <GOACC_parallel_keyed@@GOACC_2.0.1+0x378>
   1bea4:	str	x19, [x29, #152]
   1bea8:	add	x19, x19, #0x1
   1beac:	str	x19, [x29, #160]
   1beb0:	add	x19, x25, #0xa8
   1beb4:	mov	w0, #0x1                   	// #1
   1beb8:	ldaxr	w1, [x19]
   1bebc:	cbnz	w1, 1bec8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1fc>
   1bec0:	stxr	w2, w0, [x19]
   1bec4:	cbnz	w2, 1beb8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1ec>
   1bec8:	cmp	w1, #0x0
   1becc:	b.eq	1bed8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x20c>  // b.none
   1bed0:	mov	x0, x19
   1bed4:	bl	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
   1bed8:	add	x1, x29, #0x98
   1bedc:	add	x0, x25, #0xa0
   1bee0:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   1bee4:	mov	x27, x0
   1bee8:	ldxr	w0, [x19]
   1beec:	stlxr	w1, wzr, [x19]
   1bef0:	cbnz	w1, 1bee8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x21c>
   1bef4:	tbz	w0, #31, 1bf00 <GOACC_parallel_keyed@@GOACC_2.0.1+0x234>
   1bef8:	mov	x0, x19
   1befc:	bl	15980 <omp_test_nest_lock@OMP_1.0+0x208>
   1bf00:	cbnz	x27, 1c040 <GOACC_parallel_keyed@@GOACC_2.0.1+0x374>
   1bf04:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1bf08:	add	x0, x0, #0xebf
   1bf0c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1bf10:	mov	x0, x23
   1bf14:	blr	x19
   1bf18:	b	1bda0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xd4>
   1bf1c:	ubfx	x1, x20, #16, #12
   1bf20:	cbz	w1, 1bf30 <GOACC_parallel_keyed@@GOACC_2.0.1+0x264>
   1bf24:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1bf28:	add	x0, x0, #0xe54
   1bf2c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1bf30:	lsr	w0, w20, #28
   1bf34:	and	w1, w20, #0xffff
   1bf38:	cmp	w0, #0x2
   1bf3c:	b.eq	1bfb8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2ec>  // b.none
   1bf40:	cmp	w0, #0x3
   1bf44:	b.eq	1c004 <GOACC_parallel_keyed@@GOACC_2.0.1+0x338>  // b.none
   1bf48:	cmp	w0, #0x1
   1bf4c:	b.ne	1c014 <GOACC_parallel_keyed@@GOACC_2.0.1+0x348>  // b.any
   1bf50:	ldp	x0, x6, [x29, #120]
   1bf54:	mov	x4, #0x0                   	// #0
   1bf58:	mov	w2, #0x0                   	// #0
   1bf5c:	lsr	w3, w1, w4
   1bf60:	tbz	w3, #0, 1bf84 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2b8>
   1bf64:	ldr	w5, [x29, #144]
   1bf68:	tbnz	w5, #31, 1bf9c <GOACC_parallel_keyed@@GOACC_2.0.1+0x2d0>
   1bf6c:	add	x3, x0, #0xb
   1bf70:	mov	w2, #0x1                   	// #1
   1bf74:	and	x3, x3, #0xfffffffffffffff8
   1bf78:	ldr	w0, [x0]
   1bf7c:	str	w0, [x27, x4, lsl #2]
   1bf80:	mov	x0, x3
   1bf84:	add	x4, x4, #0x1
   1bf88:	cmp	x4, #0x3
   1bf8c:	b.ne	1bf5c <GOACC_parallel_keyed@@GOACC_2.0.1+0x290>  // b.any
   1bf90:	cbz	w2, 1be70 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1a4>
   1bf94:	str	x0, [x29, #120]
   1bf98:	b	1be70 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1a4>
   1bf9c:	add	w3, w5, #0x8
   1bfa0:	str	w3, [x29, #144]
   1bfa4:	cmp	w3, #0x0
   1bfa8:	b.gt	1bf6c <GOACC_parallel_keyed@@GOACC_2.0.1+0x2a0>
   1bfac:	mov	x3, x0
   1bfb0:	add	x0, x6, w5, sxtw
   1bfb4:	b	1bf78 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2ac>
   1bfb8:	mov	w0, #0xffff                	// #65535
   1bfbc:	mov	w22, w1
   1bfc0:	cmp	w1, w0
   1bfc4:	b.ne	1be70 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1a4>  // b.any
   1bfc8:	ldr	w1, [x29, #144]
   1bfcc:	ldr	x0, [x29, #120]
   1bfd0:	tbnz	w1, #31, 1bfe8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x31c>
   1bfd4:	add	x1, x0, #0xb
   1bfd8:	and	x1, x1, #0xfffffffffffffff8
   1bfdc:	str	x1, [x29, #120]
   1bfe0:	ldr	w22, [x0]
   1bfe4:	b	1be70 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1a4>
   1bfe8:	add	w2, w1, #0x8
   1bfec:	str	w2, [x29, #144]
   1bff0:	cmp	w2, #0x0
   1bff4:	b.gt	1bfd4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x308>
   1bff8:	ldr	x0, [x29, #128]
   1bffc:	add	x0, x0, w1, sxtw
   1c000:	b	1bfe0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x314>
   1c004:	mov	x2, x28
   1c008:	mov	w0, w22
   1c00c:	bl	1bbf4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   1c010:	b	1be70 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1a4>
   1c014:	mov	w1, w0
   1c018:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c01c:	add	x0, x0, #0xe8c
   1c020:	b	1bf2c <GOACC_parallel_keyed@@GOACC_2.0.1+0x260>
   1c024:	add	w2, w1, #0x8
   1c028:	str	w2, [x29, #144]
   1c02c:	cmp	w2, #0x0
   1c030:	b.gt	1be7c <GOACC_parallel_keyed@@GOACC_2.0.1+0x1b0>
   1c034:	ldr	x0, [x29, #128]
   1c038:	add	x0, x0, w1, sxtw
   1c03c:	b	1be88 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1bc>
   1c040:	ldr	x19, [x27, #24]
   1c044:	mov	x4, x21
   1c048:	mov	x3, #0x0                   	// #0
   1c04c:	mov	x5, x26
   1c050:	mov	x2, x23
   1c054:	mov	x1, x24
   1c058:	mov	x0, x25
   1c05c:	mov	w7, #0x0                   	// #0
   1c060:	mov	w6, #0x1                   	// #1
   1c064:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1c068:	mov	x21, x0
   1c06c:	lsl	x0, x24, #3
   1c070:	add	x0, x0, #0xf
   1c074:	and	x0, x0, #0xfffffffffffffff0
   1c078:	sub	sp, sp, x0
   1c07c:	mov	x3, sp
   1c080:	mov	w1, w20
   1c084:	cmp	x24, w20, uxtw
   1c088:	b.hi	1c0c8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3fc>  // b.pmore
   1c08c:	ldr	x7, [x25, #184]
   1c090:	mov	x6, x21
   1c094:	add	x5, x29, #0x68
   1c098:	mov	w4, w22
   1c09c:	mov	x2, x23
   1c0a0:	mov	x1, x24
   1c0a4:	mov	x0, x19
   1c0a8:	blr	x7
   1c0ac:	cmn	w22, #0x2
   1c0b0:	b.cc	1c0f8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x42c>  // b.lo, b.ul, b.last
   1c0b4:	b.ne	1c0fc <GOACC_parallel_keyed@@GOACC_2.0.1+0x430>  // b.any
   1c0b8:	mov	w1, #0x1                   	// #1
   1c0bc:	mov	x0, x21
   1c0c0:	bl	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1c0c4:	b	1c14c <GOACC_parallel_keyed@@GOACC_2.0.1+0x480>
   1c0c8:	add	x0, x21, x1, lsl #5
   1c0cc:	add	w20, w20, #0x1
   1c0d0:	mov	x4, x0
   1c0d4:	ldr	x2, [x0, #64]
   1c0d8:	ldr	x4, [x4, #80]
   1c0dc:	ldr	x0, [x2, #24]
   1c0e0:	ldr	x2, [x2, #16]
   1c0e4:	add	x0, x0, x4
   1c0e8:	ldr	x2, [x2, #16]
   1c0ec:	add	x0, x0, x2
   1c0f0:	str	x0, [x3, x1, lsl #3]
   1c0f4:	b	1c080 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3b4>
   1c0f8:	tbnz	w22, #31, 1c0b8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3ec>
   1c0fc:	add	x3, x21, #0x40
   1c100:	mov	x0, #0x0                   	// #0
   1c104:	ldr	x2, [x21, #48]
   1c108:	b	1c128 <GOACC_parallel_keyed@@GOACC_2.0.1+0x45c>
   1c10c:	lsl	x1, x0, #5
   1c110:	ldr	x1, [x3, x1]
   1c114:	cbz	x1, 1c124 <GOACC_parallel_keyed@@GOACC_2.0.1+0x458>
   1c118:	ldr	x1, [x1, #32]
   1c11c:	cmp	x1, #0x1
   1c120:	b.eq	1c138 <GOACC_parallel_keyed@@GOACC_2.0.1+0x46c>  // b.none
   1c124:	add	x0, x0, #0x1
   1c128:	cmp	x2, x0
   1c12c:	b.ne	1c10c <GOACC_parallel_keyed@@GOACC_2.0.1+0x440>  // b.any
   1c130:	mov	w1, #0x0                   	// #0
   1c134:	b	1c0bc <GOACC_parallel_keyed@@GOACC_2.0.1+0x3f0>
   1c138:	ldr	x0, [x21, #56]
   1c13c:	mov	w1, w22
   1c140:	ldr	x2, [x0, #192]
   1c144:	mov	x0, x21
   1c148:	blr	x2
   1c14c:	ldr	x1, [x25, #248]
   1c150:	mov	w0, #0xfffffffe            	// #-2
   1c154:	blr	x1
   1c158:	b	1bda0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xd4>

000000000001c15c <GOACC_parallel@@GOACC_2.0>:
   1c15c:	stp	x29, x30, [sp, #-32]!
   1c160:	mov	w0, #0x2                   	// #2
   1c164:	mov	x29, sp
   1c168:	stp	x19, x20, [sp, #16]
   1c16c:	mov	x20, x3
   1c170:	mov	x19, x1
   1c174:	bl	1d710 <acc_on_device@@OACC_2.0+0x48>
   1c178:	mov	x0, x20
   1c17c:	blr	x19
   1c180:	bl	1d770 <acc_on_device@@OACC_2.0+0xa8>
   1c184:	ldp	x19, x20, [sp, #16]
   1c188:	ldp	x29, x30, [sp], #32
   1c18c:	ret

000000000001c190 <GOACC_data_start@@GOACC_2.0>:
   1c190:	stp	x29, x30, [sp, #-80]!
   1c194:	mov	x29, sp
   1c198:	stp	x19, x20, [sp, #16]
   1c19c:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1c1a0:	stp	x21, x22, [sp, #32]
   1c1a4:	mvn	w21, w0
   1c1a8:	ldr	w0, [x20, #1544]
   1c1ac:	stp	x23, x24, [sp, #48]
   1c1b0:	mov	x22, x1
   1c1b4:	mov	x23, x2
   1c1b8:	stp	x25, x26, [sp, #64]
   1c1bc:	mov	x24, x3
   1c1c0:	mov	x25, x4
   1c1c4:	cbz	w0, 1c1f4 <GOACC_data_start@@GOACC_2.0+0x64>
   1c1c8:	mov	x6, x4
   1c1cc:	mov	x4, x2
   1c1d0:	adrp	x2, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c1d4:	add	x2, x2, #0xfd9
   1c1d8:	mov	x5, x3
   1c1dc:	add	x2, x2, #0x15
   1c1e0:	mov	x3, x1
   1c1e4:	mov	w0, #0x0                   	// #0
   1c1e8:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c1ec:	add	x1, x1, #0xe23
   1c1f0:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1c1f4:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1c1f8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1c1fc:	ldr	x0, [x0, #4048]
   1c200:	mrs	x1, tpidr_el0
   1c204:	ldr	x19, [x1, x0]
   1c208:	ldr	x26, [x19, #8]
   1c20c:	ldr	w0, [x26, #8]
   1c210:	orr	w21, w21, w0
   1c214:	tbz	w21, #0, 1c260 <GOACC_data_start@@GOACC_2.0+0xd0>
   1c218:	mov	x1, #0x0                   	// #0
   1c21c:	mov	w7, #0x0                   	// #0
   1c220:	mov	w6, #0x1                   	// #1
   1c224:	mov	x5, #0x0                   	// #0
   1c228:	mov	x4, #0x0                   	// #0
   1c22c:	mov	x3, #0x0                   	// #0
   1c230:	mov	x2, #0x0                   	// #0
   1c234:	mov	x0, #0x0                   	// #0
   1c238:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1c23c:	ldr	x1, [x19, #24]
   1c240:	str	x1, [x0, #40]
   1c244:	str	x0, [x19, #24]
   1c248:	ldp	x19, x20, [sp, #16]
   1c24c:	ldp	x21, x22, [sp, #32]
   1c250:	ldp	x23, x24, [sp, #48]
   1c254:	ldp	x25, x26, [sp, #64]
   1c258:	ldp	x29, x30, [sp], #80
   1c25c:	ret
   1c260:	ldr	w0, [x20, #1544]
   1c264:	cbz	w0, 1c284 <GOACC_data_start@@GOACC_2.0+0xf4>
   1c268:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c26c:	add	x0, x0, #0xfd9
   1c270:	add	x2, x0, #0x15
   1c274:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c278:	mov	w0, #0x0                   	// #0
   1c27c:	add	x1, x1, #0xedd
   1c280:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1c284:	mov	x5, x25
   1c288:	mov	x4, x24
   1c28c:	mov	x2, x23
   1c290:	mov	x1, x22
   1c294:	mov	x0, x26
   1c298:	mov	w7, #0x0                   	// #0
   1c29c:	mov	w6, #0x1                   	// #1
   1c2a0:	mov	x3, #0x0                   	// #0
   1c2a4:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1c2a8:	mov	x21, x0
   1c2ac:	ldr	w0, [x20, #1544]
   1c2b0:	cbz	w0, 1c2d0 <GOACC_data_start@@GOACC_2.0+0x140>
   1c2b4:	adrp	x2, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c2b8:	add	x2, x2, #0xfd9
   1c2bc:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c2c0:	add	x2, x2, #0x15
   1c2c4:	add	x1, x1, #0xef5
   1c2c8:	mov	w0, #0x0                   	// #0
   1c2cc:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1c2d0:	ldr	x0, [x19, #24]
   1c2d4:	str	x0, [x21, #40]
   1c2d8:	str	x21, [x19, #24]
   1c2dc:	b	1c248 <GOACC_data_start@@GOACC_2.0+0xb8>

000000000001c2e0 <GOACC_data_end@@GOACC_2.0>:
   1c2e0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1c2e4:	ldr	x0, [x0, #4048]
   1c2e8:	mrs	x1, tpidr_el0
   1c2ec:	stp	x29, x30, [sp, #-48]!
   1c2f0:	mov	x29, sp
   1c2f4:	str	x21, [sp, #32]
   1c2f8:	ldr	x21, [x1, x0]
   1c2fc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1c300:	stp	x19, x20, [sp, #16]
   1c304:	mov	x19, x0
   1c308:	ldr	w1, [x0, #1544]
   1c30c:	ldr	x20, [x21, #24]
   1c310:	cbz	w1, 1c330 <GOACC_data_end@@GOACC_2.0+0x50>
   1c314:	adrp	x2, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c318:	add	x2, x2, #0xfd9
   1c31c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c320:	add	x2, x2, #0x26
   1c324:	add	x1, x1, #0xf0e
   1c328:	mov	w0, #0x0                   	// #0
   1c32c:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1c330:	ldr	x0, [x20, #40]
   1c334:	str	x0, [x21, #24]
   1c338:	mov	w1, #0x1                   	// #1
   1c33c:	mov	x0, x20
   1c340:	bl	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1c344:	ldr	w0, [x19, #1544]
   1c348:	cbz	w0, 1c374 <GOACC_data_end@@GOACC_2.0+0x94>
   1c34c:	ldp	x19, x20, [sp, #16]
   1c350:	adrp	x2, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c354:	ldr	x21, [sp, #32]
   1c358:	add	x2, x2, #0xfd9
   1c35c:	ldp	x29, x30, [sp], #48
   1c360:	add	x2, x2, #0x26
   1c364:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c368:	mov	w0, #0x0                   	// #0
   1c36c:	add	x1, x1, #0xf26
   1c370:	b	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1c374:	ldp	x19, x20, [sp, #16]
   1c378:	ldr	x21, [sp, #32]
   1c37c:	ldp	x29, x30, [sp], #48
   1c380:	ret

000000000001c384 <GOACC_enter_exit_data@@GOACC_2.0>:
   1c384:	stp	x29, x30, [sp, #-272]!
   1c388:	mov	x29, sp
   1c38c:	stp	x19, x20, [sp, #16]
   1c390:	mov	w19, w0
   1c394:	mov	x20, x2
   1c398:	stp	x21, x22, [sp, #32]
   1c39c:	mov	x21, x3
   1c3a0:	mov	x22, x4
   1c3a4:	stp	x23, x24, [sp, #48]
   1c3a8:	mov	x23, x1
   1c3ac:	mov	w24, w6
   1c3b0:	stp	x25, x26, [sp, #64]
   1c3b4:	mov	w26, w5
   1c3b8:	stp	x27, x28, [sp, #80]
   1c3bc:	str	q0, [sp, #128]
   1c3c0:	str	q1, [sp, #144]
   1c3c4:	str	q2, [sp, #160]
   1c3c8:	str	q3, [sp, #176]
   1c3cc:	str	q4, [sp, #192]
   1c3d0:	str	q5, [sp, #208]
   1c3d4:	str	q6, [sp, #224]
   1c3d8:	str	q7, [sp, #240]
   1c3dc:	str	x7, [sp, #264]
   1c3e0:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1c3e4:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1c3e8:	ldr	x0, [x0, #4048]
   1c3ec:	mrs	x1, tpidr_el0
   1c3f0:	ldr	x0, [x1, x0]
   1c3f4:	ldr	x25, [x0, #8]
   1c3f8:	ldr	w0, [x25, #8]
   1c3fc:	orn	w19, w0, w19
   1c400:	tbnz	w19, #0, 1c55c <GOACC_enter_exit_data@@GOACC_2.0+0x1d8>
   1c404:	cbz	w24, 1c438 <GOACC_enter_exit_data@@GOACC_2.0+0xb4>
   1c408:	add	x0, sp, #0x110
   1c40c:	stp	x0, x0, [sp, #96]
   1c410:	add	x0, sp, #0x100
   1c414:	str	x0, [sp, #112]
   1c418:	mov	w0, #0xfffffff8            	// #-8
   1c41c:	str	w0, [sp, #120]
   1c420:	mov	w0, #0xffffff80            	// #-128
   1c424:	add	x2, sp, #0x60
   1c428:	mov	w1, w24
   1c42c:	str	w0, [sp, #124]
   1c430:	mov	w0, w26
   1c434:	bl	1bbf4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   1c438:	cbz	x23, 1c470 <GOACC_enter_exit_data@@GOACC_2.0+0xec>
   1c43c:	ldrb	w0, [x22]
   1c440:	cmp	w0, #0x7
   1c444:	cset	w24, eq  // eq = none
   1c448:	cmp	w0, #0x82
   1c44c:	csinc	w24, w24, wzr, ne  // ne = any
   1c450:	ldr	x1, [x25, #248]
   1c454:	mov	w0, w26
   1c458:	blr	x1
   1c45c:	mov	x0, #0x0                   	// #0
   1c460:	cmp	x0, x23
   1c464:	b.ne	1c478 <GOACC_enter_exit_data@@GOACC_2.0+0xf4>  // b.any
   1c468:	mov	x19, #0x0                   	// #0
   1c46c:	b	1c610 <GOACC_enter_exit_data@@GOACC_2.0+0x28c>
   1c470:	mov	w24, #0x0                   	// #0
   1c474:	b	1c450 <GOACC_enter_exit_data@@GOACC_2.0+0xcc>
   1c478:	ldrh	w1, [x22, x0, lsl #1]
   1c47c:	and	w1, w1, #0xff
   1c480:	sub	w2, w1, #0x4
   1c484:	and	w2, w2, #0xff
   1c488:	cmp	w2, #0x1
   1c48c:	b.hi	1c498 <GOACC_enter_exit_data@@GOACC_2.0+0x114>  // b.pmore
   1c490:	add	x0, x0, #0x1
   1c494:	b	1c460 <GOACC_enter_exit_data@@GOACC_2.0+0xdc>
   1c498:	cmp	w1, #0x6
   1c49c:	b.eq	1c4d0 <GOACC_enter_exit_data@@GOACC_2.0+0x14c>  // b.none
   1c4a0:	tst	w1, #0x7e
   1c4a4:	b.eq	1c4d0 <GOACC_enter_exit_data@@GOACC_2.0+0x14c>  // b.none
   1c4a8:	and	w0, w1, #0xffffffef
   1c4ac:	cmp	w0, #0x7
   1c4b0:	b.eq	1c468 <GOACC_enter_exit_data@@GOACC_2.0+0xe4>  // b.none
   1c4b4:	and	w0, w1, #0x7f
   1c4b8:	mov	x19, #0x0                   	// #0
   1c4bc:	cmp	w0, #0x2
   1c4c0:	b.eq	1c610 <GOACC_enter_exit_data@@GOACC_2.0+0x28c>  // b.none
   1c4c4:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c4c8:	add	x0, x0, #0xf3f
   1c4cc:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1c4d0:	mov	x19, #0x0                   	// #0
   1c4d4:	add	w0, w19, #0x1
   1c4d8:	lsl	x2, x19, #1
   1c4dc:	add	x3, x22, x19, lsl #1
   1c4e0:	cmp	x23, w0, sxtw
   1c4e4:	lsl	x0, x19, #3
   1c4e8:	b.ls	1c504 <GOACC_enter_exit_data@@GOACC_2.0+0x180>  // b.plast
   1c4ec:	add	x1, x22, w19, sxtw #1
   1c4f0:	ldrb	w1, [x1, #2]
   1c4f4:	cmp	w1, #0x5
   1c4f8:	b.eq	1c578 <GOACC_enter_exit_data@@GOACC_2.0+0x1f4>  // b.none
   1c4fc:	cmp	w1, #0x4
   1c500:	b.eq	1c598 <GOACC_enter_exit_data@@GOACC_2.0+0x214>  // b.none
   1c504:	ldrb	w1, [x22, x2]
   1c508:	cmp	w1, #0x80
   1c50c:	b.eq	1c538 <GOACC_enter_exit_data@@GOACC_2.0+0x1b4>  // b.none
   1c510:	b.hi	1c530 <GOACC_enter_exit_data@@GOACC_2.0+0x1ac>  // b.pmore
   1c514:	cbz	w1, 1c538 <GOACC_enter_exit_data@@GOACC_2.0+0x1b4>
   1c518:	cmp	w1, #0x1
   1c51c:	b.ne	1c4c4 <GOACC_enter_exit_data@@GOACC_2.0+0x140>  // b.any
   1c520:	ldr	x1, [x21, x0]
   1c524:	ldr	x0, [x20, x0]
   1c528:	bl	8710 <acc_copyin@plt>
   1c52c:	b	1c544 <GOACC_enter_exit_data@@GOACC_2.0+0x1c0>
   1c530:	cmp	w1, #0x81
   1c534:	b	1c51c <GOACC_enter_exit_data@@GOACC_2.0+0x198>
   1c538:	ldr	x1, [x21, x0]
   1c53c:	ldr	x0, [x20, x0]
   1c540:	bl	8740 <acc_create@plt>
   1c544:	add	x19, x19, #0x1
   1c548:	cmp	x23, x19
   1c54c:	b.hi	1c4d4 <GOACC_enter_exit_data@@GOACC_2.0+0x150>  // b.pmore
   1c550:	ldr	x1, [x25, #248]
   1c554:	mov	w0, #0xfffffffe            	// #-2
   1c558:	blr	x1
   1c55c:	ldp	x19, x20, [sp, #16]
   1c560:	ldp	x21, x22, [sp, #32]
   1c564:	ldp	x23, x24, [sp, #48]
   1c568:	ldp	x25, x26, [sp, #64]
   1c56c:	ldp	x27, x28, [sp, #80]
   1c570:	ldp	x29, x30, [sp], #272
   1c574:	ret
   1c578:	mov	w24, #0x3                   	// #3
   1c57c:	add	x2, x21, x0
   1c580:	add	x1, x20, x0
   1c584:	sxtw	x0, w24
   1c588:	sub	w24, w24, #0x1
   1c58c:	bl	1e6f0 <acc_update_self_async@@OACC_2.5+0x14>
   1c590:	add	x19, x19, w24, sxtw
   1c594:	b	1c544 <GOACC_enter_exit_data@@GOACC_2.0+0x1c0>
   1c598:	mov	w24, #0x2                   	// #2
   1c59c:	b	1c57c <GOACC_enter_exit_data@@GOACC_2.0+0x1f8>
   1c5a0:	ldrh	w0, [x22, x19, lsl #1]
   1c5a4:	lsl	x27, x19, #3
   1c5a8:	and	w1, w0, #0xff
   1c5ac:	add	w0, w19, #0x1
   1c5b0:	cmp	x23, w0, sxtw
   1c5b4:	b.ls	1c5d0 <GOACC_enter_exit_data@@GOACC_2.0+0x24c>  // b.plast
   1c5b8:	add	x0, x22, w19, sxtw #1
   1c5bc:	ldrb	w0, [x0, #2]
   1c5c0:	cmp	w0, #0x5
   1c5c4:	b.eq	1c648 <GOACC_enter_exit_data@@GOACC_2.0+0x2c4>  // b.none
   1c5c8:	cmp	w0, #0x4
   1c5cc:	b.eq	1c67c <GOACC_enter_exit_data@@GOACC_2.0+0x2f8>  // b.none
   1c5d0:	cmp	w1, #0x17
   1c5d4:	b.eq	1c5ec <GOACC_enter_exit_data@@GOACC_2.0+0x268>  // b.none
   1c5d8:	b.hi	1c61c <GOACC_enter_exit_data@@GOACC_2.0+0x298>  // b.pmore
   1c5dc:	cmp	w1, #0x2
   1c5e0:	b.eq	1c624 <GOACC_enter_exit_data@@GOACC_2.0+0x2a0>  // b.none
   1c5e4:	cmp	w1, #0x7
   1c5e8:	b.ne	1c4c4 <GOACC_enter_exit_data@@GOACC_2.0+0x140>  // b.any
   1c5ec:	ldr	x1, [x21, x27]
   1c5f0:	ldr	x0, [x20, x27]
   1c5f4:	bl	8830 <acc_is_present@plt>
   1c5f8:	cbz	w0, 1c60c <GOACC_enter_exit_data@@GOACC_2.0+0x288>
   1c5fc:	ldr	x0, [x20, x27]
   1c600:	ldr	x1, [x21, x27]
   1c604:	cbz	w24, 1c638 <GOACC_enter_exit_data@@GOACC_2.0+0x2b4>
   1c608:	bl	8720 <acc_delete_finalize@plt>
   1c60c:	add	x19, x19, #0x1
   1c610:	cmp	x19, x23
   1c614:	b.cc	1c5a0 <GOACC_enter_exit_data@@GOACC_2.0+0x21c>  // b.lo, b.ul, b.last
   1c618:	b	1c550 <GOACC_enter_exit_data@@GOACC_2.0+0x1cc>
   1c61c:	cmp	w1, #0x82
   1c620:	b.ne	1c4c4 <GOACC_enter_exit_data@@GOACC_2.0+0x140>  // b.any
   1c624:	ldr	x0, [x20, x27]
   1c628:	ldr	x1, [x21, x27]
   1c62c:	cbz	w24, 1c640 <GOACC_enter_exit_data@@GOACC_2.0+0x2bc>
   1c630:	bl	8690 <acc_copyout_finalize@plt>
   1c634:	b	1c60c <GOACC_enter_exit_data@@GOACC_2.0+0x288>
   1c638:	bl	8960 <acc_delete@plt>
   1c63c:	b	1c60c <GOACC_enter_exit_data@@GOACC_2.0+0x288>
   1c640:	bl	89d0 <acc_copyout@plt>
   1c644:	b	1c60c <GOACC_enter_exit_data@@GOACC_2.0+0x288>
   1c648:	mov	w28, #0x3                   	// #3
   1c64c:	and	w0, w1, #0x7f
   1c650:	mov	w5, w28
   1c654:	cmp	w0, #0x2
   1c658:	sub	w28, w28, #0x1
   1c65c:	ldr	x1, [x21, x27]
   1c660:	mov	w4, w24
   1c664:	ldr	x0, [x20, x27]
   1c668:	mov	w3, w26
   1c66c:	cset	w2, eq  // eq = none
   1c670:	add	x19, x19, w28, sxtw
   1c674:	bl	1e8a4 <acc_update_self_async@@OACC_2.5+0x1c8>
   1c678:	b	1c60c <GOACC_enter_exit_data@@GOACC_2.0+0x288>
   1c67c:	mov	w28, #0x2                   	// #2
   1c680:	b	1c64c <GOACC_enter_exit_data@@GOACC_2.0+0x2c8>

000000000001c684 <GOACC_update@@GOACC_2.0>:
   1c684:	stp	x29, x30, [sp, #-256]!
   1c688:	mov	x29, sp
   1c68c:	stp	x19, x20, [sp, #16]
   1c690:	mov	w20, w0
   1c694:	mov	x19, x2
   1c698:	stp	x21, x22, [sp, #32]
   1c69c:	mov	x21, x3
   1c6a0:	stp	x23, x24, [sp, #48]
   1c6a4:	mov	x23, x1
   1c6a8:	mov	x24, x4
   1c6ac:	stp	x25, x26, [sp, #64]
   1c6b0:	mov	w25, w5
   1c6b4:	mov	w26, w6
   1c6b8:	str	q0, [sp, #112]
   1c6bc:	str	q1, [sp, #128]
   1c6c0:	str	q2, [sp, #144]
   1c6c4:	str	q3, [sp, #160]
   1c6c8:	str	q4, [sp, #176]
   1c6cc:	str	q5, [sp, #192]
   1c6d0:	str	q6, [sp, #208]
   1c6d4:	str	q7, [sp, #224]
   1c6d8:	str	x7, [sp, #248]
   1c6dc:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1c6e0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1c6e4:	ldr	x0, [x0, #4048]
   1c6e8:	mrs	x1, tpidr_el0
   1c6ec:	ldr	x0, [x1, x0]
   1c6f0:	ldr	x22, [x0, #8]
   1c6f4:	ldr	w0, [x22, #8]
   1c6f8:	orn	w20, w0, w20
   1c6fc:	tbnz	w20, #0, 1c75c <GOACC_update@@GOACC_2.0+0xd8>
   1c700:	cbz	w26, 1c734 <GOACC_update@@GOACC_2.0+0xb0>
   1c704:	add	x0, sp, #0x100
   1c708:	stp	x0, x0, [sp, #80]
   1c70c:	add	x0, sp, #0xf0
   1c710:	str	x0, [sp, #96]
   1c714:	mov	w0, #0xfffffff8            	// #-8
   1c718:	str	w0, [sp, #104]
   1c71c:	mov	w0, #0xffffff80            	// #-128
   1c720:	add	x2, sp, #0x50
   1c724:	mov	w1, w26
   1c728:	str	w0, [sp, #108]
   1c72c:	mov	w0, w25
   1c730:	bl	1bbf4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   1c734:	ldr	x1, [x22, #248]
   1c738:	mov	w0, w25
   1c73c:	mov	x20, #0x0                   	// #0
   1c740:	blr	x1
   1c744:	mov	w0, #0x0                   	// #0
   1c748:	cmp	x20, x23
   1c74c:	b.ne	1c774 <GOACC_update@@GOACC_2.0+0xf0>  // b.any
   1c750:	ldr	x1, [x22, #248]
   1c754:	mov	w0, #0xfffffffe            	// #-2
   1c758:	blr	x1
   1c75c:	ldp	x19, x20, [sp, #16]
   1c760:	ldp	x21, x22, [sp, #32]
   1c764:	ldp	x23, x24, [sp, #48]
   1c768:	ldp	x25, x26, [sp, #64]
   1c76c:	ldp	x29, x30, [sp], #256
   1c770:	ret
   1c774:	ldrh	w1, [x24, x20, lsl #1]
   1c778:	and	w1, w1, #0xff
   1c77c:	cmp	w1, #0x1d
   1c780:	b.eq	1c7e4 <GOACC_update@@GOACC_2.0+0x160>  // b.none
   1c784:	b.hi	1c7c4 <GOACC_update@@GOACC_2.0+0x140>  // b.pmore
   1c788:	cmp	w1, #0x2
   1c78c:	b.eq	1c840 <GOACC_update@@GOACC_2.0+0x1bc>  // b.none
   1c790:	b.hi	1c7a8 <GOACC_update@@GOACC_2.0+0x124>  // b.pmore
   1c794:	cmp	w1, #0x1
   1c798:	b.eq	1c81c <GOACC_update@@GOACC_2.0+0x198>  // b.none
   1c79c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c7a0:	add	x0, x0, #0xf70
   1c7a4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1c7a8:	sub	w2, w1, #0x4
   1c7ac:	and	w2, w2, #0xff
   1c7b0:	cmp	w2, #0x1
   1c7b4:	b.hi	1c79c <GOACC_update@@GOACC_2.0+0x118>  // b.pmore
   1c7b8:	add	x20, x20, #0x1
   1c7bc:	add	x19, x19, #0x8
   1c7c0:	b	1c748 <GOACC_update@@GOACC_2.0+0xc4>
   1c7c4:	cmp	w1, #0x81
   1c7c8:	b.eq	1c82c <GOACC_update@@GOACC_2.0+0x1a8>  // b.none
   1c7cc:	cmp	w1, #0x82
   1c7d0:	b.ne	1c79c <GOACC_update@@GOACC_2.0+0x118>  // b.any
   1c7d4:	ldr	x1, [x21, x20, lsl #3]
   1c7d8:	ldr	x0, [x19]
   1c7dc:	bl	8a40 <acc_update_self@plt>
   1c7e0:	b	1c7e8 <GOACC_update@@GOACC_2.0+0x164>
   1c7e4:	cbnz	w0, 1c7f0 <GOACC_update@@GOACC_2.0+0x16c>
   1c7e8:	mov	w0, #0x0                   	// #0
   1c7ec:	b	1c7b8 <GOACC_update@@GOACC_2.0+0x134>
   1c7f0:	ldur	x0, [x19, #-8]
   1c7f4:	bl	8930 <acc_deviceptr@plt>
   1c7f8:	mov	x1, x0
   1c7fc:	ldr	x0, [x19]
   1c800:	ldr	x25, [x0]
   1c804:	str	x1, [x0]
   1c808:	mov	x1, #0x8                   	// #8
   1c80c:	bl	8b50 <acc_update_device@plt>
   1c810:	ldr	x0, [x19]
   1c814:	str	x25, [x0]
   1c818:	b	1c7e8 <GOACC_update@@GOACC_2.0+0x164>
   1c81c:	ldr	x1, [x21, x20, lsl #3]
   1c820:	ldr	x0, [x19]
   1c824:	bl	8830 <acc_is_present@plt>
   1c828:	cbz	w0, 1c7e8 <GOACC_update@@GOACC_2.0+0x164>
   1c82c:	ldr	x0, [x19]
   1c830:	ldr	x1, [x21, x20, lsl #3]
   1c834:	bl	8b50 <acc_update_device@plt>
   1c838:	mov	w0, #0x1                   	// #1
   1c83c:	b	1c7b8 <GOACC_update@@GOACC_2.0+0x134>
   1c840:	ldr	x1, [x21, x20, lsl #3]
   1c844:	ldr	x0, [x19]
   1c848:	bl	8830 <acc_is_present@plt>
   1c84c:	cbz	w0, 1c7e8 <GOACC_update@@GOACC_2.0+0x164>
   1c850:	b	1c7d4 <GOACC_update@@GOACC_2.0+0x150>

000000000001c854 <GOACC_wait@@GOACC_2.0>:
   1c854:	stp	x29, x30, [sp, #-224]!
   1c858:	mov	x29, sp
   1c85c:	str	q0, [sp, #48]
   1c860:	str	q1, [sp, #64]
   1c864:	str	q2, [sp, #80]
   1c868:	str	q3, [sp, #96]
   1c86c:	str	q4, [sp, #112]
   1c870:	str	q5, [sp, #128]
   1c874:	str	q6, [sp, #144]
   1c878:	str	q7, [sp, #160]
   1c87c:	stp	x2, x3, [sp, #176]
   1c880:	stp	x4, x5, [sp, #192]
   1c884:	stp	x6, x7, [sp, #208]
   1c888:	cbz	w1, 1c8bc <GOACC_wait@@GOACC_2.0+0x68>
   1c88c:	add	x2, sp, #0xe0
   1c890:	stp	x2, x2, [sp, #16]
   1c894:	add	x2, sp, #0xb0
   1c898:	str	x2, [sp, #32]
   1c89c:	mov	w2, #0xffffffd0            	// #-48
   1c8a0:	str	w2, [sp, #40]
   1c8a4:	mov	w2, #0xffffff80            	// #-128
   1c8a8:	str	w2, [sp, #44]
   1c8ac:	add	x2, sp, #0x10
   1c8b0:	bl	1bbf4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   1c8b4:	ldp	x29, x30, [sp], #224
   1c8b8:	ret
   1c8bc:	cmn	w0, #0x2
   1c8c0:	b.ne	1c8cc <GOACC_wait@@GOACC_2.0+0x78>  // b.any
   1c8c4:	bl	8660 <acc_wait_all@plt>
   1c8c8:	b	1c8b4 <GOACC_wait@@GOACC_2.0+0x60>
   1c8cc:	bl	8910 <acc_wait_all_async@plt>
   1c8d0:	b	1c8b4 <GOACC_wait@@GOACC_2.0+0x60>

000000000001c8d4 <GOACC_get_num_threads@@GOACC_2.0>:
   1c8d4:	mov	w0, #0x1                   	// #1
   1c8d8:	ret

000000000001c8dc <GOACC_get_thread_num@@GOACC_2.0>:
   1c8dc:	mov	w0, #0x0                   	// #0
   1c8e0:	ret

000000000001c8e4 <GOACC_declare@@GOACC_2.0.1>:
   1c8e4:	stp	x29, x30, [sp, #-112]!
   1c8e8:	mov	x29, sp
   1c8ec:	stp	x19, x20, [sp, #16]
   1c8f0:	mov	x20, x2
   1c8f4:	mov	x19, #0x0                   	// #0
   1c8f8:	stp	x21, x22, [sp, #32]
   1c8fc:	mov	w22, w0
   1c900:	mov	x21, x3
   1c904:	stp	x23, x24, [sp, #48]
   1c908:	mov	x24, x1
   1c90c:	mov	x23, x4
   1c910:	stp	x25, x26, [sp, #64]
   1c914:	adrp	x25, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1c918:	add	x25, x25, #0xfd0
   1c91c:	str	x27, [sp, #80]
   1c920:	cmp	x24, x19
   1c924:	b.ne	1c944 <GOACC_declare@@GOACC_2.0.1+0x60>  // b.any
   1c928:	ldp	x19, x20, [sp, #16]
   1c92c:	ldp	x21, x22, [sp, #32]
   1c930:	ldp	x23, x24, [sp, #48]
   1c934:	ldp	x25, x26, [sp, #64]
   1c938:	ldr	x27, [sp, #80]
   1c93c:	ldp	x29, x30, [sp], #112
   1c940:	ret
   1c944:	ldrh	w0, [x23, x19, lsl #1]
   1c948:	add	x4, x23, x19, lsl #1
   1c94c:	and	w5, w0, #0xff
   1c950:	sub	w0, w5, #0x4
   1c954:	and	w0, w0, #0xff
   1c958:	cmp	w0, #0x1
   1c95c:	b.ls	1c9e0 <GOACC_declare@@GOACC_2.0.1+0xfc>  // b.plast
   1c960:	cmp	w5, #0x8
   1c964:	b.hi	1c978 <GOACC_declare@@GOACC_2.0.1+0x94>  // b.pmore
   1c968:	ldrb	w0, [x25, w5, uxtw]
   1c96c:	adr	x1, 1c978 <GOACC_declare@@GOACC_2.0.1+0x94>
   1c970:	add	x0, x1, w0, sxtb #2
   1c974:	br	x0
   1c978:	cmp	w5, #0x17
   1c97c:	b.eq	1c990 <GOACC_declare@@GOACC_2.0.1+0xac>  // b.none
   1c980:	sub	w5, w5, #0x80
   1c984:	and	w5, w5, #0xff
   1c988:	cmp	w5, #0x2
   1c98c:	b.hi	1ca14 <GOACC_declare@@GOACC_2.0.1+0x130>  // b.pmore
   1c990:	add	x3, x21, x19, lsl #3
   1c994:	add	x2, x20, x19, lsl #3
   1c998:	mov	w6, #0x0                   	// #0
   1c99c:	mov	w5, #0xfffffffe            	// #-2
   1c9a0:	b	1c9d4 <GOACC_declare@@GOACC_2.0.1+0xf0>
   1c9a4:	ldr	x1, [x21, x19, lsl #3]
   1c9a8:	str	x4, [sp, #104]
   1c9ac:	ldr	x0, [x20, x19, lsl #3]
   1c9b0:	add	x26, x20, x19, lsl #3
   1c9b4:	add	x27, x21, x19, lsl #3
   1c9b8:	bl	8830 <acc_is_present@plt>
   1c9bc:	ldr	x4, [sp, #104]
   1c9c0:	cbnz	w0, 1c9e0 <GOACC_declare@@GOACC_2.0.1+0xfc>
   1c9c4:	mov	x3, x27
   1c9c8:	mov	x2, x26
   1c9cc:	mov	w6, #0x0                   	// #0
   1c9d0:	mov	w5, #0xfffffffe            	// #-2
   1c9d4:	mov	w0, w22
   1c9d8:	mov	x1, #0x1                   	// #1
   1c9dc:	bl	8a80 <GOACC_enter_exit_data@plt>
   1c9e0:	add	x19, x19, #0x1
   1c9e4:	b	1c920 <GOACC_declare@@GOACC_2.0.1+0x3c>
   1c9e8:	ldr	x1, [x21, x19, lsl #3]
   1c9ec:	add	x26, x20, x19, lsl #3
   1c9f0:	ldr	x0, [x20, x19, lsl #3]
   1c9f4:	add	x27, x21, x19, lsl #3
   1c9f8:	bl	8830 <acc_is_present@plt>
   1c9fc:	cbnz	w0, 1c9e0 <GOACC_declare@@GOACC_2.0.1+0xfc>
   1ca00:	ldr	x1, [x26]
   1ca04:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1ca08:	ldr	x2, [x27]
   1ca0c:	add	x0, x0, #0xf98
   1ca10:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ca14:	adrp	x3, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1ca18:	add	x3, x3, #0xfd9
   1ca1c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1ca20:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1ca24:	add	x3, x3, #0x35
   1ca28:	add	x1, x1, #0xfaf
   1ca2c:	add	x0, x0, #0x9ef
   1ca30:	mov	w2, #0x2cc                 	// #716
   1ca34:	bl	8b10 <__assert_fail@plt>
   1ca38:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ca3c:	ldr	x0, [x0, #848]
   1ca40:	ret
   1ca44:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ca48:	ldr	w0, [x0, #856]
   1ca4c:	ret
   1ca50:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ca54:	ldr	w0, [x0, #864]
   1ca58:	ret
   1ca5c:	mov	w0, #0x1                   	// #1
   1ca60:	ret
   1ca64:	mov	w0, #0x1                   	// #1
   1ca68:	ret
   1ca6c:	mov	w0, #0x1                   	// #1
   1ca70:	ret
   1ca74:	mov	w0, #0x0                   	// #0
   1ca78:	ret
   1ca7c:	mov	w0, #0x1                   	// #1
   1ca80:	ret
   1ca84:	mov	w0, #0x1                   	// #1
   1ca88:	ret
   1ca8c:	mov	x16, x1
   1ca90:	mov	x0, x2
   1ca94:	br	x16
   1ca98:	mov	x16, x0
   1ca9c:	mov	x0, x2
   1caa0:	br	x16
   1caa4:	ret
   1caa8:	mov	w0, #0x1                   	// #1
   1caac:	ret
   1cab0:	ret
   1cab4:	ret
   1cab8:	ret
   1cabc:	mov	x0, #0x0                   	// #0
   1cac0:	ret
   1cac4:	ret
   1cac8:	stp	x29, x30, [sp, #-16]!
   1cacc:	mov	x0, x1
   1cad0:	mov	x29, sp
   1cad4:	bl	8950 <free@plt>
   1cad8:	mov	w0, #0x1                   	// #1
   1cadc:	ldp	x29, x30, [sp], #16
   1cae0:	ret
   1cae4:	mov	x0, x1
   1cae8:	b	adb0 <fprintf@plt+0x2250>
   1caec:	mov	w0, #0x1                   	// #1
   1caf0:	ret
   1caf4:	mov	w0, #0x1                   	// #1
   1caf8:	ret
   1cafc:	ret
   1cb00:	mov	w0, #0x1                   	// #1
   1cb04:	ret
   1cb08:	ret
   1cb0c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cb10:	add	x0, x0, #0x350
   1cb14:	str	wzr, [x0, #168]
   1cb18:	b	1ceb0 <GOACC_declare@@GOACC_2.0.1+0x5cc>
   1cb1c:	nop
   1cb20:	mov	x2, x0
   1cb24:	mov	w3, #0x1                   	// #1
   1cb28:	ldaxr	w1, [x2]
   1cb2c:	cbnz	w1, 1cb38 <GOACC_declare@@GOACC_2.0.1+0x254>
   1cb30:	stxr	w4, w3, [x2]
   1cb34:	cbnz	w4, 1cb28 <GOACC_declare@@GOACC_2.0.1+0x244>
   1cb38:	cmp	w1, #0x0
   1cb3c:	b.eq	1cb44 <GOACC_declare@@GOACC_2.0.1+0x260>  // b.none
   1cb40:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
   1cb44:	ret
   1cb48:	mov	x1, x0
   1cb4c:	ldxr	w2, [x1]
   1cb50:	stlxr	w3, wzr, [x1]
   1cb54:	cbnz	w3, 1cb4c <GOACC_declare@@GOACC_2.0.1+0x268>
   1cb58:	tbz	w2, #31, 1cb60 <GOACC_declare@@GOACC_2.0.1+0x27c>
   1cb5c:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
   1cb60:	ret
   1cb64:	mov	w1, w0
   1cb68:	cmp	w0, #0x5
   1cb6c:	b.hi	1cbac <GOACC_declare@@GOACC_2.0.1+0x2c8>  // b.pmore
   1cb70:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cb74:	add	x0, x0, #0x2d8
   1cb78:	ldrb	w0, [x0, w1, uxtw]
   1cb7c:	adr	x2, 1cb88 <GOACC_declare@@GOACC_2.0.1+0x2a4>
   1cb80:	add	x0, x2, w0, sxtb #2
   1cb84:	br	x0
   1cb88:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cb8c:	add	x0, x0, #0x28
   1cb90:	ret
   1cb94:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cb98:	add	x0, x0, #0x1c5
   1cb9c:	ret
   1cba0:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cba4:	add	x0, x0, #0x1c
   1cba8:	ret
   1cbac:	stp	x29, x30, [sp, #-16]!
   1cbb0:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cbb4:	add	x0, x0, #0x30
   1cbb8:	mov	x29, sp
   1cbbc:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1cbc0:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cbc4:	add	x0, x0, #0x23
   1cbc8:	ret
   1cbcc:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cbd0:	add	x0, x0, #0x1c9
   1cbd4:	ret
   1cbd8:	stp	x29, x30, [sp, #-16]!
   1cbdc:	mov	x29, sp
   1cbe0:	cbnz	w2, 1cbf8 <GOACC_declare@@GOACC_2.0.1+0x314>
   1cbe4:	bl	1cb64 <GOACC_declare@@GOACC_2.0.1+0x280>
   1cbe8:	mov	x1, x0
   1cbec:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cbf0:	add	x0, x0, #0x47
   1cbf4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1cbf8:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cbfc:	add	x0, x0, #0x67
   1cc00:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1cc04:	stp	x29, x30, [sp, #-96]!
   1cc08:	cmp	w0, #0x2
   1cc0c:	mov	x29, sp
   1cc10:	stp	x19, x20, [sp, #16]
   1cc14:	mov	w19, w0
   1cc18:	stp	x21, x22, [sp, #32]
   1cc1c:	and	w22, w1, #0xff
   1cc20:	stp	x23, x24, [sp, #48]
   1cc24:	stp	x25, x26, [sp, #64]
   1cc28:	stp	x27, x28, [sp, #80]
   1cc2c:	b.eq	1ccfc <GOACC_declare@@GOACC_2.0.1+0x418>  // b.none
   1cc30:	cmp	w0, #0x4
   1cc34:	b.eq	1cc4c <GOACC_declare@@GOACC_2.0.1+0x368>  // b.none
   1cc38:	cmp	w0, #0x1
   1cc3c:	b.ne	1cd5c <GOACC_declare@@GOACC_2.0.1+0x478>  // b.any
   1cc40:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cc44:	ldr	x0, [x20, #1520]
   1cc48:	cbnz	x0, 1cd28 <GOACC_declare@@GOACC_2.0.1+0x444>
   1cc4c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cc50:	add	x1, x0, #0x598
   1cc54:	mov	x20, x0
   1cc58:	ldr	x1, [x1, #40]
   1cc5c:	cbnz	x1, 1cd44 <GOACC_declare@@GOACC_2.0.1+0x460>
   1cc60:	cmp	w19, #0x1
   1cc64:	b.eq	1cd90 <GOACC_declare@@GOACC_2.0.1+0x4ac>  // b.none
   1cc68:	cbz	w22, 1cdc4 <GOACC_declare@@GOACC_2.0.1+0x4e0>
   1cc6c:	add	x0, x20, #0x598
   1cc70:	add	x0, x0, #0x30
   1cc74:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1cc78:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cc7c:	add	x0, x0, #0xa1
   1cc80:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1cc84:	ldr	x25, [x23, x21, lsl #3]
   1cc88:	cbnz	x25, 1ccc0 <GOACC_declare@@GOACC_2.0.1+0x3dc>
   1cc8c:	add	x21, x21, #0x1
   1cc90:	mov	w19, w21
   1cc94:	cmp	x21, #0x6
   1cc98:	b.ne	1cc84 <GOACC_declare@@GOACC_2.0.1+0x3a0>  // b.any
   1cc9c:	cbz	w22, 1cdc4 <GOACC_declare@@GOACC_2.0.1+0x4e0>
   1cca0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cca4:	add	x0, x0, #0x598
   1cca8:	add	x0, x0, #0x30
   1ccac:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1ccb0:	ldr	x1, [x20, #1520]
   1ccb4:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ccb8:	add	x0, x0, #0x84
   1ccbc:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ccc0:	ldr	x26, [x25]
   1ccc4:	mov	x1, x24
   1ccc8:	ldr	x28, [x20, #1520]
   1cccc:	mov	x0, x26
   1ccd0:	bl	88e0 <strcmp@plt>
   1ccd4:	cbnz	w0, 1ccdc <GOACC_declare@@GOACC_2.0.1+0x3f8>
   1ccd8:	add	x26, x27, #0x1c
   1ccdc:	mov	x1, x26
   1cce0:	mov	x0, x28
   1cce4:	bl	8840 <strcasecmp@plt>
   1cce8:	cbnz	w0, 1cc8c <GOACC_declare@@GOACC_2.0.1+0x3a8>
   1ccec:	ldr	x0, [x25, #48]
   1ccf0:	blr	x0
   1ccf4:	cmp	w0, #0x0
   1ccf8:	b.le	1cc8c <GOACC_declare@@GOACC_2.0.1+0x3a8>
   1ccfc:	cmp	w19, #0x1
   1cd00:	ccmp	w19, #0x4, #0x4, hi  // hi = pmore
   1cd04:	b.ne	1cd98 <GOACC_declare@@GOACC_2.0.1+0x4b4>  // b.any
   1cd08:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cd0c:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cd10:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cd14:	add	x3, x3, #0x2de
   1cd18:	add	x1, x1, #0xb1
   1cd1c:	add	x0, x0, #0xce
   1cd20:	mov	w2, #0xb6                  	// #182
   1cd24:	bl	8b10 <__assert_fail@plt>
   1cd28:	adrp	x23, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cd2c:	adrp	x24, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cd30:	add	x23, x23, #0x598
   1cd34:	add	x24, x24, #0x7e
   1cd38:	mov	x21, #0x2                   	// #2
   1cd3c:	adrp	x27, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cd40:	b	1cc90 <GOACC_declare@@GOACC_2.0.1+0x3ac>
   1cd44:	ldr	x0, [x1, #48]
   1cd48:	blr	x0
   1cd4c:	cmp	w0, #0x0
   1cd50:	b.le	1cc60 <GOACC_declare@@GOACC_2.0.1+0x37c>
   1cd54:	mov	w19, #0x5                   	// #5
   1cd58:	b	1ccfc <GOACC_declare@@GOACC_2.0.1+0x418>
   1cd5c:	cmp	w0, #0x6
   1cd60:	b.le	1ccfc <GOACC_declare@@GOACC_2.0.1+0x418>
   1cd64:	cbz	w22, 1cdc4 <GOACC_declare@@GOACC_2.0.1+0x4e0>
   1cd68:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cd6c:	add	x0, x0, #0x598
   1cd70:	add	x0, x0, #0x30
   1cd74:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1cd78:	mov	w0, w19
   1cd7c:	bl	1cb64 <GOACC_declare@@GOACC_2.0.1+0x280>
   1cd80:	mov	x1, x0
   1cd84:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cd88:	add	x0, x0, #0x84
   1cd8c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1cd90:	mov	w19, #0x2                   	// #2
   1cd94:	b	1ccfc <GOACC_declare@@GOACC_2.0.1+0x418>
   1cd98:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cd9c:	add	x0, x0, #0x598
   1cda0:	ldr	x0, [x0, w19, sxtw #3]
   1cda4:	cbz	x0, 1cd64 <GOACC_declare@@GOACC_2.0.1+0x480>
   1cda8:	ldp	x19, x20, [sp, #16]
   1cdac:	ldp	x21, x22, [sp, #32]
   1cdb0:	ldp	x23, x24, [sp, #48]
   1cdb4:	ldp	x25, x26, [sp, #64]
   1cdb8:	ldp	x27, x28, [sp, #80]
   1cdbc:	ldp	x29, x30, [sp], #96
   1cdc0:	ret
   1cdc4:	mov	x0, #0x0                   	// #0
   1cdc8:	b	1cda8 <GOACC_declare@@GOACC_2.0.1+0x4c4>
   1cdcc:	stp	x29, x30, [sp, #-32]!
   1cdd0:	mov	x29, sp
   1cdd4:	stp	x19, x20, [sp, #16]
   1cdd8:	mov	x19, x0
   1cddc:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1cde0:	add	x0, x20, #0x598
   1cde4:	add	x0, x0, #0x34
   1cde8:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1cdec:	cbz	x19, 1ce88 <GOACC_declare@@GOACC_2.0.1+0x5a4>
   1cdf0:	ldr	x1, [x19, #8]
   1cdf4:	cbz	x1, 1ce0c <GOACC_declare@@GOACC_2.0.1+0x528>
   1cdf8:	ldr	x0, [x19, #40]
   1cdfc:	cbz	x0, 1ce0c <GOACC_declare@@GOACC_2.0.1+0x528>
   1ce00:	ldr	x1, [x1, #264]
   1ce04:	blr	x1
   1ce08:	str	xzr, [x19, #40]
   1ce0c:	ldr	x1, [x19, #24]
   1ce10:	cbz	x1, 1ce38 <GOACC_declare@@GOACC_2.0.1+0x554>
   1ce14:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ce18:	add	x3, x3, #0x2de
   1ce1c:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ce20:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ce24:	add	x3, x3, #0xf
   1ce28:	add	x1, x1, #0xb1
   1ce2c:	add	x0, x0, #0x11a
   1ce30:	mov	w2, #0x16b                 	// #363
   1ce34:	bl	8b10 <__assert_fail@plt>
   1ce38:	add	x0, x20, #0x598
   1ce3c:	ldr	x0, [x0, #56]
   1ce40:	cbnz	x0, 1ce68 <GOACC_declare@@GOACC_2.0.1+0x584>
   1ce44:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ce48:	add	x3, x3, #0x2de
   1ce4c:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ce50:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ce54:	add	x3, x3, #0xf
   1ce58:	add	x1, x1, #0xb1
   1ce5c:	add	x0, x0, #0x12c
   1ce60:	mov	w2, #0x17c                 	// #380
   1ce64:	bl	8b10 <__assert_fail@plt>
   1ce68:	cmp	x0, x19
   1ce6c:	ldr	x2, [x0, #32]
   1ce70:	b.ne	1cea4 <GOACC_declare@@GOACC_2.0.1+0x5c0>  // b.any
   1ce74:	cbnz	x1, 1ce9c <GOACC_declare@@GOACC_2.0.1+0x5b8>
   1ce78:	add	x0, x20, #0x598
   1ce7c:	str	x2, [x0, #56]
   1ce80:	mov	x0, x19
   1ce84:	bl	8950 <free@plt>
   1ce88:	add	x0, x20, #0x598
   1ce8c:	ldp	x19, x20, [sp, #16]
   1ce90:	add	x0, x0, #0x34
   1ce94:	ldp	x29, x30, [sp], #32
   1ce98:	b	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1ce9c:	str	x2, [x1, #32]
   1cea0:	b	1ce80 <GOACC_declare@@GOACC_2.0.1+0x59c>
   1cea4:	mov	x1, x0
   1cea8:	mov	x0, x2
   1ceac:	b	1ce40 <GOACC_declare@@GOACC_2.0.1+0x55c>
   1ceb0:	stp	x29, x30, [sp, #-48]!
   1ceb4:	mov	x29, sp
   1ceb8:	stp	x19, x20, [sp, #16]
   1cebc:	mov	x20, x0
   1cec0:	ldr	w0, [x0, #12]
   1cec4:	str	x21, [sp, #32]
   1cec8:	cbnz	w0, 1cf60 <GOACC_declare@@GOACC_2.0.1+0x67c>
   1cecc:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ced0:	add	x19, x19, #0x598
   1ced4:	add	x21, x19, #0x30
   1ced8:	mov	x0, x21
   1cedc:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1cee0:	ldr	w1, [x20, #16]
   1cee4:	cmp	w1, #0x1
   1cee8:	b.ls	1cef4 <GOACC_declare@@GOACC_2.0.1+0x610>  // b.plast
   1ceec:	cmp	w1, #0x4
   1cef0:	b.ne	1cf18 <GOACC_declare@@GOACC_2.0.1+0x634>  // b.any
   1cef4:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cef8:	add	x3, x3, #0x2de
   1cefc:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cf00:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cf04:	add	x3, x3, #0x24
   1cf08:	add	x1, x1, #0xb1
   1cf0c:	add	x0, x0, #0x131
   1cf10:	mov	w2, #0x4c                  	// #76
   1cf14:	bl	8b10 <__assert_fail@plt>
   1cf18:	mov	w1, w1
   1cf1c:	ldr	x0, [x19, x1, lsl #3]
   1cf20:	cbz	x0, 1cf48 <GOACC_declare@@GOACC_2.0.1+0x664>
   1cf24:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cf28:	add	x3, x3, #0x2de
   1cf2c:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cf30:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1cf34:	add	x3, x3, #0x24
   1cf38:	add	x1, x1, #0xb1
   1cf3c:	add	x0, x0, #0x1ce
   1cf40:	mov	w2, #0x4f                  	// #79
   1cf44:	bl	8b10 <__assert_fail@plt>
   1cf48:	mov	x0, x21
   1cf4c:	str	x20, [x19, x1, lsl #3]
   1cf50:	ldp	x19, x20, [sp, #16]
   1cf54:	ldr	x21, [sp, #32]
   1cf58:	ldp	x29, x30, [sp], #48
   1cf5c:	b	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1cf60:	ldp	x19, x20, [sp, #16]
   1cf64:	ldr	x21, [sp, #32]
   1cf68:	ldp	x29, x30, [sp], #48
   1cf6c:	ret
   1cf70:	stp	x29, x30, [sp, #-64]!
   1cf74:	mov	x29, sp
   1cf78:	stp	x21, x22, [sp, #32]
   1cf7c:	adrp	x22, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1cf80:	ldr	x22, [x22, #4008]
   1cf84:	str	x23, [sp, #48]
   1cf88:	mrs	x23, tpidr_el0
   1cf8c:	stp	x19, x20, [sp, #16]
   1cf90:	mov	w20, w0
   1cf94:	ldr	x19, [x23, x22]
   1cf98:	cbz	x19, 1d0c4 <GOACC_declare@@GOACC_2.0.1+0x7e0>
   1cf9c:	ldr	x0, [x19, #8]
   1cfa0:	cbz	x0, 1d07c <GOACC_declare@@GOACC_2.0.1+0x798>
   1cfa4:	ldr	w0, [x0, #12]
   1cfa8:	cmp	w0, w20
   1cfac:	b.eq	1cfb4 <GOACC_declare@@GOACC_2.0.1+0x6d0>  // b.none
   1cfb0:	tbz	w20, #31, 1d08c <GOACC_declare@@GOACC_2.0.1+0x7a8>
   1cfb4:	ldp	x19, x20, [sp, #16]
   1cfb8:	ldp	x21, x22, [sp, #32]
   1cfbc:	ldr	x23, [sp, #48]
   1cfc0:	ldp	x29, x30, [sp], #64
   1cfc4:	ret
   1cfc8:	ldr	x0, [x21, #48]
   1cfcc:	blr	x0
   1cfd0:	mov	w2, w0
   1cfd4:	cmp	w20, #0x0
   1cfd8:	csel	w0, w20, wzr, ge  // ge = tcont
   1cfdc:	cmp	w0, w2
   1cfe0:	b.lt	1cff0 <GOACC_declare@@GOACC_2.0.1+0x70c>  // b.tstop
   1cfe4:	ldr	w0, [x21, #16]
   1cfe8:	mov	w1, w20
   1cfec:	bl	1cbd8 <GOACC_declare@@GOACC_2.0.1+0x2f4>
   1cff0:	cbnz	x19, 1d038 <GOACC_declare@@GOACC_2.0.1+0x754>
   1cff4:	mov	x0, #0x30                  	// #48
   1cff8:	bl	adb0 <fprintf@plt+0x2250>
   1cffc:	str	x0, [x23, x22]
   1d000:	adrp	x22, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d004:	add	x22, x22, #0x598
   1d008:	mov	x19, x0
   1d00c:	mov	x1, x0
   1d010:	add	x23, x22, #0x34
   1d014:	ldr	w0, [x22, #72]
   1d018:	bl	8a00 <pthread_setspecific@plt>
   1d01c:	mov	x0, x23
   1d020:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d024:	ldr	x0, [x22, #56]
   1d028:	str	x0, [x19, #32]
   1d02c:	mov	x0, x23
   1d030:	str	x19, [x22, #56]
   1d034:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d038:	mov	w0, #0x130                 	// #304
   1d03c:	str	x21, [x19]
   1d040:	stp	xzr, xzr, [x19, #16]
   1d044:	smaddl	x21, w20, w0, x21
   1d048:	mov	w0, w20
   1d04c:	ldr	x1, [x21, #256]
   1d050:	str	x21, [x19, #8]
   1d054:	blr	x1
   1d058:	ldr	x23, [sp, #48]
   1d05c:	ldr	x1, [x21, #248]
   1d060:	ldp	x21, x22, [sp, #32]
   1d064:	str	x0, [x19, #40]
   1d068:	ldp	x19, x20, [sp, #16]
   1d06c:	mov	x16, x1
   1d070:	ldp	x29, x30, [sp], #64
   1d074:	mov	w0, #0xfffffffe            	// #-2
   1d078:	br	x16
   1d07c:	tbz	w20, #31, 1d08c <GOACC_declare@@GOACC_2.0.1+0x7a8>
   1d080:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d084:	ldr	w20, [x0, #1624]
   1d088:	cbz	x19, 1d094 <GOACC_declare@@GOACC_2.0.1+0x7b0>
   1d08c:	ldr	x21, [x19]
   1d090:	cbnz	x21, 1cfc8 <GOACC_declare@@GOACC_2.0.1+0x6e4>
   1d094:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d098:	ldr	x21, [x0, #1496]
   1d09c:	cbnz	x21, 1cfc8 <GOACC_declare@@GOACC_2.0.1+0x6e4>
   1d0a0:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d0a4:	add	x3, x3, #0x2de
   1d0a8:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d0ac:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d0b0:	add	x3, x3, #0x33
   1d0b4:	add	x1, x1, #0xb1
   1d0b8:	add	x0, x0, #0x1e7
   1d0bc:	mov	w2, #0x19a                 	// #410
   1d0c0:	bl	8b10 <__assert_fail@plt>
   1d0c4:	tbnz	w0, #31, 1d080 <GOACC_declare@@GOACC_2.0.1+0x79c>
   1d0c8:	b	1d094 <GOACC_declare@@GOACC_2.0.1+0x7b0>

000000000001d0cc <acc_init@@OACC_2.0>:
   1d0cc:	stp	x29, x30, [sp, #-64]!
   1d0d0:	mov	x29, sp
   1d0d4:	stp	x21, x22, [sp, #32]
   1d0d8:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d0dc:	add	x21, x21, #0x598
   1d0e0:	mov	w22, w0
   1d0e4:	stp	x19, x20, [sp, #16]
   1d0e8:	str	x23, [sp, #48]
   1d0ec:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1d0f0:	add	x23, x21, #0x30
   1d0f4:	mov	x0, x23
   1d0f8:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d0fc:	mov	w1, #0x1                   	// #1
   1d100:	mov	w0, w22
   1d104:	bl	1cc04 <GOACC_declare@@GOACC_2.0.1+0x320>
   1d108:	mov	x20, x0
   1d10c:	ldr	x0, [x0, #48]
   1d110:	blr	x0
   1d114:	mov	w2, w0
   1d118:	cmp	w0, #0x0
   1d11c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d120:	b.le	1d130 <acc_init@@OACC_2.0+0x64>
   1d124:	ldr	w19, [x0, #1624]
   1d128:	cmp	w2, w19
   1d12c:	b.gt	1d13c <acc_init@@OACC_2.0+0x70>
   1d130:	ldr	w1, [x0, #1624]
   1d134:	mov	w0, w22
   1d138:	bl	1cbd8 <GOACC_declare@@GOACC_2.0.1+0x2f4>
   1d13c:	mov	w0, #0x130                 	// #304
   1d140:	smaddl	x19, w19, w0, x20
   1d144:	add	x22, x19, #0xa8
   1d148:	mov	x0, x22
   1d14c:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d150:	ldr	w0, [x19, #172]
   1d154:	cmp	w0, #0x1
   1d158:	b.ne	1d170 <acc_init@@OACC_2.0+0xa4>  // b.any
   1d15c:	mov	x0, x22
   1d160:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d164:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d168:	add	x0, x0, #0x1f7
   1d16c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d170:	mov	x0, x19
   1d174:	bl	1a1e0 <GOMP_offload_unregister@@GOMP_4.0.1+0x14>
   1d178:	mov	x0, x22
   1d17c:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d180:	mov	x0, x23
   1d184:	str	x20, [x21, #64]
   1d188:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d18c:	ldp	x19, x20, [sp, #16]
   1d190:	mov	w0, #0xffffffff            	// #-1
   1d194:	ldp	x21, x22, [sp, #32]
   1d198:	ldr	x23, [sp, #48]
   1d19c:	ldp	x29, x30, [sp], #64
   1d1a0:	b	1cf70 <GOACC_declare@@GOACC_2.0.1+0x68c>

000000000001d1a4 <acc_shutdown@@OACC_2.0>:
   1d1a4:	stp	x29, x30, [sp, #-80]!
   1d1a8:	mov	x29, sp
   1d1ac:	stp	x19, x20, [sp, #16]
   1d1b0:	mov	w20, w0
   1d1b4:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d1b8:	stp	x21, x22, [sp, #32]
   1d1bc:	stp	x23, x24, [sp, #48]
   1d1c0:	mov	w24, #0x0                   	// #0
   1d1c4:	str	x25, [sp, #64]
   1d1c8:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1d1cc:	add	x0, x19, #0x598
   1d1d0:	add	x0, x0, #0x30
   1d1d4:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d1d8:	mov	w0, w20
   1d1dc:	mov	w1, #0x1                   	// #1
   1d1e0:	bl	1cc04 <GOACC_declare@@GOACC_2.0.1+0x320>
   1d1e4:	add	x21, x0, #0xa8
   1d1e8:	mov	x22, x0
   1d1ec:	mov	x20, x21
   1d1f0:	ldr	x0, [x0, #48]
   1d1f4:	blr	x0
   1d1f8:	mov	w23, w0
   1d1fc:	cmp	w23, w24
   1d200:	b.gt	1d248 <acc_shutdown@@OACC_2.0+0xa4>
   1d204:	add	x20, x19, #0x598
   1d208:	add	x0, x20, #0x34
   1d20c:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d210:	ldr	x20, [x20, #56]
   1d214:	cbnz	x20, 1d26c <acc_shutdown@@OACC_2.0+0xc8>
   1d218:	mov	w20, #0x1                   	// #1
   1d21c:	mov	w24, #0x0                   	// #0
   1d220:	mov	w22, #0x0                   	// #0
   1d224:	add	x0, x19, #0x598
   1d228:	add	x0, x0, #0x34
   1d22c:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d230:	cmp	w23, w22
   1d234:	b.gt	1d2f4 <acc_shutdown@@OACC_2.0+0x150>
   1d238:	cbnz	w20, 1d334 <acc_shutdown@@OACC_2.0+0x190>
   1d23c:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1d240:	add	x0, x0, #0x9ff
   1d244:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d248:	mov	x0, x20
   1d24c:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d250:	sub	x0, x20, #0xa8
   1d254:	bl	1a364 <GOMP_offload_unregister@@GOMP_4.0.1+0x198>
   1d258:	mov	x0, x20
   1d25c:	add	w24, w24, #0x1
   1d260:	add	x20, x20, #0x130
   1d264:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d268:	b	1d1fc <acc_shutdown@@OACC_2.0+0x58>
   1d26c:	ldr	x0, [x20, #40]
   1d270:	cbz	x0, 1d27c <acc_shutdown@@OACC_2.0+0xd8>
   1d274:	ldr	x1, [x22, #264]
   1d278:	blr	x1
   1d27c:	ldr	x0, [x20, #24]
   1d280:	str	xzr, [x20, #40]
   1d284:	cbz	x0, 1d2a0 <acc_shutdown@@OACC_2.0+0xfc>
   1d288:	add	x0, x19, #0x598
   1d28c:	add	x0, x0, #0x34
   1d290:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d294:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d298:	add	x0, x0, #0x20d
   1d29c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d2a0:	ldr	x0, [x20, #16]
   1d2a4:	cbz	x0, 1d2c0 <acc_shutdown@@OACC_2.0+0x11c>
   1d2a8:	add	x0, x19, #0x598
   1d2ac:	add	x0, x0, #0x34
   1d2b0:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d2b4:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d2b8:	add	x0, x0, #0x22b
   1d2bc:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d2c0:	ldr	x0, [x20, #8]
   1d2c4:	cbz	x0, 1d2ec <acc_shutdown@@OACC_2.0+0x148>
   1d2c8:	add	x0, x0, #0xa8
   1d2cc:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d2d0:	ldr	x0, [x20, #8]
   1d2d4:	add	x0, x0, #0xa0
   1d2d8:	bl	1a3e4 <GOMP_offload_unregister@@GOMP_4.0.1+0x218>
   1d2dc:	ldr	x0, [x20, #8]
   1d2e0:	add	x0, x0, #0xa8
   1d2e4:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d2e8:	stp	xzr, xzr, [x20]
   1d2ec:	ldr	x20, [x20, #32]
   1d2f0:	b	1d214 <acc_shutdown@@OACC_2.0+0x70>
   1d2f4:	mov	x0, x21
   1d2f8:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d2fc:	ldr	w25, [x21, #4]
   1d300:	cmp	w25, #0x1
   1d304:	b.ne	1d320 <acc_shutdown@@OACC_2.0+0x17c>  // b.any
   1d308:	ldur	w0, [x21, #-156]
   1d30c:	mov	w24, w25
   1d310:	ldur	x1, [x21, #-104]
   1d314:	blr	x1
   1d318:	and	w20, w20, w0
   1d31c:	str	wzr, [x21, #4]
   1d320:	mov	x0, x21
   1d324:	add	w22, w22, #0x1
   1d328:	add	x21, x21, #0x130
   1d32c:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d330:	b	1d230 <acc_shutdown@@OACC_2.0+0x8c>
   1d334:	cbnz	w24, 1d344 <acc_shutdown@@OACC_2.0+0x1a0>
   1d338:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d33c:	add	x0, x0, #0x249
   1d340:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d344:	add	x0, x19, #0x598
   1d348:	ldp	x19, x20, [sp, #16]
   1d34c:	add	x0, x0, #0x30
   1d350:	ldp	x21, x22, [sp, #32]
   1d354:	ldp	x23, x24, [sp, #48]
   1d358:	ldr	x25, [sp, #64]
   1d35c:	ldp	x29, x30, [sp], #80
   1d360:	b	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>

000000000001d364 <acc_get_num_devices@@OACC_2.0>:
   1d364:	cbnz	w0, 1d380 <acc_get_num_devices@@OACC_2.0+0x1c>
   1d368:	mov	w0, #0x0                   	// #0
   1d36c:	ret
   1d370:	mov	w0, #0x0                   	// #0
   1d374:	ldp	x19, x20, [sp, #16]
   1d378:	ldp	x29, x30, [sp], #32
   1d37c:	ret
   1d380:	stp	x29, x30, [sp, #-32]!
   1d384:	mov	x29, sp
   1d388:	stp	x19, x20, [sp, #16]
   1d38c:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d390:	add	x19, x19, #0x598
   1d394:	mov	w20, w0
   1d398:	add	x19, x19, #0x30
   1d39c:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1d3a0:	mov	x0, x19
   1d3a4:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d3a8:	mov	w1, #0x0                   	// #0
   1d3ac:	mov	w0, w20
   1d3b0:	bl	1cc04 <GOACC_declare@@GOACC_2.0.1+0x320>
   1d3b4:	mov	x20, x0
   1d3b8:	mov	x0, x19
   1d3bc:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d3c0:	cbz	x20, 1d370 <acc_get_num_devices@@OACC_2.0+0xc>
   1d3c4:	ldr	x0, [x20, #48]
   1d3c8:	blr	x0
   1d3cc:	cmp	w0, #0x0
   1d3d0:	csel	w0, w0, wzr, ge  // ge = tcont
   1d3d4:	b	1d374 <acc_get_num_devices@@OACC_2.0+0x10>

000000000001d3d8 <acc_set_device_type@@OACC_2.0>:
   1d3d8:	stp	x29, x30, [sp, #-64]!
   1d3dc:	mrs	x1, tpidr_el0
   1d3e0:	mov	x29, sp
   1d3e4:	stp	x21, x22, [sp, #32]
   1d3e8:	mov	w21, w0
   1d3ec:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d3f0:	ldr	x0, [x0, #4008]
   1d3f4:	stp	x19, x20, [sp, #16]
   1d3f8:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d3fc:	add	x22, x19, #0x598
   1d400:	ldr	x20, [x1, x0]
   1d404:	str	x23, [sp, #48]
   1d408:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1d40c:	add	x0, x22, #0x30
   1d410:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d414:	mov	w0, w21
   1d418:	mov	w1, #0x1                   	// #1
   1d41c:	bl	1cc04 <GOACC_declare@@GOACC_2.0.1+0x320>
   1d420:	mov	x21, x0
   1d424:	str	x0, [x22, #64]
   1d428:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d42c:	ldr	w22, [x0, #1624]
   1d430:	mov	w0, #0x130                 	// #304
   1d434:	smaddl	x22, w22, w0, x21
   1d438:	add	x23, x22, #0xa8
   1d43c:	mov	x0, x23
   1d440:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d444:	ldr	w0, [x22, #172]
   1d448:	cbnz	w0, 1d454 <acc_set_device_type@@OACC_2.0+0x7c>
   1d44c:	mov	x0, x22
   1d450:	bl	1a1e0 <GOMP_offload_unregister@@GOMP_4.0.1+0x14>
   1d454:	mov	x0, x23
   1d458:	add	x19, x19, #0x598
   1d45c:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d460:	add	x0, x19, #0x30
   1d464:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d468:	cbz	x20, 1d490 <acc_set_device_type@@OACC_2.0+0xb8>
   1d46c:	ldr	x0, [x20]
   1d470:	cmp	x0, x21
   1d474:	b.eq	1d490 <acc_set_device_type@@OACC_2.0+0xb8>  // b.none
   1d478:	ldr	x0, [x20, #24]
   1d47c:	stp	xzr, xzr, [x20]
   1d480:	cbz	x0, 1d490 <acc_set_device_type@@OACC_2.0+0xb8>
   1d484:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d488:	add	x0, x0, #0x25f
   1d48c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d490:	ldp	x19, x20, [sp, #16]
   1d494:	mov	w0, #0xffffffff            	// #-1
   1d498:	ldp	x21, x22, [sp, #32]
   1d49c:	ldr	x23, [sp, #48]
   1d4a0:	ldp	x29, x30, [sp], #64
   1d4a4:	b	1cf70 <GOACC_declare@@GOACC_2.0.1+0x68c>

000000000001d4a8 <acc_get_device_type@@OACC_2.0>:
   1d4a8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d4ac:	ldr	x0, [x0, #4008]
   1d4b0:	mrs	x1, tpidr_el0
   1d4b4:	stp	x29, x30, [sp, #-32]!
   1d4b8:	mov	x29, sp
   1d4bc:	ldr	x0, [x1, x0]
   1d4c0:	stp	x19, x20, [sp, #16]
   1d4c4:	cbz	x0, 1d504 <acc_get_device_type@@OACC_2.0+0x5c>
   1d4c8:	ldr	x0, [x0]
   1d4cc:	cbz	x0, 1d504 <acc_get_device_type@@OACC_2.0+0x5c>
   1d4d0:	ldr	w0, [x0, #16]
   1d4d4:	cmp	w0, #0x1
   1d4d8:	ccmp	w0, #0x4, #0x4, ne  // ne = any
   1d4dc:	b.ne	1d53c <acc_get_device_type@@OACC_2.0+0x94>  // b.any
   1d4e0:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d4e4:	add	x3, x3, #0x2de
   1d4e8:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d4ec:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d4f0:	add	x3, x3, #0x56
   1d4f4:	add	x1, x1, #0xb1
   1d4f8:	add	x0, x0, #0x288
   1d4fc:	mov	w2, #0x226                 	// #550
   1d500:	bl	8b10 <__assert_fail@plt>
   1d504:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d508:	add	x19, x19, #0x598
   1d50c:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1d510:	add	x19, x19, #0x30
   1d514:	mov	x0, x19
   1d518:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d51c:	mov	w1, #0x1                   	// #1
   1d520:	mov	w0, #0x1                   	// #1
   1d524:	bl	1cc04 <GOACC_declare@@GOACC_2.0.1+0x320>
   1d528:	mov	x20, x0
   1d52c:	mov	x0, x19
   1d530:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d534:	ldr	w0, [x20, #16]
   1d538:	b	1d4d4 <acc_get_device_type@@OACC_2.0+0x2c>
   1d53c:	ldp	x19, x20, [sp, #16]
   1d540:	ldp	x29, x30, [sp], #32
   1d544:	ret

000000000001d548 <acc_get_device_num@@OACC_2.0>:
   1d548:	stp	x29, x30, [sp, #-48]!
   1d54c:	mrs	x1, tpidr_el0
   1d550:	mov	x29, sp
   1d554:	stp	x19, x20, [sp, #16]
   1d558:	mov	w20, w0
   1d55c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d560:	ldr	x0, [x0, #4008]
   1d564:	str	x21, [sp, #32]
   1d568:	cmp	w20, #0x5
   1d56c:	ldr	x21, [x1, x0]
   1d570:	b.le	1d584 <acc_get_device_num@@OACC_2.0+0x3c>
   1d574:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d578:	mov	w1, w20
   1d57c:	add	x0, x0, #0x30
   1d580:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d584:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d588:	add	x19, x19, #0x598
   1d58c:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1d590:	add	x19, x19, #0x30
   1d594:	mov	x0, x19
   1d598:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d59c:	mov	w1, #0x1                   	// #1
   1d5a0:	mov	w0, w20
   1d5a4:	bl	1cc04 <GOACC_declare@@GOACC_2.0.1+0x320>
   1d5a8:	mov	x20, x0
   1d5ac:	mov	x0, x19
   1d5b0:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d5b4:	cbz	x21, 1d5e0 <acc_get_device_num@@OACC_2.0+0x98>
   1d5b8:	ldr	x0, [x21]
   1d5bc:	cmp	x0, x20
   1d5c0:	b.ne	1d5e0 <acc_get_device_num@@OACC_2.0+0x98>  // b.any
   1d5c4:	ldr	x0, [x21, #8]
   1d5c8:	cbz	x0, 1d5e0 <acc_get_device_num@@OACC_2.0+0x98>
   1d5cc:	ldr	w0, [x0, #12]
   1d5d0:	ldp	x19, x20, [sp, #16]
   1d5d4:	ldr	x21, [sp, #32]
   1d5d8:	ldp	x29, x30, [sp], #48
   1d5dc:	ret
   1d5e0:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d5e4:	ldr	w0, [x0, #1624]
   1d5e8:	b	1d5d0 <acc_get_device_num@@OACC_2.0+0x88>

000000000001d5ec <acc_set_device_num@@OACC_2.0>:
   1d5ec:	stp	x29, x30, [sp, #-64]!
   1d5f0:	mov	x29, sp
   1d5f4:	stp	x19, x20, [sp, #16]
   1d5f8:	mov	w19, w0
   1d5fc:	stp	x21, x22, [sp, #32]
   1d600:	mov	w21, w1
   1d604:	stp	x23, x24, [sp, #48]
   1d608:	adrp	x23, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d60c:	bl	18d18 <omp_get_place_proc_ids@@OMP_4.5+0x15a0>
   1d610:	tbz	w19, #31, 1d618 <acc_set_device_num@@OACC_2.0+0x2c>
   1d614:	ldr	w19, [x23, #1624]
   1d618:	cbnz	w21, 1d63c <acc_set_device_num@@OACC_2.0+0x50>
   1d61c:	mov	w0, w19
   1d620:	bl	1cf70 <GOACC_declare@@GOACC_2.0.1+0x68c>
   1d624:	str	w19, [x23, #1624]
   1d628:	ldp	x19, x20, [sp, #16]
   1d62c:	ldp	x21, x22, [sp, #32]
   1d630:	ldp	x23, x24, [sp, #48]
   1d634:	ldp	x29, x30, [sp], #64
   1d638:	ret
   1d63c:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d640:	add	x24, x20, #0x598
   1d644:	add	x0, x24, #0x30
   1d648:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d64c:	mov	w1, #0x1                   	// #1
   1d650:	mov	w0, w21
   1d654:	bl	1cc04 <GOACC_declare@@GOACC_2.0.1+0x320>
   1d658:	mov	x22, x0
   1d65c:	ldr	x0, [x0, #48]
   1d660:	str	x22, [x24, #64]
   1d664:	blr	x0
   1d668:	mov	w2, w0
   1d66c:	cmp	w19, #0x0
   1d670:	csel	w0, w19, wzr, ge  // ge = tcont
   1d674:	cmp	w2, w0
   1d678:	b.gt	1d688 <acc_set_device_num@@OACC_2.0+0x9c>
   1d67c:	mov	w1, w19
   1d680:	mov	w0, w21
   1d684:	bl	1cbd8 <GOACC_declare@@GOACC_2.0.1+0x2f4>
   1d688:	mov	w21, #0x130                 	// #304
   1d68c:	smaddl	x21, w19, w21, x22
   1d690:	add	x22, x21, #0xa8
   1d694:	mov	x0, x22
   1d698:	bl	1cb20 <GOACC_declare@@GOACC_2.0.1+0x23c>
   1d69c:	ldr	w0, [x21, #172]
   1d6a0:	cbnz	w0, 1d6ac <acc_set_device_num@@OACC_2.0+0xc0>
   1d6a4:	mov	x0, x21
   1d6a8:	bl	1a1e0 <GOMP_offload_unregister@@GOMP_4.0.1+0x14>
   1d6ac:	mov	x0, x22
   1d6b0:	add	x20, x20, #0x598
   1d6b4:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d6b8:	add	x0, x20, #0x30
   1d6bc:	bl	1cb48 <GOACC_declare@@GOACC_2.0.1+0x264>
   1d6c0:	b	1d61c <acc_set_device_num@@OACC_2.0+0x30>
   1d6c4:	nop

000000000001d6c8 <acc_on_device@@OACC_2.0>:
   1d6c8:	tst	w0, #0xfffffffd
   1d6cc:	cset	w0, eq  // eq = none
   1d6d0:	ret
   1d6d4:	stp	x29, x30, [sp, #-32]!
   1d6d8:	adrp	x1, 1c000 <GOACC_parallel_keyed@@GOACC_2.0.1+0x334>
   1d6dc:	add	x1, x1, #0xdcc
   1d6e0:	mov	x29, sp
   1d6e4:	str	x19, [sp, #16]
   1d6e8:	adrp	x19, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d6ec:	add	x19, x19, #0x598
   1d6f0:	add	x0, x19, #0x48
   1d6f4:	str	wzr, [x19, #48]
   1d6f8:	bl	8680 <pthread_key_create@plt>
   1d6fc:	str	wzr, [x19, #52]
   1d700:	stp	xzr, xzr, [x19, #56]
   1d704:	ldr	x19, [sp, #16]
   1d708:	ldp	x29, x30, [sp], #32
   1d70c:	b	1cb0c <GOACC_declare@@GOACC_2.0.1+0x228>
   1d710:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d714:	ldr	x1, [x1, #4008]
   1d718:	mrs	x2, tpidr_el0
   1d71c:	ldr	x1, [x2, x1]
   1d720:	ldr	x2, [x1, #16]
   1d724:	cbz	x2, 1d754 <acc_on_device@@OACC_2.0+0x8c>
   1d728:	stp	x29, x30, [sp, #-16]!
   1d72c:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d730:	add	x3, x3, #0x2de
   1d734:	mov	x29, sp
   1d738:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d73c:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d740:	add	x3, x3, #0x6a
   1d744:	add	x1, x1, #0xb1
   1d748:	add	x0, x0, #0x2c0
   1d74c:	mov	w2, #0x29b                 	// #667
   1d750:	bl	8b10 <__assert_fail@plt>
   1d754:	ldr	x2, [x1, #8]
   1d758:	str	x2, [x1, #16]
   1d75c:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d760:	add	x2, x2, #0x598
   1d764:	ldr	x0, [x2, w0, sxtw #3]
   1d768:	str	x0, [x1, #8]
   1d76c:	ret
   1d770:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d774:	ldr	x0, [x0, #4008]
   1d778:	mrs	x1, tpidr_el0
   1d77c:	ldr	x0, [x1, x0]
   1d780:	ldr	x1, [x0, #16]
   1d784:	stp	x1, xzr, [x0, #8]
   1d788:	ret
   1d78c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d790:	ldr	x0, [x0, #4008]
   1d794:	mrs	x1, tpidr_el0
   1d798:	ldr	x0, [x1, x0]
   1d79c:	cbz	x0, 1d7a8 <acc_on_device@@OACC_2.0+0xe0>
   1d7a0:	ldr	x0, [x0, #8]
   1d7a4:	cbnz	x0, 1d7c4 <acc_on_device@@OACC_2.0+0xfc>
   1d7a8:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1d7ac:	ldr	x0, [x0, #1496]
   1d7b0:	cbnz	x0, 1d7bc <acc_on_device@@OACC_2.0+0xf4>
   1d7b4:	mov	w0, #0x1                   	// #1
   1d7b8:	b	89c0 <acc_init@plt>
   1d7bc:	mov	w0, #0xffffffff            	// #-1
   1d7c0:	b	1cf70 <GOACC_declare@@GOACC_2.0.1+0x68c>
   1d7c4:	ret
   1d7c8:	mov	x2, x0
   1d7cc:	mov	w3, #0x1                   	// #1
   1d7d0:	ldaxr	w1, [x2]
   1d7d4:	cbnz	w1, 1d7e0 <acc_on_device@@OACC_2.0+0x118>
   1d7d8:	stxr	w4, w3, [x2]
   1d7dc:	cbnz	w4, 1d7d0 <acc_on_device@@OACC_2.0+0x108>
   1d7e0:	cmp	w1, #0x0
   1d7e4:	b.eq	1d7ec <acc_on_device@@OACC_2.0+0x124>  // b.none
   1d7e8:	b	158e8 <omp_test_nest_lock@OMP_1.0+0x170>
   1d7ec:	ret
   1d7f0:	mov	x1, x0
   1d7f4:	ldxr	w2, [x1]
   1d7f8:	stlxr	w3, wzr, [x1]
   1d7fc:	cbnz	w3, 1d7f4 <acc_on_device@@OACC_2.0+0x12c>
   1d800:	tbz	w2, #31, 1d808 <acc_on_device@@OACC_2.0+0x140>
   1d804:	b	15980 <omp_test_nest_lock@OMP_1.0+0x208>
   1d808:	ret
   1d80c:	stp	x29, x30, [sp, #-80]!
   1d810:	mov	x29, sp
   1d814:	str	x25, [sp, #64]
   1d818:	and	w25, w0, #0xff
   1d81c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d820:	ldr	x0, [x0, #4048]
   1d824:	stp	x19, x20, [sp, #16]
   1d828:	mov	x19, x2
   1d82c:	mrs	x2, tpidr_el0
   1d830:	stp	x23, x24, [sp, #48]
   1d834:	ldr	x23, [x2, x0]
   1d838:	stp	x21, x22, [sp, #32]
   1d83c:	cbz	x23, 1d848 <acc_on_device@@OACC_2.0+0x180>
   1d840:	ldr	x0, [x23, #8]
   1d844:	cbnz	x0, 1d868 <acc_on_device@@OACC_2.0+0x1a0>
   1d848:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d84c:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d850:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d854:	add	x3, x3, #0x567
   1d858:	add	x1, x1, #0x360
   1d85c:	add	x0, x0, #0x37c
   1d860:	mov	w2, #0xa4                  	// #164
   1d864:	bl	8b10 <__assert_fail@plt>
   1d868:	ldr	w2, [x0, #8]
   1d86c:	mov	x22, x1
   1d870:	mov	x20, x3
   1d874:	tbz	w2, #0, 1d8a8 <acc_on_device@@OACC_2.0+0x1e0>
   1d878:	mov	x2, x3
   1d87c:	cbz	w25, 1d89c <acc_on_device@@OACC_2.0+0x1d4>
   1d880:	mov	x0, x19
   1d884:	ldp	x19, x20, [sp, #16]
   1d888:	ldp	x21, x22, [sp, #32]
   1d88c:	ldp	x23, x24, [sp, #48]
   1d890:	ldr	x25, [sp, #64]
   1d894:	ldp	x29, x30, [sp], #80
   1d898:	b	8610 <memmove@plt>
   1d89c:	mov	x1, x19
   1d8a0:	mov	x0, x22
   1d8a4:	b	1d884 <acc_on_device@@OACC_2.0+0x1bc>
   1d8a8:	mov	w21, w4
   1d8ac:	mov	x24, x5
   1d8b0:	cmn	w4, #0x1
   1d8b4:	b.lt	1d8c4 <acc_on_device@@OACC_2.0+0x1fc>  // b.tstop
   1d8b8:	ldr	x1, [x0, #248]
   1d8bc:	mov	w0, w4
   1d8c0:	blr	x1
   1d8c4:	ldr	x1, [x23, #8]
   1d8c8:	ldr	w0, [x1, #12]
   1d8cc:	cbz	w25, 1d914 <acc_on_device@@OACC_2.0+0x24c>
   1d8d0:	mov	x3, x20
   1d8d4:	mov	x2, x22
   1d8d8:	ldr	x4, [x1, #112]
   1d8dc:	mov	x1, x19
   1d8e0:	blr	x4
   1d8e4:	and	w19, w0, #0xff
   1d8e8:	cmn	w21, #0x1
   1d8ec:	b.lt	1d900 <acc_on_device@@OACC_2.0+0x238>  // b.tstop
   1d8f0:	ldr	x0, [x23, #8]
   1d8f4:	ldr	x1, [x0, #248]
   1d8f8:	mov	w0, #0xfffffffe            	// #-2
   1d8fc:	blr	x1
   1d900:	cbnz	w19, 1d928 <acc_on_device@@OACC_2.0+0x260>
   1d904:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d908:	mov	x1, x24
   1d90c:	add	x0, x0, #0x38c
   1d910:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d914:	mov	x3, x20
   1d918:	mov	x2, x19
   1d91c:	ldr	x4, [x1, #120]
   1d920:	mov	x1, x22
   1d924:	b	1d8e0 <acc_on_device@@OACC_2.0+0x218>
   1d928:	ldp	x19, x20, [sp, #16]
   1d92c:	ldp	x21, x22, [sp, #32]
   1d930:	ldp	x23, x24, [sp, #48]
   1d934:	ldr	x25, [sp, #64]
   1d938:	ldp	x29, x30, [sp], #80
   1d93c:	ret
   1d940:	stp	x29, x30, [sp, #-80]!
   1d944:	add	x0, x0, #0xa0
   1d948:	mov	x29, sp
   1d94c:	str	x1, [sp, #24]
   1d950:	add	x1, x1, x2
   1d954:	str	x1, [sp, #32]
   1d958:	add	x1, sp, #0x18
   1d95c:	bl	1ba34 <omp_pause_resource_all@@OMP_5.0+0x2d4>
   1d960:	ldp	x29, x30, [sp], #80
   1d964:	ret
   1d968:	stp	x29, x30, [sp, #-80]!
   1d96c:	mov	x29, sp
   1d970:	stp	x19, x20, [sp, #16]
   1d974:	mov	x20, x1
   1d978:	stp	x21, x22, [sp, #32]
   1d97c:	mov	x22, x2
   1d980:	stp	x23, x24, [sp, #48]
   1d984:	mov	w23, w3
   1d988:	str	x25, [sp, #64]
   1d98c:	mov	w25, w0
   1d990:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1d994:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1d998:	ldr	x0, [x0, #4048]
   1d99c:	mrs	x1, tpidr_el0
   1d9a0:	ldr	x0, [x1, x0]
   1d9a4:	ldr	x19, [x0, #8]
   1d9a8:	ldr	w0, [x19, #8]
   1d9ac:	tbnz	w0, #0, 1da7c <acc_on_device@@OACC_2.0+0x3b4>
   1d9b0:	add	x24, x19, #0xa8
   1d9b4:	mov	x0, x24
   1d9b8:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1d9bc:	mov	x2, x22
   1d9c0:	mov	x1, x20
   1d9c4:	mov	x0, x19
   1d9c8:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1d9cc:	cbnz	x0, 1d9ec <acc_on_device@@OACC_2.0+0x324>
   1d9d0:	mov	x0, x24
   1d9d4:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1d9d8:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1d9dc:	mov	w2, w22
   1d9e0:	mov	x1, x20
   1d9e4:	add	x0, x0, #0x398
   1d9e8:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1d9ec:	ldr	x1, [x0, #16]
   1d9f0:	cmn	w23, #0x1
   1d9f4:	ldr	x21, [x1, #16]
   1d9f8:	ldr	x1, [x0]
   1d9fc:	sub	x21, x21, x1
   1da00:	ldr	x1, [x0, #24]
   1da04:	add	x1, x20, x1
   1da08:	add	x21, x21, x1
   1da0c:	b.lt	1da1c <acc_on_device@@OACC_2.0+0x354>  // b.tstop
   1da10:	ldr	x1, [x19, #248]
   1da14:	mov	w0, w23
   1da18:	blr	x1
   1da1c:	ldr	w0, [x19, #12]
   1da20:	cbz	w25, 1da68 <acc_on_device@@OACC_2.0+0x3a0>
   1da24:	ldr	x4, [x19, #120]
   1da28:	mov	x3, x22
   1da2c:	mov	x2, x20
   1da30:	mov	x1, x21
   1da34:	blr	x4
   1da38:	cmn	w23, #0x1
   1da3c:	b.lt	1da4c <acc_on_device@@OACC_2.0+0x384>  // b.tstop
   1da40:	ldr	x1, [x19, #248]
   1da44:	mov	w0, #0xfffffffe            	// #-2
   1da48:	blr	x1
   1da4c:	mov	x0, x24
   1da50:	ldp	x19, x20, [sp, #16]
   1da54:	ldp	x21, x22, [sp, #32]
   1da58:	ldp	x23, x24, [sp, #48]
   1da5c:	ldr	x25, [sp, #64]
   1da60:	ldp	x29, x30, [sp], #80
   1da64:	b	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1da68:	mov	x3, x22
   1da6c:	mov	x2, x21
   1da70:	mov	x1, x20
   1da74:	ldr	x4, [x19, #112]
   1da78:	b	1da34 <acc_on_device@@OACC_2.0+0x36c>
   1da7c:	ldp	x19, x20, [sp, #16]
   1da80:	ldp	x21, x22, [sp, #32]
   1da84:	ldp	x23, x24, [sp, #48]
   1da88:	ldr	x25, [sp, #64]
   1da8c:	ldp	x29, x30, [sp], #80
   1da90:	ret
   1da94:	stp	x29, x30, [sp, #-96]!
   1da98:	cmp	x1, #0x0
   1da9c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   1daa0:	mov	x29, sp
   1daa4:	stp	x19, x20, [sp, #16]
   1daa8:	stp	x21, x22, [sp, #32]
   1daac:	str	x23, [sp, #48]
   1dab0:	str	x2, [sp, #72]
   1dab4:	b.ne	1dac4 <acc_on_device@@OACC_2.0+0x3fc>  // b.any
   1dab8:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1dabc:	add	x0, x0, #0x3ae
   1dac0:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1dac4:	mov	w22, w0
   1dac8:	mov	x19, x1
   1dacc:	mov	w23, w3
   1dad0:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1dad4:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1dad8:	ldr	x0, [x0, #4048]
   1dadc:	mrs	x1, tpidr_el0
   1dae0:	ldr	x0, [x1, x0]
   1dae4:	ldr	x21, [x0, #8]
   1dae8:	ldr	w0, [x21, #8]
   1daec:	tbnz	w0, #0, 1dba0 <acc_on_device@@OACC_2.0+0x4d8>
   1daf0:	add	x20, x21, #0xa8
   1daf4:	mov	x0, x20
   1daf8:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1dafc:	ldr	x2, [sp, #72]
   1db00:	mov	x1, x19
   1db04:	mov	x0, x21
   1db08:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1db0c:	cbz	x0, 1dbb8 <acc_on_device@@OACC_2.0+0x4f0>
   1db10:	ldp	x1, x3, [x0, #16]
   1db14:	ldr	x21, [x1, #16]
   1db18:	add	x21, x21, x3
   1db1c:	tbnz	w22, #0, 1db44 <acc_on_device@@OACC_2.0+0x47c>
   1db20:	mov	x0, x20
   1db24:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1db28:	ldr	w4, [sp, #72]
   1db2c:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1db30:	mov	x3, x21
   1db34:	mov	x1, x19
   1db38:	add	x0, x0, #0x3c6
   1db3c:	mov	x2, x4
   1db40:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1db44:	ldr	x1, [sp, #72]
   1db48:	ldr	x2, [x0, #8]
   1db4c:	add	x1, x19, x1
   1db50:	cmp	x1, x2
   1db54:	b.ls	1db74 <acc_on_device@@OACC_2.0+0x4ac>  // b.plast
   1db58:	mov	x0, x20
   1db5c:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1db60:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1db64:	ldr	w2, [sp, #72]
   1db68:	mov	x1, x19
   1db6c:	add	x0, x0, #0x3ea
   1db70:	b	1dac0 <acc_on_device@@OACC_2.0+0x3f8>
   1db74:	ldr	x1, [x0, #32]
   1db78:	cmn	x1, #0x1
   1db7c:	b.eq	1db94 <acc_on_device@@OACC_2.0+0x4cc>  // b.none
   1db80:	add	x1, x1, #0x1
   1db84:	str	x1, [x0, #32]
   1db88:	ldr	x1, [x0, #40]
   1db8c:	add	x1, x1, #0x1
   1db90:	str	x1, [x0, #40]
   1db94:	mov	x19, x21
   1db98:	mov	x0, x20
   1db9c:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1dba0:	mov	x0, x19
   1dba4:	ldp	x19, x20, [sp, #16]
   1dba8:	ldp	x21, x22, [sp, #32]
   1dbac:	ldr	x23, [sp, #48]
   1dbb0:	ldp	x29, x30, [sp], #96
   1dbb4:	ret
   1dbb8:	tbz	w22, #1, 1db58 <acc_on_device@@OACC_2.0+0x490>
   1dbbc:	ubfx	x22, x22, #2, #1
   1dbc0:	mov	x0, x20
   1dbc4:	strh	w22, [sp, #86]
   1dbc8:	str	x19, [sp, #88]
   1dbcc:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1dbd0:	cmn	w23, #0x1
   1dbd4:	b.lt	1dbe4 <acc_on_device@@OACC_2.0+0x51c>  // b.tstop
   1dbd8:	ldr	x1, [x21, #248]
   1dbdc:	mov	w0, w23
   1dbe0:	blr	x1
   1dbe4:	mov	x1, #0x1                   	// #1
   1dbe8:	add	x5, sp, #0x56
   1dbec:	add	x4, sp, #0x48
   1dbf0:	add	x2, sp, #0x58
   1dbf4:	mov	x0, x21
   1dbf8:	mov	w7, #0x0                   	// #0
   1dbfc:	mov	w6, #0x1                   	// #1
   1dc00:	mov	x3, #0x0                   	// #0
   1dc04:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1dc08:	mov	x22, x0
   1dc0c:	ldr	x0, [x0, #64]
   1dc10:	mov	x1, #0x1                   	// #1
   1dc14:	cmn	w23, #0x1
   1dc18:	str	x1, [x0, #40]
   1dc1c:	b.lt	1dc2c <acc_on_device@@OACC_2.0+0x564>  // b.tstop
   1dc20:	ldr	x1, [x21, #248]
   1dc24:	mov	w0, #0xfffffffe            	// #-2
   1dc28:	blr	x1
   1dc2c:	mov	x0, x20
   1dc30:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1dc34:	ldr	x0, [x21, #176]
   1dc38:	str	x0, [x22, #40]
   1dc3c:	ldr	x19, [x22, #32]
   1dc40:	str	x22, [x21, #176]
   1dc44:	mov	x0, x20
   1dc48:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1dc4c:	b	1dba0 <acc_on_device@@OACC_2.0+0x4d8>
   1dc50:	add	x2, x1, x2
   1dc54:	cbnz	x0, 1dc5c <acc_on_device@@OACC_2.0+0x594>
   1dc58:	ret
   1dc5c:	ldr	x5, [x0, #16]
   1dc60:	cmp	x5, x1
   1dc64:	b.hi	1dc90 <acc_on_device@@OACC_2.0+0x5c8>  // b.pmore
   1dc68:	ldr	x3, [x0, #24]
   1dc6c:	cmp	x3, x2
   1dc70:	b.cc	1dc90 <acc_on_device@@OACC_2.0+0x5c8>  // b.lo, b.ul, b.last
   1dc74:	ldr	x8, [x0, #48]
   1dc78:	mov	x3, #0x0                   	// #0
   1dc7c:	mov	x9, #0x48                  	// #72
   1dc80:	cmp	x3, x8
   1dc84:	b.ne	1dc98 <acc_on_device@@OACC_2.0+0x5d0>  // b.any
   1dc88:	mov	x0, #0x0                   	// #0
   1dc8c:	b	1dc58 <acc_on_device@@OACC_2.0+0x590>
   1dc90:	ldr	x0, [x0, #40]
   1dc94:	b	1dc54 <acc_on_device@@OACC_2.0+0x58c>
   1dc98:	ldr	x7, [x0, #8]
   1dc9c:	mul	x6, x3, x9
   1dca0:	add	x3, x3, #0x1
   1dca4:	add	x4, x7, x6
   1dca8:	ldr	x6, [x7, x6]
   1dcac:	ldr	x2, [x4, #24]
   1dcb0:	add	x2, x2, x6
   1dcb4:	ldr	x6, [x4, #8]
   1dcb8:	sub	x2, x2, x5
   1dcbc:	add	x2, x1, x2
   1dcc0:	cmp	x2, x6
   1dcc4:	b.hi	1dc80 <acc_on_device@@OACC_2.0+0x5b8>  // b.pmore
   1dcc8:	mov	x0, x4
   1dccc:	b	1dc58 <acc_on_device@@OACC_2.0+0x590>
   1dcd0:	stp	x29, x30, [sp, #-112]!
   1dcd4:	mov	x29, sp
   1dcd8:	stp	x25, x26, [sp, #64]
   1dcdc:	mov	w26, w0
   1dce0:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1dce4:	ldr	x0, [x0, #4048]
   1dce8:	stp	x21, x22, [sp, #32]
   1dcec:	mov	x21, x1
   1dcf0:	mrs	x1, tpidr_el0
   1dcf4:	stp	x19, x20, [sp, #16]
   1dcf8:	ldr	x0, [x1, x0]
   1dcfc:	stp	x23, x24, [sp, #48]
   1dd00:	stp	x27, x28, [sp, #80]
   1dd04:	ldr	x20, [x0, #8]
   1dd08:	ldr	w0, [x20, #8]
   1dd0c:	tbnz	w0, #0, 1deb4 <acc_on_device@@OACC_2.0+0x7ec>
   1dd10:	add	x22, x20, #0xa8
   1dd14:	mov	x24, x2
   1dd18:	mov	w23, w3
   1dd1c:	mov	x0, x22
   1dd20:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1dd24:	mov	x2, x24
   1dd28:	mov	x1, x21
   1dd2c:	mov	x0, x20
   1dd30:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1dd34:	mov	x19, x0
   1dd38:	cbnz	x0, 1dd58 <acc_on_device@@OACC_2.0+0x690>
   1dd3c:	mov	x0, x22
   1dd40:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1dd44:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1dd48:	mov	w2, w24
   1dd4c:	mov	x1, x21
   1dd50:	add	x0, x0, #0x398
   1dd54:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1dd58:	ldp	x2, x25, [x0]
   1dd5c:	ldp	x0, x27, [x0, #16]
   1dd60:	sub	x25, x25, x2
   1dd64:	cmp	x21, x2
   1dd68:	add	x27, x21, x27
   1dd6c:	ldr	x28, [x0, #16]
   1dd70:	b.ne	1dd7c <acc_on_device@@OACC_2.0+0x6b4>  // b.any
   1dd74:	cmp	x24, x25
   1dd78:	b.eq	1dda0 <acc_on_device@@OACC_2.0+0x6d8>  // b.none
   1dd7c:	mov	x0, x22
   1dd80:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1dd84:	ldr	x1, [x19]
   1dd88:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1dd8c:	mov	w4, w24
   1dd90:	mov	x3, x21
   1dd94:	mov	w2, w25
   1dd98:	add	x0, x0, #0x3fe
   1dd9c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1dda0:	ldr	x1, [x19, #32]
   1dda4:	cmn	x1, #0x1
   1dda8:	b.ne	1ddb0 <acc_on_device@@OACC_2.0+0x6e8>  // b.any
   1ddac:	stp	xzr, xzr, [x19, #32]
   1ddb0:	ldp	x1, x4, [x19, #32]
   1ddb4:	cmp	x1, x4
   1ddb8:	b.cs	1ddd0 <acc_on_device@@OACC_2.0+0x708>  // b.hs, b.nlast
   1ddbc:	mov	x0, x22
   1ddc0:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1ddc4:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ddc8:	add	x0, x0, #0x41a
   1ddcc:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ddd0:	tbz	w26, #1, 1de8c <acc_on_device@@OACC_2.0+0x7c4>
   1ddd4:	sub	x1, x1, x4
   1ddd8:	stp	x1, xzr, [x19, #32]
   1dddc:	ldr	x1, [x19, #32]
   1dde0:	cbnz	x1, 1de6c <acc_on_device@@OACC_2.0+0x7a4>
   1dde4:	ldr	x1, [x0]
   1dde8:	cmp	x1, #0x2
   1ddec:	b.ne	1de10 <acc_on_device@@OACC_2.0+0x748>  // b.any
   1ddf0:	ldr	x1, [x20, #176]
   1ddf4:	mov	x3, #0x0                   	// #0
   1ddf8:	cbz	x1, 1de10 <acc_on_device@@OACC_2.0+0x748>
   1ddfc:	cmp	x0, x1
   1de00:	ldr	x4, [x1, #40]
   1de04:	b.ne	1dea8 <acc_on_device@@OACC_2.0+0x7e0>  // b.any
   1de08:	cbz	x3, 1dea0 <acc_on_device@@OACC_2.0+0x7d8>
   1de0c:	str	x4, [x3, #40]
   1de10:	tbz	w26, #0, 1de60 <acc_on_device@@OACC_2.0+0x798>
   1de14:	cmn	w23, #0x1
   1de18:	b.lt	1de30 <acc_on_device@@OACC_2.0+0x768>  // b.tstop
   1de1c:	ldr	x1, [x20, #248]
   1de20:	mov	w0, w23
   1de24:	str	x2, [sp, #104]
   1de28:	blr	x1
   1de2c:	ldr	x2, [sp, #104]
   1de30:	sub	x2, x28, x2
   1de34:	ldr	w0, [x20, #12]
   1de38:	mov	x3, x25
   1de3c:	ldr	x4, [x20, #112]
   1de40:	add	x2, x2, x27
   1de44:	mov	x1, x21
   1de48:	blr	x4
   1de4c:	cmn	w23, #0x1
   1de50:	b.lt	1de60 <acc_on_device@@OACC_2.0+0x798>  // b.tstop
   1de54:	ldr	x1, [x20, #248]
   1de58:	mov	w0, #0xfffffffe            	// #-2
   1de5c:	blr	x1
   1de60:	mov	x1, x19
   1de64:	mov	x0, x20
   1de68:	bl	19c20 <omp_get_place_proc_ids@@OMP_4.5+0x24a8>
   1de6c:	mov	x0, x22
   1de70:	ldp	x19, x20, [sp, #16]
   1de74:	ldp	x21, x22, [sp, #32]
   1de78:	ldp	x23, x24, [sp, #48]
   1de7c:	ldp	x25, x26, [sp, #64]
   1de80:	ldp	x27, x28, [sp, #80]
   1de84:	ldp	x29, x30, [sp], #112
   1de88:	b	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1de8c:	cbz	x4, 1dddc <acc_on_device@@OACC_2.0+0x714>
   1de90:	sub	x4, x4, #0x1
   1de94:	sub	x1, x1, #0x1
   1de98:	stp	x1, x4, [x19, #32]
   1de9c:	b	1dddc <acc_on_device@@OACC_2.0+0x714>
   1dea0:	str	x4, [x20, #176]
   1dea4:	b	1de10 <acc_on_device@@OACC_2.0+0x748>
   1dea8:	mov	x3, x1
   1deac:	mov	x1, x4
   1deb0:	b	1ddf8 <acc_on_device@@OACC_2.0+0x730>
   1deb4:	ldp	x19, x20, [sp, #16]
   1deb8:	ldp	x21, x22, [sp, #32]
   1debc:	ldp	x23, x24, [sp, #48]
   1dec0:	ldp	x25, x26, [sp, #64]
   1dec4:	ldp	x27, x28, [sp, #80]
   1dec8:	ldp	x29, x30, [sp], #112
   1decc:	ret

000000000001ded0 <acc_malloc@@OACC_2.0>:
   1ded0:	cbz	x0, 1df58 <acc_malloc@@OACC_2.0+0x88>
   1ded4:	stp	x29, x30, [sp, #-32]!
   1ded8:	mov	x29, sp
   1dedc:	str	x19, [sp, #16]
   1dee0:	mov	x19, x0
   1dee4:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1dee8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1deec:	ldr	x0, [x0, #4048]
   1def0:	mrs	x1, tpidr_el0
   1def4:	ldr	x0, [x1, x0]
   1def8:	ldr	x0, [x0, #8]
   1defc:	cbnz	x0, 1df24 <acc_malloc@@OACC_2.0+0x54>
   1df00:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1df04:	add	x3, x3, #0x567
   1df08:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1df0c:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1df10:	add	x3, x3, #0x15
   1df14:	add	x1, x1, #0x360
   1df18:	add	x0, x0, #0x383
   1df1c:	mov	w2, #0x6a                  	// #106
   1df20:	bl	8b10 <__assert_fail@plt>
   1df24:	ldr	w1, [x0, #8]
   1df28:	tbz	w1, #0, 1df3c <acc_malloc@@OACC_2.0+0x6c>
   1df2c:	mov	x0, x19
   1df30:	ldr	x19, [sp, #16]
   1df34:	ldp	x29, x30, [sp], #32
   1df38:	b	87a0 <malloc@plt>
   1df3c:	mov	x1, x19
   1df40:	ldr	x19, [sp, #16]
   1df44:	ldp	x29, x30, [sp], #32
   1df48:	ldr	x2, [x0, #96]
   1df4c:	ldr	w0, [x0, #12]
   1df50:	mov	x16, x2
   1df54:	br	x16
   1df58:	ret

000000000001df5c <acc_memcpy_to_device@@OACC_2.0>:
   1df5c:	adrp	x5, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1df60:	add	x5, x5, #0x567
   1df64:	mov	x3, x2
   1df68:	add	x5, x5, #0x20
   1df6c:	mov	x2, x1
   1df70:	mov	w4, #0xfffffffe            	// #-2
   1df74:	mov	x1, x0
   1df78:	mov	w0, #0x0                   	// #0
   1df7c:	b	1d80c <acc_on_device@@OACC_2.0+0x144>

000000000001df80 <acc_memcpy_to_device_async@@OACC_2.5>:
   1df80:	adrp	x5, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1df84:	add	x5, x5, #0x567
   1df88:	mov	w4, w3
   1df8c:	add	x5, x5, #0x35
   1df90:	mov	x3, x2
   1df94:	mov	x2, x1
   1df98:	mov	x1, x0
   1df9c:	mov	w0, #0x0                   	// #0
   1dfa0:	b	1d80c <acc_on_device@@OACC_2.0+0x144>

000000000001dfa4 <acc_memcpy_from_device@@OACC_2.0>:
   1dfa4:	adrp	x5, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1dfa8:	add	x5, x5, #0x567
   1dfac:	mov	x3, x2
   1dfb0:	add	x5, x5, #0x50
   1dfb4:	mov	x2, x0
   1dfb8:	mov	w4, #0xfffffffe            	// #-2
   1dfbc:	mov	w0, #0x1                   	// #1
   1dfc0:	b	1d80c <acc_on_device@@OACC_2.0+0x144>

000000000001dfc4 <acc_memcpy_from_device_async@@OACC_2.5>:
   1dfc4:	adrp	x5, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1dfc8:	add	x5, x5, #0x567
   1dfcc:	mov	w4, w3
   1dfd0:	add	x5, x5, #0x67
   1dfd4:	mov	x3, x2
   1dfd8:	mov	x2, x0
   1dfdc:	mov	w0, #0x1                   	// #1
   1dfe0:	b	1d80c <acc_on_device@@OACC_2.0+0x144>

000000000001dfe4 <acc_deviceptr@@OACC_2.0>:
   1dfe4:	stp	x29, x30, [sp, #-48]!
   1dfe8:	mov	x29, sp
   1dfec:	stp	x19, x20, [sp, #16]
   1dff0:	mov	x19, x0
   1dff4:	str	x21, [sp, #32]
   1dff8:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1dffc:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e000:	ldr	x0, [x0, #4048]
   1e004:	mrs	x1, tpidr_el0
   1e008:	ldr	x0, [x1, x0]
   1e00c:	ldr	x21, [x0, #8]
   1e010:	ldr	w0, [x21, #8]
   1e014:	tbnz	w0, #0, 1e044 <acc_deviceptr@@OACC_2.0+0x60>
   1e018:	add	x20, x21, #0xa8
   1e01c:	mov	x0, x20
   1e020:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e024:	mov	x1, x19
   1e028:	mov	x0, x21
   1e02c:	mov	x2, #0x1                   	// #1
   1e030:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1e034:	cbnz	x0, 1e058 <acc_deviceptr@@OACC_2.0+0x74>
   1e038:	mov	x19, #0x0                   	// #0
   1e03c:	mov	x0, x20
   1e040:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e044:	mov	x0, x19
   1e048:	ldp	x19, x20, [sp, #16]
   1e04c:	ldr	x21, [sp, #32]
   1e050:	ldp	x29, x30, [sp], #48
   1e054:	ret
   1e058:	ldr	x2, [x0]
   1e05c:	ldp	x1, x0, [x0, #16]
   1e060:	ldr	x1, [x1, #16]
   1e064:	sub	x1, x1, x2
   1e068:	add	x0, x1, x0
   1e06c:	add	x19, x19, x0
   1e070:	mov	x0, x20
   1e074:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e078:	b	1e044 <acc_deviceptr@@OACC_2.0+0x60>

000000000001e07c <acc_hostptr@@OACC_2.0>:
   1e07c:	stp	x29, x30, [sp, #-48]!
   1e080:	mov	x29, sp
   1e084:	stp	x19, x20, [sp, #16]
   1e088:	mov	x19, x0
   1e08c:	str	x21, [sp, #32]
   1e090:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1e094:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e098:	ldr	x0, [x0, #4048]
   1e09c:	mrs	x1, tpidr_el0
   1e0a0:	ldr	x0, [x1, x0]
   1e0a4:	ldr	x21, [x0, #8]
   1e0a8:	ldr	w0, [x21, #8]
   1e0ac:	tbnz	w0, #0, 1e0e0 <acc_hostptr@@OACC_2.0+0x64>
   1e0b0:	add	x20, x21, #0xa8
   1e0b4:	mov	x0, x20
   1e0b8:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e0bc:	ldr	x0, [x21, #176]
   1e0c0:	cbz	x0, 1e0d4 <acc_hostptr@@OACC_2.0+0x58>
   1e0c4:	mov	x1, x19
   1e0c8:	mov	x2, #0x1                   	// #1
   1e0cc:	bl	1dc50 <acc_on_device@@OACC_2.0+0x588>
   1e0d0:	cbnz	x0, 1e0f4 <acc_hostptr@@OACC_2.0+0x78>
   1e0d4:	mov	x19, #0x0                   	// #0
   1e0d8:	mov	x0, x20
   1e0dc:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e0e0:	mov	x0, x19
   1e0e4:	ldp	x19, x20, [sp, #16]
   1e0e8:	ldr	x21, [sp, #32]
   1e0ec:	ldp	x29, x30, [sp], #48
   1e0f0:	ret
   1e0f4:	ldr	x2, [x0]
   1e0f8:	ldr	x1, [x0, #24]
   1e0fc:	ldr	x0, [x0, #16]
   1e100:	add	x1, x1, x2
   1e104:	ldr	x0, [x0, #16]
   1e108:	sub	x0, x1, x0
   1e10c:	add	x19, x19, x0
   1e110:	mov	x0, x20
   1e114:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e118:	b	1e0e0 <acc_hostptr@@OACC_2.0+0x64>

000000000001e11c <acc_is_present@@OACC_2.0>:
   1e11c:	cmp	x1, #0x0
   1e120:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   1e124:	b.eq	1e1d4 <acc_is_present@@OACC_2.0+0xb8>  // b.none
   1e128:	stp	x29, x30, [sp, #-48]!
   1e12c:	mov	x29, sp
   1e130:	stp	x19, x20, [sp, #16]
   1e134:	mov	x20, x0
   1e138:	stp	x21, x22, [sp, #32]
   1e13c:	mov	x21, x1
   1e140:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1e144:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e148:	ldr	x0, [x0, #4048]
   1e14c:	mrs	x1, tpidr_el0
   1e150:	ldr	x0, [x1, x0]
   1e154:	ldr	x19, [x0, #8]
   1e158:	ldr	w0, [x19, #8]
   1e15c:	tbnz	w0, #0, 1e1dc <acc_is_present@@OACC_2.0+0xc0>
   1e160:	add	x22, x19, #0xa8
   1e164:	mov	x0, x22
   1e168:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e16c:	mov	x0, x19
   1e170:	mov	x2, x21
   1e174:	mov	x1, x20
   1e178:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1e17c:	mov	x19, x0
   1e180:	cbz	x0, 1e1ac <acc_is_present@@OACC_2.0+0x90>
   1e184:	ldr	x1, [x0]
   1e188:	cmp	x1, x20
   1e18c:	b.hi	1e1cc <acc_is_present@@OACC_2.0+0xb0>  // b.pmore
   1e190:	ldr	x0, [x0, #8]
   1e194:	add	x20, x21, x20
   1e198:	cmp	x20, x0
   1e19c:	b.hi	1e1cc <acc_is_present@@OACC_2.0+0xb0>  // b.pmore
   1e1a0:	sub	x0, x0, x1
   1e1a4:	cmp	x21, x0
   1e1a8:	csel	x19, x19, xzr, ls  // ls = plast
   1e1ac:	mov	x0, x22
   1e1b0:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e1b4:	cmp	x19, #0x0
   1e1b8:	cset	w0, ne  // ne = any
   1e1bc:	ldp	x19, x20, [sp, #16]
   1e1c0:	ldp	x21, x22, [sp, #32]
   1e1c4:	ldp	x29, x30, [sp], #48
   1e1c8:	ret
   1e1cc:	mov	x19, #0x0                   	// #0
   1e1d0:	b	1e1ac <acc_is_present@@OACC_2.0+0x90>
   1e1d4:	mov	w0, #0x0                   	// #0
   1e1d8:	ret
   1e1dc:	mov	w0, #0x1                   	// #1
   1e1e0:	b	1e1bc <acc_is_present@@OACC_2.0+0xa0>

000000000001e1e4 <acc_map_data@@OACC_2.0>:
   1e1e4:	stp	x29, x30, [sp, #-96]!
   1e1e8:	mov	x29, sp
   1e1ec:	stp	x19, x20, [sp, #16]
   1e1f0:	mov	x20, x1
   1e1f4:	mov	x19, x2
   1e1f8:	stp	x21, x22, [sp, #32]
   1e1fc:	mov	x21, x0
   1e200:	stp	x23, x24, [sp, #48]
   1e204:	strh	wzr, [sp, #70]
   1e208:	stp	x0, x1, [sp, #72]
   1e20c:	str	x2, [sp, #88]
   1e210:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1e214:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e218:	ldr	x0, [x0, #4048]
   1e21c:	mrs	x1, tpidr_el0
   1e220:	ldr	x24, [x1, x0]
   1e224:	ldr	x22, [x24, #8]
   1e228:	add	x23, x22, #0xa8
   1e22c:	ldr	w0, [x22, #8]
   1e230:	tbz	w0, #0, 1e248 <acc_map_data@@OACC_2.0+0x64>
   1e234:	cmp	x21, x20
   1e238:	b.eq	1e350 <acc_map_data@@OACC_2.0+0x16c>  // b.none
   1e23c:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e240:	add	x0, x0, #0x442
   1e244:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e248:	cmp	x20, #0x0
   1e24c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   1e250:	b.eq	1e258 <acc_map_data@@OACC_2.0+0x74>  // b.none
   1e254:	cbnz	x19, 1e274 <acc_map_data@@OACC_2.0+0x90>
   1e258:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e25c:	mov	w4, w19
   1e260:	mov	x3, x20
   1e264:	mov	w2, w19
   1e268:	mov	x1, x21
   1e26c:	add	x0, x0, #0x46a
   1e270:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e274:	mov	x0, x23
   1e278:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e27c:	mov	x2, x19
   1e280:	mov	x1, x21
   1e284:	mov	x0, x22
   1e288:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1e28c:	cbz	x0, 1e2ac <acc_map_data@@OACC_2.0+0xc8>
   1e290:	mov	x0, x23
   1e294:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e298:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e29c:	mov	w2, w19
   1e2a0:	mov	x1, x21
   1e2a4:	add	x0, x0, #0x48a
   1e2a8:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e2ac:	ldr	x0, [x24, #8]
   1e2b0:	ldr	x0, [x0, #176]
   1e2b4:	cbz	x0, 1e2e4 <acc_map_data@@OACC_2.0+0x100>
   1e2b8:	mov	x2, x19
   1e2bc:	mov	x1, x20
   1e2c0:	bl	1dc50 <acc_on_device@@OACC_2.0+0x588>
   1e2c4:	cbz	x0, 1e2e4 <acc_map_data@@OACC_2.0+0x100>
   1e2c8:	mov	x0, x23
   1e2cc:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e2d0:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e2d4:	mov	w2, w19
   1e2d8:	mov	x1, x20
   1e2dc:	add	x0, x0, #0x4b3
   1e2e0:	b	1e2a8 <acc_map_data@@OACC_2.0+0xc4>
   1e2e4:	mov	x0, x23
   1e2e8:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e2ec:	add	x5, sp, #0x46
   1e2f0:	add	x4, sp, #0x58
   1e2f4:	add	x3, sp, #0x50
   1e2f8:	add	x2, sp, #0x48
   1e2fc:	mov	w7, #0x0                   	// #0
   1e300:	mov	w6, #0x1                   	// #1
   1e304:	mov	x0, x22
   1e308:	mov	x1, #0x1                   	// #1
   1e30c:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1e310:	mov	x19, x0
   1e314:	ldr	x0, [x0, #64]
   1e318:	mov	x1, #0xffffffffffffffff    	// #-1
   1e31c:	str	x1, [x0, #32]
   1e320:	mov	x0, x23
   1e324:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e328:	ldr	x0, [x22, #176]
   1e32c:	str	x0, [x19, #40]
   1e330:	str	x19, [x22, #176]
   1e334:	mov	x0, x23
   1e338:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e33c:	ldp	x19, x20, [sp, #16]
   1e340:	ldp	x21, x22, [sp, #32]
   1e344:	ldp	x23, x24, [sp, #48]
   1e348:	ldp	x29, x30, [sp], #96
   1e34c:	ret
   1e350:	mov	x0, x23
   1e354:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e358:	mov	x0, #0x0                   	// #0
   1e35c:	ldr	x1, [x22, #176]
   1e360:	str	x1, [x0, #40]
   1e364:	brk	#0x3e8

000000000001e368 <acc_unmap_data@@OACC_2.0>:
   1e368:	stp	x29, x30, [sp, #-64]!
   1e36c:	mrs	x1, tpidr_el0
   1e370:	mov	x29, sp
   1e374:	stp	x19, x20, [sp, #16]
   1e378:	mov	x20, x0
   1e37c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e380:	ldr	x0, [x0, #4048]
   1e384:	stp	x21, x22, [sp, #32]
   1e388:	ldr	x0, [x1, x0]
   1e38c:	ldr	x21, [x0, #8]
   1e390:	ldr	w0, [x21, #8]
   1e394:	str	x23, [sp, #48]
   1e398:	tbnz	w0, #0, 1e484 <acc_unmap_data@@OACC_2.0+0x11c>
   1e39c:	add	x22, x21, #0xa8
   1e3a0:	mov	x0, x22
   1e3a4:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e3a8:	mov	x1, x20
   1e3ac:	mov	x0, x21
   1e3b0:	mov	x2, #0x1                   	// #1
   1e3b4:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1e3b8:	mov	x19, x0
   1e3bc:	cbnz	x0, 1e3d8 <acc_unmap_data@@OACC_2.0+0x70>
   1e3c0:	mov	x0, x22
   1e3c4:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e3c8:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e3cc:	mov	x1, x20
   1e3d0:	add	x0, x0, #0x4de
   1e3d4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e3d8:	ldr	x23, [x0]
   1e3dc:	cmp	x20, x23
   1e3e0:	b.eq	1e408 <acc_unmap_data@@OACC_2.0+0xa0>  // b.none
   1e3e4:	mov	x0, x22
   1e3e8:	ldr	x21, [x19, #8]
   1e3ec:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e3f0:	ldr	x1, [x19]
   1e3f4:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e3f8:	mov	x3, x20
   1e3fc:	sub	w2, w21, w23
   1e400:	add	x0, x0, #0x4f7
   1e404:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e408:	mov	x0, #0x1                   	// #1
   1e40c:	str	x0, [x19, #32]
   1e410:	ldr	x19, [x19, #16]
   1e414:	ldr	x0, [x19]
   1e418:	cmp	x0, #0x2
   1e41c:	b.ne	1e44c <acc_unmap_data@@OACC_2.0+0xe4>  // b.any
   1e420:	mov	x1, #0x0                   	// #0
   1e424:	ldr	x0, [x21, #176]
   1e428:	stp	xzr, xzr, [x19, #24]
   1e42c:	cbnz	x0, 1e438 <acc_unmap_data@@OACC_2.0+0xd0>
   1e430:	mov	x19, #0x0                   	// #0
   1e434:	b	1e44c <acc_unmap_data@@OACC_2.0+0xe4>
   1e438:	cmp	x0, x19
   1e43c:	ldr	x2, [x0, #40]
   1e440:	b.ne	1e478 <acc_unmap_data@@OACC_2.0+0x110>  // b.any
   1e444:	cbz	x1, 1e470 <acc_unmap_data@@OACC_2.0+0x108>
   1e448:	str	x2, [x1, #40]
   1e44c:	mov	x0, x22
   1e450:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e454:	mov	x0, x19
   1e458:	mov	w1, #0x1                   	// #1
   1e45c:	ldp	x19, x20, [sp, #16]
   1e460:	ldp	x21, x22, [sp, #32]
   1e464:	ldr	x23, [sp, #48]
   1e468:	ldp	x29, x30, [sp], #64
   1e46c:	b	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1e470:	str	x2, [x21, #176]
   1e474:	b	1e44c <acc_unmap_data@@OACC_2.0+0xe4>
   1e478:	mov	x1, x0
   1e47c:	mov	x0, x2
   1e480:	b	1e42c <acc_unmap_data@@OACC_2.0+0xc4>
   1e484:	ldp	x19, x20, [sp, #16]
   1e488:	ldp	x21, x22, [sp, #32]
   1e48c:	ldr	x23, [sp, #48]
   1e490:	ldp	x29, x30, [sp], #64
   1e494:	ret

000000000001e498 <acc_free@@OACC_2.0>:
   1e498:	cbz	x0, 1e5ac <acc_free@@OACC_2.0+0x114>
   1e49c:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e4a0:	ldr	x1, [x1, #4048]
   1e4a4:	mrs	x2, tpidr_el0
   1e4a8:	stp	x29, x30, [sp, #-64]!
   1e4ac:	mov	x29, sp
   1e4b0:	ldr	x1, [x2, x1]
   1e4b4:	stp	x19, x20, [sp, #16]
   1e4b8:	stp	x21, x22, [sp, #32]
   1e4bc:	stp	x23, x24, [sp, #48]
   1e4c0:	cbz	x1, 1e4cc <acc_free@@OACC_2.0+0x34>
   1e4c4:	ldr	x19, [x1, #8]
   1e4c8:	cbnz	x19, 1e4f0 <acc_free@@OACC_2.0+0x58>
   1e4cc:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e4d0:	add	x3, x3, #0x567
   1e4d4:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e4d8:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e4dc:	add	x3, x3, #0x84
   1e4e0:	add	x1, x1, #0x360
   1e4e4:	add	x0, x0, #0x37c
   1e4e8:	mov	w2, #0x7f                  	// #127
   1e4ec:	bl	8b10 <__assert_fail@plt>
   1e4f0:	ldr	w1, [x19, #8]
   1e4f4:	tbz	w1, #0, 1e50c <acc_free@@OACC_2.0+0x74>
   1e4f8:	ldp	x19, x20, [sp, #16]
   1e4fc:	ldp	x21, x22, [sp, #32]
   1e500:	ldp	x23, x24, [sp, #48]
   1e504:	ldp	x29, x30, [sp], #64
   1e508:	b	8950 <free@plt>
   1e50c:	add	x23, x19, #0xa8
   1e510:	mov	x20, x0
   1e514:	mov	x0, x23
   1e518:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e51c:	ldr	x0, [x19, #176]
   1e520:	cbz	x0, 1e58c <acc_free@@OACC_2.0+0xf4>
   1e524:	mov	x1, x20
   1e528:	mov	x2, #0x1                   	// #1
   1e52c:	bl	1dc50 <acc_on_device@@OACC_2.0+0x588>
   1e530:	mov	x21, x0
   1e534:	cbz	x0, 1e58c <acc_free@@OACC_2.0+0xf4>
   1e538:	ldp	x0, x22, [x0, #16]
   1e53c:	ldr	x24, [x0, #16]
   1e540:	mov	x0, x23
   1e544:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e548:	ldr	x0, [x21]
   1e54c:	add	x0, x22, x0
   1e550:	sub	x0, x0, x24
   1e554:	add	x0, x20, x0
   1e558:	bl	8750 <acc_unmap_data@plt>
   1e55c:	ldr	w0, [x19, #12]
   1e560:	mov	x1, x20
   1e564:	ldr	x2, [x19, #104]
   1e568:	blr	x2
   1e56c:	tst	w0, #0xff
   1e570:	b.ne	1e598 <acc_free@@OACC_2.0+0x100>  // b.any
   1e574:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e578:	add	x1, x1, #0x567
   1e57c:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e580:	add	x1, x1, #0x8d
   1e584:	add	x0, x0, #0x50c
   1e588:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e58c:	mov	x0, x23
   1e590:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e594:	b	1e55c <acc_free@@OACC_2.0+0xc4>
   1e598:	ldp	x19, x20, [sp, #16]
   1e59c:	ldp	x21, x22, [sp, #32]
   1e5a0:	ldp	x23, x24, [sp, #48]
   1e5a4:	ldp	x29, x30, [sp], #64
   1e5a8:	ret
   1e5ac:	ret

000000000001e5b0 <acc_create@@OACC_2.0>:
   1e5b0:	mov	x2, x1
   1e5b4:	mov	w3, #0xfffffffe            	// #-2
   1e5b8:	mov	x1, x0
   1e5bc:	mov	w0, #0x3                   	// #3
   1e5c0:	b	1da94 <acc_on_device@@OACC_2.0+0x3cc>

000000000001e5c4 <acc_create_async@@OACC_2.5>:
   1e5c4:	mov	w3, w2
   1e5c8:	mov	x2, x1
   1e5cc:	mov	x1, x0
   1e5d0:	mov	w0, #0x3                   	// #3
   1e5d4:	b	1da94 <acc_on_device@@OACC_2.0+0x3cc>

000000000001e5d8 <acc_copyin@@OACC_2.0>:
   1e5d8:	mov	x2, x1
   1e5dc:	mov	w3, #0xfffffffe            	// #-2
   1e5e0:	mov	x1, x0
   1e5e4:	mov	w0, #0x7                   	// #7
   1e5e8:	b	1da94 <acc_on_device@@OACC_2.0+0x3cc>

000000000001e5ec <acc_copyin_async@@OACC_2.5>:
   1e5ec:	mov	w3, w2
   1e5f0:	mov	x2, x1
   1e5f4:	mov	x1, x0
   1e5f8:	mov	w0, #0x7                   	// #7
   1e5fc:	b	1da94 <acc_on_device@@OACC_2.0+0x3cc>

000000000001e600 <acc_delete@@OACC_2.0>:
   1e600:	mov	x2, x1
   1e604:	mov	w3, #0xfffffffe            	// #-2
   1e608:	mov	x1, x0
   1e60c:	mov	w0, #0x0                   	// #0
   1e610:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e614 <acc_delete_async@@OACC_2.5>:
   1e614:	mov	w3, w2
   1e618:	mov	x2, x1
   1e61c:	mov	x1, x0
   1e620:	mov	w0, #0x0                   	// #0
   1e624:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e628 <acc_delete_finalize@@OACC_2.5>:
   1e628:	mov	x2, x1
   1e62c:	mov	w3, #0xfffffffe            	// #-2
   1e630:	mov	x1, x0
   1e634:	mov	w0, #0x2                   	// #2
   1e638:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e63c <acc_delete_finalize_async@@OACC_2.5>:
   1e63c:	mov	w3, w2
   1e640:	mov	x2, x1
   1e644:	mov	x1, x0
   1e648:	mov	w0, #0x2                   	// #2
   1e64c:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e650 <acc_copyout@@OACC_2.0>:
   1e650:	mov	x2, x1
   1e654:	mov	w3, #0xfffffffe            	// #-2
   1e658:	mov	x1, x0
   1e65c:	mov	w0, #0x1                   	// #1
   1e660:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e664 <acc_copyout_async@@OACC_2.5>:
   1e664:	mov	w3, w2
   1e668:	mov	x2, x1
   1e66c:	mov	x1, x0
   1e670:	mov	w0, #0x1                   	// #1
   1e674:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e678 <acc_copyout_finalize@@OACC_2.5>:
   1e678:	mov	x2, x1
   1e67c:	mov	w3, #0xfffffffe            	// #-2
   1e680:	mov	x1, x0
   1e684:	mov	w0, #0x3                   	// #3
   1e688:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e68c <acc_copyout_finalize_async@@OACC_2.5>:
   1e68c:	mov	w3, w2
   1e690:	mov	x2, x1
   1e694:	mov	x1, x0
   1e698:	mov	w0, #0x3                   	// #3
   1e69c:	b	1dcd0 <acc_on_device@@OACC_2.0+0x608>

000000000001e6a0 <acc_update_device@@OACC_2.0>:
   1e6a0:	mov	x2, x1
   1e6a4:	mov	w3, #0xfffffffe            	// #-2
   1e6a8:	mov	x1, x0
   1e6ac:	mov	w0, #0x1                   	// #1
   1e6b0:	b	1d968 <acc_on_device@@OACC_2.0+0x2a0>

000000000001e6b4 <acc_update_device_async@@OACC_2.5>:
   1e6b4:	mov	w3, w2
   1e6b8:	mov	x2, x1
   1e6bc:	mov	x1, x0
   1e6c0:	mov	w0, #0x1                   	// #1
   1e6c4:	b	1d968 <acc_on_device@@OACC_2.0+0x2a0>

000000000001e6c8 <acc_update_self@@OACC_2.0>:
   1e6c8:	mov	x2, x1
   1e6cc:	mov	w3, #0xfffffffe            	// #-2
   1e6d0:	mov	x1, x0
   1e6d4:	mov	w0, #0x0                   	// #0
   1e6d8:	b	1d968 <acc_on_device@@OACC_2.0+0x2a0>

000000000001e6dc <acc_update_self_async@@OACC_2.5>:
   1e6dc:	mov	w3, w2
   1e6e0:	mov	x2, x1
   1e6e4:	mov	x1, x0
   1e6e8:	mov	w0, #0x0                   	// #0
   1e6ec:	b	1d968 <acc_on_device@@OACC_2.0+0x2a0>
   1e6f0:	stp	x29, x30, [sp, #-80]!
   1e6f4:	mov	x29, sp
   1e6f8:	stp	x19, x20, [sp, #16]
   1e6fc:	mov	x19, x0
   1e700:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e704:	ldr	x0, [x0, #4048]
   1e708:	stp	x21, x22, [sp, #32]
   1e70c:	mov	x21, x1
   1e710:	mrs	x1, tpidr_el0
   1e714:	mov	x22, x2
   1e718:	stp	x23, x24, [sp, #48]
   1e71c:	ldr	x0, [x1, x0]
   1e720:	ldr	x1, [x2]
   1e724:	ldr	x20, [x0, #8]
   1e728:	ldr	x0, [x21]
   1e72c:	add	x23, x20, #0xa8
   1e730:	str	x25, [sp, #64]
   1e734:	mov	x25, x3
   1e738:	bl	8830 <acc_is_present@plt>
   1e73c:	cbz	w0, 1e7f8 <acc_update_self_async@@OACC_2.5+0x11c>
   1e740:	mov	x0, x23
   1e744:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e748:	ldr	x1, [x21]
   1e74c:	mov	x0, x20
   1e750:	ldr	x2, [x22]
   1e754:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1e758:	mov	x20, x0
   1e75c:	mov	x0, x23
   1e760:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e764:	mov	x2, #0x0                   	// #0
   1e768:	ldr	x1, [x20, #16]
   1e76c:	add	x1, x1, #0x40
   1e770:	ldur	x5, [x1, #-16]
   1e774:	cmp	x5, x2
   1e778:	b.ne	1e788 <acc_update_self_async@@OACC_2.5+0xac>  // b.any
   1e77c:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e780:	add	x0, x0, #0x531
   1e784:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e788:	lsl	x0, x2, #5
   1e78c:	ldr	x0, [x1, x0]
   1e790:	cmp	x0, x20
   1e794:	b.ne	1e7f0 <acc_update_self_async@@OACC_2.5+0x114>  // b.any
   1e798:	add	x19, x2, x19
   1e79c:	cmp	x2, x19
   1e7a0:	b.ne	1e7bc <acc_update_self_async@@OACC_2.5+0xe0>  // b.any
   1e7a4:	ldp	x19, x20, [sp, #16]
   1e7a8:	ldp	x21, x22, [sp, #32]
   1e7ac:	ldp	x23, x24, [sp, #48]
   1e7b0:	ldr	x25, [sp, #64]
   1e7b4:	ldp	x29, x30, [sp], #80
   1e7b8:	ret
   1e7bc:	cmp	x2, x5
   1e7c0:	b.cs	1e7e8 <acc_update_self_async@@OACC_2.5+0x10c>  // b.hs, b.nlast
   1e7c4:	lsl	x0, x2, #5
   1e7c8:	ldr	x3, [x1, x0]
   1e7cc:	cbz	x3, 1e7e8 <acc_update_self_async@@OACC_2.5+0x10c>
   1e7d0:	ldr	x4, [x3, #32]
   1e7d4:	add	x4, x4, #0x1
   1e7d8:	str	x4, [x3, #32]
   1e7dc:	ldr	x4, [x3, #40]
   1e7e0:	add	x4, x4, #0x1
   1e7e4:	str	x4, [x3, #40]
   1e7e8:	add	x2, x2, #0x1
   1e7ec:	b	1e79c <acc_update_self_async@@OACC_2.5+0xc0>
   1e7f0:	add	x2, x2, #0x1
   1e7f4:	b	1e774 <acc_update_self_async@@OACC_2.5+0x98>
   1e7f8:	adrp	x24, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1e7fc:	ldr	w1, [x24, #1544]
   1e800:	cbz	w1, 1e81c <acc_update_self_async@@OACC_2.5+0x140>
   1e804:	adrp	x2, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e808:	add	x2, x2, #0x567
   1e80c:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1e810:	add	x2, x2, #0x96
   1e814:	add	x1, x1, #0xedd
   1e818:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1e81c:	mov	x1, x19
   1e820:	mov	x5, x25
   1e824:	mov	x4, x22
   1e828:	mov	x2, x21
   1e82c:	mov	x0, x20
   1e830:	mov	w7, #0x0                   	// #0
   1e834:	mov	w6, #0x1                   	// #1
   1e838:	mov	x3, #0x0                   	// #0
   1e83c:	bl	18d4c <omp_get_place_proc_ids@@OMP_4.5+0x15d4>
   1e840:	mov	x19, x0
   1e844:	ldr	w0, [x24, #1544]
   1e848:	cbz	w0, 1e868 <acc_update_self_async@@OACC_2.5+0x18c>
   1e84c:	adrp	x2, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e850:	add	x2, x2, #0x567
   1e854:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1e858:	add	x2, x2, #0x96
   1e85c:	add	x1, x1, #0xef5
   1e860:	mov	w0, #0x0                   	// #0
   1e864:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1e868:	ldr	x0, [x19, #64]
   1e86c:	mov	x1, #0x1                   	// #1
   1e870:	str	x1, [x0, #40]
   1e874:	mov	x0, x23
   1e878:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e87c:	ldr	x0, [x20, #176]
   1e880:	ldp	x21, x22, [sp, #32]
   1e884:	ldr	x25, [sp, #64]
   1e888:	str	x0, [x19, #40]
   1e88c:	mov	x0, x23
   1e890:	ldp	x23, x24, [sp, #48]
   1e894:	str	x19, [x20, #176]
   1e898:	ldp	x19, x20, [sp, #16]
   1e89c:	ldp	x29, x30, [sp], #80
   1e8a0:	b	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e8a4:	stp	x29, x30, [sp, #-96]!
   1e8a8:	cmp	w5, #0x1
   1e8ac:	mov	x29, sp
   1e8b0:	stp	x25, x26, [sp, #64]
   1e8b4:	and	w25, w2, #0xff
   1e8b8:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1e8bc:	ldr	x2, [x2, #4048]
   1e8c0:	stp	x23, x24, [sp, #48]
   1e8c4:	mov	w23, w3
   1e8c8:	mrs	x3, tpidr_el0
   1e8cc:	cset	w26, ne  // ne = any
   1e8d0:	stp	x19, x20, [sp, #16]
   1e8d4:	mov	x19, x0
   1e8d8:	ldr	x2, [x3, x2]
   1e8dc:	stp	x21, x22, [sp, #32]
   1e8e0:	ldr	x24, [x2, #8]
   1e8e4:	str	x27, [sp, #80]
   1e8e8:	mov	w27, w4
   1e8ec:	bl	8830 <acc_is_present@plt>
   1e8f0:	cbz	w0, 1eab4 <acc_update_self_async@@OACC_2.5+0x3d8>
   1e8f4:	add	x21, x24, #0xa8
   1e8f8:	mov	x0, x21
   1e8fc:	bl	1d7c8 <acc_on_device@@OACC_2.0+0x100>
   1e900:	mov	x1, x19
   1e904:	mov	x0, x24
   1e908:	mov	x2, #0x1                   	// #1
   1e90c:	bl	1d940 <acc_on_device@@OACC_2.0+0x278>
   1e910:	mov	x20, x0
   1e914:	cbnz	x0, 1e930 <acc_update_self_async@@OACC_2.5+0x254>
   1e918:	mov	x0, x21
   1e91c:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e920:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e924:	mov	x1, x19
   1e928:	add	x0, x0, #0x4de
   1e92c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e930:	adrp	x22, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1e934:	add	w26, w26, #0x2
   1e938:	ldr	w0, [x22, #1544]
   1e93c:	cbz	w0, 1e95c <acc_update_self_async@@OACC_2.5+0x280>
   1e940:	adrp	x2, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e944:	add	x2, x2, #0x567
   1e948:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1e94c:	add	x2, x2, #0xae
   1e950:	add	x1, x1, #0xf0e
   1e954:	mov	w0, #0x0                   	// #0
   1e958:	bl	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1e95c:	ldp	x0, x1, [x20, #32]
   1e960:	ldr	x19, [x20, #16]
   1e964:	cmp	x0, x1
   1e968:	b.cs	1e980 <acc_update_self_async@@OACC_2.5+0x2a4>  // b.hs, b.nlast
   1e96c:	mov	x0, x21
   1e970:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e974:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1e978:	add	x0, x0, #0x41a
   1e97c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1e980:	cbz	w27, 1e9c8 <acc_update_self_async@@OACC_2.5+0x2ec>
   1e984:	sub	x0, x0, x1
   1e988:	stp	x0, xzr, [x20, #32]
   1e98c:	mov	x0, x21
   1e990:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1e994:	ldr	x0, [x20, #32]
   1e998:	cbnz	x0, 1ea3c <acc_update_self_async@@OACC_2.5+0x360>
   1e99c:	ldr	x1, [x19]
   1e9a0:	sxtw	x3, w26
   1e9a4:	cmp	x1, w26, sxtw
   1e9a8:	b.ne	1e9f4 <acc_update_self_async@@OACC_2.5+0x318>  // b.any
   1e9ac:	ldr	x19, [x24, #176]
   1e9b0:	mov	x1, #0x0                   	// #0
   1e9b4:	cbnz	x19, 1e9dc <acc_update_self_async@@OACC_2.5+0x300>
   1e9b8:	mov	x0, #0x1                   	// #1
   1e9bc:	str	x0, [x20, #32]
   1e9c0:	str	xzr, [x19]
   1e9c4:	brk	#0x3e8
   1e9c8:	cbz	x1, 1e98c <acc_update_self_async@@OACC_2.5+0x2b0>
   1e9cc:	sub	x1, x1, #0x1
   1e9d0:	sub	x0, x0, #0x1
   1e9d4:	stp	x0, x1, [x20, #32]
   1e9d8:	b	1e98c <acc_update_self_async@@OACC_2.5+0x2b0>
   1e9dc:	ldr	x4, [x20, #16]
   1e9e0:	ldr	x2, [x19, #40]
   1e9e4:	cmp	x4, x19
   1e9e8:	b.ne	1ea88 <acc_update_self_async@@OACC_2.5+0x3ac>  // b.any
   1e9ec:	cbz	x1, 1ea80 <acc_update_self_async@@OACC_2.5+0x3a4>
   1e9f0:	str	x2, [x1, #40]
   1e9f4:	mov	x1, #0x1                   	// #1
   1e9f8:	str	x1, [x20, #32]
   1e9fc:	ldr	x1, [x19, #48]
   1ea00:	add	x2, x19, #0x40
   1ea04:	str	x3, [x19]
   1ea08:	cmp	x1, x0
   1ea0c:	b.eq	1ea28 <acc_update_self_async@@OACC_2.5+0x34c>  // b.none
   1ea10:	lsl	x3, x0, #5
   1ea14:	ldr	x3, [x2, x3]
   1ea18:	cmp	x3, x20
   1ea1c:	b.ne	1ea94 <acc_update_self_async@@OACC_2.5+0x3b8>  // b.any
   1ea20:	add	x0, x19, x0, lsl #5
   1ea24:	strb	w25, [x0, #72]
   1ea28:	cmn	w23, #0x1
   1ea2c:	b.ge	1ea9c <acc_update_self_async@@OACC_2.5+0x3c0>  // b.tcont
   1ea30:	mov	x0, x19
   1ea34:	mov	w1, #0x1                   	// #1
   1ea38:	bl	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1ea3c:	mov	x0, x21
   1ea40:	bl	1d7f0 <acc_on_device@@OACC_2.0+0x128>
   1ea44:	ldr	w0, [x22, #1544]
   1ea48:	cbz	w0, 1eab4 <acc_update_self_async@@OACC_2.5+0x3d8>
   1ea4c:	ldp	x19, x20, [sp, #16]
   1ea50:	adrp	x2, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ea54:	ldp	x21, x22, [sp, #32]
   1ea58:	add	x2, x2, #0x567
   1ea5c:	ldp	x23, x24, [sp, #48]
   1ea60:	add	x2, x2, #0xae
   1ea64:	ldp	x25, x26, [sp, #64]
   1ea68:	adrp	x1, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1ea6c:	ldr	x27, [sp, #80]
   1ea70:	add	x1, x1, #0xf26
   1ea74:	ldp	x29, x30, [sp], #96
   1ea78:	mov	w0, #0x0                   	// #0
   1ea7c:	b	afec <GOMP_critical_name_end@@GOMP_1.0+0x48>
   1ea80:	str	x2, [x24, #176]
   1ea84:	b	1e9f4 <acc_update_self_async@@OACC_2.5+0x318>
   1ea88:	mov	x1, x19
   1ea8c:	mov	x19, x2
   1ea90:	b	1e9b4 <acc_update_self_async@@OACC_2.5+0x2d8>
   1ea94:	add	x0, x0, #0x1
   1ea98:	b	1ea08 <acc_update_self_async@@OACC_2.5+0x32c>
   1ea9c:	ldr	x0, [x19, #56]
   1eaa0:	mov	w1, w23
   1eaa4:	ldr	x2, [x0, #192]
   1eaa8:	mov	x0, x19
   1eaac:	blr	x2
   1eab0:	b	1ea3c <acc_update_self_async@@OACC_2.5+0x360>
   1eab4:	ldp	x19, x20, [sp, #16]
   1eab8:	ldp	x21, x22, [sp, #32]
   1eabc:	ldp	x23, x24, [sp, #48]
   1eac0:	ldp	x25, x26, [sp, #64]
   1eac4:	ldr	x27, [sp, #80]
   1eac8:	ldp	x29, x30, [sp], #96
   1eacc:	ret

000000000001ead0 <acc_async_test@@OACC_2.0>:
   1ead0:	stp	x29, x30, [sp, #-16]!
   1ead4:	add	w1, w0, #0x2
   1ead8:	cmp	w1, #0x1
   1eadc:	mov	x29, sp
   1eae0:	b.ls	1eaf8 <acc_async_test@@OACC_2.0+0x28>  // b.plast
   1eae4:	tbz	w0, #31, 1eaf8 <acc_async_test@@OACC_2.0+0x28>
   1eae8:	mov	w1, w0
   1eaec:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1eaf0:	add	x0, x0, #0x62d
   1eaf4:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1eaf8:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1eafc:	ldr	x1, [x1, #4048]
   1eb00:	mrs	x2, tpidr_el0
   1eb04:	ldr	x1, [x2, x1]
   1eb08:	cbz	x1, 1eb14 <acc_async_test@@OACC_2.0+0x44>
   1eb0c:	ldr	x1, [x1, #8]
   1eb10:	cbnz	x1, 1eb20 <acc_async_test@@OACC_2.0+0x50>
   1eb14:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1eb18:	add	x0, x0, #0x648
   1eb1c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1eb20:	ldp	x29, x30, [sp], #16
   1eb24:	ldr	x1, [x1, #200]
   1eb28:	mov	x16, x1
   1eb2c:	br	x16

000000000001eb30 <acc_async_test_all@@OACC_2.0>:
   1eb30:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1eb34:	ldr	x0, [x0, #4048]
   1eb38:	mrs	x1, tpidr_el0
   1eb3c:	ldr	x0, [x1, x0]
   1eb40:	cbz	x0, 1eb4c <acc_async_test_all@@OACC_2.0+0x1c>
   1eb44:	ldr	x0, [x0, #8]
   1eb48:	cbnz	x0, 1eb60 <acc_async_test_all@@OACC_2.0+0x30>
   1eb4c:	stp	x29, x30, [sp, #-16]!
   1eb50:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1eb54:	add	x0, x0, #0x648
   1eb58:	mov	x29, sp
   1eb5c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1eb60:	ldr	x0, [x0, #208]
   1eb64:	mov	x16, x0
   1eb68:	br	x16

000000000001eb6c <acc_async_wait@@OACC_2.0.1>:
   1eb6c:	stp	x29, x30, [sp, #-16]!
   1eb70:	add	w1, w0, #0x2
   1eb74:	cmp	w1, #0x1
   1eb78:	mov	x29, sp
   1eb7c:	b.ls	1eb94 <acc_async_wait@@OACC_2.0.1+0x28>  // b.plast
   1eb80:	tbz	w0, #31, 1eb94 <acc_async_wait@@OACC_2.0.1+0x28>
   1eb84:	mov	w1, w0
   1eb88:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1eb8c:	add	x0, x0, #0x62d
   1eb90:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1eb94:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1eb98:	ldr	x1, [x1, #4048]
   1eb9c:	mrs	x2, tpidr_el0
   1eba0:	ldr	x1, [x2, x1]
   1eba4:	cbz	x1, 1ebb0 <acc_async_wait@@OACC_2.0.1+0x44>
   1eba8:	ldr	x1, [x1, #8]
   1ebac:	cbnz	x1, 1ebbc <acc_async_wait@@OACC_2.0.1+0x50>
   1ebb0:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ebb4:	add	x0, x0, #0x648
   1ebb8:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ebbc:	ldp	x29, x30, [sp], #16
   1ebc0:	ldr	x1, [x1, #216]
   1ebc4:	mov	x16, x1
   1ebc8:	br	x16

000000000001ebcc <acc_wait_async@@OACC_2.0>:
   1ebcc:	adrp	x2, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ebd0:	ldr	x2, [x2, #4048]
   1ebd4:	mrs	x3, tpidr_el0
   1ebd8:	ldr	x2, [x3, x2]
   1ebdc:	cbz	x2, 1ebe8 <acc_wait_async@@OACC_2.0+0x1c>
   1ebe0:	ldr	x2, [x2, #8]
   1ebe4:	cbnz	x2, 1ebfc <acc_wait_async@@OACC_2.0+0x30>
   1ebe8:	stp	x29, x30, [sp, #-16]!
   1ebec:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ebf0:	add	x0, x0, #0x648
   1ebf4:	mov	x29, sp
   1ebf8:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ebfc:	ldr	x2, [x2, #224]
   1ec00:	mov	x16, x2
   1ec04:	br	x16

000000000001ec08 <acc_async_wait_all@@OACC_2.0.1>:
   1ec08:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ec0c:	ldr	x0, [x0, #4048]
   1ec10:	mrs	x1, tpidr_el0
   1ec14:	ldr	x0, [x1, x0]
   1ec18:	cbz	x0, 1ec24 <acc_async_wait_all@@OACC_2.0.1+0x1c>
   1ec1c:	ldr	x0, [x0, #8]
   1ec20:	cbnz	x0, 1ec38 <acc_async_wait_all@@OACC_2.0.1+0x30>
   1ec24:	stp	x29, x30, [sp, #-16]!
   1ec28:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ec2c:	add	x0, x0, #0x648
   1ec30:	mov	x29, sp
   1ec34:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ec38:	ldr	x0, [x0, #232]
   1ec3c:	mov	x16, x0
   1ec40:	br	x16

000000000001ec44 <acc_wait_all_async@@OACC_2.0>:
   1ec44:	stp	x29, x30, [sp, #-16]!
   1ec48:	add	w1, w0, #0x2
   1ec4c:	cmp	w1, #0x1
   1ec50:	mov	x29, sp
   1ec54:	b.ls	1ec6c <acc_wait_all_async@@OACC_2.0+0x28>  // b.plast
   1ec58:	tbz	w0, #31, 1ec6c <acc_wait_all_async@@OACC_2.0+0x28>
   1ec5c:	mov	w1, w0
   1ec60:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ec64:	add	x0, x0, #0x62d
   1ec68:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ec6c:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ec70:	ldr	x1, [x1, #4048]
   1ec74:	mrs	x2, tpidr_el0
   1ec78:	ldr	x1, [x2, x1]
   1ec7c:	cbz	x1, 1ec88 <acc_wait_all_async@@OACC_2.0+0x44>
   1ec80:	ldr	x1, [x1, #8]
   1ec84:	cbnz	x1, 1ec94 <acc_wait_all_async@@OACC_2.0+0x50>
   1ec88:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ec8c:	add	x0, x0, #0x648
   1ec90:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ec94:	ldp	x29, x30, [sp], #16
   1ec98:	ldr	x1, [x1, #240]
   1ec9c:	mov	x16, x1
   1eca0:	br	x16

000000000001eca4 <GOMP_PLUGIN_async_unmap_vars@@GOMP_PLUGIN_1.0>:
   1eca4:	stp	x29, x30, [sp, #-32]!
   1eca8:	mov	x29, sp
   1ecac:	stp	x19, x20, [sp, #16]
   1ecb0:	mov	x19, x0
   1ecb4:	mov	w0, w1
   1ecb8:	ldr	x20, [x19, #56]
   1ecbc:	ldr	x2, [x20, #248]
   1ecc0:	blr	x2
   1ecc4:	mov	x0, x19
   1ecc8:	mov	w1, #0x1                   	// #1
   1eccc:	bl	19e18 <omp_get_place_proc_ids@@OMP_4.5+0x26a0>
   1ecd0:	ldr	x1, [x20, #248]
   1ecd4:	mov	w0, #0xfffffffe            	// #-2
   1ecd8:	ldp	x19, x20, [sp, #16]
   1ecdc:	mov	x16, x1
   1ece0:	ldp	x29, x30, [sp], #32
   1ece4:	br	x16

000000000001ece8 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0>:
   1ece8:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ecec:	ldr	x0, [x0, #4048]
   1ecf0:	mrs	x1, tpidr_el0
   1ecf4:	ldr	x0, [x1, x0]
   1ecf8:	cbz	x0, 1ed00 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0+0x18>
   1ecfc:	ldr	x0, [x0, #40]
   1ed00:	ret

000000000001ed04 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2>:
   1ed04:	mov	w1, w0
   1ed08:	cmp	w0, #0x2
   1ed0c:	b.ls	1ed24 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x20>  // b.plast
   1ed10:	stp	x29, x30, [sp, #-16]!
   1ed14:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1ed18:	add	x0, x0, #0x659
   1ed1c:	mov	x29, sp
   1ed20:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1ed24:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1ed28:	add	x0, x0, #0x618
   1ed2c:	ldr	w0, [x0, w1, uxtw #2]
   1ed30:	ret

000000000001ed34 <acc_get_current_cuda_device@@OACC_2.0>:
   1ed34:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ed38:	ldr	x0, [x0, #4048]
   1ed3c:	mrs	x1, tpidr_el0
   1ed40:	ldr	x0, [x1, x0]
   1ed44:	cbz	x0, 1ed60 <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   1ed48:	ldr	x0, [x0, #8]
   1ed4c:	cbz	x0, 1ed60 <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   1ed50:	ldr	x0, [x0, #272]
   1ed54:	cbz	x0, 1ed60 <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   1ed58:	mov	x16, x0
   1ed5c:	br	x16
   1ed60:	mov	x0, #0x0                   	// #0
   1ed64:	ret

000000000001ed68 <acc_get_current_cuda_context@@OACC_2.0>:
   1ed68:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ed6c:	ldr	x0, [x0, #4048]
   1ed70:	mrs	x1, tpidr_el0
   1ed74:	ldr	x0, [x1, x0]
   1ed78:	cbz	x0, 1ed94 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   1ed7c:	ldr	x0, [x0, #8]
   1ed80:	cbz	x0, 1ed94 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   1ed84:	ldr	x0, [x0, #280]
   1ed88:	cbz	x0, 1ed94 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   1ed8c:	mov	x16, x0
   1ed90:	br	x16
   1ed94:	mov	x0, #0x0                   	// #0
   1ed98:	ret

000000000001ed9c <acc_get_cuda_stream@@OACC_2.0>:
   1ed9c:	adrp	x1, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1eda0:	ldr	x1, [x1, #4048]
   1eda4:	mrs	x2, tpidr_el0
   1eda8:	ldr	x1, [x2, x1]
   1edac:	add	w2, w0, #0x2
   1edb0:	cmp	w2, #0x1
   1edb4:	b.ls	1edbc <acc_get_cuda_stream@@OACC_2.0+0x20>  // b.plast
   1edb8:	tbnz	w0, #31, 1edd8 <acc_get_cuda_stream@@OACC_2.0+0x3c>
   1edbc:	cbz	x1, 1edd8 <acc_get_cuda_stream@@OACC_2.0+0x3c>
   1edc0:	ldr	x1, [x1, #8]
   1edc4:	cbz	x1, 1edd8 <acc_get_cuda_stream@@OACC_2.0+0x3c>
   1edc8:	ldr	x1, [x1, #288]
   1edcc:	cbz	x1, 1edd8 <acc_get_cuda_stream@@OACC_2.0+0x3c>
   1edd0:	mov	x16, x1
   1edd4:	br	x16
   1edd8:	mov	x0, #0x0                   	// #0
   1eddc:	ret

000000000001ede0 <acc_set_cuda_stream@@OACC_2.0>:
   1ede0:	stp	x29, x30, [sp, #-32]!
   1ede4:	mov	x29, sp
   1ede8:	stp	x19, x20, [sp, #16]
   1edec:	mov	w19, w0
   1edf0:	add	w0, w0, #0x2
   1edf4:	mov	x20, x1
   1edf8:	cmp	w0, #0x1
   1edfc:	b.ls	1ee04 <acc_set_cuda_stream@@OACC_2.0+0x24>  // b.plast
   1ee00:	tbnz	w19, #31, 1ee48 <acc_set_cuda_stream@@OACC_2.0+0x68>
   1ee04:	cbz	x20, 1ee48 <acc_set_cuda_stream@@OACC_2.0+0x68>
   1ee08:	bl	1d78c <acc_on_device@@OACC_2.0+0xc4>
   1ee0c:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1ee10:	ldr	x0, [x0, #4048]
   1ee14:	mrs	x1, tpidr_el0
   1ee18:	ldr	x0, [x1, x0]
   1ee1c:	cbz	x0, 1ee58 <acc_set_cuda_stream@@OACC_2.0+0x78>
   1ee20:	ldr	x0, [x0, #8]
   1ee24:	cbz	x0, 1ee58 <acc_set_cuda_stream@@OACC_2.0+0x78>
   1ee28:	ldr	x2, [x0, #296]
   1ee2c:	cbz	x2, 1ee58 <acc_set_cuda_stream@@OACC_2.0+0x78>
   1ee30:	mov	x1, x20
   1ee34:	mov	w0, w19
   1ee38:	ldp	x19, x20, [sp, #16]
   1ee3c:	mov	x16, x2
   1ee40:	ldp	x29, x30, [sp], #32
   1ee44:	br	x16
   1ee48:	mov	w0, #0x0                   	// #0
   1ee4c:	ldp	x19, x20, [sp, #16]
   1ee50:	ldp	x29, x30, [sp], #32
   1ee54:	ret
   1ee58:	mov	w0, #0xffffffff            	// #-1
   1ee5c:	b	1ee4c <acc_set_cuda_stream@@OACC_2.0+0x6c>
   1ee60:	stp	x29, x30, [sp, #-48]!
   1ee64:	mov	x29, sp
   1ee68:	stp	x19, x20, [sp, #16]
   1ee6c:	sxtw	x20, w0
   1ee70:	mov	x19, x1
   1ee74:	str	x21, [sp, #32]
   1ee78:	mov	x21, x20
   1ee7c:	add	x20, x20, #0x6
   1ee80:	neg	x20, x20, lsl #4
   1ee84:	cbz	x19, 1eeb4 <acc_set_cuda_stream@@OACC_2.0+0xd4>
   1ee88:	ldr	x1, [x19, #32]
   1ee8c:	mov	w0, w21
   1ee90:	bl	1ee60 <acc_set_cuda_stream@@OACC_2.0+0x80>
   1ee94:	cbnz	x0, 1eeb8 <acc_set_cuda_stream@@OACC_2.0+0xd8>
   1ee98:	ldr	x2, [x19, #8]
   1ee9c:	add	x0, x2, x20
   1eea0:	ldr	w1, [x0, #200]
   1eea4:	cmp	w1, #0x2
   1eea8:	b.eq	1eeb8 <acc_set_cuda_stream@@OACC_2.0+0xd8>  // b.none
   1eeac:	ldr	x19, [x19, #24]
   1eeb0:	b	1ee84 <acc_set_cuda_stream@@OACC_2.0+0xa4>
   1eeb4:	mov	x0, #0x0                   	// #0
   1eeb8:	ldp	x19, x20, [sp, #16]
   1eebc:	ldr	x21, [sp, #32]
   1eec0:	ldp	x29, x30, [sp], #48
   1eec4:	ret
   1eec8:	stp	x29, x30, [sp, #-48]!
   1eecc:	mov	x29, sp
   1eed0:	stp	x19, x20, [sp, #16]
   1eed4:	mov	x19, x0
   1eed8:	mov	x20, x1
   1eedc:	str	x21, [sp, #32]
   1eee0:	mov	x21, x2
   1eee4:	cbz	x19, 1ef0c <acc_set_cuda_stream@@OACC_2.0+0x12c>
   1eee8:	mov	x0, x19
   1eeec:	mov	x1, x21
   1eef0:	blr	x20
   1eef4:	ldr	x0, [x19, #24]
   1eef8:	mov	x2, x21
   1eefc:	mov	x1, x20
   1ef00:	bl	1eec8 <acc_set_cuda_stream@@OACC_2.0+0xe8>
   1ef04:	ldr	x19, [x19, #32]
   1ef08:	b	1eee4 <acc_set_cuda_stream@@OACC_2.0+0x104>
   1ef0c:	ldp	x19, x20, [sp, #16]
   1ef10:	ldr	x21, [sp, #32]
   1ef14:	ldp	x29, x30, [sp], #48
   1ef18:	ret
   1ef1c:	ldr	w5, [x1]
   1ef20:	mov	w8, #0xffffffff            	// #-1
   1ef24:	mov	w9, #0x1                   	// #1
   1ef28:	ldr	x2, [x0]
   1ef2c:	ldr	w1, [x2]
   1ef30:	cmp	w5, w1
   1ef34:	b.eq	1ef6c <acc_set_cuda_stream@@OACC_2.0+0x18c>  // b.none
   1ef38:	ldp	x1, x3, [x2, #24]
   1ef3c:	csel	w4, w8, w9, lt  // lt = tstop
   1ef40:	csel	x1, x1, x3, lt  // lt = tstop
   1ef44:	cbz	x1, 1ef6c <acc_set_cuda_stream@@OACC_2.0+0x18c>
   1ef48:	ldr	w3, [x1]
   1ef4c:	cmp	w5, w3
   1ef50:	b.ne	1ef70 <acc_set_cuda_stream@@OACC_2.0+0x190>  // b.any
   1ef54:	cmn	w4, #0x1
   1ef58:	b.ne	1efbc <acc_set_cuda_stream@@OACC_2.0+0x1dc>  // b.any
   1ef5c:	ldr	x3, [x1, #32]
   1ef60:	str	x2, [x1, #32]
   1ef64:	str	x3, [x2, #24]
   1ef68:	str	x1, [x0]
   1ef6c:	ret
   1ef70:	b.ge	1f04c <acc_set_cuda_stream@@OACC_2.0+0x26c>  // b.tcont
   1ef74:	ldr	x3, [x1, #24]
   1ef78:	cbz	x3, 1ef54 <acc_set_cuda_stream@@OACC_2.0+0x174>
   1ef7c:	mov	w3, #0xffffffff            	// #-1
   1ef80:	lsr	w7, w4, #31
   1ef84:	lsr	w6, w3, #31
   1ef88:	cmp	w7, #0x0
   1ef8c:	ccmp	w6, #0x0, #0x4, ne  // ne = any
   1ef90:	b.eq	1efcc <acc_set_cuda_stream@@OACC_2.0+0x1ec>  // b.none
   1ef94:	ldr	x3, [x1, #24]
   1ef98:	ldr	x4, [x3, #32]
   1ef9c:	str	x1, [x3, #32]
   1efa0:	str	x4, [x1, #24]
   1efa4:	str	x3, [x2, #24]
   1efa8:	ldr	x1, [x3, #32]
   1efac:	str	x2, [x3, #32]
   1efb0:	str	x1, [x2, #24]
   1efb4:	str	x3, [x0]
   1efb8:	b	1ef28 <acc_set_cuda_stream@@OACC_2.0+0x148>
   1efbc:	ldr	x3, [x1, #24]
   1efc0:	str	x2, [x1, #24]
   1efc4:	str	x3, [x2, #32]
   1efc8:	b	1ef68 <acc_set_cuda_stream@@OACC_2.0+0x188>
   1efcc:	cmp	w4, #0x0
   1efd0:	cset	w4, gt
   1efd4:	cmp	w3, #0x0
   1efd8:	cset	w3, gt
   1efdc:	cmp	w4, #0x0
   1efe0:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   1efe4:	b.eq	1f00c <acc_set_cuda_stream@@OACC_2.0+0x22c>  // b.none
   1efe8:	ldr	x3, [x1, #32]
   1efec:	ldr	x4, [x3, #24]
   1eff0:	str	x1, [x3, #24]
   1eff4:	str	x4, [x1, #32]
   1eff8:	str	x3, [x2, #32]
   1effc:	ldr	x1, [x3, #24]
   1f000:	str	x2, [x3, #24]
   1f004:	str	x1, [x2, #32]
   1f008:	b	1efb4 <acc_set_cuda_stream@@OACC_2.0+0x1d4>
   1f00c:	cmp	w7, #0x0
   1f010:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   1f014:	b.eq	1f02c <acc_set_cuda_stream@@OACC_2.0+0x24c>  // b.none
   1f018:	ldr	x3, [x1, #32]
   1f01c:	ldr	x4, [x3, #24]
   1f020:	str	x1, [x3, #24]
   1f024:	str	x4, [x1, #32]
   1f028:	b	1efa4 <acc_set_cuda_stream@@OACC_2.0+0x1c4>
   1f02c:	cmp	w6, #0x0
   1f030:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   1f034:	b.eq	1ef28 <acc_set_cuda_stream@@OACC_2.0+0x148>  // b.none
   1f038:	ldr	x3, [x1, #24]
   1f03c:	ldr	x4, [x3, #32]
   1f040:	str	x1, [x3, #32]
   1f044:	str	x4, [x1, #24]
   1f048:	b	1eff8 <acc_set_cuda_stream@@OACC_2.0+0x218>
   1f04c:	ldr	x3, [x1, #32]
   1f050:	cbz	x3, 1ef54 <acc_set_cuda_stream@@OACC_2.0+0x174>
   1f054:	mov	w3, #0x1                   	// #1
   1f058:	b	1ef80 <acc_set_cuda_stream@@OACC_2.0+0x1a0>
   1f05c:	stp	x29, x30, [sp, #-16]!
   1f060:	mov	w6, w2
   1f064:	mov	x29, sp
   1f068:	ldr	x1, [x1]
   1f06c:	bl	1ee60 <acc_set_cuda_stream@@OACC_2.0+0x80>
   1f070:	cmp	x0, #0x0
   1f074:	mov	x5, x0
   1f078:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   1f07c:	b.ne	1f08c <acc_set_cuda_stream@@OACC_2.0+0x2ac>  // b.any
   1f080:	mov	w0, #0x1                   	// #1
   1f084:	strb	w0, [x4]
   1f088:	b	1f0b8 <acc_set_cuda_stream@@OACC_2.0+0x2d8>
   1f08c:	ldr	x1, [x3]
   1f090:	mov	w0, w6
   1f094:	bl	1ee60 <acc_set_cuda_stream@@OACC_2.0+0x80>
   1f098:	cbz	x0, 1f080 <acc_set_cuda_stream@@OACC_2.0+0x2a0>
   1f09c:	ldr	w1, [x0, #88]
   1f0a0:	ldr	w2, [x5, #88]
   1f0a4:	cmp	w2, w1
   1f0a8:	b.gt	1f080 <acc_set_cuda_stream@@OACC_2.0+0x2a0>
   1f0ac:	b.ge	1f0c4 <acc_set_cuda_stream@@OACC_2.0+0x2e4>  // b.tcont
   1f0b0:	mov	x5, x0
   1f0b4:	strb	wzr, [x4]
   1f0b8:	mov	x0, x5
   1f0bc:	ldp	x29, x30, [sp], #16
   1f0c0:	ret
   1f0c4:	ldrb	w1, [x0, #207]
   1f0c8:	cbz	w1, 1f080 <acc_set_cuda_stream@@OACC_2.0+0x2a0>
   1f0cc:	ldrb	w1, [x5, #207]
   1f0d0:	cbnz	w1, 1f080 <acc_set_cuda_stream@@OACC_2.0+0x2a0>
   1f0d4:	b	1f0b0 <acc_set_cuda_stream@@OACC_2.0+0x2d0>
   1f0d8:	stp	x29, x30, [sp, #-16]!
   1f0dc:	mov	x11, x0
   1f0e0:	mov	x10, x1
   1f0e4:	mov	x29, sp
   1f0e8:	ldr	x2, [x0]
   1f0ec:	cbz	x2, 1f0f4 <acc_set_cuda_stream@@OACC_2.0+0x314>
   1f0f0:	bl	1ef1c <acc_set_cuda_stream@@OACC_2.0+0x13c>
   1f0f4:	ldr	x1, [x11]
   1f0f8:	cbz	x1, 1f144 <acc_set_cuda_stream@@OACC_2.0+0x364>
   1f0fc:	ldr	w2, [x1]
   1f100:	ldr	w0, [x10]
   1f104:	cmp	w2, w0
   1f108:	b.eq	1f128 <acc_set_cuda_stream@@OACC_2.0+0x348>  // b.none
   1f10c:	b.lt	1f134 <acc_set_cuda_stream@@OACC_2.0+0x354>  // b.tstop
   1f110:	ldr	x0, [x1, #24]
   1f114:	stp	x0, x1, [x10, #24]
   1f118:	str	xzr, [x1, #24]
   1f11c:	ldp	x29, x30, [sp], #16
   1f120:	str	x10, [x11]
   1f124:	ret
   1f128:	adrp	x0, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1f12c:	add	x0, x0, #0xe14
   1f130:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1f134:	ldr	x0, [x1, #32]
   1f138:	stp	x1, x0, [x10, #24]
   1f13c:	str	xzr, [x1, #32]
   1f140:	b	1f11c <acc_set_cuda_stream@@OACC_2.0+0x33c>
   1f144:	stp	xzr, xzr, [x10, #24]
   1f148:	b	1f11c <acc_set_cuda_stream@@OACC_2.0+0x33c>
   1f14c:	ldr	x2, [x0]
   1f150:	mov	x10, x0
   1f154:	mov	x11, x1
   1f158:	cbz	x2, 1f1b0 <acc_set_cuda_stream@@OACC_2.0+0x3d0>
   1f15c:	stp	x29, x30, [sp, #-16]!
   1f160:	mov	x29, sp
   1f164:	bl	1ef1c <acc_set_cuda_stream@@OACC_2.0+0x13c>
   1f168:	ldr	x2, [x0]
   1f16c:	cbz	x2, 1f1a0 <acc_set_cuda_stream@@OACC_2.0+0x3c0>
   1f170:	ldr	w1, [x2]
   1f174:	ldr	w0, [x11]
   1f178:	cmp	w1, w0
   1f17c:	b.ne	1f1a0 <acc_set_cuda_stream@@OACC_2.0+0x3c0>  // b.any
   1f180:	ldp	x0, x1, [x2, #24]
   1f184:	cbz	x0, 1f1a8 <acc_set_cuda_stream@@OACC_2.0+0x3c8>
   1f188:	str	x0, [x10]
   1f18c:	cbz	x1, 1f1a0 <acc_set_cuda_stream@@OACC_2.0+0x3c0>
   1f190:	mov	x2, x0
   1f194:	ldr	x0, [x0, #32]
   1f198:	cbnz	x0, 1f190 <acc_set_cuda_stream@@OACC_2.0+0x3b0>
   1f19c:	str	x1, [x2, #32]
   1f1a0:	ldp	x29, x30, [sp], #16
   1f1a4:	ret
   1f1a8:	str	x1, [x10]
   1f1ac:	b	1f1a0 <acc_set_cuda_stream@@OACC_2.0+0x3c0>
   1f1b0:	ldr	x2, [x0]
   1f1b4:	cbz	x2, 1f1f4 <acc_set_cuda_stream@@OACC_2.0+0x414>
   1f1b8:	ldr	w1, [x2]
   1f1bc:	ldr	w0, [x11]
   1f1c0:	cmp	w1, w0
   1f1c4:	b.ne	1f1f4 <acc_set_cuda_stream@@OACC_2.0+0x414>  // b.any
   1f1c8:	ldp	x0, x1, [x2, #24]
   1f1cc:	cbz	x0, 1f1ec <acc_set_cuda_stream@@OACC_2.0+0x40c>
   1f1d0:	str	x0, [x10]
   1f1d4:	cbz	x1, 1f1f4 <acc_set_cuda_stream@@OACC_2.0+0x414>
   1f1d8:	mov	x2, x0
   1f1dc:	ldr	x0, [x0, #32]
   1f1e0:	cbnz	x0, 1f1d8 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   1f1e4:	str	x1, [x2, #32]
   1f1e8:	ret
   1f1ec:	str	x1, [x10]
   1f1f0:	ret
   1f1f4:	ret
   1f1f8:	ldr	x2, [x0]
   1f1fc:	mov	x11, x1
   1f200:	cbz	x2, 1f230 <acc_set_cuda_stream@@OACC_2.0+0x450>
   1f204:	stp	x29, x30, [sp, #-16]!
   1f208:	mov	x29, sp
   1f20c:	bl	1ef1c <acc_set_cuda_stream@@OACC_2.0+0x13c>
   1f210:	ldr	x0, [x0]
   1f214:	cbz	x0, 1f228 <acc_set_cuda_stream@@OACC_2.0+0x448>
   1f218:	ldr	w2, [x0]
   1f21c:	ldr	w1, [x11]
   1f220:	cmp	w2, w1
   1f224:	csel	x0, x0, xzr, eq  // eq = none
   1f228:	ldp	x29, x30, [sp], #16
   1f22c:	ret
   1f230:	ldr	x0, [x0]
   1f234:	cbz	x0, 1f24c <acc_set_cuda_stream@@OACC_2.0+0x46c>
   1f238:	ldr	w2, [x0]
   1f23c:	ldr	w1, [x1]
   1f240:	cmp	w2, w1
   1f244:	csel	x0, x0, xzr, eq  // eq = none
   1f248:	ret
   1f24c:	ret
   1f250:	mov	x13, x1
   1f254:	sub	x0, x2, w0, sxtw #4
   1f258:	mov	x10, x2
   1f25c:	ldur	w1, [x0, #-8]
   1f260:	ldr	x0, [x13]
   1f264:	cbz	x0, 1f2cc <acc_set_cuda_stream@@OACC_2.0+0x4ec>
   1f268:	stp	x29, x30, [sp, #-48]!
   1f26c:	mov	x0, x13
   1f270:	mov	x29, sp
   1f274:	str	w1, [sp, #24]
   1f278:	add	x1, sp, #0x18
   1f27c:	bl	1f1f8 <acc_set_cuda_stream@@OACC_2.0+0x418>
   1f280:	mov	x12, x0
   1f284:	ldp	x0, x1, [x10]
   1f288:	str	x0, [x1]
   1f28c:	str	x1, [x0, #8]
   1f290:	ldr	x1, [x12, #8]
   1f294:	cmp	x10, x1
   1f298:	b.ne	1f2a8 <acc_set_cuda_stream@@OACC_2.0+0x4c8>  // b.any
   1f29c:	cmp	x10, x0
   1f2a0:	b.eq	1f2b0 <acc_set_cuda_stream@@OACC_2.0+0x4d0>  // b.none
   1f2a4:	str	x0, [x12, #8]
   1f2a8:	ldp	x29, x30, [sp], #48
   1f2ac:	ret
   1f2b0:	mov	x1, x12
   1f2b4:	str	xzr, [x12, #8]
   1f2b8:	mov	x0, x13
   1f2bc:	bl	1f14c <acc_set_cuda_stream@@OACC_2.0+0x36c>
   1f2c0:	mov	x0, x12
   1f2c4:	bl	8950 <free@plt>
   1f2c8:	b	1f2a8 <acc_set_cuda_stream@@OACC_2.0+0x4c8>
   1f2cc:	ldp	x1, x2, [x2]
   1f2d0:	str	x1, [x2]
   1f2d4:	str	x2, [x1, #8]
   1f2d8:	ldr	x0, [x0, #8]
   1f2dc:	brk	#0x3e8
   1f2e0:	ldr	x0, [x0]
   1f2e4:	b	1eec8 <acc_set_cuda_stream@@OACC_2.0+0xe8>
   1f2e8:	stp	x29, x30, [sp, #-48]!
   1f2ec:	cmp	x1, #0x0
   1f2f0:	mov	x5, x1
   1f2f4:	mov	x29, sp
   1f2f8:	str	x21, [sp, #32]
   1f2fc:	ldr	x21, [x2]
   1f300:	stp	x19, x20, [sp, #16]
   1f304:	mov	x20, x2
   1f308:	mov	x19, x4
   1f30c:	ccmp	x21, x1, #0x2, ne  // ne = any
   1f310:	b.cs	1f32c <acc_set_cuda_stream@@OACC_2.0+0x54c>  // b.hs, b.nlast
   1f314:	sub	x5, x5, x21
   1f318:	and	w1, w3, #0xff
   1f31c:	cmp	x5, x4
   1f320:	add	x0, x0, x21
   1f324:	csel	x2, x5, x4, ls  // ls = plast
   1f328:	bl	8800 <memset@plt>
   1f32c:	ldr	x4, [x20]
   1f330:	add	x19, x19, x4
   1f334:	str	x19, [x20]
   1f338:	cmp	x19, x21
   1f33c:	b.cs	1f34c <acc_set_cuda_stream@@OACC_2.0+0x56c>  // b.hs, b.nlast
   1f340:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f344:	add	x0, x0, #0x678
   1f348:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1f34c:	ldp	x19, x20, [sp, #16]
   1f350:	ldr	x21, [sp, #32]
   1f354:	ldp	x29, x30, [sp], #48
   1f358:	ret
   1f35c:	adrp	x3, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1f360:	mov	x2, x1
   1f364:	mov	x1, #0x1                   	// #1
   1f368:	ldr	x3, [x3, #4040]
   1f36c:	ldr	x3, [x3]
   1f370:	b	8a20 <fwrite@plt>
   1f374:	stp	x29, x30, [sp, #-64]!
   1f378:	mov	x29, sp
   1f37c:	stp	x19, x20, [sp, #16]
   1f380:	mov	x19, x1
   1f384:	adrp	x1, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1f388:	stp	x21, x22, [sp, #32]
   1f38c:	mov	x22, x0
   1f390:	adrp	x20, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1f394:	ldr	x0, [x1, #1600]
   1f398:	str	x23, [sp, #48]
   1f39c:	cmp	x0, x19
   1f3a0:	b.ls	1f3d0 <acc_set_cuda_stream@@OACC_2.0+0x5f0>  // b.plast
   1f3a4:	ldr	x0, [x20, #832]
   1f3a8:	mov	x2, x19
   1f3ac:	mov	x1, x22
   1f3b0:	bl	8600 <memcpy@plt>
   1f3b4:	ldr	x0, [x20, #832]
   1f3b8:	strb	wzr, [x0, x19]
   1f3bc:	ldp	x19, x20, [sp, #16]
   1f3c0:	ldp	x21, x22, [sp, #32]
   1f3c4:	ldr	x23, [sp, #48]
   1f3c8:	ldp	x29, x30, [sp], #64
   1f3cc:	ret
   1f3d0:	mov	x21, x1
   1f3d4:	add	x23, x19, #0x1
   1f3d8:	cbz	x0, 1f400 <acc_set_cuda_stream@@OACC_2.0+0x620>
   1f3dc:	ldr	x0, [x20, #832]
   1f3e0:	mov	x1, x23
   1f3e4:	bl	ae20 <fprintf@plt+0x22c0>
   1f3e8:	mov	x2, x19
   1f3ec:	mov	x1, x22
   1f3f0:	bl	8600 <memcpy@plt>
   1f3f4:	str	x23, [x21, #1600]
   1f3f8:	str	x0, [x20, #832]
   1f3fc:	b	1f3b4 <acc_set_cuda_stream@@OACC_2.0+0x5d4>
   1f400:	mov	x0, x23
   1f404:	bl	adb0 <fprintf@plt+0x2250>
   1f408:	b	1f3e8 <acc_set_cuda_stream@@OACC_2.0+0x608>

000000000001f40c <omp_set_affinity_format@@OMP_5.0>:
   1f40c:	stp	x29, x30, [sp, #-32]!
   1f410:	mov	x29, sp
   1f414:	str	x19, [sp, #16]
   1f418:	mov	x19, x0
   1f41c:	bl	8630 <strlen@plt>
   1f420:	mov	x1, x0
   1f424:	mov	x0, x19
   1f428:	ldr	x19, [sp, #16]
   1f42c:	ldp	x29, x30, [sp], #32
   1f430:	b	1f374 <acc_set_cuda_stream@@OACC_2.0+0x594>

000000000001f434 <omp_get_affinity_format@@OMP_5.0>:
   1f434:	stp	x29, x30, [sp, #-48]!
   1f438:	mov	x29, sp
   1f43c:	stp	x21, x22, [sp, #32]
   1f440:	mov	x21, x0
   1f444:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1f448:	stp	x19, x20, [sp, #16]
   1f44c:	mov	x19, x1
   1f450:	ldr	x22, [x0, #832]
   1f454:	mov	x0, x22
   1f458:	bl	8630 <strlen@plt>
   1f45c:	mov	x20, x0
   1f460:	cbz	x19, 1f47c <omp_get_affinity_format@@OMP_5.0+0x48>
   1f464:	cmp	x0, x19
   1f468:	b.cs	1f490 <omp_get_affinity_format@@OMP_5.0+0x5c>  // b.hs, b.nlast
   1f46c:	add	x2, x0, #0x1
   1f470:	mov	x1, x22
   1f474:	mov	x0, x21
   1f478:	bl	8600 <memcpy@plt>
   1f47c:	mov	x0, x20
   1f480:	ldp	x19, x20, [sp, #16]
   1f484:	ldp	x21, x22, [sp, #32]
   1f488:	ldp	x29, x30, [sp], #48
   1f48c:	ret
   1f490:	sub	x19, x19, #0x1
   1f494:	mov	x1, x22
   1f498:	mov	x2, x19
   1f49c:	mov	x0, x21
   1f4a0:	bl	8600 <memcpy@plt>
   1f4a4:	strb	wzr, [x21, x19]
   1f4a8:	b	1f47c <omp_get_affinity_format@@OMP_5.0+0x48>
   1f4ac:	stp	x29, x30, [sp, #-48]!
   1f4b0:	cmp	x1, #0x0
   1f4b4:	mov	x5, x1
   1f4b8:	mov	x29, sp
   1f4bc:	str	x21, [sp, #32]
   1f4c0:	ldr	x21, [x2]
   1f4c4:	stp	x19, x20, [sp, #16]
   1f4c8:	mov	x20, x2
   1f4cc:	mov	x19, x4
   1f4d0:	ccmp	x21, x1, #0x2, ne  // ne = any
   1f4d4:	b.cs	1f4f0 <omp_get_affinity_format@@OMP_5.0+0xbc>  // b.hs, b.nlast
   1f4d8:	sub	x5, x5, x21
   1f4dc:	mov	x1, x3
   1f4e0:	cmp	x5, x4
   1f4e4:	add	x0, x0, x21
   1f4e8:	csel	x2, x5, x4, ls  // ls = plast
   1f4ec:	bl	8600 <memcpy@plt>
   1f4f0:	ldr	x4, [x20]
   1f4f4:	add	x19, x19, x4
   1f4f8:	str	x19, [x20]
   1f4fc:	cmp	x19, x21
   1f500:	b.cs	1f510 <omp_get_affinity_format@@OMP_5.0+0xdc>  // b.hs, b.nlast
   1f504:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f508:	add	x0, x0, #0x678
   1f50c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1f510:	ldp	x19, x20, [sp, #16]
   1f514:	ldr	x21, [sp, #32]
   1f518:	ldp	x29, x30, [sp], #48
   1f51c:	ret
   1f520:	stp	x29, x30, [sp, #-64]!
   1f524:	cmp	x4, x6
   1f528:	ccmn	x4, #0x1, #0x4, hi  // hi = pmore
   1f52c:	mov	x29, sp
   1f530:	stp	x19, x20, [sp, #16]
   1f534:	mov	x20, x6
   1f538:	stp	x21, x22, [sp, #32]
   1f53c:	mov	x21, x5
   1f540:	stp	x23, x24, [sp, #48]
   1f544:	b.ne	1f564 <omp_get_affinity_format@@OMP_5.0+0x130>  // b.any
   1f548:	mov	x4, x6
   1f54c:	mov	x3, x5
   1f550:	ldp	x19, x20, [sp, #16]
   1f554:	ldp	x21, x22, [sp, #32]
   1f558:	ldp	x23, x24, [sp, #48]
   1f55c:	ldp	x29, x30, [sp], #64
   1f560:	b	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1f564:	mov	x22, x0
   1f568:	mov	x23, x1
   1f56c:	mov	x24, x2
   1f570:	and	w3, w3, #0xff
   1f574:	sub	x19, x4, x6
   1f578:	cbz	w3, 1f5a0 <omp_get_affinity_format@@OMP_5.0+0x16c>
   1f57c:	mov	x4, x19
   1f580:	mov	w3, #0x20                  	// #32
   1f584:	bl	1f2e8 <acc_set_cuda_stream@@OACC_2.0+0x508>
   1f588:	mov	x4, x20
   1f58c:	mov	x3, x21
   1f590:	mov	x2, x24
   1f594:	mov	x1, x23
   1f598:	mov	x0, x22
   1f59c:	b	1f550 <omp_get_affinity_format@@OMP_5.0+0x11c>
   1f5a0:	mov	x4, x6
   1f5a4:	mov	x3, x5
   1f5a8:	bl	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1f5ac:	mov	x4, x19
   1f5b0:	mov	x2, x24
   1f5b4:	mov	x1, x23
   1f5b8:	mov	x0, x22
   1f5bc:	ldp	x19, x20, [sp, #16]
   1f5c0:	mov	w3, #0x20                  	// #32
   1f5c4:	ldp	x21, x22, [sp, #32]
   1f5c8:	ldp	x23, x24, [sp, #48]
   1f5cc:	ldp	x29, x30, [sp], #64
   1f5d0:	b	1f2e8 <acc_set_cuda_stream@@OACC_2.0+0x508>
   1f5d4:	stp	x29, x30, [sp, #-80]!
   1f5d8:	mov	x29, sp
   1f5dc:	stp	x23, x24, [sp, #48]
   1f5e0:	mov	x24, x5
   1f5e4:	stp	x19, x20, [sp, #16]
   1f5e8:	mov	x20, x0
   1f5ec:	mov	x19, x6
   1f5f0:	mov	x0, x6
   1f5f4:	stp	x21, x22, [sp, #32]
   1f5f8:	mov	x21, x1
   1f5fc:	mov	x22, x2
   1f600:	stp	x25, x26, [sp, #64]
   1f604:	and	w26, w3, #0xff
   1f608:	and	w25, w4, #0xff
   1f60c:	bl	8630 <strlen@plt>
   1f610:	cmp	x0, x24
   1f614:	mov	x23, x0
   1f618:	ccmn	x24, #0x1, #0x4, cc  // cc = lo, ul, last
   1f61c:	b.ne	1f62c <omp_get_affinity_format@@OMP_5.0+0x1f8>  // b.any
   1f620:	mov	x4, x23
   1f624:	mov	x3, x19
   1f628:	b	1f684 <omp_get_affinity_format@@OMP_5.0+0x250>
   1f62c:	sub	x24, x24, x0
   1f630:	cbz	w26, 1f6e4 <omp_get_affinity_format@@OMP_5.0+0x2b0>
   1f634:	ldrb	w0, [x19]
   1f638:	cmp	w0, #0x2d
   1f63c:	b.ne	1f6a8 <omp_get_affinity_format@@OMP_5.0+0x274>  // b.any
   1f640:	mov	x4, #0x1                   	// #1
   1f644:	mov	x3, x19
   1f648:	mov	x2, x22
   1f64c:	mov	x1, x21
   1f650:	mov	x0, x20
   1f654:	bl	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1f658:	mov	x0, x20
   1f65c:	mov	x4, x24
   1f660:	mov	x2, x22
   1f664:	mov	x1, x21
   1f668:	mov	w3, #0x30                  	// #48
   1f66c:	bl	1f2e8 <acc_set_cuda_stream@@OACC_2.0+0x508>
   1f670:	ldrb	w0, [x19]
   1f674:	cmp	w0, #0x2d
   1f678:	b.ne	1f6c4 <omp_get_affinity_format@@OMP_5.0+0x290>  // b.any
   1f67c:	sub	x4, x23, #0x1
   1f680:	add	x3, x19, #0x1
   1f684:	mov	x2, x22
   1f688:	mov	x1, x21
   1f68c:	mov	x0, x20
   1f690:	ldp	x19, x20, [sp, #16]
   1f694:	ldp	x21, x22, [sp, #32]
   1f698:	ldp	x23, x24, [sp, #48]
   1f69c:	ldp	x25, x26, [sp, #64]
   1f6a0:	ldp	x29, x30, [sp], #80
   1f6a4:	b	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1f6a8:	cmp	w0, #0x30
   1f6ac:	b.ne	1f658 <omp_get_affinity_format@@OMP_5.0+0x224>  // b.any
   1f6b0:	ldrb	w0, [x19, #1]
   1f6b4:	cmp	w0, #0x78
   1f6b8:	b.ne	1f658 <omp_get_affinity_format@@OMP_5.0+0x224>  // b.any
   1f6bc:	mov	x4, #0x2                   	// #2
   1f6c0:	b	1f644 <omp_get_affinity_format@@OMP_5.0+0x210>
   1f6c4:	cmp	w0, #0x30
   1f6c8:	b.ne	1f620 <omp_get_affinity_format@@OMP_5.0+0x1ec>  // b.any
   1f6cc:	ldrb	w0, [x19, #1]
   1f6d0:	cmp	w0, #0x78
   1f6d4:	b.ne	1f620 <omp_get_affinity_format@@OMP_5.0+0x1ec>  // b.any
   1f6d8:	sub	x4, x23, #0x2
   1f6dc:	add	x3, x19, #0x2
   1f6e0:	b	1f684 <omp_get_affinity_format@@OMP_5.0+0x250>
   1f6e4:	cbz	w25, 1f704 <omp_get_affinity_format@@OMP_5.0+0x2d0>
   1f6e8:	mov	x4, x24
   1f6ec:	mov	x2, x22
   1f6f0:	mov	x1, x21
   1f6f4:	mov	x0, x20
   1f6f8:	mov	w3, #0x20                  	// #32
   1f6fc:	bl	1f2e8 <acc_set_cuda_stream@@OACC_2.0+0x508>
   1f700:	b	1f620 <omp_get_affinity_format@@OMP_5.0+0x1ec>
   1f704:	mov	x4, x0
   1f708:	mov	x3, x19
   1f70c:	mov	x2, x22
   1f710:	mov	x1, x21
   1f714:	mov	x0, x20
   1f718:	bl	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1f71c:	mov	x4, x24
   1f720:	mov	x2, x22
   1f724:	mov	x1, x21
   1f728:	mov	x0, x20
   1f72c:	ldp	x19, x20, [sp, #16]
   1f730:	mov	w3, #0x20                  	// #32
   1f734:	ldp	x21, x22, [sp, #32]
   1f738:	ldp	x23, x24, [sp, #48]
   1f73c:	ldp	x25, x26, [sp, #64]
   1f740:	ldp	x29, x30, [sp], #80
   1f744:	b	1f2e8 <acc_set_cuda_stream@@OACC_2.0+0x508>
   1f748:	stp	x29, x30, [sp, #-416]!
   1f74c:	mov	x29, sp
   1f750:	stp	x19, x20, [sp, #16]
   1f754:	mov	x19, x2
   1f758:	mov	x20, x0
   1f75c:	stp	x21, x22, [sp, #32]
   1f760:	mov	x21, x1
   1f764:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1f768:	stp	x23, x24, [sp, #48]
   1f76c:	add	x23, sp, #0x98
   1f770:	add	x24, sp, #0xa0
   1f774:	stp	x25, x26, [sp, #64]
   1f778:	mov	x26, x4
   1f77c:	add	x0, x0, #0x480
   1f780:	stp	x27, x28, [sp, #80]
   1f784:	str	x3, [sp, #96]
   1f788:	str	w5, [sp, #108]
   1f78c:	str	x0, [sp, #112]
   1f790:	str	xzr, [sp, #152]
   1f794:	mov	x0, x19
   1f798:	mov	w1, #0x25                  	// #37
   1f79c:	bl	89f0 <strchr@plt>
   1f7a0:	mov	x22, x0
   1f7a4:	cbnz	x0, 1f7b4 <omp_get_affinity_format@@OMP_5.0+0x380>
   1f7a8:	mov	x0, x19
   1f7ac:	bl	8630 <strlen@plt>
   1f7b0:	add	x22, x19, x0
   1f7b4:	cmp	x19, x22
   1f7b8:	b.eq	1f7d4 <omp_get_affinity_format@@OMP_5.0+0x3a0>  // b.none
   1f7bc:	sub	x4, x22, x19
   1f7c0:	mov	x3, x19
   1f7c4:	mov	x2, x23
   1f7c8:	mov	x1, x21
   1f7cc:	mov	x0, x20
   1f7d0:	bl	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1f7d4:	ldrb	w0, [x22]
   1f7d8:	cbz	w0, 1fc00 <omp_get_affinity_format@@OMP_5.0+0x7cc>
   1f7dc:	ldrb	w0, [x22, #1]
   1f7e0:	cmp	w0, #0x25
   1f7e4:	b.ne	1f80c <omp_get_affinity_format@@OMP_5.0+0x3d8>  // b.any
   1f7e8:	mov	x2, x23
   1f7ec:	mov	x1, x21
   1f7f0:	mov	x0, x20
   1f7f4:	mov	x4, #0x1                   	// #1
   1f7f8:	adrp	x3, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f7fc:	add	x19, x22, #0x2
   1f800:	add	x3, x3, #0x699
   1f804:	bl	1f4ac <omp_get_affinity_format@@OMP_5.0+0x78>
   1f808:	b	1f794 <omp_get_affinity_format@@OMP_5.0+0x360>
   1f80c:	cmp	w0, #0x30
   1f810:	b.ne	1f830 <omp_get_affinity_format@@OMP_5.0+0x3fc>  // b.any
   1f814:	ldrb	w0, [x22, #2]
   1f818:	add	x19, x22, #0x2
   1f81c:	cmp	w0, #0x2e
   1f820:	b.eq	1f90c <omp_get_affinity_format@@OMP_5.0+0x4d8>  // b.none
   1f824:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f828:	add	x0, x0, #0x69b
   1f82c:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1f830:	add	x19, x22, #0x1
   1f834:	mov	w27, #0x0                   	// #0
   1f838:	ldrb	w0, [x19]
   1f83c:	cmp	w0, #0x2e
   1f840:	b.ne	1f914 <omp_get_affinity_format@@OMP_5.0+0x4e0>  // b.any
   1f844:	add	x19, x19, #0x1
   1f848:	mov	w25, #0x1                   	// #1
   1f84c:	ldrb	w0, [x19]
   1f850:	sub	w0, w0, #0x31
   1f854:	and	w0, w0, #0xff
   1f858:	cmp	w0, #0x8
   1f85c:	b.hi	1f91c <omp_get_affinity_format@@OMP_5.0+0x4e8>  // b.pmore
   1f860:	mov	x0, x19
   1f864:	mov	x1, x24
   1f868:	mov	w2, #0xa                   	// #10
   1f86c:	bl	8620 <strtoul@plt>
   1f870:	ldr	x19, [sp, #160]
   1f874:	mov	x22, x0
   1f878:	ldrb	w1, [x19]
   1f87c:	cmp	w1, #0x7b
   1f880:	b.ne	1f8e8 <omp_get_affinity_format@@OMP_5.0+0x4b4>  // b.any
   1f884:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1f888:	add	x4, x19, #0x1
   1f88c:	add	x1, x0, #0x480
   1f890:	mov	w28, #0x0                   	// #0
   1f894:	ldrb	w2, [x1, #18]
   1f898:	mov	x0, x4
   1f89c:	stp	x4, x1, [sp, #120]
   1f8a0:	str	x2, [sp, #136]
   1f8a4:	bl	87d0 <strncmp@plt>
   1f8a8:	ldp	x4, x1, [sp, #120]
   1f8ac:	cbnz	w0, 1f93c <omp_get_affinity_format@@OMP_5.0+0x508>
   1f8b0:	ldr	x2, [sp, #136]
   1f8b4:	add	x0, x2, #0x1
   1f8b8:	add	x2, x19, x0
   1f8bc:	ldrb	w0, [x19, x0]
   1f8c0:	cmp	w0, #0x7d
   1f8c4:	b.ne	1f93c <omp_get_affinity_format@@OMP_5.0+0x508>  // b.any
   1f8c8:	ldr	x1, [sp, #112]
   1f8cc:	sxtw	x3, w28
   1f8d0:	mov	x0, #0x14                  	// #20
   1f8d4:	madd	x3, x3, x0, x1
   1f8d8:	ldrb	w1, [x3, #19]
   1f8dc:	cmp	w1, #0x7b
   1f8e0:	b.eq	1f950 <omp_get_affinity_format@@OMP_5.0+0x51c>  // b.none
   1f8e4:	mov	x19, x2
   1f8e8:	cmp	w1, #0x54
   1f8ec:	b.hi	1f9ac <omp_get_affinity_format@@OMP_5.0+0x578>  // b.pmore
   1f8f0:	cmp	w1, #0x47
   1f8f4:	b.hi	1f988 <omp_get_affinity_format@@OMP_5.0+0x554>  // b.pmore
   1f8f8:	cmp	w1, #0x41
   1f8fc:	b.eq	1fb3c <omp_get_affinity_format@@OMP_5.0+0x708>  // b.none
   1f900:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f904:	add	x0, x0, #0x783
   1f908:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1f90c:	mov	w27, #0x1                   	// #1
   1f910:	b	1f838 <omp_get_affinity_format@@OMP_5.0+0x404>
   1f914:	mov	w25, #0x0                   	// #0
   1f918:	b	1f84c <omp_get_affinity_format@@OMP_5.0+0x418>
   1f91c:	cmp	w27, #0x0
   1f920:	ccmp	w25, #0x0, #0x0, eq  // eq = none
   1f924:	b.eq	1f934 <omp_get_affinity_format@@OMP_5.0+0x500>  // b.none
   1f928:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f92c:	add	x0, x0, #0x6cf
   1f930:	b	1f82c <omp_get_affinity_format@@OMP_5.0+0x3f8>
   1f934:	mov	x22, #0xffffffffffffffff    	// #-1
   1f938:	b	1f878 <omp_get_affinity_format@@OMP_5.0+0x444>
   1f93c:	add	w28, w28, #0x1
   1f940:	add	x1, x1, #0x14
   1f944:	cmp	w28, #0xa
   1f948:	b.ne	1f894 <omp_get_affinity_format@@OMP_5.0+0x460>  // b.any
   1f94c:	mov	x2, x19
   1f950:	add	x19, x2, #0x1
   1f954:	mov	w1, #0x7d                  	// #125
   1f958:	mov	x0, x19
   1f95c:	bl	89f0 <strchr@plt>
   1f960:	cbz	x0, 1f978 <omp_get_affinity_format@@OMP_5.0+0x544>
   1f964:	sub	w1, w0, w19
   1f968:	mov	x2, x19
   1f96c:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f970:	add	x0, x0, #0x714
   1f974:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1f978:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f97c:	mov	x1, x19
   1f980:	add	x0, x0, #0x749
   1f984:	bl	b168 <GOMP_critical_name_end@@GOMP_1.0+0x1c4>
   1f988:	sub	w2, w1, #0x48
   1f98c:	cmp	w2, #0xc
   1f990:	b.hi	1f900 <omp_get_affinity_format@@OMP_5.0+0x4cc>  // b.pmore
   1f994:	adrp	x0, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f998:	add	x0, x0, #0x7ac
   1f99c:	ldrb	w0, [x0, w2, uxtw]
   1f9a0:	adr	x2, 1f9ac <omp_get_affinity_format@@OMP_5.0+0x578>
   1f9a4:	add	x0, x2, w0, sxtb #2
   1f9a8:	br	x0
   1f9ac:	cmp	w1, #0x6e
   1f9b0:	b.eq	1fa34 <omp_get_affinity_format@@OMP_5.0+0x600>  // b.none
   1f9b4:	b.hi	1fa00 <omp_get_affinity_format@@OMP_5.0+0x5cc>  // b.pmore
   1f9b8:	cmp	w1, #0x61
   1f9bc:	b.eq	1fa4c <omp_get_affinity_format@@OMP_5.0+0x618>  // b.none
   1f9c0:	cmp	w1, #0x69
   1f9c4:	b.ne	1f900 <omp_get_affinity_format@@OMP_5.0+0x4cc>  // b.any
   1f9c8:	ldr	x2, [sp, #96]
   1f9cc:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1f9d0:	mov	x0, x24
   1f9d4:	add	x1, x1, #0x77d
   1f9d8:	bl	86b0 <sprintf@plt>
   1f9dc:	mov	x6, x24
   1f9e0:	mov	x5, x22
   1f9e4:	mov	w4, w25
   1f9e8:	mov	w3, w27
   1f9ec:	mov	x2, x23
   1f9f0:	mov	x1, x21
   1f9f4:	mov	x0, x20
   1f9f8:	bl	1f5d4 <omp_get_affinity_format@@OMP_5.0+0x1a0>
   1f9fc:	b	1fac0 <omp_get_affinity_format@@OMP_5.0+0x68c>
   1fa00:	cmp	w1, #0x74
   1fa04:	b.ne	1f900 <omp_get_affinity_format@@OMP_5.0+0x4cc>  // b.any
   1fa08:	bl	8ab0 <omp_get_team_num@plt>
   1fa0c:	mov	w2, w0
   1fa10:	adrp	x1, 21000 <omp_get_team_num@@OMP_4.0+0x11a8>
   1fa14:	mov	x0, x24
   1fa18:	add	x1, x1, #0x645
   1fa1c:	bl	86b0 <sprintf@plt>
   1fa20:	b	1f9dc <omp_get_affinity_format@@OMP_5.0+0x5a8>
   1fa24:	bl	8ae0 <omp_get_num_teams@plt>
   1fa28:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fa2c:	ldr	w0, [x26, #28]
   1fa30:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fa34:	ldr	w0, [x26, #24]
   1fa38:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fa3c:	ldr	x0, [x26]
   1fa40:	cbz	x0, 1fbf0 <omp_get_affinity_format@@OMP_5.0+0x7bc>
   1fa44:	ldr	w0, [x0]
   1fa48:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fa4c:	ldr	x0, [x26]
   1fa50:	cbz	x0, 1fbf8 <omp_get_affinity_format@@OMP_5.0+0x7c4>
   1fa54:	ldr	w0, [x0, #32]
   1fa58:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fa5c:	mov	x27, x24
   1fa60:	mov	x28, #0x100                 	// #256
   1fa64:	sub	x1, x28, #0x1
   1fa68:	mov	x0, x27
   1fa6c:	str	x1, [sp, #120]
   1fa70:	strb	wzr, [x27, x1]
   1fa74:	bl	8aa0 <gethostname@plt>
   1fa78:	cbnz	w0, 1fac8 <omp_get_affinity_format@@OMP_5.0+0x694>
   1fa7c:	mov	x0, x27
   1fa80:	bl	8630 <strlen@plt>
   1fa84:	ldr	x1, [sp, #120]
   1fa88:	mov	x6, x0
   1fa8c:	cmp	x1, x0
   1fa90:	b.ls	1fac8 <omp_get_affinity_format@@OMP_5.0+0x694>  // b.plast
   1fa94:	mov	x5, x27
   1fa98:	mov	x4, x22
   1fa9c:	mov	w3, w25
   1faa0:	mov	x2, x23
   1faa4:	mov	x1, x21
   1faa8:	mov	x0, x20
   1faac:	bl	1f520 <omp_get_affinity_format@@OMP_5.0+0xec>
   1fab0:	cmp	x27, x24
   1fab4:	b.eq	1fac0 <omp_get_affinity_format@@OMP_5.0+0x68c>  // b.none
   1fab8:	mov	x0, x27
   1fabc:	bl	8950 <free@plt>
   1fac0:	add	x19, x19, #0x1
   1fac4:	b	1f794 <omp_get_affinity_format@@OMP_5.0+0x360>
   1fac8:	cmp	x28, #0x100, lsl #12
   1facc:	b.eq	1fafc <omp_get_affinity_format@@OMP_5.0+0x6c8>  // b.none
   1fad0:	lsl	x28, x28, #1
   1fad4:	cmp	x28, #0x200
   1fad8:	b.ne	1faec <omp_get_affinity_format@@OMP_5.0+0x6b8>  // b.any
   1fadc:	mov	x0, x28
   1fae0:	bl	adb0 <fprintf@plt+0x2250>
   1fae4:	mov	x27, x0
   1fae8:	b	1fa64 <omp_get_affinity_format@@OMP_5.0+0x630>
   1faec:	mov	x1, x28
   1faf0:	mov	x0, x27
   1faf4:	bl	ae20 <fprintf@plt+0x22c0>
   1faf8:	b	1fae4 <omp_get_affinity_format@@OMP_5.0+0x6b0>
   1fafc:	cmp	x27, x24
   1fb00:	b.eq	1fb0c <omp_get_affinity_format@@OMP_5.0+0x6d8>  // b.none
   1fb04:	mov	x0, x27
   1fb08:	bl	8950 <free@plt>
   1fb0c:	mov	x4, x22
   1fb10:	mov	w3, w25
   1fb14:	mov	x2, x23
   1fb18:	mov	x1, x21
   1fb1c:	mov	x0, x20
   1fb20:	mov	x6, #0x4                   	// #4
   1fb24:	adrp	x5, 20000 <omp_get_team_num@@OMP_4.0+0x1a8>
   1fb28:	add	x5, x5, #0xe1e
   1fb2c:	bl	1f520 <omp_get_affinity_format@@OMP_5.0+0xec>
   1fb30:	b	1fac0 <omp_get_affinity_format@@OMP_5.0+0x68c>
   1fb34:	bl	8780 <getpid@plt>
   1fb38:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fb3c:	ldr	w0, [sp, #108]
   1fb40:	cmn	x22, #0x1
   1fb44:	sub	w27, w0, #0x1
   1fb48:	b.ne	1fb64 <omp_get_affinity_format@@OMP_5.0+0x730>  // b.any
   1fb4c:	mov	w3, w27
   1fb50:	mov	x2, x23
   1fb54:	mov	x1, x21
   1fb58:	mov	x0, x20
   1fb5c:	bl	17844 <omp_get_place_proc_ids@@OMP_4.5+0xcc>
   1fb60:	b	1fac0 <omp_get_affinity_format@@OMP_5.0+0x68c>
   1fb64:	cbz	w25, 1fba8 <omp_get_affinity_format@@OMP_5.0+0x774>
   1fb68:	mov	w3, w27
   1fb6c:	mov	x2, x24
   1fb70:	mov	x1, #0x0                   	// #0
   1fb74:	mov	x0, #0x0                   	// #0
   1fb78:	str	xzr, [sp, #160]
   1fb7c:	bl	17844 <omp_get_place_proc_ids@@OMP_4.5+0xcc>
   1fb80:	ldr	x4, [sp, #160]
   1fb84:	cmp	x4, x22
   1fb88:	b.cs	1fb4c <omp_get_affinity_format@@OMP_5.0+0x718>  // b.hs, b.nlast
   1fb8c:	sub	x4, x22, x4
   1fb90:	mov	x2, x23
   1fb94:	mov	x1, x21
   1fb98:	mov	x0, x20
   1fb9c:	mov	w3, #0x20                  	// #32
   1fba0:	bl	1f2e8 <acc_set_cuda_stream@@OACC_2.0+0x508>
   1fba4:	b	1fb4c <omp_get_affinity_format@@OMP_5.0+0x718>
   1fba8:	mov	x0, x20
   1fbac:	mov	w3, w27
   1fbb0:	mov	x2, x23
   1fbb4:	mov	x1, x21
   1fbb8:	ldr	x25, [sp, #152]
   1fbbc:	bl	17844 <omp_get_place_proc_ids@@OMP_4.5+0xcc>
   1fbc0:	ldr	x4, [sp, #152]
   1fbc4:	sub	x0, x4, x25
   1fbc8:	cmp	x0, x22
   1fbcc:	b.cs	1fac0 <omp_get_affinity_format@@OMP_5.0+0x68c>  // b.hs, b.nlast
   1fbd0:	sub	x4, x25, x4
   1fbd4:	mov	x2, x23
   1fbd8:	add	x4, x4, x22
   1fbdc:	mov	x1, x21
   1fbe0:	mov	x0, x20
   1fbe4:	mov	w3, #0x20                  	// #32
   1fbe8:	bl	1f2e8 <acc_set_cuda_stream@@OACC_2.0+0x508>
   1fbec:	b	1fac0 <omp_get_affinity_format@@OMP_5.0+0x68c>
   1fbf0:	mov	w0, #0x1                   	// #1
   1fbf4:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fbf8:	mov	w0, #0xffffffff            	// #-1
   1fbfc:	b	1fa0c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   1fc00:	ldp	x19, x20, [sp, #16]
   1fc04:	ldp	x21, x22, [sp, #32]
   1fc08:	ldp	x23, x24, [sp, #48]
   1fc0c:	ldp	x25, x26, [sp, #64]
   1fc10:	ldp	x27, x28, [sp, #80]
   1fc14:	ldr	x0, [sp, #152]
   1fc18:	ldp	x29, x30, [sp], #416
   1fc1c:	ret

000000000001fc20 <omp_capture_affinity@@OMP_5.0>:
   1fc20:	stp	x29, x30, [sp, #-48]!
   1fc24:	mov	x29, sp
   1fc28:	stp	x19, x20, [sp, #16]
   1fc2c:	mov	x19, x0
   1fc30:	mov	x20, x1
   1fc34:	str	x21, [sp, #32]
   1fc38:	cbz	x2, 1fc48 <omp_capture_affinity@@OMP_5.0+0x28>
   1fc3c:	ldrb	w0, [x2]
   1fc40:	mov	x21, x2
   1fc44:	cbnz	w0, 1fc50 <omp_capture_affinity@@OMP_5.0+0x30>
   1fc48:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1fc4c:	ldr	x21, [x0, #832]
   1fc50:	bl	8af0 <pthread_self@plt>
   1fc54:	adrp	x4, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1fc58:	ldr	x4, [x4, #4016]
   1fc5c:	mrs	x1, tpidr_el0
   1fc60:	mov	x3, x0
   1fc64:	mov	x2, x21
   1fc68:	add	x4, x1, x4
   1fc6c:	mov	x0, x19
   1fc70:	mov	x1, x20
   1fc74:	add	x4, x4, #0x10
   1fc78:	ldr	w5, [x4, #76]
   1fc7c:	bl	1f748 <omp_get_affinity_format@@OMP_5.0+0x314>
   1fc80:	cbz	x20, 1fc94 <omp_capture_affinity@@OMP_5.0+0x74>
   1fc84:	cmp	x20, x0
   1fc88:	b.hi	1fca4 <omp_capture_affinity@@OMP_5.0+0x84>  // b.pmore
   1fc8c:	add	x19, x19, x20
   1fc90:	sturb	wzr, [x19, #-1]
   1fc94:	ldp	x19, x20, [sp, #16]
   1fc98:	ldr	x21, [sp, #32]
   1fc9c:	ldp	x29, x30, [sp], #48
   1fca0:	ret
   1fca4:	strb	wzr, [x19, x0]
   1fca8:	b	1fc94 <omp_capture_affinity@@OMP_5.0+0x74>

000000000001fcac <omp_display_affinity@@OMP_5.0>:
   1fcac:	sub	sp, sp, #0x230
   1fcb0:	mov	x2, x0
   1fcb4:	mov	x1, #0x200                 	// #512
   1fcb8:	stp	x29, x30, [sp]
   1fcbc:	mov	x29, sp
   1fcc0:	stp	x19, x20, [sp, #16]
   1fcc4:	add	x20, sp, #0x30
   1fcc8:	stp	x21, x22, [sp, #32]
   1fccc:	mov	x22, x0
   1fcd0:	mov	x0, x20
   1fcd4:	bl	1fc20 <omp_capture_affinity@@OMP_5.0>
   1fcd8:	mov	x19, x0
   1fcdc:	cmp	x0, #0x1ff
   1fce0:	add	x21, x0, #0x1
   1fce4:	b.hi	1fd10 <omp_display_affinity@@OMP_5.0+0x64>  // b.pmore
   1fce8:	mov	w0, #0xa                   	// #10
   1fcec:	mov	x1, x21
   1fcf0:	strb	w0, [x20, x19]
   1fcf4:	mov	x0, x20
   1fcf8:	bl	1f35c <acc_set_cuda_stream@@OACC_2.0+0x57c>
   1fcfc:	ldp	x29, x30, [sp]
   1fd00:	ldp	x19, x20, [sp, #16]
   1fd04:	ldp	x21, x22, [sp, #32]
   1fd08:	add	sp, sp, #0x230
   1fd0c:	ret
   1fd10:	mov	x0, x21
   1fd14:	bl	adb0 <fprintf@plt+0x2250>
   1fd18:	mov	x20, x0
   1fd1c:	mov	x2, x22
   1fd20:	mov	x1, x21
   1fd24:	bl	1fc20 <omp_capture_affinity@@OMP_5.0>
   1fd28:	mov	w0, #0xa                   	// #10
   1fd2c:	mov	x1, x21
   1fd30:	strb	w0, [x20, x19]
   1fd34:	mov	x0, x20
   1fd38:	bl	1f35c <acc_set_cuda_stream@@OACC_2.0+0x57c>
   1fd3c:	mov	x0, x20
   1fd40:	ldp	x29, x30, [sp]
   1fd44:	ldp	x19, x20, [sp, #16]
   1fd48:	ldp	x21, x22, [sp, #32]
   1fd4c:	add	sp, sp, #0x230
   1fd50:	b	8950 <free@plt>

000000000001fd54 <GOMP_teams_reg@@GOMP_5.0>:
   1fd54:	stp	x29, x30, [sp, #-80]!
   1fd58:	mov	x29, sp
   1fd5c:	stp	x19, x20, [sp, #16]
   1fd60:	mov	w19, w2
   1fd64:	mov	w20, w3
   1fd68:	stp	x21, x22, [sp, #32]
   1fd6c:	mov	x22, x0
   1fd70:	stp	x23, x24, [sp, #48]
   1fd74:	mov	x23, x1
   1fd78:	str	x25, [sp, #64]
   1fd7c:	cbz	w3, 1fe3c <GOMP_teams_reg@@GOMP_5.0+0xe8>
   1fd80:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1fd84:	ldr	x0, [x0, #4016]
   1fd88:	mrs	x1, tpidr_el0
   1fd8c:	add	x0, x1, x0
   1fd90:	ldr	x4, [x0, #80]
   1fd94:	cbz	x4, 1fe34 <GOMP_teams_reg@@GOMP_5.0+0xe0>
   1fd98:	add	x0, x4, #0x90
   1fd9c:	cmp	w20, #0x0
   1fda0:	ldr	w24, [x0, #20]
   1fda4:	csinv	w1, w20, wzr, ge  // ge = tcont
   1fda8:	str	w1, [x0, #20]
   1fdac:	mov	w0, #0x3                   	// #3
   1fdb0:	adrp	x21, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1fdb4:	cmp	w19, #0x0
   1fdb8:	csel	w19, w19, w0, ne  // ne = any
   1fdbc:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1fdc0:	str	wzr, [x21, #1508]
   1fdc4:	mov	x25, x0
   1fdc8:	add	x21, x21, #0x5e4
   1fdcc:	str	w19, [x0, #1352]
   1fdd0:	mov	x0, x23
   1fdd4:	blr	x22
   1fdd8:	ldr	w0, [x21]
   1fddc:	add	w0, w0, #0x1
   1fde0:	str	w0, [x21]
   1fde4:	cmp	w0, w19
   1fde8:	b.cc	1fdd0 <GOMP_teams_reg@@GOMP_5.0+0x7c>  // b.lo, b.ul, b.last
   1fdec:	mov	w0, #0x1                   	// #1
   1fdf0:	str	w0, [x25, #1352]
   1fdf4:	str	wzr, [x21]
   1fdf8:	cbz	w20, 1fe1c <GOMP_teams_reg@@GOMP_5.0+0xc8>
   1fdfc:	adrp	x0, 37000 <omp_get_team_num@@OMP_4.0+0x171a8>
   1fe00:	ldr	x0, [x0, #4016]
   1fe04:	mrs	x1, tpidr_el0
   1fe08:	add	x0, x1, x0
   1fe0c:	ldr	x0, [x0, #80]
   1fe10:	cbz	x0, 1fe44 <GOMP_teams_reg@@GOMP_5.0+0xf0>
   1fe14:	add	x0, x0, #0x90
   1fe18:	str	w24, [x0, #20]
   1fe1c:	ldp	x19, x20, [sp, #16]
   1fe20:	ldp	x21, x22, [sp, #32]
   1fe24:	ldp	x23, x24, [sp, #48]
   1fe28:	ldr	x25, [sp, #64]
   1fe2c:	ldp	x29, x30, [sp], #80
   1fe30:	ret
   1fe34:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
   1fe38:	b	1fd9c <GOMP_teams_reg@@GOMP_5.0+0x48>
   1fe3c:	mov	w24, #0x0                   	// #0
   1fe40:	b	1fdac <GOMP_teams_reg@@GOMP_5.0+0x58>
   1fe44:	bl	14f68 <omp_in_final@@OMP_3.1+0x13f0>
   1fe48:	b	1fe18 <GOMP_teams_reg@@GOMP_5.0+0xc4>

000000000001fe4c <omp_get_num_teams@@OMP_4.0>:
   1fe4c:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1fe50:	ldr	w0, [x0, #1352]
   1fe54:	ret

000000000001fe58 <omp_get_team_num@@OMP_4.0>:
   1fe58:	adrp	x0, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1fe5c:	ldr	w0, [x0, #1508]
   1fe60:	ret
   1fe64:	nop
   1fe68:	adrp	x2, 38000 <omp_get_team_num@@OMP_4.0+0x181a8>
   1fe6c:	mov	x1, #0x0                   	// #0
   1fe70:	ldr	x2, [x2, #696]
   1fe74:	b	86d0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000001fe78 <.fini>:
   1fe78:	stp	x29, x30, [sp, #-16]!
   1fe7c:	mov	x29, sp
   1fe80:	ldp	x29, x30, [sp], #16
   1fe84:	ret
