
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ntfscomp.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <decomp_nextvcn>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	w0, [x0, #12]
  18:	cmp	w2, w0
  1c:	b.lt	38 <decomp_nextvcn+0x38>  // b.tstop
  20:	adrp	x0, 0 <decomp_nextvcn>
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x0]
  30:	mov	w0, #0x9                   	// #9
  34:	b	0 <grub_error>
  38:	ldp	w4, w1, [x19, #148]
  3c:	add	x2, x19, w2, sxtw #3
  40:	mov	w3, #0x1                   	// #1
  44:	add	w0, w1, #0x9
  48:	lsl	w3, w3, w0
  4c:	ldr	w0, [x2, #20]
  50:	ldr	w2, [x2, #16]
  54:	sxtw	x3, w3
  58:	add	w0, w0, w4
  5c:	sub	w0, w0, w2
  60:	mov	x2, #0x0                   	// #0
  64:	ldr	x4, [x19, #160]
  68:	lsl	w1, w0, w1
  6c:	ldr	x0, [x19]
  70:	bl	0 <grub_disk_read>
  74:	cbz	w0, 90 <decomp_nextvcn+0x90>
  78:	adrp	x0, 0 <decomp_nextvcn>
  7c:	ldr	x0, [x0]
  80:	ldr	w0, [x0]
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	ldr	w1, [x19, #8]
  94:	ldr	w2, [x19, #148]
  98:	add	x3, x19, w1, sxtw #3
  9c:	add	w2, w2, #0x1
  a0:	ldr	w3, [x3, #16]
  a4:	str	w2, [x19, #148]
  a8:	cmp	w2, w3
  ac:	b.cc	b8 <decomp_nextvcn+0xb8>  // b.lo, b.ul, b.last
  b0:	add	w1, w1, #0x1
  b4:	str	w1, [x19, #8]
  b8:	str	wzr, [x19, #144]
  bc:	b	84 <decomp_nextvcn+0x84>
	...

00000000000000d0 <decomp_getch>:
  d0:	stp	x29, x30, [sp, #-32]!
  d4:	mov	x29, sp
  d8:	stp	x19, x20, [sp, #16]
  dc:	mov	x20, x1
  e0:	ldr	w1, [x0, #152]
  e4:	mov	x19, x0
  e8:	add	w2, w1, #0x9
  ec:	ldr	w1, [x0, #144]
  f0:	lsr	w1, w1, w2
  f4:	cbz	w1, 118 <decomp_getch+0x48>
  f8:	bl	0 <decomp_nextvcn>
  fc:	cbz	w0, 118 <decomp_getch+0x48>
 100:	adrp	x0, 0 <decomp_nextvcn>
 104:	ldr	x0, [x0]
 108:	ldr	w0, [x0]
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x29, x30, [sp], #32
 114:	ret
 118:	ldr	w0, [x19, #144]
 11c:	ldr	x1, [x19, #160]
 120:	add	w2, w0, #0x1
 124:	str	w2, [x19, #144]
 128:	ldrb	w0, [x1, w0, uxtw]
 12c:	strb	w0, [x20]
 130:	mov	w0, #0x0                   	// #0
 134:	b	10c <decomp_getch+0x3c>
	...

0000000000000140 <decomp_get16>:
 140:	stp	x29, x30, [sp, #-48]!
 144:	mov	x29, sp
 148:	stp	x19, x20, [sp, #16]
 14c:	mov	x19, x1
 150:	mov	x20, x0
 154:	add	x1, sp, #0x2e
 158:	strb	wzr, [sp, #46]
 15c:	strb	wzr, [sp, #47]
 160:	bl	d0 <decomp_getch>
 164:	cbz	w0, 180 <decomp_get16+0x40>
 168:	adrp	x0, 0 <decomp_nextvcn>
 16c:	ldr	x0, [x0]
 170:	ldr	w0, [x0]
 174:	ldp	x19, x20, [sp, #16]
 178:	ldp	x29, x30, [sp], #48
 17c:	ret
 180:	add	x1, sp, #0x2f
 184:	mov	x0, x20
 188:	bl	d0 <decomp_getch>
 18c:	cbnz	w0, 168 <decomp_get16+0x28>
 190:	ldrb	w2, [sp, #47]
 194:	ldrb	w1, [sp, #46]
 198:	ubfiz	w2, w2, #8, #8
 19c:	add	w2, w2, w1
 1a0:	strh	w2, [x19]
 1a4:	b	174 <decomp_get16+0x34>
	...

00000000000001b0 <read_block>:
 1b0:	stp	x29, x30, [sp, #-128]!
 1b4:	mov	x29, sp
 1b8:	stp	x19, x20, [sp, #16]
 1bc:	mov	x19, x0
 1c0:	ldr	w0, [x0, #208]
 1c4:	stp	x21, x22, [sp, #32]
 1c8:	mov	x21, x1
 1cc:	stp	x25, x26, [sp, #64]
 1d0:	mov	w26, #0x3                   	// #3
 1d4:	mov	x25, x2
 1d8:	sub	w26, w26, w0
 1dc:	stp	x23, x24, [sp, #48]
 1e0:	stp	x27, x28, [sp, #80]
 1e4:	cbnz	x25, 1f0 <read_block+0x40>
 1e8:	mov	w0, #0x0                   	// #0
 1ec:	b	318 <read_block+0x168>
 1f0:	ldr	x0, [x19, #8]
 1f4:	tst	x0, #0xf
 1f8:	b.eq	2f4 <read_block+0x144>  // b.none
 1fc:	ldr	x0, [x19, #8]
 200:	mov	w23, #0x10                  	// #16
 204:	and	w1, w0, #0xf
 208:	sub	w23, w23, w1
 20c:	ldr	w1, [x19]
 210:	lsr	w23, w23, w26
 214:	cmp	x25, x23
 218:	csel	x23, x25, x23, ls  // ls = plast
 21c:	sub	x25, x25, x23
 220:	lsl	x20, x23, x26
 224:	tbnz	w1, #0, 3c0 <read_block+0x210>
 228:	adrp	x23, 0 <decomp_nextvcn>
 22c:	ldp	w0, w1, [x19, #64]
 230:	cmp	w0, w1
 234:	b.ge	650 <read_block+0x4a0>  // b.tcont
 238:	cbz	x20, 1e4 <read_block+0x34>
 23c:	add	x0, x19, w0, sxtw #3
 240:	ldr	x2, [x19, #8]
 244:	ldr	w4, [x0, #72]
 248:	sub	x22, x4, x2
 24c:	cmp	x20, x22
 250:	csel	x22, x20, x22, ls  // ls = plast
 254:	add	x2, x2, x22
 258:	str	x2, [x19, #8]
 25c:	cbz	x21, 2cc <read_block+0x11c>
 260:	ldr	w0, [x0, #76]
 264:	ldr	w1, [x19, #208]
 268:	sub	x0, x0, x4
 26c:	mov	x4, x21
 270:	add	x0, x0, x2
 274:	add	w3, w1, #0x9
 278:	mov	x2, #0x0                   	// #0
 27c:	lsl	x1, x0, x1
 280:	ldr	x0, [x19, #56]
 284:	lsl	x3, x22, x3
 288:	bl	0 <grub_disk_read>
 28c:	cbnz	w0, 364 <read_block+0x1b4>
 290:	ldr	x0, [x23]
 294:	ldr	x4, [x0]
 298:	cbz	x4, 2bc <read_block+0x10c>
 29c:	ldr	x3, [x19, #224]
 2a0:	cbz	x3, 2bc <read_block+0x10c>
 2a4:	ldr	w2, [x19, #208]
 2a8:	mov	w1, #0x0                   	// #0
 2ac:	mov	x0, #0x0                   	// #0
 2b0:	add	w2, w2, #0x9
 2b4:	lsl	x2, x22, x2
 2b8:	blr	x4
 2bc:	ldr	w0, [x19, #208]
 2c0:	add	w0, w0, #0x9
 2c4:	lsl	x0, x22, x0
 2c8:	add	x21, x21, x0
 2cc:	ldr	w0, [x19, #64]
 2d0:	sub	x20, x20, x22
 2d4:	ldr	x2, [x19, #8]
 2d8:	add	x1, x19, w0, sxtw #3
 2dc:	ldr	w1, [x1, #72]
 2e0:	cmp	x2, x1
 2e4:	b.cc	22c <read_block+0x7c>  // b.lo, b.ul, b.last
 2e8:	add	w0, w0, #0x1
 2ec:	str	w0, [x19, #64]
 2f0:	b	22c <read_block+0x7c>
 2f4:	ldp	w2, w1, [x19, #64]
 2f8:	cmp	w2, w1
 2fc:	b.eq	334 <read_block+0x184>  // b.none
 300:	ldr	w1, [x19]
 304:	tbnz	w1, #0, 334 <read_block+0x184>
 308:	adrp	x0, 0 <decomp_nextvcn>
 30c:	ldr	x1, [x0]
 310:	mov	w0, #0x9                   	// #9
 314:	bl	0 <grub_error>
 318:	ldp	x19, x20, [sp, #16]
 31c:	ldp	x21, x22, [sp, #32]
 320:	ldp	x23, x24, [sp, #48]
 324:	ldp	x25, x26, [sp, #64]
 328:	ldp	x27, x28, [sp, #80]
 32c:	ldp	x29, x30, [sp], #128
 330:	ret
 334:	ldr	w1, [x19, #208]
 338:	str	xzr, [x19, #64]
 33c:	add	w2, w1, #0x9
 340:	mov	w1, #0x1                   	// #1
 344:	lsl	w1, w1, w2
 348:	stp	w1, w0, [x19, #200]
 34c:	ldr	x1, [x19, #24]
 350:	cmp	x0, x1
 354:	b.cc	374 <read_block+0x1c4>  // b.lo, b.ul, b.last
 358:	mov	x0, x19
 35c:	bl	0 <grub_ntfs_read_run_list>
 360:	cbz	w0, 374 <read_block+0x1c4>
 364:	adrp	x0, 0 <decomp_nextvcn>
 368:	ldr	x0, [x0]
 36c:	ldr	w0, [x0]
 370:	b	318 <read_block+0x168>
 374:	ldr	x0, [x19, #8]
 378:	ldr	x2, [x19, #24]
 37c:	add	x0, x0, #0x10
 380:	ldr	w3, [x19]
 384:	ldr	w1, [x19, #68]
 388:	cmp	x0, x2
 38c:	and	w3, w3, #0x1
 390:	b.ls	1fc <read_block+0x4c>  // b.plast
 394:	cbnz	w3, 1fc <read_block+0x4c>
 398:	add	x3, x19, w1, sxtw #3
 39c:	add	w1, w1, #0x1
 3a0:	str	w2, [x3, #72]
 3a4:	ldr	x0, [x19, #32]
 3a8:	add	w0, w0, w2
 3ac:	ldr	x2, [x19, #16]
 3b0:	sub	w0, w0, w2
 3b4:	str	w0, [x3, #76]
 3b8:	str	w1, [x19, #68]
 3bc:	b	358 <read_block+0x1a8>
 3c0:	ldr	w1, [x19, #68]
 3c4:	add	x20, x0, x20
 3c8:	str	x20, [x19, #8]
 3cc:	cbz	w1, 430 <read_block+0x280>
 3d0:	add	x24, x19, #0x38
 3d4:	cbz	x23, 1e4 <read_block+0x34>
 3d8:	add	x1, sp, #0x7c
 3dc:	mov	x0, x24
 3e0:	bl	140 <decomp_get16>
 3e4:	mov	w22, w0
 3e8:	cbz	w0, 478 <read_block+0x2c8>
 3ec:	adrp	x0, 0 <decomp_nextvcn>
 3f0:	ldr	x0, [x0]
 3f4:	ldr	w0, [x0]
 3f8:	cbnz	w0, 364 <read_block+0x1b4>
 3fc:	cbnz	x21, 4f8 <read_block+0x348>
 400:	adrp	x0, 0 <decomp_nextvcn>
 404:	ldr	x0, [x0]
 408:	ldr	x4, [x0]
 40c:	cbz	x4, 428 <read_block+0x278>
 410:	ldr	x3, [x19, #224]
 414:	cbz	x3, 428 <read_block+0x278>
 418:	mov	w2, #0x1000                	// #4096
 41c:	mov	w1, #0x0                   	// #0
 420:	mov	x0, #0x0                   	// #0
 424:	blr	x4
 428:	sub	x23, x23, #0x1
 42c:	b	3d4 <read_block+0x224>
 430:	cbz	x21, 1e4 <read_block+0x34>
 434:	lsl	x20, x23, #12
 438:	mov	x0, x21
 43c:	mov	x2, x20
 440:	mov	w1, #0x0                   	// #0
 444:	bl	0 <grub_memset>
 448:	add	x21, x21, x20
 44c:	adrp	x0, 0 <decomp_nextvcn>
 450:	ldr	x0, [x0]
 454:	ldr	x4, [x0]
 458:	cbz	x4, 1e4 <read_block+0x34>
 45c:	ldr	x3, [x19, #224]
 460:	cbz	x3, 1e4 <read_block+0x34>
 464:	lsl	w2, w23, #12
 468:	mov	w1, #0x0                   	// #0
 46c:	mov	x0, #0x0                   	// #0
 470:	blr	x4
 474:	b	1e4 <read_block+0x34>
 478:	ldrh	w0, [sp, #124]
 47c:	and	w20, w0, #0xfff
 480:	add	w20, w20, #0x1
 484:	cbz	x21, 5d0 <read_block+0x420>
 488:	tbz	w0, #15, 5bc <read_block+0x40c>
 48c:	strb	wzr, [sp, #123]
 490:	add	x1, sp, #0x7b
 494:	mov	x0, x24
 498:	bl	d0 <decomp_getch>
 49c:	cbz	w0, 500 <read_block+0x350>
 4a0:	adrp	x0, 0 <decomp_nextvcn>
 4a4:	ldr	x0, [x0]
 4a8:	ldr	w0, [x0]
 4ac:	cbz	w0, 4f8 <read_block+0x348>
 4b0:	b	364 <read_block+0x1b4>
 4b4:	subs	w27, w27, #0x1
 4b8:	b.eq	490 <read_block+0x2e0>  // b.none
 4bc:	ldrb	w0, [sp, #123]
 4c0:	tbz	w0, #0, 590 <read_block+0x3e0>
 4c4:	add	x1, sp, #0x7e
 4c8:	mov	x0, x24
 4cc:	strh	wzr, [sp, #126]
 4d0:	bl	140 <decomp_get16>
 4d4:	cbnz	w0, 4a0 <read_block+0x2f0>
 4d8:	sub	w20, w20, #0x2
 4dc:	ldrh	w1, [sp, #126]
 4e0:	and	w20, w20, #0xffff
 4e4:	cbnz	w22, 514 <read_block+0x364>
 4e8:	adrp	x0, 0 <decomp_nextvcn>
 4ec:	ldr	x1, [x0]
 4f0:	mov	w0, #0x9                   	// #9
 4f4:	bl	0 <grub_error>
 4f8:	add	x21, x21, #0x1, lsl #12
 4fc:	b	400 <read_block+0x250>
 500:	sub	w20, w20, #0x1
 504:	ands	w20, w20, #0xffff
 508:	b.eq	4f8 <read_block+0x348>  // b.none
 50c:	mov	w27, #0x8                   	// #8
 510:	b	4bc <read_block+0x30c>
 514:	sub	w3, w22, #0x1
 518:	mov	w0, #0xc                   	// #12
 51c:	mov	w2, #0xfff                 	// #4095
 520:	cmp	w3, #0xf
 524:	b.hi	580 <read_block+0x3d0>  // b.pmore
 528:	lsr	w0, w1, w0
 52c:	and	w1, w1, w2
 530:	add	w2, w22, #0x3
 534:	mvn	w0, w0
 538:	add	w1, w1, w2
 53c:	add	w2, w0, w22
 540:	ldrb	w2, [x21, x2]
 544:	strb	w2, [x21, w22, uxtw]
 548:	add	w22, w22, #0x1
 54c:	cmp	w22, w1
 550:	b.ne	53c <read_block+0x38c>  // b.any
 554:	ldrb	w0, [sp, #123]
 558:	lsr	w0, w0, #1
 55c:	strb	w0, [sp, #123]
 560:	cbz	w20, 4f8 <read_block+0x348>
 564:	cmp	w22, #0x1, lsl #12
 568:	b.ls	4b4 <read_block+0x304>  // b.plast
 56c:	adrp	x0, 0 <decomp_nextvcn>
 570:	ldr	x1, [x0]
 574:	mov	w0, #0x9                   	// #9
 578:	bl	0 <grub_error>
 57c:	b	4ac <read_block+0x2fc>
 580:	lsr	w2, w2, #1
 584:	sub	w0, w0, #0x1
 588:	lsr	w3, w3, #1
 58c:	b	520 <read_block+0x370>
 590:	add	x1, sp, #0x7e
 594:	mov	x0, x24
 598:	strb	wzr, [sp, #126]
 59c:	bl	d0 <decomp_getch>
 5a0:	cbnz	w0, 4a0 <read_block+0x2f0>
 5a4:	ldrb	w0, [sp, #126]
 5a8:	sub	w20, w20, #0x1
 5ac:	and	w20, w20, #0xffff
 5b0:	strb	w0, [x21, w22, uxtw]
 5b4:	add	w22, w22, #0x1
 5b8:	b	554 <read_block+0x3a4>
 5bc:	cmp	w20, #0x1, lsl #12
 5c0:	b.eq	648 <read_block+0x498>  // b.none
 5c4:	adrp	x0, 0 <decomp_nextvcn>
 5c8:	ldr	x1, [x0]
 5cc:	b	574 <read_block+0x3c4>
 5d0:	mov	x28, #0x0                   	// #0
 5d4:	mov	w27, #0x1                   	// #1
 5d8:	ldr	w22, [x24, #152]
 5dc:	ldr	w0, [x24, #144]
 5e0:	add	w22, w22, #0x9
 5e4:	lsl	w22, w27, w22
 5e8:	sub	w22, w22, w0
 5ec:	cmp	w20, w22
 5f0:	csel	w22, w20, w22, le
 5f4:	cmp	x28, #0x0
 5f8:	ccmp	w22, #0x0, #0x4, ne  // ne = any
 5fc:	b.eq	620 <read_block+0x470>  // b.none
 600:	ldr	x1, [x24, #160]
 604:	sxtw	x2, w22
 608:	str	x2, [sp, #104]
 60c:	add	x1, x1, w0, uxtw
 610:	mov	x0, x28
 614:	bl	0 <grub_memmove>
 618:	ldr	x2, [sp, #104]
 61c:	add	x28, x28, x2
 620:	ldr	w0, [x24, #144]
 624:	sub	w20, w20, w22
 628:	ands	w20, w20, #0xffff
 62c:	add	w22, w0, w22
 630:	str	w22, [x24, #144]
 634:	b.eq	3fc <read_block+0x24c>  // b.none
 638:	mov	x0, x24
 63c:	bl	0 <decomp_nextvcn>
 640:	cbz	w0, 5d8 <read_block+0x428>
 644:	b	3ec <read_block+0x23c>
 648:	mov	x28, x21
 64c:	b	5d4 <read_block+0x424>
 650:	cbz	x20, 1e4 <read_block+0x34>
 654:	cbz	x21, 6c4 <read_block+0x514>
 658:	ldr	x2, [x19, #8]
 65c:	mov	x4, x21
 660:	ldr	x0, [x19, #32]
 664:	ldr	w1, [x19, #208]
 668:	add	x0, x0, x2
 66c:	ldr	x2, [x19, #16]
 670:	add	w3, w1, #0x9
 674:	sub	x0, x0, x2
 678:	lsl	x3, x20, x3
 67c:	mov	x2, #0x0                   	// #0
 680:	lsl	x1, x0, x1
 684:	ldr	x0, [x19, #56]
 688:	bl	0 <grub_disk_read>
 68c:	cbnz	w0, 364 <read_block+0x1b4>
 690:	adrp	x0, 0 <decomp_nextvcn>
 694:	ldr	w2, [x19, #208]
 698:	ldr	x0, [x0]
 69c:	add	w2, w2, #0x9
 6a0:	lsl	x2, x20, x2
 6a4:	add	x21, x21, x2
 6a8:	ldr	x4, [x0]
 6ac:	cbz	x4, 6c4 <read_block+0x514>
 6b0:	ldr	x3, [x19, #224]
 6b4:	cbz	x3, 6c4 <read_block+0x514>
 6b8:	mov	w1, #0x0                   	// #0
 6bc:	mov	x0, #0x0                   	// #0
 6c0:	blr	x4
 6c4:	ldr	x0, [x19, #8]
 6c8:	add	x20, x0, x20
 6cc:	str	x20, [x19, #8]
 6d0:	b	1e4 <read_block+0x34>
 6d4:	nop
	...

0000000000000708 <ntfscomp>:
 708:	stp	x29, x30, [sp, #-80]!
 70c:	mov	x29, sp
 710:	stp	x21, x22, [sp, #32]
 714:	mov	x21, x1
 718:	ldr	x22, [x3, #48]
 71c:	stp	x19, x20, [sp, #16]
 720:	mov	x19, x3
 724:	stp	x23, x24, [sp, #48]
 728:	mov	x20, x2
 72c:	mov	x23, x0
 730:	ldr	x3, [x22, #56]
 734:	stp	x25, x26, [sp, #64]
 738:	cbz	x3, 85c <ntfscomp+0x154>
 73c:	and	x2, x1, #0xfffffffffffff000
 740:	ldr	w1, [x22, #48]
 744:	cmp	x2, x1
 748:	b.ne	7c8 <ntfscomp+0xc0>  // b.any
 74c:	sub	x24, x2, x21
 750:	sub	x1, x21, x2
 754:	add	x24, x24, #0x1, lsl #12
 758:	add	x1, x3, x1
 75c:	cmp	x20, x24
 760:	csel	x22, x20, x24, ls  // ls = plast
 764:	mov	x2, x22
 768:	bl	0 <grub_memmove>
 76c:	adrp	x0, 0 <decomp_nextvcn>
 770:	ldr	x0, [x0]
 774:	ldr	x4, [x0]
 778:	cbz	x4, 794 <ntfscomp+0x8c>
 77c:	ldr	x3, [x19, #224]
 780:	cbz	x3, 794 <ntfscomp+0x8c>
 784:	mov	w2, w22
 788:	mov	w1, #0x0                   	// #0
 78c:	mov	x0, #0x0                   	// #0
 790:	blr	x4
 794:	cmp	x20, x24
 798:	b.hi	7bc <ntfscomp+0xb4>  // b.pmore
 79c:	mov	w21, #0x0                   	// #0
 7a0:	mov	w0, w21
 7a4:	ldp	x19, x20, [sp, #16]
 7a8:	ldp	x21, x22, [sp, #32]
 7ac:	ldp	x23, x24, [sp, #48]
 7b0:	ldp	x25, x26, [sp, #64]
 7b4:	ldp	x29, x30, [sp], #80
 7b8:	ret
 7bc:	add	x23, x23, x22
 7c0:	sub	x20, x20, x22
 7c4:	add	x21, x21, x22
 7c8:	ldr	w2, [x19, #208]
 7cc:	mov	w22, #0x8                   	// #8
 7d0:	asr	w22, w22, w2
 7d4:	lsr	x2, x21, #12
 7d8:	sxtw	x22, w22
 7dc:	mul	x22, x22, x2
 7e0:	and	x0, x22, #0xfffffffffffffff0
 7e4:	str	x0, [x19, #8]
 7e8:	ldr	x0, [x19, #8]
 7ec:	ldr	x1, [x19, #24]
 7f0:	cmp	x1, x0
 7f4:	b.ls	890 <ntfscomp+0x188>  // b.plast
 7f8:	ldr	w0, [x19, #208]
 7fc:	str	xzr, [x19, #64]
 800:	add	w1, w0, #0x9
 804:	mov	w0, #0x1                   	// #1
 808:	lsl	w0, w0, w1
 80c:	sxtw	x0, w0
 810:	bl	0 <grub_malloc>
 814:	str	x0, [x19, #216]
 818:	cbz	x0, 79c <ntfscomp+0x94>
 81c:	ldr	x2, [x19, #8]
 820:	cmp	x22, x2
 824:	b.ls	8a0 <ntfscomp+0x198>  // b.plast
 828:	ldr	w0, [x19, #208]
 82c:	sub	x22, x22, x2
 830:	mov	w2, #0x3                   	// #3
 834:	mov	x1, #0x0                   	// #0
 838:	sub	w2, w2, w0
 83c:	mov	x0, x19
 840:	lsr	x2, x22, x2
 844:	bl	1b0 <read_block>
 848:	cbz	w0, 8a0 <ntfscomp+0x198>
 84c:	adrp	x0, 0 <decomp_nextvcn>
 850:	ldr	x0, [x0]
 854:	ldr	w21, [x0]
 858:	b	944 <ntfscomp+0x23c>
 85c:	mov	x0, #0x1000                	// #4096
 860:	bl	0 <grub_malloc>
 864:	str	x0, [x22, #56]
 868:	ldr	x0, [x19, #48]
 86c:	ldr	x1, [x0, #56]
 870:	cbnz	x1, 884 <ntfscomp+0x17c>
 874:	adrp	x0, 0 <decomp_nextvcn>
 878:	ldr	x0, [x0]
 87c:	ldr	w21, [x0]
 880:	b	7a0 <ntfscomp+0x98>
 884:	mov	w1, #0x1                   	// #1
 888:	str	w1, [x0, #48]
 88c:	b	7c8 <ntfscomp+0xc0>
 890:	mov	x0, x19
 894:	bl	0 <grub_ntfs_read_run_list>
 898:	cbz	w0, 7e8 <ntfscomp+0xe0>
 89c:	b	874 <ntfscomp+0x16c>
 8a0:	ands	x21, x21, #0xfff
 8a4:	b.eq	95c <ntfscomp+0x254>  // b.none
 8a8:	ldr	x0, [x19, #48]
 8ac:	mov	x2, #0x1                   	// #1
 8b0:	ldr	x25, [x19, #224]
 8b4:	ldr	x1, [x0, #56]
 8b8:	str	xzr, [x19, #224]
 8bc:	ldr	w24, [x19, #208]
 8c0:	mov	x0, x19
 8c4:	ldr	x22, [x19, #8]
 8c8:	bl	1b0 <read_block>
 8cc:	cbnz	w0, 84c <ntfscomp+0x144>
 8d0:	ldr	x1, [x19, #48]
 8d4:	add	w24, w24, #0x9
 8d8:	mov	w0, #0x1000                	// #4096
 8dc:	str	x25, [x19, #224]
 8e0:	lsl	x22, x22, x24
 8e4:	sub	w24, w0, w21
 8e8:	sub	w0, w0, w21
 8ec:	str	w22, [x1, #48]
 8f0:	cmp	x0, x20
 8f4:	mov	x0, x23
 8f8:	ldr	x1, [x1, #56]
 8fc:	csel	w24, w20, w24, hi  // hi = pmore
 900:	mov	w22, w24
 904:	mov	x2, x22
 908:	add	x1, x1, x21
 90c:	bl	0 <grub_memmove>
 910:	adrp	x0, 0 <decomp_nextvcn>
 914:	ldr	x0, [x0]
 918:	ldr	x4, [x0]
 91c:	cbz	x4, 938 <ntfscomp+0x230>
 920:	ldr	x3, [x19, #224]
 924:	cbz	x3, 938 <ntfscomp+0x230>
 928:	mov	w2, w24
 92c:	mov	w1, #0x0                   	// #0
 930:	mov	x0, #0x0                   	// #0
 934:	blr	x4
 938:	cmp	x22, x20
 93c:	b.ne	954 <ntfscomp+0x24c>  // b.any
 940:	mov	w21, #0x0                   	// #0
 944:	ldr	x0, [x19, #216]
 948:	cbz	x0, 7a0 <ntfscomp+0x98>
 94c:	bl	0 <grub_free>
 950:	b	7a0 <ntfscomp+0x98>
 954:	add	x23, x23, x22
 958:	sub	x20, x20, x22
 95c:	lsr	x2, x20, #12
 960:	mov	x1, x23
 964:	mov	x0, x19
 968:	bl	1b0 <read_block>
 96c:	cbnz	w0, 84c <ntfscomp+0x144>
 970:	ands	x25, x20, #0xfff
 974:	b.eq	940 <ntfscomp+0x238>  // b.none
 978:	ldr	x0, [x19, #48]
 97c:	mov	x2, #0x1                   	// #1
 980:	ldr	x26, [x19, #224]
 984:	ldr	x1, [x0, #56]
 988:	str	xzr, [x19, #224]
 98c:	ldr	w24, [x19, #208]
 990:	mov	x0, x19
 994:	ldr	x22, [x19, #8]
 998:	bl	1b0 <read_block>
 99c:	mov	w21, w0
 9a0:	cbnz	w0, 84c <ntfscomp+0x144>
 9a4:	ldr	x0, [x19, #48]
 9a8:	add	w24, w24, #0x9
 9ac:	and	x20, x20, #0xfffffffffffff000
 9b0:	mov	x2, x25
 9b4:	lsl	x22, x22, x24
 9b8:	ldr	x1, [x0, #56]
 9bc:	str	w22, [x0, #48]
 9c0:	add	x0, x23, x20
 9c4:	bl	0 <grub_memmove>
 9c8:	adrp	x0, 0 <decomp_nextvcn>
 9cc:	ldr	x0, [x0]
 9d0:	ldr	x4, [x0]
 9d4:	cbz	x4, 940 <ntfscomp+0x238>
 9d8:	cbz	x26, 940 <ntfscomp+0x238>
 9dc:	mov	x3, x26
 9e0:	mov	w2, w25
 9e4:	mov	w1, #0x0                   	// #0
 9e8:	mov	x0, #0x0                   	// #0
 9ec:	blr	x4
 9f0:	b	944 <ntfscomp+0x23c>
 9f4:	nop
	...

0000000000000a08 <grub_mod_init>:
 a08:	adrp	x0, 0 <decomp_nextvcn>
 a0c:	adrp	x1, 0 <decomp_nextvcn>
 a10:	ldr	x0, [x0]
 a14:	ldr	x1, [x1]
 a18:	str	x1, [x0]
 a1c:	ret
	...

0000000000000a30 <grub_mod_fini>:
 a30:	adrp	x0, 0 <decomp_nextvcn>
 a34:	ldr	x0, [x0]
 a38:	str	xzr, [x0]
 a3c:	ret
	...
