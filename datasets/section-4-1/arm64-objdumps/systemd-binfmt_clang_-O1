
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-binfmt_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

00000000002115d0 <_start>:
  2115d0:	mov	x29, #0x0                   	// #0
  2115d4:	mov	x30, #0x0                   	// #0
  2115d8:	mov	x5, x0
  2115dc:	ldr	x1, [sp]
  2115e0:	add	x2, sp, #0x8
  2115e4:	mov	x6, sp
  2115e8:	movz	x0, #0x0, lsl #48
  2115ec:	movk	x0, #0x0, lsl #32
  2115f0:	movk	x0, #0x21, lsl #16
  2115f4:	movk	x0, #0x1720
  2115f8:	movz	x3, #0x0, lsl #48
  2115fc:	movk	x3, #0x0, lsl #32
  211600:	movk	x3, #0x21, lsl #16
  211604:	movk	x3, #0x20d0
  211608:	movz	x4, #0x0, lsl #48
  21160c:	movk	x4, #0x0, lsl #32
  211610:	movk	x4, #0x21, lsl #16
  211614:	movk	x4, #0x2150
  211618:	bl	2121a0 <__libc_start_main@plt>
  21161c:	bl	2121b0 <abort@plt>

0000000000211620 <call_weak_fn>:
  211620:	adrp	x0, 222000 <path_join_internal@plt+0xfc70>
  211624:	ldr	x0, [x0, #1408]
  211628:	cbz	x0, 211630 <call_weak_fn+0x10>
  21162c:	b	2121c0 <__gmon_start__@plt>
  211630:	ret

0000000000211634 <deregister_tm_clones>:
  211634:	adrp	x0, 232000 <_DYNAMIC+0xfc50>
  211638:	add	x0, x0, #0x6b0
  21163c:	adrp	x1, 232000 <_DYNAMIC+0xfc50>
  211640:	add	x1, x1, #0x6b0
  211644:	cmp	x0, x1
  211648:	b.eq	21167c <deregister_tm_clones+0x48>  // b.none
  21164c:	stp	x29, x30, [sp, #-32]!
  211650:	mov	x29, sp
  211654:	adrp	x0, 200000 <parse_argv.options-0x13c8>
  211658:	ldr	x0, [x0, #3992]
  21165c:	str	x0, [sp, #24]
  211660:	mov	x1, x0
  211664:	cbz	x1, 211674 <deregister_tm_clones+0x40>
  211668:	adrp	x0, 232000 <_DYNAMIC+0xfc50>
  21166c:	add	x0, x0, #0x6b0
  211670:	blr	x1
  211674:	ldp	x29, x30, [sp], #32
  211678:	ret
  21167c:	ret

0000000000211680 <register_tm_clones>:
  211680:	adrp	x0, 232000 <_DYNAMIC+0xfc50>
  211684:	add	x0, x0, #0x6b0
  211688:	adrp	x1, 232000 <_DYNAMIC+0xfc50>
  21168c:	add	x1, x1, #0x6b0
  211690:	sub	x0, x0, x1
  211694:	lsr	x1, x0, #63
  211698:	add	x0, x1, x0, asr #3
  21169c:	cmp	xzr, x0, asr #1
  2116a0:	b.eq	2116d8 <register_tm_clones+0x58>  // b.none
  2116a4:	stp	x29, x30, [sp, #-32]!
  2116a8:	mov	x29, sp
  2116ac:	asr	x1, x0, #1
  2116b0:	adrp	x0, 200000 <parse_argv.options-0x13c8>
  2116b4:	ldr	x0, [x0, #4000]
  2116b8:	str	x0, [sp, #24]
  2116bc:	mov	x2, x0
  2116c0:	cbz	x2, 2116d0 <register_tm_clones+0x50>
  2116c4:	adrp	x0, 232000 <_DYNAMIC+0xfc50>
  2116c8:	add	x0, x0, #0x6b0
  2116cc:	blr	x2
  2116d0:	ldp	x29, x30, [sp], #32
  2116d4:	ret
  2116d8:	ret

00000000002116dc <__do_global_dtors_aux>:
  2116dc:	adrp	x0, 232000 <_DYNAMIC+0xfc50>
  2116e0:	ldrb	w0, [x0, #1712]
  2116e4:	cbnz	w0, 211708 <__do_global_dtors_aux+0x2c>
  2116e8:	stp	x29, x30, [sp, #-16]!
  2116ec:	mov	x29, sp
  2116f0:	bl	211634 <deregister_tm_clones>
  2116f4:	adrp	x0, 232000 <_DYNAMIC+0xfc50>
  2116f8:	mov	w1, #0x1                   	// #1
  2116fc:	strb	w1, [x0, #1712]
  211700:	ldp	x29, x30, [sp], #16
  211704:	ret
  211708:	ret

000000000021170c <frame_dummy>:
  21170c:	stp	x29, x30, [sp, #-16]!
  211710:	mov	x29, sp
  211714:	bl	211680 <register_tm_clones>
  211718:	ldp	x29, x30, [sp], #16
  21171c:	ret

0000000000211720 <main>:
  211720:	stp	x29, x30, [sp, #-32]!
  211724:	stp	x20, x19, [sp, #16]
  211728:	mov	x29, sp
  21172c:	mov	x19, x1
  211730:	mov	w20, w0
  211734:	bl	21176c <save_argc_argv>
  211738:	mov	w0, w20
  21173c:	mov	x1, x19
  211740:	bl	211780 <run>
  211744:	mov	w19, w0
  211748:	bl	2121d0 <ask_password_agent_close@plt>
  21174c:	bl	2121e0 <polkit_agent_close@plt>
  211750:	bl	2121f0 <pager_close@plt>
  211754:	bl	212200 <mac_selinux_finish@plt>
  211758:	bl	21193c <static_destruct>
  21175c:	lsr	w0, w19, #31
  211760:	ldp	x20, x19, [sp, #16]
  211764:	ldp	x29, x30, [sp], #32
  211768:	ret

000000000021176c <save_argc_argv>:
  21176c:	adrp	x8, 232000 <_DYNAMIC+0xfc50>
  211770:	adrp	x9, 232000 <_DYNAMIC+0xfc50>
  211774:	str	w0, [x8, #1728]
  211778:	str	x1, [x9, #1736]
  21177c:	ret

0000000000211780 <run>:
  211780:	sub	sp, sp, #0x60
  211784:	stp	x29, x30, [sp, #48]
  211788:	str	x21, [sp, #64]
  21178c:	stp	x20, x19, [sp, #80]
  211790:	add	x29, sp, #0x30
  211794:	mov	x21, x1
  211798:	mov	w20, w0
  21179c:	bl	21199c <parse_argv>
  2117a0:	cmp	w0, #0x0
  2117a4:	b.le	2117f4 <run+0x74>
  2117a8:	bl	212210 <log_setup_service@plt>
  2117ac:	mov	w0, #0x12                  	// #18
  2117b0:	bl	212220 <umask@plt>
  2117b4:	adrp	x8, 232000 <_DYNAMIC+0xfc50>
  2117b8:	ldrsw	x8, [x8, #1744]
  2117bc:	cmp	w8, w20
  2117c0:	b.ge	2117fc <run+0x7c>  // b.tcont
  2117c4:	mov	w19, wzr
  2117c8:	add	x21, x21, x8, lsl #3
  2117cc:	sub	w20, w20, w8
  2117d0:	ldr	x0, [x21], #8
  2117d4:	mov	w1, wzr
  2117d8:	bl	211b5c <apply_file>
  2117dc:	cmp	w0, #0x0
  2117e0:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  2117e4:	csel	w19, w0, w19, eq  // eq = none
  2117e8:	subs	w20, w20, #0x1
  2117ec:	b.ne	2117d0 <run+0x50>  // b.any
  2117f0:	b	211920 <run+0x1a0>
  2117f4:	cset	w20, ne  // ne = any
  2117f8:	b	211924 <run+0x1a4>
  2117fc:	adrp	x8, 201000 <parse_argv.options-0x3c8>
  211800:	add	x8, x8, #0x398
  211804:	ldp	q0, q1, [x8]
  211808:	ldr	q2, [x8, #32]
  21180c:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211810:	add	x1, x1, #0x92
  211814:	add	x0, x29, #0x18
  211818:	mov	x4, sp
  21181c:	mov	x2, xzr
  211820:	mov	w3, wzr
  211824:	str	xzr, [x29, #24]
  211828:	stp	q0, q1, [sp]
  21182c:	str	q2, [sp, #32]
  211830:	bl	212230 <conf_files_list_strv@plt>
  211834:	mov	w19, w0
  211838:	tbnz	w0, #31, 21186c <run+0xec>
  21183c:	adrp	x8, 232000 <_DYNAMIC+0xfc50>
  211840:	ldrb	w8, [x8, #1716]
  211844:	cmp	w8, #0x1
  211848:	b.ne	2118b0 <run+0x130>  // b.any
  21184c:	adrp	x8, 232000 <_DYNAMIC+0xfc50>
  211850:	ldr	w0, [x8, #1720]
  211854:	bl	212240 <pager_open@plt>
  211858:	ldr	x1, [x29, #24]
  21185c:	mov	x0, xzr
  211860:	mov	w2, wzr
  211864:	bl	212250 <cat_files@plt>
  211868:	b	2118a4 <run+0x124>
  21186c:	mov	w0, wzr
  211870:	bl	212260 <log_get_max_level_realm@plt>
  211874:	cmp	w0, #0x3
  211878:	b.lt	211900 <run+0x180>  // b.tstop
  21187c:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211880:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  211884:	adrp	x5, 200000 <parse_argv.options-0x13c8>
  211888:	add	x2, x2, #0x124
  21188c:	add	x4, x4, #0x172
  211890:	add	x5, x5, #0xfc8
  211894:	mov	w0, #0x3                   	// #3
  211898:	mov	w3, #0xce                  	// #206
  21189c:	mov	w1, w19
  2118a0:	bl	212270 <log_internal_realm@plt>
  2118a4:	mov	w20, w0
  2118a8:	mov	w21, wzr
  2118ac:	b	211914 <run+0x194>
  2118b0:	adrp	x0, 201000 <parse_argv.options-0x3c8>
  2118b4:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  2118b8:	add	x0, x0, #0x72
  2118bc:	add	x1, x1, #0xdc
  2118c0:	bl	211dd8 <write_string_file>
  2118c4:	ldr	x9, [x29, #24]
  2118c8:	cbz	x9, 211910 <run+0x190>
  2118cc:	ldr	x8, [x9]
  2118d0:	cbz	x8, 211910 <run+0x190>
  2118d4:	add	x20, x9, #0x8
  2118d8:	mov	w21, #0x1                   	// #1
  2118dc:	mov	w1, #0x1                   	// #1
  2118e0:	mov	x0, x8
  2118e4:	bl	211b5c <apply_file>
  2118e8:	ldr	x8, [x20], #8
  2118ec:	cmp	w0, #0x0
  2118f0:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  2118f4:	csel	w19, w0, w19, eq  // eq = none
  2118f8:	cbnz	x8, 2118dc <run+0x15c>
  2118fc:	b	211914 <run+0x194>
  211900:	mov	w21, wzr
  211904:	neg	w8, w19
  211908:	sub	w20, w21, w8, uxtb
  21190c:	b	211914 <run+0x194>
  211910:	mov	w21, #0x1                   	// #1
  211914:	add	x0, x29, #0x18
  211918:	bl	211dbc <strv_freep>
  21191c:	cbz	w21, 211924 <run+0x1a4>
  211920:	mov	w20, w19
  211924:	mov	w0, w20
  211928:	ldp	x20, x19, [sp, #80]
  21192c:	ldr	x21, [sp, #64]
  211930:	ldp	x29, x30, [sp, #48]
  211934:	add	sp, sp, #0x60
  211938:	ret

000000000021193c <static_destruct>:
  21193c:	stp	x29, x30, [sp, #-32]!
  211940:	stp	x20, x19, [sp, #16]
  211944:	adrp	x8, 222000 <path_join_internal@plt+0xfc70>
  211948:	ldr	x8, [x8, #1416]
  21194c:	mov	x29, sp
  211950:	cbz	x8, 211990 <static_destruct+0x54>
  211954:	adrp	x0, 222000 <path_join_internal@plt+0xfc70>
  211958:	ldr	x0, [x0, #1416]
  21195c:	bl	2120c0 <ALIGN_TO>
  211960:	adrp	x20, 222000 <path_join_internal@plt+0xfc70>
  211964:	ldr	x20, [x20, #1424]
  211968:	cmp	x0, x20
  21196c:	b.cs	211990 <static_destruct+0x54>  // b.hs, b.nlast
  211970:	mov	x19, x0
  211974:	ldp	x0, x8, [x19]
  211978:	blr	x8
  21197c:	add	x0, x19, #0x10
  211980:	bl	2120c0 <ALIGN_TO>
  211984:	mov	x19, x0
  211988:	cmp	x0, x20
  21198c:	b.cc	211974 <static_destruct+0x38>  // b.lo, b.ul, b.last
  211990:	ldp	x20, x19, [sp, #16]
  211994:	ldp	x29, x30, [sp], #32
  211998:	ret

000000000021199c <parse_argv>:
  21199c:	stp	x29, x30, [sp, #-80]!
  2119a0:	str	x25, [sp, #16]
  2119a4:	stp	x24, x23, [sp, #32]
  2119a8:	stp	x22, x21, [sp, #48]
  2119ac:	stp	x20, x19, [sp, #64]
  2119b0:	mov	x29, sp
  2119b4:	tbnz	w0, #31, 211af0 <parse_argv+0x154>
  2119b8:	mov	x20, x1
  2119bc:	cbz	x1, 211b14 <parse_argv+0x178>
  2119c0:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  2119c4:	adrp	x3, 201000 <parse_argv.options-0x3c8>
  2119c8:	add	x2, x2, #0x176
  2119cc:	add	x3, x3, #0x3c8
  2119d0:	mov	x1, x20
  2119d4:	mov	x4, xzr
  2119d8:	mov	w19, w0
  2119dc:	bl	212280 <getopt_long@plt>
  2119e0:	tbnz	w0, #31, 211a50 <parse_argv+0xb4>
  2119e4:	adrp	x21, 201000 <parse_argv.options-0x3c8>
  2119e8:	adrp	x22, 201000 <parse_argv.options-0x3c8>
  2119ec:	adrp	x23, 232000 <_DYNAMIC+0xfc50>
  2119f0:	mov	w24, #0x1                   	// #1
  2119f4:	add	x21, x21, #0x176
  2119f8:	add	x22, x22, #0x3c8
  2119fc:	adrp	x25, 232000 <_DYNAMIC+0xfc50>
  211a00:	cmp	w0, #0xff
  211a04:	b.le	211ab4 <parse_argv+0x118>
  211a08:	cmp	w0, #0x100
  211a0c:	b.eq	211ac4 <parse_argv+0x128>  // b.none
  211a10:	cmp	w0, #0x101
  211a14:	b.ne	211a20 <parse_argv+0x84>  // b.any
  211a18:	strb	w24, [x23, #1716]
  211a1c:	b	211a34 <parse_argv+0x98>
  211a20:	cmp	w0, #0x102
  211a24:	b.ne	211b38 <parse_argv+0x19c>  // b.any
  211a28:	ldr	w8, [x25, #1720]
  211a2c:	orr	w8, w8, #0x1
  211a30:	str	w8, [x25, #1720]
  211a34:	mov	w0, w19
  211a38:	mov	x1, x20
  211a3c:	mov	x2, x21
  211a40:	mov	x3, x22
  211a44:	mov	x4, xzr
  211a48:	bl	212280 <getopt_long@plt>
  211a4c:	tbz	w0, #31, 211a00 <parse_argv+0x64>
  211a50:	adrp	x8, 232000 <_DYNAMIC+0xfc50>
  211a54:	ldrb	w8, [x8, #1716]
  211a58:	mov	w0, #0x1                   	// #1
  211a5c:	cmp	w8, #0x1
  211a60:	b.ne	211ad8 <parse_argv+0x13c>  // b.any
  211a64:	adrp	x8, 232000 <_DYNAMIC+0xfc50>
  211a68:	ldr	w8, [x8, #1744]
  211a6c:	cmp	w8, w19
  211a70:	b.ge	211ad8 <parse_argv+0x13c>  // b.tcont
  211a74:	mov	w0, wzr
  211a78:	bl	212260 <log_get_max_level_realm@plt>
  211a7c:	cmp	w0, #0x3
  211a80:	b.lt	211abc <parse_argv+0x120>  // b.tstop
  211a84:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211a88:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  211a8c:	adrp	x5, 201000 <parse_argv.options-0x3c8>
  211a90:	mov	w1, #0x16                  	// #22
  211a94:	add	x2, x2, #0x124
  211a98:	add	x4, x4, #0x67
  211a9c:	add	x5, x5, #0x178
  211aa0:	mov	w0, #0x3                   	// #3
  211aa4:	movk	w1, #0x4000, lsl #16
  211aa8:	mov	w3, #0xae                  	// #174
  211aac:	bl	212270 <log_internal_realm@plt>
  211ab0:	b	211ad8 <parse_argv+0x13c>
  211ab4:	cmp	w0, #0x3f
  211ab8:	b.ne	211acc <parse_argv+0x130>  // b.any
  211abc:	mov	w0, #0xffffffea            	// #-22
  211ac0:	b	211ad8 <parse_argv+0x13c>
  211ac4:	bl	212290 <version@plt>
  211ac8:	b	211ad8 <parse_argv+0x13c>
  211acc:	cmp	w0, #0x68
  211ad0:	b.ne	211b38 <parse_argv+0x19c>  // b.any
  211ad4:	bl	211df4 <help>
  211ad8:	ldp	x20, x19, [sp, #64]
  211adc:	ldp	x22, x21, [sp, #48]
  211ae0:	ldp	x24, x23, [sp, #32]
  211ae4:	ldr	x25, [sp, #16]
  211ae8:	ldp	x29, x30, [sp], #80
  211aec:	ret
  211af0:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211af4:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211af8:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  211afc:	add	x1, x1, #0x12
  211b00:	add	x2, x2, #0x124
  211b04:	add	x4, x4, #0x357
  211b08:	mov	w3, #0x90                  	// #144
  211b0c:	mov	w0, wzr
  211b10:	bl	2122a0 <log_assert_failed_realm@plt>
  211b14:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211b18:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211b1c:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  211b20:	add	x1, x1, #0x27
  211b24:	add	x2, x2, #0x124
  211b28:	add	x4, x4, #0x357
  211b2c:	mov	w3, #0x91                  	// #145
  211b30:	mov	w0, wzr
  211b34:	bl	2122a0 <log_assert_failed_realm@plt>
  211b38:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211b3c:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211b40:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  211b44:	add	x1, x1, #0x138
  211b48:	add	x2, x2, #0x124
  211b4c:	add	x4, x4, #0x357
  211b50:	mov	w3, #0xa9                  	// #169
  211b54:	mov	w0, wzr
  211b58:	bl	2122b0 <log_assert_failed_unreachable_realm@plt>

0000000000211b5c <apply_file>:
  211b5c:	sub	sp, sp, #0xa0
  211b60:	stp	x29, x30, [sp, #64]
  211b64:	add	x29, sp, #0x40
  211b68:	str	x27, [sp, #80]
  211b6c:	stp	x26, x25, [sp, #96]
  211b70:	stp	x24, x23, [sp, #112]
  211b74:	stp	x22, x21, [sp, #128]
  211b78:	stp	x20, x19, [sp, #144]
  211b7c:	str	xzr, [x29, #24]
  211b80:	cbz	x0, 211d9c <apply_file+0x240>
  211b84:	adrp	x8, 201000 <parse_argv.options-0x3c8>
  211b88:	add	x8, x8, #0x468
  211b8c:	ldp	q0, q1, [x8]
  211b90:	ldr	q2, [x8, #32]
  211b94:	mov	w21, w1
  211b98:	adrp	x1, 200000 <parse_argv.options-0x13c8>
  211b9c:	add	x1, x1, #0xfa8
  211ba0:	add	x3, sp, #0x10
  211ba4:	add	x4, x29, #0x18
  211ba8:	mov	x2, xzr
  211bac:	mov	x19, x0
  211bb0:	stp	q0, q1, [sp, #16]
  211bb4:	str	q2, [sp, #48]
  211bb8:	bl	2122c0 <search_and_fopen@plt>
  211bbc:	mov	w20, w0
  211bc0:	tbnz	w0, #31, 211d0c <apply_file+0x1b0>
  211bc4:	mov	w0, wzr
  211bc8:	bl	212260 <log_get_max_level_realm@plt>
  211bcc:	cmp	w0, #0x7
  211bd0:	b.lt	211c00 <apply_file+0xa4>  // b.tstop
  211bd4:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211bd8:	adrp	x4, 200000 <parse_argv.options-0x13c8>
  211bdc:	adrp	x5, 201000 <parse_argv.options-0x3c8>
  211be0:	add	x2, x2, #0x124
  211be4:	add	x4, x4, #0xfef
  211be8:	add	x5, x5, #0x8
  211bec:	mov	w0, #0x7                   	// #7
  211bf0:	mov	w3, #0x4f                  	// #79
  211bf4:	mov	w1, wzr
  211bf8:	mov	x6, x19
  211bfc:	bl	212270 <log_internal_realm@plt>
  211c00:	mov	x27, #0x1                   	// #1
  211c04:	adrp	x21, 201000 <parse_argv.options-0x3c8>
  211c08:	adrp	x22, 200000 <parse_argv.options-0x13c8>
  211c0c:	adrp	x23, 200000 <parse_argv.options-0x13c8>
  211c10:	movk	x27, #0x8, lsl #32
  211c14:	add	x21, x21, #0x124
  211c18:	add	x22, x22, #0xfef
  211c1c:	add	x23, x23, #0xfab
  211c20:	mov	w26, #0x1                   	// #1
  211c24:	movk	x27, #0x800, lsl #48
  211c28:	ldr	x0, [x29, #24]
  211c2c:	add	x1, sp, #0x8
  211c30:	str	xzr, [sp, #8]
  211c34:	bl	211ea8 <read_line>
  211c38:	mov	w25, w0
  211c3c:	tbnz	w0, #31, 211c78 <apply_file+0x11c>
  211c40:	cbz	w25, 211cb4 <apply_file+0x158>
  211c44:	ldr	x0, [sp, #8]
  211c48:	bl	2122d0 <strstrip@plt>
  211c4c:	mov	x25, x0
  211c50:	bl	211ec8 <isempty>
  211c54:	tbnz	w0, #0, 211c70 <apply_file+0x114>
  211c58:	ldrb	w8, [x25]
  211c5c:	cmp	x8, #0x3f
  211c60:	b.hi	211cd0 <apply_file+0x174>  // b.pmore
  211c64:	lsl	x8, x26, x8
  211c68:	and	x8, x8, x27
  211c6c:	cbz	x8, 211cd0 <apply_file+0x174>
  211c70:	mov	w25, #0x5                   	// #5
  211c74:	b	211ce8 <apply_file+0x18c>
  211c78:	mov	w0, wzr
  211c7c:	bl	212260 <log_get_max_level_realm@plt>
  211c80:	cmp	w0, #0x3
  211c84:	b.lt	211cbc <apply_file+0x160>  // b.tstop
  211c88:	mov	w0, #0x3                   	// #3
  211c8c:	mov	w3, #0x57                  	// #87
  211c90:	mov	w1, w25
  211c94:	mov	x2, x21
  211c98:	mov	x4, x22
  211c9c:	mov	x5, x23
  211ca0:	mov	x6, x19
  211ca4:	bl	212270 <log_internal_realm@plt>
  211ca8:	mov	w24, w0
  211cac:	mov	w25, #0x1                   	// #1
  211cb0:	b	211ce8 <apply_file+0x18c>
  211cb4:	mov	w25, #0x4                   	// #4
  211cb8:	b	211ce8 <apply_file+0x18c>
  211cbc:	mov	w8, wzr
  211cc0:	neg	w9, w25
  211cc4:	sub	w24, w8, w9, uxtb
  211cc8:	mov	w25, #0x1                   	// #1
  211ccc:	b	211ce8 <apply_file+0x18c>
  211cd0:	mov	x0, x25
  211cd4:	bl	211ee4 <apply_rule>
  211cd8:	cmp	w0, #0x0
  211cdc:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  211ce0:	mov	w25, wzr
  211ce4:	csel	w20, w0, w20, eq  // eq = none
  211ce8:	add	x0, sp, #0x8
  211cec:	bl	211e78 <freep>
  211cf0:	cbz	w25, 211c28 <apply_file+0xcc>
  211cf4:	cmp	w25, #0x5
  211cf8:	b.eq	211c28 <apply_file+0xcc>  // b.none
  211cfc:	cmp	w25, #0x4
  211d00:	b.eq	211d70 <apply_file+0x214>  // b.none
  211d04:	mov	w20, w24
  211d08:	b	211d70 <apply_file+0x214>
  211d0c:	cmn	w20, #0x2
  211d10:	b.ne	211d20 <apply_file+0x1c4>  // b.any
  211d14:	tbz	w21, #0, 211d20 <apply_file+0x1c4>
  211d18:	mov	w20, wzr
  211d1c:	b	211d70 <apply_file+0x214>
  211d20:	mov	w0, wzr
  211d24:	bl	212260 <log_get_max_level_realm@plt>
  211d28:	cmp	w0, #0x3
  211d2c:	b.lt	211d64 <apply_file+0x208>  // b.tstop
  211d30:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211d34:	adrp	x4, 200000 <parse_argv.options-0x13c8>
  211d38:	adrp	x5, 201000 <parse_argv.options-0x3c8>
  211d3c:	add	x2, x2, #0x124
  211d40:	add	x4, x4, #0xfef
  211d44:	add	x5, x5, #0x149
  211d48:	mov	w0, #0x3                   	// #3
  211d4c:	mov	w3, #0x4c                  	// #76
  211d50:	mov	w1, w20
  211d54:	mov	x6, x19
  211d58:	bl	212270 <log_internal_realm@plt>
  211d5c:	mov	w20, w0
  211d60:	b	211d70 <apply_file+0x214>
  211d64:	mov	w8, wzr
  211d68:	neg	w9, w20
  211d6c:	sub	w20, w8, w9, uxtb
  211d70:	add	x0, x29, #0x18
  211d74:	bl	211e90 <fclosep>
  211d78:	mov	w0, w20
  211d7c:	ldp	x20, x19, [sp, #144]
  211d80:	ldp	x22, x21, [sp, #128]
  211d84:	ldp	x24, x23, [sp, #112]
  211d88:	ldp	x26, x25, [sp, #96]
  211d8c:	ldr	x27, [sp, #80]
  211d90:	ldp	x29, x30, [sp, #64]
  211d94:	add	sp, sp, #0xa0
  211d98:	ret
  211d9c:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211da0:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211da4:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  211da8:	add	x1, x1, #0x33a
  211dac:	add	x2, x2, #0x124
  211db0:	add	x4, x4, #0xdf
  211db4:	mov	w3, #0x45                  	// #69
  211db8:	bl	2122a0 <log_assert_failed_realm@plt>

0000000000211dbc <strv_freep>:
  211dbc:	stp	x29, x30, [sp, #-16]!
  211dc0:	ldr	x0, [x0]
  211dc4:	mov	x29, sp
  211dc8:	cbz	x0, 211dd0 <strv_freep+0x14>
  211dcc:	bl	2122e0 <strv_free@plt>
  211dd0:	ldp	x29, x30, [sp], #16
  211dd4:	ret

0000000000211dd8 <write_string_file>:
  211dd8:	stp	x29, x30, [sp, #-16]!
  211ddc:	mov	w2, #0x20                  	// #32
  211de0:	mov	x3, xzr
  211de4:	mov	x29, sp
  211de8:	bl	2122f0 <write_string_file_ts@plt>
  211dec:	ldp	x29, x30, [sp], #16
  211df0:	ret

0000000000211df4 <help>:
  211df4:	stp	x29, x30, [sp, #-32]!
  211df8:	mov	x29, sp
  211dfc:	adrp	x0, 201000 <parse_argv.options-0x3c8>
  211e00:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211e04:	add	x0, x0, #0x2c
  211e08:	add	x1, x1, #0x98
  211e0c:	add	x2, x29, #0x18
  211e10:	str	x19, [sp, #16]
  211e14:	str	xzr, [x29, #24]
  211e18:	bl	212300 <terminal_urlify_man@plt>
  211e1c:	tbnz	w0, #31, 211e40 <help+0x4c>
  211e20:	adrp	x8, 232000 <_DYNAMIC+0xfc50>
  211e24:	ldr	x1, [x8, #1752]
  211e28:	ldr	x2, [x29, #24]
  211e2c:	adrp	x0, 201000 <parse_argv.options-0x3c8>
  211e30:	add	x0, x0, #0x20f
  211e34:	bl	212310 <printf@plt>
  211e38:	mov	w19, wzr
  211e3c:	b	211e60 <help+0x6c>
  211e40:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211e44:	adrp	x3, 201000 <parse_argv.options-0x3c8>
  211e48:	add	x1, x1, #0x124
  211e4c:	add	x3, x3, #0x1af
  211e50:	mov	w2, #0x6f                  	// #111
  211e54:	mov	w0, wzr
  211e58:	bl	212320 <log_oom_internal@plt>
  211e5c:	mov	w19, w0
  211e60:	add	x0, x29, #0x18
  211e64:	bl	211e78 <freep>
  211e68:	mov	w0, w19
  211e6c:	ldr	x19, [sp, #16]
  211e70:	ldp	x29, x30, [sp], #32
  211e74:	ret

0000000000211e78 <freep>:
  211e78:	stp	x29, x30, [sp, #-16]!
  211e7c:	ldr	x0, [x0]
  211e80:	mov	x29, sp
  211e84:	bl	212330 <free@plt>
  211e88:	ldp	x29, x30, [sp], #16
  211e8c:	ret

0000000000211e90 <fclosep>:
  211e90:	stp	x29, x30, [sp, #-16]!
  211e94:	ldr	x0, [x0]
  211e98:	mov	x29, sp
  211e9c:	bl	212340 <safe_fclose@plt>
  211ea0:	ldp	x29, x30, [sp], #16
  211ea4:	ret

0000000000211ea8 <read_line>:
  211ea8:	stp	x29, x30, [sp, #-16]!
  211eac:	mov	x3, x1
  211eb0:	mov	w1, #0x100000              	// #1048576
  211eb4:	mov	w2, wzr
  211eb8:	mov	x29, sp
  211ebc:	bl	212350 <read_line_full@plt>
  211ec0:	ldp	x29, x30, [sp], #16
  211ec4:	ret

0000000000211ec8 <isempty>:
  211ec8:	cbz	x0, 211edc <isempty+0x14>
  211ecc:	ldrb	w8, [x0]
  211ed0:	cmp	w8, #0x0
  211ed4:	cset	w0, eq  // eq = none
  211ed8:	ret
  211edc:	mov	w0, #0x1                   	// #1
  211ee0:	ret

0000000000211ee4 <apply_rule>:
  211ee4:	stp	x29, x30, [sp, #-32]!
  211ee8:	str	x19, [sp, #16]
  211eec:	mov	x29, sp
  211ef0:	mov	x19, x0
  211ef4:	bl	211f6c <delete_rule>
  211ef8:	adrp	x0, 201000 <parse_argv.options-0x3c8>
  211efc:	add	x0, x0, #0xba
  211f00:	mov	x1, x19
  211f04:	bl	211dd8 <write_string_file>
  211f08:	tbnz	w0, #31, 211f14 <apply_rule+0x30>
  211f0c:	mov	w0, wzr
  211f10:	b	211f60 <apply_rule+0x7c>
  211f14:	mov	w19, w0
  211f18:	mov	w0, wzr
  211f1c:	bl	212260 <log_get_max_level_realm@plt>
  211f20:	cmp	w0, #0x3
  211f24:	b.lt	211f54 <apply_rule+0x70>  // b.tstop
  211f28:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  211f2c:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  211f30:	adrp	x5, 201000 <parse_argv.options-0x3c8>
  211f34:	add	x2, x2, #0x124
  211f38:	add	x4, x4, #0x386
  211f3c:	add	x5, x5, #0x9a
  211f40:	mov	w0, #0x3                   	// #3
  211f44:	mov	w3, #0x3c                  	// #60
  211f48:	mov	w1, w19
  211f4c:	bl	212270 <log_internal_realm@plt>
  211f50:	b	211f60 <apply_rule+0x7c>
  211f54:	mov	w8, wzr
  211f58:	neg	w9, w19
  211f5c:	sub	w0, w8, w9, uxtb
  211f60:	ldr	x19, [sp, #16]
  211f64:	ldp	x29, x30, [sp], #32
  211f68:	ret

0000000000211f6c <delete_rule>:
  211f6c:	sub	sp, sp, #0x30
  211f70:	stp	x29, x30, [sp, #16]
  211f74:	add	x29, sp, #0x10
  211f78:	str	x19, [sp, #32]
  211f7c:	str	xzr, [x29, #24]
  211f80:	str	xzr, [sp, #8]
  211f84:	cbz	x0, 21207c <delete_rule+0x110>
  211f88:	ldrb	w8, [x0]
  211f8c:	cbz	w8, 21209c <delete_rule+0x130>
  211f90:	bl	212360 <strdup@plt>
  211f94:	str	x0, [x29, #24]
  211f98:	cbz	x0, 211fe8 <delete_rule+0x7c>
  211f9c:	mov	x19, x0
  211fa0:	ldrb	w1, [x19], #1
  211fa4:	mov	x0, x19
  211fa8:	bl	212370 <strchrnul@plt>
  211fac:	strb	wzr, [x0]
  211fb0:	mov	x0, x19
  211fb4:	bl	212380 <filename_is_valid@plt>
  211fb8:	tbz	w0, #0, 212000 <delete_rule+0x94>
  211fbc:	adrp	x0, 201000 <parse_argv.options-0x3c8>
  211fc0:	add	x0, x0, #0x1f6
  211fc4:	mov	x2, #0xffffffffffffffff    	// #-1
  211fc8:	mov	x1, x19
  211fcc:	bl	212390 <path_join_internal@plt>
  211fd0:	str	x0, [sp, #8]
  211fd4:	cbz	x0, 212044 <delete_rule+0xd8>
  211fd8:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211fdc:	add	x1, x1, #0xdc
  211fe0:	bl	211dd8 <write_string_file>
  211fe4:	b	21205c <delete_rule+0xf0>
  211fe8:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  211fec:	adrp	x3, 201000 <parse_argv.options-0x3c8>
  211ff0:	add	x1, x1, #0x124
  211ff4:	add	x3, x3, #0x166
  211ff8:	mov	w2, #0x25                  	// #37
  211ffc:	b	212058 <delete_rule+0xec>
  212000:	mov	w0, wzr
  212004:	bl	212260 <log_get_max_level_realm@plt>
  212008:	cmp	w0, #0x3
  21200c:	b.lt	21205c <delete_rule+0xf0>  // b.tstop
  212010:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  212014:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  212018:	adrp	x5, 201000 <parse_argv.options-0x3c8>
  21201c:	mov	w1, #0x16                  	// #22
  212020:	add	x2, x2, #0x124
  212024:	add	x4, x4, #0x166
  212028:	add	x5, x5, #0x1ca
  21202c:	mov	w0, #0x3                   	// #3
  212030:	movk	w1, #0x4000, lsl #16
  212034:	mov	w3, #0x2c                  	// #44
  212038:	mov	x6, x19
  21203c:	bl	212270 <log_internal_realm@plt>
  212040:	b	21205c <delete_rule+0xf0>
  212044:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  212048:	adrp	x3, 201000 <parse_argv.options-0x3c8>
  21204c:	add	x1, x1, #0x124
  212050:	add	x3, x3, #0x166
  212054:	mov	w2, #0x30                  	// #48
  212058:	bl	212320 <log_oom_internal@plt>
  21205c:	add	x0, sp, #0x8
  212060:	bl	211e78 <freep>
  212064:	add	x0, x29, #0x18
  212068:	bl	211e78 <freep>
  21206c:	ldr	x19, [sp, #32]
  212070:	ldp	x29, x30, [sp, #16]
  212074:	add	sp, sp, #0x30
  212078:	ret
  21207c:	adrp	x1, 200000 <parse_argv.options-0x13c8>
  212080:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  212084:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  212088:	add	x1, x1, #0xffa
  21208c:	add	x2, x2, #0x124
  212090:	add	x4, x4, #0x103
  212094:	mov	w3, #0x20                  	// #32
  212098:	bl	2122a0 <log_assert_failed_realm@plt>
  21209c:	adrp	x1, 201000 <parse_argv.options-0x3c8>
  2120a0:	adrp	x2, 201000 <parse_argv.options-0x3c8>
  2120a4:	adrp	x4, 201000 <parse_argv.options-0x3c8>
  2120a8:	add	x1, x1, #0x1b4
  2120ac:	add	x2, x2, #0x124
  2120b0:	add	x4, x4, #0x103
  2120b4:	mov	w3, #0x21                  	// #33
  2120b8:	mov	w0, wzr
  2120bc:	bl	2122a0 <log_assert_failed_realm@plt>

00000000002120c0 <ALIGN_TO>:
  2120c0:	add	x8, x0, #0x7
  2120c4:	and	x0, x8, #0xfffffffffffffff8
  2120c8:	ret
  2120cc:	udf	#0

00000000002120d0 <__libc_csu_init>:
  2120d0:	stp	x29, x30, [sp, #-64]!
  2120d4:	mov	x29, sp
  2120d8:	stp	x19, x20, [sp, #16]
  2120dc:	adrp	x20, 222000 <path_join_internal@plt+0xfc70>
  2120e0:	add	x20, x20, #0x3b0
  2120e4:	stp	x21, x22, [sp, #32]
  2120e8:	adrp	x21, 222000 <path_join_internal@plt+0xfc70>
  2120ec:	add	x21, x21, #0x3a8
  2120f0:	sub	x20, x20, x21
  2120f4:	mov	w22, w0
  2120f8:	stp	x23, x24, [sp, #48]
  2120fc:	mov	x23, x1
  212100:	mov	x24, x2
  212104:	bl	212154 <_init>
  212108:	cmp	xzr, x20, asr #3
  21210c:	b.eq	212138 <__libc_csu_init+0x68>  // b.none
  212110:	asr	x20, x20, #3
  212114:	mov	x19, #0x0                   	// #0
  212118:	ldr	x3, [x21, x19, lsl #3]
  21211c:	mov	x2, x24
  212120:	add	x19, x19, #0x1
  212124:	mov	x1, x23
  212128:	mov	w0, w22
  21212c:	blr	x3
  212130:	cmp	x20, x19
  212134:	b.ne	212118 <__libc_csu_init+0x48>  // b.any
  212138:	ldp	x19, x20, [sp, #16]
  21213c:	ldp	x21, x22, [sp, #32]
  212140:	ldp	x23, x24, [sp, #48]
  212144:	ldp	x29, x30, [sp], #64
  212148:	ret
  21214c:	nop

0000000000212150 <__libc_csu_fini>:
  212150:	ret

Disassembly of section .init:

0000000000212154 <_init>:
  212154:	stp	x29, x30, [sp, #-16]!
  212158:	mov	x29, sp
  21215c:	bl	211620 <call_weak_fn>
  212160:	ldp	x29, x30, [sp], #16
  212164:	ret

Disassembly of section .fini:

0000000000212168 <_fini>:
  212168:	stp	x29, x30, [sp, #-16]!
  21216c:	mov	x29, sp
  212170:	ldp	x29, x30, [sp], #16
  212174:	ret

Disassembly of section .plt:

0000000000212180 <__libc_start_main@plt-0x20>:
  212180:	stp	x16, x30, [sp, #-16]!
  212184:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212188:	ldr	x17, [x16, #1448]
  21218c:	add	x16, x16, #0x5a8
  212190:	br	x17
  212194:	nop
  212198:	nop
  21219c:	nop

00000000002121a0 <__libc_start_main@plt>:
  2121a0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2121a4:	ldr	x17, [x16, #1456]
  2121a8:	add	x16, x16, #0x5b0
  2121ac:	br	x17

00000000002121b0 <abort@plt>:
  2121b0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2121b4:	ldr	x17, [x16, #1464]
  2121b8:	add	x16, x16, #0x5b8
  2121bc:	br	x17

00000000002121c0 <__gmon_start__@plt>:
  2121c0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2121c4:	ldr	x17, [x16, #1472]
  2121c8:	add	x16, x16, #0x5c0
  2121cc:	br	x17

00000000002121d0 <ask_password_agent_close@plt>:
  2121d0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2121d4:	ldr	x17, [x16, #1480]
  2121d8:	add	x16, x16, #0x5c8
  2121dc:	br	x17

00000000002121e0 <polkit_agent_close@plt>:
  2121e0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2121e4:	ldr	x17, [x16, #1488]
  2121e8:	add	x16, x16, #0x5d0
  2121ec:	br	x17

00000000002121f0 <pager_close@plt>:
  2121f0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2121f4:	ldr	x17, [x16, #1496]
  2121f8:	add	x16, x16, #0x5d8
  2121fc:	br	x17

0000000000212200 <mac_selinux_finish@plt>:
  212200:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212204:	ldr	x17, [x16, #1504]
  212208:	add	x16, x16, #0x5e0
  21220c:	br	x17

0000000000212210 <log_setup_service@plt>:
  212210:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212214:	ldr	x17, [x16, #1512]
  212218:	add	x16, x16, #0x5e8
  21221c:	br	x17

0000000000212220 <umask@plt>:
  212220:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212224:	ldr	x17, [x16, #1520]
  212228:	add	x16, x16, #0x5f0
  21222c:	br	x17

0000000000212230 <conf_files_list_strv@plt>:
  212230:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212234:	ldr	x17, [x16, #1528]
  212238:	add	x16, x16, #0x5f8
  21223c:	br	x17

0000000000212240 <pager_open@plt>:
  212240:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212244:	ldr	x17, [x16, #1536]
  212248:	add	x16, x16, #0x600
  21224c:	br	x17

0000000000212250 <cat_files@plt>:
  212250:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212254:	ldr	x17, [x16, #1544]
  212258:	add	x16, x16, #0x608
  21225c:	br	x17

0000000000212260 <log_get_max_level_realm@plt>:
  212260:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212264:	ldr	x17, [x16, #1552]
  212268:	add	x16, x16, #0x610
  21226c:	br	x17

0000000000212270 <log_internal_realm@plt>:
  212270:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212274:	ldr	x17, [x16, #1560]
  212278:	add	x16, x16, #0x618
  21227c:	br	x17

0000000000212280 <getopt_long@plt>:
  212280:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212284:	ldr	x17, [x16, #1568]
  212288:	add	x16, x16, #0x620
  21228c:	br	x17

0000000000212290 <version@plt>:
  212290:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212294:	ldr	x17, [x16, #1576]
  212298:	add	x16, x16, #0x628
  21229c:	br	x17

00000000002122a0 <log_assert_failed_realm@plt>:
  2122a0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2122a4:	ldr	x17, [x16, #1584]
  2122a8:	add	x16, x16, #0x630
  2122ac:	br	x17

00000000002122b0 <log_assert_failed_unreachable_realm@plt>:
  2122b0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2122b4:	ldr	x17, [x16, #1592]
  2122b8:	add	x16, x16, #0x638
  2122bc:	br	x17

00000000002122c0 <search_and_fopen@plt>:
  2122c0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2122c4:	ldr	x17, [x16, #1600]
  2122c8:	add	x16, x16, #0x640
  2122cc:	br	x17

00000000002122d0 <strstrip@plt>:
  2122d0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2122d4:	ldr	x17, [x16, #1608]
  2122d8:	add	x16, x16, #0x648
  2122dc:	br	x17

00000000002122e0 <strv_free@plt>:
  2122e0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2122e4:	ldr	x17, [x16, #1616]
  2122e8:	add	x16, x16, #0x650
  2122ec:	br	x17

00000000002122f0 <write_string_file_ts@plt>:
  2122f0:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  2122f4:	ldr	x17, [x16, #1624]
  2122f8:	add	x16, x16, #0x658
  2122fc:	br	x17

0000000000212300 <terminal_urlify_man@plt>:
  212300:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212304:	ldr	x17, [x16, #1632]
  212308:	add	x16, x16, #0x660
  21230c:	br	x17

0000000000212310 <printf@plt>:
  212310:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212314:	ldr	x17, [x16, #1640]
  212318:	add	x16, x16, #0x668
  21231c:	br	x17

0000000000212320 <log_oom_internal@plt>:
  212320:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212324:	ldr	x17, [x16, #1648]
  212328:	add	x16, x16, #0x670
  21232c:	br	x17

0000000000212330 <free@plt>:
  212330:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212334:	ldr	x17, [x16, #1656]
  212338:	add	x16, x16, #0x678
  21233c:	br	x17

0000000000212340 <safe_fclose@plt>:
  212340:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212344:	ldr	x17, [x16, #1664]
  212348:	add	x16, x16, #0x680
  21234c:	br	x17

0000000000212350 <read_line_full@plt>:
  212350:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212354:	ldr	x17, [x16, #1672]
  212358:	add	x16, x16, #0x688
  21235c:	br	x17

0000000000212360 <strdup@plt>:
  212360:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212364:	ldr	x17, [x16, #1680]
  212368:	add	x16, x16, #0x690
  21236c:	br	x17

0000000000212370 <strchrnul@plt>:
  212370:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212374:	ldr	x17, [x16, #1688]
  212378:	add	x16, x16, #0x698
  21237c:	br	x17

0000000000212380 <filename_is_valid@plt>:
  212380:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212384:	ldr	x17, [x16, #1696]
  212388:	add	x16, x16, #0x6a0
  21238c:	br	x17

0000000000212390 <path_join_internal@plt>:
  212390:	adrp	x16, 222000 <path_join_internal@plt+0xfc70>
  212394:	ldr	x17, [x16, #1704]
  212398:	add	x16, x16, #0x6a8
  21239c:	br	x17
