
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scsi_id_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004018a8 <_init>:
  4018a8:	stp	x29, x30, [sp, #-16]!
  4018ac:	mov	x29, sp
  4018b0:	bl	401cf0 <call_weak_fn>
  4018b4:	ldp	x29, x30, [sp], #16
  4018b8:	ret

Disassembly of section .plt:

00000000004018c0 <.plt>:
  4018c0:	stp	x16, x30, [sp, #-16]!
  4018c4:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4018c8:	ldr	x17, [x16, #3584]
  4018cc:	add	x16, x16, #0xe00
  4018d0:	br	x17
  4018d4:	nop
  4018d8:	nop
  4018dc:	nop

00000000004018e0 <safe_fclose@plt>:
  4018e0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4018e4:	ldr	x17, [x16, #3592]
  4018e8:	add	x16, x16, #0xe08
  4018ec:	br	x17

00000000004018f0 <strscpy@plt>:
  4018f0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4018f4:	ldr	x17, [x16, #3600]
  4018f8:	add	x16, x16, #0xe10
  4018fc:	br	x17

0000000000401900 <nanosleep@plt>:
  401900:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401904:	ldr	x17, [x16, #3608]
  401908:	add	x16, x16, #0xe18
  40190c:	br	x17

0000000000401910 <fgets@plt>:
  401910:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401914:	ldr	x17, [x16, #3616]
  401918:	add	x16, x16, #0xe20
  40191c:	br	x17

0000000000401920 <__libc_start_main@plt>:
  401920:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401924:	ldr	x17, [x16, #3624]
  401928:	add	x16, x16, #0xe28
  40192c:	br	x17

0000000000401930 <log_close@plt>:
  401930:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401934:	ldr	x17, [x16, #3632]
  401938:	add	x16, x16, #0xe30
  40193c:	br	x17

0000000000401940 <__gmon_start__@plt>:
  401940:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401944:	ldr	x17, [x16, #3640]
  401948:	add	x16, x16, #0xe38
  40194c:	br	x17

0000000000401950 <strsep@plt>:
  401950:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401954:	ldr	x17, [x16, #3648]
  401958:	add	x16, x16, #0xe40
  40195c:	br	x17

0000000000401960 <atoi@plt>:
  401960:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401964:	ldr	x17, [x16, #3656]
  401968:	add	x16, x16, #0xe48
  40196c:	br	x17

0000000000401970 <log_parse_environment_realm@plt>:
  401970:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401974:	ldr	x17, [x16, #3664]
  401978:	add	x16, x16, #0xe50
  40197c:	br	x17

0000000000401980 <strscpyl@plt>:
  401980:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401984:	ldr	x17, [x16, #3672]
  401988:	add	x16, x16, #0xe58
  40198c:	br	x17

0000000000401990 <strnlen@plt>:
  401990:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401994:	ldr	x17, [x16, #3680]
  401998:	add	x16, x16, #0xe60
  40199c:	br	x17

00000000004019a0 <sd_device_new_from_subsystem_sysname@plt>:
  4019a0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4019a4:	ldr	x17, [x16, #3688]
  4019a8:	add	x16, x16, #0xe68
  4019ac:	br	x17

00000000004019b0 <memcpy@plt>:
  4019b0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4019b4:	ldr	x17, [x16, #3696]
  4019b8:	add	x16, x16, #0xe70
  4019bc:	br	x17

00000000004019c0 <__ctype_b_loc@plt>:
  4019c0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4019c4:	ldr	x17, [x16, #3704]
  4019c8:	add	x16, x16, #0xe78
  4019cc:	br	x17

00000000004019d0 <strncpy@plt>:
  4019d0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4019d4:	ldr	x17, [x16, #3712]
  4019d8:	add	x16, x16, #0xe80
  4019dc:	br	x17

00000000004019e0 <exit@plt>:
  4019e0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4019e4:	ldr	x17, [x16, #3720]
  4019e8:	add	x16, x16, #0xe88
  4019ec:	br	x17

00000000004019f0 <log_assert_failed_realm@plt>:
  4019f0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  4019f4:	ldr	x17, [x16, #3728]
  4019f8:	add	x16, x16, #0xe90
  4019fc:	br	x17

0000000000401a00 <utf8_encoded_valid_unichar@plt>:
  401a00:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a04:	ldr	x17, [x16, #3736]
  401a08:	add	x16, x16, #0xe98
  401a0c:	br	x17

0000000000401a10 <getopt_long@plt>:
  401a10:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a14:	ldr	x17, [x16, #3744]
  401a18:	add	x16, x16, #0xea0
  401a1c:	br	x17

0000000000401a20 <encode_devnode_name@plt>:
  401a20:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a24:	ldr	x17, [x16, #3752]
  401a28:	add	x16, x16, #0xea8
  401a2c:	br	x17

0000000000401a30 <log_assert_failed_unreachable_realm@plt>:
  401a30:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a34:	ldr	x17, [x16, #3760]
  401a38:	add	x16, x16, #0xeb0
  401a3c:	br	x17

0000000000401a40 <strncmp@plt>:
  401a40:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a44:	ldr	x17, [x16, #3768]
  401a48:	add	x16, x16, #0xeb8
  401a4c:	br	x17

0000000000401a50 <abort@plt>:
  401a50:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a54:	ldr	x17, [x16, #3776]
  401a58:	add	x16, x16, #0xec0
  401a5c:	br	x17

0000000000401a60 <strspn@plt>:
  401a60:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a64:	ldr	x17, [x16, #3784]
  401a68:	add	x16, x16, #0xec8
  401a6c:	br	x17

0000000000401a70 <__fxstat64@plt>:
  401a70:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a74:	ldr	x17, [x16, #3792]
  401a78:	add	x16, x16, #0xed0
  401a7c:	br	x17

0000000000401a80 <__errno_location@plt>:
  401a80:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a84:	ldr	x17, [x16, #3800]
  401a88:	add	x16, x16, #0xed8
  401a8c:	br	x17

0000000000401a90 <log_set_target@plt>:
  401a90:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401a94:	ldr	x17, [x16, #3808]
  401a98:	add	x16, x16, #0xee0
  401a9c:	br	x17

0000000000401aa0 <__stack_chk_fail@plt>:
  401aa0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401aa4:	ldr	x17, [x16, #3816]
  401aa8:	add	x16, x16, #0xee8
  401aac:	br	x17

0000000000401ab0 <initialize_srand@plt>:
  401ab0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401ab4:	ldr	x17, [x16, #3824]
  401ab8:	add	x16, x16, #0xef0
  401abc:	br	x17

0000000000401ac0 <rand@plt>:
  401ac0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401ac4:	ldr	x17, [x16, #3832]
  401ac8:	add	x16, x16, #0xef8
  401acc:	br	x17

0000000000401ad0 <malloc@plt>:
  401ad0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401ad4:	ldr	x17, [x16, #3840]
  401ad8:	add	x16, x16, #0xf00
  401adc:	br	x17

0000000000401ae0 <udev_parse_config_full@plt>:
  401ae0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401ae4:	ldr	x17, [x16, #3848]
  401ae8:	add	x16, x16, #0xf08
  401aec:	br	x17

0000000000401af0 <log_internal_realm@plt>:
  401af0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401af4:	ldr	x17, [x16, #3856]
  401af8:	add	x16, x16, #0xf10
  401afc:	br	x17

0000000000401b00 <ioctl@plt>:
  401b00:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b04:	ldr	x17, [x16, #3864]
  401b08:	add	x16, x16, #0xf18
  401b0c:	br	x17

0000000000401b10 <gnu_dev_major@plt>:
  401b10:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b14:	ldr	x17, [x16, #3872]
  401b18:	add	x16, x16, #0xf20
  401b1c:	br	x17

0000000000401b20 <strtoul@plt>:
  401b20:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b24:	ldr	x17, [x16, #3880]
  401b28:	add	x16, x16, #0xf28
  401b2c:	br	x17

0000000000401b30 <strcmp@plt>:
  401b30:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b34:	ldr	x17, [x16, #3888]
  401b38:	add	x16, x16, #0xf30
  401b3c:	br	x17

0000000000401b40 <calloc@plt>:
  401b40:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b44:	ldr	x17, [x16, #3896]
  401b48:	add	x16, x16, #0xf38
  401b4c:	br	x17

0000000000401b50 <whitelisted_char_for_devnode@plt>:
  401b50:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b54:	ldr	x17, [x16, #3904]
  401b58:	add	x16, x16, #0xf40
  401b5c:	br	x17

0000000000401b60 <strchr@plt>:
  401b60:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b64:	ldr	x17, [x16, #3912]
  401b68:	add	x16, x16, #0xf48
  401b6c:	br	x17

0000000000401b70 <log_set_max_level_realm@plt>:
  401b70:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b74:	ldr	x17, [x16, #3920]
  401b78:	add	x16, x16, #0xf50
  401b7c:	br	x17

0000000000401b80 <sd_device_get_sysattr_value@plt>:
  401b80:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b84:	ldr	x17, [x16, #3928]
  401b88:	add	x16, x16, #0xf58
  401b8c:	br	x17

0000000000401b90 <free@plt>:
  401b90:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401b94:	ldr	x17, [x16, #3936]
  401b98:	add	x16, x16, #0xf60
  401b9c:	br	x17

0000000000401ba0 <puts@plt>:
  401ba0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401ba4:	ldr	x17, [x16, #3944]
  401ba8:	add	x16, x16, #0xf68
  401bac:	br	x17

0000000000401bb0 <gnu_dev_minor@plt>:
  401bb0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401bb4:	ldr	x17, [x16, #3952]
  401bb8:	add	x16, x16, #0xf70
  401bbc:	br	x17

0000000000401bc0 <sprintf@plt>:
  401bc0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401bc4:	ldr	x17, [x16, #3960]
  401bc8:	add	x16, x16, #0xf78
  401bcc:	br	x17

0000000000401bd0 <sd_device_unref@plt>:
  401bd0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401bd4:	ldr	x17, [x16, #3968]
  401bd8:	add	x16, x16, #0xf80
  401bdc:	br	x17

0000000000401be0 <printf@plt>:
  401be0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401be4:	ldr	x17, [x16, #3976]
  401be8:	add	x16, x16, #0xf88
  401bec:	br	x17

0000000000401bf0 <strcpy@plt>:
  401bf0:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401bf4:	ldr	x17, [x16, #3984]
  401bf8:	add	x16, x16, #0xf90
  401bfc:	br	x17

0000000000401c00 <close@plt>:
  401c00:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c04:	ldr	x17, [x16, #3992]
  401c08:	add	x16, x16, #0xf98
  401c0c:	br	x17

0000000000401c10 <open64@plt>:
  401c10:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c14:	ldr	x17, [x16, #4000]
  401c18:	add	x16, x16, #0xfa0
  401c1c:	br	x17

0000000000401c20 <strlen@plt>:
  401c20:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c24:	ldr	x17, [x16, #4008]
  401c28:	add	x16, x16, #0xfa8
  401c2c:	br	x17

0000000000401c30 <strcasecmp@plt>:
  401c30:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c34:	ldr	x17, [x16, #4016]
  401c38:	add	x16, x16, #0xfb0
  401c3c:	br	x17

0000000000401c40 <sd_device_get_syspath@plt>:
  401c40:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c44:	ldr	x17, [x16, #4024]
  401c48:	add	x16, x16, #0xfb8
  401c4c:	br	x17

0000000000401c50 <fopen64@plt>:
  401c50:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c54:	ldr	x17, [x16, #4032]
  401c58:	add	x16, x16, #0xfc0
  401c5c:	br	x17

0000000000401c60 <log_open@plt>:
  401c60:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c64:	ldr	x17, [x16, #4040]
  401c68:	add	x16, x16, #0xfc8
  401c6c:	br	x17

0000000000401c70 <log_oom_internal@plt>:
  401c70:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c74:	ldr	x17, [x16, #4048]
  401c78:	add	x16, x16, #0xfd0
  401c7c:	br	x17

0000000000401c80 <memset@plt>:
  401c80:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c84:	ldr	x17, [x16, #4056]
  401c88:	add	x16, x16, #0xfd8
  401c8c:	br	x17

0000000000401c90 <log_get_max_level_realm@plt>:
  401c90:	adrp	x16, 418000 <__FRAME_END__+0xfbcc>
  401c94:	ldr	x17, [x16, #4064]
  401c98:	add	x16, x16, #0xfe0
  401c9c:	br	x17

Disassembly of section .text:

0000000000401ca0 <_start>:
  401ca0:	mov	x29, #0x0                   	// #0
  401ca4:	mov	x30, #0x0                   	// #0
  401ca8:	mov	x5, x0
  401cac:	ldr	x1, [sp]
  401cb0:	add	x2, sp, #0x8
  401cb4:	mov	x6, sp
  401cb8:	movz	x0, #0x0, lsl #48
  401cbc:	movk	x0, #0x0, lsl #32
  401cc0:	movk	x0, #0x40, lsl #16
  401cc4:	movk	x0, #0x357c
  401cc8:	movz	x3, #0x0, lsl #48
  401ccc:	movk	x3, #0x0, lsl #32
  401cd0:	movk	x3, #0x40, lsl #16
  401cd4:	movk	x3, #0x6e08
  401cd8:	movz	x4, #0x0, lsl #48
  401cdc:	movk	x4, #0x0, lsl #32
  401ce0:	movk	x4, #0x40, lsl #16
  401ce4:	movk	x4, #0x6e88
  401ce8:	bl	401920 <__libc_start_main@plt>
  401cec:	bl	401a50 <abort@plt>

0000000000401cf0 <call_weak_fn>:
  401cf0:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  401cf4:	ldr	x0, [x0, #4080]
  401cf8:	cbz	x0, 401d00 <call_weak_fn+0x10>
  401cfc:	b	401940 <__gmon_start__@plt>
  401d00:	ret

0000000000401d04 <deregister_tm_clones>:
  401d04:	stp	x29, x30, [sp, #-32]!
  401d08:	mov	x29, sp
  401d0c:	adrp	x0, 419000 <config_file>
  401d10:	add	x0, x0, #0x218
  401d14:	str	x0, [sp, #24]
  401d18:	ldr	x0, [sp, #24]
  401d1c:	str	x0, [sp, #24]
  401d20:	ldr	x1, [sp, #24]
  401d24:	adrp	x0, 419000 <config_file>
  401d28:	add	x0, x0, #0x218
  401d2c:	cmp	x1, x0
  401d30:	b.eq	401d6c <deregister_tm_clones+0x68>  // b.none
  401d34:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  401d38:	add	x0, x0, #0xeb0
  401d3c:	ldr	x0, [x0]
  401d40:	str	x0, [sp, #16]
  401d44:	ldr	x0, [sp, #16]
  401d48:	str	x0, [sp, #16]
  401d4c:	ldr	x0, [sp, #16]
  401d50:	cmp	x0, #0x0
  401d54:	b.eq	401d70 <deregister_tm_clones+0x6c>  // b.none
  401d58:	ldr	x1, [sp, #16]
  401d5c:	adrp	x0, 419000 <config_file>
  401d60:	add	x0, x0, #0x218
  401d64:	blr	x1
  401d68:	b	401d70 <deregister_tm_clones+0x6c>
  401d6c:	nop
  401d70:	ldp	x29, x30, [sp], #32
  401d74:	ret

0000000000401d78 <register_tm_clones>:
  401d78:	stp	x29, x30, [sp, #-48]!
  401d7c:	mov	x29, sp
  401d80:	adrp	x0, 419000 <config_file>
  401d84:	add	x0, x0, #0x218
  401d88:	str	x0, [sp, #40]
  401d8c:	ldr	x0, [sp, #40]
  401d90:	str	x0, [sp, #40]
  401d94:	ldr	x1, [sp, #40]
  401d98:	adrp	x0, 419000 <config_file>
  401d9c:	add	x0, x0, #0x218
  401da0:	sub	x0, x1, x0
  401da4:	asr	x0, x0, #3
  401da8:	lsr	x1, x0, #63
  401dac:	add	x0, x1, x0
  401db0:	asr	x0, x0, #1
  401db4:	str	x0, [sp, #32]
  401db8:	ldr	x0, [sp, #32]
  401dbc:	cmp	x0, #0x0
  401dc0:	b.eq	401e00 <register_tm_clones+0x88>  // b.none
  401dc4:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  401dc8:	add	x0, x0, #0xeb8
  401dcc:	ldr	x0, [x0]
  401dd0:	str	x0, [sp, #24]
  401dd4:	ldr	x0, [sp, #24]
  401dd8:	str	x0, [sp, #24]
  401ddc:	ldr	x0, [sp, #24]
  401de0:	cmp	x0, #0x0
  401de4:	b.eq	401e04 <register_tm_clones+0x8c>  // b.none
  401de8:	ldr	x2, [sp, #24]
  401dec:	ldr	x1, [sp, #32]
  401df0:	adrp	x0, 419000 <config_file>
  401df4:	add	x0, x0, #0x218
  401df8:	blr	x2
  401dfc:	b	401e04 <register_tm_clones+0x8c>
  401e00:	nop
  401e04:	ldp	x29, x30, [sp], #48
  401e08:	ret

0000000000401e0c <__do_global_dtors_aux>:
  401e0c:	stp	x29, x30, [sp, #-16]!
  401e10:	mov	x29, sp
  401e14:	adrp	x0, 419000 <config_file>
  401e18:	add	x0, x0, #0x230
  401e1c:	ldrb	w0, [x0]
  401e20:	and	x0, x0, #0xff
  401e24:	cmp	x0, #0x0
  401e28:	b.ne	401e44 <__do_global_dtors_aux+0x38>  // b.any
  401e2c:	bl	401d04 <deregister_tm_clones>
  401e30:	adrp	x0, 419000 <config_file>
  401e34:	add	x0, x0, #0x230
  401e38:	mov	w1, #0x1                   	// #1
  401e3c:	strb	w1, [x0]
  401e40:	b	401e48 <__do_global_dtors_aux+0x3c>
  401e44:	nop
  401e48:	ldp	x29, x30, [sp], #16
  401e4c:	ret

0000000000401e50 <frame_dummy>:
  401e50:	stp	x29, x30, [sp, #-16]!
  401e54:	mov	x29, sp
  401e58:	bl	401d78 <register_tm_clones>
  401e5c:	nop
  401e60:	ldp	x29, x30, [sp], #16
  401e64:	ret

0000000000401e68 <freep>:
  401e68:	stp	x29, x30, [sp, #-32]!
  401e6c:	mov	x29, sp
  401e70:	str	x0, [sp, #24]
  401e74:	ldr	x0, [sp, #24]
  401e78:	ldr	x0, [x0]
  401e7c:	bl	401b90 <free@plt>
  401e80:	nop
  401e84:	ldp	x29, x30, [sp], #32
  401e88:	ret

0000000000401e8c <fclosep>:
  401e8c:	stp	x29, x30, [sp, #-32]!
  401e90:	mov	x29, sp
  401e94:	str	x0, [sp, #24]
  401e98:	ldr	x0, [sp, #24]
  401e9c:	ldr	x0, [x0]
  401ea0:	bl	4018e0 <safe_fclose@plt>
  401ea4:	nop
  401ea8:	ldp	x29, x30, [sp], #32
  401eac:	ret

0000000000401eb0 <startswith>:
  401eb0:	stp	x29, x30, [sp, #-48]!
  401eb4:	mov	x29, sp
  401eb8:	str	x0, [sp, #24]
  401ebc:	str	x1, [sp, #16]
  401ec0:	ldr	x0, [sp, #16]
  401ec4:	bl	401c20 <strlen@plt>
  401ec8:	str	x0, [sp, #40]
  401ecc:	ldr	x2, [sp, #40]
  401ed0:	ldr	x1, [sp, #16]
  401ed4:	ldr	x0, [sp, #24]
  401ed8:	bl	401a40 <strncmp@plt>
  401edc:	cmp	w0, #0x0
  401ee0:	b.ne	401ef4 <startswith+0x44>  // b.any
  401ee4:	ldr	x1, [sp, #24]
  401ee8:	ldr	x0, [sp, #40]
  401eec:	add	x0, x1, x0
  401ef0:	b	401ef8 <startswith+0x48>
  401ef4:	mov	x0, #0x0                   	// #0
  401ef8:	ldp	x29, x30, [sp], #48
  401efc:	ret

0000000000401f00 <udev_parse_config>:
  401f00:	stp	x29, x30, [sp, #-16]!
  401f04:	mov	x29, sp
  401f08:	mov	x3, #0x0                   	// #0
  401f0c:	mov	x2, #0x0                   	// #0
  401f10:	mov	x1, #0x0                   	// #0
  401f14:	mov	x0, #0x0                   	// #0
  401f18:	bl	401ae0 <udev_parse_config_full@plt>
  401f1c:	ldp	x29, x30, [sp], #16
  401f20:	ret

0000000000401f24 <set_type>:
  401f24:	stp	x29, x30, [sp, #-80]!
  401f28:	mov	x29, sp
  401f2c:	str	x0, [sp, #40]
  401f30:	str	x1, [sp, #32]
  401f34:	str	x2, [sp, #24]
  401f38:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  401f3c:	add	x0, x0, #0xbb8
  401f40:	ldr	x1, [x0]
  401f44:	str	x1, [sp, #72]
  401f48:	mov	x1, #0x0                   	// #0
  401f4c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  401f50:	add	x0, x0, #0xf40
  401f54:	str	x0, [sp, #64]
  401f58:	add	x0, sp, #0x38
  401f5c:	mov	w2, #0x0                   	// #0
  401f60:	mov	x1, x0
  401f64:	ldr	x0, [sp, #40]
  401f68:	bl	401b20 <strtoul@plt>
  401f6c:	str	w0, [sp, #52]
  401f70:	ldr	x0, [sp, #56]
  401f74:	ldr	x1, [sp, #40]
  401f78:	cmp	x1, x0
  401f7c:	b.eq	402084 <set_type+0x160>  // b.none
  401f80:	ldr	w0, [sp, #52]
  401f84:	cmp	w0, #0xf
  401f88:	b.eq	402074 <set_type+0x150>  // b.none
  401f8c:	ldr	w0, [sp, #52]
  401f90:	cmp	w0, #0xf
  401f94:	b.gt	40208c <set_type+0x168>
  401f98:	ldr	w0, [sp, #52]
  401f9c:	cmp	w0, #0xe
  401fa0:	b.eq	402064 <set_type+0x140>  // b.none
  401fa4:	ldr	w0, [sp, #52]
  401fa8:	cmp	w0, #0xe
  401fac:	b.gt	40208c <set_type+0x168>
  401fb0:	ldr	w0, [sp, #52]
  401fb4:	cmp	w0, #0x7
  401fb8:	b.eq	402054 <set_type+0x130>  // b.none
  401fbc:	ldr	w0, [sp, #52]
  401fc0:	cmp	w0, #0x7
  401fc4:	b.gt	40208c <set_type+0x168>
  401fc8:	ldr	w0, [sp, #52]
  401fcc:	cmp	w0, #0x5
  401fd0:	b.eq	402044 <set_type+0x120>  // b.none
  401fd4:	ldr	w0, [sp, #52]
  401fd8:	cmp	w0, #0x5
  401fdc:	b.gt	40208c <set_type+0x168>
  401fe0:	ldr	w0, [sp, #52]
  401fe4:	cmp	w0, #0x4
  401fe8:	b.eq	402034 <set_type+0x110>  // b.none
  401fec:	ldr	w0, [sp, #52]
  401ff0:	cmp	w0, #0x4
  401ff4:	b.gt	40208c <set_type+0x168>
  401ff8:	ldr	w0, [sp, #52]
  401ffc:	cmp	w0, #0x0
  402000:	b.eq	402014 <set_type+0xf0>  // b.none
  402004:	ldr	w0, [sp, #52]
  402008:	cmp	w0, #0x1
  40200c:	b.eq	402024 <set_type+0x100>  // b.none
  402010:	b	40208c <set_type+0x168>
  402014:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402018:	add	x0, x0, #0xf48
  40201c:	str	x0, [sp, #64]
  402020:	b	402090 <set_type+0x16c>
  402024:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402028:	add	x0, x0, #0xf50
  40202c:	str	x0, [sp, #64]
  402030:	b	402090 <set_type+0x16c>
  402034:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402038:	add	x0, x0, #0xf58
  40203c:	str	x0, [sp, #64]
  402040:	b	402090 <set_type+0x16c>
  402044:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402048:	add	x0, x0, #0xf60
  40204c:	str	x0, [sp, #64]
  402050:	b	402090 <set_type+0x16c>
  402054:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402058:	add	x0, x0, #0xf58
  40205c:	str	x0, [sp, #64]
  402060:	b	402090 <set_type+0x16c>
  402064:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402068:	add	x0, x0, #0xf48
  40206c:	str	x0, [sp, #64]
  402070:	b	402090 <set_type+0x16c>
  402074:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402078:	add	x0, x0, #0xf58
  40207c:	str	x0, [sp, #64]
  402080:	b	402090 <set_type+0x16c>
  402084:	nop
  402088:	b	402090 <set_type+0x16c>
  40208c:	nop
  402090:	ldr	x2, [sp, #64]
  402094:	ldr	x1, [sp, #24]
  402098:	ldr	x0, [sp, #32]
  40209c:	bl	4018f0 <strscpy@plt>
  4020a0:	nop
  4020a4:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  4020a8:	add	x0, x0, #0xbb8
  4020ac:	ldr	x1, [sp, #72]
  4020b0:	ldr	x0, [x0]
  4020b4:	eor	x0, x1, x0
  4020b8:	cmp	x0, #0x0
  4020bc:	b.eq	4020c4 <set_type+0x1a0>  // b.none
  4020c0:	bl	401aa0 <__stack_chk_fail@plt>
  4020c4:	ldp	x29, x30, [sp], #80
  4020c8:	ret

00000000004020cc <get_value>:
  4020cc:	stp	x29, x30, [sp, #-48]!
  4020d0:	mov	x29, sp
  4020d4:	str	x0, [sp, #24]
  4020d8:	ldr	x0, [sp, #24]
  4020dc:	ldr	x0, [x0]
  4020e0:	ldrb	w0, [x0]
  4020e4:	cmp	w0, #0x22
  4020e8:	b.ne	402114 <get_value+0x48>  // b.any
  4020ec:	ldr	x0, [sp, #24]
  4020f0:	ldr	x0, [x0]
  4020f4:	add	x1, x0, #0x1
  4020f8:	ldr	x0, [sp, #24]
  4020fc:	str	x1, [x0]
  402100:	adrp	x0, 419000 <config_file>
  402104:	add	x0, x0, #0x208
  402108:	ldr	x0, [x0]
  40210c:	str	x0, [sp, #32]
  402110:	b	402124 <get_value+0x58>
  402114:	adrp	x0, 419000 <config_file>
  402118:	add	x0, x0, #0x210
  40211c:	ldr	x0, [x0]
  402120:	str	x0, [sp, #32]
  402124:	ldr	x1, [sp, #32]
  402128:	ldr	x0, [sp, #24]
  40212c:	bl	401950 <strsep@plt>
  402130:	str	x0, [sp, #40]
  402134:	ldr	x0, [sp, #40]
  402138:	cmp	x0, #0x0
  40213c:	b.eq	402184 <get_value+0xb8>  // b.none
  402140:	adrp	x0, 419000 <config_file>
  402144:	add	x0, x0, #0x208
  402148:	ldr	x0, [x0]
  40214c:	ldr	x1, [sp, #32]
  402150:	cmp	x1, x0
  402154:	b.ne	402184 <get_value+0xb8>  // b.any
  402158:	ldr	x0, [sp, #24]
  40215c:	ldr	x0, [x0]
  402160:	add	x1, x0, #0x1
  402164:	ldr	x0, [sp, #24]
  402168:	str	x1, [x0]
  40216c:	b	402184 <get_value+0xb8>
  402170:	ldr	x0, [sp, #24]
  402174:	ldr	x0, [x0]
  402178:	add	x1, x0, #0x1
  40217c:	ldr	x0, [sp, #24]
  402180:	str	x1, [x0]
  402184:	bl	4019c0 <__ctype_b_loc@plt>
  402188:	ldr	x1, [x0]
  40218c:	ldr	x0, [sp, #24]
  402190:	ldr	x0, [x0]
  402194:	ldrb	w0, [x0]
  402198:	and	x0, x0, #0xff
  40219c:	lsl	x0, x0, #1
  4021a0:	add	x0, x1, x0
  4021a4:	ldrh	w0, [x0]
  4021a8:	and	w0, w0, #0x2000
  4021ac:	cmp	w0, #0x0
  4021b0:	b.ne	402170 <get_value+0xa4>  // b.any
  4021b4:	ldr	x0, [sp, #40]
  4021b8:	ldp	x29, x30, [sp], #48
  4021bc:	ret

00000000004021c0 <argc_count>:
  4021c0:	sub	sp, sp, #0x20
  4021c4:	str	x0, [sp, #8]
  4021c8:	str	wzr, [sp, #28]
  4021cc:	b	4021f4 <argc_count+0x34>
  4021d0:	ldr	x0, [sp, #8]
  4021d4:	add	x1, x0, #0x1
  4021d8:	str	x1, [sp, #8]
  4021dc:	ldrb	w0, [x0]
  4021e0:	cmp	w0, #0x20
  4021e4:	b.ne	4021f4 <argc_count+0x34>  // b.any
  4021e8:	ldr	w0, [sp, #28]
  4021ec:	add	w0, w0, #0x1
  4021f0:	str	w0, [sp, #28]
  4021f4:	ldr	x0, [sp, #8]
  4021f8:	ldrb	w0, [x0]
  4021fc:	cmp	w0, #0x0
  402200:	b.ne	4021d0 <argc_count+0x10>  // b.any
  402204:	ldr	w0, [sp, #28]
  402208:	add	sp, sp, #0x20
  40220c:	ret

0000000000402210 <get_file_options>:
  402210:	stp	x29, x30, [sp, #-176]!
  402214:	mov	x29, sp
  402218:	str	x19, [sp, #16]
  40221c:	str	x0, [sp, #56]
  402220:	str	x1, [sp, #48]
  402224:	str	x2, [sp, #40]
  402228:	str	x3, [sp, #32]
  40222c:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  402230:	add	x0, x0, #0xbb8
  402234:	ldr	x1, [x0]
  402238:	str	x1, [sp, #168]
  40223c:	mov	x1, #0x0                   	// #0
  402240:	str	xzr, [sp, #112]
  402244:	str	wzr, [sp, #72]
  402248:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  40224c:	add	x1, x0, #0xf68
  402250:	adrp	x0, 419000 <config_file>
  402254:	add	x0, x0, #0x0
  402258:	bl	401c50 <fopen64@plt>
  40225c:	str	x0, [sp, #120]
  402260:	ldr	x0, [sp, #120]
  402264:	cmp	x0, #0x0
  402268:	b.ne	402314 <get_file_options+0x104>  // b.any
  40226c:	bl	401a80 <__errno_location@plt>
  402270:	ldr	w0, [x0]
  402274:	cmp	w0, #0x2
  402278:	b.ne	402284 <get_file_options+0x74>  // b.any
  40227c:	mov	w19, #0x1                   	// #1
  402280:	b	402870 <get_file_options+0x660>
  402284:	mov	w0, #0x3                   	// #3
  402288:	str	w0, [sp, #100]
  40228c:	bl	401a80 <__errno_location@plt>
  402290:	ldr	w0, [x0]
  402294:	str	w0, [sp, #104]
  402298:	mov	w0, #0x1                   	// #1
  40229c:	str	w0, [sp, #108]
  4022a0:	ldr	w0, [sp, #108]
  4022a4:	bl	401c90 <log_get_max_level_realm@plt>
  4022a8:	mov	w1, w0
  4022ac:	ldr	w0, [sp, #100]
  4022b0:	and	w0, w0, #0x7
  4022b4:	cmp	w1, w0
  4022b8:	b.lt	402304 <get_file_options+0xf4>  // b.tstop
  4022bc:	ldr	w0, [sp, #108]
  4022c0:	lsl	w1, w0, #10
  4022c4:	ldr	w0, [sp, #100]
  4022c8:	orr	w7, w1, w0
  4022cc:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4022d0:	add	x1, x0, #0xf73
  4022d4:	adrp	x0, 419000 <config_file>
  4022d8:	add	x6, x0, #0x0
  4022dc:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4022e0:	add	x5, x0, #0xf90
  4022e4:	adrp	x0, 407000 <_fini+0x160>
  4022e8:	add	x4, x0, #0x6a8
  4022ec:	mov	w3, #0xa3                  	// #163
  4022f0:	mov	x2, x1
  4022f4:	ldr	w1, [sp, #104]
  4022f8:	mov	w0, w7
  4022fc:	bl	401af0 <log_internal_realm@plt>
  402300:	b	40230c <get_file_options+0xfc>
  402304:	ldr	w0, [sp, #104]
  402308:	cmp	w0, #0x0
  40230c:	mov	w19, #0xffffffff            	// #-1
  402310:	b	402870 <get_file_options+0x660>
  402314:	mov	x0, #0x100                 	// #256
  402318:	bl	401ad0 <malloc@plt>
  40231c:	str	x0, [sp, #112]
  402320:	ldr	x0, [sp, #112]
  402324:	cmp	x0, #0x0
  402328:	b.ne	402350 <get_file_options+0x140>  // b.any
  40232c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402330:	add	x1, x0, #0xf73
  402334:	adrp	x0, 407000 <_fini+0x160>
  402338:	add	x3, x0, #0x6a8
  40233c:	mov	w2, #0xaf                  	// #175
  402340:	mov	w0, #0x1                   	// #1
  402344:	bl	401c70 <log_oom_internal@plt>
  402348:	mov	w19, w0
  40234c:	b	402870 <get_file_options+0x660>
  402350:	ldr	x0, [sp, #32]
  402354:	str	xzr, [x0]
  402358:	str	wzr, [sp, #64]
  40235c:	str	xzr, [sp, #160]
  402360:	ldr	x0, [sp, #160]
  402364:	str	x0, [sp, #152]
  402368:	ldr	x0, [sp, #152]
  40236c:	str	x0, [sp, #144]
  402370:	ldr	x0, [sp, #112]
  402374:	ldr	x1, [sp, #120]
  402378:	mov	x2, x1
  40237c:	mov	w1, #0x100                 	// #256
  402380:	bl	401910 <fgets@plt>
  402384:	str	x0, [sp, #128]
  402388:	ldr	x0, [sp, #128]
  40238c:	cmp	x0, #0x0
  402390:	b.eq	40273c <get_file_options+0x52c>  // b.none
  402394:	ldr	w0, [sp, #64]
  402398:	add	w0, w0, #0x1
  40239c:	str	w0, [sp, #64]
  4023a0:	ldr	x19, [sp, #128]
  4023a4:	ldr	x0, [sp, #112]
  4023a8:	bl	401c20 <strlen@plt>
  4023ac:	sub	x0, x0, #0x1
  4023b0:	add	x0, x19, x0
  4023b4:	ldrb	w0, [x0]
  4023b8:	cmp	w0, #0xa
  4023bc:	b.eq	40244c <get_file_options+0x23c>  // b.none
  4023c0:	mov	w0, #0x3                   	// #3
  4023c4:	str	w0, [sp, #88]
  4023c8:	str	wzr, [sp, #92]
  4023cc:	mov	w0, #0x1                   	// #1
  4023d0:	str	w0, [sp, #96]
  4023d4:	ldr	w0, [sp, #96]
  4023d8:	bl	401c90 <log_get_max_level_realm@plt>
  4023dc:	mov	w1, w0
  4023e0:	ldr	w0, [sp, #88]
  4023e4:	and	w0, w0, #0x7
  4023e8:	cmp	w1, w0
  4023ec:	b.lt	402434 <get_file_options+0x224>  // b.tstop
  4023f0:	ldr	w0, [sp, #96]
  4023f4:	lsl	w1, w0, #10
  4023f8:	ldr	w0, [sp, #88]
  4023fc:	orr	w7, w1, w0
  402400:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402404:	add	x1, x0, #0xf73
  402408:	ldr	w6, [sp, #64]
  40240c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402410:	add	x5, x0, #0xfa8
  402414:	adrp	x0, 407000 <_fini+0x160>
  402418:	add	x4, x0, #0x6a8
  40241c:	mov	w3, #0xbb                  	// #187
  402420:	mov	x2, x1
  402424:	ldr	w1, [sp, #92]
  402428:	mov	w0, w7
  40242c:	bl	401af0 <log_internal_realm@plt>
  402430:	b	402740 <get_file_options+0x530>
  402434:	ldr	w0, [sp, #92]
  402438:	cmp	w0, #0x0
  40243c:	b	402740 <get_file_options+0x530>
  402440:	ldr	x0, [sp, #128]
  402444:	add	x0, x0, #0x1
  402448:	str	x0, [sp, #128]
  40244c:	bl	4019c0 <__ctype_b_loc@plt>
  402450:	ldr	x1, [x0]
  402454:	ldr	x0, [sp, #128]
  402458:	ldrb	w0, [x0]
  40245c:	and	x0, x0, #0xff
  402460:	lsl	x0, x0, #1
  402464:	add	x0, x1, x0
  402468:	ldrh	w0, [x0]
  40246c:	and	w0, w0, #0x2000
  402470:	cmp	w0, #0x0
  402474:	b.ne	402440 <get_file_options+0x230>  // b.any
  402478:	ldr	x0, [sp, #128]
  40247c:	ldrb	w0, [x0]
  402480:	cmp	w0, #0x0
  402484:	b.eq	40272c <get_file_options+0x51c>  // b.none
  402488:	ldr	x0, [sp, #128]
  40248c:	ldrb	w0, [x0]
  402490:	cmp	w0, #0x23
  402494:	b.eq	402734 <get_file_options+0x524>  // b.none
  402498:	add	x2, sp, #0x80
  40249c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4024a0:	add	x1, x0, #0xfc8
  4024a4:	mov	x0, x2
  4024a8:	bl	401950 <strsep@plt>
  4024ac:	str	x0, [sp, #136]
  4024b0:	ldr	x0, [sp, #136]
  4024b4:	cmp	x0, #0x0
  4024b8:	b.eq	4025b0 <get_file_options+0x3a0>  // b.none
  4024bc:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4024c0:	add	x1, x0, #0xfd0
  4024c4:	ldr	x0, [sp, #136]
  4024c8:	bl	401c30 <strcasecmp@plt>
  4024cc:	cmp	w0, #0x0
  4024d0:	b.ne	4025b0 <get_file_options+0x3a0>  // b.any
  4024d4:	add	x0, sp, #0x80
  4024d8:	bl	4020cc <get_value>
  4024dc:	str	x0, [sp, #136]
  4024e0:	ldr	x0, [sp, #136]
  4024e4:	cmp	x0, #0x0
  4024e8:	b.ne	402510 <get_file_options+0x300>  // b.any
  4024ec:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4024f0:	add	x1, x0, #0xf73
  4024f4:	adrp	x0, 407000 <_fini+0x160>
  4024f8:	add	x3, x0, #0x6a8
  4024fc:	mov	w2, #0xce                  	// #206
  402500:	mov	w0, #0x1                   	// #1
  402504:	bl	401c70 <log_oom_internal@plt>
  402508:	str	w0, [sp, #72]
  40250c:	b	402740 <get_file_options+0x530>
  402510:	ldr	x0, [sp, #136]
  402514:	str	x0, [sp, #144]
  402518:	add	x2, sp, #0x80
  40251c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402520:	add	x1, x0, #0xfc8
  402524:	mov	x0, x2
  402528:	bl	401950 <strsep@plt>
  40252c:	str	x0, [sp, #136]
  402530:	ldr	x0, [sp, #136]
  402534:	cmp	x0, #0x0
  402538:	b.eq	4025b0 <get_file_options+0x3a0>  // b.none
  40253c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402540:	add	x1, x0, #0xfd8
  402544:	ldr	x0, [sp, #136]
  402548:	bl	401c30 <strcasecmp@plt>
  40254c:	cmp	w0, #0x0
  402550:	b.ne	4025b0 <get_file_options+0x3a0>  // b.any
  402554:	add	x0, sp, #0x80
  402558:	bl	4020cc <get_value>
  40255c:	str	x0, [sp, #136]
  402560:	ldr	x0, [sp, #136]
  402564:	cmp	x0, #0x0
  402568:	b.ne	402590 <get_file_options+0x380>  // b.any
  40256c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402570:	add	x1, x0, #0xf73
  402574:	adrp	x0, 407000 <_fini+0x160>
  402578:	add	x3, x0, #0x6a8
  40257c:	mov	w2, #0xd7                  	// #215
  402580:	mov	w0, #0x1                   	// #1
  402584:	bl	401c70 <log_oom_internal@plt>
  402588:	str	w0, [sp, #72]
  40258c:	b	402740 <get_file_options+0x530>
  402590:	ldr	x0, [sp, #136]
  402594:	str	x0, [sp, #152]
  402598:	add	x2, sp, #0x80
  40259c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4025a0:	add	x1, x0, #0xfc8
  4025a4:	mov	x0, x2
  4025a8:	bl	401950 <strsep@plt>
  4025ac:	str	x0, [sp, #136]
  4025b0:	ldr	x0, [sp, #136]
  4025b4:	cmp	x0, #0x0
  4025b8:	b.eq	402618 <get_file_options+0x408>  // b.none
  4025bc:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4025c0:	add	x1, x0, #0xfe0
  4025c4:	ldr	x0, [sp, #136]
  4025c8:	bl	401c30 <strcasecmp@plt>
  4025cc:	cmp	w0, #0x0
  4025d0:	b.ne	402618 <get_file_options+0x408>  // b.any
  4025d4:	add	x0, sp, #0x80
  4025d8:	bl	4020cc <get_value>
  4025dc:	str	x0, [sp, #136]
  4025e0:	ldr	x0, [sp, #136]
  4025e4:	cmp	x0, #0x0
  4025e8:	b.ne	402610 <get_file_options+0x400>  // b.any
  4025ec:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4025f0:	add	x1, x0, #0xf73
  4025f4:	adrp	x0, 407000 <_fini+0x160>
  4025f8:	add	x3, x0, #0x6a8
  4025fc:	mov	w2, #0xe2                  	// #226
  402600:	mov	w0, #0x1                   	// #1
  402604:	bl	401c70 <log_oom_internal@plt>
  402608:	str	w0, [sp, #72]
  40260c:	b	402740 <get_file_options+0x530>
  402610:	ldr	x0, [sp, #136]
  402614:	str	x0, [sp, #160]
  402618:	ldr	x0, [sp, #160]
  40261c:	cmp	x0, #0x0
  402620:	b.eq	40263c <get_file_options+0x42c>  // b.none
  402624:	ldr	x0, [sp, #144]
  402628:	cmp	x0, #0x0
  40262c:	b.ne	4026cc <get_file_options+0x4bc>  // b.any
  402630:	ldr	x0, [sp, #152]
  402634:	cmp	x0, #0x0
  402638:	b.eq	4026cc <get_file_options+0x4bc>  // b.none
  40263c:	mov	w0, #0x3                   	// #3
  402640:	str	w0, [sp, #76]
  402644:	str	wzr, [sp, #80]
  402648:	mov	w0, #0x1                   	// #1
  40264c:	str	w0, [sp, #84]
  402650:	ldr	w0, [sp, #84]
  402654:	bl	401c90 <log_get_max_level_realm@plt>
  402658:	mov	w1, w0
  40265c:	ldr	w0, [sp, #76]
  402660:	and	w0, w0, #0x7
  402664:	cmp	w1, w0
  402668:	b.lt	4026b8 <get_file_options+0x4a8>  // b.tstop
  40266c:	ldr	w0, [sp, #84]
  402670:	lsl	w1, w0, #10
  402674:	ldr	w0, [sp, #76]
  402678:	orr	w8, w1, w0
  40267c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402680:	add	x1, x0, #0xf73
  402684:	ldr	x0, [sp, #112]
  402688:	mov	x7, x0
  40268c:	ldr	w6, [sp, #64]
  402690:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402694:	add	x5, x0, #0xfe8
  402698:	adrp	x0, 407000 <_fini+0x160>
  40269c:	add	x4, x0, #0x6a8
  4026a0:	mov	w3, #0xec                  	// #236
  4026a4:	mov	x2, x1
  4026a8:	ldr	w1, [sp, #80]
  4026ac:	mov	w0, w8
  4026b0:	bl	401af0 <log_internal_realm@plt>
  4026b4:	b	4026c0 <get_file_options+0x4b0>
  4026b8:	ldr	w0, [sp, #80]
  4026bc:	cmp	w0, #0x0
  4026c0:	mov	w0, #0xffffffff            	// #-1
  4026c4:	str	w0, [sp, #72]
  4026c8:	b	402740 <get_file_options+0x530>
  4026cc:	ldr	x0, [sp, #56]
  4026d0:	cmp	x0, #0x0
  4026d4:	b.ne	4026e8 <get_file_options+0x4d8>  // b.any
  4026d8:	ldr	x0, [sp, #144]
  4026dc:	cmp	x0, #0x0
  4026e0:	b.ne	40235c <get_file_options+0x14c>  // b.any
  4026e4:	b	402740 <get_file_options+0x530>
  4026e8:	ldr	x0, [sp, #144]
  4026ec:	cmp	x0, #0x0
  4026f0:	b.eq	40235c <get_file_options+0x14c>  // b.none
  4026f4:	ldr	x1, [sp, #144]
  4026f8:	ldr	x0, [sp, #56]
  4026fc:	bl	401eb0 <startswith>
  402700:	cmp	x0, #0x0
  402704:	b.eq	40235c <get_file_options+0x14c>  // b.none
  402708:	ldr	x0, [sp, #152]
  40270c:	cmp	x0, #0x0
  402710:	b.eq	402740 <get_file_options+0x530>  // b.none
  402714:	ldr	x1, [sp, #152]
  402718:	ldr	x0, [sp, #48]
  40271c:	bl	401eb0 <startswith>
  402720:	cmp	x0, #0x0
  402724:	b.ne	402740 <get_file_options+0x530>  // b.any
  402728:	b	40235c <get_file_options+0x14c>
  40272c:	nop
  402730:	b	40235c <get_file_options+0x14c>
  402734:	nop
  402738:	b	40235c <get_file_options+0x14c>
  40273c:	nop
  402740:	ldr	w0, [sp, #72]
  402744:	cmp	w0, #0x0
  402748:	b.ne	40286c <get_file_options+0x65c>  // b.any
  40274c:	ldr	x0, [sp, #144]
  402750:	cmp	x0, #0x0
  402754:	b.ne	402770 <get_file_options+0x560>  // b.any
  402758:	ldr	x0, [sp, #152]
  40275c:	cmp	x0, #0x0
  402760:	b.ne	402770 <get_file_options+0x560>  // b.any
  402764:	ldr	x0, [sp, #160]
  402768:	cmp	x0, #0x0
  40276c:	b.eq	402864 <get_file_options+0x654>  // b.none
  402770:	ldr	x0, [sp, #112]
  402774:	ldr	x1, [sp, #160]
  402778:	bl	401bf0 <strcpy@plt>
  40277c:	ldr	x0, [sp, #112]
  402780:	bl	4021c0 <argc_count>
  402784:	add	w0, w0, #0x2
  402788:	str	w0, [sp, #68]
  40278c:	ldrsw	x0, [sp, #68]
  402790:	mov	x1, #0x8                   	// #8
  402794:	bl	401b40 <calloc@plt>
  402798:	mov	x1, x0
  40279c:	ldr	x0, [sp, #32]
  4027a0:	str	x1, [x0]
  4027a4:	ldr	x0, [sp, #32]
  4027a8:	ldr	x0, [x0]
  4027ac:	cmp	x0, #0x0
  4027b0:	b.ne	4027d8 <get_file_options+0x5c8>  // b.any
  4027b4:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4027b8:	add	x1, x0, #0xf73
  4027bc:	adrp	x0, 407000 <_fini+0x160>
  4027c0:	add	x3, x0, #0x6a8
  4027c4:	mov	w2, #0x10c                 	// #268
  4027c8:	mov	w0, #0x1                   	// #1
  4027cc:	bl	401c70 <log_oom_internal@plt>
  4027d0:	str	w0, [sp, #72]
  4027d4:	b	40286c <get_file_options+0x65c>
  4027d8:	ldr	x0, [sp, #40]
  4027dc:	ldr	w1, [sp, #68]
  4027e0:	str	w1, [x0]
  4027e4:	str	wzr, [sp, #68]
  4027e8:	ldr	x0, [sp, #32]
  4027ec:	ldr	x1, [x0]
  4027f0:	ldrsw	x0, [sp, #68]
  4027f4:	lsl	x0, x0, #3
  4027f8:	add	x0, x1, x0
  4027fc:	ldr	x1, [sp, #112]
  402800:	str	x1, [x0]
  402804:	mov	w0, #0x1                   	// #1
  402808:	str	w0, [sp, #68]
  40280c:	b	402848 <get_file_options+0x638>
  402810:	ldr	x0, [sp, #32]
  402814:	ldr	x1, [x0]
  402818:	ldrsw	x0, [sp, #68]
  40281c:	lsl	x0, x0, #3
  402820:	add	x19, x1, x0
  402824:	add	x2, sp, #0x70
  402828:	adrp	x0, 407000 <_fini+0x160>
  40282c:	add	x1, x0, #0x10
  402830:	mov	x0, x2
  402834:	bl	401950 <strsep@plt>
  402838:	str	x0, [x19]
  40283c:	ldr	w0, [sp, #68]
  402840:	add	w0, w0, #0x1
  402844:	str	w0, [sp, #68]
  402848:	ldr	x0, [sp, #40]
  40284c:	ldr	w0, [x0]
  402850:	ldr	w1, [sp, #68]
  402854:	cmp	w1, w0
  402858:	b.lt	402810 <get_file_options+0x600>  // b.tstop
  40285c:	str	xzr, [sp, #112]
  402860:	b	40286c <get_file_options+0x65c>
  402864:	mov	w0, #0x1                   	// #1
  402868:	str	w0, [sp, #72]
  40286c:	ldr	w19, [sp, #72]
  402870:	add	x0, sp, #0x78
  402874:	bl	401e8c <fclosep>
  402878:	add	x0, sp, #0x70
  40287c:	bl	401e68 <freep>
  402880:	mov	w1, w19
  402884:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  402888:	add	x0, x0, #0xbb8
  40288c:	ldr	x2, [sp, #168]
  402890:	ldr	x0, [x0]
  402894:	eor	x0, x2, x0
  402898:	cmp	x0, #0x0
  40289c:	b.eq	4028a4 <get_file_options+0x694>  // b.none
  4028a0:	bl	401aa0 <__stack_chk_fail@plt>
  4028a4:	mov	w0, w1
  4028a8:	ldr	x19, [sp, #16]
  4028ac:	ldp	x29, x30, [sp], #176
  4028b0:	ret

00000000004028b4 <help>:
  4028b4:	stp	x29, x30, [sp, #-16]!
  4028b8:	mov	x29, sp
  4028bc:	adrp	x0, 419000 <config_file>
  4028c0:	add	x0, x0, #0x218
  4028c4:	ldr	x0, [x0]
  4028c8:	mov	x1, x0
  4028cc:	adrp	x0, 407000 <_fini+0x160>
  4028d0:	add	x0, x0, #0x18
  4028d4:	bl	401be0 <printf@plt>
  4028d8:	nop
  4028dc:	ldp	x29, x30, [sp], #16
  4028e0:	ret

00000000004028e4 <set_options>:
  4028e4:	stp	x29, x30, [sp, #-80]!
  4028e8:	mov	x29, sp
  4028ec:	str	w0, [sp, #44]
  4028f0:	str	x1, [sp, #32]
  4028f4:	str	x2, [sp, #24]
  4028f8:	adrp	x0, 419000 <config_file>
  4028fc:	add	x0, x0, #0x220
  402900:	mov	w1, #0x1                   	// #1
  402904:	str	w1, [x0]
  402908:	b	402d54 <set_options+0x470>
  40290c:	ldr	w0, [sp, #52]
  402910:	cmp	w0, #0x78
  402914:	b.eq	402d10 <set_options+0x42c>  // b.none
  402918:	ldr	w0, [sp, #52]
  40291c:	cmp	w0, #0x78
  402920:	b.gt	402d2c <set_options+0x448>
  402924:	ldr	w0, [sp, #52]
  402928:	cmp	w0, #0x76
  40292c:	b.eq	402ce0 <set_options+0x3fc>  // b.none
  402930:	ldr	w0, [sp, #52]
  402934:	cmp	w0, #0x76
  402938:	b.gt	402d2c <set_options+0x448>
  40293c:	ldr	w0, [sp, #52]
  402940:	cmp	w0, #0x75
  402944:	b.eq	402ccc <set_options+0x3e8>  // b.none
  402948:	ldr	w0, [sp, #52]
  40294c:	cmp	w0, #0x75
  402950:	b.gt	402d2c <set_options+0x448>
  402954:	ldr	w0, [sp, #52]
  402958:	cmp	w0, #0x73
  40295c:	b.eq	402be4 <set_options+0x300>  // b.none
  402960:	ldr	w0, [sp, #52]
  402964:	cmp	w0, #0x73
  402968:	b.gt	402d2c <set_options+0x448>
  40296c:	ldr	w0, [sp, #52]
  402970:	cmp	w0, #0x70
  402974:	b.eq	402a9c <set_options+0x1b8>  // b.none
  402978:	ldr	w0, [sp, #52]
  40297c:	cmp	w0, #0x70
  402980:	b.gt	402d2c <set_options+0x448>
  402984:	ldr	w0, [sp, #52]
  402988:	cmp	w0, #0x68
  40298c:	b.eq	402a90 <set_options+0x1ac>  // b.none
  402990:	ldr	w0, [sp, #52]
  402994:	cmp	w0, #0x68
  402998:	b.gt	402d2c <set_options+0x448>
  40299c:	ldr	w0, [sp, #52]
  4029a0:	cmp	w0, #0x67
  4029a4:	b.eq	402a7c <set_options+0x198>  // b.none
  4029a8:	ldr	w0, [sp, #52]
  4029ac:	cmp	w0, #0x67
  4029b0:	b.gt	402d2c <set_options+0x448>
  4029b4:	ldr	w0, [sp, #52]
  4029b8:	cmp	w0, #0x66
  4029bc:	b.eq	402a58 <set_options+0x174>  // b.none
  4029c0:	ldr	w0, [sp, #52]
  4029c4:	cmp	w0, #0x66
  4029c8:	b.gt	402d2c <set_options+0x448>
  4029cc:	ldr	w0, [sp, #52]
  4029d0:	cmp	w0, #0x64
  4029d4:	b.eq	402a28 <set_options+0x144>  // b.none
  4029d8:	ldr	w0, [sp, #52]
  4029dc:	cmp	w0, #0x64
  4029e0:	b.gt	402d2c <set_options+0x448>
  4029e4:	ldr	w0, [sp, #52]
  4029e8:	cmp	w0, #0x62
  4029ec:	b.eq	402a18 <set_options+0x134>  // b.none
  4029f0:	ldr	w0, [sp, #52]
  4029f4:	cmp	w0, #0x62
  4029f8:	b.gt	402d2c <set_options+0x448>
  4029fc:	ldr	w0, [sp, #52]
  402a00:	cmp	w0, #0x3f
  402a04:	b.eq	402d24 <set_options+0x440>  // b.none
  402a08:	ldr	w0, [sp, #52]
  402a0c:	cmp	w0, #0x56
  402a10:	b.eq	402cfc <set_options+0x418>  // b.none
  402a14:	b	402d2c <set_options+0x448>
  402a18:	adrp	x0, 419000 <config_file>
  402a1c:	add	x0, x0, #0x231
  402a20:	strb	wzr, [x0]
  402a24:	b	402d54 <set_options+0x470>
  402a28:	adrp	x0, 419000 <config_file>
  402a2c:	add	x0, x0, #0x232
  402a30:	mov	w1, #0x1                   	// #1
  402a34:	strb	w1, [x0]
  402a38:	adrp	x0, 419000 <config_file>
  402a3c:	add	x0, x0, #0x228
  402a40:	ldr	x0, [x0]
  402a44:	mov	x2, x0
  402a48:	mov	x1, #0x200                 	// #512
  402a4c:	ldr	x0, [sp, #24]
  402a50:	bl	4018f0 <strscpy@plt>
  402a54:	b	402d54 <set_options+0x470>
  402a58:	adrp	x0, 419000 <config_file>
  402a5c:	add	x0, x0, #0x228
  402a60:	ldr	x0, [x0]
  402a64:	mov	x2, x0
  402a68:	mov	x1, #0x200                 	// #512
  402a6c:	adrp	x0, 419000 <config_file>
  402a70:	add	x0, x0, #0x0
  402a74:	bl	4018f0 <strscpy@plt>
  402a78:	b	402d54 <set_options+0x470>
  402a7c:	adrp	x0, 419000 <config_file>
  402a80:	add	x0, x0, #0x231
  402a84:	mov	w1, #0x1                   	// #1
  402a88:	strb	w1, [x0]
  402a8c:	b	402d54 <set_options+0x470>
  402a90:	bl	4028b4 <help>
  402a94:	mov	w0, #0x0                   	// #0
  402a98:	bl	4019e0 <exit@plt>
  402a9c:	adrp	x0, 419000 <config_file>
  402aa0:	add	x0, x0, #0x228
  402aa4:	ldr	x2, [x0]
  402aa8:	adrp	x0, 407000 <_fini+0x160>
  402aac:	add	x1, x0, #0x308
  402ab0:	mov	x0, x2
  402ab4:	bl	401b30 <strcmp@plt>
  402ab8:	cmp	w0, #0x0
  402abc:	b.ne	402ad4 <set_options+0x1f0>  // b.any
  402ac0:	adrp	x0, 419000 <config_file>
  402ac4:	add	x0, x0, #0x234
  402ac8:	mov	w1, #0x80                  	// #128
  402acc:	str	w1, [x0]
  402ad0:	b	402d54 <set_options+0x470>
  402ad4:	adrp	x0, 419000 <config_file>
  402ad8:	add	x0, x0, #0x228
  402adc:	ldr	x2, [x0]
  402ae0:	adrp	x0, 407000 <_fini+0x160>
  402ae4:	add	x1, x0, #0x310
  402ae8:	mov	x0, x2
  402aec:	bl	401b30 <strcmp@plt>
  402af0:	cmp	w0, #0x0
  402af4:	b.ne	402b0c <set_options+0x228>  // b.any
  402af8:	adrp	x0, 419000 <config_file>
  402afc:	add	x0, x0, #0x234
  402b00:	mov	w1, #0x83                  	// #131
  402b04:	str	w1, [x0]
  402b08:	b	402d54 <set_options+0x470>
  402b0c:	adrp	x0, 419000 <config_file>
  402b10:	add	x0, x0, #0x228
  402b14:	ldr	x2, [x0]
  402b18:	adrp	x0, 407000 <_fini+0x160>
  402b1c:	add	x1, x0, #0x318
  402b20:	mov	x0, x2
  402b24:	bl	401b30 <strcmp@plt>
  402b28:	cmp	w0, #0x0
  402b2c:	b.ne	402b44 <set_options+0x260>  // b.any
  402b30:	adrp	x0, 419000 <config_file>
  402b34:	add	x0, x0, #0x234
  402b38:	mov	w1, #0xffffff7d            	// #-131
  402b3c:	str	w1, [x0]
  402b40:	b	402d54 <set_options+0x470>
  402b44:	mov	w0, #0x3                   	// #3
  402b48:	str	w0, [sp, #68]
  402b4c:	mov	w0, #0x16                  	// #22
  402b50:	movk	w0, #0x4000, lsl #16
  402b54:	str	w0, [sp, #72]
  402b58:	mov	w0, #0x1                   	// #1
  402b5c:	str	w0, [sp, #76]
  402b60:	ldr	w0, [sp, #76]
  402b64:	bl	401c90 <log_get_max_level_realm@plt>
  402b68:	mov	w1, w0
  402b6c:	ldr	w0, [sp, #68]
  402b70:	and	w0, w0, #0x7
  402b74:	cmp	w1, w0
  402b78:	b.lt	402bcc <set_options+0x2e8>  // b.tstop
  402b7c:	ldr	w0, [sp, #76]
  402b80:	lsl	w1, w0, #10
  402b84:	ldr	w0, [sp, #68]
  402b88:	orr	w7, w1, w0
  402b8c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402b90:	add	x1, x0, #0xf73
  402b94:	adrp	x0, 419000 <config_file>
  402b98:	add	x0, x0, #0x228
  402b9c:	ldr	x0, [x0]
  402ba0:	mov	x6, x0
  402ba4:	adrp	x0, 407000 <_fini+0x160>
  402ba8:	add	x5, x0, #0x328
  402bac:	adrp	x0, 407000 <_fini+0x160>
  402bb0:	add	x4, x0, #0x6c0
  402bb4:	mov	w3, #0x15d                 	// #349
  402bb8:	mov	x2, x1
  402bbc:	ldr	w1, [sp, #72]
  402bc0:	mov	w0, w7
  402bc4:	bl	401af0 <log_internal_realm@plt>
  402bc8:	b	402dfc <set_options+0x518>
  402bcc:	ldr	w0, [sp, #72]
  402bd0:	cmp	w0, #0x0
  402bd4:	cneg	w0, w0, lt  // lt = tstop
  402bd8:	and	w0, w0, #0xff
  402bdc:	neg	w0, w0
  402be0:	b	402dfc <set_options+0x518>
  402be4:	adrp	x0, 419000 <config_file>
  402be8:	add	x0, x0, #0x228
  402bec:	ldr	x0, [x0]
  402bf0:	bl	401960 <atoi@plt>
  402bf4:	mov	w1, w0
  402bf8:	adrp	x0, 419000 <config_file>
  402bfc:	add	x0, x0, #0x200
  402c00:	str	w1, [x0]
  402c04:	adrp	x0, 419000 <config_file>
  402c08:	add	x0, x0, #0x200
  402c0c:	ldr	w0, [x0]
  402c10:	cmp	w0, #0x2
  402c14:	b.le	402c2c <set_options+0x348>
  402c18:	adrp	x0, 419000 <config_file>
  402c1c:	add	x0, x0, #0x200
  402c20:	ldr	w0, [x0]
  402c24:	cmp	w0, #0x4
  402c28:	b.le	402d54 <set_options+0x470>
  402c2c:	mov	w0, #0x3                   	// #3
  402c30:	str	w0, [sp, #56]
  402c34:	mov	w0, #0x16                  	// #22
  402c38:	movk	w0, #0x4000, lsl #16
  402c3c:	str	w0, [sp, #60]
  402c40:	mov	w0, #0x1                   	// #1
  402c44:	str	w0, [sp, #64]
  402c48:	ldr	w0, [sp, #64]
  402c4c:	bl	401c90 <log_get_max_level_realm@plt>
  402c50:	mov	w1, w0
  402c54:	ldr	w0, [sp, #56]
  402c58:	and	w0, w0, #0x7
  402c5c:	cmp	w1, w0
  402c60:	b.lt	402cb4 <set_options+0x3d0>  // b.tstop
  402c64:	ldr	w0, [sp, #64]
  402c68:	lsl	w1, w0, #10
  402c6c:	ldr	w0, [sp, #56]
  402c70:	orr	w7, w1, w0
  402c74:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402c78:	add	x1, x0, #0xf73
  402c7c:	adrp	x0, 419000 <config_file>
  402c80:	add	x0, x0, #0x228
  402c84:	ldr	x0, [x0]
  402c88:	mov	x6, x0
  402c8c:	adrp	x0, 407000 <_fini+0x160>
  402c90:	add	x5, x0, #0x340
  402c94:	adrp	x0, 407000 <_fini+0x160>
  402c98:	add	x4, x0, #0x6c0
  402c9c:	mov	w3, #0x165                 	// #357
  402ca0:	mov	x2, x1
  402ca4:	ldr	w1, [sp, #60]
  402ca8:	mov	w0, w7
  402cac:	bl	401af0 <log_internal_realm@plt>
  402cb0:	b	402dfc <set_options+0x518>
  402cb4:	ldr	w0, [sp, #60]
  402cb8:	cmp	w0, #0x0
  402cbc:	cneg	w0, w0, lt  // lt = tstop
  402cc0:	and	w0, w0, #0xff
  402cc4:	neg	w0, w0
  402cc8:	b	402dfc <set_options+0x518>
  402ccc:	adrp	x0, 419000 <config_file>
  402cd0:	add	x0, x0, #0x238
  402cd4:	mov	w1, #0x1                   	// #1
  402cd8:	strb	w1, [x0]
  402cdc:	b	402d54 <set_options+0x470>
  402ce0:	mov	w0, #0x0                   	// #0
  402ce4:	bl	401a90 <log_set_target@plt>
  402ce8:	mov	w1, #0x7                   	// #7
  402cec:	mov	w0, #0x1                   	// #1
  402cf0:	bl	401b70 <log_set_max_level_realm@plt>
  402cf4:	bl	401c60 <log_open@plt>
  402cf8:	b	402d54 <set_options+0x470>
  402cfc:	adrp	x0, 407000 <_fini+0x160>
  402d00:	add	x0, x0, #0x358
  402d04:	bl	401ba0 <puts@plt>
  402d08:	mov	w0, #0x0                   	// #0
  402d0c:	bl	4019e0 <exit@plt>
  402d10:	adrp	x0, 419000 <config_file>
  402d14:	add	x0, x0, #0x239
  402d18:	mov	w1, #0x1                   	// #1
  402d1c:	strb	w1, [x0]
  402d20:	b	402d54 <set_options+0x470>
  402d24:	mov	w0, #0xffffffff            	// #-1
  402d28:	b	402dfc <set_options+0x518>
  402d2c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402d30:	add	x1, x0, #0xf73
  402d34:	adrp	x0, 407000 <_fini+0x160>
  402d38:	add	x4, x0, #0x6d0
  402d3c:	mov	w3, #0x180                 	// #384
  402d40:	mov	x2, x1
  402d44:	adrp	x0, 407000 <_fini+0x160>
  402d48:	add	x1, x0, #0x360
  402d4c:	mov	w0, #0x1                   	// #1
  402d50:	bl	401a30 <log_assert_failed_unreachable_realm@plt>
  402d54:	mov	x4, #0x0                   	// #0
  402d58:	adrp	x0, 407000 <_fini+0x160>
  402d5c:	add	x3, x0, #0x528
  402d60:	adrp	x0, 407000 <_fini+0x160>
  402d64:	add	x2, x0, #0x370
  402d68:	ldr	x1, [sp, #32]
  402d6c:	ldr	w0, [sp, #44]
  402d70:	bl	401a10 <getopt_long@plt>
  402d74:	str	w0, [sp, #52]
  402d78:	ldr	w0, [sp, #52]
  402d7c:	cmp	w0, #0x0
  402d80:	b.ge	40290c <set_options+0x28>  // b.tcont
  402d84:	adrp	x0, 419000 <config_file>
  402d88:	add	x0, x0, #0x220
  402d8c:	ldr	w0, [x0]
  402d90:	ldr	w1, [sp, #44]
  402d94:	cmp	w1, w0
  402d98:	b.le	402df8 <set_options+0x514>
  402d9c:	adrp	x0, 419000 <config_file>
  402da0:	add	x0, x0, #0x232
  402da4:	ldrb	w0, [x0]
  402da8:	eor	w0, w0, #0x1
  402dac:	and	w0, w0, #0xff
  402db0:	cmp	w0, #0x0
  402db4:	b.eq	402df8 <set_options+0x514>  // b.none
  402db8:	adrp	x0, 419000 <config_file>
  402dbc:	add	x0, x0, #0x232
  402dc0:	mov	w1, #0x1                   	// #1
  402dc4:	strb	w1, [x0]
  402dc8:	adrp	x0, 419000 <config_file>
  402dcc:	add	x0, x0, #0x220
  402dd0:	ldr	w0, [x0]
  402dd4:	sxtw	x0, w0
  402dd8:	lsl	x0, x0, #3
  402ddc:	ldr	x1, [sp, #32]
  402de0:	add	x0, x1, x0
  402de4:	ldr	x0, [x0]
  402de8:	mov	x2, x0
  402dec:	mov	x1, #0x200                 	// #512
  402df0:	ldr	x0, [sp, #24]
  402df4:	bl	4018f0 <strscpy@plt>
  402df8:	mov	w0, #0x0                   	// #0
  402dfc:	ldp	x29, x30, [sp], #80
  402e00:	ret

0000000000402e04 <per_dev_options>:
  402e04:	stp	x29, x30, [sp, #-112]!
  402e08:	mov	x29, sp
  402e0c:	str	x0, [sp, #40]
  402e10:	str	x1, [sp, #32]
  402e14:	str	x2, [sp, #24]
  402e18:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  402e1c:	add	x0, x0, #0xbb8
  402e20:	ldr	x1, [x0]
  402e24:	str	x1, [sp, #104]
  402e28:	mov	x1, #0x0                   	// #0
  402e2c:	str	xzr, [sp, #96]
  402e30:	adrp	x0, 419000 <config_file>
  402e34:	add	x0, x0, #0x231
  402e38:	ldrb	w0, [x0]
  402e3c:	mov	w1, w0
  402e40:	ldr	x0, [sp, #32]
  402e44:	str	w1, [x0]
  402e48:	adrp	x0, 419000 <config_file>
  402e4c:	add	x0, x0, #0x234
  402e50:	ldr	w1, [x0]
  402e54:	ldr	x0, [sp, #24]
  402e58:	str	w1, [x0]
  402e5c:	add	x1, sp, #0x60
  402e60:	add	x0, sp, #0x3c
  402e64:	mov	x3, x1
  402e68:	mov	x2, x0
  402e6c:	adrp	x0, 419000 <config_file>
  402e70:	add	x1, x0, #0x280
  402e74:	adrp	x0, 419000 <config_file>
  402e78:	add	x0, x0, #0x240
  402e7c:	bl	402210 <get_file_options>
  402e80:	str	w0, [sp, #64]
  402e84:	adrp	x0, 419000 <config_file>
  402e88:	add	x0, x0, #0x220
  402e8c:	mov	w1, #0x1                   	// #1
  402e90:	str	w1, [x0]
  402e94:	b	4030d8 <per_dev_options+0x2d4>
  402e98:	ldr	w5, [sp, #60]
  402e9c:	ldr	x1, [sp, #96]
  402ea0:	mov	x4, #0x0                   	// #0
  402ea4:	adrp	x0, 407000 <_fini+0x160>
  402ea8:	add	x3, x0, #0x528
  402eac:	adrp	x0, 407000 <_fini+0x160>
  402eb0:	add	x2, x0, #0x380
  402eb4:	mov	w0, w5
  402eb8:	bl	401a10 <getopt_long@plt>
  402ebc:	str	w0, [sp, #68]
  402ec0:	ldr	w0, [sp, #68]
  402ec4:	cmn	w0, #0x1
  402ec8:	b.eq	4030e8 <per_dev_options+0x2e4>  // b.none
  402ecc:	ldr	w0, [sp, #68]
  402ed0:	cmp	w0, #0x70
  402ed4:	b.eq	402f1c <per_dev_options+0x118>  // b.none
  402ed8:	ldr	w0, [sp, #68]
  402edc:	cmp	w0, #0x70
  402ee0:	b.gt	40304c <per_dev_options+0x248>
  402ee4:	ldr	w0, [sp, #68]
  402ee8:	cmp	w0, #0x62
  402eec:	b.eq	402f00 <per_dev_options+0xfc>  // b.none
  402ef0:	ldr	w0, [sp, #68]
  402ef4:	cmp	w0, #0x67
  402ef8:	b.eq	402f0c <per_dev_options+0x108>  // b.none
  402efc:	b	40304c <per_dev_options+0x248>
  402f00:	ldr	x0, [sp, #32]
  402f04:	str	wzr, [x0]
  402f08:	b	4030d8 <per_dev_options+0x2d4>
  402f0c:	ldr	x0, [sp, #32]
  402f10:	mov	w1, #0x1                   	// #1
  402f14:	str	w1, [x0]
  402f18:	b	4030d8 <per_dev_options+0x2d4>
  402f1c:	adrp	x0, 419000 <config_file>
  402f20:	add	x0, x0, #0x228
  402f24:	ldr	x2, [x0]
  402f28:	adrp	x0, 407000 <_fini+0x160>
  402f2c:	add	x1, x0, #0x308
  402f30:	mov	x0, x2
  402f34:	bl	401b30 <strcmp@plt>
  402f38:	cmp	w0, #0x0
  402f3c:	b.ne	402f50 <per_dev_options+0x14c>  // b.any
  402f40:	ldr	x0, [sp, #24]
  402f44:	mov	w1, #0x80                  	// #128
  402f48:	str	w1, [x0]
  402f4c:	b	4030d8 <per_dev_options+0x2d4>
  402f50:	adrp	x0, 419000 <config_file>
  402f54:	add	x0, x0, #0x228
  402f58:	ldr	x2, [x0]
  402f5c:	adrp	x0, 407000 <_fini+0x160>
  402f60:	add	x1, x0, #0x310
  402f64:	mov	x0, x2
  402f68:	bl	401b30 <strcmp@plt>
  402f6c:	cmp	w0, #0x0
  402f70:	b.ne	402f84 <per_dev_options+0x180>  // b.any
  402f74:	ldr	x0, [sp, #24]
  402f78:	mov	w1, #0x83                  	// #131
  402f7c:	str	w1, [x0]
  402f80:	b	4030d8 <per_dev_options+0x2d4>
  402f84:	adrp	x0, 419000 <config_file>
  402f88:	add	x0, x0, #0x228
  402f8c:	ldr	x2, [x0]
  402f90:	adrp	x0, 407000 <_fini+0x160>
  402f94:	add	x1, x0, #0x318
  402f98:	mov	x0, x2
  402f9c:	bl	401b30 <strcmp@plt>
  402fa0:	cmp	w0, #0x0
  402fa4:	b.ne	402fb8 <per_dev_options+0x1b4>  // b.any
  402fa8:	ldr	x0, [sp, #24]
  402fac:	mov	w1, #0xffffff7d            	// #-131
  402fb0:	str	w1, [x0]
  402fb4:	b	4030d8 <per_dev_options+0x2d4>
  402fb8:	mov	w0, #0x3                   	// #3
  402fbc:	str	w0, [sp, #72]
  402fc0:	str	wzr, [sp, #76]
  402fc4:	mov	w0, #0x1                   	// #1
  402fc8:	str	w0, [sp, #80]
  402fcc:	ldr	w0, [sp, #80]
  402fd0:	bl	401c90 <log_get_max_level_realm@plt>
  402fd4:	mov	w1, w0
  402fd8:	ldr	w0, [sp, #72]
  402fdc:	and	w0, w0, #0x7
  402fe0:	cmp	w1, w0
  402fe4:	b.lt	403038 <per_dev_options+0x234>  // b.tstop
  402fe8:	ldr	w0, [sp, #80]
  402fec:	lsl	w1, w0, #10
  402ff0:	ldr	w0, [sp, #72]
  402ff4:	orr	w7, w1, w0
  402ff8:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  402ffc:	add	x1, x0, #0xf73
  403000:	adrp	x0, 419000 <config_file>
  403004:	add	x0, x0, #0x228
  403008:	ldr	x0, [x0]
  40300c:	mov	x6, x0
  403010:	adrp	x0, 407000 <_fini+0x160>
  403014:	add	x5, x0, #0x328
  403018:	adrp	x0, 407000 <_fini+0x160>
  40301c:	add	x4, x0, #0x6e0
  403020:	mov	w3, #0x1ad                 	// #429
  403024:	mov	x2, x1
  403028:	ldr	w1, [sp, #76]
  40302c:	mov	w0, w7
  403030:	bl	401af0 <log_internal_realm@plt>
  403034:	b	403040 <per_dev_options+0x23c>
  403038:	ldr	w0, [sp, #76]
  40303c:	cmp	w0, #0x0
  403040:	mov	w0, #0xffffffff            	// #-1
  403044:	str	w0, [sp, #64]
  403048:	b	4030d8 <per_dev_options+0x2d4>
  40304c:	mov	w0, #0x3                   	// #3
  403050:	str	w0, [sp, #84]
  403054:	str	wzr, [sp, #88]
  403058:	mov	w0, #0x1                   	// #1
  40305c:	str	w0, [sp, #92]
  403060:	ldr	w0, [sp, #92]
  403064:	bl	401c90 <log_get_max_level_realm@plt>
  403068:	mov	w1, w0
  40306c:	ldr	w0, [sp, #84]
  403070:	and	w0, w0, #0x7
  403074:	cmp	w1, w0
  403078:	b.lt	4030c4 <per_dev_options+0x2c0>  // b.tstop
  40307c:	ldr	w0, [sp, #92]
  403080:	lsl	w1, w0, #10
  403084:	ldr	w0, [sp, #84]
  403088:	orr	w8, w1, w0
  40308c:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  403090:	add	x1, x0, #0xf73
  403094:	ldr	w7, [sp, #68]
  403098:	ldr	w6, [sp, #68]
  40309c:	adrp	x0, 407000 <_fini+0x160>
  4030a0:	add	x5, x0, #0x388
  4030a4:	adrp	x0, 407000 <_fini+0x160>
  4030a8:	add	x4, x0, #0x6e0
  4030ac:	mov	w3, #0x1b3                 	// #435
  4030b0:	mov	x2, x1
  4030b4:	ldr	w1, [sp, #88]
  4030b8:	mov	w0, w8
  4030bc:	bl	401af0 <log_internal_realm@plt>
  4030c0:	b	4030cc <per_dev_options+0x2c8>
  4030c4:	ldr	w0, [sp, #88]
  4030c8:	cmp	w0, #0x0
  4030cc:	mov	w0, #0xffffffff            	// #-1
  4030d0:	str	w0, [sp, #64]
  4030d4:	nop
  4030d8:	ldr	w0, [sp, #64]
  4030dc:	cmp	w0, #0x0
  4030e0:	b.eq	402e98 <per_dev_options+0x94>  // b.none
  4030e4:	b	4030ec <per_dev_options+0x2e8>
  4030e8:	nop
  4030ec:	ldr	x0, [sp, #96]
  4030f0:	cmp	x0, #0x0
  4030f4:	b.eq	40310c <per_dev_options+0x308>  // b.none
  4030f8:	ldr	x0, [sp, #96]
  4030fc:	ldr	x0, [x0]
  403100:	bl	401b90 <free@plt>
  403104:	ldr	x0, [sp, #96]
  403108:	bl	401b90 <free@plt>
  40310c:	ldr	w0, [sp, #64]
  403110:	mov	w1, w0
  403114:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  403118:	add	x0, x0, #0xbb8
  40311c:	ldr	x2, [sp, #104]
  403120:	ldr	x0, [x0]
  403124:	eor	x0, x2, x0
  403128:	cmp	x0, #0x0
  40312c:	b.eq	403134 <per_dev_options+0x330>  // b.none
  403130:	bl	401aa0 <__stack_chk_fail@plt>
  403134:	mov	w0, w1
  403138:	ldp	x29, x30, [sp], #112
  40313c:	ret

0000000000403140 <set_inq_values>:
  403140:	stp	x29, x30, [sp, #-48]!
  403144:	mov	x29, sp
  403148:	str	x0, [sp, #24]
  40314c:	str	x1, [sp, #16]
  403150:	adrp	x0, 419000 <config_file>
  403154:	add	x0, x0, #0x200
  403158:	ldr	w1, [x0]
  40315c:	ldr	x0, [sp, #24]
  403160:	str	w1, [x0, #640]
  403164:	ldr	x1, [sp, #16]
  403168:	ldr	x0, [sp, #24]
  40316c:	bl	405c74 <scsi_std_inquiry>
  403170:	str	w0, [sp, #44]
  403174:	ldr	w0, [sp, #44]
  403178:	cmp	w0, #0x0
  40317c:	b.eq	403188 <set_inq_values+0x48>  // b.none
  403180:	ldr	w0, [sp, #44]
  403184:	b	40325c <set_inq_values+0x11c>
  403188:	ldr	x3, [sp, #24]
  40318c:	mov	x2, #0x100                 	// #256
  403190:	adrp	x0, 419000 <config_file>
  403194:	add	x1, x0, #0x2c0
  403198:	mov	x0, x3
  40319c:	bl	406dd8 <udev_util_encode_string>
  4031a0:	ldr	x0, [sp, #24]
  4031a4:	add	x3, x0, #0x9
  4031a8:	mov	x2, #0x100                 	// #256
  4031ac:	adrp	x0, 419000 <config_file>
  4031b0:	add	x1, x0, #0x3c0
  4031b4:	mov	x0, x3
  4031b8:	bl	406dd8 <udev_util_encode_string>
  4031bc:	ldr	x3, [sp, #24]
  4031c0:	mov	x2, #0x3f                  	// #63
  4031c4:	adrp	x0, 419000 <config_file>
  4031c8:	add	x1, x0, #0x240
  4031cc:	mov	x0, x3
  4031d0:	bl	406a30 <util_replace_whitespace>
  4031d4:	mov	x1, #0x0                   	// #0
  4031d8:	adrp	x0, 419000 <config_file>
  4031dc:	add	x0, x0, #0x240
  4031e0:	bl	406bfc <util_replace_chars>
  4031e4:	ldr	x0, [sp, #24]
  4031e8:	add	x3, x0, #0x9
  4031ec:	mov	x2, #0x3f                  	// #63
  4031f0:	adrp	x0, 419000 <config_file>
  4031f4:	add	x1, x0, #0x280
  4031f8:	mov	x0, x3
  4031fc:	bl	406a30 <util_replace_whitespace>
  403200:	mov	x1, #0x0                   	// #0
  403204:	adrp	x0, 419000 <config_file>
  403208:	add	x0, x0, #0x280
  40320c:	bl	406bfc <util_replace_chars>
  403210:	ldr	x0, [sp, #24]
  403214:	add	x3, x0, #0x1f
  403218:	mov	x2, #0x10                  	// #16
  40321c:	adrp	x0, 419000 <config_file>
  403220:	add	x1, x0, #0x4d0
  403224:	mov	x0, x3
  403228:	bl	401f24 <set_type>
  40322c:	ldr	x0, [sp, #24]
  403230:	add	x3, x0, #0x1a
  403234:	mov	x2, #0xf                   	// #15
  403238:	adrp	x0, 419000 <config_file>
  40323c:	add	x1, x0, #0x4c0
  403240:	mov	x0, x3
  403244:	bl	406a30 <util_replace_whitespace>
  403248:	mov	x1, #0x0                   	// #0
  40324c:	adrp	x0, 419000 <config_file>
  403250:	add	x0, x0, #0x4c0
  403254:	bl	406bfc <util_replace_chars>
  403258:	mov	w0, #0x0                   	// #0
  40325c:	ldp	x29, x30, [sp], #48
  403260:	ret

0000000000403264 <scsi_id>:
  403264:	sub	sp, sp, #0x4f0
  403268:	stp	x29, x30, [sp]
  40326c:	mov	x29, sp
  403270:	str	x0, [sp, #24]
  403274:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  403278:	add	x0, x0, #0xbb8
  40327c:	ldr	x1, [x0]
  403280:	str	x1, [sp, #1256]
  403284:	mov	x1, #0x0                   	// #0
  403288:	add	x0, sp, #0x38
  40328c:	mov	x1, #0x3b0                 	// #944
  403290:	mov	x2, x1
  403294:	mov	w1, #0x0                   	// #0
  403298:	bl	401c80 <memset@plt>
  40329c:	str	wzr, [sp, #52]
  4032a0:	add	x0, sp, #0x38
  4032a4:	ldr	x1, [sp, #24]
  4032a8:	bl	403140 <set_inq_values>
  4032ac:	cmp	w0, #0x0
  4032b0:	b.ge	4032c0 <scsi_id+0x5c>  // b.tcont
  4032b4:	mov	w0, #0x1                   	// #1
  4032b8:	str	w0, [sp, #52]
  4032bc:	b	403544 <scsi_id+0x2e0>
  4032c0:	add	x2, sp, #0x30
  4032c4:	add	x1, sp, #0x2c
  4032c8:	add	x0, sp, #0x38
  4032cc:	bl	402e04 <per_dev_options>
  4032d0:	ldr	w0, [sp, #44]
  4032d4:	cmp	w0, #0x0
  4032d8:	b.ne	4032e8 <scsi_id+0x84>  // b.any
  4032dc:	mov	w0, #0x1                   	// #1
  4032e0:	str	w0, [sp, #52]
  4032e4:	b	403544 <scsi_id+0x2e0>
  4032e8:	ldr	w1, [sp, #48]
  4032ec:	add	x0, sp, #0x38
  4032f0:	mov	w3, #0x100                 	// #256
  4032f4:	mov	w2, w1
  4032f8:	ldr	x1, [sp, #24]
  4032fc:	bl	405f48 <scsi_get_serial>
  403300:	adrp	x0, 419000 <config_file>
  403304:	add	x0, x0, #0x239
  403308:	ldrb	w0, [x0]
  40330c:	cmp	w0, #0x0
  403310:	b.eq	4034e0 <scsi_id+0x27c>  // b.none
  403314:	adrp	x0, 407000 <_fini+0x160>
  403318:	add	x0, x0, #0x3b0
  40331c:	bl	401ba0 <puts@plt>
  403320:	adrp	x0, 419000 <config_file>
  403324:	add	x1, x0, #0x240
  403328:	adrp	x0, 407000 <_fini+0x160>
  40332c:	add	x0, x0, #0x3c0
  403330:	bl	401be0 <printf@plt>
  403334:	adrp	x0, 419000 <config_file>
  403338:	add	x1, x0, #0x2c0
  40333c:	adrp	x0, 407000 <_fini+0x160>
  403340:	add	x0, x0, #0x3d0
  403344:	bl	401be0 <printf@plt>
  403348:	adrp	x0, 419000 <config_file>
  40334c:	add	x1, x0, #0x280
  403350:	adrp	x0, 407000 <_fini+0x160>
  403354:	add	x0, x0, #0x3e8
  403358:	bl	401be0 <printf@plt>
  40335c:	adrp	x0, 419000 <config_file>
  403360:	add	x1, x0, #0x3c0
  403364:	adrp	x0, 407000 <_fini+0x160>
  403368:	add	x0, x0, #0x3f8
  40336c:	bl	401be0 <printf@plt>
  403370:	adrp	x0, 419000 <config_file>
  403374:	add	x1, x0, #0x4c0
  403378:	adrp	x0, 407000 <_fini+0x160>
  40337c:	add	x0, x0, #0x410
  403380:	bl	401be0 <printf@plt>
  403384:	adrp	x0, 419000 <config_file>
  403388:	add	x1, x0, #0x4d0
  40338c:	adrp	x0, 407000 <_fini+0x160>
  403390:	add	x0, x0, #0x420
  403394:	bl	401be0 <printf@plt>
  403398:	ldrb	w0, [sp, #184]
  40339c:	cmp	w0, #0x0
  4033a0:	b.eq	40340c <scsi_id+0x1a8>  // b.none
  4033a4:	add	x1, sp, #0x3e8
  4033a8:	add	x0, sp, #0x38
  4033ac:	add	x0, x0, #0x80
  4033b0:	mov	x2, #0xff                  	// #255
  4033b4:	bl	406a30 <util_replace_whitespace>
  4033b8:	add	x0, sp, #0x3e8
  4033bc:	mov	x1, #0x0                   	// #0
  4033c0:	bl	406bfc <util_replace_chars>
  4033c4:	add	x0, sp, #0x3e8
  4033c8:	mov	x1, x0
  4033cc:	adrp	x0, 407000 <_fini+0x160>
  4033d0:	add	x0, x0, #0x430
  4033d4:	bl	401be0 <printf@plt>
  4033d8:	add	x1, sp, #0x3e8
  4033dc:	add	x0, sp, #0x38
  4033e0:	add	x0, x0, #0x180
  4033e4:	mov	x2, #0xff                  	// #255
  4033e8:	bl	406a30 <util_replace_whitespace>
  4033ec:	add	x0, sp, #0x3e8
  4033f0:	mov	x1, #0x0                   	// #0
  4033f4:	bl	406bfc <util_replace_chars>
  4033f8:	add	x0, sp, #0x3e8
  4033fc:	mov	x1, x0
  403400:	adrp	x0, 407000 <_fini+0x160>
  403404:	add	x0, x0, #0x440
  403408:	bl	401be0 <printf@plt>
  40340c:	ldrb	w0, [sp, #956]
  403410:	cmp	w0, #0x0
  403414:	b.eq	403494 <scsi_id+0x230>  // b.none
  403418:	add	x0, sp, #0x38
  40341c:	add	x0, x0, #0x384
  403420:	mov	x1, x0
  403424:	adrp	x0, 407000 <_fini+0x160>
  403428:	add	x0, x0, #0x458
  40342c:	bl	401be0 <printf@plt>
  403430:	ldrb	w0, [sp, #973]
  403434:	cmp	w0, #0x0
  403438:	b.eq	40347c <scsi_id+0x218>  // b.none
  40343c:	add	x0, sp, #0x38
  403440:	add	x0, x0, #0x395
  403444:	mov	x1, x0
  403448:	adrp	x0, 407000 <_fini+0x160>
  40344c:	add	x0, x0, #0x468
  403450:	bl	401be0 <printf@plt>
  403454:	add	x0, sp, #0x38
  403458:	add	x1, x0, #0x395
  40345c:	add	x0, sp, #0x38
  403460:	add	x0, x0, #0x384
  403464:	mov	x2, x1
  403468:	mov	x1, x0
  40346c:	adrp	x0, 407000 <_fini+0x160>
  403470:	add	x0, x0, #0x488
  403474:	bl	401be0 <printf@plt>
  403478:	b	403494 <scsi_id+0x230>
  40347c:	add	x0, sp, #0x38
  403480:	add	x0, x0, #0x384
  403484:	mov	x1, x0
  403488:	adrp	x0, 407000 <_fini+0x160>
  40348c:	add	x0, x0, #0x4a8
  403490:	bl	401be0 <printf@plt>
  403494:	ldrb	w0, [sp, #990]
  403498:	cmp	w0, #0x0
  40349c:	b.eq	4034b8 <scsi_id+0x254>  // b.none
  4034a0:	add	x0, sp, #0x38
  4034a4:	add	x0, x0, #0x3a6
  4034a8:	mov	x1, x0
  4034ac:	adrp	x0, 407000 <_fini+0x160>
  4034b0:	add	x0, x0, #0x4c8
  4034b4:	bl	401be0 <printf@plt>
  4034b8:	ldrb	w0, [sp, #700]
  4034bc:	cmp	w0, #0x0
  4034c0:	b.eq	403544 <scsi_id+0x2e0>  // b.none
  4034c4:	add	x0, sp, #0x38
  4034c8:	add	x0, x0, #0x284
  4034cc:	mov	x1, x0
  4034d0:	adrp	x0, 407000 <_fini+0x160>
  4034d4:	add	x0, x0, #0x4e0
  4034d8:	bl	401be0 <printf@plt>
  4034dc:	b	403544 <scsi_id+0x2e0>
  4034e0:	ldrb	w0, [sp, #184]
  4034e4:	cmp	w0, #0x0
  4034e8:	b.ne	4034f8 <scsi_id+0x294>  // b.any
  4034ec:	mov	w0, #0x1                   	// #1
  4034f0:	str	w0, [sp, #52]
  4034f4:	b	403544 <scsi_id+0x2e0>
  4034f8:	adrp	x0, 419000 <config_file>
  4034fc:	add	x0, x0, #0x238
  403500:	ldrb	w0, [x0]
  403504:	cmp	w0, #0x0
  403508:	b.eq	403538 <scsi_id+0x2d4>  // b.none
  40350c:	add	x1, sp, #0x3e8
  403510:	add	x0, sp, #0x38
  403514:	add	x0, x0, #0x80
  403518:	mov	x2, #0xff                  	// #255
  40351c:	bl	406a30 <util_replace_whitespace>
  403520:	add	x0, sp, #0x3e8
  403524:	mov	x1, #0x0                   	// #0
  403528:	bl	406bfc <util_replace_chars>
  40352c:	add	x0, sp, #0x3e8
  403530:	bl	401ba0 <puts@plt>
  403534:	b	403544 <scsi_id+0x2e0>
  403538:	add	x0, sp, #0x38
  40353c:	add	x0, x0, #0x80
  403540:	bl	401ba0 <puts@plt>
  403544:	ldr	w0, [sp, #52]
  403548:	mov	w1, w0
  40354c:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  403550:	add	x0, x0, #0xbb8
  403554:	ldr	x2, [sp, #1256]
  403558:	ldr	x0, [x0]
  40355c:	eor	x0, x2, x0
  403560:	cmp	x0, #0x0
  403564:	b.eq	40356c <scsi_id+0x308>  // b.none
  403568:	bl	401aa0 <__stack_chk_fail@plt>
  40356c:	mov	w0, w1
  403570:	ldp	x29, x30, [sp]
  403574:	add	sp, sp, #0x4f0
  403578:	ret

000000000040357c <main>:
  40357c:	sub	sp, sp, #0x250
  403580:	stp	x29, x30, [sp]
  403584:	mov	x29, sp
  403588:	str	w0, [sp, #28]
  40358c:	str	x1, [sp, #16]
  403590:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  403594:	add	x0, x0, #0xbb8
  403598:	ldr	x1, [x0]
  40359c:	str	x1, [sp, #584]
  4035a0:	mov	x1, #0x0                   	// #0
  4035a4:	str	wzr, [sp, #48]
  4035a8:	str	xzr, [sp, #64]
  4035ac:	mov	w0, #0x7                   	// #7
  4035b0:	bl	401a90 <log_set_target@plt>
  4035b4:	bl	401f00 <udev_parse_config>
  4035b8:	mov	w0, #0x1                   	// #1
  4035bc:	bl	401970 <log_parse_environment_realm@plt>
  4035c0:	bl	401c60 <log_open@plt>
  4035c4:	add	x1, sp, #0x40
  4035c8:	add	x0, sp, #0x2c
  4035cc:	mov	x3, x1
  4035d0:	mov	x2, x0
  4035d4:	mov	x1, #0x0                   	// #0
  4035d8:	mov	x0, #0x0                   	// #0
  4035dc:	bl	402210 <get_file_options>
  4035e0:	str	w0, [sp, #48]
  4035e4:	ldr	w0, [sp, #48]
  4035e8:	cmp	w0, #0x0
  4035ec:	b.ge	4035fc <main+0x80>  // b.tcont
  4035f0:	mov	w0, #0x1                   	// #1
  4035f4:	str	w0, [sp, #48]
  4035f8:	b	403740 <main+0x1c4>
  4035fc:	ldr	w0, [sp, #48]
  403600:	cmp	w0, #0x0
  403604:	b.ne	403670 <main+0xf4>  // b.any
  403608:	ldr	x0, [sp, #64]
  40360c:	cmp	x0, #0x0
  403610:	cset	w0, eq  // eq = none
  403614:	and	w0, w0, #0xff
  403618:	and	x0, x0, #0xff
  40361c:	cmp	x0, #0x0
  403620:	b.eq	40364c <main+0xd0>  // b.none
  403624:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  403628:	add	x1, x0, #0xf73
  40362c:	adrp	x0, 407000 <_fini+0x160>
  403630:	add	x4, x0, #0x6f0
  403634:	mov	w3, #0x237                 	// #567
  403638:	mov	x2, x1
  40363c:	adrp	x0, 407000 <_fini+0x160>
  403640:	add	x1, x0, #0x4f8
  403644:	mov	w0, #0x1                   	// #1
  403648:	bl	4019f0 <log_assert_failed_realm@plt>
  40364c:	ldr	w0, [sp, #44]
  403650:	ldr	x1, [sp, #64]
  403654:	add	x2, sp, #0x48
  403658:	bl	4028e4 <set_options>
  40365c:	cmp	w0, #0x0
  403660:	b.ge	403670 <main+0xf4>  // b.tcont
  403664:	mov	w0, #0x2                   	// #2
  403668:	str	w0, [sp, #48]
  40366c:	b	403740 <main+0x1c4>
  403670:	add	x0, sp, #0x48
  403674:	mov	x2, x0
  403678:	ldr	x1, [sp, #16]
  40367c:	ldr	w0, [sp, #28]
  403680:	bl	4028e4 <set_options>
  403684:	cmp	w0, #0x0
  403688:	b.ge	403694 <main+0x118>  // b.tcont
  40368c:	mov	w0, #0x1                   	// #1
  403690:	bl	4019e0 <exit@plt>
  403694:	adrp	x0, 419000 <config_file>
  403698:	add	x0, x0, #0x232
  40369c:	ldrb	w0, [x0]
  4036a0:	eor	w0, w0, #0x1
  4036a4:	and	w0, w0, #0xff
  4036a8:	cmp	w0, #0x0
  4036ac:	b.eq	403734 <main+0x1b8>  // b.none
  4036b0:	mov	w0, #0x3                   	// #3
  4036b4:	str	w0, [sp, #52]
  4036b8:	str	wzr, [sp, #56]
  4036bc:	mov	w0, #0x1                   	// #1
  4036c0:	str	w0, [sp, #60]
  4036c4:	ldr	w0, [sp, #60]
  4036c8:	bl	401c90 <log_get_max_level_realm@plt>
  4036cc:	mov	w1, w0
  4036d0:	ldr	w0, [sp, #52]
  4036d4:	and	w0, w0, #0x7
  4036d8:	cmp	w1, w0
  4036dc:	b.lt	403720 <main+0x1a4>  // b.tstop
  4036e0:	ldr	w0, [sp, #60]
  4036e4:	lsl	w1, w0, #10
  4036e8:	ldr	w0, [sp, #52]
  4036ec:	orr	w6, w1, w0
  4036f0:	adrp	x0, 406000 <scsi_get_serial+0xb8>
  4036f4:	add	x1, x0, #0xf73
  4036f8:	adrp	x0, 407000 <_fini+0x160>
  4036fc:	add	x5, x0, #0x500
  403700:	adrp	x0, 407000 <_fini+0x160>
  403704:	add	x4, x0, #0x6f8
  403708:	mov	w3, #0x246                 	// #582
  40370c:	mov	x2, x1
  403710:	ldr	w1, [sp, #56]
  403714:	mov	w0, w6
  403718:	bl	401af0 <log_internal_realm@plt>
  40371c:	b	403728 <main+0x1ac>
  403720:	ldr	w0, [sp, #56]
  403724:	cmp	w0, #0x0
  403728:	mov	w0, #0x1                   	// #1
  40372c:	str	w0, [sp, #48]
  403730:	b	403740 <main+0x1c4>
  403734:	add	x0, sp, #0x48
  403738:	bl	403264 <scsi_id>
  40373c:	str	w0, [sp, #48]
  403740:	ldr	x0, [sp, #64]
  403744:	cmp	x0, #0x0
  403748:	b.eq	403760 <main+0x1e4>  // b.none
  40374c:	ldr	x0, [sp, #64]
  403750:	ldr	x0, [x0]
  403754:	bl	401b90 <free@plt>
  403758:	ldr	x0, [sp, #64]
  40375c:	bl	401b90 <free@plt>
  403760:	bl	401930 <log_close@plt>
  403764:	ldr	w0, [sp, #48]
  403768:	mov	w1, w0
  40376c:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  403770:	add	x0, x0, #0xbb8
  403774:	ldr	x2, [sp, #584]
  403778:	ldr	x0, [x0]
  40377c:	eor	x0, x2, x0
  403780:	cmp	x0, #0x0
  403784:	b.eq	40378c <main+0x210>  // b.none
  403788:	bl	401aa0 <__stack_chk_fail@plt>
  40378c:	mov	w0, w1
  403790:	ldp	x29, x30, [sp]
  403794:	add	sp, sp, #0x250
  403798:	ret

000000000040379c <sg_err_category_new>:
  40379c:	sub	sp, sp, #0x30
  4037a0:	str	w0, [sp, #28]
  4037a4:	str	w1, [sp, #24]
  4037a8:	str	w2, [sp, #20]
  4037ac:	str	w3, [sp, #16]
  4037b0:	str	x4, [sp, #8]
  4037b4:	str	w5, [sp, #4]
  4037b8:	ldr	w0, [sp, #28]
  4037bc:	and	w0, w0, #0x7e
  4037c0:	str	w0, [sp, #28]
  4037c4:	ldr	w0, [sp, #28]
  4037c8:	cmp	w0, #0x0
  4037cc:	b.ne	4037f0 <sg_err_category_new+0x54>  // b.any
  4037d0:	ldr	w0, [sp, #20]
  4037d4:	cmp	w0, #0x0
  4037d8:	b.ne	4037f0 <sg_err_category_new+0x54>  // b.any
  4037dc:	ldr	w0, [sp, #16]
  4037e0:	cmp	w0, #0x0
  4037e4:	b.ne	4037f0 <sg_err_category_new+0x54>  // b.any
  4037e8:	mov	w0, #0x0                   	// #0
  4037ec:	b	403984 <sg_err_category_new+0x1e8>
  4037f0:	strb	wzr, [sp, #41]
  4037f4:	ldr	w0, [sp, #28]
  4037f8:	cmp	w0, #0x2
  4037fc:	b.eq	40380c <sg_err_category_new+0x70>  // b.none
  403800:	ldr	w0, [sp, #28]
  403804:	cmp	w0, #0x22
  403808:	b.ne	403814 <sg_err_category_new+0x78>  // b.any
  40380c:	mov	w0, #0x1                   	// #1
  403810:	strb	w0, [sp, #41]
  403814:	nop
  403818:	ldrb	w0, [sp, #41]
  40381c:	cmp	w0, #0x0
  403820:	b.ne	403834 <sg_err_category_new+0x98>  // b.any
  403824:	ldr	w0, [sp, #16]
  403828:	and	w0, w0, #0xf
  40382c:	cmp	w0, #0x8
  403830:	b.ne	403920 <sg_err_category_new+0x184>  // b.any
  403834:	ldr	x0, [sp, #8]
  403838:	cmp	x0, #0x0
  40383c:	b.eq	403918 <sg_err_category_new+0x17c>  // b.none
  403840:	ldr	w0, [sp, #4]
  403844:	cmp	w0, #0x2
  403848:	b.le	403918 <sg_err_category_new+0x17c>
  40384c:	ldr	x0, [sp, #8]
  403850:	ldrb	w0, [x0]
  403854:	and	w0, w0, #0x2
  403858:	cmp	w0, #0x0
  40385c:	b.eq	403884 <sg_err_category_new+0xe8>  // b.none
  403860:	ldr	x0, [sp, #8]
  403864:	add	x0, x0, #0x1
  403868:	ldrb	w0, [x0]
  40386c:	and	w0, w0, #0xf
  403870:	str	w0, [sp, #44]
  403874:	ldr	x0, [sp, #8]
  403878:	ldrb	w0, [x0, #2]
  40387c:	strb	w0, [sp, #42]
  403880:	b	4038bc <sg_err_category_new+0x120>
  403884:	ldr	x0, [sp, #8]
  403888:	add	x0, x0, #0x2
  40388c:	ldrb	w0, [x0]
  403890:	and	w0, w0, #0xf
  403894:	str	w0, [sp, #44]
  403898:	ldr	w0, [sp, #4]
  40389c:	cmp	w0, #0xc
  4038a0:	b.le	4038b4 <sg_err_category_new+0x118>
  4038a4:	ldr	x0, [sp, #8]
  4038a8:	add	x0, x0, #0xc
  4038ac:	ldrb	w0, [x0]
  4038b0:	b	4038b8 <sg_err_category_new+0x11c>
  4038b4:	mov	w0, #0x0                   	// #0
  4038b8:	strb	w0, [sp, #42]
  4038bc:	ldr	w0, [sp, #44]
  4038c0:	cmp	w0, #0x1
  4038c4:	b.ne	4038d0 <sg_err_category_new+0x134>  // b.any
  4038c8:	mov	w0, #0x4                   	// #4
  4038cc:	b	403984 <sg_err_category_new+0x1e8>
  4038d0:	ldr	w0, [sp, #44]
  4038d4:	cmp	w0, #0x6
  4038d8:	b.ne	403904 <sg_err_category_new+0x168>  // b.any
  4038dc:	ldrb	w0, [sp, #42]
  4038e0:	cmp	w0, #0x28
  4038e4:	b.ne	4038f0 <sg_err_category_new+0x154>  // b.any
  4038e8:	mov	w0, #0x1                   	// #1
  4038ec:	b	403984 <sg_err_category_new+0x1e8>
  4038f0:	ldrb	w0, [sp, #42]
  4038f4:	cmp	w0, #0x29
  4038f8:	b.ne	403918 <sg_err_category_new+0x17c>  // b.any
  4038fc:	mov	w0, #0x2                   	// #2
  403900:	b	403984 <sg_err_category_new+0x1e8>
  403904:	ldr	w0, [sp, #44]
  403908:	cmp	w0, #0x5
  40390c:	b.ne	403918 <sg_err_category_new+0x17c>  // b.any
  403910:	mov	w0, #0x5                   	// #5
  403914:	b	403984 <sg_err_category_new+0x1e8>
  403918:	mov	w0, #0x62                  	// #98
  40391c:	b	403984 <sg_err_category_new+0x1e8>
  403920:	ldr	w0, [sp, #20]
  403924:	cmp	w0, #0x0
  403928:	b.eq	403960 <sg_err_category_new+0x1c4>  // b.none
  40392c:	strb	wzr, [sp, #43]
  403930:	ldr	w0, [sp, #20]
  403934:	sub	w0, w0, #0x1
  403938:	cmp	w0, #0x2
  40393c:	b.hi	403948 <sg_err_category_new+0x1ac>  // b.pmore
  403940:	mov	w0, #0x1                   	// #1
  403944:	strb	w0, [sp, #43]
  403948:	nop
  40394c:	ldrb	w0, [sp, #43]
  403950:	cmp	w0, #0x0
  403954:	b.eq	403960 <sg_err_category_new+0x1c4>  // b.none
  403958:	mov	w0, #0x3                   	// #3
  40395c:	b	403984 <sg_err_category_new+0x1e8>
  403960:	ldr	w0, [sp, #16]
  403964:	cmp	w0, #0x0
  403968:	b.eq	403980 <sg_err_category_new+0x1e4>  // b.none
  40396c:	ldr	w0, [sp, #16]
  403970:	cmp	w0, #0x6
  403974:	b.ne	403980 <sg_err_category_new+0x1e4>  // b.any
  403978:	mov	w0, #0x3                   	// #3
  40397c:	b	403984 <sg_err_category_new+0x1e8>
  403980:	mov	w0, #0x63                  	// #99
  403984:	add	sp, sp, #0x30
  403988:	ret

000000000040398c <sg_err_category3>:
  40398c:	stp	x29, x30, [sp, #-32]!
  403990:	mov	x29, sp
  403994:	str	x0, [sp, #24]
  403998:	ldr	x0, [sp, #24]
  40399c:	ldrb	w0, [x0, #64]
  4039a0:	mov	w6, w0
  4039a4:	ldr	x0, [sp, #24]
  4039a8:	ldrb	w0, [x0, #66]
  4039ac:	mov	w7, w0
  4039b0:	ldr	x0, [sp, #24]
  4039b4:	ldrh	w0, [x0, #68]
  4039b8:	mov	w2, w0
  4039bc:	ldr	x0, [sp, #24]
  4039c0:	ldrh	w0, [x0, #70]
  4039c4:	mov	w3, w0
  4039c8:	ldr	x0, [sp, #24]
  4039cc:	ldr	x1, [x0, #32]
  4039d0:	ldr	x0, [sp, #24]
  4039d4:	ldrb	w0, [x0, #67]
  4039d8:	mov	w5, w0
  4039dc:	mov	x4, x1
  4039e0:	mov	w1, w7
  4039e4:	mov	w0, w6
  4039e8:	bl	40379c <sg_err_category_new>
  4039ec:	ldp	x29, x30, [sp], #32
  4039f0:	ret

00000000004039f4 <sg_err_category4>:
  4039f4:	stp	x29, x30, [sp, #-32]!
  4039f8:	mov	x29, sp
  4039fc:	str	x0, [sp, #24]
  403a00:	ldr	x0, [sp, #24]
  403a04:	ldr	w0, [x0, #116]
  403a08:	mov	w6, w0
  403a0c:	ldr	x0, [sp, #24]
  403a10:	ldr	w0, [x0, #112]
  403a14:	mov	w1, w0
  403a18:	ldr	x0, [sp, #24]
  403a1c:	ldr	w0, [x0, #108]
  403a20:	mov	w2, w0
  403a24:	ldr	x0, [sp, #24]
  403a28:	ldr	x0, [x0, #48]
  403a2c:	mov	x3, x0
  403a30:	ldr	x0, [sp, #24]
  403a34:	ldr	w0, [x0, #132]
  403a38:	mov	w5, w0
  403a3c:	mov	x4, x3
  403a40:	mov	w3, w2
  403a44:	mov	w2, w1
  403a48:	mov	w1, #0x0                   	// #0
  403a4c:	mov	w0, w6
  403a50:	bl	40379c <sg_err_category_new>
  403a54:	ldp	x29, x30, [sp], #32
  403a58:	ret

0000000000403a5c <scsi_dump_sense>:
  403a5c:	sub	sp, sp, #0xd0
  403a60:	stp	x29, x30, [sp, #16]
  403a64:	add	x29, sp, #0x10
  403a68:	str	x0, [sp, #56]
  403a6c:	str	x1, [sp, #48]
  403a70:	str	w2, [sp, #44]
  403a74:	ldr	w0, [sp, #44]
  403a78:	cmp	w0, #0x0
  403a7c:	b.gt	403b1c <scsi_dump_sense+0xc0>
  403a80:	mov	w0, #0x7                   	// #7
  403a84:	str	w0, [sp, #196]
  403a88:	mov	w0, #0x16                  	// #22
  403a8c:	movk	w0, #0x4000, lsl #16
  403a90:	str	w0, [sp, #200]
  403a94:	mov	w0, #0x1                   	// #1
  403a98:	str	w0, [sp, #204]
  403a9c:	ldr	w0, [sp, #204]
  403aa0:	bl	401c90 <log_get_max_level_realm@plt>
  403aa4:	mov	w1, w0
  403aa8:	ldr	w0, [sp, #196]
  403aac:	and	w0, w0, #0x7
  403ab0:	cmp	w1, w0
  403ab4:	b.lt	403b04 <scsi_dump_sense+0xa8>  // b.tstop
  403ab8:	ldr	w0, [sp, #204]
  403abc:	lsl	w1, w0, #10
  403ac0:	ldr	w0, [sp, #196]
  403ac4:	orr	w7, w1, w0
  403ac8:	adrp	x0, 407000 <_fini+0x160>
  403acc:	add	x1, x0, #0x743
  403ad0:	ldr	x0, [sp, #56]
  403ad4:	add	x0, x0, #0x40
  403ad8:	mov	x6, x0
  403adc:	adrp	x0, 407000 <_fini+0x160>
  403ae0:	add	x5, x0, #0x768
  403ae4:	adrp	x0, 407000 <_fini+0x160>
  403ae8:	add	x4, x0, #0xad8
  403aec:	mov	w3, #0xab                  	// #171
  403af0:	mov	x2, x1
  403af4:	ldr	w1, [sp, #200]
  403af8:	mov	w0, w7
  403afc:	bl	401af0 <log_internal_realm@plt>
  403b00:	b	404164 <scsi_dump_sense+0x708>
  403b04:	ldr	w0, [sp, #200]
  403b08:	cmp	w0, #0x0
  403b0c:	cneg	w0, w0, lt  // lt = tstop
  403b10:	and	w0, w0, #0xff
  403b14:	neg	w0, w0
  403b18:	b	404164 <scsi_dump_sense+0x708>
  403b1c:	ldr	x0, [sp, #48]
  403b20:	ldrb	w0, [x0]
  403b24:	lsr	w0, w0, #4
  403b28:	and	w0, w0, #0xff
  403b2c:	and	w0, w0, #0x7
  403b30:	str	w0, [sp, #88]
  403b34:	ldr	x0, [sp, #48]
  403b38:	ldrb	w0, [x0]
  403b3c:	and	w0, w0, #0xf
  403b40:	str	w0, [sp, #92]
  403b44:	ldr	w0, [sp, #88]
  403b48:	cmp	w0, #0x7
  403b4c:	b.ne	403ecc <scsi_dump_sense+0x470>  // b.any
  403b50:	ldr	x0, [sp, #48]
  403b54:	add	x0, x0, #0x7
  403b58:	ldrb	w0, [x0]
  403b5c:	add	w0, w0, #0x8
  403b60:	str	w0, [sp, #144]
  403b64:	ldr	w1, [sp, #44]
  403b68:	ldr	w0, [sp, #144]
  403b6c:	cmp	w1, w0
  403b70:	b.ge	403c20 <scsi_dump_sense+0x1c4>  // b.tcont
  403b74:	mov	w0, #0x7                   	// #7
  403b78:	str	w0, [sp, #184]
  403b7c:	mov	w0, #0x16                  	// #22
  403b80:	movk	w0, #0x4000, lsl #16
  403b84:	str	w0, [sp, #188]
  403b88:	mov	w0, #0x1                   	// #1
  403b8c:	str	w0, [sp, #192]
  403b90:	ldr	w0, [sp, #192]
  403b94:	bl	401c90 <log_get_max_level_realm@plt>
  403b98:	mov	w1, w0
  403b9c:	ldr	w0, [sp, #184]
  403ba0:	and	w0, w0, #0x7
  403ba4:	cmp	w1, w0
  403ba8:	b.lt	403c08 <scsi_dump_sense+0x1ac>  // b.tstop
  403bac:	ldr	w0, [sp, #192]
  403bb0:	lsl	w1, w0, #10
  403bb4:	ldr	w0, [sp, #184]
  403bb8:	orr	w8, w1, w0
  403bbc:	adrp	x0, 407000 <_fini+0x160>
  403bc0:	add	x2, x0, #0x743
  403bc4:	ldr	x0, [sp, #56]
  403bc8:	add	x3, x0, #0x40
  403bcc:	ldr	w1, [sp, #144]
  403bd0:	ldr	w0, [sp, #44]
  403bd4:	sub	w0, w1, w0
  403bd8:	str	w0, [sp]
  403bdc:	ldr	w7, [sp, #44]
  403be0:	mov	x6, x3
  403be4:	adrp	x0, 407000 <_fini+0x160>
  403be8:	add	x5, x0, #0x780
  403bec:	adrp	x0, 407000 <_fini+0x160>
  403bf0:	add	x4, x0, #0xad8
  403bf4:	mov	w3, #0xb8                  	// #184
  403bf8:	ldr	w1, [sp, #188]
  403bfc:	mov	w0, w8
  403c00:	bl	401af0 <log_internal_realm@plt>
  403c04:	b	404164 <scsi_dump_sense+0x708>
  403c08:	ldr	w0, [sp, #188]
  403c0c:	cmp	w0, #0x0
  403c10:	cneg	w0, w0, lt  // lt = tstop
  403c14:	and	w0, w0, #0xff
  403c18:	neg	w0, w0
  403c1c:	b	404164 <scsi_dump_sense+0x708>
  403c20:	strb	wzr, [sp, #74]
  403c24:	ldr	w0, [sp, #92]
  403c28:	cmp	w0, #0x1
  403c2c:	b.hi	403c38 <scsi_dump_sense+0x1dc>  // b.pmore
  403c30:	mov	w0, #0x1                   	// #1
  403c34:	strb	w0, [sp, #74]
  403c38:	nop
  403c3c:	ldrb	w0, [sp, #74]
  403c40:	cmp	w0, #0x0
  403c44:	b.eq	403d2c <scsi_dump_sense+0x2d0>  // b.none
  403c48:	ldr	x0, [sp, #48]
  403c4c:	add	x0, x0, #0x2
  403c50:	ldrb	w0, [x0]
  403c54:	and	w0, w0, #0xf
  403c58:	str	w0, [sp, #76]
  403c5c:	ldr	w0, [sp, #144]
  403c60:	cmp	w0, #0xd
  403c64:	b.gt	403d08 <scsi_dump_sense+0x2ac>
  403c68:	mov	w0, #0x7                   	// #7
  403c6c:	str	w0, [sp, #160]
  403c70:	mov	w0, #0x16                  	// #22
  403c74:	movk	w0, #0x4000, lsl #16
  403c78:	str	w0, [sp, #164]
  403c7c:	mov	w0, #0x1                   	// #1
  403c80:	str	w0, [sp, #168]
  403c84:	ldr	w0, [sp, #168]
  403c88:	bl	401c90 <log_get_max_level_realm@plt>
  403c8c:	mov	w1, w0
  403c90:	ldr	w0, [sp, #160]
  403c94:	and	w0, w0, #0x7
  403c98:	cmp	w1, w0
  403c9c:	b.lt	403cf0 <scsi_dump_sense+0x294>  // b.tstop
  403ca0:	ldr	w0, [sp, #168]
  403ca4:	lsl	w1, w0, #10
  403ca8:	ldr	w0, [sp, #160]
  403cac:	orr	w8, w1, w0
  403cb0:	adrp	x0, 407000 <_fini+0x160>
  403cb4:	add	x1, x0, #0x743
  403cb8:	ldr	x0, [sp, #56]
  403cbc:	add	x0, x0, #0x40
  403cc0:	ldr	w7, [sp, #144]
  403cc4:	mov	x6, x0
  403cc8:	adrp	x0, 407000 <_fini+0x160>
  403ccc:	add	x5, x0, #0x7b8
  403cd0:	adrp	x0, 407000 <_fini+0x160>
  403cd4:	add	x4, x0, #0xad8
  403cd8:	mov	w3, #0xc3                  	// #195
  403cdc:	mov	x2, x1
  403ce0:	ldr	w1, [sp, #164]
  403ce4:	mov	w0, w8
  403ce8:	bl	401af0 <log_internal_realm@plt>
  403cec:	b	404164 <scsi_dump_sense+0x708>
  403cf0:	ldr	w0, [sp, #164]
  403cf4:	cmp	w0, #0x0
  403cf8:	cneg	w0, w0, lt  // lt = tstop
  403cfc:	and	w0, w0, #0xff
  403d00:	neg	w0, w0
  403d04:	b	404164 <scsi_dump_sense+0x708>
  403d08:	ldr	x0, [sp, #48]
  403d0c:	add	x0, x0, #0xc
  403d10:	ldrb	w0, [x0]
  403d14:	str	w0, [sp, #80]
  403d18:	ldr	x0, [sp, #48]
  403d1c:	add	x0, x0, #0xd
  403d20:	ldrb	w0, [x0]
  403d24:	str	w0, [sp, #84]
  403d28:	b	403e30 <scsi_dump_sense+0x3d4>
  403d2c:	strb	wzr, [sp, #75]
  403d30:	ldr	w0, [sp, #92]
  403d34:	sub	w0, w0, #0x2
  403d38:	cmp	w0, #0x1
  403d3c:	b.hi	403d48 <scsi_dump_sense+0x2ec>  // b.pmore
  403d40:	mov	w0, #0x1                   	// #1
  403d44:	strb	w0, [sp, #75]
  403d48:	nop
  403d4c:	ldrb	w0, [sp, #75]
  403d50:	cmp	w0, #0x0
  403d54:	b.eq	403d90 <scsi_dump_sense+0x334>  // b.none
  403d58:	ldr	x0, [sp, #48]
  403d5c:	add	x0, x0, #0x1
  403d60:	ldrb	w0, [x0]
  403d64:	and	w0, w0, #0xf
  403d68:	str	w0, [sp, #76]
  403d6c:	ldr	x0, [sp, #48]
  403d70:	add	x0, x0, #0x2
  403d74:	ldrb	w0, [x0]
  403d78:	str	w0, [sp, #80]
  403d7c:	ldr	x0, [sp, #48]
  403d80:	add	x0, x0, #0x3
  403d84:	ldrb	w0, [x0]
  403d88:	str	w0, [sp, #84]
  403d8c:	b	403e30 <scsi_dump_sense+0x3d4>
  403d90:	mov	w0, #0x7                   	// #7
  403d94:	str	w0, [sp, #148]
  403d98:	mov	w0, #0x16                  	// #22
  403d9c:	movk	w0, #0x4000, lsl #16
  403da0:	str	w0, [sp, #152]
  403da4:	mov	w0, #0x1                   	// #1
  403da8:	str	w0, [sp, #156]
  403dac:	ldr	w0, [sp, #156]
  403db0:	bl	401c90 <log_get_max_level_realm@plt>
  403db4:	mov	w1, w0
  403db8:	ldr	w0, [sp, #148]
  403dbc:	and	w0, w0, #0x7
  403dc0:	cmp	w1, w0
  403dc4:	b.lt	403e18 <scsi_dump_sense+0x3bc>  // b.tstop
  403dc8:	ldr	w0, [sp, #156]
  403dcc:	lsl	w1, w0, #10
  403dd0:	ldr	w0, [sp, #148]
  403dd4:	orr	w8, w1, w0
  403dd8:	adrp	x0, 407000 <_fini+0x160>
  403ddc:	add	x1, x0, #0x743
  403de0:	ldr	x0, [sp, #56]
  403de4:	add	x0, x0, #0x40
  403de8:	ldr	w7, [sp, #92]
  403dec:	mov	x6, x0
  403df0:	adrp	x0, 407000 <_fini+0x160>
  403df4:	add	x5, x0, #0x7e0
  403df8:	adrp	x0, 407000 <_fini+0x160>
  403dfc:	add	x4, x0, #0xad8
  403e00:	mov	w3, #0xce                  	// #206
  403e04:	mov	x2, x1
  403e08:	ldr	w1, [sp, #152]
  403e0c:	mov	w0, w8
  403e10:	bl	401af0 <log_internal_realm@plt>
  403e14:	b	404164 <scsi_dump_sense+0x708>
  403e18:	ldr	w0, [sp, #152]
  403e1c:	cmp	w0, #0x0
  403e20:	cneg	w0, w0, lt  // lt = tstop
  403e24:	and	w0, w0, #0xff
  403e28:	neg	w0, w0
  403e2c:	b	404164 <scsi_dump_sense+0x708>
  403e30:	mov	w0, #0x7                   	// #7
  403e34:	str	w0, [sp, #172]
  403e38:	str	wzr, [sp, #176]
  403e3c:	mov	w0, #0x1                   	// #1
  403e40:	str	w0, [sp, #180]
  403e44:	ldr	w0, [sp, #180]
  403e48:	bl	401c90 <log_get_max_level_realm@plt>
  403e4c:	mov	w1, w0
  403e50:	ldr	w0, [sp, #172]
  403e54:	and	w0, w0, #0x7
  403e58:	cmp	w1, w0
  403e5c:	b.lt	403ec0 <scsi_dump_sense+0x464>  // b.tstop
  403e60:	ldr	w0, [sp, #180]
  403e64:	lsl	w1, w0, #10
  403e68:	ldr	w0, [sp, #172]
  403e6c:	orr	w8, w1, w0
  403e70:	adrp	x0, 407000 <_fini+0x160>
  403e74:	add	x1, x0, #0x743
  403e78:	ldr	x0, [sp, #56]
  403e7c:	add	x2, x0, #0x40
  403e80:	ldr	w0, [sp, #84]
  403e84:	str	w0, [sp, #8]
  403e88:	ldr	w0, [sp, #80]
  403e8c:	str	w0, [sp]
  403e90:	ldr	w7, [sp, #76]
  403e94:	mov	x6, x2
  403e98:	adrp	x0, 407000 <_fini+0x160>
  403e9c:	add	x5, x0, #0x800
  403ea0:	adrp	x0, 407000 <_fini+0x160>
  403ea4:	add	x4, x0, #0xad8
  403ea8:	mov	w3, #0xd2                  	// #210
  403eac:	mov	x2, x1
  403eb0:	ldr	w1, [sp, #176]
  403eb4:	mov	w0, w8
  403eb8:	bl	401af0 <log_internal_realm@plt>
  403ebc:	b	404160 <scsi_dump_sense+0x704>
  403ec0:	ldr	w0, [sp, #176]
  403ec4:	cmp	w0, #0x0
  403ec8:	b	404160 <scsi_dump_sense+0x704>
  403ecc:	ldr	w0, [sp, #44]
  403ed0:	cmp	w0, #0x3
  403ed4:	b.gt	403f84 <scsi_dump_sense+0x528>
  403ed8:	mov	w0, #0x7                   	// #7
  403edc:	str	w0, [sp, #132]
  403ee0:	mov	w0, #0x16                  	// #22
  403ee4:	movk	w0, #0x4000, lsl #16
  403ee8:	str	w0, [sp, #136]
  403eec:	mov	w0, #0x1                   	// #1
  403ef0:	str	w0, [sp, #140]
  403ef4:	ldr	w0, [sp, #140]
  403ef8:	bl	401c90 <log_get_max_level_realm@plt>
  403efc:	mov	w1, w0
  403f00:	ldr	w0, [sp, #132]
  403f04:	and	w0, w0, #0x7
  403f08:	cmp	w1, w0
  403f0c:	b.lt	403f6c <scsi_dump_sense+0x510>  // b.tstop
  403f10:	ldr	w0, [sp, #140]
  403f14:	lsl	w1, w0, #10
  403f18:	ldr	w0, [sp, #132]
  403f1c:	orr	w8, w1, w0
  403f20:	adrp	x0, 407000 <_fini+0x160>
  403f24:	add	x2, x0, #0x743
  403f28:	ldr	x0, [sp, #56]
  403f2c:	add	x3, x0, #0x40
  403f30:	mov	w1, #0x4                   	// #4
  403f34:	ldr	w0, [sp, #44]
  403f38:	sub	w0, w1, w0
  403f3c:	str	w0, [sp]
  403f40:	ldr	w7, [sp, #44]
  403f44:	mov	x6, x3
  403f48:	adrp	x0, 407000 <_fini+0x160>
  403f4c:	add	x5, x0, #0x780
  403f50:	adrp	x0, 407000 <_fini+0x160>
  403f54:	add	x4, x0, #0xad8
  403f58:	mov	w3, #0xd6                  	// #214
  403f5c:	ldr	w1, [sp, #136]
  403f60:	mov	w0, w8
  403f64:	bl	401af0 <log_internal_realm@plt>
  403f68:	b	404164 <scsi_dump_sense+0x708>
  403f6c:	ldr	w0, [sp, #136]
  403f70:	cmp	w0, #0x0
  403f74:	cneg	w0, w0, lt  // lt = tstop
  403f78:	and	w0, w0, #0xff
  403f7c:	neg	w0, w0
  403f80:	b	404164 <scsi_dump_sense+0x708>
  403f84:	ldr	x0, [sp, #48]
  403f88:	ldrb	w0, [x0]
  403f8c:	cmp	w0, #0xe
  403f90:	b.hi	40402c <scsi_dump_sense+0x5d0>  // b.pmore
  403f94:	mov	w0, #0x7                   	// #7
  403f98:	str	w0, [sp, #108]
  403f9c:	str	wzr, [sp, #112]
  403fa0:	mov	w0, #0x1                   	// #1
  403fa4:	str	w0, [sp, #116]
  403fa8:	ldr	w0, [sp, #116]
  403fac:	bl	401c90 <log_get_max_level_realm@plt>
  403fb0:	mov	w1, w0
  403fb4:	ldr	w0, [sp, #108]
  403fb8:	and	w0, w0, #0x7
  403fbc:	cmp	w1, w0
  403fc0:	b.lt	404020 <scsi_dump_sense+0x5c4>  // b.tstop
  403fc4:	ldr	w0, [sp, #116]
  403fc8:	lsl	w1, w0, #10
  403fcc:	ldr	w0, [sp, #108]
  403fd0:	orr	w8, w1, w0
  403fd4:	adrp	x0, 407000 <_fini+0x160>
  403fd8:	add	x1, x0, #0x743
  403fdc:	ldr	x0, [sp, #56]
  403fe0:	add	x2, x0, #0x40
  403fe4:	ldr	x0, [sp, #48]
  403fe8:	ldrb	w0, [x0]
  403fec:	and	w0, w0, #0xf
  403ff0:	mov	w7, w0
  403ff4:	mov	x6, x2
  403ff8:	adrp	x0, 407000 <_fini+0x160>
  403ffc:	add	x5, x0, #0x828
  404000:	adrp	x0, 407000 <_fini+0x160>
  404004:	add	x4, x0, #0xad8
  404008:	mov	w3, #0xdc                  	// #220
  40400c:	mov	x2, x1
  404010:	ldr	w1, [sp, #112]
  404014:	mov	w0, w8
  404018:	bl	401af0 <log_internal_realm@plt>
  40401c:	b	4040d0 <scsi_dump_sense+0x674>
  404020:	ldr	w0, [sp, #112]
  404024:	cmp	w0, #0x0
  404028:	b	4040d0 <scsi_dump_sense+0x674>
  40402c:	mov	w0, #0x7                   	// #7
  404030:	str	w0, [sp, #96]
  404034:	str	wzr, [sp, #100]
  404038:	mov	w0, #0x1                   	// #1
  40403c:	str	w0, [sp, #104]
  404040:	ldr	w0, [sp, #104]
  404044:	bl	401c90 <log_get_max_level_realm@plt>
  404048:	mov	w1, w0
  40404c:	ldr	w0, [sp, #96]
  404050:	and	w0, w0, #0x7
  404054:	cmp	w1, w0
  404058:	b.lt	4040c8 <scsi_dump_sense+0x66c>  // b.tstop
  40405c:	ldr	w0, [sp, #104]
  404060:	lsl	w1, w0, #10
  404064:	ldr	w0, [sp, #96]
  404068:	orr	w8, w1, w0
  40406c:	adrp	x0, 407000 <_fini+0x160>
  404070:	add	x1, x0, #0x743
  404074:	ldr	x0, [sp, #56]
  404078:	add	x2, x0, #0x40
  40407c:	ldr	x0, [sp, #48]
  404080:	ldrb	w0, [x0]
  404084:	mov	w3, w0
  404088:	ldr	x0, [sp, #48]
  40408c:	add	x0, x0, #0x2
  404090:	ldrb	w0, [x0]
  404094:	str	w0, [sp]
  404098:	mov	w7, w3
  40409c:	mov	x6, x2
  4040a0:	adrp	x0, 407000 <_fini+0x160>
  4040a4:	add	x5, x0, #0x840
  4040a8:	adrp	x0, 407000 <_fini+0x160>
  4040ac:	add	x4, x0, #0xad8
  4040b0:	mov	w3, #0xde                  	// #222
  4040b4:	mov	x2, x1
  4040b8:	ldr	w1, [sp, #100]
  4040bc:	mov	w0, w8
  4040c0:	bl	401af0 <log_internal_realm@plt>
  4040c4:	b	4040d0 <scsi_dump_sense+0x674>
  4040c8:	ldr	w0, [sp, #100]
  4040cc:	cmp	w0, #0x0
  4040d0:	mov	w0, #0x7                   	// #7
  4040d4:	str	w0, [sp, #120]
  4040d8:	str	wzr, [sp, #124]
  4040dc:	mov	w0, #0x1                   	// #1
  4040e0:	str	w0, [sp, #128]
  4040e4:	ldr	w0, [sp, #128]
  4040e8:	bl	401c90 <log_get_max_level_realm@plt>
  4040ec:	mov	w1, w0
  4040f0:	ldr	w0, [sp, #120]
  4040f4:	and	w0, w0, #0x7
  4040f8:	cmp	w1, w0
  4040fc:	b.lt	404158 <scsi_dump_sense+0x6fc>  // b.tstop
  404100:	ldr	w0, [sp, #128]
  404104:	lsl	w1, w0, #10
  404108:	ldr	w0, [sp, #120]
  40410c:	orr	w8, w1, w0
  404110:	adrp	x0, 407000 <_fini+0x160>
  404114:	add	x1, x0, #0x743
  404118:	ldr	x0, [sp, #56]
  40411c:	add	x2, x0, #0x40
  404120:	ldr	w0, [sp, #92]
  404124:	str	w0, [sp]
  404128:	ldr	w7, [sp, #88]
  40412c:	mov	x6, x2
  404130:	adrp	x0, 407000 <_fini+0x160>
  404134:	add	x5, x0, #0x858
  404138:	adrp	x0, 407000 <_fini+0x160>
  40413c:	add	x4, x0, #0xad8
  404140:	mov	w3, #0xe0                  	// #224
  404144:	mov	x2, x1
  404148:	ldr	w1, [sp, #124]
  40414c:	mov	w0, w8
  404150:	bl	401af0 <log_internal_realm@plt>
  404154:	b	404160 <scsi_dump_sense+0x704>
  404158:	ldr	w0, [sp, #124]
  40415c:	cmp	w0, #0x0
  404160:	mov	w0, #0xffffffff            	// #-1
  404164:	ldp	x29, x30, [sp, #16]
  404168:	add	sp, sp, #0xd0
  40416c:	ret

0000000000404170 <scsi_dump>:
  404170:	sub	sp, sp, #0x60
  404174:	stp	x29, x30, [sp, #32]
  404178:	add	x29, sp, #0x20
  40417c:	str	x0, [sp, #56]
  404180:	str	x1, [sp, #48]
  404184:	ldr	x0, [sp, #48]
  404188:	ldrb	w0, [x0, #64]
  40418c:	cmp	w0, #0x0
  404190:	b.ne	40425c <scsi_dump+0xec>  // b.any
  404194:	ldr	x0, [sp, #48]
  404198:	ldrh	w0, [x0, #68]
  40419c:	cmp	w0, #0x0
  4041a0:	b.ne	40425c <scsi_dump+0xec>  // b.any
  4041a4:	ldr	x0, [sp, #48]
  4041a8:	ldrb	w0, [x0, #66]
  4041ac:	cmp	w0, #0x0
  4041b0:	b.ne	40425c <scsi_dump+0xec>  // b.any
  4041b4:	ldr	x0, [sp, #48]
  4041b8:	ldrh	w0, [x0, #70]
  4041bc:	cmp	w0, #0x0
  4041c0:	b.ne	40425c <scsi_dump+0xec>  // b.any
  4041c4:	mov	w0, #0x7                   	// #7
  4041c8:	str	w0, [sp, #72]
  4041cc:	mov	w0, #0x16                  	// #22
  4041d0:	movk	w0, #0x4000, lsl #16
  4041d4:	str	w0, [sp, #76]
  4041d8:	mov	w0, #0x1                   	// #1
  4041dc:	str	w0, [sp, #80]
  4041e0:	ldr	w0, [sp, #80]
  4041e4:	bl	401c90 <log_get_max_level_realm@plt>
  4041e8:	mov	w1, w0
  4041ec:	ldr	w0, [sp, #72]
  4041f0:	and	w0, w0, #0x7
  4041f4:	cmp	w1, w0
  4041f8:	b.lt	404244 <scsi_dump+0xd4>  // b.tstop
  4041fc:	ldr	w0, [sp, #80]
  404200:	lsl	w1, w0, #10
  404204:	ldr	w0, [sp, #72]
  404208:	orr	w7, w1, w0
  40420c:	adrp	x0, 407000 <_fini+0x160>
  404210:	add	x1, x0, #0x743
  404214:	adrp	x0, 407000 <_fini+0x160>
  404218:	add	x6, x0, #0xaf8
  40421c:	adrp	x0, 407000 <_fini+0x160>
  404220:	add	x5, x0, #0x888
  404224:	adrp	x0, 407000 <_fini+0x160>
  404228:	add	x4, x0, #0xae8
  40422c:	mov	w3, #0xee                  	// #238
  404230:	mov	x2, x1
  404234:	ldr	w1, [sp, #76]
  404238:	mov	w0, w7
  40423c:	bl	401af0 <log_internal_realm@plt>
  404240:	b	404350 <scsi_dump+0x1e0>
  404244:	ldr	w0, [sp, #76]
  404248:	cmp	w0, #0x0
  40424c:	cneg	w0, w0, lt  // lt = tstop
  404250:	and	w0, w0, #0xff
  404254:	neg	w0, w0
  404258:	b	404350 <scsi_dump+0x1e0>
  40425c:	mov	w0, #0x7                   	// #7
  404260:	str	w0, [sp, #84]
  404264:	str	wzr, [sp, #88]
  404268:	mov	w0, #0x1                   	// #1
  40426c:	str	w0, [sp, #92]
  404270:	ldr	w0, [sp, #92]
  404274:	bl	401c90 <log_get_max_level_realm@plt>
  404278:	mov	w1, w0
  40427c:	ldr	w0, [sp, #84]
  404280:	and	w0, w0, #0x7
  404284:	cmp	w1, w0
  404288:	b.lt	404314 <scsi_dump+0x1a4>  // b.tstop
  40428c:	ldr	w0, [sp, #92]
  404290:	lsl	w1, w0, #10
  404294:	ldr	w0, [sp, #84]
  404298:	orr	w8, w1, w0
  40429c:	adrp	x0, 407000 <_fini+0x160>
  4042a0:	add	x1, x0, #0x743
  4042a4:	ldr	x0, [sp, #56]
  4042a8:	add	x2, x0, #0x40
  4042ac:	ldr	x0, [sp, #48]
  4042b0:	ldrh	w0, [x0, #70]
  4042b4:	mov	w5, w0
  4042b8:	ldr	x0, [sp, #48]
  4042bc:	ldrh	w0, [x0, #68]
  4042c0:	mov	w3, w0
  4042c4:	ldr	x0, [sp, #48]
  4042c8:	ldrb	w0, [x0, #66]
  4042cc:	mov	w4, w0
  4042d0:	ldr	x0, [sp, #48]
  4042d4:	ldrb	w0, [x0, #64]
  4042d8:	str	w0, [sp, #16]
  4042dc:	str	w4, [sp, #8]
  4042e0:	str	w3, [sp]
  4042e4:	mov	w7, w5
  4042e8:	mov	x6, x2
  4042ec:	adrp	x0, 407000 <_fini+0x160>
  4042f0:	add	x5, x0, #0x8a8
  4042f4:	adrp	x0, 407000 <_fini+0x160>
  4042f8:	add	x4, x0, #0xae8
  4042fc:	mov	w3, #0xf2                  	// #242
  404300:	mov	x2, x1
  404304:	ldr	w1, [sp, #88]
  404308:	mov	w0, w8
  40430c:	bl	401af0 <log_internal_realm@plt>
  404310:	b	40431c <scsi_dump+0x1ac>
  404314:	ldr	w0, [sp, #88]
  404318:	cmp	w0, #0x0
  40431c:	ldr	x0, [sp, #48]
  404320:	ldrb	w0, [x0, #64]
  404324:	cmp	w0, #0x2
  404328:	b.ne	40434c <scsi_dump+0x1dc>  // b.any
  40432c:	ldr	x0, [sp, #48]
  404330:	ldr	x1, [x0, #32]
  404334:	ldr	x0, [sp, #48]
  404338:	ldrb	w0, [x0, #67]
  40433c:	mov	w2, w0
  404340:	ldr	x0, [sp, #56]
  404344:	bl	403a5c <scsi_dump_sense>
  404348:	b	404350 <scsi_dump+0x1e0>
  40434c:	mov	w0, #0xffffffff            	// #-1
  404350:	ldp	x29, x30, [sp, #32]
  404354:	add	sp, sp, #0x60
  404358:	ret

000000000040435c <scsi_dump_v4>:
  40435c:	sub	sp, sp, #0x50
  404360:	stp	x29, x30, [sp, #16]
  404364:	add	x29, sp, #0x10
  404368:	str	x0, [sp, #40]
  40436c:	str	x1, [sp, #32]
  404370:	ldr	x0, [sp, #32]
  404374:	ldr	w0, [x0, #116]
  404378:	cmp	w0, #0x0
  40437c:	b.ne	404438 <scsi_dump_v4+0xdc>  // b.any
  404380:	ldr	x0, [sp, #32]
  404384:	ldr	w0, [x0, #112]
  404388:	cmp	w0, #0x0
  40438c:	b.ne	404438 <scsi_dump_v4+0xdc>  // b.any
  404390:	ldr	x0, [sp, #32]
  404394:	ldr	w0, [x0, #108]
  404398:	cmp	w0, #0x0
  40439c:	b.ne	404438 <scsi_dump_v4+0xdc>  // b.any
  4043a0:	mov	w0, #0x7                   	// #7
  4043a4:	str	w0, [sp, #56]
  4043a8:	mov	w0, #0x16                  	// #22
  4043ac:	movk	w0, #0x4000, lsl #16
  4043b0:	str	w0, [sp, #60]
  4043b4:	mov	w0, #0x1                   	// #1
  4043b8:	str	w0, [sp, #64]
  4043bc:	ldr	w0, [sp, #64]
  4043c0:	bl	401c90 <log_get_max_level_realm@plt>
  4043c4:	mov	w1, w0
  4043c8:	ldr	w0, [sp, #56]
  4043cc:	and	w0, w0, #0x7
  4043d0:	cmp	w1, w0
  4043d4:	b.lt	404420 <scsi_dump_v4+0xc4>  // b.tstop
  4043d8:	ldr	w0, [sp, #64]
  4043dc:	lsl	w1, w0, #10
  4043e0:	ldr	w0, [sp, #56]
  4043e4:	orr	w7, w1, w0
  4043e8:	adrp	x0, 407000 <_fini+0x160>
  4043ec:	add	x1, x0, #0x743
  4043f0:	adrp	x0, 407000 <_fini+0x160>
  4043f4:	add	x6, x0, #0xb18
  4043f8:	adrp	x0, 407000 <_fini+0x160>
  4043fc:	add	x5, x0, #0x888
  404400:	adrp	x0, 407000 <_fini+0x160>
  404404:	add	x4, x0, #0xb08
  404408:	mov	w3, #0x100                 	// #256
  40440c:	mov	x2, x1
  404410:	ldr	w1, [sp, #60]
  404414:	mov	w0, w7
  404418:	bl	401af0 <log_internal_realm@plt>
  40441c:	b	404514 <scsi_dump_v4+0x1b8>
  404420:	ldr	w0, [sp, #60]
  404424:	cmp	w0, #0x0
  404428:	cneg	w0, w0, lt  // lt = tstop
  40442c:	and	w0, w0, #0xff
  404430:	neg	w0, w0
  404434:	b	404514 <scsi_dump_v4+0x1b8>
  404438:	mov	w0, #0x7                   	// #7
  40443c:	str	w0, [sp, #68]
  404440:	str	wzr, [sp, #72]
  404444:	mov	w0, #0x1                   	// #1
  404448:	str	w0, [sp, #76]
  40444c:	ldr	w0, [sp, #76]
  404450:	bl	401c90 <log_get_max_level_realm@plt>
  404454:	mov	w1, w0
  404458:	ldr	w0, [sp, #68]
  40445c:	and	w0, w0, #0x7
  404460:	cmp	w1, w0
  404464:	b.lt	4044d4 <scsi_dump_v4+0x178>  // b.tstop
  404468:	ldr	w0, [sp, #76]
  40446c:	lsl	w1, w0, #10
  404470:	ldr	w0, [sp, #68]
  404474:	orr	w8, w1, w0
  404478:	adrp	x0, 407000 <_fini+0x160>
  40447c:	add	x2, x0, #0x743
  404480:	ldr	x0, [sp, #40]
  404484:	add	x3, x0, #0x40
  404488:	ldr	x0, [sp, #32]
  40448c:	ldr	w4, [x0, #108]
  404490:	ldr	x0, [sp, #32]
  404494:	ldr	w0, [x0, #112]
  404498:	ldr	x1, [sp, #32]
  40449c:	ldr	w1, [x1, #116]
  4044a0:	str	w1, [sp, #8]
  4044a4:	str	w0, [sp]
  4044a8:	mov	w7, w4
  4044ac:	mov	x6, x3
  4044b0:	adrp	x0, 407000 <_fini+0x160>
  4044b4:	add	x5, x0, #0x8d8
  4044b8:	adrp	x0, 407000 <_fini+0x160>
  4044bc:	add	x4, x0, #0xb08
  4044c0:	mov	w3, #0x104                 	// #260
  4044c4:	ldr	w1, [sp, #72]
  4044c8:	mov	w0, w8
  4044cc:	bl	401af0 <log_internal_realm@plt>
  4044d0:	b	4044dc <scsi_dump_v4+0x180>
  4044d4:	ldr	w0, [sp, #72]
  4044d8:	cmp	w0, #0x0
  4044dc:	ldr	x0, [sp, #32]
  4044e0:	ldr	w0, [x0, #116]
  4044e4:	cmp	w0, #0x2
  4044e8:	b.ne	404510 <scsi_dump_v4+0x1b4>  // b.any
  4044ec:	ldr	x0, [sp, #32]
  4044f0:	ldr	x0, [x0, #48]
  4044f4:	mov	x1, x0
  4044f8:	ldr	x0, [sp, #32]
  4044fc:	ldr	w0, [x0, #132]
  404500:	mov	w2, w0
  404504:	ldr	x0, [sp, #40]
  404508:	bl	403a5c <scsi_dump_sense>
  40450c:	b	404514 <scsi_dump_v4+0x1b8>
  404510:	mov	w0, #0xffffffff            	// #-1
  404514:	ldp	x29, x30, [sp, #16]
  404518:	add	sp, sp, #0x50
  40451c:	ret

0000000000404520 <scsi_inquiry>:
  404520:	sub	sp, sp, #0x1b0
  404524:	stp	x29, x30, [sp, #16]
  404528:	add	x29, sp, #0x10
  40452c:	str	x0, [sp, #56]
  404530:	str	w1, [sp, #52]
  404534:	strb	w2, [sp, #51]
  404538:	strb	w3, [sp, #50]
  40453c:	str	x4, [sp, #40]
  404540:	str	w5, [sp, #36]
  404544:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  404548:	add	x0, x0, #0xbb8
  40454c:	ldr	x1, [x0]
  404550:	str	x1, [sp, #424]
  404554:	mov	x1, #0x0                   	// #0
  404558:	mov	w0, #0x12                  	// #18
  40455c:	strb	w0, [sp, #384]
  404560:	ldrb	w0, [sp, #51]
  404564:	strb	w0, [sp, #385]
  404568:	ldrb	w0, [sp, #50]
  40456c:	strb	w0, [sp, #386]
  404570:	strb	wzr, [sp, #387]
  404574:	ldr	w0, [sp, #36]
  404578:	and	w0, w0, #0xff
  40457c:	strb	w0, [sp, #388]
  404580:	strb	wzr, [sp, #389]
  404584:	mov	w0, #0x3                   	// #3
  404588:	str	w0, [sp, #68]
  40458c:	ldr	w0, [sp, #36]
  404590:	cmp	w0, #0xfe
  404594:	b.ls	40462c <scsi_inquiry+0x10c>  // b.plast
  404598:	mov	w0, #0x7                   	// #7
  40459c:	str	w0, [sp, #100]
  4045a0:	mov	w0, #0x16                  	// #22
  4045a4:	movk	w0, #0x4000, lsl #16
  4045a8:	str	w0, [sp, #104]
  4045ac:	mov	w0, #0x1                   	// #1
  4045b0:	str	w0, [sp, #108]
  4045b4:	ldr	w0, [sp, #108]
  4045b8:	bl	401c90 <log_get_max_level_realm@plt>
  4045bc:	mov	w1, w0
  4045c0:	ldr	w0, [sp, #100]
  4045c4:	and	w0, w0, #0x7
  4045c8:	cmp	w1, w0
  4045cc:	b.lt	404614 <scsi_inquiry+0xf4>  // b.tstop
  4045d0:	ldr	w0, [sp, #108]
  4045d4:	lsl	w1, w0, #10
  4045d8:	ldr	w0, [sp, #100]
  4045dc:	orr	w7, w1, w0
  4045e0:	adrp	x0, 407000 <_fini+0x160>
  4045e4:	add	x1, x0, #0x743
  4045e8:	ldr	w6, [sp, #36]
  4045ec:	adrp	x0, 407000 <_fini+0x160>
  4045f0:	add	x5, x0, #0x900
  4045f4:	adrp	x0, 407000 <_fini+0x160>
  4045f8:	add	x4, x0, #0xb28
  4045fc:	mov	w3, #0x11a                 	// #282
  404600:	mov	x2, x1
  404604:	ldr	w1, [sp, #104]
  404608:	mov	w0, w7
  40460c:	bl	401af0 <log_internal_realm@plt>
  404610:	b	4049c4 <scsi_inquiry+0x4a4>
  404614:	ldr	w0, [sp, #104]
  404618:	cmp	w0, #0x0
  40461c:	cneg	w0, w0, lt  // lt = tstop
  404620:	and	w0, w0, #0xff
  404624:	neg	w0, w0
  404628:	b	4049c4 <scsi_inquiry+0x4a4>
  40462c:	nop
  404630:	ldr	x0, [sp, #56]
  404634:	ldr	w0, [x0, #640]
  404638:	cmp	w0, #0x4
  40463c:	b.ne	4046b0 <scsi_inquiry+0x190>  // b.any
  404640:	mov	x0, #0xa0                  	// #160
  404644:	str	x0, [sp, #128]
  404648:	ldr	x0, [sp, #128]
  40464c:	cmp	x0, #0x0
  404650:	b.eq	404664 <scsi_inquiry+0x144>  // b.none
  404654:	add	x0, sp, #0xe0
  404658:	ldr	x2, [sp, #128]
  40465c:	mov	w1, #0x0                   	// #0
  404660:	bl	401c80 <memset@plt>
  404664:	mov	w0, #0x51                  	// #81
  404668:	str	w0, [sp, #224]
  40466c:	str	wzr, [sp, #228]
  404670:	str	wzr, [sp, #232]
  404674:	mov	w0, #0x6                   	// #6
  404678:	str	w0, [sp, #236]
  40467c:	add	x0, sp, #0x180
  404680:	str	x0, [sp, #240]
  404684:	mov	w0, #0x20                  	// #32
  404688:	str	w0, [sp, #268]
  40468c:	add	x0, sp, #0x188
  404690:	str	x0, [sp, #272]
  404694:	ldr	w0, [sp, #36]
  404698:	str	w0, [sp, #292]
  40469c:	ldr	x0, [sp, #40]
  4046a0:	str	x0, [sp, #304]
  4046a4:	add	x0, sp, #0xe0
  4046a8:	str	x0, [sp, #112]
  4046ac:	b	404724 <scsi_inquiry+0x204>
  4046b0:	mov	x0, #0x58                  	// #88
  4046b4:	str	x0, [sp, #120]
  4046b8:	ldr	x0, [sp, #120]
  4046bc:	cmp	x0, #0x0
  4046c0:	b.eq	4046d4 <scsi_inquiry+0x1b4>  // b.none
  4046c4:	add	x0, sp, #0x88
  4046c8:	ldr	x2, [sp, #120]
  4046cc:	mov	w1, #0x0                   	// #0
  4046d0:	bl	401c80 <memset@plt>
  4046d4:	mov	w0, #0x53                  	// #83
  4046d8:	str	w0, [sp, #136]
  4046dc:	mov	w0, #0x6                   	// #6
  4046e0:	strb	w0, [sp, #144]
  4046e4:	mov	w0, #0x20                  	// #32
  4046e8:	strb	w0, [sp, #145]
  4046ec:	mov	w0, #0xfffffffd            	// #-3
  4046f0:	str	w0, [sp, #140]
  4046f4:	ldr	w0, [sp, #36]
  4046f8:	str	w0, [sp, #148]
  4046fc:	ldr	x0, [sp, #40]
  404700:	str	x0, [sp, #152]
  404704:	add	x0, sp, #0x180
  404708:	str	x0, [sp, #160]
  40470c:	add	x0, sp, #0x188
  404710:	str	x0, [sp, #168]
  404714:	mov	w0, #0x1388                	// #5000
  404718:	str	w0, [sp, #176]
  40471c:	add	x0, sp, #0x88
  404720:	str	x0, [sp, #112]
  404724:	ldr	x2, [sp, #112]
  404728:	mov	x1, #0x2285                	// #8837
  40472c:	ldr	w0, [sp, #52]
  404730:	bl	401b00 <ioctl@plt>
  404734:	str	w0, [sp, #72]
  404738:	ldr	w0, [sp, #72]
  40473c:	cmp	w0, #0x0
  404740:	b.ge	404828 <scsi_inquiry+0x308>  // b.tcont
  404744:	strb	wzr, [sp, #67]
  404748:	bl	401a80 <__errno_location@plt>
  40474c:	ldr	w0, [x0]
  404750:	cmp	w0, #0x16
  404754:	b.eq	404760 <scsi_inquiry+0x240>  // b.none
  404758:	cmp	w0, #0x26
  40475c:	b.ne	404768 <scsi_inquiry+0x248>  // b.any
  404760:	mov	w0, #0x1                   	// #1
  404764:	strb	w0, [sp, #67]
  404768:	nop
  40476c:	ldrb	w0, [sp, #67]
  404770:	cmp	w0, #0x0
  404774:	b.eq	404798 <scsi_inquiry+0x278>  // b.none
  404778:	ldr	x0, [sp, #56]
  40477c:	ldr	w0, [x0, #640]
  404780:	cmp	w0, #0x4
  404784:	b.ne	404798 <scsi_inquiry+0x278>  // b.any
  404788:	ldr	x0, [sp, #56]
  40478c:	mov	w1, #0x3                   	// #3
  404790:	str	w1, [x0, #640]
  404794:	b	404630 <scsi_inquiry+0x110>
  404798:	mov	w0, #0x7                   	// #7
  40479c:	str	w0, [sp, #76]
  4047a0:	bl	401a80 <__errno_location@plt>
  4047a4:	ldr	w0, [x0]
  4047a8:	str	w0, [sp, #80]
  4047ac:	mov	w0, #0x1                   	// #1
  4047b0:	str	w0, [sp, #84]
  4047b4:	ldr	w0, [sp, #84]
  4047b8:	bl	401c90 <log_get_max_level_realm@plt>
  4047bc:	mov	w1, w0
  4047c0:	ldr	w0, [sp, #76]
  4047c4:	and	w0, w0, #0x7
  4047c8:	cmp	w1, w0
  4047cc:	b.lt	40481c <scsi_inquiry+0x2fc>  // b.tstop
  4047d0:	ldr	w0, [sp, #84]
  4047d4:	lsl	w1, w0, #10
  4047d8:	ldr	w0, [sp, #76]
  4047dc:	orr	w7, w1, w0
  4047e0:	adrp	x0, 407000 <_fini+0x160>
  4047e4:	add	x1, x0, #0x743
  4047e8:	ldr	x0, [sp, #56]
  4047ec:	add	x0, x0, #0x40
  4047f0:	mov	x6, x0
  4047f4:	adrp	x0, 407000 <_fini+0x160>
  4047f8:	add	x5, x0, #0x918
  4047fc:	adrp	x0, 407000 <_fini+0x160>
  404800:	add	x4, x0, #0xb28
  404804:	mov	w3, #0x13e                 	// #318
  404808:	mov	x2, x1
  40480c:	ldr	w1, [sp, #80]
  404810:	mov	w0, w7
  404814:	bl	401af0 <log_internal_realm@plt>
  404818:	b	404920 <scsi_inquiry+0x400>
  40481c:	ldr	w0, [sp, #80]
  404820:	cmp	w0, #0x0
  404824:	b	404920 <scsi_inquiry+0x400>
  404828:	ldr	x0, [sp, #56]
  40482c:	ldr	w0, [x0, #640]
  404830:	cmp	w0, #0x4
  404834:	b.ne	404848 <scsi_inquiry+0x328>  // b.any
  404838:	ldr	x0, [sp, #112]
  40483c:	bl	4039f4 <sg_err_category4>
  404840:	str	w0, [sp, #72]
  404844:	b	404854 <scsi_inquiry+0x334>
  404848:	ldr	x0, [sp, #112]
  40484c:	bl	40398c <sg_err_category3>
  404850:	str	w0, [sp, #72]
  404854:	ldr	w0, [sp, #72]
  404858:	cmp	w0, #0x5
  40485c:	b.eq	404888 <scsi_inquiry+0x368>  // b.none
  404860:	ldr	w0, [sp, #72]
  404864:	cmp	w0, #0x5
  404868:	b.gt	40489c <scsi_inquiry+0x37c>
  40486c:	ldr	w0, [sp, #72]
  404870:	cmp	w0, #0x0
  404874:	b.eq	404894 <scsi_inquiry+0x374>  // b.none
  404878:	ldr	w0, [sp, #72]
  40487c:	cmp	w0, #0x4
  404880:	b.eq	404894 <scsi_inquiry+0x374>  // b.none
  404884:	b	40489c <scsi_inquiry+0x37c>
  404888:	ldr	x0, [sp, #40]
  40488c:	add	x0, x0, #0x1
  404890:	strb	wzr, [x0]
  404894:	str	wzr, [sp, #72]
  404898:	b	4048d0 <scsi_inquiry+0x3b0>
  40489c:	ldr	x0, [sp, #56]
  4048a0:	ldr	w0, [x0, #640]
  4048a4:	cmp	w0, #0x4
  4048a8:	b.ne	4048c0 <scsi_inquiry+0x3a0>  // b.any
  4048ac:	ldr	x1, [sp, #112]
  4048b0:	ldr	x0, [sp, #56]
  4048b4:	bl	40435c <scsi_dump_v4>
  4048b8:	str	w0, [sp, #72]
  4048bc:	b	4048d0 <scsi_inquiry+0x3b0>
  4048c0:	ldr	x1, [sp, #112]
  4048c4:	ldr	x0, [sp, #56]
  4048c8:	bl	404170 <scsi_dump>
  4048cc:	str	w0, [sp, #72]
  4048d0:	ldr	w0, [sp, #72]
  4048d4:	cmp	w0, #0x0
  4048d8:	b.ne	4048e8 <scsi_inquiry+0x3c8>  // b.any
  4048dc:	ldr	w0, [sp, #36]
  4048e0:	str	w0, [sp, #72]
  4048e4:	b	404920 <scsi_inquiry+0x400>
  4048e8:	ldr	w0, [sp, #72]
  4048ec:	cmp	w0, #0x0
  4048f0:	b.le	40491c <scsi_inquiry+0x3fc>
  4048f4:	ldr	w0, [sp, #68]
  4048f8:	sub	w0, w0, #0x1
  4048fc:	str	w0, [sp, #68]
  404900:	ldr	w0, [sp, #68]
  404904:	cmp	w0, #0x0
  404908:	b.le	404910 <scsi_inquiry+0x3f0>
  40490c:	b	404630 <scsi_inquiry+0x110>
  404910:	mov	w0, #0xffffffff            	// #-1
  404914:	str	w0, [sp, #72]
  404918:	b	404920 <scsi_inquiry+0x400>
  40491c:	nop
  404920:	ldr	w0, [sp, #72]
  404924:	cmp	w0, #0x0
  404928:	b.ge	4049c0 <scsi_inquiry+0x4a0>  // b.tcont
  40492c:	mov	w0, #0x7                   	// #7
  404930:	str	w0, [sp, #88]
  404934:	str	wzr, [sp, #92]
  404938:	mov	w0, #0x1                   	// #1
  40493c:	str	w0, [sp, #96]
  404940:	ldr	w0, [sp, #96]
  404944:	bl	401c90 <log_get_max_level_realm@plt>
  404948:	mov	w1, w0
  40494c:	ldr	w0, [sp, #88]
  404950:	and	w0, w0, #0x7
  404954:	cmp	w1, w0
  404958:	b.lt	4049b8 <scsi_inquiry+0x498>  // b.tstop
  40495c:	ldr	w0, [sp, #96]
  404960:	lsl	w1, w0, #10
  404964:	ldr	w0, [sp, #88]
  404968:	orr	w8, w1, w0
  40496c:	adrp	x0, 407000 <_fini+0x160>
  404970:	add	x1, x0, #0x743
  404974:	ldr	x0, [sp, #56]
  404978:	add	x2, x0, #0x40
  40497c:	ldrb	w3, [sp, #51]
  404980:	ldrb	w0, [sp, #50]
  404984:	str	w0, [sp]
  404988:	mov	w7, w3
  40498c:	mov	x6, x2
  404990:	adrp	x0, 407000 <_fini+0x160>
  404994:	add	x5, x0, #0x930
  404998:	adrp	x0, 407000 <_fini+0x160>
  40499c:	add	x4, x0, #0xb28
  4049a0:	mov	w3, #0x161                 	// #353
  4049a4:	mov	x2, x1
  4049a8:	ldr	w1, [sp, #92]
  4049ac:	mov	w0, w8
  4049b0:	bl	401af0 <log_internal_realm@plt>
  4049b4:	b	4049c0 <scsi_inquiry+0x4a0>
  4049b8:	ldr	w0, [sp, #92]
  4049bc:	cmp	w0, #0x0
  4049c0:	ldr	w0, [sp, #72]
  4049c4:	mov	w1, w0
  4049c8:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  4049cc:	add	x0, x0, #0xbb8
  4049d0:	ldr	x2, [sp, #424]
  4049d4:	ldr	x0, [x0]
  4049d8:	eor	x0, x2, x0
  4049dc:	cmp	x0, #0x0
  4049e0:	b.eq	4049e8 <scsi_inquiry+0x4c8>  // b.none
  4049e4:	bl	401aa0 <__stack_chk_fail@plt>
  4049e8:	mov	w0, w1
  4049ec:	ldp	x29, x30, [sp, #16]
  4049f0:	add	sp, sp, #0x1b0
  4049f4:	ret

00000000004049f8 <do_scsi_page0_inquiry>:
  4049f8:	stp	x29, x30, [sp, #-96]!
  4049fc:	mov	x29, sp
  404a00:	str	x0, [sp, #40]
  404a04:	str	w1, [sp, #36]
  404a08:	str	x2, [sp, #24]
  404a0c:	str	w3, [sp, #32]
  404a10:	ldr	w0, [sp, #32]
  404a14:	str	x0, [sp, #88]
  404a18:	ldr	x0, [sp, #88]
  404a1c:	cmp	x0, #0x0
  404a20:	b.eq	404a34 <do_scsi_page0_inquiry+0x3c>  // b.none
  404a24:	ldr	x2, [sp, #88]
  404a28:	mov	w1, #0x0                   	// #0
  404a2c:	ldr	x0, [sp, #24]
  404a30:	bl	401c80 <memset@plt>
  404a34:	ldr	w5, [sp, #32]
  404a38:	ldr	x4, [sp, #24]
  404a3c:	mov	w3, #0x0                   	// #0
  404a40:	mov	w2, #0x1                   	// #1
  404a44:	ldr	w1, [sp, #36]
  404a48:	ldr	x0, [sp, #40]
  404a4c:	bl	404520 <scsi_inquiry>
  404a50:	str	w0, [sp, #48]
  404a54:	ldr	w0, [sp, #48]
  404a58:	cmp	w0, #0x0
  404a5c:	b.ge	404a68 <do_scsi_page0_inquiry+0x70>  // b.tcont
  404a60:	mov	w0, #0x1                   	// #1
  404a64:	b	404c80 <do_scsi_page0_inquiry+0x288>
  404a68:	ldr	x0, [sp, #24]
  404a6c:	add	x0, x0, #0x1
  404a70:	ldrb	w0, [x0]
  404a74:	cmp	w0, #0x0
  404a78:	b.eq	404b08 <do_scsi_page0_inquiry+0x110>  // b.none
  404a7c:	mov	w0, #0x7                   	// #7
  404a80:	str	w0, [sp, #76]
  404a84:	str	wzr, [sp, #80]
  404a88:	mov	w0, #0x1                   	// #1
  404a8c:	str	w0, [sp, #84]
  404a90:	ldr	w0, [sp, #84]
  404a94:	bl	401c90 <log_get_max_level_realm@plt>
  404a98:	mov	w1, w0
  404a9c:	ldr	w0, [sp, #76]
  404aa0:	and	w0, w0, #0x7
  404aa4:	cmp	w1, w0
  404aa8:	b.lt	404af8 <do_scsi_page0_inquiry+0x100>  // b.tstop
  404aac:	ldr	w0, [sp, #84]
  404ab0:	lsl	w1, w0, #10
  404ab4:	ldr	w0, [sp, #76]
  404ab8:	orr	w7, w1, w0
  404abc:	adrp	x0, 407000 <_fini+0x160>
  404ac0:	add	x1, x0, #0x743
  404ac4:	ldr	x0, [sp, #40]
  404ac8:	add	x0, x0, #0x40
  404acc:	mov	x6, x0
  404ad0:	adrp	x0, 407000 <_fini+0x160>
  404ad4:	add	x5, x0, #0x960
  404ad8:	adrp	x0, 407000 <_fini+0x160>
  404adc:	add	x4, x0, #0xb38
  404ae0:	mov	w3, #0x172                 	// #370
  404ae4:	mov	x2, x1
  404ae8:	ldr	w1, [sp, #80]
  404aec:	mov	w0, w7
  404af0:	bl	401af0 <log_internal_realm@plt>
  404af4:	b	404b00 <do_scsi_page0_inquiry+0x108>
  404af8:	ldr	w0, [sp, #80]
  404afc:	cmp	w0, #0x0
  404b00:	mov	w0, #0x1                   	// #1
  404b04:	b	404c80 <do_scsi_page0_inquiry+0x288>
  404b08:	ldr	x0, [sp, #24]
  404b0c:	add	x0, x0, #0x3
  404b10:	ldrb	w0, [x0]
  404b14:	mov	w1, w0
  404b18:	ldr	w0, [sp, #32]
  404b1c:	cmp	w0, w1
  404b20:	b.cs	404bc0 <do_scsi_page0_inquiry+0x1c8>  // b.hs, b.nlast
  404b24:	mov	w0, #0x7                   	// #7
  404b28:	str	w0, [sp, #64]
  404b2c:	str	wzr, [sp, #68]
  404b30:	mov	w0, #0x1                   	// #1
  404b34:	str	w0, [sp, #72]
  404b38:	ldr	w0, [sp, #72]
  404b3c:	bl	401c90 <log_get_max_level_realm@plt>
  404b40:	mov	w1, w0
  404b44:	ldr	w0, [sp, #64]
  404b48:	and	w0, w0, #0x7
  404b4c:	cmp	w1, w0
  404b50:	b.lt	404bb0 <do_scsi_page0_inquiry+0x1b8>  // b.tstop
  404b54:	ldr	w0, [sp, #72]
  404b58:	lsl	w1, w0, #10
  404b5c:	ldr	w0, [sp, #64]
  404b60:	orr	w8, w1, w0
  404b64:	adrp	x0, 407000 <_fini+0x160>
  404b68:	add	x1, x0, #0x743
  404b6c:	ldr	x0, [sp, #40]
  404b70:	add	x2, x0, #0x40
  404b74:	ldr	x0, [sp, #24]
  404b78:	add	x0, x0, #0x3
  404b7c:	ldrb	w0, [x0]
  404b80:	mov	w7, w0
  404b84:	mov	x6, x2
  404b88:	adrp	x0, 407000 <_fini+0x160>
  404b8c:	add	x5, x0, #0x980
  404b90:	adrp	x0, 407000 <_fini+0x160>
  404b94:	add	x4, x0, #0xb38
  404b98:	mov	w3, #0x176                 	// #374
  404b9c:	mov	x2, x1
  404ba0:	ldr	w1, [sp, #68]
  404ba4:	mov	w0, w8
  404ba8:	bl	401af0 <log_internal_realm@plt>
  404bac:	b	404bb8 <do_scsi_page0_inquiry+0x1c0>
  404bb0:	ldr	w0, [sp, #68]
  404bb4:	cmp	w0, #0x0
  404bb8:	mov	w0, #0x1                   	// #1
  404bbc:	b	404c80 <do_scsi_page0_inquiry+0x288>
  404bc0:	ldr	x0, [sp, #24]
  404bc4:	add	x0, x0, #0x3
  404bc8:	ldrb	w0, [x0]
  404bcc:	cmp	w0, #0x10
  404bd0:	b.ls	404c7c <do_scsi_page0_inquiry+0x284>  // b.plast
  404bd4:	ldr	x0, [sp, #24]
  404bd8:	add	x0, x0, #0x8
  404bdc:	ldr	x1, [sp, #40]
  404be0:	mov	x2, #0x8                   	// #8
  404be4:	bl	401a40 <strncmp@plt>
  404be8:	cmp	w0, #0x0
  404bec:	b.ne	404c7c <do_scsi_page0_inquiry+0x284>  // b.any
  404bf0:	mov	w0, #0x7                   	// #7
  404bf4:	str	w0, [sp, #52]
  404bf8:	str	wzr, [sp, #56]
  404bfc:	mov	w0, #0x1                   	// #1
  404c00:	str	w0, [sp, #60]
  404c04:	ldr	w0, [sp, #60]
  404c08:	bl	401c90 <log_get_max_level_realm@plt>
  404c0c:	mov	w1, w0
  404c10:	ldr	w0, [sp, #52]
  404c14:	and	w0, w0, #0x7
  404c18:	cmp	w1, w0
  404c1c:	b.lt	404c6c <do_scsi_page0_inquiry+0x274>  // b.tstop
  404c20:	ldr	w0, [sp, #60]
  404c24:	lsl	w1, w0, #10
  404c28:	ldr	w0, [sp, #52]
  404c2c:	orr	w7, w1, w0
  404c30:	adrp	x0, 407000 <_fini+0x160>
  404c34:	add	x1, x0, #0x743
  404c38:	ldr	x0, [sp, #40]
  404c3c:	add	x0, x0, #0x40
  404c40:	mov	x6, x0
  404c44:	adrp	x0, 407000 <_fini+0x160>
  404c48:	add	x5, x0, #0x9a0
  404c4c:	adrp	x0, 407000 <_fini+0x160>
  404c50:	add	x4, x0, #0xb38
  404c54:	mov	w3, #0x187                 	// #391
  404c58:	mov	x2, x1
  404c5c:	ldr	w1, [sp, #56]
  404c60:	mov	w0, w7
  404c64:	bl	401af0 <log_internal_realm@plt>
  404c68:	b	404c74 <do_scsi_page0_inquiry+0x27c>
  404c6c:	ldr	w0, [sp, #56]
  404c70:	cmp	w0, #0x0
  404c74:	mov	w0, #0x1                   	// #1
  404c78:	b	404c80 <do_scsi_page0_inquiry+0x288>
  404c7c:	mov	w0, #0x0                   	// #0
  404c80:	ldp	x29, x30, [sp], #96
  404c84:	ret

0000000000404c88 <append_vendor_model>:
  404c88:	stp	x29, x30, [sp, #-64]!
  404c8c:	mov	x29, sp
  404c90:	str	x0, [sp, #24]
  404c94:	str	x1, [sp, #16]
  404c98:	ldr	x0, [sp, #24]
  404c9c:	cmp	x0, #0x0
  404ca0:	cset	w0, eq  // eq = none
  404ca4:	and	w0, w0, #0xff
  404ca8:	and	x0, x0, #0xff
  404cac:	cmp	x0, #0x0
  404cb0:	b.eq	404cdc <append_vendor_model+0x54>  // b.none
  404cb4:	adrp	x0, 407000 <_fini+0x160>
  404cb8:	add	x1, x0, #0x743
  404cbc:	adrp	x0, 407000 <_fini+0x160>
  404cc0:	add	x4, x0, #0xb50
  404cc4:	mov	w3, #0x192                 	// #402
  404cc8:	mov	x2, x1
  404ccc:	adrp	x0, 407000 <_fini+0x160>
  404cd0:	add	x1, x0, #0x9b8
  404cd4:	mov	w0, #0x1                   	// #1
  404cd8:	bl	4019f0 <log_assert_failed_realm@plt>
  404cdc:	ldr	x0, [sp, #16]
  404ce0:	cmp	x0, #0x0
  404ce4:	cset	w0, eq  // eq = none
  404ce8:	and	w0, w0, #0xff
  404cec:	and	x0, x0, #0xff
  404cf0:	cmp	x0, #0x0
  404cf4:	b.eq	404d20 <append_vendor_model+0x98>  // b.none
  404cf8:	adrp	x0, 407000 <_fini+0x160>
  404cfc:	add	x1, x0, #0x743
  404d00:	adrp	x0, 407000 <_fini+0x160>
  404d04:	add	x4, x0, #0xb50
  404d08:	mov	w3, #0x193                 	// #403
  404d0c:	mov	x2, x1
  404d10:	adrp	x0, 407000 <_fini+0x160>
  404d14:	add	x1, x0, #0x9c8
  404d18:	mov	w0, #0x1                   	// #1
  404d1c:	bl	4019f0 <log_assert_failed_realm@plt>
  404d20:	ldr	x0, [sp, #24]
  404d24:	mov	x1, #0x8                   	// #8
  404d28:	bl	401990 <strnlen@plt>
  404d2c:	cmp	x0, #0x8
  404d30:	b.eq	404dd8 <append_vendor_model+0x150>  // b.none
  404d34:	mov	w0, #0x7                   	// #7
  404d38:	str	w0, [sp, #52]
  404d3c:	mov	w0, #0x16                  	// #22
  404d40:	movk	w0, #0x4000, lsl #16
  404d44:	str	w0, [sp, #56]
  404d48:	mov	w0, #0x1                   	// #1
  404d4c:	str	w0, [sp, #60]
  404d50:	ldr	w0, [sp, #60]
  404d54:	bl	401c90 <log_get_max_level_realm@plt>
  404d58:	mov	w1, w0
  404d5c:	ldr	w0, [sp, #52]
  404d60:	and	w0, w0, #0x7
  404d64:	cmp	w1, w0
  404d68:	b.lt	404dc0 <append_vendor_model+0x138>  // b.tstop
  404d6c:	ldr	w0, [sp, #60]
  404d70:	lsl	w1, w0, #10
  404d74:	ldr	w0, [sp, #52]
  404d78:	orr	w8, w1, w0
  404d7c:	adrp	x0, 407000 <_fini+0x160>
  404d80:	add	x1, x0, #0x743
  404d84:	ldr	x0, [sp, #24]
  404d88:	add	x0, x0, #0x40
  404d8c:	ldr	x2, [sp, #24]
  404d90:	mov	x7, x2
  404d94:	mov	x6, x0
  404d98:	adrp	x0, 407000 <_fini+0x160>
  404d9c:	add	x5, x0, #0x9d0
  404da0:	adrp	x0, 407000 <_fini+0x160>
  404da4:	add	x4, x0, #0xb68
  404da8:	mov	w3, #0x196                 	// #406
  404dac:	mov	x2, x1
  404db0:	ldr	w1, [sp, #56]
  404db4:	mov	w0, w8
  404db8:	bl	401af0 <log_internal_realm@plt>
  404dbc:	b	404ec4 <append_vendor_model+0x23c>
  404dc0:	ldr	w0, [sp, #56]
  404dc4:	cmp	w0, #0x0
  404dc8:	cneg	w0, w0, lt  // lt = tstop
  404dcc:	and	w0, w0, #0xff
  404dd0:	neg	w0, w0
  404dd4:	b	404ec4 <append_vendor_model+0x23c>
  404dd8:	ldr	x0, [sp, #24]
  404ddc:	add	x0, x0, #0x9
  404de0:	mov	x1, #0x10                  	// #16
  404de4:	bl	401990 <strnlen@plt>
  404de8:	cmp	x0, #0x10
  404dec:	b.eq	404e98 <append_vendor_model+0x210>  // b.none
  404df0:	mov	w0, #0x7                   	// #7
  404df4:	str	w0, [sp, #40]
  404df8:	mov	w0, #0x16                  	// #22
  404dfc:	movk	w0, #0x4000, lsl #16
  404e00:	str	w0, [sp, #44]
  404e04:	mov	w0, #0x1                   	// #1
  404e08:	str	w0, [sp, #48]
  404e0c:	ldr	w0, [sp, #48]
  404e10:	bl	401c90 <log_get_max_level_realm@plt>
  404e14:	mov	w1, w0
  404e18:	ldr	w0, [sp, #40]
  404e1c:	and	w0, w0, #0x7
  404e20:	cmp	w1, w0
  404e24:	b.lt	404e80 <append_vendor_model+0x1f8>  // b.tstop
  404e28:	ldr	w0, [sp, #48]
  404e2c:	lsl	w1, w0, #10
  404e30:	ldr	w0, [sp, #40]
  404e34:	orr	w8, w1, w0
  404e38:	adrp	x0, 407000 <_fini+0x160>
  404e3c:	add	x1, x0, #0x743
  404e40:	ldr	x0, [sp, #24]
  404e44:	add	x2, x0, #0x40
  404e48:	ldr	x0, [sp, #24]
  404e4c:	add	x0, x0, #0x9
  404e50:	mov	x7, x0
  404e54:	mov	x6, x2
  404e58:	adrp	x0, 407000 <_fini+0x160>
  404e5c:	add	x5, x0, #0x9f0
  404e60:	adrp	x0, 407000 <_fini+0x160>
  404e64:	add	x4, x0, #0xb68
  404e68:	mov	w3, #0x19a                 	// #410
  404e6c:	mov	x2, x1
  404e70:	ldr	w1, [sp, #44]
  404e74:	mov	w0, w8
  404e78:	bl	401af0 <log_internal_realm@plt>
  404e7c:	b	404ec4 <append_vendor_model+0x23c>
  404e80:	ldr	w0, [sp, #44]
  404e84:	cmp	w0, #0x0
  404e88:	cneg	w0, w0, lt  // lt = tstop
  404e8c:	and	w0, w0, #0xff
  404e90:	neg	w0, w0
  404e94:	b	404ec4 <append_vendor_model+0x23c>
  404e98:	ldr	x0, [sp, #24]
  404e9c:	ldr	x1, [x0]
  404ea0:	ldr	x0, [sp, #16]
  404ea4:	str	x1, [x0]
  404ea8:	ldr	x0, [sp, #16]
  404eac:	add	x2, x0, #0x8
  404eb0:	ldr	x0, [sp, #24]
  404eb4:	add	x0, x0, #0x9
  404eb8:	ldp	x0, x1, [x0]
  404ebc:	stp	x0, x1, [x2]
  404ec0:	mov	w0, #0x18                  	// #24
  404ec4:	ldp	x29, x30, [sp], #64
  404ec8:	ret

0000000000404ecc <check_fill_0x83_id>:
  404ecc:	sub	sp, sp, #0x80
  404ed0:	stp	x29, x30, [sp, #16]
  404ed4:	add	x29, sp, #0x10
  404ed8:	str	x0, [sp, #88]
  404edc:	str	x1, [sp, #80]
  404ee0:	str	x2, [sp, #72]
  404ee4:	str	x3, [sp, #64]
  404ee8:	str	x4, [sp, #56]
  404eec:	str	w5, [sp, #52]
  404ef0:	str	x6, [sp, #40]
  404ef4:	str	x7, [sp, #32]
  404ef8:	ldr	x0, [sp, #80]
  404efc:	add	x0, x0, #0x1
  404f00:	ldrb	w0, [x0]
  404f04:	and	w0, w0, #0x30
  404f08:	cmp	w0, #0x10
  404f0c:	b.ne	404f28 <check_fill_0x83_id+0x5c>  // b.any
  404f10:	ldr	x0, [sp, #72]
  404f14:	ldrb	w0, [x0]
  404f18:	cmp	w0, #0x5
  404f1c:	b.eq	404f48 <check_fill_0x83_id+0x7c>  // b.none
  404f20:	mov	w0, #0x1                   	// #1
  404f24:	b	405340 <check_fill_0x83_id+0x474>
  404f28:	ldr	x0, [sp, #80]
  404f2c:	add	x0, x0, #0x1
  404f30:	ldrb	w0, [x0]
  404f34:	and	w0, w0, #0x30
  404f38:	cmp	w0, #0x0
  404f3c:	b.eq	404f48 <check_fill_0x83_id+0x7c>  // b.none
  404f40:	mov	w0, #0x1                   	// #1
  404f44:	b	405340 <check_fill_0x83_id+0x474>
  404f48:	ldr	x0, [sp, #80]
  404f4c:	add	x0, x0, #0x1
  404f50:	ldrb	w0, [x0]
  404f54:	and	w0, w0, #0xf
  404f58:	ldr	x1, [sp, #72]
  404f5c:	ldrb	w1, [x1]
  404f60:	cmp	w0, w1
  404f64:	b.eq	404f70 <check_fill_0x83_id+0xa4>  // b.none
  404f68:	mov	w0, #0x1                   	// #1
  404f6c:	b	405340 <check_fill_0x83_id+0x474>
  404f70:	ldr	x0, [sp, #72]
  404f74:	ldrb	w0, [x0, #1]
  404f78:	cmp	w0, #0xff
  404f7c:	b.eq	404fac <check_fill_0x83_id+0xe0>  // b.none
  404f80:	ldr	x0, [sp, #72]
  404f84:	ldrb	w1, [x0, #1]
  404f88:	ldr	x0, [sp, #80]
  404f8c:	add	x0, x0, #0x4
  404f90:	ldrb	w0, [x0]
  404f94:	lsr	w0, w0, #4
  404f98:	and	w0, w0, #0xff
  404f9c:	cmp	w1, w0
  404fa0:	b.eq	404fac <check_fill_0x83_id+0xe0>  // b.none
  404fa4:	mov	w0, #0x1                   	// #1
  404fa8:	b	405340 <check_fill_0x83_id+0x474>
  404fac:	ldr	x0, [sp, #80]
  404fb0:	ldrb	w0, [x0]
  404fb4:	and	w0, w0, #0xf
  404fb8:	ldr	x1, [sp, #72]
  404fbc:	ldrb	w1, [x1, #2]
  404fc0:	cmp	w0, w1
  404fc4:	b.eq	404fd0 <check_fill_0x83_id+0x104>  // b.none
  404fc8:	mov	w0, #0x1                   	// #1
  404fcc:	b	405340 <check_fill_0x83_id+0x474>
  404fd0:	ldr	x0, [sp, #80]
  404fd4:	add	x0, x0, #0x3
  404fd8:	ldrb	w0, [x0]
  404fdc:	str	w0, [sp, #104]
  404fe0:	ldr	x0, [sp, #80]
  404fe4:	ldrb	w0, [x0]
  404fe8:	and	w0, w0, #0xf
  404fec:	cmp	w0, #0x2
  404ff0:	b.eq	405000 <check_fill_0x83_id+0x134>  // b.none
  404ff4:	ldr	w0, [sp, #104]
  404ff8:	lsl	w0, w0, #1
  404ffc:	str	w0, [sp, #104]
  405000:	ldr	w0, [sp, #104]
  405004:	add	w0, w0, #0x2
  405008:	str	w0, [sp, #104]
  40500c:	ldr	x0, [sp, #72]
  405010:	ldrb	w0, [x0]
  405014:	cmp	w0, #0x0
  405018:	b.ne	405028 <check_fill_0x83_id+0x15c>  // b.any
  40501c:	ldr	w0, [sp, #104]
  405020:	add	w0, w0, #0x18
  405024:	str	w0, [sp, #104]
  405028:	ldr	w1, [sp, #52]
  40502c:	ldr	w0, [sp, #104]
  405030:	cmp	w1, w0
  405034:	b.ge	4050d0 <check_fill_0x83_id+0x204>  // b.tcont
  405038:	mov	w0, #0x7                   	// #7
  40503c:	str	w0, [sp, #116]
  405040:	str	wzr, [sp, #120]
  405044:	mov	w0, #0x1                   	// #1
  405048:	str	w0, [sp, #124]
  40504c:	ldr	w0, [sp, #124]
  405050:	bl	401c90 <log_get_max_level_realm@plt>
  405054:	mov	w1, w0
  405058:	ldr	w0, [sp, #116]
  40505c:	and	w0, w0, #0x7
  405060:	cmp	w1, w0
  405064:	b.lt	4050c0 <check_fill_0x83_id+0x1f4>  // b.tstop
  405068:	ldr	w0, [sp, #124]
  40506c:	lsl	w1, w0, #10
  405070:	ldr	w0, [sp, #116]
  405074:	orr	w8, w1, w0
  405078:	adrp	x0, 407000 <_fini+0x160>
  40507c:	add	x1, x0, #0x743
  405080:	ldr	x0, [sp, #88]
  405084:	add	x2, x0, #0x40
  405088:	ldr	w0, [sp, #104]
  40508c:	str	w0, [sp]
  405090:	ldr	w7, [sp, #52]
  405094:	mov	x6, x2
  405098:	adrp	x0, 407000 <_fini+0x160>
  40509c:	add	x5, x0, #0xa10
  4050a0:	adrp	x0, 407000 <_fini+0x160>
  4050a4:	add	x4, x0, #0xb80
  4050a8:	mov	w3, #0x1da                 	// #474
  4050ac:	mov	x2, x1
  4050b0:	ldr	w1, [sp, #120]
  4050b4:	mov	w0, w8
  4050b8:	bl	401af0 <log_internal_realm@plt>
  4050bc:	b	4050c8 <check_fill_0x83_id+0x1fc>
  4050c0:	ldr	w0, [sp, #120]
  4050c4:	cmp	w0, #0x0
  4050c8:	mov	w0, #0x1                   	// #1
  4050cc:	b	405340 <check_fill_0x83_id+0x474>
  4050d0:	ldr	x0, [sp, #72]
  4050d4:	ldrb	w0, [x0]
  4050d8:	cmp	w0, #0x5
  4050dc:	b.ne	40512c <check_fill_0x83_id+0x260>  // b.any
  4050e0:	ldr	x0, [sp, #128]
  4050e4:	cmp	x0, #0x0
  4050e8:	b.eq	40512c <check_fill_0x83_id+0x260>  // b.none
  4050ec:	ldr	x0, [sp, #80]
  4050f0:	add	x0, x0, #0x6
  4050f4:	ldrb	w0, [x0]
  4050f8:	lsl	w0, w0, #8
  4050fc:	ldr	x1, [sp, #80]
  405100:	add	x1, x1, #0x7
  405104:	ldrb	w1, [x1]
  405108:	orr	w0, w0, w1
  40510c:	str	w0, [sp, #108]
  405110:	ldr	w2, [sp, #108]
  405114:	adrp	x0, 407000 <_fini+0x160>
  405118:	add	x1, x0, #0xa38
  40511c:	ldr	x0, [sp, #128]
  405120:	bl	401bc0 <sprintf@plt>
  405124:	mov	w0, #0x1                   	// #1
  405128:	b	405340 <check_fill_0x83_id+0x474>
  40512c:	ldr	x0, [sp, #72]
  405130:	ldrb	w0, [x0]
  405134:	mov	w2, w0
  405138:	adrp	x0, 407000 <_fini+0x160>
  40513c:	add	x1, x0, #0x728
  405140:	sxtw	x0, w2
  405144:	ldrb	w1, [x1, x0]
  405148:	ldr	x0, [sp, #64]
  40514c:	strb	w1, [x0]
  405150:	ldr	x0, [sp, #72]
  405154:	ldrb	w0, [x0]
  405158:	cmp	w0, #0x0
  40515c:	b.ne	405184 <check_fill_0x83_id+0x2b8>  // b.any
  405160:	ldr	x0, [sp, #64]
  405164:	add	x0, x0, #0x1
  405168:	mov	x1, x0
  40516c:	ldr	x0, [sp, #88]
  405170:	bl	404c88 <append_vendor_model>
  405174:	cmp	w0, #0x0
  405178:	b.ge	405184 <check_fill_0x83_id+0x2b8>  // b.tcont
  40517c:	mov	w0, #0x1                   	// #1
  405180:	b	405340 <check_fill_0x83_id+0x474>
  405184:	mov	w0, #0x4                   	// #4
  405188:	str	w0, [sp, #96]
  40518c:	ldr	x0, [sp, #64]
  405190:	bl	401c20 <strlen@plt>
  405194:	str	w0, [sp, #100]
  405198:	ldr	w0, [sp, #100]
  40519c:	str	w0, [sp, #112]
  4051a0:	ldr	x0, [sp, #80]
  4051a4:	ldrb	w0, [x0]
  4051a8:	and	w0, w0, #0xf
  4051ac:	cmp	w0, #0x2
  4051b0:	b.ne	4052a4 <check_fill_0x83_id+0x3d8>  // b.any
  4051b4:	b	4051f0 <check_fill_0x83_id+0x324>
  4051b8:	ldr	w0, [sp, #96]
  4051bc:	add	w1, w0, #0x1
  4051c0:	str	w1, [sp, #96]
  4051c4:	sxtw	x0, w0
  4051c8:	ldr	x1, [sp, #80]
  4051cc:	add	x1, x1, x0
  4051d0:	ldr	w0, [sp, #100]
  4051d4:	add	w2, w0, #0x1
  4051d8:	str	w2, [sp, #100]
  4051dc:	sxtw	x0, w0
  4051e0:	ldr	x2, [sp, #64]
  4051e4:	add	x0, x2, x0
  4051e8:	ldrb	w1, [x1]
  4051ec:	strb	w1, [x0]
  4051f0:	ldr	x0, [sp, #80]
  4051f4:	add	x0, x0, #0x3
  4051f8:	ldrb	w0, [x0]
  4051fc:	add	w0, w0, #0x3
  405200:	ldr	w1, [sp, #96]
  405204:	cmp	w1, w0
  405208:	b.le	4051b8 <check_fill_0x83_id+0x2ec>
  40520c:	b	4052c0 <check_fill_0x83_id+0x3f4>
  405210:	ldrsw	x0, [sp, #96]
  405214:	ldr	x1, [sp, #80]
  405218:	add	x0, x1, x0
  40521c:	ldrb	w0, [x0]
  405220:	lsr	w0, w0, #4
  405224:	and	w0, w0, #0xff
  405228:	mov	w3, w0
  40522c:	ldr	w0, [sp, #100]
  405230:	add	w1, w0, #0x1
  405234:	str	w1, [sp, #100]
  405238:	sxtw	x0, w0
  40523c:	ldr	x1, [sp, #64]
  405240:	add	x0, x1, x0
  405244:	adrp	x1, 407000 <_fini+0x160>
  405248:	add	x2, x1, #0x728
  40524c:	sxtw	x1, w3
  405250:	ldrb	w1, [x2, x1]
  405254:	strb	w1, [x0]
  405258:	ldrsw	x0, [sp, #96]
  40525c:	ldr	x1, [sp, #80]
  405260:	add	x0, x1, x0
  405264:	ldrb	w0, [x0]
  405268:	and	w3, w0, #0xf
  40526c:	ldr	w0, [sp, #100]
  405270:	add	w1, w0, #0x1
  405274:	str	w1, [sp, #100]
  405278:	sxtw	x0, w0
  40527c:	ldr	x1, [sp, #64]
  405280:	add	x0, x1, x0
  405284:	adrp	x1, 407000 <_fini+0x160>
  405288:	add	x2, x1, #0x728
  40528c:	sxtw	x1, w3
  405290:	ldrb	w1, [x2, x1]
  405294:	strb	w1, [x0]
  405298:	ldr	w0, [sp, #96]
  40529c:	add	w0, w0, #0x1
  4052a0:	str	w0, [sp, #96]
  4052a4:	ldr	x0, [sp, #80]
  4052a8:	add	x0, x0, #0x3
  4052ac:	ldrb	w0, [x0]
  4052b0:	add	w0, w0, #0x3
  4052b4:	ldr	w1, [sp, #96]
  4052b8:	cmp	w1, w0
  4052bc:	b.le	405210 <check_fill_0x83_id+0x344>
  4052c0:	ldrsw	x0, [sp, #112]
  4052c4:	ldr	x1, [sp, #64]
  4052c8:	add	x0, x1, x0
  4052cc:	mov	x1, x0
  4052d0:	ldr	x0, [sp, #56]
  4052d4:	bl	401bf0 <strcpy@plt>
  4052d8:	ldr	x0, [sp, #72]
  4052dc:	ldrb	w0, [x0]
  4052e0:	cmp	w0, #0x3
  4052e4:	b.ne	40533c <check_fill_0x83_id+0x470>  // b.any
  4052e8:	ldr	x0, [sp, #40]
  4052ec:	cmp	x0, #0x0
  4052f0:	b.eq	40533c <check_fill_0x83_id+0x470>  // b.none
  4052f4:	ldrsw	x0, [sp, #112]
  4052f8:	ldr	x1, [sp, #64]
  4052fc:	add	x0, x1, x0
  405300:	mov	x2, #0x10                  	// #16
  405304:	mov	x1, x0
  405308:	ldr	x0, [sp, #40]
  40530c:	bl	4019d0 <strncpy@plt>
  405310:	ldr	x0, [sp, #32]
  405314:	cmp	x0, #0x0
  405318:	b.eq	40533c <check_fill_0x83_id+0x470>  // b.none
  40531c:	ldrsw	x0, [sp, #112]
  405320:	add	x0, x0, #0x10
  405324:	ldr	x1, [sp, #64]
  405328:	add	x0, x1, x0
  40532c:	mov	x2, #0x10                  	// #16
  405330:	mov	x1, x0
  405334:	ldr	x0, [sp, #32]
  405338:	bl	4019d0 <strncpy@plt>
  40533c:	mov	w0, #0x0                   	// #0
  405340:	ldp	x29, x30, [sp, #16]
  405344:	add	sp, sp, #0x80
  405348:	ret

000000000040534c <check_fill_0x83_prespc3>:
  40534c:	stp	x29, x30, [sp, #-80]!
  405350:	mov	x29, sp
  405354:	str	x0, [sp, #56]
  405358:	str	x1, [sp, #48]
  40535c:	str	x2, [sp, #40]
  405360:	str	x3, [sp, #32]
  405364:	str	x4, [sp, #24]
  405368:	str	w5, [sp, #20]
  40536c:	mov	w1, #0x33                  	// #51
  405370:	ldr	x0, [sp, #32]
  405374:	strb	w1, [x0]
  405378:	ldr	x0, [sp, #32]
  40537c:	bl	401c20 <strlen@plt>
  405380:	str	w0, [sp, #76]
  405384:	str	wzr, [sp, #72]
  405388:	b	405430 <check_fill_0x83_prespc3+0xe4>
  40538c:	ldr	w0, [sp, #72]
  405390:	add	w0, w0, #0x4
  405394:	sxtw	x0, w0
  405398:	ldr	x1, [sp, #48]
  40539c:	add	x0, x1, x0
  4053a0:	ldrb	w0, [x0]
  4053a4:	lsr	w0, w0, #4
  4053a8:	and	w0, w0, #0xff
  4053ac:	mov	w3, w0
  4053b0:	ldr	w0, [sp, #76]
  4053b4:	add	w1, w0, #0x1
  4053b8:	str	w1, [sp, #76]
  4053bc:	sxtw	x0, w0
  4053c0:	ldr	x1, [sp, #32]
  4053c4:	add	x0, x1, x0
  4053c8:	adrp	x1, 407000 <_fini+0x160>
  4053cc:	add	x2, x1, #0x728
  4053d0:	sxtw	x1, w3
  4053d4:	ldrb	w1, [x2, x1]
  4053d8:	strb	w1, [x0]
  4053dc:	ldr	w0, [sp, #72]
  4053e0:	add	w0, w0, #0x4
  4053e4:	sxtw	x0, w0
  4053e8:	ldr	x1, [sp, #48]
  4053ec:	add	x0, x1, x0
  4053f0:	ldrb	w0, [x0]
  4053f4:	and	w3, w0, #0xf
  4053f8:	ldr	w0, [sp, #76]
  4053fc:	add	w1, w0, #0x1
  405400:	str	w1, [sp, #76]
  405404:	sxtw	x0, w0
  405408:	ldr	x1, [sp, #32]
  40540c:	add	x0, x1, x0
  405410:	adrp	x1, 407000 <_fini+0x160>
  405414:	add	x2, x1, #0x728
  405418:	sxtw	x1, w3
  40541c:	ldrb	w1, [x2, x1]
  405420:	strb	w1, [x0]
  405424:	ldr	w0, [sp, #72]
  405428:	add	w0, w0, #0x1
  40542c:	str	w0, [sp, #72]
  405430:	ldr	x0, [sp, #48]
  405434:	add	x0, x0, #0x3
  405438:	ldrb	w0, [x0]
  40543c:	mov	w1, w0
  405440:	ldr	w0, [sp, #72]
  405444:	cmp	w0, w1
  405448:	b.ge	405460 <check_fill_0x83_prespc3+0x114>  // b.tcont
  40544c:	ldr	w0, [sp, #20]
  405450:	sub	w0, w0, #0x3
  405454:	ldr	w1, [sp, #76]
  405458:	cmp	w1, w0
  40545c:	b.lt	40538c <check_fill_0x83_prespc3+0x40>  // b.tstop
  405460:	ldrsw	x0, [sp, #20]
  405464:	sub	x0, x0, #0x1
  405468:	ldr	x1, [sp, #32]
  40546c:	add	x0, x1, x0
  405470:	strb	wzr, [x0]
  405474:	ldr	w0, [sp, #20]
  405478:	sub	w0, w0, #0x1
  40547c:	sxtw	x0, w0
  405480:	mov	x2, x0
  405484:	ldr	x1, [sp, #32]
  405488:	ldr	x0, [sp, #24]
  40548c:	bl	4019d0 <strncpy@plt>
  405490:	mov	w0, #0x0                   	// #0
  405494:	ldp	x29, x30, [sp], #80
  405498:	ret

000000000040549c <do_scsi_page83_inquiry>:
  40549c:	sub	sp, sp, #0x190
  4054a0:	stp	x29, x30, [sp, #16]
  4054a4:	add	x29, sp, #0x10
  4054a8:	str	x0, [sp, #88]
  4054ac:	str	w1, [sp, #84]
  4054b0:	str	x2, [sp, #72]
  4054b4:	str	x3, [sp, #64]
  4054b8:	str	w4, [sp, #80]
  4054bc:	str	x5, [sp, #56]
  4054c0:	str	x6, [sp, #48]
  4054c4:	str	x7, [sp, #40]
  4054c8:	ldr	x0, [sp, #400]
  4054cc:	str	x0, [sp, #32]
  4054d0:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  4054d4:	add	x0, x0, #0xbb8
  4054d8:	ldr	x1, [x0]
  4054dc:	str	x1, [sp, #392]
  4054e0:	mov	x1, #0x0                   	// #0
  4054e4:	mov	w4, #0x100                 	// #256
  4054e8:	ldr	x3, [sp, #56]
  4054ec:	mov	x2, #0x0                   	// #0
  4054f0:	ldr	w1, [sp, #84]
  4054f4:	ldr	x0, [sp, #88]
  4054f8:	bl	40597c <do_scsi_page80_inquiry>
  4054fc:	mov	x0, #0xfe                  	// #254
  405500:	str	x0, [sp, #128]
  405504:	ldr	x0, [sp, #128]
  405508:	cmp	x0, #0x0
  40550c:	b.eq	405520 <do_scsi_page83_inquiry+0x84>  // b.none
  405510:	add	x0, sp, #0x88
  405514:	ldr	x2, [sp, #128]
  405518:	mov	w1, #0x0                   	// #0
  40551c:	bl	401c80 <memset@plt>
  405520:	add	x0, sp, #0x88
  405524:	mov	w5, #0xfe                  	// #254
  405528:	mov	x4, x0
  40552c:	mov	w3, #0xffffff83            	// #-125
  405530:	mov	w2, #0x1                   	// #1
  405534:	ldr	w1, [sp, #84]
  405538:	ldr	x0, [sp, #88]
  40553c:	bl	404520 <scsi_inquiry>
  405540:	str	w0, [sp, #112]
  405544:	ldr	w0, [sp, #112]
  405548:	cmp	w0, #0x0
  40554c:	b.ge	405558 <do_scsi_page83_inquiry+0xbc>  // b.tcont
  405550:	mov	w0, #0x1                   	// #1
  405554:	b	405718 <do_scsi_page83_inquiry+0x27c>
  405558:	ldrb	w0, [sp, #137]
  40555c:	cmp	w0, #0x83
  405560:	b.eq	4055f0 <do_scsi_page83_inquiry+0x154>  // b.none
  405564:	mov	w0, #0x7                   	// #7
  405568:	str	w0, [sp, #116]
  40556c:	str	wzr, [sp, #120]
  405570:	mov	w0, #0x1                   	// #1
  405574:	str	w0, [sp, #124]
  405578:	ldr	w0, [sp, #124]
  40557c:	bl	401c90 <log_get_max_level_realm@plt>
  405580:	mov	w1, w0
  405584:	ldr	w0, [sp, #116]
  405588:	and	w0, w0, #0x7
  40558c:	cmp	w1, w0
  405590:	b.lt	4055e0 <do_scsi_page83_inquiry+0x144>  // b.tstop
  405594:	ldr	w0, [sp, #124]
  405598:	lsl	w1, w0, #10
  40559c:	ldr	w0, [sp, #116]
  4055a0:	orr	w7, w1, w0
  4055a4:	adrp	x0, 407000 <_fini+0x160>
  4055a8:	add	x1, x0, #0x743
  4055ac:	ldr	x0, [sp, #88]
  4055b0:	add	x0, x0, #0x40
  4055b4:	mov	x6, x0
  4055b8:	adrp	x0, 407000 <_fini+0x160>
  4055bc:	add	x5, x0, #0xa40
  4055c0:	adrp	x0, 407000 <_fini+0x160>
  4055c4:	add	x4, x0, #0xb98
  4055c8:	mov	w3, #0x239                 	// #569
  4055cc:	mov	x2, x1
  4055d0:	ldr	w1, [sp, #120]
  4055d4:	mov	w0, w7
  4055d8:	bl	401af0 <log_internal_realm@plt>
  4055dc:	b	4055e8 <do_scsi_page83_inquiry+0x14c>
  4055e0:	ldr	w0, [sp, #120]
  4055e4:	cmp	w0, #0x0
  4055e8:	mov	w0, #0x1                   	// #1
  4055ec:	b	405718 <do_scsi_page83_inquiry+0x27c>
  4055f0:	ldrb	w0, [sp, #142]
  4055f4:	cmp	w0, #0x0
  4055f8:	b.eq	405620 <do_scsi_page83_inquiry+0x184>  // b.none
  4055fc:	add	x1, sp, #0x88
  405600:	ldr	w5, [sp, #80]
  405604:	ldr	x4, [sp, #64]
  405608:	ldr	x3, [sp, #72]
  40560c:	adrp	x0, 407000 <_fini+0x160>
  405610:	add	x2, x0, #0x700
  405614:	ldr	x0, [sp, #88]
  405618:	bl	40534c <check_fill_0x83_prespc3>
  40561c:	b	405718 <do_scsi_page83_inquiry+0x27c>
  405620:	str	wzr, [sp, #104]
  405624:	b	405708 <do_scsi_page83_inquiry+0x26c>
  405628:	mov	w0, #0x4                   	// #4
  40562c:	str	w0, [sp, #108]
  405630:	b	4056dc <do_scsi_page83_inquiry+0x240>
  405634:	ldr	w0, [sp, #108]
  405638:	add	x1, sp, #0x88
  40563c:	add	x8, x1, x0
  405640:	ldr	w1, [sp, #104]
  405644:	mov	x0, x1
  405648:	lsl	x0, x0, #1
  40564c:	add	x1, x0, x1
  405650:	adrp	x0, 407000 <_fini+0x160>
  405654:	add	x0, x0, #0x700
  405658:	add	x1, x1, x0
  40565c:	ldr	x0, [sp, #32]
  405660:	str	x0, [sp]
  405664:	ldr	x7, [sp, #40]
  405668:	ldr	x6, [sp, #48]
  40566c:	ldr	w5, [sp, #80]
  405670:	ldr	x4, [sp, #64]
  405674:	ldr	x3, [sp, #72]
  405678:	mov	x2, x1
  40567c:	mov	x1, x8
  405680:	ldr	x0, [sp, #88]
  405684:	bl	404ecc <check_fill_0x83_id>
  405688:	str	w0, [sp, #112]
  40568c:	ldr	w0, [sp, #112]
  405690:	cmp	w0, #0x0
  405694:	b.ne	4056a0 <do_scsi_page83_inquiry+0x204>  // b.any
  405698:	ldr	w0, [sp, #112]
  40569c:	b	405718 <do_scsi_page83_inquiry+0x27c>
  4056a0:	ldr	w0, [sp, #112]
  4056a4:	cmp	w0, #0x0
  4056a8:	b.ge	4056b4 <do_scsi_page83_inquiry+0x218>  // b.tcont
  4056ac:	ldr	w0, [sp, #112]
  4056b0:	b	405718 <do_scsi_page83_inquiry+0x27c>
  4056b4:	ldr	w0, [sp, #108]
  4056b8:	add	w0, w0, #0x3
  4056bc:	mov	w0, w0
  4056c0:	add	x1, sp, #0x88
  4056c4:	ldrb	w0, [x1, x0]
  4056c8:	mov	w1, w0
  4056cc:	ldr	w0, [sp, #108]
  4056d0:	add	w0, w1, w0
  4056d4:	add	w0, w0, #0x4
  4056d8:	str	w0, [sp, #108]
  4056dc:	ldrb	w0, [sp, #138]
  4056e0:	lsl	w0, w0, #8
  4056e4:	ldrb	w1, [sp, #139]
  4056e8:	add	w0, w0, w1
  4056ec:	add	w0, w0, #0x3
  4056f0:	ldr	w1, [sp, #108]
  4056f4:	cmp	w1, w0
  4056f8:	b.ls	405634 <do_scsi_page83_inquiry+0x198>  // b.plast
  4056fc:	ldr	w0, [sp, #104]
  405700:	add	w0, w0, #0x1
  405704:	str	w0, [sp, #104]
  405708:	ldr	w0, [sp, #104]
  40570c:	cmp	w0, #0xc
  405710:	b.ls	405628 <do_scsi_page83_inquiry+0x18c>  // b.plast
  405714:	mov	w0, #0x1                   	// #1
  405718:	mov	w1, w0
  40571c:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  405720:	add	x0, x0, #0xbb8
  405724:	ldr	x2, [sp, #392]
  405728:	ldr	x0, [x0]
  40572c:	eor	x0, x2, x0
  405730:	cmp	x0, #0x0
  405734:	b.eq	40573c <do_scsi_page83_inquiry+0x2a0>  // b.none
  405738:	bl	401aa0 <__stack_chk_fail@plt>
  40573c:	mov	w0, w1
  405740:	ldp	x29, x30, [sp, #16]
  405744:	add	sp, sp, #0x190
  405748:	ret

000000000040574c <do_scsi_page83_prespc3_inquiry>:
  40574c:	stp	x29, x30, [sp, #-352]!
  405750:	mov	x29, sp
  405754:	str	x0, [sp, #40]
  405758:	str	w1, [sp, #36]
  40575c:	str	x2, [sp, #24]
  405760:	str	x3, [sp, #16]
  405764:	str	w4, [sp, #32]
  405768:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  40576c:	add	x0, x0, #0xbb8
  405770:	ldr	x1, [x0]
  405774:	str	x1, [sp, #344]
  405778:	mov	x1, #0x0                   	// #0
  40577c:	mov	x0, #0xfe                  	// #254
  405780:	str	x0, [sp, #80]
  405784:	ldr	x0, [sp, #80]
  405788:	cmp	x0, #0x0
  40578c:	b.eq	4057a0 <do_scsi_page83_prespc3_inquiry+0x54>  // b.none
  405790:	add	x0, sp, #0x58
  405794:	ldr	x2, [sp, #80]
  405798:	mov	w1, #0x0                   	// #0
  40579c:	bl	401c80 <memset@plt>
  4057a0:	add	x0, sp, #0x58
  4057a4:	mov	w5, #0xfe                  	// #254
  4057a8:	mov	x4, x0
  4057ac:	mov	w3, #0xffffff83            	// #-125
  4057b0:	mov	w2, #0x1                   	// #1
  4057b4:	ldr	w1, [sp, #36]
  4057b8:	ldr	x0, [sp, #40]
  4057bc:	bl	404520 <scsi_inquiry>
  4057c0:	str	w0, [sp, #64]
  4057c4:	ldr	w0, [sp, #64]
  4057c8:	cmp	w0, #0x0
  4057cc:	b.ge	4057d8 <do_scsi_page83_prespc3_inquiry+0x8c>  // b.tcont
  4057d0:	mov	w0, #0x1                   	// #1
  4057d4:	b	40594c <do_scsi_page83_prespc3_inquiry+0x200>
  4057d8:	ldrb	w0, [sp, #89]
  4057dc:	cmp	w0, #0x83
  4057e0:	b.eq	405870 <do_scsi_page83_prespc3_inquiry+0x124>  // b.none
  4057e4:	mov	w0, #0x7                   	// #7
  4057e8:	str	w0, [sp, #68]
  4057ec:	str	wzr, [sp, #72]
  4057f0:	mov	w0, #0x1                   	// #1
  4057f4:	str	w0, [sp, #76]
  4057f8:	ldr	w0, [sp, #76]
  4057fc:	bl	401c90 <log_get_max_level_realm@plt>
  405800:	mov	w1, w0
  405804:	ldr	w0, [sp, #68]
  405808:	and	w0, w0, #0x7
  40580c:	cmp	w1, w0
  405810:	b.lt	405860 <do_scsi_page83_prespc3_inquiry+0x114>  // b.tstop
  405814:	ldr	w0, [sp, #76]
  405818:	lsl	w1, w0, #10
  40581c:	ldr	w0, [sp, #68]
  405820:	orr	w7, w1, w0
  405824:	adrp	x0, 407000 <_fini+0x160>
  405828:	add	x1, x0, #0x743
  40582c:	ldr	x0, [sp, #40]
  405830:	add	x0, x0, #0x40
  405834:	mov	x6, x0
  405838:	adrp	x0, 407000 <_fini+0x160>
  40583c:	add	x5, x0, #0xa40
  405840:	adrp	x0, 407000 <_fini+0x160>
  405844:	add	x4, x0, #0xbb0
  405848:	mov	w3, #0x28b                 	// #651
  40584c:	mov	x2, x1
  405850:	ldr	w1, [sp, #72]
  405854:	mov	w0, w7
  405858:	bl	401af0 <log_internal_realm@plt>
  40585c:	b	405868 <do_scsi_page83_prespc3_inquiry+0x11c>
  405860:	ldr	w0, [sp, #72]
  405864:	cmp	w0, #0x0
  405868:	mov	w0, #0x1                   	// #1
  40586c:	b	40594c <do_scsi_page83_prespc3_inquiry+0x200>
  405870:	ldrb	w0, [sp, #94]
  405874:	cmp	w0, #0x0
  405878:	b.ne	405884 <do_scsi_page83_prespc3_inquiry+0x138>  // b.any
  40587c:	mov	w0, #0x2                   	// #2
  405880:	b	40594c <do_scsi_page83_prespc3_inquiry+0x200>
  405884:	mov	w1, #0x33                  	// #51
  405888:	ldr	x0, [sp, #24]
  40588c:	strb	w1, [x0]
  405890:	mov	w0, #0x4                   	// #4
  405894:	str	w0, [sp, #56]
  405898:	ldr	x0, [sp, #24]
  40589c:	bl	401c20 <strlen@plt>
  4058a0:	str	w0, [sp, #60]
  4058a4:	b	405934 <do_scsi_page83_prespc3_inquiry+0x1e8>
  4058a8:	ldrsw	x0, [sp, #56]
  4058ac:	add	x1, sp, #0x58
  4058b0:	ldrb	w0, [x1, x0]
  4058b4:	lsr	w0, w0, #4
  4058b8:	and	w0, w0, #0xff
  4058bc:	mov	w3, w0
  4058c0:	ldr	w0, [sp, #60]
  4058c4:	add	w1, w0, #0x1
  4058c8:	str	w1, [sp, #60]
  4058cc:	sxtw	x0, w0
  4058d0:	ldr	x1, [sp, #24]
  4058d4:	add	x0, x1, x0
  4058d8:	adrp	x1, 407000 <_fini+0x160>
  4058dc:	add	x2, x1, #0x728
  4058e0:	sxtw	x1, w3
  4058e4:	ldrb	w1, [x2, x1]
  4058e8:	strb	w1, [x0]
  4058ec:	ldrsw	x0, [sp, #56]
  4058f0:	add	x1, sp, #0x58
  4058f4:	ldrb	w0, [x1, x0]
  4058f8:	and	w3, w0, #0xf
  4058fc:	ldr	w0, [sp, #60]
  405900:	add	w1, w0, #0x1
  405904:	str	w1, [sp, #60]
  405908:	sxtw	x0, w0
  40590c:	ldr	x1, [sp, #24]
  405910:	add	x0, x1, x0
  405914:	adrp	x1, 407000 <_fini+0x160>
  405918:	add	x2, x1, #0x728
  40591c:	sxtw	x1, w3
  405920:	ldrb	w1, [x2, x1]
  405924:	strb	w1, [x0]
  405928:	ldr	w0, [sp, #56]
  40592c:	add	w0, w0, #0x1
  405930:	str	w0, [sp, #56]
  405934:	ldrb	w0, [sp, #91]
  405938:	add	w0, w0, #0x3
  40593c:	ldr	w1, [sp, #56]
  405940:	cmp	w1, w0
  405944:	b.le	4058a8 <do_scsi_page83_prespc3_inquiry+0x15c>
  405948:	mov	w0, #0x0                   	// #0
  40594c:	mov	w1, w0
  405950:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  405954:	add	x0, x0, #0xbb8
  405958:	ldr	x2, [sp, #344]
  40595c:	ldr	x0, [x0]
  405960:	eor	x0, x2, x0
  405964:	cmp	x0, #0x0
  405968:	b.eq	405970 <do_scsi_page83_prespc3_inquiry+0x224>  // b.none
  40596c:	bl	401aa0 <__stack_chk_fail@plt>
  405970:	mov	w0, w1
  405974:	ldp	x29, x30, [sp], #352
  405978:	ret

000000000040597c <do_scsi_page80_inquiry>:
  40597c:	sub	sp, sp, #0x180
  405980:	stp	x29, x30, [sp, #16]
  405984:	add	x29, sp, #0x10
  405988:	str	x0, [sp, #56]
  40598c:	str	w1, [sp, #52]
  405990:	str	x2, [sp, #40]
  405994:	str	x3, [sp, #32]
  405998:	str	w4, [sp, #48]
  40599c:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  4059a0:	add	x0, x0, #0xbb8
  4059a4:	ldr	x1, [x0]
  4059a8:	str	x1, [sp, #376]
  4059ac:	mov	x1, #0x0                   	// #0
  4059b0:	mov	x0, #0xfe                  	// #254
  4059b4:	str	x0, [sp, #112]
  4059b8:	ldr	x0, [sp, #112]
  4059bc:	cmp	x0, #0x0
  4059c0:	b.eq	4059d4 <do_scsi_page80_inquiry+0x58>  // b.none
  4059c4:	add	x0, sp, #0x78
  4059c8:	ldr	x2, [sp, #112]
  4059cc:	mov	w1, #0x0                   	// #0
  4059d0:	bl	401c80 <memset@plt>
  4059d4:	add	x0, sp, #0x78
  4059d8:	mov	w5, #0xfe                  	// #254
  4059dc:	mov	x4, x0
  4059e0:	mov	w3, #0xffffff80            	// #-128
  4059e4:	mov	w2, #0x1                   	// #1
  4059e8:	ldr	w1, [sp, #52]
  4059ec:	ldr	x0, [sp, #56]
  4059f0:	bl	404520 <scsi_inquiry>
  4059f4:	str	w0, [sp, #80]
  4059f8:	ldr	w0, [sp, #80]
  4059fc:	cmp	w0, #0x0
  405a00:	b.ge	405a0c <do_scsi_page80_inquiry+0x90>  // b.tcont
  405a04:	ldr	w0, [sp, #80]
  405a08:	b	405c40 <do_scsi_page80_inquiry+0x2c4>
  405a0c:	ldrb	w0, [sp, #121]
  405a10:	cmp	w0, #0x80
  405a14:	b.eq	405aa4 <do_scsi_page80_inquiry+0x128>  // b.none
  405a18:	mov	w0, #0x7                   	// #7
  405a1c:	str	w0, [sp, #100]
  405a20:	str	wzr, [sp, #104]
  405a24:	mov	w0, #0x1                   	// #1
  405a28:	str	w0, [sp, #108]
  405a2c:	ldr	w0, [sp, #108]
  405a30:	bl	401c90 <log_get_max_level_realm@plt>
  405a34:	mov	w1, w0
  405a38:	ldr	w0, [sp, #100]
  405a3c:	and	w0, w0, #0x7
  405a40:	cmp	w1, w0
  405a44:	b.lt	405a94 <do_scsi_page80_inquiry+0x118>  // b.tstop
  405a48:	ldr	w0, [sp, #108]
  405a4c:	lsl	w1, w0, #10
  405a50:	ldr	w0, [sp, #100]
  405a54:	orr	w7, w1, w0
  405a58:	adrp	x0, 407000 <_fini+0x160>
  405a5c:	add	x1, x0, #0x743
  405a60:	ldr	x0, [sp, #56]
  405a64:	add	x0, x0, #0x40
  405a68:	mov	x6, x0
  405a6c:	adrp	x0, 407000 <_fini+0x160>
  405a70:	add	x5, x0, #0xa58
  405a74:	adrp	x0, 407000 <_fini+0x160>
  405a78:	add	x4, x0, #0xbd0
  405a7c:	mov	w3, #0x2c9                 	// #713
  405a80:	mov	x2, x1
  405a84:	ldr	w1, [sp, #104]
  405a88:	mov	w0, w7
  405a8c:	bl	401af0 <log_internal_realm@plt>
  405a90:	b	405a9c <do_scsi_page80_inquiry+0x120>
  405a94:	ldr	w0, [sp, #104]
  405a98:	cmp	w0, #0x0
  405a9c:	mov	w0, #0x1                   	// #1
  405aa0:	b	405c40 <do_scsi_page80_inquiry+0x2c4>
  405aa4:	ldrb	w0, [sp, #123]
  405aa8:	add	w0, w0, #0x19
  405aac:	str	w0, [sp, #84]
  405ab0:	ldr	w1, [sp, #48]
  405ab4:	ldr	w0, [sp, #84]
  405ab8:	cmp	w1, w0
  405abc:	b.ge	405b58 <do_scsi_page80_inquiry+0x1dc>  // b.tcont
  405ac0:	mov	w0, #0x7                   	// #7
  405ac4:	str	w0, [sp, #88]
  405ac8:	str	wzr, [sp, #92]
  405acc:	mov	w0, #0x1                   	// #1
  405ad0:	str	w0, [sp, #96]
  405ad4:	ldr	w0, [sp, #96]
  405ad8:	bl	401c90 <log_get_max_level_realm@plt>
  405adc:	mov	w1, w0
  405ae0:	ldr	w0, [sp, #88]
  405ae4:	and	w0, w0, #0x7
  405ae8:	cmp	w1, w0
  405aec:	b.lt	405b48 <do_scsi_page80_inquiry+0x1cc>  // b.tstop
  405af0:	ldr	w0, [sp, #96]
  405af4:	lsl	w1, w0, #10
  405af8:	ldr	w0, [sp, #88]
  405afc:	orr	w8, w1, w0
  405b00:	adrp	x0, 407000 <_fini+0x160>
  405b04:	add	x1, x0, #0x743
  405b08:	ldr	x0, [sp, #56]
  405b0c:	add	x2, x0, #0x40
  405b10:	ldr	w0, [sp, #84]
  405b14:	str	w0, [sp]
  405b18:	ldr	w7, [sp, #48]
  405b1c:	mov	x6, x2
  405b20:	adrp	x0, 407000 <_fini+0x160>
  405b24:	add	x5, x0, #0xa10
  405b28:	adrp	x0, 407000 <_fini+0x160>
  405b2c:	add	x4, x0, #0xbd0
  405b30:	mov	w3, #0x2cf                 	// #719
  405b34:	mov	x2, x1
  405b38:	ldr	w1, [sp, #92]
  405b3c:	mov	w0, w8
  405b40:	bl	401af0 <log_internal_realm@plt>
  405b44:	b	405b50 <do_scsi_page80_inquiry+0x1d4>
  405b48:	ldr	w0, [sp, #92]
  405b4c:	cmp	w0, #0x0
  405b50:	mov	w0, #0x1                   	// #1
  405b54:	b	405c40 <do_scsi_page80_inquiry+0x2c4>
  405b58:	ldrb	w0, [sp, #123]
  405b5c:	str	w0, [sp, #84]
  405b60:	ldr	x0, [sp, #40]
  405b64:	cmp	x0, #0x0
  405b68:	b.eq	405c04 <do_scsi_page80_inquiry+0x288>  // b.none
  405b6c:	ldr	x0, [sp, #40]
  405b70:	mov	w1, #0x53                  	// #83
  405b74:	strb	w1, [x0]
  405b78:	ldr	x0, [sp, #40]
  405b7c:	add	x0, x0, #0x1
  405b80:	mov	x1, x0
  405b84:	ldr	x0, [sp, #56]
  405b88:	bl	404c88 <append_vendor_model>
  405b8c:	str	w0, [sp, #72]
  405b90:	ldr	w0, [sp, #72]
  405b94:	cmp	w0, #0x0
  405b98:	b.ge	405ba4 <do_scsi_page80_inquiry+0x228>  // b.tcont
  405b9c:	mov	w0, #0x1                   	// #1
  405ba0:	b	405c40 <do_scsi_page80_inquiry+0x2c4>
  405ba4:	ldr	w0, [sp, #72]
  405ba8:	add	w0, w0, #0x1
  405bac:	str	w0, [sp, #72]
  405bb0:	mov	w0, #0x4                   	// #4
  405bb4:	str	w0, [sp, #76]
  405bb8:	b	405bf0 <do_scsi_page80_inquiry+0x274>
  405bbc:	ldrsw	x0, [sp, #72]
  405bc0:	ldr	x1, [sp, #40]
  405bc4:	add	x0, x1, x0
  405bc8:	ldrsw	x1, [sp, #76]
  405bcc:	add	x2, sp, #0x78
  405bd0:	ldrb	w1, [x2, x1]
  405bd4:	strb	w1, [x0]
  405bd8:	ldr	w0, [sp, #76]
  405bdc:	add	w0, w0, #0x1
  405be0:	str	w0, [sp, #76]
  405be4:	ldr	w0, [sp, #72]
  405be8:	add	w0, w0, #0x1
  405bec:	str	w0, [sp, #72]
  405bf0:	ldr	w0, [sp, #84]
  405bf4:	add	w0, w0, #0x3
  405bf8:	ldr	w1, [sp, #76]
  405bfc:	cmp	w1, w0
  405c00:	b.le	405bbc <do_scsi_page80_inquiry+0x240>
  405c04:	ldr	x0, [sp, #32]
  405c08:	cmp	x0, #0x0
  405c0c:	b.eq	405c3c <do_scsi_page80_inquiry+0x2c0>  // b.none
  405c10:	add	x0, sp, #0x78
  405c14:	add	x0, x0, #0x4
  405c18:	ldrsw	x1, [sp, #84]
  405c1c:	mov	x2, x1
  405c20:	mov	x1, x0
  405c24:	ldr	x0, [sp, #32]
  405c28:	bl	4019b0 <memcpy@plt>
  405c2c:	ldrsw	x0, [sp, #84]
  405c30:	ldr	x1, [sp, #32]
  405c34:	add	x0, x1, x0
  405c38:	strb	wzr, [x0]
  405c3c:	mov	w0, #0x0                   	// #0
  405c40:	mov	w1, w0
  405c44:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  405c48:	add	x0, x0, #0xbb8
  405c4c:	ldr	x2, [sp, #376]
  405c50:	ldr	x0, [x0]
  405c54:	eor	x0, x2, x0
  405c58:	cmp	x0, #0x0
  405c5c:	b.eq	405c64 <do_scsi_page80_inquiry+0x2e8>  // b.none
  405c60:	bl	401aa0 <__stack_chk_fail@plt>
  405c64:	mov	w0, w1
  405c68:	ldp	x29, x30, [sp, #16]
  405c6c:	add	sp, sp, #0x180
  405c70:	ret

0000000000405c74 <scsi_std_inquiry>:
  405c74:	stp	x29, x30, [sp, #-480]!
  405c78:	mov	x29, sp
  405c7c:	stp	x19, x20, [sp, #16]
  405c80:	str	x0, [sp, #40]
  405c84:	str	x1, [sp, #32]
  405c88:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  405c8c:	add	x0, x0, #0xbb8
  405c90:	ldr	x1, [x0]
  405c94:	str	x1, [sp, #472]
  405c98:	mov	x1, #0x0                   	// #0
  405c9c:	str	wzr, [sp, #48]
  405ca0:	mov	w1, #0x800                 	// #2048
  405ca4:	movk	w1, #0x8, lsl #16
  405ca8:	ldr	x0, [sp, #32]
  405cac:	bl	401c10 <open64@plt>
  405cb0:	str	w0, [sp, #52]
  405cb4:	ldr	w0, [sp, #52]
  405cb8:	cmp	w0, #0x0
  405cbc:	b.ge	405d4c <scsi_std_inquiry+0xd8>  // b.tcont
  405cc0:	mov	w0, #0x7                   	// #7
  405cc4:	str	w0, [sp, #68]
  405cc8:	bl	401a80 <__errno_location@plt>
  405ccc:	ldr	w0, [x0]
  405cd0:	str	w0, [sp, #72]
  405cd4:	mov	w0, #0x1                   	// #1
  405cd8:	str	w0, [sp, #76]
  405cdc:	ldr	w0, [sp, #76]
  405ce0:	bl	401c90 <log_get_max_level_realm@plt>
  405ce4:	mov	w1, w0
  405ce8:	ldr	w0, [sp, #68]
  405cec:	and	w0, w0, #0x7
  405cf0:	cmp	w1, w0
  405cf4:	b.lt	405d3c <scsi_std_inquiry+0xc8>  // b.tstop
  405cf8:	ldr	w0, [sp, #76]
  405cfc:	lsl	w1, w0, #10
  405d00:	ldr	w0, [sp, #68]
  405d04:	orr	w7, w1, w0
  405d08:	adrp	x0, 407000 <_fini+0x160>
  405d0c:	add	x1, x0, #0x743
  405d10:	ldr	x6, [sp, #32]
  405d14:	adrp	x0, 407000 <_fini+0x160>
  405d18:	add	x5, x0, #0xa70
  405d1c:	adrp	x0, 407000 <_fini+0x160>
  405d20:	add	x4, x0, #0xbe8
  405d24:	mov	w3, #0x2f0                 	// #752
  405d28:	mov	x2, x1
  405d2c:	ldr	w1, [sp, #72]
  405d30:	mov	w0, w7
  405d34:	bl	401af0 <log_internal_realm@plt>
  405d38:	b	405d44 <scsi_std_inquiry+0xd0>
  405d3c:	ldr	w0, [sp, #72]
  405d40:	cmp	w0, #0x0
  405d44:	mov	w0, #0x1                   	// #1
  405d48:	b	405f14 <scsi_std_inquiry+0x2a0>
  405d4c:	add	x0, sp, #0x58
  405d50:	mov	x1, x0
  405d54:	ldr	w0, [sp, #52]
  405d58:	bl	406e90 <fstat64>
  405d5c:	cmp	w0, #0x0
  405d60:	b.ge	405df4 <scsi_std_inquiry+0x180>  // b.tcont
  405d64:	mov	w0, #0x7                   	// #7
  405d68:	str	w0, [sp, #56]
  405d6c:	bl	401a80 <__errno_location@plt>
  405d70:	ldr	w0, [x0]
  405d74:	str	w0, [sp, #60]
  405d78:	mov	w0, #0x1                   	// #1
  405d7c:	str	w0, [sp, #64]
  405d80:	ldr	w0, [sp, #64]
  405d84:	bl	401c90 <log_get_max_level_realm@plt>
  405d88:	mov	w1, w0
  405d8c:	ldr	w0, [sp, #56]
  405d90:	and	w0, w0, #0x7
  405d94:	cmp	w1, w0
  405d98:	b.lt	405de0 <scsi_std_inquiry+0x16c>  // b.tstop
  405d9c:	ldr	w0, [sp, #64]
  405da0:	lsl	w1, w0, #10
  405da4:	ldr	w0, [sp, #56]
  405da8:	orr	w7, w1, w0
  405dac:	adrp	x0, 407000 <_fini+0x160>
  405db0:	add	x1, x0, #0x743
  405db4:	ldr	x6, [sp, #32]
  405db8:	adrp	x0, 407000 <_fini+0x160>
  405dbc:	add	x5, x0, #0xa90
  405dc0:	adrp	x0, 407000 <_fini+0x160>
  405dc4:	add	x4, x0, #0xbe8
  405dc8:	mov	w3, #0x2f5                 	// #757
  405dcc:	mov	x2, x1
  405dd0:	ldr	w1, [sp, #60]
  405dd4:	mov	w0, w7
  405dd8:	bl	401af0 <log_internal_realm@plt>
  405ddc:	b	405de8 <scsi_std_inquiry+0x174>
  405de0:	ldr	w0, [sp, #60]
  405de4:	cmp	w0, #0x0
  405de8:	mov	w0, #0x2                   	// #2
  405dec:	str	w0, [sp, #48]
  405df0:	b	405f08 <scsi_std_inquiry+0x294>
  405df4:	ldr	x0, [sp, #40]
  405df8:	add	x19, x0, #0x40
  405dfc:	ldr	x0, [sp, #120]
  405e00:	bl	401b10 <gnu_dev_major@plt>
  405e04:	mov	w20, w0
  405e08:	ldr	x0, [sp, #120]
  405e0c:	bl	401bb0 <gnu_dev_minor@plt>
  405e10:	mov	w3, w0
  405e14:	mov	w2, w20
  405e18:	adrp	x0, 407000 <_fini+0x160>
  405e1c:	add	x1, x0, #0xab0
  405e20:	mov	x0, x19
  405e24:	bl	401bc0 <sprintf@plt>
  405e28:	mov	x0, #0xfe                  	// #254
  405e2c:	str	x0, [sp, #80]
  405e30:	ldr	x0, [sp, #80]
  405e34:	cmp	x0, #0x0
  405e38:	b.eq	405e4c <scsi_std_inquiry+0x1d8>  // b.none
  405e3c:	add	x0, sp, #0xd8
  405e40:	ldr	x2, [sp, #80]
  405e44:	mov	w1, #0x0                   	// #0
  405e48:	bl	401c80 <memset@plt>
  405e4c:	add	x0, sp, #0xd8
  405e50:	mov	w5, #0xfe                  	// #254
  405e54:	mov	x4, x0
  405e58:	mov	w3, #0x0                   	// #0
  405e5c:	mov	w2, #0x0                   	// #0
  405e60:	ldr	w1, [sp, #52]
  405e64:	ldr	x0, [sp, #40]
  405e68:	bl	404520 <scsi_inquiry>
  405e6c:	str	w0, [sp, #48]
  405e70:	ldr	w0, [sp, #48]
  405e74:	cmp	w0, #0x0
  405e78:	b.lt	405f04 <scsi_std_inquiry+0x290>  // b.tstop
  405e7c:	str	wzr, [sp, #48]
  405e80:	ldr	x1, [sp, #40]
  405e84:	add	x0, sp, #0xd8
  405e88:	add	x0, x0, #0x8
  405e8c:	ldr	x0, [x0]
  405e90:	str	x0, [x1]
  405e94:	ldr	x0, [sp, #40]
  405e98:	strb	wzr, [x0, #8]
  405e9c:	ldr	x0, [sp, #40]
  405ea0:	add	x2, x0, #0x9
  405ea4:	add	x0, sp, #0xd8
  405ea8:	add	x0, x0, #0x10
  405eac:	ldp	x0, x1, [x0]
  405eb0:	stp	x0, x1, [x2]
  405eb4:	ldr	x0, [sp, #40]
  405eb8:	strb	wzr, [x0, #25]
  405ebc:	ldr	x0, [sp, #40]
  405ec0:	add	x1, x0, #0x1a
  405ec4:	add	x0, sp, #0xd8
  405ec8:	add	x0, x0, #0x20
  405ecc:	ldr	w0, [x0]
  405ed0:	str	w0, [x1]
  405ed4:	ldr	x0, [sp, #40]
  405ed8:	strb	wzr, [x0, #30]
  405edc:	ldr	x0, [sp, #40]
  405ee0:	add	x3, x0, #0x1f
  405ee4:	ldrb	w0, [sp, #216]
  405ee8:	and	w0, w0, #0x1f
  405eec:	mov	w2, w0
  405ef0:	adrp	x0, 407000 <_fini+0x160>
  405ef4:	add	x1, x0, #0xa38
  405ef8:	mov	x0, x3
  405efc:	bl	401bc0 <sprintf@plt>
  405f00:	b	405f08 <scsi_std_inquiry+0x294>
  405f04:	nop
  405f08:	ldr	w0, [sp, #52]
  405f0c:	bl	401c00 <close@plt>
  405f10:	ldr	w0, [sp, #48]
  405f14:	mov	w1, w0
  405f18:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  405f1c:	add	x0, x0, #0xbb8
  405f20:	ldr	x2, [sp, #472]
  405f24:	ldr	x0, [x0]
  405f28:	eor	x0, x2, x0
  405f2c:	cmp	x0, #0x0
  405f30:	b.eq	405f38 <scsi_std_inquiry+0x2c4>  // b.none
  405f34:	bl	401aa0 <__stack_chk_fail@plt>
  405f38:	mov	w0, w1
  405f3c:	ldp	x19, x20, [sp, #16]
  405f40:	ldp	x29, x30, [sp], #480
  405f44:	ret

0000000000405f48 <scsi_get_serial>:
  405f48:	sub	sp, sp, #0x180
  405f4c:	stp	x29, x30, [sp, #16]
  405f50:	add	x29, sp, #0x10
  405f54:	str	x0, [sp, #56]
  405f58:	str	x1, [sp, #48]
  405f5c:	str	w2, [sp, #44]
  405f60:	str	w3, [sp, #40]
  405f64:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  405f68:	add	x0, x0, #0xbb8
  405f6c:	ldr	x1, [x0]
  405f70:	str	x1, [sp, #376]
  405f74:	mov	x1, #0x0                   	// #0
  405f78:	mov	w0, #0xffffffff            	// #-1
  405f7c:	str	w0, [sp, #68]
  405f80:	ldrsw	x0, [sp, #40]
  405f84:	str	x0, [sp, #96]
  405f88:	ldr	x0, [sp, #96]
  405f8c:	cmp	x0, #0x0
  405f90:	b.eq	405fa8 <scsi_get_serial+0x60>  // b.none
  405f94:	ldr	x0, [sp, #56]
  405f98:	add	x0, x0, #0x80
  405f9c:	ldr	x2, [sp, #96]
  405fa0:	mov	w1, #0x0                   	// #0
  405fa4:	bl	401c80 <memset@plt>
  405fa8:	bl	401ab0 <initialize_srand@plt>
  405fac:	mov	w0, #0x14                  	// #20
  405fb0:	str	w0, [sp, #72]
  405fb4:	b	406054 <scsi_get_serial+0x10c>
  405fb8:	mov	w1, #0x800                 	// #2048
  405fbc:	movk	w1, #0x8, lsl #16
  405fc0:	ldr	x0, [sp, #48]
  405fc4:	bl	401c10 <open64@plt>
  405fc8:	str	w0, [sp, #68]
  405fcc:	ldr	w0, [sp, #68]
  405fd0:	cmp	w0, #0x0
  405fd4:	b.ge	406060 <scsi_get_serial+0x118>  // b.tcont
  405fd8:	bl	401a80 <__errno_location@plt>
  405fdc:	ldr	w0, [x0]
  405fe0:	cmp	w0, #0x10
  405fe4:	b.ne	406060 <scsi_get_serial+0x118>  // b.any
  405fe8:	str	xzr, [sp, #104]
  405fec:	bl	401ac0 <rand@plt>
  405ff0:	mov	w1, w0
  405ff4:	mov	w0, #0x851f                	// #34079
  405ff8:	movk	w0, #0x51eb, lsl #16
  405ffc:	smull	x0, w1, w0
  406000:	lsr	x0, x0, #32
  406004:	asr	w2, w0, #5
  406008:	asr	w0, w1, #31
  40600c:	sub	w0, w2, w0
  406010:	mov	w2, #0x64                  	// #100
  406014:	mul	w0, w0, w2
  406018:	sub	w0, w1, w0
  40601c:	mov	w1, #0x4240                	// #16960
  406020:	movk	w1, #0xf, lsl #16
  406024:	mul	w1, w0, w1
  406028:	mov	w0, #0xc200                	// #49664
  40602c:	movk	w0, #0xbeb, lsl #16
  406030:	add	w0, w1, w0
  406034:	sxtw	x0, w0
  406038:	str	x0, [sp, #112]
  40603c:	add	x0, sp, #0x68
  406040:	mov	x1, #0x0                   	// #0
  406044:	bl	401900 <nanosleep@plt>
  406048:	ldr	w0, [sp, #72]
  40604c:	sub	w0, w0, #0x1
  406050:	str	w0, [sp, #72]
  406054:	ldr	w0, [sp, #72]
  406058:	cmp	w0, #0x0
  40605c:	b.gt	405fb8 <scsi_get_serial+0x70>
  406060:	ldr	w0, [sp, #68]
  406064:	cmp	w0, #0x0
  406068:	b.ge	406074 <scsi_get_serial+0x12c>  // b.tcont
  40606c:	mov	w0, #0x1                   	// #1
  406070:	b	40641c <scsi_get_serial+0x4d4>
  406074:	ldr	w0, [sp, #44]
  406078:	cmp	w0, #0x80
  40607c:	b.ne	4060c4 <scsi_get_serial+0x17c>  // b.any
  406080:	ldr	x0, [sp, #56]
  406084:	add	x1, x0, #0x80
  406088:	ldr	x0, [sp, #56]
  40608c:	add	x0, x0, #0x180
  406090:	ldr	w4, [sp, #40]
  406094:	mov	x3, x0
  406098:	mov	x2, x1
  40609c:	ldr	w1, [sp, #68]
  4060a0:	ldr	x0, [sp, #56]
  4060a4:	bl	40597c <do_scsi_page80_inquiry>
  4060a8:	cmp	w0, #0x0
  4060ac:	b.eq	4060bc <scsi_get_serial+0x174>  // b.none
  4060b0:	mov	w0, #0x1                   	// #1
  4060b4:	str	w0, [sp, #80]
  4060b8:	b	406410 <scsi_get_serial+0x4c8>
  4060bc:	str	wzr, [sp, #80]
  4060c0:	b	406410 <scsi_get_serial+0x4c8>
  4060c4:	ldr	w0, [sp, #44]
  4060c8:	cmp	w0, #0x83
  4060cc:	b.ne	406144 <scsi_get_serial+0x1fc>  // b.any
  4060d0:	ldr	x0, [sp, #56]
  4060d4:	add	x1, x0, #0x80
  4060d8:	ldr	x0, [sp, #56]
  4060dc:	add	x2, x0, #0x180
  4060e0:	ldr	x0, [sp, #56]
  4060e4:	add	x3, x0, #0x284
  4060e8:	ldr	x0, [sp, #56]
  4060ec:	add	x4, x0, #0x384
  4060f0:	ldr	x0, [sp, #56]
  4060f4:	add	x5, x0, #0x395
  4060f8:	ldr	x0, [sp, #56]
  4060fc:	add	x0, x0, #0x3a6
  406100:	str	x0, [sp]
  406104:	mov	x7, x5
  406108:	mov	x6, x4
  40610c:	mov	x5, x3
  406110:	ldr	w4, [sp, #40]
  406114:	mov	x3, x2
  406118:	mov	x2, x1
  40611c:	ldr	w1, [sp, #68]
  406120:	ldr	x0, [sp, #56]
  406124:	bl	40549c <do_scsi_page83_inquiry>
  406128:	cmp	w0, #0x0
  40612c:	b.eq	40613c <scsi_get_serial+0x1f4>  // b.none
  406130:	mov	w0, #0x1                   	// #1
  406134:	str	w0, [sp, #80]
  406138:	b	406410 <scsi_get_serial+0x4c8>
  40613c:	str	wzr, [sp, #80]
  406140:	b	406410 <scsi_get_serial+0x4c8>
  406144:	ldr	w0, [sp, #44]
  406148:	cmn	w0, #0x83
  40614c:	b.ne	40621c <scsi_get_serial+0x2d4>  // b.any
  406150:	ldr	x0, [sp, #56]
  406154:	add	x1, x0, #0x80
  406158:	ldr	x0, [sp, #56]
  40615c:	add	x0, x0, #0x180
  406160:	ldr	w4, [sp, #40]
  406164:	mov	x3, x0
  406168:	mov	x2, x1
  40616c:	ldr	w1, [sp, #68]
  406170:	ldr	x0, [sp, #56]
  406174:	bl	40574c <do_scsi_page83_prespc3_inquiry>
  406178:	str	w0, [sp, #80]
  40617c:	ldr	w0, [sp, #80]
  406180:	cmp	w0, #0x0
  406184:	b.eq	406214 <scsi_get_serial+0x2cc>  // b.none
  406188:	ldr	w0, [sp, #80]
  40618c:	cmp	w0, #0x2
  406190:	b.ne	406208 <scsi_get_serial+0x2c0>  // b.any
  406194:	ldr	x0, [sp, #56]
  406198:	add	x1, x0, #0x80
  40619c:	ldr	x0, [sp, #56]
  4061a0:	add	x2, x0, #0x180
  4061a4:	ldr	x0, [sp, #56]
  4061a8:	add	x3, x0, #0x284
  4061ac:	ldr	x0, [sp, #56]
  4061b0:	add	x4, x0, #0x384
  4061b4:	ldr	x0, [sp, #56]
  4061b8:	add	x5, x0, #0x395
  4061bc:	ldr	x0, [sp, #56]
  4061c0:	add	x0, x0, #0x3a6
  4061c4:	str	x0, [sp]
  4061c8:	mov	x7, x5
  4061cc:	mov	x6, x4
  4061d0:	mov	x5, x3
  4061d4:	ldr	w4, [sp, #40]
  4061d8:	mov	x3, x2
  4061dc:	mov	x2, x1
  4061e0:	ldr	w1, [sp, #68]
  4061e4:	ldr	x0, [sp, #56]
  4061e8:	bl	40549c <do_scsi_page83_inquiry>
  4061ec:	cmp	w0, #0x0
  4061f0:	b.eq	406200 <scsi_get_serial+0x2b8>  // b.none
  4061f4:	mov	w0, #0x1                   	// #1
  4061f8:	str	w0, [sp, #80]
  4061fc:	b	406410 <scsi_get_serial+0x4c8>
  406200:	str	wzr, [sp, #80]
  406204:	b	406410 <scsi_get_serial+0x4c8>
  406208:	mov	w0, #0x1                   	// #1
  40620c:	str	w0, [sp, #80]
  406210:	b	406410 <scsi_get_serial+0x4c8>
  406214:	str	wzr, [sp, #80]
  406218:	b	406410 <scsi_get_serial+0x4c8>
  40621c:	ldr	w0, [sp, #44]
  406220:	cmp	w0, #0x0
  406224:	b.eq	4062bc <scsi_get_serial+0x374>  // b.none
  406228:	mov	w0, #0x7                   	// #7
  40622c:	str	w0, [sp, #84]
  406230:	str	wzr, [sp, #88]
  406234:	mov	w0, #0x1                   	// #1
  406238:	str	w0, [sp, #92]
  40623c:	ldr	w0, [sp, #92]
  406240:	bl	401c90 <log_get_max_level_realm@plt>
  406244:	mov	w1, w0
  406248:	ldr	w0, [sp, #84]
  40624c:	and	w0, w0, #0x7
  406250:	cmp	w1, w0
  406254:	b.lt	4062a8 <scsi_get_serial+0x360>  // b.tstop
  406258:	ldr	w0, [sp, #92]
  40625c:	lsl	w1, w0, #10
  406260:	ldr	w0, [sp, #84]
  406264:	orr	w8, w1, w0
  406268:	adrp	x0, 407000 <_fini+0x160>
  40626c:	add	x1, x0, #0x743
  406270:	ldr	x0, [sp, #56]
  406274:	add	x0, x0, #0x40
  406278:	ldr	w7, [sp, #44]
  40627c:	mov	x6, x0
  406280:	adrp	x0, 407000 <_fini+0x160>
  406284:	add	x5, x0, #0xab8
  406288:	adrp	x0, 407000 <_fini+0x160>
  40628c:	add	x4, x0, #0xc00
  406290:	mov	w3, #0x350                 	// #848
  406294:	mov	x2, x1
  406298:	ldr	w1, [sp, #88]
  40629c:	mov	w0, w8
  4062a0:	bl	401af0 <log_internal_realm@plt>
  4062a4:	b	4062b0 <scsi_get_serial+0x368>
  4062a8:	ldr	w0, [sp, #88]
  4062ac:	cmp	w0, #0x0
  4062b0:	mov	w0, #0x1                   	// #1
  4062b4:	str	w0, [sp, #80]
  4062b8:	b	406410 <scsi_get_serial+0x4c8>
  4062bc:	add	x0, sp, #0x78
  4062c0:	mov	w3, #0xfe                  	// #254
  4062c4:	mov	x2, x0
  4062c8:	ldr	w1, [sp, #68]
  4062cc:	ldr	x0, [sp, #56]
  4062d0:	bl	4049f8 <do_scsi_page0_inquiry>
  4062d4:	cmp	w0, #0x0
  4062d8:	b.eq	4062e8 <scsi_get_serial+0x3a0>  // b.none
  4062dc:	mov	w0, #0x1                   	// #1
  4062e0:	str	w0, [sp, #80]
  4062e4:	b	406410 <scsi_get_serial+0x4c8>
  4062e8:	mov	w0, #0x4                   	// #4
  4062ec:	str	w0, [sp, #76]
  4062f0:	b	40637c <scsi_get_serial+0x434>
  4062f4:	ldrsw	x0, [sp, #76]
  4062f8:	add	x1, sp, #0x78
  4062fc:	ldrb	w0, [x1, x0]
  406300:	cmp	w0, #0x83
  406304:	b.ne	406370 <scsi_get_serial+0x428>  // b.any
  406308:	ldr	x0, [sp, #56]
  40630c:	add	x1, x0, #0x80
  406310:	ldr	x0, [sp, #56]
  406314:	add	x2, x0, #0x180
  406318:	ldr	x0, [sp, #56]
  40631c:	add	x3, x0, #0x284
  406320:	ldr	x0, [sp, #56]
  406324:	add	x4, x0, #0x384
  406328:	ldr	x0, [sp, #56]
  40632c:	add	x5, x0, #0x395
  406330:	ldr	x0, [sp, #56]
  406334:	add	x0, x0, #0x3a6
  406338:	str	x0, [sp]
  40633c:	mov	x7, x5
  406340:	mov	x6, x4
  406344:	mov	x5, x3
  406348:	ldr	w4, [sp, #40]
  40634c:	mov	x3, x2
  406350:	mov	x2, x1
  406354:	ldr	w1, [sp, #68]
  406358:	ldr	x0, [sp, #56]
  40635c:	bl	40549c <do_scsi_page83_inquiry>
  406360:	cmp	w0, #0x0
  406364:	b.ne	406370 <scsi_get_serial+0x428>  // b.any
  406368:	str	wzr, [sp, #80]
  40636c:	b	406410 <scsi_get_serial+0x4c8>
  406370:	ldr	w0, [sp, #76]
  406374:	add	w0, w0, #0x1
  406378:	str	w0, [sp, #76]
  40637c:	ldrb	w0, [sp, #123]
  406380:	add	w0, w0, #0x3
  406384:	ldr	w1, [sp, #76]
  406388:	cmp	w1, w0
  40638c:	b.le	4062f4 <scsi_get_serial+0x3ac>
  406390:	mov	w0, #0x4                   	// #4
  406394:	str	w0, [sp, #76]
  406398:	b	4063f4 <scsi_get_serial+0x4ac>
  40639c:	ldrsw	x0, [sp, #76]
  4063a0:	add	x1, sp, #0x78
  4063a4:	ldrb	w0, [x1, x0]
  4063a8:	cmp	w0, #0x80
  4063ac:	b.ne	4063e8 <scsi_get_serial+0x4a0>  // b.any
  4063b0:	ldr	x0, [sp, #56]
  4063b4:	add	x1, x0, #0x80
  4063b8:	ldr	x0, [sp, #56]
  4063bc:	add	x0, x0, #0x180
  4063c0:	ldr	w4, [sp, #40]
  4063c4:	mov	x3, x0
  4063c8:	mov	x2, x1
  4063cc:	ldr	w1, [sp, #68]
  4063d0:	ldr	x0, [sp, #56]
  4063d4:	bl	40597c <do_scsi_page80_inquiry>
  4063d8:	cmp	w0, #0x0
  4063dc:	b.ne	4063e8 <scsi_get_serial+0x4a0>  // b.any
  4063e0:	str	wzr, [sp, #80]
  4063e4:	b	406410 <scsi_get_serial+0x4c8>
  4063e8:	ldr	w0, [sp, #76]
  4063ec:	add	w0, w0, #0x1
  4063f0:	str	w0, [sp, #76]
  4063f4:	ldrb	w0, [sp, #123]
  4063f8:	add	w0, w0, #0x3
  4063fc:	ldr	w1, [sp, #76]
  406400:	cmp	w1, w0
  406404:	b.le	40639c <scsi_get_serial+0x454>
  406408:	mov	w0, #0x1                   	// #1
  40640c:	str	w0, [sp, #80]
  406410:	ldr	w0, [sp, #68]
  406414:	bl	401c00 <close@plt>
  406418:	ldr	w0, [sp, #80]
  40641c:	mov	w1, w0
  406420:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  406424:	add	x0, x0, #0xbb8
  406428:	ldr	x2, [sp, #376]
  40642c:	ldr	x0, [x0]
  406430:	eor	x0, x2, x0
  406434:	cmp	x0, #0x0
  406438:	b.eq	406440 <scsi_get_serial+0x4f8>  // b.none
  40643c:	bl	401aa0 <__stack_chk_fail@plt>
  406440:	mov	w0, w1
  406444:	ldp	x29, x30, [sp, #16]
  406448:	add	sp, sp, #0x180
  40644c:	ret

0000000000406450 <sd_device_unrefp>:
  406450:	stp	x29, x30, [sp, #-32]!
  406454:	mov	x29, sp
  406458:	str	x0, [sp, #24]
  40645c:	ldr	x0, [sp, #24]
  406460:	ldr	x0, [x0]
  406464:	cmp	x0, #0x0
  406468:	b.eq	406478 <sd_device_unrefp+0x28>  // b.none
  40646c:	ldr	x0, [sp, #24]
  406470:	ldr	x0, [x0]
  406474:	bl	401bd0 <sd_device_unref@plt>
  406478:	nop
  40647c:	ldp	x29, x30, [sp], #32
  406480:	ret

0000000000406484 <strempty>:
  406484:	sub	sp, sp, #0x10
  406488:	str	x0, [sp, #8]
  40648c:	ldr	x0, [sp, #8]
  406490:	cmp	x0, #0x0
  406494:	b.ne	4064a0 <strempty+0x1c>  // b.any
  406498:	adrp	x0, 407000 <_fini+0x160>
  40649c:	add	x0, x0, #0xc10
  4064a0:	add	sp, sp, #0x10
  4064a4:	ret

00000000004064a8 <util_resolve_subsys_kernel>:
  4064a8:	sub	sp, sp, #0x4a0
  4064ac:	stp	x29, x30, [sp, #16]
  4064b0:	add	x29, sp, #0x10
  4064b4:	stp	x19, x20, [sp, #32]
  4064b8:	str	x0, [sp, #72]
  4064bc:	str	x1, [sp, #64]
  4064c0:	str	x2, [sp, #56]
  4064c4:	strb	w3, [sp, #55]
  4064c8:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  4064cc:	ldr	x0, [x0, #4088]
  4064d0:	ldr	x1, [x0]
  4064d4:	str	x1, [sp, #1176]
  4064d8:	mov	x1, #0x0                   	// #0
  4064dc:	str	xzr, [sp, #112]
  4064e0:	ldr	x0, [sp, #72]
  4064e4:	ldrb	w0, [x0]
  4064e8:	cmp	w0, #0x5b
  4064ec:	b.eq	4064f8 <util_resolve_subsys_kernel+0x50>  // b.none
  4064f0:	mov	w19, #0xffffffea            	// #-22
  4064f4:	b	4067f8 <util_resolve_subsys_kernel+0x350>
  4064f8:	add	x0, sp, #0x98
  4064fc:	ldr	x2, [sp, #72]
  406500:	mov	x1, #0x400                 	// #1024
  406504:	bl	4018f0 <strscpy@plt>
  406508:	add	x0, sp, #0x98
  40650c:	add	x0, x0, #0x1
  406510:	str	x0, [sp, #136]
  406514:	mov	w1, #0x2f                  	// #47
  406518:	ldr	x0, [sp, #136]
  40651c:	bl	401b60 <strchr@plt>
  406520:	str	x0, [sp, #144]
  406524:	ldr	x0, [sp, #144]
  406528:	cmp	x0, #0x0
  40652c:	b.ne	406538 <util_resolve_subsys_kernel+0x90>  // b.any
  406530:	mov	w19, #0xffffffea            	// #-22
  406534:	b	4067f8 <util_resolve_subsys_kernel+0x350>
  406538:	ldr	x0, [sp, #144]
  40653c:	strb	wzr, [x0]
  406540:	ldr	x0, [sp, #144]
  406544:	add	x0, x0, #0x1
  406548:	str	x0, [sp, #144]
  40654c:	mov	w1, #0x5d                  	// #93
  406550:	ldr	x0, [sp, #144]
  406554:	bl	401b60 <strchr@plt>
  406558:	str	x0, [sp, #128]
  40655c:	ldr	x0, [sp, #128]
  406560:	cmp	x0, #0x0
  406564:	b.ne	406570 <util_resolve_subsys_kernel+0xc8>  // b.any
  406568:	mov	w19, #0xffffffea            	// #-22
  40656c:	b	4067f8 <util_resolve_subsys_kernel+0x350>
  406570:	ldr	x0, [sp, #128]
  406574:	strb	wzr, [x0]
  406578:	ldr	x0, [sp, #128]
  40657c:	add	x0, x0, #0x1
  406580:	str	x0, [sp, #128]
  406584:	ldr	x0, [sp, #128]
  406588:	ldrb	w0, [x0]
  40658c:	cmp	w0, #0x2f
  406590:	b.ne	4065a0 <util_resolve_subsys_kernel+0xf8>  // b.any
  406594:	ldr	x0, [sp, #128]
  406598:	add	x0, x0, #0x1
  40659c:	str	x0, [sp, #128]
  4065a0:	ldr	x0, [sp, #128]
  4065a4:	ldrb	w0, [x0]
  4065a8:	cmp	w0, #0x0
  4065ac:	b.ne	4065b4 <util_resolve_subsys_kernel+0x10c>  // b.any
  4065b0:	str	xzr, [sp, #128]
  4065b4:	ldrb	w0, [sp, #55]
  4065b8:	cmp	w0, #0x0
  4065bc:	b.eq	4065d4 <util_resolve_subsys_kernel+0x12c>  // b.none
  4065c0:	ldr	x0, [sp, #128]
  4065c4:	cmp	x0, #0x0
  4065c8:	b.ne	4065d4 <util_resolve_subsys_kernel+0x12c>  // b.any
  4065cc:	mov	w19, #0xffffffea            	// #-22
  4065d0:	b	4067f8 <util_resolve_subsys_kernel+0x350>
  4065d4:	add	x0, sp, #0x70
  4065d8:	ldr	x2, [sp, #144]
  4065dc:	ldr	x1, [sp, #136]
  4065e0:	bl	4019a0 <sd_device_new_from_subsystem_sysname@plt>
  4065e4:	str	w0, [sp, #84]
  4065e8:	ldr	w0, [sp, #84]
  4065ec:	cmp	w0, #0x0
  4065f0:	b.ge	4065fc <util_resolve_subsys_kernel+0x154>  // b.tcont
  4065f4:	ldr	w19, [sp, #84]
  4065f8:	b	4067f8 <util_resolve_subsys_kernel+0x350>
  4065fc:	ldrb	w0, [sp, #55]
  406600:	cmp	w0, #0x0
  406604:	b.eq	4066fc <util_resolve_subsys_kernel+0x254>  // b.none
  406608:	ldr	x0, [sp, #112]
  40660c:	add	x1, sp, #0x78
  406610:	mov	x2, x1
  406614:	ldr	x1, [sp, #128]
  406618:	bl	401b80 <sd_device_get_sysattr_value@plt>
  40661c:	str	w0, [sp, #84]
  406620:	ldr	w0, [sp, #84]
  406624:	cmp	w0, #0x0
  406628:	b.ge	406640 <util_resolve_subsys_kernel+0x198>  // b.tcont
  40662c:	ldr	w0, [sp, #84]
  406630:	cmn	w0, #0x2
  406634:	b.eq	406640 <util_resolve_subsys_kernel+0x198>  // b.none
  406638:	ldr	w19, [sp, #84]
  40663c:	b	4067f8 <util_resolve_subsys_kernel+0x350>
  406640:	ldr	w0, [sp, #84]
  406644:	cmn	w0, #0x2
  406648:	b.ne	406658 <util_resolve_subsys_kernel+0x1b0>  // b.any
  40664c:	ldr	x0, [sp, #64]
  406650:	strb	wzr, [x0]
  406654:	b	40666c <util_resolve_subsys_kernel+0x1c4>
  406658:	ldr	x0, [sp, #120]
  40665c:	mov	x2, x0
  406660:	ldr	x1, [sp, #56]
  406664:	ldr	x0, [sp, #64]
  406668:	bl	4018f0 <strscpy@plt>
  40666c:	mov	w0, #0x7                   	// #7
  406670:	str	w0, [sp, #100]
  406674:	str	wzr, [sp, #104]
  406678:	str	wzr, [sp, #108]
  40667c:	ldr	w0, [sp, #108]
  406680:	bl	401c90 <log_get_max_level_realm@plt>
  406684:	mov	w1, w0
  406688:	ldr	w0, [sp, #100]
  40668c:	and	w0, w0, #0x7
  406690:	cmp	w1, w0
  406694:	b.lt	4066f0 <util_resolve_subsys_kernel+0x248>  // b.tstop
  406698:	ldr	w0, [sp, #108]
  40669c:	lsl	w1, w0, #10
  4066a0:	ldr	w0, [sp, #100]
  4066a4:	orr	w8, w1, w0
  4066a8:	adrp	x0, 407000 <_fini+0x160>
  4066ac:	add	x1, x0, #0xc1b
  4066b0:	ldr	x0, [sp, #64]
  4066b4:	str	x0, [sp, #8]
  4066b8:	ldr	x0, [sp, #128]
  4066bc:	str	x0, [sp]
  4066c0:	ldr	x7, [sp, #144]
  4066c4:	ldr	x6, [sp, #136]
  4066c8:	adrp	x0, 407000 <_fini+0x160>
  4066cc:	add	x5, x0, #0xc38
  4066d0:	adrp	x0, 407000 <_fini+0x160>
  4066d4:	add	x4, x0, #0xcb8
  4066d8:	mov	w3, #0x42                  	// #66
  4066dc:	mov	x2, x1
  4066e0:	ldr	w1, [sp, #104]
  4066e4:	mov	w0, w8
  4066e8:	bl	401af0 <log_internal_realm@plt>
  4066ec:	b	4067f4 <util_resolve_subsys_kernel+0x34c>
  4066f0:	ldr	w0, [sp, #104]
  4066f4:	cmp	w0, #0x0
  4066f8:	b	4067f4 <util_resolve_subsys_kernel+0x34c>
  4066fc:	ldr	x0, [sp, #112]
  406700:	add	x1, sp, #0x78
  406704:	bl	401c40 <sd_device_get_syspath@plt>
  406708:	str	w0, [sp, #84]
  40670c:	ldr	w0, [sp, #84]
  406710:	cmp	w0, #0x0
  406714:	b.ge	406720 <util_resolve_subsys_kernel+0x278>  // b.tcont
  406718:	ldr	w19, [sp, #84]
  40671c:	b	4067f8 <util_resolve_subsys_kernel+0x350>
  406720:	ldr	x1, [sp, #120]
  406724:	ldr	x0, [sp, #128]
  406728:	cmp	x0, #0x0
  40672c:	b.eq	40673c <util_resolve_subsys_kernel+0x294>  // b.none
  406730:	adrp	x0, 407000 <_fini+0x160>
  406734:	add	x0, x0, #0xc58
  406738:	b	406740 <util_resolve_subsys_kernel+0x298>
  40673c:	mov	x0, #0x0                   	// #0
  406740:	ldr	x2, [sp, #128]
  406744:	mov	x5, #0x0                   	// #0
  406748:	mov	x4, x2
  40674c:	mov	x3, x0
  406750:	mov	x2, x1
  406754:	ldr	x1, [sp, #56]
  406758:	ldr	x0, [sp, #64]
  40675c:	bl	401980 <strscpyl@plt>
  406760:	mov	w0, #0x7                   	// #7
  406764:	str	w0, [sp, #88]
  406768:	str	wzr, [sp, #92]
  40676c:	str	wzr, [sp, #96]
  406770:	ldr	w0, [sp, #96]
  406774:	bl	401c90 <log_get_max_level_realm@plt>
  406778:	mov	w1, w0
  40677c:	ldr	w0, [sp, #88]
  406780:	and	w0, w0, #0x7
  406784:	cmp	w1, w0
  406788:	b.lt	4067ec <util_resolve_subsys_kernel+0x344>  // b.tstop
  40678c:	ldr	w0, [sp, #96]
  406790:	lsl	w1, w0, #10
  406794:	ldr	w0, [sp, #88]
  406798:	orr	w19, w1, w0
  40679c:	adrp	x0, 407000 <_fini+0x160>
  4067a0:	add	x20, x0, #0xc1b
  4067a4:	ldr	x0, [sp, #128]
  4067a8:	bl	406484 <strempty>
  4067ac:	mov	x1, x0
  4067b0:	ldr	x0, [sp, #64]
  4067b4:	str	x0, [sp, #8]
  4067b8:	str	x1, [sp]
  4067bc:	ldr	x7, [sp, #144]
  4067c0:	ldr	x6, [sp, #136]
  4067c4:	adrp	x0, 407000 <_fini+0x160>
  4067c8:	add	x5, x0, #0xc60
  4067cc:	adrp	x0, 407000 <_fini+0x160>
  4067d0:	add	x4, x0, #0xcb8
  4067d4:	mov	w3, #0x49                  	// #73
  4067d8:	mov	x2, x20
  4067dc:	ldr	w1, [sp, #92]
  4067e0:	mov	w0, w19
  4067e4:	bl	401af0 <log_internal_realm@plt>
  4067e8:	b	4067f4 <util_resolve_subsys_kernel+0x34c>
  4067ec:	ldr	w0, [sp, #92]
  4067f0:	cmp	w0, #0x0
  4067f4:	mov	w19, #0x0                   	// #0
  4067f8:	add	x0, sp, #0x70
  4067fc:	bl	406450 <sd_device_unrefp>
  406800:	mov	w1, w19
  406804:	adrp	x0, 418000 <__FRAME_END__+0xfbcc>
  406808:	ldr	x0, [x0, #4088]
  40680c:	ldr	x2, [sp, #1176]
  406810:	ldr	x0, [x0]
  406814:	eor	x0, x2, x0
  406818:	cmp	x0, #0x0
  40681c:	b.eq	406824 <util_resolve_subsys_kernel+0x37c>  // b.none
  406820:	bl	401aa0 <__stack_chk_fail@plt>
  406824:	mov	w0, w1
  406828:	ldp	x19, x20, [sp, #32]
  40682c:	ldp	x29, x30, [sp, #16]
  406830:	add	sp, sp, #0x4a0
  406834:	ret

0000000000406838 <util_path_encode>:
  406838:	stp	x29, x30, [sp, #-64]!
  40683c:	mov	x29, sp
  406840:	str	x0, [sp, #40]
  406844:	str	x1, [sp, #32]
  406848:	str	x2, [sp, #24]
  40684c:	ldr	x0, [sp, #40]
  406850:	cmp	x0, #0x0
  406854:	cset	w0, eq  // eq = none
  406858:	and	w0, w0, #0xff
  40685c:	and	x0, x0, #0xff
  406860:	cmp	x0, #0x0
  406864:	b.eq	406890 <util_path_encode+0x58>  // b.none
  406868:	adrp	x0, 407000 <_fini+0x160>
  40686c:	add	x1, x0, #0xc1b
  406870:	adrp	x0, 407000 <_fini+0x160>
  406874:	add	x4, x0, #0xcd8
  406878:	mov	w3, #0x51                  	// #81
  40687c:	mov	x2, x1
  406880:	adrp	x0, 407000 <_fini+0x160>
  406884:	add	x1, x0, #0xc80
  406888:	mov	w0, #0x0                   	// #0
  40688c:	bl	4019f0 <log_assert_failed_realm@plt>
  406890:	ldr	x0, [sp, #32]
  406894:	cmp	x0, #0x0
  406898:	cset	w0, eq  // eq = none
  40689c:	and	w0, w0, #0xff
  4068a0:	and	x0, x0, #0xff
  4068a4:	cmp	x0, #0x0
  4068a8:	b.eq	4068d4 <util_path_encode+0x9c>  // b.none
  4068ac:	adrp	x0, 407000 <_fini+0x160>
  4068b0:	add	x1, x0, #0xc1b
  4068b4:	adrp	x0, 407000 <_fini+0x160>
  4068b8:	add	x4, x0, #0xcd8
  4068bc:	mov	w3, #0x52                  	// #82
  4068c0:	mov	x2, x1
  4068c4:	adrp	x0, 407000 <_fini+0x160>
  4068c8:	add	x1, x0, #0xc88
  4068cc:	mov	w0, #0x0                   	// #0
  4068d0:	bl	4019f0 <log_assert_failed_realm@plt>
  4068d4:	str	xzr, [sp, #48]
  4068d8:	str	xzr, [sp, #56]
  4068dc:	b	4069fc <util_path_encode+0x1c4>
  4068e0:	ldr	x1, [sp, #40]
  4068e4:	ldr	x0, [sp, #48]
  4068e8:	add	x0, x1, x0
  4068ec:	ldrb	w0, [x0]
  4068f0:	cmp	w0, #0x2f
  4068f4:	b.ne	406944 <util_path_encode+0x10c>  // b.any
  4068f8:	ldr	x0, [sp, #56]
  4068fc:	add	x0, x0, #0x4
  406900:	ldr	x1, [sp, #24]
  406904:	cmp	x1, x0
  406908:	b.hi	406914 <util_path_encode+0xdc>  // b.pmore
  40690c:	str	xzr, [sp, #56]
  406910:	b	406a14 <util_path_encode+0x1dc>
  406914:	ldr	x1, [sp, #32]
  406918:	ldr	x0, [sp, #56]
  40691c:	add	x3, x1, x0
  406920:	mov	x2, #0x4                   	// #4
  406924:	adrp	x0, 407000 <_fini+0x160>
  406928:	add	x1, x0, #0xc90
  40692c:	mov	x0, x3
  406930:	bl	4019b0 <memcpy@plt>
  406934:	ldr	x0, [sp, #56]
  406938:	add	x0, x0, #0x4
  40693c:	str	x0, [sp, #56]
  406940:	b	4069f0 <util_path_encode+0x1b8>
  406944:	ldr	x1, [sp, #40]
  406948:	ldr	x0, [sp, #48]
  40694c:	add	x0, x1, x0
  406950:	ldrb	w0, [x0]
  406954:	cmp	w0, #0x5c
  406958:	b.ne	4069a8 <util_path_encode+0x170>  // b.any
  40695c:	ldr	x0, [sp, #56]
  406960:	add	x0, x0, #0x4
  406964:	ldr	x1, [sp, #24]
  406968:	cmp	x1, x0
  40696c:	b.hi	406978 <util_path_encode+0x140>  // b.pmore
  406970:	str	xzr, [sp, #56]
  406974:	b	406a14 <util_path_encode+0x1dc>
  406978:	ldr	x1, [sp, #32]
  40697c:	ldr	x0, [sp, #56]
  406980:	add	x3, x1, x0
  406984:	mov	x2, #0x4                   	// #4
  406988:	adrp	x0, 407000 <_fini+0x160>
  40698c:	add	x1, x0, #0xc98
  406990:	mov	x0, x3
  406994:	bl	4019b0 <memcpy@plt>
  406998:	ldr	x0, [sp, #56]
  40699c:	add	x0, x0, #0x4
  4069a0:	str	x0, [sp, #56]
  4069a4:	b	4069f0 <util_path_encode+0x1b8>
  4069a8:	ldr	x0, [sp, #56]
  4069ac:	add	x0, x0, #0x1
  4069b0:	ldr	x1, [sp, #24]
  4069b4:	cmp	x1, x0
  4069b8:	b.hi	4069c4 <util_path_encode+0x18c>  // b.pmore
  4069bc:	str	xzr, [sp, #56]
  4069c0:	b	406a14 <util_path_encode+0x1dc>
  4069c4:	ldr	x1, [sp, #40]
  4069c8:	ldr	x0, [sp, #48]
  4069cc:	add	x1, x1, x0
  4069d0:	ldr	x2, [sp, #32]
  4069d4:	ldr	x0, [sp, #56]
  4069d8:	add	x0, x2, x0
  4069dc:	ldrb	w1, [x1]
  4069e0:	strb	w1, [x0]
  4069e4:	ldr	x0, [sp, #56]
  4069e8:	add	x0, x0, #0x1
  4069ec:	str	x0, [sp, #56]
  4069f0:	ldr	x0, [sp, #48]
  4069f4:	add	x0, x0, #0x1
  4069f8:	str	x0, [sp, #48]
  4069fc:	ldr	x1, [sp, #40]
  406a00:	ldr	x0, [sp, #48]
  406a04:	add	x0, x1, x0
  406a08:	ldrb	w0, [x0]
  406a0c:	cmp	w0, #0x0
  406a10:	b.ne	4068e0 <util_path_encode+0xa8>  // b.any
  406a14:	ldr	x1, [sp, #32]
  406a18:	ldr	x0, [sp, #56]
  406a1c:	add	x0, x1, x0
  406a20:	strb	wzr, [x0]
  406a24:	ldr	x0, [sp, #56]
  406a28:	ldp	x29, x30, [sp], #64
  406a2c:	ret

0000000000406a30 <util_replace_whitespace>:
  406a30:	stp	x29, x30, [sp, #-80]!
  406a34:	mov	x29, sp
  406a38:	str	x0, [sp, #40]
  406a3c:	str	x1, [sp, #32]
  406a40:	str	x2, [sp, #24]
  406a44:	strb	wzr, [sp, #63]
  406a48:	ldr	x0, [sp, #40]
  406a4c:	cmp	x0, #0x0
  406a50:	cset	w0, eq  // eq = none
  406a54:	and	w0, w0, #0xff
  406a58:	and	x0, x0, #0xff
  406a5c:	cmp	x0, #0x0
  406a60:	b.eq	406a8c <util_replace_whitespace+0x5c>  // b.none
  406a64:	adrp	x0, 407000 <_fini+0x160>
  406a68:	add	x1, x0, #0xc1b
  406a6c:	adrp	x0, 407000 <_fini+0x160>
  406a70:	add	x4, x0, #0xcf0
  406a74:	mov	w3, #0x84                  	// #132
  406a78:	mov	x2, x1
  406a7c:	adrp	x0, 407000 <_fini+0x160>
  406a80:	add	x1, x0, #0xca0
  406a84:	mov	w0, #0x0                   	// #0
  406a88:	bl	4019f0 <log_assert_failed_realm@plt>
  406a8c:	ldr	x0, [sp, #32]
  406a90:	cmp	x0, #0x0
  406a94:	cset	w0, eq  // eq = none
  406a98:	and	w0, w0, #0xff
  406a9c:	and	x0, x0, #0xff
  406aa0:	cmp	x0, #0x0
  406aa4:	b.eq	406ad0 <util_replace_whitespace+0xa0>  // b.none
  406aa8:	adrp	x0, 407000 <_fini+0x160>
  406aac:	add	x1, x0, #0xc1b
  406ab0:	adrp	x0, 407000 <_fini+0x160>
  406ab4:	add	x4, x0, #0xcf0
  406ab8:	mov	w3, #0x85                  	// #133
  406abc:	mov	x2, x1
  406ac0:	adrp	x0, 407000 <_fini+0x160>
  406ac4:	add	x1, x0, #0xca8
  406ac8:	mov	w0, #0x0                   	// #0
  406acc:	bl	4019f0 <log_assert_failed_realm@plt>
  406ad0:	adrp	x0, 407000 <_fini+0x160>
  406ad4:	add	x1, x0, #0xcb0
  406ad8:	ldr	x0, [sp, #40]
  406adc:	bl	401a60 <strspn@plt>
  406ae0:	str	x0, [sp, #64]
  406ae4:	str	xzr, [sp, #72]
  406ae8:	b	406ba0 <util_replace_whitespace+0x170>
  406aec:	bl	4019c0 <__ctype_b_loc@plt>
  406af0:	ldr	x1, [x0]
  406af4:	ldr	x2, [sp, #40]
  406af8:	ldr	x0, [sp, #64]
  406afc:	add	x0, x2, x0
  406b00:	ldrb	w0, [x0]
  406b04:	and	x0, x0, #0xff
  406b08:	lsl	x0, x0, #1
  406b0c:	add	x0, x1, x0
  406b10:	ldrh	w0, [x0]
  406b14:	and	w0, w0, #0x2000
  406b18:	cmp	w0, #0x0
  406b1c:	b.eq	406b2c <util_replace_whitespace+0xfc>  // b.none
  406b20:	mov	w0, #0x1                   	// #1
  406b24:	strb	w0, [sp, #63]
  406b28:	b	406b94 <util_replace_whitespace+0x164>
  406b2c:	ldrb	w0, [sp, #63]
  406b30:	cmp	w0, #0x0
  406b34:	b.eq	406b6c <util_replace_whitespace+0x13c>  // b.none
  406b38:	ldr	x0, [sp, #72]
  406b3c:	add	x0, x0, #0x1
  406b40:	ldr	x1, [sp, #24]
  406b44:	cmp	x1, x0
  406b48:	b.ls	406bdc <util_replace_whitespace+0x1ac>  // b.plast
  406b4c:	ldr	x0, [sp, #72]
  406b50:	add	x1, x0, #0x1
  406b54:	str	x1, [sp, #72]
  406b58:	ldr	x1, [sp, #32]
  406b5c:	add	x0, x1, x0
  406b60:	mov	w1, #0x5f                  	// #95
  406b64:	strb	w1, [x0]
  406b68:	strb	wzr, [sp, #63]
  406b6c:	ldr	x1, [sp, #40]
  406b70:	ldr	x0, [sp, #64]
  406b74:	add	x1, x1, x0
  406b78:	ldr	x0, [sp, #72]
  406b7c:	add	x2, x0, #0x1
  406b80:	str	x2, [sp, #72]
  406b84:	ldr	x2, [sp, #32]
  406b88:	add	x0, x2, x0
  406b8c:	ldrb	w1, [x1]
  406b90:	strb	w1, [x0]
  406b94:	ldr	x0, [sp, #64]
  406b98:	add	x0, x0, #0x1
  406b9c:	str	x0, [sp, #64]
  406ba0:	ldr	x1, [sp, #72]
  406ba4:	ldr	x0, [sp, #24]
  406ba8:	cmp	x1, x0
  406bac:	b.cs	406be0 <util_replace_whitespace+0x1b0>  // b.hs, b.nlast
  406bb0:	ldr	x1, [sp, #64]
  406bb4:	ldr	x0, [sp, #24]
  406bb8:	cmp	x1, x0
  406bbc:	b.cs	406be0 <util_replace_whitespace+0x1b0>  // b.hs, b.nlast
  406bc0:	ldr	x1, [sp, #40]
  406bc4:	ldr	x0, [sp, #64]
  406bc8:	add	x0, x1, x0
  406bcc:	ldrb	w0, [x0]
  406bd0:	cmp	w0, #0x0
  406bd4:	b.ne	406aec <util_replace_whitespace+0xbc>  // b.any
  406bd8:	b	406be0 <util_replace_whitespace+0x1b0>
  406bdc:	nop
  406be0:	ldr	x1, [sp, #32]
  406be4:	ldr	x0, [sp, #72]
  406be8:	add	x0, x1, x0
  406bec:	strb	wzr, [x0]
  406bf0:	ldr	x0, [sp, #72]
  406bf4:	ldp	x29, x30, [sp], #80
  406bf8:	ret

0000000000406bfc <util_replace_chars>:
  406bfc:	stp	x29, x30, [sp, #-64]!
  406c00:	mov	x29, sp
  406c04:	str	x0, [sp, #24]
  406c08:	str	x1, [sp, #16]
  406c0c:	str	xzr, [sp, #48]
  406c10:	str	xzr, [sp, #56]
  406c14:	ldr	x0, [sp, #24]
  406c18:	cmp	x0, #0x0
  406c1c:	cset	w0, eq  // eq = none
  406c20:	and	w0, w0, #0xff
  406c24:	and	x0, x0, #0xff
  406c28:	cmp	x0, #0x0
  406c2c:	b.eq	406db4 <util_replace_chars+0x1b8>  // b.none
  406c30:	adrp	x0, 407000 <_fini+0x160>
  406c34:	add	x1, x0, #0xc1b
  406c38:	adrp	x0, 407000 <_fini+0x160>
  406c3c:	add	x4, x0, #0xd08
  406c40:	mov	w3, #0xa1                  	// #161
  406c44:	mov	x2, x1
  406c48:	adrp	x0, 407000 <_fini+0x160>
  406c4c:	add	x1, x0, #0xca0
  406c50:	mov	w0, #0x0                   	// #0
  406c54:	bl	4019f0 <log_assert_failed_realm@plt>
  406c58:	ldr	x1, [sp, #24]
  406c5c:	ldr	x0, [sp, #48]
  406c60:	add	x0, x1, x0
  406c64:	ldrb	w0, [x0]
  406c68:	ldr	x1, [sp, #16]
  406c6c:	bl	401b50 <whitelisted_char_for_devnode@plt>
  406c70:	cmp	w0, #0x0
  406c74:	b.eq	406c88 <util_replace_chars+0x8c>  // b.none
  406c78:	ldr	x0, [sp, #48]
  406c7c:	add	x0, x0, #0x1
  406c80:	str	x0, [sp, #48]
  406c84:	b	406db4 <util_replace_chars+0x1b8>
  406c88:	ldr	x1, [sp, #24]
  406c8c:	ldr	x0, [sp, #48]
  406c90:	add	x0, x1, x0
  406c94:	ldrb	w0, [x0]
  406c98:	cmp	w0, #0x5c
  406c9c:	b.ne	406ccc <util_replace_chars+0xd0>  // b.any
  406ca0:	ldr	x0, [sp, #48]
  406ca4:	add	x0, x0, #0x1
  406ca8:	ldr	x1, [sp, #24]
  406cac:	add	x0, x1, x0
  406cb0:	ldrb	w0, [x0]
  406cb4:	cmp	w0, #0x78
  406cb8:	b.ne	406ccc <util_replace_chars+0xd0>  // b.any
  406cbc:	ldr	x0, [sp, #48]
  406cc0:	add	x0, x0, #0x2
  406cc4:	str	x0, [sp, #48]
  406cc8:	b	406db4 <util_replace_chars+0x1b8>
  406ccc:	ldr	x1, [sp, #24]
  406cd0:	ldr	x0, [sp, #48]
  406cd4:	add	x0, x1, x0
  406cd8:	mov	x1, #0xffffffffffffffff    	// #-1
  406cdc:	bl	401a00 <utf8_encoded_valid_unichar@plt>
  406ce0:	str	w0, [sp, #44]
  406ce4:	ldr	w0, [sp, #44]
  406ce8:	cmp	w0, #0x1
  406cec:	b.le	406d04 <util_replace_chars+0x108>
  406cf0:	ldrsw	x0, [sp, #44]
  406cf4:	ldr	x1, [sp, #48]
  406cf8:	add	x0, x1, x0
  406cfc:	str	x0, [sp, #48]
  406d00:	b	406db4 <util_replace_chars+0x1b8>
  406d04:	bl	4019c0 <__ctype_b_loc@plt>
  406d08:	ldr	x1, [x0]
  406d0c:	ldr	x2, [sp, #24]
  406d10:	ldr	x0, [sp, #48]
  406d14:	add	x0, x2, x0
  406d18:	ldrb	w0, [x0]
  406d1c:	and	x0, x0, #0xff
  406d20:	lsl	x0, x0, #1
  406d24:	add	x0, x1, x0
  406d28:	ldrh	w0, [x0]
  406d2c:	and	w0, w0, #0x2000
  406d30:	cmp	w0, #0x0
  406d34:	b.eq	406d88 <util_replace_chars+0x18c>  // b.none
  406d38:	ldr	x0, [sp, #16]
  406d3c:	cmp	x0, #0x0
  406d40:	b.eq	406d88 <util_replace_chars+0x18c>  // b.none
  406d44:	mov	w1, #0x20                  	// #32
  406d48:	ldr	x0, [sp, #16]
  406d4c:	bl	401b60 <strchr@plt>
  406d50:	cmp	x0, #0x0
  406d54:	b.eq	406d88 <util_replace_chars+0x18c>  // b.none
  406d58:	ldr	x1, [sp, #24]
  406d5c:	ldr	x0, [sp, #48]
  406d60:	add	x0, x1, x0
  406d64:	mov	w1, #0x20                  	// #32
  406d68:	strb	w1, [x0]
  406d6c:	ldr	x0, [sp, #48]
  406d70:	add	x0, x0, #0x1
  406d74:	str	x0, [sp, #48]
  406d78:	ldr	x0, [sp, #56]
  406d7c:	add	x0, x0, #0x1
  406d80:	str	x0, [sp, #56]
  406d84:	b	406db4 <util_replace_chars+0x1b8>
  406d88:	ldr	x1, [sp, #24]
  406d8c:	ldr	x0, [sp, #48]
  406d90:	add	x0, x1, x0
  406d94:	mov	w1, #0x5f                  	// #95
  406d98:	strb	w1, [x0]
  406d9c:	ldr	x0, [sp, #48]
  406da0:	add	x0, x0, #0x1
  406da4:	str	x0, [sp, #48]
  406da8:	ldr	x0, [sp, #56]
  406dac:	add	x0, x0, #0x1
  406db0:	str	x0, [sp, #56]
  406db4:	ldr	x1, [sp, #24]
  406db8:	ldr	x0, [sp, #48]
  406dbc:	add	x0, x1, x0
  406dc0:	ldrb	w0, [x0]
  406dc4:	cmp	w0, #0x0
  406dc8:	b.ne	406c58 <util_replace_chars+0x5c>  // b.any
  406dcc:	ldr	x0, [sp, #56]
  406dd0:	ldp	x29, x30, [sp], #64
  406dd4:	ret

0000000000406dd8 <udev_util_encode_string>:
  406dd8:	stp	x29, x30, [sp, #-48]!
  406ddc:	mov	x29, sp
  406de0:	str	x0, [sp, #40]
  406de4:	str	x1, [sp, #32]
  406de8:	str	x2, [sp, #24]
  406dec:	ldr	x2, [sp, #24]
  406df0:	ldr	x1, [sp, #32]
  406df4:	ldr	x0, [sp, #40]
  406df8:	bl	401a20 <encode_devnode_name@plt>
  406dfc:	ldp	x29, x30, [sp], #48
  406e00:	ret
  406e04:	nop

0000000000406e08 <__libc_csu_init>:
  406e08:	stp	x29, x30, [sp, #-64]!
  406e0c:	mov	x29, sp
  406e10:	stp	x19, x20, [sp, #16]
  406e14:	adrp	x20, 418000 <__FRAME_END__+0xfbcc>
  406e18:	add	x20, x20, #0xbb0
  406e1c:	stp	x21, x22, [sp, #32]
  406e20:	adrp	x21, 418000 <__FRAME_END__+0xfbcc>
  406e24:	add	x21, x21, #0xba8
  406e28:	sub	x20, x20, x21
  406e2c:	mov	w22, w0
  406e30:	stp	x23, x24, [sp, #48]
  406e34:	mov	x23, x1
  406e38:	mov	x24, x2
  406e3c:	bl	4018a8 <_init>
  406e40:	cmp	xzr, x20, asr #3
  406e44:	b.eq	406e70 <__libc_csu_init+0x68>  // b.none
  406e48:	asr	x20, x20, #3
  406e4c:	mov	x19, #0x0                   	// #0
  406e50:	ldr	x3, [x21, x19, lsl #3]
  406e54:	mov	x2, x24
  406e58:	add	x19, x19, #0x1
  406e5c:	mov	x1, x23
  406e60:	mov	w0, w22
  406e64:	blr	x3
  406e68:	cmp	x20, x19
  406e6c:	b.ne	406e50 <__libc_csu_init+0x48>  // b.any
  406e70:	ldp	x19, x20, [sp, #16]
  406e74:	ldp	x21, x22, [sp, #32]
  406e78:	ldp	x23, x24, [sp, #48]
  406e7c:	ldp	x29, x30, [sp], #64
  406e80:	ret
  406e84:	nop

0000000000406e88 <__libc_csu_fini>:
  406e88:	ret
  406e8c:	nop

0000000000406e90 <fstat64>:
  406e90:	mov	x2, x1
  406e94:	mov	w1, w0
  406e98:	mov	w0, #0x0                   	// #0
  406e9c:	b	401a70 <__fxstat64@plt>

Disassembly of section .fini:

0000000000406ea0 <_fini>:
  406ea0:	stp	x29, x30, [sp, #-16]!
  406ea4:	mov	x29, sp
  406ea8:	ldp	x29, x30, [sp], #16
  406eac:	ret
