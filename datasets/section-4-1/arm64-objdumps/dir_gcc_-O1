
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//dir_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402370 <.init>:
  402370:	stp	x29, x30, [sp, #-16]!
  402374:	mov	x29, sp
  402378:	bl	402ab0 <__fxstatat@plt+0x60>
  40237c:	ldp	x29, x30, [sp], #16
  402380:	ret

Disassembly of section .plt:

0000000000402390 <mbrtowc@plt-0x20>:
  402390:	stp	x16, x30, [sp, #-16]!
  402394:	adrp	x16, 42e000 <_obstack_memory_used@@Base+0x1aaf4>
  402398:	ldr	x17, [x16, #4088]
  40239c:	add	x16, x16, #0xff8
  4023a0:	br	x17
  4023a4:	nop
  4023a8:	nop
  4023ac:	nop

00000000004023b0 <mbrtowc@plt>:
  4023b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16]
  4023b8:	add	x16, x16, #0x0
  4023bc:	br	x17

00000000004023c0 <memcpy@plt>:
  4023c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #8]
  4023c8:	add	x16, x16, #0x8
  4023cc:	br	x17

00000000004023d0 <memmove@plt>:
  4023d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #16]
  4023d8:	add	x16, x16, #0x10
  4023dc:	br	x17

00000000004023e0 <cap_to_text@plt>:
  4023e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #24]
  4023e8:	add	x16, x16, #0x18
  4023ec:	br	x17

00000000004023f0 <_exit@plt>:
  4023f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #32]
  4023f8:	add	x16, x16, #0x20
  4023fc:	br	x17

0000000000402400 <getcwd@plt>:
  402400:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #40]
  402408:	add	x16, x16, #0x28
  40240c:	br	x17

0000000000402410 <fwrite_unlocked@plt>:
  402410:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #48]
  402418:	add	x16, x16, #0x30
  40241c:	br	x17

0000000000402420 <strtoul@plt>:
  402420:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #56]
  402428:	add	x16, x16, #0x38
  40242c:	br	x17

0000000000402430 <strlen@plt>:
  402430:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #64]
  402438:	add	x16, x16, #0x40
  40243c:	br	x17

0000000000402440 <__sprintf_chk@plt>:
  402440:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #72]
  402448:	add	x16, x16, #0x48
  40244c:	br	x17

0000000000402450 <mbstowcs@plt>:
  402450:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #80]
  402458:	add	x16, x16, #0x50
  40245c:	br	x17

0000000000402460 <exit@plt>:
  402460:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #88]
  402468:	add	x16, x16, #0x58
  40246c:	br	x17

0000000000402470 <_setjmp@plt>:
  402470:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #96]
  402478:	add	x16, x16, #0x60
  40247c:	br	x17

0000000000402480 <raise@plt>:
  402480:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #104]
  402488:	add	x16, x16, #0x68
  40248c:	br	x17

0000000000402490 <error@plt>:
  402490:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #112]
  402498:	add	x16, x16, #0x70
  40249c:	br	x17

00000000004024a0 <sigprocmask@plt>:
  4024a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #120]
  4024a8:	add	x16, x16, #0x78
  4024ac:	br	x17

00000000004024b0 <localtime_r@plt>:
  4024b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #128]
  4024b8:	add	x16, x16, #0x80
  4024bc:	br	x17

00000000004024c0 <setenv@plt>:
  4024c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #136]
  4024c8:	add	x16, x16, #0x88
  4024cc:	br	x17

00000000004024d0 <readlink@plt>:
  4024d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #144]
  4024d8:	add	x16, x16, #0x90
  4024dc:	br	x17

00000000004024e0 <getgrnam@plt>:
  4024e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #152]
  4024e8:	add	x16, x16, #0x98
  4024ec:	br	x17

00000000004024f0 <opendir@plt>:
  4024f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #160]
  4024f8:	add	x16, x16, #0xa0
  4024fc:	br	x17

0000000000402500 <strftime@plt>:
  402500:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #168]
  402508:	add	x16, x16, #0xa8
  40250c:	br	x17

0000000000402510 <__cxa_atexit@plt>:
  402510:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #176]
  402518:	add	x16, x16, #0xb0
  40251c:	br	x17

0000000000402520 <iswcntrl@plt>:
  402520:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #184]
  402528:	add	x16, x16, #0xb8
  40252c:	br	x17

0000000000402530 <clock_gettime@plt>:
  402530:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #192]
  402538:	add	x16, x16, #0xc0
  40253c:	br	x17

0000000000402540 <lseek@plt>:
  402540:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #200]
  402548:	add	x16, x16, #0xc8
  40254c:	br	x17

0000000000402550 <__fpending@plt>:
  402550:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #208]
  402558:	add	x16, x16, #0xd0
  40255c:	br	x17

0000000000402560 <__ctype_tolower_loc@plt>:
  402560:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #216]
  402568:	add	x16, x16, #0xd8
  40256c:	br	x17

0000000000402570 <snprintf@plt>:
  402570:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #224]
  402578:	add	x16, x16, #0xe0
  40257c:	br	x17

0000000000402580 <localeconv@plt>:
  402580:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #232]
  402588:	add	x16, x16, #0xe8
  40258c:	br	x17

0000000000402590 <fileno@plt>:
  402590:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #240]
  402598:	add	x16, x16, #0xf0
  40259c:	br	x17

00000000004025a0 <__memcpy_chk@plt>:
  4025a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #248]
  4025a8:	add	x16, x16, #0xf8
  4025ac:	br	x17

00000000004025b0 <signal@plt>:
  4025b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #256]
  4025b8:	add	x16, x16, #0x100
  4025bc:	br	x17

00000000004025c0 <__snprintf_chk@plt>:
  4025c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #264]
  4025c8:	add	x16, x16, #0x108
  4025cc:	br	x17

00000000004025d0 <fclose@plt>:
  4025d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #272]
  4025d8:	add	x16, x16, #0x110
  4025dc:	br	x17

00000000004025e0 <nl_langinfo@plt>:
  4025e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #280]
  4025e8:	add	x16, x16, #0x118
  4025ec:	br	x17

00000000004025f0 <malloc@plt>:
  4025f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #288]
  4025f8:	add	x16, x16, #0x120
  4025fc:	br	x17

0000000000402600 <wcwidth@plt>:
  402600:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #296]
  402608:	add	x16, x16, #0x128
  40260c:	br	x17

0000000000402610 <tzset@plt>:
  402610:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #304]
  402618:	add	x16, x16, #0x130
  40261c:	br	x17

0000000000402620 <wcswidth@plt>:
  402620:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #312]
  402628:	add	x16, x16, #0x138
  40262c:	br	x17

0000000000402630 <sigemptyset@plt>:
  402630:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #320]
  402638:	add	x16, x16, #0x140
  40263c:	br	x17

0000000000402640 <strncmp@plt>:
  402640:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #328]
  402648:	add	x16, x16, #0x148
  40264c:	br	x17

0000000000402650 <bindtextdomain@plt>:
  402650:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #336]
  402658:	add	x16, x16, #0x150
  40265c:	br	x17

0000000000402660 <__libc_start_main@plt>:
  402660:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #344]
  402668:	add	x16, x16, #0x158
  40266c:	br	x17

0000000000402670 <__printf_chk@plt>:
  402670:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #352]
  402678:	add	x16, x16, #0x160
  40267c:	br	x17

0000000000402680 <memset@plt>:
  402680:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #360]
  402688:	add	x16, x16, #0x168
  40268c:	br	x17

0000000000402690 <getpwnam@plt>:
  402690:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #368]
  402698:	add	x16, x16, #0x170
  40269c:	br	x17

00000000004026a0 <gmtime_r@plt>:
  4026a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #376]
  4026a8:	add	x16, x16, #0x178
  4026ac:	br	x17

00000000004026b0 <__strtoul_internal@plt>:
  4026b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #384]
  4026b8:	add	x16, x16, #0x180
  4026bc:	br	x17

00000000004026c0 <calloc@plt>:
  4026c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #392]
  4026c8:	add	x16, x16, #0x188
  4026cc:	br	x17

00000000004026d0 <readdir@plt>:
  4026d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #400]
  4026d8:	add	x16, x16, #0x190
  4026dc:	br	x17

00000000004026e0 <realloc@plt>:
  4026e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #408]
  4026e8:	add	x16, x16, #0x198
  4026ec:	br	x17

00000000004026f0 <__ctype_toupper_loc@plt>:
  4026f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #416]
  4026f8:	add	x16, x16, #0x1a0
  4026fc:	br	x17

0000000000402700 <closedir@plt>:
  402700:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #424]
  402708:	add	x16, x16, #0x1a8
  40270c:	br	x17

0000000000402710 <sigaction@plt>:
  402710:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #432]
  402718:	add	x16, x16, #0x1b0
  40271c:	br	x17

0000000000402720 <strrchr@plt>:
  402720:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #440]
  402728:	add	x16, x16, #0x1b8
  40272c:	br	x17

0000000000402730 <tcgetpgrp@plt>:
  402730:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #448]
  402738:	add	x16, x16, #0x1c0
  40273c:	br	x17

0000000000402740 <__gmon_start__@plt>:
  402740:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #456]
  402748:	add	x16, x16, #0x1c8
  40274c:	br	x17

0000000000402750 <mktime@plt>:
  402750:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #464]
  402758:	add	x16, x16, #0x1d0
  40275c:	br	x17

0000000000402760 <abort@plt>:
  402760:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #472]
  402768:	add	x16, x16, #0x1d8
  40276c:	br	x17

0000000000402770 <mbsinit@plt>:
  402770:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #480]
  402778:	add	x16, x16, #0x1e0
  40277c:	br	x17

0000000000402780 <__overflow@plt>:
  402780:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #488]
  402788:	add	x16, x16, #0x1e8
  40278c:	br	x17

0000000000402790 <getxattr@plt>:
  402790:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #496]
  402798:	add	x16, x16, #0x1f0
  40279c:	br	x17

00000000004027a0 <memcmp@plt>:
  4027a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #504]
  4027a8:	add	x16, x16, #0x1f8
  4027ac:	br	x17

00000000004027b0 <textdomain@plt>:
  4027b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #512]
  4027b8:	add	x16, x16, #0x200
  4027bc:	br	x17

00000000004027c0 <stpncpy@plt>:
  4027c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #520]
  4027c8:	add	x16, x16, #0x208
  4027cc:	br	x17

00000000004027d0 <getopt_long@plt>:
  4027d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #528]
  4027d8:	add	x16, x16, #0x210
  4027dc:	br	x17

00000000004027e0 <__fprintf_chk@plt>:
  4027e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #536]
  4027e8:	add	x16, x16, #0x218
  4027ec:	br	x17

00000000004027f0 <sigismember@plt>:
  4027f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #544]
  4027f8:	add	x16, x16, #0x220
  4027fc:	br	x17

0000000000402800 <strcmp@plt>:
  402800:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #552]
  402808:	add	x16, x16, #0x228
  40280c:	br	x17

0000000000402810 <getpwuid@plt>:
  402810:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #560]
  402818:	add	x16, x16, #0x230
  40281c:	br	x17

0000000000402820 <__ctype_b_loc@plt>:
  402820:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #568]
  402828:	add	x16, x16, #0x238
  40282c:	br	x17

0000000000402830 <fseeko@plt>:
  402830:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #576]
  402838:	add	x16, x16, #0x240
  40283c:	br	x17

0000000000402840 <free@plt>:
  402840:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #584]
  402848:	add	x16, x16, #0x248
  40284c:	br	x17

0000000000402850 <__ctype_get_mb_cur_max@plt>:
  402850:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #592]
  402858:	add	x16, x16, #0x250
  40285c:	br	x17

0000000000402860 <mempcpy@plt>:
  402860:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #600]
  402868:	add	x16, x16, #0x258
  40286c:	br	x17

0000000000402870 <strspn@plt>:
  402870:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #608]
  402878:	add	x16, x16, #0x260
  40287c:	br	x17

0000000000402880 <strchr@plt>:
  402880:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #616]
  402888:	add	x16, x16, #0x268
  40288c:	br	x17

0000000000402890 <fwrite@plt>:
  402890:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #624]
  402898:	add	x16, x16, #0x270
  40289c:	br	x17

00000000004028a0 <fnmatch@plt>:
  4028a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #632]
  4028a8:	add	x16, x16, #0x278
  4028ac:	br	x17

00000000004028b0 <fflush_unlocked@plt>:
  4028b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #640]
  4028b8:	add	x16, x16, #0x280
  4028bc:	br	x17

00000000004028c0 <fflush@plt>:
  4028c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #648]
  4028c8:	add	x16, x16, #0x288
  4028cc:	br	x17

00000000004028d0 <strcpy@plt>:
  4028d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #656]
  4028d8:	add	x16, x16, #0x290
  4028dc:	br	x17

00000000004028e0 <dirfd@plt>:
  4028e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #664]
  4028e8:	add	x16, x16, #0x298
  4028ec:	br	x17

00000000004028f0 <unsetenv@plt>:
  4028f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #672]
  4028f8:	add	x16, x16, #0x2a0
  4028fc:	br	x17

0000000000402900 <__lxstat@plt>:
  402900:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #680]
  402908:	add	x16, x16, #0x2a8
  40290c:	br	x17

0000000000402910 <cap_get_file@plt>:
  402910:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #688]
  402918:	add	x16, x16, #0x2b0
  40291c:	br	x17

0000000000402920 <isatty@plt>:
  402920:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #696]
  402928:	add	x16, x16, #0x2b8
  40292c:	br	x17

0000000000402930 <wcstombs@plt>:
  402930:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #704]
  402938:	add	x16, x16, #0x2c0
  40293c:	br	x17

0000000000402940 <gethostname@plt>:
  402940:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #712]
  402948:	add	x16, x16, #0x2c8
  40294c:	br	x17

0000000000402950 <cap_free@plt>:
  402950:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #720]
  402958:	add	x16, x16, #0x2d0
  40295c:	br	x17

0000000000402960 <__fxstat@plt>:
  402960:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #728]
  402968:	add	x16, x16, #0x2d8
  40296c:	br	x17

0000000000402970 <dcgettext@plt>:
  402970:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #736]
  402978:	add	x16, x16, #0x2e0
  40297c:	br	x17

0000000000402980 <fputs_unlocked@plt>:
  402980:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #744]
  402988:	add	x16, x16, #0x2e8
  40298c:	br	x17

0000000000402990 <strcoll@plt>:
  402990:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #752]
  402998:	add	x16, x16, #0x2f0
  40299c:	br	x17

00000000004029a0 <__freading@plt>:
  4029a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #760]
  4029a8:	add	x16, x16, #0x2f8
  4029ac:	br	x17

00000000004029b0 <sigaddset@plt>:
  4029b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #768]
  4029b8:	add	x16, x16, #0x300
  4029bc:	br	x17

00000000004029c0 <iswprint@plt>:
  4029c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #776]
  4029c8:	add	x16, x16, #0x308
  4029cc:	br	x17

00000000004029d0 <__assert_fail@plt>:
  4029d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #784]
  4029d8:	add	x16, x16, #0x310
  4029dc:	br	x17

00000000004029e0 <__errno_location@plt>:
  4029e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #792]
  4029e8:	add	x16, x16, #0x318
  4029ec:	br	x17

00000000004029f0 <getenv@plt>:
  4029f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #800]
  4029f8:	add	x16, x16, #0x320
  4029fc:	br	x17

0000000000402a00 <__xstat@plt>:
  402a00:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #808]
  402a08:	add	x16, x16, #0x328
  402a0c:	br	x17

0000000000402a10 <getgrgid@plt>:
  402a10:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #816]
  402a18:	add	x16, x16, #0x330
  402a1c:	br	x17

0000000000402a20 <timegm@plt>:
  402a20:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #824]
  402a28:	add	x16, x16, #0x338
  402a2c:	br	x17

0000000000402a30 <ioctl@plt>:
  402a30:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #832]
  402a38:	add	x16, x16, #0x340
  402a3c:	br	x17

0000000000402a40 <setlocale@plt>:
  402a40:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #840]
  402a48:	add	x16, x16, #0x348
  402a4c:	br	x17

0000000000402a50 <__fxstatat@plt>:
  402a50:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #848]
  402a58:	add	x16, x16, #0x350
  402a5c:	br	x17

Disassembly of section .text:

0000000000402a60 <_obstack_begin@@Base-0x10888>:
  402a60:	mov	x29, #0x0                   	// #0
  402a64:	mov	x30, #0x0                   	// #0
  402a68:	mov	x5, x0
  402a6c:	ldr	x1, [sp]
  402a70:	add	x2, sp, #0x8
  402a74:	mov	x6, sp
  402a78:	movz	x0, #0x0, lsl #48
  402a7c:	movk	x0, #0x0, lsl #32
  402a80:	movk	x0, #0x40, lsl #16
  402a84:	movk	x0, #0x9290
  402a88:	movz	x3, #0x0, lsl #48
  402a8c:	movk	x3, #0x0, lsl #32
  402a90:	movk	x3, #0x41, lsl #16
  402a94:	movk	x3, #0x52b0
  402a98:	movz	x4, #0x0, lsl #48
  402a9c:	movk	x4, #0x0, lsl #32
  402aa0:	movk	x4, #0x41, lsl #16
  402aa4:	movk	x4, #0x5330
  402aa8:	bl	402660 <__libc_start_main@plt>
  402aac:	bl	402760 <abort@plt>
  402ab0:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x1aaf4>
  402ab4:	ldr	x0, [x0, #4064]
  402ab8:	cbz	x0, 402ac0 <__fxstatat@plt+0x70>
  402abc:	b	402740 <__gmon_start__@plt>
  402ac0:	ret
  402ac4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402ac8:	add	x0, x0, #0x590
  402acc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402ad0:	add	x1, x1, #0x590
  402ad4:	cmp	x0, x1
  402ad8:	b.eq	402b0c <__fxstatat@plt+0xbc>  // b.none
  402adc:	stp	x29, x30, [sp, #-32]!
  402ae0:	mov	x29, sp
  402ae4:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  402ae8:	ldr	x0, [x0, #872]
  402aec:	str	x0, [sp, #24]
  402af0:	mov	x1, x0
  402af4:	cbz	x1, 402b04 <__fxstatat@plt+0xb4>
  402af8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402afc:	add	x0, x0, #0x590
  402b00:	blr	x1
  402b04:	ldp	x29, x30, [sp], #32
  402b08:	ret
  402b0c:	ret
  402b10:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402b14:	add	x0, x0, #0x590
  402b18:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402b1c:	add	x1, x1, #0x590
  402b20:	sub	x0, x0, x1
  402b24:	lsr	x1, x0, #63
  402b28:	add	x0, x1, x0, asr #3
  402b2c:	cmp	xzr, x0, asr #1
  402b30:	b.eq	402b68 <__fxstatat@plt+0x118>  // b.none
  402b34:	stp	x29, x30, [sp, #-32]!
  402b38:	mov	x29, sp
  402b3c:	asr	x1, x0, #1
  402b40:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  402b44:	ldr	x0, [x0, #880]
  402b48:	str	x0, [sp, #24]
  402b4c:	mov	x2, x0
  402b50:	cbz	x2, 402b60 <__fxstatat@plt+0x110>
  402b54:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402b58:	add	x0, x0, #0x590
  402b5c:	blr	x2
  402b60:	ldp	x29, x30, [sp], #32
  402b64:	ret
  402b68:	ret
  402b6c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402b70:	ldrb	w0, [x0, #1472]
  402b74:	cbnz	w0, 402b98 <__fxstatat@plt+0x148>
  402b78:	stp	x29, x30, [sp, #-16]!
  402b7c:	mov	x29, sp
  402b80:	bl	402ac4 <__fxstatat@plt+0x74>
  402b84:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402b88:	mov	w1, #0x1                   	// #1
  402b8c:	strb	w1, [x0, #1472]
  402b90:	ldp	x29, x30, [sp], #16
  402b94:	ret
  402b98:	ret
  402b9c:	stp	x29, x30, [sp, #-16]!
  402ba0:	mov	x29, sp
  402ba4:	bl	402b10 <__fxstatat@plt+0xc0>
  402ba8:	ldp	x29, x30, [sp], #16
  402bac:	ret
  402bb0:	ldr	x0, [x0]
  402bb4:	udiv	x2, x0, x1
  402bb8:	msub	x0, x2, x1, x0
  402bbc:	ret
  402bc0:	ldr	x3, [x0]
  402bc4:	ldr	x2, [x1]
  402bc8:	cmp	x3, x2
  402bcc:	b.eq	402bd8 <__fxstatat@plt+0x188>  // b.none
  402bd0:	mov	w0, #0x0                   	// #0
  402bd4:	ret
  402bd8:	ldr	x2, [x0, #8]
  402bdc:	ldr	x0, [x1, #8]
  402be0:	cmp	x2, x0
  402be4:	cset	w0, eq  // eq = none
  402be8:	b	402bd4 <__fxstatat@plt+0x184>
  402bec:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402bf0:	ldr	w1, [x1, #1480]
  402bf4:	cbnz	w1, 402c00 <__fxstatat@plt+0x1b0>
  402bf8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402bfc:	str	w0, [x1, #1480]
  402c00:	ret
  402c04:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402c08:	ldr	w0, [x0, #1480]
  402c0c:	cbnz	w0, 402c24 <__fxstatat@plt+0x1d4>
  402c10:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402c14:	add	x0, x0, #0x5c8
  402c18:	ldr	w1, [x0, #4]
  402c1c:	add	w1, w1, #0x1
  402c20:	str	w1, [x0, #4]
  402c24:	ret
  402c28:	sub	w1, w0, #0x16
  402c2c:	and	w1, w1, #0xffffffef
  402c30:	cmp	w0, #0x5f
  402c34:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  402c38:	cset	w0, eq  // eq = none
  402c3c:	ret
  402c40:	ldr	w1, [x0, #152]
  402c44:	cmp	w1, #0x3
  402c48:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  402c4c:	b.eq	402c64 <__fxstatat@plt+0x214>  // b.none
  402c50:	ldr	w0, [x0, #156]
  402c54:	and	w0, w0, #0xf000
  402c58:	cmp	w0, #0x4, lsl #12
  402c5c:	cset	w0, eq  // eq = none
  402c60:	ret
  402c64:	mov	w0, #0x1                   	// #1
  402c68:	b	402c60 <__fxstatat@plt+0x210>
  402c6c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402c70:	ldr	x2, [x0, #1488]
  402c74:	cbz	x2, 402c9c <__fxstatat@plt+0x24c>
  402c78:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402c7c:	add	x0, x0, #0x5c8
  402c80:	ldr	x1, [x0, #16]
  402c84:	ldr	x0, [x0, #24]
  402c88:	add	x2, x0, x2, lsl #3
  402c8c:	str	x1, [x0], #8
  402c90:	add	x1, x1, #0xb8
  402c94:	cmp	x0, x2
  402c98:	b.ne	402c8c <__fxstatat@plt+0x23c>  // b.any
  402c9c:	ret
  402ca0:	ands	w4, w0, #0xff
  402ca4:	b.eq	402d14 <__fxstatat@plt+0x2c4>  // b.none
  402ca8:	and	w0, w1, #0xf000
  402cac:	cmp	w0, #0x8, lsl #12
  402cb0:	b.eq	402d34 <__fxstatat@plt+0x2e4>  // b.none
  402cb4:	and	w0, w1, #0xf000
  402cb8:	cmp	w0, #0x4, lsl #12
  402cbc:	cset	w3, eq  // eq = none
  402cc0:	mov	w0, #0x2f                  	// #47
  402cc4:	cbnz	w3, 402d48 <__fxstatat@plt+0x2f8>
  402cc8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402ccc:	ldr	w3, [x0, #1512]
  402cd0:	mov	w0, #0x0                   	// #0
  402cd4:	cmp	w3, #0x1
  402cd8:	b.eq	402d48 <__fxstatat@plt+0x2f8>  // b.none
  402cdc:	cbz	w4, 402d60 <__fxstatat@plt+0x310>
  402ce0:	and	w1, w1, #0xf000
  402ce4:	mov	w0, #0x40                  	// #64
  402ce8:	cmp	w1, #0xa, lsl #12
  402cec:	b.eq	402d48 <__fxstatat@plt+0x2f8>  // b.none
  402cf0:	mov	w0, #0x7c                  	// #124
  402cf4:	cmp	w1, #0x1, lsl #12
  402cf8:	b.eq	402d48 <__fxstatat@plt+0x2f8>  // b.none
  402cfc:	cmp	w1, #0xc, lsl #12
  402d00:	cset	w0, eq  // eq = none
  402d04:	cmp	w0, #0x0
  402d08:	mov	w0, #0x3d                  	// #61
  402d0c:	csel	w0, w0, wzr, ne  // ne = any
  402d10:	b	402d48 <__fxstatat@plt+0x2f8>
  402d14:	mov	w0, #0x0                   	// #0
  402d18:	cmp	w2, #0x5
  402d1c:	b.eq	402d48 <__fxstatat@plt+0x2f8>  // b.none
  402d20:	cmp	w2, #0x3
  402d24:	cset	w3, eq  // eq = none
  402d28:	cmp	w2, #0x9
  402d2c:	csinc	w3, w3, wzr, ne  // ne = any
  402d30:	b	402cc0 <__fxstatat@plt+0x270>
  402d34:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402d38:	ldr	w2, [x0, #1512]
  402d3c:	mov	w0, #0x0                   	// #0
  402d40:	cmp	w2, #0x3
  402d44:	b.eq	402d4c <__fxstatat@plt+0x2fc>  // b.none
  402d48:	ret
  402d4c:	mov	w0, #0x49                  	// #73
  402d50:	tst	w1, w0
  402d54:	mov	w0, #0x2a                  	// #42
  402d58:	csel	w0, w0, wzr, ne  // ne = any
  402d5c:	b	402d48 <__fxstatat@plt+0x2f8>
  402d60:	mov	w0, #0x40                  	// #64
  402d64:	cmp	w2, #0x6
  402d68:	b.eq	402d48 <__fxstatat@plt+0x2f8>  // b.none
  402d6c:	mov	w0, #0x7c                  	// #124
  402d70:	cmp	w2, #0x1
  402d74:	b.eq	402d48 <__fxstatat@plt+0x2f8>  // b.none
  402d78:	cmp	w2, #0x7
  402d7c:	cset	w0, eq  // eq = none
  402d80:	b	402d04 <__fxstatat@plt+0x2b4>
  402d84:	stp	x29, x30, [sp, #-48]!
  402d88:	mov	x29, sp
  402d8c:	stp	x21, x22, [sp, #32]
  402d90:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402d94:	ldr	x22, [x0, #1488]
  402d98:	cbz	x22, 402ddc <__fxstatat@plt+0x38c>
  402d9c:	stp	x19, x20, [sp, #16]
  402da0:	mov	x19, #0x0                   	// #0
  402da4:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402da8:	add	x21, x21, #0x5c8
  402dac:	ldr	x0, [x21, #24]
  402db0:	ldr	x20, [x0, x19, lsl #3]
  402db4:	ldr	x0, [x20]
  402db8:	bl	402840 <free@plt>
  402dbc:	ldr	x0, [x20, #8]
  402dc0:	bl	402840 <free@plt>
  402dc4:	ldr	x0, [x20, #16]
  402dc8:	bl	402840 <free@plt>
  402dcc:	add	x19, x19, #0x1
  402dd0:	cmp	x19, x22
  402dd4:	b.ne	402dac <__fxstatat@plt+0x35c>  // b.any
  402dd8:	ldp	x19, x20, [sp, #16]
  402ddc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  402de0:	add	x0, x0, #0x5c8
  402de4:	str	xzr, [x0, #8]
  402de8:	strb	wzr, [x0, #36]
  402dec:	strb	wzr, [x0, #37]
  402df0:	str	wzr, [x0, #40]
  402df4:	str	wzr, [x0, #44]
  402df8:	str	wzr, [x0, #48]
  402dfc:	str	wzr, [x0, #52]
  402e00:	str	wzr, [x0, #56]
  402e04:	str	wzr, [x0, #60]
  402e08:	str	wzr, [x0, #64]
  402e0c:	str	wzr, [x0, #68]
  402e10:	str	wzr, [x0, #72]
  402e14:	str	wzr, [x0, #76]
  402e18:	ldp	x21, x22, [sp, #32]
  402e1c:	ldp	x29, x30, [sp], #48
  402e20:	ret
  402e24:	stp	x29, x30, [sp, #-16]!
  402e28:	mov	x29, sp
  402e2c:	bl	402840 <free@plt>
  402e30:	ldp	x29, x30, [sp], #16
  402e34:	ret
  402e38:	stp	x29, x30, [sp, #-80]!
  402e3c:	mov	x29, sp
  402e40:	stp	x19, x20, [sp, #16]
  402e44:	stp	x21, x22, [sp, #32]
  402e48:	stp	x23, x24, [sp, #48]
  402e4c:	stp	x25, x26, [sp, #64]
  402e50:	and	w2, w2, #0xff
  402e54:	ldr	x8, [x1]
  402e58:	ldr	x7, [x0]
  402e5c:	mov	w4, #0x0                   	// #0
  402e60:	mov	x10, #0x0                   	// #0
  402e64:	mov	w6, #0x0                   	// #0
  402e68:	mov	w11, #0x0                   	// #0
  402e6c:	mov	w23, #0x7f                  	// #127
  402e70:	mov	w26, #0x1b                  	// #27
  402e74:	mov	w24, #0xd                   	// #13
  402e78:	mov	w20, #0xb                   	// #11
  402e7c:	mov	w12, #0x3                   	// #3
  402e80:	mov	w19, #0x9                   	// #9
  402e84:	mov	w30, #0xc                   	// #12
  402e88:	mov	w18, #0xa                   	// #10
  402e8c:	mov	w17, #0x7                   	// #7
  402e90:	mov	w16, #0x8                   	// #8
  402e94:	mov	w15, #0x20                  	// #32
  402e98:	mov	w14, #0x7f                  	// #127
  402e9c:	mov	w25, #0x2                   	// #2
  402ea0:	mov	w13, #0x6                   	// #6
  402ea4:	mov	w22, #0x1                   	// #1
  402ea8:	mov	w21, #0x4                   	// #4
  402eac:	b	402fe8 <__fxstatat@plt+0x598>
  402eb0:	cbz	w4, 402ef4 <__fxstatat@plt+0x4a4>
  402eb4:	ldrb	w5, [x8]
  402eb8:	cmp	w5, #0x65
  402ebc:	b.eq	403064 <__fxstatat@plt+0x614>  // b.none
  402ec0:	b.hi	402fb8 <__fxstatat@plt+0x568>  // b.pmore
  402ec4:	cmp	w5, #0x58
  402ec8:	b.eq	40307c <__fxstatat@plt+0x62c>  // b.none
  402ecc:	b.ls	402f80 <__fxstatat@plt+0x530>  // b.plast
  402ed0:	mov	w6, w17
  402ed4:	cmp	w5, #0x61
  402ed8:	b.eq	402fa8 <__fxstatat@plt+0x558>  // b.none
  402edc:	mov	w6, w16
  402ee0:	cmp	w5, #0x62
  402ee4:	b.eq	402fa8 <__fxstatat@plt+0x558>  // b.none
  402ee8:	cmp	w5, #0x5f
  402eec:	csel	w6, w5, w15, ne  // ne = any
  402ef0:	b	402fa8 <__fxstatat@plt+0x558>
  402ef4:	ldrb	w5, [x8]
  402ef8:	cmp	w5, #0x5c
  402efc:	b.eq	402f60 <__fxstatat@plt+0x510>  // b.none
  402f00:	b.hi	402f4c <__fxstatat@plt+0x4fc>  // b.pmore
  402f04:	cmp	w5, #0x3d
  402f08:	b.eq	402f6c <__fxstatat@plt+0x51c>  // b.none
  402f0c:	b.hi	402f70 <__fxstatat@plt+0x520>  // b.pmore
  402f10:	cbz	w5, 403184 <__fxstatat@plt+0x734>
  402f14:	cmp	w5, #0x3a
  402f18:	b.ne	402f70 <__fxstatat@plt+0x520>  // b.any
  402f1c:	mov	w4, #0x5                   	// #5
  402f20:	str	x7, [x0]
  402f24:	str	x8, [x1]
  402f28:	str	x10, [x3]
  402f2c:	cmp	w4, #0x6
  402f30:	cset	w0, ne  // ne = any
  402f34:	ldp	x19, x20, [sp, #16]
  402f38:	ldp	x21, x22, [sp, #32]
  402f3c:	ldp	x23, x24, [sp, #48]
  402f40:	ldp	x25, x26, [sp, #64]
  402f44:	ldp	x29, x30, [sp], #80
  402f48:	ret
  402f4c:	cmp	w5, #0x5e
  402f50:	b.ne	402f70 <__fxstatat@plt+0x520>  // b.any
  402f54:	add	x8, x8, #0x1
  402f58:	mov	w4, w21
  402f5c:	b	402fe8 <__fxstatat@plt+0x598>
  402f60:	add	x8, x8, #0x1
  402f64:	mov	w4, w22
  402f68:	b	402fe8 <__fxstatat@plt+0x598>
  402f6c:	cbnz	w2, 40318c <__fxstatat@plt+0x73c>
  402f70:	add	x8, x8, #0x1
  402f74:	strb	w5, [x7], #1
  402f78:	add	x10, x10, #0x1
  402f7c:	b	402fe8 <__fxstatat@plt+0x598>
  402f80:	cmp	w5, #0x37
  402f84:	b.hi	402fa0 <__fxstatat@plt+0x550>  // b.pmore
  402f88:	cmp	w5, #0x2f
  402f8c:	b.hi	403054 <__fxstatat@plt+0x604>  // b.pmore
  402f90:	mov	w4, w13
  402f94:	cbz	w5, 402fdc <__fxstatat@plt+0x58c>
  402f98:	mov	w6, w5
  402f9c:	b	402fa8 <__fxstatat@plt+0x558>
  402fa0:	cmp	w5, #0x3f
  402fa4:	csel	w6, w5, w14, ne  // ne = any
  402fa8:	strb	w6, [x7], #1
  402fac:	add	x10, x10, #0x1
  402fb0:	mov	w4, w11
  402fb4:	b	402fdc <__fxstatat@plt+0x58c>
  402fb8:	cmp	w5, #0x72
  402fbc:	b.eq	40306c <__fxstatat@plt+0x61c>  // b.none
  402fc0:	b.ls	403030 <__fxstatat@plt+0x5e0>  // b.plast
  402fc4:	cmp	w5, #0x76
  402fc8:	b.eq	403074 <__fxstatat@plt+0x624>  // b.none
  402fcc:	cmp	w5, #0x78
  402fd0:	b.ne	403048 <__fxstatat@plt+0x5f8>  // b.any
  402fd4:	mov	w6, w11
  402fd8:	mov	w4, w12
  402fdc:	add	x8, x8, #0x1
  402fe0:	cmp	w4, #0x4
  402fe4:	b.hi	402f20 <__fxstatat@plt+0x4d0>  // b.pmore
  402fe8:	cmp	w4, #0x2
  402fec:	b.eq	403088 <__fxstatat@plt+0x638>  // b.none
  402ff0:	b.ls	402eb0 <__fxstatat@plt+0x460>  // b.plast
  402ff4:	cmp	w4, #0x3
  402ff8:	b.eq	4030c8 <__fxstatat@plt+0x678>  // b.none
  402ffc:	cmp	w4, #0x4
  403000:	b.ne	403180 <__fxstatat@plt+0x730>  // b.any
  403004:	ldrb	w4, [x8]
  403008:	sub	w5, w4, #0x40
  40300c:	and	w5, w5, #0xff
  403010:	cmp	w5, #0x3e
  403014:	b.hi	403160 <__fxstatat@plt+0x710>  // b.pmore
  403018:	add	x8, x8, #0x1
  40301c:	and	w4, w4, #0x1f
  403020:	strb	w4, [x7], #1
  403024:	add	x10, x10, #0x1
  403028:	mov	w4, w11
  40302c:	b	402fe8 <__fxstatat@plt+0x598>
  403030:	mov	w6, w30
  403034:	cmp	w5, #0x66
  403038:	b.eq	402fa8 <__fxstatat@plt+0x558>  // b.none
  40303c:	cmp	w5, #0x6e
  403040:	csel	w6, w5, w18, ne  // ne = any
  403044:	b	402fa8 <__fxstatat@plt+0x558>
  403048:	cmp	w5, #0x74
  40304c:	csel	w6, w5, w19, ne  // ne = any
  403050:	b	402fa8 <__fxstatat@plt+0x558>
  403054:	sub	w5, w5, #0x30
  403058:	and	w6, w5, #0xff
  40305c:	mov	w4, w25
  403060:	b	402fdc <__fxstatat@plt+0x58c>
  403064:	mov	w6, w26
  403068:	b	402fa8 <__fxstatat@plt+0x558>
  40306c:	mov	w6, w24
  403070:	b	402fa8 <__fxstatat@plt+0x558>
  403074:	mov	w6, w20
  403078:	b	402fa8 <__fxstatat@plt+0x558>
  40307c:	mov	w6, w11
  403080:	mov	w4, w12
  403084:	b	402fdc <__fxstatat@plt+0x58c>
  403088:	ldrb	w9, [x8]
  40308c:	sub	w5, w9, #0x30
  403090:	and	w5, w5, #0xff
  403094:	cmp	w5, #0x7
  403098:	b.ls	4030ac <__fxstatat@plt+0x65c>  // b.plast
  40309c:	strb	w6, [x7], #1
  4030a0:	add	x10, x10, #0x1
  4030a4:	mov	w4, w11
  4030a8:	b	402fe8 <__fxstatat@plt+0x598>
  4030ac:	add	x8, x8, #0x1
  4030b0:	ubfiz	w5, w6, #3, #5
  4030b4:	add	w5, w9, w5
  4030b8:	and	w5, w5, #0xff
  4030bc:	sub	w5, w5, #0x30
  4030c0:	and	w6, w5, #0xff
  4030c4:	b	402fe8 <__fxstatat@plt+0x598>
  4030c8:	ldrb	w9, [x8]
  4030cc:	cmp	w9, #0x46
  4030d0:	b.hi	403108 <__fxstatat@plt+0x6b8>  // b.pmore
  4030d4:	cmp	w9, #0x40
  4030d8:	b.hi	403134 <__fxstatat@plt+0x6e4>  // b.pmore
  4030dc:	sub	w5, w9, #0x30
  4030e0:	and	w5, w5, #0xff
  4030e4:	cmp	w5, #0x9
  4030e8:	b.hi	403150 <__fxstatat@plt+0x700>  // b.pmore
  4030ec:	add	x8, x8, #0x1
  4030f0:	ubfiz	w5, w6, #4, #4
  4030f4:	add	w5, w9, w5
  4030f8:	and	w5, w5, #0xff
  4030fc:	sub	w5, w5, #0x30
  403100:	and	w6, w5, #0xff
  403104:	b	402fe8 <__fxstatat@plt+0x598>
  403108:	sub	w5, w9, #0x61
  40310c:	and	w5, w5, #0xff
  403110:	cmp	w5, #0x5
  403114:	b.hi	403150 <__fxstatat@plt+0x700>  // b.pmore
  403118:	add	x8, x8, #0x1
  40311c:	ubfiz	w5, w6, #4, #4
  403120:	add	w5, w9, w5
  403124:	and	w5, w5, #0xff
  403128:	sub	w5, w5, #0x57
  40312c:	and	w6, w5, #0xff
  403130:	b	402fe8 <__fxstatat@plt+0x598>
  403134:	add	x8, x8, #0x1
  403138:	ubfiz	w5, w6, #4, #4
  40313c:	add	w5, w9, w5
  403140:	and	w5, w5, #0xff
  403144:	sub	w5, w5, #0x37
  403148:	and	w6, w5, #0xff
  40314c:	b	402fe8 <__fxstatat@plt+0x598>
  403150:	strb	w6, [x7], #1
  403154:	add	x10, x10, #0x1
  403158:	mov	w4, w11
  40315c:	b	402fe8 <__fxstatat@plt+0x598>
  403160:	cmp	w4, #0x3f
  403164:	b.eq	403170 <__fxstatat@plt+0x720>  // b.none
  403168:	mov	w4, #0x6                   	// #6
  40316c:	b	402f20 <__fxstatat@plt+0x4d0>
  403170:	strb	w23, [x7], #1
  403174:	add	x10, x10, #0x1
  403178:	mov	w4, w11
  40317c:	b	402fe8 <__fxstatat@plt+0x598>
  403180:	bl	402760 <abort@plt>
  403184:	mov	w4, #0x5                   	// #5
  403188:	b	402f20 <__fxstatat@plt+0x4d0>
  40318c:	mov	w4, #0x5                   	// #5
  403190:	b	402f20 <__fxstatat@plt+0x4d0>
  403194:	stp	x29, x30, [sp, #-48]!
  403198:	mov	x29, sp
  40319c:	stp	x19, x20, [sp, #16]
  4031a0:	str	x21, [sp, #32]
  4031a4:	mov	x21, x0
  4031a8:	mov	x20, x1
  4031ac:	bl	402c40 <__fxstatat@plt+0x1f0>
  4031b0:	and	w19, w0, #0xff
  4031b4:	mov	x0, x20
  4031b8:	bl	402c40 <__fxstatat@plt+0x1f0>
  4031bc:	and	w2, w0, #0xff
  4031c0:	eor	w0, w2, #0x1
  4031c4:	tst	w19, w0
  4031c8:	b.ne	403220 <__fxstatat@plt+0x7d0>  // b.any
  4031cc:	eor	w19, w19, #0x1
  4031d0:	mov	w0, #0x1                   	// #1
  4031d4:	tst	w2, w19
  4031d8:	b.eq	4031ec <__fxstatat@plt+0x79c>  // b.none
  4031dc:	ldp	x19, x20, [sp, #16]
  4031e0:	ldr	x21, [sp, #32]
  4031e4:	ldp	x29, x30, [sp], #48
  4031e8:	ret
  4031ec:	ldr	x2, [x21, #96]
  4031f0:	ldr	x1, [x20, #96]
  4031f4:	cmp	x2, x1
  4031f8:	b.lt	403228 <__fxstatat@plt+0x7d8>  // b.tstop
  4031fc:	b.gt	4031dc <__fxstatat@plt+0x78c>
  403200:	ldr	x1, [x21, #104]
  403204:	ldr	x0, [x20, #104]
  403208:	subs	w0, w1, w0
  40320c:	b.ne	4031dc <__fxstatat@plt+0x78c>  // b.any
  403210:	ldr	x1, [x21]
  403214:	ldr	x0, [x20]
  403218:	bl	402800 <strcmp@plt>
  40321c:	b	4031dc <__fxstatat@plt+0x78c>
  403220:	mov	w0, #0xffffffff            	// #-1
  403224:	b	4031dc <__fxstatat@plt+0x78c>
  403228:	mov	w0, #0xffffffff            	// #-1
  40322c:	b	4031dc <__fxstatat@plt+0x78c>
  403230:	stp	x29, x30, [sp, #-48]!
  403234:	mov	x29, sp
  403238:	stp	x19, x20, [sp, #16]
  40323c:	str	x21, [sp, #32]
  403240:	mov	x21, x0
  403244:	mov	x20, x1
  403248:	bl	402c40 <__fxstatat@plt+0x1f0>
  40324c:	and	w19, w0, #0xff
  403250:	mov	x0, x20
  403254:	bl	402c40 <__fxstatat@plt+0x1f0>
  403258:	and	w2, w0, #0xff
  40325c:	eor	w0, w2, #0x1
  403260:	tst	w19, w0
  403264:	b.ne	4032bc <__fxstatat@plt+0x86c>  // b.any
  403268:	eor	w19, w19, #0x1
  40326c:	mov	w0, #0x1                   	// #1
  403270:	tst	w2, w19
  403274:	b.eq	403288 <__fxstatat@plt+0x838>  // b.none
  403278:	ldp	x19, x20, [sp, #16]
  40327c:	ldr	x21, [sp, #32]
  403280:	ldp	x29, x30, [sp], #48
  403284:	ret
  403288:	ldr	x2, [x21, #128]
  40328c:	ldr	x1, [x20, #128]
  403290:	cmp	x2, x1
  403294:	b.lt	4032c4 <__fxstatat@plt+0x874>  // b.tstop
  403298:	b.gt	403278 <__fxstatat@plt+0x828>
  40329c:	ldr	x1, [x21, #136]
  4032a0:	ldr	x0, [x20, #136]
  4032a4:	subs	w0, w1, w0
  4032a8:	b.ne	403278 <__fxstatat@plt+0x828>  // b.any
  4032ac:	ldr	x1, [x21]
  4032b0:	ldr	x0, [x20]
  4032b4:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4032b8:	b	403278 <__fxstatat@plt+0x828>
  4032bc:	mov	w0, #0xffffffff            	// #-1
  4032c0:	b	403278 <__fxstatat@plt+0x828>
  4032c4:	mov	w0, #0xffffffff            	// #-1
  4032c8:	b	403278 <__fxstatat@plt+0x828>
  4032cc:	stp	x29, x30, [sp, #-48]!
  4032d0:	mov	x29, sp
  4032d4:	stp	x19, x20, [sp, #16]
  4032d8:	str	x21, [sp, #32]
  4032dc:	mov	x21, x0
  4032e0:	mov	x20, x1
  4032e4:	bl	402c40 <__fxstatat@plt+0x1f0>
  4032e8:	and	w19, w0, #0xff
  4032ec:	mov	x0, x20
  4032f0:	bl	402c40 <__fxstatat@plt+0x1f0>
  4032f4:	and	w2, w0, #0xff
  4032f8:	eor	w0, w2, #0x1
  4032fc:	tst	w19, w0
  403300:	b.ne	403358 <__fxstatat@plt+0x908>  // b.any
  403304:	eor	w19, w19, #0x1
  403308:	mov	w0, #0x1                   	// #1
  40330c:	tst	w2, w19
  403310:	b.eq	403324 <__fxstatat@plt+0x8d4>  // b.none
  403314:	ldp	x19, x20, [sp, #16]
  403318:	ldr	x21, [sp, #32]
  40331c:	ldp	x29, x30, [sp], #48
  403320:	ret
  403324:	ldr	x2, [x21, #112]
  403328:	ldr	x1, [x20, #112]
  40332c:	cmp	x2, x1
  403330:	b.lt	403360 <__fxstatat@plt+0x910>  // b.tstop
  403334:	b.gt	403314 <__fxstatat@plt+0x8c4>
  403338:	ldr	x1, [x21, #120]
  40333c:	ldr	x0, [x20, #120]
  403340:	subs	w0, w1, w0
  403344:	b.ne	403314 <__fxstatat@plt+0x8c4>  // b.any
  403348:	ldr	x1, [x21]
  40334c:	ldr	x0, [x20]
  403350:	bl	404a20 <__fxstatat@plt+0x1fd0>
  403354:	b	403314 <__fxstatat@plt+0x8c4>
  403358:	mov	w0, #0xffffffff            	// #-1
  40335c:	b	403314 <__fxstatat@plt+0x8c4>
  403360:	mov	w0, #0xffffffff            	// #-1
  403364:	b	403314 <__fxstatat@plt+0x8c4>
  403368:	stp	x29, x30, [sp, #-32]!
  40336c:	mov	x29, sp
  403370:	str	x19, [sp, #16]
  403374:	mov	x19, x0
  403378:	mov	x0, #0x10                  	// #16
  40337c:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  403380:	str	x19, [x0]
  403384:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403388:	add	x1, x1, #0x5c8
  40338c:	ldr	x2, [x1, #80]
  403390:	str	x2, [x0, #8]
  403394:	str	x0, [x1, #80]
  403398:	ldr	x19, [sp, #16]
  40339c:	ldp	x29, x30, [sp], #32
  4033a0:	ret
  4033a4:	ubfiz	x2, x0, #4, #32
  4033a8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4033ac:	add	x1, x1, #0x368
  4033b0:	ldr	x2, [x1, x2]
  4033b4:	cbz	x2, 40341c <__fxstatat@plt+0x9cc>
  4033b8:	ubfiz	x0, x0, #4, #32
  4033bc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4033c0:	add	x1, x1, #0x368
  4033c4:	add	x0, x1, x0
  4033c8:	ldr	x3, [x0, #8]
  4033cc:	cmp	x2, #0x1
  4033d0:	b.eq	4033e4 <__fxstatat@plt+0x994>  // b.none
  4033d4:	mov	w0, #0x1                   	// #1
  4033d8:	cmp	x2, #0x2
  4033dc:	b.eq	4033f4 <__fxstatat@plt+0x9a4>  // b.none
  4033e0:	ret
  4033e4:	ldrb	w0, [x3]
  4033e8:	cmp	w0, #0x30
  4033ec:	cset	w0, ne  // ne = any
  4033f0:	ret
  4033f4:	stp	x29, x30, [sp, #-16]!
  4033f8:	mov	x29, sp
  4033fc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  403400:	add	x1, x1, #0x408
  403404:	mov	x0, x3
  403408:	bl	402640 <strncmp@plt>
  40340c:	cmp	w0, #0x0
  403410:	cset	w0, ne  // ne = any
  403414:	ldp	x29, x30, [sp], #16
  403418:	ret
  40341c:	mov	w0, #0x0                   	// #0
  403420:	ret
  403424:	stp	x29, x30, [sp, #-32]!
  403428:	mov	x29, sp
  40342c:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x2af4>
  403430:	add	x4, x4, #0x1f0
  403434:	add	x3, sp, #0x18
  403438:	mov	w2, #0x0                   	// #0
  40343c:	mov	x1, #0x0                   	// #0
  403440:	bl	412d38 <__fxstatat@plt+0x102e8>
  403444:	cbz	w0, 40345c <__fxstatat@plt+0xa0c>
  403448:	cmp	w0, #0x1
  40344c:	b.eq	403470 <__fxstatat@plt+0xa20>  // b.none
  403450:	mov	w0, #0x0                   	// #0
  403454:	ldp	x29, x30, [sp], #32
  403458:	ret
  40345c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403460:	ldr	x1, [sp, #24]
  403464:	str	x1, [x0, #1568]
  403468:	mov	w0, #0x1                   	// #1
  40346c:	b	403454 <__fxstatat@plt+0xa04>
  403470:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403474:	mov	x1, #0xffffffffffffffff    	// #-1
  403478:	str	x1, [x0, #1568]
  40347c:	mov	w0, #0x1                   	// #1
  403480:	b	403454 <__fxstatat@plt+0xa04>
  403484:	sub	sp, sp, #0x6a0
  403488:	stp	x29, x30, [sp, #16]
  40348c:	add	x29, sp, #0x10
  403490:	stp	x19, x20, [sp, #32]
  403494:	stp	x21, x22, [sp, #48]
  403498:	stp	x23, x24, [sp, #64]
  40349c:	stp	x25, x26, [sp, #80]
  4034a0:	stp	x27, x28, [sp, #96]
  4034a4:	mov	x2, #0x0                   	// #0
  4034a8:	adrp	x4, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4034ac:	add	x4, x4, #0x368
  4034b0:	add	x4, x4, #0x180
  4034b4:	add	x5, sp, #0x690
  4034b8:	b	4034fc <__fxstatat@plt+0xaac>
  4034bc:	add	x0, x0, #0x1
  4034c0:	add	x3, x0, #0x1
  4034c4:	ldrb	w1, [x0, #1]
  4034c8:	cbz	w1, 403510 <__fxstatat@plt+0xac0>
  4034cc:	mov	x0, x3
  4034d0:	cmp	w1, #0x25
  4034d4:	b.ne	4034c0 <__fxstatat@plt+0xa70>  // b.any
  4034d8:	ldrb	w1, [x0, #1]
  4034dc:	cmp	w1, #0x25
  4034e0:	b.eq	4034bc <__fxstatat@plt+0xa6c>  // b.none
  4034e4:	cmp	w1, #0x62
  4034e8:	b.ne	4034c0 <__fxstatat@plt+0xa70>  // b.any
  4034ec:	str	x0, [x2, x5]
  4034f0:	add	x2, x2, #0x8
  4034f4:	cmp	x2, #0x10
  4034f8:	b.eq	403518 <__fxstatat@plt+0xac8>  // b.none
  4034fc:	ldr	x0, [x2, x4]
  403500:	ldrb	w1, [x0]
  403504:	cbnz	w1, 4034d0 <__fxstatat@plt+0xa80>
  403508:	mov	x0, #0x0                   	// #0
  40350c:	b	4034ec <__fxstatat@plt+0xa9c>
  403510:	mov	x0, #0x0                   	// #0
  403514:	b	4034ec <__fxstatat@plt+0xa9c>
  403518:	ldr	x0, [sp, #1680]
  40351c:	mov	x23, #0xc                   	// #12
  403520:	cbnz	x0, 403534 <__fxstatat@plt+0xae4>
  403524:	ldr	x0, [sp, #1688]
  403528:	cbnz	x0, 403534 <__fxstatat@plt+0xae4>
  40352c:	b	4036a0 <__fxstatat@plt+0xc50>
  403530:	mov	x23, x21
  403534:	add	x22, sp, #0x90
  403538:	mov	w20, #0xe                   	// #14
  40353c:	movk	w20, #0x2, lsl #16
  403540:	mov	x21, #0x0                   	// #0
  403544:	mov	w25, #0x25                  	// #37
  403548:	mov	x24, #0x80                  	// #128
  40354c:	str	x23, [sp, #136]
  403550:	mov	w0, w20
  403554:	bl	4025e0 <nl_langinfo@plt>
  403558:	mov	x19, x0
  40355c:	mov	w1, w25
  403560:	bl	402880 <strchr@plt>
  403564:	cbnz	x0, 4036a0 <__fxstatat@plt+0xc50>
  403568:	bl	402820 <__ctype_b_loc@plt>
  40356c:	ldrb	w1, [x19]
  403570:	ldr	x0, [x0]
  403574:	ldrh	w4, [x0, x1, lsl #1]
  403578:	mov	w5, #0x0                   	// #0
  40357c:	ubfx	x4, x4, #11, #1
  403580:	add	x3, sp, #0x88
  403584:	mov	x2, x24
  403588:	mov	x1, x22
  40358c:	mov	x0, x19
  403590:	bl	40dfa0 <__fxstatat@plt+0xb550>
  403594:	cmp	x0, #0x7f
  403598:	b.hi	4036a0 <__fxstatat@plt+0xc50>  // b.pmore
  40359c:	ldr	x0, [sp, #136]
  4035a0:	cmp	x21, x0
  4035a4:	csel	x21, x21, x0, cs  // cs = hs, nlast
  4035a8:	add	w20, w20, #0x1
  4035ac:	add	x22, x22, #0x80
  4035b0:	sub	w0, w20, #0x20, lsl #12
  4035b4:	subs	w0, w0, #0x1a
  4035b8:	b.ne	40354c <__fxstatat@plt+0xafc>  // b.any
  4035bc:	cmp	x23, x21
  4035c0:	b.hi	403530 <__fxstatat@plt+0xae0>  // b.pmore
  4035c4:	adrp	x28, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4035c8:	add	x28, x28, #0x5c8
  4035cc:	add	x28, x28, #0x60
  4035d0:	add	x22, sp, #0x690
  4035d4:	mov	x27, #0x0                   	// #0
  4035d8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4035dc:	add	x0, x0, #0x368
  4035e0:	add	x0, x0, #0x180
  4035e4:	str	x0, [sp, #120]
  4035e8:	add	x24, sp, #0x690
  4035ec:	adrp	x25, 415000 <_obstack_memory_used@@Base+0x1af4>
  4035f0:	add	x25, x25, #0x410
  4035f4:	b	403674 <__fxstatat@plt+0xc24>
  4035f8:	mov	x3, x21
  4035fc:	mov	x2, x26
  403600:	mov	x1, #0x80                  	// #128
  403604:	bl	402570 <snprintf@plt>
  403608:	cmp	w0, #0x7f
  40360c:	b.hi	4036a0 <__fxstatat@plt+0xc50>  // b.pmore
  403610:	add	x20, x20, #0x80
  403614:	add	x19, x19, #0x80
  403618:	cmp	x24, x19
  40361c:	b.eq	403660 <__fxstatat@plt+0xc10>  // b.none
  403620:	mov	x0, x20
  403624:	ldr	x1, [x22]
  403628:	cbz	x1, 4035f8 <__fxstatat@plt+0xba8>
  40362c:	sub	x5, x1, x21
  403630:	cmp	x5, #0x80
  403634:	b.gt	4036a0 <__fxstatat@plt+0xc50>
  403638:	add	x1, x1, #0x2
  40363c:	str	x1, [sp]
  403640:	mov	x7, x19
  403644:	mov	x6, x21
  403648:	mov	x4, x25
  40364c:	mov	x3, x23
  403650:	mov	w2, #0x1                   	// #1
  403654:	mov	x1, #0x80                  	// #128
  403658:	bl	4025c0 <__snprintf_chk@plt>
  40365c:	b	403608 <__fxstatat@plt+0xbb8>
  403660:	add	x27, x27, #0x1
  403664:	add	x28, x28, #0x600
  403668:	add	x22, x22, #0x8
  40366c:	cmp	x27, #0x2
  403670:	b.eq	403694 <__fxstatat@plt+0xc44>  // b.none
  403674:	ldr	x0, [sp, #120]
  403678:	ldr	x21, [x0, x27, lsl #3]
  40367c:	add	x19, sp, #0x90
  403680:	mov	x20, x28
  403684:	mov	x23, #0xffffffffffffffff    	// #-1
  403688:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x3af4>
  40368c:	add	x26, x26, #0x5b0
  403690:	b	403620 <__fxstatat@plt+0xbd0>
  403694:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403698:	mov	w1, #0x1                   	// #1
  40369c:	strb	w1, [x0, #552]
  4036a0:	ldp	x19, x20, [sp, #32]
  4036a4:	ldp	x21, x22, [sp, #48]
  4036a8:	ldp	x23, x24, [sp, #64]
  4036ac:	ldp	x25, x26, [sp, #80]
  4036b0:	ldp	x27, x28, [sp, #96]
  4036b4:	ldp	x29, x30, [sp, #16]
  4036b8:	add	sp, sp, #0x6a0
  4036bc:	ret
  4036c0:	stp	x29, x30, [sp, #-48]!
  4036c4:	mov	x29, sp
  4036c8:	stp	x19, x20, [sp, #16]
  4036cc:	stp	x21, x22, [sp, #32]
  4036d0:	mov	x20, x0
  4036d4:	mov	x21, x1
  4036d8:	and	w22, w2, #0xff
  4036dc:	mov	x0, #0x20                  	// #32
  4036e0:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  4036e4:	mov	x19, x0
  4036e8:	cbz	x21, 4036f8 <__fxstatat@plt+0xca8>
  4036ec:	mov	x0, x21
  4036f0:	bl	412558 <__fxstatat@plt+0xfb08>
  4036f4:	mov	x21, x0
  4036f8:	str	x21, [x19, #8]
  4036fc:	cbz	x20, 40370c <__fxstatat@plt+0xcbc>
  403700:	mov	x0, x20
  403704:	bl	412558 <__fxstatat@plt+0xfb08>
  403708:	mov	x20, x0
  40370c:	str	x20, [x19]
  403710:	strb	w22, [x19, #16]
  403714:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403718:	add	x0, x0, #0x5c8
  40371c:	ldr	x1, [x0, #3176]
  403720:	str	x1, [x19, #24]
  403724:	str	x19, [x0, #3176]
  403728:	ldp	x19, x20, [sp, #16]
  40372c:	ldp	x21, x22, [sp, #32]
  403730:	ldp	x29, x30, [sp], #48
  403734:	ret
  403738:	ldr	x3, [x1, #72]
  40373c:	ldr	x2, [x0, #72]
  403740:	cmp	x3, x2
  403744:	b.lt	403770 <__fxstatat@plt+0xd20>  // b.tstop
  403748:	b.eq	403754 <__fxstatat@plt+0xd04>  // b.none
  40374c:	cset	w0, gt
  403750:	ret
  403754:	stp	x29, x30, [sp, #-16]!
  403758:	mov	x29, sp
  40375c:	ldr	x1, [x1]
  403760:	ldr	x0, [x0]
  403764:	bl	402800 <strcmp@plt>
  403768:	ldp	x29, x30, [sp], #16
  40376c:	ret
  403770:	mov	w0, #0xffffffff            	// #-1
  403774:	ret
  403778:	mov	x2, x1
  40377c:	ldr	x3, [x0, #72]
  403780:	ldr	x1, [x1, #72]
  403784:	cmp	x3, x1
  403788:	b.lt	4037b4 <__fxstatat@plt+0xd64>  // b.tstop
  40378c:	b.eq	403798 <__fxstatat@plt+0xd48>  // b.none
  403790:	cset	w0, gt
  403794:	ret
  403798:	stp	x29, x30, [sp, #-16]!
  40379c:	mov	x29, sp
  4037a0:	ldr	x1, [x0]
  4037a4:	ldr	x0, [x2]
  4037a8:	bl	402800 <strcmp@plt>
  4037ac:	ldp	x29, x30, [sp], #16
  4037b0:	ret
  4037b4:	mov	w0, #0xffffffff            	// #-1
  4037b8:	ret
  4037bc:	stp	x29, x30, [sp, #-48]!
  4037c0:	mov	x29, sp
  4037c4:	stp	x19, x20, [sp, #16]
  4037c8:	str	x21, [sp, #32]
  4037cc:	mov	x21, x0
  4037d0:	mov	x20, x1
  4037d4:	bl	402c40 <__fxstatat@plt+0x1f0>
  4037d8:	and	w19, w0, #0xff
  4037dc:	mov	x0, x20
  4037e0:	bl	402c40 <__fxstatat@plt+0x1f0>
  4037e4:	and	w2, w0, #0xff
  4037e8:	eor	w0, w2, #0x1
  4037ec:	tst	w19, w0
  4037f0:	b.ne	403840 <__fxstatat@plt+0xdf0>  // b.any
  4037f4:	eor	w19, w19, #0x1
  4037f8:	mov	w0, #0x1                   	// #1
  4037fc:	tst	w2, w19
  403800:	b.ne	403820 <__fxstatat@plt+0xdd0>  // b.any
  403804:	ldr	x0, [x20, #72]
  403808:	ldr	x1, [x21, #72]
  40380c:	cmp	x1, x0
  403810:	b.gt	403848 <__fxstatat@plt+0xdf8>
  403814:	cmp	x1, x0
  403818:	b.eq	403830 <__fxstatat@plt+0xde0>  // b.none
  40381c:	cset	w0, lt  // lt = tstop
  403820:	ldp	x19, x20, [sp, #16]
  403824:	ldr	x21, [sp, #32]
  403828:	ldp	x29, x30, [sp], #48
  40382c:	ret
  403830:	ldr	x1, [x20]
  403834:	ldr	x0, [x21]
  403838:	bl	402800 <strcmp@plt>
  40383c:	b	403820 <__fxstatat@plt+0xdd0>
  403840:	mov	w0, #0xffffffff            	// #-1
  403844:	b	403820 <__fxstatat@plt+0xdd0>
  403848:	mov	w0, #0xffffffff            	// #-1
  40384c:	b	403820 <__fxstatat@plt+0xdd0>
  403850:	stp	x29, x30, [sp, #-48]!
  403854:	mov	x29, sp
  403858:	stp	x19, x20, [sp, #16]
  40385c:	str	x21, [sp, #32]
  403860:	mov	x21, x0
  403864:	mov	x20, x1
  403868:	bl	402c40 <__fxstatat@plt+0x1f0>
  40386c:	and	w19, w0, #0xff
  403870:	mov	x0, x20
  403874:	bl	402c40 <__fxstatat@plt+0x1f0>
  403878:	and	w2, w0, #0xff
  40387c:	eor	w0, w2, #0x1
  403880:	tst	w19, w0
  403884:	b.ne	4038d4 <__fxstatat@plt+0xe84>  // b.any
  403888:	eor	w19, w19, #0x1
  40388c:	mov	w0, #0x1                   	// #1
  403890:	tst	w2, w19
  403894:	b.ne	4038b4 <__fxstatat@plt+0xe64>  // b.any
  403898:	ldr	x0, [x21, #72]
  40389c:	ldr	x1, [x20, #72]
  4038a0:	cmp	x1, x0
  4038a4:	b.gt	4038dc <__fxstatat@plt+0xe8c>
  4038a8:	cmp	x1, x0
  4038ac:	b.eq	4038c4 <__fxstatat@plt+0xe74>  // b.none
  4038b0:	cset	w0, lt  // lt = tstop
  4038b4:	ldp	x19, x20, [sp, #16]
  4038b8:	ldr	x21, [sp, #32]
  4038bc:	ldp	x29, x30, [sp], #48
  4038c0:	ret
  4038c4:	ldr	x1, [x21]
  4038c8:	ldr	x0, [x20]
  4038cc:	bl	402800 <strcmp@plt>
  4038d0:	b	4038b4 <__fxstatat@plt+0xe64>
  4038d4:	mov	w0, #0xffffffff            	// #-1
  4038d8:	b	4038b4 <__fxstatat@plt+0xe64>
  4038dc:	mov	w0, #0xffffffff            	// #-1
  4038e0:	b	4038b4 <__fxstatat@plt+0xe64>
  4038e4:	stp	x29, x30, [sp, #-16]!
  4038e8:	mov	x29, sp
  4038ec:	ldr	x1, [x1]
  4038f0:	ldr	x0, [x0]
  4038f4:	bl	402800 <strcmp@plt>
  4038f8:	ldp	x29, x30, [sp], #16
  4038fc:	ret
  403900:	stp	x29, x30, [sp, #-16]!
  403904:	mov	x29, sp
  403908:	mov	x2, x1
  40390c:	ldr	x1, [x0]
  403910:	ldr	x0, [x2]
  403914:	bl	402800 <strcmp@plt>
  403918:	ldp	x29, x30, [sp], #16
  40391c:	ret
  403920:	stp	x29, x30, [sp, #-48]!
  403924:	mov	x29, sp
  403928:	stp	x19, x20, [sp, #16]
  40392c:	str	x21, [sp, #32]
  403930:	mov	x21, x0
  403934:	mov	x20, x1
  403938:	bl	402c40 <__fxstatat@plt+0x1f0>
  40393c:	and	w19, w0, #0xff
  403940:	mov	x0, x20
  403944:	bl	402c40 <__fxstatat@plt+0x1f0>
  403948:	and	w2, w0, #0xff
  40394c:	eor	w0, w2, #0x1
  403950:	tst	w19, w0
  403954:	b.ne	403984 <__fxstatat@plt+0xf34>  // b.any
  403958:	eor	w19, w19, #0x1
  40395c:	mov	w0, #0x1                   	// #1
  403960:	tst	w2, w19
  403964:	b.ne	403974 <__fxstatat@plt+0xf24>  // b.any
  403968:	ldr	x1, [x20]
  40396c:	ldr	x0, [x21]
  403970:	bl	402800 <strcmp@plt>
  403974:	ldp	x19, x20, [sp, #16]
  403978:	ldr	x21, [sp, #32]
  40397c:	ldp	x29, x30, [sp], #48
  403980:	ret
  403984:	mov	w0, #0xffffffff            	// #-1
  403988:	b	403974 <__fxstatat@plt+0xf24>
  40398c:	stp	x29, x30, [sp, #-48]!
  403990:	mov	x29, sp
  403994:	stp	x19, x20, [sp, #16]
  403998:	str	x21, [sp, #32]
  40399c:	mov	x21, x0
  4039a0:	mov	x20, x1
  4039a4:	bl	402c40 <__fxstatat@plt+0x1f0>
  4039a8:	and	w19, w0, #0xff
  4039ac:	mov	x0, x20
  4039b0:	bl	402c40 <__fxstatat@plt+0x1f0>
  4039b4:	and	w2, w0, #0xff
  4039b8:	eor	w0, w2, #0x1
  4039bc:	tst	w19, w0
  4039c0:	b.ne	4039f0 <__fxstatat@plt+0xfa0>  // b.any
  4039c4:	eor	w19, w19, #0x1
  4039c8:	mov	w0, #0x1                   	// #1
  4039cc:	tst	w2, w19
  4039d0:	b.ne	4039e0 <__fxstatat@plt+0xf90>  // b.any
  4039d4:	ldr	x1, [x21]
  4039d8:	ldr	x0, [x20]
  4039dc:	bl	402800 <strcmp@plt>
  4039e0:	ldp	x19, x20, [sp, #16]
  4039e4:	ldr	x21, [sp, #32]
  4039e8:	ldp	x29, x30, [sp], #48
  4039ec:	ret
  4039f0:	mov	w0, #0xffffffff            	// #-1
  4039f4:	b	4039e0 <__fxstatat@plt+0xf90>
  4039f8:	stp	x29, x30, [sp, #-48]!
  4039fc:	mov	x29, sp
  403a00:	stp	x19, x20, [sp, #16]
  403a04:	stp	x21, x22, [sp, #32]
  403a08:	and	w21, w0, #0xff
  403a0c:	mov	x19, x1
  403a10:	mov	x20, x2
  403a14:	bl	4029e0 <__errno_location@plt>
  403a18:	ldr	w22, [x0]
  403a1c:	mov	x1, x20
  403a20:	mov	w0, #0x4                   	// #4
  403a24:	bl	411948 <__fxstatat@plt+0xeef8>
  403a28:	mov	x3, x0
  403a2c:	mov	x2, x19
  403a30:	mov	w1, w22
  403a34:	mov	w0, #0x0                   	// #0
  403a38:	bl	402490 <error@plt>
  403a3c:	cbz	w21, 403a5c <__fxstatat@plt+0x100c>
  403a40:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403a44:	mov	w1, #0x2                   	// #2
  403a48:	str	w1, [x0, #568]
  403a4c:	ldp	x19, x20, [sp, #16]
  403a50:	ldp	x21, x22, [sp, #32]
  403a54:	ldp	x29, x30, [sp], #48
  403a58:	ret
  403a5c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403a60:	ldr	w0, [x0, #568]
  403a64:	cbnz	w0, 403a4c <__fxstatat@plt+0xffc>
  403a68:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403a6c:	mov	w1, #0x1                   	// #1
  403a70:	str	w1, [x0, #568]
  403a74:	b	403a4c <__fxstatat@plt+0xffc>
  403a78:	stp	x29, x30, [sp, #-48]!
  403a7c:	mov	x29, sp
  403a80:	stp	x19, x20, [sp, #16]
  403a84:	mov	x19, x0
  403a88:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403a8c:	ldr	x4, [x0, #576]
  403a90:	mov	x3, #0xffffffffffffffff    	// #-1
  403a94:	mov	x2, x19
  403a98:	mov	x1, #0x2                   	// #2
  403a9c:	add	x0, sp, #0x28
  403aa0:	bl	4115c8 <__fxstatat@plt+0xeb78>
  403aa4:	mov	x20, x0
  403aa8:	ldrb	w1, [x19]
  403aac:	ldrb	w0, [sp, #40]
  403ab0:	cmp	w1, w0
  403ab4:	b.eq	403ac8 <__fxstatat@plt+0x1078>  // b.none
  403ab8:	mov	w0, #0x1                   	// #1
  403abc:	ldp	x19, x20, [sp, #16]
  403ac0:	ldp	x29, x30, [sp], #48
  403ac4:	ret
  403ac8:	mov	x0, x19
  403acc:	bl	402430 <strlen@plt>
  403ad0:	cmp	x0, x20
  403ad4:	cset	w0, ne  // ne = any
  403ad8:	b	403abc <__fxstatat@plt+0x106c>
  403adc:	stp	x29, x30, [sp, #-80]!
  403ae0:	mov	x29, sp
  403ae4:	stp	x19, x20, [sp, #16]
  403ae8:	stp	x23, x24, [sp, #48]
  403aec:	mov	x20, x0
  403af0:	and	w23, w1, #0xff
  403af4:	bl	402430 <strlen@plt>
  403af8:	add	x0, x0, #0x1
  403afc:	lsr	x2, x0, #63
  403b00:	lsl	x1, x0, #1
  403b04:	adds	x1, x1, x0
  403b08:	cinc	x2, x2, cs  // cs = hs, nlast
  403b0c:	cmp	x2, #0x0
  403b10:	cset	x2, ne  // ne = any
  403b14:	cmp	x1, #0x0
  403b18:	csinc	x1, x2, xzr, ge  // ge = tcont
  403b1c:	cbnz	w1, 403b5c <__fxstatat@plt+0x110c>
  403b20:	add	x0, x0, x0, lsl #1
  403b24:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  403b28:	mov	x24, x0
  403b2c:	ldrb	w4, [x20]
  403b30:	cbz	w4, 403be0 <__fxstatat@plt+0x1190>
  403b34:	stp	x21, x22, [sp, #32]
  403b38:	str	x25, [sp, #64]
  403b3c:	add	x20, x20, #0x1
  403b40:	mov	x19, x0
  403b44:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403b48:	add	x22, x22, #0x5c8
  403b4c:	add	x22, x22, #0xc80
  403b50:	adrp	x25, 415000 <_obstack_memory_used@@Base+0x1af4>
  403b54:	add	x25, x25, #0x420
  403b58:	b	403ba0 <__fxstatat@plt+0x1150>
  403b5c:	stp	x21, x22, [sp, #32]
  403b60:	str	x25, [sp, #64]
  403b64:	bl	412584 <__fxstatat@plt+0xfb34>
  403b68:	mov	w0, #0x2f                  	// #47
  403b6c:	strb	w0, [x19], #1
  403b70:	mov	x21, x20
  403b74:	b	403b94 <__fxstatat@plt+0x1144>
  403b78:	mov	x21, x20
  403b7c:	mov	x3, x25
  403b80:	mov	x2, #0xffffffffffffffff    	// #-1
  403b84:	mov	w1, #0x1                   	// #1
  403b88:	mov	x0, x19
  403b8c:	bl	402440 <__sprintf_chk@plt>
  403b90:	add	x19, x19, #0x3
  403b94:	ldrb	w4, [x21]
  403b98:	add	x20, x20, #0x1
  403b9c:	cbz	w4, 403bc0 <__fxstatat@plt+0x1170>
  403ba0:	cmp	w4, #0x2f
  403ba4:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  403ba8:	b.ne	403b68 <__fxstatat@plt+0x1118>  // b.any
  403bac:	ldrb	w1, [x22, w4, sxtw]
  403bb0:	cbz	w1, 403b78 <__fxstatat@plt+0x1128>
  403bb4:	mov	x21, x20
  403bb8:	strb	w4, [x19], #1
  403bbc:	b	403b94 <__fxstatat@plt+0x1144>
  403bc0:	ldp	x21, x22, [sp, #32]
  403bc4:	ldr	x25, [sp, #64]
  403bc8:	strb	wzr, [x19]
  403bcc:	mov	x0, x24
  403bd0:	ldp	x19, x20, [sp, #16]
  403bd4:	ldp	x23, x24, [sp, #48]
  403bd8:	ldp	x29, x30, [sp], #80
  403bdc:	ret
  403be0:	mov	x19, x0
  403be4:	b	403bc8 <__fxstatat@plt+0x1178>
  403be8:	stp	x29, x30, [sp, #-48]!
  403bec:	mov	x29, sp
  403bf0:	cbz	x0, 403c0c <__fxstatat@plt+0x11bc>
  403bf4:	mov	w1, #0x0                   	// #0
  403bf8:	bl	40e56c <__fxstatat@plt+0xbb1c>
  403bfc:	cmp	w0, #0x0
  403c00:	csel	w0, w0, wzr, ge  // ge = tcont
  403c04:	ldp	x29, x30, [sp], #48
  403c08:	ret
  403c0c:	mov	x4, x1
  403c10:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  403c14:	add	x3, x3, #0x428
  403c18:	mov	x2, #0x15                  	// #21
  403c1c:	mov	w1, #0x1                   	// #1
  403c20:	add	x0, sp, #0x18
  403c24:	bl	402440 <__sprintf_chk@plt>
  403c28:	add	x0, sp, #0x18
  403c2c:	bl	402430 <strlen@plt>
  403c30:	b	403c04 <__fxstatat@plt+0x11b4>
  403c34:	stp	x29, x30, [sp, #-32]!
  403c38:	mov	x29, sp
  403c3c:	str	x19, [sp, #16]
  403c40:	mov	w19, w0
  403c44:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403c48:	ldrb	w0, [x0, #840]
  403c4c:	cbz	w0, 403c68 <__fxstatat@plt+0x1218>
  403c50:	mov	x0, #0x0                   	// #0
  403c54:	mov	w1, w19
  403c58:	bl	403be8 <__fxstatat@plt+0x1198>
  403c5c:	ldr	x19, [sp, #16]
  403c60:	ldp	x29, x30, [sp], #32
  403c64:	ret
  403c68:	mov	w0, w19
  403c6c:	bl	40db78 <__fxstatat@plt+0xb128>
  403c70:	b	403c54 <__fxstatat@plt+0x1204>
  403c74:	sub	sp, sp, #0x320
  403c78:	stp	x29, x30, [sp]
  403c7c:	mov	x29, sp
  403c80:	stp	x19, x20, [sp, #16]
  403c84:	stp	x21, x22, [sp, #32]
  403c88:	stp	x23, x24, [sp, #48]
  403c8c:	stp	x25, x26, [sp, #64]
  403c90:	stp	x27, x28, [sp, #80]
  403c94:	and	w27, w3, #0xff
  403c98:	str	x4, [x29, #104]
  403c9c:	cmp	x2, #0x0
  403ca0:	cset	w25, eq  // eq = none
  403ca4:	eor	w23, w27, #0x1
  403ca8:	orr	w23, w25, w23
  403cac:	cbz	w23, 403de4 <__fxstatat@plt+0x1394>
  403cb0:	mov	x21, x0
  403cb4:	mov	w24, w1
  403cb8:	mov	x22, x2
  403cbc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403cc0:	add	x0, x0, #0x5c8
  403cc4:	ldr	x1, [x0, #3464]
  403cc8:	ldr	x0, [x0, #8]
  403ccc:	cmp	x0, x1
  403cd0:	b.ne	403d28 <__fxstatat@plt+0x12d8>  // b.any
  403cd4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403cd8:	ldr	x0, [x0, #1496]
  403cdc:	mov	x2, #0x170                 	// #368
  403ce0:	mul	x3, x1, x2
  403ce4:	umulh	x2, x1, x2
  403ce8:	cmp	x2, #0x0
  403cec:	cset	x2, ne  // ne = any
  403cf0:	cmp	x3, #0x0
  403cf4:	csinc	x2, x2, xzr, ge  // ge = tcont
  403cf8:	cbnz	w2, 403e04 <__fxstatat@plt+0x13b4>
  403cfc:	add	x2, x1, x1, lsl #1
  403d00:	lsl	x2, x2, #3
  403d04:	sub	x1, x2, x1
  403d08:	lsl	x1, x1, #4
  403d0c:	bl	412374 <__fxstatat@plt+0xf924>
  403d10:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403d14:	add	x1, x1, #0x5c8
  403d18:	str	x0, [x1, #16]
  403d1c:	ldr	x0, [x1, #3464]
  403d20:	lsl	x0, x0, #1
  403d24:	str	x0, [x1, #3464]
  403d28:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403d2c:	add	x0, x0, #0x5c8
  403d30:	ldr	x1, [x0, #8]
  403d34:	add	x20, x1, x1, lsl #1
  403d38:	lsl	x20, x20, #3
  403d3c:	sub	x20, x20, x1
  403d40:	lsl	x20, x20, #3
  403d44:	ldr	x28, [x0, #16]
  403d48:	add	x19, x28, x20
  403d4c:	stp	xzr, xzr, [x19]
  403d50:	stp	xzr, xzr, [x19, #16]
  403d54:	stp	xzr, xzr, [x19, #32]
  403d58:	stp	xzr, xzr, [x19, #48]
  403d5c:	stp	xzr, xzr, [x19, #64]
  403d60:	stp	xzr, xzr, [x19, #80]
  403d64:	stp	xzr, xzr, [x19, #96]
  403d68:	stp	xzr, xzr, [x19, #112]
  403d6c:	stp	xzr, xzr, [x19, #128]
  403d70:	stp	xzr, xzr, [x19, #144]
  403d74:	stp	xzr, xzr, [x19, #160]
  403d78:	str	xzr, [x19, #176]
  403d7c:	str	x22, [x19, #32]
  403d80:	str	w24, [x19, #152]
  403d84:	mov	w1, #0xffffffff            	// #-1
  403d88:	str	w1, [x19, #180]
  403d8c:	ldrb	w0, [x0, #36]
  403d90:	cbnz	w0, 403da0 <__fxstatat@plt+0x1350>
  403d94:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403d98:	ldrb	w0, [x0, #856]
  403d9c:	cbnz	w0, 403e08 <__fxstatat@plt+0x13b8>
  403da0:	cbnz	w27, 403f80 <__fxstatat@plt+0x1530>
  403da4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403da8:	ldrb	w0, [x0, #857]
  403dac:	cbnz	w0, 4047e0 <__fxstatat@plt+0x1d90>
  403db0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403db4:	ldrb	w22, [x0, #858]
  403db8:	cbnz	w22, 403e80 <__fxstatat@plt+0x1430>
  403dbc:	cmp	w24, #0x3
  403dc0:	b.eq	403e2c <__fxstatat@plt+0x13dc>  // b.none
  403dc4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403dc8:	ldrb	w0, [x0, #860]
  403dcc:	cbnz	w0, 403f28 <__fxstatat@plt+0x14d8>
  403dd0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403dd4:	ldrb	w0, [x0, #861]
  403dd8:	cbnz	w0, 404834 <__fxstatat@plt+0x1de4>
  403ddc:	mov	x22, #0x0                   	// #0
  403de0:	b	404170 <__fxstatat@plt+0x1720>
  403de4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x4af4>
  403de8:	add	x3, x3, #0x8
  403dec:	mov	w2, #0xc2f                 	// #3119
  403df0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  403df4:	add	x1, x1, #0x430
  403df8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  403dfc:	add	x0, x0, #0x440
  403e00:	bl	4029d0 <__assert_fail@plt>
  403e04:	bl	412584 <__fxstatat@plt+0xfb34>
  403e08:	mov	x0, x21
  403e0c:	bl	403a78 <__fxstatat@plt+0x1028>
  403e10:	and	w0, w0, #0xff
  403e14:	str	w0, [x19, #180]
  403e18:	cbz	w0, 403da0 <__fxstatat@plt+0x1350>
  403e1c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  403e20:	mov	w1, #0x1                   	// #1
  403e24:	strb	w1, [x0, #1516]
  403e28:	b	403da0 <__fxstatat@plt+0x1350>
  403e2c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403e30:	ldrb	w0, [x0, #859]
  403e34:	cbz	w0, 403e68 <__fxstatat@plt+0x1418>
  403e38:	mov	w0, #0x13                  	// #19
  403e3c:	bl	4033a4 <__fxstatat@plt+0x954>
  403e40:	and	w0, w0, #0xff
  403e44:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  403e48:	mov	w0, #0x12                  	// #18
  403e4c:	bl	4033a4 <__fxstatat@plt+0x954>
  403e50:	and	w0, w0, #0xff
  403e54:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  403e58:	mov	w0, #0x14                  	// #20
  403e5c:	bl	4033a4 <__fxstatat@plt+0x954>
  403e60:	and	w0, w0, #0xff
  403e64:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  403e68:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403e6c:	ldrb	w0, [x0, #860]
  403e70:	cbz	w0, 403dd0 <__fxstatat@plt+0x1380>
  403e74:	cmp	w25, #0x0
  403e78:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  403e7c:	b.eq	403f6c <__fxstatat@plt+0x151c>  // b.none
  403e80:	ldrb	w22, [x21]
  403e84:	mov	x26, x21
  403e88:	cmp	w22, #0x2f
  403e8c:	b.eq	403fa8 <__fxstatat@plt+0x1558>  // b.none
  403e90:	ldr	x0, [x29, #104]
  403e94:	ldrb	w25, [x0]
  403e98:	mov	x26, x21
  403e9c:	cbz	w25, 403fa8 <__fxstatat@plt+0x1558>
  403ea0:	mov	x0, x21
  403ea4:	bl	402430 <strlen@plt>
  403ea8:	mov	x26, x0
  403eac:	ldr	x0, [x29, #104]
  403eb0:	bl	402430 <strlen@plt>
  403eb4:	add	x26, x26, x0
  403eb8:	add	x26, x26, #0x11
  403ebc:	and	x26, x26, #0xfffffffffffffff0
  403ec0:	sub	sp, sp, x26
  403ec4:	mov	x26, sp
  403ec8:	cmp	w25, #0x2e
  403ecc:	b.eq	4041c4 <__fxstatat@plt+0x1774>  // b.none
  403ed0:	mov	x0, x26
  403ed4:	ldr	x1, [x29, #104]
  403ed8:	mov	x2, x0
  403edc:	strb	w25, [x0], #1
  403ee0:	ldrb	w25, [x1, #1]!
  403ee4:	cbnz	w25, 403ed8 <__fxstatat@plt+0x1488>
  403ee8:	ldr	x3, [x29, #104]
  403eec:	cmp	x3, x1
  403ef0:	b.cs	403f0c <__fxstatat@plt+0x14bc>  // b.hs, b.nlast
  403ef4:	ldurb	w1, [x1, #-1]
  403ef8:	cmp	w1, #0x2f
  403efc:	b.eq	403f0c <__fxstatat@plt+0x14bc>  // b.none
  403f00:	mov	w1, #0x2f                  	// #47
  403f04:	strb	w1, [x0]
  403f08:	add	x0, x2, #0x2
  403f0c:	cbz	w22, 403f20 <__fxstatat@plt+0x14d0>
  403f10:	mov	x1, x21
  403f14:	strb	w22, [x0], #1
  403f18:	ldrb	w22, [x1, #1]!
  403f1c:	cbnz	w22, 403f14 <__fxstatat@plt+0x14c4>
  403f20:	strb	wzr, [x0]
  403f24:	b	403f9c <__fxstatat@plt+0x154c>
  403f28:	cmp	w24, #0x6
  403f2c:	cset	w22, eq  // eq = none
  403f30:	cmp	w24, #0x0
  403f34:	csinc	w22, w22, wzr, ne  // ne = any
  403f38:	cbz	w22, 403e74 <__fxstatat@plt+0x1424>
  403f3c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403f40:	ldr	w0, [x0, #864]
  403f44:	cmp	w0, #0x5
  403f48:	b.eq	4048b4 <__fxstatat@plt+0x1e64>  // b.none
  403f4c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403f50:	ldrb	w0, [x0, #868]
  403f54:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  403f58:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403f5c:	ldrb	w0, [x0, #869]
  403f60:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  403f64:	mov	w0, w22
  403f68:	b	403e74 <__fxstatat@plt+0x1424>
  403f6c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403f70:	ldrb	w0, [x0, #861]
  403f74:	cbz	w0, 4046b8 <__fxstatat@plt+0x1c68>
  403f78:	cbz	w24, 403e80 <__fxstatat@plt+0x1430>
  403f7c:	b	404840 <__fxstatat@plt+0x1df0>
  403f80:	ldrb	w22, [x21]
  403f84:	mov	x26, x21
  403f88:	cmp	w22, #0x2f
  403f8c:	b.eq	403f9c <__fxstatat@plt+0x154c>  // b.none
  403f90:	ldr	x0, [x29, #104]
  403f94:	ldrb	w25, [x0]
  403f98:	cbnz	w25, 403ea0 <__fxstatat@plt+0x1450>
  403f9c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403fa0:	ldrb	w0, [x0, #857]
  403fa4:	cbnz	w0, 4047fc <__fxstatat@plt+0x1dac>
  403fa8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403fac:	ldr	w22, [x0, #864]
  403fb0:	cmp	w22, #0x4
  403fb4:	b.hi	4041e0 <__fxstatat@plt+0x1790>  // b.pmore
  403fb8:	cmp	w22, #0x2
  403fbc:	b.hi	4041fc <__fxstatat@plt+0x17ac>  // b.pmore
  403fc0:	add	x2, x19, #0x18
  403fc4:	mov	x1, x26
  403fc8:	mov	w0, #0x0                   	// #0
  403fcc:	bl	402900 <__lxstat@plt>
  403fd0:	mov	w23, #0x0                   	// #0
  403fd4:	cbnz	w0, 404274 <__fxstatat@plt+0x1824>
  403fd8:	mov	w0, #0x1                   	// #1
  403fdc:	strb	w0, [x19, #168]
  403fe0:	cmp	w24, #0x5
  403fe4:	b.eq	4042c4 <__fxstatat@plt+0x1874>  // b.none
  403fe8:	ldr	w0, [x19, #40]
  403fec:	and	w0, w0, #0xf000
  403ff0:	cmp	w0, #0x8, lsl #12
  403ff4:	b.eq	4042c4 <__fxstatat@plt+0x1874>  // b.none
  403ff8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  403ffc:	ldr	w22, [x0, #880]
  404000:	cbz	w22, 404010 <__fxstatat@plt+0x15c0>
  404004:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404008:	ldrb	w0, [x0, #884]
  40400c:	cbz	w0, 404704 <__fxstatat@plt+0x1cb4>
  404010:	ldr	x1, [x19, #24]
  404014:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404018:	ldr	x0, [x0, #888]
  40401c:	cmp	x1, x0
  404020:	b.eq	40436c <__fxstatat@plt+0x191c>  // b.none
  404024:	cbz	w23, 40437c <__fxstatat@plt+0x192c>
  404028:	bl	4029e0 <__errno_location@plt>
  40402c:	mov	w1, #0x5f                  	// #95
  404030:	str	w1, [x0]
  404034:	bl	4029e0 <__errno_location@plt>
  404038:	ldr	w0, [x0]
  40403c:	bl	402c28 <__fxstatat@plt+0x1d8>
  404040:	and	w0, w0, #0xff
  404044:	cbz	w0, 404054 <__fxstatat@plt+0x1604>
  404048:	ldr	x1, [x19, #24]
  40404c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404050:	str	x1, [x0, #888]
  404054:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404058:	add	x0, x0, #0x368
  40405c:	add	x0, x0, #0x190
  404060:	str	x0, [x19, #160]
  404064:	bl	4029e0 <__errno_location@plt>
  404068:	mov	x23, x0
  40406c:	ldr	w0, [x0]
  404070:	cmp	w0, #0x5f
  404074:	mov	w1, #0x3d                  	// #61
  404078:	ccmp	w0, w1, #0x4, ne  // ne = any
  40407c:	b.ne	4048ac <__fxstatat@plt+0x1e5c>  // b.any
  404080:	cbz	w22, 40438c <__fxstatat@plt+0x193c>
  404084:	str	wzr, [x19, #172]
  404088:	ldr	w0, [x19, #40]
  40408c:	and	w0, w0, #0xf000
  404090:	cmp	w0, #0xa, lsl #12
  404094:	b.eq	40444c <__fxstatat@plt+0x19fc>  // b.none
  404098:	ldr	w0, [x19, #40]
  40409c:	and	w0, w0, #0xf000
  4040a0:	cmp	w0, #0x4, lsl #12
  4040a4:	b.eq	4044ec <__fxstatat@plt+0x1a9c>  // b.none
  4040a8:	mov	w0, #0x5                   	// #5
  4040ac:	str	w0, [x19, #152]
  4040b0:	ldr	x22, [x19, #88]
  4040b4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4040b8:	ldr	w0, [x0, #880]
  4040bc:	cbz	w0, 4040cc <__fxstatat@plt+0x167c>
  4040c0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4040c4:	ldrb	w0, [x0, #905]
  4040c8:	cbz	w0, 4046f4 <__fxstatat@plt+0x1ca4>
  4040cc:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4040d0:	add	x23, x23, #0x5c8
  4040d4:	ldr	x4, [x23, #3528]
  4040d8:	mov	x3, #0x200                 	// #512
  4040dc:	ldr	w2, [x23, #3536]
  4040e0:	add	x1, x29, #0x90
  4040e4:	mov	x0, x22
  4040e8:	bl	40d324 <__fxstatat@plt+0xa8d4>
  4040ec:	mov	w1, #0x0                   	// #0
  4040f0:	bl	40e56c <__fxstatat@plt+0xbb1c>
  4040f4:	ldr	w1, [x23, #44]
  4040f8:	cmp	w1, w0
  4040fc:	b.ge	404108 <__fxstatat@plt+0x16b8>  // b.tcont
  404100:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404104:	str	w0, [x1, #1524]
  404108:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40410c:	ldr	w0, [x0, #880]
  404110:	cbnz	w0, 4046f4 <__fxstatat@plt+0x1ca4>
  404114:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404118:	ldrb	w0, [x0, #1274]
  40411c:	cbnz	w0, 404514 <__fxstatat@plt+0x1ac4>
  404120:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404124:	ldrb	w0, [x0, #1275]
  404128:	cbnz	w0, 404538 <__fxstatat@plt+0x1ae8>
  40412c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404130:	ldrb	w0, [x0, #924]
  404134:	cbnz	w0, 40457c <__fxstatat@plt+0x1b2c>
  404138:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40413c:	ldrb	w0, [x0, #884]
  404140:	cbz	w0, 404164 <__fxstatat@plt+0x1714>
  404144:	ldr	x0, [x19, #160]
  404148:	bl	402430 <strlen@plt>
  40414c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404150:	ldr	w1, [x1, #1544]
  404154:	cmp	w1, w0
  404158:	b.ge	404164 <__fxstatat@plt+0x1714>  // b.tcont
  40415c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404160:	str	w0, [x1, #1544]
  404164:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404168:	ldr	w0, [x0, #880]
  40416c:	cbz	w0, 4045a0 <__fxstatat@plt+0x1b50>
  404170:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404174:	ldrb	w0, [x0, #860]
  404178:	cbnz	w0, 4046c8 <__fxstatat@plt+0x1c78>
  40417c:	mov	x0, x21
  404180:	bl	412558 <__fxstatat@plt+0xfb08>
  404184:	str	x0, [x28, x20]
  404188:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40418c:	add	x0, x0, #0x5c8
  404190:	ldr	x1, [x0, #8]
  404194:	add	x1, x1, #0x1
  404198:	str	x1, [x0, #8]
  40419c:	mov	x0, x22
  4041a0:	mov	sp, x29
  4041a4:	ldp	x19, x20, [sp, #16]
  4041a8:	ldp	x21, x22, [sp, #32]
  4041ac:	ldp	x23, x24, [sp, #48]
  4041b0:	ldp	x25, x26, [sp, #64]
  4041b4:	ldp	x27, x28, [sp, #80]
  4041b8:	ldp	x29, x30, [sp]
  4041bc:	add	sp, sp, #0x320
  4041c0:	ret
  4041c4:	ldr	x0, [x29, #104]
  4041c8:	ldrb	w1, [x0, #1]
  4041cc:	mov	x0, x26
  4041d0:	cbz	w1, 403f0c <__fxstatat@plt+0x14bc>
  4041d4:	b	403ed0 <__fxstatat@plt+0x1480>
  4041d8:	mov	x26, x21
  4041dc:	b	4047fc <__fxstatat@plt+0x1dac>
  4041e0:	cmp	w22, #0x5
  4041e4:	b.ne	403fc0 <__fxstatat@plt+0x1570>  // b.any
  4041e8:	add	x2, x19, #0x18
  4041ec:	mov	x1, x26
  4041f0:	mov	w0, #0x0                   	// #0
  4041f4:	bl	402a00 <__xstat@plt>
  4041f8:	b	403fd4 <__fxstatat@plt+0x1584>
  4041fc:	cbz	w27, 403fc0 <__fxstatat@plt+0x1570>
  404200:	add	x2, x19, #0x18
  404204:	mov	x1, x26
  404208:	mov	w0, #0x0                   	// #0
  40420c:	bl	402a00 <__xstat@plt>
  404210:	cmp	w22, #0x3
  404214:	b.eq	40422c <__fxstatat@plt+0x17dc>  // b.none
  404218:	tbnz	w0, #31, 404238 <__fxstatat@plt+0x17e8>
  40421c:	ldr	w1, [x19, #40]
  404220:	and	w1, w1, #0xf000
  404224:	cmp	w1, #0x4, lsl #12
  404228:	b.ne	403fc0 <__fxstatat@plt+0x1570>  // b.any
  40422c:	cbnz	w0, 404248 <__fxstatat@plt+0x17f8>
  404230:	mov	w23, w27
  404234:	b	403fd8 <__fxstatat@plt+0x1588>
  404238:	bl	4029e0 <__errno_location@plt>
  40423c:	ldr	w0, [x0]
  404240:	cmp	w0, #0x2
  404244:	b.eq	403fc0 <__fxstatat@plt+0x1570>  // b.none
  404248:	mov	w2, #0x5                   	// #5
  40424c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  404250:	add	x1, x1, #0x490
  404254:	mov	x0, #0x0                   	// #0
  404258:	bl	402970 <dcgettext@plt>
  40425c:	mov	x2, x26
  404260:	mov	x1, x0
  404264:	mov	w0, #0x1                   	// #1
  404268:	bl	4039f8 <__fxstatat@plt+0xfa8>
  40426c:	mov	x22, #0x0                   	// #0
  404270:	b	40419c <__fxstatat@plt+0x174c>
  404274:	mov	w2, #0x5                   	// #5
  404278:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  40427c:	add	x1, x1, #0x490
  404280:	mov	x0, #0x0                   	// #0
  404284:	bl	402970 <dcgettext@plt>
  404288:	mov	x2, x26
  40428c:	mov	x1, x0
  404290:	mov	w0, w27
  404294:	bl	4039f8 <__fxstatat@plt+0xfa8>
  404298:	mov	x22, #0x0                   	// #0
  40429c:	cbnz	w27, 40419c <__fxstatat@plt+0x174c>
  4042a0:	mov	x0, x21
  4042a4:	bl	412558 <__fxstatat@plt+0xfb08>
  4042a8:	str	x0, [x28, x20]
  4042ac:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4042b0:	add	x0, x0, #0x5c8
  4042b4:	ldr	x1, [x0, #8]
  4042b8:	add	x1, x1, #0x1
  4042bc:	str	x1, [x0, #8]
  4042c0:	b	40419c <__fxstatat@plt+0x174c>
  4042c4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4042c8:	ldrb	w0, [x0, #859]
  4042cc:	cbz	w0, 403ff8 <__fxstatat@plt+0x15a8>
  4042d0:	mov	w0, #0x15                  	// #21
  4042d4:	bl	4033a4 <__fxstatat@plt+0x954>
  4042d8:	ands	w22, w0, #0xff
  4042dc:	b.eq	403ff8 <__fxstatat@plt+0x15a8>  // b.none
  4042e0:	ldr	x1, [x19, #24]
  4042e4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4042e8:	ldr	x0, [x0, #872]
  4042ec:	cmp	x1, x0
  4042f0:	b.eq	404354 <__fxstatat@plt+0x1904>  // b.none
  4042f4:	mov	x0, x26
  4042f8:	bl	402910 <cap_get_file@plt>
  4042fc:	mov	x24, x0
  404300:	cbz	x0, 40432c <__fxstatat@plt+0x18dc>
  404304:	mov	x1, #0x0                   	// #0
  404308:	bl	4023e0 <cap_to_text@plt>
  40430c:	mov	x25, x0
  404310:	mov	x0, x24
  404314:	bl	402950 <cap_free@plt>
  404318:	cbz	x25, 40432c <__fxstatat@plt+0x18dc>
  40431c:	ldrb	w24, [x25]
  404320:	mov	x0, x25
  404324:	bl	402950 <cap_free@plt>
  404328:	cbnz	w24, 404364 <__fxstatat@plt+0x1914>
  40432c:	bl	4029e0 <__errno_location@plt>
  404330:	ldr	w0, [x0]
  404334:	bl	402c28 <__fxstatat@plt+0x1d8>
  404338:	ands	w22, w0, #0xff
  40433c:	b.eq	404364 <__fxstatat@plt+0x1914>  // b.none
  404340:	ldr	x1, [x19, #24]
  404344:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404348:	str	x1, [x0, #872]
  40434c:	mov	w22, #0x0                   	// #0
  404350:	b	404364 <__fxstatat@plt+0x1914>
  404354:	bl	4029e0 <__errno_location@plt>
  404358:	mov	w1, #0x5f                  	// #95
  40435c:	str	w1, [x0]
  404360:	mov	w22, #0x0                   	// #0
  404364:	strb	w22, [x19, #176]
  404368:	b	403ff8 <__fxstatat@plt+0x15a8>
  40436c:	bl	4029e0 <__errno_location@plt>
  404370:	mov	w1, #0x5f                  	// #95
  404374:	str	w1, [x0]
  404378:	b	404054 <__fxstatat@plt+0x1604>
  40437c:	bl	4029e0 <__errno_location@plt>
  404380:	mov	w1, #0x5f                  	// #95
  404384:	str	w1, [x0]
  404388:	b	404034 <__fxstatat@plt+0x15e4>
  40438c:	ldr	x1, [x19, #24]
  404390:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404394:	ldr	x0, [x0, #896]
  404398:	cmp	x1, x0
  40439c:	b.eq	404418 <__fxstatat@plt+0x19c8>  // b.none
  4043a0:	str	wzr, [x23]
  4043a4:	add	x1, x19, #0x18
  4043a8:	mov	x0, x26
  4043ac:	bl	40b910 <__fxstatat@plt+0x8ec0>
  4043b0:	mov	w24, w0
  4043b4:	cmp	w0, #0x0
  4043b8:	b.le	40442c <__fxstatat@plt+0x19dc>
  4043bc:	lsr	w3, w0, #31
  4043c0:	mov	w22, #0x2                   	// #2
  4043c4:	str	w22, [x19, #172]
  4043c8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4043cc:	add	x0, x0, #0x5c8
  4043d0:	cmp	w22, #0x0
  4043d4:	cset	w1, ne  // ne = any
  4043d8:	ldrb	w2, [x0, #37]
  4043dc:	orr	w1, w1, w2
  4043e0:	strb	w1, [x0, #37]
  4043e4:	cbz	w3, 404088 <__fxstatat@plt+0x1638>
  4043e8:	ldr	w22, [x23]
  4043ec:	mov	x2, x26
  4043f0:	mov	w1, #0x3                   	// #3
  4043f4:	mov	w0, #0x0                   	// #0
  4043f8:	bl	411a48 <__fxstatat@plt+0xeff8>
  4043fc:	mov	x3, x0
  404400:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  404404:	add	x2, x2, #0x5b0
  404408:	mov	w1, w22
  40440c:	mov	w0, #0x0                   	// #0
  404410:	bl	402490 <error@plt>
  404414:	b	404088 <__fxstatat@plt+0x1638>
  404418:	mov	w0, #0x5f                  	// #95
  40441c:	str	w0, [x23]
  404420:	mov	w24, #0x0                   	// #0
  404424:	lsr	w3, w24, #31
  404428:	b	4043c4 <__fxstatat@plt+0x1974>
  40442c:	ldr	w0, [x23]
  404430:	bl	402c28 <__fxstatat@plt+0x1d8>
  404434:	and	w0, w0, #0xff
  404438:	cbz	w0, 404424 <__fxstatat@plt+0x19d4>
  40443c:	ldr	x1, [x19, #24]
  404440:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404444:	str	x1, [x0, #896]
  404448:	b	404424 <__fxstatat@plt+0x19d4>
  40444c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404450:	ldr	w0, [x0, #880]
  404454:	cbnz	w0, 404714 <__fxstatat@plt+0x1cc4>
  404458:	b	404720 <__fxstatat@plt+0x1cd0>
  40445c:	mov	w2, #0x5                   	// #5
  404460:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  404464:	add	x1, x1, #0x4a8
  404468:	mov	x0, #0x0                   	// #0
  40446c:	bl	402970 <dcgettext@plt>
  404470:	mov	x2, x26
  404474:	mov	x1, x0
  404478:	mov	w0, w27
  40447c:	bl	4039f8 <__fxstatat@plt+0xfa8>
  404480:	ldr	x22, [x19, #8]
  404484:	cbnz	x22, 404738 <__fxstatat@plt+0x1ce8>
  404488:	mov	x23, #0x0                   	// #0
  40448c:	mov	x0, x23
  404490:	bl	402840 <free@plt>
  404494:	ldr	w0, [x19, #40]
  404498:	and	w0, w0, #0xf000
  40449c:	cmp	w0, #0xa, lsl #12
  4044a0:	b.ne	4040a0 <__fxstatat@plt+0x1650>  // b.any
  4044a4:	mov	w0, #0x6                   	// #6
  4044a8:	str	w0, [x19, #152]
  4044ac:	b	4040b0 <__fxstatat@plt+0x1660>
  4044b0:	mov	x0, x22
  4044b4:	bl	412558 <__fxstatat@plt+0xfb08>
  4044b8:	mov	x23, x0
  4044bc:	b	404790 <__fxstatat@plt+0x1d40>
  4044c0:	mov	x0, x22
  4044c4:	bl	412558 <__fxstatat@plt+0xfb08>
  4044c8:	mov	x23, x0
  4044cc:	b	404790 <__fxstatat@plt+0x1d40>
  4044d0:	ldr	x0, [x19, #8]
  4044d4:	bl	403a78 <__fxstatat@plt+0x1028>
  4044d8:	and	w0, w0, #0xff
  4044dc:	cbz	w0, 40479c <__fxstatat@plt+0x1d4c>
  4044e0:	mov	w0, #0xffffffff            	// #-1
  4044e4:	str	w0, [x19, #180]
  4044e8:	b	40479c <__fxstatat@plt+0x1d4c>
  4044ec:	cbz	w27, 404508 <__fxstatat@plt+0x1ab8>
  4044f0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4044f4:	ldrb	w0, [x0, #904]
  4044f8:	cbnz	w0, 404508 <__fxstatat@plt+0x1ab8>
  4044fc:	mov	w0, #0x9                   	// #9
  404500:	str	w0, [x19, #152]
  404504:	b	4040b0 <__fxstatat@plt+0x1660>
  404508:	mov	w0, #0x3                   	// #3
  40450c:	str	w0, [x19, #152]
  404510:	b	4040b0 <__fxstatat@plt+0x1660>
  404514:	ldr	w0, [x19, #48]
  404518:	bl	403c34 <__fxstatat@plt+0x11e4>
  40451c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404520:	ldr	w1, [x1, #1532]
  404524:	cmp	w1, w0
  404528:	b.ge	404120 <__fxstatat@plt+0x16d0>  // b.tcont
  40452c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404530:	str	w0, [x1, #1532]
  404534:	b	404120 <__fxstatat@plt+0x16d0>
  404538:	ldr	w23, [x19, #52]
  40453c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404540:	ldrb	w1, [x0, #840]
  404544:	mov	x0, #0x0                   	// #0
  404548:	cbz	w1, 404570 <__fxstatat@plt+0x1b20>
  40454c:	mov	w1, w23
  404550:	bl	403be8 <__fxstatat@plt+0x1198>
  404554:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404558:	ldr	w1, [x1, #1536]
  40455c:	cmp	w1, w0
  404560:	b.ge	40412c <__fxstatat@plt+0x16dc>  // b.tcont
  404564:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404568:	str	w0, [x1, #1536]
  40456c:	b	40412c <__fxstatat@plt+0x16dc>
  404570:	mov	w0, w23
  404574:	bl	40dd28 <__fxstatat@plt+0xb2d8>
  404578:	b	40454c <__fxstatat@plt+0x1afc>
  40457c:	ldr	w0, [x19, #48]
  404580:	bl	403c34 <__fxstatat@plt+0x11e4>
  404584:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404588:	ldr	w1, [x1, #1540]
  40458c:	cmp	w1, w0
  404590:	b.ge	404138 <__fxstatat@plt+0x16e8>  // b.tcont
  404594:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404598:	str	w0, [x1, #1540]
  40459c:	b	404138 <__fxstatat@plt+0x16e8>
  4045a0:	add	x1, x29, #0x78
  4045a4:	ldr	w0, [x19, #44]
  4045a8:	bl	40df60 <__fxstatat@plt+0xb510>
  4045ac:	bl	402430 <strlen@plt>
  4045b0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4045b4:	ldr	w1, [x1, #1528]
  4045b8:	cmp	w1, w0
  4045bc:	b.ge	4045c8 <__fxstatat@plt+0x1b78>  // b.tcont
  4045c0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4045c4:	str	w0, [x1, #1528]
  4045c8:	ldr	w0, [x19, #40]
  4045cc:	mov	w1, #0xb000                	// #45056
  4045d0:	and	w0, w0, w1
  4045d4:	cmp	w0, #0x2, lsl #12
  4045d8:	b.ne	404674 <__fxstatat@plt+0x1c24>  // b.any
  4045dc:	ldr	x1, [x19, #56]
  4045e0:	ubfx	w2, w1, #8, #12
  4045e4:	lsr	x1, x1, #32
  4045e8:	and	w0, w1, #0xfffff000
  4045ec:	add	x1, x29, #0x90
  4045f0:	orr	w0, w0, w2
  4045f4:	bl	40df60 <__fxstatat@plt+0xb510>
  4045f8:	bl	402430 <strlen@plt>
  4045fc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404600:	ldr	w1, [x1, #1548]
  404604:	cmp	w1, w0
  404608:	b.ge	404614 <__fxstatat@plt+0x1bc4>  // b.tcont
  40460c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404610:	str	w0, [x1, #1548]
  404614:	ldr	x2, [x19, #56]
  404618:	lsr	x0, x2, #12
  40461c:	add	x1, x29, #0x90
  404620:	bfxil	x0, x2, #0, #8
  404624:	bl	40df60 <__fxstatat@plt+0xb510>
  404628:	bl	402430 <strlen@plt>
  40462c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404630:	ldr	w1, [x1, #1552]
  404634:	cmp	w1, w0
  404638:	b.ge	404644 <__fxstatat@plt+0x1bf4>  // b.tcont
  40463c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404640:	str	w0, [x1, #1552]
  404644:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404648:	add	x1, x1, #0x5c8
  40464c:	ldr	w0, [x1, #68]
  404650:	add	w0, w0, #0x2
  404654:	ldr	w2, [x1, #72]
  404658:	add	w0, w0, w2
  40465c:	ldr	w1, [x1, #76]
  404660:	cmp	w1, w0
  404664:	b.ge	404170 <__fxstatat@plt+0x1720>  // b.tcont
  404668:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40466c:	str	w0, [x1, #1556]
  404670:	b	404170 <__fxstatat@plt+0x1720>
  404674:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404678:	add	x23, x23, #0x5c8
  40467c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404680:	ldr	x4, [x0, #1280]
  404684:	mov	x3, #0x1                   	// #1
  404688:	ldr	w2, [x23, #3544]
  40468c:	add	x1, x29, #0x90
  404690:	ldr	x0, [x19, #72]
  404694:	bl	40d324 <__fxstatat@plt+0xa8d4>
  404698:	mov	w1, #0x0                   	// #0
  40469c:	bl	40e56c <__fxstatat@plt+0xbb1c>
  4046a0:	ldr	w1, [x23, #76]
  4046a4:	cmp	w1, w0
  4046a8:	b.ge	404170 <__fxstatat@plt+0x1720>  // b.tcont
  4046ac:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4046b0:	str	w0, [x1, #1556]
  4046b4:	b	404170 <__fxstatat@plt+0x1720>
  4046b8:	mov	x22, #0x0                   	// #0
  4046bc:	b	404170 <__fxstatat@plt+0x1720>
  4046c0:	mov	x22, #0x0                   	// #0
  4046c4:	b	404170 <__fxstatat@plt+0x1720>
  4046c8:	add	x1, x29, #0x90
  4046cc:	ldr	x0, [x19, #32]
  4046d0:	bl	40df60 <__fxstatat@plt+0xb510>
  4046d4:	bl	402430 <strlen@plt>
  4046d8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4046dc:	ldr	w1, [x1, #1520]
  4046e0:	cmp	w1, w0
  4046e4:	b.ge	40417c <__fxstatat@plt+0x172c>  // b.tcont
  4046e8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4046ec:	str	w0, [x1, #1520]
  4046f0:	b	40417c <__fxstatat@plt+0x172c>
  4046f4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4046f8:	ldrb	w0, [x0, #884]
  4046fc:	cbnz	w0, 404144 <__fxstatat@plt+0x16f4>
  404700:	b	404170 <__fxstatat@plt+0x1720>
  404704:	ldr	w0, [x19, #40]
  404708:	and	w0, w0, #0xf000
  40470c:	cmp	w0, #0xa, lsl #12
  404710:	b.ne	404098 <__fxstatat@plt+0x1648>  // b.any
  404714:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404718:	ldrb	w0, [x0, #869]
  40471c:	cbz	w0, 4044a4 <__fxstatat@plt+0x1a54>
  404720:	ldr	x1, [x19, #72]
  404724:	mov	x0, x26
  404728:	bl	40ac24 <__fxstatat@plt+0x81d4>
  40472c:	mov	x22, x0
  404730:	str	x0, [x19, #8]
  404734:	cbz	x0, 40445c <__fxstatat@plt+0x1a0c>
  404738:	ldrb	w0, [x22]
  40473c:	cmp	w0, #0x2f
  404740:	b.eq	4044b0 <__fxstatat@plt+0x1a60>  // b.none
  404744:	mov	x0, x26
  404748:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  40474c:	mov	x24, x0
  404750:	cbz	x0, 4044c0 <__fxstatat@plt+0x1a70>
  404754:	mov	x0, x22
  404758:	bl	402430 <strlen@plt>
  40475c:	add	x1, x24, #0x2
  404760:	add	x0, x1, x0
  404764:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  404768:	mov	x23, x0
  40476c:	add	x0, x26, x24
  404770:	ldurb	w0, [x0, #-1]
  404774:	cmp	w0, #0x2f
  404778:	cinc	x2, x24, ne  // ne = any
  40477c:	mov	x1, x26
  404780:	mov	x0, x23
  404784:	bl	4027c0 <stpncpy@plt>
  404788:	mov	x1, x22
  40478c:	bl	4028d0 <strcpy@plt>
  404790:	cbz	x23, 404488 <__fxstatat@plt+0x1a38>
  404794:	ldr	w0, [x19, #180]
  404798:	cbz	w0, 4044d0 <__fxstatat@plt+0x1a80>
  40479c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4047a0:	ldr	w0, [x0, #1512]
  4047a4:	cmp	w0, #0x1
  4047a8:	b.hi	4047b8 <__fxstatat@plt+0x1d68>  // b.pmore
  4047ac:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4047b0:	ldrb	w0, [x0, #869]
  4047b4:	cbz	w0, 40448c <__fxstatat@plt+0x1a3c>
  4047b8:	add	x2, x29, #0x90
  4047bc:	mov	x1, x23
  4047c0:	mov	w0, #0x0                   	// #0
  4047c4:	bl	402a00 <__xstat@plt>
  4047c8:	cbnz	w0, 40448c <__fxstatat@plt+0x1a3c>
  4047cc:	mov	w0, #0x1                   	// #1
  4047d0:	strb	w0, [x19, #169]
  4047d4:	ldr	w0, [x29, #160]
  4047d8:	str	w0, [x19, #156]
  4047dc:	b	40448c <__fxstatat@plt+0x1a3c>
  4047e0:	ldrb	w22, [x21]
  4047e4:	cmp	w22, #0x2f
  4047e8:	b.eq	4041d8 <__fxstatat@plt+0x1788>  // b.none
  4047ec:	ldr	x0, [x29, #104]
  4047f0:	ldrb	w25, [x0]
  4047f4:	mov	x26, x21
  4047f8:	cbnz	w25, 403ea0 <__fxstatat@plt+0x1450>
  4047fc:	mov	w1, #0x2                   	// #2
  404800:	mov	x0, x26
  404804:	bl	40b134 <__fxstatat@plt+0x86e4>
  404808:	str	x0, [x19, #16]
  40480c:	cbnz	x0, 403fa8 <__fxstatat@plt+0x1558>
  404810:	mov	w2, #0x5                   	// #5
  404814:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  404818:	add	x1, x1, #0x478
  40481c:	bl	402970 <dcgettext@plt>
  404820:	mov	x2, x26
  404824:	mov	x1, x0
  404828:	mov	w0, w27
  40482c:	bl	4039f8 <__fxstatat@plt+0xfa8>
  404830:	b	403fa8 <__fxstatat@plt+0x1558>
  404834:	cmp	w24, #0x0
  404838:	ccmp	w24, #0x6, #0x4, ne  // ne = any
  40483c:	b.eq	403f3c <__fxstatat@plt+0x14ec>  // b.none
  404840:	mov	x22, #0x0                   	// #0
  404844:	cmp	w24, #0x5
  404848:	b.ne	404170 <__fxstatat@plt+0x1720>  // b.any
  40484c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404850:	ldr	w0, [x0, #1512]
  404854:	cmp	w0, #0x3
  404858:	b.eq	403e80 <__fxstatat@plt+0x1430>  // b.none
  40485c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404860:	ldrb	w0, [x0, #859]
  404864:	cbz	w0, 4046c0 <__fxstatat@plt+0x1c70>
  404868:	mov	w0, #0xe                   	// #14
  40486c:	bl	4033a4 <__fxstatat@plt+0x954>
  404870:	and	w0, w0, #0xff
  404874:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  404878:	mov	w0, #0x10                  	// #16
  40487c:	bl	4033a4 <__fxstatat@plt+0x954>
  404880:	and	w0, w0, #0xff
  404884:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  404888:	mov	w0, #0x11                  	// #17
  40488c:	bl	4033a4 <__fxstatat@plt+0x954>
  404890:	and	w0, w0, #0xff
  404894:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  404898:	mov	w0, #0x15                  	// #21
  40489c:	bl	4033a4 <__fxstatat@plt+0x954>
  4048a0:	and	w0, w0, #0xff
  4048a4:	cbnz	w0, 403e80 <__fxstatat@plt+0x1430>
  4048a8:	b	404170 <__fxstatat@plt+0x1720>
  4048ac:	str	wzr, [x19, #172]
  4048b0:	b	4043e8 <__fxstatat@plt+0x1998>
  4048b4:	ldrb	w22, [x21]
  4048b8:	cmp	w22, #0x2f
  4048bc:	b.ne	403e90 <__fxstatat@plt+0x1440>  // b.any
  4048c0:	mov	x26, x21
  4048c4:	b	4041e8 <__fxstatat@plt+0x1798>
  4048c8:	stp	x29, x30, [sp, #-32]!
  4048cc:	mov	x29, sp
  4048d0:	str	x19, [sp, #16]
  4048d4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4048d8:	add	x0, x0, #0x5c8
  4048dc:	ldr	x19, [x0, #8]
  4048e0:	add	x1, x19, x19, lsr #1
  4048e4:	ldr	x0, [x0, #3552]
  4048e8:	cmp	x1, x0
  4048ec:	b.ls	404940 <__fxstatat@plt+0x1ef0>  // b.plast
  4048f0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4048f4:	ldr	x0, [x0, #1504]
  4048f8:	bl	402840 <free@plt>
  4048fc:	mov	x0, #0x18                  	// #24
  404900:	mul	x1, x19, x0
  404904:	umulh	x0, x19, x0
  404908:	cmp	x0, #0x0
  40490c:	cset	x0, ne  // ne = any
  404910:	cmp	x1, #0x0
  404914:	csinc	x0, x0, xzr, ge  // ge = tcont
  404918:	cbnz	w0, 404984 <__fxstatat@plt+0x1f34>
  40491c:	add	x19, x19, x19, lsl #1
  404920:	lsl	x0, x19, #3
  404924:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  404928:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40492c:	add	x1, x1, #0x5c8
  404930:	str	x0, [x1, #24]
  404934:	ldr	x0, [x1, #8]
  404938:	add	x0, x0, x0, lsl #1
  40493c:	str	x0, [x1, #3552]
  404940:	bl	402c6c <__fxstatat@plt+0x21c>
  404944:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  404948:	ldr	w0, [x0, #944]
  40494c:	cmn	w0, #0x1
  404950:	b.eq	404a08 <__fxstatat@plt+0x1fb8>  // b.none
  404954:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404958:	add	x0, x0, #0x5c8
  40495c:	add	x0, x0, #0xdf0
  404960:	bl	402470 <_setjmp@plt>
  404964:	cbz	w0, 4049ac <__fxstatat@plt+0x1f5c>
  404968:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40496c:	ldr	w0, [x0, #944]
  404970:	cmp	w0, #0x3
  404974:	b.eq	404988 <__fxstatat@plt+0x1f38>  // b.none
  404978:	bl	402c6c <__fxstatat@plt+0x21c>
  40497c:	mov	w2, #0x1                   	// #1
  404980:	b	4049b0 <__fxstatat@plt+0x1f60>
  404984:	bl	412584 <__fxstatat@plt+0xfb34>
  404988:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x4af4>
  40498c:	add	x3, x3, #0x8
  404990:	add	x3, x3, #0x10
  404994:	mov	w2, #0xeea                 	// #3818
  404998:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  40499c:	add	x1, x1, #0x430
  4049a0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  4049a4:	add	x0, x0, #0x4c8
  4049a8:	bl	4029d0 <__assert_fail@plt>
  4049ac:	mov	w2, #0x0                   	// #0
  4049b0:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4049b4:	add	x3, x3, #0x5c8
  4049b8:	ldr	x0, [x3, #24]
  4049bc:	ldr	x1, [x3, #8]
  4049c0:	ldr	w3, [x3, #3560]
  4049c4:	mov	w6, #0x0                   	// #0
  4049c8:	cmp	w3, #0x4
  4049cc:	b.eq	404a14 <__fxstatat@plt+0x1fc4>  // b.none
  4049d0:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x4af4>
  4049d4:	add	x4, x4, #0x8
  4049d8:	adrp	x5, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4049dc:	add	x5, x5, #0x5c8
  4049e0:	ldrb	w7, [x5, #3884]
  4049e4:	add	w3, w3, w6
  4049e8:	lsl	x3, x3, #1
  4049ec:	add	x2, x3, w2, sxtw
  4049f0:	ldrb	w3, [x5, #3885]
  4049f4:	add	x2, x3, x2, lsl #1
  4049f8:	add	x2, x7, x2, lsl #1
  4049fc:	add	x3, x4, #0x20
  404a00:	ldr	x2, [x3, x2, lsl #3]
  404a04:	bl	40e78c <__fxstatat@plt+0xbd3c>
  404a08:	ldr	x19, [sp, #16]
  404a0c:	ldp	x29, x30, [sp], #32
  404a10:	ret
  404a14:	adrp	x4, 430000 <__progname@@GLIBC_2.17+0xa48>
  404a18:	ldr	w6, [x4, #1264]
  404a1c:	b	4049d0 <__fxstatat@plt+0x1f80>
  404a20:	stp	x29, x30, [sp, #-32]!
  404a24:	mov	x29, sp
  404a28:	stp	x19, x20, [sp, #16]
  404a2c:	mov	x19, x0
  404a30:	mov	x20, x1
  404a34:	bl	4029e0 <__errno_location@plt>
  404a38:	str	wzr, [x0]
  404a3c:	mov	x1, x20
  404a40:	mov	x0, x19
  404a44:	bl	402990 <strcoll@plt>
  404a48:	ldp	x19, x20, [sp, #16]
  404a4c:	ldp	x29, x30, [sp], #32
  404a50:	ret
  404a54:	ldr	x3, [x1, #72]
  404a58:	ldr	x2, [x0, #72]
  404a5c:	cmp	x3, x2
  404a60:	b.lt	404a8c <__fxstatat@plt+0x203c>  // b.tstop
  404a64:	b.eq	404a70 <__fxstatat@plt+0x2020>  // b.none
  404a68:	cset	w0, gt
  404a6c:	ret
  404a70:	stp	x29, x30, [sp, #-16]!
  404a74:	mov	x29, sp
  404a78:	ldr	x1, [x1]
  404a7c:	ldr	x0, [x0]
  404a80:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404a84:	ldp	x29, x30, [sp], #16
  404a88:	ret
  404a8c:	mov	w0, #0xffffffff            	// #-1
  404a90:	ret
  404a94:	mov	x2, x1
  404a98:	ldr	x3, [x0, #72]
  404a9c:	ldr	x1, [x1, #72]
  404aa0:	cmp	x3, x1
  404aa4:	b.lt	404ad0 <__fxstatat@plt+0x2080>  // b.tstop
  404aa8:	b.eq	404ab4 <__fxstatat@plt+0x2064>  // b.none
  404aac:	cset	w0, gt
  404ab0:	ret
  404ab4:	stp	x29, x30, [sp, #-16]!
  404ab8:	mov	x29, sp
  404abc:	ldr	x1, [x0]
  404ac0:	ldr	x0, [x2]
  404ac4:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404ac8:	ldp	x29, x30, [sp], #16
  404acc:	ret
  404ad0:	mov	w0, #0xffffffff            	// #-1
  404ad4:	ret
  404ad8:	stp	x29, x30, [sp, #-48]!
  404adc:	mov	x29, sp
  404ae0:	stp	x19, x20, [sp, #16]
  404ae4:	str	x21, [sp, #32]
  404ae8:	mov	x21, x0
  404aec:	mov	x20, x1
  404af0:	bl	402c40 <__fxstatat@plt+0x1f0>
  404af4:	and	w19, w0, #0xff
  404af8:	mov	x0, x20
  404afc:	bl	402c40 <__fxstatat@plt+0x1f0>
  404b00:	and	w2, w0, #0xff
  404b04:	eor	w0, w2, #0x1
  404b08:	tst	w19, w0
  404b0c:	b.ne	404b5c <__fxstatat@plt+0x210c>  // b.any
  404b10:	eor	w19, w19, #0x1
  404b14:	mov	w0, #0x1                   	// #1
  404b18:	tst	w2, w19
  404b1c:	b.ne	404b3c <__fxstatat@plt+0x20ec>  // b.any
  404b20:	ldr	x0, [x20, #72]
  404b24:	ldr	x1, [x21, #72]
  404b28:	cmp	x1, x0
  404b2c:	b.gt	404b64 <__fxstatat@plt+0x2114>
  404b30:	cmp	x1, x0
  404b34:	b.eq	404b4c <__fxstatat@plt+0x20fc>  // b.none
  404b38:	cset	w0, lt  // lt = tstop
  404b3c:	ldp	x19, x20, [sp, #16]
  404b40:	ldr	x21, [sp, #32]
  404b44:	ldp	x29, x30, [sp], #48
  404b48:	ret
  404b4c:	ldr	x1, [x20]
  404b50:	ldr	x0, [x21]
  404b54:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404b58:	b	404b3c <__fxstatat@plt+0x20ec>
  404b5c:	mov	w0, #0xffffffff            	// #-1
  404b60:	b	404b3c <__fxstatat@plt+0x20ec>
  404b64:	mov	w0, #0xffffffff            	// #-1
  404b68:	b	404b3c <__fxstatat@plt+0x20ec>
  404b6c:	stp	x29, x30, [sp, #-48]!
  404b70:	mov	x29, sp
  404b74:	stp	x19, x20, [sp, #16]
  404b78:	str	x21, [sp, #32]
  404b7c:	mov	x21, x0
  404b80:	mov	x20, x1
  404b84:	bl	402c40 <__fxstatat@plt+0x1f0>
  404b88:	and	w19, w0, #0xff
  404b8c:	mov	x0, x20
  404b90:	bl	402c40 <__fxstatat@plt+0x1f0>
  404b94:	and	w2, w0, #0xff
  404b98:	eor	w0, w2, #0x1
  404b9c:	tst	w19, w0
  404ba0:	b.ne	404bf0 <__fxstatat@plt+0x21a0>  // b.any
  404ba4:	eor	w19, w19, #0x1
  404ba8:	mov	w0, #0x1                   	// #1
  404bac:	tst	w2, w19
  404bb0:	b.ne	404bd0 <__fxstatat@plt+0x2180>  // b.any
  404bb4:	ldr	x0, [x21, #72]
  404bb8:	ldr	x1, [x20, #72]
  404bbc:	cmp	x1, x0
  404bc0:	b.gt	404bf8 <__fxstatat@plt+0x21a8>
  404bc4:	cmp	x1, x0
  404bc8:	b.eq	404be0 <__fxstatat@plt+0x2190>  // b.none
  404bcc:	cset	w0, lt  // lt = tstop
  404bd0:	ldp	x19, x20, [sp, #16]
  404bd4:	ldr	x21, [sp, #32]
  404bd8:	ldp	x29, x30, [sp], #48
  404bdc:	ret
  404be0:	ldr	x1, [x21]
  404be4:	ldr	x0, [x20]
  404be8:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404bec:	b	404bd0 <__fxstatat@plt+0x2180>
  404bf0:	mov	w0, #0xffffffff            	// #-1
  404bf4:	b	404bd0 <__fxstatat@plt+0x2180>
  404bf8:	mov	w0, #0xffffffff            	// #-1
  404bfc:	b	404bd0 <__fxstatat@plt+0x2180>
  404c00:	stp	x29, x30, [sp, #-16]!
  404c04:	mov	x29, sp
  404c08:	ldr	x1, [x1]
  404c0c:	ldr	x0, [x0]
  404c10:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404c14:	ldp	x29, x30, [sp], #16
  404c18:	ret
  404c1c:	stp	x29, x30, [sp, #-16]!
  404c20:	mov	x29, sp
  404c24:	mov	x2, x1
  404c28:	ldr	x1, [x0]
  404c2c:	ldr	x0, [x2]
  404c30:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404c34:	ldp	x29, x30, [sp], #16
  404c38:	ret
  404c3c:	stp	x29, x30, [sp, #-48]!
  404c40:	mov	x29, sp
  404c44:	stp	x19, x20, [sp, #16]
  404c48:	str	x21, [sp, #32]
  404c4c:	mov	x21, x0
  404c50:	mov	x20, x1
  404c54:	bl	402c40 <__fxstatat@plt+0x1f0>
  404c58:	and	w19, w0, #0xff
  404c5c:	mov	x0, x20
  404c60:	bl	402c40 <__fxstatat@plt+0x1f0>
  404c64:	and	w2, w0, #0xff
  404c68:	eor	w0, w2, #0x1
  404c6c:	tst	w19, w0
  404c70:	b.ne	404ca4 <__fxstatat@plt+0x2254>  // b.any
  404c74:	eor	w19, w19, #0x1
  404c78:	mov	w0, #0x1                   	// #1
  404c7c:	tst	w2, w19
  404c80:	b.eq	404c94 <__fxstatat@plt+0x2244>  // b.none
  404c84:	ldp	x19, x20, [sp, #16]
  404c88:	ldr	x21, [sp, #32]
  404c8c:	ldp	x29, x30, [sp], #48
  404c90:	ret
  404c94:	ldr	x1, [x20]
  404c98:	ldr	x0, [x21]
  404c9c:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404ca0:	b	404c84 <__fxstatat@plt+0x2234>
  404ca4:	mov	w0, #0xffffffff            	// #-1
  404ca8:	b	404c84 <__fxstatat@plt+0x2234>
  404cac:	stp	x29, x30, [sp, #-48]!
  404cb0:	mov	x29, sp
  404cb4:	stp	x19, x20, [sp, #16]
  404cb8:	str	x21, [sp, #32]
  404cbc:	mov	x21, x0
  404cc0:	mov	x20, x1
  404cc4:	bl	402c40 <__fxstatat@plt+0x1f0>
  404cc8:	and	w19, w0, #0xff
  404ccc:	mov	x0, x20
  404cd0:	bl	402c40 <__fxstatat@plt+0x1f0>
  404cd4:	and	w2, w0, #0xff
  404cd8:	eor	w0, w2, #0x1
  404cdc:	tst	w19, w0
  404ce0:	b.ne	404d14 <__fxstatat@plt+0x22c4>  // b.any
  404ce4:	eor	w19, w19, #0x1
  404ce8:	mov	w0, #0x1                   	// #1
  404cec:	tst	w2, w19
  404cf0:	b.eq	404d04 <__fxstatat@plt+0x22b4>  // b.none
  404cf4:	ldp	x19, x20, [sp, #16]
  404cf8:	ldr	x21, [sp, #32]
  404cfc:	ldp	x29, x30, [sp], #48
  404d00:	ret
  404d04:	ldr	x1, [x21]
  404d08:	ldr	x0, [x20]
  404d0c:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404d10:	b	404cf4 <__fxstatat@plt+0x22a4>
  404d14:	mov	w0, #0xffffffff            	// #-1
  404d18:	b	404cf4 <__fxstatat@plt+0x22a4>
  404d1c:	stp	x29, x30, [sp, #-48]!
  404d20:	mov	x29, sp
  404d24:	stp	x19, x20, [sp, #16]
  404d28:	str	x21, [sp, #32]
  404d2c:	mov	x21, x0
  404d30:	mov	x20, x1
  404d34:	bl	402c40 <__fxstatat@plt+0x1f0>
  404d38:	and	w19, w0, #0xff
  404d3c:	mov	x0, x20
  404d40:	bl	402c40 <__fxstatat@plt+0x1f0>
  404d44:	and	w2, w0, #0xff
  404d48:	eor	w0, w2, #0x1
  404d4c:	tst	w19, w0
  404d50:	b.ne	404d80 <__fxstatat@plt+0x2330>  // b.any
  404d54:	eor	w19, w19, #0x1
  404d58:	mov	w0, #0x1                   	// #1
  404d5c:	tst	w2, w19
  404d60:	b.ne	404d70 <__fxstatat@plt+0x2320>  // b.any
  404d64:	ldr	x1, [x21]
  404d68:	ldr	x0, [x20]
  404d6c:	bl	40be5c <__fxstatat@plt+0x940c>
  404d70:	ldp	x19, x20, [sp, #16]
  404d74:	ldr	x21, [sp, #32]
  404d78:	ldp	x29, x30, [sp], #48
  404d7c:	ret
  404d80:	mov	w0, #0xffffffff            	// #-1
  404d84:	b	404d70 <__fxstatat@plt+0x2320>
  404d88:	stp	x29, x30, [sp, #-16]!
  404d8c:	mov	x29, sp
  404d90:	mov	x2, x1
  404d94:	ldr	x1, [x0]
  404d98:	ldr	x0, [x2]
  404d9c:	bl	40be5c <__fxstatat@plt+0x940c>
  404da0:	ldp	x29, x30, [sp], #16
  404da4:	ret
  404da8:	stp	x29, x30, [sp, #-48]!
  404dac:	mov	x29, sp
  404db0:	stp	x19, x20, [sp, #16]
  404db4:	str	x21, [sp, #32]
  404db8:	mov	x21, x0
  404dbc:	mov	x20, x1
  404dc0:	bl	402c40 <__fxstatat@plt+0x1f0>
  404dc4:	and	w19, w0, #0xff
  404dc8:	mov	x0, x20
  404dcc:	bl	402c40 <__fxstatat@plt+0x1f0>
  404dd0:	and	w2, w0, #0xff
  404dd4:	eor	w0, w2, #0x1
  404dd8:	tst	w19, w0
  404ddc:	b.ne	404e0c <__fxstatat@plt+0x23bc>  // b.any
  404de0:	eor	w19, w19, #0x1
  404de4:	mov	w0, #0x1                   	// #1
  404de8:	tst	w2, w19
  404dec:	b.ne	404dfc <__fxstatat@plt+0x23ac>  // b.any
  404df0:	ldr	x1, [x20]
  404df4:	ldr	x0, [x21]
  404df8:	bl	40be5c <__fxstatat@plt+0x940c>
  404dfc:	ldp	x19, x20, [sp, #16]
  404e00:	ldr	x21, [sp, #32]
  404e04:	ldp	x29, x30, [sp], #48
  404e08:	ret
  404e0c:	mov	w0, #0xffffffff            	// #-1
  404e10:	b	404dfc <__fxstatat@plt+0x23ac>
  404e14:	stp	x29, x30, [sp, #-16]!
  404e18:	mov	x29, sp
  404e1c:	ldr	x1, [x1]
  404e20:	ldr	x0, [x0]
  404e24:	bl	40be5c <__fxstatat@plt+0x940c>
  404e28:	ldp	x29, x30, [sp], #16
  404e2c:	ret
  404e30:	stp	x29, x30, [sp, #-48]!
  404e34:	mov	x29, sp
  404e38:	stp	x19, x20, [sp, #16]
  404e3c:	str	x21, [sp, #32]
  404e40:	mov	x21, x0
  404e44:	mov	x20, x1
  404e48:	bl	402c40 <__fxstatat@plt+0x1f0>
  404e4c:	and	w19, w0, #0xff
  404e50:	mov	x0, x20
  404e54:	bl	402c40 <__fxstatat@plt+0x1f0>
  404e58:	and	w2, w0, #0xff
  404e5c:	eor	w0, w2, #0x1
  404e60:	tst	w19, w0
  404e64:	b.ne	404ee0 <__fxstatat@plt+0x2490>  // b.any
  404e68:	eor	w19, w19, #0x1
  404e6c:	mov	w0, #0x1                   	// #1
  404e70:	tst	w2, w19
  404e74:	b.eq	404e88 <__fxstatat@plt+0x2438>  // b.none
  404e78:	ldp	x19, x20, [sp, #16]
  404e7c:	ldr	x21, [sp, #32]
  404e80:	ldp	x29, x30, [sp], #48
  404e84:	ret
  404e88:	mov	w1, #0x2e                  	// #46
  404e8c:	ldr	x0, [x20]
  404e90:	bl	402720 <strrchr@plt>
  404e94:	mov	x19, x0
  404e98:	mov	w1, #0x2e                  	// #46
  404e9c:	ldr	x0, [x21]
  404ea0:	bl	402720 <strrchr@plt>
  404ea4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  404ea8:	add	x1, x1, #0x1f0
  404eac:	cmp	x19, #0x0
  404eb0:	csel	x19, x1, x19, eq  // eq = none
  404eb4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  404eb8:	add	x1, x1, #0x1f0
  404ebc:	cmp	x0, #0x0
  404ec0:	csel	x1, x1, x0, eq  // eq = none
  404ec4:	mov	x0, x19
  404ec8:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404ecc:	cbnz	w0, 404e78 <__fxstatat@plt+0x2428>
  404ed0:	ldr	x1, [x21]
  404ed4:	ldr	x0, [x20]
  404ed8:	bl	404a20 <__fxstatat@plt+0x1fd0>
  404edc:	b	404e78 <__fxstatat@plt+0x2428>
  404ee0:	mov	w0, #0xffffffff            	// #-1
  404ee4:	b	404e78 <__fxstatat@plt+0x2428>
  404ee8:	stp	x29, x30, [sp, #-32]!
  404eec:	mov	x29, sp
  404ef0:	str	x19, [sp, #16]
  404ef4:	bl	402ca0 <__fxstatat@plt+0x250>
  404ef8:	ands	w19, w0, #0xff
  404efc:	b.eq	404f38 <__fxstatat@plt+0x24e8>  // b.none
  404f00:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404f04:	ldr	x2, [x1, #1456]
  404f08:	ldr	x1, [x2, #40]
  404f0c:	ldr	x3, [x2, #48]
  404f10:	cmp	x1, x3
  404f14:	b.cs	404f4c <__fxstatat@plt+0x24fc>  // b.hs, b.nlast
  404f18:	add	x3, x1, #0x1
  404f1c:	str	x3, [x2, #40]
  404f20:	strb	w0, [x1]
  404f24:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404f28:	add	x0, x0, #0x5c8
  404f2c:	ldr	x1, [x0, #3888]
  404f30:	add	x1, x1, #0x1
  404f34:	str	x1, [x0, #3888]
  404f38:	cmp	w19, #0x0
  404f3c:	cset	w0, ne  // ne = any
  404f40:	ldr	x19, [sp, #16]
  404f44:	ldp	x29, x30, [sp], #32
  404f48:	ret
  404f4c:	mov	w1, w19
  404f50:	mov	x0, x2
  404f54:	bl	402780 <__overflow@plt>
  404f58:	b	404f24 <__fxstatat@plt+0x24d4>
  404f5c:	cmp	x0, x1
  404f60:	b.cs	405048 <__fxstatat@plt+0x25f8>  // b.hs, b.nlast
  404f64:	stp	x29, x30, [sp, #-80]!
  404f68:	mov	x29, sp
  404f6c:	stp	x19, x20, [sp, #16]
  404f70:	stp	x21, x22, [sp, #32]
  404f74:	stp	x23, x24, [sp, #48]
  404f78:	str	x25, [sp, #64]
  404f7c:	mov	x19, x0
  404f80:	mov	x20, x1
  404f84:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404f88:	add	x21, x21, #0x5c8
  404f8c:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  404f90:	mov	w23, #0x20                  	// #32
  404f94:	mov	w25, #0x20                  	// #32
  404f98:	mov	w24, #0x9                   	// #9
  404f9c:	b	404fd8 <__fxstatat@plt+0x2588>
  404fa0:	mov	w1, #0x9                   	// #9
  404fa4:	bl	402780 <__overflow@plt>
  404fa8:	b	405014 <__fxstatat@plt+0x25c4>
  404fac:	ldr	x0, [x22, #1456]
  404fb0:	ldr	x2, [x0, #40]
  404fb4:	ldr	x1, [x0, #48]
  404fb8:	cmp	x2, x1
  404fbc:	b.cs	405024 <__fxstatat@plt+0x25d4>  // b.hs, b.nlast
  404fc0:	add	x1, x2, #0x1
  404fc4:	str	x1, [x0, #40]
  404fc8:	strb	w23, [x2]
  404fcc:	add	x19, x19, #0x1
  404fd0:	cmp	x20, x19
  404fd4:	b.ls	405030 <__fxstatat@plt+0x25e0>  // b.plast
  404fd8:	ldr	x0, [x21, #3896]
  404fdc:	cbz	x0, 404fac <__fxstatat@plt+0x255c>
  404fe0:	udiv	x2, x20, x0
  404fe4:	add	x1, x19, #0x1
  404fe8:	udiv	x0, x1, x0
  404fec:	cmp	x2, x0
  404ff0:	b.ls	404fac <__fxstatat@plt+0x255c>  // b.plast
  404ff4:	ldr	x0, [x22, #1456]
  404ff8:	ldr	x1, [x0, #40]
  404ffc:	ldr	x2, [x0, #48]
  405000:	cmp	x1, x2
  405004:	b.cs	404fa0 <__fxstatat@plt+0x2550>  // b.hs, b.nlast
  405008:	add	x2, x1, #0x1
  40500c:	str	x2, [x0, #40]
  405010:	strb	w24, [x1]
  405014:	ldr	x1, [x21, #3896]
  405018:	udiv	x19, x19, x1
  40501c:	madd	x19, x19, x1, x1
  405020:	b	404fd0 <__fxstatat@plt+0x2580>
  405024:	mov	w1, w25
  405028:	bl	402780 <__overflow@plt>
  40502c:	b	404fcc <__fxstatat@plt+0x257c>
  405030:	ldp	x19, x20, [sp, #16]
  405034:	ldp	x21, x22, [sp, #32]
  405038:	ldp	x23, x24, [sp, #48]
  40503c:	ldr	x25, [sp, #64]
  405040:	ldp	x29, x30, [sp], #80
  405044:	ret
  405048:	ret
  40504c:	stp	x29, x30, [sp, #-128]!
  405050:	mov	x29, sp
  405054:	stp	x19, x20, [sp, #16]
  405058:	stp	x21, x22, [sp, #32]
  40505c:	stp	x23, x24, [sp, #48]
  405060:	stp	x25, x26, [sp, #64]
  405064:	stp	x27, x28, [sp, #80]
  405068:	mov	x25, x0
  40506c:	mov	x27, x1
  405070:	mov	x19, x2
  405074:	mov	x21, x3
  405078:	mov	w20, w4
  40507c:	mov	x26, x5
  405080:	str	x6, [sp, #96]
  405084:	ldr	x24, [x0]
  405088:	mov	x0, x3
  40508c:	bl	4114e8 <__fxstatat@plt+0xea98>
  405090:	cmp	w0, #0x2
  405094:	cset	w23, ls  // ls = plast
  405098:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40509c:	ldrb	w0, [x0, #1288]
  4050a0:	and	w23, w23, w0
  4050a4:	cbnz	w20, 405104 <__fxstatat@plt+0x26b4>
  4050a8:	cbz	w23, 405198 <__fxstatat@plt+0x2748>
  4050ac:	mov	x0, x19
  4050b0:	bl	402430 <strlen@plt>
  4050b4:	mov	x22, x0
  4050b8:	cmp	x0, x27
  4050bc:	b.cs	405188 <__fxstatat@plt+0x2738>  // b.hs, b.nlast
  4050c0:	add	x2, x22, #0x1
  4050c4:	mov	x1, x19
  4050c8:	mov	x0, x24
  4050cc:	bl	4023c0 <memcpy@plt>
  4050d0:	str	wzr, [sp, #108]
  4050d4:	bl	402850 <__ctype_get_mb_cur_max@plt>
  4050d8:	cmp	x0, #0x1
  4050dc:	b.ls	405354 <__fxstatat@plt+0x2904>  // b.plast
  4050e0:	add	x23, x24, x22
  4050e4:	cmp	x23, x24
  4050e8:	b.ls	405304 <__fxstatat@plt+0x28b4>  // b.plast
  4050ec:	mov	x20, x24
  4050f0:	mov	x21, x24
  4050f4:	mov	x22, #0x0                   	// #0
  4050f8:	mov	x27, #0x1                   	// #1
  4050fc:	mov	w28, #0x3f                  	// #63
  405100:	b	40522c <__fxstatat@plt+0x27dc>
  405104:	mov	x4, x21
  405108:	mov	x3, #0xffffffffffffffff    	// #-1
  40510c:	mov	x2, x19
  405110:	mov	x1, x27
  405114:	mov	x0, x24
  405118:	bl	4115c8 <__fxstatat@plt+0xeb78>
  40511c:	mov	x20, x0
  405120:	cmp	x27, x0
  405124:	b.ls	40514c <__fxstatat@plt+0x26fc>  // b.plast
  405128:	ldrb	w2, [x19]
  40512c:	ldrb	w1, [x24]
  405130:	mov	w0, #0x1                   	// #1
  405134:	cmp	w2, w1
  405138:	b.eq	405174 <__fxstatat@plt+0x2724>  // b.none
  40513c:	str	w0, [sp, #108]
  405140:	cbz	w23, 4051ac <__fxstatat@plt+0x275c>
  405144:	mov	x22, x20
  405148:	b	4050d4 <__fxstatat@plt+0x2684>
  40514c:	add	x27, x0, #0x1
  405150:	mov	x0, x27
  405154:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  405158:	mov	x24, x0
  40515c:	mov	x4, x21
  405160:	mov	x3, #0xffffffffffffffff    	// #-1
  405164:	mov	x2, x19
  405168:	mov	x1, x27
  40516c:	bl	4115c8 <__fxstatat@plt+0xeb78>
  405170:	b	405128 <__fxstatat@plt+0x26d8>
  405174:	mov	x0, x19
  405178:	bl	402430 <strlen@plt>
  40517c:	cmp	x0, x20
  405180:	cset	w0, ne  // ne = any
  405184:	b	40513c <__fxstatat@plt+0x26ec>
  405188:	add	x0, x0, #0x1
  40518c:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  405190:	mov	x24, x0
  405194:	b	4050c0 <__fxstatat@plt+0x2670>
  405198:	mov	x0, x19
  40519c:	bl	402430 <strlen@plt>
  4051a0:	mov	x20, x0
  4051a4:	str	w23, [sp, #108]
  4051a8:	mov	x24, x19
  4051ac:	cbz	x26, 4053ec <__fxstatat@plt+0x299c>
  4051b0:	bl	402850 <__ctype_get_mb_cur_max@plt>
  4051b4:	cmp	x0, #0x1
  4051b8:	b.hi	40539c <__fxstatat@plt+0x294c>  // b.pmore
  4051bc:	add	x19, x24, x20
  4051c0:	cmp	x19, x24
  4051c4:	b.ls	405424 <__fxstatat@plt+0x29d4>  // b.plast
  4051c8:	bl	402820 <__ctype_b_loc@plt>
  4051cc:	ldr	x2, [x0]
  4051d0:	mov	x0, x24
  4051d4:	mov	x22, #0x0                   	// #0
  4051d8:	ldrb	w1, [x0], #1
  4051dc:	ldrh	w1, [x2, x1, lsl #1]
  4051e0:	ubfx	x1, x1, #14, #1
  4051e4:	add	x22, x22, x1
  4051e8:	cmp	x19, x0
  4051ec:	b.ne	4051d8 <__fxstatat@plt+0x2788>  // b.any
  4051f0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4051f4:	ldrb	w0, [x0, #856]
  4051f8:	cbnz	w0, 40542c <__fxstatat@plt+0x29dc>
  4051fc:	ldr	x0, [sp, #96]
  405200:	strb	wzr, [x0]
  405204:	b	40532c <__fxstatat@plt+0x28dc>
  405208:	sub	w1, w0, #0x25
  40520c:	and	w1, w1, #0xff
  405210:	cmp	w1, #0x1a
  405214:	b.hi	405250 <__fxstatat@plt+0x2800>  // b.pmore
  405218:	add	x21, x21, #0x1
  40521c:	strb	w0, [x20], #1
  405220:	add	x22, x22, #0x1
  405224:	cmp	x21, x23
  405228:	b.cs	40530c <__fxstatat@plt+0x28bc>  // b.hs, b.nlast
  40522c:	ldrb	w0, [x21]
  405230:	cmp	w0, #0x5f
  405234:	b.hi	405258 <__fxstatat@plt+0x2808>  // b.pmore
  405238:	cmp	w0, #0x40
  40523c:	b.hi	405218 <__fxstatat@plt+0x27c8>  // b.pmore
  405240:	cmp	w0, #0x23
  405244:	b.hi	405208 <__fxstatat@plt+0x27b8>  // b.pmore
  405248:	cmp	w0, #0x1f
  40524c:	b.hi	405218 <__fxstatat@plt+0x27c8>  // b.pmore
  405250:	str	xzr, [sp, #120]
  405254:	b	4052a4 <__fxstatat@plt+0x2854>
  405258:	sub	w1, w0, #0x61
  40525c:	and	w1, w1, #0xff
  405260:	cmp	w1, #0x1d
  405264:	b.ls	405218 <__fxstatat@plt+0x27c8>  // b.plast
  405268:	b	405250 <__fxstatat@plt+0x2800>
  40526c:	add	x21, x21, #0x1
  405270:	strb	w28, [x20], #1
  405274:	add	x22, x22, #0x1
  405278:	b	405224 <__fxstatat@plt+0x27d4>
  40527c:	strb	w28, [x20], #1
  405280:	add	x22, x22, #0x1
  405284:	mov	x21, x23
  405288:	b	405224 <__fxstatat@plt+0x27d4>
  40528c:	add	x21, x21, x19
  405290:	strb	w28, [x20], #1
  405294:	add	x22, x22, #0x1
  405298:	add	x0, sp, #0x78
  40529c:	bl	402770 <mbsinit@plt>
  4052a0:	cbnz	w0, 405224 <__fxstatat@plt+0x27d4>
  4052a4:	add	x3, sp, #0x78
  4052a8:	sub	x2, x23, x21
  4052ac:	mov	x1, x21
  4052b0:	add	x0, sp, #0x74
  4052b4:	bl	413118 <__fxstatat@plt+0x106c8>
  4052b8:	cmn	x0, #0x1
  4052bc:	b.eq	40526c <__fxstatat@plt+0x281c>  // b.none
  4052c0:	cmn	x0, #0x2
  4052c4:	b.eq	40527c <__fxstatat@plt+0x282c>  // b.none
  4052c8:	cmp	x0, #0x0
  4052cc:	csel	x19, x0, x27, ne  // ne = any
  4052d0:	ldr	w0, [sp, #116]
  4052d4:	bl	402600 <wcwidth@plt>
  4052d8:	tbnz	w0, #31, 40528c <__fxstatat@plt+0x283c>
  4052dc:	mov	x1, #0x0                   	// #0
  4052e0:	ldrb	w2, [x21, x1]
  4052e4:	strb	w2, [x20, x1]
  4052e8:	add	x1, x1, #0x1
  4052ec:	cmp	x19, x1
  4052f0:	b.ne	4052e0 <__fxstatat@plt+0x2890>  // b.any
  4052f4:	add	x21, x21, x19
  4052f8:	add	x20, x20, x19
  4052fc:	add	x22, x22, w0, sxtw
  405300:	b	405298 <__fxstatat@plt+0x2848>
  405304:	mov	x20, x24
  405308:	mov	x22, #0x0                   	// #0
  40530c:	sub	x20, x20, x24
  405310:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405314:	ldrb	w0, [x0, #856]
  405318:	cbnz	w0, 4053bc <__fxstatat@plt+0x296c>
  40531c:	mov	w0, #0x0                   	// #0
  405320:	ldr	x1, [sp, #96]
  405324:	strb	w0, [x1]
  405328:	cbz	x26, 405330 <__fxstatat@plt+0x28e0>
  40532c:	str	x22, [x26]
  405330:	str	x24, [x25]
  405334:	mov	x0, x20
  405338:	ldp	x19, x20, [sp, #16]
  40533c:	ldp	x21, x22, [sp, #32]
  405340:	ldp	x23, x24, [sp, #48]
  405344:	ldp	x25, x26, [sp, #64]
  405348:	ldp	x27, x28, [sp, #80]
  40534c:	ldp	x29, x30, [sp], #128
  405350:	ret
  405354:	add	x19, x24, x22
  405358:	cmp	x19, x24
  40535c:	b.ls	4053b4 <__fxstatat@plt+0x2964>  // b.plast
  405360:	bl	402820 <__ctype_b_loc@plt>
  405364:	mov	x1, x24
  405368:	mov	w4, #0x3f                  	// #63
  40536c:	b	40537c <__fxstatat@plt+0x292c>
  405370:	add	x1, x1, #0x1
  405374:	cmp	x19, x1
  405378:	b.eq	405394 <__fxstatat@plt+0x2944>  // b.none
  40537c:	ldrb	w3, [x1]
  405380:	ldr	x2, [x0]
  405384:	ldrh	w2, [x2, x3, lsl #1]
  405388:	tbnz	w2, #14, 405370 <__fxstatat@plt+0x2920>
  40538c:	strb	w4, [x1]
  405390:	b	405370 <__fxstatat@plt+0x2920>
  405394:	mov	x20, x22
  405398:	b	405310 <__fxstatat@plt+0x28c0>
  40539c:	mov	w2, #0x0                   	// #0
  4053a0:	mov	x1, x20
  4053a4:	mov	x0, x24
  4053a8:	bl	40e388 <__fxstatat@plt+0xb938>
  4053ac:	sxtw	x22, w0
  4053b0:	b	4051f0 <__fxstatat@plt+0x27a0>
  4053b4:	mov	x20, x22
  4053b8:	b	405310 <__fxstatat@plt+0x28c0>
  4053bc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4053c0:	ldrb	w1, [x0, #1516]
  4053c4:	eor	w1, w1, #0x1
  4053c8:	ldr	w0, [sp, #108]
  4053cc:	orr	w1, w0, w1
  4053d0:	mov	w0, #0x1                   	// #1
  4053d4:	tst	w1, #0xff
  4053d8:	b.ne	40531c <__fxstatat@plt+0x28cc>  // b.any
  4053dc:	b	405320 <__fxstatat@plt+0x28d0>
  4053e0:	ldr	x0, [sp, #96]
  4053e4:	strb	wzr, [x0]
  4053e8:	b	405330 <__fxstatat@plt+0x28e0>
  4053ec:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4053f0:	ldrb	w0, [x0, #856]
  4053f4:	cbz	w0, 4053e0 <__fxstatat@plt+0x2990>
  4053f8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4053fc:	ldrb	w0, [x0, #1516]
  405400:	eor	w0, w0, #0x1
  405404:	ldr	w1, [sp, #108]
  405408:	orr	w0, w1, w0
  40540c:	tst	w0, #0xff
  405410:	b.ne	40531c <__fxstatat@plt+0x28cc>  // b.any
  405414:	mov	w0, #0x1                   	// #1
  405418:	ldr	x1, [sp, #96]
  40541c:	strb	w0, [x1]
  405420:	b	405330 <__fxstatat@plt+0x28e0>
  405424:	mov	x22, #0x0                   	// #0
  405428:	b	4051f0 <__fxstatat@plt+0x27a0>
  40542c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405430:	ldrb	w0, [x0, #1516]
  405434:	eor	w0, w0, #0x1
  405438:	ldr	w1, [sp, #108]
  40543c:	orr	w0, w1, w0
  405440:	tst	w0, #0xff
  405444:	b.ne	40531c <__fxstatat@plt+0x28cc>  // b.any
  405448:	mov	w0, #0x1                   	// #1
  40544c:	ldr	x1, [sp, #96]
  405450:	strb	w0, [x1]
  405454:	b	40532c <__fxstatat@plt+0x28dc>
  405458:	mov	x12, #0x2040                	// #8256
  40545c:	sub	sp, sp, x12
  405460:	stp	x29, x30, [sp]
  405464:	mov	x29, sp
  405468:	stp	x19, x20, [sp, #16]
  40546c:	mov	x19, x0
  405470:	add	x20, sp, #0x40
  405474:	str	x20, [sp, #56]
  405478:	add	x6, sp, #0x2f
  40547c:	add	x5, sp, #0x30
  405480:	mov	w4, w2
  405484:	mov	x3, x1
  405488:	mov	x2, x0
  40548c:	mov	x1, #0x2000                	// #8192
  405490:	add	x0, sp, #0x38
  405494:	bl	40504c <__fxstatat@plt+0x25fc>
  405498:	ldr	x0, [sp, #56]
  40549c:	cmp	x0, x19
  4054a0:	ccmp	x20, x0, #0x4, ne  // ne = any
  4054a4:	b.ne	4054c8 <__fxstatat@plt+0x2a78>  // b.any
  4054a8:	ldrb	w1, [sp, #47]
  4054ac:	ldr	x0, [sp, #48]
  4054b0:	add	x0, x1, x0
  4054b4:	ldp	x19, x20, [sp, #16]
  4054b8:	ldp	x29, x30, [sp]
  4054bc:	mov	x12, #0x2040                	// #8256
  4054c0:	add	sp, sp, x12
  4054c4:	ret
  4054c8:	bl	402840 <free@plt>
  4054cc:	b	4054a8 <__fxstatat@plt+0x2a58>
  4054d0:	sub	sp, sp, #0x2c0
  4054d4:	stp	x29, x30, [sp]
  4054d8:	mov	x29, sp
  4054dc:	stp	x19, x20, [sp, #16]
  4054e0:	str	x21, [sp, #32]
  4054e4:	mov	x20, x0
  4054e8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4054ec:	ldrb	w0, [x0, #860]
  4054f0:	cbz	w0, 405544 <__fxstatat@plt+0x2af4>
  4054f4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4054f8:	ldr	w0, [x0, #880]
  4054fc:	cmp	w0, #0x4
  405500:	b.eq	40552c <__fxstatat@plt+0x2adc>  // b.none
  405504:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405508:	add	x1, x1, #0x5c8
  40550c:	ldrsw	x19, [x1, #40]
  405510:	add	x19, x19, #0x1
  405514:	ldrb	w0, [x1, #3521]
  405518:	cbnz	w0, 4055a4 <__fxstatat@plt+0x2b54>
  40551c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405520:	ldrb	w0, [x0, #884]
  405524:	cbnz	w0, 4055d0 <__fxstatat@plt+0x2b80>
  405528:	b	4055e0 <__fxstatat@plt+0x2b90>
  40552c:	add	x1, sp, #0x30
  405530:	ldr	x0, [x20, #32]
  405534:	bl	40df60 <__fxstatat@plt+0xb510>
  405538:	bl	402430 <strlen@plt>
  40553c:	add	x19, x0, #0x1
  405540:	b	405548 <__fxstatat@plt+0x2af8>
  405544:	mov	x19, #0x0                   	// #0
  405548:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40554c:	ldrb	w0, [x0, #905]
  405550:	cbz	w0, 4055b4 <__fxstatat@plt+0x2b64>
  405554:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405558:	ldr	w0, [x0, #880]
  40555c:	cmp	w0, #0x4
  405560:	b.ne	4055a4 <__fxstatat@plt+0x2b54>  // b.any
  405564:	ldrb	w1, [x20, #168]
  405568:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  40556c:	add	x0, x0, #0x4e8
  405570:	cbnz	w1, 405580 <__fxstatat@plt+0x2b30>
  405574:	bl	402430 <strlen@plt>
  405578:	add	x0, x0, #0x1
  40557c:	b	4055b0 <__fxstatat@plt+0x2b60>
  405580:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405584:	add	x0, x0, #0x5c8
  405588:	ldr	x4, [x0, #3528]
  40558c:	mov	x3, #0x200                 	// #512
  405590:	ldr	w2, [x0, #3536]
  405594:	add	x1, sp, #0x30
  405598:	ldr	x0, [x20, #88]
  40559c:	bl	40d324 <__fxstatat@plt+0xa8d4>
  4055a0:	b	405574 <__fxstatat@plt+0x2b24>
  4055a4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4055a8:	ldrsw	x0, [x0, #1524]
  4055ac:	add	x0, x0, #0x1
  4055b0:	add	x19, x19, x0
  4055b4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4055b8:	ldrb	w0, [x0, #884]
  4055bc:	cbz	w0, 4055e0 <__fxstatat@plt+0x2b90>
  4055c0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4055c4:	ldr	w0, [x0, #880]
  4055c8:	cmp	w0, #0x4
  4055cc:	b.eq	405638 <__fxstatat@plt+0x2be8>  // b.none
  4055d0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4055d4:	ldrsw	x0, [x0, #1544]
  4055d8:	add	x0, x0, #0x1
  4055dc:	add	x19, x19, x0
  4055e0:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4055e4:	add	x21, x21, #0x5c8
  4055e8:	ldr	w2, [x20, #180]
  4055ec:	ldr	x1, [x21, #3192]
  4055f0:	ldr	x0, [x20]
  4055f4:	bl	405458 <__fxstatat@plt+0x2a08>
  4055f8:	add	x19, x19, x0
  4055fc:	ldr	w0, [x21, #32]
  405600:	cbz	w0, 405620 <__fxstatat@plt+0x2bd0>
  405604:	ldr	w2, [x20, #152]
  405608:	ldr	w1, [x20, #40]
  40560c:	ldrb	w0, [x20, #168]
  405610:	bl	402ca0 <__fxstatat@plt+0x250>
  405614:	and	w0, w0, #0xff
  405618:	cmp	w0, #0x0
  40561c:	cinc	x19, x19, ne  // ne = any
  405620:	mov	x0, x19
  405624:	ldp	x19, x20, [sp, #16]
  405628:	ldr	x21, [sp, #32]
  40562c:	ldp	x29, x30, [sp]
  405630:	add	sp, sp, #0x2c0
  405634:	ret
  405638:	ldr	x0, [x20, #160]
  40563c:	bl	402430 <strlen@plt>
  405640:	add	x0, x0, #0x1
  405644:	b	4055dc <__fxstatat@plt+0x2b8c>
  405648:	stp	x29, x30, [sp, #-48]!
  40564c:	mov	x29, sp
  405650:	stp	x19, x20, [sp, #16]
  405654:	stp	x21, x22, [sp, #32]
  405658:	and	w21, w0, #0xff
  40565c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405660:	add	x0, x0, #0x5c8
  405664:	ldr	x1, [x0, #3912]
  405668:	ldr	x19, [x0, #8]
  40566c:	cmp	x19, x1
  405670:	csel	x19, x19, x1, ls  // ls = plast
  405674:	ldr	x0, [x0, #3920]
  405678:	cmp	x19, x0
  40567c:	b.ls	405764 <__fxstatat@plt+0x2d14>  // b.plast
  405680:	cmp	x19, x1, lsr #1
  405684:	b.cs	4057d8 <__fxstatat@plt+0x2d88>  // b.hs, b.nlast
  405688:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40568c:	ldr	x0, [x0, #1312]
  405690:	mov	x1, #0x30                  	// #48
  405694:	mul	x2, x19, x1
  405698:	umulh	x1, x19, x1
  40569c:	cmp	x1, #0x0
  4056a0:	cset	x1, ne  // ne = any
  4056a4:	cmp	x2, #0x0
  4056a8:	csinc	x1, x1, xzr, ge  // ge = tcont
  4056ac:	cbnz	w1, 4057d4 <__fxstatat@plt+0x2d84>
  4056b0:	lsl	x20, x19, #1
  4056b4:	add	x1, x20, x19
  4056b8:	lsl	x1, x1, #4
  4056bc:	bl	412374 <__fxstatat@plt+0xf924>
  4056c0:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4056c4:	str	x0, [x1, #1312]
  4056c8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4056cc:	ldr	x0, [x0, #1304]
  4056d0:	sub	x2, x20, x0
  4056d4:	add	x0, x0, #0x1
  4056d8:	add	x0, x0, x20
  4056dc:	mul	x1, x2, x0
  4056e0:	cmp	x20, x0
  4056e4:	b.hi	405824 <__fxstatat@plt+0x2dd4>  // b.pmore
  4056e8:	udiv	x2, x1, x2
  4056ec:	cmp	x0, x2
  4056f0:	b.ne	405824 <__fxstatat@plt+0x2dd4>  // b.any
  4056f4:	lsr	x0, x1, #1
  4056f8:	cmp	xzr, x1, lsr #62
  4056fc:	cset	x2, ne  // ne = any
  405700:	tst	x1, #0x2000000000000000
  405704:	csinc	w1, w2, wzr, eq  // eq = none
  405708:	cbnz	w1, 405828 <__fxstatat@plt+0x2dd8>
  40570c:	lsl	x0, x0, #3
  405710:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  405714:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  405718:	ldr	x1, [x1, #1304]
  40571c:	cmp	x20, x1
  405720:	b.ls	40575c <__fxstatat@plt+0x2d0c>  // b.plast
  405724:	add	x2, x1, x1, lsl #1
  405728:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  40572c:	ldr	x3, [x3, #1312]
  405730:	add	x2, x3, x2, lsl #3
  405734:	add	x1, x1, #0x1
  405738:	lsl	x1, x1, #3
  40573c:	add	x3, x20, #0x1
  405740:	lsl	x3, x3, #3
  405744:	str	x0, [x2, #16]
  405748:	add	x0, x0, x1
  40574c:	add	x2, x2, #0x18
  405750:	add	x1, x1, #0x8
  405754:	cmp	x1, x3
  405758:	b.ne	405744 <__fxstatat@plt+0x2cf4>  // b.any
  40575c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405760:	str	x20, [x0, #1304]
  405764:	cbz	x19, 4057b8 <__fxstatat@plt+0x2d68>
  405768:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40576c:	ldr	x5, [x0, #1312]
  405770:	mov	x6, #0x3                   	// #3
  405774:	mov	x2, #0x0                   	// #0
  405778:	mov	w7, #0x1                   	// #1
  40577c:	mov	x4, x6
  405780:	mov	x3, x5
  405784:	strb	w7, [x5]
  405788:	str	x6, [x5, #8]
  40578c:	mov	x0, #0x0                   	// #0
  405790:	ldr	x1, [x3, #16]
  405794:	str	x4, [x1, x0, lsl #3]
  405798:	add	x0, x0, #0x1
  40579c:	cmp	x0, x2
  4057a0:	b.ls	405790 <__fxstatat@plt+0x2d40>  // b.plast
  4057a4:	add	x2, x2, #0x1
  4057a8:	add	x5, x5, #0x18
  4057ac:	add	x6, x6, #0x3
  4057b0:	cmp	x19, x2
  4057b4:	b.ne	405780 <__fxstatat@plt+0x2d30>  // b.any
  4057b8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4057bc:	ldr	x0, [x0, #1488]
  4057c0:	cbz	x0, 4058e4 <__fxstatat@plt+0x2e94>
  4057c4:	mov	x20, #0x0                   	// #0
  4057c8:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4057cc:	add	x22, x22, #0x5c8
  4057d0:	b	4058c0 <__fxstatat@plt+0x2e70>
  4057d4:	bl	412584 <__fxstatat@plt+0xfb34>
  4057d8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4057dc:	ldr	x0, [x0, #1312]
  4057e0:	mov	x2, #0x18                  	// #24
  4057e4:	mul	x3, x1, x2
  4057e8:	umulh	x2, x1, x2
  4057ec:	cmp	x2, #0x0
  4057f0:	cset	x2, ne  // ne = any
  4057f4:	cmp	x3, #0x0
  4057f8:	csinc	x2, x2, xzr, ge  // ge = tcont
  4057fc:	cbnz	w2, 405820 <__fxstatat@plt+0x2dd0>
  405800:	add	x1, x1, x1, lsl #1
  405804:	lsl	x1, x1, #3
  405808:	bl	412374 <__fxstatat@plt+0xf924>
  40580c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405810:	add	x1, x1, #0x5c8
  405814:	str	x0, [x1, #3928]
  405818:	ldr	x20, [x1, #3912]
  40581c:	b	4056c8 <__fxstatat@plt+0x2c78>
  405820:	bl	412584 <__fxstatat@plt+0xfb34>
  405824:	bl	412584 <__fxstatat@plt+0xfb34>
  405828:	bl	412584 <__fxstatat@plt+0xfb34>
  40582c:	add	x5, x1, #0x1
  405830:	udiv	x3, x20, x5
  405834:	msub	x3, x3, x5, x20
  405838:	b	40586c <__fxstatat@plt+0x2e1c>
  40583c:	add	x1, x1, #0x1
  405840:	add	x2, x2, #0x18
  405844:	cmp	x19, x1
  405848:	b.eq	4058b0 <__fxstatat@plt+0x2e60>  // b.none
  40584c:	mov	x4, x2
  405850:	ldrb	w3, [x2]
  405854:	cbz	w3, 40583c <__fxstatat@plt+0x2dec>
  405858:	cbz	w21, 40582c <__fxstatat@plt+0x2ddc>
  40585c:	add	x3, x10, x1
  405860:	add	x5, x1, #0x1
  405864:	udiv	x3, x3, x5
  405868:	udiv	x3, x20, x3
  40586c:	cmp	x3, x1
  405870:	cset	x5, ne  // ne = any
  405874:	add	x5, x0, x5, lsl #1
  405878:	ldr	x7, [x4, #16]
  40587c:	ldr	x8, [x7, x3, lsl #3]
  405880:	cmp	x8, x5
  405884:	b.cs	40583c <__fxstatat@plt+0x2dec>  // b.hs, b.nlast
  405888:	ldr	x6, [x4, #8]
  40588c:	sub	x6, x6, x8
  405890:	add	x6, x6, x5
  405894:	str	x6, [x4, #8]
  405898:	str	x5, [x7, x3, lsl #3]
  40589c:	ldr	x3, [x4, #8]
  4058a0:	cmp	x3, x9
  4058a4:	cset	w3, cc  // cc = lo, ul, last
  4058a8:	strb	w3, [x4]
  4058ac:	b	40583c <__fxstatat@plt+0x2dec>
  4058b0:	add	x20, x20, #0x1
  4058b4:	ldr	x0, [x22, #8]
  4058b8:	cmp	x0, x20
  4058bc:	b.ls	4058e4 <__fxstatat@plt+0x2e94>  // b.plast
  4058c0:	ldr	x0, [x22, #24]
  4058c4:	ldr	x0, [x0, x20, lsl #3]
  4058c8:	bl	4054d0 <__fxstatat@plt+0x2a80>
  4058cc:	cbz	x19, 4058b0 <__fxstatat@plt+0x2e60>
  4058d0:	ldr	x10, [x22, #8]
  4058d4:	ldr	x9, [x22, #88]
  4058d8:	ldr	x2, [x22, #3928]
  4058dc:	mov	x1, #0x0                   	// #0
  4058e0:	b	40584c <__fxstatat@plt+0x2dfc>
  4058e4:	cmp	x19, #0x1
  4058e8:	b.ls	405914 <__fxstatat@plt+0x2ec4>  // b.plast
  4058ec:	add	x0, x19, x19, lsl #1
  4058f0:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4058f4:	ldr	x1, [x1, #1312]
  4058f8:	add	x0, x1, x0, lsl #3
  4058fc:	ldurb	w1, [x0, #-24]
  405900:	cbnz	w1, 405914 <__fxstatat@plt+0x2ec4>
  405904:	sub	x19, x19, #0x1
  405908:	sub	x0, x0, #0x18
  40590c:	cmp	x19, #0x1
  405910:	b.ne	4058fc <__fxstatat@plt+0x2eac>  // b.any
  405914:	mov	x0, x19
  405918:	ldp	x19, x20, [sp, #16]
  40591c:	ldp	x21, x22, [sp, #32]
  405920:	ldp	x29, x30, [sp], #48
  405924:	ret
  405928:	stp	x29, x30, [sp, #-240]!
  40592c:	mov	x29, sp
  405930:	stp	x19, x20, [sp, #16]
  405934:	mov	x19, x0
  405938:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40593c:	ldrb	w0, [x0, #1320]
  405940:	cbz	w0, 405968 <__fxstatat@plt+0x2f18>
  405944:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405948:	ldr	x3, [x0, #1456]
  40594c:	mov	x2, #0x1                   	// #1
  405950:	ldr	x1, [x19]
  405954:	ldr	x0, [x19, #8]
  405958:	bl	402410 <fwrite_unlocked@plt>
  40595c:	ldp	x19, x20, [sp, #16]
  405960:	ldp	x29, x30, [sp], #240
  405964:	ret
  405968:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40596c:	mov	w1, #0x1                   	// #1
  405970:	strb	w1, [x0, #1320]
  405974:	mov	w0, #0x1                   	// #1
  405978:	bl	402730 <tcgetpgrp@plt>
  40597c:	tbz	w0, #31, 405988 <__fxstatat@plt+0x2f38>
  405980:	bl	405ac8 <__fxstatat@plt+0x3078>
  405984:	b	405944 <__fxstatat@plt+0x2ef4>
  405988:	stp	x21, x22, [sp, #32]
  40598c:	stp	x23, x24, [sp, #48]
  405990:	str	x25, [sp, #64]
  405994:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405998:	add	x0, x0, #0x5c8
  40599c:	add	x0, x0, #0xf68
  4059a0:	bl	402630 <sigemptyset@plt>
  4059a4:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x4af4>
  4059a8:	add	x23, x23, #0x8
  4059ac:	add	x20, x23, #0x1e0
  4059b0:	add	x23, x23, #0x210
  4059b4:	mov	x21, x20
  4059b8:	adrp	x24, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4059bc:	add	x24, x24, #0x5c8
  4059c0:	add	x24, x24, #0xf68
  4059c4:	b	4059d4 <__fxstatat@plt+0x2f84>
  4059c8:	add	x21, x21, #0x4
  4059cc:	cmp	x23, x21
  4059d0:	b.eq	405a04 <__fxstatat@plt+0x2fb4>  // b.none
  4059d4:	ldr	w22, [x21]
  4059d8:	add	x2, sp, #0x58
  4059dc:	mov	x1, #0x0                   	// #0
  4059e0:	mov	w0, w22
  4059e4:	bl	402710 <sigaction@plt>
  4059e8:	ldr	x0, [sp, #88]
  4059ec:	cmp	x0, #0x1
  4059f0:	b.eq	4059c8 <__fxstatat@plt+0x2f78>  // b.none
  4059f4:	mov	w1, w22
  4059f8:	mov	x0, x24
  4059fc:	bl	4029b0 <sigaddset@plt>
  405a00:	b	4059c8 <__fxstatat@plt+0x2f78>
  405a04:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405a08:	add	x0, x0, #0x5c8
  405a0c:	add	x0, x0, #0xf68
  405a10:	ldp	x2, x3, [x0]
  405a14:	stp	x2, x3, [sp, #96]
  405a18:	ldp	x2, x3, [x0, #16]
  405a1c:	stp	x2, x3, [sp, #112]
  405a20:	ldp	x2, x3, [x0, #32]
  405a24:	stp	x2, x3, [sp, #128]
  405a28:	ldp	x2, x3, [x0, #48]
  405a2c:	stp	x2, x3, [sp, #144]
  405a30:	ldp	x2, x3, [x0, #64]
  405a34:	stp	x2, x3, [sp, #160]
  405a38:	ldp	x2, x3, [x0, #80]
  405a3c:	stp	x2, x3, [sp, #176]
  405a40:	ldp	x2, x3, [x0, #96]
  405a44:	stp	x2, x3, [sp, #192]
  405a48:	ldp	x0, x1, [x0, #112]
  405a4c:	stp	x0, x1, [sp, #208]
  405a50:	mov	w0, #0x10000000            	// #268435456
  405a54:	str	w0, [sp, #224]
  405a58:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405a5c:	add	x22, x22, #0x5c8
  405a60:	add	x22, x22, #0xf68
  405a64:	adrp	x25, 402000 <mbrtowc@plt-0x3b0>
  405a68:	add	x25, x25, #0xbec
  405a6c:	adrp	x24, 402000 <mbrtowc@plt-0x3b0>
  405a70:	add	x24, x24, #0xc04
  405a74:	b	405a84 <__fxstatat@plt+0x3034>
  405a78:	add	x20, x20, #0x4
  405a7c:	cmp	x20, x23
  405a80:	b.eq	405ab8 <__fxstatat@plt+0x3068>  // b.none
  405a84:	ldr	w21, [x20]
  405a88:	mov	w1, w21
  405a8c:	mov	x0, x22
  405a90:	bl	4027f0 <sigismember@plt>
  405a94:	cbz	w0, 405a78 <__fxstatat@plt+0x3028>
  405a98:	cmp	w21, #0x14
  405a9c:	csel	x0, x24, x25, eq  // eq = none
  405aa0:	str	x0, [sp, #88]
  405aa4:	mov	x2, #0x0                   	// #0
  405aa8:	add	x1, sp, #0x58
  405aac:	mov	w0, w21
  405ab0:	bl	402710 <sigaction@plt>
  405ab4:	b	405a78 <__fxstatat@plt+0x3028>
  405ab8:	ldp	x21, x22, [sp, #32]
  405abc:	ldp	x23, x24, [sp, #48]
  405ac0:	ldr	x25, [sp, #64]
  405ac4:	b	405980 <__fxstatat@plt+0x2f30>
  405ac8:	stp	x29, x30, [sp, #-32]!
  405acc:	mov	x29, sp
  405ad0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405ad4:	ldr	x0, [x0, #912]
  405ad8:	cbz	x0, 405af4 <__fxstatat@plt+0x30a4>
  405adc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405ae0:	add	x0, x0, #0x368
  405ae4:	add	x0, x0, #0x20
  405ae8:	bl	405928 <__fxstatat@plt+0x2ed8>
  405aec:	ldp	x29, x30, [sp], #32
  405af0:	ret
  405af4:	str	x19, [sp, #16]
  405af8:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405afc:	add	x19, x19, #0x368
  405b00:	mov	x0, x19
  405b04:	bl	405928 <__fxstatat@plt+0x2ed8>
  405b08:	add	x0, x19, #0x30
  405b0c:	bl	405928 <__fxstatat@plt+0x2ed8>
  405b10:	add	x0, x19, #0x10
  405b14:	bl	405928 <__fxstatat@plt+0x2ed8>
  405b18:	ldr	x19, [sp, #16]
  405b1c:	b	405aec <__fxstatat@plt+0x309c>
  405b20:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405b24:	ldrb	w0, [x0, #859]
  405b28:	cbz	w0, 405b78 <__fxstatat@plt+0x3128>
  405b2c:	stp	x29, x30, [sp, #-32]!
  405b30:	mov	x29, sp
  405b34:	mov	w0, #0x4                   	// #4
  405b38:	bl	4033a4 <__fxstatat@plt+0x954>
  405b3c:	and	w0, w0, #0xff
  405b40:	cbnz	w0, 405b4c <__fxstatat@plt+0x30fc>
  405b44:	ldp	x29, x30, [sp], #32
  405b48:	ret
  405b4c:	str	x19, [sp, #16]
  405b50:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405b54:	add	x19, x19, #0x368
  405b58:	mov	x0, x19
  405b5c:	bl	405928 <__fxstatat@plt+0x2ed8>
  405b60:	add	x0, x19, #0x40
  405b64:	bl	405928 <__fxstatat@plt+0x2ed8>
  405b68:	add	x0, x19, #0x10
  405b6c:	bl	405928 <__fxstatat@plt+0x2ed8>
  405b70:	ldr	x19, [sp, #16]
  405b74:	b	405b44 <__fxstatat@plt+0x30f4>
  405b78:	ret
  405b7c:	stp	x29, x30, [sp, #-32]!
  405b80:	mov	x29, sp
  405b84:	str	x19, [sp, #16]
  405b88:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405b8c:	add	x19, x19, #0x368
  405b90:	mov	x0, x19
  405b94:	bl	405928 <__fxstatat@plt+0x2ed8>
  405b98:	add	x0, x19, #0x10
  405b9c:	bl	405928 <__fxstatat@plt+0x2ed8>
  405ba0:	ldr	x19, [sp, #16]
  405ba4:	ldp	x29, x30, [sp], #32
  405ba8:	ret
  405bac:	stp	x29, x30, [sp, #-192]!
  405bb0:	mov	x29, sp
  405bb4:	stp	x19, x20, [sp, #16]
  405bb8:	stp	x21, x22, [sp, #32]
  405bbc:	str	x23, [sp, #48]
  405bc0:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405bc4:	add	x19, x19, #0x5c8
  405bc8:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405bcc:	add	x21, x19, #0xf68
  405bd0:	mov	w23, #0x13                  	// #19
  405bd4:	b	405c28 <__fxstatat@plt+0x31d8>
  405bd8:	ldrb	w0, [x19, #3936]
  405bdc:	cbnz	w0, 405c4c <__fxstatat@plt+0x31fc>
  405be0:	ldr	x0, [x22, #1456]
  405be4:	bl	4028b0 <fflush_unlocked@plt>
  405be8:	add	x2, sp, #0x40
  405bec:	mov	x1, x21
  405bf0:	mov	w0, #0x0                   	// #0
  405bf4:	bl	4024a0 <sigprocmask@plt>
  405bf8:	ldr	w20, [x19]
  405bfc:	ldr	w0, [x19, #4]
  405c00:	cbz	w0, 405c54 <__fxstatat@plt+0x3204>
  405c04:	sub	w0, w0, #0x1
  405c08:	str	w0, [x19, #4]
  405c0c:	mov	w20, w23
  405c10:	mov	w0, w20
  405c14:	bl	402480 <raise@plt>
  405c18:	mov	x2, #0x0                   	// #0
  405c1c:	add	x1, sp, #0x40
  405c20:	mov	w0, #0x2                   	// #2
  405c24:	bl	4024a0 <sigprocmask@plt>
  405c28:	ldr	w0, [x19]
  405c2c:	cbnz	w0, 405bd8 <__fxstatat@plt+0x3188>
  405c30:	ldr	w0, [x19, #4]
  405c34:	cbnz	w0, 405bd8 <__fxstatat@plt+0x3188>
  405c38:	ldp	x19, x20, [sp, #16]
  405c3c:	ldp	x21, x22, [sp, #32]
  405c40:	ldr	x23, [sp, #48]
  405c44:	ldp	x29, x30, [sp], #192
  405c48:	ret
  405c4c:	bl	405b7c <__fxstatat@plt+0x312c>
  405c50:	b	405be0 <__fxstatat@plt+0x3190>
  405c54:	mov	x1, #0x0                   	// #0
  405c58:	mov	w0, w20
  405c5c:	bl	4025b0 <signal@plt>
  405c60:	b	405c10 <__fxstatat@plt+0x31c0>
  405c64:	stp	x29, x30, [sp, #-64]!
  405c68:	mov	x29, sp
  405c6c:	stp	x19, x20, [sp, #16]
  405c70:	stp	x21, x22, [sp, #32]
  405c74:	ldr	x3, [x1, #24]
  405c78:	ldr	x21, [x1, #16]
  405c7c:	sub	x20, x3, x21
  405c80:	cmp	x20, #0x7
  405c84:	b.ls	405d28 <__fxstatat@plt+0x32d8>  // b.plast
  405c88:	str	x23, [sp, #48]
  405c8c:	cmp	x3, x21
  405c90:	b.eq	405d38 <__fxstatat@plt+0x32e8>  // b.none
  405c94:	ldr	x2, [x1, #48]
  405c98:	add	x3, x3, x2
  405c9c:	bic	x2, x3, x2
  405ca0:	ldr	x3, [x1, #8]
  405ca4:	ldr	x4, [x1, #32]
  405ca8:	sub	x5, x2, x3
  405cac:	sub	x3, x4, x3
  405cb0:	cmp	x5, x3
  405cb4:	csel	x2, x2, x4, ls  // ls = plast
  405cb8:	str	x2, [x1, #24]
  405cbc:	str	x2, [x1, #16]
  405cc0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405cc4:	ldr	x1, [x1, #1456]
  405cc8:	bl	402980 <fputs_unlocked@plt>
  405ccc:	lsr	x20, x20, #3
  405cd0:	mov	x19, #0x0                   	// #0
  405cd4:	adrp	x22, 415000 <_obstack_memory_used@@Base+0x1af4>
  405cd8:	add	x22, x22, #0x4f0
  405cdc:	mov	w23, #0x1                   	// #1
  405ce0:	ldr	x2, [x21, x19, lsl #3]
  405ce4:	mov	x1, x22
  405ce8:	mov	w0, w23
  405cec:	bl	402670 <__printf_chk@plt>
  405cf0:	add	x19, x19, #0x1
  405cf4:	cmp	x20, x19
  405cf8:	b.hi	405ce0 <__fxstatat@plt+0x3290>  // b.pmore
  405cfc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405d00:	ldr	x0, [x0, #1456]
  405d04:	ldr	x1, [x0, #40]
  405d08:	ldr	x2, [x0, #48]
  405d0c:	cmp	x1, x2
  405d10:	b.cs	405d48 <__fxstatat@plt+0x32f8>  // b.hs, b.nlast
  405d14:	add	x2, x1, #0x1
  405d18:	str	x2, [x0, #40]
  405d1c:	mov	w0, #0xa                   	// #10
  405d20:	strb	w0, [x1]
  405d24:	ldr	x23, [sp, #48]
  405d28:	ldp	x19, x20, [sp, #16]
  405d2c:	ldp	x21, x22, [sp, #32]
  405d30:	ldp	x29, x30, [sp], #64
  405d34:	ret
  405d38:	ldrb	w2, [x1, #80]
  405d3c:	orr	w2, w2, #0x2
  405d40:	strb	w2, [x1, #80]
  405d44:	b	405c94 <__fxstatat@plt+0x3244>
  405d48:	mov	w1, #0xa                   	// #10
  405d4c:	bl	402780 <__overflow@plt>
  405d50:	ldr	x23, [sp, #48]
  405d54:	b	405d28 <__fxstatat@plt+0x32d8>
  405d58:	stp	x29, x30, [sp, #-64]!
  405d5c:	mov	x29, sp
  405d60:	stp	x19, x20, [sp, #16]
  405d64:	stp	x21, x22, [sp, #32]
  405d68:	mov	w19, w2
  405d6c:	cbz	x0, 405e14 <__fxstatat@plt+0x33c4>
  405d70:	str	x23, [sp, #48]
  405d74:	mov	x20, x0
  405d78:	mov	w1, #0x0                   	// #0
  405d7c:	bl	40e56c <__fxstatat@plt+0xbb1c>
  405d80:	subs	w19, w19, w0
  405d84:	csel	w19, w19, wzr, pl  // pl = nfrst
  405d88:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405d8c:	ldr	x1, [x0, #1456]
  405d90:	mov	x0, x20
  405d94:	bl	402980 <fputs_unlocked@plt>
  405d98:	mov	x0, x20
  405d9c:	bl	402430 <strlen@plt>
  405da0:	add	x22, x0, w19, sxtw
  405da4:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405da8:	mov	w21, #0x20                  	// #32
  405dac:	mov	w23, #0x20                  	// #32
  405db0:	ldr	x0, [x20, #1456]
  405db4:	ldr	x1, [x0, #40]
  405db8:	ldr	x2, [x0, #48]
  405dbc:	cmp	x1, x2
  405dc0:	b.cs	405e08 <__fxstatat@plt+0x33b8>  // b.hs, b.nlast
  405dc4:	add	x2, x1, #0x1
  405dc8:	str	x2, [x0, #40]
  405dcc:	strb	w21, [x1]
  405dd0:	sub	w19, w19, #0x1
  405dd4:	cmn	w19, #0x1
  405dd8:	b.ne	405db0 <__fxstatat@plt+0x3360>  // b.any
  405ddc:	ldr	x23, [sp, #48]
  405de0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405de4:	add	x0, x0, #0x5c8
  405de8:	ldr	x19, [x0, #3888]
  405dec:	add	x19, x19, #0x1
  405df0:	add	x19, x19, x22
  405df4:	str	x19, [x0, #3888]
  405df8:	ldp	x19, x20, [sp, #16]
  405dfc:	ldp	x21, x22, [sp, #32]
  405e00:	ldp	x29, x30, [sp], #64
  405e04:	ret
  405e08:	mov	w1, w23
  405e0c:	bl	402780 <__overflow@plt>
  405e10:	b	405dd0 <__fxstatat@plt+0x3380>
  405e14:	mov	x3, x1
  405e18:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  405e1c:	add	x1, x1, #0x4f8
  405e20:	mov	w0, #0x1                   	// #1
  405e24:	bl	402670 <__printf_chk@plt>
  405e28:	sxtw	x22, w19
  405e2c:	b	405de0 <__fxstatat@plt+0x3390>
  405e30:	stp	x29, x30, [sp, #-32]!
  405e34:	mov	x29, sp
  405e38:	stp	x19, x20, [sp, #16]
  405e3c:	mov	w19, w0
  405e40:	mov	w20, w1
  405e44:	tst	w2, #0xff
  405e48:	b.eq	405e68 <__fxstatat@plt+0x3418>  // b.none
  405e4c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405e50:	ldrb	w1, [x0, #840]
  405e54:	mov	x0, #0x0                   	// #0
  405e58:	cbnz	w1, 405e70 <__fxstatat@plt+0x3420>
  405e5c:	mov	w0, w19
  405e60:	bl	40db78 <__fxstatat@plt+0xb128>
  405e64:	b	405e70 <__fxstatat@plt+0x3420>
  405e68:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  405e6c:	add	x0, x0, #0x4e8
  405e70:	mov	w2, w20
  405e74:	mov	w1, w19
  405e78:	bl	405d58 <__fxstatat@plt+0x3308>
  405e7c:	ldp	x19, x20, [sp, #16]
  405e80:	ldp	x29, x30, [sp], #32
  405e84:	ret
  405e88:	mov	x12, #0x2060                	// #8288
  405e8c:	sub	sp, sp, x12
  405e90:	stp	x29, x30, [sp]
  405e94:	mov	x29, sp
  405e98:	stp	x19, x20, [sp, #16]
  405e9c:	stp	x21, x22, [sp, #32]
  405ea0:	stp	x23, x24, [sp, #48]
  405ea4:	mov	x23, x0
  405ea8:	mov	x21, x3
  405eac:	and	w24, w4, #0xff
  405eb0:	mov	x19, x5
  405eb4:	mov	x22, x6
  405eb8:	add	x0, sp, #0x60
  405ebc:	str	x0, [sp, #88]
  405ec0:	add	x6, sp, #0x57
  405ec4:	mov	x5, #0x0                   	// #0
  405ec8:	mov	w4, w2
  405ecc:	mov	x3, x1
  405ed0:	mov	x2, x23
  405ed4:	mov	x1, #0x2000                	// #8192
  405ed8:	add	x0, sp, #0x58
  405edc:	bl	40504c <__fxstatat@plt+0x25fc>
  405ee0:	mov	x20, x0
  405ee4:	ldrb	w0, [sp, #87]
  405ee8:	tst	w24, w0
  405eec:	b.ne	405f80 <__fxstatat@plt+0x3530>  // b.any
  405ef0:	cbz	x21, 405f24 <__fxstatat@plt+0x34d4>
  405ef4:	mov	w0, #0x4                   	// #4
  405ef8:	bl	4033a4 <__fxstatat@plt+0x954>
  405efc:	and	w0, w0, #0xff
  405f00:	cbnz	w0, 405fcc <__fxstatat@plt+0x357c>
  405f04:	adrp	x24, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405f08:	add	x24, x24, #0x368
  405f0c:	mov	x0, x24
  405f10:	bl	405928 <__fxstatat@plt+0x2ed8>
  405f14:	mov	x0, x21
  405f18:	bl	405928 <__fxstatat@plt+0x2ed8>
  405f1c:	add	x0, x24, #0x10
  405f20:	bl	405928 <__fxstatat@plt+0x2ed8>
  405f24:	mov	w21, #0x0                   	// #0
  405f28:	cbz	x22, 40604c <__fxstatat@plt+0x35fc>
  405f2c:	str	x25, [sp, #64]
  405f30:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405f34:	ldrb	w21, [x0, #856]
  405f38:	cbz	w21, 405fe0 <__fxstatat@plt+0x3590>
  405f3c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405f40:	ldrb	w21, [x0, #1516]
  405f44:	cbz	w21, 405fe0 <__fxstatat@plt+0x3590>
  405f48:	ldrb	w0, [sp, #87]
  405f4c:	cbnz	w0, 405fdc <__fxstatat@plt+0x358c>
  405f50:	ldr	x0, [sp, #88]
  405f54:	ldrb	w1, [x0]
  405f58:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405f5c:	ldr	x0, [x0, #1456]
  405f60:	ldr	x2, [x0, #40]
  405f64:	ldr	x3, [x0, #48]
  405f68:	cmp	x2, x3
  405f6c:	b.cs	405fd4 <__fxstatat@plt+0x3584>  // b.hs, b.nlast
  405f70:	add	x3, x2, #0x1
  405f74:	str	x3, [x0, #40]
  405f78:	strb	w1, [x2]
  405f7c:	b	405fe0 <__fxstatat@plt+0x3590>
  405f80:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405f84:	ldr	x0, [x0, #1456]
  405f88:	ldr	x1, [x0, #40]
  405f8c:	ldr	x2, [x0, #48]
  405f90:	cmp	x1, x2
  405f94:	b.cs	405fc0 <__fxstatat@plt+0x3570>  // b.hs, b.nlast
  405f98:	add	x2, x1, #0x1
  405f9c:	str	x2, [x0, #40]
  405fa0:	mov	w0, #0x20                  	// #32
  405fa4:	strb	w0, [x1]
  405fa8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  405fac:	add	x0, x0, #0x5c8
  405fb0:	ldr	x1, [x0, #3888]
  405fb4:	add	x1, x1, #0x1
  405fb8:	str	x1, [x0, #3888]
  405fbc:	b	405ef0 <__fxstatat@plt+0x34a0>
  405fc0:	mov	w1, #0x20                  	// #32
  405fc4:	bl	402780 <__overflow@plt>
  405fc8:	b	405fa8 <__fxstatat@plt+0x3558>
  405fcc:	bl	405b7c <__fxstatat@plt+0x312c>
  405fd0:	b	405f04 <__fxstatat@plt+0x34b4>
  405fd4:	bl	402780 <__overflow@plt>
  405fd8:	b	405fe0 <__fxstatat@plt+0x3590>
  405fdc:	mov	w21, #0x0                   	// #0
  405fe0:	mov	w1, #0x0                   	// #0
  405fe4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405fe8:	ldr	x0, [x0, #1456]
  405fec:	bl	403adc <__fxstatat@plt+0x108c>
  405ff0:	mov	x25, x0
  405ff4:	mov	w1, #0x1                   	// #1
  405ff8:	mov	x0, x22
  405ffc:	bl	403adc <__fxstatat@plt+0x108c>
  406000:	mov	x24, x0
  406004:	ldrb	w1, [x0]
  406008:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40600c:	add	x0, x0, #0x8f8
  406010:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x2af4>
  406014:	add	x3, x3, #0x1f0
  406018:	cmp	w1, #0x2f
  40601c:	mov	x4, x24
  406020:	csel	x3, x3, x0, eq  // eq = none
  406024:	mov	x2, x25
  406028:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  40602c:	add	x1, x1, #0x500
  406030:	mov	w0, #0x1                   	// #1
  406034:	bl	402670 <__printf_chk@plt>
  406038:	mov	x0, x25
  40603c:	bl	402840 <free@plt>
  406040:	mov	x0, x24
  406044:	bl	402840 <free@plt>
  406048:	ldr	x25, [sp, #64]
  40604c:	cbz	x19, 4061b0 <__fxstatat@plt+0x3760>
  406050:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406054:	ldrb	w0, [x0, #1464]
  406058:	cbz	w0, 40608c <__fxstatat@plt+0x363c>
  40605c:	ldr	x0, [x19, #32]
  406060:	ldr	x1, [x19, #24]
  406064:	sub	x0, x0, x1
  406068:	cmp	x0, #0x7
  40606c:	b.ls	406180 <__fxstatat@plt+0x3730>  // b.plast
  406070:	ldr	x0, [x19, #24]
  406074:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  406078:	ldr	x1, [x1, #1272]
  40607c:	str	x1, [x0]
  406080:	ldr	x0, [x19, #24]
  406084:	add	x0, x0, #0x8
  406088:	str	x0, [x19, #24]
  40608c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  406090:	ldr	x3, [x0, #1456]
  406094:	sub	x2, x20, w21, uxtb #1
  406098:	mov	x1, #0x1                   	// #1
  40609c:	ldr	x0, [sp, #88]
  4060a0:	add	x0, x0, w21, uxtb
  4060a4:	bl	402410 <fwrite_unlocked@plt>
  4060a8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4060ac:	add	x0, x0, #0x5c8
  4060b0:	ldr	x1, [x0, #3888]
  4060b4:	add	x1, x1, x20
  4060b8:	str	x1, [x0, #3888]
  4060bc:	ldrb	w0, [x0, #4080]
  4060c0:	cbz	w0, 4060f4 <__fxstatat@plt+0x36a4>
  4060c4:	ldr	x0, [x19, #32]
  4060c8:	ldr	x1, [x19, #24]
  4060cc:	sub	x0, x0, x1
  4060d0:	cmp	x0, #0x7
  4060d4:	b.ls	406190 <__fxstatat@plt+0x3740>  // b.plast
  4060d8:	ldr	x0, [x19, #24]
  4060dc:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4060e0:	ldr	x1, [x1, #1272]
  4060e4:	str	x1, [x0]
  4060e8:	ldr	x0, [x19, #24]
  4060ec:	add	x0, x0, #0x8
  4060f0:	str	x0, [x19, #24]
  4060f4:	cbz	x22, 406148 <__fxstatat@plt+0x36f8>
  4060f8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4060fc:	ldr	x3, [x0, #1456]
  406100:	mov	x2, #0x6                   	// #6
  406104:	mov	x1, #0x1                   	// #1
  406108:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  40610c:	add	x0, x0, #0x518
  406110:	bl	402410 <fwrite_unlocked@plt>
  406114:	cbz	w21, 406148 <__fxstatat@plt+0x36f8>
  406118:	ldr	x0, [sp, #88]
  40611c:	add	x0, x0, x20
  406120:	ldurb	w1, [x0, #-1]
  406124:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  406128:	ldr	x0, [x0, #1456]
  40612c:	ldr	x2, [x0, #40]
  406130:	ldr	x3, [x0, #48]
  406134:	cmp	x2, x3
  406138:	b.cs	4061a0 <__fxstatat@plt+0x3750>  // b.hs, b.nlast
  40613c:	add	x3, x2, #0x1
  406140:	str	x3, [x0, #40]
  406144:	strb	w1, [x2]
  406148:	ldr	x0, [sp, #88]
  40614c:	add	x1, sp, #0x60
  406150:	cmp	x1, x0
  406154:	ccmp	x0, x23, #0x4, ne  // ne = any
  406158:	b.ne	4061a8 <__fxstatat@plt+0x3758>  // b.any
  40615c:	ldrb	w0, [sp, #87]
  406160:	add	x0, x0, x20
  406164:	ldp	x19, x20, [sp, #16]
  406168:	ldp	x21, x22, [sp, #32]
  40616c:	ldp	x23, x24, [sp, #48]
  406170:	ldp	x29, x30, [sp]
  406174:	mov	x12, #0x2060                	// #8288
  406178:	add	sp, sp, x12
  40617c:	ret
  406180:	mov	x1, #0x8                   	// #8
  406184:	mov	x0, x19
  406188:	bl	41333c <_obstack_newchunk@@Base>
  40618c:	b	406070 <__fxstatat@plt+0x3620>
  406190:	mov	x1, #0x8                   	// #8
  406194:	mov	x0, x19
  406198:	bl	41333c <_obstack_newchunk@@Base>
  40619c:	b	4060d8 <__fxstatat@plt+0x3688>
  4061a0:	bl	402780 <__overflow@plt>
  4061a4:	b	406148 <__fxstatat@plt+0x36f8>
  4061a8:	bl	402840 <free@plt>
  4061ac:	b	40615c <__fxstatat@plt+0x370c>
  4061b0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4061b4:	ldr	x3, [x0, #1456]
  4061b8:	sub	x2, x20, w21, uxtb #1
  4061bc:	mov	x1, #0x1                   	// #1
  4061c0:	ldr	x0, [sp, #88]
  4061c4:	add	x0, x0, w21, uxtb
  4061c8:	bl	402410 <fwrite_unlocked@plt>
  4061cc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4061d0:	add	x0, x0, #0x5c8
  4061d4:	ldr	x1, [x0, #3888]
  4061d8:	add	x1, x1, x20
  4061dc:	str	x1, [x0, #3888]
  4061e0:	b	4060f4 <__fxstatat@plt+0x36a4>
  4061e4:	stp	x29, x30, [sp, #-80]!
  4061e8:	mov	x29, sp
  4061ec:	stp	x19, x20, [sp, #16]
  4061f0:	stp	x21, x22, [sp, #32]
  4061f4:	stp	x23, x24, [sp, #48]
  4061f8:	mov	x19, x0
  4061fc:	mov	x22, x2
  406200:	mov	x21, x3
  406204:	ands	w24, w1, #0xff
  406208:	b.eq	406260 <__fxstatat@plt+0x3810>  // b.none
  40620c:	ldr	x23, [x0, #8]
  406210:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406214:	ldrb	w0, [x0, #859]
  406218:	cbnz	w0, 406290 <__fxstatat@plt+0x3840>
  40621c:	ldr	x6, [x19, #16]
  406220:	mov	x5, x22
  406224:	eor	w4, w24, #0x1
  406228:	mov	x3, #0x0                   	// #0
  40622c:	ldr	w2, [x19, #180]
  406230:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406234:	ldr	x1, [x0, #576]
  406238:	mov	x0, x23
  40623c:	bl	405e88 <__fxstatat@plt+0x3438>
  406240:	mov	x19, x0
  406244:	bl	405bac <__fxstatat@plt+0x315c>
  406248:	mov	x0, x19
  40624c:	ldp	x19, x20, [sp, #16]
  406250:	ldp	x21, x22, [sp, #32]
  406254:	ldp	x23, x24, [sp, #48]
  406258:	ldp	x29, x30, [sp], #80
  40625c:	ret
  406260:	ldr	x23, [x0]
  406264:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406268:	ldrb	w0, [x0, #859]
  40626c:	cbz	w0, 40621c <__fxstatat@plt+0x37cc>
  406270:	str	x25, [sp, #64]
  406274:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406278:	ldrb	w0, [x0, #868]
  40627c:	cbz	w0, 4062c0 <__fxstatat@plt+0x3870>
  406280:	ldrb	w0, [x19, #169]
  406284:	cbz	w0, 4062c0 <__fxstatat@plt+0x3870>
  406288:	ldr	w25, [x19, #156]
  40628c:	b	4062c4 <__fxstatat@plt+0x3874>
  406290:	str	x25, [sp, #64]
  406294:	ldr	w25, [x19, #156]
  406298:	ldrb	w0, [x19, #169]
  40629c:	eor	w20, w0, #0x1
  4062a0:	neg	w20, w20
  4062a4:	cbnz	w0, 4062c8 <__fxstatat@plt+0x3878>
  4062a8:	mov	w0, #0xc                   	// #12
  4062ac:	bl	4033a4 <__fxstatat@plt+0x954>
  4062b0:	and	w0, w0, #0xff
  4062b4:	cbz	w0, 4062c8 <__fxstatat@plt+0x3878>
  4062b8:	mov	w3, #0xc                   	// #12
  4062bc:	b	406320 <__fxstatat@plt+0x38d0>
  4062c0:	ldr	w25, [x19, #40]
  4062c4:	ldrb	w20, [x19, #169]
  4062c8:	ldrb	w0, [x19, #168]
  4062cc:	cbnz	w0, 406334 <__fxstatat@plt+0x38e4>
  4062d0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x4af4>
  4062d4:	add	x0, x0, #0x8
  4062d8:	add	x0, x0, #0x210
  4062dc:	ldr	w1, [x19, #152]
  4062e0:	ldr	w3, [x0, x1, lsl #2]
  4062e4:	cmp	w3, #0x5
  4062e8:	b.eq	406400 <__fxstatat@plt+0x39b0>  // b.none
  4062ec:	cmp	w20, #0x0
  4062f0:	ccmp	w3, #0x7, #0x0, eq  // eq = none
  4062f4:	b.ne	406320 <__fxstatat@plt+0x38d0>  // b.any
  4062f8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4062fc:	ldrb	w0, [x0, #868]
  406300:	mov	w3, #0xd                   	// #13
  406304:	cbnz	w0, 406320 <__fxstatat@plt+0x38d0>
  406308:	mov	w0, w3
  40630c:	bl	4033a4 <__fxstatat@plt+0x954>
  406310:	ands	w0, w0, #0xff
  406314:	mov	w3, #0x7                   	// #7
  406318:	mov	w0, #0xd                   	// #13
  40631c:	csel	w3, w3, w0, eq  // eq = none
  406320:	ubfiz	x3, x3, #4, #32
  406324:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  406328:	add	x20, x20, #0x368
  40632c:	add	x3, x20, x3
  406330:	b	4064b0 <__fxstatat@plt+0x3a60>
  406334:	and	w0, w25, #0xf000
  406338:	cmp	w0, #0x8, lsl #12
  40633c:	b.eq	406388 <__fxstatat@plt+0x3938>  // b.none
  406340:	cmp	w0, #0x4, lsl #12
  406344:	b.eq	406420 <__fxstatat@plt+0x39d0>  // b.none
  406348:	cmp	w0, #0xa, lsl #12
  40634c:	b.eq	406574 <__fxstatat@plt+0x3b24>  // b.none
  406350:	mov	w3, #0x8                   	// #8
  406354:	cmp	w0, #0x1, lsl #12
  406358:	b.eq	406320 <__fxstatat@plt+0x38d0>  // b.none
  40635c:	mov	w3, #0x9                   	// #9
  406360:	cmp	w0, #0xc, lsl #12
  406364:	b.eq	406320 <__fxstatat@plt+0x38d0>  // b.none
  406368:	mov	w3, #0xa                   	// #10
  40636c:	cmp	w0, #0x6, lsl #12
  406370:	b.eq	406320 <__fxstatat@plt+0x38d0>  // b.none
  406374:	cmp	w0, #0x2, lsl #12
  406378:	mov	w3, #0xb                   	// #11
  40637c:	mov	w0, #0xd                   	// #13
  406380:	csel	w3, w3, w0, eq  // eq = none
  406384:	b	406320 <__fxstatat@plt+0x38d0>
  406388:	tbz	w25, #11, 40639c <__fxstatat@plt+0x394c>
  40638c:	mov	w0, #0x10                  	// #16
  406390:	bl	4033a4 <__fxstatat@plt+0x954>
  406394:	and	w0, w0, #0xff
  406398:	cbnz	w0, 40657c <__fxstatat@plt+0x3b2c>
  40639c:	tbz	w25, #10, 4063b0 <__fxstatat@plt+0x3960>
  4063a0:	mov	w0, #0x11                  	// #17
  4063a4:	bl	4033a4 <__fxstatat@plt+0x954>
  4063a8:	and	w0, w0, #0xff
  4063ac:	cbnz	w0, 406584 <__fxstatat@plt+0x3b34>
  4063b0:	mov	w0, #0x15                  	// #21
  4063b4:	bl	4033a4 <__fxstatat@plt+0x954>
  4063b8:	and	w0, w0, #0xff
  4063bc:	cbz	w0, 4063c8 <__fxstatat@plt+0x3978>
  4063c0:	ldrb	w0, [x19, #176]
  4063c4:	cbnz	w0, 40658c <__fxstatat@plt+0x3b3c>
  4063c8:	mov	w0, #0x49                  	// #73
  4063cc:	tst	w25, w0
  4063d0:	b.eq	4063e4 <__fxstatat@plt+0x3994>  // b.none
  4063d4:	mov	w0, #0xe                   	// #14
  4063d8:	bl	4033a4 <__fxstatat@plt+0x954>
  4063dc:	and	w0, w0, #0xff
  4063e0:	cbnz	w0, 406594 <__fxstatat@plt+0x3b44>
  4063e4:	ldr	w0, [x19, #44]
  4063e8:	cmp	w0, #0x1
  4063ec:	b.ls	406400 <__fxstatat@plt+0x39b0>  // b.plast
  4063f0:	mov	w0, #0x16                  	// #22
  4063f4:	bl	4033a4 <__fxstatat@plt+0x954>
  4063f8:	and	w0, w0, #0xff
  4063fc:	cbnz	w0, 40659c <__fxstatat@plt+0x3b4c>
  406400:	mov	x0, x23
  406404:	bl	402430 <strlen@plt>
  406408:	mov	x25, x0
  40640c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406410:	ldr	x20, [x0, #1472]
  406414:	cbnz	x20, 40648c <__fxstatat@plt+0x3a3c>
  406418:	mov	w3, #0x5                   	// #5
  40641c:	b	406320 <__fxstatat@plt+0x38d0>
  406420:	mov	w0, #0x202                 	// #514
  406424:	and	w0, w25, w0
  406428:	cmp	w0, #0x202
  40642c:	b.eq	40646c <__fxstatat@plt+0x3a1c>  // b.none
  406430:	tbz	w25, #1, 406448 <__fxstatat@plt+0x39f8>
  406434:	mov	w0, #0x13                  	// #19
  406438:	bl	4033a4 <__fxstatat@plt+0x954>
  40643c:	and	w0, w0, #0xff
  406440:	mov	w3, #0x13                  	// #19
  406444:	cbnz	w0, 406320 <__fxstatat@plt+0x38d0>
  406448:	mov	w3, #0x6                   	// #6
  40644c:	tbz	w25, #9, 406320 <__fxstatat@plt+0x38d0>
  406450:	mov	w0, #0x12                  	// #18
  406454:	bl	4033a4 <__fxstatat@plt+0x954>
  406458:	ands	w0, w0, #0xff
  40645c:	mov	w3, #0x12                  	// #18
  406460:	mov	w0, #0x6                   	// #6
  406464:	csel	w3, w3, w0, ne  // ne = any
  406468:	b	406320 <__fxstatat@plt+0x38d0>
  40646c:	mov	w0, #0x14                  	// #20
  406470:	bl	4033a4 <__fxstatat@plt+0x954>
  406474:	and	w0, w0, #0xff
  406478:	mov	w3, #0x14                  	// #20
  40647c:	cbnz	w0, 406320 <__fxstatat@plt+0x38d0>
  406480:	b	406430 <__fxstatat@plt+0x39e0>
  406484:	ldr	x20, [x20, #32]
  406488:	cbz	x20, 406510 <__fxstatat@plt+0x3ac0>
  40648c:	ldr	x2, [x20]
  406490:	cmp	x25, x2
  406494:	b.cc	406484 <__fxstatat@plt+0x3a34>  // b.lo, b.ul, b.last
  406498:	sub	x0, x25, x2
  40649c:	ldr	x1, [x20, #8]
  4064a0:	add	x0, x23, x0
  4064a4:	bl	40b0c8 <__fxstatat@plt+0x8678>
  4064a8:	cbnz	w0, 406484 <__fxstatat@plt+0x3a34>
  4064ac:	add	x3, x20, #0x10
  4064b0:	ldr	x0, [x3, #8]
  4064b4:	cbz	x0, 406530 <__fxstatat@plt+0x3ae0>
  4064b8:	ldr	x6, [x19, #16]
  4064bc:	mov	x5, x22
  4064c0:	eor	w4, w24, #0x1
  4064c4:	ldr	w2, [x19, #180]
  4064c8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4064cc:	ldr	x1, [x0, #576]
  4064d0:	mov	x0, x23
  4064d4:	bl	405e88 <__fxstatat@plt+0x3438>
  4064d8:	mov	x19, x0
  4064dc:	bl	405bac <__fxstatat@plt+0x315c>
  4064e0:	bl	405ac8 <__fxstatat@plt+0x3078>
  4064e4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4064e8:	ldr	x0, [x0, #1568]
  4064ec:	cbz	x0, 4065a4 <__fxstatat@plt+0x3b54>
  4064f0:	udiv	x1, x21, x0
  4064f4:	sub	x21, x21, #0x1
  4064f8:	add	x21, x21, x19
  4064fc:	udiv	x21, x21, x0
  406500:	cmp	x1, x21
  406504:	b.ne	406518 <__fxstatat@plt+0x3ac8>  // b.any
  406508:	ldr	x25, [sp, #64]
  40650c:	b	406248 <__fxstatat@plt+0x37f8>
  406510:	mov	w3, #0x5                   	// #5
  406514:	b	406320 <__fxstatat@plt+0x38d0>
  406518:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40651c:	add	x0, x0, #0x368
  406520:	add	x0, x0, #0x170
  406524:	bl	405928 <__fxstatat@plt+0x2ed8>
  406528:	ldr	x25, [sp, #64]
  40652c:	b	406248 <__fxstatat@plt+0x37f8>
  406530:	mov	w0, #0x4                   	// #4
  406534:	bl	4033a4 <__fxstatat@plt+0x954>
  406538:	and	w20, w0, #0xff
  40653c:	ldr	x6, [x19, #16]
  406540:	mov	x5, x22
  406544:	eor	w4, w24, #0x1
  406548:	mov	x3, #0x0                   	// #0
  40654c:	ldr	w2, [x19, #180]
  406550:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406554:	ldr	x1, [x0, #576]
  406558:	mov	x0, x23
  40655c:	bl	405e88 <__fxstatat@plt+0x3438>
  406560:	mov	x19, x0
  406564:	bl	405bac <__fxstatat@plt+0x315c>
  406568:	cbnz	w20, 4064e0 <__fxstatat@plt+0x3a90>
  40656c:	ldr	x25, [sp, #64]
  406570:	b	406248 <__fxstatat@plt+0x37f8>
  406574:	mov	w3, #0x7                   	// #7
  406578:	b	4062ec <__fxstatat@plt+0x389c>
  40657c:	mov	w3, #0x10                  	// #16
  406580:	b	406320 <__fxstatat@plt+0x38d0>
  406584:	mov	w3, #0x11                  	// #17
  406588:	b	406320 <__fxstatat@plt+0x38d0>
  40658c:	mov	w3, #0x15                  	// #21
  406590:	b	406320 <__fxstatat@plt+0x38d0>
  406594:	mov	w3, #0xe                   	// #14
  406598:	b	406320 <__fxstatat@plt+0x38d0>
  40659c:	mov	w3, #0x16                  	// #22
  4065a0:	b	406320 <__fxstatat@plt+0x38d0>
  4065a4:	ldr	x25, [sp, #64]
  4065a8:	b	406248 <__fxstatat@plt+0x37f8>
  4065ac:	sub	sp, sp, #0x2c0
  4065b0:	stp	x29, x30, [sp]
  4065b4:	mov	x29, sp
  4065b8:	stp	x19, x20, [sp, #16]
  4065bc:	mov	x19, x0
  4065c0:	mov	x20, x1
  4065c4:	bl	405b20 <__fxstatat@plt+0x30d0>
  4065c8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4065cc:	ldrb	w0, [x0, #860]
  4065d0:	cbz	w0, 40663c <__fxstatat@plt+0x3bec>
  4065d4:	str	x21, [sp, #32]
  4065d8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4065dc:	ldr	w0, [x0, #880]
  4065e0:	mov	w21, #0x0                   	// #0
  4065e4:	cmp	w0, #0x4
  4065e8:	b.eq	4065f4 <__fxstatat@plt+0x3ba4>  // b.none
  4065ec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4065f0:	ldr	w21, [x0, #1520]
  4065f4:	ldrb	w0, [x19, #168]
  4065f8:	cbz	w0, 40661c <__fxstatat@plt+0x3bcc>
  4065fc:	ldr	x0, [x19, #32]
  406600:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  406604:	add	x3, x3, #0x4e8
  406608:	cbz	x0, 406624 <__fxstatat@plt+0x3bd4>
  40660c:	add	x1, sp, #0x30
  406610:	bl	40df60 <__fxstatat@plt+0xb510>
  406614:	mov	x3, x0
  406618:	b	406624 <__fxstatat@plt+0x3bd4>
  40661c:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  406620:	add	x3, x3, #0x4e8
  406624:	mov	w2, w21
  406628:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  40662c:	add	x1, x1, #0x520
  406630:	mov	w0, #0x1                   	// #1
  406634:	bl	402670 <__printf_chk@plt>
  406638:	ldr	x21, [sp, #32]
  40663c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406640:	ldrb	w0, [x0, #905]
  406644:	cbz	w0, 406690 <__fxstatat@plt+0x3c40>
  406648:	str	x21, [sp, #32]
  40664c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406650:	ldr	w0, [x0, #880]
  406654:	mov	w21, #0x0                   	// #0
  406658:	cmp	w0, #0x4
  40665c:	b.eq	406668 <__fxstatat@plt+0x3c18>  // b.none
  406660:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  406664:	ldr	w21, [x0, #1524]
  406668:	ldrb	w0, [x19, #168]
  40666c:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  406670:	add	x3, x3, #0x4e8
  406674:	cbnz	w0, 406704 <__fxstatat@plt+0x3cb4>
  406678:	mov	w2, w21
  40667c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  406680:	add	x1, x1, #0x520
  406684:	mov	w0, #0x1                   	// #1
  406688:	bl	402670 <__printf_chk@plt>
  40668c:	ldr	x21, [sp, #32]
  406690:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  406694:	ldrb	w0, [x0, #884]
  406698:	cbz	w0, 4066cc <__fxstatat@plt+0x3c7c>
  40669c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4066a0:	ldr	w0, [x0, #880]
  4066a4:	mov	w2, #0x0                   	// #0
  4066a8:	cmp	w0, #0x4
  4066ac:	b.eq	4066b8 <__fxstatat@plt+0x3c68>  // b.none
  4066b0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4066b4:	ldr	w2, [x0, #1544]
  4066b8:	ldr	x3, [x19, #160]
  4066bc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  4066c0:	add	x1, x1, #0x520
  4066c4:	mov	w0, #0x1                   	// #1
  4066c8:	bl	402670 <__printf_chk@plt>
  4066cc:	mov	x3, x20
  4066d0:	mov	x2, #0x0                   	// #0
  4066d4:	mov	w1, #0x0                   	// #0
  4066d8:	mov	x0, x19
  4066dc:	bl	4061e4 <__fxstatat@plt+0x3794>
  4066e0:	mov	x20, x0
  4066e4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4066e8:	ldr	w0, [x0, #1512]
  4066ec:	cbnz	w0, 40672c <__fxstatat@plt+0x3cdc>
  4066f0:	mov	x0, x20
  4066f4:	ldp	x19, x20, [sp, #16]
  4066f8:	ldp	x29, x30, [sp]
  4066fc:	add	sp, sp, #0x2c0
  406700:	ret
  406704:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  406708:	add	x0, x0, #0x5c8
  40670c:	ldr	x4, [x0, #3528]
  406710:	mov	x3, #0x200                 	// #512
  406714:	ldr	w2, [x0, #3536]
  406718:	add	x1, sp, #0x30
  40671c:	ldr	x0, [x19, #88]
  406720:	bl	40d324 <__fxstatat@plt+0xa8d4>
  406724:	mov	x3, x0
  406728:	b	406678 <__fxstatat@plt+0x3c28>
  40672c:	ldr	w2, [x19, #152]
  406730:	ldr	w1, [x19, #40]
  406734:	ldrb	w0, [x19, #168]
  406738:	bl	404ee8 <__fxstatat@plt+0x2498>
  40673c:	add	x20, x20, w0, uxtb
  406740:	b	4066f0 <__fxstatat@plt+0x3ca0>
  406744:	stp	x29, x30, [sp, #-96]!
  406748:	mov	x29, sp
  40674c:	stp	x25, x26, [sp, #64]
  406750:	and	w26, w0, #0xff
  406754:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  406758:	ldr	x0, [x0, #1488]
  40675c:	cbz	x0, 406888 <__fxstatat@plt+0x3e38>
  406760:	stp	x19, x20, [sp, #16]
  406764:	stp	x21, x22, [sp, #32]
  406768:	stp	x23, x24, [sp, #48]
  40676c:	stp	x27, x28, [sp, #80]
  406770:	mov	x21, #0x0                   	// #0
  406774:	mov	x19, #0x0                   	// #0
  406778:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40677c:	add	x22, x22, #0x5c8
  406780:	adrp	x24, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  406784:	mov	w27, #0x20                  	// #32
  406788:	mov	x28, #0xfffffffffffffffd    	// #-3
  40678c:	b	40682c <__fxstatat@plt+0x3ddc>
  406790:	mov	x0, x23
  406794:	bl	4054d0 <__fxstatat@plt+0x2a80>
  406798:	mov	x20, x0
  40679c:	cbz	x19, 40680c <__fxstatat@plt+0x3dbc>
  4067a0:	ldr	x1, [x22, #88]
  4067a4:	cbz	x1, 4067c4 <__fxstatat@plt+0x3d74>
  4067a8:	add	x0, x21, #0x2
  4067ac:	add	x0, x0, x20
  4067b0:	cmp	x1, x0
  4067b4:	b.ls	406848 <__fxstatat@plt+0x3df8>  // b.plast
  4067b8:	sub	x0, x28, x20
  4067bc:	cmp	x0, x21
  4067c0:	b.cc	406854 <__fxstatat@plt+0x3e04>  // b.lo, b.ul, b.last
  4067c4:	add	x21, x21, #0x2
  4067c8:	mov	w25, w27
  4067cc:	ldr	x0, [x24, #1456]
  4067d0:	ldr	x1, [x0, #40]
  4067d4:	ldr	x2, [x0, #48]
  4067d8:	cmp	x1, x2
  4067dc:	b.cs	406860 <__fxstatat@plt+0x3e10>  // b.hs, b.nlast
  4067e0:	add	x2, x1, #0x1
  4067e4:	str	x2, [x0, #40]
  4067e8:	strb	w26, [x1]
  4067ec:	ldr	x0, [x24, #1456]
  4067f0:	ldr	x1, [x0, #40]
  4067f4:	ldr	x2, [x0, #48]
  4067f8:	cmp	x1, x2
  4067fc:	b.cs	40686c <__fxstatat@plt+0x3e1c>  // b.hs, b.nlast
  406800:	add	x2, x1, #0x1
  406804:	str	x2, [x0, #40]
  406808:	strb	w25, [x1]
  40680c:	mov	x1, x21
  406810:	mov	x0, x23
  406814:	bl	4065ac <__fxstatat@plt+0x3b5c>
  406818:	add	x21, x21, x20
  40681c:	add	x19, x19, #0x1
  406820:	ldr	x0, [x22, #8]
  406824:	cmp	x0, x19
  406828:	b.ls	406878 <__fxstatat@plt+0x3e28>  // b.plast
  40682c:	ldr	x0, [x22, #24]
  406830:	ldr	x23, [x0, x19, lsl #3]
  406834:	ldr	x20, [x22, #88]
  406838:	cbnz	x20, 406790 <__fxstatat@plt+0x3d40>
  40683c:	cbnz	x19, 4067c4 <__fxstatat@plt+0x3d74>
  406840:	mov	x20, x19
  406844:	b	40680c <__fxstatat@plt+0x3dbc>
  406848:	mov	w25, #0xa                   	// #10
  40684c:	mov	x21, #0x0                   	// #0
  406850:	b	4067cc <__fxstatat@plt+0x3d7c>
  406854:	mov	w25, #0xa                   	// #10
  406858:	mov	x21, #0x0                   	// #0
  40685c:	b	4067cc <__fxstatat@plt+0x3d7c>
  406860:	mov	w1, w26
  406864:	bl	402780 <__overflow@plt>
  406868:	b	4067ec <__fxstatat@plt+0x3d9c>
  40686c:	mov	w1, w25
  406870:	bl	402780 <__overflow@plt>
  406874:	b	40680c <__fxstatat@plt+0x3dbc>
  406878:	ldp	x19, x20, [sp, #16]
  40687c:	ldp	x21, x22, [sp, #32]
  406880:	ldp	x23, x24, [sp, #48]
  406884:	ldp	x27, x28, [sp, #80]
  406888:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40688c:	ldr	x0, [x0, #1456]
  406890:	ldr	x1, [x0, #40]
  406894:	ldr	x2, [x0, #48]
  406898:	cmp	x1, x2
  40689c:	b.cs	4068bc <__fxstatat@plt+0x3e6c>  // b.hs, b.nlast
  4068a0:	add	x2, x1, #0x1
  4068a4:	str	x2, [x0, #40]
  4068a8:	mov	w0, #0xa                   	// #10
  4068ac:	strb	w0, [x1]
  4068b0:	ldp	x25, x26, [sp, #64]
  4068b4:	ldp	x29, x30, [sp], #96
  4068b8:	ret
  4068bc:	mov	w1, #0xa                   	// #10
  4068c0:	bl	402780 <__overflow@plt>
  4068c4:	b	4068b0 <__fxstatat@plt+0x3e60>
  4068c8:	ldr	x4, [x1, #128]
  4068cc:	ldr	x2, [x0, #128]
  4068d0:	cmp	x4, x2
  4068d4:	b.lt	406910 <__fxstatat@plt+0x3ec0>  // b.tstop
  4068d8:	mov	x3, x0
  4068dc:	mov	w0, #0x1                   	// #1
  4068e0:	b.gt	406918 <__fxstatat@plt+0x3ec8>
  4068e4:	ldr	x2, [x1, #136]
  4068e8:	ldr	x0, [x3, #136]
  4068ec:	subs	w0, w2, w0
  4068f0:	b.ne	406918 <__fxstatat@plt+0x3ec8>  // b.any
  4068f4:	stp	x29, x30, [sp, #-16]!
  4068f8:	mov	x29, sp
  4068fc:	ldr	x1, [x1]
  406900:	ldr	x0, [x3]
  406904:	bl	404a20 <__fxstatat@plt+0x1fd0>
  406908:	ldp	x29, x30, [sp], #16
  40690c:	ret
  406910:	mov	w0, #0xffffffff            	// #-1
  406914:	ret
  406918:	ret
  40691c:	ldr	x4, [x1, #96]
  406920:	ldr	x2, [x0, #96]
  406924:	cmp	x4, x2
  406928:	b.lt	406964 <__fxstatat@plt+0x3f14>  // b.tstop
  40692c:	mov	x3, x0
  406930:	mov	w0, #0x1                   	// #1
  406934:	b.gt	40696c <__fxstatat@plt+0x3f1c>
  406938:	ldr	x2, [x1, #104]
  40693c:	ldr	x0, [x3, #104]
  406940:	subs	w0, w2, w0
  406944:	b.ne	40696c <__fxstatat@plt+0x3f1c>  // b.any
  406948:	stp	x29, x30, [sp, #-16]!
  40694c:	mov	x29, sp
  406950:	ldr	x1, [x1]
  406954:	ldr	x0, [x3]
  406958:	bl	402800 <strcmp@plt>
  40695c:	ldp	x29, x30, [sp], #16
  406960:	ret
  406964:	mov	w0, #0xffffffff            	// #-1
  406968:	ret
  40696c:	ret
  406970:	mov	x3, x1
  406974:	ldr	x2, [x0, #96]
  406978:	ldr	x1, [x1, #96]
  40697c:	cmp	x2, x1
  406980:	b.lt	4069bc <__fxstatat@plt+0x3f6c>  // b.tstop
  406984:	mov	x4, x0
  406988:	mov	w0, #0x1                   	// #1
  40698c:	b.gt	4069c4 <__fxstatat@plt+0x3f74>
  406990:	ldr	x2, [x4, #104]
  406994:	ldr	x0, [x3, #104]
  406998:	subs	w0, w2, w0
  40699c:	b.ne	4069c4 <__fxstatat@plt+0x3f74>  // b.any
  4069a0:	stp	x29, x30, [sp, #-16]!
  4069a4:	mov	x29, sp
  4069a8:	ldr	x1, [x4]
  4069ac:	ldr	x0, [x3]
  4069b0:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4069b4:	ldp	x29, x30, [sp], #16
  4069b8:	ret
  4069bc:	mov	w0, #0xffffffff            	// #-1
  4069c0:	ret
  4069c4:	ret
  4069c8:	mov	x3, x1
  4069cc:	ldr	x2, [x0, #96]
  4069d0:	ldr	x1, [x1, #96]
  4069d4:	cmp	x2, x1
  4069d8:	b.lt	406a14 <__fxstatat@plt+0x3fc4>  // b.tstop
  4069dc:	mov	x4, x0
  4069e0:	mov	w0, #0x1                   	// #1
  4069e4:	b.gt	406a1c <__fxstatat@plt+0x3fcc>
  4069e8:	ldr	x2, [x4, #104]
  4069ec:	ldr	x0, [x3, #104]
  4069f0:	subs	w0, w2, w0
  4069f4:	b.ne	406a1c <__fxstatat@plt+0x3fcc>  // b.any
  4069f8:	stp	x29, x30, [sp, #-16]!
  4069fc:	mov	x29, sp
  406a00:	ldr	x1, [x4]
  406a04:	ldr	x0, [x3]
  406a08:	bl	402800 <strcmp@plt>
  406a0c:	ldp	x29, x30, [sp], #16
  406a10:	ret
  406a14:	mov	w0, #0xffffffff            	// #-1
  406a18:	ret
  406a1c:	ret
  406a20:	ldr	x4, [x1, #128]
  406a24:	ldr	x2, [x0, #128]
  406a28:	cmp	x4, x2
  406a2c:	b.lt	406a68 <__fxstatat@plt+0x4018>  // b.tstop
  406a30:	mov	x3, x0
  406a34:	mov	w0, #0x1                   	// #1
  406a38:	b.gt	406a70 <__fxstatat@plt+0x4020>
  406a3c:	ldr	x2, [x1, #136]
  406a40:	ldr	x0, [x3, #136]
  406a44:	subs	w0, w2, w0
  406a48:	b.ne	406a70 <__fxstatat@plt+0x4020>  // b.any
  406a4c:	stp	x29, x30, [sp, #-16]!
  406a50:	mov	x29, sp
  406a54:	ldr	x1, [x1]
  406a58:	ldr	x0, [x3]
  406a5c:	bl	402800 <strcmp@plt>
  406a60:	ldp	x29, x30, [sp], #16
  406a64:	ret
  406a68:	mov	w0, #0xffffffff            	// #-1
  406a6c:	ret
  406a70:	ret
  406a74:	mov	x3, x1
  406a78:	ldr	x2, [x0, #128]
  406a7c:	ldr	x1, [x1, #128]
  406a80:	cmp	x2, x1
  406a84:	b.lt	406ac0 <__fxstatat@plt+0x4070>  // b.tstop
  406a88:	mov	x4, x0
  406a8c:	mov	w0, #0x1                   	// #1
  406a90:	b.gt	406ac8 <__fxstatat@plt+0x4078>
  406a94:	ldr	x2, [x4, #136]
  406a98:	ldr	x0, [x3, #136]
  406a9c:	subs	w0, w2, w0
  406aa0:	b.ne	406ac8 <__fxstatat@plt+0x4078>  // b.any
  406aa4:	stp	x29, x30, [sp, #-16]!
  406aa8:	mov	x29, sp
  406aac:	ldr	x1, [x4]
  406ab0:	ldr	x0, [x3]
  406ab4:	bl	404a20 <__fxstatat@plt+0x1fd0>
  406ab8:	ldp	x29, x30, [sp], #16
  406abc:	ret
  406ac0:	mov	w0, #0xffffffff            	// #-1
  406ac4:	ret
  406ac8:	ret
  406acc:	mov	x3, x1
  406ad0:	ldr	x2, [x0, #128]
  406ad4:	ldr	x1, [x1, #128]
  406ad8:	cmp	x2, x1
  406adc:	b.lt	406b18 <__fxstatat@plt+0x40c8>  // b.tstop
  406ae0:	mov	x4, x0
  406ae4:	mov	w0, #0x1                   	// #1
  406ae8:	b.gt	406b20 <__fxstatat@plt+0x40d0>
  406aec:	ldr	x2, [x4, #136]
  406af0:	ldr	x0, [x3, #136]
  406af4:	subs	w0, w2, w0
  406af8:	b.ne	406b20 <__fxstatat@plt+0x40d0>  // b.any
  406afc:	stp	x29, x30, [sp, #-16]!
  406b00:	mov	x29, sp
  406b04:	ldr	x1, [x4]
  406b08:	ldr	x0, [x3]
  406b0c:	bl	402800 <strcmp@plt>
  406b10:	ldp	x29, x30, [sp], #16
  406b14:	ret
  406b18:	mov	w0, #0xffffffff            	// #-1
  406b1c:	ret
  406b20:	ret
  406b24:	ldr	x4, [x1, #112]
  406b28:	ldr	x2, [x0, #112]
  406b2c:	cmp	x4, x2
  406b30:	b.lt	406b6c <__fxstatat@plt+0x411c>  // b.tstop
  406b34:	mov	x3, x0
  406b38:	mov	w0, #0x1                   	// #1
  406b3c:	b.gt	406b74 <__fxstatat@plt+0x4124>
  406b40:	ldr	x2, [x1, #120]
  406b44:	ldr	x0, [x3, #120]
  406b48:	subs	w0, w2, w0
  406b4c:	b.ne	406b74 <__fxstatat@plt+0x4124>  // b.any
  406b50:	stp	x29, x30, [sp, #-16]!
  406b54:	mov	x29, sp
  406b58:	ldr	x1, [x1]
  406b5c:	ldr	x0, [x3]
  406b60:	bl	404a20 <__fxstatat@plt+0x1fd0>
  406b64:	ldp	x29, x30, [sp], #16
  406b68:	ret
  406b6c:	mov	w0, #0xffffffff            	// #-1
  406b70:	ret
  406b74:	ret
  406b78:	ldr	x4, [x1, #112]
  406b7c:	ldr	x2, [x0, #112]
  406b80:	cmp	x4, x2
  406b84:	b.lt	406bc0 <__fxstatat@plt+0x4170>  // b.tstop
  406b88:	mov	x3, x0
  406b8c:	mov	w0, #0x1                   	// #1
  406b90:	b.gt	406bc8 <__fxstatat@plt+0x4178>
  406b94:	ldr	x2, [x1, #120]
  406b98:	ldr	x0, [x3, #120]
  406b9c:	subs	w0, w2, w0
  406ba0:	b.ne	406bc8 <__fxstatat@plt+0x4178>  // b.any
  406ba4:	stp	x29, x30, [sp, #-16]!
  406ba8:	mov	x29, sp
  406bac:	ldr	x1, [x1]
  406bb0:	ldr	x0, [x3]
  406bb4:	bl	402800 <strcmp@plt>
  406bb8:	ldp	x29, x30, [sp], #16
  406bbc:	ret
  406bc0:	mov	w0, #0xffffffff            	// #-1
  406bc4:	ret
  406bc8:	ret
  406bcc:	mov	x3, x1
  406bd0:	ldr	x2, [x0, #112]
  406bd4:	ldr	x1, [x1, #112]
  406bd8:	cmp	x2, x1
  406bdc:	b.lt	406c18 <__fxstatat@plt+0x41c8>  // b.tstop
  406be0:	mov	x4, x0
  406be4:	mov	w0, #0x1                   	// #1
  406be8:	b.gt	406c20 <__fxstatat@plt+0x41d0>
  406bec:	ldr	x2, [x4, #120]
  406bf0:	ldr	x0, [x3, #120]
  406bf4:	subs	w0, w2, w0
  406bf8:	b.ne	406c20 <__fxstatat@plt+0x41d0>  // b.any
  406bfc:	stp	x29, x30, [sp, #-16]!
  406c00:	mov	x29, sp
  406c04:	ldr	x1, [x4]
  406c08:	ldr	x0, [x3]
  406c0c:	bl	404a20 <__fxstatat@plt+0x1fd0>
  406c10:	ldp	x29, x30, [sp], #16
  406c14:	ret
  406c18:	mov	w0, #0xffffffff            	// #-1
  406c1c:	ret
  406c20:	ret
  406c24:	mov	x3, x1
  406c28:	ldr	x2, [x0, #112]
  406c2c:	ldr	x1, [x1, #112]
  406c30:	cmp	x2, x1
  406c34:	b.lt	406c70 <__fxstatat@plt+0x4220>  // b.tstop
  406c38:	mov	x4, x0
  406c3c:	mov	w0, #0x1                   	// #1
  406c40:	b.gt	406c78 <__fxstatat@plt+0x4228>
  406c44:	ldr	x2, [x4, #120]
  406c48:	ldr	x0, [x3, #120]
  406c4c:	subs	w0, w2, w0
  406c50:	b.ne	406c78 <__fxstatat@plt+0x4228>  // b.any
  406c54:	stp	x29, x30, [sp, #-16]!
  406c58:	mov	x29, sp
  406c5c:	ldr	x1, [x4]
  406c60:	ldr	x0, [x3]
  406c64:	bl	402800 <strcmp@plt>
  406c68:	ldp	x29, x30, [sp], #16
  406c6c:	ret
  406c70:	mov	w0, #0xffffffff            	// #-1
  406c74:	ret
  406c78:	ret
  406c7c:	ldr	x4, [x1, #96]
  406c80:	ldr	x2, [x0, #96]
  406c84:	cmp	x4, x2
  406c88:	b.lt	406cc4 <__fxstatat@plt+0x4274>  // b.tstop
  406c8c:	mov	x3, x0
  406c90:	mov	w0, #0x1                   	// #1
  406c94:	b.gt	406ccc <__fxstatat@plt+0x427c>
  406c98:	ldr	x2, [x1, #104]
  406c9c:	ldr	x0, [x3, #104]
  406ca0:	subs	w0, w2, w0
  406ca4:	b.ne	406ccc <__fxstatat@plt+0x427c>  // b.any
  406ca8:	stp	x29, x30, [sp, #-16]!
  406cac:	mov	x29, sp
  406cb0:	ldr	x1, [x1]
  406cb4:	ldr	x0, [x3]
  406cb8:	bl	404a20 <__fxstatat@plt+0x1fd0>
  406cbc:	ldp	x29, x30, [sp], #16
  406cc0:	ret
  406cc4:	mov	w0, #0xffffffff            	// #-1
  406cc8:	ret
  406ccc:	ret
  406cd0:	stp	x29, x30, [sp, #-48]!
  406cd4:	mov	x29, sp
  406cd8:	stp	x19, x20, [sp, #16]
  406cdc:	str	x21, [sp, #32]
  406ce0:	mov	x21, x0
  406ce4:	mov	x20, x1
  406ce8:	bl	402c40 <__fxstatat@plt+0x1f0>
  406cec:	and	w19, w0, #0xff
  406cf0:	mov	x0, x20
  406cf4:	bl	402c40 <__fxstatat@plt+0x1f0>
  406cf8:	and	w2, w0, #0xff
  406cfc:	eor	w0, w2, #0x1
  406d00:	tst	w19, w0
  406d04:	b.ne	406d5c <__fxstatat@plt+0x430c>  // b.any
  406d08:	eor	w19, w19, #0x1
  406d0c:	mov	w0, #0x1                   	// #1
  406d10:	tst	w2, w19
  406d14:	b.eq	406d28 <__fxstatat@plt+0x42d8>  // b.none
  406d18:	ldp	x19, x20, [sp, #16]
  406d1c:	ldr	x21, [sp, #32]
  406d20:	ldp	x29, x30, [sp], #48
  406d24:	ret
  406d28:	ldr	x2, [x20, #112]
  406d2c:	ldr	x1, [x21, #112]
  406d30:	cmp	x2, x1
  406d34:	b.lt	406d64 <__fxstatat@plt+0x4314>  // b.tstop
  406d38:	b.gt	406d18 <__fxstatat@plt+0x42c8>
  406d3c:	ldr	x1, [x20, #120]
  406d40:	ldr	x0, [x21, #120]
  406d44:	subs	w0, w1, w0
  406d48:	b.ne	406d18 <__fxstatat@plt+0x42c8>  // b.any
  406d4c:	ldr	x1, [x20]
  406d50:	ldr	x0, [x21]
  406d54:	bl	404a20 <__fxstatat@plt+0x1fd0>
  406d58:	b	406d18 <__fxstatat@plt+0x42c8>
  406d5c:	mov	w0, #0xffffffff            	// #-1
  406d60:	b	406d18 <__fxstatat@plt+0x42c8>
  406d64:	mov	w0, #0xffffffff            	// #-1
  406d68:	b	406d18 <__fxstatat@plt+0x42c8>
  406d6c:	stp	x29, x30, [sp, #-48]!
  406d70:	mov	x29, sp
  406d74:	stp	x19, x20, [sp, #16]
  406d78:	str	x21, [sp, #32]
  406d7c:	mov	x21, x0
  406d80:	mov	x20, x1
  406d84:	bl	402c40 <__fxstatat@plt+0x1f0>
  406d88:	and	w19, w0, #0xff
  406d8c:	mov	x0, x20
  406d90:	bl	402c40 <__fxstatat@plt+0x1f0>
  406d94:	and	w2, w0, #0xff
  406d98:	eor	w0, w2, #0x1
  406d9c:	tst	w19, w0
  406da0:	b.ne	406df8 <__fxstatat@plt+0x43a8>  // b.any
  406da4:	eor	w19, w19, #0x1
  406da8:	mov	w0, #0x1                   	// #1
  406dac:	tst	w2, w19
  406db0:	b.eq	406dc4 <__fxstatat@plt+0x4374>  // b.none
  406db4:	ldp	x19, x20, [sp, #16]
  406db8:	ldr	x21, [sp, #32]
  406dbc:	ldp	x29, x30, [sp], #48
  406dc0:	ret
  406dc4:	ldr	x2, [x21, #112]
  406dc8:	ldr	x1, [x20, #112]
  406dcc:	cmp	x2, x1
  406dd0:	b.lt	406e00 <__fxstatat@plt+0x43b0>  // b.tstop
  406dd4:	b.gt	406db4 <__fxstatat@plt+0x4364>
  406dd8:	ldr	x1, [x21, #120]
  406ddc:	ldr	x0, [x20, #120]
  406de0:	subs	w0, w1, w0
  406de4:	b.ne	406db4 <__fxstatat@plt+0x4364>  // b.any
  406de8:	ldr	x1, [x21]
  406dec:	ldr	x0, [x20]
  406df0:	bl	402800 <strcmp@plt>
  406df4:	b	406db4 <__fxstatat@plt+0x4364>
  406df8:	mov	w0, #0xffffffff            	// #-1
  406dfc:	b	406db4 <__fxstatat@plt+0x4364>
  406e00:	mov	w0, #0xffffffff            	// #-1
  406e04:	b	406db4 <__fxstatat@plt+0x4364>
  406e08:	stp	x29, x30, [sp, #-48]!
  406e0c:	mov	x29, sp
  406e10:	stp	x19, x20, [sp, #16]
  406e14:	str	x21, [sp, #32]
  406e18:	mov	x21, x0
  406e1c:	mov	x20, x1
  406e20:	bl	402c40 <__fxstatat@plt+0x1f0>
  406e24:	and	w19, w0, #0xff
  406e28:	mov	x0, x20
  406e2c:	bl	402c40 <__fxstatat@plt+0x1f0>
  406e30:	and	w2, w0, #0xff
  406e34:	eor	w0, w2, #0x1
  406e38:	tst	w19, w0
  406e3c:	b.ne	406e94 <__fxstatat@plt+0x4444>  // b.any
  406e40:	eor	w19, w19, #0x1
  406e44:	mov	w0, #0x1                   	// #1
  406e48:	tst	w2, w19
  406e4c:	b.eq	406e60 <__fxstatat@plt+0x4410>  // b.none
  406e50:	ldp	x19, x20, [sp, #16]
  406e54:	ldr	x21, [sp, #32]
  406e58:	ldp	x29, x30, [sp], #48
  406e5c:	ret
  406e60:	ldr	x2, [x20, #112]
  406e64:	ldr	x1, [x21, #112]
  406e68:	cmp	x2, x1
  406e6c:	b.lt	406e9c <__fxstatat@plt+0x444c>  // b.tstop
  406e70:	b.gt	406e50 <__fxstatat@plt+0x4400>
  406e74:	ldr	x1, [x20, #120]
  406e78:	ldr	x0, [x21, #120]
  406e7c:	subs	w0, w1, w0
  406e80:	b.ne	406e50 <__fxstatat@plt+0x4400>  // b.any
  406e84:	ldr	x1, [x20]
  406e88:	ldr	x0, [x21]
  406e8c:	bl	402800 <strcmp@plt>
  406e90:	b	406e50 <__fxstatat@plt+0x4400>
  406e94:	mov	w0, #0xffffffff            	// #-1
  406e98:	b	406e50 <__fxstatat@plt+0x4400>
  406e9c:	mov	w0, #0xffffffff            	// #-1
  406ea0:	b	406e50 <__fxstatat@plt+0x4400>
  406ea4:	stp	x29, x30, [sp, #-48]!
  406ea8:	mov	x29, sp
  406eac:	stp	x19, x20, [sp, #16]
  406eb0:	str	x21, [sp, #32]
  406eb4:	mov	x21, x0
  406eb8:	mov	x20, x1
  406ebc:	bl	402c40 <__fxstatat@plt+0x1f0>
  406ec0:	and	w19, w0, #0xff
  406ec4:	mov	x0, x20
  406ec8:	bl	402c40 <__fxstatat@plt+0x1f0>
  406ecc:	and	w2, w0, #0xff
  406ed0:	eor	w0, w2, #0x1
  406ed4:	tst	w19, w0
  406ed8:	b.ne	406f30 <__fxstatat@plt+0x44e0>  // b.any
  406edc:	eor	w19, w19, #0x1
  406ee0:	mov	w0, #0x1                   	// #1
  406ee4:	tst	w2, w19
  406ee8:	b.eq	406efc <__fxstatat@plt+0x44ac>  // b.none
  406eec:	ldp	x19, x20, [sp, #16]
  406ef0:	ldr	x21, [sp, #32]
  406ef4:	ldp	x29, x30, [sp], #48
  406ef8:	ret
  406efc:	ldr	x2, [x20, #96]
  406f00:	ldr	x1, [x21, #96]
  406f04:	cmp	x2, x1
  406f08:	b.lt	406f38 <__fxstatat@plt+0x44e8>  // b.tstop
  406f0c:	b.gt	406eec <__fxstatat@plt+0x449c>
  406f10:	ldr	x1, [x20, #104]
  406f14:	ldr	x0, [x21, #104]
  406f18:	subs	w0, w1, w0
  406f1c:	b.ne	406eec <__fxstatat@plt+0x449c>  // b.any
  406f20:	ldr	x1, [x20]
  406f24:	ldr	x0, [x21]
  406f28:	bl	404a20 <__fxstatat@plt+0x1fd0>
  406f2c:	b	406eec <__fxstatat@plt+0x449c>
  406f30:	mov	w0, #0xffffffff            	// #-1
  406f34:	b	406eec <__fxstatat@plt+0x449c>
  406f38:	mov	w0, #0xffffffff            	// #-1
  406f3c:	b	406eec <__fxstatat@plt+0x449c>
  406f40:	stp	x29, x30, [sp, #-48]!
  406f44:	mov	x29, sp
  406f48:	stp	x19, x20, [sp, #16]
  406f4c:	str	x21, [sp, #32]
  406f50:	mov	x21, x0
  406f54:	mov	x20, x1
  406f58:	bl	402c40 <__fxstatat@plt+0x1f0>
  406f5c:	and	w19, w0, #0xff
  406f60:	mov	x0, x20
  406f64:	bl	402c40 <__fxstatat@plt+0x1f0>
  406f68:	and	w2, w0, #0xff
  406f6c:	eor	w0, w2, #0x1
  406f70:	tst	w19, w0
  406f74:	b.ne	406fcc <__fxstatat@plt+0x457c>  // b.any
  406f78:	eor	w19, w19, #0x1
  406f7c:	mov	w0, #0x1                   	// #1
  406f80:	tst	w2, w19
  406f84:	b.eq	406f98 <__fxstatat@plt+0x4548>  // b.none
  406f88:	ldp	x19, x20, [sp, #16]
  406f8c:	ldr	x21, [sp, #32]
  406f90:	ldp	x29, x30, [sp], #48
  406f94:	ret
  406f98:	ldr	x2, [x20, #96]
  406f9c:	ldr	x1, [x21, #96]
  406fa0:	cmp	x2, x1
  406fa4:	b.lt	406fd4 <__fxstatat@plt+0x4584>  // b.tstop
  406fa8:	b.gt	406f88 <__fxstatat@plt+0x4538>
  406fac:	ldr	x1, [x20, #104]
  406fb0:	ldr	x0, [x21, #104]
  406fb4:	subs	w0, w1, w0
  406fb8:	b.ne	406f88 <__fxstatat@plt+0x4538>  // b.any
  406fbc:	ldr	x1, [x20]
  406fc0:	ldr	x0, [x21]
  406fc4:	bl	402800 <strcmp@plt>
  406fc8:	b	406f88 <__fxstatat@plt+0x4538>
  406fcc:	mov	w0, #0xffffffff            	// #-1
  406fd0:	b	406f88 <__fxstatat@plt+0x4538>
  406fd4:	mov	w0, #0xffffffff            	// #-1
  406fd8:	b	406f88 <__fxstatat@plt+0x4538>
  406fdc:	stp	x29, x30, [sp, #-48]!
  406fe0:	mov	x29, sp
  406fe4:	stp	x19, x20, [sp, #16]
  406fe8:	str	x21, [sp, #32]
  406fec:	mov	x21, x0
  406ff0:	mov	x20, x1
  406ff4:	bl	402c40 <__fxstatat@plt+0x1f0>
  406ff8:	and	w19, w0, #0xff
  406ffc:	mov	x0, x20
  407000:	bl	402c40 <__fxstatat@plt+0x1f0>
  407004:	and	w2, w0, #0xff
  407008:	eor	w0, w2, #0x1
  40700c:	tst	w19, w0
  407010:	b.ne	407068 <__fxstatat@plt+0x4618>  // b.any
  407014:	eor	w19, w19, #0x1
  407018:	mov	w0, #0x1                   	// #1
  40701c:	tst	w2, w19
  407020:	b.eq	407034 <__fxstatat@plt+0x45e4>  // b.none
  407024:	ldp	x19, x20, [sp, #16]
  407028:	ldr	x21, [sp, #32]
  40702c:	ldp	x29, x30, [sp], #48
  407030:	ret
  407034:	ldr	x2, [x21, #96]
  407038:	ldr	x1, [x20, #96]
  40703c:	cmp	x2, x1
  407040:	b.lt	407070 <__fxstatat@plt+0x4620>  // b.tstop
  407044:	b.gt	407024 <__fxstatat@plt+0x45d4>
  407048:	ldr	x1, [x21, #104]
  40704c:	ldr	x0, [x20, #104]
  407050:	subs	w0, w1, w0
  407054:	b.ne	407024 <__fxstatat@plt+0x45d4>  // b.any
  407058:	ldr	x1, [x21]
  40705c:	ldr	x0, [x20]
  407060:	bl	404a20 <__fxstatat@plt+0x1fd0>
  407064:	b	407024 <__fxstatat@plt+0x45d4>
  407068:	mov	w0, #0xffffffff            	// #-1
  40706c:	b	407024 <__fxstatat@plt+0x45d4>
  407070:	mov	w0, #0xffffffff            	// #-1
  407074:	b	407024 <__fxstatat@plt+0x45d4>
  407078:	stp	x29, x30, [sp, #-48]!
  40707c:	mov	x29, sp
  407080:	stp	x19, x20, [sp, #16]
  407084:	str	x21, [sp, #32]
  407088:	mov	x21, x0
  40708c:	mov	x20, x1
  407090:	bl	402c40 <__fxstatat@plt+0x1f0>
  407094:	and	w19, w0, #0xff
  407098:	mov	x0, x20
  40709c:	bl	402c40 <__fxstatat@plt+0x1f0>
  4070a0:	and	w2, w0, #0xff
  4070a4:	eor	w0, w2, #0x1
  4070a8:	tst	w19, w0
  4070ac:	b.ne	407104 <__fxstatat@plt+0x46b4>  // b.any
  4070b0:	eor	w19, w19, #0x1
  4070b4:	mov	w0, #0x1                   	// #1
  4070b8:	tst	w2, w19
  4070bc:	b.eq	4070d0 <__fxstatat@plt+0x4680>  // b.none
  4070c0:	ldp	x19, x20, [sp, #16]
  4070c4:	ldr	x21, [sp, #32]
  4070c8:	ldp	x29, x30, [sp], #48
  4070cc:	ret
  4070d0:	ldr	x2, [x20, #128]
  4070d4:	ldr	x1, [x21, #128]
  4070d8:	cmp	x2, x1
  4070dc:	b.lt	40710c <__fxstatat@plt+0x46bc>  // b.tstop
  4070e0:	b.gt	4070c0 <__fxstatat@plt+0x4670>
  4070e4:	ldr	x1, [x20, #136]
  4070e8:	ldr	x0, [x21, #136]
  4070ec:	subs	w0, w1, w0
  4070f0:	b.ne	4070c0 <__fxstatat@plt+0x4670>  // b.any
  4070f4:	ldr	x1, [x20]
  4070f8:	ldr	x0, [x21]
  4070fc:	bl	404a20 <__fxstatat@plt+0x1fd0>
  407100:	b	4070c0 <__fxstatat@plt+0x4670>
  407104:	mov	w0, #0xffffffff            	// #-1
  407108:	b	4070c0 <__fxstatat@plt+0x4670>
  40710c:	mov	w0, #0xffffffff            	// #-1
  407110:	b	4070c0 <__fxstatat@plt+0x4670>
  407114:	stp	x29, x30, [sp, #-48]!
  407118:	mov	x29, sp
  40711c:	stp	x19, x20, [sp, #16]
  407120:	str	x21, [sp, #32]
  407124:	mov	x21, x0
  407128:	mov	x20, x1
  40712c:	bl	402c40 <__fxstatat@plt+0x1f0>
  407130:	and	w19, w0, #0xff
  407134:	mov	x0, x20
  407138:	bl	402c40 <__fxstatat@plt+0x1f0>
  40713c:	and	w2, w0, #0xff
  407140:	eor	w0, w2, #0x1
  407144:	tst	w19, w0
  407148:	b.ne	4071a0 <__fxstatat@plt+0x4750>  // b.any
  40714c:	eor	w19, w19, #0x1
  407150:	mov	w0, #0x1                   	// #1
  407154:	tst	w2, w19
  407158:	b.eq	40716c <__fxstatat@plt+0x471c>  // b.none
  40715c:	ldp	x19, x20, [sp, #16]
  407160:	ldr	x21, [sp, #32]
  407164:	ldp	x29, x30, [sp], #48
  407168:	ret
  40716c:	ldr	x2, [x21, #128]
  407170:	ldr	x1, [x20, #128]
  407174:	cmp	x2, x1
  407178:	b.lt	4071a8 <__fxstatat@plt+0x4758>  // b.tstop
  40717c:	b.gt	40715c <__fxstatat@plt+0x470c>
  407180:	ldr	x1, [x21, #136]
  407184:	ldr	x0, [x20, #136]
  407188:	subs	w0, w1, w0
  40718c:	b.ne	40715c <__fxstatat@plt+0x470c>  // b.any
  407190:	ldr	x1, [x21]
  407194:	ldr	x0, [x20]
  407198:	bl	402800 <strcmp@plt>
  40719c:	b	40715c <__fxstatat@plt+0x470c>
  4071a0:	mov	w0, #0xffffffff            	// #-1
  4071a4:	b	40715c <__fxstatat@plt+0x470c>
  4071a8:	mov	w0, #0xffffffff            	// #-1
  4071ac:	b	40715c <__fxstatat@plt+0x470c>
  4071b0:	stp	x29, x30, [sp, #-48]!
  4071b4:	mov	x29, sp
  4071b8:	stp	x19, x20, [sp, #16]
  4071bc:	str	x21, [sp, #32]
  4071c0:	mov	x21, x0
  4071c4:	mov	x20, x1
  4071c8:	bl	402c40 <__fxstatat@plt+0x1f0>
  4071cc:	and	w19, w0, #0xff
  4071d0:	mov	x0, x20
  4071d4:	bl	402c40 <__fxstatat@plt+0x1f0>
  4071d8:	and	w2, w0, #0xff
  4071dc:	eor	w0, w2, #0x1
  4071e0:	tst	w19, w0
  4071e4:	b.ne	40723c <__fxstatat@plt+0x47ec>  // b.any
  4071e8:	eor	w19, w19, #0x1
  4071ec:	mov	w0, #0x1                   	// #1
  4071f0:	tst	w2, w19
  4071f4:	b.eq	407208 <__fxstatat@plt+0x47b8>  // b.none
  4071f8:	ldp	x19, x20, [sp, #16]
  4071fc:	ldr	x21, [sp, #32]
  407200:	ldp	x29, x30, [sp], #48
  407204:	ret
  407208:	ldr	x2, [x20, #128]
  40720c:	ldr	x1, [x21, #128]
  407210:	cmp	x2, x1
  407214:	b.lt	407244 <__fxstatat@plt+0x47f4>  // b.tstop
  407218:	b.gt	4071f8 <__fxstatat@plt+0x47a8>
  40721c:	ldr	x1, [x20, #136]
  407220:	ldr	x0, [x21, #136]
  407224:	subs	w0, w1, w0
  407228:	b.ne	4071f8 <__fxstatat@plt+0x47a8>  // b.any
  40722c:	ldr	x1, [x20]
  407230:	ldr	x0, [x21]
  407234:	bl	402800 <strcmp@plt>
  407238:	b	4071f8 <__fxstatat@plt+0x47a8>
  40723c:	mov	w0, #0xffffffff            	// #-1
  407240:	b	4071f8 <__fxstatat@plt+0x47a8>
  407244:	mov	w0, #0xffffffff            	// #-1
  407248:	b	4071f8 <__fxstatat@plt+0x47a8>
  40724c:	stp	x29, x30, [sp, #-48]!
  407250:	mov	x29, sp
  407254:	stp	x19, x20, [sp, #16]
  407258:	str	x21, [sp, #32]
  40725c:	mov	x20, x0
  407260:	mov	x21, x1
  407264:	mov	w1, #0x2e                  	// #46
  407268:	ldr	x0, [x0]
  40726c:	bl	402720 <strrchr@plt>
  407270:	mov	x19, x0
  407274:	mov	w1, #0x2e                  	// #46
  407278:	ldr	x0, [x21]
  40727c:	bl	402720 <strrchr@plt>
  407280:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  407284:	add	x1, x1, #0x1f0
  407288:	cmp	x19, #0x0
  40728c:	csel	x19, x1, x19, eq  // eq = none
  407290:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  407294:	add	x1, x1, #0x1f0
  407298:	cmp	x0, #0x0
  40729c:	csel	x1, x1, x0, eq  // eq = none
  4072a0:	mov	x0, x19
  4072a4:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4072a8:	cbnz	w0, 4072b8 <__fxstatat@plt+0x4868>
  4072ac:	ldr	x1, [x21]
  4072b0:	ldr	x0, [x20]
  4072b4:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4072b8:	ldp	x19, x20, [sp, #16]
  4072bc:	ldr	x21, [sp, #32]
  4072c0:	ldp	x29, x30, [sp], #48
  4072c4:	ret
  4072c8:	stp	x29, x30, [sp, #-48]!
  4072cc:	mov	x29, sp
  4072d0:	stp	x19, x20, [sp, #16]
  4072d4:	str	x21, [sp, #32]
  4072d8:	mov	x20, x1
  4072dc:	ldr	x21, [x0]
  4072e0:	mov	w1, #0x2e                  	// #46
  4072e4:	mov	x0, x21
  4072e8:	bl	402720 <strrchr@plt>
  4072ec:	mov	x19, x0
  4072f0:	ldr	x20, [x20]
  4072f4:	mov	w1, #0x2e                  	// #46
  4072f8:	mov	x0, x20
  4072fc:	bl	402720 <strrchr@plt>
  407300:	mov	x1, x0
  407304:	cbz	x19, 407340 <__fxstatat@plt+0x48f0>
  407308:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2af4>
  40730c:	add	x0, x0, #0x1f0
  407310:	cmp	x1, #0x0
  407314:	csel	x1, x0, x1, eq  // eq = none
  407318:	mov	x0, x19
  40731c:	bl	402800 <strcmp@plt>
  407320:	cbnz	w0, 407330 <__fxstatat@plt+0x48e0>
  407324:	mov	x1, x20
  407328:	mov	x0, x21
  40732c:	bl	402800 <strcmp@plt>
  407330:	ldp	x19, x20, [sp, #16]
  407334:	ldr	x21, [sp, #32]
  407338:	ldp	x29, x30, [sp], #48
  40733c:	ret
  407340:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2af4>
  407344:	add	x19, x19, #0x1f0
  407348:	cbnz	x0, 407318 <__fxstatat@plt+0x48c8>
  40734c:	b	407324 <__fxstatat@plt+0x48d4>
  407350:	stp	x29, x30, [sp, #-48]!
  407354:	mov	x29, sp
  407358:	stp	x19, x20, [sp, #16]
  40735c:	str	x21, [sp, #32]
  407360:	mov	x21, x0
  407364:	mov	x20, x1
  407368:	mov	w1, #0x2e                  	// #46
  40736c:	ldr	x0, [x20]
  407370:	bl	402720 <strrchr@plt>
  407374:	mov	x19, x0
  407378:	mov	w1, #0x2e                  	// #46
  40737c:	ldr	x0, [x21]
  407380:	bl	402720 <strrchr@plt>
  407384:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  407388:	add	x1, x1, #0x1f0
  40738c:	cmp	x19, #0x0
  407390:	csel	x19, x1, x19, eq  // eq = none
  407394:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  407398:	add	x1, x1, #0x1f0
  40739c:	cmp	x0, #0x0
  4073a0:	csel	x1, x1, x0, eq  // eq = none
  4073a4:	mov	x0, x19
  4073a8:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4073ac:	cbnz	w0, 4073bc <__fxstatat@plt+0x496c>
  4073b0:	ldr	x1, [x21]
  4073b4:	ldr	x0, [x20]
  4073b8:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4073bc:	ldp	x19, x20, [sp, #16]
  4073c0:	ldr	x21, [sp, #32]
  4073c4:	ldp	x29, x30, [sp], #48
  4073c8:	ret
  4073cc:	stp	x29, x30, [sp, #-48]!
  4073d0:	mov	x29, sp
  4073d4:	stp	x19, x20, [sp, #16]
  4073d8:	str	x21, [sp, #32]
  4073dc:	mov	x20, x0
  4073e0:	ldr	x21, [x1]
  4073e4:	mov	w1, #0x2e                  	// #46
  4073e8:	mov	x0, x21
  4073ec:	bl	402720 <strrchr@plt>
  4073f0:	mov	x19, x0
  4073f4:	ldr	x20, [x20]
  4073f8:	mov	w1, #0x2e                  	// #46
  4073fc:	mov	x0, x20
  407400:	bl	402720 <strrchr@plt>
  407404:	mov	x1, x0
  407408:	cbz	x19, 407444 <__fxstatat@plt+0x49f4>
  40740c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2af4>
  407410:	add	x0, x0, #0x1f0
  407414:	cmp	x1, #0x0
  407418:	csel	x1, x0, x1, eq  // eq = none
  40741c:	mov	x0, x19
  407420:	bl	402800 <strcmp@plt>
  407424:	cbnz	w0, 407434 <__fxstatat@plt+0x49e4>
  407428:	mov	x1, x20
  40742c:	mov	x0, x21
  407430:	bl	402800 <strcmp@plt>
  407434:	ldp	x19, x20, [sp, #16]
  407438:	ldr	x21, [sp, #32]
  40743c:	ldp	x29, x30, [sp], #48
  407440:	ret
  407444:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2af4>
  407448:	add	x19, x19, #0x1f0
  40744c:	cbnz	x0, 40741c <__fxstatat@plt+0x49cc>
  407450:	b	407428 <__fxstatat@plt+0x49d8>
  407454:	stp	x29, x30, [sp, #-48]!
  407458:	mov	x29, sp
  40745c:	stp	x19, x20, [sp, #16]
  407460:	str	x21, [sp, #32]
  407464:	mov	x21, x0
  407468:	mov	x20, x1
  40746c:	bl	402c40 <__fxstatat@plt+0x1f0>
  407470:	and	w19, w0, #0xff
  407474:	mov	x0, x20
  407478:	bl	402c40 <__fxstatat@plt+0x1f0>
  40747c:	and	w2, w0, #0xff
  407480:	eor	w0, w2, #0x1
  407484:	tst	w19, w0
  407488:	b.ne	407504 <__fxstatat@plt+0x4ab4>  // b.any
  40748c:	eor	w19, w19, #0x1
  407490:	mov	w0, #0x1                   	// #1
  407494:	tst	w2, w19
  407498:	b.eq	4074ac <__fxstatat@plt+0x4a5c>  // b.none
  40749c:	ldp	x19, x20, [sp, #16]
  4074a0:	ldr	x21, [sp, #32]
  4074a4:	ldp	x29, x30, [sp], #48
  4074a8:	ret
  4074ac:	ldr	x20, [x20]
  4074b0:	mov	w1, #0x2e                  	// #46
  4074b4:	mov	x0, x20
  4074b8:	bl	402720 <strrchr@plt>
  4074bc:	mov	x19, x0
  4074c0:	ldr	x21, [x21]
  4074c4:	mov	w1, #0x2e                  	// #46
  4074c8:	mov	x0, x21
  4074cc:	bl	402720 <strrchr@plt>
  4074d0:	mov	x1, x0
  4074d4:	cbz	x19, 40750c <__fxstatat@plt+0x4abc>
  4074d8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2af4>
  4074dc:	add	x0, x0, #0x1f0
  4074e0:	cmp	x1, #0x0
  4074e4:	csel	x1, x0, x1, eq  // eq = none
  4074e8:	mov	x0, x19
  4074ec:	bl	402800 <strcmp@plt>
  4074f0:	cbnz	w0, 40749c <__fxstatat@plt+0x4a4c>
  4074f4:	mov	x1, x21
  4074f8:	mov	x0, x20
  4074fc:	bl	402800 <strcmp@plt>
  407500:	b	40749c <__fxstatat@plt+0x4a4c>
  407504:	mov	w0, #0xffffffff            	// #-1
  407508:	b	40749c <__fxstatat@plt+0x4a4c>
  40750c:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2af4>
  407510:	add	x19, x19, #0x1f0
  407514:	cbnz	x0, 4074e8 <__fxstatat@plt+0x4a98>
  407518:	b	4074f4 <__fxstatat@plt+0x4aa4>
  40751c:	stp	x29, x30, [sp, #-48]!
  407520:	mov	x29, sp
  407524:	stp	x19, x20, [sp, #16]
  407528:	str	x21, [sp, #32]
  40752c:	mov	x21, x0
  407530:	mov	x20, x1
  407534:	bl	402c40 <__fxstatat@plt+0x1f0>
  407538:	and	w19, w0, #0xff
  40753c:	mov	x0, x20
  407540:	bl	402c40 <__fxstatat@plt+0x1f0>
  407544:	and	w2, w0, #0xff
  407548:	eor	w0, w2, #0x1
  40754c:	tst	w19, w0
  407550:	b.ne	4075cc <__fxstatat@plt+0x4b7c>  // b.any
  407554:	eor	w19, w19, #0x1
  407558:	mov	w0, #0x1                   	// #1
  40755c:	tst	w2, w19
  407560:	b.eq	407574 <__fxstatat@plt+0x4b24>  // b.none
  407564:	ldp	x19, x20, [sp, #16]
  407568:	ldr	x21, [sp, #32]
  40756c:	ldp	x29, x30, [sp], #48
  407570:	ret
  407574:	mov	w1, #0x2e                  	// #46
  407578:	ldr	x0, [x21]
  40757c:	bl	402720 <strrchr@plt>
  407580:	mov	x19, x0
  407584:	mov	w1, #0x2e                  	// #46
  407588:	ldr	x0, [x20]
  40758c:	bl	402720 <strrchr@plt>
  407590:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  407594:	add	x1, x1, #0x1f0
  407598:	cmp	x19, #0x0
  40759c:	csel	x19, x1, x19, eq  // eq = none
  4075a0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  4075a4:	add	x1, x1, #0x1f0
  4075a8:	cmp	x0, #0x0
  4075ac:	csel	x1, x1, x0, eq  // eq = none
  4075b0:	mov	x0, x19
  4075b4:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4075b8:	cbnz	w0, 407564 <__fxstatat@plt+0x4b14>
  4075bc:	ldr	x1, [x20]
  4075c0:	ldr	x0, [x21]
  4075c4:	bl	404a20 <__fxstatat@plt+0x1fd0>
  4075c8:	b	407564 <__fxstatat@plt+0x4b14>
  4075cc:	mov	w0, #0xffffffff            	// #-1
  4075d0:	b	407564 <__fxstatat@plt+0x4b14>
  4075d4:	stp	x29, x30, [sp, #-48]!
  4075d8:	mov	x29, sp
  4075dc:	stp	x19, x20, [sp, #16]
  4075e0:	str	x21, [sp, #32]
  4075e4:	mov	x21, x0
  4075e8:	mov	x20, x1
  4075ec:	bl	402c40 <__fxstatat@plt+0x1f0>
  4075f0:	and	w19, w0, #0xff
  4075f4:	mov	x0, x20
  4075f8:	bl	402c40 <__fxstatat@plt+0x1f0>
  4075fc:	and	w2, w0, #0xff
  407600:	eor	w0, w2, #0x1
  407604:	tst	w19, w0
  407608:	b.ne	407684 <__fxstatat@plt+0x4c34>  // b.any
  40760c:	eor	w19, w19, #0x1
  407610:	mov	w0, #0x1                   	// #1
  407614:	tst	w2, w19
  407618:	b.eq	40762c <__fxstatat@plt+0x4bdc>  // b.none
  40761c:	ldp	x19, x20, [sp, #16]
  407620:	ldr	x21, [sp, #32]
  407624:	ldp	x29, x30, [sp], #48
  407628:	ret
  40762c:	ldr	x21, [x21]
  407630:	mov	w1, #0x2e                  	// #46
  407634:	mov	x0, x21
  407638:	bl	402720 <strrchr@plt>
  40763c:	mov	x19, x0
  407640:	ldr	x20, [x20]
  407644:	mov	w1, #0x2e                  	// #46
  407648:	mov	x0, x20
  40764c:	bl	402720 <strrchr@plt>
  407650:	mov	x1, x0
  407654:	cbz	x19, 40768c <__fxstatat@plt+0x4c3c>
  407658:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2af4>
  40765c:	add	x0, x0, #0x1f0
  407660:	cmp	x1, #0x0
  407664:	csel	x1, x0, x1, eq  // eq = none
  407668:	mov	x0, x19
  40766c:	bl	402800 <strcmp@plt>
  407670:	cbnz	w0, 40761c <__fxstatat@plt+0x4bcc>
  407674:	mov	x1, x20
  407678:	mov	x0, x21
  40767c:	bl	402800 <strcmp@plt>
  407680:	b	40761c <__fxstatat@plt+0x4bcc>
  407684:	mov	w0, #0xffffffff            	// #-1
  407688:	b	40761c <__fxstatat@plt+0x4bcc>
  40768c:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2af4>
  407690:	add	x19, x19, #0x1f0
  407694:	cbnz	x0, 407668 <__fxstatat@plt+0x4c18>
  407698:	b	407674 <__fxstatat@plt+0x4c24>
  40769c:	stp	x29, x30, [sp, #-64]!
  4076a0:	mov	x29, sp
  4076a4:	stp	x19, x20, [sp, #16]
  4076a8:	stp	x21, x22, [sp, #32]
  4076ac:	mov	x21, x0
  4076b0:	and	w22, w1, #0xff
  4076b4:	cbz	x0, 4076d4 <__fxstatat@plt+0x4c84>
  4076b8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4076bc:	ldr	x0, [x0, #1480]
  4076c0:	cbz	x0, 4076d4 <__fxstatat@plt+0x4c84>
  4076c4:	mov	w2, #0x0                   	// #0
  4076c8:	mov	x1, x21
  4076cc:	mov	x0, #0x0                   	// #0
  4076d0:	bl	4036c0 <__fxstatat@plt+0xc70>
  4076d4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4076d8:	ldr	x1, [x0, #1488]
  4076dc:	sub	x19, x1, #0x1
  4076e0:	cbz	x1, 407804 <__fxstatat@plt+0x4db4>
  4076e4:	stp	x23, x24, [sp, #48]
  4076e8:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4076ec:	add	x23, x23, #0x5c8
  4076f0:	b	40773c <__fxstatat@plt+0x4cec>
  4076f4:	ldrb	w1, [x0, #1]
  4076f8:	cmp	w1, #0x2e
  4076fc:	cinc	x1, x0, eq  // eq = none
  407700:	ldrb	w0, [x1, #1]
  407704:	cmp	w0, #0x2f
  407708:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40770c:	b.eq	407730 <__fxstatat@plt+0x4ce0>  // b.none
  407710:	b	407770 <__fxstatat@plt+0x4d20>
  407714:	mov	w2, w22
  407718:	ldr	x1, [x20, #8]
  40771c:	ldr	x0, [x20]
  407720:	bl	4036c0 <__fxstatat@plt+0xc70>
  407724:	ldr	w0, [x20, #152]
  407728:	cmp	w0, #0x9
  40772c:	b.eq	4077a8 <__fxstatat@plt+0x4d58>  // b.none
  407730:	sub	x19, x19, #0x1
  407734:	cmn	x19, #0x1
  407738:	b.eq	4077c4 <__fxstatat@plt+0x4d74>  // b.none
  40773c:	ldr	x1, [x23, #24]
  407740:	ldr	x20, [x1, x19, lsl #3]
  407744:	ldr	w1, [x20, #152]
  407748:	cmp	w1, #0x3
  40774c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  407750:	b.ne	407730 <__fxstatat@plt+0x4ce0>  // b.any
  407754:	cbz	x21, 407714 <__fxstatat@plt+0x4cc4>
  407758:	ldr	x24, [x20]
  40775c:	mov	x0, x24
  407760:	bl	40b874 <__fxstatat@plt+0x8e24>
  407764:	ldrb	w1, [x0]
  407768:	cmp	w1, #0x2e
  40776c:	b.eq	4076f4 <__fxstatat@plt+0x4ca4>  // b.none
  407770:	ldrb	w0, [x24]
  407774:	cmp	w0, #0x2f
  407778:	b.eq	407714 <__fxstatat@plt+0x4cc4>  // b.none
  40777c:	mov	x2, #0x0                   	// #0
  407780:	mov	x1, x24
  407784:	mov	x0, x21
  407788:	bl	40bc2c <__fxstatat@plt+0x91dc>
  40778c:	mov	x24, x0
  407790:	mov	w2, w22
  407794:	ldr	x1, [x20, #8]
  407798:	bl	4036c0 <__fxstatat@plt+0xc70>
  40779c:	mov	x0, x24
  4077a0:	bl	402840 <free@plt>
  4077a4:	b	407724 <__fxstatat@plt+0x4cd4>
  4077a8:	ldr	x0, [x20]
  4077ac:	bl	402840 <free@plt>
  4077b0:	ldr	x0, [x20, #8]
  4077b4:	bl	402840 <free@plt>
  4077b8:	ldr	x0, [x20, #16]
  4077bc:	bl	402840 <free@plt>
  4077c0:	b	407730 <__fxstatat@plt+0x4ce0>
  4077c4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4077c8:	ldr	x4, [x0, #1488]
  4077cc:	cbz	x4, 40781c <__fxstatat@plt+0x4dcc>
  4077d0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4077d4:	ldr	x3, [x0, #1504]
  4077d8:	mov	x1, #0x0                   	// #0
  4077dc:	mov	x0, #0x0                   	// #0
  4077e0:	ldr	x2, [x3, x0, lsl #3]
  4077e4:	str	x2, [x3, x1, lsl #3]
  4077e8:	ldr	w2, [x2, #152]
  4077ec:	cmp	w2, #0x9
  4077f0:	cinc	x1, x1, ne  // ne = any
  4077f4:	add	x0, x0, #0x1
  4077f8:	cmp	x4, x0
  4077fc:	b.ne	4077e0 <__fxstatat@plt+0x4d90>  // b.any
  407800:	ldp	x23, x24, [sp, #48]
  407804:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407808:	str	x1, [x0, #1488]
  40780c:	ldp	x19, x20, [sp, #16]
  407810:	ldp	x21, x22, [sp, #32]
  407814:	ldp	x29, x30, [sp], #64
  407818:	ret
  40781c:	mov	x1, x4
  407820:	ldp	x23, x24, [sp, #48]
  407824:	b	407804 <__fxstatat@plt+0x4db4>
  407828:	mov	x12, #0x1310                	// #4880
  40782c:	sub	sp, sp, x12
  407830:	stp	x29, x30, [sp]
  407834:	mov	x29, sp
  407838:	stp	x19, x20, [sp, #16]
  40783c:	stp	x21, x22, [sp, #32]
  407840:	mov	x20, x0
  407844:	ldrb	w0, [x0, #168]
  407848:	cbz	w0, 40789c <__fxstatat@plt+0x4e4c>
  40784c:	add	x1, sp, #0x1, lsl #12
  407850:	add	x1, x1, #0x300
  407854:	add	x0, x20, #0x18
  407858:	bl	40bc14 <__fxstatat@plt+0x91c4>
  40785c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407860:	ldrb	w0, [x0, #1517]
  407864:	cbnz	w0, 4078dc <__fxstatat@plt+0x4e8c>
  407868:	add	x0, sp, #0x1, lsl #12
  40786c:	strb	wzr, [x0, #778]
  407870:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407874:	ldr	w0, [x0, #1264]
  407878:	cmp	w0, #0x1
  40787c:	b.eq	407930 <__fxstatat@plt+0x4ee0>  // b.none
  407880:	cmp	w0, #0x2
  407884:	b.ne	407910 <__fxstatat@plt+0x4ec0>  // b.any
  407888:	ldr	x0, [x20, #104]
  40788c:	ldr	x1, [x20, #96]
  407890:	str	x1, [sp, #1200]
  407894:	str	x0, [sp, #1208]
  407898:	b	407940 <__fxstatat@plt+0x4ef0>
  40789c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x4af4>
  4078a0:	add	x0, x0, #0x8
  4078a4:	add	x0, x0, #0x238
  4078a8:	ldr	w1, [x20, #152]
  4078ac:	ldrb	w0, [x0, x1]
  4078b0:	add	x1, sp, #0x1, lsl #12
  4078b4:	strb	w0, [x1, #768]
  4078b8:	mov	x0, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  4078bc:	add	x1, sp, #0x1, lsl #12
  4078c0:	add	x1, x1, #0x400
  4078c4:	stur	x0, [x1, #-255]
  4078c8:	mov	w0, #0x3f3f                	// #16191
  4078cc:	sturh	w0, [x1, #-247]
  4078d0:	add	x0, sp, #0x1, lsl #12
  4078d4:	strb	wzr, [x0, #779]
  4078d8:	b	40785c <__fxstatat@plt+0x4e0c>
  4078dc:	ldr	w0, [x20, #172]
  4078e0:	cmp	w0, #0x1
  4078e4:	b.eq	407900 <__fxstatat@plt+0x4eb0>  // b.none
  4078e8:	cmp	w0, #0x2
  4078ec:	b.ne	407870 <__fxstatat@plt+0x4e20>  // b.any
  4078f0:	mov	w0, #0x2b                  	// #43
  4078f4:	add	x1, sp, #0x1, lsl #12
  4078f8:	strb	w0, [x1, #778]
  4078fc:	b	407870 <__fxstatat@plt+0x4e20>
  407900:	mov	w0, #0x2e                  	// #46
  407904:	add	x1, sp, #0x1, lsl #12
  407908:	strb	w0, [x1, #778]
  40790c:	b	407870 <__fxstatat@plt+0x4e20>
  407910:	cbnz	w0, 407928 <__fxstatat@plt+0x4ed8>
  407914:	ldr	x0, [x20, #120]
  407918:	ldr	x1, [x20, #112]
  40791c:	str	x1, [sp, #1200]
  407920:	str	x0, [sp, #1208]
  407924:	b	407940 <__fxstatat@plt+0x4ef0>
  407928:	stp	x23, x24, [sp, #48]
  40792c:	bl	402760 <abort@plt>
  407930:	ldr	x0, [x20, #136]
  407934:	ldr	x1, [x20, #128]
  407938:	str	x1, [sp, #1200]
  40793c:	str	x0, [sp, #1208]
  407940:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407944:	ldrb	w0, [x0, #860]
  407948:	add	x19, sp, #0x4c0
  40794c:	cbnz	w0, 407af4 <__fxstatat@plt+0x50a4>
  407950:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407954:	ldrb	w0, [x0, #905]
  407958:	cbz	w0, 4079cc <__fxstatat@plt+0x4f7c>
  40795c:	ldrb	w1, [x20, #168]
  407960:	adrp	x22, 415000 <_obstack_memory_used@@Base+0x1af4>
  407964:	add	x22, x22, #0x4e8
  407968:	cbnz	w1, 407b5c <__fxstatat@plt+0x510c>
  40796c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407970:	ldr	w21, [x0, #1524]
  407974:	mov	w1, #0x0                   	// #0
  407978:	mov	x0, x22
  40797c:	bl	40e56c <__fxstatat@plt+0xbb1c>
  407980:	sub	w3, w21, w0
  407984:	cmp	w3, #0x0
  407988:	b.le	4079b8 <__fxstatat@plt+0x4f68>
  40798c:	sub	w2, w3, #0x1
  407990:	add	x2, x2, #0x1
  407994:	add	x2, x19, x2
  407998:	mov	x1, x19
  40799c:	mov	w0, #0x20                  	// #32
  4079a0:	strb	w0, [x1], #1
  4079a4:	cmp	x1, x2
  4079a8:	b.ne	4079a0 <__fxstatat@plt+0x4f50>  // b.any
  4079ac:	sub	w3, w3, #0x1
  4079b0:	add	x3, x3, #0x1
  4079b4:	add	x19, x19, x3
  4079b8:	ldrb	w0, [x22], #1
  4079bc:	strb	w0, [x19], #1
  4079c0:	cbnz	w0, 4079b8 <__fxstatat@plt+0x4f68>
  4079c4:	mov	w0, #0x20                  	// #32
  4079c8:	sturb	w0, [x19, #-1]
  4079cc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4079d0:	ldr	w21, [x0, #1528]
  4079d4:	ldrb	w0, [x20, #168]
  4079d8:	adrp	x6, 415000 <_obstack_memory_used@@Base+0x1af4>
  4079dc:	add	x6, x6, #0x4e8
  4079e0:	cbnz	w0, 407b84 <__fxstatat@plt+0x5134>
  4079e4:	mov	w5, w21
  4079e8:	add	x4, sp, #0x1, lsl #12
  4079ec:	add	x4, x4, #0x300
  4079f0:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  4079f4:	add	x3, x3, #0x528
  4079f8:	mov	x2, #0xffffffffffffffff    	// #-1
  4079fc:	mov	w1, #0x1                   	// #1
  407a00:	mov	x0, x19
  407a04:	bl	402440 <__sprintf_chk@plt>
  407a08:	mov	x0, x19
  407a0c:	bl	402430 <strlen@plt>
  407a10:	add	x19, x19, x0
  407a14:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407a18:	ldrb	w0, [x0, #1464]
  407a1c:	cbnz	w0, 407b98 <__fxstatat@plt+0x5148>
  407a20:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407a24:	ldrb	w0, [x0, #1274]
  407a28:	cbnz	w0, 407a50 <__fxstatat@plt+0x5000>
  407a2c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407a30:	ldrb	w0, [x0, #1275]
  407a34:	cbnz	w0, 407a50 <__fxstatat@plt+0x5000>
  407a38:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407a3c:	ldrb	w0, [x0, #924]
  407a40:	cbnz	w0, 407a50 <__fxstatat@plt+0x5000>
  407a44:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407a48:	ldrb	w0, [x0, #884]
  407a4c:	cbz	w0, 407ab0 <__fxstatat@plt+0x5060>
  407a50:	add	x21, sp, #0x4c0
  407a54:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407a58:	ldr	x1, [x0, #1456]
  407a5c:	mov	x0, x21
  407a60:	bl	402980 <fputs_unlocked@plt>
  407a64:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407a68:	add	x0, x0, #0x5c8
  407a6c:	sub	x19, x19, x21
  407a70:	ldr	x21, [x0, #3888]
  407a74:	add	x19, x19, x21
  407a78:	str	x19, [x0, #3888]
  407a7c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407a80:	ldrb	w0, [x0, #1274]
  407a84:	cbnz	w0, 407bcc <__fxstatat@plt+0x517c>
  407a88:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407a8c:	ldrb	w0, [x0, #1275]
  407a90:	cbnz	w0, 407be4 <__fxstatat@plt+0x5194>
  407a94:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407a98:	ldrb	w0, [x0, #924]
  407a9c:	cbnz	w0, 407c2c <__fxstatat@plt+0x51dc>
  407aa0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407aa4:	ldrb	w0, [x0, #884]
  407aa8:	add	x19, sp, #0x4c0
  407aac:	cbnz	w0, 407c44 <__fxstatat@plt+0x51f4>
  407ab0:	ldrb	w0, [x20, #168]
  407ab4:	cbz	w0, 407d00 <__fxstatat@plt+0x52b0>
  407ab8:	ldr	w0, [x20, #40]
  407abc:	mov	w1, #0xb000                	// #45056
  407ac0:	and	w0, w0, w1
  407ac4:	cmp	w0, #0x2, lsl #12
  407ac8:	b.eq	407c60 <__fxstatat@plt+0x5210>  // b.none
  407acc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407ad0:	ldr	x4, [x0, #1280]
  407ad4:	mov	x3, #0x1                   	// #1
  407ad8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407adc:	ldr	w2, [x0, #928]
  407ae0:	add	x1, sp, #0x88
  407ae4:	ldr	x0, [x20, #72]
  407ae8:	bl	40d324 <__fxstatat@plt+0xa8d4>
  407aec:	mov	x22, x0
  407af0:	b	407d08 <__fxstatat@plt+0x52b8>
  407af4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407af8:	ldr	w19, [x0, #1520]
  407afc:	ldrb	w0, [x20, #168]
  407b00:	cbz	w0, 407b24 <__fxstatat@plt+0x50d4>
  407b04:	ldr	x0, [x20, #32]
  407b08:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x1af4>
  407b0c:	add	x5, x5, #0x4e8
  407b10:	cbz	x0, 407b2c <__fxstatat@plt+0x50dc>
  407b14:	add	x1, sp, #0x88
  407b18:	bl	40df60 <__fxstatat@plt+0xb510>
  407b1c:	mov	x5, x0
  407b20:	b	407b2c <__fxstatat@plt+0x50dc>
  407b24:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x1af4>
  407b28:	add	x5, x5, #0x4e8
  407b2c:	mov	w4, w19
  407b30:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  407b34:	add	x3, x3, #0x520
  407b38:	mov	x2, #0xe3b                 	// #3643
  407b3c:	mov	w1, #0x1                   	// #1
  407b40:	add	x0, sp, #0x4c0
  407b44:	bl	402440 <__sprintf_chk@plt>
  407b48:	add	x0, sp, #0x4c0
  407b4c:	bl	402430 <strlen@plt>
  407b50:	add	x1, sp, #0x4c0
  407b54:	add	x19, x1, x0
  407b58:	b	407950 <__fxstatat@plt+0x4f00>
  407b5c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407b60:	add	x0, x0, #0x5c8
  407b64:	ldr	x4, [x0, #3528]
  407b68:	mov	x3, #0x200                 	// #512
  407b6c:	ldr	w2, [x0, #3536]
  407b70:	add	x1, sp, #0x88
  407b74:	ldr	x0, [x20, #88]
  407b78:	bl	40d324 <__fxstatat@plt+0xa8d4>
  407b7c:	mov	x22, x0
  407b80:	b	40796c <__fxstatat@plt+0x4f1c>
  407b84:	add	x1, sp, #0x88
  407b88:	ldr	w0, [x20, #44]
  407b8c:	bl	40df60 <__fxstatat@plt+0xb510>
  407b90:	mov	x6, x0
  407b94:	b	4079e4 <__fxstatat@plt+0x4f94>
  407b98:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407b9c:	ldr	x3, [x0, #1456]
  407ba0:	mov	x2, #0x2                   	// #2
  407ba4:	mov	x1, #0x1                   	// #1
  407ba8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  407bac:	add	x0, x0, #0x530
  407bb0:	bl	402410 <fwrite_unlocked@plt>
  407bb4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407bb8:	add	x0, x0, #0x5c8
  407bbc:	ldr	x1, [x0, #3888]
  407bc0:	add	x1, x1, #0x2
  407bc4:	str	x1, [x0, #3888]
  407bc8:	b	407a20 <__fxstatat@plt+0x4fd0>
  407bcc:	ldrb	w2, [x20, #168]
  407bd0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407bd4:	ldr	w1, [x0, #1532]
  407bd8:	ldr	w0, [x20, #48]
  407bdc:	bl	405e30 <__fxstatat@plt+0x33e0>
  407be0:	b	407a88 <__fxstatat@plt+0x5038>
  407be4:	ldr	w19, [x20, #52]
  407be8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407bec:	ldr	w21, [x0, #1536]
  407bf0:	ldrb	w0, [x20, #168]
  407bf4:	cbz	w0, 407c14 <__fxstatat@plt+0x51c4>
  407bf8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407bfc:	ldrb	w1, [x0, #840]
  407c00:	mov	x0, #0x0                   	// #0
  407c04:	cbnz	w1, 407c1c <__fxstatat@plt+0x51cc>
  407c08:	mov	w0, w19
  407c0c:	bl	40dd28 <__fxstatat@plt+0xb2d8>
  407c10:	b	407c1c <__fxstatat@plt+0x51cc>
  407c14:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  407c18:	add	x0, x0, #0x4e8
  407c1c:	mov	w2, w21
  407c20:	mov	w1, w19
  407c24:	bl	405d58 <__fxstatat@plt+0x3308>
  407c28:	b	407a94 <__fxstatat@plt+0x5044>
  407c2c:	ldrb	w2, [x20, #168]
  407c30:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407c34:	ldr	w1, [x0, #1540]
  407c38:	ldr	w0, [x20, #48]
  407c3c:	bl	405e30 <__fxstatat@plt+0x33e0>
  407c40:	b	407aa0 <__fxstatat@plt+0x5050>
  407c44:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407c48:	ldr	w2, [x0, #1544]
  407c4c:	mov	x1, #0x0                   	// #0
  407c50:	ldr	x0, [x20, #160]
  407c54:	bl	405d58 <__fxstatat@plt+0x3308>
  407c58:	add	x19, sp, #0x4c0
  407c5c:	b	407ab0 <__fxstatat@plt+0x5060>
  407c60:	stp	x23, x24, [sp, #48]
  407c64:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407c68:	add	x22, x22, #0x5c8
  407c6c:	ldr	w21, [x22, #68]
  407c70:	add	w0, w21, #0x2
  407c74:	ldr	w1, [x22, #72]
  407c78:	add	w1, w0, w1
  407c7c:	ldr	w0, [x22, #76]
  407c80:	subs	w0, w0, w1
  407c84:	csel	w0, w0, wzr, pl  // pl = nfrst
  407c88:	add	w21, w0, w21
  407c8c:	ldr	x1, [x20, #56]
  407c90:	ubfx	w2, w1, #8, #12
  407c94:	lsr	x1, x1, #32
  407c98:	and	w0, w1, #0xfffff000
  407c9c:	add	x1, sp, #0x50
  407ca0:	orr	w0, w0, w2
  407ca4:	bl	40df60 <__fxstatat@plt+0xb510>
  407ca8:	mov	x23, x0
  407cac:	ldr	w24, [x22, #72]
  407cb0:	ldr	x2, [x20, #56]
  407cb4:	lsr	x0, x2, #12
  407cb8:	add	x1, sp, #0x88
  407cbc:	bfxil	x0, x2, #0, #8
  407cc0:	bl	40df60 <__fxstatat@plt+0xb510>
  407cc4:	mov	x7, x0
  407cc8:	mov	w6, w24
  407ccc:	mov	x5, x23
  407cd0:	mov	w4, w21
  407cd4:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  407cd8:	add	x3, x3, #0x538
  407cdc:	mov	x2, #0xffffffffffffffff    	// #-1
  407ce0:	mov	w1, #0x1                   	// #1
  407ce4:	mov	x0, x19
  407ce8:	bl	402440 <__sprintf_chk@plt>
  407cec:	ldrsw	x0, [x22, #76]
  407cf0:	add	x0, x0, #0x1
  407cf4:	add	x19, x19, x0
  407cf8:	ldp	x23, x24, [sp, #48]
  407cfc:	b	407d68 <__fxstatat@plt+0x5318>
  407d00:	adrp	x22, 415000 <_obstack_memory_used@@Base+0x1af4>
  407d04:	add	x22, x22, #0x4e8
  407d08:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407d0c:	ldr	w21, [x0, #1556]
  407d10:	mov	w1, #0x0                   	// #0
  407d14:	mov	x0, x22
  407d18:	bl	40e56c <__fxstatat@plt+0xbb1c>
  407d1c:	sub	w3, w21, w0
  407d20:	cmp	w3, #0x0
  407d24:	b.le	407d54 <__fxstatat@plt+0x5304>
  407d28:	sub	w2, w3, #0x1
  407d2c:	add	x2, x2, #0x1
  407d30:	add	x2, x19, x2
  407d34:	mov	x1, x19
  407d38:	mov	w0, #0x20                  	// #32
  407d3c:	strb	w0, [x1], #1
  407d40:	cmp	x1, x2
  407d44:	b.ne	407d3c <__fxstatat@plt+0x52ec>  // b.any
  407d48:	sub	w3, w3, #0x1
  407d4c:	add	x3, x3, #0x1
  407d50:	add	x19, x19, x3
  407d54:	ldrb	w0, [x22], #1
  407d58:	strb	w0, [x19], #1
  407d5c:	cbnz	w0, 407d54 <__fxstatat@plt+0x5304>
  407d60:	mov	w0, #0x20                  	// #32
  407d64:	sturb	w0, [x19, #-1]
  407d68:	mov	w0, #0x1                   	// #1
  407d6c:	strb	w0, [x19]
  407d70:	ldrb	w0, [x20, #168]
  407d74:	cbnz	w0, 407dc0 <__fxstatat@plt+0x5370>
  407d78:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407d7c:	ldr	w0, [x0, #1288]
  407d80:	tbnz	w0, #31, 407f88 <__fxstatat@plt+0x5538>
  407d84:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407d88:	ldr	w21, [x0, #1288]
  407d8c:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x1af4>
  407d90:	add	x5, x5, #0x4e8
  407d94:	mov	w4, w21
  407d98:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  407d9c:	add	x3, x3, #0x520
  407da0:	mov	x2, #0xffffffffffffffff    	// #-1
  407da4:	mov	w1, #0x1                   	// #1
  407da8:	mov	x0, x19
  407dac:	bl	402440 <__sprintf_chk@plt>
  407db0:	mov	x0, x19
  407db4:	bl	402430 <strlen@plt>
  407db8:	add	x21, x19, x0
  407dbc:	b	407e94 <__fxstatat@plt+0x5444>
  407dc0:	add	x2, sp, #0x478
  407dc4:	add	x1, sp, #0x4b0
  407dc8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407dcc:	ldr	x0, [x0, #1488]
  407dd0:	bl	4138f4 <_obstack_memory_used@@Base+0x3e8>
  407dd4:	cbz	x0, 407e74 <__fxstatat@plt+0x5424>
  407dd8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407ddc:	ldr	x2, [x0, #1496]
  407de0:	ldr	x1, [sp, #1200]
  407de4:	cmp	x2, x1
  407de8:	b.lt	407f10 <__fxstatat@plt+0x54c0>  // b.tstop
  407dec:	b.gt	4080d0 <__fxstatat@plt+0x5680>
  407df0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407df4:	ldr	x3, [x0, #1504]
  407df8:	ldr	x5, [sp, #1208]
  407dfc:	cmp	w3, w5
  407e00:	b.mi	407f10 <__fxstatat@plt+0x54c0>  // b.first
  407e04:	sub	x4, x2, #0xf0c, lsl #12
  407e08:	sub	x4, x4, #0x2ac
  407e0c:	cmp	x4, x1
  407e10:	b.lt	407f50 <__fxstatat@plt+0x5500>  // b.tstop
  407e14:	mov	w0, #0x0                   	// #0
  407e18:	cmp	x4, x1
  407e1c:	b.gt	407e28 <__fxstatat@plt+0x53d8>
  407e20:	cmp	w3, w5
  407e24:	b.mi	407f40 <__fxstatat@plt+0x54f0>  // b.first
  407e28:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  407e2c:	ldr	x4, [x1, #1488]
  407e30:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  407e34:	ldrb	w1, [x1, #552]
  407e38:	cbz	w1, 407f64 <__fxstatat@plt+0x5514>
  407e3c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407e40:	add	x1, x1, #0x5c8
  407e44:	sxtw	x0, w0
  407e48:	lsl	x2, x0, #1
  407e4c:	add	x0, x2, x0
  407e50:	ldrsw	x2, [sp, #1160]
  407e54:	add	x2, x2, x0, lsl #2
  407e58:	add	x0, x1, #0x60
  407e5c:	add	x2, x0, x2, lsl #7
  407e60:	add	x3, sp, #0x478
  407e64:	mov	x1, #0x3e9                 	// #1001
  407e68:	mov	x0, x19
  407e6c:	bl	4100f8 <__fxstatat@plt+0xd6a8>
  407e70:	cbnz	x0, 407e80 <__fxstatat@plt+0x5430>
  407e74:	ldrb	w0, [x19]
  407e78:	cbnz	w0, 407f7c <__fxstatat@plt+0x552c>
  407e7c:	mov	x0, #0x0                   	// #0
  407e80:	add	x1, x19, x0
  407e84:	add	x21, x1, #0x1
  407e88:	mov	w2, #0x20                  	// #32
  407e8c:	strb	w2, [x19, x0]
  407e90:	strb	wzr, [x1, #1]
  407e94:	add	x19, sp, #0x4c0
  407e98:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407e9c:	ldr	x1, [x0, #1456]
  407ea0:	mov	x0, x19
  407ea4:	bl	402980 <fputs_unlocked@plt>
  407ea8:	sub	x19, x21, x19
  407eac:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407eb0:	add	x0, x0, #0x5c8
  407eb4:	ldr	x1, [x0, #3888]
  407eb8:	add	x1, x1, x19
  407ebc:	str	x1, [x0, #3888]
  407ec0:	mov	x3, x19
  407ec4:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  407ec8:	add	x2, x2, #0x6c8
  407ecc:	sub	x2, x2, #0xe0
  407ed0:	mov	w1, #0x0                   	// #0
  407ed4:	mov	x0, x20
  407ed8:	bl	4061e4 <__fxstatat@plt+0x3794>
  407edc:	mov	x21, x0
  407ee0:	ldr	w2, [x20, #152]
  407ee4:	cmp	w2, #0x6
  407ee8:	b.eq	408054 <__fxstatat@plt+0x5604>  // b.none
  407eec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407ef0:	ldr	w0, [x0, #1512]
  407ef4:	cbnz	w0, 4080c0 <__fxstatat@plt+0x5670>
  407ef8:	ldp	x19, x20, [sp, #16]
  407efc:	ldp	x21, x22, [sp, #32]
  407f00:	ldp	x29, x30, [sp]
  407f04:	mov	x12, #0x1310                	// #4880
  407f08:	add	sp, sp, x12
  407f0c:	ret
  407f10:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0xa48>
  407f14:	add	x21, x21, #0x6c8
  407f18:	sub	x0, x21, #0xf0
  407f1c:	bl	40c1dc <__fxstatat@plt+0x978c>
  407f20:	ldur	x2, [x21, #-240]
  407f24:	sub	x4, x2, #0xf0c, lsl #12
  407f28:	sub	x4, x4, #0x2ac
  407f2c:	ldur	x3, [x21, #-232]
  407f30:	ldr	x1, [sp, #1200]
  407f34:	ldr	x5, [sp, #1208]
  407f38:	cmp	x4, x1
  407f3c:	b.ge	407e14 <__fxstatat@plt+0x53c4>  // b.tcont
  407f40:	cmp	x2, x1
  407f44:	b.gt	407f5c <__fxstatat@plt+0x550c>
  407f48:	mov	w0, #0x0                   	// #0
  407f4c:	b.lt	407e28 <__fxstatat@plt+0x53d8>  // b.tstop
  407f50:	sub	w0, w5, w3
  407f54:	lsr	w0, w0, #31
  407f58:	b	407e28 <__fxstatat@plt+0x53d8>
  407f5c:	mov	w0, #0x1                   	// #1
  407f60:	b	407e28 <__fxstatat@plt+0x53d8>
  407f64:	sxtw	x0, w0
  407f68:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407f6c:	add	x1, x1, #0x368
  407f70:	add	x0, x1, x0, lsl #3
  407f74:	ldr	x2, [x0, #384]
  407f78:	b	407e60 <__fxstatat@plt+0x5410>
  407f7c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407f80:	ldr	w0, [x0, #1288]
  407f84:	tbz	w0, #31, 407ff0 <__fxstatat@plt+0x55a0>
  407f88:	str	xzr, [sp, #72]
  407f8c:	add	x2, sp, #0x50
  407f90:	add	x1, sp, #0x48
  407f94:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407f98:	ldr	x0, [x0, #1488]
  407f9c:	bl	4138f4 <_obstack_memory_used@@Base+0x3e8>
  407fa0:	cbz	x0, 407fe4 <__fxstatat@plt+0x5594>
  407fa4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407fa8:	ldr	x4, [x0, #1488]
  407fac:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  407fb0:	ldrb	w0, [x0, #552]
  407fb4:	cbz	w0, 408014 <__fxstatat@plt+0x55c4>
  407fb8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407fbc:	add	x0, x0, #0x5c8
  407fc0:	ldrsw	x2, [sp, #96]
  407fc4:	add	x0, x0, #0x60
  407fc8:	add	x2, x0, x2, lsl #7
  407fcc:	mov	w5, #0x0                   	// #0
  407fd0:	add	x3, sp, #0x50
  407fd4:	mov	x1, #0x3e9                 	// #1001
  407fd8:	add	x0, sp, #0x88
  407fdc:	bl	4100f8 <__fxstatat@plt+0xd6a8>
  407fe0:	cbnz	x0, 408020 <__fxstatat@plt+0x55d0>
  407fe4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407fe8:	ldr	w0, [x0, #1288]
  407fec:	tbnz	w0, #31, 40803c <__fxstatat@plt+0x55ec>
  407ff0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  407ff4:	ldr	w21, [x0, #1288]
  407ff8:	ldrb	w0, [x20, #168]
  407ffc:	cbz	w0, 408048 <__fxstatat@plt+0x55f8>
  408000:	add	x1, sp, #0x88
  408004:	ldr	x0, [sp, #1200]
  408008:	bl	40dee0 <__fxstatat@plt+0xb490>
  40800c:	mov	x5, x0
  408010:	b	407d94 <__fxstatat@plt+0x5344>
  408014:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408018:	ldr	x2, [x0, #1256]
  40801c:	b	407fcc <__fxstatat@plt+0x557c>
  408020:	mov	w2, #0x0                   	// #0
  408024:	mov	x1, x0
  408028:	add	x0, sp, #0x88
  40802c:	bl	40e388 <__fxstatat@plt+0xb938>
  408030:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408034:	str	w0, [x1, #1288]
  408038:	b	407fe4 <__fxstatat@plt+0x5594>
  40803c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408040:	str	wzr, [x0, #1288]
  408044:	b	407ff0 <__fxstatat@plt+0x55a0>
  408048:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x1af4>
  40804c:	add	x5, x5, #0x4e8
  408050:	b	407d94 <__fxstatat@plt+0x5344>
  408054:	ldr	x0, [x20, #8]
  408058:	cbz	x0, 407ef8 <__fxstatat@plt+0x54a8>
  40805c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408060:	ldr	x3, [x0, #1456]
  408064:	mov	x2, #0x4                   	// #4
  408068:	mov	x1, #0x1                   	// #1
  40806c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  408070:	add	x0, x0, #0x548
  408074:	bl	402410 <fwrite_unlocked@plt>
  408078:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40807c:	add	x22, x22, #0x5c8
  408080:	ldr	x0, [x22, #3888]
  408084:	add	x0, x0, #0x4
  408088:	str	x0, [x22, #3888]
  40808c:	add	x3, x21, #0x4
  408090:	add	x3, x3, x19
  408094:	mov	x2, #0x0                   	// #0
  408098:	mov	w1, #0x1                   	// #1
  40809c:	mov	x0, x20
  4080a0:	bl	4061e4 <__fxstatat@plt+0x3794>
  4080a4:	ldr	w0, [x22, #32]
  4080a8:	cbz	w0, 407ef8 <__fxstatat@plt+0x54a8>
  4080ac:	mov	w2, #0x0                   	// #0
  4080b0:	ldr	w1, [x20, #156]
  4080b4:	mov	w0, #0x1                   	// #1
  4080b8:	bl	404ee8 <__fxstatat@plt+0x2498>
  4080bc:	b	407ef8 <__fxstatat@plt+0x54a8>
  4080c0:	ldr	w1, [x20, #40]
  4080c4:	ldrb	w0, [x20, #168]
  4080c8:	bl	404ee8 <__fxstatat@plt+0x2498>
  4080cc:	b	407ef8 <__fxstatat@plt+0x54a8>
  4080d0:	sub	x4, x2, #0xf0c, lsl #12
  4080d4:	sub	x4, x4, #0x2ac
  4080d8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4080dc:	ldr	x3, [x0, #1504]
  4080e0:	ldr	x5, [sp, #1208]
  4080e4:	cmp	x1, x4
  4080e8:	b.le	407e14 <__fxstatat@plt+0x53c4>
  4080ec:	mov	w0, #0x1                   	// #1
  4080f0:	b	407e28 <__fxstatat@plt+0x53d8>
  4080f4:	stp	x29, x30, [sp, #-96]!
  4080f8:	mov	x29, sp
  4080fc:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408100:	ldr	w0, [x0, #880]
  408104:	cmp	w0, #0x2
  408108:	b.eq	40824c <__fxstatat@plt+0x57fc>  // b.none
  40810c:	cmp	w0, #0x2
  408110:	b.ls	408134 <__fxstatat@plt+0x56e4>  // b.plast
  408114:	cmp	w0, #0x3
  408118:	b.eq	40835c <__fxstatat@plt+0x590c>  // b.none
  40811c:	cmp	w0, #0x4
  408120:	b.ne	40812c <__fxstatat@plt+0x56dc>  // b.any
  408124:	mov	w0, #0x2c                  	// #44
  408128:	bl	406744 <__fxstatat@plt+0x3cf4>
  40812c:	ldp	x29, x30, [sp], #96
  408130:	ret
  408134:	stp	x19, x20, [sp, #16]
  408138:	cbz	w0, 4081b8 <__fxstatat@plt+0x5768>
  40813c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408140:	ldr	x0, [x0, #1488]
  408144:	mov	x19, #0x0                   	// #0
  408148:	cbz	x0, 4084f4 <__fxstatat@plt+0x5aa4>
  40814c:	stp	x21, x22, [sp, #32]
  408150:	stp	x23, x24, [sp, #48]
  408154:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408158:	add	x20, x20, #0x5c8
  40815c:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408160:	mov	w22, #0xa                   	// #10
  408164:	mov	w23, #0xa                   	// #10
  408168:	ldr	x0, [x20, #24]
  40816c:	mov	x1, #0x0                   	// #0
  408170:	ldr	x0, [x0, x19, lsl #3]
  408174:	bl	4065ac <__fxstatat@plt+0x3b5c>
  408178:	ldr	x0, [x21, #1456]
  40817c:	ldr	x1, [x0, #40]
  408180:	ldr	x2, [x0, #48]
  408184:	cmp	x1, x2
  408188:	b.cs	408240 <__fxstatat@plt+0x57f0>  // b.hs, b.nlast
  40818c:	add	x2, x1, #0x1
  408190:	str	x2, [x0, #40]
  408194:	strb	w22, [x1]
  408198:	add	x19, x19, #0x1
  40819c:	ldr	x0, [x20, #8]
  4081a0:	cmp	x0, x19
  4081a4:	b.hi	408168 <__fxstatat@plt+0x5718>  // b.pmore
  4081a8:	ldp	x19, x20, [sp, #16]
  4081ac:	ldp	x21, x22, [sp, #32]
  4081b0:	ldp	x23, x24, [sp, #48]
  4081b4:	b	40812c <__fxstatat@plt+0x56dc>
  4081b8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4081bc:	ldr	x0, [x0, #1488]
  4081c0:	mov	x20, #0x0                   	// #0
  4081c4:	cbz	x0, 4084fc <__fxstatat@plt+0x5aac>
  4081c8:	stp	x21, x22, [sp, #32]
  4081cc:	stp	x23, x24, [sp, #48]
  4081d0:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4081d4:	add	x19, x19, #0x5c8
  4081d8:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4081dc:	mov	w22, #0xa                   	// #10
  4081e0:	mov	w23, #0xa                   	// #10
  4081e4:	bl	405b20 <__fxstatat@plt+0x30d0>
  4081e8:	ldr	x0, [x19, #24]
  4081ec:	ldr	x0, [x0, x20, lsl #3]
  4081f0:	bl	407828 <__fxstatat@plt+0x4dd8>
  4081f4:	ldr	x0, [x21, #1456]
  4081f8:	ldr	x1, [x0, #40]
  4081fc:	ldr	x2, [x0, #48]
  408200:	cmp	x1, x2
  408204:	b.cs	4084e8 <__fxstatat@plt+0x5a98>  // b.hs, b.nlast
  408208:	add	x2, x1, #0x1
  40820c:	str	x2, [x0, #40]
  408210:	strb	w22, [x1]
  408214:	ldr	x0, [x19, #3888]
  408218:	add	x0, x0, #0x1
  40821c:	str	x0, [x19, #3888]
  408220:	add	x20, x20, #0x1
  408224:	ldr	x0, [x19, #8]
  408228:	cmp	x0, x20
  40822c:	b.hi	4081e4 <__fxstatat@plt+0x5794>  // b.pmore
  408230:	ldp	x19, x20, [sp, #16]
  408234:	ldp	x21, x22, [sp, #32]
  408238:	ldp	x23, x24, [sp, #48]
  40823c:	b	40812c <__fxstatat@plt+0x56dc>
  408240:	mov	w1, w23
  408244:	bl	402780 <__overflow@plt>
  408248:	b	408198 <__fxstatat@plt+0x5748>
  40824c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408250:	ldr	x0, [x0, #1568]
  408254:	cbnz	x0, 408264 <__fxstatat@plt+0x5814>
  408258:	mov	w0, #0x20                  	// #32
  40825c:	bl	406744 <__fxstatat@plt+0x3cf4>
  408260:	b	40812c <__fxstatat@plt+0x56dc>
  408264:	stp	x25, x26, [sp, #64]
  408268:	stp	x27, x28, [sp, #80]
  40826c:	mov	w0, #0x1                   	// #1
  408270:	bl	405648 <__fxstatat@plt+0x2bf8>
  408274:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408278:	add	x2, x2, #0x5c8
  40827c:	add	x28, x0, x0, lsl #1
  408280:	lsl	x28, x28, #3
  408284:	sub	x1, x28, #0x18
  408288:	ldr	x28, [x2, #3928]
  40828c:	add	x28, x28, x1
  408290:	ldr	x1, [x2, #8]
  408294:	udiv	x27, x1, x0
  408298:	msub	x0, x27, x0, x1
  40829c:	cmp	x0, #0x0
  4082a0:	cinc	x27, x27, ne  // ne = any
  4082a4:	mov	x26, #0x0                   	// #0
  4082a8:	cbz	x27, 408504 <__fxstatat@plt+0x5ab4>
  4082ac:	stp	x19, x20, [sp, #16]
  4082b0:	stp	x21, x22, [sp, #32]
  4082b4:	stp	x23, x24, [sp, #48]
  4082b8:	mov	x24, x2
  4082bc:	b	4082f4 <__fxstatat@plt+0x58a4>
  4082c0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4082c4:	ldr	x0, [x0, #1456]
  4082c8:	ldr	x1, [x0, #40]
  4082cc:	ldr	x2, [x0, #48]
  4082d0:	cmp	x1, x2
  4082d4:	b.cs	408350 <__fxstatat@plt+0x5900>  // b.hs, b.nlast
  4082d8:	add	x2, x1, #0x1
  4082dc:	str	x2, [x0, #40]
  4082e0:	mov	w0, #0xa                   	// #10
  4082e4:	strb	w0, [x1]
  4082e8:	add	x26, x26, #0x1
  4082ec:	cmp	x27, x26
  4082f0:	b.eq	408510 <__fxstatat@plt+0x5ac0>  // b.none
  4082f4:	mov	x21, x26
  4082f8:	mov	x22, #0x0                   	// #0
  4082fc:	mov	x20, #0x0                   	// #0
  408300:	ldr	x0, [x24, #24]
  408304:	ldr	x23, [x0, x21, lsl #3]
  408308:	mov	x0, x23
  40830c:	bl	4054d0 <__fxstatat@plt+0x2a80>
  408310:	mov	x19, x0
  408314:	ldr	x0, [x28, #16]
  408318:	ldr	x25, [x0, x22]
  40831c:	mov	x1, x20
  408320:	mov	x0, x23
  408324:	bl	4065ac <__fxstatat@plt+0x3b5c>
  408328:	add	x21, x21, x27
  40832c:	add	x22, x22, #0x8
  408330:	ldr	x0, [x24, #8]
  408334:	cmp	x21, x0
  408338:	b.cs	4082c0 <__fxstatat@plt+0x5870>  // b.hs, b.nlast
  40833c:	add	x0, x19, x20
  408340:	add	x20, x20, x25
  408344:	mov	x1, x20
  408348:	bl	404f5c <__fxstatat@plt+0x250c>
  40834c:	b	408300 <__fxstatat@plt+0x58b0>
  408350:	mov	w1, #0xa                   	// #10
  408354:	bl	402780 <__overflow@plt>
  408358:	b	4082e8 <__fxstatat@plt+0x5898>
  40835c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408360:	ldr	x0, [x0, #1568]
  408364:	cbnz	x0, 408374 <__fxstatat@plt+0x5924>
  408368:	mov	w0, #0x20                  	// #32
  40836c:	bl	406744 <__fxstatat@plt+0x3cf4>
  408370:	b	40812c <__fxstatat@plt+0x56dc>
  408374:	stp	x19, x20, [sp, #16]
  408378:	stp	x21, x22, [sp, #32]
  40837c:	stp	x23, x24, [sp, #48]
  408380:	stp	x25, x26, [sp, #64]
  408384:	mov	w0, #0x0                   	// #0
  408388:	bl	405648 <__fxstatat@plt+0x2bf8>
  40838c:	mov	x23, x0
  408390:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408394:	add	x19, x19, #0x5c8
  408398:	add	x25, x0, x0, lsl #1
  40839c:	lsl	x25, x25, #3
  4083a0:	sub	x0, x25, #0x18
  4083a4:	ldr	x25, [x19, #3928]
  4083a8:	add	x25, x25, x0
  4083ac:	ldr	x0, [x19, #24]
  4083b0:	ldr	x20, [x0]
  4083b4:	mov	x0, x20
  4083b8:	bl	4054d0 <__fxstatat@plt+0x2a80>
  4083bc:	mov	x21, x0
  4083c0:	ldr	x0, [x25, #16]
  4083c4:	ldr	x26, [x0]
  4083c8:	mov	x1, #0x0                   	// #0
  4083cc:	mov	x0, x20
  4083d0:	bl	4065ac <__fxstatat@plt+0x3b5c>
  4083d4:	ldr	x0, [x19, #8]
  4083d8:	cmp	x0, #0x1
  4083dc:	b.ls	408490 <__fxstatat@plt+0x5a40>  // b.plast
  4083e0:	stp	x27, x28, [sp, #80]
  4083e4:	mov	x22, #0x0                   	// #0
  4083e8:	mov	x19, #0x1                   	// #1
  4083ec:	adrp	x27, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4083f0:	mov	w28, #0xa                   	// #10
  4083f4:	adrp	x24, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4083f8:	add	x24, x24, #0x5c8
  4083fc:	b	408458 <__fxstatat@plt+0x5a08>
  408400:	mov	w1, #0xa                   	// #10
  408404:	bl	402780 <__overflow@plt>
  408408:	mov	x22, x20
  40840c:	b	408420 <__fxstatat@plt+0x59d0>
  408410:	add	x0, x22, x21
  408414:	add	x22, x22, x26
  408418:	mov	x1, x22
  40841c:	bl	404f5c <__fxstatat@plt+0x250c>
  408420:	ldr	x0, [x24, #24]
  408424:	ldr	x21, [x0, x19, lsl #3]
  408428:	mov	x1, x22
  40842c:	mov	x0, x21
  408430:	bl	4065ac <__fxstatat@plt+0x3b5c>
  408434:	mov	x0, x21
  408438:	bl	4054d0 <__fxstatat@plt+0x2a80>
  40843c:	mov	x21, x0
  408440:	ldr	x0, [x25, #16]
  408444:	ldr	x26, [x0, x20, lsl #3]
  408448:	add	x19, x19, #0x1
  40844c:	ldr	x0, [x24, #8]
  408450:	cmp	x19, x0
  408454:	b.cs	40848c <__fxstatat@plt+0x5a3c>  // b.hs, b.nlast
  408458:	udiv	x20, x19, x23
  40845c:	msub	x20, x20, x23, x19
  408460:	cbnz	x20, 408410 <__fxstatat@plt+0x59c0>
  408464:	ldr	x0, [x27, #1456]
  408468:	ldr	x1, [x0, #40]
  40846c:	ldr	x2, [x0, #48]
  408470:	cmp	x1, x2
  408474:	b.cs	408400 <__fxstatat@plt+0x59b0>  // b.hs, b.nlast
  408478:	add	x2, x1, #0x1
  40847c:	str	x2, [x0, #40]
  408480:	strb	w28, [x1]
  408484:	mov	x22, x20
  408488:	b	408420 <__fxstatat@plt+0x59d0>
  40848c:	ldp	x27, x28, [sp, #80]
  408490:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408494:	ldr	x0, [x0, #1456]
  408498:	ldr	x1, [x0, #40]
  40849c:	ldr	x2, [x0, #48]
  4084a0:	cmp	x1, x2
  4084a4:	b.cs	4084cc <__fxstatat@plt+0x5a7c>  // b.hs, b.nlast
  4084a8:	add	x2, x1, #0x1
  4084ac:	str	x2, [x0, #40]
  4084b0:	mov	w0, #0xa                   	// #10
  4084b4:	strb	w0, [x1]
  4084b8:	ldp	x19, x20, [sp, #16]
  4084bc:	ldp	x21, x22, [sp, #32]
  4084c0:	ldp	x23, x24, [sp, #48]
  4084c4:	ldp	x25, x26, [sp, #64]
  4084c8:	b	40812c <__fxstatat@plt+0x56dc>
  4084cc:	mov	w1, #0xa                   	// #10
  4084d0:	bl	402780 <__overflow@plt>
  4084d4:	ldp	x19, x20, [sp, #16]
  4084d8:	ldp	x21, x22, [sp, #32]
  4084dc:	ldp	x23, x24, [sp, #48]
  4084e0:	ldp	x25, x26, [sp, #64]
  4084e4:	b	40812c <__fxstatat@plt+0x56dc>
  4084e8:	mov	w1, w23
  4084ec:	bl	402780 <__overflow@plt>
  4084f0:	b	408214 <__fxstatat@plt+0x57c4>
  4084f4:	ldp	x19, x20, [sp, #16]
  4084f8:	b	40812c <__fxstatat@plt+0x56dc>
  4084fc:	ldp	x19, x20, [sp, #16]
  408500:	b	40812c <__fxstatat@plt+0x56dc>
  408504:	ldp	x25, x26, [sp, #64]
  408508:	ldp	x27, x28, [sp, #80]
  40850c:	b	40812c <__fxstatat@plt+0x56dc>
  408510:	ldp	x19, x20, [sp, #16]
  408514:	ldp	x21, x22, [sp, #32]
  408518:	ldp	x23, x24, [sp, #48]
  40851c:	ldp	x25, x26, [sp, #64]
  408520:	ldp	x27, x28, [sp, #80]
  408524:	b	40812c <__fxstatat@plt+0x56dc>
  408528:	sub	sp, sp, #0x300
  40852c:	stp	x29, x30, [sp]
  408530:	mov	x29, sp
  408534:	stp	x19, x20, [sp, #16]
  408538:	stp	x21, x22, [sp, #32]
  40853c:	stp	x23, x24, [sp, #48]
  408540:	mov	x24, x0
  408544:	mov	x19, x1
  408548:	and	w0, w2, #0xff
  40854c:	str	w0, [sp, #100]
  408550:	bl	4029e0 <__errno_location@plt>
  408554:	mov	x22, x0
  408558:	str	wzr, [x0]
  40855c:	mov	x0, x24
  408560:	bl	4024f0 <opendir@plt>
  408564:	cbz	x0, 408638 <__fxstatat@plt+0x5be8>
  408568:	stp	x25, x26, [sp, #64]
  40856c:	mov	x23, x0
  408570:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408574:	ldr	x0, [x0, #1480]
  408578:	cbz	x0, 4086cc <__fxstatat@plt+0x5c7c>
  40857c:	mov	x0, x23
  408580:	bl	4028e0 <dirfd@plt>
  408584:	mov	w1, w0
  408588:	tbnz	w0, #31, 408660 <__fxstatat@plt+0x5c10>
  40858c:	add	x2, sp, #0x70
  408590:	mov	w0, #0x0                   	// #0
  408594:	bl	402960 <__fxstat@plt>
  408598:	lsr	w0, w0, #31
  40859c:	cbnz	w0, 408678 <__fxstatat@plt+0x5c28>
  4085a0:	ldr	x21, [sp, #112]
  4085a4:	ldr	x25, [sp, #120]
  4085a8:	mov	x0, #0x10                  	// #16
  4085ac:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  4085b0:	mov	x20, x0
  4085b4:	str	x25, [x0]
  4085b8:	str	x21, [x0, #8]
  4085bc:	mov	x1, x0
  4085c0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4085c4:	ldr	x0, [x0, #1480]
  4085c8:	bl	40d03c <__fxstatat@plt+0xa5ec>
  4085cc:	cbz	x0, 4086ac <__fxstatat@plt+0x5c5c>
  4085d0:	cmp	x20, x0
  4085d4:	b.eq	408aec <__fxstatat@plt+0x609c>  // b.none
  4085d8:	mov	x0, x20
  4085dc:	bl	402840 <free@plt>
  4085e0:	mov	w2, #0x5                   	// #5
  4085e4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  4085e8:	add	x1, x1, #0x598
  4085ec:	mov	x0, #0x0                   	// #0
  4085f0:	bl	402970 <dcgettext@plt>
  4085f4:	mov	x19, x0
  4085f8:	mov	x2, x24
  4085fc:	mov	w1, #0x3                   	// #3
  408600:	mov	w0, #0x0                   	// #0
  408604:	bl	411a48 <__fxstatat@plt+0xeff8>
  408608:	mov	x3, x0
  40860c:	mov	x2, x19
  408610:	mov	w1, #0x0                   	// #0
  408614:	mov	w0, #0x0                   	// #0
  408618:	bl	402490 <error@plt>
  40861c:	mov	x0, x23
  408620:	bl	402700 <closedir@plt>
  408624:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408628:	mov	w1, #0x2                   	// #2
  40862c:	str	w1, [x0, #568]
  408630:	ldp	x25, x26, [sp, #64]
  408634:	b	408a40 <__fxstatat@plt+0x5ff0>
  408638:	mov	w2, #0x5                   	// #5
  40863c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408640:	add	x1, x1, #0x550
  408644:	mov	x0, #0x0                   	// #0
  408648:	bl	402970 <dcgettext@plt>
  40864c:	mov	x2, x24
  408650:	mov	x1, x0
  408654:	ldrb	w0, [sp, #100]
  408658:	bl	4039f8 <__fxstatat@plt+0xfa8>
  40865c:	b	408a40 <__fxstatat@plt+0x5ff0>
  408660:	add	x2, sp, #0x70
  408664:	mov	x1, x24
  408668:	mov	w0, #0x0                   	// #0
  40866c:	bl	402a00 <__xstat@plt>
  408670:	lsr	w0, w0, #31
  408674:	b	40859c <__fxstatat@plt+0x5b4c>
  408678:	mov	w2, #0x5                   	// #5
  40867c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408680:	add	x1, x1, #0x570
  408684:	mov	x0, #0x0                   	// #0
  408688:	bl	402970 <dcgettext@plt>
  40868c:	mov	x2, x24
  408690:	mov	x1, x0
  408694:	ldrb	w0, [sp, #100]
  408698:	bl	4039f8 <__fxstatat@plt+0xfa8>
  40869c:	mov	x0, x23
  4086a0:	bl	402700 <closedir@plt>
  4086a4:	ldp	x25, x26, [sp, #64]
  4086a8:	b	408a40 <__fxstatat@plt+0x5ff0>
  4086ac:	stp	x27, x28, [sp, #80]
  4086b0:	bl	412584 <__fxstatat@plt+0xfb34>
  4086b4:	mov	x1, #0x10                  	// #16
  4086b8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4086bc:	add	x0, x0, #0x6c8
  4086c0:	sub	x0, x0, #0x88
  4086c4:	bl	41333c <_obstack_newchunk@@Base>
  4086c8:	b	408b14 <__fxstatat@plt+0x60c4>
  4086cc:	stp	x27, x28, [sp, #80]
  4086d0:	b	408b30 <__fxstatat@plt+0x60e0>
  4086d4:	mov	w1, #0xa                   	// #10
  4086d8:	bl	402780 <__overflow@plt>
  4086dc:	b	408b80 <__fxstatat@plt+0x6130>
  4086e0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4086e4:	ldr	x3, [x0, #1456]
  4086e8:	mov	x2, #0x2                   	// #2
  4086ec:	mov	x1, #0x1                   	// #1
  4086f0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  4086f4:	add	x0, x0, #0x530
  4086f8:	bl	402410 <fwrite_unlocked@plt>
  4086fc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408700:	add	x0, x0, #0x5c8
  408704:	ldr	x1, [x0, #3888]
  408708:	add	x1, x1, #0x2
  40870c:	str	x1, [x0, #3888]
  408710:	b	408ba8 <__fxstatat@plt+0x6158>
  408714:	mov	w1, #0x2                   	// #2
  408718:	mov	x0, x24
  40871c:	bl	40b134 <__fxstatat@plt+0x86e4>
  408720:	mov	x20, x0
  408724:	cbnz	x0, 408bb8 <__fxstatat@plt+0x6168>
  408728:	mov	w2, #0x5                   	// #5
  40872c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408730:	add	x1, x1, #0x478
  408734:	mov	x0, #0x0                   	// #0
  408738:	bl	402970 <dcgettext@plt>
  40873c:	mov	x2, x24
  408740:	mov	x1, x0
  408744:	ldrb	w0, [sp, #100]
  408748:	bl	4039f8 <__fxstatat@plt+0xfa8>
  40874c:	b	408bb8 <__fxstatat@plt+0x6168>
  408750:	cbz	w0, 408844 <__fxstatat@plt+0x5df4>
  408754:	ldrb	w0, [x19, #20]
  408758:	cmp	w0, #0x2e
  40875c:	cinc	x0, x21, eq  // eq = none
  408760:	ldrb	w0, [x0, #1]
  408764:	cbz	w0, 408844 <__fxstatat@plt+0x5df4>
  408768:	b	4088a4 <__fxstatat@plt+0x5e54>
  40876c:	mov	w1, #0x1                   	// #1
  408770:	cmp	w0, w1
  408774:	b.eq	408784 <__fxstatat@plt+0x5d34>  // b.none
  408778:	cmp	w0, #0x2
  40877c:	cset	w1, eq  // eq = none
  408780:	lsl	w1, w1, #1
  408784:	mov	x4, x24
  408788:	mov	w3, #0x0                   	// #0
  40878c:	mov	x2, #0x0                   	// #0
  408790:	mov	x0, x21
  408794:	bl	403c74 <__fxstatat@plt+0x1224>
  408798:	add	x26, x26, x0
  40879c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4087a0:	ldr	w0, [x0, #880]
  4087a4:	cmp	w0, #0x1
  4087a8:	b.ne	408844 <__fxstatat@plt+0x5df4>  // b.any
  4087ac:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4087b0:	ldr	w0, [x0, #944]
  4087b4:	cmn	w0, #0x1
  4087b8:	b.ne	408844 <__fxstatat@plt+0x5df4>  // b.any
  4087bc:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4087c0:	ldrb	w0, [x0, #905]
  4087c4:	cbnz	w0, 408844 <__fxstatat@plt+0x5df4>
  4087c8:	ldurb	w0, [x25, #-48]
  4087cc:	cbnz	w0, 408844 <__fxstatat@plt+0x5df4>
  4087d0:	bl	4048c8 <__fxstatat@plt+0x1e78>
  4087d4:	bl	4080f4 <__fxstatat@plt+0x56a4>
  4087d8:	bl	402d84 <__fxstatat@plt+0x334>
  4087dc:	b	408844 <__fxstatat@plt+0x5df4>
  4087e0:	mov	w1, #0x7                   	// #7
  4087e4:	cmp	w0, #0xc
  4087e8:	b.eq	408784 <__fxstatat@plt+0x5d34>  // b.none
  4087ec:	mov	w1, #0x8                   	// #8
  4087f0:	cmp	w0, #0xe
  4087f4:	b.eq	408784 <__fxstatat@plt+0x5d34>  // b.none
  4087f8:	cmp	w0, #0xa
  4087fc:	mov	w1, #0x6                   	// #6
  408800:	csel	w1, w1, wzr, eq  // eq = none
  408804:	b	408784 <__fxstatat@plt+0x5d34>
  408808:	mov	w1, w27
  40880c:	b	408784 <__fxstatat@plt+0x5d34>
  408810:	ldr	w0, [x22]
  408814:	cbz	w0, 408900 <__fxstatat@plt+0x5eb0>
  408818:	mov	w2, w27
  40881c:	ldr	x1, [sp, #104]
  408820:	mov	x0, #0x0                   	// #0
  408824:	bl	402970 <dcgettext@plt>
  408828:	mov	x2, x24
  40882c:	mov	x1, x0
  408830:	ldrb	w0, [sp, #100]
  408834:	bl	4039f8 <__fxstatat@plt+0xfa8>
  408838:	ldr	w0, [x22]
  40883c:	cmp	w0, #0x4b
  408840:	b.ne	408900 <__fxstatat@plt+0x5eb0>  // b.any
  408844:	bl	405bac <__fxstatat@plt+0x315c>
  408848:	str	wzr, [x22]
  40884c:	mov	x0, x23
  408850:	bl	4026d0 <readdir@plt>
  408854:	mov	x19, x0
  408858:	cbz	x0, 408810 <__fxstatat@plt+0x5dc0>
  40885c:	add	x21, x0, #0x13
  408860:	ldr	w0, [x25, #56]
  408864:	cmp	w0, #0x2
  408868:	b.eq	4088a4 <__fxstatat@plt+0x5e54>  // b.none
  40886c:	ldrb	w1, [x19, #19]
  408870:	cmp	w1, #0x2e
  408874:	b.eq	408750 <__fxstatat@plt+0x5d00>  // b.none
  408878:	cbnz	w0, 4088a4 <__fxstatat@plt+0x5e54>
  40887c:	ldr	x20, [x25, #64]
  408880:	cbz	x20, 4088a4 <__fxstatat@plt+0x5e54>
  408884:	mov	w28, #0x4                   	// #4
  408888:	mov	w2, w28
  40888c:	mov	x1, x21
  408890:	ldr	x0, [x20]
  408894:	bl	4028a0 <fnmatch@plt>
  408898:	cbz	w0, 408844 <__fxstatat@plt+0x5df4>
  40889c:	ldr	x20, [x20, #8]
  4088a0:	cbnz	x20, 408888 <__fxstatat@plt+0x5e38>
  4088a4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4088a8:	ldr	x20, [x0, #1560]
  4088ac:	cbz	x20, 4088d0 <__fxstatat@plt+0x5e80>
  4088b0:	mov	w28, #0x4                   	// #4
  4088b4:	mov	w2, w28
  4088b8:	mov	x1, x21
  4088bc:	ldr	x0, [x20]
  4088c0:	bl	4028a0 <fnmatch@plt>
  4088c4:	cbz	w0, 408844 <__fxstatat@plt+0x5df4>
  4088c8:	ldr	x20, [x20, #8]
  4088cc:	cbnz	x20, 4088b4 <__fxstatat@plt+0x5e64>
  4088d0:	ldrb	w0, [x19, #18]
  4088d4:	cmp	w0, #0x8
  4088d8:	b.eq	408808 <__fxstatat@plt+0x5db8>  // b.none
  4088dc:	b.hi	4087e0 <__fxstatat@plt+0x5d90>  // b.pmore
  4088e0:	mov	w1, #0x3                   	// #3
  4088e4:	cmp	w0, #0x4
  4088e8:	b.eq	408784 <__fxstatat@plt+0x5d34>  // b.none
  4088ec:	b.ls	40876c <__fxstatat@plt+0x5d1c>  // b.plast
  4088f0:	cmp	w0, #0x6
  4088f4:	cset	w1, eq  // eq = none
  4088f8:	lsl	w1, w1, #2
  4088fc:	b	408784 <__fxstatat@plt+0x5d34>
  408900:	mov	x0, x23
  408904:	bl	402700 <closedir@plt>
  408908:	cbnz	w0, 408a58 <__fxstatat@plt+0x6008>
  40890c:	bl	4048c8 <__fxstatat@plt+0x1e78>
  408910:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408914:	ldrb	w0, [x0, #1688]
  408918:	cbnz	w0, 408a80 <__fxstatat@plt+0x6030>
  40891c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408920:	ldr	w0, [x0, #880]
  408924:	cbz	w0, 408934 <__fxstatat@plt+0x5ee4>
  408928:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40892c:	ldrb	w0, [x0, #905]
  408930:	cbz	w0, 408a2c <__fxstatat@plt+0x5fdc>
  408934:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408938:	ldrb	w0, [x0, #1464]
  40893c:	cbnz	w0, 408a90 <__fxstatat@plt+0x6040>
  408940:	mov	w2, #0x5                   	// #5
  408944:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408948:	add	x1, x1, #0x600
  40894c:	mov	x0, #0x0                   	// #0
  408950:	bl	402970 <dcgettext@plt>
  408954:	mov	x19, x0
  408958:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40895c:	ldr	x1, [x20, #1456]
  408960:	bl	402980 <fputs_unlocked@plt>
  408964:	mov	x0, x19
  408968:	bl	402430 <strlen@plt>
  40896c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408970:	add	x1, x1, #0x5c8
  408974:	ldr	x2, [x1, #3888]
  408978:	add	x2, x2, x0
  40897c:	str	x2, [x1, #3888]
  408980:	ldr	x0, [x20, #1456]
  408984:	ldr	x1, [x0, #40]
  408988:	ldr	x2, [x0, #48]
  40898c:	cmp	x1, x2
  408990:	b.cs	408ac4 <__fxstatat@plt+0x6074>  // b.hs, b.nlast
  408994:	add	x2, x1, #0x1
  408998:	str	x2, [x0, #40]
  40899c:	mov	w0, #0x20                  	// #32
  4089a0:	strb	w0, [x1]
  4089a4:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4089a8:	add	x19, x19, #0x5c8
  4089ac:	ldr	x0, [x19, #3888]
  4089b0:	add	x0, x0, #0x1
  4089b4:	str	x0, [x19, #3888]
  4089b8:	ldr	x4, [x19, #3528]
  4089bc:	mov	x3, #0x200                 	// #512
  4089c0:	ldr	w2, [x19, #3536]
  4089c4:	add	x1, sp, #0x70
  4089c8:	mov	x0, x26
  4089cc:	bl	40d324 <__fxstatat@plt+0xa8d4>
  4089d0:	mov	x20, x0
  4089d4:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4089d8:	ldr	x1, [x21, #1456]
  4089dc:	bl	402980 <fputs_unlocked@plt>
  4089e0:	mov	x0, x20
  4089e4:	bl	402430 <strlen@plt>
  4089e8:	ldr	x1, [x19, #3888]
  4089ec:	add	x1, x1, x0
  4089f0:	str	x1, [x19, #3888]
  4089f4:	ldr	x0, [x21, #1456]
  4089f8:	ldr	x1, [x0, #40]
  4089fc:	ldr	x2, [x0, #48]
  408a00:	cmp	x1, x2
  408a04:	b.cs	408ad0 <__fxstatat@plt+0x6080>  // b.hs, b.nlast
  408a08:	add	x2, x1, #0x1
  408a0c:	str	x2, [x0, #40]
  408a10:	mov	w0, #0xa                   	// #10
  408a14:	strb	w0, [x1]
  408a18:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408a1c:	add	x0, x0, #0x5c8
  408a20:	ldr	x1, [x0, #3888]
  408a24:	add	x1, x1, #0x1
  408a28:	str	x1, [x0, #3888]
  408a2c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408a30:	ldr	x0, [x0, #1488]
  408a34:	cbnz	x0, 408adc <__fxstatat@plt+0x608c>
  408a38:	ldp	x25, x26, [sp, #64]
  408a3c:	ldp	x27, x28, [sp, #80]
  408a40:	ldp	x19, x20, [sp, #16]
  408a44:	ldp	x21, x22, [sp, #32]
  408a48:	ldp	x23, x24, [sp, #48]
  408a4c:	ldp	x29, x30, [sp]
  408a50:	add	sp, sp, #0x300
  408a54:	ret
  408a58:	mov	w2, #0x5                   	// #5
  408a5c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408a60:	add	x1, x1, #0x5e8
  408a64:	mov	x0, #0x0                   	// #0
  408a68:	bl	402970 <dcgettext@plt>
  408a6c:	mov	x2, x24
  408a70:	mov	x1, x0
  408a74:	ldrb	w0, [sp, #100]
  408a78:	bl	4039f8 <__fxstatat@plt+0xfa8>
  408a7c:	b	40890c <__fxstatat@plt+0x5ebc>
  408a80:	mov	w1, #0x0                   	// #0
  408a84:	mov	x0, x24
  408a88:	bl	40769c <__fxstatat@plt+0x4c4c>
  408a8c:	b	40891c <__fxstatat@plt+0x5ecc>
  408a90:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408a94:	ldr	x3, [x0, #1456]
  408a98:	mov	x2, #0x2                   	// #2
  408a9c:	mov	x1, #0x1                   	// #1
  408aa0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  408aa4:	add	x0, x0, #0x530
  408aa8:	bl	402410 <fwrite_unlocked@plt>
  408aac:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408ab0:	add	x0, x0, #0x5c8
  408ab4:	ldr	x1, [x0, #3888]
  408ab8:	add	x1, x1, #0x2
  408abc:	str	x1, [x0, #3888]
  408ac0:	b	408940 <__fxstatat@plt+0x5ef0>
  408ac4:	mov	w1, #0x20                  	// #32
  408ac8:	bl	402780 <__overflow@plt>
  408acc:	b	4089a4 <__fxstatat@plt+0x5f54>
  408ad0:	mov	w1, #0xa                   	// #10
  408ad4:	bl	402780 <__overflow@plt>
  408ad8:	b	408a18 <__fxstatat@plt+0x5fc8>
  408adc:	bl	4080f4 <__fxstatat@plt+0x56a4>
  408ae0:	ldp	x25, x26, [sp, #64]
  408ae4:	ldp	x27, x28, [sp, #80]
  408ae8:	b	408a40 <__fxstatat@plt+0x5ff0>
  408aec:	stp	x27, x28, [sp, #80]
  408af0:	ldr	x20, [sp, #112]
  408af4:	ldr	x21, [sp, #120]
  408af8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408afc:	add	x0, x0, #0x6c8
  408b00:	ldur	x1, [x0, #-104]
  408b04:	ldur	x0, [x0, #-112]
  408b08:	sub	x0, x1, x0
  408b0c:	cmp	x0, #0xf
  408b10:	b.ls	4086b4 <__fxstatat@plt+0x5c64>  // b.plast
  408b14:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408b18:	add	x0, x0, #0x6c8
  408b1c:	ldur	x1, [x0, #-112]
  408b20:	add	x2, x1, #0x10
  408b24:	stur	x2, [x0, #-112]
  408b28:	str	x20, [x1, #8]
  408b2c:	str	x21, [x1]
  408b30:	bl	402d84 <__fxstatat@plt+0x334>
  408b34:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408b38:	ldrb	w0, [x0, #1688]
  408b3c:	cbnz	w0, 408b4c <__fxstatat@plt+0x60fc>
  408b40:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408b44:	ldrb	w0, [x0, #1689]
  408b48:	cbz	w0, 408c1c <__fxstatat@plt+0x61cc>
  408b4c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408b50:	ldrb	w0, [x0, #1292]
  408b54:	cbnz	w0, 408b94 <__fxstatat@plt+0x6144>
  408b58:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408b5c:	ldr	x0, [x0, #1456]
  408b60:	ldr	x1, [x0, #40]
  408b64:	ldr	x2, [x0, #48]
  408b68:	cmp	x1, x2
  408b6c:	b.cs	4086d4 <__fxstatat@plt+0x5c84>  // b.hs, b.nlast
  408b70:	add	x2, x1, #0x1
  408b74:	str	x2, [x0, #40]
  408b78:	mov	w0, #0xa                   	// #10
  408b7c:	strb	w0, [x1]
  408b80:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408b84:	add	x0, x0, #0x5c8
  408b88:	ldr	x1, [x0, #3888]
  408b8c:	add	x1, x1, #0x1
  408b90:	str	x1, [x0, #3888]
  408b94:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408b98:	strb	wzr, [x0, #1292]
  408b9c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408ba0:	ldrb	w0, [x0, #1464]
  408ba4:	cbnz	w0, 4086e0 <__fxstatat@plt+0x5c90>
  408ba8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  408bac:	ldrb	w0, [x0, #857]
  408bb0:	mov	x20, #0x0                   	// #0
  408bb4:	cbnz	w0, 408714 <__fxstatat@plt+0x5cc4>
  408bb8:	cmp	x19, #0x0
  408bbc:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  408bc0:	add	x1, x1, #0x6c8
  408bc4:	mov	x6, x20
  408bc8:	sub	x5, x1, #0x28
  408bcc:	mov	w4, #0x1                   	// #1
  408bd0:	mov	x3, #0x0                   	// #0
  408bd4:	mov	w2, #0xffffffff            	// #-1
  408bd8:	ldr	x1, [x1, #48]
  408bdc:	csel	x0, x19, x24, ne  // ne = any
  408be0:	bl	405e88 <__fxstatat@plt+0x3438>
  408be4:	mov	x0, x20
  408be8:	bl	402840 <free@plt>
  408bec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408bf0:	ldr	x3, [x0, #1456]
  408bf4:	mov	x2, #0x2                   	// #2
  408bf8:	mov	x1, #0x1                   	// #1
  408bfc:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  408c00:	add	x0, x0, #0x5c8
  408c04:	bl	402410 <fwrite_unlocked@plt>
  408c08:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408c0c:	add	x0, x0, #0x5c8
  408c10:	ldr	x1, [x0, #3888]
  408c14:	add	x1, x1, #0x2
  408c18:	str	x1, [x0, #3888]
  408c1c:	mov	x26, #0x0                   	// #0
  408c20:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1af4>
  408c24:	add	x0, x0, #0x5d0
  408c28:	str	x0, [sp, #104]
  408c2c:	mov	w27, #0x5                   	// #5
  408c30:	adrp	x25, 430000 <__progname@@GLIBC_2.17+0xa48>
  408c34:	add	x25, x25, #0x6c8
  408c38:	b	408848 <__fxstatat@plt+0x5df8>
  408c3c:	stp	x29, x30, [sp, #-160]!
  408c40:	mov	x29, sp
  408c44:	stp	x19, x20, [sp, #16]
  408c48:	str	x21, [sp, #32]
  408c4c:	mov	w20, w0
  408c50:	cbz	w0, 408c90 <__fxstatat@plt+0x6240>
  408c54:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408c58:	ldr	x19, [x0, #1432]
  408c5c:	mov	w2, #0x5                   	// #5
  408c60:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408c64:	add	x1, x1, #0x630
  408c68:	mov	x0, #0x0                   	// #0
  408c6c:	bl	402970 <dcgettext@plt>
  408c70:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  408c74:	ldr	x3, [x1, #1864]
  408c78:	mov	x2, x0
  408c7c:	mov	w1, #0x1                   	// #1
  408c80:	mov	x0, x19
  408c84:	bl	4027e0 <__fprintf_chk@plt>
  408c88:	mov	w0, w20
  408c8c:	bl	402460 <exit@plt>
  408c90:	mov	w2, #0x5                   	// #5
  408c94:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408c98:	add	x1, x1, #0x658
  408c9c:	mov	x0, #0x0                   	// #0
  408ca0:	bl	402970 <dcgettext@plt>
  408ca4:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  408ca8:	ldr	x2, [x1, #1864]
  408cac:	mov	x1, x0
  408cb0:	mov	w0, #0x1                   	// #1
  408cb4:	bl	402670 <__printf_chk@plt>
  408cb8:	mov	w2, #0x5                   	// #5
  408cbc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408cc0:	add	x1, x1, #0x680
  408cc4:	mov	x0, #0x0                   	// #0
  408cc8:	bl	402970 <dcgettext@plt>
  408ccc:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  408cd0:	ldr	x1, [x19, #1456]
  408cd4:	bl	402980 <fputs_unlocked@plt>
  408cd8:	mov	w2, #0x5                   	// #5
  408cdc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408ce0:	add	x1, x1, #0x710
  408ce4:	mov	x0, #0x0                   	// #0
  408ce8:	bl	402970 <dcgettext@plt>
  408cec:	ldr	x1, [x19, #1456]
  408cf0:	bl	402980 <fputs_unlocked@plt>
  408cf4:	mov	w2, #0x5                   	// #5
  408cf8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408cfc:	add	x1, x1, #0x760
  408d00:	mov	x0, #0x0                   	// #0
  408d04:	bl	402970 <dcgettext@plt>
  408d08:	ldr	x1, [x19, #1456]
  408d0c:	bl	402980 <fputs_unlocked@plt>
  408d10:	mov	w2, #0x5                   	// #5
  408d14:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408d18:	add	x1, x1, #0x870
  408d1c:	mov	x0, #0x0                   	// #0
  408d20:	bl	402970 <dcgettext@plt>
  408d24:	ldr	x1, [x19, #1456]
  408d28:	bl	402980 <fputs_unlocked@plt>
  408d2c:	mov	w2, #0x5                   	// #5
  408d30:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408d34:	add	x1, x1, #0x910
  408d38:	mov	x0, #0x0                   	// #0
  408d3c:	bl	402970 <dcgettext@plt>
  408d40:	ldr	x1, [x19, #1456]
  408d44:	bl	402980 <fputs_unlocked@plt>
  408d48:	mov	w2, #0x5                   	// #5
  408d4c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408d50:	add	x1, x1, #0xa80
  408d54:	mov	x0, #0x0                   	// #0
  408d58:	bl	402970 <dcgettext@plt>
  408d5c:	ldr	x1, [x19, #1456]
  408d60:	bl	402980 <fputs_unlocked@plt>
  408d64:	mov	w2, #0x5                   	// #5
  408d68:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408d6c:	add	x1, x1, #0xbf0
  408d70:	mov	x0, #0x0                   	// #0
  408d74:	bl	402970 <dcgettext@plt>
  408d78:	ldr	x1, [x19, #1456]
  408d7c:	bl	402980 <fputs_unlocked@plt>
  408d80:	mov	w2, #0x5                   	// #5
  408d84:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408d88:	add	x1, x1, #0xd98
  408d8c:	mov	x0, #0x0                   	// #0
  408d90:	bl	402970 <dcgettext@plt>
  408d94:	ldr	x1, [x19, #1456]
  408d98:	bl	402980 <fputs_unlocked@plt>
  408d9c:	mov	w2, #0x5                   	// #5
  408da0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408da4:	add	x1, x1, #0xdd8
  408da8:	mov	x0, #0x0                   	// #0
  408dac:	bl	402970 <dcgettext@plt>
  408db0:	ldr	x1, [x19, #1456]
  408db4:	bl	402980 <fputs_unlocked@plt>
  408db8:	mov	w2, #0x5                   	// #5
  408dbc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408dc0:	add	x1, x1, #0xed0
  408dc4:	mov	x0, #0x0                   	// #0
  408dc8:	bl	402970 <dcgettext@plt>
  408dcc:	ldr	x1, [x19, #1456]
  408dd0:	bl	402980 <fputs_unlocked@plt>
  408dd4:	mov	w2, #0x5                   	// #5
  408dd8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408ddc:	add	x1, x1, #0xf20
  408de0:	mov	x0, #0x0                   	// #0
  408de4:	bl	402970 <dcgettext@plt>
  408de8:	ldr	x1, [x19, #1456]
  408dec:	bl	402980 <fputs_unlocked@plt>
  408df0:	mov	w2, #0x5                   	// #5
  408df4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  408df8:	add	x1, x1, #0xfb8
  408dfc:	mov	x0, #0x0                   	// #0
  408e00:	bl	402970 <dcgettext@plt>
  408e04:	ldr	x1, [x19, #1456]
  408e08:	bl	402980 <fputs_unlocked@plt>
  408e0c:	mov	w2, #0x5                   	// #5
  408e10:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408e14:	add	x1, x1, #0x160
  408e18:	mov	x0, #0x0                   	// #0
  408e1c:	bl	402970 <dcgettext@plt>
  408e20:	ldr	x1, [x19, #1456]
  408e24:	bl	402980 <fputs_unlocked@plt>
  408e28:	mov	w2, #0x5                   	// #5
  408e2c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408e30:	add	x1, x1, #0x1f8
  408e34:	mov	x0, #0x0                   	// #0
  408e38:	bl	402970 <dcgettext@plt>
  408e3c:	ldr	x1, [x19, #1456]
  408e40:	bl	402980 <fputs_unlocked@plt>
  408e44:	mov	w2, #0x5                   	// #5
  408e48:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408e4c:	add	x1, x1, #0x360
  408e50:	mov	x0, #0x0                   	// #0
  408e54:	bl	402970 <dcgettext@plt>
  408e58:	ldr	x1, [x19, #1456]
  408e5c:	bl	402980 <fputs_unlocked@plt>
  408e60:	mov	w2, #0x5                   	// #5
  408e64:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408e68:	add	x1, x1, #0x3f8
  408e6c:	mov	x0, #0x0                   	// #0
  408e70:	bl	402970 <dcgettext@plt>
  408e74:	ldr	x1, [x19, #1456]
  408e78:	bl	402980 <fputs_unlocked@plt>
  408e7c:	mov	w2, #0x5                   	// #5
  408e80:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408e84:	add	x1, x1, #0x560
  408e88:	mov	x0, #0x0                   	// #0
  408e8c:	bl	402970 <dcgettext@plt>
  408e90:	ldr	x1, [x19, #1456]
  408e94:	bl	402980 <fputs_unlocked@plt>
  408e98:	mov	w2, #0x5                   	// #5
  408e9c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408ea0:	add	x1, x1, #0x690
  408ea4:	mov	x0, #0x0                   	// #0
  408ea8:	bl	402970 <dcgettext@plt>
  408eac:	ldr	x1, [x19, #1456]
  408eb0:	bl	402980 <fputs_unlocked@plt>
  408eb4:	mov	w2, #0x5                   	// #5
  408eb8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408ebc:	add	x1, x1, #0x8e0
  408ec0:	mov	x0, #0x0                   	// #0
  408ec4:	bl	402970 <dcgettext@plt>
  408ec8:	ldr	x1, [x19, #1456]
  408ecc:	bl	402980 <fputs_unlocked@plt>
  408ed0:	mov	w2, #0x5                   	// #5
  408ed4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408ed8:	add	x1, x1, #0x9a8
  408edc:	mov	x0, #0x0                   	// #0
  408ee0:	bl	402970 <dcgettext@plt>
  408ee4:	ldr	x1, [x19, #1456]
  408ee8:	bl	402980 <fputs_unlocked@plt>
  408eec:	mov	w2, #0x5                   	// #5
  408ef0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408ef4:	add	x1, x1, #0xbb0
  408ef8:	mov	x0, #0x0                   	// #0
  408efc:	bl	402970 <dcgettext@plt>
  408f00:	ldr	x1, [x19, #1456]
  408f04:	bl	402980 <fputs_unlocked@plt>
  408f08:	mov	w2, #0x5                   	// #5
  408f0c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408f10:	add	x1, x1, #0xc00
  408f14:	mov	x0, #0x0                   	// #0
  408f18:	bl	402970 <dcgettext@plt>
  408f1c:	ldr	x1, [x19, #1456]
  408f20:	bl	402980 <fputs_unlocked@plt>
  408f24:	mov	w2, #0x5                   	// #5
  408f28:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408f2c:	add	x1, x1, #0xc90
  408f30:	mov	x0, #0x0                   	// #0
  408f34:	bl	402970 <dcgettext@plt>
  408f38:	ldr	x1, [x19, #1456]
  408f3c:	bl	402980 <fputs_unlocked@plt>
  408f40:	mov	w2, #0x5                   	// #5
  408f44:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408f48:	add	x1, x1, #0xe08
  408f4c:	mov	x0, #0x0                   	// #0
  408f50:	bl	402970 <dcgettext@plt>
  408f54:	ldr	x1, [x19, #1456]
  408f58:	bl	402980 <fputs_unlocked@plt>
  408f5c:	mov	w2, #0x5                   	// #5
  408f60:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408f64:	add	x1, x1, #0xf78
  408f68:	mov	x0, #0x0                   	// #0
  408f6c:	bl	402970 <dcgettext@plt>
  408f70:	ldr	x1, [x19, #1456]
  408f74:	bl	402980 <fputs_unlocked@plt>
  408f78:	mov	w2, #0x5                   	// #5
  408f7c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408f80:	add	x1, x1, #0xfa8
  408f84:	mov	x0, #0x0                   	// #0
  408f88:	bl	402970 <dcgettext@plt>
  408f8c:	ldr	x1, [x19, #1456]
  408f90:	bl	402980 <fputs_unlocked@plt>
  408f94:	mov	w2, #0x5                   	// #5
  408f98:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  408f9c:	add	x1, x1, #0xfe0
  408fa0:	mov	x0, #0x0                   	// #0
  408fa4:	bl	402970 <dcgettext@plt>
  408fa8:	ldr	x1, [x19, #1456]
  408fac:	bl	402980 <fputs_unlocked@plt>
  408fb0:	mov	w2, #0x5                   	// #5
  408fb4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  408fb8:	add	x1, x1, #0xb8
  408fbc:	mov	x0, #0x0                   	// #0
  408fc0:	bl	402970 <dcgettext@plt>
  408fc4:	ldr	x1, [x19, #1456]
  408fc8:	bl	402980 <fputs_unlocked@plt>
  408fcc:	mov	w2, #0x5                   	// #5
  408fd0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  408fd4:	add	x1, x1, #0x230
  408fd8:	mov	x0, #0x0                   	// #0
  408fdc:	bl	402970 <dcgettext@plt>
  408fe0:	ldr	x1, [x19, #1456]
  408fe4:	bl	402980 <fputs_unlocked@plt>
  408fe8:	mov	w2, #0x5                   	// #5
  408fec:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  408ff0:	add	x1, x1, #0x350
  408ff4:	mov	x0, #0x0                   	// #0
  408ff8:	bl	402970 <dcgettext@plt>
  408ffc:	ldr	x1, [x19, #1456]
  409000:	bl	402980 <fputs_unlocked@plt>
  409004:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409008:	ldr	w0, [x0, #1296]
  40900c:	cmp	w0, #0x1
  409010:	b.eq	409160 <__fxstatat@plt+0x6710>  // b.none
  409014:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x1af4>
  409018:	add	x1, x19, #0x618
  40901c:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x1af4>
  409020:	add	x19, x19, #0x610
  409024:	cmp	w0, #0x2
  409028:	csel	x19, x19, x1, eq  // eq = none
  40902c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x4af4>
  409030:	add	x2, x2, #0x8
  409034:	ldr	x1, [x2, #584]
  409038:	ldr	x0, [x2, #592]
  40903c:	add	x2, x2, #0x248
  409040:	str	x1, [sp, #48]
  409044:	str	x0, [sp, #56]
  409048:	ldp	x4, x5, [x2, #16]
  40904c:	stp	x4, x5, [sp, #64]
  409050:	ldp	x4, x5, [x2, #32]
  409054:	stp	x4, x5, [sp, #80]
  409058:	ldp	x4, x5, [x2, #48]
  40905c:	stp	x4, x5, [sp, #96]
  409060:	ldp	x4, x5, [x2, #64]
  409064:	stp	x4, x5, [sp, #112]
  409068:	ldp	x4, x5, [x2, #80]
  40906c:	stp	x4, x5, [sp, #128]
  409070:	ldp	x2, x3, [x2, #96]
  409074:	stp	x2, x3, [sp, #144]
  409078:	add	x21, sp, #0x30
  40907c:	cbz	x1, 409098 <__fxstatat@plt+0x6648>
  409080:	add	x21, sp, #0x30
  409084:	mov	x0, x19
  409088:	bl	402800 <strcmp@plt>
  40908c:	cbz	w0, 409098 <__fxstatat@plt+0x6648>
  409090:	ldr	x1, [x21, #16]!
  409094:	cbnz	x1, 409084 <__fxstatat@plt+0x6634>
  409098:	ldr	x21, [x21, #8]
  40909c:	cbz	x21, 4091e8 <__fxstatat@plt+0x6798>
  4090a0:	mov	w2, #0x5                   	// #5
  4090a4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4090a8:	add	x1, x1, #0x3e8
  4090ac:	mov	x0, #0x0                   	// #0
  4090b0:	bl	402970 <dcgettext@plt>
  4090b4:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3af4>
  4090b8:	add	x3, x3, #0x400
  4090bc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  4090c0:	add	x2, x2, #0x428
  4090c4:	mov	x1, x0
  4090c8:	mov	w0, #0x1                   	// #1
  4090cc:	bl	402670 <__printf_chk@plt>
  4090d0:	mov	x1, #0x0                   	// #0
  4090d4:	mov	w0, #0x5                   	// #5
  4090d8:	bl	402a40 <setlocale@plt>
  4090dc:	cbz	x0, 4090f4 <__fxstatat@plt+0x66a4>
  4090e0:	mov	x2, #0x3                   	// #3
  4090e4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4090e8:	add	x1, x1, #0x438
  4090ec:	bl	402640 <strncmp@plt>
  4090f0:	cbnz	w0, 409170 <__fxstatat@plt+0x6720>
  4090f4:	mov	w2, #0x5                   	// #5
  4090f8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4090fc:	add	x1, x1, #0x488
  409100:	mov	x0, #0x0                   	// #0
  409104:	bl	402970 <dcgettext@plt>
  409108:	mov	x3, x19
  40910c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  409110:	add	x2, x2, #0x400
  409114:	mov	x1, x0
  409118:	mov	w0, #0x1                   	// #1
  40911c:	bl	402670 <__printf_chk@plt>
  409120:	mov	w2, #0x5                   	// #5
  409124:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409128:	add	x1, x1, #0x4a8
  40912c:	mov	x0, #0x0                   	// #0
  409130:	bl	402970 <dcgettext@plt>
  409134:	mov	x1, x0
  409138:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x2af4>
  40913c:	add	x0, x3, #0x1f0
  409140:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  409144:	add	x3, x3, #0x620
  409148:	cmp	x19, x21
  40914c:	csel	x3, x3, x0, eq  // eq = none
  409150:	mov	x2, x21
  409154:	mov	w0, #0x1                   	// #1
  409158:	bl	402670 <__printf_chk@plt>
  40915c:	b	408c88 <__fxstatat@plt+0x6238>
  409160:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x1af4>
  409164:	add	x19, x19, #0x608
  409168:	b	40902c <__fxstatat@plt+0x65dc>
  40916c:	mov	x21, x19
  409170:	mov	w2, #0x5                   	// #5
  409174:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409178:	add	x1, x1, #0x440
  40917c:	mov	x0, #0x0                   	// #0
  409180:	bl	402970 <dcgettext@plt>
  409184:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409188:	ldr	x1, [x1, #1456]
  40918c:	bl	402980 <fputs_unlocked@plt>
  409190:	b	4090f4 <__fxstatat@plt+0x66a4>
  409194:	mov	w2, #0x5                   	// #5
  409198:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40919c:	add	x1, x1, #0x488
  4091a0:	mov	x0, #0x0                   	// #0
  4091a4:	bl	402970 <dcgettext@plt>
  4091a8:	mov	x3, x19
  4091ac:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  4091b0:	add	x2, x2, #0x400
  4091b4:	mov	x1, x0
  4091b8:	mov	w0, #0x1                   	// #1
  4091bc:	bl	402670 <__printf_chk@plt>
  4091c0:	mov	w2, #0x5                   	// #5
  4091c4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4091c8:	add	x1, x1, #0x4a8
  4091cc:	mov	x0, #0x0                   	// #0
  4091d0:	bl	402970 <dcgettext@plt>
  4091d4:	mov	x1, x0
  4091d8:	mov	x21, x19
  4091dc:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  4091e0:	add	x3, x3, #0x620
  4091e4:	b	409150 <__fxstatat@plt+0x6700>
  4091e8:	mov	w2, #0x5                   	// #5
  4091ec:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4091f0:	add	x1, x1, #0x3e8
  4091f4:	mov	x0, #0x0                   	// #0
  4091f8:	bl	402970 <dcgettext@plt>
  4091fc:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3af4>
  409200:	add	x3, x3, #0x400
  409204:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  409208:	add	x2, x2, #0x428
  40920c:	mov	x1, x0
  409210:	mov	w0, #0x1                   	// #1
  409214:	bl	402670 <__printf_chk@plt>
  409218:	mov	x1, #0x0                   	// #0
  40921c:	mov	w0, #0x5                   	// #5
  409220:	bl	402a40 <setlocale@plt>
  409224:	cbz	x0, 409194 <__fxstatat@plt+0x6744>
  409228:	mov	x2, #0x3                   	// #3
  40922c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409230:	add	x1, x1, #0x438
  409234:	bl	402640 <strncmp@plt>
  409238:	cbnz	w0, 40916c <__fxstatat@plt+0x671c>
  40923c:	mov	w2, #0x5                   	// #5
  409240:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409244:	add	x1, x1, #0x488
  409248:	mov	x0, #0x0                   	// #0
  40924c:	bl	402970 <dcgettext@plt>
  409250:	mov	x3, x19
  409254:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  409258:	add	x2, x2, #0x400
  40925c:	mov	x1, x0
  409260:	mov	w0, #0x1                   	// #1
  409264:	bl	402670 <__printf_chk@plt>
  409268:	mov	w2, #0x5                   	// #5
  40926c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409270:	add	x1, x1, #0x4a8
  409274:	mov	x0, #0x0                   	// #0
  409278:	bl	402970 <dcgettext@plt>
  40927c:	mov	x1, x0
  409280:	mov	x21, x19
  409284:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1af4>
  409288:	add	x3, x3, #0x620
  40928c:	b	409150 <__fxstatat@plt+0x6700>
  409290:	stp	x29, x30, [sp, #-128]!
  409294:	mov	x29, sp
  409298:	stp	x19, x20, [sp, #16]
  40929c:	stp	x21, x22, [sp, #32]
  4092a0:	stp	x23, x24, [sp, #48]
  4092a4:	stp	x25, x26, [sp, #64]
  4092a8:	stp	x27, x28, [sp, #80]
  4092ac:	mov	w21, w0
  4092b0:	mov	x20, x1
  4092b4:	ldr	x0, [x1]
  4092b8:	bl	410130 <__fxstatat@plt+0xd6e0>
  4092bc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  4092c0:	add	x1, x1, #0x1f0
  4092c4:	mov	w0, #0x6                   	// #6
  4092c8:	bl	402a40 <setlocale@plt>
  4092cc:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x1af4>
  4092d0:	add	x19, x19, #0x390
  4092d4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4092d8:	add	x1, x1, #0x500
  4092dc:	mov	x0, x19
  4092e0:	bl	402650 <bindtextdomain@plt>
  4092e4:	mov	x0, x19
  4092e8:	bl	4027b0 <textdomain@plt>
  4092ec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4092f0:	mov	w1, #0x2                   	// #2
  4092f4:	str	w1, [x0, #1320]
  4092f8:	adrp	x0, 40b000 <__fxstatat@plt+0x85b0>
  4092fc:	add	x0, x0, #0x6d8
  409300:	bl	415338 <_obstack_memory_used@@Base+0x1e2c>
  409304:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409308:	add	x0, x0, #0x5c8
  40930c:	str	wzr, [x0, #3184]
  409310:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  409314:	add	x1, x1, #0x6c8
  409318:	mov	w2, #0x1                   	// #1
  40931c:	sturb	w2, [x1, #-47]
  409320:	str	xzr, [x0, #3176]
  409324:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  409328:	stur	x2, [x1, #-240]
  40932c:	mov	x2, #0xffffffffffffffff    	// #-1
  409330:	stur	x2, [x1, #-232]
  409334:	strb	wzr, [x0, #3904]
  409338:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40933c:	ldr	w0, [x0, #1296]
  409340:	cmp	w0, #0x2
  409344:	b.eq	40938c <__fxstatat@plt+0x693c>  // b.none
  409348:	cmp	w0, #0x3
  40934c:	b.ne	409368 <__fxstatat@plt+0x6918>  // b.any
  409350:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409354:	str	wzr, [x0, #880]
  409358:	mov	w1, #0x7                   	// #7
  40935c:	mov	x0, #0x0                   	// #0
  409360:	bl	411504 <__fxstatat@plt+0xeab4>
  409364:	b	4093a4 <__fxstatat@plt+0x6954>
  409368:	cmp	w0, #0x1
  40936c:	b.ne	40956c <__fxstatat@plt+0x6b1c>  // b.any
  409370:	mov	w0, #0x1                   	// #1
  409374:	bl	402920 <isatty@plt>
  409378:	cbnz	w0, 409544 <__fxstatat@plt+0x6af4>
  40937c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409380:	mov	w1, #0x1                   	// #1
  409384:	str	w1, [x0, #880]
  409388:	b	4093a4 <__fxstatat@plt+0x6954>
  40938c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409390:	mov	w1, #0x2                   	// #2
  409394:	str	w1, [x0, #880]
  409398:	mov	w1, #0x7                   	// #7
  40939c:	mov	x0, #0x0                   	// #0
  4093a0:	bl	411504 <__fxstatat@plt+0xeab4>
  4093a4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4093a8:	add	x0, x0, #0x5c8
  4093ac:	str	wzr, [x0, #3880]
  4093b0:	str	wzr, [x0, #3560]
  4093b4:	strb	wzr, [x0, #3885]
  4093b8:	strb	wzr, [x0, #3456]
  4093bc:	strb	wzr, [x0, #3521]
  4093c0:	str	wzr, [x0, #32]
  4093c4:	strb	wzr, [x0, #3476]
  4093c8:	mov	w1, #0x1                   	// #1
  4093cc:	str	w1, [x0, #3480]
  4093d0:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4093d4:	add	x1, x1, #0x6c8
  4093d8:	sturb	wzr, [x1, #-48]
  4093dc:	strb	wzr, [x0, #3520]
  4093e0:	str	wzr, [x1, #56]
  4093e4:	str	xzr, [x0, #80]
  4093e8:	str	xzr, [x1, #64]
  4093ec:	strb	wzr, [x0, #3500]
  4093f0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  4093f4:	add	x0, x0, #0x518
  4093f8:	bl	4029f0 <getenv@plt>
  4093fc:	mov	x19, x0
  409400:	cbz	x0, 409434 <__fxstatat@plt+0x69e4>
  409404:	mov	x3, #0x4                   	// #4
  409408:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6af4>
  40940c:	add	x2, x2, #0x3d0
  409410:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  409414:	add	x1, x1, #0x3f8
  409418:	bl	40ad10 <__fxstatat@plt+0x82c0>
  40941c:	tbnz	w0, #31, 409570 <__fxstatat@plt+0x6b20>
  409420:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  409424:	add	x1, x1, #0x3d0
  409428:	ldr	w1, [x1, w0, sxtw #2]
  40942c:	mov	x0, #0x0                   	// #0
  409430:	bl	411504 <__fxstatat@plt+0xeab4>
  409434:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409438:	mov	x1, #0x50                  	// #80
  40943c:	str	x1, [x0, #1568]
  409440:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409444:	add	x0, x0, #0x570
  409448:	bl	4029f0 <getenv@plt>
  40944c:	mov	x19, x0
  409450:	cbz	x0, 40945c <__fxstatat@plt+0x6a0c>
  409454:	ldrb	w0, [x0]
  409458:	cbnz	w0, 4095a8 <__fxstatat@plt+0x6b58>
  40945c:	add	x2, sp, #0x70
  409460:	mov	x1, #0x5413                	// #21523
  409464:	mov	w0, #0x1                   	// #1
  409468:	bl	402a30 <ioctl@plt>
  40946c:	cmn	w0, #0x1
  409470:	b.eq	409488 <__fxstatat@plt+0x6a38>  // b.none
  409474:	ldrh	w0, [sp, #114]
  409478:	cbz	w0, 409488 <__fxstatat@plt+0x6a38>
  40947c:	and	x0, x0, #0xffff
  409480:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409484:	str	x0, [x1, #1568]
  409488:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40948c:	add	x0, x0, #0x5b8
  409490:	bl	4029f0 <getenv@plt>
  409494:	mov	x19, x0
  409498:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40949c:	mov	x1, #0x8                   	// #8
  4094a0:	str	x1, [x0, #1280]
  4094a4:	cbz	x19, 4094d0 <__fxstatat@plt+0x6a80>
  4094a8:	mov	x4, #0x0                   	// #0
  4094ac:	add	x3, sp, #0x70
  4094b0:	mov	w2, #0x0                   	// #0
  4094b4:	mov	x1, #0x0                   	// #0
  4094b8:	mov	x0, x19
  4094bc:	bl	412838 <__fxstatat@plt+0xfde8>
  4094c0:	cbnz	w0, 4095f0 <__fxstatat@plt+0x6ba0>
  4094c4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4094c8:	ldr	x1, [sp, #112]
  4094cc:	str	x1, [x0, #1280]
  4094d0:	mov	w22, #0x0                   	// #0
  4094d4:	mov	w26, #0x0                   	// #0
  4094d8:	mov	x24, #0x0                   	// #0
  4094dc:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x4af4>
  4094e0:	add	x25, x25, #0x8
  4094e4:	add	x23, x25, #0x2e0
  4094e8:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4094ec:	add	x19, x19, #0x5c8
  4094f0:	add	x27, x19, #0xdc8
  4094f4:	mov	w0, #0xffffffff            	// #-1
  4094f8:	str	w0, [sp, #112]
  4094fc:	add	x4, sp, #0x70
  409500:	mov	x3, x23
  409504:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  409508:	add	x2, x2, #0x600
  40950c:	mov	x1, x20
  409510:	mov	w0, w21
  409514:	bl	4027d0 <getopt_long@plt>
  409518:	cmn	w0, #0x1
  40951c:	b.eq	409c98 <__fxstatat@plt+0x7248>  // b.none
  409520:	add	w2, w0, #0x3
  409524:	cmp	w2, #0x113
  409528:	b.hi	409c88 <__fxstatat@plt+0x7238>  // b.pmore
  40952c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409530:	add	x0, x0, #0xde0
  409534:	ldrh	w0, [x0, w2, uxtw #1]
  409538:	adr	x1, 409544 <__fxstatat@plt+0x6af4>
  40953c:	add	x0, x1, w0, sxth #2
  409540:	br	x0
  409544:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409548:	add	x19, x19, #0x5c8
  40954c:	mov	w0, #0x2                   	// #2
  409550:	str	w0, [x19, #3496]
  409554:	mov	w1, #0x3                   	// #3
  409558:	mov	x0, #0x0                   	// #0
  40955c:	bl	411504 <__fxstatat@plt+0xeab4>
  409560:	mov	w0, #0x1                   	// #1
  409564:	strb	w0, [x19, #3904]
  409568:	b	4093a4 <__fxstatat@plt+0x6954>
  40956c:	bl	402760 <abort@plt>
  409570:	mov	w2, #0x5                   	// #5
  409574:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409578:	add	x1, x1, #0x528
  40957c:	mov	x0, #0x0                   	// #0
  409580:	bl	402970 <dcgettext@plt>
  409584:	mov	x22, x0
  409588:	mov	x0, x19
  40958c:	bl	411be8 <__fxstatat@plt+0xf198>
  409590:	mov	x3, x0
  409594:	mov	x2, x22
  409598:	mov	w1, #0x0                   	// #0
  40959c:	mov	w0, #0x0                   	// #0
  4095a0:	bl	402490 <error@plt>
  4095a4:	b	409434 <__fxstatat@plt+0x69e4>
  4095a8:	mov	x0, x19
  4095ac:	bl	403424 <__fxstatat@plt+0x9d4>
  4095b0:	and	w0, w0, #0xff
  4095b4:	cbnz	w0, 40945c <__fxstatat@plt+0x6a0c>
  4095b8:	mov	w2, #0x5                   	// #5
  4095bc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4095c0:	add	x1, x1, #0x578
  4095c4:	mov	x0, #0x0                   	// #0
  4095c8:	bl	402970 <dcgettext@plt>
  4095cc:	mov	x22, x0
  4095d0:	mov	x0, x19
  4095d4:	bl	411be8 <__fxstatat@plt+0xf198>
  4095d8:	mov	x3, x0
  4095dc:	mov	x2, x22
  4095e0:	mov	w1, #0x0                   	// #0
  4095e4:	mov	w0, #0x0                   	// #0
  4095e8:	bl	402490 <error@plt>
  4095ec:	b	40945c <__fxstatat@plt+0x6a0c>
  4095f0:	mov	w2, #0x5                   	// #5
  4095f4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4095f8:	add	x1, x1, #0x5c0
  4095fc:	mov	x0, #0x0                   	// #0
  409600:	bl	402970 <dcgettext@plt>
  409604:	mov	x22, x0
  409608:	mov	x0, x19
  40960c:	bl	411be8 <__fxstatat@plt+0xf198>
  409610:	mov	x3, x0
  409614:	mov	x2, x22
  409618:	mov	w1, #0x0                   	// #0
  40961c:	mov	w0, #0x0                   	// #0
  409620:	bl	402490 <error@plt>
  409624:	b	4094d0 <__fxstatat@plt+0x6a80>
  409628:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40962c:	mov	w1, #0x2                   	// #2
  409630:	str	w1, [x0, #1792]
  409634:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409638:	mov	w1, #0x7                   	// #7
  40963c:	mov	x0, #0x0                   	// #0
  409640:	bl	411504 <__fxstatat@plt+0xeab4>
  409644:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409648:	mov	w0, #0x1                   	// #1
  40964c:	str	w0, [x19, #3880]
  409650:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409654:	mov	w0, #0x1                   	// #1
  409658:	strb	w0, [x19, #3520]
  40965c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409660:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409664:	mov	w1, #0x2                   	// #2
  409668:	str	w1, [x0, #1792]
  40966c:	mov	w0, #0xffffffff            	// #-1
  409670:	str	w0, [x19, #3560]
  409674:	ldr	w0, [x19, #3496]
  409678:	cbz	w0, 409690 <__fxstatat@plt+0x6c40>
  40967c:	strb	wzr, [x19, #3521]
  409680:	strb	wzr, [x19, #3475]
  409684:	strb	wzr, [x19, #3473]
  409688:	mov	w26, #0x1                   	// #1
  40968c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409690:	mov	w0, #0x1                   	// #1
  409694:	bl	402920 <isatty@plt>
  409698:	cmp	w0, #0x0
  40969c:	cset	w0, ne  // ne = any
  4096a0:	add	w0, w0, #0x1
  4096a4:	str	w0, [x19, #3496]
  4096a8:	b	40967c <__fxstatat@plt+0x6c2c>
  4096ac:	mov	w0, #0x2                   	// #2
  4096b0:	str	w0, [x19, #32]
  4096b4:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4096b8:	str	wzr, [x19, #3496]
  4096bc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4096c0:	strb	wzr, [x0, #1274]
  4096c4:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4096c8:	mov	w0, #0xb0                  	// #176
  4096cc:	str	w0, [x19, #3536]
  4096d0:	str	w0, [x19, #3544]
  4096d4:	mov	x0, #0x1                   	// #1
  4096d8:	str	x0, [x19, #3528]
  4096dc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4096e0:	str	x0, [x1, #1280]
  4096e4:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4096e8:	mov	w0, #0x1                   	// #1
  4096ec:	strb	w0, [x19, #3476]
  4096f0:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4096f4:	str	wzr, [x19, #3496]
  4096f8:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4096fc:	mov	w0, #0x4                   	// #4
  409700:	str	w0, [x19, #3496]
  409704:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409708:	mov	w0, #0x1                   	// #1
  40970c:	strb	w0, [x19, #3456]
  409710:	str	wzr, [x19, #3496]
  409714:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409718:	str	wzr, [x19, #3496]
  40971c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409720:	strb	wzr, [x0, #1275]
  409724:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409728:	mov	w0, #0x1                   	// #1
  40972c:	str	w0, [x19, #32]
  409730:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409734:	mov	w0, #0x1                   	// #1
  409738:	strb	w0, [x19, #3904]
  40973c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409740:	mov	w0, #0x1                   	// #1
  409744:	strb	w0, [x19, #3885]
  409748:	b	4094f4 <__fxstatat@plt+0x6aa4>
  40974c:	mov	w0, #0x1                   	// #1
  409750:	strb	w0, [x19, #3521]
  409754:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409758:	mov	w0, #0x4                   	// #4
  40975c:	str	w0, [x19, #3560]
  409760:	mov	w26, #0x1                   	// #1
  409764:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409768:	mov	w0, #0x2                   	// #2
  40976c:	str	w0, [x19, #3880]
  409770:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409774:	mov	w0, #0x3                   	// #3
  409778:	str	w0, [x19, #3560]
  40977c:	mov	w26, #0x1                   	// #1
  409780:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409784:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409788:	ldr	x0, [x0, #1440]
  40978c:	bl	403424 <__fxstatat@plt+0x9d4>
  409790:	and	w0, w0, #0xff
  409794:	cbnz	w0, 4094f4 <__fxstatat@plt+0x6aa4>
  409798:	mov	w2, #0x5                   	// #5
  40979c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4097a0:	add	x1, x1, #0x630
  4097a4:	mov	x0, #0x0                   	// #0
  4097a8:	bl	402970 <dcgettext@plt>
  4097ac:	mov	x19, x0
  4097b0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4097b4:	ldr	x0, [x0, #1440]
  4097b8:	bl	411be8 <__fxstatat@plt+0xf198>
  4097bc:	mov	x4, x0
  4097c0:	mov	x3, x19
  4097c4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  4097c8:	add	x2, x2, #0x648
  4097cc:	mov	w1, #0x0                   	// #0
  4097d0:	mov	w0, #0x2                   	// #2
  4097d4:	bl	402490 <error@plt>
  4097d8:	mov	w0, #0x3                   	// #3
  4097dc:	str	w0, [x19, #3496]
  4097e0:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4097e4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4097e8:	mov	w1, #0x1                   	// #1
  4097ec:	str	w1, [x0, #1792]
  4097f0:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4097f4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  4097f8:	add	x0, x0, #0x650
  4097fc:	bl	403368 <__fxstatat@plt+0x918>
  409800:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409804:	add	x0, x0, #0x658
  409808:	bl	403368 <__fxstatat@plt+0x918>
  40980c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409810:	mov	w0, #0x2                   	// #2
  409814:	str	w0, [x19, #3496]
  409818:	b	4094f4 <__fxstatat@plt+0x6aa4>
  40981c:	mov	w0, #0x1                   	// #1
  409820:	strb	w0, [x19, #4080]
  409824:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409828:	mov	w0, #0x3                   	// #3
  40982c:	str	w0, [x19, #32]
  409830:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409834:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409838:	strb	wzr, [x0, #1275]
  40983c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409840:	mov	w0, #0x3                   	// #3
  409844:	str	w0, [x19, #3480]
  409848:	b	4094f4 <__fxstatat@plt+0x6aa4>
  40984c:	mov	w0, #0x4                   	// #4
  409850:	str	w0, [x19, #3480]
  409854:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409858:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40985c:	ldr	x0, [x0, #1440]
  409860:	bl	403368 <__fxstatat@plt+0x918>
  409864:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409868:	mov	w0, #0x5                   	// #5
  40986c:	str	w0, [x19, #3480]
  409870:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409874:	mov	w1, #0x0                   	// #0
  409878:	mov	x0, #0x0                   	// #0
  40987c:	bl	411504 <__fxstatat@plt+0xeab4>
  409880:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409884:	mov	w1, #0x5                   	// #5
  409888:	mov	x0, #0x0                   	// #0
  40988c:	bl	411504 <__fxstatat@plt+0xeab4>
  409890:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409894:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409898:	mov	w1, #0x1                   	// #1
  40989c:	strb	w1, [x0, #1688]
  4098a0:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4098a4:	mov	w0, #0x2                   	// #2
  4098a8:	str	w0, [x19, #3560]
  4098ac:	mov	w26, #0x1                   	// #1
  4098b0:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4098b4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4098b8:	ldr	x28, [x0, #1440]
  4098bc:	mov	w2, #0x5                   	// #5
  4098c0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  4098c4:	add	x1, x1, #0x660
  4098c8:	mov	x0, #0x0                   	// #0
  4098cc:	bl	402970 <dcgettext@plt>
  4098d0:	mov	w6, #0x2                   	// #2
  4098d4:	mov	x5, x0
  4098d8:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x2af4>
  4098dc:	add	x4, x4, #0x1f0
  4098e0:	mov	x3, #0xffffffffffffffff    	// #-1
  4098e4:	mov	x2, #0x0                   	// #0
  4098e8:	mov	w1, #0x0                   	// #0
  4098ec:	mov	x0, x28
  4098f0:	bl	4125c8 <__fxstatat@plt+0xfb78>
  4098f4:	str	x0, [x19, #3896]
  4098f8:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4098fc:	mov	w0, #0xffffffff            	// #-1
  409900:	str	w0, [x19, #3560]
  409904:	mov	w26, #0x1                   	// #1
  409908:	b	4094f4 <__fxstatat@plt+0x6aa4>
  40990c:	mov	w26, #0x1                   	// #1
  409910:	str	w26, [x19, #3560]
  409914:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409918:	ldr	w0, [x19, #3496]
  40991c:	cbz	w0, 4094f4 <__fxstatat@plt+0x6aa4>
  409920:	mov	w0, #0x1                   	// #1
  409924:	str	w0, [x19, #3496]
  409928:	b	4094f4 <__fxstatat@plt+0x6aa4>
  40992c:	mov	w0, #0x1                   	// #1
  409930:	strb	w0, [x19, #3540]
  409934:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409938:	mov	x0, #0x10                  	// #16
  40993c:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  409940:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409944:	ldr	x1, [x1, #1440]
  409948:	str	x1, [x0]
  40994c:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  409950:	add	x1, x1, #0x6c8
  409954:	ldr	x2, [x1, #64]
  409958:	str	x2, [x0, #8]
  40995c:	str	x0, [x1, #64]
  409960:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409964:	add	x26, x25, #0x860
  409968:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40996c:	ldr	x5, [x0, #1312]
  409970:	mov	x4, #0x4                   	// #4
  409974:	mov	x3, x26
  409978:	add	x2, x25, #0x878
  40997c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409980:	ldr	x1, [x0, #1440]
  409984:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409988:	add	x0, x0, #0x678
  40998c:	bl	40afd4 <__fxstatat@plt+0x8584>
  409990:	ldr	w0, [x26, x0, lsl #2]
  409994:	str	w0, [x19, #3560]
  409998:	mov	w26, #0x1                   	// #1
  40999c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4099a0:	mov	w0, #0x1                   	// #1
  4099a4:	strb	w0, [x19, #3884]
  4099a8:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4099ac:	add	x28, x25, #0x8a8
  4099b0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4099b4:	ldr	x5, [x0, #1312]
  4099b8:	mov	x4, #0x4                   	// #4
  4099bc:	mov	x3, x28
  4099c0:	add	x2, x25, #0x8c0
  4099c4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4099c8:	ldr	x1, [x0, #1440]
  4099cc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  4099d0:	add	x0, x0, #0x680
  4099d4:	bl	40afd4 <__fxstatat@plt+0x8584>
  4099d8:	ldr	w0, [x28, x0, lsl #2]
  4099dc:	str	w0, [x19, #3880]
  4099e0:	b	4094f4 <__fxstatat@plt+0x6aa4>
  4099e4:	add	x28, x25, #0x8f0
  4099e8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4099ec:	ldr	x5, [x0, #1312]
  4099f0:	mov	x4, #0x4                   	// #4
  4099f4:	mov	x3, x28
  4099f8:	add	x2, x25, #0x910
  4099fc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409a00:	ldr	x1, [x0, #1440]
  409a04:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409a08:	add	x0, x0, #0x688
  409a0c:	bl	40afd4 <__fxstatat@plt+0x8584>
  409a10:	ldr	w0, [x28, x0, lsl #2]
  409a14:	str	w0, [x19, #3496]
  409a18:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409a1c:	str	wzr, [x19, #3496]
  409a20:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x3af4>
  409a24:	add	x24, x24, #0x4e0
  409a28:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409a2c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409a30:	ldr	x1, [x0, #1440]
  409a34:	cbz	x1, 40abf8 <__fxstatat@plt+0x81a8>
  409a38:	add	x28, x25, #0x950
  409a3c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409a40:	ldr	x5, [x0, #1312]
  409a44:	mov	x4, #0x4                   	// #4
  409a48:	mov	x3, x28
  409a4c:	add	x2, x25, #0x978
  409a50:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409a54:	add	x0, x0, #0x698
  409a58:	bl	40afd4 <__fxstatat@plt+0x8584>
  409a5c:	ldr	w0, [x28, x0, lsl #2]
  409a60:	cmp	w0, #0x1
  409a64:	b.eq	40abf8 <__fxstatat@plt+0x81a8>  // b.none
  409a68:	cmp	w0, #0x2
  409a6c:	b.eq	409a78 <__fxstatat@plt+0x7028>  // b.none
  409a70:	strb	wzr, [x19, #3475]
  409a74:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409a78:	mov	w0, #0x1                   	// #1
  409a7c:	bl	402920 <isatty@plt>
  409a80:	cmp	w0, #0x0
  409a84:	cset	w1, ne  // ne = any
  409a88:	strb	w1, [x19, #3475]
  409a8c:	cbz	w0, 4094f4 <__fxstatat@plt+0x6aa4>
  409a90:	b	40ac00 <__fxstatat@plt+0x81b0>
  409a94:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409a98:	ldr	x1, [x0, #1440]
  409a9c:	cbz	x1, 409af4 <__fxstatat@plt+0x70a4>
  409aa0:	add	x28, x25, #0x950
  409aa4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409aa8:	ldr	x5, [x0, #1312]
  409aac:	mov	x4, #0x4                   	// #4
  409ab0:	mov	x3, x28
  409ab4:	add	x2, x25, #0x978
  409ab8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409abc:	add	x0, x0, #0x6a0
  409ac0:	bl	40afd4 <__fxstatat@plt+0x8584>
  409ac4:	ldr	w0, [x28, x0, lsl #2]
  409ac8:	cmp	w0, #0x1
  409acc:	b.eq	409af8 <__fxstatat@plt+0x70a8>  // b.none
  409ad0:	cmp	w0, #0x2
  409ad4:	b.eq	409ae0 <__fxstatat@plt+0x7090>  // b.none
  409ad8:	mov	w0, #0x0                   	// #0
  409adc:	b	409af8 <__fxstatat@plt+0x70a8>
  409ae0:	mov	w0, #0x1                   	// #1
  409ae4:	bl	402920 <isatty@plt>
  409ae8:	cmp	w0, #0x0
  409aec:	cset	w0, ne  // ne = any
  409af0:	b	409af8 <__fxstatat@plt+0x70a8>
  409af4:	mov	w0, #0x1                   	// #1
  409af8:	and	w0, w0, #0x1
  409afc:	strb	w0, [x19, #3473]
  409b00:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409b04:	add	x28, x25, #0xa00
  409b08:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409b0c:	ldr	x5, [x0, #1312]
  409b10:	mov	x4, #0x4                   	// #4
  409b14:	add	x3, x25, #0x9c8
  409b18:	add	x2, x25, #0x9d8
  409b1c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409b20:	ldr	x1, [x0, #1440]
  409b24:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409b28:	add	x0, x0, #0x6b0
  409b2c:	bl	40afd4 <__fxstatat@plt+0x8584>
  409b30:	add	x0, x28, x0, lsl #2
  409b34:	ldur	w0, [x0, #-56]
  409b38:	str	w0, [x19, #32]
  409b3c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409b40:	adrp	x28, 41a000 <_obstack_memory_used@@Base+0x6af4>
  409b44:	add	x28, x28, #0x3d0
  409b48:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409b4c:	ldr	x5, [x0, #1312]
  409b50:	mov	x4, #0x4                   	// #4
  409b54:	mov	x3, x28
  409b58:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6af4>
  409b5c:	add	x2, x2, #0x3f8
  409b60:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409b64:	ldr	x1, [x0, #1440]
  409b68:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409b6c:	add	x0, x0, #0x6c8
  409b70:	bl	40afd4 <__fxstatat@plt+0x8584>
  409b74:	ldr	w1, [x28, x0, lsl #2]
  409b78:	mov	x0, #0x0                   	// #0
  409b7c:	bl	411504 <__fxstatat@plt+0xeab4>
  409b80:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409b84:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409b88:	ldr	x24, [x0, #1440]
  409b8c:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409b90:	strb	wzr, [x19, #3904]
  409b94:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409b98:	mov	x2, x27
  409b9c:	add	x1, x19, #0xdd0
  409ba0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409ba4:	ldr	x0, [x0, #1440]
  409ba8:	bl	40d9dc <__fxstatat@plt+0xaf8c>
  409bac:	cbnz	w0, 409bc8 <__fxstatat@plt+0x7178>
  409bb0:	ldr	w0, [x19, #3536]
  409bb4:	str	w0, [x19, #3544]
  409bb8:	ldr	x1, [x19, #3528]
  409bbc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409bc0:	str	x1, [x0, #1280]
  409bc4:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409bc8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409bcc:	ldr	x4, [x1, #1440]
  409bd0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x4af4>
  409bd4:	add	x3, x3, #0x8
  409bd8:	add	x3, x3, #0x2e0
  409bdc:	mov	w2, #0x0                   	// #0
  409be0:	ldr	w1, [sp, #112]
  409be4:	bl	412c14 <__fxstatat@plt+0x101c4>
  409be8:	mov	w0, #0x90                  	// #144
  409bec:	str	w0, [x19, #3536]
  409bf0:	str	w0, [x19, #3544]
  409bf4:	mov	x0, #0x1                   	// #1
  409bf8:	str	x0, [x19, #3528]
  409bfc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409c00:	str	x0, [x1, #1280]
  409c04:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409c08:	mov	w0, #0x1                   	// #1
  409c0c:	strb	w0, [x19, #3500]
  409c10:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409c14:	mov	w0, #0x0                   	// #0
  409c18:	bl	408c3c <__fxstatat@plt+0x61ec>
  409c1c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409c20:	ldr	x0, [x0, #1456]
  409c24:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409c28:	ldr	w2, [x1, #1296]
  409c2c:	cmp	w2, #0x1
  409c30:	b.eq	409c7c <__fxstatat@plt+0x722c>  // b.none
  409c34:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  409c38:	add	x3, x1, #0x618
  409c3c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  409c40:	add	x1, x1, #0x610
  409c44:	cmp	w2, #0x2
  409c48:	csel	x1, x1, x3, eq  // eq = none
  409c4c:	mov	x6, #0x0                   	// #0
  409c50:	adrp	x5, 417000 <_obstack_memory_used@@Base+0x3af4>
  409c54:	add	x5, x5, #0x6d8
  409c58:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x3af4>
  409c5c:	add	x4, x4, #0x6e8
  409c60:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409c64:	ldr	x3, [x2, #1304]
  409c68:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  409c6c:	add	x2, x2, #0x428
  409c70:	bl	4121f4 <__fxstatat@plt+0xf7a4>
  409c74:	mov	w0, #0x0                   	// #0
  409c78:	bl	402460 <exit@plt>
  409c7c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  409c80:	add	x1, x1, #0x608
  409c84:	b	409c4c <__fxstatat@plt+0x71fc>
  409c88:	mov	w0, #0x2                   	// #2
  409c8c:	bl	408c3c <__fxstatat@plt+0x61ec>
  409c90:	mov	w22, #0x1                   	// #1
  409c94:	b	4094f4 <__fxstatat@plt+0x6aa4>
  409c98:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409c9c:	ldr	x0, [x0, #912]
  409ca0:	cbz	x0, 409d0c <__fxstatat@plt+0x72bc>
  409ca4:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409ca8:	add	x19, x19, #0x5c8
  409cac:	ldr	x1, [x19, #88]
  409cb0:	mov	x0, #0x3                   	// #3
  409cb4:	udiv	x0, x1, x0
  409cb8:	add	x2, x0, x0, lsl #1
  409cbc:	cmp	x1, x2
  409cc0:	cinc	x0, x0, ne  // ne = any
  409cc4:	str	x0, [x19, #3912]
  409cc8:	mov	x0, #0x0                   	// #0
  409ccc:	bl	4114e8 <__fxstatat@plt+0xea98>
  409cd0:	mov	w22, w0
  409cd4:	ldr	w0, [x19, #3496]
  409cd8:	cmp	w0, #0x4
  409cdc:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  409ce0:	b.eq	409d80 <__fxstatat@plt+0x7330>  // b.none
  409ce4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409ce8:	ldr	x1, [x1, #1568]
  409cec:	cmp	x1, #0x0
  409cf0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  409cf4:	b.ne	409e9c <__fxstatat@plt+0x744c>  // b.any
  409cf8:	and	w0, w22, #0xfffffffd
  409cfc:	cmp	w0, #0x1
  409d00:	ccmp	w22, #0x6, #0x4, ne  // ne = any
  409d04:	cset	w0, eq  // eq = none
  409d08:	b	409d84 <__fxstatat@plt+0x7334>
  409d0c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409d10:	add	x0, x0, #0x700
  409d14:	bl	4029f0 <getenv@plt>
  409d18:	mov	x19, x0
  409d1c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409d20:	add	x1, x1, #0x5c8
  409d24:	add	x2, x1, #0xdc8
  409d28:	add	x1, x1, #0xdd0
  409d2c:	bl	40d9dc <__fxstatat@plt+0xaf8c>
  409d30:	cbz	x19, 409d6c <__fxstatat@plt+0x731c>
  409d34:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409d38:	add	x0, x0, #0x5c8
  409d3c:	ldr	w1, [x0, #3536]
  409d40:	str	w1, [x0, #3544]
  409d44:	ldr	x1, [x0, #3528]
  409d48:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409d4c:	str	x1, [x0, #1280]
  409d50:	cbz	w22, 409ca4 <__fxstatat@plt+0x7254>
  409d54:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409d58:	add	x0, x0, #0x5c8
  409d5c:	str	wzr, [x0, #3536]
  409d60:	mov	x1, #0x400                 	// #1024
  409d64:	str	x1, [x0, #3528]
  409d68:	b	409ca4 <__fxstatat@plt+0x7254>
  409d6c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409d70:	add	x0, x0, #0x710
  409d74:	bl	4029f0 <getenv@plt>
  409d78:	cbnz	x0, 409d34 <__fxstatat@plt+0x72e4>
  409d7c:	b	409d50 <__fxstatat@plt+0x7300>
  409d80:	mov	w0, #0x0                   	// #0
  409d84:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409d88:	add	x19, x19, #0x5c8
  409d8c:	strb	w0, [x19, #3472]
  409d90:	mov	x0, #0x0                   	// #0
  409d94:	bl	411498 <__fxstatat@plt+0xea48>
  409d98:	str	x0, [x19, #3192]
  409d9c:	cmp	w22, #0x7
  409da0:	b.eq	409ea4 <__fxstatat@plt+0x7454>  // b.none
  409da4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409da8:	ldr	w0, [x0, #1512]
  409dac:	cmp	w0, #0x1
  409db0:	b.ls	409dec <__fxstatat@plt+0x739c>  // b.plast
  409db4:	sub	w0, w0, #0x2
  409db8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409dbc:	add	x1, x1, #0x720
  409dc0:	add	x19, x0, x1
  409dc4:	ldrb	w1, [x1, x0]
  409dc8:	cbz	w1, 409dec <__fxstatat@plt+0x739c>
  409dcc:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409dd0:	add	x22, x22, #0x5c8
  409dd4:	mov	w23, #0x1                   	// #1
  409dd8:	mov	w2, w23
  409ddc:	ldr	x0, [x22, #3192]
  409de0:	bl	411520 <__fxstatat@plt+0xead0>
  409de4:	ldrb	w1, [x19, #1]!
  409de8:	cbnz	w1, 409dd8 <__fxstatat@plt+0x7388>
  409dec:	mov	x0, #0x0                   	// #0
  409df0:	bl	411498 <__fxstatat@plt+0xea48>
  409df4:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  409df8:	str	x0, [x1, #1784]
  409dfc:	mov	w2, #0x1                   	// #1
  409e00:	mov	w1, #0x3a                  	// #58
  409e04:	bl	411520 <__fxstatat@plt+0xead0>
  409e08:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409e0c:	ldrb	w0, [x0, #1464]
  409e10:	cbz	w0, 409e34 <__fxstatat@plt+0x73e4>
  409e14:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409e18:	ldr	w0, [x0, #880]
  409e1c:	cbnz	w0, 409e2c <__fxstatat@plt+0x73dc>
  409e20:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409e24:	ldrb	w0, [x0, #857]
  409e28:	cbz	w0, 40ac08 <__fxstatat@plt+0x81b8>
  409e2c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409e30:	strb	wzr, [x0, #1464]
  409e34:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409e38:	ldr	w0, [x0, #1264]
  409e3c:	sub	w0, w0, #0x1
  409e40:	cmp	w26, #0x0
  409e44:	ccmp	w0, #0x1, #0x2, eq  // eq = none
  409e48:	b.ls	409eb4 <__fxstatat@plt+0x7464>  // b.plast
  409e4c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409e50:	ldr	w0, [x0, #880]
  409e54:	cbnz	w0, 409fa4 <__fxstatat@plt+0x7554>
  409e58:	cbz	x24, 409ed0 <__fxstatat@plt+0x7480>
  409e5c:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x4af4>
  409e60:	add	x19, x19, #0x8
  409e64:	add	x19, x19, #0xa00
  409e68:	mov	x22, #0x6                   	// #6
  409e6c:	mov	w23, #0x2                   	// #2
  409e70:	mov	x2, x22
  409e74:	mov	x1, x19
  409e78:	mov	x0, x24
  409e7c:	bl	402640 <strncmp@plt>
  409e80:	cbnz	w0, 409efc <__fxstatat@plt+0x74ac>
  409e84:	mov	w0, w23
  409e88:	bl	40c214 <__fxstatat@plt+0x97c4>
  409e8c:	and	w0, w0, #0xff
  409e90:	cbz	w0, 409ef0 <__fxstatat@plt+0x74a0>
  409e94:	add	x24, x24, #0x6
  409e98:	b	409e70 <__fxstatat@plt+0x7420>
  409e9c:	mov	w0, #0x0                   	// #0
  409ea0:	b	409d84 <__fxstatat@plt+0x7334>
  409ea4:	mov	w2, #0x1                   	// #1
  409ea8:	mov	w1, #0x20                  	// #32
  409eac:	bl	411520 <__fxstatat@plt+0xead0>
  409eb0:	b	409da4 <__fxstatat@plt+0x7354>
  409eb4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409eb8:	ldr	w0, [x0, #880]
  409ebc:	cbz	w0, 409e58 <__fxstatat@plt+0x7408>
  409ec0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409ec4:	mov	w1, #0x4                   	// #4
  409ec8:	str	w1, [x0, #944]
  409ecc:	b	409fa4 <__fxstatat@plt+0x7554>
  409ed0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  409ed4:	add	x0, x0, #0x728
  409ed8:	bl	4029f0 <getenv@plt>
  409edc:	mov	x24, x0
  409ee0:	cbnz	x0, 409e5c <__fxstatat@plt+0x740c>
  409ee4:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x3af4>
  409ee8:	add	x24, x24, #0x4f0
  409eec:	b	409f08 <__fxstatat@plt+0x74b8>
  409ef0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409ef4:	ldr	w19, [x0, #1448]
  409ef8:	b	409fac <__fxstatat@plt+0x755c>
  409efc:	ldrb	w0, [x24]
  409f00:	cmp	w0, #0x2b
  409f04:	b.eq	409f60 <__fxstatat@plt+0x7510>  // b.none
  409f08:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4af4>
  409f0c:	add	x1, x1, #0x8
  409f10:	mov	x3, #0x4                   	// #4
  409f14:	add	x2, x1, #0xa08
  409f18:	add	x1, x1, #0x2b8
  409f1c:	mov	x0, x24
  409f20:	bl	40ad10 <__fxstatat@plt+0x82c0>
  409f24:	tbnz	x0, #63, 40a108 <__fxstatat@plt+0x76b8>
  409f28:	cmp	x0, #0x2
  409f2c:	b.eq	40a208 <__fxstatat@plt+0x77b8>  // b.none
  409f30:	cmp	x0, #0x2
  409f34:	b.gt	40a1a0 <__fxstatat@plt+0x7750>
  409f38:	cbz	x0, 40a1ec <__fxstatat@plt+0x779c>
  409f3c:	cmp	x0, #0x1
  409f40:	b.ne	409fa0 <__fxstatat@plt+0x7550>  // b.any
  409f44:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409f48:	add	x0, x0, #0x368
  409f4c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  409f50:	add	x1, x1, #0x7e0
  409f54:	str	x1, [x0, #392]
  409f58:	str	x1, [x0, #384]
  409f5c:	b	409fa0 <__fxstatat@plt+0x7550>
  409f60:	add	x24, x24, #0x1
  409f64:	mov	w1, #0xa                   	// #10
  409f68:	mov	x0, x24
  409f6c:	bl	402880 <strchr@plt>
  409f70:	mov	x19, x0
  409f74:	cbz	x0, 40a100 <__fxstatat@plt+0x76b0>
  409f78:	add	x22, x0, #0x1
  409f7c:	mov	w1, #0xa                   	// #10
  409f80:	mov	x0, x22
  409f84:	bl	402880 <strchr@plt>
  409f88:	cbnz	x0, 40a0cc <__fxstatat@plt+0x767c>
  409f8c:	strb	wzr, [x19]
  409f90:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409f94:	add	x0, x0, #0x368
  409f98:	str	x24, [x0, #384]
  409f9c:	str	x22, [x0, #392]
  409fa0:	bl	403484 <__fxstatat@plt+0xa34>
  409fa4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  409fa8:	ldr	w19, [x0, #1448]
  409fac:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409fb0:	ldrb	w0, [x0, #859]
  409fb4:	cbnz	w0, 40a22c <__fxstatat@plt+0x77dc>
  409fb8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409fbc:	ldrb	w0, [x0, #1268]
  409fc0:	cbz	w0, 409fd0 <__fxstatat@plt+0x7580>
  409fc4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409fc8:	mov	w1, #0x1                   	// #1
  409fcc:	strb	w1, [x0, #869]
  409fd0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409fd4:	ldr	w0, [x0, #864]
  409fd8:	cmp	w0, #0x1
  409fdc:	b.eq	40a5f8 <__fxstatat@plt+0x7ba8>  // b.none
  409fe0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  409fe4:	ldrb	w0, [x0, #1688]
  409fe8:	cbz	w0, 40a044 <__fxstatat@plt+0x75f4>
  409fec:	adrp	x4, 402000 <mbrtowc@plt-0x3b0>
  409ff0:	add	x4, x4, #0xe24
  409ff4:	adrp	x3, 402000 <mbrtowc@plt-0x3b0>
  409ff8:	add	x3, x3, #0xbc0
  409ffc:	adrp	x2, 402000 <mbrtowc@plt-0x3b0>
  40a000:	add	x2, x2, #0xbb0
  40a004:	mov	x1, #0x0                   	// #0
  40a008:	mov	x0, #0x1e                  	// #30
  40a00c:	bl	40cb04 <__fxstatat@plt+0xa0b4>
  40a010:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a014:	str	x0, [x1, #1480]
  40a018:	cbz	x0, 40a648 <__fxstatat@plt+0x7bf8>
  40a01c:	adrp	x4, 402000 <mbrtowc@plt-0x3b0>
  40a020:	add	x4, x4, #0x840
  40a024:	adrp	x3, 402000 <mbrtowc@plt-0x3b0>
  40a028:	add	x3, x3, #0x5f0
  40a02c:	mov	x2, #0x0                   	// #0
  40a030:	mov	x1, #0x0                   	// #0
  40a034:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a038:	add	x0, x0, #0x6c8
  40a03c:	sub	x0, x0, #0x88
  40a040:	bl	4132e8 <_obstack_begin@@Base>
  40a044:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a048:	add	x0, x0, #0x898
  40a04c:	bl	4029f0 <getenv@plt>
  40a050:	bl	413570 <_obstack_memory_used@@Base+0x64>
  40a054:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a058:	str	x0, [x1, #1488]
  40a05c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a060:	ldr	w0, [x0, #944]
  40a064:	sub	w0, w0, #0x2
  40a068:	tst	w0, #0xfffffffd
  40a06c:	b.eq	40ab1c <__fxstatat@plt+0x80cc>  // b.none
  40a070:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a074:	ldr	w0, [x0, #880]
  40a078:	cbz	w0, 40ab1c <__fxstatat@plt+0x80cc>
  40a07c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a080:	ldrb	w0, [x0, #884]
  40a084:	cbnz	w0, 40ab1c <__fxstatat@plt+0x80cc>
  40a088:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a08c:	add	x0, x0, #0x5c8
  40a090:	ldrb	w1, [x0, #3521]
  40a094:	strb	w1, [x0, #3474]
  40a098:	cbnz	w1, 40a64c <__fxstatat@plt+0x7bfc>
  40a09c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a0a0:	ldrb	w0, [x0, #1688]
  40a0a4:	cbnz	w0, 40a654 <__fxstatat@plt+0x7c04>
  40a0a8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a0ac:	ldrb	w0, [x0, #859]
  40a0b0:	cbnz	w0, 40a65c <__fxstatat@plt+0x7c0c>
  40a0b4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a0b8:	ldr	w0, [x0, #1512]
  40a0bc:	cbnz	w0, 40a664 <__fxstatat@plt+0x7c14>
  40a0c0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a0c4:	ldrb	w1, [x0, #1268]
  40a0c8:	b	40ab2c <__fxstatat@plt+0x80dc>
  40a0cc:	mov	w2, #0x5                   	// #5
  40a0d0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a0d4:	add	x1, x1, #0x738
  40a0d8:	mov	x0, #0x0                   	// #0
  40a0dc:	bl	402970 <dcgettext@plt>
  40a0e0:	mov	x19, x0
  40a0e4:	mov	x0, x24
  40a0e8:	bl	411be8 <__fxstatat@plt+0xf198>
  40a0ec:	mov	x3, x0
  40a0f0:	mov	x2, x19
  40a0f4:	mov	w1, #0x0                   	// #0
  40a0f8:	mov	w0, #0x2                   	// #2
  40a0fc:	bl	402490 <error@plt>
  40a100:	mov	x22, x24
  40a104:	b	409f90 <__fxstatat@plt+0x7540>
  40a108:	mov	x2, x0
  40a10c:	mov	x1, x24
  40a110:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a114:	add	x0, x0, #0x758
  40a118:	bl	40ae08 <__fxstatat@plt+0x83b8>
  40a11c:	mov	w2, #0x5                   	// #5
  40a120:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a124:	add	x1, x1, #0x768
  40a128:	mov	x0, #0x0                   	// #0
  40a12c:	bl	402970 <dcgettext@plt>
  40a130:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a134:	ldr	x1, [x1, #1432]
  40a138:	bl	402980 <fputs_unlocked@plt>
  40a13c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a140:	add	x3, x3, #0x4e0
  40a144:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x4af4>
  40a148:	add	x19, x19, #0x8
  40a14c:	add	x19, x19, #0x2b8
  40a150:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a154:	add	x20, x20, #0x780
  40a158:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a15c:	mov	w21, #0x1                   	// #1
  40a160:	mov	x2, x20
  40a164:	mov	w1, w21
  40a168:	ldr	x0, [x22, #1432]
  40a16c:	bl	4027e0 <__fprintf_chk@plt>
  40a170:	ldr	x3, [x19, #8]!
  40a174:	cbnz	x3, 40a160 <__fxstatat@plt+0x7710>
  40a178:	mov	w2, #0x5                   	// #5
  40a17c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a180:	add	x1, x1, #0x790
  40a184:	mov	x0, #0x0                   	// #0
  40a188:	bl	402970 <dcgettext@plt>
  40a18c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a190:	ldr	x1, [x1, #1432]
  40a194:	bl	402980 <fputs_unlocked@plt>
  40a198:	mov	w0, #0x2                   	// #2
  40a19c:	bl	408c3c <__fxstatat@plt+0x61ec>
  40a1a0:	cmp	x0, #0x3
  40a1a4:	b.ne	409fa0 <__fxstatat@plt+0x7550>  // b.any
  40a1a8:	mov	w0, #0x2                   	// #2
  40a1ac:	bl	40c214 <__fxstatat@plt+0x97c4>
  40a1b0:	and	w0, w0, #0xff
  40a1b4:	cbz	w0, 409fa0 <__fxstatat@plt+0x7550>
  40a1b8:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a1bc:	add	x19, x19, #0x368
  40a1c0:	mov	w2, #0x2                   	// #2
  40a1c4:	ldr	x1, [x19, #384]
  40a1c8:	mov	x0, #0x0                   	// #0
  40a1cc:	bl	402970 <dcgettext@plt>
  40a1d0:	str	x0, [x19, #384]
  40a1d4:	mov	w2, #0x2                   	// #2
  40a1d8:	ldr	x1, [x19, #392]
  40a1dc:	mov	x0, #0x0                   	// #0
  40a1e0:	bl	402970 <dcgettext@plt>
  40a1e4:	str	x0, [x19, #392]
  40a1e8:	b	409fa0 <__fxstatat@plt+0x7550>
  40a1ec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a1f0:	add	x0, x0, #0x368
  40a1f4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a1f8:	add	x1, x1, #0x7c8
  40a1fc:	str	x1, [x0, #392]
  40a200:	str	x1, [x0, #384]
  40a204:	b	409fa0 <__fxstatat@plt+0x7550>
  40a208:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a20c:	add	x0, x0, #0x368
  40a210:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a214:	add	x1, x1, #0x7f0
  40a218:	str	x1, [x0, #384]
  40a21c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a220:	add	x1, x1, #0x800
  40a224:	str	x1, [x0, #392]
  40a228:	b	409fa0 <__fxstatat@plt+0x7550>
  40a22c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a230:	add	x0, x0, #0x810
  40a234:	bl	4029f0 <getenv@plt>
  40a238:	str	x0, [sp, #104]
  40a23c:	cbz	x0, 40a248 <__fxstatat@plt+0x77f8>
  40a240:	ldrb	w1, [x0]
  40a244:	cbnz	w1, 40a2e4 <__fxstatat@plt+0x7894>
  40a248:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a24c:	add	x0, x0, #0x820
  40a250:	bl	4029f0 <getenv@plt>
  40a254:	cbz	x0, 40a260 <__fxstatat@plt+0x7810>
  40a258:	ldrb	w0, [x0]
  40a25c:	cbnz	w0, 40a55c <__fxstatat@plt+0x7b0c>
  40a260:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a264:	add	x0, x0, #0x830
  40a268:	bl	4029f0 <getenv@plt>
  40a26c:	mov	x27, x0
  40a270:	cbz	x0, 40abec <__fxstatat@plt+0x819c>
  40a274:	ldrb	w0, [x0]
  40a278:	cbz	w0, 40abec <__fxstatat@plt+0x819c>
  40a27c:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x4af4>
  40a280:	add	x22, x22, #0xb00
  40a284:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a288:	add	x24, x24, #0x838
  40a28c:	mov	x26, #0x5                   	// #5
  40a290:	mov	x23, x22
  40a294:	mov	x25, #0x10c3                	// #4291
  40a298:	b	40a2b8 <__fxstatat@plt+0x7868>
  40a29c:	mov	x0, x22
  40a2a0:	bl	402430 <strlen@plt>
  40a2a4:	add	x0, x0, #0x1
  40a2a8:	add	x22, x22, x0
  40a2ac:	sub	x0, x22, x23
  40a2b0:	cmp	x0, x25
  40a2b4:	b.hi	40abec <__fxstatat@plt+0x819c>  // b.pmore
  40a2b8:	mov	x2, x26
  40a2bc:	mov	x1, x24
  40a2c0:	mov	x0, x22
  40a2c4:	bl	402640 <strncmp@plt>
  40a2c8:	cbnz	w0, 40a29c <__fxstatat@plt+0x784c>
  40a2cc:	mov	w2, #0x0                   	// #0
  40a2d0:	mov	x1, x27
  40a2d4:	add	x0, x22, #0x5
  40a2d8:	bl	4028a0 <fnmatch@plt>
  40a2dc:	cbnz	w0, 40a29c <__fxstatat@plt+0x784c>
  40a2e0:	b	40a55c <__fxstatat@plt+0x7b0c>
  40a2e4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a2e8:	add	x1, x1, #0x968
  40a2ec:	ldrh	w2, [x1]
  40a2f0:	strh	w2, [sp, #96]
  40a2f4:	ldrb	w1, [x1, #2]
  40a2f8:	strb	w1, [sp, #98]
  40a2fc:	bl	412558 <__fxstatat@plt+0xfb08>
  40a300:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a304:	str	x0, [x1, #1808]
  40a308:	str	x0, [sp, #112]
  40a30c:	mov	w0, #0x1                   	// #1
  40a310:	mov	x24, #0x0                   	// #0
  40a314:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x4af4>
  40a318:	add	x23, x23, #0x8
  40a31c:	add	x23, x23, #0xa18
  40a320:	b	40a474 <__fxstatat@plt+0x7a24>
  40a324:	mov	w0, #0x1                   	// #1
  40a328:	b	40a474 <__fxstatat@plt+0x7a24>
  40a32c:	cmp	w0, #0x4
  40a330:	b.eq	40a4ec <__fxstatat@plt+0x7a9c>  // b.none
  40a334:	cmp	w0, #0x6
  40a338:	b.ne	40a530 <__fxstatat@plt+0x7ae0>  // b.any
  40a33c:	mov	w2, #0x5                   	// #5
  40a340:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a344:	add	x1, x1, #0x858
  40a348:	mov	x0, #0x0                   	// #0
  40a34c:	bl	402970 <dcgettext@plt>
  40a350:	mov	x2, x0
  40a354:	mov	w1, #0x0                   	// #0
  40a358:	mov	w0, #0x0                   	// #0
  40a35c:	bl	402490 <error@plt>
  40a360:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a364:	ldr	x0, [x0, #1808]
  40a368:	bl	402840 <free@plt>
  40a36c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a370:	ldr	x0, [x0, #1472]
  40a374:	b	40a540 <__fxstatat@plt+0x7af0>
  40a378:	ldr	x2, [sp, #104]
  40a37c:	ldrb	w1, [x2]
  40a380:	cmp	w1, #0x2a
  40a384:	b.eq	40a3b4 <__fxstatat@plt+0x7964>  // b.none
  40a388:	cmp	w1, #0x3a
  40a38c:	b.eq	40a3a8 <__fxstatat@plt+0x7958>  // b.none
  40a390:	cbz	w1, 40a54c <__fxstatat@plt+0x7afc>
  40a394:	add	x0, x2, #0x1
  40a398:	str	x0, [sp, #104]
  40a39c:	ldrb	w0, [x2]
  40a3a0:	strb	w0, [sp, #96]
  40a3a4:	b	40a490 <__fxstatat@plt+0x7a40>
  40a3a8:	add	x2, x2, #0x1
  40a3ac:	str	x2, [sp, #104]
  40a3b0:	b	40a474 <__fxstatat@plt+0x7a24>
  40a3b4:	mov	x0, #0x28                  	// #40
  40a3b8:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40a3bc:	mov	x24, x0
  40a3c0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a3c4:	add	x0, x0, #0x5c8
  40a3c8:	ldr	x1, [x0, #4088]
  40a3cc:	str	x1, [x24, #32]
  40a3d0:	str	x24, [x0, #4088]
  40a3d4:	ldr	x0, [sp, #104]
  40a3d8:	add	x0, x0, #0x1
  40a3dc:	str	x0, [sp, #104]
  40a3e0:	ldr	x0, [sp, #112]
  40a3e4:	str	x0, [x24, #8]
  40a3e8:	mov	x3, x24
  40a3ec:	mov	w2, #0x1                   	// #1
  40a3f0:	add	x1, sp, #0x68
  40a3f4:	add	x0, sp, #0x70
  40a3f8:	bl	402e38 <__fxstatat@plt+0x3e8>
  40a3fc:	ands	w0, w0, #0xff
  40a400:	mov	w0, #0x4                   	// #4
  40a404:	mov	w1, #0x6                   	// #6
  40a408:	csel	w0, w0, w1, ne  // ne = any
  40a40c:	b	40a474 <__fxstatat@plt+0x7a24>
  40a410:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a414:	add	x3, x3, #0x368
  40a418:	add	x3, x3, w22, sxtw #4
  40a41c:	ldr	x0, [sp, #112]
  40a420:	str	x0, [x3, #8]
  40a424:	mov	w2, #0x0                   	// #0
  40a428:	add	x1, sp, #0x68
  40a42c:	add	x0, sp, #0x70
  40a430:	bl	402e38 <__fxstatat@plt+0x3e8>
  40a434:	and	w0, w0, #0xff
  40a438:	cbnz	w0, 40a324 <__fxstatat@plt+0x78d4>
  40a43c:	mov	w2, #0x5                   	// #5
  40a440:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a444:	add	x1, x1, #0x840
  40a448:	mov	x0, #0x0                   	// #0
  40a44c:	bl	402970 <dcgettext@plt>
  40a450:	mov	x22, x0
  40a454:	add	x0, sp, #0x60
  40a458:	bl	411be8 <__fxstatat@plt+0xf198>
  40a45c:	mov	x3, x0
  40a460:	mov	x2, x22
  40a464:	mov	w1, #0x0                   	// #0
  40a468:	mov	w0, #0x0                   	// #0
  40a46c:	bl	402490 <error@plt>
  40a470:	mov	w0, #0x6                   	// #6
  40a474:	cmp	w0, #0x3
  40a478:	b.eq	40a4ac <__fxstatat@plt+0x7a5c>  // b.none
  40a47c:	b.hi	40a32c <__fxstatat@plt+0x78dc>  // b.pmore
  40a480:	cmp	w0, #0x1
  40a484:	b.eq	40a378 <__fxstatat@plt+0x7928>  // b.none
  40a488:	cmp	w0, #0x2
  40a48c:	b.ne	40a530 <__fxstatat@plt+0x7ae0>  // b.any
  40a490:	ldr	x0, [sp, #104]
  40a494:	ldrb	w1, [x0]
  40a498:	cbz	w1, 40a33c <__fxstatat@plt+0x78ec>
  40a49c:	add	x1, x0, #0x1
  40a4a0:	str	x1, [sp, #104]
  40a4a4:	ldrb	w0, [x0]
  40a4a8:	strb	w0, [sp, #97]
  40a4ac:	ldr	x0, [sp, #104]
  40a4b0:	add	x1, x0, #0x1
  40a4b4:	str	x1, [sp, #104]
  40a4b8:	ldrb	w0, [x0]
  40a4bc:	cmp	w0, #0x3d
  40a4c0:	b.ne	40a33c <__fxstatat@plt+0x78ec>  // b.any
  40a4c4:	mov	x22, #0x0                   	// #0
  40a4c8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a4cc:	add	x1, x1, #0x4f8
  40a4d0:	add	x0, sp, #0x60
  40a4d4:	bl	402800 <strcmp@plt>
  40a4d8:	cbz	w0, 40a410 <__fxstatat@plt+0x79c0>
  40a4dc:	add	x22, x22, #0x1
  40a4e0:	ldr	x1, [x23, x22, lsl #3]
  40a4e4:	cbnz	x1, 40a4d0 <__fxstatat@plt+0x7a80>
  40a4e8:	b	40a43c <__fxstatat@plt+0x79ec>
  40a4ec:	ldr	x0, [sp, #104]
  40a4f0:	add	x1, x0, #0x1
  40a4f4:	str	x1, [sp, #104]
  40a4f8:	ldrb	w0, [x0]
  40a4fc:	cmp	w0, #0x3d
  40a500:	b.ne	40a33c <__fxstatat@plt+0x78ec>  // b.any
  40a504:	ldr	x0, [sp, #112]
  40a508:	str	x0, [x24, #24]
  40a50c:	add	x3, x24, #0x10
  40a510:	mov	w2, #0x0                   	// #0
  40a514:	add	x1, sp, #0x68
  40a518:	add	x0, sp, #0x70
  40a51c:	bl	402e38 <__fxstatat@plt+0x3e8>
  40a520:	ands	w0, w0, #0xff
  40a524:	mov	w0, #0x6                   	// #6
  40a528:	csinc	w0, w0, wzr, eq  // eq = none
  40a52c:	b	40a474 <__fxstatat@plt+0x7a24>
  40a530:	bl	402760 <abort@plt>
  40a534:	ldr	x22, [x0, #32]
  40a538:	bl	402840 <free@plt>
  40a53c:	mov	x0, x22
  40a540:	cbnz	x0, 40a534 <__fxstatat@plt+0x7ae4>
  40a544:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a548:	strb	wzr, [x0, #859]
  40a54c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a550:	ldr	x0, [x0, #984]
  40a554:	cmp	x0, #0x6
  40a558:	b.eq	40a5cc <__fxstatat@plt+0x7b7c>  // b.none
  40a55c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a560:	ldrb	w0, [x0, #1268]
  40a564:	cbnz	w0, 409fc4 <__fxstatat@plt+0x7574>
  40a568:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a56c:	ldrb	w0, [x0, #859]
  40a570:	cbz	w0, 409fd0 <__fxstatat@plt+0x7580>
  40a574:	mov	w0, #0xd                   	// #13
  40a578:	bl	4033a4 <__fxstatat@plt+0x954>
  40a57c:	and	w0, w0, #0xff
  40a580:	cbnz	w0, 40a5bc <__fxstatat@plt+0x7b6c>
  40a584:	mov	w0, #0xe                   	// #14
  40a588:	bl	4033a4 <__fxstatat@plt+0x954>
  40a58c:	and	w0, w0, #0xff
  40a590:	cbz	w0, 40a5a0 <__fxstatat@plt+0x7b50>
  40a594:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a598:	ldrb	w0, [x0, #868]
  40a59c:	cbnz	w0, 40a5bc <__fxstatat@plt+0x7b6c>
  40a5a0:	mov	w0, #0xc                   	// #12
  40a5a4:	bl	4033a4 <__fxstatat@plt+0x954>
  40a5a8:	and	w0, w0, #0xff
  40a5ac:	cbz	w0, 409fd0 <__fxstatat@plt+0x7580>
  40a5b0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a5b4:	ldr	w0, [x0, #880]
  40a5b8:	cbnz	w0, 409fd0 <__fxstatat@plt+0x7580>
  40a5bc:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a5c0:	mov	w1, #0x1                   	// #1
  40a5c4:	strb	w1, [x0, #869]
  40a5c8:	b	409fd0 <__fxstatat@plt+0x7580>
  40a5cc:	mov	x2, #0x6                   	// #6
  40a5d0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a5d4:	add	x1, x1, #0x890
  40a5d8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a5dc:	ldr	x0, [x0, #992]
  40a5e0:	bl	402640 <strncmp@plt>
  40a5e4:	cbnz	w0, 40a55c <__fxstatat@plt+0x7b0c>
  40a5e8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a5ec:	mov	w1, #0x1                   	// #1
  40a5f0:	strb	w1, [x0, #868]
  40a5f4:	b	40a55c <__fxstatat@plt+0x7b0c>
  40a5f8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a5fc:	ldrb	w0, [x0, #904]
  40a600:	cbnz	w0, 40a630 <__fxstatat@plt+0x7be0>
  40a604:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a608:	ldr	w0, [x0, #1512]
  40a60c:	cmp	w0, #0x3
  40a610:	b.eq	40a640 <__fxstatat@plt+0x7bf0>  // b.none
  40a614:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a618:	ldr	w0, [x0, #880]
  40a61c:	cmp	w0, #0x0
  40a620:	mov	w0, #0x2                   	// #2
  40a624:	mov	w1, #0x4                   	// #4
  40a628:	csel	w0, w0, w1, eq  // eq = none
  40a62c:	b	40a634 <__fxstatat@plt+0x7be4>
  40a630:	mov	w0, #0x2                   	// #2
  40a634:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a638:	str	w0, [x1, #864]
  40a63c:	b	409fe0 <__fxstatat@plt+0x7590>
  40a640:	mov	w0, #0x2                   	// #2
  40a644:	b	40a634 <__fxstatat@plt+0x7be4>
  40a648:	bl	412584 <__fxstatat@plt+0xfb34>
  40a64c:	mov	w1, #0x0                   	// #0
  40a650:	b	40ab2c <__fxstatat@plt+0x80dc>
  40a654:	mov	w1, #0x1                   	// #1
  40a658:	b	40ab2c <__fxstatat@plt+0x80dc>
  40a65c:	mov	w1, #0x1                   	// #1
  40a660:	b	40ab2c <__fxstatat@plt+0x80dc>
  40a664:	mov	w1, #0x1                   	// #1
  40a668:	b	40ab2c <__fxstatat@plt+0x80dc>
  40a66c:	adrp	x24, 402000 <mbrtowc@plt-0x3b0>
  40a670:	add	x24, x24, #0x840
  40a674:	adrp	x23, 402000 <mbrtowc@plt-0x3b0>
  40a678:	add	x23, x23, #0x5f0
  40a67c:	adrp	x22, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a680:	add	x22, x22, #0x6c8
  40a684:	mov	x4, x24
  40a688:	mov	x3, x23
  40a68c:	mov	x2, #0x0                   	// #0
  40a690:	mov	x1, #0x0                   	// #0
  40a694:	sub	x0, x22, #0xe0
  40a698:	bl	4132e8 <_obstack_begin@@Base>
  40a69c:	mov	x4, x24
  40a6a0:	mov	x3, x23
  40a6a4:	mov	x2, #0x0                   	// #0
  40a6a8:	mov	x1, #0x0                   	// #0
  40a6ac:	sub	x0, x22, #0x28
  40a6b0:	bl	4132e8 <_obstack_begin@@Base>
  40a6b4:	b	40ab44 <__fxstatat@plt+0x80f4>
  40a6b8:	mov	x2, #0x0                   	// #0
  40a6bc:	mov	w3, #0x1                   	// #1
  40a6c0:	adrp	x5, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a6c4:	add	x5, x5, #0x5c8
  40a6c8:	add	x5, x5, #0xc80
  40a6cc:	b	40a6ec <__fxstatat@plt+0x7c9c>
  40a6d0:	mov	w0, w3
  40a6d4:	ldrb	w1, [x2, x5]
  40a6d8:	orr	w0, w0, w1
  40a6dc:	strb	w0, [x2, x5]
  40a6e0:	add	x2, x2, #0x1
  40a6e4:	cmp	x2, #0x100
  40a6e8:	b.eq	40a744 <__fxstatat@plt+0x7cf4>  // b.none
  40a6ec:	mov	w4, w2
  40a6f0:	cmp	w2, #0x5a
  40a6f4:	b.gt	40a730 <__fxstatat@plt+0x7ce0>
  40a6f8:	mov	w0, w3
  40a6fc:	cmp	w2, #0x40
  40a700:	b.gt	40a6d4 <__fxstatat@plt+0x7c84>
  40a704:	sub	w0, w2, #0x30
  40a708:	cmp	w0, #0x9
  40a70c:	b.ls	40a6d0 <__fxstatat@plt+0x7c80>  // b.plast
  40a710:	sub	w4, w4, #0x2d
  40a714:	cmp	w2, #0x7e
  40a718:	mov	w0, w3
  40a71c:	ccmp	w4, #0x1, #0x0, ne  // ne = any
  40a720:	b.ls	40a6d4 <__fxstatat@plt+0x7c84>  // b.plast
  40a724:	cmp	w2, #0x5f
  40a728:	cset	w0, eq  // eq = none
  40a72c:	b	40a6d4 <__fxstatat@plt+0x7c84>
  40a730:	sub	w1, w2, #0x61
  40a734:	mov	w0, w3
  40a738:	cmp	w1, #0x19
  40a73c:	b.hi	40a710 <__fxstatat@plt+0x7cc0>  // b.pmore
  40a740:	b	40a6d4 <__fxstatat@plt+0x7c84>
  40a744:	bl	412730 <__fxstatat@plt+0xfce0>
  40a748:	cbz	x0, 40a758 <__fxstatat@plt+0x7d08>
  40a74c:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a750:	str	x0, [x1, #1456]
  40a754:	b	40ab50 <__fxstatat@plt+0x8100>
  40a758:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a75c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  40a760:	add	x1, x1, #0x1f0
  40a764:	str	x1, [x0, #1456]
  40a768:	b	40ab50 <__fxstatat@plt+0x8100>
  40a76c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a770:	ldrb	w0, [x0, #904]
  40a774:	cbz	w0, 40a7c4 <__fxstatat@plt+0x7d74>
  40a778:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x2af4>
  40a77c:	add	x4, x4, #0x1f0
  40a780:	mov	w3, #0x1                   	// #1
  40a784:	mov	x2, #0x0                   	// #0
  40a788:	mov	w1, #0x3                   	// #3
  40a78c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a790:	add	x0, x0, #0x8a0
  40a794:	bl	403c74 <__fxstatat@plt+0x1224>
  40a798:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a79c:	ldr	x0, [x0, #1488]
  40a7a0:	cbnz	x0, 40a7dc <__fxstatat@plt+0x7d8c>
  40a7a4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a7a8:	ldr	x19, [x0, #560]
  40a7ac:	cbz	x19, 40a950 <__fxstatat@plt+0x7f00>
  40a7b0:	ldr	x0, [x19, #24]
  40a7b4:	cbnz	x0, 40abd4 <__fxstatat@plt+0x8184>
  40a7b8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a7bc:	strb	wzr, [x0, #1689]
  40a7c0:	b	40abd4 <__fxstatat@plt+0x8184>
  40a7c4:	mov	w2, #0x1                   	// #1
  40a7c8:	mov	x1, #0x0                   	// #0
  40a7cc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a7d0:	add	x0, x0, #0x8a0
  40a7d4:	bl	4036c0 <__fxstatat@plt+0xc70>
  40a7d8:	b	40a798 <__fxstatat@plt+0x7d48>
  40a7dc:	bl	4048c8 <__fxstatat@plt+0x1e78>
  40a7e0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a7e4:	ldrb	w0, [x0, #904]
  40a7e8:	cbz	w0, 40a848 <__fxstatat@plt+0x7df8>
  40a7ec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a7f0:	ldr	x0, [x0, #1488]
  40a7f4:	cbz	x0, 40abc0 <__fxstatat@plt+0x8170>
  40a7f8:	bl	4080f4 <__fxstatat@plt+0x56a4>
  40a7fc:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a800:	ldr	x0, [x0, #560]
  40a804:	cbz	x0, 40a950 <__fxstatat@plt+0x7f00>
  40a808:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a80c:	ldr	x0, [x0, #1456]
  40a810:	ldr	x1, [x0, #40]
  40a814:	ldr	x2, [x0, #48]
  40a818:	cmp	x2, x1
  40a81c:	b.ls	40a858 <__fxstatat@plt+0x7e08>  // b.plast
  40a820:	add	x2, x1, #0x1
  40a824:	str	x2, [x0, #40]
  40a828:	mov	w0, #0xa                   	// #10
  40a82c:	strb	w0, [x1]
  40a830:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a834:	add	x0, x0, #0x5c8
  40a838:	ldr	x1, [x0, #3888]
  40a83c:	add	x1, x1, #0x1
  40a840:	str	x1, [x0, #3888]
  40a844:	b	40abc8 <__fxstatat@plt+0x8178>
  40a848:	mov	w1, #0x1                   	// #1
  40a84c:	mov	x0, #0x0                   	// #0
  40a850:	bl	40769c <__fxstatat@plt+0x4c4c>
  40a854:	b	40a7ec <__fxstatat@plt+0x7d9c>
  40a858:	mov	w1, #0xa                   	// #10
  40a85c:	bl	402780 <__overflow@plt>
  40a860:	b	40a830 <__fxstatat@plt+0x7de0>
  40a864:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x4af4>
  40a868:	add	x3, x3, #0x8
  40a86c:	add	x3, x3, #0xae0
  40a870:	mov	w2, #0x403                 	// #1027
  40a874:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  40a878:	add	x1, x1, #0x430
  40a87c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a880:	add	x0, x0, #0x8a8
  40a884:	bl	4029d0 <__assert_fail@plt>
  40a888:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x4af4>
  40a88c:	add	x3, x3, #0x8
  40a890:	add	x3, x3, #0xaf0
  40a894:	mov	w2, #0x640                 	// #1600
  40a898:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  40a89c:	add	x1, x1, #0x430
  40a8a0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a8a4:	add	x0, x0, #0x8e0
  40a8a8:	bl	4029d0 <__assert_fail@plt>
  40a8ac:	ldrb	w2, [x19, #16]
  40a8b0:	ldr	x1, [x19, #8]
  40a8b4:	ldr	x0, [x19]
  40a8b8:	bl	408528 <__fxstatat@plt+0x5ad8>
  40a8bc:	ldr	x0, [x19]
  40a8c0:	bl	402840 <free@plt>
  40a8c4:	ldr	x0, [x19, #8]
  40a8c8:	bl	402840 <free@plt>
  40a8cc:	mov	x0, x19
  40a8d0:	bl	402840 <free@plt>
  40a8d4:	sturb	w22, [x20, #-47]
  40a8d8:	ldr	x19, [x21, #3176]
  40a8dc:	cbz	x19, 40a950 <__fxstatat@plt+0x7f00>
  40a8e0:	ldr	x0, [x19, #24]
  40a8e4:	str	x0, [x21, #3176]
  40a8e8:	ldur	x0, [x20, #-256]
  40a8ec:	cbz	x0, 40a8ac <__fxstatat@plt+0x7e5c>
  40a8f0:	ldr	x1, [x19]
  40a8f4:	cbnz	x1, 40a8ac <__fxstatat@plt+0x7e5c>
  40a8f8:	ldur	x1, [x20, #-112]
  40a8fc:	ldur	x2, [x20, #-120]
  40a900:	sub	x2, x1, x2
  40a904:	cmp	x2, #0xf
  40a908:	b.ls	40a864 <__fxstatat@plt+0x7e14>  // b.plast
  40a90c:	sub	x2, x1, #0x10
  40a910:	stur	x2, [x20, #-112]
  40a914:	ldur	x2, [x1, #-16]
  40a918:	ldur	x1, [x1, #-8]
  40a91c:	str	x2, [sp, #112]
  40a920:	str	x1, [sp, #120]
  40a924:	add	x1, sp, #0x70
  40a928:	bl	40d07c <__fxstatat@plt+0xa62c>
  40a92c:	cbz	x0, 40a888 <__fxstatat@plt+0x7e38>
  40a930:	bl	402840 <free@plt>
  40a934:	ldr	x0, [x19]
  40a938:	bl	402840 <free@plt>
  40a93c:	ldr	x0, [x19, #8]
  40a940:	bl	402840 <free@plt>
  40a944:	mov	x0, x19
  40a948:	bl	402840 <free@plt>
  40a94c:	b	40a8d8 <__fxstatat@plt+0x7e88>
  40a950:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a954:	ldrb	w0, [x0, #859]
  40a958:	cbz	w0, 40aa4c <__fxstatat@plt+0x7ffc>
  40a95c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40a960:	ldrb	w0, [x0, #1320]
  40a964:	cbz	w0, 40aa4c <__fxstatat@plt+0x7ffc>
  40a968:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a96c:	ldr	x0, [x0, #872]
  40a970:	cmp	x0, #0x2
  40a974:	b.ne	40a9a4 <__fxstatat@plt+0x7f54>  // b.any
  40a978:	mov	x2, #0x2                   	// #2
  40a97c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40a980:	add	x1, x1, #0x8e8
  40a984:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a988:	ldr	x0, [x0, #880]
  40a98c:	bl	4027a0 <memcmp@plt>
  40a990:	cbnz	w0, 40a9a4 <__fxstatat@plt+0x7f54>
  40a994:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a998:	ldr	x0, [x0, #888]
  40a99c:	cmp	x0, #0x1
  40a9a0:	b.eq	40a9d4 <__fxstatat@plt+0x7f84>  // b.none
  40a9a4:	bl	405b7c <__fxstatat@plt+0x312c>
  40a9a8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a9ac:	ldr	x0, [x0, #1456]
  40a9b0:	bl	4028b0 <fflush_unlocked@plt>
  40a9b4:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x4af4>
  40a9b8:	add	x21, x21, #0x8
  40a9bc:	add	x19, x21, #0x1e0
  40a9c0:	add	x21, x21, #0x210
  40a9c4:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a9c8:	add	x22, x22, #0x5c8
  40a9cc:	add	x22, x22, #0xf68
  40a9d0:	b	40aa04 <__fxstatat@plt+0x7fb4>
  40a9d4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40a9d8:	ldr	x0, [x0, #896]
  40a9dc:	ldrb	w0, [x0]
  40a9e0:	cmp	w0, #0x6d
  40a9e4:	b.ne	40a9a4 <__fxstatat@plt+0x7f54>  // b.any
  40a9e8:	b	40a9a8 <__fxstatat@plt+0x7f58>
  40a9ec:	mov	x1, #0x0                   	// #0
  40a9f0:	mov	w0, w20
  40a9f4:	bl	4025b0 <signal@plt>
  40a9f8:	add	x19, x19, #0x4
  40a9fc:	cmp	x21, x19
  40aa00:	b.eq	40aa1c <__fxstatat@plt+0x7fcc>  // b.none
  40aa04:	ldr	w20, [x19]
  40aa08:	mov	w1, w20
  40aa0c:	mov	x0, x22
  40aa10:	bl	4027f0 <sigismember@plt>
  40aa14:	cbz	w0, 40a9f8 <__fxstatat@plt+0x7fa8>
  40aa18:	b	40a9ec <__fxstatat@plt+0x7f9c>
  40aa1c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40aa20:	add	x0, x0, #0x5c8
  40aa24:	ldr	w19, [x0, #4]
  40aa28:	cbz	w19, 40aa40 <__fxstatat@plt+0x7ff0>
  40aa2c:	mov	w20, #0x13                  	// #19
  40aa30:	mov	w0, w20
  40aa34:	bl	402480 <raise@plt>
  40aa38:	subs	w19, w19, #0x1
  40aa3c:	b.ne	40aa30 <__fxstatat@plt+0x7fe0>  // b.any
  40aa40:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40aa44:	ldr	w0, [x0, #1480]
  40aa48:	cbnz	w0, 40aa9c <__fxstatat@plt+0x804c>
  40aa4c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40aa50:	ldrb	w0, [x0, #1464]
  40aa54:	cbnz	w0, 40aaa4 <__fxstatat@plt+0x8054>
  40aa58:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40aa5c:	ldr	x19, [x0, #1480]
  40aa60:	cbz	x19, 40aa78 <__fxstatat@plt+0x8028>
  40aa64:	mov	x0, x19
  40aa68:	bl	40c6e0 <__fxstatat@plt+0x9c90>
  40aa6c:	cbnz	x0, 40aaf8 <__fxstatat@plt+0x80a8>
  40aa70:	mov	x0, x19
  40aa74:	bl	40cc90 <__fxstatat@plt+0xa240>
  40aa78:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40aa7c:	ldr	w0, [x0, #568]
  40aa80:	ldp	x19, x20, [sp, #16]
  40aa84:	ldp	x21, x22, [sp, #32]
  40aa88:	ldp	x23, x24, [sp, #48]
  40aa8c:	ldp	x25, x26, [sp, #64]
  40aa90:	ldp	x27, x28, [sp, #80]
  40aa94:	ldp	x29, x30, [sp], #128
  40aa98:	ret
  40aa9c:	bl	402480 <raise@plt>
  40aaa0:	b	40aa4c <__fxstatat@plt+0x7ffc>
  40aaa4:	adrp	x19, 430000 <__progname@@GLIBC_2.17+0xa48>
  40aaa8:	add	x19, x19, #0x6c8
  40aaac:	sub	x1, x19, #0xe0
  40aab0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40aab4:	add	x0, x0, #0x8f0
  40aab8:	bl	405c64 <__fxstatat@plt+0x3214>
  40aabc:	sub	x1, x19, #0x28
  40aac0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40aac4:	add	x0, x0, #0x900
  40aac8:	bl	405c64 <__fxstatat@plt+0x3214>
  40aacc:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40aad0:	ldr	x0, [x0, #576]
  40aad4:	bl	4114e8 <__fxstatat@plt+0xea98>
  40aad8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  40aadc:	add	x1, x1, #0x3f8
  40aae0:	ldr	x2, [x1, w0, uxtw #3]
  40aae4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40aae8:	add	x1, x1, #0x910
  40aaec:	mov	w0, #0x1                   	// #1
  40aaf0:	bl	402670 <__printf_chk@plt>
  40aaf4:	b	40aa58 <__fxstatat@plt+0x8008>
  40aaf8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x4af4>
  40aafc:	add	x3, x3, #0x8
  40ab00:	add	x3, x3, #0xaf0
  40ab04:	mov	w2, #0x674                 	// #1652
  40ab08:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1af4>
  40ab0c:	add	x1, x1, #0x430
  40ab10:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40ab14:	add	x0, x0, #0x938
  40ab18:	bl	4029d0 <__assert_fail@plt>
  40ab1c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40ab20:	mov	w1, #0x1                   	// #1
  40ab24:	strb	w1, [x0, #858]
  40ab28:	mov	w1, #0x0                   	// #0
  40ab2c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40ab30:	add	x0, x0, #0x5c8
  40ab34:	and	w1, w1, #0x1
  40ab38:	strb	w1, [x0, #3477]
  40ab3c:	ldrb	w0, [x0, #4080]
  40ab40:	cbnz	w0, 40a66c <__fxstatat@plt+0x7c1c>
  40ab44:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40ab48:	ldrb	w0, [x0, #857]
  40ab4c:	cbnz	w0, 40a6b8 <__fxstatat@plt+0x7c68>
  40ab50:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40ab54:	add	x22, x22, #0x5c8
  40ab58:	mov	x0, #0x64                  	// #100
  40ab5c:	str	x0, [x22, #3464]
  40ab60:	mov	x0, #0x47e0                	// #18400
  40ab64:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40ab68:	str	x0, [x22, #16]
  40ab6c:	str	xzr, [x22, #8]
  40ab70:	bl	402d84 <__fxstatat@plt+0x334>
  40ab74:	sub	w24, w21, w19
  40ab78:	cmp	w24, #0x0
  40ab7c:	b.le	40a76c <__fxstatat@plt+0x7d1c>
  40ab80:	sxtw	x19, w19
  40ab84:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x2af4>
  40ab88:	add	x22, x22, #0x1f0
  40ab8c:	mov	w23, #0x1                   	// #1
  40ab90:	mov	x4, x22
  40ab94:	mov	w3, w23
  40ab98:	mov	x2, #0x0                   	// #0
  40ab9c:	mov	w1, #0x0                   	// #0
  40aba0:	ldr	x0, [x20, x19, lsl #3]
  40aba4:	bl	403c74 <__fxstatat@plt+0x1224>
  40aba8:	add	x19, x19, #0x1
  40abac:	cmp	w21, w19
  40abb0:	b.gt	40ab90 <__fxstatat@plt+0x8140>
  40abb4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40abb8:	ldr	x0, [x0, #1488]
  40abbc:	cbnz	x0, 40a7dc <__fxstatat@plt+0x7d8c>
  40abc0:	cmp	w24, #0x1
  40abc4:	b.le	40a7a4 <__fxstatat@plt+0x7d54>
  40abc8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40abcc:	ldr	x19, [x0, #560]
  40abd0:	cbz	x19, 40a950 <__fxstatat@plt+0x7f00>
  40abd4:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40abd8:	add	x21, x21, #0x5c8
  40abdc:	adrp	x20, 430000 <__progname@@GLIBC_2.17+0xa48>
  40abe0:	add	x20, x20, #0x6c8
  40abe4:	mov	w22, #0x1                   	// #1
  40abe8:	b	40a8e0 <__fxstatat@plt+0x7e90>
  40abec:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40abf0:	strb	wzr, [x0, #859]
  40abf4:	b	40a55c <__fxstatat@plt+0x7b0c>
  40abf8:	mov	w0, #0x1                   	// #1
  40abfc:	strb	w0, [x19, #3475]
  40ac00:	str	xzr, [x19, #3896]
  40ac04:	b	4094f4 <__fxstatat@plt+0x6aa4>
  40ac08:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40ac0c:	ldr	w0, [x0, #1264]
  40ac10:	sub	w0, w0, #0x1
  40ac14:	cmp	w26, #0x0
  40ac18:	ccmp	w0, #0x1, #0x2, eq  // eq = none
  40ac1c:	b.hi	409e4c <__fxstatat@plt+0x73fc>  // b.pmore
  40ac20:	b	409e58 <__fxstatat@plt+0x7408>
  40ac24:	stp	x29, x30, [sp, #-64]!
  40ac28:	mov	x29, sp
  40ac2c:	stp	x19, x20, [sp, #16]
  40ac30:	stp	x21, x22, [sp, #32]
  40ac34:	stp	x23, x24, [sp, #48]
  40ac38:	mov	x22, x0
  40ac3c:	cmp	x1, #0x401
  40ac40:	mov	x19, #0x401                 	// #1025
  40ac44:	csinc	x19, x19, x1, cs  // cs = hs, nlast
  40ac48:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
  40ac4c:	mov	x24, #0x7ffffffffffffffe    	// #9223372036854775806
  40ac50:	b	40ac9c <__fxstatat@plt+0x824c>
  40ac54:	bl	4029e0 <__errno_location@plt>
  40ac58:	ldr	w0, [x0]
  40ac5c:	cmp	w0, #0x22
  40ac60:	b.eq	40acc4 <__fxstatat@plt+0x8274>  // b.none
  40ac64:	mov	x0, x20
  40ac68:	bl	402840 <free@plt>
  40ac6c:	mov	x20, #0x0                   	// #0
  40ac70:	b	40ac78 <__fxstatat@plt+0x8228>
  40ac74:	strb	wzr, [x20, x21]
  40ac78:	mov	x0, x20
  40ac7c:	ldp	x19, x20, [sp, #16]
  40ac80:	ldp	x21, x22, [sp, #32]
  40ac84:	ldp	x23, x24, [sp, #48]
  40ac88:	ldp	x29, x30, [sp], #64
  40ac8c:	ret
  40ac90:	cmp	x19, x24
  40ac94:	b.hi	40ace4 <__fxstatat@plt+0x8294>  // b.pmore
  40ac98:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  40ac9c:	mov	x0, x19
  40aca0:	bl	4025f0 <malloc@plt>
  40aca4:	mov	x20, x0
  40aca8:	cbz	x0, 40ac78 <__fxstatat@plt+0x8228>
  40acac:	mov	x2, x19
  40acb0:	mov	x1, x0
  40acb4:	mov	x0, x22
  40acb8:	bl	4024d0 <readlink@plt>
  40acbc:	mov	x21, x0
  40acc0:	tbnz	x0, #63, 40ac54 <__fxstatat@plt+0x8204>
  40acc4:	cmp	x19, x21
  40acc8:	b.hi	40ac74 <__fxstatat@plt+0x8224>  // b.pmore
  40accc:	mov	x0, x20
  40acd0:	bl	402840 <free@plt>
  40acd4:	cmp	x19, x23
  40acd8:	b.hi	40ac90 <__fxstatat@plt+0x8240>  // b.pmore
  40acdc:	lsl	x19, x19, #1
  40ace0:	b	40ac9c <__fxstatat@plt+0x824c>
  40ace4:	bl	4029e0 <__errno_location@plt>
  40ace8:	mov	w1, #0xc                   	// #12
  40acec:	str	w1, [x0]
  40acf0:	mov	x20, #0x0                   	// #0
  40acf4:	b	40ac78 <__fxstatat@plt+0x8228>
  40acf8:	stp	x29, x30, [sp, #-16]!
  40acfc:	mov	x29, sp
  40ad00:	mov	w0, #0x1                   	// #1
  40ad04:	bl	408c3c <__fxstatat@plt+0x61ec>
  40ad08:	ldp	x29, x30, [sp], #16
  40ad0c:	ret
  40ad10:	stp	x29, x30, [sp, #-96]!
  40ad14:	mov	x29, sp
  40ad18:	stp	x19, x20, [sp, #16]
  40ad1c:	stp	x23, x24, [sp, #48]
  40ad20:	stp	x25, x26, [sp, #64]
  40ad24:	stp	x27, x28, [sp, #80]
  40ad28:	mov	x25, x0
  40ad2c:	mov	x24, x1
  40ad30:	mov	x27, x2
  40ad34:	mov	x23, x3
  40ad38:	bl	402430 <strlen@plt>
  40ad3c:	ldr	x19, [x24]
  40ad40:	cbz	x19, 40ae00 <__fxstatat@plt+0x83b0>
  40ad44:	stp	x21, x22, [sp, #32]
  40ad48:	mov	x22, x0
  40ad4c:	mov	x21, x27
  40ad50:	mov	w28, #0x0                   	// #0
  40ad54:	mov	x26, #0xffffffffffffffff    	// #-1
  40ad58:	mov	x20, #0x0                   	// #0
  40ad5c:	b	40ad80 <__fxstatat@plt+0x8330>
  40ad60:	mov	x26, x20
  40ad64:	ldp	x21, x22, [sp, #32]
  40ad68:	b	40ade4 <__fxstatat@plt+0x8394>
  40ad6c:	mov	x26, x20
  40ad70:	add	x20, x20, #0x1
  40ad74:	ldr	x19, [x24, x20, lsl #3]
  40ad78:	add	x21, x21, x23
  40ad7c:	cbz	x19, 40add4 <__fxstatat@plt+0x8384>
  40ad80:	mov	x2, x22
  40ad84:	mov	x1, x25
  40ad88:	mov	x0, x19
  40ad8c:	bl	402640 <strncmp@plt>
  40ad90:	cbnz	w0, 40ad70 <__fxstatat@plt+0x8320>
  40ad94:	mov	x0, x19
  40ad98:	bl	402430 <strlen@plt>
  40ad9c:	cmp	x0, x22
  40ada0:	b.eq	40ad60 <__fxstatat@plt+0x8310>  // b.none
  40ada4:	cmn	x26, #0x1
  40ada8:	b.eq	40ad6c <__fxstatat@plt+0x831c>  // b.none
  40adac:	cbz	x27, 40adcc <__fxstatat@plt+0x837c>
  40adb0:	mov	x2, x23
  40adb4:	mov	x1, x21
  40adb8:	madd	x0, x26, x23, x27
  40adbc:	bl	4027a0 <memcmp@plt>
  40adc0:	cmp	w0, #0x0
  40adc4:	csinc	w28, w28, wzr, eq  // eq = none
  40adc8:	b	40ad70 <__fxstatat@plt+0x8320>
  40adcc:	mov	w28, #0x1                   	// #1
  40add0:	b	40ad70 <__fxstatat@plt+0x8320>
  40add4:	cmp	w28, #0x0
  40add8:	mov	x0, #0xfffffffffffffffe    	// #-2
  40addc:	csel	x26, x26, x0, eq  // eq = none
  40ade0:	ldp	x21, x22, [sp, #32]
  40ade4:	mov	x0, x26
  40ade8:	ldp	x19, x20, [sp, #16]
  40adec:	ldp	x23, x24, [sp, #48]
  40adf0:	ldp	x25, x26, [sp, #64]
  40adf4:	ldp	x27, x28, [sp, #80]
  40adf8:	ldp	x29, x30, [sp], #96
  40adfc:	ret
  40ae00:	mov	x26, #0xffffffffffffffff    	// #-1
  40ae04:	b	40ade4 <__fxstatat@plt+0x8394>
  40ae08:	stp	x29, x30, [sp, #-48]!
  40ae0c:	mov	x29, sp
  40ae10:	stp	x19, x20, [sp, #16]
  40ae14:	str	x21, [sp, #32]
  40ae18:	mov	x21, x0
  40ae1c:	mov	x20, x1
  40ae20:	cmn	x2, #0x1
  40ae24:	b.eq	40ae88 <__fxstatat@plt+0x8438>  // b.none
  40ae28:	mov	w2, #0x5                   	// #5
  40ae2c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40ae30:	add	x1, x1, #0xbf0
  40ae34:	mov	x0, #0x0                   	// #0
  40ae38:	bl	402970 <dcgettext@plt>
  40ae3c:	mov	x19, x0
  40ae40:	mov	x2, x20
  40ae44:	mov	w1, #0x8                   	// #8
  40ae48:	mov	w0, #0x0                   	// #0
  40ae4c:	bl	4118bc <__fxstatat@plt+0xee6c>
  40ae50:	mov	x20, x0
  40ae54:	mov	x1, x21
  40ae58:	mov	w0, #0x1                   	// #1
  40ae5c:	bl	411bd0 <__fxstatat@plt+0xf180>
  40ae60:	mov	x4, x0
  40ae64:	mov	x3, x20
  40ae68:	mov	x2, x19
  40ae6c:	mov	w1, #0x0                   	// #0
  40ae70:	mov	w0, #0x0                   	// #0
  40ae74:	bl	402490 <error@plt>
  40ae78:	ldp	x19, x20, [sp, #16]
  40ae7c:	ldr	x21, [sp, #32]
  40ae80:	ldp	x29, x30, [sp], #48
  40ae84:	ret
  40ae88:	mov	w2, #0x5                   	// #5
  40ae8c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40ae90:	add	x1, x1, #0xbd0
  40ae94:	mov	x0, #0x0                   	// #0
  40ae98:	bl	402970 <dcgettext@plt>
  40ae9c:	mov	x19, x0
  40aea0:	b	40ae40 <__fxstatat@plt+0x83f0>
  40aea4:	stp	x29, x30, [sp, #-96]!
  40aea8:	mov	x29, sp
  40aeac:	stp	x19, x20, [sp, #16]
  40aeb0:	stp	x21, x22, [sp, #32]
  40aeb4:	stp	x23, x24, [sp, #48]
  40aeb8:	mov	x24, x0
  40aebc:	mov	x20, x1
  40aec0:	mov	x22, x2
  40aec4:	mov	w2, #0x5                   	// #5
  40aec8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40aecc:	add	x1, x1, #0xc10
  40aed0:	mov	x0, #0x0                   	// #0
  40aed4:	bl	402970 <dcgettext@plt>
  40aed8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40aedc:	ldr	x1, [x1, #1432]
  40aee0:	bl	402980 <fputs_unlocked@plt>
  40aee4:	ldr	x21, [x24]
  40aee8:	cbz	x21, 40af8c <__fxstatat@plt+0x853c>
  40aeec:	stp	x25, x26, [sp, #64]
  40aef0:	stp	x27, x28, [sp, #80]
  40aef4:	mov	x23, #0x0                   	// #0
  40aef8:	mov	x19, #0x0                   	// #0
  40aefc:	adrp	x25, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40af00:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5af4>
  40af04:	add	x26, x26, #0xc28
  40af08:	adrp	x27, 419000 <_obstack_memory_used@@Base+0x5af4>
  40af0c:	add	x27, x27, #0xc30
  40af10:	b	40af48 <__fxstatat@plt+0x84f8>
  40af14:	ldr	x23, [x25, #1432]
  40af18:	mov	x0, x21
  40af1c:	bl	411be8 <__fxstatat@plt+0xf198>
  40af20:	mov	x3, x0
  40af24:	mov	x2, x26
  40af28:	mov	w1, #0x1                   	// #1
  40af2c:	mov	x0, x23
  40af30:	bl	4027e0 <__fprintf_chk@plt>
  40af34:	mov	x23, x20
  40af38:	add	x19, x19, #0x1
  40af3c:	ldr	x21, [x24, x19, lsl #3]
  40af40:	add	x20, x20, x22
  40af44:	cbz	x21, 40af84 <__fxstatat@plt+0x8534>
  40af48:	cbz	x19, 40af14 <__fxstatat@plt+0x84c4>
  40af4c:	mov	x2, x22
  40af50:	mov	x1, x20
  40af54:	mov	x0, x23
  40af58:	bl	4027a0 <memcmp@plt>
  40af5c:	cbnz	w0, 40af14 <__fxstatat@plt+0x84c4>
  40af60:	ldr	x28, [x25, #1432]
  40af64:	mov	x0, x21
  40af68:	bl	411be8 <__fxstatat@plt+0xf198>
  40af6c:	mov	x3, x0
  40af70:	mov	x2, x27
  40af74:	mov	w1, #0x1                   	// #1
  40af78:	mov	x0, x28
  40af7c:	bl	4027e0 <__fprintf_chk@plt>
  40af80:	b	40af38 <__fxstatat@plt+0x84e8>
  40af84:	ldp	x25, x26, [sp, #64]
  40af88:	ldp	x27, x28, [sp, #80]
  40af8c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40af90:	ldr	x0, [x0, #1432]
  40af94:	ldr	x1, [x0, #40]
  40af98:	ldr	x2, [x0, #48]
  40af9c:	cmp	x1, x2
  40afa0:	b.cs	40afc8 <__fxstatat@plt+0x8578>  // b.hs, b.nlast
  40afa4:	add	x2, x1, #0x1
  40afa8:	str	x2, [x0, #40]
  40afac:	mov	w0, #0xa                   	// #10
  40afb0:	strb	w0, [x1]
  40afb4:	ldp	x19, x20, [sp, #16]
  40afb8:	ldp	x21, x22, [sp, #32]
  40afbc:	ldp	x23, x24, [sp, #48]
  40afc0:	ldp	x29, x30, [sp], #96
  40afc4:	ret
  40afc8:	mov	w1, #0xa                   	// #10
  40afcc:	bl	402780 <__overflow@plt>
  40afd0:	b	40afb4 <__fxstatat@plt+0x8564>
  40afd4:	stp	x29, x30, [sp, #-64]!
  40afd8:	mov	x29, sp
  40afdc:	stp	x19, x20, [sp, #16]
  40afe0:	stp	x21, x22, [sp, #32]
  40afe4:	stp	x23, x24, [sp, #48]
  40afe8:	mov	x23, x0
  40afec:	mov	x22, x1
  40aff0:	mov	x19, x2
  40aff4:	mov	x20, x3
  40aff8:	mov	x21, x4
  40affc:	mov	x24, x5
  40b000:	mov	x3, x4
  40b004:	mov	x2, x20
  40b008:	mov	x1, x19
  40b00c:	mov	x0, x22
  40b010:	bl	40ad10 <__fxstatat@plt+0x82c0>
  40b014:	tbnz	x0, #63, 40b02c <__fxstatat@plt+0x85dc>
  40b018:	ldp	x19, x20, [sp, #16]
  40b01c:	ldp	x21, x22, [sp, #32]
  40b020:	ldp	x23, x24, [sp, #48]
  40b024:	ldp	x29, x30, [sp], #64
  40b028:	ret
  40b02c:	mov	x2, x0
  40b030:	mov	x1, x22
  40b034:	mov	x0, x23
  40b038:	bl	40ae08 <__fxstatat@plt+0x83b8>
  40b03c:	mov	x2, x21
  40b040:	mov	x1, x20
  40b044:	mov	x0, x19
  40b048:	bl	40aea4 <__fxstatat@plt+0x8454>
  40b04c:	blr	x24
  40b050:	mov	x0, #0xffffffffffffffff    	// #-1
  40b054:	b	40b018 <__fxstatat@plt+0x85c8>
  40b058:	stp	x29, x30, [sp, #-64]!
  40b05c:	mov	x29, sp
  40b060:	stp	x21, x22, [sp, #32]
  40b064:	ldr	x22, [x1]
  40b068:	cbz	x22, 40b0b8 <__fxstatat@plt+0x8668>
  40b06c:	stp	x19, x20, [sp, #16]
  40b070:	str	x23, [sp, #48]
  40b074:	mov	x23, x0
  40b078:	mov	x21, x3
  40b07c:	mov	x19, x2
  40b080:	add	x20, x1, #0x8
  40b084:	mov	x2, x21
  40b088:	mov	x1, x19
  40b08c:	mov	x0, x23
  40b090:	bl	4027a0 <memcmp@plt>
  40b094:	cbz	w0, 40b0b0 <__fxstatat@plt+0x8660>
  40b098:	ldr	x22, [x20], #8
  40b09c:	add	x19, x19, x21
  40b0a0:	cbnz	x22, 40b084 <__fxstatat@plt+0x8634>
  40b0a4:	ldp	x19, x20, [sp, #16]
  40b0a8:	ldr	x23, [sp, #48]
  40b0ac:	b	40b0b8 <__fxstatat@plt+0x8668>
  40b0b0:	ldp	x19, x20, [sp, #16]
  40b0b4:	ldr	x23, [sp, #48]
  40b0b8:	mov	x0, x22
  40b0bc:	ldp	x21, x22, [sp, #32]
  40b0c0:	ldp	x29, x30, [sp], #64
  40b0c4:	ret
  40b0c8:	cmp	x2, #0x0
  40b0cc:	ccmp	x0, x1, #0x4, ne  // ne = any
  40b0d0:	b.eq	40b12c <__fxstatat@plt+0x86dc>  // b.none
  40b0d4:	mov	x4, #0x0                   	// #0
  40b0d8:	sub	x5, x2, #0x1
  40b0dc:	ldrb	w2, [x0, x4]
  40b0e0:	sub	w6, w2, #0x41
  40b0e4:	add	w3, w2, #0x20
  40b0e8:	cmp	w6, #0x1a
  40b0ec:	csel	w2, w3, w2, cc  // cc = lo, ul, last
  40b0f0:	ldrb	w3, [x1, x4]
  40b0f4:	sub	w7, w3, #0x41
  40b0f8:	add	w6, w3, #0x20
  40b0fc:	cmp	w7, #0x1a
  40b100:	csel	w3, w6, w3, cc  // cc = lo, ul, last
  40b104:	and	w6, w3, #0xff
  40b108:	ands	w7, w2, #0xff
  40b10c:	ccmp	x5, x4, #0x4, ne  // ne = any
  40b110:	b.eq	40b120 <__fxstatat@plt+0x86d0>  // b.none
  40b114:	add	x4, x4, #0x1
  40b118:	cmp	w7, w6
  40b11c:	b.eq	40b0dc <__fxstatat@plt+0x868c>  // b.none
  40b120:	and	w2, w2, #0xff
  40b124:	sub	w0, w2, w3, uxtb
  40b128:	ret
  40b12c:	mov	w0, #0x0                   	// #0
  40b130:	b	40b128 <__fxstatat@plt+0x86d8>
  40b134:	stp	x29, x30, [sp, #-272]!
  40b138:	mov	x29, sp
  40b13c:	stp	x23, x24, [sp, #48]
  40b140:	stp	x25, x26, [sp, #64]
  40b144:	stp	x27, x28, [sp, #80]
  40b148:	mov	x27, x0
  40b14c:	and	w26, w1, #0x3
  40b150:	sub	w0, w26, #0x1
  40b154:	tst	w0, w26
  40b158:	b.ne	40b1d8 <__fxstatat@plt+0x8788>  // b.any
  40b15c:	mov	w25, w1
  40b160:	cbz	x27, 40b1ec <__fxstatat@plt+0x879c>
  40b164:	ldrb	w0, [x27]
  40b168:	cbz	w0, 40b200 <__fxstatat@plt+0x87b0>
  40b16c:	stp	x21, x22, [sp, #32]
  40b170:	cmp	w0, #0x2f
  40b174:	b.eq	40b230 <__fxstatat@plt+0x87e0>  // b.none
  40b178:	bl	4126ec <__fxstatat@plt+0xfc9c>
  40b17c:	mov	x23, x0
  40b180:	cbz	x0, 40b6b0 <__fxstatat@plt+0x8c60>
  40b184:	bl	402430 <strlen@plt>
  40b188:	mov	x21, x0
  40b18c:	cmp	x0, #0xfff
  40b190:	b.le	40b214 <__fxstatat@plt+0x87c4>
  40b194:	add	x21, x23, x0
  40b198:	mov	x24, x21
  40b19c:	ldrb	w0, [x27]
  40b1a0:	cbz	w0, 40b5e8 <__fxstatat@plt+0x8b98>
  40b1a4:	stp	x19, x20, [sp, #16]
  40b1a8:	and	w25, w25, #0x4
  40b1ac:	mov	x19, x27
  40b1b0:	mov	x28, #0x0                   	// #0
  40b1b4:	str	xzr, [sp, #112]
  40b1b8:	str	xzr, [sp, #104]
  40b1bc:	adrp	x0, 40d000 <__fxstatat@plt+0xa5b0>
  40b1c0:	add	x0, x0, #0x278
  40b1c4:	str	x0, [sp, #120]
  40b1c8:	adrp	x0, 40d000 <__fxstatat@plt+0xa5b0>
  40b1cc:	add	x0, x0, #0x220
  40b1d0:	str	x0, [sp, #128]
  40b1d4:	b	40b368 <__fxstatat@plt+0x8918>
  40b1d8:	bl	4029e0 <__errno_location@plt>
  40b1dc:	mov	w1, #0x16                  	// #22
  40b1e0:	str	w1, [x0]
  40b1e4:	mov	x23, #0x0                   	// #0
  40b1e8:	b	40b698 <__fxstatat@plt+0x8c48>
  40b1ec:	bl	4029e0 <__errno_location@plt>
  40b1f0:	mov	w1, #0x16                  	// #22
  40b1f4:	str	w1, [x0]
  40b1f8:	mov	x23, x27
  40b1fc:	b	40b698 <__fxstatat@plt+0x8c48>
  40b200:	bl	4029e0 <__errno_location@plt>
  40b204:	mov	w1, #0x2                   	// #2
  40b208:	str	w1, [x0]
  40b20c:	mov	x23, #0x0                   	// #0
  40b210:	b	40b698 <__fxstatat@plt+0x8c48>
  40b214:	mov	x1, #0x1000                	// #4096
  40b218:	mov	x0, x23
  40b21c:	bl	412374 <__fxstatat@plt+0xf924>
  40b220:	mov	x23, x0
  40b224:	add	x21, x0, x21
  40b228:	add	x24, x0, #0x1, lsl #12
  40b22c:	b	40b19c <__fxstatat@plt+0x874c>
  40b230:	mov	x0, #0x1000                	// #4096
  40b234:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40b238:	mov	x23, x0
  40b23c:	add	x24, x0, #0x1, lsl #12
  40b240:	mov	x21, x0
  40b244:	mov	w0, #0x2f                  	// #47
  40b248:	strb	w0, [x21], #1
  40b24c:	ldrb	w0, [x27]
  40b250:	cbnz	w0, 40b1a4 <__fxstatat@plt+0x8754>
  40b254:	mov	x28, #0x0                   	// #0
  40b258:	str	xzr, [sp, #104]
  40b25c:	b	40b614 <__fxstatat@plt+0x8bc4>
  40b260:	ldrb	w0, [x19, #1]
  40b264:	cmp	w0, #0x2e
  40b268:	b.ne	40b3d0 <__fxstatat@plt+0x8980>  // b.any
  40b26c:	add	x0, x23, #0x1
  40b270:	mov	x19, x20
  40b274:	cmp	x21, x0
  40b278:	b.ls	40b360 <__fxstatat@plt+0x8910>  // b.plast
  40b27c:	sub	x21, x21, #0x1
  40b280:	cmp	x21, x23
  40b284:	b.ls	40b360 <__fxstatat@plt+0x8910>  // b.plast
  40b288:	ldurb	w0, [x21, #-1]
  40b28c:	cmp	w0, #0x2f
  40b290:	b.ne	40b29c <__fxstatat@plt+0x884c>  // b.any
  40b294:	mov	x19, x20
  40b298:	b	40b360 <__fxstatat@plt+0x8910>
  40b29c:	sub	x21, x21, #0x1
  40b2a0:	cmp	x21, x23
  40b2a4:	b.ne	40b288 <__fxstatat@plt+0x8838>  // b.any
  40b2a8:	mov	x19, x20
  40b2ac:	mov	x21, x23
  40b2b0:	b	40b360 <__fxstatat@plt+0x8910>
  40b2b4:	cbz	w25, 40b304 <__fxstatat@plt+0x88b4>
  40b2b8:	add	x2, sp, #0x90
  40b2bc:	mov	x1, x23
  40b2c0:	mov	w0, #0x0                   	// #0
  40b2c4:	bl	402a00 <__xstat@plt>
  40b2c8:	cmp	w0, #0x0
  40b2cc:	cset	w0, ne  // ne = any
  40b2d0:	cbz	w0, 40b344 <__fxstatat@plt+0x88f4>
  40b2d4:	bl	4029e0 <__errno_location@plt>
  40b2d8:	ldr	w19, [x0]
  40b2dc:	cbz	w26, 40b668 <__fxstatat@plt+0x8c18>
  40b2e0:	cmp	w26, #0x1
  40b2e4:	b.eq	40b320 <__fxstatat@plt+0x88d0>  // b.none
  40b2e8:	str	wzr, [sp, #160]
  40b2ec:	ldrb	w0, [x20]
  40b2f0:	cmp	w0, #0x0
  40b2f4:	ccmp	w26, #0x2, #0x4, ne  // ne = any
  40b2f8:	b.eq	40b35c <__fxstatat@plt+0x890c>  // b.none
  40b2fc:	mov	w19, #0x14                  	// #20
  40b300:	b	40b668 <__fxstatat@plt+0x8c18>
  40b304:	add	x2, sp, #0x90
  40b308:	mov	x1, x23
  40b30c:	mov	w0, #0x0                   	// #0
  40b310:	bl	402900 <__lxstat@plt>
  40b314:	cmp	w0, #0x0
  40b318:	cset	w0, ne  // ne = any
  40b31c:	b	40b2d0 <__fxstatat@plt+0x8880>
  40b320:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3af4>
  40b324:	add	x1, x1, #0x8f8
  40b328:	mov	x0, x20
  40b32c:	bl	402870 <strspn@plt>
  40b330:	ldrb	w0, [x20, x0]
  40b334:	cmp	w0, #0x0
  40b338:	ccmp	w19, #0x2, #0x0, eq  // eq = none
  40b33c:	b.eq	40b470 <__fxstatat@plt+0x8a20>  // b.none
  40b340:	b	40b668 <__fxstatat@plt+0x8c18>
  40b344:	ldr	w0, [sp, #160]
  40b348:	and	w0, w0, #0xf000
  40b34c:	cmp	w0, #0xa, lsl #12
  40b350:	b.eq	40b44c <__fxstatat@plt+0x89fc>  // b.none
  40b354:	cmp	w0, #0x4, lsl #12
  40b358:	b.ne	40b2ec <__fxstatat@plt+0x889c>  // b.any
  40b35c:	mov	x19, x20
  40b360:	ldrb	w0, [x19]
  40b364:	cbz	w0, 40b65c <__fxstatat@plt+0x8c0c>
  40b368:	ldrb	w1, [x19]
  40b36c:	cmp	w1, #0x2f
  40b370:	b.ne	40b380 <__fxstatat@plt+0x8930>  // b.any
  40b374:	ldrb	w1, [x19, #1]!
  40b378:	cmp	w1, #0x2f
  40b37c:	b.eq	40b374 <__fxstatat@plt+0x8924>  // b.none
  40b380:	ldrb	w0, [x19]
  40b384:	cmp	w0, #0x2f
  40b388:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40b38c:	b.eq	40b5f4 <__fxstatat@plt+0x8ba4>  // b.none
  40b390:	mov	x20, x19
  40b394:	ldrb	w0, [x20, #1]!
  40b398:	cmp	w0, #0x2f
  40b39c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40b3a0:	b.ne	40b394 <__fxstatat@plt+0x8944>  // b.any
  40b3a4:	cmp	x20, x19
  40b3a8:	b.eq	40b654 <__fxstatat@plt+0x8c04>  // b.none
  40b3ac:	sub	x22, x20, x19
  40b3b0:	cmp	w1, #0x2e
  40b3b4:	cset	w0, eq  // eq = none
  40b3b8:	cmp	w0, #0x0
  40b3bc:	ccmp	x22, #0x1, #0x0, ne  // ne = any
  40b3c0:	b.eq	40b5e0 <__fxstatat@plt+0x8b90>  // b.none
  40b3c4:	cmp	w0, #0x0
  40b3c8:	ccmp	x22, #0x2, #0x0, ne  // ne = any
  40b3cc:	b.eq	40b260 <__fxstatat@plt+0x8810>  // b.none
  40b3d0:	ldurb	w0, [x21, #-1]
  40b3d4:	cmp	w0, #0x2f
  40b3d8:	b.eq	40b3e4 <__fxstatat@plt+0x8994>  // b.none
  40b3dc:	mov	w0, #0x2f                  	// #47
  40b3e0:	strb	w0, [x21], #1
  40b3e4:	add	x0, x21, x22
  40b3e8:	cmp	x24, x0
  40b3ec:	b.hi	40b420 <__fxstatat@plt+0x89d0>  // b.pmore
  40b3f0:	sub	x21, x21, x23
  40b3f4:	sub	x0, x24, x23
  40b3f8:	add	x1, x22, x0
  40b3fc:	add	x24, x0, #0x1, lsl #12
  40b400:	cmp	x22, #0x1, lsl #12
  40b404:	csinc	x24, x24, x1, lt  // lt = tstop
  40b408:	mov	x1, x24
  40b40c:	mov	x0, x23
  40b410:	bl	412374 <__fxstatat@plt+0xf924>
  40b414:	mov	x23, x0
  40b418:	add	x24, x0, x24
  40b41c:	add	x21, x0, x21
  40b420:	mov	x2, x22
  40b424:	mov	x1, x19
  40b428:	mov	x0, x21
  40b42c:	bl	4023c0 <memcpy@plt>
  40b430:	add	x21, x0, x22
  40b434:	strb	wzr, [x0, x22]
  40b438:	cmp	w25, #0x0
  40b43c:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  40b440:	b.ne	40b2b4 <__fxstatat@plt+0x8864>  // b.any
  40b444:	str	wzr, [sp, #160]
  40b448:	b	40b35c <__fxstatat@plt+0x890c>
  40b44c:	cbz	x28, 40b478 <__fxstatat@plt+0x8a28>
  40b450:	add	x2, sp, #0x90
  40b454:	mov	x1, x27
  40b458:	mov	x0, x28
  40b45c:	bl	40ba74 <__fxstatat@plt+0x9024>
  40b460:	and	w0, w0, #0xff
  40b464:	cbz	w0, 40b4a0 <__fxstatat@plt+0x8a50>
  40b468:	cmp	w26, #0x2
  40b46c:	b.ne	40b664 <__fxstatat@plt+0x8c14>  // b.any
  40b470:	mov	x19, x20
  40b474:	b	40b360 <__fxstatat@plt+0x8910>
  40b478:	ldr	x4, [sp, #120]
  40b47c:	ldr	x3, [sp, #128]
  40b480:	adrp	x2, 40d000 <__fxstatat@plt+0xa5b0>
  40b484:	add	x2, x2, #0x184
  40b488:	mov	x1, #0x0                   	// #0
  40b48c:	mov	x0, #0x7                   	// #7
  40b490:	bl	40cb04 <__fxstatat@plt+0xa0b4>
  40b494:	mov	x28, x0
  40b498:	cbnz	x0, 40b450 <__fxstatat@plt+0x8a00>
  40b49c:	bl	412584 <__fxstatat@plt+0xfb34>
  40b4a0:	add	x2, sp, #0x90
  40b4a4:	mov	x1, x27
  40b4a8:	mov	x0, x28
  40b4ac:	bl	40b9f4 <__fxstatat@plt+0x8fa4>
  40b4b0:	ldr	x1, [sp, #192]
  40b4b4:	mov	x0, x23
  40b4b8:	bl	40ac24 <__fxstatat@plt+0x81d4>
  40b4bc:	mov	x19, x0
  40b4c0:	cbz	x0, 40b548 <__fxstatat@plt+0x8af8>
  40b4c4:	bl	402430 <strlen@plt>
  40b4c8:	mov	x22, x0
  40b4cc:	mov	x0, x20
  40b4d0:	bl	402430 <strlen@plt>
  40b4d4:	mov	x27, x0
  40b4d8:	ldr	x0, [sp, #112]
  40b4dc:	cbz	x0, 40b56c <__fxstatat@plt+0x8b1c>
  40b4e0:	add	x0, x22, x27
  40b4e4:	add	x0, x0, #0x1
  40b4e8:	str	x0, [sp, #136]
  40b4ec:	ldr	x1, [sp, #112]
  40b4f0:	cmp	x0, x1
  40b4f4:	b.hi	40b590 <__fxstatat@plt+0x8b40>  // b.pmore
  40b4f8:	add	x2, x27, #0x1
  40b4fc:	mov	x1, x20
  40b500:	ldr	x20, [sp, #104]
  40b504:	add	x0, x20, x22
  40b508:	bl	4023d0 <memmove@plt>
  40b50c:	mov	x2, x22
  40b510:	mov	x1, x19
  40b514:	mov	x0, x20
  40b518:	bl	4023c0 <memcpy@plt>
  40b51c:	mov	x27, x0
  40b520:	ldrb	w0, [x19]
  40b524:	cmp	w0, #0x2f
  40b528:	b.eq	40b5ac <__fxstatat@plt+0x8b5c>  // b.none
  40b52c:	add	x0, x23, #0x1
  40b530:	cmp	x21, x0
  40b534:	b.hi	40b5b8 <__fxstatat@plt+0x8b68>  // b.pmore
  40b538:	mov	x0, x19
  40b53c:	bl	402840 <free@plt>
  40b540:	mov	x20, x27
  40b544:	b	40b35c <__fxstatat@plt+0x890c>
  40b548:	cmp	w26, #0x2
  40b54c:	b.ne	40b560 <__fxstatat@plt+0x8b10>  // b.any
  40b550:	bl	4029e0 <__errno_location@plt>
  40b554:	ldr	w0, [x0]
  40b558:	cmp	w0, #0xc
  40b55c:	b.ne	40b470 <__fxstatat@plt+0x8a20>  // b.any
  40b560:	bl	4029e0 <__errno_location@plt>
  40b564:	ldr	w19, [x0]
  40b568:	b	40b668 <__fxstatat@plt+0x8c18>
  40b56c:	add	x0, x22, x27
  40b570:	add	x1, x0, #0x1
  40b574:	cmp	x1, #0x1, lsl #12
  40b578:	mov	x0, #0x1000                	// #4096
  40b57c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  40b580:	str	x0, [sp, #112]
  40b584:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40b588:	str	x0, [sp, #104]
  40b58c:	b	40b4f8 <__fxstatat@plt+0x8aa8>
  40b590:	mov	x1, x0
  40b594:	ldr	x0, [sp, #104]
  40b598:	bl	412374 <__fxstatat@plt+0xf924>
  40b59c:	str	x0, [sp, #104]
  40b5a0:	ldr	x0, [sp, #136]
  40b5a4:	str	x0, [sp, #112]
  40b5a8:	b	40b4f8 <__fxstatat@plt+0x8aa8>
  40b5ac:	mov	x21, x23
  40b5b0:	strb	w0, [x21], #1
  40b5b4:	b	40b538 <__fxstatat@plt+0x8ae8>
  40b5b8:	sub	x21, x21, #0x1
  40b5bc:	cmp	x23, x21
  40b5c0:	b.cs	40b538 <__fxstatat@plt+0x8ae8>  // b.hs, b.nlast
  40b5c4:	ldurb	w0, [x21, #-1]
  40b5c8:	cmp	w0, #0x2f
  40b5cc:	b.eq	40b538 <__fxstatat@plt+0x8ae8>  // b.none
  40b5d0:	sub	x21, x21, #0x1
  40b5d4:	cmp	x23, x21
  40b5d8:	b.ne	40b5c4 <__fxstatat@plt+0x8b74>  // b.any
  40b5dc:	b	40b538 <__fxstatat@plt+0x8ae8>
  40b5e0:	mov	x19, x20
  40b5e4:	b	40b360 <__fxstatat@plt+0x8910>
  40b5e8:	mov	x28, #0x0                   	// #0
  40b5ec:	str	xzr, [sp, #104]
  40b5f0:	b	40b5f8 <__fxstatat@plt+0x8ba8>
  40b5f4:	ldp	x19, x20, [sp, #16]
  40b5f8:	add	x0, x23, #0x1
  40b5fc:	cmp	x21, x0
  40b600:	b.ls	40b614 <__fxstatat@plt+0x8bc4>  // b.plast
  40b604:	ldurb	w0, [x21, #-1]
  40b608:	cmp	w0, #0x2f
  40b60c:	cset	x0, eq  // eq = none
  40b610:	sub	x21, x21, x0
  40b614:	mov	x0, x21
  40b618:	strb	wzr, [x0], #1
  40b61c:	cmp	x24, x0
  40b620:	b.eq	40b638 <__fxstatat@plt+0x8be8>  // b.none
  40b624:	sub	x1, x21, x23
  40b628:	add	x1, x1, #0x1
  40b62c:	mov	x0, x23
  40b630:	bl	412374 <__fxstatat@plt+0xf924>
  40b634:	mov	x23, x0
  40b638:	ldr	x0, [sp, #104]
  40b63c:	bl	402840 <free@plt>
  40b640:	cbz	x28, 40b6b8 <__fxstatat@plt+0x8c68>
  40b644:	mov	x0, x28
  40b648:	bl	40cc90 <__fxstatat@plt+0xa240>
  40b64c:	ldp	x21, x22, [sp, #32]
  40b650:	b	40b698 <__fxstatat@plt+0x8c48>
  40b654:	ldp	x19, x20, [sp, #16]
  40b658:	b	40b5f8 <__fxstatat@plt+0x8ba8>
  40b65c:	ldp	x19, x20, [sp, #16]
  40b660:	b	40b5f8 <__fxstatat@plt+0x8ba8>
  40b664:	mov	w19, #0x28                  	// #40
  40b668:	ldr	x0, [sp, #104]
  40b66c:	bl	402840 <free@plt>
  40b670:	mov	x0, x23
  40b674:	bl	402840 <free@plt>
  40b678:	cbz	x28, 40b684 <__fxstatat@plt+0x8c34>
  40b67c:	mov	x0, x28
  40b680:	bl	40cc90 <__fxstatat@plt+0xa240>
  40b684:	bl	4029e0 <__errno_location@plt>
  40b688:	str	w19, [x0]
  40b68c:	mov	x23, #0x0                   	// #0
  40b690:	ldp	x19, x20, [sp, #16]
  40b694:	ldp	x21, x22, [sp, #32]
  40b698:	mov	x0, x23
  40b69c:	ldp	x23, x24, [sp, #48]
  40b6a0:	ldp	x25, x26, [sp, #64]
  40b6a4:	ldp	x27, x28, [sp, #80]
  40b6a8:	ldp	x29, x30, [sp], #272
  40b6ac:	ret
  40b6b0:	ldp	x21, x22, [sp, #32]
  40b6b4:	b	40b698 <__fxstatat@plt+0x8c48>
  40b6b8:	ldp	x21, x22, [sp, #32]
  40b6bc:	b	40b698 <__fxstatat@plt+0x8c48>
  40b6c0:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40b6c4:	str	x0, [x1, #1816]
  40b6c8:	ret
  40b6cc:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40b6d0:	strb	w0, [x1, #1824]
  40b6d4:	ret
  40b6d8:	stp	x29, x30, [sp, #-48]!
  40b6dc:	mov	x29, sp
  40b6e0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40b6e4:	ldr	x0, [x0, #1456]
  40b6e8:	bl	413b18 <_obstack_memory_used@@Base+0x60c>
  40b6ec:	cbz	w0, 40b70c <__fxstatat@plt+0x8cbc>
  40b6f0:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40b6f4:	ldrb	w0, [x0, #1824]
  40b6f8:	cbz	w0, 40b724 <__fxstatat@plt+0x8cd4>
  40b6fc:	bl	4029e0 <__errno_location@plt>
  40b700:	ldr	w0, [x0]
  40b704:	cmp	w0, #0x20
  40b708:	b.ne	40b724 <__fxstatat@plt+0x8cd4>  // b.any
  40b70c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40b710:	ldr	x0, [x0, #1432]
  40b714:	bl	413b18 <_obstack_memory_used@@Base+0x60c>
  40b718:	cbnz	w0, 40b7a8 <__fxstatat@plt+0x8d58>
  40b71c:	ldp	x29, x30, [sp], #48
  40b720:	ret
  40b724:	stp	x19, x20, [sp, #16]
  40b728:	str	x21, [sp, #32]
  40b72c:	mov	w2, #0x5                   	// #5
  40b730:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40b734:	add	x1, x1, #0xc38
  40b738:	mov	x0, #0x0                   	// #0
  40b73c:	bl	402970 <dcgettext@plt>
  40b740:	mov	x19, x0
  40b744:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40b748:	ldr	x20, [x0, #1816]
  40b74c:	cbz	x20, 40b788 <__fxstatat@plt+0x8d38>
  40b750:	bl	4029e0 <__errno_location@plt>
  40b754:	ldr	w21, [x0]
  40b758:	mov	x0, x20
  40b75c:	bl	411a18 <__fxstatat@plt+0xefc8>
  40b760:	mov	x4, x19
  40b764:	mov	x3, x0
  40b768:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  40b76c:	add	x2, x2, #0x648
  40b770:	mov	w1, w21
  40b774:	mov	w0, #0x0                   	// #0
  40b778:	bl	402490 <error@plt>
  40b77c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40b780:	ldr	w0, [x0, #1320]
  40b784:	bl	4023f0 <_exit@plt>
  40b788:	bl	4029e0 <__errno_location@plt>
  40b78c:	mov	x3, x19
  40b790:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  40b794:	add	x2, x2, #0x5b0
  40b798:	ldr	w1, [x0]
  40b79c:	mov	w0, #0x0                   	// #0
  40b7a0:	bl	402490 <error@plt>
  40b7a4:	b	40b77c <__fxstatat@plt+0x8d2c>
  40b7a8:	stp	x19, x20, [sp, #16]
  40b7ac:	str	x21, [sp, #32]
  40b7b0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  40b7b4:	ldr	w0, [x0, #1320]
  40b7b8:	bl	4023f0 <_exit@plt>
  40b7bc:	stp	x29, x30, [sp, #-32]!
  40b7c0:	mov	x29, sp
  40b7c4:	stp	x19, x20, [sp, #16]
  40b7c8:	mov	x19, x0
  40b7cc:	ldrb	w1, [x0]
  40b7d0:	cmp	w1, #0x2f
  40b7d4:	cset	x20, eq  // eq = none
  40b7d8:	bl	40b874 <__fxstatat@plt+0x8e24>
  40b7dc:	sub	x0, x0, x19
  40b7e0:	cmp	x0, x20
  40b7e4:	b.ls	40b800 <__fxstatat@plt+0x8db0>  // b.plast
  40b7e8:	sub	x1, x0, #0x1
  40b7ec:	ldrb	w2, [x19, x1]
  40b7f0:	cmp	w2, #0x2f
  40b7f4:	b.ne	40b800 <__fxstatat@plt+0x8db0>  // b.any
  40b7f8:	mov	x0, x1
  40b7fc:	b	40b7e0 <__fxstatat@plt+0x8d90>
  40b800:	ldp	x19, x20, [sp, #16]
  40b804:	ldp	x29, x30, [sp], #32
  40b808:	ret
  40b80c:	stp	x29, x30, [sp, #-48]!
  40b810:	mov	x29, sp
  40b814:	stp	x19, x20, [sp, #16]
  40b818:	str	x21, [sp, #32]
  40b81c:	mov	x21, x0
  40b820:	bl	40b7bc <__fxstatat@plt+0x8d6c>
  40b824:	mov	x19, x0
  40b828:	cmp	x0, #0x0
  40b82c:	add	x0, x0, #0x1
  40b830:	cinc	x0, x0, eq  // eq = none
  40b834:	bl	4025f0 <malloc@plt>
  40b838:	mov	x20, x0
  40b83c:	cbz	x0, 40b860 <__fxstatat@plt+0x8e10>
  40b840:	mov	x2, x19
  40b844:	mov	x1, x21
  40b848:	bl	4023c0 <memcpy@plt>
  40b84c:	cbnz	x19, 40b85c <__fxstatat@plt+0x8e0c>
  40b850:	mov	w0, #0x2e                  	// #46
  40b854:	strb	w0, [x20]
  40b858:	mov	x19, #0x1                   	// #1
  40b85c:	strb	wzr, [x20, x19]
  40b860:	mov	x0, x20
  40b864:	ldp	x19, x20, [sp, #16]
  40b868:	ldr	x21, [sp, #32]
  40b86c:	ldp	x29, x30, [sp], #48
  40b870:	ret
  40b874:	ldrb	w1, [x0]
  40b878:	cmp	w1, #0x2f
  40b87c:	b.ne	40b88c <__fxstatat@plt+0x8e3c>  // b.any
  40b880:	ldrb	w1, [x0, #1]!
  40b884:	cmp	w1, #0x2f
  40b888:	b.eq	40b880 <__fxstatat@plt+0x8e30>  // b.none
  40b88c:	ldrb	w2, [x0]
  40b890:	cbz	w2, 40b8cc <__fxstatat@plt+0x8e7c>
  40b894:	mov	x3, x0
  40b898:	mov	w1, #0x0                   	// #0
  40b89c:	mov	w5, #0x1                   	// #1
  40b8a0:	mov	w4, #0x0                   	// #0
  40b8a4:	b	40b8bc <__fxstatat@plt+0x8e6c>
  40b8a8:	cmp	w1, #0x0
  40b8ac:	csel	x0, x0, x3, eq  // eq = none
  40b8b0:	csel	w1, w1, w4, eq  // eq = none
  40b8b4:	ldrb	w2, [x3, #1]!
  40b8b8:	cbz	w2, 40b8cc <__fxstatat@plt+0x8e7c>
  40b8bc:	cmp	w2, #0x2f
  40b8c0:	b.ne	40b8a8 <__fxstatat@plt+0x8e58>  // b.any
  40b8c4:	mov	w1, w5
  40b8c8:	b	40b8b4 <__fxstatat@plt+0x8e64>
  40b8cc:	ret
  40b8d0:	stp	x29, x30, [sp, #-32]!
  40b8d4:	mov	x29, sp
  40b8d8:	str	x19, [sp, #16]
  40b8dc:	mov	x19, x0
  40b8e0:	bl	402430 <strlen@plt>
  40b8e4:	cmp	x0, #0x1
  40b8e8:	b.ls	40b8fc <__fxstatat@plt+0x8eac>  // b.plast
  40b8ec:	sub	x1, x0, #0x1
  40b8f0:	ldrb	w2, [x19, x1]
  40b8f4:	cmp	w2, #0x2f
  40b8f8:	b.eq	40b908 <__fxstatat@plt+0x8eb8>  // b.none
  40b8fc:	ldr	x19, [sp, #16]
  40b900:	ldp	x29, x30, [sp], #32
  40b904:	ret
  40b908:	mov	x0, x1
  40b90c:	b	40b8e4 <__fxstatat@plt+0x8e94>
  40b910:	stp	x29, x30, [sp, #-32]!
  40b914:	mov	x29, sp
  40b918:	stp	x19, x20, [sp, #16]
  40b91c:	mov	x19, x1
  40b920:	ldr	w1, [x1, #16]
  40b924:	and	w1, w1, #0xf000
  40b928:	cmp	w1, #0xa, lsl #12
  40b92c:	b.ne	40b940 <__fxstatat@plt+0x8ef0>  // b.any
  40b930:	mov	w0, #0x0                   	// #0
  40b934:	ldp	x19, x20, [sp, #16]
  40b938:	ldp	x29, x30, [sp], #32
  40b93c:	ret
  40b940:	mov	x20, x0
  40b944:	mov	x3, #0x0                   	// #0
  40b948:	mov	x2, #0x0                   	// #0
  40b94c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40b950:	add	x1, x1, #0xc48
  40b954:	bl	402790 <getxattr@plt>
  40b958:	mov	x1, x0
  40b95c:	tbnz	x0, #63, 40b988 <__fxstatat@plt+0x8f38>
  40b960:	mov	w0, #0x1                   	// #1
  40b964:	cmp	x1, #0x0
  40b968:	b.gt	40b934 <__fxstatat@plt+0x8ee4>
  40b96c:	ldr	w1, [x19, #16]
  40b970:	and	w1, w1, #0xf000
  40b974:	mov	x2, #0x0                   	// #0
  40b978:	cmp	w1, #0x4, lsl #12
  40b97c:	b.eq	40b9b0 <__fxstatat@plt+0x8f60>  // b.none
  40b980:	mov	w0, w2
  40b984:	b	40b934 <__fxstatat@plt+0x8ee4>
  40b988:	bl	4029e0 <__errno_location@plt>
  40b98c:	ldr	w0, [x0]
  40b990:	cmp	w0, #0x3d
  40b994:	b.eq	40b96c <__fxstatat@plt+0x8f1c>  // b.none
  40b998:	bl	4029e0 <__errno_location@plt>
  40b99c:	ldr	w0, [x0]
  40b9a0:	bl	413adc <_obstack_memory_used@@Base+0x5d0>
  40b9a4:	and	w0, w0, #0xff
  40b9a8:	neg	w0, w0
  40b9ac:	b	40b934 <__fxstatat@plt+0x8ee4>
  40b9b0:	mov	x3, #0x0                   	// #0
  40b9b4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40b9b8:	add	x1, x1, #0xc60
  40b9bc:	mov	x0, x20
  40b9c0:	bl	402790 <getxattr@plt>
  40b9c4:	mov	x2, x0
  40b9c8:	tbnz	x0, #63, 40b9dc <__fxstatat@plt+0x8f8c>
  40b9cc:	mov	w0, #0x1                   	// #1
  40b9d0:	cmp	x2, #0x0
  40b9d4:	b.gt	40b934 <__fxstatat@plt+0x8ee4>
  40b9d8:	b	40b980 <__fxstatat@plt+0x8f30>
  40b9dc:	bl	4029e0 <__errno_location@plt>
  40b9e0:	ldr	w0, [x0]
  40b9e4:	cmp	w0, #0x3d
  40b9e8:	b.ne	40b998 <__fxstatat@plt+0x8f48>  // b.any
  40b9ec:	mov	x2, #0x0                   	// #0
  40b9f0:	b	40b980 <__fxstatat@plt+0x8f30>
  40b9f4:	cbz	x0, 40ba70 <__fxstatat@plt+0x9020>
  40b9f8:	stp	x29, x30, [sp, #-48]!
  40b9fc:	mov	x29, sp
  40ba00:	stp	x19, x20, [sp, #16]
  40ba04:	stp	x21, x22, [sp, #32]
  40ba08:	mov	x20, x0
  40ba0c:	mov	x22, x1
  40ba10:	mov	x21, x2
  40ba14:	mov	x0, #0x18                  	// #24
  40ba18:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40ba1c:	mov	x19, x0
  40ba20:	mov	x0, x22
  40ba24:	bl	412558 <__fxstatat@plt+0xfb08>
  40ba28:	str	x0, [x19]
  40ba2c:	ldr	x0, [x21, #8]
  40ba30:	str	x0, [x19, #8]
  40ba34:	ldr	x0, [x21]
  40ba38:	str	x0, [x19, #16]
  40ba3c:	mov	x1, x19
  40ba40:	mov	x0, x20
  40ba44:	bl	40d03c <__fxstatat@plt+0xa5ec>
  40ba48:	cbz	x0, 40ba6c <__fxstatat@plt+0x901c>
  40ba4c:	cmp	x19, x0
  40ba50:	b.eq	40ba5c <__fxstatat@plt+0x900c>  // b.none
  40ba54:	mov	x0, x19
  40ba58:	bl	40d278 <__fxstatat@plt+0xa828>
  40ba5c:	ldp	x19, x20, [sp, #16]
  40ba60:	ldp	x21, x22, [sp, #32]
  40ba64:	ldp	x29, x30, [sp], #48
  40ba68:	ret
  40ba6c:	bl	412584 <__fxstatat@plt+0xfb34>
  40ba70:	ret
  40ba74:	cbz	x0, 40baac <__fxstatat@plt+0x905c>
  40ba78:	stp	x29, x30, [sp, #-48]!
  40ba7c:	mov	x29, sp
  40ba80:	str	x1, [sp, #24]
  40ba84:	ldr	x1, [x2, #8]
  40ba88:	str	x1, [sp, #32]
  40ba8c:	ldr	x1, [x2]
  40ba90:	str	x1, [sp, #40]
  40ba94:	add	x1, sp, #0x18
  40ba98:	bl	40c87c <__fxstatat@plt+0x9e2c>
  40ba9c:	cmp	x0, #0x0
  40baa0:	cset	w0, ne  // ne = any
  40baa4:	ldp	x29, x30, [sp], #48
  40baa8:	ret
  40baac:	mov	w0, #0x0                   	// #0
  40bab0:	ret
  40bab4:	and	w3, w0, #0xf000
  40bab8:	mov	w2, #0x2d                  	// #45
  40babc:	cmp	w3, #0x8, lsl #12
  40bac0:	b.eq	40bb10 <__fxstatat@plt+0x90c0>  // b.none
  40bac4:	mov	w2, #0x64                  	// #100
  40bac8:	cmp	w3, #0x4, lsl #12
  40bacc:	b.eq	40bb10 <__fxstatat@plt+0x90c0>  // b.none
  40bad0:	mov	w2, #0x62                  	// #98
  40bad4:	cmp	w3, #0x6, lsl #12
  40bad8:	b.eq	40bb10 <__fxstatat@plt+0x90c0>  // b.none
  40badc:	mov	w2, #0x63                  	// #99
  40bae0:	cmp	w3, #0x2, lsl #12
  40bae4:	b.eq	40bb10 <__fxstatat@plt+0x90c0>  // b.none
  40bae8:	mov	w2, #0x6c                  	// #108
  40baec:	cmp	w3, #0xa, lsl #12
  40baf0:	b.eq	40bb10 <__fxstatat@plt+0x90c0>  // b.none
  40baf4:	mov	w2, #0x70                  	// #112
  40baf8:	cmp	w3, #0x1, lsl #12
  40bafc:	b.eq	40bb10 <__fxstatat@plt+0x90c0>  // b.none
  40bb00:	cmp	w3, #0xc, lsl #12
  40bb04:	mov	w2, #0x3f                  	// #63
  40bb08:	mov	w3, #0x73                  	// #115
  40bb0c:	csel	w2, w2, w3, ne  // ne = any
  40bb10:	strb	w2, [x1]
  40bb14:	tst	x0, #0x100
  40bb18:	mov	w2, #0x72                  	// #114
  40bb1c:	mov	w3, #0x2d                  	// #45
  40bb20:	csel	w2, w2, w3, ne  // ne = any
  40bb24:	strb	w2, [x1, #1]
  40bb28:	tst	x0, #0x80
  40bb2c:	mov	w2, #0x77                  	// #119
  40bb30:	csel	w2, w2, w3, ne  // ne = any
  40bb34:	strb	w2, [x1, #2]
  40bb38:	tbz	w0, #11, 40bbd8 <__fxstatat@plt+0x9188>
  40bb3c:	tst	x0, #0x40
  40bb40:	mov	w2, #0x73                  	// #115
  40bb44:	mov	w3, #0x53                  	// #83
  40bb48:	csel	w2, w2, w3, ne  // ne = any
  40bb4c:	strb	w2, [x1, #3]
  40bb50:	tst	x0, #0x20
  40bb54:	mov	w2, #0x72                  	// #114
  40bb58:	mov	w3, #0x2d                  	// #45
  40bb5c:	csel	w2, w2, w3, ne  // ne = any
  40bb60:	strb	w2, [x1, #4]
  40bb64:	tst	x0, #0x10
  40bb68:	mov	w2, #0x77                  	// #119
  40bb6c:	csel	w2, w2, w3, ne  // ne = any
  40bb70:	strb	w2, [x1, #5]
  40bb74:	tbz	w0, #10, 40bbec <__fxstatat@plt+0x919c>
  40bb78:	tst	x0, #0x8
  40bb7c:	mov	w2, #0x73                  	// #115
  40bb80:	mov	w3, #0x53                  	// #83
  40bb84:	csel	w2, w2, w3, ne  // ne = any
  40bb88:	strb	w2, [x1, #6]
  40bb8c:	tst	x0, #0x4
  40bb90:	mov	w2, #0x72                  	// #114
  40bb94:	mov	w3, #0x2d                  	// #45
  40bb98:	csel	w2, w2, w3, ne  // ne = any
  40bb9c:	strb	w2, [x1, #7]
  40bba0:	tst	x0, #0x2
  40bba4:	mov	w2, #0x77                  	// #119
  40bba8:	csel	w2, w2, w3, ne  // ne = any
  40bbac:	strb	w2, [x1, #8]
  40bbb0:	tbz	w0, #9, 40bc00 <__fxstatat@plt+0x91b0>
  40bbb4:	tst	x0, #0x1
  40bbb8:	mov	w0, #0x74                  	// #116
  40bbbc:	mov	w2, #0x54                  	// #84
  40bbc0:	csel	w0, w0, w2, ne  // ne = any
  40bbc4:	strb	w0, [x1, #9]
  40bbc8:	mov	w0, #0x20                  	// #32
  40bbcc:	strb	w0, [x1, #10]
  40bbd0:	strb	wzr, [x1, #11]
  40bbd4:	ret
  40bbd8:	tst	x0, #0x40
  40bbdc:	mov	w2, #0x78                  	// #120
  40bbe0:	mov	w3, #0x2d                  	// #45
  40bbe4:	csel	w2, w2, w3, ne  // ne = any
  40bbe8:	b	40bb4c <__fxstatat@plt+0x90fc>
  40bbec:	tst	x0, #0x8
  40bbf0:	mov	w2, #0x78                  	// #120
  40bbf4:	mov	w3, #0x2d                  	// #45
  40bbf8:	csel	w2, w2, w3, ne  // ne = any
  40bbfc:	b	40bb88 <__fxstatat@plt+0x9138>
  40bc00:	tst	x0, #0x1
  40bc04:	mov	w0, #0x78                  	// #120
  40bc08:	mov	w2, #0x2d                  	// #45
  40bc0c:	csel	w0, w0, w2, ne  // ne = any
  40bc10:	b	40bbc4 <__fxstatat@plt+0x9174>
  40bc14:	stp	x29, x30, [sp, #-16]!
  40bc18:	mov	x29, sp
  40bc1c:	ldr	w0, [x0, #16]
  40bc20:	bl	40bab4 <__fxstatat@plt+0x9064>
  40bc24:	ldp	x29, x30, [sp], #16
  40bc28:	ret
  40bc2c:	stp	x29, x30, [sp, #-16]!
  40bc30:	mov	x29, sp
  40bc34:	bl	40bc48 <__fxstatat@plt+0x91f8>
  40bc38:	cbz	x0, 40bc44 <__fxstatat@plt+0x91f4>
  40bc3c:	ldp	x29, x30, [sp], #16
  40bc40:	ret
  40bc44:	bl	412584 <__fxstatat@plt+0xfb34>
  40bc48:	stp	x29, x30, [sp, #-80]!
  40bc4c:	mov	x29, sp
  40bc50:	stp	x19, x20, [sp, #16]
  40bc54:	stp	x21, x22, [sp, #32]
  40bc58:	stp	x23, x24, [sp, #48]
  40bc5c:	stp	x25, x26, [sp, #64]
  40bc60:	mov	x23, x0
  40bc64:	mov	x21, x1
  40bc68:	mov	x22, x2
  40bc6c:	bl	40b874 <__fxstatat@plt+0x8e24>
  40bc70:	mov	x19, x0
  40bc74:	bl	40b8d0 <__fxstatat@plt+0x8e80>
  40bc78:	mov	x20, x0
  40bc7c:	sub	x19, x19, x23
  40bc80:	add	x19, x19, x0
  40bc84:	mov	x0, x21
  40bc88:	bl	402430 <strlen@plt>
  40bc8c:	mov	x24, x0
  40bc90:	add	x0, x0, #0x1
  40bc94:	cbz	x20, 40bcc0 <__fxstatat@plt+0x9270>
  40bc98:	add	x1, x23, x19
  40bc9c:	ldurb	w1, [x1, #-1]
  40bca0:	mov	w25, #0x0                   	// #0
  40bca4:	cmp	w1, #0x2f
  40bca8:	b.eq	40bcd0 <__fxstatat@plt+0x9280>  // b.none
  40bcac:	ldrb	w1, [x21]
  40bcb0:	cmp	w1, #0x2f
  40bcb4:	mov	w25, #0x2f                  	// #47
  40bcb8:	csel	w25, w25, wzr, ne  // ne = any
  40bcbc:	b	40bcd0 <__fxstatat@plt+0x9280>
  40bcc0:	ldrb	w1, [x21]
  40bcc4:	cmp	w1, #0x2f
  40bcc8:	mov	w25, #0x2e                  	// #46
  40bccc:	csel	w25, w25, wzr, eq  // eq = none
  40bcd0:	cmp	w25, #0x0
  40bcd4:	cset	x26, ne  // ne = any
  40bcd8:	cinc	x1, x19, ne  // ne = any
  40bcdc:	add	x0, x1, x0
  40bce0:	bl	4025f0 <malloc@plt>
  40bce4:	mov	x20, x0
  40bce8:	cbz	x0, 40bd18 <__fxstatat@plt+0x92c8>
  40bcec:	mov	x2, x19
  40bcf0:	mov	x1, x23
  40bcf4:	bl	402860 <mempcpy@plt>
  40bcf8:	strb	w25, [x0]
  40bcfc:	add	x0, x0, x26
  40bd00:	cbz	x22, 40bd08 <__fxstatat@plt+0x92b8>
  40bd04:	str	x0, [x22]
  40bd08:	mov	x2, x24
  40bd0c:	mov	x1, x21
  40bd10:	bl	402860 <mempcpy@plt>
  40bd14:	strb	wzr, [x0]
  40bd18:	mov	x0, x20
  40bd1c:	ldp	x19, x20, [sp, #16]
  40bd20:	ldp	x21, x22, [sp, #32]
  40bd24:	ldp	x23, x24, [sp, #48]
  40bd28:	ldp	x25, x26, [sp, #64]
  40bd2c:	ldp	x29, x30, [sp], #80
  40bd30:	ret
  40bd34:	mov	x5, x0
  40bd38:	ldr	x2, [x0]
  40bd3c:	ldrb	w1, [x2]
  40bd40:	cbz	w1, 40be00 <__fxstatat@plt+0x93b0>
  40bd44:	mov	w3, #0x0                   	// #0
  40bd48:	mov	x0, #0x0                   	// #0
  40bd4c:	mov	x7, #0x0                   	// #0
  40bd50:	mov	w8, #0x1                   	// #1
  40bd54:	mov	w6, #0x0                   	// #0
  40bd58:	b	40bd78 <__fxstatat@plt+0x9328>
  40bd5c:	mov	w3, w6
  40bd60:	cmp	w1, #0x41
  40bd64:	csel	x0, x0, x7, cs  // cs = hs, nlast
  40bd68:	add	x2, x2, #0x1
  40bd6c:	str	x2, [x5]
  40bd70:	ldrb	w1, [x2]
  40bd74:	cbz	w1, 40be04 <__fxstatat@plt+0x93b4>
  40bd78:	cbz	w3, 40bda4 <__fxstatat@plt+0x9354>
  40bd7c:	cmp	w1, #0x5a
  40bd80:	b.ls	40bd5c <__fxstatat@plt+0x930c>  // b.plast
  40bd84:	sub	w4, w1, #0x61
  40bd88:	and	w4, w4, #0xff
  40bd8c:	mov	w3, w6
  40bd90:	cmp	w4, #0x19
  40bd94:	b.ls	40bd68 <__fxstatat@plt+0x9318>  // b.plast
  40bd98:	cmp	w1, #0x7e
  40bd9c:	csel	x0, x0, x7, eq  // eq = none
  40bda0:	b	40bd68 <__fxstatat@plt+0x9318>
  40bda4:	cmp	w1, #0x2e
  40bda8:	b.eq	40bdd0 <__fxstatat@plt+0x9380>  // b.none
  40bdac:	cmp	w1, #0x5a
  40bdb0:	b.hi	40bde4 <__fxstatat@plt+0x9394>  // b.pmore
  40bdb4:	cmp	w1, #0x40
  40bdb8:	b.hi	40bd68 <__fxstatat@plt+0x9318>  // b.pmore
  40bdbc:	sub	w1, w1, #0x30
  40bdc0:	and	w1, w1, #0xff
  40bdc4:	cmp	w1, #0xa
  40bdc8:	csel	x0, x0, x7, cc  // cc = lo, ul, last
  40bdcc:	b	40bd68 <__fxstatat@plt+0x9318>
  40bdd0:	cmp	x0, #0x0
  40bdd4:	csel	x1, x0, x2, ne  // ne = any
  40bdd8:	csel	w3, w8, w8, ne  // ne = any
  40bddc:	mov	x0, x1
  40bde0:	b	40bd68 <__fxstatat@plt+0x9318>
  40bde4:	sub	w4, w1, #0x61
  40bde8:	and	w4, w4, #0xff
  40bdec:	cmp	w4, #0x19
  40bdf0:	b.ls	40bd68 <__fxstatat@plt+0x9318>  // b.plast
  40bdf4:	cmp	w1, #0x7e
  40bdf8:	csel	x0, x0, x7, eq  // eq = none
  40bdfc:	b	40bd68 <__fxstatat@plt+0x9318>
  40be00:	mov	x0, #0x0                   	// #0
  40be04:	ret
  40be08:	and	w1, w0, #0xff
  40be0c:	sub	w0, w1, #0x30
  40be10:	cmp	w0, #0x9
  40be14:	b.ls	40be54 <__fxstatat@plt+0x9404>  // b.plast
  40be18:	mov	w0, w1
  40be1c:	cmp	w1, #0x5a
  40be20:	b.hi	40be34 <__fxstatat@plt+0x93e4>  // b.pmore
  40be24:	cmp	w1, #0x40
  40be28:	b.hi	40be58 <__fxstatat@plt+0x9408>  // b.pmore
  40be2c:	add	w0, w1, #0x100
  40be30:	b	40be58 <__fxstatat@plt+0x9408>
  40be34:	sub	w2, w1, #0x61
  40be38:	and	w2, w2, #0xff
  40be3c:	cmp	w2, #0x19
  40be40:	b.ls	40be58 <__fxstatat@plt+0x9408>  // b.plast
  40be44:	mov	w0, #0xffffffff            	// #-1
  40be48:	cmp	w1, #0x7e
  40be4c:	b.eq	40be58 <__fxstatat@plt+0x9408>  // b.none
  40be50:	b	40be2c <__fxstatat@plt+0x93dc>
  40be54:	mov	w0, #0x0                   	// #0
  40be58:	ret
  40be5c:	stp	x29, x30, [sp, #-128]!
  40be60:	mov	x29, sp
  40be64:	stp	x19, x20, [sp, #16]
  40be68:	stp	x21, x22, [sp, #32]
  40be6c:	mov	x20, x0
  40be70:	mov	x21, x1
  40be74:	bl	402800 <strcmp@plt>
  40be78:	mov	w22, w0
  40be7c:	cbz	w0, 40c150 <__fxstatat@plt+0x9700>
  40be80:	ldrb	w19, [x20]
  40be84:	cbz	w19, 40c140 <__fxstatat@plt+0x96f0>
  40be88:	stp	x23, x24, [sp, #48]
  40be8c:	ldrb	w23, [x21]
  40be90:	cbz	w23, 40c148 <__fxstatat@plt+0x96f8>
  40be94:	mov	x1, x20
  40be98:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40be9c:	add	x0, x0, #0x8a0
  40bea0:	bl	402800 <strcmp@plt>
  40bea4:	cbz	w0, 40c164 <__fxstatat@plt+0x9714>
  40bea8:	mov	x1, x21
  40beac:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40beb0:	add	x0, x0, #0x8a0
  40beb4:	bl	402800 <strcmp@plt>
  40beb8:	cbz	w0, 40c170 <__fxstatat@plt+0x9720>
  40bebc:	mov	x1, x20
  40bec0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40bec4:	add	x0, x0, #0xc80
  40bec8:	bl	402800 <strcmp@plt>
  40becc:	cbz	w0, 40c17c <__fxstatat@plt+0x972c>
  40bed0:	mov	x1, x21
  40bed4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40bed8:	add	x0, x0, #0xc80
  40bedc:	bl	402800 <strcmp@plt>
  40bee0:	cbz	w0, 40c188 <__fxstatat@plt+0x9738>
  40bee4:	cmp	w19, #0x2e
  40bee8:	cset	w0, eq  // eq = none
  40beec:	cmp	w23, #0x2e
  40bef0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40bef4:	b.ne	40c194 <__fxstatat@plt+0x9744>  // b.any
  40bef8:	cmp	w23, #0x2e
  40befc:	cset	w1, eq  // eq = none
  40bf00:	cmp	w19, #0x2e
  40bf04:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40bf08:	b.ne	40c1a0 <__fxstatat@plt+0x9750>  // b.any
  40bf0c:	stp	x25, x26, [sp, #64]
  40bf10:	stp	x27, x28, [sp, #80]
  40bf14:	cmp	w0, #0x0
  40bf18:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40bf1c:	b.ne	40bf94 <__fxstatat@plt+0x9544>  // b.any
  40bf20:	str	x20, [sp, #120]
  40bf24:	str	x21, [sp, #112]
  40bf28:	add	x0, sp, #0x78
  40bf2c:	bl	40bd34 <__fxstatat@plt+0x92e4>
  40bf30:	mov	x19, x0
  40bf34:	add	x0, sp, #0x70
  40bf38:	bl	40bd34 <__fxstatat@plt+0x92e4>
  40bf3c:	cmp	x19, #0x0
  40bf40:	ldr	x24, [sp, #120]
  40bf44:	csel	x24, x24, x19, eq  // eq = none
  40bf48:	sub	x24, x24, x20
  40bf4c:	cmp	x0, #0x0
  40bf50:	ldr	x26, [sp, #112]
  40bf54:	csel	x26, x26, x0, eq  // eq = none
  40bf58:	sub	x26, x26, x21
  40bf5c:	orr	x19, x19, x0
  40bf60:	cmp	x19, #0x0
  40bf64:	ccmp	x24, x26, #0x0, ne  // ne = any
  40bf68:	b.eq	40bfa0 <__fxstatat@plt+0x9550>  // b.none
  40bf6c:	mov	x23, #0x0                   	// #0
  40bf70:	mov	x25, #0x0                   	// #0
  40bf74:	str	wzr, [sp, #108]
  40bf78:	cmp	x24, x25
  40bf7c:	ccmp	x26, x23, #0x2, ls  // ls = plast
  40bf80:	b.ls	40c130 <__fxstatat@plt+0x96e0>  // b.plast
  40bf84:	mov	x19, x25
  40bf88:	sub	x25, x23, x25
  40bf8c:	add	x28, x21, x25
  40bf90:	b	40bffc <__fxstatat@plt+0x95ac>
  40bf94:	add	x20, x20, #0x1
  40bf98:	add	x21, x21, #0x1
  40bf9c:	b	40bf20 <__fxstatat@plt+0x94d0>
  40bfa0:	mov	x2, x24
  40bfa4:	mov	x1, x21
  40bfa8:	mov	x0, x20
  40bfac:	bl	402640 <strncmp@plt>
  40bfb0:	cbnz	w0, 40bf6c <__fxstatat@plt+0x951c>
  40bfb4:	ldr	x24, [sp, #120]
  40bfb8:	sub	x24, x24, x20
  40bfbc:	ldr	x26, [sp, #112]
  40bfc0:	sub	x26, x26, x21
  40bfc4:	b	40bf6c <__fxstatat@plt+0x951c>
  40bfc8:	ldr	w27, [sp, #108]
  40bfcc:	b	40bfe8 <__fxstatat@plt+0x9598>
  40bfd0:	ldrb	w0, [x20, x19]
  40bfd4:	bl	40be08 <__fxstatat@plt+0x93b8>
  40bfd8:	mov	w27, w0
  40bfdc:	ldr	w0, [sp, #108]
  40bfe0:	cmp	x26, x23
  40bfe4:	b.eq	40bff0 <__fxstatat@plt+0x95a0>  // b.none
  40bfe8:	ldrb	w0, [x28, x19]
  40bfec:	bl	40be08 <__fxstatat@plt+0x93b8>
  40bff0:	cmp	w0, w27
  40bff4:	b.ne	40c048 <__fxstatat@plt+0x95f8>  // b.any
  40bff8:	add	x19, x19, #0x1
  40bffc:	add	x23, x19, x25
  40c000:	cmp	x24, x19
  40c004:	b.ls	40c018 <__fxstatat@plt+0x95c8>  // b.plast
  40c008:	ldrb	w0, [x20, x19]
  40c00c:	sub	w0, w0, #0x30
  40c010:	cmp	w0, #0x9
  40c014:	b.hi	40bfd0 <__fxstatat@plt+0x9580>  // b.pmore
  40c018:	cmp	x26, x23
  40c01c:	b.ls	40c05c <__fxstatat@plt+0x960c>  // b.plast
  40c020:	ldrb	w0, [x28, x19]
  40c024:	sub	w0, w0, #0x30
  40c028:	cmp	w0, #0x9
  40c02c:	b.ls	40c05c <__fxstatat@plt+0x960c>  // b.plast
  40c030:	cmp	x24, x19
  40c034:	b.eq	40bfc8 <__fxstatat@plt+0x9578>  // b.none
  40c038:	ldrb	w0, [x20, x19]
  40c03c:	bl	40be08 <__fxstatat@plt+0x93b8>
  40c040:	mov	w27, w0
  40c044:	b	40bfe8 <__fxstatat@plt+0x9598>
  40c048:	sub	w22, w27, w0
  40c04c:	ldp	x23, x24, [sp, #48]
  40c050:	ldp	x25, x26, [sp, #64]
  40c054:	ldp	x27, x28, [sp, #80]
  40c058:	b	40c150 <__fxstatat@plt+0x9700>
  40c05c:	ldrb	w0, [x20, x19]
  40c060:	cmp	w0, #0x30
  40c064:	b.ne	40c078 <__fxstatat@plt+0x9628>  // b.any
  40c068:	add	x19, x19, #0x1
  40c06c:	ldrb	w0, [x20, x19]
  40c070:	cmp	w0, #0x30
  40c074:	b.eq	40c068 <__fxstatat@plt+0x9618>  // b.none
  40c078:	ldrb	w0, [x21, x23]
  40c07c:	cmp	w0, #0x30
  40c080:	b.ne	40c094 <__fxstatat@plt+0x9644>  // b.any
  40c084:	add	x23, x23, #0x1
  40c088:	ldrb	w0, [x21, x23]
  40c08c:	cmp	w0, #0x30
  40c090:	b.eq	40c084 <__fxstatat@plt+0x9634>  // b.none
  40c094:	ldrb	w0, [x20, x19]
  40c098:	sub	w1, w0, #0x30
  40c09c:	mov	w3, #0x0                   	// #0
  40c0a0:	cmp	w1, #0x9
  40c0a4:	b.ls	40c0cc <__fxstatat@plt+0x967c>  // b.plast
  40c0a8:	ldrb	w0, [x21, x23]
  40c0ac:	sub	w0, w0, #0x30
  40c0b0:	cmp	w0, #0x9
  40c0b4:	b.hi	40c128 <__fxstatat@plt+0x96d8>  // b.pmore
  40c0b8:	mov	w22, #0xffffffff            	// #-1
  40c0bc:	ldp	x23, x24, [sp, #48]
  40c0c0:	ldp	x25, x26, [sp, #64]
  40c0c4:	ldp	x27, x28, [sp, #80]
  40c0c8:	b	40c150 <__fxstatat@plt+0x9700>
  40c0cc:	ldrb	w2, [x21, x23]
  40c0d0:	sub	w4, w2, #0x30
  40c0d4:	cmp	w4, #0x9
  40c0d8:	b.hi	40c1c0 <__fxstatat@plt+0x9770>  // b.pmore
  40c0dc:	sub	w0, w0, w2
  40c0e0:	cmp	w3, #0x0
  40c0e4:	csel	w3, w0, w3, eq  // eq = none
  40c0e8:	add	x19, x19, #0x1
  40c0ec:	add	x23, x23, #0x1
  40c0f0:	ldrb	w0, [x20, x19]
  40c0f4:	sub	w1, w0, #0x30
  40c0f8:	cmp	w1, #0x9
  40c0fc:	b.ls	40c0cc <__fxstatat@plt+0x967c>  // b.plast
  40c100:	ldrb	w0, [x21, x23]
  40c104:	sub	w0, w0, #0x30
  40c108:	cmp	w0, #0x9
  40c10c:	b.ls	40c1ac <__fxstatat@plt+0x975c>  // b.plast
  40c110:	cbz	w3, 40c128 <__fxstatat@plt+0x96d8>
  40c114:	mov	w22, w3
  40c118:	ldp	x23, x24, [sp, #48]
  40c11c:	ldp	x25, x26, [sp, #64]
  40c120:	ldp	x27, x28, [sp, #80]
  40c124:	b	40c150 <__fxstatat@plt+0x9700>
  40c128:	mov	x25, x19
  40c12c:	b	40bf78 <__fxstatat@plt+0x9528>
  40c130:	ldp	x23, x24, [sp, #48]
  40c134:	ldp	x25, x26, [sp, #64]
  40c138:	ldp	x27, x28, [sp, #80]
  40c13c:	b	40c150 <__fxstatat@plt+0x9700>
  40c140:	mov	w22, #0xffffffff            	// #-1
  40c144:	b	40c150 <__fxstatat@plt+0x9700>
  40c148:	mov	w22, #0x1                   	// #1
  40c14c:	ldp	x23, x24, [sp, #48]
  40c150:	mov	w0, w22
  40c154:	ldp	x19, x20, [sp, #16]
  40c158:	ldp	x21, x22, [sp, #32]
  40c15c:	ldp	x29, x30, [sp], #128
  40c160:	ret
  40c164:	mov	w22, #0xffffffff            	// #-1
  40c168:	ldp	x23, x24, [sp, #48]
  40c16c:	b	40c150 <__fxstatat@plt+0x9700>
  40c170:	mov	w22, #0x1                   	// #1
  40c174:	ldp	x23, x24, [sp, #48]
  40c178:	b	40c150 <__fxstatat@plt+0x9700>
  40c17c:	mov	w22, #0xffffffff            	// #-1
  40c180:	ldp	x23, x24, [sp, #48]
  40c184:	b	40c150 <__fxstatat@plt+0x9700>
  40c188:	mov	w22, #0x1                   	// #1
  40c18c:	ldp	x23, x24, [sp, #48]
  40c190:	b	40c150 <__fxstatat@plt+0x9700>
  40c194:	mov	w22, #0xffffffff            	// #-1
  40c198:	ldp	x23, x24, [sp, #48]
  40c19c:	b	40c150 <__fxstatat@plt+0x9700>
  40c1a0:	mov	w22, #0x1                   	// #1
  40c1a4:	ldp	x23, x24, [sp, #48]
  40c1a8:	b	40c150 <__fxstatat@plt+0x9700>
  40c1ac:	mov	w22, #0xffffffff            	// #-1
  40c1b0:	ldp	x23, x24, [sp, #48]
  40c1b4:	ldp	x25, x26, [sp, #64]
  40c1b8:	ldp	x27, x28, [sp, #80]
  40c1bc:	b	40c150 <__fxstatat@plt+0x9700>
  40c1c0:	cmp	w1, #0x9
  40c1c4:	b.hi	40c110 <__fxstatat@plt+0x96c0>  // b.pmore
  40c1c8:	mov	w22, #0x1                   	// #1
  40c1cc:	ldp	x23, x24, [sp, #48]
  40c1d0:	ldp	x25, x26, [sp, #64]
  40c1d4:	ldp	x27, x28, [sp, #80]
  40c1d8:	b	40c150 <__fxstatat@plt+0x9700>
  40c1dc:	stp	x29, x30, [sp, #-16]!
  40c1e0:	mov	x29, sp
  40c1e4:	mov	x1, x0
  40c1e8:	mov	w0, #0x0                   	// #0
  40c1ec:	bl	402530 <clock_gettime@plt>
  40c1f0:	ldp	x29, x30, [sp], #16
  40c1f4:	ret
  40c1f8:	stp	x29, x30, [sp, #-32]!
  40c1fc:	mov	x29, sp
  40c200:	add	x0, sp, #0x10
  40c204:	bl	40c1dc <__fxstatat@plt+0x978c>
  40c208:	ldp	x0, x1, [sp, #16]
  40c20c:	ldp	x29, x30, [sp], #32
  40c210:	ret
  40c214:	stp	x29, x30, [sp, #-32]!
  40c218:	mov	x29, sp
  40c21c:	mov	x1, #0x0                   	// #0
  40c220:	bl	402a40 <setlocale@plt>
  40c224:	mov	w1, #0x1                   	// #1
  40c228:	cbz	x0, 40c264 <__fxstatat@plt+0x9814>
  40c22c:	str	x19, [sp, #16]
  40c230:	mov	x19, x0
  40c234:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c238:	add	x1, x1, #0xc88
  40c23c:	bl	402800 <strcmp@plt>
  40c240:	mov	w1, #0x0                   	// #0
  40c244:	cbz	w0, 40c270 <__fxstatat@plt+0x9820>
  40c248:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c24c:	add	x1, x1, #0xc90
  40c250:	mov	x0, x19
  40c254:	bl	402800 <strcmp@plt>
  40c258:	cmp	w0, #0x0
  40c25c:	cset	w1, ne  // ne = any
  40c260:	ldr	x19, [sp, #16]
  40c264:	mov	w0, w1
  40c268:	ldp	x29, x30, [sp], #32
  40c26c:	ret
  40c270:	ldr	x19, [sp, #16]
  40c274:	b	40c264 <__fxstatat@plt+0x9814>
  40c278:	ror	x2, x0, #3
  40c27c:	udiv	x0, x2, x1
  40c280:	msub	x0, x0, x1, x2
  40c284:	ret
  40c288:	cmp	x1, x0
  40c28c:	cset	w0, eq  // eq = none
  40c290:	ret
  40c294:	mov	x1, x0
  40c298:	ldr	x2, [x0, #40]
  40c29c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c2a0:	add	x0, x0, #0xd08
  40c2a4:	cmp	x2, x0
  40c2a8:	b.eq	40c348 <__fxstatat@plt+0x98f8>  // b.none
  40c2ac:	ldr	s0, [x2, #8]
  40c2b0:	mov	w0, #0xcccd                	// #52429
  40c2b4:	movk	w0, #0x3dcc, lsl #16
  40c2b8:	fmov	s1, w0
  40c2bc:	fcmpe	s0, s1
  40c2c0:	b.le	40c324 <__fxstatat@plt+0x98d4>
  40c2c4:	mov	w0, #0x6666                	// #26214
  40c2c8:	movk	w0, #0x3f66, lsl #16
  40c2cc:	fmov	s1, w0
  40c2d0:	fcmpe	s0, s1
  40c2d4:	b.pl	40c324 <__fxstatat@plt+0x98d4>  // b.nfrst
  40c2d8:	mov	w0, #0xcccd                	// #52429
  40c2dc:	movk	w0, #0x3f8c, lsl #16
  40c2e0:	fmov	s1, w0
  40c2e4:	ldr	s2, [x2, #12]
  40c2e8:	fcmpe	s2, s1
  40c2ec:	b.le	40c324 <__fxstatat@plt+0x98d4>
  40c2f0:	ldr	s1, [x2]
  40c2f4:	fcmpe	s1, #0.0
  40c2f8:	b.lt	40c324 <__fxstatat@plt+0x98d4>  // b.tstop
  40c2fc:	mov	w0, #0xcccd                	// #52429
  40c300:	movk	w0, #0x3dcc, lsl #16
  40c304:	fmov	s2, w0
  40c308:	fadd	s1, s1, s2
  40c30c:	ldr	s2, [x2, #4]
  40c310:	fcmpe	s1, s2
  40c314:	b.pl	40c324 <__fxstatat@plt+0x98d4>  // b.nfrst
  40c318:	fmov	s3, #1.000000000000000000e+00
  40c31c:	fcmpe	s2, s3
  40c320:	b.ls	40c338 <__fxstatat@plt+0x98e8>  // b.plast
  40c324:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c328:	add	x0, x0, #0xd08
  40c32c:	str	x0, [x1, #40]
  40c330:	mov	w0, #0x0                   	// #0
  40c334:	ret
  40c338:	mov	w0, #0x1                   	// #1
  40c33c:	fcmpe	s0, s1
  40c340:	b.le	40c324 <__fxstatat@plt+0x98d4>
  40c344:	b	40c334 <__fxstatat@plt+0x98e4>
  40c348:	mov	w0, #0x1                   	// #1
  40c34c:	b	40c334 <__fxstatat@plt+0x98e4>
  40c350:	ldrb	w2, [x1, #16]
  40c354:	cbnz	w2, 40c37c <__fxstatat@plt+0x992c>
  40c358:	ucvtf	s0, x0
  40c35c:	ldr	s1, [x1, #8]
  40c360:	fdiv	s0, s0, s1
  40c364:	mov	w0, #0x5f800000            	// #1602224128
  40c368:	fmov	s1, w0
  40c36c:	mov	x0, #0x0                   	// #0
  40c370:	fcmpe	s0, s1
  40c374:	b.ge	40c424 <__fxstatat@plt+0x99d4>  // b.tcont
  40c378:	fcvtzu	x0, s0
  40c37c:	cmp	x0, #0xa
  40c380:	mov	x1, #0xa                   	// #10
  40c384:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40c388:	orr	x0, x0, #0x1
  40c38c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40c390:	movk	x5, #0xaaab
  40c394:	cmn	x0, #0x1
  40c398:	b.ne	40c3c0 <__fxstatat@plt+0x9970>  // b.any
  40c39c:	mov	x0, #0x0                   	// #0
  40c3a0:	b	40c424 <__fxstatat@plt+0x99d4>
  40c3a4:	mov	x1, #0x3                   	// #3
  40c3a8:	udiv	x2, x0, x1
  40c3ac:	msub	x1, x2, x1, x0
  40c3b0:	cbnz	x1, 40c40c <__fxstatat@plt+0x99bc>
  40c3b4:	add	x0, x0, #0x2
  40c3b8:	cmn	x0, #0x1
  40c3bc:	b.eq	40c428 <__fxstatat@plt+0x99d8>  // b.none
  40c3c0:	cmp	x0, #0x9
  40c3c4:	b.ls	40c3a4 <__fxstatat@plt+0x9954>  // b.plast
  40c3c8:	umulh	x1, x0, x5
  40c3cc:	and	x2, x1, #0xfffffffffffffffe
  40c3d0:	add	x1, x2, x1, lsr #1
  40c3d4:	cmp	x0, x1
  40c3d8:	b.eq	40c3b4 <__fxstatat@plt+0x9964>  // b.none
  40c3dc:	mov	x3, #0x10                  	// #16
  40c3e0:	mov	x2, #0x9                   	// #9
  40c3e4:	mov	x1, #0x3                   	// #3
  40c3e8:	add	x2, x2, x3
  40c3ec:	add	x1, x1, #0x2
  40c3f0:	cmp	x2, x0
  40c3f4:	b.cs	40c3a8 <__fxstatat@plt+0x9958>  // b.hs, b.nlast
  40c3f8:	add	x3, x3, #0x8
  40c3fc:	udiv	x4, x0, x1
  40c400:	msub	x4, x4, x1, x0
  40c404:	cbnz	x4, 40c3e8 <__fxstatat@plt+0x9998>
  40c408:	b	40c3b4 <__fxstatat@plt+0x9964>
  40c40c:	cmp	xzr, x0, lsr #61
  40c410:	cset	x1, ne  // ne = any
  40c414:	tst	x0, #0x1000000000000000
  40c418:	csinc	w1, w1, wzr, eq  // eq = none
  40c41c:	cmp	w1, #0x0
  40c420:	csel	x0, x0, xzr, eq  // eq = none
  40c424:	ret
  40c428:	mov	x0, #0x0                   	// #0
  40c42c:	b	40c424 <__fxstatat@plt+0x99d4>
  40c430:	stp	x29, x30, [sp, #-32]!
  40c434:	mov	x29, sp
  40c438:	str	x19, [sp, #16]
  40c43c:	mov	x19, x0
  40c440:	mov	x0, x1
  40c444:	ldr	x2, [x19, #48]
  40c448:	ldr	x1, [x19, #16]
  40c44c:	blr	x2
  40c450:	ldr	x1, [x19, #16]
  40c454:	cmp	x1, x0
  40c458:	b.ls	40c470 <__fxstatat@plt+0x9a20>  // b.plast
  40c45c:	ldr	x1, [x19]
  40c460:	add	x0, x1, x0, lsl #4
  40c464:	ldr	x19, [sp, #16]
  40c468:	ldp	x29, x30, [sp], #32
  40c46c:	ret
  40c470:	bl	402760 <abort@plt>
  40c474:	stp	x29, x30, [sp, #-80]!
  40c478:	mov	x29, sp
  40c47c:	stp	x21, x22, [sp, #32]
  40c480:	stp	x23, x24, [sp, #48]
  40c484:	mov	x21, x0
  40c488:	ldr	x22, [x1]
  40c48c:	ldr	x0, [x1, #8]
  40c490:	cmp	x22, x0
  40c494:	b.cs	40c5c8 <__fxstatat@plt+0x9b78>  // b.hs, b.nlast
  40c498:	stp	x19, x20, [sp, #16]
  40c49c:	str	x25, [sp, #64]
  40c4a0:	mov	x23, x1
  40c4a4:	and	w24, w2, #0xff
  40c4a8:	mov	x25, #0x10                  	// #16
  40c4ac:	b	40c568 <__fxstatat@plt+0x9b18>
  40c4b0:	str	x20, [x0]
  40c4b4:	ldr	x0, [x21, #24]
  40c4b8:	add	x0, x0, #0x1
  40c4bc:	str	x0, [x21, #24]
  40c4c0:	str	xzr, [x2]
  40c4c4:	ldr	x0, [x21, #72]
  40c4c8:	str	x0, [x2, #8]
  40c4cc:	str	x2, [x21, #72]
  40c4d0:	cbz	x19, 40c504 <__fxstatat@plt+0x9ab4>
  40c4d4:	ldr	x20, [x19]
  40c4d8:	mov	x1, x20
  40c4dc:	mov	x0, x21
  40c4e0:	bl	40c430 <__fxstatat@plt+0x99e0>
  40c4e4:	mov	x2, x19
  40c4e8:	ldr	x19, [x19, #8]
  40c4ec:	ldr	x1, [x0]
  40c4f0:	cbz	x1, 40c4b0 <__fxstatat@plt+0x9a60>
  40c4f4:	ldr	x1, [x0, #8]
  40c4f8:	str	x1, [x2, #8]
  40c4fc:	str	x2, [x0, #8]
  40c500:	b	40c4d0 <__fxstatat@plt+0x9a80>
  40c504:	ldr	x20, [x22]
  40c508:	str	xzr, [x22, #8]
  40c50c:	cbnz	w24, 40c558 <__fxstatat@plt+0x9b08>
  40c510:	mov	x1, x20
  40c514:	mov	x0, x21
  40c518:	bl	40c430 <__fxstatat@plt+0x99e0>
  40c51c:	mov	x19, x0
  40c520:	ldr	x0, [x0]
  40c524:	cbz	x0, 40c594 <__fxstatat@plt+0x9b44>
  40c528:	ldr	x0, [x21, #72]
  40c52c:	cbz	x0, 40c57c <__fxstatat@plt+0x9b2c>
  40c530:	ldr	x1, [x0, #8]
  40c534:	str	x1, [x21, #72]
  40c538:	str	x20, [x0]
  40c53c:	ldr	x1, [x19, #8]
  40c540:	str	x1, [x0, #8]
  40c544:	str	x0, [x19, #8]
  40c548:	str	xzr, [x22]
  40c54c:	ldr	x0, [x23, #24]
  40c550:	sub	x0, x0, #0x1
  40c554:	str	x0, [x23, #24]
  40c558:	add	x22, x22, #0x10
  40c55c:	ldr	x0, [x23, #8]
  40c560:	cmp	x0, x22
  40c564:	b.ls	40c5a8 <__fxstatat@plt+0x9b58>  // b.plast
  40c568:	ldr	x0, [x22]
  40c56c:	cbz	x0, 40c558 <__fxstatat@plt+0x9b08>
  40c570:	ldr	x19, [x22, #8]
  40c574:	cbnz	x19, 40c4d4 <__fxstatat@plt+0x9a84>
  40c578:	b	40c504 <__fxstatat@plt+0x9ab4>
  40c57c:	mov	x0, x25
  40c580:	bl	4025f0 <malloc@plt>
  40c584:	cbnz	x0, 40c538 <__fxstatat@plt+0x9ae8>
  40c588:	ldp	x19, x20, [sp, #16]
  40c58c:	ldr	x25, [sp, #64]
  40c590:	b	40c5b4 <__fxstatat@plt+0x9b64>
  40c594:	str	x20, [x19]
  40c598:	ldr	x0, [x21, #24]
  40c59c:	add	x0, x0, #0x1
  40c5a0:	str	x0, [x21, #24]
  40c5a4:	b	40c548 <__fxstatat@plt+0x9af8>
  40c5a8:	mov	w24, #0x1                   	// #1
  40c5ac:	ldp	x19, x20, [sp, #16]
  40c5b0:	ldr	x25, [sp, #64]
  40c5b4:	mov	w0, w24
  40c5b8:	ldp	x21, x22, [sp, #32]
  40c5bc:	ldp	x23, x24, [sp, #48]
  40c5c0:	ldp	x29, x30, [sp], #80
  40c5c4:	ret
  40c5c8:	mov	w24, #0x1                   	// #1
  40c5cc:	b	40c5b4 <__fxstatat@plt+0x9b64>
  40c5d0:	stp	x29, x30, [sp, #-64]!
  40c5d4:	mov	x29, sp
  40c5d8:	stp	x19, x20, [sp, #16]
  40c5dc:	stp	x21, x22, [sp, #32]
  40c5e0:	str	x23, [sp, #48]
  40c5e4:	mov	x21, x0
  40c5e8:	mov	x20, x1
  40c5ec:	mov	x22, x2
  40c5f0:	and	w23, w3, #0xff
  40c5f4:	bl	40c430 <__fxstatat@plt+0x99e0>
  40c5f8:	mov	x19, x0
  40c5fc:	str	x0, [x22]
  40c600:	ldr	x0, [x0]
  40c604:	cbz	x0, 40c6a0 <__fxstatat@plt+0x9c50>
  40c608:	cmp	x0, x20
  40c60c:	b.eq	40c660 <__fxstatat@plt+0x9c10>  // b.none
  40c610:	ldr	x2, [x21, #56]
  40c614:	mov	x1, x0
  40c618:	mov	x0, x20
  40c61c:	blr	x2
  40c620:	and	w0, w0, #0xff
  40c624:	cbnz	w0, 40c660 <__fxstatat@plt+0x9c10>
  40c628:	ldr	x0, [x19, #8]
  40c62c:	cbz	x0, 40c6a0 <__fxstatat@plt+0x9c50>
  40c630:	ldr	x1, [x0]
  40c634:	cmp	x1, x20
  40c638:	b.eq	40c694 <__fxstatat@plt+0x9c44>  // b.none
  40c63c:	ldr	x2, [x21, #56]
  40c640:	mov	x0, x20
  40c644:	blr	x2
  40c648:	and	w0, w0, #0xff
  40c64c:	cbnz	w0, 40c694 <__fxstatat@plt+0x9c44>
  40c650:	ldr	x19, [x19, #8]
  40c654:	ldr	x0, [x19, #8]
  40c658:	cbnz	x0, 40c630 <__fxstatat@plt+0x9be0>
  40c65c:	b	40c6a0 <__fxstatat@plt+0x9c50>
  40c660:	ldr	x0, [x19]
  40c664:	cbz	w23, 40c6a0 <__fxstatat@plt+0x9c50>
  40c668:	ldr	x1, [x19, #8]
  40c66c:	cbz	x1, 40c68c <__fxstatat@plt+0x9c3c>
  40c670:	ldp	x2, x3, [x1]
  40c674:	stp	x2, x3, [x19]
  40c678:	str	xzr, [x1]
  40c67c:	ldr	x2, [x21, #72]
  40c680:	str	x2, [x1, #8]
  40c684:	str	x1, [x21, #72]
  40c688:	b	40c6a0 <__fxstatat@plt+0x9c50>
  40c68c:	str	xzr, [x19]
  40c690:	b	40c6a0 <__fxstatat@plt+0x9c50>
  40c694:	ldr	x1, [x19, #8]
  40c698:	ldr	x0, [x1]
  40c69c:	cbnz	w23, 40c6b4 <__fxstatat@plt+0x9c64>
  40c6a0:	ldp	x19, x20, [sp, #16]
  40c6a4:	ldp	x21, x22, [sp, #32]
  40c6a8:	ldr	x23, [sp, #48]
  40c6ac:	ldp	x29, x30, [sp], #64
  40c6b0:	ret
  40c6b4:	ldr	x2, [x1, #8]
  40c6b8:	str	x2, [x19, #8]
  40c6bc:	str	xzr, [x1]
  40c6c0:	ldr	x2, [x21, #72]
  40c6c4:	str	x2, [x1, #8]
  40c6c8:	str	x1, [x21, #72]
  40c6cc:	b	40c6a0 <__fxstatat@plt+0x9c50>
  40c6d0:	ldr	x0, [x0, #16]
  40c6d4:	ret
  40c6d8:	ldr	x0, [x0, #24]
  40c6dc:	ret
  40c6e0:	ldr	x0, [x0, #32]
  40c6e4:	ret
  40c6e8:	ldr	x3, [x0]
  40c6ec:	ldr	x4, [x0, #8]
  40c6f0:	cmp	x3, x4
  40c6f4:	b.cs	40c73c <__fxstatat@plt+0x9cec>  // b.hs, b.nlast
  40c6f8:	mov	x0, #0x0                   	// #0
  40c6fc:	b	40c718 <__fxstatat@plt+0x9cc8>
  40c700:	mov	x2, #0x1                   	// #1
  40c704:	cmp	x0, x2
  40c708:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40c70c:	add	x3, x3, #0x10
  40c710:	cmp	x3, x4
  40c714:	b.cs	40c740 <__fxstatat@plt+0x9cf0>  // b.hs, b.nlast
  40c718:	ldr	x1, [x3]
  40c71c:	cbz	x1, 40c70c <__fxstatat@plt+0x9cbc>
  40c720:	ldr	x1, [x3, #8]
  40c724:	cbz	x1, 40c700 <__fxstatat@plt+0x9cb0>
  40c728:	mov	x2, #0x1                   	// #1
  40c72c:	add	x2, x2, #0x1
  40c730:	ldr	x1, [x1, #8]
  40c734:	cbnz	x1, 40c72c <__fxstatat@plt+0x9cdc>
  40c738:	b	40c704 <__fxstatat@plt+0x9cb4>
  40c73c:	mov	x0, #0x0                   	// #0
  40c740:	ret
  40c744:	mov	x6, x0
  40c748:	ldr	x3, [x0]
  40c74c:	ldr	x4, [x0, #8]
  40c750:	cmp	x3, x4
  40c754:	b.cs	40c798 <__fxstatat@plt+0x9d48>  // b.hs, b.nlast
  40c758:	mov	x2, #0x0                   	// #0
  40c75c:	mov	x5, #0x0                   	// #0
  40c760:	b	40c770 <__fxstatat@plt+0x9d20>
  40c764:	add	x3, x3, #0x10
  40c768:	cmp	x3, x4
  40c76c:	b.cs	40c7a0 <__fxstatat@plt+0x9d50>  // b.hs, b.nlast
  40c770:	ldr	x1, [x3]
  40c774:	cbz	x1, 40c764 <__fxstatat@plt+0x9d14>
  40c778:	add	x5, x5, #0x1
  40c77c:	add	x2, x2, #0x1
  40c780:	ldr	x1, [x3, #8]
  40c784:	cbz	x1, 40c764 <__fxstatat@plt+0x9d14>
  40c788:	add	x2, x2, #0x1
  40c78c:	ldr	x1, [x1, #8]
  40c790:	cbnz	x1, 40c788 <__fxstatat@plt+0x9d38>
  40c794:	b	40c764 <__fxstatat@plt+0x9d14>
  40c798:	mov	x2, #0x0                   	// #0
  40c79c:	mov	x5, #0x0                   	// #0
  40c7a0:	ldr	x1, [x6, #24]
  40c7a4:	mov	w0, #0x0                   	// #0
  40c7a8:	cmp	x1, x5
  40c7ac:	b.eq	40c7b4 <__fxstatat@plt+0x9d64>  // b.none
  40c7b0:	ret
  40c7b4:	ldr	x0, [x6, #32]
  40c7b8:	cmp	x0, x2
  40c7bc:	cset	w0, eq  // eq = none
  40c7c0:	b	40c7b0 <__fxstatat@plt+0x9d60>
  40c7c4:	stp	x29, x30, [sp, #-64]!
  40c7c8:	mov	x29, sp
  40c7cc:	stp	x19, x20, [sp, #16]
  40c7d0:	stp	x21, x22, [sp, #32]
  40c7d4:	str	x23, [sp, #48]
  40c7d8:	mov	x20, x0
  40c7dc:	mov	x19, x1
  40c7e0:	ldr	x21, [x0, #16]
  40c7e4:	ldr	x23, [x0, #24]
  40c7e8:	bl	40c6e8 <__fxstatat@plt+0x9c98>
  40c7ec:	mov	x22, x0
  40c7f0:	ldr	x3, [x20, #32]
  40c7f4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c7f8:	add	x2, x2, #0xc98
  40c7fc:	mov	w1, #0x1                   	// #1
  40c800:	mov	x0, x19
  40c804:	bl	4027e0 <__fprintf_chk@plt>
  40c808:	mov	x3, x21
  40c80c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c810:	add	x2, x2, #0xcb0
  40c814:	mov	w1, #0x1                   	// #1
  40c818:	mov	x0, x19
  40c81c:	bl	4027e0 <__fprintf_chk@plt>
  40c820:	ucvtf	d1, x23
  40c824:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40c828:	fmov	d0, x0
  40c82c:	fmul	d1, d1, d0
  40c830:	ucvtf	d0, x21
  40c834:	fdiv	d0, d1, d0
  40c838:	mov	x3, x23
  40c83c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c840:	add	x2, x2, #0xcc8
  40c844:	mov	w1, #0x1                   	// #1
  40c848:	mov	x0, x19
  40c84c:	bl	4027e0 <__fprintf_chk@plt>
  40c850:	mov	x3, x22
  40c854:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5af4>
  40c858:	add	x2, x2, #0xcf0
  40c85c:	mov	w1, #0x1                   	// #1
  40c860:	mov	x0, x19
  40c864:	bl	4027e0 <__fprintf_chk@plt>
  40c868:	ldp	x19, x20, [sp, #16]
  40c86c:	ldp	x21, x22, [sp, #32]
  40c870:	ldr	x23, [sp, #48]
  40c874:	ldp	x29, x30, [sp], #64
  40c878:	ret
  40c87c:	stp	x29, x30, [sp, #-48]!
  40c880:	mov	x29, sp
  40c884:	stp	x19, x20, [sp, #16]
  40c888:	str	x21, [sp, #32]
  40c88c:	mov	x21, x0
  40c890:	mov	x20, x1
  40c894:	bl	40c430 <__fxstatat@plt+0x99e0>
  40c898:	mov	x19, x0
  40c89c:	ldr	x0, [x0]
  40c8a0:	cbz	x0, 40c8e8 <__fxstatat@plt+0x9e98>
  40c8a4:	ldr	x1, [x19]
  40c8a8:	cmp	x1, x20
  40c8ac:	b.eq	40c8d0 <__fxstatat@plt+0x9e80>  // b.none
  40c8b0:	ldr	x2, [x21, #56]
  40c8b4:	mov	x0, x20
  40c8b8:	blr	x2
  40c8bc:	and	w0, w0, #0xff
  40c8c0:	cbnz	w0, 40c8d0 <__fxstatat@plt+0x9e80>
  40c8c4:	ldr	x19, [x19, #8]
  40c8c8:	cbnz	x19, 40c8a4 <__fxstatat@plt+0x9e54>
  40c8cc:	b	40c8d4 <__fxstatat@plt+0x9e84>
  40c8d0:	ldr	x19, [x19]
  40c8d4:	mov	x0, x19
  40c8d8:	ldp	x19, x20, [sp, #16]
  40c8dc:	ldr	x21, [sp, #32]
  40c8e0:	ldp	x29, x30, [sp], #48
  40c8e4:	ret
  40c8e8:	mov	x19, x0
  40c8ec:	b	40c8d4 <__fxstatat@plt+0x9e84>
  40c8f0:	ldr	x1, [x0, #32]
  40c8f4:	cbz	x1, 40c928 <__fxstatat@plt+0x9ed8>
  40c8f8:	ldr	x1, [x0]
  40c8fc:	ldr	x2, [x0, #8]
  40c900:	cmp	x1, x2
  40c904:	b.cs	40c91c <__fxstatat@plt+0x9ecc>  // b.hs, b.nlast
  40c908:	ldr	x0, [x1]
  40c90c:	cbnz	x0, 40c92c <__fxstatat@plt+0x9edc>
  40c910:	add	x1, x1, #0x10
  40c914:	cmp	x1, x2
  40c918:	b.cc	40c908 <__fxstatat@plt+0x9eb8>  // b.lo, b.ul, b.last
  40c91c:	stp	x29, x30, [sp, #-16]!
  40c920:	mov	x29, sp
  40c924:	bl	402760 <abort@plt>
  40c928:	mov	x0, #0x0                   	// #0
  40c92c:	ret
  40c930:	stp	x29, x30, [sp, #-32]!
  40c934:	mov	x29, sp
  40c938:	stp	x19, x20, [sp, #16]
  40c93c:	mov	x20, x0
  40c940:	mov	x19, x1
  40c944:	bl	40c430 <__fxstatat@plt+0x99e0>
  40c948:	mov	x3, x0
  40c94c:	mov	x2, x0
  40c950:	b	40c964 <__fxstatat@plt+0x9f14>
  40c954:	ldr	x0, [x1]
  40c958:	b	40c998 <__fxstatat@plt+0x9f48>
  40c95c:	ldr	x2, [x2, #8]
  40c960:	cbz	x2, 40c978 <__fxstatat@plt+0x9f28>
  40c964:	ldr	x4, [x2]
  40c968:	cmp	x4, x19
  40c96c:	b.ne	40c95c <__fxstatat@plt+0x9f0c>  // b.any
  40c970:	ldr	x1, [x2, #8]
  40c974:	cbnz	x1, 40c954 <__fxstatat@plt+0x9f04>
  40c978:	ldr	x1, [x20, #8]
  40c97c:	add	x3, x3, #0x10
  40c980:	cmp	x1, x3
  40c984:	b.ls	40c994 <__fxstatat@plt+0x9f44>  // b.plast
  40c988:	ldr	x0, [x3]
  40c98c:	cbz	x0, 40c97c <__fxstatat@plt+0x9f2c>
  40c990:	b	40c998 <__fxstatat@plt+0x9f48>
  40c994:	mov	x0, #0x0                   	// #0
  40c998:	ldp	x19, x20, [sp, #16]
  40c99c:	ldp	x29, x30, [sp], #32
  40c9a0:	ret
  40c9a4:	mov	x6, x0
  40c9a8:	ldr	x5, [x0]
  40c9ac:	ldr	x0, [x0, #8]
  40c9b0:	cmp	x5, x0
  40c9b4:	b.cs	40ca08 <__fxstatat@plt+0x9fb8>  // b.hs, b.nlast
  40c9b8:	mov	x0, #0x0                   	// #0
  40c9bc:	sub	x4, x1, #0x8
  40c9c0:	b	40c9d4 <__fxstatat@plt+0x9f84>
  40c9c4:	add	x5, x5, #0x10
  40c9c8:	ldr	x1, [x6, #8]
  40c9cc:	cmp	x1, x5
  40c9d0:	b.ls	40ca04 <__fxstatat@plt+0x9fb4>  // b.plast
  40c9d4:	ldr	x1, [x5]
  40c9d8:	cbz	x1, 40c9c4 <__fxstatat@plt+0x9f74>
  40c9dc:	cmp	x2, x0
  40c9e0:	b.ls	40ca04 <__fxstatat@plt+0x9fb4>  // b.plast
  40c9e4:	mov	x1, x5
  40c9e8:	add	x0, x0, #0x1
  40c9ec:	ldr	x3, [x1]
  40c9f0:	str	x3, [x4, x0, lsl #3]
  40c9f4:	ldr	x1, [x1, #8]
  40c9f8:	cbz	x1, 40c9c4 <__fxstatat@plt+0x9f74>
  40c9fc:	cmp	x2, x0
  40ca00:	b.ne	40c9e8 <__fxstatat@plt+0x9f98>  // b.any
  40ca04:	ret
  40ca08:	mov	x0, #0x0                   	// #0
  40ca0c:	b	40ca04 <__fxstatat@plt+0x9fb4>
  40ca10:	stp	x29, x30, [sp, #-64]!
  40ca14:	mov	x29, sp
  40ca18:	stp	x19, x20, [sp, #16]
  40ca1c:	stp	x23, x24, [sp, #48]
  40ca20:	mov	x24, x0
  40ca24:	ldr	x23, [x0]
  40ca28:	ldr	x0, [x0, #8]
  40ca2c:	cmp	x23, x0
  40ca30:	b.cs	40ca90 <__fxstatat@plt+0xa040>  // b.hs, b.nlast
  40ca34:	stp	x21, x22, [sp, #32]
  40ca38:	mov	x21, x1
  40ca3c:	mov	x22, x2
  40ca40:	mov	x20, #0x0                   	// #0
  40ca44:	b	40ca58 <__fxstatat@plt+0xa008>
  40ca48:	add	x23, x23, #0x10
  40ca4c:	ldr	x0, [x24, #8]
  40ca50:	cmp	x0, x23
  40ca54:	b.ls	40ca88 <__fxstatat@plt+0xa038>  // b.plast
  40ca58:	ldr	x0, [x23]
  40ca5c:	cbz	x0, 40ca48 <__fxstatat@plt+0x9ff8>
  40ca60:	mov	x19, x23
  40ca64:	mov	x1, x22
  40ca68:	ldr	x0, [x19]
  40ca6c:	blr	x21
  40ca70:	and	w0, w0, #0xff
  40ca74:	cbz	w0, 40ca98 <__fxstatat@plt+0xa048>
  40ca78:	add	x20, x20, #0x1
  40ca7c:	ldr	x19, [x19, #8]
  40ca80:	cbnz	x19, 40ca64 <__fxstatat@plt+0xa014>
  40ca84:	b	40ca48 <__fxstatat@plt+0x9ff8>
  40ca88:	ldp	x21, x22, [sp, #32]
  40ca8c:	b	40ca9c <__fxstatat@plt+0xa04c>
  40ca90:	mov	x20, #0x0                   	// #0
  40ca94:	b	40ca9c <__fxstatat@plt+0xa04c>
  40ca98:	ldp	x21, x22, [sp, #32]
  40ca9c:	mov	x0, x20
  40caa0:	ldp	x19, x20, [sp, #16]
  40caa4:	ldp	x23, x24, [sp, #48]
  40caa8:	ldp	x29, x30, [sp], #64
  40caac:	ret
  40cab0:	mov	x4, x0
  40cab4:	ldrb	w2, [x0]
  40cab8:	cbz	w2, 40cae0 <__fxstatat@plt+0xa090>
  40cabc:	mov	x0, #0x0                   	// #0
  40cac0:	lsl	x3, x0, #5
  40cac4:	sub	x0, x3, x0
  40cac8:	add	x2, x0, w2, uxtb
  40cacc:	udiv	x0, x2, x1
  40cad0:	msub	x0, x0, x1, x2
  40cad4:	ldrb	w2, [x4, #1]!
  40cad8:	cbnz	w2, 40cac0 <__fxstatat@plt+0xa070>
  40cadc:	ret
  40cae0:	mov	x0, #0x0                   	// #0
  40cae4:	b	40cadc <__fxstatat@plt+0xa08c>
  40cae8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40caec:	add	x1, x1, #0xd08
  40caf0:	ldp	x2, x3, [x1]
  40caf4:	stp	x2, x3, [x0]
  40caf8:	ldr	w1, [x1, #16]
  40cafc:	str	w1, [x0, #16]
  40cb00:	ret
  40cb04:	stp	x29, x30, [sp, #-64]!
  40cb08:	mov	x29, sp
  40cb0c:	stp	x19, x20, [sp, #16]
  40cb10:	stp	x21, x22, [sp, #32]
  40cb14:	stp	x23, x24, [sp, #48]
  40cb18:	mov	x24, x0
  40cb1c:	mov	x20, x1
  40cb20:	mov	x23, x4
  40cb24:	adrp	x1, 40c000 <__fxstatat@plt+0x95b0>
  40cb28:	add	x1, x1, #0x278
  40cb2c:	cmp	x2, #0x0
  40cb30:	csel	x22, x1, x2, eq  // eq = none
  40cb34:	adrp	x1, 40c000 <__fxstatat@plt+0x95b0>
  40cb38:	add	x1, x1, #0x288
  40cb3c:	cmp	x3, #0x0
  40cb40:	csel	x21, x1, x3, eq  // eq = none
  40cb44:	mov	x0, #0x50                  	// #80
  40cb48:	bl	4025f0 <malloc@plt>
  40cb4c:	mov	x19, x0
  40cb50:	cbz	x0, 40cbc0 <__fxstatat@plt+0xa170>
  40cb54:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40cb58:	add	x0, x0, #0xd08
  40cb5c:	cmp	x20, #0x0
  40cb60:	csel	x20, x0, x20, eq  // eq = none
  40cb64:	str	x20, [x19, #40]
  40cb68:	mov	x0, x19
  40cb6c:	bl	40c294 <__fxstatat@plt+0x9844>
  40cb70:	and	w0, w0, #0xff
  40cb74:	cbz	w0, 40cbd8 <__fxstatat@plt+0xa188>
  40cb78:	mov	x1, x20
  40cb7c:	mov	x0, x24
  40cb80:	bl	40c350 <__fxstatat@plt+0x9900>
  40cb84:	mov	x20, x0
  40cb88:	str	x0, [x19, #16]
  40cb8c:	cbz	x0, 40cbd8 <__fxstatat@plt+0xa188>
  40cb90:	mov	x1, #0x10                  	// #16
  40cb94:	bl	4026c0 <calloc@plt>
  40cb98:	str	x0, [x19]
  40cb9c:	cbz	x0, 40cbd8 <__fxstatat@plt+0xa188>
  40cba0:	add	x20, x0, x20, lsl #4
  40cba4:	str	x20, [x19, #8]
  40cba8:	str	xzr, [x19, #24]
  40cbac:	str	xzr, [x19, #32]
  40cbb0:	str	x22, [x19, #48]
  40cbb4:	str	x21, [x19, #56]
  40cbb8:	str	x23, [x19, #64]
  40cbbc:	str	xzr, [x19, #72]
  40cbc0:	mov	x0, x19
  40cbc4:	ldp	x19, x20, [sp, #16]
  40cbc8:	ldp	x21, x22, [sp, #32]
  40cbcc:	ldp	x23, x24, [sp, #48]
  40cbd0:	ldp	x29, x30, [sp], #64
  40cbd4:	ret
  40cbd8:	mov	x0, x19
  40cbdc:	bl	402840 <free@plt>
  40cbe0:	mov	x19, #0x0                   	// #0
  40cbe4:	b	40cbc0 <__fxstatat@plt+0xa170>
  40cbe8:	stp	x29, x30, [sp, #-48]!
  40cbec:	mov	x29, sp
  40cbf0:	stp	x19, x20, [sp, #16]
  40cbf4:	str	x21, [sp, #32]
  40cbf8:	mov	x20, x0
  40cbfc:	ldr	x21, [x0]
  40cc00:	ldr	x0, [x0, #8]
  40cc04:	cmp	x21, x0
  40cc08:	b.cc	40cc7c <__fxstatat@plt+0xa22c>  // b.lo, b.ul, b.last
  40cc0c:	str	xzr, [x20, #24]
  40cc10:	str	xzr, [x20, #32]
  40cc14:	ldp	x19, x20, [sp, #16]
  40cc18:	ldr	x21, [sp, #32]
  40cc1c:	ldp	x29, x30, [sp], #48
  40cc20:	ret
  40cc24:	str	xzr, [x19]
  40cc28:	ldr	x0, [x19, #8]
  40cc2c:	ldr	x1, [x20, #72]
  40cc30:	str	x1, [x19, #8]
  40cc34:	str	x19, [x20, #72]
  40cc38:	cbz	x0, 40cc54 <__fxstatat@plt+0xa204>
  40cc3c:	mov	x19, x0
  40cc40:	ldr	x1, [x20, #64]
  40cc44:	cbz	x1, 40cc24 <__fxstatat@plt+0xa1d4>
  40cc48:	ldr	x0, [x19]
  40cc4c:	blr	x1
  40cc50:	b	40cc24 <__fxstatat@plt+0xa1d4>
  40cc54:	ldr	x1, [x20, #64]
  40cc58:	cbz	x1, 40cc64 <__fxstatat@plt+0xa214>
  40cc5c:	ldr	x0, [x21]
  40cc60:	blr	x1
  40cc64:	str	xzr, [x21]
  40cc68:	str	xzr, [x21, #8]
  40cc6c:	add	x21, x21, #0x10
  40cc70:	ldr	x0, [x20, #8]
  40cc74:	cmp	x0, x21
  40cc78:	b.ls	40cc0c <__fxstatat@plt+0xa1bc>  // b.plast
  40cc7c:	ldr	x0, [x21]
  40cc80:	cbz	x0, 40cc6c <__fxstatat@plt+0xa21c>
  40cc84:	ldr	x19, [x21, #8]
  40cc88:	cbnz	x19, 40cc40 <__fxstatat@plt+0xa1f0>
  40cc8c:	b	40cc54 <__fxstatat@plt+0xa204>
  40cc90:	stp	x29, x30, [sp, #-48]!
  40cc94:	mov	x29, sp
  40cc98:	stp	x19, x20, [sp, #16]
  40cc9c:	str	x21, [sp, #32]
  40cca0:	mov	x21, x0
  40cca4:	ldr	x0, [x0, #64]
  40cca8:	cbz	x0, 40ccfc <__fxstatat@plt+0xa2ac>
  40ccac:	ldr	x0, [x21, #32]
  40ccb0:	cbz	x0, 40ccfc <__fxstatat@plt+0xa2ac>
  40ccb4:	ldr	x20, [x21]
  40ccb8:	ldr	x0, [x21, #8]
  40ccbc:	cmp	x20, x0
  40ccc0:	b.cc	40ccd8 <__fxstatat@plt+0xa288>  // b.lo, b.ul, b.last
  40ccc4:	b	40cd0c <__fxstatat@plt+0xa2bc>
  40ccc8:	add	x20, x20, #0x10
  40cccc:	ldr	x0, [x21, #8]
  40ccd0:	cmp	x0, x20
  40ccd4:	b.ls	40ccfc <__fxstatat@plt+0xa2ac>  // b.plast
  40ccd8:	ldr	x0, [x20]
  40ccdc:	cbz	x0, 40ccc8 <__fxstatat@plt+0xa278>
  40cce0:	mov	x19, x20
  40cce4:	ldr	x1, [x21, #64]
  40cce8:	ldr	x0, [x19]
  40ccec:	blr	x1
  40ccf0:	ldr	x19, [x19, #8]
  40ccf4:	cbnz	x19, 40cce4 <__fxstatat@plt+0xa294>
  40ccf8:	b	40ccc8 <__fxstatat@plt+0xa278>
  40ccfc:	ldr	x20, [x21]
  40cd00:	ldr	x0, [x21, #8]
  40cd04:	cmp	x20, x0
  40cd08:	b.cc	40cd54 <__fxstatat@plt+0xa304>  // b.lo, b.ul, b.last
  40cd0c:	ldr	x19, [x21, #72]
  40cd10:	cbz	x19, 40cd24 <__fxstatat@plt+0xa2d4>
  40cd14:	mov	x0, x19
  40cd18:	ldr	x19, [x19, #8]
  40cd1c:	bl	402840 <free@plt>
  40cd20:	cbnz	x19, 40cd14 <__fxstatat@plt+0xa2c4>
  40cd24:	ldr	x0, [x21]
  40cd28:	bl	402840 <free@plt>
  40cd2c:	mov	x0, x21
  40cd30:	bl	402840 <free@plt>
  40cd34:	ldp	x19, x20, [sp, #16]
  40cd38:	ldr	x21, [sp, #32]
  40cd3c:	ldp	x29, x30, [sp], #48
  40cd40:	ret
  40cd44:	add	x20, x20, #0x10
  40cd48:	ldr	x0, [x21, #8]
  40cd4c:	cmp	x0, x20
  40cd50:	b.ls	40cd0c <__fxstatat@plt+0xa2bc>  // b.plast
  40cd54:	ldr	x19, [x20, #8]
  40cd58:	cbz	x19, 40cd44 <__fxstatat@plt+0xa2f4>
  40cd5c:	mov	x0, x19
  40cd60:	ldr	x19, [x19, #8]
  40cd64:	bl	402840 <free@plt>
  40cd68:	cbnz	x19, 40cd5c <__fxstatat@plt+0xa30c>
  40cd6c:	b	40cd44 <__fxstatat@plt+0xa2f4>
  40cd70:	stp	x29, x30, [sp, #-128]!
  40cd74:	mov	x29, sp
  40cd78:	stp	x19, x20, [sp, #16]
  40cd7c:	str	x21, [sp, #32]
  40cd80:	mov	x19, x0
  40cd84:	mov	x0, x1
  40cd88:	ldr	x21, [x19, #40]
  40cd8c:	mov	x1, x21
  40cd90:	bl	40c350 <__fxstatat@plt+0x9900>
  40cd94:	cbz	x0, 40ce88 <__fxstatat@plt+0xa438>
  40cd98:	mov	x20, x0
  40cd9c:	ldr	x0, [x19, #16]
  40cda0:	cmp	x0, x20
  40cda4:	b.eq	40cea0 <__fxstatat@plt+0xa450>  // b.none
  40cda8:	mov	x1, #0x10                  	// #16
  40cdac:	mov	x0, x20
  40cdb0:	bl	4026c0 <calloc@plt>
  40cdb4:	str	x0, [sp, #48]
  40cdb8:	cbz	x0, 40cea8 <__fxstatat@plt+0xa458>
  40cdbc:	str	x20, [sp, #64]
  40cdc0:	add	x20, x0, x20, lsl #4
  40cdc4:	str	x20, [sp, #56]
  40cdc8:	str	xzr, [sp, #72]
  40cdcc:	str	xzr, [sp, #80]
  40cdd0:	str	x21, [sp, #88]
  40cdd4:	ldr	x0, [x19, #48]
  40cdd8:	str	x0, [sp, #96]
  40cddc:	ldr	x0, [x19, #56]
  40cde0:	str	x0, [sp, #104]
  40cde4:	ldr	x0, [x19, #64]
  40cde8:	str	x0, [sp, #112]
  40cdec:	ldr	x0, [x19, #72]
  40cdf0:	str	x0, [sp, #120]
  40cdf4:	mov	w2, #0x0                   	// #0
  40cdf8:	mov	x1, x19
  40cdfc:	add	x0, sp, #0x30
  40ce00:	bl	40c474 <__fxstatat@plt+0x9a24>
  40ce04:	ands	w20, w0, #0xff
  40ce08:	b.ne	40ce50 <__fxstatat@plt+0xa400>  // b.any
  40ce0c:	ldr	x0, [sp, #120]
  40ce10:	str	x0, [x19, #72]
  40ce14:	mov	w2, #0x1                   	// #1
  40ce18:	add	x1, sp, #0x30
  40ce1c:	mov	x0, x19
  40ce20:	bl	40c474 <__fxstatat@plt+0x9a24>
  40ce24:	and	w0, w0, #0xff
  40ce28:	cbz	w0, 40ce84 <__fxstatat@plt+0xa434>
  40ce2c:	mov	w2, #0x0                   	// #0
  40ce30:	add	x1, sp, #0x30
  40ce34:	mov	x0, x19
  40ce38:	bl	40c474 <__fxstatat@plt+0x9a24>
  40ce3c:	and	w0, w0, #0xff
  40ce40:	cbz	w0, 40ce84 <__fxstatat@plt+0xa434>
  40ce44:	ldr	x0, [sp, #48]
  40ce48:	bl	402840 <free@plt>
  40ce4c:	b	40ce8c <__fxstatat@plt+0xa43c>
  40ce50:	ldr	x0, [x19]
  40ce54:	bl	402840 <free@plt>
  40ce58:	ldr	x0, [sp, #48]
  40ce5c:	str	x0, [x19]
  40ce60:	ldr	x0, [sp, #56]
  40ce64:	str	x0, [x19, #8]
  40ce68:	ldr	x0, [sp, #64]
  40ce6c:	str	x0, [x19, #16]
  40ce70:	ldr	x0, [sp, #72]
  40ce74:	str	x0, [x19, #24]
  40ce78:	ldr	x0, [sp, #120]
  40ce7c:	str	x0, [x19, #72]
  40ce80:	b	40ce8c <__fxstatat@plt+0xa43c>
  40ce84:	bl	402760 <abort@plt>
  40ce88:	mov	w20, #0x0                   	// #0
  40ce8c:	mov	w0, w20
  40ce90:	ldp	x19, x20, [sp, #16]
  40ce94:	ldr	x21, [sp, #32]
  40ce98:	ldp	x29, x30, [sp], #128
  40ce9c:	ret
  40cea0:	mov	w20, #0x1                   	// #1
  40cea4:	b	40ce8c <__fxstatat@plt+0xa43c>
  40cea8:	mov	w20, #0x0                   	// #0
  40ceac:	b	40ce8c <__fxstatat@plt+0xa43c>
  40ceb0:	stp	x29, x30, [sp, #-64]!
  40ceb4:	mov	x29, sp
  40ceb8:	stp	x19, x20, [sp, #16]
  40cebc:	str	x21, [sp, #32]
  40cec0:	cbz	x1, 40cf00 <__fxstatat@plt+0xa4b0>
  40cec4:	mov	x19, x0
  40cec8:	mov	x20, x1
  40cecc:	mov	x21, x2
  40ced0:	mov	w3, #0x0                   	// #0
  40ced4:	add	x2, sp, #0x38
  40ced8:	bl	40c5d0 <__fxstatat@plt+0x9b80>
  40cedc:	mov	x1, x0
  40cee0:	cbz	x0, 40cf04 <__fxstatat@plt+0xa4b4>
  40cee4:	mov	w0, #0x0                   	// #0
  40cee8:	cbz	x21, 40cef0 <__fxstatat@plt+0xa4a0>
  40ceec:	str	x1, [x21]
  40cef0:	ldp	x19, x20, [sp, #16]
  40cef4:	ldr	x21, [sp, #32]
  40cef8:	ldp	x29, x30, [sp], #64
  40cefc:	ret
  40cf00:	bl	402760 <abort@plt>
  40cf04:	ldr	x0, [x19, #24]
  40cf08:	ucvtf	s1, x0
  40cf0c:	ldr	x1, [x19, #40]
  40cf10:	ldr	x0, [x19, #16]
  40cf14:	ucvtf	s0, x0
  40cf18:	ldr	s2, [x1, #8]
  40cf1c:	fmul	s0, s0, s2
  40cf20:	fcmpe	s1, s0
  40cf24:	b.gt	40cf6c <__fxstatat@plt+0xa51c>
  40cf28:	ldr	x0, [sp, #56]
  40cf2c:	ldr	x1, [x0]
  40cf30:	cbz	x1, 40d018 <__fxstatat@plt+0xa5c8>
  40cf34:	ldr	x1, [x19, #72]
  40cf38:	cbz	x1, 40d000 <__fxstatat@plt+0xa5b0>
  40cf3c:	ldr	x0, [x1, #8]
  40cf40:	str	x0, [x19, #72]
  40cf44:	str	x20, [x1]
  40cf48:	ldr	x0, [sp, #56]
  40cf4c:	ldr	x2, [x0, #8]
  40cf50:	str	x2, [x1, #8]
  40cf54:	str	x1, [x0, #8]
  40cf58:	ldr	x0, [x19, #32]
  40cf5c:	add	x0, x0, #0x1
  40cf60:	str	x0, [x19, #32]
  40cf64:	mov	w0, #0x1                   	// #1
  40cf68:	b	40cef0 <__fxstatat@plt+0xa4a0>
  40cf6c:	mov	x0, x19
  40cf70:	bl	40c294 <__fxstatat@plt+0x9844>
  40cf74:	ldr	x1, [x19, #40]
  40cf78:	ldr	s2, [x1, #8]
  40cf7c:	ldr	x0, [x19, #16]
  40cf80:	ucvtf	s0, x0
  40cf84:	ldr	x0, [x19, #24]
  40cf88:	ucvtf	s1, x0
  40cf8c:	fmul	s3, s2, s0
  40cf90:	fcmpe	s1, s3
  40cf94:	b.le	40cf28 <__fxstatat@plt+0xa4d8>
  40cf98:	ldrb	w0, [x1, #16]
  40cf9c:	cbz	w0, 40cff0 <__fxstatat@plt+0xa5a0>
  40cfa0:	ldr	s1, [x1, #12]
  40cfa4:	fmul	s0, s0, s1
  40cfa8:	mov	w0, #0x5f800000            	// #1602224128
  40cfac:	fmov	s1, w0
  40cfb0:	mov	w0, #0xffffffff            	// #-1
  40cfb4:	fcmpe	s0, s1
  40cfb8:	b.ge	40cef0 <__fxstatat@plt+0xa4a0>  // b.tcont
  40cfbc:	fcvtzu	x1, s0
  40cfc0:	mov	x0, x19
  40cfc4:	bl	40cd70 <__fxstatat@plt+0xa320>
  40cfc8:	and	w1, w0, #0xff
  40cfcc:	mov	w0, #0xffffffff            	// #-1
  40cfd0:	cbz	w1, 40cef0 <__fxstatat@plt+0xa4a0>
  40cfd4:	mov	w3, #0x0                   	// #0
  40cfd8:	add	x2, sp, #0x38
  40cfdc:	mov	x1, x20
  40cfe0:	mov	x0, x19
  40cfe4:	bl	40c5d0 <__fxstatat@plt+0x9b80>
  40cfe8:	cbz	x0, 40cf28 <__fxstatat@plt+0xa4d8>
  40cfec:	bl	402760 <abort@plt>
  40cff0:	ldr	s1, [x1, #12]
  40cff4:	fmul	s0, s0, s1
  40cff8:	fmul	s0, s0, s2
  40cffc:	b	40cfa8 <__fxstatat@plt+0xa558>
  40d000:	mov	x0, #0x10                  	// #16
  40d004:	bl	4025f0 <malloc@plt>
  40d008:	mov	x1, x0
  40d00c:	mov	w0, #0xffffffff            	// #-1
  40d010:	cbz	x1, 40cef0 <__fxstatat@plt+0xa4a0>
  40d014:	b	40cf44 <__fxstatat@plt+0xa4f4>
  40d018:	str	x20, [x0]
  40d01c:	ldr	x0, [x19, #32]
  40d020:	add	x0, x0, #0x1
  40d024:	str	x0, [x19, #32]
  40d028:	ldr	x0, [x19, #24]
  40d02c:	add	x0, x0, #0x1
  40d030:	str	x0, [x19, #24]
  40d034:	mov	w0, #0x1                   	// #1
  40d038:	b	40cef0 <__fxstatat@plt+0xa4a0>
  40d03c:	stp	x29, x30, [sp, #-48]!
  40d040:	mov	x29, sp
  40d044:	str	x19, [sp, #16]
  40d048:	mov	x19, x1
  40d04c:	add	x2, sp, #0x28
  40d050:	bl	40ceb0 <__fxstatat@plt+0xa460>
  40d054:	cmn	w0, #0x1
  40d058:	b.eq	40d074 <__fxstatat@plt+0xa624>  // b.none
  40d05c:	cmp	w0, #0x0
  40d060:	ldr	x0, [sp, #40]
  40d064:	csel	x0, x0, x19, eq  // eq = none
  40d068:	ldr	x19, [sp, #16]
  40d06c:	ldp	x29, x30, [sp], #48
  40d070:	ret
  40d074:	mov	x0, #0x0                   	// #0
  40d078:	b	40d068 <__fxstatat@plt+0xa618>
  40d07c:	stp	x29, x30, [sp, #-64]!
  40d080:	mov	x29, sp
  40d084:	stp	x19, x20, [sp, #16]
  40d088:	mov	x19, x0
  40d08c:	mov	w3, #0x1                   	// #1
  40d090:	add	x2, sp, #0x38
  40d094:	bl	40c5d0 <__fxstatat@plt+0x9b80>
  40d098:	mov	x20, x0
  40d09c:	cbz	x0, 40d0b8 <__fxstatat@plt+0xa668>
  40d0a0:	ldr	x0, [x19, #32]
  40d0a4:	sub	x0, x0, #0x1
  40d0a8:	str	x0, [x19, #32]
  40d0ac:	ldr	x0, [sp, #56]
  40d0b0:	ldr	x0, [x0]
  40d0b4:	cbz	x0, 40d0c8 <__fxstatat@plt+0xa678>
  40d0b8:	mov	x0, x20
  40d0bc:	ldp	x19, x20, [sp, #16]
  40d0c0:	ldp	x29, x30, [sp], #64
  40d0c4:	ret
  40d0c8:	ldr	x0, [x19, #24]
  40d0cc:	sub	x0, x0, #0x1
  40d0d0:	str	x0, [x19, #24]
  40d0d4:	ucvtf	s0, x0
  40d0d8:	ldr	x1, [x19, #40]
  40d0dc:	ldr	x0, [x19, #16]
  40d0e0:	ucvtf	s1, x0
  40d0e4:	ldr	s2, [x1]
  40d0e8:	fmul	s1, s1, s2
  40d0ec:	fcmpe	s0, s1
  40d0f0:	b.pl	40d0b8 <__fxstatat@plt+0xa668>  // b.nfrst
  40d0f4:	mov	x0, x19
  40d0f8:	bl	40c294 <__fxstatat@plt+0x9844>
  40d0fc:	ldr	x1, [x19, #40]
  40d100:	ldr	x0, [x19, #16]
  40d104:	ucvtf	s0, x0
  40d108:	ldr	x0, [x19, #24]
  40d10c:	ucvtf	s2, x0
  40d110:	ldr	s1, [x1]
  40d114:	fmul	s1, s0, s1
  40d118:	fcmpe	s2, s1
  40d11c:	b.pl	40d0b8 <__fxstatat@plt+0xa668>  // b.nfrst
  40d120:	ldrb	w0, [x1, #16]
  40d124:	cbz	w0, 40d16c <__fxstatat@plt+0xa71c>
  40d128:	ldr	s1, [x1, #4]
  40d12c:	fmul	s0, s0, s1
  40d130:	fcvtzu	x1, s0
  40d134:	mov	x0, x19
  40d138:	bl	40cd70 <__fxstatat@plt+0xa320>
  40d13c:	and	w0, w0, #0xff
  40d140:	cbnz	w0, 40d0b8 <__fxstatat@plt+0xa668>
  40d144:	str	x21, [sp, #32]
  40d148:	ldr	x21, [x19, #72]
  40d14c:	cbz	x21, 40d160 <__fxstatat@plt+0xa710>
  40d150:	mov	x0, x21
  40d154:	ldr	x21, [x21, #8]
  40d158:	bl	402840 <free@plt>
  40d15c:	cbnz	x21, 40d150 <__fxstatat@plt+0xa700>
  40d160:	str	xzr, [x19, #72]
  40d164:	ldr	x21, [sp, #32]
  40d168:	b	40d0b8 <__fxstatat@plt+0xa668>
  40d16c:	ldr	s1, [x1, #4]
  40d170:	fmul	s0, s0, s1
  40d174:	ldr	s1, [x1, #8]
  40d178:	fmul	s0, s0, s1
  40d17c:	fcvtzu	x1, s0
  40d180:	b	40d134 <__fxstatat@plt+0xa6e4>
  40d184:	stp	x29, x30, [sp, #-32]!
  40d188:	mov	x29, sp
  40d18c:	stp	x19, x20, [sp, #16]
  40d190:	mov	x20, x0
  40d194:	mov	x19, x1
  40d198:	ldr	x0, [x0]
  40d19c:	bl	413bb0 <_obstack_memory_used@@Base+0x6a4>
  40d1a0:	ldr	x1, [x20, #8]
  40d1a4:	eor	x0, x0, x1
  40d1a8:	udiv	x1, x0, x19
  40d1ac:	msub	x0, x1, x19, x0
  40d1b0:	ldp	x19, x20, [sp, #16]
  40d1b4:	ldp	x29, x30, [sp], #32
  40d1b8:	ret
  40d1bc:	ldr	x0, [x0, #8]
  40d1c0:	udiv	x2, x0, x1
  40d1c4:	msub	x0, x2, x1, x0
  40d1c8:	ret
  40d1cc:	ldr	x3, [x0, #8]
  40d1d0:	ldr	x2, [x1, #8]
  40d1d4:	cmp	x3, x2
  40d1d8:	b.eq	40d1e8 <__fxstatat@plt+0xa798>  // b.none
  40d1dc:	mov	w2, #0x0                   	// #0
  40d1e0:	and	w0, w2, #0x1
  40d1e4:	ret
  40d1e8:	ldr	x4, [x0, #16]
  40d1ec:	ldr	x3, [x1, #16]
  40d1f0:	mov	w2, #0x0                   	// #0
  40d1f4:	cmp	x4, x3
  40d1f8:	b.ne	40d1e0 <__fxstatat@plt+0xa790>  // b.any
  40d1fc:	stp	x29, x30, [sp, #-16]!
  40d200:	mov	x29, sp
  40d204:	ldr	x1, [x1]
  40d208:	ldr	x0, [x0]
  40d20c:	bl	411d6c <__fxstatat@plt+0xf31c>
  40d210:	and	w2, w0, #0xff
  40d214:	and	w0, w2, #0x1
  40d218:	ldp	x29, x30, [sp], #16
  40d21c:	ret
  40d220:	mov	x2, x0
  40d224:	ldr	x3, [x0, #8]
  40d228:	ldr	x0, [x1, #8]
  40d22c:	cmp	x3, x0
  40d230:	b.eq	40d23c <__fxstatat@plt+0xa7ec>  // b.none
  40d234:	mov	w0, #0x0                   	// #0
  40d238:	ret
  40d23c:	ldr	x4, [x2, #16]
  40d240:	ldr	x3, [x1, #16]
  40d244:	mov	w0, #0x0                   	// #0
  40d248:	cmp	x4, x3
  40d24c:	b.eq	40d254 <__fxstatat@plt+0xa804>  // b.none
  40d250:	ret
  40d254:	stp	x29, x30, [sp, #-16]!
  40d258:	mov	x29, sp
  40d25c:	ldr	x1, [x1]
  40d260:	ldr	x0, [x2]
  40d264:	bl	402800 <strcmp@plt>
  40d268:	cmp	w0, #0x0
  40d26c:	cset	w0, eq  // eq = none
  40d270:	ldp	x29, x30, [sp], #16
  40d274:	ret
  40d278:	stp	x29, x30, [sp, #-32]!
  40d27c:	mov	x29, sp
  40d280:	str	x19, [sp, #16]
  40d284:	mov	x19, x0
  40d288:	ldr	x0, [x0]
  40d28c:	bl	402840 <free@plt>
  40d290:	mov	x0, x19
  40d294:	bl	402840 <free@plt>
  40d298:	ldr	x19, [sp, #16]
  40d29c:	ldp	x29, x30, [sp], #32
  40d2a0:	ret
  40d2a4:	stp	x29, x30, [sp, #-48]!
  40d2a8:	mov	x29, sp
  40d2ac:	str	q0, [sp, #32]
  40d2b0:	cmp	w0, #0x1
  40d2b4:	b.eq	40d318 <__fxstatat@plt+0xa8c8>  // b.none
  40d2b8:	stp	x19, x20, [sp, #16]
  40d2bc:	mov	w19, w0
  40d2c0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d2c4:	add	x0, x0, #0xd70
  40d2c8:	ldr	q1, [x0]
  40d2cc:	bl	41478c <_obstack_memory_used@@Base+0x1280>
  40d2d0:	tbz	w0, #31, 40d314 <__fxstatat@plt+0xa8c4>
  40d2d4:	ldr	q0, [sp, #32]
  40d2d8:	bl	4150b8 <_obstack_memory_used@@Base+0x1bac>
  40d2dc:	mov	x20, x0
  40d2e0:	mov	w0, #0x0                   	// #0
  40d2e4:	cbnz	w19, 40d300 <__fxstatat@plt+0xa8b0>
  40d2e8:	mov	x0, x20
  40d2ec:	bl	4151c4 <_obstack_memory_used@@Base+0x1cb8>
  40d2f0:	ldr	q1, [sp, #32]
  40d2f4:	bl	414668 <_obstack_memory_used@@Base+0x115c>
  40d2f8:	cmp	w0, #0x0
  40d2fc:	cset	w0, ne  // ne = any
  40d300:	add	x0, x20, w0, sxtw
  40d304:	bl	4151c4 <_obstack_memory_used@@Base+0x1cb8>
  40d308:	str	q0, [sp, #32]
  40d30c:	ldp	x19, x20, [sp, #16]
  40d310:	b	40d318 <__fxstatat@plt+0xa8c8>
  40d314:	ldp	x19, x20, [sp, #16]
  40d318:	ldr	q0, [sp, #32]
  40d31c:	ldp	x29, x30, [sp], #48
  40d320:	ret
  40d324:	stp	x29, x30, [sp, #-224]!
  40d328:	mov	x29, sp
  40d32c:	stp	x19, x20, [sp, #16]
  40d330:	stp	x21, x22, [sp, #32]
  40d334:	stp	x23, x24, [sp, #48]
  40d338:	stp	x25, x26, [sp, #64]
  40d33c:	stp	x27, x28, [sp, #80]
  40d340:	mov	x23, x0
  40d344:	str	x1, [sp, #144]
  40d348:	mov	w24, w2
  40d34c:	mov	x21, x3
  40d350:	mov	x26, x4
  40d354:	and	w0, w2, #0x3
  40d358:	str	w0, [sp, #168]
  40d35c:	ands	w0, w2, #0x20
  40d360:	str	w0, [sp, #172]
  40d364:	mov	w25, #0x400                 	// #1024
  40d368:	mov	w0, #0x3e8                 	// #1000
  40d36c:	csel	w25, w25, w0, ne  // ne = any
  40d370:	bl	402580 <localeconv@plt>
  40d374:	mov	x19, x0
  40d378:	ldr	x20, [x0]
  40d37c:	mov	x0, x20
  40d380:	bl	402430 <strlen@plt>
  40d384:	str	x0, [sp, #160]
  40d388:	sub	x0, x0, #0x1
  40d38c:	cmp	x0, #0xf
  40d390:	b.ls	40d3a4 <__fxstatat@plt+0xa954>  // b.plast
  40d394:	mov	x0, #0x1                   	// #1
  40d398:	str	x0, [sp, #160]
  40d39c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40d3a0:	add	x20, x0, #0x8a0
  40d3a4:	ldr	x28, [x19, #16]
  40d3a8:	ldr	x27, [x19, #8]
  40d3ac:	mov	x0, x27
  40d3b0:	bl	402430 <strlen@plt>
  40d3b4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2af4>
  40d3b8:	add	x1, x1, #0x1f0
  40d3bc:	cmp	x0, #0x10
  40d3c0:	csel	x27, x1, x27, hi  // hi = pmore
  40d3c4:	ldr	x0, [sp, #144]
  40d3c8:	add	x0, x0, #0x287
  40d3cc:	str	x0, [sp, #152]
  40d3d0:	cmp	x26, x21
  40d3d4:	b.hi	40d56c <__fxstatat@plt+0xab1c>  // b.pmore
  40d3d8:	udiv	x0, x21, x26
  40d3dc:	msub	x0, x0, x26, x21
  40d3e0:	cbnz	x0, 40d3f8 <__fxstatat@plt+0xa9a8>
  40d3e4:	udiv	x0, x21, x26
  40d3e8:	mul	x19, x23, x0
  40d3ec:	udiv	x0, x19, x0
  40d3f0:	cmp	x0, x23
  40d3f4:	b.eq	40d65c <__fxstatat@plt+0xac0c>  // b.none
  40d3f8:	mov	x0, x21
  40d3fc:	bl	4151c4 <_obstack_memory_used@@Base+0x1cb8>
  40d400:	str	q0, [sp, #96]
  40d404:	mov	x0, x26
  40d408:	bl	4151c4 <_obstack_memory_used@@Base+0x1cb8>
  40d40c:	mov	v1.16b, v0.16b
  40d410:	ldr	q0, [sp, #96]
  40d414:	bl	413db4 <_obstack_memory_used@@Base+0x8a8>
  40d418:	str	q0, [sp, #96]
  40d41c:	mov	x0, x23
  40d420:	bl	4151c4 <_obstack_memory_used@@Base+0x1cb8>
  40d424:	mov	v1.16b, v0.16b
  40d428:	ldr	q0, [sp, #96]
  40d42c:	bl	414914 <_obstack_memory_used@@Base+0x1408>
  40d430:	str	q0, [sp, #128]
  40d434:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d438:	add	x0, x0, #0xd80
  40d43c:	ldr	q0, [x0]
  40d440:	str	q0, [sp, #96]
  40d444:	mov	w23, #0x0                   	// #0
  40d448:	tbz	w24, #4, 40d5c0 <__fxstatat@plt+0xab70>
  40d44c:	mov	w0, w25
  40d450:	bl	415068 <_obstack_memory_used@@Base+0x1b5c>
  40d454:	str	q0, [sp, #112]
  40d458:	mov	v1.16b, v0.16b
  40d45c:	ldr	q0, [sp, #96]
  40d460:	bl	414914 <_obstack_memory_used@@Base+0x1408>
  40d464:	str	q0, [sp, #96]
  40d468:	add	w23, w23, #0x1
  40d46c:	mov	v1.16b, v0.16b
  40d470:	ldr	q0, [sp, #112]
  40d474:	bl	414914 <_obstack_memory_used@@Base+0x1408>
  40d478:	ldr	q1, [sp, #128]
  40d47c:	bl	41478c <_obstack_memory_used@@Base+0x1280>
  40d480:	cmp	w0, #0x0
  40d484:	cset	w0, le
  40d488:	cmp	w23, #0x7
  40d48c:	cset	w1, le
  40d490:	tst	w1, w0
  40d494:	b.ne	40d44c <__fxstatat@plt+0xa9fc>  // b.any
  40d498:	ldr	q1, [sp, #96]
  40d49c:	ldr	q0, [sp, #128]
  40d4a0:	bl	413db4 <_obstack_memory_used@@Base+0x8a8>
  40d4a4:	str	q0, [sp, #96]
  40d4a8:	ldr	w0, [sp, #168]
  40d4ac:	bl	40d2a4 <__fxstatat@plt+0xa854>
  40d4b0:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d4b4:	add	x3, x3, #0xd28
  40d4b8:	mov	x2, #0xffffffffffffffff    	// #-1
  40d4bc:	mov	w1, #0x1                   	// #1
  40d4c0:	ldr	x20, [sp, #144]
  40d4c4:	mov	x0, x20
  40d4c8:	bl	402440 <__sprintf_chk@plt>
  40d4cc:	mov	x0, x20
  40d4d0:	bl	402430 <strlen@plt>
  40d4d4:	mov	x22, x0
  40d4d8:	ldr	x0, [sp, #160]
  40d4dc:	add	x19, x0, #0x1
  40d4e0:	ldr	w0, [sp, #172]
  40d4e4:	cmp	w0, #0x0
  40d4e8:	cset	x0, eq  // eq = none
  40d4ec:	add	x0, x0, #0x1
  40d4f0:	add	x0, x0, x19
  40d4f4:	cmp	x0, x22
  40d4f8:	b.cc	40d510 <__fxstatat@plt+0xaac0>  // b.lo, b.ul, b.last
  40d4fc:	tbz	w24, #3, 40d5fc <__fxstatat@plt+0xabac>
  40d500:	add	x0, x20, x22
  40d504:	ldurb	w0, [x0, #-1]
  40d508:	cmp	w0, #0x30
  40d50c:	b.ne	40d5fc <__fxstatat@plt+0xabac>  // b.any
  40d510:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d514:	add	x0, x0, #0xd90
  40d518:	ldr	q1, [x0]
  40d51c:	ldr	q0, [sp, #96]
  40d520:	bl	414914 <_obstack_memory_used@@Base+0x1408>
  40d524:	ldr	w0, [sp, #168]
  40d528:	bl	40d2a4 <__fxstatat@plt+0xa854>
  40d52c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d530:	add	x0, x0, #0xd90
  40d534:	ldr	q1, [x0]
  40d538:	bl	413db4 <_obstack_memory_used@@Base+0x8a8>
  40d53c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d540:	add	x3, x3, #0xd20
  40d544:	mov	x2, #0xffffffffffffffff    	// #-1
  40d548:	mov	w1, #0x1                   	// #1
  40d54c:	ldr	x19, [sp, #144]
  40d550:	mov	x0, x19
  40d554:	bl	402440 <__sprintf_chk@plt>
  40d558:	mov	x0, x19
  40d55c:	bl	402430 <strlen@plt>
  40d560:	mov	x22, x0
  40d564:	mov	x19, #0x0                   	// #0
  40d568:	b	40d5fc <__fxstatat@plt+0xabac>
  40d56c:	cbz	x21, 40d3f8 <__fxstatat@plt+0xa9a8>
  40d570:	udiv	x0, x26, x21
  40d574:	msub	x0, x0, x21, x26
  40d578:	cbnz	x0, 40d3f8 <__fxstatat@plt+0xa9a8>
  40d57c:	udiv	x21, x26, x21
  40d580:	udiv	x19, x23, x21
  40d584:	msub	x0, x19, x21, x23
  40d588:	add	x0, x0, x0, lsl #2
  40d58c:	lsl	x0, x0, #1
  40d590:	udiv	x1, x0, x21
  40d594:	msub	x0, x1, x21, x0
  40d598:	lsl	x2, x0, #1
  40d59c:	cmp	x21, x0, lsl #1
  40d5a0:	b.ls	40d5b0 <__fxstatat@plt+0xab60>  // b.plast
  40d5a4:	cmp	x2, #0x0
  40d5a8:	cset	w2, ne  // ne = any
  40d5ac:	b	40d664 <__fxstatat@plt+0xac14>
  40d5b0:	cmp	x21, x2
  40d5b4:	cset	w2, cc  // cc = lo, ul, last
  40d5b8:	add	w2, w2, #0x2
  40d5bc:	b	40d664 <__fxstatat@plt+0xac14>
  40d5c0:	ldr	q0, [sp, #128]
  40d5c4:	ldr	w0, [sp, #168]
  40d5c8:	bl	40d2a4 <__fxstatat@plt+0xa854>
  40d5cc:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d5d0:	add	x3, x3, #0xd20
  40d5d4:	mov	x2, #0xffffffffffffffff    	// #-1
  40d5d8:	mov	w1, #0x1                   	// #1
  40d5dc:	ldr	x19, [sp, #144]
  40d5e0:	mov	x0, x19
  40d5e4:	bl	402440 <__sprintf_chk@plt>
  40d5e8:	mov	x0, x19
  40d5ec:	bl	402430 <strlen@plt>
  40d5f0:	mov	x22, x0
  40d5f4:	mov	x19, #0x0                   	// #0
  40d5f8:	mov	w23, #0xffffffff            	// #-1
  40d5fc:	ldr	x0, [sp, #152]
  40d600:	sub	x21, x0, x22
  40d604:	mov	x2, x22
  40d608:	ldr	x1, [sp, #144]
  40d60c:	mov	x0, x21
  40d610:	bl	4023d0 <memmove@plt>
  40d614:	sub	x22, x22, x19
  40d618:	add	x22, x21, x22
  40d61c:	tbnz	w24, #2, 40d864 <__fxstatat@plt+0xae14>
  40d620:	tbz	w24, #7, 40d634 <__fxstatat@plt+0xabe4>
  40d624:	tbnz	w23, #31, 40d8e8 <__fxstatat@plt+0xae98>
  40d628:	and	w0, w24, #0x100
  40d62c:	orr	w1, w0, w23
  40d630:	cbnz	w1, 40d92c <__fxstatat@plt+0xaedc>
  40d634:	ldr	x0, [sp, #152]
  40d638:	strb	wzr, [x0]
  40d63c:	mov	x0, x21
  40d640:	ldp	x19, x20, [sp, #16]
  40d644:	ldp	x21, x22, [sp, #32]
  40d648:	ldp	x23, x24, [sp, #48]
  40d64c:	ldp	x25, x26, [sp, #64]
  40d650:	ldp	x27, x28, [sp, #80]
  40d654:	ldp	x29, x30, [sp], #224
  40d658:	ret
  40d65c:	mov	w2, #0x0                   	// #0
  40d660:	mov	w1, #0x0                   	// #0
  40d664:	and	w21, w24, #0x10
  40d668:	tbz	w24, #4, 40d784 <__fxstatat@plt+0xad34>
  40d66c:	mov	w4, w25
  40d670:	cmp	x19, w25, uxtw
  40d674:	b.cc	40d7b4 <__fxstatat@plt+0xad64>  // b.lo, b.ul, b.last
  40d678:	mov	w23, #0x0                   	// #0
  40d67c:	b	40d6a0 <__fxstatat@plt+0xac50>
  40d680:	add	w0, w2, w0
  40d684:	cmp	w0, w25
  40d688:	cset	w2, hi  // hi = pmore
  40d68c:	add	w2, w2, #0x2
  40d690:	add	w23, w23, #0x1
  40d694:	cmp	x4, x3
  40d698:	ccmp	w23, #0x7, #0x0, ls  // ls = plast
  40d69c:	b.gt	40d6d8 <__fxstatat@plt+0xac88>
  40d6a0:	udiv	x3, x19, x4
  40d6a4:	msub	x19, x3, x4, x19
  40d6a8:	add	w19, w19, w19, lsl #2
  40d6ac:	add	w19, w1, w19, lsl #1
  40d6b0:	udiv	w1, w19, w25
  40d6b4:	msub	w0, w1, w25, w19
  40d6b8:	asr	w19, w2, #1
  40d6bc:	add	w0, w19, w0, lsl #1
  40d6c0:	mov	x19, x3
  40d6c4:	cmp	w25, w0
  40d6c8:	b.ls	40d680 <__fxstatat@plt+0xac30>  // b.plast
  40d6cc:	cmn	w2, w0
  40d6d0:	cset	w2, ne  // ne = any
  40d6d4:	b	40d690 <__fxstatat@plt+0xac40>
  40d6d8:	ldr	x22, [sp, #152]
  40d6dc:	cmp	x19, #0x9
  40d6e0:	b.hi	40d78c <__fxstatat@plt+0xad3c>  // b.pmore
  40d6e4:	ldr	w0, [sp, #168]
  40d6e8:	cmp	w0, #0x1
  40d6ec:	b.eq	40d748 <__fxstatat@plt+0xacf8>  // b.none
  40d6f0:	ldr	w0, [sp, #168]
  40d6f4:	cmp	w0, #0x0
  40d6f8:	cset	w0, eq  // eq = none
  40d6fc:	cmp	w2, #0x0
  40d700:	cset	w3, gt
  40d704:	and	w0, w0, w3
  40d708:	cbz	w0, 40d9ac <__fxstatat@plt+0xaf5c>
  40d70c:	add	w1, w1, #0x1
  40d710:	cmp	w1, #0xa
  40d714:	b.eq	40d75c <__fxstatat@plt+0xad0c>  // b.none
  40d718:	ldr	x0, [sp, #144]
  40d71c:	add	x22, x0, #0x286
  40d720:	add	w1, w1, #0x30
  40d724:	strb	w1, [x0, #646]
  40d728:	ldr	x2, [sp, #160]
  40d72c:	sub	x22, x22, x2
  40d730:	mov	x1, x20
  40d734:	mov	x0, x22
  40d738:	bl	4023c0 <memcpy@plt>
  40d73c:	mov	w2, #0x0                   	// #0
  40d740:	mov	w1, #0x0                   	// #0
  40d744:	b	40d78c <__fxstatat@plt+0xad3c>
  40d748:	and	w0, w1, #0x1
  40d74c:	add	w0, w0, w2
  40d750:	cmp	w0, #0x2
  40d754:	cset	w0, gt
  40d758:	b	40d708 <__fxstatat@plt+0xacb8>
  40d75c:	add	x19, x19, #0x1
  40d760:	cmp	x19, #0x9
  40d764:	b.ls	40d778 <__fxstatat@plt+0xad28>  // b.plast
  40d768:	ldr	x22, [sp, #152]
  40d76c:	mov	w2, #0x0                   	// #0
  40d770:	mov	w1, #0x0                   	// #0
  40d774:	b	40d78c <__fxstatat@plt+0xad3c>
  40d778:	mov	w2, #0x0                   	// #0
  40d77c:	mov	w1, #0x0                   	// #0
  40d780:	b	40d9b0 <__fxstatat@plt+0xaf60>
  40d784:	ldr	x22, [sp, #152]
  40d788:	mov	w23, #0xffffffff            	// #-1
  40d78c:	ldr	w0, [sp, #168]
  40d790:	cmp	w0, #0x1
  40d794:	b.eq	40d7c0 <__fxstatat@plt+0xad70>  // b.none
  40d798:	mov	w0, #0x0                   	// #0
  40d79c:	ldr	w3, [sp, #168]
  40d7a0:	cbnz	w3, 40d7d8 <__fxstatat@plt+0xad88>
  40d7a4:	add	w1, w1, w2
  40d7a8:	cmp	w1, #0x0
  40d7ac:	cset	w0, gt
  40d7b0:	b	40d7d8 <__fxstatat@plt+0xad88>
  40d7b4:	ldr	x22, [sp, #152]
  40d7b8:	mov	w23, #0x0                   	// #0
  40d7bc:	b	40d78c <__fxstatat@plt+0xad3c>
  40d7c0:	and	x0, x19, #0x1
  40d7c4:	add	x2, x0, w2, sxtw
  40d7c8:	cmp	x2, #0x0
  40d7cc:	cinc	w1, w1, ne  // ne = any
  40d7d0:	cmp	w1, #0x5
  40d7d4:	cset	w0, gt
  40d7d8:	cbz	w0, 40d7f0 <__fxstatat@plt+0xada0>
  40d7dc:	add	x19, x19, #0x1
  40d7e0:	cbz	w21, 40d7f0 <__fxstatat@plt+0xada0>
  40d7e4:	cmp	x19, w25, uxtw
  40d7e8:	ccmp	w23, #0x7, #0x0, eq  // eq = none
  40d7ec:	b.le	40d828 <__fxstatat@plt+0xadd8>
  40d7f0:	mov	x21, x22
  40d7f4:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  40d7f8:	movk	x2, #0xcccd
  40d7fc:	umulh	x0, x19, x2
  40d800:	lsr	x0, x0, #3
  40d804:	add	x1, x0, x0, lsl #2
  40d808:	sub	x1, x19, x1, lsl #1
  40d80c:	add	w1, w1, #0x30
  40d810:	strb	w1, [x21, #-1]!
  40d814:	mov	x1, x19
  40d818:	mov	x19, x0
  40d81c:	cmp	x1, #0x9
  40d820:	b.hi	40d7fc <__fxstatat@plt+0xadac>  // b.pmore
  40d824:	b	40d61c <__fxstatat@plt+0xabcc>
  40d828:	add	w23, w23, #0x1
  40d82c:	tbz	w24, #3, 40d840 <__fxstatat@plt+0xadf0>
  40d830:	sub	x21, x22, #0x1
  40d834:	mov	w0, #0x31                  	// #49
  40d838:	sturb	w0, [x22, #-1]
  40d83c:	b	40d61c <__fxstatat@plt+0xabcc>
  40d840:	mov	w0, #0x30                  	// #48
  40d844:	sturb	w0, [x22, #-1]
  40d848:	ldr	x2, [sp, #160]
  40d84c:	mvn	x0, x2
  40d850:	add	x22, x22, x0
  40d854:	mov	x1, x20
  40d858:	mov	x0, x22
  40d85c:	bl	4023c0 <memcpy@plt>
  40d860:	b	40d830 <__fxstatat@plt+0xade0>
  40d864:	sub	x20, x22, x21
  40d868:	mov	x0, x27
  40d86c:	bl	402430 <strlen@plt>
  40d870:	str	x0, [sp, #96]
  40d874:	mov	x3, #0x29                  	// #41
  40d878:	mov	x2, x20
  40d87c:	mov	x1, x21
  40d880:	add	x0, sp, #0xb0
  40d884:	bl	4025a0 <__memcpy_chk@plt>
  40d888:	mov	x19, #0xffffffffffffffff    	// #-1
  40d88c:	b	40d8cc <__fxstatat@plt+0xae7c>
  40d890:	cmp	x19, x20
  40d894:	csel	x19, x19, x20, ls  // ls = plast
  40d898:	sub	x21, x22, x19
  40d89c:	sub	x20, x20, x19
  40d8a0:	mov	x2, x19
  40d8a4:	add	x0, sp, #0xb0
  40d8a8:	add	x1, x0, x20
  40d8ac:	mov	x0, x21
  40d8b0:	bl	4023c0 <memcpy@plt>
  40d8b4:	cbz	x20, 40d620 <__fxstatat@plt+0xabd0>
  40d8b8:	ldr	x2, [sp, #96]
  40d8bc:	sub	x22, x21, x2
  40d8c0:	mov	x1, x27
  40d8c4:	mov	x0, x22
  40d8c8:	bl	4023c0 <memcpy@plt>
  40d8cc:	ldrb	w0, [x28]
  40d8d0:	cbz	w0, 40d890 <__fxstatat@plt+0xae40>
  40d8d4:	and	x19, x0, #0xff
  40d8d8:	cmp	w0, #0xff
  40d8dc:	csel	x19, x19, x20, ne  // ne = any
  40d8e0:	add	x28, x28, #0x1
  40d8e4:	b	40d890 <__fxstatat@plt+0xae40>
  40d8e8:	mov	w23, #0x1                   	// #1
  40d8ec:	mov	x0, #0x1                   	// #1
  40d8f0:	mov	w25, w25
  40d8f4:	cmp	x26, x0
  40d8f8:	b.ls	40d924 <__fxstatat@plt+0xaed4>  // b.plast
  40d8fc:	mul	x0, x0, x25
  40d900:	cmp	x26, x0
  40d904:	b.ls	40d628 <__fxstatat@plt+0xabd8>  // b.plast
  40d908:	add	w23, w23, #0x1
  40d90c:	cmp	w23, #0x8
  40d910:	b.ne	40d8fc <__fxstatat@plt+0xaeac>  // b.any
  40d914:	and	w0, w24, #0x100
  40d918:	tbnz	w24, #6, 40d934 <__fxstatat@plt+0xaee4>
  40d91c:	ldr	x1, [sp, #152]
  40d920:	b	40d948 <__fxstatat@plt+0xaef8>
  40d924:	mov	w23, #0x0                   	// #0
  40d928:	b	40d628 <__fxstatat@plt+0xabd8>
  40d92c:	ldr	x1, [sp, #152]
  40d930:	tbz	w24, #6, 40d944 <__fxstatat@plt+0xaef4>
  40d934:	ldr	x3, [sp, #144]
  40d938:	add	x1, x3, #0x288
  40d93c:	mov	w2, #0x20                  	// #32
  40d940:	strb	w2, [x3, #647]
  40d944:	cbz	w23, 40d990 <__fxstatat@plt+0xaf40>
  40d948:	ldr	w4, [sp, #172]
  40d94c:	cmp	w4, #0x0
  40d950:	ccmp	w23, #0x1, #0x0, eq  // eq = none
  40d954:	b.eq	40d9c0 <__fxstatat@plt+0xaf70>  // b.none
  40d958:	mov	x3, x1
  40d95c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5af4>
  40d960:	add	x2, x2, #0xda0
  40d964:	ldrb	w2, [x2, w23, sxtw]
  40d968:	strb	w2, [x3], #1
  40d96c:	str	x3, [sp, #152]
  40d970:	cbz	w0, 40d634 <__fxstatat@plt+0xabe4>
  40d974:	cbz	w4, 40d988 <__fxstatat@plt+0xaf38>
  40d978:	mov	w0, #0x69                  	// #105
  40d97c:	strb	w0, [x1, #1]
  40d980:	add	x1, x1, #0x2
  40d984:	b	40d994 <__fxstatat@plt+0xaf44>
  40d988:	ldr	x1, [sp, #152]
  40d98c:	b	40d994 <__fxstatat@plt+0xaf44>
  40d990:	cbz	w0, 40d9a4 <__fxstatat@plt+0xaf54>
  40d994:	mov	w0, #0x42                  	// #66
  40d998:	strb	w0, [x1], #1
  40d99c:	str	x1, [sp, #152]
  40d9a0:	b	40d634 <__fxstatat@plt+0xabe4>
  40d9a4:	str	x1, [sp, #152]
  40d9a8:	b	40d634 <__fxstatat@plt+0xabe4>
  40d9ac:	cbnz	w1, 40d718 <__fxstatat@plt+0xacc8>
  40d9b0:	tbz	w24, #3, 40d718 <__fxstatat@plt+0xacc8>
  40d9b4:	ldr	x22, [sp, #152]
  40d9b8:	mov	w1, #0x0                   	// #0
  40d9bc:	b	40d78c <__fxstatat@plt+0xad3c>
  40d9c0:	mov	x2, x1
  40d9c4:	mov	w1, #0x6b                  	// #107
  40d9c8:	strb	w1, [x2], #1
  40d9cc:	mov	x1, x2
  40d9d0:	str	x2, [sp, #152]
  40d9d4:	cbnz	w0, 40d994 <__fxstatat@plt+0xaf44>
  40d9d8:	b	40d634 <__fxstatat@plt+0xabe4>
  40d9dc:	stp	x29, x30, [sp, #-64]!
  40d9e0:	mov	x29, sp
  40d9e4:	stp	x19, x20, [sp, #16]
  40d9e8:	stp	x21, x22, [sp, #32]
  40d9ec:	mov	x19, x0
  40d9f0:	mov	x22, x1
  40d9f4:	mov	x20, x2
  40d9f8:	cbz	x0, 40da68 <__fxstatat@plt+0xb018>
  40d9fc:	ldrb	w0, [x19]
  40da00:	mov	w21, #0x0                   	// #0
  40da04:	cmp	w0, #0x27
  40da08:	b.eq	40dab8 <__fxstatat@plt+0xb068>  // b.none
  40da0c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40da10:	add	x1, x1, #0xda0
  40da14:	mov	x3, #0x4                   	// #4
  40da18:	add	x2, x1, #0x10
  40da1c:	add	x1, x1, #0x18
  40da20:	mov	x0, x19
  40da24:	bl	40ad10 <__fxstatat@plt+0x82c0>
  40da28:	tbnz	w0, #31, 40dac4 <__fxstatat@plt+0xb074>
  40da2c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5af4>
  40da30:	add	x1, x1, #0xda0
  40da34:	add	x0, x1, w0, sxtw #2
  40da38:	ldr	w0, [x0, #16]
  40da3c:	orr	w21, w21, w0
  40da40:	mov	x0, #0x1                   	// #1
  40da44:	str	x0, [x20]
  40da48:	str	w21, [x22]
  40da4c:	mov	w0, #0x0                   	// #0
  40da50:	ldr	x1, [x20]
  40da54:	cbz	x1, 40db50 <__fxstatat@plt+0xb100>
  40da58:	ldp	x19, x20, [sp, #16]
  40da5c:	ldp	x21, x22, [sp, #32]
  40da60:	ldp	x29, x30, [sp], #64
  40da64:	ret
  40da68:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  40da6c:	add	x0, x0, #0x710
  40da70:	bl	4029f0 <getenv@plt>
  40da74:	mov	x19, x0
  40da78:	cbnz	x0, 40d9fc <__fxstatat@plt+0xafac>
  40da7c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40da80:	add	x0, x0, #0xd30
  40da84:	bl	4029f0 <getenv@plt>
  40da88:	mov	x19, x0
  40da8c:	cbnz	x0, 40d9fc <__fxstatat@plt+0xafac>
  40da90:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40da94:	add	x0, x0, #0xd40
  40da98:	bl	4029f0 <getenv@plt>
  40da9c:	cmp	x0, #0x0
  40daa0:	mov	x0, #0x200                 	// #512
  40daa4:	mov	x1, #0x400                 	// #1024
  40daa8:	csel	x0, x0, x1, ne  // ne = any
  40daac:	str	x0, [x20]
  40dab0:	mov	w21, #0x0                   	// #0
  40dab4:	b	40da48 <__fxstatat@plt+0xaff8>
  40dab8:	add	x19, x19, #0x1
  40dabc:	mov	w21, #0x4                   	// #4
  40dac0:	b	40da0c <__fxstatat@plt+0xafbc>
  40dac4:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x5af4>
  40dac8:	add	x4, x4, #0xd50
  40dacc:	mov	x3, x20
  40dad0:	mov	w2, #0x0                   	// #0
  40dad4:	add	x1, sp, #0x38
  40dad8:	mov	x0, x19
  40dadc:	bl	412d38 <__fxstatat@plt+0x102e8>
  40dae0:	cbnz	w0, 40db1c <__fxstatat@plt+0xb0cc>
  40dae4:	ldrb	w0, [x19]
  40dae8:	sub	w0, w0, #0x30
  40daec:	and	w0, w0, #0xff
  40daf0:	cmp	w0, #0x9
  40daf4:	b.ls	40da48 <__fxstatat@plt+0xaff8>  // b.plast
  40daf8:	ldr	x1, [sp, #56]
  40dafc:	cmp	x19, x1
  40db00:	b.eq	40db24 <__fxstatat@plt+0xb0d4>  // b.none
  40db04:	ldrb	w0, [x19, #1]!
  40db08:	sub	w0, w0, #0x30
  40db0c:	and	w0, w0, #0xff
  40db10:	cmp	w0, #0x9
  40db14:	b.hi	40dafc <__fxstatat@plt+0xb0ac>  // b.pmore
  40db18:	b	40da48 <__fxstatat@plt+0xaff8>
  40db1c:	str	wzr, [x22]
  40db20:	b	40da50 <__fxstatat@plt+0xb000>
  40db24:	ldurb	w0, [x1, #-1]
  40db28:	cmp	w0, #0x42
  40db2c:	b.eq	40db3c <__fxstatat@plt+0xb0ec>  // b.none
  40db30:	orr	w21, w21, #0x80
  40db34:	orr	w21, w21, #0x20
  40db38:	b	40da48 <__fxstatat@plt+0xaff8>
  40db3c:	orr	w21, w21, #0x180
  40db40:	ldurb	w0, [x1, #-2]
  40db44:	cmp	w0, #0x69
  40db48:	b.ne	40da48 <__fxstatat@plt+0xaff8>  // b.any
  40db4c:	b	40db34 <__fxstatat@plt+0xb0e4>
  40db50:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40db54:	add	x0, x0, #0xd40
  40db58:	bl	4029f0 <getenv@plt>
  40db5c:	cmp	x0, #0x0
  40db60:	mov	x0, #0x200                 	// #512
  40db64:	mov	x1, #0x400                 	// #1024
  40db68:	csel	x0, x0, x1, ne  // ne = any
  40db6c:	str	x0, [x20]
  40db70:	mov	w0, #0x4                   	// #4
  40db74:	b	40da58 <__fxstatat@plt+0xb008>
  40db78:	stp	x29, x30, [sp, #-48]!
  40db7c:	mov	x29, sp
  40db80:	stp	x19, x20, [sp, #16]
  40db84:	mov	w20, w0
  40db88:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40db8c:	ldr	x19, [x0, #1832]
  40db90:	cbz	x19, 40dc14 <__fxstatat@plt+0xb1c4>
  40db94:	ldr	w1, [x19]
  40db98:	cmp	w1, w20
  40db9c:	b.eq	40dbfc <__fxstatat@plt+0xb1ac>  // b.none
  40dba0:	ldr	x19, [x19, #8]
  40dba4:	cbnz	x19, 40db94 <__fxstatat@plt+0xb144>
  40dba8:	str	x21, [sp, #32]
  40dbac:	mov	w0, w20
  40dbb0:	bl	402810 <getpwuid@plt>
  40dbb4:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x2af4>
  40dbb8:	add	x21, x21, #0x1f0
  40dbbc:	cbz	x0, 40dbc4 <__fxstatat@plt+0xb174>
  40dbc0:	ldr	x21, [x0]
  40dbc4:	mov	x0, x21
  40dbc8:	bl	402430 <strlen@plt>
  40dbcc:	add	x0, x0, #0x18
  40dbd0:	and	x0, x0, #0xfffffffffffffff8
  40dbd4:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40dbd8:	mov	x19, x0
  40dbdc:	str	w20, [x0], #16
  40dbe0:	mov	x1, x21
  40dbe4:	bl	4028d0 <strcpy@plt>
  40dbe8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dbec:	ldr	x1, [x0, #1832]
  40dbf0:	str	x1, [x19, #8]
  40dbf4:	str	x19, [x0, #1832]
  40dbf8:	ldr	x21, [sp, #32]
  40dbfc:	ldrb	w0, [x19, #16]!
  40dc00:	cmp	w0, #0x0
  40dc04:	csel	x0, x19, xzr, ne  // ne = any
  40dc08:	ldp	x19, x20, [sp, #16]
  40dc0c:	ldp	x29, x30, [sp], #48
  40dc10:	ret
  40dc14:	str	x21, [sp, #32]
  40dc18:	b	40dbac <__fxstatat@plt+0xb15c>
  40dc1c:	stp	x29, x30, [sp, #-48]!
  40dc20:	mov	x29, sp
  40dc24:	stp	x19, x20, [sp, #16]
  40dc28:	str	x21, [sp, #32]
  40dc2c:	mov	x20, x0
  40dc30:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dc34:	ldr	x19, [x0, #1832]
  40dc38:	cbz	x19, 40dc6c <__fxstatat@plt+0xb21c>
  40dc3c:	ldrb	w21, [x20]
  40dc40:	b	40dc4c <__fxstatat@plt+0xb1fc>
  40dc44:	ldr	x19, [x19, #8]
  40dc48:	cbz	x19, 40dc6c <__fxstatat@plt+0xb21c>
  40dc4c:	ldrb	w1, [x19, #16]
  40dc50:	cmp	w1, w21
  40dc54:	b.ne	40dc44 <__fxstatat@plt+0xb1f4>  // b.any
  40dc58:	mov	x1, x20
  40dc5c:	add	x0, x19, #0x10
  40dc60:	bl	402800 <strcmp@plt>
  40dc64:	cbnz	w0, 40dc44 <__fxstatat@plt+0xb1f4>
  40dc68:	b	40dcfc <__fxstatat@plt+0xb2ac>
  40dc6c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dc70:	ldr	x19, [x0, #1840]
  40dc74:	cbz	x19, 40dcac <__fxstatat@plt+0xb25c>
  40dc78:	ldrb	w21, [x20]
  40dc7c:	b	40dc88 <__fxstatat@plt+0xb238>
  40dc80:	ldr	x19, [x19, #8]
  40dc84:	cbz	x19, 40dcac <__fxstatat@plt+0xb25c>
  40dc88:	ldrb	w1, [x19, #16]
  40dc8c:	cmp	w1, w21
  40dc90:	b.ne	40dc80 <__fxstatat@plt+0xb230>  // b.any
  40dc94:	mov	x1, x20
  40dc98:	add	x0, x19, #0x10
  40dc9c:	bl	402800 <strcmp@plt>
  40dca0:	cbnz	w0, 40dc80 <__fxstatat@plt+0xb230>
  40dca4:	mov	x19, #0x0                   	// #0
  40dca8:	b	40dcfc <__fxstatat@plt+0xb2ac>
  40dcac:	mov	x0, x20
  40dcb0:	bl	402690 <getpwnam@plt>
  40dcb4:	mov	x19, x0
  40dcb8:	mov	x0, x20
  40dcbc:	bl	402430 <strlen@plt>
  40dcc0:	add	x0, x0, #0x18
  40dcc4:	and	x0, x0, #0xfffffffffffffff8
  40dcc8:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40dccc:	mov	x21, x0
  40dcd0:	mov	x1, x20
  40dcd4:	add	x0, x0, #0x10
  40dcd8:	bl	4028d0 <strcpy@plt>
  40dcdc:	cbz	x19, 40dd10 <__fxstatat@plt+0xb2c0>
  40dce0:	ldr	w0, [x19, #16]
  40dce4:	str	w0, [x21]
  40dce8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dcec:	ldr	x1, [x0, #1832]
  40dcf0:	str	x1, [x21, #8]
  40dcf4:	str	x21, [x0, #1832]
  40dcf8:	mov	x19, x21
  40dcfc:	mov	x0, x19
  40dd00:	ldp	x19, x20, [sp, #16]
  40dd04:	ldr	x21, [sp, #32]
  40dd08:	ldp	x29, x30, [sp], #48
  40dd0c:	ret
  40dd10:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dd14:	add	x0, x0, #0x728
  40dd18:	ldr	x1, [x0, #8]
  40dd1c:	str	x1, [x21, #8]
  40dd20:	str	x21, [x0, #8]
  40dd24:	b	40dcfc <__fxstatat@plt+0xb2ac>
  40dd28:	stp	x29, x30, [sp, #-48]!
  40dd2c:	mov	x29, sp
  40dd30:	stp	x19, x20, [sp, #16]
  40dd34:	mov	w20, w0
  40dd38:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dd3c:	ldr	x19, [x0, #1848]
  40dd40:	cbz	x19, 40ddc8 <__fxstatat@plt+0xb378>
  40dd44:	ldr	w1, [x19]
  40dd48:	cmp	w1, w20
  40dd4c:	b.eq	40ddb0 <__fxstatat@plt+0xb360>  // b.none
  40dd50:	ldr	x19, [x19, #8]
  40dd54:	cbnz	x19, 40dd44 <__fxstatat@plt+0xb2f4>
  40dd58:	str	x21, [sp, #32]
  40dd5c:	mov	w0, w20
  40dd60:	bl	402a10 <getgrgid@plt>
  40dd64:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x2af4>
  40dd68:	add	x21, x21, #0x1f0
  40dd6c:	cbz	x0, 40dd74 <__fxstatat@plt+0xb324>
  40dd70:	ldr	x21, [x0]
  40dd74:	mov	x0, x21
  40dd78:	bl	402430 <strlen@plt>
  40dd7c:	add	x0, x0, #0x18
  40dd80:	and	x0, x0, #0xfffffffffffffff8
  40dd84:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40dd88:	mov	x19, x0
  40dd8c:	str	w20, [x0], #16
  40dd90:	mov	x1, x21
  40dd94:	bl	4028d0 <strcpy@plt>
  40dd98:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dd9c:	add	x0, x0, #0x728
  40dda0:	ldr	x1, [x0, #16]
  40dda4:	str	x1, [x19, #8]
  40dda8:	str	x19, [x0, #16]
  40ddac:	ldr	x21, [sp, #32]
  40ddb0:	ldrb	w0, [x19, #16]!
  40ddb4:	cmp	w0, #0x0
  40ddb8:	csel	x0, x19, xzr, ne  // ne = any
  40ddbc:	ldp	x19, x20, [sp, #16]
  40ddc0:	ldp	x29, x30, [sp], #48
  40ddc4:	ret
  40ddc8:	str	x21, [sp, #32]
  40ddcc:	b	40dd5c <__fxstatat@plt+0xb30c>
  40ddd0:	stp	x29, x30, [sp, #-48]!
  40ddd4:	mov	x29, sp
  40ddd8:	stp	x19, x20, [sp, #16]
  40dddc:	str	x21, [sp, #32]
  40dde0:	mov	x20, x0
  40dde4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dde8:	ldr	x19, [x0, #1848]
  40ddec:	cbz	x19, 40de20 <__fxstatat@plt+0xb3d0>
  40ddf0:	ldrb	w21, [x20]
  40ddf4:	b	40de00 <__fxstatat@plt+0xb3b0>
  40ddf8:	ldr	x19, [x19, #8]
  40ddfc:	cbz	x19, 40de20 <__fxstatat@plt+0xb3d0>
  40de00:	ldrb	w1, [x19, #16]
  40de04:	cmp	w1, w21
  40de08:	b.ne	40ddf8 <__fxstatat@plt+0xb3a8>  // b.any
  40de0c:	mov	x1, x20
  40de10:	add	x0, x19, #0x10
  40de14:	bl	402800 <strcmp@plt>
  40de18:	cbnz	w0, 40ddf8 <__fxstatat@plt+0xb3a8>
  40de1c:	b	40deb4 <__fxstatat@plt+0xb464>
  40de20:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40de24:	ldr	x19, [x0, #1856]
  40de28:	cbz	x19, 40de60 <__fxstatat@plt+0xb410>
  40de2c:	ldrb	w21, [x20]
  40de30:	b	40de3c <__fxstatat@plt+0xb3ec>
  40de34:	ldr	x19, [x19, #8]
  40de38:	cbz	x19, 40de60 <__fxstatat@plt+0xb410>
  40de3c:	ldrb	w1, [x19, #16]
  40de40:	cmp	w1, w21
  40de44:	b.ne	40de34 <__fxstatat@plt+0xb3e4>  // b.any
  40de48:	mov	x1, x20
  40de4c:	add	x0, x19, #0x10
  40de50:	bl	402800 <strcmp@plt>
  40de54:	cbnz	w0, 40de34 <__fxstatat@plt+0xb3e4>
  40de58:	mov	x19, #0x0                   	// #0
  40de5c:	b	40deb4 <__fxstatat@plt+0xb464>
  40de60:	mov	x0, x20
  40de64:	bl	4024e0 <getgrnam@plt>
  40de68:	mov	x19, x0
  40de6c:	mov	x0, x20
  40de70:	bl	402430 <strlen@plt>
  40de74:	add	x0, x0, #0x18
  40de78:	and	x0, x0, #0xfffffffffffffff8
  40de7c:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  40de80:	mov	x21, x0
  40de84:	mov	x1, x20
  40de88:	add	x0, x0, #0x10
  40de8c:	bl	4028d0 <strcpy@plt>
  40de90:	cbz	x19, 40dec8 <__fxstatat@plt+0xb478>
  40de94:	ldr	w0, [x19, #16]
  40de98:	str	w0, [x21]
  40de9c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40dea0:	add	x0, x0, #0x728
  40dea4:	ldr	x1, [x0, #16]
  40dea8:	str	x1, [x21, #8]
  40deac:	str	x21, [x0, #16]
  40deb0:	mov	x19, x21
  40deb4:	mov	x0, x19
  40deb8:	ldp	x19, x20, [sp, #16]
  40debc:	ldr	x21, [sp, #32]
  40dec0:	ldp	x29, x30, [sp], #48
  40dec4:	ret
  40dec8:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  40decc:	add	x0, x0, #0x728
  40ded0:	ldr	x1, [x0, #24]
  40ded4:	str	x1, [x21, #8]
  40ded8:	str	x21, [x0, #24]
  40dedc:	b	40deb4 <__fxstatat@plt+0xb464>
  40dee0:	mov	x2, x0
  40dee4:	add	x0, x1, #0x14
  40dee8:	strb	wzr, [x1, #20]
  40deec:	mov	x4, #0x6666666666666666    	// #7378697629483820646
  40def0:	movk	x4, #0x6667
  40def4:	tbnz	x2, #63, 40df20 <__fxstatat@plt+0xb4d0>
  40def8:	smulh	x1, x2, x4
  40defc:	asr	x1, x1, #2
  40df00:	sub	x1, x1, x2, asr #63
  40df04:	add	x3, x1, x1, lsl #2
  40df08:	sub	x2, x2, x3, lsl #1
  40df0c:	add	w2, w2, #0x30
  40df10:	strb	w2, [x0, #-1]!
  40df14:	mov	x2, x1
  40df18:	cbnz	x1, 40def8 <__fxstatat@plt+0xb4a8>
  40df1c:	ret
  40df20:	mov	x6, x4
  40df24:	mov	w5, #0x30                  	// #48
  40df28:	mov	x4, x0
  40df2c:	smulh	x1, x2, x6
  40df30:	asr	x1, x1, #2
  40df34:	sub	x1, x1, x2, asr #63
  40df38:	add	x3, x1, x1, lsl #2
  40df3c:	sub	x2, x2, x3, lsl #1
  40df40:	sub	w2, w5, w2
  40df44:	strb	w2, [x0, #-1]!
  40df48:	mov	x2, x1
  40df4c:	cbnz	x1, 40df28 <__fxstatat@plt+0xb4d8>
  40df50:	mov	w1, #0x2d                  	// #45
  40df54:	sturb	w1, [x0, #-1]
  40df58:	sub	x0, x4, #0x2
  40df5c:	b	40df1c <__fxstatat@plt+0xb4cc>
  40df60:	mov	x3, x0
  40df64:	add	x0, x1, #0x14
  40df68:	strb	wzr, [x1, #20]
  40df6c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40df70:	movk	x4, #0xcccd
  40df74:	umulh	x1, x3, x4
  40df78:	lsr	x1, x1, #3
  40df7c:	add	x2, x1, x1, lsl #2
  40df80:	sub	x2, x3, x2, lsl #1
  40df84:	add	w2, w2, #0x30
  40df88:	strb	w2, [x0, #-1]!
  40df8c:	mov	x2, x3
  40df90:	mov	x3, x1
  40df94:	cmp	x2, #0x9
  40df98:	b.hi	40df74 <__fxstatat@plt+0xb524>  // b.pmore
  40df9c:	ret
  40dfa0:	stp	x29, x30, [sp, #-112]!
  40dfa4:	mov	x29, sp
  40dfa8:	stp	x19, x20, [sp, #16]
  40dfac:	stp	x21, x22, [sp, #32]
  40dfb0:	stp	x23, x24, [sp, #48]
  40dfb4:	stp	x25, x26, [sp, #64]
  40dfb8:	stp	x27, x28, [sp, #80]
  40dfbc:	str	x0, [sp, #96]
  40dfc0:	mov	x23, x1
  40dfc4:	mov	x19, x2
  40dfc8:	mov	x22, x3
  40dfcc:	mov	w24, w4
  40dfd0:	mov	w21, w5
  40dfd4:	bl	402430 <strlen@plt>
  40dfd8:	mov	x28, x0
  40dfdc:	mov	x25, #0x0                   	// #0
  40dfe0:	tbz	w21, #1, 40e024 <__fxstatat@plt+0xb5d4>
  40dfe4:	mov	x20, x28
  40dfe8:	mov	x26, #0x0                   	// #0
  40dfec:	ldr	x0, [x22]
  40dff0:	cmp	x0, x20
  40dff4:	b.cs	40e188 <__fxstatat@plt+0xb738>  // b.hs, b.nlast
  40dff8:	mov	x28, x0
  40dffc:	mov	x27, #0x0                   	// #0
  40e000:	str	x0, [x22]
  40e004:	cbz	w24, 40e1a8 <__fxstatat@plt+0xb758>
  40e008:	mov	x20, #0x0                   	// #0
  40e00c:	cmp	w24, #0x1
  40e010:	b.eq	40e1b0 <__fxstatat@plt+0xb760>  // b.none
  40e014:	lsr	x20, x27, #1
  40e018:	and	x27, x27, #0x1
  40e01c:	add	x27, x27, x20
  40e020:	b	40e1b0 <__fxstatat@plt+0xb760>
  40e024:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40e028:	cmp	x0, #0x1
  40e02c:	b.ls	40dfe4 <__fxstatat@plt+0xb594>  // b.plast
  40e030:	mov	x2, #0x0                   	// #0
  40e034:	ldr	x1, [sp, #96]
  40e038:	mov	x0, #0x0                   	// #0
  40e03c:	bl	402450 <mbstowcs@plt>
  40e040:	mov	x20, x0
  40e044:	cmn	x0, #0x1
  40e048:	b.ne	40e064 <__fxstatat@plt+0xb614>  // b.any
  40e04c:	mov	x26, #0x0                   	// #0
  40e050:	tbz	w21, #0, 40e1cc <__fxstatat@plt+0xb77c>
  40e054:	mov	x20, x28
  40e058:	mov	x25, #0x0                   	// #0
  40e05c:	mov	x26, #0x0                   	// #0
  40e060:	b	40dfec <__fxstatat@plt+0xb59c>
  40e064:	add	x20, x0, #0x1
  40e068:	lsl	x26, x20, #2
  40e06c:	mov	x0, x26
  40e070:	bl	4025f0 <malloc@plt>
  40e074:	mov	x25, x0
  40e078:	cbz	x0, 40e0a8 <__fxstatat@plt+0xb658>
  40e07c:	mov	x2, x20
  40e080:	ldr	x1, [sp, #96]
  40e084:	bl	402450 <mbstowcs@plt>
  40e088:	cbz	x0, 40dfe4 <__fxstatat@plt+0xb594>
  40e08c:	add	x26, x25, x26
  40e090:	stur	wzr, [x26, #-4]
  40e094:	ldr	w0, [x25]
  40e098:	cbz	w0, 40e284 <__fxstatat@plt+0xb834>
  40e09c:	mov	x27, x25
  40e0a0:	mov	w26, #0x0                   	// #0
  40e0a4:	b	40e0cc <__fxstatat@plt+0xb67c>
  40e0a8:	tbz	w21, #0, 40e0b8 <__fxstatat@plt+0xb668>
  40e0ac:	mov	x20, x28
  40e0b0:	mov	x26, x0
  40e0b4:	b	40dfec <__fxstatat@plt+0xb59c>
  40e0b8:	mov	x26, x0
  40e0bc:	mov	x20, #0xffffffffffffffff    	// #-1
  40e0c0:	b	40e1cc <__fxstatat@plt+0xb77c>
  40e0c4:	ldr	w0, [x27, #4]!
  40e0c8:	cbz	w0, 40e0e4 <__fxstatat@plt+0xb694>
  40e0cc:	bl	4029c0 <iswprint@plt>
  40e0d0:	cbnz	w0, 40e0c4 <__fxstatat@plt+0xb674>
  40e0d4:	mov	w0, #0xfffd                	// #65533
  40e0d8:	str	w0, [x27]
  40e0dc:	mov	w26, #0x1                   	// #1
  40e0e0:	b	40e0c4 <__fxstatat@plt+0xb674>
  40e0e4:	mov	x1, x20
  40e0e8:	mov	x0, x25
  40e0ec:	bl	402620 <wcswidth@plt>
  40e0f0:	sxtw	x20, w0
  40e0f4:	cbz	w26, 40e294 <__fxstatat@plt+0xb844>
  40e0f8:	mov	x2, #0x0                   	// #0
  40e0fc:	mov	x1, x25
  40e100:	mov	x0, #0x0                   	// #0
  40e104:	bl	402930 <wcstombs@plt>
  40e108:	add	x0, x0, #0x1
  40e10c:	str	x0, [sp, #104]
  40e110:	b	40e2a8 <__fxstatat@plt+0xb858>
  40e114:	tbnz	w21, #0, 40dfec <__fxstatat@plt+0xb59c>
  40e118:	mov	x20, #0xffffffffffffffff    	// #-1
  40e11c:	b	40e1cc <__fxstatat@plt+0xb77c>
  40e120:	add	x1, x20, w0, sxtw
  40e124:	cmp	x28, x1
  40e128:	b.cc	40e158 <__fxstatat@plt+0xb708>  // b.lo, b.ul, b.last
  40e12c:	ldr	w0, [x27, #4]!
  40e130:	cbz	w0, 40e154 <__fxstatat@plt+0xb704>
  40e134:	mov	x20, x1
  40e138:	bl	402600 <wcwidth@plt>
  40e13c:	cmn	w0, #0x1
  40e140:	b.ne	40e120 <__fxstatat@plt+0xb6d0>  // b.any
  40e144:	mov	w0, #0xfffd                	// #65533
  40e148:	str	w0, [x27]
  40e14c:	mov	w0, #0x1                   	// #1
  40e150:	b	40e120 <__fxstatat@plt+0xb6d0>
  40e154:	mov	x20, x1
  40e158:	str	wzr, [x27]
  40e15c:	ldr	x2, [sp, #104]
  40e160:	mov	x1, x25
  40e164:	mov	x0, x26
  40e168:	bl	402930 <wcstombs@plt>
  40e16c:	mov	x28, x0
  40e170:	str	x26, [sp, #96]
  40e174:	b	40dfec <__fxstatat@plt+0xb59c>
  40e178:	mov	x27, x25
  40e17c:	mov	x20, #0x0                   	// #0
  40e180:	b	40e158 <__fxstatat@plt+0xb708>
  40e184:	mov	x26, #0x0                   	// #0
  40e188:	cmp	x20, x0
  40e18c:	b.cs	40e19c <__fxstatat@plt+0xb74c>  // b.hs, b.nlast
  40e190:	sub	x27, x0, x20
  40e194:	mov	x0, x20
  40e198:	b	40e000 <__fxstatat@plt+0xb5b0>
  40e19c:	mov	x0, x20
  40e1a0:	mov	x27, #0x0                   	// #0
  40e1a4:	b	40e000 <__fxstatat@plt+0xb5b0>
  40e1a8:	mov	x20, x27
  40e1ac:	mov	x27, #0x0                   	// #0
  40e1b0:	tst	x21, #0x4
  40e1b4:	csel	x27, x27, xzr, eq  // eq = none
  40e1b8:	tst	x21, #0x8
  40e1bc:	csel	x20, x20, xzr, eq  // eq = none
  40e1c0:	cbnz	x19, 40e1fc <__fxstatat@plt+0xb7ac>
  40e1c4:	add	x27, x27, x28
  40e1c8:	add	x20, x27, x20
  40e1cc:	mov	x0, x25
  40e1d0:	bl	402840 <free@plt>
  40e1d4:	mov	x0, x26
  40e1d8:	bl	402840 <free@plt>
  40e1dc:	mov	x0, x20
  40e1e0:	ldp	x19, x20, [sp, #16]
  40e1e4:	ldp	x21, x22, [sp, #32]
  40e1e8:	ldp	x23, x24, [sp, #48]
  40e1ec:	ldp	x25, x26, [sp, #64]
  40e1f0:	ldp	x27, x28, [sp, #80]
  40e1f4:	ldp	x29, x30, [sp], #112
  40e1f8:	ret
  40e1fc:	sub	x19, x19, #0x1
  40e200:	add	x19, x23, x19
  40e204:	cmp	x27, #0x0
  40e208:	ccmp	x23, x19, #0x2, ne  // ne = any
  40e20c:	b.cs	40e274 <__fxstatat@plt+0xb824>  // b.hs, b.nlast
  40e210:	mov	x0, x23
  40e214:	mov	w2, #0x20                  	// #32
  40e218:	strb	w2, [x0], #1
  40e21c:	sub	x1, x23, x0
  40e220:	cmn	x1, x27
  40e224:	ccmp	x19, x0, #0x0, ne  // ne = any
  40e228:	b.hi	40e218 <__fxstatat@plt+0xb7c8>  // b.pmore
  40e22c:	strb	wzr, [x0]
  40e230:	sub	x2, x19, x0
  40e234:	cmp	x2, x28
  40e238:	csel	x2, x2, x28, ls  // ls = plast
  40e23c:	ldr	x1, [sp, #96]
  40e240:	bl	402860 <mempcpy@plt>
  40e244:	cmp	x20, #0x0
  40e248:	ccmp	x19, x0, #0x0, ne  // ne = any
  40e24c:	b.ls	40e27c <__fxstatat@plt+0xb82c>  // b.plast
  40e250:	mov	x1, x0
  40e254:	mov	w3, #0x20                  	// #32
  40e258:	strb	w3, [x1], #1
  40e25c:	sub	x2, x20, x1
  40e260:	cmn	x0, x2
  40e264:	ccmp	x19, x1, #0x0, ne  // ne = any
  40e268:	b.hi	40e258 <__fxstatat@plt+0xb808>  // b.pmore
  40e26c:	strb	wzr, [x1]
  40e270:	b	40e1c4 <__fxstatat@plt+0xb774>
  40e274:	mov	x0, x23
  40e278:	b	40e22c <__fxstatat@plt+0xb7dc>
  40e27c:	mov	x1, x0
  40e280:	b	40e26c <__fxstatat@plt+0xb81c>
  40e284:	mov	x1, x20
  40e288:	mov	x0, x25
  40e28c:	bl	402620 <wcswidth@plt>
  40e290:	sxtw	x20, w0
  40e294:	ldr	x0, [x22]
  40e298:	cmp	x0, x20
  40e29c:	b.cs	40e184 <__fxstatat@plt+0xb734>  // b.hs, b.nlast
  40e2a0:	add	x0, x28, #0x1
  40e2a4:	str	x0, [sp, #104]
  40e2a8:	ldr	x0, [sp, #104]
  40e2ac:	bl	4025f0 <malloc@plt>
  40e2b0:	mov	x26, x0
  40e2b4:	cbz	x0, 40e114 <__fxstatat@plt+0xb6c4>
  40e2b8:	ldr	x28, [x22]
  40e2bc:	ldr	w0, [x25]
  40e2c0:	cbz	w0, 40e178 <__fxstatat@plt+0xb728>
  40e2c4:	mov	x27, x25
  40e2c8:	mov	x20, #0x0                   	// #0
  40e2cc:	b	40e138 <__fxstatat@plt+0xb6e8>
  40e2d0:	stp	x29, x30, [sp, #-80]!
  40e2d4:	mov	x29, sp
  40e2d8:	stp	x19, x20, [sp, #16]
  40e2dc:	stp	x21, x22, [sp, #32]
  40e2e0:	stp	x23, x24, [sp, #48]
  40e2e4:	stp	x25, x26, [sp, #64]
  40e2e8:	mov	x24, x0
  40e2ec:	mov	x21, x1
  40e2f0:	mov	w23, w2
  40e2f4:	mov	w22, w3
  40e2f8:	ldr	x25, [x1]
  40e2fc:	mov	x0, x25
  40e300:	mov	x19, #0x0                   	// #0
  40e304:	add	x20, x0, #0x1
  40e308:	mov	x26, x19
  40e30c:	mov	x1, x20
  40e310:	mov	x0, x19
  40e314:	bl	4026e0 <realloc@plt>
  40e318:	mov	x19, x0
  40e31c:	cbz	x0, 40e36c <__fxstatat@plt+0xb91c>
  40e320:	str	x25, [x21]
  40e324:	mov	w5, w22
  40e328:	mov	w4, w23
  40e32c:	mov	x3, x21
  40e330:	mov	x2, x20
  40e334:	mov	x1, x0
  40e338:	mov	x0, x24
  40e33c:	bl	40dfa0 <__fxstatat@plt+0xb550>
  40e340:	cmn	x0, #0x1
  40e344:	b.eq	40e378 <__fxstatat@plt+0xb928>  // b.none
  40e348:	cmp	x20, x0
  40e34c:	b.ls	40e304 <__fxstatat@plt+0xb8b4>  // b.plast
  40e350:	mov	x0, x19
  40e354:	ldp	x19, x20, [sp, #16]
  40e358:	ldp	x21, x22, [sp, #32]
  40e35c:	ldp	x23, x24, [sp, #48]
  40e360:	ldp	x25, x26, [sp, #64]
  40e364:	ldp	x29, x30, [sp], #80
  40e368:	ret
  40e36c:	mov	x0, x26
  40e370:	bl	402840 <free@plt>
  40e374:	b	40e350 <__fxstatat@plt+0xb900>
  40e378:	mov	x0, x19
  40e37c:	bl	402840 <free@plt>
  40e380:	mov	x19, #0x0                   	// #0
  40e384:	b	40e350 <__fxstatat@plt+0xb900>
  40e388:	stp	x29, x30, [sp, #-96]!
  40e38c:	mov	x29, sp
  40e390:	stp	x19, x20, [sp, #16]
  40e394:	stp	x21, x22, [sp, #32]
  40e398:	stp	x23, x24, [sp, #48]
  40e39c:	mov	x19, x0
  40e3a0:	mov	w23, w2
  40e3a4:	add	x21, x0, x1
  40e3a8:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40e3ac:	cmp	x0, #0x1
  40e3b0:	b.ls	40e3d0 <__fxstatat@plt+0xb980>  // b.plast
  40e3b4:	cmp	x19, x21
  40e3b8:	b.cs	40e55c <__fxstatat@plt+0xbb0c>  // b.hs, b.nlast
  40e3bc:	stp	x25, x26, [sp, #64]
  40e3c0:	mov	w20, #0x0                   	// #0
  40e3c4:	mov	x22, #0x1                   	// #1
  40e3c8:	and	w24, w23, #0x2
  40e3cc:	b	40e414 <__fxstatat@plt+0xb9c4>
  40e3d0:	mov	w20, #0x0                   	// #0
  40e3d4:	cmp	x19, x21
  40e3d8:	b.cs	40e4d8 <__fxstatat@plt+0xba88>  // b.hs, b.nlast
  40e3dc:	bl	402820 <__ctype_b_loc@plt>
  40e3e0:	ldr	x1, [x0]
  40e3e4:	mov	w20, #0x0                   	// #0
  40e3e8:	and	w23, w23, #0x2
  40e3ec:	mov	w2, #0x7fffffff            	// #2147483647
  40e3f0:	b	40e540 <__fxstatat@plt+0xbaf0>
  40e3f4:	sub	w3, w3, #0x25
  40e3f8:	and	w3, w3, #0xff
  40e3fc:	cmp	w3, #0x1a
  40e400:	b.hi	40e438 <__fxstatat@plt+0xb9e8>  // b.pmore
  40e404:	add	x19, x19, #0x1
  40e408:	add	w20, w20, #0x1
  40e40c:	cmp	x19, x21
  40e410:	b.cs	40e51c <__fxstatat@plt+0xbacc>  // b.hs, b.nlast
  40e414:	ldrb	w3, [x19]
  40e418:	cmp	w3, #0x5f
  40e41c:	b.hi	40e444 <__fxstatat@plt+0xb9f4>  // b.pmore
  40e420:	cmp	w3, #0x40
  40e424:	b.hi	40e404 <__fxstatat@plt+0xb9b4>  // b.pmore
  40e428:	cmp	w3, #0x23
  40e42c:	b.hi	40e3f4 <__fxstatat@plt+0xb9a4>  // b.pmore
  40e430:	cmp	w3, #0x1f
  40e434:	b.hi	40e404 <__fxstatat@plt+0xb9b4>  // b.pmore
  40e438:	str	xzr, [sp, #88]
  40e43c:	mov	w26, #0x7fffffff            	// #2147483647
  40e440:	b	40e48c <__fxstatat@plt+0xba3c>
  40e444:	sub	w3, w3, #0x61
  40e448:	and	w3, w3, #0xff
  40e44c:	cmp	w3, #0x1d
  40e450:	b.ls	40e404 <__fxstatat@plt+0xb9b4>  // b.plast
  40e454:	b	40e438 <__fxstatat@plt+0xb9e8>
  40e458:	tbnz	w23, #0, 40e510 <__fxstatat@plt+0xbac0>
  40e45c:	add	x19, x19, #0x1
  40e460:	add	w20, w20, #0x1
  40e464:	b	40e40c <__fxstatat@plt+0xb9bc>
  40e468:	tbnz	w23, #0, 40e510 <__fxstatat@plt+0xbac0>
  40e46c:	add	w20, w20, #0x1
  40e470:	mov	x19, x21
  40e474:	b	40e40c <__fxstatat@plt+0xb9bc>
  40e478:	add	w20, w20, w0
  40e47c:	add	x19, x19, x25
  40e480:	add	x0, sp, #0x58
  40e484:	bl	402770 <mbsinit@plt>
  40e488:	cbnz	w0, 40e40c <__fxstatat@plt+0xb9bc>
  40e48c:	add	x3, sp, #0x58
  40e490:	sub	x2, x21, x19
  40e494:	mov	x1, x19
  40e498:	add	x0, sp, #0x54
  40e49c:	bl	413118 <__fxstatat@plt+0x106c8>
  40e4a0:	cmn	x0, #0x1
  40e4a4:	b.eq	40e458 <__fxstatat@plt+0xba08>  // b.none
  40e4a8:	cmn	x0, #0x2
  40e4ac:	b.eq	40e468 <__fxstatat@plt+0xba18>  // b.none
  40e4b0:	cmp	x0, #0x0
  40e4b4:	csel	x25, x0, x22, ne  // ne = any
  40e4b8:	ldr	w0, [sp, #84]
  40e4bc:	bl	402600 <wcwidth@plt>
  40e4c0:	tbnz	w0, #31, 40e4f0 <__fxstatat@plt+0xbaa0>
  40e4c4:	sub	w1, w26, w20
  40e4c8:	cmp	w1, w0
  40e4cc:	b.ge	40e478 <__fxstatat@plt+0xba28>  // b.tcont
  40e4d0:	mov	w20, #0x7fffffff            	// #2147483647
  40e4d4:	ldp	x25, x26, [sp, #64]
  40e4d8:	mov	w0, w20
  40e4dc:	ldp	x19, x20, [sp, #16]
  40e4e0:	ldp	x21, x22, [sp, #32]
  40e4e4:	ldp	x23, x24, [sp, #48]
  40e4e8:	ldp	x29, x30, [sp], #96
  40e4ec:	ret
  40e4f0:	cbnz	w24, 40e510 <__fxstatat@plt+0xbac0>
  40e4f4:	ldr	w0, [sp, #84]
  40e4f8:	bl	402520 <iswcntrl@plt>
  40e4fc:	cbnz	w0, 40e47c <__fxstatat@plt+0xba2c>
  40e500:	cmp	w20, w26
  40e504:	b.eq	40e4d0 <__fxstatat@plt+0xba80>  // b.none
  40e508:	add	w20, w20, #0x1
  40e50c:	b	40e47c <__fxstatat@plt+0xba2c>
  40e510:	mov	w20, #0xffffffff            	// #-1
  40e514:	ldp	x25, x26, [sp, #64]
  40e518:	b	40e4d8 <__fxstatat@plt+0xba88>
  40e51c:	ldp	x25, x26, [sp, #64]
  40e520:	b	40e4d8 <__fxstatat@plt+0xba88>
  40e524:	cbnz	w23, 40e564 <__fxstatat@plt+0xbb14>
  40e528:	tbnz	w0, #1, 40e538 <__fxstatat@plt+0xbae8>
  40e52c:	cmp	w20, w2
  40e530:	b.eq	40e4d8 <__fxstatat@plt+0xba88>  // b.none
  40e534:	add	w20, w20, #0x1
  40e538:	cmp	x21, x19
  40e53c:	b.eq	40e4d8 <__fxstatat@plt+0xba88>  // b.none
  40e540:	ldrb	w0, [x19], #1
  40e544:	ldrh	w0, [x1, x0, lsl #1]
  40e548:	tbz	w0, #14, 40e524 <__fxstatat@plt+0xbad4>
  40e54c:	cmp	w20, w2
  40e550:	b.eq	40e4d8 <__fxstatat@plt+0xba88>  // b.none
  40e554:	add	w20, w20, #0x1
  40e558:	b	40e538 <__fxstatat@plt+0xbae8>
  40e55c:	mov	w20, #0x0                   	// #0
  40e560:	b	40e4d8 <__fxstatat@plt+0xba88>
  40e564:	mov	w20, #0xffffffff            	// #-1
  40e568:	b	40e4d8 <__fxstatat@plt+0xba88>
  40e56c:	stp	x29, x30, [sp, #-32]!
  40e570:	mov	x29, sp
  40e574:	stp	x19, x20, [sp, #16]
  40e578:	mov	x19, x0
  40e57c:	mov	w20, w1
  40e580:	bl	402430 <strlen@plt>
  40e584:	mov	w2, w20
  40e588:	mov	x1, x0
  40e58c:	mov	x0, x19
  40e590:	bl	40e388 <__fxstatat@plt+0xb938>
  40e594:	ldp	x19, x20, [sp, #16]
  40e598:	ldp	x29, x30, [sp], #32
  40e59c:	ret
  40e5a0:	stp	x29, x30, [sp, #-112]!
  40e5a4:	mov	x29, sp
  40e5a8:	stp	x19, x20, [sp, #16]
  40e5ac:	mov	x19, x0
  40e5b0:	mov	x20, x3
  40e5b4:	cmp	x1, #0x2
  40e5b8:	b.hi	40e5fc <__fxstatat@plt+0xbbac>  // b.pmore
  40e5bc:	b.eq	40e5cc <__fxstatat@plt+0xbb7c>  // b.none
  40e5c0:	ldp	x19, x20, [sp, #16]
  40e5c4:	ldp	x29, x30, [sp], #112
  40e5c8:	ret
  40e5cc:	stp	x21, x22, [sp, #32]
  40e5d0:	ldr	x21, [x0]
  40e5d4:	ldr	x22, [x0, #8]
  40e5d8:	mov	x1, x22
  40e5dc:	mov	x0, x21
  40e5e0:	blr	x3
  40e5e4:	cmp	w0, #0x0
  40e5e8:	b.le	40e770 <__fxstatat@plt+0xbd20>
  40e5ec:	str	x22, [x19]
  40e5f0:	str	x21, [x19, #8]
  40e5f4:	ldp	x21, x22, [sp, #32]
  40e5f8:	b	40e5c0 <__fxstatat@plt+0xbb70>
  40e5fc:	stp	x21, x22, [sp, #32]
  40e600:	stp	x23, x24, [sp, #48]
  40e604:	stp	x25, x26, [sp, #64]
  40e608:	stp	x27, x28, [sp, #80]
  40e60c:	mov	x21, x1
  40e610:	mov	x23, x2
  40e614:	lsr	x24, x1, #1
  40e618:	sub	x1, x1, x24
  40e61c:	add	x0, x0, x24, lsl #3
  40e620:	bl	40e5a0 <__fxstatat@plt+0xbb50>
  40e624:	cmp	x21, #0x3
  40e628:	b.hi	40e64c <__fxstatat@plt+0xbbfc>  // b.pmore
  40e62c:	ldr	x0, [x19]
  40e630:	str	x0, [x23]
  40e634:	ldr	x27, [x23]
  40e638:	ldr	x26, [x19, x24, lsl #3]
  40e63c:	mov	x25, x24
  40e640:	mov	x22, #0x0                   	// #0
  40e644:	mov	x28, #0x0                   	// #0
  40e648:	b	40e718 <__fxstatat@plt+0xbcc8>
  40e64c:	lsr	x25, x21, #2
  40e650:	str	x25, [sp, #104]
  40e654:	mov	x3, x20
  40e658:	mov	x2, x23
  40e65c:	sub	x1, x24, x25
  40e660:	add	x0, x19, x25, lsl #3
  40e664:	bl	40e5a0 <__fxstatat@plt+0xbb50>
  40e668:	mov	x3, x20
  40e66c:	mov	x2, x23
  40e670:	mov	x1, x25
  40e674:	mov	x0, x19
  40e678:	bl	40e5a0 <__fxstatat@plt+0xbb50>
  40e67c:	ldr	x27, [x19]
  40e680:	ldr	x26, [x19, x25, lsl #3]
  40e684:	add	x22, x23, #0x8
  40e688:	mov	x28, #0x0                   	// #0
  40e68c:	b	40e6b0 <__fxstatat@plt+0xbc60>
  40e690:	mov	x0, x22
  40e694:	stur	x27, [x22, #-8]
  40e698:	add	x28, x28, #0x1
  40e69c:	ldr	x1, [sp, #104]
  40e6a0:	cmp	x1, x28
  40e6a4:	b.eq	40e6e0 <__fxstatat@plt+0xbc90>  // b.none
  40e6a8:	ldr	x27, [x19, x28, lsl #3]
  40e6ac:	add	x22, x22, #0x8
  40e6b0:	mov	x1, x26
  40e6b4:	mov	x0, x27
  40e6b8:	blr	x20
  40e6bc:	cmp	w0, #0x0
  40e6c0:	b.le	40e690 <__fxstatat@plt+0xbc40>
  40e6c4:	mov	x0, x22
  40e6c8:	stur	x26, [x22, #-8]
  40e6cc:	add	x25, x25, #0x1
  40e6d0:	cmp	x24, x25
  40e6d4:	b.eq	40e6e8 <__fxstatat@plt+0xbc98>  // b.none
  40e6d8:	ldr	x26, [x19, x25, lsl #3]
  40e6dc:	b	40e6ac <__fxstatat@plt+0xbc5c>
  40e6e0:	str	x24, [sp, #104]
  40e6e4:	mov	x28, x25
  40e6e8:	ldr	x1, [sp, #104]
  40e6ec:	sub	x2, x1, x28
  40e6f0:	lsl	x2, x2, #3
  40e6f4:	add	x1, x19, x28, lsl #3
  40e6f8:	bl	4023c0 <memcpy@plt>
  40e6fc:	b	40e634 <__fxstatat@plt+0xbbe4>
  40e700:	str	x27, [x19, x22, lsl #3]
  40e704:	add	x28, x28, #0x1
  40e708:	cmp	x24, x28
  40e70c:	b.eq	40e778 <__fxstatat@plt+0xbd28>  // b.none
  40e710:	ldr	x27, [x23, x28, lsl #3]
  40e714:	add	x22, x22, #0x1
  40e718:	mov	x1, x26
  40e71c:	mov	x0, x27
  40e720:	blr	x20
  40e724:	cmp	w0, #0x0
  40e728:	b.le	40e700 <__fxstatat@plt+0xbcb0>
  40e72c:	add	x0, x22, #0x1
  40e730:	str	x26, [x19, x22, lsl #3]
  40e734:	add	x25, x25, #0x1
  40e738:	cmp	x21, x25
  40e73c:	b.eq	40e748 <__fxstatat@plt+0xbcf8>  // b.none
  40e740:	ldr	x26, [x19, x25, lsl #3]
  40e744:	b	40e714 <__fxstatat@plt+0xbcc4>
  40e748:	sub	x2, x24, x28
  40e74c:	lsl	x2, x2, #3
  40e750:	add	x1, x23, x28, lsl #3
  40e754:	add	x0, x19, x0, lsl #3
  40e758:	bl	4023c0 <memcpy@plt>
  40e75c:	ldp	x21, x22, [sp, #32]
  40e760:	ldp	x23, x24, [sp, #48]
  40e764:	ldp	x25, x26, [sp, #64]
  40e768:	ldp	x27, x28, [sp, #80]
  40e76c:	b	40e5c0 <__fxstatat@plt+0xbb70>
  40e770:	ldp	x21, x22, [sp, #32]
  40e774:	b	40e5c0 <__fxstatat@plt+0xbb70>
  40e778:	ldp	x21, x22, [sp, #32]
  40e77c:	ldp	x23, x24, [sp, #48]
  40e780:	ldp	x25, x26, [sp, #64]
  40e784:	ldp	x27, x28, [sp, #80]
  40e788:	b	40e5c0 <__fxstatat@plt+0xbb70>
  40e78c:	stp	x29, x30, [sp, #-16]!
  40e790:	mov	x29, sp
  40e794:	mov	x3, x2
  40e798:	add	x2, x0, x1, lsl #3
  40e79c:	bl	40e5a0 <__fxstatat@plt+0xbb50>
  40e7a0:	ldp	x29, x30, [sp], #16
  40e7a4:	ret
  40e7a8:	stp	x29, x30, [sp, #-48]!
  40e7ac:	mov	x29, sp
  40e7b0:	stp	x19, x20, [sp, #16]
  40e7b4:	mov	x20, x0
  40e7b8:	cbz	x2, 40e7ec <__fxstatat@plt+0xbd9c>
  40e7bc:	str	x21, [sp, #32]
  40e7c0:	mov	x21, x1
  40e7c4:	sub	x19, x2, #0x1
  40e7c8:	bl	402560 <__ctype_tolower_loc@plt>
  40e7cc:	ldrb	w3, [x21, x19]
  40e7d0:	ldr	x2, [x0]
  40e7d4:	ldr	w2, [x2, x3, lsl #2]
  40e7d8:	strb	w2, [x20, x19]
  40e7dc:	sub	x19, x19, #0x1
  40e7e0:	cmn	x19, #0x1
  40e7e4:	b.ne	40e7cc <__fxstatat@plt+0xbd7c>  // b.any
  40e7e8:	ldr	x21, [sp, #32]
  40e7ec:	mov	x0, x20
  40e7f0:	ldp	x19, x20, [sp, #16]
  40e7f4:	ldp	x29, x30, [sp], #48
  40e7f8:	ret
  40e7fc:	stp	x29, x30, [sp, #-48]!
  40e800:	mov	x29, sp
  40e804:	stp	x19, x20, [sp, #16]
  40e808:	mov	x20, x0
  40e80c:	cbz	x2, 40e840 <__fxstatat@plt+0xbdf0>
  40e810:	str	x21, [sp, #32]
  40e814:	mov	x21, x1
  40e818:	sub	x19, x2, #0x1
  40e81c:	bl	4026f0 <__ctype_toupper_loc@plt>
  40e820:	ldrb	w3, [x21, x19]
  40e824:	ldr	x2, [x0]
  40e828:	ldr	w2, [x2, x3, lsl #2]
  40e82c:	strb	w2, [x20, x19]
  40e830:	sub	x19, x19, #0x1
  40e834:	cmn	x19, #0x1
  40e838:	b.ne	40e820 <__fxstatat@plt+0xbdd0>  // b.any
  40e83c:	ldr	x21, [sp, #32]
  40e840:	mov	x0, x20
  40e844:	ldp	x19, x20, [sp, #16]
  40e848:	ldp	x29, x30, [sp], #48
  40e84c:	ret
  40e850:	sub	sp, sp, #0x4f0
  40e854:	stp	x29, x30, [sp, #16]
  40e858:	add	x29, sp, #0x10
  40e85c:	stp	x19, x20, [sp, #32]
  40e860:	stp	x21, x22, [sp, #48]
  40e864:	stp	x23, x24, [sp, #64]
  40e868:	stp	x25, x26, [sp, #80]
  40e86c:	mov	x22, x0
  40e870:	str	x1, [sp, #120]
  40e874:	mov	x20, x2
  40e878:	mov	x23, x3
  40e87c:	and	w0, w4, #0xff
  40e880:	str	w0, [sp, #140]
  40e884:	str	w5, [sp, #168]
  40e888:	mov	w19, w6
  40e88c:	str	x7, [sp, #152]
  40e890:	ldr	w24, [x3, #8]
  40e894:	ldr	x25, [x3, #48]
  40e898:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2af4>
  40e89c:	add	x0, x0, #0x1f0
  40e8a0:	cmp	x25, #0x0
  40e8a4:	csel	x25, x0, x25, eq  // eq = none
  40e8a8:	cmp	w24, #0xc
  40e8ac:	b.le	40e8e0 <__fxstatat@plt+0xbe90>
  40e8b0:	sub	w24, w24, #0xc
  40e8b4:	ldrb	w0, [x20]
  40e8b8:	cbz	w0, 40ff28 <__fxstatat@plt+0xd4d8>
  40e8bc:	stp	x27, x28, [sp, #96]
  40e8c0:	mov	x21, #0x0                   	// #0
  40e8c4:	mov	x27, #0x2500                	// #9472
  40e8c8:	movk	x27, #0x1000, lsl #48
  40e8cc:	add	x1, sp, #0xef
  40e8d0:	str	x1, [sp, #144]
  40e8d4:	add	x1, sp, #0xf1
  40e8d8:	str	x1, [sp, #160]
  40e8dc:	b	40e91c <__fxstatat@plt+0xbecc>
  40e8e0:	cmp	w24, #0x0
  40e8e4:	mov	w0, #0xc                   	// #12
  40e8e8:	csel	w24, w24, w0, ne  // ne = any
  40e8ec:	b	40e8b4 <__fxstatat@plt+0xbe64>
  40e8f0:	cbz	x22, 40e904 <__fxstatat@plt+0xbeb4>
  40e8f4:	cmp	x0, #0x1
  40e8f8:	b.hi	40e970 <__fxstatat@plt+0xbf20>  // b.pmore
  40e8fc:	ldrb	w0, [x20]
  40e900:	strb	w0, [x22], #1
  40e904:	add	x21, x21, x26
  40e908:	mov	x26, x20
  40e90c:	add	x20, x26, #0x1
  40e910:	ldrb	w0, [x26, #1]
  40e914:	mov	w19, #0xffffffff            	// #-1
  40e918:	cbz	w0, 40ff0c <__fxstatat@plt+0xd4bc>
  40e91c:	cmp	w0, #0x25
  40e920:	b.eq	40ea14 <__fxstatat@plt+0xbfc4>  // b.none
  40e924:	cmp	w19, #0x0
  40e928:	csel	w0, w19, wzr, ge  // ge = tcont
  40e92c:	sxtw	x0, w0
  40e930:	cmp	x0, #0x0
  40e934:	csinc	x26, x0, xzr, ne  // ne = any
  40e938:	ldr	x1, [sp, #120]
  40e93c:	sub	x1, x1, x21
  40e940:	cmp	x1, x26
  40e944:	b.hi	40e8f0 <__fxstatat@plt+0xbea0>  // b.pmore
  40e948:	mov	x21, #0x0                   	// #0
  40e94c:	ldp	x27, x28, [sp, #96]
  40e950:	mov	x0, x21
  40e954:	ldp	x19, x20, [sp, #32]
  40e958:	ldp	x21, x22, [sp, #48]
  40e95c:	ldp	x23, x24, [sp, #64]
  40e960:	ldp	x25, x26, [sp, #80]
  40e964:	ldp	x29, x30, [sp, #16]
  40e968:	add	sp, sp, #0x4f0
  40e96c:	ret
  40e970:	sxtw	x19, w19
  40e974:	sub	x19, x19, #0x1
  40e978:	mov	x2, x19
  40e97c:	mov	w1, #0x20                  	// #32
  40e980:	mov	x0, x22
  40e984:	bl	402680 <memset@plt>
  40e988:	add	x22, x22, x19
  40e98c:	b	40e8fc <__fxstatat@plt+0xbeac>
  40e990:	str	w2, [sp, #172]
  40e994:	ldrb	w2, [x20, #1]!
  40e998:	sub	w0, w2, #0x23
  40e99c:	and	w0, w0, #0xff
  40e9a0:	cmp	w0, #0x3c
  40e9a4:	b.hi	40e9bc <__fxstatat@plt+0xbf6c>  // b.pmore
  40e9a8:	lsl	x1, x4, x0
  40e9ac:	tst	x1, x27
  40e9b0:	b.ne	40e990 <__fxstatat@plt+0xbf40>  // b.any
  40e9b4:	tbnz	x1, #59, 40ea04 <__fxstatat@plt+0xbfb4>
  40e9b8:	cbz	w0, 40ea0c <__fxstatat@plt+0xbfbc>
  40e9bc:	sub	w2, w2, #0x30
  40e9c0:	cmp	w2, #0x9
  40e9c4:	b.ls	40ea2c <__fxstatat@plt+0xbfdc>  // b.plast
  40e9c8:	ldrb	w3, [x20]
  40e9cc:	cmp	w3, #0x45
  40e9d0:	b.eq	40ea88 <__fxstatat@plt+0xc038>  // b.none
  40e9d4:	cmp	w3, #0x4f
  40e9d8:	b.eq	40ea88 <__fxstatat@plt+0xc038>  // b.none
  40e9dc:	ldrb	w4, [x20]
  40e9e0:	mov	w1, w4
  40e9e4:	cmp	w4, #0x7a
  40e9e8:	b.hi	40fdfc <__fxstatat@plt+0xd3ac>  // b.pmore
  40e9ec:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40e9f0:	add	x0, x0, #0xe04
  40e9f4:	ldrh	w0, [x0, w4, uxtw #1]
  40e9f8:	adr	x2, 40ea04 <__fxstatat@plt+0xbfb4>
  40e9fc:	add	x0, x2, w0, sxth #2
  40ea00:	br	x0
  40ea04:	mov	w28, #0x1                   	// #1
  40ea08:	b	40e994 <__fxstatat@plt+0xbf44>
  40ea0c:	str	w3, [sp, #128]
  40ea10:	b	40e994 <__fxstatat@plt+0xbf44>
  40ea14:	ldr	w28, [sp, #140]
  40ea18:	str	wzr, [sp, #128]
  40ea1c:	str	wzr, [sp, #172]
  40ea20:	mov	x4, #0x1                   	// #1
  40ea24:	mov	w3, #0x1                   	// #1
  40ea28:	b	40e994 <__fxstatat@plt+0xbf44>
  40ea2c:	mov	w19, #0x0                   	// #0
  40ea30:	mov	w1, #0xcccc                	// #52428
  40ea34:	movk	w1, #0xccc, lsl #16
  40ea38:	mov	w2, #0x7fffffff            	// #2147483647
  40ea3c:	b	40ea68 <__fxstatat@plt+0xc018>
  40ea40:	ldrb	w0, [x20]
  40ea44:	cmp	w0, #0x37
  40ea48:	b.ls	40ea74 <__fxstatat@plt+0xc024>  // b.plast
  40ea4c:	mov	w19, w2
  40ea50:	b	40ea58 <__fxstatat@plt+0xc008>
  40ea54:	mov	w19, w2
  40ea58:	ldrb	w0, [x20, #1]!
  40ea5c:	sub	w0, w0, #0x30
  40ea60:	cmp	w0, #0x9
  40ea64:	b.hi	40e9c8 <__fxstatat@plt+0xbf78>  // b.pmore
  40ea68:	cmp	w19, w1
  40ea6c:	b.gt	40ea54 <__fxstatat@plt+0xc004>
  40ea70:	b.eq	40ea40 <__fxstatat@plt+0xbff0>  // b.none
  40ea74:	add	w19, w19, w19, lsl #2
  40ea78:	ldrb	w0, [x20]
  40ea7c:	sub	w0, w0, #0x30
  40ea80:	add	w19, w0, w19, lsl #1
  40ea84:	b	40ea58 <__fxstatat@plt+0xc008>
  40ea88:	str	w3, [sp, #176]
  40ea8c:	add	x26, x20, #0x1
  40ea90:	ldrb	w4, [x20, #1]
  40ea94:	mov	w1, w4
  40ea98:	cmp	w4, #0x7a
  40ea9c:	b.hi	40fdf8 <__fxstatat@plt+0xd3a8>  // b.pmore
  40eaa0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40eaa4:	add	x0, x0, #0xefc
  40eaa8:	ldrh	w0, [x0, w4, uxtw #1]
  40eaac:	adr	x2, 40eab8 <__fxstatat@plt+0xc068>
  40eab0:	add	x0, x2, w0, sxth #2
  40eab4:	br	x0
  40eab8:	mov	x26, x20
  40eabc:	str	wzr, [sp, #176]
  40eac0:	str	wzr, [sp, #184]
  40eac4:	ldr	w0, [sp, #128]
  40eac8:	cmp	w0, #0x0
  40eacc:	ldr	w1, [sp, #184]
  40ead0:	csel	w1, w1, w0, eq  // eq = none
  40ead4:	str	w1, [sp, #184]
  40ead8:	mov	w1, #0x70                  	// #112
  40eadc:	csel	w28, w28, wzr, eq  // eq = none
  40eae0:	mov	w0, #0x20                  	// #32
  40eae4:	strb	w0, [sp, #216]
  40eae8:	mov	w0, #0x25                  	// #37
  40eaec:	strb	w0, [sp, #217]
  40eaf0:	add	x0, sp, #0xda
  40eaf4:	ldr	w2, [sp, #176]
  40eaf8:	cbz	w2, 40f03c <__fxstatat@plt+0xc5ec>
  40eafc:	ldr	w3, [sp, #176]
  40eb00:	str	wzr, [sp, #176]
  40eb04:	b	40f034 <__fxstatat@plt+0xc5e4>
  40eb08:	mov	x20, x26
  40eb0c:	b	40eb14 <__fxstatat@plt+0xc0c4>
  40eb10:	mov	w3, #0x0                   	// #0
  40eb14:	add	x26, x20, #0x1
  40eb18:	ldrb	w0, [x20, #1]
  40eb1c:	cmp	w0, #0x3a
  40eb20:	b.eq	40fd50 <__fxstatat@plt+0xd300>  // b.none
  40eb24:	mov	x7, #0x1                   	// #1
  40eb28:	cmp	w0, #0x7a
  40eb2c:	b.ne	40fe1c <__fxstatat@plt+0xd3cc>  // b.any
  40eb30:	ldr	w0, [x23, #32]
  40eb34:	tbnz	w0, #31, 40e90c <__fxstatat@plt+0xbebc>
  40eb38:	ldr	x6, [x23, #40]
  40eb3c:	mov	w5, #0x1                   	// #1
  40eb40:	tbnz	w6, #31, 40eb58 <__fxstatat@plt+0xc108>
  40eb44:	mov	w5, #0x0                   	// #0
  40eb48:	cbnz	w6, 40eb58 <__fxstatat@plt+0xc108>
  40eb4c:	ldrb	w0, [x25]
  40eb50:	cmp	w0, #0x2d
  40eb54:	cset	w5, eq  // eq = none
  40eb58:	mov	w2, #0xb3c5                	// #46021
  40eb5c:	movk	w2, #0x91a2, lsl #16
  40eb60:	smull	x2, w6, w2
  40eb64:	lsr	x2, x2, #32
  40eb68:	add	w2, w2, w6
  40eb6c:	asr	w2, w2, #11
  40eb70:	asr	w8, w6, #31
  40eb74:	sub	w2, w2, w8
  40eb78:	mov	w4, #0x8889                	// #34953
  40eb7c:	movk	w4, #0x8888, lsl #16
  40eb80:	smull	x0, w6, w4
  40eb84:	lsr	x0, x0, #32
  40eb88:	add	w0, w0, w6
  40eb8c:	asr	w0, w0, #5
  40eb90:	sub	w0, w0, w8
  40eb94:	smull	x4, w0, w4
  40eb98:	lsr	x4, x4, #32
  40eb9c:	add	w4, w0, w4
  40eba0:	asr	w4, w4, #5
  40eba4:	sub	w8, w4, w0, asr #31
  40eba8:	lsl	w4, w8, #4
  40ebac:	sub	w4, w4, w8
  40ebb0:	sub	w8, w0, w4, lsl #2
  40ebb4:	lsl	w4, w0, #4
  40ebb8:	sub	w0, w4, w0
  40ebbc:	sub	w0, w6, w0, lsl #2
  40ebc0:	cmp	x7, #0x2
  40ebc4:	b.eq	40fdc4 <__fxstatat@plt+0xd374>  // b.none
  40ebc8:	b.hi	40fd84 <__fxstatat@plt+0xd334>  // b.pmore
  40ebcc:	cbz	x7, 40fda8 <__fxstatat@plt+0xd358>
  40ebd0:	mov	w0, #0x64                  	// #100
  40ebd4:	madd	w2, w2, w0, w8
  40ebd8:	mov	w8, #0x4                   	// #4
  40ebdc:	mov	w7, #0x1                   	// #1
  40ebe0:	mov	w0, #0x6                   	// #6
  40ebe4:	str	w0, [sp, #176]
  40ebe8:	b	40f010 <__fxstatat@plt+0xc5c0>
  40ebec:	cbnz	w3, 40fed4 <__fxstatat@plt+0xd484>
  40ebf0:	cmp	w19, #0x0
  40ebf4:	csel	w0, w19, wzr, ge  // ge = tcont
  40ebf8:	sxtw	x0, w0
  40ebfc:	cmp	x0, #0x0
  40ec00:	csinc	x20, x0, xzr, ne  // ne = any
  40ec04:	ldr	x1, [sp, #120]
  40ec08:	sub	x1, x1, x21
  40ec0c:	cmp	x1, x20
  40ec10:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40ec14:	cbz	x22, 40ec58 <__fxstatat@plt+0xc208>
  40ec18:	cmp	x0, #0x1
  40ec1c:	b.ls	40ec50 <__fxstatat@plt+0xc200>  // b.plast
  40ec20:	sxtw	x19, w19
  40ec24:	sub	x19, x19, #0x1
  40ec28:	ldr	w1, [sp, #172]
  40ec2c:	cmp	w1, #0x30
  40ec30:	mov	w0, #0x2b                  	// #43
  40ec34:	ccmp	w1, w0, #0x4, ne  // ne = any
  40ec38:	b.ne	40ec68 <__fxstatat@plt+0xc218>  // b.any
  40ec3c:	mov	x2, x19
  40ec40:	mov	w1, #0x30                  	// #48
  40ec44:	mov	x0, x22
  40ec48:	bl	402680 <memset@plt>
  40ec4c:	add	x22, x22, x19
  40ec50:	ldrb	w0, [x26]
  40ec54:	strb	w0, [x22], #1
  40ec58:	add	x21, x21, x20
  40ec5c:	b	40e90c <__fxstatat@plt+0xbebc>
  40ec60:	mov	x26, x20
  40ec64:	b	40ebf0 <__fxstatat@plt+0xc1a0>
  40ec68:	mov	x2, x19
  40ec6c:	mov	w1, #0x20                  	// #32
  40ec70:	mov	x0, x22
  40ec74:	bl	402680 <memset@plt>
  40ec78:	add	x22, x22, x19
  40ec7c:	b	40ec50 <__fxstatat@plt+0xc200>
  40ec80:	mov	x26, x20
  40ec84:	str	wzr, [sp, #176]
  40ec88:	ldr	w0, [sp, #176]
  40ec8c:	cbnz	w0, 40fe20 <__fxstatat@plt+0xd3d0>
  40ec90:	ldr	w0, [sp, #128]
  40ec94:	cmp	w0, #0x0
  40ec98:	csel	w28, w28, w0, eq  // eq = none
  40ec9c:	mov	w1, #0x61                  	// #97
  40eca0:	mov	w0, #0x20                  	// #32
  40eca4:	strb	w0, [sp, #216]
  40eca8:	mov	w0, #0x25                  	// #37
  40ecac:	strb	w0, [sp, #217]
  40ecb0:	str	wzr, [sp, #184]
  40ecb4:	str	wzr, [sp, #176]
  40ecb8:	add	x0, sp, #0xda
  40ecbc:	b	40f03c <__fxstatat@plt+0xc5ec>
  40ecc0:	mov	x26, x20
  40ecc4:	str	wzr, [sp, #176]
  40ecc8:	ldr	w0, [sp, #176]
  40eccc:	cbnz	w0, 40fe20 <__fxstatat@plt+0xd3d0>
  40ecd0:	ldr	w0, [sp, #128]
  40ecd4:	cmp	w0, #0x0
  40ecd8:	csel	w28, w28, w0, eq  // eq = none
  40ecdc:	mov	w1, #0x41                  	// #65
  40ece0:	b	40eca0 <__fxstatat@plt+0xc250>
  40ece4:	mov	x26, x20
  40ece8:	str	wzr, [sp, #176]
  40ecec:	ldr	w0, [sp, #128]
  40ecf0:	cmp	w0, #0x0
  40ecf4:	csel	w28, w28, w0, eq  // eq = none
  40ecf8:	ldr	w0, [sp, #176]
  40ecfc:	cmp	w0, #0x45
  40ed00:	b.eq	40fe14 <__fxstatat@plt+0xd3c4>  // b.none
  40ed04:	str	wzr, [sp, #184]
  40ed08:	b	40eae0 <__fxstatat@plt+0xc090>
  40ed0c:	mov	x26, x20
  40ed10:	str	wzr, [sp, #176]
  40ed14:	ldr	w0, [sp, #176]
  40ed18:	cmp	w0, #0x45
  40ed1c:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40ed20:	ldr	w0, [sp, #128]
  40ed24:	cmp	w0, #0x0
  40ed28:	csel	w28, w28, w0, eq  // eq = none
  40ed2c:	mov	w1, #0x42                  	// #66
  40ed30:	str	wzr, [sp, #184]
  40ed34:	b	40eae0 <__fxstatat@plt+0xc090>
  40ed38:	mov	x26, x20
  40ed3c:	str	wzr, [sp, #176]
  40ed40:	ldr	w0, [sp, #176]
  40ed44:	cmp	w0, #0x4f
  40ed48:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40ed4c:	mov	w1, #0x63                  	// #99
  40ed50:	str	wzr, [sp, #184]
  40ed54:	b	40eae0 <__fxstatat@plt+0xc090>
  40ed58:	mov	x26, x20
  40ed5c:	mov	w0, #0xffffffff            	// #-1
  40ed60:	str	w0, [sp, #176]
  40ed64:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40ed68:	add	x0, x0, #0xdf0
  40ed6c:	str	x0, [sp, #128]
  40ed70:	ldr	w0, [sp, #1272]
  40ed74:	str	w0, [sp, #8]
  40ed78:	ldr	x0, [sp, #1264]
  40ed7c:	str	x0, [sp]
  40ed80:	ldr	x7, [sp, #152]
  40ed84:	ldr	w6, [sp, #176]
  40ed88:	ldr	w5, [sp, #172]
  40ed8c:	mov	w4, w28
  40ed90:	mov	x3, x23
  40ed94:	ldr	x2, [sp, #128]
  40ed98:	mov	x1, #0xffffffffffffffff    	// #-1
  40ed9c:	mov	x0, #0x0                   	// #0
  40eda0:	bl	40e850 <__fxstatat@plt+0xbe00>
  40eda4:	mov	x20, x0
  40eda8:	cmp	w19, #0x0
  40edac:	csel	w0, w19, wzr, ge  // ge = tcont
  40edb0:	sxtw	x0, w0
  40edb4:	cmp	x20, x0
  40edb8:	csel	x1, x20, x0, cs  // cs = hs, nlast
  40edbc:	str	x1, [sp, #184]
  40edc0:	ldr	x2, [sp, #120]
  40edc4:	sub	x2, x2, x21
  40edc8:	str	x2, [sp, #192]
  40edcc:	cmp	x2, x1
  40edd0:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40edd4:	cbz	x22, 40ee48 <__fxstatat@plt+0xc3f8>
  40edd8:	cmp	x20, x0
  40eddc:	b.cs	40ee10 <__fxstatat@plt+0xc3c0>  // b.hs, b.nlast
  40ede0:	sxtw	x19, w19
  40ede4:	sub	x19, x19, x20
  40ede8:	ldr	w1, [sp, #172]
  40edec:	cmp	w1, #0x30
  40edf0:	mov	w0, #0x2b                  	// #43
  40edf4:	ccmp	w1, w0, #0x4, ne  // ne = any
  40edf8:	b.ne	40eea8 <__fxstatat@plt+0xc458>  // b.any
  40edfc:	mov	x2, x19
  40ee00:	mov	w1, #0x30                  	// #48
  40ee04:	mov	x0, x22
  40ee08:	bl	402680 <memset@plt>
  40ee0c:	add	x22, x22, x19
  40ee10:	ldr	w0, [sp, #1272]
  40ee14:	str	w0, [sp, #8]
  40ee18:	ldr	x0, [sp, #1264]
  40ee1c:	str	x0, [sp]
  40ee20:	ldr	x7, [sp, #152]
  40ee24:	ldr	w6, [sp, #176]
  40ee28:	ldr	w5, [sp, #172]
  40ee2c:	mov	w4, w28
  40ee30:	mov	x3, x23
  40ee34:	ldr	x2, [sp, #128]
  40ee38:	ldr	x1, [sp, #192]
  40ee3c:	mov	x0, x22
  40ee40:	bl	40e850 <__fxstatat@plt+0xbe00>
  40ee44:	add	x22, x22, x20
  40ee48:	ldr	x0, [sp, #184]
  40ee4c:	add	x21, x21, x0
  40ee50:	b	40e90c <__fxstatat@plt+0xbebc>
  40ee54:	mov	w0, #0xffffffff            	// #-1
  40ee58:	str	w0, [sp, #176]
  40ee5c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40ee60:	add	x0, x0, #0xdd0
  40ee64:	str	x0, [sp, #128]
  40ee68:	b	40ed70 <__fxstatat@plt+0xc320>
  40ee6c:	mov	w0, #0x4                   	// #4
  40ee70:	str	w0, [sp, #176]
  40ee74:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40ee78:	add	x0, x0, #0xde0
  40ee7c:	str	x0, [sp, #128]
  40ee80:	mov	w0, #0x2b                  	// #43
  40ee84:	str	w0, [sp, #172]
  40ee88:	b	40ed70 <__fxstatat@plt+0xc320>
  40ee8c:	mov	x26, x20
  40ee90:	mov	w0, #0xffffffff            	// #-1
  40ee94:	str	w0, [sp, #176]
  40ee98:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40ee9c:	add	x0, x0, #0xdd0
  40eea0:	str	x0, [sp, #128]
  40eea4:	b	40ed70 <__fxstatat@plt+0xc320>
  40eea8:	mov	x2, x19
  40eeac:	mov	w1, #0x20                  	// #32
  40eeb0:	mov	x0, x22
  40eeb4:	bl	402680 <memset@plt>
  40eeb8:	add	x22, x22, x19
  40eebc:	b	40ee10 <__fxstatat@plt+0xc3c0>
  40eec0:	str	wzr, [sp, #184]
  40eec4:	b	40eae0 <__fxstatat@plt+0xc090>
  40eec8:	mov	x26, x20
  40eecc:	str	wzr, [sp, #176]
  40eed0:	str	wzr, [sp, #184]
  40eed4:	b	40eae0 <__fxstatat@plt+0xc090>
  40eed8:	mov	x2, x19
  40eedc:	mov	w1, #0x20                  	// #32
  40eee0:	mov	x0, x22
  40eee4:	bl	402680 <memset@plt>
  40eee8:	add	x22, x22, x19
  40eeec:	b	40f0cc <__fxstatat@plt+0xc67c>
  40eef0:	mov	x2, x20
  40eef4:	ldr	x1, [sp, #160]
  40eef8:	mov	x0, x22
  40eefc:	bl	40e7a8 <__fxstatat@plt+0xbd58>
  40ef00:	b	40f0e8 <__fxstatat@plt+0xc698>
  40ef04:	mov	x2, x20
  40ef08:	ldr	x1, [sp, #160]
  40ef0c:	mov	x0, x22
  40ef10:	bl	4023c0 <memcpy@plt>
  40ef14:	b	40f0e8 <__fxstatat@plt+0xc698>
  40ef18:	mov	x26, x20
  40ef1c:	mov	w3, #0x0                   	// #0
  40ef20:	cmp	w3, #0x45
  40ef24:	b.eq	40ff30 <__fxstatat@plt+0xd4e0>  // b.none
  40ef28:	ldr	w4, [x23, #20]
  40ef2c:	mov	w0, #0x851f                	// #34079
  40ef30:	movk	w0, #0x51eb, lsl #16
  40ef34:	smull	x0, w4, w0
  40ef38:	asr	x0, x0, #37
  40ef3c:	sub	w0, w0, w4, asr #31
  40ef40:	add	w2, w0, #0x13
  40ef44:	mov	w5, #0x64                  	// #100
  40ef48:	msub	w0, w0, w5, w4
  40ef4c:	cmp	w0, #0x0
  40ef50:	ccmp	w2, #0x0, #0x4, lt  // lt = tstop
  40ef54:	cset	w0, gt
  40ef58:	cmn	w4, #0x76c
  40ef5c:	cset	w5, lt  // lt = tstop
  40ef60:	sub	w2, w2, w0
  40ef64:	mov	w0, #0x2                   	// #2
  40ef68:	str	w0, [sp, #176]
  40ef6c:	b	40fbe8 <__fxstatat@plt+0xd198>
  40ef70:	mov	x26, x20
  40ef74:	str	wzr, [sp, #176]
  40ef78:	ldr	w0, [sp, #176]
  40ef7c:	cmp	w0, #0x4f
  40ef80:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40ef84:	mov	w1, #0x78                  	// #120
  40ef88:	str	wzr, [sp, #184]
  40ef8c:	b	40eae0 <__fxstatat@plt+0xc090>
  40ef90:	mov	x26, x20
  40ef94:	str	wzr, [sp, #176]
  40ef98:	ldr	w0, [sp, #176]
  40ef9c:	cbnz	w0, 40fe20 <__fxstatat@plt+0xd3d0>
  40efa0:	mov	w0, #0xffffffff            	// #-1
  40efa4:	str	w0, [sp, #176]
  40efa8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40efac:	add	x0, x0, #0xdf8
  40efb0:	str	x0, [sp, #128]
  40efb4:	b	40ed70 <__fxstatat@plt+0xc320>
  40efb8:	mov	x26, x20
  40efbc:	mov	w3, #0x0                   	// #0
  40efc0:	cmp	w3, #0x45
  40efc4:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40efc8:	ldr	w2, [x23, #12]
  40efcc:	mov	w0, #0x2                   	// #2
  40efd0:	str	w0, [sp, #176]
  40efd4:	b	40f004 <__fxstatat@plt+0xc5b4>
  40efd8:	mov	x26, x20
  40efdc:	mov	w3, #0x0                   	// #0
  40efe0:	cmp	w3, #0x45
  40efe4:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40efe8:	ldr	w2, [x23, #12]
  40efec:	mov	w0, #0x2                   	// #2
  40eff0:	str	w0, [sp, #176]
  40eff4:	ldr	w0, [sp, #172]
  40eff8:	cbnz	w0, 40f004 <__fxstatat@plt+0xc5b4>
  40effc:	mov	w0, #0x5f                  	// #95
  40f000:	str	w0, [sp, #172]
  40f004:	lsr	w5, w2, #31
  40f008:	mov	w8, #0x0                   	// #0
  40f00c:	mov	w7, #0x0                   	// #0
  40f010:	cmp	w3, #0x4f
  40f014:	eor	w0, w5, #0x1
  40f018:	csel	w0, w0, wzr, eq  // eq = none
  40f01c:	cbz	w0, 40f128 <__fxstatat@plt+0xc6d8>
  40f020:	mov	w0, #0x20                  	// #32
  40f024:	strb	w0, [sp, #216]
  40f028:	mov	w0, #0x25                  	// #37
  40f02c:	strb	w0, [sp, #217]
  40f030:	str	wzr, [sp, #184]
  40f034:	strb	w3, [sp, #218]
  40f038:	add	x0, sp, #0xdb
  40f03c:	strb	w1, [x0]
  40f040:	strb	wzr, [x0, #1]
  40f044:	mov	x3, x23
  40f048:	add	x2, sp, #0xd8
  40f04c:	mov	x1, #0x400                 	// #1024
  40f050:	add	x0, sp, #0xf0
  40f054:	bl	402500 <strftime@plt>
  40f058:	cbz	x0, 40e90c <__fxstatat@plt+0xbebc>
  40f05c:	sub	x20, x0, #0x1
  40f060:	cmp	w19, #0x0
  40f064:	csel	w0, w19, wzr, ge  // ge = tcont
  40f068:	sxtw	x0, w0
  40f06c:	cmp	x20, x0
  40f070:	csel	x2, x20, x0, cs  // cs = hs, nlast
  40f074:	str	x2, [sp, #128]
  40f078:	ldr	x1, [sp, #120]
  40f07c:	sub	x1, x1, x21
  40f080:	cmp	x1, x2
  40f084:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40f088:	cbz	x22, 40f0ec <__fxstatat@plt+0xc69c>
  40f08c:	ldr	w1, [sp, #176]
  40f090:	cmp	w1, #0x0
  40f094:	ccmp	x20, x0, #0x2, eq  // eq = none
  40f098:	b.cs	40f0cc <__fxstatat@plt+0xc67c>  // b.hs, b.nlast
  40f09c:	sxtw	x19, w19
  40f0a0:	sub	x19, x19, x20
  40f0a4:	ldr	w1, [sp, #172]
  40f0a8:	cmp	w1, #0x30
  40f0ac:	mov	w0, #0x2b                  	// #43
  40f0b0:	ccmp	w1, w0, #0x4, ne  // ne = any
  40f0b4:	b.ne	40eed8 <__fxstatat@plt+0xc488>  // b.any
  40f0b8:	mov	x2, x19
  40f0bc:	mov	w1, #0x30                  	// #48
  40f0c0:	mov	x0, x22
  40f0c4:	bl	402680 <memset@plt>
  40f0c8:	add	x22, x22, x19
  40f0cc:	ldr	w0, [sp, #184]
  40f0d0:	cbnz	w0, 40eef0 <__fxstatat@plt+0xc4a0>
  40f0d4:	cbz	w28, 40ef04 <__fxstatat@plt+0xc4b4>
  40f0d8:	mov	x2, x20
  40f0dc:	ldr	x1, [sp, #160]
  40f0e0:	mov	x0, x22
  40f0e4:	bl	40e7fc <__fxstatat@plt+0xbdac>
  40f0e8:	add	x22, x22, x20
  40f0ec:	ldr	x0, [sp, #128]
  40f0f0:	add	x21, x21, x0
  40f0f4:	b	40e90c <__fxstatat@plt+0xbebc>
  40f0f8:	ldr	w6, [sp, #176]
  40f0fc:	cmp	w6, #0x2
  40f100:	mov	w0, #0x63                  	// #99
  40f104:	mov	w4, #0x270f                	// #9999
  40f108:	csel	w0, w0, w4, eq  // eq = none
  40f10c:	cmp	w2, w0
  40f110:	ccmp	w19, w6, #0x0, ls  // ls = plast
  40f114:	cset	w7, gt
  40f118:	b	40fc08 <__fxstatat@plt+0xd1b8>
  40f11c:	ldr	w2, [sp, #1272]
  40f120:	str	w19, [sp, #176]
  40f124:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f128:	cmp	w5, #0x0
  40f12c:	cneg	w2, w2, ne  // ne = any
  40f130:	add	x20, sp, #0xef
  40f134:	mov	w6, #0x3a                  	// #58
  40f138:	mov	w4, #0xcccd                	// #52429
  40f13c:	movk	w4, #0xcccc, lsl #16
  40f140:	b	40f174 <__fxstatat@plt+0xc724>
  40f144:	asr	w8, w8, #1
  40f148:	sub	x20, x3, #0x1
  40f14c:	umull	x1, w2, w4
  40f150:	lsr	x1, x1, #35
  40f154:	add	w0, w1, w1, lsl #2
  40f158:	sub	w0, w2, w0, lsl #1
  40f15c:	add	w0, w0, #0x30
  40f160:	sturb	w0, [x3, #-1]
  40f164:	cmp	w8, #0x0
  40f168:	ccmp	w2, #0x9, #0x2, eq  // eq = none
  40f16c:	b.ls	40f188 <__fxstatat@plt+0xc738>  // b.plast
  40f170:	mov	w2, w1
  40f174:	mov	x3, x20
  40f178:	tbz	w8, #0, 40f144 <__fxstatat@plt+0xc6f4>
  40f17c:	sub	x3, x20, #0x1
  40f180:	sturb	w6, [x20, #-1]
  40f184:	b	40f144 <__fxstatat@plt+0xc6f4>
  40f188:	ldr	w0, [sp, #176]
  40f18c:	cmp	w19, w0
  40f190:	csel	w0, w19, w0, ge  // ge = tcont
  40f194:	str	w0, [sp, #128]
  40f198:	cbnz	w5, 40ff54 <__fxstatat@plt+0xd504>
  40f19c:	mov	w0, #0x2b                  	// #43
  40f1a0:	str	w0, [sp, #176]
  40f1a4:	cbnz	w7, 40ff5c <__fxstatat@plt+0xd50c>
  40f1a8:	ldr	w0, [sp, #172]
  40f1ac:	cmp	w0, #0x2d
  40f1b0:	b.eq	410058 <__fxstatat@plt+0xd608>  // b.none
  40f1b4:	ldr	x0, [sp, #144]
  40f1b8:	sub	x0, x0, x20
  40f1bc:	ldr	w1, [sp, #128]
  40f1c0:	sub	w0, w1, w0
  40f1c4:	str	w0, [sp, #184]
  40f1c8:	cmp	w0, #0x0
  40f1cc:	b.le	410058 <__fxstatat@plt+0xd608>
  40f1d0:	str	wzr, [sp, #176]
  40f1d4:	str	wzr, [sp, #192]
  40f1d8:	b	40ff98 <__fxstatat@plt+0xd548>
  40f1dc:	cmp	w19, #0x0
  40f1e0:	csel	w0, w19, wzr, ge  // ge = tcont
  40f1e4:	sxtw	x0, w0
  40f1e8:	cmp	x0, #0x0
  40f1ec:	csinc	x2, x0, xzr, ne  // ne = any
  40f1f0:	str	x2, [sp, #184]
  40f1f4:	ldr	x1, [sp, #120]
  40f1f8:	sub	x1, x1, x21
  40f1fc:	cmp	x1, x2
  40f200:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40f204:	cbz	x22, 40f244 <__fxstatat@plt+0xc7f4>
  40f208:	ldr	w1, [sp, #128]
  40f20c:	cmp	w1, #0x0
  40f210:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  40f214:	b.ls	40f23c <__fxstatat@plt+0xc7ec>  // b.plast
  40f218:	sxtw	x0, w19
  40f21c:	sub	x0, x0, #0x1
  40f220:	str	x0, [sp, #192]
  40f224:	mov	x2, x0
  40f228:	mov	w1, #0x20                  	// #32
  40f22c:	mov	x0, x22
  40f230:	bl	402680 <memset@plt>
  40f234:	ldr	x0, [sp, #192]
  40f238:	add	x22, x22, x0
  40f23c:	ldrb	w0, [sp, #176]
  40f240:	strb	w0, [x22], #1
  40f244:	ldr	x0, [sp, #184]
  40f248:	add	x21, x21, x0
  40f24c:	b	410058 <__fxstatat@plt+0xd608>
  40f250:	ldr	w2, [sp, #184]
  40f254:	sxtw	x1, w2
  40f258:	str	x1, [sp, #200]
  40f25c:	ldr	x0, [sp, #120]
  40f260:	sub	x0, x0, x21
  40f264:	cmp	x0, w2, sxtw
  40f268:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40f26c:	cbz	x22, 40f288 <__fxstatat@plt+0xc838>
  40f270:	mov	x2, x1
  40f274:	mov	w1, #0x20                  	// #32
  40f278:	mov	x0, x22
  40f27c:	bl	402680 <memset@plt>
  40f280:	ldr	x1, [sp, #200]
  40f284:	add	x22, x22, x1
  40f288:	ldr	x0, [sp, #200]
  40f28c:	add	x21, x21, x0
  40f290:	ldr	w1, [sp, #184]
  40f294:	sub	w0, w19, w1
  40f298:	cmp	w19, w1
  40f29c:	csel	w19, w0, wzr, gt
  40f2a0:	ldr	w0, [sp, #192]
  40f2a4:	cbz	w0, 410058 <__fxstatat@plt+0xd608>
  40f2a8:	cmp	w19, #0x0
  40f2ac:	csel	w0, w19, wzr, ge  // ge = tcont
  40f2b0:	sxtw	x0, w0
  40f2b4:	cmp	x0, #0x0
  40f2b8:	csinc	x2, x0, xzr, ne  // ne = any
  40f2bc:	str	x2, [sp, #184]
  40f2c0:	ldr	x1, [sp, #120]
  40f2c4:	sub	x1, x1, x21
  40f2c8:	cmp	x1, x2
  40f2cc:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40f2d0:	cbz	x22, 40f310 <__fxstatat@plt+0xc8c0>
  40f2d4:	ldr	w1, [sp, #128]
  40f2d8:	cmp	w1, #0x0
  40f2dc:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  40f2e0:	b.ls	40f308 <__fxstatat@plt+0xc8b8>  // b.plast
  40f2e4:	sxtw	x0, w19
  40f2e8:	sub	x0, x0, #0x1
  40f2ec:	str	x0, [sp, #192]
  40f2f0:	mov	x2, x0
  40f2f4:	mov	w1, #0x20                  	// #32
  40f2f8:	mov	x0, x22
  40f2fc:	bl	402680 <memset@plt>
  40f300:	ldr	x0, [sp, #192]
  40f304:	add	x22, x22, x0
  40f308:	ldrb	w0, [sp, #176]
  40f30c:	strb	w0, [x22], #1
  40f310:	ldr	x0, [sp, #184]
  40f314:	add	x21, x21, x0
  40f318:	b	410058 <__fxstatat@plt+0xd608>
  40f31c:	mov	x2, x19
  40f320:	mov	w1, #0x20                  	// #32
  40f324:	mov	x0, x22
  40f328:	bl	402680 <memset@plt>
  40f32c:	add	x22, x22, x19
  40f330:	b	410020 <__fxstatat@plt+0xd5d0>
  40f334:	cmp	w19, #0x0
  40f338:	csel	w0, w19, wzr, ge  // ge = tcont
  40f33c:	sxtw	x0, w0
  40f340:	cmp	x0, #0x0
  40f344:	csinc	x2, x0, xzr, ne  // ne = any
  40f348:	str	x2, [sp, #184]
  40f34c:	ldr	x1, [sp, #120]
  40f350:	sub	x1, x1, x21
  40f354:	cmp	x1, x2
  40f358:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40f35c:	cbz	x22, 40f3b0 <__fxstatat@plt+0xc960>
  40f360:	ldr	w1, [sp, #128]
  40f364:	cmp	w1, #0x0
  40f368:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  40f36c:	b.ls	40f3a8 <__fxstatat@plt+0xc958>  // b.plast
  40f370:	sxtw	x0, w19
  40f374:	sub	x1, x0, #0x1
  40f378:	str	x1, [sp, #192]
  40f37c:	ldr	w2, [sp, #172]
  40f380:	cmp	w2, #0x30
  40f384:	mov	w0, #0x2b                  	// #43
  40f388:	ccmp	w2, w0, #0x4, ne  // ne = any
  40f38c:	b.ne	40f3bc <__fxstatat@plt+0xc96c>  // b.any
  40f390:	mov	x2, x1
  40f394:	mov	w1, #0x30                  	// #48
  40f398:	mov	x0, x22
  40f39c:	bl	402680 <memset@plt>
  40f3a0:	ldr	x1, [sp, #192]
  40f3a4:	add	x22, x22, x1
  40f3a8:	ldrb	w0, [sp, #176]
  40f3ac:	strb	w0, [x22], #1
  40f3b0:	ldr	x0, [sp, #184]
  40f3b4:	add	x21, x21, x0
  40f3b8:	b	410058 <__fxstatat@plt+0xd608>
  40f3bc:	ldr	x2, [sp, #192]
  40f3c0:	mov	w1, #0x20                  	// #32
  40f3c4:	mov	x0, x22
  40f3c8:	bl	402680 <memset@plt>
  40f3cc:	ldr	x0, [sp, #192]
  40f3d0:	add	x22, x22, x0
  40f3d4:	b	40f3a8 <__fxstatat@plt+0xc958>
  40f3d8:	mov	x2, x19
  40f3dc:	mov	w1, #0x20                  	// #32
  40f3e0:	mov	x0, x22
  40f3e4:	bl	402680 <memset@plt>
  40f3e8:	add	x22, x22, x19
  40f3ec:	b	4100d0 <__fxstatat@plt+0xd680>
  40f3f0:	ldr	x2, [sp, #176]
  40f3f4:	mov	x1, x20
  40f3f8:	mov	x0, x22
  40f3fc:	bl	4023c0 <memcpy@plt>
  40f400:	b	4100e4 <__fxstatat@plt+0xd694>
  40f404:	mov	x26, x20
  40f408:	str	wzr, [sp, #176]
  40f40c:	ldr	w0, [sp, #176]
  40f410:	cbnz	w0, 40fe20 <__fxstatat@plt+0xd3d0>
  40f414:	ldr	w0, [sp, #172]
  40f418:	cmp	w0, #0x0
  40f41c:	ccmp	w19, #0x0, #0x0, eq  // eq = none
  40f420:	b.lt	40ee6c <__fxstatat@plt+0xc41c>  // b.tstop
  40f424:	subs	w0, w19, #0x6
  40f428:	csel	w0, w0, wzr, pl  // pl = nfrst
  40f42c:	str	w0, [sp, #176]
  40f430:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  40f434:	add	x0, x0, #0xde0
  40f438:	str	x0, [sp, #128]
  40f43c:	b	40ed70 <__fxstatat@plt+0xc320>
  40f440:	mov	x26, x20
  40f444:	mov	w3, #0x0                   	// #0
  40f448:	cmp	w3, #0x45
  40f44c:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f450:	ldr	w2, [x23, #8]
  40f454:	mov	w0, #0x2                   	// #2
  40f458:	str	w0, [sp, #176]
  40f45c:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f460:	mov	x26, x20
  40f464:	mov	w3, #0x0                   	// #0
  40f468:	cmp	w3, #0x45
  40f46c:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f470:	mov	w2, w24
  40f474:	mov	w0, #0x2                   	// #2
  40f478:	str	w0, [sp, #176]
  40f47c:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f480:	mov	x26, x20
  40f484:	mov	w3, #0x0                   	// #0
  40f488:	cmp	w3, #0x45
  40f48c:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f490:	ldr	w2, [x23, #8]
  40f494:	b	40efec <__fxstatat@plt+0xc59c>
  40f498:	mov	x26, x20
  40f49c:	mov	w3, #0x0                   	// #0
  40f4a0:	cmp	w3, #0x45
  40f4a4:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f4a8:	mov	w2, w24
  40f4ac:	b	40efec <__fxstatat@plt+0xc59c>
  40f4b0:	mov	x26, x20
  40f4b4:	mov	w3, #0x0                   	// #0
  40f4b8:	cmp	w3, #0x45
  40f4bc:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f4c0:	ldr	w2, [x23, #28]
  40f4c4:	cmn	w2, #0x1
  40f4c8:	cset	w5, lt  // lt = tstop
  40f4cc:	add	w2, w2, #0x1
  40f4d0:	mov	w8, #0x0                   	// #0
  40f4d4:	mov	w7, #0x0                   	// #0
  40f4d8:	mov	w0, #0x3                   	// #3
  40f4dc:	str	w0, [sp, #176]
  40f4e0:	b	40f010 <__fxstatat@plt+0xc5c0>
  40f4e4:	mov	x26, x20
  40f4e8:	mov	w3, #0x0                   	// #0
  40f4ec:	cmp	w3, #0x45
  40f4f0:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f4f4:	ldr	w2, [x23, #4]
  40f4f8:	mov	w0, #0x2                   	// #2
  40f4fc:	str	w0, [sp, #176]
  40f500:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f504:	mov	x26, x20
  40f508:	mov	w3, #0x0                   	// #0
  40f50c:	cmp	w3, #0x45
  40f510:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f514:	ldr	w2, [x23, #16]
  40f518:	cmn	w2, #0x1
  40f51c:	cset	w5, lt  // lt = tstop
  40f520:	add	w2, w2, #0x1
  40f524:	mov	w8, #0x0                   	// #0
  40f528:	mov	w7, #0x0                   	// #0
  40f52c:	mov	w0, #0x2                   	// #2
  40f530:	str	w0, [sp, #176]
  40f534:	b	40f010 <__fxstatat@plt+0xc5c0>
  40f538:	mov	x26, x20
  40f53c:	mov	w3, #0x0                   	// #0
  40f540:	cmp	w3, #0x45
  40f544:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f548:	cmn	w19, #0x1
  40f54c:	b.ne	40f564 <__fxstatat@plt+0xcb14>  // b.any
  40f550:	ldr	w2, [sp, #1272]
  40f554:	mov	w0, #0x9                   	// #9
  40f558:	str	w0, [sp, #176]
  40f55c:	mov	w19, w0
  40f560:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f564:	cmp	w19, #0x8
  40f568:	b.gt	40f11c <__fxstatat@plt+0xc6cc>
  40f56c:	mov	w4, w19
  40f570:	ldr	w2, [sp, #1272]
  40f574:	mov	w5, #0x6667                	// #26215
  40f578:	movk	w5, #0x6666, lsl #16
  40f57c:	smull	x0, w2, w5
  40f580:	asr	x0, x0, #34
  40f584:	sub	w2, w0, w2, asr #31
  40f588:	add	w4, w4, #0x1
  40f58c:	cmp	w4, #0x9
  40f590:	b.ne	40f57c <__fxstatat@plt+0xcb2c>  // b.any
  40f594:	str	w19, [sp, #176]
  40f598:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f59c:	mov	x26, x20
  40f5a0:	cmp	w19, #0x0
  40f5a4:	csel	w0, w19, wzr, ge  // ge = tcont
  40f5a8:	sxtw	x0, w0
  40f5ac:	cmp	x0, #0x0
  40f5b0:	csinc	x20, x0, xzr, ne  // ne = any
  40f5b4:	ldr	x1, [sp, #120]
  40f5b8:	sub	x1, x1, x21
  40f5bc:	cmp	x1, x20
  40f5c0:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40f5c4:	cbz	x22, 40f608 <__fxstatat@plt+0xcbb8>
  40f5c8:	cmp	x0, #0x1
  40f5cc:	b.ls	40f600 <__fxstatat@plt+0xcbb0>  // b.plast
  40f5d0:	sxtw	x19, w19
  40f5d4:	sub	x19, x19, #0x1
  40f5d8:	ldr	w1, [sp, #172]
  40f5dc:	cmp	w1, #0x30
  40f5e0:	mov	w0, #0x2b                  	// #43
  40f5e4:	ccmp	w1, w0, #0x4, ne  // ne = any
  40f5e8:	b.ne	40f610 <__fxstatat@plt+0xcbc0>  // b.any
  40f5ec:	mov	x2, x19
  40f5f0:	mov	w1, #0x30                  	// #48
  40f5f4:	mov	x0, x22
  40f5f8:	bl	402680 <memset@plt>
  40f5fc:	add	x22, x22, x19
  40f600:	mov	w0, #0xa                   	// #10
  40f604:	strb	w0, [x22], #1
  40f608:	add	x21, x21, x20
  40f60c:	b	40e90c <__fxstatat@plt+0xbebc>
  40f610:	mov	x2, x19
  40f614:	mov	w1, #0x20                  	// #32
  40f618:	mov	x0, x22
  40f61c:	bl	402680 <memset@plt>
  40f620:	add	x22, x22, x19
  40f624:	b	40f600 <__fxstatat@plt+0xcbb0>
  40f628:	mov	w0, #0x1                   	// #1
  40f62c:	str	w0, [sp, #184]
  40f630:	b	40eac4 <__fxstatat@plt+0xc074>
  40f634:	mov	x26, x20
  40f638:	str	wzr, [sp, #176]
  40f63c:	mov	w0, #0x1                   	// #1
  40f640:	str	w0, [sp, #184]
  40f644:	b	40eac4 <__fxstatat@plt+0xc074>
  40f648:	mov	x26, x20
  40f64c:	mov	w3, #0x0                   	// #0
  40f650:	ldr	w0, [x23, #16]
  40f654:	mov	w1, #0x71                  	// #113
  40f658:	mov	w2, #0x1                   	// #1
  40f65c:	str	w2, [sp, #176]
  40f660:	cmp	w3, #0x4f
  40f664:	b.eq	40f020 <__fxstatat@plt+0xc5d0>  // b.none
  40f668:	mov	w2, #0xb                   	// #11
  40f66c:	mul	w2, w0, w2
  40f670:	asr	w2, w2, #5
  40f674:	add	w2, w2, #0x1
  40f678:	mov	w8, #0x0                   	// #0
  40f67c:	mov	w7, #0x0                   	// #0
  40f680:	mov	w5, #0x0                   	// #0
  40f684:	b	40f130 <__fxstatat@plt+0xc6e0>
  40f688:	mov	x26, x20
  40f68c:	mov	w3, #0x0                   	// #0
  40f690:	cmp	w3, #0x45
  40f694:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f698:	ldr	w2, [x23]
  40f69c:	mov	w0, #0x2                   	// #2
  40f6a0:	str	w0, [sp, #176]
  40f6a4:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f6a8:	mov	x26, x20
  40f6ac:	ldp	x0, x1, [x23]
  40f6b0:	stp	x0, x1, [sp, #240]
  40f6b4:	ldp	x0, x1, [x23, #16]
  40f6b8:	stp	x0, x1, [sp, #256]
  40f6bc:	ldp	x0, x1, [x23, #32]
  40f6c0:	stp	x0, x1, [sp, #272]
  40f6c4:	ldr	x0, [x23, #48]
  40f6c8:	str	x0, [sp, #288]
  40f6cc:	add	x1, sp, #0xf0
  40f6d0:	ldr	x0, [sp, #1264]
  40f6d4:	bl	41399c <_obstack_memory_used@@Base+0x490>
  40f6d8:	mov	x4, x0
  40f6dc:	mov	x2, x0
  40f6e0:	add	x20, sp, #0xef
  40f6e4:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  40f6e8:	movk	x6, #0x6667
  40f6ec:	mov	w5, #0x30                  	// #48
  40f6f0:	smulh	x1, x2, x6
  40f6f4:	asr	x1, x1, #2
  40f6f8:	asr	x3, x2, #63
  40f6fc:	sub	x0, x1, x3
  40f700:	add	x0, x0, x0, lsl #2
  40f704:	sub	x0, x2, x0, lsl #1
  40f708:	sub	w2, w5, w0
  40f70c:	and	w2, w2, #0xff
  40f710:	add	w0, w0, #0x30
  40f714:	and	w0, w0, #0xff
  40f718:	cmp	x4, #0x0
  40f71c:	csel	w0, w0, w2, ge  // ge = tcont
  40f720:	strb	w0, [x20, #-1]!
  40f724:	subs	x2, x1, x3
  40f728:	b.ne	40f6f0 <__fxstatat@plt+0xcca0>  // b.any
  40f72c:	cmp	w19, #0x0
  40f730:	csinc	w0, w19, wzr, gt
  40f734:	str	w0, [sp, #128]
  40f738:	tbz	x4, #63, 40f1a8 <__fxstatat@plt+0xc758>
  40f73c:	mov	w0, #0x2d                  	// #45
  40f740:	str	w0, [sp, #176]
  40f744:	b	40ff5c <__fxstatat@plt+0xd50c>
  40f748:	mov	x26, x20
  40f74c:	str	wzr, [sp, #176]
  40f750:	ldr	w0, [sp, #176]
  40f754:	cmp	w0, #0x4f
  40f758:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f75c:	mov	w1, #0x58                  	// #88
  40f760:	str	wzr, [sp, #184]
  40f764:	b	40eae0 <__fxstatat@plt+0xc090>
  40f768:	mov	x26, x20
  40f76c:	cmp	w19, #0x0
  40f770:	csel	w0, w19, wzr, ge  // ge = tcont
  40f774:	sxtw	x0, w0
  40f778:	cmp	x0, #0x0
  40f77c:	csinc	x20, x0, xzr, ne  // ne = any
  40f780:	ldr	x1, [sp, #120]
  40f784:	sub	x1, x1, x21
  40f788:	cmp	x1, x20
  40f78c:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40f790:	cbz	x22, 40f7d4 <__fxstatat@plt+0xcd84>
  40f794:	cmp	x0, #0x1
  40f798:	b.ls	40f7cc <__fxstatat@plt+0xcd7c>  // b.plast
  40f79c:	sxtw	x19, w19
  40f7a0:	sub	x19, x19, #0x1
  40f7a4:	ldr	w1, [sp, #172]
  40f7a8:	cmp	w1, #0x30
  40f7ac:	mov	w0, #0x2b                  	// #43
  40f7b0:	ccmp	w1, w0, #0x4, ne  // ne = any
  40f7b4:	b.ne	40f7dc <__fxstatat@plt+0xcd8c>  // b.any
  40f7b8:	mov	x2, x19
  40f7bc:	mov	w1, #0x30                  	// #48
  40f7c0:	mov	x0, x22
  40f7c4:	bl	402680 <memset@plt>
  40f7c8:	add	x22, x22, x19
  40f7cc:	mov	w0, #0x9                   	// #9
  40f7d0:	strb	w0, [x22], #1
  40f7d4:	add	x21, x21, x20
  40f7d8:	b	40e90c <__fxstatat@plt+0xbebc>
  40f7dc:	mov	x2, x19
  40f7e0:	mov	w1, #0x20                  	// #32
  40f7e4:	mov	x0, x22
  40f7e8:	bl	402680 <memset@plt>
  40f7ec:	add	x22, x22, x19
  40f7f0:	b	40f7cc <__fxstatat@plt+0xcd7c>
  40f7f4:	mov	x26, x20
  40f7f8:	mov	w3, #0x0                   	// #0
  40f7fc:	ldr	w0, [x23, #24]
  40f800:	add	w0, w0, #0x6
  40f804:	mov	w2, #0x2493                	// #9363
  40f808:	movk	w2, #0x9249, lsl #16
  40f80c:	smull	x2, w0, w2
  40f810:	lsr	x2, x2, #32
  40f814:	add	w2, w0, w2
  40f818:	asr	w2, w2, #2
  40f81c:	sub	w2, w2, w0, asr #31
  40f820:	lsl	w4, w2, #3
  40f824:	sub	w2, w4, w2
  40f828:	sub	w2, w0, w2
  40f82c:	add	w2, w2, #0x1
  40f830:	mov	w0, #0x1                   	// #1
  40f834:	str	w0, [sp, #176]
  40f838:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f83c:	mov	x26, x20
  40f840:	mov	w3, #0x0                   	// #0
  40f844:	cmp	w3, #0x45
  40f848:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40f84c:	ldr	w2, [x23, #28]
  40f850:	ldr	w0, [x23, #24]
  40f854:	sub	w2, w2, w0
  40f858:	add	w2, w2, #0x7
  40f85c:	mov	w0, #0x2493                	// #9363
  40f860:	movk	w0, #0x9249, lsl #16
  40f864:	smull	x0, w2, w0
  40f868:	lsr	x0, x0, #32
  40f86c:	add	w0, w2, w0
  40f870:	asr	w0, w0, #2
  40f874:	sub	w2, w0, w2, asr #31
  40f878:	mov	w0, #0x2                   	// #2
  40f87c:	str	w0, [sp, #176]
  40f880:	b	40f004 <__fxstatat@plt+0xc5b4>
  40f884:	mov	x20, x26
  40f888:	b	40f890 <__fxstatat@plt+0xce40>
  40f88c:	str	wzr, [sp, #176]
  40f890:	ldr	w0, [sp, #176]
  40f894:	cmp	w0, #0x45
  40f898:	b.eq	40fdfc <__fxstatat@plt+0xd3ac>  // b.none
  40f89c:	ldr	w6, [x23, #20]
  40f8a0:	cmp	w6, #0x0
  40f8a4:	mov	w3, #0x12c                 	// #300
  40f8a8:	mov	w0, #0xffffff9c            	// #-100
  40f8ac:	csel	w3, w3, w0, lt  // lt = tstop
  40f8b0:	add	w3, w6, w3
  40f8b4:	ldr	w8, [x23, #28]
  40f8b8:	ldr	w7, [x23, #24]
  40f8bc:	sub	w2, w8, w7
  40f8c0:	add	w2, w2, #0x17e
  40f8c4:	mov	w0, #0x2493                	// #9363
  40f8c8:	movk	w0, #0x9249, lsl #16
  40f8cc:	smull	x0, w2, w0
  40f8d0:	lsr	x0, x0, #32
  40f8d4:	add	w0, w2, w0
  40f8d8:	asr	w0, w0, #2
  40f8dc:	sub	w0, w0, w2, asr #31
  40f8e0:	lsl	w5, w0, #3
  40f8e4:	sub	w5, w5, w0
  40f8e8:	sub	w2, w2, w5
  40f8ec:	sub	w2, w8, w2
  40f8f0:	adds	w2, w2, #0x3
  40f8f4:	b.mi	40f9f4 <__fxstatat@plt+0xcfa4>  // b.first
  40f8f8:	mov	w0, #0x0                   	// #0
  40f8fc:	tst	x3, #0x3
  40f900:	b.ne	40f94c <__fxstatat@plt+0xcefc>  // b.any
  40f904:	mov	w5, #0x851f                	// #34079
  40f908:	movk	w5, #0x51eb, lsl #16
  40f90c:	smull	x5, w3, w5
  40f910:	asr	x5, x5, #37
  40f914:	sub	w5, w5, w3, asr #31
  40f918:	mov	w0, #0x64                  	// #100
  40f91c:	msub	w5, w5, w0, w3
  40f920:	mov	w0, #0x1                   	// #1
  40f924:	cbnz	w5, 40f94c <__fxstatat@plt+0xcefc>
  40f928:	mov	w0, #0x851f                	// #34079
  40f92c:	movk	w0, #0x51eb, lsl #16
  40f930:	smull	x0, w3, w0
  40f934:	asr	x0, x0, #39
  40f938:	sub	w0, w0, w3, asr #31
  40f93c:	mov	w5, #0x190                 	// #400
  40f940:	msub	w3, w0, w5, w3
  40f944:	cmp	w3, #0x0
  40f948:	cset	w0, eq  // eq = none
  40f94c:	add	w0, w0, #0x16d
  40f950:	sub	w0, w8, w0
  40f954:	sub	w3, w0, w7
  40f958:	add	w3, w3, #0x17e
  40f95c:	mov	w5, #0x2493                	// #9363
  40f960:	movk	w5, #0x9249, lsl #16
  40f964:	smull	x5, w3, w5
  40f968:	lsr	x5, x5, #32
  40f96c:	add	w5, w3, w5
  40f970:	asr	w5, w5, #2
  40f974:	sub	w5, w5, w3, asr #31
  40f978:	lsl	w7, w5, #3
  40f97c:	sub	w5, w7, w5
  40f980:	sub	w3, w3, w5
  40f984:	sub	w0, w0, w3
  40f988:	adds	w0, w0, #0x3
  40f98c:	csel	w2, w2, w0, mi  // mi = first
  40f990:	cmp	w0, #0x0
  40f994:	cset	w7, ge  // ge = tcont
  40f998:	cmp	w4, #0x47
  40f99c:	b.eq	40facc <__fxstatat@plt+0xd07c>  // b.none
  40f9a0:	cmp	w4, #0x67
  40f9a4:	b.ne	40faf8 <__fxstatat@plt+0xd0a8>  // b.any
  40f9a8:	mov	w0, #0x851f                	// #34079
  40f9ac:	movk	w0, #0x51eb, lsl #16
  40f9b0:	smull	x3, w6, w0
  40f9b4:	asr	x3, x3, #37
  40f9b8:	sub	w3, w3, w6, asr #31
  40f9bc:	mov	w4, #0x64                  	// #100
  40f9c0:	msub	w3, w3, w4, w6
  40f9c4:	add	w3, w3, w7
  40f9c8:	smull	x2, w3, w0
  40f9cc:	asr	x2, x2, #37
  40f9d0:	sub	w2, w2, w3, asr #31
  40f9d4:	msub	w2, w2, w4, w3
  40f9d8:	tbnz	w2, #31, 40fa84 <__fxstatat@plt+0xd034>
  40f9dc:	ldr	w3, [sp, #176]
  40f9e0:	mov	x26, x20
  40f9e4:	mov	w5, #0x0                   	// #0
  40f9e8:	mov	w0, #0x2                   	// #2
  40f9ec:	str	w0, [sp, #176]
  40f9f0:	b	40fbe8 <__fxstatat@plt+0xd198>
  40f9f4:	sub	w3, w3, #0x1
  40f9f8:	mov	w2, #0x0                   	// #0
  40f9fc:	tst	x3, #0x3
  40fa00:	b.ne	40fa3c <__fxstatat@plt+0xcfec>  // b.any
  40fa04:	mov	w0, #0x851f                	// #34079
  40fa08:	movk	w0, #0x51eb, lsl #16
  40fa0c:	smull	x0, w3, w0
  40fa10:	asr	x0, x0, #37
  40fa14:	sub	w0, w0, w3, asr #31
  40fa18:	mov	w2, #0x64                  	// #100
  40fa1c:	msub	w0, w0, w2, w3
  40fa20:	mov	w2, #0x1                   	// #1
  40fa24:	cbnz	w0, 40fa3c <__fxstatat@plt+0xcfec>
  40fa28:	mov	w2, #0x190                 	// #400
  40fa2c:	sdiv	w0, w3, w2
  40fa30:	msub	w3, w0, w2, w3
  40fa34:	cmp	w3, #0x0
  40fa38:	cset	w2, eq  // eq = none
  40fa3c:	add	w2, w2, #0x16d
  40fa40:	add	w2, w2, w8
  40fa44:	sub	w3, w2, w7
  40fa48:	add	w3, w3, #0x17e
  40fa4c:	mov	w0, #0x2493                	// #9363
  40fa50:	movk	w0, #0x9249, lsl #16
  40fa54:	smull	x0, w3, w0
  40fa58:	lsr	x0, x0, #32
  40fa5c:	add	w0, w3, w0
  40fa60:	asr	w0, w0, #2
  40fa64:	sub	w0, w0, w3, asr #31
  40fa68:	lsl	w5, w0, #3
  40fa6c:	sub	w0, w5, w0
  40fa70:	sub	w3, w3, w0
  40fa74:	sub	w2, w2, w3
  40fa78:	add	w2, w2, #0x3
  40fa7c:	mov	w7, #0xffffffff            	// #-1
  40fa80:	b	40f998 <__fxstatat@plt+0xcf48>
  40fa84:	mov	w0, #0xfffff894            	// #-1900
  40fa88:	sub	w7, w0, w7
  40fa8c:	cmp	w6, w7
  40fa90:	b.ge	40fab0 <__fxstatat@plt+0xd060>  // b.tcont
  40fa94:	neg	w2, w2
  40fa98:	ldr	w3, [sp, #176]
  40fa9c:	mov	x26, x20
  40faa0:	mov	w5, #0x0                   	// #0
  40faa4:	mov	w0, #0x2                   	// #2
  40faa8:	str	w0, [sp, #176]
  40faac:	b	40fbe8 <__fxstatat@plt+0xd198>
  40fab0:	add	w2, w2, #0x64
  40fab4:	ldr	w3, [sp, #176]
  40fab8:	mov	x26, x20
  40fabc:	mov	w5, #0x0                   	// #0
  40fac0:	mov	w0, #0x2                   	// #2
  40fac4:	str	w0, [sp, #176]
  40fac8:	b	40fbe8 <__fxstatat@plt+0xd198>
  40facc:	mov	w0, #0xfffff894            	// #-1900
  40fad0:	sub	w0, w0, w7
  40fad4:	cmp	w6, w0
  40fad8:	cset	w5, lt  // lt = tstop
  40fadc:	add	w2, w6, #0x76c
  40fae0:	add	w2, w2, w7
  40fae4:	ldr	w3, [sp, #176]
  40fae8:	mov	x26, x20
  40faec:	mov	w0, #0x4                   	// #4
  40faf0:	str	w0, [sp, #176]
  40faf4:	b	40fbe8 <__fxstatat@plt+0xd198>
  40faf8:	mov	w0, #0x2493                	// #9363
  40fafc:	movk	w0, #0x9249, lsl #16
  40fb00:	smull	x0, w2, w0
  40fb04:	lsr	x0, x0, #32
  40fb08:	add	w0, w2, w0
  40fb0c:	asr	w0, w0, #2
  40fb10:	sub	w2, w0, w2, asr #31
  40fb14:	add	w2, w2, #0x1
  40fb18:	ldr	w3, [sp, #176]
  40fb1c:	mov	x26, x20
  40fb20:	mov	w0, #0x2                   	// #2
  40fb24:	str	w0, [sp, #176]
  40fb28:	b	40f004 <__fxstatat@plt+0xc5b4>
  40fb2c:	mov	x26, x20
  40fb30:	mov	w3, #0x0                   	// #0
  40fb34:	cmp	w3, #0x45
  40fb38:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40fb3c:	ldr	w4, [x23, #24]
  40fb40:	add	w4, w4, #0x6
  40fb44:	mov	w0, #0x2493                	// #9363
  40fb48:	movk	w0, #0x9249, lsl #16
  40fb4c:	smull	x2, w4, w0
  40fb50:	lsr	x2, x2, #32
  40fb54:	add	w2, w4, w2
  40fb58:	asr	w2, w2, #2
  40fb5c:	sub	w2, w2, w4, asr #31
  40fb60:	lsl	w5, w2, #3
  40fb64:	sub	w2, w5, w2
  40fb68:	sub	w4, w4, w2
  40fb6c:	ldr	w2, [x23, #28]
  40fb70:	sub	w2, w2, w4
  40fb74:	add	w2, w2, #0x7
  40fb78:	smull	x0, w2, w0
  40fb7c:	lsr	x0, x0, #32
  40fb80:	add	w0, w2, w0
  40fb84:	asr	w0, w0, #2
  40fb88:	sub	w2, w0, w2, asr #31
  40fb8c:	mov	w0, #0x2                   	// #2
  40fb90:	str	w0, [sp, #176]
  40fb94:	b	40f004 <__fxstatat@plt+0xc5b4>
  40fb98:	mov	x26, x20
  40fb9c:	mov	w3, #0x0                   	// #0
  40fba0:	cmp	w3, #0x45
  40fba4:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40fba8:	ldr	w2, [x23, #24]
  40fbac:	mov	w0, #0x1                   	// #1
  40fbb0:	str	w0, [sp, #176]
  40fbb4:	b	40f004 <__fxstatat@plt+0xc5b4>
  40fbb8:	mov	x26, x20
  40fbbc:	mov	w3, #0x0                   	// #0
  40fbc0:	cmp	w3, #0x45
  40fbc4:	b.eq	40ff3c <__fxstatat@plt+0xd4ec>  // b.none
  40fbc8:	cmp	w3, #0x4f
  40fbcc:	b.eq	40fe20 <__fxstatat@plt+0xd3d0>  // b.none
  40fbd0:	ldr	w2, [x23, #20]
  40fbd4:	cmn	w2, #0x76c
  40fbd8:	cset	w5, lt  // lt = tstop
  40fbdc:	add	w2, w2, #0x76c
  40fbe0:	mov	w0, #0x4                   	// #4
  40fbe4:	str	w0, [sp, #176]
  40fbe8:	ldr	w0, [sp, #172]
  40fbec:	cmp	w0, #0x0
  40fbf0:	ldr	w4, [sp, #168]
  40fbf4:	csel	w0, w0, w4, ne  // ne = any
  40fbf8:	str	w0, [sp, #172]
  40fbfc:	mov	w7, #0x0                   	// #0
  40fc00:	cmp	w0, #0x2b
  40fc04:	b.eq	40f0f8 <__fxstatat@plt+0xc6a8>  // b.none
  40fc08:	mov	w8, #0x0                   	// #0
  40fc0c:	b	40f010 <__fxstatat@plt+0xc5c0>
  40fc10:	mov	x26, x20
  40fc14:	mov	w3, #0x0                   	// #0
  40fc18:	cmp	w3, #0x45
  40fc1c:	b.eq	40ff48 <__fxstatat@plt+0xd4f8>  // b.none
  40fc20:	ldr	w0, [x23, #20]
  40fc24:	mov	w2, #0x851f                	// #34079
  40fc28:	movk	w2, #0x51eb, lsl #16
  40fc2c:	smull	x2, w0, w2
  40fc30:	asr	x2, x2, #37
  40fc34:	sub	w2, w2, w0, asr #31
  40fc38:	mov	w4, #0x64                  	// #100
  40fc3c:	msub	w2, w2, w4, w0
  40fc40:	tbnz	w2, #31, 40fc54 <__fxstatat@plt+0xd204>
  40fc44:	mov	w5, #0x0                   	// #0
  40fc48:	mov	w0, #0x2                   	// #2
  40fc4c:	str	w0, [sp, #176]
  40fc50:	b	40fbe8 <__fxstatat@plt+0xd198>
  40fc54:	add	w4, w2, w4
  40fc58:	cmn	w0, #0x76d
  40fc5c:	csneg	w2, w4, w2, gt
  40fc60:	b	40fc44 <__fxstatat@plt+0xd1f4>
  40fc64:	mov	x26, x20
  40fc68:	ldr	w0, [sp, #128]
  40fc6c:	cmp	w0, #0x0
  40fc70:	csel	w28, w28, wzr, eq  // eq = none
  40fc74:	mov	x0, x25
  40fc78:	bl	402430 <strlen@plt>
  40fc7c:	mov	x20, x0
  40fc80:	cmp	w19, #0x0
  40fc84:	csel	w0, w19, wzr, ge  // ge = tcont
  40fc88:	sxtw	x0, w0
  40fc8c:	cmp	x20, x0
  40fc90:	csel	x2, x20, x0, cs  // cs = hs, nlast
  40fc94:	str	x2, [sp, #176]
  40fc98:	ldr	x1, [sp, #120]
  40fc9c:	sub	x1, x1, x21
  40fca0:	cmp	x1, x2
  40fca4:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40fca8:	cbz	x22, 40fd04 <__fxstatat@plt+0xd2b4>
  40fcac:	cmp	x20, x0
  40fcb0:	b.cs	40fce4 <__fxstatat@plt+0xd294>  // b.hs, b.nlast
  40fcb4:	sxtw	x19, w19
  40fcb8:	sub	x19, x19, x20
  40fcbc:	ldr	w1, [sp, #172]
  40fcc0:	cmp	w1, #0x30
  40fcc4:	mov	w0, #0x2b                  	// #43
  40fcc8:	ccmp	w1, w0, #0x4, ne  // ne = any
  40fccc:	b.ne	40fd10 <__fxstatat@plt+0xd2c0>  // b.any
  40fcd0:	mov	x2, x19
  40fcd4:	mov	w1, #0x30                  	// #48
  40fcd8:	mov	x0, x22
  40fcdc:	bl	402680 <memset@plt>
  40fce0:	add	x22, x22, x19
  40fce4:	ldr	w0, [sp, #128]
  40fce8:	cbnz	w0, 40fd28 <__fxstatat@plt+0xd2d8>
  40fcec:	cbz	w28, 40fd3c <__fxstatat@plt+0xd2ec>
  40fcf0:	mov	x2, x20
  40fcf4:	mov	x1, x25
  40fcf8:	mov	x0, x22
  40fcfc:	bl	40e7fc <__fxstatat@plt+0xbdac>
  40fd00:	add	x22, x22, x20
  40fd04:	ldr	x0, [sp, #176]
  40fd08:	add	x21, x21, x0
  40fd0c:	b	40e90c <__fxstatat@plt+0xbebc>
  40fd10:	mov	x2, x19
  40fd14:	mov	w1, #0x20                  	// #32
  40fd18:	mov	x0, x22
  40fd1c:	bl	402680 <memset@plt>
  40fd20:	add	x22, x22, x19
  40fd24:	b	40fce4 <__fxstatat@plt+0xd294>
  40fd28:	mov	x2, x20
  40fd2c:	mov	x1, x25
  40fd30:	mov	x0, x22
  40fd34:	bl	40e7a8 <__fxstatat@plt+0xbd58>
  40fd38:	b	40fd00 <__fxstatat@plt+0xd2b0>
  40fd3c:	mov	x2, x20
  40fd40:	mov	x1, x25
  40fd44:	mov	x0, x22
  40fd48:	bl	4023c0 <memcpy@plt>
  40fd4c:	b	40fd00 <__fxstatat@plt+0xd2b0>
  40fd50:	mov	x7, #0x1                   	// #1
  40fd54:	add	x7, x7, #0x1
  40fd58:	add	x26, x20, x7
  40fd5c:	ldrb	w0, [x20, x7]
  40fd60:	cmp	w0, #0x3a
  40fd64:	b.ne	40eb28 <__fxstatat@plt+0xc0d8>  // b.any
  40fd68:	b	40fd54 <__fxstatat@plt+0xd304>
  40fd6c:	mov	x7, #0x0                   	// #0
  40fd70:	b	40eb30 <__fxstatat@plt+0xc0e0>
  40fd74:	mov	x26, x20
  40fd78:	mov	w3, #0x0                   	// #0
  40fd7c:	mov	x7, #0x0                   	// #0
  40fd80:	b	40eb30 <__fxstatat@plt+0xc0e0>
  40fd84:	mov	x20, x26
  40fd88:	cmp	x7, #0x3
  40fd8c:	b.ne	40fdfc <__fxstatat@plt+0xd3ac>  // b.any
  40fd90:	cbnz	w0, 40fdc4 <__fxstatat@plt+0xd374>
  40fd94:	cbnz	w8, 40ebd0 <__fxstatat@plt+0xc180>
  40fd98:	mov	w7, #0x1                   	// #1
  40fd9c:	mov	w0, #0x3                   	// #3
  40fda0:	str	w0, [sp, #176]
  40fda4:	b	40f010 <__fxstatat@plt+0xc5c0>
  40fda8:	mov	w0, #0x64                  	// #100
  40fdac:	madd	w2, w2, w0, w8
  40fdb0:	mov	w8, #0x0                   	// #0
  40fdb4:	mov	w7, #0x1                   	// #1
  40fdb8:	mov	w0, #0x5                   	// #5
  40fdbc:	str	w0, [sp, #176]
  40fdc0:	b	40f010 <__fxstatat@plt+0xc5c0>
  40fdc4:	mov	w4, #0x64                  	// #100
  40fdc8:	mul	w8, w8, w4
  40fdcc:	mov	w4, #0x2710                	// #10000
  40fdd0:	madd	w2, w2, w4, w8
  40fdd4:	add	w2, w2, w0
  40fdd8:	mov	w8, #0x14                  	// #20
  40fddc:	mov	w7, #0x1                   	// #1
  40fde0:	mov	w0, #0x9                   	// #9
  40fde4:	str	w0, [sp, #176]
  40fde8:	b	40f010 <__fxstatat@plt+0xc5c0>
  40fdec:	mov	x20, x26
  40fdf0:	sub	x20, x20, #0x1
  40fdf4:	b	40fdfc <__fxstatat@plt+0xd3ac>
  40fdf8:	mov	x20, x26
  40fdfc:	ldrb	w0, [x20]
  40fe00:	mov	x26, x20
  40fe04:	cmp	w0, #0x25
  40fe08:	b.ne	40fe20 <__fxstatat@plt+0xd3d0>  // b.any
  40fe0c:	mov	w2, #0x1                   	// #1
  40fe10:	b	40fe40 <__fxstatat@plt+0xd3f0>
  40fe14:	mov	x20, x26
  40fe18:	b	40fdfc <__fxstatat@plt+0xd3ac>
  40fe1c:	mov	x26, x20
  40fe20:	sub	x1, x26, #0x1
  40fe24:	mov	x0, x1
  40fe28:	add	w1, w1, #0x2
  40fe2c:	sub	w2, w1, w0
  40fe30:	mov	x20, x0
  40fe34:	ldrb	w3, [x0], #-1
  40fe38:	cmp	w3, #0x25
  40fe3c:	b.ne	40fe2c <__fxstatat@plt+0xd3dc>  // b.any
  40fe40:	sxtw	x2, w2
  40fe44:	str	x2, [sp, #128]
  40fe48:	cmp	w19, #0x0
  40fe4c:	csel	w0, w19, wzr, ge  // ge = tcont
  40fe50:	sxtw	x0, w0
  40fe54:	cmp	x2, x0
  40fe58:	csel	x3, x2, x0, cs  // cs = hs, nlast
  40fe5c:	str	x3, [sp, #176]
  40fe60:	ldr	x1, [sp, #120]
  40fe64:	sub	x1, x1, x21
  40fe68:	cmp	x1, x3
  40fe6c:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40fe70:	cbz	x22, 40fec8 <__fxstatat@plt+0xd478>
  40fe74:	cmp	x2, x0
  40fe78:	b.cs	40feac <__fxstatat@plt+0xd45c>  // b.hs, b.nlast
  40fe7c:	sxtw	x19, w19
  40fe80:	sub	x19, x19, x2
  40fe84:	ldr	w1, [sp, #172]
  40fe88:	cmp	w1, #0x30
  40fe8c:	mov	w0, #0x2b                  	// #43
  40fe90:	ccmp	w1, w0, #0x4, ne  // ne = any
  40fe94:	b.ne	40fee0 <__fxstatat@plt+0xd490>  // b.any
  40fe98:	mov	x2, x19
  40fe9c:	mov	w1, #0x30                  	// #48
  40fea0:	mov	x0, x22
  40fea4:	bl	402680 <memset@plt>
  40fea8:	add	x22, x22, x19
  40feac:	cbz	w28, 40fef8 <__fxstatat@plt+0xd4a8>
  40feb0:	ldr	x2, [sp, #128]
  40feb4:	mov	x1, x20
  40feb8:	mov	x0, x22
  40febc:	bl	40e7fc <__fxstatat@plt+0xbdac>
  40fec0:	ldr	x0, [sp, #128]
  40fec4:	add	x22, x22, x0
  40fec8:	ldr	x0, [sp, #176]
  40fecc:	add	x21, x21, x0
  40fed0:	b	40e90c <__fxstatat@plt+0xbebc>
  40fed4:	mov	x20, x26
  40fed8:	mov	w2, #0x1                   	// #1
  40fedc:	b	40fe40 <__fxstatat@plt+0xd3f0>
  40fee0:	mov	x2, x19
  40fee4:	mov	w1, #0x20                  	// #32
  40fee8:	mov	x0, x22
  40feec:	bl	402680 <memset@plt>
  40fef0:	add	x22, x22, x19
  40fef4:	b	40feac <__fxstatat@plt+0xd45c>
  40fef8:	ldr	x2, [sp, #128]
  40fefc:	mov	x1, x20
  40ff00:	mov	x0, x22
  40ff04:	bl	4023c0 <memcpy@plt>
  40ff08:	b	40fec0 <__fxstatat@plt+0xd470>
  40ff0c:	ldp	x27, x28, [sp, #96]
  40ff10:	cmp	x22, #0x0
  40ff14:	ldr	x0, [sp, #120]
  40ff18:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40ff1c:	b.eq	40e950 <__fxstatat@plt+0xbf00>  // b.none
  40ff20:	strb	wzr, [x22]
  40ff24:	b	40e950 <__fxstatat@plt+0xbf00>
  40ff28:	mov	x21, #0x0                   	// #0
  40ff2c:	b	40ff10 <__fxstatat@plt+0xd4c0>
  40ff30:	mov	w1, #0x43                  	// #67
  40ff34:	str	wzr, [sp, #176]
  40ff38:	b	40f020 <__fxstatat@plt+0xc5d0>
  40ff3c:	mov	w1, #0x59                  	// #89
  40ff40:	str	wzr, [sp, #176]
  40ff44:	b	40f020 <__fxstatat@plt+0xc5d0>
  40ff48:	mov	w1, #0x79                  	// #121
  40ff4c:	str	wzr, [sp, #176]
  40ff50:	b	40f020 <__fxstatat@plt+0xc5d0>
  40ff54:	mov	w0, #0x2d                  	// #45
  40ff58:	str	w0, [sp, #176]
  40ff5c:	ldr	w0, [sp, #172]
  40ff60:	cmp	w0, #0x2d
  40ff64:	b.eq	40f1dc <__fxstatat@plt+0xc78c>  // b.none
  40ff68:	ldr	w0, [sp, #176]
  40ff6c:	cmp	w0, #0x0
  40ff70:	cset	w1, ne  // ne = any
  40ff74:	str	w1, [sp, #192]
  40ff78:	ldr	x0, [sp, #144]
  40ff7c:	sub	x0, x0, x20
  40ff80:	ldr	w2, [sp, #128]
  40ff84:	sub	w0, w2, w0
  40ff88:	sub	w0, w0, w1
  40ff8c:	str	w0, [sp, #184]
  40ff90:	cmp	w0, #0x0
  40ff94:	b.le	40f334 <__fxstatat@plt+0xc8e4>
  40ff98:	ldr	w0, [sp, #172]
  40ff9c:	cmp	w0, #0x5f
  40ffa0:	b.eq	40f250 <__fxstatat@plt+0xc800>  // b.none
  40ffa4:	ldr	x0, [sp, #120]
  40ffa8:	sub	x1, x0, x21
  40ffac:	ldr	w2, [sp, #128]
  40ffb0:	cmp	x1, w2, sxtw
  40ffb4:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40ffb8:	ldr	w0, [sp, #192]
  40ffbc:	cbz	w0, 410030 <__fxstatat@plt+0xd5e0>
  40ffc0:	cmp	w19, #0x0
  40ffc4:	csel	w0, w19, wzr, ge  // ge = tcont
  40ffc8:	sxtw	x0, w0
  40ffcc:	cmp	x0, #0x0
  40ffd0:	csinc	x3, x0, xzr, ne  // ne = any
  40ffd4:	str	x3, [sp, #192]
  40ffd8:	cmp	x1, x3
  40ffdc:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  40ffe0:	cbz	x22, 410028 <__fxstatat@plt+0xd5d8>
  40ffe4:	cmp	w2, #0x0
  40ffe8:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  40ffec:	b.ls	410020 <__fxstatat@plt+0xd5d0>  // b.plast
  40fff0:	sxtw	x19, w19
  40fff4:	sub	x19, x19, #0x1
  40fff8:	ldr	w1, [sp, #172]
  40fffc:	cmp	w1, #0x30
  410000:	mov	w0, #0x2b                  	// #43
  410004:	ccmp	w1, w0, #0x4, ne  // ne = any
  410008:	b.ne	40f31c <__fxstatat@plt+0xc8cc>  // b.any
  41000c:	mov	x2, x19
  410010:	mov	w1, #0x30                  	// #48
  410014:	mov	x0, x22
  410018:	bl	402680 <memset@plt>
  41001c:	add	x22, x22, x19
  410020:	ldrb	w0, [sp, #176]
  410024:	strb	w0, [x22], #1
  410028:	ldr	x0, [sp, #192]
  41002c:	add	x21, x21, x0
  410030:	cbz	x22, 41004c <__fxstatat@plt+0xd5fc>
  410034:	ldrsw	x19, [sp, #184]
  410038:	mov	x2, x19
  41003c:	mov	w1, #0x30                  	// #48
  410040:	mov	x0, x22
  410044:	bl	402680 <memset@plt>
  410048:	add	x22, x22, x19
  41004c:	ldr	w0, [sp, #184]
  410050:	add	x21, x21, w0, sxtw
  410054:	mov	w19, #0x0                   	// #0
  410058:	ldr	x0, [sp, #144]
  41005c:	sub	x2, x0, x20
  410060:	str	x2, [sp, #176]
  410064:	cmp	w19, #0x0
  410068:	csel	w0, w19, wzr, ge  // ge = tcont
  41006c:	sxtw	x0, w0
  410070:	cmp	x2, x0
  410074:	csel	x3, x2, x0, cs  // cs = hs, nlast
  410078:	str	x3, [sp, #184]
  41007c:	ldr	x1, [sp, #120]
  410080:	sub	x1, x1, x21
  410084:	cmp	x1, x3
  410088:	b.ls	40e948 <__fxstatat@plt+0xbef8>  // b.plast
  41008c:	cbz	x22, 4100ec <__fxstatat@plt+0xd69c>
  410090:	ldr	w1, [sp, #128]
  410094:	cmp	w1, #0x0
  410098:	ccmp	x2, x0, #0x2, eq  // eq = none
  41009c:	b.cs	4100d0 <__fxstatat@plt+0xd680>  // b.hs, b.nlast
  4100a0:	sxtw	x19, w19
  4100a4:	sub	x19, x19, x2
  4100a8:	ldr	w1, [sp, #172]
  4100ac:	cmp	w1, #0x30
  4100b0:	mov	w0, #0x2b                  	// #43
  4100b4:	ccmp	w1, w0, #0x4, ne  // ne = any
  4100b8:	b.ne	40f3d8 <__fxstatat@plt+0xc988>  // b.any
  4100bc:	mov	x2, x19
  4100c0:	mov	w1, #0x30                  	// #48
  4100c4:	mov	x0, x22
  4100c8:	bl	402680 <memset@plt>
  4100cc:	add	x22, x22, x19
  4100d0:	cbz	w28, 40f3f0 <__fxstatat@plt+0xc9a0>
  4100d4:	ldr	x2, [sp, #176]
  4100d8:	mov	x1, x20
  4100dc:	mov	x0, x22
  4100e0:	bl	40e7fc <__fxstatat@plt+0xbdac>
  4100e4:	ldr	x0, [sp, #176]
  4100e8:	add	x22, x22, x0
  4100ec:	ldr	x0, [sp, #184]
  4100f0:	add	x21, x21, x0
  4100f4:	b	40e90c <__fxstatat@plt+0xbebc>
  4100f8:	sub	sp, sp, #0x30
  4100fc:	stp	x29, x30, [sp, #16]
  410100:	add	x29, sp, #0x10
  410104:	strb	wzr, [sp, #47]
  410108:	str	w5, [sp, #8]
  41010c:	str	x4, [sp]
  410110:	add	x7, sp, #0x2f
  410114:	mov	w6, #0xffffffff            	// #-1
  410118:	mov	w5, #0x0                   	// #0
  41011c:	mov	w4, #0x0                   	// #0
  410120:	bl	40e850 <__fxstatat@plt+0xbe00>
  410124:	ldp	x29, x30, [sp, #16]
  410128:	add	sp, sp, #0x30
  41012c:	ret
  410130:	stp	x29, x30, [sp, #-48]!
  410134:	mov	x29, sp
  410138:	cbz	x0, 4101b0 <__fxstatat@plt+0xd760>
  41013c:	stp	x19, x20, [sp, #16]
  410140:	mov	x19, x0
  410144:	mov	w1, #0x2f                  	// #47
  410148:	bl	402720 <strrchr@plt>
  41014c:	mov	x20, x0
  410150:	cbz	x0, 4101e4 <__fxstatat@plt+0xd794>
  410154:	str	x21, [sp, #32]
  410158:	add	x21, x0, #0x1
  41015c:	sub	x0, x21, x19
  410160:	cmp	x0, #0x6
  410164:	b.le	4101d8 <__fxstatat@plt+0xd788>
  410168:	mov	x2, #0x7                   	// #7
  41016c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410170:	add	x1, x1, #0x30
  410174:	sub	x0, x20, #0x6
  410178:	bl	402640 <strncmp@plt>
  41017c:	cbnz	w0, 4101e0 <__fxstatat@plt+0xd790>
  410180:	mov	x2, #0x3                   	// #3
  410184:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410188:	add	x1, x1, #0x38
  41018c:	mov	x0, x21
  410190:	bl	402640 <strncmp@plt>
  410194:	mov	x19, x21
  410198:	cbnz	w0, 410200 <__fxstatat@plt+0xd7b0>
  41019c:	add	x19, x20, #0x4
  4101a0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4101a4:	str	x19, [x0, #1464]
  4101a8:	ldr	x21, [sp, #32]
  4101ac:	b	4101e4 <__fxstatat@plt+0xd794>
  4101b0:	stp	x19, x20, [sp, #16]
  4101b4:	str	x21, [sp, #32]
  4101b8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4101bc:	ldr	x3, [x0, #1432]
  4101c0:	mov	x2, #0x37                  	// #55
  4101c4:	mov	x1, #0x1                   	// #1
  4101c8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5af4>
  4101cc:	add	x0, x0, #0xff8
  4101d0:	bl	402890 <fwrite@plt>
  4101d4:	bl	402760 <abort@plt>
  4101d8:	ldr	x21, [sp, #32]
  4101dc:	b	4101e4 <__fxstatat@plt+0xd794>
  4101e0:	ldr	x21, [sp, #32]
  4101e4:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4101e8:	str	x19, [x0, #1864]
  4101ec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4101f0:	str	x19, [x0, #1424]
  4101f4:	ldp	x19, x20, [sp, #16]
  4101f8:	ldp	x29, x30, [sp], #48
  4101fc:	ret
  410200:	ldr	x21, [sp, #32]
  410204:	b	4101e4 <__fxstatat@plt+0xd794>
  410208:	stp	xzr, xzr, [x8]
  41020c:	stp	xzr, xzr, [x8, #16]
  410210:	stp	xzr, xzr, [x8, #32]
  410214:	str	xzr, [x8, #48]
  410218:	cmp	w0, #0xa
  41021c:	b.eq	410228 <__fxstatat@plt+0xd7d8>  // b.none
  410220:	str	w0, [x8]
  410224:	ret
  410228:	stp	x29, x30, [sp, #-16]!
  41022c:	mov	x29, sp
  410230:	bl	402760 <abort@plt>
  410234:	stp	x29, x30, [sp, #-48]!
  410238:	mov	x29, sp
  41023c:	stp	x19, x20, [sp, #16]
  410240:	str	x21, [sp, #32]
  410244:	mov	x20, x0
  410248:	mov	w21, w1
  41024c:	mov	w2, #0x5                   	// #5
  410250:	mov	x1, x0
  410254:	mov	x0, #0x0                   	// #0
  410258:	bl	402970 <dcgettext@plt>
  41025c:	mov	x19, x0
  410260:	cmp	x20, x0
  410264:	b.eq	41027c <__fxstatat@plt+0xd82c>  // b.none
  410268:	mov	x0, x19
  41026c:	ldp	x19, x20, [sp, #16]
  410270:	ldr	x21, [sp, #32]
  410274:	ldp	x29, x30, [sp], #48
  410278:	ret
  41027c:	bl	413be0 <_obstack_memory_used@@Base+0x6d4>
  410280:	ldrb	w1, [x0]
  410284:	and	w1, w1, #0xffffffdf
  410288:	cmp	w1, #0x55
  41028c:	b.ne	41030c <__fxstatat@plt+0xd8bc>  // b.any
  410290:	ldrb	w1, [x0, #1]
  410294:	and	w1, w1, #0xffffffdf
  410298:	cmp	w1, #0x54
  41029c:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  4102a0:	ldrb	w1, [x0, #2]
  4102a4:	and	w1, w1, #0xffffffdf
  4102a8:	cmp	w1, #0x46
  4102ac:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  4102b0:	ldrb	w1, [x0, #3]
  4102b4:	cmp	w1, #0x2d
  4102b8:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  4102bc:	ldrb	w1, [x0, #4]
  4102c0:	cmp	w1, #0x38
  4102c4:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  4102c8:	ldrb	w0, [x0, #5]
  4102cc:	cbz	w0, 4102ec <__fxstatat@plt+0xd89c>
  4102d0:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4102d4:	add	x0, x19, #0x68
  4102d8:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4102dc:	add	x19, x19, #0x40
  4102e0:	cmp	w21, #0x9
  4102e4:	csel	x19, x19, x0, eq  // eq = none
  4102e8:	b	410268 <__fxstatat@plt+0xd818>
  4102ec:	ldrb	w1, [x19]
  4102f0:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4102f4:	add	x0, x19, #0x48
  4102f8:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4102fc:	add	x19, x19, #0x60
  410300:	cmp	w1, #0x60
  410304:	csel	x19, x19, x0, eq  // eq = none
  410308:	b	410268 <__fxstatat@plt+0xd818>
  41030c:	cmp	w1, #0x47
  410310:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  410314:	ldrb	w1, [x0, #1]
  410318:	and	w1, w1, #0xffffffdf
  41031c:	cmp	w1, #0x42
  410320:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  410324:	ldrb	w1, [x0, #2]
  410328:	cmp	w1, #0x31
  41032c:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  410330:	ldrb	w1, [x0, #3]
  410334:	cmp	w1, #0x38
  410338:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  41033c:	ldrb	w1, [x0, #4]
  410340:	cmp	w1, #0x30
  410344:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  410348:	ldrb	w1, [x0, #5]
  41034c:	cmp	w1, #0x33
  410350:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  410354:	ldrb	w1, [x0, #6]
  410358:	cmp	w1, #0x30
  41035c:	b.ne	4102d0 <__fxstatat@plt+0xd880>  // b.any
  410360:	ldrb	w0, [x0, #7]
  410364:	cbnz	w0, 4102d0 <__fxstatat@plt+0xd880>
  410368:	ldrb	w1, [x19]
  41036c:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410370:	add	x0, x19, #0x50
  410374:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410378:	add	x19, x19, #0x58
  41037c:	cmp	w1, #0x60
  410380:	csel	x19, x19, x0, eq  // eq = none
  410384:	b	410268 <__fxstatat@plt+0xd818>
  410388:	sub	sp, sp, #0xf0
  41038c:	stp	x29, x30, [sp, #16]
  410390:	add	x29, sp, #0x10
  410394:	stp	x19, x20, [sp, #32]
  410398:	stp	x21, x22, [sp, #48]
  41039c:	stp	x23, x24, [sp, #64]
  4103a0:	stp	x25, x26, [sp, #80]
  4103a4:	stp	x27, x28, [sp, #96]
  4103a8:	mov	x28, x0
  4103ac:	mov	x26, x1
  4103b0:	str	x2, [sp, #136]
  4103b4:	mov	x24, x3
  4103b8:	mov	w25, w4
  4103bc:	mov	w19, w5
  4103c0:	str	w5, [sp, #184]
  4103c4:	str	x6, [sp, #152]
  4103c8:	str	x7, [sp, #200]
  4103cc:	bl	402850 <__ctype_get_mb_cur_max@plt>
  4103d0:	str	x0, [sp, #168]
  4103d4:	mov	x0, x19
  4103d8:	ubfx	x0, x0, #1, #1
  4103dc:	str	x0, [sp, #112]
  4103e0:	mov	w0, #0x1                   	// #1
  4103e4:	str	w0, [sp, #128]
  4103e8:	str	wzr, [sp, #180]
  4103ec:	str	wzr, [sp, #124]
  4103f0:	str	wzr, [sp, #132]
  4103f4:	str	xzr, [sp, #144]
  4103f8:	str	xzr, [sp, #160]
  4103fc:	str	xzr, [sp, #192]
  410400:	mov	w23, w25
  410404:	mov	x25, x24
  410408:	cmp	w23, #0x4
  41040c:	b.eq	41057c <__fxstatat@plt+0xdb2c>  // b.none
  410410:	b.ls	410460 <__fxstatat@plt+0xda10>  // b.plast
  410414:	cmp	w23, #0x7
  410418:	b.eq	4105ec <__fxstatat@plt+0xdb9c>  // b.none
  41041c:	b.ls	4104ac <__fxstatat@plt+0xda5c>  // b.plast
  410420:	sub	w0, w23, #0x8
  410424:	cmp	w0, #0x2
  410428:	b.hi	4105dc <__fxstatat@plt+0xdb8c>  // b.pmore
  41042c:	cmp	w23, #0xa
  410430:	b.ne	410520 <__fxstatat@plt+0xdad0>  // b.any
  410434:	mov	x27, #0x0                   	// #0
  410438:	ldr	w0, [sp, #112]
  41043c:	cbz	w0, 41054c <__fxstatat@plt+0xdafc>
  410440:	ldr	x0, [sp, #240]
  410444:	bl	402430 <strlen@plt>
  410448:	str	x0, [sp, #144]
  41044c:	ldr	x0, [sp, #240]
  410450:	str	x0, [sp, #160]
  410454:	mov	w0, #0x1                   	// #1
  410458:	str	w0, [sp, #132]
  41045c:	b	4104e4 <__fxstatat@plt+0xda94>
  410460:	cmp	w23, #0x2
  410464:	b.eq	4105b8 <__fxstatat@plt+0xdb68>  // b.none
  410468:	b.ls	410478 <__fxstatat@plt+0xda28>  // b.plast
  41046c:	mov	w0, #0x1                   	// #1
  410470:	str	w0, [sp, #132]
  410474:	b	410484 <__fxstatat@plt+0xda34>
  410478:	cbz	w23, 4105e0 <__fxstatat@plt+0xdb90>
  41047c:	cmp	w23, #0x1
  410480:	b.ne	4105dc <__fxstatat@plt+0xdb8c>  // b.any
  410484:	mov	w0, #0x1                   	// #1
  410488:	str	w0, [sp, #112]
  41048c:	mov	x0, #0x1                   	// #1
  410490:	str	x0, [sp, #144]
  410494:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410498:	add	x0, x0, #0x68
  41049c:	str	x0, [sp, #160]
  4104a0:	mov	x27, #0x0                   	// #0
  4104a4:	mov	w23, #0x2                   	// #2
  4104a8:	b	4104e4 <__fxstatat@plt+0xda94>
  4104ac:	cmp	w23, #0x5
  4104b0:	b.eq	4104ec <__fxstatat@plt+0xda9c>  // b.none
  4104b4:	cmp	w23, #0x6
  4104b8:	b.ne	4105dc <__fxstatat@plt+0xdb8c>  // b.any
  4104bc:	mov	w0, #0x1                   	// #1
  4104c0:	str	w0, [sp, #112]
  4104c4:	str	w0, [sp, #132]
  4104c8:	mov	x0, #0x1                   	// #1
  4104cc:	str	x0, [sp, #144]
  4104d0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4104d4:	add	x0, x0, #0x40
  4104d8:	str	x0, [sp, #160]
  4104dc:	mov	x27, #0x0                   	// #0
  4104e0:	mov	w23, #0x5                   	// #5
  4104e4:	mov	x24, #0x0                   	// #0
  4104e8:	b	410fd8 <__fxstatat@plt+0xe588>
  4104ec:	ldr	w0, [sp, #112]
  4104f0:	cbnz	w0, 410600 <__fxstatat@plt+0xdbb0>
  4104f4:	cbz	x26, 410624 <__fxstatat@plt+0xdbd4>
  4104f8:	mov	w0, #0x22                  	// #34
  4104fc:	strb	w0, [x28]
  410500:	mov	w0, #0x1                   	// #1
  410504:	str	w0, [sp, #132]
  410508:	mov	x27, #0x1                   	// #1
  41050c:	str	x27, [sp, #144]
  410510:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410514:	add	x0, x0, #0x40
  410518:	str	x0, [sp, #160]
  41051c:	b	4104e4 <__fxstatat@plt+0xda94>
  410520:	mov	w1, w23
  410524:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410528:	add	x0, x0, #0x70
  41052c:	bl	410234 <__fxstatat@plt+0xd7e4>
  410530:	str	x0, [sp, #200]
  410534:	mov	w1, w23
  410538:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  41053c:	add	x0, x0, #0x68
  410540:	bl	410234 <__fxstatat@plt+0xd7e4>
  410544:	str	x0, [sp, #240]
  410548:	b	410434 <__fxstatat@plt+0xd9e4>
  41054c:	ldr	x1, [sp, #200]
  410550:	ldrb	w0, [x1]
  410554:	cbnz	w0, 41056c <__fxstatat@plt+0xdb1c>
  410558:	mov	x27, #0x0                   	// #0
  41055c:	b	410440 <__fxstatat@plt+0xd9f0>
  410560:	add	x27, x27, #0x1
  410564:	ldrb	w0, [x1, x27]
  410568:	cbz	w0, 410440 <__fxstatat@plt+0xd9f0>
  41056c:	cmp	x26, x27
  410570:	b.ls	410560 <__fxstatat@plt+0xdb10>  // b.plast
  410574:	strb	w0, [x28, x27]
  410578:	b	410560 <__fxstatat@plt+0xdb10>
  41057c:	ldr	w0, [sp, #112]
  410580:	cbnz	w0, 410484 <__fxstatat@plt+0xda34>
  410584:	mov	w0, #0x1                   	// #1
  410588:	str	w0, [sp, #132]
  41058c:	cbz	x26, 410644 <__fxstatat@plt+0xdbf4>
  410590:	mov	w0, #0x27                  	// #39
  410594:	strb	w0, [x28]
  410598:	str	wzr, [sp, #112]
  41059c:	mov	x27, #0x1                   	// #1
  4105a0:	str	x27, [sp, #144]
  4105a4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4105a8:	add	x0, x0, #0x68
  4105ac:	str	x0, [sp, #160]
  4105b0:	mov	w23, #0x2                   	// #2
  4105b4:	b	4104e4 <__fxstatat@plt+0xda94>
  4105b8:	ldr	w0, [sp, #112]
  4105bc:	cbz	w0, 41058c <__fxstatat@plt+0xdb3c>
  4105c0:	mov	x0, #0x1                   	// #1
  4105c4:	str	x0, [sp, #144]
  4105c8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4105cc:	add	x0, x0, #0x68
  4105d0:	str	x0, [sp, #160]
  4105d4:	mov	x27, #0x0                   	// #0
  4105d8:	b	4104e4 <__fxstatat@plt+0xda94>
  4105dc:	bl	402760 <abort@plt>
  4105e0:	str	wzr, [sp, #112]
  4105e4:	mov	x27, #0x0                   	// #0
  4105e8:	b	4104e4 <__fxstatat@plt+0xda94>
  4105ec:	str	wzr, [sp, #112]
  4105f0:	mov	w0, #0x1                   	// #1
  4105f4:	str	w0, [sp, #132]
  4105f8:	mov	x27, #0x0                   	// #0
  4105fc:	b	4104e4 <__fxstatat@plt+0xda94>
  410600:	ldr	w0, [sp, #112]
  410604:	str	w0, [sp, #132]
  410608:	mov	x0, #0x1                   	// #1
  41060c:	str	x0, [sp, #144]
  410610:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410614:	add	x0, x0, #0x40
  410618:	str	x0, [sp, #160]
  41061c:	mov	x27, #0x0                   	// #0
  410620:	b	4104e4 <__fxstatat@plt+0xda94>
  410624:	mov	w0, #0x1                   	// #1
  410628:	str	w0, [sp, #132]
  41062c:	mov	x27, #0x1                   	// #1
  410630:	str	x27, [sp, #144]
  410634:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410638:	add	x0, x0, #0x40
  41063c:	str	x0, [sp, #160]
  410640:	b	4104e4 <__fxstatat@plt+0xda94>
  410644:	str	wzr, [sp, #112]
  410648:	mov	x27, #0x1                   	// #1
  41064c:	str	x27, [sp, #144]
  410650:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  410654:	add	x0, x0, #0x68
  410658:	str	x0, [sp, #160]
  41065c:	mov	w23, #0x2                   	// #2
  410660:	b	4104e4 <__fxstatat@plt+0xda94>
  410664:	ldr	x0, [sp, #144]
  410668:	add	x20, x24, x0
  41066c:	cmp	x0, #0x1
  410670:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  410674:	b.ne	410684 <__fxstatat@plt+0xdc34>  // b.any
  410678:	ldr	x0, [sp, #136]
  41067c:	bl	402430 <strlen@plt>
  410680:	mov	x25, x0
  410684:	cmp	x20, x25
  410688:	b.hi	4112b4 <__fxstatat@plt+0xe864>  // b.pmore
  41068c:	ldr	x0, [sp, #136]
  410690:	add	x20, x0, x24
  410694:	ldr	x2, [sp, #144]
  410698:	ldr	x1, [sp, #160]
  41069c:	mov	x0, x20
  4106a0:	bl	4027a0 <memcmp@plt>
  4106a4:	cbnz	w0, 4112b4 <__fxstatat@plt+0xe864>
  4106a8:	ldr	w0, [sp, #112]
  4106ac:	cbnz	w0, 4106d4 <__fxstatat@plt+0xdc84>
  4106b0:	ldrb	w20, [x20]
  4106b4:	cmp	w20, #0x7e
  4106b8:	b.hi	410ba0 <__fxstatat@plt+0xe150>  // b.pmore
  4106bc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4106c0:	add	x0, x0, #0xd0
  4106c4:	ldrh	w0, [x0, w20, uxtw #1]
  4106c8:	adr	x1, 4106d4 <__fxstatat@plt+0xdc84>
  4106cc:	add	x0, x1, w0, sxth #2
  4106d0:	br	x0
  4106d4:	mov	x24, x25
  4106d8:	mov	w25, w23
  4106dc:	b	41123c <__fxstatat@plt+0xe7ec>
  4106e0:	ldr	w0, [sp, #132]
  4106e4:	cbnz	w0, 410700 <__fxstatat@plt+0xdcb0>
  4106e8:	ldr	x0, [sp, #184]
  4106ec:	tbnz	w0, #0, 410fd4 <__fxstatat@plt+0xe584>
  4106f0:	ldr	w0, [sp, #132]
  4106f4:	mov	w22, w0
  4106f8:	mov	w19, w0
  4106fc:	b	410f14 <__fxstatat@plt+0xe4c4>
  410700:	ldr	w0, [sp, #112]
  410704:	cbnz	w0, 4111f0 <__fxstatat@plt+0xe7a0>
  410708:	mov	w22, w0
  41070c:	cmp	w23, #0x2
  410710:	cset	w1, eq  // eq = none
  410714:	ldr	w0, [sp, #124]
  410718:	eor	w0, w0, #0x1
  41071c:	ands	w0, w1, w0
  410720:	b.eq	410784 <__fxstatat@plt+0xdd34>  // b.none
  410724:	cmp	x26, x27
  410728:	b.ls	410734 <__fxstatat@plt+0xdce4>  // b.plast
  41072c:	mov	w1, #0x27                  	// #39
  410730:	strb	w1, [x28, x27]
  410734:	add	x1, x27, #0x1
  410738:	cmp	x26, x1
  41073c:	b.ls	410748 <__fxstatat@plt+0xdcf8>  // b.plast
  410740:	mov	w2, #0x24                  	// #36
  410744:	strb	w2, [x28, x1]
  410748:	add	x1, x27, #0x2
  41074c:	cmp	x26, x1
  410750:	b.ls	41075c <__fxstatat@plt+0xdd0c>  // b.plast
  410754:	mov	w2, #0x27                  	// #39
  410758:	strb	w2, [x28, x1]
  41075c:	add	x1, x27, #0x3
  410760:	cmp	x26, x1
  410764:	b.ls	4112a0 <__fxstatat@plt+0xe850>  // b.plast
  410768:	mov	w2, #0x5c                  	// #92
  41076c:	strb	w2, [x28, x1]
  410770:	add	x27, x27, #0x4
  410774:	str	w0, [sp, #124]
  410778:	mov	w19, #0x0                   	// #0
  41077c:	mov	w20, #0x30                  	// #48
  410780:	b	410f3c <__fxstatat@plt+0xe4ec>
  410784:	cmp	x26, x27
  410788:	b.hi	4107a8 <__fxstatat@plt+0xdd58>  // b.pmore
  41078c:	add	x2, x27, #0x1
  410790:	cbnz	w21, 4107b8 <__fxstatat@plt+0xdd68>
  410794:	mov	w0, w19
  410798:	mov	w19, w21
  41079c:	mov	x27, x2
  4107a0:	mov	w20, #0x30                  	// #48
  4107a4:	b	410f14 <__fxstatat@plt+0xe4c4>
  4107a8:	mov	w1, #0x5c                  	// #92
  4107ac:	strb	w1, [x28, x27]
  4107b0:	add	x2, x27, #0x1
  4107b4:	cbz	w21, 4107f4 <__fxstatat@plt+0xdda4>
  4107b8:	add	x1, x24, #0x1
  4107bc:	cmp	x1, x25
  4107c0:	b.cs	4107dc <__fxstatat@plt+0xdd8c>  // b.hs, b.nlast
  4107c4:	ldr	x3, [sp, #136]
  4107c8:	ldrb	w1, [x3, x1]
  4107cc:	sub	w1, w1, #0x30
  4107d0:	and	w1, w1, #0xff
  4107d4:	cmp	w1, #0x9
  4107d8:	b.ls	410808 <__fxstatat@plt+0xddb8>  // b.plast
  4107dc:	mov	w1, w0
  4107e0:	mov	w0, w19
  4107e4:	mov	w19, w1
  4107e8:	mov	x27, x2
  4107ec:	mov	w20, #0x30                  	// #48
  4107f0:	b	410f24 <__fxstatat@plt+0xe4d4>
  4107f4:	mov	w0, w19
  4107f8:	mov	w19, w21
  4107fc:	mov	x27, x2
  410800:	mov	w20, #0x30                  	// #48
  410804:	b	410f3c <__fxstatat@plt+0xe4ec>
  410808:	cmp	x26, x2
  41080c:	b.ls	410818 <__fxstatat@plt+0xddc8>  // b.plast
  410810:	mov	w1, #0x30                  	// #48
  410814:	strb	w1, [x28, x2]
  410818:	add	x1, x27, #0x2
  41081c:	cmp	x26, x1
  410820:	b.ls	41082c <__fxstatat@plt+0xdddc>  // b.plast
  410824:	mov	w2, #0x30                  	// #48
  410828:	strb	w2, [x28, x1]
  41082c:	add	x2, x27, #0x3
  410830:	b	4107dc <__fxstatat@plt+0xdd8c>
  410834:	mov	w22, #0x0                   	// #0
  410838:	cmp	w23, #0x2
  41083c:	b.eq	410858 <__fxstatat@plt+0xde08>  // b.none
  410840:	cmp	w23, #0x5
  410844:	b.eq	41086c <__fxstatat@plt+0xde1c>  // b.none
  410848:	mov	w19, #0x0                   	// #0
  41084c:	mov	w0, #0x0                   	// #0
  410850:	mov	w20, #0x3f                  	// #63
  410854:	b	410f14 <__fxstatat@plt+0xe4c4>
  410858:	ldr	w0, [sp, #112]
  41085c:	cbnz	w0, 4111fc <__fxstatat@plt+0xe7ac>
  410860:	mov	w19, w0
  410864:	mov	w20, #0x3f                  	// #63
  410868:	b	410b88 <__fxstatat@plt+0xe138>
  41086c:	ldr	x0, [sp, #184]
  410870:	tbz	w0, #2, 41103c <__fxstatat@plt+0xe5ec>
  410874:	add	x4, x24, #0x2
  410878:	cmp	x4, x25
  41087c:	b.cs	41104c <__fxstatat@plt+0xe5fc>  // b.hs, b.nlast
  410880:	ldr	x0, [sp, #136]
  410884:	add	x0, x0, x24
  410888:	ldrb	w20, [x0, #1]
  41088c:	cmp	w20, #0x3f
  410890:	b.eq	4108a4 <__fxstatat@plt+0xde54>  // b.none
  410894:	mov	w19, #0x0                   	// #0
  410898:	mov	w0, #0x0                   	// #0
  41089c:	mov	w20, #0x3f                  	// #63
  4108a0:	b	410f14 <__fxstatat@plt+0xe4c4>
  4108a4:	ldr	x0, [sp, #136]
  4108a8:	ldrb	w3, [x0, x4]
  4108ac:	cmp	w3, #0x3e
  4108b0:	b.hi	41105c <__fxstatat@plt+0xe60c>  // b.pmore
  4108b4:	mov	x1, #0x1                   	// #1
  4108b8:	lsl	x1, x1, x3
  4108bc:	mov	w19, #0x0                   	// #0
  4108c0:	mov	w0, #0x0                   	// #0
  4108c4:	mov	x2, #0xa38200000000        	// #179778741075968
  4108c8:	movk	x2, #0x7000, lsl #48
  4108cc:	tst	x1, x2
  4108d0:	b.eq	410f14 <__fxstatat@plt+0xe4c4>  // b.none
  4108d4:	ldr	w0, [sp, #112]
  4108d8:	cbnz	w0, 411294 <__fxstatat@plt+0xe844>
  4108dc:	cmp	x26, x27
  4108e0:	b.ls	4108ec <__fxstatat@plt+0xde9c>  // b.plast
  4108e4:	mov	w0, #0x3f                  	// #63
  4108e8:	strb	w0, [x28, x27]
  4108ec:	add	x0, x27, #0x1
  4108f0:	cmp	x26, x0
  4108f4:	b.ls	410900 <__fxstatat@plt+0xdeb0>  // b.plast
  4108f8:	mov	w1, #0x22                  	// #34
  4108fc:	strb	w1, [x28, x0]
  410900:	add	x0, x27, #0x2
  410904:	cmp	x26, x0
  410908:	b.ls	410914 <__fxstatat@plt+0xdec4>  // b.plast
  41090c:	mov	w1, #0x22                  	// #34
  410910:	strb	w1, [x28, x0]
  410914:	add	x0, x27, #0x3
  410918:	cmp	x26, x0
  41091c:	b.ls	410928 <__fxstatat@plt+0xded8>  // b.plast
  410920:	mov	w1, #0x3f                  	// #63
  410924:	strb	w1, [x28, x0]
  410928:	add	x27, x27, #0x4
  41092c:	ldr	w0, [sp, #112]
  410930:	mov	w19, w0
  410934:	mov	w20, w3
  410938:	mov	x24, x4
  41093c:	b	410f14 <__fxstatat@plt+0xe4c4>
  410940:	mov	w22, #0x0                   	// #0
  410944:	mov	w20, #0x8                   	// #8
  410948:	mov	w0, #0x62                  	// #98
  41094c:	b	41097c <__fxstatat@plt+0xdf2c>
  410950:	mov	w22, #0x0                   	// #0
  410954:	mov	w20, #0xc                   	// #12
  410958:	mov	w0, #0x66                  	// #102
  41095c:	b	41097c <__fxstatat@plt+0xdf2c>
  410960:	mov	w22, #0x0                   	// #0
  410964:	mov	w20, #0xd                   	// #13
  410968:	mov	w0, #0x72                  	// #114
  41096c:	ldr	w1, [sp, #112]
  410970:	cmp	w1, #0x0
  410974:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  410978:	b.eq	410a54 <__fxstatat@plt+0xe004>  // b.none
  41097c:	ldr	w1, [sp, #132]
  410980:	cbnz	w1, 411090 <__fxstatat@plt+0xe640>
  410984:	mov	w19, w1
  410988:	mov	w0, w1
  41098c:	b	410f14 <__fxstatat@plt+0xe4c4>
  410990:	mov	w22, #0x0                   	// #0
  410994:	mov	w20, #0x9                   	// #9
  410998:	mov	w0, #0x74                  	// #116
  41099c:	b	41096c <__fxstatat@plt+0xdf1c>
  4109a0:	mov	w22, #0x0                   	// #0
  4109a4:	mov	w20, #0xb                   	// #11
  4109a8:	mov	w0, #0x76                  	// #118
  4109ac:	b	41097c <__fxstatat@plt+0xdf2c>
  4109b0:	mov	w22, #0x0                   	// #0
  4109b4:	cmp	w23, #0x2
  4109b8:	b.eq	4109e4 <__fxstatat@plt+0xdf94>  // b.none
  4109bc:	ldr	w0, [sp, #132]
  4109c0:	cmp	w0, #0x0
  4109c4:	ldr	w0, [sp, #112]
  4109c8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4109cc:	ldr	w0, [sp, #176]
  4109d0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4109d4:	b.ne	4110a8 <__fxstatat@plt+0xe658>  // b.any
  4109d8:	mov	w20, #0x5c                  	// #92
  4109dc:	mov	w0, w20
  4109e0:	b	41097c <__fxstatat@plt+0xdf2c>
  4109e4:	ldr	w0, [sp, #112]
  4109e8:	cbnz	w0, 411208 <__fxstatat@plt+0xe7b8>
  4109ec:	mov	w19, w0
  4109f0:	mov	w20, #0x5c                  	// #92
  4109f4:	eor	w0, w0, #0x1
  4109f8:	ldr	w1, [sp, #124]
  4109fc:	and	w0, w1, w0
  410a00:	tst	w0, #0xff
  410a04:	b.eq	410fb4 <__fxstatat@plt+0xe564>  // b.none
  410a08:	cmp	x26, x27
  410a0c:	b.ls	410a18 <__fxstatat@plt+0xdfc8>  // b.plast
  410a10:	mov	w0, #0x27                  	// #39
  410a14:	strb	w0, [x28, x27]
  410a18:	add	x0, x27, #0x1
  410a1c:	cmp	x26, x0
  410a20:	b.ls	410a2c <__fxstatat@plt+0xdfdc>  // b.plast
  410a24:	mov	w1, #0x27                  	// #39
  410a28:	strb	w1, [x28, x0]
  410a2c:	add	x27, x27, #0x2
  410a30:	str	wzr, [sp, #124]
  410a34:	b	410fb4 <__fxstatat@plt+0xe564>
  410a38:	mov	w0, #0x6e                  	// #110
  410a3c:	b	41096c <__fxstatat@plt+0xdf1c>
  410a40:	mov	w0, #0x6e                  	// #110
  410a44:	b	41096c <__fxstatat@plt+0xdf1c>
  410a48:	mov	w22, #0x0                   	// #0
  410a4c:	mov	w0, #0x6e                  	// #110
  410a50:	b	41096c <__fxstatat@plt+0xdf1c>
  410a54:	mov	x24, x25
  410a58:	mov	w25, #0x2                   	// #2
  410a5c:	b	411228 <__fxstatat@plt+0xe7d8>
  410a60:	mov	w0, #0x61                  	// #97
  410a64:	b	41097c <__fxstatat@plt+0xdf2c>
  410a68:	mov	w0, #0x61                  	// #97
  410a6c:	b	41097c <__fxstatat@plt+0xdf2c>
  410a70:	mov	w22, #0x0                   	// #0
  410a74:	cmp	x25, #0x1
  410a78:	cset	w0, ne  // ne = any
  410a7c:	cmn	x25, #0x1
  410a80:	b.eq	410a98 <__fxstatat@plt+0xe048>  // b.none
  410a84:	cbnz	w0, 411068 <__fxstatat@plt+0xe618>
  410a88:	cbz	x24, 410ac0 <__fxstatat@plt+0xe070>
  410a8c:	mov	w19, #0x0                   	// #0
  410a90:	mov	w0, #0x0                   	// #0
  410a94:	b	410f14 <__fxstatat@plt+0xe4c4>
  410a98:	ldr	x0, [sp, #136]
  410a9c:	ldrb	w0, [x0, #1]
  410aa0:	cmp	w0, #0x0
  410aa4:	cset	w0, ne  // ne = any
  410aa8:	b	410a84 <__fxstatat@plt+0xe034>
  410aac:	mov	w22, #0x0                   	// #0
  410ab0:	b	410a88 <__fxstatat@plt+0xe038>
  410ab4:	mov	w22, #0x0                   	// #0
  410ab8:	b	410ac0 <__fxstatat@plt+0xe070>
  410abc:	mov	w19, w22
  410ac0:	cmp	w23, #0x2
  410ac4:	cset	w0, eq  // eq = none
  410ac8:	ldr	w1, [sp, #112]
  410acc:	ands	w0, w1, w0
  410ad0:	b.eq	410f14 <__fxstatat@plt+0xe4c4>  // b.none
  410ad4:	mov	x24, x25
  410ad8:	mov	w25, #0x2                   	// #2
  410adc:	b	411228 <__fxstatat@plt+0xe7d8>
  410ae0:	ldr	w19, [sp, #112]
  410ae4:	b	410ac0 <__fxstatat@plt+0xe070>
  410ae8:	mov	w22, #0x0                   	// #0
  410aec:	mov	w19, #0x0                   	// #0
  410af0:	b	410ac0 <__fxstatat@plt+0xe070>
  410af4:	mov	w22, #0x0                   	// #0
  410af8:	cmp	w23, #0x2
  410afc:	b.eq	410b10 <__fxstatat@plt+0xe0c0>  // b.none
  410b00:	str	w19, [sp, #180]
  410b04:	mov	w0, #0x0                   	// #0
  410b08:	mov	w20, #0x27                  	// #39
  410b0c:	b	410f14 <__fxstatat@plt+0xe4c4>
  410b10:	ldr	w0, [sp, #112]
  410b14:	cbnz	w0, 411214 <__fxstatat@plt+0xe7c4>
  410b18:	cmp	x26, #0x0
  410b1c:	mov	x0, #0x0                   	// #0
  410b20:	ldr	x1, [sp, #192]
  410b24:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  410b28:	b.eq	410b58 <__fxstatat@plt+0xe108>  // b.none
  410b2c:	cmp	x26, x27
  410b30:	b.ls	410b3c <__fxstatat@plt+0xe0ec>  // b.plast
  410b34:	mov	w0, #0x27                  	// #39
  410b38:	strb	w0, [x28, x27]
  410b3c:	add	x0, x27, #0x1
  410b40:	cmp	x26, x0
  410b44:	b.ls	410b90 <__fxstatat@plt+0xe140>  // b.plast
  410b48:	mov	w1, #0x5c                  	// #92
  410b4c:	strb	w1, [x28, x0]
  410b50:	mov	x0, x26
  410b54:	ldr	x26, [sp, #192]
  410b58:	add	x1, x27, #0x2
  410b5c:	cmp	x1, x0
  410b60:	b.cs	410b6c <__fxstatat@plt+0xe11c>  // b.hs, b.nlast
  410b64:	mov	w2, #0x27                  	// #39
  410b68:	strb	w2, [x28, x1]
  410b6c:	add	x27, x27, #0x3
  410b70:	str	w19, [sp, #180]
  410b74:	ldr	w1, [sp, #112]
  410b78:	str	w1, [sp, #124]
  410b7c:	str	x26, [sp, #192]
  410b80:	mov	x26, x0
  410b84:	mov	w20, #0x27                  	// #39
  410b88:	mov	w0, #0x0                   	// #0
  410b8c:	b	410f3c <__fxstatat@plt+0xe4ec>
  410b90:	mov	x0, x26
  410b94:	ldr	x26, [sp, #192]
  410b98:	b	410b58 <__fxstatat@plt+0xe108>
  410b9c:	mov	w22, #0x0                   	// #0
  410ba0:	ldr	x0, [sp, #168]
  410ba4:	cmp	x0, #0x1
  410ba8:	b.ne	410be4 <__fxstatat@plt+0xe194>  // b.any
  410bac:	bl	402820 <__ctype_b_loc@plt>
  410bb0:	and	x1, x20, #0xff
  410bb4:	ldr	x0, [x0]
  410bb8:	ldrh	w19, [x0, x1, lsl #1]
  410bbc:	ubfx	x19, x19, #14, #1
  410bc0:	ldr	x0, [sp, #168]
  410bc4:	mov	x2, x0
  410bc8:	eor	w0, w19, #0x1
  410bcc:	ldr	w1, [sp, #132]
  410bd0:	and	w0, w1, w0
  410bd4:	ands	w0, w0, #0xff
  410bd8:	b.eq	410f14 <__fxstatat@plt+0xe4c4>  // b.none
  410bdc:	mov	w19, #0x0                   	// #0
  410be0:	b	410d90 <__fxstatat@plt+0xe340>
  410be4:	str	xzr, [sp, #232]
  410be8:	cmn	x25, #0x1
  410bec:	b.eq	410c10 <__fxstatat@plt+0xe1c0>  // b.none
  410bf0:	mov	x0, #0x0                   	// #0
  410bf4:	str	w21, [sp, #176]
  410bf8:	str	w20, [sp, #208]
  410bfc:	str	w22, [sp, #212]
  410c00:	mov	x22, x0
  410c04:	str	x27, [sp, #216]
  410c08:	ldr	w27, [sp, #112]
  410c0c:	b	410ce0 <__fxstatat@plt+0xe290>
  410c10:	ldr	x0, [sp, #136]
  410c14:	bl	402430 <strlen@plt>
  410c18:	mov	x25, x0
  410c1c:	b	410bf0 <__fxstatat@plt+0xe1a0>
  410c20:	ldr	w20, [sp, #208]
  410c24:	mov	x2, x22
  410c28:	mov	x0, x21
  410c2c:	ldr	w21, [sp, #176]
  410c30:	ldr	w22, [sp, #212]
  410c34:	ldr	x27, [sp, #216]
  410c38:	mov	w19, #0x0                   	// #0
  410c3c:	cmp	x0, x25
  410c40:	b.cs	410d88 <__fxstatat@plt+0xe338>  // b.hs, b.nlast
  410c44:	mov	x1, x2
  410c48:	ldr	x2, [sp, #136]
  410c4c:	ldrb	w0, [x2, x0]
  410c50:	cbz	w0, 410c70 <__fxstatat@plt+0xe220>
  410c54:	add	x1, x1, #0x1
  410c58:	add	x0, x24, x1
  410c5c:	cmp	x25, x0
  410c60:	b.hi	410c4c <__fxstatat@plt+0xe1fc>  // b.pmore
  410c64:	mov	x2, x1
  410c68:	mov	w19, #0x0                   	// #0
  410c6c:	b	410d88 <__fxstatat@plt+0xe338>
  410c70:	mov	x2, x1
  410c74:	mov	w19, #0x0                   	// #0
  410c78:	b	410d88 <__fxstatat@plt+0xe338>
  410c7c:	add	x1, x1, #0x1
  410c80:	cmp	x1, x21
  410c84:	b.eq	410cc0 <__fxstatat@plt+0xe270>  // b.none
  410c88:	ldrb	w0, [x1]
  410c8c:	sub	w0, w0, #0x5b
  410c90:	and	w0, w0, #0xff
  410c94:	cmp	w0, #0x21
  410c98:	b.hi	410c7c <__fxstatat@plt+0xe22c>  // b.pmore
  410c9c:	mov	x2, #0x1                   	// #1
  410ca0:	lsl	x0, x2, x0
  410ca4:	mov	x2, #0x2b                  	// #43
  410ca8:	movk	x2, #0x2, lsl #32
  410cac:	tst	x0, x2
  410cb0:	b.eq	410c7c <__fxstatat@plt+0xe22c>  // b.none
  410cb4:	mov	x24, x25
  410cb8:	mov	w25, #0x2                   	// #2
  410cbc:	b	411228 <__fxstatat@plt+0xe7d8>
  410cc0:	ldr	w0, [sp, #228]
  410cc4:	bl	4029c0 <iswprint@plt>
  410cc8:	cmp	w0, #0x0
  410ccc:	csel	w19, w19, wzr, ne  // ne = any
  410cd0:	add	x22, x22, x20
  410cd4:	add	x0, sp, #0xe8
  410cd8:	bl	402770 <mbsinit@plt>
  410cdc:	cbnz	w0, 410d40 <__fxstatat@plt+0xe2f0>
  410ce0:	add	x21, x24, x22
  410ce4:	add	x3, sp, #0xe8
  410ce8:	sub	x2, x25, x21
  410cec:	ldr	x0, [sp, #136]
  410cf0:	add	x1, x0, x21
  410cf4:	add	x0, sp, #0xe4
  410cf8:	bl	413118 <__fxstatat@plt+0x106c8>
  410cfc:	mov	x20, x0
  410d00:	cbz	x0, 410d74 <__fxstatat@plt+0xe324>
  410d04:	cmn	x0, #0x1
  410d08:	b.eq	410d58 <__fxstatat@plt+0xe308>  // b.none
  410d0c:	cmn	x0, #0x2
  410d10:	b.eq	410c20 <__fxstatat@plt+0xe1d0>  // b.none
  410d14:	cmp	w27, #0x0
  410d18:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  410d1c:	b.ne	410cc0 <__fxstatat@plt+0xe270>  // b.any
  410d20:	cmp	x0, #0x1
  410d24:	b.ls	410cc0 <__fxstatat@plt+0xe270>  // b.plast
  410d28:	add	x1, x21, #0x1
  410d2c:	ldr	x0, [sp, #136]
  410d30:	add	x1, x0, x1
  410d34:	add	x0, x0, x20
  410d38:	add	x21, x0, x21
  410d3c:	b	410c88 <__fxstatat@plt+0xe238>
  410d40:	ldr	w21, [sp, #176]
  410d44:	ldr	w20, [sp, #208]
  410d48:	mov	x2, x22
  410d4c:	ldr	w22, [sp, #212]
  410d50:	ldr	x27, [sp, #216]
  410d54:	b	410d88 <__fxstatat@plt+0xe338>
  410d58:	ldr	w21, [sp, #176]
  410d5c:	ldr	w20, [sp, #208]
  410d60:	mov	x2, x22
  410d64:	ldr	w22, [sp, #212]
  410d68:	ldr	x27, [sp, #216]
  410d6c:	mov	w19, #0x0                   	// #0
  410d70:	b	410d88 <__fxstatat@plt+0xe338>
  410d74:	ldr	w21, [sp, #176]
  410d78:	ldr	w20, [sp, #208]
  410d7c:	mov	x2, x22
  410d80:	ldr	w22, [sp, #212]
  410d84:	ldr	x27, [sp, #216]
  410d88:	cmp	x2, #0x1
  410d8c:	b.ls	410bc8 <__fxstatat@plt+0xe178>  // b.plast
  410d90:	add	x5, x24, x2
  410d94:	mov	w0, #0x0                   	// #0
  410d98:	eor	w1, w19, #0x1
  410d9c:	ldr	w2, [sp, #132]
  410da0:	and	w1, w2, w1
  410da4:	and	w1, w1, #0xff
  410da8:	mov	w3, w1
  410dac:	mov	w6, #0x5c                  	// #92
  410db0:	mov	w7, #0x24                  	// #36
  410db4:	ldr	w9, [sp, #112]
  410db8:	ldr	w4, [sp, #124]
  410dbc:	ldr	x8, [sp, #136]
  410dc0:	b	410e3c <__fxstatat@plt+0xe3ec>
  410dc4:	cbz	w22, 410dd8 <__fxstatat@plt+0xe388>
  410dc8:	cmp	x26, x27
  410dcc:	b.ls	410dd4 <__fxstatat@plt+0xe384>  // b.plast
  410dd0:	strb	w6, [x28, x27]
  410dd4:	add	x27, x27, #0x1
  410dd8:	add	x2, x24, #0x1
  410ddc:	cmp	x2, x5
  410de0:	b.cs	410ef4 <__fxstatat@plt+0xe4a4>  // b.hs, b.nlast
  410de4:	eor	w22, w0, #0x1
  410de8:	and	w22, w4, w22
  410dec:	ands	w22, w22, #0xff
  410df0:	b.eq	410f08 <__fxstatat@plt+0xe4b8>  // b.none
  410df4:	cmp	x26, x27
  410df8:	b.ls	410e04 <__fxstatat@plt+0xe3b4>  // b.plast
  410dfc:	mov	w4, #0x27                  	// #39
  410e00:	strb	w4, [x28, x27]
  410e04:	add	x4, x27, #0x1
  410e08:	cmp	x26, x4
  410e0c:	b.ls	410e18 <__fxstatat@plt+0xe3c8>  // b.plast
  410e10:	mov	w10, #0x27                  	// #39
  410e14:	strb	w10, [x28, x4]
  410e18:	add	x27, x27, #0x2
  410e1c:	mov	w22, w3
  410e20:	mov	x24, x2
  410e24:	mov	w4, w3
  410e28:	cmp	x26, x27
  410e2c:	b.ls	410e34 <__fxstatat@plt+0xe3e4>  // b.plast
  410e30:	strb	w20, [x28, x27]
  410e34:	add	x27, x27, #0x1
  410e38:	ldrb	w20, [x8, x24]
  410e3c:	cbz	w1, 410dc4 <__fxstatat@plt+0xe374>
  410e40:	cbnz	w9, 4111d0 <__fxstatat@plt+0xe780>
  410e44:	cmp	w23, #0x2
  410e48:	cset	w0, eq  // eq = none
  410e4c:	eor	w2, w4, #0x1
  410e50:	ands	w0, w0, w2
  410e54:	b.eq	410e94 <__fxstatat@plt+0xe444>  // b.none
  410e58:	cmp	x26, x27
  410e5c:	b.ls	410e68 <__fxstatat@plt+0xe418>  // b.plast
  410e60:	mov	w2, #0x27                  	// #39
  410e64:	strb	w2, [x28, x27]
  410e68:	add	x2, x27, #0x1
  410e6c:	cmp	x26, x2
  410e70:	b.ls	410e78 <__fxstatat@plt+0xe428>  // b.plast
  410e74:	strb	w7, [x28, x2]
  410e78:	add	x2, x27, #0x2
  410e7c:	cmp	x26, x2
  410e80:	b.ls	410e8c <__fxstatat@plt+0xe43c>  // b.plast
  410e84:	mov	w4, #0x27                  	// #39
  410e88:	strb	w4, [x28, x2]
  410e8c:	add	x27, x27, #0x3
  410e90:	mov	w4, w0
  410e94:	cmp	x26, x27
  410e98:	b.ls	410ea0 <__fxstatat@plt+0xe450>  // b.plast
  410e9c:	strb	w6, [x28, x27]
  410ea0:	add	x0, x27, #0x1
  410ea4:	cmp	x26, x0
  410ea8:	b.ls	410eb8 <__fxstatat@plt+0xe468>  // b.plast
  410eac:	lsr	w2, w20, #6
  410eb0:	add	w2, w2, #0x30
  410eb4:	strb	w2, [x28, x0]
  410eb8:	add	x0, x27, #0x2
  410ebc:	cmp	x26, x0
  410ec0:	b.ls	410ed0 <__fxstatat@plt+0xe480>  // b.plast
  410ec4:	ubfx	x2, x20, #3, #3
  410ec8:	add	w2, w2, #0x30
  410ecc:	strb	w2, [x28, x0]
  410ed0:	add	x27, x27, #0x3
  410ed4:	and	w20, w20, #0x7
  410ed8:	add	w20, w20, #0x30
  410edc:	add	x2, x24, #0x1
  410ee0:	cmp	x5, x2
  410ee4:	b.ls	410efc <__fxstatat@plt+0xe4ac>  // b.plast
  410ee8:	mov	w0, w3
  410eec:	mov	x24, x2
  410ef0:	b	410e28 <__fxstatat@plt+0xe3d8>
  410ef4:	str	w4, [sp, #124]
  410ef8:	b	4109f4 <__fxstatat@plt+0xdfa4>
  410efc:	str	w4, [sp, #124]
  410f00:	mov	w0, w1
  410f04:	b	4109f4 <__fxstatat@plt+0xdfa4>
  410f08:	mov	x24, x2
  410f0c:	b	410e28 <__fxstatat@plt+0xe3d8>
  410f10:	mov	w0, w22
  410f14:	cmp	w21, #0x0
  410f18:	ldr	w1, [sp, #112]
  410f1c:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  410f20:	b.eq	410f3c <__fxstatat@plt+0xe4ec>  // b.none
  410f24:	ldr	x2, [sp, #152]
  410f28:	cbz	x2, 410f3c <__fxstatat@plt+0xe4ec>
  410f2c:	ubfx	x1, x20, #5, #8
  410f30:	ldr	w1, [x2, x1, lsl #2]
  410f34:	lsr	w1, w1, w20
  410f38:	tbnz	w1, #0, 410f40 <__fxstatat@plt+0xe4f0>
  410f3c:	cbz	w22, 4109f4 <__fxstatat@plt+0xdfa4>
  410f40:	ldr	w0, [sp, #112]
  410f44:	cbnz	w0, 411220 <__fxstatat@plt+0xe7d0>
  410f48:	cmp	w23, #0x2
  410f4c:	cset	w0, eq  // eq = none
  410f50:	ldr	w1, [sp, #124]
  410f54:	eor	w1, w1, #0x1
  410f58:	ands	w0, w0, w1
  410f5c:	b.eq	410fa0 <__fxstatat@plt+0xe550>  // b.none
  410f60:	cmp	x26, x27
  410f64:	b.ls	410f70 <__fxstatat@plt+0xe520>  // b.plast
  410f68:	mov	w1, #0x27                  	// #39
  410f6c:	strb	w1, [x28, x27]
  410f70:	add	x1, x27, #0x1
  410f74:	cmp	x26, x1
  410f78:	b.ls	410f84 <__fxstatat@plt+0xe534>  // b.plast
  410f7c:	mov	w2, #0x24                  	// #36
  410f80:	strb	w2, [x28, x1]
  410f84:	add	x1, x27, #0x2
  410f88:	cmp	x26, x1
  410f8c:	b.ls	410f98 <__fxstatat@plt+0xe548>  // b.plast
  410f90:	mov	w2, #0x27                  	// #39
  410f94:	strb	w2, [x28, x1]
  410f98:	add	x27, x27, #0x3
  410f9c:	str	w0, [sp, #124]
  410fa0:	cmp	x26, x27
  410fa4:	b.ls	410fb0 <__fxstatat@plt+0xe560>  // b.plast
  410fa8:	mov	w0, #0x5c                  	// #92
  410fac:	strb	w0, [x28, x27]
  410fb0:	add	x27, x27, #0x1
  410fb4:	cmp	x27, x26
  410fb8:	b.cs	410fc0 <__fxstatat@plt+0xe570>  // b.hs, b.nlast
  410fbc:	strb	w20, [x28, x27]
  410fc0:	add	x27, x27, #0x1
  410fc4:	cmp	w19, #0x0
  410fc8:	ldr	w0, [sp, #128]
  410fcc:	csel	w0, w0, w19, ne  // ne = any
  410fd0:	str	w0, [sp, #128]
  410fd4:	add	x24, x24, #0x1
  410fd8:	cmp	x25, x24
  410fdc:	cset	w19, ne  // ne = any
  410fe0:	cmn	x25, #0x1
  410fe4:	b.eq	4110b8 <__fxstatat@plt+0xe668>  // b.none
  410fe8:	cbz	w19, 4110cc <__fxstatat@plt+0xe67c>
  410fec:	cmp	w23, #0x2
  410ff0:	cset	w21, ne  // ne = any
  410ff4:	ldr	w0, [sp, #132]
  410ff8:	and	w21, w0, w21
  410ffc:	ldr	x0, [sp, #144]
  411000:	cmp	x0, #0x0
  411004:	cset	w0, ne  // ne = any
  411008:	str	w0, [sp, #176]
  41100c:	csel	w22, w21, wzr, ne  // ne = any
  411010:	cbnz	w22, 410664 <__fxstatat@plt+0xdc14>
  411014:	ldr	x0, [sp, #136]
  411018:	ldrb	w20, [x0, x24]
  41101c:	cmp	w20, #0x7e
  411020:	b.hi	410ba0 <__fxstatat@plt+0xe150>  // b.pmore
  411024:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411028:	add	x0, x0, #0x1d0
  41102c:	ldrh	w0, [x0, w20, uxtw #1]
  411030:	adr	x1, 41103c <__fxstatat@plt+0xe5ec>
  411034:	add	x0, x1, w0, sxth #2
  411038:	br	x0
  41103c:	mov	w19, #0x0                   	// #0
  411040:	mov	w0, #0x0                   	// #0
  411044:	mov	w20, #0x3f                  	// #63
  411048:	b	410f14 <__fxstatat@plt+0xe4c4>
  41104c:	mov	w19, #0x0                   	// #0
  411050:	mov	w0, #0x0                   	// #0
  411054:	mov	w20, #0x3f                  	// #63
  411058:	b	410f14 <__fxstatat@plt+0xe4c4>
  41105c:	mov	w19, #0x0                   	// #0
  411060:	mov	w0, #0x0                   	// #0
  411064:	b	410f14 <__fxstatat@plt+0xe4c4>
  411068:	mov	w19, #0x0                   	// #0
  41106c:	mov	w0, #0x0                   	// #0
  411070:	b	410f14 <__fxstatat@plt+0xe4c4>
  411074:	mov	w19, w22
  411078:	ldr	w0, [sp, #112]
  41107c:	b	410f14 <__fxstatat@plt+0xe4c4>
  411080:	mov	w19, w22
  411084:	mov	w22, #0x0                   	// #0
  411088:	mov	w0, #0x0                   	// #0
  41108c:	b	410f14 <__fxstatat@plt+0xe4c4>
  411090:	mov	w20, w0
  411094:	mov	w19, #0x0                   	// #0
  411098:	b	410f40 <__fxstatat@plt+0xe4f0>
  41109c:	mov	w19, #0x0                   	// #0
  4110a0:	mov	w20, #0x61                  	// #97
  4110a4:	b	410f40 <__fxstatat@plt+0xe4f0>
  4110a8:	mov	w19, #0x0                   	// #0
  4110ac:	mov	w0, #0x0                   	// #0
  4110b0:	mov	w20, #0x5c                  	// #92
  4110b4:	b	4109f4 <__fxstatat@plt+0xdfa4>
  4110b8:	ldr	x0, [sp, #136]
  4110bc:	ldrb	w0, [x0, x24]
  4110c0:	cmp	w0, #0x0
  4110c4:	cset	w19, ne  // ne = any
  4110c8:	b	410fe8 <__fxstatat@plt+0xe598>
  4110cc:	cmp	w23, #0x2
  4110d0:	cset	w1, eq  // eq = none
  4110d4:	cmp	w1, #0x0
  4110d8:	ldr	w0, [sp, #112]
  4110dc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4110e0:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  4110e4:	b.eq	4111e4 <__fxstatat@plt+0xe794>  // b.none
  4110e8:	eor	w0, w0, #0x1
  4110ec:	and	w0, w0, #0xff
  4110f0:	cmp	w1, #0x0
  4110f4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4110f8:	cset	w1, ne  // ne = any
  4110fc:	ldr	w2, [sp, #180]
  411100:	ands	w1, w2, w1
  411104:	b.eq	411178 <__fxstatat@plt+0xe728>  // b.none
  411108:	ldr	w0, [sp, #128]
  41110c:	cbnz	w0, 411140 <__fxstatat@plt+0xe6f0>
  411110:	cmp	x26, #0x0
  411114:	cset	w0, eq  // eq = none
  411118:	ldr	x2, [sp, #192]
  41111c:	cmp	x2, #0x0
  411120:	csel	w0, w0, wzr, ne  // ne = any
  411124:	str	w0, [sp, #180]
  411128:	mov	w23, #0x2                   	// #2
  41112c:	cbz	w0, 411174 <__fxstatat@plt+0xe724>
  411130:	ldr	w0, [sp, #128]
  411134:	str	w0, [sp, #112]
  411138:	ldr	x26, [sp, #192]
  41113c:	b	410408 <__fxstatat@plt+0xd9b8>
  411140:	ldr	x0, [sp, #240]
  411144:	str	x0, [sp]
  411148:	ldr	x7, [sp, #200]
  41114c:	ldr	x6, [sp, #152]
  411150:	ldr	w5, [sp, #184]
  411154:	mov	w4, #0x5                   	// #5
  411158:	mov	x3, x25
  41115c:	ldr	x2, [sp, #136]
  411160:	ldr	x1, [sp, #192]
  411164:	mov	x0, x28
  411168:	bl	410388 <__fxstatat@plt+0xd938>
  41116c:	mov	x27, x0
  411170:	b	411270 <__fxstatat@plt+0xe820>
  411174:	mov	w0, w1
  411178:	ldr	x1, [sp, #160]
  41117c:	cmp	x1, #0x0
  411180:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  411184:	b.eq	4111c0 <__fxstatat@plt+0xe770>  // b.none
  411188:	mov	x0, x1
  41118c:	ldrb	w2, [x1]
  411190:	cbz	w2, 4111c0 <__fxstatat@plt+0xe770>
  411194:	mov	x1, x27
  411198:	sub	x0, x0, x27
  41119c:	b	4111ac <__fxstatat@plt+0xe75c>
  4111a0:	add	x1, x1, #0x1
  4111a4:	ldrb	w2, [x0, x1]
  4111a8:	cbz	w2, 4111bc <__fxstatat@plt+0xe76c>
  4111ac:	cmp	x26, x1
  4111b0:	b.ls	4111a0 <__fxstatat@plt+0xe750>  // b.plast
  4111b4:	strb	w2, [x28, x1]
  4111b8:	b	4111a0 <__fxstatat@plt+0xe750>
  4111bc:	mov	x27, x1
  4111c0:	cmp	x26, x27
  4111c4:	b.ls	411270 <__fxstatat@plt+0xe820>  // b.plast
  4111c8:	strb	wzr, [x28, x27]
  4111cc:	b	411270 <__fxstatat@plt+0xe820>
  4111d0:	mov	x24, x25
  4111d4:	mov	w25, w23
  4111d8:	ldr	w0, [sp, #112]
  4111dc:	str	w0, [sp, #132]
  4111e0:	b	411228 <__fxstatat@plt+0xe7d8>
  4111e4:	mov	x24, x25
  4111e8:	mov	w25, #0x2                   	// #2
  4111ec:	b	411228 <__fxstatat@plt+0xe7d8>
  4111f0:	mov	x24, x25
  4111f4:	mov	w25, w23
  4111f8:	b	411228 <__fxstatat@plt+0xe7d8>
  4111fc:	mov	x24, x25
  411200:	mov	w25, w23
  411204:	b	411228 <__fxstatat@plt+0xe7d8>
  411208:	mov	x24, x25
  41120c:	mov	w25, w23
  411210:	b	411228 <__fxstatat@plt+0xe7d8>
  411214:	mov	x24, x25
  411218:	mov	w25, w23
  41121c:	b	411228 <__fxstatat@plt+0xe7d8>
  411220:	mov	x24, x25
  411224:	mov	w25, w23
  411228:	ldr	w0, [sp, #132]
  41122c:	cmp	w0, #0x0
  411230:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  411234:	mov	w0, #0x4                   	// #4
  411238:	csel	w25, w25, w0, ne  // ne = any
  41123c:	ldr	x0, [sp, #240]
  411240:	str	x0, [sp]
  411244:	ldr	x7, [sp, #200]
  411248:	mov	x6, #0x0                   	// #0
  41124c:	ldr	w0, [sp, #184]
  411250:	and	w5, w0, #0xfffffffd
  411254:	mov	w4, w25
  411258:	mov	x3, x24
  41125c:	ldr	x2, [sp, #136]
  411260:	mov	x1, x26
  411264:	mov	x0, x28
  411268:	bl	410388 <__fxstatat@plt+0xd938>
  41126c:	mov	x27, x0
  411270:	mov	x0, x27
  411274:	ldp	x19, x20, [sp, #32]
  411278:	ldp	x21, x22, [sp, #48]
  41127c:	ldp	x23, x24, [sp, #64]
  411280:	ldp	x25, x26, [sp, #80]
  411284:	ldp	x27, x28, [sp, #96]
  411288:	ldp	x29, x30, [sp, #16]
  41128c:	add	sp, sp, #0xf0
  411290:	ret
  411294:	mov	x24, x25
  411298:	mov	w25, w23
  41129c:	b	41123c <__fxstatat@plt+0xe7ec>
  4112a0:	add	x27, x27, #0x4
  4112a4:	str	w0, [sp, #124]
  4112a8:	mov	w19, #0x0                   	// #0
  4112ac:	mov	w20, #0x30                  	// #48
  4112b0:	b	410f14 <__fxstatat@plt+0xe4c4>
  4112b4:	ldr	x0, [sp, #136]
  4112b8:	ldrb	w20, [x0, x24]
  4112bc:	cmp	w20, #0x7e
  4112c0:	b.hi	410b9c <__fxstatat@plt+0xe14c>  // b.pmore
  4112c4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4112c8:	add	x0, x0, #0x2d0
  4112cc:	ldrh	w0, [x0, w20, uxtw #1]
  4112d0:	adr	x1, 4112dc <__fxstatat@plt+0xe88c>
  4112d4:	add	x0, x1, w0, sxth #2
  4112d8:	br	x0
  4112dc:	sub	sp, sp, #0x80
  4112e0:	stp	x29, x30, [sp, #16]
  4112e4:	add	x29, sp, #0x10
  4112e8:	stp	x19, x20, [sp, #32]
  4112ec:	stp	x21, x22, [sp, #48]
  4112f0:	stp	x23, x24, [sp, #64]
  4112f4:	stp	x25, x26, [sp, #80]
  4112f8:	stp	x27, x28, [sp, #96]
  4112fc:	mov	w19, w0
  411300:	str	x1, [sp, #112]
  411304:	str	x2, [sp, #120]
  411308:	mov	x20, x3
  41130c:	bl	4029e0 <__errno_location@plt>
  411310:	mov	x23, x0
  411314:	ldr	w28, [x0]
  411318:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  41131c:	ldr	x21, [x0, #1328]
  411320:	tbnz	w19, #31, 411464 <__fxstatat@plt+0xea14>
  411324:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  411328:	ldr	w0, [x0, #1336]
  41132c:	cmp	w0, w19
  411330:	b.gt	411394 <__fxstatat@plt+0xe944>
  411334:	mov	w0, #0x7fffffff            	// #2147483647
  411338:	cmp	w19, w0
  41133c:	b.eq	411468 <__fxstatat@plt+0xea18>  // b.none
  411340:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  411344:	add	x0, x0, #0x530
  411348:	add	x0, x0, #0x10
  41134c:	cmp	x21, x0
  411350:	b.eq	41146c <__fxstatat@plt+0xea1c>  // b.none
  411354:	add	w24, w19, #0x1
  411358:	sbfiz	x1, x24, #4, #32
  41135c:	mov	x0, x21
  411360:	bl	412374 <__fxstatat@plt+0xf924>
  411364:	mov	x21, x0
  411368:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  41136c:	str	x21, [x0, #1328]
  411370:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  411374:	add	x22, x22, #0x530
  411378:	ldr	w0, [x22, #8]
  41137c:	sub	w2, w24, w0
  411380:	sbfiz	x2, x2, #4, #32
  411384:	mov	w1, #0x0                   	// #0
  411388:	add	x0, x21, w0, sxtw #4
  41138c:	bl	402680 <memset@plt>
  411390:	str	w24, [x22, #8]
  411394:	sbfiz	x19, x19, #4, #32
  411398:	add	x27, x21, x19
  41139c:	ldr	x25, [x21, x19]
  4113a0:	ldr	x22, [x27, #8]
  4113a4:	ldr	w24, [x20, #4]
  4113a8:	orr	w24, w24, #0x1
  4113ac:	add	x26, x20, #0x8
  4113b0:	ldr	x0, [x20, #48]
  4113b4:	str	x0, [sp]
  4113b8:	ldr	x7, [x20, #40]
  4113bc:	mov	x6, x26
  4113c0:	mov	w5, w24
  4113c4:	ldr	w4, [x20]
  4113c8:	ldr	x3, [sp, #120]
  4113cc:	ldr	x2, [sp, #112]
  4113d0:	mov	x1, x25
  4113d4:	mov	x0, x22
  4113d8:	bl	410388 <__fxstatat@plt+0xd938>
  4113dc:	cmp	x25, x0
  4113e0:	b.hi	41143c <__fxstatat@plt+0xe9ec>  // b.pmore
  4113e4:	add	x25, x0, #0x1
  4113e8:	str	x25, [x21, x19]
  4113ec:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4113f0:	add	x0, x0, #0x750
  4113f4:	cmp	x22, x0
  4113f8:	b.eq	411404 <__fxstatat@plt+0xe9b4>  // b.none
  4113fc:	mov	x0, x22
  411400:	bl	402840 <free@plt>
  411404:	mov	x0, x25
  411408:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  41140c:	mov	x22, x0
  411410:	str	x0, [x27, #8]
  411414:	ldr	x1, [x20, #48]
  411418:	str	x1, [sp]
  41141c:	ldr	x7, [x20, #40]
  411420:	mov	x6, x26
  411424:	mov	w5, w24
  411428:	ldr	w4, [x20]
  41142c:	ldr	x3, [sp, #120]
  411430:	ldr	x2, [sp, #112]
  411434:	mov	x1, x25
  411438:	bl	410388 <__fxstatat@plt+0xd938>
  41143c:	str	w28, [x23]
  411440:	mov	x0, x22
  411444:	ldp	x19, x20, [sp, #32]
  411448:	ldp	x21, x22, [sp, #48]
  41144c:	ldp	x23, x24, [sp, #64]
  411450:	ldp	x25, x26, [sp, #80]
  411454:	ldp	x27, x28, [sp, #96]
  411458:	ldp	x29, x30, [sp, #16]
  41145c:	add	sp, sp, #0x80
  411460:	ret
  411464:	bl	402760 <abort@plt>
  411468:	bl	412584 <__fxstatat@plt+0xfb34>
  41146c:	add	w24, w19, #0x1
  411470:	sbfiz	x1, x24, #4, #32
  411474:	mov	x0, #0x0                   	// #0
  411478:	bl	412374 <__fxstatat@plt+0xf924>
  41147c:	mov	x21, x0
  411480:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  411484:	add	x1, x0, #0x530
  411488:	str	x21, [x0, #1328]
  41148c:	ldp	x0, x1, [x1, #16]
  411490:	stp	x0, x1, [x21]
  411494:	b	411370 <__fxstatat@plt+0xe920>
  411498:	stp	x29, x30, [sp, #-48]!
  41149c:	mov	x29, sp
  4114a0:	stp	x19, x20, [sp, #16]
  4114a4:	str	x21, [sp, #32]
  4114a8:	mov	x20, x0
  4114ac:	bl	4029e0 <__errno_location@plt>
  4114b0:	mov	x19, x0
  4114b4:	ldr	w21, [x0]
  4114b8:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  4114bc:	add	x2, x2, #0x750
  4114c0:	add	x2, x2, #0x100
  4114c4:	cmp	x20, #0x0
  4114c8:	mov	x1, #0x38                  	// #56
  4114cc:	csel	x0, x2, x20, eq  // eq = none
  4114d0:	bl	412524 <__fxstatat@plt+0xfad4>
  4114d4:	str	w21, [x19]
  4114d8:	ldp	x19, x20, [sp, #16]
  4114dc:	ldr	x21, [sp, #32]
  4114e0:	ldp	x29, x30, [sp], #48
  4114e4:	ret
  4114e8:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4114ec:	add	x1, x1, #0x750
  4114f0:	add	x1, x1, #0x100
  4114f4:	cmp	x0, #0x0
  4114f8:	csel	x0, x1, x0, eq  // eq = none
  4114fc:	ldr	w0, [x0]
  411500:	ret
  411504:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  411508:	add	x2, x2, #0x750
  41150c:	add	x2, x2, #0x100
  411510:	cmp	x0, #0x0
  411514:	csel	x0, x2, x0, eq  // eq = none
  411518:	str	w1, [x0]
  41151c:	ret
  411520:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  411524:	add	x3, x3, #0x750
  411528:	add	x3, x3, #0x100
  41152c:	cmp	x0, #0x0
  411530:	csel	x0, x3, x0, eq  // eq = none
  411534:	add	x0, x0, #0x8
  411538:	ubfx	x4, x1, #5, #3
  41153c:	and	w1, w1, #0x1f
  411540:	ldr	w5, [x0, x4, lsl #2]
  411544:	lsr	w3, w5, w1
  411548:	eor	w2, w3, w2
  41154c:	and	w2, w2, #0x1
  411550:	lsl	w2, w2, w1
  411554:	eor	w2, w2, w5
  411558:	str	w2, [x0, x4, lsl #2]
  41155c:	and	w0, w3, #0x1
  411560:	ret
  411564:	mov	x2, x0
  411568:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  41156c:	add	x0, x0, #0x750
  411570:	add	x0, x0, #0x100
  411574:	cmp	x2, #0x0
  411578:	csel	x2, x0, x2, eq  // eq = none
  41157c:	ldr	w0, [x2, #4]
  411580:	str	w1, [x2, #4]
  411584:	ret
  411588:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  41158c:	add	x3, x3, #0x750
  411590:	add	x3, x3, #0x100
  411594:	cmp	x0, #0x0
  411598:	csel	x0, x3, x0, eq  // eq = none
  41159c:	mov	w3, #0xa                   	// #10
  4115a0:	str	w3, [x0]
  4115a4:	cmp	x1, #0x0
  4115a8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4115ac:	b.eq	4115bc <__fxstatat@plt+0xeb6c>  // b.none
  4115b0:	str	x1, [x0, #40]
  4115b4:	str	x2, [x0, #48]
  4115b8:	ret
  4115bc:	stp	x29, x30, [sp, #-16]!
  4115c0:	mov	x29, sp
  4115c4:	bl	402760 <abort@plt>
  4115c8:	sub	sp, sp, #0x60
  4115cc:	stp	x29, x30, [sp, #16]
  4115d0:	add	x29, sp, #0x10
  4115d4:	stp	x19, x20, [sp, #32]
  4115d8:	stp	x21, x22, [sp, #48]
  4115dc:	stp	x23, x24, [sp, #64]
  4115e0:	str	x25, [sp, #80]
  4115e4:	mov	x21, x0
  4115e8:	mov	x22, x1
  4115ec:	mov	x23, x2
  4115f0:	mov	x24, x3
  4115f4:	mov	x19, x4
  4115f8:	adrp	x4, 430000 <__progname@@GLIBC_2.17+0xa48>
  4115fc:	add	x4, x4, #0x750
  411600:	add	x4, x4, #0x100
  411604:	cmp	x19, #0x0
  411608:	csel	x19, x4, x19, eq  // eq = none
  41160c:	bl	4029e0 <__errno_location@plt>
  411610:	mov	x20, x0
  411614:	ldr	w25, [x0]
  411618:	ldr	x7, [x19, #40]
  41161c:	ldr	w5, [x19, #4]
  411620:	ldr	w4, [x19]
  411624:	ldr	x0, [x19, #48]
  411628:	str	x0, [sp]
  41162c:	add	x6, x19, #0x8
  411630:	mov	x3, x24
  411634:	mov	x2, x23
  411638:	mov	x1, x22
  41163c:	mov	x0, x21
  411640:	bl	410388 <__fxstatat@plt+0xd938>
  411644:	str	w25, [x20]
  411648:	ldp	x19, x20, [sp, #32]
  41164c:	ldp	x21, x22, [sp, #48]
  411650:	ldp	x23, x24, [sp, #64]
  411654:	ldr	x25, [sp, #80]
  411658:	ldp	x29, x30, [sp, #16]
  41165c:	add	sp, sp, #0x60
  411660:	ret
  411664:	sub	sp, sp, #0x80
  411668:	stp	x29, x30, [sp, #16]
  41166c:	add	x29, sp, #0x10
  411670:	stp	x19, x20, [sp, #32]
  411674:	stp	x21, x22, [sp, #48]
  411678:	stp	x23, x24, [sp, #64]
  41167c:	stp	x25, x26, [sp, #80]
  411680:	stp	x27, x28, [sp, #96]
  411684:	mov	x22, x0
  411688:	mov	x23, x1
  41168c:	mov	x20, x2
  411690:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  411694:	add	x0, x0, #0x750
  411698:	add	x0, x0, #0x100
  41169c:	cmp	x3, #0x0
  4116a0:	csel	x19, x0, x3, eq  // eq = none
  4116a4:	bl	4029e0 <__errno_location@plt>
  4116a8:	mov	x21, x0
  4116ac:	ldr	w28, [x0]
  4116b0:	cmp	x20, #0x0
  4116b4:	cset	w24, eq  // eq = none
  4116b8:	ldr	w0, [x19, #4]
  4116bc:	orr	w24, w24, w0
  4116c0:	add	x27, x19, #0x8
  4116c4:	ldr	x7, [x19, #40]
  4116c8:	ldr	w4, [x19]
  4116cc:	ldr	x0, [x19, #48]
  4116d0:	str	x0, [sp]
  4116d4:	mov	x6, x27
  4116d8:	mov	w5, w24
  4116dc:	mov	x3, x23
  4116e0:	mov	x2, x22
  4116e4:	mov	x1, #0x0                   	// #0
  4116e8:	mov	x0, #0x0                   	// #0
  4116ec:	bl	410388 <__fxstatat@plt+0xd938>
  4116f0:	mov	x25, x0
  4116f4:	add	x26, x0, #0x1
  4116f8:	mov	x0, x26
  4116fc:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  411700:	str	x0, [sp, #120]
  411704:	ldr	x7, [x19, #40]
  411708:	ldr	w4, [x19]
  41170c:	ldr	x1, [x19, #48]
  411710:	str	x1, [sp]
  411714:	mov	x6, x27
  411718:	mov	w5, w24
  41171c:	mov	x3, x23
  411720:	mov	x2, x22
  411724:	mov	x1, x26
  411728:	bl	410388 <__fxstatat@plt+0xd938>
  41172c:	str	w28, [x21]
  411730:	cbz	x20, 411738 <__fxstatat@plt+0xece8>
  411734:	str	x25, [x20]
  411738:	ldr	x0, [sp, #120]
  41173c:	ldp	x19, x20, [sp, #32]
  411740:	ldp	x21, x22, [sp, #48]
  411744:	ldp	x23, x24, [sp, #64]
  411748:	ldp	x25, x26, [sp, #80]
  41174c:	ldp	x27, x28, [sp, #96]
  411750:	ldp	x29, x30, [sp, #16]
  411754:	add	sp, sp, #0x80
  411758:	ret
  41175c:	stp	x29, x30, [sp, #-16]!
  411760:	mov	x29, sp
  411764:	mov	x3, x2
  411768:	mov	x2, #0x0                   	// #0
  41176c:	bl	411664 <__fxstatat@plt+0xec14>
  411770:	ldp	x29, x30, [sp], #16
  411774:	ret
  411778:	stp	x29, x30, [sp, #-48]!
  41177c:	mov	x29, sp
  411780:	stp	x19, x20, [sp, #16]
  411784:	str	x21, [sp, #32]
  411788:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  41178c:	add	x1, x0, #0x530
  411790:	ldr	x21, [x0, #1328]
  411794:	ldr	w20, [x1, #8]
  411798:	cmp	w20, #0x1
  41179c:	b.le	4117c0 <__fxstatat@plt+0xed70>
  4117a0:	add	x19, x21, #0x18
  4117a4:	sub	w20, w20, #0x2
  4117a8:	add	x0, x21, #0x28
  4117ac:	add	x20, x0, x20, lsl #4
  4117b0:	ldr	x0, [x19], #16
  4117b4:	bl	402840 <free@plt>
  4117b8:	cmp	x19, x20
  4117bc:	b.ne	4117b0 <__fxstatat@plt+0xed60>  // b.any
  4117c0:	ldr	x0, [x21, #8]
  4117c4:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4117c8:	add	x1, x1, #0x750
  4117cc:	cmp	x0, x1
  4117d0:	b.eq	4117f4 <__fxstatat@plt+0xeda4>  // b.none
  4117d4:	bl	402840 <free@plt>
  4117d8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4117dc:	add	x0, x0, #0x530
  4117e0:	mov	x1, #0x100                 	// #256
  4117e4:	str	x1, [x0, #16]
  4117e8:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4117ec:	add	x1, x1, #0x750
  4117f0:	str	x1, [x0, #24]
  4117f4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4117f8:	add	x0, x0, #0x530
  4117fc:	add	x0, x0, #0x10
  411800:	cmp	x21, x0
  411804:	b.eq	411820 <__fxstatat@plt+0xedd0>  // b.none
  411808:	mov	x0, x21
  41180c:	bl	402840 <free@plt>
  411810:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  411814:	add	x0, x1, #0x530
  411818:	add	x0, x0, #0x10
  41181c:	str	x0, [x1, #1328]
  411820:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  411824:	mov	w1, #0x1                   	// #1
  411828:	str	w1, [x0, #1336]
  41182c:	ldp	x19, x20, [sp, #16]
  411830:	ldr	x21, [sp, #32]
  411834:	ldp	x29, x30, [sp], #48
  411838:	ret
  41183c:	stp	x29, x30, [sp, #-16]!
  411840:	mov	x29, sp
  411844:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  411848:	add	x3, x3, #0x750
  41184c:	add	x3, x3, #0x100
  411850:	mov	x2, #0xffffffffffffffff    	// #-1
  411854:	bl	4112dc <__fxstatat@plt+0xe88c>
  411858:	ldp	x29, x30, [sp], #16
  41185c:	ret
  411860:	stp	x29, x30, [sp, #-16]!
  411864:	mov	x29, sp
  411868:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  41186c:	add	x3, x3, #0x750
  411870:	add	x3, x3, #0x100
  411874:	bl	4112dc <__fxstatat@plt+0xe88c>
  411878:	ldp	x29, x30, [sp], #16
  41187c:	ret
  411880:	stp	x29, x30, [sp, #-16]!
  411884:	mov	x29, sp
  411888:	mov	x1, x0
  41188c:	mov	w0, #0x0                   	// #0
  411890:	bl	41183c <__fxstatat@plt+0xedec>
  411894:	ldp	x29, x30, [sp], #16
  411898:	ret
  41189c:	stp	x29, x30, [sp, #-16]!
  4118a0:	mov	x29, sp
  4118a4:	mov	x2, x1
  4118a8:	mov	x1, x0
  4118ac:	mov	w0, #0x0                   	// #0
  4118b0:	bl	411860 <__fxstatat@plt+0xee10>
  4118b4:	ldp	x29, x30, [sp], #16
  4118b8:	ret
  4118bc:	stp	x29, x30, [sp, #-96]!
  4118c0:	mov	x29, sp
  4118c4:	stp	x19, x20, [sp, #16]
  4118c8:	mov	w19, w0
  4118cc:	mov	w0, w1
  4118d0:	mov	x20, x2
  4118d4:	add	x8, sp, #0x28
  4118d8:	bl	410208 <__fxstatat@plt+0xd7b8>
  4118dc:	add	x3, sp, #0x28
  4118e0:	mov	x2, #0xffffffffffffffff    	// #-1
  4118e4:	mov	x1, x20
  4118e8:	mov	w0, w19
  4118ec:	bl	4112dc <__fxstatat@plt+0xe88c>
  4118f0:	ldp	x19, x20, [sp, #16]
  4118f4:	ldp	x29, x30, [sp], #96
  4118f8:	ret
  4118fc:	stp	x29, x30, [sp, #-112]!
  411900:	mov	x29, sp
  411904:	stp	x19, x20, [sp, #16]
  411908:	str	x21, [sp, #32]
  41190c:	mov	w19, w0
  411910:	mov	w0, w1
  411914:	mov	x20, x2
  411918:	mov	x21, x3
  41191c:	add	x8, sp, #0x38
  411920:	bl	410208 <__fxstatat@plt+0xd7b8>
  411924:	add	x3, sp, #0x38
  411928:	mov	x2, x21
  41192c:	mov	x1, x20
  411930:	mov	w0, w19
  411934:	bl	4112dc <__fxstatat@plt+0xe88c>
  411938:	ldp	x19, x20, [sp, #16]
  41193c:	ldr	x21, [sp, #32]
  411940:	ldp	x29, x30, [sp], #112
  411944:	ret
  411948:	stp	x29, x30, [sp, #-16]!
  41194c:	mov	x29, sp
  411950:	mov	x2, x1
  411954:	mov	w1, w0
  411958:	mov	w0, #0x0                   	// #0
  41195c:	bl	4118bc <__fxstatat@plt+0xee6c>
  411960:	ldp	x29, x30, [sp], #16
  411964:	ret
  411968:	stp	x29, x30, [sp, #-16]!
  41196c:	mov	x29, sp
  411970:	mov	x3, x2
  411974:	mov	x2, x1
  411978:	mov	w1, w0
  41197c:	mov	w0, #0x0                   	// #0
  411980:	bl	4118fc <__fxstatat@plt+0xeeac>
  411984:	ldp	x29, x30, [sp], #16
  411988:	ret
  41198c:	stp	x29, x30, [sp, #-96]!
  411990:	mov	x29, sp
  411994:	stp	x19, x20, [sp, #16]
  411998:	mov	x19, x0
  41199c:	mov	x20, x1
  4119a0:	and	w1, w2, #0xff
  4119a4:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  4119a8:	add	x2, x2, #0x750
  4119ac:	add	x0, x2, #0x100
  4119b0:	ldp	x2, x3, [x2, #256]
  4119b4:	stp	x2, x3, [sp, #40]
  4119b8:	ldp	x2, x3, [x0, #16]
  4119bc:	stp	x2, x3, [sp, #56]
  4119c0:	ldp	x2, x3, [x0, #32]
  4119c4:	stp	x2, x3, [sp, #72]
  4119c8:	ldr	x0, [x0, #48]
  4119cc:	str	x0, [sp, #88]
  4119d0:	mov	w2, #0x1                   	// #1
  4119d4:	add	x0, sp, #0x28
  4119d8:	bl	411520 <__fxstatat@plt+0xead0>
  4119dc:	add	x3, sp, #0x28
  4119e0:	mov	x2, x20
  4119e4:	mov	x1, x19
  4119e8:	mov	w0, #0x0                   	// #0
  4119ec:	bl	4112dc <__fxstatat@plt+0xe88c>
  4119f0:	ldp	x19, x20, [sp, #16]
  4119f4:	ldp	x29, x30, [sp], #96
  4119f8:	ret
  4119fc:	stp	x29, x30, [sp, #-16]!
  411a00:	mov	x29, sp
  411a04:	mov	w2, w1
  411a08:	mov	x1, #0xffffffffffffffff    	// #-1
  411a0c:	bl	41198c <__fxstatat@plt+0xef3c>
  411a10:	ldp	x29, x30, [sp], #16
  411a14:	ret
  411a18:	stp	x29, x30, [sp, #-16]!
  411a1c:	mov	x29, sp
  411a20:	mov	w1, #0x3a                  	// #58
  411a24:	bl	4119fc <__fxstatat@plt+0xefac>
  411a28:	ldp	x29, x30, [sp], #16
  411a2c:	ret
  411a30:	stp	x29, x30, [sp, #-16]!
  411a34:	mov	x29, sp
  411a38:	mov	w2, #0x3a                  	// #58
  411a3c:	bl	41198c <__fxstatat@plt+0xef3c>
  411a40:	ldp	x29, x30, [sp], #16
  411a44:	ret
  411a48:	stp	x29, x30, [sp, #-160]!
  411a4c:	mov	x29, sp
  411a50:	stp	x19, x20, [sp, #16]
  411a54:	mov	w19, w0
  411a58:	mov	w0, w1
  411a5c:	mov	x20, x2
  411a60:	add	x8, sp, #0x20
  411a64:	bl	410208 <__fxstatat@plt+0xd7b8>
  411a68:	ldp	x0, x1, [sp, #32]
  411a6c:	stp	x0, x1, [sp, #104]
  411a70:	ldp	x0, x1, [sp, #48]
  411a74:	stp	x0, x1, [sp, #120]
  411a78:	ldp	x0, x1, [sp, #64]
  411a7c:	stp	x0, x1, [sp, #136]
  411a80:	ldr	x0, [sp, #80]
  411a84:	str	x0, [sp, #152]
  411a88:	mov	w2, #0x1                   	// #1
  411a8c:	mov	w1, #0x3a                  	// #58
  411a90:	add	x0, sp, #0x68
  411a94:	bl	411520 <__fxstatat@plt+0xead0>
  411a98:	add	x3, sp, #0x68
  411a9c:	mov	x2, #0xffffffffffffffff    	// #-1
  411aa0:	mov	x1, x20
  411aa4:	mov	w0, w19
  411aa8:	bl	4112dc <__fxstatat@plt+0xe88c>
  411aac:	ldp	x19, x20, [sp, #16]
  411ab0:	ldp	x29, x30, [sp], #160
  411ab4:	ret
  411ab8:	stp	x29, x30, [sp, #-112]!
  411abc:	mov	x29, sp
  411ac0:	stp	x19, x20, [sp, #16]
  411ac4:	str	x21, [sp, #32]
  411ac8:	mov	w19, w0
  411acc:	mov	x20, x3
  411ad0:	mov	x21, x4
  411ad4:	adrp	x5, 430000 <__progname@@GLIBC_2.17+0xa48>
  411ad8:	add	x5, x5, #0x750
  411adc:	add	x0, x5, #0x100
  411ae0:	ldp	x4, x5, [x5, #256]
  411ae4:	stp	x4, x5, [sp, #56]
  411ae8:	ldp	x4, x5, [x0, #16]
  411aec:	stp	x4, x5, [sp, #72]
  411af0:	ldp	x4, x5, [x0, #32]
  411af4:	stp	x4, x5, [sp, #88]
  411af8:	ldr	x0, [x0, #48]
  411afc:	str	x0, [sp, #104]
  411b00:	add	x0, sp, #0x38
  411b04:	bl	411588 <__fxstatat@plt+0xeb38>
  411b08:	add	x3, sp, #0x38
  411b0c:	mov	x2, x21
  411b10:	mov	x1, x20
  411b14:	mov	w0, w19
  411b18:	bl	4112dc <__fxstatat@plt+0xe88c>
  411b1c:	ldp	x19, x20, [sp, #16]
  411b20:	ldr	x21, [sp, #32]
  411b24:	ldp	x29, x30, [sp], #112
  411b28:	ret
  411b2c:	stp	x29, x30, [sp, #-16]!
  411b30:	mov	x29, sp
  411b34:	mov	x4, #0xffffffffffffffff    	// #-1
  411b38:	bl	411ab8 <__fxstatat@plt+0xf068>
  411b3c:	ldp	x29, x30, [sp], #16
  411b40:	ret
  411b44:	stp	x29, x30, [sp, #-16]!
  411b48:	mov	x29, sp
  411b4c:	mov	x3, x2
  411b50:	mov	x2, x1
  411b54:	mov	x1, x0
  411b58:	mov	w0, #0x0                   	// #0
  411b5c:	bl	411b2c <__fxstatat@plt+0xf0dc>
  411b60:	ldp	x29, x30, [sp], #16
  411b64:	ret
  411b68:	stp	x29, x30, [sp, #-16]!
  411b6c:	mov	x29, sp
  411b70:	mov	x4, x3
  411b74:	mov	x3, x2
  411b78:	mov	x2, x1
  411b7c:	mov	x1, x0
  411b80:	mov	w0, #0x0                   	// #0
  411b84:	bl	411ab8 <__fxstatat@plt+0xf068>
  411b88:	ldp	x29, x30, [sp], #16
  411b8c:	ret
  411b90:	stp	x29, x30, [sp, #-16]!
  411b94:	mov	x29, sp
  411b98:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  411b9c:	add	x3, x3, #0x530
  411ba0:	add	x3, x3, #0x20
  411ba4:	bl	4112dc <__fxstatat@plt+0xe88c>
  411ba8:	ldp	x29, x30, [sp], #16
  411bac:	ret
  411bb0:	stp	x29, x30, [sp, #-16]!
  411bb4:	mov	x29, sp
  411bb8:	mov	x2, x1
  411bbc:	mov	x1, x0
  411bc0:	mov	w0, #0x0                   	// #0
  411bc4:	bl	411b90 <__fxstatat@plt+0xf140>
  411bc8:	ldp	x29, x30, [sp], #16
  411bcc:	ret
  411bd0:	stp	x29, x30, [sp, #-16]!
  411bd4:	mov	x29, sp
  411bd8:	mov	x2, #0xffffffffffffffff    	// #-1
  411bdc:	bl	411b90 <__fxstatat@plt+0xf140>
  411be0:	ldp	x29, x30, [sp], #16
  411be4:	ret
  411be8:	stp	x29, x30, [sp, #-16]!
  411bec:	mov	x29, sp
  411bf0:	mov	x1, x0
  411bf4:	mov	w0, #0x0                   	// #0
  411bf8:	bl	411bd0 <__fxstatat@plt+0xf180>
  411bfc:	ldp	x29, x30, [sp], #16
  411c00:	ret
  411c04:	stp	x29, x30, [sp, #-336]!
  411c08:	mov	x29, sp
  411c0c:	stp	x19, x20, [sp, #16]
  411c10:	stp	x21, x22, [sp, #32]
  411c14:	stp	x23, x24, [sp, #48]
  411c18:	str	x25, [sp, #64]
  411c1c:	mov	w25, w0
  411c20:	mov	x22, x1
  411c24:	mov	w24, w2
  411c28:	mov	x21, x3
  411c2c:	mov	x0, x1
  411c30:	bl	40b874 <__fxstatat@plt+0x8e24>
  411c34:	mov	x19, x0
  411c38:	mov	x0, x21
  411c3c:	bl	40b874 <__fxstatat@plt+0x8e24>
  411c40:	mov	x20, x0
  411c44:	mov	x0, x19
  411c48:	bl	40b8d0 <__fxstatat@plt+0x8e80>
  411c4c:	mov	x23, x0
  411c50:	mov	x0, x20
  411c54:	bl	40b8d0 <__fxstatat@plt+0x8e80>
  411c58:	cmp	x23, x0
  411c5c:	b.eq	411c80 <__fxstatat@plt+0xf230>  // b.none
  411c60:	mov	w19, #0x0                   	// #0
  411c64:	mov	w0, w19
  411c68:	ldp	x19, x20, [sp, #16]
  411c6c:	ldp	x21, x22, [sp, #32]
  411c70:	ldp	x23, x24, [sp, #48]
  411c74:	ldr	x25, [sp, #64]
  411c78:	ldp	x29, x30, [sp], #336
  411c7c:	ret
  411c80:	mov	x2, x0
  411c84:	mov	x1, x20
  411c88:	mov	x0, x19
  411c8c:	bl	4027a0 <memcmp@plt>
  411c90:	mov	w19, w0
  411c94:	cbz	w0, 411cf4 <__fxstatat@plt+0xf2a4>
  411c98:	mov	w19, #0x0                   	// #0
  411c9c:	b	411c64 <__fxstatat@plt+0xf214>
  411ca0:	bl	4029e0 <__errno_location@plt>
  411ca4:	mov	x3, x20
  411ca8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  411cac:	add	x2, x2, #0x5b0
  411cb0:	ldr	w1, [x0]
  411cb4:	mov	w0, #0x1                   	// #1
  411cb8:	bl	402490 <error@plt>
  411cbc:	b	411d1c <__fxstatat@plt+0xf2cc>
  411cc0:	bl	4029e0 <__errno_location@plt>
  411cc4:	mov	x3, x20
  411cc8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  411ccc:	add	x2, x2, #0x5b0
  411cd0:	ldr	w1, [x0]
  411cd4:	mov	w0, #0x1                   	// #1
  411cd8:	bl	402490 <error@plt>
  411cdc:	b	411d4c <__fxstatat@plt+0xf2fc>
  411ce0:	ldr	x1, [sp, #80]
  411ce4:	ldr	x0, [sp, #208]
  411ce8:	cmp	x1, x0
  411cec:	cset	w19, eq  // eq = none
  411cf0:	b	411d5c <__fxstatat@plt+0xf30c>
  411cf4:	mov	x0, x22
  411cf8:	bl	413b94 <_obstack_memory_used@@Base+0x688>
  411cfc:	mov	x20, x0
  411d00:	mov	w4, #0x100                 	// #256
  411d04:	add	x3, sp, #0x50
  411d08:	mov	x2, x0
  411d0c:	mov	w1, w25
  411d10:	mov	w0, #0x0                   	// #0
  411d14:	bl	402a50 <__fxstatat@plt>
  411d18:	cbnz	w0, 411ca0 <__fxstatat@plt+0xf250>
  411d1c:	mov	x0, x20
  411d20:	bl	402840 <free@plt>
  411d24:	mov	x0, x21
  411d28:	bl	413b94 <_obstack_memory_used@@Base+0x688>
  411d2c:	mov	x20, x0
  411d30:	mov	w4, #0x100                 	// #256
  411d34:	add	x3, sp, #0xd0
  411d38:	mov	x2, x0
  411d3c:	mov	w1, w24
  411d40:	mov	w0, #0x0                   	// #0
  411d44:	bl	402a50 <__fxstatat@plt>
  411d48:	cbnz	w0, 411cc0 <__fxstatat@plt+0xf270>
  411d4c:	ldr	x1, [sp, #88]
  411d50:	ldr	x0, [sp, #216]
  411d54:	cmp	x1, x0
  411d58:	b.eq	411ce0 <__fxstatat@plt+0xf290>  // b.none
  411d5c:	and	w19, w19, #0x1
  411d60:	mov	x0, x20
  411d64:	bl	402840 <free@plt>
  411d68:	b	411c64 <__fxstatat@plt+0xf214>
  411d6c:	stp	x29, x30, [sp, #-16]!
  411d70:	mov	x29, sp
  411d74:	mov	x3, x1
  411d78:	mov	w2, #0xffffff9c            	// #-100
  411d7c:	mov	x1, x0
  411d80:	mov	w0, w2
  411d84:	bl	411c04 <__fxstatat@plt+0xf1b4>
  411d88:	ldp	x29, x30, [sp], #16
  411d8c:	ret
  411d90:	sub	sp, sp, #0x50
  411d94:	stp	x29, x30, [sp, #32]
  411d98:	add	x29, sp, #0x20
  411d9c:	stp	x19, x20, [sp, #48]
  411da0:	str	x21, [sp, #64]
  411da4:	mov	x21, x0
  411da8:	mov	x20, x4
  411dac:	mov	x19, x5
  411db0:	cbz	x1, 411e74 <__fxstatat@plt+0xf424>
  411db4:	mov	x5, x3
  411db8:	mov	x4, x2
  411dbc:	mov	x3, x1
  411dc0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411dc4:	add	x2, x2, #0x450
  411dc8:	mov	w1, #0x1                   	// #1
  411dcc:	bl	4027e0 <__fprintf_chk@plt>
  411dd0:	mov	w2, #0x5                   	// #5
  411dd4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411dd8:	add	x1, x1, #0x468
  411ddc:	mov	x0, #0x0                   	// #0
  411de0:	bl	402970 <dcgettext@plt>
  411de4:	mov	w4, #0x7e3                 	// #2019
  411de8:	mov	x3, x0
  411dec:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411df0:	add	x2, x2, #0x760
  411df4:	mov	w1, #0x1                   	// #1
  411df8:	mov	x0, x21
  411dfc:	bl	4027e0 <__fprintf_chk@plt>
  411e00:	mov	w2, #0x5                   	// #5
  411e04:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411e08:	add	x1, x1, #0x470
  411e0c:	mov	x0, #0x0                   	// #0
  411e10:	bl	402970 <dcgettext@plt>
  411e14:	mov	x1, x21
  411e18:	bl	402980 <fputs_unlocked@plt>
  411e1c:	cmp	x19, #0x5
  411e20:	b.eq	412008 <__fxstatat@plt+0xf5b8>  // b.none
  411e24:	b.hi	411ed8 <__fxstatat@plt+0xf488>  // b.pmore
  411e28:	cmp	x19, #0x2
  411e2c:	b.eq	411fa4 <__fxstatat@plt+0xf554>  // b.none
  411e30:	b.ls	411e90 <__fxstatat@plt+0xf440>  // b.plast
  411e34:	cmp	x19, #0x3
  411e38:	b.eq	411fd4 <__fxstatat@plt+0xf584>  // b.none
  411e3c:	mov	w2, #0x5                   	// #5
  411e40:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411e44:	add	x1, x1, #0x588
  411e48:	mov	x0, #0x0                   	// #0
  411e4c:	bl	402970 <dcgettext@plt>
  411e50:	ldr	x6, [x20, #24]
  411e54:	ldr	x5, [x20, #16]
  411e58:	ldr	x4, [x20, #8]
  411e5c:	ldr	x3, [x20]
  411e60:	mov	x2, x0
  411e64:	mov	w1, #0x1                   	// #1
  411e68:	mov	x0, x21
  411e6c:	bl	4027e0 <__fprintf_chk@plt>
  411e70:	b	411ec4 <__fxstatat@plt+0xf474>
  411e74:	mov	x4, x3
  411e78:	mov	x3, x2
  411e7c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411e80:	add	x2, x2, #0x460
  411e84:	mov	w1, #0x1                   	// #1
  411e88:	bl	4027e0 <__fprintf_chk@plt>
  411e8c:	b	411dd0 <__fxstatat@plt+0xf380>
  411e90:	cbz	x19, 411ec4 <__fxstatat@plt+0xf474>
  411e94:	cmp	x19, #0x1
  411e98:	b.ne	4120dc <__fxstatat@plt+0xf68c>  // b.any
  411e9c:	mov	w2, #0x5                   	// #5
  411ea0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411ea4:	add	x1, x1, #0x540
  411ea8:	mov	x0, #0x0                   	// #0
  411eac:	bl	402970 <dcgettext@plt>
  411eb0:	ldr	x3, [x20]
  411eb4:	mov	x2, x0
  411eb8:	mov	w1, #0x1                   	// #1
  411ebc:	mov	x0, x21
  411ec0:	bl	4027e0 <__fprintf_chk@plt>
  411ec4:	ldp	x19, x20, [sp, #48]
  411ec8:	ldr	x21, [sp, #64]
  411ecc:	ldp	x29, x30, [sp, #32]
  411ed0:	add	sp, sp, #0x50
  411ed4:	ret
  411ed8:	cmp	x19, #0x8
  411edc:	b.eq	412088 <__fxstatat@plt+0xf638>  // b.none
  411ee0:	b.ls	411f48 <__fxstatat@plt+0xf4f8>  // b.plast
  411ee4:	cmp	x19, #0x9
  411ee8:	b.ne	4120dc <__fxstatat@plt+0xf68c>  // b.any
  411eec:	mov	w2, #0x5                   	// #5
  411ef0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411ef4:	add	x1, x1, #0x658
  411ef8:	mov	x0, #0x0                   	// #0
  411efc:	bl	402970 <dcgettext@plt>
  411f00:	ldr	x1, [x20, #64]
  411f04:	str	x1, [sp, #24]
  411f08:	ldr	x1, [x20, #56]
  411f0c:	str	x1, [sp, #16]
  411f10:	ldr	x1, [x20, #48]
  411f14:	str	x1, [sp, #8]
  411f18:	ldr	x1, [x20, #40]
  411f1c:	str	x1, [sp]
  411f20:	ldr	x7, [x20, #32]
  411f24:	ldr	x6, [x20, #24]
  411f28:	ldr	x5, [x20, #16]
  411f2c:	ldr	x4, [x20, #8]
  411f30:	ldr	x3, [x20]
  411f34:	mov	x2, x0
  411f38:	mov	w1, #0x1                   	// #1
  411f3c:	mov	x0, x21
  411f40:	bl	4027e0 <__fprintf_chk@plt>
  411f44:	b	411ec4 <__fxstatat@plt+0xf474>
  411f48:	cmp	x19, #0x6
  411f4c:	b.eq	412044 <__fxstatat@plt+0xf5f4>  // b.none
  411f50:	cmp	x19, #0x7
  411f54:	b.ne	4120dc <__fxstatat@plt+0xf68c>  // b.any
  411f58:	mov	w2, #0x5                   	// #5
  411f5c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411f60:	add	x1, x1, #0x5f8
  411f64:	mov	x0, #0x0                   	// #0
  411f68:	bl	402970 <dcgettext@plt>
  411f6c:	ldr	x1, [x20, #48]
  411f70:	str	x1, [sp, #8]
  411f74:	ldr	x1, [x20, #40]
  411f78:	str	x1, [sp]
  411f7c:	ldr	x7, [x20, #32]
  411f80:	ldr	x6, [x20, #24]
  411f84:	ldr	x5, [x20, #16]
  411f88:	ldr	x4, [x20, #8]
  411f8c:	ldr	x3, [x20]
  411f90:	mov	x2, x0
  411f94:	mov	w1, #0x1                   	// #1
  411f98:	mov	x0, x21
  411f9c:	bl	4027e0 <__fprintf_chk@plt>
  411fa0:	b	411ec4 <__fxstatat@plt+0xf474>
  411fa4:	mov	w2, #0x5                   	// #5
  411fa8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411fac:	add	x1, x1, #0x550
  411fb0:	mov	x0, #0x0                   	// #0
  411fb4:	bl	402970 <dcgettext@plt>
  411fb8:	ldr	x4, [x20, #8]
  411fbc:	ldr	x3, [x20]
  411fc0:	mov	x2, x0
  411fc4:	mov	w1, #0x1                   	// #1
  411fc8:	mov	x0, x21
  411fcc:	bl	4027e0 <__fprintf_chk@plt>
  411fd0:	b	411ec4 <__fxstatat@plt+0xf474>
  411fd4:	mov	w2, #0x5                   	// #5
  411fd8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  411fdc:	add	x1, x1, #0x568
  411fe0:	mov	x0, #0x0                   	// #0
  411fe4:	bl	402970 <dcgettext@plt>
  411fe8:	ldr	x5, [x20, #16]
  411fec:	ldr	x4, [x20, #8]
  411ff0:	ldr	x3, [x20]
  411ff4:	mov	x2, x0
  411ff8:	mov	w1, #0x1                   	// #1
  411ffc:	mov	x0, x21
  412000:	bl	4027e0 <__fprintf_chk@plt>
  412004:	b	411ec4 <__fxstatat@plt+0xf474>
  412008:	mov	w2, #0x5                   	// #5
  41200c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412010:	add	x1, x1, #0x5a8
  412014:	mov	x0, #0x0                   	// #0
  412018:	bl	402970 <dcgettext@plt>
  41201c:	ldr	x7, [x20, #32]
  412020:	ldr	x6, [x20, #24]
  412024:	ldr	x5, [x20, #16]
  412028:	ldr	x4, [x20, #8]
  41202c:	ldr	x3, [x20]
  412030:	mov	x2, x0
  412034:	mov	w1, #0x1                   	// #1
  412038:	mov	x0, x21
  41203c:	bl	4027e0 <__fprintf_chk@plt>
  412040:	b	411ec4 <__fxstatat@plt+0xf474>
  412044:	mov	w2, #0x5                   	// #5
  412048:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  41204c:	add	x1, x1, #0x5d0
  412050:	mov	x0, #0x0                   	// #0
  412054:	bl	402970 <dcgettext@plt>
  412058:	ldr	x1, [x20, #40]
  41205c:	str	x1, [sp]
  412060:	ldr	x7, [x20, #32]
  412064:	ldr	x6, [x20, #24]
  412068:	ldr	x5, [x20, #16]
  41206c:	ldr	x4, [x20, #8]
  412070:	ldr	x3, [x20]
  412074:	mov	x2, x0
  412078:	mov	w1, #0x1                   	// #1
  41207c:	mov	x0, x21
  412080:	bl	4027e0 <__fprintf_chk@plt>
  412084:	b	411ec4 <__fxstatat@plt+0xf474>
  412088:	mov	w2, #0x5                   	// #5
  41208c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412090:	add	x1, x1, #0x628
  412094:	mov	x0, #0x0                   	// #0
  412098:	bl	402970 <dcgettext@plt>
  41209c:	ldr	x1, [x20, #56]
  4120a0:	str	x1, [sp, #16]
  4120a4:	ldr	x1, [x20, #48]
  4120a8:	str	x1, [sp, #8]
  4120ac:	ldr	x1, [x20, #40]
  4120b0:	str	x1, [sp]
  4120b4:	ldr	x7, [x20, #32]
  4120b8:	ldr	x6, [x20, #24]
  4120bc:	ldr	x5, [x20, #16]
  4120c0:	ldr	x4, [x20, #8]
  4120c4:	ldr	x3, [x20]
  4120c8:	mov	x2, x0
  4120cc:	mov	w1, #0x1                   	// #1
  4120d0:	mov	x0, x21
  4120d4:	bl	4027e0 <__fprintf_chk@plt>
  4120d8:	b	411ec4 <__fxstatat@plt+0xf474>
  4120dc:	mov	w2, #0x5                   	// #5
  4120e0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4120e4:	add	x1, x1, #0x690
  4120e8:	mov	x0, #0x0                   	// #0
  4120ec:	bl	402970 <dcgettext@plt>
  4120f0:	ldr	x1, [x20, #64]
  4120f4:	str	x1, [sp, #24]
  4120f8:	ldr	x1, [x20, #56]
  4120fc:	str	x1, [sp, #16]
  412100:	ldr	x1, [x20, #48]
  412104:	str	x1, [sp, #8]
  412108:	ldr	x1, [x20, #40]
  41210c:	str	x1, [sp]
  412110:	ldr	x7, [x20, #32]
  412114:	ldr	x6, [x20, #24]
  412118:	ldr	x5, [x20, #16]
  41211c:	ldr	x4, [x20, #8]
  412120:	ldr	x3, [x20]
  412124:	mov	x2, x0
  412128:	mov	w1, #0x1                   	// #1
  41212c:	mov	x0, x21
  412130:	bl	4027e0 <__fprintf_chk@plt>
  412134:	b	411ec4 <__fxstatat@plt+0xf474>
  412138:	stp	x29, x30, [sp, #-16]!
  41213c:	mov	x29, sp
  412140:	ldr	x5, [x4]
  412144:	cbz	x5, 412164 <__fxstatat@plt+0xf714>
  412148:	mov	x5, #0x0                   	// #0
  41214c:	add	x5, x5, #0x1
  412150:	ldr	x6, [x4, x5, lsl #3]
  412154:	cbnz	x6, 41214c <__fxstatat@plt+0xf6fc>
  412158:	bl	411d90 <__fxstatat@plt+0xf340>
  41215c:	ldp	x29, x30, [sp], #16
  412160:	ret
  412164:	mov	x5, #0x0                   	// #0
  412168:	b	412158 <__fxstatat@plt+0xf708>
  41216c:	stp	x29, x30, [sp, #-96]!
  412170:	mov	x29, sp
  412174:	ldr	x7, [x4]
  412178:	ldr	w8, [x4, #24]
  41217c:	ldr	x11, [x4, #8]
  412180:	add	x4, sp, #0x10
  412184:	mov	x5, #0x0                   	// #0
  412188:	b	4121c4 <__fxstatat@plt+0xf774>
  41218c:	add	w9, w8, #0x8
  412190:	cmp	w9, #0x0
  412194:	b.le	4121d8 <__fxstatat@plt+0xf788>
  412198:	add	x10, x7, #0xf
  41219c:	mov	w8, w9
  4121a0:	mov	x6, x7
  4121a4:	and	x7, x10, #0xfffffffffffffff8
  4121a8:	ldr	x6, [x6]
  4121ac:	str	x6, [x4]
  4121b0:	cbz	x6, 4121e4 <__fxstatat@plt+0xf794>
  4121b4:	add	x5, x5, #0x1
  4121b8:	add	x4, x4, #0x8
  4121bc:	cmp	x5, #0xa
  4121c0:	b.eq	4121e4 <__fxstatat@plt+0xf794>  // b.none
  4121c4:	tbnz	w8, #31, 41218c <__fxstatat@plt+0xf73c>
  4121c8:	add	x9, x7, #0xf
  4121cc:	mov	x6, x7
  4121d0:	and	x7, x9, #0xfffffffffffffff8
  4121d4:	b	4121a8 <__fxstatat@plt+0xf758>
  4121d8:	add	x6, x11, w8, sxtw
  4121dc:	mov	w8, w9
  4121e0:	b	4121a8 <__fxstatat@plt+0xf758>
  4121e4:	add	x4, sp, #0x10
  4121e8:	bl	411d90 <__fxstatat@plt+0xf340>
  4121ec:	ldp	x29, x30, [sp], #96
  4121f0:	ret
  4121f4:	stp	x29, x30, [sp, #-240]!
  4121f8:	mov	x29, sp
  4121fc:	str	x4, [sp, #208]
  412200:	str	x5, [sp, #216]
  412204:	str	x6, [sp, #224]
  412208:	str	x7, [sp, #232]
  41220c:	str	q0, [sp, #80]
  412210:	str	q1, [sp, #96]
  412214:	str	q2, [sp, #112]
  412218:	str	q3, [sp, #128]
  41221c:	str	q4, [sp, #144]
  412220:	str	q5, [sp, #160]
  412224:	str	q6, [sp, #176]
  412228:	str	q7, [sp, #192]
  41222c:	add	x4, sp, #0xf0
  412230:	str	x4, [sp, #48]
  412234:	str	x4, [sp, #56]
  412238:	add	x4, sp, #0xd0
  41223c:	str	x4, [sp, #64]
  412240:	mov	w4, #0xffffffe0            	// #-32
  412244:	str	w4, [sp, #72]
  412248:	mov	w4, #0xffffff80            	// #-128
  41224c:	str	w4, [sp, #76]
  412250:	ldp	x4, x5, [sp, #48]
  412254:	stp	x4, x5, [sp, #16]
  412258:	ldp	x4, x5, [sp, #64]
  41225c:	stp	x4, x5, [sp, #32]
  412260:	add	x4, sp, #0x10
  412264:	bl	41216c <__fxstatat@plt+0xf71c>
  412268:	ldp	x29, x30, [sp], #240
  41226c:	ret
  412270:	stp	x29, x30, [sp, #-16]!
  412274:	mov	x29, sp
  412278:	mov	w2, #0x5                   	// #5
  41227c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412280:	add	x1, x1, #0x6d0
  412284:	mov	x0, #0x0                   	// #0
  412288:	bl	402970 <dcgettext@plt>
  41228c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412290:	add	x2, x2, #0x6e8
  412294:	mov	x1, x0
  412298:	mov	w0, #0x1                   	// #1
  41229c:	bl	402670 <__printf_chk@plt>
  4122a0:	mov	w2, #0x5                   	// #5
  4122a4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4122a8:	add	x1, x1, #0x700
  4122ac:	mov	x0, #0x0                   	// #0
  4122b0:	bl	402970 <dcgettext@plt>
  4122b4:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3af4>
  4122b8:	add	x3, x3, #0x400
  4122bc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  4122c0:	add	x2, x2, #0x428
  4122c4:	mov	x1, x0
  4122c8:	mov	w0, #0x1                   	// #1
  4122cc:	bl	402670 <__printf_chk@plt>
  4122d0:	mov	w2, #0x5                   	// #5
  4122d4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4122d8:	add	x1, x1, #0x718
  4122dc:	mov	x0, #0x0                   	// #0
  4122e0:	bl	402970 <dcgettext@plt>
  4122e4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4122e8:	ldr	x1, [x1, #1456]
  4122ec:	bl	402980 <fputs_unlocked@plt>
  4122f0:	ldp	x29, x30, [sp], #16
  4122f4:	ret
  4122f8:	stp	x29, x30, [sp, #-32]!
  4122fc:	mov	x29, sp
  412300:	str	x19, [sp, #16]
  412304:	mov	x19, x0
  412308:	bl	4025f0 <malloc@plt>
  41230c:	cmp	x0, #0x0
  412310:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  412314:	b.ne	412324 <__fxstatat@plt+0xf8d4>  // b.any
  412318:	ldr	x19, [sp, #16]
  41231c:	ldp	x29, x30, [sp], #32
  412320:	ret
  412324:	bl	412584 <__fxstatat@plt+0xfb34>
  412328:	stp	x29, x30, [sp, #-16]!
  41232c:	mov	x29, sp
  412330:	mul	x3, x0, x1
  412334:	umulh	x2, x0, x1
  412338:	cmp	x2, #0x0
  41233c:	cset	x2, ne  // ne = any
  412340:	cmp	x3, #0x0
  412344:	csinc	x2, x2, xzr, ge  // ge = tcont
  412348:	cbnz	w2, 41235c <__fxstatat@plt+0xf90c>
  41234c:	mul	x0, x0, x1
  412350:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  412354:	ldp	x29, x30, [sp], #16
  412358:	ret
  41235c:	bl	412584 <__fxstatat@plt+0xfb34>
  412360:	stp	x29, x30, [sp, #-16]!
  412364:	mov	x29, sp
  412368:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  41236c:	ldp	x29, x30, [sp], #16
  412370:	ret
  412374:	stp	x29, x30, [sp, #-32]!
  412378:	mov	x29, sp
  41237c:	cmp	x1, #0x0
  412380:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  412384:	b.ne	4123ac <__fxstatat@plt+0xf95c>  // b.any
  412388:	str	x19, [sp, #16]
  41238c:	mov	x19, x1
  412390:	bl	4026e0 <realloc@plt>
  412394:	cmp	x0, #0x0
  412398:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41239c:	b.ne	4123b8 <__fxstatat@plt+0xf968>  // b.any
  4123a0:	ldr	x19, [sp, #16]
  4123a4:	ldp	x29, x30, [sp], #32
  4123a8:	ret
  4123ac:	bl	402840 <free@plt>
  4123b0:	mov	x0, #0x0                   	// #0
  4123b4:	b	4123a4 <__fxstatat@plt+0xf954>
  4123b8:	bl	412584 <__fxstatat@plt+0xfb34>
  4123bc:	stp	x29, x30, [sp, #-16]!
  4123c0:	mov	x29, sp
  4123c4:	mul	x4, x1, x2
  4123c8:	umulh	x3, x1, x2
  4123cc:	cmp	x3, #0x0
  4123d0:	cset	x3, ne  // ne = any
  4123d4:	cmp	x4, #0x0
  4123d8:	csinc	x3, x3, xzr, ge  // ge = tcont
  4123dc:	cbnz	w3, 4123f0 <__fxstatat@plt+0xf9a0>
  4123e0:	mul	x1, x1, x2
  4123e4:	bl	412374 <__fxstatat@plt+0xf924>
  4123e8:	ldp	x29, x30, [sp], #16
  4123ec:	ret
  4123f0:	bl	412584 <__fxstatat@plt+0xfb34>
  4123f4:	stp	x29, x30, [sp, #-16]!
  4123f8:	mov	x29, sp
  4123fc:	ldr	x3, [x1]
  412400:	cbz	x0, 412434 <__fxstatat@plt+0xf9e4>
  412404:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  412408:	movk	x4, #0x5554
  41240c:	udiv	x4, x4, x2
  412410:	cmp	x4, x3
  412414:	b.ls	412468 <__fxstatat@plt+0xfa18>  // b.plast
  412418:	add	x4, x3, #0x1
  41241c:	add	x3, x4, x3, lsr #1
  412420:	str	x3, [x1]
  412424:	mul	x1, x3, x2
  412428:	bl	412374 <__fxstatat@plt+0xf924>
  41242c:	ldp	x29, x30, [sp], #16
  412430:	ret
  412434:	cbnz	x3, 412448 <__fxstatat@plt+0xf9f8>
  412438:	mov	x3, #0x80                  	// #128
  41243c:	udiv	x3, x3, x2
  412440:	cmp	x2, #0x80
  412444:	cinc	x3, x3, hi  // hi = pmore
  412448:	mul	x5, x3, x2
  41244c:	umulh	x4, x3, x2
  412450:	cmp	x4, #0x0
  412454:	cset	x4, ne  // ne = any
  412458:	cmp	x5, #0x0
  41245c:	csinc	x4, x4, xzr, ge  // ge = tcont
  412460:	cbz	w4, 412420 <__fxstatat@plt+0xf9d0>
  412464:	bl	412584 <__fxstatat@plt+0xfb34>
  412468:	bl	412584 <__fxstatat@plt+0xfb34>
  41246c:	stp	x29, x30, [sp, #-16]!
  412470:	mov	x29, sp
  412474:	mov	x2, x1
  412478:	ldr	x1, [x1]
  41247c:	cbz	x0, 4124a8 <__fxstatat@plt+0xfa58>
  412480:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  412484:	movk	x3, #0x5553
  412488:	cmp	x1, x3
  41248c:	b.hi	4124b4 <__fxstatat@plt+0xfa64>  // b.pmore
  412490:	add	x3, x1, #0x1
  412494:	add	x1, x3, x1, lsr #1
  412498:	str	x1, [x2]
  41249c:	bl	412374 <__fxstatat@plt+0xf924>
  4124a0:	ldp	x29, x30, [sp], #16
  4124a4:	ret
  4124a8:	cbz	x1, 4124b8 <__fxstatat@plt+0xfa68>
  4124ac:	tbz	x1, #63, 412498 <__fxstatat@plt+0xfa48>
  4124b0:	bl	412584 <__fxstatat@plt+0xfb34>
  4124b4:	bl	412584 <__fxstatat@plt+0xfb34>
  4124b8:	mov	x1, #0x80                  	// #128
  4124bc:	b	412498 <__fxstatat@plt+0xfa48>
  4124c0:	stp	x29, x30, [sp, #-32]!
  4124c4:	mov	x29, sp
  4124c8:	str	x19, [sp, #16]
  4124cc:	mov	x19, x0
  4124d0:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  4124d4:	mov	x2, x19
  4124d8:	mov	w1, #0x0                   	// #0
  4124dc:	bl	402680 <memset@plt>
  4124e0:	ldr	x19, [sp, #16]
  4124e4:	ldp	x29, x30, [sp], #32
  4124e8:	ret
  4124ec:	stp	x29, x30, [sp, #-16]!
  4124f0:	mov	x29, sp
  4124f4:	mul	x3, x0, x1
  4124f8:	umulh	x2, x0, x1
  4124fc:	cmp	x2, #0x0
  412500:	cset	x2, ne  // ne = any
  412504:	cmp	x3, #0x0
  412508:	csinc	x2, x2, xzr, ge  // ge = tcont
  41250c:	cbnz	w2, 412520 <__fxstatat@plt+0xfad0>
  412510:	bl	4026c0 <calloc@plt>
  412514:	cbz	x0, 412520 <__fxstatat@plt+0xfad0>
  412518:	ldp	x29, x30, [sp], #16
  41251c:	ret
  412520:	bl	412584 <__fxstatat@plt+0xfb34>
  412524:	stp	x29, x30, [sp, #-32]!
  412528:	mov	x29, sp
  41252c:	stp	x19, x20, [sp, #16]
  412530:	mov	x20, x0
  412534:	mov	x19, x1
  412538:	mov	x0, x1
  41253c:	bl	4122f8 <__fxstatat@plt+0xf8a8>
  412540:	mov	x2, x19
  412544:	mov	x1, x20
  412548:	bl	4023c0 <memcpy@plt>
  41254c:	ldp	x19, x20, [sp, #16]
  412550:	ldp	x29, x30, [sp], #32
  412554:	ret
  412558:	stp	x29, x30, [sp, #-32]!
  41255c:	mov	x29, sp
  412560:	str	x19, [sp, #16]
  412564:	mov	x19, x0
  412568:	bl	402430 <strlen@plt>
  41256c:	add	x1, x0, #0x1
  412570:	mov	x0, x19
  412574:	bl	412524 <__fxstatat@plt+0xfad4>
  412578:	ldr	x19, [sp, #16]
  41257c:	ldp	x29, x30, [sp], #32
  412580:	ret
  412584:	stp	x29, x30, [sp, #-32]!
  412588:	mov	x29, sp
  41258c:	str	x19, [sp, #16]
  412590:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  412594:	ldr	w19, [x0, #1320]
  412598:	mov	w2, #0x5                   	// #5
  41259c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4125a0:	add	x1, x1, #0x790
  4125a4:	mov	x0, #0x0                   	// #0
  4125a8:	bl	402970 <dcgettext@plt>
  4125ac:	mov	x3, x0
  4125b0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  4125b4:	add	x2, x2, #0x5b0
  4125b8:	mov	w1, #0x0                   	// #0
  4125bc:	mov	w0, w19
  4125c0:	bl	402490 <error@plt>
  4125c4:	bl	402760 <abort@plt>
  4125c8:	stp	x29, x30, [sp, #-80]!
  4125cc:	mov	x29, sp
  4125d0:	stp	x19, x20, [sp, #16]
  4125d4:	stp	x21, x22, [sp, #32]
  4125d8:	str	x23, [sp, #48]
  4125dc:	mov	x22, x0
  4125e0:	mov	x20, x2
  4125e4:	mov	x23, x3
  4125e8:	mov	x21, x5
  4125ec:	mov	w19, w6
  4125f0:	add	x3, sp, #0x48
  4125f4:	mov	w2, w1
  4125f8:	mov	x1, #0x0                   	// #0
  4125fc:	bl	412d38 <__fxstatat@plt+0x102e8>
  412600:	cbnz	w0, 412640 <__fxstatat@plt+0xfbf0>
  412604:	ldr	x0, [sp, #72]
  412608:	cmp	x0, x23
  41260c:	ccmp	x0, x20, #0x0, ls  // ls = plast
  412610:	b.cs	41268c <__fxstatat@plt+0xfc3c>  // b.hs, b.nlast
  412614:	mov	x1, #0x3fffffff            	// #1073741823
  412618:	cmp	x0, x1
  41261c:	b.ls	412630 <__fxstatat@plt+0xfbe0>  // b.plast
  412620:	bl	4029e0 <__errno_location@plt>
  412624:	mov	w1, #0x4b                  	// #75
  412628:	str	w1, [x0]
  41262c:	b	412650 <__fxstatat@plt+0xfc00>
  412630:	bl	4029e0 <__errno_location@plt>
  412634:	mov	w1, #0x22                  	// #34
  412638:	str	w1, [x0]
  41263c:	b	412650 <__fxstatat@plt+0xfc00>
  412640:	cmp	w0, #0x1
  412644:	b.eq	4126a4 <__fxstatat@plt+0xfc54>  // b.none
  412648:	cmp	w0, #0x3
  41264c:	b.eq	4126b4 <__fxstatat@plt+0xfc64>  // b.none
  412650:	cmp	w19, #0x0
  412654:	csinc	w19, w19, wzr, ne  // ne = any
  412658:	bl	4029e0 <__errno_location@plt>
  41265c:	ldr	w20, [x0]
  412660:	cmp	w20, #0x16
  412664:	csel	w20, w20, wzr, ne  // ne = any
  412668:	mov	x0, x22
  41266c:	bl	411be8 <__fxstatat@plt+0xf198>
  412670:	mov	x4, x0
  412674:	mov	x3, x21
  412678:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3af4>
  41267c:	add	x2, x2, #0x648
  412680:	mov	w1, w20
  412684:	mov	w0, w19
  412688:	bl	402490 <error@plt>
  41268c:	ldr	x0, [sp, #72]
  412690:	ldp	x19, x20, [sp, #16]
  412694:	ldp	x21, x22, [sp, #32]
  412698:	ldr	x23, [sp, #48]
  41269c:	ldp	x29, x30, [sp], #80
  4126a0:	ret
  4126a4:	bl	4029e0 <__errno_location@plt>
  4126a8:	mov	w1, #0x4b                  	// #75
  4126ac:	str	w1, [x0]
  4126b0:	b	412650 <__fxstatat@plt+0xfc00>
  4126b4:	bl	4029e0 <__errno_location@plt>
  4126b8:	str	wzr, [x0]
  4126bc:	b	412650 <__fxstatat@plt+0xfc00>
  4126c0:	stp	x29, x30, [sp, #-16]!
  4126c4:	mov	x29, sp
  4126c8:	mov	w6, w5
  4126cc:	mov	x5, x4
  4126d0:	mov	x4, x3
  4126d4:	mov	x3, x2
  4126d8:	mov	x2, x1
  4126dc:	mov	w1, #0xa                   	// #10
  4126e0:	bl	4125c8 <__fxstatat@plt+0xfb78>
  4126e4:	ldp	x29, x30, [sp], #16
  4126e8:	ret
  4126ec:	stp	x29, x30, [sp, #-32]!
  4126f0:	mov	x29, sp
  4126f4:	str	x19, [sp, #16]
  4126f8:	mov	x1, #0x0                   	// #0
  4126fc:	mov	x0, #0x0                   	// #0
  412700:	bl	402400 <getcwd@plt>
  412704:	mov	x19, x0
  412708:	cbz	x0, 41271c <__fxstatat@plt+0xfccc>
  41270c:	mov	x0, x19
  412710:	ldr	x19, [sp, #16]
  412714:	ldp	x29, x30, [sp], #32
  412718:	ret
  41271c:	bl	4029e0 <__errno_location@plt>
  412720:	ldr	w0, [x0]
  412724:	cmp	w0, #0xc
  412728:	b.ne	41270c <__fxstatat@plt+0xfcbc>  // b.any
  41272c:	bl	412584 <__fxstatat@plt+0xfb34>
  412730:	stp	x29, x30, [sp, #-64]!
  412734:	mov	x29, sp
  412738:	stp	x19, x20, [sp, #16]
  41273c:	stp	x21, x22, [sp, #32]
  412740:	mov	x0, #0x22                  	// #34
  412744:	str	x0, [sp, #56]
  412748:	mov	x19, #0x0                   	// #0
  41274c:	b	412770 <__fxstatat@plt+0xfd20>
  412750:	ldr	w21, [x20]
  412754:	cmp	w21, #0x24
  412758:	ccmp	w21, #0x0, #0x4, ne  // ne = any
  41275c:	cset	w0, ne  // ne = any
  412760:	cmp	w21, #0x16
  412764:	ccmp	w21, #0xc, #0x4, ne  // ne = any
  412768:	csel	w0, w0, wzr, ne  // ne = any
  41276c:	cbnz	w0, 4127c4 <__fxstatat@plt+0xfd74>
  412770:	add	x1, sp, #0x38
  412774:	mov	x0, x19
  412778:	bl	41246c <__fxstatat@plt+0xfa1c>
  41277c:	mov	x19, x0
  412780:	ldr	x21, [sp, #56]
  412784:	sub	x22, x21, #0x2
  412788:	strb	wzr, [x0, x22]
  41278c:	bl	4029e0 <__errno_location@plt>
  412790:	mov	x20, x0
  412794:	str	wzr, [x0]
  412798:	sub	x1, x21, #0x1
  41279c:	mov	x0, x19
  4127a0:	bl	402940 <gethostname@plt>
  4127a4:	cbnz	w0, 412750 <__fxstatat@plt+0xfd00>
  4127a8:	ldrb	w0, [x19, x22]
  4127ac:	cbnz	w0, 412770 <__fxstatat@plt+0xfd20>
  4127b0:	mov	x0, x19
  4127b4:	ldp	x19, x20, [sp, #16]
  4127b8:	ldp	x21, x22, [sp, #32]
  4127bc:	ldp	x29, x30, [sp], #64
  4127c0:	ret
  4127c4:	mov	x0, x19
  4127c8:	bl	402840 <free@plt>
  4127cc:	str	w21, [x20]
  4127d0:	mov	x19, #0x0                   	// #0
  4127d4:	b	4127b0 <__fxstatat@plt+0xfd60>
  4127d8:	mov	x6, x0
  4127dc:	sub	w3, w2, #0x1
  4127e0:	cbz	w2, 412830 <__fxstatat@plt+0xfde0>
  4127e4:	ldr	x2, [x0]
  4127e8:	mov	w0, #0x0                   	// #0
  4127ec:	sxtw	x1, w1
  4127f0:	mov	w7, #0x1                   	// #1
  4127f4:	mov	w5, #0x0                   	// #0
  4127f8:	b	412814 <__fxstatat@plt+0xfdc4>
  4127fc:	mul	x2, x2, x1
  412800:	mov	w4, w5
  412804:	orr	w0, w0, w4
  412808:	sub	w3, w3, #0x1
  41280c:	cmn	w3, #0x1
  412810:	b.eq	412828 <__fxstatat@plt+0xfdd8>  // b.none
  412814:	umulh	x4, x2, x1
  412818:	cbz	x4, 4127fc <__fxstatat@plt+0xfdac>
  41281c:	mov	x2, #0xffffffffffffffff    	// #-1
  412820:	mov	w4, w7
  412824:	b	412804 <__fxstatat@plt+0xfdb4>
  412828:	str	x2, [x6]
  41282c:	ret
  412830:	mov	w0, #0x0                   	// #0
  412834:	b	41282c <__fxstatat@plt+0xfddc>
  412838:	stp	x29, x30, [sp, #-96]!
  41283c:	mov	x29, sp
  412840:	stp	x19, x20, [sp, #16]
  412844:	stp	x21, x22, [sp, #32]
  412848:	stp	x23, x24, [sp, #48]
  41284c:	stp	x25, x26, [sp, #64]
  412850:	cmp	w2, #0x24
  412854:	b.hi	412894 <__fxstatat@plt+0xfe44>  // b.pmore
  412858:	mov	x25, x0
  41285c:	mov	w24, w2
  412860:	mov	x23, x3
  412864:	mov	x21, x4
  412868:	cmp	x1, #0x0
  41286c:	add	x0, sp, #0x58
  412870:	csel	x20, x0, x1, eq  // eq = none
  412874:	bl	4029e0 <__errno_location@plt>
  412878:	mov	x26, x0
  41287c:	str	wzr, [x0]
  412880:	ldrb	w19, [x25]
  412884:	bl	402820 <__ctype_b_loc@plt>
  412888:	ldr	x2, [x0]
  41288c:	mov	x0, x25
  412890:	b	4128b8 <__fxstatat@plt+0xfe68>
  412894:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412898:	add	x3, x3, #0x7e0
  41289c:	mov	w2, #0x54                  	// #84
  4128a0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4128a4:	add	x1, x1, #0x7a8
  4128a8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4128ac:	add	x0, x0, #0x7b8
  4128b0:	bl	4029d0 <__assert_fail@plt>
  4128b4:	ldrb	w19, [x0, #1]!
  4128b8:	and	x1, x19, #0xff
  4128bc:	ldrh	w1, [x2, x1, lsl #1]
  4128c0:	tbnz	w1, #13, 4128b4 <__fxstatat@plt+0xfe64>
  4128c4:	mov	w22, #0x4                   	// #4
  4128c8:	cmp	w19, #0x2d
  4128cc:	b.eq	412a10 <__fxstatat@plt+0xffc0>  // b.none
  4128d0:	mov	w2, w24
  4128d4:	mov	x1, x20
  4128d8:	mov	x0, x25
  4128dc:	bl	402420 <strtoul@plt>
  4128e0:	str	x0, [sp, #80]
  4128e4:	ldr	x24, [x20]
  4128e8:	cmp	x24, x25
  4128ec:	b.eq	41290c <__fxstatat@plt+0xfebc>  // b.none
  4128f0:	ldr	w1, [x26]
  4128f4:	cbz	w1, 4129f8 <__fxstatat@plt+0xffa8>
  4128f8:	mov	w22, #0x4                   	// #4
  4128fc:	cmp	w1, #0x22
  412900:	b.ne	412a10 <__fxstatat@plt+0xffc0>  // b.any
  412904:	mov	w22, #0x1                   	// #1
  412908:	b	4129fc <__fxstatat@plt+0xffac>
  41290c:	cbz	x21, 412c04 <__fxstatat@plt+0x101b4>
  412910:	ldrb	w1, [x25]
  412914:	cbz	w1, 412a10 <__fxstatat@plt+0xffc0>
  412918:	mov	x0, x21
  41291c:	bl	402880 <strchr@plt>
  412920:	cbz	x0, 412c0c <__fxstatat@plt+0x101bc>
  412924:	mov	x0, #0x1                   	// #1
  412928:	str	x0, [sp, #80]
  41292c:	ldrb	w19, [x24]
  412930:	mov	w22, #0x0                   	// #0
  412934:	mov	w1, w19
  412938:	mov	x0, x21
  41293c:	bl	402880 <strchr@plt>
  412940:	cbz	x0, 412a34 <__fxstatat@plt+0xffe4>
  412944:	sub	w0, w19, #0x45
  412948:	and	w0, w0, #0xff
  41294c:	cmp	w0, #0x2f
  412950:	b.hi	412a5c <__fxstatat@plt+0x1000c>  // b.pmore
  412954:	mov	x2, #0x1                   	// #1
  412958:	lsl	x0, x2, x0
  41295c:	mov	w25, #0x1                   	// #1
  412960:	mov	w1, #0x400                 	// #1024
  412964:	mov	x2, #0x8945                	// #35141
  412968:	movk	x2, #0x30, lsl #16
  41296c:	movk	x2, #0x8144, lsl #32
  412970:	tst	x0, x2
  412974:	b.eq	4129b4 <__fxstatat@plt+0xff64>  // b.none
  412978:	mov	w1, #0x30                  	// #48
  41297c:	mov	x0, x21
  412980:	bl	402880 <strchr@plt>
  412984:	cbz	x0, 412a68 <__fxstatat@plt+0x10018>
  412988:	ldrb	w0, [x24, #1]
  41298c:	cmp	w0, #0x44
  412990:	b.eq	412a74 <__fxstatat@plt+0x10024>  // b.none
  412994:	cmp	w0, #0x69
  412998:	b.eq	412a44 <__fxstatat@plt+0xfff4>  // b.none
  41299c:	cmp	w0, #0x42
  4129a0:	mov	w25, #0x2                   	// #2
  4129a4:	csinc	w25, w25, wzr, eq  // eq = none
  4129a8:	mov	w1, #0x400                 	// #1024
  4129ac:	mov	w0, #0x3e8                 	// #1000
  4129b0:	csel	w1, w1, w0, ne  // ne = any
  4129b4:	cmp	w19, #0x5a
  4129b8:	b.eq	412bbc <__fxstatat@plt+0x1016c>  // b.none
  4129bc:	b.hi	412adc <__fxstatat@plt+0x1008c>  // b.pmore
  4129c0:	cmp	w19, #0x4d
  4129c4:	b.eq	412b5c <__fxstatat@plt+0x1010c>  // b.none
  4129c8:	b.hi	412aa4 <__fxstatat@plt+0x10054>  // b.pmore
  4129cc:	cmp	w19, #0x45
  4129d0:	b.eq	412b8c <__fxstatat@plt+0x1013c>  // b.none
  4129d4:	b.ls	412a80 <__fxstatat@plt+0x10030>  // b.plast
  4129d8:	cmp	w19, #0x47
  4129dc:	b.eq	412b20 <__fxstatat@plt+0x100d0>  // b.none
  4129e0:	cmp	w19, #0x4b
  4129e4:	b.ne	412bcc <__fxstatat@plt+0x1017c>  // b.any
  4129e8:	mov	w2, #0x1                   	// #1
  4129ec:	add	x0, sp, #0x50
  4129f0:	bl	4127d8 <__fxstatat@plt+0xfd88>
  4129f4:	b	412be0 <__fxstatat@plt+0x10190>
  4129f8:	mov	w22, #0x0                   	// #0
  4129fc:	cbz	x21, 412a2c <__fxstatat@plt+0xffdc>
  412a00:	ldrb	w19, [x24]
  412a04:	cbnz	w19, 412934 <__fxstatat@plt+0xfee4>
  412a08:	ldr	x0, [sp, #80]
  412a0c:	str	x0, [x23]
  412a10:	mov	w0, w22
  412a14:	ldp	x19, x20, [sp, #16]
  412a18:	ldp	x21, x22, [sp, #32]
  412a1c:	ldp	x23, x24, [sp, #48]
  412a20:	ldp	x25, x26, [sp, #64]
  412a24:	ldp	x29, x30, [sp], #96
  412a28:	ret
  412a2c:	str	x0, [x23]
  412a30:	b	412a10 <__fxstatat@plt+0xffc0>
  412a34:	ldr	x0, [sp, #80]
  412a38:	str	x0, [x23]
  412a3c:	orr	w22, w22, #0x2
  412a40:	b	412a10 <__fxstatat@plt+0xffc0>
  412a44:	ldrb	w0, [x24, #2]
  412a48:	cmp	w0, #0x42
  412a4c:	mov	w25, #0x3                   	// #3
  412a50:	csinc	w25, w25, wzr, eq  // eq = none
  412a54:	mov	w1, #0x400                 	// #1024
  412a58:	b	4129b4 <__fxstatat@plt+0xff64>
  412a5c:	mov	w25, #0x1                   	// #1
  412a60:	mov	w1, #0x400                 	// #1024
  412a64:	b	4129b4 <__fxstatat@plt+0xff64>
  412a68:	mov	w25, #0x1                   	// #1
  412a6c:	mov	w1, #0x400                 	// #1024
  412a70:	b	4129b4 <__fxstatat@plt+0xff64>
  412a74:	mov	w25, #0x2                   	// #2
  412a78:	mov	w1, #0x3e8                 	// #1000
  412a7c:	b	4129b4 <__fxstatat@plt+0xff64>
  412a80:	cmp	w19, #0x42
  412a84:	b.ne	412bcc <__fxstatat@plt+0x1017c>  // b.any
  412a88:	ldr	x0, [sp, #80]
  412a8c:	cmp	xzr, x0, lsr #54
  412a90:	b.ne	412b7c <__fxstatat@plt+0x1012c>  // b.any
  412a94:	lsl	x0, x0, #10
  412a98:	str	x0, [sp, #80]
  412a9c:	mov	w0, #0x0                   	// #0
  412aa0:	b	412be0 <__fxstatat@plt+0x10190>
  412aa4:	cmp	w19, #0x54
  412aa8:	b.eq	412b9c <__fxstatat@plt+0x1014c>  // b.none
  412aac:	cmp	w19, #0x59
  412ab0:	b.ne	412ac4 <__fxstatat@plt+0x10074>  // b.any
  412ab4:	mov	w2, #0x8                   	// #8
  412ab8:	add	x0, sp, #0x50
  412abc:	bl	4127d8 <__fxstatat@plt+0xfd88>
  412ac0:	b	412be0 <__fxstatat@plt+0x10190>
  412ac4:	cmp	w19, #0x50
  412ac8:	b.ne	412bcc <__fxstatat@plt+0x1017c>  // b.any
  412acc:	mov	w2, #0x5                   	// #5
  412ad0:	add	x0, sp, #0x50
  412ad4:	bl	4127d8 <__fxstatat@plt+0xfd88>
  412ad8:	b	412be0 <__fxstatat@plt+0x10190>
  412adc:	cmp	w19, #0x6b
  412ae0:	b.eq	4129e8 <__fxstatat@plt+0xff98>  // b.none
  412ae4:	b.ls	412b10 <__fxstatat@plt+0x100c0>  // b.plast
  412ae8:	cmp	w19, #0x74
  412aec:	b.eq	412b9c <__fxstatat@plt+0x1014c>  // b.none
  412af0:	cmp	w19, #0x77
  412af4:	b.ne	412b54 <__fxstatat@plt+0x10104>  // b.any
  412af8:	ldr	x0, [sp, #80]
  412afc:	tbnz	x0, #63, 412bac <__fxstatat@plt+0x1015c>
  412b00:	lsl	x0, x0, #1
  412b04:	str	x0, [sp, #80]
  412b08:	mov	w0, #0x0                   	// #0
  412b0c:	b	412be0 <__fxstatat@plt+0x10190>
  412b10:	cmp	w19, #0x63
  412b14:	b.eq	412bdc <__fxstatat@plt+0x1018c>  // b.none
  412b18:	cmp	w19, #0x67
  412b1c:	b.ne	412b30 <__fxstatat@plt+0x100e0>  // b.any
  412b20:	mov	w2, #0x3                   	// #3
  412b24:	add	x0, sp, #0x50
  412b28:	bl	4127d8 <__fxstatat@plt+0xfd88>
  412b2c:	b	412be0 <__fxstatat@plt+0x10190>
  412b30:	cmp	w19, #0x62
  412b34:	b.ne	412bcc <__fxstatat@plt+0x1017c>  // b.any
  412b38:	ldr	x0, [sp, #80]
  412b3c:	cmp	xzr, x0, lsr #55
  412b40:	b.ne	412b6c <__fxstatat@plt+0x1011c>  // b.any
  412b44:	lsl	x0, x0, #9
  412b48:	str	x0, [sp, #80]
  412b4c:	mov	w0, #0x0                   	// #0
  412b50:	b	412be0 <__fxstatat@plt+0x10190>
  412b54:	cmp	w19, #0x6d
  412b58:	b.ne	412bcc <__fxstatat@plt+0x1017c>  // b.any
  412b5c:	mov	w2, #0x2                   	// #2
  412b60:	add	x0, sp, #0x50
  412b64:	bl	4127d8 <__fxstatat@plt+0xfd88>
  412b68:	b	412be0 <__fxstatat@plt+0x10190>
  412b6c:	mov	x0, #0xffffffffffffffff    	// #-1
  412b70:	str	x0, [sp, #80]
  412b74:	mov	w0, #0x1                   	// #1
  412b78:	b	412be0 <__fxstatat@plt+0x10190>
  412b7c:	mov	x0, #0xffffffffffffffff    	// #-1
  412b80:	str	x0, [sp, #80]
  412b84:	mov	w0, #0x1                   	// #1
  412b88:	b	412be0 <__fxstatat@plt+0x10190>
  412b8c:	mov	w2, #0x6                   	// #6
  412b90:	add	x0, sp, #0x50
  412b94:	bl	4127d8 <__fxstatat@plt+0xfd88>
  412b98:	b	412be0 <__fxstatat@plt+0x10190>
  412b9c:	mov	w2, #0x4                   	// #4
  412ba0:	add	x0, sp, #0x50
  412ba4:	bl	4127d8 <__fxstatat@plt+0xfd88>
  412ba8:	b	412be0 <__fxstatat@plt+0x10190>
  412bac:	mov	x0, #0xffffffffffffffff    	// #-1
  412bb0:	str	x0, [sp, #80]
  412bb4:	mov	w0, #0x1                   	// #1
  412bb8:	b	412be0 <__fxstatat@plt+0x10190>
  412bbc:	mov	w2, #0x7                   	// #7
  412bc0:	add	x0, sp, #0x50
  412bc4:	bl	4127d8 <__fxstatat@plt+0xfd88>
  412bc8:	b	412be0 <__fxstatat@plt+0x10190>
  412bcc:	ldr	x0, [sp, #80]
  412bd0:	str	x0, [x23]
  412bd4:	orr	w22, w22, #0x2
  412bd8:	b	412a10 <__fxstatat@plt+0xffc0>
  412bdc:	mov	w0, #0x0                   	// #0
  412be0:	orr	w22, w22, w0
  412be4:	ldr	x0, [x20]
  412be8:	add	x1, x0, w25, sxtw
  412bec:	str	x1, [x20]
  412bf0:	ldrb	w1, [x0, w25, sxtw]
  412bf4:	orr	w0, w22, #0x2
  412bf8:	cmp	w1, #0x0
  412bfc:	csel	w22, w0, w22, ne  // ne = any
  412c00:	b	412a08 <__fxstatat@plt+0xffb8>
  412c04:	mov	w22, #0x4                   	// #4
  412c08:	b	412a10 <__fxstatat@plt+0xffc0>
  412c0c:	mov	w22, #0x4                   	// #4
  412c10:	b	412a10 <__fxstatat@plt+0xffc0>
  412c14:	stp	x29, x30, [sp, #-64]!
  412c18:	mov	x29, sp
  412c1c:	stp	x19, x20, [sp, #16]
  412c20:	stp	x21, x22, [sp, #32]
  412c24:	mov	w6, w1
  412c28:	and	w2, w2, #0xff
  412c2c:	mov	x20, x4
  412c30:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  412c34:	ldr	w21, [x1, #1320]
  412c38:	cmp	w0, #0x3
  412c3c:	b.hi	412c98 <__fxstatat@plt+0x10248>  // b.pmore
  412c40:	cmp	w0, #0x1
  412c44:	b.hi	412cb0 <__fxstatat@plt+0x10260>  // b.pmore
  412c48:	cmp	w0, #0x1
  412c4c:	b.ne	412cac <__fxstatat@plt+0x1025c>  // b.any
  412c50:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412c54:	add	x1, x0, #0x818
  412c58:	tbnz	w6, #31, 412cbc <__fxstatat@plt+0x1026c>
  412c5c:	sbfiz	x6, x6, #5, #32
  412c60:	ldr	x22, [x3, x6]
  412c64:	adrp	x6, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412c68:	add	x19, x6, #0x858
  412c6c:	mov	w2, #0x5                   	// #5
  412c70:	mov	x0, #0x0                   	// #0
  412c74:	bl	402970 <dcgettext@plt>
  412c78:	mov	x5, x20
  412c7c:	mov	x4, x22
  412c80:	mov	x3, x19
  412c84:	mov	x2, x0
  412c88:	mov	w1, #0x0                   	// #0
  412c8c:	mov	w0, w21
  412c90:	bl	402490 <error@plt>
  412c94:	bl	402760 <abort@plt>
  412c98:	cmp	w0, #0x4
  412c9c:	b.ne	412cac <__fxstatat@plt+0x1025c>  // b.any
  412ca0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412ca4:	add	x1, x0, #0x838
  412ca8:	b	412c58 <__fxstatat@plt+0x10208>
  412cac:	bl	402760 <abort@plt>
  412cb0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412cb4:	add	x1, x0, #0x7f0
  412cb8:	b	412c58 <__fxstatat@plt+0x10208>
  412cbc:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412cc0:	add	x19, x19, #0x858
  412cc4:	sub	x19, x19, w6, sxtw
  412cc8:	strb	w2, [sp, #56]
  412ccc:	strb	wzr, [sp, #57]
  412cd0:	add	x22, sp, #0x38
  412cd4:	b	412c6c <__fxstatat@plt+0x1021c>
  412cd8:	mov	x6, x0
  412cdc:	sub	w3, w2, #0x1
  412ce0:	cbz	w2, 412d30 <__fxstatat@plt+0x102e0>
  412ce4:	ldr	x2, [x0]
  412ce8:	mov	w0, #0x0                   	// #0
  412cec:	sxtw	x1, w1
  412cf0:	mov	w7, #0x1                   	// #1
  412cf4:	mov	w5, #0x0                   	// #0
  412cf8:	b	412d14 <__fxstatat@plt+0x102c4>
  412cfc:	mul	x2, x2, x1
  412d00:	mov	w4, w5
  412d04:	orr	w0, w0, w4
  412d08:	sub	w3, w3, #0x1
  412d0c:	cmn	w3, #0x1
  412d10:	b.eq	412d28 <__fxstatat@plt+0x102d8>  // b.none
  412d14:	umulh	x4, x2, x1
  412d18:	cbz	x4, 412cfc <__fxstatat@plt+0x102ac>
  412d1c:	mov	x2, #0xffffffffffffffff    	// #-1
  412d20:	mov	w4, w7
  412d24:	b	412d04 <__fxstatat@plt+0x102b4>
  412d28:	str	x2, [x6]
  412d2c:	ret
  412d30:	mov	w0, #0x0                   	// #0
  412d34:	b	412d2c <__fxstatat@plt+0x102dc>
  412d38:	stp	x29, x30, [sp, #-96]!
  412d3c:	mov	x29, sp
  412d40:	stp	x19, x20, [sp, #16]
  412d44:	stp	x21, x22, [sp, #32]
  412d48:	stp	x23, x24, [sp, #48]
  412d4c:	stp	x25, x26, [sp, #64]
  412d50:	cmp	w2, #0x24
  412d54:	b.hi	412d94 <__fxstatat@plt+0x10344>  // b.pmore
  412d58:	mov	x25, x0
  412d5c:	mov	w24, w2
  412d60:	mov	x23, x3
  412d64:	mov	x21, x4
  412d68:	cmp	x1, #0x0
  412d6c:	add	x0, sp, #0x58
  412d70:	csel	x20, x0, x1, eq  // eq = none
  412d74:	bl	4029e0 <__errno_location@plt>
  412d78:	mov	x26, x0
  412d7c:	str	wzr, [x0]
  412d80:	ldrb	w19, [x25]
  412d84:	bl	402820 <__ctype_b_loc@plt>
  412d88:	ldr	x2, [x0]
  412d8c:	mov	x0, x25
  412d90:	b	412db8 <__fxstatat@plt+0x10368>
  412d94:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412d98:	add	x3, x3, #0x860
  412d9c:	mov	w2, #0x54                  	// #84
  412da0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412da4:	add	x1, x1, #0x7a8
  412da8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  412dac:	add	x0, x0, #0x7b8
  412db0:	bl	4029d0 <__assert_fail@plt>
  412db4:	ldrb	w19, [x0, #1]!
  412db8:	and	x1, x19, #0xff
  412dbc:	ldrh	w1, [x2, x1, lsl #1]
  412dc0:	tbnz	w1, #13, 412db4 <__fxstatat@plt+0x10364>
  412dc4:	mov	w22, #0x4                   	// #4
  412dc8:	cmp	w19, #0x2d
  412dcc:	b.eq	412f14 <__fxstatat@plt+0x104c4>  // b.none
  412dd0:	mov	w3, #0x0                   	// #0
  412dd4:	mov	w2, w24
  412dd8:	mov	x1, x20
  412ddc:	mov	x0, x25
  412de0:	bl	4026b0 <__strtoul_internal@plt>
  412de4:	str	x0, [sp, #80]
  412de8:	ldr	x24, [x20]
  412dec:	cmp	x24, x25
  412df0:	b.eq	412e10 <__fxstatat@plt+0x103c0>  // b.none
  412df4:	ldr	w1, [x26]
  412df8:	cbz	w1, 412efc <__fxstatat@plt+0x104ac>
  412dfc:	mov	w22, #0x4                   	// #4
  412e00:	cmp	w1, #0x22
  412e04:	b.ne	412f14 <__fxstatat@plt+0x104c4>  // b.any
  412e08:	mov	w22, #0x1                   	// #1
  412e0c:	b	412f00 <__fxstatat@plt+0x104b0>
  412e10:	cbz	x21, 413108 <__fxstatat@plt+0x106b8>
  412e14:	ldrb	w1, [x25]
  412e18:	cbz	w1, 412f14 <__fxstatat@plt+0x104c4>
  412e1c:	mov	x0, x21
  412e20:	bl	402880 <strchr@plt>
  412e24:	cbz	x0, 413110 <__fxstatat@plt+0x106c0>
  412e28:	mov	x0, #0x1                   	// #1
  412e2c:	str	x0, [sp, #80]
  412e30:	ldrb	w19, [x24]
  412e34:	mov	w22, #0x0                   	// #0
  412e38:	mov	w1, w19
  412e3c:	mov	x0, x21
  412e40:	bl	402880 <strchr@plt>
  412e44:	cbz	x0, 412f38 <__fxstatat@plt+0x104e8>
  412e48:	sub	w0, w19, #0x45
  412e4c:	and	w0, w0, #0xff
  412e50:	cmp	w0, #0x2f
  412e54:	b.hi	412f60 <__fxstatat@plt+0x10510>  // b.pmore
  412e58:	mov	x2, #0x1                   	// #1
  412e5c:	lsl	x0, x2, x0
  412e60:	mov	w25, #0x1                   	// #1
  412e64:	mov	w1, #0x400                 	// #1024
  412e68:	mov	x2, #0x8945                	// #35141
  412e6c:	movk	x2, #0x30, lsl #16
  412e70:	movk	x2, #0x8144, lsl #32
  412e74:	tst	x0, x2
  412e78:	b.eq	412eb8 <__fxstatat@plt+0x10468>  // b.none
  412e7c:	mov	w1, #0x30                  	// #48
  412e80:	mov	x0, x21
  412e84:	bl	402880 <strchr@plt>
  412e88:	cbz	x0, 412f6c <__fxstatat@plt+0x1051c>
  412e8c:	ldrb	w0, [x24, #1]
  412e90:	cmp	w0, #0x44
  412e94:	b.eq	412f78 <__fxstatat@plt+0x10528>  // b.none
  412e98:	cmp	w0, #0x69
  412e9c:	b.eq	412f48 <__fxstatat@plt+0x104f8>  // b.none
  412ea0:	cmp	w0, #0x42
  412ea4:	mov	w25, #0x2                   	// #2
  412ea8:	csinc	w25, w25, wzr, eq  // eq = none
  412eac:	mov	w1, #0x400                 	// #1024
  412eb0:	mov	w0, #0x3e8                 	// #1000
  412eb4:	csel	w1, w1, w0, ne  // ne = any
  412eb8:	cmp	w19, #0x5a
  412ebc:	b.eq	4130c0 <__fxstatat@plt+0x10670>  // b.none
  412ec0:	b.hi	412fe0 <__fxstatat@plt+0x10590>  // b.pmore
  412ec4:	cmp	w19, #0x4d
  412ec8:	b.eq	413060 <__fxstatat@plt+0x10610>  // b.none
  412ecc:	b.hi	412fa8 <__fxstatat@plt+0x10558>  // b.pmore
  412ed0:	cmp	w19, #0x45
  412ed4:	b.eq	413090 <__fxstatat@plt+0x10640>  // b.none
  412ed8:	b.ls	412f84 <__fxstatat@plt+0x10534>  // b.plast
  412edc:	cmp	w19, #0x47
  412ee0:	b.eq	413024 <__fxstatat@plt+0x105d4>  // b.none
  412ee4:	cmp	w19, #0x4b
  412ee8:	b.ne	4130d0 <__fxstatat@plt+0x10680>  // b.any
  412eec:	mov	w2, #0x1                   	// #1
  412ef0:	add	x0, sp, #0x50
  412ef4:	bl	412cd8 <__fxstatat@plt+0x10288>
  412ef8:	b	4130e4 <__fxstatat@plt+0x10694>
  412efc:	mov	w22, #0x0                   	// #0
  412f00:	cbz	x21, 412f30 <__fxstatat@plt+0x104e0>
  412f04:	ldrb	w19, [x24]
  412f08:	cbnz	w19, 412e38 <__fxstatat@plt+0x103e8>
  412f0c:	ldr	x0, [sp, #80]
  412f10:	str	x0, [x23]
  412f14:	mov	w0, w22
  412f18:	ldp	x19, x20, [sp, #16]
  412f1c:	ldp	x21, x22, [sp, #32]
  412f20:	ldp	x23, x24, [sp, #48]
  412f24:	ldp	x25, x26, [sp, #64]
  412f28:	ldp	x29, x30, [sp], #96
  412f2c:	ret
  412f30:	str	x0, [x23]
  412f34:	b	412f14 <__fxstatat@plt+0x104c4>
  412f38:	ldr	x0, [sp, #80]
  412f3c:	str	x0, [x23]
  412f40:	orr	w22, w22, #0x2
  412f44:	b	412f14 <__fxstatat@plt+0x104c4>
  412f48:	ldrb	w0, [x24, #2]
  412f4c:	cmp	w0, #0x42
  412f50:	mov	w25, #0x3                   	// #3
  412f54:	csinc	w25, w25, wzr, eq  // eq = none
  412f58:	mov	w1, #0x400                 	// #1024
  412f5c:	b	412eb8 <__fxstatat@plt+0x10468>
  412f60:	mov	w25, #0x1                   	// #1
  412f64:	mov	w1, #0x400                 	// #1024
  412f68:	b	412eb8 <__fxstatat@plt+0x10468>
  412f6c:	mov	w25, #0x1                   	// #1
  412f70:	mov	w1, #0x400                 	// #1024
  412f74:	b	412eb8 <__fxstatat@plt+0x10468>
  412f78:	mov	w25, #0x2                   	// #2
  412f7c:	mov	w1, #0x3e8                 	// #1000
  412f80:	b	412eb8 <__fxstatat@plt+0x10468>
  412f84:	cmp	w19, #0x42
  412f88:	b.ne	4130d0 <__fxstatat@plt+0x10680>  // b.any
  412f8c:	ldr	x0, [sp, #80]
  412f90:	cmp	xzr, x0, lsr #54
  412f94:	b.ne	413080 <__fxstatat@plt+0x10630>  // b.any
  412f98:	lsl	x0, x0, #10
  412f9c:	str	x0, [sp, #80]
  412fa0:	mov	w0, #0x0                   	// #0
  412fa4:	b	4130e4 <__fxstatat@plt+0x10694>
  412fa8:	cmp	w19, #0x54
  412fac:	b.eq	4130a0 <__fxstatat@plt+0x10650>  // b.none
  412fb0:	cmp	w19, #0x59
  412fb4:	b.ne	412fc8 <__fxstatat@plt+0x10578>  // b.any
  412fb8:	mov	w2, #0x8                   	// #8
  412fbc:	add	x0, sp, #0x50
  412fc0:	bl	412cd8 <__fxstatat@plt+0x10288>
  412fc4:	b	4130e4 <__fxstatat@plt+0x10694>
  412fc8:	cmp	w19, #0x50
  412fcc:	b.ne	4130d0 <__fxstatat@plt+0x10680>  // b.any
  412fd0:	mov	w2, #0x5                   	// #5
  412fd4:	add	x0, sp, #0x50
  412fd8:	bl	412cd8 <__fxstatat@plt+0x10288>
  412fdc:	b	4130e4 <__fxstatat@plt+0x10694>
  412fe0:	cmp	w19, #0x6b
  412fe4:	b.eq	412eec <__fxstatat@plt+0x1049c>  // b.none
  412fe8:	b.ls	413014 <__fxstatat@plt+0x105c4>  // b.plast
  412fec:	cmp	w19, #0x74
  412ff0:	b.eq	4130a0 <__fxstatat@plt+0x10650>  // b.none
  412ff4:	cmp	w19, #0x77
  412ff8:	b.ne	413058 <__fxstatat@plt+0x10608>  // b.any
  412ffc:	ldr	x0, [sp, #80]
  413000:	tbnz	x0, #63, 4130b0 <__fxstatat@plt+0x10660>
  413004:	lsl	x0, x0, #1
  413008:	str	x0, [sp, #80]
  41300c:	mov	w0, #0x0                   	// #0
  413010:	b	4130e4 <__fxstatat@plt+0x10694>
  413014:	cmp	w19, #0x63
  413018:	b.eq	4130e0 <__fxstatat@plt+0x10690>  // b.none
  41301c:	cmp	w19, #0x67
  413020:	b.ne	413034 <__fxstatat@plt+0x105e4>  // b.any
  413024:	mov	w2, #0x3                   	// #3
  413028:	add	x0, sp, #0x50
  41302c:	bl	412cd8 <__fxstatat@plt+0x10288>
  413030:	b	4130e4 <__fxstatat@plt+0x10694>
  413034:	cmp	w19, #0x62
  413038:	b.ne	4130d0 <__fxstatat@plt+0x10680>  // b.any
  41303c:	ldr	x0, [sp, #80]
  413040:	cmp	xzr, x0, lsr #55
  413044:	b.ne	413070 <__fxstatat@plt+0x10620>  // b.any
  413048:	lsl	x0, x0, #9
  41304c:	str	x0, [sp, #80]
  413050:	mov	w0, #0x0                   	// #0
  413054:	b	4130e4 <__fxstatat@plt+0x10694>
  413058:	cmp	w19, #0x6d
  41305c:	b.ne	4130d0 <__fxstatat@plt+0x10680>  // b.any
  413060:	mov	w2, #0x2                   	// #2
  413064:	add	x0, sp, #0x50
  413068:	bl	412cd8 <__fxstatat@plt+0x10288>
  41306c:	b	4130e4 <__fxstatat@plt+0x10694>
  413070:	mov	x0, #0xffffffffffffffff    	// #-1
  413074:	str	x0, [sp, #80]
  413078:	mov	w0, #0x1                   	// #1
  41307c:	b	4130e4 <__fxstatat@plt+0x10694>
  413080:	mov	x0, #0xffffffffffffffff    	// #-1
  413084:	str	x0, [sp, #80]
  413088:	mov	w0, #0x1                   	// #1
  41308c:	b	4130e4 <__fxstatat@plt+0x10694>
  413090:	mov	w2, #0x6                   	// #6
  413094:	add	x0, sp, #0x50
  413098:	bl	412cd8 <__fxstatat@plt+0x10288>
  41309c:	b	4130e4 <__fxstatat@plt+0x10694>
  4130a0:	mov	w2, #0x4                   	// #4
  4130a4:	add	x0, sp, #0x50
  4130a8:	bl	412cd8 <__fxstatat@plt+0x10288>
  4130ac:	b	4130e4 <__fxstatat@plt+0x10694>
  4130b0:	mov	x0, #0xffffffffffffffff    	// #-1
  4130b4:	str	x0, [sp, #80]
  4130b8:	mov	w0, #0x1                   	// #1
  4130bc:	b	4130e4 <__fxstatat@plt+0x10694>
  4130c0:	mov	w2, #0x7                   	// #7
  4130c4:	add	x0, sp, #0x50
  4130c8:	bl	412cd8 <__fxstatat@plt+0x10288>
  4130cc:	b	4130e4 <__fxstatat@plt+0x10694>
  4130d0:	ldr	x0, [sp, #80]
  4130d4:	str	x0, [x23]
  4130d8:	orr	w22, w22, #0x2
  4130dc:	b	412f14 <__fxstatat@plt+0x104c4>
  4130e0:	mov	w0, #0x0                   	// #0
  4130e4:	orr	w22, w22, w0
  4130e8:	ldr	x0, [x20]
  4130ec:	add	x1, x0, w25, sxtw
  4130f0:	str	x1, [x20]
  4130f4:	ldrb	w1, [x0, w25, sxtw]
  4130f8:	orr	w0, w22, #0x2
  4130fc:	cmp	w1, #0x0
  413100:	csel	w22, w0, w22, ne  // ne = any
  413104:	b	412f0c <__fxstatat@plt+0x104bc>
  413108:	mov	w22, #0x4                   	// #4
  41310c:	b	412f14 <__fxstatat@plt+0x104c4>
  413110:	mov	w22, #0x4                   	// #4
  413114:	b	412f14 <__fxstatat@plt+0x104c4>
  413118:	stp	x29, x30, [sp, #-64]!
  41311c:	mov	x29, sp
  413120:	stp	x19, x20, [sp, #16]
  413124:	stp	x21, x22, [sp, #32]
  413128:	mov	x19, x0
  41312c:	mov	x22, x1
  413130:	mov	x21, x2
  413134:	cmp	x0, #0x0
  413138:	add	x0, sp, #0x3c
  41313c:	csel	x19, x0, x19, eq  // eq = none
  413140:	mov	x0, x19
  413144:	bl	4023b0 <mbrtowc@plt>
  413148:	mov	x20, x0
  41314c:	cmp	x21, #0x0
  413150:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  413154:	b.hi	41316c <__fxstatat@plt+0x1071c>  // b.pmore
  413158:	mov	x0, x20
  41315c:	ldp	x19, x20, [sp, #16]
  413160:	ldp	x21, x22, [sp, #32]
  413164:	ldp	x29, x30, [sp], #64
  413168:	ret
  41316c:	mov	w0, #0x0                   	// #0
  413170:	bl	40c214 <__fxstatat@plt+0x97c4>
  413174:	and	w0, w0, #0xff
  413178:	cbnz	w0, 413158 <__fxstatat@plt+0x10708>
  41317c:	ldrb	w0, [x22]
  413180:	str	w0, [x19]
  413184:	mov	x20, #0x1                   	// #1
  413188:	b	413158 <__fxstatat@plt+0x10708>
  41318c:	stp	x29, x30, [sp, #-16]!
  413190:	mov	x29, sp
  413194:	mov	x2, x0
  413198:	ldrb	w0, [x0, #80]
  41319c:	tbz	w0, #0, 4131b4 <__fxstatat@plt+0x10764>
  4131a0:	ldr	x3, [x2, #56]
  4131a4:	ldr	x0, [x2, #72]
  4131a8:	blr	x3
  4131ac:	ldp	x29, x30, [sp], #16
  4131b0:	ret
  4131b4:	ldr	x2, [x2, #56]
  4131b8:	mov	x0, x1
  4131bc:	blr	x2
  4131c0:	b	4131ac <__fxstatat@plt+0x1075c>
  4131c4:	stp	x29, x30, [sp, #-16]!
  4131c8:	mov	x29, sp
  4131cc:	mov	x2, x0
  4131d0:	ldrb	w0, [x0, #80]
  4131d4:	tbz	w0, #0, 4131ec <__fxstatat@plt+0x1079c>
  4131d8:	ldr	x3, [x2, #64]
  4131dc:	ldr	x0, [x2, #72]
  4131e0:	blr	x3
  4131e4:	ldp	x29, x30, [sp], #16
  4131e8:	ret
  4131ec:	ldr	x2, [x2, #64]
  4131f0:	mov	x0, x1
  4131f4:	blr	x2
  4131f8:	b	4131e4 <__fxstatat@plt+0x10794>
  4131fc:	stp	x29, x30, [sp, #-48]!
  413200:	mov	x29, sp
  413204:	stp	x19, x20, [sp, #16]
  413208:	str	x21, [sp, #32]
  41320c:	mov	x19, x0
  413210:	cmp	x2, #0x0
  413214:	mov	x0, #0x10                  	// #16
  413218:	csel	x20, x2, x0, ne  // ne = any
  41321c:	cmp	x1, #0x0
  413220:	mov	x0, #0xfe0                 	// #4064
  413224:	csel	x1, x1, x0, ne  // ne = any
  413228:	str	x1, [x19]
  41322c:	sub	x21, x20, #0x1
  413230:	str	x21, [x19, #48]
  413234:	mov	x0, x19
  413238:	bl	41318c <__fxstatat@plt+0x1073c>
  41323c:	str	x0, [x19, #8]
  413240:	cbz	x0, 413290 <__fxstatat@plt+0x10840>
  413244:	add	x2, x0, #0x10
  413248:	add	x2, x2, x21
  41324c:	neg	x20, x20
  413250:	and	x20, x2, x20
  413254:	str	x20, [x19, #16]
  413258:	str	x20, [x19, #24]
  41325c:	ldr	x1, [x19]
  413260:	add	x1, x0, x1
  413264:	str	x1, [x0]
  413268:	str	x1, [x19, #32]
  41326c:	str	xzr, [x0, #8]
  413270:	ldrb	w0, [x19, #80]
  413274:	and	w0, w0, #0xfffffff9
  413278:	strb	w0, [x19, #80]
  41327c:	mov	w0, #0x1                   	// #1
  413280:	ldp	x19, x20, [sp, #16]
  413284:	ldr	x21, [sp, #32]
  413288:	ldp	x29, x30, [sp], #48
  41328c:	ret
  413290:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  413294:	ldr	x0, [x0, #1416]
  413298:	blr	x0
  41329c:	stp	x29, x30, [sp, #-32]!
  4132a0:	mov	x29, sp
  4132a4:	str	x19, [sp, #16]
  4132a8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4132ac:	ldr	x19, [x0, #1432]
  4132b0:	mov	w2, #0x5                   	// #5
  4132b4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4132b8:	add	x1, x1, #0x790
  4132bc:	mov	x0, #0x0                   	// #0
  4132c0:	bl	402970 <dcgettext@plt>
  4132c4:	mov	x3, x0
  4132c8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6af4>
  4132cc:	add	x2, x2, #0x458
  4132d0:	mov	w1, #0x1                   	// #1
  4132d4:	mov	x0, x19
  4132d8:	bl	4027e0 <__fprintf_chk@plt>
  4132dc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  4132e0:	ldr	w0, [x0, #1320]
  4132e4:	bl	402460 <exit@plt>

00000000004132e8 <_obstack_begin@@Base>:
  4132e8:	stp	x29, x30, [sp, #-16]!
  4132ec:	mov	x29, sp
  4132f0:	str	x3, [x0, #56]
  4132f4:	str	x4, [x0, #64]
  4132f8:	ldrb	w3, [x0, #80]
  4132fc:	and	w3, w3, #0xfffffffe
  413300:	strb	w3, [x0, #80]
  413304:	bl	4131fc <__fxstatat@plt+0x107ac>
  413308:	ldp	x29, x30, [sp], #16
  41330c:	ret

0000000000413310 <_obstack_begin_1@@Base>:
  413310:	stp	x29, x30, [sp, #-16]!
  413314:	mov	x29, sp
  413318:	str	x3, [x0, #56]
  41331c:	str	x4, [x0, #64]
  413320:	str	x5, [x0, #72]
  413324:	ldrb	w3, [x0, #80]
  413328:	orr	w3, w3, #0x1
  41332c:	strb	w3, [x0, #80]
  413330:	bl	4131fc <__fxstatat@plt+0x107ac>
  413334:	ldp	x29, x30, [sp], #16
  413338:	ret

000000000041333c <_obstack_newchunk@@Base>:
  41333c:	stp	x29, x30, [sp, #-64]!
  413340:	mov	x29, sp
  413344:	stp	x19, x20, [sp, #16]
  413348:	stp	x21, x22, [sp, #32]
  41334c:	str	x23, [sp, #48]
  413350:	mov	x19, x0
  413354:	ldr	x22, [x0, #8]
  413358:	ldr	x21, [x0, #24]
  41335c:	ldr	x0, [x0, #16]
  413360:	sub	x21, x21, x0
  413364:	add	x1, x21, x1
  413368:	ldr	x0, [x19, #48]
  41336c:	add	x0, x1, x0
  413370:	lsr	x20, x21, #3
  413374:	add	x20, x20, #0x64
  413378:	add	x20, x20, x0
  41337c:	ldr	x2, [x19]
  413380:	cmp	x2, x0
  413384:	csel	x2, x2, x0, cs  // cs = hs, nlast
  413388:	cmp	x2, x20
  41338c:	csel	x20, x2, x20, cs  // cs = hs, nlast
  413390:	cmp	x21, x1
  413394:	ccmp	x1, x0, #0x2, ls  // ls = plast
  413398:	b.hi	413434 <_obstack_newchunk@@Base+0xf8>  // b.pmore
  41339c:	mov	x1, x20
  4133a0:	mov	x0, x19
  4133a4:	bl	41318c <__fxstatat@plt+0x1073c>
  4133a8:	mov	x23, x0
  4133ac:	cbz	x0, 413434 <_obstack_newchunk@@Base+0xf8>
  4133b0:	str	x0, [x19, #8]
  4133b4:	str	x22, [x0, #8]
  4133b8:	add	x2, x0, x20
  4133bc:	str	x2, [x19, #32]
  4133c0:	mov	x1, x0
  4133c4:	str	x2, [x1], #16
  4133c8:	ldr	x20, [x19, #48]
  4133cc:	add	x1, x1, x20
  4133d0:	bic	x20, x1, x20
  4133d4:	mov	x2, x21
  4133d8:	ldr	x1, [x19, #16]
  4133dc:	mov	x0, x20
  4133e0:	bl	4023c0 <memcpy@plt>
  4133e4:	ldrb	w0, [x19, #80]
  4133e8:	tbnz	w0, #1, 413408 <_obstack_newchunk@@Base+0xcc>
  4133ec:	ldr	x0, [x19, #48]
  4133f0:	add	x1, x22, #0x10
  4133f4:	add	x1, x1, x0
  4133f8:	bic	x0, x1, x0
  4133fc:	ldr	x1, [x19, #16]
  413400:	cmp	x1, x0
  413404:	b.eq	413440 <_obstack_newchunk@@Base+0x104>  // b.none
  413408:	str	x20, [x19, #16]
  41340c:	add	x20, x20, x21
  413410:	str	x20, [x19, #24]
  413414:	ldrb	w0, [x19, #80]
  413418:	and	w0, w0, #0xfffffffd
  41341c:	strb	w0, [x19, #80]
  413420:	ldp	x19, x20, [sp, #16]
  413424:	ldp	x21, x22, [sp, #32]
  413428:	ldr	x23, [sp, #48]
  41342c:	ldp	x29, x30, [sp], #64
  413430:	ret
  413434:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  413438:	ldr	x0, [x0, #1416]
  41343c:	blr	x0
  413440:	ldr	x0, [x22, #8]
  413444:	str	x0, [x23, #8]
  413448:	mov	x1, x22
  41344c:	mov	x0, x19
  413450:	bl	4131c4 <__fxstatat@plt+0x10774>
  413454:	b	413408 <_obstack_newchunk@@Base+0xcc>

0000000000413458 <_obstack_allocated_p@@Base>:
  413458:	ldr	x0, [x0, #8]
  41345c:	cbnz	x0, 41346c <_obstack_allocated_p@@Base+0x14>
  413460:	b	413480 <_obstack_allocated_p@@Base+0x28>
  413464:	ldr	x0, [x0, #8]
  413468:	cbz	x0, 413480 <_obstack_allocated_p@@Base+0x28>
  41346c:	cmp	x1, x0
  413470:	b.ls	413464 <_obstack_allocated_p@@Base+0xc>  // b.plast
  413474:	ldr	x2, [x0]
  413478:	cmp	x2, x1
  41347c:	b.cc	413464 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  413480:	cmp	x0, #0x0
  413484:	cset	w0, ne  // ne = any
  413488:	ret

000000000041348c <_obstack_free@@Base>:
  41348c:	stp	x29, x30, [sp, #-48]!
  413490:	mov	x29, sp
  413494:	stp	x19, x20, [sp, #16]
  413498:	str	x21, [sp, #32]
  41349c:	mov	x19, x0
  4134a0:	mov	x21, x1
  4134a4:	ldr	x1, [x0, #8]
  4134a8:	cbnz	x1, 4134d4 <_obstack_free@@Base+0x48>
  4134ac:	cbz	x21, 4134fc <_obstack_free@@Base+0x70>
  4134b0:	bl	402760 <abort@plt>
  4134b4:	ldr	x20, [x1, #8]
  4134b8:	mov	x0, x19
  4134bc:	bl	4131c4 <__fxstatat@plt+0x10774>
  4134c0:	ldrb	w2, [x19, #80]
  4134c4:	orr	w2, w2, #0x2
  4134c8:	strb	w2, [x19, #80]
  4134cc:	cbz	x20, 4134ac <_obstack_free@@Base+0x20>
  4134d0:	mov	x1, x20
  4134d4:	cmp	x21, x1
  4134d8:	b.ls	4134b4 <_obstack_free@@Base+0x28>  // b.plast
  4134dc:	ldr	x0, [x1]
  4134e0:	cmp	x0, x21
  4134e4:	b.cc	4134b4 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  4134e8:	str	x21, [x19, #24]
  4134ec:	str	x21, [x19, #16]
  4134f0:	ldr	x0, [x1]
  4134f4:	str	x0, [x19, #32]
  4134f8:	str	x1, [x19, #8]
  4134fc:	ldp	x19, x20, [sp, #16]
  413500:	ldr	x21, [sp, #32]
  413504:	ldp	x29, x30, [sp], #48
  413508:	ret

000000000041350c <_obstack_memory_used@@Base>:
  41350c:	ldr	x1, [x0, #8]
  413510:	cbz	x1, 413530 <_obstack_memory_used@@Base+0x24>
  413514:	mov	x0, #0x0                   	// #0
  413518:	ldr	x2, [x1]
  41351c:	sub	x2, x2, x1
  413520:	add	x0, x0, x2
  413524:	ldr	x1, [x1, #8]
  413528:	cbnz	x1, 413518 <_obstack_memory_used@@Base+0xc>
  41352c:	ret
  413530:	mov	x0, #0x0                   	// #0
  413534:	b	41352c <_obstack_memory_used@@Base+0x20>
  413538:	stp	x29, x30, [sp, #-16]!
  41353c:	mov	x29, sp
  413540:	cbz	x0, 413560 <_obstack_memory_used@@Base+0x54>
  413544:	mov	x1, x0
  413548:	mov	w2, #0x1                   	// #1
  41354c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  413550:	add	x0, x0, #0x898
  413554:	bl	4024c0 <setenv@plt>
  413558:	ldp	x29, x30, [sp], #16
  41355c:	ret
  413560:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  413564:	add	x0, x0, #0x898
  413568:	bl	4028f0 <unsetenv@plt>
  41356c:	b	413558 <_obstack_memory_used@@Base+0x4c>
  413570:	stp	x29, x30, [sp, #-48]!
  413574:	mov	x29, sp
  413578:	stp	x19, x20, [sp, #16]
  41357c:	cbz	x0, 4135f4 <_obstack_memory_used@@Base+0xe8>
  413580:	stp	x21, x22, [sp, #32]
  413584:	mov	x20, x0
  413588:	bl	402430 <strlen@plt>
  41358c:	add	x21, x0, #0x1
  413590:	cmp	x21, #0x76
  413594:	mov	x0, #0x76                  	// #118
  413598:	csel	x0, x21, x0, cs  // cs = hs, nlast
  41359c:	add	x0, x0, #0x11
  4135a0:	and	x0, x0, #0xfffffffffffffff8
  4135a4:	bl	4025f0 <malloc@plt>
  4135a8:	mov	x19, x0
  4135ac:	cbz	x0, 4135ec <_obstack_memory_used@@Base+0xe0>
  4135b0:	str	xzr, [x0]
  4135b4:	mov	w0, #0x1                   	// #1
  4135b8:	strb	w0, [x19, #8]
  4135bc:	mov	x22, x19
  4135c0:	strb	wzr, [x22, #9]!
  4135c4:	mov	x2, x21
  4135c8:	mov	x1, x20
  4135cc:	mov	x0, x22
  4135d0:	bl	4023c0 <memcpy@plt>
  4135d4:	strb	wzr, [x22, x21]
  4135d8:	ldp	x21, x22, [sp, #32]
  4135dc:	mov	x0, x19
  4135e0:	ldp	x19, x20, [sp, #16]
  4135e4:	ldp	x29, x30, [sp], #48
  4135e8:	ret
  4135ec:	ldp	x21, x22, [sp, #32]
  4135f0:	b	4135dc <_obstack_memory_used@@Base+0xd0>
  4135f4:	mov	x0, #0x80                  	// #128
  4135f8:	bl	4025f0 <malloc@plt>
  4135fc:	mov	x19, x0
  413600:	cbz	x0, 4135dc <_obstack_memory_used@@Base+0xd0>
  413604:	str	xzr, [x0]
  413608:	strb	wzr, [x0, #8]
  41360c:	strb	wzr, [x0, #9]
  413610:	b	4135dc <_obstack_memory_used@@Base+0xd0>
  413614:	stp	x29, x30, [sp, #-64]!
  413618:	mov	x29, sp
  41361c:	stp	x21, x22, [sp, #32]
  413620:	ldr	x21, [x1, #48]
  413624:	cbz	x21, 41375c <_obstack_memory_used@@Base+0x250>
  413628:	stp	x19, x20, [sp, #16]
  41362c:	mov	x20, x0
  413630:	mov	x22, x1
  413634:	cmp	x1, x21
  413638:	b.hi	41364c <_obstack_memory_used@@Base+0x140>  // b.pmore
  41363c:	add	x1, x1, #0x38
  413640:	mov	w0, #0x1                   	// #1
  413644:	cmp	x21, x1
  413648:	b.cc	413774 <_obstack_memory_used@@Base+0x268>  // b.lo, b.ul, b.last
  41364c:	ldrb	w0, [x21]
  413650:	cbz	w0, 41373c <_obstack_memory_used@@Base+0x230>
  413654:	stp	x23, x24, [sp, #48]
  413658:	add	x19, x20, #0x9
  41365c:	mov	x1, x21
  413660:	mov	x0, x19
  413664:	bl	402800 <strcmp@plt>
  413668:	cbz	w0, 413734 <_obstack_memory_used@@Base+0x228>
  41366c:	ldrb	w0, [x19]
  413670:	cbnz	w0, 413688 <_obstack_memory_used@@Base+0x17c>
  413674:	add	x23, x20, #0x9
  413678:	cmp	x23, x19
  41367c:	b.ne	4136b4 <_obstack_memory_used@@Base+0x1a8>  // b.any
  413680:	ldrb	w0, [x20, #8]
  413684:	cbz	w0, 4136b4 <_obstack_memory_used@@Base+0x1a8>
  413688:	mov	x0, x19
  41368c:	bl	402430 <strlen@plt>
  413690:	add	x0, x0, #0x1
  413694:	add	x19, x19, x0
  413698:	ldrb	w0, [x19]
  41369c:	cbnz	w0, 41365c <_obstack_memory_used@@Base+0x150>
  4136a0:	ldr	x0, [x20]
  4136a4:	cbz	x0, 41365c <_obstack_memory_used@@Base+0x150>
  4136a8:	add	x19, x0, #0x9
  4136ac:	mov	x20, x0
  4136b0:	b	41365c <_obstack_memory_used@@Base+0x150>
  4136b4:	mov	x0, x21
  4136b8:	bl	402430 <strlen@plt>
  4136bc:	add	x24, x0, #0x1
  4136c0:	sub	x23, x19, x23
  4136c4:	mvn	x0, x23
  4136c8:	cmp	x0, x24
  4136cc:	b.cc	4136f8 <_obstack_memory_used@@Base+0x1ec>  // b.lo, b.ul, b.last
  4136d0:	add	x23, x24, x23
  4136d4:	cmp	x23, #0x76
  4136d8:	b.hi	413714 <_obstack_memory_used@@Base+0x208>  // b.pmore
  4136dc:	mov	x2, x24
  4136e0:	mov	x1, x21
  4136e4:	mov	x0, x19
  4136e8:	bl	4023c0 <memcpy@plt>
  4136ec:	strb	wzr, [x19, x24]
  4136f0:	ldp	x23, x24, [sp, #48]
  4136f4:	b	413744 <_obstack_memory_used@@Base+0x238>
  4136f8:	bl	4029e0 <__errno_location@plt>
  4136fc:	mov	w1, #0xc                   	// #12
  413700:	str	w1, [x0]
  413704:	mov	w0, #0x0                   	// #0
  413708:	ldp	x19, x20, [sp, #16]
  41370c:	ldp	x23, x24, [sp, #48]
  413710:	b	413750 <_obstack_memory_used@@Base+0x244>
  413714:	mov	x0, x21
  413718:	bl	413570 <_obstack_memory_used@@Base+0x64>
  41371c:	str	x0, [x20]
  413720:	cbz	x0, 413764 <_obstack_memory_used@@Base+0x258>
  413724:	strb	wzr, [x0, #8]
  413728:	add	x19, x0, #0x9
  41372c:	ldp	x23, x24, [sp, #48]
  413730:	b	413744 <_obstack_memory_used@@Base+0x238>
  413734:	ldp	x23, x24, [sp, #48]
  413738:	b	413744 <_obstack_memory_used@@Base+0x238>
  41373c:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2af4>
  413740:	add	x19, x19, #0x1f0
  413744:	str	x19, [x22, #48]
  413748:	mov	w0, #0x1                   	// #1
  41374c:	ldp	x19, x20, [sp, #16]
  413750:	ldp	x21, x22, [sp, #32]
  413754:	ldp	x29, x30, [sp], #64
  413758:	ret
  41375c:	mov	w0, #0x1                   	// #1
  413760:	b	413750 <_obstack_memory_used@@Base+0x244>
  413764:	mov	w0, #0x0                   	// #0
  413768:	ldp	x19, x20, [sp, #16]
  41376c:	ldp	x23, x24, [sp, #48]
  413770:	b	413750 <_obstack_memory_used@@Base+0x244>
  413774:	ldp	x19, x20, [sp, #16]
  413778:	b	413750 <_obstack_memory_used@@Base+0x244>
  41377c:	cmp	x0, #0x1
  413780:	b.eq	4137b4 <_obstack_memory_used@@Base+0x2a8>  // b.none
  413784:	stp	x29, x30, [sp, #-32]!
  413788:	mov	x29, sp
  41378c:	str	x19, [sp, #16]
  413790:	mov	x19, x0
  413794:	cbz	x0, 4137a8 <_obstack_memory_used@@Base+0x29c>
  413798:	mov	x0, x19
  41379c:	ldr	x19, [x19]
  4137a0:	bl	402840 <free@plt>
  4137a4:	cbnz	x19, 413798 <_obstack_memory_used@@Base+0x28c>
  4137a8:	ldr	x19, [sp, #16]
  4137ac:	ldp	x29, x30, [sp], #32
  4137b0:	ret
  4137b4:	ret
  4137b8:	stp	x29, x30, [sp, #-48]!
  4137bc:	mov	x29, sp
  4137c0:	stp	x19, x20, [sp, #16]
  4137c4:	str	x21, [sp, #32]
  4137c8:	mov	x19, x0
  4137cc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3af4>
  4137d0:	add	x0, x0, #0x898
  4137d4:	bl	4029f0 <getenv@plt>
  4137d8:	mov	x20, x0
  4137dc:	cbz	x0, 41381c <_obstack_memory_used@@Base+0x310>
  4137e0:	ldrb	w1, [x19, #8]
  4137e4:	mov	w0, #0x0                   	// #0
  4137e8:	cbz	w1, 413800 <_obstack_memory_used@@Base+0x2f4>
  4137ec:	mov	x1, x20
  4137f0:	add	x0, x19, #0x9
  4137f4:	bl	402800 <strcmp@plt>
  4137f8:	cmp	w0, #0x0
  4137fc:	cset	w0, eq  // eq = none
  413800:	mov	x21, #0x1                   	// #1
  413804:	cbz	w0, 41382c <_obstack_memory_used@@Base+0x320>
  413808:	mov	x0, x21
  41380c:	ldp	x19, x20, [sp, #16]
  413810:	ldr	x21, [sp, #32]
  413814:	ldp	x29, x30, [sp], #48
  413818:	ret
  41381c:	ldrb	w0, [x19, #8]
  413820:	cmp	w0, #0x0
  413824:	cset	w0, eq  // eq = none
  413828:	b	413800 <_obstack_memory_used@@Base+0x2f4>
  41382c:	mov	x0, x20
  413830:	bl	413570 <_obstack_memory_used@@Base+0x64>
  413834:	mov	x21, x0
  413838:	cbz	x0, 413808 <_obstack_memory_used@@Base+0x2fc>
  41383c:	ldrb	w1, [x19, #8]
  413840:	add	x0, x19, #0x9
  413844:	cmp	w1, #0x0
  413848:	csel	x0, x0, xzr, ne  // ne = any
  41384c:	bl	413538 <_obstack_memory_used@@Base+0x2c>
  413850:	cbz	w0, 413874 <_obstack_memory_used@@Base+0x368>
  413854:	bl	4029e0 <__errno_location@plt>
  413858:	mov	x19, x0
  41385c:	ldr	w20, [x0]
  413860:	mov	x0, x21
  413864:	bl	41377c <_obstack_memory_used@@Base+0x270>
  413868:	str	w20, [x19]
  41386c:	mov	x21, #0x0                   	// #0
  413870:	b	413808 <_obstack_memory_used@@Base+0x2fc>
  413874:	bl	402610 <tzset@plt>
  413878:	b	413808 <_obstack_memory_used@@Base+0x2fc>
  41387c:	stp	x29, x30, [sp, #-48]!
  413880:	mov	x29, sp
  413884:	stp	x21, x22, [sp, #32]
  413888:	mov	w21, #0x1                   	// #1
  41388c:	cmp	x0, #0x1
  413890:	b.eq	4138d8 <_obstack_memory_used@@Base+0x3cc>  // b.none
  413894:	stp	x19, x20, [sp, #16]
  413898:	mov	x19, x0
  41389c:	bl	4029e0 <__errno_location@plt>
  4138a0:	mov	x20, x0
  4138a4:	ldr	w22, [x0]
  4138a8:	ldrb	w1, [x19, #8]
  4138ac:	add	x0, x19, #0x9
  4138b0:	cmp	w1, #0x0
  4138b4:	csel	x0, x0, xzr, ne  // ne = any
  4138b8:	bl	413538 <_obstack_memory_used@@Base+0x2c>
  4138bc:	cbz	w0, 4138e8 <_obstack_memory_used@@Base+0x3dc>
  4138c0:	ldr	w22, [x20]
  4138c4:	mov	w21, #0x0                   	// #0
  4138c8:	mov	x0, x19
  4138cc:	bl	41377c <_obstack_memory_used@@Base+0x270>
  4138d0:	str	w22, [x20]
  4138d4:	ldp	x19, x20, [sp, #16]
  4138d8:	mov	w0, w21
  4138dc:	ldp	x21, x22, [sp, #32]
  4138e0:	ldp	x29, x30, [sp], #48
  4138e4:	ret
  4138e8:	bl	402610 <tzset@plt>
  4138ec:	mov	w21, #0x1                   	// #1
  4138f0:	b	4138c8 <_obstack_memory_used@@Base+0x3bc>
  4138f4:	stp	x29, x30, [sp, #-48]!
  4138f8:	mov	x29, sp
  4138fc:	stp	x19, x20, [sp, #16]
  413900:	stp	x21, x22, [sp, #32]
  413904:	mov	x22, x1
  413908:	mov	x19, x2
  41390c:	cbz	x0, 413970 <_obstack_memory_used@@Base+0x464>
  413910:	mov	x20, x0
  413914:	bl	4137b8 <_obstack_memory_used@@Base+0x2ac>
  413918:	mov	x21, x0
  41391c:	cbz	x0, 413984 <_obstack_memory_used@@Base+0x478>
  413920:	mov	x1, x19
  413924:	mov	x0, x22
  413928:	bl	4024b0 <localtime_r@plt>
  41392c:	mov	x22, x0
  413930:	cbz	x0, 41398c <_obstack_memory_used@@Base+0x480>
  413934:	mov	x1, x19
  413938:	mov	x0, x20
  41393c:	bl	413614 <_obstack_memory_used@@Base+0x108>
  413940:	and	w20, w0, #0xff
  413944:	mov	x0, x21
  413948:	bl	41387c <_obstack_memory_used@@Base+0x370>
  41394c:	and	w0, w0, #0xff
  413950:	cmp	w20, #0x0
  413954:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  413958:	csel	x19, x19, xzr, ne  // ne = any
  41395c:	mov	x0, x19
  413960:	ldp	x19, x20, [sp, #16]
  413964:	ldp	x21, x22, [sp, #32]
  413968:	ldp	x29, x30, [sp], #48
  41396c:	ret
  413970:	mov	x1, x2
  413974:	mov	x0, x22
  413978:	bl	4026a0 <gmtime_r@plt>
  41397c:	mov	x19, x0
  413980:	b	41395c <_obstack_memory_used@@Base+0x450>
  413984:	mov	x19, x0
  413988:	b	41395c <_obstack_memory_used@@Base+0x450>
  41398c:	mov	x0, x21
  413990:	bl	41387c <_obstack_memory_used@@Base+0x370>
  413994:	mov	x19, x22
  413998:	b	41395c <_obstack_memory_used@@Base+0x450>
  41399c:	stp	x29, x30, [sp, #-112]!
  4139a0:	mov	x29, sp
  4139a4:	stp	x19, x20, [sp, #16]
  4139a8:	mov	x19, x1
  4139ac:	cbz	x0, 413a18 <_obstack_memory_used@@Base+0x50c>
  4139b0:	str	x21, [sp, #32]
  4139b4:	mov	x20, x0
  4139b8:	bl	4137b8 <_obstack_memory_used@@Base+0x2ac>
  4139bc:	mov	x21, x0
  4139c0:	cbz	x0, 413ad0 <_obstack_memory_used@@Base+0x5c4>
  4139c4:	mov	x0, x19
  4139c8:	bl	402750 <mktime@plt>
  4139cc:	str	x0, [sp, #48]
  4139d0:	cmn	x0, #0x1
  4139d4:	b.eq	413a24 <_obstack_memory_used@@Base+0x518>  // b.none
  4139d8:	mov	x1, x19
  4139dc:	mov	x0, x20
  4139e0:	bl	413614 <_obstack_memory_used@@Base+0x108>
  4139e4:	and	w1, w0, #0xff
  4139e8:	cbnz	w1, 4139f4 <_obstack_memory_used@@Base+0x4e8>
  4139ec:	mov	x0, #0xffffffffffffffff    	// #-1
  4139f0:	str	x0, [sp, #48]
  4139f4:	mov	x0, x21
  4139f8:	bl	41387c <_obstack_memory_used@@Base+0x370>
  4139fc:	and	w0, w0, #0xff
  413a00:	cbz	w0, 413ac4 <_obstack_memory_used@@Base+0x5b8>
  413a04:	ldr	x0, [sp, #48]
  413a08:	ldr	x21, [sp, #32]
  413a0c:	ldp	x19, x20, [sp, #16]
  413a10:	ldp	x29, x30, [sp], #112
  413a14:	ret
  413a18:	mov	x0, x1
  413a1c:	bl	402a20 <timegm@plt>
  413a20:	b	413a0c <_obstack_memory_used@@Base+0x500>
  413a24:	add	x1, sp, #0x38
  413a28:	add	x0, sp, #0x30
  413a2c:	bl	4024b0 <localtime_r@plt>
  413a30:	cbz	x0, 4139f4 <_obstack_memory_used@@Base+0x4e8>
  413a34:	ldr	w1, [x19, #32]
  413a38:	ldr	w0, [sp, #88]
  413a3c:	cmp	w1, #0x0
  413a40:	cset	w3, eq  // eq = none
  413a44:	cmp	w0, #0x0
  413a48:	cset	w2, eq  // eq = none
  413a4c:	cmp	w2, w3, uxtb
  413a50:	b.eq	413a60 <_obstack_memory_used@@Base+0x554>  // b.none
  413a54:	cmp	w1, #0x0
  413a58:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  413a5c:	b.ge	4139f4 <_obstack_memory_used@@Base+0x4e8>  // b.tcont
  413a60:	ldr	w0, [x19, #16]
  413a64:	ldr	w1, [sp, #72]
  413a68:	eor	w0, w0, w1
  413a6c:	ldr	w1, [x19, #20]
  413a70:	ldr	w2, [sp, #76]
  413a74:	eor	w1, w1, w2
  413a78:	orr	w0, w0, w1
  413a7c:	ldr	w1, [x19, #8]
  413a80:	ldr	w2, [sp, #64]
  413a84:	eor	w1, w1, w2
  413a88:	ldr	w2, [x19, #12]
  413a8c:	ldr	w3, [sp, #68]
  413a90:	eor	w2, w2, w3
  413a94:	orr	w1, w1, w2
  413a98:	orr	w0, w0, w1
  413a9c:	ldr	w1, [x19]
  413aa0:	ldr	w2, [sp, #56]
  413aa4:	eor	w1, w1, w2
  413aa8:	ldr	w2, [x19, #4]
  413aac:	ldr	w3, [sp, #60]
  413ab0:	eor	w2, w2, w3
  413ab4:	orr	w1, w1, w2
  413ab8:	orr	w0, w0, w1
  413abc:	cbz	w0, 4139d8 <_obstack_memory_used@@Base+0x4cc>
  413ac0:	b	4139f4 <_obstack_memory_used@@Base+0x4e8>
  413ac4:	mov	x0, #0xffffffffffffffff    	// #-1
  413ac8:	ldr	x21, [sp, #32]
  413acc:	b	413a0c <_obstack_memory_used@@Base+0x500>
  413ad0:	mov	x0, #0xffffffffffffffff    	// #-1
  413ad4:	ldr	x21, [sp, #32]
  413ad8:	b	413a0c <_obstack_memory_used@@Base+0x500>
  413adc:	mov	w1, w0
  413ae0:	cmp	w0, #0x26
  413ae4:	b.eq	413b10 <_obstack_memory_used@@Base+0x604>  // b.none
  413ae8:	b.gt	413b04 <_obstack_memory_used@@Base+0x5f8>
  413aec:	mov	w0, #0x0                   	// #0
  413af0:	cmp	w1, #0x10
  413af4:	b.eq	413b00 <_obstack_memory_used@@Base+0x5f4>  // b.none
  413af8:	cmp	w1, #0x16
  413afc:	cset	w0, ne  // ne = any
  413b00:	ret
  413b04:	cmp	w0, #0x5f
  413b08:	cset	w0, ne  // ne = any
  413b0c:	b	413b00 <_obstack_memory_used@@Base+0x5f4>
  413b10:	mov	w0, #0x0                   	// #0
  413b14:	b	413b00 <_obstack_memory_used@@Base+0x5f4>
  413b18:	stp	x29, x30, [sp, #-48]!
  413b1c:	mov	x29, sp
  413b20:	stp	x19, x20, [sp, #16]
  413b24:	str	x21, [sp, #32]
  413b28:	mov	x19, x0
  413b2c:	bl	402550 <__fpending@plt>
  413b30:	mov	x21, x0
  413b34:	ldr	w20, [x19]
  413b38:	and	w20, w20, #0x20
  413b3c:	mov	x0, x19
  413b40:	bl	413c1c <_obstack_memory_used@@Base+0x710>
  413b44:	cbnz	w20, 413b70 <_obstack_memory_used@@Base+0x664>
  413b48:	cbz	w0, 413b60 <_obstack_memory_used@@Base+0x654>
  413b4c:	cbnz	x21, 413b84 <_obstack_memory_used@@Base+0x678>
  413b50:	bl	4029e0 <__errno_location@plt>
  413b54:	ldr	w0, [x0]
  413b58:	cmp	w0, #0x9
  413b5c:	csetm	w0, ne  // ne = any
  413b60:	ldp	x19, x20, [sp, #16]
  413b64:	ldr	x21, [sp, #32]
  413b68:	ldp	x29, x30, [sp], #48
  413b6c:	ret
  413b70:	cbnz	w0, 413b8c <_obstack_memory_used@@Base+0x680>
  413b74:	bl	4029e0 <__errno_location@plt>
  413b78:	str	wzr, [x0]
  413b7c:	mov	w0, #0xffffffff            	// #-1
  413b80:	b	413b60 <_obstack_memory_used@@Base+0x654>
  413b84:	mov	w0, #0xffffffff            	// #-1
  413b88:	b	413b60 <_obstack_memory_used@@Base+0x654>
  413b8c:	mov	w0, #0xffffffff            	// #-1
  413b90:	b	413b60 <_obstack_memory_used@@Base+0x654>
  413b94:	stp	x29, x30, [sp, #-16]!
  413b98:	mov	x29, sp
  413b9c:	bl	40b80c <__fxstatat@plt+0x8dbc>
  413ba0:	cbz	x0, 413bac <_obstack_memory_used@@Base+0x6a0>
  413ba4:	ldp	x29, x30, [sp], #16
  413ba8:	ret
  413bac:	bl	412584 <__fxstatat@plt+0xfb34>
  413bb0:	ldrb	w3, [x0]
  413bb4:	cbz	w3, 413bd8 <_obstack_memory_used@@Base+0x6cc>
  413bb8:	mov	x2, #0x0                   	// #0
  413bbc:	ror	x2, x2, #55
  413bc0:	add	x2, x2, w3, uxtb
  413bc4:	ldrb	w3, [x0, #1]!
  413bc8:	cbnz	w3, 413bbc <_obstack_memory_used@@Base+0x6b0>
  413bcc:	udiv	x0, x2, x1
  413bd0:	msub	x0, x0, x1, x2
  413bd4:	ret
  413bd8:	mov	x2, #0x0                   	// #0
  413bdc:	b	413bcc <_obstack_memory_used@@Base+0x6c0>
  413be0:	stp	x29, x30, [sp, #-16]!
  413be4:	mov	x29, sp
  413be8:	mov	w0, #0xe                   	// #14
  413bec:	bl	4025e0 <nl_langinfo@plt>
  413bf0:	cbz	x0, 413c10 <_obstack_memory_used@@Base+0x704>
  413bf4:	ldrb	w2, [x0]
  413bf8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6af4>
  413bfc:	add	x1, x1, #0x870
  413c00:	cmp	w2, #0x0
  413c04:	csel	x0, x1, x0, eq  // eq = none
  413c08:	ldp	x29, x30, [sp], #16
  413c0c:	ret
  413c10:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6af4>
  413c14:	add	x0, x0, #0x870
  413c18:	b	413c08 <_obstack_memory_used@@Base+0x6fc>
  413c1c:	stp	x29, x30, [sp, #-48]!
  413c20:	mov	x29, sp
  413c24:	stp	x19, x20, [sp, #16]
  413c28:	mov	x19, x0
  413c2c:	bl	402590 <fileno@plt>
  413c30:	tbnz	w0, #31, 413c8c <_obstack_memory_used@@Base+0x780>
  413c34:	mov	x0, x19
  413c38:	bl	4029a0 <__freading@plt>
  413c3c:	cbz	w0, 413c5c <_obstack_memory_used@@Base+0x750>
  413c40:	mov	x0, x19
  413c44:	bl	402590 <fileno@plt>
  413c48:	mov	w2, #0x1                   	// #1
  413c4c:	mov	x1, #0x0                   	// #0
  413c50:	bl	402540 <lseek@plt>
  413c54:	cmn	x0, #0x1
  413c58:	b.eq	413ca8 <_obstack_memory_used@@Base+0x79c>  // b.none
  413c5c:	mov	x0, x19
  413c60:	bl	413cbc <_obstack_memory_used@@Base+0x7b0>
  413c64:	cbz	w0, 413ca8 <_obstack_memory_used@@Base+0x79c>
  413c68:	str	x21, [sp, #32]
  413c6c:	bl	4029e0 <__errno_location@plt>
  413c70:	mov	x20, x0
  413c74:	ldr	w21, [x0]
  413c78:	mov	x0, x19
  413c7c:	bl	4025d0 <fclose@plt>
  413c80:	cbnz	w21, 413c98 <_obstack_memory_used@@Base+0x78c>
  413c84:	ldr	x21, [sp, #32]
  413c88:	b	413cb0 <_obstack_memory_used@@Base+0x7a4>
  413c8c:	mov	x0, x19
  413c90:	bl	4025d0 <fclose@plt>
  413c94:	b	413cb0 <_obstack_memory_used@@Base+0x7a4>
  413c98:	str	w21, [x20]
  413c9c:	mov	w0, #0xffffffff            	// #-1
  413ca0:	ldr	x21, [sp, #32]
  413ca4:	b	413cb0 <_obstack_memory_used@@Base+0x7a4>
  413ca8:	mov	x0, x19
  413cac:	bl	4025d0 <fclose@plt>
  413cb0:	ldp	x19, x20, [sp, #16]
  413cb4:	ldp	x29, x30, [sp], #48
  413cb8:	ret
  413cbc:	stp	x29, x30, [sp, #-32]!
  413cc0:	mov	x29, sp
  413cc4:	str	x19, [sp, #16]
  413cc8:	mov	x19, x0
  413ccc:	cbz	x0, 413cd8 <_obstack_memory_used@@Base+0x7cc>
  413cd0:	bl	4029a0 <__freading@plt>
  413cd4:	cbnz	w0, 413cec <_obstack_memory_used@@Base+0x7e0>
  413cd8:	mov	x0, x19
  413cdc:	bl	4028c0 <fflush@plt>
  413ce0:	ldr	x19, [sp, #16]
  413ce4:	ldp	x29, x30, [sp], #32
  413ce8:	ret
  413cec:	ldr	w0, [x19]
  413cf0:	tbnz	w0, #8, 413d00 <_obstack_memory_used@@Base+0x7f4>
  413cf4:	mov	x0, x19
  413cf8:	bl	4028c0 <fflush@plt>
  413cfc:	b	413ce0 <_obstack_memory_used@@Base+0x7d4>
  413d00:	mov	w2, #0x1                   	// #1
  413d04:	mov	x1, #0x0                   	// #0
  413d08:	mov	x0, x19
  413d0c:	bl	413d14 <_obstack_memory_used@@Base+0x808>
  413d10:	b	413cf4 <_obstack_memory_used@@Base+0x7e8>
  413d14:	stp	x29, x30, [sp, #-48]!
  413d18:	mov	x29, sp
  413d1c:	stp	x19, x20, [sp, #16]
  413d20:	str	x21, [sp, #32]
  413d24:	mov	x19, x0
  413d28:	mov	x20, x1
  413d2c:	mov	w21, w2
  413d30:	ldr	x1, [x0, #16]
  413d34:	ldr	x0, [x0, #8]
  413d38:	cmp	x1, x0
  413d3c:	b.eq	413d60 <_obstack_memory_used@@Base+0x854>  // b.none
  413d40:	mov	w2, w21
  413d44:	mov	x1, x20
  413d48:	mov	x0, x19
  413d4c:	bl	402830 <fseeko@plt>
  413d50:	ldp	x19, x20, [sp, #16]
  413d54:	ldr	x21, [sp, #32]
  413d58:	ldp	x29, x30, [sp], #48
  413d5c:	ret
  413d60:	ldr	x1, [x19, #40]
  413d64:	ldr	x0, [x19, #32]
  413d68:	cmp	x1, x0
  413d6c:	b.ne	413d40 <_obstack_memory_used@@Base+0x834>  // b.any
  413d70:	ldr	x0, [x19, #72]
  413d74:	cbnz	x0, 413d40 <_obstack_memory_used@@Base+0x834>
  413d78:	mov	x0, x19
  413d7c:	bl	402590 <fileno@plt>
  413d80:	mov	w2, w21
  413d84:	mov	x1, x20
  413d88:	bl	402540 <lseek@plt>
  413d8c:	cmn	x0, #0x1
  413d90:	b.eq	413dac <_obstack_memory_used@@Base+0x8a0>  // b.none
  413d94:	ldr	w1, [x19]
  413d98:	and	w1, w1, #0xffffffef
  413d9c:	str	w1, [x19]
  413da0:	str	x0, [x19, #144]
  413da4:	mov	w0, #0x0                   	// #0
  413da8:	b	413d50 <_obstack_memory_used@@Base+0x844>
  413dac:	mov	w0, #0xffffffff            	// #-1
  413db0:	b	413d50 <_obstack_memory_used@@Base+0x844>
  413db4:	stp	x29, x30, [sp, #-32]!
  413db8:	mov	x29, sp
  413dbc:	str	q0, [sp, #16]
  413dc0:	ldr	x2, [sp, #16]
  413dc4:	ldr	x0, [sp, #24]
  413dc8:	str	q1, [sp, #16]
  413dcc:	ldr	x7, [sp, #16]
  413dd0:	ldr	x1, [sp, #24]
  413dd4:	mrs	x12, fpcr
  413dd8:	ubfx	x3, x0, #0, #48
  413ddc:	ubfx	x6, x0, #48, #15
  413de0:	lsr	x0, x0, #63
  413de4:	and	w9, w0, #0xff
  413de8:	cbz	w6, 413e9c <_obstack_memory_used@@Base+0x990>
  413dec:	mov	x10, x3
  413df0:	mov	w5, #0x7fff                	// #32767
  413df4:	cmp	w6, w5
  413df8:	b.eq	413f04 <_obstack_memory_used@@Base+0x9f8>  // b.none
  413dfc:	extr	x3, x3, x2, #61
  413e00:	orr	x10, x3, #0x8000000000000
  413e04:	lsl	x13, x2, #3
  413e08:	and	x6, x6, #0xffff
  413e0c:	sub	x6, x6, #0x3, lsl #12
  413e10:	sub	x6, x6, #0xfff
  413e14:	mov	x14, #0x0                   	// #0
  413e18:	mov	w3, #0x0                   	// #0
  413e1c:	ubfx	x8, x1, #0, #48
  413e20:	mov	x4, x8
  413e24:	ubfx	x11, x1, #48, #15
  413e28:	lsr	x2, x1, #63
  413e2c:	and	w1, w2, #0xff
  413e30:	cbz	w11, 413f4c <_obstack_memory_used@@Base+0xa40>
  413e34:	mov	w15, #0x7fff                	// #32767
  413e38:	cmp	w11, w15
  413e3c:	b.eq	413fac <_obstack_memory_used@@Base+0xaa0>  // b.none
  413e40:	extr	x4, x8, x7, #61
  413e44:	orr	x4, x4, #0x8000000000000
  413e48:	lsl	x5, x7, #3
  413e4c:	and	x11, x11, #0xffff
  413e50:	sub	x11, x11, #0x3, lsl #12
  413e54:	sub	x11, x11, #0xfff
  413e58:	eor	w9, w9, w1
  413e5c:	and	x9, x9, #0xff
  413e60:	sub	x6, x6, x11
  413e64:	lsl	x1, x14, #2
  413e68:	mov	x7, #0x0                   	// #0
  413e6c:	cmp	x1, #0x7
  413e70:	b.le	414004 <_obstack_memory_used@@Base+0xaf8>
  413e74:	cmp	x1, #0xe
  413e78:	b.gt	414370 <_obstack_memory_used@@Base+0xe64>
  413e7c:	cmp	x1, #0xb
  413e80:	b.gt	414394 <_obstack_memory_used@@Base+0xe88>
  413e84:	cmp	x1, #0x9
  413e88:	b.gt	4140d0 <_obstack_memory_used@@Base+0xbc4>
  413e8c:	mov	x4, #0x0                   	// #0
  413e90:	mov	x5, #0x0                   	// #0
  413e94:	mov	x6, #0x7fff                	// #32767
  413e98:	b	414600 <_obstack_memory_used@@Base+0x10f4>
  413e9c:	orr	x13, x3, x2
  413ea0:	cbz	x13, 413f24 <_obstack_memory_used@@Base+0xa18>
  413ea4:	cbz	x3, 413ee0 <_obstack_memory_used@@Base+0x9d4>
  413ea8:	clz	x6, x3
  413eac:	sub	x10, x6, #0xf
  413eb0:	add	w13, w10, #0x3
  413eb4:	lsl	x3, x3, x13
  413eb8:	mov	w4, #0x3d                  	// #61
  413ebc:	sub	w10, w4, w10
  413ec0:	lsr	x10, x2, x10
  413ec4:	orr	x10, x10, x3
  413ec8:	lsl	x13, x2, x13
  413ecc:	mov	x2, #0xffffffffffffc011    	// #-16367
  413ed0:	sub	x6, x2, x6
  413ed4:	mov	x14, #0x0                   	// #0
  413ed8:	mov	w3, #0x0                   	// #0
  413edc:	b	413e1c <_obstack_memory_used@@Base+0x910>
  413ee0:	clz	x10, x2
  413ee4:	add	x6, x10, #0x40
  413ee8:	add	x10, x10, #0x31
  413eec:	cmp	x10, #0x3c
  413ef0:	b.le	413eb0 <_obstack_memory_used@@Base+0x9a4>
  413ef4:	sub	w10, w10, #0x3d
  413ef8:	mov	x13, x3
  413efc:	lsl	x10, x2, x10
  413f00:	b	413ecc <_obstack_memory_used@@Base+0x9c0>
  413f04:	orr	x13, x3, x2
  413f08:	cbz	x13, 413f38 <_obstack_memory_used@@Base+0xa2c>
  413f0c:	lsr	x3, x3, #47
  413f10:	eor	w3, w3, #0x1
  413f14:	mov	x13, x2
  413f18:	mov	x6, #0x7fff                	// #32767
  413f1c:	mov	x14, #0x3                   	// #3
  413f20:	b	413e1c <_obstack_memory_used@@Base+0x910>
  413f24:	mov	x10, x13
  413f28:	mov	x6, #0x0                   	// #0
  413f2c:	mov	x14, #0x1                   	// #1
  413f30:	mov	w3, #0x0                   	// #0
  413f34:	b	413e1c <_obstack_memory_used@@Base+0x910>
  413f38:	mov	x10, x13
  413f3c:	mov	x6, #0x7fff                	// #32767
  413f40:	mov	x14, #0x2                   	// #2
  413f44:	mov	w3, #0x0                   	// #0
  413f48:	b	413e1c <_obstack_memory_used@@Base+0x910>
  413f4c:	orr	x5, x8, x7
  413f50:	cbz	x5, 413fcc <_obstack_memory_used@@Base+0xac0>
  413f54:	cbz	x8, 413f88 <_obstack_memory_used@@Base+0xa7c>
  413f58:	clz	x16, x8
  413f5c:	sub	x4, x16, #0xf
  413f60:	add	w5, w4, #0x3
  413f64:	lsl	x8, x8, x5
  413f68:	mov	w15, #0x3d                  	// #61
  413f6c:	sub	w4, w15, w4
  413f70:	lsr	x4, x7, x4
  413f74:	orr	x4, x4, x8
  413f78:	lsl	x5, x7, x5
  413f7c:	mov	x11, #0xffffffffffffc011    	// #-16367
  413f80:	sub	x11, x11, x16
  413f84:	b	413e58 <_obstack_memory_used@@Base+0x94c>
  413f88:	clz	x4, x7
  413f8c:	add	x16, x4, #0x40
  413f90:	add	x4, x4, #0x31
  413f94:	cmp	x4, #0x3c
  413f98:	b.le	413f60 <_obstack_memory_used@@Base+0xa54>
  413f9c:	sub	w4, w4, #0x3d
  413fa0:	mov	x5, x8
  413fa4:	lsl	x4, x7, x4
  413fa8:	b	413f7c <_obstack_memory_used@@Base+0xa70>
  413fac:	orr	x5, x8, x7
  413fb0:	cbz	x5, 413ff4 <_obstack_memory_used@@Base+0xae8>
  413fb4:	mov	x5, x7
  413fb8:	mov	x11, #0x7fff                	// #32767
  413fbc:	mov	x7, #0x3                   	// #3
  413fc0:	tst	x8, #0x800000000000
  413fc4:	csinc	w3, w3, wzr, ne  // ne = any
  413fc8:	b	413fd8 <_obstack_memory_used@@Base+0xacc>
  413fcc:	mov	x4, x5
  413fd0:	mov	x11, #0x0                   	// #0
  413fd4:	mov	x7, #0x1                   	// #1
  413fd8:	eor	w9, w9, w1
  413fdc:	and	x9, x9, #0xff
  413fe0:	sub	x6, x6, x11
  413fe4:	orr	x1, x7, x14, lsl #2
  413fe8:	cmp	x1, #0x7
  413fec:	b.ne	413e6c <_obstack_memory_used@@Base+0x960>  // b.any
  413ff0:	b	41404c <_obstack_memory_used@@Base+0xb40>
  413ff4:	mov	x4, x5
  413ff8:	mov	x11, #0x7fff                	// #32767
  413ffc:	mov	x7, #0x2                   	// #2
  414000:	b	413fd8 <_obstack_memory_used@@Base+0xacc>
  414004:	cmp	x1, #0x1
  414008:	b.eq	41438c <_obstack_memory_used@@Base+0xe80>  // b.none
  41400c:	b.le	4140ec <_obstack_memory_used@@Base+0xbe0>
  414010:	cmp	x1, #0x4
  414014:	b.eq	4145e4 <_obstack_memory_used@@Base+0x10d8>  // b.none
  414018:	b.le	414044 <_obstack_memory_used@@Base+0xb38>
  41401c:	cmp	x1, #0x5
  414020:	b.ne	4140c0 <_obstack_memory_used@@Base+0xbb4>  // b.any
  414024:	mov	x4, #0xffffffffffff        	// #281474976710655
  414028:	mov	x5, #0xffffffffffffffff    	// #-1
  41402c:	mov	x2, #0x0                   	// #0
  414030:	mov	w3, #0x1                   	// #1
  414034:	orr	x4, x4, #0x800000000000
  414038:	mov	x9, x2
  41403c:	mov	x6, #0x7fff                	// #32767
  414040:	b	414600 <_obstack_memory_used@@Base+0x10f4>
  414044:	cmp	x1, #0x2
  414048:	b.eq	4145f4 <_obstack_memory_used@@Base+0x10e8>  // b.none
  41404c:	cmp	x7, #0x1
  414050:	b.eq	414628 <_obstack_memory_used@@Base+0x111c>  // b.none
  414054:	b.gt	4143a8 <_obstack_memory_used@@Base+0xe9c>
  414058:	mov	x9, x2
  41405c:	cbnz	x7, 414600 <_obstack_memory_used@@Base+0x10f4>
  414060:	add	x0, x6, #0x3, lsl #12
  414064:	add	x0, x0, #0xfff
  414068:	cmp	x0, #0x0
  41406c:	b.le	414474 <_obstack_memory_used@@Base+0xf68>
  414070:	tst	x5, #0x7
  414074:	b.eq	414094 <_obstack_memory_used@@Base+0xb88>  // b.none
  414078:	orr	w3, w3, #0x10
  41407c:	and	x1, x12, #0xc00000
  414080:	cmp	x1, #0x400, lsl #12
  414084:	b.eq	4143d0 <_obstack_memory_used@@Base+0xec4>  // b.none
  414088:	cmp	x1, #0x800, lsl #12
  41408c:	b.eq	4143e0 <_obstack_memory_used@@Base+0xed4>  // b.none
  414090:	cbz	x1, 4143b8 <_obstack_memory_used@@Base+0xeac>
  414094:	tbz	x4, #52, 4140a0 <_obstack_memory_used@@Base+0xb94>
  414098:	and	x4, x4, #0xffefffffffffffff
  41409c:	add	x0, x6, #0x4, lsl #12
  4140a0:	mov	x1, #0x7ffe                	// #32766
  4140a4:	cmp	x0, x1
  4140a8:	b.gt	4143f0 <_obstack_memory_used@@Base+0xee4>
  4140ac:	extr	x5, x4, x5, #3
  4140b0:	lsr	x4, x4, #3
  4140b4:	mov	x9, x2
  4140b8:	mov	x6, x0
  4140bc:	b	414600 <_obstack_memory_used@@Base+0x10f4>
  4140c0:	mov	x4, #0x0                   	// #0
  4140c4:	mov	x5, #0x0                   	// #0
  4140c8:	mov	x6, #0x0                   	// #0
  4140cc:	b	414600 <_obstack_memory_used@@Base+0x10f4>
  4140d0:	cmp	x1, #0xa
  4140d4:	b.ne	41404c <_obstack_memory_used@@Base+0xb40>  // b.any
  4140d8:	mov	x4, #0xffffffffffff        	// #281474976710655
  4140dc:	mov	x5, #0xffffffffffffffff    	// #-1
  4140e0:	mov	x2, #0x0                   	// #0
  4140e4:	mov	w3, #0x1                   	// #1
  4140e8:	b	414034 <_obstack_memory_used@@Base+0xb28>
  4140ec:	cmp	x10, x4
  4140f0:	b.hi	4140fc <_obstack_memory_used@@Base+0xbf0>  // b.pmore
  4140f4:	ccmp	x13, x5, #0x0, eq  // eq = none
  4140f8:	b.cc	414320 <_obstack_memory_used@@Base+0xe14>  // b.lo, b.ul, b.last
  4140fc:	lsr	x2, x10, #1
  414100:	extr	x0, x10, x13, #1
  414104:	lsl	x13, x13, #63
  414108:	extr	x7, x4, x5, #52
  41410c:	lsl	x8, x5, #12
  414110:	ubfx	x10, x4, #20, #32
  414114:	and	x11, x7, #0xffffffff
  414118:	udiv	x4, x2, x10
  41411c:	mul	x5, x11, x4
  414120:	msub	x2, x4, x10, x2
  414124:	extr	x1, x2, x0, #32
  414128:	cmp	x5, x1
  41412c:	b.ls	414144 <_obstack_memory_used@@Base+0xc38>  // b.plast
  414130:	add	x1, x1, x7
  414134:	cmp	x5, x1
  414138:	ccmp	x7, x1, #0x2, hi  // hi = pmore
  41413c:	b.ls	414334 <_obstack_memory_used@@Base+0xe28>  // b.plast
  414140:	sub	x4, x4, #0x1
  414144:	sub	x1, x1, x5
  414148:	udiv	x15, x1, x10
  41414c:	mul	x2, x11, x15
  414150:	msub	x1, x15, x10, x1
  414154:	bfi	x0, x1, #32, #32
  414158:	cmp	x2, x0
  41415c:	b.ls	414174 <_obstack_memory_used@@Base+0xc68>  // b.plast
  414160:	add	x0, x0, x7
  414164:	cmp	x2, x0
  414168:	ccmp	x7, x0, #0x2, hi  // hi = pmore
  41416c:	b.ls	414340 <_obstack_memory_used@@Base+0xe34>  // b.plast
  414170:	sub	x15, x15, #0x1
  414174:	sub	x0, x0, x2
  414178:	orr	x15, x15, x4, lsl #32
  41417c:	lsr	x1, x15, #32
  414180:	lsr	x14, x8, #32
  414184:	and	x2, x15, #0xffffffff
  414188:	and	x16, x8, #0xffffffff
  41418c:	mul	x4, x2, x16
  414190:	mul	x17, x1, x16
  414194:	mul	x1, x1, x14
  414198:	madd	x2, x14, x2, x17
  41419c:	add	x2, x2, x4, lsr #32
  4141a0:	mov	x5, #0x100000000           	// #4294967296
  4141a4:	add	x5, x1, x5
  4141a8:	cmp	x17, x2
  4141ac:	csel	x1, x5, x1, hi  // hi = pmore
  4141b0:	add	x1, x1, x2, lsr #32
  4141b4:	and	x4, x4, #0xffffffff
  4141b8:	add	x2, x4, x2, lsl #32
  4141bc:	cmp	x0, x1
  4141c0:	b.cc	4141d0 <_obstack_memory_used@@Base+0xcc4>  // b.lo, b.ul, b.last
  4141c4:	mov	x4, x15
  4141c8:	ccmp	x13, x2, #0x2, eq  // eq = none
  4141cc:	b.cs	414208 <_obstack_memory_used@@Base+0xcfc>  // b.hs, b.nlast
  4141d0:	sub	x4, x15, #0x1
  4141d4:	adds	x13, x13, x8
  4141d8:	adc	x0, x0, x7
  4141dc:	cmp	x7, x0
  4141e0:	b.cc	4141ec <_obstack_memory_used@@Base+0xce0>  // b.lo, b.ul, b.last
  4141e4:	ccmp	x8, x13, #0x2, eq  // eq = none
  4141e8:	b.hi	414208 <_obstack_memory_used@@Base+0xcfc>  // b.pmore
  4141ec:	cmp	x1, x0
  4141f0:	b.hi	4141fc <_obstack_memory_used@@Base+0xcf0>  // b.pmore
  4141f4:	ccmp	x2, x13, #0x0, eq  // eq = none
  4141f8:	b.ls	414208 <_obstack_memory_used@@Base+0xcfc>  // b.plast
  4141fc:	sub	x4, x15, #0x2
  414200:	adds	x13, x13, x8
  414204:	adc	x0, x0, x7
  414208:	sub	x2, x13, x2
  41420c:	cmp	x13, x2
  414210:	sbc	x0, x0, x1
  414214:	mov	x5, #0xffffffffffffffff    	// #-1
  414218:	cmp	x7, x0
  41421c:	b.eq	414318 <_obstack_memory_used@@Base+0xe0c>  // b.none
  414220:	udiv	x1, x0, x10
  414224:	mul	x5, x11, x1
  414228:	msub	x0, x1, x10, x0
  41422c:	extr	x0, x0, x2, #32
  414230:	cmp	x5, x0
  414234:	b.ls	41424c <_obstack_memory_used@@Base+0xd40>  // b.plast
  414238:	add	x0, x0, x7
  41423c:	cmp	x5, x0
  414240:	ccmp	x7, x0, #0x2, hi  // hi = pmore
  414244:	b.ls	41434c <_obstack_memory_used@@Base+0xe40>  // b.plast
  414248:	sub	x1, x1, #0x1
  41424c:	sub	x0, x0, x5
  414250:	udiv	x5, x0, x10
  414254:	mul	x11, x11, x5
  414258:	msub	x0, x5, x10, x0
  41425c:	bfi	x2, x0, #32, #32
  414260:	mov	x0, x2
  414264:	cmp	x11, x2
  414268:	b.ls	414280 <_obstack_memory_used@@Base+0xd74>  // b.plast
  41426c:	add	x0, x2, x7
  414270:	cmp	x11, x0
  414274:	ccmp	x7, x0, #0x2, hi  // hi = pmore
  414278:	b.ls	414358 <_obstack_memory_used@@Base+0xe4c>  // b.plast
  41427c:	sub	x5, x5, #0x1
  414280:	sub	x0, x0, x11
  414284:	orr	x2, x5, x1, lsl #32
  414288:	lsr	x1, x2, #32
  41428c:	and	x10, x2, #0xffffffff
  414290:	mul	x5, x16, x10
  414294:	mul	x16, x1, x16
  414298:	mul	x1, x14, x1
  41429c:	madd	x14, x14, x10, x16
  4142a0:	add	x14, x14, x5, lsr #32
  4142a4:	mov	x10, #0x100000000           	// #4294967296
  4142a8:	add	x10, x1, x10
  4142ac:	cmp	x16, x14
  4142b0:	csel	x1, x10, x1, hi  // hi = pmore
  4142b4:	add	x1, x1, x14, lsr #32
  4142b8:	and	x5, x5, #0xffffffff
  4142bc:	add	x14, x5, x14, lsl #32
  4142c0:	cmp	x0, x1
  4142c4:	b.cc	4142d4 <_obstack_memory_used@@Base+0xdc8>  // b.lo, b.ul, b.last
  4142c8:	cmp	x14, #0x0
  4142cc:	ccmp	x0, x1, #0x0, ne  // ne = any
  4142d0:	b.ne	414364 <_obstack_memory_used@@Base+0xe58>  // b.any
  4142d4:	sub	x5, x2, #0x1
  4142d8:	adds	x0, x0, x7
  4142dc:	b.cs	414308 <_obstack_memory_used@@Base+0xdfc>  // b.hs, b.nlast
  4142e0:	cmp	x0, x1
  4142e4:	b.cc	4142f0 <_obstack_memory_used@@Base+0xde4>  // b.lo, b.ul, b.last
  4142e8:	ccmp	x8, x14, #0x2, eq  // eq = none
  4142ec:	b.cs	414308 <_obstack_memory_used@@Base+0xdfc>  // b.hs, b.nlast
  4142f0:	sub	x5, x2, #0x2
  4142f4:	lsl	x2, x8, #1
  4142f8:	cmp	x8, x2
  4142fc:	cinc	x7, x7, hi  // hi = pmore
  414300:	add	x0, x0, x7
  414304:	mov	x8, x2
  414308:	cmp	x0, x1
  41430c:	orr	x0, x5, #0x1
  414310:	ccmp	x8, x14, #0x0, eq  // eq = none
  414314:	csel	x5, x0, x5, ne  // ne = any
  414318:	mov	x2, x9
  41431c:	b	414060 <_obstack_memory_used@@Base+0xb54>
  414320:	sub	x6, x6, #0x1
  414324:	mov	x0, x13
  414328:	mov	x2, x10
  41432c:	mov	x13, #0x0                   	// #0
  414330:	b	414108 <_obstack_memory_used@@Base+0xbfc>
  414334:	sub	x4, x4, #0x2
  414338:	add	x1, x1, x7
  41433c:	b	414144 <_obstack_memory_used@@Base+0xc38>
  414340:	sub	x15, x15, #0x2
  414344:	add	x0, x0, x7
  414348:	b	414174 <_obstack_memory_used@@Base+0xc68>
  41434c:	sub	x1, x1, #0x2
  414350:	add	x0, x0, x7
  414354:	b	41424c <_obstack_memory_used@@Base+0xd40>
  414358:	sub	x5, x5, #0x2
  41435c:	add	x0, x0, x7
  414360:	b	414280 <_obstack_memory_used@@Base+0xd74>
  414364:	mov	x5, x2
  414368:	mov	x8, #0x0                   	// #0
  41436c:	b	414308 <_obstack_memory_used@@Base+0xdfc>
  414370:	tbz	x10, #47, 414648 <_obstack_memory_used@@Base+0x113c>
  414374:	ands	x1, x4, #0x800000000000
  414378:	csel	x4, x10, x4, ne  // ne = any
  41437c:	cmp	x1, #0x0
  414380:	csel	x5, x13, x5, ne  // ne = any
  414384:	csel	x2, x0, x2, ne  // ne = any
  414388:	b	414034 <_obstack_memory_used@@Base+0xb28>
  41438c:	orr	w3, w3, #0x2
  414390:	b	413e8c <_obstack_memory_used@@Base+0x980>
  414394:	mov	x4, x10
  414398:	mov	x5, x13
  41439c:	mov	x2, x0
  4143a0:	mov	x7, x14
  4143a4:	b	41404c <_obstack_memory_used@@Base+0xb40>
  4143a8:	cmp	x7, #0x2
  4143ac:	b.ne	414034 <_obstack_memory_used@@Base+0xb28>  // b.any
  4143b0:	mov	x9, x2
  4143b4:	b	413e8c <_obstack_memory_used@@Base+0x980>
  4143b8:	and	x1, x5, #0xf
  4143bc:	cmp	x1, #0x4
  4143c0:	b.eq	414094 <_obstack_memory_used@@Base+0xb88>  // b.none
  4143c4:	adds	x5, x5, #0x4
  4143c8:	cinc	x4, x4, cs  // cs = hs, nlast
  4143cc:	b	414094 <_obstack_memory_used@@Base+0xb88>
  4143d0:	cbnz	x2, 414094 <_obstack_memory_used@@Base+0xb88>
  4143d4:	adds	x5, x5, #0x8
  4143d8:	cinc	x4, x4, cs  // cs = hs, nlast
  4143dc:	b	414094 <_obstack_memory_used@@Base+0xb88>
  4143e0:	cbz	x2, 414094 <_obstack_memory_used@@Base+0xb88>
  4143e4:	adds	x5, x5, #0x8
  4143e8:	cinc	x4, x4, cs  // cs = hs, nlast
  4143ec:	b	414094 <_obstack_memory_used@@Base+0xb88>
  4143f0:	and	x5, x12, #0xc00000
  4143f4:	cmp	x5, #0x400, lsl #12
  4143f8:	b.eq	414444 <_obstack_memory_used@@Base+0xf38>  // b.none
  4143fc:	cmp	x5, #0x800, lsl #12
  414400:	b.eq	41445c <_obstack_memory_used@@Base+0xf50>  // b.none
  414404:	mov	x6, #0x7fff                	// #32767
  414408:	cbz	x5, 414414 <_obstack_memory_used@@Base+0xf08>
  41440c:	mov	x5, #0xffffffffffffffff    	// #-1
  414410:	mov	x6, #0x7ffe                	// #32766
  414414:	mov	w0, #0x14                  	// #20
  414418:	orr	w3, w3, w0
  41441c:	mov	x4, x5
  414420:	mov	x1, #0x0                   	// #0
  414424:	mov	x0, x5
  414428:	bfxil	x1, x4, #0, #48
  41442c:	bfi	x1, x6, #48, #15
  414430:	bfi	x1, x2, #63, #1
  414434:	stp	x0, x1, [sp, #16]
  414438:	mov	w0, w3
  41443c:	bl	41523c <_obstack_memory_used@@Base+0x1d30>
  414440:	b	41461c <_obstack_memory_used@@Base+0x1110>
  414444:	cmp	x2, #0x0
  414448:	csetm	x5, ne  // ne = any
  41444c:	mov	x6, #0x7ffe                	// #32766
  414450:	mov	x0, #0x7fff                	// #32767
  414454:	csel	x6, x6, x0, ne  // ne = any
  414458:	b	414414 <_obstack_memory_used@@Base+0xf08>
  41445c:	cmp	x2, #0x0
  414460:	csetm	x5, eq  // eq = none
  414464:	mov	x6, #0x7ffe                	// #32766
  414468:	mov	x0, #0x7fff                	// #32767
  41446c:	csel	x6, x6, x0, eq  // eq = none
  414470:	b	414414 <_obstack_memory_used@@Base+0xf08>
  414474:	mov	x1, #0x1                   	// #1
  414478:	sub	x0, x1, x0
  41447c:	cmp	x0, #0x74
  414480:	b.gt	414584 <_obstack_memory_used@@Base+0x1078>
  414484:	cmp	x0, #0x3f
  414488:	b.gt	4144cc <_obstack_memory_used@@Base+0xfc0>
  41448c:	mov	w6, #0x40                  	// #64
  414490:	sub	w6, w6, w0
  414494:	lsl	x1, x4, x6
  414498:	lsr	x7, x5, x0
  41449c:	orr	x1, x1, x7
  4144a0:	lsl	x5, x5, x6
  4144a4:	cmp	x5, #0x0
  4144a8:	cset	x5, ne  // ne = any
  4144ac:	orr	x1, x1, x5
  4144b0:	lsr	x0, x4, x0
  4144b4:	tst	x1, #0x7
  4144b8:	b.ne	414514 <_obstack_memory_used@@Base+0x1008>  // b.any
  4144bc:	tbnz	x0, #51, 414534 <_obstack_memory_used@@Base+0x1028>
  4144c0:	extr	x5, x0, x1, #3
  4144c4:	lsr	x4, x0, #3
  4144c8:	b	414504 <_obstack_memory_used@@Base+0xff8>
  4144cc:	sub	w6, w0, #0x40
  4144d0:	lsr	x6, x4, x6
  4144d4:	mov	w1, #0x80                  	// #128
  4144d8:	sub	w1, w1, w0
  4144dc:	lsl	x4, x4, x1
  4144e0:	cmp	x0, #0x40
  4144e4:	csel	x0, x4, xzr, ne  // ne = any
  4144e8:	orr	x5, x0, x5
  4144ec:	cmp	x5, #0x0
  4144f0:	cset	x1, ne  // ne = any
  4144f4:	orr	x1, x6, x1
  4144f8:	lsr	x5, x6, #3
  4144fc:	ands	x4, x1, #0x7
  414500:	b.ne	414510 <_obstack_memory_used@@Base+0x1004>  // b.any
  414504:	tbz	w12, #11, 41463c <_obstack_memory_used@@Base+0x1130>
  414508:	mov	x6, #0x0                   	// #0
  41450c:	b	414544 <_obstack_memory_used@@Base+0x1038>
  414510:	mov	x0, #0x0                   	// #0
  414514:	orr	w3, w3, #0x10
  414518:	and	x12, x12, #0xc00000
  41451c:	cmp	x12, #0x400, lsl #12
  414520:	b.eq	414564 <_obstack_memory_used@@Base+0x1058>  // b.none
  414524:	cmp	x12, #0x800, lsl #12
  414528:	b.eq	414574 <_obstack_memory_used@@Base+0x1068>  // b.none
  41452c:	cbz	x12, 41454c <_obstack_memory_used@@Base+0x1040>
  414530:	tbz	x0, #51, 414658 <_obstack_memory_used@@Base+0x114c>
  414534:	orr	w3, w3, #0x10
  414538:	mov	x4, #0x0                   	// #0
  41453c:	mov	x5, #0x0                   	// #0
  414540:	mov	x6, #0x1                   	// #1
  414544:	orr	w3, w3, #0x8
  414548:	b	414420 <_obstack_memory_used@@Base+0xf14>
  41454c:	and	x4, x1, #0xf
  414550:	cmp	x4, #0x4
  414554:	b.eq	414530 <_obstack_memory_used@@Base+0x1024>  // b.none
  414558:	adds	x1, x1, #0x4
  41455c:	cinc	x0, x0, cs  // cs = hs, nlast
  414560:	b	414530 <_obstack_memory_used@@Base+0x1024>
  414564:	cbnz	x2, 414530 <_obstack_memory_used@@Base+0x1024>
  414568:	adds	x1, x1, #0x8
  41456c:	cinc	x0, x0, cs  // cs = hs, nlast
  414570:	b	414530 <_obstack_memory_used@@Base+0x1024>
  414574:	cbz	x2, 414530 <_obstack_memory_used@@Base+0x1024>
  414578:	adds	x1, x1, #0x8
  41457c:	cinc	x0, x0, cs  // cs = hs, nlast
  414580:	b	414530 <_obstack_memory_used@@Base+0x1024>
  414584:	orr	x5, x5, x4
  414588:	cbz	x5, 4145b4 <_obstack_memory_used@@Base+0x10a8>
  41458c:	orr	w3, w3, #0x10
  414590:	and	x12, x12, #0xc00000
  414594:	cmp	x12, #0x400, lsl #12
  414598:	b.eq	4145c4 <_obstack_memory_used@@Base+0x10b8>  // b.none
  41459c:	cmp	x12, #0x800, lsl #12
  4145a0:	b.eq	4145d4 <_obstack_memory_used@@Base+0x10c8>  // b.none
  4145a4:	cmp	x12, #0x0
  4145a8:	mov	x5, #0x5                   	// #5
  4145ac:	csinc	x5, x5, xzr, eq  // eq = none
  4145b0:	lsr	x5, x5, #3
  4145b4:	orr	w3, w3, #0x8
  4145b8:	mov	x4, #0x0                   	// #0
  4145bc:	mov	x6, #0x0                   	// #0
  4145c0:	b	414420 <_obstack_memory_used@@Base+0xf14>
  4145c4:	cmp	x2, #0x0
  4145c8:	mov	x5, #0x9                   	// #9
  4145cc:	csinc	x5, x5, xzr, eq  // eq = none
  4145d0:	b	4145b0 <_obstack_memory_used@@Base+0x10a4>
  4145d4:	cmp	x2, #0x0
  4145d8:	mov	x5, #0x9                   	// #9
  4145dc:	csinc	x5, x5, xzr, ne  // ne = any
  4145e0:	b	4145b0 <_obstack_memory_used@@Base+0x10a4>
  4145e4:	mov	x4, #0x0                   	// #0
  4145e8:	mov	x5, #0x0                   	// #0
  4145ec:	mov	x6, #0x0                   	// #0
  4145f0:	b	414600 <_obstack_memory_used@@Base+0x10f4>
  4145f4:	mov	x4, #0x0                   	// #0
  4145f8:	mov	x5, #0x0                   	// #0
  4145fc:	mov	x6, #0x0                   	// #0
  414600:	mov	x1, #0x0                   	// #0
  414604:	mov	x0, x5
  414608:	bfxil	x1, x4, #0, #48
  41460c:	bfi	x1, x6, #48, #15
  414610:	bfi	x1, x9, #63, #1
  414614:	stp	x0, x1, [sp, #16]
  414618:	cbnz	w3, 414438 <_obstack_memory_used@@Base+0xf2c>
  41461c:	ldr	q0, [sp, #16]
  414620:	ldp	x29, x30, [sp], #32
  414624:	ret
  414628:	mov	x9, x2
  41462c:	mov	x4, #0x0                   	// #0
  414630:	mov	x5, #0x0                   	// #0
  414634:	mov	x6, #0x0                   	// #0
  414638:	b	414600 <_obstack_memory_used@@Base+0x10f4>
  41463c:	mov	x9, x2
  414640:	mov	x6, #0x0                   	// #0
  414644:	b	414600 <_obstack_memory_used@@Base+0x10f4>
  414648:	mov	x4, x10
  41464c:	mov	x5, x13
  414650:	mov	x2, x0
  414654:	b	414034 <_obstack_memory_used@@Base+0xb28>
  414658:	extr	x5, x0, x1, #3
  41465c:	lsr	x4, x0, #3
  414660:	mov	x6, #0x0                   	// #0
  414664:	b	414544 <_obstack_memory_used@@Base+0x1038>
  414668:	stp	x29, x30, [sp, #-32]!
  41466c:	mov	x29, sp
  414670:	str	q0, [sp, #16]
  414674:	ldr	x5, [sp, #16]
  414678:	ldr	x0, [sp, #24]
  41467c:	str	q1, [sp, #16]
  414680:	ldr	x6, [sp, #16]
  414684:	ldr	x2, [sp, #24]
  414688:	mrs	x1, fpcr
  41468c:	mov	x10, x5
  414690:	ubfx	x7, x0, #0, #48
  414694:	ubfx	x3, x0, #48, #15
  414698:	lsr	x0, x0, #63
  41469c:	and	w1, w0, #0xff
  4146a0:	mov	x9, x6
  4146a4:	ubfx	x8, x2, #0, #48
  4146a8:	ubfx	x4, x2, #48, #15
  4146ac:	lsr	x0, x2, #63
  4146b0:	and	w2, w0, #0xff
  4146b4:	mov	x0, #0x7fff                	// #32767
  4146b8:	cmp	x3, x0
  4146bc:	b.eq	4146e0 <_obstack_memory_used@@Base+0x11d4>  // b.none
  4146c0:	mov	x0, #0x7fff                	// #32767
  4146c4:	cmp	x4, x0
  4146c8:	b.eq	4146fc <_obstack_memory_used@@Base+0x11f0>  // b.none
  4146cc:	mov	w0, #0x1                   	// #1
  4146d0:	cmp	x3, x4
  4146d4:	b.eq	41472c <_obstack_memory_used@@Base+0x1220>  // b.none
  4146d8:	ldp	x29, x30, [sp], #32
  4146dc:	ret
  4146e0:	orr	x0, x7, x5
  4146e4:	cbnz	x0, 414764 <_obstack_memory_used@@Base+0x1258>
  4146e8:	mov	x0, #0x7fff                	// #32767
  4146ec:	cmp	x4, x0
  4146f0:	b.eq	4146fc <_obstack_memory_used@@Base+0x11f0>  // b.none
  4146f4:	mov	w0, #0x1                   	// #1
  4146f8:	b	4146d8 <_obstack_memory_used@@Base+0x11cc>
  4146fc:	orr	x0, x8, x9
  414700:	cbz	x0, 4146cc <_obstack_memory_used@@Base+0x11c0>
  414704:	mov	x0, #0x7fff                	// #32767
  414708:	cmp	x3, x0
  41470c:	b.eq	41475c <_obstack_memory_used@@Base+0x1250>  // b.none
  414710:	mov	w0, #0x1                   	// #1
  414714:	tst	x8, #0x800000000000
  414718:	b.ne	4146d8 <_obstack_memory_used@@Base+0x11cc>  // b.any
  41471c:	mov	w0, #0x1                   	// #1
  414720:	bl	41523c <_obstack_memory_used@@Base+0x1d30>
  414724:	mov	w0, #0x1                   	// #1
  414728:	b	4146d8 <_obstack_memory_used@@Base+0x11cc>
  41472c:	cmp	x7, x8
  414730:	ccmp	x5, x6, #0x0, eq  // eq = none
  414734:	b.ne	4146d8 <_obstack_memory_used@@Base+0x11cc>  // b.any
  414738:	mov	w0, #0x0                   	// #0
  41473c:	cmp	w1, w2
  414740:	b.eq	4146d8 <_obstack_memory_used@@Base+0x11cc>  // b.none
  414744:	mov	w0, #0x1                   	// #1
  414748:	cbnz	x3, 4146d8 <_obstack_memory_used@@Base+0x11cc>
  41474c:	orr	x7, x7, x10
  414750:	cmp	x7, #0x0
  414754:	cset	w0, ne  // ne = any
  414758:	b	4146d8 <_obstack_memory_used@@Base+0x11cc>
  41475c:	orr	x10, x7, x10
  414760:	cbz	x10, 41477c <_obstack_memory_used@@Base+0x1270>
  414764:	tst	x7, #0x800000000000
  414768:	b.eq	41471c <_obstack_memory_used@@Base+0x1210>  // b.none
  41476c:	mov	w0, #0x1                   	// #1
  414770:	mov	x1, #0x7fff                	// #32767
  414774:	cmp	x4, x1
  414778:	b.ne	4146d8 <_obstack_memory_used@@Base+0x11cc>  // b.any
  41477c:	orr	x9, x8, x9
  414780:	mov	w0, #0x1                   	// #1
  414784:	cbz	x9, 4146d8 <_obstack_memory_used@@Base+0x11cc>
  414788:	b	414710 <_obstack_memory_used@@Base+0x1204>
  41478c:	stp	x29, x30, [sp, #-32]!
  414790:	mov	x29, sp
  414794:	str	q0, [sp, #16]
  414798:	ldr	x7, [sp, #16]
  41479c:	ldr	x1, [sp, #24]
  4147a0:	str	q1, [sp, #16]
  4147a4:	ldr	x8, [sp, #16]
  4147a8:	ldr	x0, [sp, #24]
  4147ac:	mrs	x2, fpcr
  4147b0:	mov	x5, x7
  4147b4:	ubfx	x9, x1, #0, #48
  4147b8:	ubfx	x3, x1, #48, #15
  4147bc:	lsr	x1, x1, #63
  4147c0:	and	w2, w1, #0xff
  4147c4:	mov	x6, x8
  4147c8:	ubfx	x10, x0, #0, #48
  4147cc:	ubfx	x4, x0, #48, #15
  4147d0:	lsr	x0, x0, #63
  4147d4:	and	w1, w0, #0xff
  4147d8:	mov	x0, #0x7fff                	// #32767
  4147dc:	cmp	x3, x0
  4147e0:	b.eq	414820 <_obstack_memory_used@@Base+0x1314>  // b.none
  4147e4:	mov	x0, #0x7fff                	// #32767
  4147e8:	cmp	x4, x0
  4147ec:	b.eq	41483c <_obstack_memory_used@@Base+0x1330>  // b.none
  4147f0:	mov	w0, #0x0                   	// #0
  4147f4:	cbnz	x3, 414804 <_obstack_memory_used@@Base+0x12f8>
  4147f8:	orr	x5, x5, x9
  4147fc:	cmp	x5, #0x0
  414800:	cset	w0, eq  // eq = none
  414804:	cbnz	x4, 41484c <_obstack_memory_used@@Base+0x1340>
  414808:	orr	x6, x10, x6
  41480c:	cbnz	x6, 41484c <_obstack_memory_used@@Base+0x1340>
  414810:	cbz	w0, 414860 <_obstack_memory_used@@Base+0x1354>
  414814:	mov	w0, #0x0                   	// #0
  414818:	ldp	x29, x30, [sp], #32
  41481c:	ret
  414820:	orr	x0, x7, x9
  414824:	cbnz	x0, 4148e8 <_obstack_memory_used@@Base+0x13dc>
  414828:	mov	x0, #0x7fff                	// #32767
  41482c:	cmp	x4, x0
  414830:	b.eq	41483c <_obstack_memory_used@@Base+0x1330>  // b.none
  414834:	mov	w0, #0x0                   	// #0
  414838:	b	414804 <_obstack_memory_used@@Base+0x12f8>
  41483c:	orr	x0, x10, x6
  414840:	cbnz	x0, 4148e8 <_obstack_memory_used@@Base+0x13dc>
  414844:	mov	w0, #0x0                   	// #0
  414848:	cbz	x3, 4147f8 <_obstack_memory_used@@Base+0x12ec>
  41484c:	and	x1, x1, #0xff
  414850:	cbz	w0, 4148f8 <_obstack_memory_used@@Base+0x13ec>
  414854:	cmp	x1, #0x0
  414858:	csinv	w0, w0, wzr, ne  // ne = any
  41485c:	b	414818 <_obstack_memory_used@@Base+0x130c>
  414860:	mov	w0, #0x1                   	// #1
  414864:	cmp	w2, #0x0
  414868:	cneg	w0, w0, ne  // ne = any
  41486c:	b	414818 <_obstack_memory_used@@Base+0x130c>
  414870:	cmp	x3, x4
  414874:	b.le	414888 <_obstack_memory_used@@Base+0x137c>
  414878:	mov	w0, #0x1                   	// #1
  41487c:	cmp	x5, #0x0
  414880:	cneg	w0, w0, ne  // ne = any
  414884:	b	414818 <_obstack_memory_used@@Base+0x130c>
  414888:	b.ge	41489c <_obstack_memory_used@@Base+0x1390>  // b.tcont
  41488c:	mov	w0, #0xffffffff            	// #-1
  414890:	cmp	x5, #0x0
  414894:	cneg	w0, w0, ne  // ne = any
  414898:	b	414818 <_obstack_memory_used@@Base+0x130c>
  41489c:	cmp	x9, x10
  4148a0:	b.hi	4148b4 <_obstack_memory_used@@Base+0x13a8>  // b.pmore
  4148a4:	cset	w1, eq  // eq = none
  4148a8:	cmp	w1, #0x0
  4148ac:	ccmp	x7, x8, #0x0, ne  // ne = any
  4148b0:	b.ls	4148c4 <_obstack_memory_used@@Base+0x13b8>  // b.plast
  4148b4:	mov	w0, #0x1                   	// #1
  4148b8:	cmp	x5, #0x0
  4148bc:	cneg	w0, w0, ne  // ne = any
  4148c0:	b	414818 <_obstack_memory_used@@Base+0x130c>
  4148c4:	cmp	x9, x10
  4148c8:	b.cc	4148d8 <_obstack_memory_used@@Base+0x13cc>  // b.lo, b.ul, b.last
  4148cc:	cmp	w1, #0x0
  4148d0:	ccmp	x7, x8, #0x2, ne  // ne = any
  4148d4:	b.cs	414818 <_obstack_memory_used@@Base+0x130c>  // b.hs, b.nlast
  4148d8:	mov	w0, #0xffffffff            	// #-1
  4148dc:	cmp	x5, #0x0
  4148e0:	cneg	w0, w0, ne  // ne = any
  4148e4:	b	414818 <_obstack_memory_used@@Base+0x130c>
  4148e8:	mov	w0, #0x1                   	// #1
  4148ec:	bl	41523c <_obstack_memory_used@@Base+0x1d30>
  4148f0:	mov	w0, #0x2                   	// #2
  4148f4:	b	414818 <_obstack_memory_used@@Base+0x130c>
  4148f8:	and	x5, x2, #0xff
  4148fc:	cmp	x1, w2, uxtb
  414900:	b.eq	414870 <_obstack_memory_used@@Base+0x1364>  // b.none
  414904:	mov	w0, #0x1                   	// #1
  414908:	cmp	x5, #0x0
  41490c:	cneg	w0, w0, ne  // ne = any
  414910:	b	414818 <_obstack_memory_used@@Base+0x130c>
  414914:	stp	x29, x30, [sp, #-32]!
  414918:	mov	x29, sp
  41491c:	str	q0, [sp, #16]
  414920:	ldr	x2, [sp, #16]
  414924:	ldr	x0, [sp, #24]
  414928:	str	q1, [sp, #16]
  41492c:	ldr	x7, [sp, #16]
  414930:	ldr	x1, [sp, #24]
  414934:	mrs	x13, fpcr
  414938:	ubfx	x8, x0, #0, #48
  41493c:	ubfx	x9, x0, #48, #15
  414940:	lsr	x0, x0, #63
  414944:	and	w11, w0, #0xff
  414948:	cbz	w9, 414a30 <_obstack_memory_used@@Base+0x1524>
  41494c:	mov	x4, x8
  414950:	mov	w5, #0x7fff                	// #32767
  414954:	cmp	w9, w5
  414958:	b.eq	414a98 <_obstack_memory_used@@Base+0x158c>  // b.none
  41495c:	extr	x4, x8, x2, #61
  414960:	orr	x4, x4, #0x8000000000000
  414964:	lsl	x5, x2, #3
  414968:	and	x9, x9, #0xffff
  41496c:	sub	x9, x9, #0x3, lsl #12
  414970:	sub	x9, x9, #0xfff
  414974:	mov	x6, #0x0                   	// #0
  414978:	mov	w8, #0x0                   	// #0
  41497c:	ubfx	x14, x1, #0, #48
  414980:	ubfx	x12, x1, #48, #15
  414984:	lsr	x1, x1, #63
  414988:	and	w3, w1, #0xff
  41498c:	cbz	w12, 414ae0 <_obstack_memory_used@@Base+0x15d4>
  414990:	mov	w10, #0x7fff                	// #32767
  414994:	cmp	w12, w10
  414998:	b.eq	414b44 <_obstack_memory_used@@Base+0x1638>  // b.none
  41499c:	extr	x10, x14, x7, #61
  4149a0:	orr	x10, x10, #0x8000000000000
  4149a4:	lsl	x7, x7, #3
  4149a8:	and	x12, x12, #0xffff
  4149ac:	sub	x12, x12, #0x3, lsl #12
  4149b0:	sub	x12, x12, #0xfff
  4149b4:	mov	x14, #0x0                   	// #0
  4149b8:	eor	w11, w11, w3
  4149bc:	and	x11, x11, #0xff
  4149c0:	add	x12, x9, x12
  4149c4:	add	x9, x12, #0x1
  4149c8:	orr	x3, x14, x6, lsl #2
  4149cc:	cmp	x3, #0xa
  4149d0:	b.le	414be4 <_obstack_memory_used@@Base+0x16d8>
  4149d4:	cmp	x3, #0xc
  4149d8:	csel	x1, x1, x0, lt  // lt = tstop
  4149dc:	csel	x4, x10, x4, lt  // lt = tstop
  4149e0:	csel	x5, x7, x5, lt  // lt = tstop
  4149e4:	csel	x6, x14, x6, lt  // lt = tstop
  4149e8:	cmp	x6, #0x2
  4149ec:	b.eq	414fcc <_obstack_memory_used@@Base+0x1ac0>  // b.none
  4149f0:	b.gt	414c30 <_obstack_memory_used@@Base+0x1724>
  4149f4:	cbz	x6, 414fec <_obstack_memory_used@@Base+0x1ae0>
  4149f8:	cmp	x6, #0x1
  4149fc:	csel	x4, x4, xzr, ne  // ne = any
  414a00:	csel	x5, x5, xzr, ne  // ne = any
  414a04:	csel	x9, x9, xzr, ne  // ne = any
  414a08:	mov	x3, #0x0                   	// #0
  414a0c:	mov	x2, x5
  414a10:	bfxil	x3, x4, #0, #48
  414a14:	bfi	x3, x9, #48, #15
  414a18:	bfi	x3, x1, #63, #1
  414a1c:	stp	x2, x3, [sp, #16]
  414a20:	cbnz	w8, 414e20 <_obstack_memory_used@@Base+0x1914>
  414a24:	ldr	q0, [sp, #16]
  414a28:	ldp	x29, x30, [sp], #32
  414a2c:	ret
  414a30:	orr	x5, x8, x2
  414a34:	cbz	x5, 414ab8 <_obstack_memory_used@@Base+0x15ac>
  414a38:	cbz	x8, 414a74 <_obstack_memory_used@@Base+0x1568>
  414a3c:	clz	x6, x8
  414a40:	sub	x4, x6, #0xf
  414a44:	add	w5, w4, #0x3
  414a48:	lsl	x8, x8, x5
  414a4c:	mov	w3, #0x3d                  	// #61
  414a50:	sub	w4, w3, w4
  414a54:	lsr	x4, x2, x4
  414a58:	orr	x4, x4, x8
  414a5c:	lsl	x5, x2, x5
  414a60:	mov	x9, #0xffffffffffffc011    	// #-16367
  414a64:	sub	x9, x9, x6
  414a68:	mov	x6, #0x0                   	// #0
  414a6c:	mov	w8, #0x0                   	// #0
  414a70:	b	41497c <_obstack_memory_used@@Base+0x1470>
  414a74:	clz	x4, x2
  414a78:	add	x6, x4, #0x40
  414a7c:	add	x4, x4, #0x31
  414a80:	cmp	x4, #0x3c
  414a84:	b.le	414a44 <_obstack_memory_used@@Base+0x1538>
  414a88:	sub	w4, w4, #0x3d
  414a8c:	mov	x5, x8
  414a90:	lsl	x4, x2, x4
  414a94:	b	414a60 <_obstack_memory_used@@Base+0x1554>
  414a98:	orr	x5, x8, x2
  414a9c:	cbz	x5, 414acc <_obstack_memory_used@@Base+0x15c0>
  414aa0:	lsr	x8, x8, #47
  414aa4:	eor	w8, w8, #0x1
  414aa8:	mov	x5, x2
  414aac:	mov	x9, #0x7fff                	// #32767
  414ab0:	mov	x6, #0x3                   	// #3
  414ab4:	b	41497c <_obstack_memory_used@@Base+0x1470>
  414ab8:	mov	x4, x5
  414abc:	mov	x9, #0x0                   	// #0
  414ac0:	mov	x6, #0x1                   	// #1
  414ac4:	mov	w8, #0x0                   	// #0
  414ac8:	b	41497c <_obstack_memory_used@@Base+0x1470>
  414acc:	mov	x4, x5
  414ad0:	mov	x9, #0x7fff                	// #32767
  414ad4:	mov	x6, #0x2                   	// #2
  414ad8:	mov	w8, #0x0                   	// #0
  414adc:	b	41497c <_obstack_memory_used@@Base+0x1470>
  414ae0:	orr	x10, x14, x7
  414ae4:	cbz	x10, 415058 <_obstack_memory_used@@Base+0x1b4c>
  414ae8:	cbz	x14, 414b20 <_obstack_memory_used@@Base+0x1614>
  414aec:	clz	x15, x14
  414af0:	sub	x10, x15, #0xf
  414af4:	add	w12, w10, #0x3
  414af8:	lsl	x14, x14, x12
  414afc:	mov	w2, #0x3d                  	// #61
  414b00:	sub	w10, w2, w10
  414b04:	lsr	x10, x7, x10
  414b08:	orr	x10, x10, x14
  414b0c:	lsl	x7, x7, x12
  414b10:	mov	x12, #0xffffffffffffc011    	// #-16367
  414b14:	sub	x12, x12, x15
  414b18:	mov	x14, #0x0                   	// #0
  414b1c:	b	4149b8 <_obstack_memory_used@@Base+0x14ac>
  414b20:	clz	x10, x7
  414b24:	add	x15, x10, #0x40
  414b28:	add	x10, x10, #0x31
  414b2c:	cmp	x10, #0x3c
  414b30:	b.le	414af4 <_obstack_memory_used@@Base+0x15e8>
  414b34:	sub	w10, w10, #0x3d
  414b38:	lsl	x10, x7, x10
  414b3c:	mov	x7, x14
  414b40:	b	414b10 <_obstack_memory_used@@Base+0x1604>
  414b44:	orr	x10, x14, x7
  414b48:	cbz	x10, 414bb8 <_obstack_memory_used@@Base+0x16ac>
  414b4c:	tst	x14, #0x800000000000
  414b50:	csinc	w8, w8, wzr, ne  // ne = any
  414b54:	eor	w11, w11, w3
  414b58:	and	x11, x11, #0xff
  414b5c:	add	x9, x9, #0x8, lsl #12
  414b60:	lsl	x2, x6, #2
  414b64:	orr	x3, x2, #0x3
  414b68:	cmp	x3, #0xa
  414b6c:	b.gt	414c3c <_obstack_memory_used@@Base+0x1730>
  414b70:	mov	x10, x14
  414b74:	mov	x14, #0x3                   	// #3
  414b78:	mov	x2, #0x1                   	// #1
  414b7c:	lsl	x2, x2, x3
  414b80:	mov	x0, #0x530                 	// #1328
  414b84:	tst	x2, x0
  414b88:	b.ne	414d98 <_obstack_memory_used@@Base+0x188c>  // b.any
  414b8c:	mov	x0, #0x240                 	// #576
  414b90:	ands	x2, x2, x0
  414b94:	mov	x4, #0xffffffffffff        	// #281474976710655
  414b98:	csel	x4, x10, x4, eq  // eq = none
  414b9c:	cmp	x2, #0x0
  414ba0:	csinv	x5, x7, xzr, eq  // eq = none
  414ba4:	csel	x1, x1, xzr, eq  // eq = none
  414ba8:	mov	x6, #0x3                   	// #3
  414bac:	csel	x6, x14, x6, eq  // eq = none
  414bb0:	csinc	w8, w8, wzr, eq  // eq = none
  414bb4:	b	4149e8 <_obstack_memory_used@@Base+0x14dc>
  414bb8:	eor	w11, w11, w3
  414bbc:	and	x11, x11, #0xff
  414bc0:	add	x12, x9, #0x7, lsl #12
  414bc4:	add	x12, x12, #0xfff
  414bc8:	add	x9, x9, #0x8, lsl #12
  414bcc:	lsl	x2, x6, #2
  414bd0:	orr	x3, x2, #0x2
  414bd4:	cmp	x3, #0xa
  414bd8:	b.gt	414c04 <_obstack_memory_used@@Base+0x16f8>
  414bdc:	mov	x7, x10
  414be0:	mov	x14, #0x2                   	// #2
  414be4:	cmp	x3, #0x2
  414be8:	b.gt	414b78 <_obstack_memory_used@@Base+0x166c>
  414bec:	cbz	x3, 414c48 <_obstack_memory_used@@Base+0x173c>
  414bf0:	mov	x4, x10
  414bf4:	mov	x5, x7
  414bf8:	mov	x1, x11
  414bfc:	mov	x6, x14
  414c00:	b	4149e8 <_obstack_memory_used@@Base+0x14dc>
  414c04:	mov	x7, x10
  414c08:	mov	x14, #0x2                   	// #2
  414c0c:	cmp	x3, #0xe
  414c10:	b.le	4149d4 <_obstack_memory_used@@Base+0x14c8>
  414c14:	tbz	x4, #47, 414c2c <_obstack_memory_used@@Base+0x1720>
  414c18:	ands	x2, x10, #0x800000000000
  414c1c:	csel	x4, x4, x10, ne  // ne = any
  414c20:	cmp	x2, #0x0
  414c24:	csel	x5, x5, x7, ne  // ne = any
  414c28:	csel	x0, x0, x1, ne  // ne = any
  414c2c:	mov	x1, x0
  414c30:	orr	x4, x4, #0x800000000000
  414c34:	mov	x9, #0x7fff                	// #32767
  414c38:	b	414a08 <_obstack_memory_used@@Base+0x14fc>
  414c3c:	mov	x10, x14
  414c40:	mov	x14, #0x3                   	// #3
  414c44:	b	414c0c <_obstack_memory_used@@Base+0x1700>
  414c48:	lsr	x6, x5, #32
  414c4c:	lsr	x1, x7, #32
  414c50:	and	x2, x5, #0xffffffff
  414c54:	and	x7, x7, #0xffffffff
  414c58:	mul	x14, x7, x2
  414c5c:	mul	x3, x6, x7
  414c60:	mul	x5, x6, x1
  414c64:	madd	x16, x1, x2, x3
  414c68:	add	x16, x16, x14, lsr #32
  414c6c:	mov	x0, #0x100000000           	// #4294967296
  414c70:	add	x0, x5, x0
  414c74:	cmp	x3, x16
  414c78:	csel	x5, x0, x5, hi  // hi = pmore
  414c7c:	and	x14, x14, #0xffffffff
  414c80:	add	x14, x14, x16, lsl #32
  414c84:	lsr	x0, x10, #32
  414c88:	and	x10, x10, #0xffffffff
  414c8c:	mul	x3, x2, x10
  414c90:	mul	x17, x6, x10
  414c94:	mul	x6, x6, x0
  414c98:	madd	x2, x0, x2, x17
  414c9c:	add	x2, x2, x3, lsr #32
  414ca0:	mov	x15, #0x100000000           	// #4294967296
  414ca4:	add	x15, x6, x15
  414ca8:	cmp	x17, x2
  414cac:	csel	x6, x15, x6, hi  // hi = pmore
  414cb0:	add	x15, x6, x2, lsr #32
  414cb4:	and	x3, x3, #0xffffffff
  414cb8:	add	x3, x3, x2, lsl #32
  414cbc:	add	x16, x3, x16, lsr #32
  414cc0:	lsr	x2, x4, #32
  414cc4:	and	x4, x4, #0xffffffff
  414cc8:	mul	x6, x7, x4
  414ccc:	mul	x7, x2, x7
  414cd0:	mul	x17, x1, x2
  414cd4:	madd	x1, x1, x4, x7
  414cd8:	add	x1, x1, x6, lsr #32
  414cdc:	mov	x18, #0x100000000           	// #4294967296
  414ce0:	add	x18, x17, x18
  414ce4:	cmp	x7, x1
  414ce8:	csel	x17, x18, x17, hi  // hi = pmore
  414cec:	add	x7, x17, x1, lsr #32
  414cf0:	and	x6, x6, #0xffffffff
  414cf4:	add	x1, x6, x1, lsl #32
  414cf8:	mul	x6, x4, x10
  414cfc:	mul	x10, x2, x10
  414d00:	mul	x2, x0, x2
  414d04:	madd	x0, x0, x4, x10
  414d08:	add	x0, x0, x6, lsr #32
  414d0c:	mov	x4, #0x100000000           	// #4294967296
  414d10:	add	x4, x2, x4
  414d14:	cmp	x10, x0
  414d18:	csel	x2, x4, x2, hi  // hi = pmore
  414d1c:	add	x5, x5, x16
  414d20:	cmp	x5, x3
  414d24:	cset	x16, cc  // cc = lo, ul, last
  414d28:	and	x3, x6, #0xffffffff
  414d2c:	add	x3, x3, x0, lsl #32
  414d30:	add	x3, x3, x15
  414d34:	cinc	x10, x3, cc  // cc = lo, ul, last
  414d38:	adds	x1, x5, x1
  414d3c:	cset	x5, cs  // cs = hs, nlast
  414d40:	add	x4, x10, x7
  414d44:	cinc	x6, x4, cs  // cs = hs, nlast
  414d48:	cmp	x3, x15
  414d4c:	ccmp	x10, x16, #0x0, cs  // cs = hs, nlast
  414d50:	lsr	x0, x0, #32
  414d54:	cinc	x0, x0, cc  // cc = lo, ul, last
  414d58:	cmp	x4, x7
  414d5c:	ccmp	x6, x5, #0x0, cs  // cs = hs, nlast
  414d60:	cinc	x2, x2, cc  // cc = lo, ul, last
  414d64:	add	x0, x0, x2
  414d68:	extr	x4, x0, x6, #51
  414d6c:	orr	x14, x14, x1, lsl #13
  414d70:	cmp	x14, #0x0
  414d74:	cset	x5, ne  // ne = any
  414d78:	extr	x1, x6, x1, #51
  414d7c:	orr	x5, x5, x1
  414d80:	tbz	x0, #39, 414fe4 <_obstack_memory_used@@Base+0x1ad8>
  414d84:	and	x0, x5, #0x1
  414d88:	orr	x5, x0, x5, lsr #1
  414d8c:	orr	x5, x5, x4, lsl #63
  414d90:	lsr	x4, x4, #1
  414d94:	b	414fe8 <_obstack_memory_used@@Base+0x1adc>
  414d98:	mov	x1, x11
  414d9c:	b	4149e8 <_obstack_memory_used@@Base+0x14dc>
  414da0:	and	x2, x5, #0xf
  414da4:	cmp	x2, #0x4
  414da8:	b.eq	415020 <_obstack_memory_used@@Base+0x1b14>  // b.none
  414dac:	adds	x5, x5, #0x4
  414db0:	cinc	x4, x4, cs  // cs = hs, nlast
  414db4:	b	415020 <_obstack_memory_used@@Base+0x1b14>
  414db8:	cbnz	x1, 415020 <_obstack_memory_used@@Base+0x1b14>
  414dbc:	adds	x5, x5, #0x8
  414dc0:	cinc	x4, x4, cs  // cs = hs, nlast
  414dc4:	b	415020 <_obstack_memory_used@@Base+0x1b14>
  414dc8:	cbz	x1, 415020 <_obstack_memory_used@@Base+0x1b14>
  414dcc:	adds	x5, x5, #0x8
  414dd0:	cinc	x4, x4, cs  // cs = hs, nlast
  414dd4:	b	415020 <_obstack_memory_used@@Base+0x1b14>
  414dd8:	and	x5, x13, #0xc00000
  414ddc:	cmp	x5, #0x400, lsl #12
  414de0:	b.eq	414e2c <_obstack_memory_used@@Base+0x1920>  // b.none
  414de4:	cmp	x5, #0x800, lsl #12
  414de8:	b.eq	414e44 <_obstack_memory_used@@Base+0x1938>  // b.none
  414dec:	mov	x0, #0x7fff                	// #32767
  414df0:	cbz	x5, 414dfc <_obstack_memory_used@@Base+0x18f0>
  414df4:	mov	x5, #0xffffffffffffffff    	// #-1
  414df8:	mov	x0, #0x7ffe                	// #32766
  414dfc:	mov	w2, #0x14                  	// #20
  414e00:	orr	w8, w8, w2
  414e04:	mov	x4, x5
  414e08:	mov	x3, #0x0                   	// #0
  414e0c:	mov	x2, x5
  414e10:	bfxil	x3, x4, #0, #48
  414e14:	bfi	x3, x0, #48, #15
  414e18:	bfi	x3, x1, #63, #1
  414e1c:	stp	x2, x3, [sp, #16]
  414e20:	mov	w0, w8
  414e24:	bl	41523c <_obstack_memory_used@@Base+0x1d30>
  414e28:	b	414a24 <_obstack_memory_used@@Base+0x1518>
  414e2c:	cmp	x1, #0x0
  414e30:	csetm	x5, ne  // ne = any
  414e34:	mov	x0, #0x7ffe                	// #32766
  414e38:	mov	x2, #0x7fff                	// #32767
  414e3c:	csel	x0, x0, x2, ne  // ne = any
  414e40:	b	414dfc <_obstack_memory_used@@Base+0x18f0>
  414e44:	cmp	x1, #0x0
  414e48:	csetm	x5, eq  // eq = none
  414e4c:	mov	x0, #0x7ffe                	// #32766
  414e50:	mov	x2, #0x7fff                	// #32767
  414e54:	csel	x0, x0, x2, eq  // eq = none
  414e58:	b	414dfc <_obstack_memory_used@@Base+0x18f0>
  414e5c:	mov	x2, #0x1                   	// #1
  414e60:	sub	x0, x2, x0
  414e64:	cmp	x0, #0x74
  414e68:	b.gt	414f6c <_obstack_memory_used@@Base+0x1a60>
  414e6c:	cmp	x0, #0x3f
  414e70:	b.gt	414eb4 <_obstack_memory_used@@Base+0x19a8>
  414e74:	mov	w3, #0x40                  	// #64
  414e78:	sub	w3, w3, w0
  414e7c:	lsl	x2, x4, x3
  414e80:	lsr	x6, x5, x0
  414e84:	orr	x2, x2, x6
  414e88:	lsl	x3, x5, x3
  414e8c:	cmp	x3, #0x0
  414e90:	cset	x3, ne  // ne = any
  414e94:	orr	x2, x2, x3
  414e98:	lsr	x0, x4, x0
  414e9c:	tst	x2, #0x7
  414ea0:	b.ne	414efc <_obstack_memory_used@@Base+0x19f0>  // b.any
  414ea4:	tbnz	x0, #51, 414f1c <_obstack_memory_used@@Base+0x1a10>
  414ea8:	extr	x5, x0, x2, #3
  414eac:	lsr	x4, x0, #3
  414eb0:	b	414eec <_obstack_memory_used@@Base+0x19e0>
  414eb4:	sub	w3, w0, #0x40
  414eb8:	lsr	x3, x4, x3
  414ebc:	mov	w2, #0x80                  	// #128
  414ec0:	sub	w2, w2, w0
  414ec4:	lsl	x4, x4, x2
  414ec8:	cmp	x0, #0x40
  414ecc:	csel	x0, x4, xzr, ne  // ne = any
  414ed0:	orr	x5, x0, x5
  414ed4:	cmp	x5, #0x0
  414ed8:	cset	x2, ne  // ne = any
  414edc:	orr	x2, x3, x2
  414ee0:	lsr	x5, x3, #3
  414ee4:	ands	x4, x2, #0x7
  414ee8:	b.ne	414ef8 <_obstack_memory_used@@Base+0x19ec>  // b.any
  414eec:	tbz	w13, #11, 414fdc <_obstack_memory_used@@Base+0x1ad0>
  414ef0:	mov	x0, #0x0                   	// #0
  414ef4:	b	414f2c <_obstack_memory_used@@Base+0x1a20>
  414ef8:	mov	x0, #0x0                   	// #0
  414efc:	orr	w8, w8, #0x10
  414f00:	and	x13, x13, #0xc00000
  414f04:	cmp	x13, #0x400, lsl #12
  414f08:	b.eq	414f4c <_obstack_memory_used@@Base+0x1a40>  // b.none
  414f0c:	cmp	x13, #0x800, lsl #12
  414f10:	b.eq	414f5c <_obstack_memory_used@@Base+0x1a50>  // b.none
  414f14:	cbz	x13, 414f34 <_obstack_memory_used@@Base+0x1a28>
  414f18:	tbz	x0, #51, 415048 <_obstack_memory_used@@Base+0x1b3c>
  414f1c:	orr	w8, w8, #0x10
  414f20:	mov	x4, #0x0                   	// #0
  414f24:	mov	x5, #0x0                   	// #0
  414f28:	mov	x0, #0x1                   	// #1
  414f2c:	orr	w8, w8, #0x8
  414f30:	b	414e08 <_obstack_memory_used@@Base+0x18fc>
  414f34:	and	x3, x2, #0xf
  414f38:	cmp	x3, #0x4
  414f3c:	b.eq	414f18 <_obstack_memory_used@@Base+0x1a0c>  // b.none
  414f40:	adds	x2, x2, #0x4
  414f44:	cinc	x0, x0, cs  // cs = hs, nlast
  414f48:	b	414f18 <_obstack_memory_used@@Base+0x1a0c>
  414f4c:	cbnz	x1, 414f18 <_obstack_memory_used@@Base+0x1a0c>
  414f50:	adds	x2, x2, #0x8
  414f54:	cinc	x0, x0, cs  // cs = hs, nlast
  414f58:	b	414f18 <_obstack_memory_used@@Base+0x1a0c>
  414f5c:	cbz	x1, 414f18 <_obstack_memory_used@@Base+0x1a0c>
  414f60:	adds	x2, x2, #0x8
  414f64:	cinc	x0, x0, cs  // cs = hs, nlast
  414f68:	b	414f18 <_obstack_memory_used@@Base+0x1a0c>
  414f6c:	orr	x5, x5, x4
  414f70:	cbz	x5, 414f9c <_obstack_memory_used@@Base+0x1a90>
  414f74:	orr	w8, w8, #0x10
  414f78:	and	x13, x13, #0xc00000
  414f7c:	cmp	x13, #0x400, lsl #12
  414f80:	b.eq	414fac <_obstack_memory_used@@Base+0x1aa0>  // b.none
  414f84:	cmp	x13, #0x800, lsl #12
  414f88:	b.eq	414fbc <_obstack_memory_used@@Base+0x1ab0>  // b.none
  414f8c:	cmp	x13, #0x0
  414f90:	mov	x5, #0x5                   	// #5
  414f94:	csinc	x5, x5, xzr, eq  // eq = none
  414f98:	lsr	x5, x5, #3
  414f9c:	orr	w8, w8, #0x8
  414fa0:	mov	x4, #0x0                   	// #0
  414fa4:	mov	x0, #0x0                   	// #0
  414fa8:	b	414e08 <_obstack_memory_used@@Base+0x18fc>
  414fac:	cmp	x1, #0x0
  414fb0:	mov	x5, #0x9                   	// #9
  414fb4:	csinc	x5, x5, xzr, eq  // eq = none
  414fb8:	b	414f98 <_obstack_memory_used@@Base+0x1a8c>
  414fbc:	cmp	x1, #0x0
  414fc0:	mov	x5, #0x9                   	// #9
  414fc4:	csinc	x5, x5, xzr, ne  // ne = any
  414fc8:	b	414f98 <_obstack_memory_used@@Base+0x1a8c>
  414fcc:	mov	x4, #0x0                   	// #0
  414fd0:	mov	x5, #0x0                   	// #0
  414fd4:	mov	x9, #0x7fff                	// #32767
  414fd8:	b	414a08 <_obstack_memory_used@@Base+0x14fc>
  414fdc:	mov	x9, #0x0                   	// #0
  414fe0:	b	414a08 <_obstack_memory_used@@Base+0x14fc>
  414fe4:	mov	x9, x12
  414fe8:	mov	x1, x11
  414fec:	add	x0, x9, #0x3, lsl #12
  414ff0:	add	x0, x0, #0xfff
  414ff4:	cmp	x0, #0x0
  414ff8:	b.le	414e5c <_obstack_memory_used@@Base+0x1950>
  414ffc:	tst	x5, #0x7
  415000:	b.eq	415020 <_obstack_memory_used@@Base+0x1b14>  // b.none
  415004:	orr	w8, w8, #0x10
  415008:	and	x2, x13, #0xc00000
  41500c:	cmp	x2, #0x400, lsl #12
  415010:	b.eq	414db8 <_obstack_memory_used@@Base+0x18ac>  // b.none
  415014:	cmp	x2, #0x800, lsl #12
  415018:	b.eq	414dc8 <_obstack_memory_used@@Base+0x18bc>  // b.none
  41501c:	cbz	x2, 414da0 <_obstack_memory_used@@Base+0x1894>
  415020:	tbz	x4, #52, 41502c <_obstack_memory_used@@Base+0x1b20>
  415024:	and	x4, x4, #0xffefffffffffffff
  415028:	add	x0, x9, #0x4, lsl #12
  41502c:	mov	x2, #0x7ffe                	// #32766
  415030:	cmp	x0, x2
  415034:	b.gt	414dd8 <_obstack_memory_used@@Base+0x18cc>
  415038:	extr	x5, x4, x5, #3
  41503c:	lsr	x4, x4, #3
  415040:	mov	x9, x0
  415044:	b	414a08 <_obstack_memory_used@@Base+0x14fc>
  415048:	extr	x5, x0, x2, #3
  41504c:	lsr	x4, x0, #3
  415050:	mov	x0, #0x0                   	// #0
  415054:	b	414f2c <_obstack_memory_used@@Base+0x1a20>
  415058:	mov	x7, x10
  41505c:	mov	x12, #0x0                   	// #0
  415060:	mov	x14, #0x1                   	// #1
  415064:	b	4149b8 <_obstack_memory_used@@Base+0x14ac>
  415068:	cbz	w0, 4150ac <_obstack_memory_used@@Base+0x1ba0>
  41506c:	mov	w0, w0
  415070:	clz	x2, x0
  415074:	mov	w1, #0x403e                	// #16446
  415078:	sub	w1, w1, w2
  41507c:	sxtw	x3, w1
  415080:	mov	w2, #0x402f                	// #16431
  415084:	sub	w2, w2, w1
  415088:	lsl	x2, x0, x2
  41508c:	mov	x0, #0x0                   	// #0
  415090:	mov	x1, #0x0                   	// #0
  415094:	bfxil	x1, x2, #0, #48
  415098:	bfi	x1, x3, #48, #15
  41509c:	and	x1, x1, #0x7fffffffffffffff
  4150a0:	fmov	d0, x0
  4150a4:	fmov	v0.d[1], x1
  4150a8:	ret
  4150ac:	mov	x2, #0x0                   	// #0
  4150b0:	mov	x3, #0x0                   	// #0
  4150b4:	b	41508c <_obstack_memory_used@@Base+0x1b80>
  4150b8:	stp	x29, x30, [sp, #-48]!
  4150bc:	mov	x29, sp
  4150c0:	str	x19, [sp, #16]
  4150c4:	str	q0, [sp, #32]
  4150c8:	ldr	x19, [sp, #32]
  4150cc:	ldr	x1, [sp, #40]
  4150d0:	mrs	x0, fpcr
  4150d4:	ubfx	x3, x1, #0, #48
  4150d8:	ubfx	x4, x1, #48, #15
  4150dc:	mov	x2, #0x3ffe                	// #16382
  4150e0:	cmp	x4, x2
  4150e4:	b.gt	415104 <_obstack_memory_used@@Base+0x1bf8>
  4150e8:	cbnz	x4, 4151ac <_obstack_memory_used@@Base+0x1ca0>
  4150ec:	orr	x19, x19, x3
  4150f0:	cbnz	x19, 4151b8 <_obstack_memory_used@@Base+0x1cac>
  4150f4:	mov	x0, x19
  4150f8:	ldr	x19, [sp, #16]
  4150fc:	ldp	x29, x30, [sp], #48
  415100:	ret
  415104:	lsr	x1, x1, #63
  415108:	and	w1, w1, #0xff
  41510c:	mov	x2, #0x403e                	// #16446
  415110:	cmp	x4, x2
  415114:	cset	w2, gt
  415118:	orr	w2, w1, w2
  41511c:	cbz	w2, 415134 <_obstack_memory_used@@Base+0x1c28>
  415120:	eor	w1, w1, #0x1
  415124:	sbfx	x19, x1, #0, #1
  415128:	mov	w0, #0x1                   	// #1
  41512c:	bl	41523c <_obstack_memory_used@@Base+0x1d30>
  415130:	b	4150f4 <_obstack_memory_used@@Base+0x1be8>
  415134:	orr	x3, x3, #0x1000000000000
  415138:	mov	x1, #0x406f                	// #16495
  41513c:	sub	x0, x1, x4
  415140:	cmp	x0, #0x3f
  415144:	b.gt	41517c <_obstack_memory_used@@Base+0x1c70>
  415148:	sub	w2, w4, #0x4, lsl #12
  41514c:	sub	w2, w2, #0x2f
  415150:	lsl	x0, x19, x2
  415154:	cmp	x0, #0x0
  415158:	cset	w1, ne  // ne = any
  41515c:	mov	w0, #0x406f                	// #16495
  415160:	sub	w0, w0, w4
  415164:	lsr	x19, x19, x0
  415168:	lsl	x3, x3, x2
  41516c:	orr	x19, x19, x3
  415170:	cbz	w1, 4150f4 <_obstack_memory_used@@Base+0x1be8>
  415174:	mov	w0, #0x10                  	// #16
  415178:	b	41512c <_obstack_memory_used@@Base+0x1c20>
  41517c:	sub	w1, w4, #0x3, lsl #12
  415180:	sub	w1, w1, #0xfef
  415184:	lsl	x1, x3, x1
  415188:	cmp	x0, #0x40
  41518c:	csel	x0, x1, xzr, ne  // ne = any
  415190:	orr	x19, x0, x19
  415194:	cmp	x19, #0x0
  415198:	cset	w1, ne  // ne = any
  41519c:	mov	w0, #0x402f                	// #16431
  4151a0:	sub	w0, w0, w4
  4151a4:	lsr	x19, x3, x0
  4151a8:	b	415170 <_obstack_memory_used@@Base+0x1c64>
  4151ac:	mov	x19, #0x0                   	// #0
  4151b0:	mov	w0, #0x10                  	// #16
  4151b4:	b	41512c <_obstack_memory_used@@Base+0x1c20>
  4151b8:	mov	x19, #0x0                   	// #0
  4151bc:	mov	w0, #0x10                  	// #16
  4151c0:	b	41512c <_obstack_memory_used@@Base+0x1c20>
  4151c4:	cbz	x0, 415218 <_obstack_memory_used@@Base+0x1d0c>
  4151c8:	clz	x2, x0
  4151cc:	mov	w1, #0x403e                	// #16446
  4151d0:	sub	w2, w1, w2
  4151d4:	sxtw	x4, w2
  4151d8:	mov	x1, #0x406f                	// #16495
  4151dc:	sub	x1, x1, x4
  4151e0:	cmp	x1, #0x3f
  4151e4:	b.gt	415204 <_obstack_memory_used@@Base+0x1cf8>
  4151e8:	sub	w1, w2, #0x4, lsl #12
  4151ec:	sub	w1, w1, #0x2f
  4151f0:	lsr	x1, x0, x1
  4151f4:	mov	w3, #0x406f                	// #16495
  4151f8:	sub	w2, w3, w2
  4151fc:	lsl	x0, x0, x2
  415200:	b	415220 <_obstack_memory_used@@Base+0x1d14>
  415204:	mov	w1, #0x402f                	// #16431
  415208:	sub	w1, w1, w2
  41520c:	lsl	x1, x0, x1
  415210:	mov	x0, #0x0                   	// #0
  415214:	b	415220 <_obstack_memory_used@@Base+0x1d14>
  415218:	mov	x1, x0
  41521c:	mov	x4, #0x0                   	// #0
  415220:	mov	x3, #0x0                   	// #0
  415224:	bfxil	x3, x1, #0, #48
  415228:	bfi	x3, x4, #48, #15
  41522c:	and	x3, x3, #0x7fffffffffffffff
  415230:	fmov	d0, x0
  415234:	fmov	v0.d[1], x3
  415238:	ret
  41523c:	tbz	w0, #0, 41524c <_obstack_memory_used@@Base+0x1d40>
  415240:	movi	v1.2s, #0x0
  415244:	fdiv	s0, s1, s1
  415248:	mrs	x1, fpsr
  41524c:	tbz	w0, #1, 415260 <_obstack_memory_used@@Base+0x1d54>
  415250:	fmov	s1, #1.000000000000000000e+00
  415254:	movi	v2.2s, #0x0
  415258:	fdiv	s0, s1, s2
  41525c:	mrs	x1, fpsr
  415260:	tbz	w0, #2, 415280 <_obstack_memory_used@@Base+0x1d74>
  415264:	mov	w1, #0x7f7fffff            	// #2139095039
  415268:	fmov	s1, w1
  41526c:	mov	w1, #0xc5ae                	// #50606
  415270:	movk	w1, #0x749d, lsl #16
  415274:	fmov	s2, w1
  415278:	fadd	s0, s1, s2
  41527c:	mrs	x1, fpsr
  415280:	tbz	w0, #3, 415290 <_obstack_memory_used@@Base+0x1d84>
  415284:	movi	v1.2s, #0x80, lsl #16
  415288:	fmul	s0, s1, s1
  41528c:	mrs	x1, fpsr
  415290:	tbz	w0, #4, 4152a8 <_obstack_memory_used@@Base+0x1d9c>
  415294:	mov	w0, #0x7f7fffff            	// #2139095039
  415298:	fmov	s1, w0
  41529c:	fmov	s2, #1.000000000000000000e+00
  4152a0:	fsub	s0, s1, s2
  4152a4:	mrs	x0, fpsr
  4152a8:	ret
  4152ac:	nop
  4152b0:	stp	x29, x30, [sp, #-64]!
  4152b4:	mov	x29, sp
  4152b8:	stp	x19, x20, [sp, #16]
  4152bc:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x1aaf4>
  4152c0:	add	x20, x20, #0xde0
  4152c4:	stp	x21, x22, [sp, #32]
  4152c8:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x1aaf4>
  4152cc:	add	x21, x21, #0xdd8
  4152d0:	sub	x20, x20, x21
  4152d4:	mov	w22, w0
  4152d8:	stp	x23, x24, [sp, #48]
  4152dc:	mov	x23, x1
  4152e0:	mov	x24, x2
  4152e4:	bl	402370 <mbrtowc@plt-0x40>
  4152e8:	cmp	xzr, x20, asr #3
  4152ec:	b.eq	415318 <_obstack_memory_used@@Base+0x1e0c>  // b.none
  4152f0:	asr	x20, x20, #3
  4152f4:	mov	x19, #0x0                   	// #0
  4152f8:	ldr	x3, [x21, x19, lsl #3]
  4152fc:	mov	x2, x24
  415300:	add	x19, x19, #0x1
  415304:	mov	x1, x23
  415308:	mov	w0, w22
  41530c:	blr	x3
  415310:	cmp	x20, x19
  415314:	b.ne	4152f8 <_obstack_memory_used@@Base+0x1dec>  // b.any
  415318:	ldp	x19, x20, [sp, #16]
  41531c:	ldp	x21, x22, [sp, #32]
  415320:	ldp	x23, x24, [sp, #48]
  415324:	ldp	x29, x30, [sp], #64
  415328:	ret
  41532c:	nop
  415330:	ret
  415334:	nop
  415338:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1baf4>
  41533c:	mov	x1, #0x0                   	// #0
  415340:	ldr	x2, [x2, #864]
  415344:	b	402510 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000415348 <.fini>:
  415348:	stp	x29, x30, [sp, #-16]!
  41534c:	mov	x29, sp
  415350:	ldp	x29, x30, [sp], #16
  415354:	ret
