
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ufs2.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_ufs_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	nop

0000000000000020 <grub_ufs_mount>:
  20:	stp	x29, x30, [sp, #-64]!
  24:	mov	x29, sp
  28:	stp	x19, x20, [sp, #16]
  2c:	stp	x21, x22, [sp, #32]
  30:	mov	x21, x0
  34:	mov	x0, #0x678                 	// #1656
  38:	bl	0 <grub_malloc>
  3c:	mov	x19, x0
  40:	cbz	x0, fc <grub_ufs_mount+0xdc>
  44:	adrp	x0, 0 <grub_ufs_close>
  48:	ldr	x20, [x0]
  4c:	ldr	w1, [x20]
  50:	cmn	w1, #0x1
  54:	b.eq	158 <grub_ufs_mount+0x138>  // b.none
  58:	adrp	x0, 0 <grub_ufs_close>
  5c:	str	x23, [sp, #48]
  60:	mov	w23, #0x119                 	// #281
  64:	ldr	x22, [x0]
  68:	movk	w23, #0x1954, lsl #16
  6c:	b	7c <grub_ufs_mount+0x5c>
  70:	ldr	w1, [x20, #4]!
  74:	cmn	w1, #0x1
  78:	b.eq	140 <grub_ufs_mount+0x120>  // b.none
  7c:	sxtw	x1, w1
  80:	mov	x4, x19
  84:	mov	x0, x21
  88:	mov	x3, #0x560                 	// #1376
  8c:	mov	x2, #0x0                   	// #0
  90:	bl	0 <grub_disk_read>
  94:	ldr	w1, [x22]
  98:	cbnz	w1, 110 <grub_ufs_mount+0xf0>
  9c:	ldr	w1, [x19, #1372]
  a0:	cmp	w1, w23
  a4:	b.ne	70 <grub_ufs_mount+0x50>  // b.any
  a8:	ldr	w1, [x19, #48]
  ac:	sub	w0, w1, #0x1
  b0:	tst	w0, w1
  b4:	cbz	w1, 70 <grub_ufs_mount+0x50>
  b8:	b.ne	70 <grub_ufs_mount+0x50>  // b.any
  bc:	ldr	w0, [x19, #184]
  c0:	cbz	w0, 70 <grub_ufs_mount+0x50>
  c4:	str	wzr, [x19, #1648]
  c8:	cmp	w1, #0x1
  cc:	b.eq	f0 <grub_ufs_mount+0xd0>  // b.none
  d0:	mov	w0, #0x1                   	// #1
  d4:	mov	w4, w0
  d8:	mov	w2, w0
  dc:	add	w0, w0, #0x1
  e0:	lsl	w3, w4, w2
  e4:	cmp	w3, w1
  e8:	b.cc	d8 <grub_ufs_mount+0xb8>  // b.lo, b.ul, b.last
  ec:	str	w2, [x19, #1648]
  f0:	ldr	x23, [sp, #48]
  f4:	str	x21, [x19, #1376]
  f8:	str	wzr, [x19, #1644]
  fc:	mov	x0, x19
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret
 110:	ldr	x23, [sp, #48]
 114:	cmp	w1, #0x0
 118:	ccmp	w1, #0xb, #0x4, ne  // ne = any
 11c:	b.eq	144 <grub_ufs_mount+0x124>  // b.none
 120:	mov	x0, x19
 124:	mov	x19, #0x0                   	// #0
 128:	bl	0 <grub_free>
 12c:	mov	x0, x19
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x29, x30, [sp], #64
 13c:	ret
 140:	ldr	x23, [sp, #48]
 144:	adrp	x1, 0 <grub_ufs_close>
 148:	mov	w0, #0x9                   	// #9
 14c:	ldr	x1, [x1]
 150:	bl	0 <grub_error>
 154:	b	120 <grub_ufs_mount+0x100>
 158:	adrp	x0, 0 <grub_ufs_close>
 15c:	ldr	x0, [x0]
 160:	ldr	w1, [x0]
 164:	b	114 <grub_ufs_mount+0xf4>
	...

0000000000000180 <grub_ufs_mtime>:
 180:	stp	x29, x30, [sp, #-48]!
 184:	adrp	x2, 0 <grub_ufs_close>
 188:	mov	x29, sp
 18c:	str	x21, [sp, #32]
 190:	ldr	x21, [x2]
 194:	stp	x19, x20, [sp, #16]
 198:	mov	x19, x0
 19c:	mov	x20, x1
 1a0:	ldr	x0, [x21]
 1a4:	bl	0 <grub_dl_ref>
 1a8:	ldr	x0, [x19]
 1ac:	bl	20 <grub_ufs_mount>
 1b0:	mov	x19, x0
 1b4:	cbz	x0, 1f8 <grub_ufs_mtime+0x78>
 1b8:	ldr	x1, [x19, #1072]
 1bc:	ldr	w0, [x0, #32]
 1c0:	cmp	x1, w0, sxtw
 1c4:	csel	w0, w0, w1, le
 1c8:	str	w0, [x20]
 1cc:	ldr	x0, [x21]
 1d0:	bl	0 <grub_dl_unref>
 1d4:	mov	x0, x19
 1d8:	bl	0 <grub_free>
 1dc:	adrp	x0, 0 <grub_ufs_close>
 1e0:	ldp	x19, x20, [sp, #16]
 1e4:	ldr	x0, [x0]
 1e8:	ldr	x21, [sp, #32]
 1ec:	ldr	w0, [x0]
 1f0:	ldp	x29, x30, [sp], #48
 1f4:	ret
 1f8:	str	wzr, [x20]
 1fc:	b	1cc <grub_ufs_mtime+0x4c>
	...

0000000000000210 <grub_ufs_uuid>:
 210:	stp	x29, x30, [sp, #-48]!
 214:	adrp	x2, 0 <grub_ufs_close>
 218:	mov	x29, sp
 21c:	stp	x19, x20, [sp, #16]
 220:	mov	x20, x1
 224:	ldr	x19, [x0]
 228:	str	x21, [sp, #32]
 22c:	ldr	x21, [x2]
 230:	ldr	x0, [x21]
 234:	bl	0 <grub_dl_ref>
 238:	mov	x0, x19
 23c:	bl	20 <grub_ufs_mount>
 240:	mov	x19, x0
 244:	cbz	x0, 250 <grub_ufs_uuid+0x40>
 248:	ldr	x0, [x0, #144]
 24c:	cbnz	x0, 280 <grub_ufs_uuid+0x70>
 250:	str	xzr, [x20]
 254:	ldr	x0, [x21]
 258:	bl	0 <grub_dl_unref>
 25c:	mov	x0, x19
 260:	bl	0 <grub_free>
 264:	adrp	x0, 0 <grub_ufs_close>
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldr	x0, [x0]
 270:	ldr	x21, [sp, #32]
 274:	ldr	w0, [x0]
 278:	ldp	x29, x30, [sp], #48
 27c:	ret
 280:	adrp	x0, 0 <grub_ufs_close>
 284:	ldp	w1, w2, [x19, #144]
 288:	ldr	x0, [x0]
 28c:	bl	0 <grub_xasprintf>
 290:	str	x0, [x20]
 294:	b	254 <grub_ufs_uuid+0x44>
	...

00000000000002b0 <grub_ufs_label>:
 2b0:	stp	x29, x30, [sp, #-48]!
 2b4:	adrp	x2, 0 <grub_ufs_close>
 2b8:	mov	x29, sp
 2bc:	str	x21, [sp, #32]
 2c0:	ldr	x21, [x2]
 2c4:	stp	x19, x20, [sp, #16]
 2c8:	mov	x19, x0
 2cc:	mov	x20, x1
 2d0:	ldr	x0, [x21]
 2d4:	bl	0 <grub_dl_ref>
 2d8:	ldr	x0, [x19]
 2dc:	str	xzr, [x20]
 2e0:	bl	20 <grub_ufs_mount>
 2e4:	mov	x19, x0
 2e8:	cbz	x0, 2f8 <grub_ufs_label+0x48>
 2ec:	add	x0, x0, #0x2a8
 2f0:	bl	0 <grub_strdup>
 2f4:	str	x0, [x20]
 2f8:	ldr	x0, [x21]
 2fc:	bl	0 <grub_dl_unref>
 300:	mov	x0, x19
 304:	bl	0 <grub_free>
 308:	adrp	x0, 0 <grub_ufs_close>
 30c:	ldp	x19, x20, [sp, #16]
 310:	ldr	x0, [x0]
 314:	ldr	x21, [sp, #32]
 318:	ldr	w0, [x0]
 31c:	ldp	x29, x30, [sp], #48
 320:	ret
 324:	nop
	...

0000000000000338 <grub_ufs_read_file>:
 338:	stp	x29, x30, [sp, #-176]!
 33c:	mov	x29, sp
 340:	stp	x23, x24, [sp, #48]
 344:	mov	x24, x0
 348:	ldr	x0, [x0, #1400]
 34c:	stp	x19, x20, [sp, #16]
 350:	mov	x19, x3
 354:	add	x3, x4, x3
 358:	stp	x25, x26, [sp, #64]
 35c:	cmp	x3, x0
 360:	stp	x27, x28, [sp, #80]
 364:	mov	x25, x5
 368:	stp	x1, x2, [sp, #104]
 36c:	str	x3, [sp, #120]
 370:	str	x4, [sp, #152]
 374:	b.ls	384 <grub_ufs_read_file+0x4c>  // b.plast
 378:	sub	x1, x0, x19
 37c:	str	x0, [sp, #120]
 380:	str	x1, [sp, #152]
 384:	ldr	w27, [x24, #48]
 388:	ldr	x1, [sp, #120]
 38c:	mov	w20, w27
 390:	ldr	w0, [x24, #1648]
 394:	sub	x20, x20, #0x1
 398:	add	x20, x20, x1
 39c:	lsr	x28, x19, x0
 3a0:	lsr	x20, x20, x0
 3a4:	cmp	x20, x28
 3a8:	b.ls	4b8 <grub_ufs_read_file+0x180>  // b.plast
 3ac:	adrp	x0, 0 <grub_ufs_close>
 3b0:	stp	x21, x22, [sp, #32]
 3b4:	sub	x22, x20, #0x1
 3b8:	ldr	x21, [x0]
 3bc:	mov	w26, #0x1                   	// #1
 3c0:	cmp	x28, #0xb
 3c4:	b.ls	500 <grub_ufs_read_file+0x1c8>  // b.plast
 3c8:	ldr	w9, [x24, #1648]
 3cc:	sub	x0, x28, #0xc
 3d0:	ldr	w23, [x24, #100]
 3d4:	sub	w9, w9, #0x3
 3d8:	lsl	w8, w26, w9
 3dc:	sxtw	x12, w8
 3e0:	cmp	x0, w8, sxtw
 3e4:	b.cc	5c4 <grub_ufs_read_file+0x28c>  // b.lo, b.ul, b.last
 3e8:	smull	x2, w8, w8
 3ec:	sub	x12, x0, x12
 3f0:	cmp	x12, x2
 3f4:	b.cc	5ec <grub_ufs_read_file+0x2b4>  // b.lo, b.ul, b.last
 3f8:	lsl	w1, w9, #1
 3fc:	sub	x12, x12, x2
 400:	add	w0, w1, w9
 404:	lsr	x0, x12, x0
 408:	cbz	x0, 530 <grub_ufs_read_file+0x1f8>
 40c:	adrp	x0, 0 <grub_ufs_close>
 410:	ldr	x1, [x0]
 414:	mov	w0, #0x9                   	// #9
 418:	bl	0 <grub_error>
 41c:	mov	x1, #0x0                   	// #0
 420:	ldr	w0, [x21]
 424:	cbnz	w0, 510 <grub_ufs_read_file+0x1d8>
 428:	mov	w3, w27
 42c:	cmp	x22, x28
 430:	b.ne	44c <grub_ufs_read_file+0x114>  // b.any
 434:	ldr	w0, [x24, #48]
 438:	ldr	x2, [sp, #120]
 43c:	sub	w3, w0, #0x1
 440:	mov	w0, w0
 444:	ands	x3, x3, x2
 448:	csel	x3, x0, x3, eq  // eq = none
 44c:	ldr	w0, [x24, #1648]
 450:	mov	x2, #0x0                   	// #0
 454:	mov	w23, #0x0                   	// #0
 458:	lsr	x0, x19, x0
 45c:	cmp	x0, x28
 460:	b.eq	4d4 <grub_ufs_read_file+0x19c>  // b.none
 464:	cbz	x1, 4ec <grub_ufs_read_file+0x1b4>
 468:	ldr	x0, [x24, #1376]
 46c:	mov	x4, x25
 470:	ldr	x5, [sp, #104]
 474:	ldr	w9, [x24, #100]
 478:	str	x5, [x0, #48]
 47c:	ldr	x5, [sp, #112]
 480:	str	x5, [x0, #56]
 484:	lsl	x1, x1, x9
 488:	bl	0 <grub_disk_read>
 48c:	ldr	x1, [x24, #1376]
 490:	ldr	w0, [x21]
 494:	str	xzr, [x1, #48]
 498:	cbnz	w0, 510 <grub_ufs_read_file+0x1d8>
 49c:	ldr	w27, [x24, #48]
 4a0:	add	x28, x28, #0x1
 4a4:	cmp	x20, x28
 4a8:	sub	w8, w27, w23
 4ac:	add	x25, x25, x8
 4b0:	b.ne	3c0 <grub_ufs_read_file+0x88>  // b.any
 4b4:	ldp	x21, x22, [sp, #32]
 4b8:	ldp	x19, x20, [sp, #16]
 4bc:	ldp	x23, x24, [sp, #48]
 4c0:	ldp	x25, x26, [sp, #64]
 4c4:	ldp	x27, x28, [sp, #80]
 4c8:	ldr	x0, [sp, #152]
 4cc:	ldp	x29, x30, [sp], #176
 4d0:	ret
 4d4:	sub	w2, w27, #0x1
 4d8:	and	x2, x2, x19
 4dc:	mov	w23, w2
 4e0:	sub	x3, x3, w2, sxtw
 4e4:	sxtw	x2, w2
 4e8:	cbnz	x1, 468 <grub_ufs_read_file+0x130>
 4ec:	mov	x2, x3
 4f0:	mov	x0, x25
 4f4:	mov	w1, #0x0                   	// #0
 4f8:	bl	0 <grub_memset>
 4fc:	b	49c <grub_ufs_read_file+0x164>
 500:	add	x0, x24, #0x5d8
 504:	ldr	x1, [x0, x28, lsl #3]
 508:	ldr	w0, [x21]
 50c:	cbz	w0, 428 <grub_ufs_read_file+0xf0>
 510:	mov	x0, #0xffffffffffffffff    	// #-1
 514:	ldp	x19, x20, [sp, #16]
 518:	ldp	x21, x22, [sp, #32]
 51c:	ldp	x23, x24, [sp, #48]
 520:	ldp	x25, x26, [sp, #64]
 524:	ldp	x27, x28, [sp, #80]
 528:	ldp	x29, x30, [sp], #176
 52c:	ret
 530:	lsr	x2, x12, x1
 534:	add	x4, sp, #0xa8
 538:	ldr	x0, [x24, #1376]
 53c:	lsl	x2, x2, #3
 540:	ldr	x1, [x24, #1608]
 544:	mov	x3, #0x8                   	// #8
 548:	str	x12, [sp, #128]
 54c:	str	w9, [sp, #136]
 550:	lsl	x1, x1, x23
 554:	str	w8, [sp, #148]
 558:	bl	0 <grub_disk_read>
 55c:	ldr	w8, [sp, #148]
 560:	add	x4, sp, #0xa8
 564:	ldr	x12, [sp, #128]
 568:	sub	w8, w8, #0x1
 56c:	ldr	w9, [sp, #136]
 570:	mov	x3, #0x8                   	// #8
 574:	ldr	x1, [sp, #168]
 578:	sxtw	x8, w8
 57c:	ldr	x0, [x24, #1376]
 580:	lsr	x2, x12, x9
 584:	and	x2, x2, x8
 588:	lsl	x1, x1, x23
 58c:	stp	x8, x12, [sp, #128]
 590:	lsl	x2, x2, #3
 594:	bl	0 <grub_disk_read>
 598:	ldp	x8, x12, [sp, #128]
 59c:	add	x4, sp, #0xa8
 5a0:	ldr	x1, [sp, #168]
 5a4:	mov	x3, #0x8                   	// #8
 5a8:	ldr	x0, [x24, #1376]
 5ac:	and	x12, x12, x8
 5b0:	lsl	x1, x1, x23
 5b4:	lsl	x2, x12, #3
 5b8:	bl	0 <grub_disk_read>
 5bc:	ldr	x1, [sp, #168]
 5c0:	b	420 <grub_ufs_read_file+0xe8>
 5c4:	ldr	x0, [x24, #1376]
 5c8:	lsl	x2, x28, #3
 5cc:	ldr	x1, [x24, #1592]
 5d0:	sub	x2, x2, #0x60
 5d4:	add	x4, sp, #0xa8
 5d8:	mov	x3, #0x8                   	// #8
 5dc:	lsl	x1, x1, x23
 5e0:	bl	0 <grub_disk_read>
 5e4:	ldr	x1, [sp, #168]
 5e8:	b	420 <grub_ufs_read_file+0xe8>
 5ec:	ldr	x0, [x24, #1376]
 5f0:	lsr	x2, x12, x9
 5f4:	ldr	x1, [x24, #1600]
 5f8:	lsl	x2, x2, #3
 5fc:	add	x4, sp, #0xa8
 600:	mov	x3, #0x8                   	// #8
 604:	str	x12, [sp, #128]
 608:	lsl	x1, x1, x23
 60c:	str	w8, [sp, #136]
 610:	bl	0 <grub_disk_read>
 614:	ldr	w8, [sp, #136]
 618:	add	x4, sp, #0xa8
 61c:	ldr	x12, [sp, #128]
 620:	sub	w2, w8, #0x1
 624:	ldr	x1, [sp, #168]
 628:	sxtw	x2, w2
 62c:	ldr	x0, [x24, #1376]
 630:	and	x2, x2, x12
 634:	lsl	x1, x1, x23
 638:	mov	x3, #0x8                   	// #8
 63c:	lsl	x2, x2, #3
 640:	bl	0 <grub_disk_read>
 644:	ldr	x1, [sp, #168]
 648:	b	420 <grub_ufs_read_file+0xe8>
 64c:	nop
	...

0000000000000660 <grub_ufs_read>:
 660:	mov	x6, x0
 664:	mov	x5, x1
 668:	ldr	x3, [x0, #24]
 66c:	mov	x4, x2
 670:	ldp	x0, x1, [x0, #80]
 674:	ldr	x2, [x6, #96]
 678:	b	338 <grub_ufs_read_file>
 67c:	nop

0000000000000680 <grub_ufs_find_file>:
 680:	stp	x29, x30, [sp, #-112]!
 684:	mov	x29, sp
 688:	stp	x21, x22, [sp, #32]
 68c:	mov	x21, x0
 690:	mov	x0, x1
 694:	str	x27, [sp, #80]
 698:	mov	x27, x1
 69c:	bl	0 <grub_strlen>
 6a0:	add	x0, x0, #0x2
 6a4:	bl	0 <grub_malloc>
 6a8:	cbz	x0, 808 <grub_ufs_find_file+0x188>
 6ac:	stp	x23, x24, [sp, #48]
 6b0:	mov	x24, x0
 6b4:	stp	x25, x26, [sp, #64]
 6b8:	mov	x25, x27
 6bc:	stp	x19, x20, [sp, #16]
 6c0:	ldrb	w0, [x25]
 6c4:	cmp	w0, #0x2f
 6c8:	b.ne	6dc <grub_ufs_find_file+0x5c>  // b.any
 6cc:	nop
 6d0:	ldrb	w0, [x25, #1]!
 6d4:	cmp	w0, #0x2f
 6d8:	b.eq	6d0 <grub_ufs_find_file+0x50>  // b.none
 6dc:	cbz	w0, 998 <grub_ufs_find_file+0x318>
 6e0:	ldrh	w0, [x21, #1384]
 6e4:	and	w0, w0, #0xe000
 6e8:	cmp	w0, #0x4, lsl #12
 6ec:	b.ne	97c <grub_ufs_find_file+0x2fc>  // b.any
 6f0:	ldrb	w0, [x25]
 6f4:	mov	x26, x25
 6f8:	cmp	w0, #0x2f
 6fc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 700:	b.eq	718 <grub_ufs_find_file+0x98>  // b.none
 704:	nop
 708:	ldrb	w0, [x26, #1]!
 70c:	cmp	w0, #0x2f
 710:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 714:	b.ne	708 <grub_ufs_find_file+0x88>  // b.any
 718:	ldr	x0, [x21, #1400]
 71c:	cbz	x0, 7e8 <grub_ufs_find_file+0x168>
 720:	sub	x22, x26, x25
 724:	mov	w19, #0x0                   	// #0
 728:	mov	x20, #0x0                   	// #0
 72c:	b	798 <grub_ufs_find_file+0x118>
 730:	ldrb	w23, [sp, #111]
 734:	add	x3, x20, #0x8
 738:	mov	x5, x24
 73c:	mov	x2, #0x0                   	// #0
 740:	cmp	x23, x22
 744:	b.lt	780 <grub_ufs_find_file+0x100>  // b.tstop
 748:	cinc	x4, x22, ne  // ne = any
 74c:	mov	x0, x21
 750:	mov	x1, #0x0                   	// #0
 754:	bl	338 <grub_ufs_read_file>
 758:	tbnz	x0, #63, 7b8 <grub_ufs_find_file+0x138>
 75c:	mov	x2, x22
 760:	mov	x1, x24
 764:	mov	x0, x25
 768:	bl	0 <grub_strncmp>
 76c:	cbnz	w0, 780 <grub_ufs_find_file+0x100>
 770:	cmp	x23, x22
 774:	b.eq	824 <grub_ufs_find_file+0x1a4>  // b.none
 778:	ldrb	w0, [x24, x22]
 77c:	cbz	w0, 824 <grub_ufs_find_file+0x1a4>
 780:	ldrh	w1, [sp, #108]
 784:	ldr	x0, [x21, #1400]
 788:	add	w20, w19, w1
 78c:	mov	x19, x20
 790:	cmp	x0, w20, uxtw
 794:	b.ls	7e8 <grub_ufs_find_file+0x168>  // b.plast
 798:	add	x5, sp, #0x68
 79c:	mov	x3, x20
 7a0:	mov	x0, x21
 7a4:	mov	x4, #0x8                   	// #8
 7a8:	mov	x2, #0x0                   	// #0
 7ac:	mov	x1, #0x0                   	// #0
 7b0:	bl	338 <grub_ufs_read_file>
 7b4:	tbz	x0, #63, 730 <grub_ufs_find_file+0xb0>
 7b8:	adrp	x0, 0 <grub_ufs_close>
 7bc:	ldr	x19, [x0]
 7c0:	mov	x0, x24
 7c4:	bl	0 <grub_free>
 7c8:	ldr	w0, [x19]
 7cc:	ldp	x19, x20, [sp, #16]
 7d0:	ldp	x23, x24, [sp, #48]
 7d4:	ldp	x25, x26, [sp, #64]
 7d8:	ldp	x21, x22, [sp, #32]
 7dc:	ldr	x27, [sp, #80]
 7e0:	ldp	x29, x30, [sp], #112
 7e4:	ret
 7e8:	adrp	x1, 0 <grub_ufs_close>
 7ec:	mov	x2, x27
 7f0:	mov	w0, #0x5                   	// #5
 7f4:	ldr	x1, [x1]
 7f8:	bl	0 <grub_error>
 7fc:	adrp	x0, 0 <grub_ufs_close>
 800:	ldr	x19, [x0]
 804:	b	7c0 <grub_ufs_find_file+0x140>
 808:	adrp	x0, 0 <grub_ufs_close>
 80c:	ldp	x21, x22, [sp, #32]
 810:	ldr	x0, [x0]
 814:	ldr	x27, [sp, #80]
 818:	ldr	w0, [x0]
 81c:	ldp	x29, x30, [sp], #112
 820:	ret
 824:	ldr	w5, [sp, #104]
 828:	add	x20, x21, #0x568
 82c:	ldp	w1, w8, [x21, #184]
 830:	mov	x4, x20
 834:	ldr	w7, [x21, #16]
 838:	mov	x3, #0x100                 	// #256
 83c:	ldr	w6, [x21, #100]
 840:	udiv	w2, w5, w1
 844:	ldr	w19, [x21, #1640]
 848:	str	w5, [x21, #1640]
 84c:	ldr	x0, [x21, #1376]
 850:	msub	w1, w2, w1, w5
 854:	madd	w5, w2, w8, w7
 858:	cmp	w1, #0x0
 85c:	and	w2, w1, #0x1
 860:	cneg	w2, w2, lt  // lt = tstop
 864:	add	w1, w1, w1, lsr #31
 868:	lsl	w5, w5, w6
 86c:	add	w1, w5, w1, asr #1
 870:	sbfiz	x2, x2, #8, #32
 874:	bl	0 <grub_disk_read>
 878:	ldrh	w0, [x21, #1384]
 87c:	and	w0, w0, #0xe000
 880:	cmp	w0, #0xa, lsl #12
 884:	b.eq	890 <grub_ufs_find_file+0x210>  // b.none
 888:	mov	x25, x26
 88c:	b	6c0 <grub_ufs_find_file+0x40>
 890:	ldr	w0, [x21, #1644]
 894:	ldr	x23, [x21, #1400]
 898:	add	w0, w0, #0x1
 89c:	str	w0, [x21, #1644]
 8a0:	cmp	w0, #0x8
 8a4:	b.gt	9b4 <grub_ufs_find_file+0x334>
 8a8:	add	x0, x23, #0x1
 8ac:	bl	0 <grub_malloc>
 8b0:	mov	x22, x0
 8b4:	cbz	x0, 9d8 <grub_ufs_find_file+0x358>
 8b8:	ldr	x1, [x21, #1408]
 8bc:	cbnz	x1, 8cc <grub_ufs_find_file+0x24c>
 8c0:	ldr	x1, [x21, #1400]
 8c4:	cmp	x1, #0x78
 8c8:	b.ls	9e4 <grub_ufs_find_file+0x364>  // b.plast
 8cc:	mov	x5, x22
 8d0:	mov	x4, x23
 8d4:	mov	x0, x21
 8d8:	mov	x3, #0x0                   	// #0
 8dc:	mov	x2, #0x0                   	// #0
 8e0:	mov	x1, #0x0                   	// #0
 8e4:	bl	338 <grub_ufs_read_file>
 8e8:	tbnz	x0, #63, 9d0 <grub_ufs_find_file+0x350>
 8ec:	strb	wzr, [x22, x23]
 8f0:	ldrb	w0, [x22]
 8f4:	cmp	w0, #0x2f
 8f8:	b.ne	900 <grub_ufs_find_file+0x280>  // b.any
 8fc:	mov	w19, #0x2                   	// #2
 900:	ldp	w1, w8, [x21, #184]
 904:	str	w19, [x21, #1640]
 908:	ldr	w7, [x21, #16]
 90c:	mov	x4, x20
 910:	ldr	w6, [x21, #100]
 914:	mov	x3, #0x100                 	// #256
 918:	udiv	w2, w19, w1
 91c:	ldr	x0, [x21, #1376]
 920:	msub	w1, w2, w1, w19
 924:	madd	w5, w2, w8, w7
 928:	cmp	w1, #0x0
 92c:	and	w2, w1, #0x1
 930:	cneg	w2, w2, lt  // lt = tstop
 934:	add	w1, w1, w1, lsr #31
 938:	lsl	w5, w5, w6
 93c:	add	w1, w5, w1, asr #1
 940:	sbfiz	x2, x2, #8, #32
 944:	bl	0 <grub_disk_read>
 948:	adrp	x0, 0 <grub_ufs_close>
 94c:	ldr	x19, [x0]
 950:	ldr	w0, [x19]
 954:	cbnz	w0, 964 <grub_ufs_find_file+0x2e4>
 958:	mov	x1, x22
 95c:	mov	x0, x21
 960:	bl	680 <grub_ufs_find_file>
 964:	mov	x0, x22
 968:	bl	0 <grub_free>
 96c:	ldr	w0, [x19]
 970:	cbnz	w0, 7c0 <grub_ufs_find_file+0x140>
 974:	mov	x25, x26
 978:	b	6c0 <grub_ufs_find_file+0x40>
 97c:	adrp	x1, 0 <grub_ufs_close>
 980:	mov	w0, #0x4                   	// #4
 984:	ldr	x1, [x1]
 988:	bl	0 <grub_error>
 98c:	adrp	x0, 0 <grub_ufs_close>
 990:	ldr	x19, [x0]
 994:	b	7c0 <grub_ufs_find_file+0x140>
 998:	mov	x0, x24
 99c:	bl	0 <grub_free>
 9a0:	mov	w0, #0x0                   	// #0
 9a4:	ldp	x19, x20, [sp, #16]
 9a8:	ldp	x23, x24, [sp, #48]
 9ac:	ldp	x25, x26, [sp, #64]
 9b0:	b	7d8 <grub_ufs_find_file+0x158>
 9b4:	adrp	x1, 0 <grub_ufs_close>
 9b8:	mov	w0, #0x19                  	// #25
 9bc:	ldr	x1, [x1]
 9c0:	bl	0 <grub_error>
 9c4:	adrp	x0, 0 <grub_ufs_close>
 9c8:	ldr	x19, [x0]
 9cc:	b	96c <grub_ufs_find_file+0x2ec>
 9d0:	mov	x0, x22
 9d4:	bl	0 <grub_free>
 9d8:	adrp	x0, 0 <grub_ufs_close>
 9dc:	ldr	x19, [x0]
 9e0:	b	96c <grub_ufs_find_file+0x2ec>
 9e4:	add	x1, x21, #0x5d8
 9e8:	bl	0 <grub_strcpy>
 9ec:	b	8ec <grub_ufs_find_file+0x26c>
	...

0000000000000a10 <grub_ufs_open>:
 a10:	stp	x29, x30, [sp, #-48]!
 a14:	mov	x29, sp
 a18:	stp	x21, x22, [sp, #32]
 a1c:	mov	x21, x0
 a20:	ldr	x0, [x0, #8]
 a24:	stp	x19, x20, [sp, #16]
 a28:	mov	x20, x1
 a2c:	ldr	x0, [x0]
 a30:	bl	20 <grub_ufs_mount>
 a34:	cbz	x0, ac0 <grub_ufs_open+0xb0>
 a38:	ldp	w6, w1, [x0, #184]
 a3c:	mov	w5, #0x2                   	// #2
 a40:	ldr	w8, [x0, #16]
 a44:	mov	x19, x0
 a48:	ldr	w7, [x0, #100]
 a4c:	add	x4, x0, #0x568
 a50:	udiv	w2, w5, w6
 a54:	mov	x3, #0x100                 	// #256
 a58:	ldr	x0, [x0, #1376]
 a5c:	str	w5, [x19, #1640]
 a60:	madd	w1, w2, w1, w8
 a64:	msub	w2, w2, w6, w5
 a68:	lsl	w1, w1, w7
 a6c:	add	w1, w1, w2, asr #1
 a70:	ubfiz	x2, x2, #8, #1
 a74:	bl	0 <grub_disk_read>
 a78:	adrp	x0, 0 <grub_ufs_close>
 a7c:	ldr	x22, [x0]
 a80:	ldr	w0, [x22]
 a84:	cbnz	w0, adc <grub_ufs_open+0xcc>
 a88:	cbz	x20, a98 <grub_ufs_open+0x88>
 a8c:	ldrb	w0, [x20]
 a90:	cmp	w0, #0x2f
 a94:	b.eq	af8 <grub_ufs_open+0xe8>  // b.none
 a98:	adrp	x1, 0 <grub_ufs_close>
 a9c:	mov	x2, x20
 aa0:	mov	w0, #0x7                   	// #7
 aa4:	ldr	x1, [x1]
 aa8:	bl	0 <grub_error>
 aac:	ldr	w0, [x22]
 ab0:	ldp	x19, x20, [sp, #16]
 ab4:	ldp	x21, x22, [sp, #32]
 ab8:	ldp	x29, x30, [sp], #48
 abc:	ret
 ac0:	adrp	x0, 0 <grub_ufs_close>
 ac4:	ldp	x19, x20, [sp, #16]
 ac8:	ldr	x0, [x0]
 acc:	ldp	x21, x22, [sp, #32]
 ad0:	ldr	w0, [x0]
 ad4:	ldp	x29, x30, [sp], #48
 ad8:	ret
 adc:	mov	x0, x19
 ae0:	bl	0 <grub_free>
 ae4:	ldr	w0, [x22]
 ae8:	ldp	x19, x20, [sp, #16]
 aec:	ldp	x21, x22, [sp, #32]
 af0:	ldp	x29, x30, [sp], #48
 af4:	ret
 af8:	mov	x1, x20
 afc:	mov	x0, x19
 b00:	bl	680 <grub_ufs_find_file>
 b04:	ldr	w0, [x22]
 b08:	cbnz	w0, adc <grub_ufs_open+0xcc>
 b0c:	ldr	x1, [x19, #1400]
 b10:	str	x1, [x21, #64]
 b14:	str	x19, [x21, #80]
 b18:	ldp	x19, x20, [sp, #16]
 b1c:	ldp	x21, x22, [sp, #32]
 b20:	ldp	x29, x30, [sp], #48
 b24:	ret
	...

0000000000000b38 <grub_ufs_dir>:
 b38:	stp	x29, x30, [sp, #-368]!
 b3c:	mov	x29, sp
 b40:	ldr	x0, [x0]
 b44:	stp	x19, x20, [sp, #16]
 b48:	mov	x20, x1
 b4c:	stp	x21, x22, [sp, #32]
 b50:	mov	x21, x2
 b54:	mov	x22, x3
 b58:	bl	20 <grub_ufs_mount>
 b5c:	cbz	x0, c04 <grub_ufs_dir+0xcc>
 b60:	ldp	w6, w1, [x0, #184]
 b64:	mov	w2, #0x2                   	// #2
 b68:	ldr	w8, [x0, #16]
 b6c:	mov	x19, x0
 b70:	ldr	w7, [x0, #100]
 b74:	add	x4, x0, #0x568
 b78:	udiv	w5, w2, w6
 b7c:	stp	x23, x24, [sp, #48]
 b80:	mov	x3, #0x100                 	// #256
 b84:	ldr	x0, [x0, #1376]
 b88:	str	w2, [x19, #1640]
 b8c:	madd	w1, w5, w1, w8
 b90:	msub	w2, w5, w6, w2
 b94:	lsl	w1, w1, w7
 b98:	add	w1, w1, w2, asr #1
 b9c:	ubfiz	x2, x2, #8, #1
 ba0:	bl	0 <grub_disk_read>
 ba4:	adrp	x0, 0 <grub_ufs_close>
 ba8:	ldr	x23, [x0]
 bac:	ldr	w0, [x23]
 bb0:	cbnz	w0, bf0 <grub_ufs_dir+0xb8>
 bb4:	cbz	x20, bc4 <grub_ufs_dir+0x8c>
 bb8:	ldrb	w0, [x20]
 bbc:	cmp	w0, #0x2f
 bc0:	b.eq	c20 <grub_ufs_dir+0xe8>  // b.none
 bc4:	adrp	x1, 0 <grub_ufs_close>
 bc8:	mov	x2, x20
 bcc:	mov	w0, #0x7                   	// #7
 bd0:	ldr	x1, [x1]
 bd4:	bl	0 <grub_error>
 bd8:	ldr	w0, [x23]
 bdc:	ldp	x19, x20, [sp, #16]
 be0:	ldp	x21, x22, [sp, #32]
 be4:	ldp	x23, x24, [sp, #48]
 be8:	ldp	x29, x30, [sp], #368
 bec:	ret
 bf0:	ldp	x19, x20, [sp, #16]
 bf4:	ldp	x21, x22, [sp, #32]
 bf8:	ldp	x23, x24, [sp, #48]
 bfc:	ldp	x29, x30, [sp], #368
 c00:	ret
 c04:	adrp	x0, 0 <grub_ufs_close>
 c08:	ldp	x19, x20, [sp, #16]
 c0c:	ldr	x0, [x0]
 c10:	ldp	x21, x22, [sp, #32]
 c14:	ldr	w0, [x0]
 c18:	ldp	x29, x30, [sp], #368
 c1c:	ret
 c20:	mov	x1, x20
 c24:	mov	x0, x19
 c28:	bl	680 <grub_ufs_find_file>
 c2c:	ldr	w24, [x23]
 c30:	cbnz	w24, d80 <grub_ufs_dir+0x248>
 c34:	ldrh	w0, [x19, #1384]
 c38:	and	w0, w0, #0xe000
 c3c:	cmp	w0, #0x4, lsl #12
 c40:	b.ne	da0 <grub_ufs_dir+0x268>  // b.any
 c44:	ldr	x0, [x19, #1400]
 c48:	cbz	x0, d80 <grub_ufs_dir+0x248>
 c4c:	stp	x25, x26, [sp, #64]
 c50:	mov	x26, #0x0                   	// #0
 c54:	b	d5c <grub_ufs_dir+0x224>
 c58:	ldrh	w0, [sp, #92]
 c5c:	cbz	w0, d7c <grub_ufs_dir+0x244>
 c60:	ldrb	w4, [sp, #95]
 c64:	add	w0, w4, #0x1
 c68:	and	x25, x4, #0xff
 c6c:	sxtw	x0, w0
 c70:	bl	0 <grub_malloc>
 c74:	mov	x2, #0x10                  	// #16
 c78:	mov	x20, x0
 c7c:	mov	w1, #0x0                   	// #0
 c80:	add	x0, sp, #0x60
 c84:	cbz	x20, d7c <grub_ufs_dir+0x244>
 c88:	bl	0 <grub_memset>
 c8c:	add	x3, x26, #0x8
 c90:	mov	x4, x25
 c94:	mov	x5, x20
 c98:	mov	x0, x19
 c9c:	mov	x2, #0x0                   	// #0
 ca0:	mov	x1, #0x0                   	// #0
 ca4:	bl	338 <grub_ufs_read_file>
 ca8:	add	x4, sp, #0x70
 cac:	mov	x3, #0x100                 	// #256
 cb0:	tbnz	x0, #63, db4 <grub_ufs_dir+0x27c>
 cb4:	strb	wzr, [x20, x25]
 cb8:	ldp	w1, w8, [x19, #184]
 cbc:	ldr	w6, [sp, #88]
 cc0:	ldr	w5, [x19, #16]
 cc4:	ldr	w7, [x19, #100]
 cc8:	ldr	x0, [x19, #1376]
 ccc:	udiv	w2, w6, w1
 cd0:	msub	w1, w2, w1, w6
 cd4:	madd	w5, w2, w8, w5
 cd8:	cmp	w1, #0x0
 cdc:	and	w2, w1, #0x1
 ce0:	cneg	w2, w2, lt  // lt = tstop
 ce4:	add	w1, w1, w1, lsr #31
 ce8:	lsl	w5, w5, w7
 cec:	add	w1, w5, w1, asr #1
 cf0:	sbfiz	x2, x2, #8, #32
 cf4:	bl	0 <grub_disk_read>
 cf8:	ldrh	w0, [sp, #112]
 cfc:	add	x1, sp, #0x60
 d00:	ldrb	w3, [sp, #96]
 d04:	mov	x2, x22
 d08:	and	w0, w0, #0xe000
 d0c:	cmp	w0, #0x4, lsl #12
 d10:	and	w3, w3, #0xfffffffc
 d14:	cset	w4, eq  // eq = none
 d18:	mov	x0, x20
 d1c:	orr	w4, w4, #0x2
 d20:	ldr	x5, [sp, #152]
 d24:	orr	w3, w3, w4
 d28:	strb	w3, [sp, #96]
 d2c:	str	w5, [sp, #100]
 d30:	blr	x21
 d34:	mov	w1, w0
 d38:	mov	x0, x20
 d3c:	cbnz	w1, dc4 <grub_ufs_dir+0x28c>
 d40:	bl	0 <grub_free>
 d44:	ldrh	w1, [sp, #92]
 d48:	ldr	x0, [x19, #1400]
 d4c:	add	w26, w24, w1
 d50:	mov	x24, x26
 d54:	cmp	x0, w26, uxtw
 d58:	b.ls	d7c <grub_ufs_dir+0x244>  // b.plast
 d5c:	add	x5, sp, #0x58
 d60:	mov	x3, x26
 d64:	mov	x0, x19
 d68:	mov	x4, #0x8                   	// #8
 d6c:	mov	x2, #0x0                   	// #0
 d70:	mov	x1, #0x0                   	// #0
 d74:	bl	338 <grub_ufs_read_file>
 d78:	tbz	x0, #63, c58 <grub_ufs_dir+0x120>
 d7c:	ldp	x25, x26, [sp, #64]
 d80:	mov	x0, x19
 d84:	bl	0 <grub_free>
 d88:	ldr	w0, [x23]
 d8c:	ldp	x19, x20, [sp, #16]
 d90:	ldp	x21, x22, [sp, #32]
 d94:	ldp	x23, x24, [sp, #48]
 d98:	ldp	x29, x30, [sp], #368
 d9c:	ret
 da0:	adrp	x1, 0 <grub_ufs_close>
 da4:	mov	w0, #0x4                   	// #4
 da8:	ldr	x1, [x1]
 dac:	bl	0 <grub_error>
 db0:	b	d80 <grub_ufs_dir+0x248>
 db4:	mov	x0, x20
 db8:	bl	0 <grub_free>
 dbc:	ldp	x25, x26, [sp, #64]
 dc0:	b	d80 <grub_ufs_dir+0x248>
 dc4:	bl	0 <grub_free>
 dc8:	ldp	x25, x26, [sp, #64]
 dcc:	b	d80 <grub_ufs_dir+0x248>
	...

0000000000000de8 <grub_mod_init>:
 de8:	stp	x29, x30, [sp, #-32]!
 dec:	adrp	x2, 0 <grub_ufs_close>
 df0:	adrp	x1, 0 <grub_ufs_close>
 df4:	mov	x29, sp
 df8:	str	x19, [sp, #16]
 dfc:	mov	x19, x0
 e00:	ldr	x0, [x2]
 e04:	ldr	x1, [x1]
 e08:	add	x1, x1, #0x18
 e0c:	bl	0 <grub_list_push>
 e10:	adrp	x0, 0 <grub_ufs_close>
 e14:	ldr	x0, [x0]
 e18:	str	x19, [x0]
 e1c:	ldr	x19, [sp, #16]
 e20:	ldp	x29, x30, [sp], #32
 e24:	ret
	...

0000000000000e40 <grub_mod_fini>:
 e40:	adrp	x0, 0 <grub_ufs_close>
 e44:	ldr	x0, [x0]
 e48:	add	x0, x0, #0x18
 e4c:	b	0 <grub_list_remove>
	...
