In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libncurses++w.a_clang_-Os:

cursesf.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN16NCursesFormFieldD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
  10:	mov	x8, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x9, [x9]
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x8]
  24:	cbz	x0, 30 <_ZN16NCursesFormFieldD1Ev+0x30>
  28:	bl	0 <free_field>
  2c:	cbnz	w0, 3c <_ZN16NCursesFormFieldD1Ev+0x3c>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	w19, w0
  40:	mov	w0, #0x18                  	// #24
  44:	bl	0 <__cxa_allocate_exception>
  48:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
  4c:	ldr	x8, [x8]
  50:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
  54:	add	x9, x9, #0x0
  58:	str	w19, [x0, #16]
  5c:	add	x8, x8, #0x10
  60:	stp	x8, x9, [x0]
  64:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
  68:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
  6c:	ldr	x1, [x1]
  70:	ldr	x2, [x2]
  74:	bl	0 <__cxa_throw>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <__cxa_call_unexpected>

0000000000000080 <_ZN16NCursesFormFieldD0Ev>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	str	x21, [sp, #16]
  88:	stp	x20, x19, [sp, #32]
  8c:	mov	x29, sp
  90:	mov	x19, x0
  94:	bl	0 <_ZN16NCursesFormFieldD1Ev>
  98:	mov	x0, x19
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <_ZdlPv>
  ac:	mov	x20, x0
  b0:	mov	x0, x19
  b4:	mov	x21, x1
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x20
  c0:	tbz	w21, #31, c8 <_ZN16NCursesFormFieldD0Ev+0x48>
  c4:	bl	0 <__cxa_call_unexpected>
  c8:	bl	0 <_Unwind_Resume>

00000000000000cc <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>:
  cc:	stp	x29, x30, [sp, #-48]!
  d0:	stp	x22, x21, [sp, #16]
  d4:	stp	x20, x19, [sp, #32]
  d8:	mov	x29, sp
  dc:	ldr	x8, [x1]
  e0:	mov	x20, x1
  e4:	mov	x19, x0
  e8:	ldr	x22, [x8, #8]
  ec:	mov	w8, #0x1                   	// #1
  f0:	cbz	x22, 108 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x3c>
  f4:	ldr	x9, [x20, x8, lsl #3]
  f8:	add	x8, x8, #0x1
  fc:	ldr	x9, [x9, #8]
 100:	cbnz	x9, f4 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x28>
 104:	sxtw	x8, w8
 108:	lsl	x9, x8, #3
 10c:	cmp	xzr, x8, lsr #61
 110:	csinv	x0, x9, xzr, eq  // eq = none
 114:	bl	0 <_Znam>
 118:	mov	x21, x0
 11c:	cbz	x22, 13c <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x70>
 120:	add	x9, x20, #0x8
 124:	mov	x8, x21
 128:	str	x22, [x8], #8
 12c:	ldr	x10, [x9], #8
 130:	ldr	x22, [x10, #8]
 134:	cbnz	x22, 128 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x5c>
 138:	b	140 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x74>
 13c:	mov	x8, x21
 140:	str	xzr, [x8]
 144:	ldr	x0, [x19, #56]
 148:	str	x20, [x19, #80]
 14c:	cbz	x0, 170 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xa4>
 150:	bl	0 <form_fields>
 154:	cbz	x0, 170 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xa4>
 158:	mov	x20, x0
 15c:	ldr	x0, [x19, #56]
 160:	mov	x1, xzr
 164:	bl	0 <set_form_fields>
 168:	mov	x0, x20
 16c:	bl	0 <_ZdaPv>
 170:	mov	x0, x21
 174:	ldp	x20, x19, [sp, #32]
 178:	ldp	x22, x21, [sp, #16]
 17c:	ldp	x29, x30, [sp], #48
 180:	ret

0000000000000184 <_ZN11NCursesForm20setDefaultAttributesEv>:
 184:	stp	x29, x30, [sp, #-64]!
 188:	stp	x24, x23, [sp, #16]
 18c:	stp	x22, x21, [sp, #32]
 190:	stp	x20, x19, [sp, #48]
 194:	mov	x29, sp
 198:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 19c:	ldr	x8, [x8]
 1a0:	mov	x20, x0
 1a4:	ldr	x0, [x0, #56]
 1a8:	ldr	x19, [x8]
 1ac:	bl	0 <field_count>
 1b0:	cmp	w0, #0x1
 1b4:	b.lt	280 <_ZN11NCursesForm20setDefaultAttributesEv+0xfc>  // b.tstop
 1b8:	mov	x21, xzr
 1bc:	mov	w22, w0
 1c0:	mov	w23, #0xa                   	// #10
 1c4:	ldr	x0, [x20, #56]
 1c8:	bl	0 <field_count>
 1cc:	cmp	x21, w0, sxtw
 1d0:	b.ge	2f0 <_ZN11NCursesForm20setDefaultAttributesEv+0x16c>  // b.tcont
 1d4:	ldr	x8, [x20, #80]
 1d8:	ldr	x24, [x8, x21, lsl #3]
 1dc:	ldr	x0, [x24, #8]
 1e0:	bl	0 <field_opts>
 1e4:	bics	wzr, w23, w0
 1e8:	b.ne	24c <_ZN11NCursesForm20setDefaultAttributesEv+0xc8>  // b.any
 1ec:	cbz	x19, 238 <_ZN11NCursesForm20setDefaultAttributesEv+0xb4>
 1f0:	ldr	x8, [x19]
 1f4:	mov	x0, x19
 1f8:	ldr	x8, [x8, #72]
 1fc:	blr	x8
 200:	ldr	x8, [x24, #8]
 204:	mov	w1, w0
 208:	mov	x0, x8
 20c:	bl	0 <set_field_fore>
 210:	cbnz	w0, 368 <_ZN11NCursesForm20setDefaultAttributesEv+0x1e4>
 214:	ldr	x8, [x19]
 218:	mov	x0, x19
 21c:	ldr	x8, [x8, #80]
 220:	blr	x8
 224:	ldr	x8, [x24, #8]
 228:	mov	w1, w0
 22c:	mov	x0, x8
 230:	bl	0 <set_field_back>
 234:	cbnz	w0, 3a4 <_ZN11NCursesForm20setDefaultAttributesEv+0x220>
 238:	ldr	x0, [x24, #8]
 23c:	mov	w1, #0x5f                  	// #95
 240:	bl	0 <set_field_pad>
 244:	cbz	w0, 274 <_ZN11NCursesForm20setDefaultAttributesEv+0xf0>
 248:	b	32c <_ZN11NCursesForm20setDefaultAttributesEv+0x1a8>
 24c:	cbz	x19, 274 <_ZN11NCursesForm20setDefaultAttributesEv+0xf0>
 250:	ldr	x8, [x19]
 254:	mov	x0, x19
 258:	ldr	x8, [x8, #96]
 25c:	blr	x8
 260:	ldr	x8, [x24, #8]
 264:	mov	w1, w0
 268:	mov	x0, x8
 26c:	bl	0 <set_field_back>
 270:	cbnz	w0, 3e0 <_ZN11NCursesForm20setDefaultAttributesEv+0x25c>
 274:	add	x21, x21, #0x1
 278:	cmp	x22, x21
 27c:	b.ne	1c4 <_ZN11NCursesForm20setDefaultAttributesEv+0x40>  // b.any
 280:	cbz	x19, 2dc <_ZN11NCursesForm20setDefaultAttributesEv+0x158>
 284:	ldr	x8, [x19]
 288:	mov	x0, x19
 28c:	ldr	x8, [x8, #104]
 290:	blr	x8
 294:	ldr	x8, [x20, #8]
 298:	orr	w1, w0, #0x20
 29c:	mov	x0, x8
 2a0:	bl	0 <wbkgd>
 2a4:	ldr	x20, [x20, #64]
 2a8:	cbz	x20, 2dc <_ZN11NCursesForm20setDefaultAttributesEv+0x158>
 2ac:	ldr	x8, [x19]
 2b0:	mov	x0, x19
 2b4:	ldr	x8, [x8, #104]
 2b8:	blr	x8
 2bc:	ldr	x8, [x20, #8]
 2c0:	ldp	x20, x19, [sp, #48]
 2c4:	ldp	x22, x21, [sp, #32]
 2c8:	ldp	x24, x23, [sp, #16]
 2cc:	orr	w1, w0, #0x20
 2d0:	mov	x0, x8
 2d4:	ldp	x29, x30, [sp], #64
 2d8:	b	0 <wbkgd>
 2dc:	ldp	x20, x19, [sp, #48]
 2e0:	ldp	x22, x21, [sp, #32]
 2e4:	ldp	x24, x23, [sp, #16]
 2e8:	ldp	x29, x30, [sp], #64
 2ec:	ret
 2f0:	mov	w0, #0x18                  	// #24
 2f4:	bl	0 <__cxa_allocate_exception>
 2f8:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 2fc:	ldr	x8, [x8]
 300:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 304:	add	x9, x9, #0x0
 308:	mov	w10, #0xfffffffe            	// #-2
 30c:	add	x8, x8, #0x10
 310:	stp	x8, x9, [x0]
 314:	str	w10, [x0, #16]
 318:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 31c:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 320:	ldr	x1, [x1]
 324:	ldr	x2, [x2]
 328:	bl	0 <__cxa_throw>
 32c:	mov	w19, w0
 330:	mov	w0, #0x18                  	// #24
 334:	bl	0 <__cxa_allocate_exception>
 338:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 33c:	ldr	x8, [x8]
 340:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 344:	add	x9, x9, #0x0
 348:	str	w19, [x0, #16]
 34c:	add	x8, x8, #0x10
 350:	stp	x8, x9, [x0]
 354:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 358:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 35c:	ldr	x1, [x1]
 360:	ldr	x2, [x2]
 364:	bl	0 <__cxa_throw>
 368:	mov	w19, w0
 36c:	mov	w0, #0x18                  	// #24
 370:	bl	0 <__cxa_allocate_exception>
 374:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 378:	ldr	x8, [x8]
 37c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 380:	add	x9, x9, #0x0
 384:	str	w19, [x0, #16]
 388:	add	x8, x8, #0x10
 38c:	stp	x8, x9, [x0]
 390:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 394:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 398:	ldr	x1, [x1]
 39c:	ldr	x2, [x2]
 3a0:	bl	0 <__cxa_throw>
 3a4:	mov	w19, w0
 3a8:	mov	w0, #0x18                  	// #24
 3ac:	bl	0 <__cxa_allocate_exception>
 3b0:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 3b4:	ldr	x8, [x8]
 3b8:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 3bc:	add	x9, x9, #0x0
 3c0:	str	w19, [x0, #16]
 3c4:	add	x8, x8, #0x10
 3c8:	stp	x8, x9, [x0]
 3cc:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 3d0:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 3d4:	ldr	x1, [x1]
 3d8:	ldr	x2, [x2]
 3dc:	bl	0 <__cxa_throw>
 3e0:	mov	w19, w0
 3e4:	mov	w0, #0x18                  	// #24
 3e8:	bl	0 <__cxa_allocate_exception>
 3ec:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 3f0:	ldr	x8, [x8]
 3f4:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 3f8:	add	x9, x9, #0x0
 3fc:	str	w19, [x0, #16]
 400:	add	x8, x8, #0x10
 404:	stp	x8, x9, [x0]
 408:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 40c:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 410:	ldr	x1, [x1]
 414:	ldr	x2, [x2]
 418:	bl	0 <__cxa_throw>
 41c:	bl	0 <__cxa_call_unexpected>
 420:	bl	0 <__cxa_call_unexpected>
 424:	bl	0 <__cxa_call_unexpected>
 428:	bl	0 <__cxa_call_unexpected>
 42c:	bl	0 <__cxa_call_unexpected>

0000000000000430 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb>:
 430:	stp	x29, x30, [sp, #-64]!
 434:	str	x23, [sp, #16]
 438:	stp	x22, x21, [sp, #32]
 43c:	stp	x20, x19, [sp, #48]
 440:	mov	x29, sp
 444:	mov	x19, x0
 448:	ldr	x0, [x0, #8]
 44c:	mov	x21, x1
 450:	mov	w1, #0x1                   	// #1
 454:	mov	w20, w2
 458:	and	w22, w2, #0x1
 45c:	and	w23, w3, #0x1
 460:	bl	0 <keypad>
 464:	ldr	x0, [x19, #8]
 468:	mov	w1, #0x1                   	// #1
 46c:	bl	0 <meta>
 470:	mov	x0, x19
 474:	mov	x1, x21
 478:	strb	w22, [x19, #73]
 47c:	strb	w23, [x19, #74]
 480:	str	xzr, [x19, #56]
 484:	bl	cc <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>
 488:	bl	0 <new_form>
 48c:	str	x0, [x19, #56]
 490:	cbz	x0, 5fc <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1cc>
 494:	mov	x21, x0
 498:	mov	w0, #0x18                  	// #24
 49c:	bl	0 <_Znwm>
 4a0:	mov	x1, x0
 4a4:	stp	xzr, x19, [x0]
 4a8:	str	x21, [x0, #16]
 4ac:	mov	x0, x21
 4b0:	bl	0 <set_form_userptr>
 4b4:	adrp	x1, 710 <_nc_xx_frm_init>
 4b8:	ldr	x0, [x19, #56]
 4bc:	ldr	x1, [x1]
 4c0:	bl	0 <set_form_init>
 4c4:	adrp	x1, 730 <_nc_xx_frm_term>
 4c8:	ldr	x0, [x19, #56]
 4cc:	ldr	x1, [x1]
 4d0:	bl	0 <set_form_term>
 4d4:	adrp	x1, 750 <_nc_xx_fld_init>
 4d8:	ldr	x0, [x19, #56]
 4dc:	ldr	x1, [x1]
 4e0:	bl	0 <set_field_init>
 4e4:	adrp	x1, 790 <_nc_xx_fld_term>
 4e8:	ldr	x0, [x19, #56]
 4ec:	ldr	x1, [x1]
 4f0:	bl	0 <set_field_term>
 4f4:	ldr	x0, [x19, #56]
 4f8:	add	x1, x29, #0x1c
 4fc:	add	x2, x29, #0x18
 500:	bl	0 <scale_form>
 504:	cbnz	w0, 638 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x208>
 508:	ldr	x0, [x19, #56]
 50c:	ldr	x1, [x19, #8]
 510:	bl	0 <set_form_win>
 514:	tbz	w20, #0, 540 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x110>
 518:	ldr	x8, [x19, #8]
 51c:	ldr	w20, [x29, #28]
 520:	cbz	x8, 54c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x11c>
 524:	ldrh	w9, [x8, #4]
 528:	mov	w10, #0xfffe                	// #65534
 52c:	cmp	w9, w10
 530:	csinv	w9, w9, wzr, ne  // ne = any
 534:	sxth	w9, w9
 538:	sub	w9, w9, #0x1
 53c:	b	550 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x120>
 540:	mov	w8, wzr
 544:	str	xzr, [x19, #64]
 548:	b	5c4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x194>
 54c:	mov	w9, #0xfffffffe            	// #-2
 550:	cmp	w20, w9
 554:	b.gt	674 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x244>
 558:	ldr	w21, [x29, #24]
 55c:	cbz	x8, 57c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x14c>
 560:	ldrh	w8, [x8, #6]
 564:	mov	w9, #0xfffe                	// #65534
 568:	cmp	w8, w9
 56c:	csinv	w8, w8, wzr, ne  // ne = any
 570:	sxth	w8, w8
 574:	sub	w8, w8, #0x1
 578:	b	580 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x150>
 57c:	mov	w8, #0xfffffffe            	// #-2
 580:	cmp	w21, w8
 584:	b.gt	674 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x244>
 588:	mov	w0, #0x30                  	// #48
 58c:	bl	0 <_Znwm>
 590:	mov	x22, x0
 594:	mov	w4, #0x1                   	// #1
 598:	mov	w5, #0x1                   	// #1
 59c:	mov	w6, #0x72                  	// #114
 5a0:	mov	x1, x19
 5a4:	mov	w2, w20
 5a8:	mov	w3, w21
 5ac:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 5b0:	str	x22, [x19, #64]
 5b4:	ldr	x0, [x19, #56]
 5b8:	ldr	x1, [x22, #8]
 5bc:	bl	0 <set_form_sub>
 5c0:	mov	w8, #0x1                   	// #1
 5c4:	ldr	x0, [x19, #56]
 5c8:	mov	w1, #0x1                   	// #1
 5cc:	strb	w8, [x19, #72]
 5d0:	bl	0 <form_opts_on>
 5d4:	cbnz	w0, 6b0 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x280>
 5d8:	ldr	x8, [x19]
 5dc:	mov	x0, x19
 5e0:	ldr	x8, [x8, #96]
 5e4:	blr	x8
 5e8:	ldp	x20, x19, [sp, #48]
 5ec:	ldp	x22, x21, [sp, #32]
 5f0:	ldr	x23, [sp, #16]
 5f4:	ldp	x29, x30, [sp], #64
 5f8:	ret
 5fc:	mov	w0, #0x18                  	// #24
 600:	bl	0 <__cxa_allocate_exception>
 604:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 608:	ldr	x8, [x8]
 60c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 610:	add	x9, x9, #0x0
 614:	mov	w10, #0xffffffff            	// #-1
 618:	add	x8, x8, #0x10
 61c:	stp	x8, x9, [x0]
 620:	str	w10, [x0, #16]
 624:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 628:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 62c:	ldr	x1, [x1]
 630:	ldr	x2, [x2]
 634:	bl	0 <__cxa_throw>
 638:	mov	w21, w0
 63c:	mov	w0, #0x18                  	// #24
 640:	bl	0 <__cxa_allocate_exception>
 644:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 648:	ldr	x8, [x8]
 64c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 650:	add	x9, x9, #0x0
 654:	str	w21, [x0, #16]
 658:	add	x8, x8, #0x10
 65c:	stp	x8, x9, [x0]
 660:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 664:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 668:	ldr	x1, [x1]
 66c:	ldr	x2, [x2]
 670:	bl	0 <__cxa_throw>
 674:	mov	w0, #0x18                  	// #24
 678:	bl	0 <__cxa_allocate_exception>
 67c:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 680:	ldr	x8, [x8]
 684:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 688:	add	x9, x9, #0x0
 68c:	mov	w10, #0xfffffffa            	// #-6
 690:	add	x8, x8, #0x10
 694:	stp	x8, x9, [x0]
 698:	str	w10, [x0, #16]
 69c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 6a0:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 6a4:	ldr	x1, [x1]
 6a8:	ldr	x2, [x2]
 6ac:	bl	0 <__cxa_throw>
 6b0:	mov	w20, w0
 6b4:	mov	w0, #0x18                  	// #24
 6b8:	bl	0 <__cxa_allocate_exception>
 6bc:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 6c0:	ldr	x8, [x8]
 6c4:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 6c8:	add	x9, x9, #0x0
 6cc:	str	w20, [x0, #16]
 6d0:	add	x8, x8, #0x10
 6d4:	stp	x8, x9, [x0]
 6d8:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 6dc:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 6e0:	ldr	x1, [x1]
 6e4:	ldr	x2, [x2]
 6e8:	bl	0 <__cxa_throw>
 6ec:	bl	0 <__cxa_call_unexpected>
 6f0:	bl	0 <__cxa_call_unexpected>
 6f4:	bl	0 <__cxa_call_unexpected>
 6f8:	bl	0 <__cxa_call_unexpected>
 6fc:	mov	x19, x0
 700:	mov	x0, x22
 704:	bl	0 <_ZdlPv>
 708:	mov	x0, x19
 70c:	bl	0 <_Unwind_Resume>

0000000000000710 <_nc_xx_frm_init>:
 710:	stp	x29, x30, [sp, #-16]!
 714:	mov	x29, sp
 718:	bl	0 <form_userptr>
 71c:	ldr	x0, [x0, #8]
 720:	ldr	x8, [x0]
 724:	ldr	x1, [x8, #104]
 728:	ldp	x29, x30, [sp], #16
 72c:	br	x1

0000000000000730 <_nc_xx_frm_term>:
 730:	stp	x29, x30, [sp, #-16]!
 734:	mov	x29, sp
 738:	bl	0 <form_userptr>
 73c:	ldr	x0, [x0, #8]
 740:	ldr	x8, [x0]
 744:	ldr	x1, [x8, #112]
 748:	ldp	x29, x30, [sp], #16
 74c:	br	x1

0000000000000750 <_nc_xx_fld_init>:
 750:	stp	x29, x30, [sp, #-32]!
 754:	stp	x20, x19, [sp, #16]
 758:	mov	x29, sp
 75c:	bl	0 <form_userptr>
 760:	ldr	x19, [x0, #8]
 764:	ldr	x0, [x19, #56]
 768:	ldr	x20, [x19, #80]
 76c:	bl	0 <current_field>
 770:	bl	0 <field_index>
 774:	ldr	x8, [x19]
 778:	ldr	x1, [x20, w0, sxtw #3]
 77c:	mov	x0, x19
 780:	ldp	x20, x19, [sp, #16]
 784:	ldr	x2, [x8, #120]
 788:	ldp	x29, x30, [sp], #32
 78c:	br	x2

0000000000000790 <_nc_xx_fld_term>:
 790:	stp	x29, x30, [sp, #-32]!
 794:	stp	x20, x19, [sp, #16]
 798:	mov	x29, sp
 79c:	bl	0 <form_userptr>
 7a0:	ldr	x19, [x0, #8]
 7a4:	ldr	x0, [x19, #56]
 7a8:	ldr	x20, [x19, #80]
 7ac:	bl	0 <current_field>
 7b0:	bl	0 <field_index>
 7b4:	ldr	x8, [x19]
 7b8:	ldr	x1, [x20, w0, sxtw #3]
 7bc:	mov	x0, x19
 7c0:	ldp	x20, x19, [sp, #16]
 7c4:	ldr	x2, [x8, #128]
 7c8:	ldp	x29, x30, [sp], #32
 7cc:	br	x2

00000000000007d0 <_ZN11NCursesFormD1Ev>:
 7d0:	stp	x29, x30, [sp, #-48]!
 7d4:	stp	x22, x21, [sp, #16]
 7d8:	stp	x20, x19, [sp, #32]
 7dc:	mov	x29, sp
 7e0:	adrp	x8, 20 <_ZN16NCursesFormFieldD1Ev+0x20>
 7e4:	mov	x19, x0
 7e8:	ldr	x0, [x0, #56]
 7ec:	ldr	x8, [x8]
 7f0:	add	x8, x8, #0x10
 7f4:	str	x8, [x19]
 7f8:	bl	0 <form_userptr>
 7fc:	cbz	x0, 804 <_ZN11NCursesFormD1Ev+0x34>
 800:	bl	0 <_ZdlPv>
 804:	ldrb	w8, [x19, #72]
 808:	cbz	w8, 82c <_ZN11NCursesFormD1Ev+0x5c>
 80c:	ldr	x0, [x19, #64]
 810:	cbz	x0, 820 <_ZN11NCursesFormD1Ev+0x50>
 814:	ldr	x8, [x0]
 818:	ldr	x8, [x8, #16]
 81c:	blr	x8
 820:	ldr	x0, [x19, #56]
 824:	mov	x1, xzr
 828:	bl	0 <set_form_sub>
 82c:	ldr	x0, [x19, #56]
 830:	cbz	x0, 8b4 <_ZN11NCursesFormD1Ev+0xe4>
 834:	bl	0 <form_fields>
 838:	mov	x20, x0
 83c:	ldr	x0, [x19, #56]
 840:	bl	0 <field_count>
 844:	mov	w21, w0
 848:	ldr	x0, [x19, #56]
 84c:	mov	x1, xzr
 850:	bl	0 <set_form_fields>
 854:	cbnz	w0, 8cc <_ZN11NCursesFormD1Ev+0xfc>
 858:	ldrb	w8, [x19, #74]
 85c:	cbz	w8, 8a0 <_ZN11NCursesFormD1Ev+0xd0>
 860:	cmp	w21, #0x1
 864:	b.lt	894 <_ZN11NCursesFormD1Ev+0xc4>  // b.tstop
 868:	mov	x22, xzr
 86c:	add	w21, w21, #0x1
 870:	ldr	x8, [x19, #80]
 874:	ldr	x0, [x8, x22, lsl #3]
 878:	cbz	x0, 888 <_ZN11NCursesFormD1Ev+0xb8>
 87c:	ldr	x8, [x0]
 880:	ldr	x8, [x8, #8]
 884:	blr	x8
 888:	add	x22, x22, #0x1
 88c:	cmp	x21, x22
 890:	b.ne	870 <_ZN11NCursesFormD1Ev+0xa0>  // b.any
 894:	ldr	x0, [x19, #80]
 898:	cbz	x0, 8a0 <_ZN11NCursesFormD1Ev+0xd0>
 89c:	bl	0 <_ZdaPv>
 8a0:	ldr	x0, [x19, #56]
 8a4:	bl	0 <free_form>
 8a8:	cbz	x20, 8b4 <_ZN11NCursesFormD1Ev+0xe4>
 8ac:	mov	x0, x20
 8b0:	bl	0 <_ZdaPv>
 8b4:	mov	x0, x19
 8b8:	bl	0 <_ZN12NCursesPanelD2Ev>
 8bc:	ldp	x20, x19, [sp, #32]
 8c0:	ldp	x22, x21, [sp, #16]
 8c4:	ldp	x29, x30, [sp], #48
 8c8:	ret
 8cc:	mov	w20, w0
 8d0:	mov	w0, #0x18                  	// #24
 8d4:	bl	0 <__cxa_allocate_exception>
 8d8:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 8dc:	ldr	x8, [x8]
 8e0:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 8e4:	add	x9, x9, #0x0
 8e8:	str	w20, [x0, #16]
 8ec:	add	x8, x8, #0x10
 8f0:	stp	x8, x9, [x0]
 8f4:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 8f8:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 8fc:	ldr	x1, [x1]
 900:	ldr	x2, [x2]
 904:	bl	0 <__cxa_throw>
 908:	mov	x21, x1
 90c:	mov	x20, x0
 910:	tbz	w21, #31, 93c <_ZN11NCursesFormD1Ev+0x16c>
 914:	mov	x0, x20
 918:	bl	0 <__cxa_call_unexpected>
 91c:	b	934 <_ZN11NCursesFormD1Ev+0x164>
 920:	mov	x21, x1
 924:	mov	x20, x0
 928:	b	944 <_ZN11NCursesFormD1Ev+0x174>
 92c:	b	934 <_ZN11NCursesFormD1Ev+0x164>
 930:	b	934 <_ZN11NCursesFormD1Ev+0x164>
 934:	mov	x21, x1
 938:	mov	x20, x0
 93c:	mov	x0, x19
 940:	bl	0 <_ZN12NCursesPanelD2Ev>
 944:	mov	x0, x20
 948:	tbz	w21, #31, 950 <_ZN11NCursesFormD1Ev+0x180>
 94c:	bl	0 <__cxa_call_unexpected>
 950:	bl	0 <_Unwind_Resume>
 954:	bl	0 <_ZN16NCursesFormFieldD1Ev>

0000000000000958 <_ZN11NCursesFormD0Ev>:
 958:	stp	x29, x30, [sp, #-48]!
 95c:	str	x21, [sp, #16]
 960:	stp	x20, x19, [sp, #32]
 964:	mov	x29, sp
 968:	mov	x19, x0
 96c:	bl	7d0 <_ZN11NCursesFormD1Ev>
 970:	mov	x0, x19
 974:	ldp	x20, x19, [sp, #32]
 978:	ldr	x21, [sp, #16]
 97c:	ldp	x29, x30, [sp], #48
 980:	b	0 <_ZdlPv>
 984:	mov	x20, x0
 988:	mov	x0, x19
 98c:	mov	x21, x1
 990:	bl	0 <_ZdlPv>
 994:	mov	x0, x20
 998:	tbz	w21, #31, 9a0 <_ZN11NCursesFormD0Ev+0x48>
 99c:	bl	0 <__cxa_call_unexpected>
 9a0:	bl	0 <_Unwind_Resume>

00000000000009a4 <_ZN11NCursesForm12setSubWindowER13NCursesWindow>:
 9a4:	stp	x29, x30, [sp, #-32]!
 9a8:	stp	x20, x19, [sp, #16]
 9ac:	mov	x29, sp
 9b0:	mov	x19, x1
 9b4:	mov	x20, x0
 9b8:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 9bc:	tbz	w0, #0, 9f4 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x50>
 9c0:	ldrb	w8, [x20, #72]
 9c4:	cbz	w8, 9dc <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x38>
 9c8:	ldr	x0, [x20, #64]
 9cc:	cbz	x0, 9dc <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x38>
 9d0:	ldr	x8, [x0]
 9d4:	ldr	x8, [x8, #16]
 9d8:	blr	x8
 9dc:	str	x19, [x20, #64]
 9e0:	ldr	x0, [x20, #56]
 9e4:	ldr	x1, [x19, #8]
 9e8:	ldp	x20, x19, [sp, #16]
 9ec:	ldp	x29, x30, [sp], #32
 9f0:	b	0 <set_form_sub>
 9f4:	mov	w0, #0x18                  	// #24
 9f8:	bl	0 <__cxa_allocate_exception>
 9fc:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 a00:	ldr	x8, [x8]
 a04:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 a08:	add	x9, x9, #0x0
 a0c:	mov	w10, #0xffffffff            	// #-1
 a10:	add	x8, x8, #0x10
 a14:	stp	x8, x9, [x0]
 a18:	str	w10, [x0, #16]
 a1c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 a20:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 a24:	ldr	x1, [x1]
 a28:	ldr	x2, [x2]
 a2c:	bl	0 <__cxa_throw>
 a30:	bl	0 <__cxa_call_unexpected>

0000000000000a34 <_ZN11NCursesForm12On_Form_InitEv>:
 a34:	ret

0000000000000a38 <_ZN11NCursesForm19On_Form_TerminationEv>:
 a38:	ret

0000000000000a3c <_ZN11NCursesForm13On_Field_InitER16NCursesFormField>:
 a3c:	ret

0000000000000a40 <_ZN11NCursesForm20On_Field_TerminationER16NCursesFormField>:
 a40:	ret

0000000000000a44 <_ZN11NCursesForm6driverEi>:
 a44:	stp	x29, x30, [sp, #-32]!
 a48:	str	x19, [sp, #16]
 a4c:	mov	x29, sp
 a50:	ldr	x0, [x0, #56]
 a54:	bl	0 <form_driver>
 a58:	add	w8, w0, #0xd
 a5c:	cmp	w8, #0xd
 a60:	b.hi	a84 <_ZN11NCursesForm6driverEi+0x40>  // b.pmore
 a64:	mov	w9, #0x1                   	// #1
 a68:	lsl	w8, w9, w8
 a6c:	mov	w9, #0x2023                	// #8227
 a70:	tst	w8, w9
 a74:	b.eq	a84 <_ZN11NCursesForm6driverEi+0x40>  // b.none
 a78:	ldr	x19, [sp, #16]
 a7c:	ldp	x29, x30, [sp], #32
 a80:	ret
 a84:	mov	w19, w0
 a88:	mov	w0, #0x18                  	// #24
 a8c:	bl	0 <__cxa_allocate_exception>
 a90:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 a94:	ldr	x8, [x8]
 a98:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 a9c:	add	x9, x9, #0x0
 aa0:	str	w19, [x0, #16]
 aa4:	add	x8, x8, #0x10
 aa8:	stp	x8, x9, [x0]
 aac:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 ab0:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 ab4:	ldr	x1, [x1]
 ab8:	ldr	x2, [x2]
 abc:	bl	0 <__cxa_throw>
 ac0:	bl	0 <__cxa_call_unexpected>

0000000000000ac4 <_ZNK11NCursesForm17On_Request_DeniedEi>:
 ac4:	b	0 <beep>

0000000000000ac8 <_ZNK11NCursesForm16On_Invalid_FieldEi>:
 ac8:	b	0 <beep>

0000000000000acc <_ZNK11NCursesForm18On_Unknown_CommandEi>:
 acc:	b	0 <beep>

0000000000000ad0 <_ZN11NCursesFormclEv>:
 ad0:	stp	x29, x30, [sp, #-32]!
 ad4:	stp	x20, x19, [sp, #16]
 ad8:	mov	x29, sp
 adc:	mov	x19, x0
 ae0:	ldr	x0, [x0, #56]
 ae4:	bl	0 <post_form>
 ae8:	cbnz	w0, c68 <_ZN11NCursesFormclEv+0x198>
 aec:	ldr	x0, [x19, #48]
 af0:	bl	0 <show_panel>
 af4:	mov	w1, w0
 af8:	mov	x0, x19
 afc:	bl	0 <_ZN16NCursesFormFieldD1Ev>
 b00:	ldr	x8, [x19]
 b04:	mov	x0, x19
 b08:	ldr	x8, [x8, #32]
 b0c:	blr	x8
 b10:	ldr	x8, [x19]
 b14:	mov	x0, x19
 b18:	ldr	x8, [x8, #48]
 b1c:	blr	x8
 b20:	ldr	x8, [x19]
 b24:	mov	w20, w0
 b28:	mov	x0, x19
 b2c:	mov	w1, w20
 b30:	ldr	x8, [x8, #136]
 b34:	blr	x8
 b38:	cmp	w0, #0x280
 b3c:	b.eq	bdc <_ZN11NCursesFormclEv+0x10c>  // b.none
 b40:	mov	w1, w0
 b44:	ldr	x8, [x19]
 b48:	mov	x0, x19
 b4c:	ldr	x8, [x8, #88]
 b50:	blr	x8
 b54:	cmn	w0, #0x9
 b58:	b.gt	b70 <_ZN11NCursesFormclEv+0xa0>
 b5c:	cmn	w0, #0xd
 b60:	b.ne	b84 <_ZN11NCursesFormclEv+0xb4>  // b.any
 b64:	ldr	x8, [x19]
 b68:	ldr	x8, [x8, #160]
 b6c:	b	b94 <_ZN11NCursesFormclEv+0xc4>
 b70:	cmn	w0, #0x8
 b74:	b.ne	ba4 <_ZN11NCursesFormclEv+0xd4>  // b.any
 b78:	ldr	x8, [x19]
 b7c:	ldr	x8, [x8, #168]
 b80:	b	b94 <_ZN11NCursesFormclEv+0xc4>
 b84:	cmn	w0, #0xc
 b88:	b.ne	c2c <_ZN11NCursesFormclEv+0x15c>  // b.any
 b8c:	ldr	x8, [x19]
 b90:	ldr	x8, [x8, #152]
 b94:	mov	x0, x19
 b98:	mov	w1, w20
 b9c:	blr	x8
 ba0:	b	ba8 <_ZN11NCursesFormclEv+0xd8>
 ba4:	cbnz	w0, c2c <_ZN11NCursesFormclEv+0x15c>
 ba8:	ldr	x8, [x19]
 bac:	mov	x0, x19
 bb0:	ldr	x8, [x8, #48]
 bb4:	blr	x8
 bb8:	ldr	x8, [x19]
 bbc:	mov	w20, w0
 bc0:	mov	x0, x19
 bc4:	mov	w1, w20
 bc8:	ldr	x8, [x8, #136]
 bcc:	blr	x8
 bd0:	mov	w1, w0
 bd4:	cmp	w0, #0x280
 bd8:	b.ne	b44 <_ZN11NCursesFormclEv+0x74>  // b.any
 bdc:	ldr	x0, [x19, #56]
 be0:	bl	0 <unpost_form>
 be4:	cbnz	w0, ca4 <_ZN11NCursesFormclEv+0x1d4>
 be8:	ldr	x0, [x19, #48]
 bec:	bl	0 <hide_panel>
 bf0:	mov	w1, w0
 bf4:	mov	x0, x19
 bf8:	bl	0 <_ZN16NCursesFormFieldD1Ev>
 bfc:	ldr	x8, [x19]
 c00:	mov	x0, x19
 c04:	ldr	x8, [x8, #32]
 c08:	blr	x8
 c0c:	ldr	x0, [x19, #56]
 c10:	ldr	x20, [x19, #80]
 c14:	bl	0 <current_field>
 c18:	bl	0 <field_index>
 c1c:	ldr	x0, [x20, w0, sxtw #3]
 c20:	ldp	x20, x19, [sp, #16]
 c24:	ldp	x29, x30, [sp], #32
 c28:	ret
 c2c:	mov	w19, w0
 c30:	mov	w0, #0x18                  	// #24
 c34:	bl	0 <__cxa_allocate_exception>
 c38:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 c3c:	ldr	x8, [x8]
 c40:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 c44:	add	x9, x9, #0x0
 c48:	str	w19, [x0, #16]
 c4c:	add	x8, x8, #0x10
 c50:	stp	x8, x9, [x0]
 c54:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 c58:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 c5c:	ldr	x1, [x1]
 c60:	ldr	x2, [x2]
 c64:	bl	0 <__cxa_throw>
 c68:	mov	w20, w0
 c6c:	mov	w0, #0x18                  	// #24
 c70:	bl	0 <__cxa_allocate_exception>
 c74:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 c78:	ldr	x8, [x8]
 c7c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 c80:	add	x9, x9, #0x0
 c84:	str	w20, [x0, #16]
 c88:	add	x8, x8, #0x10
 c8c:	stp	x8, x9, [x0]
 c90:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 c94:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 c98:	ldr	x1, [x1]
 c9c:	ldr	x2, [x2]
 ca0:	bl	0 <__cxa_throw>
 ca4:	mov	w20, w0
 ca8:	mov	w0, #0x18                  	// #24
 cac:	bl	0 <__cxa_allocate_exception>
 cb0:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 cb4:	ldr	x8, [x8]
 cb8:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 cbc:	add	x9, x9, #0x0
 cc0:	str	w20, [x0, #16]
 cc4:	add	x8, x8, #0x10
 cc8:	stp	x8, x9, [x0]
 ccc:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 cd0:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 cd4:	ldr	x1, [x1]
 cd8:	ldr	x2, [x2]
 cdc:	bl	0 <__cxa_throw>
 ce0:	bl	0 <__cxa_call_unexpected>
 ce4:	bl	0 <__cxa_call_unexpected>
 ce8:	bl	0 <__cxa_call_unexpected>

0000000000000cec <_ZN11NCursesForm10virtualizeEi>:
 cec:	mov	w0, w1
 cf0:	cmp	w1, #0x101
 cf4:	b.gt	d24 <_ZN11NCursesForm10virtualizeEi+0x38>
 cf8:	sub	w8, w0, #0x1
 cfc:	cmp	w8, #0x18
 d00:	b.hi	e00 <_ZN11NCursesForm10virtualizeEi+0x114>  // b.pmore
 d04:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d08:	add	x9, x9, #0x0
 d0c:	adr	x10, d1c <_ZN11NCursesForm10virtualizeEi+0x30>
 d10:	ldrb	w11, [x9, x8]
 d14:	add	x10, x10, x11, lsl #2
 d18:	br	x10
 d1c:	mov	w0, #0x216                 	// #534
 d20:	ret
 d24:	cmp	w0, #0x14c
 d28:	b.gt	d5c <_ZN11NCursesForm10virtualizeEi+0x70>
 d2c:	sub	w8, w0, #0x102
 d30:	cmp	w8, #0x5
 d34:	b.hi	e00 <_ZN11NCursesForm10virtualizeEi+0x114>  // b.pmore
 d38:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d3c:	add	x9, x9, #0x0
 d40:	adr	x10, d54 <_ZN11NCursesForm10virtualizeEi+0x68>
 d44:	ldrb	w11, [x9, x8]
 d48:	add	x10, x10, x11, lsl #2
 d4c:	mov	w0, #0x206                 	// #518
 d50:	br	x10
 d54:	mov	w0, #0x21d                 	// #541
 d58:	ret
 d5c:	cmp	w0, #0x152
 d60:	b.le	d8c <_ZN11NCursesForm10virtualizeEi+0xa0>
 d64:	cmp	w0, #0x153
 d68:	b.eq	e4c <_ZN11NCursesForm10virtualizeEi+0x160>  // b.none
 d6c:	cmp	w0, #0x157
 d70:	b.eq	d84 <_ZN11NCursesForm10virtualizeEi+0x98>  // b.none
 d74:	cmp	w0, #0x168
 d78:	b.ne	e00 <_ZN11NCursesForm10virtualizeEi+0x114>  // b.any
 d7c:	mov	w0, #0x207                 	// #519
 d80:	ret
 d84:	mov	w0, #0x21e                 	// #542
 d88:	ret
 d8c:	cmp	w0, #0x14d
 d90:	b.eq	e54 <_ZN11NCursesForm10virtualizeEi+0x168>  // b.none
 d94:	cmp	w0, #0x152
 d98:	b.ne	e00 <_ZN11NCursesForm10virtualizeEi+0x114>  // b.any
 d9c:	mov	w0, #0x200                 	// #512
 da0:	ret
 da4:	mov	w0, #0x222                 	// #546
 da8:	ret
 dac:	mov	w0, #0x205                 	// #517
 db0:	ret
 db4:	mov	w0, #0x20f                 	// #527
 db8:	ret
 dbc:	mov	w0, #0x217                 	// #535
 dc0:	ret
 dc4:	mov	w0, #0x204                 	// #516
 dc8:	ret
 dcc:	mov	w0, #0x224                 	// #548
 dd0:	ret
 dd4:	mov	w0, #0x21f                 	// #543
 dd8:	ret
 ddc:	mov	w0, #0x226                 	// #550
 de0:	ret
 de4:	mov	w0, #0x20c                 	// #524
 de8:	ret
 dec:	mov	w0, #0x237                 	// #567
 df0:	ret
 df4:	mov	w0, #0x220                 	// #544
 df8:	ret
 dfc:	mov	w0, #0x238                 	// #568
 e00:	ret
 e04:	mov	w0, #0x20d                 	// #525
 e08:	ret
 e0c:	mov	w0, #0x215                 	// #533
 e10:	ret
 e14:	mov	w0, #0x20e                 	// #526
 e18:	ret
 e1c:	mov	w0, #0x221                 	// #545
 e20:	ret
 e24:	mov	w0, #0x214                 	// #532
 e28:	ret
 e2c:	mov	w0, #0x280                 	// #640
 e30:	ret
 e34:	mov	w0, #0x223                 	// #547
 e38:	ret
 e3c:	mov	w0, #0x21c                 	// #540
 e40:	ret
 e44:	mov	w0, #0x211                 	// #529
 e48:	ret
 e4c:	mov	w0, #0x201                 	// #513
 e50:	ret
 e54:	mov	w0, #0x227                 	// #551
 e58:	ret
 e5c:	mov	w0, #0x210                 	// #528
 e60:	ret

0000000000000e64 <_nc_xx_fld_fcheck>:
 e64:	ldr	x0, [x1, #16]
 e68:	ldr	x8, [x0]
 e6c:	ldr	x2, [x8, #24]
 e70:	br	x2

0000000000000e74 <_nc_xx_fld_ccheck>:
 e74:	ldr	x8, [x1, #16]
 e78:	mov	w1, w0
 e7c:	ldr	x9, [x8]
 e80:	mov	x0, x8
 e84:	ldr	x2, [x9, #32]
 e88:	br	x2

0000000000000e8c <_nc_xx_fld_makearg>:
 e8c:	ldrsw	x8, [x0, #24]
 e90:	tbz	w8, #31, eb0 <_nc_xx_fld_makearg+0x24>
 e94:	add	w9, w8, #0x8
 e98:	cmn	w8, #0x8
 e9c:	str	w9, [x0, #24]
 ea0:	b.gt	eb0 <_nc_xx_fld_makearg+0x24>
 ea4:	ldr	x9, [x0, #8]
 ea8:	add	x8, x9, x8
 eac:	b	ebc <_nc_xx_fld_makearg+0x30>
 eb0:	ldr	x8, [x0]
 eb4:	add	x9, x8, #0x8
 eb8:	str	x9, [x0]
 ebc:	ldr	x0, [x8]
 ec0:	ret

0000000000000ec4 <_nc_xx_next_choice>:
 ec4:	ldr	x0, [x1, #16]
 ec8:	ldr	x8, [x0]
 ecc:	ldr	x2, [x8, #40]
 ed0:	br	x2

0000000000000ed4 <_nc_xx_prev_choice>:
 ed4:	ldr	x0, [x1, #16]
 ed8:	ldr	x8, [x0]
 edc:	ldr	x2, [x8, #48]
 ee0:	br	x2

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN8UDF_InitC2Ev:

0000000000000000 <_ZN8UDF_InitC2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	str	wzr, [x0]
  10:	adrp	x8, 0 <_ZN8UDF_InitC2Ev>
  14:	ldr	x8, [x8]
  18:	adrp	x1, e8c <_nc_xx_fld_makearg>
  1c:	mov	x19, x0
  20:	mov	x2, xzr
  24:	ldr	x0, [x8]
  28:	ldr	x1, [x1]
  2c:	mov	x3, xzr
  30:	bl	0 <set_fieldtype_arg>
  34:	str	w0, [x19]
  38:	cbnz	w0, 80 <_ZN8UDF_InitC2Ev+0x80>
  3c:	adrp	x20, 8 <_ZN8UDF_InitC2Ev+0x8>
  40:	ldr	x20, [x20]
  44:	adrp	x1, e8c <_nc_xx_fld_makearg>
  48:	mov	x2, xzr
  4c:	mov	x3, xzr
  50:	ldr	x0, [x20]
  54:	ldr	x1, [x1]
  58:	bl	0 <set_fieldtype_arg>
  5c:	str	w0, [x19]
  60:	cbnz	w0, 80 <_ZN8UDF_InitC2Ev+0x80>
  64:	adrp	x1, ec4 <_nc_xx_next_choice>
  68:	adrp	x2, ed4 <_nc_xx_prev_choice>
  6c:	ldr	x0, [x20]
  70:	ldr	x1, [x1]
  74:	ldr	x2, [x2]
  78:	bl	0 <set_fieldtype_choice>
  7c:	str	w0, [x19]
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <move_panel>
  18:	mov	w1, w0
  1c:	mov	x0, x19
  20:	bl	0 <_ZN12NCursesPanel5mvwinEii>
  24:	ldr	x19, [sp, #16]
  28:	mov	w0, wzr
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN11NCursesForm5frameEPKcS1_:

0000000000000000 <_ZN11NCursesForm5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm5frameEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm5frameEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm5frameEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm5frameEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm5frameEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesForm9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm9boldframeEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm5labelEPKcS1_:

0000000000000000 <_ZN11NCursesForm5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm5labelEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm5labelEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm5labelEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm5labelEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm5labelEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK12NCursesPanel7OnErrorEi:

0000000000000000 <_ZNK12NCursesPanel7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmn	w1, #0x1
   c:	b.eq	18 <_ZNK12NCursesPanel7OnErrorEi+0x18>  // b.none
  10:	ldp	x29, x30, [sp], #16
  14:	ret
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZNK12NCursesPanel7OnErrorEi>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZNK12NCursesPanel7OnErrorEi>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZNK12NCursesPanel7OnErrorEi>
  44:	adrp	x2, 0 <_ZNK12NCursesPanel7OnErrorEi>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesf.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x19, e64 <_nc_xx_fld_fcheck>
  10:	adrp	x20, e74 <_nc_xx_fld_ccheck>
  14:	ldr	x19, [x19]
  18:	ldr	x20, [x20]
  1c:	mov	x0, x19
  20:	mov	x1, x20
  24:	bl	0 <new_fieldtype>
  28:	adrp	x8, 0 <_GLOBAL__sub_I_cursesf.cc>
  2c:	ldr	x8, [x8]
  30:	mov	x1, x20
  34:	str	x0, [x8]
  38:	mov	x0, x19
  3c:	bl	0 <new_fieldtype>
  40:	adrp	x8, 8 <_GLOBAL__sub_I_cursesf.cc+0x8>
  44:	ldr	x8, [x8]
  48:	str	x0, [x8]
  4c:	mov	w0, #0x4                   	// #4
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	bl	0 <_GLOBAL__sub_I_cursesf.cc>
  5c:	adrp	x8, 10 <_GLOBAL__sub_I_cursesf.cc+0x10>
  60:	ldr	x8, [x8]
  64:	str	x19, [x8]
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	mov	x20, x0
  78:	mov	x0, x19
  7c:	bl	0 <_ZdlPv>
  80:	mov	x0, x20
  84:	bl	0 <_Unwind_Resume>

cursesm.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN15NCursesMenuItemD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
  10:	mov	x8, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x9, [x9]
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x8]
  24:	cbz	x0, 30 <_ZN15NCursesMenuItemD1Ev+0x30>
  28:	bl	0 <free_item>
  2c:	cbnz	w0, 3c <_ZN15NCursesMenuItemD1Ev+0x3c>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	w19, w0
  40:	mov	w0, #0x18                  	// #24
  44:	bl	0 <__cxa_allocate_exception>
  48:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
  4c:	ldr	x8, [x8]
  50:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
  54:	add	x9, x9, #0x0
  58:	str	w19, [x0, #16]
  5c:	add	x8, x8, #0x10
  60:	stp	x8, x9, [x0]
  64:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
  68:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
  6c:	ldr	x1, [x1]
  70:	ldr	x2, [x2]
  74:	bl	0 <__cxa_throw>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <__cxa_call_unexpected>

0000000000000080 <_ZN15NCursesMenuItemD0Ev>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	str	x21, [sp, #16]
  88:	stp	x20, x19, [sp, #32]
  8c:	mov	x29, sp
  90:	mov	x19, x0
  94:	bl	0 <_ZN15NCursesMenuItemD1Ev>
  98:	mov	x0, x19
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <_ZdlPv>
  ac:	mov	x20, x0
  b0:	mov	x0, x19
  b4:	mov	x21, x1
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x20
  c0:	tbz	w21, #31, c8 <_ZN15NCursesMenuItemD0Ev+0x48>
  c4:	bl	0 <__cxa_call_unexpected>
  c8:	bl	0 <_Unwind_Resume>

00000000000000cc <_ZN15NCursesMenuItem6actionEv>:
  cc:	mov	w0, wzr
  d0:	ret

00000000000000d4 <_ZN23NCursesMenuCallbackItemD0Ev>:
  d4:	stp	x29, x30, [sp, #-48]!
  d8:	str	x21, [sp, #16]
  dc:	stp	x20, x19, [sp, #32]
  e0:	mov	x29, sp
  e4:	mov	x19, x0
  e8:	bl	0 <_ZN15NCursesMenuItemD1Ev>
  ec:	mov	x0, x19
  f0:	ldp	x20, x19, [sp, #32]
  f4:	ldr	x21, [sp, #16]
  f8:	ldp	x29, x30, [sp], #48
  fc:	b	0 <_ZdlPv>
 100:	mov	x20, x0
 104:	mov	x0, x19
 108:	mov	x21, x1
 10c:	bl	0 <_ZdlPv>
 110:	mov	x0, x20
 114:	tbz	w21, #31, 11c <_ZN23NCursesMenuCallbackItemD0Ev+0x48>
 118:	bl	0 <__cxa_call_unexpected>
 11c:	bl	0 <_Unwind_Resume>

0000000000000120 <_ZN23NCursesMenuCallbackItem6actionEv>:
 120:	ldr	x1, [x0, #16]
 124:	cbz	x1, 12c <_ZN23NCursesMenuCallbackItem6actionEv+0xc>
 128:	br	x1
 12c:	mov	w0, wzr
 130:	ret

0000000000000134 <_nc_xx_mnu_init>:
 134:	stp	x29, x30, [sp, #-16]!
 138:	mov	x29, sp
 13c:	bl	0 <menu_userptr>
 140:	ldr	x0, [x0, #8]
 144:	ldr	x8, [x0]
 148:	ldr	x1, [x8, #104]
 14c:	ldp	x29, x30, [sp], #16
 150:	br	x1

0000000000000154 <_nc_xx_mnu_term>:
 154:	stp	x29, x30, [sp, #-16]!
 158:	mov	x29, sp
 15c:	bl	0 <menu_userptr>
 160:	ldr	x0, [x0, #8]
 164:	ldr	x8, [x0]
 168:	ldr	x1, [x8, #112]
 16c:	ldp	x29, x30, [sp], #16
 170:	br	x1

0000000000000174 <_nc_xx_itm_init>:
 174:	stp	x29, x30, [sp, #-32]!
 178:	stp	x20, x19, [sp, #16]
 17c:	mov	x29, sp
 180:	bl	0 <menu_userptr>
 184:	ldr	x19, [x0, #8]
 188:	ldr	x0, [x19, #56]
 18c:	ldr	x20, [x19, #80]
 190:	bl	0 <current_item>
 194:	bl	0 <item_index>
 198:	ldr	x8, [x19]
 19c:	ldr	x1, [x20, w0, sxtw #3]
 1a0:	mov	x0, x19
 1a4:	ldp	x20, x19, [sp, #16]
 1a8:	ldr	x2, [x8, #120]
 1ac:	ldp	x29, x30, [sp], #32
 1b0:	br	x2

00000000000001b4 <_nc_xx_itm_term>:
 1b4:	stp	x29, x30, [sp, #-32]!
 1b8:	stp	x20, x19, [sp, #16]
 1bc:	mov	x29, sp
 1c0:	bl	0 <menu_userptr>
 1c4:	ldr	x19, [x0, #8]
 1c8:	ldr	x0, [x19, #56]
 1cc:	ldr	x20, [x19, #80]
 1d0:	bl	0 <current_item>
 1d4:	bl	0 <item_index>
 1d8:	ldr	x8, [x19]
 1dc:	ldr	x1, [x20, w0, sxtw #3]
 1e0:	mov	x0, x19
 1e4:	ldp	x20, x19, [sp, #16]
 1e8:	ldr	x2, [x8, #128]
 1ec:	ldp	x29, x30, [sp], #32
 1f0:	br	x2

00000000000001f4 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>:
 1f4:	stp	x29, x30, [sp, #-48]!
 1f8:	stp	x22, x21, [sp, #16]
 1fc:	stp	x20, x19, [sp, #32]
 200:	mov	x29, sp
 204:	ldr	x8, [x1]
 208:	mov	x19, x1
 20c:	mov	x20, x0
 210:	ldr	x22, [x8, #8]
 214:	mov	w8, #0x1                   	// #1
 218:	cbz	x22, 230 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x3c>
 21c:	ldr	x9, [x19, x8, lsl #3]
 220:	add	x8, x8, #0x1
 224:	ldr	x9, [x9, #8]
 228:	cbnz	x9, 21c <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x28>
 22c:	sxtw	x8, w8
 230:	lsl	x9, x8, #3
 234:	cmp	xzr, x8, lsr #61
 238:	csinv	x0, x9, xzr, eq  // eq = none
 23c:	bl	0 <_Znam>
 240:	mov	x21, x0
 244:	cbz	x22, 264 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x70>
 248:	add	x9, x19, #0x8
 24c:	mov	x8, x21
 250:	str	x22, [x8], #8
 254:	ldr	x10, [x9], #8
 258:	ldr	x22, [x10, #8]
 25c:	cbnz	x22, 250 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x5c>
 260:	b	268 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x74>
 264:	mov	x8, x21
 268:	str	xzr, [x8]
 26c:	ldr	x0, [x20, #56]
 270:	str	x19, [x20, #80]
 274:	cbz	x0, 284 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x90>
 278:	bl	0 <menu_items>
 27c:	cbz	x0, 284 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x90>
 280:	bl	0 <_ZdaPv>
 284:	mov	x0, x21
 288:	ldp	x20, x19, [sp, #32]
 28c:	ldp	x22, x21, [sp, #16]
 290:	ldp	x29, x30, [sp], #48
 294:	ret

0000000000000298 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb>:
 298:	stp	x29, x30, [sp, #-64]!
 29c:	str	x23, [sp, #16]
 2a0:	stp	x22, x21, [sp, #32]
 2a4:	stp	x20, x19, [sp, #48]
 2a8:	mov	x29, sp
 2ac:	mov	x19, x0
 2b0:	ldr	x0, [x0, #8]
 2b4:	mov	x21, x1
 2b8:	mov	w1, #0x1                   	// #1
 2bc:	mov	w20, w2
 2c0:	and	w22, w2, #0x1
 2c4:	and	w23, w3, #0x1
 2c8:	bl	0 <keypad>
 2cc:	ldr	x0, [x19, #8]
 2d0:	mov	w1, #0x1                   	// #1
 2d4:	bl	0 <meta>
 2d8:	mov	x0, x19
 2dc:	mov	x1, x21
 2e0:	strb	w22, [x19, #73]
 2e4:	strb	w23, [x19, #74]
 2e8:	str	xzr, [x19, #56]
 2ec:	bl	1f4 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>
 2f0:	bl	0 <new_menu>
 2f4:	str	x0, [x19, #56]
 2f8:	cbz	x0, 454 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1bc>
 2fc:	mov	x21, x0
 300:	mov	w0, #0x18                  	// #24
 304:	bl	0 <_Znwm>
 308:	mov	x1, x0
 30c:	stp	xzr, x19, [x0]
 310:	str	x21, [x0, #16]
 314:	mov	x0, x21
 318:	bl	0 <set_menu_userptr>
 31c:	adrp	x1, 134 <_nc_xx_mnu_init>
 320:	ldr	x0, [x19, #56]
 324:	ldr	x1, [x1]
 328:	bl	0 <set_menu_init>
 32c:	adrp	x1, 154 <_nc_xx_mnu_term>
 330:	ldr	x0, [x19, #56]
 334:	ldr	x1, [x1]
 338:	bl	0 <set_menu_term>
 33c:	adrp	x1, 174 <_nc_xx_itm_init>
 340:	ldr	x0, [x19, #56]
 344:	ldr	x1, [x1]
 348:	bl	0 <set_item_init>
 34c:	adrp	x1, 1b4 <_nc_xx_itm_term>
 350:	ldr	x0, [x19, #56]
 354:	ldr	x1, [x1]
 358:	bl	0 <set_item_term>
 35c:	ldr	x0, [x19, #56]
 360:	add	x1, x29, #0x1c
 364:	add	x2, x29, #0x18
 368:	bl	0 <scale_menu>
 36c:	cbnz	w0, 490 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1f8>
 370:	ldr	x0, [x19, #56]
 374:	ldr	x1, [x19, #8]
 378:	bl	0 <set_menu_win>
 37c:	tbz	w20, #0, 3a8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x110>
 380:	ldr	x8, [x19, #8]
 384:	ldr	w20, [x29, #28]
 388:	cbz	x8, 3b4 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x11c>
 38c:	ldrh	w9, [x8, #4]
 390:	mov	w10, #0xfffe                	// #65534
 394:	cmp	w9, w10
 398:	csinv	w9, w9, wzr, ne  // ne = any
 39c:	sxth	w9, w9
 3a0:	sub	w9, w9, #0x1
 3a4:	b	3b8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x120>
 3a8:	mov	w8, wzr
 3ac:	str	xzr, [x19, #64]
 3b0:	b	42c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x194>
 3b4:	mov	w9, #0xfffffffe            	// #-2
 3b8:	cmp	w20, w9
 3bc:	b.gt	4cc <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x234>
 3c0:	ldr	w21, [x29, #24]
 3c4:	cbz	x8, 3e4 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x14c>
 3c8:	ldrh	w8, [x8, #6]
 3cc:	mov	w9, #0xfffe                	// #65534
 3d0:	cmp	w8, w9
 3d4:	csinv	w8, w8, wzr, ne  // ne = any
 3d8:	sxth	w8, w8
 3dc:	sub	w8, w8, #0x1
 3e0:	b	3e8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x150>
 3e4:	mov	w8, #0xfffffffe            	// #-2
 3e8:	cmp	w21, w8
 3ec:	b.gt	4cc <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x234>
 3f0:	mov	w0, #0x30                  	// #48
 3f4:	bl	0 <_Znwm>
 3f8:	mov	x22, x0
 3fc:	mov	w4, #0x1                   	// #1
 400:	mov	w5, #0x1                   	// #1
 404:	mov	w6, #0x72                  	// #114
 408:	mov	x1, x19
 40c:	mov	w2, w20
 410:	mov	w3, w21
 414:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 418:	str	x22, [x19, #64]
 41c:	ldr	x0, [x19, #56]
 420:	ldr	x1, [x22, #8]
 424:	bl	0 <set_menu_sub>
 428:	mov	w8, #0x1                   	// #1
 42c:	ldr	x9, [x19]
 430:	strb	w8, [x19, #72]
 434:	mov	x0, x19
 438:	ldr	x8, [x9, #96]
 43c:	blr	x8
 440:	ldp	x20, x19, [sp, #48]
 444:	ldp	x22, x21, [sp, #32]
 448:	ldr	x23, [sp, #16]
 44c:	ldp	x29, x30, [sp], #64
 450:	ret
 454:	mov	w0, #0x18                  	// #24
 458:	bl	0 <__cxa_allocate_exception>
 45c:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 460:	ldr	x8, [x8]
 464:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 468:	add	x9, x9, #0x0
 46c:	mov	w10, #0xffffffff            	// #-1
 470:	add	x8, x8, #0x10
 474:	stp	x8, x9, [x0]
 478:	str	w10, [x0, #16]
 47c:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 480:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 484:	ldr	x1, [x1]
 488:	ldr	x2, [x2]
 48c:	bl	0 <__cxa_throw>
 490:	mov	w21, w0
 494:	mov	w0, #0x18                  	// #24
 498:	bl	0 <__cxa_allocate_exception>
 49c:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 4a0:	ldr	x8, [x8]
 4a4:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 4a8:	add	x9, x9, #0x0
 4ac:	str	w21, [x0, #16]
 4b0:	add	x8, x8, #0x10
 4b4:	stp	x8, x9, [x0]
 4b8:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 4bc:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 4c0:	ldr	x1, [x1]
 4c4:	ldr	x2, [x2]
 4c8:	bl	0 <__cxa_throw>
 4cc:	mov	w0, #0x18                  	// #24
 4d0:	bl	0 <__cxa_allocate_exception>
 4d4:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 4d8:	ldr	x8, [x8]
 4dc:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 4e0:	add	x9, x9, #0x0
 4e4:	mov	w10, #0xfffffffa            	// #-6
 4e8:	add	x8, x8, #0x10
 4ec:	stp	x8, x9, [x0]
 4f0:	str	w10, [x0, #16]
 4f4:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 4f8:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 4fc:	ldr	x1, [x1]
 500:	ldr	x2, [x2]
 504:	bl	0 <__cxa_throw>
 508:	bl	0 <__cxa_call_unexpected>
 50c:	bl	0 <__cxa_call_unexpected>
 510:	bl	0 <__cxa_call_unexpected>
 514:	mov	x19, x0
 518:	mov	x0, x22
 51c:	bl	0 <_ZdlPv>
 520:	mov	x0, x19
 524:	bl	0 <_Unwind_Resume>

0000000000000528 <_ZN11NCursesMenu20setDefaultAttributesEv>:
 528:	stp	x29, x30, [sp, #-48]!
 52c:	str	x21, [sp, #16]
 530:	stp	x20, x19, [sp, #32]
 534:	mov	x29, sp
 538:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 53c:	ldr	x8, [x8]
 540:	ldr	x19, [x8]
 544:	cbz	x19, 5b8 <_ZN11NCursesMenu20setDefaultAttributesEv+0x90>
 548:	ldr	x8, [x19]
 54c:	ldr	x21, [x0, #56]
 550:	mov	x20, x0
 554:	mov	x0, x19
 558:	ldr	x8, [x8, #72]
 55c:	blr	x8
 560:	mov	w1, w0
 564:	mov	x0, x21
 568:	bl	0 <set_menu_fore>
 56c:	ldr	x8, [x19]
 570:	ldr	x21, [x20, #56]
 574:	mov	x0, x19
 578:	ldr	x8, [x8, #80]
 57c:	blr	x8
 580:	mov	w1, w0
 584:	mov	x0, x21
 588:	bl	0 <set_menu_back>
 58c:	ldr	x8, [x19]
 590:	ldr	x20, [x20, #56]
 594:	mov	x0, x19
 598:	ldr	x8, [x8, #88]
 59c:	blr	x8
 5a0:	mov	w1, w0
 5a4:	mov	x0, x20
 5a8:	ldp	x20, x19, [sp, #32]
 5ac:	ldr	x21, [sp, #16]
 5b0:	ldp	x29, x30, [sp], #48
 5b4:	b	0 <set_menu_grey>
 5b8:	ldp	x20, x19, [sp, #32]
 5bc:	ldr	x21, [sp, #16]
 5c0:	ldp	x29, x30, [sp], #48
 5c4:	ret

00000000000005c8 <_ZN11NCursesMenuD1Ev>:
 5c8:	stp	x29, x30, [sp, #-48]!
 5cc:	stp	x22, x21, [sp, #16]
 5d0:	stp	x20, x19, [sp, #32]
 5d4:	mov	x29, sp
 5d8:	adrp	x8, 28 <_ZN15NCursesMenuItemD1Ev+0x28>
 5dc:	mov	x19, x0
 5e0:	ldr	x0, [x0, #56]
 5e4:	ldr	x8, [x8]
 5e8:	add	x8, x8, #0x10
 5ec:	str	x8, [x19]
 5f0:	bl	0 <menu_userptr>
 5f4:	cbz	x0, 5fc <_ZN11NCursesMenuD1Ev+0x34>
 5f8:	bl	0 <_ZdlPv>
 5fc:	ldrb	w8, [x19, #72]
 600:	cbz	w8, 624 <_ZN11NCursesMenuD1Ev+0x5c>
 604:	ldr	x0, [x19, #56]
 608:	mov	x1, xzr
 60c:	bl	0 <set_menu_sub>
 610:	ldr	x0, [x19, #64]
 614:	cbz	x0, 624 <_ZN11NCursesMenuD1Ev+0x5c>
 618:	ldr	x8, [x0]
 61c:	ldr	x8, [x8, #16]
 620:	blr	x8
 624:	ldr	x0, [x19, #56]
 628:	cbz	x0, 6ac <_ZN11NCursesMenuD1Ev+0xe4>
 62c:	bl	0 <menu_items>
 630:	mov	x20, x0
 634:	ldr	x0, [x19, #56]
 638:	bl	0 <item_count>
 63c:	mov	w21, w0
 640:	ldr	x0, [x19, #56]
 644:	mov	x1, xzr
 648:	bl	0 <set_menu_items>
 64c:	cbnz	w0, 6c4 <_ZN11NCursesMenuD1Ev+0xfc>
 650:	ldrb	w8, [x19, #74]
 654:	cbz	w8, 698 <_ZN11NCursesMenuD1Ev+0xd0>
 658:	cmp	w21, #0x1
 65c:	b.lt	68c <_ZN11NCursesMenuD1Ev+0xc4>  // b.tstop
 660:	mov	x22, xzr
 664:	add	w21, w21, #0x1
 668:	ldr	x8, [x19, #80]
 66c:	ldr	x0, [x8, x22, lsl #3]
 670:	cbz	x0, 680 <_ZN11NCursesMenuD1Ev+0xb8>
 674:	ldr	x8, [x0]
 678:	ldr	x8, [x8, #8]
 67c:	blr	x8
 680:	add	x22, x22, #0x1
 684:	cmp	x21, x22
 688:	b.ne	668 <_ZN11NCursesMenuD1Ev+0xa0>  // b.any
 68c:	ldr	x0, [x19, #80]
 690:	cbz	x0, 698 <_ZN11NCursesMenuD1Ev+0xd0>
 694:	bl	0 <_ZdaPv>
 698:	ldr	x0, [x19, #56]
 69c:	bl	0 <free_menu>
 6a0:	cbz	x20, 6ac <_ZN11NCursesMenuD1Ev+0xe4>
 6a4:	mov	x0, x20
 6a8:	bl	0 <_ZdaPv>
 6ac:	mov	x0, x19
 6b0:	bl	0 <_ZN12NCursesPanelD2Ev>
 6b4:	ldp	x20, x19, [sp, #32]
 6b8:	ldp	x22, x21, [sp, #16]
 6bc:	ldp	x29, x30, [sp], #48
 6c0:	ret
 6c4:	mov	w20, w0
 6c8:	mov	w0, #0x18                  	// #24
 6cc:	bl	0 <__cxa_allocate_exception>
 6d0:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 6d4:	ldr	x8, [x8]
 6d8:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 6dc:	add	x9, x9, #0x0
 6e0:	str	w20, [x0, #16]
 6e4:	add	x8, x8, #0x10
 6e8:	stp	x8, x9, [x0]
 6ec:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 6f0:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 6f4:	ldr	x1, [x1]
 6f8:	ldr	x2, [x2]
 6fc:	bl	0 <__cxa_throw>
 700:	mov	x21, x1
 704:	mov	x20, x0
 708:	tbz	w21, #31, 734 <_ZN11NCursesMenuD1Ev+0x16c>
 70c:	mov	x0, x20
 710:	bl	0 <__cxa_call_unexpected>
 714:	b	72c <_ZN11NCursesMenuD1Ev+0x164>
 718:	mov	x21, x1
 71c:	mov	x20, x0
 720:	b	73c <_ZN11NCursesMenuD1Ev+0x174>
 724:	b	72c <_ZN11NCursesMenuD1Ev+0x164>
 728:	b	72c <_ZN11NCursesMenuD1Ev+0x164>
 72c:	mov	x21, x1
 730:	mov	x20, x0
 734:	mov	x0, x19
 738:	bl	0 <_ZN12NCursesPanelD2Ev>
 73c:	mov	x0, x20
 740:	tbz	w21, #31, 748 <_ZN11NCursesMenuD1Ev+0x180>
 744:	bl	0 <__cxa_call_unexpected>
 748:	bl	0 <_Unwind_Resume>
 74c:	bl	0 <_ZN15NCursesMenuItemD1Ev>

0000000000000750 <_ZN11NCursesMenuD0Ev>:
 750:	stp	x29, x30, [sp, #-48]!
 754:	str	x21, [sp, #16]
 758:	stp	x20, x19, [sp, #32]
 75c:	mov	x29, sp
 760:	mov	x19, x0
 764:	bl	5c8 <_ZN11NCursesMenuD1Ev>
 768:	mov	x0, x19
 76c:	ldp	x20, x19, [sp, #32]
 770:	ldr	x21, [sp, #16]
 774:	ldp	x29, x30, [sp], #48
 778:	b	0 <_ZdlPv>
 77c:	mov	x20, x0
 780:	mov	x0, x19
 784:	mov	x21, x1
 788:	bl	0 <_ZdlPv>
 78c:	mov	x0, x20
 790:	tbz	w21, #31, 798 <_ZN11NCursesMenuD0Ev+0x48>
 794:	bl	0 <__cxa_call_unexpected>
 798:	bl	0 <_Unwind_Resume>

000000000000079c <_ZN11NCursesMenu12setSubWindowER13NCursesWindow>:
 79c:	stp	x29, x30, [sp, #-32]!
 7a0:	stp	x20, x19, [sp, #16]
 7a4:	mov	x29, sp
 7a8:	mov	x19, x1
 7ac:	mov	x20, x0
 7b0:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 7b4:	tbz	w0, #0, 7ec <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x50>
 7b8:	ldrb	w8, [x20, #72]
 7bc:	cbz	w8, 7d4 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x38>
 7c0:	ldr	x0, [x20, #64]
 7c4:	cbz	x0, 7d4 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x38>
 7c8:	ldr	x8, [x0]
 7cc:	ldr	x8, [x8, #16]
 7d0:	blr	x8
 7d4:	str	x19, [x20, #64]
 7d8:	ldr	x0, [x20, #56]
 7dc:	ldr	x1, [x19, #8]
 7e0:	ldp	x20, x19, [sp, #16]
 7e4:	ldp	x29, x30, [sp], #32
 7e8:	b	0 <set_menu_sub>
 7ec:	mov	w0, #0x18                  	// #24
 7f0:	bl	0 <__cxa_allocate_exception>
 7f4:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 7f8:	ldr	x8, [x8]
 7fc:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 800:	add	x9, x9, #0x0
 804:	mov	w10, #0xffffffff            	// #-1
 808:	add	x8, x8, #0x10
 80c:	stp	x8, x9, [x0]
 810:	str	w10, [x0, #16]
 814:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 818:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 81c:	ldr	x1, [x1]
 820:	ldr	x2, [x2]
 824:	bl	0 <__cxa_throw>
 828:	bl	0 <__cxa_call_unexpected>

000000000000082c <_ZN11NCursesMenu11set_patternEPKc>:
 82c:	stp	x29, x30, [sp, #-32]!
 830:	str	x19, [sp, #16]
 834:	mov	x29, sp
 838:	ldr	x0, [x0, #56]
 83c:	bl	0 <set_menu_pattern>
 840:	cmn	w0, #0x9
 844:	b.eq	854 <_ZN11NCursesMenu11set_patternEPKc+0x28>  // b.none
 848:	cbnz	w0, 864 <_ZN11NCursesMenu11set_patternEPKc+0x38>
 84c:	mov	w0, #0x1                   	// #1
 850:	b	858 <_ZN11NCursesMenu11set_patternEPKc+0x2c>
 854:	mov	w0, wzr
 858:	ldr	x19, [sp, #16]
 85c:	ldp	x29, x30, [sp], #32
 860:	ret
 864:	mov	w19, w0
 868:	mov	w0, #0x18                  	// #24
 86c:	bl	0 <__cxa_allocate_exception>
 870:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 874:	ldr	x8, [x8]
 878:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 87c:	add	x9, x9, #0x0
 880:	str	w19, [x0, #16]
 884:	add	x8, x8, #0x10
 888:	stp	x8, x9, [x0]
 88c:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 890:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 894:	ldr	x1, [x1]
 898:	ldr	x2, [x2]
 89c:	bl	0 <__cxa_throw>
 8a0:	bl	0 <__cxa_call_unexpected>

00000000000008a4 <_ZN11NCursesMenu6driverEi>:
 8a4:	stp	x29, x30, [sp, #-32]!
 8a8:	str	x19, [sp, #16]
 8ac:	mov	x29, sp
 8b0:	ldr	x0, [x0, #56]
 8b4:	bl	0 <menu_driver>
 8b8:	add	w8, w0, #0xc
 8bc:	cmp	w8, #0xc
 8c0:	b.hi	8e4 <_ZN11NCursesMenu6driverEi+0x40>  // b.pmore
 8c4:	mov	w9, #0x1                   	// #1
 8c8:	lsl	w8, w9, w8
 8cc:	mov	w9, #0x101d                	// #4125
 8d0:	tst	w8, w9
 8d4:	b.eq	8e4 <_ZN11NCursesMenu6driverEi+0x40>  // b.none
 8d8:	ldr	x19, [sp, #16]
 8dc:	ldp	x29, x30, [sp], #32
 8e0:	ret
 8e4:	mov	w19, w0
 8e8:	mov	w0, #0x18                  	// #24
 8ec:	bl	0 <__cxa_allocate_exception>
 8f0:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 8f4:	ldr	x8, [x8]
 8f8:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 8fc:	add	x9, x9, #0x0
 900:	str	w19, [x0, #16]
 904:	add	x8, x8, #0x10
 908:	stp	x8, x9, [x0]
 90c:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 910:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 914:	ldr	x1, [x1]
 918:	ldr	x2, [x2]
 91c:	bl	0 <__cxa_throw>
 920:	bl	0 <__cxa_call_unexpected>

0000000000000924 <_ZN11NCursesMenu10virtualizeEi>:
 924:	cmp	w1, #0x101
 928:	b.gt	95c <_ZN11NCursesMenu10virtualizeEi+0x38>
 92c:	sub	w8, w1, #0x1
 930:	cmp	w8, #0x18
 934:	b.hi	a28 <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.pmore
 938:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 93c:	add	x9, x9, #0x0
 940:	adr	x10, 954 <_ZN11NCursesMenu10virtualizeEi+0x30>
 944:	ldrb	w11, [x9, x8]
 948:	add	x10, x10, x11, lsl #2
 94c:	mov	w0, #0x280                 	// #640
 950:	br	x10
 954:	mov	w0, #0x281                 	// #641
 958:	ret
 95c:	cmp	w1, #0x151
 960:	b.gt	990 <_ZN11NCursesMenu10virtualizeEi+0x6c>
 964:	sub	w8, w1, #0x102
 968:	cmp	w8, #0x5
 96c:	b.hi	a28 <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.pmore
 970:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 974:	add	x9, x9, #0x0
 978:	adr	x10, 988 <_ZN11NCursesMenu10virtualizeEi+0x64>
 97c:	ldrb	w11, [x9, x8]
 980:	add	x10, x10, x11, lsl #2
 984:	br	x10
 988:	mov	w0, #0x203                 	// #515
 98c:	ret
 990:	cmp	w1, #0x152
 994:	b.eq	9b8 <_ZN11NCursesMenu10virtualizeEi+0x94>  // b.none
 998:	cmp	w1, #0x153
 99c:	b.eq	9c0 <_ZN11NCursesMenu10virtualizeEi+0x9c>  // b.none
 9a0:	cmp	w1, #0x168
 9a4:	b.ne	a28 <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.any
 9a8:	mov	w0, #0x209                 	// #521
 9ac:	ret
 9b0:	mov	w0, #0x20e                 	// #526
 9b4:	ret
 9b8:	mov	w0, #0x206                 	// #518
 9bc:	ret
 9c0:	mov	w0, #0x207                 	// #519
 9c4:	ret
 9c8:	mov	w0, #0x20f                 	// #527
 9cc:	ret
 9d0:	mov	w0, #0x205                 	// #517
 9d4:	ret
 9d8:	mov	w0, #0x210                 	// #528
 9dc:	ret
 9e0:	mov	w0, #0x20a                 	// #522
 9e4:	ret
 9e8:	mov	w0, #0x20b                 	// #523
 9ec:	ret
 9f0:	mov	w0, #0x20c                 	// #524
 9f4:	ret
 9f8:	mov	w0, #0x204                 	// #516
 9fc:	ret
 a00:	mov	w0, #0x20d                 	// #525
 a04:	ret
 a08:	mov	w0, #0x202                 	// #514
 a0c:	ret
 a10:	mov	w0, #0x200                 	// #512
 a14:	ret
 a18:	mov	w0, #0x201                 	// #513
 a1c:	ret
 a20:	mov	w0, #0x208                 	// #520
 a24:	ret
 a28:	mov	w0, w1
 a2c:	ret

0000000000000a30 <_ZN11NCursesMenuclEv>:
 a30:	stp	x29, x30, [sp, #-64]!
 a34:	stp	x24, x23, [sp, #16]
 a38:	stp	x22, x21, [sp, #32]
 a3c:	stp	x20, x19, [sp, #48]
 a40:	mov	x29, sp
 a44:	mov	x19, x0
 a48:	ldr	x0, [x0, #56]
 a4c:	bl	0 <post_menu>
 a50:	cbnz	w0, cd0 <_ZN11NCursesMenuclEv+0x2a0>
 a54:	ldr	x0, [x19, #48]
 a58:	bl	0 <show_panel>
 a5c:	mov	w1, w0
 a60:	mov	x0, x19
 a64:	bl	0 <_ZN15NCursesMenuItemD1Ev>
 a68:	ldr	x8, [x19]
 a6c:	mov	x0, x19
 a70:	ldr	x8, [x8, #32]
 a74:	blr	x8
 a78:	ldr	x8, [x19]
 a7c:	mov	x0, x19
 a80:	ldr	x8, [x8, #48]
 a84:	blr	x8
 a88:	ldr	x8, [x19]
 a8c:	mov	w20, w0
 a90:	mov	x0, x19
 a94:	mov	w1, w20
 a98:	ldr	x8, [x8, #136]
 a9c:	blr	x8
 aa0:	cmp	w0, #0x280
 aa4:	b.ne	aec <_ZN11NCursesMenuclEv+0xbc>  // b.any
 aa8:	ldr	x0, [x19, #56]
 aac:	bl	0 <unpost_menu>
 ab0:	cbnz	w0, d0c <_ZN11NCursesMenuclEv+0x2dc>
 ab4:	ldr	x0, [x19, #48]
 ab8:	bl	0 <hide_panel>
 abc:	mov	w1, w0
 ac0:	mov	x0, x19
 ac4:	bl	0 <_ZN15NCursesMenuItemD1Ev>
 ac8:	ldr	x8, [x19]
 acc:	mov	x0, x19
 ad0:	ldr	x8, [x8, #32]
 ad4:	blr	x8
 ad8:	ldr	x0, [x19, #56]
 adc:	bl	0 <menu_opts>
 ae0:	tbnz	w0, #0, c6c <_ZN11NCursesMenuclEv+0x23c>
 ae4:	mov	x0, xzr
 ae8:	b	c80 <_ZN11NCursesMenuclEv+0x250>
 aec:	adrp	x22, 0 <_ZN15NCursesMenuItemD1Ev>
 af0:	mov	w21, w0
 af4:	add	x22, x22, #0x0
 af8:	ldr	x8, [x19]
 afc:	mov	x0, x19
 b00:	mov	w1, w21
 b04:	ldr	x8, [x8, #88]
 b08:	blr	x8
 b0c:	add	w8, w0, #0xc
 b10:	cmp	w8, #0x4
 b14:	b.hi	b34 <_ZN11NCursesMenuclEv+0x104>  // b.pmore
 b18:	adr	x9, b28 <_ZN11NCursesMenuclEv+0xf8>
 b1c:	ldrb	w10, [x22, x8]
 b20:	add	x9, x9, x10, lsl #2
 b24:	br	x9
 b28:	ldr	x8, [x19]
 b2c:	ldr	x8, [x8, #152]
 b30:	b	bfc <_ZN11NCursesMenuclEv+0x1cc>
 b34:	cbz	w0, c08 <_ZN11NCursesMenuclEv+0x1d8>
 b38:	b	c94 <_ZN11NCursesMenuclEv+0x264>
 b3c:	cmp	w21, #0x281
 b40:	b.ne	bc8 <_ZN11NCursesMenuclEv+0x198>  // b.any
 b44:	ldr	x0, [x19, #56]
 b48:	bl	0 <menu_opts>
 b4c:	tbnz	w0, #0, bd4 <_ZN11NCursesMenuclEv+0x1a4>
 b50:	ldr	x0, [x19, #56]
 b54:	bl	0 <item_count>
 b58:	cmp	w0, #0x1
 b5c:	b.lt	c08 <_ZN11NCursesMenuclEv+0x1d8>  // b.tstop
 b60:	mov	w8, w0
 b64:	mov	x23, xzr
 b68:	mov	w21, wzr
 b6c:	lsl	x24, x8, #3
 b70:	ldr	x8, [x19, #80]
 b74:	ldr	x20, [x8, x23]
 b78:	ldr	x0, [x20, #8]
 b7c:	bl	0 <item_value>
 b80:	tbz	w0, #0, ba8 <_ZN11NCursesMenuclEv+0x178>
 b84:	ldr	x8, [x20]
 b88:	mov	x0, x20
 b8c:	ldr	x8, [x8, #16]
 b90:	blr	x8
 b94:	ldr	x8, [x19]
 b98:	orr	w21, w21, w0
 b9c:	mov	x0, x19
 ba0:	ldr	x8, [x8, #32]
 ba4:	blr	x8
 ba8:	add	x23, x23, #0x8
 bac:	cmp	x24, x23
 bb0:	b.ne	b70 <_ZN11NCursesMenuclEv+0x140>  // b.any
 bb4:	tbz	w21, #0, c08 <_ZN11NCursesMenuclEv+0x1d8>
 bb8:	b	aa8 <_ZN11NCursesMenuclEv+0x78>
 bbc:	ldr	x8, [x19]
 bc0:	ldr	x8, [x8, #168]
 bc4:	b	bfc <_ZN11NCursesMenuclEv+0x1cc>
 bc8:	ldr	x8, [x19]
 bcc:	ldr	x8, [x8, #176]
 bd0:	b	bfc <_ZN11NCursesMenuclEv+0x1cc>
 bd4:	ldr	x0, [x19, #56]
 bd8:	ldr	x21, [x19, #80]
 bdc:	bl	0 <current_item>
 be0:	bl	0 <item_index>
 be4:	ldr	x21, [x21, w0, sxtw #3]
 be8:	ldr	x0, [x21, #8]
 bec:	bl	0 <item_opts>
 bf0:	tbnz	w0, #0, c40 <_ZN11NCursesMenuclEv+0x210>
 bf4:	ldr	x8, [x19]
 bf8:	ldr	x8, [x8, #160]
 bfc:	mov	x0, x19
 c00:	mov	w1, w20
 c04:	blr	x8
 c08:	ldr	x8, [x19]
 c0c:	mov	x0, x19
 c10:	ldr	x8, [x8, #48]
 c14:	blr	x8
 c18:	ldr	x8, [x19]
 c1c:	mov	w20, w0
 c20:	mov	x0, x19
 c24:	mov	w1, w20
 c28:	ldr	x8, [x8, #136]
 c2c:	blr	x8
 c30:	mov	w21, w0
 c34:	cmp	w0, #0x280
 c38:	b.ne	af8 <_ZN11NCursesMenuclEv+0xc8>  // b.any
 c3c:	b	aa8 <_ZN11NCursesMenuclEv+0x78>
 c40:	ldr	x8, [x21]
 c44:	mov	x0, x21
 c48:	ldr	x8, [x8, #16]
 c4c:	blr	x8
 c50:	ldr	x8, [x19]
 c54:	mov	w20, w0
 c58:	mov	x0, x19
 c5c:	ldr	x8, [x8, #32]
 c60:	blr	x8
 c64:	tbz	w20, #0, c08 <_ZN11NCursesMenuclEv+0x1d8>
 c68:	b	aa8 <_ZN11NCursesMenuclEv+0x78>
 c6c:	ldr	x0, [x19, #56]
 c70:	ldr	x20, [x19, #80]
 c74:	bl	0 <current_item>
 c78:	bl	0 <item_index>
 c7c:	ldr	x0, [x20, w0, sxtw #3]
 c80:	ldp	x20, x19, [sp, #48]
 c84:	ldp	x22, x21, [sp, #32]
 c88:	ldp	x24, x23, [sp, #16]
 c8c:	ldp	x29, x30, [sp], #64
 c90:	ret
 c94:	mov	w19, w0
 c98:	mov	w0, #0x18                  	// #24
 c9c:	bl	0 <__cxa_allocate_exception>
 ca0:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 ca4:	ldr	x8, [x8]
 ca8:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 cac:	add	x9, x9, #0x0
 cb0:	str	w19, [x0, #16]
 cb4:	add	x8, x8, #0x10
 cb8:	stp	x8, x9, [x0]
 cbc:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 cc0:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 cc4:	ldr	x1, [x1]
 cc8:	ldr	x2, [x2]
 ccc:	bl	0 <__cxa_throw>
 cd0:	mov	w20, w0
 cd4:	mov	w0, #0x18                  	// #24
 cd8:	bl	0 <__cxa_allocate_exception>
 cdc:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 ce0:	ldr	x8, [x8]
 ce4:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 ce8:	add	x9, x9, #0x0
 cec:	str	w20, [x0, #16]
 cf0:	add	x8, x8, #0x10
 cf4:	stp	x8, x9, [x0]
 cf8:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 cfc:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 d00:	ldr	x1, [x1]
 d04:	ldr	x2, [x2]
 d08:	bl	0 <__cxa_throw>
 d0c:	mov	w20, w0
 d10:	mov	w0, #0x18                  	// #24
 d14:	bl	0 <__cxa_allocate_exception>
 d18:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 d1c:	ldr	x8, [x8]
 d20:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 d24:	add	x9, x9, #0x0
 d28:	str	w20, [x0, #16]
 d2c:	add	x8, x8, #0x10
 d30:	stp	x8, x9, [x0]
 d34:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 d38:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 d3c:	ldr	x1, [x1]
 d40:	ldr	x2, [x2]
 d44:	bl	0 <__cxa_throw>
 d48:	bl	0 <__cxa_call_unexpected>
 d4c:	bl	0 <__cxa_call_unexpected>
 d50:	bl	0 <__cxa_call_unexpected>

0000000000000d54 <_ZN11NCursesMenu12On_Menu_InitEv>:
 d54:	ret

0000000000000d58 <_ZN11NCursesMenu19On_Menu_TerminationEv>:
 d58:	ret

0000000000000d5c <_ZN11NCursesMenu12On_Item_InitER15NCursesMenuItem>:
 d5c:	ret

0000000000000d60 <_ZN11NCursesMenu19On_Item_TerminationER15NCursesMenuItem>:
 d60:	ret

0000000000000d64 <_ZNK11NCursesMenu17On_Request_DeniedEi>:
 d64:	b	0 <beep>

0000000000000d68 <_ZNK11NCursesMenu17On_Not_SelectableEi>:
 d68:	b	0 <beep>

0000000000000d6c <_ZNK11NCursesMenu11On_No_MatchEi>:
 d6c:	b	0 <beep>

0000000000000d70 <_ZNK11NCursesMenu18On_Unknown_CommandEi>:
 d70:	b	0 <beep>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <move_panel>
  18:	mov	w1, w0
  1c:	mov	x0, x19
  20:	bl	0 <_ZN12NCursesPanel5mvwinEii>
  24:	ldr	x19, [sp, #16]
  28:	mov	w0, wzr
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN11NCursesMenu5frameEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu5frameEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesMenu9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu9boldframeEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu5labelEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu5labelEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK12NCursesPanel7OnErrorEi:

0000000000000000 <_ZNK12NCursesPanel7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmn	w1, #0x1
   c:	b.eq	18 <_ZNK12NCursesPanel7OnErrorEi+0x18>  // b.none
  10:	ldp	x29, x30, [sp], #16
  14:	ret
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZNK12NCursesPanel7OnErrorEi>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZNK12NCursesPanel7OnErrorEi>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZNK12NCursesPanel7OnErrorEi>
  44:	adrp	x2, 0 <_ZNK12NCursesPanel7OnErrorEi>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

cursesw.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN13NCursesWindow5scanwEPKcz>:
   0:	sub	sp, sp, #0x100
   4:	stp	x29, x30, [sp, #240]
   8:	add	x29, sp, #0xf0
   c:	mov	x8, #0xffffffffffffffd0    	// #-48
  10:	mov	x9, sp
  14:	sub	x10, x29, #0x70
  18:	movk	x8, #0xff80, lsl #32
  1c:	add	x11, x29, #0x10
  20:	add	x9, x9, #0x80
  24:	add	x10, x10, #0x30
  28:	stp	x2, x3, [x29, #-112]
  2c:	stp	x4, x5, [x29, #-96]
  30:	stp	x6, x7, [x29, #-80]
  34:	stp	q1, q2, [sp, #16]
  38:	stp	q3, q4, [sp, #48]
  3c:	str	q0, [sp]
  40:	stp	q5, q6, [sp, #80]
  44:	str	q7, [sp, #112]
  48:	stp	x9, x8, [x29, #-16]
  4c:	stp	x11, x10, [x29, #-32]
  50:	ldp	q0, q1, [x29, #-32]
  54:	ldr	x0, [x0, #8]
  58:	sub	x2, x29, #0x40
  5c:	stp	q0, q1, [x29, #-64]
  60:	bl	0 <vw_scanw>
  64:	ldp	x29, x30, [sp, #240]
  68:	add	sp, sp, #0x100
  6c:	ret

0000000000000070 <_ZN13NCursesWindow5scanwEiiPKcz>:
  70:	sub	sp, sp, #0x100
  74:	stp	x29, x30, [sp, #224]
  78:	stp	x20, x19, [sp, #240]
  7c:	add	x29, sp, #0xe0
  80:	stp	x4, x5, [x29, #-96]
  84:	stp	x6, x7, [x29, #-80]
  88:	stp	q0, q1, [sp]
  8c:	stp	q2, q3, [sp, #32]
  90:	stp	q4, q5, [sp, #64]
  94:	stp	q6, q7, [sp, #96]
  98:	mov	x20, x0
  9c:	ldr	x0, [x0, #8]
  a0:	mov	x19, x3
  a4:	bl	0 <wmove>
  a8:	cmn	w0, #0x1
  ac:	b.eq	ec <_ZN13NCursesWindow5scanwEiiPKcz+0x7c>  // b.none
  b0:	mov	x8, #0xffffffffffffffe0    	// #-32
  b4:	mov	x10, sp
  b8:	sub	x11, x29, #0x60
  bc:	movk	x8, #0xff80, lsl #32
  c0:	add	x9, x29, #0x20
  c4:	add	x10, x10, #0x80
  c8:	add	x11, x11, #0x20
  cc:	stp	x10, x8, [x29, #-16]
  d0:	stp	x9, x11, [x29, #-32]
  d4:	ldp	q0, q1, [x29, #-32]
  d8:	ldr	x0, [x20, #8]
  dc:	sub	x2, x29, #0x40
  e0:	mov	x1, x19
  e4:	stp	q0, q1, [x29, #-64]
  e8:	bl	0 <vw_scanw>
  ec:	ldp	x20, x19, [sp, #240]
  f0:	ldp	x29, x30, [sp, #224]
  f4:	add	sp, sp, #0x100
  f8:	ret

00000000000000fc <_ZN13NCursesWindow5scanwEPKcSt9__va_list>:
  fc:	sub	sp, sp, #0x30
 100:	stp	x29, x30, [sp, #32]
 104:	add	x29, sp, #0x20
 108:	ldp	q1, q0, [x2]
 10c:	ldr	x0, [x0, #8]
 110:	mov	x2, sp
 114:	stp	q1, q0, [sp]
 118:	bl	0 <vw_scanw>
 11c:	ldp	x29, x30, [sp, #32]
 120:	add	sp, sp, #0x30
 124:	ret

0000000000000128 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list>:
 128:	sub	sp, sp, #0x50
 12c:	stp	x29, x30, [sp, #32]
 130:	str	x21, [sp, #48]
 134:	stp	x20, x19, [sp, #64]
 138:	add	x29, sp, #0x20
 13c:	mov	x21, x0
 140:	ldr	x0, [x0, #8]
 144:	mov	x20, x4
 148:	mov	x19, x3
 14c:	bl	0 <wmove>
 150:	cmn	w0, #0x1
 154:	b.eq	170 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list+0x48>  // b.none
 158:	ldp	q1, q0, [x20]
 15c:	ldr	x0, [x21, #8]
 160:	mov	x2, sp
 164:	mov	x1, x19
 168:	stp	q1, q0, [sp]
 16c:	bl	0 <vw_scanw>
 170:	ldp	x20, x19, [sp, #64]
 174:	ldr	x21, [sp, #48]
 178:	ldp	x29, x30, [sp, #32]
 17c:	add	sp, sp, #0x50
 180:	ret

0000000000000184 <_ZN13NCursesWindow6printwEPKcz>:
 184:	sub	sp, sp, #0x100
 188:	stp	x29, x30, [sp, #240]
 18c:	add	x29, sp, #0xf0
 190:	mov	x8, #0xffffffffffffffd0    	// #-48
 194:	mov	x9, sp
 198:	sub	x10, x29, #0x70
 19c:	movk	x8, #0xff80, lsl #32
 1a0:	add	x11, x29, #0x10
 1a4:	add	x9, x9, #0x80
 1a8:	add	x10, x10, #0x30
 1ac:	stp	x2, x3, [x29, #-112]
 1b0:	stp	x4, x5, [x29, #-96]
 1b4:	stp	x6, x7, [x29, #-80]
 1b8:	stp	q1, q2, [sp, #16]
 1bc:	stp	q3, q4, [sp, #48]
 1c0:	str	q0, [sp]
 1c4:	stp	q5, q6, [sp, #80]
 1c8:	str	q7, [sp, #112]
 1cc:	stp	x9, x8, [x29, #-16]
 1d0:	stp	x11, x10, [x29, #-32]
 1d4:	ldp	q0, q1, [x29, #-32]
 1d8:	ldr	x0, [x0, #8]
 1dc:	sub	x2, x29, #0x40
 1e0:	stp	q0, q1, [x29, #-64]
 1e4:	bl	0 <vw_printw>
 1e8:	ldp	x29, x30, [sp, #240]
 1ec:	add	sp, sp, #0x100
 1f0:	ret

00000000000001f4 <_ZN13NCursesWindow6printwEiiPKcz>:
 1f4:	sub	sp, sp, #0x100
 1f8:	stp	x29, x30, [sp, #224]
 1fc:	stp	x20, x19, [sp, #240]
 200:	add	x29, sp, #0xe0
 204:	mov	x8, #0xffffffffffffffe0    	// #-32
 208:	mov	x9, sp
 20c:	sub	x10, x29, #0x60
 210:	movk	x8, #0xff80, lsl #32
 214:	add	x11, x29, #0x20
 218:	add	x9, x9, #0x80
 21c:	add	x10, x10, #0x20
 220:	stp	x4, x5, [x29, #-96]
 224:	stp	x6, x7, [x29, #-80]
 228:	stp	q0, q1, [sp]
 22c:	stp	q2, q3, [sp, #32]
 230:	stp	q4, q5, [sp, #64]
 234:	stp	q6, q7, [sp, #96]
 238:	stp	x9, x8, [x29, #-16]
 23c:	stp	x11, x10, [x29, #-32]
 240:	mov	x20, x0
 244:	ldr	x0, [x0, #8]
 248:	mov	x19, x3
 24c:	bl	0 <wmove>
 250:	cbnz	w0, 26c <_ZN13NCursesWindow6printwEiiPKcz+0x78>
 254:	ldp	q0, q1, [x29, #-32]
 258:	ldr	x0, [x20, #8]
 25c:	sub	x2, x29, #0x40
 260:	mov	x1, x19
 264:	stp	q0, q1, [x29, #-64]
 268:	bl	0 <vw_printw>
 26c:	ldp	x20, x19, [sp, #240]
 270:	ldp	x29, x30, [sp, #224]
 274:	add	sp, sp, #0x100
 278:	ret

000000000000027c <_ZN13NCursesWindow6printwEPKcSt9__va_list>:
 27c:	sub	sp, sp, #0x30
 280:	stp	x29, x30, [sp, #32]
 284:	add	x29, sp, #0x20
 288:	ldp	q1, q0, [x2]
 28c:	ldr	x0, [x0, #8]
 290:	mov	x2, sp
 294:	stp	q1, q0, [sp]
 298:	bl	0 <vw_printw>
 29c:	ldp	x29, x30, [sp, #32]
 2a0:	add	sp, sp, #0x30
 2a4:	ret

00000000000002a8 <_ZN13NCursesWindow6printwEiiPKcSt9__va_list>:
 2a8:	sub	sp, sp, #0x50
 2ac:	stp	x29, x30, [sp, #32]
 2b0:	str	x21, [sp, #48]
 2b4:	stp	x20, x19, [sp, #64]
 2b8:	add	x29, sp, #0x20
 2bc:	mov	x21, x0
 2c0:	ldr	x0, [x0, #8]
 2c4:	mov	x20, x4
 2c8:	mov	x19, x3
 2cc:	bl	0 <wmove>
 2d0:	cbnz	w0, 2ec <_ZN13NCursesWindow6printwEiiPKcSt9__va_list+0x44>
 2d4:	ldp	q1, q0, [x20]
 2d8:	ldr	x0, [x21, #8]
 2dc:	mov	x2, sp
 2e0:	mov	x1, x19
 2e4:	stp	q1, q0, [sp]
 2e8:	bl	0 <vw_printw>
 2ec:	ldp	x20, x19, [sp, #64]
 2f0:	ldr	x21, [sp, #48]
 2f4:	ldp	x29, x30, [sp, #32]
 2f8:	add	sp, sp, #0x50
 2fc:	ret

0000000000000300 <_ZN13NCursesWindow12set_keyboardEv>:
 300:	stp	x29, x30, [sp, #-32]!
 304:	str	x19, [sp, #16]
 308:	mov	x29, sp
 30c:	mov	x19, x0
 310:	ldr	x0, [x0, #8]
 314:	mov	w1, #0x1                   	// #1
 318:	bl	0 <keypad>
 31c:	ldr	x0, [x19, #8]
 320:	ldr	x19, [sp, #16]
 324:	mov	w1, #0x1                   	// #1
 328:	ldp	x29, x30, [sp], #32
 32c:	b	0 <meta>

0000000000000330 <_ZNK13NCursesWindow11err_handlerEPKc>:
 330:	stp	x29, x30, [sp, #-32]!
 334:	str	x19, [sp, #16]
 338:	mov	x29, sp
 33c:	mov	w0, #0x18                  	// #24
 340:	mov	x19, x1
 344:	bl	0 <__cxa_allocate_exception>
 348:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 34c:	ldr	x8, [x8]
 350:	mov	w9, #0xffffffff            	// #-1
 354:	str	w9, [x0, #16]
 358:	add	x8, x8, #0x10
 35c:	stp	x8, x19, [x0]
 360:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
 364:	adrp	x2, 0 <_ZN13NCursesWindow5scanwEPKcz>
 368:	ldr	x1, [x1]
 36c:	ldr	x2, [x2]
 370:	bl	0 <__cxa_throw>
 374:	bl	0 <__cxa_call_unexpected>

0000000000000378 <_ZN13NCursesWindow10initializeEv>:
 378:	stp	x29, x30, [sp, #-32]!
 37c:	str	x19, [sp, #16]
 380:	mov	x29, sp
 384:	adrp	x19, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
 388:	ldr	x19, [x19]
 38c:	ldrb	w8, [x19]
 390:	cbz	w8, 3a0 <_ZN13NCursesWindow10initializeEv+0x28>
 394:	ldr	x19, [sp, #16]
 398:	ldp	x29, x30, [sp], #32
 39c:	ret
 3a0:	bl	0 <initscr>
 3a4:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 3a8:	ldr	x8, [x8]
 3ac:	mov	w10, #0x1                   	// #1
 3b0:	strb	w10, [x19]
 3b4:	ldr	w9, [x8]
 3b8:	cmn	w9, #0x1
 3bc:	b.ne	3c8 <_ZN13NCursesWindow10initializeEv+0x50>  // b.any
 3c0:	str	wzr, [x8]
 3c4:	bl	3d8 <_ZN13NCursesWindow9useColorsEv>
 3c8:	bl	0 <noecho>
 3cc:	ldr	x19, [sp, #16]
 3d0:	ldp	x29, x30, [sp], #32
 3d4:	b	0 <cbreak>

00000000000003d8 <_ZN13NCursesWindow9useColorsEv>:
 3d8:	stp	x29, x30, [sp, #-32]!
 3dc:	str	x19, [sp, #16]
 3e0:	mov	x29, sp
 3e4:	adrp	x19, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 3e8:	ldr	x19, [x19]
 3ec:	ldr	w8, [x19]
 3f0:	cbnz	w8, 428 <_ZN13NCursesWindow9useColorsEv+0x50>
 3f4:	adrp	x8, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
 3f8:	ldr	x8, [x8]
 3fc:	ldrb	w8, [x8]
 400:	cbz	w8, 418 <_ZN13NCursesWindow9useColorsEv+0x40>
 404:	bl	0 <has_colors>
 408:	tbz	w0, #0, 420 <_ZN13NCursesWindow9useColorsEv+0x48>
 40c:	bl	0 <start_color>
 410:	mov	w8, #0x2                   	// #2
 414:	b	424 <_ZN13NCursesWindow9useColorsEv+0x4c>
 418:	mov	w8, #0xffffffff            	// #-1
 41c:	b	424 <_ZN13NCursesWindow9useColorsEv+0x4c>
 420:	mov	w8, #0x1                   	// #1
 424:	str	w8, [x19]
 428:	ldr	x19, [sp, #16]
 42c:	ldp	x29, x30, [sp], #32
 430:	ret

0000000000000434 <_ZN13NCursesWindow12constructingEv>:
 434:	stp	x29, x30, [sp, #-16]!
 438:	mov	x29, sp
 43c:	bl	378 <_ZN13NCursesWindow10initializeEv>
 440:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 444:	ldr	x8, [x8]
 448:	ldr	x9, [x8]
 44c:	add	x9, x9, #0x1
 450:	str	x9, [x8]
 454:	ldp	x29, x30, [sp], #16
 458:	ret

000000000000045c <_ZN13NCursesWindowC1Ev>:
 45c:	stp	x29, x30, [sp, #-32]!
 460:	str	x19, [sp, #16]
 464:	mov	x29, sp
 468:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 46c:	ldr	x8, [x8]
 470:	mov	x19, x0
 474:	strb	wzr, [x0, #16]
 478:	stp	xzr, xzr, [x0, #32]
 47c:	add	x8, x8, #0x10
 480:	stp	x8, xzr, [x0]
 484:	str	xzr, [x0, #24]
 488:	bl	378 <_ZN13NCursesWindow10initializeEv>
 48c:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 490:	ldr	x8, [x8]
 494:	ldr	x9, [x8]
 498:	add	x9, x9, #0x1
 49c:	str	x9, [x8]
 4a0:	str	xzr, [x19, #8]
 4a4:	ldr	x19, [sp, #16]
 4a8:	ldp	x29, x30, [sp], #32
 4ac:	ret

00000000000004b0 <_ZN13NCursesWindowC1Eiiii>:
 4b0:	stp	x29, x30, [sp, #-64]!
 4b4:	str	x23, [sp, #16]
 4b8:	stp	x22, x21, [sp, #32]
 4bc:	stp	x20, x19, [sp, #48]
 4c0:	mov	x29, sp
 4c4:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 4c8:	ldr	x8, [x8]
 4cc:	mov	w9, #0x1                   	// #1
 4d0:	mov	w20, w4
 4d4:	mov	w21, w3
 4d8:	add	x8, x8, #0x10
 4dc:	mov	w22, w2
 4e0:	mov	w23, w1
 4e4:	mov	x19, x0
 4e8:	stp	xzr, xzr, [x0, #32]
 4ec:	strb	w9, [x0, #16]
 4f0:	stp	x8, xzr, [x0]
 4f4:	str	xzr, [x0, #24]
 4f8:	bl	378 <_ZN13NCursesWindow10initializeEv>
 4fc:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 500:	ldr	x8, [x8]
 504:	mov	w0, w23
 508:	mov	w1, w22
 50c:	mov	w2, w21
 510:	ldr	x9, [x8]
 514:	mov	w3, w20
 518:	add	x9, x9, #0x1
 51c:	str	x9, [x8]
 520:	bl	0 <newwin>
 524:	str	x0, [x19, #8]
 528:	cbnz	x0, 548 <_ZN13NCursesWindowC1Eiiii+0x98>
 52c:	ldr	x8, [x19]
 530:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
 534:	add	x1, x1, #0x0
 538:	mov	x0, x19
 53c:	ldr	x8, [x8]
 540:	blr	x8
 544:	ldr	x0, [x19, #8]
 548:	mov	w1, #0x1                   	// #1
 54c:	bl	0 <keypad>
 550:	ldr	x0, [x19, #8]
 554:	ldp	x20, x19, [sp, #48]
 558:	ldp	x22, x21, [sp, #32]
 55c:	ldr	x23, [sp, #16]
 560:	mov	w1, #0x1                   	// #1
 564:	ldp	x29, x30, [sp], #64
 568:	b	0 <meta>

000000000000056c <_ZN13NCursesWindowC1EP7_win_st>:
 56c:	stp	x29, x30, [sp, #-32]!
 570:	stp	x20, x19, [sp, #16]
 574:	mov	x29, sp
 578:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 57c:	ldr	x8, [x8]
 580:	mov	x19, x1
 584:	mov	x20, x0
 588:	strb	wzr, [x0, #16]
 58c:	add	x8, x8, #0x10
 590:	stp	xzr, xzr, [x0, #32]
 594:	stp	x8, xzr, [x0]
 598:	str	xzr, [x0, #24]
 59c:	bl	378 <_ZN13NCursesWindow10initializeEv>
 5a0:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 5a4:	adrp	x9, 0 <stdscr>
 5a8:	ldr	x8, [x8]
 5ac:	ldr	x9, [x9]
 5b0:	cmp	x19, #0x0
 5b4:	mov	w1, #0x1                   	// #1
 5b8:	ldr	x10, [x8]
 5bc:	ldr	x9, [x9]
 5c0:	add	x10, x10, #0x1
 5c4:	csel	x0, x9, x19, eq  // eq = none
 5c8:	str	x10, [x8]
 5cc:	str	x0, [x20, #8]
 5d0:	bl	0 <keypad>
 5d4:	ldr	x0, [x20, #8]
 5d8:	ldp	x20, x19, [sp, #16]
 5dc:	mov	w1, #0x1                   	// #1
 5e0:	ldp	x29, x30, [sp], #32
 5e4:	b	0 <meta>

00000000000005e8 <_ZN13NCursesWindowC1ERS_iiiic>:
 5e8:	stp	x29, x30, [sp, #-80]!
 5ec:	str	x25, [sp, #16]
 5f0:	stp	x24, x23, [sp, #32]
 5f4:	stp	x22, x21, [sp, #48]
 5f8:	stp	x20, x19, [sp, #64]
 5fc:	mov	x29, sp
 600:	mov	w8, #0x1                   	// #1
 604:	strb	w8, [x0, #16]
 608:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 60c:	ldr	x8, [x8]
 610:	mov	w21, w5
 614:	mov	w22, w4
 618:	mov	w23, w3
 61c:	add	x8, x8, #0x10
 620:	mov	w24, w2
 624:	mov	x19, x1
 628:	mov	x20, x0
 62c:	and	w25, w6, #0xff
 630:	stp	xzr, xzr, [x0, #32]
 634:	stp	x8, xzr, [x0]
 638:	str	xzr, [x0, #24]
 63c:	bl	378 <_ZN13NCursesWindow10initializeEv>
 640:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 644:	ldr	x8, [x8]
 648:	cmp	w25, #0x61
 64c:	ldr	x9, [x8]
 650:	add	x9, x9, #0x1
 654:	str	x9, [x8]
 658:	ldr	x0, [x19, #8]
 65c:	b.ne	680 <_ZN13NCursesWindowC1ERS_iiiic+0x98>  // b.any
 660:	cbz	x0, 670 <_ZN13NCursesWindowC1ERS_iiiic+0x88>
 664:	ldrsh	w8, [x0, #8]
 668:	ldrsh	w9, [x0, #10]
 66c:	b	678 <_ZN13NCursesWindowC1ERS_iiiic+0x90>
 670:	mov	w8, #0xffffffff            	// #-1
 674:	mov	w9, #0xffffffff            	// #-1
 678:	sub	w22, w22, w8
 67c:	sub	w21, w21, w9
 680:	mov	w1, w24
 684:	mov	w2, w23
 688:	mov	w3, w22
 68c:	mov	w4, w21
 690:	bl	0 <derwin>
 694:	str	x0, [x20, #8]
 698:	cbnz	x0, 6b4 <_ZN13NCursesWindowC1ERS_iiiic+0xcc>
 69c:	ldr	x8, [x20]
 6a0:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
 6a4:	add	x1, x1, #0x0
 6a8:	mov	x0, x20
 6ac:	ldr	x8, [x8]
 6b0:	blr	x8
 6b4:	str	x19, [x20, #24]
 6b8:	ldr	x8, [x19, #32]
 6bc:	ldr	x25, [sp, #16]
 6c0:	str	x8, [x20, #40]
 6c4:	str	x20, [x19, #32]
 6c8:	ldp	x20, x19, [sp, #64]
 6cc:	ldp	x22, x21, [sp, #48]
 6d0:	ldp	x24, x23, [sp, #32]
 6d4:	ldp	x29, x30, [sp], #80
 6d8:	ret

00000000000006dc <_ZN13NCursesWindowC1ERS_b>:
 6dc:	sub	sp, sp, #0x40
 6e0:	stp	x29, x30, [sp, #16]
 6e4:	str	x21, [sp, #32]
 6e8:	stp	x20, x19, [sp, #48]
 6ec:	add	x29, sp, #0x10
 6f0:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 6f4:	ldr	x8, [x8]
 6f8:	mov	w9, #0x1                   	// #1
 6fc:	mov	w20, w2
 700:	mov	x19, x1
 704:	add	x8, x8, #0x10
 708:	mov	x21, x0
 70c:	stp	xzr, xzr, [x0, #32]
 710:	strb	w9, [x0, #16]
 714:	stp	x8, xzr, [x0]
 718:	str	xzr, [x0, #24]
 71c:	bl	378 <_ZN13NCursesWindow10initializeEv>
 720:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 724:	ldr	x8, [x8]
 728:	ldr	x9, [x8]
 72c:	add	x9, x9, #0x1
 730:	str	x9, [x8]
 734:	ldr	x0, [x19, #8]
 738:	cbz	x0, 76c <_ZN13NCursesWindowC1ERS_b+0x90>
 73c:	ldrh	w8, [x0, #4]
 740:	ldrh	w9, [x0, #6]
 744:	mov	w10, #0xfffe                	// #65534
 748:	cmp	w8, w10
 74c:	csinv	w8, w8, wzr, ne  // ne = any
 750:	cmp	w9, w10
 754:	csinv	w9, w9, wzr, ne  // ne = any
 758:	sxth	w8, w8
 75c:	sxth	w9, w9
 760:	sub	w1, w8, #0x1
 764:	sub	w2, w9, #0x1
 768:	b	774 <_ZN13NCursesWindowC1ERS_b+0x98>
 76c:	mov	w1, #0xfffffffe            	// #-2
 770:	mov	w2, #0xfffffffe            	// #-2
 774:	mov	w3, #0x1                   	// #1
 778:	mov	w4, #0x1                   	// #1
 77c:	bl	0 <derwin>
 780:	str	x0, [x21, #8]
 784:	cbnz	x0, 7a0 <_ZN13NCursesWindowC1ERS_b+0xc4>
 788:	ldr	x8, [x21]
 78c:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
 790:	add	x1, x1, #0x0
 794:	mov	x0, x21
 798:	ldr	x8, [x8]
 79c:	blr	x8
 7a0:	str	x19, [x21, #24]
 7a4:	ldr	x8, [x19, #32]
 7a8:	str	x8, [x21, #40]
 7ac:	str	x21, [x19, #32]
 7b0:	str	xzr, [x21, #32]
 7b4:	tbz	w20, #0, 7f8 <_ZN13NCursesWindowC1ERS_b+0x11c>
 7b8:	ldr	x0, [x19, #8]
 7bc:	mov	w1, wzr
 7c0:	mov	w2, wzr
 7c4:	mov	w3, wzr
 7c8:	mov	w4, wzr
 7cc:	mov	w5, wzr
 7d0:	mov	w6, wzr
 7d4:	mov	w7, wzr
 7d8:	str	wzr, [sp]
 7dc:	bl	0 <wborder>
 7e0:	mov	x0, x19
 7e4:	ldp	x20, x19, [sp, #48]
 7e8:	ldr	x21, [sp, #32]
 7ec:	ldp	x29, x30, [sp, #16]
 7f0:	add	sp, sp, #0x40
 7f4:	b	0 <_ZN13NCursesWindow5scanwEPKcz>
 7f8:	ldp	x20, x19, [sp, #48]
 7fc:	ldr	x21, [sp, #32]
 800:	ldp	x29, x30, [sp, #16]
 804:	add	sp, sp, #0x40
 808:	ret

000000000000080c <_ZN13NCursesWindow5CloneEv>:
 80c:	stp	x29, x30, [sp, #-32]!
 810:	stp	x20, x19, [sp, #16]
 814:	mov	x29, sp
 818:	mov	x19, x0
 81c:	ldr	x0, [x0, #8]
 820:	mov	x20, x8
 824:	bl	0 <dupwin>
 828:	mov	x1, x0
 82c:	mov	x0, x20
 830:	bl	56c <_ZN13NCursesWindowC1EP7_win_st>
 834:	ldr	x8, [x19, #40]
 838:	str	x8, [x20, #40]
 83c:	ldur	q0, [x19, #24]
 840:	stur	q0, [x20, #24]
 844:	ldrb	w8, [x19, #16]
 848:	strb	w8, [x20, #16]
 84c:	ldp	x20, x19, [sp, #16]
 850:	ldp	x29, x30, [sp], #32
 854:	ret

0000000000000858 <_ZN13NCursesWindowC1EP7_win_sti>:
 858:	stp	x29, x30, [sp, #-32]!
 85c:	stp	x20, x19, [sp, #16]
 860:	mov	x29, sp
 864:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 868:	ldr	x8, [x8]
 86c:	mov	x19, x1
 870:	mov	x20, x0
 874:	strb	wzr, [x0, #16]
 878:	add	x8, x8, #0x10
 87c:	stp	xzr, xzr, [x0, #32]
 880:	stp	x8, xzr, [x0]
 884:	str	xzr, [x0, #24]
 888:	bl	378 <_ZN13NCursesWindow10initializeEv>
 88c:	str	x19, [x20, #8]
 890:	ldp	x20, x19, [sp, #16]
 894:	ldp	x29, x30, [sp], #32
 898:	ret

000000000000089c <_nc_xx_ripoff_init>:
 89c:	sub	sp, sp, #0x30
 8a0:	stp	x29, x30, [sp, #16]
 8a4:	stp	x20, x19, [sp, #32]
 8a8:	add	x29, sp, #0x10
 8ac:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 8b0:	ldr	x9, [x8]
 8b4:	add	x10, x9, #0x8
 8b8:	str	x10, [x8]
 8bc:	ldr	x1, [x9]
 8c0:	cbz	x1, 914 <_nc_xx_ripoff_init+0x78>
 8c4:	mov	x19, x0
 8c8:	mov	w0, #0x30                  	// #48
 8cc:	str	x1, [sp, #8]
 8d0:	bl	0 <_Znwm>
 8d4:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 8d8:	ldr	x8, [x8]
 8dc:	mov	x20, x0
 8e0:	strb	wzr, [x0, #16]
 8e4:	stp	xzr, xzr, [x0, #32]
 8e8:	add	x8, x8, #0x10
 8ec:	stp	x8, xzr, [x0]
 8f0:	str	xzr, [x0, #24]
 8f4:	bl	378 <_ZN13NCursesWindow10initializeEv>
 8f8:	str	x19, [x20, #8]
 8fc:	mov	x0, x20
 900:	ldr	x1, [sp, #8]
 904:	ldp	x20, x19, [sp, #32]
 908:	ldp	x29, x30, [sp, #16]
 90c:	add	sp, sp, #0x30
 910:	br	x1
 914:	ldp	x20, x19, [sp, #32]
 918:	ldp	x29, x30, [sp, #16]
 91c:	mov	w0, #0xffffffff            	// #-1
 920:	add	sp, sp, #0x30
 924:	ret
 928:	mov	x19, x0
 92c:	mov	x0, x20
 930:	bl	0 <_ZdlPv>
 934:	mov	x0, x19
 938:	bl	0 <_Unwind_Resume>

000000000000093c <_ZN13NCursesWindow10ripofflineEiPFiRS_E>:
 93c:	stp	x29, x30, [sp, #-32]!
 940:	stp	x20, x19, [sp, #16]
 944:	mov	x29, sp
 948:	mov	x19, x1
 94c:	adrp	x1, 89c <_nc_xx_ripoff_init>
 950:	ldr	x1, [x1]
 954:	mov	w20, w0
 958:	bl	0 <_nc_ripoffline>
 95c:	cbz	w20, 984 <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
 960:	cbz	x19, 984 <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
 964:	cbnz	w0, 984 <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
 968:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 96c:	ldrsw	x9, [x8]
 970:	adrp	x10, 0 <_ZN13NCursesWindow5scanwEPKcz>
 974:	add	x10, x10, #0x0
 978:	add	w11, w9, #0x1
 97c:	str	w11, [x8]
 980:	str	x19, [x10, x9, lsl #3]
 984:	ldp	x20, x19, [sp, #16]
 988:	ldp	x29, x30, [sp], #32
 98c:	ret

0000000000000990 <_ZN13NCursesWindow12isDescendantERS_>:
 990:	stp	x29, x30, [sp, #-32]!
 994:	stp	x20, x19, [sp, #16]
 998:	ldr	x19, [x0, #32]
 99c:	mov	x29, sp
 9a0:	cbz	x19, 9c8 <_ZN13NCursesWindow12isDescendantERS_+0x38>
 9a4:	mov	x20, x1
 9a8:	cmp	x19, x20
 9ac:	b.eq	9d0 <_ZN13NCursesWindow12isDescendantERS_+0x40>  // b.none
 9b0:	mov	x0, x19
 9b4:	mov	x1, x20
 9b8:	bl	990 <_ZN13NCursesWindow12isDescendantERS_>
 9bc:	tbnz	w0, #0, 9d0 <_ZN13NCursesWindow12isDescendantERS_+0x40>
 9c0:	ldr	x19, [x19, #40]
 9c4:	cbnz	x19, 9a8 <_ZN13NCursesWindow12isDescendantERS_+0x18>
 9c8:	mov	w0, wzr
 9cc:	b	9d4 <_ZN13NCursesWindow12isDescendantERS_+0x44>
 9d0:	mov	w0, #0x1                   	// #1
 9d4:	ldp	x20, x19, [sp, #16]
 9d8:	ldp	x29, x30, [sp], #32
 9dc:	ret

00000000000009e0 <_ZN13NCursesWindow15kill_subwindowsEv>:
 9e0:	stp	x29, x30, [sp, #-32]!
 9e4:	stp	x20, x19, [sp, #16]
 9e8:	mov	x29, sp
 9ec:	ldr	x20, [x0, #32]
 9f0:	str	xzr, [x0, #32]
 9f4:	cbz	x20, a30 <_ZN13NCursesWindow15kill_subwindowsEv+0x50>
 9f8:	mov	x19, x20
 9fc:	ldr	x20, [x20, #40]
 a00:	mov	x0, x19
 a04:	bl	9e0 <_ZN13NCursesWindow15kill_subwindowsEv>
 a08:	ldrb	w8, [x19, #16]
 a0c:	cbz	w8, a1c <_ZN13NCursesWindow15kill_subwindowsEv+0x3c>
 a10:	ldr	x0, [x19, #8]
 a14:	cbz	x0, a1c <_ZN13NCursesWindow15kill_subwindowsEv+0x3c>
 a18:	bl	0 <delwin>
 a1c:	ldr	x8, [x19]
 a20:	mov	x0, x19
 a24:	ldr	x8, [x8, #16]
 a28:	blr	x8
 a2c:	cbnz	x20, 9f8 <_ZN13NCursesWindow15kill_subwindowsEv+0x18>
 a30:	ldp	x20, x19, [sp, #16]
 a34:	ldp	x29, x30, [sp], #32
 a38:	ret

0000000000000a3c <_ZN13NCursesWindowD1Ev>:
 a3c:	stp	x29, x30, [sp, #-32]!
 a40:	str	x19, [sp, #16]
 a44:	mov	x29, sp
 a48:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
 a4c:	ldr	x8, [x8]
 a50:	mov	x19, x0
 a54:	add	x8, x8, #0x10
 a58:	str	x8, [x0]
 a5c:	bl	9e0 <_ZN13NCursesWindow15kill_subwindowsEv>
 a60:	ldr	x8, [x19, #24]
 a64:	cbz	x8, aac <_ZN13NCursesWindowD1Ev+0x70>
 a68:	ldr	x9, [x8, #32]
 a6c:	cbz	x9, aac <_ZN13NCursesWindowD1Ev+0x70>
 a70:	cmp	x9, x19
 a74:	b.eq	a94 <_ZN13NCursesWindowD1Ev+0x58>  // b.none
 a78:	ldr	x11, [x9, #40]
 a7c:	cbz	x11, aac <_ZN13NCursesWindowD1Ev+0x70>
 a80:	cmp	x11, x19
 a84:	mov	x10, x9
 a88:	mov	x9, x11
 a8c:	b.ne	a78 <_ZN13NCursesWindowD1Ev+0x3c>  // b.any
 a90:	b	a98 <_ZN13NCursesWindowD1Ev+0x5c>
 a94:	mov	x10, xzr
 a98:	ldr	x9, [x19, #40]
 a9c:	cbz	x10, aa8 <_ZN13NCursesWindowD1Ev+0x6c>
 aa0:	str	x9, [x10, #40]
 aa4:	b	aac <_ZN13NCursesWindowD1Ev+0x70>
 aa8:	str	x9, [x8, #32]
 aac:	ldrb	w8, [x19, #16]
 ab0:	cbz	w8, b08 <_ZN13NCursesWindowD1Ev+0xcc>
 ab4:	ldr	x0, [x19, #8]
 ab8:	cbz	x0, ac8 <_ZN13NCursesWindowD1Ev+0x8c>
 abc:	bl	0 <delwin>
 ac0:	ldrb	w8, [x19, #16]
 ac4:	cbz	w8, b08 <_ZN13NCursesWindowD1Ev+0xcc>
 ac8:	adrp	x9, 0 <_ZN13NCursesWindow5scanwEPKcz>
 acc:	ldr	x9, [x9]
 ad0:	ldr	x8, [x9]
 ad4:	subs	x10, x8, #0x1
 ad8:	str	x10, [x9]
 adc:	b.eq	b04 <_ZN13NCursesWindowD1Ev+0xc8>  // b.none
 ae0:	cmp	x8, #0x0
 ae4:	b.gt	b08 <_ZN13NCursesWindowD1Ev+0xcc>
 ae8:	ldr	x8, [x19]
 aec:	ldr	x8, [x8]
 af0:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
 af4:	add	x1, x1, #0x0
 af8:	mov	x0, x19
 afc:	blr	x8
 b00:	b	b08 <_ZN13NCursesWindowD1Ev+0xcc>
 b04:	bl	0 <endwin>
 b08:	ldr	x19, [sp, #16]
 b0c:	ldp	x29, x30, [sp], #32
 b10:	ret
 b14:	bl	0 <__cxa_call_unexpected>

0000000000000b18 <_ZN13NCursesWindowD0Ev>:
 b18:	stp	x29, x30, [sp, #-48]!
 b1c:	str	x21, [sp, #16]
 b20:	stp	x20, x19, [sp, #32]
 b24:	mov	x29, sp
 b28:	mov	x19, x0
 b2c:	bl	a3c <_ZN13NCursesWindowD1Ev>
 b30:	mov	x0, x19
 b34:	ldp	x20, x19, [sp, #32]
 b38:	ldr	x21, [sp, #16]
 b3c:	ldp	x29, x30, [sp], #48
 b40:	b	0 <_ZdlPv>
 b44:	mov	x20, x0
 b48:	mov	x0, x19
 b4c:	mov	x21, x1
 b50:	bl	0 <_ZdlPv>
 b54:	mov	x0, x20
 b58:	tbz	w21, #31, b60 <_ZN13NCursesWindowD0Ev+0x48>
 b5c:	bl	0 <__cxa_call_unexpected>
 b60:	bl	0 <_Unwind_Resume>

0000000000000b64 <_ZNK13NCursesWindow7getPairEv>:
 b64:	ldr	x8, [x0, #8]
 b68:	cbz	x8, b74 <_ZNK13NCursesWindow7getPairEv+0x10>
 b6c:	ldrb	w0, [x8, #17]
 b70:	ret
 b74:	mov	w0, wzr
 b78:	ret

0000000000000b7c <_ZNK13NCursesWindow8getcolorEi>:
 b7c:	sub	sp, sp, #0x30
 b80:	stp	x29, x30, [sp, #16]
 b84:	stp	x20, x19, [sp, #32]
 b88:	add	x29, sp, #0x10
 b8c:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 b90:	ldr	x8, [x8]
 b94:	mov	w19, w1
 b98:	ldr	w8, [x8]
 b9c:	cmp	w8, #0x2
 ba0:	b.ne	bb8 <_ZNK13NCursesWindow8getcolorEi+0x3c>  // b.any
 ba4:	ldr	x8, [x0, #8]
 ba8:	mov	x20, x0
 bac:	cbz	x8, bc8 <_ZNK13NCursesWindow8getcolorEi+0x4c>
 bb0:	ldrb	w0, [x8, #17]
 bb4:	b	bcc <_ZNK13NCursesWindow8getcolorEi+0x50>
 bb8:	mov	w8, #0x7                   	// #7
 bbc:	strh	wzr, [sp, #8]
 bc0:	sturh	w8, [x29, #-4]
 bc4:	b	bf8 <_ZNK13NCursesWindow8getcolorEi+0x7c>
 bc8:	mov	w0, wzr
 bcc:	sub	x1, x29, #0x4
 bd0:	add	x2, sp, #0x8
 bd4:	bl	0 <pair_content>
 bd8:	cmn	w0, #0x1
 bdc:	b.ne	bf8 <_ZNK13NCursesWindow8getcolorEi+0x7c>  // b.any
 be0:	ldr	x8, [x20]
 be4:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
 be8:	add	x1, x1, #0x0
 bec:	mov	x0, x20
 bf0:	ldr	x8, [x8]
 bf4:	blr	x8
 bf8:	cmp	w19, #0x0
 bfc:	add	x8, sp, #0x8
 c00:	sub	x9, x29, #0x4
 c04:	csel	x8, x9, x8, eq  // eq = none
 c08:	ldrh	w0, [x8]
 c0c:	ldp	x20, x19, [sp, #32]
 c10:	ldp	x29, x30, [sp, #16]
 c14:	add	sp, sp, #0x30
 c18:	ret

0000000000000c1c <_ZN13NCursesWindow14NumberOfColorsEv>:
 c1c:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 c20:	ldr	x8, [x8]
 c24:	adrp	x9, 0 <COLORS>
 c28:	ldr	w8, [x8]
 c2c:	ldr	x9, [x9]
 c30:	cmp	w8, #0x2
 c34:	ldr	w9, [x9]
 c38:	csinc	w0, w9, wzr, eq  // eq = none
 c3c:	ret

0000000000000c40 <_ZNK13NCursesWindow8getcolorEv>:
 c40:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 c44:	ldr	x8, [x8]
 c48:	ldr	w8, [x8]
 c4c:	cmp	w8, #0x2
 c50:	b.ne	c64 <_ZNK13NCursesWindow8getcolorEv+0x24>  // b.any
 c54:	ldr	x8, [x0, #8]
 c58:	cbz	x8, c64 <_ZNK13NCursesWindow8getcolorEv+0x24>
 c5c:	ldrb	w0, [x8, #17]
 c60:	ret
 c64:	mov	w0, wzr
 c68:	ret

0000000000000c6c <_ZN13NCursesWindow10setpaletteEsss>:
 c6c:	adrp	x9, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 c70:	ldr	x9, [x9]
 c74:	ldr	w9, [x9]
 c78:	cmp	w9, #0x2
 c7c:	b.ne	c94 <_ZN13NCursesWindow10setpaletteEsss+0x28>  // b.any
 c80:	mov	w8, w1
 c84:	mov	w1, w0
 c88:	mov	w0, w2
 c8c:	mov	w2, w8
 c90:	b	0 <init_pair>
 c94:	mov	w0, wzr
 c98:	ret

0000000000000c9c <_ZN13NCursesWindow10setpaletteEss>:
 c9c:	ldr	x8, [x0, #8]
 ca0:	cbz	x8, cac <_ZN13NCursesWindow10setpaletteEss+0x10>
 ca4:	ldrb	w0, [x8, #17]
 ca8:	b	cb0 <_ZN13NCursesWindow10setpaletteEss+0x14>
 cac:	mov	w0, wzr
 cb0:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 cb4:	ldr	x8, [x8]
 cb8:	ldr	w8, [x8]
 cbc:	cmp	w8, #0x2
 cc0:	b.ne	cc8 <_ZN13NCursesWindow10setpaletteEss+0x2c>  // b.any
 cc4:	b	0 <init_pair>
 cc8:	mov	w0, wzr
 ccc:	ret

0000000000000cd0 <_ZN13NCursesWindow8setcolorEs>:
 cd0:	stp	x29, x30, [sp, #-32]!
 cd4:	stp	x20, x19, [sp, #16]
 cd8:	mov	x29, sp
 cdc:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
 ce0:	ldr	x8, [x8]
 ce4:	ldr	w8, [x8]
 ce8:	cmp	w8, #0x2
 cec:	b.ne	d54 <_ZN13NCursesWindow8setcolorEs+0x84>  // b.any
 cf0:	sxth	w20, w1
 cf4:	mov	x19, x0
 cf8:	cmp	w20, #0x1
 cfc:	b.lt	d14 <_ZN13NCursesWindow8setcolorEs+0x44>  // b.tstop
 d00:	adrp	x8, 0 <COLOR_PAIRS>
 d04:	ldr	x8, [x8]
 d08:	ldr	w8, [x8]
 d0c:	cmp	w8, w20
 d10:	b.ge	d2c <_ZN13NCursesWindow8setcolorEs+0x5c>  // b.tcont
 d14:	ldr	x8, [x19]
 d18:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
 d1c:	add	x1, x1, #0x0
 d20:	mov	x0, x19
 d24:	ldr	x8, [x8]
 d28:	blr	x8
 d2c:	ldr	x0, [x19, #8]
 d30:	mov	w1, #0xff00                	// #65280
 d34:	mov	x2, xzr
 d38:	bl	0 <wattr_off>
 d3c:	ldr	x8, [x19, #8]
 d40:	cbz	x8, d54 <_ZN13NCursesWindow8setcolorEs+0x84>
 d44:	ubfiz	w9, w20, #8, #8
 d48:	lsr	w10, w9, #8
 d4c:	str	w10, [x8, #116]
 d50:	str	w9, [x8, #16]
 d54:	ldp	x20, x19, [sp, #16]
 d58:	mov	w0, wzr
 d5c:	ldp	x29, x30, [sp], #32
 d60:	ret

0000000000000d64 <_ZNK13NCursesWindow9has_mouseEv>:
 d64:	stp	x29, x30, [sp, #-16]!
 d68:	mov	x29, sp
 d6c:	mov	w0, #0x199                 	// #409
 d70:	bl	0 <has_key>
 d74:	cbz	w0, d84 <_ZNK13NCursesWindow9has_mouseEv+0x20>
 d78:	mov	w0, #0x1                   	// #1
 d7c:	ldp	x29, x30, [sp], #16
 d80:	ret
 d84:	ldp	x29, x30, [sp], #16
 d88:	b	0 <has_mouse>

Disassembly of section .text._ZN13NCursesWindow12CUR_touchwinEv:

0000000000000000 <_ZN13NCursesWindow12CUR_touchwinEv>:
   0:	ldr	x0, [x0, #8]
   4:	cbz	x0, 24 <_ZN13NCursesWindow12CUR_touchwinEv+0x24>
   8:	ldrh	w8, [x0, #4]
   c:	mov	w9, #0xfffe                	// #65534
  10:	cmp	w8, w9
  14:	csinv	w8, w8, wzr, ne  // ne = any
  18:	sxth	w8, w8
  1c:	add	w2, w8, #0x1
  20:	b	28 <_ZN13NCursesWindow12CUR_touchwinEv+0x28>
  24:	mov	w2, wzr
  28:	mov	w3, #0x1                   	// #1
  2c:	mov	w1, wzr
  30:	b	0 <wtouchln>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text._ZN13NCursesWindow7refreshEv:

0000000000000000 <_ZN13NCursesWindow7refreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wrefresh>

Disassembly of section .text._ZN13NCursesWindow11noutrefreshEv:

0000000000000000 <_ZN13NCursesWindow11noutrefreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wnoutrefresh>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursespad.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN10NCursesPadC1Eii>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w20, w2
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	bl	0 <_ZN13NCursesWindowC2Ev>
  20:	adrp	x8, 0 <_ZN10NCursesPadC1Eii>
  24:	ldr	x8, [x8]
  28:	movi	v0.2d, #0x0
  2c:	stp	q0, q0, [x19, #48]
  30:	add	x8, x8, #0x10
  34:	str	x8, [x19]
  38:	mov	w0, w21
  3c:	mov	w1, w20
  40:	bl	0 <newpad>
  44:	str	x0, [x19, #8]
  48:	cbnz	x0, 78 <_ZN10NCursesPadC1Eii+0x78>
  4c:	adrp	x8, 0 <_ZN13NCursesWindow5countE>
  50:	ldr	x8, [x8]
  54:	ldr	x9, [x8]
  58:	sub	x9, x9, #0x1
  5c:	str	x9, [x8]
  60:	ldr	x8, [x19]
  64:	ldr	x8, [x8]
  68:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
  6c:	add	x1, x1, #0x0
  70:	mov	x0, x19
  74:	blr	x8
  78:	mov	w8, #0x1                   	// #1
  7c:	strb	w8, [x19, #16]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x20, x0
  94:	mov	x0, x19
  98:	bl	0 <_ZN13NCursesWindowD2Ev>
  9c:	mov	x0, x20
  a0:	bl	0 <_Unwind_Resume>
  a4:	bl	0 <_ZN10NCursesPadC1Eii>

00000000000000a8 <_ZN10NCursesPad6driverEi>:
  a8:	sub	w8, w1, #0x102
  ac:	cmp	w8, #0x3
  b0:	b.hi	d8 <_ZN10NCursesPad6driverEi+0x30>  // b.pmore
  b4:	adrp	x9, 0 <_ZN10NCursesPadC1Eii>
  b8:	add	x9, x9, #0x0
  bc:	adr	x10, d0 <_ZN10NCursesPad6driverEi+0x28>
  c0:	ldrb	w11, [x9, x8]
  c4:	add	x10, x10, x11, lsl #2
  c8:	mov	w0, #0x201                 	// #513
  cc:	br	x10
  d0:	mov	w0, #0x202                 	// #514
  d4:	ret
  d8:	mov	w0, w1
  dc:	cmp	w1, #0x18
  e0:	b.eq	ec <_ZN10NCursesPad6driverEi+0x44>  // b.none
  e4:	cmp	w0, #0x169
  e8:	b.ne	100 <_ZN10NCursesPad6driverEi+0x58>  // b.any
  ec:	mov	w0, #0x205                 	// #517
  f0:	ret
  f4:	mov	w0, #0x203                 	// #515
  f8:	ret
  fc:	mov	w0, #0x204                 	// #516
 100:	ret

0000000000000104 <_ZN10NCursesPadclEv>:
 104:	stp	x29, x30, [sp, #-96]!
 108:	str	x27, [sp, #16]
 10c:	stp	x26, x25, [sp, #32]
 110:	stp	x24, x23, [sp, #48]
 114:	stp	x22, x21, [sp, #64]
 118:	stp	x20, x19, [sp, #80]
 11c:	mov	x29, sp
 120:	ldr	x21, [x0, #56]
 124:	mov	x19, x0
 128:	cbnz	x21, 134 <_ZN10NCursesPadclEv+0x30>
 12c:	ldr	x21, [x19, #48]
 130:	cbz	x21, 3ec <_ZN10NCursesPadclEv+0x2e8>
 134:	ldr	x0, [x21, #8]
 138:	cbz	x0, 16c <_ZN10NCursesPadclEv+0x68>
 13c:	ldrh	w8, [x0, #6]
 140:	ldrh	w9, [x0, #4]
 144:	mov	w10, #0xfffe                	// #65534
 148:	cmp	w8, w10
 14c:	csinv	w8, w8, wzr, ne  // ne = any
 150:	cmp	w9, w10
 154:	sxth	w8, w8
 158:	csinv	w9, w9, wzr, ne  // ne = any
 15c:	add	w22, w8, #0x1
 160:	sxth	w8, w9
 164:	add	w23, w8, #0x1
 168:	b	174 <_ZN10NCursesPadclEv+0x70>
 16c:	mov	w22, wzr
 170:	mov	w23, wzr
 174:	mov	w1, #0x1                   	// #1
 178:	bl	0 <keypad>
 17c:	ldr	x0, [x21, #8]
 180:	mov	w1, #0x1                   	// #1
 184:	bl	0 <meta>
 188:	ldr	x8, [x19]
 18c:	mov	x0, x19
 190:	ldr	x8, [x8, #32]
 194:	blr	x8
 198:	adrp	x26, 0 <_ZN10NCursesPadC1Eii>
 19c:	mvn	w24, w23
 1a0:	mvn	w25, w22
 1a4:	mov	w20, #0x200                 	// #512
 1a8:	add	x26, x26, #0x0
 1ac:	mov	w27, #0xfffe                	// #65534
 1b0:	sub	w8, w20, #0x200
 1b4:	cmp	w8, #0x4
 1b8:	b.hi	1ec <_ZN10NCursesPadclEv+0xe8>  // b.pmore
 1bc:	adr	x9, 1cc <_ZN10NCursesPadclEv+0xc8>
 1c0:	ldrb	w10, [x26, x8]
 1c4:	add	x9, x9, x10, lsl #2
 1c8:	br	x9
 1cc:	ldr	w8, [x19, #72]
 1d0:	cmp	w8, #0x1
 1d4:	b.lt	268 <_ZN10NCursesPadclEv+0x164>  // b.tstop
 1d8:	ldr	w9, [x19, #68]
 1dc:	subs	w8, w8, w9
 1e0:	b.ge	33c <_ZN10NCursesPadclEv+0x238>  // b.tcont
 1e4:	str	wzr, [x19, #72]
 1e8:	b	388 <_ZN10NCursesPadclEv+0x284>
 1ec:	ldr	x8, [x19]
 1f0:	mov	x0, x19
 1f4:	mov	w1, w20
 1f8:	ldr	x8, [x8, #56]
 1fc:	b	2f4 <_ZN10NCursesPadclEv+0x1f0>
 200:	ldr	x8, [x19, #8]
 204:	ldr	w9, [x19, #72]
 208:	cbz	x8, 274 <_ZN10NCursesPadclEv+0x170>
 20c:	ldrh	w10, [x8, #4]
 210:	cmp	w10, w27
 214:	csinv	w10, w10, wzr, ne  // ne = any
 218:	sxth	w10, w10
 21c:	add	w10, w10, #0x1
 220:	b	278 <_ZN10NCursesPadclEv+0x174>
 224:	ldr	w8, [x19, #76]
 228:	cmp	w8, #0x1
 22c:	b.lt	2ac <_ZN10NCursesPadclEv+0x1a8>  // b.tstop
 230:	ldr	w9, [x19, #64]
 234:	subs	w8, w8, w9
 238:	b.ge	384 <_ZN10NCursesPadclEv+0x280>  // b.tcont
 23c:	str	wzr, [x19, #76]
 240:	b	388 <_ZN10NCursesPadclEv+0x284>
 244:	ldr	x8, [x19, #8]
 248:	ldr	w9, [x19, #76]
 24c:	cbz	x8, 2b8 <_ZN10NCursesPadclEv+0x1b4>
 250:	ldrh	w10, [x8, #6]
 254:	cmp	w10, w27
 258:	csinv	w10, w10, wzr, ne  // ne = any
 25c:	sxth	w10, w10
 260:	add	w10, w10, #0x1
 264:	b	2bc <_ZN10NCursesPadclEv+0x1b8>
 268:	ldr	x8, [x19]
 26c:	mov	w1, #0x201                 	// #513
 270:	b	2ec <_ZN10NCursesPadclEv+0x1e8>
 274:	mov	w10, wzr
 278:	add	w10, w10, w24
 27c:	cmp	w9, w10
 280:	b.ge	2a0 <_ZN10NCursesPadclEv+0x19c>  // b.tcont
 284:	cbz	x8, 2fc <_ZN10NCursesPadclEv+0x1f8>
 288:	ldrh	w10, [x8, #4]
 28c:	cmp	w10, w27
 290:	csinv	w10, w10, wzr, ne  // ne = any
 294:	sxth	w10, w10
 298:	add	w10, w10, #0x1
 29c:	b	300 <_ZN10NCursesPadclEv+0x1fc>
 2a0:	ldr	x8, [x19]
 2a4:	mov	w1, #0x202                 	// #514
 2a8:	b	2ec <_ZN10NCursesPadclEv+0x1e8>
 2ac:	ldr	x8, [x19]
 2b0:	mov	w1, #0x203                 	// #515
 2b4:	b	2ec <_ZN10NCursesPadclEv+0x1e8>
 2b8:	mov	w10, wzr
 2bc:	add	w10, w10, w25
 2c0:	cmp	w9, w10
 2c4:	b.ge	2e4 <_ZN10NCursesPadclEv+0x1e0>  // b.tcont
 2c8:	cbz	x8, 344 <_ZN10NCursesPadclEv+0x240>
 2cc:	ldrh	w10, [x8, #6]
 2d0:	cmp	w10, w27
 2d4:	csinv	w10, w10, wzr, ne  // ne = any
 2d8:	sxth	w10, w10
 2dc:	add	w10, w10, #0x1
 2e0:	b	348 <_ZN10NCursesPadclEv+0x244>
 2e4:	ldr	x8, [x19]
 2e8:	mov	w1, #0x204                 	// #516
 2ec:	ldr	x8, [x8, #64]
 2f0:	mov	x0, x19
 2f4:	blr	x8
 2f8:	b	3c4 <_ZN10NCursesPadclEv+0x2c0>
 2fc:	mov	w10, wzr
 300:	ldr	w11, [x19, #68]
 304:	sub	w10, w10, w23
 308:	mvn	w12, w11
 30c:	add	w10, w10, w12
 310:	cmp	w9, w10
 314:	b.le	338 <_ZN10NCursesPadclEv+0x234>
 318:	cbz	x8, 330 <_ZN10NCursesPadclEv+0x22c>
 31c:	ldrh	w8, [x8, #4]
 320:	cmp	w8, w27
 324:	csinv	w8, w8, wzr, ne  // ne = any
 328:	sxth	w8, w8
 32c:	add	w8, w8, #0x1
 330:	add	w8, w8, w24
 334:	b	33c <_ZN10NCursesPadclEv+0x238>
 338:	add	w8, w11, w9
 33c:	str	w8, [x19, #72]
 340:	b	388 <_ZN10NCursesPadclEv+0x284>
 344:	mov	w10, wzr
 348:	ldr	w11, [x19, #64]
 34c:	sub	w10, w10, w22
 350:	mvn	w12, w11
 354:	add	w10, w10, w12
 358:	cmp	w9, w10
 35c:	b.le	380 <_ZN10NCursesPadclEv+0x27c>
 360:	cbz	x8, 378 <_ZN10NCursesPadclEv+0x274>
 364:	ldrh	w8, [x8, #6]
 368:	cmp	w8, w27
 36c:	csinv	w8, w8, wzr, ne  // ne = any
 370:	sxth	w8, w8
 374:	add	w8, w8, #0x1
 378:	add	w8, w8, w25
 37c:	b	384 <_ZN10NCursesPadclEv+0x280>
 380:	add	w8, w11, w9
 384:	str	w8, [x19, #76]
 388:	ldr	x8, [x19]
 38c:	mov	x0, x19
 390:	ldr	x8, [x8, #40]
 394:	blr	x8
 398:	ldr	x0, [x21, #8]
 39c:	bl	0 <wsyncup>
 3a0:	ldr	x8, [x19]
 3a4:	mov	x0, x19
 3a8:	mov	w1, w20
 3ac:	ldr	x8, [x8, #72]
 3b0:	blr	x8
 3b4:	ldr	x0, [x19, #48]
 3b8:	ldr	x8, [x0]
 3bc:	ldr	x8, [x8, #32]
 3c0:	blr	x8
 3c4:	ldr	x0, [x21, #8]
 3c8:	bl	0 <wgetch>
 3cc:	ldr	x8, [x19]
 3d0:	mov	w1, w0
 3d4:	mov	x0, x19
 3d8:	ldr	x8, [x8, #48]
 3dc:	blr	x8
 3e0:	mov	w20, w0
 3e4:	cmp	w0, #0x205
 3e8:	b.ne	1b0 <_ZN10NCursesPadclEv+0xac>  // b.any
 3ec:	ldp	x20, x19, [sp, #80]
 3f0:	ldp	x22, x21, [sp, #64]
 3f4:	ldp	x24, x23, [sp, #48]
 3f8:	ldp	x26, x25, [sp, #32]
 3fc:	ldr	x27, [sp, #16]
 400:	ldp	x29, x30, [sp], #96
 404:	ret

0000000000000408 <_ZN10NCursesPad7refreshEv>:
 408:	stp	x29, x30, [sp, #-32]!
 40c:	str	x19, [sp, #16]
 410:	mov	x29, sp
 414:	ldr	x8, [x0]
 418:	mov	x19, x0
 41c:	ldr	x8, [x8, #40]
 420:	blr	x8
 424:	cbz	w0, 434 <_ZN10NCursesPad7refreshEv+0x2c>
 428:	ldr	x19, [sp, #16]
 42c:	ldp	x29, x30, [sp], #32
 430:	ret
 434:	ldr	x0, [x19, #48]
 438:	cbz	x0, 428 <_ZN10NCursesPad7refreshEv+0x20>
 43c:	ldr	x8, [x0]
 440:	ldr	x19, [sp, #16]
 444:	ldr	x1, [x8, #32]
 448:	ldp	x29, x30, [sp], #32
 44c:	br	x1

0000000000000450 <_ZN10NCursesPad11noutrefreshEv>:
 450:	sub	sp, sp, #0x30
 454:	stp	x29, x30, [sp, #16]
 458:	stp	x20, x19, [sp, #32]
 45c:	add	x29, sp, #0x10
 460:	ldr	x20, [x0, #56]
 464:	mov	x19, x0
 468:	cbnz	x20, 474 <_ZN10NCursesPad11noutrefreshEv+0x24>
 46c:	ldr	x20, [x19, #48]
 470:	cbz	x20, 4ec <_ZN10NCursesPad11noutrefreshEv+0x9c>
 474:	ldr	x1, [x20, #8]
 478:	cbz	x1, 4a4 <_ZN10NCursesPad11noutrefreshEv+0x54>
 47c:	ldrh	w8, [x1, #4]
 480:	ldrh	w9, [x1, #6]
 484:	mov	w10, #0xfffe                	// #65534
 488:	cmp	w8, w10
 48c:	csinv	w8, w8, wzr, ne  // ne = any
 490:	cmp	w9, w10
 494:	sxth	w6, w8
 498:	csinv	w8, w9, wzr, ne  // ne = any
 49c:	sxth	w7, w8
 4a0:	b	4ac <_ZN10NCursesPad11noutrefreshEv+0x5c>
 4a4:	mov	w6, #0xffffffff            	// #-1
 4a8:	mov	w7, #0xffffffff            	// #-1
 4ac:	ldp	w2, w3, [x19, #72]
 4b0:	ldr	x0, [x19, #8]
 4b4:	mov	w4, wzr
 4b8:	mov	w5, wzr
 4bc:	str	wzr, [sp]
 4c0:	bl	0 <copywin>
 4c4:	cbnz	w0, 4f0 <_ZN10NCursesPad11noutrefreshEv+0xa0>
 4c8:	ldr	x0, [x20, #8]
 4cc:	bl	0 <wsyncup>
 4d0:	ldr	x0, [x19, #48]
 4d4:	ldp	x20, x19, [sp, #32]
 4d8:	ldp	x29, x30, [sp, #16]
 4dc:	ldr	x8, [x0]
 4e0:	ldr	x1, [x8, #40]
 4e4:	add	sp, sp, #0x30
 4e8:	br	x1
 4ec:	mov	w0, wzr
 4f0:	ldp	x20, x19, [sp, #32]
 4f4:	ldp	x29, x30, [sp, #16]
 4f8:	add	sp, sp, #0x30
 4fc:	ret

0000000000000500 <_ZN10NCursesPad9setWindowER13NCursesWindowii>:
 500:	cmp	w2, #0x1
 504:	str	x1, [x0, #48]
 508:	str	xzr, [x0, #72]
 50c:	b.lt	520 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x20>  // b.tstop
 510:	cmp	w3, #0x0
 514:	b.le	520 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x20>
 518:	stp	w3, w2, [x0, #64]
 51c:	ret
 520:	ldr	x8, [x0]
 524:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 528:	add	x1, x1, #0x0
 52c:	ldr	x2, [x8]
 530:	br	x2

0000000000000534 <_ZN10NCursesPad12setSubWindowER13NCursesWindow>:
 534:	stp	x29, x30, [sp, #-32]!
 538:	stp	x20, x19, [sp, #16]
 53c:	mov	x29, sp
 540:	mov	x19, x0
 544:	ldr	x0, [x0, #48]
 548:	mov	x20, x1
 54c:	cbnz	x0, 56c <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x38>
 550:	ldr	x8, [x19]
 554:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 558:	add	x1, x1, #0x0
 55c:	mov	x0, x19
 560:	ldr	x8, [x8]
 564:	blr	x8
 568:	ldr	x0, [x19, #48]
 56c:	mov	x1, x20
 570:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 574:	tbz	w0, #0, 588 <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x54>
 578:	str	x20, [x19, #56]
 57c:	ldp	x20, x19, [sp, #16]
 580:	ldp	x29, x30, [sp], #32
 584:	ret
 588:	mov	w0, #0x18                  	// #24
 58c:	bl	0 <__cxa_allocate_exception>
 590:	adrp	x8, 0 <_ZN10NCursesPadC1Eii>
 594:	ldr	x8, [x8]
 598:	adrp	x9, 0 <_ZN10NCursesPadC1Eii>
 59c:	add	x9, x9, #0x0
 5a0:	mov	w10, #0xffffffff            	// #-1
 5a4:	add	x8, x8, #0x10
 5a8:	stp	x8, x9, [x0]
 5ac:	str	w10, [x0, #16]
 5b0:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 5b4:	adrp	x2, 0 <_ZN10NCursesPadC1Eii>
 5b8:	ldr	x1, [x1]
 5bc:	ldr	x2, [x2]
 5c0:	bl	0 <__cxa_throw>

00000000000005c4 <_ZN16NCursesFramedPad11OnOperationEi>:
 5c4:	stp	x29, x30, [sp, #-96]!
 5c8:	stp	x28, x27, [sp, #16]
 5cc:	stp	x26, x25, [sp, #32]
 5d0:	stp	x24, x23, [sp, #48]
 5d4:	stp	x22, x21, [sp, #64]
 5d8:	stp	x20, x19, [sp, #80]
 5dc:	mov	x29, sp
 5e0:	ldp	x19, x8, [x0, #48]
 5e4:	cmp	x8, #0x0
 5e8:	csel	x8, x19, x8, eq  // eq = none
 5ec:	cbz	x8, 62c <_ZN16NCursesFramedPad11OnOperationEi+0x68>
 5f0:	cbz	x19, 62c <_ZN16NCursesFramedPad11OnOperationEi+0x68>
 5f4:	ldr	x8, [x8, #8]
 5f8:	cbz	x8, 648 <_ZN16NCursesFramedPad11OnOperationEi+0x84>
 5fc:	ldrh	w9, [x8, #6]
 600:	ldrh	w8, [x8, #4]
 604:	mov	w10, #0xfffe                	// #65534
 608:	cmp	w9, w10
 60c:	csinv	w9, w9, wzr, ne  // ne = any
 610:	cmp	w8, w10
 614:	csinv	w8, w8, wzr, ne  // ne = any
 618:	sxth	w9, w9
 61c:	sxth	w8, w8
 620:	add	w20, w9, #0x1
 624:	add	w21, w8, #0x1
 628:	b	650 <_ZN16NCursesFramedPad11OnOperationEi+0x8c>
 62c:	ldp	x20, x19, [sp, #80]
 630:	ldp	x22, x21, [sp, #64]
 634:	ldp	x24, x23, [sp, #48]
 638:	ldp	x26, x25, [sp, #32]
 63c:	ldp	x28, x27, [sp, #16]
 640:	ldp	x29, x30, [sp], #96
 644:	ret
 648:	mov	w20, wzr
 64c:	mov	w21, wzr
 650:	ldr	x10, [x0, #8]
 654:	cbz	x10, 694 <_ZN16NCursesFramedPad11OnOperationEi+0xd0>
 658:	ldrh	w8, [x10, #6]
 65c:	mov	w11, #0xfffe                	// #65534
 660:	mov	w12, #0x1                   	// #1
 664:	cmp	w8, w11
 668:	csinv	w8, w8, wzr, ne  // ne = any
 66c:	sxth	w8, w8
 670:	adds	w9, w8, #0x1
 674:	b.eq	6a8 <_ZN16NCursesFramedPad11OnOperationEi+0xe4>  // b.none
 678:	madd	w13, w20, w20, w8
 67c:	sdiv	w13, w13, w9
 680:	cmp	w13, #0x0
 684:	csinc	w13, w13, wzr, ne  // ne = any
 688:	cmp	w13, w20
 68c:	csel	w24, w20, w13, gt
 690:	b	6ac <_ZN16NCursesFramedPad11OnOperationEi+0xe8>
 694:	mov	w28, wzr
 698:	mov	w27, wzr
 69c:	mov	w24, #0x1                   	// #1
 6a0:	mov	w26, #0x1                   	// #1
 6a4:	b	744 <_ZN16NCursesFramedPad11OnOperationEi+0x180>
 6a8:	mov	w24, #0x1                   	// #1
 6ac:	ldrh	w10, [x10, #4]
 6b0:	cmp	w10, w11
 6b4:	csinv	w11, w10, wzr, ne  // ne = any
 6b8:	adds	w10, w12, w11, sxth
 6bc:	sxth	w11, w11
 6c0:	b.cc	6d4 <_ZN16NCursesFramedPad11OnOperationEi+0x110>  // b.lo, b.ul, b.last
 6c4:	mov	w26, #0x1                   	// #1
 6c8:	cbz	w9, 718 <_ZN16NCursesFramedPad11OnOperationEi+0x154>
 6cc:	mov	w12, wzr
 6d0:	b	6f4 <_ZN16NCursesFramedPad11OnOperationEi+0x130>
 6d4:	madd	w12, w21, w21, w11
 6d8:	sdiv	w12, w12, w10
 6dc:	cmp	w12, #0x0
 6e0:	csinc	w12, w12, wzr, ne  // ne = any
 6e4:	cmp	w12, w21
 6e8:	csel	w26, w21, w12, gt
 6ec:	cbz	w9, 724 <_ZN16NCursesFramedPad11OnOperationEi+0x160>
 6f0:	mov	w12, #0x1                   	// #1
 6f4:	ldr	w13, [x0, #76]
 6f8:	madd	w8, w13, w20, w8
 6fc:	sdiv	w8, w8, w9
 700:	add	w9, w8, w24
 704:	sub	w13, w20, w24
 708:	cmp	w9, w20
 70c:	csel	w28, w13, w8, gt
 710:	cbz	w12, 71c <_ZN16NCursesFramedPad11OnOperationEi+0x158>
 714:	b	728 <_ZN16NCursesFramedPad11OnOperationEi+0x164>
 718:	mov	w28, wzr
 71c:	mov	w27, wzr
 720:	b	744 <_ZN16NCursesFramedPad11OnOperationEi+0x180>
 724:	mov	w28, wzr
 728:	ldr	w8, [x0, #72]
 72c:	madd	w8, w8, w21, w11
 730:	sdiv	w8, w8, w10
 734:	add	w9, w8, w26
 738:	sub	w10, w21, w26
 73c:	cmp	w9, w21
 740:	csel	w27, w10, w8, gt
 744:	add	w22, w20, #0x1
 748:	mov	w1, #0x1                   	// #1
 74c:	mov	x0, x19
 750:	mov	w2, w22
 754:	mov	w3, w21
 758:	mov	w4, wzr
 75c:	bl	0 <_ZN10NCursesPadC1Eii>
 760:	ldr	x0, [x19, #8]
 764:	mov	w1, #0x40000               	// #262144
 768:	mov	x2, xzr
 76c:	bl	0 <wattr_on>
 770:	cmp	w26, #0x1
 774:	b.le	7d4 <_ZN16NCursesFramedPad11OnOperationEi+0x210>
 778:	adrp	x8, 0 <acs_map>
 77c:	ldr	x8, [x8]
 780:	add	w1, w27, #0x1
 784:	mov	x0, x19
 788:	mov	w2, w22
 78c:	ldr	w3, [x8, #180]
 790:	bl	0 <_ZN10NCursesPadC1Eii>
 794:	subs	w25, w26, #0x2
 798:	b.eq	7c0 <_ZN16NCursesFramedPad11OnOperationEi+0x1fc>  // b.none
 79c:	add	w23, w27, #0x2
 7a0:	mov	w3, #0x20                  	// #32
 7a4:	mov	x0, x19
 7a8:	mov	w1, w23
 7ac:	mov	w2, w22
 7b0:	bl	0 <_ZN10NCursesPadC1Eii>
 7b4:	subs	w25, w25, #0x1
 7b8:	add	w23, w23, #0x1
 7bc:	b.ne	7a0 <_ZN16NCursesFramedPad11OnOperationEi+0x1dc>  // b.any
 7c0:	adrp	x8, 0 <acs_map>
 7c4:	ldr	x8, [x8]
 7c8:	add	w1, w27, w26
 7cc:	ldr	w3, [x8, #184]
 7d0:	b	7e0 <_ZN16NCursesFramedPad11OnOperationEi+0x21c>
 7d4:	b.ne	7ec <_ZN16NCursesFramedPad11OnOperationEi+0x228>  // b.any
 7d8:	add	w1, w27, #0x1
 7dc:	mov	w3, #0x20                  	// #32
 7e0:	mov	x0, x19
 7e4:	mov	w2, w22
 7e8:	bl	0 <_ZN10NCursesPadC1Eii>
 7ec:	ldr	x0, [x19, #8]
 7f0:	mov	w1, #0x40000               	// #262144
 7f4:	mov	x2, xzr
 7f8:	bl	0 <wattr_off>
 7fc:	add	w21, w21, #0x1
 800:	mov	w2, #0x1                   	// #1
 804:	mov	x0, x19
 808:	mov	w1, w21
 80c:	mov	w3, w20
 810:	mov	w4, wzr
 814:	bl	0 <_ZN10NCursesPadC1Eii>
 818:	ldr	x0, [x19, #8]
 81c:	mov	w1, #0x40000               	// #262144
 820:	mov	x2, xzr
 824:	bl	0 <wattr_on>
 828:	cmp	w24, #0x1
 82c:	b.le	884 <_ZN16NCursesFramedPad11OnOperationEi+0x2c0>
 830:	adrp	x22, 0 <acs_map>
 834:	ldr	x22, [x22]
 838:	add	w2, w28, #0x1
 83c:	mov	x0, x19
 840:	mov	w1, w21
 844:	ldr	w3, [x22, #176]
 848:	bl	0 <_ZN10NCursesPadC1Eii>
 84c:	subs	w23, w24, #0x2
 850:	b.eq	878 <_ZN16NCursesFramedPad11OnOperationEi+0x2b4>  // b.none
 854:	add	w20, w28, #0x2
 858:	mov	w3, #0x20                  	// #32
 85c:	mov	x0, x19
 860:	mov	w1, w21
 864:	mov	w2, w20
 868:	bl	0 <_ZN10NCursesPadC1Eii>
 86c:	subs	w23, w23, #0x1
 870:	add	w20, w20, #0x1
 874:	b.ne	858 <_ZN16NCursesFramedPad11OnOperationEi+0x294>  // b.any
 878:	ldr	w3, [x22, #172]
 87c:	add	w2, w24, w28
 880:	b	890 <_ZN16NCursesFramedPad11OnOperationEi+0x2cc>
 884:	b.ne	89c <_ZN16NCursesFramedPad11OnOperationEi+0x2d8>  // b.any
 888:	add	w2, w28, #0x1
 88c:	mov	w3, #0x20                  	// #32
 890:	mov	x0, x19
 894:	mov	w1, w21
 898:	bl	0 <_ZN10NCursesPadC1Eii>
 89c:	ldr	x0, [x19, #8]
 8a0:	ldp	x20, x19, [sp, #80]
 8a4:	ldp	x22, x21, [sp, #64]
 8a8:	ldp	x24, x23, [sp, #48]
 8ac:	ldp	x26, x25, [sp, #32]
 8b0:	ldp	x28, x27, [sp, #16]
 8b4:	mov	w1, #0x40000               	// #262144
 8b8:	mov	x2, xzr
 8bc:	ldp	x29, x30, [sp], #96
 8c0:	b	0 <wattr_off>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN13NCursesWindow9CUR_vlineEiiij:

0000000000000000 <_ZN13NCursesWindow9CUR_vlineEiiij>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x21, [x0, #8]
  14:	mov	w20, w4
  18:	mov	w19, w3
  1c:	mov	x0, x21
  20:	bl	0 <wmove>
  24:	cmn	w0, #0x1
  28:	b.eq	48 <_ZN13NCursesWindow9CUR_vlineEiiij+0x48>  // b.none
  2c:	mov	x0, x21
  30:	mov	w1, w20
  34:	mov	w2, w19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldr	x21, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	b	0 <wvline>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN13NCursesWindow9CUR_addchEiij:

0000000000000000 <_ZN13NCursesWindow9CUR_addchEiij>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0, #8]
  10:	mov	w19, w3
  14:	mov	x0, x20
  18:	bl	0 <wmove>
  1c:	cmn	w0, #0x1
  20:	b.eq	38 <_ZN13NCursesWindow9CUR_addchEiij+0x38>  // b.none
  24:	mov	x0, x20
  28:	mov	w1, w19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <waddch>
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN13NCursesWindow9CUR_hlineEiiij:

0000000000000000 <_ZN13NCursesWindow9CUR_hlineEiiij>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x21, [x0, #8]
  14:	mov	w20, w4
  18:	mov	w19, w3
  1c:	mov	x0, x21
  20:	bl	0 <wmove>
  24:	cmn	w0, #0x1
  28:	b.eq	48 <_ZN13NCursesWindow9CUR_hlineEiiij+0x48>  // b.none
  2c:	mov	x0, x21
  30:	mov	w1, w20
  34:	mov	w2, w19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldr	x21, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	b	0 <whline>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN10NCursesPadD0Ev:

0000000000000000 <_ZN10NCursesPadD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZN13NCursesWindowD2Ev>
  18:	mov	x0, x19
  1c:	ldp	x20, x19, [sp, #32]
  20:	ldr	x21, [sp, #16]
  24:	ldp	x29, x30, [sp], #48
  28:	b	0 <_ZdlPv>
  2c:	mov	x20, x0
  30:	mov	x0, x19
  34:	mov	x21, x1
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x20
  40:	tbz	w21, #31, 48 <_ZN10NCursesPadD0Ev+0x48>
  44:	bl	0 <__cxa_call_unexpected>
  48:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text._ZN10NCursesPad18OnUnknownOperationEi:

0000000000000000 <_ZN10NCursesPad18OnUnknownOperationEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPad17OnNavigationErrorEi:

0000000000000000 <_ZN10NCursesPad17OnNavigationErrorEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPad11OnOperationEi:

0000000000000000 <_ZN10NCursesPad11OnOperationEi>:
   0:	ret

Disassembly of section .text._ZN16NCursesFramedPadD2Ev:

0000000000000000 <_ZN16NCursesFramedPadD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 90 <_ZTV16NCursesFramedPad>
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	ldr	x8, [x8]
  20:	add	x8, x8, #0x10
  24:	str	x8, [x19]
  28:	cbz	x0, 38 <_ZN16NCursesFramedPadD2Ev+0x38>
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN13NCursesWindowD2Ev>
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret
  50:	mov	x21, x1
  54:	mov	x20, x0
  58:	mov	x0, x19
  5c:	bl	0 <_ZN13NCursesWindowD2Ev>
  60:	b	70 <_ZN16NCursesFramedPadD2Ev+0x70>
  64:	bl	0 <_ZN16NCursesFramedPadD2Ev>
  68:	mov	x21, x1
  6c:	mov	x20, x0
  70:	mov	x0, x20
  74:	tbz	w21, #31, 7c <_ZN16NCursesFramedPadD2Ev+0x7c>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN16NCursesFramedPadD0Ev:

0000000000000000 <_ZN16NCursesFramedPadD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZN16NCursesFramedPadD0Ev>
  18:	mov	x0, x19
  1c:	ldp	x20, x19, [sp, #32]
  20:	ldr	x21, [sp, #16]
  24:	ldp	x29, x30, [sp], #48
  28:	b	0 <_ZdlPv>
  2c:	mov	x20, x0
  30:	mov	x0, x19
  34:	mov	x21, x1
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x20
  40:	tbz	w21, #31, 48 <_ZN16NCursesFramedPadD0Ev+0x48>
  44:	bl	0 <__cxa_call_unexpected>
  48:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN16NCursesFramedPad9setWindowER13NCursesWindowii:

0000000000000000 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>:
   0:	ldr	x8, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x8]
  10:	br	x2

Disassembly of section .text._ZN16NCursesFramedPad12setSubWindowER13NCursesWindow:

0000000000000000 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>:
   0:	ldr	x8, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x8]
  10:	br	x2

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12NCursesPanel4initEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <new_panel>
  18:	str	x0, [x19, #48]
  1c:	cbnz	x0, 2c <_ZN12NCursesPanel4initEv+0x2c>
  20:	mov	w1, #0xffffffff            	// #-1
  24:	mov	x0, x19
  28:	bl	0 <_ZN12NCursesPanel4initEv>
  2c:	mov	w0, #0x18                  	// #24
  30:	bl	0 <_Znwm>
  34:	stp	xzr, x19, [x0]
  38:	mov	x1, x0
  3c:	ldr	x0, [x19, #48]
  40:	ldr	x19, [sp, #16]
  44:	str	x0, [x1, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <set_panel_userptr>

0000000000000050 <_ZN12NCursesPanelD1Ev>:
  50:	stp	x29, x30, [sp, #-48]!
  54:	str	x21, [sp, #16]
  58:	stp	x20, x19, [sp, #32]
  5c:	mov	x29, sp
  60:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
  64:	mov	x19, x0
  68:	ldr	x0, [x0, #48]
  6c:	ldr	x8, [x8]
  70:	add	x8, x8, #0x10
  74:	str	x8, [x19]
  78:	bl	0 <panel_userptr>
  7c:	cbz	x0, 84 <_ZN12NCursesPanelD1Ev+0x34>
  80:	bl	0 <_ZdlPv>
  84:	ldr	x0, [x19, #48]
  88:	bl	0 <del_panel>
  8c:	bl	0 <update_panels>
  90:	mov	x0, x19
  94:	bl	0 <_ZN13NCursesWindowD2Ev>
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldr	x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret
  a8:	mov	x21, x1
  ac:	mov	x20, x0
  b0:	b	c4 <_ZN12NCursesPanelD1Ev+0x74>
  b4:	mov	x21, x1
  b8:	mov	x20, x0
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN13NCursesWindowD2Ev>
  c4:	mov	x0, x20
  c8:	tbz	w21, #31, d0 <_ZN12NCursesPanelD1Ev+0x80>
  cc:	bl	0 <__cxa_call_unexpected>
  d0:	bl	0 <_Unwind_Resume>
  d4:	bl	0 <_ZN12NCursesPanel4initEv>

00000000000000d8 <_ZN12NCursesPanelD0Ev>:
  d8:	stp	x29, x30, [sp, #-48]!
  dc:	str	x21, [sp, #16]
  e0:	stp	x20, x19, [sp, #32]
  e4:	mov	x29, sp
  e8:	mov	x19, x0
  ec:	bl	50 <_ZN12NCursesPanelD1Ev>
  f0:	mov	x0, x19
  f4:	ldp	x20, x19, [sp, #32]
  f8:	ldr	x21, [sp, #16]
  fc:	ldp	x29, x30, [sp], #48
 100:	b	0 <_ZdlPv>
 104:	mov	x20, x0
 108:	mov	x0, x19
 10c:	mov	x21, x1
 110:	bl	0 <_ZdlPv>
 114:	mov	x0, x20
 118:	tbz	w21, #31, 120 <_ZN12NCursesPanelD0Ev+0x48>
 11c:	bl	0 <__cxa_call_unexpected>
 120:	bl	0 <_Unwind_Resume>

0000000000000124 <_ZN12NCursesPanel6redrawEv>:
 124:	stp	x29, x30, [sp, #-32]!
 128:	str	x19, [sp, #16]
 12c:	mov	x29, sp
 130:	mov	x0, xzr
 134:	bl	0 <panel_above>
 138:	cbz	x0, 178 <_ZN12NCursesPanel6redrawEv+0x54>
 13c:	mov	x19, x0
 140:	mov	x0, x19
 144:	bl	0 <panel_window>
 148:	cbz	x0, 158 <_ZN12NCursesPanel6redrawEv+0x34>
 14c:	ldrsh	w8, [x0, #4]
 150:	add	w2, w8, #0x1
 154:	b	15c <_ZN12NCursesPanel6redrawEv+0x38>
 158:	mov	w2, #0xffffffff            	// #-1
 15c:	mov	w3, #0x1                   	// #1
 160:	mov	w1, wzr
 164:	bl	0 <wtouchln>
 168:	mov	x0, x19
 16c:	bl	0 <panel_above>
 170:	mov	x19, x0
 174:	cbnz	x0, 140 <_ZN12NCursesPanel6redrawEv+0x1c>
 178:	bl	0 <update_panels>
 17c:	ldr	x19, [sp, #16]
 180:	ldp	x29, x30, [sp], #32
 184:	b	0 <doupdate>

0000000000000188 <_ZN12NCursesPanel7refreshEv>:
 188:	stp	x29, x30, [sp, #-16]!
 18c:	mov	x29, sp
 190:	bl	0 <update_panels>
 194:	ldp	x29, x30, [sp], #16
 198:	b	0 <doupdate>

000000000000019c <_ZN12NCursesPanel11noutrefreshEv>:
 19c:	stp	x29, x30, [sp, #-16]!
 1a0:	mov	x29, sp
 1a4:	bl	0 <update_panels>
 1a8:	mov	w0, wzr
 1ac:	ldp	x29, x30, [sp], #16
 1b0:	ret

00000000000001b4 <_ZN12NCursesPanel9boldframeEPKcS1_>:
 1b4:	stp	x29, x30, [sp, #-32]!
 1b8:	str	x19, [sp, #16]
 1bc:	mov	x29, sp
 1c0:	ldr	x8, [x0, #8]
 1c4:	mov	x19, x0
 1c8:	cbz	x8, 1d8 <_ZN12NCursesPanel9boldframeEPKcS1_+0x24>
 1cc:	mov	w9, #0x10000               	// #65536
 1d0:	str	wzr, [x8, #116]
 1d4:	str	w9, [x8, #16]
 1d8:	ldr	x8, [x19]
 1dc:	mov	x0, x19
 1e0:	ldr	x8, [x8, #56]
 1e4:	blr	x8
 1e8:	ldr	x8, [x19, #8]
 1ec:	cbz	x8, 1f8 <_ZN12NCursesPanel9boldframeEPKcS1_+0x44>
 1f0:	str	wzr, [x8, #116]
 1f4:	str	wzr, [x8, #16]
 1f8:	ldr	x19, [sp, #16]
 1fc:	ldp	x29, x30, [sp], #32
 200:	ret

0000000000000204 <_ZN12NCursesPanel5frameEPKcS1_>:
 204:	sub	sp, sp, #0x50
 208:	stp	x29, x30, [sp, #16]
 20c:	str	x23, [sp, #32]
 210:	stp	x22, x21, [sp, #48]
 214:	stp	x20, x19, [sp, #64]
 218:	add	x29, sp, #0x10
 21c:	mov	x19, x0
 220:	ldr	x0, [x0, #8]
 224:	mov	x20, x2
 228:	mov	x21, x1
 22c:	orr	x23, x1, x2
 230:	mov	w1, wzr
 234:	mov	w2, wzr
 238:	mov	w3, wzr
 23c:	mov	w4, wzr
 240:	mov	w5, wzr
 244:	mov	w6, wzr
 248:	mov	w7, wzr
 24c:	str	wzr, [sp]
 250:	bl	0 <wborder>
 254:	mov	w22, w0
 258:	cbz	x23, 278 <_ZN12NCursesPanel5frameEPKcS1_+0x74>
 25c:	cbnz	w22, 278 <_ZN12NCursesPanel5frameEPKcS1_+0x74>
 260:	ldr	x8, [x19]
 264:	mov	x0, x19
 268:	mov	x1, x21
 26c:	mov	x2, x20
 270:	ldr	x8, [x8, #72]
 274:	blr	x8
 278:	mov	x0, x19
 27c:	mov	w1, w22
 280:	ldp	x20, x19, [sp, #64]
 284:	ldp	x22, x21, [sp, #48]
 288:	ldr	x23, [sp, #32]
 28c:	ldp	x29, x30, [sp, #16]
 290:	add	sp, sp, #0x50
 294:	b	0 <_ZN12NCursesPanel4initEv>

0000000000000298 <_ZN12NCursesPanel5labelEPKcS1_>:
 298:	stp	x29, x30, [sp, #-32]!
 29c:	stp	x20, x19, [sp, #16]
 2a0:	mov	x29, sp
 2a4:	mov	x19, x2
 2a8:	mov	x20, x0
 2ac:	cbz	x1, 2c8 <_ZN12NCursesPanel5labelEPKcS1_+0x30>
 2b0:	ldr	x8, [x20]
 2b4:	mov	x2, x1
 2b8:	mov	x0, x20
 2bc:	mov	w1, wzr
 2c0:	ldr	x8, [x8, #80]
 2c4:	blr	x8
 2c8:	cbz	x19, 2ec <_ZN12NCursesPanel5labelEPKcS1_+0x54>
 2cc:	ldr	x8, [x20, #8]
 2d0:	cbz	x8, 2f8 <_ZN12NCursesPanel5labelEPKcS1_+0x60>
 2d4:	ldrh	w8, [x8, #4]
 2d8:	mov	w9, #0xfffe                	// #65534
 2dc:	cmp	w8, w9
 2e0:	csinv	w8, w8, wzr, ne  // ne = any
 2e4:	sxth	w1, w8
 2e8:	b	2fc <_ZN12NCursesPanel5labelEPKcS1_+0x64>
 2ec:	ldp	x20, x19, [sp, #16]
 2f0:	ldp	x29, x30, [sp], #32
 2f4:	ret
 2f8:	mov	w1, #0xffffffff            	// #-1
 2fc:	ldr	x8, [x20]
 300:	mov	x0, x20
 304:	mov	x2, x19
 308:	ldp	x20, x19, [sp, #16]
 30c:	ldr	x3, [x8, #80]
 310:	ldp	x29, x30, [sp], #32
 314:	br	x3

0000000000000318 <_ZN12NCursesPanel10centertextEiPKc>:
 318:	cbz	x2, 35c <_ZN12NCursesPanel10centertextEiPKc+0x44>
 31c:	stp	x29, x30, [sp, #-64]!
 320:	str	x23, [sp, #16]
 324:	stp	x22, x21, [sp, #32]
 328:	stp	x20, x19, [sp, #48]
 32c:	mov	x29, sp
 330:	ldr	x22, [x0, #8]
 334:	mov	x20, x2
 338:	mov	w21, w1
 33c:	mov	x19, x0
 340:	cbz	x22, 360 <_ZN12NCursesPanel10centertextEiPKc+0x48>
 344:	ldrh	w8, [x22, #6]
 348:	mov	w9, #0xfffe                	// #65534
 34c:	cmp	w8, w9
 350:	csinv	w8, w8, wzr, ne  // ne = any
 354:	sxth	x23, w8
 358:	b	364 <_ZN12NCursesPanel10centertextEiPKc+0x4c>
 35c:	ret
 360:	mov	x23, #0xffffffffffffffff    	// #-1
 364:	mov	x0, x20
 368:	bl	0 <strlen>
 36c:	sub	x8, x23, x0
 370:	lsr	x8, x8, #1
 374:	bic	w2, w8, w8, asr #31
 378:	cbz	x22, 398 <_ZN12NCursesPanel10centertextEiPKc+0x80>
 37c:	ldrh	w8, [x22, #6]
 380:	mov	w9, #0xfffe                	// #65534
 384:	cmp	w8, w9
 388:	csinv	w8, w8, wzr, ne  // ne = any
 38c:	sxth	w8, w8
 390:	add	w4, w8, #0x1
 394:	b	39c <_ZN12NCursesPanel10centertextEiPKc+0x84>
 398:	mov	w4, wzr
 39c:	mov	x0, x19
 3a0:	mov	w1, w21
 3a4:	mov	x3, x20
 3a8:	bl	0 <_ZN12NCursesPanel4initEv>
 3ac:	mov	w1, w0
 3b0:	mov	x0, x19
 3b4:	ldp	x20, x19, [sp, #48]
 3b8:	ldp	x22, x21, [sp, #32]
 3bc:	ldr	x23, [sp, #16]
 3c0:	ldp	x29, x30, [sp], #64
 3c4:	b	0 <_ZN12NCursesPanel4initEv>

00000000000003c8 <_ZN12NCursesPanel6getKeyEv>:
 3c8:	ldr	x0, [x0, #8]
 3cc:	b	0 <wgetch>

Disassembly of section .text._ZNK12NCursesPanel7OnErrorEi:

0000000000000000 <_ZNK12NCursesPanel7OnErrorEi>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmn	w1, #0x1
   c:	b.eq	18 <_ZNK12NCursesPanel7OnErrorEi+0x18>  // b.none
  10:	ldp	x29, x30, [sp], #16
  14:	ret
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZNK12NCursesPanel7OnErrorEi>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZNK12NCursesPanel7OnErrorEi>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZNK12NCursesPanel7OnErrorEi>
  44:	adrp	x2, 0 <_ZNK12NCursesPanel7OnErrorEi>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN13NCursesWindow10CUR_addstrEiiPKci:

0000000000000000 <_ZN13NCursesWindow10CUR_addstrEiiPKci>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x21, [x0, #8]
  14:	mov	w19, w4
  18:	mov	x20, x3
  1c:	mov	x0, x21
  20:	bl	0 <wmove>
  24:	cmn	w0, #0x1
  28:	b.eq	48 <_ZN13NCursesWindow10CUR_addstrEiiPKci+0x48>  // b.none
  2c:	mov	x0, x21
  30:	mov	x1, x20
  34:	mov	w2, w19
  38:	ldp	x20, x19, [sp, #32]
  3c:	ldr	x21, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	b	0 <waddnstr>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #48]
  14:	bl	0 <move_panel>
  18:	mov	w1, w0
  1c:	mov	x0, x19
  20:	bl	0 <_ZN12NCursesPanel5mvwinEii>
  24:	ldr	x19, [sp, #16]
  28:	mov	w0, wzr
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

cursslk.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	mov	x20, x1
  18:	cbz	x0, 20 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x20>
  1c:	bl	0 <_ZdaPv>
  20:	mov	x0, x20
  24:	bl	0 <strlen>
  28:	add	x0, x0, #0x1
  2c:	bl	0 <_Znam>
  30:	mov	x1, x20
  34:	str	x0, [x19, #8]
  38:	bl	0 <strcpy>
  3c:	mov	x0, x19
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

000000000000004c <_ZN18Soft_Label_Key_Set4initEv>:
  4c:	stp	x29, x30, [sp, #-32]!
  50:	stp	x20, x19, [sp, #16]
  54:	mov	x29, sp
  58:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
  5c:	ldr	x8, [x8]
  60:	mov	x19, x0
  64:	ldrsw	x20, [x8]
  68:	mov	w8, #0x18                  	// #24
  6c:	umulh	x8, x20, x8
  70:	add	x9, x20, x20, lsl #1
  74:	cmp	xzr, x8
  78:	lsl	x8, x9, #3
  7c:	cset	w9, ne  // ne = any
  80:	adds	x8, x8, #0x8
  84:	cset	w10, cs  // cs = hs, nlast
  88:	orr	w9, w9, w10
  8c:	cmp	w9, #0x0
  90:	csinv	x0, x8, xzr, eq  // eq = none
  94:	bl	0 <_Znam>
  98:	mov	x8, x0
  9c:	str	x20, [x8], #8
  a0:	cbz	w20, fc <_ZN18Soft_Label_Key_Set4initEv+0xb0>
  a4:	adrp	x10, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
  a8:	ldr	x10, [x10]
  ac:	mov	w9, #0x18                  	// #24
  b0:	madd	x9, x20, x9, x8
  b4:	movi	d0, #0xffffffff00000000
  b8:	add	x10, x10, #0x10
  bc:	mov	x11, x8
  c0:	stp	x10, xzr, [x11]
  c4:	str	d0, [x11, #16]
  c8:	add	x11, x11, #0x18
  cc:	cmp	x11, x9
  d0:	b.ne	c0 <_ZN18Soft_Label_Key_Set4initEv+0x74>  // b.any
  d4:	cmp	w20, #0x1
  d8:	str	x8, [x19, #16]
  dc:	b.lt	100 <_ZN18Soft_Label_Key_Set4initEv+0xb4>  // b.tstop
  e0:	mov	x8, xzr
  e4:	add	x9, x0, #0x1c
  e8:	add	x8, x8, #0x1
  ec:	cmp	x8, x20
  f0:	str	w8, [x9], #24
  f4:	b.lt	e8 <_ZN18Soft_Label_Key_Set4initEv+0x9c>  // b.tstop
  f8:	b	100 <_ZN18Soft_Label_Key_Set4initEv+0xb4>
  fc:	str	x8, [x19, #16]
 100:	strb	wzr, [x19, #8]
 104:	ldp	x20, x19, [sp, #16]
 108:	ldp	x29, x30, [sp], #32
 10c:	ret

0000000000000110 <_ZN18Soft_Label_Key_SetC1Ev>:
 110:	stp	x29, x30, [sp, #-16]!
 114:	mov	x29, sp
 118:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 11c:	ldr	x8, [x8]
 120:	strb	wzr, [x0, #8]
 124:	str	xzr, [x0, #16]
 128:	add	x8, x8, #0x10
 12c:	str	x8, [x0]
 130:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 134:	ldr	x8, [x8]
 138:	ldr	w8, [x8]
 13c:	cmn	w8, #0x1
 140:	b.eq	14c <_ZN18Soft_Label_Key_SetC1Ev+0x3c>  // b.none
 144:	ldp	x29, x30, [sp], #16
 148:	b	4c <_ZN18Soft_Label_Key_Set4initEv>
 14c:	mov	w0, #0x18                  	// #24
 150:	bl	0 <__cxa_allocate_exception>
 154:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 158:	ldr	x8, [x8]
 15c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 160:	add	x9, x9, #0x0
 164:	mov	w10, #0xffffffff            	// #-1
 168:	add	x8, x8, #0x10
 16c:	stp	x8, x9, [x0]
 170:	str	w10, [x0, #16]
 174:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 178:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 17c:	ldr	x1, [x1]
 180:	ldr	x2, [x2]
 184:	bl	0 <__cxa_throw>
 188:	bl	0 <__cxa_call_unexpected>

000000000000018c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>:
 18c:	stp	x29, x30, [sp, #-32]!
 190:	stp	x20, x19, [sp, #16]
 194:	mov	x29, sp
 198:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 19c:	ldr	x8, [x8]
 1a0:	cmn	w1, #0x1
 1a4:	strb	wzr, [x0, #8]
 1a8:	str	xzr, [x0, #16]
 1ac:	add	x8, x8, #0x10
 1b0:	str	x8, [x0]
 1b4:	b.eq	268 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xdc>  // b.none
 1b8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1bc:	ldr	x8, [x8]
 1c0:	mov	w20, w1
 1c4:	mov	x19, x0
 1c8:	ldr	x9, [x8]
 1cc:	add	x10, x9, #0x1
 1d0:	str	x10, [x8]
 1d4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1d8:	ldr	x8, [x8]
 1dc:	cbz	x9, 228 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x9c>
 1e0:	ldr	w8, [x8]
 1e4:	cmp	w8, w20
 1e8:	b.eq	258 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xcc>  // b.none
 1ec:	mov	w0, #0x18                  	// #24
 1f0:	bl	0 <__cxa_allocate_exception>
 1f4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1f8:	ldr	x8, [x8]
 1fc:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 200:	add	x9, x9, #0x0
 204:	mov	w10, #0xffffffff            	// #-1
 208:	add	x8, x8, #0x10
 20c:	stp	x8, x9, [x0]
 210:	str	w10, [x0, #16]
 214:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 218:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 21c:	ldr	x1, [x1]
 220:	ldr	x2, [x2]
 224:	bl	0 <__cxa_throw>
 228:	mov	w0, w20
 22c:	str	w20, [x8]
 230:	bl	0 <slk_init>
 234:	cmn	w0, #0x1
 238:	b.eq	2a4 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x118>  // b.none
 23c:	cmp	w20, #0x1
 240:	mov	w8, #0x8                   	// #8
 244:	mov	w9, #0xc                   	// #12
 248:	csel	w8, w9, w8, gt
 24c:	adrp	x9, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 250:	ldr	x9, [x9]
 254:	str	w8, [x9]
 258:	mov	x0, x19
 25c:	ldp	x20, x19, [sp, #16]
 260:	ldp	x29, x30, [sp], #32
 264:	b	4c <_ZN18Soft_Label_Key_Set4initEv>
 268:	mov	w0, #0x18                  	// #24
 26c:	bl	0 <__cxa_allocate_exception>
 270:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 274:	ldr	x8, [x8]
 278:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 27c:	add	x9, x9, #0x0
 280:	mov	w10, #0xffffffff            	// #-1
 284:	add	x8, x8, #0x10
 288:	stp	x8, x9, [x0]
 28c:	str	w10, [x0, #16]
 290:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 294:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 298:	ldr	x1, [x1]
 29c:	ldr	x2, [x2]
 2a0:	bl	0 <__cxa_throw>
 2a4:	mov	w0, #0x18                  	// #24
 2a8:	bl	0 <__cxa_allocate_exception>
 2ac:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 2b0:	ldr	x8, [x8]
 2b4:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 2b8:	add	x9, x9, #0x0
 2bc:	mov	w10, #0xffffffff            	// #-1
 2c0:	add	x8, x8, #0x10
 2c4:	stp	x8, x9, [x0]
 2c8:	str	w10, [x0, #16]
 2cc:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 2d0:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 2d4:	ldr	x1, [x1]
 2d8:	ldr	x2, [x2]
 2dc:	bl	0 <__cxa_throw>
 2e0:	bl	0 <__cxa_call_unexpected>
 2e4:	bl	0 <__cxa_call_unexpected>
 2e8:	bl	0 <__cxa_call_unexpected>

00000000000002ec <_ZN18Soft_Label_Key_SetD1Ev>:
 2ec:	stp	x29, x30, [sp, #-48]!
 2f0:	stp	x22, x21, [sp, #16]
 2f4:	stp	x20, x19, [sp, #32]
 2f8:	mov	x29, sp
 2fc:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 300:	ldr	x8, [x8]
 304:	mov	x19, x0
 308:	add	x8, x8, #0x10
 30c:	str	x8, [x0]
 310:	bl	0 <isendwin>
 314:	tbnz	w0, #0, 324 <_ZN18Soft_Label_Key_SetD1Ev+0x38>
 318:	bl	0 <slk_clear>
 31c:	cmn	w0, #0x1
 320:	b.eq	394 <_ZN18Soft_Label_Key_SetD1Ev+0xa8>  // b.none
 324:	ldr	x20, [x19, #16]
 328:	cbz	x20, 370 <_ZN18Soft_Label_Key_SetD1Ev+0x84>
 32c:	mov	x19, x20
 330:	ldr	x8, [x19, #-8]!
 334:	cbz	x8, 368 <_ZN18Soft_Label_Key_SetD1Ev+0x7c>
 338:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 33c:	ldr	x9, [x9]
 340:	add	x8, x8, x8, lsl #1
 344:	lsl	x21, x8, #3
 348:	add	x22, x9, #0x10
 34c:	add	x8, x20, x21
 350:	ldur	x0, [x8, #-16]
 354:	stur	x22, [x8, #-24]
 358:	cbz	x0, 360 <_ZN18Soft_Label_Key_SetD1Ev+0x74>
 35c:	bl	0 <_ZdaPv>
 360:	subs	x21, x21, #0x18
 364:	b.ne	34c <_ZN18Soft_Label_Key_SetD1Ev+0x60>  // b.any
 368:	mov	x0, x19
 36c:	bl	0 <_ZdaPv>
 370:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 374:	ldr	x8, [x8]
 378:	ldp	x20, x19, [sp, #32]
 37c:	ldp	x22, x21, [sp, #16]
 380:	ldr	x9, [x8]
 384:	sub	x9, x9, #0x1
 388:	str	x9, [x8]
 38c:	ldp	x29, x30, [sp], #48
 390:	ret
 394:	mov	w0, #0x18                  	// #24
 398:	bl	0 <__cxa_allocate_exception>
 39c:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3a0:	ldr	x8, [x8]
 3a4:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3a8:	add	x9, x9, #0x0
 3ac:	mov	w10, #0xffffffff            	// #-1
 3b0:	add	x8, x8, #0x10
 3b4:	stp	x8, x9, [x0]
 3b8:	str	w10, [x0, #16]
 3bc:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3c0:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3c4:	ldr	x1, [x1]
 3c8:	ldr	x2, [x2]
 3cc:	bl	0 <__cxa_throw>
 3d0:	bl	0 <__cxa_call_unexpected>
 3d4:	bl	0 <__cxa_call_unexpected>

00000000000003d8 <_ZN18Soft_Label_Key_SetD0Ev>:
 3d8:	stp	x29, x30, [sp, #-48]!
 3dc:	str	x21, [sp, #16]
 3e0:	stp	x20, x19, [sp, #32]
 3e4:	mov	x29, sp
 3e8:	mov	x19, x0
 3ec:	bl	2ec <_ZN18Soft_Label_Key_SetD1Ev>
 3f0:	mov	x0, x19
 3f4:	ldp	x20, x19, [sp, #32]
 3f8:	ldr	x21, [sp, #16]
 3fc:	ldp	x29, x30, [sp], #48
 400:	b	0 <_ZdlPv>
 404:	mov	x20, x0
 408:	mov	x0, x19
 40c:	mov	x21, x1
 410:	bl	0 <_ZdlPv>
 414:	mov	x0, x20
 418:	tbz	w21, #31, 420 <_ZN18Soft_Label_Key_SetD0Ev+0x48>
 41c:	bl	0 <__cxa_call_unexpected>
 420:	bl	0 <_Unwind_Resume>

0000000000000424 <_ZN18Soft_Label_Key_SetixEi>:
 424:	stp	x29, x30, [sp, #-16]!
 428:	mov	x29, sp
 42c:	subs	w8, w1, #0x1
 430:	b.lt	45c <_ZN18Soft_Label_Key_SetixEi+0x38>  // b.tstop
 434:	adrp	x9, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 438:	ldr	x9, [x9]
 43c:	ldr	w9, [x9]
 440:	cmp	w9, w1
 444:	b.lt	45c <_ZN18Soft_Label_Key_SetixEi+0x38>  // b.tstop
 448:	ldr	x9, [x0, #16]
 44c:	mov	w10, #0x18                  	// #24
 450:	smaddl	x0, w8, w10, x9
 454:	ldp	x29, x30, [sp], #16
 458:	ret
 45c:	mov	w0, #0x18                  	// #24
 460:	bl	0 <__cxa_allocate_exception>
 464:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 468:	ldr	x8, [x8]
 46c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 470:	add	x9, x9, #0x0
 474:	mov	w10, #0xffffffff            	// #-1
 478:	add	x8, x8, #0x10
 47c:	stp	x8, x9, [x0]
 480:	str	w10, [x0, #16]
 484:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 488:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 48c:	ldr	x1, [x1]
 490:	ldr	x2, [x2]
 494:	bl	0 <__cxa_throw>
 498:	bl	0 <__cxa_call_unexpected>

000000000000049c <_ZN18Soft_Label_Key_Set14activate_labelEib>:
 49c:	stp	x29, x30, [sp, #-48]!
 4a0:	str	x21, [sp, #16]
 4a4:	stp	x20, x19, [sp, #32]
 4a8:	mov	x29, sp
 4ac:	ldrb	w8, [x0, #8]
 4b0:	mov	w19, w2
 4b4:	mov	x20, x0
 4b8:	mov	w21, w1
 4bc:	cbnz	w8, 4f0 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x54>
 4c0:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 4c4:	ldr	x8, [x8]
 4c8:	ldr	x0, [x8]
 4cc:	cbz	x0, 4e8 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x4c>
 4d0:	ldr	x8, [x0]
 4d4:	ldr	x8, [x8, #96]
 4d8:	blr	x8
 4dc:	bl	0 <slk_attrset>
 4e0:	cmn	w0, #0x1
 4e4:	b.eq	5b8 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x11c>  // b.none
 4e8:	mov	w8, #0x1                   	// #1
 4ec:	strb	w8, [x20, #8]
 4f0:	mov	x0, x20
 4f4:	mov	w1, w21
 4f8:	bl	424 <_ZN18Soft_Label_Key_SetixEi>
 4fc:	ldr	x9, [x0, #8]
 500:	ldp	w2, w8, [x0, #16]
 504:	adrp	x10, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 508:	add	x10, x10, #0x0
 50c:	tst	w19, #0x1
 510:	csel	x1, x9, x10, ne  // ne = any
 514:	mov	w0, w8
 518:	bl	0 <slk_set>
 51c:	cmn	w0, #0x1
 520:	b.eq	540 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xa4>  // b.none
 524:	bl	0 <slk_noutrefresh>
 528:	cmn	w0, #0x1
 52c:	b.eq	57c <_ZN18Soft_Label_Key_Set14activate_labelEib+0xe0>  // b.none
 530:	ldp	x20, x19, [sp, #32]
 534:	ldr	x21, [sp, #16]
 538:	ldp	x29, x30, [sp], #48
 53c:	ret
 540:	mov	w0, #0x18                  	// #24
 544:	bl	0 <__cxa_allocate_exception>
 548:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 54c:	ldr	x8, [x8]
 550:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 554:	add	x9, x9, #0x0
 558:	mov	w10, #0xffffffff            	// #-1
 55c:	add	x8, x8, #0x10
 560:	stp	x8, x9, [x0]
 564:	str	w10, [x0, #16]
 568:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 56c:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 570:	ldr	x1, [x1]
 574:	ldr	x2, [x2]
 578:	bl	0 <__cxa_throw>
 57c:	mov	w0, #0x18                  	// #24
 580:	bl	0 <__cxa_allocate_exception>
 584:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 588:	ldr	x8, [x8]
 58c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 590:	add	x9, x9, #0x0
 594:	mov	w10, #0xffffffff            	// #-1
 598:	add	x8, x8, #0x10
 59c:	stp	x8, x9, [x0]
 5a0:	str	w10, [x0, #16]
 5a4:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5a8:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5ac:	ldr	x1, [x1]
 5b0:	ldr	x2, [x2]
 5b4:	bl	0 <__cxa_throw>
 5b8:	mov	w0, #0x18                  	// #24
 5bc:	bl	0 <__cxa_allocate_exception>
 5c0:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5c4:	ldr	x8, [x8]
 5c8:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5cc:	add	x9, x9, #0x0
 5d0:	mov	w10, #0xffffffff            	// #-1
 5d4:	add	x8, x8, #0x10
 5d8:	stp	x8, x9, [x0]
 5dc:	str	w10, [x0, #16]
 5e0:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5e4:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5e8:	ldr	x1, [x1]
 5ec:	ldr	x2, [x2]
 5f0:	bl	0 <__cxa_throw>
 5f4:	bl	0 <__cxa_call_unexpected>
 5f8:	bl	0 <__cxa_call_unexpected>
 5fc:	bl	0 <__cxa_call_unexpected>

0000000000000600 <_ZN18Soft_Label_Key_Set15activate_labelsEb>:
 600:	stp	x29, x30, [sp, #-64]!
 604:	str	x23, [sp, #16]
 608:	stp	x22, x21, [sp, #32]
 60c:	stp	x20, x19, [sp, #48]
 610:	mov	x29, sp
 614:	ldrb	w8, [x0, #8]
 618:	mov	x20, x0
 61c:	mov	w19, w1
 620:	cbnz	w8, 654 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x54>
 624:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 628:	ldr	x8, [x8]
 62c:	ldr	x0, [x8]
 630:	cbz	x0, 64c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x4c>
 634:	ldr	x8, [x0]
 638:	ldr	x8, [x8, #96]
 63c:	blr	x8
 640:	bl	0 <slk_attrset>
 644:	cmn	w0, #0x1
 648:	b.eq	7dc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x1dc>  // b.none
 64c:	mov	w8, #0x1                   	// #1
 650:	strb	w8, [x20, #8]
 654:	adrp	x22, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 658:	ldr	x22, [x22]
 65c:	ldr	w8, [x22]
 660:	cmp	w8, #0x1
 664:	b.lt	6b0 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xb0>  // b.tstop
 668:	adrp	x23, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 66c:	mov	w21, wzr
 670:	add	x23, x23, #0x0
 674:	add	w21, w21, #0x1
 678:	mov	x0, x20
 67c:	mov	w1, w21
 680:	bl	424 <_ZN18Soft_Label_Key_SetixEi>
 684:	ldr	x9, [x0, #8]
 688:	ldp	w2, w8, [x0, #16]
 68c:	tst	w19, #0x1
 690:	csel	x1, x9, x23, ne  // ne = any
 694:	mov	w0, w8
 698:	bl	0 <slk_set>
 69c:	cmn	w0, #0x1
 6a0:	b.eq	728 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x128>  // b.none
 6a4:	ldr	w8, [x22]
 6a8:	cmp	w21, w8
 6ac:	b.lt	674 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x74>  // b.tstop
 6b0:	tbz	w19, #0, 6fc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xfc>
 6b4:	bl	0 <slk_restore>
 6b8:	cmn	w0, #0x1
 6bc:	b.ne	708 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x108>  // b.any
 6c0:	mov	w0, #0x18                  	// #24
 6c4:	bl	0 <__cxa_allocate_exception>
 6c8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6cc:	ldr	x8, [x8]
 6d0:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6d4:	add	x9, x9, #0x0
 6d8:	mov	w10, #0xffffffff            	// #-1
 6dc:	add	x8, x8, #0x10
 6e0:	stp	x8, x9, [x0]
 6e4:	str	w10, [x0, #16]
 6e8:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6ec:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6f0:	ldr	x1, [x1]
 6f4:	ldr	x2, [x2]
 6f8:	bl	0 <__cxa_throw>
 6fc:	bl	0 <slk_clear>
 700:	cmn	w0, #0x1
 704:	b.eq	7a0 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x1a0>  // b.none
 708:	bl	0 <slk_noutrefresh>
 70c:	cmn	w0, #0x1
 710:	b.eq	764 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x164>  // b.none
 714:	ldp	x20, x19, [sp, #48]
 718:	ldp	x22, x21, [sp, #32]
 71c:	ldr	x23, [sp, #16]
 720:	ldp	x29, x30, [sp], #64
 724:	ret
 728:	mov	w0, #0x18                  	// #24
 72c:	bl	0 <__cxa_allocate_exception>
 730:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 734:	ldr	x8, [x8]
 738:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 73c:	add	x9, x9, #0x0
 740:	mov	w10, #0xffffffff            	// #-1
 744:	add	x8, x8, #0x10
 748:	stp	x8, x9, [x0]
 74c:	str	w10, [x0, #16]
 750:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 754:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 758:	ldr	x1, [x1]
 75c:	ldr	x2, [x2]
 760:	bl	0 <__cxa_throw>
 764:	mov	w0, #0x18                  	// #24
 768:	bl	0 <__cxa_allocate_exception>
 76c:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 770:	ldr	x8, [x8]
 774:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 778:	add	x9, x9, #0x0
 77c:	mov	w10, #0xffffffff            	// #-1
 780:	add	x8, x8, #0x10
 784:	stp	x8, x9, [x0]
 788:	str	w10, [x0, #16]
 78c:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 790:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 794:	ldr	x1, [x1]
 798:	ldr	x2, [x2]
 79c:	bl	0 <__cxa_throw>
 7a0:	mov	w0, #0x18                  	// #24
 7a4:	bl	0 <__cxa_allocate_exception>
 7a8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7ac:	ldr	x8, [x8]
 7b0:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7b4:	add	x9, x9, #0x0
 7b8:	mov	w10, #0xffffffff            	// #-1
 7bc:	add	x8, x8, #0x10
 7c0:	stp	x8, x9, [x0]
 7c4:	str	w10, [x0, #16]
 7c8:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7cc:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7d0:	ldr	x1, [x1]
 7d4:	ldr	x2, [x2]
 7d8:	bl	0 <__cxa_throw>
 7dc:	mov	w0, #0x18                  	// #24
 7e0:	bl	0 <__cxa_allocate_exception>
 7e4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7e8:	ldr	x8, [x8]
 7ec:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7f0:	add	x9, x9, #0x0
 7f4:	mov	w10, #0xffffffff            	// #-1
 7f8:	add	x8, x8, #0x10
 7fc:	stp	x8, x9, [x0]
 800:	str	w10, [x0, #16]
 804:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 808:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 80c:	ldr	x1, [x1]
 810:	ldr	x2, [x2]
 814:	bl	0 <__cxa_throw>
 818:	bl	0 <__cxa_call_unexpected>
 81c:	bl	0 <__cxa_call_unexpected>
 820:	bl	0 <__cxa_call_unexpected>
 824:	bl	0 <__cxa_call_unexpected>
 828:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev>:
   0:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x9, x9, #0x10
  14:	str	x9, [x8]
  18:	cbz	x0, 20 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev+0x20>
  1c:	b	0 <_ZdaPv>
  20:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	ldr	x8, [x8]
  18:	mov	x29, sp
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev+0x2c>
  28:	bl	0 <_ZdaPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesapp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18NCursesApplication4initEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	tbz	w1, #0, 18 <_ZN18NCursesApplication4initEb+0x18>
  14:	bl	0 <_ZN13NCursesWindow9useColorsEv>
  18:	bl	0 <_ZN13NCursesWindow14NumberOfColorsEv>
  1c:	cmp	w0, #0x2
  20:	b.lt	d8 <_ZN18NCursesApplication4initEb+0xd8>  // b.tstop
  24:	ldr	x0, [x19, #16]
  28:	mov	w8, #0x1                   	// #1
  2c:	mov	w1, #0x1                   	// #1
  30:	strb	w8, [x19, #8]
  34:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  38:	ldr	x0, [x19, #16]
  3c:	mov	w1, #0x3                   	// #3
  40:	mov	w2, #0x4                   	// #4
  44:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  48:	ldr	x0, [x19, #16]
  4c:	mov	w1, #0x2                   	// #2
  50:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  54:	ldr	x0, [x19, #16]
  58:	mov	w1, #0x6                   	// #6
  5c:	mov	w2, #0x4                   	// #4
  60:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  64:	ldr	x0, [x19, #16]
  68:	mov	w1, #0x3                   	// #3
  6c:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  70:	ldr	x0, [x19, #16]
  74:	mov	w2, #0x4                   	// #4
  78:	mov	w1, wzr
  7c:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  80:	ldr	x0, [x19, #16]
  84:	mov	w1, #0x4                   	// #4
  88:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  8c:	ldr	x0, [x19, #16]
  90:	mov	w2, #0x6                   	// #6
  94:	mov	w1, wzr
  98:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  9c:	ldr	x0, [x19, #16]
  a0:	mov	w1, #0x5                   	// #5
  a4:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  a8:	ldr	x0, [x19, #16]
  ac:	mov	w1, #0x4                   	// #4
  b0:	mov	w2, #0x3                   	// #3
  b4:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  b8:	ldr	x0, [x19, #16]
  bc:	mov	w1, #0x6                   	// #6
  c0:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  c4:	ldr	x0, [x19, #16]
  c8:	mov	w2, #0x2                   	// #2
  cc:	mov	w1, wzr
  d0:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  d4:	b	dc <_ZN18NCursesApplication4initEb+0xdc>
  d8:	strb	wzr, [x19, #8]
  dc:	ldr	x8, [x19]
  e0:	ldr	x20, [x19, #16]
  e4:	mov	x0, x19
  e8:	ldr	x8, [x8, #112]
  ec:	blr	x8
  f0:	ldr	x8, [x20, #8]
  f4:	ldp	x20, x19, [sp, #16]
  f8:	orr	w1, w0, #0x20
  fc:	mov	x0, x8
 100:	ldp	x29, x30, [sp], #32
 104:	b	0 <wbkgd>

0000000000000108 <_ZN18NCursesApplicationD1Ev>:
 108:	stp	x29, x30, [sp, #-48]!
 10c:	str	x21, [sp, #16]
 110:	stp	x20, x19, [sp, #32]
 114:	mov	x29, sp
 118:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 11c:	ldr	x8, [x8]
 120:	adrp	x20, 8 <_ZN18NCursesApplication4initEb+0x8>
 124:	mov	x19, x0
 128:	add	x8, x8, #0x10
 12c:	str	x8, [x0]
 130:	ldr	x20, [x20]
 134:	ldr	x0, [x20]
 138:	cbz	x0, 148 <_ZN18NCursesApplicationD1Ev+0x40>
 13c:	ldr	x8, [x0]
 140:	ldr	x8, [x8, #16]
 144:	blr	x8
 148:	str	xzr, [x20]
 14c:	adrp	x21, 10 <_ZN18NCursesApplication4initEb+0x10>
 150:	ldr	x21, [x21]
 154:	ldr	x8, [x21]
 158:	cbz	x8, 180 <_ZN18NCursesApplicationD1Ev+0x78>
 15c:	ldr	x20, [x8, #8]
 160:	cbz	x20, 180 <_ZN18NCursesApplicationD1Ev+0x78>
 164:	mov	x0, x19
 168:	bl	1dc <_ZN18NCursesApplication3popEv>
 16c:	ldr	x8, [x20]
 170:	ldr	x8, [x8, #8]
 174:	mov	x0, x20
 178:	blr	x8
 17c:	b	154 <_ZN18NCursesApplicationD1Ev+0x4c>
 180:	ldr	x0, [x19, #16]
 184:	cbz	x0, 194 <_ZN18NCursesApplicationD1Ev+0x8c>
 188:	ldr	x8, [x0]
 18c:	ldr	x8, [x8, #16]
 190:	blr	x8
 194:	str	xzr, [x19, #16]
 198:	bl	0 <endwin>
 19c:	ldp	x20, x19, [sp, #32]
 1a0:	ldr	x21, [sp, #16]
 1a4:	ldp	x29, x30, [sp], #48
 1a8:	ret
 1ac:	b	1b0 <_ZN18NCursesApplicationD1Ev+0xa8>
 1b0:	tbz	w1, #31, 1b8 <_ZN18NCursesApplicationD1Ev+0xb0>
 1b4:	bl	0 <__cxa_call_unexpected>
 1b8:	bl	0 <_Unwind_Resume>

00000000000001bc <_ZNK18NCursesApplication3topEv>:
 1bc:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 1c0:	ldr	x8, [x8]
 1c4:	ldr	x8, [x8]
 1c8:	cbz	x8, 1d4 <_ZNK18NCursesApplication3topEv+0x18>
 1cc:	ldr	x0, [x8, #8]
 1d0:	ret
 1d4:	mov	x0, xzr
 1d8:	ret

00000000000001dc <_ZN18NCursesApplication3popEv>:
 1dc:	stp	x29, x30, [sp, #-32]!
 1e0:	stp	x20, x19, [sp, #16]
 1e4:	mov	x29, sp
 1e8:	adrp	x20, 10 <_ZN18NCursesApplication4initEb+0x10>
 1ec:	ldr	x20, [x20]
 1f0:	ldr	x8, [x20]
 1f4:	cbz	x8, 23c <_ZN18NCursesApplication3popEv+0x60>
 1f8:	ldr	x9, [x8]
 1fc:	mov	x19, x0
 200:	mov	x0, x8
 204:	str	x9, [x20]
 208:	bl	0 <_ZdlPv>
 20c:	ldr	x8, [x19, #16]
 210:	cbz	x8, 23c <_ZN18NCursesApplication3popEv+0x60>
 214:	ldr	x8, [x20]
 218:	cbz	x8, 23c <_ZN18NCursesApplication3popEv+0x60>
 21c:	ldr	x19, [x8, #8]
 220:	cbz	x19, 23c <_ZN18NCursesApplication3popEv+0x60>
 224:	mov	x0, x19
 228:	mov	w1, wzr
 22c:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 230:	mov	w1, #0x1                   	// #1
 234:	mov	x0, x19
 238:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 23c:	ldr	x8, [x20]
 240:	ldp	x20, x19, [sp, #16]
 244:	cmp	x8, #0x0
 248:	cset	w0, eq  // eq = none
 24c:	ldp	x29, x30, [sp], #32
 250:	ret

0000000000000254 <_ZN18NCursesApplicationD0Ev>:
 254:	brk	#0x1

0000000000000258 <_ZN18NCursesApplication5rinitER13NCursesWindow>:
 258:	adrp	x8, 8 <_ZN18NCursesApplication4initEb+0x8>
 25c:	ldr	x8, [x8]
 260:	str	x0, [x8]
 264:	mov	w0, wzr
 268:	ret

000000000000026c <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>:
 26c:	stp	x29, x30, [sp, #-32]!
 270:	stp	x20, x19, [sp, #16]
 274:	mov	x29, sp
 278:	mov	x20, x0
 27c:	mov	w0, #0x10                  	// #16
 280:	mov	x19, x1
 284:	bl	0 <_Znwm>
 288:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 28c:	ldr	x8, [x8]
 290:	ldr	x9, [x8]
 294:	str	x0, [x8]
 298:	stp	x9, x19, [x0]
 29c:	ldr	x8, [x20, #16]
 2a0:	cbz	x8, 2c4 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set+0x58>
 2a4:	mov	x0, x19
 2a8:	mov	w1, wzr
 2ac:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 2b0:	mov	x0, x19
 2b4:	ldp	x20, x19, [sp, #16]
 2b8:	mov	w1, #0x1                   	// #1
 2bc:	ldp	x29, x30, [sp], #32
 2c0:	b	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 2c4:	ldp	x20, x19, [sp, #16]
 2c8:	ldp	x29, x30, [sp], #32
 2cc:	ret

00000000000002d0 <_ZN18NCursesApplicationclEv>:
 2d0:	stp	x29, x30, [sp, #-64]!
 2d4:	stp	x24, x23, [sp, #16]
 2d8:	stp	x22, x21, [sp, #32]
 2dc:	stp	x20, x19, [sp, #48]
 2e0:	mov	x29, sp
 2e4:	ldr	x8, [x0]
 2e8:	ldrb	w24, [x0, #8]
 2ec:	mov	x19, x0
 2f0:	ldr	x8, [x8, #8]
 2f4:	blr	x8
 2f8:	mov	w20, w0
 2fc:	cmp	w0, #0x1
 300:	b.lt	314 <_ZN18NCursesApplicationclEv+0x44>  // b.tstop
 304:	adrp	x1, 258 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 308:	ldr	x1, [x1]
 30c:	mov	w0, w20
 310:	bl	0 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>
 314:	ldr	x8, [x19]
 318:	mov	x0, x19
 31c:	ldr	x8, [x8, #24]
 320:	blr	x8
 324:	mov	w21, w0
 328:	cmn	w0, #0x1
 32c:	b.eq	360 <_ZN18NCursesApplicationclEv+0x90>  // b.none
 330:	mov	w0, #0x18                  	// #24
 334:	bl	0 <_Znwm>
 338:	mov	x23, x0
 33c:	mov	w1, w21
 340:	bl	0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>
 344:	ldr	x8, [x19]
 348:	mov	x0, x19
 34c:	mov	x1, x23
 350:	ldr	x8, [x8, #32]
 354:	blr	x8
 358:	mov	x22, x23
 35c:	b	364 <_ZN18NCursesApplicationclEv+0x94>
 360:	mov	x22, xzr
 364:	mov	w0, #0x30                  	// #48
 368:	bl	0 <_Znwm>
 36c:	adrp	x8, 0 <stdscr>
 370:	ldr	x8, [x8]
 374:	mov	x23, x0
 378:	ldr	x1, [x8]
 37c:	bl	0 <_ZN13NCursesWindowC1EP7_win_st>
 380:	ldr	x8, [x19]
 384:	str	x23, [x19, #16]
 388:	cmp	w24, #0x0
 38c:	cset	w1, ne  // ne = any
 390:	ldr	x8, [x8]
 394:	mov	x0, x19
 398:	blr	x8
 39c:	cmp	w20, #0x1
 3a0:	b.lt	3b4 <_ZN18NCursesApplicationclEv+0xe4>  // b.tstop
 3a4:	ldr	x8, [x19]
 3a8:	mov	x0, x19
 3ac:	ldr	x8, [x8, #16]
 3b0:	blr	x8
 3b4:	cmn	w21, #0x1
 3b8:	b.eq	3c8 <_ZN18NCursesApplicationclEv+0xf8>  // b.none
 3bc:	mov	x0, x19
 3c0:	mov	x1, x22
 3c4:	bl	26c <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>
 3c8:	ldr	x8, [x19]
 3cc:	mov	x0, x19
 3d0:	ldp	x20, x19, [sp, #48]
 3d4:	ldp	x22, x21, [sp, #32]
 3d8:	ldr	x1, [x8, #40]
 3dc:	ldp	x24, x23, [sp, #16]
 3e0:	ldp	x29, x30, [sp], #64
 3e4:	br	x1
 3e8:	b	3ec <_ZN18NCursesApplicationclEv+0x11c>
 3ec:	mov	x19, x0
 3f0:	mov	x0, x23
 3f4:	bl	0 <_ZdlPv>
 3f8:	mov	x0, x19
 3fc:	bl	0 <_Unwind_Resume>

0000000000000400 <_ZN18NCursesApplicationC2Eb>:
 400:	stp	x29, x30, [sp, #-16]!
 404:	mov	x29, sp
 408:	adrp	x9, 0 <_ZN18NCursesApplication4initEb>
 40c:	ldr	x9, [x9]
 410:	and	w8, w1, #0x1
 414:	str	xzr, [x0, #16]
 418:	strb	w8, [x0, #8]
 41c:	add	x9, x9, #0x10
 420:	str	x9, [x0]
 424:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 428:	ldr	x8, [x8]
 42c:	ldr	x9, [x8]
 430:	cbnz	x9, 440 <_ZN18NCursesApplicationC2Eb+0x40>
 434:	str	x0, [x8]
 438:	ldp	x29, x30, [sp], #16
 43c:	ret
 440:	mov	w0, #0x18                  	// #24
 444:	bl	0 <__cxa_allocate_exception>
 448:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 44c:	ldr	x8, [x8]
 450:	adrp	x9, 0 <_ZN18NCursesApplication4initEb>
 454:	add	x9, x9, #0x0
 458:	mov	w10, #0xffffffff            	// #-1
 45c:	add	x8, x8, #0x10
 460:	stp	x8, x9, [x0]
 464:	str	w10, [x0, #16]
 468:	adrp	x1, 0 <_ZN18NCursesApplication4initEb>
 46c:	adrp	x2, 0 <_ZN18NCursesApplication4initEb>
 470:	ldr	x1, [x1]
 474:	ldr	x2, [x2]
 478:	bl	0 <__cxa_throw>

Disassembly of section .text._ZNK18NCursesApplication9titlesizeEv:

0000000000000000 <_ZNK18NCursesApplication9titlesizeEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN18NCursesApplication5titleEv:

0000000000000000 <_ZN18NCursesApplication5titleEv>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication7useSLKsEv:

0000000000000000 <_ZNK18NCursesApplication7useSLKsEv>:
   0:	mov	w0, #0xffffffff            	// #-1
   4:	ret

Disassembly of section .text._ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set:

0000000000000000 <_ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set>:
   0:	ret

Disassembly of section .text._ZN18NCursesApplication10handleArgsEiPPc:

0000000000000000 <_ZN18NCursesApplication10handleArgsEiPPc>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication11foregroundsEv:

0000000000000000 <_ZNK18NCursesApplication11foregroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x100                 	// #256
   8:	cmp	w8, #0x0
   c:	mov	w8, #0x200000              	// #2097152
  10:	csel	w0, w8, w9, eq  // eq = none
  14:	ret

Disassembly of section .text._ZNK18NCursesApplication11backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication11backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #9
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication9inactivesEv:

0000000000000000 <_ZNK18NCursesApplication9inactivesEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x300                 	// #768
   8:	movk	w9, #0x10, lsl #16
   c:	cmp	w8, #0x0
  10:	mov	w8, #0x100000              	// #1048576
  14:	csel	w0, w8, w9, eq  // eq = none
  18:	ret

Disassembly of section .text._ZNK18NCursesApplication6labelsEv:

0000000000000000 <_ZNK18NCursesApplication6labelsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #10
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication18dialog_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18dialog_backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #10
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication18window_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18window_backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	cmp	w8, #0x0
   8:	mov	w8, #0x500                 	// #1280
   c:	csel	w0, wzr, w8, eq  // eq = none
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication13screen_titlesEv:

0000000000000000 <_ZNK18NCursesApplication13screen_titlesEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x600                 	// #1536
   8:	cmp	w8, #0x0
   c:	mov	w8, #0x200000              	// #2097152
  10:	csel	w0, w8, w9, eq  // eq = none
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesmain.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <main>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	adrp	x1, 0 <main>
  18:	mov	w20, w0
  1c:	add	x1, x1, #0x0
  20:	mov	w0, #0x6                   	// #6
  24:	bl	0 <setlocale>
  28:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
  2c:	ldr	x8, [x8]
  30:	ldr	x21, [x8]
  34:	cbz	x21, 68 <main+0x68>
  38:	ldr	x8, [x21]
  3c:	mov	x0, x21
  40:	mov	w1, w20
  44:	mov	x2, x19
  48:	ldr	x8, [x8, #64]
  4c:	blr	x8
  50:	bl	0 <endwin>
  54:	mov	x0, x21
  58:	bl	0 <_ZN18NCursesApplicationclEv>
  5c:	mov	w19, w0
  60:	bl	0 <endwin>
  64:	b	6c <main+0x6c>
  68:	mov	w19, #0x1                   	// #1
  6c:	mov	w0, w19
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	cmp	w1, #0x1
  84:	mov	x19, x0
  88:	b.ne	150 <main+0x150>  // b.any
  8c:	mov	x0, x19
  90:	bl	0 <__cxa_begin_catch>
  94:	mov	x19, x0
  98:	bl	0 <endwin>
  9c:	adrp	x21, 0 <_ZSt4cerr>
  a0:	ldr	x20, [x19, #8]
  a4:	ldr	x21, [x21]
  a8:	cbz	x20, cc <main+0xcc>
  ac:	mov	x0, x20
  b0:	bl	0 <strlen>
  b4:	mov	x2, x0
  b8:	adrp	x0, 0 <_ZSt4cerr>
  bc:	ldr	x0, [x0]
  c0:	mov	x1, x20
  c4:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
  c8:	b	e4 <main+0xe4>
  cc:	ldr	x8, [x21]
  d0:	ldur	x8, [x8, #-24]
  d4:	add	x0, x21, x8
  d8:	ldr	w8, [x0, #32]
  dc:	orr	w1, w8, #0x1
  e0:	bl	0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate>
  e4:	ldr	x8, [x21]
  e8:	ldur	x8, [x8, #-24]
  ec:	add	x8, x21, x8
  f0:	ldr	x20, [x8, #240]
  f4:	cbz	x20, 144 <main+0x144>
  f8:	ldrb	w8, [x20, #56]
  fc:	cbz	w8, 108 <main+0x108>
 100:	ldrb	w1, [x20, #67]
 104:	b	128 <main+0x128>
 108:	mov	x0, x20
 10c:	bl	0 <_ZNKSt5ctypeIcE13_M_widen_initEv>
 110:	ldr	x8, [x20]
 114:	ldr	x8, [x8, #48]
 118:	mov	w1, #0xa                   	// #10
 11c:	mov	x0, x20
 120:	blr	x8
 124:	mov	w1, w0
 128:	adrp	x0, 0 <_ZSt4cerr>
 12c:	ldr	x0, [x0]
 130:	bl	0 <_ZNSo3putEc>
 134:	bl	0 <_ZNSo5flushEv>
 138:	ldr	w19, [x19, #16]
 13c:	bl	0 <__cxa_end_catch>
 140:	b	6c <main+0x6c>
 144:	bl	0 <_ZSt16__throw_bad_castv>
 148:	mov	x19, x0
 14c:	bl	0 <__cxa_end_catch>
 150:	mov	x0, x19
 154:	bl	0 <_Unwind_Resume>
 158:	bl	0 <main>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesmain.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesmain.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  20:	ldr	x0, [x0]
  24:	mov	x1, x19
  28:	ldr	x19, [sp, #16]
  2c:	adrp	x2, 0 <__dso_handle>
  30:	add	x2, x2, #0x0
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <__cxa_atexit>
