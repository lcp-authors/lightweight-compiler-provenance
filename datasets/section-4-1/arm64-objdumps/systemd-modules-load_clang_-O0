
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-modules-load_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401098 <_init>:
  401098:	stp	x29, x30, [sp, #-16]!
  40109c:	mov	x29, sp
  4010a0:	bl	401370 <call_weak_fn>
  4010a4:	ldp	x29, x30, [sp], #16
  4010a8:	ret

Disassembly of section .plt:

00000000004010b0 <__libc_start_main@plt-0x20>:
  4010b0:	stp	x16, x30, [sp, #-16]!
  4010b4:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4010b8:	ldr	x17, [x16, #3792]
  4010bc:	add	x16, x16, #0xed0
  4010c0:	br	x17
  4010c4:	nop
  4010c8:	nop
  4010cc:	nop

00000000004010d0 <__libc_start_main@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4010d4:	ldr	x17, [x16, #3800]
  4010d8:	add	x16, x16, #0xed8
  4010dc:	br	x17

00000000004010e0 <abort@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4010e4:	ldr	x17, [x16, #3808]
  4010e8:	add	x16, x16, #0xee0
  4010ec:	br	x17

00000000004010f0 <__gmon_start__@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4010f4:	ldr	x17, [x16, #3816]
  4010f8:	add	x16, x16, #0xee8
  4010fc:	br	x17

0000000000401100 <ask_password_agent_close@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401104:	ldr	x17, [x16, #3824]
  401108:	add	x16, x16, #0xef0
  40110c:	br	x17

0000000000401110 <polkit_agent_close@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401114:	ldr	x17, [x16, #3832]
  401118:	add	x16, x16, #0xef8
  40111c:	br	x17

0000000000401120 <pager_close@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401124:	ldr	x17, [x16, #3840]
  401128:	add	x16, x16, #0xf00
  40112c:	br	x17

0000000000401130 <mac_selinux_finish@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401134:	ldr	x17, [x16, #3848]
  401138:	add	x16, x16, #0xf08
  40113c:	br	x17

0000000000401140 <log_setup_service@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401144:	ldr	x17, [x16, #3856]
  401148:	add	x16, x16, #0xf10
  40114c:	br	x17

0000000000401150 <umask@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401154:	ldr	x17, [x16, #3864]
  401158:	add	x16, x16, #0xf18
  40115c:	br	x17

0000000000401160 <proc_cmdline_parse@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401164:	ldr	x17, [x16, #3872]
  401168:	add	x16, x16, #0xf20
  40116c:	br	x17

0000000000401170 <log_get_max_level_realm@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401174:	ldr	x17, [x16, #3880]
  401178:	add	x16, x16, #0xf28
  40117c:	br	x17

0000000000401180 <log_internal_realm@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401184:	ldr	x17, [x16, #3888]
  401188:	add	x16, x16, #0xf30
  40118c:	br	x17

0000000000401190 <abs@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401194:	ldr	x17, [x16, #3896]
  401198:	add	x16, x16, #0xf38
  40119c:	br	x17

00000000004011a0 <kmod_new@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4011a4:	ldr	x17, [x16, #3904]
  4011a8:	add	x16, x16, #0xf40
  4011ac:	br	x17

00000000004011b0 <kmod_load_resources@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4011b4:	ldr	x17, [x16, #3912]
  4011b8:	add	x16, x16, #0xf48
  4011bc:	br	x17

00000000004011c0 <kmod_set_log_fn@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4011c4:	ldr	x17, [x16, #3920]
  4011c8:	add	x16, x16, #0xf50
  4011cc:	br	x17

00000000004011d0 <module_load_and_warn@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4011d4:	ldr	x17, [x16, #3928]
  4011d8:	add	x16, x16, #0xf58
  4011dc:	br	x17

00000000004011e0 <conf_files_list_nulstr@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4011e4:	ldr	x17, [x16, #3936]
  4011e8:	add	x16, x16, #0xf60
  4011ec:	br	x17

00000000004011f0 <strv_free@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4011f4:	ldr	x17, [x16, #3944]
  4011f8:	add	x16, x16, #0xf68
  4011fc:	br	x17

0000000000401200 <kmod_unref@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401204:	ldr	x17, [x16, #3952]
  401208:	add	x16, x16, #0xf70
  40120c:	br	x17

0000000000401210 <log_assert_failed_realm@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401214:	ldr	x17, [x16, #3960]
  401218:	add	x16, x16, #0xf78
  40121c:	br	x17

0000000000401220 <getopt_long@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401224:	ldr	x17, [x16, #3968]
  401228:	add	x16, x16, #0xf80
  40122c:	br	x17

0000000000401230 <version@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401234:	ldr	x17, [x16, #3976]
  401238:	add	x16, x16, #0xf88
  40123c:	br	x17

0000000000401240 <log_assert_failed_unreachable_realm@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401244:	ldr	x17, [x16, #3984]
  401248:	add	x16, x16, #0xf90
  40124c:	br	x17

0000000000401250 <proc_cmdline_key_streq@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401254:	ldr	x17, [x16, #3992]
  401258:	add	x16, x16, #0xf98
  40125c:	br	x17

0000000000401260 <log_internalv_realm@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401264:	ldr	x17, [x16, #4000]
  401268:	add	x16, x16, #0xfa0
  40126c:	br	x17

0000000000401270 <search_and_fopen_nulstr@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401274:	ldr	x17, [x16, #4008]
  401278:	add	x16, x16, #0xfa8
  40127c:	br	x17

0000000000401280 <strstrip@plt>:
  401280:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401284:	ldr	x17, [x16, #4016]
  401288:	add	x16, x16, #0xfb0
  40128c:	br	x17

0000000000401290 <strchr@plt>:
  401290:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401294:	ldr	x17, [x16, #4024]
  401298:	add	x16, x16, #0xfb8
  40129c:	br	x17

00000000004012a0 <terminal_urlify_man@plt>:
  4012a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4012a4:	ldr	x17, [x16, #4032]
  4012a8:	add	x16, x16, #0xfc0
  4012ac:	br	x17

00000000004012b0 <log_oom_internal@plt>:
  4012b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4012b4:	ldr	x17, [x16, #4040]
  4012b8:	add	x16, x16, #0xfc8
  4012bc:	br	x17

00000000004012c0 <printf@plt>:
  4012c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4012c4:	ldr	x17, [x16, #4048]
  4012c8:	add	x16, x16, #0xfd0
  4012cc:	br	x17

00000000004012d0 <free@plt>:
  4012d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4012d4:	ldr	x17, [x16, #4056]
  4012d8:	add	x16, x16, #0xfd8
  4012dc:	br	x17

00000000004012e0 <strv_extend_strv@plt>:
  4012e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4012e4:	ldr	x17, [x16, #4064]
  4012e8:	add	x16, x16, #0xfe0
  4012ec:	br	x17

00000000004012f0 <strv_split_full@plt>:
  4012f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  4012f4:	ldr	x17, [x16, #4072]
  4012f8:	add	x16, x16, #0xfe8
  4012fc:	br	x17

0000000000401300 <safe_fclose@plt>:
  401300:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401304:	ldr	x17, [x16, #4080]
  401308:	add	x16, x16, #0xff0
  40130c:	br	x17

0000000000401310 <read_line_full@plt>:
  401310:	adrp	x16, 41f000 <__FRAME_END__+0x1c4a8>
  401314:	ldr	x17, [x16, #4088]
  401318:	add	x16, x16, #0xff8
  40131c:	br	x17

Disassembly of section .text:

0000000000401320 <_start>:
  401320:	mov	x29, #0x0                   	// #0
  401324:	mov	x30, #0x0                   	// #0
  401328:	mov	x5, x0
  40132c:	ldr	x1, [sp]
  401330:	add	x2, sp, #0x8
  401334:	mov	x6, sp
  401338:	movz	x0, #0x0, lsl #48
  40133c:	movk	x0, #0x0, lsl #32
  401340:	movk	x0, #0x40, lsl #16
  401344:	movk	x0, #0x1514
  401348:	movz	x3, #0x0, lsl #48
  40134c:	movk	x3, #0x0, lsl #32
  401350:	movk	x3, #0x40, lsl #16
  401354:	movk	x3, #0x25d8
  401358:	movz	x4, #0x0, lsl #48
  40135c:	movk	x4, #0x0, lsl #32
  401360:	movk	x4, #0x40, lsl #16
  401364:	movk	x4, #0x2658
  401368:	bl	4010d0 <__libc_start_main@plt>
  40136c:	bl	4010e0 <abort@plt>

0000000000401370 <call_weak_fn>:
  401370:	adrp	x0, 41f000 <__FRAME_END__+0x1c4a8>
  401374:	ldr	x0, [x0, #3752]
  401378:	cbz	x0, 401380 <call_weak_fn+0x10>
  40137c:	b	4010f0 <__gmon_start__@plt>
  401380:	ret

0000000000401384 <deregister_tm_clones>:
  401384:	stp	x29, x30, [sp, #-32]!
  401388:	mov	x29, sp
  40138c:	adrp	x0, 420000 <completed.8445>
  401390:	add	x0, x0, #0x0
  401394:	str	x0, [sp, #24]
  401398:	ldr	x0, [sp, #24]
  40139c:	str	x0, [sp, #24]
  4013a0:	ldr	x1, [sp, #24]
  4013a4:	adrp	x0, 420000 <completed.8445>
  4013a8:	add	x0, x0, #0x0
  4013ac:	cmp	x1, x0
  4013b0:	b.eq	4013ec <deregister_tm_clones+0x68>  // b.none
  4013b4:	adrp	x0, 402000 <apply_file+0x200>
  4013b8:	add	x0, x0, #0x670
  4013bc:	ldr	x0, [x0]
  4013c0:	str	x0, [sp, #16]
  4013c4:	ldr	x0, [sp, #16]
  4013c8:	str	x0, [sp, #16]
  4013cc:	ldr	x0, [sp, #16]
  4013d0:	cmp	x0, #0x0
  4013d4:	b.eq	4013f0 <deregister_tm_clones+0x6c>  // b.none
  4013d8:	ldr	x1, [sp, #16]
  4013dc:	adrp	x0, 420000 <completed.8445>
  4013e0:	add	x0, x0, #0x0
  4013e4:	blr	x1
  4013e8:	b	4013f0 <deregister_tm_clones+0x6c>
  4013ec:	nop
  4013f0:	ldp	x29, x30, [sp], #32
  4013f4:	ret

00000000004013f8 <register_tm_clones>:
  4013f8:	stp	x29, x30, [sp, #-48]!
  4013fc:	mov	x29, sp
  401400:	adrp	x0, 420000 <completed.8445>
  401404:	add	x0, x0, #0x0
  401408:	str	x0, [sp, #40]
  40140c:	ldr	x0, [sp, #40]
  401410:	str	x0, [sp, #40]
  401414:	ldr	x1, [sp, #40]
  401418:	adrp	x0, 420000 <completed.8445>
  40141c:	add	x0, x0, #0x0
  401420:	sub	x0, x1, x0
  401424:	asr	x0, x0, #3
  401428:	lsr	x1, x0, #63
  40142c:	add	x0, x1, x0
  401430:	asr	x0, x0, #1
  401434:	str	x0, [sp, #32]
  401438:	ldr	x0, [sp, #32]
  40143c:	cmp	x0, #0x0
  401440:	b.eq	401480 <register_tm_clones+0x88>  // b.none
  401444:	adrp	x0, 402000 <apply_file+0x200>
  401448:	add	x0, x0, #0x678
  40144c:	ldr	x0, [x0]
  401450:	str	x0, [sp, #24]
  401454:	ldr	x0, [sp, #24]
  401458:	str	x0, [sp, #24]
  40145c:	ldr	x0, [sp, #24]
  401460:	cmp	x0, #0x0
  401464:	b.eq	401484 <register_tm_clones+0x8c>  // b.none
  401468:	ldr	x2, [sp, #24]
  40146c:	ldr	x1, [sp, #32]
  401470:	adrp	x0, 420000 <completed.8445>
  401474:	add	x0, x0, #0x0
  401478:	blr	x2
  40147c:	b	401484 <register_tm_clones+0x8c>
  401480:	nop
  401484:	ldp	x29, x30, [sp], #48
  401488:	ret

000000000040148c <__do_global_dtors_aux>:
  40148c:	stp	x29, x30, [sp, #-16]!
  401490:	mov	x29, sp
  401494:	adrp	x0, 420000 <completed.8445>
  401498:	add	x0, x0, #0x0
  40149c:	ldrb	w0, [x0]
  4014a0:	and	x0, x0, #0xff
  4014a4:	cmp	x0, #0x0
  4014a8:	b.ne	4014c4 <__do_global_dtors_aux+0x38>  // b.any
  4014ac:	bl	401384 <deregister_tm_clones>
  4014b0:	adrp	x0, 420000 <completed.8445>
  4014b4:	add	x0, x0, #0x0
  4014b8:	mov	w1, #0x1                   	// #1
  4014bc:	strb	w1, [x0]
  4014c0:	b	4014c8 <__do_global_dtors_aux+0x3c>
  4014c4:	nop
  4014c8:	ldp	x29, x30, [sp], #16
  4014cc:	ret

00000000004014d0 <frame_dummy>:
  4014d0:	stp	x29, x30, [sp, #-16]!
  4014d4:	mov	x29, sp
  4014d8:	bl	4013f8 <register_tm_clones>
  4014dc:	nop
  4014e0:	ldp	x29, x30, [sp], #16
  4014e4:	ret

00000000004014e8 <__unique_prefix_static_destructor_wrapper0>:
  4014e8:	sub	sp, sp, #0x20
  4014ec:	stp	x29, x30, [sp, #16]
  4014f0:	add	x29, sp, #0x10
  4014f4:	str	x0, [sp, #8]
  4014f8:	ldr	x8, [sp, #8]
  4014fc:	str	x8, [sp]
  401500:	ldr	x0, [sp]
  401504:	bl	401b14 <strv_freep>
  401508:	ldp	x29, x30, [sp, #16]
  40150c:	add	sp, sp, #0x20
  401510:	ret

0000000000401514 <main>:
  401514:	sub	sp, sp, #0x30
  401518:	stp	x29, x30, [sp, #32]
  40151c:	add	x29, sp, #0x20
  401520:	mov	w8, wzr
  401524:	mov	w9, #0x1                   	// #1
  401528:	stur	wzr, [x29, #-4]
  40152c:	stur	w0, [x29, #-8]
  401530:	str	x1, [sp, #16]
  401534:	ldur	w0, [x29, #-8]
  401538:	ldr	x1, [sp, #16]
  40153c:	str	w8, [sp, #8]
  401540:	str	w9, [sp, #4]
  401544:	bl	40158c <save_argc_argv>
  401548:	ldur	w0, [x29, #-8]
  40154c:	ldr	x1, [sp, #16]
  401550:	bl	4015c0 <run>
  401554:	str	w0, [sp, #12]
  401558:	bl	401100 <ask_password_agent_close@plt>
  40155c:	bl	401110 <polkit_agent_close@plt>
  401560:	bl	401120 <pager_close@plt>
  401564:	bl	401130 <mac_selinux_finish@plt>
  401568:	bl	401a94 <static_destruct>
  40156c:	ldr	w8, [sp, #12]
  401570:	cmp	w8, #0x0
  401574:	ldr	w8, [sp, #4]
  401578:	ldr	w9, [sp, #8]
  40157c:	csel	w0, w8, w9, lt  // lt = tstop
  401580:	ldp	x29, x30, [sp, #32]
  401584:	add	sp, sp, #0x30
  401588:	ret

000000000040158c <save_argc_argv>:
  40158c:	sub	sp, sp, #0x10
  401590:	adrp	x8, 420000 <completed.8445>
  401594:	add	x8, x8, #0x10
  401598:	adrp	x9, 420000 <completed.8445>
  40159c:	add	x9, x9, #0x18
  4015a0:	str	w0, [sp, #12]
  4015a4:	str	x1, [sp]
  4015a8:	ldr	w10, [sp, #12]
  4015ac:	str	w10, [x8]
  4015b0:	ldr	x8, [sp]
  4015b4:	str	x8, [x9]
  4015b8:	add	sp, sp, #0x10
  4015bc:	ret

00000000004015c0 <run>:
  4015c0:	sub	sp, sp, #0xb0
  4015c4:	stp	x29, x30, [sp, #160]
  4015c8:	add	x29, sp, #0xa0
  4015cc:	mov	x8, xzr
  4015d0:	adrp	x9, 402000 <apply_file+0x200>
  4015d4:	add	x9, x9, #0x680
  4015d8:	add	x9, x9, #0x3
  4015dc:	adrp	x10, 402000 <apply_file+0x200>
  4015e0:	add	x10, x10, #0x6a3
  4015e4:	stur	w0, [x29, #-8]
  4015e8:	stur	x1, [x29, #-16]
  4015ec:	stur	x8, [x29, #-24]
  4015f0:	ldur	w0, [x29, #-8]
  4015f4:	ldur	x1, [x29, #-16]
  4015f8:	str	x9, [sp, #40]
  4015fc:	str	x10, [sp, #32]
  401600:	bl	401b7c <parse_argv>
  401604:	stur	w0, [x29, #-28]
  401608:	ldur	w11, [x29, #-28]
  40160c:	cmp	w11, #0x0
  401610:	cset	w11, gt
  401614:	tbnz	w11, #0, 40162c <run+0x6c>
  401618:	ldur	w8, [x29, #-28]
  40161c:	stur	w8, [x29, #-4]
  401620:	mov	w8, #0x1                   	// #1
  401624:	stur	w8, [x29, #-36]
  401628:	b	401a7c <run+0x4bc>
  40162c:	bl	401140 <log_setup_service@plt>
  401630:	mov	w0, #0x12                  	// #18
  401634:	bl	401150 <umask@plt>
  401638:	adrp	x8, 401000 <_init-0x98>
  40163c:	add	x8, x8, #0xd08
  401640:	mov	x0, x8
  401644:	mov	x8, xzr
  401648:	mov	x1, x8
  40164c:	mov	w2, #0x1                   	// #1
  401650:	bl	401160 <proc_cmdline_parse@plt>
  401654:	stur	w0, [x29, #-28]
  401658:	ldur	w9, [x29, #-28]
  40165c:	cmp	w9, #0x0
  401660:	cset	w9, ge  // ge = tcont
  401664:	tbnz	w9, #0, 4016e0 <run+0x120>
  401668:	mov	w8, #0x4                   	// #4
  40166c:	stur	w8, [x29, #-40]
  401670:	ldur	w8, [x29, #-28]
  401674:	stur	w8, [x29, #-44]
  401678:	stur	wzr, [x29, #-48]
  40167c:	ldur	w0, [x29, #-48]
  401680:	bl	401170 <log_get_max_level_realm@plt>
  401684:	ldur	w8, [x29, #-40]
  401688:	and	w8, w8, #0x7
  40168c:	cmp	w0, w8
  401690:	b.lt	4016c4 <run+0x104>  // b.tstop
  401694:	ldur	w8, [x29, #-48]
  401698:	ldur	w9, [x29, #-40]
  40169c:	orr	w0, w9, w8, lsl #10
  4016a0:	ldur	w1, [x29, #-44]
  4016a4:	ldr	x2, [sp, #40]
  4016a8:	mov	w3, #0xaf                  	// #175
  4016ac:	ldr	x4, [sp, #32]
  4016b0:	adrp	x5, 402000 <apply_file+0x200>
  4016b4:	add	x5, x5, #0x6a7
  4016b8:	bl	401180 <log_internal_realm@plt>
  4016bc:	str	w0, [sp, #28]
  4016c0:	b	4016d8 <run+0x118>
  4016c4:	ldur	w0, [x29, #-44]
  4016c8:	bl	401190 <abs@plt>
  4016cc:	mov	w8, wzr
  4016d0:	subs	w8, w8, w0, uxtb
  4016d4:	str	w8, [sp, #28]
  4016d8:	ldr	w8, [sp, #28]
  4016dc:	stur	w8, [x29, #-52]
  4016e0:	mov	x8, xzr
  4016e4:	mov	x0, x8
  4016e8:	mov	x1, x8
  4016ec:	bl	4011a0 <kmod_new@plt>
  4016f0:	stur	x0, [x29, #-24]
  4016f4:	ldur	x8, [x29, #-24]
  4016f8:	cbnz	x8, 401784 <run+0x1c4>
  4016fc:	mov	w8, #0x3                   	// #3
  401700:	stur	w8, [x29, #-56]
  401704:	stur	wzr, [x29, #-60]
  401708:	stur	wzr, [x29, #-64]
  40170c:	ldur	w0, [x29, #-64]
  401710:	bl	401170 <log_get_max_level_realm@plt>
  401714:	ldur	w8, [x29, #-56]
  401718:	and	w8, w8, #0x7
  40171c:	cmp	w0, w8
  401720:	b.lt	401754 <run+0x194>  // b.tstop
  401724:	ldur	w8, [x29, #-64]
  401728:	ldur	w9, [x29, #-56]
  40172c:	orr	w0, w9, w8, lsl #10
  401730:	ldur	w1, [x29, #-60]
  401734:	ldr	x2, [sp, #40]
  401738:	mov	w3, #0xb3                  	// #179
  40173c:	ldr	x4, [sp, #32]
  401740:	adrp	x5, 402000 <apply_file+0x200>
  401744:	add	x5, x5, #0x6d9
  401748:	bl	401180 <log_internal_realm@plt>
  40174c:	str	w0, [sp, #24]
  401750:	b	401768 <run+0x1a8>
  401754:	ldur	w0, [x29, #-60]
  401758:	bl	401190 <abs@plt>
  40175c:	mov	w8, wzr
  401760:	subs	w8, w8, w0, uxtb
  401764:	str	w8, [sp, #24]
  401768:	ldr	w8, [sp, #24]
  40176c:	stur	w8, [x29, #-68]
  401770:	mov	w8, #0xfffffff4            	// #-12
  401774:	stur	w8, [x29, #-4]
  401778:	mov	w8, #0x1                   	// #1
  40177c:	stur	w8, [x29, #-36]
  401780:	b	401a7c <run+0x4bc>
  401784:	ldur	x0, [x29, #-24]
  401788:	bl	4011b0 <kmod_load_resources@plt>
  40178c:	ldur	x8, [x29, #-24]
  401790:	mov	x0, x8
  401794:	adrp	x1, 401000 <_init-0x98>
  401798:	add	x1, x1, #0xd94
  40179c:	mov	x8, xzr
  4017a0:	mov	x2, x8
  4017a4:	bl	4011c0 <kmod_set_log_fn@plt>
  4017a8:	stur	wzr, [x29, #-28]
  4017ac:	ldur	w9, [x29, #-8]
  4017b0:	adrp	x8, 420000 <completed.8445>
  4017b4:	add	x8, x8, #0x20
  4017b8:	ldr	w10, [x8]
  4017bc:	cmp	w9, w10
  4017c0:	b.le	401844 <run+0x284>
  4017c4:	adrp	x8, 420000 <completed.8445>
  4017c8:	add	x8, x8, #0x20
  4017cc:	ldr	w9, [x8]
  4017d0:	stur	w9, [x29, #-72]
  4017d4:	ldur	w8, [x29, #-72]
  4017d8:	ldur	w9, [x29, #-8]
  4017dc:	cmp	w8, w9
  4017e0:	b.ge	401840 <run+0x280>  // b.tcont
  4017e4:	ldur	x0, [x29, #-24]
  4017e8:	ldur	x8, [x29, #-16]
  4017ec:	ldursw	x9, [x29, #-72]
  4017f0:	mov	x10, #0x8                   	// #8
  4017f4:	mul	x9, x10, x9
  4017f8:	add	x8, x8, x9
  4017fc:	ldr	x1, [x8]
  401800:	mov	w11, wzr
  401804:	and	w2, w11, #0x1
  401808:	bl	401e00 <apply_file>
  40180c:	stur	w0, [x29, #-32]
  401810:	ldur	w11, [x29, #-32]
  401814:	cmp	w11, #0x0
  401818:	cset	w11, ge  // ge = tcont
  40181c:	tbnz	w11, #0, 401830 <run+0x270>
  401820:	ldur	w8, [x29, #-28]
  401824:	cbnz	w8, 401830 <run+0x270>
  401828:	ldur	w8, [x29, #-32]
  40182c:	stur	w8, [x29, #-28]
  401830:	ldur	w8, [x29, #-72]
  401834:	add	w8, w8, #0x1
  401838:	stur	w8, [x29, #-72]
  40183c:	b	4017d4 <run+0x214>
  401840:	b	401a6c <run+0x4ac>
  401844:	mov	x8, xzr
  401848:	str	x8, [sp, #80]
  40184c:	adrp	x8, 420000 <completed.8445>
  401850:	add	x8, x8, #0x8
  401854:	ldr	x8, [x8]
  401858:	str	x8, [sp, #64]
  40185c:	ldr	x8, [sp, #64]
  401860:	mov	w9, #0x0                   	// #0
  401864:	str	w9, [sp, #20]
  401868:	cbz	x8, 401880 <run+0x2c0>
  40186c:	ldr	x8, [sp, #64]
  401870:	ldr	x8, [x8]
  401874:	cmp	x8, #0x0
  401878:	cset	w9, ne  // ne = any
  40187c:	str	w9, [sp, #20]
  401880:	ldr	w8, [sp, #20]
  401884:	tbnz	w8, #0, 40188c <run+0x2cc>
  401888:	b	4018ec <run+0x32c>
  40188c:	ldur	x0, [x29, #-24]
  401890:	ldr	x8, [sp, #64]
  401894:	ldr	x1, [x8]
  401898:	mov	w9, #0x1                   	// #1
  40189c:	and	w2, w9, #0x1
  4018a0:	bl	4011d0 <module_load_and_warn@plt>
  4018a4:	stur	w0, [x29, #-32]
  4018a8:	ldur	w9, [x29, #-32]
  4018ac:	mov	w10, #0xfffffffe            	// #-2
  4018b0:	cmp	w9, w10
  4018b4:	b.ne	4018bc <run+0x2fc>  // b.any
  4018b8:	b	4018dc <run+0x31c>
  4018bc:	ldur	w8, [x29, #-32]
  4018c0:	cmp	w8, #0x0
  4018c4:	cset	w8, ge  // ge = tcont
  4018c8:	tbnz	w8, #0, 4018dc <run+0x31c>
  4018cc:	ldur	w8, [x29, #-28]
  4018d0:	cbnz	w8, 4018dc <run+0x31c>
  4018d4:	ldur	w8, [x29, #-32]
  4018d8:	stur	w8, [x29, #-28]
  4018dc:	ldr	x8, [sp, #64]
  4018e0:	add	x8, x8, #0x8
  4018e4:	str	x8, [sp, #64]
  4018e8:	b	40185c <run+0x29c>
  4018ec:	add	x0, sp, #0x50
  4018f0:	adrp	x1, 402000 <apply_file+0x200>
  4018f4:	add	x1, x1, #0x6fd
  4018f8:	mov	x8, xzr
  4018fc:	mov	x2, x8
  401900:	mov	w9, wzr
  401904:	mov	w3, w9
  401908:	adrp	x4, 402000 <apply_file+0x200>
  40190c:	add	x4, x4, #0x980
  401910:	bl	4011e0 <conf_files_list_nulstr@plt>
  401914:	stur	w0, [x29, #-32]
  401918:	ldur	w9, [x29, #-32]
  40191c:	cmp	w9, #0x0
  401920:	cset	w9, ge  // ge = tcont
  401924:	tbnz	w9, #0, 4019c4 <run+0x404>
  401928:	mov	w8, #0x3                   	// #3
  40192c:	str	w8, [sp, #60]
  401930:	ldur	w8, [x29, #-32]
  401934:	str	w8, [sp, #56]
  401938:	str	wzr, [sp, #52]
  40193c:	ldr	w0, [sp, #52]
  401940:	bl	401170 <log_get_max_level_realm@plt>
  401944:	ldr	w8, [sp, #60]
  401948:	and	w8, w8, #0x7
  40194c:	cmp	w0, w8
  401950:	b.lt	401984 <run+0x3c4>  // b.tstop
  401954:	ldr	w8, [sp, #52]
  401958:	ldr	w9, [sp, #60]
  40195c:	orr	w0, w9, w8, lsl #10
  401960:	ldr	w1, [sp, #56]
  401964:	ldr	x2, [sp, #40]
  401968:	mov	w3, #0xd3                  	// #211
  40196c:	ldr	x4, [sp, #32]
  401970:	adrp	x5, 402000 <apply_file+0x200>
  401974:	add	x5, x5, #0x703
  401978:	bl	401180 <log_internal_realm@plt>
  40197c:	str	w0, [sp, #16]
  401980:	b	401998 <run+0x3d8>
  401984:	ldr	w0, [sp, #56]
  401988:	bl	401190 <abs@plt>
  40198c:	mov	w8, wzr
  401990:	subs	w8, w8, w0, uxtb
  401994:	str	w8, [sp, #16]
  401998:	ldr	w8, [sp, #16]
  40199c:	str	w8, [sp, #48]
  4019a0:	ldur	w8, [x29, #-28]
  4019a4:	cbnz	w8, 4019b0 <run+0x3f0>
  4019a8:	ldur	w8, [x29, #-32]
  4019ac:	stur	w8, [x29, #-28]
  4019b0:	ldur	w8, [x29, #-28]
  4019b4:	stur	w8, [x29, #-4]
  4019b8:	mov	w8, #0x1                   	// #1
  4019bc:	stur	w8, [x29, #-36]
  4019c0:	b	401a4c <run+0x48c>
  4019c4:	ldr	x8, [sp, #80]
  4019c8:	str	x8, [sp, #72]
  4019cc:	ldr	x8, [sp, #72]
  4019d0:	mov	w9, #0x0                   	// #0
  4019d4:	str	w9, [sp, #12]
  4019d8:	cbz	x8, 4019f0 <run+0x430>
  4019dc:	ldr	x8, [sp, #72]
  4019e0:	ldr	x8, [x8]
  4019e4:	cmp	x8, #0x0
  4019e8:	cset	w9, ne  // ne = any
  4019ec:	str	w9, [sp, #12]
  4019f0:	ldr	w8, [sp, #12]
  4019f4:	tbnz	w8, #0, 4019fc <run+0x43c>
  4019f8:	b	401a48 <run+0x488>
  4019fc:	ldur	x0, [x29, #-24]
  401a00:	ldr	x8, [sp, #72]
  401a04:	ldr	x1, [x8]
  401a08:	mov	w9, #0x1                   	// #1
  401a0c:	and	w2, w9, #0x1
  401a10:	bl	401e00 <apply_file>
  401a14:	stur	w0, [x29, #-32]
  401a18:	ldur	w9, [x29, #-32]
  401a1c:	cmp	w9, #0x0
  401a20:	cset	w9, ge  // ge = tcont
  401a24:	tbnz	w9, #0, 401a38 <run+0x478>
  401a28:	ldur	w8, [x29, #-28]
  401a2c:	cbnz	w8, 401a38 <run+0x478>
  401a30:	ldur	w8, [x29, #-32]
  401a34:	stur	w8, [x29, #-28]
  401a38:	ldr	x8, [sp, #72]
  401a3c:	add	x8, x8, #0x8
  401a40:	str	x8, [sp, #72]
  401a44:	b	4019cc <run+0x40c>
  401a48:	stur	wzr, [x29, #-36]
  401a4c:	add	x0, sp, #0x50
  401a50:	bl	401b14 <strv_freep>
  401a54:	ldur	w8, [x29, #-36]
  401a58:	cmp	w8, #0x0
  401a5c:	cset	w8, eq  // eq = none
  401a60:	eor	w8, w8, #0x1
  401a64:	tbnz	w8, #0, 401a7c <run+0x4bc>
  401a68:	b	401a6c <run+0x4ac>
  401a6c:	ldur	w8, [x29, #-28]
  401a70:	stur	w8, [x29, #-4]
  401a74:	mov	w8, #0x1                   	// #1
  401a78:	stur	w8, [x29, #-36]
  401a7c:	sub	x0, x29, #0x18
  401a80:	bl	401b48 <kmod_unrefp>
  401a84:	ldur	w0, [x29, #-4]
  401a88:	ldp	x29, x30, [sp, #160]
  401a8c:	add	sp, sp, #0xb0
  401a90:	ret

0000000000401a94 <static_destruct>:
  401a94:	sub	sp, sp, #0x20
  401a98:	stp	x29, x30, [sp, #16]
  401a9c:	add	x29, sp, #0x10
  401aa0:	adrp	x8, 41f000 <__FRAME_END__+0x1c4a8>
  401aa4:	ldr	x8, [x8, #3760]
  401aa8:	str	x8, [sp]
  401aac:	cbnz	x8, 401ab4 <static_destruct+0x20>
  401ab0:	b	401b08 <static_destruct+0x74>
  401ab4:	ldr	x0, [sp]
  401ab8:	mov	x1, #0x8                   	// #8
  401abc:	bl	4025a8 <ALIGN_TO>
  401ac0:	str	x0, [sp, #8]
  401ac4:	ldr	x8, [sp, #8]
  401ac8:	adrp	x9, 41f000 <__FRAME_END__+0x1c4a8>
  401acc:	ldr	x9, [x9, #3768]
  401ad0:	cmp	x8, x9
  401ad4:	b.cs	401b08 <static_destruct+0x74>  // b.hs, b.nlast
  401ad8:	ldr	x8, [sp, #8]
  401adc:	ldr	x8, [x8, #8]
  401ae0:	ldr	x9, [sp, #8]
  401ae4:	ldr	x0, [x9]
  401ae8:	blr	x8
  401aec:	ldr	x8, [sp, #8]
  401af0:	add	x8, x8, #0x10
  401af4:	mov	x0, x8
  401af8:	mov	x1, #0x8                   	// #8
  401afc:	bl	4025a8 <ALIGN_TO>
  401b00:	str	x0, [sp, #8]
  401b04:	b	401ac4 <static_destruct+0x30>
  401b08:	ldp	x29, x30, [sp, #16]
  401b0c:	add	sp, sp, #0x20
  401b10:	ret

0000000000401b14 <strv_freep>:
  401b14:	sub	sp, sp, #0x20
  401b18:	stp	x29, x30, [sp, #16]
  401b1c:	add	x29, sp, #0x10
  401b20:	str	x0, [sp, #8]
  401b24:	ldr	x8, [sp, #8]
  401b28:	ldr	x8, [x8]
  401b2c:	cbz	x8, 401b3c <strv_freep+0x28>
  401b30:	ldr	x8, [sp, #8]
  401b34:	ldr	x0, [x8]
  401b38:	bl	4011f0 <strv_free@plt>
  401b3c:	ldp	x29, x30, [sp, #16]
  401b40:	add	sp, sp, #0x20
  401b44:	ret

0000000000401b48 <kmod_unrefp>:
  401b48:	sub	sp, sp, #0x20
  401b4c:	stp	x29, x30, [sp, #16]
  401b50:	add	x29, sp, #0x10
  401b54:	str	x0, [sp, #8]
  401b58:	ldr	x8, [sp, #8]
  401b5c:	ldr	x8, [x8]
  401b60:	cbz	x8, 401b70 <kmod_unrefp+0x28>
  401b64:	ldr	x8, [sp, #8]
  401b68:	ldr	x0, [x8]
  401b6c:	bl	401200 <kmod_unref@plt>
  401b70:	ldp	x29, x30, [sp, #16]
  401b74:	add	sp, sp, #0x20
  401b78:	ret

0000000000401b7c <parse_argv>:
  401b7c:	sub	sp, sp, #0x40
  401b80:	stp	x29, x30, [sp, #48]
  401b84:	add	x29, sp, #0x30
  401b88:	adrp	x8, 402000 <apply_file+0x200>
  401b8c:	add	x8, x8, #0x680
  401b90:	add	x8, x8, #0x3
  401b94:	adrp	x9, 402000 <apply_file+0x200>
  401b98:	add	x9, x9, #0x747
  401b9c:	stur	w0, [x29, #-8]
  401ba0:	stur	x1, [x29, #-16]
  401ba4:	str	x8, [sp, #16]
  401ba8:	str	x9, [sp, #8]
  401bac:	ldur	w8, [x29, #-8]
  401bb0:	cmp	w8, #0x0
  401bb4:	cset	w8, ge  // ge = tcont
  401bb8:	mov	w9, #0x1                   	// #1
  401bbc:	eor	w8, w8, #0x1
  401bc0:	eor	w8, w8, w9
  401bc4:	eor	w8, w8, w9
  401bc8:	and	w8, w8, #0x1
  401bcc:	mov	w0, w8
  401bd0:	sxtw	x10, w0
  401bd4:	cbz	x10, 401bf8 <parse_argv+0x7c>
  401bd8:	mov	w8, wzr
  401bdc:	mov	w0, w8
  401be0:	adrp	x1, 402000 <apply_file+0x200>
  401be4:	add	x1, x1, #0x73d
  401be8:	ldr	x2, [sp, #16]
  401bec:	mov	w3, #0x8b                  	// #139
  401bf0:	ldr	x4, [sp, #8]
  401bf4:	bl	401210 <log_assert_failed_realm@plt>
  401bf8:	ldur	x8, [x29, #-16]
  401bfc:	cmp	x8, #0x0
  401c00:	cset	w9, ne  // ne = any
  401c04:	mov	w10, #0x1                   	// #1
  401c08:	eor	w9, w9, #0x1
  401c0c:	eor	w9, w9, w10
  401c10:	eor	w9, w9, w10
  401c14:	and	w9, w9, #0x1
  401c18:	mov	w0, w9
  401c1c:	sxtw	x8, w0
  401c20:	cbz	x8, 401c44 <parse_argv+0xc8>
  401c24:	mov	w8, wzr
  401c28:	mov	w0, w8
  401c2c:	adrp	x1, 402000 <apply_file+0x200>
  401c30:	add	x1, x1, #0x764
  401c34:	ldr	x2, [sp, #16]
  401c38:	mov	w3, #0x8c                  	// #140
  401c3c:	ldr	x4, [sp, #8]
  401c40:	bl	401210 <log_assert_failed_realm@plt>
  401c44:	ldur	w0, [x29, #-8]
  401c48:	ldur	x1, [x29, #-16]
  401c4c:	adrp	x2, 402000 <apply_file+0x200>
  401c50:	add	x2, x2, #0x769
  401c54:	adrp	x3, 402000 <apply_file+0x200>
  401c58:	add	x3, x3, #0x9f8
  401c5c:	mov	x8, xzr
  401c60:	mov	x4, x8
  401c64:	bl	401220 <getopt_long@plt>
  401c68:	stur	w0, [x29, #-20]
  401c6c:	cmp	w0, #0x0
  401c70:	cset	w9, lt  // lt = tstop
  401c74:	tbnz	w9, #0, 401cf0 <parse_argv+0x174>
  401c78:	ldur	w8, [x29, #-20]
  401c7c:	cmp	w8, #0x3f
  401c80:	str	w8, [sp, #4]
  401c84:	b.eq	401cc4 <parse_argv+0x148>  // b.none
  401c88:	b	401c8c <parse_argv+0x110>
  401c8c:	ldr	w8, [sp, #4]
  401c90:	cmp	w8, #0x68
  401c94:	b.eq	401cac <parse_argv+0x130>  // b.none
  401c98:	b	401c9c <parse_argv+0x120>
  401c9c:	ldr	w8, [sp, #4]
  401ca0:	cmp	w8, #0x100
  401ca4:	b.eq	401cb8 <parse_argv+0x13c>  // b.none
  401ca8:	b	401cd0 <parse_argv+0x154>
  401cac:	bl	402230 <help>
  401cb0:	stur	w0, [x29, #-4]
  401cb4:	b	401cf8 <parse_argv+0x17c>
  401cb8:	bl	401230 <version@plt>
  401cbc:	stur	w0, [x29, #-4]
  401cc0:	b	401cf8 <parse_argv+0x17c>
  401cc4:	mov	w8, #0xffffffea            	// #-22
  401cc8:	stur	w8, [x29, #-4]
  401ccc:	b	401cf8 <parse_argv+0x17c>
  401cd0:	mov	w8, wzr
  401cd4:	mov	w0, w8
  401cd8:	adrp	x1, 402000 <apply_file+0x200>
  401cdc:	add	x1, x1, #0x76b
  401ce0:	ldr	x2, [sp, #16]
  401ce4:	mov	w3, #0x9b                  	// #155
  401ce8:	ldr	x4, [sp, #8]
  401cec:	bl	401240 <log_assert_failed_unreachable_realm@plt>
  401cf0:	mov	w8, #0x1                   	// #1
  401cf4:	stur	w8, [x29, #-4]
  401cf8:	ldur	w0, [x29, #-4]
  401cfc:	ldp	x29, x30, [sp, #48]
  401d00:	add	sp, sp, #0x40
  401d04:	ret

0000000000401d08 <parse_proc_cmdline_item>:
  401d08:	sub	sp, sp, #0x40
  401d0c:	stp	x29, x30, [sp, #48]
  401d10:	add	x29, sp, #0x30
  401d14:	adrp	x8, 402000 <apply_file+0x200>
  401d18:	add	x8, x8, #0x85f
  401d1c:	stur	x0, [x29, #-16]
  401d20:	str	x1, [sp, #24]
  401d24:	str	x2, [sp, #16]
  401d28:	ldur	x0, [x29, #-16]
  401d2c:	mov	x1, x8
  401d30:	bl	401250 <proc_cmdline_key_streq@plt>
  401d34:	tbnz	w0, #0, 401d3c <parse_proc_cmdline_item+0x34>
  401d38:	b	401d80 <parse_proc_cmdline_item+0x78>
  401d3c:	ldur	x0, [x29, #-16]
  401d40:	ldr	x1, [sp, #24]
  401d44:	bl	402314 <proc_cmdline_value_missing>
  401d48:	tbnz	w0, #0, 401d50 <parse_proc_cmdline_item+0x48>
  401d4c:	b	401d58 <parse_proc_cmdline_item+0x50>
  401d50:	stur	wzr, [x29, #-4]
  401d54:	b	401d84 <parse_proc_cmdline_item+0x7c>
  401d58:	ldr	x0, [sp, #24]
  401d5c:	bl	4023ec <add_modules>
  401d60:	str	w0, [sp, #12]
  401d64:	ldr	w8, [sp, #12]
  401d68:	cmp	w8, #0x0
  401d6c:	cset	w8, ge  // ge = tcont
  401d70:	tbnz	w8, #0, 401d80 <parse_proc_cmdline_item+0x78>
  401d74:	ldr	w8, [sp, #12]
  401d78:	stur	w8, [x29, #-4]
  401d7c:	b	401d84 <parse_proc_cmdline_item+0x7c>
  401d80:	stur	wzr, [x29, #-4]
  401d84:	ldur	w0, [x29, #-4]
  401d88:	ldp	x29, x30, [sp, #48]
  401d8c:	add	sp, sp, #0x40
  401d90:	ret

0000000000401d94 <systemd_kmod_log>:
  401d94:	sub	sp, sp, #0x60
  401d98:	stp	x29, x30, [sp, #80]
  401d9c:	add	x29, sp, #0x50
  401da0:	mov	w8, wzr
  401da4:	mov	x9, sp
  401da8:	stur	x0, [x29, #-8]
  401dac:	stur	w1, [x29, #-12]
  401db0:	stur	x2, [x29, #-24]
  401db4:	stur	w3, [x29, #-28]
  401db8:	str	x4, [sp, #40]
  401dbc:	str	x5, [sp, #32]
  401dc0:	ldur	w10, [x29, #-12]
  401dc4:	orr	w0, w8, w10
  401dc8:	ldur	x2, [x29, #-24]
  401dcc:	ldur	w3, [x29, #-28]
  401dd0:	ldr	x4, [sp, #40]
  401dd4:	ldr	x5, [sp, #32]
  401dd8:	ldr	q0, [x6]
  401ddc:	str	q0, [sp]
  401de0:	ldr	q0, [x6, #16]
  401de4:	str	q0, [sp, #16]
  401de8:	mov	w1, w8
  401dec:	mov	x6, x9
  401df0:	bl	401260 <log_internalv_realm@plt>
  401df4:	ldp	x29, x30, [sp, #80]
  401df8:	add	sp, sp, #0x60
  401dfc:	ret

0000000000401e00 <apply_file>:
  401e00:	sub	sp, sp, #0xb0
  401e04:	stp	x29, x30, [sp, #160]
  401e08:	add	x29, sp, #0xa0
  401e0c:	mov	x8, xzr
  401e10:	adrp	x9, 402000 <apply_file+0x200>
  401e14:	add	x9, x9, #0x680
  401e18:	add	x9, x9, #0x3
  401e1c:	adrp	x10, 402000 <apply_file+0x200>
  401e20:	add	x10, x10, #0x933
  401e24:	mov	w11, #0x1                   	// #1
  401e28:	stur	x0, [x29, #-16]
  401e2c:	stur	x1, [x29, #-24]
  401e30:	and	w11, w2, w11
  401e34:	sturb	w11, [x29, #-25]
  401e38:	stur	x8, [x29, #-40]
  401e3c:	str	x9, [sp, #32]
  401e40:	str	x10, [sp, #24]
  401e44:	ldur	x8, [x29, #-16]
  401e48:	cmp	x8, #0x0
  401e4c:	cset	w9, ne  // ne = any
  401e50:	mov	w10, #0x1                   	// #1
  401e54:	eor	w9, w9, #0x1
  401e58:	eor	w9, w9, w10
  401e5c:	eor	w9, w9, w10
  401e60:	and	w9, w9, #0x1
  401e64:	mov	w0, w9
  401e68:	sxtw	x8, w0
  401e6c:	cbz	x8, 401e94 <apply_file+0x94>
  401e70:	mov	w8, wzr
  401e74:	mov	w0, w8
  401e78:	adrp	x1, 402000 <apply_file+0x200>
  401e7c:	add	x1, x1, #0x8f0
  401e80:	ldr	x2, [sp, #32]
  401e84:	mov	w3, #0x43                  	// #67
  401e88:	adrp	x4, 402000 <apply_file+0x200>
  401e8c:	add	x4, x4, #0x8f4
  401e90:	bl	401210 <log_assert_failed_realm@plt>
  401e94:	ldur	x8, [x29, #-24]
  401e98:	cmp	x8, #0x0
  401e9c:	cset	w9, ne  // ne = any
  401ea0:	mov	w10, #0x1                   	// #1
  401ea4:	eor	w9, w9, #0x1
  401ea8:	eor	w9, w9, w10
  401eac:	eor	w9, w9, w10
  401eb0:	and	w9, w9, #0x1
  401eb4:	mov	w0, w9
  401eb8:	sxtw	x8, w0
  401ebc:	cbz	x8, 401ee4 <apply_file+0xe4>
  401ec0:	mov	w8, wzr
  401ec4:	mov	w0, w8
  401ec8:	adrp	x1, 402000 <apply_file+0x200>
  401ecc:	add	x1, x1, #0x92b
  401ed0:	ldr	x2, [sp, #32]
  401ed4:	mov	w3, #0x44                  	// #68
  401ed8:	adrp	x4, 402000 <apply_file+0x200>
  401edc:	add	x4, x4, #0x8f4
  401ee0:	bl	401210 <log_assert_failed_realm@plt>
  401ee4:	ldur	x0, [x29, #-24]
  401ee8:	adrp	x1, 402000 <apply_file+0x200>
  401eec:	add	x1, x1, #0x930
  401ef0:	mov	x8, xzr
  401ef4:	mov	x2, x8
  401ef8:	adrp	x3, 402000 <apply_file+0x200>
  401efc:	add	x3, x3, #0x980
  401f00:	sub	x4, x29, #0x28
  401f04:	bl	401270 <search_and_fopen_nulstr@plt>
  401f08:	stur	w0, [x29, #-44]
  401f0c:	ldur	w9, [x29, #-44]
  401f10:	cmp	w9, #0x0
  401f14:	cset	w9, ge  // ge = tcont
  401f18:	tbnz	w9, #0, 401fd8 <apply_file+0x1d8>
  401f1c:	ldurb	w8, [x29, #-25]
  401f20:	tbnz	w8, #0, 401f28 <apply_file+0x128>
  401f24:	b	401f48 <apply_file+0x148>
  401f28:	ldur	w8, [x29, #-44]
  401f2c:	mov	w9, #0xfffffffe            	// #-2
  401f30:	cmp	w8, w9
  401f34:	b.ne	401f48 <apply_file+0x148>  // b.any
  401f38:	stur	wzr, [x29, #-4]
  401f3c:	mov	w8, #0x1                   	// #1
  401f40:	stur	w8, [x29, #-48]
  401f44:	b	402218 <apply_file+0x418>
  401f48:	mov	w8, #0x3                   	// #3
  401f4c:	stur	w8, [x29, #-52]
  401f50:	ldur	w8, [x29, #-44]
  401f54:	stur	w8, [x29, #-56]
  401f58:	stur	wzr, [x29, #-60]
  401f5c:	ldur	w0, [x29, #-60]
  401f60:	bl	401170 <log_get_max_level_realm@plt>
  401f64:	ldur	w8, [x29, #-52]
  401f68:	and	w8, w8, #0x7
  401f6c:	cmp	w0, w8
  401f70:	b.lt	401fa8 <apply_file+0x1a8>  // b.tstop
  401f74:	ldur	w8, [x29, #-60]
  401f78:	ldur	w9, [x29, #-52]
  401f7c:	orr	w0, w9, w8, lsl #10
  401f80:	ldur	w1, [x29, #-56]
  401f84:	ldur	x6, [x29, #-24]
  401f88:	ldr	x2, [sp, #32]
  401f8c:	mov	w3, #0x4b                  	// #75
  401f90:	ldr	x4, [sp, #24]
  401f94:	adrp	x5, 402000 <apply_file+0x200>
  401f98:	add	x5, x5, #0x93e
  401f9c:	bl	401180 <log_internal_realm@plt>
  401fa0:	str	w0, [sp, #20]
  401fa4:	b	401fbc <apply_file+0x1bc>
  401fa8:	ldur	w0, [x29, #-56]
  401fac:	bl	401190 <abs@plt>
  401fb0:	mov	w8, wzr
  401fb4:	subs	w8, w8, w0, uxtb
  401fb8:	str	w8, [sp, #20]
  401fbc:	ldr	w8, [sp, #20]
  401fc0:	stur	w8, [x29, #-64]
  401fc4:	ldur	w8, [x29, #-64]
  401fc8:	stur	w8, [x29, #-4]
  401fcc:	mov	w8, #0x1                   	// #1
  401fd0:	stur	w8, [x29, #-48]
  401fd4:	b	402218 <apply_file+0x418>
  401fd8:	mov	w8, #0x7                   	// #7
  401fdc:	stur	w8, [x29, #-68]
  401fe0:	stur	wzr, [x29, #-72]
  401fe4:	stur	wzr, [x29, #-76]
  401fe8:	ldur	w0, [x29, #-76]
  401fec:	bl	401170 <log_get_max_level_realm@plt>
  401ff0:	ldur	w8, [x29, #-68]
  401ff4:	and	w8, w8, #0x7
  401ff8:	cmp	w0, w8
  401ffc:	b.lt	402034 <apply_file+0x234>  // b.tstop
  402000:	ldur	w8, [x29, #-76]
  402004:	ldur	w9, [x29, #-68]
  402008:	orr	w0, w9, w8, lsl #10
  40200c:	ldur	w1, [x29, #-72]
  402010:	ldur	x6, [x29, #-24]
  402014:	ldr	x2, [sp, #32]
  402018:	mov	w3, #0x4e                  	// #78
  40201c:	ldr	x4, [sp, #24]
  402020:	adrp	x5, 402000 <apply_file+0x200>
  402024:	add	x5, x5, #0x954
  402028:	bl	401180 <log_internal_realm@plt>
  40202c:	str	w0, [sp, #16]
  402030:	b	402048 <apply_file+0x248>
  402034:	ldur	w0, [x29, #-72]
  402038:	bl	401190 <abs@plt>
  40203c:	mov	w8, wzr
  402040:	subs	w8, w8, w0, uxtb
  402044:	str	w8, [sp, #16]
  402048:	ldr	w8, [sp, #16]
  40204c:	str	w8, [sp, #80]
  402050:	add	x2, sp, #0x48
  402054:	mov	x8, xzr
  402058:	str	x8, [sp, #72]
  40205c:	ldur	x0, [x29, #-40]
  402060:	mov	x1, #0x100000              	// #1048576
  402064:	bl	40252c <read_line>
  402068:	str	w0, [sp, #60]
  40206c:	ldr	w9, [sp, #60]
  402070:	cmp	w9, #0x0
  402074:	cset	w9, ge  // ge = tcont
  402078:	tbnz	w9, #0, 40210c <apply_file+0x30c>
  40207c:	mov	w8, #0x3                   	// #3
  402080:	str	w8, [sp, #56]
  402084:	ldr	w8, [sp, #60]
  402088:	str	w8, [sp, #52]
  40208c:	str	wzr, [sp, #48]
  402090:	ldr	w0, [sp, #48]
  402094:	bl	401170 <log_get_max_level_realm@plt>
  402098:	ldr	w8, [sp, #56]
  40209c:	and	w8, w8, #0x7
  4020a0:	cmp	w0, w8
  4020a4:	b.lt	4020dc <apply_file+0x2dc>  // b.tstop
  4020a8:	ldr	w8, [sp, #48]
  4020ac:	ldr	w9, [sp, #56]
  4020b0:	orr	w0, w9, w8, lsl #10
  4020b4:	ldr	w1, [sp, #52]
  4020b8:	ldur	x6, [x29, #-24]
  4020bc:	ldr	x2, [sp, #32]
  4020c0:	mov	w3, #0x56                  	// #86
  4020c4:	ldr	x4, [sp, #24]
  4020c8:	adrp	x5, 402000 <apply_file+0x200>
  4020cc:	add	x5, x5, #0x95e
  4020d0:	bl	401180 <log_internal_realm@plt>
  4020d4:	str	w0, [sp, #12]
  4020d8:	b	4020f0 <apply_file+0x2f0>
  4020dc:	ldr	w0, [sp, #52]
  4020e0:	bl	401190 <abs@plt>
  4020e4:	mov	w8, wzr
  4020e8:	subs	w8, w8, w0, uxtb
  4020ec:	str	w8, [sp, #12]
  4020f0:	ldr	w8, [sp, #12]
  4020f4:	str	w8, [sp, #44]
  4020f8:	ldr	w8, [sp, #44]
  4020fc:	stur	w8, [x29, #-4]
  402100:	mov	w8, #0x1                   	// #1
  402104:	stur	w8, [x29, #-48]
  402108:	b	4021cc <apply_file+0x3cc>
  40210c:	ldr	w8, [sp, #60]
  402110:	cbnz	w8, 402120 <apply_file+0x320>
  402114:	mov	w8, #0x6                   	// #6
  402118:	stur	w8, [x29, #-48]
  40211c:	b	4021cc <apply_file+0x3cc>
  402120:	ldr	x0, [sp, #72]
  402124:	bl	401280 <strstrip@plt>
  402128:	str	x0, [sp, #64]
  40212c:	ldr	x0, [sp, #64]
  402130:	bl	402568 <isempty>
  402134:	tbnz	w0, #0, 40213c <apply_file+0x33c>
  402138:	b	402148 <apply_file+0x348>
  40213c:	mov	w8, #0x7                   	// #7
  402140:	stur	w8, [x29, #-48]
  402144:	b	4021cc <apply_file+0x3cc>
  402148:	ldr	x8, [sp, #64]
  40214c:	ldrb	w1, [x8]
  402150:	adrp	x0, 402000 <apply_file+0x200>
  402154:	add	x0, x0, #0x97b
  402158:	bl	401290 <strchr@plt>
  40215c:	cbz	x0, 40216c <apply_file+0x36c>
  402160:	mov	w8, #0x7                   	// #7
  402164:	stur	w8, [x29, #-48]
  402168:	b	4021cc <apply_file+0x3cc>
  40216c:	ldur	x0, [x29, #-16]
  402170:	ldr	x1, [sp, #64]
  402174:	mov	w8, #0x1                   	// #1
  402178:	and	w2, w8, #0x1
  40217c:	bl	4011d0 <module_load_and_warn@plt>
  402180:	str	w0, [sp, #60]
  402184:	ldr	w8, [sp, #60]
  402188:	mov	w9, #0xfffffffe            	// #-2
  40218c:	cmp	w8, w9
  402190:	b.ne	4021a0 <apply_file+0x3a0>  // b.any
  402194:	mov	w8, #0x7                   	// #7
  402198:	stur	w8, [x29, #-48]
  40219c:	b	4021cc <apply_file+0x3cc>
  4021a0:	ldr	w8, [sp, #60]
  4021a4:	cmp	w8, #0x0
  4021a8:	cset	w8, ge  // ge = tcont
  4021ac:	tbnz	w8, #0, 4021c8 <apply_file+0x3c8>
  4021b0:	ldur	w8, [x29, #-44]
  4021b4:	cmp	w8, #0x0
  4021b8:	cset	w8, lt  // lt = tstop
  4021bc:	tbnz	w8, #0, 4021c8 <apply_file+0x3c8>
  4021c0:	ldr	w8, [sp, #60]
  4021c4:	stur	w8, [x29, #-44]
  4021c8:	stur	wzr, [x29, #-48]
  4021cc:	add	x0, sp, #0x48
  4021d0:	bl	4022ec <freep>
  4021d4:	ldur	w8, [x29, #-48]
  4021d8:	str	w8, [sp, #8]
  4021dc:	cbz	w8, 402204 <apply_file+0x404>
  4021e0:	b	4021e4 <apply_file+0x3e4>
  4021e4:	ldr	w8, [sp, #8]
  4021e8:	cmp	w8, #0x6
  4021ec:	b.eq	402208 <apply_file+0x408>  // b.none
  4021f0:	b	4021f4 <apply_file+0x3f4>
  4021f4:	ldr	w8, [sp, #8]
  4021f8:	cmp	w8, #0x7
  4021fc:	b.eq	402050 <apply_file+0x250>  // b.none
  402200:	b	402218 <apply_file+0x418>
  402204:	b	402050 <apply_file+0x250>
  402208:	ldur	w8, [x29, #-44]
  40220c:	stur	w8, [x29, #-4]
  402210:	mov	w8, #0x1                   	// #1
  402214:	stur	w8, [x29, #-48]
  402218:	sub	x0, x29, #0x28
  40221c:	bl	402504 <fclosep>
  402220:	ldur	w0, [x29, #-4]
  402224:	ldp	x29, x30, [sp, #160]
  402228:	add	sp, sp, #0xb0
  40222c:	ret

0000000000402230 <help>:
  402230:	sub	sp, sp, #0x30
  402234:	stp	x29, x30, [sp, #32]
  402238:	add	x29, sp, #0x20
  40223c:	mov	x8, xzr
  402240:	adrp	x0, 402000 <apply_file+0x200>
  402244:	add	x0, x0, #0x77c
  402248:	adrp	x1, 402000 <apply_file+0x200>
  40224c:	add	x1, x1, #0x799
  402250:	adrp	x9, 402000 <apply_file+0x200>
  402254:	add	x9, x9, #0x680
  402258:	add	x9, x9, #0x3
  40225c:	add	x2, sp, #0x10
  402260:	str	x8, [sp, #16]
  402264:	str	x9, [sp]
  402268:	bl	4012a0 <terminal_urlify_man@plt>
  40226c:	str	w0, [sp, #12]
  402270:	ldr	w10, [sp, #12]
  402274:	cmp	w10, #0x0
  402278:	cset	w10, ge  // ge = tcont
  40227c:	tbnz	w10, #0, 4022ac <help+0x7c>
  402280:	mov	w8, wzr
  402284:	mov	w0, w8
  402288:	ldr	x1, [sp]
  40228c:	mov	w2, #0x70                  	// #112
  402290:	adrp	x3, 402000 <apply_file+0x200>
  402294:	add	x3, x3, #0x730
  402298:	bl	4012b0 <log_oom_internal@plt>
  40229c:	stur	w0, [x29, #-4]
  4022a0:	mov	w8, #0x1                   	// #1
  4022a4:	str	w8, [sp, #8]
  4022a8:	b	4022d4 <help+0xa4>
  4022ac:	adrp	x8, 420000 <completed.8445>
  4022b0:	add	x8, x8, #0x28
  4022b4:	ldr	x1, [x8]
  4022b8:	ldr	x2, [sp, #16]
  4022bc:	adrp	x0, 402000 <apply_file+0x200>
  4022c0:	add	x0, x0, #0x79b
  4022c4:	bl	4012c0 <printf@plt>
  4022c8:	stur	wzr, [x29, #-4]
  4022cc:	mov	w9, #0x1                   	// #1
  4022d0:	str	w9, [sp, #8]
  4022d4:	add	x0, sp, #0x10
  4022d8:	bl	4022ec <freep>
  4022dc:	ldur	w0, [x29, #-4]
  4022e0:	ldp	x29, x30, [sp, #32]
  4022e4:	add	sp, sp, #0x30
  4022e8:	ret

00000000004022ec <freep>:
  4022ec:	sub	sp, sp, #0x20
  4022f0:	stp	x29, x30, [sp, #16]
  4022f4:	add	x29, sp, #0x10
  4022f8:	str	x0, [sp, #8]
  4022fc:	ldr	x8, [sp, #8]
  402300:	ldr	x0, [x8]
  402304:	bl	4012d0 <free@plt>
  402308:	ldp	x29, x30, [sp, #16]
  40230c:	add	sp, sp, #0x20
  402310:	ret

0000000000402314 <proc_cmdline_value_missing>:
  402314:	sub	sp, sp, #0x50
  402318:	stp	x29, x30, [sp, #64]
  40231c:	add	x29, sp, #0x40
  402320:	adrp	x8, 402000 <apply_file+0x200>
  402324:	add	x8, x8, #0x86c
  402328:	add	x2, x8, #0x3
  40232c:	stur	x0, [x29, #-16]
  402330:	stur	x1, [x29, #-24]
  402334:	ldur	x8, [x29, #-24]
  402338:	str	x2, [sp, #16]
  40233c:	cbnz	x8, 4023cc <proc_cmdline_value_missing+0xb8>
  402340:	mov	w8, #0x4                   	// #4
  402344:	stur	w8, [x29, #-28]
  402348:	str	wzr, [sp, #32]
  40234c:	str	wzr, [sp, #28]
  402350:	ldr	w0, [sp, #28]
  402354:	bl	401170 <log_get_max_level_realm@plt>
  402358:	ldur	w8, [x29, #-28]
  40235c:	and	w8, w8, #0x7
  402360:	cmp	w0, w8
  402364:	b.lt	4023a0 <proc_cmdline_value_missing+0x8c>  // b.tstop
  402368:	ldr	w8, [sp, #28]
  40236c:	ldur	w9, [x29, #-28]
  402370:	orr	w0, w9, w8, lsl #10
  402374:	ldr	w1, [sp, #32]
  402378:	ldur	x6, [x29, #-16]
  40237c:	ldr	x2, [sp, #16]
  402380:	mov	w3, #0x21                  	// #33
  402384:	adrp	x4, 402000 <apply_file+0x200>
  402388:	add	x4, x4, #0x888
  40238c:	adrp	x5, 402000 <apply_file+0x200>
  402390:	add	x5, x5, #0x8a3
  402394:	bl	401180 <log_internal_realm@plt>
  402398:	str	w0, [sp, #12]
  40239c:	b	4023b4 <proc_cmdline_value_missing+0xa0>
  4023a0:	ldr	w0, [sp, #32]
  4023a4:	bl	401190 <abs@plt>
  4023a8:	mov	w8, wzr
  4023ac:	subs	w8, w8, w0, uxtb
  4023b0:	str	w8, [sp, #12]
  4023b4:	ldr	w8, [sp, #12]
  4023b8:	str	w8, [sp, #24]
  4023bc:	mov	w8, #0x1                   	// #1
  4023c0:	and	w8, w8, #0x1
  4023c4:	sturb	w8, [x29, #-1]
  4023c8:	b	4023d8 <proc_cmdline_value_missing+0xc4>
  4023cc:	mov	w8, wzr
  4023d0:	and	w8, w8, #0x1
  4023d4:	sturb	w8, [x29, #-1]
  4023d8:	ldurb	w8, [x29, #-1]
  4023dc:	and	w0, w8, #0x1
  4023e0:	ldp	x29, x30, [sp, #64]
  4023e4:	add	sp, sp, #0x50
  4023e8:	ret

00000000004023ec <add_modules>:
  4023ec:	sub	sp, sp, #0x40
  4023f0:	stp	x29, x30, [sp, #48]
  4023f4:	add	x29, sp, #0x30
  4023f8:	mov	x8, xzr
  4023fc:	adrp	x1, 402000 <apply_file+0x200>
  402400:	add	x1, x1, #0x8e2
  402404:	adrp	x9, 402000 <apply_file+0x200>
  402408:	add	x9, x9, #0x680
  40240c:	add	x9, x9, #0x3
  402410:	stur	x0, [x29, #-16]
  402414:	str	x8, [sp, #24]
  402418:	ldur	x0, [x29, #-16]
  40241c:	str	x9, [sp, #8]
  402420:	bl	4024d0 <strv_split>
  402424:	str	x0, [sp, #24]
  402428:	ldr	x8, [sp, #24]
  40242c:	cbnz	x8, 40245c <add_modules+0x70>
  402430:	mov	w8, wzr
  402434:	mov	w0, w8
  402438:	ldr	x1, [sp, #8]
  40243c:	mov	w2, #0x27                  	// #39
  402440:	adrp	x3, 402000 <apply_file+0x200>
  402444:	add	x3, x3, #0x8e4
  402448:	bl	4012b0 <log_oom_internal@plt>
  40244c:	stur	w0, [x29, #-4]
  402450:	mov	w8, #0x1                   	// #1
  402454:	str	w8, [sp, #20]
  402458:	b	4024b8 <add_modules+0xcc>
  40245c:	ldr	x1, [sp, #24]
  402460:	adrp	x0, 420000 <completed.8445>
  402464:	add	x0, x0, #0x8
  402468:	mov	w8, #0x1                   	// #1
  40246c:	and	w2, w8, #0x1
  402470:	bl	4012e0 <strv_extend_strv@plt>
  402474:	cmp	w0, #0x0
  402478:	cset	w8, ge  // ge = tcont
  40247c:	tbnz	w8, #0, 4024ac <add_modules+0xc0>
  402480:	mov	w8, wzr
  402484:	mov	w0, w8
  402488:	ldr	x1, [sp, #8]
  40248c:	mov	w2, #0x2a                  	// #42
  402490:	adrp	x3, 402000 <apply_file+0x200>
  402494:	add	x3, x3, #0x8e4
  402498:	bl	4012b0 <log_oom_internal@plt>
  40249c:	stur	w0, [x29, #-4]
  4024a0:	mov	w8, #0x1                   	// #1
  4024a4:	str	w8, [sp, #20]
  4024a8:	b	4024b8 <add_modules+0xcc>
  4024ac:	stur	wzr, [x29, #-4]
  4024b0:	mov	w8, #0x1                   	// #1
  4024b4:	str	w8, [sp, #20]
  4024b8:	add	x0, sp, #0x18
  4024bc:	bl	401b14 <strv_freep>
  4024c0:	ldur	w0, [x29, #-4]
  4024c4:	ldp	x29, x30, [sp, #48]
  4024c8:	add	sp, sp, #0x40
  4024cc:	ret

00000000004024d0 <strv_split>:
  4024d0:	sub	sp, sp, #0x20
  4024d4:	stp	x29, x30, [sp, #16]
  4024d8:	add	x29, sp, #0x10
  4024dc:	mov	w8, wzr
  4024e0:	str	x0, [sp, #8]
  4024e4:	str	x1, [sp]
  4024e8:	ldr	x0, [sp, #8]
  4024ec:	ldr	x1, [sp]
  4024f0:	mov	w2, w8
  4024f4:	bl	4012f0 <strv_split_full@plt>
  4024f8:	ldp	x29, x30, [sp, #16]
  4024fc:	add	sp, sp, #0x20
  402500:	ret

0000000000402504 <fclosep>:
  402504:	sub	sp, sp, #0x20
  402508:	stp	x29, x30, [sp, #16]
  40250c:	add	x29, sp, #0x10
  402510:	str	x0, [sp, #8]
  402514:	ldr	x8, [sp, #8]
  402518:	ldr	x0, [x8]
  40251c:	bl	401300 <safe_fclose@plt>
  402520:	ldp	x29, x30, [sp, #16]
  402524:	add	sp, sp, #0x20
  402528:	ret

000000000040252c <read_line>:
  40252c:	sub	sp, sp, #0x30
  402530:	stp	x29, x30, [sp, #32]
  402534:	add	x29, sp, #0x20
  402538:	mov	w8, wzr
  40253c:	stur	x0, [x29, #-8]
  402540:	str	x1, [sp, #16]
  402544:	str	x2, [sp, #8]
  402548:	ldur	x0, [x29, #-8]
  40254c:	ldr	x1, [sp, #16]
  402550:	ldr	x3, [sp, #8]
  402554:	mov	w2, w8
  402558:	bl	401310 <read_line_full@plt>
  40255c:	ldp	x29, x30, [sp, #32]
  402560:	add	sp, sp, #0x30
  402564:	ret

0000000000402568 <isempty>:
  402568:	sub	sp, sp, #0x10
  40256c:	str	x0, [sp, #8]
  402570:	ldr	x8, [sp, #8]
  402574:	mov	w9, #0x1                   	// #1
  402578:	str	w9, [sp, #4]
  40257c:	cbz	x8, 402598 <isempty+0x30>
  402580:	ldr	x8, [sp, #8]
  402584:	ldrb	w9, [x8]
  402588:	cmp	w9, #0x0
  40258c:	cset	w9, ne  // ne = any
  402590:	eor	w9, w9, #0x1
  402594:	str	w9, [sp, #4]
  402598:	ldr	w8, [sp, #4]
  40259c:	and	w0, w8, #0x1
  4025a0:	add	sp, sp, #0x10
  4025a4:	ret

00000000004025a8 <ALIGN_TO>:
  4025a8:	sub	sp, sp, #0x10
  4025ac:	str	x0, [sp, #8]
  4025b0:	str	x1, [sp]
  4025b4:	ldr	x8, [sp, #8]
  4025b8:	ldr	x9, [sp]
  4025bc:	add	x8, x8, x9
  4025c0:	subs	x8, x8, #0x1
  4025c4:	ldr	x9, [sp]
  4025c8:	subs	x9, x9, #0x1
  4025cc:	bic	x0, x8, x9
  4025d0:	add	sp, sp, #0x10
  4025d4:	ret

00000000004025d8 <__libc_csu_init>:
  4025d8:	stp	x29, x30, [sp, #-64]!
  4025dc:	mov	x29, sp
  4025e0:	stp	x19, x20, [sp, #16]
  4025e4:	adrp	x20, 41f000 <__FRAME_END__+0x1c4a8>
  4025e8:	add	x20, x20, #0xc70
  4025ec:	stp	x21, x22, [sp, #32]
  4025f0:	adrp	x21, 41f000 <__FRAME_END__+0x1c4a8>
  4025f4:	add	x21, x21, #0xc68
  4025f8:	sub	x20, x20, x21
  4025fc:	mov	w22, w0
  402600:	stp	x23, x24, [sp, #48]
  402604:	mov	x23, x1
  402608:	mov	x24, x2
  40260c:	bl	401098 <_init>
  402610:	cmp	xzr, x20, asr #3
  402614:	b.eq	402640 <__libc_csu_init+0x68>  // b.none
  402618:	asr	x20, x20, #3
  40261c:	mov	x19, #0x0                   	// #0
  402620:	ldr	x3, [x21, x19, lsl #3]
  402624:	mov	x2, x24
  402628:	add	x19, x19, #0x1
  40262c:	mov	x1, x23
  402630:	mov	w0, w22
  402634:	blr	x3
  402638:	cmp	x20, x19
  40263c:	b.ne	402620 <__libc_csu_init+0x48>  // b.any
  402640:	ldp	x19, x20, [sp, #16]
  402644:	ldp	x21, x22, [sp, #32]
  402648:	ldp	x23, x24, [sp, #48]
  40264c:	ldp	x29, x30, [sp], #64
  402650:	ret
  402654:	nop

0000000000402658 <__libc_csu_fini>:
  402658:	ret

Disassembly of section .fini:

000000000040265c <_fini>:
  40265c:	stp	x29, x30, [sp, #-16]!
  402660:	mov	x29, sp
  402664:	ldp	x29, x30, [sp], #16
  402668:	ret
