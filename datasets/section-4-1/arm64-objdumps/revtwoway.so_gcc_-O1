
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revtwoway.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <exit@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 11000 <dl_load@@Base+0x103c0>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <exit@plt>:
 670:	adrp	x16, 12000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <__cxa_finalize@plt>:
 680:	adrp	x16, 12000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <__gmon_start__@plt>:
 690:	adrp	x16, 12000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <strcmp@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <fwrite@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <getdtablesize@plt>:
 6c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0x560>:
 6e0:	adrp	x0, 11000 <dl_load@@Base+0x103c0>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	690 <__gmon_start__@plt>
 6f0:	ret
 6f4:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 6f8:	add	x0, x0, #0x60
 6fc:	adrp	x1, 12000 <dl_load@@Base+0x113c0>
 700:	add	x1, x1, #0x60
 704:	cmp	x0, x1
 708:	b.eq	734 <fprintf@plt+0x64>  // b.none
 70c:	adrp	x1, 11000 <dl_load@@Base+0x103c0>
 710:	ldr	x1, [x1, #4032]
 714:	cbz	x1, 734 <fprintf@plt+0x64>
 718:	stp	x29, x30, [sp, #-16]!
 71c:	mov	x29, sp
 720:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 724:	add	x0, x0, #0x60
 728:	blr	x1
 72c:	ldp	x29, x30, [sp], #16
 730:	ret
 734:	ret
 738:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 73c:	add	x0, x0, #0x60
 740:	adrp	x1, 12000 <dl_load@@Base+0x113c0>
 744:	add	x1, x1, #0x60
 748:	sub	x0, x0, x1
 74c:	lsr	x1, x0, #63
 750:	add	x0, x1, x0, asr #3
 754:	cmp	xzr, x0, asr #1
 758:	b.eq	788 <fprintf@plt+0xb8>  // b.none
 75c:	asr	x1, x0, #1
 760:	adrp	x2, 11000 <dl_load@@Base+0x103c0>
 764:	ldr	x2, [x2, #4064]
 768:	cbz	x2, 788 <fprintf@plt+0xb8>
 76c:	stp	x29, x30, [sp, #-16]!
 770:	mov	x29, sp
 774:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 778:	add	x0, x0, #0x60
 77c:	blr	x2
 780:	ldp	x29, x30, [sp], #16
 784:	ret
 788:	ret
 78c:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 790:	ldrb	w0, [x0, #96]
 794:	cbnz	w0, 7d0 <fprintf@plt+0x100>
 798:	stp	x29, x30, [sp, #-16]!
 79c:	mov	x29, sp
 7a0:	adrp	x0, 11000 <dl_load@@Base+0x103c0>
 7a4:	ldr	x0, [x0, #4040]
 7a8:	cbz	x0, 7b8 <fprintf@plt+0xe8>
 7ac:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 7b0:	ldr	x0, [x0, #56]
 7b4:	bl	680 <__cxa_finalize@plt>
 7b8:	bl	6f4 <fprintf@plt+0x24>
 7bc:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 7c0:	mov	w1, #0x1                   	// #1
 7c4:	strb	w1, [x0, #96]
 7c8:	ldp	x29, x30, [sp], #16
 7cc:	ret
 7d0:	ret
 7d4:	stp	x29, x30, [sp, #-16]!
 7d8:	mov	x29, sp
 7dc:	bl	738 <fprintf@plt+0x68>
 7e0:	ldp	x29, x30, [sp], #16
 7e4:	ret
 7e8:	stp	x29, x30, [sp, #-32]!
 7ec:	mov	x29, sp
 7f0:	stp	x19, x20, [sp, #16]
 7f4:	mov	x19, x0
 7f8:	ldr	x0, [x0, #24]
 7fc:	cmp	x0, #0x1
 800:	b.hi	834 <fprintf@plt+0x164>  // b.pmore
 804:	adrp	x20, 12000 <dl_load@@Base+0x113c0>
 808:	ldr	x0, [x20, #104]
 80c:	ldr	x1, [x0, #304]
 810:	ldr	x0, [x19, #16]
 814:	blr	x1
 818:	ldr	x0, [x20, #104]
 81c:	ldr	x1, [x0, #304]
 820:	mov	x0, x19
 824:	blr	x1
 828:	ldp	x19, x20, [sp, #16]
 82c:	ldp	x29, x30, [sp], #32
 830:	ret
 834:	sub	x0, x0, #0x1
 838:	str	x0, [x19, #24]
 83c:	b	828 <fprintf@plt+0x158>
 840:	mov	x5, x0
 844:	cmp	x0, #0x0
 848:	ccmp	x1, #0x0, #0x4, ne  // ne = any
 84c:	b.eq	8dc <fprintf@plt+0x20c>  // b.none
 850:	ldr	x2, [x1, #16]
 854:	cbz	x2, 8e4 <fprintf@plt+0x214>
 858:	ldr	x1, [x2, #8]
 85c:	mov	w0, #0x0                   	// #0
 860:	cbz	x1, 894 <fprintf@plt+0x1c4>
 864:	ldr	x0, [x2, #16]
 868:	str	x0, [x5]
 86c:	ldr	x5, [x2, #8]
 870:	mov	w0, w5
 874:	str	xzr, [x2, #8]
 878:	str	xzr, [x4]
 87c:	sxtw	x6, w5
 880:	sub	x6, x6, #0x1
 884:	ldr	x1, [x2, #16]
 888:	ldrb	w1, [x1, x6]
 88c:	cmp	w1, #0xa
 890:	b.eq	898 <fprintf@plt+0x1c8>  // b.none
 894:	ret
 898:	mov	x1, x6
 89c:	sub	w7, w5, #0x1
 8a0:	sub	w0, w1, w6
 8a4:	add	w0, w7, w0
 8a8:	ldr	x5, [x4]
 8ac:	add	x5, x5, #0x1
 8b0:	str	x5, [x4]
 8b4:	ldr	x5, [x2, #16]
 8b8:	add	x8, x5, x1
 8bc:	ldurb	w8, [x8, #-1]
 8c0:	mov	x9, x1
 8c4:	sub	x1, x1, #0x1
 8c8:	cmp	w8, #0xa
 8cc:	b.eq	8a0 <fprintf@plt+0x1d0>  // b.none
 8d0:	add	x5, x5, x9
 8d4:	str	x5, [x3]
 8d8:	b	894 <fprintf@plt+0x1c4>
 8dc:	mov	w0, #0xffffffff            	// #-1
 8e0:	b	894 <fprintf@plt+0x1c4>
 8e4:	mov	w0, #0xffffffff            	// #-1
 8e8:	b	894 <fprintf@plt+0x1c4>
 8ec:	cbz	x0, 920 <fprintf@plt+0x250>
 8f0:	stp	x29, x30, [sp, #-32]!
 8f4:	mov	x29, sp
 8f8:	str	x19, [sp, #16]
 8fc:	mov	x19, x0
 900:	ldr	x0, [x0, #16]
 904:	cbz	x0, 914 <fprintf@plt+0x244>
 908:	bl	7e8 <fprintf@plt+0x118>
 90c:	mov	w0, #0xffffffff            	// #-1
 910:	str	w0, [x19, #8]
 914:	ldr	x19, [sp, #16]
 918:	ldp	x29, x30, [sp], #32
 91c:	ret
 920:	ret
 924:	stp	x29, x30, [sp, #-48]!
 928:	mov	x29, sp
 92c:	stp	x19, x20, [sp, #16]
 930:	cbz	x4, a54 <fprintf@plt+0x384>
 934:	str	x21, [sp, #32]
 938:	mov	x21, x0
 93c:	mov	x19, x4
 940:	mul	x20, x1, x2
 944:	ldr	x1, [x4]
 948:	cmp	x1, x20
 94c:	b.cc	958 <fprintf@plt+0x288>  // b.lo, b.ul, b.last
 950:	ldr	x0, [x4, #8]
 954:	cbz	x0, 988 <fprintf@plt+0x2b8>
 958:	ldr	x0, [x19, #16]
 95c:	cbz	x0, 9d4 <fprintf@plt+0x304>
 960:	adrp	x2, 12000 <dl_load@@Base+0x113c0>
 964:	ldr	x2, [x2, #104]
 968:	ldr	x2, [x2, #296]
 96c:	add	x1, x1, x20
 970:	blr	x2
 974:	str	x0, [x19, #16]
 978:	cbz	x0, a20 <fprintf@plt+0x350>
 97c:	ldr	x0, [x19]
 980:	add	x0, x0, x20
 984:	str	x0, [x19]
 988:	sub	x1, x20, #0x1
 98c:	add	x1, x21, x1
 990:	ldr	x2, [x19, #16]
 994:	ldr	x0, [x19, #8]
 998:	add	x2, x2, x0
 99c:	cbz	x20, 9b4 <fprintf@plt+0x2e4>
 9a0:	sub	x3, x21, #0x1
 9a4:	ldrb	w0, [x1], #-1
 9a8:	strb	w0, [x2], #1
 9ac:	cmp	x3, x1
 9b0:	b.ne	9a4 <fprintf@plt+0x2d4>  // b.any
 9b4:	ldr	x0, [x19, #8]
 9b8:	add	x0, x0, x20
 9bc:	str	x0, [x19, #8]
 9c0:	ldr	x21, [sp, #32]
 9c4:	mov	x0, x20
 9c8:	ldp	x19, x20, [sp, #16]
 9cc:	ldp	x29, x30, [sp], #48
 9d0:	ret
 9d4:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 9d8:	ldr	x0, [x0, #104]
 9dc:	ldr	x1, [x0, #280]
 9e0:	mov	x0, x20
 9e4:	blr	x1
 9e8:	str	x0, [x19, #16]
 9ec:	cbnz	x0, 97c <fprintf@plt+0x2ac>
 9f0:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 9f4:	add	x5, x0, #0x68
 9f8:	ldr	x0, [x0, #104]
 9fc:	ldr	x4, [x0, #96]
 a00:	mov	x3, x20
 a04:	adrp	x2, 0 <exit@plt-0x670>
 a08:	add	x2, x2, #0xd98
 a0c:	adrp	x1, 0 <exit@plt-0x670>
 a10:	add	x1, x1, #0xda8
 a14:	ldr	x0, [x5, #8]
 a18:	blr	x4
 a1c:	b	97c <fprintf@plt+0x2ac>
 a20:	ldr	x3, [x19]
 a24:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 a28:	add	x5, x0, #0x68
 a2c:	ldr	x0, [x0, #104]
 a30:	ldr	x4, [x0, #96]
 a34:	add	x3, x20, x3
 a38:	adrp	x2, 0 <exit@plt-0x670>
 a3c:	add	x2, x2, #0xd98
 a40:	adrp	x1, 0 <exit@plt-0x670>
 a44:	add	x1, x1, #0xdc8
 a48:	ldr	x0, [x5, #8]
 a4c:	blr	x4
 a50:	b	97c <fprintf@plt+0x2ac>
 a54:	mov	x20, #0x0                   	// #0
 a58:	b	9c4 <fprintf@plt+0x2f4>
 a5c:	mov	w0, #0x0                   	// #0
 a60:	ret
 a64:	mov	w0, #0x0                   	// #0
 a68:	ret
 a6c:	cbz	x1, a8c <fprintf@plt+0x3bc>
 a70:	stp	x29, x30, [sp, #-16]!
 a74:	mov	x29, sp
 a78:	mov	x0, x1
 a7c:	bl	7e8 <fprintf@plt+0x118>
 a80:	mov	w0, #0x0                   	// #0
 a84:	ldp	x29, x30, [sp], #16
 a88:	ret
 a8c:	mov	w0, #0xffffffff            	// #-1
 a90:	ret
 a94:	stp	x29, x30, [sp, #-32]!
 a98:	mov	x29, sp
 a9c:	str	x19, [sp, #16]
 aa0:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 aa4:	add	x19, x0, #0x68
 aa8:	ldr	x0, [x0, #104]
 aac:	ldr	x2, [x0, #72]
 ab0:	adrp	x1, 12000 <dl_load@@Base+0x113c0>
 ab4:	add	x1, x1, #0x40
 ab8:	ldr	x0, [x19, #8]
 abc:	blr	x2
 ac0:	bl	6c0 <getdtablesize@plt>
 ac4:	sxtw	x0, w0
 ac8:	str	x0, [x19, #16]
 acc:	mov	w0, #0x1                   	// #1
 ad0:	ldr	x19, [sp, #16]
 ad4:	ldp	x29, x30, [sp], #32
 ad8:	ret
 adc:	cmp	x1, #0x0
 ae0:	mov	w0, #0x0                   	// #0
 ae4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
 ae8:	b.eq	c0c <fprintf@plt+0x53c>  // b.none
 aec:	stp	x29, x30, [sp, #-48]!
 af0:	mov	x29, sp
 af4:	stp	x19, x20, [sp, #16]
 af8:	str	x21, [sp, #32]
 afc:	mov	x20, x1
 b00:	mov	x19, x2
 b04:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 b08:	ldr	x0, [x0, #104]
 b0c:	ldr	x1, [x0, #280]
 b10:	mov	x0, #0x20                  	// #32
 b14:	blr	x1
 b18:	mov	x21, x0
 b1c:	cbz	x0, bc8 <fprintf@plt+0x4f8>
 b20:	mov	x0, #0x2                   	// #2
 b24:	str	x0, [x21, #24]
 b28:	str	xzr, [x21]
 b2c:	str	xzr, [x21, #8]
 b30:	str	xzr, [x21, #16]
 b34:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 b38:	ldr	x0, [x0, #120]
 b3c:	cmn	x0, #0x1
 b40:	b.eq	bf8 <fprintf@plt+0x528>  // b.none
 b44:	adrp	x0, 0 <exit@plt-0x670>
 b48:	add	x0, x0, #0x840
 b4c:	str	x0, [x20, #24]
 b50:	adrp	x0, 0 <exit@plt-0x670>
 b54:	add	x0, x0, #0x8ec
 b58:	str	x0, [x20, #40]
 b5c:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 b60:	add	x0, x0, #0x68
 b64:	ldr	x1, [x0, #16]
 b68:	str	w1, [x20, #8]
 b6c:	str	x21, [x20, #16]
 b70:	add	x2, x1, #0x1
 b74:	str	x2, [x0, #16]
 b78:	str	x1, [x19, #16]
 b7c:	str	x21, [x19, #32]
 b80:	adrp	x0, 0 <exit@plt-0x670>
 b84:	add	x0, x0, #0x924
 b88:	str	x0, [x19, #40]
 b8c:	adrp	x0, 0 <exit@plt-0x670>
 b90:	add	x0, x0, #0xa5c
 b94:	str	x0, [x19, #48]
 b98:	adrp	x0, 0 <exit@plt-0x670>
 b9c:	add	x0, x0, #0xa64
 ba0:	str	x0, [x19, #56]
 ba4:	adrp	x0, 0 <exit@plt-0x670>
 ba8:	add	x0, x0, #0xa6c
 bac:	str	x0, [x19, #64]
 bb0:	mov	w0, #0x1                   	// #1
 bb4:	str	w0, [x19, #24]
 bb8:	ldp	x19, x20, [sp, #16]
 bbc:	ldr	x21, [sp, #32]
 bc0:	ldp	x29, x30, [sp], #48
 bc4:	ret
 bc8:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 bcc:	add	x5, x0, #0x68
 bd0:	ldr	x0, [x0, #104]
 bd4:	ldr	x4, [x0, #96]
 bd8:	mov	x3, #0x20                  	// #32
 bdc:	adrp	x2, 0 <exit@plt-0x670>
 be0:	add	x2, x2, #0xde8
 be4:	adrp	x1, 0 <exit@plt-0x670>
 be8:	add	x1, x1, #0xda8
 bec:	ldr	x0, [x5, #8]
 bf0:	blr	x4
 bf4:	b	b20 <fprintf@plt+0x450>
 bf8:	bl	6c0 <getdtablesize@plt>
 bfc:	sxtw	x0, w0
 c00:	adrp	x1, 12000 <dl_load@@Base+0x113c0>
 c04:	str	x0, [x1, #120]
 c08:	b	b44 <fprintf@plt+0x474>
 c0c:	ret
 c10:	cbz	x0, c38 <fprintf@plt+0x568>
 c14:	stp	x29, x30, [sp, #-16]!
 c18:	mov	x29, sp
 c1c:	adrp	x1, 0 <exit@plt-0x670>
 c20:	add	x1, x1, #0xe08
 c24:	bl	6a0 <strcmp@plt>
 c28:	cmp	w0, #0x0
 c2c:	cset	w0, eq  // eq = none
 c30:	ldp	x29, x30, [sp], #16
 c34:	ret
 c38:	mov	w0, #0x0                   	// #0
 c3c:	ret

0000000000000c40 <dl_load@@Base>:
 c40:	stp	x29, x30, [sp, #-32]!
 c44:	mov	x29, sp
 c48:	str	x19, [sp, #16]
 c4c:	mov	x2, x0
 c50:	mov	x0, x1
 c54:	adrp	x1, 12000 <dl_load@@Base+0x113c0>
 c58:	add	x3, x1, #0x68
 c5c:	str	x2, [x1, #104]
 c60:	str	x0, [x3, #8]
 c64:	ldr	w1, [x2]
 c68:	cmp	w1, #0x2
 c6c:	b.ne	d30 <dl_load@@Base+0xf0>  // b.any
 c70:	ldr	w1, [x2, #4]
 c74:	tbnz	w1, #31, d30 <dl_load@@Base+0xf0>
 c78:	adrp	x1, 12000 <dl_load@@Base+0x113c0>
 c7c:	ldr	x1, [x1, #128]
 c80:	cbz	x1, d80 <dl_load@@Base+0x140>
 c84:	ldr	x3, [x2, #48]
 c88:	adrp	x2, 12000 <dl_load@@Base+0x113c0>
 c8c:	add	x2, x2, #0x68
 c90:	add	x2, x2, #0x18
 c94:	adrp	x1, 0 <exit@plt-0x670>
 c98:	add	x1, x1, #0xee8
 c9c:	blr	x3
 ca0:	mov	w19, #0x0                   	// #0
 ca4:	cbnz	w0, cd0 <dl_load@@Base+0x90>
 ca8:	adrp	x1, 12000 <dl_load@@Base+0x113c0>
 cac:	add	x0, x1, #0x68
 cb0:	ldr	x1, [x1, #104]
 cb4:	ldr	x3, [x1, #104]
 cb8:	ldr	x2, [x0, #24]
 cbc:	adrp	x1, 0 <exit@plt-0x670>
 cc0:	add	x1, x1, #0xe78
 cc4:	ldr	x0, [x0, #8]
 cc8:	blr	x3
 ccc:	mov	w19, #0x1                   	// #1
 cd0:	bl	a94 <fprintf@plt+0x3c4>
 cd4:	cbnz	w0, cfc <dl_load@@Base+0xbc>
 cd8:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 cdc:	add	x3, x0, #0x68
 ce0:	ldr	x0, [x0, #104]
 ce4:	ldr	x2, [x0, #104]
 ce8:	adrp	x1, 0 <exit@plt-0x670>
 cec:	add	x1, x1, #0xe98
 cf0:	ldr	x0, [x3, #8]
 cf4:	blr	x2
 cf8:	add	w19, w19, #0x1
 cfc:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 d00:	add	x3, x0, #0x68
 d04:	ldr	x0, [x0, #104]
 d08:	ldr	x2, [x0, #88]
 d0c:	adrp	x1, 0 <exit@plt-0x670>
 d10:	add	x1, x1, #0xec8
 d14:	ldr	x0, [x3, #8]
 d18:	blr	x2
 d1c:	cmp	w19, #0x0
 d20:	cset	w0, eq  // eq = none
 d24:	ldr	x19, [sp, #16]
 d28:	ldp	x29, x30, [sp], #32
 d2c:	ret
 d30:	adrp	x19, 11000 <dl_load@@Base+0x103c0>
 d34:	ldr	x19, [x19, #4048]
 d38:	ldr	x3, [x19]
 d3c:	mov	x2, #0x27                  	// #39
 d40:	mov	x1, #0x1                   	// #1
 d44:	adrp	x0, 0 <exit@plt-0x670>
 d48:	add	x0, x0, #0xe18
 d4c:	bl	6b0 <fwrite@plt>
 d50:	adrp	x0, 12000 <dl_load@@Base+0x113c0>
 d54:	ldr	x0, [x0, #104]
 d58:	ldr	w5, [x0, #4]
 d5c:	ldr	w4, [x0]
 d60:	mov	w3, #0x0                   	// #0
 d64:	mov	w2, #0x2                   	// #2
 d68:	adrp	x1, 0 <exit@plt-0x670>
 d6c:	add	x1, x1, #0xe40
 d70:	ldr	x0, [x19]
 d74:	bl	6d0 <fprintf@plt>
 d78:	mov	w0, #0x1                   	// #1
 d7c:	bl	670 <exit@plt>
 d80:	mov	w19, #0x0                   	// #0
 d84:	b	cd0 <dl_load@@Base+0x90>

Disassembly of section .fini:

0000000000000d88 <.fini>:
 d88:	stp	x29, x30, [sp, #-16]!
 d8c:	mov	x29, sp
 d90:	ldp	x29, x30, [sp], #16
 d94:	ret
