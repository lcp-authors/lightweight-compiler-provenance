
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//make_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406750 <.init>:
  406750:	stp	x29, x30, [sp, #-16]!
  406754:	mov	x29, sp
  406758:	bl	407000 <_start@@Base+0x50>
  40675c:	ldp	x29, x30, [sp], #16
  406760:	ret

Disassembly of section .plt:

0000000000406770 <memcpy@plt-0x20>:
  406770:	stp	x16, x30, [sp, #-16]!
  406774:	adrp	x16, 43b000 <_IO_stdin_used@@Base+0x160e0>
  406778:	ldr	x17, [x16, #4088]
  40677c:	add	x16, x16, #0xff8
  406780:	br	x17
  406784:	nop
  406788:	nop
  40678c:	nop

0000000000406790 <memcpy@plt>:
  406790:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406794:	ldr	x17, [x16]
  406798:	add	x16, x16, #0x0
  40679c:	br	x17

00000000004067a0 <memmove@plt>:
  4067a0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4067a4:	ldr	x17, [x16, #8]
  4067a8:	add	x16, x16, #0x8
  4067ac:	br	x17

00000000004067b0 <_exit@plt>:
  4067b0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4067b4:	ldr	x17, [x16, #16]
  4067b8:	add	x16, x16, #0x10
  4067bc:	br	x17

00000000004067c0 <getcwd@plt>:
  4067c0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4067c4:	ldr	x17, [x16, #24]
  4067c8:	add	x16, x16, #0x18
  4067cc:	br	x17

00000000004067d0 <strlen@plt>:
  4067d0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4067d4:	ldr	x17, [x16, #32]
  4067d8:	add	x16, x16, #0x20
  4067dc:	br	x17

00000000004067e0 <fputs@plt>:
  4067e0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4067e4:	ldr	x17, [x16, #40]
  4067e8:	add	x16, x16, #0x28
  4067ec:	br	x17

00000000004067f0 <exit@plt>:
  4067f0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4067f4:	ldr	x17, [x16, #48]
  4067f8:	add	x16, x16, #0x30
  4067fc:	br	x17

0000000000406800 <dup@plt>:
  406800:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406804:	ldr	x17, [x16, #56]
  406808:	add	x16, x16, #0x38
  40680c:	br	x17

0000000000406810 <perror@plt>:
  406810:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406814:	ldr	x17, [x16, #64]
  406818:	add	x16, x16, #0x40
  40681c:	br	x17

0000000000406820 <tmpfile@plt>:
  406820:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406824:	ldr	x17, [x16, #72]
  406828:	add	x16, x16, #0x48
  40682c:	br	x17

0000000000406830 <sigprocmask@plt>:
  406830:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406834:	ldr	x17, [x16, #80]
  406838:	add	x16, x16, #0x50
  40683c:	br	x17

0000000000406840 <remove@plt>:
  406840:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406844:	ldr	x17, [x16, #88]
  406848:	add	x16, x16, #0x58
  40684c:	br	x17

0000000000406850 <ttyname@plt>:
  406850:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406854:	ldr	x17, [x16, #96]
  406858:	add	x16, x16, #0x60
  40685c:	br	x17

0000000000406860 <readlink@plt>:
  406860:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406864:	ldr	x17, [x16, #104]
  406868:	add	x16, x16, #0x68
  40686c:	br	x17

0000000000406870 <sprintf@plt>:
  406870:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406874:	ldr	x17, [x16, #112]
  406878:	add	x16, x16, #0x70
  40687c:	br	x17

0000000000406880 <putc@plt>:
  406880:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406884:	ldr	x17, [x16, #120]
  406888:	add	x16, x16, #0x78
  40688c:	br	x17

0000000000406890 <pipe@plt>:
  406890:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406894:	ldr	x17, [x16, #128]
  406898:	add	x16, x16, #0x80
  40689c:	br	x17

00000000004068a0 <opendir@plt>:
  4068a0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4068a4:	ldr	x17, [x16, #136]
  4068a8:	add	x16, x16, #0x88
  4068ac:	br	x17

00000000004068b0 <getloadavg@plt>:
  4068b0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4068b4:	ldr	x17, [x16, #144]
  4068b8:	add	x16, x16, #0x90
  4068bc:	br	x17

00000000004068c0 <__cxa_atexit@plt>:
  4068c0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4068c4:	ldr	x17, [x16, #152]
  4068c8:	add	x16, x16, #0x98
  4068cc:	br	x17

00000000004068d0 <clock_gettime@plt>:
  4068d0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4068d4:	ldr	x17, [x16, #160]
  4068d8:	add	x16, x16, #0xa0
  4068dc:	br	x17

00000000004068e0 <qsort@plt>:
  4068e0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4068e4:	ldr	x17, [x16, #168]
  4068e8:	add	x16, x16, #0xa8
  4068ec:	br	x17

00000000004068f0 <dlclose@plt>:
  4068f0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4068f4:	ldr	x17, [x16, #176]
  4068f8:	add	x16, x16, #0xb0
  4068fc:	br	x17

0000000000406900 <ctime@plt>:
  406900:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406904:	ldr	x17, [x16, #184]
  406908:	add	x16, x16, #0xb8
  40690c:	br	x17

0000000000406910 <kill@plt>:
  406910:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406914:	ldr	x17, [x16, #192]
  406918:	add	x16, x16, #0xc0
  40691c:	br	x17

0000000000406920 <setvbuf@plt>:
  406920:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406924:	ldr	x17, [x16, #200]
  406928:	add	x16, x16, #0xc8
  40692c:	br	x17

0000000000406930 <lseek@plt>:
  406930:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406934:	ldr	x17, [x16, #208]
  406938:	add	x16, x16, #0xd0
  40693c:	br	x17

0000000000406940 <eaccess@plt>:
  406940:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406944:	ldr	x17, [x16, #216]
  406948:	add	x16, x16, #0xd8
  40694c:	br	x17

0000000000406950 <dlopen@plt>:
  406950:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406954:	ldr	x17, [x16, #224]
  406958:	add	x16, x16, #0xe0
  40695c:	br	x17

0000000000406960 <__ctype_tolower_loc@plt>:
  406960:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406964:	ldr	x17, [x16, #232]
  406968:	add	x16, x16, #0xe8
  40696c:	br	x17

0000000000406970 <stpcpy@plt>:
  406970:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406974:	ldr	x17, [x16, #240]
  406978:	add	x16, x16, #0xf0
  40697c:	br	x17

0000000000406980 <fileno@plt>:
  406980:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406984:	ldr	x17, [x16, #248]
  406988:	add	x16, x16, #0xf8
  40698c:	br	x17

0000000000406990 <localtime@plt>:
  406990:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406994:	ldr	x17, [x16, #256]
  406998:	add	x16, x16, #0x100
  40699c:	br	x17

00000000004069a0 <posix_spawn_file_actions_adddup2@plt>:
  4069a0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4069a4:	ldr	x17, [x16, #264]
  4069a8:	add	x16, x16, #0x108
  4069ac:	br	x17

00000000004069b0 <signal@plt>:
  4069b0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4069b4:	ldr	x17, [x16, #272]
  4069b8:	add	x16, x16, #0x110
  4069bc:	br	x17

00000000004069c0 <fclose@plt>:
  4069c0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4069c4:	ldr	x17, [x16, #280]
  4069c8:	add	x16, x16, #0x118
  4069cc:	br	x17

00000000004069d0 <atoi@plt>:
  4069d0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4069d4:	ldr	x17, [x16, #288]
  4069d8:	add	x16, x16, #0x120
  4069dc:	br	x17

00000000004069e0 <getpid@plt>:
  4069e0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4069e4:	ldr	x17, [x16, #296]
  4069e8:	add	x16, x16, #0x128
  4069ec:	br	x17

00000000004069f0 <fopen@plt>:
  4069f0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  4069f4:	ldr	x17, [x16, #304]
  4069f8:	add	x16, x16, #0x130
  4069fc:	br	x17

0000000000406a00 <time@plt>:
  406a00:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a04:	ldr	x17, [x16, #312]
  406a08:	add	x16, x16, #0x138
  406a0c:	br	x17

0000000000406a10 <malloc@plt>:
  406a10:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a14:	ldr	x17, [x16, #320]
  406a18:	add	x16, x16, #0x140
  406a1c:	br	x17

0000000000406a20 <dlerror@plt>:
  406a20:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a24:	ldr	x17, [x16, #328]
  406a28:	add	x16, x16, #0x148
  406a2c:	br	x17

0000000000406a30 <dlsym@plt>:
  406a30:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a34:	ldr	x17, [x16, #336]
  406a38:	add	x16, x16, #0x150
  406a3c:	br	x17

0000000000406a40 <open@plt>:
  406a40:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a44:	ldr	x17, [x16, #344]
  406a48:	add	x16, x16, #0x158
  406a4c:	br	x17

0000000000406a50 <sigemptyset@plt>:
  406a50:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a54:	ldr	x17, [x16, #352]
  406a58:	add	x16, x16, #0x160
  406a5c:	br	x17

0000000000406a60 <posix_spawnattr_destroy@plt>:
  406a60:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a64:	ldr	x17, [x16, #360]
  406a68:	add	x16, x16, #0x168
  406a6c:	br	x17

0000000000406a70 <strncmp@plt>:
  406a70:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a74:	ldr	x17, [x16, #368]
  406a78:	add	x16, x16, #0x170
  406a7c:	br	x17

0000000000406a80 <bindtextdomain@plt>:
  406a80:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a84:	ldr	x17, [x16, #376]
  406a88:	add	x16, x16, #0x178
  406a8c:	br	x17

0000000000406a90 <__libc_start_main@plt>:
  406a90:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406a94:	ldr	x17, [x16, #384]
  406a98:	add	x16, x16, #0x180
  406a9c:	br	x17

0000000000406aa0 <strcat@plt>:
  406aa0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406aa4:	ldr	x17, [x16, #392]
  406aa8:	add	x16, x16, #0x188
  406aac:	br	x17

0000000000406ab0 <memset@plt>:
  406ab0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ab4:	ldr	x17, [x16, #400]
  406ab8:	add	x16, x16, #0x190
  406abc:	br	x17

0000000000406ac0 <fdopen@plt>:
  406ac0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ac4:	ldr	x17, [x16, #408]
  406ac8:	add	x16, x16, #0x198
  406acc:	br	x17

0000000000406ad0 <strpbrk@plt>:
  406ad0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ad4:	ldr	x17, [x16, #416]
  406ad8:	add	x16, x16, #0x1a0
  406adc:	br	x17

0000000000406ae0 <gettimeofday@plt>:
  406ae0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ae4:	ldr	x17, [x16, #424]
  406ae8:	add	x16, x16, #0x1a8
  406aec:	br	x17

0000000000406af0 <getpwnam@plt>:
  406af0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406af4:	ldr	x17, [x16, #432]
  406af8:	add	x16, x16, #0x1b0
  406afc:	br	x17

0000000000406b00 <atof@plt>:
  406b00:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b04:	ldr	x17, [x16, #440]
  406b08:	add	x16, x16, #0x1b8
  406b0c:	br	x17

0000000000406b10 <pselect@plt>:
  406b10:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b14:	ldr	x17, [x16, #448]
  406b18:	add	x16, x16, #0x1c0
  406b1c:	br	x17

0000000000406b20 <calloc@plt>:
  406b20:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b24:	ldr	x17, [x16, #456]
  406b28:	add	x16, x16, #0x1c8
  406b2c:	br	x17

0000000000406b30 <posix_spawn_file_actions_destroy@plt>:
  406b30:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b34:	ldr	x17, [x16, #464]
  406b38:	add	x16, x16, #0x1d0
  406b3c:	br	x17

0000000000406b40 <readdir@plt>:
  406b40:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b44:	ldr	x17, [x16, #472]
  406b48:	add	x16, x16, #0x1d8
  406b4c:	br	x17

0000000000406b50 <realloc@plt>:
  406b50:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b54:	ldr	x17, [x16, #480]
  406b58:	add	x16, x16, #0x1e0
  406b5c:	br	x17

0000000000406b60 <putenv@plt>:
  406b60:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b64:	ldr	x17, [x16, #488]
  406b68:	add	x16, x16, #0x1e8
  406b6c:	br	x17

0000000000406b70 <strdup@plt>:
  406b70:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b74:	ldr	x17, [x16, #496]
  406b78:	add	x16, x16, #0x1f0
  406b7c:	br	x17

0000000000406b80 <closedir@plt>:
  406b80:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b84:	ldr	x17, [x16, #504]
  406b88:	add	x16, x16, #0x1f8
  406b8c:	br	x17

0000000000406b90 <strerror@plt>:
  406b90:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406b94:	ldr	x17, [x16, #512]
  406b98:	add	x16, x16, #0x200
  406b9c:	br	x17

0000000000406ba0 <close@plt>:
  406ba0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ba4:	ldr	x17, [x16, #520]
  406ba8:	add	x16, x16, #0x208
  406bac:	br	x17

0000000000406bb0 <sigaction@plt>:
  406bb0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406bb4:	ldr	x17, [x16, #528]
  406bb8:	add	x16, x16, #0x210
  406bbc:	br	x17

0000000000406bc0 <strrchr@plt>:
  406bc0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406bc4:	ldr	x17, [x16, #536]
  406bc8:	add	x16, x16, #0x218
  406bcc:	br	x17

0000000000406bd0 <atol@plt>:
  406bd0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406bd4:	ldr	x17, [x16, #544]
  406bd8:	add	x16, x16, #0x220
  406bdc:	br	x17

0000000000406be0 <__gmon_start__@plt>:
  406be0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406be4:	ldr	x17, [x16, #552]
  406be8:	add	x16, x16, #0x228
  406bec:	br	x17

0000000000406bf0 <write@plt>:
  406bf0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406bf4:	ldr	x17, [x16, #560]
  406bf8:	add	x16, x16, #0x230
  406bfc:	br	x17

0000000000406c00 <posix_spawnattr_setflags@plt>:
  406c00:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c04:	ldr	x17, [x16, #568]
  406c08:	add	x16, x16, #0x238
  406c0c:	br	x17

0000000000406c10 <abort@plt>:
  406c10:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c14:	ldr	x17, [x16, #576]
  406c18:	add	x16, x16, #0x240
  406c1c:	br	x17

0000000000406c20 <posix_spawnattr_setsigmask@plt>:
  406c20:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c24:	ldr	x17, [x16, #584]
  406c28:	add	x16, x16, #0x248
  406c2c:	br	x17

0000000000406c30 <feof@plt>:
  406c30:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c34:	ldr	x17, [x16, #592]
  406c38:	add	x16, x16, #0x250
  406c3c:	br	x17

0000000000406c40 <puts@plt>:
  406c40:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c44:	ldr	x17, [x16, #600]
  406c48:	add	x16, x16, #0x258
  406c4c:	br	x17

0000000000406c50 <posix_spawn_file_actions_init@plt>:
  406c50:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c54:	ldr	x17, [x16, #608]
  406c58:	add	x16, x16, #0x260
  406c5c:	br	x17

0000000000406c60 <fread_unlocked@plt>:
  406c60:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c64:	ldr	x17, [x16, #616]
  406c68:	add	x16, x16, #0x268
  406c6c:	br	x17

0000000000406c70 <memcmp@plt>:
  406c70:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c74:	ldr	x17, [x16, #624]
  406c78:	add	x16, x16, #0x270
  406c7c:	br	x17

0000000000406c80 <textdomain@plt>:
  406c80:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c84:	ldr	x17, [x16, #632]
  406c88:	add	x16, x16, #0x278
  406c8c:	br	x17

0000000000406c90 <getopt_long@plt>:
  406c90:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406c94:	ldr	x17, [x16, #640]
  406c98:	add	x16, x16, #0x280
  406c9c:	br	x17

0000000000406ca0 <execvp@plt>:
  406ca0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ca4:	ldr	x17, [x16, #648]
  406ca8:	add	x16, x16, #0x288
  406cac:	br	x17

0000000000406cb0 <strcmp@plt>:
  406cb0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406cb4:	ldr	x17, [x16, #656]
  406cb8:	add	x16, x16, #0x290
  406cbc:	br	x17

0000000000406cc0 <__ctype_b_loc@plt>:
  406cc0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406cc4:	ldr	x17, [x16, #664]
  406cc8:	add	x16, x16, #0x298
  406ccc:	br	x17

0000000000406cd0 <fread@plt>:
  406cd0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406cd4:	ldr	x17, [x16, #672]
  406cd8:	add	x16, x16, #0x2a0
  406cdc:	br	x17

0000000000406ce0 <chdir@plt>:
  406ce0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ce4:	ldr	x17, [x16, #680]
  406ce8:	add	x16, x16, #0x2a8
  406cec:	br	x17

0000000000406cf0 <free@plt>:
  406cf0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406cf4:	ldr	x17, [x16, #688]
  406cf8:	add	x16, x16, #0x2b0
  406cfc:	br	x17

0000000000406d00 <strndup@plt>:
  406d00:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d04:	ldr	x17, [x16, #696]
  406d08:	add	x16, x16, #0x2b8
  406d0c:	br	x17

0000000000406d10 <strchr@plt>:
  406d10:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d14:	ldr	x17, [x16, #704]
  406d18:	add	x16, x16, #0x2c0
  406d1c:	br	x17

0000000000406d20 <globfree@plt>:
  406d20:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d24:	ldr	x17, [x16, #712]
  406d28:	add	x16, x16, #0x2c8
  406d2c:	br	x17

0000000000406d30 <memrchr@plt>:
  406d30:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d34:	ldr	x17, [x16, #720]
  406d38:	add	x16, x16, #0x2d0
  406d3c:	br	x17

0000000000406d40 <fwrite@plt>:
  406d40:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d44:	ldr	x17, [x16, #728]
  406d48:	add	x16, x16, #0x2d8
  406d4c:	br	x17

0000000000406d50 <fnmatch@plt>:
  406d50:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d54:	ldr	x17, [x16, #736]
  406d58:	add	x16, x16, #0x2e0
  406d5c:	br	x17

0000000000406d60 <fcntl@plt>:
  406d60:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d64:	ldr	x17, [x16, #744]
  406d68:	add	x16, x16, #0x2e8
  406d6c:	br	x17

0000000000406d70 <wait@plt>:
  406d70:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d74:	ldr	x17, [x16, #752]
  406d78:	add	x16, x16, #0x2f0
  406d7c:	br	x17

0000000000406d80 <fflush@plt>:
  406d80:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d84:	ldr	x17, [x16, #760]
  406d88:	add	x16, x16, #0x2f8
  406d8c:	br	x17

0000000000406d90 <strcpy@plt>:
  406d90:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406d94:	ldr	x17, [x16, #768]
  406d98:	add	x16, x16, #0x300
  406d9c:	br	x17

0000000000406da0 <posix_spawn@plt>:
  406da0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406da4:	ldr	x17, [x16, #776]
  406da8:	add	x16, x16, #0x308
  406dac:	br	x17

0000000000406db0 <vsprintf@plt>:
  406db0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406db4:	ldr	x17, [x16, #784]
  406db8:	add	x16, x16, #0x310
  406dbc:	br	x17

0000000000406dc0 <__lxstat@plt>:
  406dc0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406dc4:	ldr	x17, [x16, #792]
  406dc8:	add	x16, x16, #0x318
  406dcc:	br	x17

0000000000406dd0 <posix_spawnattr_init@plt>:
  406dd0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406dd4:	ldr	x17, [x16, #800]
  406dd8:	add	x16, x16, #0x320
  406ddc:	br	x17

0000000000406de0 <read@plt>:
  406de0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406de4:	ldr	x17, [x16, #808]
  406de8:	add	x16, x16, #0x328
  406dec:	br	x17

0000000000406df0 <memchr@plt>:
  406df0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406df4:	ldr	x17, [x16, #816]
  406df8:	add	x16, x16, #0x330
  406dfc:	br	x17

0000000000406e00 <mkstemp@plt>:
  406e00:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e04:	ldr	x17, [x16, #824]
  406e08:	add	x16, x16, #0x338
  406e0c:	br	x17

0000000000406e10 <isatty@plt>:
  406e10:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e14:	ldr	x17, [x16, #832]
  406e18:	add	x16, x16, #0x340
  406e1c:	br	x17

0000000000406e20 <fputc_unlocked@plt>:
  406e20:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e24:	ldr	x17, [x16, #840]
  406e28:	add	x16, x16, #0x348
  406e2c:	br	x17

0000000000406e30 <__fxstat@plt>:
  406e30:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e34:	ldr	x17, [x16, #848]
  406e38:	add	x16, x16, #0x350
  406e3c:	br	x17

0000000000406e40 <strstr@plt>:
  406e40:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e44:	ldr	x17, [x16, #856]
  406e48:	add	x16, x16, #0x358
  406e4c:	br	x17

0000000000406e50 <dcgettext@plt>:
  406e50:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e54:	ldr	x17, [x16, #864]
  406e58:	add	x16, x16, #0x360
  406e5c:	br	x17

0000000000406e60 <realpath@plt>:
  406e60:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e64:	ldr	x17, [x16, #872]
  406e68:	add	x16, x16, #0x368
  406e6c:	br	x17

0000000000406e70 <__isoc99_sscanf@plt>:
  406e70:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e74:	ldr	x17, [x16, #880]
  406e78:	add	x16, x16, #0x370
  406e7c:	br	x17

0000000000406e80 <fputs_unlocked@plt>:
  406e80:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e84:	ldr	x17, [x16, #888]
  406e88:	add	x16, x16, #0x378
  406e8c:	br	x17

0000000000406e90 <glob@plt>:
  406e90:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406e94:	ldr	x17, [x16, #896]
  406e98:	add	x16, x16, #0x380
  406e9c:	br	x17

0000000000406ea0 <ftruncate@plt>:
  406ea0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ea4:	ldr	x17, [x16, #904]
  406ea8:	add	x16, x16, #0x388
  406eac:	br	x17

0000000000406eb0 <strncpy@plt>:
  406eb0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406eb4:	ldr	x17, [x16, #912]
  406eb8:	add	x16, x16, #0x390
  406ebc:	br	x17

0000000000406ec0 <strsignal@plt>:
  406ec0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ec4:	ldr	x17, [x16, #920]
  406ec8:	add	x16, x16, #0x398
  406ecc:	br	x17

0000000000406ed0 <sigaddset@plt>:
  406ed0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ed4:	ldr	x17, [x16, #928]
  406ed8:	add	x16, x16, #0x3a0
  406edc:	br	x17

0000000000406ee0 <umask@plt>:
  406ee0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ee4:	ldr	x17, [x16, #936]
  406ee8:	add	x16, x16, #0x3a8
  406eec:	br	x17

0000000000406ef0 <printf@plt>:
  406ef0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406ef4:	ldr	x17, [x16, #944]
  406ef8:	add	x16, x16, #0x3b0
  406efc:	br	x17

0000000000406f00 <__errno_location@plt>:
  406f00:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f04:	ldr	x17, [x16, #952]
  406f08:	add	x16, x16, #0x3b8
  406f0c:	br	x17

0000000000406f10 <getenv@plt>:
  406f10:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f14:	ldr	x17, [x16, #960]
  406f18:	add	x16, x16, #0x3c0
  406f1c:	br	x17

0000000000406f20 <putchar@plt>:
  406f20:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f24:	ldr	x17, [x16, #968]
  406f28:	add	x16, x16, #0x3c8
  406f2c:	br	x17

0000000000406f30 <__xstat@plt>:
  406f30:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f34:	ldr	x17, [x16, #976]
  406f38:	add	x16, x16, #0x3d0
  406f3c:	br	x17

0000000000406f40 <waitpid@plt>:
  406f40:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f44:	ldr	x17, [x16, #984]
  406f48:	add	x16, x16, #0x3d8
  406f4c:	br	x17

0000000000406f50 <unlink@plt>:
  406f50:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f54:	ldr	x17, [x16, #992]
  406f58:	add	x16, x16, #0x3e0
  406f5c:	br	x17

0000000000406f60 <getlogin@plt>:
  406f60:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f64:	ldr	x17, [x16, #1000]
  406f68:	add	x16, x16, #0x3e8
  406f6c:	br	x17

0000000000406f70 <fprintf@plt>:
  406f70:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f74:	ldr	x17, [x16, #1008]
  406f78:	add	x16, x16, #0x3f0
  406f7c:	br	x17

0000000000406f80 <fgets@plt>:
  406f80:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f84:	ldr	x17, [x16, #1016]
  406f88:	add	x16, x16, #0x3f8
  406f8c:	br	x17

0000000000406f90 <setlocale@plt>:
  406f90:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406f94:	ldr	x17, [x16, #1024]
  406f98:	add	x16, x16, #0x400
  406f9c:	br	x17

0000000000406fa0 <ferror@plt>:
  406fa0:	adrp	x16, 43c000 <memcpy@GLIBC_2.17>
  406fa4:	ldr	x17, [x16, #1032]
  406fa8:	add	x16, x16, #0x408
  406fac:	br	x17

Disassembly of section .text:

0000000000406fb0 <_start@@Base>:
  406fb0:	mov	x29, #0x0                   	// #0
  406fb4:	mov	x30, #0x0                   	// #0
  406fb8:	mov	x5, x0
  406fbc:	ldr	x1, [sp]
  406fc0:	add	x2, sp, #0x8
  406fc4:	mov	x6, sp
  406fc8:	movz	x0, #0x0, lsl #48
  406fcc:	movk	x0, #0x0, lsl #32
  406fd0:	movk	x0, #0x41, lsl #16
  406fd4:	movk	x0, #0x4aec
  406fd8:	movz	x3, #0x0, lsl #48
  406fdc:	movk	x3, #0x0, lsl #32
  406fe0:	movk	x3, #0x42, lsl #16
  406fe4:	movk	x3, #0x4e48
  406fe8:	movz	x4, #0x0, lsl #48
  406fec:	movk	x4, #0x0, lsl #32
  406ff0:	movk	x4, #0x42, lsl #16
  406ff4:	movk	x4, #0x4ec8
  406ff8:	bl	406a90 <__libc_start_main@plt>
  406ffc:	bl	406c10 <abort@plt>
  407000:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x160e0>
  407004:	ldr	x0, [x0, #4064]
  407008:	cbz	x0, 407010 <_start@@Base+0x60>
  40700c:	b	406be0 <__gmon_start__@plt>
  407010:	ret
  407014:	nop
  407018:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40701c:	add	x0, x0, #0x9b8
  407020:	adrp	x1, 43c000 <memcpy@GLIBC_2.17>
  407024:	add	x1, x1, #0x9b8
  407028:	cmp	x1, x0
  40702c:	b.eq	407044 <_start@@Base+0x94>  // b.none
  407030:	adrp	x1, 424000 <jobserver_setup@@Base+0x5c>
  407034:	ldr	x1, [x1, #3880]
  407038:	cbz	x1, 407044 <_start@@Base+0x94>
  40703c:	mov	x16, x1
  407040:	br	x16
  407044:	ret
  407048:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40704c:	add	x0, x0, #0x9b8
  407050:	adrp	x1, 43c000 <memcpy@GLIBC_2.17>
  407054:	add	x1, x1, #0x9b8
  407058:	sub	x1, x1, x0
  40705c:	lsr	x2, x1, #63
  407060:	add	x1, x2, x1, asr #3
  407064:	cmp	xzr, x1, asr #1
  407068:	asr	x1, x1, #1
  40706c:	b.eq	407084 <_start@@Base+0xd4>  // b.none
  407070:	adrp	x2, 424000 <jobserver_setup@@Base+0x5c>
  407074:	ldr	x2, [x2, #3888]
  407078:	cbz	x2, 407084 <_start@@Base+0xd4>
  40707c:	mov	x16, x2
  407080:	br	x16
  407084:	ret
  407088:	stp	x29, x30, [sp, #-32]!
  40708c:	mov	x29, sp
  407090:	str	x19, [sp, #16]
  407094:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  407098:	ldrb	w0, [x19, #2540]
  40709c:	cbnz	w0, 4070ac <_start@@Base+0xfc>
  4070a0:	bl	407018 <_start@@Base+0x68>
  4070a4:	mov	w0, #0x1                   	// #1
  4070a8:	strb	w0, [x19, #2540]
  4070ac:	ldr	x19, [sp, #16]
  4070b0:	ldp	x29, x30, [sp], #32
  4070b4:	ret
  4070b8:	b	407048 <_start@@Base+0x98>

00000000004070bc <ar_name@@Base>:
  4070bc:	stp	x29, x30, [sp, #-32]!
  4070c0:	mov	w1, #0x28                  	// #40
  4070c4:	stp	x20, x19, [sp, #16]
  4070c8:	mov	x29, sp
  4070cc:	mov	x19, x0
  4070d0:	bl	406d10 <strchr@plt>
  4070d4:	mov	x20, x0
  4070d8:	mov	w0, wzr
  4070dc:	cbz	x20, 40712c <ar_name@@Base+0x70>
  4070e0:	cmp	x20, x19
  4070e4:	b.eq	40712c <ar_name@@Base+0x70>  // b.none
  4070e8:	mov	x0, x20
  4070ec:	bl	4067d0 <strlen@plt>
  4070f0:	sub	x9, x0, #0x1
  4070f4:	add	x8, x20, x9
  4070f8:	ldrb	w10, [x8]
  4070fc:	mov	w0, wzr
  407100:	cmp	w10, #0x29
  407104:	b.ne	40712c <ar_name@@Base+0x70>  // b.any
  407108:	cmp	x9, #0x1
  40710c:	b.eq	40712c <ar_name@@Base+0x70>  // b.none
  407110:	ldrb	w9, [x20, #1]
  407114:	cmp	w9, #0x28
  407118:	b.ne	407128 <ar_name@@Base+0x6c>  // b.any
  40711c:	ldurb	w8, [x8, #-1]
  407120:	cmp	w8, #0x29
  407124:	b.eq	407138 <ar_name@@Base+0x7c>  // b.none
  407128:	mov	w0, #0x1                   	// #1
  40712c:	ldp	x20, x19, [sp, #16]
  407130:	ldp	x29, x30, [sp], #32
  407134:	ret
  407138:	mov	x0, x19
  40713c:	bl	4067d0 <strlen@plt>
  407140:	adrp	x1, 424000 <jobserver_setup@@Base+0x5c>
  407144:	mov	x20, x0
  407148:	add	x1, x1, #0xf5c
  40714c:	mov	w2, #0x5                   	// #5
  407150:	mov	x0, xzr
  407154:	bl	406e50 <dcgettext@plt>
  407158:	mov	x2, x0
  40715c:	mov	x0, xzr
  407160:	mov	x1, x20
  407164:	mov	x3, x19
  407168:	bl	4190fc <fatal@@Base>

000000000040716c <ar_parse_name@@Base>:
  40716c:	stp	x29, x30, [sp, #-48]!
  407170:	str	x21, [sp, #16]
  407174:	stp	x20, x19, [sp, #32]
  407178:	mov	x29, sp
  40717c:	mov	x19, x2
  407180:	mov	x20, x1
  407184:	bl	4180bc <xstrdup@@Base>
  407188:	mov	w1, #0x28                  	// #40
  40718c:	str	x0, [x20]
  407190:	bl	406d10 <strchr@plt>
  407194:	add	x21, x0, #0x1
  407198:	mov	x20, x0
  40719c:	strb	wzr, [x0]
  4071a0:	mov	x0, x21
  4071a4:	bl	4067d0 <strlen@plt>
  4071a8:	strb	wzr, [x20, x0]
  4071ac:	str	x21, [x19]
  4071b0:	ldp	x20, x19, [sp, #32]
  4071b4:	ldr	x21, [sp, #16]
  4071b8:	ldp	x29, x30, [sp], #48
  4071bc:	ret

00000000004071c0 <ar_member_date@@Base>:
  4071c0:	sub	sp, sp, #0x30
  4071c4:	add	x1, sp, #0x8
  4071c8:	mov	x2, sp
  4071cc:	stp	x29, x30, [sp, #16]
  4071d0:	stp	x20, x19, [sp, #32]
  4071d4:	add	x29, sp, #0x10
  4071d8:	bl	40716c <ar_parse_name@@Base>
  4071dc:	ldr	x19, [sp, #8]
  4071e0:	mov	x0, x19
  4071e4:	bl	40a798 <lookup_file@@Base>
  4071e8:	cbnz	x0, 407204 <ar_member_date@@Base+0x44>
  4071ec:	mov	x0, x19
  4071f0:	bl	4093a0 <file_exists_p@@Base>
  4071f4:	cbz	w0, 407248 <ar_member_date@@Base+0x88>
  4071f8:	mov	x0, x19
  4071fc:	bl	420f28 <strcache_add@@Base>
  407200:	bl	40a830 <enter_file@@Base>
  407204:	cbz	x0, 407210 <ar_member_date@@Base+0x50>
  407208:	mov	w1, wzr
  40720c:	bl	41dec8 <f_mtime@@Base>
  407210:	ldr	x2, [sp]
  407214:	adrp	x1, 407000 <_start@@Base+0x50>
  407218:	add	x1, x1, #0x254
  40721c:	mov	x0, x19
  407220:	bl	4075dc <ar_scan@@Base>
  407224:	mov	x20, x0
  407228:	mov	x0, x19
  40722c:	bl	406cf0 <free@plt>
  407230:	cmp	x20, #0x1
  407234:	csinv	x0, x20, xzr, ge  // ge = tcont
  407238:	ldp	x20, x19, [sp, #32]
  40723c:	ldp	x29, x30, [sp, #16]
  407240:	add	sp, sp, #0x30
  407244:	ret
  407248:	mov	x0, xzr
  40724c:	cbnz	x0, 407208 <ar_member_date@@Base+0x48>
  407250:	b	407210 <ar_member_date@@Base+0x50>
  407254:	stp	x29, x30, [sp, #-32]!
  407258:	mov	x29, sp
  40725c:	ldr	x0, [x29, #48]
  407260:	str	x19, [sp, #16]
  407264:	mov	x19, x6
  407268:	bl	407abc <ar_name_equal@@Base>
  40726c:	cmp	w0, #0x0
  407270:	csel	x0, xzr, x19, eq  // eq = none
  407274:	ldr	x19, [sp, #16]
  407278:	ldp	x29, x30, [sp], #32
  40727c:	ret

0000000000407280 <ar_touch@@Base>:
  407280:	sub	sp, sp, #0x40
  407284:	add	x1, sp, #0x8
  407288:	mov	x2, sp
  40728c:	stp	x29, x30, [sp, #16]
  407290:	stp	x22, x21, [sp, #32]
  407294:	stp	x20, x19, [sp, #48]
  407298:	add	x29, sp, #0x10
  40729c:	mov	x20, x0
  4072a0:	bl	40716c <ar_parse_name@@Base>
  4072a4:	ldr	x19, [sp, #8]
  4072a8:	mov	x0, x19
  4072ac:	bl	420f28 <strcache_add@@Base>
  4072b0:	bl	40a830 <enter_file@@Base>
  4072b4:	mov	w1, wzr
  4072b8:	bl	41dec8 <f_mtime@@Base>
  4072bc:	ldr	x21, [sp]
  4072c0:	mov	x0, x19
  4072c4:	mov	x1, x21
  4072c8:	bl	407b1c <ar_member_touch@@Base>
  4072cc:	add	w8, w0, #0x3
  4072d0:	cmp	w8, #0x4
  4072d4:	b.hi	407308 <ar_touch@@Base+0x88>  // b.pmore
  4072d8:	adrp	x9, 424000 <jobserver_setup@@Base+0x5c>
  4072dc:	add	x9, x9, #0xf38
  4072e0:	adr	x10, 4072f4 <ar_touch@@Base+0x74>
  4072e4:	ldrb	w11, [x9, x8]
  4072e8:	add	x10, x10, x11, lsl #2
  4072ec:	mov	w22, w0
  4072f0:	br	x10
  4072f4:	adrp	x0, 424000 <jobserver_setup@@Base+0x5c>
  4072f8:	add	x0, x0, #0xfcb
  4072fc:	mov	x1, x19
  407300:	bl	41928c <perror_with_name@@Base>
  407304:	b	4073d0 <ar_touch@@Base+0x150>
  407308:	mov	x0, x20
  40730c:	bl	4067d0 <strlen@plt>
  407310:	adrp	x1, 424000 <jobserver_setup@@Base+0x5c>
  407314:	mov	x21, x0
  407318:	add	x1, x1, #0xffd
  40731c:	mov	w2, #0x5                   	// #5
  407320:	mov	x0, xzr
  407324:	bl	406e50 <dcgettext@plt>
  407328:	mov	x2, x0
  40732c:	mov	x0, xzr
  407330:	mov	x1, x21
  407334:	mov	x3, x20
  407338:	b	407384 <ar_touch@@Base+0x104>
  40733c:	mov	x0, x19
  407340:	bl	4067d0 <strlen@plt>
  407344:	adrp	x1, 424000 <jobserver_setup@@Base+0x5c>
  407348:	mov	x20, x0
  40734c:	add	x1, x1, #0xfa8
  407350:	b	407368 <ar_touch@@Base+0xe8>
  407354:	mov	x0, x19
  407358:	bl	4067d0 <strlen@plt>
  40735c:	adrp	x1, 424000 <jobserver_setup@@Base+0x5c>
  407360:	mov	x20, x0
  407364:	add	x1, x1, #0xf85
  407368:	mov	w2, #0x5                   	// #5
  40736c:	mov	x0, xzr
  407370:	bl	406e50 <dcgettext@plt>
  407374:	mov	x2, x0
  407378:	mov	x0, xzr
  40737c:	mov	x1, x20
  407380:	mov	x3, x19
  407384:	bl	418f84 <error@@Base>
  407388:	b	4073d0 <ar_touch@@Base+0x150>
  40738c:	mov	x0, x21
  407390:	bl	4067d0 <strlen@plt>
  407394:	mov	x20, x0
  407398:	mov	x0, x19
  40739c:	bl	4067d0 <strlen@plt>
  4073a0:	adrp	x1, 424000 <jobserver_setup@@Base+0x5c>
  4073a4:	add	x20, x0, x20
  4073a8:	add	x1, x1, #0xfd3
  4073ac:	mov	w2, #0x5                   	// #5
  4073b0:	mov	x0, xzr
  4073b4:	bl	406e50 <dcgettext@plt>
  4073b8:	mov	x2, x0
  4073bc:	mov	x0, xzr
  4073c0:	mov	x1, x20
  4073c4:	mov	x3, x21
  4073c8:	mov	x4, x19
  4073cc:	bl	418f84 <error@@Base>
  4073d0:	mov	w22, #0x1                   	// #1
  4073d4:	mov	x0, x19
  4073d8:	bl	406cf0 <free@plt>
  4073dc:	mov	w0, w22
  4073e0:	ldp	x20, x19, [sp, #48]
  4073e4:	ldp	x22, x21, [sp, #32]
  4073e8:	ldp	x29, x30, [sp, #16]
  4073ec:	add	sp, sp, #0x40
  4073f0:	ret

00000000004073f4 <ar_glob@@Base>:
  4073f4:	stp	x29, x30, [sp, #-48]!
  4073f8:	str	x21, [sp, #16]
  4073fc:	stp	x20, x19, [sp, #32]
  407400:	mov	x29, sp
  407404:	sub	sp, sp, #0x30
  407408:	mov	x19, x0
  40740c:	mov	x0, x1
  407410:	mov	x20, x2
  407414:	mov	x21, x1
  407418:	bl	4074d8 <ar_glob@@Base+0xe4>
  40741c:	cbz	w0, 4074c0 <ar_glob@@Base+0xcc>
  407420:	adrp	x1, 407000 <_start@@Base+0x50>
  407424:	add	x1, x1, #0x554
  407428:	sub	x2, x29, #0x28
  40742c:	mov	x0, x19
  407430:	stp	x19, x21, [x29, #-40]
  407434:	stp	x20, xzr, [x29, #-24]
  407438:	stur	wzr, [x29, #-8]
  40743c:	bl	4075dc <ar_scan@@Base>
  407440:	ldur	x8, [x29, #-16]
  407444:	cbz	x8, 4074c0 <ar_glob@@Base+0xcc>
  407448:	ldur	w9, [x29, #-8]
  40744c:	mov	x10, sp
  407450:	lsl	x9, x9, #3
  407454:	add	x9, x9, #0xf
  407458:	and	x9, x9, #0xffffffff0
  40745c:	sub	x19, x10, x9
  407460:	mov	sp, x19
  407464:	mov	w9, wzr
  407468:	ldr	x10, [x8, #8]
  40746c:	str	x10, [x19, w9, uxtw #3]
  407470:	ldr	x8, [x8]
  407474:	add	w10, w9, #0x1
  407478:	mov	w9, w10
  40747c:	cbnz	x8, 407468 <ar_glob@@Base+0x74>
  407480:	adrp	x3, 417000 <die@@Base+0x318>
  407484:	mov	w1, w10
  407488:	add	x3, x3, #0xcdc
  40748c:	mov	w2, #0x8                   	// #8
  407490:	mov	x0, x19
  407494:	bl	4068e0 <qsort@plt>
  407498:	ldur	x0, [x29, #-16]
  40749c:	cbz	x0, 4074c4 <ar_glob@@Base+0xd0>
  4074a0:	mov	w9, wzr
  4074a4:	mov	x8, x0
  4074a8:	ldr	x10, [x19, w9, uxtw #3]
  4074ac:	add	w9, w9, #0x1
  4074b0:	str	x10, [x8, #8]
  4074b4:	ldr	x8, [x8]
  4074b8:	cbnz	x8, 4074a8 <ar_glob@@Base+0xb4>
  4074bc:	b	4074c4 <ar_glob@@Base+0xd0>
  4074c0:	mov	x0, xzr
  4074c4:	mov	sp, x29
  4074c8:	ldp	x20, x19, [sp, #32]
  4074cc:	ldr	x21, [sp, #16]
  4074d0:	ldp	x29, x30, [sp], #48
  4074d4:	ret
  4074d8:	adrp	x9, 424000 <jobserver_setup@@Base+0x5c>
  4074dc:	mov	w10, wzr
  4074e0:	add	x9, x9, #0xf3d
  4074e4:	mov	w8, #0x1                   	// #1
  4074e8:	b	4074f4 <ar_glob@@Base+0x100>
  4074ec:	cbnz	w10, 407540 <ar_glob@@Base+0x14c>
  4074f0:	add	x0, x0, #0x1
  4074f4:	ldrb	w11, [x0]
  4074f8:	sub	w12, w11, #0x3f
  4074fc:	cmp	w12, #0x1e
  407500:	b.hi	40752c <ar_glob@@Base+0x138>  // b.pmore
  407504:	adr	x11, 4074ec <ar_glob@@Base+0xf8>
  407508:	ldrb	w13, [x9, x12]
  40750c:	add	x11, x11, x13, lsl #2
  407510:	br	x11
  407514:	mov	w10, #0x1                   	// #1
  407518:	add	x0, x0, #0x1
  40751c:	b	4074f4 <ar_glob@@Base+0x100>
  407520:	add	x0, x0, #0x1
  407524:	add	x0, x0, #0x1
  407528:	b	4074f4 <ar_glob@@Base+0x100>
  40752c:	cbz	w11, 407548 <ar_glob@@Base+0x154>
  407530:	cmp	w11, #0x2a
  407534:	b.ne	4074f0 <ar_glob@@Base+0xfc>  // b.any
  407538:	mov	w0, w8
  40753c:	ret
  407540:	mov	w0, #0x1                   	// #1
  407544:	ret
  407548:	mov	w8, wzr
  40754c:	mov	w0, w8
  407550:	ret
  407554:	stp	x29, x30, [sp, #-48]!
  407558:	mov	x29, sp
  40755c:	str	x21, [sp, #16]
  407560:	ldr	x21, [x29, #64]
  407564:	stp	x20, x19, [sp, #32]
  407568:	mov	w2, #0x5                   	// #5
  40756c:	mov	x19, x1
  407570:	ldr	x0, [x21, #8]
  407574:	bl	406d50 <fnmatch@plt>
  407578:	cbnz	w0, 4075c8 <ar_glob@@Base+0x1d4>
  40757c:	ldr	x0, [x21, #16]
  407580:	bl	418094 <xcalloc@@Base>
  407584:	ldr	x1, [x21]
  407588:	adrp	x2, 425000 <_IO_stdin_used@@Base+0xe0>
  40758c:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x50e0>
  407590:	mov	x20, x0
  407594:	add	x2, x2, #0x31
  407598:	add	x4, x4, #0xd26
  40759c:	mov	w0, #0x4                   	// #4
  4075a0:	mov	x3, x19
  4075a4:	bl	417eb4 <concat@@Base>
  4075a8:	bl	420f28 <strcache_add@@Base>
  4075ac:	str	x0, [x20, #8]
  4075b0:	ldr	x8, [x21, #24]
  4075b4:	str	x8, [x20]
  4075b8:	ldr	w8, [x21, #32]
  4075bc:	str	x20, [x21, #24]
  4075c0:	add	w8, w8, #0x1
  4075c4:	str	w8, [x21, #32]
  4075c8:	ldp	x20, x19, [sp, #32]
  4075cc:	ldr	x21, [sp, #16]
  4075d0:	mov	x0, xzr
  4075d4:	ldp	x29, x30, [sp], #48
  4075d8:	ret

00000000004075dc <ar_scan@@Base>:
  4075dc:	stp	x29, x30, [sp, #-96]!
  4075e0:	stp	x28, x27, [sp, #16]
  4075e4:	stp	x26, x25, [sp, #32]
  4075e8:	stp	x24, x23, [sp, #48]
  4075ec:	stp	x22, x21, [sp, #64]
  4075f0:	stp	x20, x19, [sp, #80]
  4075f4:	mov	x29, sp
  4075f8:	sub	sp, sp, #0xd0
  4075fc:	mov	x20, x2
  407600:	mov	x22, x1
  407604:	mov	w1, wzr
  407608:	mov	w2, wzr
  40760c:	bl	406a40 <open@plt>
  407610:	tbnz	w0, #31, 407658 <ar_scan@@Base+0x7c>
  407614:	sub	x1, x29, #0x48
  407618:	mov	w2, #0x8                   	// #8
  40761c:	mov	w19, w0
  407620:	bl	418250 <readbuf@@Base>
  407624:	cmp	w0, #0x8
  407628:	b.ne	407648 <ar_scan@@Base+0x6c>  // b.any
  40762c:	ldur	x8, [x29, #-72]
  407630:	mov	x9, #0x3c21                	// #15393
  407634:	movk	x9, #0x7261, lsl #16
  407638:	movk	x9, #0x6863, lsl #32
  40763c:	movk	x9, #0xa3e, lsl #48
  407640:	cmp	x8, x9
  407644:	b.eq	407680 <ar_scan@@Base+0xa4>  // b.none
  407648:	mov	w0, w19
  40764c:	bl	406ba0 <close@plt>
  407650:	mov	x23, #0xfffffffffffffffe    	// #-2
  407654:	b	40765c <ar_scan@@Base+0x80>
  407658:	mov	x23, #0xffffffffffffffff    	// #-1
  40765c:	mov	x0, x23
  407660:	mov	sp, x29
  407664:	ldp	x20, x19, [sp, #80]
  407668:	ldp	x22, x21, [sp, #64]
  40766c:	ldp	x24, x23, [sp, #48]
  407670:	ldp	x26, x25, [sp, #32]
  407674:	ldp	x28, x27, [sp, #16]
  407678:	ldp	x29, x30, [sp], #96
  40767c:	ret
  407680:	sub	x21, x29, #0x60
  407684:	add	x9, x21, #0x10
  407688:	stur	x9, [x29, #-112]
  40768c:	orr	x9, x21, #0x1
  407690:	sub	x8, x29, #0x48
  407694:	stur	x9, [x29, #-192]
  407698:	orr	x9, x21, #0x3
  40769c:	stp	x20, x9, [x29, #-136]
  4076a0:	add	x9, x8, #0x28
  4076a4:	stur	x9, [x29, #-144]
  4076a8:	add	x9, x8, #0x30
  4076ac:	stur	x9, [x29, #-152]
  4076b0:	add	x9, x8, #0x10
  4076b4:	mov	x27, xzr
  4076b8:	mov	w24, #0x8                   	// #8
  4076bc:	mov	w25, #0x2f2f                	// #12079
  4076c0:	stur	x9, [x29, #-160]
  4076c4:	add	x9, x8, #0x1c
  4076c8:	add	x8, x8, #0x22
  4076cc:	stur	wzr, [x29, #-196]
  4076d0:	stp	x8, x9, [x29, #-176]
  4076d4:	b	4076e0 <ar_scan@@Base+0x104>
  4076d8:	mov	w8, #0x2                   	// #2
  4076dc:	cbnz	w8, 407a94 <ar_scan@@Base+0x4b8>
  4076e0:	mov	w0, w19
  4076e4:	mov	x1, x24
  4076e8:	mov	w2, wzr
  4076ec:	bl	406930 <lseek@plt>
  4076f0:	mov	x26, x0
  4076f4:	cmn	x0, #0x1
  4076f8:	b.ne	40770c <ar_scan@@Base+0x130>  // b.any
  4076fc:	bl	406f00 <__errno_location@plt>
  407700:	ldr	w8, [x0]
  407704:	cmp	w8, #0x4
  407708:	b.eq	4076e0 <ar_scan@@Base+0x104>  // b.none
  40770c:	tbnz	x26, #63, 4076d8 <ar_scan@@Base+0xfc>
  407710:	sub	x1, x29, #0x48
  407714:	mov	w2, #0x3c                  	// #60
  407718:	mov	w0, w19
  40771c:	bl	418250 <readbuf@@Base>
  407720:	cbz	w0, 4077b4 <ar_scan@@Base+0x1d8>
  407724:	cmp	w0, #0x3c
  407728:	b.ne	4076d8 <ar_scan@@Base+0xfc>  // b.any
  40772c:	ldurh	w8, [x29, #-14]
  407730:	cmp	w8, #0xa60
  407734:	b.ne	4076d8 <ar_scan@@Base+0xfc>  // b.any
  407738:	ldur	q0, [x29, #-72]
  40773c:	ldur	x8, [x29, #-112]
  407740:	stur	q0, [x29, #-96]
  407744:	cmp	x8, x21
  407748:	strb	wzr, [x8]
  40774c:	b.ls	40775c <ar_scan@@Base+0x180>  // b.plast
  407750:	ldrb	w9, [x8, #-1]!
  407754:	cmp	w9, #0x20
  407758:	b.eq	407744 <ar_scan@@Base+0x168>  // b.none
  40775c:	ldurh	w9, [x29, #-96]
  407760:	ldurb	w10, [x29, #-94]
  407764:	eor	w9, w9, w25
  407768:	orr	w9, w9, w10
  40776c:	tst	w9, #0xffff
  407770:	b.eq	4077bc <ar_scan@@Base+0x1e0>  // b.none
  407774:	ldur	x9, [x29, #-96]
  407778:	mov	x11, #0x5241                	// #21057
  40777c:	movk	x11, #0x4946, lsl #16
  407780:	movk	x11, #0x454c, lsl #32
  407784:	movk	x11, #0x414e, lsl #48
  407788:	ldur	x10, [x29, #-91]
  40778c:	eor	x9, x9, x11
  407790:	mov	x11, #0x4e45                	// #20037
  407794:	movk	x11, #0x4d41, lsl #16
  407798:	movk	x11, #0x5345, lsl #32
  40779c:	movk	x11, #0x2f, lsl #48
  4077a0:	eor	x10, x10, x11
  4077a4:	orr	x9, x9, x10
  4077a8:	cmp	x9, #0x0
  4077ac:	cset	w10, eq  // eq = none
  4077b0:	b	4077c0 <ar_scan@@Base+0x1e4>
  4077b4:	mov	w8, #0x4                   	// #4
  4077b8:	b	4076dc <ar_scan@@Base+0x100>
  4077bc:	mov	w10, #0x1                   	// #1
  4077c0:	ldrb	w9, [x8]
  4077c4:	cmp	w9, #0x2f
  4077c8:	b.ne	4077d0 <ar_scan@@Base+0x1f4>  // b.any
  4077cc:	strb	wzr, [x8]
  4077d0:	stur	w10, [x29, #-116]
  4077d4:	tbnz	w10, #0, 40783c <ar_scan@@Base+0x260>
  4077d8:	ldurb	w8, [x29, #-96]
  4077dc:	cmp	w8, #0x2f
  4077e0:	b.eq	4077ec <ar_scan@@Base+0x210>  // b.none
  4077e4:	cmp	w8, #0x20
  4077e8:	b.ne	40783c <ar_scan@@Base+0x260>  // b.any
  4077ec:	cbz	x27, 40783c <ar_scan@@Base+0x260>
  4077f0:	ldur	x0, [x29, #-192]
  4077f4:	sub	x26, x29, #0x60
  4077f8:	bl	4069d0 <atoi@plt>
  4077fc:	mov	w20, wzr
  407800:	mov	w8, #0x2                   	// #2
  407804:	tbnz	w0, #31, 407834 <ar_scan@@Base+0x258>
  407808:	ldur	w9, [x29, #-196]
  40780c:	cmp	w0, w9
  407810:	b.ge	407834 <ar_scan@@Base+0x258>  // b.tcont
  407814:	add	x26, x27, w0, sxtw
  407818:	mov	x0, x26
  40781c:	bl	4067d0 <strlen@plt>
  407820:	cmp	w0, #0x0
  407824:	cset	w20, gt
  407828:	cmp	w0, #0x1
  40782c:	cset	w8, lt  // lt = tstop
  407830:	lsl	w8, w8, #1
  407834:	cbnz	w8, 4078e0 <ar_scan@@Base+0x304>
  407838:	b	4078dc <ar_scan@@Base+0x300>
  40783c:	ldurb	w8, [x29, #-96]
  407840:	mov	w20, wzr
  407844:	sub	x26, x29, #0x60
  407848:	cmp	w8, #0x23
  40784c:	b.ne	4078dc <ar_scan@@Base+0x300>  // b.any
  407850:	ldurb	w8, [x29, #-95]
  407854:	cmp	w8, #0x31
  407858:	b.ne	4078dc <ar_scan@@Base+0x300>  // b.any
  40785c:	ldurb	w8, [x29, #-94]
  407860:	cmp	w8, #0x2f
  407864:	b.ne	4078dc <ar_scan@@Base+0x300>  // b.any
  407868:	ldur	x0, [x29, #-128]
  40786c:	bl	4069d0 <atoi@plt>
  407870:	cmp	w0, #0x1
  407874:	b.lt	4078cc <ar_scan@@Base+0x2f0>  // b.tstop
  407878:	add	w8, w0, #0x1
  40787c:	sxtw	x8, w8
  407880:	add	x8, x8, #0xf
  407884:	and	x8, x8, #0xfffffffffffffff0
  407888:	mov	x9, sp
  40788c:	sub	x26, x9, x8
  407890:	mov	w28, w0
  407894:	mov	sp, x26
  407898:	sxtw	x25, w28
  40789c:	mov	w0, w19
  4078a0:	mov	x1, x26
  4078a4:	mov	x2, x25
  4078a8:	bl	418250 <readbuf@@Base>
  4078ac:	cmp	w28, w0
  4078b0:	b.ne	407a38 <ar_scan@@Base+0x45c>  // b.any
  4078b4:	mov	w8, wzr
  4078b8:	mov	w20, #0x1                   	// #1
  4078bc:	strb	wzr, [x26, x25]
  4078c0:	mov	w25, #0x2f2f                	// #12079
  4078c4:	cbnz	w8, 4078e0 <ar_scan@@Base+0x304>
  4078c8:	b	4078dc <ar_scan@@Base+0x300>
  4078cc:	mov	w20, wzr
  4078d0:	sub	x26, x29, #0x60
  4078d4:	mov	w8, #0x2                   	// #2
  4078d8:	cbnz	w8, 4078e0 <ar_scan@@Base+0x304>
  4078dc:	mov	w8, wzr
  4078e0:	cbnz	w8, 4076dc <ar_scan@@Base+0x100>
  4078e4:	ldur	x0, [x29, #-144]
  4078e8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  4078ec:	sub	x2, x29, #0x64
  4078f0:	add	x1, x1, #0x4f
  4078f4:	stur	x23, [x29, #-208]
  4078f8:	stur	x27, [x29, #-184]
  4078fc:	bl	406e70 <__isoc99_sscanf@plt>
  407900:	ldur	x0, [x29, #-152]
  407904:	bl	406bd0 <atol@plt>
  407908:	mov	x23, x0
  40790c:	ldur	x0, [x29, #-160]
  407910:	cmp	w20, #0x0
  407914:	cset	w25, eq  // eq = none
  407918:	add	x27, x24, #0x3c
  40791c:	bl	406bd0 <atol@plt>
  407920:	mov	x28, x22
  407924:	mov	x22, x0
  407928:	ldur	x0, [x29, #-168]
  40792c:	bl	4069d0 <atoi@plt>
  407930:	mov	w20, w0
  407934:	ldur	x0, [x29, #-176]
  407938:	bl	4069d0 <atoi@plt>
  40793c:	ldur	w8, [x29, #-100]
  407940:	sub	sp, sp, #0x20
  407944:	ldur	x9, [x29, #-136]
  407948:	str	w0, [sp]
  40794c:	mov	w0, w19
  407950:	mov	x1, x26
  407954:	mov	w2, w25
  407958:	mov	x3, x24
  40795c:	mov	x4, x27
  407960:	mov	x5, x23
  407964:	mov	x6, x22
  407968:	mov	w7, w20
  40796c:	str	x9, [sp, #16]
  407970:	str	w8, [sp, #8]
  407974:	mov	x22, x28
  407978:	blr	x28
  40797c:	add	sp, sp, #0x20
  407980:	cbz	x0, 4079a4 <ar_scan@@Base+0x3c8>
  407984:	mov	x26, x0
  407988:	mov	w0, w19
  40798c:	bl	406ba0 <close@plt>
  407990:	ldur	x27, [x29, #-184]
  407994:	mov	w8, #0x1                   	// #1
  407998:	mov	x23, x26
  40799c:	mov	w25, #0x2f2f                	// #12079
  4079a0:	b	4076dc <ar_scan@@Base+0x100>
  4079a4:	ldur	w8, [x29, #-116]
  4079a8:	cbz	w8, 407a4c <ar_scan@@Base+0x470>
  4079ac:	mov	w8, #0x7fffffff            	// #2147483647
  4079b0:	mov	x20, x23
  4079b4:	cmp	x23, x8
  4079b8:	ldur	x27, [x29, #-184]
  4079bc:	ldur	x23, [x29, #-208]
  4079c0:	mov	w25, #0x2f2f                	// #12079
  4079c4:	b.gt	407a60 <ar_scan@@Base+0x484>
  4079c8:	add	x9, x20, #0x10
  4079cc:	mov	x8, sp
  4079d0:	and	x9, x9, #0xfffffffffffffff0
  4079d4:	sub	x27, x8, x9
  4079d8:	mov	sp, x27
  4079dc:	mov	w0, w19
  4079e0:	mov	x1, x27
  4079e4:	mov	x2, x20
  4079e8:	bl	418250 <readbuf@@Base>
  4079ec:	cmp	x20, w0, sxtw
  4079f0:	b.ne	407a60 <ar_scan@@Base+0x484>  // b.any
  4079f4:	cmp	x20, #0x1
  4079f8:	add	x9, x27, x20
  4079fc:	b.lt	407a68 <ar_scan@@Base+0x48c>  // b.tstop
  407a00:	mov	x8, x27
  407a04:	b	407a14 <ar_scan@@Base+0x438>
  407a08:	add	x8, x8, #0x1
  407a0c:	cmp	x8, x9
  407a10:	b.cs	407a68 <ar_scan@@Base+0x48c>  // b.hs, b.nlast
  407a14:	ldrb	w10, [x8]
  407a18:	cmp	w10, #0xa
  407a1c:	b.ne	407a08 <ar_scan@@Base+0x42c>  // b.any
  407a20:	ldurb	w10, [x8, #-1]
  407a24:	strb	wzr, [x8]
  407a28:	cmp	w10, #0x2f
  407a2c:	b.ne	407a08 <ar_scan@@Base+0x42c>  // b.any
  407a30:	sturb	wzr, [x8, #-1]
  407a34:	b	407a08 <ar_scan@@Base+0x42c>
  407a38:	mov	w20, wzr
  407a3c:	mov	w8, #0x2                   	// #2
  407a40:	mov	w25, #0x2f2f                	// #12079
  407a44:	cbnz	w8, 4078e0 <ar_scan@@Base+0x304>
  407a48:	b	4078dc <ar_scan@@Base+0x300>
  407a4c:	ldur	x27, [x29, #-184]
  407a50:	mov	x20, x23
  407a54:	ldur	x23, [x29, #-208]
  407a58:	mov	w25, #0x2f2f                	// #12079
  407a5c:	b	407a7c <ar_scan@@Base+0x4a0>
  407a60:	mov	w8, #0x2                   	// #2
  407a64:	b	407a78 <ar_scan@@Base+0x49c>
  407a68:	mov	w8, wzr
  407a6c:	strb	wzr, [x9]
  407a70:	mov	w9, w20
  407a74:	stur	w20, [x29, #-196]
  407a78:	cbnz	w8, 4076dc <ar_scan@@Base+0x100>
  407a7c:	add	x9, x24, x20
  407a80:	add	x9, x9, #0x3c
  407a84:	and	x10, x9, #0x1
  407a88:	mov	w8, wzr
  407a8c:	add	x24, x10, x9
  407a90:	b	4076dc <ar_scan@@Base+0x100>
  407a94:	cmp	w8, #0x4
  407a98:	b.ne	407aa0 <ar_scan@@Base+0x4c4>  // b.any
  407a9c:	mov	w8, wzr
  407aa0:	cmp	w8, #0x2
  407aa4:	b.eq	407648 <ar_scan@@Base+0x6c>  // b.none
  407aa8:	cbnz	w8, 40765c <ar_scan@@Base+0x80>
  407aac:	mov	w0, w19
  407ab0:	bl	406ba0 <close@plt>
  407ab4:	mov	x23, xzr
  407ab8:	b	40765c <ar_scan@@Base+0x80>

0000000000407abc <ar_name_equal@@Base>:
  407abc:	stp	x29, x30, [sp, #-48]!
  407ac0:	stp	x20, x19, [sp, #32]
  407ac4:	mov	x19, x1
  407ac8:	mov	w1, #0x2f                  	// #47
  407acc:	str	x21, [sp, #16]
  407ad0:	mov	x29, sp
  407ad4:	mov	w20, w2
  407ad8:	mov	x21, x0
  407adc:	bl	406bc0 <strrchr@plt>
  407ae0:	cmp	x0, #0x0
  407ae4:	csinc	x0, x21, x0, eq  // eq = none
  407ae8:	cbz	w20, 407afc <ar_name_equal@@Base+0x40>
  407aec:	mov	w2, #0xf                   	// #15
  407af0:	mov	x1, x19
  407af4:	bl	406a70 <strncmp@plt>
  407af8:	b	407b04 <ar_name_equal@@Base+0x48>
  407afc:	mov	x1, x19
  407b00:	bl	406cb0 <strcmp@plt>
  407b04:	ldp	x20, x19, [sp, #32]
  407b08:	ldr	x21, [sp, #16]
  407b0c:	cmp	w0, #0x0
  407b10:	cset	w0, eq  // eq = none
  407b14:	ldp	x29, x30, [sp], #48
  407b18:	ret

0000000000407b1c <ar_member_touch@@Base>:
  407b1c:	sub	sp, sp, #0xf0
  407b20:	mov	x2, x1
  407b24:	adrp	x1, 407000 <_start@@Base+0x50>
  407b28:	add	x1, x1, #0xcc0
  407b2c:	stp	x29, x30, [sp, #192]
  407b30:	str	x21, [sp, #208]
  407b34:	stp	x20, x19, [sp, #224]
  407b38:	add	x29, sp, #0xc0
  407b3c:	mov	x21, x0
  407b40:	bl	4075dc <ar_scan@@Base>
  407b44:	mov	x19, x0
  407b48:	tbnz	x0, #63, 407ca8 <ar_member_touch@@Base+0x18c>
  407b4c:	cbz	x19, 407c84 <ar_member_touch@@Base+0x168>
  407b50:	mov	w1, #0x2                   	// #2
  407b54:	mov	w2, #0x1b6                 	// #438
  407b58:	mov	x0, x21
  407b5c:	bl	406a40 <open@plt>
  407b60:	mov	w20, w0
  407b64:	cmn	w0, #0x1
  407b68:	b.ne	407b7c <ar_member_touch@@Base+0x60>  // b.any
  407b6c:	bl	406f00 <__errno_location@plt>
  407b70:	ldr	w8, [x0]
  407b74:	cmp	w8, #0x4
  407b78:	b.eq	407b50 <ar_member_touch@@Base+0x34>  // b.none
  407b7c:	tbnz	w20, #31, 407ca4 <ar_member_touch@@Base+0x188>
  407b80:	mov	w0, w20
  407b84:	mov	x1, x19
  407b88:	mov	w2, wzr
  407b8c:	bl	406930 <lseek@plt>
  407b90:	mov	x21, x0
  407b94:	cmn	x0, #0x1
  407b98:	b.ne	407bac <ar_member_touch@@Base+0x90>  // b.any
  407b9c:	bl	406f00 <__errno_location@plt>
  407ba0:	ldr	w8, [x0]
  407ba4:	cmp	w8, #0x4
  407ba8:	b.eq	407b80 <ar_member_touch@@Base+0x64>  // b.none
  407bac:	tbnz	x21, #63, 407c8c <ar_member_touch@@Base+0x170>
  407bb0:	sub	x1, x29, #0x40
  407bb4:	mov	w2, #0x3c                  	// #60
  407bb8:	mov	w0, w20
  407bbc:	bl	418250 <readbuf@@Base>
  407bc0:	cmp	w0, #0x3c
  407bc4:	b.ne	407c8c <ar_member_touch@@Base+0x170>  // b.any
  407bc8:	mov	x1, sp
  407bcc:	mov	w0, w20
  407bd0:	bl	424ef0 <__libc_csu_fini@@Base+0x28>
  407bd4:	mov	w21, w0
  407bd8:	cmn	w0, #0x1
  407bdc:	b.ne	407bf0 <ar_member_touch@@Base+0xd4>  // b.any
  407be0:	bl	406f00 <__errno_location@plt>
  407be4:	ldr	w8, [x0]
  407be8:	cmp	w8, #0x4
  407bec:	b.eq	407bc8 <ar_member_touch@@Base+0xac>  // b.none
  407bf0:	tbnz	w21, #31, 407c8c <ar_member_touch@@Base+0x170>
  407bf4:	ldr	x2, [sp, #88]
  407bf8:	sub	x8, x29, #0x40
  407bfc:	add	x21, x8, #0x10
  407c00:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  407c04:	mov	x8, #0x2020202020202020    	// #2314885530818453536
  407c08:	add	x1, x1, #0x8af
  407c0c:	mov	x0, x21
  407c10:	stur	x8, [x29, #-48]
  407c14:	stur	w8, [x29, #-40]
  407c18:	bl	406870 <sprintf@plt>
  407c1c:	mov	x0, x21
  407c20:	bl	4067d0 <strlen@plt>
  407c24:	mov	w8, #0x20                  	// #32
  407c28:	strb	w8, [x21, x0]
  407c2c:	mov	w0, w20
  407c30:	mov	x1, x19
  407c34:	mov	w2, wzr
  407c38:	bl	406930 <lseek@plt>
  407c3c:	mov	x21, x0
  407c40:	cmn	x0, #0x1
  407c44:	b.ne	407c58 <ar_member_touch@@Base+0x13c>  // b.any
  407c48:	bl	406f00 <__errno_location@plt>
  407c4c:	ldr	w8, [x0]
  407c50:	cmp	w8, #0x4
  407c54:	b.eq	407c2c <ar_member_touch@@Base+0x110>  // b.none
  407c58:	tbnz	x21, #63, 407c8c <ar_member_touch@@Base+0x170>
  407c5c:	sub	x1, x29, #0x40
  407c60:	mov	w2, #0x3c                  	// #60
  407c64:	mov	w0, w20
  407c68:	bl	4181b4 <writebuf@@Base>
  407c6c:	cmp	w0, #0x3c
  407c70:	b.ne	407c8c <ar_member_touch@@Base+0x170>  // b.any
  407c74:	mov	w0, w20
  407c78:	bl	406ba0 <close@plt>
  407c7c:	mov	w19, wzr
  407c80:	b	407ca8 <ar_member_touch@@Base+0x18c>
  407c84:	mov	w19, #0x1                   	// #1
  407c88:	b	407ca8 <ar_member_touch@@Base+0x18c>
  407c8c:	bl	406f00 <__errno_location@plt>
  407c90:	ldr	w21, [x0]
  407c94:	mov	x19, x0
  407c98:	mov	w0, w20
  407c9c:	bl	406ba0 <close@plt>
  407ca0:	str	w21, [x19]
  407ca4:	mov	w19, #0xfffffffd            	// #-3
  407ca8:	mov	w0, w19
  407cac:	ldp	x20, x19, [sp, #224]
  407cb0:	ldr	x21, [sp, #208]
  407cb4:	ldp	x29, x30, [sp, #192]
  407cb8:	add	sp, sp, #0xf0
  407cbc:	ret
  407cc0:	stp	x29, x30, [sp, #-32]!
  407cc4:	mov	x29, sp
  407cc8:	ldr	x0, [x29, #48]
  407ccc:	str	x19, [sp, #16]
  407cd0:	mov	x19, x3
  407cd4:	bl	407abc <ar_name_equal@@Base>
  407cd8:	cmp	w0, #0x0
  407cdc:	csel	x0, xzr, x19, eq  // eq = none
  407ce0:	ldr	x19, [sp, #16]
  407ce4:	ldp	x29, x30, [sp], #32
  407ce8:	ret

0000000000407cec <set_file_variables@@Base>:
  407cec:	stp	x29, x30, [sp, #-96]!
  407cf0:	stp	x28, x27, [sp, #16]
  407cf4:	stp	x26, x25, [sp, #32]
  407cf8:	stp	x24, x23, [sp, #48]
  407cfc:	stp	x22, x21, [sp, #64]
  407d00:	stp	x20, x19, [sp, #80]
  407d04:	mov	x29, sp
  407d08:	sub	sp, sp, #0x60
  407d0c:	mov	x19, x0
  407d10:	ldr	x0, [x0]
  407d14:	bl	4070bc <ar_name@@Base>
  407d18:	ldr	x22, [x19]
  407d1c:	cbz	w0, 407da4 <set_file_variables@@Base+0xb8>
  407d20:	mov	w1, #0x28                  	// #40
  407d24:	mov	x0, x22
  407d28:	bl	406d10 <strchr@plt>
  407d2c:	sub	x2, x0, x22
  407d30:	add	x8, x2, #0x10
  407d34:	and	x8, x8, #0xfffffffffffffff0
  407d38:	mov	x9, sp
  407d3c:	mov	x21, x0
  407d40:	sub	x20, x9, x8
  407d44:	mov	sp, x20
  407d48:	mov	x0, x20
  407d4c:	mov	x1, x22
  407d50:	bl	406790 <memcpy@plt>
  407d54:	ldr	x8, [x19]
  407d58:	add	x23, x21, #0x1
  407d5c:	mov	x0, x23
  407d60:	sub	x8, x21, x8
  407d64:	strb	wzr, [x20, x8]
  407d68:	bl	4067d0 <strlen@plt>
  407d6c:	add	x8, x0, #0xf
  407d70:	and	x8, x8, #0xfffffffffffffff0
  407d74:	mov	x9, sp
  407d78:	sub	x21, x9, x8
  407d7c:	mov	sp, x21
  407d80:	sub	x24, x0, #0x1
  407d84:	mov	x0, x21
  407d88:	mov	x1, x23
  407d8c:	mov	x2, x24
  407d90:	bl	406790 <memcpy@plt>
  407d94:	strb	wzr, [x21, x24]
  407d98:	ldr	x8, [x19, #40]
  407d9c:	cbnz	x8, 407e84 <set_file_variables@@Base+0x198>
  407da0:	b	407db8 <set_file_variables@@Base+0xcc>
  407da4:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x20e0>
  407da8:	add	x21, x21, #0x989
  407dac:	mov	x20, x22
  407db0:	ldr	x8, [x19, #40]
  407db4:	cbnz	x8, 407e84 <set_file_variables@@Base+0x198>
  407db8:	mov	x0, x22
  407dbc:	bl	4070bc <ar_name@@Base>
  407dc0:	ldr	x22, [x19]
  407dc4:	cbz	w0, 407de8 <set_file_variables@@Base+0xfc>
  407dc8:	mov	w1, #0x28                  	// #40
  407dcc:	mov	x0, x22
  407dd0:	bl	406d10 <strchr@plt>
  407dd4:	add	x22, x0, #0x1
  407dd8:	mov	x0, x22
  407ddc:	bl	4067d0 <strlen@plt>
  407de0:	sub	x23, x0, #0x1
  407de4:	b	407df4 <set_file_variables@@Base+0x108>
  407de8:	mov	x0, x22
  407dec:	bl	4067d0 <strlen@plt>
  407df0:	mov	x23, x0
  407df4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  407df8:	add	x0, x0, #0x53
  407dfc:	bl	420f28 <strcache_add@@Base>
  407e00:	bl	40a830 <enter_file@@Base>
  407e04:	ldr	x27, [x0, #24]
  407e08:	cbz	x27, 407e64 <set_file_variables@@Base+0x178>
  407e0c:	adrp	x24, 427000 <_IO_stdin_used@@Base+0x20e0>
  407e10:	add	x24, x24, #0x989
  407e14:	b	407e30 <set_file_variables@@Base+0x144>
  407e18:	add	x1, x22, x26
  407e1c:	mov	x0, x25
  407e20:	bl	406a70 <strncmp@plt>
  407e24:	cbz	w0, 407e70 <set_file_variables@@Base+0x184>
  407e28:	ldr	x27, [x27]
  407e2c:	cbz	x27, 407e80 <set_file_variables@@Base+0x194>
  407e30:	ldr	x25, [x27, #8]
  407e34:	mov	x0, x25
  407e38:	cbnz	x25, 407e44 <set_file_variables@@Base+0x158>
  407e3c:	ldr	x8, [x27, #16]
  407e40:	ldr	x0, [x8]
  407e44:	bl	4067d0 <strlen@plt>
  407e48:	subs	x26, x23, x0
  407e4c:	b.ls	407e28 <set_file_variables@@Base+0x13c>  // b.plast
  407e50:	mov	x2, x0
  407e54:	cbnz	x25, 407e18 <set_file_variables@@Base+0x12c>
  407e58:	ldr	x8, [x27, #16]
  407e5c:	ldr	x25, [x8]
  407e60:	b	407e18 <set_file_variables@@Base+0x12c>
  407e64:	adrp	x24, 427000 <_IO_stdin_used@@Base+0x20e0>
  407e68:	add	x24, x24, #0x989
  407e6c:	b	407e80 <set_file_variables@@Base+0x194>
  407e70:	mov	x0, x22
  407e74:	mov	x1, x26
  407e78:	bl	421000 <strcache_add_len@@Base>
  407e7c:	mov	x24, x0
  407e80:	str	x24, [x19, #40]
  407e84:	ldr	x8, [x19, #24]
  407e88:	ldr	x22, [x19, #40]
  407e8c:	cbz	x8, 407ecc <set_file_variables@@Base+0x1e0>
  407e90:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  407e94:	mov	w9, #0x1200                	// #4608
  407e98:	add	x2, x2, #0x989
  407e9c:	ldrh	w10, [x8, #32]
  407ea0:	tst	w10, w9
  407ea4:	b.eq	407eb4 <set_file_variables@@Base+0x1c8>  // b.none
  407ea8:	ldr	x8, [x8]
  407eac:	cbnz	x8, 407e9c <set_file_variables@@Base+0x1b0>
  407eb0:	b	407ed4 <set_file_variables@@Base+0x1e8>
  407eb4:	tbnz	w10, #11, 407ecc <set_file_variables@@Base+0x1e0>
  407eb8:	ldr	x2, [x8, #8]
  407ebc:	cbnz	x2, 407ed4 <set_file_variables@@Base+0x1e8>
  407ec0:	ldr	x8, [x8, #16]
  407ec4:	ldr	x2, [x8]
  407ec8:	b	407ed4 <set_file_variables@@Base+0x1e8>
  407ecc:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  407ed0:	add	x2, x2, #0x989
  407ed4:	ldr	x8, [x19, #32]
  407ed8:	cbz	x8, 407ef0 <set_file_variables@@Base+0x204>
  407edc:	adrp	x9, 440000 <shell_var@@Base+0x18>
  407ee0:	ldr	x9, [x9, #72]
  407ee4:	ldr	x9, [x9, #32]
  407ee8:	cmp	x8, x9
  407eec:	csel	x2, x20, x2, eq  // eq = none
  407ef0:	ldr	x8, [x19, #80]
  407ef4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  407ef8:	add	x0, x0, #0x81a
  407efc:	mov	w1, #0x1                   	// #1
  407f00:	ldr	x5, [x8, #8]
  407f04:	mov	w3, #0x6                   	// #6
  407f08:	mov	w4, wzr
  407f0c:	mov	x6, xzr
  407f10:	bl	421720 <define_variable_in_set@@Base>
  407f14:	ldr	x8, [x19, #80]
  407f18:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  407f1c:	add	x0, x0, #0xb5f
  407f20:	mov	w1, #0x1                   	// #1
  407f24:	ldr	x5, [x8, #8]
  407f28:	mov	w3, #0x6                   	// #6
  407f2c:	mov	x2, x22
  407f30:	mov	w4, wzr
  407f34:	mov	x6, xzr
  407f38:	bl	421720 <define_variable_in_set@@Base>
  407f3c:	ldr	x8, [x19, #80]
  407f40:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  407f44:	add	x0, x0, #0x806
  407f48:	mov	w1, #0x1                   	// #1
  407f4c:	ldr	x5, [x8, #8]
  407f50:	mov	w3, #0x6                   	// #6
  407f54:	mov	x2, x20
  407f58:	mov	w4, wzr
  407f5c:	mov	x6, xzr
  407f60:	bl	421720 <define_variable_in_set@@Base>
  407f64:	ldr	x8, [x19, #80]
  407f68:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  407f6c:	add	x0, x0, #0x346
  407f70:	mov	w1, #0x1                   	// #1
  407f74:	ldr	x5, [x8, #8]
  407f78:	mov	w3, #0x6                   	// #6
  407f7c:	mov	x2, x21
  407f80:	mov	w4, wzr
  407f84:	mov	x6, xzr
  407f88:	bl	421720 <define_variable_in_set@@Base>
  407f8c:	ldr	x22, [x19, #24]
  407f90:	cbz	x22, 407ff4 <set_file_variables@@Base+0x308>
  407f94:	mov	x21, xzr
  407f98:	mov	x20, xzr
  407f9c:	b	407fb8 <set_file_variables@@Base+0x2cc>
  407fa0:	cbz	x0, 407fe8 <set_file_variables@@Base+0x2fc>
  407fa4:	bl	4067d0 <strlen@plt>
  407fa8:	add	x8, x20, x0
  407fac:	add	x20, x8, #0x1
  407fb0:	ldr	x22, [x22]
  407fb4:	cbz	x22, 407ffc <set_file_variables@@Base+0x310>
  407fb8:	ldrh	w8, [x22, #32]
  407fbc:	tst	w8, #0x1800
  407fc0:	b.ne	407fb0 <set_file_variables@@Base+0x2c4>  // b.any
  407fc4:	ldr	x0, [x22, #8]
  407fc8:	tbz	w8, #9, 407fa0 <set_file_variables@@Base+0x2b4>
  407fcc:	cbnz	x0, 407fd8 <set_file_variables@@Base+0x2ec>
  407fd0:	ldr	x8, [x22, #16]
  407fd4:	ldr	x0, [x8]
  407fd8:	bl	4067d0 <strlen@plt>
  407fdc:	add	x8, x21, x0
  407fe0:	add	x21, x8, #0x1
  407fe4:	b	407fb0 <set_file_variables@@Base+0x2c4>
  407fe8:	ldr	x8, [x22, #16]
  407fec:	ldr	x0, [x8]
  407ff0:	b	407fa4 <set_file_variables@@Base+0x2b8>
  407ff4:	mov	x20, xzr
  407ff8:	mov	x21, xzr
  407ffc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408000:	ldr	x9, [x8, #2568]
  408004:	cmp	x21, #0x0
  408008:	csinc	x21, x21, xzr, ne  // ne = any
  40800c:	cmp	x20, #0x0
  408010:	csinc	x22, x20, xzr, ne  // ne = any
  408014:	cmp	x22, x9
  408018:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  40801c:	b.ls	408034 <set_file_variables@@Base+0x348>  // b.plast
  408020:	ldr	x0, [x20, #2544]
  408024:	mov	x1, x22
  408028:	str	x22, [x8, #2568]
  40802c:	bl	41803c <xrealloc@@Base>
  408030:	str	x0, [x20, #2544]
  408034:	ldr	x26, [x19, #24]
  408038:	ldr	x20, [x20, #2544]
  40803c:	add	x22, x22, #0x1
  408040:	cbz	x26, 4080e4 <set_file_variables@@Base+0x3f8>
  408044:	mov	w27, #0x1a                  	// #26
  408048:	mov	w28, #0x20                  	// #32
  40804c:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  408050:	b	40809c <set_file_variables@@Base+0x3b0>
  408054:	mov	x0, x23
  408058:	bl	4067d0 <strlen@plt>
  40805c:	mov	x24, x0
  408060:	mov	x0, x20
  408064:	mov	x1, x23
  408068:	mov	x2, x24
  40806c:	bl	406790 <memcpy@plt>
  408070:	add	x20, x20, x24
  408074:	strb	w28, [x20], #1
  408078:	ldrb	w8, [x26, #33]
  40807c:	ldr	w9, [x25, #3296]
  408080:	and	w8, w8, #0x1
  408084:	orr	w8, w8, w9
  408088:	cmp	w8, #0x0
  40808c:	csinv	x8, xzr, x24, ne  // ne = any
  408090:	add	x22, x8, x22
  408094:	ldr	x26, [x26]
  408098:	cbz	x26, 4080e4 <set_file_variables@@Base+0x3f8>
  40809c:	ldrb	w8, [x26, #33]
  4080a0:	tst	w8, w27
  4080a4:	b.ne	408094 <set_file_variables@@Base+0x3a8>  // b.any
  4080a8:	ldr	x23, [x26, #8]
  4080ac:	cbnz	x23, 4080b8 <set_file_variables@@Base+0x3cc>
  4080b0:	ldr	x8, [x26, #16]
  4080b4:	ldr	x23, [x8]
  4080b8:	mov	x0, x23
  4080bc:	bl	4070bc <ar_name@@Base>
  4080c0:	cbz	w0, 408054 <set_file_variables@@Base+0x368>
  4080c4:	mov	w1, #0x28                  	// #40
  4080c8:	mov	x0, x23
  4080cc:	bl	406d10 <strchr@plt>
  4080d0:	add	x23, x0, #0x1
  4080d4:	mov	x0, x23
  4080d8:	bl	4067d0 <strlen@plt>
  4080dc:	sub	x24, x0, #0x1
  4080e0:	b	408060 <set_file_variables@@Base+0x374>
  4080e4:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  4080e8:	ldr	x2, [x23, #2544]
  4080ec:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  4080f0:	add	x0, x0, #0x91a
  4080f4:	mov	w1, #0x1                   	// #1
  4080f8:	cmp	x20, x2
  4080fc:	cset	w8, hi  // hi = pmore
  408100:	sub	x8, x20, x8
  408104:	strb	wzr, [x8]
  408108:	ldr	x8, [x19, #80]
  40810c:	mov	w3, #0x6                   	// #6
  408110:	mov	w4, wzr
  408114:	mov	x6, xzr
  408118:	ldr	x5, [x8, #8]
  40811c:	bl	421720 <define_variable_in_set@@Base>
  408120:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408124:	ldr	x9, [x8, #2584]
  408128:	ldr	x20, [x23, #2544]
  40812c:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  408130:	cmp	x22, x9
  408134:	b.ls	40814c <set_file_variables@@Base+0x460>  // b.plast
  408138:	ldr	x0, [x28, #2560]
  40813c:	mov	x1, x22
  408140:	str	x22, [x8, #2584]
  408144:	bl	41803c <xrealloc@@Base>
  408148:	str	x0, [x28, #2560]
  40814c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408150:	ldr	x9, [x8, #2576]
  408154:	ldr	x22, [x28, #2560]
  408158:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  40815c:	cmp	x21, x9
  408160:	b.ls	408178 <set_file_variables@@Base+0x48c>  // b.plast
  408164:	ldr	x0, [x23, #2552]
  408168:	mov	x1, x21
  40816c:	str	x21, [x8, #2576]
  408170:	bl	41803c <xrealloc@@Base>
  408174:	str	x0, [x23, #2552]
  408178:	ldr	x21, [x23, #2552]
  40817c:	adrp	x2, 408000 <set_file_variables@@Base+0x314>
  408180:	adrp	x3, 408000 <set_file_variables@@Base+0x314>
  408184:	adrp	x4, 408000 <set_file_variables@@Base+0x314>
  408188:	add	x2, x2, #0x3ec
  40818c:	add	x3, x3, #0x418
  408190:	add	x4, x4, #0x420
  408194:	sub	x0, x29, #0x58
  408198:	mov	w1, #0x1f4                 	// #500
  40819c:	bl	40f974 <hash_init@@Base>
  4081a0:	ldr	x23, [x19, #24]
  4081a4:	cbz	x23, 40821c <set_file_variables@@Base+0x530>
  4081a8:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  4081ac:	b	4081c4 <set_file_variables@@Base+0x4d8>
  4081b0:	sub	x0, x29, #0x58
  4081b4:	mov	x1, x23
  4081b8:	bl	40fc04 <hash_insert_at@@Base>
  4081bc:	ldr	x23, [x23]
  4081c0:	cbz	x23, 40821c <set_file_variables@@Base+0x530>
  4081c4:	ldrb	w8, [x23, #33]
  4081c8:	tst	w8, #0x18
  4081cc:	b.ne	4081bc <set_file_variables@@Base+0x4d0>  // b.any
  4081d0:	sub	x0, x29, #0x58
  4081d4:	mov	x1, x23
  4081d8:	bl	40fad4 <hash_find_slot@@Base>
  4081dc:	ldr	x8, [x0]
  4081e0:	mov	x2, x0
  4081e4:	cbz	x8, 4081b0 <set_file_variables@@Base+0x4c4>
  4081e8:	ldr	x9, [x24, #2344]
  4081ec:	cmp	x8, x9
  4081f0:	b.eq	4081b0 <set_file_variables@@Base+0x4c4>  // b.none
  4081f4:	ldrh	w10, [x23, #32]
  4081f8:	ldrh	w9, [x8, #32]
  4081fc:	eor	w10, w9, w10
  408200:	tbz	w10, #9, 4081bc <set_file_variables@@Base+0x4d0>
  408204:	and	w9, w9, #0xfffffdff
  408208:	strh	w9, [x8, #32]
  40820c:	ldrh	w8, [x23, #32]
  408210:	and	w8, w8, #0xfffffdff
  408214:	strh	w8, [x23, #32]
  408218:	b	4081bc <set_file_variables@@Base+0x4d0>
  40821c:	ldr	x24, [x19, #24]
  408220:	cbz	x24, 408310 <set_file_variables@@Base+0x624>
  408224:	mov	w27, #0x20                  	// #32
  408228:	mov	x23, x20
  40822c:	b	408250 <set_file_variables@@Base+0x564>
  408230:	mov	x0, x21
  408234:	mov	x1, x25
  408238:	mov	x2, x26
  40823c:	bl	406790 <memcpy@plt>
  408240:	add	x21, x21, x26
  408244:	strb	w27, [x21], #1
  408248:	ldr	x24, [x24]
  40824c:	cbz	x24, 408314 <set_file_variables@@Base+0x628>
  408250:	ldrb	w8, [x24, #33]
  408254:	tst	w8, #0x18
  408258:	b.ne	408248 <set_file_variables@@Base+0x55c>  // b.any
  40825c:	sub	x0, x29, #0x58
  408260:	mov	x1, x24
  408264:	bl	40fbd8 <hash_find_item@@Base>
  408268:	cmp	x0, x24
  40826c:	b.ne	408248 <set_file_variables@@Base+0x55c>  // b.any
  408270:	ldr	x25, [x24, #8]
  408274:	cbnz	x25, 408280 <set_file_variables@@Base+0x594>
  408278:	ldr	x8, [x24, #16]
  40827c:	ldr	x25, [x8]
  408280:	mov	x0, x25
  408284:	bl	4070bc <ar_name@@Base>
  408288:	cbz	w0, 4082b4 <set_file_variables@@Base+0x5c8>
  40828c:	mov	w1, #0x28                  	// #40
  408290:	mov	x0, x25
  408294:	bl	406d10 <strchr@plt>
  408298:	add	x25, x0, #0x1
  40829c:	mov	x0, x25
  4082a0:	bl	4067d0 <strlen@plt>
  4082a4:	sub	x26, x0, #0x1
  4082a8:	ldrb	w8, [x24, #33]
  4082ac:	tbnz	w8, #1, 408230 <set_file_variables@@Base+0x544>
  4082b0:	b	4082c8 <set_file_variables@@Base+0x5dc>
  4082b4:	mov	x0, x25
  4082b8:	bl	4067d0 <strlen@plt>
  4082bc:	mov	x26, x0
  4082c0:	ldrb	w8, [x24, #33]
  4082c4:	tbnz	w8, #1, 408230 <set_file_variables@@Base+0x544>
  4082c8:	mov	x0, x23
  4082cc:	mov	x1, x25
  4082d0:	mov	x2, x26
  4082d4:	bl	406790 <memcpy@plt>
  4082d8:	add	x23, x23, x26
  4082dc:	strb	w27, [x23], #1
  4082e0:	ldrb	w8, [x24, #33]
  4082e4:	tbnz	w8, #0, 4082f4 <set_file_variables@@Base+0x608>
  4082e8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4082ec:	ldr	w8, [x8, #3296]
  4082f0:	cbz	w8, 408248 <set_file_variables@@Base+0x55c>
  4082f4:	mov	x0, x22
  4082f8:	mov	x1, x25
  4082fc:	mov	x2, x26
  408300:	bl	406790 <memcpy@plt>
  408304:	add	x22, x22, x26
  408308:	strb	w27, [x22], #1
  40830c:	b	408248 <set_file_variables@@Base+0x55c>
  408310:	mov	x23, x20
  408314:	sub	x0, x29, #0x58
  408318:	mov	w1, wzr
  40831c:	bl	40fe90 <hash_free@@Base>
  408320:	cmp	x23, x20
  408324:	cset	w8, hi  // hi = pmore
  408328:	sub	x8, x23, x8
  40832c:	strb	wzr, [x8]
  408330:	ldr	x8, [x19, #80]
  408334:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  408338:	add	x0, x0, #0x393
  40833c:	mov	w1, #0x1                   	// #1
  408340:	ldr	x5, [x8, #8]
  408344:	mov	w3, #0x6                   	// #6
  408348:	mov	x2, x20
  40834c:	mov	w4, wzr
  408350:	mov	x6, xzr
  408354:	bl	421720 <define_variable_in_set@@Base>
  408358:	ldr	x2, [x28, #2560]
  40835c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  408360:	add	x0, x0, #0x8a0
  408364:	mov	w1, #0x1                   	// #1
  408368:	cmp	x22, x2
  40836c:	cset	w8, hi  // hi = pmore
  408370:	sub	x8, x22, x8
  408374:	strb	wzr, [x8]
  408378:	ldr	x8, [x19, #80]
  40837c:	mov	w3, #0x6                   	// #6
  408380:	mov	w4, wzr
  408384:	mov	x6, xzr
  408388:	ldr	x5, [x8, #8]
  40838c:	bl	421720 <define_variable_in_set@@Base>
  408390:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408394:	ldr	x2, [x8, #2552]
  408398:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  40839c:	add	x0, x0, #0x5d
  4083a0:	mov	w1, #0x1                   	// #1
  4083a4:	cmp	x21, x2
  4083a8:	cset	w8, hi  // hi = pmore
  4083ac:	sub	x8, x21, x8
  4083b0:	strb	wzr, [x8]
  4083b4:	ldr	x8, [x19, #80]
  4083b8:	mov	w3, #0x6                   	// #6
  4083bc:	mov	w4, wzr
  4083c0:	mov	x6, xzr
  4083c4:	ldr	x5, [x8, #8]
  4083c8:	bl	421720 <define_variable_in_set@@Base>
  4083cc:	mov	sp, x29
  4083d0:	ldp	x20, x19, [sp, #80]
  4083d4:	ldp	x22, x21, [sp, #64]
  4083d8:	ldp	x24, x23, [sp, #48]
  4083dc:	ldp	x26, x25, [sp, #32]
  4083e0:	ldp	x28, x27, [sp, #16]
  4083e4:	ldp	x29, x30, [sp], #96
  4083e8:	ret
  4083ec:	stp	x29, x30, [sp, #-16]!
  4083f0:	mov	x8, x0
  4083f4:	ldr	x0, [x0, #8]
  4083f8:	mov	x29, sp
  4083fc:	cbnz	x0, 408408 <set_file_variables@@Base+0x71c>
  408400:	ldr	x8, [x8, #16]
  408404:	ldr	x0, [x8]
  408408:	bl	4102b4 <jhash_string@@Base>
  40840c:	mov	w0, w0
  408410:	ldp	x29, x30, [sp], #16
  408414:	ret
  408418:	mov	x0, xzr
  40841c:	ret
  408420:	stp	x29, x30, [sp, #-16]!
  408424:	mov	x8, x0
  408428:	ldr	x0, [x0, #8]
  40842c:	mov	x29, sp
  408430:	cbz	x0, 40844c <set_file_variables@@Base+0x760>
  408434:	ldr	x8, [x1, #8]
  408438:	cbz	x8, 40845c <set_file_variables@@Base+0x770>
  40843c:	mov	x1, x8
  408440:	bl	406cb0 <strcmp@plt>
  408444:	ldp	x29, x30, [sp], #16
  408448:	ret
  40844c:	ldr	x8, [x8, #16]
  408450:	ldr	x0, [x8]
  408454:	ldr	x8, [x1, #8]
  408458:	cbnz	x8, 40843c <set_file_variables@@Base+0x750>
  40845c:	ldr	x8, [x1, #16]
  408460:	ldr	x8, [x8]
  408464:	b	40843c <set_file_variables@@Base+0x750>

0000000000408468 <chop_commands@@Base>:
  408468:	stp	x29, x30, [sp, #-96]!
  40846c:	stp	x28, x27, [sp, #16]
  408470:	stp	x26, x25, [sp, #32]
  408474:	stp	x24, x23, [sp, #48]
  408478:	stp	x22, x21, [sp, #64]
  40847c:	stp	x20, x19, [sp, #80]
  408480:	mov	x29, sp
  408484:	cbz	x0, 408494 <chop_commands@@Base+0x2c>
  408488:	ldr	x8, [x0, #32]
  40848c:	mov	x19, x0
  408490:	cbz	x8, 4084b0 <chop_commands@@Base+0x48>
  408494:	ldp	x20, x19, [sp, #80]
  408498:	ldp	x22, x21, [sp, #64]
  40849c:	ldp	x24, x23, [sp, #48]
  4084a0:	ldp	x26, x25, [sp, #32]
  4084a4:	ldp	x28, x27, [sp, #16]
  4084a8:	ldp	x29, x30, [sp], #96
  4084ac:	ret
  4084b0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4084b4:	ldr	w8, [x8, #92]
  4084b8:	cbz	w8, 40850c <chop_commands@@Base+0xa4>
  4084bc:	ldr	x0, [x19, #24]
  4084c0:	bl	4067d0 <strlen@plt>
  4084c4:	mov	x21, x0
  4084c8:	mov	w0, #0x8                   	// #8
  4084cc:	bl	418070 <xmalloc@@Base>
  4084d0:	ldr	x8, [x19, #24]
  4084d4:	mov	x20, x0
  4084d8:	mov	x0, x8
  4084dc:	bl	4180bc <xstrdup@@Base>
  4084e0:	str	x0, [x20]
  4084e4:	cbz	x21, 408504 <chop_commands@@Base+0x9c>
  4084e8:	sub	x8, x21, #0x1
  4084ec:	ldrb	w9, [x0, x8]
  4084f0:	cmp	w9, #0xa
  4084f4:	b.ne	408504 <chop_commands@@Base+0x9c>  // b.any
  4084f8:	strb	wzr, [x0, x8]
  4084fc:	mov	w21, #0x1                   	// #1
  408500:	b	408634 <chop_commands@@Base+0x1cc>
  408504:	mov	w21, #0x1                   	// #1
  408508:	b	408634 <chop_commands@@Base+0x1cc>
  40850c:	mov	w0, #0x28                  	// #40
  408510:	bl	418070 <xmalloc@@Base>
  408514:	ldr	x22, [x19, #24]
  408518:	mov	x20, x0
  40851c:	ldrb	w8, [x22]
  408520:	cbz	w8, 408610 <chop_commands@@Base+0x1a8>
  408524:	mov	w24, wzr
  408528:	mov	w21, #0x5                   	// #5
  40852c:	b	408564 <chop_commands@@Base+0xfc>
  408530:	sub	x1, x23, x22
  408534:	mov	x0, x22
  408538:	bl	4180d8 <xstrndup@@Base>
  40853c:	and	x8, x24, #0xffff
  408540:	str	x0, [x20, x8, lsl #3]
  408544:	mov	x8, x23
  408548:	ldrb	w9, [x8], #1
  40854c:	cmp	w9, #0x0
  408550:	csel	x22, x23, x8, eq  // eq = none
  408554:	ldrb	w9, [x22]
  408558:	add	w8, w24, #0x1
  40855c:	mov	w24, w8
  408560:	cbz	w9, 408614 <chop_commands@@Base+0x1ac>
  408564:	mov	x23, x22
  408568:	b	408578 <chop_commands@@Base+0x110>
  40856c:	cmp	w8, #0x0
  408570:	cinc	x23, x23, ne  // ne = any
  408574:	cbz	w8, 4085f0 <chop_commands@@Base+0x188>
  408578:	mov	w1, #0xa                   	// #10
  40857c:	mov	x0, x23
  408580:	bl	406d10 <strchr@plt>
  408584:	cbz	x0, 4085e4 <chop_commands@@Base+0x17c>
  408588:	mov	x23, x0
  40858c:	cmp	x0, x22
  408590:	b.ls	4085f0 <chop_commands@@Base+0x188>  // b.plast
  408594:	ldurb	w8, [x23, #-1]
  408598:	cmp	w8, #0x5c
  40859c:	b.ne	4085f0 <chop_commands@@Base+0x188>  // b.any
  4085a0:	sub	x9, x23, #0x2
  4085a4:	mov	w8, #0x1                   	// #1
  4085a8:	cmp	x9, x22
  4085ac:	b.cc	4085c4 <chop_commands@@Base+0x15c>  // b.lo, b.ul, b.last
  4085b0:	ldrb	w10, [x9]
  4085b4:	cmp	w10, #0x5c
  4085b8:	cset	w10, eq  // eq = none
  4085bc:	cbnz	w10, 4085cc <chop_commands@@Base+0x164>
  4085c0:	b	40856c <chop_commands@@Base+0x104>
  4085c4:	mov	w10, wzr
  4085c8:	cbz	w10, 40856c <chop_commands@@Base+0x104>
  4085cc:	cmp	w8, #0x0
  4085d0:	cset	w8, eq  // eq = none
  4085d4:	sub	x9, x9, #0x1
  4085d8:	cmp	x9, x22
  4085dc:	b.cs	4085b0 <chop_commands@@Base+0x148>  // b.hs, b.nlast
  4085e0:	b	4085c4 <chop_commands@@Base+0x15c>
  4085e4:	mov	x0, x22
  4085e8:	bl	4067d0 <strlen@plt>
  4085ec:	add	x23, x22, x0
  4085f0:	cmp	w21, w24, uxth
  4085f4:	b.ne	408530 <chop_commands@@Base+0xc8>  // b.any
  4085f8:	add	w21, w21, #0x2
  4085fc:	lsl	x1, x21, #3
  408600:	mov	x0, x20
  408604:	bl	41803c <xrealloc@@Base>
  408608:	mov	x20, x0
  40860c:	b	408530 <chop_commands@@Base+0xc8>
  408610:	mov	w21, #0x5                   	// #5
  408614:	and	w22, w8, #0xffff
  408618:	cmp	w21, w22
  40861c:	b.eq	408634 <chop_commands@@Base+0x1cc>  // b.none
  408620:	lsl	x1, x22, #3
  408624:	mov	x0, x20
  408628:	bl	41803c <xrealloc@@Base>
  40862c:	mov	x20, x0
  408630:	mov	w21, w22
  408634:	cmp	w21, #0x10, lsl #12
  408638:	b.cs	408748 <chop_commands@@Base+0x2e0>  // b.hs, b.nlast
  40863c:	ldrb	w8, [x19, #51]
  408640:	mov	w0, w21
  408644:	strh	w21, [x19, #48]
  408648:	str	x20, [x19, #32]
  40864c:	and	w8, w8, #0xfe
  408650:	strb	w8, [x19, #51]
  408654:	bl	418070 <xmalloc@@Base>
  408658:	str	x0, [x19, #40]
  40865c:	cbz	w21, 408494 <chop_commands@@Base+0x2c>
  408660:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  408664:	adrp	x22, 425000 <_IO_stdin_used@@Base+0xe0>
  408668:	mov	w27, #0x5                   	// #5
  40866c:	mov	w8, wzr
  408670:	add	x25, x25, #0xcf0
  408674:	add	x22, x22, #0x7f
  408678:	mov	w26, #0x1                   	// #1
  40867c:	movk	w27, #0x20, lsl #16
  408680:	b	4086ac <chop_commands@@Base+0x244>
  408684:	orr	w23, w23, #0x1
  408688:	ldr	x8, [x19, #40]
  40868c:	and	w10, w23, #0x1
  408690:	strb	w23, [x8, x28]
  408694:	ldrb	w9, [x19, #51]
  408698:	add	w8, w28, #0x1
  40869c:	cmp	w21, w8, uxth
  4086a0:	orr	w9, w9, w10
  4086a4:	strb	w9, [x19, #51]
  4086a8:	b.ls	408494 <chop_commands@@Base+0x2c>  // b.plast
  4086ac:	and	x28, x8, #0xffff
  4086b0:	ldr	x24, [x20, x28, lsl #3]
  4086b4:	mov	w23, wzr
  4086b8:	ldrb	w8, [x24]
  4086bc:	ldrh	w9, [x25, x8, lsl #1]
  4086c0:	tbnz	w9, #1, 4086dc <chop_commands@@Base+0x274>
  4086c4:	sub	w9, w8, #0x2b
  4086c8:	cmp	w9, #0x15
  4086cc:	b.hi	40871c <chop_commands@@Base+0x2b4>  // b.pmore
  4086d0:	lsl	w9, w26, w9
  4086d4:	tst	w9, w27
  4086d8:	b.eq	40871c <chop_commands@@Base+0x2b4>  // b.none
  4086dc:	cmp	w8, #0x2b
  4086e0:	add	x24, x24, #0x1
  4086e4:	b.eq	408710 <chop_commands@@Base+0x2a8>  // b.none
  4086e8:	cmp	w8, #0x2d
  4086ec:	b.eq	408704 <chop_commands@@Base+0x29c>  // b.none
  4086f0:	cmp	w8, #0x40
  4086f4:	b.ne	4086b8 <chop_commands@@Base+0x250>  // b.any
  4086f8:	mov	w8, #0x2                   	// #2
  4086fc:	orr	w23, w23, w8
  408700:	b	4086b8 <chop_commands@@Base+0x250>
  408704:	mov	w8, #0x4                   	// #4
  408708:	orr	w23, w23, w8
  40870c:	b	4086b8 <chop_commands@@Base+0x250>
  408710:	mov	w8, #0x1                   	// #1
  408714:	orr	w23, w23, w8
  408718:	b	4086b8 <chop_commands@@Base+0x250>
  40871c:	tbnz	w23, #0, 408688 <chop_commands@@Base+0x220>
  408720:	mov	x0, x24
  408724:	mov	x1, x22
  408728:	bl	406e40 <strstr@plt>
  40872c:	cbnz	x0, 408684 <chop_commands@@Base+0x21c>
  408730:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408734:	mov	x0, x24
  408738:	add	x1, x1, #0x87
  40873c:	bl	406e40 <strstr@plt>
  408740:	cbnz	x0, 408684 <chop_commands@@Base+0x21c>
  408744:	b	408688 <chop_commands@@Base+0x220>
  408748:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  40874c:	add	x1, x1, #0x5f
  408750:	mov	w2, #0x5                   	// #5
  408754:	mov	x0, xzr
  408758:	bl	406e50 <dcgettext@plt>
  40875c:	mov	x2, x0
  408760:	mov	w1, #0x14                  	// #20
  408764:	mov	x0, x19
  408768:	mov	w3, w21
  40876c:	bl	4190fc <fatal@@Base>

0000000000408770 <execute_file_commands@@Base>:
  408770:	stp	x29, x30, [sp, #-32]!
  408774:	ldr	x8, [x0, #32]
  408778:	str	x19, [sp, #16]
  40877c:	mov	x19, x0
  408780:	mov	x29, sp
  408784:	ldr	x9, [x8, #24]
  408788:	ldrb	w11, [x9]
  40878c:	cmp	w11, #0x0
  408790:	cset	w8, eq  // eq = none
  408794:	cbz	w11, 4087f4 <execute_file_commands@@Base+0x84>
  408798:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  40879c:	mov	w13, #0x5                   	// #5
  4087a0:	add	x9, x9, #0x1
  4087a4:	add	x10, x10, #0xcf0
  4087a8:	mov	w12, #0x1                   	// #1
  4087ac:	movk	w13, #0x20, lsl #16
  4087b0:	b	4087c4 <execute_file_commands@@Base+0x54>
  4087b4:	ldrb	w11, [x9], #1
  4087b8:	cmp	w11, #0x0
  4087bc:	cset	w8, eq  // eq = none
  4087c0:	cbz	w11, 4087f4 <execute_file_commands@@Base+0x84>
  4087c4:	and	x14, x11, #0xff
  4087c8:	ldrh	w14, [x10, x14, lsl #1]
  4087cc:	tst	w14, #0x6
  4087d0:	b.ne	4087b4 <execute_file_commands@@Base+0x44>  // b.any
  4087d4:	and	w11, w11, #0xff
  4087d8:	sub	w11, w11, #0x2b
  4087dc:	cmp	w11, #0x15
  4087e0:	b.hi	4087f0 <execute_file_commands@@Base+0x80>  // b.pmore
  4087e4:	lsl	w11, w12, w11
  4087e8:	tst	w11, w13
  4087ec:	b.ne	4087b4 <execute_file_commands@@Base+0x44>  // b.any
  4087f0:	tbz	w8, #0, 408820 <execute_file_commands@@Base+0xb0>
  4087f4:	mov	w1, #0x2                   	// #2
  4087f8:	mov	x0, x19
  4087fc:	bl	40b904 <set_command_state@@Base>
  408800:	ldr	w8, [x19, #136]
  408804:	mov	x0, x19
  408808:	and	w8, w8, #0xfffffffc
  40880c:	str	w8, [x19, #136]
  408810:	bl	41e408 <notice_finished_file@@Base>
  408814:	ldr	x19, [sp, #16]
  408818:	ldp	x29, x30, [sp], #32
  40881c:	ret
  408820:	mov	x0, x19
  408824:	mov	w1, wzr
  408828:	bl	421d3c <initialize_file_variables@@Base>
  40882c:	mov	x0, x19
  408830:	bl	407cec <set_file_variables@@Base>
  408834:	ldrb	w8, [x19, #136]
  408838:	tbz	w8, #6, 408844 <execute_file_commands@@Base+0xd4>
  40883c:	ldr	x0, [x19]
  408840:	bl	414974 <unload_file@@Base>
  408844:	mov	x0, x19
  408848:	bl	412c80 <new_job@@Base>
  40884c:	b	408814 <execute_file_commands@@Base+0xa4>

0000000000408850 <fatal_error_signal@@Base>:
  408850:	stp	x29, x30, [sp, #-48]!
  408854:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408858:	mov	w9, #0x1                   	// #1
  40885c:	mov	x1, xzr
  408860:	str	x21, [sp, #16]
  408864:	stp	x20, x19, [sp, #32]
  408868:	mov	x29, sp
  40886c:	mov	w19, w0
  408870:	str	w9, [x8, #2592]
  408874:	bl	4069b0 <signal@plt>
  408878:	cmp	w19, #0xf
  40887c:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  408880:	b.ne	40888c <fatal_error_signal@@Base+0x3c>  // b.any
  408884:	ldr	x21, [x20, #3048]
  408888:	cbnz	x21, 408948 <fatal_error_signal@@Base+0xf8>
  40888c:	cmp	w19, #0xf
  408890:	b.hi	408968 <fatal_error_signal@@Base+0x118>  // b.pmore
  408894:	mov	w8, #0x1                   	// #1
  408898:	lsl	w8, w8, w19
  40889c:	mov	w9, #0x800e                	// #32782
  4088a0:	tst	w8, w9
  4088a4:	b.eq	408968 <fatal_error_signal@@Base+0x118>  // b.none
  4088a8:	ldr	x21, [x20, #3048]
  4088ac:	cbnz	x21, 408920 <fatal_error_signal@@Base+0xd0>
  4088b0:	ldr	x20, [x20, #3048]
  4088b4:	cbz	x20, 4088c8 <fatal_error_signal@@Base+0x78>
  4088b8:	mov	x0, x20
  4088bc:	bl	4089a0 <delete_child_targets@@Base>
  4088c0:	ldr	x20, [x20, #32]
  4088c4:	cbnz	x20, 4088b8 <fatal_error_signal@@Base+0x68>
  4088c8:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4088cc:	ldr	w8, [x20, #3056]
  4088d0:	cbz	w8, 4088e8 <fatal_error_signal@@Base+0x98>
  4088d4:	mov	w0, #0x1                   	// #1
  4088d8:	mov	w1, wzr
  4088dc:	bl	411aac <reap_children@@Base>
  4088e0:	ldr	w8, [x20, #3056]
  4088e4:	cbnz	w8, 4088d4 <fatal_error_signal@@Base+0x84>
  4088e8:	mov	w0, #0x1                   	// #1
  4088ec:	bl	40ad20 <remove_intermediates@@Base>
  4088f0:	cmp	w19, #0x3
  4088f4:	b.eq	40898c <fatal_error_signal@@Base+0x13c>  // b.none
  4088f8:	bl	4069e0 <getpid@plt>
  4088fc:	mov	w1, w19
  408900:	bl	406910 <kill@plt>
  408904:	tbnz	w0, #31, 408994 <fatal_error_signal@@Base+0x144>
  408908:	ldp	x20, x19, [sp, #32]
  40890c:	ldr	x21, [sp, #16]
  408910:	ldp	x29, x30, [sp], #48
  408914:	ret
  408918:	ldr	x21, [x21, #32]
  40891c:	cbz	x21, 4088b0 <fatal_error_signal@@Base+0x60>
  408920:	ldrb	w8, [x21, #80]
  408924:	tbz	w8, #0, 408918 <fatal_error_signal@@Base+0xc8>
  408928:	ldr	w0, [x21, #76]
  40892c:	cmp	w0, #0x1
  408930:	b.lt	408918 <fatal_error_signal@@Base+0xc8>  // b.tstop
  408934:	mov	w1, w19
  408938:	bl	4247a8 <remote_kill@@Base>
  40893c:	b	408918 <fatal_error_signal@@Base+0xc8>
  408940:	ldr	x21, [x21, #32]
  408944:	cbz	x21, 40888c <fatal_error_signal@@Base+0x3c>
  408948:	ldrb	w8, [x21, #80]
  40894c:	tbnz	w8, #0, 408940 <fatal_error_signal@@Base+0xf0>
  408950:	ldr	w0, [x21, #76]
  408954:	cmp	w0, #0x1
  408958:	b.lt	408940 <fatal_error_signal@@Base+0xf0>  // b.tstop
  40895c:	mov	w1, #0xf                   	// #15
  408960:	bl	406910 <kill@plt>
  408964:	b	408940 <fatal_error_signal@@Base+0xf0>
  408968:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  40896c:	ldr	w8, [x20, #3056]
  408970:	cbz	w8, 4088e8 <fatal_error_signal@@Base+0x98>
  408974:	mov	w0, #0x1                   	// #1
  408978:	mov	w1, #0x1                   	// #1
  40897c:	bl	411aac <reap_children@@Base>
  408980:	ldr	w8, [x20, #3056]
  408984:	cbnz	w8, 408974 <fatal_error_signal@@Base+0x124>
  408988:	b	4088e8 <fatal_error_signal@@Base+0x98>
  40898c:	mov	w0, #0x1                   	// #1
  408990:	bl	4067f0 <exit@plt>
  408994:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  408998:	add	x0, x0, #0x8f
  40899c:	bl	4184d0 <pfatal_with_name@@Base>

00000000004089a0 <delete_child_targets@@Base>:
  4089a0:	stp	x29, x30, [sp, #-32]!
  4089a4:	stp	x20, x19, [sp, #16]
  4089a8:	ldrb	w8, [x0, #80]
  4089ac:	mov	x29, sp
  4089b0:	tbnz	w8, #3, 4089fc <delete_child_targets@@Base+0x5c>
  4089b4:	ldr	w8, [x0, #76]
  4089b8:	mov	x19, x0
  4089bc:	tbnz	w8, #31, 4089fc <delete_child_targets@@Base+0x5c>
  4089c0:	ldr	x0, [x19, #40]
  4089c4:	mov	x1, xzr
  4089c8:	bl	408a08 <delete_child_targets@@Base+0x68>
  4089cc:	ldr	x8, [x19, #40]
  4089d0:	ldr	x20, [x8, #48]
  4089d4:	cbz	x20, 4089f0 <delete_child_targets@@Base+0x50>
  4089d8:	ldr	x8, [x19, #40]
  4089dc:	ldr	x0, [x20, #16]
  4089e0:	ldr	x1, [x8]
  4089e4:	bl	408a08 <delete_child_targets@@Base+0x68>
  4089e8:	ldr	x20, [x20]
  4089ec:	cbnz	x20, 4089d8 <delete_child_targets@@Base+0x38>
  4089f0:	ldrb	w8, [x19, #80]
  4089f4:	orr	w8, w8, #0x8
  4089f8:	strb	w8, [x19, #80]
  4089fc:	ldp	x20, x19, [sp, #16]
  408a00:	ldp	x29, x30, [sp], #32
  408a04:	ret
  408a08:	sub	sp, sp, #0xb0
  408a0c:	stp	x29, x30, [sp, #128]
  408a10:	stp	x20, x19, [sp, #160]
  408a14:	ldrh	w8, [x0, #136]
  408a18:	str	x21, [sp, #144]
  408a1c:	add	x29, sp, #0x80
  408a20:	tst	w8, #0x20202020
  408a24:	b.eq	408a3c <delete_child_targets@@Base+0x9c>  // b.none
  408a28:	ldp	x20, x19, [sp, #160]
  408a2c:	ldr	x21, [sp, #144]
  408a30:	ldp	x29, x30, [sp, #128]
  408a34:	add	sp, sp, #0xb0
  408a38:	ret
  408a3c:	mov	x19, x0
  408a40:	ldr	x0, [x0]
  408a44:	mov	x20, x1
  408a48:	bl	4070bc <ar_name@@Base>
  408a4c:	cbz	w0, 408ad4 <delete_child_targets@@Base+0x134>
  408a50:	ldr	x8, [x19, #112]
  408a54:	ldr	x0, [x19]
  408a58:	sub	x9, x8, #0x3
  408a5c:	lsr	x9, x9, #30
  408a60:	cmp	x8, #0x1
  408a64:	csinv	x21, x9, xzr, ne  // ne = any
  408a68:	bl	4071c0 <ar_member_date@@Base>
  408a6c:	cmp	x0, x21
  408a70:	b.eq	408a28 <delete_child_targets@@Base+0x88>  // b.none
  408a74:	cbz	x20, 408b68 <delete_child_targets@@Base+0x1c8>
  408a78:	mov	x0, x20
  408a7c:	bl	4067d0 <strlen@plt>
  408a80:	ldr	x8, [x19]
  408a84:	mov	x21, x0
  408a88:	mov	x0, x8
  408a8c:	bl	4067d0 <strlen@plt>
  408a90:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408a94:	add	x21, x0, x21
  408a98:	add	x1, x1, #0xd7
  408a9c:	mov	w2, #0x5                   	// #5
  408aa0:	mov	x0, xzr
  408aa4:	bl	406e50 <dcgettext@plt>
  408aa8:	ldr	x4, [x19]
  408aac:	mov	x2, x0
  408ab0:	mov	x0, xzr
  408ab4:	mov	x1, x21
  408ab8:	mov	x3, x20
  408abc:	bl	418f84 <error@@Base>
  408ac0:	b	408a28 <delete_child_targets@@Base+0x88>
  408ac4:	bl	406f00 <__errno_location@plt>
  408ac8:	ldr	w8, [x0]
  408acc:	cmp	w8, #0x4
  408ad0:	b.ne	408aec <delete_child_targets@@Base+0x14c>  // b.any
  408ad4:	ldr	x0, [x19]
  408ad8:	mov	x1, sp
  408adc:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  408ae0:	mov	w21, w0
  408ae4:	cmn	w0, #0x1
  408ae8:	b.eq	408ac4 <delete_child_targets@@Base+0x124>  // b.none
  408aec:	cbnz	w21, 408a28 <delete_child_targets@@Base+0x88>
  408af0:	ldr	w8, [sp, #16]
  408af4:	and	w8, w8, #0xf000
  408af8:	cmp	w8, #0x8, lsl #12
  408afc:	b.ne	408a28 <delete_child_targets@@Base+0x88>  // b.any
  408b00:	ldr	x0, [x19]
  408b04:	ldp	x1, x2, [sp, #88]
  408b08:	bl	40b950 <file_timestamp_cons@@Base>
  408b0c:	ldr	x8, [x19, #112]
  408b10:	cmp	x0, x8
  408b14:	b.eq	408a28 <delete_child_targets@@Base+0x88>  // b.none
  408b18:	cbz	x20, 408ba0 <delete_child_targets@@Base+0x200>
  408b1c:	mov	x0, x20
  408b20:	bl	4067d0 <strlen@plt>
  408b24:	ldr	x8, [x19]
  408b28:	mov	x21, x0
  408b2c:	mov	x0, x8
  408b30:	bl	4067d0 <strlen@plt>
  408b34:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408b38:	add	x21, x0, x21
  408b3c:	add	x1, x1, #0x140
  408b40:	mov	w2, #0x5                   	// #5
  408b44:	mov	x0, xzr
  408b48:	bl	406e50 <dcgettext@plt>
  408b4c:	ldr	x4, [x19]
  408b50:	mov	x2, x0
  408b54:	mov	x0, xzr
  408b58:	mov	x1, x21
  408b5c:	mov	x3, x20
  408b60:	bl	418f84 <error@@Base>
  408b64:	b	408bd4 <delete_child_targets@@Base+0x234>
  408b68:	ldr	x0, [x19]
  408b6c:	bl	4067d0 <strlen@plt>
  408b70:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408b74:	mov	x20, x0
  408b78:	add	x1, x1, #0x10e
  408b7c:	mov	w2, #0x5                   	// #5
  408b80:	mov	x0, xzr
  408b84:	bl	406e50 <dcgettext@plt>
  408b88:	ldr	x3, [x19]
  408b8c:	mov	x2, x0
  408b90:	mov	x0, xzr
  408b94:	mov	x1, x20
  408b98:	bl	418f84 <error@@Base>
  408b9c:	b	408a28 <delete_child_targets@@Base+0x88>
  408ba0:	ldr	x0, [x19]
  408ba4:	bl	4067d0 <strlen@plt>
  408ba8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408bac:	mov	x20, x0
  408bb0:	add	x1, x1, #0x15c
  408bb4:	mov	w2, #0x5                   	// #5
  408bb8:	mov	x0, xzr
  408bbc:	bl	406e50 <dcgettext@plt>
  408bc0:	ldr	x3, [x19]
  408bc4:	mov	x2, x0
  408bc8:	mov	x0, xzr
  408bcc:	mov	x1, x20
  408bd0:	bl	418f84 <error@@Base>
  408bd4:	ldr	x0, [x19]
  408bd8:	bl	406f50 <unlink@plt>
  408bdc:	tbz	w0, #31, 408a28 <delete_child_targets@@Base+0x88>
  408be0:	bl	406f00 <__errno_location@plt>
  408be4:	ldr	w8, [x0]
  408be8:	cmp	w8, #0x2
  408bec:	b.eq	408a28 <delete_child_targets@@Base+0x88>  // b.none
  408bf0:	ldr	x1, [x19]
  408bf4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  408bf8:	add	x0, x0, #0x173
  408bfc:	bl	41928c <perror_with_name@@Base>
  408c00:	b	408a28 <delete_child_targets@@Base+0x88>

0000000000408c04 <print_commands@@Base>:
  408c04:	stp	x29, x30, [sp, #-48]!
  408c08:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408c0c:	stp	x20, x19, [sp, #32]
  408c10:	mov	x19, x0
  408c14:	add	x1, x1, #0x94
  408c18:	mov	w2, #0x5                   	// #5
  408c1c:	mov	x0, xzr
  408c20:	str	x21, [sp, #16]
  408c24:	mov	x29, sp
  408c28:	bl	406e50 <dcgettext@plt>
  408c2c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408c30:	ldr	x1, [x8, #2512]
  408c34:	bl	4067e0 <fputs@plt>
  408c38:	ldr	x8, [x19]
  408c3c:	cbz	x8, 408c60 <print_commands@@Base+0x5c>
  408c40:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408c44:	add	x1, x1, #0xb6
  408c48:	mov	w2, #0x5                   	// #5
  408c4c:	mov	x0, xzr
  408c50:	bl	406e50 <dcgettext@plt>
  408c54:	ldp	x1, x2, [x19]
  408c58:	bl	406ef0 <printf@plt>
  408c5c:	b	408c78 <print_commands@@Base+0x74>
  408c60:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  408c64:	add	x1, x1, #0xa9
  408c68:	mov	w2, #0x5                   	// #5
  408c6c:	mov	x0, xzr
  408c70:	bl	406e50 <dcgettext@plt>
  408c74:	bl	406c40 <puts@plt>
  408c78:	ldr	x3, [x19, #24]
  408c7c:	ldrb	w8, [x3]
  408c80:	cbz	w8, 408d08 <print_commands@@Base+0x104>
  408c84:	adrp	x19, 425000 <_IO_stdin_used@@Base+0xe0>
  408c88:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  408c8c:	add	x19, x19, #0xcf
  408c90:	b	408cbc <print_commands@@Base+0xb8>
  408c94:	ldrb	w1, [x20, #2392]
  408c98:	sub	w2, w21, w3
  408c9c:	mov	x0, x19
  408ca0:	bl	406ef0 <printf@plt>
  408ca4:	mov	x8, x21
  408ca8:	ldrb	w9, [x8], #1
  408cac:	cmp	w9, #0xa
  408cb0:	csel	x3, x21, x8, ne  // ne = any
  408cb4:	ldrb	w8, [x3]
  408cb8:	cbz	w8, 408d08 <print_commands@@Base+0x104>
  408cbc:	ldrb	w8, [x3]
  408cc0:	mov	x21, x3
  408cc4:	cbz	w8, 408c94 <print_commands@@Base+0x90>
  408cc8:	mov	w9, wzr
  408ccc:	mov	x21, x3
  408cd0:	b	408cf4 <print_commands@@Base+0xf0>
  408cd4:	cmp	w9, #0x0
  408cd8:	and	w9, w8, #0xff
  408cdc:	ldrb	w8, [x21, #1]!
  408ce0:	cset	w10, eq  // eq = none
  408ce4:	cmp	w9, #0x5c
  408ce8:	cset	w9, eq  // eq = none
  408cec:	and	w9, w9, w10
  408cf0:	cbz	w8, 408c94 <print_commands@@Base+0x90>
  408cf4:	cbnz	w9, 408cd4 <print_commands@@Base+0xd0>
  408cf8:	and	w10, w8, #0xff
  408cfc:	cmp	w10, #0xa
  408d00:	b.ne	408cd4 <print_commands@@Base+0xd0>  // b.any
  408d04:	b	408c94 <print_commands@@Base+0x90>
  408d08:	ldp	x20, x19, [sp, #32]
  408d0c:	ldr	x21, [sp, #16]
  408d10:	ldp	x29, x30, [sp], #48
  408d14:	ret

0000000000408d18 <set_default_suffixes@@Base>:
  408d18:	stp	x29, x30, [sp, #-32]!
  408d1c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  408d20:	add	x0, x0, #0x53
  408d24:	str	x19, [sp, #16]
  408d28:	mov	x29, sp
  408d2c:	bl	420f28 <strcache_add@@Base>
  408d30:	bl	40a830 <enter_file@@Base>
  408d34:	adrp	x19, 440000 <shell_var@@Base+0x18>
  408d38:	str	x0, [x19, #248]
  408d3c:	ldr	w8, [x0, #136]
  408d40:	orr	w8, w8, #0x10
  408d44:	str	w8, [x0, #136]
  408d48:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408d4c:	ldr	w8, [x8, #3264]
  408d50:	cbz	w8, 408d74 <set_default_suffixes@@Base+0x5c>
  408d54:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408d58:	ldr	x8, [x8, #2440]
  408d5c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  408d60:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  408d64:	add	x0, x0, #0x54
  408d68:	ldr	x5, [x8, #8]
  408d6c:	add	x2, x2, #0x989
  408d70:	b	408de0 <set_default_suffixes@@Base+0xc8>
  408d74:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408d78:	add	x8, x8, #0x420
  408d7c:	add	x0, x29, #0x18
  408d80:	mov	w1, #0x28                  	// #40
  408d84:	mov	w2, #0x1                   	// #1
  408d88:	mov	x3, xzr
  408d8c:	mov	w4, wzr
  408d90:	str	x8, [x29, #24]
  408d94:	bl	41b484 <parse_file_seq@@Base>
  408d98:	mov	x1, xzr
  408d9c:	bl	40b02c <enter_prereqs@@Base>
  408da0:	ldr	x8, [x19, #248]
  408da4:	str	x0, [x8, #24]
  408da8:	cbz	x0, 408dc4 <set_default_suffixes@@Base+0xac>
  408dac:	ldr	x8, [x0, #16]
  408db0:	ldr	w9, [x8, #136]
  408db4:	orr	w9, w9, #0x10
  408db8:	str	w9, [x8, #136]
  408dbc:	ldr	x0, [x0]
  408dc0:	cbnz	x0, 408dac <set_default_suffixes@@Base+0x94>
  408dc4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408dc8:	ldr	x8, [x8, #2440]
  408dcc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  408dd0:	adrp	x2, 43c000 <memcpy@GLIBC_2.17>
  408dd4:	add	x0, x0, #0x54
  408dd8:	ldr	x5, [x8, #8]
  408ddc:	add	x2, x2, #0x420
  408de0:	mov	w1, #0x8                   	// #8
  408de4:	mov	w3, wzr
  408de8:	mov	w4, wzr
  408dec:	mov	x6, xzr
  408df0:	bl	421720 <define_variable_in_set@@Base>
  408df4:	ldr	x19, [sp, #16]
  408df8:	ldp	x29, x30, [sp], #32
  408dfc:	ret

0000000000408e00 <install_default_suffix_rules@@Base>:
  408e00:	stp	x29, x30, [sp, #-48]!
  408e04:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408e08:	ldr	w8, [x8, #3264]
  408e0c:	str	x21, [sp, #16]
  408e10:	stp	x20, x19, [sp, #32]
  408e14:	mov	x29, sp
  408e18:	cbnz	w8, 408e74 <install_default_suffix_rules@@Base+0x74>
  408e1c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  408e20:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x10e0>
  408e24:	add	x0, x0, #0x45a
  408e28:	add	x20, x20, #0x48
  408e2c:	mov	w21, #0x9                   	// #9
  408e30:	bl	420f28 <strcache_add@@Base>
  408e34:	bl	40a830 <enter_file@@Base>
  408e38:	mov	x19, x0
  408e3c:	mov	w0, #0x38                  	// #56
  408e40:	bl	418070 <xmalloc@@Base>
  408e44:	str	x0, [x19, #32]
  408e48:	str	xzr, [x0]
  408e4c:	ldur	x0, [x20, #-8]
  408e50:	bl	4180bc <xstrdup@@Base>
  408e54:	ldr	x8, [x19, #32]
  408e58:	stp	x0, xzr, [x8, #24]
  408e5c:	strb	w21, [x8, #50]
  408e60:	ldr	w8, [x19, #136]
  408e64:	orr	w8, w8, #0x10
  408e68:	str	w8, [x19, #136]
  408e6c:	ldr	x0, [x20], #16
  408e70:	cbnz	x0, 408e30 <install_default_suffix_rules@@Base+0x30>
  408e74:	ldp	x20, x19, [sp, #32]
  408e78:	ldr	x21, [sp, #16]
  408e7c:	ldp	x29, x30, [sp], #48
  408e80:	ret

0000000000408e84 <install_default_implicit_rules@@Base>:
  408e84:	stp	x29, x30, [sp, #-32]!
  408e88:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408e8c:	ldr	w8, [x8, #3264]
  408e90:	str	x19, [sp, #16]
  408e94:	mov	x29, sp
  408e98:	cbnz	w8, 408eec <install_default_implicit_rules@@Base+0x68>
  408e9c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408ea0:	ldr	x8, [x8, #1208]
  408ea4:	cbz	x8, 408ec4 <install_default_implicit_rules@@Base+0x40>
  408ea8:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  408eac:	add	x19, x19, #0x4b8
  408eb0:	mov	x0, x19
  408eb4:	mov	w1, wzr
  408eb8:	bl	4207d8 <install_pattern_rule@@Base>
  408ebc:	ldr	x8, [x19, #24]!
  408ec0:	cbnz	x8, 408eb0 <install_default_implicit_rules@@Base+0x2c>
  408ec4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408ec8:	ldr	x8, [x8, #1328]
  408ecc:	cbz	x8, 408eec <install_default_implicit_rules@@Base+0x68>
  408ed0:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  408ed4:	add	x19, x19, #0x530
  408ed8:	mov	w1, #0x1                   	// #1
  408edc:	mov	x0, x19
  408ee0:	bl	4207d8 <install_pattern_rule@@Base>
  408ee4:	ldr	x8, [x19, #24]!
  408ee8:	cbnz	x8, 408ed8 <install_default_implicit_rules@@Base+0x54>
  408eec:	ldr	x19, [sp, #16]
  408ef0:	ldp	x29, x30, [sp], #32
  408ef4:	ret

0000000000408ef8 <define_default_variables@@Base>:
  408ef8:	stp	x29, x30, [sp, #-48]!
  408efc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  408f00:	ldr	w8, [x8, #3268]
  408f04:	str	x21, [sp, #16]
  408f08:	stp	x20, x19, [sp, #32]
  408f0c:	mov	x29, sp
  408f10:	cbnz	w8, 408f5c <define_default_variables@@Base+0x64>
  408f14:	adrp	x19, 425000 <_IO_stdin_used@@Base+0xe0>
  408f18:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x10e0>
  408f1c:	add	x19, x19, #0x903
  408f20:	add	x20, x20, #0x368
  408f24:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  408f28:	mov	x0, x19
  408f2c:	bl	4067d0 <strlen@plt>
  408f30:	ldr	x8, [x21, #2440]
  408f34:	ldur	x2, [x20, #-8]
  408f38:	mov	x1, x0
  408f3c:	mov	w4, #0x1                   	// #1
  408f40:	ldr	x5, [x8, #8]
  408f44:	mov	x0, x19
  408f48:	mov	w3, wzr
  408f4c:	mov	x6, xzr
  408f50:	bl	421720 <define_variable_in_set@@Base>
  408f54:	ldr	x19, [x20], #16
  408f58:	cbnz	x19, 408f28 <define_default_variables@@Base+0x30>
  408f5c:	ldp	x20, x19, [sp, #32]
  408f60:	ldr	x21, [sp, #16]
  408f64:	ldp	x29, x30, [sp], #48
  408f68:	ret

0000000000408f6c <undefine_default_variables@@Base>:
  408f6c:	stp	x29, x30, [sp, #-32]!
  408f70:	stp	x20, x19, [sp, #16]
  408f74:	adrp	x19, 425000 <_IO_stdin_used@@Base+0xe0>
  408f78:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x10e0>
  408f7c:	add	x19, x19, #0x903
  408f80:	add	x20, x20, #0x368
  408f84:	mov	x29, sp
  408f88:	mov	x0, x19
  408f8c:	bl	4067d0 <strlen@plt>
  408f90:	mov	x1, x0
  408f94:	mov	x0, x19
  408f98:	mov	w2, wzr
  408f9c:	mov	x3, xzr
  408fa0:	bl	4219e0 <undefine_variable_in_set@@Base>
  408fa4:	ldr	x19, [x20], #16
  408fa8:	cbnz	x19, 408f88 <undefine_default_variables@@Base+0x1c>
  408fac:	ldp	x20, x19, [sp, #16]
  408fb0:	ldp	x29, x30, [sp], #32
  408fb4:	ret

0000000000408fb8 <dir_file_exists_p@@Base>:
  408fb8:	stp	x29, x30, [sp, #-32]!
  408fbc:	str	x19, [sp, #16]
  408fc0:	mov	x29, sp
  408fc4:	mov	x19, x1
  408fc8:	bl	4091e4 <dir_file_exists_p@@Base+0x22c>
  408fcc:	ldr	x0, [x0, #8]
  408fd0:	mov	x1, x19
  408fd4:	bl	408fe4 <dir_file_exists_p@@Base+0x2c>
  408fd8:	ldr	x19, [sp, #16]
  408fdc:	ldp	x29, x30, [sp], #32
  408fe0:	ret
  408fe4:	sub	sp, sp, #0x80
  408fe8:	stp	x29, x30, [sp, #32]
  408fec:	stp	x28, x27, [sp, #48]
  408ff0:	stp	x26, x25, [sp, #64]
  408ff4:	stp	x24, x23, [sp, #80]
  408ff8:	stp	x22, x21, [sp, #96]
  408ffc:	stp	x20, x19, [sp, #112]
  409000:	add	x29, sp, #0x20
  409004:	cbz	x0, 40918c <dir_file_exists_p@@Base+0x1d4>
  409008:	mov	x21, x0
  40900c:	ldr	x8, [x21, #16]!
  409010:	mov	x19, x0
  409014:	cbz	x8, 40918c <dir_file_exists_p@@Base+0x1d4>
  409018:	mov	x20, x1
  40901c:	cbz	x1, 409060 <dir_file_exists_p@@Base+0xa8>
  409020:	ldrb	w8, [x20]
  409024:	cbz	w8, 409064 <dir_file_exists_p@@Base+0xac>
  409028:	mov	x0, x20
  40902c:	str	x20, [sp, #8]
  409030:	bl	4067d0 <strlen@plt>
  409034:	str	x0, [sp, #16]
  409038:	add	x1, sp, #0x8
  40903c:	mov	x0, x21
  409040:	bl	40fbd8 <hash_find_item@@Base>
  409044:	cbz	x0, 409070 <dir_file_exists_p@@Base+0xb8>
  409048:	ldrh	w9, [x0, #16]
  40904c:	mov	w8, wzr
  409050:	cmp	w9, #0x0
  409054:	cset	w22, eq  // eq = none
  409058:	cbnz	w8, 409078 <dir_file_exists_p@@Base+0xc0>
  40905c:	b	409190 <dir_file_exists_p@@Base+0x1d8>
  409060:	b	409078 <dir_file_exists_p@@Base+0xc0>
  409064:	mov	w22, #0x1                   	// #1
  409068:	cbnz	w8, 409078 <dir_file_exists_p@@Base+0xc0>
  40906c:	b	409190 <dir_file_exists_p@@Base+0x1d8>
  409070:	mov	w8, #0x1                   	// #1
  409074:	cbz	w8, 409190 <dir_file_exists_p@@Base+0x1d8>
  409078:	ldr	x8, [x19, #104]
  40907c:	cbz	x8, 40918c <dir_file_exists_p@@Base+0x1d4>
  409080:	bl	406f00 <__errno_location@plt>
  409084:	mov	x23, x0
  409088:	add	x8, x20, #0x1
  40908c:	str	x8, [sp]
  409090:	b	40909c <dir_file_exists_p@@Base+0xe4>
  409094:	cmp	w8, #0x4
  409098:	b.ne	4091d8 <dir_file_exists_p@@Base+0x220>  // b.any
  40909c:	str	wzr, [x23]
  4090a0:	ldr	x0, [x19, #104]
  4090a4:	bl	406b40 <readdir@plt>
  4090a8:	mov	x25, x0
  4090ac:	cbnz	x0, 4090cc <dir_file_exists_p@@Base+0x114>
  4090b0:	ldr	w8, [x23]
  4090b4:	cbnz	w8, 409094 <dir_file_exists_p@@Base+0xdc>
  4090b8:	mov	w8, #0x3                   	// #3
  4090bc:	cbz	w8, 40909c <dir_file_exists_p@@Base+0xe4>
  4090c0:	cmp	w8, #0x2
  4090c4:	b.eq	40909c <dir_file_exists_p@@Base+0xe4>  // b.none
  4090c8:	b	409180 <dir_file_exists_p@@Base+0x1c8>
  4090cc:	ldr	x8, [x25]
  4090d0:	cbz	x8, 40916c <dir_file_exists_p@@Base+0x1b4>
  4090d4:	add	x26, x25, #0x13
  4090d8:	mov	x0, x26
  4090dc:	bl	4067d0 <strlen@plt>
  4090e0:	mov	x27, x0
  4090e4:	stp	x26, x0, [sp, #8]
  4090e8:	add	x1, sp, #0x8
  4090ec:	mov	x0, x21
  4090f0:	bl	40fad4 <hash_find_slot@@Base>
  4090f4:	mov	x28, x0
  4090f8:	mov	w0, #0x18                  	// #24
  4090fc:	bl	418070 <xmalloc@@Base>
  409100:	mov	x24, x0
  409104:	mov	x0, x26
  409108:	mov	x1, x27
  40910c:	bl	421000 <strcache_add_len@@Base>
  409110:	str	x0, [x24]
  409114:	ldrb	w8, [x25, #18]
  409118:	mov	x0, x21
  40911c:	mov	x1, x24
  409120:	mov	x2, x28
  409124:	str	x27, [x24, #8]
  409128:	strb	w8, [x24, #18]
  40912c:	strh	wzr, [x24, #16]
  409130:	bl	40fc04 <hash_insert_at@@Base>
  409134:	cbz	x20, 409164 <dir_file_exists_p@@Base+0x1ac>
  409138:	cmp	x26, x20
  40913c:	b.eq	409174 <dir_file_exists_p@@Base+0x1bc>  // b.none
  409140:	ldrb	w8, [x26]
  409144:	ldrb	w9, [x20]
  409148:	cmp	w8, w9
  40914c:	b.ne	409164 <dir_file_exists_p@@Base+0x1ac>  // b.any
  409150:	cbz	w8, 409174 <dir_file_exists_p@@Base+0x1bc>
  409154:	ldr	x1, [sp]
  409158:	add	x0, x25, #0x14
  40915c:	bl	406cb0 <strcmp@plt>
  409160:	cbz	w0, 409174 <dir_file_exists_p@@Base+0x1bc>
  409164:	mov	w8, wzr
  409168:	b	4090bc <dir_file_exists_p@@Base+0x104>
  40916c:	mov	w8, #0x2                   	// #2
  409170:	b	4090bc <dir_file_exists_p@@Base+0x104>
  409174:	mov	w8, #0x1                   	// #1
  409178:	mov	w22, #0x1                   	// #1
  40917c:	b	4090bc <dir_file_exists_p@@Base+0x104>
  409180:	cmp	w8, #0x3
  409184:	b.ne	409190 <dir_file_exists_p@@Base+0x1d8>  // b.any
  409188:	cbz	x25, 4091b4 <dir_file_exists_p@@Base+0x1fc>
  40918c:	mov	w22, wzr
  409190:	mov	w0, w22
  409194:	ldp	x20, x19, [sp, #112]
  409198:	ldp	x22, x21, [sp, #96]
  40919c:	ldp	x24, x23, [sp, #80]
  4091a0:	ldp	x26, x25, [sp, #64]
  4091a4:	ldp	x28, x27, [sp, #48]
  4091a8:	ldp	x29, x30, [sp, #32]
  4091ac:	add	sp, sp, #0x80
  4091b0:	ret
  4091b4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4091b8:	ldr	w9, [x8, #2776]
  4091bc:	sub	w9, w9, #0x1
  4091c0:	str	w9, [x8, #2776]
  4091c4:	ldr	x0, [x19, #104]
  4091c8:	bl	406b80 <closedir@plt>
  4091cc:	mov	w22, wzr
  4091d0:	str	xzr, [x19, #104]
  4091d4:	b	409190 <dir_file_exists_p@@Base+0x1d8>
  4091d8:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  4091dc:	add	x0, x0, #0x836
  4091e0:	bl	4184d0 <pfatal_with_name@@Base>
  4091e4:	sub	sp, sp, #0x140
  4091e8:	stp	x29, x30, [sp, #256]
  4091ec:	add	x29, sp, #0x100
  4091f0:	stp	x20, x19, [sp, #304]
  4091f4:	mov	x20, x0
  4091f8:	stur	x0, [x29, #-16]
  4091fc:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  409200:	add	x0, x0, #0xa28
  409204:	sub	x1, x29, #0x10
  409208:	str	x28, [sp, #272]
  40920c:	stp	x22, x21, [sp, #288]
  409210:	bl	40fad4 <hash_find_slot@@Base>
  409214:	ldr	x19, [x0]
  409218:	mov	x21, x0
  40921c:	cbz	x19, 409230 <dir_file_exists_p@@Base+0x278>
  409220:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  409224:	ldr	x8, [x8, #2344]
  409228:	cmp	x8, x19
  40922c:	b.ne	409384 <dir_file_exists_p@@Base+0x3cc>  // b.any
  409230:	mov	x0, x20
  409234:	bl	4067d0 <strlen@plt>
  409238:	mov	x22, x0
  40923c:	mov	w0, #0x10                  	// #16
  409240:	bl	418070 <xmalloc@@Base>
  409244:	mov	x19, x0
  409248:	mov	x0, x20
  40924c:	mov	x1, x22
  409250:	bl	421000 <strcache_add_len@@Base>
  409254:	str	x0, [x19]
  409258:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40925c:	add	x0, x0, #0xa28
  409260:	mov	x1, x19
  409264:	mov	x2, x21
  409268:	bl	40fc04 <hash_insert_at@@Base>
  40926c:	add	x1, sp, #0x70
  409270:	mov	x0, x20
  409274:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  409278:	mov	w21, w0
  40927c:	cmn	w0, #0x1
  409280:	b.ne	409294 <dir_file_exists_p@@Base+0x2dc>  // b.any
  409284:	bl	406f00 <__errno_location@plt>
  409288:	ldr	w8, [x0]
  40928c:	cmp	w8, #0x4
  409290:	b.eq	40926c <dir_file_exists_p@@Base+0x2b4>  // b.none
  409294:	tbnz	w21, #31, 409374 <dir_file_exists_p@@Base+0x3bc>
  409298:	ldp	x8, x9, [sp, #112]
  40929c:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  4092a0:	add	x0, x0, #0xa80
  4092a4:	mov	x1, sp
  4092a8:	stp	x8, x9, [sp]
  4092ac:	bl	40fad4 <hash_find_slot@@Base>
  4092b0:	ldr	x21, [x0]
  4092b4:	mov	x22, x0
  4092b8:	cbz	x21, 4092cc <dir_file_exists_p@@Base+0x314>
  4092bc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4092c0:	ldr	x8, [x8, #2344]
  4092c4:	cmp	x8, x21
  4092c8:	b.ne	409380 <dir_file_exists_p@@Base+0x3c8>  // b.any
  4092cc:	mov	w0, #0x70                  	// #112
  4092d0:	bl	418070 <xmalloc@@Base>
  4092d4:	ldr	x8, [sp, #112]
  4092d8:	mov	x21, x0
  4092dc:	mov	x1, x21
  4092e0:	mov	x2, x22
  4092e4:	str	x8, [x0]
  4092e8:	ldr	x8, [sp, #120]
  4092ec:	str	x8, [x0, #8]
  4092f0:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  4092f4:	add	x0, x0, #0xa80
  4092f8:	bl	40fc04 <hash_insert_at@@Base>
  4092fc:	bl	406f00 <__errno_location@plt>
  409300:	mov	x22, x0
  409304:	mov	x0, x20
  409308:	str	wzr, [x22]
  40930c:	bl	4068a0 <opendir@plt>
  409310:	str	x0, [x21, #104]
  409314:	cbnz	x0, 409324 <dir_file_exists_p@@Base+0x36c>
  409318:	ldr	w8, [x22]
  40931c:	cmp	w8, #0x4
  409320:	b.eq	409304 <dir_file_exists_p@@Base+0x34c>  // b.none
  409324:	cbz	x0, 40937c <dir_file_exists_p@@Base+0x3c4>
  409328:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x48>
  40932c:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x48>
  409330:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x48>
  409334:	add	x0, x21, #0x10
  409338:	add	x2, x2, #0x570
  40933c:	add	x3, x3, #0x58c
  409340:	add	x4, x4, #0x594
  409344:	mov	w1, #0x6b                  	// #107
  409348:	bl	40f974 <hash_init@@Base>
  40934c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  409350:	ldr	w9, [x8, #2776]
  409354:	add	w9, w9, #0x1
  409358:	cmp	w9, #0xa
  40935c:	str	w9, [x8, #2776]
  409360:	b.ne	409380 <dir_file_exists_p@@Base+0x3c8>  // b.any
  409364:	mov	x0, x21
  409368:	mov	x1, xzr
  40936c:	bl	408fe4 <dir_file_exists_p@@Base+0x2c>
  409370:	b	409380 <dir_file_exists_p@@Base+0x3c8>
  409374:	str	xzr, [x19, #8]
  409378:	b	409384 <dir_file_exists_p@@Base+0x3cc>
  40937c:	str	xzr, [x21, #16]
  409380:	str	x21, [x19, #8]
  409384:	mov	x0, x19
  409388:	ldp	x20, x19, [sp, #304]
  40938c:	ldp	x22, x21, [sp, #288]
  409390:	ldr	x28, [sp, #272]
  409394:	ldp	x29, x30, [sp, #256]
  409398:	add	sp, sp, #0x140
  40939c:	ret

00000000004093a0 <file_exists_p@@Base>:
  4093a0:	stp	x29, x30, [sp, #-48]!
  4093a4:	stp	x22, x21, [sp, #16]
  4093a8:	stp	x20, x19, [sp, #32]
  4093ac:	mov	x29, sp
  4093b0:	mov	x19, x0
  4093b4:	bl	4070bc <ar_name@@Base>
  4093b8:	cbz	w0, 4093d0 <file_exists_p@@Base+0x30>
  4093bc:	mov	x0, x19
  4093c0:	bl	4071c0 <ar_member_date@@Base>
  4093c4:	cmn	x0, #0x1
  4093c8:	cset	w0, ne  // ne = any
  4093cc:	b	40943c <file_exists_p@@Base+0x9c>
  4093d0:	mov	w1, #0x2f                  	// #47
  4093d4:	mov	x0, x19
  4093d8:	bl	406bc0 <strrchr@plt>
  4093dc:	cbz	x0, 409418 <file_exists_p@@Base+0x78>
  4093e0:	mov	x20, x0
  4093e4:	subs	x22, x0, x19
  4093e8:	b.eq	409428 <file_exists_p@@Base+0x88>  // b.none
  4093ec:	add	x8, x22, #0x10
  4093f0:	and	x8, x8, #0xfffffffffffffff0
  4093f4:	mov	x9, sp
  4093f8:	sub	x21, x9, x8
  4093fc:	mov	sp, x21
  409400:	mov	x0, x21
  409404:	mov	x1, x19
  409408:	mov	x2, x22
  40940c:	bl	406790 <memcpy@plt>
  409410:	strb	wzr, [x21, x22]
  409414:	b	409430 <file_exists_p@@Base+0x90>
  409418:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  40941c:	add	x0, x0, #0x944
  409420:	mov	x1, x19
  409424:	b	409438 <file_exists_p@@Base+0x98>
  409428:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x10e0>
  40942c:	add	x21, x21, #0x8c7
  409430:	add	x1, x20, #0x1
  409434:	mov	x0, x21
  409438:	bl	408fb8 <dir_file_exists_p@@Base>
  40943c:	mov	sp, x29
  409440:	ldp	x20, x19, [sp, #32]
  409444:	ldp	x22, x21, [sp, #16]
  409448:	ldp	x29, x30, [sp], #48
  40944c:	ret

0000000000409450 <file_impossible@@Base>:
  409450:	stp	x29, x30, [sp, #-48]!
  409454:	mov	w1, #0x2f                  	// #47
  409458:	stp	x22, x21, [sp, #16]
  40945c:	stp	x20, x19, [sp, #32]
  409460:	mov	x29, sp
  409464:	mov	x19, x0
  409468:	bl	406bc0 <strrchr@plt>
  40946c:	cbz	x0, 4094a8 <file_impossible@@Base+0x58>
  409470:	mov	x21, x0
  409474:	subs	x22, x0, x19
  409478:	b.eq	4094c4 <file_impossible@@Base+0x74>  // b.none
  40947c:	add	x8, x22, #0x10
  409480:	and	x8, x8, #0xfffffffffffffff0
  409484:	mov	x9, sp
  409488:	sub	x20, x9, x8
  40948c:	mov	sp, x20
  409490:	mov	x0, x20
  409494:	mov	x1, x19
  409498:	mov	x2, x22
  40949c:	bl	406790 <memcpy@plt>
  4094a0:	strb	wzr, [x20, x22]
  4094a4:	b	4094cc <file_impossible@@Base+0x7c>
  4094a8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4094ac:	add	x0, x0, #0x944
  4094b0:	bl	4091e4 <dir_file_exists_p@@Base+0x22c>
  4094b4:	mov	x20, x0
  4094b8:	ldr	x8, [x20, #8]
  4094bc:	cbnz	x8, 4094f0 <file_impossible@@Base+0xa0>
  4094c0:	b	4094e4 <file_impossible@@Base+0x94>
  4094c4:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x10e0>
  4094c8:	add	x20, x20, #0x8c7
  4094cc:	mov	x0, x20
  4094d0:	bl	4091e4 <dir_file_exists_p@@Base+0x22c>
  4094d4:	mov	x20, x0
  4094d8:	add	x19, x21, #0x1
  4094dc:	ldr	x8, [x20, #8]
  4094e0:	cbnz	x8, 4094f0 <file_impossible@@Base+0xa0>
  4094e4:	mov	w0, #0x70                  	// #112
  4094e8:	bl	418094 <xcalloc@@Base>
  4094ec:	str	x0, [x20, #8]
  4094f0:	ldr	x0, [x20, #8]
  4094f4:	ldr	x8, [x0, #16]!
  4094f8:	cbnz	x8, 40951c <file_impossible@@Base+0xcc>
  4094fc:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x48>
  409500:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x48>
  409504:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x48>
  409508:	add	x2, x2, #0x570
  40950c:	add	x3, x3, #0x58c
  409510:	add	x4, x4, #0x594
  409514:	mov	w1, #0x6b                  	// #107
  409518:	bl	40f974 <hash_init@@Base>
  40951c:	mov	w0, #0x18                  	// #24
  409520:	bl	418070 <xmalloc@@Base>
  409524:	mov	x21, x0
  409528:	mov	x0, x19
  40952c:	bl	4067d0 <strlen@plt>
  409530:	mov	x1, x0
  409534:	str	x0, [x21, #8]
  409538:	mov	x0, x19
  40953c:	bl	421000 <strcache_add_len@@Base>
  409540:	mov	w8, #0x1                   	// #1
  409544:	str	x0, [x21]
  409548:	strh	w8, [x21, #16]
  40954c:	ldr	x8, [x20, #8]
  409550:	mov	x1, x21
  409554:	add	x0, x8, #0x10
  409558:	bl	40fa80 <hash_insert@@Base>
  40955c:	mov	sp, x29
  409560:	ldp	x20, x19, [sp, #32]
  409564:	ldp	x22, x21, [sp, #16]
  409568:	ldp	x29, x30, [sp], #48
  40956c:	ret
  409570:	stp	x29, x30, [sp, #-16]!
  409574:	ldr	x0, [x0]
  409578:	mov	x29, sp
  40957c:	bl	4102b4 <jhash_string@@Base>
  409580:	mov	w0, w0
  409584:	ldp	x29, x30, [sp], #16
  409588:	ret
  40958c:	mov	x0, xzr
  409590:	ret
  409594:	stp	x29, x30, [sp, #-16]!
  409598:	ldr	w9, [x0, #8]
  40959c:	ldr	w10, [x1, #8]
  4095a0:	mov	x8, x0
  4095a4:	mov	x29, sp
  4095a8:	subs	w0, w9, w10
  4095ac:	b.eq	4095b8 <file_impossible@@Base+0x168>  // b.none
  4095b0:	ldp	x29, x30, [sp], #16
  4095b4:	ret
  4095b8:	ldr	x0, [x8]
  4095bc:	ldr	x1, [x1]
  4095c0:	cmp	x0, x1
  4095c4:	b.eq	4095d4 <file_impossible@@Base+0x184>  // b.none
  4095c8:	bl	406cb0 <strcmp@plt>
  4095cc:	ldp	x29, x30, [sp], #16
  4095d0:	ret
  4095d4:	mov	w0, wzr
  4095d8:	ldp	x29, x30, [sp], #16
  4095dc:	ret

00000000004095e0 <file_impossible_p@@Base>:
  4095e0:	stp	x29, x30, [sp, #-48]!
  4095e4:	stp	x22, x21, [sp, #16]
  4095e8:	stp	x20, x19, [sp, #32]
  4095ec:	mov	x29, sp
  4095f0:	sub	sp, sp, #0x20
  4095f4:	mov	w1, #0x2f                  	// #47
  4095f8:	mov	x19, x0
  4095fc:	bl	406bc0 <strrchr@plt>
  409600:	cbz	x0, 40963c <file_impossible_p@@Base+0x5c>
  409604:	mov	x20, x0
  409608:	subs	x22, x0, x19
  40960c:	b.eq	409654 <file_impossible_p@@Base+0x74>  // b.none
  409610:	add	x8, x22, #0x10
  409614:	and	x8, x8, #0xfffffffffffffff0
  409618:	mov	x9, sp
  40961c:	sub	x21, x9, x8
  409620:	mov	sp, x21
  409624:	mov	x0, x21
  409628:	mov	x1, x19
  40962c:	mov	x2, x22
  409630:	bl	406790 <memcpy@plt>
  409634:	strb	wzr, [x21, x22]
  409638:	b	40965c <file_impossible_p@@Base+0x7c>
  40963c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  409640:	add	x0, x0, #0x944
  409644:	bl	4091e4 <dir_file_exists_p@@Base+0x22c>
  409648:	ldr	x20, [x0, #8]
  40964c:	cbnz	x20, 409670 <file_impossible_p@@Base+0x90>
  409650:	b	4096a0 <file_impossible_p@@Base+0xc0>
  409654:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x10e0>
  409658:	add	x21, x21, #0x8c7
  40965c:	mov	x0, x21
  409660:	bl	4091e4 <dir_file_exists_p@@Base+0x22c>
  409664:	add	x19, x20, #0x1
  409668:	ldr	x20, [x0, #8]
  40966c:	cbz	x20, 4096a0 <file_impossible_p@@Base+0xc0>
  409670:	ldr	x8, [x20, #16]!
  409674:	cbz	x8, 4096a0 <file_impossible_p@@Base+0xc0>
  409678:	mov	x0, x19
  40967c:	stur	x19, [x29, #-24]
  409680:	bl	4067d0 <strlen@plt>
  409684:	stur	x0, [x29, #-16]
  409688:	sub	x1, x29, #0x18
  40968c:	mov	x0, x20
  409690:	bl	40fbd8 <hash_find_item@@Base>
  409694:	cbz	x0, 4096a4 <file_impossible_p@@Base+0xc4>
  409698:	ldrsh	w0, [x0, #16]
  40969c:	b	4096a4 <file_impossible_p@@Base+0xc4>
  4096a0:	mov	w0, wzr
  4096a4:	mov	sp, x29
  4096a8:	ldp	x20, x19, [sp, #32]
  4096ac:	ldp	x22, x21, [sp, #16]
  4096b0:	ldp	x29, x30, [sp], #48
  4096b4:	ret

00000000004096b8 <dir_name@@Base>:
  4096b8:	stp	x29, x30, [sp, #-16]!
  4096bc:	mov	x29, sp
  4096c0:	bl	4091e4 <dir_file_exists_p@@Base+0x22c>
  4096c4:	ldr	x0, [x0]
  4096c8:	ldp	x29, x30, [sp], #16
  4096cc:	ret

00000000004096d0 <print_dir_data_base@@Base>:
  4096d0:	stp	x29, x30, [sp, #-96]!
  4096d4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  4096d8:	add	x1, x1, #0x768
  4096dc:	mov	w2, #0x5                   	// #5
  4096e0:	mov	x0, xzr
  4096e4:	stp	x28, x27, [sp, #16]
  4096e8:	stp	x26, x25, [sp, #32]
  4096ec:	stp	x24, x23, [sp, #48]
  4096f0:	stp	x22, x21, [sp, #64]
  4096f4:	stp	x20, x19, [sp, #80]
  4096f8:	mov	x29, sp
  4096fc:	bl	406e50 <dcgettext@plt>
  409700:	bl	406c40 <puts@plt>
  409704:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  409708:	add	x9, x9, #0xa28
  40970c:	ldr	x8, [x9, #32]
  409710:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  409714:	cmp	x8, #0x1
  409718:	b.lt	4098f4 <print_dir_data_base@@Base+0x224>  // b.tstop
  40971c:	ldr	x21, [x9]
  409720:	adrp	x24, 42a000 <_IO_stdin_used@@Base+0x50e0>
  409724:	mov	w20, wzr
  409728:	mov	w19, wzr
  40972c:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  409730:	add	x25, x21, x8, lsl #3
  409734:	add	x24, x24, #0xa56
  409738:	b	409764 <print_dir_data_base@@Base+0x94>
  40973c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409740:	mov	w2, #0x5                   	// #5
  409744:	mov	x0, xzr
  409748:	add	x1, x1, #0x778
  40974c:	bl	406e50 <dcgettext@plt>
  409750:	ldr	x1, [x27]
  409754:	bl	406ef0 <printf@plt>
  409758:	add	x21, x21, #0x8
  40975c:	cmp	x21, x25
  409760:	b.cs	4098fc <print_dir_data_base@@Base+0x22c>  // b.hs, b.nlast
  409764:	ldr	x27, [x21]
  409768:	cbz	x27, 409758 <print_dir_data_base@@Base+0x88>
  40976c:	ldr	x8, [x23, #2344]
  409770:	cmp	x8, x27
  409774:	b.eq	409758 <print_dir_data_base@@Base+0x88>  // b.none
  409778:	ldr	x10, [x27, #8]
  40977c:	cbz	x10, 40973c <print_dir_data_base@@Base+0x6c>
  409780:	ldr	x9, [x10, #16]
  409784:	cbz	x9, 4097d4 <print_dir_data_base@@Base+0x104>
  409788:	ldr	x10, [x10, #48]
  40978c:	cmp	x10, #0x1
  409790:	b.lt	4097f8 <print_dir_data_base@@Base+0x128>  // b.tstop
  409794:	mov	w26, wzr
  409798:	mov	w22, wzr
  40979c:	add	x10, x9, x10, lsl #3
  4097a0:	b	4097b4 <print_dir_data_base@@Base+0xe4>
  4097a4:	add	w22, w22, #0x1
  4097a8:	add	x9, x9, #0x8
  4097ac:	cmp	x9, x10
  4097b0:	b.cs	409800 <print_dir_data_base@@Base+0x130>  // b.hs, b.nlast
  4097b4:	ldr	x11, [x9]
  4097b8:	cbz	x11, 4097a8 <print_dir_data_base@@Base+0xd8>
  4097bc:	cmp	x8, x11
  4097c0:	b.eq	4097a8 <print_dir_data_base@@Base+0xd8>  // b.none
  4097c4:	ldrh	w11, [x11, #16]
  4097c8:	cbz	w11, 4097a4 <print_dir_data_base@@Base+0xd4>
  4097cc:	add	w26, w26, #0x1
  4097d0:	b	4097a8 <print_dir_data_base@@Base+0xd8>
  4097d4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  4097d8:	mov	w2, #0x5                   	// #5
  4097dc:	mov	x0, xzr
  4097e0:	add	x1, x1, #0x794
  4097e4:	bl	406e50 <dcgettext@plt>
  4097e8:	ldp	x1, x8, [x27]
  4097ec:	ldp	x2, x3, [x8]
  4097f0:	bl	406ef0 <printf@plt>
  4097f4:	b	409758 <print_dir_data_base@@Base+0x88>
  4097f8:	mov	w22, wzr
  4097fc:	mov	w26, wzr
  409800:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409804:	mov	w2, #0x5                   	// #5
  409808:	mov	x0, xzr
  40980c:	add	x1, x1, #0x7c8
  409810:	bl	406e50 <dcgettext@plt>
  409814:	ldp	x1, x8, [x27]
  409818:	ldp	x2, x3, [x8]
  40981c:	bl	406ef0 <printf@plt>
  409820:	cbz	w22, 409834 <print_dir_data_base@@Base+0x164>
  409824:	mov	x0, x24
  409828:	mov	w1, w22
  40982c:	bl	406ef0 <printf@plt>
  409830:	b	409850 <print_dir_data_base@@Base+0x180>
  409834:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409838:	mov	w2, #0x5                   	// #5
  40983c:	mov	x0, xzr
  409840:	add	x1, x1, #0x7e7
  409844:	bl	406e50 <dcgettext@plt>
  409848:	ldr	x1, [x28, #2512]
  40984c:	bl	4067e0 <fputs@plt>
  409850:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409854:	mov	w2, #0x5                   	// #5
  409858:	mov	x0, xzr
  40985c:	add	x1, x1, #0x7ea
  409860:	bl	406e50 <dcgettext@plt>
  409864:	ldr	x1, [x28, #2512]
  409868:	bl	4067e0 <fputs@plt>
  40986c:	cbz	w26, 409880 <print_dir_data_base@@Base+0x1b0>
  409870:	mov	x0, x24
  409874:	mov	w1, w26
  409878:	bl	406ef0 <printf@plt>
  40987c:	b	40989c <print_dir_data_base@@Base+0x1cc>
  409880:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409884:	mov	w2, #0x5                   	// #5
  409888:	mov	x0, xzr
  40988c:	add	x1, x1, #0x7f3
  409890:	bl	406e50 <dcgettext@plt>
  409894:	ldr	x1, [x28, #2512]
  409898:	bl	4067e0 <fputs@plt>
  40989c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  4098a0:	mov	w2, #0x5                   	// #5
  4098a4:	mov	x0, xzr
  4098a8:	add	x1, x1, #0x7f6
  4098ac:	bl	406e50 <dcgettext@plt>
  4098b0:	ldr	x1, [x28, #2512]
  4098b4:	bl	4067e0 <fputs@plt>
  4098b8:	ldr	x8, [x27, #8]
  4098bc:	ldr	x8, [x8, #104]
  4098c0:	cbz	x8, 4098dc <print_dir_data_base@@Base+0x20c>
  4098c4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  4098c8:	mov	w2, #0x5                   	// #5
  4098cc:	mov	x0, xzr
  4098d0:	add	x1, x1, #0x807
  4098d4:	bl	406e50 <dcgettext@plt>
  4098d8:	b	4098e4 <print_dir_data_base@@Base+0x214>
  4098dc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4098e0:	add	x0, x0, #0x944
  4098e4:	bl	406c40 <puts@plt>
  4098e8:	add	w20, w22, w20
  4098ec:	add	w19, w26, w19
  4098f0:	b	409758 <print_dir_data_base@@Base+0x88>
  4098f4:	mov	w19, wzr
  4098f8:	mov	w20, wzr
  4098fc:	ldr	x3, [x28, #2512]
  409900:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  409904:	add	x0, x0, #0xf8e
  409908:	mov	w1, #0x3                   	// #3
  40990c:	mov	w2, #0x1                   	// #1
  409910:	bl	406d40 <fwrite@plt>
  409914:	cbz	w20, 40992c <print_dir_data_base@@Base+0x25c>
  409918:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40991c:	add	x0, x0, #0xa56
  409920:	mov	w1, w20
  409924:	bl	406ef0 <printf@plt>
  409928:	b	409948 <print_dir_data_base@@Base+0x278>
  40992c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409930:	add	x1, x1, #0x7e7
  409934:	mov	w2, #0x5                   	// #5
  409938:	mov	x0, xzr
  40993c:	bl	406e50 <dcgettext@plt>
  409940:	ldr	x1, [x28, #2512]
  409944:	bl	4067e0 <fputs@plt>
  409948:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40994c:	add	x1, x1, #0x7ea
  409950:	mov	w2, #0x5                   	// #5
  409954:	mov	x0, xzr
  409958:	bl	406e50 <dcgettext@plt>
  40995c:	ldr	x1, [x28, #2512]
  409960:	bl	4067e0 <fputs@plt>
  409964:	cbz	w19, 40997c <print_dir_data_base@@Base+0x2ac>
  409968:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40996c:	add	x0, x0, #0xa56
  409970:	mov	w1, w19
  409974:	bl	406ef0 <printf@plt>
  409978:	b	409998 <print_dir_data_base@@Base+0x2c8>
  40997c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409980:	add	x1, x1, #0x7f3
  409984:	mov	w2, #0x5                   	// #5
  409988:	mov	x0, xzr
  40998c:	bl	406e50 <dcgettext@plt>
  409990:	ldr	x1, [x28, #2512]
  409994:	bl	4067e0 <fputs@plt>
  409998:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40999c:	add	x1, x1, #0x810
  4099a0:	mov	w2, #0x5                   	// #5
  4099a4:	mov	x0, xzr
  4099a8:	bl	406e50 <dcgettext@plt>
  4099ac:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4099b0:	ldr	x1, [x8, #2648]
  4099b4:	bl	406ef0 <printf@plt>
  4099b8:	ldp	x20, x19, [sp, #80]
  4099bc:	ldp	x22, x21, [sp, #64]
  4099c0:	ldp	x24, x23, [sp, #48]
  4099c4:	ldp	x26, x25, [sp, #32]
  4099c8:	ldp	x28, x27, [sp, #16]
  4099cc:	ldp	x29, x30, [sp], #96
  4099d0:	ret

00000000004099d4 <dir_setup_glob@@Base>:
  4099d4:	adrp	x8, 409000 <dir_file_exists_p@@Base+0x48>
  4099d8:	adrp	x9, 409000 <dir_file_exists_p@@Base+0x48>
  4099dc:	adrp	x10, 406000 <memcpy@plt-0x790>
  4099e0:	adrp	x11, 424000 <jobserver_setup@@Base+0x5c>
  4099e4:	adrp	x12, 424000 <jobserver_setup@@Base+0x5c>
  4099e8:	add	x8, x8, #0xa10
  4099ec:	add	x9, x9, #0xa68
  4099f0:	add	x10, x10, #0xcf0
  4099f4:	add	x11, x11, #0xf00
  4099f8:	add	x12, x12, #0xee0
  4099fc:	str	xzr, [x0, #16]
  409a00:	stp	x10, x9, [x0, #32]
  409a04:	stp	x8, x11, [x0, #48]
  409a08:	str	x12, [x0, #64]
  409a0c:	ret
  409a10:	stp	x29, x30, [sp, #-32]!
  409a14:	str	x19, [sp, #16]
  409a18:	mov	x29, sp
  409a1c:	bl	4091e4 <dir_file_exists_p@@Base+0x22c>
  409a20:	mov	x19, x0
  409a24:	ldr	x0, [x0, #8]
  409a28:	cbz	x0, 409a5c <dir_setup_glob@@Base+0x88>
  409a2c:	ldr	x8, [x0, #16]
  409a30:	cbz	x8, 409a58 <dir_setup_glob@@Base+0x84>
  409a34:	mov	x1, xzr
  409a38:	bl	408fe4 <dir_file_exists_p@@Base+0x2c>
  409a3c:	mov	w0, #0x10                  	// #16
  409a40:	bl	418070 <xmalloc@@Base>
  409a44:	ldr	x8, [x19, #8]
  409a48:	str	x8, [x0]
  409a4c:	ldr	x8, [x8, #16]
  409a50:	str	x8, [x0, #8]
  409a54:	b	409a5c <dir_setup_glob@@Base+0x88>
  409a58:	mov	x0, xzr
  409a5c:	ldr	x19, [sp, #16]
  409a60:	ldp	x29, x30, [sp], #32
  409a64:	ret
  409a68:	stp	x29, x30, [sp, #-96]!
  409a6c:	stp	x26, x25, [sp, #32]
  409a70:	stp	x24, x23, [sp, #48]
  409a74:	stp	x22, x21, [sp, #64]
  409a78:	stp	x20, x19, [sp, #80]
  409a7c:	ldr	x8, [x0]
  409a80:	mov	x19, x0
  409a84:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  409a88:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  409a8c:	ldr	x9, [x8, #16]
  409a90:	ldr	x8, [x8, #48]
  409a94:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  409a98:	mov	w26, #0x1                   	// #1
  409a9c:	str	x27, [sp, #16]
  409aa0:	add	x25, x9, x8, lsl #3
  409aa4:	mov	x29, sp
  409aa8:	b	409ab4 <dir_setup_glob@@Base+0xe0>
  409aac:	mov	w8, #0x1                   	// #1
  409ab0:	tbz	w8, #0, 409b48 <dir_setup_glob@@Base+0x174>
  409ab4:	ldr	x8, [x19, #8]
  409ab8:	cmp	x8, x25
  409abc:	b.cs	409b44 <dir_setup_glob@@Base+0x170>  // b.hs, b.nlast
  409ac0:	add	x9, x8, #0x8
  409ac4:	str	x9, [x19, #8]
  409ac8:	ldr	x27, [x8]
  409acc:	cbz	x27, 409aac <dir_setup_glob@@Base+0xd8>
  409ad0:	ldr	x8, [x22, #2344]
  409ad4:	cmp	x8, x27
  409ad8:	b.eq	409aac <dir_setup_glob@@Base+0xd8>  // b.none
  409adc:	ldrh	w8, [x27, #16]
  409ae0:	cbnz	w8, 409aac <dir_setup_glob@@Base+0xd8>
  409ae4:	ldr	x10, [x27, #8]
  409ae8:	ldr	x9, [x23, #2792]
  409aec:	add	x8, x10, #0x19
  409af0:	cmp	x8, x9
  409af4:	add	x21, x10, #0x1
  409af8:	b.ls	409b18 <dir_setup_glob@@Base+0x144>  // b.plast
  409afc:	ldr	x0, [x24, #2784]
  409b00:	lsl	x9, x9, #1
  409b04:	cmp	x8, x9
  409b08:	csel	x1, x8, x9, hi  // hi = pmore
  409b0c:	str	x1, [x23, #2792]
  409b10:	bl	41803c <xrealloc@@Base>
  409b14:	str	x0, [x24, #2784]
  409b18:	ldr	x20, [x24, #2784]
  409b1c:	mov	x2, x21
  409b20:	str	x26, [x20]
  409b24:	ldrb	w8, [x27, #18]
  409b28:	add	x0, x20, #0x13
  409b2c:	strb	w8, [x20, #18]
  409b30:	ldr	x1, [x27]
  409b34:	bl	406790 <memcpy@plt>
  409b38:	mov	w8, wzr
  409b3c:	tbnz	w8, #0, 409ab4 <dir_setup_glob@@Base+0xe0>
  409b40:	b	409b48 <dir_setup_glob@@Base+0x174>
  409b44:	mov	x20, xzr
  409b48:	mov	x0, x20
  409b4c:	ldp	x20, x19, [sp, #80]
  409b50:	ldp	x22, x21, [sp, #64]
  409b54:	ldp	x24, x23, [sp, #48]
  409b58:	ldp	x26, x25, [sp, #32]
  409b5c:	ldr	x27, [sp, #16]
  409b60:	ldp	x29, x30, [sp], #96
  409b64:	ret

0000000000409b68 <hash_init_directories@@Base>:
  409b68:	stp	x29, x30, [sp, #-16]!
  409b6c:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  409b70:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x48>
  409b74:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x48>
  409b78:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x48>
  409b7c:	add	x0, x0, #0xa28
  409b80:	add	x2, x2, #0xbc8
  409b84:	add	x3, x3, #0xbe4
  409b88:	add	x4, x4, #0xbec
  409b8c:	mov	w1, #0xc7                  	// #199
  409b90:	mov	x29, sp
  409b94:	bl	40f974 <hash_init@@Base>
  409b98:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  409b9c:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x48>
  409ba0:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x48>
  409ba4:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x48>
  409ba8:	add	x0, x0, #0xa80
  409bac:	add	x2, x2, #0xc1c
  409bb0:	add	x3, x3, #0xc2c
  409bb4:	add	x4, x4, #0xc3c
  409bb8:	mov	w1, #0xc7                  	// #199
  409bbc:	bl	40f974 <hash_init@@Base>
  409bc0:	ldp	x29, x30, [sp], #16
  409bc4:	ret
  409bc8:	stp	x29, x30, [sp, #-16]!
  409bcc:	ldr	x0, [x0]
  409bd0:	mov	x29, sp
  409bd4:	bl	4102b4 <jhash_string@@Base>
  409bd8:	mov	w0, w0
  409bdc:	ldp	x29, x30, [sp], #16
  409be0:	ret
  409be4:	mov	x0, xzr
  409be8:	ret
  409bec:	stp	x29, x30, [sp, #-16]!
  409bf0:	ldr	x0, [x0]
  409bf4:	ldr	x1, [x1]
  409bf8:	mov	x29, sp
  409bfc:	cmp	x0, x1
  409c00:	b.eq	409c10 <hash_init_directories@@Base+0xa8>  // b.none
  409c04:	bl	406cb0 <strcmp@plt>
  409c08:	ldp	x29, x30, [sp], #16
  409c0c:	ret
  409c10:	mov	w0, wzr
  409c14:	ldp	x29, x30, [sp], #16
  409c18:	ret
  409c1c:	ldr	w8, [x0]
  409c20:	ldr	w9, [x0, #8]
  409c24:	eor	w0, w9, w8, lsl #4
  409c28:	ret
  409c2c:	ldr	w8, [x0]
  409c30:	ldr	w9, [x0, #8]
  409c34:	eon	w0, w9, w8, lsl #4
  409c38:	ret
  409c3c:	ldr	x8, [x0, #8]
  409c40:	ldr	x9, [x1, #8]
  409c44:	cmp	x8, x9
  409c48:	cset	w8, ne  // ne = any
  409c4c:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  409c50:	cbz	w8, 409c5c <hash_init_directories@@Base+0xf4>
  409c54:	mov	w0, w8
  409c58:	ret
  409c5c:	ldr	x8, [x0]
  409c60:	ldr	x9, [x1]
  409c64:	cmp	x8, x9
  409c68:	cset	w8, ne  // ne = any
  409c6c:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  409c70:	mov	w0, w8
  409c74:	ret

0000000000409c78 <variable_buffer_output@@Base>:
  409c78:	stp	x29, x30, [sp, #-64]!
  409c7c:	stp	x22, x21, [sp, #32]
  409c80:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  409c84:	ldr	x10, [x22, #4048]
  409c88:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  409c8c:	ldr	x9, [x8, #2800]
  409c90:	str	x23, [sp, #16]
  409c94:	sub	x23, x0, x10
  409c98:	add	x10, x23, x2
  409c9c:	add	x11, x10, #0x5
  409ca0:	stp	x20, x19, [sp, #48]
  409ca4:	mov	x19, x2
  409ca8:	mov	x21, x0
  409cac:	cmp	x11, x9
  409cb0:	mov	x20, x1
  409cb4:	mov	x29, sp
  409cb8:	b.ls	409ce0 <variable_buffer_output@@Base+0x68>  // b.plast
  409cbc:	ldr	x0, [x22, #4048]
  409cc0:	add	x10, x10, #0x64
  409cc4:	lsl	x9, x9, #1
  409cc8:	cmp	x10, x9
  409ccc:	csel	x1, x10, x9, hi  // hi = pmore
  409cd0:	str	x1, [x8, #2800]
  409cd4:	bl	41803c <xrealloc@@Base>
  409cd8:	add	x21, x0, x23
  409cdc:	str	x0, [x22, #4048]
  409ce0:	mov	x0, x21
  409ce4:	mov	x1, x20
  409ce8:	mov	x2, x19
  409cec:	bl	406790 <memcpy@plt>
  409cf0:	add	x0, x21, x19
  409cf4:	ldp	x20, x19, [sp, #48]
  409cf8:	ldp	x22, x21, [sp, #32]
  409cfc:	ldr	x23, [sp, #16]
  409d00:	ldp	x29, x30, [sp], #64
  409d04:	ret

0000000000409d08 <recursively_expand_for_file@@Base>:
  409d08:	sub	sp, sp, #0x60
  409d0c:	stp	x29, x30, [sp, #16]
  409d10:	stp	x26, x25, [sp, #32]
  409d14:	stp	x24, x23, [sp, #48]
  409d18:	stp	x22, x21, [sp, #64]
  409d1c:	stp	x20, x19, [sp, #80]
  409d20:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  409d24:	mov	x8, x0
  409d28:	ldr	x22, [x21, #1472]
  409d2c:	ldr	x9, [x8, #16]!
  409d30:	mov	x19, x0
  409d34:	mov	x20, x1
  409d38:	add	x29, sp, #0x10
  409d3c:	cbz	x9, 409d4c <recursively_expand_for_file@@Base+0x44>
  409d40:	add	x9, sp, #0x8
  409d44:	str	x8, [sp, #8]
  409d48:	str	x9, [x21, #1472]
  409d4c:	adrp	x23, 43f000 <stdio_traced@@Base+0x1a38>
  409d50:	ldr	x9, [x23, #1552]
  409d54:	cbz	x9, 409d7c <recursively_expand_for_file@@Base+0x74>
  409d58:	mov	w24, wzr
  409d5c:	ldr	w8, [x19, #44]
  409d60:	tbnz	w8, #6, 409d8c <recursively_expand_for_file@@Base+0x84>
  409d64:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  409d68:	cbz	x20, 409db0 <recursively_expand_for_file@@Base+0xa8>
  409d6c:	ldr	x8, [x20, #80]
  409d70:	ldr	x26, [x25, #2440]
  409d74:	str	x8, [x25, #2440]
  409d78:	b	409db4 <recursively_expand_for_file@@Base+0xac>
  409d7c:	mov	w24, #0x1                   	// #1
  409d80:	str	x8, [x23, #1552]
  409d84:	ldr	w8, [x19, #44]
  409d88:	tbz	w8, #6, 409d64 <recursively_expand_for_file@@Base+0x5c>
  409d8c:	tst	w8, #0x7fff00
  409d90:	b.eq	409e18 <recursively_expand_for_file@@Base+0x110>  // b.none
  409d94:	mov	w9, #0x7fff00              	// #8388352
  409d98:	add	w9, w8, w9
  409d9c:	lsr	w9, w9, #8
  409da0:	bfi	w8, w9, #8, #15
  409da4:	str	w8, [x19, #44]
  409da8:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  409dac:	cbnz	x20, 409d6c <recursively_expand_for_file@@Base+0x64>
  409db0:	mov	x26, xzr
  409db4:	ldr	w8, [x19, #44]
  409db8:	orr	w9, w8, #0x40
  409dbc:	str	w9, [x19, #44]
  409dc0:	tbnz	w8, #1, 409dd4 <recursively_expand_for_file@@Base+0xcc>
  409dc4:	ldr	x0, [x19, #8]
  409dc8:	mov	x1, xzr
  409dcc:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  409dd0:	b	409ddc <recursively_expand_for_file@@Base+0xd4>
  409dd4:	mov	x0, x19
  409dd8:	bl	409e54 <recursively_expand_for_file@@Base+0x14c>
  409ddc:	ldr	w8, [x19, #44]
  409de0:	and	w8, w8, #0xffffffbf
  409de4:	str	w8, [x19, #44]
  409de8:	cbz	w24, 409df0 <recursively_expand_for_file@@Base+0xe8>
  409dec:	str	xzr, [x23, #1552]
  409df0:	cbz	x20, 409df8 <recursively_expand_for_file@@Base+0xf0>
  409df4:	str	x26, [x25, #2440]
  409df8:	str	x22, [x21, #1472]
  409dfc:	ldp	x20, x19, [sp, #80]
  409e00:	ldp	x22, x21, [sp, #64]
  409e04:	ldp	x24, x23, [sp, #48]
  409e08:	ldp	x26, x25, [sp, #32]
  409e0c:	ldp	x29, x30, [sp, #16]
  409e10:	add	sp, sp, #0x60
  409e14:	ret
  409e18:	ldr	x8, [x21, #1472]
  409e1c:	ldr	x0, [x19]
  409e20:	ldr	x20, [x8]
  409e24:	bl	4067d0 <strlen@plt>
  409e28:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  409e2c:	mov	x21, x0
  409e30:	add	x1, x1, #0x848
  409e34:	mov	w2, #0x5                   	// #5
  409e38:	mov	x0, xzr
  409e3c:	bl	406e50 <dcgettext@plt>
  409e40:	ldr	x3, [x19]
  409e44:	mov	x2, x0
  409e48:	mov	x0, x20
  409e4c:	mov	x1, x21
  409e50:	bl	4190fc <fatal@@Base>
  409e54:	stp	x29, x30, [sp, #-64]!
  409e58:	stp	x20, x19, [sp, #48]
  409e5c:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  409e60:	stp	x22, x21, [sp, #32]
  409e64:	ldr	x22, [x20, #4048]
  409e68:	str	xzr, [x20, #4048]
  409e6c:	ldr	x19, [x0]
  409e70:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  409e74:	str	x23, [sp, #16]
  409e78:	ldr	x23, [x21, #2800]
  409e7c:	mov	x0, x19
  409e80:	mov	x29, sp
  409e84:	bl	4067d0 <strlen@plt>
  409e88:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  409e8c:	ldr	x2, [x8, #2440]
  409e90:	mov	x1, x0
  409e94:	mov	w3, #0x1                   	// #1
  409e98:	mov	x0, x19
  409e9c:	bl	40a678 <restore_variable_buffer@@Base+0x44>
  409ea0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  409ea4:	add	x1, x1, #0x989
  409ea8:	mov	w2, #0x1                   	// #1
  409eac:	bl	409c78 <variable_buffer_output@@Base>
  409eb0:	ldr	x0, [x20, #4048]
  409eb4:	str	x22, [x20, #4048]
  409eb8:	str	x23, [x21, #2800]
  409ebc:	ldp	x20, x19, [sp, #48]
  409ec0:	ldp	x22, x21, [sp, #32]
  409ec4:	ldr	x23, [sp, #16]
  409ec8:	ldp	x29, x30, [sp], #64
  409ecc:	ret

0000000000409ed0 <allocated_variable_expand_for_file@@Base>:
  409ed0:	stp	x29, x30, [sp, #-48]!
  409ed4:	stp	x20, x19, [sp, #32]
  409ed8:	adrp	x19, 43f000 <stdio_traced@@Base+0x1a38>
  409edc:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  409ee0:	stp	x22, x21, [sp, #16]
  409ee4:	ldr	x21, [x19, #4048]
  409ee8:	ldr	x22, [x20, #2800]
  409eec:	mov	x29, sp
  409ef0:	str	xzr, [x19, #4048]
  409ef4:	bl	40a59c <variable_expand_for_file@@Base>
  409ef8:	str	x21, [x19, #4048]
  409efc:	str	x22, [x20, #2800]
  409f00:	ldp	x20, x19, [sp, #32]
  409f04:	ldp	x22, x21, [sp, #16]
  409f08:	ldp	x29, x30, [sp], #48
  409f0c:	ret

0000000000409f10 <variable_expand_string@@Base>:
  409f10:	stp	x29, x30, [sp, #-96]!
  409f14:	stp	x28, x27, [sp, #16]
  409f18:	stp	x26, x25, [sp, #32]
  409f1c:	stp	x24, x23, [sp, #48]
  409f20:	stp	x22, x21, [sp, #64]
  409f24:	stp	x20, x19, [sp, #80]
  409f28:	mov	x29, sp
  409f2c:	sub	sp, sp, #0x40
  409f30:	mov	x21, x2
  409f34:	mov	x20, x1
  409f38:	mov	x19, x0
  409f3c:	cbnz	x0, 409f48 <variable_expand_string@@Base+0x38>
  409f40:	bl	40a384 <variable_expand_string@@Base+0x474>
  409f44:	mov	x19, x0
  409f48:	adrp	x28, 43f000 <stdio_traced@@Base+0x1a38>
  409f4c:	ldr	x22, [x28, #4048]
  409f50:	cmn	x21, #0x1
  409f54:	b.eq	409f78 <variable_expand_string@@Base+0x68>  // b.none
  409f58:	cbnz	x21, 409f84 <variable_expand_string@@Base+0x74>
  409f5c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  409f60:	add	x1, x1, #0x989
  409f64:	mov	w2, #0x1                   	// #1
  409f68:	mov	x0, x19
  409f6c:	bl	409c78 <variable_buffer_output@@Base>
  409f70:	ldr	x0, [x28, #4048]
  409f74:	b	40a338 <variable_expand_string@@Base+0x428>
  409f78:	mov	x0, x20
  409f7c:	bl	4180bc <xstrdup@@Base>
  409f80:	b	409f90 <variable_expand_string@@Base+0x80>
  409f84:	mov	x0, x20
  409f88:	mov	x1, x21
  409f8c:	bl	4180d8 <xstrndup@@Base>
  409f90:	sub	x27, x19, x22
  409f94:	mov	x22, x0
  409f98:	stur	x0, [x29, #-32]
  409f9c:	b	409fc0 <variable_expand_string@@Base+0xb0>
  409fa0:	sub	x0, x29, #0x10
  409fa4:	sub	x1, x29, #0x8
  409fa8:	stp	x19, x22, [x29, #-16]
  409fac:	bl	40cfc4 <handle_function@@Base>
  409fb0:	cbz	w0, 40a06c <variable_expand_string@@Base+0x15c>
  409fb4:	ldp	x19, x22, [x29, #-16]
  409fb8:	ldrb	w8, [x22], #1
  409fbc:	cbz	w8, 40a314 <variable_expand_string@@Base+0x404>
  409fc0:	mov	w1, #0x24                  	// #36
  409fc4:	mov	x0, x22
  409fc8:	bl	406d10 <strchr@plt>
  409fcc:	mov	x21, x0
  409fd0:	cbz	x0, 409fdc <variable_expand_string@@Base+0xcc>
  409fd4:	sub	x2, x21, x22
  409fd8:	b	409fe8 <variable_expand_string@@Base+0xd8>
  409fdc:	mov	x0, x22
  409fe0:	bl	4067d0 <strlen@plt>
  409fe4:	add	x2, x0, #0x1
  409fe8:	mov	x0, x19
  409fec:	mov	x1, x22
  409ff0:	bl	409c78 <variable_buffer_output@@Base>
  409ff4:	mov	x19, x0
  409ff8:	cbz	x21, 40a314 <variable_expand_string@@Base+0x404>
  409ffc:	mov	x22, x21
  40a000:	ldrb	w25, [x22, #1]!
  40a004:	cmp	w25, #0x27
  40a008:	b.gt	40a030 <variable_expand_string@@Base+0x120>
  40a00c:	cbz	w25, 40a018 <variable_expand_string@@Base+0x108>
  40a010:	cmp	w25, #0x24
  40a014:	b.ne	40a040 <variable_expand_string@@Base+0x130>  // b.any
  40a018:	mov	w2, #0x1                   	// #1
  40a01c:	mov	x0, x19
  40a020:	mov	x1, x21
  40a024:	bl	409c78 <variable_buffer_output@@Base>
  40a028:	mov	x19, x0
  40a02c:	b	409fb8 <variable_expand_string@@Base+0xa8>
  40a030:	cmp	w25, #0x28
  40a034:	b.eq	409fa0 <variable_expand_string@@Base+0x90>  // b.none
  40a038:	cmp	w25, #0x7b
  40a03c:	b.eq	409fa0 <variable_expand_string@@Base+0x90>  // b.none
  40a040:	ldrb	w8, [x21]
  40a044:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40a048:	add	x9, x9, #0xcf0
  40a04c:	ldrh	w8, [x9, x8, lsl #1]
  40a050:	tst	w8, #0x6
  40a054:	b.ne	409fb8 <variable_expand_string@@Base+0xa8>  // b.any
  40a058:	mov	w2, #0x1                   	// #1
  40a05c:	mov	x0, x19
  40a060:	mov	x1, x22
  40a064:	bl	40a494 <expand_argument@@Base+0xcc>
  40a068:	b	40a028 <variable_expand_string@@Base+0x118>
  40a06c:	cmp	w25, #0x28
  40a070:	mov	w8, #0x7d                  	// #125
  40a074:	mov	w9, #0x29                  	// #41
  40a078:	add	x23, x21, #0x2
  40a07c:	csel	w20, w9, w8, eq  // eq = none
  40a080:	mov	x0, x23
  40a084:	mov	w1, w20
  40a088:	bl	406d10 <strchr@plt>
  40a08c:	cbz	x0, 40a358 <variable_expand_string@@Base+0x448>
  40a090:	mov	x24, x0
  40a094:	mov	w2, #0x24                  	// #36
  40a098:	mov	x0, x23
  40a09c:	mov	x1, x24
  40a0a0:	bl	4180f4 <lindex@@Base>
  40a0a4:	cbz	x0, 40a0ec <variable_expand_string@@Base+0x1dc>
  40a0a8:	ldrb	w9, [x23]
  40a0ac:	cbz	w9, 40a0f8 <variable_expand_string@@Base+0x1e8>
  40a0b0:	mov	w8, wzr
  40a0b4:	mov	x22, x23
  40a0b8:	b	40a0c8 <variable_expand_string@@Base+0x1b8>
  40a0bc:	add	w8, w8, #0x1
  40a0c0:	ldrb	w9, [x22, #1]!
  40a0c4:	cbz	w9, 40a0e0 <variable_expand_string@@Base+0x1d0>
  40a0c8:	cmp	w25, w9, uxtb
  40a0cc:	b.eq	40a0bc <variable_expand_string@@Base+0x1ac>  // b.none
  40a0d0:	cmp	w20, w9, uxtb
  40a0d4:	b.ne	40a0c0 <variable_expand_string@@Base+0x1b0>  // b.any
  40a0d8:	subs	w8, w8, #0x1
  40a0dc:	b.ge	40a0c0 <variable_expand_string@@Base+0x1b0>  // b.tcont
  40a0e0:	tbnz	w8, #31, 40a104 <variable_expand_string@@Base+0x1f4>
  40a0e4:	mov	x25, xzr
  40a0e8:	b	40a120 <variable_expand_string@@Base+0x210>
  40a0ec:	mov	x25, xzr
  40a0f0:	mov	x22, x24
  40a0f4:	b	40a120 <variable_expand_string@@Base+0x210>
  40a0f8:	mov	w8, wzr
  40a0fc:	mov	x22, x23
  40a100:	tbz	w8, #31, 40a0e4 <variable_expand_string@@Base+0x1d4>
  40a104:	mov	x0, x23
  40a108:	mov	x1, x22
  40a10c:	bl	40a3c8 <expand_argument@@Base>
  40a110:	mov	x23, x0
  40a114:	bl	4067d0 <strlen@plt>
  40a118:	add	x24, x23, x0
  40a11c:	mov	x25, x23
  40a120:	mov	w2, #0x3a                  	// #58
  40a124:	mov	x0, x23
  40a128:	mov	x1, x24
  40a12c:	bl	4180f4 <lindex@@Base>
  40a130:	mov	x26, x0
  40a134:	cbz	x0, 40a2a8 <variable_expand_string@@Base+0x398>
  40a138:	add	x21, x26, #0x1
  40a13c:	mov	w2, #0x3d                  	// #61
  40a140:	mov	x0, x21
  40a144:	mov	x1, x24
  40a148:	bl	4180f4 <lindex@@Base>
  40a14c:	cbz	x0, 40a288 <variable_expand_string@@Base+0x378>
  40a150:	stur	x25, [x29, #-24]
  40a154:	sub	x25, x26, x23
  40a158:	mov	x20, x0
  40a15c:	mov	x0, x23
  40a160:	mov	x1, x25
  40a164:	stur	x27, [x29, #-40]
  40a168:	bl	421ac8 <lookup_variable@@Base>
  40a16c:	mov	x27, x0
  40a170:	cbnz	x0, 40a1b8 <variable_expand_string@@Base+0x2a8>
  40a174:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40a178:	ldr	w8, [x8, #96]
  40a17c:	cbz	w8, 40a1b8 <variable_expand_string@@Base+0x2a8>
  40a180:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40a184:	ldr	x28, [x8, #1552]
  40a188:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40a18c:	mov	w2, #0x5                   	// #5
  40a190:	mov	x0, xzr
  40a194:	add	x1, x1, #0x89f
  40a198:	bl	406e50 <dcgettext@plt>
  40a19c:	mov	x2, x0
  40a1a0:	mov	x0, x28
  40a1a4:	mov	x1, x25
  40a1a8:	mov	w3, w25
  40a1ac:	mov	x4, x23
  40a1b0:	adrp	x28, 43f000 <stdio_traced@@Base+0x1a38>
  40a1b4:	bl	418f84 <error@@Base>
  40a1b8:	cbz	x27, 40a294 <variable_expand_string@@Base+0x384>
  40a1bc:	ldr	x0, [x27, #8]
  40a1c0:	ldur	x25, [x29, #-24]
  40a1c4:	ldrb	w8, [x0]
  40a1c8:	cbz	w8, 40a2a4 <variable_expand_string@@Base+0x394>
  40a1cc:	ldrb	w8, [x27, #44]
  40a1d0:	add	x28, x20, #0x1
  40a1d4:	tbz	w8, #0, 40a1e4 <variable_expand_string@@Base+0x2d4>
  40a1d8:	mov	x0, x27
  40a1dc:	mov	x1, xzr
  40a1e0:	bl	409d08 <recursively_expand_for_file@@Base>
  40a1e4:	sub	x25, x20, x21
  40a1e8:	add	x8, x25, #0x11
  40a1ec:	and	x8, x8, #0xfffffffffffffff0
  40a1f0:	mov	x9, sp
  40a1f4:	sub	x20, x9, x8
  40a1f8:	mov	sp, x20
  40a1fc:	mov	w8, #0x25                  	// #37
  40a200:	stp	x20, x0, [x29, #-56]
  40a204:	strb	w8, [x20], #1
  40a208:	mov	x0, x20
  40a20c:	mov	x1, x21
  40a210:	mov	x2, x25
  40a214:	bl	406790 <memcpy@plt>
  40a218:	mov	x1, x28
  40a21c:	sub	x28, x24, x28
  40a220:	add	x8, x28, #0x11
  40a224:	and	x8, x8, #0xfffffffffffffff0
  40a228:	mov	x9, sp
  40a22c:	strb	wzr, [x20, x25]
  40a230:	sub	x25, x9, x8
  40a234:	mov	sp, x25
  40a238:	mov	x21, x25
  40a23c:	mov	w8, #0x25                  	// #37
  40a240:	strb	w8, [x21], #1
  40a244:	mov	x0, x21
  40a248:	mov	x2, x28
  40a24c:	bl	406790 <memcpy@plt>
  40a250:	mov	x0, x20
  40a254:	strb	wzr, [x21, x28]
  40a258:	bl	41ae68 <find_percent@@Base>
  40a25c:	cbz	x0, 40a2cc <variable_expand_string@@Base+0x3bc>
  40a260:	add	x28, x0, #0x1
  40a264:	mov	x0, x21
  40a268:	bl	41ae68 <find_percent@@Base>
  40a26c:	cmp	x0, #0x0
  40a270:	csinc	x8, xzr, x0, eq  // eq = none
  40a274:	mov	x25, x21
  40a278:	mov	x2, x20
  40a27c:	mov	x20, x28
  40a280:	mov	x21, x8
  40a284:	b	40a2d0 <variable_expand_string@@Base+0x3c0>
  40a288:	mov	x26, xzr
  40a28c:	cbnz	x26, 40a2c0 <variable_expand_string@@Base+0x3b0>
  40a290:	b	40a2ac <variable_expand_string@@Base+0x39c>
  40a294:	ldur	x27, [x29, #-40]
  40a298:	ldur	x25, [x29, #-24]
  40a29c:	cbnz	x26, 40a2c0 <variable_expand_string@@Base+0x3b0>
  40a2a0:	b	40a2ac <variable_expand_string@@Base+0x39c>
  40a2a4:	ldur	x27, [x29, #-40]
  40a2a8:	cbnz	x26, 40a2c0 <variable_expand_string@@Base+0x3b0>
  40a2ac:	sub	x2, x24, x23
  40a2b0:	mov	x0, x19
  40a2b4:	mov	x1, x23
  40a2b8:	bl	40a494 <expand_argument@@Base+0xcc>
  40a2bc:	mov	x19, x0
  40a2c0:	mov	x0, x25
  40a2c4:	bl	406cf0 <free@plt>
  40a2c8:	b	409fb8 <variable_expand_string@@Base+0xa8>
  40a2cc:	ldur	x2, [x29, #-56]
  40a2d0:	ldur	x28, [x29, #-48]
  40a2d4:	mov	x0, x19
  40a2d8:	mov	x3, x25
  40a2dc:	mov	x4, x20
  40a2e0:	mov	x1, x28
  40a2e4:	mov	x5, x21
  40a2e8:	bl	40c730 <patsubst_expand_pat@@Base>
  40a2ec:	ldrb	w8, [x27, #44]
  40a2f0:	mov	x19, x0
  40a2f4:	tbz	w8, #0, 40a300 <variable_expand_string@@Base+0x3f0>
  40a2f8:	mov	x0, x28
  40a2fc:	bl	406cf0 <free@plt>
  40a300:	ldur	x27, [x29, #-40]
  40a304:	ldur	x25, [x29, #-24]
  40a308:	adrp	x28, 43f000 <stdio_traced@@Base+0x1a38>
  40a30c:	cbnz	x26, 40a2c0 <variable_expand_string@@Base+0x3b0>
  40a310:	b	40a2ac <variable_expand_string@@Base+0x39c>
  40a314:	ldur	x0, [x29, #-32]
  40a318:	bl	406cf0 <free@plt>
  40a31c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40a320:	add	x1, x1, #0x989
  40a324:	mov	w2, #0x1                   	// #1
  40a328:	mov	x0, x19
  40a32c:	bl	409c78 <variable_buffer_output@@Base>
  40a330:	ldr	x8, [x28, #4048]
  40a334:	add	x0, x8, x27
  40a338:	mov	sp, x29
  40a33c:	ldp	x20, x19, [sp, #80]
  40a340:	ldp	x22, x21, [sp, #64]
  40a344:	ldp	x24, x23, [sp, #48]
  40a348:	ldp	x26, x25, [sp, #32]
  40a34c:	ldp	x28, x27, [sp, #16]
  40a350:	ldp	x29, x30, [sp], #96
  40a354:	ret
  40a358:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40a35c:	ldr	x8, [x8, #1472]
  40a360:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40a364:	add	x1, x1, #0x87f
  40a368:	mov	w2, #0x5                   	// #5
  40a36c:	ldr	x19, [x8]
  40a370:	bl	406e50 <dcgettext@plt>
  40a374:	mov	x2, x0
  40a378:	mov	x0, x19
  40a37c:	mov	x1, xzr
  40a380:	bl	4190fc <fatal@@Base>
  40a384:	stp	x29, x30, [sp, #-32]!
  40a388:	str	x19, [sp, #16]
  40a38c:	adrp	x19, 43f000 <stdio_traced@@Base+0x1a38>
  40a390:	ldr	x8, [x19, #4048]
  40a394:	mov	x29, sp
  40a398:	cbnz	x8, 40a3b8 <variable_expand_string@@Base+0x4a8>
  40a39c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40a3a0:	mov	w9, #0xc8                  	// #200
  40a3a4:	mov	w0, #0xc8                  	// #200
  40a3a8:	str	x9, [x8, #2800]
  40a3ac:	bl	418070 <xmalloc@@Base>
  40a3b0:	str	x0, [x19, #4048]
  40a3b4:	strb	wzr, [x0]
  40a3b8:	ldr	x0, [x19, #4048]
  40a3bc:	ldr	x19, [sp, #16]
  40a3c0:	ldp	x29, x30, [sp], #32
  40a3c4:	ret

000000000040a3c8 <expand_argument@@Base>:
  40a3c8:	stp	x29, x30, [sp, #-48]!
  40a3cc:	cmp	x0, x1
  40a3d0:	stp	x22, x21, [sp, #16]
  40a3d4:	stp	x20, x19, [sp, #32]
  40a3d8:	mov	x29, sp
  40a3dc:	b.eq	40a410 <expand_argument@@Base+0x48>  // b.none
  40a3e0:	mov	x19, x0
  40a3e4:	cbz	x1, 40a424 <expand_argument@@Base+0x5c>
  40a3e8:	ldrb	w8, [x1]
  40a3ec:	cbz	w8, 40a424 <expand_argument@@Base+0x5c>
  40a3f0:	sub	x20, x1, x19
  40a3f4:	cmp	x20, #0x3e8
  40a3f8:	add	x0, x20, #0x1
  40a3fc:	b.lt	40a438 <expand_argument@@Base+0x70>  // b.tstop
  40a400:	bl	418070 <xmalloc@@Base>
  40a404:	mov	x21, x0
  40a408:	mov	x22, x0
  40a40c:	b	40a450 <expand_argument@@Base+0x88>
  40a410:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  40a414:	add	x0, x0, #0x989
  40a418:	bl	4180bc <xstrdup@@Base>
  40a41c:	mov	x19, x0
  40a420:	b	40a47c <expand_argument@@Base+0xb4>
  40a424:	mov	x0, x19
  40a428:	mov	x1, xzr
  40a42c:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  40a430:	mov	x19, x0
  40a434:	b	40a47c <expand_argument@@Base+0xb4>
  40a438:	add	x9, x0, #0xf
  40a43c:	mov	x8, sp
  40a440:	and	x9, x9, #0xfffffffffffffff0
  40a444:	sub	x21, x8, x9
  40a448:	mov	sp, x21
  40a44c:	mov	x22, xzr
  40a450:	mov	x0, x21
  40a454:	mov	x1, x19
  40a458:	mov	x2, x20
  40a45c:	bl	406790 <memcpy@plt>
  40a460:	mov	x0, x21
  40a464:	mov	x1, xzr
  40a468:	strb	wzr, [x21, x20]
  40a46c:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  40a470:	mov	x19, x0
  40a474:	mov	x0, x22
  40a478:	bl	406cf0 <free@plt>
  40a47c:	mov	x0, x19
  40a480:	mov	sp, x29
  40a484:	ldp	x20, x19, [sp, #32]
  40a488:	ldp	x22, x21, [sp, #16]
  40a48c:	ldp	x29, x30, [sp], #48
  40a490:	ret
  40a494:	stp	x29, x30, [sp, #-64]!
  40a498:	stp	x22, x21, [sp, #32]
  40a49c:	stp	x20, x19, [sp, #48]
  40a4a0:	mov	x21, x1
  40a4a4:	mov	x19, x0
  40a4a8:	mov	x0, x1
  40a4ac:	mov	x1, x2
  40a4b0:	str	x23, [sp, #16]
  40a4b4:	mov	x29, sp
  40a4b8:	mov	x22, x2
  40a4bc:	bl	421ac8 <lookup_variable@@Base>
  40a4c0:	mov	x20, x0
  40a4c4:	cbnz	x0, 40a508 <expand_argument@@Base+0x140>
  40a4c8:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40a4cc:	ldr	w8, [x8, #96]
  40a4d0:	cbz	w8, 40a508 <expand_argument@@Base+0x140>
  40a4d4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40a4d8:	ldr	x23, [x8, #1552]
  40a4dc:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40a4e0:	add	x1, x1, #0x89f
  40a4e4:	mov	w2, #0x5                   	// #5
  40a4e8:	mov	x0, xzr
  40a4ec:	bl	406e50 <dcgettext@plt>
  40a4f0:	mov	x2, x0
  40a4f4:	mov	x0, x23
  40a4f8:	mov	x1, x22
  40a4fc:	mov	w3, w22
  40a500:	mov	x4, x21
  40a504:	bl	418f84 <error@@Base>
  40a508:	cbz	x20, 40a564 <expand_argument@@Base+0x19c>
  40a50c:	ldr	x21, [x20, #8]
  40a510:	ldrb	w8, [x21]
  40a514:	cbnz	w8, 40a520 <expand_argument@@Base+0x158>
  40a518:	ldrb	w8, [x20, #44]
  40a51c:	tbz	w8, #1, 40a564 <expand_argument@@Base+0x19c>
  40a520:	ldrb	w8, [x20, #44]
  40a524:	tbz	w8, #0, 40a538 <expand_argument@@Base+0x170>
  40a528:	mov	x0, x20
  40a52c:	mov	x1, xzr
  40a530:	bl	409d08 <recursively_expand_for_file@@Base>
  40a534:	mov	x21, x0
  40a538:	mov	x0, x21
  40a53c:	bl	4067d0 <strlen@plt>
  40a540:	mov	x2, x0
  40a544:	mov	x0, x19
  40a548:	mov	x1, x21
  40a54c:	bl	409c78 <variable_buffer_output@@Base>
  40a550:	ldrb	w8, [x20, #44]
  40a554:	mov	x19, x0
  40a558:	tbz	w8, #0, 40a564 <expand_argument@@Base+0x19c>
  40a55c:	mov	x0, x21
  40a560:	bl	406cf0 <free@plt>
  40a564:	mov	x0, x19
  40a568:	ldp	x20, x19, [sp, #48]
  40a56c:	ldp	x22, x21, [sp, #32]
  40a570:	ldr	x23, [sp, #16]
  40a574:	ldp	x29, x30, [sp], #64
  40a578:	ret

000000000040a57c <variable_expand@@Base>:
  40a57c:	stp	x29, x30, [sp, #-16]!
  40a580:	mov	x1, x0
  40a584:	mov	x2, #0xffffffffffffffff    	// #-1
  40a588:	mov	x0, xzr
  40a58c:	mov	x29, sp
  40a590:	bl	409f10 <variable_expand_string@@Base>
  40a594:	ldp	x29, x30, [sp], #16
  40a598:	ret

000000000040a59c <variable_expand_for_file@@Base>:
  40a59c:	stp	x29, x30, [sp, #-48]!
  40a5a0:	stp	x22, x21, [sp, #16]
  40a5a4:	stp	x20, x19, [sp, #32]
  40a5a8:	mov	x29, sp
  40a5ac:	cbz	x1, 40a5f0 <variable_expand_for_file@@Base+0x54>
  40a5b0:	ldr	x8, [x1, #80]
  40a5b4:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  40a5b8:	ldr	x20, [x19, #2440]
  40a5bc:	adrp	x21, 43f000 <stdio_traced@@Base+0x1a38>
  40a5c0:	str	x8, [x19, #2440]
  40a5c4:	ldr	x8, [x1, #32]
  40a5c8:	ldr	x22, [x21, #1552]
  40a5cc:	cbz	x8, 40a5dc <variable_expand_for_file@@Base+0x40>
  40a5d0:	ldr	x9, [x8]
  40a5d4:	cmp	x9, #0x0
  40a5d8:	csel	x8, xzr, x8, eq  // eq = none
  40a5dc:	str	x8, [x21, #1552]
  40a5e0:	bl	40a57c <variable_expand@@Base>
  40a5e4:	str	x20, [x19, #2440]
  40a5e8:	str	x22, [x21, #1552]
  40a5ec:	b	40a5f4 <variable_expand_for_file@@Base+0x58>
  40a5f0:	bl	40a57c <variable_expand@@Base>
  40a5f4:	ldp	x20, x19, [sp, #32]
  40a5f8:	ldp	x22, x21, [sp, #16]
  40a5fc:	ldp	x29, x30, [sp], #48
  40a600:	ret

000000000040a604 <install_variable_buffer@@Base>:
  40a604:	stp	x29, x30, [sp, #-16]!
  40a608:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40a60c:	ldr	x9, [x8, #4048]
  40a610:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  40a614:	mov	x29, sp
  40a618:	str	x9, [x0]
  40a61c:	ldr	x9, [x10, #2800]
  40a620:	str	x9, [x1]
  40a624:	str	xzr, [x8, #4048]
  40a628:	bl	40a384 <variable_expand_string@@Base+0x474>
  40a62c:	ldp	x29, x30, [sp], #16
  40a630:	ret

000000000040a634 <restore_variable_buffer@@Base>:
  40a634:	stp	x29, x30, [sp, #-48]!
  40a638:	str	x21, [sp, #16]
  40a63c:	adrp	x21, 43f000 <stdio_traced@@Base+0x1a38>
  40a640:	ldr	x8, [x21, #4048]
  40a644:	stp	x20, x19, [sp, #32]
  40a648:	mov	x20, x0
  40a64c:	mov	x29, sp
  40a650:	mov	x0, x8
  40a654:	mov	x19, x1
  40a658:	bl	406cf0 <free@plt>
  40a65c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40a660:	str	x20, [x21, #4048]
  40a664:	str	x19, [x8, #2800]
  40a668:	ldp	x20, x19, [sp, #32]
  40a66c:	ldr	x21, [sp, #16]
  40a670:	ldp	x29, x30, [sp], #48
  40a674:	ret
  40a678:	stp	x29, x30, [sp, #-64]!
  40a67c:	stp	x24, x23, [sp, #16]
  40a680:	stp	x22, x21, [sp, #32]
  40a684:	stp	x20, x19, [sp, #48]
  40a688:	mov	x29, sp
  40a68c:	cbz	x2, 40a6b4 <restore_variable_buffer@@Base+0x80>
  40a690:	mov	w24, w3
  40a694:	mov	x22, x2
  40a698:	mov	x20, x1
  40a69c:	mov	x21, x0
  40a6a0:	cbz	w3, 40a6bc <restore_variable_buffer@@Base+0x88>
  40a6a4:	ldr	w8, [x22, #16]
  40a6a8:	cmp	w8, #0x0
  40a6ac:	cset	w23, eq  // eq = none
  40a6b0:	b	40a6c0 <restore_variable_buffer@@Base+0x8c>
  40a6b4:	bl	40a384 <variable_expand_string@@Base+0x474>
  40a6b8:	b	40a784 <restore_variable_buffer@@Base+0x150>
  40a6bc:	mov	w23, wzr
  40a6c0:	ldr	x2, [x22, #8]
  40a6c4:	mov	x0, x21
  40a6c8:	mov	x1, x20
  40a6cc:	bl	421d10 <lookup_variable_in_set@@Base>
  40a6d0:	cbz	x0, 40a6f4 <restore_variable_buffer@@Base+0xc0>
  40a6d4:	mov	x19, x0
  40a6d8:	cbnz	w24, 40a6e4 <restore_variable_buffer@@Base+0xb0>
  40a6dc:	ldrb	w8, [x19, #44]
  40a6e0:	tbnz	w8, #7, 40a6f4 <restore_variable_buffer@@Base+0xc0>
  40a6e4:	ldrb	w8, [x19, #44]
  40a6e8:	tbnz	w8, #1, 40a70c <restore_variable_buffer@@Base+0xd8>
  40a6ec:	bl	40a384 <variable_expand_string@@Base+0x474>
  40a6f0:	b	40a720 <restore_variable_buffer@@Base+0xec>
  40a6f4:	ldr	x2, [x22]
  40a6f8:	mov	x0, x21
  40a6fc:	mov	x1, x20
  40a700:	mov	w3, w23
  40a704:	bl	40a678 <restore_variable_buffer@@Base+0x44>
  40a708:	b	40a784 <restore_variable_buffer@@Base+0x150>
  40a70c:	ldr	x2, [x22]
  40a710:	mov	x0, x21
  40a714:	mov	x1, x20
  40a718:	mov	w3, w23
  40a71c:	bl	40a678 <restore_variable_buffer@@Base+0x44>
  40a720:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40a724:	ldr	x8, [x8, #4048]
  40a728:	mov	x20, x0
  40a72c:	cmp	x0, x8
  40a730:	b.ls	40a74c <restore_variable_buffer@@Base+0x118>  // b.plast
  40a734:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  40a738:	add	x1, x1, #0xeb4
  40a73c:	mov	w2, #0x1                   	// #1
  40a740:	mov	x0, x20
  40a744:	bl	409c78 <variable_buffer_output@@Base>
  40a748:	mov	x20, x0
  40a74c:	ldr	w21, [x19, #44]
  40a750:	ldr	x19, [x19, #8]
  40a754:	mov	x0, x19
  40a758:	bl	4067d0 <strlen@plt>
  40a75c:	mov	x2, x0
  40a760:	mov	x0, x20
  40a764:	mov	x1, x19
  40a768:	tbnz	w21, #0, 40a774 <restore_variable_buffer@@Base+0x140>
  40a76c:	bl	409c78 <variable_buffer_output@@Base>
  40a770:	b	40a784 <restore_variable_buffer@@Base+0x150>
  40a774:	bl	409f10 <variable_expand_string@@Base>
  40a778:	mov	x19, x0
  40a77c:	bl	4067d0 <strlen@plt>
  40a780:	add	x0, x19, x0
  40a784:	ldp	x20, x19, [sp, #48]
  40a788:	ldp	x22, x21, [sp, #32]
  40a78c:	ldp	x24, x23, [sp, #16]
  40a790:	ldp	x29, x30, [sp], #64
  40a794:	ret

000000000040a798 <lookup_file@@Base>:
  40a798:	sub	sp, sp, #0xa0
  40a79c:	stp	x29, x30, [sp, #144]
  40a7a0:	ldrb	w8, [x0]
  40a7a4:	add	x29, sp, #0x90
  40a7a8:	cmp	w8, #0x2e
  40a7ac:	b.ne	40a7fc <lookup_file@@Base+0x64>  // b.any
  40a7b0:	ldrb	w9, [x0, #1]
  40a7b4:	cmp	w9, #0x2f
  40a7b8:	b.ne	40a7fc <lookup_file@@Base+0x64>  // b.any
  40a7bc:	mov	x10, x0
  40a7c0:	ldrb	w9, [x10, #2]!
  40a7c4:	cbz	w9, 40a7fc <lookup_file@@Base+0x64>
  40a7c8:	add	x0, x0, #0x1
  40a7cc:	ldrb	w8, [x0, #1]!
  40a7d0:	mov	x9, x10
  40a7d4:	add	x10, x10, #0x1
  40a7d8:	cmp	w8, #0x2f
  40a7dc:	b.eq	40a7cc <lookup_file@@Base+0x34>  // b.none
  40a7e0:	ldrb	w8, [x0]
  40a7e4:	cmp	w8, #0x2e
  40a7e8:	b.ne	40a7fc <lookup_file@@Base+0x64>  // b.any
  40a7ec:	ldrb	w10, [x0, #1]
  40a7f0:	cmp	w10, #0x2f
  40a7f4:	b.eq	40a7bc <lookup_file@@Base+0x24>  // b.none
  40a7f8:	b	40a800 <lookup_file@@Base+0x68>
  40a7fc:	mov	x9, x0
  40a800:	adrp	x10, 426000 <_IO_stdin_used@@Base+0x10e0>
  40a804:	add	x10, x10, #0x8c6
  40a808:	tst	w8, #0xff
  40a80c:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40a810:	csel	x8, x10, x9, eq  // eq = none
  40a814:	add	x0, x0, #0xb00
  40a818:	mov	x1, sp
  40a81c:	str	x8, [sp, #8]
  40a820:	bl	40fbd8 <hash_find_item@@Base>
  40a824:	ldp	x29, x30, [sp, #144]
  40a828:	add	sp, sp, #0xa0
  40a82c:	ret

000000000040a830 <enter_file@@Base>:
  40a830:	sub	sp, sp, #0xd0
  40a834:	stp	x22, x21, [sp, #176]
  40a838:	mov	x21, x0
  40a83c:	str	x0, [sp, #8]
  40a840:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40a844:	add	x0, x0, #0xb00
  40a848:	mov	x1, sp
  40a84c:	stp	x29, x30, [sp, #144]
  40a850:	str	x23, [sp, #160]
  40a854:	stp	x20, x19, [sp, #192]
  40a858:	add	x29, sp, #0x90
  40a85c:	bl	40fad4 <hash_find_slot@@Base>
  40a860:	ldr	x19, [x0]
  40a864:	mov	x20, x0
  40a868:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  40a86c:	cbz	x19, 40a884 <enter_file@@Base+0x54>
  40a870:	ldr	x8, [x23, #2344]
  40a874:	cmp	x8, x19
  40a878:	b.eq	40a884 <enter_file@@Base+0x54>  // b.none
  40a87c:	ldr	x8, [x19, #104]
  40a880:	cbz	x8, 40a900 <enter_file@@Base+0xd0>
  40a884:	mov	w0, #0x90                  	// #144
  40a888:	bl	418094 <xcalloc@@Base>
  40a88c:	ldr	w8, [x0, #136]
  40a890:	mov	x22, x0
  40a894:	stp	x21, x21, [x0]
  40a898:	and	w8, w8, #0xfffffffc
  40a89c:	orr	w8, w8, #0x1
  40a8a0:	str	w8, [x0, #136]
  40a8a4:	cbz	x19, 40a8c8 <enter_file@@Base+0x98>
  40a8a8:	ldr	x8, [x23, #2344]
  40a8ac:	cmp	x8, x19
  40a8b0:	b.eq	40a8c8 <enter_file@@Base+0x98>  // b.none
  40a8b4:	str	x19, [x22, #104]
  40a8b8:	ldr	x8, [x19, #64]
  40a8bc:	str	x22, [x8, #56]
  40a8c0:	str	x22, [x19, #64]
  40a8c4:	b	40a8e0 <enter_file@@Base+0xb0>
  40a8c8:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40a8cc:	add	x0, x0, #0xb00
  40a8d0:	mov	x1, x22
  40a8d4:	mov	x2, x20
  40a8d8:	str	x22, [x22, #64]
  40a8dc:	bl	40fc04 <hash_insert_at@@Base>
  40a8e0:	mov	x19, x22
  40a8e4:	mov	x0, x19
  40a8e8:	ldp	x20, x19, [sp, #192]
  40a8ec:	ldp	x22, x21, [sp, #176]
  40a8f0:	ldr	x23, [sp, #160]
  40a8f4:	ldp	x29, x30, [sp, #144]
  40a8f8:	add	sp, sp, #0xd0
  40a8fc:	ret
  40a900:	ldr	w8, [x19, #136]
  40a904:	and	w8, w8, #0xffffffef
  40a908:	str	w8, [x19, #136]
  40a90c:	b	40a8e4 <enter_file@@Base+0xb4>

000000000040a910 <rehash_file@@Base>:
  40a910:	sub	sp, sp, #0xd0
  40a914:	stp	x29, x30, [sp, #144]
  40a918:	stp	x24, x23, [sp, #160]
  40a91c:	stp	x22, x21, [sp, #176]
  40a920:	stp	x20, x19, [sp, #192]
  40a924:	ldr	w8, [x0, #136]
  40a928:	mov	x20, x1
  40a92c:	add	x29, sp, #0x90
  40a930:	mov	x21, x0
  40a934:	and	w8, w8, #0xffffffef
  40a938:	str	w8, [x0, #136]
  40a93c:	str	x1, [sp, #8]
  40a940:	mov	x1, sp
  40a944:	bl	40acbc <rehash_file@@Base+0x3ac>
  40a948:	cbz	w0, 40ac38 <rehash_file@@Base+0x328>
  40a94c:	ldr	x8, [x21, #8]
  40a950:	str	x8, [sp, #8]
  40a954:	mov	x19, x21
  40a958:	ldr	x21, [x21, #72]
  40a95c:	cbnz	x21, 40a954 <rehash_file@@Base+0x44>
  40a960:	mov	x1, sp
  40a964:	mov	x0, x19
  40a968:	bl	40acbc <rehash_file@@Base+0x3ac>
  40a96c:	cbnz	w0, 40ac50 <rehash_file@@Base+0x340>
  40a970:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40a974:	add	x0, x0, #0xb00
  40a978:	mov	x1, x19
  40a97c:	bl	40fd5c <hash_delete@@Base>
  40a980:	cmp	x19, x0
  40a984:	b.ne	40ac50 <rehash_file@@Base+0x340>  // b.any
  40a988:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40a98c:	add	x0, x0, #0xb00
  40a990:	mov	x1, sp
  40a994:	str	x20, [sp, #8]
  40a998:	bl	40fad4 <hash_find_slot@@Base>
  40a99c:	ldr	x8, [x19, #104]
  40a9a0:	ldr	x24, [x0]
  40a9a4:	mov	x2, x0
  40a9a8:	str	x20, [x19, #8]
  40a9ac:	cbz	x8, 40a9bc <rehash_file@@Base+0xac>
  40a9b0:	str	x20, [x8, #8]
  40a9b4:	ldr	x8, [x8, #56]
  40a9b8:	cbnz	x8, 40a9b0 <rehash_file@@Base+0xa0>
  40a9bc:	cbz	x24, 40aa40 <rehash_file@@Base+0x130>
  40a9c0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40a9c4:	ldr	x8, [x8, #2344]
  40a9c8:	cmp	x8, x24
  40a9cc:	b.eq	40aa40 <rehash_file@@Base+0x130>  // b.none
  40a9d0:	ldr	x22, [x19, #32]
  40a9d4:	cbz	x22, 40aa58 <rehash_file@@Base+0x148>
  40a9d8:	ldr	x21, [x24, #32]
  40a9dc:	cbz	x21, 40aa54 <rehash_file@@Base+0x144>
  40a9e0:	cmp	x22, x21
  40a9e4:	b.eq	40aa58 <rehash_file@@Base+0x148>  // b.none
  40a9e8:	ldr	x0, [x19]
  40a9ec:	bl	4067d0 <strlen@plt>
  40a9f0:	ldr	x8, [x21]
  40a9f4:	mov	x21, x0
  40a9f8:	cbz	x8, 40aa78 <rehash_file@@Base+0x168>
  40a9fc:	mov	x0, x8
  40aa00:	bl	4067d0 <strlen@plt>
  40aa04:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40aa08:	add	x8, x21, x0
  40aa0c:	add	x1, x1, #0x8c9
  40aa10:	mov	w2, #0x5                   	// #5
  40aa14:	mov	x0, xzr
  40aa18:	add	x23, x8, #0x14
  40aa1c:	bl	406e50 <dcgettext@plt>
  40aa20:	ldr	x8, [x24, #32]
  40aa24:	ldr	x3, [x19]
  40aa28:	mov	x2, x0
  40aa2c:	mov	x0, x22
  40aa30:	ldp	x4, x5, [x8]
  40aa34:	mov	x1, x23
  40aa38:	bl	418f84 <error@@Base>
  40aa3c:	b	40aaa0 <rehash_file@@Base+0x190>
  40aa40:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40aa44:	add	x0, x0, #0xb00
  40aa48:	mov	x1, x19
  40aa4c:	bl	40fc04 <hash_insert_at@@Base>
  40aa50:	b	40ac38 <rehash_file@@Base+0x328>
  40aa54:	str	x22, [x24, #32]
  40aa58:	ldr	x8, [x24, #24]
  40aa5c:	cbz	x8, 40ab14 <rehash_file@@Base+0x204>
  40aa60:	mov	x9, x8
  40aa64:	ldr	x8, [x8]
  40aa68:	cbnz	x8, 40aa60 <rehash_file@@Base+0x150>
  40aa6c:	ldr	x8, [x19, #24]
  40aa70:	str	x8, [x9]
  40aa74:	b	40ab1c <rehash_file@@Base+0x20c>
  40aa78:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40aa7c:	add	x1, x1, #0x8f7
  40aa80:	mov	w2, #0x5                   	// #5
  40aa84:	mov	x0, xzr
  40aa88:	bl	406e50 <dcgettext@plt>
  40aa8c:	ldr	x3, [x19]
  40aa90:	mov	x2, x0
  40aa94:	mov	x0, x22
  40aa98:	mov	x1, x21
  40aa9c:	bl	418f84 <error@@Base>
  40aaa0:	mov	x0, x20
  40aaa4:	bl	4067d0 <strlen@plt>
  40aaa8:	ldr	x22, [x19, #32]
  40aaac:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40aab0:	add	x21, x0, x21
  40aab4:	add	x1, x1, #0x92f
  40aab8:	mov	w2, #0x5                   	// #5
  40aabc:	mov	x0, xzr
  40aac0:	bl	406e50 <dcgettext@plt>
  40aac4:	ldr	x3, [x19]
  40aac8:	mov	x2, x0
  40aacc:	mov	x0, x22
  40aad0:	mov	x1, x21
  40aad4:	mov	x4, x20
  40aad8:	bl	418f84 <error@@Base>
  40aadc:	ldr	x22, [x19, #32]
  40aae0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40aae4:	add	x1, x1, #0x961
  40aae8:	mov	w2, #0x5                   	// #5
  40aaec:	mov	x0, xzr
  40aaf0:	bl	406e50 <dcgettext@plt>
  40aaf4:	ldr	x4, [x19]
  40aaf8:	mov	x2, x0
  40aafc:	mov	x0, x22
  40ab00:	mov	x1, x21
  40ab04:	mov	x3, x20
  40ab08:	bl	418f84 <error@@Base>
  40ab0c:	ldr	x8, [x24, #24]
  40ab10:	cbnz	x8, 40aa60 <rehash_file@@Base+0x150>
  40ab14:	ldr	x8, [x19, #24]
  40ab18:	str	x8, [x24, #24]
  40ab1c:	ldr	x1, [x19, #80]
  40ab20:	add	x0, x24, #0x50
  40ab24:	bl	42243c <merge_variable_set_lists@@Base>
  40ab28:	ldr	x8, [x24, #104]
  40ab2c:	cbz	x8, 40ab44 <rehash_file@@Base+0x234>
  40ab30:	ldrb	w9, [x19, #137]
  40ab34:	tbz	w9, #3, 40ab40 <rehash_file@@Base+0x230>
  40ab38:	ldr	x9, [x19, #104]
  40ab3c:	cbz	x9, 40ac78 <rehash_file@@Base+0x368>
  40ab40:	cbnz	x8, 40ab58 <rehash_file@@Base+0x248>
  40ab44:	ldr	x8, [x19, #104]
  40ab48:	cbz	x8, 40ab58 <rehash_file@@Base+0x248>
  40ab4c:	ldrb	w9, [x24, #137]
  40ab50:	tbnz	w9, #3, 40ac54 <rehash_file@@Base+0x344>
  40ab54:	str	x8, [x24, #104]
  40ab58:	ldr	x8, [x19, #112]
  40ab5c:	ldr	x9, [x24, #112]
  40ab60:	cmp	x8, x9
  40ab64:	b.ls	40ab6c <rehash_file@@Base+0x25c>  // b.plast
  40ab68:	str	x8, [x24, #112]
  40ab6c:	ldr	x8, [x19, #120]
  40ab70:	ldr	w9, [x24, #136]
  40ab74:	mov	w11, #0xffef                	// #65519
  40ab78:	movk	w11, #0xfffd, lsl #16
  40ab7c:	str	x8, [x24, #120]
  40ab80:	ldr	w8, [x19, #136]
  40ab84:	and	w8, w8, #0x20
  40ab88:	orr	w8, w8, w9
  40ab8c:	str	w8, [x24, #136]
  40ab90:	ldr	w10, [x19, #136]
  40ab94:	orr	w10, w10, w9
  40ab98:	lsr	w10, w10, #8
  40ab9c:	bfi	w8, w10, #8, #1
  40aba0:	str	w8, [x24, #136]
  40aba4:	ldr	w10, [x19, #136]
  40aba8:	orr	w10, w10, w9
  40abac:	lsr	w10, w10, #9
  40abb0:	bfi	w8, w10, #9, #1
  40abb4:	str	w8, [x24, #136]
  40abb8:	ldr	w10, [x19, #136]
  40abbc:	orr	w10, w10, w9
  40abc0:	lsr	w10, w10, #10
  40abc4:	bfi	w8, w10, #10, #1
  40abc8:	str	w8, [x24, #136]
  40abcc:	ldr	w10, [x19, #136]
  40abd0:	orr	w10, w10, w9
  40abd4:	lsr	w10, w10, #11
  40abd8:	bfi	w8, w10, #11, #1
  40abdc:	str	w8, [x24, #136]
  40abe0:	ldr	w10, [x19, #136]
  40abe4:	orr	w10, w10, w9
  40abe8:	lsr	w10, w10, #12
  40abec:	bfi	w8, w10, #12, #1
  40abf0:	str	w8, [x24, #136]
  40abf4:	ldr	w10, [x19, #136]
  40abf8:	orr	w10, w10, w9
  40abfc:	lsr	w10, w10, #13
  40ac00:	bfi	w8, w10, #13, #1
  40ac04:	str	w8, [x24, #136]
  40ac08:	ldr	w10, [x19, #136]
  40ac0c:	orr	w10, w10, w9
  40ac10:	lsr	w10, w10, #6
  40ac14:	bfi	w8, w10, #6, #1
  40ac18:	str	w8, [x24, #136]
  40ac1c:	ldr	w10, [x19, #136]
  40ac20:	and	w8, w8, w11
  40ac24:	orr	w9, w10, w9
  40ac28:	and	w9, w9, #0x20000
  40ac2c:	orr	w8, w8, w9
  40ac30:	str	w8, [x24, #136]
  40ac34:	str	x24, [x19, #72]
  40ac38:	ldp	x20, x19, [sp, #192]
  40ac3c:	ldp	x22, x21, [sp, #176]
  40ac40:	ldp	x24, x23, [sp, #160]
  40ac44:	ldp	x29, x30, [sp, #144]
  40ac48:	add	sp, sp, #0xd0
  40ac4c:	ret
  40ac50:	bl	406c10 <abort@plt>
  40ac54:	ldr	x0, [x19]
  40ac58:	bl	4067d0 <strlen@plt>
  40ac5c:	mov	x21, x0
  40ac60:	mov	x0, x20
  40ac64:	bl	4067d0 <strlen@plt>
  40ac68:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40ac6c:	add	x21, x0, x21
  40ac70:	add	x1, x1, #0x9d3
  40ac74:	b	40ac98 <rehash_file@@Base+0x388>
  40ac78:	ldr	x0, [x19]
  40ac7c:	bl	4067d0 <strlen@plt>
  40ac80:	mov	x21, x0
  40ac84:	mov	x0, x20
  40ac88:	bl	4067d0 <strlen@plt>
  40ac8c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40ac90:	add	x21, x0, x21
  40ac94:	add	x1, x1, #0x99f
  40ac98:	mov	w2, #0x5                   	// #5
  40ac9c:	mov	x0, xzr
  40aca0:	bl	406e50 <dcgettext@plt>
  40aca4:	ldr	x3, [x19]
  40aca8:	mov	x2, x0
  40acac:	mov	x0, xzr
  40acb0:	mov	x1, x21
  40acb4:	mov	x4, x20
  40acb8:	bl	4190fc <fatal@@Base>
  40acbc:	stp	x29, x30, [sp, #-16]!
  40acc0:	ldr	x0, [x0, #8]
  40acc4:	ldr	x1, [x1, #8]
  40acc8:	mov	x29, sp
  40accc:	cmp	x0, x1
  40acd0:	b.eq	40ace0 <rehash_file@@Base+0x3d0>  // b.none
  40acd4:	bl	406cb0 <strcmp@plt>
  40acd8:	ldp	x29, x30, [sp], #16
  40acdc:	ret
  40ace0:	mov	w0, wzr
  40ace4:	ldp	x29, x30, [sp], #16
  40ace8:	ret

000000000040acec <rename_file@@Base>:
  40acec:	stp	x29, x30, [sp, #-32]!
  40acf0:	str	x19, [sp, #16]
  40acf4:	mov	x29, sp
  40acf8:	mov	x19, x0
  40acfc:	bl	40a910 <rehash_file@@Base>
  40ad00:	cbz	x19, 40ad14 <rename_file@@Base+0x28>
  40ad04:	ldr	x8, [x19, #8]
  40ad08:	str	x8, [x19]
  40ad0c:	ldr	x19, [x19, #56]
  40ad10:	cbnz	x19, 40ad04 <rename_file@@Base+0x18>
  40ad14:	ldr	x19, [sp, #16]
  40ad18:	ldp	x29, x30, [sp], #32
  40ad1c:	ret

000000000040ad20 <remove_intermediates@@Base>:
  40ad20:	stp	x29, x30, [sp, #-96]!
  40ad24:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40ad28:	ldrb	w8, [x8, #2904]
  40ad2c:	stp	x28, x27, [sp, #16]
  40ad30:	stp	x26, x25, [sp, #32]
  40ad34:	stp	x24, x23, [sp, #48]
  40ad38:	stp	x22, x21, [sp, #64]
  40ad3c:	stp	x20, x19, [sp, #80]
  40ad40:	mov	x29, sp
  40ad44:	tbnz	w8, #0, 40af6c <remove_intermediates@@Base+0x24c>
  40ad48:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40ad4c:	adrp	x9, 440000 <shell_var@@Base+0x18>
  40ad50:	ldr	w8, [x8, #3260]
  40ad54:	ldr	w9, [x9, #236]
  40ad58:	orr	w8, w9, w8
  40ad5c:	cbnz	w8, 40af6c <remove_intermediates@@Base+0x24c>
  40ad60:	mov	w19, w0
  40ad64:	adrp	x27, 440000 <shell_var@@Base+0x18>
  40ad68:	cbz	w0, 40ad74 <remove_intermediates@@Base+0x54>
  40ad6c:	ldr	w8, [x27, #32]
  40ad70:	cbnz	w8, 40af6c <remove_intermediates@@Base+0x24c>
  40ad74:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40ad78:	add	x9, x9, #0xb00
  40ad7c:	ldr	x8, [x9, #32]
  40ad80:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  40ad84:	mov	w20, wzr
  40ad88:	cmp	x8, #0x1
  40ad8c:	b.lt	40af54 <remove_intermediates@@Base+0x234>  // b.tstop
  40ad90:	ldr	x22, [x9]
  40ad94:	mov	w21, #0x20                  	// #32
  40ad98:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  40ad9c:	movk	w21, #0x1, lsl #16
  40ada0:	mov	w10, #0x9000                	// #36864
  40ada4:	add	x26, x22, x8, lsl #3
  40ada8:	b	40adc8 <remove_intermediates@@Base+0xa8>
  40adac:	mov	x20, x27
  40adb0:	mov	x27, x21
  40adb4:	mov	w21, #0x20                  	// #32
  40adb8:	movk	w21, #0x1, lsl #16
  40adbc:	add	x22, x22, #0x8
  40adc0:	cmp	x22, x26
  40adc4:	b.cs	40af54 <remove_intermediates@@Base+0x234>  // b.hs, b.nlast
  40adc8:	ldr	x28, [x22]
  40adcc:	cbz	x28, 40adbc <remove_intermediates@@Base+0x9c>
  40add0:	ldr	x8, [x23, #2344]
  40add4:	cmp	x8, x28
  40add8:	b.eq	40adbc <remove_intermediates@@Base+0x9c>  // b.none
  40addc:	ldr	w8, [x28, #136]
  40ade0:	tbz	w8, #14, 40adbc <remove_intermediates@@Base+0x9c>
  40ade4:	and	w9, w8, w21
  40ade8:	cmp	w9, #0x20
  40adec:	b.eq	40adbc <remove_intermediates@@Base+0x9c>  // b.none
  40adf0:	tst	w8, w10
  40adf4:	b.ne	40adbc <remove_intermediates@@Base+0x9c>  // b.any
  40adf8:	and	w8, w8, #0x3
  40adfc:	cmp	w8, #0x1
  40ae00:	b.eq	40adbc <remove_intermediates@@Base+0x9c>  // b.none
  40ae04:	ldr	w8, [x27, #32]
  40ae08:	cbz	w8, 40ae14 <remove_intermediates@@Base+0xf4>
  40ae0c:	mov	w24, wzr
  40ae10:	b	40ae40 <remove_intermediates@@Base+0x120>
  40ae14:	ldr	x0, [x28]
  40ae18:	bl	406f50 <unlink@plt>
  40ae1c:	mov	w24, w0
  40ae20:	tbnz	w0, #31, 40ae2c <remove_intermediates@@Base+0x10c>
  40ae24:	mov	w10, #0x9000                	// #36864
  40ae28:	b	40ae40 <remove_intermediates@@Base+0x120>
  40ae2c:	bl	406f00 <__errno_location@plt>
  40ae30:	ldr	w8, [x0]
  40ae34:	mov	w10, #0x9000                	// #36864
  40ae38:	cmp	w8, #0x2
  40ae3c:	b.eq	40adbc <remove_intermediates@@Base+0x9c>  // b.none
  40ae40:	ldrb	w8, [x28, #138]
  40ae44:	tbnz	w8, #0, 40adbc <remove_intermediates@@Base+0x9c>
  40ae48:	cbz	w19, 40ae9c <remove_intermediates@@Base+0x17c>
  40ae4c:	ldr	x0, [x28]
  40ae50:	mov	x21, x27
  40ae54:	mov	x27, x20
  40ae58:	bl	4067d0 <strlen@plt>
  40ae5c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40ae60:	mov	x20, x25
  40ae64:	mov	x25, x0
  40ae68:	mov	w2, #0x5                   	// #5
  40ae6c:	mov	x0, xzr
  40ae70:	add	x1, x1, #0xa07
  40ae74:	bl	406e50 <dcgettext@plt>
  40ae78:	ldr	x3, [x28]
  40ae7c:	mov	x2, x0
  40ae80:	mov	x0, xzr
  40ae84:	mov	x1, x25
  40ae88:	mov	x25, x20
  40ae8c:	bl	418f84 <error@@Base>
  40ae90:	mov	w10, #0x9000                	// #36864
  40ae94:	tbz	w24, #31, 40adac <remove_intermediates@@Base+0x8c>
  40ae98:	b	40af3c <remove_intermediates@@Base+0x21c>
  40ae9c:	cbnz	w20, 40aed0 <remove_intermediates@@Base+0x1b0>
  40aea0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40aea4:	ldrb	w8, [x8, #3236]
  40aea8:	tbz	w8, #0, 40aed0 <remove_intermediates@@Base+0x1b0>
  40aeac:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40aeb0:	mov	w2, #0x5                   	// #5
  40aeb4:	mov	x0, xzr
  40aeb8:	add	x1, x1, #0xa2b
  40aebc:	bl	406e50 <dcgettext@plt>
  40aec0:	bl	406ef0 <printf@plt>
  40aec4:	ldr	x0, [x25, #2512]
  40aec8:	bl	406d80 <fflush@plt>
  40aecc:	mov	w10, #0x9000                	// #36864
  40aed0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40aed4:	ldr	w8, [x8, #3232]
  40aed8:	cbz	w8, 40aeec <remove_intermediates@@Base+0x1cc>
  40aedc:	mov	x21, x27
  40aee0:	mov	x27, x20
  40aee4:	tbz	w24, #31, 40adac <remove_intermediates@@Base+0x8c>
  40aee8:	b	40af3c <remove_intermediates@@Base+0x21c>
  40aeec:	mov	x21, x27
  40aef0:	cbz	w20, 40af04 <remove_intermediates@@Base+0x1e4>
  40aef4:	mov	w0, #0x20                  	// #32
  40aef8:	mov	x27, x20
  40aefc:	bl	406f20 <putchar@plt>
  40af00:	b	40af20 <remove_intermediates@@Base+0x200>
  40af04:	ldr	x3, [x25, #2512]
  40af08:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40af0c:	mov	w1, #0x3                   	// #3
  40af10:	mov	w2, #0x1                   	// #1
  40af14:	add	x0, x0, #0xa4b
  40af18:	mov	w27, #0x1                   	// #1
  40af1c:	bl	406d40 <fwrite@plt>
  40af20:	ldr	x0, [x28]
  40af24:	ldr	x1, [x25, #2512]
  40af28:	bl	4067e0 <fputs@plt>
  40af2c:	ldr	x0, [x25, #2512]
  40af30:	bl	406d80 <fflush@plt>
  40af34:	mov	w10, #0x9000                	// #36864
  40af38:	tbz	w24, #31, 40adac <remove_intermediates@@Base+0x8c>
  40af3c:	ldr	x1, [x28]
  40af40:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  40af44:	add	x0, x0, #0x173
  40af48:	bl	41928c <perror_with_name@@Base>
  40af4c:	mov	w10, #0x9000                	// #36864
  40af50:	b	40adac <remove_intermediates@@Base+0x8c>
  40af54:	cbnz	w19, 40af6c <remove_intermediates@@Base+0x24c>
  40af58:	cbz	w20, 40af6c <remove_intermediates@@Base+0x24c>
  40af5c:	mov	w0, #0xa                   	// #10
  40af60:	bl	406f20 <putchar@plt>
  40af64:	ldr	x0, [x25, #2512]
  40af68:	bl	406d80 <fflush@plt>
  40af6c:	ldp	x20, x19, [sp, #80]
  40af70:	ldp	x22, x21, [sp, #64]
  40af74:	ldp	x24, x23, [sp, #48]
  40af78:	ldp	x26, x25, [sp, #32]
  40af7c:	ldp	x28, x27, [sp, #16]
  40af80:	ldp	x29, x30, [sp], #96
  40af84:	ret

000000000040af88 <split_prereqs@@Base>:
  40af88:	stp	x29, x30, [sp, #-32]!
  40af8c:	mov	x29, sp
  40af90:	str	x0, [x29, #24]
  40af94:	add	x0, x29, #0x18
  40af98:	mov	w1, #0x28                  	// #40
  40af9c:	mov	w2, #0x100                 	// #256
  40afa0:	mov	x3, xzr
  40afa4:	mov	w4, wzr
  40afa8:	str	x19, [sp, #16]
  40afac:	bl	41b484 <parse_file_seq@@Base>
  40afb0:	ldr	x8, [x29, #24]
  40afb4:	mov	x19, x0
  40afb8:	ldrb	w9, [x8]
  40afbc:	cbz	w9, 40b010 <split_prereqs@@Base+0x88>
  40afc0:	add	x8, x8, #0x1
  40afc4:	add	x0, x29, #0x18
  40afc8:	mov	w1, #0x28                  	// #40
  40afcc:	mov	w2, #0x1                   	// #1
  40afd0:	mov	x3, xzr
  40afd4:	mov	w4, wzr
  40afd8:	str	x8, [x29, #24]
  40afdc:	bl	41b484 <parse_file_seq@@Base>
  40afe0:	cbz	x19, 40b020 <split_prereqs@@Base+0x98>
  40afe4:	mov	x9, x19
  40afe8:	mov	x8, x9
  40afec:	ldr	x9, [x9]
  40aff0:	cbnz	x9, 40afe8 <split_prereqs@@Base+0x60>
  40aff4:	str	x0, [x8]
  40aff8:	cbz	x0, 40b010 <split_prereqs@@Base+0x88>
  40affc:	ldrh	w8, [x0, #32]
  40b000:	orr	w8, w8, #0x200
  40b004:	strh	w8, [x0, #32]
  40b008:	ldr	x0, [x0]
  40b00c:	cbnz	x0, 40affc <split_prereqs@@Base+0x74>
  40b010:	mov	x0, x19
  40b014:	ldr	x19, [sp, #16]
  40b018:	ldp	x29, x30, [sp], #32
  40b01c:	ret
  40b020:	mov	x19, x0
  40b024:	cbnz	x0, 40affc <split_prereqs@@Base+0x74>
  40b028:	b	40b010 <split_prereqs@@Base+0x88>

000000000040b02c <enter_prereqs@@Base>:
  40b02c:	stp	x29, x30, [sp, #-96]!
  40b030:	stp	x20, x19, [sp, #80]
  40b034:	mov	x19, x0
  40b038:	str	x27, [sp, #16]
  40b03c:	stp	x26, x25, [sp, #32]
  40b040:	stp	x24, x23, [sp, #48]
  40b044:	stp	x22, x21, [sp, #64]
  40b048:	mov	x29, sp
  40b04c:	cbz	x0, 40b1dc <enter_prereqs@@Base+0x1b0>
  40b050:	mov	x20, x1
  40b054:	cbz	x1, 40b190 <enter_prereqs@@Base+0x164>
  40b058:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  40b05c:	add	x0, x0, #0x989
  40b060:	bl	40a57c <variable_expand@@Base>
  40b064:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x20e0>
  40b068:	mov	x21, x0
  40b06c:	mov	x27, xzr
  40b070:	add	x22, x22, #0x346
  40b074:	mov	x23, x19
  40b078:	b	40b098 <enter_prereqs@@Base+0x6c>
  40b07c:	ldrh	w8, [x23, #32]
  40b080:	mov	x27, x23
  40b084:	ldr	x23, [x23]
  40b088:	str	x20, [x27, #24]
  40b08c:	orr	w8, w8, #0x400
  40b090:	strh	w8, [x27, #32]
  40b094:	cbz	x23, 40b190 <enter_prereqs@@Base+0x164>
  40b098:	ldr	x25, [x23, #8]
  40b09c:	mov	x0, x25
  40b0a0:	bl	4067d0 <strlen@plt>
  40b0a4:	add	x9, x0, #0x10
  40b0a8:	mov	x8, sp
  40b0ac:	and	x9, x9, #0xfffffffffffffff0
  40b0b0:	sub	x24, x8, x9
  40b0b4:	add	x2, x0, #0x1
  40b0b8:	mov	sp, x24
  40b0bc:	mov	x0, x24
  40b0c0:	mov	x1, x25
  40b0c4:	bl	406790 <memcpy@plt>
  40b0c8:	mov	x0, x24
  40b0cc:	bl	41ae68 <find_percent@@Base>
  40b0d0:	cbz	x0, 40b07c <enter_prereqs@@Base+0x50>
  40b0d4:	ldrb	w8, [x20]
  40b0d8:	mov	x26, x0
  40b0dc:	add	x25, x0, #0x1
  40b0e0:	cbz	w8, 40b124 <enter_prereqs@@Base+0xf8>
  40b0e4:	add	x4, x22, #0x1
  40b0e8:	mov	x0, x21
  40b0ec:	mov	x1, x20
  40b0f0:	mov	x2, x22
  40b0f4:	mov	x3, x24
  40b0f8:	mov	x5, x25
  40b0fc:	bl	40c730 <patsubst_expand_pat@@Base>
  40b100:	ldrb	w8, [x21]
  40b104:	cbz	w8, 40b15c <enter_prereqs@@Base+0x130>
  40b108:	sub	x1, x0, x21
  40b10c:	mov	x0, x21
  40b110:	bl	421000 <strcache_add_len@@Base>
  40b114:	mov	w8, #0x1                   	// #1
  40b118:	str	x0, [x23, #8]
  40b11c:	cbnz	w8, 40b07c <enter_prereqs@@Base+0x50>
  40b120:	b	40b094 <enter_prereqs@@Base+0x68>
  40b124:	mov	x0, x26
  40b128:	bl	4067d0 <strlen@plt>
  40b12c:	mov	x2, x0
  40b130:	mov	x0, x26
  40b134:	mov	x1, x25
  40b138:	bl	4067a0 <memmove@plt>
  40b13c:	mov	x0, x24
  40b140:	bl	4067d0 <strlen@plt>
  40b144:	add	x2, x0, #0x1
  40b148:	mov	x0, x21
  40b14c:	mov	x1, x24
  40b150:	bl	409c78 <variable_buffer_output@@Base>
  40b154:	ldrb	w8, [x21]
  40b158:	cbnz	w8, 40b108 <enter_prereqs@@Base+0xdc>
  40b15c:	cmp	x23, x19
  40b160:	b.eq	40b170 <enter_prereqs@@Base+0x144>  // b.none
  40b164:	ldr	x24, [x23]
  40b168:	str	x24, [x27]
  40b16c:	b	40b178 <enter_prereqs@@Base+0x14c>
  40b170:	ldr	x24, [x19]
  40b174:	mov	x19, x24
  40b178:	mov	x0, x23
  40b17c:	bl	406cf0 <free@plt>
  40b180:	mov	w8, wzr
  40b184:	mov	x23, x24
  40b188:	cbnz	w8, 40b07c <enter_prereqs@@Base+0x50>
  40b18c:	b	40b094 <enter_prereqs@@Base+0x68>
  40b190:	cbz	x19, 40b1dc <enter_prereqs@@Base+0x1b0>
  40b194:	mov	x20, x19
  40b198:	b	40b1b4 <enter_prereqs@@Base+0x188>
  40b19c:	ldrh	w8, [x20, #32]
  40b1a0:	str	xzr, [x20, #8]
  40b1a4:	and	w8, w8, #0xfffffbff
  40b1a8:	strh	w8, [x20, #32]
  40b1ac:	ldr	x20, [x20]
  40b1b0:	cbz	x20, 40b1dc <enter_prereqs@@Base+0x1b0>
  40b1b4:	ldrb	w8, [x20, #33]
  40b1b8:	tbnz	w8, #3, 40b1ac <enter_prereqs@@Base+0x180>
  40b1bc:	ldr	x0, [x20, #8]
  40b1c0:	bl	40a798 <lookup_file@@Base>
  40b1c4:	str	x0, [x20, #16]
  40b1c8:	cbnz	x0, 40b19c <enter_prereqs@@Base+0x170>
  40b1cc:	ldr	x0, [x20, #8]
  40b1d0:	bl	40a830 <enter_file@@Base>
  40b1d4:	str	x0, [x20, #16]
  40b1d8:	b	40b19c <enter_prereqs@@Base+0x170>
  40b1dc:	mov	x0, x19
  40b1e0:	mov	sp, x29
  40b1e4:	ldp	x20, x19, [sp, #80]
  40b1e8:	ldp	x22, x21, [sp, #64]
  40b1ec:	ldp	x24, x23, [sp, #48]
  40b1f0:	ldp	x26, x25, [sp, #32]
  40b1f4:	ldr	x27, [sp, #16]
  40b1f8:	ldp	x29, x30, [sp], #96
  40b1fc:	ret

000000000040b200 <expand_extra_prereqs@@Base>:
  40b200:	stp	x29, x30, [sp, #-32]!
  40b204:	stp	x20, x19, [sp, #16]
  40b208:	mov	x29, sp
  40b20c:	cbz	x0, 40b228 <expand_extra_prereqs@@Base+0x28>
  40b210:	ldr	x0, [x0, #8]
  40b214:	bl	40a57c <variable_expand@@Base>
  40b218:	bl	40af88 <split_prereqs@@Base>
  40b21c:	mov	x19, x0
  40b220:	cbnz	x19, 40b230 <expand_extra_prereqs@@Base+0x30>
  40b224:	b	40b270 <expand_extra_prereqs@@Base+0x70>
  40b228:	mov	x19, xzr
  40b22c:	cbz	x19, 40b270 <expand_extra_prereqs@@Base+0x70>
  40b230:	mov	x20, x19
  40b234:	b	40b250 <expand_extra_prereqs@@Base+0x50>
  40b238:	ldrh	w8, [x20, #32]
  40b23c:	str	xzr, [x20, #8]
  40b240:	orr	w8, w8, #0x1000
  40b244:	strh	w8, [x20, #32]
  40b248:	ldr	x20, [x20]
  40b24c:	cbz	x20, 40b270 <expand_extra_prereqs@@Base+0x70>
  40b250:	ldr	x0, [x20, #8]
  40b254:	bl	40a798 <lookup_file@@Base>
  40b258:	str	x0, [x20, #16]
  40b25c:	cbnz	x0, 40b238 <expand_extra_prereqs@@Base+0x38>
  40b260:	ldr	x0, [x20, #8]
  40b264:	bl	40a830 <enter_file@@Base>
  40b268:	str	x0, [x20, #16]
  40b26c:	b	40b238 <expand_extra_prereqs@@Base+0x38>
  40b270:	mov	x0, x19
  40b274:	ldp	x20, x19, [sp, #16]
  40b278:	ldp	x29, x30, [sp], #32
  40b27c:	ret

000000000040b280 <snap_deps@@Base>:
  40b280:	stp	x29, x30, [sp, #-64]!
  40b284:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40b288:	ldr	w8, [x8, #44]
  40b28c:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40b290:	mov	w10, #0x1                   	// #1
  40b294:	str	x23, [sp, #16]
  40b298:	stp	x22, x21, [sp, #32]
  40b29c:	stp	x20, x19, [sp, #48]
  40b2a0:	mov	x29, sp
  40b2a4:	str	w10, [x9, #2808]
  40b2a8:	cbz	w8, 40b34c <snap_deps@@Base+0xcc>
  40b2ac:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  40b2b0:	add	x19, x19, #0xb00
  40b2b4:	mov	x0, x19
  40b2b8:	mov	x1, xzr
  40b2bc:	mov	x2, xzr
  40b2c0:	bl	410080 <hash_dump@@Base>
  40b2c4:	ldr	x22, [x19, #48]
  40b2c8:	mov	x19, x0
  40b2cc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  40b2d0:	add	x0, x0, #0x53
  40b2d4:	bl	40a798 <lookup_file@@Base>
  40b2d8:	mov	x20, x0
  40b2dc:	cbz	x0, 40b624 <snap_deps@@Base+0x3a4>
  40b2e0:	ldr	x21, [x20]
  40b2e4:	cbz	x20, 40b2f8 <snap_deps@@Base+0x78>
  40b2e8:	mov	x0, x20
  40b2ec:	bl	40b630 <snap_deps@@Base+0x3b0>
  40b2f0:	ldr	x20, [x20, #56]
  40b2f4:	cbnz	x20, 40b2e8 <snap_deps@@Base+0x68>
  40b2f8:	cmp	x22, #0x1
  40b2fc:	b.lt	40b344 <snap_deps@@Base+0xc4>  // b.tstop
  40b300:	add	x22, x19, x22, lsl #3
  40b304:	mov	x23, x19
  40b308:	b	40b318 <snap_deps@@Base+0x98>
  40b30c:	add	x23, x23, #0x8
  40b310:	cmp	x23, x22
  40b314:	b.cs	40b344 <snap_deps@@Base+0xc4>  // b.hs, b.nlast
  40b318:	ldr	x20, [x23]
  40b31c:	cbnz	x20, 40b32c <snap_deps@@Base+0xac>
  40b320:	b	40b30c <snap_deps@@Base+0x8c>
  40b324:	ldr	x20, [x20, #56]
  40b328:	cbz	x20, 40b30c <snap_deps@@Base+0x8c>
  40b32c:	ldr	x8, [x20]
  40b330:	cmp	x8, x21
  40b334:	b.eq	40b324 <snap_deps@@Base+0xa4>  // b.none
  40b338:	mov	x0, x20
  40b33c:	bl	40b630 <snap_deps@@Base+0x3b0>
  40b340:	b	40b324 <snap_deps@@Base+0xa4>
  40b344:	mov	x0, x19
  40b348:	bl	406cf0 <free@plt>
  40b34c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b350:	add	x0, x0, #0xa4f
  40b354:	bl	40a798 <lookup_file@@Base>
  40b358:	cbnz	x0, 40b390 <snap_deps@@Base+0x110>
  40b35c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b360:	add	x0, x0, #0xa59
  40b364:	bl	40a798 <lookup_file@@Base>
  40b368:	cbnz	x0, 40b3cc <snap_deps@@Base+0x14c>
  40b36c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b370:	add	x0, x0, #0xa6e
  40b374:	bl	40a798 <lookup_file@@Base>
  40b378:	cbz	x0, 40b440 <snap_deps@@Base+0x1c0>
  40b37c:	mov	w8, #0x2800                	// #10240
  40b380:	mov	w9, #0x1                   	// #1
  40b384:	b	40b408 <snap_deps@@Base+0x188>
  40b388:	ldr	x0, [x0, #56]
  40b38c:	cbz	x0, 40b35c <snap_deps@@Base+0xdc>
  40b390:	ldr	x8, [x0, #24]
  40b394:	cbnz	x8, 40b3a4 <snap_deps@@Base+0x124>
  40b398:	b	40b388 <snap_deps@@Base+0x108>
  40b39c:	ldr	x8, [x8]
  40b3a0:	cbz	x8, 40b388 <snap_deps@@Base+0x108>
  40b3a4:	ldr	x9, [x8, #16]
  40b3a8:	cbz	x9, 40b39c <snap_deps@@Base+0x11c>
  40b3ac:	ldr	w10, [x9, #136]
  40b3b0:	orr	w10, w10, #0x20
  40b3b4:	str	w10, [x9, #136]
  40b3b8:	ldr	x9, [x9, #56]
  40b3bc:	cbnz	x9, 40b3ac <snap_deps@@Base+0x12c>
  40b3c0:	b	40b39c <snap_deps@@Base+0x11c>
  40b3c4:	ldr	x0, [x0, #56]
  40b3c8:	cbz	x0, 40b36c <snap_deps@@Base+0xec>
  40b3cc:	ldr	x8, [x0, #24]
  40b3d0:	cbnz	x8, 40b3e0 <snap_deps@@Base+0x160>
  40b3d4:	b	40b3c4 <snap_deps@@Base+0x144>
  40b3d8:	ldr	x8, [x8]
  40b3dc:	cbz	x8, 40b3c4 <snap_deps@@Base+0x144>
  40b3e0:	ldr	x9, [x8, #16]
  40b3e4:	cbz	x9, 40b3d8 <snap_deps@@Base+0x158>
  40b3e8:	ldr	w10, [x9, #136]
  40b3ec:	orr	w10, w10, #0x80
  40b3f0:	str	w10, [x9, #136]
  40b3f4:	ldr	x9, [x9, #56]
  40b3f8:	cbnz	x9, 40b3e8 <snap_deps@@Base+0x168>
  40b3fc:	b	40b3d8 <snap_deps@@Base+0x158>
  40b400:	ldr	x0, [x0, #56]
  40b404:	cbz	x0, 40b440 <snap_deps@@Base+0x1c0>
  40b408:	ldr	x10, [x0, #24]
  40b40c:	cbnz	x10, 40b41c <snap_deps@@Base+0x19c>
  40b410:	b	40b400 <snap_deps@@Base+0x180>
  40b414:	ldr	x10, [x10]
  40b418:	cbz	x10, 40b400 <snap_deps@@Base+0x180>
  40b41c:	ldr	x11, [x10, #16]
  40b420:	cbz	x11, 40b414 <snap_deps@@Base+0x194>
  40b424:	ldr	w12, [x11, #136]
  40b428:	stp	x9, x9, [x11, #112]
  40b42c:	orr	w12, w12, w8
  40b430:	str	w12, [x11, #136]
  40b434:	ldr	x11, [x11, #56]
  40b438:	cbnz	x11, 40b424 <snap_deps@@Base+0x1a4>
  40b43c:	b	40b414 <snap_deps@@Base+0x194>
  40b440:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b444:	add	x0, x0, #0xa75
  40b448:	bl	40a798 <lookup_file@@Base>
  40b44c:	cbnz	x0, 40b474 <snap_deps@@Base+0x1f4>
  40b450:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b454:	add	x0, x0, #0xa83
  40b458:	bl	40a798 <lookup_file@@Base>
  40b45c:	cbz	x0, 40b4e8 <snap_deps@@Base+0x268>
  40b460:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40b464:	mov	w9, #0x1                   	// #1
  40b468:	b	40b4b0 <snap_deps@@Base+0x230>
  40b46c:	ldr	x0, [x0, #56]
  40b470:	cbz	x0, 40b450 <snap_deps@@Base+0x1d0>
  40b474:	ldr	x8, [x0, #24]
  40b478:	cbnz	x8, 40b488 <snap_deps@@Base+0x208>
  40b47c:	b	40b46c <snap_deps@@Base+0x1ec>
  40b480:	ldr	x8, [x8]
  40b484:	cbz	x8, 40b46c <snap_deps@@Base+0x1ec>
  40b488:	ldr	x9, [x8, #16]
  40b48c:	cbz	x9, 40b480 <snap_deps@@Base+0x200>
  40b490:	ldr	w10, [x9, #136]
  40b494:	orr	w10, w10, #0x4000
  40b498:	str	w10, [x9, #136]
  40b49c:	ldr	x9, [x9, #56]
  40b4a0:	cbnz	x9, 40b490 <snap_deps@@Base+0x210>
  40b4a4:	b	40b480 <snap_deps@@Base+0x200>
  40b4a8:	ldr	x0, [x0, #56]
  40b4ac:	cbz	x0, 40b4e8 <snap_deps@@Base+0x268>
  40b4b0:	ldr	x10, [x0, #24]
  40b4b4:	cbnz	x10, 40b4c8 <snap_deps@@Base+0x248>
  40b4b8:	strb	w9, [x8, #2904]
  40b4bc:	b	40b4a8 <snap_deps@@Base+0x228>
  40b4c0:	ldr	x10, [x10]
  40b4c4:	cbz	x10, 40b4a8 <snap_deps@@Base+0x228>
  40b4c8:	ldr	x11, [x10, #16]
  40b4cc:	cbz	x11, 40b4c0 <snap_deps@@Base+0x240>
  40b4d0:	ldr	w12, [x11, #136]
  40b4d4:	orr	w12, w12, #0xc000
  40b4d8:	str	w12, [x11, #136]
  40b4dc:	ldr	x11, [x11, #56]
  40b4e0:	cbnz	x11, 40b4d0 <snap_deps@@Base+0x250>
  40b4e4:	b	40b4c0 <snap_deps@@Base+0x240>
  40b4e8:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b4ec:	add	x0, x0, #0xa8e
  40b4f0:	bl	40a798 <lookup_file@@Base>
  40b4f4:	cbz	x0, 40b50c <snap_deps@@Base+0x28c>
  40b4f8:	ldrb	w8, [x0, #137]
  40b4fc:	tbz	w8, #3, 40b50c <snap_deps@@Base+0x28c>
  40b500:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40b504:	mov	w9, #0x1                   	// #1
  40b508:	str	w9, [x8, #292]
  40b50c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b510:	add	x0, x0, #0xaa4
  40b514:	bl	40a798 <lookup_file@@Base>
  40b518:	cbz	x0, 40b538 <snap_deps@@Base+0x2b8>
  40b51c:	ldrb	w8, [x0, #137]
  40b520:	tbz	w8, #3, 40b538 <snap_deps@@Base+0x2b8>
  40b524:	ldr	x8, [x0, #24]
  40b528:	cbnz	x8, 40b5dc <snap_deps@@Base+0x35c>
  40b52c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40b530:	mov	w9, #0x1                   	// #1
  40b534:	str	w9, [x8, #3252]
  40b538:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b53c:	add	x0, x0, #0xaac
  40b540:	bl	40a798 <lookup_file@@Base>
  40b544:	cbz	x0, 40b564 <snap_deps@@Base+0x2e4>
  40b548:	ldrb	w8, [x0, #137]
  40b54c:	tbz	w8, #3, 40b564 <snap_deps@@Base+0x2e4>
  40b550:	ldr	x8, [x0, #24]
  40b554:	cbnz	x8, 40b604 <snap_deps@@Base+0x384>
  40b558:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40b55c:	mov	w9, #0x1                   	// #1
  40b560:	str	w9, [x8, #3232]
  40b564:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b568:	add	x0, x0, #0xab4
  40b56c:	bl	40a798 <lookup_file@@Base>
  40b570:	cbz	x0, 40b588 <snap_deps@@Base+0x308>
  40b574:	ldrb	w8, [x0, #137]
  40b578:	tbz	w8, #3, 40b588 <snap_deps@@Base+0x308>
  40b57c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40b580:	mov	w9, #0x1                   	// #1
  40b584:	str	w9, [x8, #68]
  40b588:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b58c:	add	x0, x0, #0xac1
  40b590:	mov	w1, #0xe                   	// #14
  40b594:	bl	421ac8 <lookup_variable@@Base>
  40b598:	bl	40b200 <expand_extra_prereqs@@Base>
  40b59c:	mov	x19, x0
  40b5a0:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40b5a4:	adrp	x1, 40b000 <split_prereqs@@Base+0x78>
  40b5a8:	add	x0, x0, #0xb00
  40b5ac:	add	x1, x1, #0x7b8
  40b5b0:	mov	x2, x19
  40b5b4:	bl	40ff3c <hash_map_arg@@Base>
  40b5b8:	mov	x0, x19
  40b5bc:	bl	418388 <free_ns_chain@@Base>
  40b5c0:	ldp	x20, x19, [sp, #48]
  40b5c4:	ldp	x22, x21, [sp, #32]
  40b5c8:	ldr	x23, [sp, #16]
  40b5cc:	ldp	x29, x30, [sp], #64
  40b5d0:	ret
  40b5d4:	ldr	x8, [x8]
  40b5d8:	cbz	x8, 40b538 <snap_deps@@Base+0x2b8>
  40b5dc:	ldr	x9, [x8, #16]
  40b5e0:	cbz	x9, 40b5d4 <snap_deps@@Base+0x354>
  40b5e4:	ldr	w10, [x9, #132]
  40b5e8:	orr	w10, w10, #0x4
  40b5ec:	str	w10, [x9, #132]
  40b5f0:	ldr	x9, [x9, #56]
  40b5f4:	cbnz	x9, 40b5e4 <snap_deps@@Base+0x364>
  40b5f8:	b	40b5d4 <snap_deps@@Base+0x354>
  40b5fc:	ldr	x8, [x8]
  40b600:	cbz	x8, 40b564 <snap_deps@@Base+0x2e4>
  40b604:	ldr	x9, [x8, #16]
  40b608:	cbz	x9, 40b5fc <snap_deps@@Base+0x37c>
  40b60c:	ldr	w10, [x9, #132]
  40b610:	orr	w10, w10, #0x2
  40b614:	str	w10, [x9, #132]
  40b618:	ldr	x9, [x9, #56]
  40b61c:	cbnz	x9, 40b60c <snap_deps@@Base+0x38c>
  40b620:	b	40b5fc <snap_deps@@Base+0x37c>
  40b624:	mov	x21, xzr
  40b628:	cbnz	x20, 40b2e8 <snap_deps@@Base+0x68>
  40b62c:	b	40b2f8 <snap_deps@@Base+0x78>
  40b630:	stp	x29, x30, [sp, #-96]!
  40b634:	stp	x28, x27, [sp, #16]
  40b638:	stp	x26, x25, [sp, #32]
  40b63c:	stp	x24, x23, [sp, #48]
  40b640:	stp	x22, x21, [sp, #64]
  40b644:	stp	x20, x19, [sp, #80]
  40b648:	mov	x27, x0
  40b64c:	ldr	x23, [x27, #24]!
  40b650:	mov	x29, sp
  40b654:	ldr	w8, [x27, #112]
  40b658:	ldr	x26, [x27, #16]
  40b65c:	and	w8, w8, #0xfffffdff
  40b660:	str	w8, [x27, #112]
  40b664:	cbz	x23, 40b79c <snap_deps@@Base+0x51c>
  40b668:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x20e0>
  40b66c:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b670:	mov	x19, x0
  40b674:	mov	w28, wzr
  40b678:	add	x21, x21, #0x346
  40b67c:	add	x22, x22, #0xb5e
  40b680:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  40b684:	b	40b698 <snap_deps@@Base+0x418>
  40b688:	ldr	x8, [x23]
  40b68c:	mov	x27, x23
  40b690:	mov	x23, x8
  40b694:	cbz	x8, 40b79c <snap_deps@@Base+0x51c>
  40b698:	ldr	x24, [x23, #8]
  40b69c:	cbz	x24, 40b688 <snap_deps@@Base+0x408>
  40b6a0:	ldrh	w8, [x23, #32]
  40b6a4:	tbz	w8, #11, 40b688 <snap_deps@@Base+0x408>
  40b6a8:	tbnz	w8, #10, 40b718 <snap_deps@@Base+0x498>
  40b6ac:	cbz	w28, 40b76c <snap_deps@@Base+0x4ec>
  40b6b0:	ldr	x8, [x23, #24]
  40b6b4:	cbz	x8, 40b6bc <snap_deps@@Base+0x43c>
  40b6b8:	str	x8, [x19, #40]
  40b6bc:	mov	x0, x19
  40b6c0:	bl	407cec <set_file_variables@@Base>
  40b6c4:	ldr	x0, [x23, #8]
  40b6c8:	mov	x1, x19
  40b6cc:	bl	40a59c <variable_expand_for_file@@Base>
  40b6d0:	ldr	x8, [x23, #24]
  40b6d4:	mov	x25, x0
  40b6d8:	cbz	x8, 40b6e0 <snap_deps@@Base+0x460>
  40b6dc:	str	x26, [x19, #40]
  40b6e0:	mov	x0, x24
  40b6e4:	bl	406cf0 <free@plt>
  40b6e8:	mov	x0, x25
  40b6ec:	bl	40af88 <split_prereqs@@Base>
  40b6f0:	ldr	x1, [x23, #24]
  40b6f4:	bl	40b02c <enter_prereqs@@Base>
  40b6f8:	ldr	x8, [x23]
  40b6fc:	cbz	x0, 40b788 <snap_deps@@Base+0x508>
  40b700:	str	x0, [x27]
  40b704:	mov	x27, x0
  40b708:	ldr	x0, [x0]
  40b70c:	cbnz	x0, 40b704 <snap_deps@@Base+0x484>
  40b710:	str	x8, [x27]
  40b714:	b	40b690 <snap_deps@@Base+0x410>
  40b718:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  40b71c:	add	x0, x0, #0x989
  40b720:	bl	40a57c <variable_expand@@Base>
  40b724:	mov	w4, #0x1                   	// #1
  40b728:	mov	w5, #0x2                   	// #2
  40b72c:	mov	x1, x24
  40b730:	mov	x2, x21
  40b734:	mov	x3, x22
  40b738:	mov	w6, wzr
  40b73c:	bl	40c5b8 <subst_expand@@Base>
  40b740:	strb	wzr, [x0]
  40b744:	mov	x0, x24
  40b748:	bl	406cf0 <free@plt>
  40b74c:	ldr	x0, [x20, #4048]
  40b750:	bl	4180bc <xstrdup@@Base>
  40b754:	ldrh	w8, [x23, #32]
  40b758:	mov	x24, x0
  40b75c:	str	x0, [x23, #8]
  40b760:	and	w8, w8, #0xfffffbff
  40b764:	strh	w8, [x23, #32]
  40b768:	cbnz	w28, 40b6b0 <snap_deps@@Base+0x430>
  40b76c:	mov	x0, x19
  40b770:	mov	w1, wzr
  40b774:	bl	421d3c <initialize_file_variables@@Base>
  40b778:	mov	w28, #0x1                   	// #1
  40b77c:	ldr	x8, [x23, #24]
  40b780:	cbnz	x8, 40b6b8 <snap_deps@@Base+0x438>
  40b784:	b	40b6bc <snap_deps@@Base+0x43c>
  40b788:	mov	x0, x23
  40b78c:	str	x8, [x27]
  40b790:	bl	406cf0 <free@plt>
  40b794:	ldr	x8, [x27]
  40b798:	b	40b690 <snap_deps@@Base+0x410>
  40b79c:	ldp	x20, x19, [sp, #80]
  40b7a0:	ldp	x22, x21, [sp, #64]
  40b7a4:	ldp	x24, x23, [sp, #48]
  40b7a8:	ldp	x26, x25, [sp, #32]
  40b7ac:	ldp	x28, x27, [sp, #16]
  40b7b0:	ldp	x29, x30, [sp], #96
  40b7b4:	ret
  40b7b8:	stp	x29, x30, [sp, #-64]!
  40b7bc:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40b7c0:	ldr	w8, [x8, #44]
  40b7c4:	stp	x20, x19, [sp, #48]
  40b7c8:	mov	x19, x0
  40b7cc:	str	x23, [sp, #16]
  40b7d0:	stp	x22, x21, [sp, #32]
  40b7d4:	mov	x29, sp
  40b7d8:	cbnz	w8, 40b7e8 <snap_deps@@Base+0x568>
  40b7dc:	ldr	w8, [x19, #136]
  40b7e0:	and	w8, w8, #0xfffffdff
  40b7e4:	str	w8, [x19, #136]
  40b7e8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40b7ec:	ldrb	w8, [x8, #2904]
  40b7f0:	cmp	w8, #0x1
  40b7f4:	b.ne	40b804 <snap_deps@@Base+0x584>  // b.any
  40b7f8:	ldr	w8, [x19, #136]
  40b7fc:	orr	w8, w8, #0x4000
  40b800:	str	w8, [x19, #136]
  40b804:	ldr	x8, [x19, #80]
  40b808:	cbz	x8, 40b828 <snap_deps@@Base+0x5a8>
  40b80c:	ldr	x2, [x8, #8]
  40b810:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b814:	add	x0, x0, #0xac1
  40b818:	mov	w1, #0xe                   	// #14
  40b81c:	bl	421d10 <lookup_variable_in_set@@Base>
  40b820:	bl	40b200 <expand_extra_prereqs@@Base>
  40b824:	b	40b844 <snap_deps@@Base+0x5c4>
  40b828:	ldrb	w8, [x19, #137]
  40b82c:	tbnz	w8, #3, 40b83c <snap_deps@@Base+0x5bc>
  40b830:	mov	x20, xzr
  40b834:	cbnz	x20, 40b84c <snap_deps@@Base+0x5cc>
  40b838:	b	40b8f0 <snap_deps@@Base+0x670>
  40b83c:	mov	x0, x1
  40b840:	bl	4182f8 <copy_dep_chain@@Base>
  40b844:	mov	x20, x0
  40b848:	cbz	x20, 40b8f0 <snap_deps@@Base+0x670>
  40b84c:	ldr	x22, [x19]
  40b850:	mov	x23, x20
  40b854:	add	x21, x22, #0x1
  40b858:	b	40b874 <snap_deps@@Base+0x5f4>
  40b85c:	add	x1, x8, #0x1
  40b860:	mov	x0, x21
  40b864:	bl	406cb0 <strcmp@plt>
  40b868:	cbz	w0, 40b8c4 <snap_deps@@Base+0x644>
  40b86c:	ldr	x23, [x23]
  40b870:	cbz	x23, 40b8d0 <snap_deps@@Base+0x650>
  40b874:	ldr	x8, [x23, #8]
  40b878:	mov	x9, x8
  40b87c:	cbnz	x8, 40b888 <snap_deps@@Base+0x608>
  40b880:	ldr	x9, [x23, #16]
  40b884:	ldr	x9, [x9]
  40b888:	cmp	x22, x9
  40b88c:	b.eq	40b8c4 <snap_deps@@Base+0x644>  // b.none
  40b890:	ldrb	w9, [x22]
  40b894:	mov	x10, x8
  40b898:	cbnz	x8, 40b8a4 <snap_deps@@Base+0x624>
  40b89c:	ldr	x10, [x23, #16]
  40b8a0:	ldr	x10, [x10]
  40b8a4:	ldrb	w10, [x10]
  40b8a8:	cmp	w9, w10
  40b8ac:	b.ne	40b86c <snap_deps@@Base+0x5ec>  // b.any
  40b8b0:	cbz	w9, 40b8c4 <snap_deps@@Base+0x644>
  40b8b4:	cbnz	x8, 40b85c <snap_deps@@Base+0x5dc>
  40b8b8:	ldr	x8, [x23, #16]
  40b8bc:	ldr	x8, [x8]
  40b8c0:	b	40b85c <snap_deps@@Base+0x5dc>
  40b8c4:	mov	x0, x20
  40b8c8:	bl	418388 <free_ns_chain@@Base>
  40b8cc:	b	40b8f0 <snap_deps@@Base+0x670>
  40b8d0:	ldr	x8, [x19, #24]
  40b8d4:	cbz	x8, 40b8ec <snap_deps@@Base+0x66c>
  40b8d8:	mov	x9, x8
  40b8dc:	ldr	x8, [x8]
  40b8e0:	cbnz	x8, 40b8d8 <snap_deps@@Base+0x658>
  40b8e4:	str	x20, [x9]
  40b8e8:	b	40b8f0 <snap_deps@@Base+0x670>
  40b8ec:	str	x20, [x19, #24]
  40b8f0:	ldp	x20, x19, [sp, #48]
  40b8f4:	ldp	x22, x21, [sp, #32]
  40b8f8:	ldr	x23, [sp, #16]
  40b8fc:	ldp	x29, x30, [sp], #64
  40b900:	ret

000000000040b904 <set_command_state@@Base>:
  40b904:	ldr	w9, [x0, #136]
  40b908:	ldr	x8, [x0, #48]
  40b90c:	bfi	w9, w1, #2, #2
  40b910:	str	w9, [x0, #136]
  40b914:	cbz	x8, 40b94c <set_command_state@@Base+0x48>
  40b918:	ubfiz	w9, w1, #2, #2
  40b91c:	b	40b928 <set_command_state@@Base+0x24>
  40b920:	ldr	x8, [x8]
  40b924:	cbz	x8, 40b94c <set_command_state@@Base+0x48>
  40b928:	ldr	x10, [x8, #16]
  40b92c:	ldr	w11, [x10, #136]
  40b930:	ubfx	w12, w11, #2, #2
  40b934:	cmp	w12, w1
  40b938:	b.cs	40b920 <set_command_state@@Base+0x1c>  // b.hs, b.nlast
  40b93c:	and	w11, w11, #0xfffffff3
  40b940:	orr	w11, w11, w9
  40b944:	str	w11, [x10, #136]
  40b948:	b	40b920 <set_command_state@@Base+0x1c>
  40b94c:	ret

000000000040b950 <file_timestamp_cons@@Base>:
  40b950:	sub	sp, sp, #0x60
  40b954:	stp	x22, x21, [sp, #64]
  40b958:	mov	x22, #0xffffffffffffca02    	// #-13822
  40b95c:	stp	x20, x19, [sp, #80]
  40b960:	mov	x21, x1
  40b964:	mov	x19, x0
  40b968:	lsr	x8, x1, #34
  40b96c:	movk	x22, #0xfb9a, lsl #16
  40b970:	stp	x29, x30, [sp, #48]
  40b974:	add	x29, sp, #0x30
  40b978:	cbnz	x8, 40b99c <file_timestamp_cons@@Base+0x4c>
  40b97c:	lsl	x8, x21, #30
  40b980:	add	w9, w2, #0x3
  40b984:	add	x20, x8, w9, sxtw
  40b988:	cmp	x8, x20
  40b98c:	b.hi	40b99c <file_timestamp_cons@@Base+0x4c>  // b.pmore
  40b990:	add	x8, x22, #0x1
  40b994:	cmp	x20, x8
  40b998:	b.cc	40ba14 <file_timestamp_cons@@Base+0xc4>  // b.lo, b.ul, b.last
  40b99c:	cbnz	x19, 40b9b8 <file_timestamp_cons@@Base+0x68>
  40b9a0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b9a4:	add	x1, x1, #0xad0
  40b9a8:	mov	w2, #0x5                   	// #5
  40b9ac:	mov	x0, xzr
  40b9b0:	bl	406e50 <dcgettext@plt>
  40b9b4:	mov	x19, x0
  40b9b8:	cmp	x21, #0x3
  40b9bc:	mov	w8, #0x3                   	// #3
  40b9c0:	csel	x20, x8, x22, cc  // cc = lo, ul, last
  40b9c4:	add	x0, sp, #0x4
  40b9c8:	mov	x1, x20
  40b9cc:	bl	40ba2c <file_timestamp_sprintf@@Base>
  40b9d0:	mov	x0, x19
  40b9d4:	bl	4067d0 <strlen@plt>
  40b9d8:	mov	x21, x0
  40b9dc:	add	x0, sp, #0x4
  40b9e0:	bl	4067d0 <strlen@plt>
  40b9e4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40b9e8:	add	x21, x0, x21
  40b9ec:	add	x1, x1, #0xadd
  40b9f0:	mov	w2, #0x5                   	// #5
  40b9f4:	mov	x0, xzr
  40b9f8:	bl	406e50 <dcgettext@plt>
  40b9fc:	mov	x2, x0
  40ba00:	add	x4, sp, #0x4
  40ba04:	mov	x0, xzr
  40ba08:	mov	x1, x21
  40ba0c:	mov	x3, x19
  40ba10:	bl	418f84 <error@@Base>
  40ba14:	mov	x0, x20
  40ba18:	ldp	x20, x19, [sp, #80]
  40ba1c:	ldp	x22, x21, [sp, #64]
  40ba20:	ldp	x29, x30, [sp, #48]
  40ba24:	add	sp, sp, #0x60
  40ba28:	ret

000000000040ba2c <file_timestamp_sprintf@@Base>:
  40ba2c:	sub	sp, sp, #0x40
  40ba30:	stp	x22, x21, [sp, #32]
  40ba34:	sub	x22, x1, #0x3
  40ba38:	stp	x20, x19, [sp, #48]
  40ba3c:	mov	x19, x0
  40ba40:	lsr	x8, x22, #30
  40ba44:	add	x0, sp, #0x8
  40ba48:	stp	x29, x30, [sp, #16]
  40ba4c:	add	x29, sp, #0x10
  40ba50:	str	x8, [sp, #8]
  40ba54:	bl	406990 <localtime@plt>
  40ba58:	cbz	x0, 40ba84 <file_timestamp_sprintf@@Base+0x58>
  40ba5c:	ldp	w9, w8, [x0, #16]
  40ba60:	ldp	w5, w4, [x0, #8]
  40ba64:	ldp	w7, w6, [x0]
  40ba68:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40ba6c:	add	w2, w8, #0x76c
  40ba70:	add	w3, w9, #0x1
  40ba74:	add	x1, x1, #0xb09
  40ba78:	mov	x0, x19
  40ba7c:	bl	406870 <sprintf@plt>
  40ba80:	b	40baa8 <file_timestamp_sprintf@@Base+0x7c>
  40ba84:	ldr	x2, [sp, #8]
  40ba88:	tbnz	x2, #63, 40ba98 <file_timestamp_sprintf@@Base+0x6c>
  40ba8c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40ba90:	add	x1, x1, #0x8af
  40ba94:	b	40baa0 <file_timestamp_sprintf@@Base+0x74>
  40ba98:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40ba9c:	add	x1, x1, #0xb27
  40baa0:	mov	x0, x19
  40baa4:	bl	406870 <sprintf@plt>
  40baa8:	mov	x0, x19
  40baac:	bl	4067d0 <strlen@plt>
  40bab0:	add	x21, x19, x0
  40bab4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bab8:	mov	x20, x0
  40babc:	and	w2, w22, #0x3fffffff
  40bac0:	add	x1, x1, #0xb2b
  40bac4:	mov	x0, x21
  40bac8:	bl	406870 <sprintf@plt>
  40bacc:	mov	x0, x21
  40bad0:	bl	4067d0 <strlen@plt>
  40bad4:	add	x8, x0, x20
  40bad8:	add	x8, x19, x8
  40badc:	ldrb	w9, [x8, #-1]!
  40bae0:	cmp	w9, #0x30
  40bae4:	b.eq	40badc <file_timestamp_sprintf@@Base+0xb0>  // b.none
  40bae8:	cmp	w9, #0x2e
  40baec:	cinc	x8, x8, ne  // ne = any
  40baf0:	strb	wzr, [x8]
  40baf4:	ldp	x20, x19, [sp, #48]
  40baf8:	ldp	x22, x21, [sp, #32]
  40bafc:	ldp	x29, x30, [sp, #16]
  40bb00:	add	sp, sp, #0x40
  40bb04:	ret

000000000040bb08 <file_timestamp_now@@Base>:
  40bb08:	sub	sp, sp, #0x40
  40bb0c:	stp	x20, x19, [sp, #48]
  40bb10:	mov	x19, x0
  40bb14:	mov	x1, sp
  40bb18:	mov	w0, wzr
  40bb1c:	stp	x29, x30, [sp, #16]
  40bb20:	str	x21, [sp, #32]
  40bb24:	add	x29, sp, #0x10
  40bb28:	bl	4068d0 <clock_gettime@plt>
  40bb2c:	ldp	x20, x21, [sp]
  40bb30:	cbz	w0, 40bb54 <file_timestamp_now@@Base+0x4c>
  40bb34:	mov	x0, sp
  40bb38:	mov	x1, xzr
  40bb3c:	bl	406ae0 <gettimeofday@plt>
  40bb40:	cbz	w0, 40bb5c <file_timestamp_now@@Base+0x54>
  40bb44:	mov	w8, #0x1                   	// #1
  40bb48:	mov	w9, #0x1                   	// #1
  40bb4c:	cbnz	w9, 40bb70 <file_timestamp_now@@Base+0x68>
  40bb50:	b	40bb88 <file_timestamp_now@@Base+0x80>
  40bb54:	mov	w8, #0x1                   	// #1
  40bb58:	b	40bb88 <file_timestamp_now@@Base+0x80>
  40bb5c:	ldp	x20, x10, [sp]
  40bb60:	mov	w8, #0x3e8                 	// #1000
  40bb64:	mov	w9, wzr
  40bb68:	mul	x21, x10, x8
  40bb6c:	cbz	w9, 40bb88 <file_timestamp_now@@Base+0x80>
  40bb70:	mov	x0, xzr
  40bb74:	bl	406a00 <time@plt>
  40bb78:	mov	w8, #0xca00                	// #51712
  40bb7c:	mov	x20, x0
  40bb80:	mov	x21, xzr
  40bb84:	movk	w8, #0x3b9a, lsl #16
  40bb88:	sxtw	x2, w21
  40bb8c:	mov	x0, xzr
  40bb90:	mov	x1, x20
  40bb94:	str	w8, [x19]
  40bb98:	bl	40b950 <file_timestamp_cons@@Base>
  40bb9c:	ldp	x20, x19, [sp, #48]
  40bba0:	ldr	x21, [sp, #32]
  40bba4:	ldp	x29, x30, [sp, #16]
  40bba8:	add	sp, sp, #0x40
  40bbac:	ret

000000000040bbb0 <print_prereqs@@Base>:
  40bbb0:	stp	x29, x30, [sp, #-48]!
  40bbb4:	str	x21, [sp, #16]
  40bbb8:	stp	x20, x19, [sp, #32]
  40bbbc:	mov	x29, sp
  40bbc0:	cbz	x0, 40bc18 <print_prereqs@@Base+0x68>
  40bbc4:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x20e0>
  40bbc8:	mov	x19, x0
  40bbcc:	mov	x21, xzr
  40bbd0:	add	x20, x20, #0xb95
  40bbd4:	b	40bbe8 <print_prereqs@@Base+0x38>
  40bbd8:	cmp	x21, #0x0
  40bbdc:	csel	x21, x19, x21, eq  // eq = none
  40bbe0:	ldr	x19, [x19]
  40bbe4:	cbz	x19, 40bc10 <print_prereqs@@Base+0x60>
  40bbe8:	ldrb	w8, [x19, #33]
  40bbec:	tbnz	w8, #1, 40bbd8 <print_prereqs@@Base+0x28>
  40bbf0:	ldr	x1, [x19, #8]
  40bbf4:	cbnz	x1, 40bc00 <print_prereqs@@Base+0x50>
  40bbf8:	ldr	x8, [x19, #16]
  40bbfc:	ldr	x1, [x8]
  40bc00:	mov	x0, x20
  40bc04:	bl	406ef0 <printf@plt>
  40bc08:	ldr	x19, [x19]
  40bc0c:	cbnz	x19, 40bbe8 <print_prereqs@@Base+0x38>
  40bc10:	cbnz	x21, 40bc20 <print_prereqs@@Base+0x70>
  40bc14:	b	40bc7c <print_prereqs@@Base+0xcc>
  40bc18:	mov	x21, xzr
  40bc1c:	cbz	x21, 40bc7c <print_prereqs@@Base+0xcc>
  40bc20:	ldr	x1, [x21, #8]
  40bc24:	cbnz	x1, 40bc30 <print_prereqs@@Base+0x80>
  40bc28:	ldr	x8, [x21, #16]
  40bc2c:	ldr	x1, [x8]
  40bc30:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bc34:	add	x0, x0, #0xb31
  40bc38:	bl	406ef0 <printf@plt>
  40bc3c:	ldr	x20, [x21]
  40bc40:	cbz	x20, 40bc7c <print_prereqs@@Base+0xcc>
  40bc44:	adrp	x19, 427000 <_IO_stdin_used@@Base+0x20e0>
  40bc48:	add	x19, x19, #0xb95
  40bc4c:	b	40bc60 <print_prereqs@@Base+0xb0>
  40bc50:	mov	x0, x19
  40bc54:	bl	406ef0 <printf@plt>
  40bc58:	ldr	x20, [x20]
  40bc5c:	cbz	x20, 40bc7c <print_prereqs@@Base+0xcc>
  40bc60:	ldrb	w8, [x20, #33]
  40bc64:	tbz	w8, #1, 40bc58 <print_prereqs@@Base+0xa8>
  40bc68:	ldr	x1, [x20, #8]
  40bc6c:	cbnz	x1, 40bc50 <print_prereqs@@Base+0xa0>
  40bc70:	ldr	x8, [x20, #16]
  40bc74:	ldr	x1, [x8]
  40bc78:	b	40bc50 <print_prereqs@@Base+0xa0>
  40bc7c:	mov	w0, #0xa                   	// #10
  40bc80:	bl	406f20 <putchar@plt>
  40bc84:	ldp	x20, x19, [sp, #32]
  40bc88:	ldr	x21, [sp, #16]
  40bc8c:	ldp	x29, x30, [sp], #48
  40bc90:	ret

000000000040bc94 <print_file_data_base@@Base>:
  40bc94:	stp	x29, x30, [sp, #-32]!
  40bc98:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bc9c:	add	x1, x1, #0xb37
  40bca0:	mov	w2, #0x5                   	// #5
  40bca4:	mov	x0, xzr
  40bca8:	stp	x20, x19, [sp, #16]
  40bcac:	mov	x29, sp
  40bcb0:	bl	406e50 <dcgettext@plt>
  40bcb4:	bl	406c40 <puts@plt>
  40bcb8:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  40bcbc:	add	x19, x19, #0xb00
  40bcc0:	adrp	x1, 40b000 <split_prereqs@@Base+0x78>
  40bcc4:	add	x1, x1, #0xd08
  40bcc8:	mov	x0, x19
  40bccc:	bl	40fed4 <hash_map@@Base>
  40bcd0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bcd4:	add	x1, x1, #0xb40
  40bcd8:	mov	w2, #0x5                   	// #5
  40bcdc:	mov	x0, xzr
  40bce0:	bl	406e50 <dcgettext@plt>
  40bce4:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  40bce8:	ldr	x1, [x20, #2512]
  40bcec:	bl	4067e0 <fputs@plt>
  40bcf0:	ldr	x1, [x20, #2512]
  40bcf4:	mov	x0, x19
  40bcf8:	bl	40ffb4 <hash_print_stats@@Base>
  40bcfc:	ldp	x20, x19, [sp, #16]
  40bd00:	ldp	x29, x30, [sp], #32
  40bd04:	ret
  40bd08:	sub	sp, sp, #0x60
  40bd0c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40bd10:	ldr	w8, [x8, #3264]
  40bd14:	stp	x20, x19, [sp, #80]
  40bd18:	mov	x19, x0
  40bd1c:	stp	x29, x30, [sp, #48]
  40bd20:	str	x21, [sp, #64]
  40bd24:	add	x29, sp, #0x30
  40bd28:	cbz	w8, 40bd34 <print_file_data_base@@Base+0xa0>
  40bd2c:	ldrb	w8, [x19, #136]
  40bd30:	tbnz	w8, #4, 40c0d4 <print_file_data_base@@Base+0x440>
  40bd34:	mov	w0, #0xa                   	// #10
  40bd38:	bl	406f20 <putchar@plt>
  40bd3c:	ldr	x8, [x19, #32]
  40bd40:	cbz	x8, 40bd94 <print_file_data_base@@Base+0x100>
  40bd44:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  40bd48:	ldrb	w8, [x8, #50]
  40bd4c:	ldrb	w9, [x20, #2392]
  40bd50:	cmp	w8, w9
  40bd54:	b.eq	40bd94 <print_file_data_base@@Base+0x100>  // b.none
  40bd58:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40bd5c:	ldr	x3, [x8, #2512]
  40bd60:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bd64:	add	x0, x0, #0xb61
  40bd68:	mov	w1, #0x10                  	// #16
  40bd6c:	mov	w2, #0x1                   	// #1
  40bd70:	bl	406d40 <fwrite@plt>
  40bd74:	ldr	x8, [x19, #32]
  40bd78:	ldrb	w0, [x8, #50]
  40bd7c:	cmp	w0, #0x9
  40bd80:	strb	w0, [x20, #2392]
  40bd84:	b.eq	40bd8c <print_file_data_base@@Base+0xf8>  // b.none
  40bd88:	bl	406f20 <putchar@plt>
  40bd8c:	mov	w0, #0xa                   	// #10
  40bd90:	bl	406f20 <putchar@plt>
  40bd94:	ldr	x8, [x19, #80]
  40bd98:	cbz	x8, 40bda4 <print_file_data_base@@Base+0x110>
  40bd9c:	mov	x0, x19
  40bda0:	bl	423554 <print_target_variables@@Base>
  40bda4:	ldrb	w8, [x19, #137]
  40bda8:	tbnz	w8, #3, 40bdc4 <print_file_data_base@@Base+0x130>
  40bdac:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bdb0:	add	x1, x1, #0xb72
  40bdb4:	mov	w2, #0x5                   	// #5
  40bdb8:	mov	x0, xzr
  40bdbc:	bl	406e50 <dcgettext@plt>
  40bdc0:	bl	406c40 <puts@plt>
  40bdc4:	ldr	x8, [x19, #104]
  40bdc8:	ldr	x1, [x19]
  40bdcc:	adrp	x9, 425000 <_IO_stdin_used@@Base+0xe0>
  40bdd0:	adrp	x10, 427000 <_IO_stdin_used@@Base+0x20e0>
  40bdd4:	add	x9, x9, #0xb4
  40bdd8:	add	x10, x10, #0x989
  40bddc:	cmp	x8, #0x0
  40bde0:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bde4:	csel	x2, x10, x9, eq  // eq = none
  40bde8:	add	x0, x0, #0xb82
  40bdec:	bl	406ef0 <printf@plt>
  40bdf0:	ldr	x0, [x19, #24]
  40bdf4:	bl	40bbb0 <print_prereqs@@Base>
  40bdf8:	ldrb	w8, [x19, #136]
  40bdfc:	tbnz	w8, #5, 40bf34 <print_file_data_base@@Base+0x2a0>
  40be00:	ldrb	w8, [x19, #137]
  40be04:	tbnz	w8, #5, 40bf54 <print_file_data_base@@Base+0x2c0>
  40be08:	ldrb	w8, [x19, #137]
  40be0c:	tbnz	w8, #4, 40bf74 <print_file_data_base@@Base+0x2e0>
  40be10:	ldrb	w8, [x19, #138]
  40be14:	tbnz	w8, #0, 40bf94 <print_file_data_base@@Base+0x300>
  40be18:	ldrb	w8, [x19, #136]
  40be1c:	tbz	w8, #4, 40be38 <print_file_data_base@@Base+0x1a4>
  40be20:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40be24:	add	x1, x1, #0xc30
  40be28:	mov	w2, #0x5                   	// #5
  40be2c:	mov	x0, xzr
  40be30:	bl	406e50 <dcgettext@plt>
  40be34:	bl	406c40 <puts@plt>
  40be38:	ldr	w8, [x19, #136]
  40be3c:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x10e0>
  40be40:	adrp	x10, 426000 <_IO_stdin_used@@Base+0x10e0>
  40be44:	add	x9, x9, #0xc40
  40be48:	add	x10, x10, #0xc67
  40be4c:	tst	w8, #0x100
  40be50:	csel	x1, x10, x9, eq  // eq = none
  40be54:	mov	w2, #0x5                   	// #5
  40be58:	mov	x0, xzr
  40be5c:	bl	406e50 <dcgettext@plt>
  40be60:	bl	406c40 <puts@plt>
  40be64:	ldr	x8, [x19, #40]
  40be68:	cbz	x8, 40be88 <print_file_data_base@@Base+0x1f4>
  40be6c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40be70:	add	x1, x1, #0xc92
  40be74:	mov	w2, #0x5                   	// #5
  40be78:	mov	x0, xzr
  40be7c:	bl	406e50 <dcgettext@plt>
  40be80:	ldr	x1, [x19, #40]
  40be84:	bl	406ef0 <printf@plt>
  40be88:	ldrb	w8, [x19, #137]
  40be8c:	tbz	w8, #6, 40bea8 <print_file_data_base@@Base+0x214>
  40be90:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40be94:	add	x1, x1, #0xcb9
  40be98:	mov	w2, #0x5                   	// #5
  40be9c:	mov	x0, xzr
  40bea0:	bl	406e50 <dcgettext@plt>
  40bea4:	bl	406c40 <puts@plt>
  40bea8:	ldr	x8, [x19, #48]
  40beac:	cbz	x8, 40bf10 <print_file_data_base@@Base+0x27c>
  40beb0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40beb4:	add	x1, x1, #0xce2
  40beb8:	mov	w2, #0x5                   	// #5
  40bebc:	mov	x0, xzr
  40bec0:	bl	406e50 <dcgettext@plt>
  40bec4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40bec8:	ldr	x1, [x8, #2512]
  40becc:	bl	4067e0 <fputs@plt>
  40bed0:	ldr	x21, [x19, #48]
  40bed4:	cbz	x21, 40bf08 <print_file_data_base@@Base+0x274>
  40bed8:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x20e0>
  40bedc:	add	x20, x20, #0xb95
  40bee0:	b	40bef4 <print_file_data_base@@Base+0x260>
  40bee4:	mov	x0, x20
  40bee8:	bl	406ef0 <printf@plt>
  40beec:	ldr	x21, [x21]
  40bef0:	cbz	x21, 40bf08 <print_file_data_base@@Base+0x274>
  40bef4:	ldr	x1, [x21, #8]
  40bef8:	cbnz	x1, 40bee4 <print_file_data_base@@Base+0x250>
  40befc:	ldr	x8, [x21, #16]
  40bf00:	ldr	x1, [x8]
  40bf04:	b	40bee4 <print_file_data_base@@Base+0x250>
  40bf08:	mov	w0, #0xa                   	// #10
  40bf0c:	bl	406f20 <putchar@plt>
  40bf10:	ldr	x1, [x19, #112]
  40bf14:	cmp	x1, #0x2
  40bf18:	b.eq	40bfb8 <print_file_data_base@@Base+0x324>  // b.none
  40bf1c:	cmp	x1, #0x1
  40bf20:	b.eq	40bfc4 <print_file_data_base@@Base+0x330>  // b.none
  40bf24:	cbnz	x1, 40bfe0 <print_file_data_base@@Base+0x34c>
  40bf28:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bf2c:	add	x1, x1, #0xcf1
  40bf30:	b	40bfcc <print_file_data_base@@Base+0x338>
  40bf34:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bf38:	add	x1, x1, #0xb88
  40bf3c:	mov	w2, #0x5                   	// #5
  40bf40:	mov	x0, xzr
  40bf44:	bl	406e50 <dcgettext@plt>
  40bf48:	bl	406c40 <puts@plt>
  40bf4c:	ldrb	w8, [x19, #137]
  40bf50:	tbz	w8, #5, 40be08 <print_file_data_base@@Base+0x174>
  40bf54:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bf58:	add	x1, x1, #0xbb6
  40bf5c:	mov	w2, #0x5                   	// #5
  40bf60:	mov	x0, xzr
  40bf64:	bl	406e50 <dcgettext@plt>
  40bf68:	bl	406c40 <puts@plt>
  40bf6c:	ldrb	w8, [x19, #137]
  40bf70:	tbz	w8, #4, 40be10 <print_file_data_base@@Base+0x17c>
  40bf74:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bf78:	add	x1, x1, #0xbe0
  40bf7c:	mov	w2, #0x5                   	// #5
  40bf80:	mov	x0, xzr
  40bf84:	bl	406e50 <dcgettext@plt>
  40bf88:	bl	406c40 <puts@plt>
  40bf8c:	ldrb	w8, [x19, #138]
  40bf90:	tbz	w8, #0, 40be18 <print_file_data_base@@Base+0x184>
  40bf94:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bf98:	add	x1, x1, #0xbf8
  40bf9c:	mov	w2, #0x5                   	// #5
  40bfa0:	mov	x0, xzr
  40bfa4:	bl	406e50 <dcgettext@plt>
  40bfa8:	bl	406c40 <puts@plt>
  40bfac:	ldrb	w8, [x19, #136]
  40bfb0:	tbnz	w8, #4, 40be20 <print_file_data_base@@Base+0x18c>
  40bfb4:	b	40be38 <print_file_data_base@@Base+0x1a4>
  40bfb8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bfbc:	add	x1, x1, #0xd2d
  40bfc0:	b	40bfcc <print_file_data_base@@Base+0x338>
  40bfc4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bfc8:	add	x1, x1, #0xd15
  40bfcc:	mov	w2, #0x5                   	// #5
  40bfd0:	mov	x0, xzr
  40bfd4:	bl	406e50 <dcgettext@plt>
  40bfd8:	bl	406c40 <puts@plt>
  40bfdc:	b	40c004 <print_file_data_base@@Base+0x370>
  40bfe0:	add	x0, sp, #0x4
  40bfe4:	bl	40ba2c <file_timestamp_sprintf@@Base>
  40bfe8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40bfec:	add	x1, x1, #0xd42
  40bff0:	mov	w2, #0x5                   	// #5
  40bff4:	mov	x0, xzr
  40bff8:	bl	406e50 <dcgettext@plt>
  40bffc:	add	x1, sp, #0x4
  40c000:	bl	406ef0 <printf@plt>
  40c004:	ldr	w8, [x19, #136]
  40c008:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c00c:	adrp	x10, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c010:	add	x9, x9, #0xd57
  40c014:	add	x10, x10, #0xd71
  40c018:	tst	w8, #0x400
  40c01c:	csel	x1, x10, x9, eq  // eq = none
  40c020:	mov	w2, #0x5                   	// #5
  40c024:	mov	x0, xzr
  40c028:	bl	406e50 <dcgettext@plt>
  40c02c:	bl	406c40 <puts@plt>
  40c030:	ldr	w8, [x19, #136]
  40c034:	adrp	x10, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c038:	add	x10, x10, #0x8c2
  40c03c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c040:	ubfx	w9, w8, #2, #2
  40c044:	adr	x11, 40c058 <print_file_data_base@@Base+0x3c4>
  40c048:	ldrb	w12, [x10, x9]
  40c04c:	add	x11, x11, x12, lsl #2
  40c050:	add	x1, x1, #0xd8f
  40c054:	br	x11
  40c058:	ands	w8, w8, #0x3
  40c05c:	b.eq	40c088 <print_file_data_base@@Base+0x3f4>  // b.none
  40c060:	cmp	w8, #0x3
  40c064:	b.eq	40c094 <print_file_data_base@@Base+0x400>  // b.none
  40c068:	cmp	w8, #0x2
  40c06c:	b.ne	40c0ac <print_file_data_base@@Base+0x418>  // b.any
  40c070:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c074:	add	x1, x1, #0xe05
  40c078:	b	40c09c <print_file_data_base@@Base+0x408>
  40c07c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c080:	add	x1, x1, #0xdbc
  40c084:	b	40c09c <print_file_data_base@@Base+0x408>
  40c088:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c08c:	add	x1, x1, #0xdec
  40c090:	b	40c09c <print_file_data_base@@Base+0x408>
  40c094:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c098:	add	x1, x1, #0xe29
  40c09c:	mov	w2, #0x5                   	// #5
  40c0a0:	mov	x0, xzr
  40c0a4:	bl	406e50 <dcgettext@plt>
  40c0a8:	bl	406c40 <puts@plt>
  40c0ac:	ldr	x8, [x19, #80]
  40c0b0:	cbz	x8, 40c0bc <print_file_data_base@@Base+0x428>
  40c0b4:	mov	x0, x19
  40c0b8:	bl	423528 <print_file_variables@@Base>
  40c0bc:	ldr	x0, [x19, #32]
  40c0c0:	cbz	x0, 40c0c8 <print_file_data_base@@Base+0x434>
  40c0c4:	bl	408c04 <print_commands@@Base>
  40c0c8:	ldr	x0, [x19, #56]
  40c0cc:	cbz	x0, 40c0d4 <print_file_data_base@@Base+0x440>
  40c0d0:	bl	40bd08 <print_file_data_base@@Base+0x74>
  40c0d4:	ldp	x20, x19, [sp, #80]
  40c0d8:	ldr	x21, [sp, #64]
  40c0dc:	ldp	x29, x30, [sp, #48]
  40c0e0:	add	sp, sp, #0x60
  40c0e4:	ret

000000000040c0e8 <verify_file_data_base@@Base>:
  40c0e8:	stp	x29, x30, [sp, #-16]!
  40c0ec:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40c0f0:	adrp	x1, 40c000 <print_file_data_base@@Base+0x36c>
  40c0f4:	add	x0, x0, #0xb00
  40c0f8:	add	x1, x1, #0x10c
  40c0fc:	mov	x29, sp
  40c100:	bl	40fed4 <hash_map@@Base>
  40c104:	ldp	x29, x30, [sp], #16
  40c108:	ret
  40c10c:	stp	x29, x30, [sp, #-64]!
  40c110:	stp	x22, x21, [sp, #32]
  40c114:	stp	x20, x19, [sp, #48]
  40c118:	mov	x19, x0
  40c11c:	ldr	x0, [x0]
  40c120:	str	x23, [sp, #16]
  40c124:	mov	x29, sp
  40c128:	cbz	x0, 40c180 <verify_file_data_base@@Base+0x98>
  40c12c:	ldrb	w8, [x0]
  40c130:	cbz	w8, 40c180 <verify_file_data_base@@Base+0x98>
  40c134:	bl	420e8c <strcache_iscached@@Base>
  40c138:	cbnz	w0, 40c180 <verify_file_data_base@@Base+0x98>
  40c13c:	ldr	x0, [x19]
  40c140:	bl	4067d0 <strlen@plt>
  40c144:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c148:	lsl	x8, x0, #1
  40c14c:	add	x1, x1, #0xe42
  40c150:	mov	w2, #0x5                   	// #5
  40c154:	mov	x0, xzr
  40c158:	add	x20, x8, #0x4
  40c15c:	bl	406e50 <dcgettext@plt>
  40c160:	ldr	x3, [x19]
  40c164:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40c168:	mov	x2, x0
  40c16c:	add	x4, x4, #0x1e6
  40c170:	mov	x0, xzr
  40c174:	mov	x1, x20
  40c178:	mov	x5, x3
  40c17c:	bl	418f84 <error@@Base>
  40c180:	ldr	x0, [x19, #8]
  40c184:	cbz	x0, 40c1e8 <verify_file_data_base@@Base+0x100>
  40c188:	ldrb	w8, [x0]
  40c18c:	cbz	w8, 40c1e8 <verify_file_data_base@@Base+0x100>
  40c190:	bl	420e8c <strcache_iscached@@Base>
  40c194:	cbnz	w0, 40c1e8 <verify_file_data_base@@Base+0x100>
  40c198:	ldr	x0, [x19]
  40c19c:	bl	4067d0 <strlen@plt>
  40c1a0:	ldr	x8, [x19, #8]
  40c1a4:	mov	x20, x0
  40c1a8:	mov	x0, x8
  40c1ac:	bl	4067d0 <strlen@plt>
  40c1b0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c1b4:	add	x8, x20, x0
  40c1b8:	add	x1, x1, #0xe42
  40c1bc:	mov	w2, #0x5                   	// #5
  40c1c0:	mov	x0, xzr
  40c1c4:	add	x20, x8, #0x5
  40c1c8:	bl	406e50 <dcgettext@plt>
  40c1cc:	ldp	x3, x5, [x19]
  40c1d0:	adrp	x4, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c1d4:	mov	x2, x0
  40c1d8:	add	x4, x4, #0xe60
  40c1dc:	mov	x0, xzr
  40c1e0:	mov	x1, x20
  40c1e4:	bl	418f84 <error@@Base>
  40c1e8:	ldr	x0, [x19, #16]
  40c1ec:	cbz	x0, 40c254 <verify_file_data_base@@Base+0x16c>
  40c1f0:	ldrb	w8, [x0]
  40c1f4:	cbz	w8, 40c254 <verify_file_data_base@@Base+0x16c>
  40c1f8:	bl	420e8c <strcache_iscached@@Base>
  40c1fc:	cbnz	w0, 40c254 <verify_file_data_base@@Base+0x16c>
  40c200:	ldr	x0, [x19]
  40c204:	bl	4067d0 <strlen@plt>
  40c208:	ldr	x8, [x19, #16]
  40c20c:	mov	x20, x0
  40c210:	mov	x0, x8
  40c214:	bl	4067d0 <strlen@plt>
  40c218:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c21c:	add	x8, x20, x0
  40c220:	add	x1, x1, #0xe42
  40c224:	mov	w2, #0x5                   	// #5
  40c228:	mov	x0, xzr
  40c22c:	add	x20, x8, #0x5
  40c230:	bl	406e50 <dcgettext@plt>
  40c234:	ldr	x3, [x19]
  40c238:	ldr	x5, [x19, #16]
  40c23c:	adrp	x4, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c240:	mov	x2, x0
  40c244:	add	x4, x4, #0xe66
  40c248:	mov	x0, xzr
  40c24c:	mov	x1, x20
  40c250:	bl	418f84 <error@@Base>
  40c254:	ldr	x0, [x19, #40]
  40c258:	cbz	x0, 40c2c0 <verify_file_data_base@@Base+0x1d8>
  40c25c:	ldrb	w8, [x0]
  40c260:	cbz	w8, 40c2c0 <verify_file_data_base@@Base+0x1d8>
  40c264:	bl	420e8c <strcache_iscached@@Base>
  40c268:	cbnz	w0, 40c2c0 <verify_file_data_base@@Base+0x1d8>
  40c26c:	ldr	x0, [x19]
  40c270:	bl	4067d0 <strlen@plt>
  40c274:	ldr	x8, [x19, #40]
  40c278:	mov	x20, x0
  40c27c:	mov	x0, x8
  40c280:	bl	4067d0 <strlen@plt>
  40c284:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c288:	add	x8, x20, x0
  40c28c:	add	x1, x1, #0xe42
  40c290:	mov	w2, #0x5                   	// #5
  40c294:	mov	x0, xzr
  40c298:	add	x20, x8, #0x4
  40c29c:	bl	406e50 <dcgettext@plt>
  40c2a0:	ldr	x3, [x19]
  40c2a4:	ldr	x5, [x19, #40]
  40c2a8:	adrp	x4, 427000 <_IO_stdin_used@@Base+0x20e0>
  40c2ac:	mov	x2, x0
  40c2b0:	add	x4, x4, #0xa0a
  40c2b4:	mov	x0, xzr
  40c2b8:	mov	x1, x20
  40c2bc:	bl	418f84 <error@@Base>
  40c2c0:	ldr	x23, [x19, #24]
  40c2c4:	cbz	x23, 40c3bc <verify_file_data_base@@Base+0x2d4>
  40c2c8:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x10e0>
  40c2cc:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40c2d0:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x20e0>
  40c2d4:	add	x19, x19, #0xe42
  40c2d8:	add	x20, x20, #0x1e6
  40c2dc:	add	x21, x21, #0xa0a
  40c2e0:	b	40c2ec <verify_file_data_base@@Base+0x204>
  40c2e4:	ldr	x23, [x23]
  40c2e8:	cbz	x23, 40c3bc <verify_file_data_base@@Base+0x2d4>
  40c2ec:	ldrb	w8, [x23, #33]
  40c2f0:	tbnz	w8, #3, 40c30c <verify_file_data_base@@Base+0x224>
  40c2f4:	ldr	x0, [x23, #8]
  40c2f8:	cbz	x0, 40c30c <verify_file_data_base@@Base+0x224>
  40c2fc:	ldrb	w8, [x0]
  40c300:	cbz	w8, 40c30c <verify_file_data_base@@Base+0x224>
  40c304:	bl	420e8c <strcache_iscached@@Base>
  40c308:	cbz	w0, 40c374 <verify_file_data_base@@Base+0x28c>
  40c30c:	ldr	x0, [x23, #24]
  40c310:	cbz	x0, 40c2e4 <verify_file_data_base@@Base+0x1fc>
  40c314:	ldrb	w8, [x0]
  40c318:	cbz	w8, 40c2e4 <verify_file_data_base@@Base+0x1fc>
  40c31c:	bl	420e8c <strcache_iscached@@Base>
  40c320:	cbnz	w0, 40c2e4 <verify_file_data_base@@Base+0x1fc>
  40c324:	ldr	x0, [x23, #8]
  40c328:	bl	4067d0 <strlen@plt>
  40c32c:	ldr	x8, [x23, #24]
  40c330:	mov	x22, x0
  40c334:	mov	x0, x8
  40c338:	bl	4067d0 <strlen@plt>
  40c33c:	add	x8, x22, x0
  40c340:	mov	w2, #0x5                   	// #5
  40c344:	mov	x0, xzr
  40c348:	mov	x1, x19
  40c34c:	add	x22, x8, #0x4
  40c350:	bl	406e50 <dcgettext@plt>
  40c354:	ldr	x3, [x23, #8]
  40c358:	ldr	x5, [x23, #24]
  40c35c:	mov	x2, x0
  40c360:	mov	x0, xzr
  40c364:	mov	x1, x22
  40c368:	mov	x4, x21
  40c36c:	bl	418f84 <error@@Base>
  40c370:	b	40c2e4 <verify_file_data_base@@Base+0x1fc>
  40c374:	ldr	x0, [x23, #8]
  40c378:	bl	4067d0 <strlen@plt>
  40c37c:	lsl	x8, x0, #1
  40c380:	mov	w2, #0x5                   	// #5
  40c384:	mov	x0, xzr
  40c388:	mov	x1, x19
  40c38c:	add	x22, x8, #0x4
  40c390:	bl	406e50 <dcgettext@plt>
  40c394:	ldr	x3, [x23, #8]
  40c398:	mov	x2, x0
  40c39c:	mov	x0, xzr
  40c3a0:	mov	x1, x22
  40c3a4:	mov	x4, x20
  40c3a8:	mov	x5, x3
  40c3ac:	bl	418f84 <error@@Base>
  40c3b0:	ldr	x0, [x23, #24]
  40c3b4:	cbnz	x0, 40c314 <verify_file_data_base@@Base+0x22c>
  40c3b8:	b	40c2e4 <verify_file_data_base@@Base+0x1fc>
  40c3bc:	ldp	x20, x19, [sp, #48]
  40c3c0:	ldp	x22, x21, [sp, #32]
  40c3c4:	ldr	x23, [sp, #16]
  40c3c8:	ldp	x29, x30, [sp], #64
  40c3cc:	ret

000000000040c3d0 <build_target_list@@Base>:
  40c3d0:	stp	x29, x30, [sp, #-96]!
  40c3d4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40c3d8:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40c3dc:	ldr	x8, [x8, #2864]
  40c3e0:	ldr	x9, [x9, #2912]
  40c3e4:	stp	x20, x19, [sp, #80]
  40c3e8:	mov	x19, x0
  40c3ec:	stp	x28, x27, [sp, #16]
  40c3f0:	cmp	x8, x9
  40c3f4:	stp	x26, x25, [sp, #32]
  40c3f8:	stp	x24, x23, [sp, #48]
  40c3fc:	stp	x22, x21, [sp, #64]
  40c400:	mov	x29, sp
  40c404:	b.eq	40c53c <build_target_list@@Base+0x16c>  // b.none
  40c408:	mov	x0, x19
  40c40c:	bl	4067d0 <strlen@plt>
  40c410:	mov	x10, #0xf7cf                	// #63439
  40c414:	movk	x10, #0xe353, lsl #16
  40c418:	movk	x10, #0x9ba5, lsl #32
  40c41c:	lsr	x8, x0, #2
  40c420:	movk	x10, #0x20c4, lsl #48
  40c424:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40c428:	add	x9, x9, #0xb00
  40c42c:	umulh	x8, x8, x10
  40c430:	ldr	x26, [x9]
  40c434:	ldr	x21, [x9, #32]
  40c438:	lsr	x8, x8, #4
  40c43c:	mov	w9, #0x1f4                 	// #500
  40c440:	mul	x8, x8, x9
  40c444:	add	x20, x8, #0x1f4
  40c448:	mov	x0, x19
  40c44c:	mov	x1, x20
  40c450:	bl	41803c <xrealloc@@Base>
  40c454:	cmp	x21, #0x1
  40c458:	mov	x19, x0
  40c45c:	b.lt	40c524 <build_target_list@@Base+0x154>  // b.tstop
  40c460:	mov	x27, xzr
  40c464:	add	x28, x26, x21, lsl #3
  40c468:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  40c46c:	mov	w23, #0x20                  	// #32
  40c470:	mov	x21, x19
  40c474:	b	40c49c <build_target_list@@Base+0xcc>
  40c478:	ldr	x1, [x24]
  40c47c:	mov	x0, x21
  40c480:	mov	x2, x22
  40c484:	bl	406790 <memcpy@plt>
  40c488:	add	x21, x21, x22
  40c48c:	strb	w23, [x21], #1
  40c490:	add	x26, x26, #0x8
  40c494:	cmp	x26, x28
  40c498:	b.cs	40c528 <build_target_list@@Base+0x158>  // b.hs, b.nlast
  40c49c:	ldr	x24, [x26]
  40c4a0:	cbz	x24, 40c490 <build_target_list@@Base+0xc0>
  40c4a4:	ldr	x8, [x25, #2344]
  40c4a8:	cmp	x8, x24
  40c4ac:	b.eq	40c490 <build_target_list@@Base+0xc0>  // b.none
  40c4b0:	ldrb	w8, [x24, #137]
  40c4b4:	tbz	w8, #3, 40c490 <build_target_list@@Base+0xc0>
  40c4b8:	ldr	x0, [x24]
  40c4bc:	bl	4067d0 <strlen@plt>
  40c4c0:	add	x8, x0, #0x1
  40c4c4:	add	x27, x8, x27
  40c4c8:	mov	x22, x0
  40c4cc:	cmp	x27, x20
  40c4d0:	b.ls	40c478 <build_target_list@@Base+0xa8>  // b.plast
  40c4d4:	mov	x11, #0xf7cf                	// #63439
  40c4d8:	movk	x11, #0xe353, lsl #16
  40c4dc:	movk	x11, #0x9ba5, lsl #32
  40c4e0:	lsr	x9, x8, #2
  40c4e4:	movk	x11, #0x20c4, lsl #48
  40c4e8:	umulh	x9, x9, x11
  40c4ec:	add	x10, x20, x8
  40c4f0:	lsr	x9, x9, #4
  40c4f4:	neg	x8, x8
  40c4f8:	mov	w11, #0x1f4                 	// #500
  40c4fc:	madd	x8, x9, x11, x8
  40c500:	add	x8, x10, x8
  40c504:	add	x20, x8, #0x1f4
  40c508:	mov	x0, x19
  40c50c:	mov	x1, x20
  40c510:	sub	x21, x21, x19
  40c514:	bl	41803c <xrealloc@@Base>
  40c518:	mov	x19, x0
  40c51c:	add	x21, x0, x21
  40c520:	b	40c478 <build_target_list@@Base+0xa8>
  40c524:	mov	x21, x19
  40c528:	sturb	wzr, [x21, #-1]
  40c52c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40c530:	ldr	x8, [x8, #2864]
  40c534:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40c538:	str	x8, [x9, #2912]
  40c53c:	mov	x0, x19
  40c540:	ldp	x20, x19, [sp, #80]
  40c544:	ldp	x22, x21, [sp, #64]
  40c548:	ldp	x24, x23, [sp, #48]
  40c54c:	ldp	x26, x25, [sp, #32]
  40c550:	ldp	x28, x27, [sp, #16]
  40c554:	ldp	x29, x30, [sp], #96
  40c558:	ret

000000000040c55c <init_hash_files@@Base>:
  40c55c:	stp	x29, x30, [sp, #-16]!
  40c560:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40c564:	adrp	x2, 40c000 <print_file_data_base@@Base+0x36c>
  40c568:	adrp	x3, 40c000 <print_file_data_base@@Base+0x36c>
  40c56c:	adrp	x4, 40a000 <variable_expand_string@@Base+0xf0>
  40c570:	add	x0, x0, #0xb00
  40c574:	add	x2, x2, #0x594
  40c578:	add	x3, x3, #0x5b0
  40c57c:	add	x4, x4, #0xcbc
  40c580:	mov	w1, #0x3e8                 	// #1000
  40c584:	mov	x29, sp
  40c588:	bl	40f974 <hash_init@@Base>
  40c58c:	ldp	x29, x30, [sp], #16
  40c590:	ret
  40c594:	stp	x29, x30, [sp, #-16]!
  40c598:	ldr	x0, [x0, #8]
  40c59c:	mov	x29, sp
  40c5a0:	bl	4102b4 <jhash_string@@Base>
  40c5a4:	mov	w0, w0
  40c5a8:	ldp	x29, x30, [sp], #16
  40c5ac:	ret
  40c5b0:	mov	x0, xzr
  40c5b4:	ret

000000000040c5b8 <subst_expand@@Base>:
  40c5b8:	stp	x29, x30, [sp, #-96]!
  40c5bc:	stp	x26, x25, [sp, #32]
  40c5c0:	stp	x24, x23, [sp, #48]
  40c5c4:	stp	x22, x21, [sp, #64]
  40c5c8:	stp	x20, x19, [sp, #80]
  40c5cc:	mov	w23, w6
  40c5d0:	mov	x19, x5
  40c5d4:	mov	x24, x4
  40c5d8:	mov	x20, x3
  40c5dc:	mov	x25, x2
  40c5e0:	mov	x22, x1
  40c5e4:	mov	x21, x0
  40c5e8:	stp	x28, x27, [sp, #16]
  40c5ec:	mov	x29, sp
  40c5f0:	cbnz	x4, 40c628 <subst_expand@@Base+0x70>
  40c5f4:	cbnz	w23, 40c628 <subst_expand@@Base+0x70>
  40c5f8:	mov	x0, x22
  40c5fc:	bl	4067d0 <strlen@plt>
  40c600:	mov	x2, x0
  40c604:	mov	x0, x21
  40c608:	mov	x1, x22
  40c60c:	bl	409c78 <variable_buffer_output@@Base>
  40c610:	mov	x21, x0
  40c614:	cbz	x19, 40c710 <subst_expand@@Base+0x158>
  40c618:	mov	x0, x21
  40c61c:	mov	x1, x20
  40c620:	mov	x2, x19
  40c624:	b	40c708 <subst_expand@@Base+0x150>
  40c628:	cmp	w23, #0x0
  40c62c:	cset	w8, ne  // ne = any
  40c630:	cmp	x24, #0x0
  40c634:	cset	w9, eq  // eq = none
  40c638:	and	w28, w9, w8
  40c63c:	mov	x27, x22
  40c640:	b	40c664 <subst_expand@@Base+0xac>
  40c644:	mov	x0, x21
  40c648:	mov	x1, x25
  40c64c:	mov	x2, x24
  40c650:	bl	409c78 <variable_buffer_output@@Base>
  40c654:	mov	x21, x0
  40c658:	add	x27, x26, x24
  40c65c:	ldrb	w8, [x27]
  40c660:	cbz	w8, 40c710 <subst_expand@@Base+0x158>
  40c664:	mov	x0, x27
  40c668:	cbz	w28, 40c67c <subst_expand@@Base+0xc4>
  40c66c:	bl	418138 <next_token@@Base>
  40c670:	bl	418118 <end_of_token@@Base>
  40c674:	mov	x26, x0
  40c678:	b	40c68c <subst_expand@@Base+0xd4>
  40c67c:	mov	x1, x25
  40c680:	bl	406e40 <strstr@plt>
  40c684:	mov	x26, x0
  40c688:	cbz	x0, 40c6f4 <subst_expand@@Base+0x13c>
  40c68c:	subs	x2, x26, x27
  40c690:	b.ls	40c6a4 <subst_expand@@Base+0xec>  // b.plast
  40c694:	mov	x0, x21
  40c698:	mov	x1, x27
  40c69c:	bl	409c78 <variable_buffer_output@@Base>
  40c6a0:	mov	x21, x0
  40c6a4:	cbz	w23, 40c6e0 <subst_expand@@Base+0x128>
  40c6a8:	cmp	x26, x22
  40c6ac:	b.ls	40c6c8 <subst_expand@@Base+0x110>  // b.plast
  40c6b0:	ldurb	w8, [x26, #-1]
  40c6b4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40c6b8:	add	x9, x9, #0xcf0
  40c6bc:	ldrh	w8, [x9, x8, lsl #1]
  40c6c0:	tst	w8, #0x6
  40c6c4:	b.eq	40c644 <subst_expand@@Base+0x8c>  // b.none
  40c6c8:	ldrb	w8, [x26, x24]
  40c6cc:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40c6d0:	add	x9, x9, #0xcf0
  40c6d4:	ldrh	w8, [x9, x8, lsl #1]
  40c6d8:	tst	w8, #0x7
  40c6dc:	b.eq	40c644 <subst_expand@@Base+0x8c>  // b.none
  40c6e0:	cbz	x19, 40c658 <subst_expand@@Base+0xa0>
  40c6e4:	mov	x0, x21
  40c6e8:	mov	x1, x20
  40c6ec:	mov	x2, x19
  40c6f0:	b	40c650 <subst_expand@@Base+0x98>
  40c6f4:	mov	x0, x27
  40c6f8:	bl	4067d0 <strlen@plt>
  40c6fc:	mov	x2, x0
  40c700:	mov	x0, x21
  40c704:	mov	x1, x27
  40c708:	bl	409c78 <variable_buffer_output@@Base>
  40c70c:	mov	x21, x0
  40c710:	mov	x0, x21
  40c714:	ldp	x20, x19, [sp, #80]
  40c718:	ldp	x22, x21, [sp, #64]
  40c71c:	ldp	x24, x23, [sp, #48]
  40c720:	ldp	x26, x25, [sp, #32]
  40c724:	ldp	x28, x27, [sp, #16]
  40c728:	ldp	x29, x30, [sp], #96
  40c72c:	ret

000000000040c730 <patsubst_expand_pat@@Base>:
  40c730:	sub	sp, sp, #0xb0
  40c734:	stp	x29, x30, [sp, #80]
  40c738:	stp	x26, x25, [sp, #112]
  40c73c:	stp	x24, x23, [sp, #128]
  40c740:	stp	x22, x21, [sp, #144]
  40c744:	stp	x20, x19, [sp, #160]
  40c748:	add	x29, sp, #0x50
  40c74c:	mov	x22, x5
  40c750:	mov	x23, x4
  40c754:	mov	x19, x3
  40c758:	mov	x25, x1
  40c75c:	mov	x21, x0
  40c760:	stp	x28, x27, [sp, #96]
  40c764:	str	x2, [sp, #40]
  40c768:	stur	x1, [x29, #-8]
  40c76c:	cbz	x5, 40c93c <patsubst_expand_pat@@Base+0x20c>
  40c770:	mvn	x8, x19
  40c774:	mov	x0, x22
  40c778:	add	x24, x22, x8
  40c77c:	bl	4067d0 <strlen@plt>
  40c780:	str	x0, [sp, #8]
  40c784:	cbz	x23, 40c950 <patsubst_expand_pat@@Base+0x220>
  40c788:	mov	x0, x23
  40c78c:	bl	4067d0 <strlen@plt>
  40c790:	mov	x26, x0
  40c794:	sub	x0, x29, #0x8
  40c798:	sub	x1, x29, #0x10
  40c79c:	bl	418158 <find_next_token@@Base>
  40c7a0:	cbz	x0, 40c98c <patsubst_expand_pat@@Base+0x25c>
  40c7a4:	ldr	x9, [sp, #40]
  40c7a8:	mov	x25, x0
  40c7ac:	str	x19, [sp, #24]
  40c7b0:	stur	xzr, [x29, #-24]
  40c7b4:	mvn	x8, x9
  40c7b8:	add	x9, x9, #0x1
  40c7bc:	str	x9, [sp]
  40c7c0:	sub	x9, x26, #0x1
  40c7c4:	stur	x9, [x29, #-32]
  40c7c8:	ldr	x9, [sp, #8]
  40c7cc:	add	x20, x23, x8
  40c7d0:	add	x28, x26, x20
  40c7d4:	sub	x8, x20, #0x1
  40c7d8:	neg	x9, x9
  40c7dc:	str	x9, [sp, #32]
  40c7e0:	str	x8, [sp, #16]
  40c7e4:	b	40c81c <patsubst_expand_pat@@Base+0xec>
  40c7e8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  40c7ec:	mov	w2, #0x1                   	// #1
  40c7f0:	mov	w8, #0x1                   	// #1
  40c7f4:	mov	x0, x21
  40c7f8:	add	x1, x1, #0xeb4
  40c7fc:	stur	x8, [x29, #-24]
  40c800:	bl	409c78 <variable_buffer_output@@Base>
  40c804:	mov	x21, x0
  40c808:	sub	x0, x29, #0x8
  40c80c:	sub	x1, x29, #0x10
  40c810:	bl	418158 <find_next_token@@Base>
  40c814:	mov	x25, x0
  40c818:	cbz	x0, 40c990 <patsubst_expand_pat@@Base+0x260>
  40c81c:	ldur	x27, [x29, #-16]
  40c820:	cmp	x27, x28
  40c824:	cset	w19, cc  // cc = lo, ul, last
  40c828:	cbz	x20, 40c870 <patsubst_expand_pat@@Base+0x140>
  40c82c:	b.cc	40c870 <patsubst_expand_pat@@Base+0x140>  // b.lo, b.ul, b.last
  40c830:	ldr	x9, [sp, #40]
  40c834:	ldrb	w8, [x25]
  40c838:	ldrb	w9, [x9]
  40c83c:	cmp	w8, w9
  40c840:	b.ne	40c86c <patsubst_expand_pat@@Base+0x13c>  // b.any
  40c844:	ldr	x8, [sp, #16]
  40c848:	ldurb	w9, [x23, #-2]
  40c84c:	ldrb	w8, [x25, x8]
  40c850:	cmp	w8, w9
  40c854:	b.ne	40c86c <patsubst_expand_pat@@Base+0x13c>  // b.any
  40c858:	ldr	x1, [sp]
  40c85c:	ldr	x2, [sp, #16]
  40c860:	add	x0, x25, #0x1
  40c864:	bl	406a70 <strncmp@plt>
  40c868:	cbz	w0, 40c928 <patsubst_expand_pat@@Base+0x1f8>
  40c86c:	mov	w19, #0x1                   	// #1
  40c870:	cbz	x26, 40c8bc <patsubst_expand_pat@@Base+0x18c>
  40c874:	cbnz	w19, 40c8bc <patsubst_expand_pat@@Base+0x18c>
  40c878:	ldur	x9, [x29, #-32]
  40c87c:	add	x8, x27, x25
  40c880:	ldurb	w8, [x8, #-1]
  40c884:	ldrb	w9, [x23, x9]
  40c888:	cmp	w8, w9
  40c88c:	b.ne	40c8b8 <patsubst_expand_pat@@Base+0x188>  // b.any
  40c890:	sub	x8, x27, x26
  40c894:	add	x0, x25, x8
  40c898:	ldrb	w8, [x0]
  40c89c:	ldrb	w9, [x23]
  40c8a0:	cmp	w8, w9
  40c8a4:	b.ne	40c8b8 <patsubst_expand_pat@@Base+0x188>  // b.any
  40c8a8:	ldur	x2, [x29, #-32]
  40c8ac:	mov	x1, x23
  40c8b0:	bl	406a70 <strncmp@plt>
  40c8b4:	cbz	w0, 40c934 <patsubst_expand_pat@@Base+0x204>
  40c8b8:	mov	w19, #0x1                   	// #1
  40c8bc:	mov	x0, x21
  40c8c0:	cbz	w19, 40c8d0 <patsubst_expand_pat@@Base+0x1a0>
  40c8c4:	mov	x1, x25
  40c8c8:	mov	x2, x27
  40c8cc:	b	40c900 <patsubst_expand_pat@@Base+0x1d0>
  40c8d0:	ldr	x1, [sp, #24]
  40c8d4:	mov	x2, x24
  40c8d8:	bl	409c78 <variable_buffer_output@@Base>
  40c8dc:	mov	x21, x0
  40c8e0:	cbz	x22, 40c908 <patsubst_expand_pat@@Base+0x1d8>
  40c8e4:	ldur	x8, [x29, #-16]
  40c8e8:	add	x1, x25, x20
  40c8ec:	mov	x0, x21
  40c8f0:	sub	x2, x8, x28
  40c8f4:	bl	409c78 <variable_buffer_output@@Base>
  40c8f8:	ldr	x2, [sp, #8]
  40c8fc:	mov	x1, x22
  40c900:	bl	409c78 <variable_buffer_output@@Base>
  40c904:	mov	x21, x0
  40c908:	cbnz	x24, 40c7e8 <patsubst_expand_pat@@Base+0xb8>
  40c90c:	cbnz	w19, 40c7e8 <patsubst_expand_pat@@Base+0xb8>
  40c910:	ldur	x8, [x29, #-16]
  40c914:	ldr	x9, [sp, #32]
  40c918:	cmp	x8, x9
  40c91c:	b.eq	40c808 <patsubst_expand_pat@@Base+0xd8>  // b.none
  40c920:	cbnz	x22, 40c7e8 <patsubst_expand_pat@@Base+0xb8>
  40c924:	b	40c808 <patsubst_expand_pat@@Base+0xd8>
  40c928:	mov	w19, wzr
  40c92c:	cbnz	x26, 40c874 <patsubst_expand_pat@@Base+0x144>
  40c930:	b	40c8bc <patsubst_expand_pat@@Base+0x18c>
  40c934:	mov	w19, wzr
  40c938:	b	40c8bc <patsubst_expand_pat@@Base+0x18c>
  40c93c:	mov	x0, x19
  40c940:	bl	4067d0 <strlen@plt>
  40c944:	mov	x24, x0
  40c948:	str	xzr, [sp, #8]
  40c94c:	cbnz	x23, 40c788 <patsubst_expand_pat@@Base+0x58>
  40c950:	ldr	x20, [sp, #40]
  40c954:	mov	x0, x20
  40c958:	bl	4067d0 <strlen@plt>
  40c95c:	mov	x22, x0
  40c960:	mov	x0, x19
  40c964:	bl	4067d0 <strlen@plt>
  40c968:	mov	x5, x0
  40c96c:	mov	w6, #0x1                   	// #1
  40c970:	mov	x0, x21
  40c974:	mov	x1, x25
  40c978:	mov	x2, x20
  40c97c:	mov	x3, x19
  40c980:	mov	x4, x22
  40c984:	bl	40c5b8 <subst_expand@@Base>
  40c988:	b	40c9a0 <patsubst_expand_pat@@Base+0x270>
  40c98c:	stur	xzr, [x29, #-24]
  40c990:	ldur	x9, [x29, #-24]
  40c994:	sub	x8, x21, #0x1
  40c998:	cmp	w9, #0x0
  40c99c:	csel	x0, x21, x8, eq  // eq = none
  40c9a0:	ldp	x20, x19, [sp, #160]
  40c9a4:	ldp	x22, x21, [sp, #144]
  40c9a8:	ldp	x24, x23, [sp, #128]
  40c9ac:	ldp	x26, x25, [sp, #112]
  40c9b0:	ldp	x28, x27, [sp, #96]
  40c9b4:	ldp	x29, x30, [sp, #80]
  40c9b8:	add	sp, sp, #0xb0
  40c9bc:	ret

000000000040c9c0 <patsubst_expand@@Base>:
  40c9c0:	stp	x29, x30, [sp, #-64]!
  40c9c4:	stp	x22, x21, [sp, #32]
  40c9c8:	mov	x22, x0
  40c9cc:	mov	x0, x2
  40c9d0:	str	x23, [sp, #16]
  40c9d4:	stp	x20, x19, [sp, #48]
  40c9d8:	mov	x29, sp
  40c9dc:	mov	x19, x3
  40c9e0:	mov	x20, x2
  40c9e4:	mov	x21, x1
  40c9e8:	bl	41ae68 <find_percent@@Base>
  40c9ec:	mov	x23, x0
  40c9f0:	mov	x0, x19
  40c9f4:	bl	41ae68 <find_percent@@Base>
  40c9f8:	cmp	x0, #0x0
  40c9fc:	csinc	x5, xzr, x0, eq  // eq = none
  40ca00:	cmp	x23, #0x0
  40ca04:	csinc	x4, xzr, x23, eq  // eq = none
  40ca08:	mov	x0, x22
  40ca0c:	mov	x1, x21
  40ca10:	mov	x2, x20
  40ca14:	mov	x3, x19
  40ca18:	bl	40c730 <patsubst_expand_pat@@Base>
  40ca1c:	ldp	x20, x19, [sp, #48]
  40ca20:	ldp	x22, x21, [sp, #32]
  40ca24:	ldr	x23, [sp, #16]
  40ca28:	ldp	x29, x30, [sp], #64
  40ca2c:	ret

000000000040ca30 <pattern_matches@@Base>:
  40ca30:	stp	x29, x30, [sp, #-64]!
  40ca34:	stp	x20, x19, [sp, #48]
  40ca38:	mov	x19, x2
  40ca3c:	mov	x20, x0
  40ca40:	stp	x24, x23, [sp, #16]
  40ca44:	stp	x22, x21, [sp, #32]
  40ca48:	mov	x29, sp
  40ca4c:	cbz	x1, 40caac <pattern_matches@@Base+0x7c>
  40ca50:	mov	x21, x1
  40ca54:	add	x22, x21, #0x1
  40ca58:	mov	x0, x22
  40ca5c:	bl	4067d0 <strlen@plt>
  40ca60:	mov	x23, x0
  40ca64:	mov	x0, x19
  40ca68:	bl	4067d0 <strlen@plt>
  40ca6c:	sub	x2, x21, x20
  40ca70:	add	x8, x2, x23
  40ca74:	cmp	x0, x8
  40ca78:	b.cc	40ca90 <pattern_matches@@Base+0x60>  // b.lo, b.ul, b.last
  40ca7c:	mov	x24, x0
  40ca80:	mov	x0, x20
  40ca84:	mov	x1, x19
  40ca88:	bl	406a70 <strncmp@plt>
  40ca8c:	cbz	w0, 40caf8 <pattern_matches@@Base+0xc8>
  40ca90:	mov	w0, wzr
  40ca94:	mov	sp, x29
  40ca98:	ldp	x20, x19, [sp, #48]
  40ca9c:	ldp	x22, x21, [sp, #32]
  40caa0:	ldp	x24, x23, [sp, #16]
  40caa4:	ldp	x29, x30, [sp], #64
  40caa8:	ret
  40caac:	mov	x0, x20
  40cab0:	bl	4067d0 <strlen@plt>
  40cab4:	add	x9, x0, #0x10
  40cab8:	mov	x8, sp
  40cabc:	and	x9, x9, #0xfffffffffffffff0
  40cac0:	sub	x22, x8, x9
  40cac4:	add	x2, x0, #0x1
  40cac8:	mov	sp, x22
  40cacc:	mov	x0, x22
  40cad0:	mov	x1, x20
  40cad4:	bl	406790 <memcpy@plt>
  40cad8:	mov	x0, x22
  40cadc:	bl	41ae68 <find_percent@@Base>
  40cae0:	mov	x21, x0
  40cae4:	cbz	x0, 40cb14 <pattern_matches@@Base+0xe4>
  40cae8:	mov	w8, #0x1                   	// #1
  40caec:	mov	x20, x22
  40caf0:	cbnz	w8, 40ca54 <pattern_matches@@Base+0x24>
  40caf4:	b	40ca94 <pattern_matches@@Base+0x64>
  40caf8:	sub	x8, x24, x23
  40cafc:	add	x1, x19, x8
  40cb00:	mov	x0, x22
  40cb04:	bl	406cb0 <strcmp@plt>
  40cb08:	cmp	w0, #0x0
  40cb0c:	cset	w0, eq  // eq = none
  40cb10:	b	40ca94 <pattern_matches@@Base+0x64>
  40cb14:	cmp	x22, x19
  40cb18:	b.eq	40cb4c <pattern_matches@@Base+0x11c>  // b.none
  40cb1c:	ldrb	w8, [x22]
  40cb20:	ldrb	w9, [x19]
  40cb24:	cmp	w8, w9
  40cb28:	b.ne	40cb58 <pattern_matches@@Base+0x128>  // b.any
  40cb2c:	cbz	w8, 40cb50 <pattern_matches@@Base+0x120>
  40cb30:	add	x0, x22, #0x1
  40cb34:	add	x1, x19, #0x1
  40cb38:	bl	406cb0 <strcmp@plt>
  40cb3c:	cmp	w0, #0x0
  40cb40:	mov	w8, wzr
  40cb44:	cset	w0, eq  // eq = none
  40cb48:	b	40cb60 <pattern_matches@@Base+0x130>
  40cb4c:	mov	w8, wzr
  40cb50:	mov	w0, #0x1                   	// #1
  40cb54:	b	40cb60 <pattern_matches@@Base+0x130>
  40cb58:	mov	w0, wzr
  40cb5c:	mov	w8, wzr
  40cb60:	mov	x22, x20
  40cb64:	mov	x20, x22
  40cb68:	cbz	w8, 40ca94 <pattern_matches@@Base+0x64>
  40cb6c:	b	40ca54 <pattern_matches@@Base+0x24>

000000000040cb70 <strip_whitespace@@Base>:
  40cb70:	ldr	x8, [x0]
  40cb74:	ldr	x9, [x1]
  40cb78:	cmp	x8, x9
  40cb7c:	b.hi	40cbac <strip_whitespace@@Base+0x3c>  // b.pmore
  40cb80:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40cb84:	add	x9, x9, #0xcf0
  40cb88:	ldrb	w10, [x8]
  40cb8c:	ldrh	w10, [x9, x10, lsl #1]
  40cb90:	tst	w10, #0x6
  40cb94:	b.eq	40cbac <strip_whitespace@@Base+0x3c>  // b.none
  40cb98:	add	x8, x8, #0x1
  40cb9c:	str	x8, [x0]
  40cba0:	ldr	x10, [x1]
  40cba4:	cmp	x8, x10
  40cba8:	b.ls	40cb88 <strip_whitespace@@Base+0x18>  // b.plast
  40cbac:	ldr	x10, [x1]
  40cbb0:	ldr	x8, [x0]
  40cbb4:	cmp	x10, x8
  40cbb8:	b.cc	40cbf8 <strip_whitespace@@Base+0x88>  // b.lo, b.ul, b.last
  40cbbc:	ldrb	w11, [x10]
  40cbc0:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40cbc4:	add	x9, x9, #0xcf0
  40cbc8:	ldrh	w11, [x9, x11, lsl #1]
  40cbcc:	tst	w11, #0x6
  40cbd0:	b.eq	40cbf8 <strip_whitespace@@Base+0x88>  // b.none
  40cbd4:	sub	x10, x10, #0x1
  40cbd8:	str	x10, [x1]
  40cbdc:	ldr	x8, [x0]
  40cbe0:	cmp	x10, x8
  40cbe4:	b.cc	40cbf8 <strip_whitespace@@Base+0x88>  // b.lo, b.ul, b.last
  40cbe8:	ldrb	w11, [x10], #-1
  40cbec:	ldrh	w11, [x9, x11, lsl #1]
  40cbf0:	tst	w11, #0x6
  40cbf4:	b.ne	40cbd8 <strip_whitespace@@Base+0x68>  // b.any
  40cbf8:	mov	x0, x8
  40cbfc:	ret

000000000040cc00 <shell_completed@@Base>:
  40cc00:	sub	sp, sp, #0x120
  40cc04:	cmp	w1, #0x0
  40cc08:	add	w8, w1, #0x80
  40cc0c:	ccmp	w0, #0x0, #0x0, gt
  40cc10:	mov	w10, #0x7f                  	// #127
  40cc14:	csel	w2, w8, w0, eq  // eq = none
  40cc18:	cmp	w1, #0x0
  40cc1c:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40cc20:	mov	w11, #0xffffffff            	// #-1
  40cc24:	ccmp	w0, w10, #0x0, eq  // eq = none
  40cc28:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40cc2c:	str	wzr, [x9, #2920]
  40cc30:	cneg	w8, w11, ne  // ne = any
  40cc34:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40cc38:	add	x1, x1, #0xfbc
  40cc3c:	mov	x0, sp
  40cc40:	stp	x29, x30, [sp, #256]
  40cc44:	str	x28, [sp, #272]
  40cc48:	add	x29, sp, #0x100
  40cc4c:	str	w8, [x9, #2924]
  40cc50:	bl	406870 <sprintf@plt>
  40cc54:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40cc58:	ldr	x8, [x8, #2440]
  40cc5c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  40cc60:	add	x0, x0, #0xe74
  40cc64:	mov	x2, sp
  40cc68:	ldr	x5, [x8, #8]
  40cc6c:	mov	w1, #0xc                   	// #12
  40cc70:	mov	w3, #0x5                   	// #5
  40cc74:	mov	w4, wzr
  40cc78:	mov	x6, xzr
  40cc7c:	bl	421720 <define_variable_in_set@@Base>
  40cc80:	ldr	x28, [sp, #272]
  40cc84:	ldp	x29, x30, [sp, #256]
  40cc88:	add	sp, sp, #0x120
  40cc8c:	ret

000000000040cc90 <func_shell_base@@Base>:
  40cc90:	sub	sp, sp, #0x80
  40cc94:	stp	x29, x30, [sp, #48]
  40cc98:	add	x29, sp, #0x30
  40cc9c:	stp	x26, x25, [sp, #64]
  40cca0:	stp	x24, x23, [sp, #80]
  40cca4:	stp	x22, x21, [sp, #96]
  40cca8:	stp	x20, x19, [sp, #112]
  40ccac:	stur	xzr, [x29, #-8]
  40ccb0:	ldr	x8, [x1]
  40ccb4:	mov	w21, w2
  40ccb8:	mov	x19, x0
  40ccbc:	sub	x4, x29, #0x8
  40ccc0:	mov	x0, x8
  40ccc4:	mov	x1, xzr
  40ccc8:	mov	x2, xzr
  40cccc:	mov	w3, wzr
  40ccd0:	bl	4138a0 <construct_command_argv@@Base>
  40ccd4:	cbz	x0, 40cf18 <func_shell_base@@Base+0x288>
  40ccd8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40ccdc:	ldr	x23, [x8, #2528]
  40cce0:	mov	x20, x0
  40cce4:	bl	418bac <output_start@@Base>
  40cce8:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  40ccec:	ldr	x8, [x8, #1472]
  40ccf0:	cbz	x8, 40ccfc <func_shell_base@@Base+0x6c>
  40ccf4:	ldr	w22, [x8, #4]
  40ccf8:	tbz	w22, #31, 40cd0c <func_shell_base@@Base+0x7c>
  40ccfc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40cd00:	ldr	x0, [x8, #2488]
  40cd04:	bl	406980 <fileno@plt>
  40cd08:	mov	w22, w0
  40cd0c:	sub	x0, x29, #0x10
  40cd10:	bl	406890 <pipe@plt>
  40cd14:	tbnz	w0, #31, 40ceb4 <func_shell_base@@Base+0x224>
  40cd18:	ldur	w0, [x29, #-12]
  40cd1c:	bl	424098 <fd_noinherit@@Base>
  40cd20:	ldur	w0, [x29, #-16]
  40cd24:	bl	424098 <fd_noinherit@@Base>
  40cd28:	ldrb	w8, [sp, #24]
  40cd2c:	ldur	w9, [x29, #-12]
  40cd30:	mov	x0, sp
  40cd34:	mov	w1, #0x1                   	// #1
  40cd38:	orr	w8, w8, #0x1
  40cd3c:	mov	x2, x20
  40cd40:	stp	w9, w22, [sp, #16]
  40cd44:	strb	w8, [sp, #24]
  40cd48:	stp	xzr, x23, [sp]
  40cd4c:	bl	4133c8 <child_execute_job@@Base>
  40cd50:	ldr	x8, [sp]
  40cd54:	mov	w22, w0
  40cd58:	mov	x0, x8
  40cd5c:	bl	406cf0 <free@plt>
  40cd60:	tbnz	w22, #31, 40cefc <func_shell_base@@Base+0x26c>
  40cd64:	ldur	w0, [x29, #-12]
  40cd68:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  40cd6c:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  40cd70:	str	w22, [x24, #2920]
  40cd74:	str	wzr, [x25, #2924]
  40cd78:	tbnz	w0, #31, 40cd80 <func_shell_base@@Base+0xf0>
  40cd7c:	bl	406ba0 <close@plt>
  40cd80:	mov	w0, #0xc9                  	// #201
  40cd84:	bl	418070 <xmalloc@@Base>
  40cd88:	mov	x22, x0
  40cd8c:	mov	x8, xzr
  40cd90:	mov	w26, #0xc8                  	// #200
  40cd94:	cmp	x8, x26
  40cd98:	str	x8, [sp]
  40cd9c:	b.ne	40cdb8 <func_shell_base@@Base+0x128>  // b.any
  40cda0:	add	x1, x26, #0x201
  40cda4:	mov	x0, x22
  40cda8:	add	x23, x26, #0x200
  40cdac:	bl	41803c <xrealloc@@Base>
  40cdb0:	mov	x22, x0
  40cdb4:	mov	x26, x23
  40cdb8:	ldr	x8, [sp]
  40cdbc:	ldur	w0, [x29, #-16]
  40cdc0:	add	x1, x22, x8
  40cdc4:	sub	x2, x26, x8
  40cdc8:	bl	406de0 <read@plt>
  40cdcc:	mov	x23, x0
  40cdd0:	cmn	w23, #0x1
  40cdd4:	b.ne	40cde8 <func_shell_base@@Base+0x158>  // b.any
  40cdd8:	bl	406f00 <__errno_location@plt>
  40cddc:	ldr	w8, [x0]
  40cde0:	cmp	w8, #0x4
  40cde4:	b.eq	40cdb8 <func_shell_base@@Base+0x128>  // b.none
  40cde8:	cmp	w23, #0x1
  40cdec:	b.lt	40cdfc <func_shell_base@@Base+0x16c>  // b.tstop
  40cdf0:	ldr	x8, [sp]
  40cdf4:	add	x8, x8, w23, sxtw
  40cdf8:	b	40cd94 <func_shell_base@@Base+0x104>
  40cdfc:	ldr	x8, [sp]
  40ce00:	strb	wzr, [x22, x8]
  40ce04:	ldur	w0, [x29, #-16]
  40ce08:	bl	406ba0 <close@plt>
  40ce0c:	ldr	w8, [x25, #2924]
  40ce10:	cbnz	w8, 40ce28 <func_shell_base@@Base+0x198>
  40ce14:	mov	w0, #0x1                   	// #1
  40ce18:	mov	w1, wzr
  40ce1c:	bl	411aac <reap_children@@Base>
  40ce20:	ldr	w8, [x25, #2924]
  40ce24:	cbz	w8, 40ce14 <func_shell_base@@Base+0x184>
  40ce28:	ldur	x8, [x29, #-8]
  40ce2c:	cbz	x8, 40ce74 <func_shell_base@@Base+0x1e4>
  40ce30:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40ce34:	ldrb	w8, [x8, #3236]
  40ce38:	tbz	w8, #1, 40ce64 <func_shell_base@@Base+0x1d4>
  40ce3c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40ce40:	add	x1, x1, #0xe8a
  40ce44:	mov	w2, #0x5                   	// #5
  40ce48:	mov	x0, xzr
  40ce4c:	bl	406e50 <dcgettext@plt>
  40ce50:	ldur	x1, [x29, #-8]
  40ce54:	bl	406ef0 <printf@plt>
  40ce58:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40ce5c:	ldr	x0, [x8, #2512]
  40ce60:	bl	406d80 <fflush@plt>
  40ce64:	ldur	x0, [x29, #-8]
  40ce68:	bl	406840 <remove@plt>
  40ce6c:	ldur	x0, [x29, #-8]
  40ce70:	bl	406cf0 <free@plt>
  40ce74:	ldr	w8, [x25, #2924]
  40ce78:	str	wzr, [x24, #2920]
  40ce7c:	cmn	w8, #0x1
  40ce80:	b.eq	40cf38 <func_shell_base@@Base+0x2a8>  // b.none
  40ce84:	mov	x1, sp
  40ce88:	mov	x0, x22
  40ce8c:	mov	w2, w21
  40ce90:	bl	40cf54 <func_shell_base@@Base+0x2c4>
  40ce94:	ldr	x2, [sp]
  40ce98:	mov	x0, x19
  40ce9c:	mov	x1, x22
  40cea0:	bl	409c78 <variable_buffer_output@@Base>
  40cea4:	mov	x19, x0
  40cea8:	mov	x0, x22
  40ceac:	bl	406cf0 <free@plt>
  40ceb0:	b	40cf08 <func_shell_base@@Base+0x278>
  40ceb4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40ceb8:	ldr	x21, [x8, #1552]
  40cebc:	bl	406f00 <__errno_location@plt>
  40cec0:	mov	x22, x0
  40cec4:	ldr	w0, [x0]
  40cec8:	bl	406b90 <strerror@plt>
  40cecc:	bl	4067d0 <strlen@plt>
  40ced0:	ldr	w8, [x22]
  40ced4:	mov	x22, x0
  40ced8:	mov	w0, w8
  40cedc:	bl	406b90 <strerror@plt>
  40cee0:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x10e0>
  40cee4:	mov	x3, x0
  40cee8:	add	x2, x2, #0xe81
  40ceec:	mov	x0, x21
  40cef0:	mov	x1, x22
  40cef4:	bl	418f84 <error@@Base>
  40cef8:	b	40cf08 <func_shell_base@@Base+0x278>
  40cefc:	mov	w0, #0x7f                  	// #127
  40cf00:	mov	w1, wzr
  40cf04:	bl	40cc00 <shell_completed@@Base>
  40cf08:	ldr	x0, [x20]
  40cf0c:	bl	406cf0 <free@plt>
  40cf10:	mov	x0, x20
  40cf14:	bl	406cf0 <free@plt>
  40cf18:	mov	x0, x19
  40cf1c:	ldp	x20, x19, [sp, #112]
  40cf20:	ldp	x22, x21, [sp, #96]
  40cf24:	ldp	x24, x23, [sp, #80]
  40cf28:	ldp	x26, x25, [sp, #64]
  40cf2c:	ldp	x29, x30, [sp, #48]
  40cf30:	add	sp, sp, #0x80
  40cf34:	ret
  40cf38:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  40cf3c:	ldr	x1, [x21, #2488]
  40cf40:	mov	x0, x22
  40cf44:	bl	4067e0 <fputs@plt>
  40cf48:	ldr	x0, [x21, #2488]
  40cf4c:	bl	406d80 <fflush@plt>
  40cf50:	b	40cea8 <func_shell_base@@Base+0x218>
  40cf54:	ldr	x10, [x1]
  40cf58:	sub	x8, x0, #0x1
  40cf5c:	add	x9, x0, #0x1
  40cf60:	mov	x11, x0
  40cf64:	strb	wzr, [x0, x10]
  40cf68:	mov	w10, #0x20                  	// #32
  40cf6c:	b	40cf88 <func_shell_base@@Base+0x2f8>
  40cf70:	cbz	w12, 40cfa4 <func_shell_base@@Base+0x314>
  40cf74:	cmp	w12, #0xa
  40cf78:	csel	w12, w10, w12, eq  // eq = none
  40cf7c:	csel	x8, x8, x11, eq  // eq = none
  40cf80:	strb	w12, [x11], #1
  40cf84:	add	x9, x9, #0x1
  40cf88:	ldurb	w12, [x9, #-1]
  40cf8c:	cmp	w12, #0xd
  40cf90:	b.ne	40cf70 <func_shell_base@@Base+0x2e0>  // b.any
  40cf94:	ldrb	w13, [x9]
  40cf98:	cmp	w13, #0xa
  40cf9c:	b.ne	40cf74 <func_shell_base@@Base+0x2e4>  // b.any
  40cfa0:	b	40cf84 <func_shell_base@@Base+0x2f4>
  40cfa4:	sub	x9, x11, #0x2
  40cfa8:	cmp	x8, x9
  40cfac:	ccmp	w2, #0x0, #0x0, cc  // cc = lo, ul, last
  40cfb0:	csel	x8, x9, x8, eq  // eq = none
  40cfb4:	strb	wzr, [x8, #1]!
  40cfb8:	sub	x8, x8, x0
  40cfbc:	str	x8, [x1]
  40cfc0:	ret

000000000040cfc4 <handle_function@@Base>:
  40cfc4:	stp	x29, x30, [sp, #-96]!
  40cfc8:	stp	x28, x27, [sp, #16]
  40cfcc:	stp	x26, x25, [sp, #32]
  40cfd0:	stp	x24, x23, [sp, #48]
  40cfd4:	stp	x22, x21, [sp, #64]
  40cfd8:	stp	x20, x19, [sp, #80]
  40cfdc:	ldr	x23, [x1]
  40cfe0:	mov	x20, x0
  40cfe4:	mov	w8, #0x7d                  	// #125
  40cfe8:	mov	w9, #0x29                  	// #41
  40cfec:	mov	x0, x23
  40cff0:	ldrb	w22, [x0], #1
  40cff4:	mov	x29, sp
  40cff8:	mov	x24, x1
  40cffc:	cmp	w22, #0x28
  40d000:	csel	w21, w9, w8, eq  // eq = none
  40d004:	bl	40d274 <handle_function@@Base+0x2b0>
  40d008:	cbz	x0, 40d210 <handle_function@@Base+0x24c>
  40d00c:	ldrb	w8, [x0, #16]
  40d010:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40d014:	mov	x19, x0
  40d018:	add	x9, x9, #0xcf0
  40d01c:	add	x23, x23, x8
  40d020:	ldrb	w8, [x23, #1]!
  40d024:	ldrh	w8, [x9, x8, lsl #1]
  40d028:	tst	w8, #0x6
  40d02c:	b.ne	40d020 <handle_function@@Base+0x5c>  // b.any
  40d030:	ldrb	w12, [x23]
  40d034:	cbz	w12, 40d098 <handle_function@@Base+0xd4>
  40d038:	mov	w8, wzr
  40d03c:	mov	w10, #0x1                   	// #1
  40d040:	mov	w11, #0x480                 	// #1152
  40d044:	mov	x25, x23
  40d048:	b	40d058 <handle_function@@Base+0x94>
  40d04c:	add	w10, w10, #0x1
  40d050:	ldrb	w12, [x25, #1]!
  40d054:	cbz	w12, 40d0a4 <handle_function@@Base+0xe0>
  40d058:	and	x13, x12, #0xff
  40d05c:	ldrh	w13, [x9, x13, lsl #1]
  40d060:	tst	w13, w11
  40d064:	b.eq	40d050 <handle_function@@Base+0x8c>  // b.none
  40d068:	and	w13, w12, #0xff
  40d06c:	cmp	w13, #0x2c
  40d070:	b.eq	40d04c <handle_function@@Base+0x88>  // b.none
  40d074:	cmp	w22, w12, uxtb
  40d078:	b.ne	40d084 <handle_function@@Base+0xc0>  // b.any
  40d07c:	add	w8, w8, #0x1
  40d080:	b	40d050 <handle_function@@Base+0x8c>
  40d084:	cmp	w21, w12, uxtb
  40d088:	b.ne	40d050 <handle_function@@Base+0x8c>  // b.any
  40d08c:	subs	w8, w8, #0x1
  40d090:	b.ge	40d050 <handle_function@@Base+0x8c>  // b.tcont
  40d094:	b	40d0a4 <handle_function@@Base+0xe0>
  40d098:	mov	w8, wzr
  40d09c:	mov	w10, #0x1                   	// #1
  40d0a0:	mov	x25, x23
  40d0a4:	tbz	w8, #31, 40d230 <handle_function@@Base+0x26c>
  40d0a8:	add	w8, w10, #0x2
  40d0ac:	sbfiz	x8, x8, #3, #32
  40d0b0:	add	x8, x8, #0xf
  40d0b4:	and	x8, x8, #0xfffffffffffffff0
  40d0b8:	mov	x9, sp
  40d0bc:	str	x25, [x24]
  40d0c0:	sub	x24, x9, x8
  40d0c4:	mov	sp, x24
  40d0c8:	ldrb	w8, [x19, #19]
  40d0cc:	tbnz	w8, #0, 40d14c <handle_function@@Base+0x188>
  40d0d0:	sub	x26, x25, x23
  40d0d4:	add	x0, x26, #0x1
  40d0d8:	bl	418070 <xmalloc@@Base>
  40d0dc:	mov	x1, x23
  40d0e0:	mov	x2, x26
  40d0e4:	mov	x25, x0
  40d0e8:	bl	406790 <memcpy@plt>
  40d0ec:	add	x23, x25, x26
  40d0f0:	strb	wzr, [x23]
  40d0f4:	tbnz	x26, #63, 40d158 <handle_function@@Base+0x194>
  40d0f8:	mov	w26, wzr
  40d0fc:	mov	x27, x25
  40d100:	mov	x28, x24
  40d104:	b	40d120 <handle_function@@Base+0x15c>
  40d108:	mov	x0, x23
  40d10c:	str	x27, [x28], #8
  40d110:	strb	wzr, [x0], #1
  40d114:	cmp	x0, x23
  40d118:	mov	x27, x0
  40d11c:	b.hi	40d1c4 <handle_function@@Base+0x200>  // b.pmore
  40d120:	ldrb	w8, [x19, #18]
  40d124:	add	w26, w26, #0x1
  40d128:	cmp	w26, w8
  40d12c:	b.eq	40d108 <handle_function@@Base+0x144>  // b.none
  40d130:	mov	w0, w22
  40d134:	mov	w1, w21
  40d138:	mov	x2, x27
  40d13c:	mov	x3, x23
  40d140:	bl	40d2e8 <handle_function@@Base+0x324>
  40d144:	cbnz	x0, 40d10c <handle_function@@Base+0x148>
  40d148:	b	40d108 <handle_function@@Base+0x144>
  40d14c:	cmp	x23, x25
  40d150:	b.ls	40d164 <handle_function@@Base+0x1a0>  // b.plast
  40d154:	mov	x25, xzr
  40d158:	mov	w26, wzr
  40d15c:	mov	x28, x24
  40d160:	b	40d1c4 <handle_function@@Base+0x200>
  40d164:	mov	w26, wzr
  40d168:	mov	x28, x24
  40d16c:	b	40d190 <handle_function@@Base+0x1cc>
  40d170:	mov	x27, x25
  40d174:	mov	x0, x23
  40d178:	mov	x1, x27
  40d17c:	bl	40a3c8 <expand_argument@@Base>
  40d180:	add	x23, x27, #0x1
  40d184:	cmp	x23, x25
  40d188:	str	x0, [x28], #8
  40d18c:	b.hi	40d1c0 <handle_function@@Base+0x1fc>  // b.pmore
  40d190:	ldrb	w8, [x19, #18]
  40d194:	add	w26, w26, #0x1
  40d198:	cmp	w26, w8
  40d19c:	b.eq	40d170 <handle_function@@Base+0x1ac>  // b.none
  40d1a0:	mov	w0, w22
  40d1a4:	mov	w1, w21
  40d1a8:	mov	x2, x23
  40d1ac:	mov	x3, x25
  40d1b0:	bl	40d2e8 <handle_function@@Base+0x324>
  40d1b4:	mov	x27, x0
  40d1b8:	cbnz	x0, 40d174 <handle_function@@Base+0x1b0>
  40d1bc:	b	40d170 <handle_function@@Base+0x1ac>
  40d1c0:	mov	x25, xzr
  40d1c4:	str	xzr, [x28]
  40d1c8:	ldr	x0, [x20]
  40d1cc:	mov	w1, w26
  40d1d0:	mov	x2, x24
  40d1d4:	mov	x3, x19
  40d1d8:	bl	40d35c <handle_function@@Base+0x398>
  40d1dc:	str	x0, [x20]
  40d1e0:	ldrb	w8, [x19, #19]
  40d1e4:	tbnz	w8, #0, 40d1f4 <handle_function@@Base+0x230>
  40d1e8:	mov	x0, x25
  40d1ec:	bl	406cf0 <free@plt>
  40d1f0:	b	40d20c <handle_function@@Base+0x248>
  40d1f4:	ldr	x0, [x24]
  40d1f8:	cbz	x0, 40d20c <handle_function@@Base+0x248>
  40d1fc:	add	x19, x24, #0x8
  40d200:	bl	406cf0 <free@plt>
  40d204:	ldr	x0, [x19], #8
  40d208:	cbnz	x0, 40d200 <handle_function@@Base+0x23c>
  40d20c:	mov	w0, #0x1                   	// #1
  40d210:	mov	sp, x29
  40d214:	ldp	x20, x19, [sp, #80]
  40d218:	ldp	x22, x21, [sp, #64]
  40d21c:	ldp	x24, x23, [sp, #48]
  40d220:	ldp	x26, x25, [sp, #32]
  40d224:	ldp	x28, x27, [sp, #16]
  40d228:	ldp	x29, x30, [sp], #96
  40d22c:	ret
  40d230:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40d234:	ldr	x8, [x8, #1472]
  40d238:	ldr	x0, [x19, #8]
  40d23c:	ldr	x20, [x8]
  40d240:	bl	4067d0 <strlen@plt>
  40d244:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d248:	mov	x22, x0
  40d24c:	add	x1, x1, #0xeaf
  40d250:	mov	w2, #0x5                   	// #5
  40d254:	mov	x0, xzr
  40d258:	bl	406e50 <dcgettext@plt>
  40d25c:	ldr	x3, [x19, #8]
  40d260:	mov	x2, x0
  40d264:	mov	x0, x20
  40d268:	mov	x1, x22
  40d26c:	mov	w4, w21
  40d270:	bl	4190fc <fatal@@Base>
  40d274:	sub	sp, sp, #0x30
  40d278:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  40d27c:	mov	x8, xzr
  40d280:	add	x10, x10, #0xcf0
  40d284:	stp	x29, x30, [sp, #32]
  40d288:	add	x29, sp, #0x20
  40d28c:	ldrb	w9, [x0, x8]
  40d290:	add	x8, x8, #0x1
  40d294:	ldrh	w9, [x10, x9, lsl #1]
  40d298:	tbnz	w9, #13, 40d28c <handle_function@@Base+0x2c8>
  40d29c:	cmp	x8, #0x1
  40d2a0:	mov	x1, xzr
  40d2a4:	b.eq	40d2d8 <handle_function@@Base+0x314>  // b.none
  40d2a8:	and	w9, w9, #0x7
  40d2ac:	cbz	w9, 40d2d8 <handle_function@@Base+0x314>
  40d2b0:	add	x8, x0, x8
  40d2b4:	sub	x8, x8, #0x1
  40d2b8:	str	x0, [sp, #16]
  40d2bc:	sub	w8, w8, w0
  40d2c0:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40d2c4:	add	x0, x0, #0xb70
  40d2c8:	add	x1, sp, #0x8
  40d2cc:	strb	w8, [sp, #24]
  40d2d0:	bl	40fbd8 <hash_find_item@@Base>
  40d2d4:	mov	x1, x0
  40d2d8:	ldp	x29, x30, [sp, #32]
  40d2dc:	mov	x0, x1
  40d2e0:	add	sp, sp, #0x30
  40d2e4:	ret
  40d2e8:	cmp	x2, x3
  40d2ec:	b.cs	40d350 <handle_function@@Base+0x38c>  // b.hs, b.nlast
  40d2f0:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40d2f4:	mov	w8, wzr
  40d2f8:	add	x9, x9, #0xcf0
  40d2fc:	mov	w10, #0x480                 	// #1152
  40d300:	b	40d314 <handle_function@@Base+0x350>
  40d304:	add	w8, w8, #0x1
  40d308:	add	x2, x2, #0x1
  40d30c:	cmp	x3, x2
  40d310:	b.eq	40d350 <handle_function@@Base+0x38c>  // b.none
  40d314:	ldrb	w11, [x2]
  40d318:	ldrh	w12, [x9, x11, lsl #1]
  40d31c:	tst	w12, w10
  40d320:	b.eq	40d308 <handle_function@@Base+0x344>  // b.none
  40d324:	cmp	w11, w0, uxtb
  40d328:	b.eq	40d304 <handle_function@@Base+0x340>  // b.none
  40d32c:	cmp	w11, w1, uxtb
  40d330:	b.ne	40d340 <handle_function@@Base+0x37c>  // b.any
  40d334:	subs	w8, w8, #0x1
  40d338:	b.ge	40d308 <handle_function@@Base+0x344>  // b.tcont
  40d33c:	b	40d350 <handle_function@@Base+0x38c>
  40d340:	cbnz	w8, 40d308 <handle_function@@Base+0x344>
  40d344:	cmp	w11, #0x2c
  40d348:	b.ne	40d308 <handle_function@@Base+0x344>  // b.any
  40d34c:	b	40d354 <handle_function@@Base+0x390>
  40d350:	mov	x2, xzr
  40d354:	mov	x0, x2
  40d358:	ret
  40d35c:	stp	x29, x30, [sp, #-48]!
  40d360:	stp	x22, x21, [sp, #16]
  40d364:	stp	x20, x19, [sp, #32]
  40d368:	ldrb	w8, [x3, #17]
  40d36c:	mov	x29, sp
  40d370:	cmp	w8, w1
  40d374:	b.gt	40d3f8 <handle_function@@Base+0x434>
  40d378:	mov	x19, x0
  40d37c:	cbnz	w1, 40d388 <handle_function@@Base+0x3c4>
  40d380:	ldrb	w8, [x3, #19]
  40d384:	tbz	w8, #1, 40d3e4 <handle_function@@Base+0x420>
  40d388:	ldr	x9, [x3]
  40d38c:	cbz	x9, 40d444 <handle_function@@Base+0x480>
  40d390:	ldrb	w8, [x3, #19]
  40d394:	tbnz	w8, #1, 40d3b4 <handle_function@@Base+0x3f0>
  40d398:	ldr	x8, [x3, #8]
  40d39c:	mov	x0, x19
  40d3a0:	mov	x1, x2
  40d3a4:	mov	x2, x8
  40d3a8:	blr	x9
  40d3ac:	mov	x19, x0
  40d3b0:	b	40d3e4 <handle_function@@Base+0x420>
  40d3b4:	ldp	x8, x0, [x3]
  40d3b8:	blr	x8
  40d3bc:	cbz	x0, 40d3e4 <handle_function@@Base+0x420>
  40d3c0:	mov	x20, x0
  40d3c4:	bl	4067d0 <strlen@plt>
  40d3c8:	mov	x2, x0
  40d3cc:	mov	x0, x19
  40d3d0:	mov	x1, x20
  40d3d4:	bl	409c78 <variable_buffer_output@@Base>
  40d3d8:	mov	x19, x0
  40d3dc:	mov	x0, x20
  40d3e0:	bl	406cf0 <free@plt>
  40d3e4:	mov	x0, x19
  40d3e8:	ldp	x20, x19, [sp, #32]
  40d3ec:	ldp	x22, x21, [sp, #16]
  40d3f0:	ldp	x29, x30, [sp], #48
  40d3f4:	ret
  40d3f8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40d3fc:	ldr	x8, [x8, #1472]
  40d400:	ldr	x0, [x3, #8]
  40d404:	mov	x22, x3
  40d408:	mov	w20, w1
  40d40c:	ldr	x19, [x8]
  40d410:	bl	4067d0 <strlen@plt>
  40d414:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d418:	mov	x21, x0
  40d41c:	add	x1, x1, #0xf91
  40d420:	mov	w2, #0x5                   	// #5
  40d424:	mov	x0, xzr
  40d428:	bl	406e50 <dcgettext@plt>
  40d42c:	ldr	x4, [x22, #8]
  40d430:	mov	x2, x0
  40d434:	mov	x0, x19
  40d438:	mov	x1, x21
  40d43c:	mov	w3, w20
  40d440:	bl	4190fc <fatal@@Base>
  40d444:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40d448:	ldr	x8, [x8, #1472]
  40d44c:	ldr	x0, [x3, #8]
  40d450:	mov	x21, x3
  40d454:	ldr	x19, [x8]
  40d458:	bl	4067d0 <strlen@plt>
  40d45c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d460:	mov	x20, x0
  40d464:	add	x1, x1, #0xfc8
  40d468:	mov	w2, #0x5                   	// #5
  40d46c:	mov	x0, xzr
  40d470:	bl	406e50 <dcgettext@plt>
  40d474:	ldr	x3, [x21, #8]
  40d478:	mov	x2, x0
  40d47c:	mov	x0, x19
  40d480:	mov	x1, x20
  40d484:	bl	4190fc <fatal@@Base>

000000000040d488 <define_new_function@@Base>:
  40d488:	stp	x29, x30, [sp, #-64]!
  40d48c:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  40d490:	stp	x24, x23, [sp, #16]
  40d494:	stp	x22, x21, [sp, #32]
  40d498:	stp	x20, x19, [sp, #48]
  40d49c:	mov	x22, x5
  40d4a0:	mov	w23, w4
  40d4a4:	mov	w20, w3
  40d4a8:	mov	w21, w2
  40d4ac:	mov	x19, x1
  40d4b0:	sub	x8, x1, #0x1
  40d4b4:	add	x10, x10, #0xcf0
  40d4b8:	mov	x29, sp
  40d4bc:	ldrb	w9, [x8, #1]!
  40d4c0:	ldrh	w11, [x10, x9, lsl #1]
  40d4c4:	tbnz	w11, #13, 40d4bc <define_new_function@@Base+0x34>
  40d4c8:	subs	x24, x8, x19
  40d4cc:	b.eq	40d5ac <define_new_function@@Base+0x124>  // b.none
  40d4d0:	cbnz	w9, 40d554 <define_new_function@@Base+0xcc>
  40d4d4:	ldrb	w8, [x19]
  40d4d8:	cmp	w8, #0x2e
  40d4dc:	b.eq	40d554 <define_new_function@@Base+0xcc>  // b.none
  40d4e0:	cmp	x24, #0x100
  40d4e4:	b.cs	40d5d4 <define_new_function@@Base+0x14c>  // b.hs, b.nlast
  40d4e8:	cmp	w21, #0x100
  40d4ec:	b.cs	40d60c <define_new_function@@Base+0x184>  // b.hs, b.nlast
  40d4f0:	cmp	w20, #0xff
  40d4f4:	b.hi	40d570 <define_new_function@@Base+0xe8>  // b.pmore
  40d4f8:	cbz	w20, 40d504 <define_new_function@@Base+0x7c>
  40d4fc:	cmp	w20, w21
  40d500:	b.cc	40d570 <define_new_function@@Base+0xe8>  // b.lo, b.ul, b.last
  40d504:	mov	w0, #0x18                  	// #24
  40d508:	bl	418070 <xmalloc@@Base>
  40d50c:	ldrb	w8, [x0, #19]
  40d510:	mov	x1, x0
  40d514:	strb	w24, [x0, #16]
  40d518:	strb	w21, [x0, #17]
  40d51c:	and	w8, w8, #0xfc
  40d520:	bfxil	w8, w23, #0, #1
  40d524:	eor	w8, w8, #0x3
  40d528:	strb	w20, [x0, #18]
  40d52c:	strb	w8, [x0, #19]
  40d530:	stp	x22, x19, [x0]
  40d534:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  40d538:	add	x0, x0, #0xb70
  40d53c:	bl	40fa80 <hash_insert@@Base>
  40d540:	ldp	x20, x19, [sp, #48]
  40d544:	ldp	x22, x21, [sp, #32]
  40d548:	ldp	x24, x23, [sp, #16]
  40d54c:	ldp	x29, x30, [sp], #64
  40d550:	ret
  40d554:	mov	x20, x0
  40d558:	mov	x0, x19
  40d55c:	bl	4067d0 <strlen@plt>
  40d560:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d564:	mov	x21, x0
  40d568:	add	x1, x1, #0xef4
  40d56c:	b	40d5ec <define_new_function@@Base+0x164>
  40d570:	mov	x21, x0
  40d574:	mov	x0, x19
  40d578:	bl	4067d0 <strlen@plt>
  40d57c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d580:	add	x22, x0, #0x14
  40d584:	add	x1, x1, #0xf5d
  40d588:	mov	w2, #0x5                   	// #5
  40d58c:	mov	x0, xzr
  40d590:	bl	406e50 <dcgettext@plt>
  40d594:	mov	x2, x0
  40d598:	mov	x0, x21
  40d59c:	mov	x1, x22
  40d5a0:	mov	w3, w20
  40d5a4:	mov	x4, x19
  40d5a8:	bl	4190fc <fatal@@Base>
  40d5ac:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d5b0:	add	x1, x1, #0xee0
  40d5b4:	mov	w2, #0x5                   	// #5
  40d5b8:	mov	x19, x0
  40d5bc:	mov	x0, xzr
  40d5c0:	bl	406e50 <dcgettext@plt>
  40d5c4:	mov	x2, x0
  40d5c8:	mov	x0, x19
  40d5cc:	mov	x1, xzr
  40d5d0:	bl	4190fc <fatal@@Base>
  40d5d4:	mov	x20, x0
  40d5d8:	mov	x0, x19
  40d5dc:	bl	4067d0 <strlen@plt>
  40d5e0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d5e4:	mov	x21, x0
  40d5e8:	add	x1, x1, #0xf0e
  40d5ec:	mov	w2, #0x5                   	// #5
  40d5f0:	mov	x0, xzr
  40d5f4:	bl	406e50 <dcgettext@plt>
  40d5f8:	mov	x2, x0
  40d5fc:	mov	x0, x20
  40d600:	mov	x1, x21
  40d604:	mov	x3, x19
  40d608:	bl	4190fc <fatal@@Base>
  40d60c:	mov	x20, x0
  40d610:	mov	x0, x19
  40d614:	bl	4067d0 <strlen@plt>
  40d618:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d61c:	add	x22, x0, #0x14
  40d620:	add	x1, x1, #0xf29
  40d624:	mov	w2, #0x5                   	// #5
  40d628:	mov	x0, xzr
  40d62c:	bl	406e50 <dcgettext@plt>
  40d630:	mov	x2, x0
  40d634:	mov	x0, x20
  40d638:	mov	x1, x22
  40d63c:	mov	w3, w21
  40d640:	mov	x4, x19
  40d644:	bl	4190fc <fatal@@Base>

000000000040d648 <hash_init_function_table@@Base>:
  40d648:	stp	x29, x30, [sp, #-32]!
  40d64c:	str	x19, [sp, #16]
  40d650:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  40d654:	add	x19, x19, #0xb70
  40d658:	adrp	x2, 40d000 <handle_function@@Base+0x3c>
  40d65c:	adrp	x3, 40d000 <handle_function@@Base+0x3c>
  40d660:	adrp	x4, 40d000 <handle_function@@Base+0x3c>
  40d664:	add	x2, x2, #0x6a4
  40d668:	add	x3, x3, #0x6c8
  40d66c:	add	x4, x4, #0x6d0
  40d670:	mov	w1, #0x48                  	// #72
  40d674:	mov	x0, x19
  40d678:	mov	x29, sp
  40d67c:	bl	40f974 <hash_init@@Base>
  40d680:	adrp	x1, 43c000 <memcpy@GLIBC_2.17>
  40d684:	add	x1, x1, #0x5c8
  40d688:	mov	w2, #0x24                  	// #36
  40d68c:	mov	w3, #0x18                  	// #24
  40d690:	mov	x0, x19
  40d694:	bl	40fa34 <hash_load@@Base>
  40d698:	ldr	x19, [sp, #16]
  40d69c:	ldp	x29, x30, [sp], #32
  40d6a0:	ret
  40d6a4:	stp	x29, x30, [sp, #-16]!
  40d6a8:	ldr	x8, [x0, #8]
  40d6ac:	ldrb	w1, [x0, #16]
  40d6b0:	mov	x29, sp
  40d6b4:	mov	x0, x8
  40d6b8:	bl	410134 <jhash@@Base>
  40d6bc:	mov	w0, w0
  40d6c0:	ldp	x29, x30, [sp], #16
  40d6c4:	ret
  40d6c8:	mov	x0, xzr
  40d6cc:	ret
  40d6d0:	stp	x29, x30, [sp, #-16]!
  40d6d4:	ldrb	w2, [x0, #16]
  40d6d8:	ldrb	w9, [x1, #16]
  40d6dc:	mov	x8, x0
  40d6e0:	mov	x29, sp
  40d6e4:	subs	w0, w2, w9
  40d6e8:	b.eq	40d6f4 <hash_init_function_table@@Base+0xac>  // b.none
  40d6ec:	ldp	x29, x30, [sp], #16
  40d6f0:	ret
  40d6f4:	ldr	x0, [x8, #8]
  40d6f8:	ldr	x1, [x1, #8]
  40d6fc:	cmp	x0, x1
  40d700:	b.eq	40d710 <hash_init_function_table@@Base+0xc8>  // b.none
  40d704:	bl	406c70 <memcmp@plt>
  40d708:	ldp	x29, x30, [sp], #16
  40d70c:	ret
  40d710:	mov	w0, wzr
  40d714:	ldp	x29, x30, [sp], #16
  40d718:	ret
  40d71c:	stp	x29, x30, [sp, #-64]!
  40d720:	str	x28, [sp, #16]
  40d724:	stp	x22, x21, [sp, #32]
  40d728:	stp	x20, x19, [sp, #48]
  40d72c:	mov	x29, sp
  40d730:	sub	sp, sp, #0x2, lsl #12
  40d734:	sub	sp, sp, #0x10
  40d738:	ldr	x8, [x1]
  40d73c:	mov	x19, x0
  40d740:	add	x0, x29, #0x18
  40d744:	sub	x1, x29, #0x8
  40d748:	stur	xzr, [x29, #-8]
  40d74c:	str	x8, [x29, #24]
  40d750:	bl	418158 <find_next_token@@Base>
  40d754:	cbz	x0, 40d7ec <hash_init_function_table@@Base+0x1a4>
  40d758:	add	x21, sp, #0x1, lsl #12
  40d75c:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x40e0>
  40d760:	mov	x1, x0
  40d764:	mov	w22, wzr
  40d768:	add	x21, x21, #0x4
  40d76c:	add	x20, x20, #0xeb4
  40d770:	b	40d788 <hash_init_function_table@@Base+0x140>
  40d774:	add	x0, x29, #0x18
  40d778:	sub	x1, x29, #0x8
  40d77c:	bl	418158 <find_next_token@@Base>
  40d780:	mov	x1, x0
  40d784:	cbz	x0, 40d7f0 <hash_init_function_table@@Base+0x1a8>
  40d788:	ldur	x2, [x29, #-8]
  40d78c:	cmp	x2, #0xfff
  40d790:	b.hi	40d774 <hash_init_function_table@@Base+0x12c>  // b.pmore
  40d794:	add	x0, sp, #0x1, lsl #12
  40d798:	add	x0, x0, #0x4
  40d79c:	bl	406eb0 <strncpy@plt>
  40d7a0:	ldur	x8, [x29, #-8]
  40d7a4:	add	x0, sp, #0x1, lsl #12
  40d7a8:	add	x0, x0, #0x4
  40d7ac:	mov	x1, sp
  40d7b0:	strb	wzr, [x21, x8]
  40d7b4:	bl	40f548 <hash_init_function_table@@Base+0x1f00>
  40d7b8:	cbz	x0, 40d774 <hash_init_function_table@@Base+0x12c>
  40d7bc:	mov	x0, sp
  40d7c0:	bl	4067d0 <strlen@plt>
  40d7c4:	mov	x2, x0
  40d7c8:	mov	x1, sp
  40d7cc:	mov	x0, x19
  40d7d0:	bl	409c78 <variable_buffer_output@@Base>
  40d7d4:	mov	w2, #0x1                   	// #1
  40d7d8:	mov	x1, x20
  40d7dc:	mov	w22, #0x1                   	// #1
  40d7e0:	bl	409c78 <variable_buffer_output@@Base>
  40d7e4:	mov	x19, x0
  40d7e8:	b	40d774 <hash_init_function_table@@Base+0x12c>
  40d7ec:	mov	w22, wzr
  40d7f0:	sub	x8, x19, #0x1
  40d7f4:	cmp	w22, #0x0
  40d7f8:	csel	x0, x19, x8, eq  // eq = none
  40d7fc:	add	sp, sp, #0x2, lsl #12
  40d800:	add	sp, sp, #0x10
  40d804:	ldp	x20, x19, [sp, #48]
  40d808:	ldp	x22, x21, [sp, #32]
  40d80c:	ldr	x28, [sp, #16]
  40d810:	ldp	x29, x30, [sp], #64
  40d814:	ret
  40d818:	sub	sp, sp, #0x50
  40d81c:	stp	x29, x30, [sp, #16]
  40d820:	stp	x24, x23, [sp, #32]
  40d824:	stp	x22, x21, [sp, #48]
  40d828:	stp	x20, x19, [sp, #64]
  40d82c:	ldr	x8, [x1]
  40d830:	mov	x21, x0
  40d834:	add	x29, sp, #0x10
  40d838:	mov	x20, x2
  40d83c:	mov	x0, x8
  40d840:	mov	x19, x1
  40d844:	bl	4067d0 <strlen@plt>
  40d848:	ldr	x8, [x19, #8]
  40d84c:	mov	x1, sp
  40d850:	str	x8, [sp, #8]
  40d854:	ldrb	w24, [x20, #3]
  40d858:	mov	x20, x0
  40d85c:	add	x0, sp, #0x8
  40d860:	bl	418158 <find_next_token@@Base>
  40d864:	cbz	x0, 40d8e8 <hash_init_function_table@@Base+0x2a0>
  40d868:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x40e0>
  40d86c:	mov	x23, x0
  40d870:	add	x22, x22, #0xeb4
  40d874:	b	40d89c <hash_init_function_table@@Base+0x254>
  40d878:	mov	w2, #0x1                   	// #1
  40d87c:	mov	x1, x22
  40d880:	bl	409c78 <variable_buffer_output@@Base>
  40d884:	mov	x21, x0
  40d888:	add	x0, sp, #0x8
  40d88c:	mov	x1, sp
  40d890:	bl	418158 <find_next_token@@Base>
  40d894:	mov	x23, x0
  40d898:	cbz	x0, 40d8e0 <hash_init_function_table@@Base+0x298>
  40d89c:	cmp	w24, #0x70
  40d8a0:	b.ne	40d8b8 <hash_init_function_table@@Base+0x270>  // b.any
  40d8a4:	ldr	x1, [x19]
  40d8a8:	mov	x0, x21
  40d8ac:	mov	x2, x20
  40d8b0:	bl	409c78 <variable_buffer_output@@Base>
  40d8b4:	mov	x21, x0
  40d8b8:	ldr	x2, [sp]
  40d8bc:	mov	x0, x21
  40d8c0:	mov	x1, x23
  40d8c4:	bl	409c78 <variable_buffer_output@@Base>
  40d8c8:	cmp	w24, #0x70
  40d8cc:	b.eq	40d878 <hash_init_function_table@@Base+0x230>  // b.none
  40d8d0:	ldr	x1, [x19]
  40d8d4:	mov	x2, x20
  40d8d8:	bl	409c78 <variable_buffer_output@@Base>
  40d8dc:	b	40d878 <hash_init_function_table@@Base+0x230>
  40d8e0:	mov	w8, wzr
  40d8e4:	b	40d8ec <hash_init_function_table@@Base+0x2a4>
  40d8e8:	mov	w8, #0x1                   	// #1
  40d8ec:	sub	x9, x21, #0x1
  40d8f0:	cmp	w8, #0x0
  40d8f4:	csel	x0, x21, x9, ne  // ne = any
  40d8f8:	ldp	x20, x19, [sp, #64]
  40d8fc:	ldp	x22, x21, [sp, #48]
  40d900:	ldp	x24, x23, [sp, #32]
  40d904:	ldp	x29, x30, [sp, #16]
  40d908:	add	sp, sp, #0x50
  40d90c:	ret
  40d910:	sub	sp, sp, #0x60
  40d914:	stp	x29, x30, [sp, #16]
  40d918:	stp	x24, x23, [sp, #48]
  40d91c:	stp	x22, x21, [sp, #64]
  40d920:	stp	x20, x19, [sp, #80]
  40d924:	ldr	x8, [x1]
  40d928:	add	x29, sp, #0x10
  40d92c:	str	xzr, [sp, #8]
  40d930:	mov	x20, x0
  40d934:	str	x8, [x29, #24]
  40d938:	ldrb	w22, [x2]
  40d93c:	mov	w8, #0x8001                	// #32769
  40d940:	mov	w9, #0x8201                	// #33281
  40d944:	add	x0, x29, #0x18
  40d948:	cmp	w22, #0x62
  40d94c:	add	x1, sp, #0x8
  40d950:	str	x25, [sp, #32]
  40d954:	cset	w23, ne  // ne = any
  40d958:	csel	w24, w9, w8, eq  // eq = none
  40d95c:	bl	418158 <find_next_token@@Base>
  40d960:	cbz	x0, 40da50 <hash_init_function_table@@Base+0x408>
  40d964:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  40d968:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x40e0>
  40d96c:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x10e0>
  40d970:	mov	x1, x0
  40d974:	add	x25, x25, #0xcf0
  40d978:	add	x19, x19, #0xeb4
  40d97c:	add	x21, x21, #0x8c6
  40d980:	b	40d9b8 <hash_init_function_table@@Base+0x370>
  40d984:	sub	x8, x8, x1
  40d988:	add	x2, x8, #0x1
  40d98c:	mov	x0, x20
  40d990:	bl	409c78 <variable_buffer_output@@Base>
  40d994:	mov	w2, #0x1                   	// #1
  40d998:	mov	x1, x19
  40d99c:	bl	409c78 <variable_buffer_output@@Base>
  40d9a0:	mov	x20, x0
  40d9a4:	add	x0, x29, #0x18
  40d9a8:	add	x1, sp, #0x8
  40d9ac:	bl	418158 <find_next_token@@Base>
  40d9b0:	mov	x1, x0
  40d9b4:	cbz	x0, 40da48 <hash_init_function_table@@Base+0x400>
  40d9b8:	ldr	x2, [sp, #8]
  40d9bc:	add	x8, x1, x2
  40d9c0:	sub	x8, x8, #0x1
  40d9c4:	cmp	x8, x1
  40d9c8:	cset	w9, cs  // cs = hs, nlast
  40d9cc:	b.cc	40da0c <hash_init_function_table@@Base+0x3c4>  // b.lo, b.ul, b.last
  40d9d0:	ldrb	w10, [x8]
  40d9d4:	ldrh	w10, [x25, x10, lsl #1]
  40d9d8:	tst	w24, w10
  40d9dc:	b.ne	40da0c <hash_init_function_table@@Base+0x3c4>  // b.any
  40d9e0:	add	x8, x1, x2
  40d9e4:	sub	x10, x8, #0x2
  40d9e8:	cmp	x10, x1
  40d9ec:	mov	x8, x10
  40d9f0:	cset	w9, cs  // cs = hs, nlast
  40d9f4:	b.cc	40da0c <hash_init_function_table@@Base+0x3c4>  // b.lo, b.ul, b.last
  40d9f8:	mov	x10, x8
  40d9fc:	ldrb	w11, [x10], #-1
  40da00:	ldrh	w11, [x25, x11, lsl #1]
  40da04:	tst	w24, w11
  40da08:	b.eq	40d9e8 <hash_init_function_table@@Base+0x3a0>  // b.none
  40da0c:	and	w10, w9, w23
  40da10:	cmp	w10, #0x1
  40da14:	b.eq	40d984 <hash_init_function_table@@Base+0x33c>  // b.none
  40da18:	cbz	w9, 40da30 <hash_init_function_table@@Base+0x3e8>
  40da1c:	ldrb	w9, [x8]
  40da20:	cmp	w9, #0x2e
  40da24:	b.ne	40da30 <hash_init_function_table@@Base+0x3e8>  // b.any
  40da28:	sub	x2, x8, x1
  40da2c:	b	40d98c <hash_init_function_table@@Base+0x344>
  40da30:	cmp	w22, #0x62
  40da34:	b.eq	40d98c <hash_init_function_table@@Base+0x344>  // b.none
  40da38:	mov	w2, #0x2                   	// #2
  40da3c:	mov	x0, x20
  40da40:	mov	x1, x21
  40da44:	b	40d990 <hash_init_function_table@@Base+0x348>
  40da48:	mov	w8, wzr
  40da4c:	b	40da54 <hash_init_function_table@@Base+0x40c>
  40da50:	mov	w8, #0x1                   	// #1
  40da54:	sub	x9, x20, #0x1
  40da58:	cmp	w8, #0x0
  40da5c:	csel	x0, x20, x9, ne  // ne = any
  40da60:	ldp	x20, x19, [sp, #80]
  40da64:	ldp	x22, x21, [sp, #64]
  40da68:	ldp	x24, x23, [sp, #48]
  40da6c:	ldr	x25, [sp, #32]
  40da70:	ldp	x29, x30, [sp, #16]
  40da74:	add	sp, sp, #0x60
  40da78:	ret
  40da7c:	sub	sp, sp, #0x60
  40da80:	stp	x29, x30, [sp, #16]
  40da84:	stp	x26, x25, [sp, #32]
  40da88:	stp	x24, x23, [sp, #48]
  40da8c:	stp	x22, x21, [sp, #64]
  40da90:	stp	x20, x19, [sp, #80]
  40da94:	ldr	x8, [x1]
  40da98:	mov	x19, x0
  40da9c:	mov	w9, #0x8200                	// #33280
  40daa0:	add	x0, sp, #0x8
  40daa4:	stp	xzr, x8, [sp]
  40daa8:	ldrb	w23, [x2]
  40daac:	mov	w8, #0x8000                	// #32768
  40dab0:	mov	x1, sp
  40dab4:	add	x29, sp, #0x10
  40dab8:	cmp	w23, #0x73
  40dabc:	csel	w24, w9, w8, eq  // eq = none
  40dac0:	bl	418158 <find_next_token@@Base>
  40dac4:	cbz	x0, 40db98 <hash_init_function_table@@Base+0x550>
  40dac8:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x40e0>
  40dacc:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  40dad0:	mov	x21, x0
  40dad4:	mov	w25, wzr
  40dad8:	add	x20, x20, #0xeb4
  40dadc:	add	x26, x26, #0xcf0
  40dae0:	b	40db10 <hash_init_function_table@@Base+0x4c8>
  40dae4:	mov	w2, #0x1                   	// #1
  40dae8:	mov	x0, x19
  40daec:	mov	x1, x20
  40daf0:	mov	w25, #0x1                   	// #1
  40daf4:	bl	409c78 <variable_buffer_output@@Base>
  40daf8:	mov	x19, x0
  40dafc:	add	x0, sp, #0x8
  40db00:	mov	x1, sp
  40db04:	bl	418158 <find_next_token@@Base>
  40db08:	mov	x21, x0
  40db0c:	cbz	x0, 40db9c <hash_init_function_table@@Base+0x554>
  40db10:	ldr	x2, [sp]
  40db14:	add	x8, x21, x2
  40db18:	sub	x22, x8, #0x1
  40db1c:	cmp	x22, x21
  40db20:	b.cc	40db40 <hash_init_function_table@@Base+0x4f8>  // b.lo, b.ul, b.last
  40db24:	ldrb	w8, [x22]
  40db28:	ldrh	w9, [x26, x8, lsl #1]
  40db2c:	tst	w24, w9
  40db30:	b.ne	40db54 <hash_init_function_table@@Base+0x50c>  // b.any
  40db34:	sub	x22, x22, #0x1
  40db38:	cmp	x22, x21
  40db3c:	b.cs	40db24 <hash_init_function_table@@Base+0x4dc>  // b.hs, b.nlast
  40db40:	cmp	w23, #0x73
  40db44:	b.eq	40db84 <hash_init_function_table@@Base+0x53c>  // b.none
  40db48:	mov	x0, x19
  40db4c:	mov	x1, x21
  40db50:	b	40db7c <hash_init_function_table@@Base+0x534>
  40db54:	cmp	w23, #0x73
  40db58:	b.ne	40db68 <hash_init_function_table@@Base+0x520>  // b.any
  40db5c:	cmp	w8, #0x2e
  40db60:	b.ne	40dafc <hash_init_function_table@@Base+0x4b4>  // b.any
  40db64:	b	40db6c <hash_init_function_table@@Base+0x524>
  40db68:	add	x22, x22, #0x1
  40db6c:	add	x8, x2, x21
  40db70:	sub	x2, x8, x22
  40db74:	mov	x0, x19
  40db78:	mov	x1, x22
  40db7c:	bl	409c78 <variable_buffer_output@@Base>
  40db80:	mov	x19, x0
  40db84:	cmp	w23, #0x73
  40db88:	b.ne	40dae4 <hash_init_function_table@@Base+0x49c>  // b.any
  40db8c:	cmp	x22, x21
  40db90:	b.cc	40dafc <hash_init_function_table@@Base+0x4b4>  // b.lo, b.ul, b.last
  40db94:	b	40dae4 <hash_init_function_table@@Base+0x49c>
  40db98:	mov	w25, wzr
  40db9c:	sub	x8, x19, #0x1
  40dba0:	cmp	w25, #0x0
  40dba4:	csel	x0, x19, x8, eq  // eq = none
  40dba8:	ldp	x20, x19, [sp, #80]
  40dbac:	ldp	x22, x21, [sp, #64]
  40dbb0:	ldp	x24, x23, [sp, #48]
  40dbb4:	ldp	x26, x25, [sp, #32]
  40dbb8:	ldp	x29, x30, [sp, #16]
  40dbbc:	add	sp, sp, #0x60
  40dbc0:	ret
  40dbc4:	stp	x29, x30, [sp, #-64]!
  40dbc8:	stp	x22, x21, [sp, #32]
  40dbcc:	stp	x20, x19, [sp, #48]
  40dbd0:	ldr	x20, [x1]
  40dbd4:	str	x23, [sp, #16]
  40dbd8:	ldp	x21, x19, [x1, #8]
  40dbdc:	mov	x22, x0
  40dbe0:	mov	x0, x20
  40dbe4:	mov	x29, sp
  40dbe8:	bl	4067d0 <strlen@plt>
  40dbec:	mov	x23, x0
  40dbf0:	mov	x0, x21
  40dbf4:	bl	4067d0 <strlen@plt>
  40dbf8:	mov	x5, x0
  40dbfc:	mov	x0, x22
  40dc00:	mov	x1, x19
  40dc04:	mov	x2, x20
  40dc08:	mov	x3, x21
  40dc0c:	mov	x4, x23
  40dc10:	mov	w6, wzr
  40dc14:	bl	40c5b8 <subst_expand@@Base>
  40dc18:	ldp	x20, x19, [sp, #48]
  40dc1c:	ldp	x22, x21, [sp, #32]
  40dc20:	ldr	x23, [sp, #16]
  40dc24:	ldp	x29, x30, [sp], #64
  40dc28:	ret
  40dc2c:	stp	x29, x30, [sp, #-80]!
  40dc30:	str	x25, [sp, #16]
  40dc34:	stp	x24, x23, [sp, #32]
  40dc38:	stp	x22, x21, [sp, #48]
  40dc3c:	stp	x20, x19, [sp, #64]
  40dc40:	mov	x29, sp
  40dc44:	sub	sp, sp, #0xa0
  40dc48:	ldr	x8, [x1]
  40dc4c:	ldrb	w22, [x2, #6]
  40dc50:	mov	x19, x0
  40dc54:	sub	x0, x29, #0x68
  40dc58:	stur	x8, [x29, #-104]
  40dc5c:	ldr	x8, [x1, #8]
  40dc60:	sub	x1, x29, #0x78
  40dc64:	stur	x8, [x29, #-112]
  40dc68:	bl	418158 <find_next_token@@Base>
  40dc6c:	mov	w20, wzr
  40dc70:	cbz	x0, 40dce0 <hash_init_function_table@@Base+0x698>
  40dc74:	sub	x8, x29, #0x8
  40dc78:	b	40dcbc <hash_init_function_table@@Base+0x674>
  40dc7c:	ldur	x8, [x29, #-120]
  40dc80:	str	x0, [x21, #8]
  40dc84:	strb	wzr, [x0, x8]
  40dc88:	bl	41ae68 <find_percent@@Base>
  40dc8c:	ldr	x8, [x21, #8]
  40dc90:	str	x0, [x21, #16]
  40dc94:	cmp	x0, #0x0
  40dc98:	cinc	w20, w20, eq  // eq = none
  40dc9c:	mov	x0, x8
  40dca0:	bl	4067d0 <strlen@plt>
  40dca4:	str	x0, [x21, #24]
  40dca8:	sub	x0, x29, #0x68
  40dcac:	sub	x1, x29, #0x78
  40dcb0:	bl	418158 <find_next_token@@Base>
  40dcb4:	mov	x8, x21
  40dcb8:	cbz	x0, 40dce4 <hash_init_function_table@@Base+0x69c>
  40dcbc:	sub	x21, sp, #0x20
  40dcc0:	mov	sp, x21
  40dcc4:	ldur	x9, [x29, #-104]
  40dcc8:	str	x21, [x8]
  40dccc:	ldrb	w8, [x9]
  40dcd0:	cbz	w8, 40dc7c <hash_init_function_table@@Base+0x634>
  40dcd4:	add	x8, x9, #0x1
  40dcd8:	stur	x8, [x29, #-104]
  40dcdc:	b	40dc7c <hash_init_function_table@@Base+0x634>
  40dce0:	sub	x21, x29, #0x8
  40dce4:	sub	x0, x29, #0x70
  40dce8:	sub	x1, x29, #0x78
  40dcec:	str	xzr, [x21]
  40dcf0:	bl	418158 <find_next_token@@Base>
  40dcf4:	mov	w21, wzr
  40dcf8:	cbz	x0, 40dd58 <hash_init_function_table@@Base+0x710>
  40dcfc:	add	x8, x29, #0x18
  40dd00:	b	40dd34 <hash_init_function_table@@Base+0x6ec>
  40dd04:	ldur	x8, [x29, #-120]
  40dd08:	sub	x1, x29, #0x78
  40dd0c:	add	w21, w21, #0x1
  40dd10:	strb	wzr, [x0, x8]
  40dd14:	ldur	x8, [x29, #-120]
  40dd18:	stp	xzr, x0, [x24, #8]
  40dd1c:	sub	x0, x29, #0x70
  40dd20:	str	wzr, [x24, #32]
  40dd24:	str	x8, [x24, #24]
  40dd28:	bl	418158 <find_next_token@@Base>
  40dd2c:	mov	x8, x24
  40dd30:	cbz	x0, 40dd5c <hash_init_function_table@@Base+0x714>
  40dd34:	sub	x24, sp, #0x30
  40dd38:	mov	sp, x24
  40dd3c:	ldur	x9, [x29, #-112]
  40dd40:	str	x24, [x8]
  40dd44:	ldrb	w8, [x9]
  40dd48:	cbz	w8, 40dd04 <hash_init_function_table@@Base+0x6bc>
  40dd4c:	add	x8, x9, #0x1
  40dd50:	stur	x8, [x29, #-112]
  40dd54:	b	40dd04 <hash_init_function_table@@Base+0x6bc>
  40dd58:	add	x24, x29, #0x18
  40dd5c:	cmp	w20, #0x1
  40dd60:	mul	w8, w21, w20
  40dd64:	cset	w9, hi  // hi = pmore
  40dd68:	cmp	w8, #0x9
  40dd6c:	cset	w8, hi  // hi = pmore
  40dd70:	and	w23, w9, w8
  40dd74:	cmp	w23, #0x1
  40dd78:	str	xzr, [x24]
  40dd7c:	b.ne	40ddac <hash_init_function_table@@Base+0x764>  // b.any
  40dd80:	adrp	x2, 40f000 <hash_init_function_table@@Base+0x19b8>
  40dd84:	adrp	x3, 40f000 <hash_init_function_table@@Base+0x19b8>
  40dd88:	adrp	x4, 40f000 <hash_init_function_table@@Base+0x19b8>
  40dd8c:	mov	w1, w21
  40dd90:	add	x2, x2, #0x6e4
  40dd94:	add	x3, x3, #0x700
  40dd98:	add	x4, x4, #0x708
  40dd9c:	sub	x0, x29, #0x60
  40dda0:	bl	40f974 <hash_init@@Base>
  40dda4:	ldr	x20, [x29, #24]
  40dda8:	cbnz	x20, 40de8c <hash_init_function_table@@Base+0x844>
  40ddac:	cbz	w21, 40df18 <hash_init_function_table@@Base+0x8d0>
  40ddb0:	ldur	x20, [x29, #-8]
  40ddb4:	cbz	x20, 40dea4 <hash_init_function_table@@Base+0x85c>
  40ddb8:	ldr	x21, [x29, #24]
  40ddbc:	b	40ddc8 <hash_init_function_table@@Base+0x780>
  40ddc0:	ldr	x20, [x20]
  40ddc4:	cbz	x20, 40dea4 <hash_init_function_table@@Base+0x85c>
  40ddc8:	ldr	x8, [x20, #16]
  40ddcc:	cbz	x8, 40ddfc <hash_init_function_table@@Base+0x7b4>
  40ddd0:	cbz	x21, 40ddc0 <hash_init_function_table@@Base+0x778>
  40ddd4:	mov	x24, x21
  40ddd8:	ldp	x0, x1, [x20, #8]
  40dddc:	ldr	x2, [x24, #16]
  40dde0:	bl	40ca30 <pattern_matches@@Base>
  40dde4:	ldr	w8, [x24, #32]
  40dde8:	orr	w8, w8, w0
  40ddec:	str	w8, [x24, #32]
  40ddf0:	ldr	x24, [x24]
  40ddf4:	cbnz	x24, 40ddd8 <hash_init_function_table@@Base+0x790>
  40ddf8:	b	40ddc0 <hash_init_function_table@@Base+0x778>
  40ddfc:	tbz	w23, #0, 40de38 <hash_init_function_table@@Base+0x7f0>
  40de00:	ldr	x8, [x20, #8]
  40de04:	sub	x0, x29, #0x60
  40de08:	sub	x1, x29, #0xa0
  40de0c:	stur	x8, [x29, #-144]
  40de10:	ldr	x8, [x20, #24]
  40de14:	stur	x8, [x29, #-136]
  40de18:	bl	40fbd8 <hash_find_item@@Base>
  40de1c:	cbz	x0, 40ddc0 <hash_init_function_table@@Base+0x778>
  40de20:	ldr	w8, [x0, #32]
  40de24:	orr	w8, w8, #0x1
  40de28:	str	w8, [x0, #32]
  40de2c:	ldr	x0, [x0, #8]
  40de30:	cbnz	x0, 40de20 <hash_init_function_table@@Base+0x7d8>
  40de34:	b	40ddc0 <hash_init_function_table@@Base+0x778>
  40de38:	cbz	x21, 40ddc0 <hash_init_function_table@@Base+0x778>
  40de3c:	ldr	x24, [x20, #24]
  40de40:	mov	x25, x21
  40de44:	b	40de70 <hash_init_function_table@@Base+0x828>
  40de48:	ldr	x0, [x20, #8]
  40de4c:	ldr	x1, [x25, #16]
  40de50:	bl	406a70 <strncmp@plt>
  40de54:	cmp	w0, #0x0
  40de58:	cset	w8, eq  // eq = none
  40de5c:	ldr	w9, [x25, #32]
  40de60:	orr	w8, w9, w8
  40de64:	str	w8, [x25, #32]
  40de68:	ldr	x25, [x25]
  40de6c:	cbz	x25, 40ddc0 <hash_init_function_table@@Base+0x778>
  40de70:	ldr	x2, [x25, #24]
  40de74:	cmp	x2, x24
  40de78:	b.eq	40de48 <hash_init_function_table@@Base+0x800>  // b.none
  40de7c:	mov	w8, wzr
  40de80:	b	40de5c <hash_init_function_table@@Base+0x814>
  40de84:	ldr	x20, [x20]
  40de88:	cbz	x20, 40ddac <hash_init_function_table@@Base+0x764>
  40de8c:	sub	x0, x29, #0x60
  40de90:	mov	x1, x20
  40de94:	bl	40fa80 <hash_insert@@Base>
  40de98:	cbz	x0, 40de84 <hash_init_function_table@@Base+0x83c>
  40de9c:	str	x0, [x20, #8]
  40dea0:	b	40de84 <hash_init_function_table@@Base+0x83c>
  40dea4:	ldr	x24, [x29, #24]
  40dea8:	cbz	x24, 40df08 <hash_init_function_table@@Base+0x8c0>
  40deac:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x40e0>
  40deb0:	mov	w21, wzr
  40deb4:	add	x20, x20, #0xeb4
  40deb8:	b	40def8 <hash_init_function_table@@Base+0x8b0>
  40debc:	cbz	w8, 40def0 <hash_init_function_table@@Base+0x8a8>
  40dec0:	ldr	x21, [x24, #16]
  40dec4:	mov	x0, x21
  40dec8:	bl	4067d0 <strlen@plt>
  40decc:	mov	x2, x0
  40ded0:	mov	x0, x19
  40ded4:	mov	x1, x21
  40ded8:	bl	409c78 <variable_buffer_output@@Base>
  40dedc:	mov	w2, #0x1                   	// #1
  40dee0:	mov	x1, x20
  40dee4:	mov	w21, #0x1                   	// #1
  40dee8:	bl	409c78 <variable_buffer_output@@Base>
  40deec:	mov	x19, x0
  40def0:	ldr	x24, [x24]
  40def4:	cbz	x24, 40df0c <hash_init_function_table@@Base+0x8c4>
  40def8:	ldr	w8, [x24, #32]
  40defc:	cbz	w22, 40debc <hash_init_function_table@@Base+0x874>
  40df00:	cbnz	w8, 40def0 <hash_init_function_table@@Base+0x8a8>
  40df04:	b	40dec0 <hash_init_function_table@@Base+0x878>
  40df08:	mov	w21, wzr
  40df0c:	sub	x8, x19, #0x1
  40df10:	cmp	w21, #0x0
  40df14:	csel	x19, x19, x8, eq  // eq = none
  40df18:	cbz	w23, 40df28 <hash_init_function_table@@Base+0x8e0>
  40df1c:	sub	x0, x29, #0x60
  40df20:	mov	w1, wzr
  40df24:	bl	40fe90 <hash_free@@Base>
  40df28:	mov	x0, x19
  40df2c:	mov	sp, x29
  40df30:	ldp	x20, x19, [sp, #64]
  40df34:	ldp	x22, x21, [sp, #48]
  40df38:	ldp	x24, x23, [sp, #32]
  40df3c:	ldr	x25, [sp, #16]
  40df40:	ldp	x29, x30, [sp], #80
  40df44:	ret
  40df48:	stp	x29, x30, [sp, #-32]!
  40df4c:	stp	x20, x19, [sp, #16]
  40df50:	ldp	x20, x8, [x1]
  40df54:	mov	x19, x0
  40df58:	mov	x29, sp
  40df5c:	mov	x0, x8
  40df60:	mov	x1, x20
  40df64:	bl	406e40 <strstr@plt>
  40df68:	cbz	x0, 40df88 <hash_init_function_table@@Base+0x940>
  40df6c:	mov	x0, x20
  40df70:	bl	4067d0 <strlen@plt>
  40df74:	mov	x2, x0
  40df78:	mov	x0, x19
  40df7c:	mov	x1, x20
  40df80:	bl	409c78 <variable_buffer_output@@Base>
  40df84:	mov	x19, x0
  40df88:	mov	x0, x19
  40df8c:	ldp	x20, x19, [sp, #16]
  40df90:	ldp	x29, x30, [sp], #32
  40df94:	ret
  40df98:	sub	sp, sp, #0x30
  40df9c:	stp	x29, x30, [sp, #16]
  40dfa0:	ldr	x8, [x1]
  40dfa4:	add	x29, sp, #0x10
  40dfa8:	str	x19, [sp, #32]
  40dfac:	mov	x19, x0
  40dfb0:	add	x0, sp, #0x8
  40dfb4:	add	x1, x29, #0x18
  40dfb8:	str	x8, [sp, #8]
  40dfbc:	bl	418158 <find_next_token@@Base>
  40dfc0:	cbz	x0, 40dfd8 <hash_init_function_table@@Base+0x990>
  40dfc4:	ldr	x2, [x29, #24]
  40dfc8:	mov	x1, x0
  40dfcc:	mov	x0, x19
  40dfd0:	bl	409c78 <variable_buffer_output@@Base>
  40dfd4:	mov	x19, x0
  40dfd8:	mov	x0, x19
  40dfdc:	ldr	x19, [sp, #32]
  40dfe0:	ldp	x29, x30, [sp, #16]
  40dfe4:	add	sp, sp, #0x30
  40dfe8:	ret
  40dfec:	stp	x29, x30, [sp, #-32]!
  40dff0:	stp	x20, x19, [sp, #16]
  40dff4:	ldr	x20, [x1]
  40dff8:	mov	x19, x0
  40dffc:	mov	x29, sp
  40e000:	mov	x0, x20
  40e004:	bl	4067d0 <strlen@plt>
  40e008:	mov	x1, x0
  40e00c:	mov	x0, x20
  40e010:	bl	421ac8 <lookup_variable@@Base>
  40e014:	cbz	x0, 40e030 <hash_init_function_table@@Base+0x9e8>
  40e018:	ldrb	w8, [x0, #44]
  40e01c:	tbnz	w8, #0, 40e03c <hash_init_function_table@@Base+0x9f4>
  40e020:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e024:	add	x1, x1, #0xda
  40e028:	mov	w2, #0x6                   	// #6
  40e02c:	b	40e048 <hash_init_function_table@@Base+0xa00>
  40e030:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e034:	add	x1, x1, #0xc6
  40e038:	b	40e044 <hash_init_function_table@@Base+0x9fc>
  40e03c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e040:	add	x1, x1, #0xd0
  40e044:	mov	w2, #0x9                   	// #9
  40e048:	mov	x0, x19
  40e04c:	bl	409c78 <variable_buffer_output@@Base>
  40e050:	ldp	x20, x19, [sp, #16]
  40e054:	ldp	x29, x30, [sp], #32
  40e058:	ret
  40e05c:	sub	sp, sp, #0x60
  40e060:	stp	x29, x30, [sp, #32]
  40e064:	stp	x22, x21, [sp, #64]
  40e068:	stp	x20, x19, [sp, #80]
  40e06c:	ldr	x8, [x1]
  40e070:	add	x29, sp, #0x20
  40e074:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x40e0>
  40e078:	str	x23, [sp, #48]
  40e07c:	str	x8, [x29, #24]
  40e080:	ldr	x8, [x1, #8]
  40e084:	mov	x19, x0
  40e088:	mov	w23, wzr
  40e08c:	add	x20, x20, #0xeb4
  40e090:	stur	x8, [x29, #-8]
  40e094:	b	40e09c <hash_init_function_table@@Base+0xa54>
  40e098:	tbz	w21, #0, 40e118 <hash_init_function_table@@Base+0xad0>
  40e09c:	add	x0, x29, #0x18
  40e0a0:	add	x1, sp, #0x10
  40e0a4:	bl	418158 <find_next_token@@Base>
  40e0a8:	mov	x21, x0
  40e0ac:	cbz	x0, 40e0c4 <hash_init_function_table@@Base+0xa7c>
  40e0b0:	ldr	x2, [sp, #16]
  40e0b4:	mov	x0, x19
  40e0b8:	mov	x1, x21
  40e0bc:	bl	409c78 <variable_buffer_output@@Base>
  40e0c0:	mov	x19, x0
  40e0c4:	sub	x0, x29, #0x8
  40e0c8:	add	x1, sp, #0x8
  40e0cc:	bl	418158 <find_next_token@@Base>
  40e0d0:	mov	x22, x0
  40e0d4:	cbz	x0, 40e0ec <hash_init_function_table@@Base+0xaa4>
  40e0d8:	ldr	x2, [sp, #8]
  40e0dc:	mov	x0, x19
  40e0e0:	mov	x1, x22
  40e0e4:	bl	409c78 <variable_buffer_output@@Base>
  40e0e8:	mov	x19, x0
  40e0ec:	orr	x8, x21, x22
  40e0f0:	cmp	x8, #0x0
  40e0f4:	cset	w21, ne  // ne = any
  40e0f8:	cbz	x8, 40e098 <hash_init_function_table@@Base+0xa50>
  40e0fc:	mov	w2, #0x1                   	// #1
  40e100:	mov	x0, x19
  40e104:	mov	x1, x20
  40e108:	mov	w23, #0x1                   	// #1
  40e10c:	bl	409c78 <variable_buffer_output@@Base>
  40e110:	mov	x19, x0
  40e114:	b	40e098 <hash_init_function_table@@Base+0xa50>
  40e118:	sub	x8, x19, #0x1
  40e11c:	cmp	w23, #0x0
  40e120:	csel	x0, x19, x8, eq  // eq = none
  40e124:	ldp	x20, x19, [sp, #80]
  40e128:	ldp	x22, x21, [sp, #64]
  40e12c:	ldr	x23, [sp, #48]
  40e130:	ldp	x29, x30, [sp, #32]
  40e134:	add	sp, sp, #0x60
  40e138:	ret
  40e13c:	sub	sp, sp, #0x30
  40e140:	stp	x29, x30, [sp, #16]
  40e144:	stp	x20, x19, [sp, #32]
  40e148:	ldr	x8, [x1]
  40e14c:	mov	x19, x0
  40e150:	mov	x0, xzr
  40e154:	add	x29, sp, #0x10
  40e158:	str	x8, [sp]
  40e15c:	mov	x20, x0
  40e160:	mov	x0, sp
  40e164:	add	x1, sp, #0x8
  40e168:	bl	418158 <find_next_token@@Base>
  40e16c:	cbnz	x0, 40e15c <hash_init_function_table@@Base+0xb14>
  40e170:	cbz	x20, 40e188 <hash_init_function_table@@Base+0xb40>
  40e174:	ldr	x2, [sp, #8]
  40e178:	mov	x0, x19
  40e17c:	mov	x1, x20
  40e180:	bl	409c78 <variable_buffer_output@@Base>
  40e184:	mov	x19, x0
  40e188:	mov	x0, x19
  40e18c:	ldp	x20, x19, [sp, #32]
  40e190:	ldp	x29, x30, [sp, #16]
  40e194:	add	sp, sp, #0x30
  40e198:	ret
  40e19c:	stp	x29, x30, [sp, #-16]!
  40e1a0:	ldp	x3, x8, [x1, #8]
  40e1a4:	ldr	x2, [x1]
  40e1a8:	mov	x29, sp
  40e1ac:	mov	x1, x8
  40e1b0:	bl	40c9c0 <patsubst_expand@@Base>
  40e1b4:	ldp	x29, x30, [sp], #16
  40e1b8:	ret
  40e1bc:	stp	x29, x30, [sp, #-64]!
  40e1c0:	stp	x28, x23, [sp, #16]
  40e1c4:	stp	x22, x21, [sp, #32]
  40e1c8:	stp	x20, x19, [sp, #48]
  40e1cc:	mov	x29, sp
  40e1d0:	sub	sp, sp, #0x2, lsl #12
  40e1d4:	sub	sp, sp, #0xa0
  40e1d8:	ldr	x8, [x1]
  40e1dc:	mov	x19, x0
  40e1e0:	sub	x0, x29, #0x8
  40e1e4:	sub	x1, x29, #0x10
  40e1e8:	stp	xzr, x8, [x29, #-16]
  40e1ec:	bl	418158 <find_next_token@@Base>
  40e1f0:	cbz	x0, 40e2c8 <hash_init_function_table@@Base+0xc80>
  40e1f4:	add	x22, sp, #0x1, lsl #12
  40e1f8:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x40e0>
  40e1fc:	mov	x1, x0
  40e200:	mov	w23, wzr
  40e204:	add	x22, x22, #0xc
  40e208:	add	x20, x20, #0xeb4
  40e20c:	b	40e224 <hash_init_function_table@@Base+0xbdc>
  40e210:	sub	x0, x29, #0x8
  40e214:	sub	x1, x29, #0x10
  40e218:	bl	418158 <find_next_token@@Base>
  40e21c:	mov	x1, x0
  40e220:	cbz	x0, 40e2cc <hash_init_function_table@@Base+0xc84>
  40e224:	ldur	x2, [x29, #-16]
  40e228:	cmp	x2, #0xfff
  40e22c:	b.hi	40e210 <hash_init_function_table@@Base+0xbc8>  // b.pmore
  40e230:	add	x0, sp, #0x1, lsl #12
  40e234:	add	x0, x0, #0xc
  40e238:	bl	406eb0 <strncpy@plt>
  40e23c:	ldur	x8, [x29, #-16]
  40e240:	strb	wzr, [x22, x8]
  40e244:	bl	406f00 <__errno_location@plt>
  40e248:	mov	x21, x0
  40e24c:	add	x0, sp, #0x1, lsl #12
  40e250:	add	x0, x0, #0xc
  40e254:	add	x1, sp, #0x8
  40e258:	str	wzr, [x21]
  40e25c:	bl	406e60 <realpath@plt>
  40e260:	cbnz	x0, 40e274 <hash_init_function_table@@Base+0xc2c>
  40e264:	ldr	w8, [x21]
  40e268:	cmp	w8, #0x4
  40e26c:	b.eq	40e24c <hash_init_function_table@@Base+0xc04>  // b.none
  40e270:	cbz	x0, 40e210 <hash_init_function_table@@Base+0xbc8>
  40e274:	add	x0, sp, #0x8
  40e278:	sub	x1, x29, #0x90
  40e27c:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  40e280:	cmn	w0, #0x1
  40e284:	b.ne	40e294 <hash_init_function_table@@Base+0xc4c>  // b.any
  40e288:	ldr	w8, [x21]
  40e28c:	cmp	w8, #0x4
  40e290:	b.eq	40e274 <hash_init_function_table@@Base+0xc2c>  // b.none
  40e294:	cbnz	w0, 40e210 <hash_init_function_table@@Base+0xbc8>
  40e298:	add	x0, sp, #0x8
  40e29c:	bl	4067d0 <strlen@plt>
  40e2a0:	mov	x2, x0
  40e2a4:	add	x1, sp, #0x8
  40e2a8:	mov	x0, x19
  40e2ac:	bl	409c78 <variable_buffer_output@@Base>
  40e2b0:	mov	w2, #0x1                   	// #1
  40e2b4:	mov	x1, x20
  40e2b8:	mov	w23, #0x1                   	// #1
  40e2bc:	bl	409c78 <variable_buffer_output@@Base>
  40e2c0:	mov	x19, x0
  40e2c4:	b	40e210 <hash_init_function_table@@Base+0xbc8>
  40e2c8:	mov	w23, wzr
  40e2cc:	sub	x8, x19, #0x1
  40e2d0:	cmp	w23, #0x0
  40e2d4:	csel	x0, x19, x8, eq  // eq = none
  40e2d8:	add	sp, sp, #0x2, lsl #12
  40e2dc:	add	sp, sp, #0xa0
  40e2e0:	ldp	x20, x19, [sp, #48]
  40e2e4:	ldp	x22, x21, [sp, #32]
  40e2e8:	ldp	x28, x23, [sp, #16]
  40e2ec:	ldp	x29, x30, [sp], #64
  40e2f0:	ret
  40e2f4:	stp	x29, x30, [sp, #-16]!
  40e2f8:	mov	w2, #0x1                   	// #1
  40e2fc:	mov	x29, sp
  40e300:	bl	40cc90 <func_shell_base@@Base>
  40e304:	ldp	x29, x30, [sp], #16
  40e308:	ret
  40e30c:	sub	sp, sp, #0x70
  40e310:	stp	x29, x30, [sp, #16]
  40e314:	stp	x26, x25, [sp, #48]
  40e318:	stp	x24, x23, [sp, #64]
  40e31c:	stp	x22, x21, [sp, #80]
  40e320:	stp	x20, x19, [sp, #96]
  40e324:	ldr	x8, [x1]
  40e328:	add	x29, sp, #0x10
  40e32c:	mov	x21, x1
  40e330:	mov	x19, x0
  40e334:	add	x0, x29, #0x18
  40e338:	mov	x1, xzr
  40e33c:	str	x27, [sp, #32]
  40e340:	str	x8, [x29, #24]
  40e344:	bl	418158 <find_next_token@@Base>
  40e348:	mov	w20, wzr
  40e34c:	cbz	x0, 40e370 <hash_init_function_table@@Base+0xd28>
  40e350:	ldr	x8, [x29, #24]
  40e354:	add	x0, x29, #0x18
  40e358:	mov	x1, xzr
  40e35c:	add	w20, w20, #0x1
  40e360:	add	x8, x8, #0x1
  40e364:	str	x8, [x29, #24]
  40e368:	bl	418158 <find_next_token@@Base>
  40e36c:	cbnz	x0, 40e350 <hash_init_function_table@@Base+0xd08>
  40e370:	cmp	w20, #0x0
  40e374:	csinc	w8, w20, wzr, ne  // ne = any
  40e378:	lsl	x0, x8, #3
  40e37c:	bl	418070 <xmalloc@@Base>
  40e380:	ldr	x8, [x21]
  40e384:	mov	x20, x0
  40e388:	add	x0, x29, #0x18
  40e38c:	add	x1, sp, #0x8
  40e390:	str	x8, [x29, #24]
  40e394:	bl	418158 <find_next_token@@Base>
  40e398:	cbz	x0, 40e3d4 <hash_init_function_table@@Base+0xd8c>
  40e39c:	mov	x22, xzr
  40e3a0:	ldr	x8, [x29, #24]
  40e3a4:	ldr	x9, [sp, #8]
  40e3a8:	add	x1, sp, #0x8
  40e3ac:	add	x8, x8, #0x1
  40e3b0:	str	x8, [x29, #24]
  40e3b4:	strb	wzr, [x0, x9]
  40e3b8:	str	x0, [x20, x22, lsl #3]
  40e3bc:	add	x0, x29, #0x18
  40e3c0:	add	x22, x22, #0x1
  40e3c4:	bl	418158 <find_next_token@@Base>
  40e3c8:	cbnz	x0, 40e3a0 <hash_init_function_table@@Base+0xd58>
  40e3cc:	cbnz	w22, 40e3dc <hash_init_function_table@@Base+0xd94>
  40e3d0:	b	40e480 <hash_init_function_table@@Base+0xe38>
  40e3d4:	mov	w22, wzr
  40e3d8:	cbz	w22, 40e480 <hash_init_function_table@@Base+0xe38>
  40e3dc:	mov	w21, w22
  40e3e0:	adrp	x3, 417000 <die@@Base+0x318>
  40e3e4:	add	x3, x3, #0xcdc
  40e3e8:	mov	w2, #0x8                   	// #8
  40e3ec:	mov	x0, x20
  40e3f0:	mov	x1, x21
  40e3f4:	bl	4068e0 <qsort@plt>
  40e3f8:	sub	w26, w22, #0x1
  40e3fc:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x40e0>
  40e400:	add	x27, x20, #0x8
  40e404:	add	x22, x22, #0xeb4
  40e408:	b	40e43c <hash_init_function_table@@Base+0xdf4>
  40e40c:	mov	x0, x19
  40e410:	mov	x1, x23
  40e414:	mov	x2, x24
  40e418:	bl	409c78 <variable_buffer_output@@Base>
  40e41c:	mov	w2, #0x1                   	// #1
  40e420:	mov	x1, x22
  40e424:	bl	409c78 <variable_buffer_output@@Base>
  40e428:	mov	x19, x0
  40e42c:	sub	x26, x26, #0x1
  40e430:	subs	x21, x21, #0x1
  40e434:	add	x27, x27, #0x8
  40e438:	b.eq	40e47c <hash_init_function_table@@Base+0xe34>  // b.none
  40e43c:	ldur	x23, [x27, #-8]
  40e440:	mov	x0, x23
  40e444:	bl	4067d0 <strlen@plt>
  40e448:	mov	x24, x0
  40e44c:	str	x0, [sp, #8]
  40e450:	cbz	x26, 40e40c <hash_init_function_table@@Base+0xdc4>
  40e454:	ldr	x25, [x27]
  40e458:	mov	x0, x25
  40e45c:	bl	4067d0 <strlen@plt>
  40e460:	cmp	x0, x24
  40e464:	b.ne	40e40c <hash_init_function_table@@Base+0xdc4>  // b.any
  40e468:	mov	x0, x23
  40e46c:	mov	x1, x25
  40e470:	bl	406cb0 <strcmp@plt>
  40e474:	cbnz	w0, 40e40c <hash_init_function_table@@Base+0xdc4>
  40e478:	b	40e42c <hash_init_function_table@@Base+0xde4>
  40e47c:	sub	x19, x19, #0x1
  40e480:	mov	x0, x20
  40e484:	bl	406cf0 <free@plt>
  40e488:	mov	x0, x19
  40e48c:	ldp	x20, x19, [sp, #96]
  40e490:	ldp	x22, x21, [sp, #80]
  40e494:	ldp	x24, x23, [sp, #64]
  40e498:	ldp	x26, x25, [sp, #48]
  40e49c:	ldr	x27, [sp, #32]
  40e4a0:	ldp	x29, x30, [sp, #16]
  40e4a4:	add	sp, sp, #0x70
  40e4a8:	ret
  40e4ac:	stp	x29, x30, [sp, #-48]!
  40e4b0:	stp	x22, x21, [sp, #16]
  40e4b4:	stp	x20, x19, [sp, #32]
  40e4b8:	ldr	x22, [x1]
  40e4bc:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  40e4c0:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x40e0>
  40e4c4:	mov	w21, wzr
  40e4c8:	add	x20, x20, #0xcf0
  40e4cc:	add	x19, x19, #0xeb4
  40e4d0:	mov	x29, sp
  40e4d4:	b	40e4dc <hash_init_function_table@@Base+0xe94>
  40e4d8:	tbz	w8, #0, 40e558 <hash_init_function_table@@Base+0xf10>
  40e4dc:	ldrb	w8, [x22]
  40e4e0:	cbz	w8, 40e558 <hash_init_function_table@@Base+0xf10>
  40e4e4:	sub	x1, x22, #0x1
  40e4e8:	ldrb	w8, [x1, #1]!
  40e4ec:	ldrh	w8, [x20, x8, lsl #1]
  40e4f0:	tst	w8, #0x6
  40e4f4:	b.ne	40e4e8 <hash_init_function_table@@Base+0xea0>  // b.any
  40e4f8:	ldrb	w9, [x1]
  40e4fc:	cbz	w9, 40e52c <hash_init_function_table@@Base+0xee4>
  40e500:	mov	w8, wzr
  40e504:	mov	x22, x1
  40e508:	and	x9, x9, #0xff
  40e50c:	ldrh	w9, [x20, x9, lsl #1]
  40e510:	tst	w9, #0x6
  40e514:	b.ne	40e524 <hash_init_function_table@@Base+0xedc>  // b.any
  40e518:	ldrb	w9, [x22, #1]!
  40e51c:	add	w8, w8, #0x1
  40e520:	cbnz	w9, 40e508 <hash_init_function_table@@Base+0xec0>
  40e524:	cbnz	w8, 40e538 <hash_init_function_table@@Base+0xef0>
  40e528:	b	40e4d8 <hash_init_function_table@@Base+0xe90>
  40e52c:	mov	w8, wzr
  40e530:	mov	x22, x1
  40e534:	cbz	w8, 40e4d8 <hash_init_function_table@@Base+0xe90>
  40e538:	mov	w2, w8
  40e53c:	bl	409c78 <variable_buffer_output@@Base>
  40e540:	mov	w2, #0x1                   	// #1
  40e544:	mov	x1, x19
  40e548:	mov	w21, #0x1                   	// #1
  40e54c:	bl	409c78 <variable_buffer_output@@Base>
  40e550:	mov	w8, #0x1                   	// #1
  40e554:	b	40e4d8 <hash_init_function_table@@Base+0xe90>
  40e558:	cmp	w21, #0x0
  40e55c:	ldp	x20, x19, [sp, #32]
  40e560:	ldp	x22, x21, [sp, #16]
  40e564:	sub	x8, x0, #0x1
  40e568:	csel	x0, x0, x8, eq  // eq = none
  40e56c:	ldp	x29, x30, [sp], #48
  40e570:	ret
  40e574:	stp	x29, x30, [sp, #-32]!
  40e578:	stp	x20, x19, [sp, #16]
  40e57c:	ldr	x8, [x1]
  40e580:	mov	x19, x0
  40e584:	mov	x29, sp
  40e588:	mov	x0, x8
  40e58c:	bl	40f754 <hash_init_function_table@@Base+0x210c>
  40e590:	mov	x20, x0
  40e594:	bl	4067d0 <strlen@plt>
  40e598:	mov	x2, x0
  40e59c:	mov	x0, x19
  40e5a0:	mov	x1, x20
  40e5a4:	bl	409c78 <variable_buffer_output@@Base>
  40e5a8:	ldp	x20, x19, [sp, #16]
  40e5ac:	ldp	x29, x30, [sp], #32
  40e5b0:	ret
  40e5b4:	stp	x29, x30, [sp, #-48]!
  40e5b8:	stp	x20, x19, [sp, #32]
  40e5bc:	ldr	x20, [x1]
  40e5c0:	str	x21, [sp, #16]
  40e5c4:	mov	x21, x1
  40e5c8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e5cc:	mov	x19, x0
  40e5d0:	add	x1, x1, #0xe1
  40e5d4:	mov	w2, #0x5                   	// #5
  40e5d8:	mov	x0, xzr
  40e5dc:	mov	x29, sp
  40e5e0:	bl	406e50 <dcgettext@plt>
  40e5e4:	mov	x1, x0
  40e5e8:	mov	x0, x20
  40e5ec:	bl	40f874 <hash_init_function_table@@Base+0x222c>
  40e5f0:	ldr	x0, [x21]
  40e5f4:	bl	4069d0 <atoi@plt>
  40e5f8:	cbz	w0, 40e650 <hash_init_function_table@@Base+0x1008>
  40e5fc:	ldr	x8, [x21, #8]
  40e600:	mov	w20, w0
  40e604:	str	x8, [x29, #24]
  40e608:	add	x0, x29, #0x18
  40e60c:	mov	x1, xzr
  40e610:	bl	418158 <find_next_token@@Base>
  40e614:	mov	x1, x0
  40e618:	cbz	x0, 40e624 <hash_init_function_table@@Base+0xfdc>
  40e61c:	subs	w20, w20, #0x1
  40e620:	b.ne	40e608 <hash_init_function_table@@Base+0xfc0>  // b.any
  40e624:	cbnz	w20, 40e63c <hash_init_function_table@@Base+0xff4>
  40e628:	ldr	x8, [x29, #24]
  40e62c:	mov	x0, x19
  40e630:	sub	x2, x8, x1
  40e634:	bl	409c78 <variable_buffer_output@@Base>
  40e638:	mov	x19, x0
  40e63c:	mov	x0, x19
  40e640:	ldp	x20, x19, [sp, #32]
  40e644:	ldr	x21, [sp, #16]
  40e648:	ldp	x29, x30, [sp], #48
  40e64c:	ret
  40e650:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40e654:	ldr	x8, [x8, #1472]
  40e658:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e65c:	add	x1, x1, #0x10f
  40e660:	mov	w2, #0x5                   	// #5
  40e664:	ldr	x19, [x8]
  40e668:	mov	x0, xzr
  40e66c:	bl	406e50 <dcgettext@plt>
  40e670:	mov	x2, x0
  40e674:	mov	x0, x19
  40e678:	mov	x1, xzr
  40e67c:	bl	4190fc <fatal@@Base>
  40e680:	stp	x29, x30, [sp, #-64]!
  40e684:	stp	x22, x21, [sp, #32]
  40e688:	stp	x20, x19, [sp, #48]
  40e68c:	ldr	x21, [x1]
  40e690:	mov	x20, x1
  40e694:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e698:	mov	x19, x0
  40e69c:	add	x1, x1, #0x151
  40e6a0:	mov	w2, #0x5                   	// #5
  40e6a4:	mov	x0, xzr
  40e6a8:	str	x23, [sp, #16]
  40e6ac:	mov	x29, sp
  40e6b0:	bl	406e50 <dcgettext@plt>
  40e6b4:	mov	x1, x0
  40e6b8:	mov	x0, x21
  40e6bc:	bl	40f874 <hash_init_function_table@@Base+0x222c>
  40e6c0:	ldr	x21, [x20, #8]
  40e6c4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e6c8:	add	x1, x1, #0x183
  40e6cc:	mov	w2, #0x5                   	// #5
  40e6d0:	mov	x0, xzr
  40e6d4:	bl	406e50 <dcgettext@plt>
  40e6d8:	mov	x1, x0
  40e6dc:	mov	x0, x21
  40e6e0:	bl	40f874 <hash_init_function_table@@Base+0x222c>
  40e6e4:	ldr	x0, [x20]
  40e6e8:	bl	4069d0 <atoi@plt>
  40e6ec:	mov	w21, w0
  40e6f0:	cmp	w0, #0x0
  40e6f4:	b.le	40e784 <hash_init_function_table@@Base+0x113c>
  40e6f8:	ldr	x0, [x20, #8]
  40e6fc:	bl	4069d0 <atoi@plt>
  40e700:	cmp	w0, w21
  40e704:	b.mi	40e76c <hash_init_function_table@@Base+0x1124>  // b.first
  40e708:	ldr	x8, [x20, #16]
  40e70c:	mov	w22, w0
  40e710:	mov	w23, w21
  40e714:	str	x8, [x29, #24]
  40e718:	add	x0, x29, #0x18
  40e71c:	mov	x1, xzr
  40e720:	bl	418158 <find_next_token@@Base>
  40e724:	cbz	x0, 40e76c <hash_init_function_table@@Base+0x1124>
  40e728:	subs	w23, w23, #0x1
  40e72c:	b.ne	40e718 <hash_init_function_table@@Base+0x10d0>  // b.any
  40e730:	mvn	w8, w22
  40e734:	mov	x20, x0
  40e738:	add	w21, w8, w21
  40e73c:	adds	w21, w21, #0x1
  40e740:	b.cs	40e754 <hash_init_function_table@@Base+0x110c>  // b.hs, b.nlast
  40e744:	add	x0, x29, #0x18
  40e748:	mov	x1, xzr
  40e74c:	bl	418158 <find_next_token@@Base>
  40e750:	cbnz	x0, 40e73c <hash_init_function_table@@Base+0x10f4>
  40e754:	ldr	x8, [x29, #24]
  40e758:	mov	x0, x19
  40e75c:	mov	x1, x20
  40e760:	sub	x2, x8, x20
  40e764:	bl	409c78 <variable_buffer_output@@Base>
  40e768:	mov	x19, x0
  40e76c:	mov	x0, x19
  40e770:	ldp	x20, x19, [sp, #48]
  40e774:	ldp	x22, x21, [sp, #32]
  40e778:	ldr	x23, [sp, #16]
  40e77c:	ldp	x29, x30, [sp], #64
  40e780:	ret
  40e784:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40e788:	ldr	x8, [x8, #1472]
  40e78c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e790:	add	x2, x2, #0x1b6
  40e794:	mov	w1, #0x14                  	// #20
  40e798:	ldr	x0, [x8]
  40e79c:	mov	w3, w21
  40e7a0:	bl	4190fc <fatal@@Base>
  40e7a4:	sub	sp, sp, #0x40
  40e7a8:	stp	x29, x30, [sp, #32]
  40e7ac:	stp	x20, x19, [sp, #48]
  40e7b0:	ldr	x8, [x1]
  40e7b4:	add	x29, sp, #0x20
  40e7b8:	mov	x19, x0
  40e7bc:	mov	w20, #0xffffffff            	// #-1
  40e7c0:	stur	x8, [x29, #-8]
  40e7c4:	sub	x0, x29, #0x8
  40e7c8:	mov	x1, xzr
  40e7cc:	bl	418158 <find_next_token@@Base>
  40e7d0:	add	w20, w20, #0x1
  40e7d4:	cbnz	x0, 40e7c4 <hash_init_function_table@@Base+0x117c>
  40e7d8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40e7dc:	add	x1, x1, #0xfbc
  40e7e0:	add	x0, sp, #0x4
  40e7e4:	mov	w2, w20
  40e7e8:	bl	406870 <sprintf@plt>
  40e7ec:	add	x0, sp, #0x4
  40e7f0:	bl	4067d0 <strlen@plt>
  40e7f4:	mov	x2, x0
  40e7f8:	add	x1, sp, #0x4
  40e7fc:	mov	x0, x19
  40e800:	bl	409c78 <variable_buffer_output@@Base>
  40e804:	ldp	x20, x19, [sp, #48]
  40e808:	ldp	x29, x30, [sp, #32]
  40e80c:	add	sp, sp, #0x40
  40e810:	ret
  40e814:	stp	x29, x30, [sp, #-32]!
  40e818:	stp	x20, x19, [sp, #16]
  40e81c:	ldr	x20, [x1]
  40e820:	mov	x19, x0
  40e824:	mov	x29, sp
  40e828:	mov	x0, x20
  40e82c:	bl	4067d0 <strlen@plt>
  40e830:	mov	x1, x0
  40e834:	mov	x0, x20
  40e838:	bl	421ac8 <lookup_variable@@Base>
  40e83c:	cbz	x0, 40e870 <hash_init_function_table@@Base+0x1228>
  40e840:	ldr	w8, [x0, #44]
  40e844:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x10e0>
  40e848:	add	x9, x9, #0xe6c
  40e84c:	ubfx	w8, w8, #26, #3
  40e850:	adr	x10, 40e860 <hash_init_function_table@@Base+0x1218>
  40e854:	ldrb	w11, [x9, x8]
  40e858:	add	x10, x10, x11, lsl #2
  40e85c:	br	x10
  40e860:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e864:	add	x1, x1, #0x1ea
  40e868:	mov	w2, #0x7                   	// #7
  40e86c:	b	40e87c <hash_init_function_table@@Base+0x1234>
  40e870:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e874:	add	x1, x1, #0xc6
  40e878:	mov	w2, #0x9                   	// #9
  40e87c:	mov	x0, x19
  40e880:	bl	409c78 <variable_buffer_output@@Base>
  40e884:	ldp	x20, x19, [sp, #16]
  40e888:	ldp	x29, x30, [sp], #32
  40e88c:	ret
  40e890:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e894:	add	x1, x1, #0x213
  40e898:	mov	w2, #0xc                   	// #12
  40e89c:	b	40e87c <hash_init_function_table@@Base+0x1234>
  40e8a0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  40e8a4:	add	x1, x1, #0xc6f
  40e8a8:	mov	w2, #0x4                   	// #4
  40e8ac:	b	40e87c <hash_init_function_table@@Base+0x1234>
  40e8b0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e8b4:	add	x1, x1, #0x1fe
  40e8b8:	mov	w2, #0x14                  	// #20
  40e8bc:	b	40e87c <hash_init_function_table@@Base+0x1234>
  40e8c0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e8c4:	add	x1, x1, #0x1f2
  40e8c8:	mov	w2, #0xb                   	// #11
  40e8cc:	b	40e87c <hash_init_function_table@@Base+0x1234>
  40e8d0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e8d4:	add	x1, x1, #0x20a
  40e8d8:	mov	w2, #0x8                   	// #8
  40e8dc:	b	40e87c <hash_init_function_table@@Base+0x1234>
  40e8e0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e8e4:	add	x1, x1, #0x220
  40e8e8:	b	40e878 <hash_init_function_table@@Base+0x1230>
  40e8ec:	bl	406c10 <abort@plt>
  40e8f0:	sub	sp, sp, #0x60
  40e8f4:	stp	x29, x30, [sp, #16]
  40e8f8:	stp	x24, x23, [sp, #48]
  40e8fc:	stp	x22, x21, [sp, #64]
  40e900:	stp	x20, x19, [sp, #80]
  40e904:	ldr	x8, [x1]
  40e908:	mov	x20, x1
  40e90c:	mov	x21, x0
  40e910:	mov	x1, xzr
  40e914:	mov	x0, x8
  40e918:	str	x25, [sp, #32]
  40e91c:	add	x29, sp, #0x10
  40e920:	bl	40a3c8 <expand_argument@@Base>
  40e924:	ldr	x8, [x20, #8]
  40e928:	mov	x19, x0
  40e92c:	mov	x1, xzr
  40e930:	mov	x0, x8
  40e934:	bl	40a3c8 <expand_argument@@Base>
  40e938:	ldr	x22, [x20, #16]
  40e93c:	mov	x20, x0
  40e940:	str	x0, [x29, #24]
  40e944:	mov	x0, x19
  40e948:	bl	418138 <next_token@@Base>
  40e94c:	mov	x23, x0
  40e950:	bl	418118 <end_of_token@@Base>
  40e954:	strb	wzr, [x0]
  40e958:	bl	422360 <push_new_variable_scope@@Base>
  40e95c:	mov	x0, x23
  40e960:	bl	4067d0 <strlen@plt>
  40e964:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40e968:	ldr	x8, [x8, #2440]
  40e96c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  40e970:	mov	x1, x0
  40e974:	add	x2, x2, #0x989
  40e978:	ldr	x5, [x8, #8]
  40e97c:	mov	w3, #0x6                   	// #6
  40e980:	mov	x0, x23
  40e984:	mov	w4, wzr
  40e988:	mov	x6, xzr
  40e98c:	bl	421720 <define_variable_in_set@@Base>
  40e990:	mov	x23, x0
  40e994:	add	x0, x29, #0x18
  40e998:	add	x1, sp, #0x8
  40e99c:	bl	418158 <find_next_token@@Base>
  40e9a0:	cbz	x0, 40ea20 <hash_init_function_table@@Base+0x13d8>
  40e9a4:	adrp	x24, 429000 <_IO_stdin_used@@Base+0x40e0>
  40e9a8:	mov	x25, x0
  40e9ac:	add	x24, x24, #0xeb4
  40e9b0:	ldr	x0, [x23, #8]
  40e9b4:	bl	406cf0 <free@plt>
  40e9b8:	ldr	x1, [sp, #8]
  40e9bc:	mov	x0, x25
  40e9c0:	bl	4180d8 <xstrndup@@Base>
  40e9c4:	str	x0, [x23, #8]
  40e9c8:	mov	x0, x22
  40e9cc:	mov	x1, xzr
  40e9d0:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  40e9d4:	mov	x25, x0
  40e9d8:	bl	4067d0 <strlen@plt>
  40e9dc:	mov	x2, x0
  40e9e0:	mov	x0, x21
  40e9e4:	mov	x1, x25
  40e9e8:	bl	409c78 <variable_buffer_output@@Base>
  40e9ec:	mov	w2, #0x1                   	// #1
  40e9f0:	mov	x1, x24
  40e9f4:	bl	409c78 <variable_buffer_output@@Base>
  40e9f8:	mov	x21, x0
  40e9fc:	mov	x0, x25
  40ea00:	bl	406cf0 <free@plt>
  40ea04:	add	x0, x29, #0x18
  40ea08:	add	x1, sp, #0x8
  40ea0c:	bl	418158 <find_next_token@@Base>
  40ea10:	mov	x25, x0
  40ea14:	cbnz	x0, 40e9b0 <hash_init_function_table@@Base+0x1368>
  40ea18:	mov	w8, wzr
  40ea1c:	b	40ea24 <hash_init_function_table@@Base+0x13dc>
  40ea20:	mov	w8, #0x1                   	// #1
  40ea24:	sub	x9, x21, #0x1
  40ea28:	cmp	w8, #0x0
  40ea2c:	csel	x21, x21, x9, ne  // ne = any
  40ea30:	bl	4223bc <pop_variable_scope@@Base>
  40ea34:	mov	x0, x19
  40ea38:	bl	406cf0 <free@plt>
  40ea3c:	mov	x0, x20
  40ea40:	bl	406cf0 <free@plt>
  40ea44:	mov	x0, x21
  40ea48:	ldp	x20, x19, [sp, #80]
  40ea4c:	ldp	x22, x21, [sp, #64]
  40ea50:	ldp	x24, x23, [sp, #48]
  40ea54:	ldr	x25, [sp, #32]
  40ea58:	ldp	x29, x30, [sp, #16]
  40ea5c:	add	sp, sp, #0x60
  40ea60:	ret
  40ea64:	stp	x29, x30, [sp, #-96]!
  40ea68:	stp	x28, x27, [sp, #16]
  40ea6c:	stp	x26, x25, [sp, #32]
  40ea70:	stp	x24, x23, [sp, #48]
  40ea74:	stp	x22, x21, [sp, #64]
  40ea78:	stp	x20, x19, [sp, #80]
  40ea7c:	mov	x29, sp
  40ea80:	sub	sp, sp, #0x10
  40ea84:	ldr	x8, [x1]
  40ea88:	mov	x19, x0
  40ea8c:	mov	x21, x1
  40ea90:	mov	x0, x8
  40ea94:	bl	418138 <next_token@@Base>
  40ea98:	mov	x23, x0
  40ea9c:	bl	418118 <end_of_token@@Base>
  40eaa0:	strb	wzr, [x0]
  40eaa4:	ldrb	w8, [x23]
  40eaa8:	cbz	w8, 40eae0 <hash_init_function_table@@Base+0x1498>
  40eaac:	mov	x0, x23
  40eab0:	bl	40d274 <handle_function@@Base+0x2b0>
  40eab4:	cbz	x0, 40eb04 <hash_init_function_table@@Base+0x14bc>
  40eab8:	mov	x3, x0
  40eabc:	add	x8, x21, #0x8
  40eac0:	mov	w1, #0xffffffff            	// #-1
  40eac4:	ldr	x9, [x8], #8
  40eac8:	add	w1, w1, #0x1
  40eacc:	cbnz	x9, 40eac4 <hash_init_function_table@@Base+0x147c>
  40ead0:	add	x2, x21, #0x8
  40ead4:	mov	x0, x19
  40ead8:	bl	40d35c <handle_function@@Base+0x398>
  40eadc:	mov	x19, x0
  40eae0:	mov	x0, x19
  40eae4:	mov	sp, x29
  40eae8:	ldp	x20, x19, [sp, #80]
  40eaec:	ldp	x22, x21, [sp, #64]
  40eaf0:	ldp	x24, x23, [sp, #48]
  40eaf4:	ldp	x26, x25, [sp, #32]
  40eaf8:	ldp	x28, x27, [sp, #16]
  40eafc:	ldp	x29, x30, [sp], #96
  40eb00:	ret
  40eb04:	mov	x0, x23
  40eb08:	bl	4067d0 <strlen@plt>
  40eb0c:	mov	x24, x0
  40eb10:	mov	x0, x23
  40eb14:	mov	x1, x24
  40eb18:	bl	421ac8 <lookup_variable@@Base>
  40eb1c:	mov	x20, x0
  40eb20:	cbnz	x0, 40eb64 <hash_init_function_table@@Base+0x151c>
  40eb24:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40eb28:	ldr	w8, [x8, #96]
  40eb2c:	cbz	w8, 40eb64 <hash_init_function_table@@Base+0x151c>
  40eb30:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40eb34:	ldr	x22, [x8, #1552]
  40eb38:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  40eb3c:	add	x1, x1, #0x89f
  40eb40:	mov	w2, #0x5                   	// #5
  40eb44:	mov	x0, xzr
  40eb48:	bl	406e50 <dcgettext@plt>
  40eb4c:	mov	x2, x0
  40eb50:	mov	x0, x22
  40eb54:	mov	x1, x24
  40eb58:	mov	w3, w24
  40eb5c:	mov	x4, x23
  40eb60:	bl	418f84 <error@@Base>
  40eb64:	cbz	x20, 40eae0 <hash_init_function_table@@Base+0x1498>
  40eb68:	ldr	x8, [x20, #8]
  40eb6c:	ldrb	w8, [x8]
  40eb70:	cbz	w8, 40eae0 <hash_init_function_table@@Base+0x1498>
  40eb74:	add	x9, x24, #0x13
  40eb78:	mov	x8, sp
  40eb7c:	and	x9, x9, #0xfffffffffffffff0
  40eb80:	sub	x22, x8, x9
  40eb84:	mov	sp, x22
  40eb88:	mov	w8, #0x2824                	// #10276
  40eb8c:	mov	x0, x22
  40eb90:	strh	w8, [x0], #2
  40eb94:	mov	x1, x23
  40eb98:	mov	x2, x24
  40eb9c:	bl	406790 <memcpy@plt>
  40eba0:	add	x8, x24, x22
  40eba4:	mov	w9, #0x29                  	// #41
  40eba8:	strh	w9, [x8, #2]
  40ebac:	add	x23, x24, #0x3
  40ebb0:	bl	422360 <push_new_variable_scope@@Base>
  40ebb4:	ldr	x8, [x21]
  40ebb8:	cbz	x8, 40ec1c <hash_init_function_table@@Base+0x15d4>
  40ebbc:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40ebc0:	mov	x24, xzr
  40ebc4:	add	x25, x25, #0xfbc
  40ebc8:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  40ebcc:	sub	x0, x29, #0xc
  40ebd0:	mov	x1, x25
  40ebd4:	mov	w2, w24
  40ebd8:	add	x27, x21, x24, lsl #3
  40ebdc:	bl	406870 <sprintf@plt>
  40ebe0:	sub	x0, x29, #0xc
  40ebe4:	bl	4067d0 <strlen@plt>
  40ebe8:	ldr	x8, [x26, #2440]
  40ebec:	ldr	x2, [x27]
  40ebf0:	mov	x1, x0
  40ebf4:	sub	x0, x29, #0xc
  40ebf8:	ldr	x5, [x8, #8]
  40ebfc:	mov	w3, #0x6                   	// #6
  40ec00:	mov	w4, wzr
  40ec04:	mov	x6, xzr
  40ec08:	bl	421720 <define_variable_in_set@@Base>
  40ec0c:	ldr	x8, [x27, #8]
  40ec10:	add	x24, x24, #0x1
  40ec14:	cbnz	x8, 40ebcc <hash_init_function_table@@Base+0x1584>
  40ec18:	b	40ec20 <hash_init_function_table@@Base+0x15d8>
  40ec1c:	mov	w24, wzr
  40ec20:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  40ec24:	ldr	w28, [x26, #3032]
  40ec28:	cmp	w24, w28
  40ec2c:	b.ge	40ec90 <hash_init_function_table@@Base+0x1648>  // b.tcont
  40ec30:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x50e0>
  40ec34:	adrp	x25, 427000 <_IO_stdin_used@@Base+0x20e0>
  40ec38:	add	x21, x21, #0xfbc
  40ec3c:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  40ec40:	add	x25, x25, #0x989
  40ec44:	sub	x0, x29, #0xc
  40ec48:	mov	x1, x21
  40ec4c:	mov	w2, w24
  40ec50:	bl	406870 <sprintf@plt>
  40ec54:	sub	x0, x29, #0xc
  40ec58:	bl	4067d0 <strlen@plt>
  40ec5c:	ldr	x8, [x27, #2440]
  40ec60:	mov	x1, x0
  40ec64:	sub	x0, x29, #0xc
  40ec68:	mov	w3, #0x6                   	// #6
  40ec6c:	ldr	x5, [x8, #8]
  40ec70:	mov	x2, x25
  40ec74:	mov	w4, wzr
  40ec78:	mov	x6, xzr
  40ec7c:	bl	421720 <define_variable_in_set@@Base>
  40ec80:	ldr	w28, [x26, #3032]
  40ec84:	add	w24, w24, #0x1
  40ec88:	cmp	w24, w28
  40ec8c:	b.lt	40ec44 <hash_init_function_table@@Base+0x15fc>  // b.tstop
  40ec90:	ldr	w8, [x20, #44]
  40ec94:	mov	x0, x19
  40ec98:	mov	x1, x22
  40ec9c:	mov	x2, x23
  40eca0:	orr	w8, w8, #0x7fff00
  40eca4:	str	w8, [x20, #44]
  40eca8:	str	w24, [x26, #3032]
  40ecac:	bl	409f10 <variable_expand_string@@Base>
  40ecb0:	str	w28, [x26, #3032]
  40ecb4:	ldr	w8, [x20, #44]
  40ecb8:	mov	x19, x0
  40ecbc:	and	w8, w8, #0xff8000ff
  40ecc0:	str	w8, [x20, #44]
  40ecc4:	bl	4223bc <pop_variable_scope@@Base>
  40ecc8:	mov	x0, x19
  40eccc:	bl	4067d0 <strlen@plt>
  40ecd0:	add	x19, x19, x0
  40ecd4:	b	40eae0 <hash_init_function_table@@Base+0x1498>
  40ecd8:	stp	x29, x30, [sp, #-80]!
  40ecdc:	stp	x24, x23, [sp, #32]
  40ece0:	stp	x22, x21, [sp, #48]
  40ece4:	stp	x20, x19, [sp, #64]
  40ece8:	ldr	x8, [x1]
  40ecec:	mov	x20, x2
  40ecf0:	mov	x22, x1
  40ecf4:	mov	x19, x0
  40ecf8:	str	x25, [sp, #16]
  40ecfc:	mov	x29, sp
  40ed00:	cbz	x8, 40ed2c <hash_init_function_table@@Base+0x16e4>
  40ed04:	mov	x21, xzr
  40ed08:	add	x23, x22, #0x8
  40ed0c:	mov	x0, x8
  40ed10:	bl	4067d0 <strlen@plt>
  40ed14:	ldr	x8, [x23], #8
  40ed18:	add	x9, x21, x0
  40ed1c:	add	x21, x9, #0x2
  40ed20:	cbnz	x8, 40ed0c <hash_init_function_table@@Base+0x16c4>
  40ed24:	add	x8, x21, #0x1
  40ed28:	b	40ed30 <hash_init_function_table@@Base+0x16e8>
  40ed2c:	mov	w8, #0x1                   	// #1
  40ed30:	add	x8, x8, #0xf
  40ed34:	mov	x9, sp
  40ed38:	and	x8, x8, #0xfffffffffffffff0
  40ed3c:	sub	x21, x9, x8
  40ed40:	mov	sp, x21
  40ed44:	strb	wzr, [x21]
  40ed48:	ldp	x1, x23, [x22]
  40ed4c:	mov	x0, x21
  40ed50:	bl	406d90 <strcpy@plt>
  40ed54:	cbz	x23, 40ed88 <hash_init_function_table@@Base+0x1740>
  40ed58:	add	x23, x22, #0x10
  40ed5c:	mov	w24, #0x202c                	// #8236
  40ed60:	mov	x22, x21
  40ed64:	ldur	x0, [x23, #-16]
  40ed68:	bl	4067d0 <strlen@plt>
  40ed6c:	add	x22, x22, x0
  40ed70:	strh	w24, [x22], #2
  40ed74:	ldp	x1, x25, [x23, #-8]
  40ed78:	mov	x0, x22
  40ed7c:	bl	406d90 <strcpy@plt>
  40ed80:	add	x23, x23, #0x8
  40ed84:	cbnz	x25, 40ed64 <hash_init_function_table@@Base+0x171c>
  40ed88:	ldrb	w8, [x20]
  40ed8c:	cmp	w8, #0x69
  40ed90:	b.eq	40edc8 <hash_init_function_table@@Base+0x1780>  // b.none
  40ed94:	cmp	w8, #0x77
  40ed98:	b.ne	40ee04 <hash_init_function_table@@Base+0x17bc>  // b.any
  40ed9c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40eda0:	ldr	x20, [x8, #1552]
  40eda4:	mov	x0, x21
  40eda8:	bl	4067d0 <strlen@plt>
  40edac:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  40edb0:	mov	x1, x0
  40edb4:	add	x2, x2, #0xb96
  40edb8:	mov	x0, x20
  40edbc:	mov	x3, x21
  40edc0:	bl	418f84 <error@@Base>
  40edc4:	b	40ede4 <hash_init_function_table@@Base+0x179c>
  40edc8:	mov	w0, wzr
  40edcc:	mov	x1, x21
  40edd0:	bl	418d10 <outputs@@Base>
  40edd4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40edd8:	add	x1, x1, #0x988
  40eddc:	mov	w0, wzr
  40ede0:	bl	418d10 <outputs@@Base>
  40ede4:	mov	x0, x19
  40ede8:	mov	sp, x29
  40edec:	ldp	x20, x19, [sp, #64]
  40edf0:	ldp	x22, x21, [sp, #48]
  40edf4:	ldp	x24, x23, [sp, #32]
  40edf8:	ldr	x25, [sp, #16]
  40edfc:	ldp	x29, x30, [sp], #80
  40ee00:	ret
  40ee04:	cmp	w8, #0x65
  40ee08:	b.ne	40ee34 <hash_init_function_table@@Base+0x17ec>  // b.any
  40ee0c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40ee10:	ldr	x19, [x8, #1552]
  40ee14:	mov	x0, x21
  40ee18:	bl	4067d0 <strlen@plt>
  40ee1c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  40ee20:	mov	x1, x0
  40ee24:	add	x2, x2, #0xb96
  40ee28:	mov	x0, x19
  40ee2c:	mov	x3, x21
  40ee30:	bl	4190fc <fatal@@Base>
  40ee34:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40ee38:	ldr	x8, [x8, #1472]
  40ee3c:	mov	x0, x20
  40ee40:	ldr	x19, [x8]
  40ee44:	bl	4067d0 <strlen@plt>
  40ee48:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  40ee4c:	mov	x1, x0
  40ee50:	add	x2, x2, #0x22a
  40ee54:	mov	x0, x19
  40ee58:	mov	x3, x20
  40ee5c:	bl	4190fc <fatal@@Base>
  40ee60:	sub	sp, sp, #0x40
  40ee64:	stp	x29, x30, [sp, #16]
  40ee68:	stp	x20, x19, [sp, #48]
  40ee6c:	str	x21, [sp, #32]
  40ee70:	ldr	x21, [x1]
  40ee74:	add	x29, sp, #0x10
  40ee78:	mov	x19, x0
  40ee7c:	mov	x20, x1
  40ee80:	mov	x0, x21
  40ee84:	str	x21, [x29, #24]
  40ee88:	bl	4067d0 <strlen@plt>
  40ee8c:	add	x8, x21, x0
  40ee90:	sub	x8, x8, #0x1
  40ee94:	add	x0, x29, #0x18
  40ee98:	add	x1, sp, #0x8
  40ee9c:	str	x8, [sp, #8]
  40eea0:	bl	40cb70 <strip_whitespace@@Base>
  40eea4:	ldr	x0, [x29, #24]
  40eea8:	ldr	x8, [sp, #8]
  40eeac:	cmp	x0, x8
  40eeb0:	b.ls	40eec4 <hash_init_function_table@@Base+0x187c>  // b.plast
  40eeb4:	mov	w8, #0x2                   	// #2
  40eeb8:	ldr	x0, [x20, x8, lsl #3]
  40eebc:	cbnz	x0, 40eee8 <hash_init_function_table@@Base+0x18a0>
  40eec0:	b	40ef14 <hash_init_function_table@@Base+0x18cc>
  40eec4:	add	x1, x8, #0x1
  40eec8:	bl	40a3c8 <expand_argument@@Base>
  40eecc:	ldrb	w21, [x0]
  40eed0:	bl	406cf0 <free@plt>
  40eed4:	cmp	w21, #0x0
  40eed8:	mov	w8, #0x1                   	// #1
  40eedc:	cinc	x8, x8, eq  // eq = none
  40eee0:	ldr	x0, [x20, x8, lsl #3]
  40eee4:	cbz	x0, 40ef14 <hash_init_function_table@@Base+0x18cc>
  40eee8:	mov	x1, xzr
  40eeec:	bl	40a3c8 <expand_argument@@Base>
  40eef0:	mov	x20, x0
  40eef4:	bl	4067d0 <strlen@plt>
  40eef8:	mov	x2, x0
  40eefc:	mov	x0, x19
  40ef00:	mov	x1, x20
  40ef04:	bl	409c78 <variable_buffer_output@@Base>
  40ef08:	mov	x19, x0
  40ef0c:	mov	x0, x20
  40ef10:	bl	406cf0 <free@plt>
  40ef14:	mov	x0, x19
  40ef18:	ldp	x20, x19, [sp, #48]
  40ef1c:	ldr	x21, [sp, #32]
  40ef20:	ldp	x29, x30, [sp, #16]
  40ef24:	add	sp, sp, #0x40
  40ef28:	ret
  40ef2c:	sub	sp, sp, #0x40
  40ef30:	stp	x29, x30, [sp, #16]
  40ef34:	stp	x22, x21, [sp, #32]
  40ef38:	stp	x20, x19, [sp, #48]
  40ef3c:	ldr	x8, [x1]
  40ef40:	mov	x19, x0
  40ef44:	add	x29, sp, #0x10
  40ef48:	cbz	x8, 40efd8 <hash_init_function_table@@Base+0x1990>
  40ef4c:	add	x21, x1, #0x8
  40ef50:	ldur	x20, [x21, #-8]
  40ef54:	mov	x0, x20
  40ef58:	str	x20, [sp, #8]
  40ef5c:	bl	4067d0 <strlen@plt>
  40ef60:	add	x8, x20, x0
  40ef64:	sub	x8, x8, #0x1
  40ef68:	add	x0, sp, #0x8
  40ef6c:	mov	x1, sp
  40ef70:	str	x8, [sp]
  40ef74:	bl	40cb70 <strip_whitespace@@Base>
  40ef78:	ldp	x8, x0, [sp]
  40ef7c:	cmp	x0, x8
  40ef80:	b.ls	40ef90 <hash_init_function_table@@Base+0x1948>  // b.plast
  40ef84:	mov	w22, #0x1                   	// #1
  40ef88:	tbnz	w22, #0, 40efd0 <hash_init_function_table@@Base+0x1988>
  40ef8c:	b	40efd8 <hash_init_function_table@@Base+0x1990>
  40ef90:	add	x1, x8, #0x1
  40ef94:	bl	40a3c8 <expand_argument@@Base>
  40ef98:	mov	x20, x0
  40ef9c:	bl	4067d0 <strlen@plt>
  40efa0:	cbz	x0, 40efc0 <hash_init_function_table@@Base+0x1978>
  40efa4:	mov	x2, x0
  40efa8:	mov	x0, x19
  40efac:	mov	x1, x20
  40efb0:	bl	409c78 <variable_buffer_output@@Base>
  40efb4:	mov	x19, x0
  40efb8:	mov	w22, wzr
  40efbc:	b	40efc4 <hash_init_function_table@@Base+0x197c>
  40efc0:	mov	w22, #0x1                   	// #1
  40efc4:	mov	x0, x20
  40efc8:	bl	406cf0 <free@plt>
  40efcc:	tbz	w22, #0, 40efd8 <hash_init_function_table@@Base+0x1990>
  40efd0:	ldr	x8, [x21], #8
  40efd4:	cbnz	x8, 40ef50 <hash_init_function_table@@Base+0x1908>
  40efd8:	mov	x0, x19
  40efdc:	ldp	x20, x19, [sp, #48]
  40efe0:	ldp	x22, x21, [sp, #32]
  40efe4:	ldp	x29, x30, [sp, #16]
  40efe8:	add	sp, sp, #0x40
  40efec:	ret
  40eff0:	sub	sp, sp, #0x50
  40eff4:	stp	x20, x19, [sp, #64]
  40eff8:	mov	x20, x1
  40effc:	mov	x19, x0
  40f000:	stp	x29, x30, [sp, #16]
  40f004:	str	x23, [sp, #32]
  40f008:	stp	x22, x21, [sp, #48]
  40f00c:	add	x29, sp, #0x10
  40f010:	b	40f020 <hash_init_function_table@@Base+0x19d8>
  40f014:	mov	w8, #0x1                   	// #1
  40f018:	mov	x22, x19
  40f01c:	cbnz	w8, 40f0a0 <hash_init_function_table@@Base+0x1a58>
  40f020:	ldr	x23, [x20]
  40f024:	str	x23, [x29, #24]
  40f028:	ldr	x0, [x20]
  40f02c:	bl	4067d0 <strlen@plt>
  40f030:	add	x8, x23, x0
  40f034:	sub	x8, x8, #0x1
  40f038:	add	x0, x29, #0x18
  40f03c:	add	x1, sp, #0x8
  40f040:	str	x8, [sp, #8]
  40f044:	bl	40cb70 <strip_whitespace@@Base>
  40f048:	ldr	x0, [x29, #24]
  40f04c:	ldr	x8, [sp, #8]
  40f050:	cmp	x0, x8
  40f054:	b.hi	40f014 <hash_init_function_table@@Base+0x19cc>  // b.pmore
  40f058:	add	x1, x8, #0x1
  40f05c:	bl	40a3c8 <expand_argument@@Base>
  40f060:	mov	x21, x0
  40f064:	bl	4067d0 <strlen@plt>
  40f068:	cbz	x0, 40f098 <hash_init_function_table@@Base+0x1a50>
  40f06c:	ldr	x8, [x20, #8]!
  40f070:	cbz	x8, 40f084 <hash_init_function_table@@Base+0x1a3c>
  40f074:	mov	x0, x21
  40f078:	bl	406cf0 <free@plt>
  40f07c:	mov	w8, wzr
  40f080:	b	40f01c <hash_init_function_table@@Base+0x19d4>
  40f084:	mov	x2, x0
  40f088:	mov	x0, x19
  40f08c:	mov	x1, x21
  40f090:	bl	409c78 <variable_buffer_output@@Base>
  40f094:	mov	x19, x0
  40f098:	mov	w8, #0x3                   	// #3
  40f09c:	b	40f01c <hash_init_function_table@@Base+0x19d4>
  40f0a0:	cmp	w8, #0x3
  40f0a4:	b.ne	40f0b4 <hash_init_function_table@@Base+0x1a6c>  // b.any
  40f0a8:	mov	x0, x21
  40f0ac:	bl	406cf0 <free@plt>
  40f0b0:	b	40f0b8 <hash_init_function_table@@Base+0x1a70>
  40f0b4:	mov	x19, x22
  40f0b8:	mov	x0, x19
  40f0bc:	ldp	x20, x19, [sp, #64]
  40f0c0:	ldp	x22, x21, [sp, #48]
  40f0c4:	ldr	x23, [sp, #32]
  40f0c8:	ldp	x29, x30, [sp, #16]
  40f0cc:	add	sp, sp, #0x50
  40f0d0:	ret
  40f0d4:	stp	x29, x30, [sp, #-32]!
  40f0d8:	stp	x20, x19, [sp, #16]
  40f0dc:	ldr	x20, [x1]
  40f0e0:	mov	x19, x0
  40f0e4:	mov	x29, sp
  40f0e8:	mov	x0, x20
  40f0ec:	bl	4067d0 <strlen@plt>
  40f0f0:	mov	x1, x0
  40f0f4:	mov	x0, x20
  40f0f8:	bl	421ac8 <lookup_variable@@Base>
  40f0fc:	cbz	x0, 40f120 <hash_init_function_table@@Base+0x1ad8>
  40f100:	ldr	x20, [x0, #8]
  40f104:	mov	x0, x20
  40f108:	bl	4067d0 <strlen@plt>
  40f10c:	mov	x2, x0
  40f110:	mov	x0, x19
  40f114:	mov	x1, x20
  40f118:	bl	409c78 <variable_buffer_output@@Base>
  40f11c:	mov	x19, x0
  40f120:	mov	x0, x19
  40f124:	ldp	x20, x19, [sp, #16]
  40f128:	ldp	x29, x30, [sp], #32
  40f12c:	ret
  40f130:	sub	sp, sp, #0x30
  40f134:	stp	x20, x19, [sp, #32]
  40f138:	mov	x19, x1
  40f13c:	mov	x20, x0
  40f140:	add	x0, sp, #0x8
  40f144:	mov	x1, sp
  40f148:	stp	x29, x30, [sp, #16]
  40f14c:	add	x29, sp, #0x10
  40f150:	bl	40a604 <install_variable_buffer@@Base>
  40f154:	ldr	x0, [x19]
  40f158:	mov	x1, xzr
  40f15c:	bl	419a18 <eval_buffer@@Base>
  40f160:	ldp	x1, x0, [sp]
  40f164:	bl	40a634 <restore_variable_buffer@@Base>
  40f168:	mov	x0, x20
  40f16c:	ldp	x20, x19, [sp, #32]
  40f170:	ldp	x29, x30, [sp, #16]
  40f174:	add	sp, sp, #0x30
  40f178:	ret
  40f17c:	stp	x29, x30, [sp, #-80]!
  40f180:	str	x28, [sp, #16]
  40f184:	stp	x24, x23, [sp, #32]
  40f188:	stp	x22, x21, [sp, #48]
  40f18c:	stp	x20, x19, [sp, #64]
  40f190:	mov	x29, sp
  40f194:	sub	sp, sp, #0x400
  40f198:	ldr	x20, [x1]
  40f19c:	mov	x22, x1
  40f1a0:	mov	x19, x0
  40f1a4:	ldrb	w8, [x20]
  40f1a8:	cmp	w8, #0x3e
  40f1ac:	b.eq	40f218 <hash_init_function_table@@Base+0x1bd0>  // b.none
  40f1b0:	cmp	w8, #0x3c
  40f1b4:	b.ne	40f45c <hash_init_function_table@@Base+0x1e14>  // b.any
  40f1b8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40f1bc:	add	x8, x8, #0xcf0
  40f1c0:	ldrb	w9, [x20, #1]!
  40f1c4:	ldrh	w10, [x8, x9, lsl #1]
  40f1c8:	tst	w10, #0x6
  40f1cc:	b.ne	40f1c0 <hash_init_function_table@@Base+0x1b78>  // b.any
  40f1d0:	cbz	w9, 40f49c <hash_init_function_table@@Base+0x1e54>
  40f1d4:	ldr	x8, [x22, #8]
  40f1d8:	cbnz	x8, 40f4e4 <hash_init_function_table@@Base+0x1e9c>
  40f1dc:	bl	406f00 <__errno_location@plt>
  40f1e0:	adrp	x22, 425000 <_IO_stdin_used@@Base+0xe0>
  40f1e4:	mov	x21, x0
  40f1e8:	add	x22, x22, #0xd0a
  40f1ec:	mov	x0, x20
  40f1f0:	mov	x1, x22
  40f1f4:	str	wzr, [x21]
  40f1f8:	bl	4069f0 <fopen@plt>
  40f1fc:	cbnz	x0, 40f384 <hash_init_function_table@@Base+0x1d3c>
  40f200:	ldr	w23, [x21]
  40f204:	cmp	w23, #0x2
  40f208:	b.eq	40f310 <hash_init_function_table@@Base+0x1cc8>  // b.none
  40f20c:	cmp	w23, #0x4
  40f210:	b.eq	40f1ec <hash_init_function_table@@Base+0x1ba4>  // b.none
  40f214:	b	40f284 <hash_init_function_table@@Base+0x1c3c>
  40f218:	ldrb	w8, [x20, #1]!
  40f21c:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  40f220:	add	x10, x10, #0xcf0
  40f224:	cmp	w8, #0x3e
  40f228:	cinc	x9, x20, eq  // eq = none
  40f22c:	sub	x20, x9, #0x1
  40f230:	ldrb	w9, [x20, #1]!
  40f234:	ldrh	w11, [x10, x9, lsl #1]
  40f238:	tst	w11, #0x6
  40f23c:	b.ne	40f230 <hash_init_function_table@@Base+0x1be8>  // b.any
  40f240:	adrp	x10, 428000 <_IO_stdin_used@@Base+0x30e0>
  40f244:	adrp	x11, 426000 <_IO_stdin_used@@Base+0x10e0>
  40f248:	add	x10, x10, #0xb72
  40f24c:	add	x11, x11, #0x22
  40f250:	cmp	w8, #0x3e
  40f254:	csel	x24, x11, x10, eq  // eq = none
  40f258:	cbz	w9, 40f49c <hash_init_function_table@@Base+0x1e54>
  40f25c:	bl	406f00 <__errno_location@plt>
  40f260:	mov	x21, x0
  40f264:	mov	x0, x20
  40f268:	mov	x1, x24
  40f26c:	str	wzr, [x21]
  40f270:	bl	4069f0 <fopen@plt>
  40f274:	cbnz	x0, 40f2e4 <hash_init_function_table@@Base+0x1c9c>
  40f278:	ldr	w23, [x21]
  40f27c:	cmp	w23, #0x4
  40f280:	b.eq	40f264 <hash_init_function_table@@Base+0x1c1c>  // b.none
  40f284:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40f288:	ldr	x19, [x8, #1552]
  40f28c:	mov	x0, x20
  40f290:	bl	4067d0 <strlen@plt>
  40f294:	mov	x22, x0
  40f298:	mov	w0, w23
  40f29c:	bl	406b90 <strerror@plt>
  40f2a0:	bl	4067d0 <strlen@plt>
  40f2a4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f2a8:	add	x22, x0, x22
  40f2ac:	add	x1, x1, #0x262
  40f2b0:	mov	w2, #0x5                   	// #5
  40f2b4:	mov	x0, xzr
  40f2b8:	bl	406e50 <dcgettext@plt>
  40f2bc:	ldr	w8, [x21]
  40f2c0:	mov	x21, x0
  40f2c4:	mov	w0, w8
  40f2c8:	bl	406b90 <strerror@plt>
  40f2cc:	mov	x4, x0
  40f2d0:	mov	x0, x19
  40f2d4:	mov	x1, x22
  40f2d8:	mov	x2, x21
  40f2dc:	mov	x3, x20
  40f2e0:	bl	4190fc <fatal@@Base>
  40f2e4:	ldr	x22, [x22, #8]
  40f2e8:	mov	x23, x0
  40f2ec:	cbz	x22, 40f350 <hash_init_function_table@@Base+0x1d08>
  40f2f0:	mov	x0, x22
  40f2f4:	bl	4067d0 <strlen@plt>
  40f2f8:	cbz	x0, 40f320 <hash_init_function_table@@Base+0x1cd8>
  40f2fc:	add	x8, x0, x22
  40f300:	ldurb	w8, [x8, #-1]
  40f304:	cmp	w8, #0xa
  40f308:	cset	w24, ne  // ne = any
  40f30c:	b	40f324 <hash_init_function_table@@Base+0x1cdc>
  40f310:	mov	w8, wzr
  40f314:	mov	x22, x19
  40f318:	tbnz	w8, #0, 40f360 <hash_init_function_table@@Base+0x1d18>
  40f31c:	b	40f364 <hash_init_function_table@@Base+0x1d1c>
  40f320:	mov	w24, #0x1                   	// #1
  40f324:	mov	x0, x22
  40f328:	mov	x1, x23
  40f32c:	bl	406e80 <fputs_unlocked@plt>
  40f330:	cmn	w0, #0x1
  40f334:	b.eq	40f514 <hash_init_function_table@@Base+0x1ecc>  // b.none
  40f338:	cbz	w24, 40f350 <hash_init_function_table@@Base+0x1d08>
  40f33c:	mov	w0, #0xa                   	// #10
  40f340:	mov	x1, x23
  40f344:	bl	406e20 <fputc_unlocked@plt>
  40f348:	cmn	w0, #0x1
  40f34c:	b.eq	40f514 <hash_init_function_table@@Base+0x1ecc>  // b.none
  40f350:	mov	x0, x23
  40f354:	bl	4069c0 <fclose@plt>
  40f358:	mov	x22, x19
  40f35c:	cbnz	w0, 40f4b0 <hash_init_function_table@@Base+0x1e68>
  40f360:	mov	x19, x22
  40f364:	mov	x0, x19
  40f368:	add	sp, sp, #0x400
  40f36c:	ldp	x20, x19, [sp, #64]
  40f370:	ldp	x22, x21, [sp, #48]
  40f374:	ldp	x24, x23, [sp, #32]
  40f378:	ldr	x28, [sp, #16]
  40f37c:	ldp	x29, x30, [sp], #80
  40f380:	ret
  40f384:	mov	x23, x0
  40f388:	mov	x22, x19
  40f38c:	b	40f39c <hash_init_function_table@@Base+0x1d54>
  40f390:	mov	x0, x23
  40f394:	bl	406c30 <feof@plt>
  40f398:	cbnz	w0, 40f410 <hash_init_function_table@@Base+0x1dc8>
  40f39c:	mov	x0, sp
  40f3a0:	mov	w1, #0x1                   	// #1
  40f3a4:	mov	w2, #0x400                 	// #1024
  40f3a8:	mov	x3, x23
  40f3ac:	bl	406c60 <fread_unlocked@plt>
  40f3b0:	cbz	x0, 40f3c8 <hash_init_function_table@@Base+0x1d80>
  40f3b4:	mov	x2, x0
  40f3b8:	mov	x1, sp
  40f3bc:	mov	x0, x22
  40f3c0:	bl	409c78 <variable_buffer_output@@Base>
  40f3c4:	mov	x22, x0
  40f3c8:	mov	x0, x23
  40f3cc:	bl	406fa0 <ferror@plt>
  40f3d0:	cbz	w0, 40f390 <hash_init_function_table@@Base+0x1d48>
  40f3d4:	ldr	w24, [x21]
  40f3d8:	cmp	w24, #0x4
  40f3dc:	b.eq	40f390 <hash_init_function_table@@Base+0x1d48>  // b.none
  40f3e0:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40f3e4:	ldr	x19, [x8, #1552]
  40f3e8:	mov	x0, x20
  40f3ec:	bl	4067d0 <strlen@plt>
  40f3f0:	mov	x22, x0
  40f3f4:	mov	w0, w24
  40f3f8:	bl	406b90 <strerror@plt>
  40f3fc:	bl	4067d0 <strlen@plt>
  40f400:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f404:	add	x22, x0, x22
  40f408:	add	x1, x1, #0x2a4
  40f40c:	b	40f2b0 <hash_init_function_table@@Base+0x1c68>
  40f410:	mov	x0, x23
  40f414:	bl	4069c0 <fclose@plt>
  40f418:	cbnz	w0, 40f4b0 <hash_init_function_table@@Base+0x1e68>
  40f41c:	cmp	x22, x19
  40f420:	b.ls	40f448 <hash_init_function_table@@Base+0x1e00>  // b.plast
  40f424:	mov	x9, x22
  40f428:	ldrb	w8, [x9, #-1]!
  40f42c:	cmp	w8, #0xa
  40f430:	b.ne	40f448 <hash_init_function_table@@Base+0x1e00>  // b.any
  40f434:	cmp	x9, x19
  40f438:	b.ls	40f450 <hash_init_function_table@@Base+0x1e08>  // b.plast
  40f43c:	ldrb	w8, [x22, #-2]!
  40f440:	cmp	w8, #0xd
  40f444:	csel	x22, x22, x9, eq  // eq = none
  40f448:	mov	w8, #0x1                   	// #1
  40f44c:	b	40f318 <hash_init_function_table@@Base+0x1cd0>
  40f450:	mov	w8, #0x1                   	// #1
  40f454:	mov	x22, x9
  40f458:	b	40f318 <hash_init_function_table@@Base+0x1cd0>
  40f45c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40f460:	ldr	x8, [x8, #1472]
  40f464:	mov	x0, x20
  40f468:	ldr	x19, [x8]
  40f46c:	bl	4067d0 <strlen@plt>
  40f470:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f474:	mov	x21, x0
  40f478:	add	x1, x1, #0x2b1
  40f47c:	mov	w2, #0x5                   	// #5
  40f480:	mov	x0, xzr
  40f484:	bl	406e50 <dcgettext@plt>
  40f488:	mov	x2, x0
  40f48c:	mov	x0, x19
  40f490:	mov	x1, x21
  40f494:	mov	x3, x20
  40f498:	bl	4190fc <fatal@@Base>
  40f49c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40f4a0:	ldr	x8, [x8, #1472]
  40f4a4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f4a8:	add	x1, x1, #0x24b
  40f4ac:	b	40f4f4 <hash_init_function_table@@Base+0x1eac>
  40f4b0:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40f4b4:	ldr	x19, [x8, #1552]
  40f4b8:	mov	x0, x20
  40f4bc:	bl	4067d0 <strlen@plt>
  40f4c0:	ldr	w8, [x21]
  40f4c4:	mov	x22, x0
  40f4c8:	mov	w0, w8
  40f4cc:	bl	406b90 <strerror@plt>
  40f4d0:	bl	4067d0 <strlen@plt>
  40f4d4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f4d8:	add	x22, x0, x22
  40f4dc:	add	x1, x1, #0x27d
  40f4e0:	b	40f2b0 <hash_init_function_table@@Base+0x1c68>
  40f4e4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40f4e8:	ldr	x8, [x8, #1472]
  40f4ec:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f4f0:	add	x1, x1, #0x28b
  40f4f4:	ldr	x19, [x8]
  40f4f8:	mov	w2, #0x5                   	// #5
  40f4fc:	mov	x0, xzr
  40f500:	bl	406e50 <dcgettext@plt>
  40f504:	mov	x2, x0
  40f508:	mov	x0, x19
  40f50c:	mov	x1, xzr
  40f510:	bl	4190fc <fatal@@Base>
  40f514:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  40f518:	ldr	x19, [x8, #1552]
  40f51c:	mov	x0, x20
  40f520:	bl	4067d0 <strlen@plt>
  40f524:	ldr	w8, [x21]
  40f528:	mov	x22, x0
  40f52c:	mov	w0, w8
  40f530:	bl	406b90 <strerror@plt>
  40f534:	bl	4067d0 <strlen@plt>
  40f538:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f53c:	add	x22, x0, x22
  40f540:	add	x1, x1, #0x26f
  40f544:	b	40f2b0 <hash_init_function_table@@Base+0x1c68>
  40f548:	stp	x29, x30, [sp, #-96]!
  40f54c:	stp	x26, x25, [sp, #32]
  40f550:	stp	x24, x23, [sp, #48]
  40f554:	stp	x22, x21, [sp, #64]
  40f558:	stp	x20, x19, [sp, #80]
  40f55c:	ldrb	w8, [x0]
  40f560:	str	x27, [sp, #16]
  40f564:	mov	x29, sp
  40f568:	cbz	w8, 40f6c0 <hash_init_function_table@@Base+0x2078>
  40f56c:	mov	x20, x0
  40f570:	mov	x19, x1
  40f574:	cmp	w8, #0x2f
  40f578:	b.ne	40f590 <hash_init_function_table@@Base+0x1f48>  // b.any
  40f57c:	mov	x21, x19
  40f580:	strb	w8, [x19]
  40f584:	strb	wzr, [x21, #1]!
  40f588:	add	x20, x20, #0x1
  40f58c:	b	40f5ac <hash_init_function_table@@Base+0x1f64>
  40f590:	adrp	x8, 440000 <shell_var@@Base+0x18>
  40f594:	ldr	x1, [x8, #24]
  40f598:	cbz	x1, 40f6c0 <hash_init_function_table@@Base+0x2078>
  40f59c:	mov	x0, x19
  40f5a0:	bl	406d90 <strcpy@plt>
  40f5a4:	bl	4067d0 <strlen@plt>
  40f5a8:	add	x21, x19, x0
  40f5ac:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  40f5b0:	add	x24, x19, #0x1, lsl #12
  40f5b4:	add	x25, x19, #0x1
  40f5b8:	add	x23, x23, #0xcf0
  40f5bc:	mov	w26, #0x2f                  	// #47
  40f5c0:	b	40f5e0 <hash_init_function_table@@Base+0x1f98>
  40f5c4:	mov	x0, x21
  40f5c8:	mov	x2, x22
  40f5cc:	bl	406790 <memcpy@plt>
  40f5d0:	mov	w8, wzr
  40f5d4:	strb	wzr, [x21, x22]
  40f5d8:	mov	x21, x27
  40f5dc:	cbnz	w8, 40f690 <hash_init_function_table@@Base+0x2048>
  40f5e0:	ldrb	w8, [x20]
  40f5e4:	cbz	w8, 40f698 <hash_init_function_table@@Base+0x2050>
  40f5e8:	sub	x1, x20, #0x1
  40f5ec:	mov	x20, x1
  40f5f0:	ldrb	w8, [x1, #1]!
  40f5f4:	ldrsh	w9, [x23, x8, lsl #1]
  40f5f8:	tbnz	w9, #31, 40f5ec <hash_init_function_table@@Base+0x1fa4>
  40f5fc:	ldrb	w9, [x20, #1]!
  40f600:	ldrh	w9, [x23, x9, lsl #1]
  40f604:	tst	w9, #0xffff8001
  40f608:	b.eq	40f5fc <hash_init_function_table@@Base+0x1fb4>  // b.none
  40f60c:	subs	x22, x20, x1
  40f610:	b.eq	40f634 <hash_init_function_table@@Base+0x1fec>  // b.none
  40f614:	cmp	x22, #0x2
  40f618:	b.eq	40f63c <hash_init_function_table@@Base+0x1ff4>  // b.none
  40f61c:	cmp	x22, #0x1
  40f620:	b.ne	40f66c <hash_init_function_table@@Base+0x2024>  // b.any
  40f624:	cmp	w8, #0x2e
  40f628:	b.ne	40f66c <hash_init_function_table@@Base+0x2024>  // b.any
  40f62c:	mov	w8, wzr
  40f630:	b	40f5dc <hash_init_function_table@@Base+0x1f94>
  40f634:	mov	w8, #0x2                   	// #2
  40f638:	b	40f5dc <hash_init_function_table@@Base+0x1f94>
  40f63c:	cmp	w8, #0x2e
  40f640:	b.ne	40f66c <hash_init_function_table@@Base+0x2024>  // b.any
  40f644:	ldrb	w8, [x1, #1]
  40f648:	cmp	w8, #0x2e
  40f64c:	b.ne	40f66c <hash_init_function_table@@Base+0x2024>  // b.any
  40f650:	cmp	x21, x25
  40f654:	b.ls	40f62c <hash_init_function_table@@Base+0x1fe4>  // b.plast
  40f658:	ldurb	w8, [x21, #-2]
  40f65c:	sub	x21, x21, #0x1
  40f660:	ldrsh	w8, [x23, x8, lsl #1]
  40f664:	tbz	w8, #31, 40f658 <hash_init_function_table@@Base+0x2010>
  40f668:	b	40f62c <hash_init_function_table@@Base+0x1fe4>
  40f66c:	ldurb	w8, [x21, #-1]
  40f670:	ldrsh	w8, [x23, x8, lsl #1]
  40f674:	tbnz	w8, #31, 40f67c <hash_init_function_table@@Base+0x2034>
  40f678:	strb	w26, [x21], #1
  40f67c:	add	x27, x21, x22
  40f680:	cmp	x27, x24
  40f684:	b.cc	40f5c4 <hash_init_function_table@@Base+0x1f7c>  // b.lo, b.ul, b.last
  40f688:	mov	w8, #0x1                   	// #1
  40f68c:	b	40f5dc <hash_init_function_table@@Base+0x1f94>
  40f690:	cmp	w8, #0x2
  40f694:	b.ne	40f6c0 <hash_init_function_table@@Base+0x2078>  // b.any
  40f698:	add	x8, x19, #0x1
  40f69c:	cmp	x21, x8
  40f6a0:	b.ls	40f6b8 <hash_init_function_table@@Base+0x2070>  // b.plast
  40f6a4:	mov	x8, x21
  40f6a8:	ldrb	w9, [x8, #-1]!
  40f6ac:	ldrsh	w9, [x23, x9, lsl #1]
  40f6b0:	cmp	w9, #0x0
  40f6b4:	csel	x21, x8, x21, lt  // lt = tstop
  40f6b8:	strb	wzr, [x21]
  40f6bc:	b	40f6c4 <hash_init_function_table@@Base+0x207c>
  40f6c0:	mov	x19, xzr
  40f6c4:	mov	x0, x19
  40f6c8:	ldp	x20, x19, [sp, #80]
  40f6cc:	ldp	x22, x21, [sp, #64]
  40f6d0:	ldp	x24, x23, [sp, #48]
  40f6d4:	ldp	x26, x25, [sp, #32]
  40f6d8:	ldr	x27, [sp, #16]
  40f6dc:	ldp	x29, x30, [sp], #96
  40f6e0:	ret
  40f6e4:	stp	x29, x30, [sp, #-16]!
  40f6e8:	ldr	x0, [x0, #16]
  40f6ec:	mov	x29, sp
  40f6f0:	bl	4102b4 <jhash_string@@Base>
  40f6f4:	mov	w0, w0
  40f6f8:	ldp	x29, x30, [sp], #16
  40f6fc:	ret
  40f700:	mov	x0, xzr
  40f704:	ret
  40f708:	stp	x29, x30, [sp, #-16]!
  40f70c:	ldr	w9, [x0, #24]
  40f710:	ldr	w10, [x1, #24]
  40f714:	mov	x8, x0
  40f718:	mov	x29, sp
  40f71c:	subs	w0, w9, w10
  40f720:	b.eq	40f72c <hash_init_function_table@@Base+0x20e4>  // b.none
  40f724:	ldp	x29, x30, [sp], #16
  40f728:	ret
  40f72c:	ldr	x0, [x8, #16]
  40f730:	ldr	x1, [x1, #16]
  40f734:	cmp	x0, x1
  40f738:	b.eq	40f748 <hash_init_function_table@@Base+0x2100>  // b.none
  40f73c:	bl	406cb0 <strcmp@plt>
  40f740:	ldp	x29, x30, [sp], #16
  40f744:	ret
  40f748:	mov	w0, wzr
  40f74c:	ldp	x29, x30, [sp], #16
  40f750:	ret
  40f754:	sub	sp, sp, #0x70
  40f758:	str	x0, [sp, #8]
  40f75c:	add	x0, sp, #0x8
  40f760:	mov	w1, #0x10                  	// #16
  40f764:	mov	w2, #0x1                   	// #1
  40f768:	mov	w4, #0x19                  	// #25
  40f76c:	mov	x3, xzr
  40f770:	stp	x29, x30, [sp, #16]
  40f774:	stp	x28, x27, [sp, #32]
  40f778:	stp	x26, x25, [sp, #48]
  40f77c:	stp	x24, x23, [sp, #64]
  40f780:	stp	x22, x21, [sp, #80]
  40f784:	stp	x20, x19, [sp, #96]
  40f788:	add	x29, sp, #0x10
  40f78c:	bl	41b484 <parse_file_seq@@Base>
  40f790:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  40f794:	ldr	x8, [x21, #3016]
  40f798:	mov	x19, x0
  40f79c:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  40f7a0:	cbz	x8, 40f824 <hash_init_function_table@@Base+0x21dc>
  40f7a4:	cbz	x19, 40f83c <hash_init_function_table@@Base+0x21f4>
  40f7a8:	mov	x26, xzr
  40f7ac:	mov	w23, #0x20                  	// #32
  40f7b0:	b	40f7e8 <hash_init_function_table@@Base+0x21a0>
  40f7b4:	ldr	x28, [x21, #3016]
  40f7b8:	ldr	x1, [x19, #8]
  40f7bc:	mov	x2, x20
  40f7c0:	add	x0, x28, x26
  40f7c4:	bl	406790 <memcpy@plt>
  40f7c8:	strb	w23, [x28, x27]
  40f7cc:	ldr	x0, [x19, #8]
  40f7d0:	bl	406cf0 <free@plt>
  40f7d4:	mov	x0, x19
  40f7d8:	bl	406cf0 <free@plt>
  40f7dc:	mov	x19, x24
  40f7e0:	mov	x26, x25
  40f7e4:	cbz	x24, 40f840 <hash_init_function_table@@Base+0x21f8>
  40f7e8:	ldp	x24, x0, [x19]
  40f7ec:	bl	4067d0 <strlen@plt>
  40f7f0:	ldr	x8, [x22, #3024]
  40f7f4:	add	x27, x0, x26
  40f7f8:	add	x25, x27, #0x1
  40f7fc:	mov	x20, x0
  40f800:	cmp	x25, x8
  40f804:	b.ls	40f7b4 <hash_init_function_table@@Base+0x216c>  // b.plast
  40f808:	ldr	x0, [x21, #3016]
  40f80c:	add	x8, x8, x20, lsl #1
  40f810:	add	x1, x8, #0x2
  40f814:	str	x1, [x22, #3024]
  40f818:	bl	41803c <xrealloc@@Base>
  40f81c:	str	x0, [x21, #3016]
  40f820:	b	40f7b4 <hash_init_function_table@@Base+0x216c>
  40f824:	mov	w8, #0x64                  	// #100
  40f828:	mov	w0, #0x64                  	// #100
  40f82c:	str	x8, [x22, #3024]
  40f830:	bl	418070 <xmalloc@@Base>
  40f834:	str	x0, [x21, #3016]
  40f838:	cbnz	x19, 40f7a8 <hash_init_function_table@@Base+0x2160>
  40f83c:	mov	x25, xzr
  40f840:	ldr	x0, [x21, #3016]
  40f844:	sub	x8, x25, #0x1
  40f848:	cmp	x25, #0x0
  40f84c:	csel	x8, xzr, x8, eq  // eq = none
  40f850:	strb	wzr, [x0, x8]
  40f854:	ldp	x20, x19, [sp, #96]
  40f858:	ldp	x22, x21, [sp, #80]
  40f85c:	ldp	x24, x23, [sp, #64]
  40f860:	ldp	x26, x25, [sp, #48]
  40f864:	ldp	x28, x27, [sp, #32]
  40f868:	ldp	x29, x30, [sp, #16]
  40f86c:	add	sp, sp, #0x70
  40f870:	ret
  40f874:	sub	sp, sp, #0x40
  40f878:	stp	x29, x30, [sp, #16]
  40f87c:	stp	x22, x21, [sp, #32]
  40f880:	stp	x20, x19, [sp, #48]
  40f884:	add	x29, sp, #0x10
  40f888:	mov	x20, x1
  40f88c:	mov	x19, x0
  40f890:	str	x0, [sp, #8]
  40f894:	bl	4067d0 <strlen@plt>
  40f898:	add	x8, x19, x0
  40f89c:	sub	x8, x8, #0x1
  40f8a0:	add	x0, sp, #0x8
  40f8a4:	mov	x1, sp
  40f8a8:	str	x8, [sp]
  40f8ac:	bl	40cb70 <strip_whitespace@@Base>
  40f8b0:	ldp	x8, x10, [sp]
  40f8b4:	cmp	x10, x8
  40f8b8:	cset	w9, hi  // hi = pmore
  40f8bc:	b.hi	40f908 <hash_init_function_table@@Base+0x22c0>  // b.pmore
  40f8c0:	ldrb	w11, [x10]
  40f8c4:	sub	w11, w11, #0x30
  40f8c8:	cmp	w11, #0x9
  40f8cc:	b.hi	40f8fc <hash_init_function_table@@Base+0x22b4>  // b.pmore
  40f8d0:	ldr	x8, [sp]
  40f8d4:	add	x10, x10, #0x1
  40f8d8:	cmp	x10, x8
  40f8dc:	cset	w9, hi  // hi = pmore
  40f8e0:	b.hi	40f924 <hash_init_function_table@@Base+0x22dc>  // b.pmore
  40f8e4:	ldrb	w11, [x10], #1
  40f8e8:	sub	w11, w11, #0x30
  40f8ec:	cmp	w11, #0x9
  40f8f0:	b.ls	40f8d8 <hash_init_function_table@@Base+0x2290>  // b.plast
  40f8f4:	sub	x10, x10, #0x1
  40f8f8:	b	40f900 <hash_init_function_table@@Base+0x22b8>
  40f8fc:	ldr	x10, [sp, #8]
  40f900:	str	x10, [sp, #8]
  40f904:	tbz	w9, #0, 40f930 <hash_init_function_table@@Base+0x22e8>
  40f908:	cmp	x8, x19
  40f90c:	b.mi	40f930 <hash_init_function_table@@Base+0x22e8>  // b.first
  40f910:	ldp	x20, x19, [sp, #48]
  40f914:	ldp	x22, x21, [sp, #32]
  40f918:	ldp	x29, x30, [sp, #16]
  40f91c:	add	sp, sp, #0x40
  40f920:	ret
  40f924:	str	x10, [sp, #8]
  40f928:	cmp	x8, x19
  40f92c:	b.pl	40f910 <hash_init_function_table@@Base+0x22c8>  // b.nfrst
  40f930:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40f934:	ldr	x8, [x8, #1472]
  40f938:	mov	x0, x20
  40f93c:	ldr	x21, [x8]
  40f940:	bl	4067d0 <strlen@plt>
  40f944:	mov	x22, x0
  40f948:	mov	x0, x19
  40f94c:	bl	4067d0 <strlen@plt>
  40f950:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f954:	add	x1, x0, x22
  40f958:	add	x2, x2, #0x148
  40f95c:	mov	x0, x21
  40f960:	mov	x3, x20
  40f964:	mov	x4, x19
  40f968:	bl	4190fc <fatal@@Base>

000000000040f96c <guile_gmake_setup@@Base>:
  40f96c:	mov	w0, #0x1                   	// #1
  40f970:	ret

000000000040f974 <hash_init@@Base>:
  40f974:	stp	x29, x30, [sp, #-48]!
  40f978:	stp	x20, x19, [sp, #32]
  40f97c:	mov	x19, x0
  40f980:	mov	x0, x1
  40f984:	stp	x22, x21, [sp, #16]
  40f988:	mov	x29, sp
  40f98c:	mov	x20, x4
  40f990:	mov	x21, x3
  40f994:	mov	x22, x2
  40f998:	bl	40fa14 <hash_init@@Base+0xa0>
  40f99c:	str	x0, [x19, #32]
  40f9a0:	str	x0, [x19, #56]
  40f9a4:	lsl	x0, x0, #3
  40f9a8:	bl	418094 <xcalloc@@Base>
  40f9ac:	str	x0, [x19]
  40f9b0:	cbz	x0, 40f9e0 <hash_init@@Base+0x6c>
  40f9b4:	ldr	x8, [x19, #32]
  40f9b8:	stp	xzr, xzr, [x19, #64]
  40f9bc:	str	wzr, [x19, #80]
  40f9c0:	stp	x22, x21, [x19, #8]
  40f9c4:	sub	x8, x8, x8, lsr #4
  40f9c8:	stp	x8, xzr, [x19, #40]
  40f9cc:	str	x20, [x19, #24]
  40f9d0:	ldp	x20, x19, [sp, #32]
  40f9d4:	ldp	x22, x21, [sp, #16]
  40f9d8:	ldp	x29, x30, [sp], #48
  40f9dc:	ret
  40f9e0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40f9e4:	ldr	x20, [x8, #2488]
  40f9e8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40f9ec:	add	x1, x1, #0x2d2
  40f9f0:	mov	w2, #0x5                   	// #5
  40f9f4:	bl	406e50 <dcgettext@plt>
  40f9f8:	ldr	x8, [x19, #32]
  40f9fc:	mov	x1, x0
  40fa00:	mov	x0, x20
  40fa04:	lsl	x2, x8, #3
  40fa08:	bl	406f70 <fprintf@plt>
  40fa0c:	mov	w0, #0x1                   	// #1
  40fa10:	bl	4067f0 <exit@plt>
  40fa14:	orr	x8, x0, x0, lsr #1
  40fa18:	orr	x8, x8, x8, lsr #2
  40fa1c:	orr	x8, x8, x8, lsr #4
  40fa20:	orr	x8, x8, x8, lsr #8
  40fa24:	orr	x8, x8, x8, lsr #16
  40fa28:	orr	x8, x8, x8, lsr #32
  40fa2c:	add	x0, x8, #0x1
  40fa30:	ret

000000000040fa34 <hash_load@@Base>:
  40fa34:	stp	x29, x30, [sp, #-48]!
  40fa38:	stp	x22, x21, [sp, #16]
  40fa3c:	stp	x20, x19, [sp, #32]
  40fa40:	mov	x29, sp
  40fa44:	cbz	x2, 40fa70 <hash_load@@Base+0x3c>
  40fa48:	mov	x19, x3
  40fa4c:	mov	x20, x2
  40fa50:	mov	x21, x1
  40fa54:	mov	x22, x0
  40fa58:	mov	x0, x22
  40fa5c:	mov	x1, x21
  40fa60:	sub	x20, x20, #0x1
  40fa64:	bl	40fa80 <hash_insert@@Base>
  40fa68:	add	x21, x21, x19
  40fa6c:	cbnz	x20, 40fa58 <hash_load@@Base+0x24>
  40fa70:	ldp	x20, x19, [sp, #32]
  40fa74:	ldp	x22, x21, [sp, #16]
  40fa78:	ldp	x29, x30, [sp], #48
  40fa7c:	ret

000000000040fa80 <hash_insert@@Base>:
  40fa80:	stp	x29, x30, [sp, #-48]!
  40fa84:	str	x21, [sp, #16]
  40fa88:	stp	x20, x19, [sp, #32]
  40fa8c:	mov	x29, sp
  40fa90:	mov	x19, x1
  40fa94:	mov	x20, x0
  40fa98:	bl	40fad4 <hash_find_slot@@Base>
  40fa9c:	ldr	x21, [x0]
  40faa0:	mov	x2, x0
  40faa4:	mov	x0, x20
  40faa8:	mov	x1, x19
  40faac:	bl	40fc04 <hash_insert_at@@Base>
  40fab0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  40fab4:	ldr	x8, [x8, #2344]
  40fab8:	ldp	x20, x19, [sp, #32]
  40fabc:	cmp	x21, x8
  40fac0:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  40fac4:	csel	x0, xzr, x21, eq  // eq = none
  40fac8:	ldr	x21, [sp, #16]
  40facc:	ldp	x29, x30, [sp], #48
  40fad0:	ret

000000000040fad4 <hash_find_slot@@Base>:
  40fad4:	stp	x29, x30, [sp, #-80]!
  40fad8:	stp	x24, x23, [sp, #32]
  40fadc:	stp	x22, x21, [sp, #48]
  40fae0:	stp	x20, x19, [sp, #64]
  40fae4:	ldr	x8, [x0, #8]
  40fae8:	mov	x19, x0
  40faec:	mov	x0, x1
  40faf0:	str	x25, [sp, #16]
  40faf4:	mov	x29, sp
  40faf8:	mov	x20, x1
  40fafc:	blr	x8
  40fb00:	ldr	w9, [x19, #32]
  40fb04:	ldr	x8, [x19, #72]
  40fb08:	ldr	x10, [x19]
  40fb0c:	sub	w9, w9, #0x1
  40fb10:	add	x8, x8, #0x1
  40fb14:	and	w23, w9, w0
  40fb18:	str	x8, [x19, #72]
  40fb1c:	add	x21, x10, w23, uxtw #3
  40fb20:	ldr	x1, [x21]
  40fb24:	cbz	x1, 40fbb0 <hash_find_slot@@Base+0xdc>
  40fb28:	mov	w25, wzr
  40fb2c:	mov	x22, xzr
  40fb30:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  40fb34:	b	40fb58 <hash_find_slot@@Base+0x84>
  40fb38:	ldr	w8, [x19, #32]
  40fb3c:	ldr	x9, [x19]
  40fb40:	add	w10, w25, w23
  40fb44:	sub	w8, w8, #0x1
  40fb48:	and	w23, w8, w10
  40fb4c:	add	x21, x9, w23, uxtw #3
  40fb50:	ldr	x1, [x21]
  40fb54:	cbz	x1, 40fbb4 <hash_find_slot@@Base+0xe0>
  40fb58:	ldr	x8, [x24, #2344]
  40fb5c:	cmp	x1, x8
  40fb60:	b.eq	40fb90 <hash_find_slot@@Base+0xbc>  // b.none
  40fb64:	cmp	x1, x20
  40fb68:	b.eq	40fbbc <hash_find_slot@@Base+0xe8>  // b.none
  40fb6c:	ldr	x8, [x19, #24]
  40fb70:	mov	x0, x20
  40fb74:	blr	x8
  40fb78:	cbz	w0, 40fbbc <hash_find_slot@@Base+0xe8>
  40fb7c:	ldr	x8, [x19, #64]
  40fb80:	add	x8, x8, #0x1
  40fb84:	str	x8, [x19, #64]
  40fb88:	cbnz	w25, 40fb38 <hash_find_slot@@Base+0x64>
  40fb8c:	b	40fb9c <hash_find_slot@@Base+0xc8>
  40fb90:	cmp	x22, #0x0
  40fb94:	csel	x22, x21, x22, eq  // eq = none
  40fb98:	cbnz	w25, 40fb38 <hash_find_slot@@Base+0x64>
  40fb9c:	ldr	x8, [x19, #16]
  40fba0:	mov	x0, x20
  40fba4:	blr	x8
  40fba8:	orr	w25, w0, #0x1
  40fbac:	b	40fb38 <hash_find_slot@@Base+0x64>
  40fbb0:	mov	x22, xzr
  40fbb4:	cmp	x22, #0x0
  40fbb8:	csel	x21, x21, x22, eq  // eq = none
  40fbbc:	mov	x0, x21
  40fbc0:	ldp	x20, x19, [sp, #64]
  40fbc4:	ldp	x22, x21, [sp, #48]
  40fbc8:	ldp	x24, x23, [sp, #32]
  40fbcc:	ldr	x25, [sp, #16]
  40fbd0:	ldp	x29, x30, [sp], #80
  40fbd4:	ret

000000000040fbd8 <hash_find_item@@Base>:
  40fbd8:	stp	x29, x30, [sp, #-16]!
  40fbdc:	mov	x29, sp
  40fbe0:	bl	40fad4 <hash_find_slot@@Base>
  40fbe4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40fbe8:	ldr	x8, [x0]
  40fbec:	ldr	x9, [x9, #2344]
  40fbf0:	cmp	x8, x9
  40fbf4:	ccmp	x8, #0x0, #0x4, ne  // ne = any
  40fbf8:	csel	x0, xzr, x8, eq  // eq = none
  40fbfc:	ldp	x29, x30, [sp], #16
  40fc00:	ret

000000000040fc04 <hash_insert_at@@Base>:
  40fc04:	stp	x29, x30, [sp, #-32]!
  40fc08:	stp	x20, x19, [sp, #16]
  40fc0c:	ldr	x8, [x2]
  40fc10:	mov	x19, x1
  40fc14:	mov	x20, x0
  40fc18:	mov	x29, sp
  40fc1c:	cbz	x8, 40fc30 <hash_insert_at@@Base+0x2c>
  40fc20:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40fc24:	ldr	x9, [x9, #2344]
  40fc28:	cmp	x8, x9
  40fc2c:	b.ne	40fc4c <hash_insert_at@@Base+0x48>  // b.any
  40fc30:	ldr	x9, [x20, #48]
  40fc34:	add	x9, x9, #0x1
  40fc38:	str	x9, [x20, #48]
  40fc3c:	cbnz	x8, 40fc4c <hash_insert_at@@Base+0x48>
  40fc40:	ldr	x8, [x20, #56]
  40fc44:	sub	x8, x8, #0x1
  40fc48:	str	x8, [x20, #56]
  40fc4c:	str	x19, [x2]
  40fc50:	ldp	x8, x9, [x20, #32]
  40fc54:	ldr	x10, [x20, #56]
  40fc58:	sub	x8, x8, x9
  40fc5c:	cmp	x10, x8
  40fc60:	b.cs	40fc7c <hash_insert_at@@Base+0x78>  // b.hs, b.nlast
  40fc64:	mov	x0, x20
  40fc68:	bl	40fc8c <hash_insert_at@@Base+0x88>
  40fc6c:	mov	x0, x20
  40fc70:	mov	x1, x19
  40fc74:	bl	40fad4 <hash_find_slot@@Base>
  40fc78:	mov	x2, x0
  40fc7c:	ldp	x20, x19, [sp, #16]
  40fc80:	mov	x0, x2
  40fc84:	ldp	x29, x30, [sp], #32
  40fc88:	ret
  40fc8c:	stp	x29, x30, [sp, #-64]!
  40fc90:	str	x23, [sp, #16]
  40fc94:	stp	x22, x21, [sp, #32]
  40fc98:	stp	x20, x19, [sp, #48]
  40fc9c:	ldp	x9, x8, [x0, #40]
  40fca0:	ldr	x21, [x0, #32]
  40fca4:	ldr	x20, [x0]
  40fca8:	mov	x19, x0
  40fcac:	cmp	x8, x9
  40fcb0:	mov	x29, sp
  40fcb4:	b.cc	40fcc8 <hash_insert_at@@Base+0xc4>  // b.lo, b.ul, b.last
  40fcb8:	lsl	x8, x21, #1
  40fcbc:	ubfx	x9, x21, #3, #60
  40fcc0:	sub	x9, x8, x9
  40fcc4:	stp	x8, x9, [x19, #32]
  40fcc8:	ldr	w8, [x19, #80]
  40fccc:	ldr	x9, [x19, #32]
  40fcd0:	add	w8, w8, #0x1
  40fcd4:	lsl	x0, x9, #3
  40fcd8:	str	w8, [x19, #80]
  40fcdc:	bl	418094 <xcalloc@@Base>
  40fce0:	cmp	x21, #0x1
  40fce4:	str	x0, [x19]
  40fce8:	b.lt	40fd30 <hash_insert_at@@Base+0x12c>  // b.tstop
  40fcec:	add	x21, x20, x21, lsl #3
  40fcf0:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  40fcf4:	mov	x23, x20
  40fcf8:	b	40fd08 <hash_insert_at@@Base+0x104>
  40fcfc:	add	x23, x23, #0x8
  40fd00:	cmp	x23, x21
  40fd04:	b.cs	40fd30 <hash_insert_at@@Base+0x12c>  // b.hs, b.nlast
  40fd08:	ldr	x1, [x23]
  40fd0c:	cbz	x1, 40fcfc <hash_insert_at@@Base+0xf8>
  40fd10:	ldr	x8, [x22, #2344]
  40fd14:	cmp	x1, x8
  40fd18:	b.eq	40fcfc <hash_insert_at@@Base+0xf8>  // b.none
  40fd1c:	mov	x0, x19
  40fd20:	bl	40fad4 <hash_find_slot@@Base>
  40fd24:	ldr	x8, [x23]
  40fd28:	str	x8, [x0]
  40fd2c:	b	40fcfc <hash_insert_at@@Base+0xf8>
  40fd30:	ldr	x8, [x19, #32]
  40fd34:	ldr	x9, [x19, #48]
  40fd38:	mov	x0, x20
  40fd3c:	sub	x8, x8, x9
  40fd40:	str	x8, [x19, #56]
  40fd44:	bl	406cf0 <free@plt>
  40fd48:	ldp	x20, x19, [sp, #48]
  40fd4c:	ldp	x22, x21, [sp, #32]
  40fd50:	ldr	x23, [sp, #16]
  40fd54:	ldp	x29, x30, [sp], #64
  40fd58:	ret

000000000040fd5c <hash_delete@@Base>:
  40fd5c:	stp	x29, x30, [sp, #-32]!
  40fd60:	str	x19, [sp, #16]
  40fd64:	mov	x29, sp
  40fd68:	mov	x19, x0
  40fd6c:	bl	40fad4 <hash_find_slot@@Base>
  40fd70:	mov	x1, x0
  40fd74:	mov	x0, x19
  40fd78:	bl	40fd88 <hash_delete_at@@Base>
  40fd7c:	ldr	x19, [sp, #16]
  40fd80:	ldp	x29, x30, [sp], #32
  40fd84:	ret

000000000040fd88 <hash_delete_at@@Base>:
  40fd88:	ldr	x8, [x1]
  40fd8c:	cbz	x8, 40fdb0 <hash_delete_at@@Base+0x28>
  40fd90:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  40fd94:	ldr	x9, [x9, #2344]
  40fd98:	cmp	x8, x9
  40fd9c:	b.eq	40fdb8 <hash_delete_at@@Base+0x30>  // b.none
  40fda0:	str	x9, [x1]
  40fda4:	ldr	x9, [x0, #48]
  40fda8:	sub	x9, x9, #0x1
  40fdac:	str	x9, [x0, #48]
  40fdb0:	mov	x0, x8
  40fdb4:	ret
  40fdb8:	mov	x0, xzr
  40fdbc:	ret

000000000040fdc0 <hash_free_items@@Base>:
  40fdc0:	stp	x29, x30, [sp, #-48]!
  40fdc4:	stp	x22, x21, [sp, #16]
  40fdc8:	stp	x20, x19, [sp, #32]
  40fdcc:	ldr	x8, [x0, #32]
  40fdd0:	mov	x19, x0
  40fdd4:	mov	x29, sp
  40fdd8:	cmp	x8, #0x1
  40fddc:	b.lt	40fe18 <hash_free_items@@Base+0x58>  // b.tstop
  40fde0:	ldr	x20, [x19]
  40fde4:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  40fde8:	add	x21, x20, x8, lsl #3
  40fdec:	b	40fdfc <hash_free_items@@Base+0x3c>
  40fdf0:	str	xzr, [x20], #8
  40fdf4:	cmp	x20, x21
  40fdf8:	b.cs	40fe18 <hash_free_items@@Base+0x58>  // b.hs, b.nlast
  40fdfc:	ldr	x0, [x20]
  40fe00:	cbz	x0, 40fdf0 <hash_free_items@@Base+0x30>
  40fe04:	ldr	x8, [x22, #2344]
  40fe08:	cmp	x0, x8
  40fe0c:	b.eq	40fdf0 <hash_free_items@@Base+0x30>  // b.none
  40fe10:	bl	406cf0 <free@plt>
  40fe14:	b	40fdf0 <hash_free_items@@Base+0x30>
  40fe18:	ldr	x8, [x19, #32]
  40fe1c:	stp	xzr, x8, [x19, #48]
  40fe20:	ldp	x20, x19, [sp, #32]
  40fe24:	ldp	x22, x21, [sp, #16]
  40fe28:	ldp	x29, x30, [sp], #48
  40fe2c:	ret

000000000040fe30 <hash_delete_items@@Base>:
  40fe30:	stp	x29, x30, [sp, #-32]!
  40fe34:	stp	x20, x19, [sp, #16]
  40fe38:	ldr	x20, [x0, #32]
  40fe3c:	mov	x19, x0
  40fe40:	mov	x29, sp
  40fe44:	cmp	x20, #0x1
  40fe48:	b.lt	40fe78 <hash_delete_items@@Base+0x48>  // b.tstop
  40fe4c:	ldr	x0, [x19]
  40fe50:	mov	w1, wzr
  40fe54:	add	x8, x0, x20, lsl #3
  40fe58:	add	x9, x0, #0x8
  40fe5c:	cmp	x8, x9
  40fe60:	csel	x8, x8, x9, hi  // hi = pmore
  40fe64:	mvn	x9, x0
  40fe68:	add	x8, x8, x9
  40fe6c:	add	x8, x8, #0x8
  40fe70:	and	x2, x8, #0xfffffffffffffff8
  40fe74:	bl	406ab0 <memset@plt>
  40fe78:	stp	xzr, xzr, [x19, #64]
  40fe7c:	str	wzr, [x19, #80]
  40fe80:	stp	xzr, x20, [x19, #48]
  40fe84:	ldp	x20, x19, [sp, #16]
  40fe88:	ldp	x29, x30, [sp], #32
  40fe8c:	ret

000000000040fe90 <hash_free@@Base>:
  40fe90:	stp	x29, x30, [sp, #-32]!
  40fe94:	str	x19, [sp, #16]
  40fe98:	mov	x19, x0
  40fe9c:	mov	x29, sp
  40fea0:	cbz	w1, 40feb0 <hash_free@@Base+0x20>
  40fea4:	mov	x0, x19
  40fea8:	bl	40fdc0 <hash_free_items@@Base>
  40feac:	b	40feb8 <hash_free@@Base+0x28>
  40feb0:	ldr	x8, [x19, #32]
  40feb4:	stp	xzr, x8, [x19, #48]
  40feb8:	ldr	x0, [x19]
  40febc:	bl	406cf0 <free@plt>
  40fec0:	str	xzr, [x19]
  40fec4:	str	xzr, [x19, #40]
  40fec8:	ldr	x19, [sp, #16]
  40fecc:	ldp	x29, x30, [sp], #32
  40fed0:	ret

000000000040fed4 <hash_map@@Base>:
  40fed4:	stp	x29, x30, [sp, #-48]!
  40fed8:	stp	x22, x21, [sp, #16]
  40fedc:	stp	x20, x19, [sp, #32]
  40fee0:	ldr	x8, [x0, #32]
  40fee4:	mov	x29, sp
  40fee8:	cmp	x8, #0x1
  40feec:	b.lt	40ff2c <hash_map@@Base+0x58>  // b.tstop
  40fef0:	ldr	x20, [x0]
  40fef4:	mov	x19, x1
  40fef8:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  40fefc:	add	x21, x20, x8, lsl #3
  40ff00:	b	40ff10 <hash_map@@Base+0x3c>
  40ff04:	add	x20, x20, #0x8
  40ff08:	cmp	x20, x21
  40ff0c:	b.cs	40ff2c <hash_map@@Base+0x58>  // b.hs, b.nlast
  40ff10:	ldr	x0, [x20]
  40ff14:	cbz	x0, 40ff04 <hash_map@@Base+0x30>
  40ff18:	ldr	x8, [x22, #2344]
  40ff1c:	cmp	x0, x8
  40ff20:	b.eq	40ff04 <hash_map@@Base+0x30>  // b.none
  40ff24:	blr	x19
  40ff28:	b	40ff04 <hash_map@@Base+0x30>
  40ff2c:	ldp	x20, x19, [sp, #32]
  40ff30:	ldp	x22, x21, [sp, #16]
  40ff34:	ldp	x29, x30, [sp], #48
  40ff38:	ret

000000000040ff3c <hash_map_arg@@Base>:
  40ff3c:	stp	x29, x30, [sp, #-64]!
  40ff40:	stp	x22, x21, [sp, #32]
  40ff44:	stp	x20, x19, [sp, #48]
  40ff48:	ldr	x8, [x0, #32]
  40ff4c:	str	x23, [sp, #16]
  40ff50:	mov	x29, sp
  40ff54:	cmp	x8, #0x1
  40ff58:	b.lt	40ffa0 <hash_map_arg@@Base+0x64>  // b.tstop
  40ff5c:	ldr	x21, [x0]
  40ff60:	mov	x19, x2
  40ff64:	mov	x20, x1
  40ff68:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  40ff6c:	add	x22, x21, x8, lsl #3
  40ff70:	b	40ff80 <hash_map_arg@@Base+0x44>
  40ff74:	add	x21, x21, #0x8
  40ff78:	cmp	x21, x22
  40ff7c:	b.cs	40ffa0 <hash_map_arg@@Base+0x64>  // b.hs, b.nlast
  40ff80:	ldr	x0, [x21]
  40ff84:	cbz	x0, 40ff74 <hash_map_arg@@Base+0x38>
  40ff88:	ldr	x8, [x23, #2344]
  40ff8c:	cmp	x0, x8
  40ff90:	b.eq	40ff74 <hash_map_arg@@Base+0x38>  // b.none
  40ff94:	mov	x1, x19
  40ff98:	blr	x20
  40ff9c:	b	40ff74 <hash_map_arg@@Base+0x38>
  40ffa0:	ldp	x20, x19, [sp, #48]
  40ffa4:	ldp	x22, x21, [sp, #32]
  40ffa8:	ldr	x23, [sp, #16]
  40ffac:	ldp	x29, x30, [sp], #64
  40ffb0:	ret

000000000040ffb4 <hash_print_stats@@Base>:
  40ffb4:	stp	x29, x30, [sp, #-32]!
  40ffb8:	stp	x20, x19, [sp, #16]
  40ffbc:	mov	x19, x1
  40ffc0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  40ffc4:	mov	x20, x0
  40ffc8:	add	x1, x1, #0x30c
  40ffcc:	mov	w2, #0x5                   	// #5
  40ffd0:	mov	x0, xzr
  40ffd4:	mov	x29, sp
  40ffd8:	bl	406e50 <dcgettext@plt>
  40ffdc:	ldr	x2, [x20, #48]
  40ffe0:	ldr	x3, [x20, #32]
  40ffe4:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40ffe8:	fmov	d0, x8
  40ffec:	ucvtf	d1, x2
  40fff0:	fmul	d0, d1, d0
  40fff4:	ucvtf	d1, x3
  40fff8:	mov	x1, x0
  40fffc:	fdiv	d0, d0, d1
  410000:	mov	x0, x19
  410004:	bl	406f70 <fprintf@plt>
  410008:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41000c:	add	x1, x1, #0x322
  410010:	mov	w2, #0x5                   	// #5
  410014:	mov	x0, xzr
  410018:	bl	406e50 <dcgettext@plt>
  41001c:	ldr	w2, [x20, #80]
  410020:	mov	x1, x0
  410024:	mov	x0, x19
  410028:	bl	406f70 <fprintf@plt>
  41002c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  410030:	add	x1, x1, #0x32e
  410034:	mov	w2, #0x5                   	// #5
  410038:	mov	x0, xzr
  41003c:	bl	406e50 <dcgettext@plt>
  410040:	ldp	x2, x3, [x20, #64]
  410044:	mov	x1, x0
  410048:	cbz	x3, 410068 <hash_print_stats@@Base+0xb4>
  41004c:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  410050:	ucvtf	d0, x2
  410054:	fmov	d1, x8
  410058:	fmul	d0, d0, d1
  41005c:	ucvtf	d1, x3
  410060:	fdiv	d0, d0, d1
  410064:	b	41006c <hash_print_stats@@Base+0xb8>
  410068:	fmov	d0, xzr
  41006c:	mov	x0, x19
  410070:	bl	406f70 <fprintf@plt>
  410074:	ldp	x20, x19, [sp, #16]
  410078:	ldp	x29, x30, [sp], #32
  41007c:	ret

0000000000410080 <hash_dump@@Base>:
  410080:	stp	x29, x30, [sp, #-48]!
  410084:	stp	x22, x21, [sp, #16]
  410088:	stp	x20, x19, [sp, #32]
  41008c:	ldr	x8, [x0]
  410090:	ldr	x9, [x0, #32]
  410094:	mov	x19, x2
  410098:	mov	x20, x1
  41009c:	mov	x21, x0
  4100a0:	add	x22, x8, x9, lsl #3
  4100a4:	mov	x29, sp
  4100a8:	cbnz	x1, 4100c0 <hash_dump@@Base+0x40>
  4100ac:	ldr	x8, [x21, #48]
  4100b0:	lsl	x8, x8, #3
  4100b4:	add	x0, x8, #0x8
  4100b8:	bl	418070 <xmalloc@@Base>
  4100bc:	mov	x20, x0
  4100c0:	ldr	x8, [x21]
  4100c4:	mov	x9, x20
  4100c8:	cmp	x8, x22
  4100cc:	b.cs	410104 <hash_dump@@Base+0x84>  // b.hs, b.nlast
  4100d0:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  4100d4:	mov	x9, x20
  4100d8:	b	4100e8 <hash_dump@@Base+0x68>
  4100dc:	add	x8, x8, #0x8
  4100e0:	cmp	x8, x22
  4100e4:	b.cs	410104 <hash_dump@@Base+0x84>  // b.hs, b.nlast
  4100e8:	ldr	x11, [x8]
  4100ec:	cbz	x11, 4100dc <hash_dump@@Base+0x5c>
  4100f0:	ldr	x12, [x10, #2344]
  4100f4:	cmp	x11, x12
  4100f8:	b.eq	4100dc <hash_dump@@Base+0x5c>  // b.none
  4100fc:	str	x11, [x9], #8
  410100:	b	4100dc <hash_dump@@Base+0x5c>
  410104:	str	xzr, [x9]
  410108:	cbz	x19, 410120 <hash_dump@@Base+0xa0>
  41010c:	ldr	x1, [x21, #48]
  410110:	mov	w2, #0x8                   	// #8
  410114:	mov	x0, x20
  410118:	mov	x3, x19
  41011c:	bl	4068e0 <qsort@plt>
  410120:	mov	x0, x20
  410124:	ldp	x20, x19, [sp, #32]
  410128:	ldp	x22, x21, [sp, #16]
  41012c:	ldp	x29, x30, [sp], #48
  410130:	ret

0000000000410134 <jhash@@Base>:
  410134:	mov	w8, #0xbeef                	// #48879
  410138:	movk	w8, #0xdead, lsl #16
  41013c:	cmp	w1, #0xd
  410140:	add	w9, w1, w8
  410144:	b.lt	4101c8 <jhash@@Base+0x94>  // b.tstop
  410148:	mov	w10, w9
  41014c:	mov	w8, w9
  410150:	ldp	w11, w12, [x0]
  410154:	cmp	w1, #0x18
  410158:	sub	w1, w1, #0xc
  41015c:	add	w9, w11, w9
  410160:	ldr	w11, [x0, #8]
  410164:	add	w10, w12, w10
  410168:	add	x0, x0, #0xc
  41016c:	add	w8, w11, w8
  410170:	sub	w9, w9, w8
  410174:	add	w11, w8, w10
  410178:	eor	w8, w9, w8, ror #28
  41017c:	sub	w9, w10, w8
  410180:	add	w10, w8, w11
  410184:	eor	w8, w9, w8, ror #26
  410188:	sub	w9, w11, w8
  41018c:	add	w11, w8, w10
  410190:	eor	w8, w9, w8, ror #24
  410194:	sub	w9, w10, w8
  410198:	add	w10, w8, w11
  41019c:	eor	w8, w9, w8, ror #16
  4101a0:	sub	w11, w11, w8
  4101a4:	add	w9, w8, w10
  4101a8:	eor	w8, w11, w8, ror #13
  4101ac:	sub	w11, w10, w8
  4101b0:	add	w10, w8, w9
  4101b4:	eor	w8, w11, w8, ror #28
  4101b8:	b.gt	410150 <jhash@@Base+0x1c>
  4101bc:	cbnz	w1, 4101d4 <jhash@@Base+0xa0>
  4101c0:	mov	w0, w8
  4101c4:	ret
  4101c8:	mov	w8, w9
  4101cc:	mov	w10, w9
  4101d0:	cbz	w1, 4101c0 <jhash@@Base+0x8c>
  4101d4:	cmp	w1, #0x9
  4101d8:	b.ge	410268 <jhash@@Base+0x134>  // b.tcont
  4101dc:	cmp	w1, #0x5
  4101e0:	b.ge	41027c <jhash@@Base+0x148>  // b.tcont
  4101e4:	cmp	w1, #0x4
  4101e8:	b.eq	410290 <jhash@@Base+0x15c>  // b.none
  4101ec:	cmp	w1, #0x2
  4101f0:	b.gt	4102a0 <jhash@@Base+0x16c>
  4101f4:	cmp	w1, #0x2
  4101f8:	b.lt	410204 <jhash@@Base+0xd0>  // b.tstop
  4101fc:	ldrb	w11, [x0, #1]
  410200:	add	w8, w8, w11, lsl #8
  410204:	ldrb	w11, [x0]
  410208:	add	w8, w8, w11
  41020c:	ror	w11, w10, #18
  410210:	eor	w8, w8, w10
  410214:	sub	w8, w8, w11
  410218:	eor	w9, w8, w9
  41021c:	ror	w11, w8, #21
  410220:	sub	w9, w9, w11
  410224:	eor	w10, w9, w10
  410228:	ror	w11, w9, #7
  41022c:	sub	w10, w10, w11
  410230:	eor	w8, w10, w8
  410234:	ror	w11, w10, #16
  410238:	sub	w8, w8, w11
  41023c:	eor	w9, w8, w9
  410240:	ror	w11, w8, #28
  410244:	sub	w9, w9, w11
  410248:	eor	w10, w9, w10
  41024c:	ror	w9, w9, #18
  410250:	sub	w9, w10, w9
  410254:	eor	w8, w9, w8
  410258:	ror	w9, w9, #8
  41025c:	sub	w8, w8, w9
  410260:	mov	w0, w8
  410264:	ret
  410268:	ldr	w11, [x0], #4
  41026c:	sub	w1, w1, #0x4
  410270:	add	w9, w11, w9
  410274:	cmp	w1, #0x5
  410278:	b.lt	4101e4 <jhash@@Base+0xb0>  // b.tstop
  41027c:	ldr	w11, [x0], #4
  410280:	sub	w1, w1, #0x4
  410284:	add	w10, w11, w10
  410288:	cmp	w1, #0x4
  41028c:	b.ne	4101ec <jhash@@Base+0xb8>  // b.any
  410290:	ldrb	w11, [x0, #3]
  410294:	add	w8, w8, w11, lsl #24
  410298:	cmp	w1, #0x2
  41029c:	b.le	4101f4 <jhash@@Base+0xc0>
  4102a0:	ldrb	w11, [x0, #2]
  4102a4:	add	w8, w8, w11, lsl #16
  4102a8:	cmp	w1, #0x2
  4102ac:	b.ge	4101fc <jhash@@Base+0xc8>  // b.tcont
  4102b0:	b	410204 <jhash@@Base+0xd0>

00000000004102b4 <jhash_string@@Base>:
  4102b4:	sub	sp, sp, #0x70
  4102b8:	stp	x22, x21, [sp, #80]
  4102bc:	mov	w21, #0xbeef                	// #48879
  4102c0:	stp	x29, x30, [sp, #16]
  4102c4:	stp	x28, x27, [sp, #32]
  4102c8:	stp	x26, x25, [sp, #48]
  4102cc:	stp	x24, x23, [sp, #64]
  4102d0:	stp	x20, x19, [sp, #96]
  4102d4:	add	x29, sp, #0x10
  4102d8:	mov	x19, x0
  4102dc:	movk	w21, #0xdead, lsl #16
  4102e0:	mov	w23, #0x80808080            	// #-2139062144
  4102e4:	bl	4067d0 <strlen@plt>
  4102e8:	mov	w24, #0xbeef                	// #48879
  4102ec:	mov	w26, #0xbeef                	// #48879
  4102f0:	mov	x20, x0
  4102f4:	mov	x25, xzr
  4102f8:	mov	w27, #0x4                   	// #4
  4102fc:	movk	w24, #0xdead, lsl #16
  410300:	movk	w26, #0xdead, lsl #16
  410304:	subs	x28, x20, #0x4
  410308:	add	x1, x19, x25
  41030c:	csel	x2, x20, x27, cc  // cc = lo, ul, last
  410310:	sub	x0, x29, #0x4
  410314:	stur	wzr, [x29, #-4]
  410318:	bl	406790 <memcpy@plt>
  41031c:	ldur	w9, [x29, #-4]
  410320:	mov	w8, #0xfeff                	// #65279
  410324:	movk	w8, #0xfefe, lsl #16
  410328:	add	w8, w9, w8
  41032c:	bic	w10, w23, w9
  410330:	ands	w8, w10, w8
  410334:	b.eq	410350 <jhash_string@@Base+0x9c>  // b.none
  410338:	ands	w10, w9, #0xff
  41033c:	b.eq	410360 <jhash_string@@Base+0xac>  // b.none
  410340:	tst	w9, #0xff00
  410344:	b.eq	41035c <jhash_string@@Base+0xa8>  // b.none
  410348:	tst	w9, #0xff0000
  41034c:	b.eq	410480 <jhash_string@@Base+0x1cc>  // b.none
  410350:	add	w26, w9, w26
  410354:	cbz	w8, 410364 <jhash_string@@Base+0xb0>
  410358:	b	4104ac <jhash_string@@Base+0x1f8>
  41035c:	add	w26, w10, w26
  410360:	cbnz	w8, 4104ac <jhash_string@@Base+0x1f8>
  410364:	add	x8, x19, x25
  410368:	subs	x22, x28, #0x4
  41036c:	add	x1, x8, #0x4
  410370:	csel	x2, x28, x27, cc  // cc = lo, ul, last
  410374:	add	x0, sp, #0x8
  410378:	str	wzr, [sp, #8]
  41037c:	bl	406790 <memcpy@plt>
  410380:	ldr	w9, [sp, #8]
  410384:	mov	w8, #0xfeff                	// #65279
  410388:	movk	w8, #0xfefe, lsl #16
  41038c:	add	w8, w9, w8
  410390:	bic	w10, w23, w9
  410394:	ands	w8, w10, w8
  410398:	b.eq	4103b4 <jhash_string@@Base+0x100>  // b.none
  41039c:	ands	w10, w9, #0xff
  4103a0:	b.eq	4103c4 <jhash_string@@Base+0x110>  // b.none
  4103a4:	tst	w9, #0xff00
  4103a8:	b.eq	4103c0 <jhash_string@@Base+0x10c>  // b.none
  4103ac:	tst	w9, #0xff0000
  4103b0:	b.eq	41048c <jhash_string@@Base+0x1d8>  // b.none
  4103b4:	add	w24, w9, w24
  4103b8:	cbz	w8, 4103c8 <jhash_string@@Base+0x114>
  4103bc:	b	4104b4 <jhash_string@@Base+0x200>
  4103c0:	add	w24, w10, w24
  4103c4:	cbnz	w8, 4104b4 <jhash_string@@Base+0x200>
  4103c8:	add	x8, x19, x25
  4103cc:	sub	x9, x20, #0x8
  4103d0:	subs	x20, x22, #0x4
  4103d4:	add	x1, x8, #0x8
  4103d8:	csel	x2, x9, x27, cc  // cc = lo, ul, last
  4103dc:	add	x0, sp, #0x4
  4103e0:	str	wzr, [sp, #4]
  4103e4:	bl	406790 <memcpy@plt>
  4103e8:	ldr	w9, [sp, #4]
  4103ec:	mov	w8, #0xfeff                	// #65279
  4103f0:	movk	w8, #0xfefe, lsl #16
  4103f4:	add	w8, w9, w8
  4103f8:	bic	w10, w23, w9
  4103fc:	ands	w8, w10, w8
  410400:	b.eq	41041c <jhash_string@@Base+0x168>  // b.none
  410404:	ands	w10, w9, #0xff
  410408:	b.eq	41042c <jhash_string@@Base+0x178>  // b.none
  41040c:	tst	w9, #0xff00
  410410:	b.eq	410428 <jhash_string@@Base+0x174>  // b.none
  410414:	tst	w9, #0xff0000
  410418:	b.eq	410498 <jhash_string@@Base+0x1e4>  // b.none
  41041c:	add	w21, w9, w21
  410420:	cbz	w8, 410430 <jhash_string@@Base+0x17c>
  410424:	b	4104a0 <jhash_string@@Base+0x1ec>
  410428:	add	w21, w10, w21
  41042c:	cbnz	w8, 4104a0 <jhash_string@@Base+0x1ec>
  410430:	sub	w8, w26, w21
  410434:	eor	w8, w8, w21, ror #28
  410438:	sub	w10, w24, w8
  41043c:	add	w9, w21, w24
  410440:	eor	w10, w10, w8, ror #26
  410444:	add	w8, w8, w9
  410448:	sub	w9, w9, w10
  41044c:	eor	w9, w9, w10, ror #24
  410450:	add	w10, w10, w8
  410454:	sub	w8, w8, w9
  410458:	eor	w8, w8, w9, ror #16
  41045c:	add	w9, w9, w10
  410460:	sub	w10, w10, w8
  410464:	eor	w10, w10, w8, ror #13
  410468:	add	w26, w8, w9
  41046c:	sub	w8, w9, w10
  410470:	eor	w21, w8, w10, ror #28
  410474:	add	w24, w10, w26
  410478:	add	x25, x25, #0xc
  41047c:	b	410304 <jhash_string@@Base+0x50>
  410480:	add	w26, w26, w9, uxth
  410484:	cbz	w8, 410364 <jhash_string@@Base+0xb0>
  410488:	b	4104ac <jhash_string@@Base+0x1f8>
  41048c:	add	w24, w24, w9, uxth
  410490:	cbz	w8, 4103c8 <jhash_string@@Base+0x114>
  410494:	b	4104b4 <jhash_string@@Base+0x200>
  410498:	add	w21, w21, w9, uxth
  41049c:	cbz	w8, 410430 <jhash_string@@Base+0x17c>
  4104a0:	add	x8, x19, x25
  4104a4:	add	x8, x8, #0x8
  4104a8:	b	4104bc <jhash_string@@Base+0x208>
  4104ac:	add	x8, x19, x25
  4104b0:	b	4104bc <jhash_string@@Base+0x208>
  4104b4:	add	x8, x19, x25
  4104b8:	add	x8, x8, #0x4
  4104bc:	eor	w9, w24, w21
  4104c0:	ror	w10, w24, #18
  4104c4:	sub	w9, w9, w10
  4104c8:	eor	w10, w9, w26
  4104cc:	ror	w11, w9, #21
  4104d0:	sub	w10, w10, w11
  4104d4:	eor	w11, w10, w24
  4104d8:	ror	w12, w10, #7
  4104dc:	sub	w11, w11, w12
  4104e0:	eor	w9, w11, w9
  4104e4:	ror	w12, w11, #16
  4104e8:	sub	w9, w9, w12
  4104ec:	eor	w10, w9, w10
  4104f0:	ror	w12, w9, #28
  4104f4:	sub	w10, w10, w12
  4104f8:	eor	w11, w10, w11
  4104fc:	ror	w10, w10, #18
  410500:	sub	w10, w11, w10
  410504:	sub	w8, w8, w19
  410508:	ldp	x20, x19, [sp, #96]
  41050c:	ldp	x22, x21, [sp, #80]
  410510:	ldp	x24, x23, [sp, #64]
  410514:	ldp	x26, x25, [sp, #48]
  410518:	ldp	x28, x27, [sp, #32]
  41051c:	ldp	x29, x30, [sp, #16]
  410520:	eor	w9, w10, w9
  410524:	ror	w10, w10, #8
  410528:	add	w8, w9, w8
  41052c:	sub	w0, w8, w10
  410530:	add	sp, sp, #0x70
  410534:	ret

0000000000410538 <try_implicit_rule@@Base>:
  410538:	stp	x29, x30, [sp, #-48]!
  41053c:	str	x21, [sp, #16]
  410540:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  410544:	ldrb	w8, [x21, #3236]
  410548:	stp	x20, x19, [sp, #32]
  41054c:	mov	w19, w1
  410550:	mov	x20, x0
  410554:	mov	x29, sp
  410558:	tbz	w8, #3, 41058c <try_implicit_rule@@Base+0x54>
  41055c:	mov	w0, w19
  410560:	bl	417e84 <print_spaces@@Base>
  410564:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  410568:	add	x1, x1, #0x36d
  41056c:	mov	w2, #0x5                   	// #5
  410570:	mov	x0, xzr
  410574:	bl	406e50 <dcgettext@plt>
  410578:	ldr	x1, [x20]
  41057c:	bl	406ef0 <printf@plt>
  410580:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  410584:	ldr	x0, [x8, #2512]
  410588:	bl	406d80 <fflush@plt>
  41058c:	mov	x0, x20
  410590:	mov	w1, wzr
  410594:	mov	w2, w19
  410598:	mov	w3, wzr
  41059c:	bl	410624 <try_implicit_rule@@Base+0xec>
  4105a0:	cbz	w0, 4105ac <try_implicit_rule@@Base+0x74>
  4105a4:	mov	w21, #0x1                   	// #1
  4105a8:	b	410610 <try_implicit_rule@@Base+0xd8>
  4105ac:	ldr	x0, [x20]
  4105b0:	bl	4070bc <ar_name@@Base>
  4105b4:	cbz	w0, 41060c <try_implicit_rule@@Base+0xd4>
  4105b8:	ldrb	w8, [x21, #3236]
  4105bc:	tbz	w8, #3, 4105f0 <try_implicit_rule@@Base+0xb8>
  4105c0:	mov	w0, w19
  4105c4:	bl	417e84 <print_spaces@@Base>
  4105c8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4105cc:	add	x1, x1, #0x395
  4105d0:	mov	w2, #0x5                   	// #5
  4105d4:	mov	x0, xzr
  4105d8:	bl	406e50 <dcgettext@plt>
  4105dc:	ldr	x1, [x20]
  4105e0:	bl	406ef0 <printf@plt>
  4105e4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4105e8:	ldr	x0, [x8, #2512]
  4105ec:	bl	406d80 <fflush@plt>
  4105f0:	mov	w1, #0x1                   	// #1
  4105f4:	mov	x0, x20
  4105f8:	mov	w2, w19
  4105fc:	mov	w3, wzr
  410600:	mov	w21, #0x1                   	// #1
  410604:	bl	410624 <try_implicit_rule@@Base+0xec>
  410608:	cbnz	w0, 410610 <try_implicit_rule@@Base+0xd8>
  41060c:	mov	w21, wzr
  410610:	mov	w0, w21
  410614:	ldp	x20, x19, [sp, #32]
  410618:	ldr	x21, [sp, #16]
  41061c:	ldp	x29, x30, [sp], #48
  410620:	ret
  410624:	stp	x29, x30, [sp, #-96]!
  410628:	stp	x28, x27, [sp, #16]
  41062c:	stp	x26, x25, [sp, #32]
  410630:	stp	x24, x23, [sp, #48]
  410634:	stp	x22, x21, [sp, #64]
  410638:	stp	x20, x19, [sp, #80]
  41063c:	mov	x29, sp
  410640:	sub	sp, sp, #0x1, lsl #12
  410644:	sub	sp, sp, #0x120
  410648:	ldr	x22, [x0]
  41064c:	mov	x19, sp
  410650:	mov	x20, x0
  410654:	mov	w23, w1
  410658:	str	w3, [x19, #108]
  41065c:	str	w2, [x19, #228]
  410660:	cbz	w1, 410674 <try_implicit_rule@@Base+0x13c>
  410664:	mov	w1, #0x28                  	// #40
  410668:	mov	x0, x22
  41066c:	bl	406d10 <strchr@plt>
  410670:	mov	x22, x0
  410674:	mov	x0, x22
  410678:	bl	4067d0 <strlen@plt>
  41067c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  410680:	ldr	w8, [x8, #276]
  410684:	mov	x24, x0
  410688:	lsl	x0, x8, #5
  41068c:	str	x8, [x19, #184]
  410690:	bl	418070 <xmalloc@@Base>
  410694:	adrp	x8, 440000 <shell_var@@Base+0x18>
  410698:	ldr	x8, [x8, #264]
  41069c:	mov	x9, sp
  4106a0:	mov	x21, x0
  4106a4:	str	x24, [x19, #136]
  4106a8:	add	x8, x24, x8
  4106ac:	add	x8, x8, #0x13
  4106b0:	and	x8, x8, #0xfffffffffffffff0
  4106b4:	sub	x8, x9, x8
  4106b8:	str	x8, [x19, #200]
  4106bc:	mov	sp, x8
  4106c0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4106c4:	adrp	x9, 440000 <shell_var@@Base+0x18>
  4106c8:	ldr	w8, [x8, #288]
  4106cc:	ldr	w9, [x9, #272]
  4106d0:	mul	w8, w9, w8
  4106d4:	lsl	x0, x8, #5
  4106d8:	bl	418070 <xmalloc@@Base>
  4106dc:	mov	x24, x0
  4106e0:	str	x20, [x19, #216]
  4106e4:	cbnz	w23, 4106f4 <try_implicit_rule@@Base+0x1bc>
  4106e8:	mov	x0, x22
  4106ec:	bl	4070bc <ar_name@@Base>
  4106f0:	cbz	w0, 411824 <try_implicit_rule@@Base+0x12ec>
  4106f4:	mov	x0, xzr
  4106f8:	adrp	x9, 440000 <shell_var@@Base+0x18>
  4106fc:	str	x22, [x19, #144]
  410700:	sub	x8, x0, x22
  410704:	ldr	x22, [x9, #256]
  410708:	cmp	x0, #0x0
  41070c:	csinc	x25, xzr, x8, eq  // eq = none
  410710:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  410714:	str	x24, [x19, #56]
  410718:	str	x25, [x19, #128]
  41071c:	cbz	x22, 41095c <try_implicit_rule@@Base+0x424>
  410720:	add	x8, x0, #0x1
  410724:	mov	x28, xzr
  410728:	mov	x23, xzr
  41072c:	str	x8, [x19, #192]
  410730:	mvn	x8, x0
  410734:	str	wzr, [x19, #52]
  410738:	str	wzr, [x19, #180]
  41073c:	str	x0, [x19, #208]
  410740:	str	x8, [x19, #160]
  410744:	b	410758 <try_implicit_rule@@Base+0x220>
  410748:	ldr	x22, [x22]
  41074c:	ldr	x24, [x19, #56]
  410750:	ldr	x25, [x19, #128]
  410754:	cbz	x22, 41096c <try_implicit_rule@@Base+0x434>
  410758:	ldr	x9, [x22, #32]
  41075c:	cbz	x9, 410768 <try_implicit_rule@@Base+0x230>
  410760:	ldr	x8, [x22, #40]
  410764:	cbz	x8, 410748 <try_implicit_rule@@Base+0x210>
  410768:	ldrb	w8, [x22, #51]
  41076c:	cbz	w8, 4107a8 <try_implicit_rule@@Base+0x270>
  410770:	ldrb	w8, [x27, #3236]
  410774:	tbz	w8, #3, 410748 <try_implicit_rule@@Base+0x210>
  410778:	ldr	w0, [x19, #228]
  41077c:	bl	417e84 <print_spaces@@Base>
  410780:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  410784:	mov	w2, #0x5                   	// #5
  410788:	mov	x0, xzr
  41078c:	add	x1, x1, #0x3c9
  410790:	bl	406e50 <dcgettext@plt>
  410794:	bl	406ef0 <printf@plt>
  410798:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41079c:	ldr	x0, [x8, #2512]
  4107a0:	bl	406d80 <fflush@plt>
  4107a4:	b	410748 <try_implicit_rule@@Base+0x210>
  4107a8:	ldrh	w8, [x22, #48]
  4107ac:	cbz	w8, 410748 <try_implicit_rule@@Base+0x210>
  4107b0:	ldr	x12, [x22, #8]
  4107b4:	ldr	x13, [x22, #24]
  4107b8:	ldrh	w20, [x22, #48]
  4107bc:	mov	x25, xzr
  4107c0:	str	x9, [x19, #168]
  4107c4:	stp	x13, x12, [x19, #232]
  4107c8:	b	41082c <try_implicit_rule@@Base+0x2f4>
  4107cc:	ldrb	w8, [x26, #1]
  4107d0:	ldr	w9, [x19, #180]
  4107d4:	cmp	w8, #0x0
  4107d8:	ldr	x8, [x19, #168]
  4107dc:	csinc	w9, w9, wzr, eq  // eq = none
  4107e0:	str	w9, [x19, #180]
  4107e4:	cbz	x8, 410950 <try_implicit_rule@@Base+0x418>
  4107e8:	ldr	w10, [x19, #52]
  4107ec:	ldr	x9, [x19, #56]
  4107f0:	cmp	w27, #0x0
  4107f4:	mov	w8, w10
  4107f8:	add	x8, x9, x8, lsl #5
  4107fc:	ldr	x9, [x19, #128]
  410800:	stp	w25, w10, [x8, #16]
  410804:	add	w10, w10, #0x1
  410808:	strb	w27, [x8, #24]
  41080c:	csel	x9, xzr, x9, eq  // eq = none
  410810:	add	x9, x23, x9
  410814:	stp	x22, x9, [x8]
  410818:	str	w10, [x19, #52]
  41081c:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  410820:	add	x25, x25, #0x1
  410824:	cmp	x25, x20
  410828:	b.cs	410748 <try_implicit_rule@@Base+0x210>  // b.hs, b.nlast
  41082c:	lsl	x8, x25, #3
  410830:	ldr	x26, [x12, x8]
  410834:	ldr	x24, [x13, x8]
  410838:	ldr	w8, [x19, #108]
  41083c:	cbz	w8, 410850 <try_implicit_rule@@Base+0x318>
  410840:	ldrb	w8, [x26, #1]
  410844:	cbnz	w8, 410850 <try_implicit_rule@@Base+0x318>
  410848:	ldrb	w8, [x22, #50]
  41084c:	cbz	w8, 410820 <try_implicit_rule@@Base+0x2e8>
  410850:	ldr	x8, [x22, #16]
  410854:	ldr	x9, [x19, #136]
  410858:	ldr	w8, [x8, x25, lsl #2]
  41085c:	subs	x8, x9, x8
  410860:	b.cc	410820 <try_implicit_rule@@Base+0x2e8>  // b.lo, b.ul, b.last
  410864:	ldr	x10, [x19, #144]
  410868:	add	x23, x8, #0x1
  41086c:	ldr	x8, [x19, #208]
  410870:	mvn	x9, x26
  410874:	add	x9, x24, x9
  410878:	add	x28, x10, x9
  41087c:	cbz	x8, 4108cc <try_implicit_rule@@Base+0x394>
  410880:	mov	w1, #0x2f                  	// #47
  410884:	mov	x0, x26
  410888:	bl	406d10 <strchr@plt>
  41088c:	ldp	x13, x12, [x19, #232]
  410890:	cmp	x0, #0x0
  410894:	cset	w27, eq  // eq = none
  410898:	cbz	w27, 4108d4 <try_implicit_rule@@Base+0x39c>
  41089c:	ldr	x9, [x19, #128]
  4108a0:	subs	x8, x23, x9
  4108a4:	b.cc	41081c <try_implicit_rule@@Base+0x2e4>  // b.lo, b.ul, b.last
  4108a8:	add	x28, x28, x9
  4108ac:	mov	x23, x8
  4108b0:	cbnz	w27, 4108d8 <try_implicit_rule@@Base+0x3a0>
  4108b4:	ldr	x8, [x19, #144]
  4108b8:	subs	x2, x28, x8
  4108bc:	b.ls	410900 <try_implicit_rule@@Base+0x3c8>  // b.plast
  4108c0:	ldr	x1, [x19, #144]
  4108c4:	mov	x0, x26
  4108c8:	b	4108f4 <try_implicit_rule@@Base+0x3bc>
  4108cc:	mov	w27, wzr
  4108d0:	cbnz	w27, 41089c <try_implicit_rule@@Base+0x364>
  4108d4:	cbz	w27, 4108b4 <try_implicit_rule@@Base+0x37c>
  4108d8:	ldr	x8, [x19, #192]
  4108dc:	cmp	x28, x8
  4108e0:	b.ls	410900 <try_implicit_rule@@Base+0x3c8>  // b.plast
  4108e4:	ldr	x8, [x19, #160]
  4108e8:	ldr	x1, [x19, #192]
  4108ec:	mov	x0, x26
  4108f0:	add	x2, x28, x8
  4108f4:	bl	406a70 <strncmp@plt>
  4108f8:	ldp	x13, x12, [x19, #232]
  4108fc:	cbnz	w0, 41081c <try_implicit_rule@@Base+0x2e4>
  410900:	ldrb	w8, [x24]
  410904:	ldrb	w9, [x28, x23]
  410908:	cmp	w8, w9
  41090c:	b.ne	41081c <try_implicit_rule@@Base+0x2e4>  // b.any
  410910:	cbz	w8, 4107cc <try_implicit_rule@@Base+0x294>
  410914:	add	x8, x23, x28
  410918:	cmp	x24, x8
  41091c:	b.eq	4107cc <try_implicit_rule@@Base+0x294>  // b.none
  410920:	add	x9, x24, #0x1
  410924:	ldrb	w9, [x9]
  410928:	ldrb	w10, [x8, #1]!
  41092c:	cmp	w9, w10
  410930:	b.ne	41081c <try_implicit_rule@@Base+0x2e4>  // b.any
  410934:	cbz	w9, 4107cc <try_implicit_rule@@Base+0x294>
  410938:	add	x0, x24, #0x2
  41093c:	add	x1, x8, #0x1
  410940:	bl	406cb0 <strcmp@plt>
  410944:	ldp	x13, x12, [x19, #232]
  410948:	cbnz	w0, 41081c <try_implicit_rule@@Base+0x2e4>
  41094c:	b	4107cc <try_implicit_rule@@Base+0x294>
  410950:	ldr	x8, [x22, #40]
  410954:	cbnz	x8, 4107e8 <try_implicit_rule@@Base+0x2b0>
  410958:	b	41081c <try_implicit_rule@@Base+0x2e4>
  41095c:	str	wzr, [x19, #180]
  410960:	str	wzr, [x19, #52]
  410964:	mov	x23, xzr
  410968:	mov	x28, xzr
  41096c:	ldr	w8, [x19, #52]
  410970:	cbz	w8, 411418 <try_implicit_rule@@Base+0xee0>
  410974:	cmp	w8, #0x1
  410978:	str	x28, [x19, #152]
  41097c:	b.eq	410998 <try_implicit_rule@@Base+0x460>  // b.none
  410980:	adrp	x3, 411000 <try_implicit_rule@@Base+0xac8>
  410984:	mov	w1, w8
  410988:	add	x3, x3, #0x878
  41098c:	mov	w2, #0x20                  	// #32
  410990:	mov	x0, x24
  410994:	bl	4068e0 <qsort@plt>
  410998:	ldr	w8, [x19, #180]
  41099c:	cbz	w8, 410a08 <try_implicit_rule@@Base+0x4d0>
  4109a0:	ldr	w8, [x19, #52]
  4109a4:	cbz	w8, 410a08 <try_implicit_rule@@Base+0x4d0>
  4109a8:	ldr	w9, [x19, #52]
  4109ac:	mov	x8, xzr
  4109b0:	mov	w9, w9
  4109b4:	b	4109c8 <try_implicit_rule@@Base+0x490>
  4109b8:	str	xzr, [x10]
  4109bc:	add	x8, x8, #0x1
  4109c0:	cmp	x8, x9
  4109c4:	b.eq	410a08 <try_implicit_rule@@Base+0x4d0>  // b.none
  4109c8:	add	x10, x24, x8, lsl #5
  4109cc:	ldr	x11, [x10]
  4109d0:	ldrb	w12, [x11, #50]
  4109d4:	cbnz	w12, 4109bc <try_implicit_rule@@Base+0x484>
  4109d8:	ldrh	w12, [x11, #48]
  4109dc:	cbz	w12, 4109bc <try_implicit_rule@@Base+0x484>
  4109e0:	ldr	x12, [x11, #8]
  4109e4:	mov	x13, xzr
  4109e8:	ldr	x14, [x12, x13, lsl #3]
  4109ec:	ldrb	w14, [x14, #1]
  4109f0:	cbz	w14, 4109b8 <try_implicit_rule@@Base+0x480>
  4109f4:	ldrh	w14, [x11, #48]
  4109f8:	add	x13, x13, #0x1
  4109fc:	cmp	w13, w14
  410a00:	b.cc	4109e8 <try_implicit_rule@@Base+0x4b0>  // b.lo, b.ul, b.last
  410a04:	b	4109bc <try_implicit_rule@@Base+0x484>
  410a08:	ldr	x10, [x19, #200]
  410a0c:	ldr	x9, [x19, #144]
  410a10:	ldr	w11, [x19, #52]
  410a14:	add	x22, x19, #0x114
  410a18:	add	x10, x10, x25
  410a1c:	str	x10, [x19, #72]
  410a20:	ldr	w10, [x19, #228]
  410a24:	sub	x9, x9, #0x1
  410a28:	cmp	w11, #0x0
  410a2c:	str	x9, [x19, #64]
  410a30:	add	w10, w10, #0x1
  410a34:	str	w10, [x19, #28]
  410a38:	ldr	w10, [x19, #108]
  410a3c:	add	x9, x25, #0x1
  410a40:	add	x9, x9, #0xf
  410a44:	mov	w8, wzr
  410a48:	add	w10, w10, #0x1
  410a4c:	str	w10, [x19, #24]
  410a50:	mov	w10, w11
  410a54:	str	x10, [x19, #88]
  410a58:	cset	w10, ne  // ne = any
  410a5c:	str	w10, [x19, #12]
  410a60:	add	x10, x22, x25
  410a64:	and	x9, x9, #0xfffffffffffffff0
  410a68:	str	xzr, [x19, #40]
  410a6c:	str	wzr, [x19, #100]
  410a70:	str	xzr, [x19, #112]
  410a74:	str	x10, [x19, #16]
  410a78:	str	x9, [x19]
  410a7c:	b	410aa0 <try_implicit_rule@@Base+0x568>
  410a80:	ldr	w10, [x19, #12]
  410a84:	mov	x28, xzr
  410a88:	mov	x20, x21
  410a8c:	tbnz	w10, #0, 411428 <try_implicit_rule@@Base+0xef0>
  410a90:	ldr	w10, [x19, #104]
  410a94:	mov	x9, x8
  410a98:	add	w8, w10, #0x1
  410a9c:	cbnz	w10, 411420 <try_implicit_rule@@Base+0xee8>
  410aa0:	str	w8, [x19, #104]
  410aa4:	ldr	w8, [x19, #52]
  410aa8:	cbz	w8, 410a80 <try_implicit_rule@@Base+0x548>
  410aac:	ldr	w10, [x19, #12]
  410ab0:	mov	x8, xzr
  410ab4:	mov	x20, x21
  410ab8:	b	410ae4 <try_implicit_rule@@Base+0x5ac>
  410abc:	ldr	w10, [x19, #192]
  410ac0:	mov	w8, wzr
  410ac4:	tbnz	w8, #0, 411400 <try_implicit_rule@@Base+0xec8>
  410ac8:	ldr	x8, [x19, #160]
  410acc:	ldr	x9, [x19, #88]
  410ad0:	add	x8, x8, #0x1
  410ad4:	cmp	x8, x9
  410ad8:	cset	w10, cc  // cc = lo, ul, last
  410adc:	cmp	x8, x9
  410ae0:	b.eq	41140c <try_implicit_rule@@Base+0xed4>  // b.none
  410ae4:	str	x8, [x19, #160]
  410ae8:	add	x8, x24, x8, lsl #5
  410aec:	ldr	x28, [x8]
  410af0:	str	x8, [x19, #232]
  410af4:	cbz	x28, 410ac0 <try_implicit_rule@@Base+0x588>
  410af8:	ldr	w8, [x19, #104]
  410afc:	cbz	w8, 410b08 <try_implicit_rule@@Base+0x5d0>
  410b00:	ldrb	w8, [x28, #50]
  410b04:	cbnz	w8, 410ac0 <try_implicit_rule@@Base+0x588>
  410b08:	ldr	x8, [x19, #160]
  410b0c:	str	w10, [x19, #192]
  410b10:	ldp	x10, x11, [x28, #16]
  410b14:	ldr	x12, [x28, #8]
  410b18:	add	x8, x24, x8, lsl #5
  410b1c:	ldr	w9, [x8, #16]
  410b20:	lsl	x13, x9, #3
  410b24:	ldr	w9, [x10, x9, lsl #2]
  410b28:	ldr	x10, [x11, x13]
  410b2c:	ldr	x11, [x12, x13]
  410b30:	ldrb	w12, [x8, #24]
  410b34:	ldr	x8, [x19, #136]
  410b38:	str	w12, [x19, #180]
  410b3c:	sub	x8, x8, x9
  410b40:	sub	x9, x10, x11
  410b44:	ldr	x10, [x19, #64]
  410b48:	add	x23, x8, #0x1
  410b4c:	add	x26, x10, x9
  410b50:	cbz	w12, 410b90 <try_implicit_rule@@Base+0x658>
  410b54:	ldr	x8, [x19, #112]
  410b58:	add	x26, x26, x25
  410b5c:	sub	x23, x23, x25
  410b60:	cbnz	x8, 410b90 <try_implicit_rule@@Base+0x658>
  410b64:	ldr	x9, [x19]
  410b68:	mov	x8, sp
  410b6c:	sub	x22, x8, x9
  410b70:	mov	sp, x22
  410b74:	ldr	x1, [x19, #144]
  410b78:	mov	x0, x22
  410b7c:	mov	x2, x25
  410b80:	bl	406790 <memcpy@plt>
  410b84:	str	x22, [x19, #112]
  410b88:	strb	wzr, [x22, x25]
  410b8c:	add	x22, x19, #0x114
  410b90:	ldr	w8, [x19, #180]
  410b94:	str	x26, [x19, #152]
  410b98:	cmp	w8, #0x0
  410b9c:	ldr	w8, [x27, #3236]
  410ba0:	csel	x9, x25, xzr, ne  // ne = any
  410ba4:	add	x9, x23, x9
  410ba8:	cmp	x9, #0x1, lsl #12
  410bac:	b.ls	410c04 <try_implicit_rule@@Base+0x6cc>  // b.plast
  410bb0:	tbz	w8, #3, 410abc <try_implicit_rule@@Base+0x584>
  410bb4:	ldr	w0, [x19, #228]
  410bb8:	bl	417e84 <print_spaces@@Base>
  410bbc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  410bc0:	mov	w2, #0x5                   	// #5
  410bc4:	mov	x0, xzr
  410bc8:	add	x1, x1, #0x3ec
  410bcc:	bl	406e50 <dcgettext@plt>
  410bd0:	ldr	w8, [x19, #180]
  410bd4:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  410bd8:	add	x9, x9, #0x989
  410bdc:	mov	w2, w23
  410be0:	cmp	w8, #0x0
  410be4:	ldr	x8, [x19, #112]
  410be8:	mov	x3, x26
  410bec:	csel	x1, x8, x9, ne  // ne = any
  410bf0:	bl	406ef0 <printf@plt>
  410bf4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  410bf8:	ldr	x0, [x8, #2512]
  410bfc:	bl	406d80 <fflush@plt>
  410c00:	b	410abc <try_implicit_rule@@Base+0x584>
  410c04:	tbz	w8, #3, 410c3c <try_implicit_rule@@Base+0x704>
  410c08:	ldr	w0, [x19, #228]
  410c0c:	bl	417e84 <print_spaces@@Base>
  410c10:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  410c14:	mov	w2, #0x5                   	// #5
  410c18:	mov	x0, xzr
  410c1c:	add	x1, x1, #0x406
  410c20:	bl	406e50 <dcgettext@plt>
  410c24:	ldr	x2, [x19, #152]
  410c28:	mov	w1, w23
  410c2c:	bl	406ef0 <printf@plt>
  410c30:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  410c34:	ldr	x0, [x8, #2512]
  410c38:	bl	406d80 <fflush@plt>
  410c3c:	ldr	w8, [x19, #180]
  410c40:	cbz	w8, 410c6c <try_implicit_rule@@Base+0x734>
  410c44:	ldr	x1, [x19, #144]
  410c48:	add	x0, x19, #0x114
  410c4c:	mov	x2, x25
  410c50:	bl	406790 <memcpy@plt>
  410c54:	ldr	x0, [x19, #16]
  410c58:	ldr	x1, [x19, #152]
  410c5c:	mov	x2, x23
  410c60:	bl	406790 <memcpy@plt>
  410c64:	add	x8, x23, x25
  410c68:	b	410c80 <try_implicit_rule@@Base+0x748>
  410c6c:	ldr	x1, [x19, #152]
  410c70:	add	x0, x19, #0x114
  410c74:	mov	x2, x23
  410c78:	bl	406790 <memcpy@plt>
  410c7c:	mov	x8, x23
  410c80:	strb	wzr, [x22, x8]
  410c84:	ldr	w10, [x19, #192]
  410c88:	mov	x9, x28
  410c8c:	ldr	x28, [x28, #32]
  410c90:	cbz	x28, 4113f4 <try_implicit_rule@@Base+0xebc>
  410c94:	ldr	x8, [x19, #216]
  410c98:	str	x23, [x19, #120]
  410c9c:	str	x9, [x19, #32]
  410ca0:	str	x22, [x8, #40]
  410ca4:	mov	w8, #0x1                   	// #1
  410ca8:	strb	w8, [x9, #51]
  410cac:	ldr	x0, [x28, #8]
  410cb0:	cbnz	x0, 410cbc <try_implicit_rule@@Base+0x784>
  410cb4:	ldr	x8, [x28, #16]
  410cb8:	ldr	x0, [x8]
  410cbc:	ldr	x23, [x19, #200]
  410cc0:	mov	w22, wzr
  410cc4:	mov	w25, wzr
  410cc8:	str	wzr, [x19, #240]
  410ccc:	str	xzr, [x19, #80]
  410cd0:	str	x21, [x19, #168]
  410cd4:	b	410d00 <try_implicit_rule@@Base+0x7c8>
  410cd8:	ldr	x0, [x19, #264]
  410cdc:	bl	418388 <free_ns_chain@@Base>
  410ce0:	ldr	w8, [x19, #240]
  410ce4:	ldp	x23, x0, [x19, #200]
  410ce8:	ldr	w10, [x19, #192]
  410cec:	cmp	w8, #0x0
  410cf0:	mov	w8, #0x1c                  	// #28
  410cf4:	csel	w8, wzr, w8, eq  // eq = none
  410cf8:	cmp	w8, #0x1c
  410cfc:	b.eq	4113bc <try_implicit_rule@@Base+0xe84>  // b.none
  410d00:	cbz	x0, 410dd0 <try_implicit_rule@@Base+0x898>
  410d04:	ldrb	w8, [x28, #33]
  410d08:	tbnz	w8, #3, 410d8c <try_implicit_rule@@Base+0x854>
  410d0c:	mov	w1, #0x25                  	// #37
  410d10:	mov	x20, x0
  410d14:	bl	406d10 <strchr@plt>
  410d18:	str	x0, [x19, #256]
  410d1c:	cbz	x0, 410e48 <try_implicit_rule@@Base+0x910>
  410d20:	ldr	w8, [x19, #180]
  410d24:	mov	x24, x0
  410d28:	mov	x27, x23
  410d2c:	cbz	w8, 410d44 <try_implicit_rule@@Base+0x80c>
  410d30:	ldr	x1, [x19, #144]
  410d34:	ldr	x2, [x19, #128]
  410d38:	mov	x0, x23
  410d3c:	bl	406790 <memcpy@plt>
  410d40:	ldr	x27, [x19, #72]
  410d44:	ldr	x8, [x19, #256]
  410d48:	mov	x0, x27
  410d4c:	mov	x1, x20
  410d50:	sub	x23, x8, x20
  410d54:	mov	x2, x23
  410d58:	bl	406790 <memcpy@plt>
  410d5c:	ldr	x20, [x19, #120]
  410d60:	ldr	x1, [x19, #152]
  410d64:	add	x23, x27, x23
  410d68:	mov	x0, x23
  410d6c:	mov	x2, x20
  410d70:	bl	406790 <memcpy@plt>
  410d74:	add	x0, x23, x20
  410d78:	ldr	x23, [x19, #200]
  410d7c:	add	x1, x24, #0x1
  410d80:	bl	406d90 <strcpy@plt>
  410d84:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  410d88:	b	410e54 <try_implicit_rule@@Base+0x91c>
  410d8c:	add	x1, x19, #0xf8
  410d90:	bl	4118a0 <stemlen_compare@@Base+0x28>
  410d94:	cbz	x0, 410dc0 <try_implicit_rule@@Base+0x888>
  410d98:	ldr	x8, [x19, #248]
  410d9c:	mov	x26, x0
  410da0:	cbnz	w25, 410dec <try_implicit_rule@@Base+0x8b4>
  410da4:	cmp	x8, #0x1
  410da8:	b.ne	410dec <try_implicit_rule@@Base+0x8b4>  // b.any
  410dac:	ldrb	w9, [x26]
  410db0:	cmp	w9, #0x7c
  410db4:	b.ne	410dec <try_implicit_rule@@Base+0x8b4>  // b.any
  410db8:	add	x0, x26, #0x1
  410dbc:	mov	w25, #0x1                   	// #1
  410dc0:	ldr	w10, [x19, #192]
  410dc4:	mov	w8, #0x1b                  	// #27
  410dc8:	cbnz	w8, 410cf8 <try_implicit_rule@@Base+0x7c0>
  410dcc:	b	411048 <try_implicit_rule@@Base+0xb10>
  410dd0:	ldr	x28, [x28]
  410dd4:	cbz	x28, 410eb0 <try_implicit_rule@@Base+0x978>
  410dd8:	ldr	x0, [x28, #8]
  410ddc:	cbnz	x0, 410d04 <try_implicit_rule@@Base+0x7cc>
  410de0:	ldr	x8, [x28, #16]
  410de4:	ldr	x0, [x8]
  410de8:	b	410d04 <try_implicit_rule@@Base+0x7cc>
  410dec:	add	x1, x26, x8
  410df0:	mov	w2, #0x25                  	// #37
  410df4:	mov	x0, x26
  410df8:	bl	4180f4 <lindex@@Base>
  410dfc:	mov	x24, x0
  410e00:	str	x0, [x19, #256]
  410e04:	cbz	x0, 410ebc <try_implicit_rule@@Base+0x984>
  410e08:	sub	x27, x24, x26
  410e0c:	mov	x0, x23
  410e10:	mov	x1, x26
  410e14:	mov	x2, x27
  410e18:	bl	406790 <memcpy@plt>
  410e1c:	ldr	w9, [x19, #180]
  410e20:	add	x8, x23, x27
  410e24:	cbz	w9, 410ee0 <try_implicit_rule@@Base+0x9a8>
  410e28:	mov	w9, #0x29                  	// #41
  410e2c:	strb	w9, [x8, #4]
  410e30:	mov	w9, #0x2824                	// #10276
  410e34:	movk	w9, #0x462a, lsl #16
  410e38:	str	w9, [x8]
  410e3c:	mov	w20, #0x1                   	// #1
  410e40:	mov	w9, #0x5                   	// #5
  410e44:	b	410ef0 <try_implicit_rule@@Base+0x9b8>
  410e48:	mov	x0, x23
  410e4c:	mov	x1, x20
  410e50:	bl	406d90 <strcpy@plt>
  410e54:	add	x0, x19, #0x100
  410e58:	mov	w1, #0x28                  	// #40
  410e5c:	mov	w2, #0x1                   	// #1
  410e60:	mov	w4, #0x20                  	// #32
  410e64:	mov	x3, xzr
  410e68:	str	x23, [x19, #256]
  410e6c:	bl	41b484 <parse_file_seq@@Base>
  410e70:	str	x0, [x19, #264]
  410e74:	cbz	x0, 411048 <try_implicit_rule@@Base+0xb10>
  410e78:	ldrh	w8, [x28, #32]
  410e7c:	ldrh	w9, [x0, #32]
  410e80:	add	w22, w22, #0x1
  410e84:	lsr	w8, w8, #9
  410e88:	bfi	w9, w8, #9, #1
  410e8c:	strh	w9, [x0, #32]
  410e90:	ldrh	w8, [x28, #32]
  410e94:	and	w9, w9, #0xffffefff
  410e98:	and	w8, w8, #0x1000
  410e9c:	orr	w8, w9, w8
  410ea0:	strh	w8, [x0, #32]
  410ea4:	ldr	x0, [x0]
  410ea8:	cbnz	x0, 410e78 <try_implicit_rule@@Base+0x940>
  410eac:	b	411048 <try_implicit_rule@@Base+0xb10>
  410eb0:	mov	x0, xzr
  410eb4:	mov	w8, #0x1c                  	// #28
  410eb8:	b	410cf8 <try_implicit_rule@@Base+0x7c0>
  410ebc:	ldr	x23, [x19, #248]
  410ec0:	ldr	x0, [x19, #200]
  410ec4:	mov	x1, x26
  410ec8:	mov	x2, x23
  410ecc:	bl	406790 <memcpy@plt>
  410ed0:	ldr	x8, [x19, #200]
  410ed4:	add	x8, x8, x23
  410ed8:	ldr	x23, [x19, #200]
  410edc:	b	410f20 <try_implicit_rule@@Base+0x9e8>
  410ee0:	mov	w9, #0x2a24                	// #10788
  410ee4:	mov	w20, wzr
  410ee8:	strh	w9, [x8]
  410eec:	mov	w9, #0x2                   	// #2
  410ef0:	ldr	x10, [x19, #248]
  410ef4:	add	x23, x8, x9
  410ef8:	mvn	x8, x27
  410efc:	add	x1, x24, #0x1
  410f00:	add	x24, x10, x8
  410f04:	mov	x0, x23
  410f08:	mov	x2, x24
  410f0c:	bl	406790 <memcpy@plt>
  410f10:	add	x8, x23, x24
  410f14:	ldr	x23, [x19, #200]
  410f18:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  410f1c:	mov	w24, w20
  410f20:	ldr	x9, [x19, #248]
  410f24:	strb	wzr, [x8]
  410f28:	ldr	w8, [x19, #100]
  410f2c:	add	x9, x26, x9
  410f30:	str	x9, [x19, #208]
  410f34:	cbz	w8, 410f48 <try_implicit_rule@@Base+0xa10>
  410f38:	ldr	x8, [x19, #80]
  410f3c:	cbz	w8, 410f6c <try_implicit_rule@@Base+0xa34>
  410f40:	ldr	x20, [x19, #216]
  410f44:	b	410fa0 <try_implicit_rule@@Base+0xa68>
  410f48:	ldr	x20, [x19, #216]
  410f4c:	mov	w1, wzr
  410f50:	mov	x0, x20
  410f54:	bl	421d3c <initialize_file_variables@@Base>
  410f58:	mov	x0, x20
  410f5c:	bl	407cec <set_file_variables@@Base>
  410f60:	mov	w8, #0x1                   	// #1
  410f64:	str	w8, [x19, #100]
  410f68:	b	410fa0 <try_implicit_rule@@Base+0xa68>
  410f6c:	ldr	x20, [x19, #216]
  410f70:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  410f74:	mov	w1, #0x1                   	// #1
  410f78:	mov	w3, #0x6                   	// #6
  410f7c:	ldr	x8, [x20, #80]
  410f80:	ldr	x2, [x20, #40]
  410f84:	add	x0, x0, #0xb5f
  410f88:	mov	w4, wzr
  410f8c:	ldr	x5, [x8, #8]
  410f90:	mov	w8, #0x1                   	// #1
  410f94:	mov	x6, xzr
  410f98:	str	x8, [x19, #80]
  410f9c:	bl	421720 <define_variable_in_set@@Base>
  410fa0:	mov	x0, x23
  410fa4:	mov	x1, x20
  410fa8:	mov	w26, #0x100                 	// #256
  410fac:	bl	40a59c <variable_expand_for_file@@Base>
  410fb0:	ldr	x8, [x19, #112]
  410fb4:	cmp	w24, #0x0
  410fb8:	add	x20, x19, #0x108
  410fbc:	str	x0, [x19, #256]
  410fc0:	csel	x24, xzr, x8, eq  // eq = none
  410fc4:	b	410fd4 <try_implicit_rule@@Base+0xa9c>
  410fc8:	ldr	x8, [x19, #256]
  410fcc:	ldrb	w8, [x8]
  410fd0:	cbz	w8, 41103c <try_implicit_rule@@Base+0xb04>
  410fd4:	cmp	w25, #0x0
  410fd8:	csinc	w2, w26, wzr, eq  // eq = none
  410fdc:	add	x0, x19, #0x100
  410fe0:	mov	w1, #0x28                  	// #40
  410fe4:	mov	x3, x24
  410fe8:	mov	w4, wzr
  410fec:	bl	41b484 <parse_file_seq@@Base>
  410ff0:	str	x0, [x20]
  410ff4:	cbnz	x0, 411020 <try_implicit_rule@@Base+0xae8>
  410ff8:	ldr	x8, [x19, #256]
  410ffc:	ldrb	w9, [x8]
  411000:	cmp	w9, #0x7c
  411004:	b.ne	410fc8 <try_implicit_rule@@Base+0xa90>  // b.any
  411008:	add	x8, x8, #0x1
  41100c:	mov	w25, #0x1                   	// #1
  411010:	str	x8, [x19, #256]
  411014:	b	410fc8 <try_implicit_rule@@Base+0xa90>
  411018:	ldr	x0, [x20]
  41101c:	cbz	x0, 410ff8 <try_implicit_rule@@Base+0xac0>
  411020:	mov	x20, x0
  411024:	add	w22, w22, #0x1
  411028:	cbz	w25, 411018 <try_implicit_rule@@Base+0xae0>
  41102c:	ldrh	w8, [x20, #32]
  411030:	orr	w8, w8, #0x200
  411034:	strh	w8, [x20, #32]
  411038:	b	411018 <try_implicit_rule@@Base+0xae0>
  41103c:	ldr	w10, [x19, #192]
  411040:	ldr	x0, [x19, #208]
  411044:	cbnz	w8, 410cf8 <try_implicit_rule@@Base+0x7c0>
  411048:	ldr	x8, [x19, #184]
  41104c:	str	x0, [x19, #208]
  411050:	cmp	w22, w8
  411054:	b.ls	411088 <try_implicit_rule@@Base+0xb50>  // b.plast
  411058:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41105c:	ldr	w8, [x9, #276]
  411060:	ldr	x0, [x19, #168]
  411064:	cmp	w8, w22
  411068:	csel	w8, w8, w22, hi  // hi = pmore
  41106c:	lsl	x1, x8, #5
  411070:	sub	x20, x21, x0
  411074:	str	w8, [x9, #276]
  411078:	str	x8, [x19, #184]
  41107c:	bl	41803c <xrealloc@@Base>
  411080:	add	x21, x0, x20
  411084:	str	x0, [x19, #168]
  411088:	ldr	x23, [x19, #264]
  41108c:	cbz	x23, 410cd8 <try_implicit_rule@@Base+0x7a0>
  411090:	ldr	x20, [x28, #8]
  411094:	ldr	x24, [x23, #8]
  411098:	cbnz	x20, 4110a4 <try_implicit_rule@@Base+0xb6c>
  41109c:	ldr	x8, [x28, #16]
  4110a0:	ldr	x20, [x8]
  4110a4:	mov	x0, x24
  4110a8:	bl	4095e0 <file_impossible_p@@Base>
  4110ac:	cbz	w0, 411110 <try_implicit_rule@@Base+0xbd8>
  4110b0:	ldrb	w8, [x27, #3236]
  4110b4:	tbz	w8, #3, 4110f8 <try_implicit_rule@@Base+0xbc0>
  4110b8:	ldr	w0, [x19, #228]
  4110bc:	bl	417e84 <print_spaces@@Base>
  4110c0:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  4110c4:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  4110c8:	cmp	x24, x20
  4110cc:	add	x8, x8, #0x461
  4110d0:	add	x9, x9, #0x433
  4110d4:	csel	x1, x9, x8, eq  // eq = none
  4110d8:	mov	w2, #0x5                   	// #5
  4110dc:	mov	x0, xzr
  4110e0:	bl	406e50 <dcgettext@plt>
  4110e4:	ldr	x1, [x23, #8]
  4110e8:	bl	406ef0 <printf@plt>
  4110ec:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4110f0:	ldr	x0, [x8, #2512]
  4110f4:	bl	406d80 <fflush@plt>
  4110f8:	ldr	x8, [x19, #232]
  4110fc:	str	xzr, [x8]
  411100:	mov	w8, #0x1                   	// #1
  411104:	str	w8, [x19, #240]
  411108:	mov	w8, #0x25                  	// #37
  41110c:	b	411260 <try_implicit_rule@@Base+0xd28>
  411110:	movi	v0.2d, #0x0
  411114:	stp	q0, q0, [x21]
  411118:	ldrh	w8, [x23, #32]
  41111c:	ldrb	w9, [x21, #24]
  411120:	bfxil	w9, w8, #9, #1
  411124:	strb	w9, [x21, #24]
  411128:	ldrh	w8, [x23, #32]
  41112c:	and	w9, w9, #0xfffffffd
  411130:	lsr	w8, w8, #11
  411134:	and	w8, w8, #0x2
  411138:	orr	w8, w8, w9
  41113c:	strb	w8, [x21, #24]
  411140:	ldrb	w8, [x27, #3236]
  411144:	tbz	w8, #3, 411188 <try_implicit_rule@@Base+0xc50>
  411148:	ldr	w0, [x19, #228]
  41114c:	bl	417e84 <print_spaces@@Base>
  411150:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  411154:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  411158:	cmp	x24, x20
  41115c:	add	x8, x8, #0x4b3
  411160:	add	x9, x9, #0x493
  411164:	csel	x1, x9, x8, eq  // eq = none
  411168:	mov	w2, #0x5                   	// #5
  41116c:	mov	x0, xzr
  411170:	bl	406e50 <dcgettext@plt>
  411174:	ldr	x1, [x23, #8]
  411178:	bl	406ef0 <printf@plt>
  41117c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411180:	ldr	x0, [x8, #2512]
  411184:	bl	406d80 <fflush@plt>
  411188:	ldr	x8, [x19, #216]
  41118c:	ldr	x20, [x8, #24]
  411190:	cmp	x20, #0x0
  411194:	cset	w27, ne  // ne = any
  411198:	cbz	x20, 41122c <try_implicit_rule@@Base+0xcf4>
  41119c:	ldr	x26, [x23, #8]
  4111a0:	add	x24, x26, #0x1
  4111a4:	b	4111c8 <try_implicit_rule@@Base+0xc90>
  4111a8:	add	x0, x8, #0x1
  4111ac:	mov	x1, x24
  4111b0:	bl	406cb0 <strcmp@plt>
  4111b4:	cbz	w0, 41122c <try_implicit_rule@@Base+0xcf4>
  4111b8:	ldr	x20, [x20]
  4111bc:	cmp	x20, #0x0
  4111c0:	cset	w27, ne  // ne = any
  4111c4:	cbz	x20, 41122c <try_implicit_rule@@Base+0xcf4>
  4111c8:	ldr	x8, [x20, #8]
  4111cc:	mov	x9, x8
  4111d0:	cbnz	x8, 4111dc <try_implicit_rule@@Base+0xca4>
  4111d4:	ldr	x9, [x20, #16]
  4111d8:	ldr	x9, [x9]
  4111dc:	cmp	x9, x26
  4111e0:	b.eq	41122c <try_implicit_rule@@Base+0xcf4>  // b.none
  4111e4:	mov	x9, x8
  4111e8:	cbnz	x8, 4111f4 <try_implicit_rule@@Base+0xcbc>
  4111ec:	ldr	x9, [x20, #16]
  4111f0:	ldr	x9, [x9]
  4111f4:	ldrb	w9, [x9]
  4111f8:	ldrb	w10, [x26]
  4111fc:	cmp	w9, w10
  411200:	b.ne	4111b8 <try_implicit_rule@@Base+0xc80>  // b.any
  411204:	mov	x9, x8
  411208:	cbnz	x8, 411214 <try_implicit_rule@@Base+0xcdc>
  41120c:	ldr	x9, [x20, #16]
  411210:	ldr	x9, [x9]
  411214:	ldrb	w9, [x9]
  411218:	cbz	w9, 41122c <try_implicit_rule@@Base+0xcf4>
  41121c:	cbnz	x8, 4111a8 <try_implicit_rule@@Base+0xc70>
  411220:	ldr	x8, [x20, #16]
  411224:	ldr	x8, [x8]
  411228:	b	4111a8 <try_implicit_rule@@Base+0xc70>
  41122c:	ldr	x0, [x23, #8]
  411230:	tbz	w27, #0, 41123c <try_implicit_rule@@Base+0xd04>
  411234:	str	x0, [x21], #32
  411238:	b	411258 <try_implicit_rule@@Base+0xd20>
  41123c:	bl	40a798 <lookup_file@@Base>
  411240:	cbnz	x0, 411250 <try_implicit_rule@@Base+0xd18>
  411244:	ldr	x0, [x23, #8]
  411248:	bl	4093a0 <file_exists_p@@Base>
  41124c:	cbz	w0, 411274 <try_implicit_rule@@Base+0xd3c>
  411250:	ldr	x8, [x23, #8]
  411254:	str	x8, [x21], #32
  411258:	mov	w8, #0x27                  	// #39
  41125c:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  411260:	cmp	w8, #0x25
  411264:	b.eq	410cd8 <try_implicit_rule@@Base+0x7a0>  // b.none
  411268:	ldr	x23, [x23]
  41126c:	cbnz	x23, 411090 <try_implicit_rule@@Base+0xb58>
  411270:	b	410cd8 <try_implicit_rule@@Base+0x7a0>
  411274:	ldr	x0, [x23, #8]
  411278:	mov	x1, xzr
  41127c:	mov	x2, xzr
  411280:	mov	x3, xzr
  411284:	bl	423a64 <vpath_search@@Base>
  411288:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  41128c:	cbz	x0, 4112e4 <try_implicit_rule@@Base+0xdac>
  411290:	ldrb	w8, [x27, #3236]
  411294:	tbz	w8, #3, 4112d0 <try_implicit_rule@@Base+0xd98>
  411298:	mov	x24, x0
  41129c:	ldr	w0, [x19, #228]
  4112a0:	bl	417e84 <print_spaces@@Base>
  4112a4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4112a8:	mov	w2, #0x5                   	// #5
  4112ac:	mov	x0, xzr
  4112b0:	add	x1, x1, #0x4d7
  4112b4:	bl	406e50 <dcgettext@plt>
  4112b8:	ldr	x1, [x23, #8]
  4112bc:	mov	x2, x24
  4112c0:	bl	406ef0 <printf@plt>
  4112c4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4112c8:	ldr	x0, [x8, #2512]
  4112cc:	bl	406d80 <fflush@plt>
  4112d0:	ldr	x8, [x23, #8]
  4112d4:	str	x8, [x21], #32
  4112d8:	mov	w8, #0x27                  	// #39
  4112dc:	cbnz	w8, 411260 <try_implicit_rule@@Base+0xd28>
  4112e0:	b	4112ec <try_implicit_rule@@Base+0xdb4>
  4112e4:	mov	w8, wzr
  4112e8:	cbnz	w8, 411260 <try_implicit_rule@@Base+0xd28>
  4112ec:	ldr	w8, [x19, #104]
  4112f0:	cbz	w8, 411100 <try_implicit_rule@@Base+0xbc8>
  4112f4:	ldrb	w8, [x27, #3236]
  4112f8:	tbz	w8, #3, 41132c <try_implicit_rule@@Base+0xdf4>
  4112fc:	ldr	w0, [x19, #228]
  411300:	bl	417e84 <print_spaces@@Base>
  411304:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  411308:	mov	w2, #0x5                   	// #5
  41130c:	mov	x0, xzr
  411310:	add	x1, x1, #0x4fe
  411314:	bl	406e50 <dcgettext@plt>
  411318:	ldr	x1, [x23, #8]
  41131c:	bl	406ef0 <printf@plt>
  411320:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411324:	ldr	x0, [x8, #2512]
  411328:	bl	406d80 <fflush@plt>
  41132c:	ldr	x20, [x19, #40]
  411330:	cbnz	x20, 41133c <try_implicit_rule@@Base+0xe04>
  411334:	sub	x20, sp, #0x90
  411338:	mov	sp, x20
  41133c:	movi	v0.2d, #0x0
  411340:	stp	q0, q0, [x20, #112]
  411344:	stp	q0, q0, [x20, #80]
  411348:	stp	q0, q0, [x20, #48]
  41134c:	stp	q0, q0, [x20, #16]
  411350:	str	q0, [x20]
  411354:	ldr	x8, [x23, #8]
  411358:	mov	x0, x20
  41135c:	mov	w1, wzr
  411360:	str	x8, [x20]
  411364:	ldp	w3, w2, [x19, #24]
  411368:	bl	410624 <try_implicit_rule@@Base+0xec>
  41136c:	cbz	w0, 411394 <try_implicit_rule@@Base+0xe5c>
  411370:	ldr	x8, [x20]
  411374:	str	xzr, [x19, #40]
  411378:	str	x8, [x21, #8]
  41137c:	ldr	x8, [x23, #8]
  411380:	str	x8, [x20]
  411384:	str	x20, [x21, #16]
  411388:	str	x8, [x21], #32
  41138c:	mov	w8, #0x27                  	// #39
  411390:	b	411260 <try_implicit_rule@@Base+0xd28>
  411394:	ldr	x0, [x20, #80]
  411398:	cbz	x0, 4113a0 <try_implicit_rule@@Base+0xe68>
  41139c:	bl	42196c <free_variable_set@@Base>
  4113a0:	ldr	x0, [x20, #88]
  4113a4:	str	x20, [x19, #40]
  4113a8:	cbz	x0, 4113b0 <try_implicit_rule@@Base+0xe78>
  4113ac:	bl	42196c <free_variable_set@@Base>
  4113b0:	ldr	x0, [x23, #8]
  4113b4:	bl	409450 <file_impossible@@Base>
  4113b8:	b	411100 <try_implicit_rule@@Base+0xbc8>
  4113bc:	ldr	x8, [x19, #216]
  4113c0:	ldr	x28, [x19, #32]
  4113c4:	mov	x20, x21
  4113c8:	ldr	x21, [x19, #168]
  4113cc:	str	xzr, [x8, #40]
  4113d0:	ldr	w8, [x19, #240]
  4113d4:	strb	wzr, [x28, #51]
  4113d8:	ldr	x24, [x19, #56]
  4113dc:	ldp	x23, x25, [x19, #120]
  4113e0:	cmp	w8, #0x0
  4113e4:	cset	w8, eq  // eq = none
  4113e8:	add	x22, x19, #0x114
  4113ec:	tbz	w8, #0, 410ac8 <try_implicit_rule@@Base+0x590>
  4113f0:	b	411400 <try_implicit_rule@@Base+0xec8>
  4113f4:	mov	w8, #0x1                   	// #1
  4113f8:	mov	x28, x9
  4113fc:	tbz	w8, #0, 410ac8 <try_implicit_rule@@Base+0x590>
  411400:	ldr	x8, [x19, #160]
  411404:	tbz	w10, #0, 410a90 <try_implicit_rule@@Base+0x558>
  411408:	b	411428 <try_implicit_rule@@Base+0xef0>
  41140c:	ldr	w8, [x19, #52]
  411410:	tbz	w10, #0, 410a90 <try_implicit_rule@@Base+0x558>
  411414:	b	411428 <try_implicit_rule@@Base+0xef0>
  411418:	mov	x28, xzr
  41141c:	b	411840 <try_implicit_rule@@Base+0x1308>
  411420:	mov	x28, xzr
  411424:	mov	x8, x9
  411428:	cbz	x28, 411840 <try_implicit_rule@@Base+0x1308>
  41142c:	mov	x27, x8
  411430:	ldr	w8, [x19, #108]
  411434:	ldr	x22, [x19, #216]
  411438:	mov	x26, x23
  41143c:	cbz	w8, 411458 <try_implicit_rule@@Base+0xf20>
  411440:	mov	w9, w27
  411444:	add	x9, x24, x9, lsl #5
  411448:	ldr	x8, [x28, #8]
  41144c:	ldr	w9, [x9, #16]
  411450:	ldr	x8, [x8, x9, lsl #3]
  411454:	str	x8, [x22]
  411458:	cmp	x20, x21
  41145c:	b.ls	411608 <try_implicit_rule@@Base+0x10d0>  // b.plast
  411460:	ldr	x9, [x19, #56]
  411464:	mov	w8, w27
  411468:	mov	w25, #0x4900                	// #18688
  41146c:	add	x23, x9, x8, lsl #5
  411470:	b	41149c <try_implicit_rule@@Base+0xf64>
  411474:	ldr	w9, [x8, #136]
  411478:	orr	w9, w9, #0x100
  41147c:	str	w9, [x8, #136]
  411480:	ldr	x9, [x19, #216]
  411484:	cmp	x20, x21
  411488:	ldr	x8, [x9, #24]
  41148c:	str	x8, [x22]
  411490:	str	x22, [x9, #24]
  411494:	mov	x22, x9
  411498:	b.ls	411608 <try_implicit_rule@@Base+0x10d0>  // b.plast
  41149c:	ldur	x24, [x20, #-16]
  4114a0:	cbz	x24, 41156c <try_implicit_rule@@Base+0x1034>
  4114a4:	ldr	x0, [x24]
  4114a8:	bl	40a798 <lookup_file@@Base>
  4114ac:	cbz	x0, 4114c4 <try_implicit_rule@@Base+0xf8c>
  4114b0:	ldr	w8, [x0, #136]
  4114b4:	mov	x22, x0
  4114b8:	orr	w8, w8, #0x8000
  4114bc:	str	w8, [x0, #136]
  4114c0:	b	4114d0 <try_implicit_rule@@Base+0xf98>
  4114c4:	ldr	x0, [x24]
  4114c8:	bl	40a830 <enter_file@@Base>
  4114cc:	mov	x22, x0
  4114d0:	ldr	x8, [x24, #24]
  4114d4:	ldr	w9, [x22, #136]
  4114d8:	str	x8, [x22, #24]
  4114dc:	ldr	x8, [x24, #32]
  4114e0:	str	x8, [x22, #32]
  4114e4:	ldr	x8, [x24, #40]
  4114e8:	str	x8, [x22, #40]
  4114ec:	ldr	x8, [x24, #80]
  4114f0:	str	x8, [x22, #80]
  4114f4:	ldr	x8, [x24, #88]
  4114f8:	str	x8, [x22, #88]
  4114fc:	ldr	w8, [x24, #136]
  411500:	lsr	w8, w8, #18
  411504:	bfi	w9, w8, #18, #1
  411508:	str	w9, [x22, #136]
  41150c:	ldr	x8, [x24, #48]
  411510:	orr	w9, w9, w25
  411514:	str	w9, [x22, #136]
  411518:	str	x8, [x22, #48]
  41151c:	ldur	x0, [x20, #-24]
  411520:	bl	40a798 <lookup_file@@Base>
  411524:	cbz	x0, 41153c <try_implicit_rule@@Base+0x1004>
  411528:	ldrb	w8, [x0, #136]
  41152c:	tbz	w8, #5, 41153c <try_implicit_rule@@Base+0x1004>
  411530:	ldr	w8, [x22, #136]
  411534:	orr	w8, w8, #0x20
  411538:	str	w8, [x22, #136]
  41153c:	ldr	x22, [x22, #24]
  411540:	cbz	x22, 41156c <try_implicit_rule@@Base+0x1034>
  411544:	ldr	x0, [x22, #8]
  411548:	bl	40a830 <enter_file@@Base>
  41154c:	stp	xzr, x0, [x22, #8]
  411550:	ldrh	w8, [x22, #32]
  411554:	ldr	w9, [x0, #136]
  411558:	and	w8, w8, #0x100
  41155c:	orr	w8, w9, w8
  411560:	str	w8, [x0, #136]
  411564:	ldr	x22, [x22]
  411568:	cbnz	x22, 411544 <try_implicit_rule@@Base+0x100c>
  41156c:	mov	w0, #0x28                  	// #40
  411570:	bl	418094 <xcalloc@@Base>
  411574:	ldurb	w8, [x20, #-8]
  411578:	ldrh	w9, [x0, #32]
  41157c:	mov	x22, x0
  411580:	and	w8, w8, #0x1
  411584:	bfi	w9, w8, #9, #1
  411588:	strh	w9, [x0, #32]
  41158c:	ldurb	w8, [x20, #-8]
  411590:	and	w9, w9, #0xffffefff
  411594:	ubfx	w8, w8, #1, #1
  411598:	orr	w8, w9, w8, lsl #12
  41159c:	strh	w8, [x0, #32]
  4115a0:	ldur	x0, [x20, #-32]
  4115a4:	bl	420f28 <strcache_add@@Base>
  4115a8:	ldr	w8, [x19, #108]
  4115ac:	mov	x24, x0
  4115b0:	cbz	w8, 4115bc <try_implicit_rule@@Base+0x1084>
  4115b4:	str	x24, [x22, #8]
  4115b8:	b	4115d8 <try_implicit_rule@@Base+0x10a0>
  4115bc:	mov	x0, x24
  4115c0:	bl	40a798 <lookup_file@@Base>
  4115c4:	str	x0, [x22, #16]
  4115c8:	cbnz	x0, 4115d8 <try_implicit_rule@@Base+0x10a0>
  4115cc:	mov	x0, x24
  4115d0:	bl	40a830 <enter_file@@Base>
  4115d4:	str	x0, [x22, #16]
  4115d8:	ldur	x8, [x20, #-16]
  4115dc:	sub	x20, x20, #0x20
  4115e0:	cbnz	x8, 411480 <try_implicit_rule@@Base+0xf48>
  4115e4:	ldr	x8, [x23]
  4115e8:	ldrb	w8, [x8, #50]
  4115ec:	cbz	w8, 411480 <try_implicit_rule@@Base+0xf48>
  4115f0:	ldr	x8, [x22, #16]
  4115f4:	cbnz	x8, 411474 <try_implicit_rule@@Base+0xf3c>
  4115f8:	ldrh	w8, [x22, #32]
  4115fc:	orr	w8, w8, #0x100
  411600:	strh	w8, [x22, #32]
  411604:	b	411480 <try_implicit_rule@@Base+0xf48>
  411608:	ldr	x24, [x19, #56]
  41160c:	mov	w20, w27
  411610:	add	x8, x24, x20, lsl #5
  411614:	ldrb	w8, [x8, #24]
  411618:	cbz	w8, 411664 <try_implicit_rule@@Base+0x112c>
  41161c:	mov	x25, x26
  411620:	ldr	x26, [x19, #128]
  411624:	ldr	x1, [x19, #144]
  411628:	add	x0, x19, #0x114
  41162c:	add	x23, x19, #0x114
  411630:	mov	x2, x26
  411634:	add	x22, x25, x26
  411638:	bl	406790 <memcpy@plt>
  41163c:	ldr	x1, [x19, #152]
  411640:	add	x0, x23, x26
  411644:	mov	x2, x25
  411648:	bl	406790 <memcpy@plt>
  41164c:	add	x0, x19, #0x114
  411650:	strb	wzr, [x23, x22]
  411654:	bl	420f28 <strcache_add@@Base>
  411658:	mov	x23, x22
  41165c:	ldr	x22, [x19, #216]
  411660:	b	411674 <try_implicit_rule@@Base+0x113c>
  411664:	ldr	x0, [x19, #152]
  411668:	mov	x1, x26
  41166c:	mov	x23, x26
  411670:	bl	421000 <strcache_add_len@@Base>
  411674:	str	x0, [x22, #40]
  411678:	ldr	w8, [x22, #136]
  41167c:	ldr	x9, [x28, #40]
  411680:	add	x20, x24, x20, lsl #5
  411684:	orr	w8, w8, #0x800
  411688:	str	x9, [x22, #32]
  41168c:	str	w8, [x22, #136]
  411690:	ldr	x8, [x28, #8]
  411694:	ldr	w9, [x20, #16]!
  411698:	ldr	x0, [x8, x9, lsl #3]
  41169c:	bl	40a798 <lookup_file@@Base>
  4116a0:	cbz	x0, 4116b8 <try_implicit_rule@@Base+0x1180>
  4116a4:	ldrb	w8, [x0, #136]
  4116a8:	tbz	w8, #5, 4116b8 <try_implicit_rule@@Base+0x1180>
  4116ac:	ldr	w8, [x22, #136]
  4116b0:	orr	w8, w8, #0x20
  4116b4:	str	w8, [x22, #136]
  4116b8:	ldrh	w8, [x28, #48]
  4116bc:	cmp	w8, #0x2
  4116c0:	b.cc	411840 <try_implicit_rule@@Base+0x1308>  // b.lo, b.ul, b.last
  4116c4:	ldrh	w8, [x28, #48]
  4116c8:	cbz	w8, 411840 <try_implicit_rule@@Base+0x1308>
  4116cc:	mov	x25, xzr
  4116d0:	add	x8, x23, #0x1
  4116d4:	str	x23, [x19, #120]
  4116d8:	stp	x8, x20, [x19, #232]
  4116dc:	b	411714 <try_implicit_rule@@Base+0x11dc>
  4116e0:	ldr	x8, [x22, #16]
  4116e4:	mov	x28, x20
  4116e8:	ldr	x20, [x19, #240]
  4116ec:	ldr	w9, [x8, #136]
  4116f0:	orr	w9, w9, #0x800
  4116f4:	str	w9, [x8, #136]
  4116f8:	ldr	x8, [x19, #216]
  4116fc:	str	x22, [x8, #48]
  411700:	mov	x22, x8
  411704:	ldrh	w8, [x28, #48]
  411708:	add	x25, x25, #0x1
  41170c:	cmp	x25, x8
  411710:	b.cs	41183c <try_implicit_rule@@Base+0x1304>  // b.hs, b.nlast
  411714:	ldr	w8, [x20]
  411718:	cmp	x25, x8
  41171c:	b.eq	411704 <try_implicit_rule@@Base+0x11cc>  // b.none
  411720:	ldr	x8, [x28, #16]
  411724:	lsl	x27, x25, #2
  411728:	ldr	x9, [x19, #232]
  41172c:	ldr	w8, [x8, x27]
  411730:	add	x8, x9, x8
  411734:	add	x8, x8, #0xf
  411738:	and	x8, x8, #0xfffffffffffffff0
  41173c:	mov	x9, sp
  411740:	sub	x23, x9, x8
  411744:	mov	sp, x23
  411748:	mov	w0, #0x28                  	// #40
  41174c:	bl	418094 <xcalloc@@Base>
  411750:	ldr	x8, [x28, #8]
  411754:	ldr	x9, [x28, #24]
  411758:	lsl	x26, x25, #3
  41175c:	mov	x20, x22
  411760:	ldr	x1, [x8, x26]
  411764:	ldr	x8, [x9, x26]
  411768:	mov	x22, x0
  41176c:	mov	x0, x23
  411770:	mvn	x9, x1
  411774:	add	x2, x8, x9
  411778:	bl	406790 <memcpy@plt>
  41177c:	ldr	x8, [x28, #8]
  411780:	ldr	x9, [x28, #24]
  411784:	ldr	x1, [x20, #40]
  411788:	ldr	x20, [x19, #120]
  41178c:	ldr	x8, [x8, x26]
  411790:	ldr	x9, [x9, x26]
  411794:	mov	x2, x20
  411798:	mvn	x8, x8
  41179c:	add	x8, x9, x8
  4117a0:	add	x24, x23, x8
  4117a4:	mov	x0, x24
  4117a8:	bl	406790 <memcpy@plt>
  4117ac:	ldp	x9, x8, [x28, #16]
  4117b0:	ldr	x10, [x28, #8]
  4117b4:	add	x0, x24, x20
  4117b8:	ldr	x1, [x8, x26]
  4117bc:	ldr	w8, [x9, x27]
  4117c0:	ldr	x9, [x10, x26]
  4117c4:	sub	x8, x8, x1
  4117c8:	add	x8, x8, x9
  4117cc:	add	x2, x8, #0x1
  4117d0:	bl	406790 <memcpy@plt>
  4117d4:	mov	x0, x23
  4117d8:	bl	420f28 <strcache_add@@Base>
  4117dc:	str	x0, [x22, #8]
  4117e0:	bl	40a830 <enter_file@@Base>
  4117e4:	ldr	x8, [x19, #216]
  4117e8:	str	x0, [x22, #16]
  4117ec:	mov	x20, x28
  4117f0:	ldr	x8, [x8, #48]
  4117f4:	str	x8, [x22]
  4117f8:	ldr	x8, [x28, #8]
  4117fc:	ldr	x0, [x8, x26]
  411800:	bl	40a798 <lookup_file@@Base>
  411804:	cbz	x0, 4116e0 <try_implicit_rule@@Base+0x11a8>
  411808:	ldrb	w8, [x0, #136]
  41180c:	tbz	w8, #5, 4116e0 <try_implicit_rule@@Base+0x11a8>
  411810:	ldr	x8, [x22, #16]
  411814:	ldr	w9, [x8, #136]
  411818:	orr	w9, w9, #0x20
  41181c:	str	w9, [x8, #136]
  411820:	b	4116e0 <try_implicit_rule@@Base+0x11a8>
  411824:	ldr	x8, [x19, #136]
  411828:	mov	w1, #0x2f                  	// #47
  41182c:	mov	x0, x22
  411830:	sub	x2, x8, #0x1
  411834:	bl	406d30 <memrchr@plt>
  411838:	b	4106f8 <try_implicit_rule@@Base+0x1c0>
  41183c:	ldr	x24, [x19, #56]
  411840:	mov	x0, x24
  411844:	bl	406cf0 <free@plt>
  411848:	mov	x0, x21
  41184c:	bl	406cf0 <free@plt>
  411850:	cmp	x28, #0x0
  411854:	cset	w0, ne  // ne = any
  411858:	mov	sp, x29
  41185c:	ldp	x20, x19, [sp, #80]
  411860:	ldp	x22, x21, [sp, #64]
  411864:	ldp	x24, x23, [sp, #48]
  411868:	ldp	x26, x25, [sp, #32]
  41186c:	ldp	x28, x27, [sp, #16]
  411870:	ldp	x29, x30, [sp], #96
  411874:	ret

0000000000411878 <stemlen_compare@@Base>:
  411878:	ldr	w9, [x0, #8]
  41187c:	ldr	w10, [x1, #8]
  411880:	mov	x8, x0
  411884:	subs	w0, w9, w10
  411888:	b.eq	411890 <stemlen_compare@@Base+0x18>  // b.none
  41188c:	ret
  411890:	ldr	w8, [x8, #20]
  411894:	ldr	w9, [x1, #20]
  411898:	sub	w0, w8, w9
  41189c:	ret
  4118a0:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4118a4:	mov	x8, x0
  4118a8:	add	x9, x9, #0xcf0
  4118ac:	ldrb	w11, [x8], #1
  4118b0:	ldrh	w10, [x9, x11, lsl #1]
  4118b4:	tst	w10, #0x6
  4118b8:	b.ne	4118ac <stemlen_compare@@Base+0x34>  // b.any
  4118bc:	cbz	w11, 4119b0 <stemlen_compare@@Base+0x138>
  4118c0:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  4118c4:	sub	x0, x8, #0x1
  4118c8:	add	x9, x9, #0x348
  4118cc:	b	4118e4 <stemlen_compare@@Base+0x6c>
  4118d0:	mov	x10, x8
  4118d4:	ldrb	w11, [x10], #1
  4118d8:	mov	w12, wzr
  4118dc:	mov	x8, x10
  4118e0:	cbnz	w12, 41198c <stemlen_compare@@Base+0x114>
  4118e4:	and	w10, w11, #0xff
  4118e8:	cmp	w10, #0x24
  4118ec:	b.hi	411934 <stemlen_compare@@Base+0xbc>  // b.pmore
  4118f0:	and	x10, x11, #0xff
  4118f4:	adr	x13, 4118d4 <stemlen_compare@@Base+0x5c>
  4118f8:	ldrb	w12, [x9, x10]
  4118fc:	add	x13, x13, x12, lsl #2
  411900:	mov	w12, #0x7                   	// #7
  411904:	mov	x10, x8
  411908:	br	x13
  41190c:	mov	x10, x8
  411910:	ldrb	w11, [x10], #1
  411914:	cmp	w11, #0x28
  411918:	b.eq	411944 <stemlen_compare@@Base+0xcc>  // b.none
  41191c:	cmp	w11, #0x7b
  411920:	b.ne	4118d4 <stemlen_compare@@Base+0x5c>  // b.any
  411924:	mov	w12, #0x7d                  	// #125
  411928:	ldrb	w14, [x10]
  41192c:	cbnz	w14, 411950 <stemlen_compare@@Base+0xd8>
  411930:	b	4118d4 <stemlen_compare@@Base+0x5c>
  411934:	cmp	w10, #0x7c
  411938:	b.ne	4118d0 <stemlen_compare@@Base+0x58>  // b.any
  41193c:	mov	w12, #0xb                   	// #11
  411940:	b	4118e0 <stemlen_compare@@Base+0x68>
  411944:	mov	w12, #0x29                  	// #41
  411948:	ldrb	w14, [x10]
  41194c:	cbz	w14, 4118d4 <stemlen_compare@@Base+0x5c>
  411950:	mov	w13, wzr
  411954:	add	x10, x8, #0x2
  411958:	b	411968 <stemlen_compare@@Base+0xf0>
  41195c:	add	w13, w13, #0x1
  411960:	ldrb	w14, [x10], #1
  411964:	cbz	w14, 411984 <stemlen_compare@@Base+0x10c>
  411968:	cmp	w11, w14, uxtb
  41196c:	b.eq	41195c <stemlen_compare@@Base+0xe4>  // b.none
  411970:	cmp	w12, w14, uxtb
  411974:	b.ne	411960 <stemlen_compare@@Base+0xe8>  // b.any
  411978:	subs	w13, w13, #0x1
  41197c:	b.ge	411960 <stemlen_compare@@Base+0xe8>  // b.tcont
  411980:	b	4118d4 <stemlen_compare@@Base+0x5c>
  411984:	sub	x10, x10, #0x1
  411988:	b	4118d4 <stemlen_compare@@Base+0x5c>
  41198c:	cmp	w12, #0xb
  411990:	b.eq	4119a0 <stemlen_compare@@Base+0x128>  // b.none
  411994:	cmp	w12, #0x7
  411998:	b.ne	4119b8 <stemlen_compare@@Base+0x140>  // b.any
  41199c:	sub	x8, x8, #0x1
  4119a0:	cbz	x1, 4119b8 <stemlen_compare@@Base+0x140>
  4119a4:	sub	x8, x8, x0
  4119a8:	str	x8, [x1]
  4119ac:	ret
  4119b0:	mov	x0, xzr
  4119b4:	ret
  4119b8:	ret

00000000004119bc <is_bourne_compatible_shell@@Base>:
  4119bc:	stp	x29, x30, [sp, #-32]!
  4119c0:	mov	w1, #0x2f                  	// #47
  4119c4:	stp	x20, x19, [sp, #16]
  4119c8:	mov	x29, sp
  4119cc:	mov	x19, x0
  4119d0:	bl	406bc0 <strrchr@plt>
  4119d4:	mov	x20, x0
  4119d8:	mov	w1, #0x5c                  	// #92
  4119dc:	mov	x0, x19
  4119e0:	bl	406bc0 <strrchr@plt>
  4119e4:	cmp	x20, x0
  4119e8:	csel	x8, x20, x0, hi  // hi = pmore
  4119ec:	cmp	x20, #0x0
  4119f0:	csel	x9, x20, x19, ne  // ne = any
  4119f4:	cmp	x0, #0x0
  4119f8:	csel	x9, x0, x9, ne  // ne = any
  4119fc:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  411a00:	csel	x19, x8, x9, ne  // ne = any
  411a04:	ldrb	w8, [x19]
  411a08:	cmp	w8, #0x5c
  411a0c:	b.eq	411a18 <is_bourne_compatible_shell@@Base+0x5c>  // b.none
  411a10:	cmp	w8, #0x2f
  411a14:	b.ne	411a1c <is_bourne_compatible_shell@@Base+0x60>  // b.any
  411a18:	add	x19, x19, #0x1
  411a1c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0xe0>
  411a20:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x20e0>
  411a24:	add	x1, x1, #0x3b7
  411a28:	add	x20, x20, #0x570
  411a2c:	mov	x0, x19
  411a30:	bl	406cb0 <strcmp@plt>
  411a34:	cbz	w0, 411a48 <is_bourne_compatible_shell@@Base+0x8c>
  411a38:	ldr	x1, [x20], #8
  411a3c:	cbnz	x1, 411a2c <is_bourne_compatible_shell@@Base+0x70>
  411a40:	mov	w0, wzr
  411a44:	b	411a4c <is_bourne_compatible_shell@@Base+0x90>
  411a48:	mov	w0, #0x1                   	// #1
  411a4c:	ldp	x20, x19, [sp, #16]
  411a50:	ldp	x29, x30, [sp], #32
  411a54:	ret

0000000000411a58 <unblock_all_sigs@@Base>:
  411a58:	sub	sp, sp, #0x90
  411a5c:	mov	x0, sp
  411a60:	stp	x29, x30, [sp, #128]
  411a64:	add	x29, sp, #0x80
  411a68:	bl	406a50 <sigemptyset@plt>
  411a6c:	mov	x1, sp
  411a70:	mov	w0, #0x2                   	// #2
  411a74:	mov	x2, xzr
  411a78:	bl	406830 <sigprocmask@plt>
  411a7c:	ldp	x29, x30, [sp, #128]
  411a80:	add	sp, sp, #0x90
  411a84:	ret

0000000000411a88 <child_handler@@Base>:
  411a88:	stp	x29, x30, [sp, #-16]!
  411a8c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411a90:	ldr	w9, [x8, #3076]
  411a94:	mov	x29, sp
  411a98:	add	w9, w9, #0x1
  411a9c:	str	w9, [x8, #3076]
  411aa0:	bl	424570 <jobserver_signal@@Base>
  411aa4:	ldp	x29, x30, [sp], #16
  411aa8:	ret

0000000000411aac <reap_children@@Base>:
  411aac:	sub	sp, sp, #0x100
  411ab0:	stp	x26, x25, [sp, #192]
  411ab4:	stp	x24, x23, [sp, #208]
  411ab8:	stp	x22, x21, [sp, #224]
  411abc:	stp	x20, x19, [sp, #240]
  411ac0:	mov	w23, w1
  411ac4:	mov	w21, w0
  411ac8:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  411acc:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  411ad0:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  411ad4:	mov	w8, #0x1                   	// #1
  411ad8:	stp	x29, x30, [sp, #160]
  411adc:	stp	x28, x27, [sp, #176]
  411ae0:	add	x29, sp, #0xa0
  411ae4:	str	w8, [sp, #12]
  411ae8:	b	411af4 <reap_children@@Base+0x48>
  411aec:	mov	w21, w8
  411af0:	cbnz	w8, 412300 <reap_children@@Base+0x854>
  411af4:	ldr	x8, [x22, #3048]
  411af8:	cbnz	x8, 411b04 <reap_children@@Base+0x58>
  411afc:	ldr	w8, [x20, #2920]
  411b00:	cbz	w8, 412300 <reap_children@@Base+0x854>
  411b04:	ldr	w8, [sp, #12]
  411b08:	orr	w8, w21, w8
  411b0c:	cbz	w8, 412300 <reap_children@@Base+0x854>
  411b10:	cbz	w23, 411b60 <reap_children@@Base+0xb4>
  411b14:	cbz	w21, 411b60 <reap_children@@Base+0xb4>
  411b18:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411b1c:	ldr	x0, [x8, #2512]
  411b20:	bl	406d80 <fflush@plt>
  411b24:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411b28:	ldrb	w8, [x8, #3080]
  411b2c:	tbnz	w8, #0, 411b54 <reap_children@@Base+0xa8>
  411b30:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  411b34:	mov	w2, #0x5                   	// #5
  411b38:	mov	x0, xzr
  411b3c:	add	x1, x1, #0x6f3
  411b40:	bl	406e50 <dcgettext@plt>
  411b44:	mov	x2, x0
  411b48:	mov	x0, xzr
  411b4c:	mov	x1, xzr
  411b50:	bl	418f84 <error@@Base>
  411b54:	mov	w8, #0x1                   	// #1
  411b58:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  411b5c:	strb	w8, [x9, #3080]
  411b60:	ldr	w8, [x25, #3076]
  411b64:	cbz	w8, 411b70 <reap_children@@Base+0xc4>
  411b68:	sub	w8, w8, #0x1
  411b6c:	str	w8, [x25, #3076]
  411b70:	ldr	w8, [x20, #2920]
  411b74:	ldr	x28, [x22, #3048]
  411b78:	cmp	w8, #0x0
  411b7c:	cset	w19, ne  // ne = any
  411b80:	cbz	x28, 411c74 <reap_children@@Base+0x1c8>
  411b84:	str	w21, [sp, #8]
  411b88:	mov	x25, x20
  411b8c:	mov	x20, x22
  411b90:	mov	w22, w23
  411b94:	mov	x23, x28
  411b98:	ldrb	w8, [x23, #80]!
  411b9c:	mov	x24, x23
  411ba0:	ldr	w9, [x24, #-4]!
  411ba4:	tbnz	w9, #31, 411ca8 <reap_children@@Base+0x1fc>
  411ba8:	and	w27, w8, #0x1
  411bac:	eor	w8, w27, #0x1
  411bb0:	orr	w19, w19, w8
  411bb4:	mov	x26, x28
  411bb8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411bbc:	ldrb	w8, [x8, #3236]
  411bc0:	tbz	w8, #2, 411c3c <reap_children@@Base+0x190>
  411bc4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  411bc8:	mov	w2, #0x5                   	// #5
  411bcc:	mov	x0, xzr
  411bd0:	add	x1, x1, #0x717
  411bd4:	bl	406e50 <dcgettext@plt>
  411bd8:	ldr	x8, [x26, #40]
  411bdc:	ldr	x21, [x8]
  411be0:	ldr	w8, [x24]
  411be4:	mov	x24, x0
  411be8:	mov	w0, w8
  411bec:	bl	412340 <reap_children@@Base+0x894>
  411bf0:	ldrb	w8, [x23]
  411bf4:	adrp	x4, 427000 <_IO_stdin_used@@Base+0x20e0>
  411bf8:	add	x4, x4, #0x989
  411bfc:	tbz	w8, #0, 411c18 <reap_children@@Base+0x16c>
  411c00:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  411c04:	mov	w2, #0x5                   	// #5
  411c08:	mov	x0, xzr
  411c0c:	add	x1, x1, #0x735
  411c10:	bl	406e50 <dcgettext@plt>
  411c14:	mov	x4, x0
  411c18:	adrp	x3, 43c000 <memcpy@GLIBC_2.17>
  411c1c:	mov	x0, x24
  411c20:	mov	x1, x26
  411c24:	mov	x2, x21
  411c28:	add	x3, x3, #0xc18
  411c2c:	bl	406ef0 <printf@plt>
  411c30:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411c34:	ldr	x0, [x8, #2512]
  411c38:	bl	406d80 <fflush@plt>
  411c3c:	ldr	x28, [x26, #32]
  411c40:	cbz	x28, 411d40 <reap_children@@Base+0x294>
  411c44:	mov	x23, x28
  411c48:	ldrb	w8, [x23, #80]!
  411c4c:	mov	x21, x26
  411c50:	mov	x26, x28
  411c54:	mov	x24, x23
  411c58:	ldr	w9, [x24, #-4]!
  411c5c:	and	w8, w8, #0x1
  411c60:	orr	w27, w27, w8
  411c64:	eor	w8, w8, #0x1
  411c68:	orr	w19, w19, w8
  411c6c:	tbz	w9, #31, 411bb8 <reap_children@@Base+0x10c>
  411c70:	b	411cac <reap_children@@Base+0x200>
  411c74:	mov	w27, wzr
  411c78:	cbz	w27, 411d58 <reap_children@@Base+0x2ac>
  411c7c:	sub	x0, x29, #0x8
  411c80:	sub	x1, x29, #0xc
  411c84:	sub	x2, x29, #0x10
  411c88:	mov	w3, wzr
  411c8c:	bl	42477c <remote_status@@Base>
  411c90:	cmp	w0, #0x0
  411c94:	b.le	411d64 <reap_children@@Base+0x2b8>
  411c98:	mov	w8, #0x1                   	// #1
  411c9c:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  411ca0:	cbz	w8, 411de4 <reap_children@@Base+0x338>
  411ca4:	b	411e00 <reap_children@@Base+0x354>
  411ca8:	mov	x21, xzr
  411cac:	mov	w8, #0x7f                  	// #127
  411cb0:	stur	xzr, [x29, #-16]
  411cb4:	stur	w8, [x29, #-8]
  411cb8:	mov	w23, w22
  411cbc:	mov	x22, x20
  411cc0:	mov	x20, x25
  411cc4:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  411cc8:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  411ccc:	ldur	w8, [x29, #-12]
  411cd0:	cbnz	w8, 411f88 <reap_children@@Base+0x4dc>
  411cd4:	ldur	w8, [x29, #-8]
  411cd8:	cmp	w8, #0x7f
  411cdc:	b.ne	411f88 <reap_children@@Base+0x4dc>  // b.any
  411ce0:	ldr	x8, [x28]
  411ce4:	cbz	x8, 411f88 <reap_children@@Base+0x4dc>
  411ce8:	ldr	x0, [x28]
  411cec:	add	x1, sp, #0x10
  411cf0:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  411cf4:	mov	w24, w0
  411cf8:	cmn	w0, #0x1
  411cfc:	b.ne	411d10 <reap_children@@Base+0x264>  // b.any
  411d00:	bl	406f00 <__errno_location@plt>
  411d04:	ldr	w8, [x0]
  411d08:	cmp	w8, #0x4
  411d0c:	b.eq	411ce8 <reap_children@@Base+0x23c>  // b.none
  411d10:	tbnz	w24, #31, 411f20 <reap_children@@Base+0x474>
  411d14:	ldr	w8, [sp, #32]
  411d18:	mov	w0, #0xd                   	// #13
  411d1c:	and	w9, w8, #0xf000
  411d20:	cmp	w9, #0x4, lsl #12
  411d24:	b.eq	411f48 <reap_children@@Base+0x49c>  // b.none
  411d28:	tbz	w8, #6, 411f48 <reap_children@@Base+0x49c>
  411d2c:	ldr	x8, [sp, #64]
  411d30:	cbz	x8, 411f44 <reap_children@@Base+0x498>
  411d34:	mov	x26, xzr
  411d38:	cbnz	x26, 411f54 <reap_children@@Base+0x4a8>
  411d3c:	b	411f88 <reap_children@@Base+0x4dc>
  411d40:	ldr	w21, [sp, #8]
  411d44:	mov	w23, w22
  411d48:	mov	x22, x20
  411d4c:	mov	x20, x25
  411d50:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  411d54:	cbnz	w27, 411c7c <reap_children@@Base+0x1d0>
  411d58:	mov	w0, wzr
  411d5c:	cmp	w0, #0x0
  411d60:	b.gt	411c98 <reap_children@@Base+0x1ec>
  411d64:	tbnz	w0, #31, 412328 <reap_children@@Base+0x87c>
  411d68:	cbz	w19, 411da0 <reap_children@@Base+0x2f4>
  411d6c:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  411d70:	cbz	w21, 411f2c <reap_children@@Base+0x480>
  411d74:	sub	x0, x29, #0x4
  411d78:	bl	406d70 <wait@plt>
  411d7c:	cmn	w0, #0x1
  411d80:	b.ne	411da8 <reap_children@@Base+0x2fc>  // b.any
  411d84:	bl	406f00 <__errno_location@plt>
  411d88:	ldr	w8, [x0]
  411d8c:	cmp	w8, #0x4
  411d90:	b.eq	411d74 <reap_children@@Base+0x2c8>  // b.none
  411d94:	mov	w0, #0xffffffff            	// #-1
  411d98:	tbz	w0, #31, 411dac <reap_children@@Base+0x300>
  411d9c:	b	412334 <reap_children@@Base+0x888>
  411da0:	mov	w0, wzr
  411da4:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  411da8:	tbnz	w0, #31, 412334 <reap_children@@Base+0x888>
  411dac:	cbz	w0, 411ee8 <reap_children@@Base+0x43c>
  411db0:	ldur	w9, [x29, #-4]
  411db4:	mov	w12, #0x1ffffff             	// #33554431
  411db8:	mov	w8, wzr
  411dbc:	ubfx	w10, w9, #8, #8
  411dc0:	and	w11, w9, #0x7f
  411dc4:	stur	w10, [x29, #-8]
  411dc8:	mov	w10, #0x1000000             	// #16777216
  411dcc:	add	w10, w10, w11, lsl #24
  411dd0:	cmp	w10, w12
  411dd4:	and	w9, w9, #0x80
  411dd8:	csel	w10, w11, wzr, gt
  411ddc:	stp	w9, w10, [x29, #-16]
  411de0:	cbnz	w8, 411e00 <reap_children@@Base+0x354>
  411de4:	ldr	w9, [x20, #2920]
  411de8:	cmp	w0, w9
  411dec:	b.ne	411e00 <reap_children@@Base+0x354>  // b.any
  411df0:	ldp	w1, w0, [x29, #-12]
  411df4:	bl	40cc00 <shell_completed@@Base>
  411df8:	mov	w8, #0x1                   	// #1
  411dfc:	b	411af0 <reap_children@@Base+0x44>
  411e00:	ldr	x9, [x22, #3048]
  411e04:	cbz	x9, 4121ac <reap_children@@Base+0x700>
  411e08:	str	w21, [sp, #8]
  411e0c:	mov	x21, xzr
  411e10:	b	411e20 <reap_children@@Base+0x374>
  411e14:	ldr	x9, [x28, #32]
  411e18:	mov	x21, x28
  411e1c:	cbz	x9, 4121a8 <reap_children@@Base+0x6fc>
  411e20:	mov	x28, x9
  411e24:	ldr	w9, [x9, #76]
  411e28:	cmp	w9, w0
  411e2c:	b.ne	411e14 <reap_children@@Base+0x368>  // b.any
  411e30:	ldrb	w9, [x28, #80]
  411e34:	and	w9, w9, #0x1
  411e38:	cmp	w8, w9
  411e3c:	b.ne	411e14 <reap_children@@Base+0x368>  // b.any
  411e40:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411e44:	ldrb	w8, [x8, #3236]
  411e48:	tbz	w8, #2, 411ed0 <reap_children@@Base+0x424>
  411e4c:	ldp	w8, w9, [x29, #-12]
  411e50:	mov	w2, #0x5                   	// #5
  411e54:	mov	x0, xzr
  411e58:	orr	w8, w9, w8
  411e5c:	cmp	w8, #0x0
  411e60:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  411e64:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  411e68:	add	x8, x8, #0x776
  411e6c:	add	x9, x9, #0x752
  411e70:	csel	x1, x9, x8, eq  // eq = none
  411e74:	bl	406e50 <dcgettext@plt>
  411e78:	ldr	w8, [x28, #76]
  411e7c:	mov	x24, x0
  411e80:	mov	w0, w8
  411e84:	bl	412340 <reap_children@@Base+0x894>
  411e88:	ldrb	w8, [x28, #80]
  411e8c:	adrp	x3, 427000 <_IO_stdin_used@@Base+0x20e0>
  411e90:	add	x3, x3, #0x989
  411e94:	tbz	w8, #0, 411eb0 <reap_children@@Base+0x404>
  411e98:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  411e9c:	mov	w2, #0x5                   	// #5
  411ea0:	mov	x0, xzr
  411ea4:	add	x1, x1, #0x735
  411ea8:	bl	406e50 <dcgettext@plt>
  411eac:	mov	x3, x0
  411eb0:	adrp	x2, 43c000 <memcpy@GLIBC_2.17>
  411eb4:	mov	x0, x24
  411eb8:	mov	x1, x28
  411ebc:	add	x2, x2, #0xc18
  411ec0:	bl	406ef0 <printf@plt>
  411ec4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411ec8:	ldr	x0, [x8, #2512]
  411ecc:	bl	406d80 <fflush@plt>
  411ed0:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  411ed4:	ldr	x8, [x9, #3064]
  411ed8:	cbz	x8, 411ccc <reap_children@@Base+0x220>
  411edc:	sub	x8, x8, #0x1
  411ee0:	str	x8, [x9, #3064]
  411ee4:	b	411ccc <reap_children@@Base+0x220>
  411ee8:	mov	w8, #0x1                   	// #1
  411eec:	str	wzr, [sp, #12]
  411ef0:	cbz	w21, 411af0 <reap_children@@Base+0x44>
  411ef4:	cbz	w27, 411af0 <reap_children@@Base+0x44>
  411ef8:	sub	x0, x29, #0x8
  411efc:	sub	x1, x29, #0xc
  411f00:	sub	x2, x29, #0x10
  411f04:	mov	w3, #0x1                   	// #1
  411f08:	bl	42477c <remote_status@@Base>
  411f0c:	tbnz	w0, #31, 412328 <reap_children@@Base+0x87c>
  411f10:	mov	w8, #0x1                   	// #1
  411f14:	str	wzr, [sp, #12]
  411f18:	cbnz	w0, 411c9c <reap_children@@Base+0x1f0>
  411f1c:	b	411af0 <reap_children@@Base+0x44>
  411f20:	bl	406f00 <__errno_location@plt>
  411f24:	ldr	w0, [x0]
  411f28:	b	411f48 <reap_children@@Base+0x49c>
  411f2c:	sub	x1, x29, #0x4
  411f30:	mov	w0, #0xffffffff            	// #-1
  411f34:	mov	w2, #0x1                   	// #1
  411f38:	bl	406f40 <waitpid@plt>
  411f3c:	tbz	w0, #31, 411dac <reap_children@@Base+0x300>
  411f40:	b	412334 <reap_children@@Base+0x888>
  411f44:	mov	w0, #0x8                   	// #8
  411f48:	bl	406b90 <strerror@plt>
  411f4c:	mov	x26, x0
  411f50:	cbz	x26, 411f88 <reap_children@@Base+0x4dc>
  411f54:	ldr	x24, [x28]
  411f58:	mov	x0, x24
  411f5c:	bl	4067d0 <strlen@plt>
  411f60:	mov	x27, x0
  411f64:	mov	x0, x26
  411f68:	bl	4067d0 <strlen@plt>
  411f6c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  411f70:	add	x1, x0, x27
  411f74:	mov	x0, xzr
  411f78:	add	x2, x2, #0x2aa
  411f7c:	mov	x3, x24
  411f80:	mov	x4, x26
  411f84:	bl	418f84 <error@@Base>
  411f88:	ldp	w9, w8, [x29, #-12]
  411f8c:	orr	w10, w8, w9
  411f90:	cbz	w10, 411fc4 <reap_children@@Base+0x518>
  411f94:	cbnz	w9, 411fb4 <reap_children@@Base+0x508>
  411f98:	cmp	w8, #0x1
  411f9c:	b.ne	411fb4 <reap_children@@Base+0x508>  // b.any
  411fa0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411fa4:	ldr	w8, [x8, #3260]
  411fa8:	cbz	w8, 411fb4 <reap_children@@Base+0x508>
  411fac:	ldrb	w8, [x28, #80]
  411fb0:	tbnz	w8, #4, 411fd4 <reap_children@@Base+0x528>
  411fb4:	mov	w26, #0x2                   	// #2
  411fb8:	ldr	x8, [x28, #48]
  411fbc:	cbnz	x8, 411fe0 <reap_children@@Base+0x534>
  411fc0:	b	412070 <reap_children@@Base+0x5c4>
  411fc4:	mov	w26, wzr
  411fc8:	ldr	x8, [x28, #48]
  411fcc:	cbnz	x8, 411fe0 <reap_children@@Base+0x534>
  411fd0:	b	412070 <reap_children@@Base+0x5c4>
  411fd4:	mov	w26, #0x1                   	// #1
  411fd8:	ldr	x8, [x28, #48]
  411fdc:	cbz	x8, 412070 <reap_children@@Base+0x5c4>
  411fe0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  411fe4:	ldrb	w8, [x8, #3236]
  411fe8:	tbz	w8, #2, 412014 <reap_children@@Base+0x568>
  411fec:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  411ff0:	mov	w2, #0x5                   	// #5
  411ff4:	mov	x0, xzr
  411ff8:	add	x1, x1, #0x799
  411ffc:	bl	406e50 <dcgettext@plt>
  412000:	ldr	x1, [x28, #48]
  412004:	bl	406ef0 <printf@plt>
  412008:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41200c:	ldr	x0, [x8, #2512]
  412010:	bl	406d80 <fflush@plt>
  412014:	bl	406f00 <__errno_location@plt>
  412018:	str	wzr, [x0]
  41201c:	mov	x24, x0
  412020:	ldr	x0, [x28, #48]
  412024:	bl	406840 <remove@plt>
  412028:	cbz	w0, 412064 <reap_children@@Base+0x5b8>
  41202c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  412030:	ldrb	w8, [x8, #3236]
  412034:	tbz	w8, #2, 412064 <reap_children@@Base+0x5b8>
  412038:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41203c:	mov	w2, #0x5                   	// #5
  412040:	mov	x0, xzr
  412044:	add	x1, x1, #0x7b9
  412048:	bl	406e50 <dcgettext@plt>
  41204c:	ldr	x1, [x28, #48]
  412050:	ldr	w2, [x24]
  412054:	bl	406ef0 <printf@plt>
  412058:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41205c:	ldr	x0, [x8, #2512]
  412060:	bl	406d80 <fflush@plt>
  412064:	ldr	x0, [x28, #48]
  412068:	bl	406cf0 <free@plt>
  41206c:	str	xzr, [x28, #48]
  412070:	ldrb	w27, [x28, #80]
  412074:	tbz	w27, #2, 412080 <reap_children@@Base+0x5d4>
  412078:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41207c:	strb	wzr, [x8, #3084]
  412080:	cbz	w26, 41211c <reap_children@@Base+0x670>
  412084:	tbnz	w27, #1, 412104 <reap_children@@Base+0x658>
  412088:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41208c:	ldr	w8, [x8, #3252]
  412090:	cbnz	w8, 412104 <reap_children@@Base+0x658>
  412094:	cmp	w26, #0x2
  412098:	b.ne	4120b8 <reap_children@@Base+0x60c>  // b.any
  41209c:	ubfx	w8, w27, #6, #1
  4120a0:	cbnz	w8, 4120b8 <reap_children@@Base+0x60c>
  4120a4:	ldp	w2, w1, [x29, #-12]
  4120a8:	ldur	w3, [x29, #-16]
  4120ac:	mov	x0, x28
  4120b0:	mov	w4, wzr
  4120b4:	bl	412368 <reap_children@@Base+0x8bc>
  4120b8:	ldr	x8, [x28, #40]
  4120bc:	cmp	w26, #0x2
  4120c0:	mov	w10, #0x2                   	// #2
  4120c4:	cinc	w10, w10, eq  // eq = none
  4120c8:	ldr	w9, [x8, #136]
  4120cc:	and	w9, w9, #0xfffffffc
  4120d0:	orr	w9, w9, w10
  4120d4:	str	w9, [x8, #136]
  4120d8:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4120dc:	ldr	w8, [x9, #2364]
  4120e0:	cmn	w8, #0x1
  4120e4:	b.ne	4122ec <reap_children@@Base+0x840>  // b.any
  4120e8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  4120ec:	add	x0, x0, #0x7e5
  4120f0:	bl	40a798 <lookup_file@@Base>
  4120f4:	cbz	x0, 4122e0 <reap_children@@Base+0x834>
  4120f8:	ldrb	w8, [x0, #137]
  4120fc:	ubfx	w8, w8, #3, #1
  412100:	b	4122e4 <reap_children@@Base+0x838>
  412104:	ldp	w2, w1, [x29, #-12]
  412108:	ldur	w3, [x29, #-16]
  41210c:	mov	w4, #0x1                   	// #1
  412110:	mov	x0, x28
  412114:	bl	412368 <reap_children@@Base+0x8bc>
  412118:	mov	w26, wzr
  41211c:	mov	x0, x28
  412120:	bl	412570 <reap_children@@Base+0xac4>
  412124:	cbz	w0, 412148 <reap_children@@Base+0x69c>
  412128:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41212c:	ldr	w8, [x8, #2592]
  412130:	cbz	w8, 41215c <reap_children@@Base+0x6b0>
  412134:	ldr	x8, [x28, #40]
  412138:	ldr	w9, [x8, #136]
  41213c:	orr	w9, w9, #0x3
  412140:	str	w9, [x8, #136]
  412144:	b	4121b4 <reap_children@@Base+0x708>
  412148:	ldr	x8, [x28, #40]
  41214c:	ldr	w9, [x8, #136]
  412150:	and	w9, w9, #0xfffffffc
  412154:	str	w9, [x8, #136]
  412158:	b	4121cc <reap_children@@Base+0x720>
  41215c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  412160:	ldr	w8, [x8, #3304]
  412164:	cmp	w8, #0x1
  412168:	b.ne	412174 <reap_children@@Base+0x6c8>  // b.any
  41216c:	add	x0, x28, #0x10
  412170:	bl	418590 <output_dump@@Base>
  412174:	mov	w0, wzr
  412178:	bl	42476c <start_remote_job_p@@Base>
  41217c:	ldrb	w8, [x28, #80]
  412180:	bfxil	w8, w0, #0, #1
  412184:	mov	x0, x28
  412188:	strb	w8, [x28, #80]
  41218c:	bl	4125fc <reap_children@@Base+0xb50>
  412190:	bl	41427c <construct_command_argv@@Base+0x9dc>
  412194:	ldr	x8, [x28, #40]
  412198:	ldr	w8, [x8, #136]
  41219c:	and	w8, w8, #0xc
  4121a0:	cmp	w8, #0x8
  4121a4:	b.ne	4121b4 <reap_children@@Base+0x708>  // b.any
  4121a8:	ldr	w21, [sp, #8]
  4121ac:	mov	w8, wzr
  4121b0:	b	411af0 <reap_children@@Base+0x44>
  4121b4:	ldr	x8, [x28, #40]
  4121b8:	ldrb	w8, [x8, #136]
  4121bc:	tst	w8, #0x3
  4121c0:	b.eq	4121cc <reap_children@@Base+0x720>  // b.none
  4121c4:	mov	x0, x28
  4121c8:	bl	4089a0 <delete_child_targets@@Base>
  4121cc:	add	x0, x28, #0x10
  4121d0:	bl	418590 <output_dump@@Base>
  4121d4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4121d8:	ldr	w8, [x8, #2592]
  4121dc:	cbnz	w8, 4121e8 <reap_children@@Base+0x73c>
  4121e0:	ldr	x0, [x28, #40]
  4121e4:	bl	41e408 <notice_finished_file@@Base>
  4121e8:	bl	4142a0 <construct_command_argv@@Base+0xa00>
  4121ec:	ldr	w8, [x28, #76]
  4121f0:	cmp	w8, #0x1
  4121f4:	b.lt	412270 <reap_children@@Base+0x7c4>  // b.tstop
  4121f8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4121fc:	ldrb	w8, [x8, #3236]
  412200:	tbz	w8, #2, 412270 <reap_children@@Base+0x7c4>
  412204:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  412208:	mov	w2, #0x5                   	// #5
  41220c:	mov	x0, xzr
  412210:	add	x1, x1, #0x7f6
  412214:	bl	406e50 <dcgettext@plt>
  412218:	ldr	w8, [x28, #76]
  41221c:	mov	x24, x0
  412220:	mov	w0, w8
  412224:	bl	412340 <reap_children@@Base+0x894>
  412228:	ldrb	w8, [x28, #80]
  41222c:	adrp	x3, 427000 <_IO_stdin_used@@Base+0x20e0>
  412230:	add	x3, x3, #0x989
  412234:	tbz	w8, #0, 412250 <reap_children@@Base+0x7a4>
  412238:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41223c:	mov	w2, #0x5                   	// #5
  412240:	mov	x0, xzr
  412244:	add	x1, x1, #0x735
  412248:	bl	406e50 <dcgettext@plt>
  41224c:	mov	x3, x0
  412250:	adrp	x2, 43c000 <memcpy@GLIBC_2.17>
  412254:	mov	x0, x24
  412258:	mov	x1, x28
  41225c:	add	x2, x2, #0xc18
  412260:	bl	406ef0 <printf@plt>
  412264:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  412268:	ldr	x0, [x8, #2512]
  41226c:	bl	406d80 <fflush@plt>
  412270:	ldr	w8, [x19, #3056]
  412274:	cbz	w8, 412288 <reap_children@@Base+0x7dc>
  412278:	ldrb	w9, [x28, #80]
  41227c:	ubfx	w9, w9, #5, #1
  412280:	sub	w8, w8, w9
  412284:	str	w8, [x19, #3056]
  412288:	ldr	x8, [x28, #32]
  41228c:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  412290:	add	x9, x21, #0x20
  412294:	cmp	x21, #0x0
  412298:	add	x10, x10, #0xbe8
  41229c:	csel	x9, x10, x9, eq  // eq = none
  4122a0:	mov	x0, x28
  4122a4:	str	x8, [x9]
  4122a8:	bl	412b34 <reap_children@@Base+0x1088>
  4122ac:	bl	41427c <construct_command_argv@@Base+0x9dc>
  4122b0:	mov	w8, wzr
  4122b4:	tbnz	w27, #6, 411aec <reap_children@@Base+0x40>
  4122b8:	cbnz	w23, 411aec <reap_children@@Base+0x40>
  4122bc:	cbz	w26, 411aec <reap_children@@Base+0x40>
  4122c0:	adrp	x9, 440000 <shell_var@@Base+0x18>
  4122c4:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  4122c8:	ldr	w9, [x9, #36]
  4122cc:	ldr	w10, [x10, #2592]
  4122d0:	mov	w21, w8
  4122d4:	orr	w9, w10, w9
  4122d8:	cbnz	w9, 411af0 <reap_children@@Base+0x44>
  4122dc:	b	412320 <reap_children@@Base+0x874>
  4122e0:	mov	w8, wzr
  4122e4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4122e8:	str	w8, [x9, #2364]
  4122ec:	ldur	w8, [x29, #-12]
  4122f0:	ldr	w9, [x9, #2364]
  4122f4:	orr	w8, w9, w8
  4122f8:	cbnz	w8, 4121c4 <reap_children@@Base+0x718>
  4122fc:	b	4121cc <reap_children@@Base+0x720>
  412300:	ldp	x20, x19, [sp, #240]
  412304:	ldp	x22, x21, [sp, #224]
  412308:	ldp	x24, x23, [sp, #208]
  41230c:	ldp	x26, x25, [sp, #192]
  412310:	ldp	x28, x27, [sp, #176]
  412314:	ldp	x29, x30, [sp, #160]
  412318:	add	sp, sp, #0x100
  41231c:	ret
  412320:	mov	w0, w26
  412324:	bl	416ce8 <die@@Base>
  412328:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  41232c:	add	x0, x0, #0x73f
  412330:	bl	4184d0 <pfatal_with_name@@Base>
  412334:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  412338:	add	x0, x0, #0x74d
  41233c:	bl	4184d0 <pfatal_with_name@@Base>
  412340:	stp	x29, x30, [sp, #-16]!
  412344:	sxtw	x2, w0
  412348:	adrp	x0, 43c000 <memcpy@GLIBC_2.17>
  41234c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  412350:	add	x0, x0, #0xc18
  412354:	add	x1, x1, #0x8af
  412358:	mov	x29, sp
  41235c:	bl	406870 <sprintf@plt>
  412360:	ldp	x29, x30, [sp], #16
  412364:	ret
  412368:	stp	x29, x30, [sp, #-96]!
  41236c:	stp	x28, x27, [sp, #16]
  412370:	stp	x26, x25, [sp, #32]
  412374:	stp	x24, x23, [sp, #48]
  412378:	stp	x22, x21, [sp, #64]
  41237c:	stp	x20, x19, [sp, #80]
  412380:	ldr	x27, [x0, #40]
  412384:	mov	w22, w4
  412388:	mov	w21, w2
  41238c:	mov	x24, x0
  412390:	ldr	x28, [x27, #32]
  412394:	mov	w19, w1
  412398:	mov	x29, sp
  41239c:	cbz	w4, 4123ac <reap_children@@Base+0x900>
  4123a0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4123a4:	ldr	w8, [x8, #3232]
  4123a8:	cbnz	w8, 412550 <reap_children@@Base+0xaa4>
  4123ac:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x20e0>
  4123b0:	add	x20, x20, #0x989
  4123b4:	cbz	w21, 4123d4 <reap_children@@Base+0x928>
  4123b8:	cbz	w3, 4123d4 <reap_children@@Base+0x928>
  4123bc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4123c0:	add	x1, x1, #0x913
  4123c4:	mov	w2, #0x5                   	// #5
  4123c8:	mov	x0, xzr
  4123cc:	bl	406e50 <dcgettext@plt>
  4123d0:	mov	x20, x0
  4123d4:	cbz	w22, 41243c <reap_children@@Base+0x990>
  4123d8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4123dc:	add	x1, x1, #0x922
  4123e0:	mov	w2, #0x5                   	// #5
  4123e4:	mov	x0, xzr
  4123e8:	bl	406e50 <dcgettext@plt>
  4123ec:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x20e0>
  4123f0:	mov	x23, x0
  4123f4:	add	x22, x22, #0x989
  4123f8:	ldr	x26, [x28]
  4123fc:	cbz	x26, 412454 <reap_children@@Base+0x9a8>
  412400:	mov	x0, x26
  412404:	bl	4067d0 <strlen@plt>
  412408:	add	x9, x0, #0x2a
  41240c:	mov	x8, sp
  412410:	and	x9, x9, #0xfffffffffffffff0
  412414:	sub	x25, x8, x9
  412418:	mov	sp, x25
  41241c:	ldp	x8, x9, [x28, #8]
  412420:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  412424:	add	x1, x1, #0x8ac
  412428:	mov	x0, x25
  41242c:	add	x3, x9, x8
  412430:	mov	x2, x26
  412434:	bl	406870 <sprintf@plt>
  412438:	b	41246c <reap_children@@Base+0x9c0>
  41243c:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x40e0>
  412440:	adrp	x23, 427000 <_IO_stdin_used@@Base+0x20e0>
  412444:	add	x22, x22, #0xaa5
  412448:	add	x23, x23, #0x989
  41244c:	ldr	x26, [x28]
  412450:	cbnz	x26, 412400 <reap_children@@Base+0x954>
  412454:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  412458:	add	x1, x1, #0x8a2
  41245c:	mov	w2, #0x5                   	// #5
  412460:	mov	x0, xzr
  412464:	bl	406e50 <dcgettext@plt>
  412468:	mov	x25, x0
  41246c:	mov	x0, x22
  412470:	bl	4067d0 <strlen@plt>
  412474:	mov	x26, x0
  412478:	mov	x0, x25
  41247c:	bl	4067d0 <strlen@plt>
  412480:	ldr	x8, [x27]
  412484:	add	x26, x0, x26
  412488:	mov	x0, x8
  41248c:	bl	4067d0 <strlen@plt>
  412490:	add	x26, x26, x0
  412494:	mov	x0, x23
  412498:	bl	4067d0 <strlen@plt>
  41249c:	ldrb	w8, [x24, #24]
  4124a0:	add	x9, x24, #0x10
  4124a4:	adrp	x24, 43d000 <stopchar_map@@Base+0x310>
  4124a8:	add	x26, x26, x0
  4124ac:	tst	w8, #0x1
  4124b0:	csel	x8, xzr, x9, eq  // eq = none
  4124b4:	str	x8, [x24, #1472]
  4124b8:	bl	41e34c <show_goal_error@@Base>
  4124bc:	cbz	w21, 412510 <reap_children@@Base+0xa64>
  4124c0:	mov	w0, w21
  4124c4:	bl	406ec0 <strsignal@plt>
  4124c8:	mov	x19, x0
  4124cc:	bl	4067d0 <strlen@plt>
  4124d0:	add	x21, x0, x26
  4124d4:	mov	x0, x20
  4124d8:	bl	4067d0 <strlen@plt>
  4124dc:	ldr	x5, [x27]
  4124e0:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  4124e4:	add	x1, x21, x0
  4124e8:	add	x2, x2, #0x943
  4124ec:	str	x23, [sp, #-16]!
  4124f0:	mov	x0, xzr
  4124f4:	mov	x3, x22
  4124f8:	mov	x4, x25
  4124fc:	mov	x6, x19
  412500:	mov	x7, x20
  412504:	bl	418f84 <error@@Base>
  412508:	add	sp, sp, #0x10
  41250c:	b	41254c <reap_children@@Base+0xaa0>
  412510:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  412514:	add	x1, x1, #0x92d
  412518:	mov	w2, #0x5                   	// #5
  41251c:	mov	x0, xzr
  412520:	add	x20, x26, #0x14
  412524:	bl	406e50 <dcgettext@plt>
  412528:	ldr	x5, [x27]
  41252c:	mov	x2, x0
  412530:	mov	x0, xzr
  412534:	mov	x1, x20
  412538:	mov	x3, x22
  41253c:	mov	x4, x25
  412540:	mov	w6, w19
  412544:	mov	x7, x23
  412548:	bl	418f84 <error@@Base>
  41254c:	str	xzr, [x24, #1472]
  412550:	mov	sp, x29
  412554:	ldp	x20, x19, [sp, #80]
  412558:	ldp	x22, x21, [sp, #64]
  41255c:	ldp	x24, x23, [sp, #48]
  412560:	ldp	x26, x25, [sp, #32]
  412564:	ldp	x28, x27, [sp, #16]
  412568:	ldp	x29, x30, [sp], #96
  41256c:	ret
  412570:	ldr	x8, [x0, #64]
  412574:	cbz	x8, 412590 <reap_children@@Base+0xae4>
  412578:	ldrb	w8, [x8]
  41257c:	cmp	w8, #0x0
  412580:	cset	w9, eq  // eq = none
  412584:	ldr	w8, [x0, #72]
  412588:	cbnz	w9, 41259c <reap_children@@Base+0xaf0>
  41258c:	b	4125d0 <reap_children@@Base+0xb24>
  412590:	mov	w9, #0x1                   	// #1
  412594:	ldr	w8, [x0, #72]
  412598:	cbz	w9, 4125d0 <reap_children@@Base+0xb24>
  41259c:	ldr	x9, [x0, #40]
  4125a0:	ldr	x9, [x9, #32]
  4125a4:	ldrh	w10, [x9, #48]
  4125a8:	cmp	w8, w10
  4125ac:	b.eq	4125e4 <reap_children@@Base+0xb38>  // b.none
  4125b0:	ldr	x9, [x0, #56]
  4125b4:	add	w10, w8, #0x1
  4125b8:	str	w10, [x0, #72]
  4125bc:	ldr	x8, [x9, x8, lsl #3]
  4125c0:	str	x8, [x0, #64]
  4125c4:	ldr	x8, [x0, #64]
  4125c8:	cbnz	x8, 412578 <reap_children@@Base+0xacc>
  4125cc:	b	412590 <reap_children@@Base+0xae4>
  4125d0:	ldr	x9, [x0, #40]
  4125d4:	sub	w10, w8, #0x1
  4125d8:	mov	w8, #0x1                   	// #1
  4125dc:	ldr	x9, [x9, #32]
  4125e0:	b	4125f0 <reap_children@@Base+0xb44>
  4125e4:	mov	x10, xzr
  4125e8:	mov	w8, wzr
  4125ec:	str	xzr, [x0, #64]
  4125f0:	mov	w0, w8
  4125f4:	str	x10, [x9, #16]
  4125f8:	ret
  4125fc:	sub	sp, sp, #0x60
  412600:	stp	x29, x30, [sp, #16]
  412604:	stp	x24, x23, [sp, #48]
  412608:	stp	x22, x21, [sp, #64]
  41260c:	stp	x20, x19, [sp, #80]
  412610:	ldr	x22, [x0, #64]
  412614:	mov	x19, x0
  412618:	str	x25, [sp, #32]
  41261c:	add	x29, sp, #0x10
  412620:	cbz	x22, 412954 <reap_children@@Base+0xea8>
  412624:	ldr	x8, [x19, #40]
  412628:	ldr	w10, [x19, #72]
  41262c:	ldrb	w12, [x19, #80]
  412630:	ldr	x9, [x8, #32]
  412634:	ldr	w13, [x8, #132]
  412638:	ldr	x11, [x9, #40]
  41263c:	sub	w9, w10, #0x1
  412640:	ldrb	w10, [x11, x9]
  412644:	and	w11, w12, #0xfffffffd
  412648:	orr	w24, w13, w10
  41264c:	lsr	w10, w24, #1
  412650:	and	w10, w10, #0x2
  412654:	orr	w10, w10, w11
  412658:	strb	w10, [x19, #80]
  41265c:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  412660:	add	x10, x10, #0xcf0
  412664:	b	412678 <reap_children@@Base+0xbcc>
  412668:	ldrb	w11, [x19, #80]
  41266c:	orr	w11, w11, #0x2
  412670:	strb	w11, [x19, #80]
  412674:	add	x22, x22, #0x1
  412678:	ldrb	w11, [x22]
  41267c:	cmp	w11, #0x2c
  412680:	b.le	4126a0 <reap_children@@Base+0xbf4>
  412684:	cmp	w11, #0x2d
  412688:	b.eq	412668 <reap_children@@Base+0xbbc>  // b.none
  41268c:	cmp	w11, #0x40
  412690:	b.ne	4126b8 <reap_children@@Base+0xc0c>  // b.any
  412694:	orr	w24, w24, #0x2
  412698:	add	x22, x22, #0x1
  41269c:	b	412678 <reap_children@@Base+0xbcc>
  4126a0:	cmp	w11, #0x2b
  4126a4:	b.ne	4126b4 <reap_children@@Base+0xc08>  // b.any
  4126a8:	orr	w24, w24, #0x1
  4126ac:	add	x22, x22, #0x1
  4126b0:	b	412678 <reap_children@@Base+0xbcc>
  4126b4:	cbz	w11, 4126c0 <reap_children@@Base+0xc14>
  4126b8:	ldrh	w11, [x10, x11, lsl #1]
  4126bc:	tbnz	w11, #1, 412674 <reap_children@@Base+0xbc8>
  4126c0:	ldrb	w10, [x19, #80]
  4126c4:	ubfiz	w11, w24, #4, #1
  4126c8:	and	w20, w24, #0x1
  4126cc:	and	w10, w10, #0xffffffef
  4126d0:	orr	w10, w10, w11
  4126d4:	strb	w10, [x19, #80]
  4126d8:	ldr	x8, [x8, #32]
  4126dc:	ldr	x8, [x8, #40]
  4126e0:	ldrb	w10, [x8, x9]
  4126e4:	orr	w10, w10, w20
  4126e8:	strb	w10, [x8, x9]
  4126ec:	ldrb	w11, [x22]
  4126f0:	cbz	w11, 412738 <reap_children@@Base+0xc8c>
  4126f4:	ldr	x8, [x19, #40]
  4126f8:	mov	x10, x22
  4126fc:	ldr	x8, [x8, #32]
  412700:	ldrb	w9, [x8, #50]
  412704:	mov	x8, x22
  412708:	b	412714 <reap_children@@Base+0xc68>
  41270c:	ldrb	w11, [x10, #1]!
  412710:	cbz	w11, 41273c <reap_children@@Base+0xc90>
  412714:	strb	w11, [x8], #1
  412718:	ldrb	w11, [x10]
  41271c:	cmp	w11, #0xa
  412720:	b.ne	41270c <reap_children@@Base+0xc60>  // b.any
  412724:	mov	x11, x10
  412728:	ldrb	w12, [x11, #1]!
  41272c:	cmp	w12, w9
  412730:	csel	x10, x11, x10, eq  // eq = none
  412734:	b	41270c <reap_children@@Base+0xc60>
  412738:	mov	x8, x22
  41273c:	strb	w11, [x8]
  412740:	str	xzr, [x29, #24]
  412744:	ldr	x2, [x19, #40]
  412748:	add	x1, x29, #0x18
  41274c:	mov	x0, x22
  412750:	bl	4138a0 <construct_command_argv@@Base>
  412754:	ldr	x8, [x29, #24]
  412758:	mov	x23, x0
  41275c:	cbz	x8, 41277c <reap_children@@Base+0xcd0>
  412760:	add	x9, x8, #0x1
  412764:	str	x9, [x29, #24]
  412768:	strb	wzr, [x8]
  41276c:	ldr	x8, [x29, #24]
  412770:	str	x8, [x19, #64]
  412774:	cbz	w20, 412784 <reap_children@@Base+0xcd8>
  412778:	b	4127c4 <reap_children@@Base+0xd18>
  41277c:	str	xzr, [x19, #64]
  412780:	cbnz	w20, 4127c4 <reap_children@@Base+0xd18>
  412784:	cbz	x23, 4127c4 <reap_children@@Base+0xd18>
  412788:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41278c:	ldr	w8, [x8, #3260]
  412790:	cbz	w8, 4127c4 <reap_children@@Base+0xd18>
  412794:	ldr	x0, [x23]
  412798:	bl	406cf0 <free@plt>
  41279c:	mov	x0, x23
  4127a0:	bl	406cf0 <free@plt>
  4127a4:	ldr	x8, [x19, #40]
  4127a8:	ldr	w9, [x8, #136]
  4127ac:	and	w9, w9, #0xfffffffc
  4127b0:	orr	w9, w9, #0x2
  4127b4:	str	w9, [x8, #136]
  4127b8:	ldr	x0, [x19, #40]
  4127bc:	bl	41e408 <notice_finished_file@@Base>
  4127c0:	b	412998 <reap_children@@Base+0xeec>
  4127c4:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4127c8:	ldr	w8, [x8, #236]
  4127cc:	cmp	w20, #0x0
  4127d0:	cset	w9, ne  // ne = any
  4127d4:	cmp	w8, #0x0
  4127d8:	cset	w8, eq  // eq = none
  4127dc:	orr	w8, w9, w8
  4127e0:	cmp	w8, #0x0
  4127e4:	csel	x21, x23, xzr, ne  // ne = any
  4127e8:	tbnz	w8, #0, 412804 <reap_children@@Base+0xd58>
  4127ec:	cbz	x23, 412804 <reap_children@@Base+0xd58>
  4127f0:	ldr	x0, [x23]
  4127f4:	bl	406cf0 <free@plt>
  4127f8:	mov	x0, x23
  4127fc:	bl	406cf0 <free@plt>
  412800:	mov	x21, xzr
  412804:	cbz	x21, 412954 <reap_children@@Base+0xea8>
  412808:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41280c:	ldr	w8, [x8, #3304]
  412810:	cbz	w8, 412828 <reap_children@@Base+0xd7c>
  412814:	cmp	w20, #0x0
  412818:	cset	w9, eq  // eq = none
  41281c:	cmp	w8, #0x3
  412820:	cset	w8, eq  // eq = none
  412824:	orr	w8, w8, w9
  412828:	ldrb	w9, [x19, #24]
  41282c:	add	x0, x19, #0x10
  412830:	cmp	w8, #0x0
  412834:	adrp	x23, 43d000 <stopchar_map@@Base+0x310>
  412838:	and	w9, w9, #0xfe
  41283c:	csel	x10, x0, xzr, ne  // ne = any
  412840:	orr	w9, w9, w8
  412844:	strb	w9, [x19, #24]
  412848:	str	x10, [x23, #1472]
  41284c:	tbnz	w8, #0, 412854 <reap_children@@Base+0xda8>
  412850:	bl	418590 <output_dump@@Base>
  412854:	adrp	x25, 440000 <shell_var@@Base+0x18>
  412858:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41285c:	ldr	w9, [x25, #32]
  412860:	ldr	w8, [x8, #3308]
  412864:	orr	w8, w8, w9
  412868:	cbz	w8, 412890 <reap_children@@Base+0xde4>
  41286c:	mov	x0, x22
  412870:	bl	4067d0 <strlen@plt>
  412874:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  412878:	mov	x1, x0
  41287c:	add	x2, x2, #0xb96
  412880:	mov	w0, wzr
  412884:	mov	x3, x22
  412888:	bl	418e08 <message@@Base>
  41288c:	b	4128a4 <reap_children@@Base+0xdf8>
  412890:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  412894:	ldr	w8, [x8, #3232]
  412898:	and	w9, w24, #0x2
  41289c:	orr	w8, w8, w9
  4128a0:	cbz	w8, 41286c <reap_children@@Base+0xdc0>
  4128a4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4128a8:	ldr	w9, [x8, #1624]
  4128ac:	add	w9, w9, #0x1
  4128b0:	str	w9, [x8, #1624]
  4128b4:	ldr	x22, [x21]
  4128b8:	cbz	x22, 412938 <reap_children@@Base+0xe8c>
  4128bc:	mov	x0, x22
  4128c0:	bl	4119bc <is_bourne_compatible_shell@@Base>
  4128c4:	cbz	w0, 412938 <reap_children@@Base+0xe8c>
  4128c8:	ldr	x8, [x21, #8]
  4128cc:	cbz	x8, 412938 <reap_children@@Base+0xe8c>
  4128d0:	ldrb	w9, [x8]
  4128d4:	cmp	w9, #0x2d
  4128d8:	b.ne	412938 <reap_children@@Base+0xe8c>  // b.any
  4128dc:	ldrb	w9, [x8, #1]
  4128e0:	cmp	w9, #0x65
  4128e4:	b.eq	412900 <reap_children@@Base+0xe54>  // b.none
  4128e8:	cmp	w9, #0x63
  4128ec:	b.ne	412938 <reap_children@@Base+0xe8c>  // b.any
  4128f0:	ldrb	w10, [x8, #2]
  4128f4:	cbz	w10, 412914 <reap_children@@Base+0xe68>
  4128f8:	cmp	w9, #0x65
  4128fc:	b.ne	412938 <reap_children@@Base+0xe8c>  // b.any
  412900:	ldrb	w9, [x8, #2]
  412904:	cmp	w9, #0x63
  412908:	b.ne	412938 <reap_children@@Base+0xe8c>  // b.any
  41290c:	ldrb	w8, [x8, #3]
  412910:	cbnz	w8, 412938 <reap_children@@Base+0xe8c>
  412914:	ldr	x8, [x21, #16]
  412918:	cbz	x8, 412938 <reap_children@@Base+0xe8c>
  41291c:	ldrb	w9, [x8]
  412920:	cmp	w9, #0x3a
  412924:	b.ne	412938 <reap_children@@Base+0xe8c>  // b.any
  412928:	ldrb	w8, [x8, #1]
  41292c:	cbnz	w8, 412938 <reap_children@@Base+0xe8c>
  412930:	ldr	x8, [x21, #24]
  412934:	cbz	x8, 412944 <reap_children@@Base+0xe98>
  412938:	cbnz	w20, 4129b4 <reap_children@@Base+0xf08>
  41293c:	ldr	w8, [x25, #32]
  412940:	cbz	w8, 4129b4 <reap_children@@Base+0xf08>
  412944:	mov	x0, x22
  412948:	bl	406cf0 <free@plt>
  41294c:	mov	x0, x21
  412950:	bl	406cf0 <free@plt>
  412954:	mov	x0, x19
  412958:	bl	412570 <reap_children@@Base+0xac4>
  41295c:	cbz	w0, 41296c <reap_children@@Base+0xec0>
  412960:	mov	x0, x19
  412964:	bl	4125fc <reap_children@@Base+0xb50>
  412968:	b	412990 <reap_children@@Base+0xee4>
  41296c:	ldr	x0, [x19, #40]
  412970:	mov	w1, #0x2                   	// #2
  412974:	bl	40b904 <set_command_state@@Base>
  412978:	ldr	x8, [x19, #40]
  41297c:	ldr	w9, [x8, #136]
  412980:	and	w9, w9, #0xfffffffc
  412984:	str	w9, [x8, #136]
  412988:	ldr	x0, [x19, #40]
  41298c:	bl	41e408 <notice_finished_file@@Base>
  412990:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  412994:	str	xzr, [x8, #1472]
  412998:	ldp	x20, x19, [sp, #80]
  41299c:	ldp	x22, x21, [sp, #64]
  4129a0:	ldp	x24, x23, [sp, #48]
  4129a4:	ldr	x25, [sp, #32]
  4129a8:	ldp	x29, x30, [sp, #16]
  4129ac:	add	sp, sp, #0x60
  4129b0:	ret
  4129b4:	bl	418bac <output_start@@Base>
  4129b8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4129bc:	ldr	x0, [x8, #2512]
  4129c0:	bl	406d80 <fflush@plt>
  4129c4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4129c8:	ldr	x0, [x8, #2488]
  4129cc:	bl	406d80 <fflush@plt>
  4129d0:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  4129d4:	ldrb	w9, [x24, #3084]
  4129d8:	ldrb	w8, [x19, #80]
  4129dc:	mov	w10, #0x4                   	// #4
  4129e0:	cmp	w9, #0x0
  4129e4:	csel	w10, wzr, w10, ne  // ne = any
  4129e8:	and	w8, w8, #0xfffffffb
  4129ec:	orr	w8, w8, w10
  4129f0:	strb	w8, [x19, #80]
  4129f4:	tbnz	w9, #0, 412a00 <reap_children@@Base+0xf54>
  4129f8:	mov	w9, #0x1                   	// #1
  4129fc:	strb	w9, [x24, #3084]
  412a00:	ldr	x9, [x19, #8]
  412a04:	and	w8, w8, #0xfffffff7
  412a08:	strb	w8, [x19, #80]
  412a0c:	cbz	x9, 412a1c <reap_children@@Base+0xf70>
  412a10:	ldrb	w8, [x19, #80]
  412a14:	tbnz	w8, #0, 412a30 <reap_children@@Base+0xf84>
  412a18:	b	412ab4 <reap_children@@Base+0x1008>
  412a1c:	ldr	x0, [x19, #40]
  412a20:	bl	4229fc <target_environment@@Base>
  412a24:	str	x0, [x19, #8]
  412a28:	ldrb	w8, [x19, #80]
  412a2c:	tbz	w8, #0, 412ab4 <reap_children@@Base+0x1008>
  412a30:	ldr	x22, [x19, #8]
  412a34:	tbnz	w8, #2, 412a44 <reap_children@@Base+0xf98>
  412a38:	bl	424718 <get_bad_stdin@@Base>
  412a3c:	mov	w2, w0
  412a40:	b	412a48 <reap_children@@Base+0xf9c>
  412a44:	mov	w2, wzr
  412a48:	add	x3, x29, #0x18
  412a4c:	add	x4, sp, #0x8
  412a50:	sub	x5, x29, #0x4
  412a54:	mov	x0, x21
  412a58:	mov	x1, x22
  412a5c:	bl	424774 <start_remote_job@@Base>
  412a60:	cbz	w0, 412a70 <reap_children@@Base+0xfc4>
  412a64:	mov	w8, #0x13                  	// #19
  412a68:	cbnz	w8, 412aac <reap_children@@Base+0x1000>
  412a6c:	b	412af8 <reap_children@@Base+0x104c>
  412a70:	ldrb	w8, [x19, #80]
  412a74:	tbz	w8, #2, 412a8c <reap_children@@Base+0xfe0>
  412a78:	ldur	w9, [x29, #-4]
  412a7c:	cbnz	w9, 412a8c <reap_children@@Base+0xfe0>
  412a80:	and	w8, w8, #0xfffffffb
  412a84:	strb	w8, [x19, #80]
  412a88:	strb	wzr, [x24, #3084]
  412a8c:	ldrb	w9, [x29, #24]
  412a90:	ldrb	w10, [x19, #80]
  412a94:	mov	w8, wzr
  412a98:	bfxil	w10, w9, #0, #1
  412a9c:	strb	w10, [x19, #80]
  412aa0:	ldr	w9, [sp, #8]
  412aa4:	str	w9, [x19, #76]
  412aa8:	cbz	w8, 412af8 <reap_children@@Base+0x104c>
  412aac:	cmp	w8, #0x13
  412ab0:	b.ne	412998 <reap_children@@Base+0xeec>  // b.any
  412ab4:	bl	4142a0 <construct_command_argv@@Base+0xa00>
  412ab8:	ldrb	w8, [x19, #80]
  412abc:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  412ac0:	mov	w0, w20
  412ac4:	and	w8, w8, #0xfe
  412ac8:	strb	w8, [x19, #80]
  412acc:	ldr	x24, [x22, #2528]
  412ad0:	bl	42449c <jobserver_pre_child@@Base>
  412ad4:	ldrb	w8, [x19, #80]
  412ad8:	mov	x0, x19
  412adc:	mov	x2, x21
  412ae0:	ubfx	w1, w8, #2, #1
  412ae4:	bl	4133c8 <child_execute_job@@Base>
  412ae8:	str	w0, [x19, #76]
  412aec:	mov	w0, w20
  412af0:	str	x24, [x22, #2528]
  412af4:	bl	424540 <jobserver_post_child@@Base>
  412af8:	ldr	w8, [x19, #76]
  412afc:	tbnz	w8, #31, 412b10 <reap_children@@Base+0x1064>
  412b00:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  412b04:	ldr	x9, [x8, #3064]
  412b08:	add	x9, x9, #0x1
  412b0c:	str	x9, [x8, #3064]
  412b10:	ldr	x0, [x19, #40]
  412b14:	mov	w1, #0x2                   	// #2
  412b18:	bl	40b904 <set_command_state@@Base>
  412b1c:	ldr	x0, [x21]
  412b20:	bl	406cf0 <free@plt>
  412b24:	mov	x0, x21
  412b28:	bl	406cf0 <free@plt>
  412b2c:	str	xzr, [x23, #1472]
  412b30:	b	412998 <reap_children@@Base+0xeec>
  412b34:	stp	x29, x30, [sp, #-32]!
  412b38:	stp	x20, x19, [sp, #16]
  412b3c:	mov	x19, x0
  412b40:	add	x0, x0, #0x10
  412b44:	mov	x29, sp
  412b48:	bl	418b44 <output_close@@Base>
  412b4c:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  412b50:	ldr	w8, [x20, #3072]
  412b54:	cbz	w8, 412c54 <reap_children@@Base+0x11a8>
  412b58:	bl	42430c <jobserver_enabled@@Base>
  412b5c:	cbz	w0, 412bb0 <reap_children@@Base+0x1104>
  412b60:	ldr	w8, [x20, #3072]
  412b64:	cmp	w8, #0x2
  412b68:	b.cc	412bb0 <reap_children@@Base+0x1104>  // b.lo, b.ul, b.last
  412b6c:	mov	w0, #0x1                   	// #1
  412b70:	bl	424360 <jobserver_release@@Base>
  412b74:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  412b78:	ldrb	w8, [x8, #3236]
  412b7c:	tbz	w8, #2, 412bb0 <reap_children@@Base+0x1104>
  412b80:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  412b84:	add	x1, x1, #0x98a
  412b88:	mov	w2, #0x5                   	// #5
  412b8c:	mov	x0, xzr
  412b90:	bl	406e50 <dcgettext@plt>
  412b94:	ldr	x8, [x19, #40]
  412b98:	mov	x1, x19
  412b9c:	ldr	x2, [x8]
  412ba0:	bl	406ef0 <printf@plt>
  412ba4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  412ba8:	ldr	x0, [x8, #2512]
  412bac:	bl	406d80 <fflush@plt>
  412bb0:	ldr	w8, [x20, #3072]
  412bb4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  412bb8:	ldr	w9, [x9, #2592]
  412bbc:	sub	w8, w8, #0x1
  412bc0:	str	w8, [x20, #3072]
  412bc4:	cbnz	w9, 412c48 <reap_children@@Base+0x119c>
  412bc8:	ldr	x8, [x19, #56]
  412bcc:	cbz	x8, 412c10 <reap_children@@Base+0x1164>
  412bd0:	ldr	x8, [x19, #40]
  412bd4:	ldr	x0, [x19, #56]
  412bd8:	ldr	x8, [x8, #32]
  412bdc:	ldrh	w8, [x8, #48]
  412be0:	cbz	w8, 412c0c <reap_children@@Base+0x1160>
  412be4:	mov	x20, xzr
  412be8:	ldr	x0, [x0, x20, lsl #3]
  412bec:	bl	406cf0 <free@plt>
  412bf0:	ldr	x8, [x19, #40]
  412bf4:	ldr	x0, [x19, #56]
  412bf8:	add	x20, x20, #0x1
  412bfc:	ldr	x8, [x8, #32]
  412c00:	ldrh	w8, [x8, #48]
  412c04:	cmp	x20, x8
  412c08:	b.cc	412be8 <reap_children@@Base+0x113c>  // b.lo, b.ul, b.last
  412c0c:	bl	406cf0 <free@plt>
  412c10:	ldr	x8, [x19, #8]
  412c14:	cbz	x8, 412c38 <reap_children@@Base+0x118c>
  412c18:	ldr	x0, [x8]
  412c1c:	cbz	x0, 412c30 <reap_children@@Base+0x1184>
  412c20:	add	x20, x8, #0x8
  412c24:	bl	406cf0 <free@plt>
  412c28:	ldr	x0, [x20], #8
  412c2c:	cbnz	x0, 412c24 <reap_children@@Base+0x1178>
  412c30:	ldr	x0, [x19, #8]
  412c34:	bl	406cf0 <free@plt>
  412c38:	ldr	x0, [x19]
  412c3c:	bl	406cf0 <free@plt>
  412c40:	mov	x0, x19
  412c44:	bl	406cf0 <free@plt>
  412c48:	ldp	x20, x19, [sp, #16]
  412c4c:	ldp	x29, x30, [sp], #32
  412c50:	ret
  412c54:	ldr	x8, [x19, #40]
  412c58:	ldr	x20, [x8]
  412c5c:	mov	x0, x20
  412c60:	bl	4067d0 <strlen@plt>
  412c64:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  412c68:	add	x1, x0, #0x14
  412c6c:	add	x2, x2, #0x955
  412c70:	mov	x0, xzr
  412c74:	mov	x3, x19
  412c78:	mov	x4, x20
  412c7c:	bl	4190fc <fatal@@Base>

0000000000412c80 <new_job@@Base>:
  412c80:	stp	x29, x30, [sp, #-96]!
  412c84:	stp	x28, x27, [sp, #16]
  412c88:	stp	x26, x25, [sp, #32]
  412c8c:	stp	x24, x23, [sp, #48]
  412c90:	stp	x22, x21, [sp, #64]
  412c94:	stp	x20, x19, [sp, #80]
  412c98:	mov	x29, sp
  412c9c:	sub	sp, sp, #0x20
  412ca0:	ldr	x21, [x0, #32]
  412ca4:	mov	x19, x0
  412ca8:	bl	413200 <start_waiting_jobs@@Base>
  412cac:	mov	w0, wzr
  412cb0:	mov	w1, wzr
  412cb4:	bl	411aac <reap_children@@Base>
  412cb8:	mov	x0, x21
  412cbc:	bl	408468 <chop_commands@@Base>
  412cc0:	mov	w0, #0x58                  	// #88
  412cc4:	bl	418094 <xcalloc@@Base>
  412cc8:	add	x22, x0, #0x10
  412ccc:	mov	x20, x0
  412cd0:	mov	x0, x22
  412cd4:	bl	418a0c <output_init@@Base>
  412cd8:	stp	x19, xzr, [x20, #40]
  412cdc:	ldrb	w8, [x20, #24]
  412ce0:	ldrb	w9, [x20, #80]
  412ce4:	ldr	w10, [x19, #136]
  412ce8:	stur	x19, [x29, #-8]
  412cec:	tst	w8, #0x1
  412cf0:	and	w8, w9, #0xffffffbf
  412cf4:	lsr	w9, w10, #10
  412cf8:	and	w9, w9, #0x40
  412cfc:	orr	w8, w9, w8
  412d00:	adrp	x10, 43d000 <stopchar_map@@Base+0x310>
  412d04:	csel	x9, xzr, x22, eq  // eq = none
  412d08:	strb	w8, [x20, #80]
  412d0c:	str	x9, [x10, #1472]
  412d10:	ldrh	w8, [x21, #48]
  412d14:	stur	x20, [x29, #-24]
  412d18:	lsl	x0, x8, #3
  412d1c:	bl	418070 <xmalloc@@Base>
  412d20:	ldrh	w8, [x21, #48]
  412d24:	stur	x0, [x29, #-16]
  412d28:	cbz	w8, 412f44 <new_job@@Base+0x2c4>
  412d2c:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  412d30:	mov	x28, xzr
  412d34:	mov	w27, #0x7d                  	// #125
  412d38:	mov	w20, #0x29                  	// #41
  412d3c:	add	x19, x19, #0xcf0
  412d40:	mov	w22, #0x20                  	// #32
  412d44:	b	412d78 <new_job@@Base+0xf8>
  412d48:	ldr	x8, [x21, #32]
  412d4c:	str	x28, [x21, #16]
  412d50:	lsl	x23, x28, #3
  412d54:	ldur	x1, [x29, #-8]
  412d58:	ldr	x0, [x8, x23]
  412d5c:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  412d60:	ldur	x8, [x29, #-16]
  412d64:	add	x28, x28, #0x1
  412d68:	str	x0, [x8, x23]
  412d6c:	ldrh	w8, [x21, #48]
  412d70:	cmp	x28, x8
  412d74:	b.cs	412f44 <new_job@@Base+0x2c4>  // b.hs, b.nlast
  412d78:	ldr	x8, [x21, #32]
  412d7c:	mov	w1, #0x24                  	// #36
  412d80:	ldr	x26, [x8, x28, lsl #3]
  412d84:	mov	x0, x26
  412d88:	bl	406d10 <strchr@plt>
  412d8c:	cbz	x0, 412f18 <new_job@@Base+0x298>
  412d90:	mov	x23, x0
  412d94:	mov	x24, x26
  412d98:	b	412db8 <new_job@@Base+0x138>
  412d9c:	mov	x24, x9
  412da0:	mov	w1, #0x24                  	// #36
  412da4:	mov	x0, x25
  412da8:	bl	406d10 <strchr@plt>
  412dac:	mov	x23, x0
  412db0:	mov	x26, x25
  412db4:	cbz	x0, 412f20 <new_job@@Base+0x2a0>
  412db8:	cmp	x24, x26
  412dbc:	add	x25, x23, #0x1
  412dc0:	b.eq	412dd4 <new_job@@Base+0x154>  // b.none
  412dc4:	sub	x2, x25, x26
  412dc8:	mov	x0, x24
  412dcc:	mov	x1, x26
  412dd0:	bl	4067a0 <memmove@plt>
  412dd4:	ldrb	w8, [x25]
  412dd8:	sub	x9, x25, x26
  412ddc:	add	x9, x24, x9
  412de0:	cmp	w8, #0x7b
  412de4:	b.eq	412df0 <new_job@@Base+0x170>  // b.none
  412de8:	cmp	w8, #0x28
  412dec:	b.ne	412d9c <new_job@@Base+0x11c>  // b.any
  412df0:	mov	x24, x9
  412df4:	strb	w8, [x24], #1
  412df8:	mov	x25, x23
  412dfc:	ldrb	w16, [x25, #2]!
  412e00:	cmp	w8, #0x28
  412e04:	csel	w10, w20, w27, eq  // eq = none
  412e08:	cbz	w16, 412da0 <new_job@@Base+0x120>
  412e0c:	mov	w11, wzr
  412e10:	sub	x12, x23, #0x1
  412e14:	add	x13, x23, #0x2
  412e18:	mov	w14, #0x2                   	// #2
  412e1c:	mov	w15, #0x1                   	// #1
  412e20:	cmp	w10, w16, uxtb
  412e24:	b.ne	412e30 <new_job@@Base+0x1b0>  // b.any
  412e28:	subs	w11, w11, #0x1
  412e2c:	b.lt	412da0 <new_job@@Base+0x120>  // b.tstop
  412e30:	and	w17, w16, #0xff
  412e34:	cmp	w17, #0x5c
  412e38:	b.ne	412e88 <new_job@@Base+0x208>  // b.any
  412e3c:	ldrb	w17, [x25, #1]
  412e40:	cmp	w17, #0xa
  412e44:	b.ne	412e88 <new_job@@Base+0x208>  // b.any
  412e48:	mov	w2, wzr
  412e4c:	mov	x0, x14
  412e50:	b	412e70 <new_job@@Base+0x1f0>
  412e54:	ldrb	w0, [x12, x0]
  412e58:	cmp	w0, #0x5c
  412e5c:	cset	w1, eq  // eq = none
  412e60:	cmp	w17, #0x0
  412e64:	cset	w2, eq  // eq = none
  412e68:	mov	x0, x18
  412e6c:	tbz	w1, #0, 412eb0 <new_job@@Base+0x230>
  412e70:	mov	w17, w2
  412e74:	cmp	x0, #0x3
  412e78:	sub	x18, x0, #0x1
  412e7c:	b.ge	412e54 <new_job@@Base+0x1d4>  // b.tcont
  412e80:	mov	w1, wzr
  412e84:	b	412e60 <new_job@@Base+0x1e0>
  412e88:	cmp	w8, w16, uxtb
  412e8c:	add	x14, x14, #0x1
  412e90:	cinc	w11, w11, eq  // eq = none
  412e94:	strb	w16, [x24]
  412e98:	add	x25, x23, x14
  412e9c:	ldrb	w16, [x25]
  412ea0:	add	x15, x15, #0x1
  412ea4:	add	x24, x9, x15
  412ea8:	cbnz	w16, 412e20 <new_job@@Base+0x1a0>
  412eac:	b	412da0 <new_job@@Base+0x120>
  412eb0:	cbz	w17, 412ebc <new_job@@Base+0x23c>
  412eb4:	add	x14, x14, #0x1
  412eb8:	b	412e94 <new_job@@Base+0x214>
  412ebc:	ldrb	w16, [x13, x14]
  412ec0:	add	x14, x14, #0x1
  412ec4:	ldrh	w16, [x19, x16, lsl #1]
  412ec8:	tst	w16, #0x6
  412ecc:	b.ne	412ebc <new_job@@Base+0x23c>  // b.any
  412ed0:	cmp	x15, #0x2
  412ed4:	add	x14, x14, #0x1
  412ed8:	b.lt	412f0c <new_job@@Base+0x28c>  // b.tstop
  412edc:	add	x16, x9, x15
  412ee0:	ldurb	w17, [x16, #-1]
  412ee4:	ldrh	w17, [x19, x17, lsl #1]
  412ee8:	tbz	w17, #1, 412f04 <new_job@@Base+0x284>
  412eec:	sub	x17, x15, #0x1
  412ef0:	cmp	x15, #0x2
  412ef4:	mov	x15, x17
  412ef8:	b.gt	412edc <new_job@@Base+0x25c>
  412efc:	add	x16, x9, x17
  412f00:	mov	x15, x17
  412f04:	strb	w22, [x16]
  412f08:	b	412e98 <new_job@@Base+0x218>
  412f0c:	add	x16, x9, x15
  412f10:	strb	w22, [x16]
  412f14:	b	412e98 <new_job@@Base+0x218>
  412f18:	mov	x24, x26
  412f1c:	mov	x25, x26
  412f20:	cmp	x24, x25
  412f24:	b.eq	412d48 <new_job@@Base+0xc8>  // b.none
  412f28:	mov	x0, x25
  412f2c:	bl	4067d0 <strlen@plt>
  412f30:	add	x2, x0, #0x1
  412f34:	mov	x0, x24
  412f38:	mov	x1, x25
  412f3c:	bl	4067a0 <memmove@plt>
  412f40:	b	412d48 <new_job@@Base+0xc8>
  412f44:	str	xzr, [x21, #16]
  412f48:	ldp	x0, x8, [x29, #-24]
  412f4c:	str	x8, [x0, #56]
  412f50:	bl	412570 <reap_children@@Base+0xac4>
  412f54:	adrp	x19, 440000 <shell_var@@Base+0x18>
  412f58:	ldr	w8, [x19, #240]
  412f5c:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  412f60:	cbz	w8, 412f88 <new_job@@Base+0x308>
  412f64:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  412f68:	ldr	w8, [x22, #3056]
  412f6c:	ldr	w9, [x19, #240]
  412f70:	cmp	w8, w9
  412f74:	b.ne	413054 <new_job@@Base+0x3d4>  // b.any
  412f78:	mov	w0, #0x1                   	// #1
  412f7c:	mov	w1, wzr
  412f80:	bl	411aac <reap_children@@Base>
  412f84:	b	412f68 <new_job@@Base+0x2e8>
  412f88:	bl	42430c <jobserver_enabled@@Base>
  412f8c:	cbz	w0, 413054 <new_job@@Base+0x3d4>
  412f90:	adrp	x27, 427000 <_IO_stdin_used@@Base+0x20e0>
  412f94:	adrp	x28, 427000 <_IO_stdin_used@@Base+0x20e0>
  412f98:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x20e0>
  412f9c:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  412fa0:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  412fa4:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  412fa8:	add	x27, x27, #0x989
  412fac:	add	x28, x28, #0x844
  412fb0:	add	x22, x22, #0x81e
  412fb4:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  412fb8:	ldrb	w8, [x24, #3236]
  412fbc:	tbz	w8, #2, 412fdc <new_job@@Base+0x35c>
  412fc0:	ldr	x8, [x25, #3048]
  412fc4:	mov	x0, x22
  412fc8:	cmp	x8, #0x0
  412fcc:	csel	x1, x28, x27, eq  // eq = none
  412fd0:	bl	406ef0 <printf@plt>
  412fd4:	ldr	x0, [x23, #2512]
  412fd8:	bl	406d80 <fflush@plt>
  412fdc:	ldr	w8, [x20, #3072]
  412fe0:	cbz	w8, 413054 <new_job@@Base+0x3d4>
  412fe4:	bl	424574 <jobserver_pre_acquire@@Base>
  412fe8:	mov	w0, wzr
  412fec:	mov	w1, wzr
  412ff0:	bl	411aac <reap_children@@Base>
  412ff4:	bl	413200 <start_waiting_jobs@@Base>
  412ff8:	ldr	w8, [x20, #3072]
  412ffc:	cbz	w8, 413054 <new_job@@Base+0x3d4>
  413000:	ldr	x8, [x25, #3048]
  413004:	cbz	x8, 4131ec <new_job@@Base+0x56c>
  413008:	ldr	x8, [x26, #3088]
  41300c:	cmp	x8, #0x0
  413010:	cset	w0, ne  // ne = any
  413014:	bl	424578 <jobserver_acquire@@Base>
  413018:	cmp	w0, #0x1
  41301c:	b.ne	412fb8 <new_job@@Base+0x338>  // b.any
  413020:	ldrb	w8, [x24, #3236]
  413024:	tbz	w8, #2, 413054 <new_job@@Base+0x3d4>
  413028:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41302c:	add	x1, x1, #0x87c
  413030:	mov	w2, #0x5                   	// #5
  413034:	mov	x0, xzr
  413038:	bl	406e50 <dcgettext@plt>
  41303c:	ldur	x1, [x29, #-24]
  413040:	ldr	x8, [x1, #40]
  413044:	ldr	x2, [x8]
  413048:	bl	406ef0 <printf@plt>
  41304c:	ldr	x0, [x23, #2512]
  413050:	bl	406d80 <fflush@plt>
  413054:	ldr	w8, [x20, #3072]
  413058:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41305c:	ldr	w9, [x9, #3308]
  413060:	ldur	x25, [x29, #-24]
  413064:	add	w8, w8, #0x1
  413068:	str	w8, [x20, #3072]
  41306c:	cbz	w9, 413180 <new_job@@Base+0x500>
  413070:	ldr	x1, [x25, #40]
  413074:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  413078:	add	x0, x0, #0x89f
  41307c:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  413080:	ldr	x24, [x21]
  413084:	mov	x22, x0
  413088:	cbz	x24, 4130c4 <new_job@@Base+0x444>
  41308c:	mov	x0, x24
  413090:	bl	4067d0 <strlen@plt>
  413094:	add	x9, x0, #0x1c
  413098:	mov	x8, sp
  41309c:	and	x9, x9, #0xfffffffffffffff0
  4130a0:	sub	x23, x8, x9
  4130a4:	mov	sp, x23
  4130a8:	ldr	x3, [x21, #8]
  4130ac:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4130b0:	add	x1, x1, #0x8ac
  4130b4:	mov	x0, x23
  4130b8:	mov	x2, x24
  4130bc:	bl	406870 <sprintf@plt>
  4130c0:	b	4130dc <new_job@@Base+0x45c>
  4130c4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4130c8:	add	x1, x1, #0x8a2
  4130cc:	mov	w2, #0x5                   	// #5
  4130d0:	mov	x0, xzr
  4130d4:	bl	406e50 <dcgettext@plt>
  4130d8:	mov	x23, x0
  4130dc:	ldrb	w20, [x22]
  4130e0:	mov	x0, x23
  4130e4:	bl	4067d0 <strlen@plt>
  4130e8:	ldr	x8, [x25, #40]
  4130ec:	mov	x21, x0
  4130f0:	ldr	x8, [x8]
  4130f4:	mov	x0, x8
  4130f8:	bl	4067d0 <strlen@plt>
  4130fc:	add	x21, x0, x21
  413100:	cbz	w20, 413148 <new_job@@Base+0x4c8>
  413104:	mov	x0, x22
  413108:	bl	4067d0 <strlen@plt>
  41310c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  413110:	add	x21, x0, x21
  413114:	add	x1, x1, #0x8d2
  413118:	mov	w2, #0x5                   	// #5
  41311c:	mov	x0, xzr
  413120:	bl	406e50 <dcgettext@plt>
  413124:	ldr	x8, [x25, #40]
  413128:	mov	x2, x0
  41312c:	mov	w0, wzr
  413130:	mov	x1, x21
  413134:	ldr	x4, [x8]
  413138:	mov	x3, x23
  41313c:	mov	x5, x22
  413140:	bl	418e08 <message@@Base>
  413144:	b	413178 <new_job@@Base+0x4f8>
  413148:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41314c:	add	x1, x1, #0x8b3
  413150:	mov	w2, #0x5                   	// #5
  413154:	mov	x0, xzr
  413158:	bl	406e50 <dcgettext@plt>
  41315c:	ldr	x8, [x25, #40]
  413160:	mov	x2, x0
  413164:	mov	w0, wzr
  413168:	mov	x1, x21
  41316c:	ldr	x4, [x8]
  413170:	mov	x3, x23
  413174:	bl	418e08 <message@@Base>
  413178:	mov	x0, x22
  41317c:	bl	406cf0 <free@plt>
  413180:	mov	x0, x25
  413184:	bl	413244 <start_waiting_jobs@@Base+0x44>
  413188:	ldr	w8, [x19, #240]
  41318c:	ldur	x19, [x29, #-8]
  413190:	cmp	w8, #0x1
  413194:	b.eq	4131b4 <new_job@@Base+0x534>  // b.none
  413198:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41319c:	ldr	w8, [x8, #68]
  4131a0:	cbz	w8, 4131c4 <new_job@@Base+0x544>
  4131a4:	b	4131b4 <new_job@@Base+0x534>
  4131a8:	mov	w0, #0x1                   	// #1
  4131ac:	mov	w1, wzr
  4131b0:	bl	411aac <reap_children@@Base>
  4131b4:	ldr	w8, [x19, #136]
  4131b8:	and	w8, w8, #0xc
  4131bc:	cmp	w8, #0x8
  4131c0:	b.eq	4131a8 <new_job@@Base+0x528>  // b.none
  4131c4:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  4131c8:	str	xzr, [x8, #1472]
  4131cc:	mov	sp, x29
  4131d0:	ldp	x20, x19, [sp, #80]
  4131d4:	ldp	x22, x21, [sp, #64]
  4131d8:	ldp	x24, x23, [sp, #48]
  4131dc:	ldp	x26, x25, [sp, #32]
  4131e0:	ldp	x28, x27, [sp, #16]
  4131e4:	ldp	x29, x30, [sp], #96
  4131e8:	ret
  4131ec:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  4131f0:	add	x2, x2, #0x84b
  4131f4:	mov	x0, xzr
  4131f8:	mov	x1, xzr
  4131fc:	bl	4190fc <fatal@@Base>

0000000000413200 <start_waiting_jobs@@Base>:
  413200:	stp	x29, x30, [sp, #-32]!
  413204:	str	x19, [sp, #16]
  413208:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  41320c:	mov	x29, sp
  413210:	ldr	x8, [x19, #3088]
  413214:	cbz	x8, 413238 <start_waiting_jobs@@Base+0x38>
  413218:	mov	w0, wzr
  41321c:	mov	w1, wzr
  413220:	bl	411aac <reap_children@@Base>
  413224:	ldr	x0, [x19, #3088]
  413228:	ldr	x8, [x0, #32]
  41322c:	str	x8, [x19, #3088]
  413230:	bl	413244 <start_waiting_jobs@@Base+0x44>
  413234:	cbnz	w0, 413210 <start_waiting_jobs@@Base+0x10>
  413238:	ldr	x19, [sp, #16]
  41323c:	ldp	x29, x30, [sp], #32
  413240:	ret
  413244:	stp	x29, x30, [sp, #-64]!
  413248:	stp	x22, x21, [sp, #32]
  41324c:	stp	x20, x19, [sp, #48]
  413250:	ldr	x20, [x0, #40]
  413254:	mov	x19, x0
  413258:	mov	w0, #0x1                   	// #1
  41325c:	str	x23, [sp, #16]
  413260:	mov	x29, sp
  413264:	bl	42476c <start_remote_job_p@@Base>
  413268:	ldrb	w8, [x19, #80]
  41326c:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  413270:	bfxil	w8, w0, #0, #1
  413274:	strb	w8, [x19, #80]
  413278:	tbnz	w0, #0, 4132b0 <start_waiting_jobs@@Base+0xb0>
  41327c:	ldr	w8, [x22, #3056]
  413280:	cbz	w8, 4132b0 <start_waiting_jobs@@Base+0xb0>
  413284:	bl	4142c4 <construct_command_argv@@Base+0xa24>
  413288:	cbz	w0, 4132b0 <start_waiting_jobs@@Base+0xb0>
  41328c:	mov	w1, #0x2                   	// #2
  413290:	mov	x0, x20
  413294:	bl	40b904 <set_command_state@@Base>
  413298:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41329c:	ldr	x9, [x8, #3088]
  4132a0:	mov	w0, wzr
  4132a4:	str	x9, [x19, #32]
  4132a8:	str	x19, [x8, #3088]
  4132ac:	b	4133b4 <start_waiting_jobs@@Base+0x1b4>
  4132b0:	mov	x0, x19
  4132b4:	bl	4125fc <reap_children@@Base+0xb50>
  4132b8:	ldr	w9, [x20, #136]
  4132bc:	ubfx	w8, w9, #2, #2
  4132c0:	cbz	w8, 413338 <start_waiting_jobs@@Base+0x138>
  4132c4:	cmp	w8, #0x3
  4132c8:	b.eq	413340 <start_waiting_jobs@@Base+0x140>  // b.none
  4132cc:	cmp	w8, #0x2
  4132d0:	b.ne	4133b0 <start_waiting_jobs@@Base+0x1b0>  // b.any
  4132d4:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  4132d8:	ldr	w8, [x19, #76]
  4132dc:	ldr	x9, [x23, #3048]
  4132e0:	cmp	w8, #0x1
  4132e4:	str	x9, [x19, #32]
  4132e8:	b.lt	4133a8 <start_waiting_jobs@@Base+0x1a8>  // b.tstop
  4132ec:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4132f0:	ldrb	w8, [x8, #3236]
  4132f4:	tbz	w8, #2, 413390 <start_waiting_jobs@@Base+0x190>
  4132f8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4132fc:	add	x1, x1, #0x9ad
  413300:	mov	w2, #0x5                   	// #5
  413304:	mov	x0, xzr
  413308:	bl	406e50 <dcgettext@plt>
  41330c:	ldr	x8, [x19, #40]
  413310:	mov	x21, x0
  413314:	ldr	x20, [x8]
  413318:	ldr	w8, [x19, #76]
  41331c:	mov	w0, w8
  413320:	bl	412340 <reap_children@@Base+0x894>
  413324:	ldrb	w8, [x19, #80]
  413328:	tbnz	w8, #0, 413354 <start_waiting_jobs@@Base+0x154>
  41332c:	adrp	x4, 427000 <_IO_stdin_used@@Base+0x20e0>
  413330:	add	x4, x4, #0x989
  413334:	b	41336c <start_waiting_jobs@@Base+0x16c>
  413338:	and	w8, w9, #0xfffffffc
  41333c:	str	w8, [x20, #136]
  413340:	mov	x0, x20
  413344:	bl	41e408 <notice_finished_file@@Base>
  413348:	mov	x0, x19
  41334c:	bl	412b34 <reap_children@@Base+0x1088>
  413350:	b	4133b0 <start_waiting_jobs@@Base+0x1b0>
  413354:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  413358:	add	x1, x1, #0x735
  41335c:	mov	w2, #0x5                   	// #5
  413360:	mov	x0, xzr
  413364:	bl	406e50 <dcgettext@plt>
  413368:	mov	x4, x0
  41336c:	adrp	x3, 43c000 <memcpy@GLIBC_2.17>
  413370:	add	x3, x3, #0xc18
  413374:	mov	x0, x21
  413378:	mov	x1, x19
  41337c:	mov	x2, x20
  413380:	bl	406ef0 <printf@plt>
  413384:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  413388:	ldr	x0, [x8, #2512]
  41338c:	bl	406d80 <fflush@plt>
  413390:	ldr	w8, [x22, #3056]
  413394:	add	w8, w8, #0x1
  413398:	str	w8, [x22, #3056]
  41339c:	ldrb	w8, [x19, #80]
  4133a0:	orr	w8, w8, #0x20
  4133a4:	strb	w8, [x19, #80]
  4133a8:	str	x19, [x23, #3048]
  4133ac:	bl	41427c <construct_command_argv@@Base+0x9dc>
  4133b0:	mov	w0, #0x1                   	// #1
  4133b4:	ldp	x20, x19, [sp, #48]
  4133b8:	ldp	x22, x21, [sp, #32]
  4133bc:	ldr	x23, [sp, #16]
  4133c0:	ldp	x29, x30, [sp], #64
  4133c4:	ret

00000000004133c8 <child_execute_job@@Base>:
  4133c8:	stp	x29, x30, [sp, #-96]!
  4133cc:	stp	x28, x27, [sp, #16]
  4133d0:	stp	x26, x25, [sp, #32]
  4133d4:	stp	x24, x23, [sp, #48]
  4133d8:	stp	x22, x21, [sp, #64]
  4133dc:	stp	x20, x19, [sp, #80]
  4133e0:	mov	x29, sp
  4133e4:	sub	sp, sp, #0x220
  4133e8:	mov	x19, x2
  4133ec:	mov	x20, x0
  4133f0:	cbz	w1, 413404 <child_execute_job@@Base+0x3c>
  4133f4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4133f8:	ldr	x0, [x8, #2520]
  4133fc:	bl	406980 <fileno@plt>
  413400:	b	413408 <child_execute_job@@Base+0x40>
  413404:	bl	424718 <get_bad_stdin@@Base>
  413408:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  41340c:	mov	w24, w0
  413410:	ldr	x0, [x27, #2512]
  413414:	bl	406980 <fileno@plt>
  413418:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  41341c:	ldr	x8, [x26, #2488]
  413420:	mov	w23, w0
  413424:	mov	x0, x8
  413428:	bl	406980 <fileno@plt>
  41342c:	ldrb	w8, [x20, #24]
  413430:	mov	w21, w0
  413434:	tbz	w8, #0, 41344c <child_execute_job@@Base+0x84>
  413438:	ldp	w8, w9, [x20, #16]
  41343c:	cmp	w8, #0x0
  413440:	csel	w23, w8, w23, ge  // ge = tcont
  413444:	cmp	w9, #0x0
  413448:	csel	w21, w9, w21, ge  // ge = tcont
  41344c:	add	x0, sp, #0xd0
  413450:	bl	406dd0 <posix_spawnattr_init@plt>
  413454:	mov	w22, w0
  413458:	cbnz	w0, 4134a8 <child_execute_job@@Base+0xe0>
  41345c:	add	x0, sp, #0x80
  413460:	bl	406c50 <posix_spawn_file_actions_init@plt>
  413464:	mov	w22, w0
  413468:	cbnz	w0, 4134a0 <child_execute_job@@Base+0xd8>
  41346c:	mov	x0, sp
  413470:	bl	406a50 <sigemptyset@plt>
  413474:	add	x0, sp, #0xd0
  413478:	mov	x1, sp
  41347c:	bl	406c20 <posix_spawnattr_setsigmask@plt>
  413480:	cmp	w0, #0x0
  413484:	mov	w8, #0x41                  	// #65
  413488:	mov	w9, #0x49                  	// #73
  41348c:	mov	w22, w0
  413490:	csel	w25, w9, w8, eq  // eq = none
  413494:	cbz	w0, 413524 <child_execute_job@@Base+0x15c>
  413498:	add	x0, sp, #0x80
  41349c:	bl	406b30 <posix_spawn_file_actions_destroy@plt>
  4134a0:	add	x0, sp, #0xd0
  4134a4:	bl	406a60 <posix_spawnattr_destroy@plt>
  4134a8:	cbz	w22, 4134b4 <child_execute_job@@Base+0xec>
  4134ac:	mov	w8, #0xffffffff            	// #-1
  4134b0:	str	w8, [sp]
  4134b4:	ldr	w8, [sp]
  4134b8:	tbz	w8, #31, 413500 <child_execute_job@@Base+0x138>
  4134bc:	ldr	x0, [x19]
  4134c0:	bl	4067d0 <strlen@plt>
  4134c4:	mov	x20, x0
  4134c8:	mov	w0, w22
  4134cc:	bl	406b90 <strerror@plt>
  4134d0:	bl	4067d0 <strlen@plt>
  4134d4:	ldr	x19, [x19]
  4134d8:	add	x20, x0, x20
  4134dc:	mov	w0, w22
  4134e0:	bl	406b90 <strerror@plt>
  4134e4:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  4134e8:	mov	x4, x0
  4134ec:	add	x2, x2, #0x2aa
  4134f0:	mov	x0, xzr
  4134f4:	mov	x1, x20
  4134f8:	mov	x3, x19
  4134fc:	bl	418f84 <error@@Base>
  413500:	ldr	w0, [sp]
  413504:	add	sp, sp, #0x220
  413508:	ldp	x20, x19, [sp, #80]
  41350c:	ldp	x22, x21, [sp, #64]
  413510:	ldp	x24, x23, [sp, #48]
  413514:	ldp	x26, x25, [sp, #32]
  413518:	ldp	x28, x27, [sp, #16]
  41351c:	ldp	x29, x30, [sp], #96
  413520:	ret
  413524:	tbnz	w24, #31, 41355c <child_execute_job@@Base+0x194>
  413528:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  41352c:	ldr	x0, [x22, #2520]
  413530:	bl	406980 <fileno@plt>
  413534:	cmp	w24, w0
  413538:	b.eq	41355c <child_execute_job@@Base+0x194>  // b.none
  41353c:	ldr	x0, [x22, #2520]
  413540:	bl	406980 <fileno@plt>
  413544:	mov	w2, w0
  413548:	add	x0, sp, #0x80
  41354c:	mov	w1, w24
  413550:	bl	4069a0 <posix_spawn_file_actions_adddup2@plt>
  413554:	mov	w22, w0
  413558:	cbnz	w0, 413498 <child_execute_job@@Base+0xd0>
  41355c:	ldr	x0, [x27, #2512]
  413560:	bl	406980 <fileno@plt>
  413564:	cmp	w23, w0
  413568:	b.eq	41358c <child_execute_job@@Base+0x1c4>  // b.none
  41356c:	ldr	x0, [x27, #2512]
  413570:	bl	406980 <fileno@plt>
  413574:	mov	w2, w0
  413578:	add	x0, sp, #0x80
  41357c:	mov	w1, w23
  413580:	bl	4069a0 <posix_spawn_file_actions_adddup2@plt>
  413584:	mov	w22, w0
  413588:	cbnz	w0, 413498 <child_execute_job@@Base+0xd0>
  41358c:	ldr	x0, [x26, #2488]
  413590:	bl	406980 <fileno@plt>
  413594:	cmp	w21, w0
  413598:	b.eq	4135bc <child_execute_job@@Base+0x1f4>  // b.none
  41359c:	ldr	x0, [x26, #2488]
  4135a0:	bl	406980 <fileno@plt>
  4135a4:	mov	w2, w0
  4135a8:	add	x0, sp, #0x80
  4135ac:	mov	w1, w21
  4135b0:	bl	4069a0 <posix_spawn_file_actions_adddup2@plt>
  4135b4:	mov	w22, w0
  4135b8:	cbnz	w0, 413498 <child_execute_job@@Base+0xd0>
  4135bc:	add	x0, sp, #0xd0
  4135c0:	mov	w1, w25
  4135c4:	bl	406c00 <posix_spawnattr_setflags@plt>
  4135c8:	mov	w22, w0
  4135cc:	cbnz	w0, 413498 <child_execute_job@@Base+0xd0>
  4135d0:	ldr	x9, [x20, #8]
  4135d4:	ldr	x8, [x9]
  4135d8:	cbz	x8, 413630 <child_execute_job@@Base+0x268>
  4135dc:	add	x9, x9, #0x8
  4135e0:	b	4135ec <child_execute_job@@Base+0x224>
  4135e4:	ldr	x8, [x9], #8
  4135e8:	cbz	x8, 413630 <child_execute_job@@Base+0x268>
  4135ec:	ldrb	w10, [x8]
  4135f0:	cmp	w10, #0x50
  4135f4:	b.ne	4135e4 <child_execute_job@@Base+0x21c>  // b.any
  4135f8:	ldrb	w10, [x8, #1]
  4135fc:	cmp	w10, #0x41
  413600:	b.ne	4135e4 <child_execute_job@@Base+0x21c>  // b.any
  413604:	ldrb	w10, [x8, #2]
  413608:	cmp	w10, #0x54
  41360c:	b.ne	4135e4 <child_execute_job@@Base+0x21c>  // b.any
  413610:	ldrb	w10, [x8, #3]
  413614:	cmp	w10, #0x48
  413618:	b.ne	4135e4 <child_execute_job@@Base+0x21c>  // b.any
  41361c:	ldrb	w10, [x8, #4]
  413620:	cmp	w10, #0x3d
  413624:	b.ne	4135e4 <child_execute_job@@Base+0x21c>  // b.any
  413628:	add	x1, x8, #0x5
  41362c:	b	413634 <child_execute_job@@Base+0x26c>
  413630:	mov	x1, xzr
  413634:	ldr	x0, [x19]
  413638:	mov	w2, wzr
  41363c:	bl	4247b0 <find_in_given_path@@Base>
  413640:	cbz	x0, 413698 <child_execute_job@@Base+0x2d0>
  413644:	mov	x21, x0
  413648:	ldr	x5, [x20, #8]
  41364c:	mov	x0, sp
  413650:	add	x2, sp, #0x80
  413654:	add	x3, sp, #0xd0
  413658:	mov	x1, x21
  41365c:	mov	x4, x19
  413660:	bl	406da0 <posix_spawn@plt>
  413664:	cmp	w0, #0x4
  413668:	b.eq	413648 <child_execute_job@@Base+0x280>  // b.none
  41366c:	mov	w22, w0
  413670:	cmp	w0, #0x8
  413674:	b.ne	413700 <child_execute_job@@Base+0x338>  // b.any
  413678:	ldr	x8, [x19]
  41367c:	cbz	x8, 4136a4 <child_execute_job@@Base+0x2dc>
  413680:	mov	x22, xzr
  413684:	add	x8, x19, #0x8
  413688:	ldr	x9, [x8, x22]
  41368c:	add	x22, x22, #0x8
  413690:	cbnz	x9, 413688 <child_execute_job@@Base+0x2c0>
  413694:	b	4136a8 <child_execute_job@@Base+0x2e0>
  413698:	bl	406f00 <__errno_location@plt>
  41369c:	ldr	w22, [x0]
  4136a0:	b	413498 <child_execute_job@@Base+0xd0>
  4136a4:	mov	x22, xzr
  4136a8:	add	x0, x22, #0x18
  4136ac:	bl	418070 <xmalloc@@Base>
  4136b0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4136b4:	ldr	x8, [x8, #2352]
  4136b8:	mov	x23, x0
  4136bc:	add	x0, x0, #0x10
  4136c0:	add	x1, x19, #0x8
  4136c4:	mov	x2, x22
  4136c8:	stp	x8, x21, [x23]
  4136cc:	bl	406790 <memcpy@plt>
  4136d0:	ldr	x1, [x23]
  4136d4:	ldr	x5, [x20, #8]
  4136d8:	mov	x0, sp
  4136dc:	add	x2, sp, #0x80
  4136e0:	add	x3, sp, #0xd0
  4136e4:	mov	x4, x23
  4136e8:	bl	406da0 <posix_spawn@plt>
  4136ec:	cmp	w0, #0x4
  4136f0:	b.eq	4136d0 <child_execute_job@@Base+0x308>  // b.none
  4136f4:	mov	w22, w0
  4136f8:	mov	x0, x23
  4136fc:	bl	406cf0 <free@plt>
  413700:	cbnz	w22, 413498 <child_execute_job@@Base+0xd0>
  413704:	ldr	x0, [x20]
  413708:	bl	406cf0 <free@plt>
  41370c:	ldr	x8, [x19]
  413710:	cmp	x21, x8
  413714:	b.eq	413724 <child_execute_job@@Base+0x35c>  // b.none
  413718:	mov	w22, wzr
  41371c:	str	x21, [x20]
  413720:	b	413498 <child_execute_job@@Base+0xd0>
  413724:	mov	x0, x21
  413728:	bl	4180bc <xstrdup@@Base>
  41372c:	mov	w22, wzr
  413730:	str	x0, [x20]
  413734:	b	413498 <child_execute_job@@Base+0xd0>

0000000000413738 <exec_command@@Base>:
  413738:	stp	x29, x30, [sp, #-48]!
  41373c:	stp	x22, x21, [sp, #16]
  413740:	stp	x20, x19, [sp, #32]
  413744:	mov	x29, sp
  413748:	mov	x19, x1
  41374c:	mov	x20, x0
  413750:	bl	418450 <child_access@@Base>
  413754:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  413758:	str	x19, [x8, #2528]
  41375c:	ldr	x0, [x20]
  413760:	mov	x1, x20
  413764:	bl	406ca0 <execvp@plt>
  413768:	bl	406f00 <__errno_location@plt>
  41376c:	ldr	w21, [x0]
  413770:	mov	x19, x0
  413774:	cmp	w21, #0x8
  413778:	b.eq	4137c8 <exec_command@@Base+0x90>  // b.none
  41377c:	ldr	x0, [x20]
  413780:	cmp	w21, #0x2
  413784:	bl	4067d0 <strlen@plt>
  413788:	mov	x22, x0
  41378c:	mov	w0, w21
  413790:	bl	406b90 <strerror@plt>
  413794:	bl	4067d0 <strlen@plt>
  413798:	ldr	w8, [x19]
  41379c:	ldr	x20, [x20]
  4137a0:	add	x19, x0, x22
  4137a4:	mov	w0, w8
  4137a8:	bl	406b90 <strerror@plt>
  4137ac:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  4137b0:	mov	x4, x0
  4137b4:	add	x2, x2, #0x2aa
  4137b8:	mov	x0, xzr
  4137bc:	mov	x1, x19
  4137c0:	mov	x3, x20
  4137c4:	b	413894 <exec_command@@Base+0x15c>
  4137c8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4137cc:	add	x0, x0, #0x83
  4137d0:	bl	406f10 <getenv@plt>
  4137d4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4137d8:	ldr	x9, [x9, #2352]
  4137dc:	mov	x8, xzr
  4137e0:	add	x10, x20, #0x8
  4137e4:	ldr	x11, [x10, x8, lsl #3]
  4137e8:	add	x8, x8, #0x1
  4137ec:	cbnz	x11, 4137e4 <exec_command@@Base+0xac>
  4137f0:	cmp	x0, #0x0
  4137f4:	csel	x21, x9, x0, eq  // eq = none
  4137f8:	add	w9, w8, #0x2
  4137fc:	lsl	x9, x9, #3
  413800:	add	x9, x9, #0xf
  413804:	mov	x10, sp
  413808:	and	x9, x9, #0xffffffff0
  41380c:	sub	x22, x10, x9
  413810:	mov	sp, x22
  413814:	and	x9, x8, #0xffffffff
  413818:	sub	w8, w8, #0x1
  41381c:	ldr	x10, [x20]
  413820:	sub	x8, x9, x8
  413824:	lsl	x8, x8, #3
  413828:	add	x11, x8, x22
  41382c:	add	x1, x20, x8
  413830:	add	x0, x11, #0x8
  413834:	lsl	x2, x9, #3
  413838:	stp	x21, x10, [x22]
  41383c:	bl	406790 <memcpy@plt>
  413840:	mov	x0, x21
  413844:	mov	x1, x22
  413848:	bl	406ca0 <execvp@plt>
  41384c:	ldr	x0, [x22]
  413850:	bl	4067d0 <strlen@plt>
  413854:	ldr	w8, [x19]
  413858:	mov	x20, x0
  41385c:	mov	w0, w8
  413860:	bl	406b90 <strerror@plt>
  413864:	bl	4067d0 <strlen@plt>
  413868:	ldr	w8, [x19]
  41386c:	ldr	x21, [x22]
  413870:	add	x19, x0, x20
  413874:	mov	w0, w8
  413878:	bl	406b90 <strerror@plt>
  41387c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  413880:	mov	x4, x0
  413884:	add	x2, x2, #0x2aa
  413888:	mov	x0, xzr
  41388c:	mov	x1, x19
  413890:	mov	x3, x21
  413894:	bl	418f84 <error@@Base>
  413898:	mov	w0, #0x7f                  	// #127
  41389c:	bl	4067b0 <_exit@plt>

00000000004138a0 <construct_command_argv@@Base>:
  4138a0:	stp	x29, x30, [sp, #-80]!
  4138a4:	stp	x24, x23, [sp, #32]
  4138a8:	adrp	x24, 440000 <shell_var@@Base+0x18>
  4138ac:	str	x25, [sp, #16]
  4138b0:	ldr	w25, [x24, #96]
  4138b4:	stp	x22, x21, [sp, #48]
  4138b8:	mov	x21, x0
  4138bc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  4138c0:	stp	x20, x19, [sp, #64]
  4138c4:	mov	x20, x1
  4138c8:	add	x0, x0, #0x8f4
  4138cc:	mov	x1, x2
  4138d0:	mov	x29, sp
  4138d4:	mov	x19, x2
  4138d8:	str	wzr, [x24, #96]
  4138dc:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  4138e0:	mov	x22, x0
  4138e4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  4138e8:	add	x0, x0, #0x8fd
  4138ec:	mov	x1, x19
  4138f0:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  4138f4:	mov	x23, x0
  4138f8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  4138fc:	add	x0, x0, #0x90c
  413900:	mov	x1, x19
  413904:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  413908:	mov	x19, x0
  41390c:	mov	x0, x21
  413910:	mov	x1, x20
  413914:	mov	x2, x22
  413918:	mov	x3, x23
  41391c:	mov	x4, x19
  413920:	str	w25, [x24, #96]
  413924:	bl	413960 <construct_command_argv@@Base+0xc0>
  413928:	mov	x20, x0
  41392c:	mov	x0, x22
  413930:	bl	406cf0 <free@plt>
  413934:	mov	x0, x23
  413938:	bl	406cf0 <free@plt>
  41393c:	mov	x0, x19
  413940:	bl	406cf0 <free@plt>
  413944:	mov	x0, x20
  413948:	ldp	x20, x19, [sp, #64]
  41394c:	ldp	x22, x21, [sp, #48]
  413950:	ldp	x24, x23, [sp, #32]
  413954:	ldr	x25, [sp, #16]
  413958:	ldp	x29, x30, [sp], #80
  41395c:	ret
  413960:	sub	sp, sp, #0xa0
  413964:	stp	x24, x23, [sp, #112]
  413968:	stp	x22, x21, [sp, #128]
  41396c:	stp	x20, x19, [sp, #144]
  413970:	mov	x23, x4
  413974:	mov	x22, x2
  413978:	mov	x20, x1
  41397c:	stp	x29, x30, [sp, #64]
  413980:	stp	x28, x27, [sp, #80]
  413984:	stp	x26, x25, [sp, #96]
  413988:	add	x29, sp, #0x40
  41398c:	cbz	x1, 413994 <construct_command_argv@@Base+0xf4>
  413990:	str	xzr, [x20]
  413994:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  413998:	sub	x19, x0, #0x1
  41399c:	add	x28, x28, #0xcf0
  4139a0:	ldrb	w8, [x19, #1]!
  4139a4:	ldrh	w9, [x28, x8, lsl #1]
  4139a8:	tbnz	w9, #1, 4139a0 <construct_command_argv@@Base+0x100>
  4139ac:	cbz	w8, 413e2c <construct_command_argv@@Base+0x58c>
  4139b0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4139b4:	ldr	w8, [x8, #40]
  4139b8:	adrp	x11, 43c000 <memcpy@GLIBC_2.17>
  4139bc:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  4139c0:	adrp	x10, 425000 <_IO_stdin_used@@Base+0xe0>
  4139c4:	ldr	x1, [x11, #2352]
  4139c8:	add	x9, x9, #0xb2a
  4139cc:	add	x10, x10, #0xf2a
  4139d0:	cmp	w8, #0x0
  4139d4:	csel	x8, x10, x9, eq  // eq = none
  4139d8:	cmp	x3, #0x0
  4139dc:	csel	x21, x8, x3, eq  // eq = none
  4139e0:	adrp	x24, 440000 <shell_var@@Base+0x18>
  4139e4:	cbz	x22, 4139fc <construct_command_argv@@Base+0x15c>
  4139e8:	mov	x0, x22
  4139ec:	bl	406cb0 <strcmp@plt>
  4139f0:	cbnz	w0, 413a6c <construct_command_argv@@Base+0x1cc>
  4139f4:	cbnz	x23, 413a0c <construct_command_argv@@Base+0x16c>
  4139f8:	b	413a28 <construct_command_argv@@Base+0x188>
  4139fc:	mov	x22, x1
  413a00:	cbnz	x23, 413a0c <construct_command_argv@@Base+0x16c>
  413a04:	b	413a28 <construct_command_argv@@Base+0x188>
  413a08:	add	x23, x23, #0x1
  413a0c:	ldrb	w8, [x23]
  413a10:	sub	w9, w8, #0x9
  413a14:	cmp	w9, #0x2
  413a18:	b.cc	413a08 <construct_command_argv@@Base+0x168>  // b.lo, b.ul, b.last
  413a1c:	cmp	w8, #0x20
  413a20:	b.eq	413a08 <construct_command_argv@@Base+0x168>  // b.none
  413a24:	cbnz	w8, 413a6c <construct_command_argv@@Base+0x1cc>
  413a28:	ldrb	w8, [x21]
  413a2c:	cmp	w8, #0x2d
  413a30:	b.ne	413a6c <construct_command_argv@@Base+0x1cc>  // b.any
  413a34:	ldrb	w8, [x21, #1]
  413a38:	cmp	w8, #0x65
  413a3c:	b.eq	413a58 <construct_command_argv@@Base+0x1b8>  // b.none
  413a40:	cmp	w8, #0x63
  413a44:	b.ne	413a6c <construct_command_argv@@Base+0x1cc>  // b.any
  413a48:	ldrb	w9, [x21, #2]
  413a4c:	cbz	w9, 413e54 <construct_command_argv@@Base+0x5b4>
  413a50:	cmp	w8, #0x65
  413a54:	b.ne	413a6c <construct_command_argv@@Base+0x1cc>  // b.any
  413a58:	ldrb	w8, [x21, #2]
  413a5c:	cmp	w8, #0x63
  413a60:	b.ne	413a6c <construct_command_argv@@Base+0x1cc>  // b.any
  413a64:	ldrb	w8, [x21, #3]
  413a68:	cbz	w8, 413e54 <construct_command_argv@@Base+0x5b4>
  413a6c:	mov	x23, xzr
  413a70:	mov	x0, xzr
  413a74:	cbz	x23, 413a84 <construct_command_argv@@Base+0x1e4>
  413a78:	bl	406cf0 <free@plt>
  413a7c:	mov	x0, x23
  413a80:	bl	406cf0 <free@plt>
  413a84:	mov	x0, x22
  413a88:	bl	4067d0 <strlen@plt>
  413a8c:	mov	x26, x0
  413a90:	mov	x0, x19
  413a94:	bl	4067d0 <strlen@plt>
  413a98:	mov	x25, x0
  413a9c:	cbz	x21, 413be0 <construct_command_argv@@Base+0x340>
  413aa0:	mov	x0, x21
  413aa4:	bl	4067d0 <strlen@plt>
  413aa8:	mov	x23, x0
  413aac:	ldr	w8, [x24, #92]
  413ab0:	cbz	w8, 413bec <construct_command_argv@@Base+0x34c>
  413ab4:	mov	x0, x22
  413ab8:	bl	4119bc <is_bourne_compatible_shell@@Base>
  413abc:	cbz	w0, 413b7c <construct_command_argv@@Base+0x2dc>
  413ac0:	ldrb	w9, [x19]
  413ac4:	mov	x8, x19
  413ac8:	cbz	w9, 413b78 <construct_command_argv@@Base+0x2d8>
  413acc:	mov	w10, #0x5                   	// #5
  413ad0:	mov	w9, #0x1                   	// #1
  413ad4:	movk	w10, #0x20, lsl #16
  413ad8:	mov	x8, x19
  413adc:	mov	x11, x19
  413ae0:	b	413ae8 <construct_command_argv@@Base+0x248>
  413ae4:	add	x11, x11, #0x1
  413ae8:	ldrb	w12, [x11]
  413aec:	ldrh	w13, [x28, x12, lsl #1]
  413af0:	tbnz	w13, #1, 413ae4 <construct_command_argv@@Base+0x244>
  413af4:	sub	w12, w12, #0x2b
  413af8:	cmp	w12, #0x15
  413afc:	b.hi	413b0c <construct_command_argv@@Base+0x26c>  // b.pmore
  413b00:	lsl	w12, w9, w12
  413b04:	tst	w12, w10
  413b08:	b.ne	413ae4 <construct_command_argv@@Base+0x244>  // b.any
  413b0c:	ldrb	w14, [x11]
  413b10:	cbz	w14, 413b70 <construct_command_argv@@Base+0x2d0>
  413b14:	mov	x13, xzr
  413b18:	mov	w16, wzr
  413b1c:	b	413b38 <construct_command_argv@@Base+0x298>
  413b20:	cmp	w16, #0x0
  413b24:	cset	w15, eq  // eq = none
  413b28:	ldrb	w14, [x13, #1]
  413b2c:	add	x13, x12, #0x1
  413b30:	mov	w16, w15
  413b34:	cbz	w14, 413b60 <construct_command_argv@@Base+0x2c0>
  413b38:	mov	x12, x13
  413b3c:	add	x13, x11, x13
  413b40:	strb	w14, [x8, x12]
  413b44:	ldrb	w14, [x13]
  413b48:	cmp	w14, #0x5c
  413b4c:	b.eq	413b20 <construct_command_argv@@Base+0x280>  // b.none
  413b50:	mov	w15, wzr
  413b54:	cbnz	w16, 413b28 <construct_command_argv@@Base+0x288>
  413b58:	cmp	w14, #0xa
  413b5c:	b.ne	413b28 <construct_command_argv@@Base+0x288>  // b.any
  413b60:	add	x8, x8, x12
  413b64:	add	x11, x11, x12
  413b68:	add	x8, x8, #0x1
  413b6c:	add	x11, x11, #0x1
  413b70:	ldrb	w12, [x11]
  413b74:	cbnz	w12, 413ae8 <construct_command_argv@@Base+0x248>
  413b78:	strb	wzr, [x8]
  413b7c:	lsl	x8, x23, #2
  413b80:	and	x8, x8, #0xfffffffffffffff8
  413b84:	add	x0, x8, #0x20
  413b88:	bl	418070 <xmalloc@@Base>
  413b8c:	mov	x23, x0
  413b90:	mov	x0, x22
  413b94:	bl	4180bc <xstrdup@@Base>
  413b98:	str	x0, [x23]
  413b9c:	cbz	x21, 413db0 <construct_command_argv@@Base+0x510>
  413ba0:	sub	x0, x29, #0x8
  413ba4:	sub	x1, x29, #0x10
  413ba8:	stur	x21, [x29, #-8]
  413bac:	bl	418158 <find_next_token@@Base>
  413bb0:	mov	w20, #0x1                   	// #1
  413bb4:	cbz	x0, 413dc4 <construct_command_argv@@Base+0x524>
  413bb8:	ldur	x1, [x29, #-16]
  413bbc:	mov	x21, x20
  413bc0:	bl	4180d8 <xstrndup@@Base>
  413bc4:	str	x0, [x23, x21, lsl #3]
  413bc8:	sub	x0, x29, #0x8
  413bcc:	sub	x1, x29, #0x10
  413bd0:	add	x20, x20, #0x1
  413bd4:	bl	418158 <find_next_token@@Base>
  413bd8:	cbnz	x0, 413bb8 <construct_command_argv@@Base+0x318>
  413bdc:	b	413dc4 <construct_command_argv@@Base+0x524>
  413be0:	mov	x23, xzr
  413be4:	ldr	w8, [x24, #92]
  413be8:	cbnz	w8, 413ab4 <construct_command_argv@@Base+0x214>
  413bec:	mov	w8, #0x1                   	// #1
  413bf0:	bfi	x8, x26, #1, #63
  413bf4:	add	x8, x8, x25, lsl #1
  413bf8:	add	x8, x8, x23
  413bfc:	add	x0, x8, #0x2
  413c00:	stur	x26, [x29, #-24]
  413c04:	bl	418070 <xmalloc@@Base>
  413c08:	ldrb	w8, [x22]
  413c0c:	mov	x25, x0
  413c10:	mov	x26, x0
  413c14:	cbz	w8, 413c5c <construct_command_argv@@Base+0x3bc>
  413c18:	add	x24, x22, #0x1
  413c1c:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x20e0>
  413c20:	add	x22, x22, #0xa75
  413c24:	mov	w27, #0x5c                  	// #92
  413c28:	mov	x26, x25
  413c2c:	b	413c40 <construct_command_argv@@Base+0x3a0>
  413c30:	ldurb	w8, [x24, #-1]
  413c34:	strb	w8, [x26], #1
  413c38:	ldrb	w8, [x24], #1
  413c3c:	cbz	w8, 413c5c <construct_command_argv@@Base+0x3bc>
  413c40:	and	w1, w8, #0xff
  413c44:	mov	w2, #0x15                  	// #21
  413c48:	mov	x0, x22
  413c4c:	bl	406df0 <memchr@plt>
  413c50:	cbz	x0, 413c30 <construct_command_argv@@Base+0x390>
  413c54:	strb	w27, [x26], #1
  413c58:	b	413c30 <construct_command_argv@@Base+0x390>
  413c5c:	mov	w22, #0x20                  	// #32
  413c60:	strb	w22, [x26], #1
  413c64:	cbz	x21, 413c78 <construct_command_argv@@Base+0x3d8>
  413c68:	mov	x0, x26
  413c6c:	mov	x1, x21
  413c70:	mov	x2, x23
  413c74:	bl	406790 <memcpy@plt>
  413c78:	add	x24, x26, x23
  413c7c:	mov	x26, x24
  413c80:	strb	w22, [x26], #1
  413c84:	ldrb	w8, [x19]
  413c88:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  413c8c:	cbz	w8, 413dd8 <construct_command_argv@@Base+0x538>
  413c90:	adrp	x12, 427000 <_IO_stdin_used@@Base+0x20e0>
  413c94:	mov	x14, #0x21                  	// #33
  413c98:	mov	w27, #0x5c                  	// #92
  413c9c:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  413ca0:	mov	w11, #0xa                   	// #10
  413ca4:	add	x12, x12, #0xa75
  413ca8:	mov	w13, #0x1                   	// #1
  413cac:	movk	x14, #0x400, lsl #48
  413cb0:	b	413ce8 <construct_command_argv@@Base+0x448>
  413cb4:	and	x8, x8, #0xff
  413cb8:	ldrh	w8, [x28, x8, lsl #1]
  413cbc:	tst	w8, #0x6
  413cc0:	b.eq	413d6c <construct_command_argv@@Base+0x4cc>  // b.none
  413cc4:	add	x8, x24, #0x2
  413cc8:	strb	w27, [x26]
  413ccc:	mov	x26, x8
  413cd0:	ldrb	w8, [x19]
  413cd4:	strb	w8, [x26]
  413cd8:	ldrb	w8, [x19, #1]!
  413cdc:	mov	x24, x26
  413ce0:	add	x26, x26, #0x1
  413ce4:	cbz	w8, 413dd8 <construct_command_argv@@Base+0x538>
  413ce8:	cbz	x20, 413cf8 <construct_command_argv@@Base+0x458>
  413cec:	and	w9, w8, #0xff
  413cf0:	cmp	w9, #0xa
  413cf4:	b.eq	413dd4 <construct_command_argv@@Base+0x534>  // b.none
  413cf8:	and	w9, w8, #0xff
  413cfc:	cmp	w9, #0x5c
  413d00:	b.ne	413d28 <construct_command_argv@@Base+0x488>  // b.any
  413d04:	mov	x9, x19
  413d08:	ldrb	w10, [x9, #1]!
  413d0c:	cmp	w10, #0xa
  413d10:	b.ne	413d28 <construct_command_argv@@Base+0x488>  // b.any
  413d14:	strb	w27, [x26]
  413d18:	ldr	w8, [x21, #3040]
  413d1c:	cbz	w8, 413d58 <construct_command_argv@@Base+0x4b8>
  413d20:	add	x26, x24, #0x2
  413d24:	b	413d60 <construct_command_argv@@Base+0x4c0>
  413d28:	ldr	w9, [x22, #2360]
  413d2c:	cbz	w9, 413cd0 <construct_command_argv@@Base+0x430>
  413d30:	ldr	w9, [x21, #3040]
  413d34:	cbnz	w9, 413cd0 <construct_command_argv@@Base+0x430>
  413d38:	and	w1, w8, #0xff
  413d3c:	sub	w9, w1, #0x22
  413d40:	cmp	w9, #0x3a
  413d44:	b.hi	413cb4 <construct_command_argv@@Base+0x414>  // b.pmore
  413d48:	lsl	x9, x13, x9
  413d4c:	tst	x9, x14
  413d50:	b.ne	413cc4 <construct_command_argv@@Base+0x424>  // b.any
  413d54:	b	413cb4 <construct_command_argv@@Base+0x414>
  413d58:	add	x26, x24, #0x3
  413d5c:	strb	w27, [x24, #2]
  413d60:	strb	w11, [x26]
  413d64:	mov	x19, x9
  413d68:	b	413cd8 <construct_command_argv@@Base+0x438>
  413d6c:	mov	w2, #0x15                  	// #21
  413d70:	mov	x0, x12
  413d74:	str	x20, [sp, #32]
  413d78:	mov	x20, x23
  413d7c:	mov	x23, x25
  413d80:	mov	x25, x12
  413d84:	bl	406df0 <memchr@plt>
  413d88:	mov	x12, x25
  413d8c:	mov	x25, x23
  413d90:	mov	x23, x20
  413d94:	ldr	x20, [sp, #32]
  413d98:	mov	x14, #0x21                  	// #33
  413d9c:	movk	x14, #0x400, lsl #48
  413da0:	mov	w13, #0x1                   	// #1
  413da4:	mov	w11, #0xa                   	// #10
  413da8:	cbnz	x0, 413cc4 <construct_command_argv@@Base+0x424>
  413dac:	b	413cd0 <construct_command_argv@@Base+0x430>
  413db0:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  413db4:	add	x0, x0, #0x989
  413db8:	bl	4180bc <xstrdup@@Base>
  413dbc:	str	x0, [x23, #8]
  413dc0:	mov	w20, #0x2                   	// #2
  413dc4:	add	w8, w20, #0x1
  413dc8:	str	x19, [x23, w20, uxtw #3]
  413dcc:	str	xzr, [x23, w8, uxtw #3]
  413dd0:	b	413e30 <construct_command_argv@@Base+0x590>
  413dd4:	str	x19, [x20]
  413dd8:	ldur	x8, [x29, #-24]
  413ddc:	add	x8, x25, x8
  413de0:	add	x8, x8, x23
  413de4:	add	x8, x8, #0x2
  413de8:	cmp	x26, x8
  413dec:	b.eq	413e24 <construct_command_argv@@Base+0x584>  // b.none
  413df0:	strb	wzr, [x26]
  413df4:	ldr	w8, [x22, #2360]
  413df8:	cbz	w8, 41424c <construct_command_argv@@Base+0x9ac>
  413dfc:	mov	x0, x25
  413e00:	mov	x1, xzr
  413e04:	mov	x2, xzr
  413e08:	mov	x3, xzr
  413e0c:	mov	x4, xzr
  413e10:	bl	413960 <construct_command_argv@@Base+0xc0>
  413e14:	mov	x23, x0
  413e18:	mov	x0, x25
  413e1c:	bl	406cf0 <free@plt>
  413e20:	b	413e30 <construct_command_argv@@Base+0x590>
  413e24:	mov	x0, x25
  413e28:	bl	406cf0 <free@plt>
  413e2c:	mov	x23, xzr
  413e30:	mov	x0, x23
  413e34:	ldp	x20, x19, [sp, #144]
  413e38:	ldp	x22, x21, [sp, #128]
  413e3c:	ldp	x24, x23, [sp, #112]
  413e40:	ldp	x26, x25, [sp, #96]
  413e44:	ldp	x28, x27, [sp, #80]
  413e48:	ldp	x29, x30, [sp, #64]
  413e4c:	add	sp, sp, #0xa0
  413e50:	ret
  413e54:	mov	x0, x19
  413e58:	bl	4067d0 <strlen@plt>
  413e5c:	add	x24, x0, #0x1
  413e60:	lsl	x0, x24, #3
  413e64:	bl	418070 <xmalloc@@Base>
  413e68:	mov	x23, x0
  413e6c:	mov	x0, x24
  413e70:	bl	418070 <xmalloc@@Base>
  413e74:	str	x0, [x23]
  413e78:	ldrb	w26, [x19]
  413e7c:	str	x0, [sp, #8]
  413e80:	cbz	w26, 414160 <construct_command_argv@@Base+0x8c0>
  413e84:	mov	w27, wzr
  413e88:	mov	x11, x0
  413e8c:	mov	x25, x19
  413e90:	str	xzr, [sp, #24]
  413e94:	stur	wzr, [x29, #-24]
  413e98:	str	xzr, [sp, #16]
  413e9c:	str	x21, [sp, #32]
  413ea0:	b	413ebc <construct_command_argv@@Base+0x61c>
  413ea4:	mov	w8, #0x1                   	// #1
  413ea8:	mov	w10, wzr
  413eac:	stur	w8, [x29, #-24]
  413eb0:	ldrb	w26, [x25, #1]!
  413eb4:	mov	w27, w10
  413eb8:	cbz	w26, 414170 <construct_command_argv@@Base+0x8d0>
  413ebc:	and	w1, w26, #0xff
  413ec0:	cbz	w27, 413ee8 <construct_command_argv@@Base+0x648>
  413ec4:	cmp	w27, w1
  413ec8:	b.ne	413fac <construct_command_argv@@Base+0x70c>  // b.any
  413ecc:	ldr	x8, [x23]
  413ed0:	cmp	x11, x8
  413ed4:	b.eq	413ea4 <construct_command_argv@@Base+0x604>  // b.none
  413ed8:	ldurb	w8, [x11, #-1]
  413edc:	cbz	w8, 413ea4 <construct_command_argv@@Base+0x604>
  413ee0:	mov	w10, wzr
  413ee4:	b	413eb0 <construct_command_argv@@Base+0x610>
  413ee8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  413eec:	mov	w2, #0x15                  	// #21
  413ef0:	add	x0, x0, #0xa75
  413ef4:	mov	x24, x11
  413ef8:	mov	w21, w1
  413efc:	bl	406df0 <memchr@plt>
  413f00:	cbnz	x0, 41420c <construct_command_argv@@Base+0x96c>
  413f04:	and	w8, w26, #0xff
  413f08:	cmp	w8, #0xa
  413f0c:	b.ne	413f1c <construct_command_argv@@Base+0x67c>  // b.any
  413f10:	adrp	x9, 440000 <shell_var@@Base+0x18>
  413f14:	ldr	w9, [x9, #92]
  413f18:	cbnz	w9, 41420c <construct_command_argv@@Base+0x96c>
  413f1c:	sub	w9, w8, #0x9
  413f20:	cmp	w9, #0x34
  413f24:	b.hi	414028 <construct_command_argv@@Base+0x788>  // b.pmore
  413f28:	adrp	x11, 427000 <_IO_stdin_used@@Base+0x20e0>
  413f2c:	add	x11, x11, #0x530
  413f30:	adr	x8, 413eb0 <construct_command_argv@@Base+0x610>
  413f34:	ldrb	w10, [x11, x9]
  413f38:	add	x8, x8, x10, lsl #2
  413f3c:	mov	w10, w21
  413f40:	ldr	x21, [sp, #32]
  413f44:	mov	x11, x24
  413f48:	br	x8
  413f4c:	strb	wzr, [x11], #1
  413f50:	ldp	w12, w9, [sp, #16]
  413f54:	ldr	x10, [sp, #24]
  413f58:	cmp	w12, #0x0
  413f5c:	cset	w8, eq  // eq = none
  413f60:	add	x13, x10, #0x1
  413f64:	orr	w9, w9, w8
  413f68:	str	x11, [x23, x13, lsl #3]
  413f6c:	cbz	w12, 413f74 <construct_command_argv@@Base+0x6d4>
  413f70:	cbz	w9, 414174 <construct_command_argv@@Base+0x8d4>
  413f74:	str	x13, [sp]
  413f78:	str	w9, [sp, #20]
  413f7c:	cbz	x10, 4140e4 <construct_command_argv@@Base+0x844>
  413f80:	sub	x25, x25, #0x1
  413f84:	ldrb	w8, [x25, #2]
  413f88:	add	x25, x25, #0x1
  413f8c:	ldrh	w8, [x28, x8, lsl #1]
  413f90:	tbnz	w8, #1, 413f84 <construct_command_argv@@Base+0x6e4>
  413f94:	ldr	x8, [sp]
  413f98:	mov	w10, wzr
  413f9c:	str	wzr, [sp, #16]
  413fa0:	stur	wzr, [x29, #-24]
  413fa4:	str	x8, [sp, #24]
  413fa8:	b	413eb0 <construct_command_argv@@Base+0x610>
  413fac:	and	w8, w26, #0xff
  413fb0:	cmp	w8, #0x5c
  413fb4:	b.ne	413fdc <construct_command_argv@@Base+0x73c>  // b.any
  413fb8:	mov	x8, x25
  413fbc:	ldrb	w9, [x8, #1]!
  413fc0:	cmp	w9, #0xa
  413fc4:	b.ne	413fdc <construct_command_argv@@Base+0x73c>  // b.any
  413fc8:	cmp	w27, #0x22
  413fcc:	b.ne	4140c8 <construct_command_argv@@Base+0x828>  // b.any
  413fd0:	mov	w10, #0x22                  	// #34
  413fd4:	mov	x25, x8
  413fd8:	b	413eb0 <construct_command_argv@@Base+0x610>
  413fdc:	cbz	x20, 413fec <construct_command_argv@@Base+0x74c>
  413fe0:	and	w8, w26, #0xff
  413fe4:	cmp	w8, #0xa
  413fe8:	b.eq	414234 <construct_command_argv@@Base+0x994>  // b.none
  413fec:	cmp	w27, #0x22
  413ff0:	b.ne	41401c <construct_command_argv@@Base+0x77c>  // b.any
  413ff4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  413ff8:	mov	w2, #0x4                   	// #4
  413ffc:	add	x0, x0, #0xb2e
  414000:	mov	x24, x11
  414004:	bl	406df0 <memchr@plt>
  414008:	mov	x11, x24
  41400c:	cbz	x0, 41401c <construct_command_argv@@Base+0x77c>
  414010:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  414014:	ldr	w8, [x8, #2360]
  414018:	cbnz	w8, 414174 <construct_command_argv@@Base+0x8d4>
  41401c:	strb	w26, [x11], #1
  414020:	mov	w10, w27
  414024:	b	413eb0 <construct_command_argv@@Base+0x610>
  414028:	ldr	x21, [sp, #32]
  41402c:	cmp	w8, #0x5c
  414030:	mov	x11, x24
  414034:	b.ne	41407c <construct_command_argv@@Base+0x7dc>  // b.any
  414038:	mov	x8, x25
  41403c:	ldrb	w9, [x8, #1]!
  414040:	cbz	w9, 413ee0 <construct_command_argv@@Base+0x640>
  414044:	cmp	w9, #0xa
  414048:	b.ne	414150 <construct_command_argv@@Base+0x8b0>  // b.any
  41404c:	ldr	x9, [sp, #24]
  414050:	ldr	x9, [x23, x9, lsl #3]
  414054:	cmp	x11, x9
  414058:	b.eq	414068 <construct_command_argv@@Base+0x7c8>  // b.none
  41405c:	mov	w10, wzr
  414060:	mov	x25, x8
  414064:	b	413eb0 <construct_command_argv@@Base+0x610>
  414068:	ldrb	w8, [x25, #2]
  41406c:	add	x25, x25, #0x1
  414070:	ldrh	w8, [x28, x8, lsl #1]
  414074:	tbnz	w8, #1, 414068 <construct_command_argv@@Base+0x7c8>
  414078:	b	413ee0 <construct_command_argv@@Base+0x640>
  41407c:	mov	w10, wzr
  414080:	strb	w26, [x11], #1
  414084:	b	413eb0 <construct_command_argv@@Base+0x610>
  414088:	ldr	w8, [sp, #20]
  41408c:	cbnz	w8, 41409c <construct_command_argv@@Base+0x7fc>
  414090:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  414094:	ldr	w8, [x8, #2360]
  414098:	cbnz	w8, 414174 <construct_command_argv@@Base+0x8d4>
  41409c:	mov	w8, #0x3d                  	// #61
  4140a0:	strb	w8, [x11], #1
  4140a4:	mov	w8, #0x1                   	// #1
  4140a8:	mov	w10, wzr
  4140ac:	str	w8, [sp, #16]
  4140b0:	b	413eb0 <construct_command_argv@@Base+0x610>
  4140b4:	cbnz	x20, 414240 <construct_command_argv@@Base+0x9a0>
  4140b8:	mov	w8, #0xa                   	// #10
  4140bc:	mov	w10, wzr
  4140c0:	strb	w8, [x11], #1
  4140c4:	b	413eb0 <construct_command_argv@@Base+0x610>
  4140c8:	strb	w26, [x11]
  4140cc:	ldrb	w9, [x8]
  4140d0:	add	x10, x11, #0x2
  4140d4:	mov	x25, x8
  4140d8:	strb	w9, [x11, #1]
  4140dc:	mov	x11, x10
  4140e0:	b	414020 <construct_command_argv@@Base+0x780>
  4140e4:	ldr	x24, [x23]
  4140e8:	mov	w26, #0x8                   	// #8
  4140ec:	add	x8, x24, #0x1
  4140f0:	stur	x8, [x29, #-24]
  4140f4:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  4140f8:	add	x8, x8, #0x944
  4140fc:	b	414118 <construct_command_argv@@Base+0x878>
  414100:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  414104:	add	x8, x8, #0x5a8
  414108:	ldr	x8, [x8, x26]
  41410c:	add	x26, x26, #0x8
  414110:	cmp	x26, #0x130
  414114:	b.eq	413f80 <construct_command_argv@@Base+0x6e0>  // b.none
  414118:	cmp	x8, x24
  41411c:	b.eq	414174 <construct_command_argv@@Base+0x8d4>  // b.none
  414120:	ldrb	w9, [x8]
  414124:	ldrb	w10, [x24]
  414128:	cmp	w9, w10
  41412c:	b.ne	414100 <construct_command_argv@@Base+0x860>  // b.any
  414130:	cbz	w9, 414174 <construct_command_argv@@Base+0x8d4>
  414134:	ldur	x1, [x29, #-24]
  414138:	add	x0, x8, #0x1
  41413c:	mov	x27, x11
  414140:	bl	406cb0 <strcmp@plt>
  414144:	mov	x11, x27
  414148:	cbnz	w0, 414100 <construct_command_argv@@Base+0x860>
  41414c:	b	414174 <construct_command_argv@@Base+0x8d4>
  414150:	mov	w10, wzr
  414154:	strb	w9, [x11], #1
  414158:	mov	x25, x8
  41415c:	b	413eb0 <construct_command_argv@@Base+0x610>
  414160:	mov	w10, wzr
  414164:	stur	wzr, [x29, #-24]
  414168:	str	xzr, [sp, #24]
  41416c:	mov	x11, x0
  414170:	cbz	w10, 414180 <construct_command_argv@@Base+0x8e0>
  414174:	ldr	x0, [sp, #8]
  414178:	adrp	x24, 440000 <shell_var@@Base+0x18>
  41417c:	b	413a74 <construct_command_argv@@Base+0x1d4>
  414180:	ldr	x9, [sp, #24]
  414184:	strb	wzr, [x11]
  414188:	ldur	w10, [x29, #-24]
  41418c:	ldr	x8, [x23, x9, lsl #3]
  414190:	ldrb	w8, [x8]
  414194:	orr	w8, w10, w8
  414198:	cmp	w8, #0x0
  41419c:	cinc	x8, x9, ne  // ne = any
  4141a0:	cmp	x8, #0x1
  4141a4:	str	xzr, [x23, x8, lsl #3]
  4141a8:	b.ne	41421c <construct_command_argv@@Base+0x97c>  // b.any
  4141ac:	ldr	x24, [x23]
  4141b0:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  4141b4:	adrp	x27, 427000 <_IO_stdin_used@@Base+0x20e0>
  4141b8:	add	x8, x8, #0x944
  4141bc:	mov	w26, #0x8                   	// #8
  4141c0:	add	x25, x24, #0x1
  4141c4:	add	x27, x27, #0x5a8
  4141c8:	b	4141dc <construct_command_argv@@Base+0x93c>
  4141cc:	ldr	x8, [x27, x26]
  4141d0:	add	x26, x26, #0x8
  4141d4:	cmp	x26, #0x130
  4141d8:	b.eq	41421c <construct_command_argv@@Base+0x97c>  // b.none
  4141dc:	cmp	x8, x24
  4141e0:	b.eq	414174 <construct_command_argv@@Base+0x8d4>  // b.none
  4141e4:	ldrb	w9, [x8]
  4141e8:	ldrb	w10, [x24]
  4141ec:	cmp	w9, w10
  4141f0:	b.ne	4141cc <construct_command_argv@@Base+0x92c>  // b.any
  4141f4:	cbz	w9, 414174 <construct_command_argv@@Base+0x8d4>
  4141f8:	add	x0, x8, #0x1
  4141fc:	mov	x1, x25
  414200:	bl	406cb0 <strcmp@plt>
  414204:	cbnz	w0, 4141cc <construct_command_argv@@Base+0x92c>
  414208:	b	414174 <construct_command_argv@@Base+0x8d4>
  41420c:	ldr	x0, [sp, #8]
  414210:	ldr	x21, [sp, #32]
  414214:	adrp	x24, 440000 <shell_var@@Base+0x18>
  414218:	b	413a74 <construct_command_argv@@Base+0x1d4>
  41421c:	ldr	x8, [x23]
  414220:	cbnz	x8, 413e30 <construct_command_argv@@Base+0x590>
  414224:	ldr	x0, [sp, #8]
  414228:	bl	406cf0 <free@plt>
  41422c:	mov	x0, x23
  414230:	b	413e28 <construct_command_argv@@Base+0x588>
  414234:	str	x25, [x20]
  414238:	mov	w10, #0x1                   	// #1
  41423c:	b	414170 <construct_command_argv@@Base+0x8d0>
  414240:	str	x25, [x20]
  414244:	mov	w10, w27
  414248:	b	414170 <construct_command_argv@@Base+0x8d0>
  41424c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  414250:	add	x1, x1, #0xb32
  414254:	mov	w2, #0x5                   	// #5
  414258:	mov	x0, xzr
  41425c:	bl	406e50 <dcgettext@plt>
  414260:	adrp	x3, 427000 <_IO_stdin_used@@Base+0x20e0>
  414264:	mov	x2, x0
  414268:	add	x3, x3, #0xb70
  41426c:	mov	w1, #0x1d                  	// #29
  414270:	mov	w4, #0xe16                 	// #3606
  414274:	mov	x0, xzr
  414278:	bl	4190fc <fatal@@Base>
  41427c:	stp	x29, x30, [sp, #-16]!
  414280:	adrp	x1, 440000 <shell_var@@Base+0x18>
  414284:	add	x1, x1, #0x68
  414288:	mov	w0, #0x1                   	// #1
  41428c:	mov	x2, xzr
  414290:	mov	x29, sp
  414294:	bl	406830 <sigprocmask@plt>
  414298:	ldp	x29, x30, [sp], #16
  41429c:	ret
  4142a0:	stp	x29, x30, [sp, #-16]!
  4142a4:	adrp	x1, 440000 <shell_var@@Base+0x18>
  4142a8:	add	x1, x1, #0x68
  4142ac:	mov	w0, wzr
  4142b0:	mov	x2, xzr
  4142b4:	mov	x29, sp
  4142b8:	bl	406830 <sigprocmask@plt>
  4142bc:	ldp	x29, x30, [sp], #16
  4142c0:	ret
  4142c4:	sub	sp, sp, #0x40
  4142c8:	stp	x20, x19, [sp, #48]
  4142cc:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  4142d0:	ldr	d0, [x19, #2376]
  4142d4:	str	d8, [sp, #16]
  4142d8:	stp	x29, x30, [sp, #24]
  4142dc:	str	x21, [sp, #40]
  4142e0:	fcmp	d0, #0.0
  4142e4:	add	x29, sp, #0x10
  4142e8:	b.pl	4142f4 <construct_command_argv@@Base+0xa54>  // b.nfrst
  4142ec:	mov	w0, wzr
  4142f0:	b	414434 <construct_command_argv@@Base+0xb94>
  4142f4:	bl	41844c <make_access@@Base>
  4142f8:	add	x0, sp, #0x8
  4142fc:	mov	w1, #0x1                   	// #1
  414300:	bl	4068b0 <getloadavg@plt>
  414304:	cmp	w0, #0x1
  414308:	b.eq	414390 <construct_command_argv@@Base+0xaf0>  // b.none
  41430c:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  414310:	ldr	w21, [x20, #2368]
  414314:	cmn	w21, #0x1
  414318:	b.eq	41432c <construct_command_argv@@Base+0xa8c>  // b.none
  41431c:	bl	406f00 <__errno_location@plt>
  414320:	ldr	w8, [x0]
  414324:	cmp	w8, w21
  414328:	b.eq	414380 <construct_command_argv@@Base+0xae0>  // b.none
  41432c:	bl	406f00 <__errno_location@plt>
  414330:	ldr	w8, [x0]
  414334:	cbz	w8, 41435c <construct_command_argv@@Base+0xabc>
  414338:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41433c:	add	x1, x1, #0xa0f
  414340:	mov	w2, #0x5                   	// #5
  414344:	mov	x0, xzr
  414348:	bl	406e50 <dcgettext@plt>
  41434c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  414350:	add	x1, x1, #0xa2b
  414354:	bl	41928c <perror_with_name@@Base>
  414358:	b	414380 <construct_command_argv@@Base+0xae0>
  41435c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  414360:	add	x1, x1, #0x9db
  414364:	mov	w2, #0x5                   	// #5
  414368:	mov	x0, xzr
  41436c:	bl	406e50 <dcgettext@plt>
  414370:	mov	x2, x0
  414374:	mov	x0, xzr
  414378:	mov	x1, xzr
  41437c:	bl	418f84 <error@@Base>
  414380:	bl	406f00 <__errno_location@plt>
  414384:	ldr	w8, [x0]
  414388:	str	xzr, [sp, #8]
  41438c:	str	w8, [x20, #2368]
  414390:	bl	418448 <user_access@@Base>
  414394:	mov	x0, xzr
  414398:	bl	406a00 <time@plt>
  41439c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4143a0:	ldr	x11, [x8, #3208]
  4143a4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4143a8:	fmov	d0, #2.500000000000000000e-01
  4143ac:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  4143b0:	cmp	x11, x0
  4143b4:	b.ge	4143e0 <construct_command_argv@@Base+0xb40>  // b.tcont
  4143b8:	ldr	d1, [x9, #3064]
  4143bc:	sub	x12, x0, #0x1
  4143c0:	fmov	d2, xzr
  4143c4:	cmp	x11, x12
  4143c8:	ucvtf	d1, d1
  4143cc:	fmul	d1, d1, d0
  4143d0:	fcsel	d1, d1, d2, eq  // eq = none
  4143d4:	str	xzr, [x9, #3064]
  4143d8:	str	d1, [x10, #3200]
  4143dc:	str	x0, [x8, #3208]
  4143e0:	ldr	d2, [x9, #3064]
  4143e4:	ldr	d3, [x10, #3200]
  4143e8:	ldr	d1, [sp, #8]
  4143ec:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4143f0:	ldrb	w8, [x8, #3236]
  4143f4:	ucvtf	d2, d2
  4143f8:	fadd	d2, d3, d2
  4143fc:	fmul	d0, d2, d0
  414400:	fadd	d8, d1, d0
  414404:	tbz	w8, #2, 414428 <construct_command_argv@@Base+0xb88>
  414408:	ldr	d2, [x19, #2376]
  41440c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  414410:	add	x0, x0, #0xa36
  414414:	mov	v0.16b, v8.16b
  414418:	bl	406ef0 <printf@plt>
  41441c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  414420:	ldr	x0, [x8, #2512]
  414424:	bl	406d80 <fflush@plt>
  414428:	ldr	d0, [x19, #2376]
  41442c:	fcmp	d8, d0
  414430:	cset	w0, ge  // ge = tcont
  414434:	ldp	x20, x19, [sp, #48]
  414438:	ldr	x21, [sp, #40]
  41443c:	ldp	x29, x30, [sp, #24]
  414440:	ldr	d8, [sp, #16]
  414444:	add	sp, sp, #0x40
  414448:	ret

000000000041444c <load_file@@Base>:
  41444c:	stp	x29, x30, [sp, #-96]!
  414450:	stp	x26, x25, [sp, #32]
  414454:	stp	x24, x23, [sp, #48]
  414458:	stp	x22, x21, [sp, #64]
  41445c:	stp	x20, x19, [sp, #80]
  414460:	ldr	x22, [x1]
  414464:	mov	x19, x0
  414468:	str	x27, [sp, #16]
  41446c:	mov	x29, sp
  414470:	mov	x0, x22
  414474:	mov	w21, w2
  414478:	mov	x20, x1
  41447c:	bl	4067d0 <strlen@plt>
  414480:	add	x9, x0, #0x1a
  414484:	mov	x8, sp
  414488:	and	x9, x9, #0xfffffffffffffff0
  41448c:	mov	x24, x0
  414490:	sub	x23, x8, x9
  414494:	mov	sp, x23
  414498:	mov	w1, #0x28                  	// #40
  41449c:	mov	x0, x22
  4144a0:	bl	406d10 <strchr@plt>
  4144a4:	mov	x25, x0
  4144a8:	cbz	x0, 414514 <load_file@@Base+0xc8>
  4144ac:	add	x26, x25, #0x1
  4144b0:	mov	w1, #0x29                  	// #41
  4144b4:	mov	x0, x26
  4144b8:	bl	406d10 <strchr@plt>
  4144bc:	cbz	x0, 4144cc <load_file@@Base+0x80>
  4144c0:	ldrb	w8, [x0, #1]
  4144c4:	mov	x27, x0
  4144c8:	cbz	w8, 4144d4 <load_file@@Base+0x88>
  4144cc:	mov	x25, xzr
  4144d0:	b	414514 <load_file@@Base+0xc8>
  4144d4:	cmp	x26, x27
  4144d8:	b.eq	414718 <load_file@@Base+0x2cc>  // b.none
  4144dc:	sub	x24, x25, x22
  4144e0:	mov	x0, x23
  4144e4:	mov	x1, x22
  4144e8:	mov	x2, x24
  4144ec:	bl	406790 <memcpy@plt>
  4144f0:	add	x25, x23, x24
  4144f4:	strb	wzr, [x25], #1
  4144f8:	sub	x22, x27, x26
  4144fc:	mov	x0, x25
  414500:	mov	x1, x26
  414504:	mov	x2, x22
  414508:	str	x23, [x20]
  41450c:	bl	406790 <memcpy@plt>
  414510:	strb	wzr, [x25, x22]
  414514:	ldr	x0, [x20]
  414518:	bl	420f28 <strcache_add@@Base>
  41451c:	str	x0, [x20]
  414520:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  414524:	add	x0, x0, #0xb99
  414528:	mov	x1, xzr
  41452c:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  414530:	ldr	x26, [x20]
  414534:	mov	x22, x0
  414538:	mov	x1, x26
  41453c:	bl	406e40 <strstr@plt>
  414540:	cbz	x0, 414570 <load_file@@Base+0x124>
  414544:	cmp	x0, x22
  414548:	b.eq	414558 <load_file@@Base+0x10c>  // b.none
  41454c:	ldurb	w8, [x0, #-1]
  414550:	cmp	w8, #0x20
  414554:	b.ne	414570 <load_file@@Base+0x124>  // b.any
  414558:	ldrb	w8, [x0, x24]
  41455c:	mov	w9, #0xdf                  	// #223
  414560:	tst	w8, w9
  414564:	cset	w24, eq  // eq = none
  414568:	tbz	w24, #0, 414578 <load_file@@Base+0x12c>
  41456c:	b	4146ec <load_file@@Base+0x2a0>
  414570:	mov	w24, wzr
  414574:	tbnz	w24, #0, 4146ec <load_file@@Base+0x2a0>
  414578:	cbnz	x25, 4145f8 <load_file@@Base+0x1ac>
  41457c:	mov	w1, #0x2f                  	// #47
  414580:	mov	x0, x26
  414584:	bl	406bc0 <strrchr@plt>
  414588:	cmp	x0, #0x0
  41458c:	csinc	x24, x26, x0, eq  // eq = none
  414590:	bl	406cc0 <__ctype_b_loc@plt>
  414594:	ldrb	w8, [x24]
  414598:	cmp	x8, #0x5f
  41459c:	b.eq	4145b0 <load_file@@Base+0x164>  // b.none
  4145a0:	ldr	x9, [x0]
  4145a4:	ldrh	w10, [x9, x8, lsl #1]
  4145a8:	mov	x9, x23
  4145ac:	tbz	w10, #3, 4145d8 <load_file@@Base+0x18c>
  4145b0:	add	x10, x24, #0x1
  4145b4:	mov	x9, x23
  4145b8:	strb	w8, [x9], #1
  4145bc:	ldr	x11, [x0]
  4145c0:	ldrb	w8, [x10], #1
  4145c4:	ldrh	w11, [x11, x8, lsl #1]
  4145c8:	cmp	x8, #0x5f
  4145cc:	and	w11, w11, #0x8
  4145d0:	b.eq	4145b8 <load_file@@Base+0x16c>  // b.none
  4145d4:	cbnz	w11, 4145b8 <load_file@@Base+0x16c>
  4145d8:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  4145dc:	add	x8, x8, #0xba4
  4145e0:	ldr	x8, [x8]
  4145e4:	mov	w10, #0x7574                	// #30068
  4145e8:	movk	w10, #0x70, lsl #16
  4145ec:	mov	x25, x23
  4145f0:	stur	w10, [x9, #7]
  4145f4:	str	x8, [x9]
  4145f8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4145fc:	ldrb	w8, [x8, #3236]
  414600:	tbz	w8, #1, 414630 <load_file@@Base+0x1e4>
  414604:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  414608:	add	x1, x1, #0xbaf
  41460c:	mov	w2, #0x5                   	// #5
  414610:	mov	x0, xzr
  414614:	bl	406e50 <dcgettext@plt>
  414618:	ldr	x2, [x20]
  41461c:	mov	x1, x25
  414620:	bl	406ef0 <printf@plt>
  414624:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  414628:	ldr	x0, [x8, #2512]
  41462c:	bl	406d80 <fflush@plt>
  414630:	ldr	x2, [x20]
  414634:	mov	x0, x19
  414638:	mov	w1, w21
  41463c:	mov	x3, x25
  414640:	bl	414740 <load_file@@Base+0x2f4>
  414644:	cbz	x0, 4146b4 <load_file@@Base+0x268>
  414648:	mov	x8, x0
  41464c:	mov	x0, x19
  414650:	blr	x8
  414654:	mov	w24, w0
  414658:	cmp	w0, #0x1
  41465c:	b.lt	4146ec <load_file@@Base+0x2a0>  // b.tstop
  414660:	mov	x0, x22
  414664:	bl	4067d0 <strlen@plt>
  414668:	ldr	x20, [x20]
  41466c:	mov	x23, x0
  414670:	mov	x0, x20
  414674:	bl	4067d0 <strlen@plt>
  414678:	add	x8, x23, x0
  41467c:	add	x8, x8, #0x11
  414680:	and	x8, x8, #0xfffffffffffffff0
  414684:	mov	x9, sp
  414688:	sub	x21, x9, x8
  41468c:	mov	sp, x21
  414690:	cbz	x23, 4146bc <load_file@@Base+0x270>
  414694:	mov	x0, x21
  414698:	mov	x1, x22
  41469c:	mov	x2, x23
  4146a0:	bl	406790 <memcpy@plt>
  4146a4:	add	x8, x23, #0x1
  4146a8:	mov	w9, #0x20                  	// #32
  4146ac:	strb	w9, [x21, x23]
  4146b0:	b	4146c0 <load_file@@Base+0x274>
  4146b4:	mov	w24, wzr
  4146b8:	b	4146f4 <load_file@@Base+0x2a8>
  4146bc:	mov	x8, xzr
  4146c0:	add	x0, x21, x8
  4146c4:	mov	x1, x20
  4146c8:	bl	406d90 <strcpy@plt>
  4146cc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4146d0:	add	x1, x1, #0xbca
  4146d4:	mov	w4, #0x1                   	// #1
  4146d8:	mov	x0, x19
  4146dc:	mov	x2, x21
  4146e0:	mov	w3, wzr
  4146e4:	mov	w5, wzr
  4146e8:	bl	422088 <do_variable_definition@@Base>
  4146ec:	mov	x0, x22
  4146f0:	bl	406cf0 <free@plt>
  4146f4:	mov	w0, w24
  4146f8:	mov	sp, x29
  4146fc:	ldp	x20, x19, [sp, #80]
  414700:	ldp	x22, x21, [sp, #64]
  414704:	ldp	x24, x23, [sp, #48]
  414708:	ldp	x26, x25, [sp, #32]
  41470c:	ldr	x27, [sp, #16]
  414710:	ldp	x29, x30, [sp], #96
  414714:	ret
  414718:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41471c:	add	x1, x1, #0xb7a
  414720:	mov	w2, #0x5                   	// #5
  414724:	mov	x0, xzr
  414728:	bl	406e50 <dcgettext@plt>
  41472c:	ldr	x3, [x20]
  414730:	mov	x2, x0
  414734:	mov	x0, x19
  414738:	mov	x1, x24
  41473c:	bl	4190fc <fatal@@Base>
  414740:	stp	x29, x30, [sp, #-64]!
  414744:	stp	x24, x23, [sp, #16]
  414748:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  41474c:	ldr	x8, [x23, #3224]
  414750:	stp	x22, x21, [sp, #32]
  414754:	stp	x20, x19, [sp, #48]
  414758:	mov	x21, x3
  41475c:	mov	x20, x2
  414760:	mov	w22, w1
  414764:	mov	x19, x0
  414768:	mov	x29, sp
  41476c:	cbnz	x8, 414784 <load_file@@Base+0x338>
  414770:	mov	w1, #0x102                 	// #258
  414774:	mov	x0, xzr
  414778:	bl	406950 <dlopen@plt>
  41477c:	str	x0, [x23, #3224]
  414780:	cbz	x0, 4148c8 <load_file@@Base+0x47c>
  414784:	ldr	x0, [x23, #3224]
  414788:	mov	x1, x21
  41478c:	bl	406a30 <dlsym@plt>
  414790:	mov	x23, x0
  414794:	cbnz	x0, 414810 <load_file@@Base+0x3c4>
  414798:	mov	w1, #0x2f                  	// #47
  41479c:	mov	x0, x20
  4147a0:	bl	406d10 <strchr@plt>
  4147a4:	cbz	x0, 414828 <load_file@@Base+0x3dc>
  4147a8:	mov	x24, xzr
  4147ac:	cbz	x24, 41484c <load_file@@Base+0x400>
  4147b0:	cbz	x24, 414860 <load_file@@Base+0x414>
  4147b4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4147b8:	add	x1, x1, #0xc03
  4147bc:	mov	x0, x24
  4147c0:	bl	406a30 <dlsym@plt>
  4147c4:	cbz	x0, 4148e4 <load_file@@Base+0x498>
  4147c8:	mov	x0, x24
  4147cc:	mov	x1, x21
  4147d0:	bl	406a30 <dlsym@plt>
  4147d4:	cbz	x0, 414918 <load_file@@Base+0x4cc>
  4147d8:	mov	x23, x0
  4147dc:	mov	w0, #0x18                  	// #24
  4147e0:	bl	418070 <xmalloc@@Base>
  4147e4:	mov	x19, x0
  4147e8:	mov	x0, x20
  4147ec:	bl	4180bc <xstrdup@@Base>
  4147f0:	stp	x0, x24, [x19, #8]
  4147f4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4147f8:	ldr	x9, [x8, #3216]
  4147fc:	str	x9, [x19]
  414800:	str	x19, [x8, #3216]
  414804:	mov	w8, #0x1                   	// #1
  414808:	cbnz	w8, 414810 <load_file@@Base+0x3c4>
  41480c:	mov	x23, xzr
  414810:	mov	x0, x23
  414814:	ldp	x20, x19, [sp, #48]
  414818:	ldp	x22, x21, [sp, #32]
  41481c:	ldp	x24, x23, [sp, #16]
  414820:	ldp	x29, x30, [sp], #64
  414824:	ret
  414828:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x10e0>
  41482c:	add	x1, x1, #0x8c6
  414830:	mov	w0, #0x2                   	// #2
  414834:	mov	x2, x20
  414838:	bl	417eb4 <concat@@Base>
  41483c:	mov	w1, #0x101                 	// #257
  414840:	bl	406950 <dlopen@plt>
  414844:	mov	x24, x0
  414848:	cbnz	x24, 4147b0 <load_file@@Base+0x364>
  41484c:	mov	w1, #0x101                 	// #257
  414850:	mov	x0, x20
  414854:	bl	406950 <dlopen@plt>
  414858:	mov	x24, x0
  41485c:	cbnz	x24, 4147b4 <load_file@@Base+0x368>
  414860:	bl	406a20 <dlerror@plt>
  414864:	mov	x20, x0
  414868:	cbz	w22, 414898 <load_file@@Base+0x44c>
  41486c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  414870:	ldrb	w8, [x8, #3236]
  414874:	tbz	w8, #0, 4148b8 <load_file@@Base+0x46c>
  414878:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  41487c:	add	x0, x0, #0xb96
  414880:	mov	x1, x20
  414884:	bl	406ef0 <printf@plt>
  414888:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41488c:	ldr	x0, [x8, #2512]
  414890:	bl	406d80 <fflush@plt>
  414894:	b	4148b8 <load_file@@Base+0x46c>
  414898:	mov	x0, x20
  41489c:	bl	4067d0 <strlen@plt>
  4148a0:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  4148a4:	mov	x1, x0
  4148a8:	add	x2, x2, #0xb96
  4148ac:	mov	x0, x19
  4148b0:	mov	x3, x20
  4148b4:	bl	418f84 <error@@Base>
  4148b8:	mov	x23, xzr
  4148bc:	mov	w8, wzr
  4148c0:	cbz	w8, 41480c <load_file@@Base+0x3c0>
  4148c4:	b	414810 <load_file@@Base+0x3c4>
  4148c8:	bl	406a20 <dlerror@plt>
  4148cc:	mov	x20, x0
  4148d0:	bl	4067d0 <strlen@plt>
  4148d4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4148d8:	mov	x21, x0
  4148dc:	add	x1, x1, #0xbdc
  4148e0:	b	4148f8 <load_file@@Base+0x4ac>
  4148e4:	mov	x0, x20
  4148e8:	bl	4067d0 <strlen@plt>
  4148ec:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4148f0:	mov	x21, x0
  4148f4:	add	x1, x1, #0xc1c
  4148f8:	mov	w2, #0x5                   	// #5
  4148fc:	mov	x0, xzr
  414900:	bl	406e50 <dcgettext@plt>
  414904:	mov	x2, x0
  414908:	mov	x0, x19
  41490c:	mov	x1, x21
  414910:	mov	x3, x20
  414914:	bl	4190fc <fatal@@Base>
  414918:	bl	406a20 <dlerror@plt>
  41491c:	mov	x22, x0
  414920:	mov	x0, x21
  414924:	bl	4067d0 <strlen@plt>
  414928:	mov	x23, x0
  41492c:	mov	x0, x20
  414930:	bl	4067d0 <strlen@plt>
  414934:	add	x23, x0, x23
  414938:	mov	x0, x22
  41493c:	bl	4067d0 <strlen@plt>
  414940:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  414944:	add	x23, x23, x0
  414948:	add	x1, x1, #0xc52
  41494c:	mov	w2, #0x5                   	// #5
  414950:	mov	x0, xzr
  414954:	bl	406e50 <dcgettext@plt>
  414958:	mov	x2, x0
  41495c:	mov	x0, x19
  414960:	mov	x1, x23
  414964:	mov	x3, x21
  414968:	mov	x4, x20
  41496c:	mov	x5, x22
  414970:	bl	4190fc <fatal@@Base>

0000000000414974 <unload_file@@Base>:
  414974:	stp	x29, x30, [sp, #-48]!
  414978:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41497c:	str	x21, [sp, #16]
  414980:	ldr	x21, [x8, #3216]
  414984:	stp	x20, x19, [sp, #32]
  414988:	mov	x29, sp
  41498c:	cbz	x21, 4149fc <unload_file@@Base+0x88>
  414990:	mov	x19, x0
  414994:	add	x20, x0, #0x1
  414998:	b	4149ac <unload_file@@Base+0x38>
  41499c:	ldr	x0, [x21, #16]
  4149a0:	cbnz	x0, 4149e0 <unload_file@@Base+0x6c>
  4149a4:	ldr	x21, [x21]
  4149a8:	cbz	x21, 4149fc <unload_file@@Base+0x88>
  4149ac:	ldr	x8, [x21, #8]
  4149b0:	cmp	x8, x19
  4149b4:	b.eq	41499c <unload_file@@Base+0x28>  // b.none
  4149b8:	ldrb	w9, [x8]
  4149bc:	ldrb	w10, [x19]
  4149c0:	cmp	w9, w10
  4149c4:	b.ne	4149a4 <unload_file@@Base+0x30>  // b.any
  4149c8:	cbz	w9, 41499c <unload_file@@Base+0x28>
  4149cc:	add	x0, x8, #0x1
  4149d0:	mov	x1, x20
  4149d4:	bl	406cb0 <strcmp@plt>
  4149d8:	cbnz	w0, 4149a4 <unload_file@@Base+0x30>
  4149dc:	b	41499c <unload_file@@Base+0x28>
  4149e0:	bl	4068f0 <dlclose@plt>
  4149e4:	cbz	w0, 4149f8 <unload_file@@Base+0x84>
  4149e8:	ldr	x1, [x21, #8]
  4149ec:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  4149f0:	add	x0, x0, #0xbd2
  4149f4:	bl	41928c <perror_with_name@@Base>
  4149f8:	str	xzr, [x21, #16]
  4149fc:	ldp	x20, x19, [sp, #32]
  414a00:	ldr	x21, [sp, #16]
  414a04:	ldp	x29, x30, [sp], #48
  414a08:	ret

0000000000414a0c <gmk_alloc@@Base>:
  414a0c:	stp	x29, x30, [sp, #-16]!
  414a10:	mov	w0, w0
  414a14:	mov	x29, sp
  414a18:	bl	418070 <xmalloc@@Base>
  414a1c:	ldp	x29, x30, [sp], #16
  414a20:	ret

0000000000414a24 <gmk_free@@Base>:
  414a24:	stp	x29, x30, [sp, #-16]!
  414a28:	mov	x29, sp
  414a2c:	bl	406cf0 <free@plt>
  414a30:	ldp	x29, x30, [sp], #16
  414a34:	ret

0000000000414a38 <gmk_eval@@Base>:
  414a38:	sub	sp, sp, #0x50
  414a3c:	stp	x20, x19, [sp, #64]
  414a40:	mov	x19, x0
  414a44:	stp	x29, x30, [sp, #48]
  414a48:	add	x29, sp, #0x30
  414a4c:	cbz	x1, 414a68 <gmk_eval@@Base+0x30>
  414a50:	ldr	x8, [x1]
  414a54:	add	x20, sp, #0x8
  414a58:	str	x8, [sp, #8]
  414a5c:	ldr	x8, [x1, #8]
  414a60:	stp	x8, xzr, [sp, #16]
  414a64:	b	414a6c <gmk_eval@@Base+0x34>
  414a68:	mov	x20, xzr
  414a6c:	sub	x0, x29, #0x8
  414a70:	sub	x1, x29, #0x10
  414a74:	bl	40a604 <install_variable_buffer@@Base>
  414a78:	mov	x0, x19
  414a7c:	bl	4180bc <xstrdup@@Base>
  414a80:	mov	x1, x20
  414a84:	mov	x19, x0
  414a88:	bl	419a18 <eval_buffer@@Base>
  414a8c:	mov	x0, x19
  414a90:	bl	406cf0 <free@plt>
  414a94:	ldp	x1, x0, [x29, #-16]
  414a98:	bl	40a634 <restore_variable_buffer@@Base>
  414a9c:	ldp	x20, x19, [sp, #64]
  414aa0:	ldp	x29, x30, [sp, #48]
  414aa4:	add	sp, sp, #0x50
  414aa8:	ret

0000000000414aac <gmk_expand@@Base>:
  414aac:	stp	x29, x30, [sp, #-16]!
  414ab0:	mov	x1, xzr
  414ab4:	mov	x29, sp
  414ab8:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  414abc:	ldp	x29, x30, [sp], #16
  414ac0:	ret

0000000000414ac4 <gmk_add_function@@Base>:
  414ac4:	stp	x29, x30, [sp, #-16]!
  414ac8:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  414acc:	ldr	x8, [x8, #1552]
  414ad0:	mov	x5, x1
  414ad4:	mov	x1, x0
  414ad8:	mov	x29, sp
  414adc:	mov	x0, x8
  414ae0:	bl	40d488 <define_new_function@@Base>
  414ae4:	ldp	x29, x30, [sp], #16
  414ae8:	ret

0000000000414aec <main@@Base>:
  414aec:	stp	x29, x30, [sp, #-96]!
  414af0:	stp	x28, x27, [sp, #16]
  414af4:	stp	x26, x25, [sp, #32]
  414af8:	stp	x24, x23, [sp, #48]
  414afc:	stp	x22, x21, [sp, #64]
  414b00:	stp	x20, x19, [sp, #80]
  414b04:	mov	x29, sp
  414b08:	sub	sp, sp, #0x1, lsl #12
  414b0c:	sub	sp, sp, #0x840
  414b10:	mov	x19, sp
  414b14:	str	x0, [x19, #24]
  414b18:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414b1c:	add	x0, x0, #0x50
  414b20:	mov	x24, x2
  414b24:	mov	x21, x1
  414b28:	bl	418a0c <output_init@@Base>
  414b2c:	bl	416490 <main@@Base+0x19a4>
  414b30:	adrp	x25, 427000 <_IO_stdin_used@@Base+0x20e0>
  414b34:	add	x25, x25, #0x989
  414b38:	mov	w0, #0x6                   	// #6
  414b3c:	mov	x1, x25
  414b40:	bl	406f90 <setlocale@plt>
  414b44:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x30e0>
  414b48:	add	x22, x22, #0xbaa
  414b4c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  414b50:	add	x1, x1, #0x5d0
  414b54:	mov	x0, x22
  414b58:	bl	406a80 <bindtextdomain@plt>
  414b5c:	mov	x0, x22
  414b60:	bl	406c80 <textdomain@plt>
  414b64:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414b68:	add	x0, x0, #0x68
  414b6c:	bl	406a50 <sigemptyset@plt>
  414b70:	adrp	x1, 408000 <set_file_variables@@Base+0x314>
  414b74:	add	x1, x1, #0x850
  414b78:	mov	w0, #0x1                   	// #1
  414b7c:	bl	416570 <main@@Base+0x1a84>
  414b80:	cmp	x0, #0x1
  414b84:	b.eq	414b9c <main@@Base+0xb0>  // b.none
  414b88:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414b8c:	add	x0, x0, #0x68
  414b90:	mov	w1, #0x1                   	// #1
  414b94:	bl	406ed0 <sigaddset@plt>
  414b98:	b	414ba4 <main@@Base+0xb8>
  414b9c:	mov	w1, #0x1                   	// #1
  414ba0:	bl	416570 <main@@Base+0x1a84>
  414ba4:	adrp	x1, 408000 <set_file_variables@@Base+0x314>
  414ba8:	add	x1, x1, #0x850
  414bac:	mov	w0, #0x3                   	// #3
  414bb0:	bl	416570 <main@@Base+0x1a84>
  414bb4:	cmp	x0, #0x1
  414bb8:	b.eq	414bd0 <main@@Base+0xe4>  // b.none
  414bbc:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414bc0:	add	x0, x0, #0x68
  414bc4:	mov	w1, #0x3                   	// #3
  414bc8:	bl	406ed0 <sigaddset@plt>
  414bcc:	b	414bdc <main@@Base+0xf0>
  414bd0:	mov	w0, #0x3                   	// #3
  414bd4:	mov	w1, #0x1                   	// #1
  414bd8:	bl	416570 <main@@Base+0x1a84>
  414bdc:	adrp	x1, 408000 <set_file_variables@@Base+0x314>
  414be0:	add	x1, x1, #0x850
  414be4:	mov	w0, #0x2                   	// #2
  414be8:	bl	416570 <main@@Base+0x1a84>
  414bec:	cmp	x0, #0x1
  414bf0:	b.eq	414c08 <main@@Base+0x11c>  // b.none
  414bf4:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414bf8:	add	x0, x0, #0x68
  414bfc:	mov	w1, #0x2                   	// #2
  414c00:	bl	406ed0 <sigaddset@plt>
  414c04:	b	414c14 <main@@Base+0x128>
  414c08:	mov	w0, #0x2                   	// #2
  414c0c:	mov	w1, #0x1                   	// #1
  414c10:	bl	416570 <main@@Base+0x1a84>
  414c14:	adrp	x1, 408000 <set_file_variables@@Base+0x314>
  414c18:	add	x1, x1, #0x850
  414c1c:	mov	w0, #0xf                   	// #15
  414c20:	bl	416570 <main@@Base+0x1a84>
  414c24:	cmp	x0, #0x1
  414c28:	b.eq	414c40 <main@@Base+0x154>  // b.none
  414c2c:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414c30:	add	x0, x0, #0x68
  414c34:	mov	w1, #0xf                   	// #15
  414c38:	bl	406ed0 <sigaddset@plt>
  414c3c:	b	414c4c <main@@Base+0x160>
  414c40:	mov	w0, #0xf                   	// #15
  414c44:	mov	w1, #0x1                   	// #1
  414c48:	bl	416570 <main@@Base+0x1a84>
  414c4c:	adrp	x1, 408000 <set_file_variables@@Base+0x314>
  414c50:	add	x1, x1, #0x850
  414c54:	mov	w0, #0x18                  	// #24
  414c58:	bl	416570 <main@@Base+0x1a84>
  414c5c:	cmp	x0, #0x1
  414c60:	b.eq	414c78 <main@@Base+0x18c>  // b.none
  414c64:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414c68:	add	x0, x0, #0x68
  414c6c:	mov	w1, #0x18                  	// #24
  414c70:	bl	406ed0 <sigaddset@plt>
  414c74:	b	414c84 <main@@Base+0x198>
  414c78:	mov	w0, #0x18                  	// #24
  414c7c:	mov	w1, #0x1                   	// #1
  414c80:	bl	416570 <main@@Base+0x1a84>
  414c84:	adrp	x1, 408000 <set_file_variables@@Base+0x314>
  414c88:	add	x1, x1, #0x850
  414c8c:	mov	w0, #0x19                  	// #25
  414c90:	bl	416570 <main@@Base+0x1a84>
  414c94:	cmp	x0, #0x1
  414c98:	b.eq	414cb0 <main@@Base+0x1c4>  // b.none
  414c9c:	adrp	x0, 440000 <shell_var@@Base+0x18>
  414ca0:	add	x0, x0, #0x68
  414ca4:	mov	w1, #0x19                  	// #25
  414ca8:	bl	406ed0 <sigaddset@plt>
  414cac:	b	414cbc <main@@Base+0x1d0>
  414cb0:	mov	w0, #0x19                  	// #25
  414cb4:	mov	w1, #0x1                   	// #1
  414cb8:	bl	416570 <main@@Base+0x1a84>
  414cbc:	mov	w0, #0x11                  	// #17
  414cc0:	mov	x1, xzr
  414cc4:	bl	416570 <main@@Base+0x1a84>
  414cc8:	mov	x0, xzr
  414ccc:	bl	418a0c <output_init@@Base>
  414cd0:	ldr	x8, [x21]
  414cd4:	cbnz	x8, 414cdc <main@@Base+0x1f0>
  414cd8:	str	x25, [x21]
  414cdc:	ldr	x0, [x21]
  414ce0:	adrp	x20, 440000 <shell_var@@Base+0x18>
  414ce4:	ldrb	w8, [x0]
  414ce8:	cbz	w8, 414d04 <main@@Base+0x218>
  414cec:	mov	w1, #0x2f                  	// #47
  414cf0:	bl	406bc0 <strrchr@plt>
  414cf4:	str	x0, [x20, #48]
  414cf8:	cbz	x0, 414d0c <main@@Base+0x220>
  414cfc:	add	x8, x0, #0x1
  414d00:	b	414d10 <main@@Base+0x224>
  414d04:	str	x22, [x20, #48]
  414d08:	b	414d14 <main@@Base+0x228>
  414d0c:	ldr	x8, [x21]
  414d10:	str	x8, [x20, #48]
  414d14:	bl	418448 <user_access@@Base>
  414d18:	bl	4165e0 <main@@Base+0x1af4>
  414d1c:	add	x0, x19, #0x834
  414d20:	mov	w1, #0x1000                	// #4096
  414d24:	bl	4067c0 <getcwd@plt>
  414d28:	cbz	x0, 414d38 <main@@Base+0x24c>
  414d2c:	add	x0, x19, #0x834
  414d30:	bl	4180bc <xstrdup@@Base>
  414d34:	b	414d54 <main@@Base+0x268>
  414d38:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  414d3c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  414d40:	add	x0, x0, #0x5e2
  414d44:	add	x1, x1, #0x989
  414d48:	bl	41928c <perror_with_name@@Base>
  414d4c:	mov	x0, xzr
  414d50:	strb	wzr, [x19, #2100]
  414d54:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  414d58:	ldr	x8, [x20, #2440]
  414d5c:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  414d60:	str	x0, [x9, #4056]
  414d64:	str	x21, [x19, #32]
  414d68:	ldr	x5, [x8, #8]
  414d6c:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x20e0>
  414d70:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  414d74:	add	x21, x21, #0x989
  414d78:	add	x0, x0, #0x5e9
  414d7c:	mov	w1, #0xa                   	// #10
  414d80:	mov	x2, x21
  414d84:	mov	w3, wzr
  414d88:	mov	w4, wzr
  414d8c:	mov	x6, xzr
  414d90:	bl	421720 <define_variable_in_set@@Base>
  414d94:	ldr	w8, [x0, #44]
  414d98:	mov	w1, #0xd                   	// #13
  414d9c:	mov	x2, x21
  414da0:	mov	w3, wzr
  414da4:	orr	w8, w8, #0x10
  414da8:	str	w8, [x0, #44]
  414dac:	ldr	x8, [x20, #2440]
  414db0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  414db4:	add	x0, x0, #0x5f4
  414db8:	mov	w4, wzr
  414dbc:	ldr	x5, [x8, #8]
  414dc0:	mov	x6, xzr
  414dc4:	bl	421720 <define_variable_in_set@@Base>
  414dc8:	ldr	w8, [x0, #44]
  414dcc:	adrp	x2, 425000 <_IO_stdin_used@@Base+0xe0>
  414dd0:	add	x2, x2, #0xf2a
  414dd4:	mov	w1, #0xb                   	// #11
  414dd8:	orr	w8, w8, #0x10
  414ddc:	str	w8, [x0, #44]
  414de0:	ldr	x8, [x20, #2440]
  414de4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  414de8:	add	x0, x0, #0x602
  414dec:	mov	w3, wzr
  414df0:	ldr	x5, [x8, #8]
  414df4:	mov	w4, wzr
  414df8:	mov	x6, xzr
  414dfc:	bl	421720 <define_variable_in_set@@Base>
  414e00:	ldr	x8, [x20, #2440]
  414e04:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  414e08:	add	x0, x0, #0xbca
  414e0c:	mov	w1, #0x7                   	// #7
  414e10:	ldr	x5, [x8, #8]
  414e14:	mov	x2, x21
  414e18:	mov	w3, wzr
  414e1c:	mov	w4, wzr
  414e20:	mov	x6, xzr
  414e24:	bl	421720 <define_variable_in_set@@Base>
  414e28:	ldr	x8, [x20, #2440]
  414e2c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  414e30:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x30e0>
  414e34:	add	x0, x0, #0x6bb
  414e38:	ldr	x5, [x8, #8]
  414e3c:	add	x2, x2, #0x60e
  414e40:	mov	w1, #0x9                   	// #9
  414e44:	mov	w3, wzr
  414e48:	mov	w4, wzr
  414e4c:	mov	x6, xzr
  414e50:	bl	421720 <define_variable_in_set@@Base>
  414e54:	mov	x0, xzr
  414e58:	bl	40f96c <guile_gmake_setup@@Base>
  414e5c:	ldr	x21, [x24]
  414e60:	cbz	x21, 414f94 <main@@Base+0x4a8>
  414e64:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  414e68:	adrp	x26, 42a000 <_IO_stdin_used@@Base+0x50e0>
  414e6c:	adrp	x27, 43f000 <stdio_traced@@Base+0x1a38>
  414e70:	mov	w20, wzr
  414e74:	add	x23, x23, #0xcf0
  414e78:	add	x26, x26, #0x83
  414e7c:	add	x27, x27, #0xfe8
  414e80:	str	wzr, [x19, #44]
  414e84:	b	414ec8 <main@@Base+0x3dc>
  414e88:	mov	x0, x26
  414e8c:	bl	4180bc <xstrdup@@Base>
  414e90:	str	x0, [x27]
  414e94:	mov	w8, #0x5                   	// #5
  414e98:	mov	x0, x28
  414e9c:	str	w8, [x27, #40]
  414ea0:	bl	4180bc <xstrdup@@Base>
  414ea4:	mov	w25, #0x1                   	// #1
  414ea8:	str	x0, [x27, #8]
  414eac:	ldr	w8, [x21, #44]
  414eb0:	and	w8, w8, #0x9fffffff
  414eb4:	bfi	w8, w25, #29, #1
  414eb8:	str	w8, [x21, #44]
  414ebc:	add	w20, w20, #0x1
  414ec0:	ldr	x21, [x24, w20, uxtw #3]
  414ec4:	cbz	x21, 414f98 <main@@Base+0x4ac>
  414ec8:	mov	x28, x21
  414ecc:	ldrb	w8, [x28], #1
  414ed0:	ldrh	w9, [x23, x8, lsl #1]
  414ed4:	tbz	w9, #5, 414ecc <main@@Base+0x3e0>
  414ed8:	cbz	w8, 414ebc <main@@Base+0x3d0>
  414edc:	sub	x8, x28, #0x1
  414ee0:	sub	x22, x8, x21
  414ee4:	cmp	x22, #0xd
  414ee8:	b.ne	414f04 <main@@Base+0x418>  // b.any
  414eec:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  414ef0:	mov	w2, #0xd                   	// #13
  414ef4:	mov	x0, x21
  414ef8:	add	x1, x1, #0x6c5
  414efc:	bl	406a70 <strncmp@plt>
  414f00:	cbz	w0, 414f64 <main@@Base+0x478>
  414f04:	mov	w25, wzr
  414f08:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  414f0c:	ldr	x8, [x8, #2440]
  414f10:	mov	w3, #0x1                   	// #1
  414f14:	mov	w4, #0x1                   	// #1
  414f18:	mov	x0, x21
  414f1c:	ldr	x5, [x8, #8]
  414f20:	mov	x1, x22
  414f24:	mov	x2, x28
  414f28:	mov	x6, xzr
  414f2c:	bl	421720 <define_variable_in_set@@Base>
  414f30:	ldr	x8, [x0]
  414f34:	mov	x21, x0
  414f38:	cmp	x8, x26
  414f3c:	b.eq	414e88 <main@@Base+0x39c>  // b.none
  414f40:	ldrb	w9, [x8]
  414f44:	cmp	w9, #0x53
  414f48:	b.ne	414eac <main@@Base+0x3c0>  // b.any
  414f4c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  414f50:	add	x0, x8, #0x1
  414f54:	add	x1, x1, #0x84
  414f58:	bl	406cb0 <strcmp@plt>
  414f5c:	cbnz	w0, 414eac <main@@Base+0x3c0>
  414f60:	b	414e88 <main@@Base+0x39c>
  414f64:	ldrb	w8, [x28]
  414f68:	cmp	w8, #0x2d
  414f6c:	b.ne	414f80 <main@@Base+0x494>  // b.any
  414f70:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  414f74:	mov	w9, #0x1                   	// #1
  414f78:	add	x28, x28, #0x1
  414f7c:	str	w9, [x8, #1480]
  414f80:	mov	x0, x28
  414f84:	bl	4069d0 <atoi@plt>
  414f88:	mov	w25, #0x1                   	// #1
  414f8c:	str	w0, [x19, #44]
  414f90:	b	414f08 <main@@Base+0x41c>
  414f94:	str	wzr, [x19, #44]
  414f98:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x10e0>
  414f9c:	add	x21, x21, #0x24
  414fa0:	mov	w1, #0xc                   	// #12
  414fa4:	mov	x0, x21
  414fa8:	bl	416604 <main@@Base+0x1b18>
  414fac:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  414fb0:	ldr	x8, [x8, #2440]
  414fb4:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  414fb8:	add	x2, x2, #0x989
  414fbc:	mov	w1, #0xc                   	// #12
  414fc0:	ldr	x5, [x8, #8]
  414fc4:	mov	w3, #0x1                   	// #1
  414fc8:	mov	x0, x21
  414fcc:	mov	w4, wzr
  414fd0:	mov	x6, xzr
  414fd4:	bl	421720 <define_variable_in_set@@Base>
  414fd8:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  414fdc:	add	x0, x0, #0x27
  414fe0:	mov	w1, #0x9                   	// #9
  414fe4:	bl	416604 <main@@Base+0x1b18>
  414fe8:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  414fec:	adrp	x21, 440000 <shell_var@@Base+0x18>
  414ff0:	ldr	w9, [x24, #3304]
  414ff4:	add	x21, x21, #0x50
  414ff8:	ldrb	w8, [x21, #8]
  414ffc:	ldp	x0, x23, [x19, #24]
  415000:	sub	w9, w9, #0x1
  415004:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  415008:	cmp	w9, #0x2
  41500c:	and	w8, w8, #0xfe
  415010:	cset	w9, cc  // cc = lo, ul, last
  415014:	ldr	w20, [x25, #2396]
  415018:	orr	w8, w8, w9
  41501c:	adrp	x22, 43d000 <stopchar_map@@Base+0x310>
  415020:	csel	x9, x21, xzr, cc  // cc = lo, ul, last
  415024:	strb	w8, [x21, #8]
  415028:	mov	w8, #0xffffffff            	// #-1
  41502c:	mov	x1, x23
  415030:	mov	w2, wzr
  415034:	str	x9, [x22, #1472]
  415038:	str	w8, [x25, #2396]
  41503c:	bl	416760 <main@@Base+0x1c74>
  415040:	ldr	w28, [x25, #2396]
  415044:	cmn	w28, #0x1
  415048:	b.ne	415050 <main@@Base+0x564>  // b.any
  41504c:	str	w20, [x25, #2396]
  415050:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415054:	ldr	x0, [x8, #2512]
  415058:	bl	406980 <fileno@plt>
  41505c:	bl	406e10 <isatty@plt>
  415060:	cbz	w0, 4150cc <main@@Base+0x5e0>
  415064:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  415068:	add	x0, x0, #0x6d3
  41506c:	mov	w1, #0xc                   	// #12
  415070:	bl	421ac8 <lookup_variable@@Base>
  415074:	cbnz	x0, 4150cc <main@@Base+0x5e0>
  415078:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41507c:	ldr	x0, [x8, #2512]
  415080:	bl	406980 <fileno@plt>
  415084:	bl	406850 <ttyname@plt>
  415088:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41508c:	ldr	x8, [x8, #2440]
  415090:	cmp	x0, #0x0
  415094:	mov	w1, #0xc                   	// #12
  415098:	mov	w3, wzr
  41509c:	ldr	x5, [x8, #8]
  4150a0:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  4150a4:	add	x8, x8, #0x6e0
  4150a8:	csel	x2, x8, x0, eq  // eq = none
  4150ac:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4150b0:	add	x0, x0, #0x6d3
  4150b4:	mov	w4, wzr
  4150b8:	mov	x6, xzr
  4150bc:	bl	421720 <define_variable_in_set@@Base>
  4150c0:	ldr	w8, [x0, #44]
  4150c4:	and	w8, w8, #0x9fffffff
  4150c8:	str	w8, [x0, #44]
  4150cc:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4150d0:	ldr	x0, [x20, #2488]
  4150d4:	bl	406980 <fileno@plt>
  4150d8:	bl	406e10 <isatty@plt>
  4150dc:	cbz	w0, 415144 <main@@Base+0x658>
  4150e0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4150e4:	add	x0, x0, #0x6e5
  4150e8:	mov	w1, #0xc                   	// #12
  4150ec:	bl	421ac8 <lookup_variable@@Base>
  4150f0:	cbnz	x0, 415144 <main@@Base+0x658>
  4150f4:	ldr	x0, [x20, #2488]
  4150f8:	bl	406980 <fileno@plt>
  4150fc:	bl	406850 <ttyname@plt>
  415100:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415104:	ldr	x8, [x8, #2440]
  415108:	cmp	x0, #0x0
  41510c:	mov	w1, #0xc                   	// #12
  415110:	mov	w3, wzr
  415114:	ldr	x5, [x8, #8]
  415118:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  41511c:	add	x8, x8, #0x6e0
  415120:	csel	x2, x8, x0, eq  // eq = none
  415124:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  415128:	add	x0, x0, #0x6e5
  41512c:	mov	w4, wzr
  415130:	mov	x6, xzr
  415134:	bl	421720 <define_variable_in_set@@Base>
  415138:	ldr	w8, [x0, #44]
  41513c:	and	w8, w8, #0x9fffffff
  415140:	str	w8, [x0, #44]
  415144:	ldr	w8, [x24, #3304]
  415148:	sub	w20, w8, #0x1
  41514c:	cmp	w20, #0x2
  415150:	adrp	x8, 440000 <shell_var@@Base+0x18>
  415154:	b.cc	41516c <main@@Base+0x680>  // b.lo, b.ul, b.last
  415158:	ldrb	w8, [x8, #88]
  41515c:	tbz	w8, #0, 41516c <main@@Base+0x680>
  415160:	adrp	x0, 440000 <shell_var@@Base+0x18>
  415164:	add	x0, x0, #0x50
  415168:	bl	418b44 <output_close@@Base>
  41516c:	ldrb	w8, [x21, #8]
  415170:	cmp	w20, #0x2
  415174:	cset	w9, cc  // cc = lo, ul, last
  415178:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41517c:	and	w8, w8, #0xfe
  415180:	csel	x10, x21, xzr, cc  // cc = lo, ul, last
  415184:	orr	w8, w8, w9
  415188:	add	x0, x0, #0x6f2
  41518c:	mov	w1, #0x9                   	// #9
  415190:	strb	w8, [x21, #8]
  415194:	str	x10, [x22, #1472]
  415198:	bl	421ac8 <lookup_variable@@Base>
  41519c:	cbz	x0, 4151c0 <main@@Base+0x6d4>
  4151a0:	ldr	x8, [x0, #8]
  4151a4:	mov	w0, wzr
  4151a8:	ldrb	w9, [x8]
  4151ac:	cbz	w9, 4151c0 <main@@Base+0x6d4>
  4151b0:	cmp	w9, #0x2d
  4151b4:	b.eq	4151c0 <main@@Base+0x6d4>  // b.none
  4151b8:	mov	x0, x8
  4151bc:	bl	4069d0 <atoi@plt>
  4151c0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4151c4:	ldr	w8, [x8, #3832]
  4151c8:	ldr	w10, [x19, #44]
  4151cc:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4151d0:	ldr	w9, [x9, #3284]
  4151d4:	cmp	w8, #0x0
  4151d8:	cset	w8, ne  // ne = any
  4151dc:	cmp	w10, #0x0
  4151e0:	cset	w10, eq  // eq = none
  4151e4:	adrp	x27, 440000 <shell_var@@Base+0x18>
  4151e8:	and	w8, w10, w8
  4151ec:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  4151f0:	str	w0, [x27, #64]
  4151f4:	str	w8, [x10, #3296]
  4151f8:	cbnz	w9, 416484 <main@@Base+0x1998>
  4151fc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415200:	ldrb	w8, [x8, #3236]
  415204:	tbz	w8, #0, 41520c <main@@Base+0x720>
  415208:	bl	416bd8 <main@@Base+0x20ec>
  41520c:	ldrb	w8, [x19, #2100]
  415210:	cbz	w8, 415258 <main@@Base+0x76c>
  415214:	ldr	x21, [x23]
  415218:	cbz	x21, 415258 <main@@Base+0x76c>
  41521c:	ldrb	w8, [x21]
  415220:	cmp	w8, #0x2f
  415224:	b.eq	415258 <main@@Base+0x76c>  // b.none
  415228:	mov	w1, #0x2f                  	// #47
  41522c:	mov	x0, x21
  415230:	bl	406d10 <strchr@plt>
  415234:	cbz	x0, 415258 <main@@Base+0x76c>
  415238:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x10e0>
  41523c:	add	x2, x2, #0x8c7
  415240:	add	x1, x19, #0x834
  415244:	mov	w0, #0x3                   	// #3
  415248:	mov	x3, x21
  41524c:	bl	417eb4 <concat@@Base>
  415250:	bl	4180bc <xstrdup@@Base>
  415254:	str	x0, [x23]
  415258:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41525c:	ldr	x0, [x8, #3840]
  415260:	adrp	x22, 440000 <shell_var@@Base+0x18>
  415264:	add	x8, x19, #0x834
  415268:	str	x8, [x22, #24]
  41526c:	cbz	x0, 4152e4 <main@@Base+0x7f8>
  415270:	cmn	w28, #0x1
  415274:	b.eq	4152ac <main@@Base+0x7c0>  // b.none
  415278:	ldr	w8, [x19, #44]
  41527c:	cbnz	w8, 4152e0 <main@@Base+0x7f4>
  415280:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415284:	add	x1, x1, #0x745
  415288:	mov	w2, #0x5                   	// #5
  41528c:	mov	x0, xzr
  415290:	bl	406e50 <dcgettext@plt>
  415294:	mov	x2, x0
  415298:	mov	w1, #0x14                  	// #20
  41529c:	mov	x0, xzr
  4152a0:	mov	w3, w28
  4152a4:	bl	418f84 <error@@Base>
  4152a8:	b	4152e0 <main@@Base+0x7f4>
  4152ac:	bl	4241ac <jobserver_parse_auth@@Base>
  4152b0:	cbnz	w0, 4152e4 <main@@Base+0x7f8>
  4152b4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4152b8:	add	x1, x1, #0x6fc
  4152bc:	mov	w2, #0x5                   	// #5
  4152c0:	mov	x0, xzr
  4152c4:	bl	406e50 <dcgettext@plt>
  4152c8:	mov	x2, x0
  4152cc:	mov	x0, xzr
  4152d0:	mov	x1, xzr
  4152d4:	bl	418f84 <error@@Base>
  4152d8:	mov	w8, #0x1                   	// #1
  4152dc:	str	w8, [x25, #2396]
  4152e0:	bl	416dd0 <die@@Base+0xe8>
  4152e4:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4152e8:	ldr	x8, [x20, #2440]
  4152ec:	ldr	x2, [x23]
  4152f0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4152f4:	add	x0, x0, #0x780
  4152f8:	ldr	x5, [x8, #8]
  4152fc:	mov	w1, #0xc                   	// #12
  415300:	mov	w3, wzr
  415304:	mov	w4, wzr
  415308:	mov	x6, xzr
  41530c:	bl	421720 <define_variable_in_set@@Base>
  415310:	ldr	x8, [x20, #2440]
  415314:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  415318:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x30e0>
  41531c:	add	x0, x0, #0x78d
  415320:	ldr	x5, [x8, #8]
  415324:	add	x2, x2, #0x792
  415328:	mov	w1, #0x4                   	// #4
  41532c:	mov	w4, #0x1                   	// #1
  415330:	mov	w3, wzr
  415334:	mov	x6, xzr
  415338:	bl	421720 <define_variable_in_set@@Base>
  41533c:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  415340:	ldr	x23, [x20, #3848]
  415344:	cbz	x23, 41544c <main@@Base+0x960>
  415348:	mov	x24, xzr
  41534c:	ldr	x25, [x23, #8]
  415350:	ldr	x0, [x25]
  415354:	bl	4067d0 <strlen@plt>
  415358:	ldr	w8, [x25, #44]
  41535c:	mov	x21, x0
  415360:	ldr	x0, [x25, #8]
  415364:	mvn	w8, w8
  415368:	and	x25, x8, #0x1
  41536c:	bl	4067d0 <strlen@plt>
  415370:	ldr	x23, [x23]
  415374:	add	x8, x0, x21
  415378:	add	x9, x24, x25
  41537c:	add	x8, x9, x8, lsl #1
  415380:	add	x24, x8, #0x2
  415384:	cbnz	x23, 41534c <main@@Base+0x860>
  415388:	add	x9, x24, #0xf
  41538c:	mov	x8, sp
  415390:	and	x9, x9, #0xfffffffffffffff0
  415394:	sub	x21, x8, x9
  415398:	mov	sp, x21
  41539c:	ldr	x20, [x20, #3848]
  4153a0:	mov	x0, x21
  4153a4:	cbz	x20, 4153f0 <main@@Base+0x904>
  4153a8:	mov	w23, #0x3a                  	// #58
  4153ac:	mov	w24, #0x3d                  	// #61
  4153b0:	mov	w25, #0x20                  	// #32
  4153b4:	mov	x0, x21
  4153b8:	b	4153d4 <main@@Base+0x8e8>
  4153bc:	strb	w24, [x0], #1
  4153c0:	ldr	x1, [x26, #8]
  4153c4:	bl	416dfc <die@@Base+0x114>
  4153c8:	strb	w25, [x0], #1
  4153cc:	ldr	x20, [x20]
  4153d0:	cbz	x20, 4153f0 <main@@Base+0x904>
  4153d4:	ldr	x26, [x20, #8]
  4153d8:	ldr	x1, [x26]
  4153dc:	bl	416dfc <die@@Base+0x114>
  4153e0:	ldrb	w8, [x26, #44]
  4153e4:	tbnz	w8, #0, 4153bc <main@@Base+0x8d0>
  4153e8:	strb	w23, [x0], #1
  4153ec:	b	4153bc <main@@Base+0x8d0>
  4153f0:	sturb	wzr, [x0, #-1]
  4153f4:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4153f8:	ldr	x8, [x20, #2440]
  4153fc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  415400:	add	x0, x0, #0x7a2
  415404:	mov	w1, #0x17                  	// #23
  415408:	ldr	x5, [x8, #8]
  41540c:	mov	w3, #0x6                   	// #6
  415410:	mov	x2, x21
  415414:	mov	w4, wzr
  415418:	mov	x6, xzr
  41541c:	bl	421720 <define_variable_in_set@@Base>
  415420:	ldr	x8, [x20, #2440]
  415424:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  415428:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x30e0>
  41542c:	add	x0, x0, #0x7ba
  415430:	ldr	x5, [x8, #8]
  415434:	add	x2, x2, #0x7c8
  415438:	mov	w1, #0xd                   	// #13
  41543c:	mov	w3, #0x1                   	// #1
  415440:	mov	w4, #0x1                   	// #1
  415444:	mov	x6, xzr
  415448:	bl	421720 <define_variable_in_set@@Base>
  41544c:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  415450:	ldr	x8, [x23, #3856]
  415454:	cbz	x8, 41548c <main@@Base+0x9a0>
  415458:	ldr	x8, [x23, #3856]
  41545c:	ldr	x8, [x8]
  415460:	ldr	x21, [x8]
  415464:	cbz	x21, 41548c <main@@Base+0x9a0>
  415468:	mov	w20, #0x1                   	// #1
  41546c:	mov	x0, x21
  415470:	bl	406ce0 <chdir@plt>
  415474:	tbnz	w0, #31, 41647c <main@@Base+0x1990>
  415478:	ldr	x8, [x23, #3856]
  41547c:	ldr	x8, [x8]
  415480:	ldr	x21, [x8, w20, uxtw #3]
  415484:	add	w20, w20, #0x1
  415488:	cbnz	x21, 41546c <main@@Base+0x980>
  41548c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415490:	ldr	w8, [x8, #3864]
  415494:	cbnz	w8, 4154b4 <main@@Base+0x9c8>
  415498:	ldr	x8, [x23, #3856]
  41549c:	cbnz	x8, 4154a8 <main@@Base+0x9bc>
  4154a0:	ldr	w8, [x27, #64]
  4154a4:	cbz	w8, 4154b4 <main@@Base+0x9c8>
  4154a8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4154ac:	mov	w9, #0x1                   	// #1
  4154b0:	str	w9, [x8, #3276]
  4154b4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4154b8:	ldr	w8, [x8, #3280]
  4154bc:	cbz	w8, 4154c8 <main@@Base+0x9dc>
  4154c0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4154c4:	str	wzr, [x8, #3276]
  4154c8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4154cc:	ldr	w8, [x8, #3268]
  4154d0:	cbz	w8, 4154e0 <main@@Base+0x9f4>
  4154d4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4154d8:	mov	w9, #0x1                   	// #1
  4154dc:	str	w9, [x8, #3264]
  4154e0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4154e4:	ldr	x8, [x8, #3872]
  4154e8:	cbz	x8, 4154f4 <main@@Base+0xa08>
  4154ec:	ldr	x0, [x8]
  4154f0:	b	4154f8 <main@@Base+0xa0c>
  4154f4:	mov	x0, xzr
  4154f8:	bl	41b0dc <construct_include_path@@Base>
  4154fc:	ldr	x8, [x23, #3856]
  415500:	cbz	x8, 415534 <main@@Base+0xa48>
  415504:	add	x0, x19, #0x834
  415508:	mov	w1, #0x1000                	// #4096
  41550c:	add	x20, x19, #0x834
  415510:	bl	4067c0 <getcwd@plt>
  415514:	cbnz	x0, 415530 <main@@Base+0xa44>
  415518:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41551c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  415520:	add	x0, x0, #0x5e2
  415524:	add	x1, x1, #0x989
  415528:	bl	41928c <perror_with_name@@Base>
  41552c:	mov	x20, xzr
  415530:	str	x20, [x22, #24]
  415534:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415538:	ldr	x8, [x8, #2440]
  41553c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  415540:	add	x0, x0, #0x7e3
  415544:	add	x2, x19, #0x834
  415548:	ldr	x5, [x8, #8]
  41554c:	mov	w1, #0x6                   	// #6
  415550:	mov	w3, #0x2                   	// #2
  415554:	mov	w4, wzr
  415558:	mov	x6, xzr
  41555c:	str	w28, [x19, #20]
  415560:	bl	421720 <define_variable_in_set@@Base>
  415564:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  415568:	ldr	x8, [x23, #3880]
  41556c:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  415570:	cbz	x8, 415720 <main@@Base+0xc34>
  415574:	ldr	x8, [x23, #3880]
  415578:	ldr	w9, [x8, #8]
  41557c:	cbz	w9, 415720 <main@@Base+0xc34>
  415580:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  415584:	mov	w27, #0xbbf0                	// #48112
  415588:	mov	x24, xzr
  41558c:	add	x26, x26, #0xef0
  415590:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  415594:	movk	w27, #0xfffe, lsl #16
  415598:	mov	w20, #0x40c                 	// #1036
  41559c:	b	4155ec <main@@Base+0xb00>
  4155a0:	mov	x0, x21
  4155a4:	bl	4069c0 <fclose@plt>
  4155a8:	ldr	x0, [x25, #3824]
  4155ac:	bl	420f28 <strcache_add@@Base>
  4155b0:	ldr	x8, [x23, #3880]
  4155b4:	ldr	x8, [x8]
  4155b8:	str	x0, [x8, x24, lsl #3]
  4155bc:	ldr	x0, [x25, #3824]
  4155c0:	bl	420f28 <strcache_add@@Base>
  4155c4:	bl	40a830 <enter_file@@Base>
  4155c8:	ldr	w8, [x0, #136]
  4155cc:	and	w8, w8, w27
  4155d0:	orr	w8, w8, w20
  4155d4:	str	w8, [x0, #136]
  4155d8:	ldr	x8, [x23, #3880]
  4155dc:	add	x24, x24, #0x1
  4155e0:	ldr	w9, [x8, #8]
  4155e4:	cmp	x24, x9
  4155e8:	b.cs	415720 <main@@Base+0xc34>  // b.hs, b.nlast
  4155ec:	ldr	x8, [x8]
  4155f0:	ldr	x8, [x8, x24, lsl #3]
  4155f4:	ldrb	w9, [x8]
  4155f8:	cmp	w9, #0x2d
  4155fc:	b.ne	4155d8 <main@@Base+0xaec>  // b.any
  415600:	ldrb	w8, [x8, #1]
  415604:	cbnz	w8, 4155d8 <main@@Base+0xaec>
  415608:	ldr	x8, [x25, #3824]
  41560c:	cbnz	x8, 415d88 <main@@Base+0x129c>
  415610:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  415614:	add	x0, x0, #0x818
  415618:	bl	406f10 <getenv@plt>
  41561c:	cbz	x0, 41562c <main@@Base+0xb40>
  415620:	ldrb	w8, [x0]
  415624:	mov	x22, x0
  415628:	cbnz	w8, 415634 <main@@Base+0xb48>
  41562c:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x30e0>
  415630:	add	x22, x22, #0x81f
  415634:	mov	x0, x22
  415638:	bl	4067d0 <strlen@plt>
  41563c:	add	x9, x0, #0x19
  415640:	mov	x8, sp
  415644:	and	x9, x9, #0xfffffffffffffff0
  415648:	sub	x21, x8, x9
  41564c:	mov	sp, x21
  415650:	mov	x0, x21
  415654:	mov	x1, x22
  415658:	bl	406d90 <strcpy@plt>
  41565c:	bl	4067d0 <strlen@plt>
  415660:	add	x8, x0, x21
  415664:	ldurb	w8, [x8, #-1]
  415668:	cmp	w8, #0x2f
  41566c:	b.eq	415680 <main@@Base+0xb94>  // b.none
  415670:	mov	x0, x21
  415674:	bl	4067d0 <strlen@plt>
  415678:	mov	w8, #0x2f                  	// #47
  41567c:	strh	w8, [x21, x0]
  415680:	mov	x0, x21
  415684:	bl	4067d0 <strlen@plt>
  415688:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  41568c:	add	x8, x8, #0x824
  415690:	ldr	x8, [x8]
  415694:	add	x9, x21, x0
  415698:	mov	x0, x26
  41569c:	mov	x1, x21
  4156a0:	str	x8, [x9]
  4156a4:	strb	wzr, [x9, #8]
  4156a8:	bl	4183b4 <get_tmpfile@@Base>
  4156ac:	cbz	x0, 415d94 <main@@Base+0x12a8>
  4156b0:	mov	x21, x0
  4156b4:	ldr	x0, [x28, #2520]
  4156b8:	bl	406c30 <feof@plt>
  4156bc:	cbnz	w0, 4155a0 <main@@Base+0xab4>
  4156c0:	ldr	x22, [x28, #2520]
  4156c4:	mov	x0, x22
  4156c8:	bl	406fa0 <ferror@plt>
  4156cc:	cbnz	w0, 4155a0 <main@@Base+0xab4>
  4156d0:	add	x0, x19, #0x30
  4156d4:	mov	w1, #0x1                   	// #1
  4156d8:	mov	w2, #0x800                 	// #2048
  4156dc:	mov	x3, x22
  4156e0:	bl	406cd0 <fread@plt>
  4156e4:	cbz	x0, 4156b4 <main@@Base+0xbc8>
  4156e8:	mov	x22, x0
  4156ec:	add	x0, x19, #0x30
  4156f0:	mov	w1, #0x1                   	// #1
  4156f4:	mov	x2, x22
  4156f8:	mov	x3, x21
  4156fc:	bl	406d40 <fwrite@plt>
  415700:	cmp	x0, x22
  415704:	b.eq	4156b4 <main@@Base+0xbc8>  // b.none
  415708:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  41570c:	add	x1, x1, #0x844
  415710:	mov	w2, #0x5                   	// #5
  415714:	mov	x0, xzr
  415718:	bl	406e50 <dcgettext@plt>
  41571c:	bl	4184d0 <pfatal_with_name@@Base>
  415720:	adrp	x1, 411000 <try_implicit_rule@@Base+0xac8>
  415724:	add	x1, x1, #0xa88
  415728:	mov	w0, #0x11                  	// #17
  41572c:	bl	416570 <main@@Base+0x1a84>
  415730:	add	x0, x19, #0x30
  415734:	bl	406a50 <sigemptyset@plt>
  415738:	add	x0, x19, #0x30
  41573c:	mov	w1, #0x11                  	// #17
  415740:	bl	406ed0 <sigaddset@plt>
  415744:	add	x1, x19, #0x30
  415748:	mov	w0, #0x2                   	// #2
  41574c:	mov	x2, xzr
  415750:	bl	406830 <sigprocmask@plt>
  415754:	tbz	w0, #31, 415764 <main@@Base+0xc78>
  415758:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41575c:	add	x0, x0, #0x85c
  415760:	bl	4184d0 <pfatal_with_name@@Base>
  415764:	adrp	x1, 416000 <main@@Base+0x1514>
  415768:	add	x1, x1, #0xe44
  41576c:	mov	w0, #0xa                   	// #10
  415770:	bl	416570 <main@@Base+0x1a84>
  415774:	bl	408d18 <set_default_suffixes@@Base>
  415778:	bl	408e00 <install_default_suffix_rules@@Base>
  41577c:	bl	4225cc <define_automatic_variables@@Base>
  415780:	mov	w0, wzr
  415784:	mov	w1, wzr
  415788:	bl	416e5c <die@@Base+0x174>
  41578c:	ldr	w8, [x0, #44]
  415790:	and	w8, w8, #0x9fffffff
  415794:	str	w8, [x0, #44]
  415798:	bl	408ef8 <define_default_variables@@Base>
  41579c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4157a0:	add	x0, x0, #0x87e
  4157a4:	bl	420f28 <strcache_add@@Base>
  4157a8:	bl	40a830 <enter_file@@Base>
  4157ac:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4157b0:	ldr	x8, [x8, #2440]
  4157b4:	adrp	x9, 440000 <shell_var@@Base+0x18>
  4157b8:	str	x0, [x9, #72]
  4157bc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4157c0:	ldr	x5, [x8, #8]
  4157c4:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  4157c8:	add	x0, x0, #0x887
  4157cc:	add	x2, x2, #0x989
  4157d0:	mov	w1, #0xd                   	// #13
  4157d4:	mov	w3, #0x2                   	// #2
  4157d8:	mov	w4, wzr
  4157dc:	mov	x6, xzr
  4157e0:	bl	421720 <define_variable_in_set@@Base>
  4157e4:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4157e8:	ldr	x9, [x20, #3888]
  4157ec:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4157f0:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  4157f4:	adrp	x27, 43d000 <stopchar_map@@Base+0x310>
  4157f8:	str	x0, [x8, #56]
  4157fc:	cbz	x9, 4158f4 <main@@Base+0xe08>
  415800:	ldr	x8, [x20, #3888]
  415804:	ldr	w9, [x9, #8]
  415808:	ldr	w10, [x8, #8]
  41580c:	lsl	x22, x9, #3
  415810:	cbz	w10, 415858 <main@@Base+0xd6c>
  415814:	mov	x24, xzr
  415818:	ldr	x8, [x8]
  41581c:	ldr	x0, [x8, x24, lsl #3]
  415820:	bl	4180bc <xstrdup@@Base>
  415824:	mov	x21, x0
  415828:	bl	4067d0 <strlen@plt>
  41582c:	add	x22, x22, x0, lsl #1
  415830:	mov	x0, x21
  415834:	mov	x1, xzr
  415838:	bl	419a18 <eval_buffer@@Base>
  41583c:	mov	x0, x21
  415840:	bl	406cf0 <free@plt>
  415844:	ldr	x8, [x20, #3888]
  415848:	add	x24, x24, #0x1
  41584c:	ldr	w9, [x8, #8]
  415850:	cmp	x24, x9
  415854:	b.cc	415818 <main@@Base+0xd2c>  // b.lo, b.ul, b.last
  415858:	add	x9, x22, #0xf
  41585c:	mov	x8, sp
  415860:	and	x9, x9, #0xfffffffffffffff0
  415864:	sub	x21, x8, x9
  415868:	mov	sp, x21
  41586c:	ldr	x8, [x20, #3888]
  415870:	mov	x0, x21
  415874:	ldr	w8, [x8, #8]
  415878:	cbz	w8, 4158c4 <main@@Base+0xdd8>
  41587c:	mov	x24, #0x2d2d                	// #11565
  415880:	movk	x24, #0x7665, lsl #16
  415884:	movk	x24, #0x6c61, lsl #32
  415888:	mov	x22, xzr
  41588c:	movk	x24, #0x3d, lsl #48
  415890:	mov	w25, #0x20                  	// #32
  415894:	mov	x0, x21
  415898:	str	x24, [x0], #7
  41589c:	ldr	x8, [x20, #3888]
  4158a0:	ldr	x8, [x8]
  4158a4:	ldr	x1, [x8, x22, lsl #3]
  4158a8:	bl	416dfc <die@@Base+0x114>
  4158ac:	strb	w25, [x0], #1
  4158b0:	ldr	x8, [x20, #3888]
  4158b4:	add	x22, x22, #0x1
  4158b8:	ldr	w8, [x8, #8]
  4158bc:	cmp	x22, x8
  4158c0:	b.cc	415898 <main@@Base+0xdac>  // b.lo, b.ul, b.last
  4158c4:	sturb	wzr, [x0, #-1]
  4158c8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4158cc:	ldr	x8, [x8, #2440]
  4158d0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4158d4:	add	x0, x0, #0x895
  4158d8:	mov	w1, #0x10                  	// #16
  4158dc:	ldr	x5, [x8, #8]
  4158e0:	mov	w3, #0x6                   	// #6
  4158e4:	mov	x2, x21
  4158e8:	mov	w4, wzr
  4158ec:	mov	x6, xzr
  4158f0:	bl	421720 <define_variable_in_set@@Base>
  4158f4:	ldr	x8, [x23, #3880]
  4158f8:	mov	x22, x27
  4158fc:	cbnz	x8, 41590c <main@@Base+0xe20>
  415900:	mov	x27, x28
  415904:	mov	x0, xzr
  415908:	b	415914 <main@@Base+0xe28>
  41590c:	ldr	x0, [x8]
  415910:	mov	x27, x28
  415914:	bl	4194a0 <read_all_makefiles@@Base>
  415918:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41591c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415920:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  415924:	ldr	w20, [x8, #3268]
  415928:	ldr	w24, [x9, #3264]
  41592c:	ldr	w25, [x28, #2396]
  415930:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x10e0>
  415934:	add	x21, x21, #0x24
  415938:	mov	x26, x0
  41593c:	mov	w8, #0xffffffff            	// #-1
  415940:	mov	w1, #0xc                   	// #12
  415944:	mov	x0, x21
  415948:	str	w8, [x28, #2396]
  41594c:	bl	416604 <main@@Base+0x1b18>
  415950:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415954:	ldr	x8, [x8, #2440]
  415958:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  41595c:	add	x2, x2, #0x989
  415960:	mov	w1, #0xc                   	// #12
  415964:	ldr	x5, [x8, #8]
  415968:	mov	w3, #0x5                   	// #5
  41596c:	mov	x0, x21
  415970:	mov	w4, wzr
  415974:	mov	x6, xzr
  415978:	bl	421720 <define_variable_in_set@@Base>
  41597c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  415980:	add	x0, x0, #0x27
  415984:	mov	w1, #0x9                   	// #9
  415988:	bl	416604 <main@@Base+0x1b18>
  41598c:	ldr	w8, [x19, #20]
  415990:	cmn	w8, #0x1
  415994:	b.ne	4159f4 <main@@Base+0xf08>  // b.any
  415998:	ldr	w8, [x28, #2396]
  41599c:	cmn	w8, #0x1
  4159a0:	b.eq	4159f4 <main@@Base+0xf08>  // b.none
  4159a4:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  4159a8:	ldr	x8, [x25, #3840]
  4159ac:	mov	x28, x27
  4159b0:	mov	x27, x22
  4159b4:	cbz	x8, 415a04 <main@@Base+0xf18>
  4159b8:	ldr	w8, [x19, #44]
  4159bc:	cbnz	w8, 4159ec <main@@Base+0xf00>
  4159c0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4159c4:	add	x1, x1, #0x8a6
  4159c8:	mov	w2, #0x5                   	// #5
  4159cc:	mov	x0, xzr
  4159d0:	bl	406e50 <dcgettext@plt>
  4159d4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4159d8:	ldr	w3, [x8, #2396]
  4159dc:	mov	x2, x0
  4159e0:	mov	w1, #0x14                  	// #20
  4159e4:	mov	x0, xzr
  4159e8:	bl	418f84 <error@@Base>
  4159ec:	bl	416dd0 <die@@Base+0xe8>
  4159f0:	b	415a04 <main@@Base+0xf18>
  4159f4:	str	w25, [x28, #2396]
  4159f8:	mov	x28, x27
  4159fc:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  415a00:	mov	x27, x22
  415a04:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415a08:	ldr	w8, [x8, #3304]
  415a0c:	sub	w21, w8, #0x1
  415a10:	cmp	w21, #0x2
  415a14:	b.cc	415a30 <main@@Base+0xf44>  // b.lo, b.ul, b.last
  415a18:	adrp	x8, 440000 <shell_var@@Base+0x18>
  415a1c:	ldrb	w8, [x8, #88]
  415a20:	tbz	w8, #0, 415a30 <main@@Base+0xf44>
  415a24:	adrp	x0, 440000 <shell_var@@Base+0x18>
  415a28:	add	x0, x0, #0x50
  415a2c:	bl	418b44 <output_close@@Base>
  415a30:	adrp	x11, 440000 <shell_var@@Base+0x18>
  415a34:	add	x11, x11, #0x50
  415a38:	ldrb	w8, [x11, #8]
  415a3c:	cmp	w21, #0x2
  415a40:	cset	w9, cc  // cc = lo, ul, last
  415a44:	csel	x10, x11, xzr, cc  // cc = lo, ul, last
  415a48:	and	w8, w8, #0xfe
  415a4c:	orr	w8, w8, w9
  415a50:	strb	w8, [x11, #8]
  415a54:	str	x10, [x27, #1472]
  415a58:	cbnz	w24, 415ab8 <main@@Base+0xfcc>
  415a5c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415a60:	ldr	w8, [x8, #3264]
  415a64:	cbz	w8, 415ab8 <main@@Base+0xfcc>
  415a68:	adrp	x22, 440000 <shell_var@@Base+0x18>
  415a6c:	ldr	x8, [x22, #248]
  415a70:	ldrb	w9, [x8, #136]
  415a74:	tbz	w9, #4, 415a88 <main@@Base+0xf9c>
  415a78:	ldr	x0, [x8, #24]
  415a7c:	bl	418388 <free_ns_chain@@Base>
  415a80:	ldr	x8, [x22, #248]
  415a84:	str	xzr, [x8, #24]
  415a88:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415a8c:	ldr	x8, [x8, #2440]
  415a90:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  415a94:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  415a98:	add	x0, x0, #0x54
  415a9c:	ldr	x5, [x8, #8]
  415aa0:	add	x2, x2, #0x989
  415aa4:	mov	w1, #0x8                   	// #8
  415aa8:	mov	w3, wzr
  415aac:	mov	w4, wzr
  415ab0:	mov	x6, xzr
  415ab4:	bl	421720 <define_variable_in_set@@Base>
  415ab8:	cbnz	w20, 415acc <main@@Base+0xfe0>
  415abc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415ac0:	ldr	w8, [x8, #3268]
  415ac4:	cbz	w8, 415acc <main@@Base+0xfe0>
  415ac8:	bl	408f6c <undefine_default_variables@@Base>
  415acc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415ad0:	ldr	w8, [x8, #2396]
  415ad4:	ldr	x9, [x25, #3840]
  415ad8:	adrp	x20, 440000 <shell_var@@Base+0x18>
  415adc:	cmn	w8, #0x1
  415ae0:	csinc	w8, w8, wzr, ne  // ne = any
  415ae4:	cmp	x9, #0x0
  415ae8:	csel	w8, w8, wzr, eq  // eq = none
  415aec:	cmp	w8, #0x2
  415af0:	str	w8, [x20, #240]
  415af4:	b.cc	415b20 <main@@Base+0x1034>  // b.lo, b.ul, b.last
  415af8:	sub	w0, w8, #0x1
  415afc:	bl	423fa4 <jobserver_setup@@Base>
  415b00:	cbz	w0, 415b20 <main@@Base+0x1034>
  415b04:	bl	4242cc <jobserver_get_auth@@Base>
  415b08:	str	x0, [x25, #3840]
  415b0c:	cbz	x0, 415b20 <main@@Base+0x1034>
  415b10:	ldr	w8, [x20, #240]
  415b14:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  415b18:	str	wzr, [x20, #240]
  415b1c:	str	w8, [x9, #3896]
  415b20:	cmp	w21, #0x1
  415b24:	b.hi	415b4c <main@@Base+0x1060>  // b.pmore
  415b28:	ldr	w8, [x20, #240]
  415b2c:	cmp	w8, #0x1
  415b30:	b.ne	415b4c <main@@Base+0x1060>  // b.any
  415b34:	adrp	x0, 440000 <shell_var@@Base+0x18>
  415b38:	add	x0, x0, #0x50
  415b3c:	str	xzr, [x27, #1472]
  415b40:	bl	418b44 <output_close@@Base>
  415b44:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415b48:	str	wzr, [x8, #3304]
  415b4c:	mov	w0, #0x1                   	// #1
  415b50:	mov	w1, wzr
  415b54:	bl	416e5c <die@@Base+0x174>
  415b58:	bl	40b280 <snap_deps@@Base>
  415b5c:	bl	42037c <convert_to_pattern@@Base>
  415b60:	bl	408e84 <install_default_implicit_rules@@Base>
  415b64:	bl	420130 <snap_implicit_rules@@Base>
  415b68:	bl	42362c <build_vpath_lists@@Base>
  415b6c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415b70:	ldr	x8, [x8, #3904]
  415b74:	cbz	x8, 415bb0 <main@@Base+0x10c4>
  415b78:	ldr	x8, [x8]
  415b7c:	ldr	x0, [x8]
  415b80:	cbz	x0, 415bb0 <main@@Base+0x10c4>
  415b84:	add	x20, x8, #0x8
  415b88:	mov	w21, #0x2                   	// #2
  415b8c:	mov	w22, #0x40c                 	// #1036
  415b90:	bl	40a830 <enter_file@@Base>
  415b94:	ldr	w8, [x0, #136]
  415b98:	stp	x21, x21, [x0, #112]
  415b9c:	and	w8, w8, #0xfffffff0
  415ba0:	orr	w8, w8, w22
  415ba4:	str	w8, [x0, #136]
  415ba8:	ldr	x0, [x20], #8
  415bac:	cbnz	x0, 415b90 <main@@Base+0x10a4>
  415bb0:	ldr	w8, [x19, #44]
  415bb4:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  415bb8:	cbnz	w8, 415be8 <main@@Base+0x10fc>
  415bbc:	ldr	x8, [x25, #3912]
  415bc0:	cbz	x8, 415be8 <main@@Base+0x10fc>
  415bc4:	ldr	x8, [x8]
  415bc8:	ldr	x0, [x8]
  415bcc:	cbz	x0, 415be8 <main@@Base+0x10fc>
  415bd0:	add	x20, x8, #0x8
  415bd4:	mov	x21, #0xffffffffffffffff    	// #-1
  415bd8:	bl	40a830 <enter_file@@Base>
  415bdc:	stp	x21, x21, [x0, #112]
  415be0:	ldr	x0, [x20], #8
  415be4:	cbnz	x0, 415bd8 <main@@Base+0x10ec>
  415be8:	bl	424764 <remote_setup@@Base>
  415bec:	adrp	x0, 440000 <shell_var@@Base+0x18>
  415bf0:	add	x0, x0, #0x50
  415bf4:	str	xzr, [x27, #1472]
  415bf8:	bl	418b44 <output_close@@Base>
  415bfc:	cbnz	x26, 415c08 <main@@Base+0x111c>
  415c00:	mov	w24, wzr
  415c04:	b	415f30 <main@@Base+0x1444>
  415c08:	ldrb	w8, [x28, #3236]
  415c0c:	tbz	w8, #0, 415c34 <main@@Base+0x1148>
  415c10:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415c14:	add	x1, x1, #0x8e2
  415c18:	mov	w2, #0x5                   	// #5
  415c1c:	mov	x0, xzr
  415c20:	bl	406e50 <dcgettext@plt>
  415c24:	bl	406ef0 <printf@plt>
  415c28:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415c2c:	ldr	x0, [x8, #2512]
  415c30:	bl	406d80 <fflush@plt>
  415c34:	mov	w8, wzr
  415c38:	mov	x9, x26
  415c3c:	ldr	x9, [x9]
  415c40:	add	w8, w8, #0x1
  415c44:	cbnz	x9, 415c3c <main@@Base+0x1150>
  415c48:	mov	w8, w8
  415c4c:	lsl	x8, x8, #3
  415c50:	add	x8, x8, #0xf
  415c54:	mov	x9, sp
  415c58:	and	x8, x8, #0xffffffff0
  415c5c:	sub	x22, x9, x8
  415c60:	mov	sp, x22
  415c64:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x30e0>
  415c68:	mov	w24, wzr
  415c6c:	mov	x27, xzr
  415c70:	add	x20, x20, #0x8fa
  415c74:	mov	x21, x26
  415c78:	ldr	x0, [x21, #16]
  415c7c:	ldr	x28, [x0, #104]
  415c80:	cbz	x28, 415c9c <main@@Base+0x11b0>
  415c84:	ldr	x8, [x28, #24]
  415c88:	cbnz	x8, 415c94 <main@@Base+0x11a8>
  415c8c:	ldr	x8, [x28, #32]
  415c90:	cbnz	x8, 415cd0 <main@@Base+0x11e4>
  415c94:	ldr	x28, [x28, #56]
  415c98:	cbnz	x28, 415c84 <main@@Base+0x1198>
  415c9c:	ldr	x8, [x0, #112]
  415ca0:	cbnz	x8, 415cb0 <main@@Base+0x11c4>
  415ca4:	mov	w1, wzr
  415ca8:	bl	41dec8 <f_mtime@@Base>
  415cac:	mov	x8, x0
  415cb0:	add	w9, w24, #0x1
  415cb4:	str	x8, [x22, w24, uxtw #3]
  415cb8:	mov	x27, x21
  415cbc:	mov	w24, w9
  415cc0:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  415cc4:	ldr	x21, [x27]
  415cc8:	cbnz	x21, 415c78 <main@@Base+0x118c>
  415ccc:	b	415d2c <main@@Base+0x1240>
  415cd0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415cd4:	ldrb	w8, [x8, #3236]
  415cd8:	tbz	w8, #1, 415d00 <main@@Base+0x1214>
  415cdc:	mov	w2, #0x5                   	// #5
  415ce0:	mov	x0, xzr
  415ce4:	mov	x1, x20
  415ce8:	bl	406e50 <dcgettext@plt>
  415cec:	ldr	x1, [x28]
  415cf0:	bl	406ef0 <printf@plt>
  415cf4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415cf8:	ldr	x0, [x8, #2512]
  415cfc:	bl	406d80 <fflush@plt>
  415d00:	ldr	x8, [x21]
  415d04:	cbz	x27, 415d10 <main@@Base+0x1224>
  415d08:	str	x8, [x27]
  415d0c:	b	415d14 <main@@Base+0x1228>
  415d10:	mov	x26, x8
  415d14:	mov	x0, x21
  415d18:	adrp	x28, 43c000 <memcpy@GLIBC_2.17>
  415d1c:	bl	406cf0 <free@plt>
  415d20:	mov	x21, x26
  415d24:	cbnz	x27, 415cc4 <main@@Base+0x11d8>
  415d28:	b	415cc8 <main@@Base+0x11dc>
  415d2c:	mov	w0, #0x1                   	// #1
  415d30:	mov	w1, #0x1                   	// #1
  415d34:	mov	w21, #0x1                   	// #1
  415d38:	bl	416e5c <die@@Base+0x174>
  415d3c:	ldr	w20, [x28, #3236]
  415d40:	tbnz	w20, #8, 415d48 <main@@Base+0x125c>
  415d44:	str	wzr, [x28, #3236]
  415d48:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  415d4c:	mov	x0, x26
  415d50:	str	w21, [x24, #3300]
  415d54:	bl	41d99c <update_goal_chain@@Base>
  415d58:	ldr	x27, [x19, #32]
  415d5c:	str	wzr, [x24, #3300]
  415d60:	str	w20, [x28, #3236]
  415d64:	cbz	w0, 416024 <main@@Base+0x1538>
  415d68:	cmp	w0, #0x3
  415d6c:	mov	w24, wzr
  415d70:	b.ne	415f30 <main@@Base+0x1444>  // b.any
  415d74:	cbnz	x26, 415da8 <main@@Base+0x12bc>
  415d78:	mov	w21, wzr
  415d7c:	mov	w10, wzr
  415d80:	mov	w24, wzr
  415d84:	b	415f28 <main@@Base+0x143c>
  415d88:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415d8c:	add	x1, x1, #0x7ea
  415d90:	b	416384 <main@@Base+0x1898>
  415d94:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415d98:	add	x1, x1, #0x82d
  415d9c:	mov	w2, #0x5                   	// #5
  415da0:	bl	406e50 <dcgettext@plt>
  415da4:	bl	4184d0 <pfatal_with_name@@Base>
  415da8:	mov	w24, wzr
  415dac:	mov	w20, wzr
  415db0:	mov	w10, wzr
  415db4:	mov	w21, wzr
  415db8:	ldr	x0, [x26, #16]
  415dbc:	ldr	w8, [x0, #136]
  415dc0:	tbnz	w8, #10, 415e24 <main@@Base+0x1338>
  415dc4:	ldrh	w27, [x26, #32]
  415dc8:	tbnz	w27, #2, 415e5c <main@@Base+0x1370>
  415dcc:	stp	w21, w10, [x19, #16]
  415dd0:	ldr	x21, [x26, #8]
  415dd4:	cbnz	x21, 415ddc <main@@Base+0x12f0>
  415dd8:	ldr	x21, [x0]
  415ddc:	mov	x0, x21
  415de0:	bl	4067d0 <strlen@plt>
  415de4:	str	x0, [x19, #8]
  415de8:	mov	w2, #0x5                   	// #5
  415dec:	mov	x0, xzr
  415df0:	tbnz	w27, #1, 415ed8 <main@@Base+0x13ec>
  415df4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415df8:	add	x1, x1, #0x96c
  415dfc:	bl	406e50 <dcgettext@plt>
  415e00:	ldr	x1, [x19, #8]
  415e04:	mov	x2, x0
  415e08:	mov	x0, xzr
  415e0c:	mov	x3, x21
  415e10:	bl	418f84 <error@@Base>
  415e14:	ldr	x27, [x19, #32]
  415e18:	ldr	w21, [x19, #16]
  415e1c:	mov	w10, #0x1                   	// #1
  415e20:	b	415f1c <main@@Base+0x1430>
  415e24:	tst	w8, #0x3
  415e28:	b.ne	415e64 <main@@Base+0x1378>  // b.any
  415e2c:	ldr	x8, [x0, #112]
  415e30:	cbnz	x8, 415e48 <main@@Base+0x135c>
  415e34:	mov	w1, wzr
  415e38:	str	w10, [x19, #20]
  415e3c:	bl	41dec8 <f_mtime@@Base>
  415e40:	ldr	w10, [x19, #20]
  415e44:	mov	x8, x0
  415e48:	ldr	x9, [x22, w20, uxtw #3]
  415e4c:	cmp	x8, x9
  415e50:	cset	w8, ne  // ne = any
  415e54:	orr	w21, w21, w8
  415e58:	b	415f1c <main@@Base+0x1430>
  415e5c:	ldr	x27, [x19, #32]
  415e60:	b	415f1c <main@@Base+0x1430>
  415e64:	ldrb	w8, [x26, #32]
  415e68:	tbnz	w8, #2, 415f1c <main@@Base+0x1430>
  415e6c:	ldr	x0, [x0]
  415e70:	str	w10, [x19, #20]
  415e74:	mov	w24, w21
  415e78:	bl	4067d0 <strlen@plt>
  415e7c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415e80:	mov	x21, x0
  415e84:	mov	w2, #0x5                   	// #5
  415e88:	mov	x0, xzr
  415e8c:	add	x1, x1, #0x926
  415e90:	bl	406e50 <dcgettext@plt>
  415e94:	ldr	x8, [x26, #16]
  415e98:	mov	x2, x0
  415e9c:	mov	x0, xzr
  415ea0:	mov	x1, x21
  415ea4:	ldr	x3, [x8]
  415ea8:	bl	418f84 <error@@Base>
  415eac:	ldr	x8, [x26, #16]
  415eb0:	ldr	x0, [x8, #112]
  415eb4:	cbnz	x0, 415ec4 <main@@Base+0x13d8>
  415eb8:	mov	x0, x8
  415ebc:	mov	w1, wzr
  415ec0:	bl	41dec8 <f_mtime@@Base>
  415ec4:	cmp	x0, #0x1
  415ec8:	mov	w21, w24
  415ecc:	b.ne	415f04 <main@@Base+0x1418>  // b.any
  415ed0:	mov	w8, wzr
  415ed4:	b	415f10 <main@@Base+0x1424>
  415ed8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415edc:	add	x1, x1, #0x946
  415ee0:	bl	406e50 <dcgettext@plt>
  415ee4:	ldr	x1, [x19, #8]
  415ee8:	mov	x2, x0
  415eec:	mov	x0, xzr
  415ef0:	mov	x3, x21
  415ef4:	bl	418f84 <error@@Base>
  415ef8:	ldr	x27, [x19, #32]
  415efc:	ldp	w21, w10, [x19, #16]
  415f00:	b	415f1c <main@@Base+0x1430>
  415f04:	ldr	x8, [x22, w20, uxtw #3]
  415f08:	cmp	x0, x8
  415f0c:	cset	w8, ne  // ne = any
  415f10:	ldr	w10, [x19, #20]
  415f14:	orr	w21, w21, w8
  415f18:	mov	w24, #0x2                   	// #2
  415f1c:	ldr	x26, [x26]
  415f20:	add	w20, w20, #0x1
  415f24:	cbnz	x26, 415db8 <main@@Base+0x12cc>
  415f28:	cbnz	w21, 416024 <main@@Base+0x1538>
  415f2c:	cbnz	w10, 416468 <main@@Base+0x197c>
  415f30:	mov	w0, #0x1                   	// #1
  415f34:	mov	w1, wzr
  415f38:	bl	416e5c <die@@Base+0x174>
  415f3c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  415f40:	ldr	w8, [x8, #3832]
  415f44:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  415f48:	str	w8, [x9, #3296]
  415f4c:	ldr	w8, [x19, #44]
  415f50:	cbz	w8, 415f80 <main@@Base+0x1494>
  415f54:	ldr	x8, [x25, #3912]
  415f58:	cbz	x8, 415f80 <main@@Base+0x1494>
  415f5c:	ldr	x8, [x8]
  415f60:	ldr	x0, [x8]
  415f64:	cbz	x0, 415f80 <main@@Base+0x1494>
  415f68:	add	x20, x8, #0x8
  415f6c:	mov	x21, #0xffffffffffffffff    	// #-1
  415f70:	bl	40a830 <enter_file@@Base>
  415f74:	stp	x21, x21, [x0, #112]
  415f78:	ldr	x0, [x20], #8
  415f7c:	cbnz	x0, 415f70 <main@@Base+0x1484>
  415f80:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  415f84:	ldr	x0, [x20, #3824]
  415f88:	cbz	x0, 415fc0 <main@@Base+0x14d4>
  415f8c:	bl	406f50 <unlink@plt>
  415f90:	tbz	w0, #31, 415fc0 <main@@Base+0x14d4>
  415f94:	bl	406f00 <__errno_location@plt>
  415f98:	ldr	w8, [x0]
  415f9c:	cmp	w8, #0x2
  415fa0:	b.eq	415fc0 <main@@Base+0x14d4>  // b.none
  415fa4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  415fa8:	add	x1, x1, #0xa02
  415fac:	mov	w2, #0x5                   	// #5
  415fb0:	mov	x0, xzr
  415fb4:	bl	406e50 <dcgettext@plt>
  415fb8:	ldr	x1, [x20, #3824]
  415fbc:	bl	41928c <perror_with_name@@Base>
  415fc0:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  415fc4:	ldr	x8, [x22, #3920]
  415fc8:	cbnz	x8, 416014 <main@@Base+0x1528>
  415fcc:	adrp	x8, 440000 <shell_var@@Base+0x18>
  415fd0:	ldr	x8, [x8, #56]
  415fd4:	ldrb	w9, [x8, #44]
  415fd8:	tbnz	w9, #0, 4162d4 <main@@Base+0x17e8>
  415fdc:	ldr	x21, [x8, #8]
  415fe0:	adrp	x23, 43f000 <stdio_traced@@Base+0x1a38>
  415fe4:	ldr	x20, [x23, #4048]
  415fe8:	mov	x0, x21
  415fec:	bl	4067d0 <strlen@plt>
  415ff0:	mov	x2, x0
  415ff4:	mov	x0, x20
  415ff8:	mov	x1, x21
  415ffc:	bl	409c78 <variable_buffer_output@@Base>
  416000:	str	x0, [x19, #48]
  416004:	strb	wzr, [x0]
  416008:	ldr	x8, [x23, #4048]
  41600c:	str	x8, [x19, #48]
  416010:	b	4162e0 <main@@Base+0x17f4>
  416014:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416018:	ldr	x8, [x8, #3928]
  41601c:	str	xzr, [x8]
  416020:	b	416350 <main@@Base+0x1864>
  416024:	mov	w0, wzr
  416028:	bl	40ad20 <remove_intermediates@@Base>
  41602c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416030:	ldr	w8, [x8, #3256]
  416034:	cbz	w8, 41603c <main@@Base+0x1550>
  416038:	bl	41743c <die@@Base+0x754>
  41603c:	mov	w0, wzr
  416040:	bl	4174e8 <die@@Base+0x800>
  416044:	ldr	x8, [x23, #3880]
  416048:	cbz	x8, 4160cc <main@@Base+0x15e0>
  41604c:	ldr	x8, [x19, #24]
  416050:	cmp	w8, #0x2
  416054:	b.lt	4160cc <main@@Base+0x15e0>  // b.tstop
  416058:	adrp	x21, 425000 <_IO_stdin_used@@Base+0xe0>
  41605c:	mov	w20, wzr
  416060:	mov	w24, #0x1                   	// #1
  416064:	add	x21, x21, #0xa16
  416068:	ldr	x22, [x27, w24, sxtw #3]
  41606c:	mov	w2, #0x2                   	// #2
  416070:	mov	x1, x21
  416074:	mov	x0, x22
  416078:	bl	406a70 <strncmp@plt>
  41607c:	cbnz	w0, 4160bc <main@@Base+0x15d0>
  416080:	ldr	x8, [x23, #3880]
  416084:	ldrb	w9, [x22, #2]
  416088:	sxtw	x22, w24
  41608c:	ldr	x8, [x8]
  416090:	ldr	x2, [x8, w20, sxtw #3]
  416094:	cbnz	w9, 4160a4 <main@@Base+0x15b8>
  416098:	add	x24, x22, #0x1
  41609c:	str	x2, [x27, x24, lsl #3]
  4160a0:	b	4160b8 <main@@Base+0x15cc>
  4160a4:	mov	w0, #0x2                   	// #2
  4160a8:	mov	x1, x21
  4160ac:	bl	417eb4 <concat@@Base>
  4160b0:	bl	4180bc <xstrdup@@Base>
  4160b4:	str	x0, [x27, x22, lsl #3]
  4160b8:	add	w20, w20, #0x1
  4160bc:	ldr	x8, [x19, #24]
  4160c0:	add	w24, w24, #0x1
  4160c4:	cmp	w24, w8
  4160c8:	b.lt	416068 <main@@Base+0x157c>  // b.tstop
  4160cc:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  4160d0:	ldr	x8, [x21, #3824]
  4160d4:	cbz	x8, 416124 <main@@Base+0x1638>
  4160d8:	ldr	x20, [x19, #24]
  4160dc:	add	w8, w20, #0x2
  4160e0:	sbfiz	x0, x8, #3, #32
  4160e4:	bl	418070 <xmalloc@@Base>
  4160e8:	sbfiz	x22, x20, #3, #32
  4160ec:	mov	x1, x27
  4160f0:	mov	x2, x22
  4160f4:	mov	x23, x21
  4160f8:	mov	x21, x0
  4160fc:	bl	406790 <memcpy@plt>
  416100:	ldr	x2, [x23, #3824]
  416104:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416108:	add	x1, x1, #0x988
  41610c:	mov	w0, #0x2                   	// #2
  416110:	bl	417eb4 <concat@@Base>
  416114:	bl	4180bc <xstrdup@@Base>
  416118:	add	x8, x21, x22
  41611c:	mov	x27, x21
  416120:	stp	x0, xzr, [x8]
  416124:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416128:	ldr	x8, [x8, #3856]
  41612c:	cbz	x8, 416138 <main@@Base+0x164c>
  416130:	ldr	w8, [x8, #8]
  416134:	cbnz	w8, 416428 <main@@Base+0x193c>
  416138:	ldr	w9, [x19, #44]
  41613c:	ldrb	w8, [x28, #3236]
  416140:	add	w21, w9, #0x1
  416144:	tbz	w8, #0, 41619c <main@@Base+0x16b0>
  416148:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  41614c:	add	x1, x1, #0x9bd
  416150:	mov	w2, #0x5                   	// #5
  416154:	mov	x0, xzr
  416158:	bl	406e50 <dcgettext@plt>
  41615c:	mov	w1, w21
  416160:	bl	406ef0 <printf@plt>
  416164:	ldr	x1, [x27]
  416168:	cbz	x1, 416188 <main@@Base+0x169c>
  41616c:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x20e0>
  416170:	add	x20, x27, #0x8
  416174:	add	x22, x22, #0xb95
  416178:	mov	x0, x22
  41617c:	bl	406ef0 <printf@plt>
  416180:	ldr	x1, [x20], #8
  416184:	cbnz	x1, 416178 <main@@Base+0x168c>
  416188:	mov	w0, #0xa                   	// #10
  41618c:	bl	406f20 <putchar@plt>
  416190:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416194:	ldr	x0, [x8, #2512]
  416198:	bl	406d80 <fflush@plt>
  41619c:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4161a0:	ldr	x25, [x20, #2528]
  4161a4:	ldr	x28, [x25]
  4161a8:	cbz	x28, 416260 <main@@Base+0x1774>
  4161ac:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x30e0>
  4161b0:	adrp	x23, 428000 <_IO_stdin_used@@Base+0x30e0>
  4161b4:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x30e0>
  4161b8:	adrp	x26, 428000 <_IO_stdin_used@@Base+0x30e0>
  4161bc:	add	x22, x22, #0x9cf
  4161c0:	add	x23, x23, #0x9da
  4161c4:	add	x24, x24, #0x6f2
  4161c8:	add	x26, x26, #0x9e0
  4161cc:	mov	w2, #0xa                   	// #10
  4161d0:	mov	x0, x28
  4161d4:	mov	x1, x22
  4161d8:	bl	406a70 <strncmp@plt>
  4161dc:	cbnz	w0, 416204 <main@@Base+0x1718>
  4161e0:	sub	x0, sp, #0x30
  4161e4:	mov	sp, x0
  4161e8:	str	x0, [x25]
  4161ec:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4161f0:	ldr	w3, [x8, #64]
  4161f4:	mov	x1, x23
  4161f8:	mov	x2, x24
  4161fc:	bl	406870 <sprintf@plt>
  416200:	b	416258 <main@@Base+0x176c>
  416204:	mov	w2, #0xe                   	// #14
  416208:	mov	x0, x28
  41620c:	mov	x1, x26
  416210:	bl	406a70 <strncmp@plt>
  416214:	cbnz	w0, 416258 <main@@Base+0x176c>
  416218:	sub	x0, sp, #0x30
  41621c:	mov	sp, x0
  416220:	str	x0, [x25]
  416224:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  416228:	ldr	w8, [x8, #1480]
  41622c:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x30e0>
  416230:	add	x9, x9, #0x7b8
  416234:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416238:	cmp	w8, #0x0
  41623c:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  416240:	add	x8, x8, #0x989
  416244:	csel	x2, x8, x9, eq  // eq = none
  416248:	add	x1, x1, #0x9ef
  41624c:	mov	w3, w21
  416250:	bl	406870 <sprintf@plt>
  416254:	mov	w21, wzr
  416258:	ldr	x28, [x25, #8]!
  41625c:	cbnz	x28, 4161cc <main@@Base+0x16e0>
  416260:	cbz	w21, 4162a8 <main@@Base+0x17bc>
  416264:	sub	x22, sp, #0x30
  416268:	mov	sp, x22
  41626c:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  416270:	ldr	w8, [x8, #1480]
  416274:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x30e0>
  416278:	add	x9, x9, #0x7b8
  41627c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416280:	cmp	w8, #0x0
  416284:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  416288:	add	x8, x8, #0x989
  41628c:	csel	x2, x8, x9, eq  // eq = none
  416290:	add	x1, x1, #0x9ef
  416294:	mov	x0, x22
  416298:	mov	w3, w21
  41629c:	bl	406870 <sprintf@plt>
  4162a0:	mov	x0, x22
  4162a4:	bl	406b60 <putenv@plt>
  4162a8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4162ac:	ldr	x0, [x8, #2512]
  4162b0:	bl	406d80 <fflush@plt>
  4162b4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4162b8:	ldr	x0, [x8, #2488]
  4162bc:	bl	406d80 <fflush@plt>
  4162c0:	mov	w0, #0x1                   	// #1
  4162c4:	bl	42449c <jobserver_pre_child@@Base>
  4162c8:	ldr	x1, [x20, #2528]
  4162cc:	mov	x0, x27
  4162d0:	bl	413738 <exec_command@@Base>
  4162d4:	ldr	x0, [x8, #8]
  4162d8:	bl	40a57c <variable_expand@@Base>
  4162dc:	str	x0, [x19, #48]
  4162e0:	ldr	x0, [x19, #48]
  4162e4:	ldrb	w8, [x0]
  4162e8:	cbz	w8, 416350 <main@@Base+0x1864>
  4162ec:	bl	40a798 <lookup_file@@Base>
  4162f0:	mov	x20, x0
  4162f4:	cbnz	x0, 41633c <main@@Base+0x1850>
  4162f8:	add	x0, x19, #0x30
  4162fc:	mov	w1, #0x10                  	// #16
  416300:	mov	w2, #0x1                   	// #1
  416304:	mov	x3, xzr
  416308:	mov	w4, wzr
  41630c:	bl	41b484 <parse_file_seq@@Base>
  416310:	cbz	x0, 41633c <main@@Base+0x1850>
  416314:	ldr	x8, [x0]
  416318:	mov	x21, x0
  41631c:	cbnz	x8, 416470 <main@@Base+0x1984>
  416320:	ldr	x0, [x21, #8]
  416324:	bl	420f28 <strcache_add@@Base>
  416328:	bl	40a830 <enter_file@@Base>
  41632c:	mov	x20, x0
  416330:	mov	x0, x21
  416334:	str	xzr, [x21, #8]
  416338:	bl	418388 <free_ns_chain@@Base>
  41633c:	cbz	x20, 416350 <main@@Base+0x1864>
  416340:	mov	w0, #0x40                  	// #64
  416344:	bl	418094 <xcalloc@@Base>
  416348:	str	x0, [x22, #3920]
  41634c:	str	x20, [x0, #16]
  416350:	ldr	x8, [x22, #3920]
  416354:	cbnz	x8, 4163a0 <main@@Base+0x18b4>
  416358:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41635c:	add	x0, x0, #0xa48
  416360:	mov	w1, #0xd                   	// #13
  416364:	bl	421ac8 <lookup_variable@@Base>
  416368:	cbz	x0, 41637c <main@@Base+0x1890>
  41636c:	ldr	x8, [x0, #8]
  416370:	cbz	x8, 41637c <main@@Base+0x1890>
  416374:	ldrb	w8, [x8]
  416378:	cbnz	w8, 41645c <main@@Base+0x1970>
  41637c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416380:	add	x1, x1, #0xa61
  416384:	mov	w2, #0x5                   	// #5
  416388:	mov	x0, xzr
  41638c:	bl	406e50 <dcgettext@plt>
  416390:	mov	x2, x0
  416394:	mov	x0, xzr
  416398:	mov	x1, xzr
  41639c:	bl	4190fc <fatal@@Base>
  4163a0:	ldrb	w8, [x28, #3236]
  4163a4:	tbz	w8, #0, 4163cc <main@@Base+0x18e0>
  4163a8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4163ac:	add	x1, x1, #0xa8c
  4163b0:	mov	w2, #0x5                   	// #5
  4163b4:	mov	x0, xzr
  4163b8:	bl	406e50 <dcgettext@plt>
  4163bc:	bl	406ef0 <printf@plt>
  4163c0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4163c4:	ldr	x0, [x8, #2512]
  4163c8:	bl	406d80 <fflush@plt>
  4163cc:	ldr	x0, [x22, #3920]
  4163d0:	bl	41d99c <update_goal_chain@@Base>
  4163d4:	cmp	w0, #0x3
  4163d8:	b.eq	4163ec <main@@Base+0x1900>  // b.none
  4163dc:	cmp	w0, #0x2
  4163e0:	b.ne	4163f0 <main@@Base+0x1904>  // b.any
  4163e4:	mov	w24, #0x1                   	// #1
  4163e8:	b	4163f0 <main@@Base+0x1904>
  4163ec:	mov	w24, #0x2                   	// #2
  4163f0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4163f4:	ldr	w8, [x8, #232]
  4163f8:	cbz	w8, 416420 <main@@Base+0x1934>
  4163fc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416400:	add	x1, x1, #0xaa7
  416404:	mov	w2, #0x5                   	// #5
  416408:	mov	x0, xzr
  41640c:	bl	406e50 <dcgettext@plt>
  416410:	mov	x2, x0
  416414:	mov	x0, xzr
  416418:	mov	x1, xzr
  41641c:	bl	418f84 <error@@Base>
  416420:	mov	w0, w24
  416424:	bl	416ce8 <die@@Base>
  416428:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41642c:	ldr	x0, [x8, #4056]
  416430:	cbz	x0, 416450 <main@@Base+0x1964>
  416434:	bl	406ce0 <chdir@plt>
  416438:	tbz	w0, #31, 416138 <main@@Base+0x164c>
  41643c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  416440:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  416444:	add	x0, x0, #0x98b
  416448:	add	x1, x1, #0x989
  41644c:	bl	41928c <perror_with_name@@Base>
  416450:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416454:	add	x1, x1, #0x991
  416458:	b	416384 <main@@Base+0x1898>
  41645c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416460:	add	x1, x1, #0xa56
  416464:	b	416384 <main@@Base+0x1898>
  416468:	mov	w0, #0x2                   	// #2
  41646c:	bl	416ce8 <die@@Base>
  416470:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416474:	add	x1, x1, #0xa1c
  416478:	b	416384 <main@@Base+0x1898>
  41647c:	mov	x0, x21
  416480:	bl	4184d0 <pfatal_with_name@@Base>
  416484:	bl	416bd8 <main@@Base+0x20ec>
  416488:	mov	w0, wzr
  41648c:	bl	416ce8 <die@@Base>
  416490:	stp	x29, x30, [sp, #-48]!
  416494:	stp	x20, x19, [sp, #32]
  416498:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  41649c:	mov	w8, #0x8                   	// #8
  4164a0:	add	x19, x19, #0xcf0
  4164a4:	movk	w8, #0x4000, lsl #16
  4164a8:	stur	w8, [x19, #70]
  4164ac:	mov	w8, #0x20                  	// #32
  4164b0:	strh	w8, [x19, #122]
  4164b4:	mov	w8, #0x40                  	// #64
  4164b8:	movk	w8, #0x10, lsl #16
  4164bc:	str	w8, [x19, #116]
  4164c0:	mov	x8, #0x400                 	// #1024
  4164c4:	movk	x8, #0x2000, lsl #16
  4164c8:	movk	x8, #0x2200, lsl #32
  4164cc:	movk	x8, #0x8000, lsl #48
  4164d0:	str	x8, [x19, #88]
  4164d4:	mov	w8, #0x800080              	// #8388736
  4164d8:	str	w8, [x19, #80]
  4164dc:	mov	w8, #0x80                  	// #128
  4164e0:	movk	w8, #0x100, lsl #16
  4164e4:	stur	w8, [x19, #246]
  4164e8:	mov	w8, #0x80                  	// #128
  4164ec:	str	x21, [sp, #16]
  4164f0:	mov	w20, #0x1                   	// #1
  4164f4:	strh	w8, [x19, #250]
  4164f8:	mov	w8, #0x2000                	// #8192
  4164fc:	mov	w21, #0x2                   	// #2
  416500:	mov	x29, sp
  416504:	strh	w8, [x19, #190]
  416508:	strh	w20, [x19]
  41650c:	strh	w21, [x19, #64]
  416510:	strh	w21, [x19, #18]
  416514:	bl	406cc0 <__ctype_b_loc@plt>
  416518:	ldr	x8, [x0]
  41651c:	b	41653c <main@@Base+0x1a50>
  416520:	add	x9, x19, x20, lsl #1
  416524:	orr	w10, w10, #0x4
  416528:	strh	w10, [x9]
  41652c:	add	x21, x21, #0x2
  416530:	cmp	x21, #0x200
  416534:	add	x20, x20, #0x1
  416538:	b.eq	416560 <main@@Base+0x1a74>  // b.none
  41653c:	ldrh	w9, [x8, x21]
  416540:	tbz	w9, #13, 41654c <main@@Base+0x1a60>
  416544:	ldrh	w10, [x19, x21]
  416548:	tbz	w10, #1, 416520 <main@@Base+0x1a34>
  41654c:	tbz	w9, #3, 41652c <main@@Base+0x1a40>
  416550:	add	x9, x19, x21
  416554:	ldrh	w10, [x9]
  416558:	orr	w10, w10, #0x2000
  41655c:	b	416528 <main@@Base+0x1a3c>
  416560:	ldp	x20, x19, [sp, #32]
  416564:	ldr	x21, [sp, #16]
  416568:	ldp	x29, x30, [sp], #48
  41656c:	ret
  416570:	sub	sp, sp, #0x160
  416574:	add	x9, sp, #0x98
  416578:	stp	x20, x19, [sp, #336]
  41657c:	add	x20, x9, #0x8
  416580:	mov	w19, w0
  416584:	mov	w8, #0x10000000            	// #268435456
  416588:	mov	x0, x20
  41658c:	stp	x29, x30, [sp, #304]
  416590:	str	x28, [sp, #320]
  416594:	add	x29, sp, #0x130
  416598:	str	x1, [sp, #152]
  41659c:	str	w8, [sp, #288]
  4165a0:	bl	406a50 <sigemptyset@plt>
  4165a4:	mov	x0, x20
  4165a8:	mov	w1, w19
  4165ac:	bl	406ed0 <sigaddset@plt>
  4165b0:	add	x1, sp, #0x98
  4165b4:	mov	x2, sp
  4165b8:	mov	w0, w19
  4165bc:	bl	406bb0 <sigaction@plt>
  4165c0:	ldr	x8, [sp]
  4165c4:	ldp	x20, x19, [sp, #336]
  4165c8:	ldr	x28, [sp, #320]
  4165cc:	ldp	x29, x30, [sp, #304]
  4165d0:	cmp	w0, #0x0
  4165d4:	csinv	x0, x8, xzr, eq  // eq = none
  4165d8:	add	sp, sp, #0x160
  4165dc:	ret
  4165e0:	stp	x29, x30, [sp, #-16]!
  4165e4:	mov	x29, sp
  4165e8:	bl	421670 <init_hash_global_variable_set@@Base>
  4165ec:	bl	421060 <strcache_init@@Base>
  4165f0:	bl	40c55c <init_hash_files@@Base>
  4165f4:	bl	409b68 <hash_init_directories@@Base>
  4165f8:	bl	40d648 <hash_init_function_table@@Base>
  4165fc:	ldp	x29, x30, [sp], #16
  416600:	ret
  416604:	stp	x29, x30, [sp, #-48]!
  416608:	mov	x2, x1
  41660c:	add	x9, x2, #0x13
  416610:	mov	x8, sp
  416614:	and	x9, x9, #0xfffffffffffffff0
  416618:	stp	x20, x19, [sp, #32]
  41661c:	sub	x19, x8, x9
  416620:	add	x20, x2, x19
  416624:	stp	x22, x21, [sp, #16]
  416628:	mov	x29, sp
  41662c:	mov	x1, x0
  416630:	mov	sp, x19
  416634:	mov	w8, #0x2824                	// #10276
  416638:	mov	x0, x19
  41663c:	strh	w8, [x0], #2
  416640:	bl	406790 <memcpy@plt>
  416644:	mov	w8, #0x29                  	// #41
  416648:	mov	x0, x19
  41664c:	strh	w8, [x20, #2]
  416650:	bl	40a57c <variable_expand@@Base>
  416654:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  416658:	sub	x20, x0, #0x1
  41665c:	add	x21, x21, #0xcf0
  416660:	ldrb	w8, [x20, #1]!
  416664:	ldrh	w8, [x21, x8, lsl #1]
  416668:	tst	w8, #0x6
  41666c:	b.ne	416660 <main@@Base+0x1b74>  // b.any
  416670:	mov	x0, x20
  416674:	bl	4067d0 <strlen@plt>
  416678:	cbz	x0, 41674c <main@@Base+0x1c60>
  41667c:	lsl	x8, x0, #3
  416680:	add	x8, x8, #0x1f
  416684:	mov	x9, sp
  416688:	and	x8, x8, #0xfffffffffffffff0
  41668c:	sub	x19, x9, x8
  416690:	mov	sp, x19
  416694:	add	x9, x0, #0x11
  416698:	mov	x8, sp
  41669c:	and	x9, x9, #0xfffffffffffffff0
  4166a0:	sub	x22, x8, x9
  4166a4:	mov	sp, x22
  4166a8:	mov	w9, #0x2d                  	// #45
  4166ac:	mov	x8, x22
  4166b0:	strb	w9, [x8], #1
  4166b4:	mov	w9, #0x1                   	// #1
  4166b8:	stp	xzr, x8, [x19]
  4166bc:	b	4166d8 <main@@Base+0x1bec>
  4166c0:	mov	x11, x20
  4166c4:	ldrb	w12, [x11, #1]!
  4166c8:	cbz	w12, 4166ec <main@@Base+0x1c00>
  4166cc:	mov	x20, x11
  4166d0:	ldrb	w10, [x20], #1
  4166d4:	sturb	w10, [x8, #-1]
  4166d8:	ldrb	w10, [x20]
  4166dc:	add	x8, x8, #0x1
  4166e0:	cmp	w10, #0x5c
  4166e4:	b.eq	4166c0 <main@@Base+0x1bd4>  // b.none
  4166e8:	cbz	w10, 416710 <main@@Base+0x1c24>
  4166ec:	ldrh	w10, [x21, x10, lsl #1]
  4166f0:	tbz	w10, #1, 4166d0 <main@@Base+0x1be4>
  4166f4:	add	x9, x9, #0x1
  4166f8:	sturb	wzr, [x8, #-1]
  4166fc:	str	x8, [x19, x9, lsl #3]
  416700:	ldrb	w10, [x20, #1]!
  416704:	ldrh	w10, [x21, x10, lsl #1]
  416708:	tbnz	w10, #1, 416700 <main@@Base+0x1c14>
  41670c:	b	4166d8 <main@@Base+0x1bec>
  416710:	add	w20, w9, #0x1
  416714:	str	xzr, [x19, w20, uxtw #3]
  416718:	ldr	x0, [x19, #8]
  41671c:	sturb	wzr, [x8, #-1]
  416720:	ldrb	w8, [x0]
  416724:	cmp	w8, #0x2d
  416728:	b.eq	41673c <main@@Base+0x1c50>  // b.none
  41672c:	mov	w1, #0x3d                  	// #61
  416730:	bl	406d10 <strchr@plt>
  416734:	cbnz	x0, 41673c <main@@Base+0x1c50>
  416738:	str	x22, [x19, #8]
  41673c:	mov	w2, #0x1                   	// #1
  416740:	mov	w0, w20
  416744:	mov	x1, x19
  416748:	bl	416760 <main@@Base+0x1c74>
  41674c:	mov	sp, x29
  416750:	ldp	x20, x19, [sp, #32]
  416754:	ldp	x22, x21, [sp, #16]
  416758:	ldp	x29, x30, [sp], #48
  41675c:	ret
  416760:	sub	sp, sp, #0x70
  416764:	stp	x29, x30, [sp, #16]
  416768:	stp	x28, x27, [sp, #32]
  41676c:	stp	x26, x25, [sp, #48]
  416770:	stp	x24, x23, [sp, #64]
  416774:	stp	x22, x21, [sp, #80]
  416778:	stp	x20, x19, [sp, #96]
  41677c:	add	x29, sp, #0x10
  416780:	mov	w19, w2
  416784:	mov	x20, x1
  416788:	mov	w21, w0
  41678c:	bl	417588 <die@@Base+0x8a0>
  416790:	cmp	w19, #0x0
  416794:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  416798:	adrp	x23, 43c000 <memcpy@GLIBC_2.17>
  41679c:	adrp	x28, 427000 <_IO_stdin_used@@Base+0x20e0>
  4167a0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4167a4:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  4167a8:	add	x22, x22, #0xf64
  4167ac:	add	x23, x23, #0xfd8
  4167b0:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  4167b4:	add	x28, x28, #0xca0
  4167b8:	cset	w9, eq  // eq = none
  4167bc:	str	wzr, [sp, #8]
  4167c0:	str	w9, [x8, #2536]
  4167c4:	str	wzr, [x26, #2504]
  4167c8:	b	416804 <main@@Base+0x1d18>
  4167cc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4167d0:	mov	w2, #0x5                   	// #5
  4167d4:	mov	x0, xzr
  4167d8:	add	x1, x1, #0xb1f
  4167dc:	bl	406e50 <dcgettext@plt>
  4167e0:	ldr	w3, [x25]
  4167e4:	mov	x2, x0
  4167e8:	mov	x0, xzr
  4167ec:	mov	x1, xzr
  4167f0:	bl	418f84 <error@@Base>
  4167f4:	mov	w8, #0x1                   	// #1
  4167f8:	str	w8, [sp, #8]
  4167fc:	mov	w8, #0x1                   	// #1
  416800:	tbz	w8, #0, 416b60 <main@@Base+0x2074>
  416804:	ldr	w8, [x26, #2504]
  416808:	cmp	w8, w21
  41680c:	b.ge	416b60 <main@@Base+0x2074>  // b.tcont
  416810:	mov	w0, w21
  416814:	mov	x1, x20
  416818:	mov	x2, x22
  41681c:	mov	x3, x23
  416820:	mov	x4, xzr
  416824:	bl	406c90 <getopt_long@plt>
  416828:	cmn	w0, #0x1
  41682c:	b.eq	416870 <main@@Base+0x1d84>  // b.none
  416830:	ldr	x27, [x24, #2496]
  416834:	cmp	w0, #0x1
  416838:	b.eq	416860 <main@@Base+0x1d74>  // b.none
  41683c:	cmp	w0, #0x3f
  416840:	b.eq	4167f4 <main@@Base+0x1d08>  // b.none
  416844:	mov	w8, #0x62                  	// #98
  416848:	mov	x25, x28
  41684c:	cmp	w8, w0
  416850:	b.eq	41687c <main@@Base+0x1d90>  // b.none
  416854:	ldr	w8, [x25, #48]!
  416858:	cbnz	w8, 41684c <main@@Base+0x1d60>
  41685c:	b	4167fc <main@@Base+0x1d10>
  416860:	mov	x0, x27
  416864:	mov	w1, w19
  416868:	bl	4176b8 <die@@Base+0x9d0>
  41686c:	b	4167fc <main@@Base+0x1d10>
  416870:	mov	w8, wzr
  416874:	tbnz	wzr, #0, 416804 <main@@Base+0x1d18>
  416878:	b	416b60 <main@@Base+0x2074>
  41687c:	cbz	w19, 41688c <main@@Base+0x1da0>
  416880:	ldrb	w8, [x25, #16]
  416884:	and	w8, w8, #0x1
  416888:	b	416890 <main@@Base+0x1da4>
  41688c:	mov	w8, #0x1                   	// #1
  416890:	ldr	w9, [x25, #4]
  416894:	cmp	w9, #0x7
  416898:	b.hi	416bbc <main@@Base+0x20d0>  // b.pmore
  41689c:	adrp	x12, 427000 <_IO_stdin_used@@Base+0x20e0>
  4168a0:	add	x12, x12, #0xc78
  4168a4:	adr	x10, 4167fc <main@@Base+0x1d10>
  4168a8:	ldrb	w11, [x12, x9]
  4168ac:	add	x10, x10, x11, lsl #2
  4168b0:	br	x10
  4168b4:	cbz	w8, 4167fc <main@@Base+0x1d10>
  4168b8:	cbz	x27, 41696c <main@@Base+0x1e80>
  4168bc:	ldrb	w8, [x27]
  4168c0:	cbnz	w8, 416978 <main@@Base+0x1e8c>
  4168c4:	ldr	w8, [x25]
  4168c8:	mov	w9, #0x63                  	// #99
  4168cc:	sturh	w9, [x29, #-4]
  4168d0:	cmp	w8, #0xff
  4168d4:	b.gt	416ac4 <main@@Base+0x1fd8>
  4168d8:	sub	x28, x29, #0x4
  4168dc:	sturb	w8, [x29, #-4]
  4168e0:	b	416ac8 <main@@Base+0x1fdc>
  4168e4:	cbz	w8, 4167fc <main@@Base+0x1d10>
  4168e8:	ldr	x8, [x25, #8]
  4168ec:	cmp	w9, #0x0
  4168f0:	cset	w9, eq  // eq = none
  4168f4:	str	w9, [x8]
  4168f8:	b	4167fc <main@@Base+0x1d10>
  4168fc:	cbnz	x27, 416a4c <main@@Base+0x1f60>
  416900:	ldrsw	x9, [x26, #2504]
  416904:	cmp	w9, w21
  416908:	b.ge	416a48 <main@@Base+0x1f5c>  // b.tcont
  41690c:	ldr	x27, [x20, x9, lsl #3]
  416910:	ldrb	w10, [x27]
  416914:	cmp	w10, #0x2e
  416918:	b.eq	416b2c <main@@Base+0x2040>  // b.none
  41691c:	sub	w10, w10, #0x30
  416920:	cmp	w10, #0x9
  416924:	b.ls	416b2c <main@@Base+0x2040>  // b.plast
  416928:	mov	x27, xzr
  41692c:	cbz	w8, 4167fc <main@@Base+0x1d10>
  416930:	b	416a50 <main@@Base+0x1f64>
  416934:	cbnz	x27, 416a78 <main@@Base+0x1f8c>
  416938:	ldrsw	x9, [x26, #2504]
  41693c:	cmp	w9, w21
  416940:	b.ge	416a74 <main@@Base+0x1f88>  // b.tcont
  416944:	ldr	x27, [x20, x9, lsl #3]
  416948:	mov	x10, x27
  41694c:	ldrb	w11, [x10], #1
  416950:	sub	w12, w11, #0x30
  416954:	cmp	w12, #0xa
  416958:	b.cc	41694c <main@@Base+0x1e60>  // b.lo, b.ul, b.last
  41695c:	cbz	w11, 416b3c <main@@Base+0x2050>
  416960:	mov	x27, xzr
  416964:	cbz	w8, 4167fc <main@@Base+0x1d10>
  416968:	b	416a7c <main@@Base+0x1f90>
  41696c:	ldr	x0, [x25, #24]
  416970:	bl	4180bc <xstrdup@@Base>
  416974:	mov	x27, x0
  416978:	ldr	w8, [x25, #4]
  41697c:	cmp	w8, #0x2
  416980:	b.ne	4169a0 <main@@Base+0x1eb4>  // b.any
  416984:	ldr	x25, [x25, #8]
  416988:	ldr	x0, [x25]
  41698c:	bl	406cf0 <free@plt>
  416990:	mov	x0, x27
  416994:	bl	4180bc <xstrdup@@Base>
  416998:	str	x0, [x25]
  41699c:	b	4167fc <main@@Base+0x1d10>
  4169a0:	ldr	x8, [x25, #8]
  4169a4:	ldr	x28, [x8]
  4169a8:	cbz	x28, 4169d8 <main@@Base+0x1eec>
  4169ac:	ldp	w9, w8, [x28, #8]
  4169b0:	sub	w10, w8, #0x1
  4169b4:	cmp	w9, w10
  4169b8:	b.ne	416a00 <main@@Base+0x1f14>  // b.any
  4169bc:	ldr	x0, [x28]
  4169c0:	add	w8, w8, #0x5
  4169c4:	lsl	x1, x8, #3
  4169c8:	str	w8, [x28, #12]
  4169cc:	bl	41803c <xrealloc@@Base>
  4169d0:	str	x0, [x28]
  4169d4:	b	416a00 <main@@Base+0x1f14>
  4169d8:	mov	w0, #0x10                  	// #16
  4169dc:	bl	418070 <xmalloc@@Base>
  4169e0:	mov	x8, #0x500000000           	// #21474836480
  4169e4:	mov	x28, x0
  4169e8:	str	x8, [x0, #8]
  4169ec:	mov	w0, #0x28                  	// #40
  4169f0:	bl	418070 <xmalloc@@Base>
  4169f4:	str	x0, [x28]
  4169f8:	ldr	x8, [x25, #8]
  4169fc:	str	x28, [x8]
  416a00:	ldr	w8, [x25, #4]
  416a04:	mov	x0, x27
  416a08:	cmp	w8, #0x4
  416a0c:	b.ne	416a18 <main@@Base+0x1f2c>  // b.any
  416a10:	bl	417858 <die@@Base+0xb70>
  416a14:	b	416a1c <main@@Base+0x1f30>
  416a18:	bl	4180bc <xstrdup@@Base>
  416a1c:	ldr	w8, [x28, #8]
  416a20:	ldr	x9, [x28]
  416a24:	add	w10, w8, #0x1
  416a28:	str	w10, [x28, #8]
  416a2c:	str	x0, [x9, x8, lsl #3]
  416a30:	ldr	x8, [x28]
  416a34:	ldr	w9, [x28, #8]
  416a38:	adrp	x28, 427000 <_IO_stdin_used@@Base+0x20e0>
  416a3c:	add	x28, x28, #0xca0
  416a40:	str	xzr, [x8, x9, lsl #3]
  416a44:	b	4167fc <main@@Base+0x1d10>
  416a48:	mov	x27, xzr
  416a4c:	cbz	w8, 4167fc <main@@Base+0x1d10>
  416a50:	cbz	x27, 416a60 <main@@Base+0x1f74>
  416a54:	mov	x0, x27
  416a58:	bl	406b00 <atof@plt>
  416a5c:	b	416a68 <main@@Base+0x1f7c>
  416a60:	ldr	x8, [x25, #24]
  416a64:	ldr	d0, [x8]
  416a68:	ldr	x8, [x25, #8]
  416a6c:	str	d0, [x8]
  416a70:	b	4167fc <main@@Base+0x1d10>
  416a74:	mov	x27, xzr
  416a78:	cbz	w8, 4167fc <main@@Base+0x1d10>
  416a7c:	cbz	x27, 416ab0 <main@@Base+0x1fc4>
  416a80:	mov	x0, x27
  416a84:	bl	4069d0 <atoi@plt>
  416a88:	ldrb	w8, [x27], #1
  416a8c:	sub	w9, w8, #0x30
  416a90:	cmp	w9, #0xa
  416a94:	b.cc	416a88 <main@@Base+0x1f9c>  // b.lo, b.ul, b.last
  416a98:	cmp	w0, #0x1
  416a9c:	b.lt	4167cc <main@@Base+0x1ce0>  // b.tstop
  416aa0:	cbnz	w8, 4167cc <main@@Base+0x1ce0>
  416aa4:	ldr	x8, [x25, #8]
  416aa8:	str	w0, [x8]
  416aac:	b	4167fc <main@@Base+0x1d10>
  416ab0:	ldr	x8, [x25, #24]
  416ab4:	ldr	x9, [x25, #8]
  416ab8:	ldr	w8, [x8]
  416abc:	str	w8, [x9]
  416ac0:	b	4167fc <main@@Base+0x1d10>
  416ac4:	ldr	x28, [x25, #40]
  416ac8:	mov	x0, x28
  416acc:	bl	4067d0 <strlen@plt>
  416ad0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  416ad4:	mov	x27, x0
  416ad8:	mov	w2, #0x5                   	// #5
  416adc:	mov	x0, xzr
  416ae0:	add	x1, x1, #0xae5
  416ae4:	bl	406e50 <dcgettext@plt>
  416ae8:	ldr	w8, [x25]
  416aec:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x30e0>
  416af0:	add	x9, x9, #0x7b8
  416af4:	mov	x2, x0
  416af8:	cmp	w8, #0x100
  416afc:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  416b00:	add	x8, x8, #0xb1c
  416b04:	csel	x3, x9, x8, lt  // lt = tstop
  416b08:	mov	x0, xzr
  416b0c:	mov	x1, x27
  416b10:	mov	x4, x28
  416b14:	bl	418f84 <error@@Base>
  416b18:	mov	w8, #0x1                   	// #1
  416b1c:	adrp	x28, 427000 <_IO_stdin_used@@Base+0x20e0>
  416b20:	str	w8, [sp, #8]
  416b24:	add	x28, x28, #0xca0
  416b28:	b	4167fc <main@@Base+0x1d10>
  416b2c:	add	w9, w9, #0x1
  416b30:	str	w9, [x26, #2504]
  416b34:	cbz	w8, 4167fc <main@@Base+0x1d10>
  416b38:	b	416a50 <main@@Base+0x1f64>
  416b3c:	add	w9, w9, #0x1
  416b40:	str	w9, [x26, #2504]
  416b44:	cbz	w8, 4167fc <main@@Base+0x1d10>
  416b48:	b	416a7c <main@@Base+0x1f90>
  416b4c:	add	w9, w8, #0x1
  416b50:	str	w9, [x26, #2504]
  416b54:	ldr	x0, [x20, w8, sxtw #3]
  416b58:	mov	w1, w19
  416b5c:	bl	4176b8 <die@@Base+0x9d0>
  416b60:	ldr	w8, [x26, #2504]
  416b64:	cmp	w8, w21
  416b68:	b.lt	416b4c <main@@Base+0x2060>  // b.tstop
  416b6c:	cbnz	w19, 416b84 <main@@Base+0x2098>
  416b70:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  416b74:	ldr	w8, [x8, #1432]
  416b78:	ldr	w9, [sp, #8]
  416b7c:	orr	w8, w8, w9
  416b80:	cbnz	w8, 416bc0 <main@@Base+0x20d4>
  416b84:	bl	417a44 <die@@Base+0xd5c>
  416b88:	bl	417ba4 <die@@Base+0xebc>
  416b8c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416b90:	ldr	w8, [x8, #3864]
  416b94:	ldp	x20, x19, [sp, #96]
  416b98:	ldp	x22, x21, [sp, #80]
  416b9c:	ldp	x24, x23, [sp, #64]
  416ba0:	ldp	x26, x25, [sp, #48]
  416ba4:	ldp	x28, x27, [sp, #32]
  416ba8:	ldp	x29, x30, [sp, #16]
  416bac:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  416bb0:	str	w8, [x9, #3232]
  416bb4:	add	sp, sp, #0x70
  416bb8:	ret
  416bbc:	bl	406c10 <abort@plt>
  416bc0:	ldr	w0, [sp, #8]
  416bc4:	cmp	w0, #0x0
  416bc8:	cset	w19, ne  // ne = any
  416bcc:	bl	41791c <die@@Base+0xc34>
  416bd0:	lsl	w0, w19, #1
  416bd4:	bl	416ce8 <die@@Base>
  416bd8:	stp	x29, x30, [sp, #-48]!
  416bdc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416be0:	ldr	w8, [x8, #3256]
  416be4:	stp	x20, x19, [sp, #32]
  416be8:	adrp	x20, 43d000 <stopchar_map@@Base+0x310>
  416bec:	ldrb	w9, [x20, #1448]
  416bf0:	adrp	x10, 42a000 <_IO_stdin_used@@Base+0x50e0>
  416bf4:	adrp	x11, 427000 <_IO_stdin_used@@Base+0x20e0>
  416bf8:	add	x10, x10, #0xf8f
  416bfc:	add	x11, x11, #0x989
  416c00:	cmp	w8, #0x0
  416c04:	csel	x19, x11, x10, eq  // eq = none
  416c08:	str	x21, [sp, #16]
  416c0c:	mov	x29, sp
  416c10:	tbnz	w9, #0, 416cd8 <main@@Base+0x21ec>
  416c14:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416c18:	ldr	x2, [x8, #2448]
  416c1c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  416c20:	add	x0, x0, #0x85b
  416c24:	mov	x1, x19
  416c28:	bl	406ef0 <printf@plt>
  416c2c:	adrp	x21, 43f000 <stdio_traced@@Base+0x1a38>
  416c30:	ldr	x8, [x21, #4032]
  416c34:	cbz	x8, 416c6c <main@@Base+0x2180>
  416c38:	ldrb	w8, [x8]
  416c3c:	cbz	w8, 416c6c <main@@Base+0x2180>
  416c40:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  416c44:	add	x1, x1, #0x87a
  416c48:	mov	w2, #0x5                   	// #5
  416c4c:	mov	x0, xzr
  416c50:	bl	406e50 <dcgettext@plt>
  416c54:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416c58:	ldr	x2, [x8, #2456]
  416c5c:	ldr	x3, [x21, #4032]
  416c60:	mov	x1, x19
  416c64:	bl	406ef0 <printf@plt>
  416c68:	b	416c90 <main@@Base+0x21a4>
  416c6c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  416c70:	add	x1, x1, #0x86a
  416c74:	mov	w2, #0x5                   	// #5
  416c78:	mov	x0, xzr
  416c7c:	bl	406e50 <dcgettext@plt>
  416c80:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416c84:	ldr	x2, [x8, #2456]
  416c88:	mov	x1, x19
  416c8c:	bl	406ef0 <printf@plt>
  416c90:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  416c94:	add	x0, x0, #0x88f
  416c98:	mov	x1, x19
  416c9c:	bl	406ef0 <printf@plt>
  416ca0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  416ca4:	add	x1, x1, #0x8c9
  416ca8:	mov	w2, #0x5                   	// #5
  416cac:	mov	x0, xzr
  416cb0:	bl	406e50 <dcgettext@plt>
  416cb4:	mov	x1, x19
  416cb8:	mov	x2, x19
  416cbc:	mov	x3, x19
  416cc0:	bl	406ef0 <printf@plt>
  416cc4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416cc8:	ldr	x0, [x8, #2512]
  416ccc:	mov	w8, #0x1                   	// #1
  416cd0:	strb	w8, [x20, #1448]
  416cd4:	bl	406d80 <fflush@plt>
  416cd8:	ldp	x20, x19, [sp, #32]
  416cdc:	ldr	x21, [sp, #16]
  416ce0:	ldp	x29, x30, [sp], #48
  416ce4:	ret

0000000000416ce8 <die@@Base>:
  416ce8:	stp	x29, x30, [sp, #-48]!
  416cec:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416cf0:	ldrb	w9, [x8, #3936]
  416cf4:	stp	x20, x19, [sp, #32]
  416cf8:	mov	w19, w0
  416cfc:	str	x21, [sp, #16]
  416d00:	mov	x29, sp
  416d04:	tbnz	w9, #0, 416dc8 <die@@Base+0xe0>
  416d08:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  416d0c:	ldr	w9, [x9, #3284]
  416d10:	mov	w10, #0x1                   	// #1
  416d14:	strb	w10, [x8, #3936]
  416d18:	cbz	w9, 416d20 <die@@Base+0x38>
  416d1c:	bl	416bd8 <main@@Base+0x20ec>
  416d20:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  416d24:	ldr	w8, [x21, #3056]
  416d28:	cmp	w19, #0x0
  416d2c:	cset	w20, ne  // ne = any
  416d30:	cbz	w8, 416d48 <die@@Base+0x60>
  416d34:	mov	w0, #0x1                   	// #1
  416d38:	mov	w1, w20
  416d3c:	bl	411aac <reap_children@@Base>
  416d40:	ldr	w8, [x21, #3056]
  416d44:	cbnz	w8, 416d34 <die@@Base+0x4c>
  416d48:	bl	424768 <remote_cleanup@@Base>
  416d4c:	mov	w0, wzr
  416d50:	bl	40ad20 <remove_intermediates@@Base>
  416d54:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416d58:	ldr	w8, [x8, #3256]
  416d5c:	cbz	w8, 416d64 <die@@Base+0x7c>
  416d60:	bl	41743c <die@@Base+0x754>
  416d64:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  416d68:	ldr	w8, [x8, #4064]
  416d6c:	cbz	w8, 416d74 <die@@Base+0x8c>
  416d70:	bl	40c0e8 <verify_file_data_base@@Base>
  416d74:	mov	w0, w19
  416d78:	bl	4174e8 <die@@Base+0x800>
  416d7c:	adrp	x20, 43d000 <stopchar_map@@Base+0x310>
  416d80:	ldr	x0, [x20, #1472]
  416d84:	cbz	x0, 416db0 <die@@Base+0xc8>
  416d88:	bl	418b44 <output_close@@Base>
  416d8c:	ldr	x8, [x20, #1472]
  416d90:	adrp	x9, 440000 <shell_var@@Base+0x18>
  416d94:	add	x9, x9, #0x50
  416d98:	cmp	x8, x9
  416d9c:	b.eq	416dac <die@@Base+0xc4>  // b.none
  416da0:	adrp	x0, 440000 <shell_var@@Base+0x18>
  416da4:	add	x0, x0, #0x50
  416da8:	bl	418b44 <output_close@@Base>
  416dac:	str	xzr, [x20, #1472]
  416db0:	mov	x0, xzr
  416db4:	bl	418b44 <output_close@@Base>
  416db8:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  416dbc:	ldr	x0, [x8, #4056]
  416dc0:	cbz	x0, 416dc8 <die@@Base+0xe0>
  416dc4:	bl	406ce0 <chdir@plt>
  416dc8:	mov	w0, w19
  416dcc:	bl	4067f0 <exit@plt>
  416dd0:	stp	x29, x30, [sp, #-32]!
  416dd4:	str	x19, [sp, #16]
  416dd8:	mov	x29, sp
  416ddc:	bl	424320 <jobserver_clear@@Base>
  416de0:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  416de4:	ldr	x0, [x19, #3840]
  416de8:	bl	406cf0 <free@plt>
  416dec:	str	xzr, [x19, #3840]
  416df0:	ldr	x19, [sp, #16]
  416df4:	ldp	x29, x30, [sp], #32
  416df8:	ret
  416dfc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416e00:	add	x8, x8, #0xcf0
  416e04:	b	416e18 <die@@Base+0x130>
  416e08:	mov	w10, w9
  416e0c:	strb	w10, [x0], #1
  416e10:	ldrb	w9, [x1], #1
  416e14:	strb	w9, [x0], #1
  416e18:	ldrb	w9, [x1]
  416e1c:	cmp	w9, #0x24
  416e20:	b.eq	416e08 <die@@Base+0x120>  // b.none
  416e24:	cbz	w9, 416e40 <die@@Base+0x158>
  416e28:	cmp	w9, #0x5c
  416e2c:	mov	w10, #0x5c                  	// #92
  416e30:	b.eq	416e0c <die@@Base+0x124>  // b.none
  416e34:	ldrh	w9, [x8, x9, lsl #1]
  416e38:	tbz	w9, #1, 416e10 <die@@Base+0x128>
  416e3c:	b	416e0c <die@@Base+0x124>
  416e40:	ret
  416e44:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  416e48:	ldr	w9, [x8, #3236]
  416e4c:	cmp	w9, #0x0
  416e50:	cset	w9, eq  // eq = none
  416e54:	str	w9, [x8, #3236]
  416e58:	ret
  416e5c:	stp	x29, x30, [sp, #-96]!
  416e60:	stp	x28, x27, [sp, #16]
  416e64:	stp	x26, x25, [sp, #32]
  416e68:	stp	x24, x23, [sp, #48]
  416e6c:	stp	x22, x21, [sp, #64]
  416e70:	stp	x20, x19, [sp, #80]
  416e74:	mov	x29, sp
  416e78:	sub	sp, sp, #0x30
  416e7c:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  416e80:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x30e0>
  416e84:	add	x8, x8, #0x7ba
  416e88:	add	x9, x9, #0x7a2
  416e8c:	ldr	x10, [x8]
  416e90:	ldur	x8, [x8, #6]
  416e94:	ldr	q0, [x9]
  416e98:	ldr	x9, [x9, #16]
  416e9c:	adrp	x25, 427000 <_IO_stdin_used@@Base+0x20e0>
  416ea0:	mov	w20, w1
  416ea4:	mov	w19, w0
  416ea8:	mov	x28, xzr
  416eac:	mov	x22, xzr
  416eb0:	mov	x24, xzr
  416eb4:	add	x25, x25, #0xca0
  416eb8:	mov	w23, #0x62                  	// #98
  416ebc:	stur	x10, [x29, #-16]
  416ec0:	stur	x8, [x29, #-10]
  416ec4:	stur	q0, [x29, #-48]
  416ec8:	stur	x9, [x29, #-32]
  416ecc:	b	416ef0 <die@@Base+0x208>
  416ed0:	ldr	x0, [x25, #40]
  416ed4:	bl	4067d0 <strlen@plt>
  416ed8:	add	x8, x24, x0
  416edc:	add	x24, x8, #0x5
  416ee0:	mov	x22, x21
  416ee4:	mov	x28, x26
  416ee8:	ldr	w23, [x25, #48]!
  416eec:	cbz	w23, 4171c8 <die@@Base+0x4e0>
  416ef0:	ldrb	w8, [x25, #16]
  416ef4:	tbz	w8, #1, 416ee8 <die@@Base+0x200>
  416ef8:	cbz	w20, 416f00 <die@@Base+0x218>
  416efc:	tbnz	w8, #2, 416ee8 <die@@Base+0x200>
  416f00:	ldr	w8, [x25, #4]
  416f04:	cmp	w8, #0x7
  416f08:	b.hi	417438 <die@@Base+0x750>  // b.pmore
  416f0c:	adrp	x11, 427000 <_IO_stdin_used@@Base+0x20e0>
  416f10:	add	x11, x11, #0xc80
  416f14:	adr	x9, 416ee8 <die@@Base+0x200>
  416f18:	ldrb	w10, [x11, x8]
  416f1c:	add	x9, x9, x10, lsl #2
  416f20:	br	x9
  416f24:	ldr	x9, [x25, #8]
  416f28:	ldr	w9, [x9]
  416f2c:	cmp	w9, #0x0
  416f30:	cset	w10, ne  // ne = any
  416f34:	cmp	w8, #0x1
  416f38:	cset	w8, eq  // eq = none
  416f3c:	cmp	w8, w10
  416f40:	b.eq	416ee8 <die@@Base+0x200>  // b.none
  416f44:	ldr	x8, [x25, #32]
  416f48:	cbz	x8, 416f58 <die@@Base+0x270>
  416f4c:	ldr	w8, [x8]
  416f50:	cmp	w9, w8
  416f54:	b.eq	416ee8 <die@@Base+0x200>  // b.none
  416f58:	mov	x8, sp
  416f5c:	sub	x21, x8, #0x20
  416f60:	mov	sp, x21
  416f64:	stur	xzr, [x8, #-16]
  416f68:	b	41712c <die@@Base+0x444>
  416f6c:	cbz	w19, 416ee8 <die@@Base+0x200>
  416f70:	ldr	x8, [x25, #8]
  416f74:	ldr	x8, [x8]
  416f78:	cbz	x8, 416ee8 <die@@Base+0x200>
  416f7c:	ldr	w9, [x8, #8]
  416f80:	cbz	w9, 416ee8 <die@@Base+0x200>
  416f84:	ldr	x21, [x8]
  416f88:	ldr	w26, [x8, #8]
  416f8c:	mov	x27, xzr
  416f90:	mov	x8, x28
  416f94:	mov	x9, x22
  416f98:	b	416fb4 <die@@Base+0x2cc>
  416f9c:	add	x27, x27, #0x1
  416fa0:	cmp	x27, x26
  416fa4:	add	x21, x21, #0x8
  416fa8:	mov	x8, x28
  416fac:	mov	x9, x22
  416fb0:	b.cs	416ee8 <die@@Base+0x200>  // b.hs, b.nlast
  416fb4:	mov	x10, sp
  416fb8:	sub	x22, x10, #0x20
  416fbc:	mov	sp, x22
  416fc0:	stur	x25, [x10, #-24]
  416fc4:	ldr	x11, [x21]
  416fc8:	mov	x28, x22
  416fcc:	stur	xzr, [x10, #-32]
  416fd0:	stur	x11, [x10, #-16]
  416fd4:	cbz	x8, 416fe0 <die@@Base+0x2f8>
  416fd8:	mov	x28, x8
  416fdc:	str	x22, [x9]
  416fe0:	ldr	x8, [x22, #16]
  416fe4:	cbz	x8, 417008 <die@@Base+0x320>
  416fe8:	ldr	x0, [x21]
  416fec:	bl	4067d0 <strlen@plt>
  416ff0:	add	x8, x0, x0, lsl #1
  416ff4:	add	x8, x24, x8
  416ff8:	add	x24, x8, #0x3
  416ffc:	cmp	w23, #0x100
  417000:	b.lt	416f9c <die@@Base+0x2b4>  // b.tstop
  417004:	b	417014 <die@@Base+0x32c>
  417008:	add	x24, x24, #0x3
  41700c:	cmp	w23, #0x100
  417010:	b.lt	416f9c <die@@Base+0x2b4>  // b.tstop
  417014:	ldr	x0, [x25, #40]
  417018:	bl	4067d0 <strlen@plt>
  41701c:	add	x8, x24, x0
  417020:	add	x24, x8, #0x2
  417024:	b	416f9c <die@@Base+0x2b4>
  417028:	cbz	w19, 416ee8 <die@@Base+0x200>
  41702c:	ldr	x8, [x25, #8]
  417030:	ldr	x0, [x8]
  417034:	cbz	x0, 416ee8 <die@@Base+0x200>
  417038:	mov	x8, sp
  41703c:	sub	x21, x8, #0x20
  417040:	mov	sp, x21
  417044:	mov	x26, x21
  417048:	stp	x25, x0, [x8, #-24]
  41704c:	stur	xzr, [x8, #-32]
  417050:	cbz	x28, 41705c <die@@Base+0x374>
  417054:	mov	x26, x28
  417058:	str	x21, [x22]
  41705c:	bl	4067d0 <strlen@plt>
  417060:	add	x8, x0, x0, lsl #1
  417064:	add	x8, x24, x8
  417068:	cmp	w23, #0x100
  41706c:	add	x24, x8, #0x3
  417070:	b.lt	416ee0 <die@@Base+0x1f8>  // b.tstop
  417074:	b	4171b4 <die@@Base+0x4cc>
  417078:	cbz	w19, 416ee8 <die@@Base+0x200>
  41707c:	ldr	x8, [x25, #32]
  417080:	cbz	x8, 417098 <die@@Base+0x3b0>
  417084:	ldr	x9, [x25, #8]
  417088:	ldr	d1, [x8]
  41708c:	ldr	d0, [x9]
  417090:	fcmp	d0, d1
  417094:	b.eq	416ee8 <die@@Base+0x200>  // b.none
  417098:	ldr	x8, [x25, #24]
  41709c:	cbz	x8, 4170b4 <die@@Base+0x3cc>
  4170a0:	ldr	x9, [x25, #8]
  4170a4:	ldr	d1, [x8]
  4170a8:	ldr	d0, [x9]
  4170ac:	fcmp	d0, d1
  4170b0:	b.eq	417114 <die@@Base+0x42c>  // b.none
  4170b4:	sub	x23, sp, #0x70
  4170b8:	mov	sp, x23
  4170bc:	ldr	x8, [x25, #8]
  4170c0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4170c4:	mov	x0, x23
  4170c8:	add	x1, x1, #0x84c
  4170cc:	ldr	d0, [x8]
  4170d0:	bl	406870 <sprintf@plt>
  4170d4:	b	417170 <die@@Base+0x488>
  4170d8:	cbz	w19, 416ee8 <die@@Base+0x200>
  4170dc:	ldr	x8, [x25, #32]
  4170e0:	cbz	x8, 4170f8 <die@@Base+0x410>
  4170e4:	ldr	x9, [x25, #8]
  4170e8:	ldr	w8, [x8]
  4170ec:	ldr	w9, [x9]
  4170f0:	cmp	w9, w8
  4170f4:	b.eq	416ee8 <die@@Base+0x200>  // b.none
  4170f8:	ldr	x8, [x25, #24]
  4170fc:	cbz	x8, 417150 <die@@Base+0x468>
  417100:	ldr	x9, [x25, #8]
  417104:	ldr	w8, [x8]
  417108:	ldr	w9, [x9]
  41710c:	cmp	w9, w8
  417110:	b.ne	417150 <die@@Base+0x468>  // b.any
  417114:	mov	x8, sp
  417118:	sub	x21, x8, #0x20
  41711c:	mov	sp, x21
  417120:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  417124:	add	x9, x9, #0x989
  417128:	stur	x9, [x8, #-16]
  41712c:	mov	x26, x21
  417130:	stp	xzr, x25, [x8, #-32]
  417134:	cbz	x28, 417140 <die@@Base+0x458>
  417138:	mov	x26, x28
  41713c:	str	x21, [x22]
  417140:	cmp	w23, #0x100
  417144:	b.ge	416ed0 <die@@Base+0x1e8>  // b.tcont
  417148:	add	x24, x24, #0x3
  41714c:	b	416ee0 <die@@Base+0x1f8>
  417150:	sub	x23, sp, #0x20
  417154:	mov	sp, x23
  417158:	ldr	x8, [x25, #8]
  41715c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  417160:	mov	x0, x23
  417164:	add	x1, x1, #0xa56
  417168:	ldr	w2, [x8]
  41716c:	bl	406870 <sprintf@plt>
  417170:	mov	x8, sp
  417174:	sub	x21, x8, #0x20
  417178:	mov	sp, x21
  41717c:	mov	x26, x21
  417180:	stp	x25, x23, [x8, #-24]
  417184:	stur	xzr, [x8, #-32]
  417188:	cbz	x28, 417194 <die@@Base+0x4ac>
  41718c:	mov	x26, x28
  417190:	str	x21, [x22]
  417194:	mov	x0, x23
  417198:	bl	4067d0 <strlen@plt>
  41719c:	ldr	w8, [x25]
  4171a0:	add	x9, x0, x0, lsl #1
  4171a4:	add	x9, x24, x9
  4171a8:	add	x24, x9, #0x3
  4171ac:	cmp	w8, #0x100
  4171b0:	b.lt	416ee0 <die@@Base+0x1f8>  // b.tstop
  4171b4:	ldr	x0, [x25, #40]
  4171b8:	bl	4067d0 <strlen@plt>
  4171bc:	add	x8, x24, x0
  4171c0:	add	x24, x8, #0x2
  4171c4:	b	416ee0 <die@@Base+0x1f8>
  4171c8:	add	x9, x24, #0x47
  4171cc:	mov	x8, sp
  4171d0:	and	x9, x9, #0xfffffffffffffff0
  4171d4:	sub	x20, x8, x9
  4171d8:	add	x2, x24, #0x38
  4171dc:	mov	sp, x20
  4171e0:	mov	x0, x20
  4171e4:	mov	w1, wzr
  4171e8:	bl	406ab0 <memset@plt>
  4171ec:	mov	w8, #0x2d                  	// #45
  4171f0:	mov	x23, x20
  4171f4:	strb	w8, [x23], #1
  4171f8:	mov	x21, x23
  4171fc:	cbz	x28, 417224 <die@@Base+0x53c>
  417200:	ldr	x8, [x28, #16]
  417204:	cbnz	x8, 417224 <die@@Base+0x53c>
  417208:	ldr	x8, [x28, #8]
  41720c:	ldr	w8, [x8]
  417210:	cmp	w8, #0xff
  417214:	b.gt	417224 <die@@Base+0x53c>
  417218:	strb	w8, [x21], #1
  41721c:	ldr	x28, [x28]
  417220:	cbnz	x28, 417200 <die@@Base+0x518>
  417224:	cbz	x28, 4172c4 <die@@Base+0x5dc>
  417228:	mov	w22, #0x2d20                	// #11552
  41722c:	mov	w24, #0x3d                  	// #61
  417230:	mov	w25, #0x2d                  	// #45
  417234:	b	417250 <die@@Base+0x568>
  417238:	ldr	x1, [x28, #16]
  41723c:	mov	x0, x21
  417240:	bl	416dfc <die@@Base+0x114>
  417244:	mov	x21, x0
  417248:	ldr	x28, [x28]
  41724c:	cbz	x28, 4172c4 <die@@Base+0x5dc>
  417250:	strh	w22, [x21]
  417254:	ldr	x8, [x28, #8]
  417258:	ldr	w8, [x8]
  41725c:	cmp	w8, #0xff
  417260:	b.gt	41727c <die@@Base+0x594>
  417264:	add	x9, x21, #0x3
  417268:	strb	w8, [x21, #2]
  41726c:	mov	x21, x9
  417270:	ldr	x8, [x28, #16]
  417274:	cbnz	x8, 4172a4 <die@@Base+0x5bc>
  417278:	b	417248 <die@@Base+0x560>
  41727c:	strb	w25, [x21, #2]
  417280:	ldr	x8, [x28, #8]
  417284:	add	x21, x21, #0x3
  417288:	mov	x0, x21
  41728c:	ldr	x1, [x8, #40]
  417290:	bl	406d90 <strcpy@plt>
  417294:	bl	4067d0 <strlen@plt>
  417298:	add	x21, x21, x0
  41729c:	ldr	x8, [x28, #16]
  4172a0:	cbz	x8, 417248 <die@@Base+0x560>
  4172a4:	ldrb	w8, [x8]
  4172a8:	cbz	w8, 417248 <die@@Base+0x560>
  4172ac:	ldr	x8, [x28, #8]
  4172b0:	ldr	w8, [x8]
  4172b4:	cmp	w8, #0x100
  4172b8:	b.lt	417238 <die@@Base+0x550>  // b.tstop
  4172bc:	strb	w24, [x21], #1
  4172c0:	b	417238 <die@@Base+0x550>
  4172c4:	cmp	x21, x23
  4172c8:	b.ne	4172d4 <die@@Base+0x5ec>  // b.any
  4172cc:	mov	x21, x20
  4172d0:	strb	wzr, [x20]
  4172d4:	ldrb	w8, [x20]
  4172d8:	cmp	w8, #0x2d
  4172dc:	b.ne	4172f4 <die@@Base+0x60c>  // b.any
  4172e0:	ldrb	w8, [x23]
  4172e4:	cmp	w8, #0x20
  4172e8:	cset	w8, eq  // eq = none
  4172ec:	lsl	x8, x8, #1
  4172f0:	b	4172f8 <die@@Base+0x610>
  4172f4:	mov	x8, xzr
  4172f8:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  4172fc:	ldr	x9, [x24, #2440]
  417300:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  417304:	add	x2, x20, x8
  417308:	add	x0, x0, #0x84f
  41730c:	ldr	x5, [x9, #8]
  417310:	mov	w1, #0x6                   	// #6
  417314:	mov	w3, #0x1                   	// #1
  417318:	mov	w4, #0x1                   	// #1
  41731c:	mov	x6, xzr
  417320:	bl	421720 <define_variable_in_set@@Base>
  417324:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  417328:	ldr	x8, [x8, #3888]
  41732c:	cbz	x8, 417358 <die@@Base+0x670>
  417330:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x40e0>
  417334:	add	x9, x9, #0x838
  417338:	ldr	q0, [x9]
  41733c:	mov	w9, #0x2a2d                	// #10797
  417340:	mov	w8, #0x20                  	// #32
  417344:	movk	w9, #0x292d, lsl #16
  417348:	strb	w8, [x21]
  41734c:	str	w9, [x21, #16]
  417350:	stur	q0, [x21, #1]
  417354:	add	x21, x21, #0x14
  417358:	cbz	w19, 4173d8 <die@@Base+0x6f0>
  41735c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  417360:	ldr	w8, [x8, #40]
  417364:	sub	x9, x29, #0x30
  417368:	cmp	w8, #0x0
  41736c:	sub	x8, x29, #0x10
  417370:	csel	x19, x8, x9, eq  // eq = none
  417374:	mov	x0, x19
  417378:	bl	4067d0 <strlen@plt>
  41737c:	mov	x22, x0
  417380:	mov	x0, x19
  417384:	mov	x1, x22
  417388:	bl	421ac8 <lookup_variable@@Base>
  41738c:	cbz	x0, 4173d8 <die@@Base+0x6f0>
  417390:	ldr	x8, [x0, #8]
  417394:	cbz	x8, 4173d8 <die@@Base+0x6f0>
  417398:	ldrb	w8, [x8]
  41739c:	cbz	w8, 4173d8 <die@@Base+0x6f0>
  4173a0:	mov	w9, #0x2d20                	// #11552
  4173a4:	mov	w8, #0x2800                	// #10240
  4173a8:	movk	w9, #0x202d, lsl #16
  4173ac:	mov	w10, #0x24                  	// #36
  4173b0:	strh	w8, [x21, #4]
  4173b4:	str	w9, [x21]
  4173b8:	strb	w10, [x21, #4]
  4173bc:	add	x21, x21, #0x6
  4173c0:	mov	x0, x21
  4173c4:	mov	x1, x19
  4173c8:	mov	x2, x22
  4173cc:	bl	406790 <memcpy@plt>
  4173d0:	mov	w8, #0x29                  	// #41
  4173d4:	strb	w8, [x21, x22]
  4173d8:	ldr	x9, [x24, #2440]
  4173dc:	ldrb	w8, [x20]
  4173e0:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  4173e4:	ldr	w10, [x10, #3248]
  4173e8:	ldr	x5, [x9, #8]
  4173ec:	cmp	w8, #0x2d
  4173f0:	csel	x2, x23, x20, eq  // eq = none
  4173f4:	cmp	w10, #0x0
  4173f8:	mov	w8, #0x2                   	// #2
  4173fc:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  417400:	cinc	w3, w8, ne  // ne = any
  417404:	add	x0, x0, #0x27
  417408:	mov	w1, #0x9                   	// #9
  41740c:	mov	w4, #0x1                   	// #1
  417410:	mov	x6, xzr
  417414:	bl	421720 <define_variable_in_set@@Base>
  417418:	mov	sp, x29
  41741c:	ldp	x20, x19, [sp, #80]
  417420:	ldp	x22, x21, [sp, #64]
  417424:	ldp	x24, x23, [sp, #48]
  417428:	ldp	x26, x25, [sp, #32]
  41742c:	ldp	x28, x27, [sp, #16]
  417430:	ldp	x29, x30, [sp], #96
  417434:	ret
  417438:	bl	406c10 <abort@plt>
  41743c:	stp	x29, x30, [sp, #-32]!
  417440:	mov	x0, xzr
  417444:	str	x19, [sp, #16]
  417448:	mov	x29, sp
  41744c:	bl	406a00 <time@plt>
  417450:	str	x0, [x29, #24]
  417454:	bl	416bd8 <main@@Base+0x20ec>
  417458:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41745c:	add	x1, x1, #0x997
  417460:	mov	w2, #0x5                   	// #5
  417464:	mov	x0, xzr
  417468:	bl	406e50 <dcgettext@plt>
  41746c:	mov	x19, x0
  417470:	add	x0, x29, #0x18
  417474:	bl	406900 <ctime@plt>
  417478:	mov	x1, x0
  41747c:	mov	x0, x19
  417480:	bl	406ef0 <printf@plt>
  417484:	bl	42319c <print_variable_data_base@@Base>
  417488:	bl	4096d0 <print_dir_data_base@@Base>
  41748c:	bl	420c44 <print_rule_data_base@@Base>
  417490:	bl	40bc94 <print_file_data_base@@Base>
  417494:	bl	423dfc <print_vpath_data_base@@Base>
  417498:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  41749c:	add	x0, x0, #0x9b8
  4174a0:	bl	4210dc <strcache_print_stats@@Base>
  4174a4:	mov	x0, xzr
  4174a8:	bl	406a00 <time@plt>
  4174ac:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4174b0:	str	x0, [x29, #24]
  4174b4:	add	x1, x1, #0x9ba
  4174b8:	mov	w2, #0x5                   	// #5
  4174bc:	mov	x0, xzr
  4174c0:	bl	406e50 <dcgettext@plt>
  4174c4:	mov	x19, x0
  4174c8:	add	x0, x29, #0x18
  4174cc:	bl	406900 <ctime@plt>
  4174d0:	mov	x1, x0
  4174d4:	mov	x0, x19
  4174d8:	bl	406ef0 <printf@plt>
  4174dc:	ldr	x19, [sp, #16]
  4174e0:	ldp	x29, x30, [sp], #32
  4174e4:	ret
  4174e8:	stp	x29, x30, [sp, #-32]!
  4174ec:	stp	x20, x19, [sp, #16]
  4174f0:	mov	x29, sp
  4174f4:	mov	w19, w0
  4174f8:	bl	42430c <jobserver_enabled@@Base>
  4174fc:	cbz	w0, 417544 <die@@Base+0x85c>
  417500:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  417504:	ldr	w3, [x20, #3072]
  417508:	cbz	w3, 417544 <die@@Base+0x85c>
  41750c:	cmp	w19, #0x2
  417510:	b.ne	417530 <die@@Base+0x848>  // b.any
  417514:	ldr	w8, [x20, #3072]
  417518:	subs	w8, w8, #0x1
  41751c:	str	w8, [x20, #3072]
  417520:	b.eq	417544 <die@@Base+0x85c>  // b.none
  417524:	mov	w0, wzr
  417528:	bl	424360 <jobserver_release@@Base>
  41752c:	b	417514 <die@@Base+0x82c>
  417530:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x40e0>
  417534:	add	x2, x2, #0x9dc
  417538:	mov	w1, #0x14                  	// #20
  41753c:	mov	x0, xzr
  417540:	bl	418f84 <error@@Base>
  417544:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  417548:	ldr	w8, [x19, #3896]
  41754c:	cbz	w8, 41757c <die@@Base+0x894>
  417550:	bl	4243f4 <jobserver_acquire_all@@Base>
  417554:	ldr	w4, [x19, #3896]
  417558:	add	w3, w0, #0x1
  41755c:	cmp	w3, w4
  417560:	b.eq	417578 <die@@Base+0x890>  // b.none
  417564:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x40e0>
  417568:	add	x2, x2, #0xa16
  41756c:	mov	w1, #0x28                  	// #40
  417570:	mov	x0, xzr
  417574:	bl	418f84 <error@@Base>
  417578:	bl	416dd0 <die@@Base+0xe8>
  41757c:	ldp	x20, x19, [sp, #16]
  417580:	ldp	x29, x30, [sp], #32
  417584:	ret
  417588:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41758c:	ldrb	w8, [x8, #3940]
  417590:	cbz	w8, 417598 <die@@Base+0x8b0>
  417594:	ret
  417598:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41759c:	add	x9, x9, #0xf64
  4175a0:	mov	w17, #0x2d                  	// #45
  4175a4:	adrp	x12, 427000 <_IO_stdin_used@@Base+0x20e0>
  4175a8:	mov	x13, #0x205                 	// #517
  4175ac:	adrp	x14, 427000 <_IO_stdin_used@@Base+0x20e0>
  4175b0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4175b4:	mov	x10, xzr
  4175b8:	mov	x11, xzr
  4175bc:	add	x12, x12, #0xca0
  4175c0:	movk	x13, #0x10, lsl #32
  4175c4:	add	x14, x14, #0x989
  4175c8:	add	x8, x8, #0xfd8
  4175cc:	mov	w15, #0x1                   	// #1
  4175d0:	mov	w16, #0x3a                  	// #58
  4175d4:	strb	w17, [x9], #1
  4175d8:	mov	w17, #0x15800000            	// #360710144
  4175dc:	b	417600 <die@@Base+0x918>
  4175e0:	mov	w0, wzr
  4175e4:	add	x18, x8, x10
  4175e8:	str	w0, [x18, #8]
  4175ec:	add	x10, x10, #0x20
  4175f0:	add	x11, x11, #0x1
  4175f4:	cmp	x10, #0x480
  4175f8:	add	x12, x12, #0x30
  4175fc:	b.eq	41767c <die@@Base+0x994>  // b.none
  417600:	lsr	x0, x13, x11
  417604:	mov	x18, x14
  417608:	tbnz	w0, #0, 417610 <die@@Base+0x928>
  41760c:	ldr	x18, [x12, #40]
  417610:	ldr	w0, [x12]
  417614:	add	x1, x8, x10
  417618:	str	x18, [x1]
  41761c:	sub	x18, x11, #0x1c
  417620:	cmp	x18, #0x8
  417624:	str	xzr, [x1, #16]
  417628:	str	w0, [x1, #24]
  41762c:	b.cc	417634 <die@@Base+0x94c>  // b.lo, b.ul, b.last
  417630:	strb	w0, [x9], #1
  417634:	ldr	w0, [x12, #4]
  417638:	cmp	w0, #0x7
  41763c:	b.hi	4175ec <die@@Base+0x904>  // b.pmore
  417640:	lsl	w0, w15, w0
  417644:	tst	w0, #0x7c
  417648:	b.eq	4175e0 <die@@Base+0x8f8>  // b.none
  41764c:	cmp	x18, #0x8
  417650:	b.cc	417658 <die@@Base+0x970>  // b.lo, b.ul, b.last
  417654:	strb	w16, [x9], #1
  417658:	lsr	x1, x17, x11
  41765c:	tst	x1, #0x1
  417660:	cinc	w0, w15, ne  // ne = any
  417664:	tbz	w1, #0, 4175e4 <die@@Base+0x8fc>
  417668:	cmp	x18, #0x8
  41766c:	b.cc	4175e4 <die@@Base+0x8fc>  // b.lo, b.ul, b.last
  417670:	strb	w16, [x9], #1
  417674:	mov	w0, #0x2                   	// #2
  417678:	b	4175e4 <die@@Base+0x8fc>
  41767c:	strb	wzr, [x9]
  417680:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x30e0>
  417684:	mov	x10, xzr
  417688:	add	x9, x9, #0x390
  41768c:	add	x12, x9, x10
  417690:	ldp	q1, q0, [x12]
  417694:	add	x11, x8, x10
  417698:	add	x10, x10, #0x20
  41769c:	cmp	x10, #0x120
  4176a0:	str	q0, [x11, #1168]
  4176a4:	str	q1, [x11, #1152]
  4176a8:	b.ne	41768c <die@@Base+0x9a4>  // b.any
  4176ac:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  4176b0:	str	xzr, [x8, #1400]
  4176b4:	ret
  4176b8:	stp	x29, x30, [sp, #-64]!
  4176bc:	stp	x24, x23, [sp, #16]
  4176c0:	stp	x22, x21, [sp, #32]
  4176c4:	stp	x20, x19, [sp, #48]
  4176c8:	ldrb	w8, [x0]
  4176cc:	mov	x20, x0
  4176d0:	mov	w21, w1
  4176d4:	mov	x29, sp
  4176d8:	cmp	w8, #0x2d
  4176dc:	b.ne	4176e8 <die@@Base+0xa00>  // b.any
  4176e0:	ldrb	w8, [x20, #1]
  4176e4:	cbz	w8, 417840 <die@@Base+0xb58>
  4176e8:	mov	w2, #0x4                   	// #4
  4176ec:	mov	x0, xzr
  4176f0:	mov	x1, x20
  4176f4:	mov	w3, wzr
  4176f8:	bl	423100 <try_variable_definition@@Base>
  4176fc:	cbz	x0, 41773c <die@@Base+0xa54>
  417700:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  417704:	ldr	x8, [x20, #3848]
  417708:	mov	x19, x0
  41770c:	cbz	x8, 417724 <die@@Base+0xa3c>
  417710:	ldr	x9, [x8, #8]
  417714:	cmp	x9, x19
  417718:	b.eq	417840 <die@@Base+0xb58>  // b.none
  41771c:	ldr	x8, [x8]
  417720:	cbnz	x8, 417710 <die@@Base+0xa28>
  417724:	mov	w0, #0x10                  	// #16
  417728:	bl	418070 <xmalloc@@Base>
  41772c:	ldr	x8, [x20, #3848]
  417730:	stp	x8, x19, [x0]
  417734:	str	x0, [x20, #3848]
  417738:	b	417840 <die@@Base+0xb58>
  41773c:	cbnz	w21, 417840 <die@@Base+0xb58>
  417740:	mov	x0, x20
  417744:	bl	417858 <die@@Base+0xb70>
  417748:	bl	420f28 <strcache_add@@Base>
  41774c:	bl	40a830 <enter_file@@Base>
  417750:	ldr	w8, [x0, #136]
  417754:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  417758:	mov	x19, x0
  41775c:	orr	w8, w8, #0x1000
  417760:	str	w8, [x0, #136]
  417764:	ldr	x21, [x20, #3920]
  417768:	mov	w0, #0x40                  	// #64
  41776c:	bl	418094 <xcalloc@@Base>
  417770:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  417774:	cbz	x21, 417784 <die@@Base+0xa9c>
  417778:	ldr	x9, [x8, #3928]
  41777c:	str	x0, [x9]
  417780:	b	417788 <die@@Base+0xaa0>
  417784:	str	x0, [x20, #3920]
  417788:	str	x0, [x8, #3928]
  41778c:	ldr	x8, [x8, #3928]
  417790:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  417794:	add	x0, x0, #0xb96
  417798:	mov	w1, #0xc                   	// #12
  41779c:	str	x19, [x8, #16]
  4177a0:	bl	421ac8 <lookup_variable@@Base>
  4177a4:	cbz	x0, 417810 <die@@Base+0xb28>
  4177a8:	ldr	x21, [x0, #8]
  4177ac:	mov	x0, x21
  4177b0:	bl	4067d0 <strlen@plt>
  4177b4:	ldr	x8, [x19]
  4177b8:	mov	x22, x0
  4177bc:	mov	x0, x8
  4177c0:	bl	4067d0 <strlen@plt>
  4177c4:	add	x24, x22, #0x1
  4177c8:	add	x23, x0, #0x1
  4177cc:	add	x8, x23, x24
  4177d0:	add	x8, x8, #0xf
  4177d4:	and	x8, x8, #0xfffffffffffffff0
  4177d8:	mov	x9, sp
  4177dc:	sub	x20, x9, x8
  4177e0:	mov	sp, x20
  4177e4:	mov	x0, x20
  4177e8:	mov	x1, x21
  4177ec:	mov	x2, x22
  4177f0:	bl	406790 <memcpy@plt>
  4177f4:	mov	w8, #0x20                  	// #32
  4177f8:	strb	w8, [x20, x22]
  4177fc:	ldr	x1, [x19]
  417800:	add	x0, x20, x24
  417804:	mov	x2, x23
  417808:	bl	406790 <memcpy@plt>
  41780c:	b	417814 <die@@Base+0xb2c>
  417810:	ldr	x20, [x19]
  417814:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  417818:	ldr	x8, [x8, #2440]
  41781c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  417820:	add	x0, x0, #0xb96
  417824:	mov	w1, #0xc                   	// #12
  417828:	ldr	x5, [x8, #8]
  41782c:	mov	x2, x20
  417830:	mov	w3, wzr
  417834:	mov	w4, wzr
  417838:	mov	x6, xzr
  41783c:	bl	421720 <define_variable_in_set@@Base>
  417840:	mov	sp, x29
  417844:	ldp	x20, x19, [sp, #48]
  417848:	ldp	x22, x21, [sp, #32]
  41784c:	ldp	x24, x23, [sp, #16]
  417850:	ldp	x29, x30, [sp], #64
  417854:	ret
  417858:	stp	x29, x30, [sp, #-32]!
  41785c:	stp	x20, x19, [sp, #16]
  417860:	ldrb	w8, [x0]
  417864:	mov	x19, x0
  417868:	mov	x29, sp
  41786c:	cmp	w8, #0x7e
  417870:	b.eq	417880 <die@@Base+0xb98>  // b.none
  417874:	cbz	w8, 4178f8 <die@@Base+0xc10>
  417878:	mov	x20, xzr
  41787c:	b	4178bc <die@@Base+0xbd4>
  417880:	mov	x0, x19
  417884:	bl	41b318 <tilde_expand@@Base>
  417888:	mov	x20, x0
  41788c:	cbz	x0, 4178bc <die@@Base+0xbd4>
  417890:	ldrb	w8, [x20]
  417894:	cmp	w8, #0x0
  417898:	csel	x19, x19, x20, eq  // eq = none
  41789c:	b	4178bc <die@@Base+0xbd4>
  4178a0:	ldrb	w9, [x19, #1]
  4178a4:	cmp	w9, #0x2f
  4178a8:	b.ne	4178c8 <die@@Base+0xbe0>  // b.any
  4178ac:	add	x19, x19, #0x1
  4178b0:	ldrb	w8, [x19, #1]!
  4178b4:	cmp	w8, #0x2f
  4178b8:	b.eq	4178b0 <die@@Base+0xbc8>  // b.none
  4178bc:	ldrb	w8, [x19]
  4178c0:	cmp	w8, #0x2e
  4178c4:	b.eq	4178a0 <die@@Base+0xbb8>  // b.none
  4178c8:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x10e0>
  4178cc:	add	x9, x9, #0x8c6
  4178d0:	cmp	w8, #0x0
  4178d4:	csel	x0, x9, x19, eq  // eq = none
  4178d8:	bl	420f28 <strcache_add@@Base>
  4178dc:	mov	x19, x0
  4178e0:	mov	x0, x20
  4178e4:	bl	406cf0 <free@plt>
  4178e8:	mov	x0, x19
  4178ec:	ldp	x20, x19, [sp, #16]
  4178f0:	ldp	x29, x30, [sp], #32
  4178f4:	ret
  4178f8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4178fc:	add	x1, x1, #0xcf8
  417900:	mov	w2, #0x5                   	// #5
  417904:	mov	x0, xzr
  417908:	bl	406e50 <dcgettext@plt>
  41790c:	mov	x2, x0
  417910:	mov	x0, xzr
  417914:	mov	x1, xzr
  417918:	bl	4190fc <fatal@@Base>
  41791c:	stp	x29, x30, [sp, #-32]!
  417920:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  417924:	ldr	w8, [x8, #3284]
  417928:	stp	x20, x19, [sp, #16]
  41792c:	mov	w19, w0
  417930:	mov	x29, sp
  417934:	cbz	w8, 41793c <die@@Base+0xc54>
  417938:	bl	416bd8 <main@@Base+0x20ec>
  41793c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  417940:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  417944:	add	x8, x8, #0x9b8
  417948:	add	x9, x9, #0x9d0
  41794c:	cmp	w19, #0x0
  417950:	csel	x8, x9, x8, eq  // eq = none
  417954:	ldr	x19, [x8]
  417958:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  41795c:	add	x1, x1, #0xd1a
  417960:	mov	w2, #0x5                   	// #5
  417964:	mov	x0, xzr
  417968:	bl	406e50 <dcgettext@plt>
  41796c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  417970:	ldr	x2, [x8, #48]
  417974:	mov	x1, x0
  417978:	mov	x0, x19
  41797c:	bl	406f70 <fprintf@plt>
  417980:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  417984:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x30e0>
  417988:	add	x1, x1, #0xd9c
  41798c:	add	x20, x20, #0x4c8
  417990:	mov	w2, #0x5                   	// #5
  417994:	mov	x0, xzr
  417998:	bl	406e50 <dcgettext@plt>
  41799c:	mov	x1, x19
  4179a0:	bl	4067e0 <fputs@plt>
  4179a4:	ldr	x1, [x20], #8
  4179a8:	cbnz	x1, 417990 <die@@Base+0xca8>
  4179ac:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  4179b0:	ldr	x8, [x20, #4032]
  4179b4:	cbz	x8, 4179f0 <die@@Base+0xd08>
  4179b8:	ldrb	w8, [x8]
  4179bc:	cbz	w8, 4179f0 <die@@Base+0xd08>
  4179c0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4179c4:	add	x1, x1, #0xd58
  4179c8:	mov	w2, #0x5                   	// #5
  4179cc:	mov	x0, xzr
  4179d0:	bl	406e50 <dcgettext@plt>
  4179d4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4179d8:	ldr	x2, [x8, #2456]
  4179dc:	ldr	x3, [x20, #4032]
  4179e0:	mov	x1, x0
  4179e4:	mov	x0, x19
  4179e8:	bl	406f70 <fprintf@plt>
  4179ec:	b	417a18 <die@@Base+0xd30>
  4179f0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4179f4:	add	x1, x1, #0xd3c
  4179f8:	mov	w2, #0x5                   	// #5
  4179fc:	mov	x0, xzr
  417a00:	bl	406e50 <dcgettext@plt>
  417a04:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  417a08:	ldr	x2, [x8, #2456]
  417a0c:	mov	x1, x0
  417a10:	mov	x0, x19
  417a14:	bl	406f70 <fprintf@plt>
  417a18:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  417a1c:	add	x1, x1, #0xd79
  417a20:	mov	w2, #0x5                   	// #5
  417a24:	mov	x0, xzr
  417a28:	bl	406e50 <dcgettext@plt>
  417a2c:	mov	x1, x0
  417a30:	mov	x0, x19
  417a34:	bl	406f70 <fprintf@plt>
  417a38:	ldp	x20, x19, [sp, #16]
  417a3c:	ldp	x29, x30, [sp], #32
  417a40:	ret
  417a44:	stp	x29, x30, [sp, #-48]!
  417a48:	stp	x20, x19, [sp, #32]
  417a4c:	adrp	x20, 43d000 <stopchar_map@@Base+0x310>
  417a50:	ldr	w8, [x20, #1436]
  417a54:	stp	x22, x21, [sp, #16]
  417a58:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  417a5c:	mov	x29, sp
  417a60:	cbz	w8, 417a6c <die@@Base+0xd84>
  417a64:	mov	w8, #0xfff                 	// #4095
  417a68:	str	w8, [x21, #3236]
  417a6c:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  417a70:	ldr	x8, [x8, #1440]
  417a74:	cbz	x8, 417b44 <die@@Base+0xe5c>
  417a78:	ldr	x22, [x8]
  417a7c:	ldr	x19, [x22]
  417a80:	cbz	x19, 417b44 <die@@Base+0xe5c>
  417a84:	bl	406960 <__ctype_tolower_loc@plt>
  417a88:	ldr	x8, [x0]
  417a8c:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  417a90:	add	x9, x9, #0xc88
  417a94:	mov	w10, #0x9                   	// #9
  417a98:	mov	w11, #0x101                 	// #257
  417a9c:	b	417aac <die@@Base+0xdc4>
  417aa0:	sub	x19, x19, #0x1
  417aa4:	ldrb	w12, [x19]
  417aa8:	cbz	w12, 417b3c <die@@Base+0xe54>
  417aac:	ldrb	w12, [x19]
  417ab0:	ldr	w12, [x8, x12, lsl #2]
  417ab4:	sub	w12, w12, #0x61
  417ab8:	cmp	w12, #0x15
  417abc:	b.hi	417b70 <die@@Base+0xe88>  // b.pmore
  417ac0:	adr	x13, 417ad4 <die@@Base+0xdec>
  417ac4:	ldrb	w14, [x9, x12]
  417ac8:	add	x13, x13, x14, lsl #2
  417acc:	mov	w12, wzr
  417ad0:	br	x13
  417ad4:	ldr	w12, [x21, #3236]
  417ad8:	orr	w12, w12, #0xfff
  417adc:	b	417b18 <die@@Base+0xe30>
  417ae0:	ldr	w12, [x21, #3236]
  417ae4:	orr	w12, w12, w10
  417ae8:	b	417b18 <die@@Base+0xe30>
  417aec:	ldr	w12, [x21, #3236]
  417af0:	orr	w12, w12, #0x1
  417af4:	b	417b18 <die@@Base+0xe30>
  417af8:	ldr	w12, [x21, #3236]
  417afc:	orr	w12, w12, #0x4
  417b00:	b	417b18 <die@@Base+0xe30>
  417b04:	ldr	w12, [x21, #3236]
  417b08:	orr	w12, w12, w11
  417b0c:	b	417b18 <die@@Base+0xe30>
  417b10:	ldr	w12, [x21, #3236]
  417b14:	orr	w12, w12, #0x3
  417b18:	add	x19, x19, #0x1
  417b1c:	str	w12, [x21, #3236]
  417b20:	ldrb	w12, [x19], #1
  417b24:	cbz	w12, 417aa0 <die@@Base+0xdb8>
  417b28:	cmp	w12, #0x2c
  417b2c:	b.eq	417aa4 <die@@Base+0xdbc>  // b.none
  417b30:	cmp	w12, #0x20
  417b34:	b.ne	417b20 <die@@Base+0xe38>  // b.any
  417b38:	b	417aa4 <die@@Base+0xdbc>
  417b3c:	ldr	x19, [x22, #8]!
  417b40:	cbnz	x19, 417aac <die@@Base+0xdc4>
  417b44:	ldr	w8, [x21, #3236]
  417b48:	cbz	w8, 417b5c <die@@Base+0xe74>
  417b4c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  417b50:	mov	w9, #0x1                   	// #1
  417b54:	str	w9, [x8, #4064]
  417b58:	b	417b60 <die@@Base+0xe78>
  417b5c:	str	wzr, [x20, #1436]
  417b60:	ldp	x20, x19, [sp, #32]
  417b64:	ldp	x22, x21, [sp, #16]
  417b68:	ldp	x29, x30, [sp], #48
  417b6c:	ret
  417b70:	mov	x0, x19
  417b74:	bl	4067d0 <strlen@plt>
  417b78:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  417b7c:	mov	x20, x0
  417b80:	add	x1, x1, #0x7e6
  417b84:	mov	w2, #0x5                   	// #5
  417b88:	mov	x0, xzr
  417b8c:	bl	406e50 <dcgettext@plt>
  417b90:	mov	x2, x0
  417b94:	mov	x0, xzr
  417b98:	mov	x1, x20
  417b9c:	mov	x3, x19
  417ba0:	bl	4190fc <fatal@@Base>
  417ba4:	stp	x29, x30, [sp, #-48]!
  417ba8:	stp	x20, x19, [sp, #32]
  417bac:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  417bb0:	ldr	x19, [x20, #3240]
  417bb4:	str	x21, [sp, #16]
  417bb8:	mov	x29, sp
  417bbc:	cbz	x19, 417c98 <die@@Base+0xfb0>
  417bc0:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x40e0>
  417bc4:	add	x8, x8, #0x80d
  417bc8:	cmp	x19, x8
  417bcc:	b.eq	417c7c <die@@Base+0xf94>  // b.none
  417bd0:	ldrb	w21, [x19]
  417bd4:	cmp	w21, #0x6e
  417bd8:	b.ne	417bf0 <die@@Base+0xf08>  // b.any
  417bdc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  417be0:	add	x0, x19, #0x1
  417be4:	add	x1, x1, #0x80e
  417be8:	bl	406cb0 <strcmp@plt>
  417bec:	cbz	w0, 417c7c <die@@Base+0xf94>
  417bf0:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x20e0>
  417bf4:	add	x8, x8, #0x21b
  417bf8:	cmp	x19, x8
  417bfc:	b.eq	417c84 <die@@Base+0xf9c>  // b.none
  417c00:	cmp	w21, #0x6c
  417c04:	b.ne	417c1c <die@@Base+0xf34>  // b.any
  417c08:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  417c0c:	add	x0, x19, #0x1
  417c10:	add	x1, x1, #0x21c
  417c14:	bl	406cb0 <strcmp@plt>
  417c18:	cbz	w0, 417c84 <die@@Base+0xf9c>
  417c1c:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  417c20:	add	x8, x8, #0xa41
  417c24:	cmp	x19, x8
  417c28:	b.eq	417c8c <die@@Base+0xfa4>  // b.none
  417c2c:	cmp	w21, #0x74
  417c30:	b.ne	417c48 <die@@Base+0xf60>  // b.any
  417c34:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  417c38:	add	x0, x19, #0x1
  417c3c:	add	x1, x1, #0xa42
  417c40:	bl	406cb0 <strcmp@plt>
  417c44:	cbz	w0, 417c8c <die@@Base+0xfa4>
  417c48:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x40e0>
  417c4c:	add	x8, x8, #0x812
  417c50:	cmp	x19, x8
  417c54:	b.eq	417c74 <die@@Base+0xf8c>  // b.none
  417c58:	cmp	w21, #0x72
  417c5c:	b.ne	417ca8 <die@@Base+0xfc0>  // b.any
  417c60:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  417c64:	add	x0, x19, #0x1
  417c68:	add	x1, x1, #0x813
  417c6c:	bl	406cb0 <strcmp@plt>
  417c70:	cbnz	w0, 417ca8 <die@@Base+0xfc0>
  417c74:	mov	w8, #0x3                   	// #3
  417c78:	b	417c90 <die@@Base+0xfa8>
  417c7c:	mov	w8, wzr
  417c80:	b	417c90 <die@@Base+0xfa8>
  417c84:	mov	w8, #0x1                   	// #1
  417c88:	b	417c90 <die@@Base+0xfa8>
  417c8c:	mov	w8, #0x2                   	// #2
  417c90:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  417c94:	str	w8, [x9, #3304]
  417c98:	ldp	x20, x19, [sp, #32]
  417c9c:	ldr	x21, [sp, #16]
  417ca0:	ldp	x29, x30, [sp], #48
  417ca4:	ret
  417ca8:	mov	x0, x19
  417cac:	bl	4067d0 <strlen@plt>
  417cb0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  417cb4:	mov	x19, x0
  417cb8:	add	x1, x1, #0x81a
  417cbc:	mov	w2, #0x5                   	// #5
  417cc0:	mov	x0, xzr
  417cc4:	bl	406e50 <dcgettext@plt>
  417cc8:	ldr	x3, [x20, #3240]
  417ccc:	mov	x2, x0
  417cd0:	mov	x0, xzr
  417cd4:	mov	x1, x19
  417cd8:	bl	4190fc <fatal@@Base>

0000000000417cdc <alpha_compare@@Base>:
  417cdc:	stp	x29, x30, [sp, #-16]!
  417ce0:	ldr	x8, [x0]
  417ce4:	ldr	x1, [x1]
  417ce8:	mov	x29, sp
  417cec:	ldrb	w9, [x8]
  417cf0:	ldrb	w10, [x1]
  417cf4:	subs	w0, w9, w10
  417cf8:	b.ne	417d04 <alpha_compare@@Base+0x28>  // b.any
  417cfc:	mov	x0, x8
  417d00:	bl	406cb0 <strcmp@plt>
  417d04:	ldp	x29, x30, [sp], #16
  417d08:	ret

0000000000417d0c <collapse_continuations@@Base>:
  417d0c:	stp	x29, x30, [sp, #-96]!
  417d10:	mov	w1, #0xa                   	// #10
  417d14:	stp	x28, x27, [sp, #16]
  417d18:	stp	x26, x25, [sp, #32]
  417d1c:	stp	x24, x23, [sp, #48]
  417d20:	stp	x22, x21, [sp, #64]
  417d24:	stp	x20, x19, [sp, #80]
  417d28:	mov	x29, sp
  417d2c:	mov	x19, x0
  417d30:	mov	w24, #0xa                   	// #10
  417d34:	bl	406d10 <strchr@plt>
  417d38:	cbz	x0, 417e68 <collapse_continuations@@Base+0x15c>
  417d3c:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  417d40:	mov	x21, x0
  417d44:	add	x25, x25, #0xcf0
  417d48:	adrp	x26, 440000 <shell_var@@Base+0x18>
  417d4c:	mov	w27, #0x20                  	// #32
  417d50:	mov	x20, x19
  417d54:	mov	x22, x19
  417d58:	b	417d7c <collapse_continuations@@Base+0x70>
  417d5c:	add	x20, x21, #0x1
  417d60:	strb	w24, [x8]
  417d64:	mov	w1, #0xa                   	// #10
  417d68:	mov	x0, x20
  417d6c:	add	x22, x8, #0x1
  417d70:	bl	406d10 <strchr@plt>
  417d74:	mov	x21, x0
  417d78:	cbz	x0, 417e50 <collapse_continuations@@Base+0x144>
  417d7c:	cmp	x21, x19
  417d80:	b.ls	417da4 <collapse_continuations@@Base+0x98>  // b.plast
  417d84:	ldurb	w8, [x21, #-1]
  417d88:	cmp	w8, #0x5c
  417d8c:	b.ne	417da4 <collapse_continuations@@Base+0x98>  // b.any
  417d90:	sub	x8, x21, #0x2
  417d94:	cmp	x8, x19
  417d98:	b.cs	417dac <collapse_continuations@@Base+0xa0>  // b.hs, b.nlast
  417d9c:	mov	w8, #0xfffffffe            	// #-2
  417da0:	b	417dcc <collapse_continuations@@Base+0xc0>
  417da4:	mov	w28, wzr
  417da8:	b	417dd0 <collapse_continuations@@Base+0xc4>
  417dac:	mov	x8, #0xfffffffffffffffe    	// #-2
  417db0:	ldrb	w9, [x21, x8]
  417db4:	cmp	w9, #0x5c
  417db8:	b.ne	417dcc <collapse_continuations@@Base+0xc0>  // b.any
  417dbc:	sub	x8, x8, #0x1
  417dc0:	add	x9, x21, x8
  417dc4:	cmp	x9, x19
  417dc8:	b.cs	417db0 <collapse_continuations@@Base+0xa4>  // b.hs, b.nlast
  417dcc:	add	w28, w8, #0x1
  417dd0:	cmp	w28, #0x0
  417dd4:	sub	x8, x21, x20
  417dd8:	cinc	w9, w28, lt  // lt = tstop
  417ddc:	add	x8, x8, w28, sxtw
  417de0:	neg	w9, w9, asr #1
  417de4:	cmp	x22, x20
  417de8:	add	x23, x8, w9, sxtw
  417dec:	b.eq	417e00 <collapse_continuations@@Base+0xf4>  // b.none
  417df0:	mov	x0, x22
  417df4:	mov	x1, x20
  417df8:	mov	x2, x23
  417dfc:	bl	4067a0 <memmove@plt>
  417e00:	add	x8, x22, x23
  417e04:	tbz	w28, #0, 417d5c <collapse_continuations@@Base+0x50>
  417e08:	mov	x20, x21
  417e0c:	ldrb	w9, [x20, #1]!
  417e10:	ldrh	w9, [x25, x9, lsl #1]
  417e14:	tbnz	w9, #1, 417e0c <collapse_continuations@@Base+0x100>
  417e18:	ldr	w9, [x26, #40]
  417e1c:	cbz	w9, 417e28 <collapse_continuations@@Base+0x11c>
  417e20:	mov	x9, x8
  417e24:	b	417e44 <collapse_continuations@@Base+0x138>
  417e28:	mov	x9, x8
  417e2c:	cmp	x8, x19
  417e30:	b.ls	417e44 <collapse_continuations@@Base+0x138>  // b.plast
  417e34:	mov	x8, x9
  417e38:	ldrb	w10, [x8, #-1]!
  417e3c:	ldrh	w10, [x25, x10, lsl #1]
  417e40:	tbnz	w10, #1, 417e28 <collapse_continuations@@Base+0x11c>
  417e44:	strb	w27, [x9]
  417e48:	mov	x8, x9
  417e4c:	b	417d64 <collapse_continuations@@Base+0x58>
  417e50:	mov	x0, x20
  417e54:	bl	4067d0 <strlen@plt>
  417e58:	add	x2, x0, #0x1
  417e5c:	mov	x0, x22
  417e60:	mov	x1, x20
  417e64:	bl	4067a0 <memmove@plt>
  417e68:	ldp	x20, x19, [sp, #80]
  417e6c:	ldp	x22, x21, [sp, #64]
  417e70:	ldp	x24, x23, [sp, #48]
  417e74:	ldp	x26, x25, [sp, #32]
  417e78:	ldp	x28, x27, [sp, #16]
  417e7c:	ldp	x29, x30, [sp], #96
  417e80:	ret

0000000000417e84 <print_spaces@@Base>:
  417e84:	stp	x29, x30, [sp, #-32]!
  417e88:	str	x19, [sp, #16]
  417e8c:	mov	x29, sp
  417e90:	cbz	w0, 417ea8 <print_spaces@@Base+0x24>
  417e94:	mov	w19, w0
  417e98:	mov	w0, #0x20                  	// #32
  417e9c:	sub	w19, w19, #0x1
  417ea0:	bl	406f20 <putchar@plt>
  417ea4:	cbnz	w19, 417e98 <print_spaces@@Base+0x14>
  417ea8:	ldr	x19, [sp, #16]
  417eac:	ldp	x29, x30, [sp], #32
  417eb0:	ret

0000000000417eb4 <concat@@Base>:
  417eb4:	sub	sp, sp, #0x140
  417eb8:	stp	x29, x30, [sp, #224]
  417ebc:	add	x29, sp, #0xe0
  417ec0:	mov	x8, #0xffffffffffffffc8    	// #-56
  417ec4:	mov	x9, sp
  417ec8:	sub	x10, x29, #0x58
  417ecc:	stp	x24, x23, [sp, #272]
  417ed0:	stp	x22, x21, [sp, #288]
  417ed4:	movk	x8, #0xff80, lsl #32
  417ed8:	add	x11, x29, #0x60
  417edc:	adrp	x23, 43d000 <stopchar_map@@Base+0x310>
  417ee0:	add	x9, x9, #0x80
  417ee4:	add	x10, x10, #0x38
  417ee8:	adrp	x22, 43d000 <stopchar_map@@Base+0x310>
  417eec:	str	x28, [sp, #240]
  417ef0:	stp	x26, x25, [sp, #256]
  417ef4:	stp	x20, x19, [sp, #304]
  417ef8:	stp	x1, x2, [x29, #-88]
  417efc:	stp	x3, x4, [x29, #-72]
  417f00:	stp	x5, x6, [x29, #-56]
  417f04:	stur	x7, [x29, #-40]
  417f08:	stp	q0, q1, [sp]
  417f0c:	stp	q2, q3, [sp, #32]
  417f10:	stp	q4, q5, [sp, #64]
  417f14:	stp	q6, q7, [sp, #96]
  417f18:	stp	x9, x8, [x29, #-16]
  417f1c:	stp	x11, x10, [x29, #-32]
  417f20:	cbz	w0, 417fe4 <concat@@Base+0x130>
  417f24:	mov	w19, w0
  417f28:	mov	x24, xzr
  417f2c:	mov	w25, #0x3c                  	// #60
  417f30:	b	417f50 <concat@@Base+0x9c>
  417f34:	ldr	x8, [x22, #1464]
  417f38:	mov	x1, x20
  417f3c:	mov	x2, x21
  417f40:	add	x0, x8, x24
  417f44:	bl	406790 <memcpy@plt>
  417f48:	mov	x24, x26
  417f4c:	cbz	w19, 417fe8 <concat@@Base+0x134>
  417f50:	ldursw	x8, [x29, #-8]
  417f54:	tbz	w8, #31, 417f68 <concat@@Base+0xb4>
  417f58:	add	w9, w8, #0x8
  417f5c:	cmp	w9, #0x0
  417f60:	stur	w9, [x29, #-8]
  417f64:	b.le	417f94 <concat@@Base+0xe0>
  417f68:	ldur	x8, [x29, #-32]
  417f6c:	add	x9, x8, #0x8
  417f70:	stur	x9, [x29, #-32]
  417f74:	ldr	x20, [x8]
  417f78:	cbz	x20, 417fa4 <concat@@Base+0xf0>
  417f7c:	mov	x0, x20
  417f80:	bl	4067d0 <strlen@plt>
  417f84:	mov	x21, x0
  417f88:	sub	w19, w19, #0x1
  417f8c:	cbnz	x21, 417fb0 <concat@@Base+0xfc>
  417f90:	b	417f4c <concat@@Base+0x98>
  417f94:	ldur	x9, [x29, #-24]
  417f98:	add	x8, x9, x8
  417f9c:	ldr	x20, [x8]
  417fa0:	cbnz	x20, 417f7c <concat@@Base+0xc8>
  417fa4:	mov	x21, xzr
  417fa8:	sub	w19, w19, #0x1
  417fac:	cbz	x21, 417f4c <concat@@Base+0x98>
  417fb0:	ldr	x8, [x23, #1456]
  417fb4:	add	x26, x21, x24
  417fb8:	cmp	x26, x8
  417fbc:	b.ls	417f34 <concat@@Base+0x80>  // b.plast
  417fc0:	cmp	x8, #0x0
  417fc4:	ldr	x0, [x22, #1464]
  417fc8:	csel	x8, x25, x8, eq  // eq = none
  417fcc:	add	x8, x8, x21
  417fd0:	lsl	x1, x8, #1
  417fd4:	str	x1, [x23, #1456]
  417fd8:	bl	41803c <xrealloc@@Base>
  417fdc:	str	x0, [x22, #1464]
  417fe0:	b	417f34 <concat@@Base+0x80>
  417fe4:	mov	x24, xzr
  417fe8:	ldr	x8, [x23, #1456]
  417fec:	cmp	x24, x8
  417ff0:	b.ne	418014 <concat@@Base+0x160>  // b.any
  417ff4:	ldr	x0, [x22, #1464]
  417ff8:	lsl	x9, x8, #1
  417ffc:	cmp	x8, #0x0
  418000:	mov	w8, #0x78                  	// #120
  418004:	csel	x1, x8, x9, eq  // eq = none
  418008:	str	x1, [x23, #1456]
  41800c:	bl	41803c <xrealloc@@Base>
  418010:	str	x0, [x22, #1464]
  418014:	ldr	x0, [x22, #1464]
  418018:	ldr	x28, [sp, #240]
  41801c:	strb	wzr, [x0, x24]
  418020:	ldp	x20, x19, [sp, #304]
  418024:	ldp	x22, x21, [sp, #288]
  418028:	ldp	x24, x23, [sp, #272]
  41802c:	ldp	x26, x25, [sp, #256]
  418030:	ldp	x29, x30, [sp, #224]
  418034:	add	sp, sp, #0x140
  418038:	ret

000000000041803c <xrealloc@@Base>:
  41803c:	stp	x29, x30, [sp, #-16]!
  418040:	cmp	x1, #0x0
  418044:	csinc	x1, x1, xzr, ne  // ne = any
  418048:	mov	x29, sp
  41804c:	cbz	x0, 418060 <xrealloc@@Base+0x24>
  418050:	bl	406b50 <realloc@plt>
  418054:	cbz	x0, 41806c <xrealloc@@Base+0x30>
  418058:	ldp	x29, x30, [sp], #16
  41805c:	ret
  418060:	mov	x0, x1
  418064:	bl	406a10 <malloc@plt>
  418068:	cbnz	x0, 418058 <xrealloc@@Base+0x1c>
  41806c:	bl	419318 <out_of_memory@@Base>

0000000000418070 <xmalloc@@Base>:
  418070:	stp	x29, x30, [sp, #-16]!
  418074:	cmp	x0, #0x0
  418078:	csinc	x0, x0, xzr, ne  // ne = any
  41807c:	mov	x29, sp
  418080:	bl	406a10 <malloc@plt>
  418084:	cbz	x0, 418090 <xmalloc@@Base+0x20>
  418088:	ldp	x29, x30, [sp], #16
  41808c:	ret
  418090:	bl	419318 <out_of_memory@@Base>

0000000000418094 <xcalloc@@Base>:
  418094:	stp	x29, x30, [sp, #-16]!
  418098:	cmp	x0, #0x0
  41809c:	csinc	x0, x0, xzr, ne  // ne = any
  4180a0:	mov	w1, #0x1                   	// #1
  4180a4:	mov	x29, sp
  4180a8:	bl	406b20 <calloc@plt>
  4180ac:	cbz	x0, 4180b8 <xcalloc@@Base+0x24>
  4180b0:	ldp	x29, x30, [sp], #16
  4180b4:	ret
  4180b8:	bl	419318 <out_of_memory@@Base>

00000000004180bc <xstrdup@@Base>:
  4180bc:	stp	x29, x30, [sp, #-16]!
  4180c0:	mov	x29, sp
  4180c4:	bl	406b70 <strdup@plt>
  4180c8:	cbz	x0, 4180d4 <xstrdup@@Base+0x18>
  4180cc:	ldp	x29, x30, [sp], #16
  4180d0:	ret
  4180d4:	bl	419318 <out_of_memory@@Base>

00000000004180d8 <xstrndup@@Base>:
  4180d8:	stp	x29, x30, [sp, #-16]!
  4180dc:	mov	x29, sp
  4180e0:	bl	406d00 <strndup@plt>
  4180e4:	cbz	x0, 4180f0 <xstrndup@@Base+0x18>
  4180e8:	ldp	x29, x30, [sp], #16
  4180ec:	ret
  4180f0:	bl	419318 <out_of_memory@@Base>

00000000004180f4 <lindex@@Base>:
  4180f4:	cmp	x0, x1
  4180f8:	b.cs	418110 <lindex@@Base+0x1c>  // b.hs, b.nlast
  4180fc:	ldrb	w8, [x0], #1
  418100:	cmp	w8, w2
  418104:	b.ne	4180f4 <lindex@@Base>  // b.any
  418108:	sub	x0, x0, #0x1
  41810c:	ret
  418110:	mov	x0, xzr
  418114:	ret

0000000000418118 <end_of_token@@Base>:
  418118:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41811c:	sub	x0, x0, #0x1
  418120:	add	x8, x8, #0xcf0
  418124:	ldrb	w9, [x0, #1]!
  418128:	ldrh	w9, [x8, x9, lsl #1]
  41812c:	tst	w9, #0x7
  418130:	b.eq	418124 <end_of_token@@Base+0xc>  // b.none
  418134:	ret

0000000000418138 <next_token@@Base>:
  418138:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41813c:	sub	x0, x0, #0x1
  418140:	add	x8, x8, #0xcf0
  418144:	ldrb	w9, [x0, #1]!
  418148:	ldrh	w9, [x8, x9, lsl #1]
  41814c:	tst	w9, #0x6
  418150:	b.ne	418144 <next_token@@Base+0xc>  // b.any
  418154:	ret

0000000000418158 <find_next_token@@Base>:
  418158:	stp	x29, x30, [sp, #-48]!
  41815c:	stp	x20, x19, [sp, #32]
  418160:	str	x21, [sp, #16]
  418164:	mov	x21, x0
  418168:	ldr	x0, [x0]
  41816c:	mov	x29, sp
  418170:	mov	x20, x1
  418174:	bl	418138 <next_token@@Base>
  418178:	ldrb	w8, [x0]
  41817c:	cbz	w8, 41819c <find_next_token@@Base+0x44>
  418180:	mov	x19, x0
  418184:	bl	418118 <end_of_token@@Base>
  418188:	str	x0, [x21]
  41818c:	cbz	x20, 4181a0 <find_next_token@@Base+0x48>
  418190:	sub	x8, x0, x19
  418194:	str	x8, [x20]
  418198:	b	4181a0 <find_next_token@@Base+0x48>
  41819c:	mov	x19, xzr
  4181a0:	mov	x0, x19
  4181a4:	ldp	x20, x19, [sp, #32]
  4181a8:	ldr	x21, [sp, #16]
  4181ac:	ldp	x29, x30, [sp], #48
  4181b0:	ret

00000000004181b4 <writebuf@@Base>:
  4181b4:	stp	x29, x30, [sp, #-64]!
  4181b8:	stp	x22, x21, [sp, #32]
  4181bc:	stp	x20, x19, [sp, #48]
  4181c0:	mov	x19, x2
  4181c4:	mov	x20, x1
  4181c8:	mov	w21, w0
  4181cc:	mov	x22, x2
  4181d0:	stp	x24, x23, [sp, #16]
  4181d4:	mov	x29, sp
  4181d8:	b	4181f0 <writebuf@@Base+0x3c>
  4181dc:	sub	x22, x22, x23
  4181e0:	add	x20, x20, x23
  4181e4:	mov	w8, #0x1                   	// #1
  4181e8:	mov	x23, x24
  4181ec:	tbz	w8, #0, 418238 <writebuf@@Base+0x84>
  4181f0:	cbz	x22, 418234 <writebuf@@Base+0x80>
  4181f4:	mov	w0, w21
  4181f8:	mov	x1, x20
  4181fc:	mov	x2, x22
  418200:	bl	406bf0 <write@plt>
  418204:	mov	x23, x0
  418208:	cmn	x0, #0x1
  41820c:	b.ne	418220 <writebuf@@Base+0x6c>  // b.any
  418210:	bl	406f00 <__errno_location@plt>
  418214:	ldr	w8, [x0]
  418218:	cmp	w8, #0x4
  41821c:	b.eq	4181f4 <writebuf@@Base+0x40>  // b.none
  418220:	tbz	x23, #63, 4181dc <writebuf@@Base+0x28>
  418224:	mov	w8, wzr
  418228:	mov	x24, x23
  41822c:	tbnz	w8, #0, 4181f0 <writebuf@@Base+0x3c>
  418230:	b	418238 <writebuf@@Base+0x84>
  418234:	mov	x23, x19
  418238:	mov	x0, x23
  41823c:	ldp	x20, x19, [sp, #48]
  418240:	ldp	x22, x21, [sp, #32]
  418244:	ldp	x24, x23, [sp, #16]
  418248:	ldp	x29, x30, [sp], #64
  41824c:	ret

0000000000418250 <readbuf@@Base>:
  418250:	stp	x29, x30, [sp, #-64]!
  418254:	stp	x24, x23, [sp, #16]
  418258:	stp	x22, x21, [sp, #32]
  41825c:	stp	x20, x19, [sp, #48]
  418260:	mov	x22, x2
  418264:	mov	x19, x1
  418268:	mov	w23, w0
  41826c:	mov	x20, x1
  418270:	mov	x29, sp
  418274:	b	418284 <readbuf@@Base+0x34>
  418278:	mov	w8, #0x1                   	// #1
  41827c:	mov	x21, x24
  418280:	cbnz	w8, 4182d4 <readbuf@@Base+0x84>
  418284:	cbz	x22, 4182dc <readbuf@@Base+0x8c>
  418288:	mov	w0, w23
  41828c:	mov	x1, x20
  418290:	mov	x2, x22
  418294:	bl	406de0 <read@plt>
  418298:	mov	x24, x0
  41829c:	cmn	x0, #0x1
  4182a0:	b.ne	4182b4 <readbuf@@Base+0x64>  // b.any
  4182a4:	bl	406f00 <__errno_location@plt>
  4182a8:	ldr	w8, [x0]
  4182ac:	cmp	w8, #0x4
  4182b0:	b.eq	418288 <readbuf@@Base+0x38>  // b.none
  4182b4:	tbnz	x24, #63, 418278 <readbuf@@Base+0x28>
  4182b8:	cbz	x24, 4182cc <readbuf@@Base+0x7c>
  4182bc:	mov	w8, wzr
  4182c0:	sub	x22, x22, x24
  4182c4:	add	x20, x20, x24
  4182c8:	b	418280 <readbuf@@Base+0x30>
  4182cc:	mov	w8, #0x3                   	// #3
  4182d0:	b	418280 <readbuf@@Base+0x30>
  4182d4:	cmp	w8, #0x3
  4182d8:	b.ne	4182e0 <readbuf@@Base+0x90>  // b.any
  4182dc:	sub	x21, x20, x19
  4182e0:	mov	x0, x21
  4182e4:	ldp	x20, x19, [sp, #48]
  4182e8:	ldp	x22, x21, [sp, #32]
  4182ec:	ldp	x24, x23, [sp, #16]
  4182f0:	ldp	x29, x30, [sp], #64
  4182f4:	ret

00000000004182f8 <copy_dep_chain@@Base>:
  4182f8:	stp	x29, x30, [sp, #-48]!
  4182fc:	stp	x22, x21, [sp, #16]
  418300:	stp	x20, x19, [sp, #32]
  418304:	mov	x29, sp
  418308:	cbz	x0, 418370 <copy_dep_chain@@Base+0x78>
  41830c:	mov	x19, x0
  418310:	mov	x22, xzr
  418314:	mov	x20, xzr
  418318:	b	418334 <copy_dep_chain@@Base+0x3c>
  41831c:	str	xzr, [x21]
  418320:	cbz	x20, 418368 <copy_dep_chain@@Base+0x70>
  418324:	str	x21, [x22]
  418328:	ldr	x19, [x19]
  41832c:	mov	x22, x21
  418330:	cbz	x19, 418374 <copy_dep_chain@@Base+0x7c>
  418334:	mov	w0, #0x28                  	// #40
  418338:	bl	418070 <xmalloc@@Base>
  41833c:	ldr	x8, [x19, #32]
  418340:	ldp	q1, q0, [x19]
  418344:	mov	x21, x0
  418348:	str	x8, [x0, #32]
  41834c:	ubfx	x8, x8, #8, #8
  418350:	stp	q1, q0, [x0]
  418354:	tbz	w8, #3, 41831c <copy_dep_chain@@Base+0x24>
  418358:	ldr	x0, [x21, #8]
  41835c:	bl	4180bc <xstrdup@@Base>
  418360:	str	x0, [x21, #8]
  418364:	b	41831c <copy_dep_chain@@Base+0x24>
  418368:	mov	x20, x21
  41836c:	b	418328 <copy_dep_chain@@Base+0x30>
  418370:	mov	x20, xzr
  418374:	mov	x0, x20
  418378:	ldp	x20, x19, [sp, #32]
  41837c:	ldp	x22, x21, [sp, #16]
  418380:	ldp	x29, x30, [sp], #48
  418384:	ret

0000000000418388 <free_ns_chain@@Base>:
  418388:	stp	x29, x30, [sp, #-32]!
  41838c:	str	x19, [sp, #16]
  418390:	mov	x29, sp
  418394:	cbz	x0, 4183a8 <free_ns_chain@@Base+0x20>
  418398:	ldr	x19, [x0]
  41839c:	bl	406cf0 <free@plt>
  4183a0:	mov	x0, x19
  4183a4:	cbnz	x19, 418398 <free_ns_chain@@Base+0x10>
  4183a8:	ldr	x19, [sp, #16]
  4183ac:	ldp	x29, x30, [sp], #32
  4183b0:	ret

00000000004183b4 <get_tmpfile@@Base>:
  4183b4:	stp	x29, x30, [sp, #-48]!
  4183b8:	stp	x20, x19, [sp, #32]
  4183bc:	mov	x20, x0
  4183c0:	mov	w0, #0x3f                  	// #63
  4183c4:	str	x21, [sp, #16]
  4183c8:	mov	x29, sp
  4183cc:	mov	x21, x1
  4183d0:	bl	406ee0 <umask@plt>
  4183d4:	mov	w19, w0
  4183d8:	mov	x0, x21
  4183dc:	bl	4067d0 <strlen@plt>
  4183e0:	add	x0, x0, #0x1
  4183e4:	bl	418070 <xmalloc@@Base>
  4183e8:	mov	x1, x21
  4183ec:	str	x0, [x20]
  4183f0:	bl	406d90 <strcpy@plt>
  4183f4:	ldr	x0, [x20]
  4183f8:	bl	406e00 <mkstemp@plt>
  4183fc:	cmn	w0, #0x1
  418400:	b.ne	41841c <get_tmpfile@@Base+0x68>  // b.any
  418404:	bl	406f00 <__errno_location@plt>
  418408:	ldr	w8, [x0]
  41840c:	cmp	w8, #0x4
  418410:	b.eq	4183f4 <get_tmpfile@@Base+0x40>  // b.none
  418414:	mov	x20, xzr
  418418:	b	41842c <get_tmpfile@@Base+0x78>
  41841c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  418420:	add	x1, x1, #0xb72
  418424:	bl	406ac0 <fdopen@plt>
  418428:	mov	x20, x0
  41842c:	mov	w0, w19
  418430:	bl	406ee0 <umask@plt>
  418434:	mov	x0, x20
  418438:	ldp	x20, x19, [sp, #32]
  41843c:	ldr	x21, [sp, #16]
  418440:	ldp	x29, x30, [sp], #48
  418444:	ret

0000000000418448 <user_access@@Base>:
  418448:	ret

000000000041844c <make_access@@Base>:
  41844c:	ret

0000000000418450 <child_access@@Base>:
  418450:	ret

0000000000418454 <output_tmpfd@@Base>:
  418454:	stp	x29, x30, [sp, #-48]!
  418458:	mov	w0, #0x3f                  	// #63
  41845c:	str	x21, [sp, #16]
  418460:	stp	x20, x19, [sp, #32]
  418464:	mov	x29, sp
  418468:	bl	406ee0 <umask@plt>
  41846c:	mov	w19, w0
  418470:	bl	406820 <tmpfile@plt>
  418474:	cbz	x0, 4184b8 <output_tmpfd@@Base+0x64>
  418478:	mov	x20, x0
  41847c:	bl	406980 <fileno@plt>
  418480:	bl	406800 <dup@plt>
  418484:	tbnz	w0, #31, 4184c4 <output_tmpfd@@Base+0x70>
  418488:	mov	w21, w0
  41848c:	mov	x0, x20
  418490:	bl	4069c0 <fclose@plt>
  418494:	mov	w0, w21
  418498:	bl	418538 <pfatal_with_name@@Base+0x68>
  41849c:	mov	w0, w19
  4184a0:	bl	406ee0 <umask@plt>
  4184a4:	mov	w0, w21
  4184a8:	ldp	x20, x19, [sp, #32]
  4184ac:	ldr	x21, [sp, #16]
  4184b0:	ldp	x29, x30, [sp], #48
  4184b4:	ret
  4184b8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  4184bc:	add	x0, x0, #0xa5a
  4184c0:	bl	4184d0 <pfatal_with_name@@Base>
  4184c4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  4184c8:	add	x0, x0, #0xa62
  4184cc:	bl	4184d0 <pfatal_with_name@@Base>

00000000004184d0 <pfatal_with_name@@Base>:
  4184d0:	stp	x29, x30, [sp, #-48]!
  4184d4:	str	x21, [sp, #16]
  4184d8:	stp	x20, x19, [sp, #32]
  4184dc:	mov	x29, sp
  4184e0:	mov	x19, x0
  4184e4:	bl	406f00 <__errno_location@plt>
  4184e8:	ldr	w0, [x0]
  4184ec:	bl	406b90 <strerror@plt>
  4184f0:	mov	x20, x0
  4184f4:	mov	x0, x19
  4184f8:	bl	4067d0 <strlen@plt>
  4184fc:	mov	x21, x0
  418500:	mov	x0, x20
  418504:	bl	4067d0 <strlen@plt>
  418508:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41850c:	add	x21, x0, x21
  418510:	add	x1, x1, #0x2aa
  418514:	mov	w2, #0x5                   	// #5
  418518:	mov	x0, xzr
  41851c:	bl	406e50 <dcgettext@plt>
  418520:	mov	x2, x0
  418524:	mov	x0, xzr
  418528:	mov	x1, x21
  41852c:	mov	x3, x19
  418530:	mov	x4, x20
  418534:	bl	4190fc <fatal@@Base>
  418538:	stp	x29, x30, [sp, #-32]!
  41853c:	mov	w1, #0x3                   	// #3
  418540:	mov	w2, wzr
  418544:	stp	x20, x19, [sp, #16]
  418548:	mov	x29, sp
  41854c:	mov	w19, w0
  418550:	bl	424a0c <rpl_fcntl@@Base>
  418554:	tbnz	w0, #31, 418584 <pfatal_with_name@@Base+0xb4>
  418558:	orr	w20, w0, #0x400
  41855c:	mov	w1, #0x4                   	// #4
  418560:	mov	w0, w19
  418564:	mov	w2, w20
  418568:	bl	424a0c <rpl_fcntl@@Base>
  41856c:	cmn	w0, #0x1
  418570:	b.ne	418584 <pfatal_with_name@@Base+0xb4>  // b.any
  418574:	bl	406f00 <__errno_location@plt>
  418578:	ldr	w8, [x0]
  41857c:	cmp	w8, #0x4
  418580:	b.eq	41855c <pfatal_with_name@@Base+0x8c>  // b.none
  418584:	ldp	x20, x19, [sp, #16]
  418588:	ldp	x29, x30, [sp], #32
  41858c:	ret

0000000000418590 <output_dump@@Base>:
  418590:	stp	x29, x30, [sp, #-64]!
  418594:	stp	x22, x21, [sp, #32]
  418598:	stp	x20, x19, [sp, #48]
  41859c:	mov	x19, x0
  4185a0:	ldr	w0, [x0]
  4185a4:	str	x23, [sp, #16]
  4185a8:	mov	x29, sp
  4185ac:	cmn	w0, #0x1
  4185b0:	b.eq	4185cc <output_dump@@Base+0x3c>  // b.none
  4185b4:	mov	w2, #0x2                   	// #2
  4185b8:	mov	x1, xzr
  4185bc:	bl	406930 <lseek@plt>
  4185c0:	cmp	x0, #0x0
  4185c4:	cset	w21, gt
  4185c8:	b	4185d0 <output_dump@@Base+0x40>
  4185cc:	mov	w21, wzr
  4185d0:	ldr	w0, [x19, #4]
  4185d4:	cmn	w0, #0x1
  4185d8:	b.eq	4185f4 <output_dump@@Base+0x64>  // b.none
  4185dc:	mov	w2, #0x2                   	// #2
  4185e0:	mov	x1, xzr
  4185e4:	bl	406930 <lseek@plt>
  4185e8:	cmp	x0, #0x0
  4185ec:	cset	w22, gt
  4185f0:	b	4185f8 <output_dump@@Base+0x68>
  4185f4:	mov	w22, wzr
  4185f8:	orr	w8, w21, w22
  4185fc:	cmp	w8, #0x1
  418600:	b.ne	418704 <output_dump@@Base+0x174>  // b.any
  418604:	bl	418718 <output_dump@@Base+0x188>
  418608:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41860c:	ldr	w8, [x8, #3276]
  418610:	mov	x20, x0
  418614:	mov	w23, wzr
  418618:	cbz	w8, 418638 <output_dump@@Base+0xa8>
  41861c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418620:	ldr	w8, [x8, #3304]
  418624:	cmp	w8, #0x3
  418628:	b.eq	418638 <output_dump@@Base+0xa8>  // b.none
  41862c:	mov	w0, #0x1                   	// #1
  418630:	mov	w23, #0x1                   	// #1
  418634:	bl	418778 <output_dump@@Base+0x1e8>
  418638:	cbz	w21, 41864c <output_dump@@Base+0xbc>
  41863c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418640:	ldr	w0, [x19]
  418644:	ldr	x1, [x8, #2512]
  418648:	bl	4188e4 <output_dump@@Base+0x354>
  41864c:	cbz	w22, 418668 <output_dump@@Base+0xd8>
  418650:	ldp	w8, w0, [x19]
  418654:	cmp	w0, w8
  418658:	b.eq	418668 <output_dump@@Base+0xd8>  // b.none
  41865c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418660:	ldr	x1, [x8, #2488]
  418664:	bl	4188e4 <output_dump@@Base+0x354>
  418668:	cbz	w23, 418674 <output_dump@@Base+0xe4>
  41866c:	mov	w0, wzr
  418670:	bl	418778 <output_dump@@Base+0x1e8>
  418674:	cbz	x20, 418680 <output_dump@@Base+0xf0>
  418678:	mov	x0, x20
  41867c:	bl	4189c4 <output_dump@@Base+0x434>
  418680:	ldr	w0, [x19]
  418684:	cmn	w0, #0x1
  418688:	b.eq	4186bc <output_dump@@Base+0x12c>  // b.none
  41868c:	mov	x1, xzr
  418690:	mov	w2, wzr
  418694:	bl	406930 <lseek@plt>
  418698:	ldr	w0, [x19]
  41869c:	mov	x1, xzr
  4186a0:	bl	406ea0 <ftruncate@plt>
  4186a4:	cmn	w0, #0x1
  4186a8:	b.ne	4186bc <output_dump@@Base+0x12c>  // b.any
  4186ac:	bl	406f00 <__errno_location@plt>
  4186b0:	ldr	w8, [x0]
  4186b4:	cmp	w8, #0x4
  4186b8:	b.eq	418698 <output_dump@@Base+0x108>  // b.none
  4186bc:	ldr	w0, [x19, #4]
  4186c0:	cmn	w0, #0x1
  4186c4:	b.eq	418704 <output_dump@@Base+0x174>  // b.none
  4186c8:	ldr	w8, [x19]
  4186cc:	cmp	w0, w8
  4186d0:	b.eq	418704 <output_dump@@Base+0x174>  // b.none
  4186d4:	mov	x1, xzr
  4186d8:	mov	w2, wzr
  4186dc:	bl	406930 <lseek@plt>
  4186e0:	ldr	w0, [x19, #4]
  4186e4:	mov	x1, xzr
  4186e8:	bl	406ea0 <ftruncate@plt>
  4186ec:	cmn	w0, #0x1
  4186f0:	b.ne	418704 <output_dump@@Base+0x174>  // b.any
  4186f4:	bl	406f00 <__errno_location@plt>
  4186f8:	ldr	w8, [x0]
  4186fc:	cmp	w8, #0x4
  418700:	b.eq	4186e0 <output_dump@@Base+0x150>  // b.none
  418704:	ldp	x20, x19, [sp, #48]
  418708:	ldp	x22, x21, [sp, #32]
  41870c:	ldr	x23, [sp, #16]
  418710:	ldp	x29, x30, [sp], #64
  418714:	ret
  418718:	stp	x29, x30, [sp, #-32]!
  41871c:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  418720:	ldr	w0, [x9, #2400]
  418724:	str	x19, [sp, #16]
  418728:	adrp	x19, 43d000 <stopchar_map@@Base+0x310>
  41872c:	add	x19, x19, #0x5d0
  418730:	mov	w8, #0x1                   	// #1
  418734:	mov	w1, #0x7                   	// #7
  418738:	mov	x2, x19
  41873c:	mov	x29, sp
  418740:	str	w8, [x19]
  418744:	stp	xzr, x8, [x19, #8]
  418748:	bl	424a0c <rpl_fcntl@@Base>
  41874c:	cmn	w0, #0x1
  418750:	b.eq	418764 <output_dump@@Base+0x1d4>  // b.none
  418754:	mov	x0, x19
  418758:	ldr	x19, [sp, #16]
  41875c:	ldp	x29, x30, [sp], #32
  418760:	ret
  418764:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  418768:	add	x0, x0, #0xad3
  41876c:	bl	406810 <perror@plt>
  418770:	mov	x19, xzr
  418774:	b	418754 <output_dump@@Base+0x1c4>
  418778:	stp	x29, x30, [sp, #-80]!
  41877c:	stp	x22, x21, [sp, #48]
  418780:	adrp	x21, 440000 <shell_var@@Base+0x18>
  418784:	ldr	x8, [x21, #48]
  418788:	stp	x20, x19, [sp, #64]
  41878c:	mov	w19, w0
  418790:	str	x25, [sp, #16]
  418794:	mov	x0, x8
  418798:	stp	x24, x23, [sp, #32]
  41879c:	mov	x29, sp
  4187a0:	bl	4067d0 <strlen@plt>
  4187a4:	adrp	x22, 440000 <shell_var@@Base+0x18>
  4187a8:	ldr	x20, [x22, #24]
  4187ac:	add	x24, x0, #0x17
  4187b0:	cbz	x20, 4187c0 <output_dump@@Base+0x230>
  4187b4:	mov	x0, x20
  4187b8:	bl	4067d0 <strlen@plt>
  4187bc:	add	x24, x0, x24
  4187c0:	adrp	x23, 440000 <shell_var@@Base+0x18>
  4187c4:	ldr	w8, [x23, #64]
  4187c8:	cbz	w8, 4187e4 <output_dump@@Base+0x254>
  4187cc:	cbz	x20, 4187fc <output_dump@@Base+0x26c>
  4187d0:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x40e0>
  4187d4:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x40e0>
  4187d8:	add	x8, x8, #0xbc7
  4187dc:	add	x9, x9, #0xba6
  4187e0:	b	418820 <output_dump@@Base+0x290>
  4187e4:	cbz	x20, 418810 <output_dump@@Base+0x280>
  4187e8:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x40e0>
  4187ec:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x40e0>
  4187f0:	add	x8, x8, #0xb3d
  4187f4:	add	x9, x9, #0xb20
  4187f8:	b	418820 <output_dump@@Base+0x290>
  4187fc:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x40e0>
  418800:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x40e0>
  418804:	add	x8, x8, #0xb80
  418808:	add	x9, x9, #0xb59
  41880c:	b	418820 <output_dump@@Base+0x290>
  418810:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x40e0>
  418814:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x40e0>
  418818:	add	x8, x8, #0xafe
  41881c:	add	x9, x9, #0xadb
  418820:	cmp	w19, #0x0
  418824:	csel	x1, x9, x8, ne  // ne = any
  418828:	mov	w2, #0x5                   	// #5
  41882c:	mov	x0, xzr
  418830:	bl	406e50 <dcgettext@plt>
  418834:	mov	x19, x0
  418838:	bl	4067d0 <strlen@plt>
  41883c:	adrp	x25, 43d000 <stopchar_map@@Base+0x310>
  418840:	ldr	x8, [x25, #1528]
  418844:	add	x20, x0, x24
  418848:	adrp	x24, 43d000 <stopchar_map@@Base+0x310>
  41884c:	cmp	x20, x8
  418850:	b.ls	418868 <output_dump@@Base+0x2d8>  // b.plast
  418854:	ldr	x0, [x24, #1520]
  418858:	mov	x1, x20
  41885c:	bl	41803c <xrealloc@@Base>
  418860:	str	x0, [x24, #1520]
  418864:	str	x20, [x25, #1528]
  418868:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41886c:	ldr	w8, [x8, #3256]
  418870:	ldr	x0, [x24, #1520]
  418874:	cbz	w8, 418880 <output_dump@@Base+0x2f0>
  418878:	mov	w8, #0x2023                	// #8227
  41887c:	strh	w8, [x0], #2
  418880:	ldr	w3, [x23, #64]
  418884:	ldr	x4, [x22, #24]
  418888:	ldr	x2, [x21, #48]
  41888c:	mov	x1, x19
  418890:	cbz	w3, 4188a0 <output_dump@@Base+0x310>
  418894:	cbz	x4, 4188b0 <output_dump@@Base+0x320>
  418898:	bl	406870 <sprintf@plt>
  41889c:	b	4188bc <output_dump@@Base+0x32c>
  4188a0:	cbz	x4, 4188b8 <output_dump@@Base+0x328>
  4188a4:	mov	x3, x4
  4188a8:	bl	406870 <sprintf@plt>
  4188ac:	b	4188bc <output_dump@@Base+0x32c>
  4188b0:	bl	406870 <sprintf@plt>
  4188b4:	b	4188bc <output_dump@@Base+0x32c>
  4188b8:	bl	406870 <sprintf@plt>
  4188bc:	ldr	x2, [x24, #1520]
  4188c0:	mov	x0, xzr
  4188c4:	mov	w1, wzr
  4188c8:	bl	418d54 <outputs@@Base+0x44>
  4188cc:	ldp	x20, x19, [sp, #64]
  4188d0:	ldp	x22, x21, [sp, #48]
  4188d4:	ldp	x24, x23, [sp, #32]
  4188d8:	ldr	x25, [sp, #16]
  4188dc:	ldp	x29, x30, [sp], #80
  4188e0:	ret
  4188e4:	stp	x29, x30, [sp, #-64]!
  4188e8:	stp	x20, x19, [sp, #48]
  4188ec:	mov	x19, x1
  4188f0:	mov	x1, xzr
  4188f4:	mov	w2, wzr
  4188f8:	str	x23, [sp, #16]
  4188fc:	stp	x22, x21, [sp, #32]
  418900:	mov	x29, sp
  418904:	mov	w20, w0
  418908:	bl	406930 <lseek@plt>
  41890c:	cmn	x0, #0x1
  418910:	b.eq	4189b4 <output_dump@@Base+0x424>  // b.none
  418914:	adrp	x21, 43d000 <stopchar_map@@Base+0x310>
  418918:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x40e0>
  41891c:	add	x21, x21, #0x600
  418920:	add	x22, x22, #0xbef
  418924:	mov	w2, #0x2000                	// #8192
  418928:	mov	w0, w20
  41892c:	mov	x1, x21
  418930:	bl	406de0 <read@plt>
  418934:	mov	x23, x0
  418938:	cmn	w23, #0x1
  41893c:	b.ne	418950 <output_dump@@Base+0x3c0>  // b.any
  418940:	bl	406f00 <__errno_location@plt>
  418944:	ldr	w8, [x0]
  418948:	cmp	w8, #0x4
  41894c:	b.eq	418924 <output_dump@@Base+0x394>  // b.none
  418950:	tbnz	w23, #31, 418980 <output_dump@@Base+0x3f0>
  418954:	cmp	w23, #0x1
  418958:	b.lt	4189a0 <output_dump@@Base+0x410>  // b.tstop
  41895c:	sxtw	x1, w23
  418960:	mov	w2, #0x1                   	// #1
  418964:	mov	x0, x21
  418968:	mov	x3, x19
  41896c:	bl	406d40 <fwrite@plt>
  418970:	cbz	x0, 418994 <output_dump@@Base+0x404>
  418974:	mov	x0, x19
  418978:	bl	406d80 <fflush@plt>
  41897c:	b	418924 <output_dump@@Base+0x394>
  418980:	mov	x0, x22
  418984:	bl	406810 <perror@plt>
  418988:	cmp	w23, #0x1
  41898c:	b.ge	41895c <output_dump@@Base+0x3cc>  // b.tcont
  418990:	b	4189a0 <output_dump@@Base+0x410>
  418994:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  418998:	add	x0, x0, #0xbf6
  41899c:	bl	406810 <perror@plt>
  4189a0:	ldp	x20, x19, [sp, #48]
  4189a4:	ldp	x22, x21, [sp, #32]
  4189a8:	ldr	x23, [sp, #16]
  4189ac:	ldp	x29, x30, [sp], #64
  4189b0:	ret
  4189b4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  4189b8:	add	x0, x0, #0xbe7
  4189bc:	bl	406810 <perror@plt>
  4189c0:	b	418914 <output_dump@@Base+0x384>
  4189c4:	stp	x29, x30, [sp, #-16]!
  4189c8:	mov	w8, #0x2                   	// #2
  4189cc:	strh	w8, [x0]
  4189d0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4189d4:	mov	x2, x0
  4189d8:	ldr	w0, [x8, #2400]
  4189dc:	mov	w1, #0x7                   	// #7
  4189e0:	mov	x29, sp
  4189e4:	bl	424a0c <rpl_fcntl@@Base>
  4189e8:	cmn	w0, #0x1
  4189ec:	b.eq	4189f8 <output_dump@@Base+0x468>  // b.none
  4189f0:	ldp	x29, x30, [sp], #16
  4189f4:	ret
  4189f8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  4189fc:	add	x0, x0, #0xad3
  418a00:	bl	406810 <perror@plt>
  418a04:	ldp	x29, x30, [sp], #16
  418a08:	ret

0000000000418a0c <output_init@@Base>:
  418a0c:	stp	x29, x30, [sp, #-32]!
  418a10:	str	x19, [sp, #16]
  418a14:	mov	x29, sp
  418a18:	cbz	x0, 418a48 <output_init@@Base+0x3c>
  418a1c:	mov	x8, #0xffffffffffffffff    	// #-1
  418a20:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  418a24:	str	x8, [x0]
  418a28:	ldr	w8, [x9, #3304]
  418a2c:	ldrb	w9, [x0, #8]
  418a30:	cmp	w8, #0x0
  418a34:	cset	w8, ne  // ne = any
  418a38:	and	w9, w9, #0xfe
  418a3c:	orr	w8, w9, w8
  418a40:	strb	w8, [x0, #8]
  418a44:	b	418ab0 <output_init@@Base+0xa4>
  418a48:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  418a4c:	ldr	x0, [x19, #2512]
  418a50:	mov	w2, #0x1                   	// #1
  418a54:	mov	w3, #0x2000                	// #8192
  418a58:	mov	x1, xzr
  418a5c:	bl	406920 <setvbuf@plt>
  418a60:	ldr	x0, [x19, #2512]
  418a64:	bl	406980 <fileno@plt>
  418a68:	bl	418538 <pfatal_with_name@@Base+0x68>
  418a6c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418a70:	ldr	x0, [x8, #2488]
  418a74:	bl	406980 <fileno@plt>
  418a78:	bl	418538 <pfatal_with_name@@Base+0x68>
  418a7c:	ldr	x0, [x19, #2512]
  418a80:	bl	406980 <fileno@plt>
  418a84:	mov	w1, #0x1                   	// #1
  418a88:	bl	424a0c <rpl_fcntl@@Base>
  418a8c:	cmn	w0, #0x1
  418a90:	b.ne	418aa4 <output_init@@Base+0x98>  // b.any
  418a94:	bl	406f00 <__errno_location@plt>
  418a98:	ldr	w8, [x0]
  418a9c:	cmp	w8, #0x9
  418aa0:	b.eq	418ab0 <output_init@@Base+0xa4>  // b.none
  418aa4:	adrp	x0, 418000 <concat@@Base+0x14c>
  418aa8:	add	x0, x0, #0xabc
  418aac:	bl	424ed0 <__libc_csu_fini@@Base+0x8>
  418ab0:	ldr	x19, [sp, #16]
  418ab4:	ldp	x29, x30, [sp], #32
  418ab8:	ret
  418abc:	stp	x29, x30, [sp, #-32]!
  418ac0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418ac4:	stp	x20, x19, [sp, #16]
  418ac8:	ldr	x19, [x8, #2512]
  418acc:	mov	x29, sp
  418ad0:	mov	x0, x19
  418ad4:	bl	406fa0 <ferror@plt>
  418ad8:	mov	w20, w0
  418adc:	mov	x0, x19
  418ae0:	bl	4069c0 <fclose@plt>
  418ae4:	orr	w8, w0, w20
  418ae8:	cbnz	w8, 418af8 <output_init@@Base+0xec>
  418aec:	ldp	x20, x19, [sp, #16]
  418af0:	ldp	x29, x30, [sp], #32
  418af4:	ret
  418af8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  418afc:	add	x1, x1, #0xbff
  418b00:	mov	w2, #0x5                   	// #5
  418b04:	mov	w19, w0
  418b08:	mov	x0, xzr
  418b0c:	bl	406e50 <dcgettext@plt>
  418b10:	mov	x2, x0
  418b14:	cbnz	w19, 418b2c <output_init@@Base+0x120>
  418b18:	mov	x0, xzr
  418b1c:	mov	x1, xzr
  418b20:	bl	418f84 <error@@Base>
  418b24:	mov	w0, #0x1                   	// #1
  418b28:	bl	4067f0 <exit@plt>
  418b2c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  418b30:	add	x1, x1, #0x989
  418b34:	mov	x0, x2
  418b38:	bl	41928c <perror_with_name@@Base>
  418b3c:	mov	w0, #0x1                   	// #1
  418b40:	bl	4067f0 <exit@plt>

0000000000418b44 <output_close@@Base>:
  418b44:	stp	x29, x30, [sp, #-32]!
  418b48:	str	x19, [sp, #16]
  418b4c:	mov	x29, sp
  418b50:	cbz	x0, 418b8c <output_close@@Base+0x48>
  418b54:	mov	x19, x0
  418b58:	bl	418590 <output_dump@@Base>
  418b5c:	ldr	w0, [x19]
  418b60:	tbnz	w0, #31, 418b68 <output_close@@Base+0x24>
  418b64:	bl	406ba0 <close@plt>
  418b68:	ldr	w0, [x19, #4]
  418b6c:	tbnz	w0, #31, 418b80 <output_close@@Base+0x3c>
  418b70:	ldr	w8, [x19]
  418b74:	cmp	w0, w8
  418b78:	b.eq	418b80 <output_close@@Base+0x3c>  // b.none
  418b7c:	bl	406ba0 <close@plt>
  418b80:	mov	x0, x19
  418b84:	bl	418a0c <output_init@@Base>
  418b88:	b	418ba0 <output_close@@Base+0x5c>
  418b8c:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  418b90:	ldr	w8, [x8, #1480]
  418b94:	cbz	w8, 418ba0 <output_close@@Base+0x5c>
  418b98:	mov	w0, wzr
  418b9c:	bl	418778 <output_dump@@Base+0x1e8>
  418ba0:	ldr	x19, [sp, #16]
  418ba4:	ldp	x29, x30, [sp], #32
  418ba8:	ret

0000000000418bac <output_start@@Base>:
  418bac:	stp	x29, x30, [sp, #-32]!
  418bb0:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  418bb4:	ldr	x0, [x8, #1472]
  418bb8:	stp	x20, x19, [sp, #16]
  418bbc:	mov	x29, sp
  418bc0:	cbz	x0, 418be0 <output_start@@Base+0x34>
  418bc4:	ldrb	w8, [x0, #8]
  418bc8:	tbz	w8, #0, 418be0 <output_start@@Base+0x34>
  418bcc:	ldr	w8, [x0]
  418bd0:	tbz	w8, #31, 418be0 <output_start@@Base+0x34>
  418bd4:	ldr	w8, [x0, #4]
  418bd8:	tbz	w8, #31, 418be0 <output_start@@Base+0x34>
  418bdc:	bl	418c28 <output_start@@Base+0x7c>
  418be0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418be4:	ldr	w8, [x8, #3304]
  418be8:	cmp	w8, #0x3
  418bec:	b.eq	418bf4 <output_start@@Base+0x48>  // b.none
  418bf0:	cbnz	w8, 418c1c <output_start@@Base+0x70>
  418bf4:	adrp	x19, 43d000 <stopchar_map@@Base+0x310>
  418bf8:	ldr	w8, [x19, #1480]
  418bfc:	cbnz	w8, 418c1c <output_start@@Base+0x70>
  418c00:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418c04:	ldr	w8, [x8, #3276]
  418c08:	cbz	w8, 418c1c <output_start@@Base+0x70>
  418c0c:	mov	w0, #0x1                   	// #1
  418c10:	mov	w20, #0x1                   	// #1
  418c14:	bl	418778 <output_dump@@Base+0x1e8>
  418c18:	str	w20, [x19, #1480]
  418c1c:	ldp	x20, x19, [sp, #16]
  418c20:	ldp	x29, x30, [sp], #32
  418c24:	ret
  418c28:	stp	x29, x30, [sp, #-48]!
  418c2c:	str	x21, [sp, #16]
  418c30:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  418c34:	ldr	w8, [x21, #2404]
  418c38:	stp	x20, x19, [sp, #32]
  418c3c:	mov	x19, x0
  418c40:	mov	x29, sp
  418c44:	tbz	w8, #31, 418c50 <output_start@@Base+0xa4>
  418c48:	bl	419378 <out_of_memory@@Base+0x60>
  418c4c:	str	w0, [x21, #2404]
  418c50:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418c54:	ldr	x0, [x8, #2512]
  418c58:	bl	406980 <fileno@plt>
  418c5c:	mov	w1, #0x1                   	// #1
  418c60:	bl	424a0c <rpl_fcntl@@Base>
  418c64:	cmn	w0, #0x1
  418c68:	b.ne	418c7c <output_start@@Base+0xd0>  // b.any
  418c6c:	bl	406f00 <__errno_location@plt>
  418c70:	ldr	w8, [x0]
  418c74:	cmp	w8, #0x9
  418c78:	b.eq	418c90 <output_start@@Base+0xe4>  // b.none
  418c7c:	bl	418454 <output_tmpfd@@Base>
  418c80:	tbnz	w0, #31, 418cf0 <output_start@@Base+0x144>
  418c84:	mov	w20, w0
  418c88:	bl	424098 <fd_noinherit@@Base>
  418c8c:	str	w20, [x19]
  418c90:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418c94:	ldr	x0, [x8, #2488]
  418c98:	bl	406980 <fileno@plt>
  418c9c:	mov	w1, #0x1                   	// #1
  418ca0:	bl	424a0c <rpl_fcntl@@Base>
  418ca4:	cmn	w0, #0x1
  418ca8:	b.ne	418cbc <output_start@@Base+0x110>  // b.any
  418cac:	bl	406f00 <__errno_location@plt>
  418cb0:	ldr	w8, [x0]
  418cb4:	cmp	w8, #0x9
  418cb8:	b.eq	418d00 <output_start@@Base+0x154>  // b.none
  418cbc:	ldr	w8, [x19]
  418cc0:	cmn	w8, #0x1
  418cc4:	b.eq	418cd8 <output_start@@Base+0x12c>  // b.none
  418cc8:	ldr	w9, [x21, #2404]
  418ccc:	cbz	w9, 418cd8 <output_start@@Base+0x12c>
  418cd0:	str	w8, [x19, #4]
  418cd4:	b	418d00 <output_start@@Base+0x154>
  418cd8:	bl	418454 <output_tmpfd@@Base>
  418cdc:	tbnz	w0, #31, 418cf0 <output_start@@Base+0x144>
  418ce0:	mov	w20, w0
  418ce4:	bl	424098 <fd_noinherit@@Base>
  418ce8:	str	w20, [x19, #4]
  418cec:	b	418d00 <output_start@@Base+0x154>
  418cf0:	mov	x0, x19
  418cf4:	bl	418b44 <output_close@@Base>
  418cf8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418cfc:	str	wzr, [x8, #3304]
  418d00:	ldp	x20, x19, [sp, #32]
  418d04:	ldr	x21, [sp, #16]
  418d08:	ldp	x29, x30, [sp], #48
  418d0c:	ret

0000000000418d10 <outputs@@Base>:
  418d10:	stp	x29, x30, [sp, #-32]!
  418d14:	stp	x20, x19, [sp, #16]
  418d18:	mov	x29, sp
  418d1c:	cbz	x1, 418d48 <outputs@@Base+0x38>
  418d20:	ldrb	w8, [x1]
  418d24:	mov	x19, x1
  418d28:	cbz	w8, 418d48 <outputs@@Base+0x38>
  418d2c:	mov	w20, w0
  418d30:	bl	418bac <output_start@@Base>
  418d34:	adrp	x8, 43d000 <stopchar_map@@Base+0x310>
  418d38:	ldr	x0, [x8, #1472]
  418d3c:	mov	w1, w20
  418d40:	mov	x2, x19
  418d44:	bl	418d54 <outputs@@Base+0x44>
  418d48:	ldp	x20, x19, [sp, #16]
  418d4c:	ldp	x29, x30, [sp], #32
  418d50:	ret
  418d54:	stp	x29, x30, [sp, #-48]!
  418d58:	stp	x20, x19, [sp, #32]
  418d5c:	mov	x19, x2
  418d60:	str	x21, [sp, #16]
  418d64:	mov	x29, sp
  418d68:	cbz	x0, 418d74 <outputs@@Base+0x64>
  418d6c:	ldrb	w8, [x0, #8]
  418d70:	tbnz	w8, #0, 418da8 <outputs@@Base+0x98>
  418d74:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  418d78:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  418d7c:	add	x8, x8, #0x9b8
  418d80:	add	x9, x9, #0x9d0
  418d84:	cmp	w1, #0x0
  418d88:	csel	x8, x9, x8, eq  // eq = none
  418d8c:	ldr	x20, [x8]
  418d90:	mov	x0, x19
  418d94:	mov	x1, x20
  418d98:	bl	4067e0 <fputs@plt>
  418d9c:	mov	x0, x20
  418da0:	bl	406d80 <fflush@plt>
  418da4:	b	418df8 <outputs@@Base+0xe8>
  418da8:	cmp	w1, #0x0
  418dac:	cset	w8, ne  // ne = any
  418db0:	ldr	w20, [x0, w8, uxtw #2]
  418db4:	mov	x0, x19
  418db8:	bl	4067d0 <strlen@plt>
  418dbc:	mov	x21, x0
  418dc0:	mov	w2, #0x2                   	// #2
  418dc4:	mov	w0, w20
  418dc8:	mov	x1, xzr
  418dcc:	bl	406930 <lseek@plt>
  418dd0:	cmn	w0, #0x1
  418dd4:	b.ne	418de8 <outputs@@Base+0xd8>  // b.any
  418dd8:	bl	406f00 <__errno_location@plt>
  418ddc:	ldr	w8, [x0]
  418de0:	cmp	w8, #0x4
  418de4:	b.eq	418dc0 <outputs@@Base+0xb0>  // b.none
  418de8:	mov	w0, w20
  418dec:	mov	x1, x19
  418df0:	mov	x2, x21
  418df4:	bl	4181b4 <writebuf@@Base>
  418df8:	ldp	x20, x19, [sp, #32]
  418dfc:	ldr	x21, [sp, #16]
  418e00:	ldp	x29, x30, [sp], #48
  418e04:	ret

0000000000418e08 <message@@Base>:
  418e08:	sub	sp, sp, #0x130
  418e0c:	stp	x29, x30, [sp, #240]
  418e10:	stp	x22, x21, [sp, #272]
  418e14:	add	x29, sp, #0xf0
  418e18:	mov	w21, w0
  418e1c:	mov	x0, x2
  418e20:	stp	x28, x23, [sp, #256]
  418e24:	stp	x20, x19, [sp, #288]
  418e28:	mov	x19, x2
  418e2c:	mov	x20, x1
  418e30:	stp	x3, x4, [x29, #-104]
  418e34:	stp	x5, x6, [x29, #-88]
  418e38:	stur	x7, [x29, #-72]
  418e3c:	stp	q1, q2, [sp, #16]
  418e40:	stp	q3, q4, [sp, #48]
  418e44:	str	q0, [sp]
  418e48:	stp	q5, q6, [sp, #80]
  418e4c:	str	q7, [sp, #112]
  418e50:	bl	4067d0 <strlen@plt>
  418e54:	adrp	x23, 440000 <shell_var@@Base+0x18>
  418e58:	ldr	x8, [x23, #48]
  418e5c:	mov	x22, x0
  418e60:	mov	x0, x8
  418e64:	bl	4067d0 <strlen@plt>
  418e68:	add	x8, x20, x22
  418e6c:	add	x8, x8, x0
  418e70:	add	x0, x8, #0x1a
  418e74:	bl	418f34 <message@@Base+0x12c>
  418e78:	mov	x20, x0
  418e7c:	cbz	w21, 418ec0 <message@@Base+0xb8>
  418e80:	adrp	x8, 440000 <shell_var@@Base+0x18>
  418e84:	ldr	w3, [x8, #64]
  418e88:	ldr	x2, [x23, #48]
  418e8c:	cbz	w3, 418ea4 <message@@Base+0x9c>
  418e90:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  418e94:	add	x1, x1, #0xa6b
  418e98:	mov	x0, x20
  418e9c:	bl	406870 <sprintf@plt>
  418ea0:	b	418eb4 <message@@Base+0xac>
  418ea4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  418ea8:	add	x1, x1, #0xa66
  418eac:	mov	x0, x20
  418eb0:	bl	406870 <sprintf@plt>
  418eb4:	mov	x0, x20
  418eb8:	bl	4067d0 <strlen@plt>
  418ebc:	add	x20, x20, x0
  418ec0:	mov	x8, #0xffffffffffffffd8    	// #-40
  418ec4:	mov	x10, sp
  418ec8:	sub	x11, x29, #0x68
  418ecc:	movk	x8, #0xff80, lsl #32
  418ed0:	add	x9, x29, #0x40
  418ed4:	add	x10, x10, #0x80
  418ed8:	add	x11, x11, #0x28
  418edc:	stp	x10, x8, [x29, #-16]
  418ee0:	stp	x9, x11, [x29, #-32]
  418ee4:	ldp	q0, q1, [x29, #-32]
  418ee8:	sub	x2, x29, #0x40
  418eec:	mov	x0, x20
  418ef0:	mov	x1, x19
  418ef4:	stp	q0, q1, [x29, #-64]
  418ef8:	bl	406db0 <vsprintf@plt>
  418efc:	mov	x0, x20
  418f00:	bl	4067d0 <strlen@plt>
  418f04:	mov	w8, #0xa                   	// #10
  418f08:	strh	w8, [x20, x0]
  418f0c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  418f10:	ldr	x1, [x8, #1536]
  418f14:	mov	w0, wzr
  418f18:	bl	418d10 <outputs@@Base>
  418f1c:	ldp	x20, x19, [sp, #288]
  418f20:	ldp	x22, x21, [sp, #272]
  418f24:	ldp	x28, x23, [sp, #256]
  418f28:	ldp	x29, x30, [sp, #240]
  418f2c:	add	sp, sp, #0x130
  418f30:	ret
  418f34:	stp	x29, x30, [sp, #-32]!
  418f38:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  418f3c:	ldr	x9, [x8, #1544]
  418f40:	stp	x20, x19, [sp, #16]
  418f44:	mov	x19, x0
  418f48:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  418f4c:	cmp	x9, x0
  418f50:	mov	x29, sp
  418f54:	b.cs	418f6c <message@@Base+0x164>  // b.hs, b.nlast
  418f58:	ldr	x0, [x20, #1536]
  418f5c:	add	x1, x9, x19, lsl #1
  418f60:	str	x1, [x8, #1544]
  418f64:	bl	41803c <xrealloc@@Base>
  418f68:	str	x0, [x20, #1536]
  418f6c:	ldr	x0, [x20, #1536]
  418f70:	add	x8, x19, x0
  418f74:	sturb	wzr, [x8, #-1]
  418f78:	ldp	x20, x19, [sp, #16]
  418f7c:	ldp	x29, x30, [sp], #32
  418f80:	ret

0000000000418f84 <error@@Base>:
  418f84:	sub	sp, sp, #0x140
  418f88:	stp	x29, x30, [sp, #240]
  418f8c:	stp	x20, x19, [sp, #304]
  418f90:	add	x29, sp, #0xf0
  418f94:	mov	x20, x0
  418f98:	mov	x0, x2
  418f9c:	str	x28, [sp, #256]
  418fa0:	stp	x24, x23, [sp, #272]
  418fa4:	stp	x22, x21, [sp, #288]
  418fa8:	mov	x19, x2
  418fac:	mov	x21, x1
  418fb0:	stp	x3, x4, [x29, #-104]
  418fb4:	stp	x5, x6, [x29, #-88]
  418fb8:	stur	x7, [x29, #-72]
  418fbc:	stp	q1, q2, [sp, #16]
  418fc0:	stp	q3, q4, [sp, #48]
  418fc4:	str	q0, [sp]
  418fc8:	stp	q5, q6, [sp, #80]
  418fcc:	str	q7, [sp, #112]
  418fd0:	bl	4067d0 <strlen@plt>
  418fd4:	adrp	x24, 440000 <shell_var@@Base+0x18>
  418fd8:	ldr	x8, [x24, #48]
  418fdc:	mov	x22, x0
  418fe0:	mov	x0, x8
  418fe4:	bl	4067d0 <strlen@plt>
  418fe8:	mov	x23, x0
  418fec:	cbz	x20, 419000 <error@@Base+0x7c>
  418ff0:	ldr	x0, [x20]
  418ff4:	cbz	x0, 419004 <error@@Base+0x80>
  418ff8:	bl	4067d0 <strlen@plt>
  418ffc:	b	419004 <error@@Base+0x80>
  419000:	mov	x0, xzr
  419004:	add	x8, x21, x22
  419008:	add	x8, x8, x23
  41900c:	add	x8, x8, x0
  419010:	add	x0, x8, #0x1a
  419014:	bl	418f34 <message@@Base+0x12c>
  419018:	mov	x21, x0
  41901c:	cbz	x20, 419044 <error@@Base+0xc0>
  419020:	ldr	x2, [x20]
  419024:	cbz	x2, 419044 <error@@Base+0xc0>
  419028:	ldp	x8, x9, [x20, #8]
  41902c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419030:	add	x1, x1, #0xa74
  419034:	mov	x0, x21
  419038:	add	x3, x9, x8
  41903c:	bl	406870 <sprintf@plt>
  419040:	b	419078 <error@@Base+0xf4>
  419044:	adrp	x8, 440000 <shell_var@@Base+0x18>
  419048:	ldr	w3, [x8, #64]
  41904c:	ldr	x2, [x24, #48]
  419050:	cbz	w3, 419068 <error@@Base+0xe4>
  419054:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419058:	add	x1, x1, #0xa6b
  41905c:	mov	x0, x21
  419060:	bl	406870 <sprintf@plt>
  419064:	b	419078 <error@@Base+0xf4>
  419068:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41906c:	add	x1, x1, #0xa66
  419070:	mov	x0, x21
  419074:	bl	406870 <sprintf@plt>
  419078:	mov	x0, x21
  41907c:	bl	4067d0 <strlen@plt>
  419080:	sub	x9, x29, #0x68
  419084:	add	x8, x29, #0x50
  419088:	add	x9, x9, #0x28
  41908c:	mov	x10, sp
  419090:	stp	x8, x9, [x29, #-32]
  419094:	mov	x8, #0xffffffffffffffd8    	// #-40
  419098:	movk	x8, #0xff80, lsl #32
  41909c:	add	x9, x10, #0x80
  4190a0:	stp	x9, x8, [x29, #-16]
  4190a4:	ldp	q0, q1, [x29, #-32]
  4190a8:	add	x20, x21, x0
  4190ac:	sub	x2, x29, #0x40
  4190b0:	mov	x0, x20
  4190b4:	mov	x1, x19
  4190b8:	stp	q0, q1, [x29, #-64]
  4190bc:	bl	406db0 <vsprintf@plt>
  4190c0:	mov	x0, x20
  4190c4:	bl	4067d0 <strlen@plt>
  4190c8:	mov	w8, #0xa                   	// #10
  4190cc:	strh	w8, [x20, x0]
  4190d0:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4190d4:	ldr	x1, [x8, #1536]
  4190d8:	mov	w0, #0x1                   	// #1
  4190dc:	bl	418d10 <outputs@@Base>
  4190e0:	ldp	x20, x19, [sp, #304]
  4190e4:	ldp	x22, x21, [sp, #288]
  4190e8:	ldp	x24, x23, [sp, #272]
  4190ec:	ldr	x28, [sp, #256]
  4190f0:	ldp	x29, x30, [sp, #240]
  4190f4:	add	sp, sp, #0x140
  4190f8:	ret

00000000004190fc <fatal@@Base>:
  4190fc:	sub	sp, sp, #0x150
  419100:	stp	x22, x21, [sp, #304]
  419104:	mov	x22, x1
  419108:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41910c:	stp	x29, x30, [sp, #240]
  419110:	stp	x20, x19, [sp, #320]
  419114:	add	x29, sp, #0xf0
  419118:	mov	x19, x2
  41911c:	mov	x21, x0
  419120:	add	x1, x1, #0xa7d
  419124:	mov	w2, #0x5                   	// #5
  419128:	mov	x0, xzr
  41912c:	str	x28, [sp, #256]
  419130:	stp	x26, x25, [sp, #272]
  419134:	stp	x24, x23, [sp, #288]
  419138:	stp	x3, x4, [x29, #-104]
  41913c:	stp	x5, x6, [x29, #-88]
  419140:	stur	x7, [x29, #-72]
  419144:	stp	q1, q2, [sp, #16]
  419148:	stp	q3, q4, [sp, #48]
  41914c:	str	q0, [sp]
  419150:	stp	q5, q6, [sp, #80]
  419154:	str	q7, [sp, #112]
  419158:	bl	406e50 <dcgettext@plt>
  41915c:	mov	x20, x0
  419160:	mov	x0, x19
  419164:	bl	4067d0 <strlen@plt>
  419168:	adrp	x26, 440000 <shell_var@@Base+0x18>
  41916c:	ldr	x8, [x26, #48]
  419170:	mov	x23, x0
  419174:	mov	x0, x8
  419178:	bl	4067d0 <strlen@plt>
  41917c:	mov	x24, x0
  419180:	mov	x25, xzr
  419184:	cbz	x21, 4191a0 <fatal@@Base+0xa4>
  419188:	ldr	x0, [x21]
  41918c:	cbnz	x0, 419198 <fatal@@Base+0x9c>
  419190:	mov	x25, xzr
  419194:	b	4191a0 <fatal@@Base+0xa4>
  419198:	bl	4067d0 <strlen@plt>
  41919c:	mov	x25, x0
  4191a0:	mov	x0, x20
  4191a4:	bl	4067d0 <strlen@plt>
  4191a8:	add	x8, x22, x23
  4191ac:	add	x8, x8, x24
  4191b0:	add	x8, x8, x25
  4191b4:	add	x8, x8, x0
  4191b8:	add	x0, x8, #0x1d
  4191bc:	bl	418f34 <message@@Base+0x12c>
  4191c0:	mov	x22, x0
  4191c4:	cbz	x21, 4191d0 <fatal@@Base+0xd4>
  4191c8:	ldr	x2, [x21]
  4191cc:	cbnz	x2, 419208 <fatal@@Base+0x10c>
  4191d0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4191d4:	ldr	w3, [x8, #64]
  4191d8:	ldr	x2, [x26, #48]
  4191dc:	cbnz	w3, 4191f4 <fatal@@Base+0xf8>
  4191e0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4191e4:	add	x1, x1, #0xa94
  4191e8:	mov	x0, x22
  4191ec:	bl	406870 <sprintf@plt>
  4191f0:	b	419220 <fatal@@Base+0x124>
  4191f4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4191f8:	add	x1, x1, #0xa9d
  4191fc:	mov	x0, x22
  419200:	bl	406870 <sprintf@plt>
  419204:	b	419220 <fatal@@Base+0x124>
  419208:	ldp	x8, x9, [x21, #8]
  41920c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419210:	add	x1, x1, #0xa87
  419214:	mov	x0, x22
  419218:	add	x3, x9, x8
  41921c:	bl	406870 <sprintf@plt>
  419220:	mov	x0, x22
  419224:	bl	4067d0 <strlen@plt>
  419228:	sub	x9, x29, #0x68
  41922c:	add	x8, x29, #0x60
  419230:	add	x9, x9, #0x28
  419234:	mov	x10, sp
  419238:	stp	x8, x9, [x29, #-32]
  41923c:	mov	x8, #0xffffffffffffffd8    	// #-40
  419240:	movk	x8, #0xff80, lsl #32
  419244:	add	x9, x10, #0x80
  419248:	stp	x9, x8, [x29, #-16]
  41924c:	ldp	q0, q1, [x29, #-32]
  419250:	add	x21, x22, x0
  419254:	sub	x2, x29, #0x40
  419258:	mov	x0, x21
  41925c:	mov	x1, x19
  419260:	stp	q0, q1, [x29, #-64]
  419264:	bl	406db0 <vsprintf@plt>
  419268:	mov	x0, x21
  41926c:	mov	x1, x20
  419270:	bl	406aa0 <strcat@plt>
  419274:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  419278:	ldr	x1, [x8, #1536]
  41927c:	mov	w0, #0x1                   	// #1
  419280:	bl	418d10 <outputs@@Base>
  419284:	mov	w0, #0x2                   	// #2
  419288:	bl	416ce8 <die@@Base>

000000000041928c <perror_with_name@@Base>:
  41928c:	stp	x29, x30, [sp, #-48]!
  419290:	stp	x22, x21, [sp, #16]
  419294:	stp	x20, x19, [sp, #32]
  419298:	mov	x29, sp
  41929c:	mov	x19, x1
  4192a0:	mov	x20, x0
  4192a4:	bl	406f00 <__errno_location@plt>
  4192a8:	ldr	w0, [x0]
  4192ac:	bl	406b90 <strerror@plt>
  4192b0:	mov	x21, x0
  4192b4:	mov	x0, x20
  4192b8:	bl	4067d0 <strlen@plt>
  4192bc:	mov	x22, x0
  4192c0:	mov	x0, x19
  4192c4:	bl	4067d0 <strlen@plt>
  4192c8:	add	x22, x0, x22
  4192cc:	mov	x0, x21
  4192d0:	bl	4067d0 <strlen@plt>
  4192d4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4192d8:	add	x22, x22, x0
  4192dc:	add	x1, x1, #0xaaa
  4192e0:	mov	w2, #0x5                   	// #5
  4192e4:	mov	x0, xzr
  4192e8:	bl	406e50 <dcgettext@plt>
  4192ec:	mov	x2, x0
  4192f0:	mov	x0, xzr
  4192f4:	mov	x1, x22
  4192f8:	mov	x3, x20
  4192fc:	mov	x4, x19
  419300:	mov	x5, x21
  419304:	bl	418f84 <error@@Base>
  419308:	ldp	x20, x19, [sp, #32]
  41930c:	ldp	x22, x21, [sp, #16]
  419310:	ldp	x29, x30, [sp], #48
  419314:	ret

0000000000419318 <out_of_memory@@Base>:
  419318:	stp	x29, x30, [sp, #-48]!
  41931c:	str	x21, [sp, #16]
  419320:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  419324:	ldr	x0, [x21, #2512]
  419328:	stp	x20, x19, [sp, #32]
  41932c:	mov	x29, sp
  419330:	bl	406980 <fileno@plt>
  419334:	adrp	x8, 440000 <shell_var@@Base+0x18>
  419338:	ldr	x19, [x8, #48]
  41933c:	mov	w20, w0
  419340:	mov	x0, x19
  419344:	bl	4067d0 <strlen@plt>
  419348:	mov	x2, x0
  41934c:	mov	w0, w20
  419350:	mov	x1, x19
  419354:	bl	4181b4 <writebuf@@Base>
  419358:	ldr	x0, [x21, #2512]
  41935c:	bl	406980 <fileno@plt>
  419360:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419364:	add	x1, x1, #0xab3
  419368:	mov	w2, #0x1f                  	// #31
  41936c:	bl	4181b4 <writebuf@@Base>
  419370:	mov	w0, #0x2                   	// #2
  419374:	bl	4067f0 <exit@plt>
  419378:	sub	sp, sp, #0x130
  41937c:	stp	x20, x19, [sp, #288]
  419380:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  419384:	ldr	x0, [x20, #2512]
  419388:	stp	x29, x30, [sp, #256]
  41938c:	str	x28, [sp, #272]
  419390:	add	x29, sp, #0x100
  419394:	bl	406980 <fileno@plt>
  419398:	mov	w1, #0x1                   	// #1
  41939c:	bl	424a0c <rpl_fcntl@@Base>
  4193a0:	cmn	w0, #0x1
  4193a4:	b.ne	419408 <out_of_memory@@Base+0xf0>  // b.any
  4193a8:	bl	406f00 <__errno_location@plt>
  4193ac:	ldr	w8, [x0]
  4193b0:	cmp	w8, #0x9
  4193b4:	b.ne	419408 <out_of_memory@@Base+0xf0>  // b.any
  4193b8:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4193bc:	mov	x19, x0
  4193c0:	ldr	x0, [x20, #2488]
  4193c4:	bl	406980 <fileno@plt>
  4193c8:	mov	w1, #0x1                   	// #1
  4193cc:	bl	424a0c <rpl_fcntl@@Base>
  4193d0:	cmn	w0, #0x1
  4193d4:	b.ne	419484 <out_of_memory@@Base+0x16c>  // b.any
  4193d8:	ldr	w8, [x19]
  4193dc:	cmp	w8, #0x9
  4193e0:	b.ne	419484 <out_of_memory@@Base+0x16c>  // b.any
  4193e4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  4193e8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4193ec:	add	x0, x0, #0xc13
  4193f0:	add	x1, x1, #0xc2c
  4193f4:	bl	41928c <perror_with_name@@Base>
  4193f8:	mov	w0, wzr
  4193fc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  419400:	str	wzr, [x8, #3304]
  419404:	b	419470 <out_of_memory@@Base+0x158>
  419408:	ldr	x0, [x20, #2512]
  41940c:	bl	406980 <fileno@plt>
  419410:	ldr	x8, [x20, #2512]
  419414:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  419418:	str	w0, [x9, #2400]
  41941c:	mov	x0, x8
  419420:	bl	406980 <fileno@plt>
  419424:	add	x1, sp, #0x80
  419428:	bl	424ef0 <__libc_csu_fini@@Base+0x28>
  41942c:	cbnz	w0, 41946c <out_of_memory@@Base+0x154>
  419430:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  419434:	ldr	x0, [x8, #2488]
  419438:	bl	406980 <fileno@plt>
  41943c:	mov	x1, sp
  419440:	bl	424ef0 <__libc_csu_fini@@Base+0x28>
  419444:	cbnz	w0, 41946c <out_of_memory@@Base+0x154>
  419448:	ldr	x8, [sp, #128]
  41944c:	ldr	x9, [sp]
  419450:	cmp	x8, x9
  419454:	b.ne	41946c <out_of_memory@@Base+0x154>  // b.any
  419458:	ldr	x8, [sp, #136]
  41945c:	ldr	x9, [sp, #8]
  419460:	cmp	x8, x9
  419464:	cset	w0, eq  // eq = none
  419468:	b	419470 <out_of_memory@@Base+0x158>
  41946c:	mov	w0, wzr
  419470:	ldp	x20, x19, [sp, #288]
  419474:	ldr	x28, [sp, #272]
  419478:	ldp	x29, x30, [sp, #256]
  41947c:	add	sp, sp, #0x130
  419480:	ret
  419484:	ldr	x0, [x20, #2488]
  419488:	bl	406980 <fileno@plt>
  41948c:	mov	w8, w0
  419490:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  419494:	mov	w0, wzr
  419498:	str	w8, [x9, #2400]
  41949c:	b	419470 <out_of_memory@@Base+0x158>

00000000004194a0 <read_all_makefiles@@Base>:
  4194a0:	sub	sp, sp, #0x50
  4194a4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4194a8:	ldr	x8, [x8, #2440]
  4194ac:	stp	x29, x30, [sp, #16]
  4194b0:	stp	x24, x23, [sp, #32]
  4194b4:	stp	x22, x21, [sp, #48]
  4194b8:	stp	x20, x19, [sp, #64]
  4194bc:	ldr	x5, [x8, #8]
  4194c0:	mov	x19, x0
  4194c4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  4194c8:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  4194cc:	add	x0, x0, #0xa48
  4194d0:	add	x2, x2, #0x989
  4194d4:	mov	w1, #0xd                   	// #13
  4194d8:	mov	w3, #0x2                   	// #2
  4194dc:	mov	w4, wzr
  4194e0:	mov	x6, xzr
  4194e4:	add	x29, sp, #0x10
  4194e8:	bl	421720 <define_variable_in_set@@Base>
  4194ec:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4194f0:	ldrb	w8, [x8, #3236]
  4194f4:	tbz	w8, #0, 41951c <read_all_makefiles@@Base+0x7c>
  4194f8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4194fc:	add	x1, x1, #0xd20
  419500:	mov	w2, #0x5                   	// #5
  419504:	mov	x0, xzr
  419508:	bl	406e50 <dcgettext@plt>
  41950c:	bl	406ef0 <printf@plt>
  419510:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  419514:	ldr	x0, [x8, #2512]
  419518:	bl	406d80 <fflush@plt>
  41951c:	adrp	x21, 440000 <shell_var@@Base+0x18>
  419520:	ldr	w22, [x21, #96]
  419524:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  419528:	add	x0, x0, #0xd36
  41952c:	mov	x1, xzr
  419530:	str	wzr, [x21, #96]
  419534:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  419538:	mov	x20, x0
  41953c:	str	w22, [x21, #96]
  419540:	str	x0, [sp, #8]
  419544:	b	419554 <read_all_makefiles@@Base+0xb4>
  419548:	bl	420f28 <strcache_add@@Base>
  41954c:	mov	w1, #0x7                   	// #7
  419550:	bl	4196d0 <read_all_makefiles@@Base+0x230>
  419554:	add	x0, sp, #0x8
  419558:	mov	x1, sp
  41955c:	bl	418158 <find_next_token@@Base>
  419560:	cbz	x0, 419580 <read_all_makefiles@@Base+0xe0>
  419564:	ldr	x8, [sp, #8]
  419568:	ldrb	w9, [x8]
  41956c:	cbz	w9, 419548 <read_all_makefiles@@Base+0xa8>
  419570:	add	x9, x8, #0x1
  419574:	str	x9, [sp, #8]
  419578:	strb	wzr, [x8]
  41957c:	b	419548 <read_all_makefiles@@Base+0xa8>
  419580:	mov	x0, x20
  419584:	bl	406cf0 <free@plt>
  419588:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  41958c:	cbz	x19, 4195f8 <read_all_makefiles@@Base+0x158>
  419590:	ldr	x0, [x19]
  419594:	cbz	x0, 4195f8 <read_all_makefiles@@Base+0x158>
  419598:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x20e0>
  41959c:	mov	x23, xzr
  4195a0:	add	x20, x20, #0x989
  4195a4:	b	4195bc <read_all_makefiles@@Base+0x11c>
  4195a8:	add	x9, x19, x23, lsl #3
  4195ac:	ldr	x0, [x9, #8]
  4195b0:	add	x23, x23, #0x1
  4195b4:	str	x8, [x9]
  4195b8:	cbz	x0, 4195f4 <read_all_makefiles@@Base+0x154>
  4195bc:	mov	w1, wzr
  4195c0:	bl	4196d0 <read_all_makefiles@@Base+0x230>
  4195c4:	mov	x21, x0
  4195c8:	bl	406f00 <__errno_location@plt>
  4195cc:	ldr	w8, [x0]
  4195d0:	cbz	w8, 4195e0 <read_all_makefiles@@Base+0x140>
  4195d4:	ldr	x1, [x19, x23, lsl #3]
  4195d8:	mov	x0, x20
  4195dc:	bl	41928c <perror_with_name@@Base>
  4195e0:	ldr	x8, [x21, #8]
  4195e4:	cbnz	x8, 4195a8 <read_all_makefiles@@Base+0x108>
  4195e8:	ldr	x8, [x21, #16]
  4195ec:	ldr	x8, [x8]
  4195f0:	b	4195a8 <read_all_makefiles@@Base+0x108>
  4195f4:	cbnz	w23, 4196b4 <read_all_makefiles@@Base+0x214>
  4195f8:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x40e0>
  4195fc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  419600:	add	x19, x19, #0xcd8
  419604:	add	x0, x0, #0xd43
  419608:	bl	4093a0 <file_exists_p@@Base>
  41960c:	cbnz	w0, 419618 <read_all_makefiles@@Base+0x178>
  419610:	ldr	x0, [x19, #8]!
  419614:	cbnz	x0, 419608 <read_all_makefiles@@Base+0x168>
  419618:	ldr	x0, [x19]
  41961c:	cbz	x0, 419648 <read_all_makefiles@@Base+0x1a8>
  419620:	mov	w1, wzr
  419624:	bl	4196d0 <read_all_makefiles@@Base+0x230>
  419628:	bl	406f00 <__errno_location@plt>
  41962c:	ldr	w8, [x0]
  419630:	cbz	w8, 4196b4 <read_all_makefiles@@Base+0x214>
  419634:	ldr	x1, [x19]
  419638:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  41963c:	add	x0, x0, #0x989
  419640:	bl	41928c <perror_with_name@@Base>
  419644:	b	4196b4 <read_all_makefiles@@Base+0x214>
  419648:	ldr	x8, [x22, #1560]
  41964c:	mov	x20, x8
  419650:	cbz	x8, 41965c <read_all_makefiles@@Base+0x1bc>
  419654:	ldr	x8, [x20]
  419658:	cbnz	x8, 41964c <read_all_makefiles@@Base+0x1ac>
  41965c:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x40e0>
  419660:	adrp	x24, 43f000 <stdio_traced@@Base+0x1a38>
  419664:	add	x21, x21, #0xce0
  419668:	mov	w23, #0x4                   	// #4
  41966c:	add	x24, x24, #0x618
  419670:	mov	w0, #0x40                  	// #64
  419674:	bl	418094 <xcalloc@@Base>
  419678:	ldur	x8, [x21, #-8]
  41967c:	mov	x19, x0
  419680:	mov	x0, x8
  419684:	bl	420f28 <strcache_add@@Base>
  419688:	bl	40a830 <enter_file@@Base>
  41968c:	cmp	x20, #0x0
  419690:	csel	x8, x24, x20, eq  // eq = none
  419694:	str	x0, [x19, #16]
  419698:	strb	w23, [x19, #32]
  41969c:	str	x19, [x8]
  4196a0:	ldr	x8, [x21], #8
  4196a4:	mov	x20, x19
  4196a8:	cbnz	x8, 419670 <read_all_makefiles@@Base+0x1d0>
  4196ac:	cbz	x19, 4196b4 <read_all_makefiles@@Base+0x214>
  4196b0:	str	xzr, [x19]
  4196b4:	ldr	x0, [x22, #1560]
  4196b8:	ldp	x20, x19, [sp, #64]
  4196bc:	ldp	x22, x21, [sp, #48]
  4196c0:	ldp	x24, x23, [sp, #32]
  4196c4:	ldp	x29, x30, [sp, #16]
  4196c8:	add	sp, sp, #0x50
  4196cc:	ret
  4196d0:	sub	sp, sp, #0xb0
  4196d4:	stp	x22, x21, [sp, #144]
  4196d8:	mov	x21, x0
  4196dc:	mov	w0, #0x40                  	// #64
  4196e0:	stp	x29, x30, [sp, #80]
  4196e4:	stp	x28, x27, [sp, #96]
  4196e8:	stp	x26, x25, [sp, #112]
  4196ec:	stp	x24, x23, [sp, #128]
  4196f0:	stp	x20, x19, [sp, #160]
  4196f4:	add	x29, sp, #0x50
  4196f8:	mov	w20, w1
  4196fc:	bl	418094 <xcalloc@@Base>
  419700:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  419704:	ldr	x9, [x8, #1560]
  419708:	mov	x19, x0
  41970c:	add	x22, sp, #0x10
  419710:	str	x9, [x0]
  419714:	str	x0, [x8, #1560]
  419718:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41971c:	ldrb	w8, [x8, #3236]
  419720:	mov	w9, #0x1                   	// #1
  419724:	stp	x21, x9, [sp, #56]
  419728:	str	xzr, [sp, #72]
  41972c:	tbz	w8, #1, 419784 <read_all_makefiles@@Base+0x2e4>
  419730:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419734:	add	x1, x1, #0xd77
  419738:	mov	w2, #0x5                   	// #5
  41973c:	mov	x0, xzr
  419740:	bl	406e50 <dcgettext@plt>
  419744:	mov	x1, x21
  419748:	bl	406ef0 <printf@plt>
  41974c:	and	w23, w20, #0xffff
  419750:	tbnz	w20, #0, 419990 <read_all_makefiles@@Base+0x4f0>
  419754:	tbnz	w23, #1, 4199ac <read_all_makefiles@@Base+0x50c>
  419758:	tbnz	w23, #2, 4199c8 <read_all_makefiles@@Base+0x528>
  41975c:	tbz	w23, #3, 419778 <read_all_makefiles@@Base+0x2d8>
  419760:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419764:	add	x1, x1, #0xdbd
  419768:	mov	w2, #0x5                   	// #5
  41976c:	mov	x0, xzr
  419770:	bl	406e50 <dcgettext@plt>
  419774:	bl	406ef0 <printf@plt>
  419778:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  41977c:	add	x0, x0, #0x713
  419780:	bl	406c40 <puts@plt>
  419784:	add	x8, x22, #0x28
  419788:	and	w22, w20, #0xffff
  41978c:	str	x8, [sp, #8]
  419790:	tbnz	w20, #3, 4197b8 <read_all_makefiles@@Base+0x318>
  419794:	ldrb	w8, [x21]
  419798:	cmp	w8, #0x7e
  41979c:	b.ne	4197b8 <read_all_makefiles@@Base+0x318>  // b.any
  4197a0:	mov	x0, x21
  4197a4:	bl	41b318 <tilde_expand@@Base>
  4197a8:	cmp	x0, #0x0
  4197ac:	mov	x24, x0
  4197b0:	csel	x21, x21, x0, eq  // eq = none
  4197b4:	b	4197bc <read_all_makefiles@@Base+0x31c>
  4197b8:	mov	x24, xzr
  4197bc:	bl	406f00 <__errno_location@plt>
  4197c0:	adrp	x25, 425000 <_IO_stdin_used@@Base+0xe0>
  4197c4:	mov	x23, x0
  4197c8:	add	x25, x25, #0xd0a
  4197cc:	str	wzr, [x0]
  4197d0:	mov	x0, x21
  4197d4:	mov	x1, x25
  4197d8:	str	wzr, [x23]
  4197dc:	bl	4069f0 <fopen@plt>
  4197e0:	str	x0, [sp, #48]
  4197e4:	cbnz	x0, 4197f4 <read_all_makefiles@@Base+0x354>
  4197e8:	ldr	w8, [x23]
  4197ec:	cmp	w8, #0x4
  4197f0:	b.eq	4197d0 <read_all_makefiles@@Base+0x330>  // b.none
  4197f4:	ldr	w8, [x23]
  4197f8:	cmp	w8, #0x18
  4197fc:	str	w8, [x19, #36]
  419800:	b.hi	41981c <read_all_makefiles@@Base+0x37c>  // b.pmore
  419804:	mov	w9, #0x1                   	// #1
  419808:	mov	w10, #0x1000                	// #4096
  41980c:	lsl	w9, w9, w8
  419810:	movk	w10, #0x180, lsl #16
  419814:	tst	w9, w10
  419818:	b.ne	4199e8 <read_all_makefiles@@Base+0x548>  // b.any
  41981c:	str	w22, [sp, #4]
  419820:	tbz	w22, #1, 419894 <read_all_makefiles@@Base+0x3f4>
  419824:	cbnz	x0, 419894 <read_all_makefiles@@Base+0x3f4>
  419828:	ldrb	w8, [x21]
  41982c:	cmp	w8, #0x2f
  419830:	b.eq	419894 <read_all_makefiles@@Base+0x3f4>  // b.none
  419834:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  419838:	ldr	x8, [x22, #1576]
  41983c:	ldr	x1, [x8]
  419840:	cbz	x1, 419894 <read_all_makefiles@@Base+0x3f4>
  419844:	adrp	x25, 426000 <_IO_stdin_used@@Base+0x10e0>
  419848:	adrp	x26, 425000 <_IO_stdin_used@@Base+0xe0>
  41984c:	mov	w28, #0x1                   	// #1
  419850:	add	x25, x25, #0x8c7
  419854:	add	x26, x26, #0xd0a
  419858:	mov	w0, #0x3                   	// #3
  41985c:	mov	x2, x25
  419860:	mov	x3, x21
  419864:	bl	417eb4 <concat@@Base>
  419868:	mov	x1, x26
  41986c:	mov	x27, x0
  419870:	bl	4069f0 <fopen@plt>
  419874:	cmp	x0, #0x0
  419878:	csel	x21, x21, x27, eq  // eq = none
  41987c:	str	x0, [sp, #48]
  419880:	cbnz	x0, 419894 <read_all_makefiles@@Base+0x3f4>
  419884:	ldr	x8, [x22, #1576]
  419888:	ldr	x1, [x8, w28, uxtw #3]
  41988c:	add	w28, w28, #0x1
  419890:	cbnz	x1, 419858 <read_all_makefiles@@Base+0x3b8>
  419894:	mov	x0, x21
  419898:	bl	420f28 <strcache_add@@Base>
  41989c:	mov	x21, x0
  4198a0:	bl	40a798 <lookup_file@@Base>
  4198a4:	str	x0, [x19, #16]
  4198a8:	cbnz	x0, 4198b8 <read_all_makefiles@@Base+0x418>
  4198ac:	mov	x0, x21
  4198b0:	bl	40a830 <enter_file@@Base>
  4198b4:	str	x0, [x19, #16]
  4198b8:	ldr	x8, [x19, #16]
  4198bc:	mov	x0, x24
  4198c0:	ldr	x21, [x8]
  4198c4:	strb	w20, [x19, #32]
  4198c8:	bl	406cf0 <free@plt>
  4198cc:	ldr	x0, [sp, #48]
  4198d0:	cbz	x0, 419958 <read_all_makefiles@@Base+0x4b8>
  4198d4:	str	wzr, [x19, #36]
  4198d8:	bl	406980 <fileno@plt>
  4198dc:	bl	424098 <fd_noinherit@@Base>
  4198e0:	ldr	x22, [sp, #8]
  4198e4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  4198e8:	add	x1, x1, #0xa48
  4198ec:	mov	w3, #0x2                   	// #2
  4198f0:	mov	w4, #0x6                   	// #6
  4198f4:	mov	x0, x22
  4198f8:	mov	x2, x21
  4198fc:	mov	w5, wzr
  419900:	bl	422088 <do_variable_definition@@Base>
  419904:	mov	w8, #0xc8                  	// #200
  419908:	mov	w0, #0xc8                  	// #200
  41990c:	str	x8, [sp, #40]
  419910:	bl	418070 <xmalloc@@Base>
  419914:	ldr	w8, [sp, #4]
  419918:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  41991c:	ldr	x21, [x20, #1552]
  419920:	stp	x0, x0, [sp, #24]
  419924:	mvn	w8, w8
  419928:	str	x0, [sp, #16]
  41992c:	and	w1, w8, #0x1
  419930:	add	x0, sp, #0x10
  419934:	str	x22, [x20, #1552]
  419938:	bl	419af4 <eval_buffer@@Base+0xdc>
  41993c:	ldr	x0, [sp, #48]
  419940:	str	x21, [x20, #1552]
  419944:	bl	4069c0 <fclose@plt>
  419948:	ldr	x0, [sp, #32]
  41994c:	bl	406cf0 <free@plt>
  419950:	str	wzr, [x23]
  419954:	b	41996c <read_all_makefiles@@Base+0x4cc>
  419958:	ldr	w8, [x19, #36]
  41995c:	mov	w9, #0x1                   	// #1
  419960:	str	w8, [x23]
  419964:	ldr	x8, [x19, #16]
  419968:	str	x9, [x8, #112]
  41996c:	mov	x0, x19
  419970:	ldp	x20, x19, [sp, #160]
  419974:	ldp	x22, x21, [sp, #144]
  419978:	ldp	x24, x23, [sp, #128]
  41997c:	ldp	x26, x25, [sp, #112]
  419980:	ldp	x28, x27, [sp, #96]
  419984:	ldp	x29, x30, [sp, #80]
  419988:	add	sp, sp, #0xb0
  41998c:	ret
  419990:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419994:	add	x1, x1, #0xd8d
  419998:	mov	w2, #0x5                   	// #5
  41999c:	mov	x0, xzr
  4199a0:	bl	406e50 <dcgettext@plt>
  4199a4:	bl	406ef0 <printf@plt>
  4199a8:	tbz	w23, #1, 419758 <read_all_makefiles@@Base+0x2b8>
  4199ac:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4199b0:	add	x1, x1, #0xda0
  4199b4:	mov	w2, #0x5                   	// #5
  4199b8:	mov	x0, xzr
  4199bc:	bl	406e50 <dcgettext@plt>
  4199c0:	bl	406ef0 <printf@plt>
  4199c4:	tbz	w23, #2, 41975c <read_all_makefiles@@Base+0x2bc>
  4199c8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  4199cc:	add	x1, x1, #0xdaf
  4199d0:	mov	w2, #0x5                   	// #5
  4199d4:	mov	x0, xzr
  4199d8:	bl	406e50 <dcgettext@plt>
  4199dc:	bl	406ef0 <printf@plt>
  4199e0:	tbnz	w23, #3, 419760 <read_all_makefiles@@Base+0x2c0>
  4199e4:	b	419778 <read_all_makefiles@@Base+0x2d8>
  4199e8:	mov	w0, w8
  4199ec:	bl	406b90 <strerror@plt>
  4199f0:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4199f4:	ldr	x19, [x8, #1552]
  4199f8:	mov	x20, x0
  4199fc:	bl	4067d0 <strlen@plt>
  419a00:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  419a04:	mov	x1, x0
  419a08:	add	x2, x2, #0xb96
  419a0c:	mov	x0, x19
  419a10:	mov	x3, x20
  419a14:	bl	4190fc <fatal@@Base>

0000000000419a18 <eval_buffer@@Base>:
  419a18:	sub	sp, sp, #0x90
  419a1c:	stp	x29, x30, [sp, #96]
  419a20:	str	x21, [sp, #112]
  419a24:	stp	x20, x19, [sp, #128]
  419a28:	add	x29, sp, #0x60
  419a2c:	mov	x19, x1
  419a30:	mov	x20, x0
  419a34:	bl	4067d0 <strlen@plt>
  419a38:	stp	x20, x0, [sp, #48]
  419a3c:	stp	x20, x20, [sp, #32]
  419a40:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  419a44:	str	xzr, [sp, #64]
  419a48:	cbz	x19, 419a60 <eval_buffer@@Base+0x48>
  419a4c:	ldr	x8, [x19, #16]
  419a50:	ldr	q0, [x19]
  419a54:	str	x8, [sp, #88]
  419a58:	stur	q0, [sp, #72]
  419a5c:	b	419a90 <eval_buffer@@Base+0x78>
  419a60:	ldr	x8, [x20, #1552]
  419a64:	cbz	x8, 419a84 <eval_buffer@@Base+0x6c>
  419a68:	ldr	x9, [x8, #16]
  419a6c:	ldr	q0, [x8]
  419a70:	add	x8, sp, #0x20
  419a74:	add	x8, x8, #0x28
  419a78:	str	x9, [x8, #16]
  419a7c:	str	q0, [x8]
  419a80:	b	419a90 <eval_buffer@@Base+0x78>
  419a84:	mov	w8, #0x1                   	// #1
  419a88:	stp	xzr, x8, [sp, #72]
  419a8c:	str	xzr, [sp, #88]
  419a90:	ldr	x21, [x20, #1552]
  419a94:	add	x8, sp, #0x20
  419a98:	add	x8, x8, #0x28
  419a9c:	add	x0, sp, #0x8
  419aa0:	str	x8, [x20, #1552]
  419aa4:	bl	419ad8 <eval_buffer@@Base+0xc0>
  419aa8:	mov	x19, x0
  419aac:	add	x0, sp, #0x20
  419ab0:	mov	w1, #0x1                   	// #1
  419ab4:	bl	419af4 <eval_buffer@@Base+0xdc>
  419ab8:	mov	x0, x19
  419abc:	bl	41ae28 <eval_buffer@@Base+0x1410>
  419ac0:	str	x21, [x20, #1552]
  419ac4:	ldp	x20, x19, [sp, #128]
  419ac8:	ldr	x21, [sp, #112]
  419acc:	ldp	x29, x30, [sp, #96]
  419ad0:	add	sp, sp, #0x90
  419ad4:	ret
  419ad8:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  419adc:	ldr	x8, [x9, #2408]
  419ae0:	stp	xzr, xzr, [x0]
  419ae4:	str	xzr, [x0, #16]
  419ae8:	str	x0, [x9, #2408]
  419aec:	mov	x0, x8
  419af0:	ret
  419af4:	sub	sp, sp, #0x170
  419af8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  419afc:	ldrb	w8, [x8, #2392]
  419b00:	stp	x29, x30, [sp, #272]
  419b04:	stp	x28, x27, [sp, #288]
  419b08:	stp	x26, x25, [sp, #304]
  419b0c:	stp	x24, x23, [sp, #320]
  419b10:	stp	x22, x21, [sp, #336]
  419b14:	stp	x20, x19, [sp, #352]
  419b18:	mov	x9, x0
  419b1c:	str	w8, [sp, #96]
  419b20:	ldr	x8, [x9, #40]!
  419b24:	add	x29, sp, #0x110
  419b28:	mov	x23, x0
  419b2c:	mov	w0, #0xc8                  	// #200
  419b30:	stur	x8, [x29, #-32]
  419b34:	mov	w8, #0xc8                  	// #200
  419b38:	mov	w20, w1
  419b3c:	str	x9, [sp, #112]
  419b40:	str	x8, [sp, #72]
  419b44:	bl	418070 <xmalloc@@Base>
  419b48:	cmp	w20, #0x0
  419b4c:	mov	w8, #0x1                   	// #1
  419b50:	str	w20, [sp, #64]
  419b54:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  419b58:	str	w8, [sp, #104]
  419b5c:	cset	w8, eq  // eq = none
  419b60:	mov	x26, xzr
  419b64:	mov	w25, wzr
  419b68:	mov	w19, wzr
  419b6c:	mov	x21, xzr
  419b70:	add	x20, x20, #0xcf0
  419b74:	str	w8, [sp, #68]
  419b78:	mov	w8, #0x1                   	// #1
  419b7c:	str	x0, [sp, #136]
  419b80:	stp	xzr, xzr, [sp, #80]
  419b84:	str	xzr, [sp, #120]
  419b88:	str	wzr, [sp, #100]
  419b8c:	stur	xzr, [x29, #-112]
  419b90:	str	wzr, [sp, #132]
  419b94:	stur	wzr, [x29, #-120]
  419b98:	stur	xzr, [x29, #-128]
  419b9c:	stur	xzr, [x29, #-104]
  419ba0:	str	w8, [sp, #108]
  419ba4:	b	419bb8 <eval_buffer@@Base+0x1a0>
  419ba8:	cbz	w25, 419d78 <eval_buffer@@Base+0x360>
  419bac:	mov	w27, #0x2                   	// #2
  419bb0:	cmp	w27, #0x3
  419bb4:	b.eq	41aca4 <eval_buffer@@Base+0x128c>  // b.none
  419bb8:	ldr	x8, [x23, #48]
  419bbc:	mov	x0, x23
  419bc0:	add	x8, x8, x26
  419bc4:	str	x8, [x23, #48]
  419bc8:	bl	41bbac <parse_file_seq@@Base+0x728>
  419bcc:	mov	x26, x0
  419bd0:	tbnz	x0, #63, 419d48 <eval_buffer@@Base+0x330>
  419bd4:	ldr	x8, [x23, #48]
  419bd8:	ldr	x28, [x23]
  419bdc:	cmp	x8, #0x1
  419be0:	b.ne	419c40 <eval_buffer@@Base+0x228>  // b.any
  419be4:	ldrb	w8, [x28]
  419be8:	cmp	w8, #0xef
  419bec:	b.ne	419c40 <eval_buffer@@Base+0x228>  // b.any
  419bf0:	ldrb	w8, [x28, #1]
  419bf4:	cmp	w8, #0xbb
  419bf8:	b.ne	419c40 <eval_buffer@@Base+0x228>  // b.any
  419bfc:	ldrb	w8, [x28, #2]
  419c00:	cmp	w8, #0xbf
  419c04:	b.ne	419c40 <eval_buffer@@Base+0x228>  // b.any
  419c08:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  419c0c:	ldrb	w8, [x8, #3236]
  419c10:	add	x28, x28, #0x3
  419c14:	tbz	w8, #0, 419c40 <eval_buffer@@Base+0x228>
  419c18:	ldr	x22, [sp, #112]
  419c1c:	ldr	x8, [x22]
  419c20:	cbz	x8, 419f44 <eval_buffer@@Base+0x52c>
  419c24:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419c28:	mov	w2, #0x5                   	// #5
  419c2c:	mov	x0, xzr
  419c30:	add	x1, x1, #0xdcf
  419c34:	bl	406e50 <dcgettext@plt>
  419c38:	ldr	x1, [x22]
  419c3c:	bl	406ef0 <printf@plt>
  419c40:	ldrb	w22, [x28]
  419c44:	cbz	w22, 419bac <eval_buffer@@Base+0x194>
  419c48:	mov	x0, x28
  419c4c:	bl	4067d0 <strlen@plt>
  419c50:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  419c54:	ldrb	w8, [x8, #2392]
  419c58:	mov	x24, x0
  419c5c:	cmp	w22, w8
  419c60:	b.eq	419ba8 <eval_buffer@@Base+0x190>  // b.none
  419c64:	ldur	x8, [x29, #-104]
  419c68:	add	x24, x24, #0x1
  419c6c:	cmp	x8, x24
  419c70:	b.cs	419c8c <eval_buffer@@Base+0x274>  // b.hs, b.nlast
  419c74:	mov	x0, x21
  419c78:	bl	406cf0 <free@plt>
  419c7c:	mov	x0, x24
  419c80:	bl	418070 <xmalloc@@Base>
  419c84:	mov	x21, x0
  419c88:	stur	x24, [x29, #-104]
  419c8c:	mov	x0, x21
  419c90:	mov	x1, x28
  419c94:	bl	406d90 <strcpy@plt>
  419c98:	bl	417d0c <collapse_continuations@@Base>
  419c9c:	mov	x0, x21
  419ca0:	bl	41bd80 <parse_file_seq@@Base+0x8fc>
  419ca4:	sub	x0, x21, #0x1
  419ca8:	ldrb	w8, [x0, #1]!
  419cac:	ldrh	w8, [x20, x8, lsl #1]
  419cb0:	tst	w8, #0x6
  419cb4:	b.ne	419ca8 <eval_buffer@@Base+0x290>  // b.any
  419cb8:	sub	x1, x29, #0x38
  419cbc:	bl	41bda0 <parse_file_seq@@Base+0x91c>
  419cc0:	ldurb	w8, [x29, #-56]
  419cc4:	mov	x24, x0
  419cc8:	tbnz	w8, #0, 419d50 <eval_buffer@@Base+0x338>
  419ccc:	ldrb	w8, [x24]
  419cd0:	cbz	w8, 419bac <eval_buffer@@Base+0x194>
  419cd4:	mov	x0, x24
  419cd8:	bl	418118 <end_of_token@@Base>
  419cdc:	sub	x1, x0, x24
  419ce0:	stp	x0, x1, [x29, #-48]
  419ce4:	ldrb	w8, [x0]
  419ce8:	ldrh	w22, [x20, x8, lsl #1]
  419cec:	tst	w22, #0x6
  419cf0:	b.eq	419d0c <eval_buffer@@Base+0x2f4>  // b.none
  419cf4:	add	x8, x0, #0x1
  419cf8:	stur	x8, [x29, #-48]
  419cfc:	ldrb	w9, [x8], #1
  419d00:	ldrh	w22, [x20, x9, lsl #1]
  419d04:	tst	w22, #0x6
  419d08:	b.ne	419cf8 <eval_buffer@@Base+0x2e0>  // b.any
  419d0c:	cbz	w19, 419e00 <eval_buffer@@Base+0x3e8>
  419d10:	cmp	x1, #0x5
  419d14:	b.ne	419bac <eval_buffer@@Base+0x194>  // b.any
  419d18:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  419d1c:	mov	w2, #0x5                   	// #5
  419d20:	add	x0, x0, #0xe1b
  419d24:	mov	x1, x24
  419d28:	bl	406a70 <strncmp@plt>
  419d2c:	mov	w8, #0x9                   	// #9
  419d30:	cmp	w0, #0x0
  419d34:	and	w8, w22, w8
  419d38:	ccmp	w8, #0x0, #0x4, eq  // eq = none
  419d3c:	csel	w19, w19, wzr, eq  // eq = none
  419d40:	mov	w27, #0x2                   	// #2
  419d44:	b	419bb0 <eval_buffer@@Base+0x198>
  419d48:	mov	w27, #0x3                   	// #3
  419d4c:	b	419bb0 <eval_buffer@@Base+0x198>
  419d50:	tst	w8, #0x10
  419d54:	mov	w9, #0x5                   	// #5
  419d58:	mov	w10, #0x2                   	// #2
  419d5c:	csel	w28, w10, w9, eq  // eq = none
  419d60:	ldur	w9, [x29, #-120]
  419d64:	cbz	w9, 419d94 <eval_buffer@@Base+0x37c>
  419d68:	tst	w8, #0x2
  419d6c:	csinc	w19, w19, wzr, eq  // eq = none
  419d70:	mov	w27, #0x2                   	// #2
  419d74:	b	419bb0 <eval_buffer@@Base+0x198>
  419d78:	ldur	x8, [x29, #-112]
  419d7c:	cbz	x8, 419c64 <eval_buffer@@Base+0x24c>
  419d80:	ldur	w8, [x29, #-120]
  419d84:	cbz	w8, 419e48 <eval_buffer@@Base+0x430>
  419d88:	mov	w25, wzr
  419d8c:	mov	w27, #0x2                   	// #2
  419d90:	b	419bb0 <eval_buffer@@Base+0x198>
  419d94:	ldur	x0, [x29, #-112]
  419d98:	cbz	x0, 419dd8 <eval_buffer@@Base+0x3c0>
  419d9c:	ldp	w8, w5, [sp, #104]
  419da0:	ldr	w1, [sp, #132]
  419da4:	ldr	x2, [sp, #120]
  419da8:	ldp	x3, x4, [sp, #80]
  419dac:	mov	w8, w8
  419db0:	stp	x8, xzr, [x29, #-24]
  419db4:	sub	x8, x29, #0x20
  419db8:	str	x8, [sp, #16]
  419dbc:	ldr	w8, [sp, #96]
  419dc0:	ldr	x6, [sp, #136]
  419dc4:	ldur	x7, [x29, #-128]
  419dc8:	strb	w8, [sp, #8]
  419dcc:	ldr	w8, [sp, #100]
  419dd0:	str	w8, [sp]
  419dd4:	bl	41bf80 <parse_file_seq@@Base+0xafc>
  419dd8:	ldurb	w22, [x29, #-56]
  419ddc:	tbnz	w22, #2, 419e34 <eval_buffer@@Base+0x41c>
  419de0:	tbnz	w22, #1, 419e9c <eval_buffer@@Base+0x484>
  419de4:	ldr	x0, [sp, #112]
  419de8:	mov	x1, x24
  419dec:	mov	w2, w28
  419df0:	mov	w3, wzr
  419df4:	bl	423100 <try_variable_definition@@Base>
  419df8:	tbnz	w22, #3, 419eb0 <eval_buffer@@Base+0x498>
  419dfc:	b	419ebc <eval_buffer@@Base+0x4a4>
  419e00:	ldr	x19, [sp, #112]
  419e04:	mov	x0, x24
  419e08:	mov	x2, x19
  419e0c:	bl	41cc34 <parse_file_seq@@Base+0x17b0>
  419e10:	cmn	w0, #0x2
  419e14:	b.eq	419e80 <eval_buffer@@Base+0x468>  // b.none
  419e18:	cmn	w0, #0x1
  419e1c:	b.eq	41ad2c <eval_buffer@@Base+0x1314>  // b.none
  419e20:	mov	w27, #0x2                   	// #2
  419e24:	stur	w0, [x29, #-120]
  419e28:	cbz	w27, 419e88 <eval_buffer@@Base+0x470>
  419e2c:	mov	w19, wzr
  419e30:	b	419bb0 <eval_buffer@@Base+0x198>
  419e34:	mov	x0, x24
  419e38:	mov	w1, w28
  419e3c:	mov	x2, x23
  419e40:	bl	41c838 <parse_file_seq@@Base+0x13b4>
  419e44:	b	419ec0 <eval_buffer@@Base+0x4a8>
  419e48:	ldur	x25, [x29, #-128]
  419e4c:	cbnz	x25, 419e58 <eval_buffer@@Base+0x440>
  419e50:	ldr	w8, [x23, #48]
  419e54:	str	w8, [sp, #108]
  419e58:	ldr	x8, [sp, #72]
  419e5c:	add	x22, x24, x25
  419e60:	cmp	x22, x8
  419e64:	b.ls	419f04 <eval_buffer@@Base+0x4ec>  // b.plast
  419e68:	ldr	x0, [sp, #136]
  419e6c:	lsl	x1, x22, #1
  419e70:	str	x1, [sp, #72]
  419e74:	bl	41803c <xrealloc@@Base>
  419e78:	mov	x27, x0
  419e7c:	b	419f08 <eval_buffer@@Base+0x4f0>
  419e80:	mov	w27, wzr
  419e84:	cbnz	w27, 419e2c <eval_buffer@@Base+0x414>
  419e88:	ldur	w8, [x29, #-120]
  419e8c:	cbz	w8, 419f68 <eval_buffer@@Base+0x550>
  419e90:	mov	w19, wzr
  419e94:	mov	w27, #0x2                   	// #2
  419e98:	b	419bb0 <eval_buffer@@Base+0x198>
  419e9c:	mov	x0, x24
  419ea0:	mov	w1, w28
  419ea4:	mov	x2, x23
  419ea8:	bl	41c8f4 <parse_file_seq@@Base+0x1470>
  419eac:	tbz	w22, #3, 419ebc <eval_buffer@@Base+0x4a4>
  419eb0:	ldr	w8, [x0, #44]
  419eb4:	and	w8, w8, #0x9fffffff
  419eb8:	str	w8, [x0, #44]
  419ebc:	tbnz	w22, #5, 419edc <eval_buffer@@Base+0x4c4>
  419ec0:	mov	w25, wzr
  419ec4:	str	xzr, [sp, #120]
  419ec8:	stur	xzr, [x29, #-112]
  419ecc:	str	wzr, [sp, #132]
  419ed0:	stur	xzr, [x29, #-128]
  419ed4:	mov	w27, #0x2                   	// #2
  419ed8:	b	419bb0 <eval_buffer@@Base+0x198>
  419edc:	ldr	w8, [x0, #44]
  419ee0:	str	xzr, [sp, #120]
  419ee4:	stur	xzr, [x29, #-112]
  419ee8:	str	wzr, [sp, #132]
  419eec:	orr	w8, w8, #0x80
  419ef0:	mov	w25, wzr
  419ef4:	stur	xzr, [x29, #-128]
  419ef8:	str	w8, [x0, #44]
  419efc:	mov	w27, #0x2                   	// #2
  419f00:	b	419bb0 <eval_buffer@@Base+0x198>
  419f04:	ldr	x27, [sp, #136]
  419f08:	sub	x24, x24, #0x1
  419f0c:	add	x0, x27, x25
  419f10:	add	x1, x28, #0x1
  419f14:	mov	x2, x24
  419f18:	bl	406790 <memcpy@plt>
  419f1c:	mov	x8, x25
  419f20:	add	x8, x24, x8
  419f24:	mov	w9, #0xa                   	// #10
  419f28:	mov	w25, wzr
  419f2c:	stur	wzr, [x29, #-120]
  419f30:	str	x27, [sp, #136]
  419f34:	strb	w9, [x27, x8]
  419f38:	mov	w27, #0x2                   	// #2
  419f3c:	stur	x22, [x29, #-128]
  419f40:	b	419bb0 <eval_buffer@@Base+0x198>
  419f44:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  419f48:	mov	w2, #0x5                   	// #5
  419f4c:	mov	x0, xzr
  419f50:	add	x1, x1, #0xdf4
  419f54:	bl	406e50 <dcgettext@plt>
  419f58:	bl	406ef0 <printf@plt>
  419f5c:	ldrb	w22, [x28]
  419f60:	cbnz	w22, 419c48 <eval_buffer@@Base+0x230>
  419f64:	b	419bac <eval_buffer@@Base+0x194>
  419f68:	ldur	x19, [x29, #-40]
  419f6c:	cmp	x19, #0x6
  419f70:	b.ne	419f8c <eval_buffer@@Base+0x574>  // b.any
  419f74:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  419f78:	mov	w2, #0x6                   	// #6
  419f7c:	add	x0, x0, #0xe41
  419f80:	mov	x1, x24
  419f84:	bl	406a70 <strncmp@plt>
  419f88:	cbz	w0, 41a0f8 <eval_buffer@@Base+0x6e0>
  419f8c:	cmp	x19, #0x8
  419f90:	b.ne	419fac <eval_buffer@@Base+0x594>  // b.any
  419f94:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  419f98:	mov	w2, #0x8                   	// #8
  419f9c:	add	x0, x0, #0xe3f
  419fa0:	mov	x1, x24
  419fa4:	bl	406a70 <strncmp@plt>
  419fa8:	cbz	w0, 41a0f8 <eval_buffer@@Base+0x6e0>
  419fac:	ldur	x22, [x29, #-112]
  419fb0:	ldur	x25, [x29, #-128]
  419fb4:	cmp	x19, #0x5
  419fb8:	b.ne	419fd4 <eval_buffer@@Base+0x5bc>  // b.any
  419fbc:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  419fc0:	mov	w2, #0x5                   	// #5
  419fc4:	add	x0, x0, #0xe66
  419fc8:	mov	x1, x24
  419fcc:	bl	406a70 <strncmp@plt>
  419fd0:	cbz	w0, 41a314 <eval_buffer@@Base+0x8fc>
  419fd4:	cmp	x19, #0x7
  419fd8:	b.ne	419ff4 <eval_buffer@@Base+0x5dc>  // b.any
  419fdc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  419fe0:	mov	w2, #0x7                   	// #7
  419fe4:	add	x0, x0, #0xe49
  419fe8:	mov	x1, x24
  419fec:	bl	406a70 <strncmp@plt>
  419ff0:	cbz	w0, 41a1e4 <eval_buffer@@Base+0x7cc>
  419ff4:	cmp	x19, #0x8
  419ff8:	b.ne	41a034 <eval_buffer@@Base+0x61c>  // b.any
  419ffc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  41a000:	mov	w2, #0x8                   	// #8
  41a004:	add	x0, x0, #0xe48
  41a008:	mov	x1, x24
  41a00c:	bl	406a70 <strncmp@plt>
  41a010:	cbz	w0, 41a1e4 <eval_buffer@@Base+0x7cc>
  41a014:	cmp	x19, #0x8
  41a018:	b.ne	41a034 <eval_buffer@@Base+0x61c>  // b.any
  41a01c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  41a020:	mov	w2, #0x8                   	// #8
  41a024:	add	x0, x0, #0xe51
  41a028:	mov	x1, x24
  41a02c:	bl	406a70 <strncmp@plt>
  41a030:	cbz	w0, 41a1e4 <eval_buffer@@Base+0x7cc>
  41a034:	cmp	x19, #0x4
  41a038:	b.ne	41a054 <eval_buffer@@Base+0x63c>  // b.any
  41a03c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41a040:	mov	w2, #0x4                   	// #4
  41a044:	add	x0, x0, #0x6b6
  41a048:	mov	x1, x24
  41a04c:	bl	406a70 <strncmp@plt>
  41a050:	cbz	w0, 41a394 <eval_buffer@@Base+0x97c>
  41a054:	cmp	x19, #0x5
  41a058:	b.ne	41a074 <eval_buffer@@Base+0x65c>  // b.any
  41a05c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41a060:	mov	w2, #0x5                   	// #5
  41a064:	add	x0, x0, #0xb82
  41a068:	mov	x1, x24
  41a06c:	bl	406a70 <strncmp@plt>
  41a070:	cbz	w0, 41a394 <eval_buffer@@Base+0x97c>
  41a074:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41a078:	ldrb	w8, [x28]
  41a07c:	ldrb	w9, [x9, #2392]
  41a080:	cmp	w8, w9
  41a084:	b.eq	41ad84 <eval_buffer@@Base+0x136c>  // b.none
  41a088:	cbz	x22, 41a0cc <eval_buffer@@Base+0x6b4>
  41a08c:	ldp	w8, w5, [sp, #104]
  41a090:	ldr	w1, [sp, #132]
  41a094:	ldr	x2, [sp, #120]
  41a098:	ldp	x3, x4, [sp, #80]
  41a09c:	mov	w8, w8
  41a0a0:	stp	x8, xzr, [x29, #-24]
  41a0a4:	sub	x8, x29, #0x20
  41a0a8:	str	x8, [sp, #16]
  41a0ac:	ldr	w8, [sp, #96]
  41a0b0:	ldr	x6, [sp, #136]
  41a0b4:	mov	x0, x22
  41a0b8:	mov	x7, x25
  41a0bc:	strb	w8, [sp, #8]
  41a0c0:	ldr	w8, [sp, #100]
  41a0c4:	str	w8, [sp]
  41a0c8:	bl	41bf80 <parse_file_seq@@Base+0xafc>
  41a0cc:	ldr	w8, [x23, #48]
  41a0d0:	mov	w1, #0x4018                	// #16408
  41a0d4:	mov	x0, x28
  41a0d8:	str	w8, [sp, #104]
  41a0dc:	bl	41b9f0 <parse_file_seq@@Base+0x56c>
  41a0e0:	cbz	x0, 41a4dc <eval_buffer@@Base+0xac4>
  41a0e4:	ldrb	w8, [x0]
  41a0e8:	strb	wzr, [x0], #1
  41a0ec:	cmp	w8, #0x23
  41a0f0:	csel	x27, xzr, x0, eq  // eq = none
  41a0f4:	b	41a4e0 <eval_buffer@@Base+0xac8>
  41a0f8:	ldrb	w19, [x24]
  41a0fc:	ldur	x0, [x29, #-112]
  41a100:	ldur	x7, [x29, #-128]
  41a104:	cmp	w19, #0x75
  41a108:	cset	w22, ne  // ne = any
  41a10c:	cbz	x0, 41a148 <eval_buffer@@Base+0x730>
  41a110:	ldp	w8, w5, [sp, #104]
  41a114:	ldr	w1, [sp, #132]
  41a118:	ldr	x2, [sp, #120]
  41a11c:	ldp	x3, x4, [sp, #80]
  41a120:	mov	w8, w8
  41a124:	stp	x8, xzr, [x29, #-24]
  41a128:	sub	x8, x29, #0x20
  41a12c:	str	x8, [sp, #16]
  41a130:	ldr	w8, [sp, #96]
  41a134:	ldr	x6, [sp, #136]
  41a138:	strb	w8, [sp, #8]
  41a13c:	ldr	w8, [sp, #100]
  41a140:	str	w8, [sp]
  41a144:	bl	41bf80 <parse_file_seq@@Base+0xafc>
  41a148:	ldur	x0, [x29, #-48]
  41a14c:	ldrb	w8, [x0]
  41a150:	cbz	w8, 41a2e8 <eval_buffer@@Base+0x8d0>
  41a154:	mov	x1, xzr
  41a158:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41a15c:	mov	x22, x0
  41a160:	stur	x0, [x29, #-64]
  41a164:	sub	x0, x29, #0x40
  41a168:	sub	x1, x29, #0x58
  41a16c:	bl	418158 <find_next_token@@Base>
  41a170:	cbz	x0, 41a558 <eval_buffer@@Base+0xb40>
  41a174:	cmp	w19, #0x75
  41a178:	cset	w8, eq  // eq = none
  41a17c:	mov	x24, x0
  41a180:	lsl	w19, w8, #29
  41a184:	b	41a1ac <eval_buffer@@Base+0x794>
  41a188:	ldr	w8, [x0, #44]
  41a18c:	sub	x1, x29, #0x58
  41a190:	and	w8, w8, #0x9fffffff
  41a194:	orr	w8, w8, w19
  41a198:	str	w8, [x0, #44]
  41a19c:	sub	x0, x29, #0x40
  41a1a0:	bl	418158 <find_next_token@@Base>
  41a1a4:	mov	x24, x0
  41a1a8:	cbz	x0, 41a558 <eval_buffer@@Base+0xb40>
  41a1ac:	ldur	x1, [x29, #-88]
  41a1b0:	mov	x0, x24
  41a1b4:	bl	421ac8 <lookup_variable@@Base>
  41a1b8:	cbnz	x0, 41a188 <eval_buffer@@Base+0x770>
  41a1bc:	ldur	x1, [x29, #-88]
  41a1c0:	ldr	x6, [sp, #112]
  41a1c4:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  41a1c8:	mov	w3, #0x2                   	// #2
  41a1cc:	mov	x0, x24
  41a1d0:	add	x2, x2, #0x989
  41a1d4:	mov	w4, wzr
  41a1d8:	mov	x5, xzr
  41a1dc:	bl	421720 <define_variable_in_set@@Base>
  41a1e0:	b	41a188 <eval_buffer@@Base+0x770>
  41a1e4:	ldrb	w19, [x24]
  41a1e8:	cbz	x22, 41a22c <eval_buffer@@Base+0x814>
  41a1ec:	ldp	w8, w5, [sp, #104]
  41a1f0:	ldr	w1, [sp, #132]
  41a1f4:	ldr	x2, [sp, #120]
  41a1f8:	ldp	x3, x4, [sp, #80]
  41a1fc:	mov	w8, w8
  41a200:	stp	x8, xzr, [x29, #-24]
  41a204:	sub	x8, x29, #0x20
  41a208:	str	x8, [sp, #16]
  41a20c:	ldr	w8, [sp, #96]
  41a210:	ldr	x6, [sp, #136]
  41a214:	mov	x0, x22
  41a218:	mov	x7, x25
  41a21c:	strb	w8, [sp, #8]
  41a220:	ldr	w8, [sp, #100]
  41a224:	str	w8, [sp]
  41a228:	bl	41bf80 <parse_file_seq@@Base+0xafc>
  41a22c:	ldur	x0, [x29, #-48]
  41a230:	mov	x1, xzr
  41a234:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41a238:	ldrb	w8, [x0]
  41a23c:	mov	x24, x0
  41a240:	cbz	w8, 41a530 <eval_buffer@@Base+0xb18>
  41a244:	sub	x0, x29, #0x30
  41a248:	mov	w1, #0x10                  	// #16
  41a24c:	mov	w2, #0x1                   	// #1
  41a250:	mov	w4, #0x2                   	// #2
  41a254:	mov	x3, xzr
  41a258:	stur	x24, [x29, #-48]
  41a25c:	bl	41b484 <parse_file_seq@@Base>
  41a260:	mov	x22, x0
  41a264:	mov	x0, x24
  41a268:	bl	406cf0 <free@plt>
  41a26c:	sub	x0, x29, #0x58
  41a270:	bl	419ad8 <eval_buffer@@Base+0xc0>
  41a274:	mov	x24, x0
  41a278:	cbz	x22, 41a2dc <eval_buffer@@Base+0x8c4>
  41a27c:	cmp	w19, #0x69
  41a280:	mov	w8, #0xa                   	// #10
  41a284:	mov	w9, #0xe                   	// #14
  41a288:	csel	w8, w8, w9, eq  // eq = none
  41a28c:	ldr	w9, [sp, #68]
  41a290:	orr	w25, w8, w9
  41a294:	b	41a2a8 <eval_buffer@@Base+0x890>
  41a298:	mov	x0, x22
  41a29c:	bl	406cf0 <free@plt>
  41a2a0:	mov	x22, x19
  41a2a4:	cbz	x19, 41a2dc <eval_buffer@@Base+0x8c4>
  41a2a8:	ldp	x19, x0, [x22]
  41a2ac:	mov	w1, w25
  41a2b0:	bl	4196d0 <read_all_makefiles@@Base+0x230>
  41a2b4:	mov	x27, x0
  41a2b8:	bl	406f00 <__errno_location@plt>
  41a2bc:	ldr	w8, [x0]
  41a2c0:	cbz	w8, 41a298 <eval_buffer@@Base+0x880>
  41a2c4:	ldr	x9, [sp, #112]
  41a2c8:	ldr	x8, [x9, #16]
  41a2cc:	ldr	q0, [x9]
  41a2d0:	str	x8, [x27, #56]
  41a2d4:	stur	q0, [x27, #40]
  41a2d8:	b	41a298 <eval_buffer@@Base+0x880>
  41a2dc:	mov	x0, x24
  41a2e0:	bl	41ae28 <eval_buffer@@Base+0x1410>
  41a2e4:	b	41a560 <eval_buffer@@Base+0xb48>
  41a2e8:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41a2ec:	str	xzr, [sp, #120]
  41a2f0:	stur	xzr, [x29, #-112]
  41a2f4:	str	wzr, [sp, #132]
  41a2f8:	mov	w25, wzr
  41a2fc:	mov	w19, wzr
  41a300:	stur	wzr, [x29, #-120]
  41a304:	stur	xzr, [x29, #-128]
  41a308:	str	w22, [x8, #292]
  41a30c:	mov	w27, #0x2                   	// #2
  41a310:	b	419bb0 <eval_buffer@@Base+0x198>
  41a314:	cbz	x22, 41a358 <eval_buffer@@Base+0x940>
  41a318:	ldp	w8, w5, [sp, #104]
  41a31c:	ldr	w1, [sp, #132]
  41a320:	ldr	x2, [sp, #120]
  41a324:	ldp	x3, x4, [sp, #80]
  41a328:	mov	w8, w8
  41a32c:	stp	x8, xzr, [x29, #-24]
  41a330:	sub	x8, x29, #0x20
  41a334:	str	x8, [sp, #16]
  41a338:	ldr	w8, [sp, #96]
  41a33c:	ldr	x6, [sp, #136]
  41a340:	mov	x0, x22
  41a344:	mov	x7, x25
  41a348:	strb	w8, [sp, #8]
  41a34c:	ldr	w8, [sp, #100]
  41a350:	str	w8, [sp]
  41a354:	bl	41bf80 <parse_file_seq@@Base+0xafc>
  41a358:	ldur	x0, [x29, #-48]
  41a35c:	bl	40a57c <variable_expand@@Base>
  41a360:	stur	x0, [x29, #-88]
  41a364:	sub	x0, x29, #0x58
  41a368:	sub	x1, x29, #0x40
  41a36c:	bl	418158 <find_next_token@@Base>
  41a370:	cbz	x0, 41a548 <eval_buffer@@Base+0xb30>
  41a374:	ldur	x1, [x29, #-64]
  41a378:	bl	4180d8 <xstrndup@@Base>
  41a37c:	mov	x22, x0
  41a380:	sub	x0, x29, #0x58
  41a384:	sub	x1, x29, #0x40
  41a388:	bl	418158 <find_next_token@@Base>
  41a38c:	mov	x1, x0
  41a390:	b	41a550 <eval_buffer@@Base+0xb38>
  41a394:	ldrb	w19, [x24]
  41a398:	cmp	w19, #0x2d
  41a39c:	cset	w24, eq  // eq = none
  41a3a0:	cbz	x22, 41a3e4 <eval_buffer@@Base+0x9cc>
  41a3a4:	ldp	w8, w5, [sp, #104]
  41a3a8:	ldr	w1, [sp, #132]
  41a3ac:	ldr	x2, [sp, #120]
  41a3b0:	ldp	x3, x4, [sp, #80]
  41a3b4:	mov	w8, w8
  41a3b8:	stp	x8, xzr, [x29, #-24]
  41a3bc:	sub	x8, x29, #0x20
  41a3c0:	str	x8, [sp, #16]
  41a3c4:	ldr	w8, [sp, #96]
  41a3c8:	ldr	x6, [sp, #136]
  41a3cc:	mov	x0, x22
  41a3d0:	mov	x7, x25
  41a3d4:	strb	w8, [sp, #8]
  41a3d8:	ldr	w8, [sp, #100]
  41a3dc:	str	w8, [sp]
  41a3e0:	bl	41bf80 <parse_file_seq@@Base+0xafc>
  41a3e4:	ldur	x0, [x29, #-48]
  41a3e8:	mov	x1, xzr
  41a3ec:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41a3f0:	ldrb	w8, [x0]
  41a3f4:	mov	x25, x0
  41a3f8:	cbz	w8, 41a57c <eval_buffer@@Base+0xb64>
  41a3fc:	sub	x0, x29, #0x30
  41a400:	mov	w1, #0x10                  	// #16
  41a404:	mov	w2, #0x1                   	// #1
  41a408:	mov	w4, #0x2                   	// #2
  41a40c:	mov	x3, xzr
  41a410:	stur	x25, [x29, #-48]
  41a414:	mov	w27, #0x2                   	// #2
  41a418:	bl	41b484 <parse_file_seq@@Base>
  41a41c:	mov	x22, x0
  41a420:	mov	x0, x25
  41a424:	bl	406cf0 <free@plt>
  41a428:	cbnz	x22, 41a468 <eval_buffer@@Base+0xa50>
  41a42c:	str	xzr, [sp, #120]
  41a430:	stur	xzr, [x29, #-112]
  41a434:	str	wzr, [sp, #132]
  41a438:	mov	w25, wzr
  41a43c:	mov	w19, wzr
  41a440:	stur	wzr, [x29, #-120]
  41a444:	stur	xzr, [x29, #-128]
  41a448:	b	419bb0 <eval_buffer@@Base+0x198>
  41a44c:	ldr	x8, [x22, #16]
  41a450:	ldr	w9, [x8, #136]
  41a454:	orr	w9, w9, #0x40
  41a458:	str	w9, [x8, #136]
  41a45c:	mov	w27, #0x2                   	// #2
  41a460:	mov	x22, x28
  41a464:	cbz	x28, 41a42c <eval_buffer@@Base+0xa14>
  41a468:	ldp	x28, x8, [x22]
  41a46c:	ldr	x0, [sp, #112]
  41a470:	sub	x1, x29, #0x58
  41a474:	mov	w2, w24
  41a478:	stur	x8, [x29, #-88]
  41a47c:	bl	41444c <load_file@@Base>
  41a480:	cmp	w19, #0x2d
  41a484:	mov	w25, w0
  41a488:	b.eq	41a490 <eval_buffer@@Base+0xa78>  // b.none
  41a48c:	cbz	w25, 41ad90 <eval_buffer@@Base+0x1378>
  41a490:	mov	x0, x22
  41a494:	bl	406cf0 <free@plt>
  41a498:	cmn	w25, #0x1
  41a49c:	b.eq	41a45c <eval_buffer@@Base+0xa44>  // b.none
  41a4a0:	mov	w0, #0x40                  	// #64
  41a4a4:	bl	418094 <xcalloc@@Base>
  41a4a8:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  41a4ac:	ldr	x8, [x9, #1560]
  41a4b0:	mov	x22, x0
  41a4b4:	str	x8, [x0]
  41a4b8:	ldur	x0, [x29, #-88]
  41a4bc:	str	x22, [x9, #1560]
  41a4c0:	bl	40a798 <lookup_file@@Base>
  41a4c4:	str	x0, [x22, #16]
  41a4c8:	cbnz	x0, 41a44c <eval_buffer@@Base+0xa34>
  41a4cc:	ldur	x0, [x29, #-88]
  41a4d0:	bl	40a830 <enter_file@@Base>
  41a4d4:	str	x0, [x22, #16]
  41a4d8:	b	41a44c <eval_buffer@@Base+0xa34>
  41a4dc:	mov	x27, xzr
  41a4e0:	mov	x0, x28
  41a4e4:	bl	417d0c <collapse_continuations@@Base>
  41a4e8:	sub	x1, x29, #0x58
  41a4ec:	sub	x2, x29, #0x28
  41a4f0:	mov	x0, x28
  41a4f4:	bl	41d364 <parse_file_seq@@Base+0x1ee0>
  41a4f8:	mov	w22, w0
  41a4fc:	cmp	w0, #0x9
  41a500:	b.hi	41a584 <eval_buffer@@Base+0xb6c>  // b.pmore
  41a504:	mov	w8, #0x1                   	// #1
  41a508:	lsl	w8, w8, w22
  41a50c:	mov	w9, #0x330                 	// #816
  41a510:	tst	w8, w9
  41a514:	b.eq	41a538 <eval_buffer@@Base+0xb20>  // b.none
  41a518:	str	xzr, [sp, #120]
  41a51c:	stur	xzr, [x29, #-112]
  41a520:	str	wzr, [sp, #132]
  41a524:	stur	xzr, [x29, #-128]
  41a528:	mov	w25, #0x1                   	// #1
  41a52c:	b	41a6dc <eval_buffer@@Base+0xcc4>
  41a530:	mov	x0, x24
  41a534:	b	41a55c <eval_buffer@@Base+0xb44>
  41a538:	cmp	w22, #0x1
  41a53c:	b.ne	41a584 <eval_buffer@@Base+0xb6c>  // b.any
  41a540:	cbz	x27, 41a6c8 <eval_buffer@@Base+0xcb0>
  41a544:	b	41ad50 <eval_buffer@@Base+0x1338>
  41a548:	mov	x22, xzr
  41a54c:	mov	x1, xzr
  41a550:	mov	x0, x22
  41a554:	bl	423718 <construct_vpath_list@@Base>
  41a558:	mov	x0, x22
  41a55c:	bl	406cf0 <free@plt>
  41a560:	str	xzr, [sp, #120]
  41a564:	stur	xzr, [x29, #-112]
  41a568:	str	wzr, [sp, #132]
  41a56c:	mov	w25, wzr
  41a570:	mov	w19, wzr
  41a574:	stur	wzr, [x29, #-120]
  41a578:	b	419ed0 <eval_buffer@@Base+0x4b8>
  41a57c:	mov	x0, x25
  41a580:	b	41a55c <eval_buffer@@Base+0xb44>
  41a584:	ldur	x1, [x29, #-88]
  41a588:	ldur	x2, [x29, #-40]
  41a58c:	mov	x0, xzr
  41a590:	bl	409f10 <variable_expand_string@@Base>
  41a594:	stur	x27, [x29, #-120]
  41a598:	ldur	x8, [x29, #-40]
  41a59c:	ldur	x9, [x29, #-88]
  41a5a0:	stur	x0, [x29, #-48]
  41a5a4:	add	x8, x9, x8
  41a5a8:	stur	x8, [x29, #-88]
  41a5ac:	cbnz	x27, 41a624 <eval_buffer@@Base+0xc0c>
  41a5b0:	mov	w1, #0x3b                  	// #59
  41a5b4:	bl	41ae80 <find_percent@@Base+0x18>
  41a5b8:	cbz	x0, 41a620 <eval_buffer@@Base+0xc08>
  41a5bc:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41a5c0:	ldur	x27, [x29, #-48]
  41a5c4:	ldr	x8, [x8, #4048]
  41a5c8:	mov	x24, x0
  41a5cc:	sub	x25, x0, x8
  41a5d0:	mov	x0, x27
  41a5d4:	sub	x19, x27, x8
  41a5d8:	bl	4067d0 <strlen@plt>
  41a5dc:	strb	wzr, [x24]
  41a5e0:	ldur	x1, [x29, #-88]
  41a5e4:	add	x0, x27, x0
  41a5e8:	mov	x2, #0xffffffffffffffff    	// #-1
  41a5ec:	bl	409f10 <variable_expand_string@@Base>
  41a5f0:	ldur	x24, [x29, #-88]
  41a5f4:	mov	x0, x24
  41a5f8:	bl	4067d0 <strlen@plt>
  41a5fc:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41a600:	ldr	x8, [x8, #4048]
  41a604:	add	x9, x24, x0
  41a608:	stur	x9, [x29, #-88]
  41a60c:	add	x9, x8, x19
  41a610:	add	x8, x8, x25
  41a614:	add	x27, x8, #0x1
  41a618:	stur	x9, [x29, #-48]
  41a61c:	b	41a624 <eval_buffer@@Base+0xc0c>
  41a620:	mov	x27, xzr
  41a624:	ldur	x0, [x29, #-48]
  41a628:	mov	w1, #0x3a                  	// #58
  41a62c:	bl	41ae80 <find_percent@@Base+0x18>
  41a630:	cbnz	x0, 41a680 <eval_buffer@@Base+0xc68>
  41a634:	ldur	x0, [x29, #-88]
  41a638:	sub	x1, x29, #0x58
  41a63c:	sub	x2, x29, #0x28
  41a640:	bl	41d364 <parse_file_seq@@Base+0x1ee0>
  41a644:	mov	w22, w0
  41a648:	cmp	w0, #0x1
  41a64c:	b.eq	41a6a4 <eval_buffer@@Base+0xc8c>  // b.none
  41a650:	ldur	x24, [x29, #-48]
  41a654:	mov	x0, x24
  41a658:	bl	4067d0 <strlen@plt>
  41a65c:	add	x8, x24, x0
  41a660:	add	x9, x8, #0x1
  41a664:	stur	x9, [x29, #-48]
  41a668:	mov	w9, #0x20                  	// #32
  41a66c:	strb	w9, [x8]
  41a670:	ldp	x0, x2, [x29, #-48]
  41a674:	ldur	x1, [x29, #-88]
  41a678:	bl	409f10 <variable_expand_string@@Base>
  41a67c:	b	41a598 <eval_buffer@@Base+0xb80>
  41a680:	ldur	x8, [x29, #-48]
  41a684:	mov	x24, x0
  41a688:	cmp	x0, x8
  41a68c:	b.ls	41a6a8 <eval_buffer@@Base+0xc90>  // b.plast
  41a690:	mov	x8, x24
  41a694:	ldrb	w9, [x8, #-1]!
  41a698:	cmp	w9, #0x26
  41a69c:	csel	x24, x8, x24, eq  // eq = none
  41a6a0:	b	41a6a8 <eval_buffer@@Base+0xc90>
  41a6a4:	mov	x24, xzr
  41a6a8:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41a6ac:	ldr	x0, [x8, #4048]
  41a6b0:	bl	418138 <next_token@@Base>
  41a6b4:	cmp	w22, #0x1
  41a6b8:	stur	x0, [x29, #-48]
  41a6bc:	b.ne	41a6ec <eval_buffer@@Base+0xcd4>  // b.any
  41a6c0:	ldrb	w8, [x0]
  41a6c4:	cbnz	w8, 41adc4 <eval_buffer@@Base+0x13ac>
  41a6c8:	str	xzr, [sp, #120]
  41a6cc:	stur	xzr, [x29, #-112]
  41a6d0:	str	wzr, [sp, #132]
  41a6d4:	mov	w25, wzr
  41a6d8:	stur	xzr, [x29, #-128]
  41a6dc:	mov	w27, #0x2                   	// #2
  41a6e0:	mov	w19, wzr
  41a6e4:	stur	wzr, [x29, #-120]
  41a6e8:	b	419bb0 <eval_buffer@@Base+0x198>
  41a6ec:	ldrb	w19, [x24]
  41a6f0:	mov	x22, x24
  41a6f4:	sub	x0, x29, #0x30
  41a6f8:	mov	w1, #0x10                  	// #16
  41a6fc:	mov	w2, #0x1                   	// #1
  41a700:	mov	x3, xzr
  41a704:	mov	w4, wzr
  41a708:	strb	wzr, [x22], #1
  41a70c:	mov	w25, #0x1                   	// #1
  41a710:	bl	41b484 <parse_file_seq@@Base>
  41a714:	cmp	w19, #0x26
  41a718:	cset	w8, eq  // eq = none
  41a71c:	csel	x9, x24, x22, ne  // ne = any
  41a720:	strb	w19, [x24]
  41a724:	str	w8, [sp, #132]
  41a728:	stur	x9, [x29, #-48]
  41a72c:	stur	x0, [x29, #-112]
  41a730:	cbz	x0, 41a7ac <eval_buffer@@Base+0xd94>
  41a734:	add	x8, x9, #0x1
  41a738:	stur	x8, [x29, #-48]
  41a73c:	ldrb	w9, [x9, #1]
  41a740:	cmp	w9, #0x3a
  41a744:	cset	w9, eq  // eq = none
  41a748:	str	w9, [sp, #100]
  41a74c:	b.ne	41a758 <eval_buffer@@Base+0xd40>  // b.any
  41a750:	add	x8, x8, #0x1
  41a754:	stur	x8, [x29, #-48]
  41a758:	ldur	x28, [x29, #-88]
  41a75c:	ldrb	w8, [x28]
  41a760:	cbz	w8, 41a7b8 <eval_buffer@@Base+0xda0>
  41a764:	ldur	x24, [x29, #-48]
  41a768:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  41a76c:	ldr	x8, [x22, #4048]
  41a770:	mov	x0, x24
  41a774:	sub	x19, x24, x8
  41a778:	bl	4067d0 <strlen@plt>
  41a77c:	mov	x25, x0
  41a780:	add	x24, x24, x0
  41a784:	mov	x0, x28
  41a788:	bl	4067d0 <strlen@plt>
  41a78c:	add	x2, x0, #0x1
  41a790:	mov	x0, x24
  41a794:	mov	x1, x28
  41a798:	bl	409c78 <variable_buffer_output@@Base>
  41a79c:	ldr	x8, [x22, #4048]
  41a7a0:	add	x8, x8, x19
  41a7a4:	stur	x8, [x29, #-48]
  41a7a8:	b	41a7bc <eval_buffer@@Base+0xda4>
  41a7ac:	str	xzr, [sp, #120]
  41a7b0:	stur	xzr, [x29, #-112]
  41a7b4:	b	41a6d8 <eval_buffer@@Base+0xcc0>
  41a7b8:	mov	x25, xzr
  41a7bc:	ldur	x0, [x29, #-48]
  41a7c0:	sub	x1, x29, #0x38
  41a7c4:	bl	41bda0 <parse_file_seq@@Base+0x91c>
  41a7c8:	ldurb	w19, [x29, #-56]
  41a7cc:	stur	x0, [x29, #-48]
  41a7d0:	tbnz	w19, #0, 41a8f8 <eval_buffer@@Base+0xee0>
  41a7d4:	ldur	x0, [x29, #-88]
  41a7d8:	mov	w1, #0x3d                  	// #61
  41a7dc:	bl	41ae80 <find_percent@@Base+0x18>
  41a7e0:	ldur	x1, [x29, #-88]
  41a7e4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41a7e8:	ldrb	w9, [x9, #2392]
  41a7ec:	ldrb	w8, [x1]
  41a7f0:	str	w9, [sp, #96]
  41a7f4:	cbz	w8, 41a838 <eval_buffer@@Base+0xe20>
  41a7f8:	ldur	x8, [x29, #-48]
  41a7fc:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  41a800:	ldr	x9, [x22, #4048]
  41a804:	mov	x2, #0xffffffffffffffff    	// #-1
  41a808:	add	x0, x8, x25
  41a80c:	sub	x19, x8, x9
  41a810:	bl	409f10 <variable_expand_string@@Base>
  41a814:	ldr	x8, [x22, #4048]
  41a818:	add	x0, x8, x19
  41a81c:	stur	x0, [x29, #-48]
  41a820:	cbnz	x27, 41a838 <eval_buffer@@Base+0xe20>
  41a824:	mov	w1, #0x3b                  	// #59
  41a828:	bl	41ae80 <find_percent@@Base+0x18>
  41a82c:	mov	x27, x0
  41a830:	cbz	x0, 41a838 <eval_buffer@@Base+0xe20>
  41a834:	strb	wzr, [x27], #1
  41a838:	ldur	x0, [x29, #-48]
  41a83c:	mov	w1, #0x3a                  	// #58
  41a840:	bl	406d10 <strchr@plt>
  41a844:	b	41a850 <eval_buffer@@Base+0xe38>
  41a848:	mov	w8, wzr
  41a84c:	tbz	w8, #0, 41a89c <eval_buffer@@Base+0xe84>
  41a850:	cbz	x0, 41a89c <eval_buffer@@Base+0xe84>
  41a854:	ldurb	w8, [x0, #-1]
  41a858:	cmp	w8, #0x5c
  41a85c:	b.ne	41a89c <eval_buffer@@Base+0xe84>  // b.any
  41a860:	ldurb	w8, [x0, #-1]
  41a864:	cmp	w8, #0x5c
  41a868:	b.ne	41a848 <eval_buffer@@Base+0xe30>  // b.any
  41a86c:	mov	x9, #0xfffffffffffffffe    	// #-2
  41a870:	mov	x8, x9
  41a874:	ldrb	w9, [x0, x9]
  41a878:	cmp	w9, #0x5c
  41a87c:	sub	x9, x8, #0x1
  41a880:	b.eq	41a870 <eval_buffer@@Base+0xe58>  // b.none
  41a884:	tbnz	w8, #0, 41a848 <eval_buffer@@Base+0xe30>
  41a888:	add	x0, x0, #0x1
  41a88c:	mov	w1, #0x3a                  	// #58
  41a890:	bl	406d10 <strchr@plt>
  41a894:	mov	w8, #0x1                   	// #1
  41a898:	tbnz	w8, #0, 41a850 <eval_buffer@@Base+0xe38>
  41a89c:	cbz	x0, 41a98c <eval_buffer@@Base+0xf74>
  41a8a0:	sub	x0, x29, #0x30
  41a8a4:	mov	w1, #0x10                  	// #16
  41a8a8:	mov	w2, #0x40                  	// #64
  41a8ac:	mov	w4, #0x4                   	// #4
  41a8b0:	mov	x3, xzr
  41a8b4:	bl	41b484 <parse_file_seq@@Base>
  41a8b8:	ldur	x8, [x29, #-48]
  41a8bc:	add	x8, x8, #0x1
  41a8c0:	stur	x8, [x29, #-48]
  41a8c4:	cbz	x0, 41ad5c <eval_buffer@@Base+0x1344>
  41a8c8:	ldr	x8, [x0]
  41a8cc:	mov	x24, x0
  41a8d0:	cbnz	x8, 41ad68 <eval_buffer@@Base+0x1350>
  41a8d4:	add	x0, x24, #0x8
  41a8d8:	bl	41af80 <find_percent_cached@@Base>
  41a8dc:	str	x0, [sp, #80]
  41a8e0:	cbz	x0, 41ad74 <eval_buffer@@Base+0x135c>
  41a8e4:	ldr	x8, [x24, #8]
  41a8e8:	mov	x0, x24
  41a8ec:	str	x8, [sp, #120]
  41a8f0:	bl	406cf0 <free@plt>
  41a8f4:	b	41a990 <eval_buffer@@Base+0xf78>
  41a8f8:	ldp	x27, x9, [x29, #-120]
  41a8fc:	cbz	x27, 41a954 <eval_buffer@@Base+0xf3c>
  41a900:	adrp	x25, 43f000 <stdio_traced@@Base+0x1a38>
  41a904:	ldr	x8, [x25, #4048]
  41a908:	mov	w9, #0x3b                  	// #59
  41a90c:	strb	w9, [x27, #-1]!
  41a910:	sub	x22, x0, x8
  41a914:	mov	x0, x27
  41a918:	bl	417d0c <collapse_continuations@@Base>
  41a91c:	ldur	x24, [x29, #-48]
  41a920:	mov	x0, x24
  41a924:	bl	4067d0 <strlen@plt>
  41a928:	add	x24, x24, x0
  41a92c:	mov	x0, x27
  41a930:	bl	4067d0 <strlen@plt>
  41a934:	add	x2, x0, #0x1
  41a938:	mov	x0, x24
  41a93c:	mov	x1, x27
  41a940:	bl	409c78 <variable_buffer_output@@Base>
  41a944:	ldr	x8, [x25, #4048]
  41a948:	ldur	x9, [x29, #-112]
  41a94c:	add	x8, x8, x22
  41a950:	stur	x8, [x29, #-48]
  41a954:	ldur	x1, [x29, #-48]
  41a958:	ldr	x4, [sp, #112]
  41a95c:	tst	w19, #0x10
  41a960:	mov	w27, #0x2                   	// #2
  41a964:	mov	w8, #0x5                   	// #5
  41a968:	csel	w2, w27, w8, eq  // eq = none
  41a96c:	sub	x3, x29, #0x38
  41a970:	mov	x0, x9
  41a974:	bl	41d5c4 <parse_file_seq@@Base+0x2140>
  41a978:	str	xzr, [sp, #120]
  41a97c:	stur	xzr, [x29, #-112]
  41a980:	mov	w25, wzr
  41a984:	stur	xzr, [x29, #-128]
  41a988:	b	41a6e0 <eval_buffer@@Base+0xcc8>
  41a98c:	str	xzr, [sp, #120]
  41a990:	ldur	x24, [x29, #-48]
  41a994:	mov	x0, x24
  41a998:	stur	x24, [x29, #-96]
  41a99c:	bl	4067d0 <strlen@plt>
  41a9a0:	add	x8, x24, x0
  41a9a4:	sub	x8, x8, #0x1
  41a9a8:	sub	x0, x29, #0x60
  41a9ac:	sub	x1, x29, #0x40
  41a9b0:	stur	x8, [x29, #-64]
  41a9b4:	bl	40cb70 <strip_whitespace@@Base>
  41a9b8:	ldur	x0, [x29, #-96]
  41a9bc:	ldur	x8, [x29, #-64]
  41a9c0:	cmp	x0, x8
  41a9c4:	b.hi	41a9e4 <eval_buffer@@Base+0xfcc>  // b.pmore
  41a9c8:	ldrb	w9, [x0]
  41a9cc:	cbz	w9, 41a9e4 <eval_buffer@@Base+0xfcc>
  41a9d0:	sub	x8, x8, x0
  41a9d4:	add	x1, x8, #0x1
  41a9d8:	bl	4180d8 <xstrndup@@Base>
  41a9dc:	str	x0, [sp, #88]
  41a9e0:	b	41a9e8 <eval_buffer@@Base+0xfd0>
  41a9e4:	str	xzr, [sp, #88]
  41a9e8:	cbz	x27, 41aa4c <eval_buffer@@Base+0x1034>
  41a9ec:	mov	x0, x27
  41a9f0:	bl	4067d0 <strlen@plt>
  41a9f4:	ldr	w8, [x23, #48]
  41a9f8:	ldr	x9, [sp, #72]
  41a9fc:	mov	x24, x0
  41aa00:	str	w8, [sp, #108]
  41aa04:	add	x8, x0, #0x2
  41aa08:	cmp	x8, x9
  41aa0c:	b.ls	41aa24 <eval_buffer@@Base+0x100c>  // b.plast
  41aa10:	ldr	x0, [sp, #136]
  41aa14:	lsl	x1, x8, #1
  41aa18:	str	x1, [sp, #72]
  41aa1c:	bl	41803c <xrealloc@@Base>
  41aa20:	str	x0, [sp, #136]
  41aa24:	ldr	x19, [sp, #136]
  41aa28:	mov	x1, x27
  41aa2c:	mov	x2, x24
  41aa30:	mov	x0, x19
  41aa34:	bl	406790 <memcpy@plt>
  41aa38:	add	x8, x24, #0x1
  41aa3c:	stur	x8, [x29, #-128]
  41aa40:	mov	w8, #0xa                   	// #10
  41aa44:	strb	w8, [x19, x24]
  41aa48:	b	41aa50 <eval_buffer@@Base+0x1038>
  41aa4c:	stur	xzr, [x29, #-128]
  41aa50:	ldr	w8, [sp, #64]
  41aa54:	cbz	w8, 41aa6c <eval_buffer@@Base+0x1054>
  41aa58:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41aa5c:	ldr	x8, [x8, #56]
  41aa60:	ldr	x8, [x8, #8]
  41aa64:	ldrb	w8, [x8]
  41aa68:	cbz	w8, 41aa78 <eval_buffer@@Base+0x1060>
  41aa6c:	mov	w27, wzr
  41aa70:	mov	w25, wzr
  41aa74:	b	41a6e0 <eval_buffer@@Base+0xcc8>
  41aa78:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41aa7c:	ldr	x8, [x8, #248]
  41aa80:	ldur	x19, [x29, #-112]
  41aa84:	str	x8, [sp, #48]
  41aa88:	b	41aaa8 <eval_buffer@@Base+0x1090>
  41aa8c:	str	wzr, [sp, #60]
  41aa90:	ldr	x19, [sp, #32]
  41aa94:	ldur	x2, [x29, #-120]
  41aa98:	ldr	w8, [sp, #60]
  41aa9c:	cbz	w8, 41ac80 <eval_buffer@@Base+0x1268>
  41aaa0:	ldr	x19, [x19]
  41aaa4:	cbz	x19, 41aa6c <eval_buffer@@Base+0x1054>
  41aaa8:	ldr	x22, [x19, #8]
  41aaac:	mov	w1, #0x25                  	// #37
  41aab0:	mov	x0, x22
  41aab4:	bl	406d10 <strchr@plt>
  41aab8:	cbnz	x0, 41aa6c <eval_buffer@@Base+0x1054>
  41aabc:	ldrb	w8, [x22]
  41aac0:	cmp	w8, #0x2e
  41aac4:	str	w8, [sp, #44]
  41aac8:	b.ne	41aadc <eval_buffer@@Base+0x10c4>  // b.any
  41aacc:	mov	w1, #0x2f                  	// #47
  41aad0:	mov	x0, x22
  41aad4:	bl	406d10 <strchr@plt>
  41aad8:	cbz	x0, 41aaa0 <eval_buffer@@Base+0x1088>
  41aadc:	ldr	x8, [sp, #48]
  41aae0:	stur	x22, [x29, #-120]
  41aae4:	str	x19, [sp, #32]
  41aae8:	ldr	x27, [x8, #24]
  41aaec:	cbz	x27, 41aa8c <eval_buffer@@Base+0x1074>
  41aaf0:	ldur	x8, [x29, #-120]
  41aaf4:	str	wzr, [sp, #60]
  41aaf8:	add	x8, x8, #0x1
  41aafc:	str	x8, [sp, #24]
  41ab00:	ldr	x19, [x27, #8]
  41ab04:	mov	x8, x19
  41ab08:	cbnz	x19, 41ab14 <eval_buffer@@Base+0x10fc>
  41ab0c:	ldr	x8, [x27, #16]
  41ab10:	ldr	x8, [x8]
  41ab14:	ldrb	w8, [x8]
  41ab18:	cmp	w8, #0x2e
  41ab1c:	b.eq	41ab84 <eval_buffer@@Base+0x116c>  // b.none
  41ab20:	mov	x8, x19
  41ab24:	cbnz	x19, 41ab30 <eval_buffer@@Base+0x1118>
  41ab28:	ldr	x8, [x27, #16]
  41ab2c:	ldr	x8, [x8]
  41ab30:	ldur	x9, [x29, #-120]
  41ab34:	cmp	x9, x8
  41ab38:	b.eq	41ac64 <eval_buffer@@Base+0x124c>  // b.none
  41ab3c:	mov	x8, x19
  41ab40:	cbnz	x19, 41ab4c <eval_buffer@@Base+0x1134>
  41ab44:	ldr	x8, [x27, #16]
  41ab48:	ldr	x8, [x8]
  41ab4c:	ldrb	w8, [x8]
  41ab50:	ldr	w9, [sp, #44]
  41ab54:	cmp	w9, w8
  41ab58:	b.ne	41ab84 <eval_buffer@@Base+0x116c>  // b.any
  41ab5c:	ldr	w8, [sp, #44]
  41ab60:	cbz	w8, 41ac68 <eval_buffer@@Base+0x1250>
  41ab64:	mov	x8, x19
  41ab68:	cbnz	x19, 41ab74 <eval_buffer@@Base+0x115c>
  41ab6c:	ldr	x8, [x27, #16]
  41ab70:	ldr	x8, [x8]
  41ab74:	ldr	x0, [sp, #24]
  41ab78:	add	x1, x8, #0x1
  41ab7c:	bl	406cb0 <strcmp@plt>
  41ab80:	cbz	w0, 41ac64 <eval_buffer@@Base+0x124c>
  41ab84:	ldr	x8, [sp, #48]
  41ab88:	ldr	x22, [x8, #24]
  41ab8c:	cbnz	x22, 41abb0 <eval_buffer@@Base+0x1198>
  41ab90:	ldr	w8, [sp, #60]
  41ab94:	cmp	w8, #0x0
  41ab98:	cset	w8, eq  // eq = none
  41ab9c:	b	41ac70 <eval_buffer@@Base+0x1258>
  41aba0:	mov	w8, wzr
  41aba4:	cbnz	w8, 41ab90 <eval_buffer@@Base+0x1178>
  41aba8:	ldr	x22, [x22]
  41abac:	cbz	x22, 41ab90 <eval_buffer@@Base+0x1178>
  41abb0:	ldr	x24, [x22, #8]
  41abb4:	mov	x0, x24
  41abb8:	cbnz	x24, 41abc4 <eval_buffer@@Base+0x11ac>
  41abbc:	ldr	x8, [x22, #16]
  41abc0:	ldr	x0, [x8]
  41abc4:	bl	4067d0 <strlen@plt>
  41abc8:	mov	x28, x0
  41abcc:	cbnz	x24, 41abd8 <eval_buffer@@Base+0x11c0>
  41abd0:	ldr	x8, [x22, #16]
  41abd4:	ldr	x24, [x8]
  41abd8:	ldur	x25, [x29, #-120]
  41abdc:	mov	x1, x24
  41abe0:	mov	x2, x28
  41abe4:	mov	x0, x25
  41abe8:	bl	406a70 <strncmp@plt>
  41abec:	cbnz	w0, 41aba0 <eval_buffer@@Base+0x1188>
  41abf0:	add	x8, x25, x28
  41abf4:	mov	x9, x19
  41abf8:	cbnz	x19, 41ac04 <eval_buffer@@Base+0x11ec>
  41abfc:	ldr	x9, [x27, #16]
  41ac00:	ldr	x9, [x9]
  41ac04:	cmp	x8, x9
  41ac08:	b.eq	41ac50 <eval_buffer@@Base+0x1238>  // b.none
  41ac0c:	ldrb	w9, [x8]
  41ac10:	mov	x10, x19
  41ac14:	cbnz	x19, 41ac20 <eval_buffer@@Base+0x1208>
  41ac18:	ldr	x10, [x27, #16]
  41ac1c:	ldr	x10, [x10]
  41ac20:	ldrb	w10, [x10]
  41ac24:	cmp	w9, w10
  41ac28:	b.ne	41aba0 <eval_buffer@@Base+0x1188>  // b.any
  41ac2c:	cbz	w9, 41ac50 <eval_buffer@@Base+0x1238>
  41ac30:	add	x0, x8, #0x1
  41ac34:	mov	x8, x19
  41ac38:	cbnz	x19, 41ac44 <eval_buffer@@Base+0x122c>
  41ac3c:	ldr	x8, [x27, #16]
  41ac40:	ldr	x8, [x8]
  41ac44:	add	x1, x8, #0x1
  41ac48:	bl	406cb0 <strcmp@plt>
  41ac4c:	cbnz	w0, 41aba0 <eval_buffer@@Base+0x1188>
  41ac50:	mov	w9, #0x1                   	// #1
  41ac54:	mov	w8, #0x1                   	// #1
  41ac58:	str	w9, [sp, #60]
  41ac5c:	cbz	w8, 41aba8 <eval_buffer@@Base+0x1190>
  41ac60:	b	41ab90 <eval_buffer@@Base+0x1178>
  41ac64:	mov	w8, wzr
  41ac68:	mov	w9, #0x1                   	// #1
  41ac6c:	str	w9, [sp, #60]
  41ac70:	tbz	w8, #0, 41aa90 <eval_buffer@@Base+0x1078>
  41ac74:	ldr	x27, [x27]
  41ac78:	cbnz	x27, 41ab00 <eval_buffer@@Base+0x10e8>
  41ac7c:	b	41aa90 <eval_buffer@@Base+0x1078>
  41ac80:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41ac84:	mov	w1, #0xd                   	// #13
  41ac88:	mov	w3, #0x2                   	// #2
  41ac8c:	add	x0, x0, #0x887
  41ac90:	mov	w4, wzr
  41ac94:	mov	x5, xzr
  41ac98:	mov	x6, xzr
  41ac9c:	bl	421720 <define_variable_in_set@@Base>
  41aca0:	b	41aa6c <eval_buffer@@Base+0x1054>
  41aca4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41aca8:	ldr	x8, [x8, #2408]
  41acac:	ldr	w8, [x8]
  41acb0:	cbnz	w8, 41adf8 <eval_buffer@@Base+0x13e0>
  41acb4:	ldr	x19, [sp, #136]
  41acb8:	ldur	x0, [x29, #-112]
  41acbc:	ldur	x7, [x29, #-128]
  41acc0:	cbz	x0, 41acfc <eval_buffer@@Base+0x12e4>
  41acc4:	ldp	w8, w5, [sp, #104]
  41acc8:	ldr	w9, [sp, #96]
  41accc:	ldr	w1, [sp, #132]
  41acd0:	ldr	x2, [sp, #120]
  41acd4:	mov	w8, w8
  41acd8:	stp	x8, xzr, [x29, #-24]
  41acdc:	sub	x8, x29, #0x20
  41ace0:	str	x8, [sp, #16]
  41ace4:	ldr	w8, [sp, #100]
  41ace8:	ldp	x3, x4, [sp, #80]
  41acec:	mov	x6, x19
  41acf0:	strb	w9, [sp, #8]
  41acf4:	str	w8, [sp]
  41acf8:	bl	41bf80 <parse_file_seq@@Base+0xafc>
  41acfc:	mov	x0, x21
  41ad00:	bl	406cf0 <free@plt>
  41ad04:	mov	x0, x19
  41ad08:	bl	406cf0 <free@plt>
  41ad0c:	ldp	x20, x19, [sp, #352]
  41ad10:	ldp	x22, x21, [sp, #336]
  41ad14:	ldp	x24, x23, [sp, #320]
  41ad18:	ldp	x26, x25, [sp, #304]
  41ad1c:	ldp	x28, x27, [sp, #288]
  41ad20:	ldp	x29, x30, [sp, #272]
  41ad24:	add	sp, sp, #0x170
  41ad28:	ret
  41ad2c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ad30:	add	x1, x1, #0xe21
  41ad34:	mov	w2, #0x5                   	// #5
  41ad38:	mov	x0, xzr
  41ad3c:	bl	406e50 <dcgettext@plt>
  41ad40:	mov	x2, x0
  41ad44:	mov	x0, x19
  41ad48:	mov	x1, xzr
  41ad4c:	bl	4190fc <fatal@@Base>
  41ad50:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ad54:	add	x1, x1, #0xe92
  41ad58:	b	41ae0c <eval_buffer@@Base+0x13f4>
  41ad5c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ad60:	add	x1, x1, #0xf02
  41ad64:	b	41ad7c <eval_buffer@@Base+0x1364>
  41ad68:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ad6c:	add	x1, x1, #0xf19
  41ad70:	b	41ae0c <eval_buffer@@Base+0x13f4>
  41ad74:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ad78:	add	x1, x1, #0xf32
  41ad7c:	mov	w2, #0x5                   	// #5
  41ad80:	b	41ae14 <eval_buffer@@Base+0x13fc>
  41ad84:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ad88:	add	x1, x1, #0xe6d
  41ad8c:	b	41ae0c <eval_buffer@@Base+0x13f4>
  41ad90:	ldur	x0, [x29, #-88]
  41ad94:	bl	4067d0 <strlen@plt>
  41ad98:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ad9c:	mov	x20, x0
  41ada0:	add	x1, x1, #0xe5a
  41ada4:	mov	w2, #0x5                   	// #5
  41ada8:	mov	x0, xzr
  41adac:	bl	406e50 <dcgettext@plt>
  41adb0:	ldur	x3, [x29, #-88]
  41adb4:	mov	x2, x0
  41adb8:	ldr	x0, [sp, #112]
  41adbc:	mov	x1, x20
  41adc0:	bl	4190fc <fatal@@Base>
  41adc4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41adc8:	ldrb	w8, [x8, #2392]
  41adcc:	cmp	w8, #0x9
  41add0:	b.ne	41ae04 <eval_buffer@@Base+0x13ec>  // b.any
  41add4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41add8:	add	x1, x1, #0xead
  41addc:	mov	w2, #0x8                   	// #8
  41ade0:	mov	x0, x28
  41ade4:	bl	406a70 <strncmp@plt>
  41ade8:	cbnz	w0, 41ae04 <eval_buffer@@Base+0x13ec>
  41adec:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41adf0:	add	x1, x1, #0xeb6
  41adf4:	b	41ae0c <eval_buffer@@Base+0x13f4>
  41adf8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41adfc:	add	x1, x1, #0xf52
  41ae00:	b	41ae0c <eval_buffer@@Base+0x13f4>
  41ae04:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ae08:	add	x1, x1, #0xef0
  41ae0c:	mov	w2, #0x5                   	// #5
  41ae10:	mov	x0, xzr
  41ae14:	bl	406e50 <dcgettext@plt>
  41ae18:	mov	x2, x0
  41ae1c:	ldr	x0, [sp, #112]
  41ae20:	mov	x1, xzr
  41ae24:	bl	4190fc <fatal@@Base>
  41ae28:	stp	x29, x30, [sp, #-32]!
  41ae2c:	stp	x20, x19, [sp, #16]
  41ae30:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  41ae34:	ldr	x8, [x20, #2408]
  41ae38:	mov	x19, x0
  41ae3c:	mov	x29, sp
  41ae40:	ldr	x8, [x8, #8]
  41ae44:	mov	x0, x8
  41ae48:	bl	406cf0 <free@plt>
  41ae4c:	ldr	x8, [x20, #2408]
  41ae50:	ldr	x0, [x8, #16]
  41ae54:	bl	406cf0 <free@plt>
  41ae58:	str	x19, [x20, #2408]
  41ae5c:	ldp	x20, x19, [sp, #16]
  41ae60:	ldp	x29, x30, [sp], #32
  41ae64:	ret

000000000041ae68 <find_percent@@Base>:
  41ae68:	stp	x29, x30, [sp, #-16]!
  41ae6c:	mov	w1, #0x25                  	// #37
  41ae70:	mov	x29, sp
  41ae74:	bl	41ae80 <find_percent@@Base+0x18>
  41ae78:	ldp	x29, x30, [sp], #16
  41ae7c:	ret
  41ae80:	stp	x29, x30, [sp, #-80]!
  41ae84:	stp	x24, x23, [sp, #32]
  41ae88:	stp	x22, x21, [sp, #48]
  41ae8c:	stp	x20, x19, [sp, #64]
  41ae90:	mov	w20, w1
  41ae94:	mov	x21, x0
  41ae98:	mov	x22, xzr
  41ae9c:	add	x24, x0, #0x1
  41aea0:	mov	x23, x0
  41aea4:	str	x25, [sp, #16]
  41aea8:	mov	x29, sp
  41aeac:	b	41aee4 <find_percent@@Base+0x7c>
  41aeb0:	cmp	w25, #0x0
  41aeb4:	cinc	w9, w25, lt  // lt = tstop
  41aeb8:	sub	x8, x24, x23
  41aebc:	sbfx	x9, x9, #1, #31
  41aec0:	add	x0, x23, w25, sxtw
  41aec4:	add	x23, x23, x9
  41aec8:	sub	x8, x8, x9
  41aecc:	add	x2, x8, x22
  41aed0:	mov	x1, x23
  41aed4:	bl	4067a0 <memmove@plt>
  41aed8:	tst	w25, #0x1
  41aedc:	csel	x19, x23, x19, eq  // eq = none
  41aee0:	tbz	w25, #0, 41af64 <find_percent@@Base+0xfc>
  41aee4:	mov	x0, x23
  41aee8:	mov	w1, w20
  41aeec:	bl	406d10 <strchr@plt>
  41aef0:	cbz	x0, 41af60 <find_percent@@Base+0xf8>
  41aef4:	mov	x23, x0
  41aef8:	cmp	x0, x21
  41aefc:	b.ls	41af58 <find_percent@@Base+0xf0>  // b.plast
  41af00:	ldurb	w8, [x23, #-1]
  41af04:	cmp	w8, #0x5c
  41af08:	b.ne	41af58 <find_percent@@Base+0xf0>  // b.any
  41af0c:	sub	x8, x23, #0x2
  41af10:	cmp	x8, x21
  41af14:	b.cs	41af20 <find_percent@@Base+0xb8>  // b.hs, b.nlast
  41af18:	mov	w8, #0xfffffffe            	// #-2
  41af1c:	b	41af40 <find_percent@@Base+0xd8>
  41af20:	mov	x8, #0xfffffffffffffffe    	// #-2
  41af24:	ldrb	w9, [x23, x8]
  41af28:	cmp	w9, #0x5c
  41af2c:	b.ne	41af40 <find_percent@@Base+0xd8>  // b.any
  41af30:	sub	x8, x8, #0x1
  41af34:	add	x9, x23, x8
  41af38:	cmp	x9, x21
  41af3c:	b.cs	41af24 <find_percent@@Base+0xbc>  // b.hs, b.nlast
  41af40:	add	w25, w8, #0x1
  41af44:	cbnz	x22, 41aeb0 <find_percent@@Base+0x48>
  41af48:	mov	x0, x21
  41af4c:	bl	4067d0 <strlen@plt>
  41af50:	mov	x22, x0
  41af54:	b	41aeb0 <find_percent@@Base+0x48>
  41af58:	mov	x19, x23
  41af5c:	b	41af64 <find_percent@@Base+0xfc>
  41af60:	mov	x19, xzr
  41af64:	mov	x0, x19
  41af68:	ldp	x20, x19, [sp, #64]
  41af6c:	ldp	x22, x21, [sp, #48]
  41af70:	ldp	x24, x23, [sp, #32]
  41af74:	ldr	x25, [sp, #16]
  41af78:	ldp	x29, x30, [sp], #80
  41af7c:	ret

000000000041af80 <find_percent_cached@@Base>:
  41af80:	stp	x29, x30, [sp, #-64]!
  41af84:	stp	x24, x23, [sp, #16]
  41af88:	stp	x22, x21, [sp, #32]
  41af8c:	stp	x20, x19, [sp, #48]
  41af90:	ldr	x19, [x0]
  41af94:	mov	x29, sp
  41af98:	ldrb	w8, [x19]
  41af9c:	cmp	w8, #0x25
  41afa0:	b.eq	41b0c0 <find_percent_cached@@Base+0x140>  // b.none
  41afa4:	mov	x20, x0
  41afa8:	mov	x21, xzr
  41afac:	mov	x22, xzr
  41afb0:	b	41aff8 <find_percent_cached@@Base+0x78>
  41afb4:	mov	w8, #0xfffffffe            	// #-2
  41afb8:	add	w24, w8, #0x1
  41afbc:	cbz	x21, 41b064 <find_percent_cached@@Base+0xe4>
  41afc0:	ldr	x8, [x20]
  41afc4:	cmp	w24, #0x0
  41afc8:	cinc	w9, w24, lt  // lt = tstop
  41afcc:	sbfx	x23, x9, #1, #31
  41afd0:	sub	x9, x22, x23
  41afd4:	sub	x8, x19, x8
  41afd8:	add	x10, x21, x8
  41afdc:	sub	x8, x9, x8
  41afe0:	add	x0, x10, w24, sxtw
  41afe4:	add	x1, x10, x23
  41afe8:	add	x2, x8, #0x1
  41afec:	bl	4067a0 <memmove@plt>
  41aff0:	add	x19, x19, x23
  41aff4:	tbz	w24, #0, 41b0a4 <find_percent_cached@@Base+0x124>
  41aff8:	mov	w1, #0x25                  	// #37
  41affc:	mov	x0, x19
  41b000:	bl	406d10 <strchr@plt>
  41b004:	mov	x19, x0
  41b008:	cbz	x0, 41b0a4 <find_percent_cached@@Base+0x124>
  41b00c:	ldurb	w8, [x19, #-1]
  41b010:	cmp	w8, #0x5c
  41b014:	b.ne	41b0a4 <find_percent_cached@@Base+0x124>  // b.any
  41b018:	ldr	x23, [x20]
  41b01c:	sub	x8, x19, #0x2
  41b020:	cmp	x8, x23
  41b024:	b.cc	41afb4 <find_percent_cached@@Base+0x34>  // b.lo, b.ul, b.last
  41b028:	ldrb	w8, [x8]
  41b02c:	cmp	w8, #0x5c
  41b030:	b.ne	41afb4 <find_percent_cached@@Base+0x34>  // b.any
  41b034:	sub	x9, x19, #0x3
  41b038:	mov	w8, #0xfffffffd            	// #-3
  41b03c:	ldr	x23, [x20]
  41b040:	cmp	x9, x23
  41b044:	b.cc	41b05c <find_percent_cached@@Base+0xdc>  // b.lo, b.ul, b.last
  41b048:	ldrb	w10, [x9], #-1
  41b04c:	sub	w8, w8, #0x1
  41b050:	cmp	w10, #0x5c
  41b054:	b.eq	41b03c <find_percent_cached@@Base+0xbc>  // b.none
  41b058:	add	w8, w8, #0x1
  41b05c:	add	w24, w8, #0x1
  41b060:	cbnz	x21, 41afc0 <find_percent_cached@@Base+0x40>
  41b064:	mov	x0, x23
  41b068:	bl	4067d0 <strlen@plt>
  41b06c:	add	x9, x0, #0x10
  41b070:	mov	x8, sp
  41b074:	and	x9, x9, #0xfffffffffffffff0
  41b078:	mov	x22, x0
  41b07c:	sub	x21, x8, x9
  41b080:	add	x2, x0, #0x1
  41b084:	mov	sp, x21
  41b088:	mov	x0, x21
  41b08c:	mov	x1, x23
  41b090:	bl	406790 <memcpy@plt>
  41b094:	sub	x8, x19, x23
  41b098:	add	x19, x21, x8
  41b09c:	str	x21, [x20]
  41b0a0:	b	41afc0 <find_percent_cached@@Base+0x40>
  41b0a4:	cbz	x21, 41b0c0 <find_percent_cached@@Base+0x140>
  41b0a8:	ldr	x0, [x20]
  41b0ac:	bl	420f28 <strcache_add@@Base>
  41b0b0:	str	x0, [x20]
  41b0b4:	cbz	x19, 41b0c0 <find_percent_cached@@Base+0x140>
  41b0b8:	sub	x8, x19, x21
  41b0bc:	add	x19, x0, x8
  41b0c0:	mov	x0, x19
  41b0c4:	mov	sp, x29
  41b0c8:	ldp	x20, x19, [sp, #48]
  41b0cc:	ldp	x22, x21, [sp, #32]
  41b0d0:	ldp	x24, x23, [sp, #16]
  41b0d4:	ldp	x29, x30, [sp], #64
  41b0d8:	ret

000000000041b0dc <construct_include_path@@Base>:
  41b0dc:	sub	sp, sp, #0xd0
  41b0e0:	stp	x20, x19, [sp, #192]
  41b0e4:	mov	x20, x0
  41b0e8:	stp	x29, x30, [sp, #128]
  41b0ec:	str	x25, [sp, #144]
  41b0f0:	stp	x24, x23, [sp, #160]
  41b0f4:	stp	x22, x21, [sp, #176]
  41b0f8:	add	x29, sp, #0x80
  41b0fc:	cbz	x0, 41b124 <construct_include_path@@Base+0x48>
  41b100:	ldr	x8, [x20]
  41b104:	cbz	x8, 41b124 <construct_include_path@@Base+0x48>
  41b108:	mov	x8, xzr
  41b10c:	add	x9, x20, #0x8
  41b110:	ldr	x10, [x9, x8]
  41b114:	add	x8, x8, #0x8
  41b118:	cbnz	x10, 41b110 <construct_include_path@@Base+0x34>
  41b11c:	add	x0, x8, #0x28
  41b120:	b	41b128 <construct_include_path@@Base+0x4c>
  41b124:	mov	w0, #0x28                  	// #40
  41b128:	bl	418070 <xmalloc@@Base>
  41b12c:	mov	x19, x0
  41b130:	adrp	x24, 43f000 <stdio_traced@@Base+0x1a38>
  41b134:	str	xzr, [x24, #1568]
  41b138:	cbz	x20, 41b214 <construct_include_path@@Base+0x138>
  41b13c:	ldr	x21, [x20]
  41b140:	cbz	x21, 41b214 <construct_include_path@@Base+0x138>
  41b144:	mov	x25, xzr
  41b148:	b	41b170 <construct_include_path@@Base+0x94>
  41b14c:	mov	x0, x21
  41b150:	bl	421000 <strcache_add_len@@Base>
  41b154:	add	x8, x25, #0x1
  41b158:	str	x0, [x19, x25, lsl #3]
  41b15c:	mov	x25, x8
  41b160:	mov	x0, x22
  41b164:	bl	406cf0 <free@plt>
  41b168:	ldr	x21, [x20]
  41b16c:	cbz	x21, 41b218 <construct_include_path@@Base+0x13c>
  41b170:	ldrb	w8, [x21]
  41b174:	cmp	w8, #0x7e
  41b178:	b.ne	41b194 <construct_include_path@@Base+0xb8>  // b.any
  41b17c:	mov	x0, x21
  41b180:	bl	41b318 <tilde_expand@@Base>
  41b184:	cmp	x0, #0x0
  41b188:	mov	x22, x0
  41b18c:	csel	x21, x21, x0, eq  // eq = none
  41b190:	b	41b198 <construct_include_path@@Base+0xbc>
  41b194:	mov	x22, xzr
  41b198:	add	x20, x20, #0x8
  41b19c:	mov	x1, sp
  41b1a0:	mov	x0, x21
  41b1a4:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  41b1a8:	mov	w23, w0
  41b1ac:	cmn	w0, #0x1
  41b1b0:	b.ne	41b1c4 <construct_include_path@@Base+0xe8>  // b.any
  41b1b4:	bl	406f00 <__errno_location@plt>
  41b1b8:	ldr	w8, [x0]
  41b1bc:	cmp	w8, #0x4
  41b1c0:	b.eq	41b19c <construct_include_path@@Base+0xc0>  // b.none
  41b1c4:	cbnz	w23, 41b160 <construct_include_path@@Base+0x84>
  41b1c8:	ldr	w8, [sp, #16]
  41b1cc:	and	w8, w8, #0xf000
  41b1d0:	cmp	w8, #0x4, lsl #12
  41b1d4:	b.ne	41b160 <construct_include_path@@Base+0x84>  // b.any
  41b1d8:	mov	x0, x21
  41b1dc:	bl	4067d0 <strlen@plt>
  41b1e0:	mov	x1, x0
  41b1e4:	cmp	x0, #0x2
  41b1e8:	b.cc	41b200 <construct_include_path@@Base+0x124>  // b.lo, b.ul, b.last
  41b1ec:	add	x8, x21, x1
  41b1f0:	ldurb	w8, [x8, #-1]
  41b1f4:	sub	x0, x1, #0x1
  41b1f8:	cmp	w8, #0x2f
  41b1fc:	b.eq	41b1e0 <construct_include_path@@Base+0x104>  // b.none
  41b200:	ldr	x8, [x24, #1568]
  41b204:	cmp	x1, x8
  41b208:	b.ls	41b14c <construct_include_path@@Base+0x70>  // b.plast
  41b20c:	str	x1, [x24, #1568]
  41b210:	b	41b14c <construct_include_path@@Base+0x70>
  41b214:	mov	x25, xzr
  41b218:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x40e0>
  41b21c:	add	x21, x21, #0xcf8
  41b220:	b	41b240 <construct_include_path@@Base+0x164>
  41b224:	mov	x0, x20
  41b228:	bl	421000 <strcache_add_len@@Base>
  41b22c:	add	x8, x25, #0x1
  41b230:	str	x0, [x19, x25, lsl #3]
  41b234:	mov	x25, x8
  41b238:	ldr	x8, [x21, #8]!
  41b23c:	cbz	x8, 41b2bc <construct_include_path@@Base+0x1e0>
  41b240:	ldr	x0, [x21]
  41b244:	mov	x1, sp
  41b248:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  41b24c:	mov	w20, w0
  41b250:	cmn	w0, #0x1
  41b254:	b.ne	41b268 <construct_include_path@@Base+0x18c>  // b.any
  41b258:	bl	406f00 <__errno_location@plt>
  41b25c:	ldr	w8, [x0]
  41b260:	cmp	w8, #0x4
  41b264:	b.eq	41b240 <construct_include_path@@Base+0x164>  // b.none
  41b268:	cbnz	w20, 41b238 <construct_include_path@@Base+0x15c>
  41b26c:	ldr	w8, [sp, #16]
  41b270:	and	w8, w8, #0xf000
  41b274:	cmp	w8, #0x4, lsl #12
  41b278:	b.ne	41b238 <construct_include_path@@Base+0x15c>  // b.any
  41b27c:	ldr	x20, [x21]
  41b280:	mov	x0, x20
  41b284:	bl	4067d0 <strlen@plt>
  41b288:	mov	x1, x0
  41b28c:	cmp	x0, #0x2
  41b290:	b.cc	41b2a8 <construct_include_path@@Base+0x1cc>  // b.lo, b.ul, b.last
  41b294:	add	x8, x20, x1
  41b298:	ldurb	w8, [x8, #-1]
  41b29c:	sub	x0, x1, #0x1
  41b2a0:	cmp	w8, #0x2f
  41b2a4:	b.eq	41b288 <construct_include_path@@Base+0x1ac>  // b.none
  41b2a8:	ldr	x8, [x24, #1568]
  41b2ac:	cmp	x1, x8
  41b2b0:	b.ls	41b224 <construct_include_path@@Base+0x148>  // b.plast
  41b2b4:	str	x1, [x24, #1568]
  41b2b8:	b	41b224 <construct_include_path@@Base+0x148>
  41b2bc:	str	xzr, [x19, x25, lsl #3]
  41b2c0:	ldr	x2, [x19]
  41b2c4:	cbz	x2, 41b2f4 <construct_include_path@@Base+0x218>
  41b2c8:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x40e0>
  41b2cc:	add	x21, x19, #0x8
  41b2d0:	add	x20, x20, #0xd58
  41b2d4:	mov	w4, #0x3                   	// #3
  41b2d8:	mov	x0, xzr
  41b2dc:	mov	x1, x20
  41b2e0:	mov	w3, wzr
  41b2e4:	mov	w5, wzr
  41b2e8:	bl	422088 <do_variable_definition@@Base>
  41b2ec:	ldr	x2, [x21], #8
  41b2f0:	cbnz	x2, 41b2d4 <construct_include_path@@Base+0x1f8>
  41b2f4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41b2f8:	str	x19, [x8, #1576]
  41b2fc:	ldp	x20, x19, [sp, #192]
  41b300:	ldp	x22, x21, [sp, #176]
  41b304:	ldp	x24, x23, [sp, #160]
  41b308:	ldr	x25, [sp, #144]
  41b30c:	ldp	x29, x30, [sp, #128]
  41b310:	add	sp, sp, #0xd0
  41b314:	ret

000000000041b318 <tilde_expand@@Base>:
  41b318:	stp	x29, x30, [sp, #-48]!
  41b31c:	stp	x22, x21, [sp, #16]
  41b320:	stp	x20, x19, [sp, #32]
  41b324:	mov	x19, x0
  41b328:	ldrb	w8, [x19, #1]!
  41b32c:	mov	x29, sp
  41b330:	cmp	w8, #0x2f
  41b334:	b.eq	41b33c <tilde_expand@@Base+0x24>  // b.none
  41b338:	cbnz	w8, 41b370 <tilde_expand@@Base+0x58>
  41b33c:	adrp	x21, 440000 <shell_var@@Base+0x18>
  41b340:	ldr	w22, [x21, #96]
  41b344:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  41b348:	add	x0, x0, #0xd66
  41b34c:	mov	x1, xzr
  41b350:	str	wzr, [x21, #96]
  41b354:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41b358:	str	w22, [x21, #96]
  41b35c:	ldrb	w21, [x0]
  41b360:	mov	x20, x0
  41b364:	cbz	w21, 41b3b4 <tilde_expand@@Base+0x9c>
  41b368:	cbnz	x20, 41b3d0 <tilde_expand@@Base+0xb8>
  41b36c:	b	41b3d8 <tilde_expand@@Base+0xc0>
  41b370:	mov	w1, #0x2f                  	// #47
  41b374:	mov	x0, x19
  41b378:	bl	406d10 <strchr@plt>
  41b37c:	mov	x20, x0
  41b380:	cbz	x0, 41b388 <tilde_expand@@Base+0x70>
  41b384:	strb	wzr, [x20]
  41b388:	mov	x0, x19
  41b38c:	bl	406af0 <getpwnam@plt>
  41b390:	cbz	x0, 41b440 <tilde_expand@@Base+0x128>
  41b394:	ldr	x1, [x0, #32]
  41b398:	cbz	x20, 41b46c <tilde_expand@@Base+0x154>
  41b39c:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x10e0>
  41b3a0:	add	x3, x20, #0x1
  41b3a4:	add	x2, x2, #0x8c7
  41b3a8:	mov	w0, #0x3                   	// #3
  41b3ac:	bl	417eb4 <concat@@Base>
  41b3b0:	b	41b470 <tilde_expand@@Base+0x158>
  41b3b4:	mov	x0, x20
  41b3b8:	bl	406cf0 <free@plt>
  41b3bc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  41b3c0:	add	x0, x0, #0xd6e
  41b3c4:	bl	406f10 <getenv@plt>
  41b3c8:	mov	x20, x0
  41b3cc:	cbz	x20, 41b3d8 <tilde_expand@@Base+0xc0>
  41b3d0:	ldrb	w8, [x20]
  41b3d4:	cbnz	w8, 41b3f8 <tilde_expand@@Base+0xe0>
  41b3d8:	bl	406f60 <getlogin@plt>
  41b3dc:	cbz	x0, 41b3f4 <tilde_expand@@Base+0xdc>
  41b3e0:	bl	406af0 <getpwnam@plt>
  41b3e4:	cbz	x0, 41b458 <tilde_expand@@Base+0x140>
  41b3e8:	ldr	x20, [x0, #32]
  41b3ec:	cbnz	x20, 41b3fc <tilde_expand@@Base+0xe4>
  41b3f0:	b	41b460 <tilde_expand@@Base+0x148>
  41b3f4:	mov	x20, xzr
  41b3f8:	cbz	x20, 41b460 <tilde_expand@@Base+0x148>
  41b3fc:	mov	w0, #0x2                   	// #2
  41b400:	mov	x1, x20
  41b404:	mov	x2, x19
  41b408:	bl	417eb4 <concat@@Base>
  41b40c:	bl	4180bc <xstrdup@@Base>
  41b410:	mov	x19, x0
  41b414:	cbz	w21, 41b420 <tilde_expand@@Base+0x108>
  41b418:	mov	x0, x20
  41b41c:	bl	406cf0 <free@plt>
  41b420:	mov	w8, wzr
  41b424:	tbz	wzr, #0, 41b42c <tilde_expand@@Base+0x114>
  41b428:	mov	x19, xzr
  41b42c:	mov	x0, x19
  41b430:	ldp	x20, x19, [sp, #32]
  41b434:	ldp	x22, x21, [sp, #16]
  41b438:	ldp	x29, x30, [sp], #48
  41b43c:	ret
  41b440:	cbz	x20, 41b44c <tilde_expand@@Base+0x134>
  41b444:	mov	w8, #0x2f                  	// #47
  41b448:	strb	w8, [x20]
  41b44c:	mov	w8, #0x1                   	// #1
  41b450:	cbnz	w8, 41b428 <tilde_expand@@Base+0x110>
  41b454:	b	41b42c <tilde_expand@@Base+0x114>
  41b458:	mov	x20, xzr
  41b45c:	cbnz	x20, 41b3fc <tilde_expand@@Base+0xe4>
  41b460:	mov	w8, #0x1                   	// #1
  41b464:	tbnz	w8, #0, 41b428 <tilde_expand@@Base+0x110>
  41b468:	b	41b42c <tilde_expand@@Base+0x114>
  41b46c:	mov	x0, x1
  41b470:	bl	4180bc <xstrdup@@Base>
  41b474:	mov	x19, x0
  41b478:	mov	w8, wzr
  41b47c:	cbnz	w8, 41b428 <tilde_expand@@Base+0x110>
  41b480:	b	41b42c <tilde_expand@@Base+0x114>

000000000041b484 <parse_file_seq@@Base>:
  41b484:	sub	sp, sp, #0x100
  41b488:	orr	w9, w2, #0x1
  41b48c:	orr	w8, w2, #0x3
  41b490:	tst	w4, #0x20
  41b494:	stp	x22, x21, [sp, #224]
  41b498:	csel	w22, w8, w9, eq  // eq = none
  41b49c:	cmp	x1, #0x10
  41b4a0:	mov	w8, #0x10                  	// #16
  41b4a4:	stp	x29, x30, [sp, #160]
  41b4a8:	stp	x24, x23, [sp, #208]
  41b4ac:	stp	x20, x19, [sp, #240]
  41b4b0:	add	x29, sp, #0xa0
  41b4b4:	mov	w19, w4
  41b4b8:	mov	x20, x3
  41b4bc:	mov	x24, x0
  41b4c0:	csel	x21, x1, x8, hi  // hi = pmore
  41b4c4:	stp	x28, x27, [sp, #176]
  41b4c8:	stp	x26, x25, [sp, #192]
  41b4cc:	stur	xzr, [x29, #-8]
  41b4d0:	str	w9, [sp, #8]
  41b4d4:	tbnz	w4, #2, 41b4e0 <parse_file_seq@@Base+0x5c>
  41b4d8:	add	x0, sp, #0x50
  41b4dc:	bl	4099d4 <dir_setup_glob@@Base>
  41b4e0:	ldr	x0, [x24]
  41b4e4:	str	x21, [sp, #48]
  41b4e8:	bl	4067d0 <strlen@plt>
  41b4ec:	adrp	x23, 43f000 <stdio_traced@@Base+0x1a38>
  41b4f0:	ldr	x8, [x23, #1592]
  41b4f4:	add	x21, x0, #0x1
  41b4f8:	adrp	x27, 43f000 <stdio_traced@@Base+0x1a38>
  41b4fc:	cmp	x21, x8
  41b500:	b.ls	41b518 <parse_file_seq@@Base+0x94>  // b.plast
  41b504:	ldr	x0, [x27, #1584]
  41b508:	mov	x1, x21
  41b50c:	bl	41803c <xrealloc@@Base>
  41b510:	str	x0, [x27, #1584]
  41b514:	str	x21, [x23, #1592]
  41b518:	ldr	x8, [x27, #1584]
  41b51c:	ldr	x28, [x24]
  41b520:	ldr	w23, [sp, #8]
  41b524:	tst	w19, #0x2
  41b528:	str	x8, [sp, #40]
  41b52c:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  41b530:	cset	w8, eq  // eq = none
  41b534:	sub	x25, x29, #0x8
  41b538:	add	x26, x26, #0xcf0
  41b53c:	eor	w8, w8, #0x1
  41b540:	mov	x21, x27
  41b544:	str	x24, [sp]
  41b548:	str	w8, [sp, #28]
  41b54c:	b	41b55c <parse_file_seq@@Base+0xd8>
  41b550:	mov	w8, #0x3                   	// #3
  41b554:	cmp	w8, #0x3
  41b558:	b.eq	41b9c0 <parse_file_seq@@Base+0x53c>  // b.none
  41b55c:	sub	x28, x28, #0x1
  41b560:	stp	xzr, xzr, [sp, #56]
  41b564:	ldrb	w8, [x28, #1]!
  41b568:	ldrh	w8, [x26, x8, lsl #1]
  41b56c:	tst	w8, #0x6
  41b570:	b.ne	41b564 <parse_file_seq@@Base+0xe0>  // b.any
  41b574:	tst	w23, w8
  41b578:	b.ne	41b550 <parse_file_seq@@Base+0xcc>  // b.any
  41b57c:	mov	x0, x28
  41b580:	mov	w1, w22
  41b584:	bl	41b9f0 <parse_file_seq@@Base+0x56c>
  41b588:	ldr	x24, [sp, #40]
  41b58c:	cbz	x0, 41b598 <parse_file_seq@@Base+0x114>
  41b590:	tbz	w19, #0, 41b5a8 <parse_file_seq@@Base+0x124>
  41b594:	b	41b5e0 <parse_file_seq@@Base+0x15c>
  41b598:	mov	x0, x28
  41b59c:	bl	4067d0 <strlen@plt>
  41b5a0:	add	x0, x28, x0
  41b5a4:	tbnz	w19, #0, 41b5e0 <parse_file_seq@@Base+0x15c>
  41b5a8:	sub	x8, x0, x28
  41b5ac:	cmp	x8, #0x3
  41b5b0:	b.lt	41b5e0 <parse_file_seq@@Base+0x15c>  // b.tstop
  41b5b4:	ldrb	w8, [x28]
  41b5b8:	cmp	w8, #0x2e
  41b5bc:	b.ne	41b5e0 <parse_file_seq@@Base+0x15c>  // b.any
  41b5c0:	ldrb	w8, [x28, #1]
  41b5c4:	cmp	w8, #0x2f
  41b5c8:	b.ne	41b5e0 <parse_file_seq@@Base+0x15c>  // b.any
  41b5cc:	add	x28, x28, #0x1
  41b5d0:	ldrb	w8, [x28, #1]!
  41b5d4:	cmp	w8, #0x2f
  41b5d8:	b.eq	41b5d0 <parse_file_seq@@Base+0x14c>  // b.none
  41b5dc:	b	41b5a8 <parse_file_seq@@Base+0x124>
  41b5e0:	cmp	x28, x0
  41b5e4:	str	x0, [sp, #32]
  41b5e8:	b.eq	41b604 <parse_file_seq@@Base+0x180>  // b.none
  41b5ec:	sub	x27, x0, x28
  41b5f0:	mov	x0, x24
  41b5f4:	mov	x1, x28
  41b5f8:	mov	x2, x27
  41b5fc:	bl	406790 <memcpy@plt>
  41b600:	b	41b610 <parse_file_seq@@Base+0x18c>
  41b604:	mov	w8, #0x2f2e                	// #12078
  41b608:	strh	w8, [x24]
  41b60c:	mov	w27, #0x2                   	// #2
  41b610:	strb	wzr, [x24, x27]
  41b614:	ldr	x28, [x21, #1584]
  41b618:	ldr	w9, [sp, #28]
  41b61c:	cmp	x24, x28
  41b620:	cset	w8, ne  // ne = any
  41b624:	orr	w8, w8, w9
  41b628:	tbnz	w8, #0, 41b708 <parse_file_seq@@Base+0x284>
  41b62c:	ldrb	w8, [x24]
  41b630:	cmp	w8, #0x28
  41b634:	b.eq	41b708 <parse_file_seq@@Base+0x284>  // b.none
  41b638:	add	x8, x27, x24
  41b63c:	ldurb	w8, [x8, #-1]
  41b640:	cmp	w8, #0x29
  41b644:	b.eq	41b708 <parse_file_seq@@Base+0x284>  // b.none
  41b648:	mov	w1, #0x28                  	// #40
  41b64c:	mov	x0, x24
  41b650:	bl	406d10 <strchr@plt>
  41b654:	cbz	x0, 41b6f0 <parse_file_seq@@Base+0x26c>
  41b658:	ldr	x9, [sp, #32]
  41b65c:	add	x8, x0, #0x1
  41b660:	sub	x10, x9, #0x1
  41b664:	mov	w12, #0x1                   	// #1
  41b668:	ldrb	w11, [x10, #1]!
  41b66c:	ldrh	w13, [x26, x11, lsl #1]
  41b670:	mov	x11, x12
  41b674:	add	x12, x12, #0x1
  41b678:	tst	w13, #0x6
  41b67c:	b.ne	41b668 <parse_file_seq@@Base+0x1e4>  // b.any
  41b680:	add	x10, x9, x11
  41b684:	ldurb	w10, [x10, #-1]
  41b688:	add	x11, x11, #0x1
  41b68c:	ldrh	w12, [x26, x10, lsl #1]
  41b690:	tst	w22, w12
  41b694:	b.eq	41b680 <parse_file_seq@@Base+0x1fc>  // b.none
  41b698:	cmp	x11, #0x2
  41b69c:	add	x9, x9, x11
  41b6a0:	b.eq	41b6c8 <parse_file_seq@@Base+0x244>  // b.none
  41b6a4:	ldurb	w11, [x9, #-3]
  41b6a8:	cmp	w11, #0x29
  41b6ac:	b.ne	41b6d4 <parse_file_seq@@Base+0x250>  // b.any
  41b6b0:	sub	x11, x27, x8
  41b6b4:	add	x27, x11, x24
  41b6b8:	mov	w11, #0x1                   	// #1
  41b6bc:	mov	x24, x8
  41b6c0:	cbnz	w10, 41b6dc <parse_file_seq@@Base+0x258>
  41b6c4:	b	41b6e4 <parse_file_seq@@Base+0x260>
  41b6c8:	mov	w11, #0x1                   	// #1
  41b6cc:	cbnz	w10, 41b6dc <parse_file_seq@@Base+0x258>
  41b6d0:	b	41b6e4 <parse_file_seq@@Base+0x260>
  41b6d4:	mov	w11, wzr
  41b6d8:	cbz	w10, 41b6e4 <parse_file_seq@@Base+0x260>
  41b6dc:	sub	x9, x9, #0x2
  41b6e0:	cbz	w11, 41b660 <parse_file_seq@@Base+0x1dc>
  41b6e4:	cmp	x27, #0x0
  41b6e8:	cset	w8, eq  // eq = none
  41b6ec:	cbz	x27, 41b700 <parse_file_seq@@Base+0x27c>
  41b6f0:	mov	w8, wzr
  41b6f4:	cbz	w8, 41b708 <parse_file_seq@@Base+0x284>
  41b6f8:	str	x24, [sp, #40]
  41b6fc:	b	41b9b4 <parse_file_seq@@Base+0x530>
  41b700:	lsl	w8, w8, #1
  41b704:	cbnz	w8, 41b6f8 <parse_file_seq@@Base+0x274>
  41b708:	cmp	x24, x28
  41b70c:	b.ls	41b73c <parse_file_seq@@Base+0x2b8>  // b.plast
  41b710:	add	x8, x27, x24
  41b714:	ldurb	w8, [x8, #-1]
  41b718:	cmp	w8, #0x29
  41b71c:	b.ne	41b734 <parse_file_seq@@Base+0x2b0>  // b.any
  41b720:	cmp	x27, #0x1
  41b724:	b.ne	41b78c <parse_file_seq@@Base+0x308>  // b.any
  41b728:	mov	w8, #0x2                   	// #2
  41b72c:	str	x28, [sp, #40]
  41b730:	b	41b9b4 <parse_file_seq@@Base+0x530>
  41b734:	mov	w8, #0x29                  	// #41
  41b738:	strh	w8, [x24, x27]
  41b73c:	str	x24, [sp, #40]
  41b740:	tbz	w19, #2, 41b798 <parse_file_seq@@Base+0x314>
  41b744:	ldr	x2, [x21, #1584]
  41b748:	mov	w0, #0x2                   	// #2
  41b74c:	mov	x1, x20
  41b750:	bl	417eb4 <concat@@Base>
  41b754:	mov	x27, x0
  41b758:	ldr	x0, [sp, #48]
  41b75c:	bl	418094 <xcalloc@@Base>
  41b760:	str	x0, [x25]
  41b764:	mov	x0, x27
  41b768:	tbnz	w19, #4, 41b774 <parse_file_seq@@Base+0x2f0>
  41b76c:	bl	420f28 <strcache_add@@Base>
  41b770:	b	41b778 <parse_file_seq@@Base+0x2f4>
  41b774:	bl	4180bc <xstrdup@@Base>
  41b778:	ldr	x8, [x25]
  41b77c:	str	x0, [x8, #8]
  41b780:	ldr	x25, [x25]
  41b784:	mov	w8, #0x2                   	// #2
  41b788:	b	41b9b4 <parse_file_seq@@Base+0x530>
  41b78c:	mov	x24, x28
  41b790:	str	x24, [sp, #40]
  41b794:	tbnz	w19, #2, 41b744 <parse_file_seq@@Base+0x2c0>
  41b798:	ldr	x0, [x21, #1584]
  41b79c:	str	x0, [sp, #72]
  41b7a0:	ldrb	w8, [x0]
  41b7a4:	cmp	w8, #0x7e
  41b7a8:	b.ne	41b7c4 <parse_file_seq@@Base+0x340>  // b.any
  41b7ac:	bl	41b318 <tilde_expand@@Base>
  41b7b0:	mov	x21, x0
  41b7b4:	cbz	x0, 41b7bc <parse_file_seq@@Base+0x338>
  41b7b8:	str	x21, [sp, #72]
  41b7bc:	tbz	w19, #1, 41b7cc <parse_file_seq@@Base+0x348>
  41b7c0:	b	41b7f4 <parse_file_seq@@Base+0x370>
  41b7c4:	mov	x21, xzr
  41b7c8:	tbnz	w19, #1, 41b7f4 <parse_file_seq@@Base+0x370>
  41b7cc:	ldr	x28, [sp, #72]
  41b7d0:	mov	x0, x28
  41b7d4:	bl	4070bc <ar_name@@Base>
  41b7d8:	cbz	w0, 41b7f4 <parse_file_seq@@Base+0x370>
  41b7dc:	add	x1, sp, #0x40
  41b7e0:	add	x2, sp, #0x38
  41b7e4:	mov	x0, x28
  41b7e8:	bl	40716c <ar_parse_name@@Base>
  41b7ec:	ldr	x8, [sp, #64]
  41b7f0:	str	x8, [sp, #72]
  41b7f4:	tbnz	w19, #3, 41b80c <parse_file_seq@@Base+0x388>
  41b7f8:	ldr	x0, [sp, #72]
  41b7fc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41b800:	add	x1, x1, #0xd73
  41b804:	bl	406ad0 <strpbrk@plt>
  41b808:	cbz	x0, 41b870 <parse_file_seq@@Base+0x3ec>
  41b80c:	ldr	x0, [sp, #72]
  41b810:	add	x3, sp, #0x50
  41b814:	mov	w1, #0x200                 	// #512
  41b818:	mov	x2, xzr
  41b81c:	bl	406e90 <glob@plt>
  41b820:	cbz	w0, 41b85c <parse_file_seq@@Base+0x3d8>
  41b824:	cmp	w0, #0x3
  41b828:	b.eq	41b838 <parse_file_seq@@Base+0x3b4>  // b.none
  41b82c:	cmp	w0, #0x1
  41b830:	b.ne	41b848 <parse_file_seq@@Base+0x3c4>  // b.any
  41b834:	b	41b9ec <parse_file_seq@@Base+0x568>
  41b838:	tbz	w19, #3, 41b848 <parse_file_seq@@Base+0x3c4>
  41b83c:	mov	x27, xzr
  41b840:	mov	w8, wzr
  41b844:	b	41b864 <parse_file_seq@@Base+0x3e0>
  41b848:	mov	w8, #0x1                   	// #1
  41b84c:	str	w8, [sp, #12]
  41b850:	add	x27, sp, #0x48
  41b854:	mov	w8, #0x1                   	// #1
  41b858:	b	41b87c <parse_file_seq@@Base+0x3f8>
  41b85c:	ldr	w8, [sp, #80]
  41b860:	ldr	x27, [sp, #88]
  41b864:	mov	w9, #0x1                   	// #1
  41b868:	str	w9, [sp, #12]
  41b86c:	b	41b87c <parse_file_seq@@Base+0x3f8>
  41b870:	str	wzr, [sp, #12]
  41b874:	mov	w8, #0x1                   	// #1
  41b878:	add	x27, sp, #0x48
  41b87c:	cmp	w8, #0x1
  41b880:	str	x21, [sp, #16]
  41b884:	b.lt	41b988 <parse_file_seq@@Base+0x504>  // b.tstop
  41b888:	mov	x24, xzr
  41b88c:	mov	w23, w8
  41b890:	b	41b8b0 <parse_file_seq@@Base+0x42c>
  41b894:	bl	4180bc <xstrdup@@Base>
  41b898:	ldr	x8, [x25]
  41b89c:	str	x0, [x8, #8]
  41b8a0:	ldr	x25, [x25]
  41b8a4:	add	x24, x24, #0x1
  41b8a8:	cmp	x24, x23
  41b8ac:	b.eq	41b988 <parse_file_seq@@Base+0x504>  // b.none
  41b8b0:	ldr	x1, [sp, #56]
  41b8b4:	ldr	x2, [x27, x24, lsl #3]
  41b8b8:	cbz	x1, 41b92c <parse_file_seq@@Base+0x4a8>
  41b8bc:	ldr	x21, [sp, #48]
  41b8c0:	mov	x0, x2
  41b8c4:	mov	x2, x21
  41b8c8:	bl	4073f4 <ar_glob@@Base>
  41b8cc:	cbz	x0, 41b944 <parse_file_seq@@Base+0x4c0>
  41b8d0:	ldr	x8, [x25]
  41b8d4:	cmp	x8, #0x0
  41b8d8:	csel	x8, x25, x8, eq  // eq = none
  41b8dc:	str	x0, [x8]
  41b8e0:	ldr	x28, [sp, #72]
  41b8e4:	b	41b908 <parse_file_seq@@Base+0x484>
  41b8e8:	mov	w0, #0x2                   	// #2
  41b8ec:	mov	x1, x20
  41b8f0:	mov	x2, x28
  41b8f4:	bl	417eb4 <concat@@Base>
  41b8f8:	bl	4180bc <xstrdup@@Base>
  41b8fc:	str	x0, [x25, #8]
  41b900:	ldr	x0, [x25]
  41b904:	cbz	x0, 41b8a4 <parse_file_seq@@Base+0x420>
  41b908:	mov	x25, x0
  41b90c:	tbnz	w19, #4, 41b8e8 <parse_file_seq@@Base+0x464>
  41b910:	cbz	x20, 41b900 <parse_file_seq@@Base+0x47c>
  41b914:	mov	w0, #0x2                   	// #2
  41b918:	mov	x1, x20
  41b91c:	mov	x2, x28
  41b920:	bl	417eb4 <concat@@Base>
  41b924:	bl	420f28 <strcache_add@@Base>
  41b928:	b	41b8fc <parse_file_seq@@Base+0x478>
  41b92c:	mov	w0, #0x2                   	// #2
  41b930:	mov	x1, x20
  41b934:	bl	417eb4 <concat@@Base>
  41b938:	mov	x28, x0
  41b93c:	ldr	x0, [sp, #48]
  41b940:	b	41b970 <parse_file_seq@@Base+0x4ec>
  41b944:	ldr	x2, [x27, x24, lsl #3]
  41b948:	ldr	x4, [sp, #56]
  41b94c:	adrp	x3, 425000 <_IO_stdin_used@@Base+0xe0>
  41b950:	adrp	x5, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41b954:	mov	w0, #0x5                   	// #5
  41b958:	mov	x1, x20
  41b95c:	add	x3, x3, #0x31
  41b960:	add	x5, x5, #0xd26
  41b964:	bl	417eb4 <concat@@Base>
  41b968:	mov	x28, x0
  41b96c:	mov	x0, x21
  41b970:	bl	418094 <xcalloc@@Base>
  41b974:	str	x0, [x25]
  41b978:	mov	x0, x28
  41b97c:	tbnz	w19, #4, 41b894 <parse_file_seq@@Base+0x410>
  41b980:	bl	420f28 <strcache_add@@Base>
  41b984:	b	41b898 <parse_file_seq@@Base+0x414>
  41b988:	ldr	w8, [sp, #12]
  41b98c:	cbz	w8, 41b998 <parse_file_seq@@Base+0x514>
  41b990:	add	x0, sp, #0x50
  41b994:	bl	406d20 <globfree@plt>
  41b998:	ldr	x0, [sp, #64]
  41b99c:	bl	406cf0 <free@plt>
  41b9a0:	ldr	x0, [sp, #16]
  41b9a4:	bl	406cf0 <free@plt>
  41b9a8:	ldr	w23, [sp, #8]
  41b9ac:	mov	w8, wzr
  41b9b0:	adrp	x21, 43f000 <stdio_traced@@Base+0x1a38>
  41b9b4:	ldr	x28, [sp, #32]
  41b9b8:	cmp	w8, #0x3
  41b9bc:	b.ne	41b55c <parse_file_seq@@Base+0xd8>  // b.any
  41b9c0:	ldr	x8, [sp]
  41b9c4:	str	x28, [x8]
  41b9c8:	ldur	x0, [x29, #-8]
  41b9cc:	ldp	x20, x19, [sp, #240]
  41b9d0:	ldp	x22, x21, [sp, #224]
  41b9d4:	ldp	x24, x23, [sp, #208]
  41b9d8:	ldp	x26, x25, [sp, #192]
  41b9dc:	ldp	x28, x27, [sp, #176]
  41b9e0:	ldp	x29, x30, [sp, #160]
  41b9e4:	add	sp, sp, #0x100
  41b9e8:	ret
  41b9ec:	bl	419318 <out_of_memory@@Base>
  41b9f0:	stp	x29, x30, [sp, #-96]!
  41b9f4:	stp	x26, x25, [sp, #32]
  41b9f8:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  41b9fc:	stp	x28, x27, [sp, #16]
  41ba00:	stp	x24, x23, [sp, #48]
  41ba04:	stp	x22, x21, [sp, #64]
  41ba08:	stp	x20, x19, [sp, #80]
  41ba0c:	mov	x19, x0
  41ba10:	mov	x21, xzr
  41ba14:	orr	w23, w1, #0x1
  41ba18:	add	x12, x0, #0x1
  41ba1c:	add	x25, x25, #0xcf0
  41ba20:	mov	w26, #0x7d                  	// #125
  41ba24:	mov	w27, #0x29                  	// #41
  41ba28:	mov	x22, x0
  41ba2c:	mov	x29, sp
  41ba30:	b	41ba40 <parse_file_seq@@Base+0x5bc>
  41ba34:	mov	w8, #0x1                   	// #1
  41ba38:	mov	x22, x28
  41ba3c:	tbnz	w8, #0, 41bb80 <parse_file_seq@@Base+0x6fc>
  41ba40:	mov	x28, x22
  41ba44:	ldrb	w8, [x22], #1
  41ba48:	ldrh	w9, [x25, x8, lsl #1]
  41ba4c:	tst	w23, w9
  41ba50:	b.eq	41ba40 <parse_file_seq@@Base+0x5bc>  // b.none
  41ba54:	cmp	w8, #0x24
  41ba58:	b.ne	41bad8 <parse_file_seq@@Base+0x654>  // b.any
  41ba5c:	ldrb	w8, [x28, #1]
  41ba60:	cbz	w8, 41ba34 <parse_file_seq@@Base+0x5b0>
  41ba64:	cmp	w8, #0x7b
  41ba68:	add	x10, x28, #0x2
  41ba6c:	b.eq	41ba78 <parse_file_seq@@Base+0x5f4>  // b.none
  41ba70:	cmp	w8, #0x28
  41ba74:	b.ne	41bac0 <parse_file_seq@@Base+0x63c>  // b.any
  41ba78:	ldrb	w11, [x10]
  41ba7c:	cmp	w8, #0x28
  41ba80:	csel	w9, w27, w26, eq  // eq = none
  41ba84:	cbz	w11, 41bac0 <parse_file_seq@@Base+0x63c>
  41ba88:	add	x28, x28, #0x3
  41ba8c:	mov	w10, #0x1                   	// #1
  41ba90:	b	41baa0 <parse_file_seq@@Base+0x61c>
  41ba94:	add	w10, w10, #0x1
  41ba98:	ldrb	w11, [x28], #1
  41ba9c:	cbz	w11, 41bacc <parse_file_seq@@Base+0x648>
  41baa0:	cmp	w8, w11, uxtb
  41baa4:	b.eq	41ba94 <parse_file_seq@@Base+0x610>  // b.none
  41baa8:	cmp	w9, w11, uxtb
  41baac:	b.ne	41ba98 <parse_file_seq@@Base+0x614>  // b.any
  41bab0:	subs	w10, w10, #0x1
  41bab4:	b.ne	41ba98 <parse_file_seq@@Base+0x614>  // b.any
  41bab8:	mov	w8, wzr
  41babc:	b	41ba38 <parse_file_seq@@Base+0x5b4>
  41bac0:	mov	w8, wzr
  41bac4:	mov	x28, x10
  41bac8:	b	41ba38 <parse_file_seq@@Base+0x5b4>
  41bacc:	mov	w8, wzr
  41bad0:	sub	x28, x28, #0x1
  41bad4:	b	41ba38 <parse_file_seq@@Base+0x5b4>
  41bad8:	cbz	w8, 41bb80 <parse_file_seq@@Base+0x6fc>
  41badc:	cmp	x28, x19
  41bae0:	b.ls	41bba4 <parse_file_seq@@Base+0x720>  // b.plast
  41bae4:	ldurb	w8, [x28, #-1]
  41bae8:	cmp	w8, #0x5c
  41baec:	b.ne	41bba4 <parse_file_seq@@Base+0x720>  // b.any
  41baf0:	sub	x8, x28, #0x2
  41baf4:	cmp	x8, x19
  41baf8:	b.cs	41bb04 <parse_file_seq@@Base+0x680>  // b.hs, b.nlast
  41bafc:	mov	w8, #0xfffffffe            	// #-2
  41bb00:	b	41bb24 <parse_file_seq@@Base+0x6a0>
  41bb04:	mov	x8, #0xfffffffffffffffe    	// #-2
  41bb08:	ldrb	w9, [x28, x8]
  41bb0c:	cmp	w9, #0x5c
  41bb10:	b.ne	41bb24 <parse_file_seq@@Base+0x6a0>  // b.any
  41bb14:	sub	x8, x8, #0x1
  41bb18:	add	x9, x28, x8
  41bb1c:	cmp	x9, x19
  41bb20:	b.cs	41bb08 <parse_file_seq@@Base+0x684>  // b.hs, b.nlast
  41bb24:	add	w24, w8, #0x1
  41bb28:	cbnz	x21, 41bb40 <parse_file_seq@@Base+0x6bc>
  41bb2c:	mov	x0, x19
  41bb30:	mov	x21, x12
  41bb34:	bl	4067d0 <strlen@plt>
  41bb38:	mov	x12, x21
  41bb3c:	mov	x21, x0
  41bb40:	cmp	w24, #0x0
  41bb44:	cinc	w9, w24, lt  // lt = tstop
  41bb48:	sub	x8, x12, x28
  41bb4c:	sbfx	x9, x9, #1, #31
  41bb50:	add	x22, x28, x9
  41bb54:	sub	x8, x8, x9
  41bb58:	add	x0, x28, w24, sxtw
  41bb5c:	add	x2, x8, x21
  41bb60:	mov	x1, x22
  41bb64:	mov	x28, x12
  41bb68:	bl	4067a0 <memmove@plt>
  41bb6c:	tst	w24, #0x1
  41bb70:	mov	x12, x28
  41bb74:	csel	x20, x22, x20, eq  // eq = none
  41bb78:	tbnz	w24, #0, 41ba40 <parse_file_seq@@Base+0x5bc>
  41bb7c:	b	41bb84 <parse_file_seq@@Base+0x700>
  41bb80:	mov	x20, xzr
  41bb84:	mov	x0, x20
  41bb88:	ldp	x20, x19, [sp, #80]
  41bb8c:	ldp	x22, x21, [sp, #64]
  41bb90:	ldp	x24, x23, [sp, #48]
  41bb94:	ldp	x26, x25, [sp, #32]
  41bb98:	ldp	x28, x27, [sp, #16]
  41bb9c:	ldp	x29, x30, [sp], #96
  41bba0:	ret
  41bba4:	mov	x20, x28
  41bba8:	b	41bb84 <parse_file_seq@@Base+0x700>
  41bbac:	stp	x29, x30, [sp, #-96]!
  41bbb0:	stp	x26, x25, [sp, #32]
  41bbb4:	stp	x24, x23, [sp, #48]
  41bbb8:	stp	x22, x21, [sp, #64]
  41bbbc:	stp	x20, x19, [sp, #80]
  41bbc0:	ldr	x8, [x0, #32]
  41bbc4:	mov	x20, x0
  41bbc8:	str	x27, [sp, #16]
  41bbcc:	mov	x29, sp
  41bbd0:	cbz	x8, 41bd4c <parse_file_seq@@Base+0x8c8>
  41bbd4:	ldp	x23, x8, [x20, #16]
  41bbd8:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x40e0>
  41bbdc:	mov	x19, xzr
  41bbe0:	add	x21, x20, #0x28
  41bbe4:	add	x22, x22, #0xf62
  41bbe8:	add	x27, x23, x8
  41bbec:	mov	w26, #0xa                   	// #10
  41bbf0:	mov	x24, x23
  41bbf4:	strb	wzr, [x23]
  41bbf8:	b	41bc3c <parse_file_seq@@Base+0x7b8>
  41bbfc:	ldr	x8, [x20, #24]
  41bc00:	mov	x0, x24
  41bc04:	sub	x23, x23, x24
  41bc08:	lsl	x1, x8, #1
  41bc0c:	str	x1, [x20, #24]
  41bc10:	bl	41803c <xrealloc@@Base>
  41bc14:	ldr	x10, [x20, #24]
  41bc18:	add	x9, x0, x23
  41bc1c:	mov	x24, x0
  41bc20:	mov	w8, wzr
  41bc24:	add	x27, x0, x10
  41bc28:	mov	x23, x9
  41bc2c:	str	x0, [x20, #16]
  41bc30:	str	x0, [x20]
  41bc34:	strb	wzr, [x9]
  41bc38:	cbnz	w8, 41bd28 <parse_file_seq@@Base+0x8a4>
  41bc3c:	ldr	x2, [x20, #32]
  41bc40:	sub	w1, w27, w23
  41bc44:	mov	x0, x23
  41bc48:	bl	406f80 <fgets@plt>
  41bc4c:	cbz	x0, 41bd28 <parse_file_seq@@Base+0x8a4>
  41bc50:	mov	x0, x23
  41bc54:	bl	4067d0 <strlen@plt>
  41bc58:	cbnz	x0, 41bc80 <parse_file_seq@@Base+0x7fc>
  41bc5c:	mov	w2, #0x5                   	// #5
  41bc60:	mov	x1, x22
  41bc64:	bl	406e50 <dcgettext@plt>
  41bc68:	mov	x2, x0
  41bc6c:	mov	x0, x21
  41bc70:	mov	x1, xzr
  41bc74:	bl	418f84 <error@@Base>
  41bc78:	mov	w0, #0x1                   	// #1
  41bc7c:	strb	w26, [x23]
  41bc80:	add	x23, x23, x0
  41bc84:	mov	x25, x23
  41bc88:	ldrb	w8, [x25, #-1]!
  41bc8c:	cmp	w8, #0xa
  41bc90:	b.ne	41bbfc <parse_file_seq@@Base+0x778>  // b.any
  41bc94:	sub	x8, x23, x24
  41bc98:	cmp	x8, #0x2
  41bc9c:	b.lt	41bccc <parse_file_seq@@Base+0x848>  // b.tstop
  41bca0:	ldurb	w8, [x23, #-2]
  41bca4:	cmp	w8, #0xd
  41bca8:	b.ne	41bccc <parse_file_seq@@Base+0x848>  // b.any
  41bcac:	mov	x0, x25
  41bcb0:	sub	x23, x25, #0x1
  41bcb4:	bl	4067d0 <strlen@plt>
  41bcb8:	add	x2, x0, #0x1
  41bcbc:	mov	x0, x23
  41bcc0:	mov	x1, x25
  41bcc4:	bl	4067a0 <memmove@plt>
  41bcc8:	mov	x23, x25
  41bccc:	sub	x9, x23, #0x2
  41bcd0:	cmp	x9, x24
  41bcd4:	add	x19, x19, #0x1
  41bcd8:	mov	w8, wzr
  41bcdc:	b.cc	41bcfc <parse_file_seq@@Base+0x878>  // b.lo, b.ul, b.last
  41bce0:	ldrb	w10, [x9]
  41bce4:	cmp	w10, #0x5c
  41bce8:	b.ne	41bcfc <parse_file_seq@@Base+0x878>  // b.any
  41bcec:	sub	x9, x9, #0x1
  41bcf0:	cmp	x9, x24
  41bcf4:	eor	w8, w8, #0x1
  41bcf8:	b.cs	41bce0 <parse_file_seq@@Base+0x85c>  // b.hs, b.nlast
  41bcfc:	cbz	w8, 41bd18 <parse_file_seq@@Base+0x894>
  41bd00:	sub	x8, x27, x23
  41bd04:	cmp	x8, #0x4f
  41bd08:	b.le	41bbfc <parse_file_seq@@Base+0x778>
  41bd0c:	mov	w8, wzr
  41bd10:	cbz	w8, 41bc3c <parse_file_seq@@Base+0x7b8>
  41bd14:	b	41bd28 <parse_file_seq@@Base+0x8a4>
  41bd18:	sub	x9, x23, #0x1
  41bd1c:	mov	w8, #0x1                   	// #1
  41bd20:	strb	wzr, [x9]
  41bd24:	cbz	w8, 41bc3c <parse_file_seq@@Base+0x7b8>
  41bd28:	ldr	x0, [x20, #32]
  41bd2c:	bl	406fa0 <ferror@plt>
  41bd30:	cbnz	w0, 41bd78 <parse_file_seq@@Base+0x8f4>
  41bd34:	cbnz	x19, 41bd58 <parse_file_seq@@Base+0x8d4>
  41bd38:	ldr	x8, [x20, #16]
  41bd3c:	cmp	x23, x8
  41bd40:	mov	x8, #0xffffffffffffffff    	// #-1
  41bd44:	cneg	x19, x8, ne  // ne = any
  41bd48:	b	41bd58 <parse_file_seq@@Base+0x8d4>
  41bd4c:	mov	x0, x20
  41bd50:	bl	41d810 <parse_file_seq@@Base+0x238c>
  41bd54:	mov	x19, x0
  41bd58:	mov	x0, x19
  41bd5c:	ldp	x20, x19, [sp, #80]
  41bd60:	ldp	x22, x21, [sp, #64]
  41bd64:	ldp	x24, x23, [sp, #48]
  41bd68:	ldp	x26, x25, [sp, #32]
  41bd6c:	ldr	x27, [sp, #16]
  41bd70:	ldp	x29, x30, [sp], #96
  41bd74:	ret
  41bd78:	ldr	x0, [x20, #40]
  41bd7c:	bl	4184d0 <pfatal_with_name@@Base>
  41bd80:	stp	x29, x30, [sp, #-16]!
  41bd84:	mov	w1, #0x4008                	// #16392
  41bd88:	mov	x29, sp
  41bd8c:	bl	41b9f0 <parse_file_seq@@Base+0x56c>
  41bd90:	cbz	x0, 41bd98 <parse_file_seq@@Base+0x914>
  41bd94:	strb	wzr, [x0]
  41bd98:	ldp	x29, x30, [sp], #16
  41bd9c:	ret
  41bda0:	sub	sp, sp, #0x90
  41bda4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41bda8:	stp	x28, x27, [sp, #64]
  41bdac:	stp	x20, x19, [sp, #128]
  41bdb0:	mov	x19, x1
  41bdb4:	sub	x27, x0, #0x1
  41bdb8:	add	x8, x8, #0xcf0
  41bdbc:	stp	x29, x30, [sp, #48]
  41bdc0:	stp	x26, x25, [sp, #80]
  41bdc4:	stp	x24, x23, [sp, #96]
  41bdc8:	stp	x22, x21, [sp, #112]
  41bdcc:	add	x29, sp, #0x30
  41bdd0:	str	wzr, [x1]
  41bdd4:	ldrb	w9, [x27, #1]!
  41bdd8:	ldrh	w10, [x8, x9, lsl #1]
  41bddc:	tst	w10, #0x6
  41bde0:	b.ne	41bdd4 <parse_file_seq@@Base+0x950>  // b.any
  41bde4:	cbz	w9, 41bf50 <parse_file_seq@@Base+0xacc>
  41bde8:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x40e0>
  41bdec:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x20e0>
  41bdf0:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41bdf4:	adrp	x23, 429000 <_IO_stdin_used@@Base+0x40e0>
  41bdf8:	add	x20, x20, #0xe41
  41bdfc:	add	x21, x21, #0x20a
  41be00:	add	x22, x22, #0xe4d
  41be04:	add	x23, x23, #0xf96
  41be08:	mov	x25, x27
  41be0c:	b	41be30 <parse_file_seq@@Base+0x9ac>
  41be10:	ldrb	w8, [x19]
  41be14:	orr	w8, w8, #0x2
  41be18:	mov	x0, x26
  41be1c:	strb	w8, [x19]
  41be20:	bl	418138 <next_token@@Base>
  41be24:	mov	x25, x0
  41be28:	mov	w8, #0x5                   	// #5
  41be2c:	cbnz	w8, 41bf38 <parse_file_seq@@Base+0xab4>
  41be30:	mov	x1, sp
  41be34:	mov	x0, x25
  41be38:	bl	422e1c <parse_variable_definition@@Base>
  41be3c:	cbnz	x0, 41be28 <parse_file_seq@@Base+0x9a4>
  41be40:	mov	x0, x25
  41be44:	bl	418118 <end_of_token@@Base>
  41be48:	sub	x24, x0, x25
  41be4c:	mov	x26, x0
  41be50:	cmp	x24, #0x6
  41be54:	b.ne	41be6c <parse_file_seq@@Base+0x9e8>  // b.any
  41be58:	mov	w2, #0x6                   	// #6
  41be5c:	mov	x0, x20
  41be60:	mov	x1, x25
  41be64:	bl	406a70 <strncmp@plt>
  41be68:	cbz	w0, 41beec <parse_file_seq@@Base+0xa68>
  41be6c:	cmp	x24, #0x8
  41be70:	b.ne	41be88 <parse_file_seq@@Base+0xa04>  // b.any
  41be74:	mov	w2, #0x8                   	// #8
  41be78:	mov	x0, x21
  41be7c:	mov	x1, x25
  41be80:	bl	406a70 <strncmp@plt>
  41be84:	cbz	w0, 41bef4 <parse_file_seq@@Base+0xa70>
  41be88:	cmp	x24, #0x7
  41be8c:	b.ne	41bea4 <parse_file_seq@@Base+0xa20>  // b.any
  41be90:	mov	w2, #0x7                   	// #7
  41be94:	mov	x0, x22
  41be98:	mov	x1, x25
  41be9c:	bl	406a70 <strncmp@plt>
  41bea0:	cbz	w0, 41befc <parse_file_seq@@Base+0xa78>
  41bea4:	cmp	x24, #0x6
  41bea8:	b.ne	41bec0 <parse_file_seq@@Base+0xa3c>  // b.any
  41beac:	mov	w2, #0x6                   	// #6
  41beb0:	mov	x0, x23
  41beb4:	mov	x1, x25
  41beb8:	bl	406a70 <strncmp@plt>
  41bebc:	cbz	w0, 41be10 <parse_file_seq@@Base+0x98c>
  41bec0:	cmp	x24, #0x8
  41bec4:	b.ne	41bee0 <parse_file_seq@@Base+0xa5c>  // b.any
  41bec8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x40e0>
  41becc:	mov	w2, #0x8                   	// #8
  41bed0:	add	x0, x0, #0xf94
  41bed4:	mov	x1, x25
  41bed8:	bl	406a70 <strncmp@plt>
  41bedc:	cbz	w0, 41bf2c <parse_file_seq@@Base+0xaa8>
  41bee0:	mov	w8, #0x1                   	// #1
  41bee4:	mov	x28, x27
  41bee8:	b	41be2c <parse_file_seq@@Base+0x9a8>
  41beec:	mov	w8, #0x8                   	// #8
  41bef0:	b	41bf00 <parse_file_seq@@Base+0xa7c>
  41bef4:	mov	w8, #0x10                  	// #16
  41bef8:	b	41bf00 <parse_file_seq@@Base+0xa7c>
  41befc:	mov	w8, #0x20                  	// #32
  41bf00:	ldrb	w9, [x19]
  41bf04:	mov	x0, x26
  41bf08:	orr	w8, w9, w8
  41bf0c:	strb	w8, [x19]
  41bf10:	bl	418138 <next_token@@Base>
  41bf14:	ldrb	w8, [x0]
  41bf18:	mov	x25, x0
  41bf1c:	cmp	w8, #0x0
  41bf20:	cset	w8, eq  // eq = none
  41bf24:	csel	x28, x27, x28, eq  // eq = none
  41bf28:	b	41be2c <parse_file_seq@@Base+0x9a8>
  41bf2c:	ldrb	w8, [x19]
  41bf30:	orr	w8, w8, #0x4
  41bf34:	b	41be18 <parse_file_seq@@Base+0x994>
  41bf38:	cmp	w8, #0x5
  41bf3c:	b.ne	41bf58 <parse_file_seq@@Base+0xad4>  // b.any
  41bf40:	ldrb	w8, [x19]
  41bf44:	orr	w8, w8, #0x1
  41bf48:	strb	w8, [x19]
  41bf4c:	b	41bf5c <parse_file_seq@@Base+0xad8>
  41bf50:	mov	x25, x27
  41bf54:	b	41bf5c <parse_file_seq@@Base+0xad8>
  41bf58:	mov	x25, x28
  41bf5c:	mov	x0, x25
  41bf60:	ldp	x20, x19, [sp, #128]
  41bf64:	ldp	x22, x21, [sp, #112]
  41bf68:	ldp	x24, x23, [sp, #96]
  41bf6c:	ldp	x26, x25, [sp, #80]
  41bf70:	ldp	x28, x27, [sp, #64]
  41bf74:	ldp	x29, x30, [sp, #48]
  41bf78:	add	sp, sp, #0x90
  41bf7c:	ret
  41bf80:	sub	sp, sp, #0x90
  41bf84:	stp	x29, x30, [sp, #48]
  41bf88:	add	x29, sp, #0x30
  41bf8c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41bf90:	ldr	w8, [x8, #2808]
  41bf94:	ldr	x9, [x29, #112]
  41bf98:	stp	x28, x27, [sp, #64]
  41bf9c:	stp	x26, x25, [sp, #80]
  41bfa0:	stp	x24, x23, [sp, #96]
  41bfa4:	stp	x22, x21, [sp, #112]
  41bfa8:	stp	x20, x19, [sp, #128]
  41bfac:	str	x3, [sp, #16]
  41bfb0:	stur	w1, [x29, #-16]
  41bfb4:	str	x9, [sp]
  41bfb8:	cbnz	w8, 41c7f4 <parse_file_seq@@Base+0x1370>
  41bfbc:	ldr	x8, [x0, #8]
  41bfc0:	mov	x25, x0
  41bfc4:	sub	x0, x29, #0x8
  41bfc8:	mov	x23, x7
  41bfcc:	mov	x24, x6
  41bfd0:	mov	w27, w5
  41bfd4:	mov	x21, x4
  41bfd8:	mov	x22, x2
  41bfdc:	stur	x8, [x29, #-8]
  41bfe0:	bl	41af80 <find_percent_cached@@Base>
  41bfe4:	mov	x19, x0
  41bfe8:	cbz	x23, 41c0b4 <parse_file_seq@@Base+0xc30>
  41bfec:	ldrb	w26, [x29, #104]
  41bff0:	mov	w0, #0x38                  	// #56
  41bff4:	bl	418070 <xmalloc@@Base>
  41bff8:	ldr	x10, [sp]
  41bffc:	mov	w9, w27
  41c000:	mov	x20, x0
  41c004:	mov	x1, x23
  41c008:	ldr	x8, [x10]
  41c00c:	str	xzr, [x0, #16]
  41c010:	mov	x23, x10
  41c014:	stp	x8, x9, [x0]
  41c018:	mov	x0, x24
  41c01c:	bl	4180d8 <xstrndup@@Base>
  41c020:	stp	x0, xzr, [x20, #24]
  41c024:	strb	w26, [x20, #50]
  41c028:	adrp	x24, 440000 <shell_var@@Base+0x18>
  41c02c:	cbz	x21, 41c0cc <parse_file_seq@@Base+0xc48>
  41c030:	mov	x0, x21
  41c034:	bl	41d8dc <parse_file_seq@@Base+0x2458>
  41c038:	ldr	w8, [x24, #44]
  41c03c:	cbz	w8, 41c084 <parse_file_seq@@Base+0xc00>
  41c040:	mov	w1, #0x24                  	// #36
  41c044:	mov	x0, x21
  41c048:	bl	406d10 <strchr@plt>
  41c04c:	cbz	x0, 41c084 <parse_file_seq@@Base+0xc00>
  41c050:	mov	w0, #0x28                  	// #40
  41c054:	bl	418094 <xcalloc@@Base>
  41c058:	ldrh	w8, [x0, #32]
  41c05c:	cmp	x22, #0x0
  41c060:	mov	w9, #0xc00                 	// #3072
  41c064:	mov	w10, #0x800                 	// #2048
  41c068:	and	w8, w8, #0xfffff3ff
  41c06c:	csel	w9, w10, w9, eq  // eq = none
  41c070:	orr	w8, w9, w8
  41c074:	mov	x24, x0
  41c078:	str	x21, [x0, #8]
  41c07c:	strh	w8, [x0, #32]
  41c080:	b	41c0d0 <parse_file_seq@@Base+0xc4c>
  41c084:	mov	x0, x21
  41c088:	bl	40af88 <split_prereqs@@Base>
  41c08c:	mov	x24, x0
  41c090:	mov	x0, x21
  41c094:	bl	406cf0 <free@plt>
  41c098:	orr	x8, x22, x19
  41c09c:	cbnz	x8, 41c0d0 <parse_file_seq@@Base+0xc4c>
  41c0a0:	mov	x0, x24
  41c0a4:	mov	x1, xzr
  41c0a8:	bl	40b02c <enter_prereqs@@Base>
  41c0ac:	mov	x24, x0
  41c0b0:	b	41c0d0 <parse_file_seq@@Base+0xc4c>
  41c0b4:	ldur	w8, [x29, #-16]
  41c0b8:	cbnz	w8, 41c824 <parse_file_seq@@Base+0x13a0>
  41c0bc:	ldr	x23, [sp]
  41c0c0:	mov	x20, xzr
  41c0c4:	adrp	x24, 440000 <shell_var@@Base+0x18>
  41c0c8:	cbnz	x21, 41c030 <parse_file_seq@@Base+0xbac>
  41c0cc:	mov	x24, xzr
  41c0d0:	ldr	w8, [x29, #96]
  41c0d4:	str	x24, [sp, #24]
  41c0d8:	stur	w8, [x29, #-12]
  41c0dc:	cbz	x19, 41c114 <parse_file_seq@@Base+0xc90>
  41c0e0:	cbnz	x22, 41c800 <parse_file_seq@@Base+0x137c>
  41c0e4:	ldr	x21, [x25]
  41c0e8:	mov	x0, x25
  41c0ec:	bl	406cf0 <free@plt>
  41c0f0:	cbz	x21, 41c6f0 <parse_file_seq@@Base+0x126c>
  41c0f4:	mov	w8, #0x1                   	// #1
  41c0f8:	mov	x9, x21
  41c0fc:	ldr	x9, [x9]
  41c100:	add	w8, w8, #0x1
  41c104:	cbnz	x9, 41c0fc <parse_file_seq@@Base+0xc78>
  41c108:	and	x8, x8, #0xffff
  41c10c:	lsl	x24, x8, #3
  41c110:	b	41c6f4 <parse_file_seq@@Base+0x1270>
  41c114:	ldr	x8, [sp, #16]
  41c118:	mov	x27, xzr
  41c11c:	add	x8, x8, #0x1
  41c120:	str	x8, [sp, #8]
  41c124:	b	41c130 <parse_file_seq@@Base+0xcac>
  41c128:	mov	w8, wzr
  41c12c:	tbz	w8, #0, 41c670 <parse_file_seq@@Base+0x11ec>
  41c130:	ldr	x26, [x25]
  41c134:	mov	x0, x25
  41c138:	bl	406cf0 <free@plt>
  41c13c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41c140:	ldr	w8, [x8, #40]
  41c144:	cbz	w8, 41c1a8 <parse_file_seq@@Base+0xd24>
  41c148:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41c14c:	ldr	w8, [x8, #44]
  41c150:	cbz	w8, 41c358 <parse_file_seq@@Base+0xed4>
  41c154:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41c158:	ldr	w8, [x8, #92]
  41c15c:	cbnz	w8, 41c320 <parse_file_seq@@Base+0xe9c>
  41c160:	ldur	x8, [x29, #-8]
  41c164:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c168:	add	x9, x9, #0x7f
  41c16c:	cmp	x8, x9
  41c170:	b.eq	41c194 <parse_file_seq@@Base+0xd10>  // b.none
  41c174:	ldrb	w9, [x8]
  41c178:	cmp	w9, #0x2e
  41c17c:	b.ne	41c320 <parse_file_seq@@Base+0xe9c>  // b.any
  41c180:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c184:	add	x0, x8, #0x1
  41c188:	add	x1, x1, #0x80
  41c18c:	bl	406cb0 <strcmp@plt>
  41c190:	cbnz	w0, 41c320 <parse_file_seq@@Base+0xe9c>
  41c194:	mov	w8, #0x1                   	// #1
  41c198:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41c19c:	str	w8, [x9, #92]
  41c1a0:	cbnz	x22, 41c324 <parse_file_seq@@Base+0xea0>
  41c1a4:	b	41c33c <parse_file_seq@@Base+0xeb8>
  41c1a8:	ldur	x8, [x29, #-8]
  41c1ac:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c1b0:	add	x9, x9, #0x36
  41c1b4:	cmp	x8, x9
  41c1b8:	b.eq	41c1dc <parse_file_seq@@Base+0xd58>  // b.none
  41c1bc:	ldrb	w9, [x8]
  41c1c0:	cmp	w9, #0x2e
  41c1c4:	b.ne	41c148 <parse_file_seq@@Base+0xcc4>  // b.any
  41c1c8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c1cc:	add	x0, x8, #0x1
  41c1d0:	add	x1, x1, #0x37
  41c1d4:	bl	406cb0 <strcmp@plt>
  41c1d8:	cbnz	w0, 41c148 <parse_file_seq@@Base+0xcc4>
  41c1dc:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  41c1e0:	ldr	x8, [x19, #2440]
  41c1e4:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41c1e8:	mov	w10, #0x1                   	// #1
  41c1ec:	str	w10, [x9, #40]
  41c1f0:	ldr	x5, [x8, #8]
  41c1f4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41c1f8:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  41c1fc:	mov	w1, #0xb                   	// #11
  41c200:	add	x0, x0, #0x602
  41c204:	add	x2, x2, #0xb2a
  41c208:	mov	w3, wzr
  41c20c:	mov	w4, wzr
  41c210:	mov	x6, xzr
  41c214:	bl	421720 <define_variable_in_set@@Base>
  41c218:	ldr	x8, [x19, #2440]
  41c21c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  41c220:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c224:	mov	w1, #0x7                   	// #7
  41c228:	ldr	x5, [x8, #8]
  41c22c:	add	x0, x0, #0x909
  41c230:	add	x2, x2, #0x3d
  41c234:	mov	w3, wzr
  41c238:	mov	w4, wzr
  41c23c:	mov	x6, xzr
  41c240:	bl	421720 <define_variable_in_set@@Base>
  41c244:	ldr	x8, [x19, #2440]
  41c248:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  41c24c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c250:	mov	w1, #0x2                   	// #2
  41c254:	ldr	x5, [x8, #8]
  41c258:	add	x0, x0, #0x9c2
  41c25c:	add	x2, x2, #0x41
  41c260:	mov	w3, wzr
  41c264:	mov	w4, wzr
  41c268:	mov	x6, xzr
  41c26c:	bl	421720 <define_variable_in_set@@Base>
  41c270:	ldr	x8, [x19, #2440]
  41c274:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c278:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c27c:	add	x21, x21, #0x4c
  41c280:	ldr	x5, [x8, #8]
  41c284:	mov	w1, #0x6                   	// #6
  41c288:	add	x0, x0, #0x45
  41c28c:	mov	x2, x21
  41c290:	mov	w3, wzr
  41c294:	mov	w4, wzr
  41c298:	mov	x6, xzr
  41c29c:	bl	421720 <define_variable_in_set@@Base>
  41c2a0:	ldr	x8, [x19, #2440]
  41c2a4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0xe0>
  41c2a8:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c2ac:	mov	w1, #0x2                   	// #2
  41c2b0:	ldr	x5, [x8, #8]
  41c2b4:	add	x0, x0, #0x975
  41c2b8:	add	x2, x2, #0x50
  41c2bc:	mov	w3, wzr
  41c2c0:	mov	w4, wzr
  41c2c4:	mov	x6, xzr
  41c2c8:	bl	421720 <define_variable_in_set@@Base>
  41c2cc:	ldr	x8, [x19, #2440]
  41c2d0:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c2d4:	mov	w1, #0x6                   	// #6
  41c2d8:	add	x0, x0, #0x57
  41c2dc:	ldr	x5, [x8, #8]
  41c2e0:	mov	x2, x21
  41c2e4:	mov	w3, wzr
  41c2e8:	mov	w4, wzr
  41c2ec:	mov	x6, xzr
  41c2f0:	bl	421720 <define_variable_in_set@@Base>
  41c2f4:	ldr	x8, [x19, #2440]
  41c2f8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c2fc:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c300:	mov	w1, #0xc                   	// #12
  41c304:	ldr	x5, [x8, #8]
  41c308:	add	x0, x0, #0x5e
  41c30c:	add	x2, x2, #0x6b
  41c310:	mov	w3, wzr
  41c314:	mov	w4, wzr
  41c318:	mov	x6, xzr
  41c31c:	bl	421720 <define_variable_in_set@@Base>
  41c320:	cbz	x22, 41c33c <parse_file_seq@@Base+0xeb8>
  41c324:	ldur	x19, [x29, #-8]
  41c328:	ldr	x1, [sp, #16]
  41c32c:	mov	x0, x22
  41c330:	mov	x2, x19
  41c334:	bl	40ca30 <pattern_matches@@Base>
  41c338:	cbz	w0, 41c3a0 <parse_file_seq@@Base+0xf1c>
  41c33c:	cbz	x24, 41c3d4 <parse_file_seq@@Base+0xf50>
  41c340:	mov	x21, x24
  41c344:	cbz	x26, 41c3d8 <parse_file_seq@@Base+0xf54>
  41c348:	mov	x0, x24
  41c34c:	bl	4182f8 <copy_dep_chain@@Base>
  41c350:	mov	x21, x0
  41c354:	b	41c3d8 <parse_file_seq@@Base+0xf54>
  41c358:	ldur	x8, [x29, #-8]
  41c35c:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c360:	add	x9, x9, #0x6e
  41c364:	cmp	x8, x9
  41c368:	b.eq	41c38c <parse_file_seq@@Base+0xf08>  // b.none
  41c36c:	ldrb	w9, [x8]
  41c370:	cmp	w9, #0x2e
  41c374:	b.ne	41c154 <parse_file_seq@@Base+0xcd0>  // b.any
  41c378:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c37c:	add	x0, x8, #0x1
  41c380:	add	x1, x1, #0x6f
  41c384:	bl	406cb0 <strcmp@plt>
  41c388:	cbnz	w0, 41c154 <parse_file_seq@@Base+0xcd0>
  41c38c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41c390:	mov	w9, #0x1                   	// #1
  41c394:	str	w9, [x8, #44]
  41c398:	cbnz	x22, 41c324 <parse_file_seq@@Base+0xea0>
  41c39c:	b	41c33c <parse_file_seq@@Base+0xeb8>
  41c3a0:	mov	x0, x19
  41c3a4:	bl	4067d0 <strlen@plt>
  41c3a8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c3ac:	mov	x21, x0
  41c3b0:	mov	w2, #0x5                   	// #5
  41c3b4:	mov	x0, xzr
  41c3b8:	add	x1, x1, #0x89
  41c3bc:	bl	406e50 <dcgettext@plt>
  41c3c0:	mov	x2, x0
  41c3c4:	mov	x0, x23
  41c3c8:	mov	x1, x21
  41c3cc:	mov	x3, x19
  41c3d0:	bl	418f84 <error@@Base>
  41c3d4:	mov	x21, xzr
  41c3d8:	ldur	x19, [x29, #-8]
  41c3dc:	ldur	w8, [x29, #-12]
  41c3e0:	cbz	w8, 41c428 <parse_file_seq@@Base+0xfa4>
  41c3e4:	mov	x0, x19
  41c3e8:	bl	40a798 <lookup_file@@Base>
  41c3ec:	cbz	x0, 41c404 <parse_file_seq@@Base+0xf80>
  41c3f0:	ldrb	w8, [x0, #137]
  41c3f4:	mov	x28, x0
  41c3f8:	tbz	w8, #3, 41c404 <parse_file_seq@@Base+0xf80>
  41c3fc:	ldr	x8, [x28, #104]
  41c400:	cbz	x8, 41c7c0 <parse_file_seq@@Base+0x133c>
  41c404:	mov	x0, x19
  41c408:	bl	420f28 <strcache_add@@Base>
  41c40c:	bl	40a830 <enter_file@@Base>
  41c410:	ldr	x8, [x0, #104]
  41c414:	mov	x28, x0
  41c418:	cbnz	x8, 41c420 <parse_file_seq@@Base+0xf9c>
  41c41c:	str	x28, [x28, #104]
  41c420:	str	x20, [x28, #32]
  41c424:	b	41c538 <parse_file_seq@@Base+0x10b4>
  41c428:	mov	x0, x19
  41c42c:	bl	420f28 <strcache_add@@Base>
  41c430:	bl	40a830 <enter_file@@Base>
  41c434:	ldr	x8, [x0, #104]
  41c438:	mov	x28, x0
  41c43c:	cbnz	x8, 41c7c0 <parse_file_seq@@Base+0x133c>
  41c440:	cbz	x20, 41c4f4 <parse_file_seq@@Base+0x1070>
  41c444:	ldr	x8, [x28, #32]
  41c448:	cmp	x20, x8
  41c44c:	b.eq	41c4bc <parse_file_seq@@Base+0x1038>  // b.none
  41c450:	cbz	x8, 41c4f4 <parse_file_seq@@Base+0x1070>
  41c454:	ldrb	w8, [x28, #137]
  41c458:	tbz	w8, #3, 41c4f4 <parse_file_seq@@Base+0x1070>
  41c45c:	ldr	x0, [x28]
  41c460:	bl	4067d0 <strlen@plt>
  41c464:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c468:	mov	x24, x0
  41c46c:	mov	w2, #0x5                   	// #5
  41c470:	mov	x0, xzr
  41c474:	add	x1, x1, #0x113
  41c478:	bl	406e50 <dcgettext@plt>
  41c47c:	ldr	x3, [x28]
  41c480:	mov	x2, x0
  41c484:	mov	x0, x20
  41c488:	mov	x1, x24
  41c48c:	bl	418f84 <error@@Base>
  41c490:	ldr	x23, [x28, #32]
  41c494:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c498:	mov	w2, #0x5                   	// #5
  41c49c:	mov	x0, xzr
  41c4a0:	add	x1, x1, #0x13e
  41c4a4:	bl	406e50 <dcgettext@plt>
  41c4a8:	ldr	x3, [x28]
  41c4ac:	mov	x2, x0
  41c4b0:	mov	x0, x23
  41c4b4:	ldr	x23, [sp]
  41c4b8:	b	41c4e8 <parse_file_seq@@Base+0x1064>
  41c4bc:	ldr	x0, [x28]
  41c4c0:	bl	4067d0 <strlen@plt>
  41c4c4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c4c8:	mov	x24, x0
  41c4cc:	mov	w2, #0x5                   	// #5
  41c4d0:	mov	x0, xzr
  41c4d4:	add	x1, x1, #0xe1
  41c4d8:	bl	406e50 <dcgettext@plt>
  41c4dc:	ldr	x3, [x28]
  41c4e0:	mov	x2, x0
  41c4e4:	mov	x0, x23
  41c4e8:	mov	x1, x24
  41c4ec:	ldr	x24, [sp, #24]
  41c4f0:	bl	418f84 <error@@Base>
  41c4f4:	cbnz	x20, 41c510 <parse_file_seq@@Base+0x108c>
  41c4f8:	cbnz	x21, 41c510 <parse_file_seq@@Base+0x108c>
  41c4fc:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41c500:	ldr	x8, [x8, #72]
  41c504:	cmp	x28, x8
  41c508:	b.ne	41c510 <parse_file_seq@@Base+0x108c>  // b.any
  41c50c:	str	xzr, [x28, #32]
  41c510:	cbz	x20, 41c518 <parse_file_seq@@Base+0x1094>
  41c514:	str	x20, [x28, #32]
  41c518:	cbnz	x21, 41c538 <parse_file_seq@@Base+0x10b4>
  41c51c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41c520:	ldr	x8, [x8, #248]
  41c524:	cmp	x28, x8
  41c528:	b.ne	41c538 <parse_file_seq@@Base+0x10b4>  // b.any
  41c52c:	ldr	x0, [x28, #24]
  41c530:	bl	418388 <free_ns_chain@@Base>
  41c534:	str	xzr, [x28, #24]
  41c538:	ldur	w8, [x29, #-16]
  41c53c:	cbz	w8, 41c558 <parse_file_seq@@Base+0x10d4>
  41c540:	mov	w0, #0x28                  	// #40
  41c544:	bl	418094 <xcalloc@@Base>
  41c548:	ldr	x8, [x28]
  41c54c:	str	x27, [x0]
  41c550:	mov	x27, x0
  41c554:	stp	x8, x28, [x0, #8]
  41c558:	ldr	w8, [x28, #136]
  41c55c:	orr	w8, w8, #0x800
  41c560:	str	w8, [x28, #136]
  41c564:	cbz	x22, 41c5d0 <parse_file_seq@@Base+0x114c>
  41c568:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  41c56c:	add	x0, x0, #0x989
  41c570:	bl	40a57c <variable_expand@@Base>
  41c574:	ldr	x4, [sp, #8]
  41c578:	adrp	x3, 427000 <_IO_stdin_used@@Base+0x20e0>
  41c57c:	add	x3, x3, #0x346
  41c580:	add	x5, x3, #0x1
  41c584:	mov	x1, x19
  41c588:	mov	x2, x22
  41c58c:	mov	x24, x0
  41c590:	bl	40c730 <patsubst_expand_pat@@Base>
  41c594:	sub	x1, x0, x24
  41c598:	mov	x0, x24
  41c59c:	bl	421000 <strcache_add_len@@Base>
  41c5a0:	str	x0, [x28, #40]
  41c5a4:	cbz	x21, 41c5cc <parse_file_seq@@Base+0x1148>
  41c5a8:	ldrb	w8, [x21, #33]
  41c5ac:	ldr	x24, [sp, #24]
  41c5b0:	mov	x1, x0
  41c5b4:	tbnz	w8, #3, 41c664 <parse_file_seq@@Base+0x11e0>
  41c5b8:	mov	x0, x21
  41c5bc:	bl	40b02c <enter_prereqs@@Base>
  41c5c0:	mov	x21, x0
  41c5c4:	cbnz	x21, 41c5d4 <parse_file_seq@@Base+0x1150>
  41c5c8:	b	41c610 <parse_file_seq@@Base+0x118c>
  41c5cc:	ldr	x24, [sp, #24]
  41c5d0:	cbz	x21, 41c610 <parse_file_seq@@Base+0x118c>
  41c5d4:	mov	x8, x28
  41c5d8:	ldr	x9, [x8, #24]!
  41c5dc:	cbz	x9, 41c60c <parse_file_seq@@Base+0x1188>
  41c5e0:	mov	x10, x21
  41c5e4:	cbz	x20, 41c600 <parse_file_seq@@Base+0x117c>
  41c5e8:	mov	x9, x10
  41c5ec:	ldr	x10, [x10]
  41c5f0:	cbnz	x10, 41c5e8 <parse_file_seq@@Base+0x1164>
  41c5f4:	ldr	x10, [x8]
  41c5f8:	str	x10, [x9]
  41c5fc:	b	41c60c <parse_file_seq@@Base+0x1188>
  41c600:	mov	x8, x9
  41c604:	ldr	x9, [x9]
  41c608:	cbnz	x9, 41c600 <parse_file_seq@@Base+0x117c>
  41c60c:	str	x21, [x8]
  41c610:	ldr	x8, [x28]
  41c614:	stur	x8, [x29, #-8]
  41c618:	cbz	x26, 41c128 <parse_file_seq@@Base+0xca4>
  41c61c:	ldr	x8, [x26, #8]
  41c620:	sub	x0, x29, #0x8
  41c624:	stur	x8, [x29, #-8]
  41c628:	bl	41af80 <find_percent_cached@@Base>
  41c62c:	cbz	x0, 41c654 <parse_file_seq@@Base+0x11d0>
  41c630:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c634:	mov	w2, #0x5                   	// #5
  41c638:	mov	x0, xzr
  41c63c:	add	x1, x1, #0x16b
  41c640:	bl	406e50 <dcgettext@plt>
  41c644:	mov	x2, x0
  41c648:	mov	x0, x23
  41c64c:	mov	x1, xzr
  41c650:	bl	418f84 <error@@Base>
  41c654:	mov	w8, #0x1                   	// #1
  41c658:	mov	x25, x26
  41c65c:	tbnz	w8, #0, 41c130 <parse_file_seq@@Base+0xcac>
  41c660:	b	41c670 <parse_file_seq@@Base+0x11ec>
  41c664:	str	x1, [x21, #24]
  41c668:	cbnz	x21, 41c5d4 <parse_file_seq@@Base+0x1150>
  41c66c:	b	41c610 <parse_file_seq@@Base+0x118c>
  41c670:	cbz	x27, 41c780 <parse_file_seq@@Base+0x12fc>
  41c674:	adrp	x19, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c678:	add	x19, x19, #0x1a2
  41c67c:	mov	x23, x27
  41c680:	b	41c690 <parse_file_seq@@Base+0x120c>
  41c684:	str	x21, [x24, #48]
  41c688:	ldr	x23, [x23]
  41c68c:	cbz	x23, 41c780 <parse_file_seq@@Base+0x12fc>
  41c690:	ldr	x8, [x23]
  41c694:	ldr	x24, [x23, #16]
  41c698:	mov	x21, x27
  41c69c:	cbz	x8, 41c6ac <parse_file_seq@@Base+0x1228>
  41c6a0:	mov	x0, x27
  41c6a4:	bl	4182f8 <copy_dep_chain@@Base>
  41c6a8:	mov	x21, x0
  41c6ac:	ldr	x8, [x24, #48]
  41c6b0:	cbz	x8, 41c684 <parse_file_seq@@Base+0x1200>
  41c6b4:	ldr	x0, [x24]
  41c6b8:	bl	4067d0 <strlen@plt>
  41c6bc:	mov	x22, x0
  41c6c0:	mov	w2, #0x5                   	// #5
  41c6c4:	mov	x0, xzr
  41c6c8:	mov	x1, x19
  41c6cc:	bl	406e50 <dcgettext@plt>
  41c6d0:	ldr	x3, [x24]
  41c6d4:	mov	x2, x0
  41c6d8:	mov	x0, x20
  41c6dc:	mov	x1, x22
  41c6e0:	bl	418f84 <error@@Base>
  41c6e4:	ldr	x0, [x24, #48]
  41c6e8:	bl	418388 <free_ns_chain@@Base>
  41c6ec:	b	41c684 <parse_file_seq@@Base+0x1200>
  41c6f0:	mov	w24, #0x8                   	// #8
  41c6f4:	mov	x0, x24
  41c6f8:	bl	418070 <xmalloc@@Base>
  41c6fc:	mov	x22, x0
  41c700:	mov	x0, x24
  41c704:	bl	418070 <xmalloc@@Base>
  41c708:	ldur	x8, [x29, #-8]
  41c70c:	mov	x24, x0
  41c710:	str	x8, [x22]
  41c714:	str	x19, [x0]
  41c718:	mov	w19, #0x1                   	// #1
  41c71c:	cbz	x21, 41c760 <parse_file_seq@@Base+0x12dc>
  41c720:	ldr	x8, [x21, #8]
  41c724:	sub	x0, x29, #0x8
  41c728:	stur	x8, [x29, #-8]
  41c72c:	bl	41af80 <find_percent_cached@@Base>
  41c730:	cbz	x0, 41c7a0 <parse_file_seq@@Base+0x131c>
  41c734:	ldur	x8, [x29, #-8]
  41c738:	and	x9, x19, #0xffff
  41c73c:	lsl	x9, x9, #3
  41c740:	add	w19, w19, #0x1
  41c744:	str	x8, [x22, x9]
  41c748:	str	x0, [x24, x9]
  41c74c:	ldr	x23, [x21]
  41c750:	mov	x0, x21
  41c754:	bl	406cf0 <free@plt>
  41c758:	mov	x21, x23
  41c75c:	cbnz	x23, 41c720 <parse_file_seq@@Base+0x129c>
  41c760:	ldur	w3, [x29, #-12]
  41c764:	ldr	x4, [sp, #24]
  41c768:	mov	w6, #0x1                   	// #1
  41c76c:	mov	x0, x22
  41c770:	mov	x1, x24
  41c774:	mov	w2, w19
  41c778:	mov	x5, x20
  41c77c:	bl	420b68 <create_pattern_rule@@Base>
  41c780:	ldp	x20, x19, [sp, #128]
  41c784:	ldp	x22, x21, [sp, #112]
  41c788:	ldp	x24, x23, [sp, #96]
  41c78c:	ldp	x26, x25, [sp, #80]
  41c790:	ldp	x28, x27, [sp, #64]
  41c794:	ldp	x29, x30, [sp, #48]
  41c798:	add	sp, sp, #0x90
  41c79c:	ret
  41c7a0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c7a4:	add	x1, x1, #0x16
  41c7a8:	mov	w2, #0x5                   	// #5
  41c7ac:	bl	406e50 <dcgettext@plt>
  41c7b0:	mov	x2, x0
  41c7b4:	ldr	x0, [sp]
  41c7b8:	mov	x1, xzr
  41c7bc:	bl	4190fc <fatal@@Base>
  41c7c0:	ldr	x0, [x28]
  41c7c4:	bl	4067d0 <strlen@plt>
  41c7c8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c7cc:	mov	x19, x0
  41c7d0:	add	x1, x1, #0xb6
  41c7d4:	mov	w2, #0x5                   	// #5
  41c7d8:	mov	x0, xzr
  41c7dc:	bl	406e50 <dcgettext@plt>
  41c7e0:	ldr	x3, [x28]
  41c7e4:	mov	x2, x0
  41c7e8:	mov	x0, x23
  41c7ec:	mov	x1, x19
  41c7f0:	bl	4190fc <fatal@@Base>
  41c7f4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41c7f8:	add	x1, x1, #0xf9d
  41c7fc:	b	41c82c <parse_file_seq@@Base+0x13a8>
  41c800:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41c804:	add	x1, x1, #0xfee
  41c808:	mov	w2, #0x5                   	// #5
  41c80c:	mov	x0, xzr
  41c810:	bl	406e50 <dcgettext@plt>
  41c814:	mov	x2, x0
  41c818:	mov	x0, x23
  41c81c:	mov	x1, xzr
  41c820:	bl	4190fc <fatal@@Base>
  41c824:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41c828:	add	x1, x1, #0xfc8
  41c82c:	mov	w2, #0x5                   	// #5
  41c830:	mov	x0, xzr
  41c834:	b	41c7ac <parse_file_seq@@Base+0x1328>
  41c838:	stp	x29, x30, [sp, #-48]!
  41c83c:	stp	x20, x19, [sp, #32]
  41c840:	mov	w19, w1
  41c844:	mov	x1, xzr
  41c848:	stp	x22, x21, [sp, #16]
  41c84c:	mov	x29, sp
  41c850:	mov	x22, x2
  41c854:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41c858:	mov	x20, x0
  41c85c:	bl	418138 <next_token@@Base>
  41c860:	ldrb	w8, [x0]
  41c864:	cbz	w8, 41c8cc <parse_file_seq@@Base+0x1448>
  41c868:	mov	x21, x0
  41c86c:	bl	4067d0 <strlen@plt>
  41c870:	add	x8, x0, x21
  41c874:	sub	x11, x8, #0x1
  41c878:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41c87c:	add	x8, x8, #0xcf0
  41c880:	mov	x9, x11
  41c884:	subs	x10, x11, x21
  41c888:	b.ls	41c89c <parse_file_seq@@Base+0x1418>  // b.plast
  41c88c:	mov	x11, x9
  41c890:	ldrb	w12, [x11], #-1
  41c894:	ldrh	w12, [x8, x12, lsl #1]
  41c898:	tbnz	w12, #1, 41c880 <parse_file_seq@@Base+0x13fc>
  41c89c:	add	x1, x10, #0x1
  41c8a0:	mov	x0, x21
  41c8a4:	mov	w2, w19
  41c8a8:	mov	x3, xzr
  41c8ac:	strb	wzr, [x9, #1]
  41c8b0:	bl	4219e0 <undefine_variable_in_set@@Base>
  41c8b4:	mov	x0, x20
  41c8b8:	bl	406cf0 <free@plt>
  41c8bc:	ldp	x20, x19, [sp, #32]
  41c8c0:	ldp	x22, x21, [sp, #16]
  41c8c4:	ldp	x29, x30, [sp], #48
  41c8c8:	ret
  41c8cc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c8d0:	add	x1, x1, #0x1d7
  41c8d4:	mov	w2, #0x5                   	// #5
  41c8d8:	mov	x0, xzr
  41c8dc:	add	x19, x22, #0x28
  41c8e0:	bl	406e50 <dcgettext@plt>
  41c8e4:	mov	x2, x0
  41c8e8:	mov	x0, x19
  41c8ec:	mov	x1, xzr
  41c8f0:	bl	4190fc <fatal@@Base>
  41c8f4:	sub	sp, sp, #0xd0
  41c8f8:	stp	x22, x21, [sp, #176]
  41c8fc:	mov	x22, x0
  41c900:	mov	w0, #0x64                  	// #100
  41c904:	stp	x29, x30, [sp, #112]
  41c908:	stp	x28, x27, [sp, #128]
  41c90c:	stp	x26, x25, [sp, #144]
  41c910:	stp	x24, x23, [sp, #160]
  41c914:	stp	x20, x19, [sp, #192]
  41c918:	add	x29, sp, #0x70
  41c91c:	mov	x21, x2
  41c920:	mov	w19, w1
  41c924:	bl	418070 <xmalloc@@Base>
  41c928:	ldur	q0, [x21, #40]
  41c92c:	ldr	x8, [x21, #56]
  41c930:	mov	x20, x0
  41c934:	sub	x1, x29, #0x30
  41c938:	mov	x0, x22
  41c93c:	str	q0, [sp, #32]
  41c940:	str	x8, [sp, #48]
  41c944:	bl	422e1c <parse_variable_definition@@Base>
  41c948:	cbz	x0, 41c98c <parse_file_seq@@Base+0x1508>
  41c94c:	ldur	x8, [x29, #-40]
  41c950:	ldrb	w8, [x8]
  41c954:	cbz	w8, 41c97c <parse_file_seq@@Base+0x14f8>
  41c958:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41c95c:	add	x1, x1, #0x1eb
  41c960:	mov	w2, #0x5                   	// #5
  41c964:	mov	x0, xzr
  41c968:	bl	406e50 <dcgettext@plt>
  41c96c:	mov	x2, x0
  41c970:	add	x0, sp, #0x20
  41c974:	mov	x1, xzr
  41c978:	bl	418f84 <error@@Base>
  41c97c:	ldur	x8, [x29, #-48]
  41c980:	ldur	w9, [x29, #-8]
  41c984:	strb	wzr, [x8, x9]
  41c988:	b	41c99c <parse_file_seq@@Base+0x1518>
  41c98c:	ldur	w8, [x29, #-4]
  41c990:	and	w8, w8, #0xfc7fffff
  41c994:	orr	w8, w8, #0x1000000
  41c998:	stur	w8, [x29, #-4]
  41c99c:	mov	x0, x22
  41c9a0:	mov	x1, xzr
  41c9a4:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41c9a8:	mov	x22, x0
  41c9ac:	bl	418138 <next_token@@Base>
  41c9b0:	ldrb	w8, [x0]
  41c9b4:	cbz	w8, 41cc28 <parse_file_seq@@Base+0x17a4>
  41c9b8:	add	x8, x21, #0x28
  41c9bc:	mov	x23, x0
  41c9c0:	str	x22, [sp]
  41c9c4:	str	w19, [sp, #12]
  41c9c8:	str	x8, [sp, #16]
  41c9cc:	bl	4067d0 <strlen@plt>
  41c9d0:	add	x8, x0, x23
  41c9d4:	adrp	x11, 43c000 <memcpy@GLIBC_2.17>
  41c9d8:	sub	x9, x8, #0x1
  41c9dc:	add	x11, x11, #0xcf0
  41c9e0:	mov	x8, x9
  41c9e4:	cmp	x9, x23
  41c9e8:	b.ls	41c9fc <parse_file_seq@@Base+0x1578>  // b.plast
  41c9ec:	mov	x9, x8
  41c9f0:	ldrb	w10, [x9], #-1
  41c9f4:	ldrh	w10, [x11, x10, lsl #1]
  41c9f8:	tbnz	w10, #1, 41c9e0 <parse_file_seq@@Base+0x155c>
  41c9fc:	mov	x26, xzr
  41ca00:	strb	wzr, [x8, #1]
  41ca04:	mov	w8, #0x1                   	// #1
  41ca08:	mov	w24, #0x64                  	// #100
  41ca0c:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  41ca10:	str	x8, [sp, #24]
  41ca14:	mov	x0, x21
  41ca18:	bl	41bbac <parse_file_seq@@Base+0x728>
  41ca1c:	tbnz	x0, #63, 41cc04 <parse_file_seq@@Base+0x1780>
  41ca20:	ldr	x8, [x21, #48]
  41ca24:	ldr	x28, [x21]
  41ca28:	add	x8, x8, x0
  41ca2c:	mov	x0, x28
  41ca30:	str	x8, [x21, #48]
  41ca34:	bl	417d0c <collapse_continuations@@Base>
  41ca38:	ldrb	w8, [x28]
  41ca3c:	ldrb	w9, [x25, #2392]
  41ca40:	cmp	w8, w9
  41ca44:	b.eq	41cb34 <parse_file_seq@@Base+0x16b0>  // b.none
  41ca48:	mov	x0, x28
  41ca4c:	bl	418138 <next_token@@Base>
  41ca50:	mov	x19, x0
  41ca54:	bl	4067d0 <strlen@plt>
  41ca58:	mov	x27, x0
  41ca5c:	cmp	x0, #0x6
  41ca60:	b.ne	41ca88 <parse_file_seq@@Base+0x1604>  // b.any
  41ca64:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41ca68:	mov	w2, #0x6                   	// #6
  41ca6c:	mov	x0, x19
  41ca70:	add	x1, x1, #0xf96
  41ca74:	bl	406a70 <strncmp@plt>
  41ca78:	cbnz	w0, 41caa4 <parse_file_seq@@Base+0x1620>
  41ca7c:	ldr	x8, [sp, #24]
  41ca80:	add	w8, w8, #0x1
  41ca84:	b	41cb10 <parse_file_seq@@Base+0x168c>
  41ca88:	cmp	x27, #0x7
  41ca8c:	b.cc	41caa4 <parse_file_seq@@Base+0x1620>  // b.lo, b.ul, b.last
  41ca90:	ldrb	w8, [x19, #6]
  41ca94:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41ca98:	add	x9, x9, #0xcf0
  41ca9c:	ldrh	w8, [x9, x8, lsl #1]
  41caa0:	tbnz	w8, #1, 41ca64 <parse_file_seq@@Base+0x15e0>
  41caa4:	cmp	x27, #0x5
  41caa8:	b.ne	41cb18 <parse_file_seq@@Base+0x1694>  // b.any
  41caac:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  41cab0:	mov	w2, #0x5                   	// #5
  41cab4:	mov	x0, x19
  41cab8:	add	x1, x1, #0xe1b
  41cabc:	bl	406a70 <strncmp@plt>
  41cac0:	cbnz	w0, 41cb34 <parse_file_seq@@Base+0x16b0>
  41cac4:	add	x19, x19, #0x5
  41cac8:	mov	x0, x19
  41cacc:	bl	41bd80 <parse_file_seq@@Base+0x8fc>
  41cad0:	mov	x0, x19
  41cad4:	bl	418138 <next_token@@Base>
  41cad8:	ldrb	w8, [x0]
  41cadc:	cbz	w8, 41cb04 <parse_file_seq@@Base+0x1680>
  41cae0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41cae4:	mov	w2, #0x5                   	// #5
  41cae8:	mov	x0, xzr
  41caec:	add	x1, x1, #0x23b
  41caf0:	bl	406e50 <dcgettext@plt>
  41caf4:	mov	x2, x0
  41caf8:	ldr	x0, [sp, #16]
  41cafc:	mov	x1, xzr
  41cb00:	bl	418f84 <error@@Base>
  41cb04:	ldr	x8, [sp, #24]
  41cb08:	subs	w8, w8, #0x1
  41cb0c:	b.eq	41cb90 <parse_file_seq@@Base+0x170c>  // b.none
  41cb10:	str	x8, [sp, #24]
  41cb14:	b	41cb34 <parse_file_seq@@Base+0x16b0>
  41cb18:	cmp	x27, #0x6
  41cb1c:	b.cc	41cb34 <parse_file_seq@@Base+0x16b0>  // b.lo, b.ul, b.last
  41cb20:	ldrb	w8, [x19, #5]
  41cb24:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41cb28:	add	x9, x9, #0xcf0
  41cb2c:	ldrh	w8, [x9, x8, lsl #1]
  41cb30:	tbnz	w8, #1, 41caac <parse_file_seq@@Base+0x1628>
  41cb34:	mov	x0, x28
  41cb38:	bl	4067d0 <strlen@plt>
  41cb3c:	add	x22, x0, x26
  41cb40:	add	x27, x22, #0x1
  41cb44:	mov	x19, x0
  41cb48:	cmp	x27, x24
  41cb4c:	b.ls	41cb68 <parse_file_seq@@Base+0x16e4>  // b.plast
  41cb50:	mov	w1, #0x1                   	// #1
  41cb54:	bfi	x1, x22, #1, #63
  41cb58:	mov	x0, x20
  41cb5c:	lsl	x24, x22, #1
  41cb60:	bl	41803c <xrealloc@@Base>
  41cb64:	mov	x20, x0
  41cb68:	add	x0, x20, x26
  41cb6c:	mov	x1, x28
  41cb70:	mov	x2, x19
  41cb74:	bl	406790 <memcpy@plt>
  41cb78:	mov	w8, #0xa                   	// #10
  41cb7c:	strb	w8, [x20, x22]
  41cb80:	mov	w8, #0x1                   	// #1
  41cb84:	mov	x26, x27
  41cb88:	tbnz	w8, #0, 41ca14 <parse_file_seq@@Base+0x1590>
  41cb8c:	b	41cb98 <parse_file_seq@@Base+0x1714>
  41cb90:	str	xzr, [sp, #24]
  41cb94:	tbnz	w8, #0, 41ca14 <parse_file_seq@@Base+0x1590>
  41cb98:	add	x8, x26, x20
  41cb9c:	sub	x8, x8, #0x1
  41cba0:	cmp	x26, #0x0
  41cba4:	csel	x8, x20, x8, eq  // eq = none
  41cba8:	strb	wzr, [x8]
  41cbac:	ldur	w8, [x29, #-4]
  41cbb0:	ldr	w3, [sp, #12]
  41cbb4:	add	x0, sp, #0x20
  41cbb8:	mov	x1, x23
  41cbbc:	ubfx	w4, w8, #23, #3
  41cbc0:	mov	x2, x20
  41cbc4:	mov	w5, wzr
  41cbc8:	bl	422088 <do_variable_definition@@Base>
  41cbcc:	mov	x19, x0
  41cbd0:	mov	x0, x20
  41cbd4:	bl	406cf0 <free@plt>
  41cbd8:	ldr	x0, [sp]
  41cbdc:	bl	406cf0 <free@plt>
  41cbe0:	mov	x0, x19
  41cbe4:	ldp	x20, x19, [sp, #192]
  41cbe8:	ldp	x22, x21, [sp, #176]
  41cbec:	ldp	x24, x23, [sp, #160]
  41cbf0:	ldp	x26, x25, [sp, #144]
  41cbf4:	ldp	x28, x27, [sp, #128]
  41cbf8:	ldp	x29, x30, [sp, #112]
  41cbfc:	add	sp, sp, #0xd0
  41cc00:	ret
  41cc04:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41cc08:	add	x1, x1, #0x214
  41cc0c:	mov	w2, #0x5                   	// #5
  41cc10:	mov	x0, xzr
  41cc14:	bl	406e50 <dcgettext@plt>
  41cc18:	mov	x2, x0
  41cc1c:	add	x0, sp, #0x20
  41cc20:	mov	x1, xzr
  41cc24:	bl	4190fc <fatal@@Base>
  41cc28:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41cc2c:	add	x1, x1, #0x1d7
  41cc30:	b	41cc0c <parse_file_seq@@Base+0x1788>
  41cc34:	stp	x29, x30, [sp, #-96]!
  41cc38:	stp	x22, x21, [sp, #64]
  41cc3c:	stp	x20, x19, [sp, #80]
  41cc40:	mov	x19, x2
  41cc44:	mov	x21, x1
  41cc48:	cmp	x1, #0x5
  41cc4c:	mov	x22, x0
  41cc50:	stp	x28, x27, [sp, #16]
  41cc54:	stp	x26, x25, [sp, #32]
  41cc58:	stp	x24, x23, [sp, #48]
  41cc5c:	mov	x29, sp
  41cc60:	b.ne	41cc80 <parse_file_seq@@Base+0x17fc>  // b.any
  41cc64:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41cc68:	add	x20, x20, #0x263
  41cc6c:	mov	w2, #0x5                   	// #5
  41cc70:	mov	x0, x20
  41cc74:	mov	x1, x22
  41cc78:	bl	406a70 <strncmp@plt>
  41cc7c:	cbz	w0, 41cd44 <parse_file_seq@@Base+0x18c0>
  41cc80:	cmp	x21, #0x6
  41cc84:	b.ne	41cca4 <parse_file_seq@@Base+0x1820>  // b.any
  41cc88:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41cc8c:	add	x20, x20, #0x269
  41cc90:	mov	w2, #0x6                   	// #6
  41cc94:	mov	x0, x20
  41cc98:	mov	x1, x22
  41cc9c:	bl	406a70 <strncmp@plt>
  41cca0:	cbz	w0, 41cd4c <parse_file_seq@@Base+0x18c8>
  41cca4:	cmp	x21, #0x4
  41cca8:	b.ne	41ccc8 <parse_file_seq@@Base+0x1844>  // b.any
  41ccac:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ccb0:	add	x20, x20, #0x270
  41ccb4:	mov	w2, #0x4                   	// #4
  41ccb8:	mov	x0, x20
  41ccbc:	mov	x1, x22
  41ccc0:	bl	406a70 <strncmp@plt>
  41ccc4:	cbz	w0, 41cd54 <parse_file_seq@@Base+0x18d0>
  41ccc8:	cmp	x21, #0x5
  41cccc:	b.ne	41ccec <parse_file_seq@@Base+0x1868>  // b.any
  41ccd0:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ccd4:	add	x20, x20, #0x275
  41ccd8:	mov	w2, #0x5                   	// #5
  41ccdc:	mov	x0, x20
  41cce0:	mov	x1, x22
  41cce4:	bl	406a70 <strncmp@plt>
  41cce8:	cbz	w0, 41cd5c <parse_file_seq@@Base+0x18d8>
  41ccec:	cmp	x21, #0x4
  41ccf0:	b.ne	41cd14 <parse_file_seq@@Base+0x1890>  // b.any
  41ccf4:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ccf8:	add	x20, x20, #0x27b
  41ccfc:	mov	w2, #0x4                   	// #4
  41cd00:	mov	x0, x20
  41cd04:	mov	x1, x22
  41cd08:	mov	w25, #0x4                   	// #4
  41cd0c:	bl	406a70 <strncmp@plt>
  41cd10:	cbz	w0, 41cd60 <parse_file_seq@@Base+0x18dc>
  41cd14:	cmp	x21, #0x5
  41cd18:	b.ne	41cd3c <parse_file_seq@@Base+0x18b8>  // b.any
  41cd1c:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41cd20:	add	x20, x20, #0x280
  41cd24:	mov	w2, #0x5                   	// #5
  41cd28:	mov	x0, x20
  41cd2c:	mov	x1, x22
  41cd30:	mov	w25, #0x5                   	// #5
  41cd34:	bl	406a70 <strncmp@plt>
  41cd38:	cbz	w0, 41cd60 <parse_file_seq@@Base+0x18dc>
  41cd3c:	mov	w0, #0xfffffffe            	// #-2
  41cd40:	b	41d2ec <parse_file_seq@@Base+0x1e68>
  41cd44:	mov	w25, wzr
  41cd48:	b	41cd60 <parse_file_seq@@Base+0x18dc>
  41cd4c:	mov	w25, #0x1                   	// #1
  41cd50:	b	41cd60 <parse_file_seq@@Base+0x18dc>
  41cd54:	mov	w25, #0x2                   	// #2
  41cd58:	b	41cd60 <parse_file_seq@@Base+0x18dc>
  41cd5c:	mov	w25, #0x3                   	// #3
  41cd60:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  41cd64:	add	x22, x22, x21
  41cd68:	add	x27, x27, #0xcf0
  41cd6c:	ldrb	w8, [x22], #1
  41cd70:	ldrh	w9, [x27, x8, lsl #1]
  41cd74:	tst	w9, #0x6
  41cd78:	b.ne	41cd6c <parse_file_seq@@Base+0x18e8>  // b.any
  41cd7c:	sub	x21, x22, #0x1
  41cd80:	cmp	w25, #0x4
  41cd84:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  41cd88:	b.eq	41cddc <parse_file_seq@@Base+0x1958>  // b.none
  41cd8c:	cmp	w25, #0x5
  41cd90:	b.ne	41ce14 <parse_file_seq@@Base+0x1990>  // b.any
  41cd94:	cbz	w8, 41cdcc <parse_file_seq@@Base+0x1948>
  41cd98:	mov	x0, x20
  41cd9c:	bl	4067d0 <strlen@plt>
  41cda0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41cda4:	mov	x21, x0
  41cda8:	add	x1, x1, #0x286
  41cdac:	mov	w2, #0x5                   	// #5
  41cdb0:	mov	x0, xzr
  41cdb4:	bl	406e50 <dcgettext@plt>
  41cdb8:	mov	x2, x0
  41cdbc:	mov	x0, x19
  41cdc0:	mov	x1, x21
  41cdc4:	mov	x3, x20
  41cdc8:	bl	418f84 <error@@Base>
  41cdcc:	ldr	x8, [x24, #2408]
  41cdd0:	ldr	w9, [x8]
  41cdd4:	cbnz	w9, 41d0d4 <parse_file_seq@@Base+0x1c50>
  41cdd8:	b	41d30c <parse_file_seq@@Base+0x1e88>
  41cddc:	ldr	x8, [x24, #2408]
  41cde0:	ldr	w23, [x8]
  41cde4:	cbz	w23, 41d30c <parse_file_seq@@Base+0x1e88>
  41cde8:	ldr	x9, [x8, #16]
  41cdec:	sub	w25, w23, #0x1
  41cdf0:	ldrb	w9, [x9, x25]
  41cdf4:	cbnz	w9, 41d340 <parse_file_seq@@Base+0x1ebc>
  41cdf8:	ldr	x9, [x8, #8]
  41cdfc:	ldrb	w10, [x9, x25]
  41ce00:	cbz	w10, 41d030 <parse_file_seq@@Base+0x1bac>
  41ce04:	cmp	w10, #0x1
  41ce08:	b.ne	41d038 <parse_file_seq@@Base+0x1bb4>  // b.any
  41ce0c:	mov	w10, wzr
  41ce10:	b	41d034 <parse_file_seq@@Base+0x1bb0>
  41ce14:	ldr	x8, [x24, #2408]
  41ce18:	ldr	w9, [x8, #4]
  41ce1c:	cbnz	w9, 41ce4c <parse_file_seq@@Base+0x19c8>
  41ce20:	mov	w9, #0x5                   	// #5
  41ce24:	mov	w0, #0x5                   	// #5
  41ce28:	str	w9, [x8, #4]
  41ce2c:	bl	418070 <xmalloc@@Base>
  41ce30:	ldr	x9, [x24, #2408]
  41ce34:	ldr	w8, [x9, #4]
  41ce38:	str	x0, [x9, #8]
  41ce3c:	mov	x0, x8
  41ce40:	bl	418070 <xmalloc@@Base>
  41ce44:	ldr	x8, [x24, #2408]
  41ce48:	str	x0, [x8, #16]
  41ce4c:	ldr	x8, [x24, #2408]
  41ce50:	ldp	w26, w9, [x8]
  41ce54:	add	w10, w26, #0x1
  41ce58:	cmp	w10, w9
  41ce5c:	str	w10, [x8]
  41ce60:	b.ls	41ce94 <parse_file_seq@@Base+0x1a10>  // b.plast
  41ce64:	ldr	x0, [x8, #8]
  41ce68:	add	w1, w9, #0x5
  41ce6c:	str	w1, [x8, #4]
  41ce70:	bl	41803c <xrealloc@@Base>
  41ce74:	ldr	x9, [x24, #2408]
  41ce78:	ldr	x8, [x9, #16]
  41ce7c:	ldr	w1, [x9, #4]
  41ce80:	str	x0, [x9, #8]
  41ce84:	mov	x0, x8
  41ce88:	bl	41803c <xrealloc@@Base>
  41ce8c:	ldr	x8, [x24, #2408]
  41ce90:	str	x0, [x8, #16]
  41ce94:	ldr	x8, [x24, #2408]
  41ce98:	ldr	x9, [x8, #16]
  41ce9c:	strb	wzr, [x9, x26]
  41cea0:	cbz	w26, 41cec0 <parse_file_seq@@Base+0x1a3c>
  41cea4:	ldr	x8, [x8, #8]
  41cea8:	mov	w9, wzr
  41ceac:	ldrb	w10, [x8, w9, uxtw]
  41ceb0:	cbnz	w10, 41d128 <parse_file_seq@@Base+0x1ca4>
  41ceb4:	add	w9, w9, #0x1
  41ceb8:	cmp	w26, w9
  41cebc:	b.ne	41ceac <parse_file_seq@@Base+0x1a28>  // b.any
  41cec0:	cmp	w25, #0x1
  41cec4:	b.hi	41cf1c <parse_file_seq@@Base+0x1a98>  // b.pmore
  41cec8:	mov	x0, x21
  41cecc:	mov	x1, xzr
  41ced0:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41ced4:	mov	x19, x0
  41ced8:	bl	418118 <end_of_token@@Base>
  41cedc:	mov	x8, x0
  41cee0:	ldrb	w9, [x8], #1
  41cee4:	ldrh	w10, [x27, x9, lsl #1]
  41cee8:	tst	w10, #0x6
  41ceec:	b.ne	41cee0 <parse_file_seq@@Base+0x1a5c>  // b.any
  41cef0:	cbnz	w9, 41d250 <parse_file_seq@@Base+0x1dcc>
  41cef4:	sub	x1, x0, x19
  41cef8:	strb	wzr, [x0]
  41cefc:	mov	x0, x19
  41cf00:	bl	421ac8 <lookup_variable@@Base>
  41cf04:	cbz	x0, 41d258 <parse_file_seq@@Base+0x1dd4>
  41cf08:	ldr	x8, [x0, #8]
  41cf0c:	ldrb	w8, [x8]
  41cf10:	cmp	w8, #0x0
  41cf14:	cset	w8, ne  // ne = any
  41cf18:	b	41d25c <parse_file_seq@@Base+0x1dd8>
  41cf1c:	ldrb	w8, [x21]
  41cf20:	mov	w9, #0x2c                  	// #44
  41cf24:	cmp	w8, #0x28
  41cf28:	csel	w28, w9, w8, eq  // eq = none
  41cf2c:	cmp	w28, #0x2c
  41cf30:	b.eq	41cf44 <parse_file_seq@@Base+0x1ac0>  // b.none
  41cf34:	cmp	w28, #0x27
  41cf38:	b.eq	41cf44 <parse_file_seq@@Base+0x1ac0>  // b.none
  41cf3c:	cmp	w28, #0x22
  41cf40:	b.ne	41d250 <parse_file_seq@@Base+0x1dcc>  // b.any
  41cf44:	cmp	w28, #0x2c
  41cf48:	b.ne	41cf58 <parse_file_seq@@Base+0x1ad4>  // b.any
  41cf4c:	mov	w8, wzr
  41cf50:	mov	x21, x22
  41cf54:	b	41cff8 <parse_file_seq@@Base+0x1b74>
  41cf58:	ldrb	w8, [x21, #1]!
  41cf5c:	cbz	w8, 41cf68 <parse_file_seq@@Base+0x1ae4>
  41cf60:	cmp	w8, w28
  41cf64:	b.ne	41cf58 <parse_file_seq@@Base+0x1ad4>  // b.any
  41cf68:	ldrb	w8, [x21]
  41cf6c:	cbz	w8, 41d250 <parse_file_seq@@Base+0x1dcc>
  41cf70:	cmp	w28, #0x2c
  41cf74:	mov	x8, x21
  41cf78:	b.ne	41cf90 <parse_file_seq@@Base+0x1b0c>  // b.any
  41cf7c:	add	x8, x21, #0x1
  41cf80:	ldurb	w9, [x8, #-2]
  41cf84:	sub	x8, x8, #0x1
  41cf88:	ldrh	w9, [x27, x9, lsl #1]
  41cf8c:	tbnz	w9, #1, 41cf80 <parse_file_seq@@Base+0x1afc>
  41cf90:	mov	x0, x22
  41cf94:	strb	wzr, [x8]
  41cf98:	bl	40a57c <variable_expand@@Base>
  41cf9c:	mov	x23, x0
  41cfa0:	bl	4067d0 <strlen@plt>
  41cfa4:	add	x9, x0, #0x10
  41cfa8:	mov	x8, sp
  41cfac:	and	x9, x9, #0xfffffffffffffff0
  41cfb0:	sub	x22, x8, x9
  41cfb4:	add	x2, x0, #0x1
  41cfb8:	mov	sp, x22
  41cfbc:	mov	x0, x22
  41cfc0:	mov	x1, x23
  41cfc4:	bl	406790 <memcpy@plt>
  41cfc8:	cmp	w28, #0x2c
  41cfcc:	b.eq	41d134 <parse_file_seq@@Base+0x1cb0>  // b.none
  41cfd0:	ldrb	w8, [x21, #1]!
  41cfd4:	ldrh	w8, [x27, x8, lsl #1]
  41cfd8:	tst	w8, #0x6
  41cfdc:	b.ne	41cfd0 <parse_file_seq@@Base+0x1b4c>  // b.any
  41cfe0:	cmp	w28, #0x2c
  41cfe4:	b.ne	41d140 <parse_file_seq@@Base+0x1cbc>  // b.any
  41cfe8:	mov	w8, #0x29                  	// #41
  41cfec:	b	41d144 <parse_file_seq@@Base+0x1cc0>
  41cff0:	sub	w8, w8, #0x1
  41cff4:	add	x21, x21, #0x1
  41cff8:	ldrb	w9, [x21]
  41cffc:	cmp	w9, #0x28
  41d000:	b.eq	41d024 <parse_file_seq@@Base+0x1ba0>  // b.none
  41d004:	cmp	w9, #0x29
  41d008:	b.eq	41cff0 <parse_file_seq@@Base+0x1b6c>  // b.none
  41d00c:	cbz	w9, 41cf68 <parse_file_seq@@Base+0x1ae4>
  41d010:	cmp	w8, #0x0
  41d014:	b.gt	41d028 <parse_file_seq@@Base+0x1ba4>
  41d018:	cmp	w9, #0x2c
  41d01c:	b.ne	41d028 <parse_file_seq@@Base+0x1ba4>  // b.any
  41d020:	b	41cf68 <parse_file_seq@@Base+0x1ae4>
  41d024:	add	w8, w8, #0x1
  41d028:	add	x21, x21, #0x1
  41d02c:	b	41cff8 <parse_file_seq@@Base+0x1b74>
  41d030:	mov	w10, #0x2                   	// #2
  41d034:	strb	w10, [x9, x25]
  41d038:	ldrb	w9, [x21]
  41d03c:	cbz	w9, 41d0e0 <parse_file_seq@@Base+0x1c5c>
  41d040:	mov	x8, x21
  41d044:	ldrb	w9, [x8, #1]!
  41d048:	ldrh	w9, [x27, x9, lsl #1]
  41d04c:	tst	w9, #0x7
  41d050:	b.eq	41d044 <parse_file_seq@@Base+0x1bc0>  // b.none
  41d054:	sub	x22, x8, x21
  41d058:	cmp	x22, #0x5
  41d05c:	b.eq	41d088 <parse_file_seq@@Base+0x1c04>  // b.none
  41d060:	cmp	x22, #0x4
  41d064:	b.ne	41d0a0 <parse_file_seq@@Base+0x1c1c>  // b.any
  41d068:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41d06c:	add	x0, x0, #0x27b
  41d070:	mov	w2, #0x4                   	// #4
  41d074:	mov	x1, x21
  41d078:	bl	406a70 <strncmp@plt>
  41d07c:	cbz	w0, 41d0f0 <parse_file_seq@@Base+0x1c6c>
  41d080:	cmp	x22, #0x5
  41d084:	b.ne	41d0a0 <parse_file_seq@@Base+0x1c1c>  // b.any
  41d088:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41d08c:	add	x0, x0, #0x280
  41d090:	mov	w2, #0x5                   	// #5
  41d094:	mov	x1, x21
  41d098:	bl	406a70 <strncmp@plt>
  41d09c:	cbz	w0, 41d0f0 <parse_file_seq@@Base+0x1c6c>
  41d0a0:	mov	x0, x21
  41d0a4:	mov	x1, x22
  41d0a8:	mov	x2, x19
  41d0ac:	bl	41cc34 <parse_file_seq@@Base+0x17b0>
  41d0b0:	tbnz	w0, #31, 41d0f0 <parse_file_seq@@Base+0x1c6c>
  41d0b4:	ldr	x8, [x24, #2408]
  41d0b8:	ldr	x9, [x8, #8]
  41d0bc:	ldrb	w10, [x9, x25]
  41d0c0:	cmp	w10, #0x1
  41d0c4:	b.hi	41d0d0 <parse_file_seq@@Base+0x1c4c>  // b.pmore
  41d0c8:	ldrb	w10, [x9, x23]
  41d0cc:	strb	w10, [x9, x25]
  41d0d0:	ldr	w9, [x8]
  41d0d4:	sub	w9, w9, #0x1
  41d0d8:	str	w9, [x8]
  41d0dc:	b	41d2ac <parse_file_seq@@Base+0x1e28>
  41d0e0:	ldr	x8, [x8, #16]
  41d0e4:	mov	w9, #0x1                   	// #1
  41d0e8:	strb	w9, [x8, x25]
  41d0ec:	b	41d2ac <parse_file_seq@@Base+0x1e28>
  41d0f0:	mov	x0, x20
  41d0f4:	bl	4067d0 <strlen@plt>
  41d0f8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41d0fc:	mov	x21, x0
  41d100:	add	x1, x1, #0x286
  41d104:	mov	w2, #0x5                   	// #5
  41d108:	mov	x0, xzr
  41d10c:	bl	406e50 <dcgettext@plt>
  41d110:	mov	x2, x0
  41d114:	mov	x0, x19
  41d118:	mov	x1, x21
  41d11c:	mov	x3, x20
  41d120:	bl	418f84 <error@@Base>
  41d124:	b	41d2ac <parse_file_seq@@Base+0x1e28>
  41d128:	mov	w0, #0x1                   	// #1
  41d12c:	strb	w0, [x8, x26]
  41d130:	b	41d2ec <parse_file_seq@@Base+0x1e68>
  41d134:	add	x21, x21, #0x1
  41d138:	cmp	w28, #0x2c
  41d13c:	b.eq	41cfe8 <parse_file_seq@@Base+0x1b64>  // b.none
  41d140:	ldrb	w8, [x21]
  41d144:	cmp	w8, #0x22
  41d148:	b.eq	41d1a8 <parse_file_seq@@Base+0x1d24>  // b.none
  41d14c:	cmp	w8, #0x27
  41d150:	b.eq	41d1a8 <parse_file_seq@@Base+0x1d24>  // b.none
  41d154:	cmp	w8, #0x29
  41d158:	b.ne	41d250 <parse_file_seq@@Base+0x1dcc>  // b.any
  41d15c:	mov	x0, x21
  41d160:	bl	418138 <next_token@@Base>
  41d164:	mov	x23, x0
  41d168:	mov	w8, wzr
  41d16c:	mov	x21, x0
  41d170:	b	41d17c <parse_file_seq@@Base+0x1cf8>
  41d174:	add	w8, w8, #0x1
  41d178:	add	x21, x21, #0x1
  41d17c:	ldrb	w9, [x21]
  41d180:	cmp	w9, #0x28
  41d184:	b.eq	41d174 <parse_file_seq@@Base+0x1cf0>  // b.none
  41d188:	cmp	w9, #0x29
  41d18c:	b.eq	41d198 <parse_file_seq@@Base+0x1d14>  // b.none
  41d190:	cbnz	w9, 41d1a0 <parse_file_seq@@Base+0x1d1c>
  41d194:	b	41d1bc <parse_file_seq@@Base+0x1d38>
  41d198:	subs	w8, w8, #0x1
  41d19c:	b.lt	41d1bc <parse_file_seq@@Base+0x1d38>  // b.tstop
  41d1a0:	add	x21, x21, #0x1
  41d1a4:	b	41d17c <parse_file_seq@@Base+0x1cf8>
  41d1a8:	add	x23, x21, #0x1
  41d1ac:	ldrb	w9, [x21, #1]!
  41d1b0:	cbz	w9, 41d1bc <parse_file_seq@@Base+0x1d38>
  41d1b4:	cmp	w8, w9
  41d1b8:	b.ne	41d1ac <parse_file_seq@@Base+0x1d28>  // b.any
  41d1bc:	ldrb	w8, [x21]
  41d1c0:	cbz	w8, 41d250 <parse_file_seq@@Base+0x1dcc>
  41d1c4:	strb	wzr, [x21], #1
  41d1c8:	ldrb	w8, [x21], #1
  41d1cc:	ldrh	w9, [x27, x8, lsl #1]
  41d1d0:	tst	w9, #0x6
  41d1d4:	b.ne	41d1c8 <parse_file_seq@@Base+0x1d44>  // b.any
  41d1d8:	cbz	w8, 41d210 <parse_file_seq@@Base+0x1d8c>
  41d1dc:	mov	x0, x20
  41d1e0:	bl	4067d0 <strlen@plt>
  41d1e4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41d1e8:	mov	x21, x0
  41d1ec:	add	x1, x1, #0x286
  41d1f0:	mov	w2, #0x5                   	// #5
  41d1f4:	mov	x0, xzr
  41d1f8:	bl	406e50 <dcgettext@plt>
  41d1fc:	mov	x2, x0
  41d200:	mov	x0, x19
  41d204:	mov	x1, x21
  41d208:	mov	x3, x20
  41d20c:	bl	418f84 <error@@Base>
  41d210:	mov	x0, x23
  41d214:	bl	40a57c <variable_expand@@Base>
  41d218:	cmp	x22, x0
  41d21c:	b.eq	41d284 <parse_file_seq@@Base+0x1e00>  // b.none
  41d220:	ldrb	w8, [x22]
  41d224:	ldrb	w9, [x0]
  41d228:	cmp	w8, w9
  41d22c:	b.ne	41d28c <parse_file_seq@@Base+0x1e08>  // b.any
  41d230:	cbz	w8, 41d284 <parse_file_seq@@Base+0x1e00>
  41d234:	add	x8, x22, #0x1
  41d238:	add	x1, x0, #0x1
  41d23c:	mov	x0, x8
  41d240:	bl	406cb0 <strcmp@plt>
  41d244:	cmp	w0, #0x0
  41d248:	cset	w8, eq  // eq = none
  41d24c:	b	41d290 <parse_file_seq@@Base+0x1e0c>
  41d250:	mov	w0, #0xffffffff            	// #-1
  41d254:	b	41d2ec <parse_file_seq@@Base+0x1e68>
  41d258:	mov	w8, wzr
  41d25c:	ldr	x9, [x24, #2408]
  41d260:	cmp	w25, #0x1
  41d264:	cset	w10, eq  // eq = none
  41d268:	cmp	w8, w10
  41d26c:	ldr	x9, [x9, #8]
  41d270:	cset	w8, eq  // eq = none
  41d274:	mov	x0, x19
  41d278:	strb	w8, [x9, x26]
  41d27c:	bl	406cf0 <free@plt>
  41d280:	b	41d2ac <parse_file_seq@@Base+0x1e28>
  41d284:	mov	w8, #0x1                   	// #1
  41d288:	b	41d290 <parse_file_seq@@Base+0x1e0c>
  41d28c:	mov	w8, wzr
  41d290:	ldr	x9, [x24, #2408]
  41d294:	cmp	w25, #0x3
  41d298:	cset	w10, eq  // eq = none
  41d29c:	cmp	w8, w10
  41d2a0:	ldr	x9, [x9, #8]
  41d2a4:	cset	w8, eq  // eq = none
  41d2a8:	strb	w8, [x9, x26]
  41d2ac:	ldr	x9, [x24, #2408]
  41d2b0:	ldr	w8, [x9]
  41d2b4:	cbz	w8, 41d2e0 <parse_file_seq@@Base+0x1e5c>
  41d2b8:	ldr	x8, [x24, #2408]
  41d2bc:	mov	w10, wzr
  41d2c0:	ldr	x9, [x9, #8]
  41d2c4:	ldrb	w9, [x9, w10, uxtw]
  41d2c8:	cbnz	w9, 41d2e8 <parse_file_seq@@Base+0x1e64>
  41d2cc:	ldr	w9, [x8]
  41d2d0:	add	w10, w10, #0x1
  41d2d4:	cmp	w10, w9
  41d2d8:	mov	x9, x8
  41d2dc:	b.cc	41d2c0 <parse_file_seq@@Base+0x1e3c>  // b.lo, b.ul, b.last
  41d2e0:	mov	w0, wzr
  41d2e4:	b	41d2ec <parse_file_seq@@Base+0x1e68>
  41d2e8:	mov	w0, #0x1                   	// #1
  41d2ec:	mov	sp, x29
  41d2f0:	ldp	x20, x19, [sp, #80]
  41d2f4:	ldp	x22, x21, [sp, #64]
  41d2f8:	ldp	x24, x23, [sp, #48]
  41d2fc:	ldp	x26, x25, [sp, #32]
  41d300:	ldp	x28, x27, [sp, #16]
  41d304:	ldp	x29, x30, [sp], #96
  41d308:	ret
  41d30c:	mov	x0, x20
  41d310:	bl	4067d0 <strlen@plt>
  41d314:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41d318:	mov	x21, x0
  41d31c:	add	x1, x1, #0x2ab
  41d320:	mov	w2, #0x5                   	// #5
  41d324:	mov	x0, xzr
  41d328:	bl	406e50 <dcgettext@plt>
  41d32c:	mov	x2, x0
  41d330:	mov	x0, x19
  41d334:	mov	x1, x21
  41d338:	mov	x3, x20
  41d33c:	bl	4190fc <fatal@@Base>
  41d340:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41d344:	add	x1, x1, #0x2bb
  41d348:	mov	w2, #0x5                   	// #5
  41d34c:	mov	x0, xzr
  41d350:	bl	406e50 <dcgettext@plt>
  41d354:	mov	x2, x0
  41d358:	mov	x0, x19
  41d35c:	mov	x1, xzr
  41d360:	bl	4190fc <fatal@@Base>
  41d364:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41d368:	add	x8, x8, #0xcf0
  41d36c:	ldrb	w13, [x0], #1
  41d370:	ldrh	w9, [x8, x13, lsl #1]
  41d374:	tbnz	w9, #1, 41d36c <parse_file_seq@@Base+0x1ee8>
  41d378:	cmp	w13, #0x3f
  41d37c:	b.hi	41d40c <parse_file_seq@@Base+0x1f88>  // b.pmore
  41d380:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x40e0>
  41d384:	add	x8, x8, #0xc38
  41d388:	adr	x9, 41d398 <parse_file_seq@@Base+0x1f14>
  41d38c:	ldrb	w10, [x8, x13]
  41d390:	add	x9, x9, x10, lsl #2
  41d394:	br	x9
  41d398:	ldrb	w8, [x0]
  41d39c:	cmp	w8, #0x3d
  41d3a0:	b.ne	41d40c <parse_file_seq@@Base+0x1f88>  // b.any
  41d3a4:	add	x9, x0, #0x1
  41d3a8:	mov	w8, #0x7                   	// #7
  41d3ac:	sub	x10, x0, #0x1
  41d3b0:	cbnz	x1, 41d578 <parse_file_seq@@Base+0x20f4>
  41d3b4:	b	41d57c <parse_file_seq@@Base+0x20f8>
  41d3b8:	ldrb	w8, [x0]
  41d3bc:	cmp	w8, #0x3a
  41d3c0:	b.eq	41d598 <parse_file_seq@@Base+0x2114>  // b.none
  41d3c4:	cmp	w8, #0x3d
  41d3c8:	b.eq	41d3a4 <parse_file_seq@@Base+0x1f20>  // b.none
  41d3cc:	mov	w8, #0x4                   	// #4
  41d3d0:	b	41d56c <parse_file_seq@@Base+0x20e8>
  41d3d4:	mov	w8, #0x1                   	// #1
  41d3d8:	b	41d56c <parse_file_seq@@Base+0x20e8>
  41d3dc:	ldrb	w8, [x0]
  41d3e0:	cmp	w8, #0x3a
  41d3e4:	b.ne	41d40c <parse_file_seq@@Base+0x1f88>  // b.any
  41d3e8:	mov	x9, x0
  41d3ec:	ldrb	w8, [x9, #1]!
  41d3f0:	mov	w10, #0x8                   	// #8
  41d3f4:	cmp	w8, #0x3a
  41d3f8:	cinc	w8, w10, eq  // eq = none
  41d3fc:	cinc	x9, x9, eq  // eq = none
  41d400:	sub	x10, x0, #0x1
  41d404:	cbnz	x1, 41d578 <parse_file_seq@@Base+0x20f4>
  41d408:	b	41d57c <parse_file_seq@@Base+0x20f8>
  41d40c:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x40e0>
  41d410:	mov	x11, #0xb                   	// #11
  41d414:	mov	w8, #0x2                   	// #2
  41d418:	add	x9, x9, #0xc78
  41d41c:	mov	w10, #0x1                   	// #1
  41d420:	movk	x11, #0x4, lsl #32
  41d424:	mov	x12, x0
  41d428:	b	41d440 <parse_file_seq@@Base+0x1fbc>
  41d42c:	mov	w8, #0x3                   	// #3
  41d430:	mov	x12, x14
  41d434:	ldrb	w13, [x12], #1
  41d438:	mov	w15, wzr
  41d43c:	cbnz	w15, 41d544 <parse_file_seq@@Base+0x20c0>
  41d440:	and	w14, w13, #0xff
  41d444:	cmp	w14, #0x5c
  41d448:	b.hi	41d434 <parse_file_seq@@Base+0x1fb0>  // b.pmore
  41d44c:	and	x14, x13, #0xff
  41d450:	adr	x16, 41d434 <parse_file_seq@@Base+0x1fb0>
  41d454:	ldrb	w15, [x9, x14]
  41d458:	add	x16, x16, x15, lsl #2
  41d45c:	mov	w15, #0x9                   	// #9
  41d460:	br	x16
  41d464:	ldrb	w14, [x12]
  41d468:	cmp	w14, #0x3d
  41d46c:	b.ne	41d434 <parse_file_seq@@Base+0x1fb0>  // b.any
  41d470:	b	41d4a0 <parse_file_seq@@Base+0x201c>
  41d474:	mov	x14, x12
  41d478:	ldrb	w13, [x14], #1
  41d47c:	cmp	w13, #0x27
  41d480:	b.gt	41d4cc <parse_file_seq@@Base+0x2048>
  41d484:	cbz	w13, 41d4ec <parse_file_seq@@Base+0x2068>
  41d488:	cmp	w13, #0x24
  41d48c:	b.eq	41d430 <parse_file_seq@@Base+0x1fac>  // b.none
  41d490:	b	41d42c <parse_file_seq@@Base+0x1fa8>
  41d494:	ldrb	w14, [x12]
  41d498:	cmp	w14, #0x3a
  41d49c:	b.ne	41d434 <parse_file_seq@@Base+0x1fb0>  // b.any
  41d4a0:	mov	w15, #0x9                   	// #9
  41d4a4:	b	41d43c <parse_file_seq@@Base+0x1fb8>
  41d4a8:	ldrb	w13, [x12]
  41d4ac:	sub	w13, w13, #0x3a
  41d4b0:	cmp	w13, #0x22
  41d4b4:	b.hi	41d434 <parse_file_seq@@Base+0x1fb0>  // b.pmore
  41d4b8:	lsl	x13, x10, x13
  41d4bc:	tst	x13, x11
  41d4c0:	b.eq	41d434 <parse_file_seq@@Base+0x1fb0>  // b.none
  41d4c4:	add	x12, x12, #0x1
  41d4c8:	b	41d434 <parse_file_seq@@Base+0x1fb0>
  41d4cc:	cmp	w13, #0x28
  41d4d0:	b.eq	41d4f8 <parse_file_seq@@Base+0x2074>  // b.none
  41d4d4:	cmp	w13, #0x7b
  41d4d8:	b.ne	41d42c <parse_file_seq@@Base+0x1fa8>  // b.any
  41d4dc:	mov	w8, #0x7d                  	// #125
  41d4e0:	ldrb	w15, [x14]
  41d4e4:	cbnz	w15, 41d504 <parse_file_seq@@Base+0x2080>
  41d4e8:	b	41d42c <parse_file_seq@@Base+0x1fa8>
  41d4ec:	mov	w15, #0x9                   	// #9
  41d4f0:	mov	x12, x14
  41d4f4:	b	41d43c <parse_file_seq@@Base+0x1fb8>
  41d4f8:	mov	w8, #0x29                  	// #41
  41d4fc:	ldrb	w15, [x14]
  41d500:	cbz	w15, 41d42c <parse_file_seq@@Base+0x1fa8>
  41d504:	mov	w14, wzr
  41d508:	add	x12, x12, #0x2
  41d50c:	b	41d51c <parse_file_seq@@Base+0x2098>
  41d510:	add	w14, w14, #0x1
  41d514:	ldrb	w15, [x12], #1
  41d518:	cbz	w15, 41d538 <parse_file_seq@@Base+0x20b4>
  41d51c:	cmp	w13, w15, uxtb
  41d520:	b.eq	41d510 <parse_file_seq@@Base+0x208c>  // b.none
  41d524:	cmp	w8, w15, uxtb
  41d528:	b.ne	41d514 <parse_file_seq@@Base+0x2090>  // b.any
  41d52c:	subs	w14, w14, #0x1
  41d530:	b.ge	41d514 <parse_file_seq@@Base+0x2090>  // b.tcont
  41d534:	b	41d53c <parse_file_seq@@Base+0x20b8>
  41d538:	sub	x12, x12, #0x1
  41d53c:	mov	w8, #0x3                   	// #3
  41d540:	b	41d434 <parse_file_seq@@Base+0x1fb0>
  41d544:	cmp	w15, #0x9
  41d548:	b.ne	41d55c <parse_file_seq@@Base+0x20d8>  // b.any
  41d54c:	sub	x9, x12, #0x1
  41d550:	sub	x10, x0, #0x1
  41d554:	cbnz	x1, 41d578 <parse_file_seq@@Base+0x20f4>
  41d558:	b	41d57c <parse_file_seq@@Base+0x20f8>
  41d55c:	b	41d590 <parse_file_seq@@Base+0x210c>
  41d560:	mov	w8, #0x6                   	// #6
  41d564:	b	41d56c <parse_file_seq@@Base+0x20e8>
  41d568:	mov	w8, #0x7                   	// #7
  41d56c:	mov	x9, x0
  41d570:	sub	x10, x0, #0x1
  41d574:	cbz	x1, 41d57c <parse_file_seq@@Base+0x20f8>
  41d578:	str	x10, [x1]
  41d57c:	cbz	x2, 41d590 <parse_file_seq@@Base+0x210c>
  41d580:	sub	x9, x9, x10
  41d584:	mov	w0, w8
  41d588:	str	x9, [x2]
  41d58c:	ret
  41d590:	mov	w0, w8
  41d594:	ret
  41d598:	mov	x9, x0
  41d59c:	ldrb	w8, [x9, #2]!
  41d5a0:	mov	w10, #0x5                   	// #5
  41d5a4:	mov	w11, #0x7                   	// #7
  41d5a8:	sub	x12, x9, #0x1
  41d5ac:	cmp	w8, #0x3d
  41d5b0:	csel	w8, w11, w10, eq  // eq = none
  41d5b4:	csel	x9, x9, x12, eq  // eq = none
  41d5b8:	sub	x10, x0, #0x1
  41d5bc:	cbnz	x1, 41d578 <parse_file_seq@@Base+0x20f4>
  41d5c0:	b	41d57c <parse_file_seq@@Base+0x20f8>
  41d5c4:	sub	sp, sp, #0x80
  41d5c8:	stp	x29, x30, [sp, #32]
  41d5cc:	add	x29, sp, #0x20
  41d5d0:	stp	x28, x27, [sp, #48]
  41d5d4:	stp	x26, x25, [sp, #64]
  41d5d8:	stp	x24, x23, [sp, #80]
  41d5dc:	stp	x22, x21, [sp, #96]
  41d5e0:	stp	x20, x19, [sp, #112]
  41d5e4:	stur	w2, [x29, #-12]
  41d5e8:	cbz	x0, 41d7d0 <parse_file_seq@@Base+0x234c>
  41d5ec:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  41d5f0:	ldr	x8, [x25, #2440]
  41d5f4:	mov	x19, x4
  41d5f8:	mov	x20, x3
  41d5fc:	mov	x22, x1
  41d600:	str	x8, [sp, #8]
  41d604:	ldur	w8, [x29, #-12]
  41d608:	mov	x23, x0
  41d60c:	mov	w26, #0x60000000            	// #1610612736
  41d610:	mov	w27, #0x14000000            	// #335544320
  41d614:	ubfiz	w28, w8, #26, #3
  41d618:	mov	x21, x25
  41d61c:	b	41d628 <parse_file_seq@@Base+0x21a4>
  41d620:	mov	x25, x21
  41d624:	cbz	x23, 41d7d0 <parse_file_seq@@Base+0x234c>
  41d628:	mov	x0, x23
  41d62c:	ldp	x23, x8, [x23]
  41d630:	stur	x8, [x29, #-8]
  41d634:	bl	406cf0 <free@plt>
  41d638:	sub	x0, x29, #0x8
  41d63c:	bl	41af80 <find_percent_cached@@Base>
  41d640:	ldur	x24, [x29, #-8]
  41d644:	cbz	x0, 41d6a8 <parse_file_seq@@Base+0x2224>
  41d648:	mov	x1, x0
  41d64c:	mov	x0, x24
  41d650:	bl	421588 <create_pattern_var@@Base>
  41d654:	ldr	q0, [x19]
  41d658:	ldr	x9, [x19, #16]
  41d65c:	add	x8, x0, #0x20
  41d660:	mov	x1, x22
  41d664:	str	q0, [x0, #48]
  41d668:	str	x9, [x0, #64]
  41d66c:	mov	x0, x8
  41d670:	bl	423050 <assign_variable_definition@@Base>
  41d674:	ldr	w8, [x0, #44]
  41d678:	mov	x24, x0
  41d67c:	ldr	x0, [x0, #8]
  41d680:	and	w9, w8, #0xe3ffffff
  41d684:	and	w8, w8, #0x3800000
  41d688:	orr	w9, w9, w28
  41d68c:	cmp	w8, #0x800, lsl #12
  41d690:	str	w9, [x24, #44]
  41d694:	b.ne	41d6c4 <parse_file_seq@@Base+0x2240>  // b.any
  41d698:	mov	x1, xzr
  41d69c:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  41d6a0:	str	x0, [x24, #8]
  41d6a4:	b	41d718 <parse_file_seq@@Base+0x2294>
  41d6a8:	mov	x0, x24
  41d6ac:	bl	40a798 <lookup_file@@Base>
  41d6b0:	cbz	x0, 41d6d0 <parse_file_seq@@Base+0x224c>
  41d6b4:	ldr	x8, [x0, #104]
  41d6b8:	cmp	x8, #0x0
  41d6bc:	csel	x24, x0, x8, eq  // eq = none
  41d6c0:	b	41d6e0 <parse_file_seq@@Base+0x225c>
  41d6c4:	bl	4180bc <xstrdup@@Base>
  41d6c8:	str	x0, [x24, #8]
  41d6cc:	b	41d718 <parse_file_seq@@Base+0x2294>
  41d6d0:	mov	x0, x24
  41d6d4:	bl	420f28 <strcache_add@@Base>
  41d6d8:	bl	40a830 <enter_file@@Base>
  41d6dc:	mov	x24, x0
  41d6e0:	mov	w1, #0x1                   	// #1
  41d6e4:	mov	x0, x24
  41d6e8:	bl	421d3c <initialize_file_variables@@Base>
  41d6ec:	ldr	x8, [x24, #80]
  41d6f0:	ldur	w2, [x29, #-12]
  41d6f4:	mov	w3, #0x1                   	// #1
  41d6f8:	mov	x0, x19
  41d6fc:	mov	x1, x22
  41d700:	str	x8, [x25, #2440]
  41d704:	bl	423100 <try_variable_definition@@Base>
  41d708:	cbz	x0, 41d7f0 <parse_file_seq@@Base+0x236c>
  41d70c:	ldr	x8, [sp, #8]
  41d710:	mov	x24, x0
  41d714:	str	x8, [x25, #2440]
  41d718:	ldr	w8, [x24, #44]
  41d71c:	orr	w9, w8, #0x8
  41d720:	str	w9, [x24, #44]
  41d724:	ldrb	w10, [x20]
  41d728:	and	w8, w8, #0x1c000000
  41d72c:	lsr	w10, w10, #5
  41d730:	bfi	w9, w10, #7, #1
  41d734:	str	w9, [x24, #44]
  41d738:	ldrb	w10, [x20]
  41d73c:	and	w9, w9, #0x9fffffff
  41d740:	tst	w10, #0x8
  41d744:	csel	w10, w26, wzr, eq  // eq = none
  41d748:	orr	w9, w9, w10
  41d74c:	cmp	w8, w27
  41d750:	str	w9, [x24, #44]
  41d754:	b.eq	41d620 <parse_file_seq@@Base+0x219c>  // b.none
  41d758:	ldr	x25, [x24]
  41d75c:	mov	x0, x25
  41d760:	bl	4067d0 <strlen@plt>
  41d764:	mov	x1, x0
  41d768:	mov	x0, x25
  41d76c:	bl	421ac8 <lookup_variable@@Base>
  41d770:	cbz	x0, 41d620 <parse_file_seq@@Base+0x219c>
  41d774:	mov	x25, x0
  41d778:	cmp	x24, x0
  41d77c:	b.eq	41d620 <parse_file_seq@@Base+0x219c>  // b.none
  41d780:	ldr	w8, [x25, #44]
  41d784:	ubfx	w8, w8, #26, #3
  41d788:	sub	w8, w8, #0x3
  41d78c:	cmp	w8, #0x1
  41d790:	b.hi	41d620 <parse_file_seq@@Base+0x219c>  // b.pmore
  41d794:	ldr	x0, [x24, #8]
  41d798:	bl	406cf0 <free@plt>
  41d79c:	ldr	x0, [x25, #8]
  41d7a0:	bl	4180bc <xstrdup@@Base>
  41d7a4:	str	x0, [x24, #8]
  41d7a8:	ldr	w8, [x25, #44]
  41d7ac:	ldr	w9, [x24, #44]
  41d7b0:	lsr	w8, w8, #26
  41d7b4:	bfi	w9, w8, #26, #3
  41d7b8:	str	w9, [x24, #44]
  41d7bc:	ldr	w8, [x25, #44]
  41d7c0:	and	w9, w9, #0xfffffffc
  41d7c4:	bfxil	w9, w8, #0, #1
  41d7c8:	str	w9, [x24, #44]
  41d7cc:	b	41d620 <parse_file_seq@@Base+0x219c>
  41d7d0:	ldp	x20, x19, [sp, #112]
  41d7d4:	ldp	x22, x21, [sp, #96]
  41d7d8:	ldp	x24, x23, [sp, #80]
  41d7dc:	ldp	x26, x25, [sp, #64]
  41d7e0:	ldp	x28, x27, [sp, #48]
  41d7e4:	ldp	x29, x30, [sp, #32]
  41d7e8:	add	sp, sp, #0x80
  41d7ec:	ret
  41d7f0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41d7f4:	add	x1, x1, #0x2db
  41d7f8:	mov	w2, #0x5                   	// #5
  41d7fc:	bl	406e50 <dcgettext@plt>
  41d800:	mov	x2, x0
  41d804:	mov	x0, x19
  41d808:	mov	x1, xzr
  41d80c:	bl	4190fc <fatal@@Base>
  41d810:	stp	x29, x30, [sp, #-48]!
  41d814:	stp	x22, x21, [sp, #16]
  41d818:	stp	x20, x19, [sp, #32]
  41d81c:	ldp	x8, x9, [x0, #16]
  41d820:	ldr	x20, [x0, #8]
  41d824:	mov	x29, sp
  41d828:	add	x8, x8, x9
  41d82c:	cmp	x20, x8
  41d830:	b.cs	41d8c0 <parse_file_seq@@Base+0x243c>  // b.hs, b.nlast
  41d834:	mov	x19, x0
  41d838:	add	x21, x8, #0x1
  41d83c:	mov	w22, #0x3                   	// #3
  41d840:	str	x20, [x0]
  41d844:	b	41d854 <parse_file_seq@@Base+0x23d0>
  41d848:	cinc	x20, x0, ne  // ne = any
  41d84c:	csel	w8, wzr, w22, ne  // ne = any
  41d850:	cbnz	w8, 41d8a8 <parse_file_seq@@Base+0x2424>
  41d854:	mov	w1, #0xa                   	// #10
  41d858:	mov	x0, x20
  41d85c:	bl	406d10 <strchr@plt>
  41d860:	cbz	x0, 41d898 <parse_file_seq@@Base+0x2414>
  41d864:	mov	w8, wzr
  41d868:	mov	x9, x0
  41d86c:	b	41d888 <parse_file_seq@@Base+0x2404>
  41d870:	ldrb	w10, [x9, #-1]!
  41d874:	cmp	w10, #0x5c
  41d878:	cset	w10, eq  // eq = none
  41d87c:	cmp	w8, #0x0
  41d880:	cset	w8, eq  // eq = none
  41d884:	tbz	w10, #0, 41d848 <parse_file_seq@@Base+0x23c4>
  41d888:	cmp	x9, x20
  41d88c:	b.hi	41d870 <parse_file_seq@@Base+0x23ec>  // b.pmore
  41d890:	mov	w10, wzr
  41d894:	b	41d87c <parse_file_seq@@Base+0x23f8>
  41d898:	mov	x20, xzr
  41d89c:	str	x21, [x19, #8]
  41d8a0:	mov	w8, #0x1                   	// #1
  41d8a4:	cbz	w8, 41d854 <parse_file_seq@@Base+0x23d0>
  41d8a8:	cmp	w8, #0x3
  41d8ac:	b.ne	41d8c8 <parse_file_seq@@Base+0x2444>  // b.any
  41d8b0:	strb	wzr, [x20], #1
  41d8b4:	mov	x0, xzr
  41d8b8:	str	x20, [x19, #8]
  41d8bc:	b	41d8cc <parse_file_seq@@Base+0x2448>
  41d8c0:	mov	x0, #0xffffffffffffffff    	// #-1
  41d8c4:	b	41d8cc <parse_file_seq@@Base+0x2448>
  41d8c8:	mov	x0, xzr
  41d8cc:	ldp	x20, x19, [sp, #32]
  41d8d0:	ldp	x22, x21, [sp, #16]
  41d8d4:	ldp	x29, x30, [sp], #48
  41d8d8:	ret
  41d8dc:	stp	x29, x30, [sp, #-64]!
  41d8e0:	stp	x22, x21, [sp, #32]
  41d8e4:	stp	x20, x19, [sp, #48]
  41d8e8:	mov	x19, x0
  41d8ec:	mov	x20, x0
  41d8f0:	mov	x21, x0
  41d8f4:	str	x23, [sp, #16]
  41d8f8:	mov	x29, sp
  41d8fc:	ldrb	w8, [x21]
  41d900:	cmp	w8, #0x5c
  41d904:	b.ne	41d970 <parse_file_seq@@Base+0x24ec>  // b.any
  41d908:	sub	x23, x21, #0x1
  41d90c:	ldrb	w8, [x23, #1]!
  41d910:	cmp	w8, #0x5c
  41d914:	b.eq	41d90c <parse_file_seq@@Base+0x2488>  // b.none
  41d918:	cmp	w8, #0x3a
  41d91c:	sub	x22, x23, x21
  41d920:	b.ne	41d94c <parse_file_seq@@Base+0x24c8>  // b.any
  41d924:	tbz	w22, #0, 41d94c <parse_file_seq@@Base+0x24c8>
  41d928:	cmp	x22, #0x2
  41d92c:	b.cc	41d968 <parse_file_seq@@Base+0x24e4>  // b.lo, b.ul, b.last
  41d930:	lsr	x22, x22, #1
  41d934:	mov	x0, x20
  41d938:	mov	x1, x21
  41d93c:	mov	x2, x22
  41d940:	bl	4067a0 <memmove@plt>
  41d944:	add	x20, x20, x22
  41d948:	b	41d968 <parse_file_seq@@Base+0x24e4>
  41d94c:	mov	x0, x20
  41d950:	mov	x1, x21
  41d954:	mov	x2, x22
  41d958:	bl	4067a0 <memmove@plt>
  41d95c:	ldrb	w8, [x23]
  41d960:	add	x20, x20, x22
  41d964:	cbz	w8, 41d970 <parse_file_seq@@Base+0x24ec>
  41d968:	mov	w8, #0x1                   	// #1
  41d96c:	mov	x21, x23
  41d970:	cbz	w8, 41d980 <parse_file_seq@@Base+0x24fc>
  41d974:	ldrb	w8, [x21], #1
  41d978:	strb	w8, [x20], #1
  41d97c:	b	41d8fc <parse_file_seq@@Base+0x2478>
  41d980:	strb	wzr, [x20]
  41d984:	mov	x0, x19
  41d988:	ldp	x20, x19, [sp, #48]
  41d98c:	ldp	x22, x21, [sp, #32]
  41d990:	ldr	x23, [sp, #16]
  41d994:	ldp	x29, x30, [sp], #64
  41d998:	ret

000000000041d99c <update_goal_chain@@Base>:
  41d99c:	sub	sp, sp, #0x80
  41d9a0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41d9a4:	ldr	w8, [x8, #236]
  41d9a8:	stp	x29, x30, [sp, #32]
  41d9ac:	stp	x26, x25, [sp, #64]
  41d9b0:	add	x29, sp, #0x20
  41d9b4:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  41d9b8:	stur	w8, [x29, #-12]
  41d9bc:	ldr	w8, [x25, #3260]
  41d9c0:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41d9c4:	stp	x28, x27, [sp, #48]
  41d9c8:	stp	x24, x23, [sp, #80]
  41d9cc:	stur	w8, [x29, #-8]
  41d9d0:	ldr	w8, [x9, #32]
  41d9d4:	stp	x22, x21, [sp, #96]
  41d9d8:	stp	x20, x19, [sp, #112]
  41d9dc:	mov	x20, x0
  41d9e0:	stur	w8, [x29, #-4]
  41d9e4:	bl	4182f8 <copy_dep_chain@@Base>
  41d9e8:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  41d9ec:	adrp	x11, 43f000 <stdio_traced@@Base+0x1a38>
  41d9f0:	ldr	w8, [x24, #3300]
  41d9f4:	ldr	w9, [x11, #1640]
  41d9f8:	adrp	x10, 43f000 <stdio_traced@@Base+0x1a38>
  41d9fc:	mov	w27, #0x1                   	// #1
  41da00:	cmp	w8, #0x0
  41da04:	add	w8, w9, #0x1
  41da08:	csel	x9, xzr, x20, eq  // eq = none
  41da0c:	str	w8, [x11, #1640]
  41da10:	str	x9, [x10, #1632]
  41da14:	cbz	x0, 41dd30 <update_goal_chain@@Base+0x394>
  41da18:	mov	x21, x0
  41da1c:	adrp	x28, 43f000 <stdio_traced@@Base+0x1a38>
  41da20:	mov	w20, #0x1                   	// #1
  41da24:	b	41da30 <update_goal_chain@@Base+0x94>
  41da28:	ldr	x21, [sp]
  41da2c:	cbz	x21, 41dd34 <update_goal_chain@@Base+0x398>
  41da30:	bl	413200 <start_waiting_jobs@@Base>
  41da34:	mov	w0, #0x1                   	// #1
  41da38:	mov	w1, wzr
  41da3c:	bl	411aac <reap_children@@Base>
  41da40:	stp	x21, xzr, [sp]
  41da44:	b	41da5c <update_goal_chain@@Base+0xc0>
  41da48:	ldr	x8, [x21]
  41da4c:	str	x21, [sp, #8]
  41da50:	mov	w9, #0x1                   	// #1
  41da54:	mov	x21, x8
  41da58:	tbz	w9, #0, 41dd18 <update_goal_chain@@Base+0x37c>
  41da5c:	cbz	x21, 41dd14 <update_goal_chain@@Base+0x378>
  41da60:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41da64:	str	x21, [x8, #1648]
  41da68:	ldr	x8, [x21, #16]
  41da6c:	ldr	x9, [x8, #104]
  41da70:	cmp	x9, #0x0
  41da74:	csel	x8, x8, x9, eq  // eq = none
  41da78:	cbz	x8, 41dc34 <update_goal_chain@@Base+0x298>
  41da7c:	mov	w19, wzr
  41da80:	ldrh	w9, [x21, #32]
  41da84:	ldr	w10, [x8, #136]
  41da88:	ubfx	w9, w9, #2, #1
  41da8c:	bfi	w10, w9, #16, #1
  41da90:	str	w10, [x8, #136]
  41da94:	mov	x23, x8
  41da98:	ldr	x8, [x8, #72]
  41da9c:	cbnz	x8, 41da94 <update_goal_chain@@Base+0xf8>
  41daa0:	ldr	w8, [x24, #3300]
  41daa4:	cbz	w8, 41dae4 <update_goal_chain@@Base+0x148>
  41daa8:	ldrb	w9, [x23, #137]
  41daac:	tbnz	w9, #4, 41dac8 <update_goal_chain@@Base+0x12c>
  41dab0:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41dab4:	str	wzr, [x9, #32]
  41dab8:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41dabc:	str	wzr, [x25, #3260]
  41dac0:	str	wzr, [x9, #236]
  41dac4:	b	41dae4 <update_goal_chain@@Base+0x148>
  41dac8:	ldur	w10, [x29, #-12]
  41dacc:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41dad0:	str	w10, [x9, #236]
  41dad4:	ldp	w9, w10, [x29, #-8]
  41dad8:	str	w9, [x25, #3260]
  41dadc:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41dae0:	str	w10, [x9, #32]
  41dae4:	ldr	w26, [x28, #1624]
  41dae8:	cmp	w8, #0x0
  41daec:	cset	w1, ne  // ne = any
  41daf0:	mov	x0, x23
  41daf4:	bl	41dd7c <update_goal_chain@@Base+0x3e0>
  41daf8:	mov	x22, x23
  41dafc:	ldr	x23, [x23, #72]
  41db00:	cbnz	x23, 41daf8 <update_goal_chain@@Base+0x15c>
  41db04:	ldr	w8, [x28, #1624]
  41db08:	cmp	w8, w26
  41db0c:	b.ls	41db1c <update_goal_chain@@Base+0x180>  // b.plast
  41db10:	ldrh	w8, [x21, #32]
  41db14:	orr	w8, w8, #0x100
  41db18:	strh	w8, [x21, #32]
  41db1c:	cmp	w20, #0x1
  41db20:	cbz	w0, 41db30 <update_goal_chain@@Base+0x194>
  41db24:	b.ls	41db40 <update_goal_chain@@Base+0x1a4>  // b.plast
  41db28:	mov	w23, wzr
  41db2c:	b	41dc08 <update_goal_chain@@Base+0x26c>
  41db30:	mov	w23, wzr
  41db34:	b.hi	41dc08 <update_goal_chain@@Base+0x26c>  // b.pmore
  41db38:	ldr	w8, [x22, #136]
  41db3c:	tbz	w8, #10, 41dc08 <update_goal_chain@@Base+0x26c>
  41db40:	ldr	w8, [x22, #136]
  41db44:	ands	w8, w8, #0x3
  41db48:	b.eq	41db7c <update_goal_chain@@Base+0x1e0>  // b.none
  41db4c:	adrp	x10, 440000 <shell_var@@Base+0x18>
  41db50:	ldr	w9, [x25, #3260]
  41db54:	ldr	w10, [x10, #36]
  41db58:	ldr	w11, [x24, #3300]
  41db5c:	mov	w20, w8
  41db60:	cmp	w9, #0x0
  41db64:	orr	w9, w11, w10
  41db68:	cset	w10, ne  // ne = any
  41db6c:	cmp	w9, #0x0
  41db70:	cset	w9, eq  // eq = none
  41db74:	and	w23, w10, w9
  41db78:	b	41dc08 <update_goal_chain@@Base+0x26c>
  41db7c:	ldr	w8, [x24, #3300]
  41db80:	ldr	x0, [x22, #112]
  41db84:	cbz	w8, 41db98 <update_goal_chain@@Base+0x1fc>
  41db88:	cbnz	x0, 41dba8 <update_goal_chain@@Base+0x20c>
  41db8c:	mov	x0, x22
  41db90:	mov	w1, wzr
  41db94:	b	41dba4 <update_goal_chain@@Base+0x208>
  41db98:	cbnz	x0, 41dba8 <update_goal_chain@@Base+0x20c>
  41db9c:	mov	w1, #0x1                   	// #1
  41dba0:	mov	x0, x22
  41dba4:	bl	41dec8 <f_mtime@@Base>
  41dba8:	mov	x8, x22
  41dbac:	ldr	x22, [x22, #72]
  41dbb0:	cbnz	x22, 41dba8 <update_goal_chain@@Base+0x20c>
  41dbb4:	ldr	w9, [x8, #136]
  41dbb8:	tbz	w9, #10, 41dc00 <update_goal_chain@@Base+0x264>
  41dbbc:	ldrb	w10, [x21, #33]
  41dbc0:	tbz	w10, #0, 41dc00 <update_goal_chain@@Base+0x264>
  41dbc4:	ldr	x10, [x8, #120]
  41dbc8:	cmp	x0, x10
  41dbcc:	b.eq	41dc00 <update_goal_chain@@Base+0x264>  // b.none
  41dbd0:	ldr	w10, [x24, #3300]
  41dbd4:	cbz	w10, 41dbf8 <update_goal_chain@@Base+0x25c>
  41dbd8:	adrp	x11, 440000 <shell_var@@Base+0x18>
  41dbdc:	ldr	w11, [x11, #32]
  41dbe0:	ldr	w12, [x25, #3260]
  41dbe4:	orr	w11, w12, w11
  41dbe8:	cbz	w11, 41dbf8 <update_goal_chain@@Base+0x25c>
  41dbec:	cbz	w10, 41dc00 <update_goal_chain@@Base+0x264>
  41dbf0:	ubfx	w23, w9, #16, #1
  41dbf4:	b	41dc04 <update_goal_chain@@Base+0x268>
  41dbf8:	mov	w20, wzr
  41dbfc:	cbnz	w10, 41dbf0 <update_goal_chain@@Base+0x254>
  41dc00:	mov	w23, wzr
  41dc04:	mov	x22, x8
  41dc08:	ldr	w8, [x22, #136]
  41dc0c:	bic	w9, w27, w8, lsr #10
  41dc10:	and	w8, w8, #0xfffeffff
  41dc14:	orr	w19, w9, w19
  41dc18:	str	w8, [x22, #136]
  41dc1c:	tbnz	w23, #0, 41dc28 <update_goal_chain@@Base+0x28c>
  41dc20:	ldr	x8, [x22, #56]
  41dc24:	cbnz	x8, 41da80 <update_goal_chain@@Base+0xe4>
  41dc28:	ldr	x22, [x21, #16]
  41dc2c:	cbnz	w19, 41dc44 <update_goal_chain@@Base+0x2a8>
  41dc30:	b	41dc48 <update_goal_chain@@Base+0x2ac>
  41dc34:	mov	w23, wzr
  41dc38:	mov	w19, wzr
  41dc3c:	ldr	x22, [x21, #16]
  41dc40:	cbz	w19, 41dc48 <update_goal_chain@@Base+0x2ac>
  41dc44:	cbz	w23, 41da48 <update_goal_chain@@Base+0xac>
  41dc48:	ldr	w8, [x24, #3300]
  41dc4c:	cbnz	w8, 41dccc <update_goal_chain@@Base+0x330>
  41dc50:	ldr	w19, [x22, #136]
  41dc54:	tst	w19, #0x3
  41dc58:	b.ne	41dccc <update_goal_chain@@Base+0x330>  // b.any
  41dc5c:	ldrb	w8, [x21, #33]
  41dc60:	tbnz	w8, #0, 41dccc <update_goal_chain@@Base+0x330>
  41dc64:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41dc68:	ldr	w8, [x8, #3232]
  41dc6c:	ldr	w9, [x25, #3260]
  41dc70:	orr	w8, w9, w8
  41dc74:	cbnz	w8, 41dccc <update_goal_chain@@Base+0x330>
  41dc78:	ldr	x0, [x22]
  41dc7c:	bl	4067d0 <strlen@plt>
  41dc80:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41dc84:	mov	x26, x0
  41dc88:	add	x1, x1, #0x33a
  41dc8c:	tbnz	w19, #13, 41dcac <update_goal_chain@@Base+0x310>
  41dc90:	ldr	x8, [x22, #32]
  41dc94:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41dc98:	add	x9, x9, #0x357
  41dc9c:	cmp	x8, #0x0
  41dca0:	adrp	x8, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41dca4:	add	x8, x8, #0x33a
  41dca8:	csel	x1, x8, x9, eq  // eq = none
  41dcac:	mov	w2, #0x5                   	// #5
  41dcb0:	mov	x0, xzr
  41dcb4:	bl	406e50 <dcgettext@plt>
  41dcb8:	ldr	x3, [x22]
  41dcbc:	mov	x2, x0
  41dcc0:	mov	w0, #0x1                   	// #1
  41dcc4:	mov	x1, x26
  41dcc8:	bl	418e08 <message@@Base>
  41dccc:	ldr	x8, [x21]
  41dcd0:	ldr	x22, [sp, #8]
  41dcd4:	cbz	x22, 41dce4 <update_goal_chain@@Base+0x348>
  41dcd8:	ldr	x19, [sp]
  41dcdc:	str	x8, [x22]
  41dce0:	b	41dce8 <update_goal_chain@@Base+0x34c>
  41dce4:	mov	x19, x8
  41dce8:	mov	x0, x21
  41dcec:	bl	406cf0 <free@plt>
  41dcf0:	mov	x8, x19
  41dcf4:	cbz	x22, 41dcfc <update_goal_chain@@Base+0x360>
  41dcf8:	ldr	x8, [x22]
  41dcfc:	str	x19, [sp]
  41dd00:	tbz	w23, #0, 41da50 <update_goal_chain@@Base+0xb4>
  41dd04:	mov	w9, wzr
  41dd08:	mov	x21, x8
  41dd0c:	tbnz	w9, #0, 41da5c <update_goal_chain@@Base+0xc0>
  41dd10:	b	41dd18 <update_goal_chain@@Base+0x37c>
  41dd14:	mov	x8, xzr
  41dd18:	cbnz	x8, 41da28 <update_goal_chain@@Base+0x8c>
  41dd1c:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  41dd20:	ldr	w8, [x9, #1640]
  41dd24:	add	w8, w8, #0x1
  41dd28:	str	w8, [x9, #1640]
  41dd2c:	b	41da28 <update_goal_chain@@Base+0x8c>
  41dd30:	mov	w20, #0x1                   	// #1
  41dd34:	ldr	w8, [x24, #3300]
  41dd38:	cbz	w8, 41dd58 <update_goal_chain@@Base+0x3bc>
  41dd3c:	ldur	w9, [x29, #-12]
  41dd40:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41dd44:	str	w9, [x8, #236]
  41dd48:	ldp	w8, w9, [x29, #-8]
  41dd4c:	str	w8, [x25, #3260]
  41dd50:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41dd54:	str	w9, [x8, #32]
  41dd58:	mov	w0, w20
  41dd5c:	ldp	x20, x19, [sp, #112]
  41dd60:	ldp	x22, x21, [sp, #96]
  41dd64:	ldp	x24, x23, [sp, #80]
  41dd68:	ldp	x26, x25, [sp, #64]
  41dd6c:	ldp	x28, x27, [sp, #48]
  41dd70:	ldp	x29, x30, [sp, #32]
  41dd74:	add	sp, sp, #0x80
  41dd78:	ret
  41dd7c:	stp	x29, x30, [sp, #-64]!
  41dd80:	stp	x24, x23, [sp, #16]
  41dd84:	stp	x22, x21, [sp, #32]
  41dd88:	stp	x20, x19, [sp, #48]
  41dd8c:	ldr	x8, [x0, #104]
  41dd90:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  41dd94:	ldr	w9, [x22, #1640]
  41dd98:	mov	w19, w1
  41dd9c:	cmp	x8, #0x0
  41dda0:	csel	x21, x0, x8, eq  // eq = none
  41dda4:	ldr	w8, [x21, #128]
  41dda8:	mov	x29, sp
  41ddac:	cmp	w8, w9
  41ddb0:	b.ne	41ddd0 <update_goal_chain@@Base+0x434>  // b.any
  41ddb4:	ldr	w8, [x21, #136]
  41ddb8:	mov	w9, #0x402                 	// #1026
  41ddbc:	movk	w9, #0x8, lsl #16
  41ddc0:	orr	w10, w9, #0x10000
  41ddc4:	and	w8, w8, w10
  41ddc8:	cmp	w8, w9
  41ddcc:	b.ne	41de54 <update_goal_chain@@Base+0x4b8>  // b.any
  41ddd0:	mov	w20, wzr
  41ddd4:	cbz	x21, 41deb0 <update_goal_chain@@Base+0x514>
  41ddd8:	adrp	x23, 440000 <shell_var@@Base+0x18>
  41dddc:	ldr	w8, [x22, #1640]
  41dde0:	mov	x0, x21
  41dde4:	mov	w1, w19
  41dde8:	str	w8, [x21, #128]
  41ddec:	bl	41ee0c <notice_finished_file@@Base+0xa04>
  41ddf0:	mov	x8, x21
  41ddf4:	ldr	x21, [x21, #72]
  41ddf8:	cbnz	x21, 41ddf0 <update_goal_chain@@Base+0x454>
  41ddfc:	cbz	w0, 41de14 <update_goal_chain@@Base+0x478>
  41de00:	ldr	w9, [x23, #36]
  41de04:	cbnz	w9, 41de14 <update_goal_chain@@Base+0x478>
  41de08:	mov	w24, w0
  41de0c:	cbnz	w9, 41de48 <update_goal_chain@@Base+0x4ac>
  41de10:	b	41deac <update_goal_chain@@Base+0x510>
  41de14:	ldr	w9, [x8, #136]
  41de18:	ubfx	w9, w9, #2, #2
  41de1c:	sub	w9, w9, #0x1
  41de20:	cmp	w9, #0x2
  41de24:	b.cs	41de38 <update_goal_chain@@Base+0x49c>  // b.hs, b.nlast
  41de28:	mov	w9, wzr
  41de2c:	mov	w24, wzr
  41de30:	cbnz	w9, 41de48 <update_goal_chain@@Base+0x4ac>
  41de34:	b	41deac <update_goal_chain@@Base+0x510>
  41de38:	cmp	w0, w20
  41de3c:	csel	w20, w0, w20, hi  // hi = pmore
  41de40:	mov	w9, #0x1                   	// #1
  41de44:	cbz	w9, 41deac <update_goal_chain@@Base+0x510>
  41de48:	ldr	x21, [x8, #56]
  41de4c:	cbnz	x21, 41dddc <update_goal_chain@@Base+0x440>
  41de50:	b	41deb0 <update_goal_chain@@Base+0x514>
  41de54:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41de58:	ldrb	w8, [x8, #3236]
  41de5c:	tbz	w8, #1, 41de94 <update_goal_chain@@Base+0x4f8>
  41de60:	mov	x20, x0
  41de64:	mov	w0, w19
  41de68:	bl	417e84 <print_spaces@@Base>
  41de6c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41de70:	add	x1, x1, #0x3ac
  41de74:	mov	w2, #0x5                   	// #5
  41de78:	mov	x0, xzr
  41de7c:	bl	406e50 <dcgettext@plt>
  41de80:	ldr	x1, [x20]
  41de84:	bl	406ef0 <printf@plt>
  41de88:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41de8c:	ldr	x0, [x8, #2512]
  41de90:	bl	406d80 <fflush@plt>
  41de94:	ldr	w8, [x21, #136]
  41de98:	mov	w9, #0xc                   	// #12
  41de9c:	and	w10, w8, #0x3
  41dea0:	bics	wzr, w9, w8
  41dea4:	csel	w20, w10, wzr, eq  // eq = none
  41dea8:	b	41deb0 <update_goal_chain@@Base+0x514>
  41deac:	mov	w20, w24
  41deb0:	mov	w0, w20
  41deb4:	ldp	x20, x19, [sp, #48]
  41deb8:	ldp	x22, x21, [sp, #32]
  41debc:	ldp	x24, x23, [sp, #16]
  41dec0:	ldp	x29, x30, [sp], #64
  41dec4:	ret

000000000041dec8 <f_mtime@@Base>:
  41dec8:	stp	x29, x30, [sp, #-80]!
  41decc:	stp	x26, x25, [sp, #16]
  41ded0:	stp	x24, x23, [sp, #32]
  41ded4:	stp	x22, x21, [sp, #48]
  41ded8:	stp	x20, x19, [sp, #64]
  41dedc:	mov	x29, sp
  41dee0:	sub	sp, sp, #0x80
  41dee4:	mov	x19, x0
  41dee8:	ldr	x0, [x0]
  41deec:	mov	w20, w1
  41def0:	bl	4070bc <ar_name@@Base>
  41def4:	cbz	w0, 41dff0 <f_mtime@@Base+0x128>
  41def8:	ldr	x0, [x19]
  41defc:	sub	x1, x29, #0x78
  41df00:	sub	x2, x29, #0x10
  41df04:	bl	40716c <ar_parse_name@@Base>
  41df08:	ldur	x0, [x29, #-120]
  41df0c:	bl	40a798 <lookup_file@@Base>
  41df10:	mov	x21, x0
  41df14:	cbnz	x0, 41df28 <f_mtime@@Base+0x60>
  41df18:	ldur	x0, [x29, #-120]
  41df1c:	bl	420f28 <strcache_add@@Base>
  41df20:	bl	40a830 <enter_file@@Base>
  41df24:	mov	x21, x0
  41df28:	mov	x0, x21
  41df2c:	mov	w1, w20
  41df30:	bl	41dec8 <f_mtime@@Base>
  41df34:	stur	x0, [x29, #-8]
  41df38:	mov	x25, x21
  41df3c:	ldr	x21, [x21, #72]
  41df40:	cbnz	x21, 41df38 <f_mtime@@Base+0x70>
  41df44:	cbz	w20, 41dfe8 <f_mtime@@Base+0x120>
  41df48:	ldr	x20, [x25, #8]
  41df4c:	ldur	x1, [x29, #-120]
  41df50:	mov	x0, x20
  41df54:	bl	406cb0 <strcmp@plt>
  41df58:	cbz	w0, 41dfe8 <f_mtime@@Base+0x120>
  41df5c:	mov	x0, x20
  41df60:	bl	4067d0 <strlen@plt>
  41df64:	ldur	x21, [x29, #-16]
  41df68:	mov	x22, x0
  41df6c:	mov	x0, x21
  41df70:	bl	4067d0 <strlen@plt>
  41df74:	add	x8, x22, x0
  41df78:	add	x9, x8, #0x12
  41df7c:	and	x9, x9, #0xfffffffffffffff0
  41df80:	mov	x10, sp
  41df84:	sub	x24, x10, x9
  41df88:	mov	x23, x0
  41df8c:	add	x26, x8, x24
  41df90:	mov	sp, x24
  41df94:	mov	x0, x24
  41df98:	mov	x1, x20
  41df9c:	mov	x2, x22
  41dfa0:	bl	406790 <memcpy@plt>
  41dfa4:	add	x0, x24, x22
  41dfa8:	mov	w8, #0x28                  	// #40
  41dfac:	strb	w8, [x0], #1
  41dfb0:	mov	x1, x21
  41dfb4:	mov	x2, x23
  41dfb8:	bl	406790 <memcpy@plt>
  41dfbc:	mov	w8, #0x29                  	// #41
  41dfc0:	sturh	w8, [x26, #1]
  41dfc4:	ldp	x20, x21, [x25]
  41dfc8:	mov	x0, x24
  41dfcc:	bl	420f28 <strcache_add@@Base>
  41dfd0:	cmp	x20, x21
  41dfd4:	mov	x1, x0
  41dfd8:	mov	x0, x19
  41dfdc:	b.eq	41e09c <f_mtime@@Base+0x1d4>  // b.none
  41dfe0:	bl	40a910 <rehash_file@@Base>
  41dfe4:	b	41e0a0 <f_mtime@@Base+0x1d8>
  41dfe8:	mov	x20, x19
  41dfec:	b	41e0ac <f_mtime@@Base+0x1e4>
  41dff0:	ldr	x0, [x19]
  41dff4:	bl	41e8a4 <notice_finished_file@@Base+0x49c>
  41dff8:	stur	x0, [x29, #-8]
  41dffc:	cbz	w20, 41e094 <f_mtime@@Base+0x1cc>
  41e000:	cmp	x0, #0x1
  41e004:	b.ne	41e094 <f_mtime@@Base+0x1cc>  // b.any
  41e008:	ldrb	w8, [x19, #138]
  41e00c:	tbnz	w8, #1, 41e094 <f_mtime@@Base+0x1cc>
  41e010:	ldr	x0, [x19]
  41e014:	sub	x1, x29, #0x8
  41e018:	mov	x2, xzr
  41e01c:	mov	x3, xzr
  41e020:	bl	423a64 <vpath_search@@Base>
  41e024:	mov	x21, x0
  41e028:	cbz	x0, 41e120 <f_mtime@@Base+0x258>
  41e02c:	ldur	x8, [x29, #-8]
  41e030:	cbz	x8, 41e038 <f_mtime@@Base+0x170>
  41e034:	str	x8, [x19, #112]
  41e038:	mov	x0, x21
  41e03c:	bl	4067d0 <strlen@plt>
  41e040:	ldr	x8, [x19]
  41e044:	mov	x20, x0
  41e048:	mov	x0, x8
  41e04c:	bl	4067d0 <strlen@plt>
  41e050:	mvn	x8, x0
  41e054:	add	x1, x20, x8
  41e058:	mov	x0, x21
  41e05c:	bl	4239e0 <gpath_search@@Base>
  41e060:	cbz	w0, 41e150 <f_mtime@@Base+0x288>
  41e064:	mov	x0, x19
  41e068:	mov	x1, x21
  41e06c:	bl	40acec <rename_file@@Base>
  41e070:	mov	x20, x19
  41e074:	ldr	x19, [x19, #72]
  41e078:	cbnz	x19, 41e070 <f_mtime@@Base+0x1a8>
  41e07c:	ldr	x0, [x20, #112]
  41e080:	cbz	x0, 41e1a0 <f_mtime@@Base+0x2d8>
  41e084:	mov	w22, #0x1                   	// #1
  41e088:	mov	x19, x20
  41e08c:	cbnz	w22, 41e198 <f_mtime@@Base+0x2d0>
  41e090:	b	41e1b8 <f_mtime@@Base+0x2f0>
  41e094:	mov	x20, x19
  41e098:	b	41e1c4 <f_mtime@@Base+0x2fc>
  41e09c:	bl	40acec <rename_file@@Base>
  41e0a0:	mov	x20, x19
  41e0a4:	ldr	x19, [x19, #72]
  41e0a8:	cbnz	x19, 41e0a0 <f_mtime@@Base+0x1d8>
  41e0ac:	ldur	x0, [x29, #-120]
  41e0b0:	bl	406cf0 <free@plt>
  41e0b4:	ldr	w8, [x20, #136]
  41e0b8:	orr	w8, w8, #0x80
  41e0bc:	str	w8, [x20, #136]
  41e0c0:	ldur	x8, [x29, #-8]
  41e0c4:	cmp	x8, #0x1
  41e0c8:	b.ne	41e0ec <f_mtime@@Base+0x224>  // b.any
  41e0cc:	mov	w0, #0x1                   	// #1
  41e0d0:	mov	sp, x29
  41e0d4:	ldp	x20, x19, [sp, #64]
  41e0d8:	ldp	x22, x21, [sp, #48]
  41e0dc:	ldp	x24, x23, [sp, #32]
  41e0e0:	ldp	x26, x25, [sp, #16]
  41e0e4:	ldp	x29, x30, [sp], #80
  41e0e8:	ret
  41e0ec:	ldr	x0, [x20, #8]
  41e0f0:	bl	4071c0 <ar_member_date@@Base>
  41e0f4:	cmn	x0, #0x1
  41e0f8:	b.eq	41e114 <f_mtime@@Base+0x24c>  // b.none
  41e0fc:	mov	x1, x0
  41e100:	ldr	x0, [x20, #8]
  41e104:	mov	x2, xzr
  41e108:	bl	40b950 <file_timestamp_cons@@Base>
  41e10c:	stur	x0, [x29, #-8]
  41e110:	b	41e1c4 <f_mtime@@Base+0x2fc>
  41e114:	mov	w0, #0x1                   	// #1
  41e118:	stur	x0, [x29, #-8]
  41e11c:	b	41e1c4 <f_mtime@@Base+0x2fc>
  41e120:	ldr	x0, [x19]
  41e124:	ldrb	w8, [x0]
  41e128:	cmp	w8, #0x2d
  41e12c:	b.ne	41e14c <f_mtime@@Base+0x284>  // b.any
  41e130:	ldrb	w8, [x0, #1]
  41e134:	cmp	w8, #0x6c
  41e138:	b.ne	41e14c <f_mtime@@Base+0x284>  // b.any
  41e13c:	sub	x1, x29, #0x8
  41e140:	bl	41eacc <notice_finished_file@@Base+0x6c4>
  41e144:	mov	x21, x0
  41e148:	cbnz	x0, 41e02c <f_mtime@@Base+0x164>
  41e14c:	b	41e1b8 <f_mtime@@Base+0x2f0>
  41e150:	mov	x0, x19
  41e154:	mov	x1, x21
  41e158:	bl	40a910 <rehash_file@@Base>
  41e15c:	mov	x20, x19
  41e160:	ldr	x19, [x19, #72]
  41e164:	cbnz	x19, 41e15c <f_mtime@@Base+0x294>
  41e168:	ldur	x8, [x29, #-8]
  41e16c:	mov	w22, wzr
  41e170:	cmn	x8, #0x1
  41e174:	b.eq	41e190 <f_mtime@@Base+0x2c8>  // b.none
  41e178:	cmp	x8, #0x2
  41e17c:	b.eq	41e190 <f_mtime@@Base+0x2c8>  // b.none
  41e180:	mov	x0, x21
  41e184:	bl	41e8a4 <notice_finished_file@@Base+0x49c>
  41e188:	mov	w22, wzr
  41e18c:	stur	x0, [x29, #-8]
  41e190:	mov	x19, x20
  41e194:	cbz	w22, 41e1b8 <f_mtime@@Base+0x2f0>
  41e198:	cbnz	w22, 41e0d0 <f_mtime@@Base+0x208>
  41e19c:	b	41e1c4 <f_mtime@@Base+0x2fc>
  41e1a0:	mov	w1, #0x1                   	// #1
  41e1a4:	mov	x0, x20
  41e1a8:	mov	w22, #0x1                   	// #1
  41e1ac:	bl	41dec8 <f_mtime@@Base>
  41e1b0:	mov	x19, x20
  41e1b4:	cbnz	w22, 41e198 <f_mtime@@Base+0x2d0>
  41e1b8:	mov	w22, wzr
  41e1bc:	mov	x20, x19
  41e1c0:	cbnz	w22, 41e0d0 <f_mtime@@Base+0x208>
  41e1c4:	adrp	x21, 440000 <shell_var@@Base+0x18>
  41e1c8:	ldr	w8, [x21, #232]
  41e1cc:	cbz	w8, 41e228 <f_mtime@@Base+0x360>
  41e1d0:	ldr	x8, [x20, #104]
  41e1d4:	ldur	x0, [x29, #-8]
  41e1d8:	mov	w10, #0x410c                	// #16652
  41e1dc:	cmp	x8, #0x0
  41e1e0:	csel	x8, x20, x8, eq  // eq = none
  41e1e4:	ldr	w9, [x8, #136]
  41e1e8:	b	41e1f4 <f_mtime@@Base+0x32c>
  41e1ec:	ldr	x8, [x8, #56]
  41e1f0:	cbz	x8, 41e0d0 <f_mtime@@Base+0x208>
  41e1f4:	cmp	x0, #0x1
  41e1f8:	b.eq	41e214 <f_mtime@@Base+0x34c>  // b.none
  41e1fc:	ldr	w11, [x8, #136]
  41e200:	and	w12, w11, w10
  41e204:	cmp	w12, #0x4, lsl #12
  41e208:	b.ne	41e214 <f_mtime@@Base+0x34c>  // b.any
  41e20c:	and	w11, w11, #0xffffbfff
  41e210:	str	w11, [x8, #136]
  41e214:	ldr	w11, [x8, #136]
  41e218:	eor	w11, w11, w9
  41e21c:	tbnz	w11, #10, 41e1ec <f_mtime@@Base+0x324>
  41e220:	str	x0, [x8, #112]
  41e224:	b	41e1ec <f_mtime@@Base+0x324>
  41e228:	ldur	x19, [x29, #-8]
  41e22c:	cmn	x19, #0x1
  41e230:	b.eq	41e1d0 <f_mtime@@Base+0x308>  // b.none
  41e234:	cmp	x19, #0x1
  41e238:	b.eq	41e1d0 <f_mtime@@Base+0x308>  // b.none
  41e23c:	ldrb	w8, [x20, #137]
  41e240:	tbnz	w8, #2, 41e1d0 <f_mtime@@Base+0x308>
  41e244:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  41e248:	ldr	x8, [x22, #1656]
  41e24c:	cmp	x8, x19
  41e250:	b.cs	41e1d0 <f_mtime@@Base+0x308>  // b.hs, b.nlast
  41e254:	sub	x0, x29, #0x10
  41e258:	bl	40bb08 <file_timestamp_now@@Base>
  41e25c:	ldursw	x8, [x29, #-16]
  41e260:	add	x8, x8, x0
  41e264:	sub	x8, x8, #0x1
  41e268:	cmp	x8, x19
  41e26c:	str	x8, [x22, #1656]
  41e270:	b.cs	41e1d0 <f_mtime@@Base+0x308>  // b.hs, b.nlast
  41e274:	ldur	x8, [x29, #-8]
  41e278:	mov	x9, #0xcd6500000000        	// #225833675390976
  41e27c:	movk	x9, #0x41cd, lsl #48
  41e280:	sub	x10, x0, #0x3
  41e284:	sub	x8, x8, #0x3
  41e288:	fmov	d0, x9
  41e28c:	lsr	x9, x8, #30
  41e290:	sub	x9, x9, x10, lsr #30
  41e294:	and	w10, w10, #0x3fffffff
  41e298:	and	w8, w8, #0x3fffffff
  41e29c:	sub	w8, w8, w10
  41e2a0:	scvtf	d2, w8
  41e2a4:	mov	x8, #0xc00000000000        	// #211106232532992
  41e2a8:	ucvtf	d1, x9
  41e2ac:	fdiv	d0, d2, d0
  41e2b0:	movk	x8, #0x4058, lsl #48
  41e2b4:	fadd	d0, d0, d1
  41e2b8:	fmov	d1, x8
  41e2bc:	fcmp	d0, d1
  41e2c0:	b.lt	41e2ec <f_mtime@@Base+0x424>  // b.tstop
  41e2c4:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  41e2c8:	fmov	d1, x8
  41e2cc:	fcmp	d0, d1
  41e2d0:	b.hi	41e2ec <f_mtime@@Base+0x424>  // b.pmore
  41e2d4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  41e2d8:	fcvtzu	x2, d0
  41e2dc:	add	x1, x1, #0x8af
  41e2e0:	sub	x0, x29, #0x78
  41e2e4:	bl	406870 <sprintf@plt>
  41e2e8:	b	41e2fc <f_mtime@@Base+0x434>
  41e2ec:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e2f0:	add	x1, x1, #0x36b
  41e2f4:	sub	x0, x29, #0x78
  41e2f8:	bl	406870 <sprintf@plt>
  41e2fc:	ldr	x0, [x20]
  41e300:	bl	4067d0 <strlen@plt>
  41e304:	mov	x19, x0
  41e308:	sub	x0, x29, #0x78
  41e30c:	bl	4067d0 <strlen@plt>
  41e310:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e314:	add	x19, x0, x19
  41e318:	add	x1, x1, #0x370
  41e31c:	mov	w2, #0x5                   	// #5
  41e320:	mov	x0, xzr
  41e324:	bl	406e50 <dcgettext@plt>
  41e328:	ldr	x3, [x20]
  41e32c:	mov	x2, x0
  41e330:	sub	x4, x29, #0x78
  41e334:	mov	x0, xzr
  41e338:	mov	x1, x19
  41e33c:	bl	418f84 <error@@Base>
  41e340:	mov	w8, #0x1                   	// #1
  41e344:	str	w8, [x21, #232]
  41e348:	b	41e1d0 <f_mtime@@Base+0x308>

000000000041e34c <show_goal_error@@Base>:
  41e34c:	stp	x29, x30, [sp, #-48]!
  41e350:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41e354:	ldr	x8, [x8, #1648]
  41e358:	stp	x22, x21, [sp, #16]
  41e35c:	stp	x20, x19, [sp, #32]
  41e360:	mov	x29, sp
  41e364:	ldrh	w9, [x8, #32]
  41e368:	and	w9, w9, #0x6
  41e36c:	cmp	w9, #0x2
  41e370:	b.ne	41e3f8 <show_goal_error@@Base+0xac>  // b.any
  41e374:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  41e378:	ldr	x22, [x9, #1632]
  41e37c:	cbz	x22, 41e3f8 <show_goal_error@@Base+0xac>
  41e380:	ldr	x8, [x8, #16]
  41e384:	ldr	x9, [x22, #16]
  41e388:	cmp	x8, x9
  41e38c:	b.eq	41e39c <show_goal_error@@Base+0x50>  // b.none
  41e390:	ldr	x22, [x22]
  41e394:	cbnz	x22, 41e384 <show_goal_error@@Base+0x38>
  41e398:	b	41e3f8 <show_goal_error@@Base+0xac>
  41e39c:	ldr	w19, [x22, #36]
  41e3a0:	cbz	w19, 41e3f8 <show_goal_error@@Base+0xac>
  41e3a4:	ldr	x0, [x9]
  41e3a8:	add	x20, x22, #0x28
  41e3ac:	bl	4067d0 <strlen@plt>
  41e3b0:	mov	x21, x0
  41e3b4:	mov	w0, w19
  41e3b8:	bl	406b90 <strerror@plt>
  41e3bc:	bl	4067d0 <strlen@plt>
  41e3c0:	ldr	x8, [x22, #16]
  41e3c4:	add	x21, x0, x21
  41e3c8:	ldr	x19, [x8]
  41e3cc:	ldr	w8, [x22, #36]
  41e3d0:	mov	w0, w8
  41e3d4:	bl	406b90 <strerror@plt>
  41e3d8:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  41e3dc:	mov	x4, x0
  41e3e0:	add	x2, x2, #0x2aa
  41e3e4:	mov	x0, x20
  41e3e8:	mov	x1, x21
  41e3ec:	mov	x3, x19
  41e3f0:	bl	418f84 <error@@Base>
  41e3f4:	str	wzr, [x22, #36]
  41e3f8:	ldp	x20, x19, [sp, #32]
  41e3fc:	ldp	x22, x21, [sp, #16]
  41e400:	ldp	x29, x30, [sp], #48
  41e404:	ret

000000000041e408 <notice_finished_file@@Base>:
  41e408:	stp	x29, x30, [sp, #-48]!
  41e40c:	stp	x20, x19, [sp, #32]
  41e410:	str	x21, [sp, #16]
  41e414:	ldr	w21, [x0, #136]
  41e418:	mov	w8, #0x40c                 	// #1036
  41e41c:	mov	x19, x0
  41e420:	mov	w9, wzr
  41e424:	orr	w8, w21, w8
  41e428:	tst	w21, #0x3
  41e42c:	adrp	x20, 440000 <shell_var@@Base+0x18>
  41e430:	mov	x29, sp
  41e434:	str	w8, [x0, #136]
  41e438:	b.ne	41e4c4 <notice_finished_file@@Base+0xbc>  // b.any
  41e43c:	ldr	w10, [x20, #236]
  41e440:	cbz	w10, 41e4c4 <notice_finished_file@@Base+0xbc>
  41e444:	ldr	x9, [x19, #32]
  41e448:	cbz	x9, 41e454 <notice_finished_file@@Base+0x4c>
  41e44c:	ldrb	w10, [x9, #51]
  41e450:	tbnz	w10, #0, 41e498 <notice_finished_file@@Base+0x90>
  41e454:	tbnz	w21, #13, 41e488 <notice_finished_file@@Base+0x80>
  41e458:	cbz	x9, 41e4c4 <notice_finished_file@@Base+0xbc>
  41e45c:	mov	x0, x19
  41e460:	bl	41e660 <notice_finished_file@@Base+0x258>
  41e464:	ldr	w8, [x19, #136]
  41e468:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  41e46c:	bfxil	w8, w0, #0, #2
  41e470:	str	w8, [x19, #136]
  41e474:	ldr	w8, [x9, #1624]
  41e478:	add	w8, w8, #0x1
  41e47c:	str	w8, [x9, #1624]
  41e480:	mov	w9, #0x1                   	// #1
  41e484:	b	41e4c4 <notice_finished_file@@Base+0xbc>
  41e488:	and	w8, w8, #0xfffffffc
  41e48c:	mov	w9, wzr
  41e490:	str	w8, [x19, #136]
  41e494:	b	41e4c4 <notice_finished_file@@Base+0xbc>
  41e498:	ldrh	w10, [x9, #48]
  41e49c:	cbz	w10, 41e4c0 <notice_finished_file@@Base+0xb8>
  41e4a0:	ldr	x10, [x9, #40]
  41e4a4:	mov	x11, xzr
  41e4a8:	ldrb	w12, [x10, x11]
  41e4ac:	tbz	w12, #0, 41e454 <notice_finished_file@@Base+0x4c>
  41e4b0:	ldrh	w12, [x9, #48]
  41e4b4:	add	x11, x11, #0x1
  41e4b8:	cmp	w11, w12
  41e4bc:	b.cc	41e4a8 <notice_finished_file@@Base+0xa0>  // b.lo, b.ul, b.last
  41e4c0:	mov	w9, wzr
  41e4c4:	ldr	x10, [x19, #120]
  41e4c8:	and	w8, w21, #0xc
  41e4cc:	cbz	x10, 41e4e8 <notice_finished_file@@Base+0xe0>
  41e4d0:	cmp	w8, #0x8
  41e4d4:	b.ne	41e4f8 <notice_finished_file@@Base+0xf0>  // b.any
  41e4d8:	cbnz	w9, 41e4fc <notice_finished_file@@Base+0xf4>
  41e4dc:	ldr	w9, [x19, #136]
  41e4e0:	tbnz	w9, #13, 41e574 <notice_finished_file@@Base+0x16c>
  41e4e4:	b	41e4fc <notice_finished_file@@Base+0xf4>
  41e4e8:	ldr	x10, [x19, #112]
  41e4ec:	str	x10, [x19, #120]
  41e4f0:	cmp	w8, #0x8
  41e4f4:	b.eq	41e4d8 <notice_finished_file@@Base+0xd0>  // b.none
  41e4f8:	cbz	w9, 41e574 <notice_finished_file@@Base+0x16c>
  41e4fc:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41e500:	adrp	x10, 440000 <shell_var@@Base+0x18>
  41e504:	ldr	w9, [x9, #3260]
  41e508:	ldr	w10, [x10, #32]
  41e50c:	ldr	w11, [x20, #236]
  41e510:	orr	w9, w10, w9
  41e514:	orr	w9, w9, w11
  41e518:	cbz	w9, 41e54c <notice_finished_file@@Base+0x144>
  41e51c:	ldr	x9, [x19, #32]
  41e520:	cbz	x9, 41e54c <notice_finished_file@@Base+0x144>
  41e524:	ldrh	w10, [x9, #48]
  41e528:	subs	x11, x10, #0x1
  41e52c:	b.lt	41e554 <notice_finished_file@@Base+0x14c>  // b.tstop
  41e530:	ldr	x12, [x9, #40]
  41e534:	add	x10, x12, x10
  41e538:	ldurb	w12, [x10, #-1]
  41e53c:	mov	x10, x11
  41e540:	tbnz	w12, #0, 41e528 <notice_finished_file@@Base+0x120>
  41e544:	add	w9, w11, #0x1
  41e548:	b	41e568 <notice_finished_file@@Base+0x160>
  41e54c:	ldrb	w9, [x19, #137]
  41e550:	tbnz	w9, #3, 41e55c <notice_finished_file@@Base+0x154>
  41e554:	mov	w9, wzr
  41e558:	b	41e568 <notice_finished_file@@Base+0x160>
  41e55c:	ldr	x9, [x19, #32]
  41e560:	cmp	x9, #0x0
  41e564:	cset	w9, eq  // eq = none
  41e568:	cmp	w9, #0x0
  41e56c:	csetm	x9, ne  // ne = any
  41e570:	str	x9, [x19, #112]
  41e574:	ldr	x10, [x19, #104]
  41e578:	cbz	x10, 41e5c0 <notice_finished_file@@Base+0x1b8>
  41e57c:	ldr	x9, [x19, #112]
  41e580:	b	41e58c <notice_finished_file@@Base+0x184>
  41e584:	ldr	x10, [x10, #56]
  41e588:	cbz	x10, 41e5ac <notice_finished_file@@Base+0x1a4>
  41e58c:	ldrb	w11, [x10, #137]
  41e590:	tbz	w11, #2, 41e5c0 <notice_finished_file@@Base+0x1b8>
  41e594:	cbz	x9, 41e584 <notice_finished_file@@Base+0x17c>
  41e598:	ldr	x11, [x10, #112]
  41e59c:	sub	x12, x11, #0x1
  41e5a0:	cmp	x12, x9
  41e5a4:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  41e5a8:	b	41e584 <notice_finished_file@@Base+0x17c>
  41e5ac:	ldr	x10, [x19, #104]
  41e5b0:	cbz	x10, 41e5c0 <notice_finished_file@@Base+0x1b8>
  41e5b4:	str	x9, [x10, #112]
  41e5b8:	ldr	x10, [x10, #56]
  41e5bc:	cbnz	x10, 41e5b4 <notice_finished_file@@Base+0x1ac>
  41e5c0:	cmp	w8, #0x8
  41e5c4:	b.ne	41e5d8 <notice_finished_file@@Base+0x1d0>  // b.any
  41e5c8:	ldr	w8, [x19, #136]
  41e5cc:	and	w8, w8, #0x3
  41e5d0:	cmp	w8, #0x1
  41e5d4:	b.ne	41e600 <notice_finished_file@@Base+0x1f8>  // b.any
  41e5d8:	ldr	w8, [x19, #136]
  41e5dc:	and	w9, w8, #0x3
  41e5e0:	cmp	w9, #0x1
  41e5e4:	b.ne	41e5f0 <notice_finished_file@@Base+0x1e8>  // b.any
  41e5e8:	and	w8, w8, #0xfffffffc
  41e5ec:	str	w8, [x19, #136]
  41e5f0:	ldp	x20, x19, [sp, #32]
  41e5f4:	ldr	x21, [sp, #16]
  41e5f8:	ldp	x29, x30, [sp], #48
  41e5fc:	ret
  41e600:	ldr	x20, [x19, #48]
  41e604:	cbnz	x20, 41e614 <notice_finished_file@@Base+0x20c>
  41e608:	b	41e5f0 <notice_finished_file@@Base+0x1e8>
  41e60c:	ldr	x20, [x20]
  41e610:	cbz	x20, 41e5f0 <notice_finished_file@@Base+0x1e8>
  41e614:	ldr	x8, [x20, #16]
  41e618:	ldr	w9, [x8, #136]
  41e61c:	orr	w9, w9, #0xc
  41e620:	str	w9, [x8, #136]
  41e624:	ldr	x8, [x20, #16]
  41e628:	ldr	w9, [x8, #136]
  41e62c:	orr	w9, w9, #0x400
  41e630:	str	w9, [x8, #136]
  41e634:	ldr	x8, [x20, #16]
  41e638:	ldr	w9, [x19, #136]
  41e63c:	ldr	w10, [x8, #136]
  41e640:	bfxil	w10, w9, #0, #2
  41e644:	str	w10, [x8, #136]
  41e648:	ldr	x0, [x20, #16]
  41e64c:	ldrb	w8, [x0, #137]
  41e650:	tbnz	w8, #5, 41e60c <notice_finished_file@@Base+0x204>
  41e654:	mov	w1, wzr
  41e658:	bl	41dec8 <f_mtime@@Base>
  41e65c:	b	41e60c <notice_finished_file@@Base+0x204>
  41e660:	sub	sp, sp, #0xb0
  41e664:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41e668:	ldr	w8, [x8, #3232]
  41e66c:	stp	x20, x19, [sp, #160]
  41e670:	mov	x19, x0
  41e674:	stp	x29, x30, [sp, #128]
  41e678:	str	x21, [sp, #144]
  41e67c:	add	x29, sp, #0x80
  41e680:	cbnz	w8, 41e6a8 <notice_finished_file@@Base+0x2a0>
  41e684:	ldr	x20, [x19]
  41e688:	mov	x0, x20
  41e68c:	bl	4067d0 <strlen@plt>
  41e690:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e694:	mov	x1, x0
  41e698:	add	x2, x2, #0x8ce
  41e69c:	mov	w0, wzr
  41e6a0:	mov	x3, x20
  41e6a4:	bl	418e08 <message@@Base>
  41e6a8:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41e6ac:	ldr	w8, [x8, #32]
  41e6b0:	cbz	w8, 41e6bc <notice_finished_file@@Base+0x2b4>
  41e6b4:	mov	w0, wzr
  41e6b8:	b	41e880 <notice_finished_file@@Base+0x478>
  41e6bc:	ldr	x0, [x19]
  41e6c0:	bl	4070bc <ar_name@@Base>
  41e6c4:	cbz	w0, 41e6e8 <notice_finished_file@@Base+0x2e0>
  41e6c8:	ldr	x0, [x19]
  41e6cc:	bl	407280 <ar_touch@@Base>
  41e6d0:	cmp	w0, #0x0
  41e6d4:	b	41e878 <notice_finished_file@@Base+0x470>
  41e6d8:	bl	406f00 <__errno_location@plt>
  41e6dc:	ldr	w8, [x0]
  41e6e0:	cmp	w8, #0x4
  41e6e4:	b.ne	41e704 <notice_finished_file@@Base+0x2fc>  // b.any
  41e6e8:	ldr	x0, [x19]
  41e6ec:	mov	w1, #0x42                  	// #66
  41e6f0:	mov	w2, #0x1b6                 	// #438
  41e6f4:	bl	406a40 <open@plt>
  41e6f8:	mov	w20, w0
  41e6fc:	cmn	w0, #0x1
  41e700:	b.eq	41e6d8 <notice_finished_file@@Base+0x2d0>  // b.none
  41e704:	tbnz	w20, #31, 41e860 <notice_finished_file@@Base+0x458>
  41e708:	mov	w8, #0x78                  	// #120
  41e70c:	strb	w8, [x29, #28]
  41e710:	mov	x1, sp
  41e714:	mov	w0, w20
  41e718:	bl	424ef0 <__libc_csu_fini@@Base+0x28>
  41e71c:	mov	w21, w0
  41e720:	cmn	w0, #0x1
  41e724:	b.ne	41e738 <notice_finished_file@@Base+0x330>  // b.any
  41e728:	bl	406f00 <__errno_location@plt>
  41e72c:	ldr	w8, [x0]
  41e730:	cmp	w8, #0x4
  41e734:	b.eq	41e710 <notice_finished_file@@Base+0x308>  // b.none
  41e738:	tbnz	w21, #31, 41e7a4 <notice_finished_file@@Base+0x39c>
  41e73c:	add	x1, x29, #0x1c
  41e740:	mov	w2, #0x1                   	// #1
  41e744:	mov	w0, w20
  41e748:	bl	406de0 <read@plt>
  41e74c:	mov	x21, x0
  41e750:	cmn	w21, #0x1
  41e754:	b.ne	41e768 <notice_finished_file@@Base+0x360>  // b.any
  41e758:	bl	406f00 <__errno_location@plt>
  41e75c:	ldr	w8, [x0]
  41e760:	cmp	w8, #0x4
  41e764:	b.eq	41e73c <notice_finished_file@@Base+0x334>  // b.none
  41e768:	tbnz	w21, #31, 41e7b4 <notice_finished_file@@Base+0x3ac>
  41e76c:	mov	w0, w20
  41e770:	mov	x1, xzr
  41e774:	mov	w2, wzr
  41e778:	bl	406930 <lseek@plt>
  41e77c:	mov	x21, x0
  41e780:	cmn	x0, #0x1
  41e784:	b.ne	41e798 <notice_finished_file@@Base+0x390>  // b.any
  41e788:	bl	406f00 <__errno_location@plt>
  41e78c:	ldr	w8, [x0]
  41e790:	cmp	w8, #0x4
  41e794:	b.eq	41e76c <notice_finished_file@@Base+0x364>  // b.none
  41e798:	tbnz	x21, #63, 41e7c4 <notice_finished_file@@Base+0x3bc>
  41e79c:	mov	w8, wzr
  41e7a0:	b	41e7d8 <notice_finished_file@@Base+0x3d0>
  41e7a4:	ldr	x1, [x19]
  41e7a8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e7ac:	add	x0, x0, #0x8e5
  41e7b0:	b	41e86c <notice_finished_file@@Base+0x464>
  41e7b4:	ldr	x1, [x19]
  41e7b8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e7bc:	add	x0, x0, #0x8f4
  41e7c0:	b	41e86c <notice_finished_file@@Base+0x464>
  41e7c4:	ldr	x1, [x19]
  41e7c8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e7cc:	add	x0, x0, #0x902
  41e7d0:	bl	41928c <perror_with_name@@Base>
  41e7d4:	mov	w8, #0x1                   	// #1
  41e7d8:	cbnz	w8, 41e874 <notice_finished_file@@Base+0x46c>
  41e7dc:	b	41e7f0 <notice_finished_file@@Base+0x3e8>
  41e7e0:	bl	406f00 <__errno_location@plt>
  41e7e4:	ldr	w8, [x0]
  41e7e8:	cmp	w8, #0x4
  41e7ec:	b.ne	41e80c <notice_finished_file@@Base+0x404>  // b.any
  41e7f0:	add	x1, x29, #0x1c
  41e7f4:	mov	w2, #0x1                   	// #1
  41e7f8:	mov	w0, w20
  41e7fc:	bl	406bf0 <write@plt>
  41e800:	mov	x21, x0
  41e804:	cmn	w21, #0x1
  41e808:	b.eq	41e7e0 <notice_finished_file@@Base+0x3d8>  // b.none
  41e80c:	tbnz	w21, #31, 41e894 <notice_finished_file@@Base+0x48c>
  41e810:	ldr	x8, [sp, #48]
  41e814:	cbnz	x8, 41e850 <notice_finished_file@@Base+0x448>
  41e818:	mov	w0, w20
  41e81c:	bl	406ba0 <close@plt>
  41e820:	ldr	x0, [x19]
  41e824:	mov	w1, #0x202                 	// #514
  41e828:	mov	w2, #0x1b6                 	// #438
  41e82c:	bl	406a40 <open@plt>
  41e830:	mov	w20, w0
  41e834:	cmn	w0, #0x1
  41e838:	b.ne	41e84c <notice_finished_file@@Base+0x444>  // b.any
  41e83c:	bl	406f00 <__errno_location@plt>
  41e840:	ldr	w8, [x0]
  41e844:	cmp	w8, #0x4
  41e848:	b.eq	41e820 <notice_finished_file@@Base+0x418>  // b.none
  41e84c:	tbnz	w20, #31, 41e860 <notice_finished_file@@Base+0x458>
  41e850:	mov	w0, w20
  41e854:	bl	406ba0 <close@plt>
  41e858:	mov	w8, wzr
  41e85c:	b	41e874 <notice_finished_file@@Base+0x46c>
  41e860:	ldr	x1, [x19]
  41e864:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e868:	add	x0, x0, #0x8d7
  41e86c:	bl	41928c <perror_with_name@@Base>
  41e870:	mov	w8, #0x1                   	// #1
  41e874:	cmp	w8, #0x0
  41e878:	mov	w8, #0x3                   	// #3
  41e87c:	csel	w0, wzr, w8, eq  // eq = none
  41e880:	ldp	x20, x19, [sp, #160]
  41e884:	ldr	x21, [sp, #144]
  41e888:	ldp	x29, x30, [sp, #128]
  41e88c:	add	sp, sp, #0xb0
  41e890:	ret
  41e894:	ldr	x1, [x19]
  41e898:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e89c:	add	x0, x0, #0x911
  41e8a0:	b	41e86c <notice_finished_file@@Base+0x464>
  41e8a4:	stp	x29, x30, [sp, #-80]!
  41e8a8:	str	x28, [sp, #16]
  41e8ac:	stp	x24, x23, [sp, #32]
  41e8b0:	stp	x22, x21, [sp, #48]
  41e8b4:	stp	x20, x19, [sp, #64]
  41e8b8:	mov	x29, sp
  41e8bc:	sub	sp, sp, #0x2, lsl #12
  41e8c0:	sub	sp, sp, #0x90
  41e8c4:	mov	x20, x0
  41e8c8:	sub	x1, x29, #0x80
  41e8cc:	mov	x0, x20
  41e8d0:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  41e8d4:	mov	w19, w0
  41e8d8:	cmn	w0, #0x1
  41e8dc:	b.ne	41e8f0 <notice_finished_file@@Base+0x4e8>  // b.any
  41e8e0:	bl	406f00 <__errno_location@plt>
  41e8e4:	ldr	w8, [x0]
  41e8e8:	cmp	w8, #0x4
  41e8ec:	b.eq	41e8c8 <notice_finished_file@@Base+0x4c0>  // b.none
  41e8f0:	cbz	w19, 41e928 <notice_finished_file@@Base+0x520>
  41e8f4:	bl	406f00 <__errno_location@plt>
  41e8f8:	ldr	w8, [x0]
  41e8fc:	mov	w19, #0x1                   	// #1
  41e900:	cmp	w8, #0x2
  41e904:	b.eq	41e938 <notice_finished_file@@Base+0x530>  // b.none
  41e908:	cmp	w8, #0x14
  41e90c:	b.eq	41e938 <notice_finished_file@@Base+0x530>  // b.none
  41e910:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e914:	add	x0, x0, #0x8ed
  41e918:	mov	x1, x20
  41e91c:	bl	41928c <perror_with_name@@Base>
  41e920:	mov	w19, #0x1                   	// #1
  41e924:	b	41eaa8 <notice_finished_file@@Base+0x6a0>
  41e928:	ldp	x1, x2, [x29, #-40]
  41e92c:	mov	x0, x20
  41e930:	bl	40b950 <file_timestamp_cons@@Base>
  41e934:	mov	x19, x0
  41e938:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41e93c:	ldr	w8, [x8, #3272]
  41e940:	cbz	w8, 41eaa8 <notice_finished_file@@Base+0x6a0>
  41e944:	mov	x0, x20
  41e948:	bl	4067d0 <strlen@plt>
  41e94c:	cmp	x0, #0x1, lsl #12
  41e950:	b.hi	41eaa8 <notice_finished_file@@Base+0x6a0>  // b.pmore
  41e954:	add	x0, sp, #0x1, lsl #12
  41e958:	add	x0, x0, #0xc
  41e95c:	add	x23, sp, #0x1, lsl #12
  41e960:	mov	x1, x20
  41e964:	add	x23, x23, #0xc
  41e968:	bl	406d90 <strcpy@plt>
  41e96c:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e970:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41e974:	add	x24, sp, #0x8
  41e978:	add	x20, x20, #0x928
  41e97c:	add	x21, x21, #0x920
  41e980:	b	41e99c <notice_finished_file@@Base+0x594>
  41e984:	add	x1, sp, #0x1, lsl #12
  41e988:	add	x1, x1, #0xc
  41e98c:	mov	x0, x20
  41e990:	bl	41928c <perror_with_name@@Base>
  41e994:	mov	w8, wzr
  41e998:	tbz	w8, #0, 41eaa8 <notice_finished_file@@Base+0x6a0>
  41e99c:	add	x0, sp, #0x1, lsl #12
  41e9a0:	add	x0, x0, #0xc
  41e9a4:	sub	x1, x29, #0x80
  41e9a8:	bl	424f00 <__libc_csu_fini@@Base+0x38>
  41e9ac:	mov	w22, w0
  41e9b0:	cmn	w0, #0x1
  41e9b4:	b.ne	41e9c8 <notice_finished_file@@Base+0x5c0>  // b.any
  41e9b8:	bl	406f00 <__errno_location@plt>
  41e9bc:	ldr	w8, [x0]
  41e9c0:	cmp	w8, #0x4
  41e9c4:	b.eq	41e99c <notice_finished_file@@Base+0x594>  // b.none
  41e9c8:	cbz	w22, 41e9f8 <notice_finished_file@@Base+0x5f0>
  41e9cc:	bl	406f00 <__errno_location@plt>
  41e9d0:	ldr	w9, [x0]
  41e9d4:	mov	w8, wzr
  41e9d8:	cmp	w9, #0x2
  41e9dc:	b.eq	41e998 <notice_finished_file@@Base+0x590>  // b.none
  41e9e0:	cmp	w9, #0x14
  41e9e4:	b.eq	41e998 <notice_finished_file@@Base+0x590>  // b.none
  41e9e8:	add	x1, sp, #0x1, lsl #12
  41e9ec:	add	x1, x1, #0xc
  41e9f0:	mov	x0, x21
  41e9f4:	b	41e990 <notice_finished_file@@Base+0x588>
  41e9f8:	ldur	w8, [x29, #-112]
  41e9fc:	and	w8, w8, #0xf000
  41ea00:	cmp	w8, #0xa, lsl #12
  41ea04:	b.ne	41e994 <notice_finished_file@@Base+0x58c>  // b.any
  41ea08:	ldp	x1, x2, [x29, #-40]
  41ea0c:	add	x0, sp, #0x1, lsl #12
  41ea10:	add	x0, x0, #0xc
  41ea14:	bl	40b950 <file_timestamp_cons@@Base>
  41ea18:	cmp	x0, x19
  41ea1c:	csel	x19, x0, x19, hi  // hi = pmore
  41ea20:	add	x0, sp, #0x1, lsl #12
  41ea24:	add	x0, x0, #0xc
  41ea28:	add	x1, sp, #0x8
  41ea2c:	mov	w2, #0x1000                	// #4096
  41ea30:	bl	406860 <readlink@plt>
  41ea34:	mov	x22, x0
  41ea38:	cmn	x0, #0x1
  41ea3c:	b.ne	41ea50 <notice_finished_file@@Base+0x648>  // b.any
  41ea40:	bl	406f00 <__errno_location@plt>
  41ea44:	ldr	w8, [x0]
  41ea48:	cmp	w8, #0x4
  41ea4c:	b.eq	41ea20 <notice_finished_file@@Base+0x618>  // b.none
  41ea50:	tbnz	x22, #63, 41e984 <notice_finished_file@@Base+0x57c>
  41ea54:	strb	wzr, [x24, x22]
  41ea58:	ldrb	w8, [sp, #8]
  41ea5c:	cmp	w8, #0x2f
  41ea60:	b.eq	41ea90 <notice_finished_file@@Base+0x688>  // b.none
  41ea64:	add	x0, sp, #0x1, lsl #12
  41ea68:	add	x0, x0, #0xc
  41ea6c:	mov	w1, #0x2f                  	// #47
  41ea70:	bl	406bc0 <strrchr@plt>
  41ea74:	cbz	x0, 41ea90 <notice_finished_file@@Base+0x688>
  41ea78:	sub	x8, x22, x23
  41ea7c:	add	x8, x8, x0
  41ea80:	cmp	x8, #0xffe
  41ea84:	b.gt	41e994 <notice_finished_file@@Base+0x58c>
  41ea88:	add	x0, x0, #0x1
  41ea8c:	b	41ea98 <notice_finished_file@@Base+0x690>
  41ea90:	add	x0, sp, #0x1, lsl #12
  41ea94:	add	x0, x0, #0xc
  41ea98:	add	x1, sp, #0x8
  41ea9c:	bl	406d90 <strcpy@plt>
  41eaa0:	mov	w8, #0x1                   	// #1
  41eaa4:	b	41e998 <notice_finished_file@@Base+0x590>
  41eaa8:	mov	x0, x19
  41eaac:	add	sp, sp, #0x2, lsl #12
  41eab0:	add	sp, sp, #0x90
  41eab4:	ldp	x20, x19, [sp, #64]
  41eab8:	ldp	x22, x21, [sp, #48]
  41eabc:	ldp	x24, x23, [sp, #32]
  41eac0:	ldr	x28, [sp, #16]
  41eac4:	ldp	x29, x30, [sp], #80
  41eac8:	ret
  41eacc:	sub	sp, sp, #0xb0
  41ead0:	stp	x20, x19, [sp, #160]
  41ead4:	mov	x20, x0
  41ead8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41eadc:	add	x0, x0, #0x93c
  41eae0:	stp	x29, x30, [sp, #80]
  41eae4:	stp	x28, x27, [sp, #96]
  41eae8:	stp	x26, x25, [sp, #112]
  41eaec:	stp	x24, x23, [sp, #128]
  41eaf0:	stp	x22, x21, [sp, #144]
  41eaf4:	add	x29, sp, #0x50
  41eaf8:	mov	x19, x1
  41eafc:	bl	40a57c <variable_expand@@Base>
  41eb00:	bl	4180bc <xstrdup@@Base>
  41eb04:	mov	x21, x0
  41eb08:	add	x0, x20, #0x2
  41eb0c:	str	x0, [sp, #40]
  41eb10:	bl	4067d0 <strlen@plt>
  41eb14:	cmp	x19, #0x0
  41eb18:	sub	x8, x29, #0x8
  41eb1c:	mov	w23, wzr
  41eb20:	mov	x27, xzr
  41eb24:	str	x21, [sp, #8]
  41eb28:	stur	x21, [x29, #-16]
  41eb2c:	adrp	x25, 43f000 <stdio_traced@@Base+0x1a38>
  41eb30:	adrp	x21, 43f000 <stdio_traced@@Base+0x1a38>
  41eb34:	csel	x8, x8, xzr, ne  // ne = any
  41eb38:	str	wzr, [sp, #20]
  41eb3c:	stp	x8, x0, [sp, #24]
  41eb40:	b	41eb50 <notice_finished_file@@Base+0x748>
  41eb44:	mov	x19, x26
  41eb48:	cmp	w8, #0x3
  41eb4c:	b.eq	41ede0 <notice_finished_file@@Base+0x9d8>  // b.none
  41eb50:	sub	x0, x29, #0x10
  41eb54:	sub	x1, x29, #0x18
  41eb58:	bl	418158 <find_next_token@@Base>
  41eb5c:	cbz	x0, 41ede0 <notice_finished_file@@Base+0x9d8>
  41eb60:	mov	x20, x0
  41eb64:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  41eb68:	add	x0, x0, #0x989
  41eb6c:	mov	x26, x19
  41eb70:	bl	40a57c <variable_expand@@Base>
  41eb74:	ldur	x8, [x29, #-24]
  41eb78:	mov	x28, x0
  41eb7c:	mov	x0, x20
  41eb80:	ldrb	w22, [x20, x8]
  41eb84:	strb	wzr, [x20, x8]
  41eb88:	bl	41ae68 <find_percent@@Base>
  41eb8c:	cbz	x0, 41ebd0 <notice_finished_file@@Base+0x7c8>
  41eb90:	mov	x19, x25
  41eb94:	sub	x25, x0, x20
  41eb98:	mov	x24, x0
  41eb9c:	mov	x0, x28
  41eba0:	mov	x1, x20
  41eba4:	mov	x2, x25
  41eba8:	bl	409c78 <variable_buffer_output@@Base>
  41ebac:	ldp	x2, x1, [sp, #32]
  41ebb0:	bl	409c78 <variable_buffer_output@@Base>
  41ebb4:	ldur	x8, [x29, #-24]
  41ebb8:	add	x1, x24, #0x1
  41ebbc:	sub	x2, x8, x25
  41ebc0:	mov	x25, x19
  41ebc4:	bl	409c78 <variable_buffer_output@@Base>
  41ebc8:	mov	w8, wzr
  41ebcc:	b	41ec08 <notice_finished_file@@Base+0x800>
  41ebd0:	mov	x0, x20
  41ebd4:	bl	4067d0 <strlen@plt>
  41ebd8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ebdc:	mov	x24, x0
  41ebe0:	mov	w2, #0x5                   	// #5
  41ebe4:	mov	x0, xzr
  41ebe8:	add	x1, x1, #0x94c
  41ebec:	bl	406e50 <dcgettext@plt>
  41ebf0:	mov	x2, x0
  41ebf4:	mov	x0, xzr
  41ebf8:	mov	x1, x24
  41ebfc:	mov	x3, x20
  41ec00:	bl	418f84 <error@@Base>
  41ec04:	mov	w8, #0x2                   	// #2
  41ec08:	ldur	x9, [x29, #-24]
  41ec0c:	strb	w22, [x20, x9]
  41ec10:	cbnz	w8, 41eb44 <notice_finished_file@@Base+0x73c>
  41ec14:	mov	x0, x28
  41ec18:	bl	41e8a4 <notice_finished_file@@Base+0x49c>
  41ec1c:	cmp	x0, #0x1
  41ec20:	mov	x19, x26
  41ec24:	stur	x0, [x29, #-8]
  41ec28:	b.ne	41ecc8 <notice_finished_file@@Base+0x8c0>  // b.any
  41ec2c:	ldr	x1, [sp, #24]
  41ec30:	sub	x2, x29, #0x1c
  41ec34:	sub	x3, x29, #0x20
  41ec38:	mov	x0, x28
  41ec3c:	bl	423a64 <vpath_search@@Base>
  41ec40:	cbz	x0, 41ec80 <notice_finished_file@@Base+0x878>
  41ec44:	cbz	x27, 41ec68 <notice_finished_file@@Base+0x860>
  41ec48:	ldur	w8, [x29, #-28]
  41ec4c:	cmp	w8, w23
  41ec50:	b.cc	41ec68 <notice_finished_file@@Base+0x860>  // b.lo, b.ul, b.last
  41ec54:	b.ne	41ec80 <notice_finished_file@@Base+0x878>  // b.any
  41ec58:	ldur	w8, [x29, #-32]
  41ec5c:	ldr	w9, [sp, #20]
  41ec60:	cmp	w8, w9
  41ec64:	b.cs	41ec80 <notice_finished_file@@Base+0x878>  // b.hs, b.nlast
  41ec68:	ldp	w8, w23, [x29, #-32]
  41ec6c:	str	w8, [sp, #20]
  41ec70:	cbz	x19, 41ec7c <notice_finished_file@@Base+0x874>
  41ec74:	ldur	x8, [x29, #-8]
  41ec78:	str	x8, [x19]
  41ec7c:	mov	x27, x0
  41ec80:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41ec84:	ldr	x20, [x8, #1672]
  41ec88:	cbz	x20, 41ece4 <notice_finished_file@@Base+0x8dc>
  41ec8c:	mov	x0, x28
  41ec90:	bl	4067d0 <strlen@plt>
  41ec94:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ec98:	cmp	x20, x0
  41ec9c:	add	x22, x22, #0x977
  41eca0:	b.cs	41ed5c <notice_finished_file@@Base+0x954>  // b.hs, b.nlast
  41eca4:	ldr	x9, [x25, #1680]
  41eca8:	ldr	x8, [x21, #1664]
  41ecac:	adrp	x10, 43f000 <stdio_traced@@Base+0x1a38>
  41ecb0:	str	x0, [x10, #1672]
  41ecb4:	add	x9, x0, x9
  41ecb8:	add	x1, x9, #0x2
  41ecbc:	mov	x0, x8
  41ecc0:	bl	41803c <xrealloc@@Base>
  41ecc4:	b	41ed58 <notice_finished_file@@Base+0x950>
  41ecc8:	cbz	x19, 41ecd0 <notice_finished_file@@Base+0x8c8>
  41eccc:	str	x0, [x19]
  41ecd0:	mov	x0, x28
  41ecd4:	bl	420f28 <strcache_add@@Base>
  41ecd8:	mov	x27, x0
  41ecdc:	mov	w8, #0x3                   	// #3
  41ece0:	b	41eb48 <notice_finished_file@@Base+0x740>
  41ece4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41ece8:	ldr	w20, [x8, #1688]
  41ecec:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ecf0:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ecf4:	add	x22, x22, #0x988
  41ecf8:	add	x0, x0, #0x937
  41ecfc:	b	41ed08 <notice_finished_file@@Base+0x900>
  41ed00:	ldr	x0, [x22], #8
  41ed04:	cbz	x0, 41ed20 <notice_finished_file@@Base+0x918>
  41ed08:	bl	4067d0 <strlen@plt>
  41ed0c:	ldr	x8, [x25, #1680]
  41ed10:	cmp	x0, x8
  41ed14:	b.ls	41ed00 <notice_finished_file@@Base+0x8f8>  // b.plast
  41ed18:	str	x0, [x25, #1680]
  41ed1c:	b	41ed00 <notice_finished_file@@Base+0x8f8>
  41ed20:	add	w8, w20, #0x3
  41ed24:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  41ed28:	mov	x0, x28
  41ed2c:	str	w8, [x9, #1688]
  41ed30:	bl	4067d0 <strlen@plt>
  41ed34:	ldr	x8, [x25, #1680]
  41ed38:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  41ed3c:	str	x0, [x9, #1672]
  41ed40:	add	x8, x0, x8
  41ed44:	add	x0, x8, #0x2
  41ed48:	bl	418070 <xmalloc@@Base>
  41ed4c:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ed50:	mov	x19, x26
  41ed54:	add	x22, x22, #0x977
  41ed58:	str	x0, [x21, #1664]
  41ed5c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  41ed60:	ldr	w8, [x8, #1688]
  41ed64:	adrp	x24, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ed68:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ed6c:	add	x24, x24, #0x988
  41ed70:	mvn	w20, w8
  41ed74:	add	x2, x2, #0x937
  41ed78:	b	41ed8c <notice_finished_file@@Base+0x984>
  41ed7c:	mov	w23, w20
  41ed80:	ldr	x2, [x24], #8
  41ed84:	add	w20, w20, #0x1
  41ed88:	cbz	x2, 41edd8 <notice_finished_file@@Base+0x9d0>
  41ed8c:	ldr	x0, [x21, #1664]
  41ed90:	mov	x1, x22
  41ed94:	mov	x3, x28
  41ed98:	bl	406870 <sprintf@plt>
  41ed9c:	ldr	x0, [x21, #1664]
  41eda0:	bl	41e8a4 <notice_finished_file@@Base+0x49c>
  41eda4:	cmp	x0, #0x1
  41eda8:	stur	x0, [x29, #-8]
  41edac:	b.eq	41ed80 <notice_finished_file@@Base+0x978>  // b.none
  41edb0:	cbz	x27, 41edbc <notice_finished_file@@Base+0x9b4>
  41edb4:	cmp	w20, w23
  41edb8:	b.cs	41ed80 <notice_finished_file@@Base+0x978>  // b.hs, b.nlast
  41edbc:	ldr	x0, [x21, #1664]
  41edc0:	bl	420f28 <strcache_add@@Base>
  41edc4:	mov	x27, x0
  41edc8:	cbz	x19, 41ed7c <notice_finished_file@@Base+0x974>
  41edcc:	ldur	x8, [x29, #-8]
  41edd0:	str	x8, [x19]
  41edd4:	b	41ed7c <notice_finished_file@@Base+0x974>
  41edd8:	mov	w8, wzr
  41eddc:	b	41eb48 <notice_finished_file@@Base+0x740>
  41ede0:	ldr	x0, [sp, #8]
  41ede4:	bl	406cf0 <free@plt>
  41ede8:	mov	x0, x27
  41edec:	ldp	x20, x19, [sp, #160]
  41edf0:	ldp	x22, x21, [sp, #144]
  41edf4:	ldp	x24, x23, [sp, #128]
  41edf8:	ldp	x26, x25, [sp, #112]
  41edfc:	ldp	x28, x27, [sp, #96]
  41ee00:	ldp	x29, x30, [sp, #80]
  41ee04:	add	sp, sp, #0xb0
  41ee08:	ret
  41ee0c:	sub	sp, sp, #0xc0
  41ee10:	stp	x22, x21, [sp, #160]
  41ee14:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  41ee18:	ldrb	w8, [x22, #3236]
  41ee1c:	stp	x26, x25, [sp, #128]
  41ee20:	stp	x20, x19, [sp, #176]
  41ee24:	mov	w19, w1
  41ee28:	mov	x25, x0
  41ee2c:	stp	x29, x30, [sp, #96]
  41ee30:	stp	x28, x27, [sp, #112]
  41ee34:	stp	x24, x23, [sp, #144]
  41ee38:	add	x29, sp, #0x60
  41ee3c:	tbz	w8, #1, 41ee70 <notice_finished_file@@Base+0xa68>
  41ee40:	mov	w0, w19
  41ee44:	bl	417e84 <print_spaces@@Base>
  41ee48:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ee4c:	add	x1, x1, #0x3c0
  41ee50:	mov	w2, #0x5                   	// #5
  41ee54:	mov	x0, xzr
  41ee58:	bl	406e50 <dcgettext@plt>
  41ee5c:	ldr	x1, [x25]
  41ee60:	bl	406ef0 <printf@plt>
  41ee64:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41ee68:	ldr	x0, [x8, #2512]
  41ee6c:	bl	406d80 <fflush@plt>
  41ee70:	ldr	w8, [x25, #136]
  41ee74:	tbnz	w8, #10, 41eea8 <notice_finished_file@@Base+0xaa0>
  41ee78:	ubfx	w9, w8, #2, #2
  41ee7c:	cmp	w9, #0x2
  41ee80:	b.cc	41eed8 <notice_finished_file@@Base+0xad0>  // b.lo, b.ul, b.last
  41ee84:	cmp	w9, #0x3
  41ee88:	b.eq	41efd0 <notice_finished_file@@Base+0xbc8>  // b.none
  41ee8c:	ldrb	w8, [x22, #3236]
  41ee90:	tbz	w8, #1, 41f58c <notice_finished_file@@Base+0x1184>
  41ee94:	mov	w0, w19
  41ee98:	bl	417e84 <print_spaces@@Base>
  41ee9c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41eea0:	add	x1, x1, #0x432
  41eea4:	b	41eec4 <notice_finished_file@@Base+0xabc>
  41eea8:	ldr	w9, [x22, #3236]
  41eeac:	tbnz	w8, #1, 41ef7c <notice_finished_file@@Base+0xb74>
  41eeb0:	tbz	w9, #1, 41f58c <notice_finished_file@@Base+0x1184>
  41eeb4:	mov	w0, w19
  41eeb8:	bl	417e84 <print_spaces@@Base>
  41eebc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41eec0:	add	x1, x1, #0x40f
  41eec4:	mov	w2, #0x5                   	// #5
  41eec8:	mov	x0, xzr
  41eecc:	bl	406e50 <dcgettext@plt>
  41eed0:	ldr	x1, [x25]
  41eed4:	b	41f57c <notice_finished_file@@Base+0x1174>
  41eed8:	ldr	x9, [x25, #104]
  41eedc:	lsr	w10, w8, #16
  41eee0:	bfi	w8, w10, #19, #1
  41eee4:	str	w8, [x25, #136]
  41eee8:	cmp	x9, #0x0
  41eeec:	csel	x8, x25, x9, eq  // eq = none
  41eef0:	ldr	w9, [x8, #136]
  41eef4:	orr	w9, w9, #0x200
  41eef8:	str	w9, [x8, #136]
  41eefc:	ldr	x24, [x25, #112]
  41ef00:	add	w8, w19, #0x1
  41ef04:	str	w8, [sp, #48]
  41ef08:	cbnz	x24, 41ef1c <notice_finished_file@@Base+0xb14>
  41ef0c:	mov	w1, #0x1                   	// #1
  41ef10:	mov	x0, x25
  41ef14:	bl	41dec8 <f_mtime@@Base>
  41ef18:	mov	x24, x0
  41ef1c:	mov	x8, x25
  41ef20:	str	w19, [sp, #12]
  41ef24:	mov	x19, x8
  41ef28:	ldr	x8, [x8, #72]
  41ef2c:	cbnz	x8, 41ef24 <notice_finished_file@@Base+0xb1c>
  41ef30:	cmp	x24, #0x1
  41ef34:	cset	w20, eq  // eq = none
  41ef38:	b.ne	41f014 <notice_finished_file@@Base+0xc0c>  // b.any
  41ef3c:	ldrb	w8, [x22, #3236]
  41ef40:	tbz	w8, #0, 41ef74 <notice_finished_file@@Base+0xb6c>
  41ef44:	ldr	w0, [sp, #48]
  41ef48:	bl	417e84 <print_spaces@@Base>
  41ef4c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ef50:	add	x1, x1, #0x46b
  41ef54:	mov	w2, #0x5                   	// #5
  41ef58:	mov	x0, xzr
  41ef5c:	bl	406e50 <dcgettext@plt>
  41ef60:	ldr	x1, [x19]
  41ef64:	bl	406ef0 <printf@plt>
  41ef68:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41ef6c:	ldr	x0, [x8, #2512]
  41ef70:	bl	406d80 <fflush@plt>
  41ef74:	mov	w8, #0x1                   	// #1
  41ef78:	b	41f090 <notice_finished_file@@Base+0xc88>
  41ef7c:	tbz	w9, #1, 41efb0 <notice_finished_file@@Base+0xba8>
  41ef80:	mov	w0, w19
  41ef84:	bl	417e84 <print_spaces@@Base>
  41ef88:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41ef8c:	add	x1, x1, #0x3df
  41ef90:	mov	w2, #0x5                   	// #5
  41ef94:	mov	x0, xzr
  41ef98:	bl	406e50 <dcgettext@plt>
  41ef9c:	ldr	x1, [x25]
  41efa0:	bl	406ef0 <printf@plt>
  41efa4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41efa8:	ldr	x0, [x8, #2512]
  41efac:	bl	406d80 <fflush@plt>
  41efb0:	ldr	w8, [x25, #136]
  41efb4:	mov	w9, #0x90000               	// #589824
  41efb8:	and	w8, w8, w9
  41efbc:	cmp	w8, #0x80, lsl #12
  41efc0:	b.ne	41f008 <notice_finished_file@@Base+0xc00>  // b.any
  41efc4:	mov	x0, x25
  41efc8:	bl	41fb94 <notice_finished_file@@Base+0x178c>
  41efcc:	b	41f008 <notice_finished_file@@Base+0xc00>
  41efd0:	ldrb	w8, [x22, #3236]
  41efd4:	tbz	w8, #1, 41f008 <notice_finished_file@@Base+0xc00>
  41efd8:	mov	w0, w19
  41efdc:	bl	417e84 <print_spaces@@Base>
  41efe0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41efe4:	add	x1, x1, #0x44d
  41efe8:	mov	w2, #0x5                   	// #5
  41efec:	mov	x0, xzr
  41eff0:	bl	406e50 <dcgettext@plt>
  41eff4:	ldr	x1, [x25]
  41eff8:	bl	406ef0 <printf@plt>
  41effc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f000:	ldr	x0, [x8, #2512]
  41f004:	bl	406d80 <fflush@plt>
  41f008:	ldr	w8, [x25, #136]
  41f00c:	and	w25, w8, #0x3
  41f010:	b	41f590 <notice_finished_file@@Base+0x1188>
  41f014:	mov	x9, #0xffffffffffffc9ff    	// #-13825
  41f018:	sub	x8, x24, #0x3
  41f01c:	movk	x9, #0xfb9a, lsl #16
  41f020:	cmp	x8, x9
  41f024:	str	x24, [sp, #40]
  41f028:	b.hi	41f094 <notice_finished_file@@Base+0xc8c>  // b.pmore
  41f02c:	ldrb	w8, [x19, #136]
  41f030:	str	x24, [sp, #40]
  41f034:	tbz	w8, #7, 41f094 <notice_finished_file@@Base+0xc8c>
  41f038:	mov	w8, #0xfffd                	// #65533
  41f03c:	movk	w8, #0x3fff, lsl #16
  41f040:	add	w8, w24, w8
  41f044:	ands	w21, w8, #0x3fffffff
  41f048:	b.eq	41f080 <notice_finished_file@@Base+0xc78>  // b.none
  41f04c:	ldr	x0, [x19]
  41f050:	bl	4067d0 <strlen@plt>
  41f054:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f058:	mov	x23, x0
  41f05c:	add	x1, x1, #0x486
  41f060:	mov	w2, #0x5                   	// #5
  41f064:	mov	x0, xzr
  41f068:	bl	406e50 <dcgettext@plt>
  41f06c:	ldr	x3, [x19]
  41f070:	mov	x2, x0
  41f074:	mov	x0, xzr
  41f078:	mov	x1, x23
  41f07c:	bl	418f84 <error@@Base>
  41f080:	mov	w8, #0xc9ff                	// #51711
  41f084:	movk	w8, #0x3b9a, lsl #16
  41f088:	sub	w8, w8, w21
  41f08c:	add	x8, x24, w8, sxtw
  41f090:	str	x8, [sp, #40]
  41f094:	ldr	w8, [x19, #136]
  41f098:	tbnz	w8, #13, 41f114 <notice_finished_file@@Base+0xd0c>
  41f09c:	tbnz	w8, #8, 41f114 <notice_finished_file@@Base+0xd0c>
  41f0a0:	ldr	x8, [x19, #32]
  41f0a4:	cbnz	x8, 41f114 <notice_finished_file@@Base+0xd0c>
  41f0a8:	ldr	w1, [sp, #48]
  41f0ac:	mov	x0, x19
  41f0b0:	bl	410538 <try_implicit_rule@@Base>
  41f0b4:	ldr	w8, [x22, #3236]
  41f0b8:	cbz	w0, 41f0d4 <notice_finished_file@@Base+0xccc>
  41f0bc:	tbz	w8, #3, 41f108 <notice_finished_file@@Base+0xd00>
  41f0c0:	ldr	w0, [sp, #48]
  41f0c4:	bl	417e84 <print_spaces@@Base>
  41f0c8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f0cc:	add	x1, x1, #0x4d3
  41f0d0:	b	41f0e8 <notice_finished_file@@Base+0xce0>
  41f0d4:	tbz	w8, #3, 41f108 <notice_finished_file@@Base+0xd00>
  41f0d8:	ldr	w0, [sp, #48]
  41f0dc:	bl	417e84 <print_spaces@@Base>
  41f0e0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f0e4:	add	x1, x1, #0x4f5
  41f0e8:	mov	w2, #0x5                   	// #5
  41f0ec:	mov	x0, xzr
  41f0f0:	bl	406e50 <dcgettext@plt>
  41f0f4:	ldr	x1, [x19]
  41f0f8:	bl	406ef0 <printf@plt>
  41f0fc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f100:	ldr	x0, [x8, #2512]
  41f104:	bl	406d80 <fflush@plt>
  41f108:	ldr	w8, [x19, #136]
  41f10c:	orr	w8, w8, #0x100
  41f110:	str	w8, [x19, #136]
  41f114:	ldr	x8, [x19, #32]
  41f118:	str	x25, [sp, #16]
  41f11c:	cbz	x8, 41f5b4 <notice_finished_file@@Base+0x11ac>
  41f120:	stur	x19, [x29, #-24]
  41f124:	ldr	x8, [x19, #48]
  41f128:	mov	w25, wzr
  41f12c:	mov	w21, wzr
  41f130:	add	x28, x19, #0x18
  41f134:	sub	x9, x29, #0x28
  41f138:	str	x24, [sp, #24]
  41f13c:	stur	x8, [x29, #-40]
  41f140:	b	41f14c <notice_finished_file@@Base+0xd44>
  41f144:	ldr	x9, [sp, #32]
  41f148:	cbz	x9, 41f354 <notice_finished_file@@Base+0xf4c>
  41f14c:	ldr	x8, [x9, #16]
  41f150:	ldr	x9, [x9]
  41f154:	mov	x22, xzr
  41f158:	ldr	x23, [x8, #24]
  41f15c:	str	x9, [sp, #32]
  41f160:	b	41f1cc <notice_finished_file@@Base+0xdc4>
  41f164:	ldr	x0, [x19]
  41f168:	bl	4067d0 <strlen@plt>
  41f16c:	ldr	x8, [x26]
  41f170:	mov	x27, x0
  41f174:	mov	x0, x8
  41f178:	bl	4067d0 <strlen@plt>
  41f17c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f180:	add	x27, x0, x27
  41f184:	mov	w2, #0x5                   	// #5
  41f188:	mov	x0, xzr
  41f18c:	add	x1, x1, #0x537
  41f190:	bl	406e50 <dcgettext@plt>
  41f194:	ldr	x8, [x23, #16]
  41f198:	ldr	x3, [x19]
  41f19c:	mov	x2, x0
  41f1a0:	mov	x0, xzr
  41f1a4:	ldr	x4, [x8]
  41f1a8:	mov	x1, x27
  41f1ac:	bl	418f84 <error@@Base>
  41f1b0:	ldr	x8, [x23]
  41f1b4:	cmp	x22, #0x0
  41f1b8:	csel	x9, x28, x22, eq  // eq = none
  41f1bc:	str	x8, [x9]
  41f1c0:	ldr	x23, [x23]
  41f1c4:	mov	w8, wzr
  41f1c8:	cbnz	w8, 41f144 <notice_finished_file@@Base+0xd3c>
  41f1cc:	cbz	x23, 41f144 <notice_finished_file@@Base+0xd3c>
  41f1d0:	ldr	x0, [x23, #16]
  41f1d4:	ldr	x8, [x0, #72]
  41f1d8:	cbz	x8, 41f1ec <notice_finished_file@@Base+0xde4>
  41f1dc:	mov	x0, x8
  41f1e0:	ldr	x8, [x8, #72]
  41f1e4:	cbnz	x8, 41f1dc <notice_finished_file@@Base+0xdd4>
  41f1e8:	str	x0, [x23, #16]
  41f1ec:	ldr	x27, [x0, #112]
  41f1f0:	cbnz	x27, 41f200 <notice_finished_file@@Base+0xdf8>
  41f1f4:	mov	w1, #0x1                   	// #1
  41f1f8:	bl	41dec8 <f_mtime@@Base>
  41f1fc:	mov	x27, x0
  41f200:	ldr	x26, [x23, #16]
  41f204:	ldr	x8, [x26, #72]
  41f208:	cbz	x8, 41f21c <notice_finished_file@@Base+0xe14>
  41f20c:	mov	x26, x8
  41f210:	ldr	x8, [x8, #72]
  41f214:	cbnz	x8, 41f20c <notice_finished_file@@Base+0xe04>
  41f218:	str	x26, [x23, #16]
  41f21c:	ldr	x8, [x26, #104]
  41f220:	cmp	x8, #0x0
  41f224:	csel	x8, x26, x8, eq  // eq = none
  41f228:	ldrb	w8, [x8, #137]
  41f22c:	tbnz	w8, #1, 41f164 <notice_finished_file@@Base+0xd5c>
  41f230:	str	x19, [x26, #96]
  41f234:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f238:	ldr	w8, [x8, #3300]
  41f23c:	stur	w20, [x29, #-44]
  41f240:	cbz	w8, 41f260 <notice_finished_file@@Base+0xe58>
  41f244:	ldr	w9, [x19, #136]
  41f248:	ldr	w8, [x26, #136]
  41f24c:	lsr	w9, w9, #16
  41f250:	and	w24, w8, #0x10000
  41f254:	bfi	w8, w9, #16, #1
  41f258:	str	w8, [x26, #136]
  41f25c:	b	41f264 <notice_finished_file@@Base+0xe5c>
  41f260:	mov	w24, wzr
  41f264:	ldr	x0, [x23, #16]
  41f268:	ldr	w1, [sp, #48]
  41f26c:	ldr	x2, [sp, #40]
  41f270:	sub	x3, x29, #0x2c
  41f274:	bl	41fcec <notice_finished_file@@Base+0x18e4>
  41f278:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f27c:	ldr	w8, [x8, #3300]
  41f280:	cmp	w0, w25
  41f284:	csel	w25, w0, w25, hi  // hi = pmore
  41f288:	cbz	w8, 41f2a0 <notice_finished_file@@Base+0xe98>
  41f28c:	ldr	x8, [x23, #16]
  41f290:	ldr	w9, [x8, #136]
  41f294:	and	w9, w9, #0xfffeffff
  41f298:	orr	w9, w9, w24
  41f29c:	str	w9, [x8, #136]
  41f2a0:	ldr	x0, [x23, #16]
  41f2a4:	ldrb	w10, [x23, #33]
  41f2a8:	ldur	w9, [x29, #-44]
  41f2ac:	ldr	x8, [x0, #72]
  41f2b0:	tst	w10, #0x2
  41f2b4:	csel	w20, w9, w20, eq  // eq = none
  41f2b8:	cbz	x8, 41f2cc <notice_finished_file@@Base+0xec4>
  41f2bc:	mov	x0, x8
  41f2c0:	ldr	x8, [x8, #72]
  41f2c4:	cbnz	x8, 41f2bc <notice_finished_file@@Base+0xeb4>
  41f2c8:	str	x0, [x23, #16]
  41f2cc:	ldr	x8, [x0, #104]
  41f2d0:	cmp	x8, #0x0
  41f2d4:	csel	x8, x0, x8, eq  // eq = none
  41f2d8:	ldr	w9, [x8, #136]
  41f2dc:	ldr	x8, [x8, #56]
  41f2e0:	ubfx	w9, w9, #2, #2
  41f2e4:	sub	w9, w9, #0x1
  41f2e8:	cmp	w9, #0x2
  41f2ec:	cset	w9, cc  // cc = lo, ul, last
  41f2f0:	orr	w21, w21, w9
  41f2f4:	cbnz	x8, 41f2d8 <notice_finished_file@@Base+0xed0>
  41f2f8:	cbz	w25, 41f314 <notice_finished_file@@Base+0xf0c>
  41f2fc:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41f300:	ldr	w8, [x8, #36]
  41f304:	cbnz	w8, 41f314 <notice_finished_file@@Base+0xf0c>
  41f308:	mov	w8, #0x1                   	// #1
  41f30c:	cbz	w8, 41f1cc <notice_finished_file@@Base+0xdc4>
  41f310:	b	41f144 <notice_finished_file@@Base+0xd3c>
  41f314:	cbnz	w21, 41f34c <notice_finished_file@@Base+0xf44>
  41f318:	ldr	x8, [x0, #112]
  41f31c:	cbnz	x8, 41f32c <notice_finished_file@@Base+0xf24>
  41f320:	mov	w1, #0x1                   	// #1
  41f324:	bl	41dec8 <f_mtime@@Base>
  41f328:	mov	x8, x0
  41f32c:	ldrh	w9, [x23, #32]
  41f330:	cmp	x8, x27
  41f334:	ccmp	x27, #0x1, #0x4, eq  // eq = none
  41f338:	mov	w8, #0x100                 	// #256
  41f33c:	csel	w8, w8, wzr, eq  // eq = none
  41f340:	and	w9, w9, #0xfffffeff
  41f344:	orr	w8, w8, w9
  41f348:	strh	w8, [x23, #32]
  41f34c:	mov	x22, x23
  41f350:	b	41f1c0 <notice_finished_file@@Base+0xdb8>
  41f354:	adrp	x27, 43c000 <memcpy@GLIBC_2.17>
  41f358:	ldr	w8, [x27, #3296]
  41f35c:	orr	w8, w8, w20
  41f360:	cbz	w8, 41f4d4 <notice_finished_file@@Base+0x10cc>
  41f364:	ldr	x22, [x19, #24]
  41f368:	cbz	x22, 41f4d4 <notice_finished_file@@Base+0x10cc>
  41f36c:	ldr	x28, [sp, #16]
  41f370:	mov	w23, #0x100                 	// #256
  41f374:	b	41f384 <notice_finished_file@@Base+0xf7c>
  41f378:	cbz	w21, 41f484 <notice_finished_file@@Base+0x107c>
  41f37c:	ldr	x22, [x22]
  41f380:	cbz	x22, 41f4d8 <notice_finished_file@@Base+0x10d0>
  41f384:	ldr	x0, [x22, #16]
  41f388:	ldrb	w8, [x0, #137]
  41f38c:	tbz	w8, #6, 41f37c <notice_finished_file@@Base+0xf74>
  41f390:	ldr	x26, [x0, #112]
  41f394:	cbnz	x26, 41f3a4 <notice_finished_file@@Base+0xf9c>
  41f398:	mov	w1, #0x1                   	// #1
  41f39c:	bl	41dec8 <f_mtime@@Base>
  41f3a0:	mov	x26, x0
  41f3a4:	ldr	x8, [x22, #16]
  41f3a8:	ldr	x9, [x8, #72]
  41f3ac:	cbz	x9, 41f3c0 <notice_finished_file@@Base+0xfb8>
  41f3b0:	mov	x8, x9
  41f3b4:	ldr	x9, [x9, #72]
  41f3b8:	cbnz	x9, 41f3b0 <notice_finished_file@@Base+0xfa8>
  41f3bc:	str	x8, [x22, #16]
  41f3c0:	str	x19, [x8, #96]
  41f3c4:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41f3c8:	ldr	w9, [x9, #3300]
  41f3cc:	cbz	w9, 41f3ec <notice_finished_file@@Base+0xfe4>
  41f3d0:	ldr	w10, [x19, #136]
  41f3d4:	ldr	w9, [x8, #136]
  41f3d8:	lsr	w10, w10, #16
  41f3dc:	and	w24, w9, #0x10000
  41f3e0:	bfi	w9, w10, #16, #1
  41f3e4:	str	w9, [x8, #136]
  41f3e8:	b	41f3f0 <notice_finished_file@@Base+0xfe8>
  41f3ec:	mov	w24, wzr
  41f3f0:	ldr	x0, [x22, #16]
  41f3f4:	ldr	w1, [sp, #48]
  41f3f8:	str	wzr, [x0, #128]
  41f3fc:	bl	41dd7c <update_goal_chain@@Base+0x3e0>
  41f400:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f404:	ldr	w8, [x8, #3300]
  41f408:	cmp	w0, w25
  41f40c:	csel	w25, w0, w25, hi  // hi = pmore
  41f410:	cbz	w8, 41f428 <notice_finished_file@@Base+0x1020>
  41f414:	ldr	x8, [x22, #16]
  41f418:	ldr	w9, [x8, #136]
  41f41c:	and	w9, w9, #0xfffeffff
  41f420:	orr	w9, w9, w24
  41f424:	str	w9, [x8, #136]
  41f428:	ldr	x0, [x22, #16]
  41f42c:	ldr	x8, [x0, #72]
  41f430:	cbz	x8, 41f444 <notice_finished_file@@Base+0x103c>
  41f434:	mov	x0, x8
  41f438:	ldr	x8, [x8, #72]
  41f43c:	cbnz	x8, 41f434 <notice_finished_file@@Base+0x102c>
  41f440:	str	x0, [x22, #16]
  41f444:	ldr	x8, [x0, #104]
  41f448:	cmp	x8, #0x0
  41f44c:	csel	x8, x0, x8, eq  // eq = none
  41f450:	ldr	w9, [x8, #136]
  41f454:	ldr	x8, [x8, #56]
  41f458:	ubfx	w9, w9, #2, #2
  41f45c:	sub	w9, w9, #0x1
  41f460:	cmp	w9, #0x2
  41f464:	cset	w9, cc  // cc = lo, ul, last
  41f468:	orr	w21, w21, w9
  41f46c:	cbnz	x8, 41f450 <notice_finished_file@@Base+0x1048>
  41f470:	cbz	w25, 41f378 <notice_finished_file@@Base+0xf70>
  41f474:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41f478:	ldr	w8, [x8, #36]
  41f47c:	cbnz	w8, 41f378 <notice_finished_file@@Base+0xf70>
  41f480:	b	41f4d8 <notice_finished_file@@Base+0x10d0>
  41f484:	ldrb	w8, [x19, #137]
  41f488:	tbz	w8, #5, 41f49c <notice_finished_file@@Base+0x1094>
  41f48c:	ldr	x8, [x19, #32]
  41f490:	cbz	x8, 41f49c <notice_finished_file@@Base+0x1094>
  41f494:	mov	w8, #0x1                   	// #1
  41f498:	b	41f4b8 <notice_finished_file@@Base+0x10b0>
  41f49c:	ldr	x8, [x0, #112]
  41f4a0:	cbnz	x8, 41f4b0 <notice_finished_file@@Base+0x10a8>
  41f4a4:	mov	w1, #0x1                   	// #1
  41f4a8:	bl	41dec8 <f_mtime@@Base>
  41f4ac:	mov	x8, x0
  41f4b0:	cmp	x8, x26
  41f4b4:	cset	w8, ne  // ne = any
  41f4b8:	ldrh	w9, [x22, #32]
  41f4bc:	cmp	w8, #0x0
  41f4c0:	csel	w8, w23, wzr, ne  // ne = any
  41f4c4:	and	w9, w9, #0xfffffeff
  41f4c8:	orr	w8, w9, w8
  41f4cc:	strh	w8, [x22, #32]
  41f4d0:	b	41f37c <notice_finished_file@@Base+0xf74>
  41f4d4:	ldr	x28, [sp, #16]
  41f4d8:	ldr	x8, [x19, #104]
  41f4dc:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  41f4e0:	cmp	x8, #0x0
  41f4e4:	csel	x8, x19, x8, eq  // eq = none
  41f4e8:	ldr	w9, [x8, #136]
  41f4ec:	and	w9, w9, #0xfffffdff
  41f4f0:	str	w9, [x8, #136]
  41f4f4:	ldr	x8, [x28, #104]
  41f4f8:	cmp	x8, #0x0
  41f4fc:	csel	x8, x28, x8, eq  // eq = none
  41f500:	ldr	w9, [x8, #136]
  41f504:	and	w9, w9, #0xfffffdff
  41f508:	str	w9, [x8, #136]
  41f50c:	ldrb	w8, [x22, #3236]
  41f510:	tbz	w8, #1, 41f544 <notice_finished_file@@Base+0x113c>
  41f514:	ldr	w0, [sp, #48]
  41f518:	bl	417e84 <print_spaces@@Base>
  41f51c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f520:	add	x1, x1, #0x55d
  41f524:	mov	w2, #0x5                   	// #5
  41f528:	mov	x0, xzr
  41f52c:	bl	406e50 <dcgettext@plt>
  41f530:	ldr	x1, [x19]
  41f534:	bl	406ef0 <printf@plt>
  41f538:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f53c:	ldr	x0, [x8, #2512]
  41f540:	bl	406d80 <fflush@plt>
  41f544:	cbz	w21, 41f618 <notice_finished_file@@Base+0x1210>
  41f548:	mov	w1, #0x1                   	// #1
  41f54c:	mov	x0, x19
  41f550:	bl	40b904 <set_command_state@@Base>
  41f554:	ldrb	w8, [x22, #3236]
  41f558:	tbz	w8, #1, 41f58c <notice_finished_file@@Base+0x1184>
  41f55c:	ldr	w0, [sp, #12]
  41f560:	bl	417e84 <print_spaces@@Base>
  41f564:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f568:	add	x1, x1, #0x58a
  41f56c:	mov	w2, #0x5                   	// #5
  41f570:	mov	x0, xzr
  41f574:	bl	406e50 <dcgettext@plt>
  41f578:	ldr	x1, [x19]
  41f57c:	bl	406ef0 <printf@plt>
  41f580:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f584:	ldr	x0, [x8, #2512]
  41f588:	bl	406d80 <fflush@plt>
  41f58c:	mov	w25, wzr
  41f590:	mov	w0, w25
  41f594:	ldp	x20, x19, [sp, #176]
  41f598:	ldp	x22, x21, [sp, #160]
  41f59c:	ldp	x24, x23, [sp, #144]
  41f5a0:	ldp	x26, x25, [sp, #128]
  41f5a4:	ldp	x28, x27, [sp, #112]
  41f5a8:	ldp	x29, x30, [sp, #96]
  41f5ac:	add	sp, sp, #0xc0
  41f5b0:	ret
  41f5b4:	ldrb	w8, [x19, #137]
  41f5b8:	tbnz	w8, #3, 41f120 <notice_finished_file@@Base+0xd18>
  41f5bc:	adrp	x21, 440000 <shell_var@@Base+0x18>
  41f5c0:	ldr	x8, [x21, #72]
  41f5c4:	cbz	x8, 41f120 <notice_finished_file@@Base+0xd18>
  41f5c8:	ldr	x8, [x8, #32]
  41f5cc:	cbz	x8, 41f120 <notice_finished_file@@Base+0xd18>
  41f5d0:	ldrb	w8, [x22, #3236]
  41f5d4:	tbz	w8, #3, 41f608 <notice_finished_file@@Base+0x1200>
  41f5d8:	ldr	w0, [sp, #48]
  41f5dc:	bl	417e84 <print_spaces@@Base>
  41f5e0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f5e4:	add	x1, x1, #0x517
  41f5e8:	mov	w2, #0x5                   	// #5
  41f5ec:	mov	x0, xzr
  41f5f0:	bl	406e50 <dcgettext@plt>
  41f5f4:	ldr	x1, [x19]
  41f5f8:	bl	406ef0 <printf@plt>
  41f5fc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f600:	ldr	x0, [x8, #2512]
  41f604:	bl	406d80 <fflush@plt>
  41f608:	ldr	x8, [x21, #72]
  41f60c:	ldr	x8, [x8, #32]
  41f610:	str	x8, [x19, #32]
  41f614:	b	41f120 <notice_finished_file@@Base+0xd18>
  41f618:	cbz	w25, 41f6e0 <notice_finished_file@@Base+0x12d8>
  41f61c:	ldr	w8, [x19, #136]
  41f620:	and	w9, w25, #0x3
  41f624:	cmp	w25, #0x1
  41f628:	mov	w10, #0x3                   	// #3
  41f62c:	csel	w9, w10, w9, eq  // eq = none
  41f630:	and	w8, w8, #0xfffffffc
  41f634:	orr	w8, w8, w9
  41f638:	mov	x0, x19
  41f63c:	str	w8, [x19, #136]
  41f640:	bl	41e408 <notice_finished_file@@Base>
  41f644:	ldrb	w8, [x22, #3236]
  41f648:	ldr	w20, [sp, #12]
  41f64c:	tbz	w8, #1, 41f680 <notice_finished_file@@Base+0x1278>
  41f650:	mov	w0, w20
  41f654:	bl	417e84 <print_spaces@@Base>
  41f658:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f65c:	add	x1, x1, #0x5b5
  41f660:	mov	w2, #0x5                   	// #5
  41f664:	mov	x0, xzr
  41f668:	bl	406e50 <dcgettext@plt>
  41f66c:	ldr	x1, [x19]
  41f670:	bl	406ef0 <printf@plt>
  41f674:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f678:	ldr	x0, [x8, #2512]
  41f67c:	bl	406d80 <fflush@plt>
  41f680:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41f684:	ldr	w8, [x8, #36]
  41f688:	cbz	w8, 41f590 <notice_finished_file@@Base+0x1188>
  41f68c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41f690:	ldr	w8, [x8, #32]
  41f694:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  41f698:	ldr	w9, [x9, #3260]
  41f69c:	orr	w8, w8, w20
  41f6a0:	orr	w8, w8, w9
  41f6a4:	cbnz	w8, 41f590 <notice_finished_file@@Base+0x1188>
  41f6a8:	ldr	x0, [x19]
  41f6ac:	bl	4067d0 <strlen@plt>
  41f6b0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f6b4:	mov	x20, x0
  41f6b8:	add	x1, x1, #0x5d5
  41f6bc:	mov	w2, #0x5                   	// #5
  41f6c0:	mov	x0, xzr
  41f6c4:	bl	406e50 <dcgettext@plt>
  41f6c8:	ldr	x3, [x19]
  41f6cc:	mov	x2, x0
  41f6d0:	mov	x0, xzr
  41f6d4:	mov	x1, x20
  41f6d8:	bl	418f84 <error@@Base>
  41f6dc:	b	41f590 <notice_finished_file@@Base+0x1188>
  41f6e0:	ldr	w8, [x19, #136]
  41f6e4:	and	w8, w8, #0xc
  41f6e8:	cmp	w8, #0x4
  41f6ec:	b.ne	41f6fc <notice_finished_file@@Base+0x12f4>  // b.any
  41f6f0:	mov	x0, x19
  41f6f4:	mov	w1, wzr
  41f6f8:	bl	40b904 <set_command_state@@Base>
  41f6fc:	ldr	x23, [x19, #24]
  41f700:	cbz	x23, 41f874 <notice_finished_file@@Base+0x146c>
  41f704:	adrp	x24, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f708:	adrp	x26, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f70c:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f710:	mov	w22, wzr
  41f714:	add	x24, x24, #0x631
  41f718:	add	x26, x26, #0x663
  41f71c:	adrp	x25, 43c000 <memcpy@GLIBC_2.17>
  41f720:	add	x21, x21, #0x5ff
  41f724:	b	41f744 <notice_finished_file@@Base+0x133c>
  41f728:	ldr	x2, [x19]
  41f72c:	mov	x0, x28
  41f730:	bl	406ef0 <printf@plt>
  41f734:	ldr	x0, [x25, #2512]
  41f738:	bl	406d80 <fflush@plt>
  41f73c:	ldr	x23, [x23]
  41f740:	cbz	x23, 41f878 <notice_finished_file@@Base+0x1470>
  41f744:	ldr	x8, [x23, #16]
  41f748:	ldr	x0, [x8, #112]
  41f74c:	cbnz	x0, 41f75c <notice_finished_file@@Base+0x1354>
  41f750:	mov	w1, #0x1                   	// #1
  41f754:	mov	x0, x8
  41f758:	bl	41dec8 <f_mtime@@Base>
  41f75c:	ldr	x9, [x23, #16]
  41f760:	ldr	x8, [x9, #72]
  41f764:	cbz	x8, 41f778 <notice_finished_file@@Base+0x1370>
  41f768:	mov	x9, x8
  41f76c:	ldr	x8, [x8, #72]
  41f770:	cbnz	x8, 41f768 <notice_finished_file@@Base+0x1360>
  41f774:	str	x9, [x23, #16]
  41f778:	ldrh	w8, [x23, #32]
  41f77c:	tbnz	w8, #9, 41f79c <notice_finished_file@@Base+0x1394>
  41f780:	cmp	x0, #0x1
  41f784:	b.ne	41f794 <notice_finished_file@@Base+0x138c>  // b.any
  41f788:	ldrb	w9, [x9, #137]
  41f78c:	tst	w9, #0x40
  41f790:	csinc	w20, w20, wzr, ne  // ne = any
  41f794:	ubfx	w9, w8, #8, #1
  41f798:	orr	w22, w22, w9
  41f79c:	ldr	x9, [sp, #40]
  41f7a0:	ldr	x10, [sp, #24]
  41f7a4:	cmp	x0, x9
  41f7a8:	cset	w9, hi  // hi = pmore
  41f7ac:	cmp	x10, #0x1
  41f7b0:	cset	w10, eq  // eq = none
  41f7b4:	orr	w9, w10, w9
  41f7b8:	orr	w9, w9, w8, lsr #8
  41f7bc:	and	w9, w9, #0x1
  41f7c0:	and	w10, w8, #0xfffffeff
  41f7c4:	orr	w10, w10, w9, lsl #8
  41f7c8:	strh	w10, [x23, #32]
  41f7cc:	b.eq	41f73c <notice_finished_file@@Base+0x1334>  // b.none
  41f7d0:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  41f7d4:	ldr	w10, [x10, #3236]
  41f7d8:	tst	w10, #0x3
  41f7dc:	b.eq	41f73c <notice_finished_file@@Base+0x1334>  // b.none
  41f7e0:	tbnz	w8, #9, 41f800 <notice_finished_file@@Base+0x13f8>
  41f7e4:	cmp	x0, #0x1
  41f7e8:	b.ne	41f814 <notice_finished_file@@Base+0x140c>  // b.any
  41f7ec:	tbz	w10, #0, 41f830 <notice_finished_file@@Base+0x1428>
  41f7f0:	mov	w2, #0x5                   	// #5
  41f7f4:	mov	x0, xzr
  41f7f8:	mov	x1, x24
  41f7fc:	b	41f84c <notice_finished_file@@Base+0x1444>
  41f800:	tbz	w10, #1, 41f830 <notice_finished_file@@Base+0x1428>
  41f804:	mov	w2, #0x5                   	// #5
  41f808:	mov	x0, xzr
  41f80c:	mov	x1, x21
  41f810:	b	41f84c <notice_finished_file@@Base+0x1444>
  41f814:	cbz	w9, 41f82c <notice_finished_file@@Base+0x1424>
  41f818:	tbz	w10, #0, 41f830 <notice_finished_file@@Base+0x1428>
  41f81c:	mov	w2, #0x5                   	// #5
  41f820:	mov	x0, xzr
  41f824:	mov	x1, x26
  41f828:	b	41f84c <notice_finished_file@@Base+0x1444>
  41f82c:	tbnz	w10, #1, 41f83c <notice_finished_file@@Base+0x1434>
  41f830:	mov	x28, xzr
  41f834:	cbnz	x28, 41f858 <notice_finished_file@@Base+0x1450>
  41f838:	b	41f73c <notice_finished_file@@Base+0x1334>
  41f83c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f840:	mov	w2, #0x5                   	// #5
  41f844:	mov	x0, xzr
  41f848:	add	x1, x1, #0x691
  41f84c:	bl	406e50 <dcgettext@plt>
  41f850:	mov	x28, x0
  41f854:	cbz	x28, 41f73c <notice_finished_file@@Base+0x1334>
  41f858:	ldr	w0, [sp, #48]
  41f85c:	bl	417e84 <print_spaces@@Base>
  41f860:	ldr	x1, [x23, #8]
  41f864:	cbnz	x1, 41f728 <notice_finished_file@@Base+0x1320>
  41f868:	ldr	x8, [x23, #16]
  41f86c:	ldr	x1, [x8]
  41f870:	b	41f728 <notice_finished_file@@Base+0x1320>
  41f874:	mov	w22, wzr
  41f878:	ldr	x8, [x19, #104]
  41f87c:	cbz	x8, 41f888 <notice_finished_file@@Base+0x1480>
  41f880:	ldr	x8, [x19, #24]
  41f884:	cbz	x8, 41f9dc <notice_finished_file@@Base+0x15d4>
  41f888:	ldr	x8, [sp, #24]
  41f88c:	cmp	x8, #0x1
  41f890:	b.ne	41f8c8 <notice_finished_file@@Base+0x14c0>  // b.any
  41f894:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  41f898:	cbnz	w20, 41fa1c <notice_finished_file@@Base+0x1614>
  41f89c:	ldr	x8, [x19, #32]
  41f8a0:	cbz	x8, 41fa1c <notice_finished_file@@Base+0x1614>
  41f8a4:	ldr	w8, [x27, #3296]
  41f8a8:	cbz	w8, 41fa1c <notice_finished_file@@Base+0x1614>
  41f8ac:	ldrb	w8, [x21, #3236]
  41f8b0:	tbz	w8, #1, 41fa18 <notice_finished_file@@Base+0x1610>
  41f8b4:	ldr	w0, [sp, #12]
  41f8b8:	bl	417e84 <print_spaces@@Base>
  41f8bc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f8c0:	add	x1, x1, #0x731
  41f8c4:	b	41f9f8 <notice_finished_file@@Base+0x15f0>
  41f8c8:	cbnz	w22, 41f894 <notice_finished_file@@Base+0x148c>
  41f8cc:	ldr	w8, [x19, #136]
  41f8d0:	tbz	w8, #11, 41f894 <notice_finished_file@@Base+0x148c>
  41f8d4:	ldr	x8, [x19, #32]
  41f8d8:	cbnz	x8, 41f894 <notice_finished_file@@Base+0x148c>
  41f8dc:	ldr	w8, [x27, #3296]
  41f8e0:	cbnz	w8, 41f894 <notice_finished_file@@Base+0x148c>
  41f8e4:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  41f8e8:	ldrb	w8, [x21, #3236]
  41f8ec:	tbz	w8, #1, 41f920 <notice_finished_file@@Base+0x1518>
  41f8f0:	ldr	w0, [sp, #12]
  41f8f4:	bl	417e84 <print_spaces@@Base>
  41f8f8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f8fc:	add	x1, x1, #0x6f6
  41f900:	mov	w2, #0x5                   	// #5
  41f904:	mov	x0, xzr
  41f908:	bl	406e50 <dcgettext@plt>
  41f90c:	ldr	x1, [x19]
  41f910:	bl	406ef0 <printf@plt>
  41f914:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f918:	ldr	x0, [x8, #2512]
  41f91c:	bl	406d80 <fflush@plt>
  41f920:	mov	w20, wzr
  41f924:	ldr	w8, [x21, #3236]
  41f928:	cbnz	w20, 41fa24 <notice_finished_file@@Base+0x161c>
  41f92c:	tbz	w8, #1, 41f9b8 <notice_finished_file@@Base+0x15b0>
  41f930:	ldr	w0, [sp, #12]
  41f934:	bl	417e84 <print_spaces@@Base>
  41f938:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f93c:	add	x1, x1, #0x757
  41f940:	mov	w2, #0x5                   	// #5
  41f944:	mov	x0, xzr
  41f948:	bl	406e50 <dcgettext@plt>
  41f94c:	ldr	x1, [x19]
  41f950:	bl	406ef0 <printf@plt>
  41f954:	ldp	x8, x9, [x19]
  41f958:	cmp	x8, x9
  41f95c:	b.eq	41f9a0 <notice_finished_file@@Base+0x1598>  // b.none
  41f960:	ldrb	w10, [x8]
  41f964:	ldrb	w11, [x9]
  41f968:	cmp	w10, w11
  41f96c:	b.ne	41f984 <notice_finished_file@@Base+0x157c>  // b.any
  41f970:	cbz	w10, 41f9a0 <notice_finished_file@@Base+0x1598>
  41f974:	add	x0, x8, #0x1
  41f978:	add	x1, x9, #0x1
  41f97c:	bl	406cb0 <strcmp@plt>
  41f980:	cbz	w0, 41f9a0 <notice_finished_file@@Base+0x1598>
  41f984:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f988:	add	x1, x1, #0x775
  41f98c:	mov	w2, #0x5                   	// #5
  41f990:	mov	x0, xzr
  41f994:	bl	406e50 <dcgettext@plt>
  41f998:	ldr	x1, [x19, #8]
  41f99c:	bl	406ef0 <printf@plt>
  41f9a0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  41f9a4:	add	x0, x0, #0x944
  41f9a8:	bl	406c40 <puts@plt>
  41f9ac:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41f9b0:	ldr	x0, [x8, #2512]
  41f9b4:	bl	406d80 <fflush@plt>
  41f9b8:	mov	x0, x19
  41f9bc:	bl	41e408 <notice_finished_file@@Base>
  41f9c0:	mov	w25, wzr
  41f9c4:	cbz	x19, 41f590 <notice_finished_file@@Base+0x1188>
  41f9c8:	ldr	x8, [x19, #8]
  41f9cc:	str	x8, [x19]
  41f9d0:	ldr	x19, [x19, #56]
  41f9d4:	cbnz	x19, 41f9c8 <notice_finished_file@@Base+0x15c0>
  41f9d8:	b	41f590 <notice_finished_file@@Base+0x1188>
  41f9dc:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  41f9e0:	ldrb	w8, [x21, #3236]
  41f9e4:	tbz	w8, #0, 41fa18 <notice_finished_file@@Base+0x1610>
  41f9e8:	ldr	w0, [sp, #12]
  41f9ec:	bl	417e84 <print_spaces@@Base>
  41f9f0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41f9f4:	add	x1, x1, #0x6bf
  41f9f8:	mov	w2, #0x5                   	// #5
  41f9fc:	mov	x0, xzr
  41fa00:	bl	406e50 <dcgettext@plt>
  41fa04:	ldr	x1, [x19]
  41fa08:	bl	406ef0 <printf@plt>
  41fa0c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41fa10:	ldr	x0, [x8, #2512]
  41fa14:	bl	406d80 <fflush@plt>
  41fa18:	mov	w20, #0x1                   	// #1
  41fa1c:	ldr	w8, [x21, #3236]
  41fa20:	cbz	w20, 41f92c <notice_finished_file@@Base+0x1524>
  41fa24:	ldr	w20, [sp, #12]
  41fa28:	tbz	w8, #0, 41fa5c <notice_finished_file@@Base+0x1654>
  41fa2c:	mov	w0, w20
  41fa30:	bl	417e84 <print_spaces@@Base>
  41fa34:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fa38:	add	x1, x1, #0x78d
  41fa3c:	mov	w2, #0x5                   	// #5
  41fa40:	mov	x0, xzr
  41fa44:	bl	406e50 <dcgettext@plt>
  41fa48:	ldr	x1, [x19]
  41fa4c:	bl	406ef0 <printf@plt>
  41fa50:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41fa54:	ldr	x0, [x8, #2512]
  41fa58:	bl	406d80 <fflush@plt>
  41fa5c:	ldp	x8, x9, [x19]
  41fa60:	cmp	x8, x9
  41fa64:	b.eq	41fac8 <notice_finished_file@@Base+0x16c0>  // b.none
  41fa68:	ldrb	w10, [x8]
  41fa6c:	ldrb	w11, [x9]
  41fa70:	cmp	w10, w11
  41fa74:	b.ne	41fa8c <notice_finished_file@@Base+0x1684>  // b.any
  41fa78:	cbz	w10, 41fac8 <notice_finished_file@@Base+0x16c0>
  41fa7c:	add	x0, x8, #0x1
  41fa80:	add	x1, x9, #0x1
  41fa84:	bl	406cb0 <strcmp@plt>
  41fa88:	cbz	w0, 41fac8 <notice_finished_file@@Base+0x16c0>
  41fa8c:	ldrb	w8, [x21, #3236]
  41fa90:	tbz	w8, #0, 41fabc <notice_finished_file@@Base+0x16b4>
  41fa94:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fa98:	add	x1, x1, #0x7a7
  41fa9c:	mov	w2, #0x5                   	// #5
  41faa0:	mov	x0, xzr
  41faa4:	bl	406e50 <dcgettext@plt>
  41faa8:	ldr	x1, [x19, #8]
  41faac:	bl	406ef0 <printf@plt>
  41fab0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41fab4:	ldr	x0, [x8, #2512]
  41fab8:	bl	406d80 <fflush@plt>
  41fabc:	ldr	w8, [x19, #136]
  41fac0:	orr	w8, w8, #0x20000
  41fac4:	str	w8, [x19, #136]
  41fac8:	mov	x0, x19
  41facc:	bl	42009c <notice_finished_file@@Base+0x1c94>
  41fad0:	ldr	w8, [x19, #136]
  41fad4:	mvn	w9, w8
  41fad8:	tst	w9, #0xc
  41fadc:	b.ne	41fb14 <notice_finished_file@@Base+0x170c>  // b.any
  41fae0:	ands	w8, w8, #0x3
  41fae4:	b.eq	41fb30 <notice_finished_file@@Base+0x1728>  // b.none
  41fae8:	cmp	w8, #0x2
  41faec:	b.eq	41fb4c <notice_finished_file@@Base+0x1744>  // b.none
  41faf0:	cmp	w8, #0x3
  41faf4:	b.ne	41fb84 <notice_finished_file@@Base+0x177c>  // b.any
  41faf8:	ldrb	w8, [x21, #3236]
  41fafc:	tbz	w8, #0, 41fb84 <notice_finished_file@@Base+0x177c>
  41fb00:	mov	w0, w20
  41fb04:	bl	417e84 <print_spaces@@Base>
  41fb08:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fb0c:	add	x1, x1, #0x7e2
  41fb10:	b	41fb64 <notice_finished_file@@Base+0x175c>
  41fb14:	ldrb	w8, [x21, #3236]
  41fb18:	tbz	w8, #1, 41f58c <notice_finished_file@@Base+0x1184>
  41fb1c:	mov	w0, w20
  41fb20:	bl	417e84 <print_spaces@@Base>
  41fb24:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fb28:	add	x1, x1, #0x7c4
  41fb2c:	b	41f56c <notice_finished_file@@Base+0x1164>
  41fb30:	ldrb	w8, [x21, #3236]
  41fb34:	tbz	w8, #0, 41fb84 <notice_finished_file@@Base+0x177c>
  41fb38:	mov	w0, w20
  41fb3c:	bl	417e84 <print_spaces@@Base>
  41fb40:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fb44:	add	x1, x1, #0x806
  41fb48:	b	41fb64 <notice_finished_file@@Base+0x175c>
  41fb4c:	ldrb	w8, [x21, #3236]
  41fb50:	tbz	w8, #0, 41fb84 <notice_finished_file@@Base+0x177c>
  41fb54:	mov	w0, w20
  41fb58:	bl	417e84 <print_spaces@@Base>
  41fb5c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fb60:	add	x1, x1, #0x82d
  41fb64:	mov	w2, #0x5                   	// #5
  41fb68:	mov	x0, xzr
  41fb6c:	bl	406e50 <dcgettext@plt>
  41fb70:	ldr	x1, [x19]
  41fb74:	bl	406ef0 <printf@plt>
  41fb78:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41fb7c:	ldr	x0, [x8, #2512]
  41fb80:	bl	406d80 <fflush@plt>
  41fb84:	ldr	w8, [x19, #136]
  41fb88:	orr	w9, w8, #0x400
  41fb8c:	str	w9, [x19, #136]
  41fb90:	b	41f00c <notice_finished_file@@Base+0xc04>
  41fb94:	stp	x29, x30, [sp, #-48]!
  41fb98:	stp	x20, x19, [sp, #32]
  41fb9c:	ldr	x8, [x0, #24]
  41fba0:	mov	x19, x0
  41fba4:	str	x21, [sp, #16]
  41fba8:	mov	x29, sp
  41fbac:	cbz	x8, 41fbe0 <notice_finished_file@@Base+0x17d8>
  41fbb0:	mov	w9, #0x402                 	// #1026
  41fbb4:	b	41fbc0 <notice_finished_file@@Base+0x17b8>
  41fbb8:	ldr	x8, [x8]
  41fbbc:	cbz	x8, 41fbe0 <notice_finished_file@@Base+0x17d8>
  41fbc0:	ldr	x0, [x8, #16]
  41fbc4:	ldr	w10, [x0, #136]
  41fbc8:	bics	wzr, w9, w10
  41fbcc:	b.ne	41fbb8 <notice_finished_file@@Base+0x17b0>  // b.any
  41fbd0:	ldrb	w10, [x19, #138]
  41fbd4:	tbz	w10, #3, 41fbb8 <notice_finished_file@@Base+0x17b0>
  41fbd8:	bl	41fb94 <notice_finished_file@@Base+0x178c>
  41fbdc:	b	41fcac <notice_finished_file@@Base+0x18a4>
  41fbe0:	bl	41e34c <show_goal_error@@Base>
  41fbe4:	ldr	x0, [x19]
  41fbe8:	ldr	x21, [x19, #96]
  41fbec:	bl	4067d0 <strlen@plt>
  41fbf0:	mov	x20, x0
  41fbf4:	cbz	x21, 41fc58 <notice_finished_file@@Base+0x1850>
  41fbf8:	ldr	x0, [x21]
  41fbfc:	bl	4067d0 <strlen@plt>
  41fc00:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fc04:	add	x8, x20, x0
  41fc08:	add	x1, x1, #0x85c
  41fc0c:	mov	w2, #0x5                   	// #5
  41fc10:	mov	x0, xzr
  41fc14:	add	x20, x8, #0x4
  41fc18:	bl	406e50 <dcgettext@plt>
  41fc1c:	ldr	x8, [x19, #96]
  41fc20:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41fc24:	ldr	w9, [x9, #36]
  41fc28:	ldr	x4, [x19]
  41fc2c:	ldr	x5, [x8]
  41fc30:	mov	x2, x0
  41fc34:	cbz	w9, 41fcbc <notice_finished_file@@Base+0x18b4>
  41fc38:	adrp	x3, 429000 <_IO_stdin_used@@Base+0x40e0>
  41fc3c:	adrp	x6, 428000 <_IO_stdin_used@@Base+0x30e0>
  41fc40:	add	x3, x3, #0xaa5
  41fc44:	add	x6, x6, #0x944
  41fc48:	mov	x0, xzr
  41fc4c:	mov	x1, x20
  41fc50:	bl	418f84 <error@@Base>
  41fc54:	b	41fca0 <notice_finished_file@@Base+0x1898>
  41fc58:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fc5c:	add	x1, x1, #0x88c
  41fc60:	mov	w2, #0x5                   	// #5
  41fc64:	mov	x0, xzr
  41fc68:	add	x20, x20, #0x4
  41fc6c:	bl	406e50 <dcgettext@plt>
  41fc70:	adrp	x8, 440000 <shell_var@@Base+0x18>
  41fc74:	ldr	w8, [x8, #36]
  41fc78:	ldr	x4, [x19]
  41fc7c:	mov	x2, x0
  41fc80:	cbz	w8, 41fcd4 <notice_finished_file@@Base+0x18cc>
  41fc84:	adrp	x3, 429000 <_IO_stdin_used@@Base+0x40e0>
  41fc88:	adrp	x5, 428000 <_IO_stdin_used@@Base+0x30e0>
  41fc8c:	add	x3, x3, #0xaa5
  41fc90:	add	x5, x5, #0x944
  41fc94:	mov	x0, xzr
  41fc98:	mov	x1, x20
  41fc9c:	bl	418f84 <error@@Base>
  41fca0:	ldr	w8, [x19, #136]
  41fca4:	and	w8, w8, #0xfff7ffff
  41fca8:	str	w8, [x19, #136]
  41fcac:	ldp	x20, x19, [sp, #32]
  41fcb0:	ldr	x21, [sp, #16]
  41fcb4:	ldp	x29, x30, [sp], #48
  41fcb8:	ret
  41fcbc:	adrp	x3, 427000 <_IO_stdin_used@@Base+0x20e0>
  41fcc0:	add	x3, x3, #0x989
  41fcc4:	mov	x0, xzr
  41fcc8:	mov	x1, x20
  41fccc:	mov	x6, x3
  41fcd0:	bl	4190fc <fatal@@Base>
  41fcd4:	adrp	x3, 427000 <_IO_stdin_used@@Base+0x20e0>
  41fcd8:	add	x3, x3, #0x989
  41fcdc:	mov	x0, xzr
  41fce0:	mov	x1, x20
  41fce4:	mov	x5, x3
  41fce8:	bl	4190fc <fatal@@Base>
  41fcec:	sub	sp, sp, #0x70
  41fcf0:	stp	x29, x30, [sp, #16]
  41fcf4:	stp	x28, x27, [sp, #32]
  41fcf8:	stp	x26, x25, [sp, #48]
  41fcfc:	stp	x24, x23, [sp, #64]
  41fd00:	stp	x22, x21, [sp, #80]
  41fd04:	stp	x20, x19, [sp, #96]
  41fd08:	ldr	x8, [x0, #104]
  41fd0c:	mov	x20, x3
  41fd10:	mov	x19, x0
  41fd14:	add	w22, w1, #0x1
  41fd18:	cmp	x8, #0x0
  41fd1c:	csel	x8, x0, x8, eq  // eq = none
  41fd20:	ldr	w9, [x8, #136]
  41fd24:	add	x29, sp, #0x10
  41fd28:	str	x2, [sp]
  41fd2c:	orr	w9, w9, #0x200
  41fd30:	str	w9, [x8, #136]
  41fd34:	ldr	w8, [x0, #136]
  41fd38:	and	w9, w8, #0x6000
  41fd3c:	cmp	w9, #0x4, lsl #12
  41fd40:	b.ne	41fd80 <notice_finished_file@@Base+0x1978>  // b.any
  41fd44:	tbnz	w8, #8, 41fe18 <notice_finished_file@@Base+0x1a10>
  41fd48:	ldr	x8, [x19, #32]
  41fd4c:	cbnz	x8, 41fe18 <notice_finished_file@@Base+0x1a10>
  41fd50:	mov	x0, x19
  41fd54:	mov	w1, w22
  41fd58:	bl	410538 <try_implicit_rule@@Base>
  41fd5c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41fd60:	ldr	w8, [x8, #3236]
  41fd64:	cbz	w0, 41fdd8 <notice_finished_file@@Base+0x19d0>
  41fd68:	tbz	w8, #3, 41fe0c <notice_finished_file@@Base+0x1a04>
  41fd6c:	mov	w0, w22
  41fd70:	bl	417e84 <print_spaces@@Base>
  41fd74:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fd78:	add	x1, x1, #0x4d3
  41fd7c:	b	41fdec <notice_finished_file@@Base+0x19e4>
  41fd80:	mov	x0, x19
  41fd84:	mov	w1, w22
  41fd88:	bl	41dd7c <update_goal_chain@@Base+0x3e0>
  41fd8c:	mov	w23, w0
  41fd90:	mov	x8, x19
  41fd94:	mov	x22, x8
  41fd98:	ldr	x8, [x8, #72]
  41fd9c:	cbnz	x8, 41fd94 <notice_finished_file@@Base+0x198c>
  41fda0:	ldr	x0, [x22, #112]
  41fda4:	cbnz	x0, 41fdb4 <notice_finished_file@@Base+0x19ac>
  41fda8:	mov	w1, #0x1                   	// #1
  41fdac:	mov	x0, x22
  41fdb0:	bl	41dec8 <f_mtime@@Base>
  41fdb4:	mov	x24, x22
  41fdb8:	ldr	x22, [x22, #72]
  41fdbc:	cbnz	x22, 41fdb4 <notice_finished_file@@Base+0x19ac>
  41fdc0:	cmp	x0, #0x1
  41fdc4:	b.eq	41fe68 <notice_finished_file@@Base+0x1a60>  // b.none
  41fdc8:	ldr	x8, [sp]
  41fdcc:	cmp	x0, x8
  41fdd0:	b.ls	41ffe0 <notice_finished_file@@Base+0x1bd8>  // b.plast
  41fdd4:	b	41fe68 <notice_finished_file@@Base+0x1a60>
  41fdd8:	tbz	w8, #3, 41fe0c <notice_finished_file@@Base+0x1a04>
  41fddc:	mov	w0, w22
  41fde0:	bl	417e84 <print_spaces@@Base>
  41fde4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fde8:	add	x1, x1, #0x4f5
  41fdec:	mov	w2, #0x5                   	// #5
  41fdf0:	mov	x0, xzr
  41fdf4:	bl	406e50 <dcgettext@plt>
  41fdf8:	ldr	x1, [x19]
  41fdfc:	bl	406ef0 <printf@plt>
  41fe00:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  41fe04:	ldr	x0, [x8, #2512]
  41fe08:	bl	406d80 <fflush@plt>
  41fe0c:	ldr	w8, [x19, #136]
  41fe10:	orr	w8, w8, #0x100
  41fe14:	str	w8, [x19, #136]
  41fe18:	ldr	x8, [x19, #32]
  41fe1c:	cbz	x8, 420034 <notice_finished_file@@Base+0x1c2c>
  41fe20:	mov	x8, x19
  41fe24:	mov	x23, x8
  41fe28:	ldr	x8, [x8, #72]
  41fe2c:	cbnz	x8, 41fe24 <notice_finished_file@@Base+0x1a1c>
  41fe30:	ldr	x0, [x23, #112]
  41fe34:	cbnz	x0, 41fe44 <notice_finished_file@@Base+0x1a3c>
  41fe38:	mov	w1, #0x1                   	// #1
  41fe3c:	mov	x0, x23
  41fe40:	bl	41dec8 <f_mtime@@Base>
  41fe44:	mov	x24, x23
  41fe48:	ldr	x23, [x23, #72]
  41fe4c:	cbnz	x23, 41fe44 <notice_finished_file@@Base+0x1a3c>
  41fe50:	cmp	x0, #0x1
  41fe54:	b.eq	41fe74 <notice_finished_file@@Base+0x1a6c>  // b.none
  41fe58:	ldr	x8, [sp]
  41fe5c:	cmp	x0, x8
  41fe60:	b.ls	41fe74 <notice_finished_file@@Base+0x1a6c>  // b.plast
  41fe64:	mov	w23, wzr
  41fe68:	mov	w8, #0x1                   	// #1
  41fe6c:	str	w8, [x20]
  41fe70:	b	41ffe0 <notice_finished_file@@Base+0x1bd8>
  41fe74:	ldr	w8, [x24, #136]
  41fe78:	ubfx	w8, w8, #2, #2
  41fe7c:	cmp	w8, #0x2
  41fe80:	b.eq	41fe9c <notice_finished_file@@Base+0x1a94>  // b.none
  41fe84:	cmp	w8, #0x1
  41fe88:	b.ne	41fe90 <notice_finished_file@@Base+0x1a88>  // b.any
  41fe8c:	str	wzr, [x24, #128]
  41fe90:	mov	x0, x24
  41fe94:	mov	w1, wzr
  41fe98:	bl	40b904 <set_command_state@@Base>
  41fe9c:	mov	x25, x24
  41fea0:	ldr	x26, [x25, #24]!
  41fea4:	mov	w23, wzr
  41fea8:	mov	x21, xzr
  41feac:	mov	w28, wzr
  41feb0:	b	41ff24 <notice_finished_file@@Base+0x1b1c>
  41feb4:	ldr	x0, [x24]
  41feb8:	bl	4067d0 <strlen@plt>
  41febc:	ldr	x8, [x27]
  41fec0:	mov	x27, x0
  41fec4:	mov	x0, x8
  41fec8:	bl	4067d0 <strlen@plt>
  41fecc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  41fed0:	add	x27, x0, x27
  41fed4:	mov	w2, #0x5                   	// #5
  41fed8:	mov	x0, xzr
  41fedc:	add	x1, x1, #0x537
  41fee0:	bl	406e50 <dcgettext@plt>
  41fee4:	ldr	x8, [x26, #16]
  41fee8:	ldr	x3, [x24]
  41feec:	mov	x2, x0
  41fef0:	mov	x0, xzr
  41fef4:	ldr	x4, [x8]
  41fef8:	mov	x1, x27
  41fefc:	bl	418f84 <error@@Base>
  41ff00:	ldr	x8, [x26]
  41ff04:	cmp	x21, #0x0
  41ff08:	csel	x27, x25, x21, eq  // eq = none
  41ff0c:	mov	x0, x26
  41ff10:	str	x8, [x27]
  41ff14:	bl	406cf0 <free@plt>
  41ff18:	ldr	x26, [x27]
  41ff1c:	mov	w8, wzr
  41ff20:	cbnz	w8, 41ffd0 <notice_finished_file@@Base+0x1bc8>
  41ff24:	cbz	x26, 41ffd0 <notice_finished_file@@Base+0x1bc8>
  41ff28:	ldr	x27, [x26, #16]
  41ff2c:	ldr	x8, [x27, #104]
  41ff30:	cmp	x8, #0x0
  41ff34:	csel	x8, x27, x8, eq  // eq = none
  41ff38:	ldrb	w8, [x8, #137]
  41ff3c:	tbnz	w8, #1, 41feb4 <notice_finished_file@@Base+0x1aac>
  41ff40:	str	x24, [x27, #96]
  41ff44:	ldr	w8, [x20]
  41ff48:	ldr	x2, [sp]
  41ff4c:	sub	x3, x29, #0x4
  41ff50:	mov	x0, x27
  41ff54:	mov	w1, w22
  41ff58:	stur	w8, [x29, #-4]
  41ff5c:	bl	41fcec <notice_finished_file@@Base+0x18e4>
  41ff60:	ldrb	w8, [x26, #33]
  41ff64:	cmp	w0, w23
  41ff68:	csel	w23, w0, w23, hi  // hi = pmore
  41ff6c:	tbnz	w8, #1, 41ff78 <notice_finished_file@@Base+0x1b70>
  41ff70:	ldur	w8, [x29, #-4]
  41ff74:	str	w8, [x20]
  41ff78:	ldr	x8, [x26, #16]
  41ff7c:	ldr	x9, [x8, #72]
  41ff80:	cbz	x9, 41ff94 <notice_finished_file@@Base+0x1b8c>
  41ff84:	mov	x8, x9
  41ff88:	ldr	x9, [x9, #72]
  41ff8c:	cbnz	x9, 41ff84 <notice_finished_file@@Base+0x1b7c>
  41ff90:	str	x8, [x26, #16]
  41ff94:	cbz	w23, 41ffb0 <notice_finished_file@@Base+0x1ba8>
  41ff98:	adrp	x9, 440000 <shell_var@@Base+0x18>
  41ff9c:	ldr	w9, [x9, #36]
  41ffa0:	cbnz	w9, 41ffb0 <notice_finished_file@@Base+0x1ba8>
  41ffa4:	mov	w8, #0x1                   	// #1
  41ffa8:	cbz	w8, 41ff24 <notice_finished_file@@Base+0x1b1c>
  41ffac:	b	41ffd0 <notice_finished_file@@Base+0x1bc8>
  41ffb0:	ldr	w8, [x8, #136]
  41ffb4:	mov	x27, x26
  41ffb8:	mov	x21, x26
  41ffbc:	ubfx	w8, w8, #2, #2
  41ffc0:	sub	w8, w8, #0x1
  41ffc4:	cmp	w8, #0x1
  41ffc8:	csinc	w28, w28, wzr, hi  // hi = pmore
  41ffcc:	b	41ff18 <notice_finished_file@@Base+0x1b10>
  41ffd0:	cbz	w28, 41ffe0 <notice_finished_file@@Base+0x1bd8>
  41ffd4:	mov	w1, #0x1                   	// #1
  41ffd8:	mov	x0, x24
  41ffdc:	bl	40b904 <set_command_state@@Base>
  41ffe0:	ldr	x8, [x24, #104]
  41ffe4:	mov	w0, w23
  41ffe8:	cmp	x8, #0x0
  41ffec:	csel	x8, x24, x8, eq  // eq = none
  41fff0:	ldr	w9, [x8, #136]
  41fff4:	and	w9, w9, #0xfffffdff
  41fff8:	str	w9, [x8, #136]
  41fffc:	ldr	x8, [x19, #104]
  420000:	cmp	x8, #0x0
  420004:	csel	x8, x19, x8, eq  // eq = none
  420008:	ldr	w9, [x8, #136]
  42000c:	and	w9, w9, #0xfffffdff
  420010:	str	w9, [x8, #136]
  420014:	ldp	x20, x19, [sp, #96]
  420018:	ldp	x22, x21, [sp, #80]
  42001c:	ldp	x24, x23, [sp, #64]
  420020:	ldp	x26, x25, [sp, #48]
  420024:	ldp	x28, x27, [sp, #32]
  420028:	ldp	x29, x30, [sp, #16]
  42002c:	add	sp, sp, #0x70
  420030:	ret
  420034:	ldrb	w8, [x19, #137]
  420038:	tbnz	w8, #3, 41fe20 <notice_finished_file@@Base+0x1a18>
  42003c:	adrp	x21, 440000 <shell_var@@Base+0x18>
  420040:	ldr	x8, [x21, #72]
  420044:	cbz	x8, 41fe20 <notice_finished_file@@Base+0x1a18>
  420048:	ldr	x8, [x8, #32]
  42004c:	cbz	x8, 41fe20 <notice_finished_file@@Base+0x1a18>
  420050:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  420054:	ldrb	w8, [x8, #3236]
  420058:	tbz	w8, #3, 42008c <notice_finished_file@@Base+0x1c84>
  42005c:	mov	w0, w22
  420060:	bl	417e84 <print_spaces@@Base>
  420064:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  420068:	add	x1, x1, #0x8ac
  42006c:	mov	w2, #0x5                   	// #5
  420070:	mov	x0, xzr
  420074:	bl	406e50 <dcgettext@plt>
  420078:	ldr	x1, [x19]
  42007c:	bl	406ef0 <printf@plt>
  420080:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  420084:	ldr	x0, [x8, #2512]
  420088:	bl	406d80 <fflush@plt>
  42008c:	ldr	x8, [x21, #72]
  420090:	ldr	x8, [x8, #32]
  420094:	str	x8, [x19, #32]
  420098:	b	41fe20 <notice_finished_file@@Base+0x1a18>
  42009c:	stp	x29, x30, [sp, #-32]!
  4200a0:	str	x19, [sp, #16]
  4200a4:	mov	x19, x0
  4200a8:	ldr	x0, [x0, #32]
  4200ac:	mov	x29, sp
  4200b0:	cbz	x0, 4200e4 <notice_finished_file@@Base+0x1cdc>
  4200b4:	bl	408468 <chop_commands@@Base>
  4200b8:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4200bc:	ldr	w8, [x8, #236]
  4200c0:	cbz	w8, 4200d8 <notice_finished_file@@Base+0x1cd0>
  4200c4:	ldr	x8, [x19, #32]
  4200c8:	ldrb	w8, [x8, #51]
  4200cc:	tbnz	w8, #0, 4200d8 <notice_finished_file@@Base+0x1cd0>
  4200d0:	ldr	w8, [x19, #136]
  4200d4:	b	420114 <notice_finished_file@@Base+0x1d0c>
  4200d8:	mov	x0, x19
  4200dc:	bl	408770 <execute_file_commands@@Base>
  4200e0:	b	420124 <notice_finished_file@@Base+0x1d1c>
  4200e4:	ldr	w8, [x19, #136]
  4200e8:	tbnz	w8, #13, 420114 <notice_finished_file@@Base+0x1d0c>
  4200ec:	tbnz	w8, #11, 420114 <notice_finished_file@@Base+0x1d0c>
  4200f0:	tbz	w8, #16, 420100 <notice_finished_file@@Base+0x1cf8>
  4200f4:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4200f8:	ldr	w8, [x8, #3300]
  4200fc:	cbnz	w8, 420108 <notice_finished_file@@Base+0x1d00>
  420100:	mov	x0, x19
  420104:	bl	41fb94 <notice_finished_file@@Base+0x178c>
  420108:	ldr	w8, [x19, #136]
  42010c:	orr	w8, w8, #0x3
  420110:	b	420118 <notice_finished_file@@Base+0x1d10>
  420114:	and	w8, w8, #0xfffffffc
  420118:	mov	x0, x19
  42011c:	str	w8, [x19, #136]
  420120:	bl	41e408 <notice_finished_file@@Base>
  420124:	ldr	x19, [sp, #16]
  420128:	ldp	x29, x30, [sp], #32
  42012c:	ret

0000000000420130 <snap_implicit_rules@@Base>:
  420130:	sub	sp, sp, #0x80
  420134:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x10e0>
  420138:	add	x0, x0, #0xac1
  42013c:	mov	w1, #0xe                   	// #14
  420140:	stp	x29, x30, [sp, #32]
  420144:	stp	x28, x27, [sp, #48]
  420148:	stp	x26, x25, [sp, #64]
  42014c:	stp	x24, x23, [sp, #80]
  420150:	stp	x22, x21, [sp, #96]
  420154:	stp	x20, x19, [sp, #112]
  420158:	add	x29, sp, #0x20
  42015c:	bl	421ac8 <lookup_variable@@Base>
  420160:	bl	40b200 <expand_extra_prereqs@@Base>
  420164:	mov	x21, x0
  420168:	adrp	x25, 440000 <shell_var@@Base+0x18>
  42016c:	mov	w26, wzr
  420170:	str	xzr, [x25, #264]
  420174:	cbz	x0, 4201b4 <snap_implicit_rules@@Base+0x84>
  420178:	mov	x19, x21
  42017c:	b	42018c <snap_implicit_rules@@Base+0x5c>
  420180:	ldr	x19, [x19]
  420184:	add	w26, w26, #0x1
  420188:	cbz	x19, 4201b4 <snap_implicit_rules@@Base+0x84>
  42018c:	ldr	x0, [x19, #8]
  420190:	cbnz	x0, 42019c <snap_implicit_rules@@Base+0x6c>
  420194:	ldr	x8, [x19, #16]
  420198:	ldr	x0, [x8]
  42019c:	bl	4067d0 <strlen@plt>
  4201a0:	ldr	x8, [x25, #264]
  4201a4:	cmp	x0, x8
  4201a8:	b.ls	420180 <snap_implicit_rules@@Base+0x50>  // b.plast
  4201ac:	str	x0, [x25, #264]
  4201b0:	b	420180 <snap_implicit_rules@@Base+0x50>
  4201b4:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4201b8:	ldr	x28, [x8, #256]
  4201bc:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4201c0:	adrp	x9, 440000 <shell_var@@Base+0x18>
  4201c4:	str	wzr, [x8, #272]
  4201c8:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4201cc:	mov	x20, xzr
  4201d0:	str	wzr, [x9, #276]
  4201d4:	str	wzr, [x8, #288]
  4201d8:	cbz	x28, 42034c <snap_implicit_rules@@Base+0x21c>
  4201dc:	mov	x27, xzr
  4201e0:	str	w26, [sp, #12]
  4201e4:	str	x21, [sp, #16]
  4201e8:	b	4201f8 <snap_implicit_rules@@Base+0xc8>
  4201ec:	ldr	x28, [x28]
  4201f0:	ldr	w26, [sp, #12]
  4201f4:	cbz	x28, 42034c <snap_implicit_rules@@Base+0x21c>
  4201f8:	adrp	x9, 440000 <shell_var@@Base+0x18>
  4201fc:	ldr	w8, [x9, #288]
  420200:	add	w8, w8, #0x1
  420204:	str	w8, [x9, #288]
  420208:	adrp	x9, 440000 <shell_var@@Base+0x18>
  42020c:	ldrh	w8, [x28, #48]
  420210:	ldr	w9, [x9, #272]
  420214:	cmp	w9, w8
  420218:	b.cs	420224 <snap_implicit_rules@@Base+0xf4>  // b.hs, b.nlast
  42021c:	adrp	x9, 440000 <shell_var@@Base+0x18>
  420220:	str	w8, [x9, #272]
  420224:	mov	x8, x28
  420228:	ldr	x21, [x8, #32]!
  42022c:	mov	x19, xzr
  420230:	stur	x8, [x29, #-8]
  420234:	cbnz	x21, 420288 <snap_implicit_rules@@Base+0x158>
  420238:	ldr	x21, [sp, #16]
  42023c:	cbz	x21, 420258 <snap_implicit_rules@@Base+0x128>
  420240:	mov	x0, x21
  420244:	bl	4182f8 <copy_dep_chain@@Base>
  420248:	ldur	x8, [x29, #-8]
  42024c:	cmp	x19, #0x0
  420250:	csel	x8, x8, x19, eq  // eq = none
  420254:	str	x0, [x8]
  420258:	adrp	x8, 440000 <shell_var@@Base+0x18>
  42025c:	ldr	w8, [x8, #276]
  420260:	cmp	w26, w8
  420264:	b.ls	4201ec <snap_implicit_rules@@Base+0xbc>  // b.plast
  420268:	adrp	x8, 440000 <shell_var@@Base+0x18>
  42026c:	str	w26, [x8, #276]
  420270:	b	4201ec <snap_implicit_rules@@Base+0xbc>
  420274:	ldrh	w8, [x21, #32]
  420278:	and	w8, w8, #0xfffffeff
  42027c:	strh	w8, [x21, #32]
  420280:	ldr	x21, [x21]
  420284:	cbz	x21, 420238 <snap_implicit_rules@@Base+0x108>
  420288:	ldr	x22, [x21, #8]
  42028c:	cbnz	x22, 420298 <snap_implicit_rules@@Base+0x168>
  420290:	ldr	x8, [x21, #16]
  420294:	ldr	x22, [x8]
  420298:	mov	x0, x22
  42029c:	bl	4067d0 <strlen@plt>
  4202a0:	mov	x24, x0
  4202a4:	mov	w1, #0x2f                  	// #47
  4202a8:	mov	x0, x22
  4202ac:	bl	406bc0 <strrchr@plt>
  4202b0:	mov	x23, x0
  4202b4:	cbz	x0, 4202c4 <snap_implicit_rules@@Base+0x194>
  4202b8:	mov	w1, #0x25                  	// #37
  4202bc:	mov	x0, x23
  4202c0:	bl	406d10 <strchr@plt>
  4202c4:	ldr	x8, [x25, #264]
  4202c8:	cmp	x24, x8
  4202cc:	b.ls	4202d4 <snap_implicit_rules@@Base+0x1a4>  // b.plast
  4202d0:	str	x24, [x25, #264]
  4202d4:	ldr	x8, [x21]
  4202d8:	add	w26, w26, #0x1
  4202dc:	cmp	x8, #0x0
  4202e0:	csel	x19, x21, x19, eq  // eq = none
  4202e4:	cbz	x0, 420274 <snap_implicit_rules@@Base+0x144>
  4202e8:	cmp	x23, x22
  4202ec:	cinc	x8, x23, eq  // eq = none
  4202f0:	sub	x23, x8, x22
  4202f4:	cmp	x23, x27
  4202f8:	b.ls	420310 <snap_implicit_rules@@Base+0x1e0>  // b.plast
  4202fc:	add	x1, x23, #0x1
  420300:	mov	x0, x20
  420304:	bl	41803c <xrealloc@@Base>
  420308:	mov	x20, x0
  42030c:	mov	x27, x23
  420310:	mov	x0, x20
  420314:	mov	x1, x22
  420318:	mov	x2, x23
  42031c:	bl	406790 <memcpy@plt>
  420320:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  420324:	mov	x0, x20
  420328:	add	x1, x1, #0x989
  42032c:	strb	wzr, [x20, x23]
  420330:	bl	408fb8 <dir_file_exists_p@@Base>
  420334:	ldrh	w8, [x21, #32]
  420338:	cmp	w0, #0x0
  42033c:	cset	w9, eq  // eq = none
  420340:	and	w8, w8, #0xfffffeff
  420344:	orr	w8, w8, w9, lsl #8
  420348:	b	42027c <snap_implicit_rules@@Base+0x14c>
  42034c:	mov	x0, x20
  420350:	bl	406cf0 <free@plt>
  420354:	mov	x0, x21
  420358:	bl	418388 <free_ns_chain@@Base>
  42035c:	ldp	x20, x19, [sp, #112]
  420360:	ldp	x22, x21, [sp, #96]
  420364:	ldp	x24, x23, [sp, #80]
  420368:	ldp	x26, x25, [sp, #64]
  42036c:	ldp	x28, x27, [sp, #48]
  420370:	ldp	x29, x30, [sp, #32]
  420374:	add	sp, sp, #0x80
  420378:	ret

000000000042037c <convert_to_pattern@@Base>:
  42037c:	stp	x29, x30, [sp, #-96]!
  420380:	adrp	x8, 440000 <shell_var@@Base+0x18>
  420384:	stp	x20, x19, [sp, #80]
  420388:	ldr	x20, [x8, #248]
  42038c:	adrp	x19, 43f000 <stdio_traced@@Base+0x1a38>
  420390:	stp	x28, x27, [sp, #16]
  420394:	stp	x26, x25, [sp, #32]
  420398:	stp	x24, x23, [sp, #48]
  42039c:	stp	x22, x21, [sp, #64]
  4203a0:	str	xzr, [x19, #1696]
  4203a4:	ldr	x21, [x20, #24]
  4203a8:	mov	x29, sp
  4203ac:	cbnz	x21, 4203e8 <convert_to_pattern@@Base+0x6c>
  4203b0:	ldr	x8, [x19, #1696]
  4203b4:	mov	w9, #0x1                   	// #1
  4203b8:	bfi	x9, x8, #1, #63
  4203bc:	add	x8, x9, #0xf
  4203c0:	and	x8, x8, #0xfffffffffffffff0
  4203c4:	mov	x9, sp
  4203c8:	sub	x19, x9, x8
  4203cc:	mov	sp, x19
  4203d0:	ldr	x28, [x20, #24]
  4203d4:	cbz	x28, 420674 <convert_to_pattern@@Base+0x2f8>
  4203d8:	adrp	x21, 440000 <shell_var@@Base+0x18>
  4203dc:	b	420418 <convert_to_pattern@@Base+0x9c>
  4203e0:	ldr	x21, [x21]
  4203e4:	cbz	x21, 4203b0 <convert_to_pattern@@Base+0x34>
  4203e8:	ldr	x0, [x21, #8]
  4203ec:	cbnz	x0, 4203f8 <convert_to_pattern@@Base+0x7c>
  4203f0:	ldr	x8, [x21, #16]
  4203f4:	ldr	x0, [x8]
  4203f8:	bl	4067d0 <strlen@plt>
  4203fc:	ldr	x8, [x19, #1696]
  420400:	cmp	x0, x8
  420404:	b.ls	4203e0 <convert_to_pattern@@Base+0x64>  // b.plast
  420408:	str	x0, [x19, #1696]
  42040c:	b	4203e0 <convert_to_pattern@@Base+0x64>
  420410:	ldr	x28, [x28]
  420414:	cbz	x28, 420674 <convert_to_pattern@@Base+0x2f8>
  420418:	ldr	x0, [x28, #8]
  42041c:	cbnz	x0, 420428 <convert_to_pattern@@Base+0xac>
  420420:	ldr	x8, [x28, #16]
  420424:	ldr	x0, [x8]
  420428:	mov	x1, xzr
  42042c:	mov	x2, xzr
  420430:	bl	420694 <convert_to_pattern@@Base+0x318>
  420434:	ldr	x8, [x28, #16]
  420438:	ldr	x2, [x8, #32]
  42043c:	cbz	x2, 420458 <convert_to_pattern@@Base+0xdc>
  420440:	ldr	x1, [x28, #8]
  420444:	cbnz	x1, 42044c <convert_to_pattern@@Base+0xd0>
  420448:	ldr	x1, [x8]
  42044c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  420450:	add	x0, x0, #0x989
  420454:	bl	420694 <convert_to_pattern@@Base+0x318>
  420458:	ldr	x23, [x28, #8]
  42045c:	mov	x0, x23
  420460:	cbnz	x23, 42046c <convert_to_pattern@@Base+0xf0>
  420464:	ldr	x8, [x28, #16]
  420468:	ldr	x0, [x8]
  42046c:	bl	4067d0 <strlen@plt>
  420470:	mov	x22, x0
  420474:	cbnz	x23, 420480 <convert_to_pattern@@Base+0x104>
  420478:	ldr	x8, [x28, #16]
  42047c:	ldr	x23, [x8]
  420480:	mov	x0, x19
  420484:	mov	x1, x23
  420488:	mov	x2, x22
  42048c:	bl	406790 <memcpy@plt>
  420490:	adrp	x8, 440000 <shell_var@@Base+0x18>
  420494:	ldr	x8, [x8, #248]
  420498:	ldr	x27, [x8, #24]
  42049c:	cbz	x27, 420410 <convert_to_pattern@@Base+0x94>
  4204a0:	add	x23, x19, x22
  4204a4:	add	x20, x22, #0x1
  4204a8:	b	4204bc <convert_to_pattern@@Base+0x140>
  4204ac:	ldr	x2, [x25, #32]
  4204b0:	bl	420694 <convert_to_pattern@@Base+0x318>
  4204b4:	ldr	x27, [x27]
  4204b8:	cbz	x27, 420410 <convert_to_pattern@@Base+0x94>
  4204bc:	ldr	x25, [x27, #8]
  4204c0:	mov	x0, x25
  4204c4:	cbnz	x25, 4204d0 <convert_to_pattern@@Base+0x154>
  4204c8:	ldr	x8, [x27, #16]
  4204cc:	ldr	x0, [x8]
  4204d0:	bl	4067d0 <strlen@plt>
  4204d4:	mov	x24, x0
  4204d8:	cmp	x22, x0
  4204dc:	b.ne	4205a0 <convert_to_pattern@@Base+0x224>  // b.any
  4204e0:	ldr	x8, [x28, #8]
  4204e4:	mov	x9, x8
  4204e8:	cbz	x8, 420500 <convert_to_pattern@@Base+0x184>
  4204ec:	mov	x10, x25
  4204f0:	cbz	x25, 420510 <convert_to_pattern@@Base+0x194>
  4204f4:	cmp	x9, x10
  4204f8:	b.ne	420520 <convert_to_pattern@@Base+0x1a4>  // b.any
  4204fc:	b	4204b4 <convert_to_pattern@@Base+0x138>
  420500:	ldr	x9, [x28, #16]
  420504:	ldr	x9, [x9]
  420508:	mov	x10, x25
  42050c:	cbnz	x25, 4204f4 <convert_to_pattern@@Base+0x178>
  420510:	ldr	x10, [x27, #16]
  420514:	ldr	x10, [x10]
  420518:	cmp	x9, x10
  42051c:	b.eq	4204b4 <convert_to_pattern@@Base+0x138>  // b.none
  420520:	mov	x9, x8
  420524:	cbnz	x8, 420530 <convert_to_pattern@@Base+0x1b4>
  420528:	ldr	x9, [x28, #16]
  42052c:	ldr	x9, [x9]
  420530:	ldrb	w9, [x9]
  420534:	mov	x10, x25
  420538:	cbnz	x25, 420544 <convert_to_pattern@@Base+0x1c8>
  42053c:	ldr	x10, [x27, #16]
  420540:	ldr	x10, [x10]
  420544:	ldrb	w10, [x10]
  420548:	cmp	w9, w10
  42054c:	b.ne	4205a0 <convert_to_pattern@@Base+0x224>  // b.any
  420550:	mov	x9, x8
  420554:	cbz	x8, 420564 <convert_to_pattern@@Base+0x1e8>
  420558:	ldrb	w9, [x9]
  42055c:	cbnz	w9, 420574 <convert_to_pattern@@Base+0x1f8>
  420560:	b	4204b4 <convert_to_pattern@@Base+0x138>
  420564:	ldr	x9, [x28, #16]
  420568:	ldr	x9, [x9]
  42056c:	ldrb	w9, [x9]
  420570:	cbz	w9, 4204b4 <convert_to_pattern@@Base+0x138>
  420574:	cbnz	x8, 420580 <convert_to_pattern@@Base+0x204>
  420578:	ldr	x8, [x28, #16]
  42057c:	ldr	x8, [x8]
  420580:	add	x0, x8, #0x1
  420584:	mov	x8, x25
  420588:	cbnz	x25, 420594 <convert_to_pattern@@Base+0x218>
  42058c:	ldr	x8, [x27, #16]
  420590:	ldr	x8, [x8]
  420594:	add	x1, x8, #0x1
  420598:	bl	406cb0 <strcmp@plt>
  42059c:	cbz	w0, 4204b4 <convert_to_pattern@@Base+0x138>
  4205a0:	cbnz	x25, 4205ac <convert_to_pattern@@Base+0x230>
  4205a4:	ldr	x8, [x27, #16]
  4205a8:	ldr	x25, [x8]
  4205ac:	add	x2, x24, #0x1
  4205b0:	mov	x0, x23
  4205b4:	mov	x1, x25
  4205b8:	bl	406790 <memcpy@plt>
  4205bc:	mov	x0, x19
  4205c0:	bl	40a798 <lookup_file@@Base>
  4205c4:	cbz	x0, 4204b4 <convert_to_pattern@@Base+0x138>
  4205c8:	ldr	x26, [x0, #32]
  4205cc:	mov	x25, x0
  4205d0:	cbz	x26, 4204b4 <convert_to_pattern@@Base+0x138>
  4205d4:	ldr	x8, [x25, #24]
  4205d8:	cbz	x8, 420608 <convert_to_pattern@@Base+0x28c>
  4205dc:	ldr	w8, [x21, #40]
  4205e0:	cbnz	w8, 4204b4 <convert_to_pattern@@Base+0x138>
  4205e4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4205e8:	mov	w2, #0x5                   	// #5
  4205ec:	mov	x0, xzr
  4205f0:	add	x1, x1, #0x9a0
  4205f4:	bl	406e50 <dcgettext@plt>
  4205f8:	mov	x2, x0
  4205fc:	mov	x0, x26
  420600:	mov	x1, xzr
  420604:	bl	418f84 <error@@Base>
  420608:	cmp	x24, #0x2
  42060c:	b.ne	420644 <convert_to_pattern@@Base+0x2c8>  // b.any
  420610:	ldrb	w8, [x23]
  420614:	cmp	w8, #0x2e
  420618:	b.ne	420644 <convert_to_pattern@@Base+0x2c8>  // b.any
  42061c:	ldrb	w8, [x19, x20]
  420620:	cmp	w8, #0x61
  420624:	b.ne	420644 <convert_to_pattern@@Base+0x2c8>  // b.any
  420628:	ldr	x1, [x28, #8]
  42062c:	cbnz	x1, 420638 <convert_to_pattern@@Base+0x2bc>
  420630:	ldr	x8, [x28, #16]
  420634:	ldr	x1, [x8]
  420638:	ldr	x2, [x25, #32]
  42063c:	mov	x0, xzr
  420640:	bl	420694 <convert_to_pattern@@Base+0x318>
  420644:	ldr	x0, [x27, #8]
  420648:	cbz	x0, 420658 <convert_to_pattern@@Base+0x2dc>
  42064c:	ldr	x1, [x28, #8]
  420650:	cbnz	x1, 4204ac <convert_to_pattern@@Base+0x130>
  420654:	b	420668 <convert_to_pattern@@Base+0x2ec>
  420658:	ldr	x8, [x27, #16]
  42065c:	ldr	x0, [x8]
  420660:	ldr	x1, [x28, #8]
  420664:	cbnz	x1, 4204ac <convert_to_pattern@@Base+0x130>
  420668:	ldr	x8, [x28, #16]
  42066c:	ldr	x1, [x8]
  420670:	b	4204ac <convert_to_pattern@@Base+0x130>
  420674:	mov	sp, x29
  420678:	ldp	x20, x19, [sp, #80]
  42067c:	ldp	x22, x21, [sp, #64]
  420680:	ldp	x24, x23, [sp, #48]
  420684:	ldp	x26, x25, [sp, #32]
  420688:	ldp	x28, x27, [sp, #16]
  42068c:	ldp	x29, x30, [sp], #96
  420690:	ret
  420694:	stp	x29, x30, [sp, #-80]!
  420698:	stp	x24, x23, [sp, #32]
  42069c:	mov	x23, x0
  4206a0:	mov	w0, #0x8                   	// #8
  4206a4:	str	x25, [sp, #16]
  4206a8:	stp	x22, x21, [sp, #48]
  4206ac:	stp	x20, x19, [sp, #64]
  4206b0:	mov	x29, sp
  4206b4:	mov	x19, x2
  4206b8:	mov	x22, x1
  4206bc:	bl	418070 <xmalloc@@Base>
  4206c0:	mov	x20, x0
  4206c4:	mov	w0, #0x8                   	// #8
  4206c8:	bl	418070 <xmalloc@@Base>
  4206cc:	mov	x21, x0
  4206d0:	cbz	x23, 4207b4 <convert_to_pattern@@Base+0x438>
  4206d4:	mov	x0, x23
  4206d8:	bl	4067d0 <strlen@plt>
  4206dc:	add	x9, x0, #0x11
  4206e0:	mov	x8, sp
  4206e4:	and	x9, x9, #0xfffffffffffffff0
  4206e8:	sub	x25, x8, x9
  4206ec:	add	x24, x0, #0x1
  4206f0:	mov	sp, x25
  4206f4:	mov	w8, #0x25                  	// #37
  4206f8:	mov	x0, x25
  4206fc:	strb	w8, [x0], #1
  420700:	mov	x1, x23
  420704:	mov	x2, x24
  420708:	bl	406790 <memcpy@plt>
  42070c:	mov	x0, x25
  420710:	mov	x1, x24
  420714:	bl	421000 <strcache_add_len@@Base>
  420718:	str	x0, [x20]
  42071c:	str	x0, [x21]
  420720:	cbz	x22, 420778 <convert_to_pattern@@Base+0x3fc>
  420724:	mov	x0, x22
  420728:	bl	4067d0 <strlen@plt>
  42072c:	add	x9, x0, #0x11
  420730:	mov	x8, sp
  420734:	and	x9, x9, #0xfffffffffffffff0
  420738:	sub	x24, x8, x9
  42073c:	add	x23, x0, #0x1
  420740:	mov	sp, x24
  420744:	mov	w8, #0x25                  	// #37
  420748:	mov	x0, x24
  42074c:	strb	w8, [x0], #1
  420750:	mov	x1, x22
  420754:	mov	x2, x23
  420758:	bl	406790 <memcpy@plt>
  42075c:	mov	w0, #0x28                  	// #40
  420760:	bl	418094 <xcalloc@@Base>
  420764:	mov	x22, x0
  420768:	mov	x0, x24
  42076c:	mov	x1, x23
  420770:	bl	421000 <strcache_add_len@@Base>
  420774:	str	x0, [x22, #8]
  420778:	mov	w2, #0x1                   	// #1
  42077c:	mov	x0, x20
  420780:	mov	x1, x21
  420784:	mov	w3, wzr
  420788:	mov	x4, x22
  42078c:	mov	x5, x19
  420790:	mov	w6, wzr
  420794:	bl	420b68 <create_pattern_rule@@Base>
  420798:	mov	sp, x29
  42079c:	ldp	x20, x19, [sp, #64]
  4207a0:	ldp	x22, x21, [sp, #48]
  4207a4:	ldp	x24, x23, [sp, #32]
  4207a8:	ldr	x25, [sp, #16]
  4207ac:	ldp	x29, x30, [sp], #80
  4207b0:	ret
  4207b4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4207b8:	add	x0, x0, #0xa59
  4207bc:	mov	w1, #0x5                   	// #5
  4207c0:	bl	421000 <strcache_add_len@@Base>
  4207c4:	str	x0, [x20]
  4207c8:	add	x0, x0, #0x1
  4207cc:	str	x0, [x21]
  4207d0:	cbnz	x22, 420724 <convert_to_pattern@@Base+0x3a8>
  4207d4:	b	420778 <convert_to_pattern@@Base+0x3fc>

00000000004207d8 <install_pattern_rule@@Base>:
  4207d8:	sub	sp, sp, #0x40
  4207dc:	stp	x20, x19, [sp, #48]
  4207e0:	mov	x19, x0
  4207e4:	mov	w0, #0x38                  	// #56
  4207e8:	stp	x29, x30, [sp, #16]
  4207ec:	stp	x22, x21, [sp, #32]
  4207f0:	add	x29, sp, #0x10
  4207f4:	mov	w21, w1
  4207f8:	bl	418070 <xmalloc@@Base>
  4207fc:	mov	w8, #0x1                   	// #1
  420800:	mov	x20, x0
  420804:	strh	w8, [x0, #48]
  420808:	mov	w0, #0x8                   	// #8
  42080c:	bl	418070 <xmalloc@@Base>
  420810:	str	x0, [x20, #8]
  420814:	mov	w0, #0x8                   	// #8
  420818:	bl	418070 <xmalloc@@Base>
  42081c:	str	x0, [x20, #24]
  420820:	mov	w0, #0x4                   	// #4
  420824:	bl	418070 <xmalloc@@Base>
  420828:	str	x0, [x20, #16]
  42082c:	mov	x22, x0
  420830:	ldr	x0, [x19]
  420834:	bl	4067d0 <strlen@plt>
  420838:	str	w0, [x22]
  42083c:	ldr	x8, [x19]
  420840:	ldr	x9, [x20, #8]
  420844:	str	x8, [x9]
  420848:	ldr	x0, [x20, #8]
  42084c:	bl	41af80 <find_percent_cached@@Base>
  420850:	ldr	x8, [x20, #24]
  420854:	mov	w1, #0x28                  	// #40
  420858:	mov	w2, #0x1                   	// #1
  42085c:	mov	x3, xzr
  420860:	str	x0, [x8]
  420864:	ldr	x8, [x20, #24]
  420868:	add	x0, sp, #0x8
  42086c:	mov	w4, wzr
  420870:	ldr	x9, [x8]
  420874:	add	x9, x9, #0x1
  420878:	str	x9, [x8]
  42087c:	ldr	x8, [x19, #8]
  420880:	str	x8, [sp, #8]
  420884:	bl	41b484 <parse_file_seq@@Base>
  420888:	str	x0, [x20, #32]
  42088c:	mov	x0, x20
  420890:	mov	w1, wzr
  420894:	bl	4208ec <install_pattern_rule@@Base+0x114>
  420898:	cbz	w0, 4208d8 <install_pattern_rule@@Base+0x100>
  42089c:	cmp	w21, #0x0
  4208a0:	cset	w8, ne  // ne = any
  4208a4:	mov	w0, #0x38                  	// #56
  4208a8:	strb	w8, [x20, #50]
  4208ac:	bl	418070 <xmalloc@@Base>
  4208b0:	str	x0, [x20, #40]
  4208b4:	str	xzr, [x0]
  4208b8:	ldr	x8, [x20, #40]
  4208bc:	stp	xzr, xzr, [x8, #8]
  4208c0:	ldr	x0, [x19, #16]
  4208c4:	bl	4180bc <xstrdup@@Base>
  4208c8:	ldr	x8, [x20, #40]
  4208cc:	mov	w9, #0x9                   	// #9
  4208d0:	stp	x0, xzr, [x8, #24]
  4208d4:	strb	w9, [x8, #50]
  4208d8:	ldp	x20, x19, [sp, #48]
  4208dc:	ldp	x22, x21, [sp, #32]
  4208e0:	ldp	x29, x30, [sp, #16]
  4208e4:	add	sp, sp, #0x40
  4208e8:	ret
  4208ec:	stp	x29, x30, [sp, #-96]!
  4208f0:	stp	x28, x27, [sp, #16]
  4208f4:	stp	x26, x25, [sp, #32]
  4208f8:	stp	x24, x23, [sp, #48]
  4208fc:	stp	x22, x21, [sp, #64]
  420900:	stp	x20, x19, [sp, #80]
  420904:	strh	wzr, [x0, #50]
  420908:	str	xzr, [x0]
  42090c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  420910:	ldr	x8, [x8, #256]
  420914:	mov	x19, x0
  420918:	mov	x29, sp
  42091c:	cbz	x8, 420b24 <install_pattern_rule@@Base+0x34c>
  420920:	mov	w20, w1
  420924:	mov	x21, xzr
  420928:	b	420938 <install_pattern_rule@@Base+0x160>
  42092c:	ldr	x8, [x22]
  420930:	mov	x21, x22
  420934:	cbz	x8, 420b24 <install_pattern_rule@@Base+0x34c>
  420938:	ldrh	w9, [x19, #48]
  42093c:	mov	x22, x8
  420940:	cbz	w9, 42092c <install_pattern_rule@@Base+0x154>
  420944:	mov	x26, xzr
  420948:	b	420964 <install_pattern_rule@@Base+0x18c>
  42094c:	mov	w8, wzr
  420950:	cbnz	w8, 420b14 <install_pattern_rule@@Base+0x33c>
  420954:	ldrh	w8, [x19, #48]
  420958:	add	x26, x26, #0x1
  42095c:	cmp	x26, x8
  420960:	b.cs	42092c <install_pattern_rule@@Base+0x154>  // b.hs, b.nlast
  420964:	ldrh	w27, [x22, #48]
  420968:	cbz	w27, 4209c8 <install_pattern_rule@@Base+0x1f0>
  42096c:	ldr	x8, [x19, #8]
  420970:	ldr	x25, [x22, #8]
  420974:	mov	x28, xzr
  420978:	ldr	x24, [x8, x26, lsl #3]
  42097c:	add	x23, x24, #0x1
  420980:	b	420994 <install_pattern_rule@@Base+0x1bc>
  420984:	ldrh	w27, [x22, #48]
  420988:	add	x28, x28, #0x1
  42098c:	cmp	x28, x27
  420990:	b.cs	4209cc <install_pattern_rule@@Base+0x1f4>  // b.hs, b.nlast
  420994:	ldr	x8, [x25, x28, lsl #3]
  420998:	cmp	x24, x8
  42099c:	b.eq	420984 <install_pattern_rule@@Base+0x1ac>  // b.none
  4209a0:	ldrb	w9, [x24]
  4209a4:	ldrb	w10, [x8]
  4209a8:	cmp	w9, w10
  4209ac:	b.ne	4209cc <install_pattern_rule@@Base+0x1f4>  // b.any
  4209b0:	cbz	w9, 420984 <install_pattern_rule@@Base+0x1ac>
  4209b4:	add	x1, x8, #0x1
  4209b8:	mov	x0, x23
  4209bc:	bl	406cb0 <strcmp@plt>
  4209c0:	cbz	w0, 420984 <install_pattern_rule@@Base+0x1ac>
  4209c4:	b	4209cc <install_pattern_rule@@Base+0x1f4>
  4209c8:	mov	w28, wzr
  4209cc:	cmp	w28, w27
  4209d0:	b.ne	420954 <install_pattern_rule@@Base+0x17c>  // b.any
  4209d4:	ldr	x23, [x22, #32]
  4209d8:	ldr	x27, [x19, #32]
  4209dc:	cbz	x23, 420abc <install_pattern_rule@@Base+0x2e4>
  4209e0:	cbz	x27, 420abc <install_pattern_rule@@Base+0x2e4>
  4209e4:	ldr	x8, [x27, #8]
  4209e8:	mov	x10, x8
  4209ec:	cbnz	x8, 4209f8 <install_pattern_rule@@Base+0x220>
  4209f0:	ldr	x9, [x27, #16]
  4209f4:	ldr	x10, [x9]
  4209f8:	ldr	x9, [x23, #8]
  4209fc:	mov	x11, x9
  420a00:	cbz	x9, 420a10 <install_pattern_rule@@Base+0x238>
  420a04:	cmp	x10, x11
  420a08:	b.ne	420a20 <install_pattern_rule@@Base+0x248>  // b.any
  420a0c:	b	420a8c <install_pattern_rule@@Base+0x2b4>
  420a10:	ldr	x11, [x23, #16]
  420a14:	ldr	x11, [x11]
  420a18:	cmp	x10, x11
  420a1c:	b.eq	420a8c <install_pattern_rule@@Base+0x2b4>  // b.none
  420a20:	mov	x10, x8
  420a24:	cbnz	x8, 420a30 <install_pattern_rule@@Base+0x258>
  420a28:	ldr	x10, [x27, #16]
  420a2c:	ldr	x10, [x10]
  420a30:	ldrb	w10, [x10]
  420a34:	mov	x11, x9
  420a38:	cbnz	x9, 420a44 <install_pattern_rule@@Base+0x26c>
  420a3c:	ldr	x11, [x23, #16]
  420a40:	ldr	x11, [x11]
  420a44:	ldrb	w11, [x11]
  420a48:	cmp	w10, w11
  420a4c:	b.ne	420abc <install_pattern_rule@@Base+0x2e4>  // b.any
  420a50:	mov	x10, x8
  420a54:	cbz	x8, 420a64 <install_pattern_rule@@Base+0x28c>
  420a58:	ldrb	w10, [x10]
  420a5c:	cbnz	w10, 420a74 <install_pattern_rule@@Base+0x29c>
  420a60:	b	420a8c <install_pattern_rule@@Base+0x2b4>
  420a64:	ldr	x10, [x27, #16]
  420a68:	ldr	x10, [x10]
  420a6c:	ldrb	w10, [x10]
  420a70:	cbz	w10, 420a8c <install_pattern_rule@@Base+0x2b4>
  420a74:	cbz	x8, 420aa0 <install_pattern_rule@@Base+0x2c8>
  420a78:	add	x0, x8, #0x1
  420a7c:	cbz	x9, 420ab0 <install_pattern_rule@@Base+0x2d8>
  420a80:	add	x1, x9, #0x1
  420a84:	bl	406cb0 <strcmp@plt>
  420a88:	cbnz	w0, 420abc <install_pattern_rule@@Base+0x2e4>
  420a8c:	ldr	x23, [x23]
  420a90:	ldr	x27, [x27]
  420a94:	cbz	x23, 420abc <install_pattern_rule@@Base+0x2e4>
  420a98:	cbnz	x27, 4209e4 <install_pattern_rule@@Base+0x20c>
  420a9c:	b	420abc <install_pattern_rule@@Base+0x2e4>
  420aa0:	ldr	x8, [x27, #16]
  420aa4:	ldr	x8, [x8]
  420aa8:	add	x0, x8, #0x1
  420aac:	cbnz	x9, 420a80 <install_pattern_rule@@Base+0x2a8>
  420ab0:	ldr	x8, [x23, #16]
  420ab4:	ldr	x9, [x8]
  420ab8:	b	420a80 <install_pattern_rule@@Base+0x2a8>
  420abc:	orr	x8, x23, x27
  420ac0:	cbnz	x8, 42094c <install_pattern_rule@@Base+0x174>
  420ac4:	cbz	w20, 420b00 <install_pattern_rule@@Base+0x328>
  420ac8:	mov	x0, x22
  420acc:	mov	x1, x21
  420ad0:	bl	420df4 <print_rule_data_base@@Base+0x1b0>
  420ad4:	adrp	x11, 440000 <shell_var@@Base+0x18>
  420ad8:	add	x11, x11, #0x100
  420adc:	ldr	x8, [x11]
  420ae0:	adrp	x10, 440000 <shell_var@@Base+0x18>
  420ae4:	ldr	x9, [x10, #280]
  420ae8:	cmp	x8, #0x0
  420aec:	csel	x8, x11, x9, eq  // eq = none
  420af0:	str	x19, [x8]
  420af4:	str	x19, [x10, #280]
  420af8:	mov	w8, #0xe                   	// #14
  420afc:	b	420950 <install_pattern_rule@@Base+0x178>
  420b00:	mov	x0, x19
  420b04:	mov	x1, xzr
  420b08:	bl	420df4 <print_rule_data_base@@Base+0x1b0>
  420b0c:	mov	w8, #0x1                   	// #1
  420b10:	b	420950 <install_pattern_rule@@Base+0x178>
  420b14:	cmp	w8, #0xe
  420b18:	b.eq	420b48 <install_pattern_rule@@Base+0x370>  // b.none
  420b1c:	mov	w0, wzr
  420b20:	b	420b4c <install_pattern_rule@@Base+0x374>
  420b24:	adrp	x11, 440000 <shell_var@@Base+0x18>
  420b28:	add	x11, x11, #0x100
  420b2c:	ldr	x8, [x11]
  420b30:	adrp	x10, 440000 <shell_var@@Base+0x18>
  420b34:	ldr	x9, [x10, #280]
  420b38:	cmp	x8, #0x0
  420b3c:	csel	x8, x11, x9, eq  // eq = none
  420b40:	str	x19, [x8]
  420b44:	str	x19, [x10, #280]
  420b48:	mov	w0, #0x1                   	// #1
  420b4c:	ldp	x20, x19, [sp, #80]
  420b50:	ldp	x22, x21, [sp, #64]
  420b54:	ldp	x24, x23, [sp, #48]
  420b58:	ldp	x26, x25, [sp, #32]
  420b5c:	ldp	x28, x27, [sp, #16]
  420b60:	ldp	x29, x30, [sp], #96
  420b64:	ret

0000000000420b68 <create_pattern_rule@@Base>:
  420b68:	stp	x29, x30, [sp, #-96]!
  420b6c:	stp	x22, x21, [sp, #64]
  420b70:	mov	x22, x0
  420b74:	mov	w0, #0x38                  	// #56
  420b78:	str	x27, [sp, #16]
  420b7c:	stp	x26, x25, [sp, #32]
  420b80:	stp	x24, x23, [sp, #48]
  420b84:	stp	x20, x19, [sp, #80]
  420b88:	mov	x29, sp
  420b8c:	mov	w20, w6
  420b90:	mov	x24, x5
  420b94:	mov	x25, x4
  420b98:	mov	w19, w3
  420b9c:	mov	w23, w2
  420ba0:	mov	x26, x1
  420ba4:	and	w27, w2, #0xffff
  420ba8:	bl	418070 <xmalloc@@Base>
  420bac:	and	x8, x23, #0xffff
  420bb0:	mov	x21, x0
  420bb4:	strh	w23, [x0, #48]
  420bb8:	stp	x25, x24, [x0, #32]
  420bbc:	str	x22, [x0, #8]
  420bc0:	str	x26, [x0, #24]
  420bc4:	lsl	x0, x8, #2
  420bc8:	bl	418070 <xmalloc@@Base>
  420bcc:	str	x0, [x21, #16]
  420bd0:	cbz	w27, 420c0c <create_pattern_rule@@Base+0xa4>
  420bd4:	mov	x24, xzr
  420bd8:	and	x23, x23, #0xffff
  420bdc:	lsl	x25, x24, #3
  420be0:	ldr	x0, [x22, x25]
  420be4:	bl	4067d0 <strlen@plt>
  420be8:	ldr	x8, [x21, #16]
  420bec:	str	w0, [x8, x24, lsl #2]
  420bf0:	ldr	x8, [x21, #24]
  420bf4:	add	x24, x24, #0x1
  420bf8:	cmp	x23, x24
  420bfc:	ldr	x9, [x8, x25]
  420c00:	add	x9, x9, #0x1
  420c04:	str	x9, [x8, x25]
  420c08:	b.ne	420bdc <create_pattern_rule@@Base+0x74>  // b.any
  420c0c:	mov	x0, x21
  420c10:	mov	w1, w20
  420c14:	bl	4208ec <install_pattern_rule@@Base+0x114>
  420c18:	cbz	w0, 420c28 <create_pattern_rule@@Base+0xc0>
  420c1c:	cmp	w19, #0x0
  420c20:	cset	w8, ne  // ne = any
  420c24:	strb	w8, [x21, #50]
  420c28:	ldp	x20, x19, [sp, #80]
  420c2c:	ldp	x22, x21, [sp, #64]
  420c30:	ldp	x24, x23, [sp, #48]
  420c34:	ldp	x26, x25, [sp, #32]
  420c38:	ldr	x27, [sp, #16]
  420c3c:	ldp	x29, x30, [sp], #96
  420c40:	ret

0000000000420c44 <print_rule_data_base@@Base>:
  420c44:	stp	x29, x30, [sp, #-48]!
  420c48:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  420c4c:	add	x1, x1, #0x9da
  420c50:	mov	w2, #0x5                   	// #5
  420c54:	mov	x0, xzr
  420c58:	str	x21, [sp, #16]
  420c5c:	stp	x20, x19, [sp, #32]
  420c60:	mov	x29, sp
  420c64:	bl	406e50 <dcgettext@plt>
  420c68:	bl	406c40 <puts@plt>
  420c6c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  420c70:	ldr	x21, [x8, #256]
  420c74:	cbz	x21, 420ce8 <print_rule_data_base@@Base+0xa4>
  420c78:	mov	w20, wzr
  420c7c:	mov	w19, wzr
  420c80:	mov	w0, #0xa                   	// #10
  420c84:	add	w19, w19, #0x1
  420c88:	bl	406f20 <putchar@plt>
  420c8c:	mov	x0, x21
  420c90:	bl	420d5c <print_rule_data_base@@Base+0x118>
  420c94:	ldrb	w8, [x21, #50]
  420c98:	ldr	x21, [x21]
  420c9c:	cmp	w8, #0x0
  420ca0:	cinc	w20, w20, ne  // ne = any
  420ca4:	cbnz	x21, 420c80 <print_rule_data_base@@Base+0x3c>
  420ca8:	cbz	w19, 420cf4 <print_rule_data_base@@Base+0xb0>
  420cac:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  420cb0:	add	x1, x1, #0xa02
  420cb4:	mov	w2, #0x5                   	// #5
  420cb8:	mov	x0, xzr
  420cbc:	bl	406e50 <dcgettext@plt>
  420cc0:	ucvtf	d0, w20
  420cc4:	ucvtf	d1, w19
  420cc8:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  420ccc:	fdiv	d0, d0, d1
  420cd0:	fmov	d1, x8
  420cd4:	fmul	d0, d0, d1
  420cd8:	mov	w1, w19
  420cdc:	mov	w2, w20
  420ce0:	bl	406ef0 <printf@plt>
  420ce4:	b	420d0c <print_rule_data_base@@Base+0xc8>
  420ce8:	mov	w19, wzr
  420cec:	mov	w20, wzr
  420cf0:	cbnz	w19, 420cac <print_rule_data_base@@Base+0x68>
  420cf4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  420cf8:	add	x1, x1, #0x9ec
  420cfc:	mov	w2, #0x5                   	// #5
  420d00:	mov	x0, xzr
  420d04:	bl	406e50 <dcgettext@plt>
  420d08:	bl	406c40 <puts@plt>
  420d0c:	adrp	x20, 440000 <shell_var@@Base+0x18>
  420d10:	ldr	w8, [x20, #288]
  420d14:	cmp	w8, w19
  420d18:	b.eq	420d20 <print_rule_data_base@@Base+0xdc>  // b.none
  420d1c:	cbnz	w8, 420d30 <print_rule_data_base@@Base+0xec>
  420d20:	ldp	x20, x19, [sp, #32]
  420d24:	ldr	x21, [sp, #16]
  420d28:	ldp	x29, x30, [sp], #48
  420d2c:	ret
  420d30:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  420d34:	add	x1, x1, #0xa2e
  420d38:	mov	w2, #0x5                   	// #5
  420d3c:	mov	x0, xzr
  420d40:	bl	406e50 <dcgettext@plt>
  420d44:	ldr	w3, [x20, #288]
  420d48:	mov	x2, x0
  420d4c:	mov	w1, #0x28                  	// #40
  420d50:	mov	x0, xzr
  420d54:	mov	w4, w19
  420d58:	bl	4190fc <fatal@@Base>
  420d5c:	stp	x29, x30, [sp, #-64]!
  420d60:	stp	x22, x21, [sp, #32]
  420d64:	stp	x20, x19, [sp, #48]
  420d68:	ldrh	w8, [x0, #48]
  420d6c:	mov	x19, x0
  420d70:	str	x23, [sp, #16]
  420d74:	mov	x29, sp
  420d78:	cbz	w8, 420dbc <print_rule_data_base@@Base+0x178>
  420d7c:	mov	x20, xzr
  420d80:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  420d84:	mov	w22, #0x20                  	// #32
  420d88:	mov	w23, #0x3a                  	// #58
  420d8c:	ldr	x8, [x19, #8]
  420d90:	ldr	x1, [x21, #2512]
  420d94:	ldr	x0, [x8, x20, lsl #3]
  420d98:	bl	4067e0 <fputs@plt>
  420d9c:	ldrh	w8, [x19, #48]
  420da0:	add	x20, x20, #0x1
  420da4:	cmp	x20, x8
  420da8:	csel	w0, w23, w22, eq  // eq = none
  420dac:	bl	406f20 <putchar@plt>
  420db0:	ldrh	w8, [x19, #48]
  420db4:	cmp	x20, x8
  420db8:	b.cc	420d8c <print_rule_data_base@@Base+0x148>  // b.lo, b.ul, b.last
  420dbc:	ldrb	w8, [x19, #50]
  420dc0:	cbz	w8, 420dcc <print_rule_data_base@@Base+0x188>
  420dc4:	mov	w0, #0x3a                  	// #58
  420dc8:	bl	406f20 <putchar@plt>
  420dcc:	ldr	x0, [x19, #32]
  420dd0:	bl	40bbb0 <print_prereqs@@Base>
  420dd4:	ldr	x0, [x19, #40]
  420dd8:	cbz	x0, 420de0 <print_rule_data_base@@Base+0x19c>
  420ddc:	bl	408c04 <print_commands@@Base>
  420de0:	ldp	x20, x19, [sp, #48]
  420de4:	ldp	x22, x21, [sp, #32]
  420de8:	ldr	x23, [sp, #16]
  420dec:	ldp	x29, x30, [sp], #64
  420df0:	ret
  420df4:	stp	x29, x30, [sp, #-48]!
  420df8:	stp	x20, x19, [sp, #32]
  420dfc:	str	x21, [sp, #16]
  420e00:	mov	x20, x0
  420e04:	ldr	x21, [x0]
  420e08:	ldr	x0, [x0, #32]
  420e0c:	mov	x29, sp
  420e10:	mov	x19, x1
  420e14:	bl	418388 <free_ns_chain@@Base>
  420e18:	ldr	x0, [x20, #8]
  420e1c:	bl	406cf0 <free@plt>
  420e20:	ldr	x0, [x20, #24]
  420e24:	bl	406cf0 <free@plt>
  420e28:	ldr	x0, [x20, #16]
  420e2c:	bl	406cf0 <free@plt>
  420e30:	mov	x0, x20
  420e34:	bl	406cf0 <free@plt>
  420e38:	adrp	x8, 440000 <shell_var@@Base+0x18>
  420e3c:	ldr	x8, [x8, #256]
  420e40:	cmp	x8, x20
  420e44:	b.eq	420e54 <print_rule_data_base@@Base+0x210>  // b.none
  420e48:	cbz	x19, 420e64 <print_rule_data_base@@Base+0x220>
  420e4c:	mov	x8, x19
  420e50:	b	420e60 <print_rule_data_base@@Base+0x21c>
  420e54:	cbnz	x19, 420e88 <print_rule_data_base@@Base+0x244>
  420e58:	adrp	x8, 440000 <shell_var@@Base+0x18>
  420e5c:	add	x8, x8, #0x100
  420e60:	str	x21, [x8]
  420e64:	adrp	x8, 440000 <shell_var@@Base+0x18>
  420e68:	ldr	x9, [x8, #280]
  420e6c:	cmp	x9, x20
  420e70:	b.ne	420e78 <print_rule_data_base@@Base+0x234>  // b.any
  420e74:	str	x19, [x8, #280]
  420e78:	ldp	x20, x19, [sp, #32]
  420e7c:	ldr	x21, [sp, #16]
  420e80:	ldp	x29, x30, [sp], #48
  420e84:	ret
  420e88:	bl	406c10 <abort@plt>

0000000000420e8c <strcache_iscached@@Base>:
  420e8c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  420e90:	ldr	x8, [x8, #1704]
  420e94:	cbnz	x8, 420ed4 <strcache_iscached@@Base+0x48>
  420e98:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  420e9c:	ldr	x8, [x8, #1712]
  420ea0:	cbnz	x8, 420f00 <strcache_iscached@@Base+0x74>
  420ea4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  420ea8:	ldr	x8, [x8, #1720]
  420eac:	cbz	x8, 420ec4 <strcache_iscached@@Base+0x38>
  420eb0:	add	x9, x8, #0x8
  420eb4:	cmp	x9, x0
  420eb8:	b.eq	420f20 <strcache_iscached@@Base+0x94>  // b.none
  420ebc:	ldr	x8, [x8]
  420ec0:	cbnz	x8, 420eb0 <strcache_iscached@@Base+0x24>
  420ec4:	mov	w0, wzr
  420ec8:	ret
  420ecc:	ldr	x8, [x8]
  420ed0:	cbz	x8, 420e98 <strcache_iscached@@Base+0xc>
  420ed4:	add	x9, x8, #0xe
  420ed8:	cmp	x9, x0
  420edc:	b.hi	420ecc <strcache_iscached@@Base+0x40>  // b.pmore
  420ee0:	ldrh	w9, [x8, #8]
  420ee4:	add	x9, x8, x9
  420ee8:	add	x9, x9, #0xe
  420eec:	cmp	x9, x0
  420ef0:	b.ls	420ecc <strcache_iscached@@Base+0x40>  // b.plast
  420ef4:	b	420f20 <strcache_iscached@@Base+0x94>
  420ef8:	ldr	x8, [x8]
  420efc:	cbz	x8, 420ea4 <strcache_iscached@@Base+0x18>
  420f00:	add	x9, x8, #0xe
  420f04:	cmp	x9, x0
  420f08:	b.hi	420ef8 <strcache_iscached@@Base+0x6c>  // b.pmore
  420f0c:	ldrh	w9, [x8, #8]
  420f10:	add	x9, x8, x9
  420f14:	add	x9, x9, #0xe
  420f18:	cmp	x9, x0
  420f1c:	b.ls	420ef8 <strcache_iscached@@Base+0x6c>  // b.plast
  420f20:	mov	w0, #0x1                   	// #1
  420f24:	ret

0000000000420f28 <strcache_add@@Base>:
  420f28:	stp	x29, x30, [sp, #-32]!
  420f2c:	str	x19, [sp, #16]
  420f30:	mov	x29, sp
  420f34:	mov	x19, x0
  420f38:	bl	4067d0 <strlen@plt>
  420f3c:	mov	x1, x0
  420f40:	mov	x0, x19
  420f44:	bl	420f54 <strcache_add@@Base+0x2c>
  420f48:	ldr	x19, [sp, #16]
  420f4c:	ldp	x29, x30, [sp], #32
  420f50:	ret
  420f54:	stp	x29, x30, [sp, #-48]!
  420f58:	mov	w8, #0xffff                	// #65535
  420f5c:	stp	x20, x19, [sp, #32]
  420f60:	mov	x19, x1
  420f64:	cmp	x1, x8
  420f68:	mov	x20, x0
  420f6c:	stp	x22, x21, [sp, #16]
  420f70:	mov	x29, sp
  420f74:	b.cc	420f8c <strcache_add@@Base+0x64>  // b.lo, b.ul, b.last
  420f78:	mov	x0, x20
  420f7c:	mov	x1, x19
  420f80:	bl	42132c <strcache_print_stats@@Base+0x250>
  420f84:	mov	x22, x0
  420f88:	b	420fec <strcache_add@@Base+0xc4>
  420f8c:	adrp	x0, 43f000 <stdio_traced@@Base+0x1a38>
  420f90:	add	x0, x0, #0x6c0
  420f94:	mov	x1, x20
  420f98:	bl	40fad4 <hash_find_slot@@Base>
  420f9c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  420fa0:	ldr	x9, [x8, #1832]
  420fa4:	ldr	x22, [x0]
  420fa8:	mov	x21, x0
  420fac:	add	x9, x9, #0x1
  420fb0:	str	x9, [x8, #1832]
  420fb4:	cbz	x22, 420fc8 <strcache_add@@Base+0xa0>
  420fb8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  420fbc:	ldr	x8, [x8, #2344]
  420fc0:	cmp	x22, x8
  420fc4:	b.ne	420fec <strcache_add@@Base+0xc4>  // b.any
  420fc8:	mov	x0, x20
  420fcc:	mov	w1, w19
  420fd0:	bl	42138c <strcache_print_stats@@Base+0x2b0>
  420fd4:	mov	x22, x0
  420fd8:	adrp	x0, 43f000 <stdio_traced@@Base+0x1a38>
  420fdc:	add	x0, x0, #0x6c0
  420fe0:	mov	x1, x22
  420fe4:	mov	x2, x21
  420fe8:	bl	40fc04 <hash_insert_at@@Base>
  420fec:	mov	x0, x22
  420ff0:	ldp	x20, x19, [sp, #32]
  420ff4:	ldp	x22, x21, [sp, #16]
  420ff8:	ldp	x29, x30, [sp], #48
  420ffc:	ret

0000000000421000 <strcache_add_len@@Base>:
  421000:	stp	x29, x30, [sp, #-32]!
  421004:	stp	x20, x19, [sp, #16]
  421008:	mov	x19, x1
  42100c:	ldrb	w8, [x0, x19]
  421010:	mov	x1, x0
  421014:	mov	x29, sp
  421018:	cbz	w8, 421044 <strcache_add_len@@Base+0x44>
  42101c:	add	x9, x19, #0x10
  421020:	mov	x8, sp
  421024:	and	x9, x9, #0xfffffffffffffff0
  421028:	sub	x20, x8, x9
  42102c:	mov	sp, x20
  421030:	mov	x0, x20
  421034:	mov	x2, x19
  421038:	bl	406790 <memcpy@plt>
  42103c:	mov	x1, x20
  421040:	strb	wzr, [x20, x19]
  421044:	mov	x0, x1
  421048:	mov	x1, x19
  42104c:	bl	420f54 <strcache_add@@Base+0x2c>
  421050:	mov	sp, x29
  421054:	ldp	x20, x19, [sp, #16]
  421058:	ldp	x29, x30, [sp], #32
  42105c:	ret

0000000000421060 <strcache_init@@Base>:
  421060:	stp	x29, x30, [sp, #-16]!
  421064:	adrp	x0, 43f000 <stdio_traced@@Base+0x1a38>
  421068:	adrp	x2, 421000 <strcache_add_len@@Base>
  42106c:	adrp	x3, 421000 <strcache_add_len@@Base>
  421070:	adrp	x4, 421000 <strcache_add_len@@Base>
  421074:	add	x0, x0, #0x6c0
  421078:	add	x2, x2, #0x98
  42107c:	add	x3, x3, #0xb0
  421080:	add	x4, x4, #0xb8
  421084:	mov	w1, #0x1f40                	// #8000
  421088:	mov	x29, sp
  42108c:	bl	40f974 <hash_init@@Base>
  421090:	ldp	x29, x30, [sp], #16
  421094:	ret
  421098:	stp	x29, x30, [sp, #-16]!
  42109c:	mov	x29, sp
  4210a0:	bl	4102b4 <jhash_string@@Base>
  4210a4:	mov	w0, w0
  4210a8:	ldp	x29, x30, [sp], #16
  4210ac:	ret
  4210b0:	mov	x0, xzr
  4210b4:	ret
  4210b8:	cmp	x0, x1
  4210bc:	b.eq	4210d4 <strcache_init@@Base+0x74>  // b.none
  4210c0:	stp	x29, x30, [sp, #-16]!
  4210c4:	mov	x29, sp
  4210c8:	bl	406cb0 <strcmp@plt>
  4210cc:	ldp	x29, x30, [sp], #16
  4210d0:	ret
  4210d4:	mov	w0, wzr
  4210d8:	ret

00000000004210dc <strcache_print_stats@@Base>:
  4210dc:	stp	x29, x30, [sp, #-96]!
  4210e0:	stp	x24, x23, [sp, #48]
  4210e4:	adrp	x24, 43f000 <stdio_traced@@Base+0x1a38>
  4210e8:	ldr	x8, [x24, #1704]
  4210ec:	stp	x20, x19, [sp, #80]
  4210f0:	mov	x19, x0
  4210f4:	str	x27, [sp, #16]
  4210f8:	stp	x26, x25, [sp, #32]
  4210fc:	stp	x22, x21, [sp, #64]
  421100:	mov	x29, sp
  421104:	cbz	x8, 421148 <strcache_print_stats@@Base+0x6c>
  421108:	ldr	x8, [x8]
  42110c:	cbz	x8, 421168 <strcache_print_stats@@Base+0x8c>
  421110:	mov	x25, xzr
  421114:	mov	x21, xzr
  421118:	mov	x20, xzr
  42111c:	mov	w22, #0x1fe2                	// #8162
  421120:	ldrh	w9, [x8, #10]
  421124:	ldr	x8, [x8]
  421128:	add	x25, x25, #0x1
  42112c:	cmp	x20, x9
  421130:	csel	x20, x9, x20, cc  // cc = lo, ul, last
  421134:	cmp	x22, x9
  421138:	add	x21, x21, x9
  42113c:	csel	x22, x9, x22, hi  // hi = pmore
  421140:	cbnz	x8, 421120 <strcache_print_stats@@Base+0x44>
  421144:	b	421178 <strcache_print_stats@@Base+0x9c>
  421148:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42114c:	add	x1, x1, #0xa5f
  421150:	mov	w2, #0x5                   	// #5
  421154:	mov	x0, xzr
  421158:	bl	406e50 <dcgettext@plt>
  42115c:	mov	x1, x19
  421160:	bl	406ef0 <printf@plt>
  421164:	b	421310 <strcache_print_stats@@Base+0x234>
  421168:	mov	x20, xzr
  42116c:	mov	x21, xzr
  421170:	mov	x25, xzr
  421174:	mov	w22, #0x1fe2                	// #8162
  421178:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  42117c:	ldr	x8, [x8, #1712]
  421180:	cbz	x8, 4211b4 <strcache_print_stats@@Base+0xd8>
  421184:	mov	x23, xzr
  421188:	ldrh	w9, [x8, #10]
  42118c:	ldr	x8, [x8]
  421190:	add	x23, x23, #0x1
  421194:	cmp	x20, x9
  421198:	csel	x20, x9, x20, cc  // cc = lo, ul, last
  42119c:	cmp	x22, x9
  4211a0:	add	x21, x21, x9
  4211a4:	csel	x22, x9, x22, hi  // hi = pmore
  4211a8:	cbnz	x8, 421188 <strcache_print_stats@@Base+0xac>
  4211ac:	add	x25, x25, x23
  4211b0:	b	4211b8 <strcache_print_stats@@Base+0xdc>
  4211b4:	mov	x23, xzr
  4211b8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4211bc:	add	x1, x1, #0xa78
  4211c0:	mov	w2, #0x5                   	// #5
  4211c4:	mov	x0, xzr
  4211c8:	bl	406e50 <dcgettext@plt>
  4211cc:	adrp	x26, 43f000 <stdio_traced@@Base+0x1a38>
  4211d0:	adrp	x27, 43f000 <stdio_traced@@Base+0x1a38>
  4211d4:	ldr	x4, [x26, #1816]
  4211d8:	ldr	x5, [x27, #1824]
  4211dc:	add	x2, x25, #0x1
  4211e0:	mov	x1, x19
  4211e4:	mov	x3, x23
  4211e8:	udiv	x6, x5, x4
  4211ec:	bl	406ef0 <printf@plt>
  4211f0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4211f4:	add	x1, x1, #0xac9
  4211f8:	mov	w2, #0x5                   	// #5
  4211fc:	mov	x0, xzr
  421200:	bl	406e50 <dcgettext@plt>
  421204:	ldr	x8, [x24, #1704]
  421208:	mov	w2, #0x1fe2                	// #8162
  42120c:	mov	x1, x19
  421210:	ldrh	w3, [x8, #8]
  421214:	ldrh	w4, [x8, #12]
  421218:	udiv	w5, w3, w4
  42121c:	bl	406ef0 <printf@plt>
  421220:	cbz	x25, 421298 <strcache_print_stats@@Base+0x1bc>
  421224:	ldr	x8, [x24, #1704]
  421228:	ldr	x9, [x27, #1824]
  42122c:	ldr	x10, [x26, #1816]
  421230:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  421234:	ldrh	w11, [x8, #8]
  421238:	ldrh	w8, [x8, #12]
  42123c:	add	x1, x1, #0xb11
  421240:	mov	w2, #0x5                   	// #5
  421244:	mov	x0, xzr
  421248:	sub	x23, x9, x11
  42124c:	sub	x24, x10, x8
  421250:	udiv	x25, x21, x25
  421254:	bl	406e50 <dcgettext@plt>
  421258:	udiv	x4, x23, x24
  42125c:	mov	x1, x19
  421260:	mov	x2, x23
  421264:	mov	x3, x24
  421268:	bl	406ef0 <printf@plt>
  42126c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  421270:	add	x1, x1, #0xb4b
  421274:	mov	w2, #0x5                   	// #5
  421278:	mov	x0, xzr
  42127c:	bl	406e50 <dcgettext@plt>
  421280:	and	w5, w25, #0xffff
  421284:	mov	x1, x19
  421288:	mov	x2, x21
  42128c:	mov	x3, x20
  421290:	mov	x4, x22
  421294:	bl	406ef0 <printf@plt>
  421298:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42129c:	add	x1, x1, #0xb93
  4212a0:	mov	w2, #0x5                   	// #5
  4212a4:	mov	x0, xzr
  4212a8:	bl	406e50 <dcgettext@plt>
  4212ac:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4212b0:	ldr	x9, [x26, #1816]
  4212b4:	ldr	x2, [x8, #1832]
  4212b8:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  4212bc:	fmov	d0, x8
  4212c0:	mov	x1, x19
  4212c4:	sub	x8, x2, x9
  4212c8:	ucvtf	d1, x8
  4212cc:	fmul	d0, d1, d0
  4212d0:	ucvtf	d1, x2
  4212d4:	fdiv	d0, d0, d1
  4212d8:	fcvtzu	x3, d0
  4212dc:	bl	406ef0 <printf@plt>
  4212e0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4212e4:	add	x1, x1, #0xbcf
  4212e8:	mov	w2, #0x5                   	// #5
  4212ec:	mov	x0, xzr
  4212f0:	bl	406e50 <dcgettext@plt>
  4212f4:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  4212f8:	ldr	x1, [x19, #2512]
  4212fc:	bl	4067e0 <fputs@plt>
  421300:	ldr	x1, [x19, #2512]
  421304:	adrp	x0, 43f000 <stdio_traced@@Base+0x1a38>
  421308:	add	x0, x0, #0x6c0
  42130c:	bl	40ffb4 <hash_print_stats@@Base>
  421310:	ldp	x20, x19, [sp, #80]
  421314:	ldp	x22, x21, [sp, #64]
  421318:	ldp	x24, x23, [sp, #48]
  42131c:	ldp	x26, x25, [sp, #32]
  421320:	ldr	x27, [sp, #16]
  421324:	ldp	x29, x30, [sp], #96
  421328:	ret
  42132c:	stp	x29, x30, [sp, #-48]!
  421330:	stp	x20, x19, [sp, #32]
  421334:	mov	x20, x0
  421338:	add	x0, x1, #0x10
  42133c:	stp	x22, x21, [sp, #16]
  421340:	mov	x29, sp
  421344:	mov	x19, x1
  421348:	bl	418070 <xmalloc@@Base>
  42134c:	add	x22, x0, #0x8
  421350:	mov	x21, x0
  421354:	mov	x0, x22
  421358:	mov	x1, x20
  42135c:	mov	x2, x19
  421360:	bl	406790 <memcpy@plt>
  421364:	strb	wzr, [x22, x19]
  421368:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  42136c:	ldr	x9, [x8, #1720]
  421370:	mov	x0, x22
  421374:	str	x9, [x21]
  421378:	str	x21, [x8, #1720]
  42137c:	ldp	x20, x19, [sp, #32]
  421380:	ldp	x22, x21, [sp, #16]
  421384:	ldp	x29, x30, [sp], #48
  421388:	ret
  42138c:	stp	x29, x30, [sp, #-64]!
  421390:	stp	x24, x23, [sp, #16]
  421394:	adrp	x23, 43f000 <stdio_traced@@Base+0x1a38>
  421398:	adrp	x24, 43f000 <stdio_traced@@Base+0x1a38>
  42139c:	ldr	x8, [x23, #1816]
  4213a0:	ldr	x9, [x24, #1824]
  4213a4:	stp	x20, x19, [sp, #48]
  4213a8:	mov	w19, w1
  4213ac:	add	w1, w1, #0x1
  4213b0:	mov	w10, #0x1fe2                	// #8162
  4213b4:	mov	x20, x0
  4213b8:	cmp	w10, w1, uxth
  4213bc:	add	x8, x8, #0x1
  4213c0:	add	x9, x9, w1, uxth
  4213c4:	stp	x22, x21, [sp, #32]
  4213c8:	mov	x29, sp
  4213cc:	str	x8, [x23, #1816]
  4213d0:	str	x9, [x24, #1824]
  4213d4:	b.cs	4213f4 <strcache_print_stats@@Base+0x318>  // b.hs, b.nlast
  4213d8:	adrp	x0, 43f000 <stdio_traced@@Base+0x1a38>
  4213dc:	add	x0, x0, #0x6b0
  4213e0:	bl	4214bc <strcache_print_stats@@Base+0x3e0>
  4213e4:	mov	x1, x20
  4213e8:	mov	w2, w19
  4213ec:	bl	421510 <strcache_print_stats@@Base+0x434>
  4213f0:	b	4214a8 <strcache_print_stats@@Base+0x3cc>
  4213f4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4213f8:	ldr	x21, [x8, #1704]
  4213fc:	cmp	x21, #0x0
  421400:	cset	w8, eq  // eq = none
  421404:	cbz	x21, 421444 <strcache_print_stats@@Base+0x368>
  421408:	ldrh	w9, [x21, #10]
  42140c:	cmp	w9, w1, uxth
  421410:	b.ls	421420 <strcache_print_stats@@Base+0x344>  // b.plast
  421414:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  421418:	add	x22, x22, #0x6a8
  42141c:	b	421440 <strcache_print_stats@@Base+0x364>
  421420:	mov	x22, x21
  421424:	ldr	x21, [x21]
  421428:	cmp	x21, #0x0
  42142c:	cset	w8, eq  // eq = none
  421430:	cbz	x21, 421444 <strcache_print_stats@@Base+0x368>
  421434:	ldrh	w9, [x21, #10]
  421438:	cmp	w9, w1, uxth
  42143c:	b.ls	421420 <strcache_print_stats@@Base+0x344>  // b.plast
  421440:	cbz	w8, 42145c <strcache_print_stats@@Base+0x380>
  421444:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  421448:	add	x22, x22, #0x6a8
  42144c:	mov	w1, #0x1fe2                	// #8162
  421450:	mov	x0, x22
  421454:	bl	4214bc <strcache_print_stats@@Base+0x3e0>
  421458:	mov	x21, x0
  42145c:	mov	x0, x21
  421460:	mov	x1, x20
  421464:	mov	w2, w19
  421468:	bl	421510 <strcache_print_stats@@Base+0x434>
  42146c:	ldr	x8, [x23, #1816]
  421470:	cmp	x8, #0x15
  421474:	b.cc	4214a8 <strcache_print_stats@@Base+0x3cc>  // b.lo, b.ul, b.last
  421478:	ldr	x9, [x24, #1824]
  42147c:	ldrh	w10, [x21, #10]
  421480:	udiv	x8, x9, x8
  421484:	add	x8, x8, #0x1
  421488:	cmp	x8, x10
  42148c:	b.ls	4214a8 <strcache_print_stats@@Base+0x3cc>  // b.plast
  421490:	ldr	x8, [x21]
  421494:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  421498:	str	x8, [x22]
  42149c:	ldr	x8, [x9, #1712]
  4214a0:	str	x8, [x21]
  4214a4:	str	x21, [x9, #1712]
  4214a8:	ldp	x20, x19, [sp, #48]
  4214ac:	ldp	x22, x21, [sp, #32]
  4214b0:	ldp	x24, x23, [sp, #16]
  4214b4:	ldp	x29, x30, [sp], #64
  4214b8:	ret
  4214bc:	stp	x29, x30, [sp, #-32]!
  4214c0:	stp	x20, x19, [sp, #16]
  4214c4:	mov	w19, w1
  4214c8:	and	x8, x19, #0xffff
  4214cc:	mov	x20, x0
  4214d0:	add	x0, x8, #0xe
  4214d4:	mov	x29, sp
  4214d8:	bl	418070 <xmalloc@@Base>
  4214dc:	strh	wzr, [x0, #8]
  4214e0:	strh	wzr, [x0, #12]
  4214e4:	strh	w19, [x0, #10]
  4214e8:	ldr	x8, [x20]
  4214ec:	str	x8, [x0]
  4214f0:	str	x0, [x20]
  4214f4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4214f8:	ldr	x9, [x8, #1840]
  4214fc:	ldp	x20, x19, [sp, #16]
  421500:	add	x9, x9, #0x1
  421504:	str	x9, [x8, #1840]
  421508:	ldp	x29, x30, [sp], #32
  42150c:	ret
  421510:	stp	x29, x30, [sp, #-64]!
  421514:	stp	x22, x21, [sp, #32]
  421518:	stp	x20, x19, [sp, #48]
  42151c:	str	x23, [sp, #16]
  421520:	ldrh	w23, [x0, #8]
  421524:	mov	w19, w2
  421528:	and	x22, x19, #0xffff
  42152c:	mov	x20, x0
  421530:	add	x8, x0, x23
  421534:	add	x21, x8, #0xe
  421538:	mov	x0, x21
  42153c:	mov	x2, x22
  421540:	mov	x29, sp
  421544:	bl	4067a0 <memmove@plt>
  421548:	strb	wzr, [x21, x22]
  42154c:	ldrh	w9, [x20, #10]
  421550:	ldrh	w10, [x20, #12]
  421554:	add	w8, w19, #0x1
  421558:	add	w11, w23, w8
  42155c:	sub	w8, w9, w8
  421560:	add	w9, w10, #0x1
  421564:	strh	w11, [x20, #8]
  421568:	strh	w8, [x20, #10]
  42156c:	strh	w9, [x20, #12]
  421570:	mov	x0, x21
  421574:	ldp	x20, x19, [sp, #48]
  421578:	ldp	x22, x21, [sp, #32]
  42157c:	ldr	x23, [sp, #16]
  421580:	ldp	x29, x30, [sp], #64
  421584:	ret

0000000000421588 <create_pattern_var@@Base>:
  421588:	stp	x29, x30, [sp, #-48]!
  42158c:	str	x21, [sp, #16]
  421590:	stp	x20, x19, [sp, #32]
  421594:	mov	x29, sp
  421598:	mov	x21, x1
  42159c:	mov	x19, x0
  4215a0:	bl	4067d0 <strlen@plt>
  4215a4:	mov	x20, x0
  4215a8:	mov	w0, #0x50                  	// #80
  4215ac:	bl	418094 <xcalloc@@Base>
  4215b0:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4215b4:	ldr	x9, [x8, #1848]
  4215b8:	cbz	x9, 421638 <create_pattern_var@@Base+0xb0>
  4215bc:	cmp	x20, #0xff
  4215c0:	b.hi	4215e8 <create_pattern_var@@Base+0x60>  // b.pmore
  4215c4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4215c8:	add	x8, x8, #0x740
  4215cc:	ldr	x9, [x8, x20, lsl #3]
  4215d0:	cbz	x9, 4215e8 <create_pattern_var@@Base+0x60>
  4215d4:	ldr	x9, [x9]
  4215d8:	str	x9, [x0]
  4215dc:	ldr	x8, [x8, x20, lsl #3]
  4215e0:	str	x0, [x8]
  4215e4:	b	421640 <create_pattern_var@@Base+0xb8>
  4215e8:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4215ec:	add	x8, x8, #0x738
  4215f0:	ldr	x9, [x8]
  4215f4:	cbz	x9, 421628 <create_pattern_var@@Base+0xa0>
  4215f8:	ldr	x8, [x9, #24]
  4215fc:	cmp	x8, x20
  421600:	b.ls	421610 <create_pattern_var@@Base+0x88>  // b.plast
  421604:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  421608:	add	x8, x8, #0x738
  42160c:	b	421628 <create_pattern_var@@Base+0xa0>
  421610:	mov	x8, x9
  421614:	ldr	x9, [x9]
  421618:	cbz	x9, 421628 <create_pattern_var@@Base+0xa0>
  42161c:	ldr	x10, [x9, #24]
  421620:	cmp	x10, x20
  421624:	b.ls	421610 <create_pattern_var@@Base+0x88>  // b.plast
  421628:	ldr	x9, [x8]
  42162c:	str	x9, [x0]
  421630:	str	x0, [x8]
  421634:	b	421640 <create_pattern_var@@Base+0xb8>
  421638:	str	x0, [x8, #1848]
  42163c:	str	xzr, [x0]
  421640:	add	x8, x21, #0x1
  421644:	cmp	x20, #0xff
  421648:	stp	x19, x20, [x0, #16]
  42164c:	str	x8, [x0, #8]
  421650:	b.hi	421660 <create_pattern_var@@Base+0xd8>  // b.pmore
  421654:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  421658:	add	x8, x8, #0x740
  42165c:	str	x0, [x8, x20, lsl #3]
  421660:	ldp	x20, x19, [sp, #32]
  421664:	ldr	x21, [sp, #16]
  421668:	ldp	x29, x30, [sp], #48
  42166c:	ret

0000000000421670 <init_hash_global_variable_set@@Base>:
  421670:	stp	x29, x30, [sp, #-16]!
  421674:	adrp	x0, 43f000 <stdio_traced@@Base+0x1a38>
  421678:	adrp	x2, 421000 <strcache_add_len@@Base>
  42167c:	adrp	x3, 421000 <strcache_add_len@@Base>
  421680:	adrp	x4, 421000 <strcache_add_len@@Base>
  421684:	add	x0, x0, #0xf40
  421688:	add	x2, x2, #0x6a8
  42168c:	add	x3, x3, #0x6cc
  421690:	add	x4, x4, #0x6d4
  421694:	mov	w1, #0x20b                 	// #523
  421698:	mov	x29, sp
  42169c:	bl	40f974 <hash_init@@Base>
  4216a0:	ldp	x29, x30, [sp], #16
  4216a4:	ret
  4216a8:	stp	x29, x30, [sp, #-16]!
  4216ac:	ldr	x8, [x0]
  4216b0:	ldr	w1, [x0, #40]
  4216b4:	mov	x29, sp
  4216b8:	mov	x0, x8
  4216bc:	bl	410134 <jhash@@Base>
  4216c0:	mov	w0, w0
  4216c4:	ldp	x29, x30, [sp], #16
  4216c8:	ret
  4216cc:	mov	x0, xzr
  4216d0:	ret
  4216d4:	stp	x29, x30, [sp, #-16]!
  4216d8:	ldr	w2, [x0, #40]
  4216dc:	ldr	w9, [x1, #40]
  4216e0:	mov	x8, x0
  4216e4:	mov	x29, sp
  4216e8:	subs	w0, w2, w9
  4216ec:	b.eq	4216f8 <init_hash_global_variable_set@@Base+0x88>  // b.none
  4216f0:	ldp	x29, x30, [sp], #16
  4216f4:	ret
  4216f8:	ldr	x0, [x8]
  4216fc:	ldr	x1, [x1]
  421700:	cmp	x0, x1
  421704:	b.eq	421714 <init_hash_global_variable_set@@Base+0xa4>  // b.none
  421708:	bl	406c70 <memcmp@plt>
  42170c:	ldp	x29, x30, [sp], #16
  421710:	ret
  421714:	mov	w0, wzr
  421718:	ldp	x29, x30, [sp], #16
  42171c:	ret

0000000000421720 <define_variable_in_set@@Base>:
  421720:	sub	sp, sp, #0x90
  421724:	stp	x28, x27, [sp, #64]
  421728:	adrp	x28, 43f000 <stdio_traced@@Base+0x1a38>
  42172c:	add	x28, x28, #0xf40
  421730:	cmp	x5, #0x0
  421734:	stp	x24, x23, [sp, #96]
  421738:	csel	x24, x28, x5, eq  // eq = none
  42173c:	stp	x26, x25, [sp, #80]
  421740:	stp	x22, x21, [sp, #112]
  421744:	mov	x25, x1
  421748:	mov	x22, x0
  42174c:	str	x0, [sp]
  421750:	mov	x1, sp
  421754:	mov	x0, x24
  421758:	stp	x29, x30, [sp, #48]
  42175c:	stp	x20, x19, [sp, #128]
  421760:	add	x29, sp, #0x30
  421764:	mov	x21, x6
  421768:	mov	w20, w4
  42176c:	mov	w27, w3
  421770:	mov	x23, x2
  421774:	str	w25, [sp, #40]
  421778:	bl	40fad4 <hash_find_slot@@Base>
  42177c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  421780:	ldr	w8, [x8, #3248]
  421784:	ldr	x19, [x0]
  421788:	mov	w9, #0x3                   	// #3
  42178c:	mov	x26, x0
  421790:	cmp	w8, #0x0
  421794:	ccmp	w27, #0x1, #0x0, ne  // ne = any
  421798:	csel	w27, w9, w27, eq  // eq = none
  42179c:	cbz	x19, 421814 <define_variable_in_set@@Base+0xf4>
  4217a0:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4217a4:	ldr	x9, [x9, #2344]
  4217a8:	cmp	x9, x19
  4217ac:	b.eq	421814 <define_variable_in_set@@Base+0xf4>  // b.none
  4217b0:	cbz	w8, 4217d4 <define_variable_in_set@@Base+0xb4>
  4217b4:	ldr	w8, [x19, #44]
  4217b8:	mov	w10, #0x4000000             	// #67108864
  4217bc:	and	w9, w8, #0x1c000000
  4217c0:	cmp	w9, w10
  4217c4:	b.ne	4217d4 <define_variable_in_set@@Base+0xb4>  // b.any
  4217c8:	and	w8, w8, #0xe3ffffff
  4217cc:	orr	w8, w8, #0xc000000
  4217d0:	str	w8, [x19, #44]
  4217d4:	ldr	w8, [x19, #44]
  4217d8:	ubfx	w8, w8, #26, #3
  4217dc:	cmp	w27, w8
  4217e0:	b.lt	421948 <define_variable_in_set@@Base+0x228>  // b.tstop
  4217e4:	ldr	x0, [x19, #8]
  4217e8:	bl	406cf0 <free@plt>
  4217ec:	mov	x0, x23
  4217f0:	bl	4180bc <xstrdup@@Base>
  4217f4:	add	x8, x19, #0x10
  4217f8:	str	x0, [x19, #8]
  4217fc:	cbz	x21, 421924 <define_variable_in_set@@Base+0x204>
  421800:	ldr	x9, [x21, #16]
  421804:	ldr	q0, [x21]
  421808:	str	x9, [x8, #16]
  42180c:	str	q0, [x8]
  421810:	b	421928 <define_variable_in_set@@Base+0x208>
  421814:	mov	w0, #0x30                  	// #48
  421818:	bl	418094 <xcalloc@@Base>
  42181c:	mov	x19, x0
  421820:	mov	x0, x22
  421824:	mov	x1, x25
  421828:	bl	4180d8 <xstrndup@@Base>
  42182c:	str	x0, [x19]
  421830:	mov	x0, x24
  421834:	mov	x1, x19
  421838:	mov	x2, x26
  42183c:	str	w25, [x19, #40]
  421840:	bl	40fc04 <hash_insert_at@@Base>
  421844:	cmp	x24, x28
  421848:	b.ne	42185c <define_variable_in_set@@Base+0x13c>  // b.any
  42184c:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  421850:	ldr	x9, [x8, #3992]
  421854:	add	x9, x9, #0x1
  421858:	str	x9, [x8, #3992]
  42185c:	mov	x0, x23
  421860:	bl	4180bc <xstrdup@@Base>
  421864:	str	x0, [x19, #8]
  421868:	cbz	x21, 42187c <define_variable_in_set@@Base+0x15c>
  42186c:	ldr	x8, [x21, #16]
  421870:	ldr	q0, [x21]
  421874:	str	x8, [x19, #32]
  421878:	str	q0, [x19, #16]
  42187c:	ldr	w8, [x19, #44]
  421880:	mov	w9, #0xffde                	// #65502
  421884:	movk	w9, #0x83ff, lsl #16
  421888:	and	w10, w20, #0x1
  42188c:	bfi	w10, w27, #26, #3
  421890:	and	w8, w8, w9
  421894:	mov	w9, #0x20                  	// #32
  421898:	orr	w8, w10, w8
  42189c:	movk	w9, #0x6000, lsl #16
  4218a0:	orr	w9, w8, w9
  4218a4:	str	w9, [x19, #44]
  4218a8:	ldrb	w9, [x22]
  4218ac:	sub	w10, w9, #0x61
  4218b0:	cmp	w10, #0x1a
  4218b4:	b.cc	4218d8 <define_variable_in_set@@Base+0x1b8>  // b.lo, b.ul, b.last
  4218b8:	cmp	w9, #0x5f
  4218bc:	b.eq	4218d8 <define_variable_in_set@@Base+0x1b8>  // b.none
  4218c0:	sub	w9, w9, #0x41
  4218c4:	and	w9, w9, #0xff
  4218c8:	cmp	w9, #0x19
  4218cc:	b.ls	4218d8 <define_variable_in_set@@Base+0x1b8>  // b.plast
  4218d0:	orr	w8, w8, #0x60000000
  4218d4:	b	421944 <define_variable_in_set@@Base+0x224>
  4218d8:	add	x9, x22, #0x1
  4218dc:	b	4218e4 <define_variable_in_set@@Base+0x1c4>
  4218e0:	add	x9, x9, #0x1
  4218e4:	ldrb	w10, [x9]
  4218e8:	cmp	w10, #0x5f
  4218ec:	b.eq	4218e0 <define_variable_in_set@@Base+0x1c0>  // b.none
  4218f0:	cbz	w10, 421948 <define_variable_in_set@@Base+0x228>
  4218f4:	sub	w11, w10, #0x61
  4218f8:	cmp	w11, #0x1a
  4218fc:	b.cc	4218e0 <define_variable_in_set@@Base+0x1c0>  // b.lo, b.ul, b.last
  421900:	sub	w11, w10, #0x41
  421904:	and	w11, w11, #0xff
  421908:	cmp	w11, #0x1a
  42190c:	b.cc	4218e0 <define_variable_in_set@@Base+0x1c0>  // b.lo, b.ul, b.last
  421910:	sub	w11, w10, #0x30
  421914:	cmp	w11, #0xa
  421918:	b.cc	4218e0 <define_variable_in_set@@Base+0x1c0>  // b.lo, b.ul, b.last
  42191c:	cbnz	w10, 4218d0 <define_variable_in_set@@Base+0x1b0>
  421920:	b	421948 <define_variable_in_set@@Base+0x228>
  421924:	str	xzr, [x8]
  421928:	ldr	w8, [x19, #44]
  42192c:	mov	w9, #0xfffe                	// #65534
  421930:	movk	w9, #0xe3ff, lsl #16
  421934:	and	w10, w20, #0x1
  421938:	and	w8, w8, w9
  42193c:	bfi	w10, w27, #26, #3
  421940:	orr	w8, w10, w8
  421944:	str	w8, [x19, #44]
  421948:	mov	x0, x19
  42194c:	ldp	x20, x19, [sp, #128]
  421950:	ldp	x22, x21, [sp, #112]
  421954:	ldp	x24, x23, [sp, #96]
  421958:	ldp	x26, x25, [sp, #80]
  42195c:	ldp	x28, x27, [sp, #64]
  421960:	ldp	x29, x30, [sp, #48]
  421964:	add	sp, sp, #0x90
  421968:	ret

000000000042196c <free_variable_set@@Base>:
  42196c:	stp	x29, x30, [sp, #-32]!
  421970:	str	x19, [sp, #16]
  421974:	mov	x19, x0
  421978:	ldr	x0, [x0, #8]
  42197c:	adrp	x1, 421000 <strcache_add_len@@Base>
  421980:	add	x1, x1, #0x9b4
  421984:	mov	x29, sp
  421988:	bl	40fed4 <hash_map@@Base>
  42198c:	ldr	x0, [x19, #8]
  421990:	mov	w1, #0x1                   	// #1
  421994:	bl	40fe90 <hash_free@@Base>
  421998:	ldr	x0, [x19, #8]
  42199c:	bl	406cf0 <free@plt>
  4219a0:	mov	x0, x19
  4219a4:	bl	406cf0 <free@plt>
  4219a8:	ldr	x19, [sp, #16]
  4219ac:	ldp	x29, x30, [sp], #32
  4219b0:	ret
  4219b4:	stp	x29, x30, [sp, #-32]!
  4219b8:	str	x19, [sp, #16]
  4219bc:	mov	x19, x0
  4219c0:	ldr	x0, [x0]
  4219c4:	mov	x29, sp
  4219c8:	bl	406cf0 <free@plt>
  4219cc:	ldr	x0, [x19, #8]
  4219d0:	bl	406cf0 <free@plt>
  4219d4:	ldr	x19, [sp, #16]
  4219d8:	ldp	x29, x30, [sp], #32
  4219dc:	ret

00000000004219e0 <undefine_variable_in_set@@Base>:
  4219e0:	sub	sp, sp, #0x60
  4219e4:	stp	x22, x21, [sp, #64]
  4219e8:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  4219ec:	add	x22, x22, #0xf40
  4219f0:	cmp	x3, #0x0
  4219f4:	stp	x20, x19, [sp, #80]
  4219f8:	csel	x19, x22, x3, eq  // eq = none
  4219fc:	str	x0, [sp]
  421a00:	str	w1, [sp, #40]
  421a04:	mov	x1, sp
  421a08:	mov	x0, x19
  421a0c:	stp	x29, x30, [sp, #48]
  421a10:	add	x29, sp, #0x30
  421a14:	mov	w21, w2
  421a18:	bl	40fad4 <hash_find_slot@@Base>
  421a1c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  421a20:	ldr	w9, [x8, #3248]
  421a24:	ldr	x20, [x0]
  421a28:	mov	w8, #0x3                   	// #3
  421a2c:	cmp	w9, #0x0
  421a30:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  421a34:	csel	w8, w8, w21, eq  // eq = none
  421a38:	cbz	x20, 421ab4 <undefine_variable_in_set@@Base+0xd4>
  421a3c:	adrp	x10, 43c000 <memcpy@GLIBC_2.17>
  421a40:	ldr	x10, [x10, #2344]
  421a44:	cmp	x10, x20
  421a48:	b.eq	421ab4 <undefine_variable_in_set@@Base+0xd4>  // b.none
  421a4c:	mov	x1, x0
  421a50:	cbz	w9, 421a74 <undefine_variable_in_set@@Base+0x94>
  421a54:	ldr	w9, [x20, #44]
  421a58:	mov	w11, #0x4000000             	// #67108864
  421a5c:	and	w10, w9, #0x1c000000
  421a60:	cmp	w10, w11
  421a64:	b.ne	421a74 <undefine_variable_in_set@@Base+0x94>  // b.any
  421a68:	and	w9, w9, #0xe3ffffff
  421a6c:	orr	w9, w9, #0xc000000
  421a70:	str	w9, [x20, #44]
  421a74:	ldr	w9, [x20, #44]
  421a78:	ubfx	w9, w9, #26, #3
  421a7c:	cmp	w8, w9
  421a80:	b.lt	421ab4 <undefine_variable_in_set@@Base+0xd4>  // b.tstop
  421a84:	mov	x0, x19
  421a88:	bl	40fd88 <hash_delete_at@@Base>
  421a8c:	mov	x0, x20
  421a90:	bl	4219b4 <free_variable_set@@Base+0x48>
  421a94:	mov	x0, x20
  421a98:	bl	406cf0 <free@plt>
  421a9c:	cmp	x19, x22
  421aa0:	b.ne	421ab4 <undefine_variable_in_set@@Base+0xd4>  // b.any
  421aa4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  421aa8:	ldr	x9, [x8, #3992]
  421aac:	add	x9, x9, #0x1
  421ab0:	str	x9, [x8, #3992]
  421ab4:	ldp	x20, x19, [sp, #80]
  421ab8:	ldp	x22, x21, [sp, #64]
  421abc:	ldp	x29, x30, [sp, #48]
  421ac0:	add	sp, sp, #0x60
  421ac4:	ret

0000000000421ac8 <lookup_variable@@Base>:
  421ac8:	sub	sp, sp, #0x60
  421acc:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  421ad0:	stp	x20, x19, [sp, #80]
  421ad4:	ldr	x20, [x8, #2440]
  421ad8:	stp	x29, x30, [sp, #48]
  421adc:	str	x21, [sp, #64]
  421ae0:	add	x29, sp, #0x30
  421ae4:	str	x0, [sp]
  421ae8:	str	w1, [sp, #40]
  421aec:	cbz	x20, 421b48 <lookup_variable@@Base+0x80>
  421af0:	mov	w21, wzr
  421af4:	b	421b10 <lookup_variable@@Base+0x48>
  421af8:	ldr	w8, [x20, #16]
  421afc:	orr	w21, w8, w21
  421b00:	mov	w8, #0x1                   	// #1
  421b04:	tbz	w8, #0, 421b4c <lookup_variable@@Base+0x84>
  421b08:	ldr	x20, [x20]
  421b0c:	cbz	x20, 421b48 <lookup_variable@@Base+0x80>
  421b10:	ldr	x0, [x20, #8]
  421b14:	mov	x1, sp
  421b18:	bl	40fbd8 <hash_find_item@@Base>
  421b1c:	cbz	x0, 421af8 <lookup_variable@@Base+0x30>
  421b20:	cbz	w21, 421b2c <lookup_variable@@Base+0x64>
  421b24:	ldrb	w8, [x0, #44]
  421b28:	tbnz	w8, #7, 421af8 <lookup_variable@@Base+0x30>
  421b2c:	ldrb	w8, [x0, #44]
  421b30:	tbz	w8, #4, 421b38 <lookup_variable@@Base+0x70>
  421b34:	bl	421b64 <lookup_variable@@Base+0x9c>
  421b38:	mov	w8, wzr
  421b3c:	mov	x19, x0
  421b40:	tbnz	w8, #0, 421b08 <lookup_variable@@Base+0x40>
  421b44:	b	421b4c <lookup_variable@@Base+0x84>
  421b48:	mov	x19, xzr
  421b4c:	mov	x0, x19
  421b50:	ldp	x20, x19, [sp, #80]
  421b54:	ldr	x21, [sp, #64]
  421b58:	ldp	x29, x30, [sp, #48]
  421b5c:	add	sp, sp, #0x60
  421b60:	ret
  421b64:	stp	x29, x30, [sp, #-96]!
  421b68:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  421b6c:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  421b70:	ldr	x8, [x8, #3992]
  421b74:	ldr	x9, [x9, #4000]
  421b78:	stp	x20, x19, [sp, #80]
  421b7c:	mov	x19, x0
  421b80:	stp	x28, x27, [sp, #16]
  421b84:	cmp	x8, x9
  421b88:	stp	x26, x25, [sp, #32]
  421b8c:	stp	x24, x23, [sp, #48]
  421b90:	stp	x22, x21, [sp, #64]
  421b94:	mov	x29, sp
  421b98:	b.eq	421cf0 <lookup_variable@@Base+0x228>  // b.none
  421b9c:	ldr	x8, [x19]
  421ba0:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x30e0>
  421ba4:	add	x9, x9, #0x5e9
  421ba8:	cmp	x8, x9
  421bac:	b.eq	421bd0 <lookup_variable@@Base+0x108>  // b.none
  421bb0:	ldrb	w9, [x8]
  421bb4:	cmp	w9, #0x2e
  421bb8:	b.ne	421cf0 <lookup_variable@@Base+0x228>  // b.any
  421bbc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  421bc0:	add	x0, x8, #0x1
  421bc4:	add	x1, x1, #0x5ea
  421bc8:	bl	406cb0 <strcmp@plt>
  421bcc:	cbnz	w0, 421cf0 <lookup_variable@@Base+0x228>
  421bd0:	ldr	x21, [x19, #8]
  421bd4:	mov	x0, x21
  421bd8:	bl	4067d0 <strlen@plt>
  421bdc:	mov	x9, #0xf7cf                	// #63439
  421be0:	movk	x9, #0xe353, lsl #16
  421be4:	movk	x9, #0x9ba5, lsl #32
  421be8:	lsr	x8, x0, #2
  421bec:	movk	x9, #0x20c4, lsl #48
  421bf0:	adrp	x10, 43f000 <stdio_traced@@Base+0x1a38>
  421bf4:	umulh	x8, x8, x9
  421bf8:	add	x10, x10, #0xf40
  421bfc:	lsr	x8, x8, #4
  421c00:	mov	w9, #0x1f4                 	// #500
  421c04:	ldr	x25, [x10]
  421c08:	ldr	x22, [x10, #32]
  421c0c:	mul	x8, x8, x9
  421c10:	add	x20, x8, #0x1f4
  421c14:	mov	x0, x21
  421c18:	mov	x1, x20
  421c1c:	bl	41803c <xrealloc@@Base>
  421c20:	mov	x21, x0
  421c24:	cmp	x22, #0x1
  421c28:	str	x0, [x19, #8]
  421c2c:	b.lt	421cdc <lookup_variable@@Base+0x214>  // b.tstop
  421c30:	mov	x27, xzr
  421c34:	add	x28, x25, x22, lsl #3
  421c38:	adrp	x26, 43c000 <memcpy@GLIBC_2.17>
  421c3c:	mov	w23, #0x20                  	// #32
  421c40:	b	421c68 <lookup_variable@@Base+0x1a0>
  421c44:	ldr	x1, [x24]
  421c48:	mov	x0, x21
  421c4c:	mov	x2, x22
  421c50:	bl	406790 <memcpy@plt>
  421c54:	add	x21, x21, x22
  421c58:	strb	w23, [x21], #1
  421c5c:	add	x25, x25, #0x8
  421c60:	cmp	x25, x28
  421c64:	b.cs	421cdc <lookup_variable@@Base+0x214>  // b.hs, b.nlast
  421c68:	ldr	x24, [x25]
  421c6c:	cbz	x24, 421c5c <lookup_variable@@Base+0x194>
  421c70:	ldr	x8, [x26, #2344]
  421c74:	cmp	x8, x24
  421c78:	b.eq	421c5c <lookup_variable@@Base+0x194>  // b.none
  421c7c:	ldrsw	x22, [x24, #40]
  421c80:	add	x8, x22, #0x1
  421c84:	add	x27, x27, x8
  421c88:	cmp	x27, x20
  421c8c:	b.ls	421c44 <lookup_variable@@Base+0x17c>  // b.plast
  421c90:	mov	w9, #0x4dd3                	// #19923
  421c94:	movk	w9, #0x1062, lsl #16
  421c98:	smull	x9, w8, w9
  421c9c:	lsr	x10, x9, #63
  421ca0:	asr	x9, x9, #37
  421ca4:	neg	w8, w8
  421ca8:	add	w9, w9, w10
  421cac:	mov	w10, #0x1f4                 	// #500
  421cb0:	madd	w8, w9, w10, w8
  421cb4:	ldr	x0, [x19, #8]
  421cb8:	add	w8, w22, w8
  421cbc:	add	w8, w8, #0x1f5
  421cc0:	add	x20, x20, w8, sxtw
  421cc4:	mov	x1, x20
  421cc8:	sub	x21, x21, x0
  421ccc:	bl	41803c <xrealloc@@Base>
  421cd0:	add	x21, x0, x21
  421cd4:	str	x0, [x19, #8]
  421cd8:	b	421c44 <lookup_variable@@Base+0x17c>
  421cdc:	sturb	wzr, [x21, #-1]
  421ce0:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  421ce4:	ldr	x8, [x8, #3992]
  421ce8:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  421cec:	str	x8, [x9, #4000]
  421cf0:	mov	x0, x19
  421cf4:	ldp	x20, x19, [sp, #80]
  421cf8:	ldp	x22, x21, [sp, #64]
  421cfc:	ldp	x24, x23, [sp, #48]
  421d00:	ldp	x26, x25, [sp, #32]
  421d04:	ldp	x28, x27, [sp, #16]
  421d08:	ldp	x29, x30, [sp], #96
  421d0c:	ret

0000000000421d10 <lookup_variable_in_set@@Base>:
  421d10:	sub	sp, sp, #0x40
  421d14:	str	x0, [sp]
  421d18:	str	w1, [sp, #40]
  421d1c:	mov	x1, sp
  421d20:	mov	x0, x2
  421d24:	stp	x29, x30, [sp, #48]
  421d28:	add	x29, sp, #0x30
  421d2c:	bl	40fbd8 <hash_find_item@@Base>
  421d30:	ldp	x29, x30, [sp, #48]
  421d34:	add	sp, sp, #0x40
  421d38:	ret

0000000000421d3c <initialize_file_variables@@Base>:
  421d3c:	stp	x29, x30, [sp, #-80]!
  421d40:	stp	x26, x25, [sp, #16]
  421d44:	stp	x24, x23, [sp, #32]
  421d48:	stp	x22, x21, [sp, #48]
  421d4c:	stp	x20, x19, [sp, #64]
  421d50:	ldr	x19, [x0, #80]
  421d54:	mov	x20, x0
  421d58:	mov	w21, w1
  421d5c:	mov	x29, sp
  421d60:	cbz	x19, 421d70 <initialize_file_variables@@Base+0x34>
  421d64:	ldr	x0, [x20, #104]
  421d68:	cbnz	x0, 421db4 <initialize_file_variables@@Base+0x78>
  421d6c:	b	421dd4 <initialize_file_variables@@Base+0x98>
  421d70:	mov	w0, #0x18                  	// #24
  421d74:	bl	418070 <xmalloc@@Base>
  421d78:	mov	x19, x0
  421d7c:	mov	w0, #0x58                  	// #88
  421d80:	bl	418070 <xmalloc@@Base>
  421d84:	adrp	x2, 421000 <strcache_add_len@@Base>
  421d88:	adrp	x3, 421000 <strcache_add_len@@Base>
  421d8c:	adrp	x4, 421000 <strcache_add_len@@Base>
  421d90:	add	x2, x2, #0x6a8
  421d94:	add	x3, x3, #0x6cc
  421d98:	add	x4, x4, #0x6d4
  421d9c:	mov	w1, #0x17                  	// #23
  421da0:	str	x0, [x19, #8]
  421da4:	bl	40f974 <hash_init@@Base>
  421da8:	str	x19, [x20, #80]
  421dac:	ldr	x0, [x20, #104]
  421db0:	cbz	x0, 421dd4 <initialize_file_variables@@Base+0x98>
  421db4:	cmp	x0, x20
  421db8:	b.eq	421dd4 <initialize_file_variables@@Base+0x98>  // b.none
  421dbc:	mov	w1, w21
  421dc0:	bl	421d3c <initialize_file_variables@@Base>
  421dc4:	ldr	x8, [x20, #104]
  421dc8:	ldr	x8, [x8, #80]
  421dcc:	str	x8, [x19], #16
  421dd0:	b	421f24 <initialize_file_variables@@Base+0x1e8>
  421dd4:	ldr	x0, [x20, #96]
  421dd8:	cbz	x0, 421df0 <initialize_file_variables@@Base+0xb4>
  421ddc:	mov	w1, w21
  421de0:	bl	421d3c <initialize_file_variables@@Base>
  421de4:	ldr	x8, [x20, #96]
  421de8:	ldr	x8, [x8, #80]
  421dec:	b	421df8 <initialize_file_variables@@Base+0xbc>
  421df0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  421df4:	add	x8, x8, #0x970
  421df8:	str	x8, [x19]
  421dfc:	mov	w8, #0x1                   	// #1
  421e00:	mov	x23, x19
  421e04:	str	w8, [x23, #16]!
  421e08:	cbnz	w21, 421f00 <initialize_file_variables@@Base+0x1c4>
  421e0c:	ldrb	w8, [x20, #138]
  421e10:	tbnz	w8, #2, 421f00 <initialize_file_variables@@Base+0x1c4>
  421e14:	ldr	x1, [x20]
  421e18:	mov	x0, xzr
  421e1c:	bl	421f40 <initialize_file_variables@@Base+0x204>
  421e20:	cbz	x0, 421ef4 <initialize_file_variables@@Base+0x1b8>
  421e24:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  421e28:	ldr	x25, [x24, #2440]
  421e2c:	mov	x21, x0
  421e30:	bl	42202c <create_new_variable_set@@Base>
  421e34:	str	x0, [x20, #88]
  421e38:	str	x0, [x24, #2440]
  421e3c:	b	421e9c <initialize_file_variables@@Base+0x160>
  421e40:	ldp	x1, x2, [x21, #32]
  421e44:	add	x0, x21, #0x30
  421e48:	ubfx	w3, w26, #26, #3
  421e4c:	mov	w5, #0x1                   	// #1
  421e50:	bl	422088 <do_variable_definition@@Base>
  421e54:	ldr	w8, [x21, #76]
  421e58:	ldr	w9, [x0, #44]
  421e5c:	lsr	w8, w8, #3
  421e60:	bfi	w9, w8, #3, #1
  421e64:	str	w9, [x0, #44]
  421e68:	ldr	w8, [x21, #76]
  421e6c:	lsr	w8, w8, #29
  421e70:	bfi	w9, w8, #29, #2
  421e74:	str	w9, [x0, #44]
  421e78:	ldr	w8, [x21, #76]
  421e7c:	lsr	w8, w8, #7
  421e80:	bfi	w9, w8, #7, #1
  421e84:	str	w9, [x0, #44]
  421e88:	ldr	x1, [x20]
  421e8c:	mov	x0, x21
  421e90:	bl	421f40 <initialize_file_variables@@Base+0x204>
  421e94:	mov	x21, x0
  421e98:	cbz	x0, 421ef0 <initialize_file_variables@@Base+0x1b4>
  421e9c:	ldr	w26, [x21, #76]
  421ea0:	ubfx	w4, w26, #23, #3
  421ea4:	cmp	w4, #0x1
  421ea8:	b.ne	421e40 <initialize_file_variables@@Base+0x104>  // b.any
  421eac:	ldr	x22, [x21, #32]
  421eb0:	mov	x0, x22
  421eb4:	bl	4067d0 <strlen@plt>
  421eb8:	ldr	x8, [x24, #2440]
  421ebc:	ldr	x2, [x21, #40]
  421ec0:	mov	x1, x0
  421ec4:	ubfx	w3, w26, #26, #3
  421ec8:	ldr	x5, [x8, #8]
  421ecc:	add	x6, x21, #0x30
  421ed0:	mov	x0, x22
  421ed4:	mov	w4, wzr
  421ed8:	bl	421720 <define_variable_in_set@@Base>
  421edc:	ldr	w8, [x0, #44]
  421ee0:	and	w8, w8, #0xfc7fffff
  421ee4:	orr	w8, w8, #0x800000
  421ee8:	str	w8, [x0, #44]
  421eec:	b	421e54 <initialize_file_variables@@Base+0x118>
  421ef0:	str	x25, [x24, #2440]
  421ef4:	ldr	w8, [x20, #136]
  421ef8:	orr	w8, w8, #0x40000
  421efc:	str	w8, [x20, #136]
  421f00:	ldr	x8, [x20, #88]
  421f04:	cbz	x8, 421f28 <initialize_file_variables@@Base+0x1ec>
  421f08:	ldr	x9, [x19]
  421f0c:	str	x9, [x8]
  421f10:	ldr	w9, [x19, #16]
  421f14:	str	w9, [x8, #16]
  421f18:	ldr	x8, [x20, #88]
  421f1c:	str	x8, [x19]
  421f20:	mov	x19, x23
  421f24:	str	wzr, [x19]
  421f28:	ldp	x20, x19, [sp, #64]
  421f2c:	ldp	x22, x21, [sp, #48]
  421f30:	ldp	x24, x23, [sp, #32]
  421f34:	ldp	x26, x25, [sp, #16]
  421f38:	ldp	x29, x30, [sp], #80
  421f3c:	ret
  421f40:	stp	x29, x30, [sp, #-64]!
  421f44:	stp	x20, x19, [sp, #48]
  421f48:	mov	x19, x0
  421f4c:	mov	x0, x1
  421f50:	str	x23, [sp, #16]
  421f54:	stp	x22, x21, [sp, #32]
  421f58:	mov	x29, sp
  421f5c:	mov	x20, x1
  421f60:	bl	4067d0 <strlen@plt>
  421f64:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  421f68:	add	x8, x8, #0x738
  421f6c:	cmp	x19, #0x0
  421f70:	csel	x8, x8, x19, eq  // eq = none
  421f74:	ldr	x19, [x8]
  421f78:	cbz	x19, 422014 <initialize_file_variables@@Base+0x2d8>
  421f7c:	mov	x21, x0
  421f80:	b	421f8c <initialize_file_variables@@Base+0x250>
  421f84:	ldr	x19, [x19]
  421f88:	cbz	x19, 422014 <initialize_file_variables@@Base+0x2d8>
  421f8c:	ldr	x8, [x19, #24]
  421f90:	subs	x23, x21, x8
  421f94:	b.cc	421f84 <initialize_file_variables@@Base+0x248>  // b.lo, b.ul, b.last
  421f98:	ldp	x8, x0, [x19, #8]
  421f9c:	mvn	x9, x0
  421fa0:	add	x22, x8, x9
  421fa4:	cmp	x22, #0x1
  421fa8:	b.lt	421fbc <initialize_file_variables@@Base+0x280>  // b.tstop
  421fac:	mov	x1, x20
  421fb0:	mov	x2, x22
  421fb4:	bl	406a70 <strncmp@plt>
  421fb8:	cbnz	w0, 421f84 <initialize_file_variables@@Base+0x248>
  421fbc:	ldr	x8, [x19, #8]
  421fc0:	add	x9, x20, x22
  421fc4:	add	x11, x23, #0x1
  421fc8:	ldrb	w11, [x9, x11]
  421fcc:	ldrb	w10, [x8]
  421fd0:	cmp	w10, w11
  421fd4:	b.ne	421f84 <initialize_file_variables@@Base+0x248>  // b.any
  421fd8:	cbz	w10, 422014 <initialize_file_variables@@Base+0x2d8>
  421fdc:	add	x9, x23, x9
  421fe0:	add	x10, x8, #0x1
  421fe4:	add	x9, x9, #0x2
  421fe8:	cmp	x10, x9
  421fec:	b.eq	422014 <initialize_file_variables@@Base+0x2d8>  // b.none
  421ff0:	ldrb	w10, [x10]
  421ff4:	ldrb	w11, [x9]
  421ff8:	cmp	w10, w11
  421ffc:	b.ne	421f84 <initialize_file_variables@@Base+0x248>  // b.any
  422000:	cbz	w10, 422014 <initialize_file_variables@@Base+0x2d8>
  422004:	add	x0, x8, #0x2
  422008:	add	x1, x9, #0x1
  42200c:	bl	406cb0 <strcmp@plt>
  422010:	cbnz	w0, 421f84 <initialize_file_variables@@Base+0x248>
  422014:	mov	x0, x19
  422018:	ldp	x20, x19, [sp, #48]
  42201c:	ldp	x22, x21, [sp, #32]
  422020:	ldr	x23, [sp, #16]
  422024:	ldp	x29, x30, [sp], #64
  422028:	ret

000000000042202c <create_new_variable_set@@Base>:
  42202c:	stp	x29, x30, [sp, #-32]!
  422030:	mov	w0, #0x58                  	// #88
  422034:	str	x19, [sp, #16]
  422038:	mov	x29, sp
  42203c:	bl	418070 <xmalloc@@Base>
  422040:	adrp	x2, 421000 <strcache_add_len@@Base>
  422044:	adrp	x3, 421000 <strcache_add_len@@Base>
  422048:	adrp	x4, 421000 <strcache_add_len@@Base>
  42204c:	add	x2, x2, #0x6a8
  422050:	add	x3, x3, #0x6cc
  422054:	add	x4, x4, #0x6d4
  422058:	mov	w1, #0xd                   	// #13
  42205c:	mov	x19, x0
  422060:	bl	40f974 <hash_init@@Base>
  422064:	mov	w0, #0x18                  	// #24
  422068:	bl	418070 <xmalloc@@Base>
  42206c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  422070:	ldr	x8, [x8, #2440]
  422074:	str	wzr, [x0, #16]
  422078:	stp	x8, x19, [x0]
  42207c:	ldr	x19, [sp, #16]
  422080:	ldp	x29, x30, [sp], #32
  422084:	ret

0000000000422088 <do_variable_definition@@Base>:
  422088:	sub	sp, sp, #0x80
  42208c:	sub	w8, w4, #0x1
  422090:	cmp	w8, #0x5
  422094:	stp	x29, x30, [sp, #32]
  422098:	stp	x28, x27, [sp, #48]
  42209c:	stp	x26, x25, [sp, #64]
  4220a0:	stp	x24, x23, [sp, #80]
  4220a4:	stp	x22, x21, [sp, #96]
  4220a8:	stp	x20, x19, [sp, #112]
  4220ac:	add	x29, sp, #0x20
  4220b0:	b.hi	42235c <do_variable_definition@@Base+0x2d4>  // b.pmore
  4220b4:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4220b8:	add	x9, x9, #0xbe6
  4220bc:	adr	x10, 4220f0 <do_variable_definition@@Base+0x68>
  4220c0:	ldrb	w11, [x9, x8]
  4220c4:	add	x10, x10, x11, lsl #2
  4220c8:	mov	w22, w5
  4220cc:	mov	w24, w4
  4220d0:	mov	w20, w3
  4220d4:	mov	x23, x2
  4220d8:	mov	x21, x1
  4220dc:	mov	x28, x0
  4220e0:	mov	x26, xzr
  4220e4:	mov	w19, wzr
  4220e8:	mov	w27, wzr
  4220ec:	br	x10
  4220f0:	mov	x0, x21
  4220f4:	bl	4067d0 <strlen@plt>
  4220f8:	mov	x1, x0
  4220fc:	cbz	w22, 4221a4 <do_variable_definition@@Base+0x11c>
  422100:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  422104:	ldr	x8, [x8, #2440]
  422108:	mov	x0, x21
  42210c:	ldr	x2, [x8, #8]
  422110:	bl	421d10 <lookup_variable_in_set@@Base>
  422114:	mov	x25, x0
  422118:	cbz	x0, 4221e8 <do_variable_definition@@Base+0x160>
  42211c:	ldr	w8, [x25, #44]
  422120:	ubfx	w19, w8, #1, #1
  422124:	cbnz	x25, 4221b8 <do_variable_definition@@Base+0x130>
  422128:	b	4221f0 <do_variable_definition@@Base+0x168>
  42212c:	mov	x0, x23
  422130:	mov	x1, xzr
  422134:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  422138:	mov	x23, x0
  42213c:	mov	w19, wzr
  422140:	mov	w27, wzr
  422144:	mov	x26, x0
  422148:	b	4222c0 <do_variable_definition@@Base+0x238>
  42214c:	mov	x0, x23
  422150:	mov	x1, xzr
  422154:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  422158:	mov	x24, x0
  42215c:	bl	422d34 <target_environment@@Base+0x338>
  422160:	mov	x23, x0
  422164:	mov	x0, x24
  422168:	bl	406cf0 <free@plt>
  42216c:	mov	w19, wzr
  422170:	mov	w27, wzr
  422174:	mov	w24, #0x2                   	// #2
  422178:	mov	x26, x23
  42217c:	b	4222c0 <do_variable_definition@@Base+0x238>
  422180:	mov	x0, x21
  422184:	bl	4067d0 <strlen@plt>
  422188:	mov	x1, x0
  42218c:	mov	x0, x21
  422190:	bl	421ac8 <lookup_variable@@Base>
  422194:	mov	x26, xzr
  422198:	cbz	x0, 422200 <do_variable_definition@@Base+0x178>
  42219c:	mov	x25, x0
  4221a0:	b	422318 <do_variable_definition@@Base+0x290>
  4221a4:	mov	x0, x21
  4221a8:	bl	421ac8 <lookup_variable@@Base>
  4221ac:	mov	x25, x0
  4221b0:	mov	w19, wzr
  4221b4:	cbz	x25, 4221f0 <do_variable_definition@@Base+0x168>
  4221b8:	ldrb	w8, [x25, #44]
  4221bc:	stur	x28, [x29, #-8]
  4221c0:	tbnz	w8, #0, 4221d8 <do_variable_definition@@Base+0x150>
  4221c4:	cmp	w24, #0x6
  4221c8:	b.ne	422210 <do_variable_definition@@Base+0x188>  // b.any
  4221cc:	mov	x26, xzr
  4221d0:	mov	x27, x23
  4221d4:	b	422224 <do_variable_definition@@Base+0x19c>
  4221d8:	mov	x26, xzr
  4221dc:	mov	w24, #0x2                   	// #2
  4221e0:	mov	x27, x23
  4221e4:	b	422224 <do_variable_definition@@Base+0x19c>
  4221e8:	mov	w19, #0x1                   	// #1
  4221ec:	cbnz	x25, 4221b8 <do_variable_definition@@Base+0x130>
  4221f0:	mov	x26, xzr
  4221f4:	mov	w27, wzr
  4221f8:	mov	w24, #0x2                   	// #2
  4221fc:	b	4222c0 <do_variable_definition@@Base+0x238>
  422200:	mov	w19, wzr
  422204:	mov	w24, #0x2                   	// #2
  422208:	mov	w27, #0x4                   	// #4
  42220c:	b	4222c0 <do_variable_definition@@Base+0x238>
  422210:	mov	x0, x23
  422214:	mov	x1, xzr
  422218:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  42221c:	mov	x27, x0
  422220:	mov	x26, x0
  422224:	mov	x0, x27
  422228:	bl	4067d0 <strlen@plt>
  42222c:	cbz	x0, 42227c <do_variable_definition@@Base+0x1f4>
  422230:	mov	x28, x0
  422234:	ldr	x0, [x25, #8]
  422238:	str	x26, [sp, #8]
  42223c:	stur	w20, [x29, #-12]
  422240:	bl	4067d0 <strlen@plt>
  422244:	add	x20, x0, #0x1
  422248:	add	x8, x28, x20
  42224c:	mov	x26, x0
  422250:	add	x0, x8, #0x1
  422254:	bl	418070 <xmalloc@@Base>
  422258:	mov	x23, x0
  42225c:	cbz	x26, 422288 <do_variable_definition@@Base+0x200>
  422260:	ldr	x1, [x25, #8]
  422264:	mov	x0, x23
  422268:	mov	x2, x26
  42226c:	bl	406790 <memcpy@plt>
  422270:	mov	w8, #0x20                  	// #32
  422274:	strb	w8, [x23, x26]
  422278:	b	42228c <do_variable_definition@@Base+0x204>
  42227c:	mov	w27, #0x3                   	// #3
  422280:	mov	x23, x26
  422284:	b	4222ac <do_variable_definition@@Base+0x224>
  422288:	mov	x20, xzr
  42228c:	add	x0, x23, x20
  422290:	add	x2, x28, #0x1
  422294:	mov	x1, x27
  422298:	bl	406790 <memcpy@plt>
  42229c:	ldr	x0, [sp, #8]
  4222a0:	bl	406cf0 <free@plt>
  4222a4:	ldur	w20, [x29, #-12]
  4222a8:	mov	w27, wzr
  4222ac:	ldur	x28, [x29, #-8]
  4222b0:	cmp	w27, #0x3
  4222b4:	b.eq	422354 <do_variable_definition@@Base+0x2cc>  // b.none
  4222b8:	mov	x26, x23
  4222bc:	cbnz	w27, 422330 <do_variable_definition@@Base+0x2a8>
  4222c0:	mov	x0, x21
  4222c4:	bl	4067d0 <strlen@plt>
  4222c8:	cmp	w24, #0x2
  4222cc:	mov	x1, x0
  4222d0:	cset	w4, eq  // eq = none
  4222d4:	cbz	w22, 4222e8 <do_variable_definition@@Base+0x260>
  4222d8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4222dc:	ldr	x8, [x8, #2440]
  4222e0:	ldr	x5, [x8, #8]
  4222e4:	b	4222ec <do_variable_definition@@Base+0x264>
  4222e8:	mov	x5, xzr
  4222ec:	mov	x0, x21
  4222f0:	mov	x2, x23
  4222f4:	mov	w3, w20
  4222f8:	mov	x6, x28
  4222fc:	bl	421720 <define_variable_in_set@@Base>
  422300:	ldr	w8, [x0, #44]
  422304:	orr	w9, w27, w19, lsl #1
  422308:	mov	x25, x0
  42230c:	and	w8, w8, #0xfffffff9
  422310:	orr	w8, w9, w8
  422314:	str	w8, [x0, #44]
  422318:	mov	x0, x26
  42231c:	bl	406cf0 <free@plt>
  422320:	ldrb	w8, [x25, #44]
  422324:	tbz	w8, #4, 422330 <do_variable_definition@@Base+0x2a8>
  422328:	mov	x0, x25
  42232c:	bl	422dac <target_environment@@Base+0x3b0>
  422330:	mov	x0, x25
  422334:	ldp	x20, x19, [sp, #112]
  422338:	ldp	x22, x21, [sp, #96]
  42233c:	ldp	x24, x23, [sp, #80]
  422340:	ldp	x26, x25, [sp, #64]
  422344:	ldp	x28, x27, [sp, #48]
  422348:	ldp	x29, x30, [sp, #32]
  42234c:	add	sp, sp, #0x80
  422350:	ret
  422354:	mov	x26, x23
  422358:	b	422318 <do_variable_definition@@Base+0x290>
  42235c:	bl	406c10 <abort@plt>

0000000000422360 <push_new_variable_scope@@Base>:
  422360:	stp	x29, x30, [sp, #-16]!
  422364:	mov	x29, sp
  422368:	bl	42202c <create_new_variable_set@@Base>
  42236c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  422370:	str	x0, [x8, #2440]
  422374:	ldr	x10, [x0]
  422378:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  42237c:	add	x9, x9, #0x970
  422380:	cmp	x10, x9
  422384:	b.ne	4223b0 <push_new_variable_scope@@Base+0x50>  // b.any
  422388:	ldr	x10, [x9, #8]
  42238c:	ldr	x11, [x0, #8]
  422390:	str	x10, [x0, #8]
  422394:	ldr	x10, [x9]
  422398:	ldr	x12, [x8, #2440]
  42239c:	str	x11, [x9, #8]
  4223a0:	str	x10, [x12]
  4223a4:	ldr	x10, [x8, #2440]
  4223a8:	str	x9, [x8, #2440]
  4223ac:	str	x10, [x9]
  4223b0:	ldr	x0, [x8, #2440]
  4223b4:	ldp	x29, x30, [sp], #16
  4223b8:	ret

00000000004223bc <pop_variable_scope@@Base>:
  4223bc:	stp	x29, x30, [sp, #-32]!
  4223c0:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4223c4:	ldr	x0, [x9, #2440]
  4223c8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4223cc:	add	x8, x8, #0x970
  4223d0:	str	x19, [sp, #16]
  4223d4:	cmp	x0, x8
  4223d8:	mov	x29, sp
  4223dc:	b.eq	4223ec <pop_variable_scope@@Base+0x30>  // b.none
  4223e0:	ldp	x8, x19, [x0]
  4223e4:	str	x8, [x9, #2440]
  4223e8:	b	422408 <pop_variable_scope@@Base+0x4c>
  4223ec:	ldp	x0, x19, [x8]
  4223f0:	ldr	x9, [x0, #8]
  4223f4:	str	x9, [x8, #8]
  4223f8:	ldr	x9, [x0]
  4223fc:	str	x9, [x8]
  422400:	ldr	w9, [x0, #16]
  422404:	str	w9, [x8, #16]
  422408:	bl	406cf0 <free@plt>
  42240c:	adrp	x1, 421000 <strcache_add_len@@Base>
  422410:	add	x1, x1, #0x9b4
  422414:	mov	x0, x19
  422418:	bl	40fed4 <hash_map@@Base>
  42241c:	mov	w1, #0x1                   	// #1
  422420:	mov	x0, x19
  422424:	bl	40fe90 <hash_free@@Base>
  422428:	mov	x0, x19
  42242c:	bl	406cf0 <free@plt>
  422430:	ldr	x19, [sp, #16]
  422434:	ldp	x29, x30, [sp], #32
  422438:	ret

000000000042243c <merge_variable_set_lists@@Base>:
  42243c:	stp	x29, x30, [sp, #-48]!
  422440:	stp	x22, x21, [sp, #16]
  422444:	stp	x20, x19, [sp, #32]
  422448:	mov	x29, sp
  42244c:	cbz	x1, 4224e8 <merge_variable_set_lists@@Base+0xac>
  422450:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  422454:	add	x21, x21, #0x970
  422458:	mov	x20, x1
  42245c:	cmp	x1, x21
  422460:	b.eq	4224e8 <merge_variable_set_lists@@Base+0xac>  // b.none
  422464:	ldr	x8, [x0]
  422468:	mov	x19, x0
  42246c:	cbz	x8, 4224cc <merge_variable_set_lists@@Base+0x90>
  422470:	cmp	x8, x21
  422474:	b.eq	42248c <merge_variable_set_lists@@Base+0x50>  // b.none
  422478:	cmp	x8, x20
  42247c:	b.eq	4224e8 <merge_variable_set_lists@@Base+0xac>  // b.none
  422480:	ldr	x8, [x8]
  422484:	cmp	x8, x21
  422488:	b.ne	422478 <merge_variable_set_lists@@Base+0x3c>  // b.any
  42248c:	cmp	x20, x21
  422490:	mov	x22, xzr
  422494:	b.eq	4224d0 <merge_variable_set_lists@@Base+0x94>  // b.none
  422498:	ldr	x8, [x19]
  42249c:	cmp	x8, x21
  4224a0:	b.eq	4224d0 <merge_variable_set_lists@@Base+0x94>  // b.none
  4224a4:	ldp	x20, x1, [x20]
  4224a8:	ldr	x0, [x8, #8]
  4224ac:	mov	x22, x8
  4224b0:	bl	4224f8 <merge_variable_set_lists@@Base+0xbc>
  4224b4:	cmp	x20, x21
  4224b8:	b.eq	4224d0 <merge_variable_set_lists@@Base+0x94>  // b.none
  4224bc:	ldr	x8, [x22]
  4224c0:	cmp	x8, x21
  4224c4:	b.ne	4224a4 <merge_variable_set_lists@@Base+0x68>  // b.any
  4224c8:	b	4224d0 <merge_variable_set_lists@@Base+0x94>
  4224cc:	mov	x22, xzr
  4224d0:	cmp	x20, x21
  4224d4:	b.eq	4224e8 <merge_variable_set_lists@@Base+0xac>  // b.none
  4224d8:	cbz	x22, 4224e4 <merge_variable_set_lists@@Base+0xa8>
  4224dc:	str	x20, [x22]
  4224e0:	b	4224e8 <merge_variable_set_lists@@Base+0xac>
  4224e4:	str	x20, [x19]
  4224e8:	ldp	x20, x19, [sp, #32]
  4224ec:	ldp	x22, x21, [sp, #16]
  4224f0:	ldp	x29, x30, [sp], #48
  4224f4:	ret
  4224f8:	stp	x29, x30, [sp, #-80]!
  4224fc:	stp	x24, x23, [sp, #32]
  422500:	stp	x22, x21, [sp, #48]
  422504:	stp	x20, x19, [sp, #64]
  422508:	ldr	x8, [x1, #32]
  42250c:	str	x25, [sp, #16]
  422510:	mov	x29, sp
  422514:	cmp	x8, #0x1
  422518:	b.lt	4225b4 <merge_variable_set_lists@@Base+0x178>  // b.tstop
  42251c:	ldr	x21, [x1]
  422520:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  422524:	add	x9, x9, #0xf40
  422528:	cmp	x0, x9
  42252c:	mov	x19, x0
  422530:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  422534:	cset	w23, eq  // eq = none
  422538:	add	x24, x21, x8, lsl #3
  42253c:	adrp	x25, 43f000 <stdio_traced@@Base+0x1a38>
  422540:	b	422568 <merge_variable_set_lists@@Base+0x12c>
  422544:	mov	x0, x19
  422548:	mov	x1, x20
  42254c:	bl	40fc04 <hash_insert_at@@Base>
  422550:	ldr	x8, [x25, #3992]
  422554:	add	x8, x8, x23
  422558:	str	x8, [x25, #3992]
  42255c:	add	x21, x21, #0x8
  422560:	cmp	x21, x24
  422564:	b.cs	4225b4 <merge_variable_set_lists@@Base+0x178>  // b.hs, b.nlast
  422568:	ldr	x20, [x21]
  42256c:	cbz	x20, 42255c <merge_variable_set_lists@@Base+0x120>
  422570:	ldr	x8, [x22, #2344]
  422574:	cmp	x8, x20
  422578:	b.eq	42255c <merge_variable_set_lists@@Base+0x120>  // b.none
  42257c:	mov	x0, x19
  422580:	mov	x1, x20
  422584:	bl	40fad4 <hash_find_slot@@Base>
  422588:	ldr	x8, [x0]
  42258c:	mov	x2, x0
  422590:	cbz	x8, 422544 <merge_variable_set_lists@@Base+0x108>
  422594:	ldr	x9, [x22, #2344]
  422598:	cmp	x9, x8
  42259c:	b.eq	422544 <merge_variable_set_lists@@Base+0x108>  // b.none
  4225a0:	ldr	x0, [x20, #8]
  4225a4:	bl	406cf0 <free@plt>
  4225a8:	mov	x0, x20
  4225ac:	bl	406cf0 <free@plt>
  4225b0:	b	42255c <merge_variable_set_lists@@Base+0x120>
  4225b4:	ldp	x20, x19, [sp, #64]
  4225b8:	ldp	x22, x21, [sp, #48]
  4225bc:	ldp	x24, x23, [sp, #32]
  4225c0:	ldr	x25, [sp, #16]
  4225c4:	ldp	x29, x30, [sp], #80
  4225c8:	ret

00000000004225cc <define_automatic_variables@@Base>:
  4225cc:	sub	sp, sp, #0x100
  4225d0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  4225d4:	ldr	w2, [x8, #64]
  4225d8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4225dc:	add	x1, x1, #0xa56
  4225e0:	add	x0, sp, #0x8
  4225e4:	stp	x29, x30, [sp, #208]
  4225e8:	str	x21, [sp, #224]
  4225ec:	stp	x20, x19, [sp, #240]
  4225f0:	add	x29, sp, #0xd0
  4225f4:	bl	406870 <sprintf@plt>
  4225f8:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4225fc:	ldr	x8, [x20, #2440]
  422600:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x30e0>
  422604:	add	x0, x0, #0x6f2
  422608:	add	x2, sp, #0x8
  42260c:	ldr	x5, [x8, #8]
  422610:	mov	w1, #0x9                   	// #9
  422614:	mov	w3, #0x1                   	// #1
  422618:	mov	w4, wzr
  42261c:	mov	x6, xzr
  422620:	bl	421720 <define_variable_in_set@@Base>
  422624:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  422628:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  42262c:	ldr	x8, [x8, #4032]
  422630:	ldr	x2, [x9, #2448]
  422634:	adrp	x3, 427000 <_IO_stdin_used@@Base+0x20e0>
  422638:	add	x3, x3, #0x989
  42263c:	cbz	x8, 422654 <define_automatic_variables@@Base+0x88>
  422640:	ldrb	w9, [x8]
  422644:	adrp	x10, 428000 <_IO_stdin_used@@Base+0x30e0>
  422648:	add	x10, x10, #0x7b8
  42264c:	cmp	w9, #0x0
  422650:	csel	x3, x3, x10, eq  // eq = none
  422654:	adrp	x4, 427000 <_IO_stdin_used@@Base+0x20e0>
  422658:	add	x4, x4, #0x989
  42265c:	cbz	x8, 42266c <define_automatic_variables@@Base+0xa0>
  422660:	ldrb	w9, [x8]
  422664:	cmp	w9, #0x0
  422668:	csel	x4, x4, x8, eq  // eq = none
  42266c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  422670:	add	x1, x1, #0x94e
  422674:	add	x0, sp, #0x8
  422678:	bl	406870 <sprintf@plt>
  42267c:	ldr	x8, [x20, #2440]
  422680:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422684:	add	x0, x0, #0xc15
  422688:	add	x2, sp, #0x8
  42268c:	ldr	x5, [x8, #8]
  422690:	mov	w1, #0xc                   	// #12
  422694:	mov	w3, wzr
  422698:	mov	w4, wzr
  42269c:	mov	x6, xzr
  4226a0:	bl	421720 <define_variable_in_set@@Base>
  4226a4:	ldr	x8, [x20, #2440]
  4226a8:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  4226ac:	ldr	x2, [x9, #2456]
  4226b0:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4226b4:	ldr	x5, [x8, #8]
  4226b8:	add	x0, x0, #0xc22
  4226bc:	mov	w1, #0x9                   	// #9
  4226c0:	mov	w3, wzr
  4226c4:	mov	w4, wzr
  4226c8:	mov	x6, xzr
  4226cc:	bl	421720 <define_variable_in_set@@Base>
  4226d0:	ldr	x8, [x20, #2440]
  4226d4:	adrp	x21, 43c000 <memcpy@GLIBC_2.17>
  4226d8:	ldr	x2, [x21, #2352]
  4226dc:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4226e0:	ldr	x5, [x8, #8]
  4226e4:	add	x0, x0, #0x83
  4226e8:	mov	w1, #0x5                   	// #5
  4226ec:	mov	w3, wzr
  4226f0:	mov	w4, wzr
  4226f4:	mov	x6, xzr
  4226f8:	bl	421720 <define_variable_in_set@@Base>
  4226fc:	mov	x19, x0
  422700:	ldr	x0, [x0, #8]
  422704:	ldrb	w8, [x0]
  422708:	cbz	w8, 422724 <define_automatic_variables@@Base+0x158>
  42270c:	ldr	w8, [x19, #44]
  422710:	lsr	w8, w8, #26
  422714:	orr	w8, w8, #0x2
  422718:	and	w8, w8, #0x7
  42271c:	cmp	w8, #0x3
  422720:	b.ne	422744 <define_automatic_variables@@Base+0x178>  // b.any
  422724:	bl	406cf0 <free@plt>
  422728:	ldr	w8, [x19, #44]
  42272c:	and	w8, w8, #0xe3ffffff
  422730:	orr	w8, w8, #0x8000000
  422734:	str	w8, [x19, #44]
  422738:	ldr	x0, [x21, #2352]
  42273c:	bl	4180bc <xstrdup@@Base>
  422740:	str	x0, [x19, #8]
  422744:	ldr	x8, [x20, #2440]
  422748:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42274c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  422750:	add	x0, x0, #0xc2c
  422754:	ldr	x5, [x8, #8]
  422758:	add	x2, x2, #0x989
  42275c:	mov	w1, #0x9                   	// #9
  422760:	mov	w3, wzr
  422764:	mov	w4, wzr
  422768:	mov	x6, xzr
  42276c:	bl	421720 <define_variable_in_set@@Base>
  422770:	ldr	w8, [x0, #44]
  422774:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422778:	add	x2, x2, #0xc39
  42277c:	mov	w1, #0x2                   	// #2
  422780:	and	w8, w8, #0x9fffffff
  422784:	orr	w8, w8, #0x40000000
  422788:	str	w8, [x0, #44]
  42278c:	ldr	x8, [x20, #2440]
  422790:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422794:	add	x0, x0, #0xc36
  422798:	mov	w3, #0x6                   	// #6
  42279c:	ldr	x5, [x8, #8]
  4227a0:	mov	w4, #0x1                   	// #1
  4227a4:	mov	x6, xzr
  4227a8:	bl	421720 <define_variable_in_set@@Base>
  4227ac:	ldr	x8, [x20, #2440]
  4227b0:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4227b4:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4227b8:	add	x0, x0, #0xc54
  4227bc:	ldr	x5, [x8, #8]
  4227c0:	add	x2, x2, #0xc57
  4227c4:	mov	w1, #0x2                   	// #2
  4227c8:	mov	w3, #0x6                   	// #6
  4227cc:	mov	w4, #0x1                   	// #1
  4227d0:	mov	x6, xzr
  4227d4:	bl	421720 <define_variable_in_set@@Base>
  4227d8:	ldr	x8, [x20, #2440]
  4227dc:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4227e0:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4227e4:	add	x0, x0, #0xc72
  4227e8:	ldr	x5, [x8, #8]
  4227ec:	add	x2, x2, #0xc75
  4227f0:	mov	w1, #0x2                   	// #2
  4227f4:	mov	w3, #0x6                   	// #6
  4227f8:	mov	w4, #0x1                   	// #1
  4227fc:	mov	x6, xzr
  422800:	bl	421720 <define_variable_in_set@@Base>
  422804:	ldr	x8, [x20, #2440]
  422808:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42280c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422810:	add	x0, x0, #0xc90
  422814:	ldr	x5, [x8, #8]
  422818:	add	x2, x2, #0xc93
  42281c:	mov	w1, #0x2                   	// #2
  422820:	mov	w3, #0x6                   	// #6
  422824:	mov	w4, #0x1                   	// #1
  422828:	mov	x6, xzr
  42282c:	bl	421720 <define_variable_in_set@@Base>
  422830:	ldr	x8, [x20, #2440]
  422834:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422838:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42283c:	add	x0, x0, #0xcae
  422840:	ldr	x5, [x8, #8]
  422844:	add	x2, x2, #0xcb1
  422848:	mov	w1, #0x2                   	// #2
  42284c:	mov	w3, #0x6                   	// #6
  422850:	mov	w4, #0x1                   	// #1
  422854:	mov	x6, xzr
  422858:	bl	421720 <define_variable_in_set@@Base>
  42285c:	ldr	x8, [x20, #2440]
  422860:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422864:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422868:	add	x0, x0, #0xccc
  42286c:	ldr	x5, [x8, #8]
  422870:	add	x2, x2, #0xccf
  422874:	mov	w1, #0x2                   	// #2
  422878:	mov	w3, #0x6                   	// #6
  42287c:	mov	w4, #0x1                   	// #1
  422880:	mov	x6, xzr
  422884:	bl	421720 <define_variable_in_set@@Base>
  422888:	ldr	x8, [x20, #2440]
  42288c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422890:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422894:	add	x0, x0, #0xcea
  422898:	ldr	x5, [x8, #8]
  42289c:	add	x2, x2, #0xced
  4228a0:	mov	w1, #0x2                   	// #2
  4228a4:	mov	w3, #0x6                   	// #6
  4228a8:	mov	w4, #0x1                   	// #1
  4228ac:	mov	x6, xzr
  4228b0:	bl	421720 <define_variable_in_set@@Base>
  4228b4:	ldr	x8, [x20, #2440]
  4228b8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4228bc:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4228c0:	add	x0, x0, #0xd08
  4228c4:	ldr	x5, [x8, #8]
  4228c8:	add	x2, x2, #0xd0b
  4228cc:	mov	w1, #0x2                   	// #2
  4228d0:	mov	w3, #0x6                   	// #6
  4228d4:	mov	w4, #0x1                   	// #1
  4228d8:	mov	x6, xzr
  4228dc:	bl	421720 <define_variable_in_set@@Base>
  4228e0:	ldr	x8, [x20, #2440]
  4228e4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4228e8:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4228ec:	add	x0, x0, #0xd18
  4228f0:	ldr	x5, [x8, #8]
  4228f4:	add	x2, x2, #0xd1b
  4228f8:	mov	w1, #0x2                   	// #2
  4228fc:	mov	w3, #0x6                   	// #6
  422900:	mov	w4, #0x1                   	// #1
  422904:	mov	x6, xzr
  422908:	bl	421720 <define_variable_in_set@@Base>
  42290c:	ldr	x8, [x20, #2440]
  422910:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422914:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422918:	add	x0, x0, #0xd28
  42291c:	ldr	x5, [x8, #8]
  422920:	add	x2, x2, #0xd2b
  422924:	mov	w1, #0x2                   	// #2
  422928:	mov	w3, #0x6                   	// #6
  42292c:	mov	w4, #0x1                   	// #1
  422930:	mov	x6, xzr
  422934:	bl	421720 <define_variable_in_set@@Base>
  422938:	ldr	x8, [x20, #2440]
  42293c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422940:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422944:	add	x0, x0, #0xd38
  422948:	ldr	x5, [x8, #8]
  42294c:	add	x2, x2, #0xd3b
  422950:	mov	w1, #0x2                   	// #2
  422954:	mov	w3, #0x6                   	// #6
  422958:	mov	w4, #0x1                   	// #1
  42295c:	mov	x6, xzr
  422960:	bl	421720 <define_variable_in_set@@Base>
  422964:	ldr	x8, [x20, #2440]
  422968:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42296c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422970:	add	x0, x0, #0xd48
  422974:	ldr	x5, [x8, #8]
  422978:	add	x2, x2, #0xd4b
  42297c:	mov	w1, #0x2                   	// #2
  422980:	mov	w3, #0x6                   	// #6
  422984:	mov	w4, #0x1                   	// #1
  422988:	mov	x6, xzr
  42298c:	bl	421720 <define_variable_in_set@@Base>
  422990:	ldr	x8, [x20, #2440]
  422994:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422998:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42299c:	add	x0, x0, #0xd58
  4229a0:	ldr	x5, [x8, #8]
  4229a4:	add	x2, x2, #0xd5b
  4229a8:	mov	w1, #0x2                   	// #2
  4229ac:	mov	w3, #0x6                   	// #6
  4229b0:	mov	w4, #0x1                   	// #1
  4229b4:	mov	x6, xzr
  4229b8:	bl	421720 <define_variable_in_set@@Base>
  4229bc:	ldr	x8, [x20, #2440]
  4229c0:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4229c4:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4229c8:	add	x0, x0, #0xd68
  4229cc:	ldr	x5, [x8, #8]
  4229d0:	add	x2, x2, #0xd6b
  4229d4:	mov	w1, #0x2                   	// #2
  4229d8:	mov	w3, #0x6                   	// #6
  4229dc:	mov	w4, #0x1                   	// #1
  4229e0:	mov	x6, xzr
  4229e4:	bl	421720 <define_variable_in_set@@Base>
  4229e8:	ldp	x20, x19, [sp, #240]
  4229ec:	ldr	x21, [sp, #224]
  4229f0:	ldp	x29, x30, [sp, #208]
  4229f4:	add	sp, sp, #0x100
  4229f8:	ret

00000000004229fc <target_environment@@Base>:
  4229fc:	sub	sp, sp, #0xf0
  422a00:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  422a04:	add	x8, x0, #0x50
  422a08:	add	x9, x9, #0x988
  422a0c:	cmp	x0, #0x0
  422a10:	stp	x29, x30, [sp, #144]
  422a14:	stp	x28, x27, [sp, #160]
  422a18:	stp	x26, x25, [sp, #176]
  422a1c:	stp	x24, x23, [sp, #192]
  422a20:	stp	x22, x21, [sp, #208]
  422a24:	stp	x20, x19, [sp, #224]
  422a28:	csel	x8, x9, x8, eq  // eq = none
  422a2c:	ldr	x25, [x8]
  422a30:	adrp	x2, 421000 <strcache_add_len@@Base>
  422a34:	adrp	x3, 421000 <strcache_add_len@@Base>
  422a38:	adrp	x4, 421000 <strcache_add_len@@Base>
  422a3c:	str	x0, [sp]
  422a40:	add	x2, x2, #0x6a8
  422a44:	add	x3, x3, #0x6cc
  422a48:	add	x4, x4, #0x6d4
  422a4c:	add	x0, sp, #0x38
  422a50:	mov	w1, #0x20b                 	// #523
  422a54:	add	x29, sp, #0x90
  422a58:	bl	40f974 <hash_init@@Base>
  422a5c:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  422a60:	cbz	x25, 422be4 <target_environment@@Base+0x1e8>
  422a64:	mov	w26, #0x8                   	// #8
  422a68:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  422a6c:	adrp	x27, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422a70:	adrp	x28, 43f000 <stdio_traced@@Base+0x1a38>
  422a74:	movk	w26, #0x6000, lsl #16
  422a78:	add	x20, x20, #0xf40
  422a7c:	add	x27, x27, #0x83
  422a80:	add	x28, x28, #0xfe8
  422a84:	b	422a90 <target_environment@@Base+0x94>
  422a88:	ldr	x25, [x25]
  422a8c:	cbz	x25, 422be4 <target_environment@@Base+0x1e8>
  422a90:	ldr	x9, [x25, #8]
  422a94:	ldr	x8, [x9, #32]
  422a98:	cmp	x8, #0x1
  422a9c:	b.lt	422a88 <target_environment@@Base+0x8c>  // b.tstop
  422aa0:	ldr	x19, [x9]
  422aa4:	add	x21, x19, x8, lsl #3
  422aa8:	b	422ac4 <target_environment@@Base+0xc8>
  422aac:	add	x0, sp, #0x38
  422ab0:	mov	x1, x22
  422ab4:	bl	40fc04 <hash_insert_at@@Base>
  422ab8:	add	x19, x19, #0x8
  422abc:	cmp	x19, x21
  422ac0:	b.cs	422a88 <target_environment@@Base+0x8c>  // b.hs, b.nlast
  422ac4:	ldr	x22, [x19]
  422ac8:	cbz	x22, 422ab8 <target_environment@@Base+0xbc>
  422acc:	ldr	x8, [x24, #2344]
  422ad0:	cmp	x8, x22
  422ad4:	b.eq	422ab8 <target_environment@@Base+0xbc>  // b.none
  422ad8:	ldr	w8, [x22, #44]
  422adc:	bics	wzr, w26, w8
  422ae0:	b.ne	422b18 <target_environment@@Base+0x11c>  // b.any
  422ae4:	ldr	x23, [x22]
  422ae8:	mov	x0, x23
  422aec:	bl	4067d0 <strlen@plt>
  422af0:	mov	x1, x0
  422af4:	mov	x0, x23
  422af8:	mov	x2, x20
  422afc:	bl	421d10 <lookup_variable_in_set@@Base>
  422b00:	cbz	x0, 422b18 <target_environment@@Base+0x11c>
  422b04:	ldr	w8, [x0, #44]
  422b08:	ldr	w9, [x22, #44]
  422b0c:	lsr	w8, w8, #29
  422b10:	bfi	w9, w8, #29, #2
  422b14:	str	w9, [x22, #44]
  422b18:	ldr	w8, [x22, #44]
  422b1c:	ubfx	w9, w8, #29, #2
  422b20:	cmp	w9, #0x1
  422b24:	b.eq	422b78 <target_environment@@Base+0x17c>  // b.none
  422b28:	cmp	w9, #0x2
  422b2c:	b.eq	422bb4 <target_environment@@Base+0x1b8>  // b.none
  422b30:	cmp	w9, #0x3
  422b34:	b.ne	422bbc <target_environment@@Base+0x1c0>  // b.any
  422b38:	ubfx	w9, w8, #26, #3
  422b3c:	cbz	w9, 422ab8 <target_environment@@Base+0xbc>
  422b40:	cmp	w9, #0x6
  422b44:	b.eq	422ab8 <target_environment@@Base+0xbc>  // b.none
  422b48:	tbz	w8, #5, 422ab8 <target_environment@@Base+0xbc>
  422b4c:	adrp	x8, 440000 <shell_var@@Base+0x18>
  422b50:	ldr	w8, [x8, #292]
  422b54:	cbnz	w8, 422bbc <target_environment@@Base+0x1c0>
  422b58:	cmp	w9, #0x4
  422b5c:	b.hi	422ab8 <target_environment@@Base+0xbc>  // b.pmore
  422b60:	mov	w8, #0x1                   	// #1
  422b64:	lsl	w8, w8, w9
  422b68:	mov	w9, #0x1a                  	// #26
  422b6c:	tst	w8, w9
  422b70:	b.ne	422bbc <target_environment@@Base+0x1c0>  // b.any
  422b74:	b	422ab8 <target_environment@@Base+0xbc>
  422b78:	ldr	x8, [x22]
  422b7c:	cmp	x8, x27
  422b80:	b.eq	422ba4 <target_environment@@Base+0x1a8>  // b.none
  422b84:	ldrb	w9, [x8]
  422b88:	cmp	w9, #0x53
  422b8c:	b.ne	422ab8 <target_environment@@Base+0xbc>  // b.any
  422b90:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422b94:	add	x0, x8, #0x1
  422b98:	add	x1, x1, #0x84
  422b9c:	bl	406cb0 <strcmp@plt>
  422ba0:	cbnz	w0, 422ab8 <target_environment@@Base+0xbc>
  422ba4:	ldr	x8, [x28, #8]
  422ba8:	mov	x22, x28
  422bac:	cbnz	x8, 422bbc <target_environment@@Base+0x1c0>
  422bb0:	b	422ab8 <target_environment@@Base+0xbc>
  422bb4:	tst	w8, #0x1c000000
  422bb8:	b.eq	422ab8 <target_environment@@Base+0xbc>  // b.none
  422bbc:	add	x0, sp, #0x38
  422bc0:	mov	x1, x22
  422bc4:	bl	40fad4 <hash_find_slot@@Base>
  422bc8:	ldr	x8, [x0]
  422bcc:	mov	x2, x0
  422bd0:	cbz	x8, 422aac <target_environment@@Base+0xb0>
  422bd4:	ldr	x9, [x24, #2344]
  422bd8:	cmp	x9, x8
  422bdc:	b.ne	422ab8 <target_environment@@Base+0xbc>  // b.any
  422be0:	b	422aac <target_environment@@Base+0xb0>
  422be4:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x30e0>
  422be8:	add	x8, x8, #0x6f2
  422bec:	mov	w9, #0x9                   	// #9
  422bf0:	add	x0, sp, #0x38
  422bf4:	add	x1, sp, #0x8
  422bf8:	str	x8, [sp, #8]
  422bfc:	str	w9, [sp, #48]
  422c00:	bl	40fd5c <hash_delete@@Base>
  422c04:	ldr	x8, [sp, #104]
  422c08:	lsl	x8, x8, #3
  422c0c:	add	x0, x8, #0x10
  422c10:	bl	418070 <xmalloc@@Base>
  422c14:	ldr	x8, [sp, #88]
  422c18:	mov	x20, x0
  422c1c:	cmp	x8, #0x1
  422c20:	b.lt	422cd0 <target_environment@@Base+0x2d4>  // b.tstop
  422c24:	ldr	x23, [sp, #56]
  422c28:	ldr	x26, [sp]
  422c2c:	adrp	x21, 428000 <_IO_stdin_used@@Base+0x30e0>
  422c30:	add	x21, x21, #0x9d8
  422c34:	add	x25, x23, x8, lsl #3
  422c38:	mov	x19, x20
  422c3c:	b	422c68 <target_environment@@Base+0x26c>
  422c40:	ldp	x1, x3, [x22]
  422c44:	mov	w0, #0x3                   	// #3
  422c48:	mov	x2, x21
  422c4c:	bl	417eb4 <concat@@Base>
  422c50:	bl	4180bc <xstrdup@@Base>
  422c54:	str	x0, [x19]
  422c58:	add	x19, x19, #0x8
  422c5c:	add	x23, x23, #0x8
  422c60:	cmp	x23, x25
  422c64:	b.cs	422cd4 <target_environment@@Base+0x2d8>  // b.hs, b.nlast
  422c68:	ldr	x22, [x23]
  422c6c:	cbz	x22, 422c5c <target_environment@@Base+0x260>
  422c70:	ldr	x8, [x24, #2344]
  422c74:	cmp	x8, x22
  422c78:	b.eq	422c5c <target_environment@@Base+0x260>  // b.none
  422c7c:	ldr	w8, [x22, #44]
  422c80:	tbz	w8, #0, 422c40 <target_environment@@Base+0x244>
  422c84:	lsr	w8, w8, #26
  422c88:	orr	w8, w8, #0x2
  422c8c:	and	w8, w8, #0x7
  422c90:	cmp	w8, #0x3
  422c94:	b.eq	422c40 <target_environment@@Base+0x244>  // b.none
  422c98:	mov	x0, x22
  422c9c:	mov	x1, x26
  422ca0:	bl	409d08 <recursively_expand_for_file@@Base>
  422ca4:	ldr	x1, [x22]
  422ca8:	mov	x22, x0
  422cac:	mov	w0, #0x3                   	// #3
  422cb0:	mov	x2, x21
  422cb4:	mov	x3, x22
  422cb8:	bl	417eb4 <concat@@Base>
  422cbc:	bl	4180bc <xstrdup@@Base>
  422cc0:	str	x0, [x19]
  422cc4:	mov	x0, x22
  422cc8:	bl	406cf0 <free@plt>
  422ccc:	b	422c58 <target_environment@@Base+0x25c>
  422cd0:	mov	x19, x20
  422cd4:	mov	w0, #0x64                  	// #100
  422cd8:	bl	418070 <xmalloc@@Base>
  422cdc:	str	x0, [x19]
  422ce0:	adrp	x8, 440000 <shell_var@@Base+0x18>
  422ce4:	ldr	w8, [x8, #64]
  422ce8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  422cec:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x30e0>
  422cf0:	add	x1, x1, #0x9da
  422cf4:	add	w3, w8, #0x1
  422cf8:	add	x2, x2, #0x6f2
  422cfc:	bl	406870 <sprintf@plt>
  422d00:	add	x0, sp, #0x38
  422d04:	mov	w1, wzr
  422d08:	str	xzr, [x19, #8]
  422d0c:	bl	40fe90 <hash_free@@Base>
  422d10:	mov	x0, x20
  422d14:	ldp	x20, x19, [sp, #224]
  422d18:	ldp	x22, x21, [sp, #208]
  422d1c:	ldp	x24, x23, [sp, #192]
  422d20:	ldp	x26, x25, [sp, #176]
  422d24:	ldp	x28, x27, [sp, #160]
  422d28:	ldp	x29, x30, [sp, #144]
  422d2c:	add	sp, sp, #0xf0
  422d30:	ret
  422d34:	sub	sp, sp, #0x40
  422d38:	stp	x29, x30, [sp, #32]
  422d3c:	add	x29, sp, #0x20
  422d40:	stp	x20, x19, [sp, #48]
  422d44:	mov	x19, x0
  422d48:	sub	x0, x29, #0x8
  422d4c:	add	x1, sp, #0x10
  422d50:	bl	40a604 <install_variable_buffer@@Base>
  422d54:	adrp	x20, 43f000 <stdio_traced@@Base+0x1a38>
  422d58:	ldr	x0, [x20, #4048]
  422d5c:	mov	x1, sp
  422d60:	mov	w2, wzr
  422d64:	stp	x19, xzr, [sp]
  422d68:	bl	40cc90 <func_shell_base@@Base>
  422d6c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422d70:	add	x1, x1, #0xc13
  422d74:	mov	w2, #0x1                   	// #1
  422d78:	bl	409c78 <variable_buffer_output@@Base>
  422d7c:	ldr	x0, [x20, #4048]
  422d80:	bl	406b70 <strdup@plt>
  422d84:	ldur	x8, [x29, #-8]
  422d88:	ldr	x1, [sp, #16]
  422d8c:	mov	x19, x0
  422d90:	mov	x0, x8
  422d94:	bl	40a634 <restore_variable_buffer@@Base>
  422d98:	mov	x0, x19
  422d9c:	ldp	x20, x19, [sp, #48]
  422da0:	ldp	x29, x30, [sp, #32]
  422da4:	add	sp, sp, #0x40
  422da8:	ret
  422dac:	stp	x29, x30, [sp, #-32]!
  422db0:	ldr	x8, [x0]
  422db4:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x30e0>
  422db8:	add	x9, x9, #0x5f4
  422dbc:	str	x19, [sp, #16]
  422dc0:	mov	x19, x0
  422dc4:	cmp	x8, x9
  422dc8:	mov	x29, sp
  422dcc:	b.eq	422df0 <target_environment@@Base+0x3f4>  // b.none
  422dd0:	ldrb	w9, [x8]
  422dd4:	cmp	w9, #0x2e
  422dd8:	b.ne	422e0c <target_environment@@Base+0x410>  // b.any
  422ddc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  422de0:	add	x0, x8, #0x1
  422de4:	add	x1, x1, #0x5f5
  422de8:	bl	406cb0 <strcmp@plt>
  422dec:	cbnz	w0, 422e0c <target_environment@@Base+0x410>
  422df0:	ldr	x8, [x19, #8]
  422df4:	mov	w9, #0x9                   	// #9
  422df8:	ldrb	w8, [x8]
  422dfc:	cmp	w8, #0x0
  422e00:	csel	w8, w9, w8, eq  // eq = none
  422e04:	adrp	x9, 43c000 <memcpy@GLIBC_2.17>
  422e08:	strb	w8, [x9, #2392]
  422e0c:	mov	x0, x19
  422e10:	ldr	x19, [sp, #16]
  422e14:	ldp	x29, x30, [sp], #32
  422e18:	ret

0000000000422e1c <parse_variable_definition@@Base>:
  422e1c:	stp	x29, x30, [sp, #-32]!
  422e20:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  422e24:	stp	x20, x19, [sp, #16]
  422e28:	mov	x19, x1
  422e2c:	sub	x20, x0, #0x1
  422e30:	add	x8, x8, #0xcf0
  422e34:	mov	x29, sp
  422e38:	ldrb	w9, [x20, #1]!
  422e3c:	ldrh	w9, [x8, x9, lsl #1]
  422e40:	tst	w9, #0x6
  422e44:	b.ne	422e38 <parse_variable_definition@@Base+0x1c>  // b.any
  422e48:	adrp	x11, 42a000 <_IO_stdin_used@@Base+0x50e0>
  422e4c:	mov	w12, wzr
  422e50:	mov	x13, xzr
  422e54:	mov	w9, #0x9                   	// #9
  422e58:	mov	w10, #0x4                   	// #4
  422e5c:	add	x11, x11, #0xbec
  422e60:	str	x20, [x19]
  422e64:	str	wzr, [x19, #40]
  422e68:	mov	x14, x20
  422e6c:	ldrb	w15, [x20], #1
  422e70:	ldrh	w16, [x8, x15, lsl #1]
  422e74:	tst	w16, w9
  422e78:	b.eq	422e90 <parse_variable_definition@@Base+0x74>  // b.none
  422e7c:	mov	w14, #0x1                   	// #1
  422e80:	cbz	w14, 422e68 <parse_variable_definition@@Base+0x4c>
  422e84:	cmp	w14, #0x4
  422e88:	b.eq	422e68 <parse_variable_definition@@Base+0x4c>  // b.none
  422e8c:	b	423018 <parse_variable_definition@@Base+0x1fc>
  422e90:	cmp	w15, #0x24
  422e94:	b.ne	422ec4 <parse_variable_definition@@Base+0xa8>  // b.any
  422e98:	ldrb	w15, [x14, #1]
  422e9c:	add	x20, x14, #0x2
  422ea0:	cbz	w15, 422e7c <parse_variable_definition@@Base+0x60>
  422ea4:	cmp	w15, #0x28
  422ea8:	b.eq	422f3c <parse_variable_definition@@Base+0x120>  // b.none
  422eac:	cmp	w15, #0x7b
  422eb0:	b.ne	422f7c <parse_variable_definition@@Base+0x160>  // b.any
  422eb4:	mov	w16, #0x7d                  	// #125
  422eb8:	ldrb	w17, [x20]
  422ebc:	cbnz	w17, 422f48 <parse_variable_definition@@Base+0x12c>
  422ec0:	b	422f7c <parse_variable_definition@@Base+0x160>
  422ec4:	tbz	w16, #1, 422ee4 <parse_variable_definition@@Base+0xc8>
  422ec8:	ldrb	w15, [x20], #1
  422ecc:	ldrh	w12, [x8, x15, lsl #1]
  422ed0:	tst	w12, #0x6
  422ed4:	b.ne	422ec8 <parse_variable_definition@@Base+0xac>  // b.any
  422ed8:	mov	w12, #0x1                   	// #1
  422edc:	cbz	w15, 422fc0 <parse_variable_definition@@Base+0x1a4>
  422ee0:	mov	x13, x14
  422ee4:	cmp	w15, #0x3d
  422ee8:	b.ne	422f08 <parse_variable_definition@@Base+0xec>  // b.any
  422eec:	ldr	w14, [x19, #44]
  422ef0:	sub	x15, x20, #0x1
  422ef4:	cmp	x13, #0x0
  422ef8:	csel	x13, x15, x13, eq  // eq = none
  422efc:	and	w14, w14, #0xfc7fffff
  422f00:	orr	w14, w14, #0x1000000
  422f04:	b	42300c <parse_variable_definition@@Base+0x1f0>
  422f08:	ldrb	w14, [x20]
  422f0c:	cmp	w14, #0x3d
  422f10:	b.ne	422f84 <parse_variable_definition@@Base+0x168>  // b.any
  422f14:	sub	w14, w15, #0x21
  422f18:	cmp	w14, #0x1e
  422f1c:	b.hi	422fd8 <parse_variable_definition@@Base+0x1bc>  // b.pmore
  422f20:	adr	x15, 422f34 <parse_variable_definition@@Base+0x118>
  422f24:	ldrb	w16, [x11, x14]
  422f28:	add	x15, x15, x16, lsl #2
  422f2c:	mov	w14, #0x800000              	// #8388608
  422f30:	br	x15
  422f34:	mov	w14, #0x2800000             	// #41943040
  422f38:	b	422ff0 <parse_variable_definition@@Base+0x1d4>
  422f3c:	mov	w16, #0x29                  	// #41
  422f40:	ldrb	w17, [x20]
  422f44:	cbz	w17, 422f7c <parse_variable_definition@@Base+0x160>
  422f48:	add	x20, x14, #0x3
  422f4c:	mov	w14, #0x1                   	// #1
  422f50:	b	422f64 <parse_variable_definition@@Base+0x148>
  422f54:	cmp	w15, w17, uxtb
  422f58:	ldrb	w17, [x20], #1
  422f5c:	cinc	w14, w14, eq  // eq = none
  422f60:	cbz	w17, 422f78 <parse_variable_definition@@Base+0x15c>
  422f64:	cmp	w16, w17, uxtb
  422f68:	b.ne	422f54 <parse_variable_definition@@Base+0x138>  // b.any
  422f6c:	subs	w14, w14, #0x1
  422f70:	b.ne	422f54 <parse_variable_definition@@Base+0x138>  // b.any
  422f74:	b	422f7c <parse_variable_definition@@Base+0x160>
  422f78:	sub	x20, x20, #0x1
  422f7c:	mov	w14, #0x4                   	// #4
  422f80:	b	422e80 <parse_variable_definition@@Base+0x64>
  422f84:	cmp	w15, #0x3a
  422f88:	b.ne	422fcc <parse_variable_definition@@Base+0x1b0>  // b.any
  422f8c:	cmp	w14, #0x3a
  422f90:	b.ne	422e7c <parse_variable_definition@@Base+0x60>  // b.any
  422f94:	ldrb	w14, [x20, #1]
  422f98:	cmp	w14, #0x3d
  422f9c:	b.ne	422e7c <parse_variable_definition@@Base+0x60>  // b.any
  422fa0:	ldr	w14, [x19, #44]
  422fa4:	sub	x15, x20, #0x1
  422fa8:	cmp	x13, #0x0
  422fac:	add	x20, x20, #0x2
  422fb0:	and	w14, w14, #0xfc7fffff
  422fb4:	csel	x13, x15, x13, eq  // eq = none
  422fb8:	orr	w14, w14, #0x800000
  422fbc:	b	42300c <parse_variable_definition@@Base+0x1f0>
  422fc0:	sub	x20, x20, #0x1
  422fc4:	mov	x13, x14
  422fc8:	b	422e7c <parse_variable_definition@@Base+0x60>
  422fcc:	cmp	w12, #0x0
  422fd0:	cset	w14, ne  // ne = any
  422fd4:	b	422e80 <parse_variable_definition@@Base+0x64>
  422fd8:	cmp	w12, #0x0
  422fdc:	csinc	w14, w10, wzr, eq  // eq = none
  422fe0:	b	422e80 <parse_variable_definition@@Base+0x64>
  422fe4:	mov	w14, #0x1800000             	// #25165824
  422fe8:	b	422ff0 <parse_variable_definition@@Base+0x1d4>
  422fec:	mov	w14, #0x2000000             	// #33554432
  422ff0:	ldr	w15, [x19, #44]
  422ff4:	sub	x16, x20, #0x1
  422ff8:	cmp	x13, #0x0
  422ffc:	add	x20, x20, #0x1
  423000:	and	w15, w15, #0xfc7fffff
  423004:	csel	x13, x16, x13, eq  // eq = none
  423008:	orr	w14, w15, w14
  42300c:	str	w14, [x19, #44]
  423010:	mov	w14, #0x5                   	// #5
  423014:	b	422e80 <parse_variable_definition@@Base+0x64>
  423018:	cmp	w14, #0x5
  42301c:	b.ne	42303c <parse_variable_definition@@Base+0x220>  // b.any
  423020:	ldr	w8, [x19]
  423024:	mov	x0, x20
  423028:	sub	w8, w13, w8
  42302c:	str	w8, [x19, #40]
  423030:	bl	418138 <next_token@@Base>
  423034:	str	x0, [x19, #8]
  423038:	b	423040 <parse_variable_definition@@Base+0x224>
  42303c:	mov	x20, xzr
  423040:	mov	x0, x20
  423044:	ldp	x20, x19, [sp, #16]
  423048:	ldp	x29, x30, [sp], #32
  42304c:	ret

0000000000423050 <assign_variable_definition@@Base>:
  423050:	stp	x29, x30, [sp, #-48]!
  423054:	stp	x20, x19, [sp, #32]
  423058:	mov	x19, x0
  42305c:	mov	x0, x1
  423060:	mov	x1, x19
  423064:	str	x21, [sp, #16]
  423068:	mov	x29, sp
  42306c:	bl	422e1c <parse_variable_definition@@Base>
  423070:	cbz	x0, 4230e4 <assign_variable_definition@@Base+0x94>
  423074:	ldr	w20, [x19, #40]
  423078:	mov	x9, sp
  42307c:	add	w8, w20, #0x1
  423080:	add	x8, x8, #0xf
  423084:	and	x8, x8, #0x1fffffff0
  423088:	sub	x21, x9, x8
  42308c:	mov	sp, x21
  423090:	ldr	x1, [x19]
  423094:	mov	x0, x21
  423098:	mov	x2, x20
  42309c:	bl	406790 <memcpy@plt>
  4230a0:	mov	x0, x21
  4230a4:	mov	x1, xzr
  4230a8:	strb	wzr, [x21, x20]
  4230ac:	bl	409ed0 <allocated_variable_expand_for_file@@Base>
  4230b0:	str	x0, [x19]
  4230b4:	ldrb	w8, [x0]
  4230b8:	cbnz	w8, 4230e8 <assign_variable_definition@@Base+0x98>
  4230bc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4230c0:	add	x1, x1, #0x1d7
  4230c4:	mov	w2, #0x5                   	// #5
  4230c8:	mov	x0, xzr
  4230cc:	add	x19, x19, #0x10
  4230d0:	bl	406e50 <dcgettext@plt>
  4230d4:	mov	x2, x0
  4230d8:	mov	x0, x19
  4230dc:	mov	x1, xzr
  4230e0:	bl	4190fc <fatal@@Base>
  4230e4:	mov	x19, xzr
  4230e8:	mov	x0, x19
  4230ec:	mov	sp, x29
  4230f0:	ldp	x20, x19, [sp, #32]
  4230f4:	ldr	x21, [sp, #16]
  4230f8:	ldp	x29, x30, [sp], #48
  4230fc:	ret

0000000000423100 <try_variable_definition@@Base>:
  423100:	sub	sp, sp, #0x60
  423104:	str	x21, [sp, #64]
  423108:	stp	x20, x19, [sp, #80]
  42310c:	mov	w19, w3
  423110:	mov	w20, w2
  423114:	mov	x21, x0
  423118:	stp	x29, x30, [sp, #48]
  42311c:	add	x29, sp, #0x30
  423120:	cbz	x0, 423140 <try_variable_definition@@Base+0x40>
  423124:	ldr	x8, [x21, #16]
  423128:	ldr	q0, [x21]
  42312c:	mov	x9, sp
  423130:	add	x9, x9, #0x10
  423134:	str	x8, [x9, #16]
  423138:	str	q0, [x9]
  42313c:	b	423144 <try_variable_definition@@Base+0x44>
  423140:	str	xzr, [sp, #16]
  423144:	mov	x0, sp
  423148:	bl	423050 <assign_variable_definition@@Base>
  42314c:	cbz	x0, 423180 <try_variable_definition@@Base+0x80>
  423150:	ldr	w8, [sp, #44]
  423154:	ldp	x1, x2, [sp]
  423158:	mov	x0, x21
  42315c:	mov	w3, w20
  423160:	ubfx	w4, w8, #23, #3
  423164:	mov	w5, w19
  423168:	bl	422088 <do_variable_definition@@Base>
  42316c:	ldr	x8, [sp]
  423170:	mov	x19, x0
  423174:	mov	x0, x8
  423178:	bl	406cf0 <free@plt>
  42317c:	b	423184 <try_variable_definition@@Base+0x84>
  423180:	mov	x19, xzr
  423184:	mov	x0, x19
  423188:	ldp	x20, x19, [sp, #80]
  42318c:	ldr	x21, [sp, #64]
  423190:	ldp	x29, x30, [sp, #48]
  423194:	add	sp, sp, #0x60
  423198:	ret

000000000042319c <print_variable_data_base@@Base>:
  42319c:	stp	x29, x30, [sp, #-48]!
  4231a0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4231a4:	add	x1, x1, #0xd78
  4231a8:	mov	w2, #0x5                   	// #5
  4231ac:	mov	x0, xzr
  4231b0:	stp	x22, x21, [sp, #16]
  4231b4:	stp	x20, x19, [sp, #32]
  4231b8:	mov	x29, sp
  4231bc:	bl	406e50 <dcgettext@plt>
  4231c0:	bl	406c40 <puts@plt>
  4231c4:	adrp	x0, 43f000 <stdio_traced@@Base+0x1a38>
  4231c8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4231cc:	add	x0, x0, #0xf40
  4231d0:	add	x1, x1, #0x989
  4231d4:	mov	w2, wzr
  4231d8:	bl	42328c <print_variable_data_base@@Base+0xf0>
  4231dc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4231e0:	add	x1, x1, #0xd86
  4231e4:	mov	w2, #0x5                   	// #5
  4231e8:	mov	x0, xzr
  4231ec:	bl	406e50 <dcgettext@plt>
  4231f0:	bl	406c40 <puts@plt>
  4231f4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4231f8:	ldr	x22, [x8, #1848]
  4231fc:	cbz	x22, 42325c <print_variable_data_base@@Base+0xc0>
  423200:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423204:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423208:	mov	w19, wzr
  42320c:	add	x20, x20, #0xdaa
  423210:	add	x21, x21, #0xf8f
  423214:	ldr	x1, [x22, #16]
  423218:	mov	x0, x20
  42321c:	add	w19, w19, #0x1
  423220:	bl	406ef0 <printf@plt>
  423224:	add	x0, x22, #0x20
  423228:	mov	x1, x21
  42322c:	bl	42331c <print_variable_data_base@@Base+0x180>
  423230:	ldr	x22, [x22]
  423234:	cbnz	x22, 423214 <print_variable_data_base@@Base+0x78>
  423238:	cbz	w19, 423264 <print_variable_data_base@@Base+0xc8>
  42323c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423240:	add	x1, x1, #0xdd9
  423244:	mov	w2, #0x5                   	// #5
  423248:	mov	x0, xzr
  42324c:	bl	406e50 <dcgettext@plt>
  423250:	mov	w1, w19
  423254:	bl	406ef0 <printf@plt>
  423258:	b	42327c <print_variable_data_base@@Base+0xe0>
  42325c:	mov	w19, wzr
  423260:	cbnz	w19, 42323c <print_variable_data_base@@Base+0xa0>
  423264:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423268:	add	x1, x1, #0xdb1
  42326c:	mov	w2, #0x5                   	// #5
  423270:	mov	x0, xzr
  423274:	bl	406e50 <dcgettext@plt>
  423278:	bl	406c40 <puts@plt>
  42327c:	ldp	x20, x19, [sp, #32]
  423280:	ldp	x22, x21, [sp, #16]
  423284:	ldp	x29, x30, [sp], #48
  423288:	ret
  42328c:	stp	x29, x30, [sp, #-32]!
  423290:	adrp	x9, 423000 <parse_variable_definition@@Base+0x1e4>
  423294:	adrp	x10, 423000 <parse_variable_definition@@Base+0x1e4>
  423298:	mov	x8, x1
  42329c:	add	x9, x9, #0x604
  4232a0:	add	x10, x10, #0x31c
  4232a4:	cmp	w2, #0x0
  4232a8:	csel	x1, x10, x9, eq  // eq = none
  4232ac:	mov	x2, x8
  4232b0:	stp	x20, x19, [sp, #16]
  4232b4:	mov	x29, sp
  4232b8:	mov	x19, x0
  4232bc:	bl	40ff3c <hash_map_arg@@Base>
  4232c0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4232c4:	add	x1, x1, #0xe00
  4232c8:	mov	w2, #0x5                   	// #5
  4232cc:	mov	x0, xzr
  4232d0:	bl	406e50 <dcgettext@plt>
  4232d4:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  4232d8:	ldr	x1, [x20, #2512]
  4232dc:	bl	4067e0 <fputs@plt>
  4232e0:	ldr	x3, [x20, #2512]
  4232e4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4232e8:	add	x0, x0, #0xf8f
  4232ec:	mov	w1, #0x2                   	// #2
  4232f0:	mov	w2, #0x1                   	// #1
  4232f4:	bl	406d40 <fwrite@plt>
  4232f8:	ldr	x1, [x20, #2512]
  4232fc:	mov	x0, x19
  423300:	bl	40ffb4 <hash_print_stats@@Base>
  423304:	ldr	x1, [x20, #2512]
  423308:	mov	w0, #0xa                   	// #10
  42330c:	bl	406880 <putc@plt>
  423310:	ldp	x20, x19, [sp, #16]
  423314:	ldp	x29, x30, [sp], #32
  423318:	ret
  42331c:	stp	x29, x30, [sp, #-48]!
  423320:	stp	x22, x21, [sp, #16]
  423324:	stp	x20, x19, [sp, #32]
  423328:	ldr	w8, [x0, #44]
  42332c:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423330:	add	x9, x9, #0xc0b
  423334:	mov	x20, x1
  423338:	ubfx	w8, w8, #26, #3
  42333c:	adr	x10, 42335c <print_variable_data_base@@Base+0x1c0>
  423340:	ldrb	w11, [x9, x8]
  423344:	add	x10, x10, x11, lsl #2
  423348:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  42334c:	mov	x29, sp
  423350:	mov	x19, x0
  423354:	add	x1, x1, #0x220
  423358:	br	x10
  42335c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  423360:	add	x1, x1, #0x1ea
  423364:	b	4233a0 <print_variable_data_base@@Base+0x204>
  423368:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42336c:	add	x1, x1, #0xe22
  423370:	b	4233a0 <print_variable_data_base@@Base+0x204>
  423374:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  423378:	add	x1, x1, #0x1f2
  42337c:	b	4233a0 <print_variable_data_base@@Base+0x204>
  423380:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x40e0>
  423384:	add	x1, x1, #0xd46
  423388:	b	4233a0 <print_variable_data_base@@Base+0x204>
  42338c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  423390:	add	x1, x1, #0x213
  423394:	b	4233a0 <print_variable_data_base@@Base+0x204>
  423398:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42339c:	add	x1, x1, #0xe37
  4233a0:	mov	w2, #0x5                   	// #5
  4233a4:	mov	x0, xzr
  4233a8:	bl	406e50 <dcgettext@plt>
  4233ac:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  4233b0:	ldr	x3, [x22, #2512]
  4233b4:	mov	x21, x0
  4233b8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4233bc:	add	x0, x0, #0xf8f
  4233c0:	mov	w1, #0x2                   	// #2
  4233c4:	mov	w2, #0x1                   	// #1
  4233c8:	bl	406d40 <fwrite@plt>
  4233cc:	ldr	x1, [x22, #2512]
  4233d0:	mov	x0, x21
  4233d4:	bl	4067e0 <fputs@plt>
  4233d8:	ldrb	w8, [x19, #44]
  4233dc:	tbz	w8, #7, 4233f8 <print_variable_data_base@@Base+0x25c>
  4233e0:	ldr	x3, [x22, #2512]
  4233e4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4233e8:	add	x0, x0, #0xe4c
  4233ec:	mov	w1, #0x8                   	// #8
  4233f0:	mov	w2, #0x1                   	// #1
  4233f4:	bl	406d40 <fwrite@plt>
  4233f8:	ldr	x8, [x19, #16]
  4233fc:	cbz	x8, 423424 <print_variable_data_base@@Base+0x288>
  423400:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423404:	add	x1, x1, #0xe55
  423408:	mov	w2, #0x5                   	// #5
  42340c:	mov	x0, xzr
  423410:	bl	406e50 <dcgettext@plt>
  423414:	ldp	x8, x9, [x19, #24]
  423418:	ldr	x1, [x19, #16]
  42341c:	add	x2, x9, x8
  423420:	bl	406ef0 <printf@plt>
  423424:	mov	w0, #0xa                   	// #10
  423428:	bl	406f20 <putchar@plt>
  42342c:	ldr	x1, [x22, #2512]
  423430:	mov	x0, x20
  423434:	bl	4067e0 <fputs@plt>
  423438:	ldr	w21, [x19, #44]
  42343c:	tbz	w21, #0, 42346c <print_variable_data_base@@Base+0x2d0>
  423440:	ldr	x20, [x19, #8]
  423444:	mov	w1, #0xa                   	// #10
  423448:	mov	x0, x20
  42344c:	bl	406d10 <strchr@plt>
  423450:	cbz	x0, 42346c <print_variable_data_base@@Base+0x2d0>
  423454:	ldr	x1, [x19]
  423458:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42345c:	add	x0, x0, #0xe6c
  423460:	mov	x2, x20
  423464:	bl	406ef0 <printf@plt>
  423468:	b	423514 <print_variable_data_base@@Base+0x378>
  42346c:	adrp	x8, 425000 <_IO_stdin_used@@Base+0xe0>
  423470:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x20e0>
  423474:	ldr	x1, [x19]
  423478:	add	x8, x8, #0x91a
  42347c:	add	x9, x9, #0x989
  423480:	tst	w21, #0x2
  423484:	csel	x8, x9, x8, eq  // eq = none
  423488:	adrp	x9, 425000 <_IO_stdin_used@@Base+0xe0>
  42348c:	add	x9, x9, #0xb4
  423490:	tst	w21, #0x1
  423494:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423498:	csel	x2, x9, x8, eq  // eq = none
  42349c:	add	x0, x0, #0xe80
  4234a0:	bl	406ef0 <printf@plt>
  4234a4:	ldr	x0, [x19, #8]
  4234a8:	bl	418138 <next_token@@Base>
  4234ac:	ldr	x20, [x19, #8]
  4234b0:	cmp	x0, x20
  4234b4:	b.eq	4234c0 <print_variable_data_base@@Base+0x324>  // b.none
  4234b8:	ldrb	w8, [x0]
  4234bc:	cbz	w8, 4234fc <print_variable_data_base@@Base+0x360>
  4234c0:	ldrb	w8, [x19, #44]
  4234c4:	tbz	w8, #0, 4234e8 <print_variable_data_base@@Base+0x34c>
  4234c8:	ldr	x1, [x22, #2512]
  4234cc:	mov	x0, x20
  4234d0:	bl	4067e0 <fputs@plt>
  4234d4:	b	42350c <print_variable_data_base@@Base+0x370>
  4234d8:	mov	w0, #0x24                  	// #36
  4234dc:	bl	406f20 <putchar@plt>
  4234e0:	ldrb	w0, [x20], #1
  4234e4:	bl	406f20 <putchar@plt>
  4234e8:	ldrb	w8, [x20]
  4234ec:	cmp	w8, #0x24
  4234f0:	b.eq	4234d8 <print_variable_data_base@@Base+0x33c>  // b.none
  4234f4:	cbnz	w8, 4234e0 <print_variable_data_base@@Base+0x344>
  4234f8:	b	42350c <print_variable_data_base@@Base+0x370>
  4234fc:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423500:	add	x0, x0, #0xe88
  423504:	mov	x1, x20
  423508:	bl	406ef0 <printf@plt>
  42350c:	mov	w0, #0xa                   	// #10
  423510:	bl	406f20 <putchar@plt>
  423514:	ldp	x20, x19, [sp, #32]
  423518:	ldp	x22, x21, [sp, #16]
  42351c:	ldp	x29, x30, [sp], #48
  423520:	ret
  423524:	bl	406c10 <abort@plt>

0000000000423528 <print_file_variables@@Base>:
  423528:	stp	x29, x30, [sp, #-16]!
  42352c:	ldr	x8, [x0, #80]
  423530:	mov	x29, sp
  423534:	cbz	x8, 42354c <print_file_variables@@Base+0x24>
  423538:	ldr	x0, [x8, #8]
  42353c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423540:	add	x1, x1, #0xf8f
  423544:	mov	w2, #0x1                   	// #1
  423548:	bl	42328c <print_variable_data_base@@Base+0xf0>
  42354c:	ldp	x29, x30, [sp], #16
  423550:	ret

0000000000423554 <print_target_variables@@Base>:
  423554:	stp	x29, x30, [sp, #-48]!
  423558:	stp	x22, x21, [sp, #16]
  42355c:	stp	x20, x19, [sp, #32]
  423560:	ldr	x8, [x0, #80]
  423564:	mov	x29, sp
  423568:	cbz	x8, 4235c8 <print_target_variables@@Base+0x74>
  42356c:	ldr	x20, [x0]
  423570:	mov	x19, x0
  423574:	mov	x0, x20
  423578:	bl	4067d0 <strlen@plt>
  42357c:	add	x9, x0, #0x12
  423580:	mov	x8, sp
  423584:	and	x9, x9, #0xfffffffffffffff0
  423588:	sub	x22, x8, x9
  42358c:	mov	x21, x0
  423590:	mov	sp, x22
  423594:	mov	x0, x22
  423598:	mov	x1, x20
  42359c:	bl	406d90 <strcpy@plt>
  4235a0:	add	x8, x22, x21
  4235a4:	mov	w9, #0x203a                	// #8250
  4235a8:	strh	w9, [x8]
  4235ac:	strb	wzr, [x8, #2]
  4235b0:	ldr	x8, [x19, #80]
  4235b4:	adrp	x1, 423000 <parse_variable_definition@@Base+0x1e4>
  4235b8:	add	x1, x1, #0x5dc
  4235bc:	mov	x2, x22
  4235c0:	ldr	x0, [x8, #8]
  4235c4:	bl	40ff3c <hash_map_arg@@Base>
  4235c8:	mov	sp, x29
  4235cc:	ldp	x20, x19, [sp, #32]
  4235d0:	ldp	x22, x21, [sp, #16]
  4235d4:	ldp	x29, x30, [sp], #48
  4235d8:	ret
  4235dc:	stp	x29, x30, [sp, #-16]!
  4235e0:	ldr	w8, [x0, #44]
  4235e4:	mov	w9, #0x18000000            	// #402653184
  4235e8:	mov	x29, sp
  4235ec:	and	w8, w8, #0x1c000000
  4235f0:	cmp	w8, w9
  4235f4:	b.eq	4235fc <print_target_variables@@Base+0xa8>  // b.none
  4235f8:	bl	42331c <print_variable_data_base@@Base+0x180>
  4235fc:	ldp	x29, x30, [sp], #16
  423600:	ret
  423604:	stp	x29, x30, [sp, #-16]!
  423608:	ldr	w8, [x0, #44]
  42360c:	mov	w9, #0x18000000            	// #402653184
  423610:	mov	x29, sp
  423614:	and	w8, w8, #0x1c000000
  423618:	cmp	w8, w9
  42361c:	b.ne	423624 <print_target_variables@@Base+0xd0>  // b.any
  423620:	bl	42331c <print_variable_data_base@@Base+0x180>
  423624:	ldp	x29, x30, [sp], #16
  423628:	ret

000000000042362c <build_vpath_lists@@Base>:
  42362c:	stp	x29, x30, [sp, #-48]!
  423630:	stp	x20, x19, [sp, #32]
  423634:	adrp	x19, 43f000 <stdio_traced@@Base+0x1a38>
  423638:	ldr	x8, [x19, #4008]
  42363c:	str	x21, [sp, #16]
  423640:	mov	x29, sp
  423644:	cbz	x8, 423664 <build_vpath_lists@@Base+0x38>
  423648:	mov	x10, xzr
  42364c:	mov	x9, x8
  423650:	ldr	x8, [x8]
  423654:	str	x10, [x9]
  423658:	mov	x10, x9
  42365c:	cbnz	x8, 42364c <build_vpath_lists@@Base+0x20>
  423660:	b	423668 <build_vpath_lists@@Base+0x3c>
  423664:	mov	x9, xzr
  423668:	adrp	x20, 440000 <shell_var@@Base+0x18>
  42366c:	ldr	w21, [x20, #96]
  423670:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423674:	add	x0, x0, #0xeb4
  423678:	str	x9, [x19, #4008]
  42367c:	str	wzr, [x20, #96]
  423680:	bl	40a57c <variable_expand@@Base>
  423684:	str	w21, [x20, #96]
  423688:	ldrb	w8, [x0]
  42368c:	cbz	w8, 4236bc <build_vpath_lists@@Base+0x90>
  423690:	ldr	x21, [x19, #4008]
  423694:	mov	x1, x0
  423698:	mov	w8, #0x25                  	// #37
  42369c:	add	x0, x29, #0x1c
  4236a0:	strh	w8, [x29, #28]
  4236a4:	str	xzr, [x19, #4008]
  4236a8:	bl	423718 <construct_vpath_list@@Base>
  4236ac:	ldr	x8, [x19, #4008]
  4236b0:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  4236b4:	str	x21, [x19, #4008]
  4236b8:	str	x8, [x9, #4016]
  4236bc:	ldr	w21, [x20, #96]
  4236c0:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4236c4:	add	x0, x0, #0xec6
  4236c8:	str	wzr, [x20, #96]
  4236cc:	bl	40a57c <variable_expand@@Base>
  4236d0:	str	w21, [x20, #96]
  4236d4:	ldrb	w8, [x0]
  4236d8:	cbz	w8, 423708 <build_vpath_lists@@Base+0xdc>
  4236dc:	ldr	x20, [x19, #4008]
  4236e0:	mov	x1, x0
  4236e4:	mov	w8, #0x25                  	// #37
  4236e8:	add	x0, x29, #0x18
  4236ec:	strh	w8, [x29, #24]
  4236f0:	str	xzr, [x19, #4008]
  4236f4:	bl	423718 <construct_vpath_list@@Base>
  4236f8:	ldr	x8, [x19, #4008]
  4236fc:	adrp	x9, 43f000 <stdio_traced@@Base+0x1a38>
  423700:	str	x20, [x19, #4008]
  423704:	str	x8, [x9, #4024]
  423708:	ldp	x20, x19, [sp, #32]
  42370c:	ldr	x21, [sp, #16]
  423710:	ldp	x29, x30, [sp], #48
  423714:	ret

0000000000423718 <construct_vpath_list@@Base>:
  423718:	sub	sp, sp, #0x70
  42371c:	stp	x22, x21, [sp, #80]
  423720:	stp	x20, x19, [sp, #96]
  423724:	mov	x21, x1
  423728:	mov	x19, x0
  42372c:	stp	x29, x30, [sp, #16]
  423730:	stp	x28, x27, [sp, #32]
  423734:	stp	x26, x25, [sp, #48]
  423738:	stp	x24, x23, [sp, #64]
  42373c:	add	x29, sp, #0x10
  423740:	cbz	x0, 4237a0 <construct_vpath_list@@Base+0x88>
  423744:	mov	x0, x19
  423748:	bl	41ae68 <find_percent@@Base>
  42374c:	mov	x20, x0
  423750:	cbz	x21, 4237a8 <construct_vpath_list@@Base+0x90>
  423754:	adrp	x24, 43c000 <memcpy@GLIBC_2.17>
  423758:	add	x24, x24, #0xcf0
  42375c:	mov	w8, #0x42                  	// #66
  423760:	ldrb	w9, [x21], #1
  423764:	ldrh	w9, [x24, x9, lsl #1]
  423768:	tst	w9, w8
  42376c:	b.ne	423760 <construct_vpath_list@@Base+0x48>  // b.any
  423770:	mov	x22, x21
  423774:	ldrb	w8, [x22, #-1]!
  423778:	cbz	w8, 423868 <construct_vpath_list@@Base+0x150>
  42377c:	mov	w25, #0x2                   	// #2
  423780:	mov	w9, #0x42                  	// #66
  423784:	and	x8, x8, #0xff
  423788:	ldrh	w10, [x24, x8, lsl #1]
  42378c:	ldrb	w8, [x21], #1
  423790:	tst	w10, w9
  423794:	cinc	w25, w25, ne  // ne = any
  423798:	cbnz	w8, 423784 <construct_vpath_list@@Base+0x6c>
  42379c:	b	42386c <construct_vpath_list@@Base+0x154>
  4237a0:	mov	x20, xzr
  4237a4:	cbnz	x21, 423754 <construct_vpath_list@@Base+0x3c>
  4237a8:	adrp	x23, 43f000 <stdio_traced@@Base+0x1a38>
  4237ac:	ldr	x24, [x23, #4008]
  4237b0:	cbz	x24, 4239c0 <construct_vpath_list@@Base+0x2a8>
  4237b4:	mov	x26, xzr
  4237b8:	sub	x25, x20, x19
  4237bc:	add	x21, x19, #0x1
  4237c0:	b	4237cc <construct_vpath_list@@Base+0xb4>
  4237c4:	mov	x26, x22
  4237c8:	cbz	x24, 4239c0 <construct_vpath_list@@Base+0x2a8>
  4237cc:	mov	x22, x24
  4237d0:	ldr	x24, [x24]
  4237d4:	cbz	x19, 423830 <construct_vpath_list@@Base+0x118>
  4237d8:	cbnz	x20, 4237e4 <construct_vpath_list@@Base+0xcc>
  4237dc:	ldr	x8, [x22, #16]
  4237e0:	cbz	x8, 4237f4 <construct_vpath_list@@Base+0xdc>
  4237e4:	ldp	x9, x8, [x22, #8]
  4237e8:	sub	x8, x8, x9
  4237ec:	cmp	x25, x8
  4237f0:	b.ne	4237c4 <construct_vpath_list@@Base+0xac>  // b.any
  4237f4:	ldr	x8, [x22, #8]
  4237f8:	cmp	x8, x19
  4237fc:	b.eq	423830 <construct_vpath_list@@Base+0x118>  // b.none
  423800:	ldrb	w9, [x19]
  423804:	ldrb	w10, [x8]
  423808:	cmp	w9, w10
  42380c:	b.ne	42385c <construct_vpath_list@@Base+0x144>  // b.any
  423810:	cbz	w9, 423830 <construct_vpath_list@@Base+0x118>
  423814:	add	x1, x8, #0x1
  423818:	mov	x0, x21
  42381c:	bl	406cb0 <strcmp@plt>
  423820:	cbz	w0, 423830 <construct_vpath_list@@Base+0x118>
  423824:	mov	x26, x22
  423828:	cbnz	x24, 4237cc <construct_vpath_list@@Base+0xb4>
  42382c:	b	4239c0 <construct_vpath_list@@Base+0x2a8>
  423830:	cbz	x26, 42383c <construct_vpath_list@@Base+0x124>
  423834:	str	x24, [x26]
  423838:	b	423844 <construct_vpath_list@@Base+0x12c>
  42383c:	ldr	x8, [x22]
  423840:	str	x8, [x23, #4008]
  423844:	ldr	x0, [x22, #32]
  423848:	bl	406cf0 <free@plt>
  42384c:	mov	x0, x22
  423850:	bl	406cf0 <free@plt>
  423854:	cbnz	x24, 4237cc <construct_vpath_list@@Base+0xb4>
  423858:	b	4239c0 <construct_vpath_list@@Base+0x2a8>
  42385c:	mov	x26, x22
  423860:	cbnz	x24, 4237cc <construct_vpath_list@@Base+0xb4>
  423864:	b	4239c0 <construct_vpath_list@@Base+0x2a8>
  423868:	mov	w25, #0x2                   	// #2
  42386c:	mov	w8, w25
  423870:	lsl	x0, x8, #3
  423874:	str	x20, [sp, #8]
  423878:	bl	418070 <xmalloc@@Base>
  42387c:	ldrb	w8, [x22]
  423880:	mov	x21, x0
  423884:	cbz	w8, 4239ac <construct_vpath_list@@Base+0x294>
  423888:	mov	w27, wzr
  42388c:	mov	x26, xzr
  423890:	mov	w28, #0x42                  	// #66
  423894:	sub	x20, x22, #0x1
  423898:	mov	x9, x22
  42389c:	ldrb	w10, [x9]
  4238a0:	cbz	w10, 4238c4 <construct_vpath_list@@Base+0x1ac>
  4238a4:	cmp	w10, #0x3a
  4238a8:	b.eq	4238c4 <construct_vpath_list@@Base+0x1ac>  // b.none
  4238ac:	ldrh	w10, [x24, x10, lsl #1]
  4238b0:	tbnz	w10, #1, 4238c4 <construct_vpath_list@@Base+0x1ac>
  4238b4:	add	x9, x9, #0x1
  4238b8:	add	x20, x20, #0x1
  4238bc:	ldrb	w10, [x9]
  4238c0:	cbnz	w10, 4238a4 <construct_vpath_list@@Base+0x18c>
  4238c4:	sub	x23, x9, x22
  4238c8:	cmp	x23, #0x2
  4238cc:	b.cc	4238e0 <construct_vpath_list@@Base+0x1c8>  // b.lo, b.ul, b.last
  4238d0:	ldurb	w9, [x9, #-1]
  4238d4:	cmp	w9, #0x2f
  4238d8:	cset	w9, eq  // eq = none
  4238dc:	sub	x23, x23, x9
  4238e0:	and	w8, w8, #0xff
  4238e4:	cmp	w8, #0x2e
  4238e8:	b.ne	4238f4 <construct_vpath_list@@Base+0x1dc>  // b.any
  4238ec:	cmp	x23, #0x2
  4238f0:	b.cc	423914 <construct_vpath_list@@Base+0x1fc>  // b.lo, b.ul, b.last
  4238f4:	mov	x0, x22
  4238f8:	mov	x1, x23
  4238fc:	bl	421000 <strcache_add_len@@Base>
  423900:	bl	4096b8 <dir_name@@Base>
  423904:	cmp	x23, x26
  423908:	str	x0, [x21, w27, uxtw #3]
  42390c:	add	w27, w27, #0x1
  423910:	csel	x26, x23, x26, hi  // hi = pmore
  423914:	mov	x22, x20
  423918:	ldrb	w8, [x22, #1]!
  42391c:	ldrh	w8, [x24, x8, lsl #1]
  423920:	tst	w8, w28
  423924:	b.ne	423918 <construct_vpath_list@@Base+0x200>  // b.any
  423928:	ldrb	w8, [x22]
  42392c:	cbnz	w8, 423894 <construct_vpath_list@@Base+0x17c>
  423930:	cbz	w27, 4239b8 <construct_vpath_list@@Base+0x2a0>
  423934:	sub	w8, w25, #0x1
  423938:	cmp	w27, w8
  42393c:	b.cs	423954 <construct_vpath_list@@Base+0x23c>  // b.hs, b.nlast
  423940:	add	w8, w27, #0x1
  423944:	lsl	x1, x8, #3
  423948:	mov	x0, x21
  42394c:	bl	41803c <xrealloc@@Base>
  423950:	mov	x21, x0
  423954:	mov	w0, #0x30                  	// #48
  423958:	str	xzr, [x21, w27, uxtw #3]
  42395c:	bl	418070 <xmalloc@@Base>
  423960:	stp	x21, x26, [x0, #32]
  423964:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  423968:	ldr	x9, [x8, #4008]
  42396c:	mov	x22, x0
  423970:	str	x9, [x0]
  423974:	str	x0, [x8, #4008]
  423978:	mov	x0, x19
  42397c:	bl	420f28 <strcache_add@@Base>
  423980:	mov	x21, x0
  423984:	str	x0, [x22, #8]
  423988:	mov	x0, x19
  42398c:	bl	4067d0 <strlen@plt>
  423990:	ldr	x9, [sp, #8]
  423994:	sub	x8, x9, x19
  423998:	cmp	x9, #0x0
  42399c:	add	x8, x21, x8
  4239a0:	csel	x8, xzr, x8, eq  // eq = none
  4239a4:	stp	x8, x0, [x22, #16]
  4239a8:	b	4239c0 <construct_vpath_list@@Base+0x2a8>
  4239ac:	mov	x26, xzr
  4239b0:	mov	w27, wzr
  4239b4:	cbnz	w27, 423934 <construct_vpath_list@@Base+0x21c>
  4239b8:	mov	x0, x21
  4239bc:	bl	406cf0 <free@plt>
  4239c0:	ldp	x20, x19, [sp, #96]
  4239c4:	ldp	x22, x21, [sp, #80]
  4239c8:	ldp	x24, x23, [sp, #64]
  4239cc:	ldp	x26, x25, [sp, #48]
  4239d0:	ldp	x28, x27, [sp, #32]
  4239d4:	ldp	x29, x30, [sp, #16]
  4239d8:	add	sp, sp, #0x70
  4239dc:	ret

00000000004239e0 <gpath_search@@Base>:
  4239e0:	stp	x29, x30, [sp, #-48]!
  4239e4:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  4239e8:	ldr	x8, [x8, #4024]
  4239ec:	stp	x22, x21, [sp, #16]
  4239f0:	stp	x20, x19, [sp, #32]
  4239f4:	mov	x29, sp
  4239f8:	cbz	x8, 423a50 <gpath_search@@Base+0x70>
  4239fc:	ldr	x9, [x8, #40]
  423a00:	mov	x19, x1
  423a04:	cmp	x9, x1
  423a08:	b.cc	423a50 <gpath_search@@Base+0x70>  // b.lo, b.ul, b.last
  423a0c:	ldr	x8, [x8, #32]
  423a10:	ldr	x21, [x8]
  423a14:	cbz	x21, 423a50 <gpath_search@@Base+0x70>
  423a18:	mov	x20, x0
  423a1c:	add	x22, x8, #0x8
  423a20:	b	423a2c <gpath_search@@Base+0x4c>
  423a24:	ldr	x21, [x22], #8
  423a28:	cbz	x21, 423a50 <gpath_search@@Base+0x70>
  423a2c:	mov	x0, x21
  423a30:	mov	x1, x20
  423a34:	mov	x2, x19
  423a38:	bl	406a70 <strncmp@plt>
  423a3c:	cbnz	w0, 423a24 <gpath_search@@Base+0x44>
  423a40:	ldrb	w8, [x21, x19]
  423a44:	cbnz	w8, 423a24 <gpath_search@@Base+0x44>
  423a48:	mov	w0, #0x1                   	// #1
  423a4c:	b	423a54 <gpath_search@@Base+0x74>
  423a50:	mov	w0, wzr
  423a54:	ldp	x20, x19, [sp, #32]
  423a58:	ldp	x22, x21, [sp, #16]
  423a5c:	ldp	x29, x30, [sp], #48
  423a60:	ret

0000000000423a64 <vpath_search@@Base>:
  423a64:	stp	x29, x30, [sp, #-80]!
  423a68:	stp	x24, x23, [sp, #32]
  423a6c:	stp	x22, x21, [sp, #48]
  423a70:	stp	x20, x19, [sp, #64]
  423a74:	ldrb	w8, [x0]
  423a78:	str	x25, [sp, #16]
  423a7c:	mov	x29, sp
  423a80:	cmp	w8, #0x2f
  423a84:	b.eq	423b38 <vpath_search@@Base+0xd4>  // b.none
  423a88:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  423a8c:	adrp	x25, 43f000 <stdio_traced@@Base+0x1a38>
  423a90:	ldr	x9, [x8, #4008]
  423a94:	ldr	x10, [x25, #4016]
  423a98:	orr	x9, x9, x10
  423a9c:	cbz	x9, 423b38 <vpath_search@@Base+0xd4>
  423aa0:	mov	x19, x3
  423aa4:	mov	x23, x2
  423aa8:	mov	x20, x0
  423aac:	mov	x21, x1
  423ab0:	cbz	x2, 423abc <vpath_search@@Base+0x58>
  423ab4:	str	wzr, [x23]
  423ab8:	str	wzr, [x19]
  423abc:	ldr	x24, [x8, #4008]
  423ac0:	cbz	x24, 423b14 <vpath_search@@Base+0xb0>
  423ac4:	b	423ad0 <vpath_search@@Base+0x6c>
  423ac8:	ldr	x24, [x24]
  423acc:	cbz	x24, 423b14 <vpath_search@@Base+0xb0>
  423ad0:	ldp	x0, x1, [x24, #8]
  423ad4:	mov	x2, x20
  423ad8:	bl	40ca30 <pattern_matches@@Base>
  423adc:	cbz	w0, 423b00 <vpath_search@@Base+0x9c>
  423ae0:	mov	x0, x24
  423ae4:	mov	x1, x20
  423ae8:	mov	x2, x21
  423aec:	mov	x3, x19
  423af0:	bl	423b58 <vpath_search@@Base+0xf4>
  423af4:	cmp	x0, #0x0
  423af8:	csel	x22, x22, x0, eq  // eq = none
  423afc:	cbnz	x0, 423b3c <vpath_search@@Base+0xd8>
  423b00:	cbz	x23, 423ac8 <vpath_search@@Base+0x64>
  423b04:	ldr	w8, [x23]
  423b08:	add	w8, w8, #0x1
  423b0c:	str	w8, [x23]
  423b10:	b	423ac8 <vpath_search@@Base+0x64>
  423b14:	ldr	x0, [x25, #4016]
  423b18:	cbz	x0, 423b38 <vpath_search@@Base+0xd4>
  423b1c:	mov	x1, x20
  423b20:	mov	x2, x21
  423b24:	mov	x3, x19
  423b28:	bl	423b58 <vpath_search@@Base+0xf4>
  423b2c:	cmp	x0, #0x0
  423b30:	csel	x22, x22, x0, eq  // eq = none
  423b34:	cbnz	x0, 423b3c <vpath_search@@Base+0xd8>
  423b38:	mov	x22, xzr
  423b3c:	mov	x0, x22
  423b40:	ldp	x20, x19, [sp, #64]
  423b44:	ldp	x22, x21, [sp, #48]
  423b48:	ldp	x24, x23, [sp, #32]
  423b4c:	ldr	x25, [sp, #16]
  423b50:	ldp	x29, x30, [sp], #80
  423b54:	ret
  423b58:	stp	x29, x30, [sp, #-96]!
  423b5c:	stp	x28, x27, [sp, #16]
  423b60:	stp	x26, x25, [sp, #32]
  423b64:	stp	x24, x23, [sp, #48]
  423b68:	stp	x22, x21, [sp, #64]
  423b6c:	stp	x20, x19, [sp, #80]
  423b70:	mov	x29, sp
  423b74:	sub	sp, sp, #0xb0
  423b78:	stur	x3, [x29, #-160]
  423b7c:	ldp	x8, x19, [x0, #32]
  423b80:	mov	x0, x1
  423b84:	mov	x21, x2
  423b88:	mov	x20, x1
  423b8c:	stur	x8, [x29, #-144]
  423b90:	bl	40a798 <lookup_file@@Base>
  423b94:	cbz	x0, 423ba8 <vpath_search@@Base+0x144>
  423b98:	ldrb	w8, [x0, #137]
  423b9c:	tst	w8, #0x8
  423ba0:	cset	w8, eq  // eq = none
  423ba4:	b	423bac <vpath_search@@Base+0x148>
  423ba8:	mov	w8, #0x1                   	// #1
  423bac:	mov	x0, x20
  423bb0:	stur	w8, [x29, #-148]
  423bb4:	bl	4067d0 <strlen@plt>
  423bb8:	mov	x24, x0
  423bbc:	mov	w1, #0x2f                  	// #47
  423bc0:	mov	x0, x20
  423bc4:	bl	406bc0 <strrchr@plt>
  423bc8:	sub	x8, x0, x20
  423bcc:	cmp	x0, #0x0
  423bd0:	csel	x22, xzr, x8, eq  // eq = none
  423bd4:	cmp	x22, #0x0
  423bd8:	csinv	x8, xzr, x22, eq  // eq = none
  423bdc:	add	x8, x8, x24
  423be0:	add	x9, x19, x22
  423be4:	add	x9, x9, x8
  423be8:	add	x9, x9, #0x12
  423bec:	and	x9, x9, #0xfffffffffffffff0
  423bf0:	mov	x10, sp
  423bf4:	csinc	x23, x20, x0, eq  // eq = none
  423bf8:	sub	x24, x10, x9
  423bfc:	mov	sp, x24
  423c00:	ldur	x9, [x29, #-144]
  423c04:	ldr	x28, [x9]
  423c08:	cbz	x28, 423dd0 <vpath_search@@Base+0x36c>
  423c0c:	mov	w19, wzr
  423c10:	mov	w26, wzr
  423c14:	add	x25, x8, #0x1
  423c18:	sub	x8, x8, x24
  423c1c:	stur	x8, [x29, #-168]
  423c20:	mov	x0, x28
  423c24:	bl	4067d0 <strlen@plt>
  423c28:	mov	x27, x0
  423c2c:	mov	x0, x24
  423c30:	mov	x1, x28
  423c34:	mov	x2, x27
  423c38:	bl	406790 <memcpy@plt>
  423c3c:	add	x28, x24, x27
  423c40:	cbz	x22, 423c60 <vpath_search@@Base+0x1fc>
  423c44:	mov	w8, #0x2f                  	// #47
  423c48:	strb	w8, [x28], #1
  423c4c:	mov	x0, x28
  423c50:	mov	x1, x20
  423c54:	mov	x2, x22
  423c58:	bl	406790 <memcpy@plt>
  423c5c:	add	x28, x28, x22
  423c60:	cmp	x28, x24
  423c64:	b.eq	423c74 <vpath_search@@Base+0x210>  // b.none
  423c68:	ldurb	w8, [x28, #-1]
  423c6c:	cmp	w8, #0x2f
  423c70:	b.ne	423c7c <vpath_search@@Base+0x218>  // b.any
  423c74:	mov	x0, x28
  423c78:	b	423c88 <vpath_search@@Base+0x224>
  423c7c:	mov	x0, x28
  423c80:	mov	w8, #0x2f                  	// #47
  423c84:	strb	w8, [x0], #1
  423c88:	mov	x1, x23
  423c8c:	mov	x2, x25
  423c90:	bl	406790 <memcpy@plt>
  423c94:	mov	x0, x24
  423c98:	bl	40a798 <lookup_file@@Base>
  423c9c:	cbz	x0, 423ce0 <vpath_search@@Base+0x27c>
  423ca0:	ldur	w8, [x29, #-148]
  423ca4:	tbz	w8, #0, 423cb4 <vpath_search@@Base+0x250>
  423ca8:	mov	w26, #0x1                   	// #1
  423cac:	cbnz	x21, 423cc0 <vpath_search@@Base+0x25c>
  423cb0:	b	423ce0 <vpath_search@@Base+0x27c>
  423cb4:	ldrb	w8, [x0, #137]
  423cb8:	ubfx	w26, w8, #3, #1
  423cbc:	cbz	x21, 423ce0 <vpath_search@@Base+0x27c>
  423cc0:	cbz	w26, 423ce0 <vpath_search@@Base+0x27c>
  423cc4:	ldr	x8, [x0, #112]
  423cc8:	cmp	x8, #0x2
  423ccc:	b.eq	423cd8 <vpath_search@@Base+0x274>  // b.none
  423cd0:	cmn	x8, #0x1
  423cd4:	b.ne	423ce0 <vpath_search@@Base+0x27c>  // b.any
  423cd8:	str	x8, [x21]
  423cdc:	mov	x21, xzr
  423ce0:	cbnz	w26, 423d48 <vpath_search@@Base+0x2e4>
  423ce4:	mov	x0, x24
  423ce8:	mov	x1, x23
  423cec:	strb	wzr, [x28]
  423cf0:	bl	408fb8 <dir_file_exists_p@@Base>
  423cf4:	mov	w26, w0
  423cf8:	mov	w8, w0
  423cfc:	cbz	w26, 423d50 <vpath_search@@Base+0x2ec>
  423d00:	mov	w9, #0x2f                  	// #47
  423d04:	strb	w9, [x28]
  423d08:	cbz	w8, 423d84 <vpath_search@@Base+0x320>
  423d0c:	sub	x1, x29, #0x88
  423d10:	mov	x0, x24
  423d14:	bl	424ee0 <__libc_csu_fini@@Base+0x18>
  423d18:	mov	w27, w0
  423d1c:	cmn	w0, #0x1
  423d20:	b.ne	423d34 <vpath_search@@Base+0x2d0>  // b.any
  423d24:	bl	406f00 <__errno_location@plt>
  423d28:	ldr	w8, [x0]
  423d2c:	cmp	w8, #0x4
  423d30:	b.eq	423d0c <vpath_search@@Base+0x2a8>  // b.none
  423d34:	cbz	w27, 423d58 <vpath_search@@Base+0x2f4>
  423d38:	mov	w26, wzr
  423d3c:	mov	w8, #0x4                   	// #4
  423d40:	cbnz	w8, 423db4 <vpath_search@@Base+0x350>
  423d44:	b	423d84 <vpath_search@@Base+0x320>
  423d48:	mov	w8, wzr
  423d4c:	cbnz	w26, 423d00 <vpath_search@@Base+0x29c>
  423d50:	mov	w8, wzr
  423d54:	b	423db4 <vpath_search@@Base+0x350>
  423d58:	cbnz	x21, 423d68 <vpath_search@@Base+0x304>
  423d5c:	mov	w8, wzr
  423d60:	cbnz	w8, 423db4 <vpath_search@@Base+0x350>
  423d64:	b	423d84 <vpath_search@@Base+0x320>
  423d68:	ldp	x1, x2, [x29, #-48]
  423d6c:	mov	x0, x24
  423d70:	bl	40b950 <file_timestamp_cons@@Base>
  423d74:	mov	w8, wzr
  423d78:	str	x0, [x21]
  423d7c:	mov	x21, xzr
  423d80:	cbnz	w8, 423db4 <vpath_search@@Base+0x350>
  423d84:	ldur	x8, [x29, #-160]
  423d88:	cbz	x21, 423d90 <vpath_search@@Base+0x32c>
  423d8c:	str	xzr, [x21]
  423d90:	cbz	x8, 423d98 <vpath_search@@Base+0x334>
  423d94:	str	w19, [x8]
  423d98:	ldur	x8, [x29, #-168]
  423d9c:	mov	x0, x24
  423da0:	add	x8, x28, x8
  423da4:	add	x1, x8, #0x1
  423da8:	bl	421000 <strcache_add_len@@Base>
  423dac:	mov	w8, #0x1                   	// #1
  423db0:	stur	x0, [x29, #-176]
  423db4:	orr	w8, w8, #0x4
  423db8:	cmp	w8, #0x4
  423dbc:	b.ne	423dd8 <vpath_search@@Base+0x374>  // b.any
  423dc0:	ldur	x8, [x29, #-144]
  423dc4:	add	w19, w19, #0x1
  423dc8:	ldr	x28, [x8, w19, uxtw #3]
  423dcc:	cbnz	x28, 423c20 <vpath_search@@Base+0x1bc>
  423dd0:	mov	x0, xzr
  423dd4:	b	423ddc <vpath_search@@Base+0x378>
  423dd8:	ldur	x0, [x29, #-176]
  423ddc:	mov	sp, x29
  423de0:	ldp	x20, x19, [sp, #80]
  423de4:	ldp	x22, x21, [sp, #64]
  423de8:	ldp	x24, x23, [sp, #48]
  423dec:	ldp	x26, x25, [sp, #32]
  423df0:	ldp	x28, x27, [sp, #16]
  423df4:	ldp	x29, x30, [sp], #96
  423df8:	ret

0000000000423dfc <print_vpath_data_base@@Base>:
  423dfc:	stp	x29, x30, [sp, #-96]!
  423e00:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423e04:	add	x1, x1, #0xed8
  423e08:	mov	w2, #0x5                   	// #5
  423e0c:	mov	x0, xzr
  423e10:	str	x27, [sp, #16]
  423e14:	stp	x26, x25, [sp, #32]
  423e18:	stp	x24, x23, [sp, #48]
  423e1c:	stp	x22, x21, [sp, #64]
  423e20:	stp	x20, x19, [sp, #80]
  423e24:	mov	x29, sp
  423e28:	bl	406e50 <dcgettext@plt>
  423e2c:	bl	406c40 <puts@plt>
  423e30:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  423e34:	ldr	x23, [x22, #4008]
  423e38:	cbz	x23, 423eb4 <print_vpath_data_base@@Base+0xb8>
  423e3c:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423e40:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423e44:	mov	w19, wzr
  423e48:	add	x20, x20, #0xeef
  423e4c:	mov	w24, #0x3a                  	// #58
  423e50:	mov	w25, #0xa                   	// #10
  423e54:	add	x21, x21, #0xef9
  423e58:	b	423e64 <print_vpath_data_base@@Base+0x68>
  423e5c:	ldr	x23, [x23]
  423e60:	cbz	x23, 423eb8 <print_vpath_data_base@@Base+0xbc>
  423e64:	ldr	x1, [x23, #8]
  423e68:	mov	x0, x20
  423e6c:	add	w19, w19, #0x1
  423e70:	bl	406ef0 <printf@plt>
  423e74:	ldr	x8, [x23, #32]
  423e78:	ldr	x1, [x8]
  423e7c:	cbz	x1, 423e5c <print_vpath_data_base@@Base+0x60>
  423e80:	mov	w26, #0x1                   	// #1
  423e84:	mov	w9, w26
  423e88:	lsl	x27, x9, #3
  423e8c:	ldr	x8, [x8, x27]
  423e90:	mov	x0, x21
  423e94:	cmp	x8, #0x0
  423e98:	csel	w2, w25, w24, eq  // eq = none
  423e9c:	bl	406ef0 <printf@plt>
  423ea0:	ldr	x8, [x23, #32]
  423ea4:	add	w26, w26, #0x1
  423ea8:	ldr	x1, [x8, x27]
  423eac:	cbnz	x1, 423e84 <print_vpath_data_base@@Base+0x88>
  423eb0:	b	423e5c <print_vpath_data_base@@Base+0x60>
  423eb4:	mov	w19, wzr
  423eb8:	ldr	x8, [x22, #4008]
  423ebc:	cbz	x8, 423ee0 <print_vpath_data_base@@Base+0xe4>
  423ec0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423ec4:	add	x1, x1, #0xf19
  423ec8:	mov	w2, #0x5                   	// #5
  423ecc:	mov	x0, xzr
  423ed0:	bl	406e50 <dcgettext@plt>
  423ed4:	mov	w1, w19
  423ed8:	bl	406ef0 <printf@plt>
  423edc:	b	423ef8 <print_vpath_data_base@@Base+0xfc>
  423ee0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423ee4:	add	x1, x1, #0xefe
  423ee8:	mov	w2, #0x5                   	// #5
  423eec:	mov	x0, xzr
  423ef0:	bl	406e50 <dcgettext@plt>
  423ef4:	bl	406c40 <puts@plt>
  423ef8:	adrp	x8, 43f000 <stdio_traced@@Base+0x1a38>
  423efc:	ldr	x8, [x8, #4016]
  423f00:	cbz	x8, 423f70 <print_vpath_data_base@@Base+0x174>
  423f04:	ldr	x20, [x8, #32]
  423f08:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423f0c:	add	x1, x1, #0xf64
  423f10:	mov	w2, #0x5                   	// #5
  423f14:	mov	x0, xzr
  423f18:	bl	406e50 <dcgettext@plt>
  423f1c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  423f20:	ldr	x1, [x8, #2512]
  423f24:	bl	4067e0 <fputs@plt>
  423f28:	ldr	x1, [x20]
  423f2c:	cbz	x1, 423f88 <print_vpath_data_base@@Base+0x18c>
  423f30:	adrp	x19, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423f34:	mov	w21, #0x1                   	// #1
  423f38:	mov	w22, #0x3a                  	// #58
  423f3c:	mov	w23, #0xa                   	// #10
  423f40:	add	x19, x19, #0xef9
  423f44:	mov	w8, w21
  423f48:	lsl	x24, x8, #3
  423f4c:	ldr	x8, [x20, x24]
  423f50:	mov	x0, x19
  423f54:	cmp	x8, #0x0
  423f58:	csel	w2, w23, w22, eq  // eq = none
  423f5c:	bl	406ef0 <printf@plt>
  423f60:	ldr	x1, [x20, x24]
  423f64:	add	w21, w21, #0x1
  423f68:	cbnz	x1, 423f44 <print_vpath_data_base@@Base+0x148>
  423f6c:	b	423f88 <print_vpath_data_base@@Base+0x18c>
  423f70:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  423f74:	add	x1, x1, #0xf36
  423f78:	mov	w2, #0x5                   	// #5
  423f7c:	mov	x0, xzr
  423f80:	bl	406e50 <dcgettext@plt>
  423f84:	bl	406c40 <puts@plt>
  423f88:	ldp	x20, x19, [sp, #80]
  423f8c:	ldp	x22, x21, [sp, #64]
  423f90:	ldp	x24, x23, [sp, #48]
  423f94:	ldp	x26, x25, [sp, #32]
  423f98:	ldr	x27, [sp, #16]
  423f9c:	ldp	x29, x30, [sp], #96
  423fa0:	ret

0000000000423fa4 <jobserver_setup@@Base>:
  423fa4:	stp	x29, x30, [sp, #-48]!
  423fa8:	stp	x20, x19, [sp, #32]
  423fac:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  423fb0:	mov	w19, w0
  423fb4:	add	x20, x20, #0x9a0
  423fb8:	stp	x22, x21, [sp, #16]
  423fbc:	mov	x29, sp
  423fc0:	mov	x0, x20
  423fc4:	bl	406890 <pipe@plt>
  423fc8:	mov	w21, w0
  423fcc:	cmn	w0, #0x1
  423fd0:	b.ne	423fe4 <jobserver_setup@@Base+0x40>  // b.any
  423fd4:	bl	406f00 <__errno_location@plt>
  423fd8:	ldr	w8, [x0]
  423fdc:	cmp	w8, #0x4
  423fe0:	b.eq	423fc0 <jobserver_setup@@Base+0x1c>  // b.none
  423fe4:	tbnz	w21, #31, 42408c <jobserver_setup@@Base+0xe8>
  423fe8:	ldr	w0, [x20]
  423fec:	bl	424098 <fd_noinherit@@Base>
  423ff0:	ldr	w0, [x20, #4]
  423ff4:	bl	424098 <fd_noinherit@@Base>
  423ff8:	cbz	w19, 424068 <jobserver_setup@@Base+0xc4>
  423ffc:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  424000:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  424004:	add	x20, x20, #0x9a8
  424008:	b	424010 <jobserver_setup@@Base+0x6c>
  42400c:	cbz	w19, 424068 <jobserver_setup@@Base+0xc4>
  424010:	sub	w19, w19, #0x1
  424014:	ldr	w0, [x22, #2468]
  424018:	mov	w2, #0x1                   	// #1
  42401c:	mov	x1, x20
  424020:	bl	406bf0 <write@plt>
  424024:	mov	x21, x0
  424028:	cmp	w21, #0x1
  42402c:	b.eq	42400c <jobserver_setup@@Base+0x68>  // b.none
  424030:	cmn	w21, #0x1
  424034:	b.ne	424050 <jobserver_setup@@Base+0xac>  // b.any
  424038:	bl	406f00 <__errno_location@plt>
  42403c:	ldr	w8, [x0]
  424040:	cmp	w8, #0x4
  424044:	b.eq	424014 <jobserver_setup@@Base+0x70>  // b.none
  424048:	cmp	w21, #0x1
  42404c:	b.eq	42400c <jobserver_setup@@Base+0x68>  // b.none
  424050:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  424054:	add	x1, x1, #0xfa5
  424058:	mov	w2, #0x5                   	// #5
  42405c:	mov	x0, xzr
  424060:	bl	406e50 <dcgettext@plt>
  424064:	bl	4184d0 <pfatal_with_name@@Base>
  424068:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  42406c:	ldr	w0, [x8, #2464]
  424070:	mov	w1, wzr
  424074:	bl	42410c <fd_noinherit@@Base+0x74>
  424078:	ldp	x20, x19, [sp, #32]
  42407c:	ldp	x22, x21, [sp, #16]
  424080:	mov	w0, #0x1                   	// #1
  424084:	ldp	x29, x30, [sp], #48
  424088:	ret
  42408c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  424090:	add	x1, x1, #0xf92
  424094:	b	424058 <jobserver_setup@@Base+0xb4>

0000000000424098 <fd_noinherit@@Base>:
  424098:	stp	x29, x30, [sp, #-32]!
  42409c:	stp	x20, x19, [sp, #16]
  4240a0:	mov	w19, w0
  4240a4:	mov	x29, sp
  4240a8:	mov	w1, #0x1                   	// #1
  4240ac:	mov	w0, w19
  4240b0:	bl	424a0c <rpl_fcntl@@Base>
  4240b4:	mov	w20, w0
  4240b8:	cmn	w0, #0x1
  4240bc:	b.ne	4240d0 <fd_noinherit@@Base+0x38>  // b.any
  4240c0:	bl	406f00 <__errno_location@plt>
  4240c4:	ldr	w8, [x0]
  4240c8:	cmp	w8, #0x4
  4240cc:	b.eq	4240a8 <fd_noinherit@@Base+0x10>  // b.none
  4240d0:	tbnz	w20, #31, 424100 <fd_noinherit@@Base+0x68>
  4240d4:	orr	w20, w20, #0x1
  4240d8:	mov	w1, #0x2                   	// #2
  4240dc:	mov	w0, w19
  4240e0:	mov	w2, w20
  4240e4:	bl	424a0c <rpl_fcntl@@Base>
  4240e8:	cmn	w0, #0x1
  4240ec:	b.ne	424100 <fd_noinherit@@Base+0x68>  // b.any
  4240f0:	bl	406f00 <__errno_location@plt>
  4240f4:	ldr	w8, [x0]
  4240f8:	cmp	w8, #0x4
  4240fc:	b.eq	4240d8 <fd_noinherit@@Base+0x40>  // b.none
  424100:	ldp	x20, x19, [sp, #16]
  424104:	ldp	x29, x30, [sp], #32
  424108:	ret
  42410c:	stp	x29, x30, [sp, #-48]!
  424110:	stp	x20, x19, [sp, #32]
  424114:	mov	w20, w1
  424118:	mov	w19, w0
  42411c:	str	x21, [sp, #16]
  424120:	mov	x29, sp
  424124:	mov	w1, #0x3                   	// #3
  424128:	mov	w0, w19
  42412c:	bl	424a0c <rpl_fcntl@@Base>
  424130:	mov	w21, w0
  424134:	cmn	w0, #0x1
  424138:	b.ne	42414c <fd_noinherit@@Base+0xb4>  // b.any
  42413c:	bl	406f00 <__errno_location@plt>
  424140:	ldr	w8, [x0]
  424144:	cmp	w8, #0x4
  424148:	b.eq	424124 <fd_noinherit@@Base+0x8c>  // b.none
  42414c:	tbnz	w21, #31, 424190 <fd_noinherit@@Base+0xf8>
  424150:	and	w8, w21, #0xfffff7ff
  424154:	orr	w9, w21, #0x800
  424158:	cmp	w20, #0x0
  42415c:	csel	w20, w9, w8, eq  // eq = none
  424160:	mov	w1, #0x4                   	// #4
  424164:	mov	w0, w19
  424168:	mov	w2, w20
  42416c:	bl	424a0c <rpl_fcntl@@Base>
  424170:	mov	w21, w0
  424174:	cmn	w0, #0x1
  424178:	b.ne	42418c <fd_noinherit@@Base+0xf4>  // b.any
  42417c:	bl	406f00 <__errno_location@plt>
  424180:	ldr	w8, [x0]
  424184:	cmp	w8, #0x4
  424188:	b.eq	424160 <fd_noinherit@@Base+0xc8>  // b.none
  42418c:	tbnz	w21, #31, 4241a0 <fd_noinherit@@Base+0x108>
  424190:	ldp	x20, x19, [sp, #32]
  424194:	ldr	x21, [sp, #16]
  424198:	ldp	x29, x30, [sp], #48
  42419c:	ret
  4241a0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x60e0>
  4241a4:	add	x0, x0, #0x71
  4241a8:	bl	4184d0 <pfatal_with_name@@Base>

00000000004241ac <jobserver_parse_auth@@Base>:
  4241ac:	stp	x29, x30, [sp, #-32]!
  4241b0:	stp	x20, x19, [sp, #16]
  4241b4:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  4241b8:	add	x19, x19, #0x9a0
  4241bc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4241c0:	add	x3, x19, #0x4
  4241c4:	add	x1, x1, #0xfb9
  4241c8:	mov	x2, x19
  4241cc:	mov	x29, sp
  4241d0:	mov	x20, x0
  4241d4:	bl	406e70 <__isoc99_sscanf@plt>
  4241d8:	cmp	w0, #0x2
  4241dc:	b.ne	424280 <jobserver_parse_auth@@Base+0xd4>  // b.any
  4241e0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4241e4:	ldrb	w8, [x8, #3236]
  4241e8:	tbz	w8, #2, 424214 <jobserver_parse_auth@@Base+0x68>
  4241ec:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4241f0:	add	x1, x1, #0xff4
  4241f4:	mov	w2, #0x5                   	// #5
  4241f8:	mov	x0, xzr
  4241fc:	bl	406e50 <dcgettext@plt>
  424200:	ldp	w1, w2, [x19]
  424204:	bl	406ef0 <printf@plt>
  424208:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  42420c:	ldr	x0, [x8, #2512]
  424210:	bl	406d80 <fflush@plt>
  424214:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  424218:	ldr	w0, [x20, #2464]
  42421c:	mov	w1, #0x1                   	// #1
  424220:	bl	424a0c <rpl_fcntl@@Base>
  424224:	cmn	w0, #0x1
  424228:	b.eq	424258 <jobserver_parse_auth@@Base+0xac>  // b.none
  42422c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  424230:	ldr	w0, [x8, #2468]
  424234:	mov	w1, #0x1                   	// #1
  424238:	bl	424a0c <rpl_fcntl@@Base>
  42423c:	cmn	w0, #0x1
  424240:	b.eq	424258 <jobserver_parse_auth@@Base+0xac>  // b.none
  424244:	ldr	w0, [x20, #2464]
  424248:	mov	w1, wzr
  42424c:	bl	42410c <fd_noinherit@@Base+0x74>
  424250:	mov	w0, #0x1                   	// #1
  424254:	b	424274 <jobserver_parse_auth@@Base+0xc8>
  424258:	bl	406f00 <__errno_location@plt>
  42425c:	ldr	w8, [x0]
  424260:	cmp	w8, #0x9
  424264:	b.ne	4242b4 <jobserver_parse_auth@@Base+0x108>  // b.any
  424268:	mov	w0, wzr
  42426c:	mov	x8, #0xffffffffffffffff    	// #-1
  424270:	str	x8, [x19]
  424274:	ldp	x20, x19, [sp, #16]
  424278:	ldp	x29, x30, [sp], #32
  42427c:	ret
  424280:	mov	x0, x20
  424284:	bl	4067d0 <strlen@plt>
  424288:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  42428c:	mov	x19, x0
  424290:	add	x1, x1, #0xfbf
  424294:	mov	w2, #0x5                   	// #5
  424298:	mov	x0, xzr
  42429c:	bl	406e50 <dcgettext@plt>
  4242a0:	mov	x2, x0
  4242a4:	mov	x0, xzr
  4242a8:	mov	x1, x19
  4242ac:	mov	x3, x20
  4242b0:	bl	4190fc <fatal@@Base>
  4242b4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x60e0>
  4242b8:	add	x1, x1, #0x12
  4242bc:	mov	w2, #0x5                   	// #5
  4242c0:	mov	x0, xzr
  4242c4:	bl	406e50 <dcgettext@plt>
  4242c8:	bl	4184d0 <pfatal_with_name@@Base>

00000000004242cc <jobserver_get_auth@@Base>:
  4242cc:	stp	x29, x30, [sp, #-32]!
  4242d0:	mov	w0, #0x2a                  	// #42
  4242d4:	str	x19, [sp, #16]
  4242d8:	mov	x29, sp
  4242dc:	bl	418070 <xmalloc@@Base>
  4242e0:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4242e4:	add	x8, x8, #0x9a0
  4242e8:	ldp	w2, w3, [x8]
  4242ec:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x50e0>
  4242f0:	add	x1, x1, #0xfb9
  4242f4:	mov	x19, x0
  4242f8:	bl	406870 <sprintf@plt>
  4242fc:	mov	x0, x19
  424300:	ldr	x19, [sp, #16]
  424304:	ldp	x29, x30, [sp], #32
  424308:	ret

000000000042430c <jobserver_enabled@@Base>:
  42430c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  424310:	ldr	w8, [x8, #2464]
  424314:	mvn	w8, w8
  424318:	lsr	w0, w8, #31
  42431c:	ret

0000000000424320 <jobserver_clear@@Base>:
  424320:	stp	x29, x30, [sp, #-16]!
  424324:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  424328:	ldr	w0, [x8, #2464]
  42432c:	mov	x29, sp
  424330:	tbnz	w0, #31, 424338 <jobserver_clear@@Base+0x18>
  424334:	bl	406ba0 <close@plt>
  424338:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  42433c:	ldr	w0, [x8, #2468]
  424340:	tbnz	w0, #31, 424348 <jobserver_clear@@Base+0x28>
  424344:	bl	406ba0 <close@plt>
  424348:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  42434c:	add	x8, x8, #0x9a0
  424350:	mov	x9, #0xffffffffffffffff    	// #-1
  424354:	str	x9, [x8]
  424358:	ldp	x29, x30, [sp], #16
  42435c:	ret

0000000000424360 <jobserver_release@@Base>:
  424360:	stp	x29, x30, [sp, #-48]!
  424364:	stp	x20, x19, [sp, #32]
  424368:	adrp	x20, 43c000 <memcpy@GLIBC_2.17>
  42436c:	stp	x22, x21, [sp, #16]
  424370:	mov	w19, w0
  424374:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  424378:	add	x20, x20, #0x9a8
  42437c:	mov	x29, sp
  424380:	ldr	w0, [x22, #2468]
  424384:	mov	w2, #0x1                   	// #1
  424388:	mov	x1, x20
  42438c:	bl	406bf0 <write@plt>
  424390:	mov	x21, x0
  424394:	cmn	w21, #0x1
  424398:	b.ne	4243ac <jobserver_release@@Base+0x4c>  // b.any
  42439c:	bl	406f00 <__errno_location@plt>
  4243a0:	ldr	w8, [x0]
  4243a4:	cmp	w8, #0x4
  4243a8:	b.eq	424380 <jobserver_release@@Base+0x20>  // b.none
  4243ac:	cmp	w21, #0x1
  4243b0:	b.eq	4243cc <jobserver_release@@Base+0x6c>  // b.none
  4243b4:	cbnz	w19, 4243dc <jobserver_release@@Base+0x7c>
  4243b8:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x60e0>
  4243bc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  4243c0:	add	x0, x0, #0x35
  4243c4:	add	x1, x1, #0x989
  4243c8:	bl	41928c <perror_with_name@@Base>
  4243cc:	ldp	x20, x19, [sp, #32]
  4243d0:	ldp	x22, x21, [sp, #16]
  4243d4:	ldp	x29, x30, [sp], #48
  4243d8:	ret
  4243dc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x60e0>
  4243e0:	add	x1, x1, #0x25
  4243e4:	mov	w2, #0x5                   	// #5
  4243e8:	mov	x0, xzr
  4243ec:	bl	406e50 <dcgettext@plt>
  4243f0:	bl	4184d0 <pfatal_with_name@@Base>

00000000004243f4 <jobserver_acquire_all@@Base>:
  4243f4:	sub	sp, sp, #0x40
  4243f8:	stp	x20, x19, [sp, #48]
  4243fc:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  424400:	add	x19, x19, #0x9a0
  424404:	ldr	w0, [x19]
  424408:	mov	w1, #0x1                   	// #1
  42440c:	stp	x29, x30, [sp, #16]
  424410:	stp	x22, x21, [sp, #32]
  424414:	add	x29, sp, #0x10
  424418:	bl	42410c <fd_noinherit@@Base+0x74>
  42441c:	ldr	w0, [x19, #4]
  424420:	bl	406ba0 <close@plt>
  424424:	mov	w21, wzr
  424428:	mov	w8, #0xffffffff            	// #-1
  42442c:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  424430:	str	w8, [x19, #4]
  424434:	b	424444 <jobserver_acquire_all@@Base+0x50>
  424438:	add	w21, w21, #0x1
  42443c:	mov	w8, #0x1                   	// #1
  424440:	tbz	w8, #0, 424484 <jobserver_acquire_all@@Base+0x90>
  424444:	ldr	w0, [x22, #2464]
  424448:	sub	x1, x29, #0x4
  42444c:	mov	w2, #0x1                   	// #1
  424450:	bl	406de0 <read@plt>
  424454:	mov	x20, x0
  424458:	cmn	w20, #0x1
  42445c:	b.ne	424470 <jobserver_acquire_all@@Base+0x7c>  // b.any
  424460:	bl	406f00 <__errno_location@plt>
  424464:	ldr	w8, [x0]
  424468:	cmp	w8, #0x4
  42446c:	b.eq	424444 <jobserver_acquire_all@@Base+0x50>  // b.none
  424470:	cmp	w20, #0x1
  424474:	b.eq	424438 <jobserver_acquire_all@@Base+0x44>  // b.none
  424478:	mov	w8, wzr
  42447c:	mov	w19, w21
  424480:	tbnz	w8, #0, 424444 <jobserver_acquire_all@@Base+0x50>
  424484:	mov	w0, w19
  424488:	ldp	x20, x19, [sp, #48]
  42448c:	ldp	x22, x21, [sp, #32]
  424490:	ldp	x29, x30, [sp, #16]
  424494:	add	sp, sp, #0x40
  424498:	ret

000000000042449c <jobserver_pre_child@@Base>:
  42449c:	stp	x29, x30, [sp, #-16]!
  4244a0:	mov	x29, sp
  4244a4:	cbz	w0, 4244c4 <jobserver_pre_child@@Base+0x28>
  4244a8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4244ac:	ldr	w0, [x8, #2464]
  4244b0:	tbnz	w0, #31, 4244c4 <jobserver_pre_child@@Base+0x28>
  4244b4:	bl	4244cc <fd_inherit@@Base>
  4244b8:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  4244bc:	ldr	w0, [x8, #2468]
  4244c0:	bl	4244cc <fd_inherit@@Base>
  4244c4:	ldp	x29, x30, [sp], #16
  4244c8:	ret

00000000004244cc <fd_inherit@@Base>:
  4244cc:	stp	x29, x30, [sp, #-32]!
  4244d0:	stp	x20, x19, [sp, #16]
  4244d4:	mov	w19, w0
  4244d8:	mov	x29, sp
  4244dc:	mov	w1, #0x1                   	// #1
  4244e0:	mov	w0, w19
  4244e4:	bl	424a0c <rpl_fcntl@@Base>
  4244e8:	mov	w20, w0
  4244ec:	cmn	w0, #0x1
  4244f0:	b.ne	424504 <fd_inherit@@Base+0x38>  // b.any
  4244f4:	bl	406f00 <__errno_location@plt>
  4244f8:	ldr	w8, [x0]
  4244fc:	cmp	w8, #0x4
  424500:	b.eq	4244dc <fd_inherit@@Base+0x10>  // b.none
  424504:	tbnz	w20, #31, 424534 <fd_inherit@@Base+0x68>
  424508:	and	w20, w20, #0xfffffffe
  42450c:	mov	w1, #0x2                   	// #2
  424510:	mov	w0, w19
  424514:	mov	w2, w20
  424518:	bl	424a0c <rpl_fcntl@@Base>
  42451c:	cmn	w0, #0x1
  424520:	b.ne	424534 <fd_inherit@@Base+0x68>  // b.any
  424524:	bl	406f00 <__errno_location@plt>
  424528:	ldr	w8, [x0]
  42452c:	cmp	w8, #0x4
  424530:	b.eq	42450c <fd_inherit@@Base+0x40>  // b.none
  424534:	ldp	x20, x19, [sp, #16]
  424538:	ldp	x29, x30, [sp], #32
  42453c:	ret

0000000000424540 <jobserver_post_child@@Base>:
  424540:	stp	x29, x30, [sp, #-16]!
  424544:	mov	x29, sp
  424548:	cbz	w0, 424568 <jobserver_post_child@@Base+0x28>
  42454c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  424550:	ldr	w0, [x8, #2464]
  424554:	tbnz	w0, #31, 424568 <jobserver_post_child@@Base+0x28>
  424558:	bl	424098 <fd_noinherit@@Base>
  42455c:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  424560:	ldr	w0, [x8, #2468]
  424564:	bl	424098 <fd_noinherit@@Base>
  424568:	ldp	x29, x30, [sp], #16
  42456c:	ret

0000000000424570 <jobserver_signal@@Base>:
  424570:	ret

0000000000424574 <jobserver_pre_acquire@@Base>:
  424574:	ret

0000000000424578 <jobserver_acquire@@Base>:
  424578:	sub	sp, sp, #0x170
  42457c:	stp	x20, x19, [sp, #352]
  424580:	mov	w19, w0
  424584:	add	x0, sp, #0x90
  424588:	stp	x29, x30, [sp, #288]
  42458c:	str	x28, [sp, #304]
  424590:	stp	x24, x23, [sp, #320]
  424594:	stp	x22, x21, [sp, #336]
  424598:	add	x29, sp, #0x120
  42459c:	bl	406a50 <sigemptyset@plt>
  4245a0:	cbz	w19, 4245b8 <jobserver_acquire@@Base+0x40>
  4245a4:	sub	x8, x29, #0x10
  4245a8:	mov	w9, #0x1                   	// #1
  4245ac:	sub	x19, x29, #0x10
  4245b0:	stp	x9, xzr, [x8]
  4245b4:	b	4245bc <jobserver_acquire@@Base+0x44>
  4245b8:	mov	x19, xzr
  4245bc:	adrp	x22, 43c000 <memcpy@GLIBC_2.17>
  4245c0:	mov	w23, #0x1                   	// #1
  4245c4:	add	x24, sp, #0x10
  4245c8:	b	4245e8 <jobserver_acquire@@Base+0x70>
  4245cc:	bl	406f00 <__errno_location@plt>
  4245d0:	ldr	w8, [x0]
  4245d4:	cmp	w8, #0x4
  4245d8:	b.ne	4246c8 <jobserver_acquire@@Base+0x150>  // b.any
  4245dc:	mov	w20, wzr
  4245e0:	mov	w8, wzr
  4245e4:	tbz	w8, #0, 4246a8 <jobserver_acquire@@Base+0x130>
  4245e8:	ldr	w8, [x22, #2464]
  4245ec:	movi	v0.2d, #0x0
  4245f0:	stp	q0, q0, [sp, #16]
  4245f4:	stp	q0, q0, [sp, #48]
  4245f8:	add	w9, w8, #0x3f
  4245fc:	cmp	w8, #0x0
  424600:	csel	w9, w9, w8, lt  // lt = tstop
  424604:	asr	w10, w9, #6
  424608:	stp	q0, q0, [sp, #80]
  42460c:	stp	q0, q0, [sp, #112]
  424610:	sbfiz	x10, x10, #3, #32
  424614:	ldr	x11, [x24, x10]
  424618:	and	w9, w9, #0xffffffc0
  42461c:	sub	w9, w8, w9
  424620:	lsl	x9, x23, x9
  424624:	orr	x9, x9, x11
  424628:	add	w0, w8, #0x1
  42462c:	add	x1, sp, #0x10
  424630:	add	x5, sp, #0x90
  424634:	mov	x2, xzr
  424638:	mov	x3, xzr
  42463c:	mov	x4, x19
  424640:	str	x9, [x24, x10]
  424644:	bl	406b10 <pselect@plt>
  424648:	tbnz	w0, #31, 4245cc <jobserver_acquire@@Base+0x54>
  42464c:	cbz	w0, 4245dc <jobserver_acquire@@Base+0x64>
  424650:	ldr	w0, [x22, #2464]
  424654:	add	x1, sp, #0xc
  424658:	mov	w2, #0x1                   	// #1
  42465c:	bl	406de0 <read@plt>
  424660:	mov	x21, x0
  424664:	cmn	w21, #0x1
  424668:	b.ne	42467c <jobserver_acquire@@Base+0x104>  // b.any
  42466c:	bl	406f00 <__errno_location@plt>
  424670:	ldr	w8, [x0]
  424674:	cmp	w8, #0x4
  424678:	b.eq	424650 <jobserver_acquire@@Base+0xd8>  // b.none
  42467c:	tbnz	w21, #31, 424690 <jobserver_acquire@@Base+0x118>
  424680:	cmp	w21, #0x0
  424684:	mov	w8, wzr
  424688:	cset	w20, ne  // ne = any
  42468c:	b	4245e4 <jobserver_acquire@@Base+0x6c>
  424690:	bl	406f00 <__errno_location@plt>
  424694:	ldr	w8, [x0]
  424698:	cmp	w8, #0xb
  42469c:	b.ne	424700 <jobserver_acquire@@Base+0x188>  // b.any
  4246a0:	mov	w8, #0x1                   	// #1
  4246a4:	b	4245e4 <jobserver_acquire@@Base+0x6c>
  4246a8:	mov	w0, w20
  4246ac:	ldp	x20, x19, [sp, #352]
  4246b0:	ldp	x22, x21, [sp, #336]
  4246b4:	ldp	x24, x23, [sp, #320]
  4246b8:	ldr	x28, [sp, #304]
  4246bc:	ldp	x29, x30, [sp, #288]
  4246c0:	add	sp, sp, #0x170
  4246c4:	ret
  4246c8:	cmp	w8, #0x9
  4246cc:	b.ne	4246f4 <jobserver_acquire@@Base+0x17c>  // b.any
  4246d0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x60e0>
  4246d4:	add	x1, x1, #0x3b
  4246d8:	mov	w2, #0x5                   	// #5
  4246dc:	mov	x0, xzr
  4246e0:	bl	406e50 <dcgettext@plt>
  4246e4:	mov	x2, x0
  4246e8:	mov	x0, xzr
  4246ec:	mov	x1, xzr
  4246f0:	bl	4190fc <fatal@@Base>
  4246f4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x60e0>
  4246f8:	add	x1, x1, #0x50
  4246fc:	b	424708 <jobserver_acquire@@Base+0x190>
  424700:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x60e0>
  424704:	add	x1, x1, #0x62
  424708:	mov	w2, #0x5                   	// #5
  42470c:	mov	x0, xzr
  424710:	bl	406e50 <dcgettext@plt>
  424714:	bl	4184d0 <pfatal_with_name@@Base>

0000000000424718 <get_bad_stdin@@Base>:
  424718:	stp	x29, x30, [sp, #-32]!
  42471c:	str	x19, [sp, #16]
  424720:	adrp	x19, 43c000 <memcpy@GLIBC_2.17>
  424724:	ldr	w8, [x19, #2476]
  424728:	mov	x29, sp
  42472c:	cmn	w8, #0x1
  424730:	b.ne	424754 <get_bad_stdin@@Base+0x3c>  // b.any
  424734:	add	x0, x29, #0x18
  424738:	bl	406890 <pipe@plt>
  42473c:	cbnz	w0, 424754 <get_bad_stdin@@Base+0x3c>
  424740:	ldr	w0, [x29, #28]
  424744:	bl	406ba0 <close@plt>
  424748:	ldr	w0, [x29, #24]
  42474c:	str	w0, [x19, #2476]
  424750:	bl	424098 <fd_noinherit@@Base>
  424754:	ldr	w0, [x19, #2476]
  424758:	ldr	x19, [sp, #16]
  42475c:	ldp	x29, x30, [sp], #32
  424760:	ret

0000000000424764 <remote_setup@@Base>:
  424764:	ret

0000000000424768 <remote_cleanup@@Base>:
  424768:	ret

000000000042476c <start_remote_job_p@@Base>:
  42476c:	mov	w0, wzr
  424770:	ret

0000000000424774 <start_remote_job@@Base>:
  424774:	mov	w0, #0xffffffff            	// #-1
  424778:	ret

000000000042477c <remote_status@@Base>:
  42477c:	stp	x29, x30, [sp, #-16]!
  424780:	mov	x29, sp
  424784:	bl	406f00 <__errno_location@plt>
  424788:	mov	x8, x0
  42478c:	mov	w9, #0xa                   	// #10
  424790:	mov	w0, #0xffffffff            	// #-1
  424794:	str	w9, [x8]
  424798:	ldp	x29, x30, [sp], #16
  42479c:	ret

00000000004247a0 <block_remote_children@@Base>:
  4247a0:	ret

00000000004247a4 <unblock_remote_children@@Base>:
  4247a4:	ret

00000000004247a8 <remote_kill@@Base>:
  4247a8:	mov	w0, #0xffffffff            	// #-1
  4247ac:	ret

00000000004247b0 <find_in_given_path@@Base>:
  4247b0:	sub	sp, sp, #0x70
  4247b4:	stp	x22, x21, [sp, #80]
  4247b8:	stp	x20, x19, [sp, #96]
  4247bc:	mov	x21, x1
  4247c0:	mov	x19, x0
  4247c4:	mov	x8, x0
  4247c8:	stp	x29, x30, [sp, #16]
  4247cc:	stp	x28, x27, [sp, #32]
  4247d0:	stp	x26, x25, [sp, #48]
  4247d4:	stp	x24, x23, [sp, #64]
  4247d8:	add	x29, sp, #0x10
  4247dc:	ldrb	w9, [x8]
  4247e0:	cbz	w9, 4247f8 <find_in_given_path@@Base+0x48>
  4247e4:	cmp	w9, #0x2f
  4247e8:	b.eq	424804 <find_in_given_path@@Base+0x54>  // b.none
  4247ec:	add	x8, x8, #0x1
  4247f0:	ldrb	w9, [x8]
  4247f4:	cbnz	w9, 4247e4 <find_in_given_path@@Base+0x34>
  4247f8:	mov	w8, #0x1                   	// #1
  4247fc:	cbz	w8, 42487c <find_in_given_path@@Base+0xcc>
  424800:	b	42489c <find_in_given_path@@Base+0xec>
  424804:	tbz	w2, #0, 424818 <find_in_given_path@@Base+0x68>
  424808:	mov	w8, wzr
  42480c:	mov	x22, x19
  424810:	cbz	w8, 42487c <find_in_given_path@@Base+0xcc>
  424814:	b	42489c <find_in_given_path@@Base+0xec>
  424818:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x20e0>
  42481c:	add	x0, x0, #0x989
  424820:	mov	x1, x19
  424824:	mov	x2, x0
  424828:	bl	4249f0 <xconcatenated_filename@@Base>
  42482c:	mov	w1, #0x1                   	// #1
  424830:	mov	x22, x0
  424834:	bl	406940 <eaccess@plt>
  424838:	cbz	w0, 42484c <find_in_given_path@@Base+0x9c>
  42483c:	bl	406f00 <__errno_location@plt>
  424840:	ldr	w20, [x0]
  424844:	mov	w23, #0x1                   	// #1
  424848:	b	424884 <find_in_given_path@@Base+0xd4>
  42484c:	mov	x0, x22
  424850:	mov	x1, x19
  424854:	bl	406cb0 <strcmp@plt>
  424858:	mov	w23, wzr
  42485c:	mov	w20, #0x2                   	// #2
  424860:	cbz	w0, 424884 <find_in_given_path@@Base+0xd4>
  424864:	cbz	w23, 424894 <find_in_given_path@@Base+0xe4>
  424868:	bl	406f00 <__errno_location@plt>
  42486c:	mov	w8, wzr
  424870:	mov	x22, xzr
  424874:	str	w20, [x0]
  424878:	cbnz	w8, 42489c <find_in_given_path@@Base+0xec>
  42487c:	mov	x23, x22
  424880:	b	4249cc <find_in_given_path@@Base+0x21c>
  424884:	mov	x0, x22
  424888:	bl	406cf0 <free@plt>
  42488c:	mov	x22, x19
  424890:	cbnz	w23, 424868 <find_in_given_path@@Base+0xb8>
  424894:	mov	w8, wzr
  424898:	cbz	w8, 42487c <find_in_given_path@@Base+0xcc>
  42489c:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x20e0>
  4248a0:	add	x20, x20, #0x989
  4248a4:	cmp	x21, #0x0
  4248a8:	csel	x0, x20, x21, eq  // eq = none
  4248ac:	bl	4180bc <xstrdup@@Base>
  4248b0:	adrp	x25, 428000 <_IO_stdin_used@@Base+0x30e0>
  4248b4:	mov	w24, #0x2                   	// #2
  4248b8:	add	x25, x25, #0x944
  4248bc:	mov	x27, x0
  4248c0:	str	x0, [sp, #8]
  4248c4:	mov	x28, xzr
  4248c8:	ldrb	w26, [x27, x28]
  4248cc:	cbz	w26, 4248e4 <find_in_given_path@@Base+0x134>
  4248d0:	cmp	w26, #0x3a
  4248d4:	b.eq	4248e4 <find_in_given_path@@Base+0x134>  // b.none
  4248d8:	add	x28, x28, #0x1
  4248dc:	ldrb	w26, [x27, x28]
  4248e0:	cbnz	w26, 4248d0 <find_in_given_path@@Base+0x120>
  4248e4:	cmp	x28, #0x0
  4248e8:	csel	x0, x25, x27, eq  // eq = none
  4248ec:	mov	x1, x19
  4248f0:	mov	x2, x20
  4248f4:	strb	wzr, [x27, x28]
  4248f8:	bl	4249f0 <xconcatenated_filename@@Base>
  4248fc:	mov	w1, #0x1                   	// #1
  424900:	mov	x23, x0
  424904:	bl	406940 <eaccess@plt>
  424908:	cbz	w0, 42492c <find_in_given_path@@Base+0x17c>
  42490c:	bl	406f00 <__errno_location@plt>
  424910:	ldr	w8, [x0]
  424914:	mov	w21, wzr
  424918:	mov	x0, x23
  42491c:	mov	x23, x22
  424920:	cmp	w8, #0x2
  424924:	csel	w24, w24, w8, eq  // eq = none
  424928:	b	424984 <find_in_given_path@@Base+0x1d4>
  42492c:	mov	x0, x23
  424930:	mov	x1, x19
  424934:	bl	406cb0 <strcmp@plt>
  424938:	cbnz	w0, 42497c <find_in_given_path@@Base+0x1cc>
  42493c:	mov	x0, x23
  424940:	bl	406cf0 <free@plt>
  424944:	mov	x0, x19
  424948:	bl	4067d0 <strlen@plt>
  42494c:	add	x0, x0, #0x3
  424950:	bl	418070 <xmalloc@@Base>
  424954:	mov	x23, x0
  424958:	mov	x22, x0
  42495c:	mov	w8, #0x2f2e                	// #12078
  424960:	mov	x0, x19
  424964:	strh	w8, [x22], #2
  424968:	bl	4067d0 <strlen@plt>
  42496c:	add	x2, x0, #0x1
  424970:	mov	x0, x22
  424974:	mov	x1, x19
  424978:	bl	406790 <memcpy@plt>
  42497c:	ldr	x0, [sp, #8]
  424980:	mov	w21, #0x1                   	// #1
  424984:	cmp	w26, #0x0
  424988:	cset	w22, eq  // eq = none
  42498c:	bl	406cf0 <free@plt>
  424990:	lsl	w8, w22, #3
  424994:	cmp	w21, #0x0
  424998:	csel	w8, w8, w21, eq  // eq = none
  42499c:	cbnz	w8, 4249b0 <find_in_given_path@@Base+0x200>
  4249a0:	add	x8, x27, x28
  4249a4:	add	x27, x8, #0x1
  4249a8:	mov	x22, x23
  4249ac:	b	4248c4 <find_in_given_path@@Base+0x114>
  4249b0:	cmp	w8, #0x8
  4249b4:	b.ne	4249cc <find_in_given_path@@Base+0x21c>  // b.any
  4249b8:	ldr	x0, [sp, #8]
  4249bc:	bl	406cf0 <free@plt>
  4249c0:	bl	406f00 <__errno_location@plt>
  4249c4:	mov	x23, xzr
  4249c8:	str	w24, [x0]
  4249cc:	mov	x0, x23
  4249d0:	ldp	x20, x19, [sp, #96]
  4249d4:	ldp	x22, x21, [sp, #80]
  4249d8:	ldp	x24, x23, [sp, #64]
  4249dc:	ldp	x26, x25, [sp, #48]
  4249e0:	ldp	x28, x27, [sp, #32]
  4249e4:	ldp	x29, x30, [sp, #16]
  4249e8:	add	sp, sp, #0x70
  4249ec:	ret

00000000004249f0 <xconcatenated_filename@@Base>:
  4249f0:	stp	x29, x30, [sp, #-16]!
  4249f4:	mov	x29, sp
  4249f8:	bl	424cd0 <concatenated_filename@@Base>
  4249fc:	cbz	x0, 424a08 <xconcatenated_filename@@Base+0x18>
  424a00:	ldp	x29, x30, [sp], #16
  424a04:	ret
  424a08:	bl	424e00 <xalloc_die@@Base>

0000000000424a0c <rpl_fcntl@@Base>:
  424a0c:	sub	sp, sp, #0xe0
  424a10:	stp	x29, x30, [sp, #208]
  424a14:	add	x29, sp, #0xd0
  424a18:	mov	x8, #0xffffffffffffffd0    	// #-48
  424a1c:	mov	x9, sp
  424a20:	sub	x10, x29, #0x50
  424a24:	movk	x8, #0xff80, lsl #32
  424a28:	add	x11, x29, #0x10
  424a2c:	cmp	w1, #0xb
  424a30:	add	x9, x9, #0x80
  424a34:	add	x10, x10, #0x30
  424a38:	stp	x2, x3, [x29, #-80]
  424a3c:	stp	x4, x5, [x29, #-64]
  424a40:	stp	x6, x7, [x29, #-48]
  424a44:	stp	q1, q2, [sp, #16]
  424a48:	stp	q3, q4, [sp, #48]
  424a4c:	str	q0, [sp]
  424a50:	stp	q5, q6, [sp, #80]
  424a54:	str	q7, [sp, #112]
  424a58:	stp	x9, x8, [x29, #-16]
  424a5c:	stp	x11, x10, [x29, #-32]
  424a60:	b.hi	424ab8 <rpl_fcntl@@Base+0xac>  // b.pmore
  424a64:	mov	w8, #0x1                   	// #1
  424a68:	lsl	w8, w8, w1
  424a6c:	mov	w9, #0x514                 	// #1300
  424a70:	tst	w8, w9
  424a74:	b.ne	424aec <rpl_fcntl@@Base+0xe0>  // b.any
  424a78:	mov	w9, #0xa0a                 	// #2570
  424a7c:	tst	w8, w9
  424a80:	b.ne	424ae4 <rpl_fcntl@@Base+0xd8>  // b.any
  424a84:	cbnz	w1, 424ab8 <rpl_fcntl@@Base+0xac>
  424a88:	ldursw	x8, [x29, #-8]
  424a8c:	tbz	w8, #31, 424aa0 <rpl_fcntl@@Base+0x94>
  424a90:	add	w9, w8, #0x8
  424a94:	cmp	w9, #0x0
  424a98:	stur	w9, [x29, #-8]
  424a9c:	b.le	424bb0 <rpl_fcntl@@Base+0x1a4>
  424aa0:	ldur	x8, [x29, #-32]
  424aa4:	add	x9, x8, #0x8
  424aa8:	stur	x9, [x29, #-32]
  424aac:	ldr	w1, [x8]
  424ab0:	bl	424bbc <rpl_fcntl@@Base+0x1b0>
  424ab4:	b	424b18 <rpl_fcntl@@Base+0x10c>
  424ab8:	sub	w8, w1, #0x400
  424abc:	cmp	w8, #0xa
  424ac0:	b.hi	424b68 <rpl_fcntl@@Base+0x15c>  // b.pmore
  424ac4:	mov	w9, #0x1                   	// #1
  424ac8:	lsl	w9, w9, w8
  424acc:	mov	w10, #0x285                 	// #645
  424ad0:	tst	w9, w10
  424ad4:	b.ne	424aec <rpl_fcntl@@Base+0xe0>  // b.any
  424ad8:	mov	w10, #0x502                 	// #1282
  424adc:	tst	w9, w10
  424ae0:	b.eq	424b24 <rpl_fcntl@@Base+0x118>  // b.none
  424ae4:	bl	406d60 <fcntl@plt>
  424ae8:	b	424b18 <rpl_fcntl@@Base+0x10c>
  424aec:	ldursw	x8, [x29, #-8]
  424af0:	tbz	w8, #31, 424b04 <rpl_fcntl@@Base+0xf8>
  424af4:	add	w9, w8, #0x8
  424af8:	cmp	w9, #0x0
  424afc:	stur	w9, [x29, #-8]
  424b00:	b.le	424b5c <rpl_fcntl@@Base+0x150>
  424b04:	ldur	x8, [x29, #-32]
  424b08:	add	x9, x8, #0x8
  424b0c:	stur	x9, [x29, #-32]
  424b10:	ldr	w2, [x8]
  424b14:	bl	406d60 <fcntl@plt>
  424b18:	ldp	x29, x30, [sp, #208]
  424b1c:	add	sp, sp, #0xe0
  424b20:	ret
  424b24:	cmp	w8, #0x6
  424b28:	b.ne	424b68 <rpl_fcntl@@Base+0x15c>  // b.any
  424b2c:	ldursw	x8, [x29, #-8]
  424b30:	tbz	w8, #31, 424b44 <rpl_fcntl@@Base+0x138>
  424b34:	add	w9, w8, #0x8
  424b38:	cmp	w9, #0x0
  424b3c:	stur	w9, [x29, #-8]
  424b40:	b.le	424b98 <rpl_fcntl@@Base+0x18c>
  424b44:	ldur	x8, [x29, #-32]
  424b48:	add	x9, x8, #0x8
  424b4c:	stur	x9, [x29, #-32]
  424b50:	ldr	w1, [x8]
  424b54:	bl	424bd8 <rpl_fcntl@@Base+0x1cc>
  424b58:	b	424b18 <rpl_fcntl@@Base+0x10c>
  424b5c:	ldur	x9, [x29, #-24]
  424b60:	add	x8, x9, x8
  424b64:	b	424b10 <rpl_fcntl@@Base+0x104>
  424b68:	ldursw	x8, [x29, #-8]
  424b6c:	tbz	w8, #31, 424b80 <rpl_fcntl@@Base+0x174>
  424b70:	add	w9, w8, #0x8
  424b74:	cmp	w9, #0x0
  424b78:	stur	w9, [x29, #-8]
  424b7c:	b.le	424ba4 <rpl_fcntl@@Base+0x198>
  424b80:	ldur	x8, [x29, #-32]
  424b84:	add	x9, x8, #0x8
  424b88:	stur	x9, [x29, #-32]
  424b8c:	ldr	x2, [x8]
  424b90:	bl	406d60 <fcntl@plt>
  424b94:	b	424b18 <rpl_fcntl@@Base+0x10c>
  424b98:	ldur	x9, [x29, #-24]
  424b9c:	add	x8, x9, x8
  424ba0:	b	424b50 <rpl_fcntl@@Base+0x144>
  424ba4:	ldur	x9, [x29, #-24]
  424ba8:	add	x8, x9, x8
  424bac:	b	424b8c <rpl_fcntl@@Base+0x180>
  424bb0:	ldur	x9, [x29, #-24]
  424bb4:	add	x8, x9, x8
  424bb8:	b	424aac <rpl_fcntl@@Base+0xa0>
  424bbc:	stp	x29, x30, [sp, #-16]!
  424bc0:	mov	w2, w1
  424bc4:	mov	w1, wzr
  424bc8:	mov	x29, sp
  424bcc:	bl	406d60 <fcntl@plt>
  424bd0:	ldp	x29, x30, [sp], #16
  424bd4:	ret
  424bd8:	stp	x29, x30, [sp, #-48]!
  424bdc:	stp	x22, x21, [sp, #16]
  424be0:	adrp	x22, 43f000 <stdio_traced@@Base+0x1a38>
  424be4:	ldr	w8, [x22, #4040]
  424be8:	stp	x20, x19, [sp, #32]
  424bec:	mov	w20, w1
  424bf0:	mov	w21, w0
  424bf4:	mov	x29, sp
  424bf8:	tbnz	w8, #31, 424c58 <rpl_fcntl@@Base+0x24c>
  424bfc:	mov	w1, #0x406                 	// #1030
  424c00:	mov	w0, w21
  424c04:	mov	w2, w20
  424c08:	bl	406d60 <fcntl@plt>
  424c0c:	mov	w19, w0
  424c10:	tbz	w0, #31, 424c48 <rpl_fcntl@@Base+0x23c>
  424c14:	bl	406f00 <__errno_location@plt>
  424c18:	ldr	w8, [x0]
  424c1c:	cmp	w8, #0x16
  424c20:	b.ne	424c48 <rpl_fcntl@@Base+0x23c>  // b.any
  424c24:	mov	w0, w21
  424c28:	mov	w1, w20
  424c2c:	bl	424bbc <rpl_fcntl@@Base+0x1b0>
  424c30:	mov	w19, w0
  424c34:	tbnz	w0, #31, 424c50 <rpl_fcntl@@Base+0x244>
  424c38:	mov	w8, #0xffffffff            	// #-1
  424c3c:	str	w8, [x22, #4040]
  424c40:	tbz	w19, #31, 424c6c <rpl_fcntl@@Base+0x260>
  424c44:	b	424cbc <rpl_fcntl@@Base+0x2b0>
  424c48:	mov	w8, #0x1                   	// #1
  424c4c:	str	w8, [x22, #4040]
  424c50:	tbz	w19, #31, 424c6c <rpl_fcntl@@Base+0x260>
  424c54:	b	424cbc <rpl_fcntl@@Base+0x2b0>
  424c58:	mov	w0, w21
  424c5c:	mov	w1, w20
  424c60:	bl	424bbc <rpl_fcntl@@Base+0x1b0>
  424c64:	mov	w19, w0
  424c68:	tbnz	w19, #31, 424cbc <rpl_fcntl@@Base+0x2b0>
  424c6c:	ldr	w8, [x22, #4040]
  424c70:	cmn	w8, #0x1
  424c74:	b.ne	424cbc <rpl_fcntl@@Base+0x2b0>  // b.any
  424c78:	mov	w1, #0x1                   	// #1
  424c7c:	mov	w0, w19
  424c80:	bl	406d60 <fcntl@plt>
  424c84:	tbnz	w0, #31, 424ca0 <rpl_fcntl@@Base+0x294>
  424c88:	orr	w2, w0, #0x1
  424c8c:	mov	w1, #0x2                   	// #2
  424c90:	mov	w0, w19
  424c94:	bl	406d60 <fcntl@plt>
  424c98:	cmn	w0, #0x1
  424c9c:	b.ne	424cbc <rpl_fcntl@@Base+0x2b0>  // b.any
  424ca0:	bl	406f00 <__errno_location@plt>
  424ca4:	ldr	w21, [x0]
  424ca8:	mov	x20, x0
  424cac:	mov	w0, w19
  424cb0:	bl	406ba0 <close@plt>
  424cb4:	mov	w19, #0xffffffff            	// #-1
  424cb8:	str	w21, [x20]
  424cbc:	mov	w0, w19
  424cc0:	ldp	x20, x19, [sp, #32]
  424cc4:	ldp	x22, x21, [sp, #16]
  424cc8:	ldp	x29, x30, [sp], #48
  424ccc:	ret

0000000000424cd0 <concatenated_filename@@Base>:
  424cd0:	stp	x29, x30, [sp, #-64]!
  424cd4:	stp	x20, x19, [sp, #48]
  424cd8:	mov	x20, x1
  424cdc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x30e0>
  424ce0:	add	x1, x1, #0x944
  424ce4:	stp	x24, x23, [sp, #16]
  424ce8:	stp	x22, x21, [sp, #32]
  424cec:	mov	x29, sp
  424cf0:	mov	x19, x2
  424cf4:	mov	x22, x0
  424cf8:	bl	406cb0 <strcmp@plt>
  424cfc:	cbz	w0, 424d24 <concatenated_filename@@Base+0x54>
  424d00:	mov	x0, x22
  424d04:	bl	4067d0 <strlen@plt>
  424d08:	mov	x23, x0
  424d0c:	cbz	x0, 424d40 <concatenated_filename@@Base+0x70>
  424d10:	add	x8, x23, x22
  424d14:	ldurb	w8, [x8, #-1]
  424d18:	cmp	w8, #0x2f
  424d1c:	cset	w24, ne  // ne = any
  424d20:	b	424d44 <concatenated_filename@@Base+0x74>
  424d24:	mov	x0, x20
  424d28:	bl	4067d0 <strlen@plt>
  424d2c:	mov	x21, x0
  424d30:	cbz	x19, 424dbc <concatenated_filename@@Base+0xec>
  424d34:	mov	x0, x19
  424d38:	bl	4067d0 <strlen@plt>
  424d3c:	b	424dc0 <concatenated_filename@@Base+0xf0>
  424d40:	mov	w24, wzr
  424d44:	mov	x0, x20
  424d48:	bl	4067d0 <strlen@plt>
  424d4c:	mov	x21, x0
  424d50:	cbz	x19, 424d60 <concatenated_filename@@Base+0x90>
  424d54:	mov	x0, x19
  424d58:	bl	4067d0 <strlen@plt>
  424d5c:	b	424d64 <concatenated_filename@@Base+0x94>
  424d60:	mov	x0, xzr
  424d64:	add	x8, x23, x24
  424d68:	add	x8, x8, x21
  424d6c:	add	x8, x8, x0
  424d70:	add	x0, x8, #0x1
  424d74:	bl	406a10 <malloc@plt>
  424d78:	mov	x21, x0
  424d7c:	cbz	x0, 424dac <concatenated_filename@@Base+0xdc>
  424d80:	mov	x0, x21
  424d84:	mov	x1, x22
  424d88:	mov	x2, x23
  424d8c:	bl	406790 <memcpy@plt>
  424d90:	add	x0, x21, x23
  424d94:	cbz	x24, 424da0 <concatenated_filename@@Base+0xd0>
  424d98:	mov	w8, #0x2f                  	// #47
  424d9c:	strb	w8, [x0], #1
  424da0:	mov	w8, #0x1                   	// #1
  424da4:	cbz	w8, 424db4 <concatenated_filename@@Base+0xe4>
  424da8:	b	424dd4 <concatenated_filename@@Base+0x104>
  424dac:	mov	w8, wzr
  424db0:	cbnz	w8, 424dd4 <concatenated_filename@@Base+0x104>
  424db4:	mov	x21, xzr
  424db8:	b	424de8 <concatenated_filename@@Base+0x118>
  424dbc:	mov	x0, xzr
  424dc0:	add	x8, x21, x0
  424dc4:	add	x0, x8, #0x1
  424dc8:	bl	406a10 <malloc@plt>
  424dcc:	mov	x21, x0
  424dd0:	cbz	x0, 424de8 <concatenated_filename@@Base+0x118>
  424dd4:	mov	x1, x20
  424dd8:	bl	406970 <stpcpy@plt>
  424ddc:	cbz	x19, 424de8 <concatenated_filename@@Base+0x118>
  424de0:	mov	x1, x19
  424de4:	bl	406970 <stpcpy@plt>
  424de8:	mov	x0, x21
  424dec:	ldp	x20, x19, [sp, #48]
  424df0:	ldp	x22, x21, [sp, #32]
  424df4:	ldp	x24, x23, [sp, #16]
  424df8:	ldp	x29, x30, [sp], #64
  424dfc:	ret

0000000000424e00 <xalloc_die@@Base>:
  424e00:	stp	x29, x30, [sp, #-32]!
  424e04:	str	x19, [sp, #16]
  424e08:	adrp	x8, 43c000 <memcpy@GLIBC_2.17>
  424e0c:	ldr	w19, [x8, #2480]
  424e10:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x20e0>
  424e14:	add	x1, x1, #0x2fb
  424e18:	mov	w2, #0x5                   	// #5
  424e1c:	mov	x0, xzr
  424e20:	mov	x29, sp
  424e24:	bl	406e50 <dcgettext@plt>
  424e28:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x20e0>
  424e2c:	mov	x3, x0
  424e30:	add	x2, x2, #0xb96
  424e34:	mov	w0, w19
  424e38:	mov	w1, wzr
  424e3c:	bl	418f84 <error@@Base>
  424e40:	bl	406c10 <abort@plt>
  424e44:	nop

0000000000424e48 <__libc_csu_init@@Base>:
  424e48:	stp	x29, x30, [sp, #-64]!
  424e4c:	mov	x29, sp
  424e50:	stp	x19, x20, [sp, #16]
  424e54:	adrp	x20, 43b000 <_IO_stdin_used@@Base+0x160e0>
  424e58:	add	x20, x20, #0xde0
  424e5c:	stp	x21, x22, [sp, #32]
  424e60:	adrp	x21, 43b000 <_IO_stdin_used@@Base+0x160e0>
  424e64:	add	x21, x21, #0xdd8
  424e68:	sub	x20, x20, x21
  424e6c:	mov	w22, w0
  424e70:	stp	x23, x24, [sp, #48]
  424e74:	mov	x23, x1
  424e78:	mov	x24, x2
  424e7c:	bl	406750 <memcpy@plt-0x40>
  424e80:	cmp	xzr, x20, asr #3
  424e84:	b.eq	424eb0 <__libc_csu_init@@Base+0x68>  // b.none
  424e88:	asr	x20, x20, #3
  424e8c:	mov	x19, #0x0                   	// #0
  424e90:	ldr	x3, [x21, x19, lsl #3]
  424e94:	mov	x2, x24
  424e98:	add	x19, x19, #0x1
  424e9c:	mov	x1, x23
  424ea0:	mov	w0, w22
  424ea4:	blr	x3
  424ea8:	cmp	x20, x19
  424eac:	b.ne	424e90 <__libc_csu_init@@Base+0x48>  // b.any
  424eb0:	ldp	x19, x20, [sp, #16]
  424eb4:	ldp	x21, x22, [sp, #32]
  424eb8:	ldp	x23, x24, [sp, #48]
  424ebc:	ldp	x29, x30, [sp], #64
  424ec0:	ret
  424ec4:	nop

0000000000424ec8 <__libc_csu_fini@@Base>:
  424ec8:	ret
  424ecc:	nop
  424ed0:	adrp	x2, 43c000 <memcpy@GLIBC_2.17>
  424ed4:	mov	x1, #0x0                   	// #0
  424ed8:	ldr	x2, [x2, #1048]
  424edc:	b	4068c0 <__cxa_atexit@plt>
  424ee0:	mov	x2, x1
  424ee4:	mov	x1, x0
  424ee8:	mov	w0, #0x0                   	// #0
  424eec:	b	406f30 <__xstat@plt>
  424ef0:	mov	x2, x1
  424ef4:	mov	w1, w0
  424ef8:	mov	w0, #0x0                   	// #0
  424efc:	b	406e30 <__fxstat@plt>
  424f00:	mov	x2, x1
  424f04:	mov	x1, x0
  424f08:	mov	w0, #0x0                   	// #0
  424f0c:	b	406dc0 <__lxstat@plt>

Disassembly of section .fini:

0000000000424f10 <.fini>:
  424f10:	stp	x29, x30, [sp, #-16]!
  424f14:	mov	x29, sp
  424f18:	ldp	x29, x30, [sp], #16
  424f1c:	ret
