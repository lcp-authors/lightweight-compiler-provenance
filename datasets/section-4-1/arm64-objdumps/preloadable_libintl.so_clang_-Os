
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//preloadable_libintl.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001d38 <.init>:
    1d38:	stp	x29, x30, [sp, #-16]!
    1d3c:	mov	x29, sp
    1d40:	bl	2270 <libintl_ngettext@plt+0x10>
    1d44:	ldp	x29, x30, [sp], #16
    1d48:	ret

Disassembly of section .plt:

0000000000001d50 <memcpy@plt-0x20>:
    1d50:	stp	x16, x30, [sp, #-16]!
    1d54:	adrp	x16, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    1d58:	ldr	x17, [x16, #4088]
    1d5c:	add	x16, x16, #0xff8
    1d60:	br	x17
    1d64:	nop
    1d68:	nop
    1d6c:	nop

0000000000001d70 <memcpy@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16]
    1d78:	add	x16, x16, #0x0
    1d7c:	br	x17

0000000000001d80 <libintl_dngettext@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #8]
    1d88:	add	x16, x16, #0x8
    1d8c:	br	x17

0000000000001d90 <pthread_rwlockattr_init@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #16]
    1d98:	add	x16, x16, #0x10
    1d9c:	br	x17

0000000000001da0 <getcwd@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #24]
    1da8:	add	x16, x16, #0x18
    1dac:	br	x17

0000000000001db0 <strtoul@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #32]
    1db8:	add	x16, x16, #0x20
    1dbc:	br	x17

0000000000001dc0 <strlen@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #40]
    1dc8:	add	x16, x16, #0x28
    1dcc:	br	x17

0000000000001dd0 <fputs@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #48]
    1dd8:	add	x16, x16, #0x30
    1ddc:	br	x17

0000000000001de0 <raise@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #56]
    1de8:	add	x16, x16, #0x38
    1dec:	br	x17

0000000000001df0 <pthread_mutexattr_settype@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #64]
    1df8:	add	x16, x16, #0x40
    1dfc:	br	x17

0000000000001e00 <pthread_rwlock_rdlock@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #72]
    1e08:	add	x16, x16, #0x48
    1e0c:	br	x17

0000000000001e10 <getegid@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #80]
    1e18:	add	x16, x16, #0x50
    1e1c:	br	x17

0000000000001e20 <geteuid@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #88]
    1e28:	add	x16, x16, #0x58
    1e2c:	br	x17

0000000000001e30 <pthread_rwlock_init@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #96]
    1e38:	add	x16, x16, #0x60
    1e3c:	br	x17

0000000000001e40 <pthread_rwlockattr_setkind_np@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #104]
    1e48:	add	x16, x16, #0x68
    1e4c:	br	x17

0000000000001e50 <fgets_unlocked@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #112]
    1e58:	add	x16, x16, #0x70
    1e5c:	br	x17

0000000000001e60 <__cxa_finalize@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #120]
    1e68:	add	x16, x16, #0x78
    1e6c:	br	x17

0000000000001e70 <getuid@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #128]
    1e78:	add	x16, x16, #0x80
    1e7c:	br	x17

0000000000001e80 <putc@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #136]
    1e88:	add	x16, x16, #0x88
    1e8c:	br	x17

0000000000001e90 <qsort@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #144]
    1e98:	add	x16, x16, #0x90
    1e9c:	br	x17

0000000000001ea0 <libintl_textdomain@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #152]
    1ea8:	add	x16, x16, #0x98
    1eac:	br	x17

0000000000001eb0 <libintl_dcgettext@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #160]
    1eb8:	add	x16, x16, #0xa0
    1ebc:	br	x17

0000000000001ec0 <__ctype_tolower_loc@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #168]
    1ec8:	add	x16, x16, #0xa8
    1ecc:	br	x17

0000000000001ed0 <tfind@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #176]
    1ed8:	add	x16, x16, #0xb0
    1edc:	br	x17

0000000000001ee0 <stpcpy@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #184]
    1ee8:	add	x16, x16, #0xb8
    1eec:	br	x17

0000000000001ef0 <fclose@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #192]
    1ef8:	add	x16, x16, #0xc0
    1efc:	br	x17

0000000000001f00 <nl_langinfo@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #200]
    1f08:	add	x16, x16, #0xc8
    1f0c:	br	x17

0000000000001f10 <fopen@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #208]
    1f18:	add	x16, x16, #0xd0
    1f1c:	br	x17

0000000000001f20 <malloc@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #216]
    1f28:	add	x16, x16, #0xd8
    1f2c:	br	x17

0000000000001f30 <pthread_rwlock_destroy@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #224]
    1f38:	add	x16, x16, #0xe0
    1f3c:	br	x17

0000000000001f40 <open@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #232]
    1f48:	add	x16, x16, #0xe8
    1f4c:	br	x17

0000000000001f50 <strncmp@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #240]
    1f58:	add	x16, x16, #0xf0
    1f5c:	br	x17

0000000000001f60 <_nl_expand_alias@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #248]
    1f68:	add	x16, x16, #0xf8
    1f6c:	br	x17

0000000000001f70 <libintl_dcngettext@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #256]
    1f78:	add	x16, x16, #0x100
    1f7c:	br	x17

0000000000001f80 <tsearch@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #264]
    1f88:	add	x16, x16, #0x108
    1f8c:	br	x17

0000000000001f90 <libintl_bind_textdomain_codeset@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #272]
    1f98:	add	x16, x16, #0x110
    1f9c:	br	x17

0000000000001fa0 <libintl_bindtextdomain@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #280]
    1fa8:	add	x16, x16, #0x118
    1fac:	br	x17

0000000000001fb0 <calloc@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #288]
    1fb8:	add	x16, x16, #0x120
    1fbc:	br	x17

0000000000001fc0 <argz_stringify@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #296]
    1fc8:	add	x16, x16, #0x128
    1fcc:	br	x17

0000000000001fd0 <bsearch@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #304]
    1fd8:	add	x16, x16, #0x130
    1fdc:	br	x17

0000000000001fe0 <strcasecmp@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #312]
    1fe8:	add	x16, x16, #0x138
    1fec:	br	x17

0000000000001ff0 <realloc@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #320]
    1ff8:	add	x16, x16, #0x140
    1ffc:	br	x17

0000000000002000 <strdup@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #328]
    2008:	add	x16, x16, #0x148
    200c:	br	x17

0000000000002010 <pthread_mutex_init@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #336]
    2018:	add	x16, x16, #0x150
    201c:	br	x17

0000000000002020 <close@plt>:
    2020:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2024:	ldr	x17, [x16, #344]
    2028:	add	x16, x16, #0x158
    202c:	br	x17

0000000000002030 <__gmon_start__@plt>:
    2030:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2034:	ldr	x17, [x16, #352]
    2038:	add	x16, x16, #0x160
    203c:	br	x17

0000000000002040 <abort@plt>:
    2040:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2044:	ldr	x17, [x16, #360]
    2048:	add	x16, x16, #0x168
    204c:	br	x17

0000000000002050 <pthread_rwlock_wrlock@plt>:
    2050:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2054:	ldr	x17, [x16, #368]
    2058:	add	x16, x16, #0x170
    205c:	br	x17

0000000000002060 <dcgettext@plt>:
    2060:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2064:	ldr	x17, [x16, #376]
    2068:	add	x16, x16, #0x178
    206c:	br	x17

0000000000002070 <argz_next@plt>:
    2070:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2074:	ldr	x17, [x16, #384]
    2078:	add	x16, x16, #0x180
    207c:	br	x17

0000000000002080 <argz_count@plt>:
    2080:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2084:	ldr	x17, [x16, #392]
    2088:	add	x16, x16, #0x188
    208c:	br	x17

0000000000002090 <strcmp@plt>:
    2090:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2094:	ldr	x17, [x16, #400]
    2098:	add	x16, x16, #0x190
    209c:	br	x17

00000000000020a0 <iconv@plt>:
    20a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16, #408]
    20a8:	add	x16, x16, #0x198
    20ac:	br	x17

00000000000020b0 <__ctype_b_loc@plt>:
    20b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #416]
    20b8:	add	x16, x16, #0x1a0
    20bc:	br	x17

00000000000020c0 <mmap@plt>:
    20c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #424]
    20c8:	add	x16, x16, #0x1a8
    20cc:	br	x17

00000000000020d0 <uselocale@plt>:
    20d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #432]
    20d8:	add	x16, x16, #0x1b0
    20dc:	br	x17

00000000000020e0 <free@plt>:
    20e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #440]
    20e8:	add	x16, x16, #0x1b8
    20ec:	br	x17

00000000000020f0 <getgid@plt>:
    20f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #448]
    20f8:	add	x16, x16, #0x1c0
    20fc:	br	x17

0000000000002100 <pthread_rwlock_unlock@plt>:
    2100:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #456]
    2108:	add	x16, x16, #0x1c8
    210c:	br	x17

0000000000002110 <libintl_dgettext@plt>:
    2110:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #464]
    2118:	add	x16, x16, #0x1d0
    211c:	br	x17

0000000000002120 <strchr@plt>:
    2120:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #472]
    2128:	add	x16, x16, #0x1d8
    212c:	br	x17

0000000000002130 <feof_unlocked@plt>:
    2130:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #480]
    2138:	add	x16, x16, #0x1e0
    213c:	br	x17

0000000000002140 <fwrite@plt>:
    2140:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #488]
    2148:	add	x16, x16, #0x1e8
    214c:	br	x17

0000000000002150 <munmap@plt>:
    2150:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #496]
    2158:	add	x16, x16, #0x1f0
    215c:	br	x17

0000000000002160 <strcpy@plt>:
    2160:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #504]
    2168:	add	x16, x16, #0x1f8
    216c:	br	x17

0000000000002170 <iconv_open@plt>:
    2170:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #512]
    2178:	add	x16, x16, #0x200
    217c:	br	x17

0000000000002180 <read@plt>:
    2180:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #520]
    2188:	add	x16, x16, #0x208
    218c:	br	x17

0000000000002190 <pthread_mutexattr_init@plt>:
    2190:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #528]
    2198:	add	x16, x16, #0x210
    219c:	br	x17

00000000000021a0 <__fxstat@plt>:
    21a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #536]
    21a8:	add	x16, x16, #0x218
    21ac:	br	x17

00000000000021b0 <pthread_mutexattr_destroy@plt>:
    21b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #544]
    21b8:	add	x16, x16, #0x220
    21bc:	br	x17

00000000000021c0 <strstr@plt>:
    21c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #552]
    21c8:	add	x16, x16, #0x228
    21cc:	br	x17

00000000000021d0 <pthread_rwlockattr_destroy@plt>:
    21d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #560]
    21d8:	add	x16, x16, #0x230
    21dc:	br	x17

00000000000021e0 <__fsetlocking@plt>:
    21e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #568]
    21e8:	add	x16, x16, #0x238
    21ec:	br	x17

00000000000021f0 <strcspn@plt>:
    21f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21f4:	ldr	x17, [x16, #576]
    21f8:	add	x16, x16, #0x240
    21fc:	br	x17

0000000000002200 <__errno_location@plt>:
    2200:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16, #584]
    2208:	add	x16, x16, #0x248
    220c:	br	x17

0000000000002210 <getenv@plt>:
    2210:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #592]
    2218:	add	x16, x16, #0x250
    221c:	br	x17

0000000000002220 <pthread_mutex_lock@plt>:
    2220:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #600]
    2228:	add	x16, x16, #0x258
    222c:	br	x17

0000000000002230 <pthread_mutex_unlock@plt>:
    2230:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #608]
    2238:	add	x16, x16, #0x260
    223c:	br	x17

0000000000002240 <libintl_gettext@plt>:
    2240:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #616]
    2248:	add	x16, x16, #0x268
    224c:	br	x17

0000000000002250 <setlocale@plt>:
    2250:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #624]
    2258:	add	x16, x16, #0x270
    225c:	br	x17

0000000000002260 <libintl_ngettext@plt>:
    2260:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #632]
    2268:	add	x16, x16, #0x278
    226c:	br	x17

Disassembly of section .text:

0000000000002270 <libintl_bindtextdomain@@Base-0xd4>:
    2270:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    2274:	ldr	x0, [x0, #4016]
    2278:	cbz	x0, 2280 <libintl_ngettext@plt+0x20>
    227c:	b	2030 <__gmon_start__@plt>
    2280:	ret
    2284:	nop
    2288:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    228c:	add	x0, x0, #0x370
    2290:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    2294:	add	x1, x1, #0x370
    2298:	cmp	x1, x0
    229c:	b.eq	22b4 <libintl_ngettext@plt+0x54>  // b.none
    22a0:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    22a4:	ldr	x1, [x1, #3984]
    22a8:	cbz	x1, 22b4 <libintl_ngettext@plt+0x54>
    22ac:	mov	x16, x1
    22b0:	br	x16
    22b4:	ret
    22b8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    22bc:	add	x0, x0, #0x370
    22c0:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    22c4:	add	x1, x1, #0x370
    22c8:	sub	x1, x1, x0
    22cc:	lsr	x2, x1, #63
    22d0:	add	x1, x2, x1, asr #3
    22d4:	cmp	xzr, x1, asr #1
    22d8:	asr	x1, x1, #1
    22dc:	b.eq	22f4 <libintl_ngettext@plt+0x94>  // b.none
    22e0:	adrp	x2, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    22e4:	ldr	x2, [x2, #4056]
    22e8:	cbz	x2, 22f4 <libintl_ngettext@plt+0x94>
    22ec:	mov	x16, x2
    22f0:	br	x16
    22f4:	ret
    22f8:	stp	x29, x30, [sp, #-32]!
    22fc:	mov	x29, sp
    2300:	str	x19, [sp, #16]
    2304:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    2308:	ldrb	w0, [x19, #880]
    230c:	cbnz	w0, 2334 <libintl_ngettext@plt+0xd4>
    2310:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    2314:	ldr	x0, [x0, #3992]
    2318:	cbz	x0, 2328 <libintl_ngettext@plt+0xc8>
    231c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    2320:	ldr	x0, [x0, #640]
    2324:	bl	1e60 <__cxa_finalize@plt>
    2328:	bl	2288 <libintl_ngettext@plt+0x28>
    232c:	mov	w0, #0x1                   	// #1
    2330:	strb	w0, [x19, #880]
    2334:	ldr	x19, [sp, #16]
    2338:	ldp	x29, x30, [sp], #32
    233c:	ret
    2340:	b	22b8 <libintl_ngettext@plt+0x58>

0000000000002344 <libintl_bindtextdomain@@Base>:
    2344:	sub	sp, sp, #0x20
    2348:	str	x1, [sp, #8]
    234c:	add	x1, sp, #0x8
    2350:	mov	x2, xzr
    2354:	stp	x29, x30, [sp, #16]
    2358:	add	x29, sp, #0x10
    235c:	bl	2370 <libintl_bindtextdomain@@Base+0x2c>
    2360:	ldr	x0, [sp, #8]
    2364:	ldp	x29, x30, [sp, #16]
    2368:	add	sp, sp, #0x20
    236c:	ret
    2370:	stp	x29, x30, [sp, #-96]!
    2374:	stp	x20, x19, [sp, #80]
    2378:	mov	x19, x2
    237c:	mov	x20, x1
    2380:	stp	x28, x27, [sp, #16]
    2384:	stp	x26, x25, [sp, #32]
    2388:	stp	x24, x23, [sp, #48]
    238c:	stp	x22, x21, [sp, #64]
    2390:	mov	x29, sp
    2394:	cbz	x0, 2404 <libintl_bindtextdomain@@Base+0xc0>
    2398:	ldrb	w8, [x0]
    239c:	mov	x21, x0
    23a0:	cbz	w8, 2404 <libintl_bindtextdomain@@Base+0xc0>
    23a4:	adrp	x25, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    23a8:	ldr	x25, [x25, #4064]
    23ac:	cbz	x25, 23c0 <libintl_bindtextdomain@@Base+0x7c>
    23b0:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    23b4:	ldr	x0, [x0, #4048]
    23b8:	bl	2050 <pthread_rwlock_wrlock@plt>
    23bc:	cbnz	w0, 268c <libintl_bindtextdomain@@Base+0x348>
    23c0:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    23c4:	ldr	x26, [x26, #4000]
    23c8:	ldr	x22, [x26]
    23cc:	cbz	x22, 246c <libintl_bindtextdomain@@Base+0x128>
    23d0:	add	x1, x22, #0x18
    23d4:	mov	x0, x21
    23d8:	bl	2090 <strcmp@plt>
    23dc:	cmp	w0, #0x0
    23e0:	cset	w8, eq  // eq = none
    23e4:	cset	w9, lt  // lt = tstop
    23e8:	csel	x10, xzr, x22, lt  // lt = tstop
    23ec:	csel	x24, x22, x10, eq  // eq = none
    23f0:	cmp	w9, w8
    23f4:	b.ne	2418 <libintl_bindtextdomain@@Base+0xd4>  // b.any
    23f8:	ldr	x22, [x24]
    23fc:	cbnz	x22, 23d0 <libintl_bindtextdomain@@Base+0x8c>
    2400:	b	246c <libintl_bindtextdomain@@Base+0x128>
    2404:	cbz	x20, 240c <libintl_bindtextdomain@@Base+0xc8>
    2408:	str	xzr, [x20]
    240c:	cbz	x19, 2670 <libintl_bindtextdomain@@Base+0x32c>
    2410:	str	xzr, [x19]
    2414:	b	2670 <libintl_bindtextdomain@@Base+0x32c>
    2418:	cbz	x24, 246c <libintl_bindtextdomain@@Base+0x128>
    241c:	cbz	x20, 25a8 <libintl_bindtextdomain@@Base+0x264>
    2420:	ldr	x23, [x20]
    2424:	ldr	x21, [x24, #8]
    2428:	cbz	x23, 25a0 <libintl_bindtextdomain@@Base+0x25c>
    242c:	mov	x0, x23
    2430:	mov	x1, x21
    2434:	bl	2090 <strcmp@plt>
    2438:	cbz	w0, 25a0 <libintl_bindtextdomain@@Base+0x25c>
    243c:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    2440:	ldr	x22, [x22, #4040]
    2444:	mov	x0, x23
    2448:	mov	x1, x22
    244c:	bl	2090 <strcmp@plt>
    2450:	cbz	w0, 25dc <libintl_bindtextdomain@@Base+0x298>
    2454:	mov	x0, x23
    2458:	bl	2000 <strdup@plt>
    245c:	mov	x21, x0
    2460:	cbz	x0, 25a0 <libintl_bindtextdomain@@Base+0x25c>
    2464:	ldr	x0, [x24, #8]
    2468:	b	25e4 <libintl_bindtextdomain@@Base+0x2a0>
    246c:	cbz	x20, 2484 <libintl_bindtextdomain@@Base+0x140>
    2470:	ldr	x8, [x20]
    2474:	mov	w27, wzr
    2478:	cbnz	x8, 2494 <libintl_bindtextdomain@@Base+0x150>
    247c:	cbnz	x19, 248c <libintl_bindtextdomain@@Base+0x148>
    2480:	b	2504 <libintl_bindtextdomain@@Base+0x1c0>
    2484:	mov	w27, #0x1                   	// #1
    2488:	cbz	x19, 2504 <libintl_bindtextdomain@@Base+0x1c0>
    248c:	ldr	x8, [x19]
    2490:	cbz	x8, 2504 <libintl_bindtextdomain@@Base+0x1c0>
    2494:	mov	x0, x21
    2498:	bl	1dc0 <strlen@plt>
    249c:	mov	x23, x0
    24a0:	add	x0, x0, #0x19
    24a4:	bl	1f20 <malloc@plt>
    24a8:	cbz	x0, 25c8 <libintl_bindtextdomain@@Base+0x284>
    24ac:	mov	x22, x0
    24b0:	add	x2, x23, #0x1
    24b4:	add	x0, x0, #0x18
    24b8:	mov	x1, x21
    24bc:	bl	1d70 <memcpy@plt>
    24c0:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    24c4:	ldr	x28, [x28, #4040]
    24c8:	mov	x23, x28
    24cc:	tbnz	w27, #0, 2524 <libintl_bindtextdomain@@Base+0x1e0>
    24d0:	ldr	x24, [x20]
    24d4:	cbz	x24, 2518 <libintl_bindtextdomain@@Base+0x1d4>
    24d8:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    24dc:	ldr	x23, [x23, #4040]
    24e0:	mov	x0, x24
    24e4:	mov	x1, x23
    24e8:	bl	2090 <strcmp@plt>
    24ec:	cbz	w0, 2520 <libintl_bindtextdomain@@Base+0x1dc>
    24f0:	mov	x0, x24
    24f4:	bl	2000 <strdup@plt>
    24f8:	mov	x23, x0
    24fc:	cbnz	x0, 2520 <libintl_bindtextdomain@@Base+0x1dc>
    2500:	b	25c0 <libintl_bindtextdomain@@Base+0x27c>
    2504:	tbnz	w27, #0, 25d0 <libintl_bindtextdomain@@Base+0x28c>
    2508:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    250c:	ldr	x8, [x8, #4040]
    2510:	str	x8, [x20]
    2514:	b	25d0 <libintl_bindtextdomain@@Base+0x28c>
    2518:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    251c:	ldr	x23, [x23, #4040]
    2520:	str	x23, [x20]
    2524:	str	x23, [x22, #8]
    2528:	cbz	x19, 2544 <libintl_bindtextdomain@@Base+0x200>
    252c:	ldr	x0, [x19]
    2530:	cbz	x0, 253c <libintl_bindtextdomain@@Base+0x1f8>
    2534:	bl	2000 <strdup@plt>
    2538:	cbz	x0, 25b0 <libintl_bindtextdomain@@Base+0x26c>
    253c:	str	x0, [x19]
    2540:	b	2548 <libintl_bindtextdomain@@Base+0x204>
    2544:	mov	x0, xzr
    2548:	ldr	x19, [x26]
    254c:	str	x0, [x22, #16]
    2550:	cbz	x19, 2564 <libintl_bindtextdomain@@Base+0x220>
    2554:	add	x1, x19, #0x18
    2558:	mov	x0, x21
    255c:	bl	2090 <strcmp@plt>
    2560:	tbz	w0, #31, 2574 <libintl_bindtextdomain@@Base+0x230>
    2564:	str	x19, [x22]
    2568:	adrp	x20, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    256c:	ldr	x20, [x20, #4000]
    2570:	b	2598 <libintl_bindtextdomain@@Base+0x254>
    2574:	mov	x20, x19
    2578:	ldr	x19, [x19]
    257c:	cbz	x19, 2594 <libintl_bindtextdomain@@Base+0x250>
    2580:	add	x1, x19, #0x18
    2584:	mov	x0, x21
    2588:	bl	2090 <strcmp@plt>
    258c:	cmp	w0, #0x0
    2590:	b.gt	2574 <libintl_bindtextdomain@@Base+0x230>
    2594:	str	x19, [x22]
    2598:	str	x22, [x20]
    259c:	b	2648 <libintl_bindtextdomain@@Base+0x304>
    25a0:	mov	w22, wzr
    25a4:	b	25f8 <libintl_bindtextdomain@@Base+0x2b4>
    25a8:	mov	w22, wzr
    25ac:	b	25fc <libintl_bindtextdomain@@Base+0x2b8>
    25b0:	ldr	x0, [x22, #8]
    25b4:	cmp	x0, x28
    25b8:	b.eq	25c0 <libintl_bindtextdomain@@Base+0x27c>  // b.none
    25bc:	bl	20e0 <free@plt>
    25c0:	mov	x0, x22
    25c4:	bl	20e0 <free@plt>
    25c8:	tbnz	w27, #0, 25d0 <libintl_bindtextdomain@@Base+0x28c>
    25cc:	str	xzr, [x20]
    25d0:	cbz	x19, 265c <libintl_bindtextdomain@@Base+0x318>
    25d4:	str	xzr, [x19]
    25d8:	b	265c <libintl_bindtextdomain@@Base+0x318>
    25dc:	mov	x0, x21
    25e0:	mov	x21, x22
    25e4:	cmp	x0, x22
    25e8:	b.eq	25f0 <libintl_bindtextdomain@@Base+0x2ac>  // b.none
    25ec:	bl	20e0 <free@plt>
    25f0:	mov	w22, #0x1                   	// #1
    25f4:	str	x21, [x24, #8]
    25f8:	str	x21, [x20]
    25fc:	cbz	x19, 2644 <libintl_bindtextdomain@@Base+0x300>
    2600:	ldr	x21, [x19]
    2604:	ldr	x20, [x24, #16]
    2608:	cbz	x21, 2640 <libintl_bindtextdomain@@Base+0x2fc>
    260c:	cbz	x20, 2620 <libintl_bindtextdomain@@Base+0x2dc>
    2610:	mov	x0, x21
    2614:	mov	x1, x20
    2618:	bl	2090 <strcmp@plt>
    261c:	cbz	w0, 2640 <libintl_bindtextdomain@@Base+0x2fc>
    2620:	mov	x0, x21
    2624:	bl	2000 <strdup@plt>
    2628:	mov	x20, x0
    262c:	cbz	x0, 2640 <libintl_bindtextdomain@@Base+0x2fc>
    2630:	ldr	x0, [x24, #16]
    2634:	bl	20e0 <free@plt>
    2638:	mov	w22, #0x1                   	// #1
    263c:	str	x20, [x24, #16]
    2640:	str	x20, [x19]
    2644:	cbz	w22, 265c <libintl_bindtextdomain@@Base+0x318>
    2648:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    264c:	ldr	x8, [x8, #4032]
    2650:	ldr	w9, [x8]
    2654:	add	w9, w9, #0x1
    2658:	str	w9, [x8]
    265c:	cbz	x25, 2670 <libintl_bindtextdomain@@Base+0x32c>
    2660:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    2664:	ldr	x0, [x0, #4048]
    2668:	bl	2100 <pthread_rwlock_unlock@plt>
    266c:	cbnz	w0, 268c <libintl_bindtextdomain@@Base+0x348>
    2670:	ldp	x20, x19, [sp, #80]
    2674:	ldp	x22, x21, [sp, #64]
    2678:	ldp	x24, x23, [sp, #48]
    267c:	ldp	x26, x25, [sp, #32]
    2680:	ldp	x28, x27, [sp, #16]
    2684:	ldp	x29, x30, [sp], #96
    2688:	ret
    268c:	bl	2040 <abort@plt>

0000000000002690 <libintl_bind_textdomain_codeset@@Base>:
    2690:	sub	sp, sp, #0x20
    2694:	str	x1, [sp, #8]
    2698:	add	x2, sp, #0x8
    269c:	mov	x1, xzr
    26a0:	stp	x29, x30, [sp, #16]
    26a4:	add	x29, sp, #0x10
    26a8:	bl	2370 <libintl_bindtextdomain@@Base+0x2c>
    26ac:	ldr	x0, [sp, #8]
    26b0:	ldp	x29, x30, [sp, #16]
    26b4:	add	sp, sp, #0x20
    26b8:	ret

00000000000026bc <libintl_dcgettext@@Base>:
    26bc:	mov	w5, w2
    26c0:	mov	x2, xzr
    26c4:	mov	w3, wzr
    26c8:	mov	x4, xzr
    26cc:	b	45a0 <libintl_textdomain@@Base+0x800>

00000000000026d0 <libintl_dgettext@@Base>:
    26d0:	mov	w2, #0x5                   	// #5
    26d4:	b	1eb0 <libintl_dcgettext@plt>

00000000000026d8 <libintl_gettext@@Base>:
    26d8:	mov	w2, #0x5                   	// #5
    26dc:	mov	x1, x0
    26e0:	mov	x0, xzr
    26e4:	b	1eb0 <libintl_dcgettext@plt>
    26e8:	sub	sp, sp, #0x90
    26ec:	stp	x29, x30, [sp, #64]
    26f0:	stp	x26, x25, [sp, #80]
    26f4:	stp	x24, x23, [sp, #96]
    26f8:	stp	x22, x21, [sp, #112]
    26fc:	stp	x20, x19, [sp, #128]
    2700:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    2704:	ldr	x26, [x26, #4064]
    2708:	mov	x19, x3
    270c:	mov	x22, x2
    2710:	mov	x20, x1
    2714:	mov	x23, x0
    2718:	add	x29, sp, #0x40
    271c:	cbz	x26, 27dc <libintl_gettext@@Base+0x104>
    2720:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    2724:	add	x0, x0, #0x288
    2728:	bl	1e00 <pthread_rwlock_rdlock@plt>
    272c:	cbnz	w0, 2964 <libintl_gettext@@Base+0x28c>
    2730:	mov	x0, x23
    2734:	bl	1dc0 <strlen@plt>
    2738:	add	x2, x0, #0x1
    273c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    2740:	add	x0, x0, #0x378
    2744:	mov	x1, x23
    2748:	mov	w3, wzr
    274c:	mov	x4, x20
    2750:	mov	x5, xzr
    2754:	mov	x6, xzr
    2758:	mov	x7, xzr
    275c:	str	wzr, [sp, #16]
    2760:	stp	xzr, x22, [sp]
    2764:	bl	3ec8 <libintl_textdomain@@Base+0x128>
    2768:	mov	x21, x0
    276c:	cbz	x26, 2780 <libintl_gettext@@Base+0xa8>
    2770:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    2774:	add	x0, x0, #0x288
    2778:	bl	2100 <pthread_rwlock_unlock@plt>
    277c:	cbnz	w0, 2964 <libintl_gettext@@Base+0x28c>
    2780:	cbz	x21, 281c <libintl_gettext@@Base+0x144>
    2784:	ldr	w8, [x21, #8]
    2788:	cmp	w8, #0x0
    278c:	b.gt	279c <libintl_gettext@@Base+0xc4>
    2790:	mov	x0, x21
    2794:	mov	x1, x19
    2798:	bl	29ac <libintl_gettext@@Base+0x2d4>
    279c:	ldr	x8, [x21, #16]
    27a0:	cbnz	x8, 290c <libintl_gettext@@Base+0x234>
    27a4:	ldr	x0, [x21, #32]
    27a8:	cbz	x0, 290c <libintl_gettext@@Base+0x234>
    27ac:	add	x20, x21, #0x28
    27b0:	ldr	w8, [x0, #8]
    27b4:	cmp	w8, #0x0
    27b8:	b.gt	27c8 <libintl_gettext@@Base+0xf0>
    27bc:	mov	x1, x19
    27c0:	bl	29ac <libintl_gettext@@Base+0x2d4>
    27c4:	ldur	x0, [x20, #-8]
    27c8:	ldr	x8, [x0, #16]
    27cc:	cbnz	x8, 290c <libintl_gettext@@Base+0x234>
    27d0:	ldr	x0, [x20], #8
    27d4:	cbnz	x0, 27b0 <libintl_gettext@@Base+0xd8>
    27d8:	b	290c <libintl_gettext@@Base+0x234>
    27dc:	mov	x0, x23
    27e0:	bl	1dc0 <strlen@plt>
    27e4:	add	x2, x0, #0x1
    27e8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    27ec:	add	x0, x0, #0x378
    27f0:	mov	x1, x23
    27f4:	mov	w3, wzr
    27f8:	mov	x4, x20
    27fc:	mov	x5, xzr
    2800:	mov	x6, xzr
    2804:	mov	x7, xzr
    2808:	str	wzr, [sp, #16]
    280c:	stp	xzr, x22, [sp]
    2810:	bl	3ec8 <libintl_textdomain@@Base+0x128>
    2814:	mov	x21, x0
    2818:	cbnz	x21, 2784 <libintl_gettext@@Base+0xac>
    281c:	mov	x0, x20
    2820:	bl	1f60 <_nl_expand_alias@plt>
    2824:	mov	x24, x0
    2828:	cbz	x0, 283c <libintl_gettext@@Base+0x164>
    282c:	mov	x0, x24
    2830:	bl	2000 <strdup@plt>
    2834:	mov	x20, x0
    2838:	cbz	x0, 2908 <libintl_gettext@@Base+0x230>
    283c:	sub	x1, x29, #0x8
    2840:	sub	x2, x29, #0x10
    2844:	sub	x3, x29, #0x18
    2848:	add	x4, sp, #0x20
    284c:	add	x5, sp, #0x18
    2850:	mov	x0, x20
    2854:	bl	43cc <libintl_textdomain@@Base+0x62c>
    2858:	cmn	w0, #0x1
    285c:	b.eq	2908 <libintl_gettext@@Base+0x230>  // b.none
    2860:	mov	w25, w0
    2864:	cbz	x26, 2878 <libintl_gettext@@Base+0x1a0>
    2868:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    286c:	add	x0, x0, #0x288
    2870:	bl	2050 <pthread_rwlock_wrlock@plt>
    2874:	cbnz	w0, 2964 <libintl_gettext@@Base+0x28c>
    2878:	mov	x0, x23
    287c:	bl	1dc0 <strlen@plt>
    2880:	ldp	x8, x4, [x29, #-16]
    2884:	ldur	x5, [x29, #-24]
    2888:	ldp	x7, x6, [sp, #24]
    288c:	add	x2, x0, #0x1
    2890:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    2894:	mov	w9, #0x1                   	// #1
    2898:	add	x0, x0, #0x378
    289c:	mov	x1, x23
    28a0:	mov	w3, w25
    28a4:	str	w9, [sp, #16]
    28a8:	stp	x8, x22, [sp]
    28ac:	bl	3ec8 <libintl_textdomain@@Base+0x128>
    28b0:	mov	x21, x0
    28b4:	cbz	x26, 28c8 <libintl_gettext@@Base+0x1f0>
    28b8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    28bc:	add	x0, x0, #0x288
    28c0:	bl	2100 <pthread_rwlock_unlock@plt>
    28c4:	cbnz	w0, 2964 <libintl_gettext@@Base+0x28c>
    28c8:	cbz	x21, 28f8 <libintl_gettext@@Base+0x220>
    28cc:	ldr	w8, [x21, #8]
    28d0:	cmp	w8, #0x0
    28d4:	b.gt	28e4 <libintl_gettext@@Base+0x20c>
    28d8:	mov	x0, x21
    28dc:	mov	x1, x19
    28e0:	bl	29ac <libintl_gettext@@Base+0x2d4>
    28e4:	ldr	x8, [x21, #16]
    28e8:	cbz	x8, 292c <libintl_gettext@@Base+0x254>
    28ec:	cbz	x24, 28f8 <libintl_gettext@@Base+0x220>
    28f0:	mov	x0, x20
    28f4:	bl	20e0 <free@plt>
    28f8:	tbz	w25, #0, 290c <libintl_gettext@@Base+0x234>
    28fc:	ldr	x0, [sp, #24]
    2900:	bl	20e0 <free@plt>
    2904:	b	290c <libintl_gettext@@Base+0x234>
    2908:	mov	x21, xzr
    290c:	mov	x0, x21
    2910:	ldp	x20, x19, [sp, #128]
    2914:	ldp	x22, x21, [sp, #112]
    2918:	ldp	x24, x23, [sp, #96]
    291c:	ldp	x26, x25, [sp, #80]
    2920:	ldp	x29, x30, [sp, #64]
    2924:	add	sp, sp, #0x90
    2928:	ret
    292c:	ldr	x0, [x21, #32]
    2930:	cbz	x0, 28ec <libintl_gettext@@Base+0x214>
    2934:	add	x22, x21, #0x28
    2938:	ldr	w8, [x0, #8]
    293c:	cmp	w8, #0x0
    2940:	b.gt	2950 <libintl_gettext@@Base+0x278>
    2944:	mov	x1, x19
    2948:	bl	29ac <libintl_gettext@@Base+0x2d4>
    294c:	ldur	x0, [x22, #-8]
    2950:	ldr	x8, [x0, #16]
    2954:	cbnz	x8, 28ec <libintl_gettext@@Base+0x214>
    2958:	ldr	x0, [x22], #8
    295c:	cbnz	x0, 2938 <libintl_gettext@@Base+0x260>
    2960:	b	28ec <libintl_gettext@@Base+0x214>
    2964:	bl	2040 <abort@plt>
    2968:	ldrb	w9, [x0]
    296c:	cbz	w9, 29a4 <libintl_gettext@@Base+0x2cc>
    2970:	mov	x8, x0
    2974:	mov	x0, xzr
    2978:	add	x8, x8, #0x1
    297c:	lsl	x10, x0, #4
    2980:	add	x10, x10, w9, uxtb
    2984:	ldrb	w9, [x8], #1
    2988:	and	x11, x10, #0xf0000000
    298c:	and	x12, x10, #0xffffffff0fffffff
    2990:	eor	x11, x12, x11, lsr #24
    2994:	tst	x10, #0xf0000000
    2998:	csel	x0, x10, x11, eq  // eq = none
    299c:	cbnz	w9, 297c <libintl_gettext@@Base+0x2a4>
    29a0:	ret
    29a4:	mov	x0, xzr
    29a8:	ret
    29ac:	stp	x29, x30, [sp, #-96]!
    29b0:	stp	x28, x27, [sp, #16]
    29b4:	stp	x26, x25, [sp, #32]
    29b8:	stp	x24, x23, [sp, #48]
    29bc:	stp	x22, x21, [sp, #64]
    29c0:	stp	x20, x19, [sp, #80]
    29c4:	mov	x29, sp
    29c8:	sub	sp, sp, #0x140
    29cc:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    29d0:	ldr	x24, [x24, #4064]
    29d4:	mov	x20, x1
    29d8:	mov	x19, x0
    29dc:	cbz	x24, 29f0 <libintl_gettext@@Base+0x318>
    29e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    29e4:	add	x0, x0, #0x2c0
    29e8:	bl	2220 <pthread_mutex_lock@plt>
    29ec:	cbnz	w0, 38a8 <libintl_gettext@@Base+0x11d0>
    29f0:	ldr	w8, [x19, #8]
    29f4:	cbz	w8, 2a00 <libintl_gettext@@Base+0x328>
    29f8:	cbnz	x24, 36e0 <libintl_gettext@@Base+0x1008>
    29fc:	b	36f0 <libintl_gettext@@Base+0x1018>
    2a00:	ldr	x0, [x19]
    2a04:	mov	w8, #0xffffffff            	// #-1
    2a08:	str	w8, [x19, #8]
    2a0c:	str	xzr, [x19, #16]
    2a10:	cbz	x0, 36d4 <libintl_gettext@@Base+0xffc>
    2a14:	mov	w1, wzr
    2a18:	bl	1f40 <open@plt>
    2a1c:	cmn	w0, #0x1
    2a20:	b.eq	36d4 <libintl_gettext@@Base+0xffc>  // b.none
    2a24:	sub	x1, x29, #0x88
    2a28:	mov	w23, w0
    2a2c:	bl	6948 <bind_textdomain_codeset@@Base+0x8>
    2a30:	cbnz	w0, 377c <libintl_gettext@@Base+0x10a4>
    2a34:	ldur	x28, [x29, #-88]
    2a38:	cmp	x28, #0x30
    2a3c:	b.cc	377c <libintl_gettext@@Base+0x10a4>  // b.lo, b.ul, b.last
    2a40:	mov	w2, #0x1                   	// #1
    2a44:	mov	w3, #0x2                   	// #2
    2a48:	mov	x0, xzr
    2a4c:	mov	x1, x28
    2a50:	mov	w4, w23
    2a54:	mov	x5, xzr
    2a58:	mov	w27, #0x1                   	// #1
    2a5c:	bl	20c0 <mmap@plt>
    2a60:	cmn	x0, #0x1
    2a64:	b.eq	3710 <libintl_gettext@@Base+0x1038>  // b.none
    2a68:	mov	x22, x0
    2a6c:	mov	w0, w23
    2a70:	bl	2020 <close@plt>
    2a74:	ldr	w8, [x22]
    2a78:	mov	w9, #0x12de                	// #4830
    2a7c:	movk	w9, #0x9504, lsl #16
    2a80:	cmp	w8, w9
    2a84:	b.eq	2a98 <libintl_gettext@@Base+0x3c0>  // b.none
    2a88:	mov	w9, #0x495                 	// #1173
    2a8c:	movk	w9, #0xde12, lsl #16
    2a90:	cmp	w8, w9
    2a94:	b.ne	2b3c <libintl_gettext@@Base+0x464>  // b.any
    2a98:	mov	w0, #0xc8                  	// #200
    2a9c:	bl	1f20 <malloc@plt>
    2aa0:	cbz	x0, 2b3c <libintl_gettext@@Base+0x464>
    2aa4:	str	x0, [x19, #16]
    2aa8:	str	x22, [x0]
    2aac:	str	w27, [x0, #8]
    2ab0:	str	x28, [x0, #16]
    2ab4:	ldr	w4, [x22]
    2ab8:	mov	w8, #0x12de                	// #4830
    2abc:	movk	w8, #0x9504, lsl #16
    2ac0:	str	xzr, [x0, #32]
    2ac4:	cmp	w4, w8
    2ac8:	cset	w9, ne  // ne = any
    2acc:	stur	w9, [x29, #-184]
    2ad0:	str	w9, [x0, #24]
    2ad4:	mov	x10, x22
    2ad8:	ldr	w9, [x10, #4]!
    2adc:	mov	x23, x0
    2ae0:	stur	x10, [x29, #-192]
    2ae4:	rev	w10, w9
    2ae8:	csel	w9, w10, w9, ne  // ne = any
    2aec:	asr	w10, w9, #16
    2af0:	cmp	w10, #0x1
    2af4:	b.hi	36a8 <libintl_gettext@@Base+0xfd0>  // b.pmore
    2af8:	ldr	w10, [x22, #8]
    2afc:	cmp	w4, w8
    2b00:	b.eq	2b5c <libintl_gettext@@Base+0x484>  // b.none
    2b04:	rev	w8, w10
    2b08:	mov	x13, x23
    2b0c:	str	w8, [x13, #40]!
    2b10:	ldr	w8, [x22, #12]
    2b14:	rev	w8, w8
    2b18:	add	x8, x22, x8
    2b1c:	str	x8, [x13, #8]
    2b20:	ldr	w8, [x22, #16]
    2b24:	rev	w8, w8
    2b28:	add	x8, x22, x8
    2b2c:	str	x8, [x13, #16]
    2b30:	ldr	w8, [x22, #20]
    2b34:	rev	w8, w8
    2b38:	b	2b80 <libintl_gettext@@Base+0x4a8>
    2b3c:	cbz	w27, 2b50 <libintl_gettext@@Base+0x478>
    2b40:	mov	x0, x22
    2b44:	mov	x1, x28
    2b48:	bl	2150 <munmap@plt>
    2b4c:	b	36d4 <libintl_gettext@@Base+0xffc>
    2b50:	mov	x0, x22
    2b54:	bl	20e0 <free@plt>
    2b58:	b	36d4 <libintl_gettext@@Base+0xffc>
    2b5c:	mov	x13, x23
    2b60:	str	w10, [x13, #40]!
    2b64:	ldr	w8, [x22, #12]
    2b68:	add	x8, x22, x8
    2b6c:	str	x8, [x13, #8]
    2b70:	ldr	w8, [x22, #16]
    2b74:	add	x8, x22, x8
    2b78:	str	x8, [x13, #16]
    2b7c:	ldr	w8, [x22, #20]
    2b80:	ldur	w14, [x29, #-184]
    2b84:	cmp	w8, #0x3
    2b88:	str	w8, [x23, #88]
    2b8c:	b.cc	2bb0 <libintl_gettext@@Base+0x4d8>  // b.lo, b.ul, b.last
    2b90:	ldr	w10, [x22, #24]
    2b94:	mov	w11, #0x12de                	// #4830
    2b98:	movk	w11, #0x9504, lsl #16
    2b9c:	cmp	w4, w11
    2ba0:	rev	w12, w10
    2ba4:	csel	w10, w12, w10, ne  // ne = any
    2ba8:	add	x10, x22, x10
    2bac:	b	2bb4 <libintl_gettext@@Base+0x4dc>
    2bb0:	mov	x10, xzr
    2bb4:	tst	w9, #0xffff
    2bb8:	str	x10, [x23, #96]
    2bbc:	str	w14, [x23, #104]
    2bc0:	b.eq	2c04 <libintl_gettext@@Base+0x52c>  // b.none
    2bc4:	stur	x13, [x29, #-200]
    2bc8:	cbz	x10, 36a8 <libintl_gettext@@Base+0xfd0>
    2bcc:	ldr	w9, [x22, #36]
    2bd0:	mov	w11, #0x12de                	// #4830
    2bd4:	movk	w11, #0x9504, lsl #16
    2bd8:	cmp	w4, w11
    2bdc:	rev	w10, w9
    2be0:	csel	w9, w10, w9, ne  // ne = any
    2be4:	cbz	w9, 2c04 <libintl_gettext@@Base+0x52c>
    2be8:	ldr	w10, [x22, #28]
    2bec:	cmp	w4, w11
    2bf0:	b.eq	2c54 <libintl_gettext@@Base+0x57c>  // b.none
    2bf4:	ldr	w11, [x22, #32]
    2bf8:	rev	w10, w10
    2bfc:	rev	w11, w11
    2c00:	b	2c58 <libintl_gettext@@Base+0x580>
    2c04:	str	wzr, [x23, #64]
    2c08:	stp	xzr, xzr, [x23, #72]
    2c0c:	stp	xzr, xzr, [x23, #112]
    2c10:	cbz	x24, 2c20 <libintl_gettext@@Base+0x548>
    2c14:	add	x0, x23, #0x80
    2c18:	bl	6020 <libintl_ngettext@@Base+0x8b0>
    2c1c:	cbnz	w0, 38a8 <libintl_gettext@@Base+0x11d0>
    2c20:	adrp	x2, 6000 <libintl_ngettext@@Base+0x890>
    2c24:	add	x2, x2, #0x9f1
    2c28:	sub	x4, x29, #0x98
    2c2c:	mov	x0, x19
    2c30:	mov	x1, x20
    2c34:	mov	w3, wzr
    2c38:	bl	4e14 <libintl_textdomain@@Base+0x1074>
    2c3c:	cmn	x0, #0x1
    2c40:	b.eq	3788 <libintl_gettext@@Base+0x10b0>  // b.none
    2c44:	add	x1, x23, #0xb8
    2c48:	add	x2, x23, #0xc0
    2c4c:	bl	5eec <libintl_ngettext@@Base+0x77c>
    2c50:	b	36d4 <libintl_gettext@@Base+0xffc>
    2c54:	ldr	w11, [x22, #32]
    2c58:	mov	w13, w10
    2c5c:	stur	x13, [x29, #-176]
    2c60:	lsl	x13, x13, #3
    2c64:	add	x13, x13, #0xf
    2c68:	mov	x12, sp
    2c6c:	and	x13, x13, #0xffffffff0
    2c70:	sub	x12, x12, x13
    2c74:	stur	x12, [x29, #-160]
    2c78:	mov	sp, x12
    2c7c:	stur	w4, [x29, #-164]
    2c80:	cbz	w10, 3214 <libintl_gettext@@Base+0xb3c>
    2c84:	ldur	x26, [x29, #-176]
    2c88:	ldur	x17, [x29, #-160]
    2c8c:	mov	x14, #0x1001                	// #4097
    2c90:	add	x10, x22, w11, uxtw
    2c94:	mov	w11, #0x12de                	// #4830
    2c98:	adrp	x12, 6000 <libintl_ngettext@@Base+0x890>
    2c9c:	movk	x14, #0x2082, lsl #16
    2ca0:	adrp	x15, 6000 <libintl_ngettext@@Base+0x890>
    2ca4:	adrp	x16, 6000 <libintl_ngettext@@Base+0x890>
    2ca8:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    2cac:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    2cb0:	adrp	x2, 6000 <libintl_ngettext@@Base+0x890>
    2cb4:	adrp	x3, 6000 <libintl_ngettext@@Base+0x890>
    2cb8:	adrp	x6, 6000 <libintl_ngettext@@Base+0x890>
    2cbc:	adrp	x7, 6000 <libintl_ngettext@@Base+0x890>
    2cc0:	adrp	x30, 6000 <libintl_ngettext@@Base+0x890>
    2cc4:	movk	w11, #0x9504, lsl #16
    2cc8:	add	x12, x12, #0xd3e
    2ccc:	mov	w13, #0x1                   	// #1
    2cd0:	movk	x14, #0x1, lsl #32
    2cd4:	add	x15, x15, #0x968
    2cd8:	add	x16, x16, #0xcdf
    2cdc:	add	x0, x0, #0x987
    2ce0:	add	x1, x1, #0x98a
    2ce4:	add	x2, x2, #0x98d
    2ce8:	add	x3, x3, #0x980
    2cec:	add	x6, x6, #0x986
    2cf0:	add	x7, x7, #0x989
    2cf4:	add	x30, x30, #0x98c
    2cf8:	ldr	w18, [x10, #4]
    2cfc:	cmp	w4, w11
    2d00:	b.eq	2d14 <libintl_gettext@@Base+0x63c>  // b.none
    2d04:	ldr	w4, [x10]
    2d08:	rev	w18, w18
    2d0c:	rev	w4, w4
    2d10:	b	2d18 <libintl_gettext@@Base+0x640>
    2d14:	ldr	w4, [x10]
    2d18:	cbz	w4, 36a8 <libintl_gettext@@Base+0xfd0>
    2d1c:	add	x18, x22, w18, uxtw
    2d20:	sub	w4, w4, #0x1
    2d24:	ldrb	w4, [x18, w4, uxtw]
    2d28:	cbnz	w4, 36a8 <libintl_gettext@@Base+0xfd0>
    2d2c:	ldrb	w4, [x18]
    2d30:	cmp	w4, #0x49
    2d34:	b.eq	2db4 <libintl_gettext@@Base+0x6dc>  // b.none
    2d38:	cmp	w4, #0x50
    2d3c:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2d40:	ldrb	w4, [x18, #1]
    2d44:	cmp	w4, #0x52
    2d48:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2d4c:	ldrb	w4, [x18, #2]
    2d50:	cmp	w4, #0x49
    2d54:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2d58:	ldrb	w4, [x18, #3]
    2d5c:	sub	w21, w4, #0x58
    2d60:	cmp	w21, #0x20
    2d64:	b.hi	2dbc <libintl_gettext@@Base+0x6e4>  // b.pmore
    2d68:	lsl	x21, x13, x21
    2d6c:	tst	x21, x14
    2d70:	b.eq	2dbc <libintl_gettext@@Base+0x6e4>  // b.none
    2d74:	ldrb	w21, [x18, #4]
    2d78:	cmp	w21, #0x45
    2d7c:	b.gt	2de0 <libintl_gettext@@Base+0x708>
    2d80:	sub	w21, w21, #0x31
    2d84:	cmp	w21, #0x7
    2d88:	b.hi	2dbc <libintl_gettext@@Base+0x6e4>  // b.pmore
    2d8c:	mov	w5, w27
    2d90:	adr	x25, 2da4 <libintl_gettext@@Base+0x6cc>
    2d94:	ldrb	w27, [x15, x21]
    2d98:	add	x25, x25, x27, lsl #2
    2d9c:	mov	w27, w5
    2da0:	br	x25
    2da4:	ldrb	w21, [x18, #5]
    2da8:	cmp	w21, #0x36
    2dac:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2db0:	b	2ea0 <libintl_gettext@@Base+0x7c8>
    2db4:	ldrb	w18, [x18, #1]
    2db8:	cbz	w18, 2dd8 <libintl_gettext@@Base+0x700>
    2dbc:	mov	x18, xzr
    2dc0:	ldur	w4, [x29, #-164]
    2dc4:	str	x18, [x17], #8
    2dc8:	subs	x26, x26, #0x1
    2dcc:	add	x10, x10, #0x8
    2dd0:	b.ne	2cf8 <libintl_gettext@@Base+0x620>  // b.any
    2dd4:	b	3214 <libintl_gettext@@Base+0xb3c>
    2dd8:	mov	x18, x12
    2ddc:	b	2dc0 <libintl_gettext@@Base+0x6e8>
    2de0:	cmp	w21, #0x4c
    2de4:	b.gt	2e68 <libintl_gettext@@Base+0x790>
    2de8:	cmp	w21, #0x46
    2dec:	b.eq	2f34 <libintl_gettext@@Base+0x85c>  // b.none
    2df0:	cmp	w21, #0x4c
    2df4:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2df8:	ldrb	w21, [x18, #5]
    2dfc:	cmp	w21, #0x45
    2e00:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e04:	ldrb	w21, [x18, #6]
    2e08:	cmp	w21, #0x41
    2e0c:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e10:	ldrb	w21, [x18, #7]
    2e14:	cmp	w21, #0x53
    2e18:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e1c:	ldrb	w21, [x18, #8]
    2e20:	cmp	w21, #0x54
    2e24:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e28:	ldrb	w21, [x18, #9]
    2e2c:	sub	w21, w21, #0x31
    2e30:	cmp	w21, #0x7
    2e34:	b.hi	2dbc <libintl_gettext@@Base+0x6e4>  // b.pmore
    2e38:	adrp	x5, 6000 <libintl_ngettext@@Base+0x890>
    2e3c:	add	x5, x5, #0x978
    2e40:	stur	w27, [x29, #-228]
    2e44:	adr	x25, 2dbc <libintl_gettext@@Base+0x6e4>
    2e48:	ldrb	w27, [x5, x21]
    2e4c:	add	x25, x25, x27, lsl #2
    2e50:	ldur	w27, [x29, #-228]
    2e54:	br	x25
    2e58:	ldrb	w21, [x18, #10]
    2e5c:	cmp	w21, #0x36
    2e60:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e64:	b	312c <libintl_gettext@@Base+0xa54>
    2e68:	cmp	w21, #0x4d
    2e6c:	b.eq	2f98 <libintl_gettext@@Base+0x8c0>  // b.none
    2e70:	cmp	w21, #0x50
    2e74:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e78:	ldrb	w21, [x18, #5]
    2e7c:	cmp	w21, #0x54
    2e80:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e84:	ldrb	w21, [x18, #6]
    2e88:	cmp	w21, #0x52
    2e8c:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2e90:	b	2fb0 <libintl_gettext@@Base+0x8d8>
    2e94:	ldrb	w21, [x18, #5]
    2e98:	cmp	w21, #0x32
    2e9c:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2ea0:	ldrb	w18, [x18, #6]
    2ea4:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    2ea8:	mov	x21, x28
    2eac:	cmp	w4, #0x6e
    2eb0:	b.gt	2ff8 <libintl_gettext@@Base+0x920>
    2eb4:	cmp	w4, #0x58
    2eb8:	b.eq	3040 <libintl_gettext@@Base+0x968>  // b.none
    2ebc:	cmp	w4, #0x64
    2ec0:	mov	x18, x16
    2ec4:	mov	x28, x21
    2ec8:	mov	w27, w5
    2ecc:	b.eq	2dc0 <libintl_gettext@@Base+0x6e8>  // b.none
    2ed0:	cmp	w4, #0x69
    2ed4:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    2ed8:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    2edc:	add	x18, x18, #0x984
    2ee0:	b	30a8 <libintl_gettext@@Base+0x9d0>
    2ee4:	ldrb	w21, [x18, #5]
    2ee8:	cmp	w21, #0x34
    2eec:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2ef0:	ldrb	w18, [x18, #6]
    2ef4:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    2ef8:	b	2fbc <libintl_gettext@@Base+0x8e4>
    2efc:	ldrb	w18, [x18, #5]
    2f00:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    2f04:	cmp	w4, #0x6e
    2f08:	b.gt	3010 <libintl_gettext@@Base+0x938>
    2f0c:	cmp	w4, #0x58
    2f10:	b.eq	304c <libintl_gettext@@Base+0x974>  // b.none
    2f14:	cmp	w4, #0x64
    2f18:	mov	x18, x16
    2f1c:	b.eq	2dc0 <libintl_gettext@@Base+0x6e8>  // b.none
    2f20:	cmp	w4, #0x69
    2f24:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    2f28:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    2f2c:	add	x18, x18, #0x984
    2f30:	b	30ac <libintl_gettext@@Base+0x9d4>
    2f34:	ldrb	w21, [x18, #5]
    2f38:	cmp	w21, #0x41
    2f3c:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2f40:	ldrb	w21, [x18, #6]
    2f44:	cmp	w21, #0x53
    2f48:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2f4c:	ldrb	w21, [x18, #7]
    2f50:	cmp	w21, #0x54
    2f54:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2f58:	ldrb	w21, [x18, #8]
    2f5c:	sub	w21, w21, #0x31
    2f60:	cmp	w21, #0x7
    2f64:	b.hi	2dbc <libintl_gettext@@Base+0x6e4>  // b.pmore
    2f68:	adrp	x5, 6000 <libintl_ngettext@@Base+0x890>
    2f6c:	add	x5, x5, #0x970
    2f70:	stur	w27, [x29, #-228]
    2f74:	adr	x25, 2dbc <libintl_gettext@@Base+0x6e4>
    2f78:	ldrb	w27, [x5, x21]
    2f7c:	add	x25, x25, x27, lsl #2
    2f80:	ldur	w27, [x29, #-228]
    2f84:	br	x25
    2f88:	ldrb	w21, [x18, #9]
    2f8c:	cmp	w21, #0x36
    2f90:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2f94:	b	30d0 <libintl_gettext@@Base+0x9f8>
    2f98:	ldrb	w21, [x18, #5]
    2f9c:	cmp	w21, #0x41
    2fa0:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2fa4:	ldrb	w21, [x18, #6]
    2fa8:	cmp	w21, #0x58
    2fac:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    2fb0:	ldrb	w18, [x18, #7]
    2fb4:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    2fb8:	mov	w5, w27
    2fbc:	mov	x21, x28
    2fc0:	cmp	w4, #0x6e
    2fc4:	b.gt	3028 <libintl_gettext@@Base+0x950>
    2fc8:	cmp	w4, #0x58
    2fcc:	b.eq	3088 <libintl_gettext@@Base+0x9b0>  // b.none
    2fd0:	cmp	w4, #0x64
    2fd4:	mov	x18, x3
    2fd8:	mov	x28, x21
    2fdc:	mov	w27, w5
    2fe0:	b.eq	2dc0 <libintl_gettext@@Base+0x6e8>  // b.none
    2fe4:	cmp	w4, #0x69
    2fe8:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    2fec:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    2ff0:	add	x18, x18, #0x983
    2ff4:	b	30a8 <libintl_gettext@@Base+0x9d0>
    2ff8:	cmp	w4, #0x6f
    2ffc:	b.eq	3058 <libintl_gettext@@Base+0x980>  // b.none
    3000:	cmp	w4, #0x75
    3004:	b.ne	3060 <libintl_gettext@@Base+0x988>  // b.any
    3008:	mov	x18, x1
    300c:	b	30a8 <libintl_gettext@@Base+0x9d0>
    3010:	cmp	w4, #0x6f
    3014:	b.eq	3070 <libintl_gettext@@Base+0x998>  // b.none
    3018:	cmp	w4, #0x75
    301c:	b.ne	3078 <libintl_gettext@@Base+0x9a0>  // b.any
    3020:	mov	x18, x1
    3024:	b	30ac <libintl_gettext@@Base+0x9d4>
    3028:	cmp	w4, #0x6f
    302c:	b.eq	3094 <libintl_gettext@@Base+0x9bc>  // b.none
    3030:	cmp	w4, #0x75
    3034:	b.ne	309c <libintl_gettext@@Base+0x9c4>  // b.any
    3038:	mov	x18, x7
    303c:	b	30a8 <libintl_gettext@@Base+0x9d0>
    3040:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    3044:	add	x18, x18, #0x9ca
    3048:	b	30a8 <libintl_gettext@@Base+0x9d0>
    304c:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    3050:	add	x18, x18, #0x9ca
    3054:	b	2dc0 <libintl_gettext@@Base+0x6e8>
    3058:	mov	x18, x0
    305c:	b	30a8 <libintl_gettext@@Base+0x9d0>
    3060:	cmp	w4, #0x78
    3064:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    3068:	mov	x18, x2
    306c:	b	30a8 <libintl_gettext@@Base+0x9d0>
    3070:	mov	x18, x0
    3074:	b	30ac <libintl_gettext@@Base+0x9d4>
    3078:	cmp	w4, #0x78
    307c:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    3080:	mov	x18, x2
    3084:	b	30ac <libintl_gettext@@Base+0x9d4>
    3088:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    308c:	add	x18, x18, #0x98f
    3090:	b	30a8 <libintl_gettext@@Base+0x9d0>
    3094:	mov	x18, x6
    3098:	b	30a8 <libintl_gettext@@Base+0x9d0>
    309c:	cmp	w4, #0x78
    30a0:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    30a4:	mov	x18, x30
    30a8:	mov	x28, x21
    30ac:	mov	w27, w5
    30b0:	b	2dc0 <libintl_gettext@@Base+0x6e8>
    30b4:	ldrb	w21, [x18, #9]
    30b8:	cmp	w21, #0x32
    30bc:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    30c0:	b	30d0 <libintl_gettext@@Base+0x9f8>
    30c4:	ldrb	w21, [x18, #9]
    30c8:	cmp	w21, #0x34
    30cc:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    30d0:	ldrb	w18, [x18, #10]
    30d4:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    30d8:	mov	x21, x28
    30dc:	cmp	w4, #0x6e
    30e0:	b.gt	31ac <libintl_gettext@@Base+0xad4>
    30e4:	cmp	w4, #0x58
    30e8:	b.eq	31e8 <libintl_gettext@@Base+0xb10>  // b.none
    30ec:	ldur	w27, [x29, #-228]
    30f0:	cmp	w4, #0x64
    30f4:	mov	x18, x3
    30f8:	mov	x28, x21
    30fc:	b.eq	2dc0 <libintl_gettext@@Base+0x6e8>  // b.none
    3100:	cmp	w4, #0x69
    3104:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    3108:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    310c:	add	x18, x18, #0x983
    3110:	b	3208 <libintl_gettext@@Base+0xb30>
    3114:	ldrb	w18, [x18, #9]
    3118:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    311c:	b	3158 <libintl_gettext@@Base+0xa80>
    3120:	ldrb	w21, [x18, #10]
    3124:	cmp	w21, #0x32
    3128:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    312c:	ldrb	w18, [x18, #11]
    3130:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    3134:	b	3158 <libintl_gettext@@Base+0xa80>
    3138:	ldrb	w21, [x18, #10]
    313c:	cmp	w21, #0x34
    3140:	b.ne	2dbc <libintl_gettext@@Base+0x6e4>  // b.any
    3144:	ldrb	w18, [x18, #11]
    3148:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    314c:	b	30d8 <libintl_gettext@@Base+0xa00>
    3150:	ldrb	w18, [x18, #10]
    3154:	cbnz	w18, 2dbc <libintl_gettext@@Base+0x6e4>
    3158:	mov	x21, x28
    315c:	cmp	w4, #0x6e
    3160:	b.gt	3194 <libintl_gettext@@Base+0xabc>
    3164:	cmp	w4, #0x58
    3168:	b.eq	31c4 <libintl_gettext@@Base+0xaec>  // b.none
    316c:	ldur	w27, [x29, #-228]
    3170:	cmp	w4, #0x64
    3174:	mov	x18, x16
    3178:	mov	x28, x21
    317c:	b.eq	2dc0 <libintl_gettext@@Base+0x6e8>  // b.none
    3180:	cmp	w4, #0x69
    3184:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    3188:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    318c:	add	x18, x18, #0x984
    3190:	b	3208 <libintl_gettext@@Base+0xb30>
    3194:	cmp	w4, #0x6f
    3198:	b.eq	31d0 <libintl_gettext@@Base+0xaf8>  // b.none
    319c:	cmp	w4, #0x75
    31a0:	b.ne	31d8 <libintl_gettext@@Base+0xb00>  // b.any
    31a4:	mov	x18, x1
    31a8:	b	3208 <libintl_gettext@@Base+0xb30>
    31ac:	cmp	w4, #0x6f
    31b0:	b.eq	31f4 <libintl_gettext@@Base+0xb1c>  // b.none
    31b4:	cmp	w4, #0x75
    31b8:	b.ne	31fc <libintl_gettext@@Base+0xb24>  // b.any
    31bc:	mov	x18, x7
    31c0:	b	3208 <libintl_gettext@@Base+0xb30>
    31c4:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    31c8:	add	x18, x18, #0x9ca
    31cc:	b	3208 <libintl_gettext@@Base+0xb30>
    31d0:	mov	x18, x0
    31d4:	b	3208 <libintl_gettext@@Base+0xb30>
    31d8:	cmp	w4, #0x78
    31dc:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    31e0:	mov	x18, x2
    31e4:	b	3208 <libintl_gettext@@Base+0xb30>
    31e8:	adrp	x18, 6000 <libintl_ngettext@@Base+0x890>
    31ec:	add	x18, x18, #0x98f
    31f0:	b	3208 <libintl_gettext@@Base+0xb30>
    31f4:	mov	x18, x6
    31f8:	b	3208 <libintl_gettext@@Base+0xb30>
    31fc:	cmp	w4, #0x78
    3200:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    3204:	mov	x18, x30
    3208:	ldur	w27, [x29, #-228]
    320c:	mov	x28, x21
    3210:	b	2dc0 <libintl_gettext@@Base+0x6e8>
    3214:	ldr	w10, [x22, #40]
    3218:	mov	w11, #0x12de                	// #4830
    321c:	movk	w11, #0x9504, lsl #16
    3220:	cmp	w4, w11
    3224:	b.eq	3238 <libintl_gettext@@Base+0xb60>  // b.none
    3228:	ldr	w11, [x22, #44]
    322c:	rev	w10, w10
    3230:	rev	w11, w11
    3234:	b	323c <libintl_gettext@@Base+0xb64>
    3238:	ldr	w11, [x22, #44]
    323c:	mov	w8, w8
    3240:	mov	w9, w9
    3244:	stp	x9, x28, [x29, #-248]
    3248:	lsl	x8, x8, #2
    324c:	sub	x9, x29, #0x10
    3250:	add	x12, x22, w10, uxtw
    3254:	add	x11, x22, w11, uxtw
    3258:	stur	x8, [x9, #-256]
    325c:	sub	x9, x29, #0x8
    3260:	stur	w27, [x29, #-228]
    3264:	stur	xzr, [x29, #-208]
    3268:	stur	wzr, [x29, #-252]
    326c:	stur	x8, [x9, #-256]
    3270:	stp	x11, x12, [x29, #-224]
    3274:	mov	x28, xzr
    3278:	mov	w27, #0x1                   	// #1
    327c:	ldur	x9, [x29, #-208]
    3280:	cmp	x28, #0x0
    3284:	csel	x8, x12, x11, eq  // eq = none
    3288:	ldr	w8, [x8, x9, lsl #2]
    328c:	mov	w9, #0x12de                	// #4830
    3290:	movk	w9, #0x9504, lsl #16
    3294:	cmp	w4, w9
    3298:	b.eq	32bc <libintl_gettext@@Base+0xbe4>  // b.none
    329c:	rev	w8, w8
    32a0:	add	x8, x22, x8
    32a4:	ldr	w9, [x8]
    32a8:	ldr	w10, [x8, #8]
    32ac:	add	x8, x8, #0x4
    32b0:	rev	w9, w9
    32b4:	rev	w10, w10
    32b8:	b	32cc <libintl_gettext@@Base+0xbf4>
    32bc:	add	x8, x22, x8
    32c0:	ldr	w9, [x8]
    32c4:	ldr	w10, [x8, #8]
    32c8:	add	x8, x8, #0x4
    32cc:	cmn	w10, #0x1
    32d0:	add	x25, x22, w9, uxtw
    32d4:	b.eq	3350 <libintl_gettext@@Base+0xc78>  // b.none
    32d8:	mov	x9, xzr
    32dc:	add	x21, x8, #0x4
    32e0:	ldur	w8, [x21, #-4]
    32e4:	mov	w10, #0x12de                	// #4830
    32e8:	movk	w10, #0x9504, lsl #16
    32ec:	cmp	w4, w10
    32f0:	b.eq	3304 <libintl_gettext@@Base+0xc2c>  // b.none
    32f4:	ldr	w10, [x21]
    32f8:	rev	w11, w8
    32fc:	rev	w10, w10
    3300:	b	330c <libintl_gettext@@Base+0xc34>
    3304:	ldr	w10, [x21]
    3308:	mov	w11, w8
    330c:	cmn	w10, #0x1
    3310:	add	x26, x9, w11, uxtw
    3314:	b.eq	3358 <libintl_gettext@@Base+0xc80>  // b.none
    3318:	ldur	x8, [x29, #-176]
    331c:	cmp	w10, w8
    3320:	b.cs	36a0 <libintl_gettext@@Base+0xfc8>  // b.hs, b.nlast
    3324:	ldur	x8, [x29, #-160]
    3328:	ldr	x0, [x8, w10, uxtw #3]
    332c:	mov	w8, w11
    3330:	add	x25, x25, x8
    3334:	cmp	x0, #0x0
    3338:	csel	w27, wzr, w27, eq  // eq = none
    333c:	bl	1dc0 <strlen@plt>
    3340:	ldur	w4, [x29, #-164]
    3344:	add	x9, x0, x26
    3348:	add	x21, x21, #0x8
    334c:	b	32e0 <libintl_gettext@@Base+0xc08>
    3350:	ldr	w8, [x8]
    3354:	mov	x26, xzr
    3358:	mov	w10, #0x12de                	// #4830
    335c:	movk	w10, #0x9504, lsl #16
    3360:	rev	w9, w8
    3364:	cmp	w4, w10
    3368:	csel	w8, w9, w8, ne  // ne = any
    336c:	cbz	w8, 36a0 <libintl_gettext@@Base+0xfc8>
    3370:	sub	w8, w8, #0x1
    3374:	ldrb	w8, [x25, w8, uxtw]
    3378:	cbnz	w8, 36a0 <libintl_gettext@@Base+0xfc8>
    337c:	sub	x8, x29, #0x98
    3380:	str	x26, [x8, x28, lsl #3]
    3384:	cbz	w27, 33c4 <libintl_gettext@@Base+0xcec>
    3388:	ldp	x11, x12, [x29, #-224]
    338c:	add	x28, x28, #0x1
    3390:	cmp	x28, #0x2
    3394:	b.ne	327c <libintl_gettext@@Base+0xba4>  // b.any
    3398:	ldur	w10, [x29, #-252]
    339c:	ldp	x8, x9, [x29, #-152]
    33a0:	add	w10, w10, #0x1
    33a4:	stur	w10, [x29, #-252]
    33a8:	sub	x10, x29, #0x8
    33ac:	ldur	x10, [x10, #-256]
    33b0:	add	x8, x8, x10
    33b4:	add	x8, x8, x9
    33b8:	sub	x9, x29, #0x8
    33bc:	stur	x8, [x9, #-256]
    33c0:	b	33c8 <libintl_gettext@@Base+0xcf0>
    33c4:	ldp	x11, x12, [x29, #-224]
    33c8:	ldur	x9, [x29, #-208]
    33cc:	ldur	x8, [x29, #-248]
    33d0:	add	x9, x9, #0x1
    33d4:	cmp	x9, x8
    33d8:	stur	x9, [x29, #-208]
    33dc:	b.cc	3274 <libintl_gettext@@Base+0xb9c>  // b.lo, b.ul, b.last
    33e0:	ldur	w8, [x29, #-252]
    33e4:	cbz	w8, 3894 <libintl_gettext@@Base+0x11bc>
    33e8:	ldur	w8, [x29, #-252]
    33ec:	sub	x9, x29, #0x8
    33f0:	ldur	x9, [x9, #-256]
    33f4:	lsl	w8, w8, #1
    33f8:	add	x0, x9, w8, uxtw #4
    33fc:	bl	1f20 <malloc@plt>
    3400:	ldur	x28, [x29, #-240]
    3404:	ldur	w27, [x29, #-228]
    3408:	stur	x0, [x29, #-208]
    340c:	cbz	x0, 36a8 <libintl_gettext@@Base+0xfd0>
    3410:	sub	x8, x29, #0x24
    3414:	stur	wzr, [x8, #-256]
    3418:	ldur	w8, [x29, #-252]
    341c:	ldur	x9, [x29, #-208]
    3420:	sub	x11, x29, #0x38
    3424:	ldur	x13, [x29, #-192]
    3428:	mov	w10, w8
    342c:	str	x9, [x23, #32]
    3430:	stur	x10, [x11, #-256]
    3434:	add	x9, x9, w8, uxtw #4
    3438:	sub	x10, x29, #0x18
    343c:	stur	x9, [x10, #-256]
    3440:	add	x8, x9, w8, uxtw #4
    3444:	sub	x9, x29, #0x30
    3448:	stur	x8, [x9, #-256]
    344c:	sub	x9, x29, #0x10
    3450:	ldur	x9, [x9, #-256]
    3454:	ldur	w14, [x29, #-184]
    3458:	ldp	x16, x15, [x29, #-224]
    345c:	mov	x17, xzr
    3460:	add	x25, x8, x9
    3464:	add	x8, x22, #0x8
    3468:	sub	x9, x29, #0x20
    346c:	stur	x8, [x9, #-256]
    3470:	mov	w8, #0x1                   	// #1
    3474:	mov	w9, #0x1                   	// #1
    3478:	tst	w9, #0x1
    347c:	csel	x10, x15, x16, ne  // ne = any
    3480:	ldr	w10, [x10, x17, lsl #2]
    3484:	cbz	w14, 349c <libintl_gettext@@Base+0xdc4>
    3488:	rev	w10, w10
    348c:	add	x10, x13, x10
    3490:	ldr	w11, [x10, #4]
    3494:	rev	w12, w11
    3498:	b	34a8 <libintl_gettext@@Base+0xdd0>
    349c:	add	x10, x13, x10
    34a0:	ldr	w11, [x10, #4]
    34a4:	mov	w12, w11
    34a8:	cmn	w12, #0x1
    34ac:	b.eq	34f4 <libintl_gettext@@Base+0xe1c>  // b.none
    34b0:	rev	w12, w11
    34b4:	cmp	w14, #0x0
    34b8:	csel	w11, w11, w12, eq  // eq = none
    34bc:	cmn	w11, #0x1
    34c0:	b.eq	34f4 <libintl_gettext@@Base+0xe1c>  // b.none
    34c4:	add	x10, x10, #0xc
    34c8:	ldur	x12, [x29, #-160]
    34cc:	ldr	x11, [x12, w11, uxtw #3]
    34d0:	cbz	x11, 34f0 <libintl_gettext@@Base+0xe18>
    34d4:	ldr	w11, [x10], #8
    34d8:	cmp	w14, #0x0
    34dc:	rev	w12, w11
    34e0:	csel	w11, w11, w12, eq  // eq = none
    34e4:	cmn	w11, #0x1
    34e8:	b.ne	34c8 <libintl_gettext@@Base+0xdf0>  // b.any
    34ec:	b	34f4 <libintl_gettext@@Base+0xe1c>
    34f0:	mov	w8, wzr
    34f4:	cmp	w8, #0x0
    34f8:	cset	w10, ne  // ne = any
    34fc:	and	w10, w10, w9
    3500:	mov	w9, wzr
    3504:	tbnz	w10, #0, 3478 <libintl_gettext@@Base+0xda0>
    3508:	cbz	w8, 3688 <libintl_gettext@@Base+0xfb0>
    350c:	sub	x8, x29, #0x24
    3510:	ldur	w8, [x8, #-256]
    3514:	sub	x9, x29, #0x8
    3518:	mov	w18, wzr
    351c:	mov	w8, w8
    3520:	stur	x8, [x9, #-256]
    3524:	sub	x8, x29, #0x10
    3528:	stur	x17, [x8, #-256]
    352c:	cmp	w18, #0x0
    3530:	csel	x8, x15, x16, eq  // eq = none
    3534:	ldr	w8, [x8, x17, lsl #2]
    3538:	cbz	w14, 354c <libintl_gettext@@Base+0xe74>
    353c:	rev	w8, w8
    3540:	ldr	w9, [x22, w8, uxtw]
    3544:	rev	w9, w9
    3548:	b	3550 <libintl_gettext@@Base+0xe78>
    354c:	ldr	w9, [x22, x8]
    3550:	add	x10, x13, x8
    3554:	sub	x12, x29, #0x18
    3558:	ldr	w11, [x10, #4]
    355c:	add	x26, x22, w9, uxtw
    3560:	ldur	x9, [x29, #-208]
    3564:	ldur	x12, [x12, #-256]
    3568:	cmp	w18, #0x0
    356c:	csel	x9, x9, x12, eq  // eq = none
    3570:	rev	w12, w11
    3574:	cmp	w14, #0x0
    3578:	csel	w11, w11, w12, eq  // eq = none
    357c:	cmn	w11, #0x1
    3580:	sub	x11, x29, #0x8
    3584:	ldur	x11, [x11, #-256]
    3588:	add	x11, x9, x11, lsl #4
    358c:	b.eq	364c <libintl_gettext@@Base+0xf74>  // b.none
    3590:	sub	x9, x29, #0x20
    3594:	ldur	x9, [x9, #-256]
    3598:	stur	x11, [x29, #-176]
    359c:	str	x25, [x11, #8]!
    35a0:	stur	w18, [x29, #-164]
    35a4:	add	x21, x9, x8
    35a8:	stur	x11, [x29, #-184]
    35ac:	ldur	w28, [x21, #-4]
    35b0:	cbz	w14, 3618 <libintl_gettext@@Base+0xf40>
    35b4:	ldr	w8, [x21]
    35b8:	rev	w28, w28
    35bc:	rev	w27, w8
    35c0:	cbz	w28, 35dc <libintl_gettext@@Base+0xf04>
    35c4:	mov	w2, w28
    35c8:	mov	x0, x25
    35cc:	mov	x1, x26
    35d0:	bl	1d70 <memcpy@plt>
    35d4:	add	x25, x25, w28, uxtw
    35d8:	add	x26, x26, w28, uxtw
    35dc:	cmn	w27, #0x1
    35e0:	b.eq	3624 <libintl_gettext@@Base+0xf4c>  // b.none
    35e4:	ldur	x8, [x29, #-160]
    35e8:	ldr	x27, [x8, w27, uxtw #3]
    35ec:	mov	x0, x27
    35f0:	bl	1dc0 <strlen@plt>
    35f4:	mov	x28, x0
    35f8:	mov	x0, x25
    35fc:	mov	x1, x27
    3600:	mov	x2, x28
    3604:	bl	1d70 <memcpy@plt>
    3608:	ldr	w14, [x23, #24]
    360c:	add	x25, x25, x28
    3610:	add	x21, x21, #0x8
    3614:	b	35ac <libintl_gettext@@Base+0xed4>
    3618:	ldr	w27, [x21]
    361c:	cbnz	w28, 35c4 <libintl_gettext@@Base+0xeec>
    3620:	b	35dc <libintl_gettext@@Base+0xf04>
    3624:	ldp	x8, x9, [x29, #-184]
    3628:	ldur	x13, [x29, #-192]
    362c:	ldp	x16, x15, [x29, #-224]
    3630:	ldur	w18, [x29, #-164]
    3634:	ldr	x8, [x8]
    3638:	sub	x8, x25, x8
    363c:	str	x8, [x9]
    3640:	sub	x8, x29, #0x10
    3644:	ldur	x17, [x8, #-256]
    3648:	b	3660 <libintl_gettext@@Base+0xf88>
    364c:	ldr	w8, [x10]
    3650:	cmp	w14, #0x0
    3654:	rev	w9, w8
    3658:	csel	w8, w8, w9, eq  // eq = none
    365c:	stp	x8, x26, [x11]
    3660:	add	w18, w18, #0x1
    3664:	cmp	w18, #0x2
    3668:	b.eq	3674 <libintl_gettext@@Base+0xf9c>  // b.none
    366c:	ldr	w14, [x23, #24]
    3670:	b	352c <libintl_gettext@@Base+0xe54>
    3674:	sub	x8, x29, #0x24
    3678:	ldur	w8, [x8, #-256]
    367c:	sub	x9, x29, #0x24
    3680:	add	w8, w8, #0x1
    3684:	stur	w8, [x9, #-256]
    3688:	ldur	x8, [x29, #-248]
    368c:	add	x17, x17, #0x1
    3690:	cmp	x17, x8
    3694:	b.cs	379c <libintl_gettext@@Base+0x10c4>  // b.hs, b.nlast
    3698:	ldr	w14, [x23, #24]
    369c:	b	3470 <libintl_gettext@@Base+0xd98>
    36a0:	ldur	x28, [x29, #-240]
    36a4:	ldur	w27, [x29, #-228]
    36a8:	ldr	x0, [x23, #32]
    36ac:	bl	20e0 <free@plt>
    36b0:	mov	x0, x22
    36b4:	cbz	w27, 36c4 <libintl_gettext@@Base+0xfec>
    36b8:	mov	x1, x28
    36bc:	bl	2150 <munmap@plt>
    36c0:	b	36c8 <libintl_gettext@@Base+0xff0>
    36c4:	bl	20e0 <free@plt>
    36c8:	mov	x0, x23
    36cc:	bl	20e0 <free@plt>
    36d0:	str	xzr, [x19, #16]
    36d4:	mov	w8, #0x1                   	// #1
    36d8:	str	w8, [x19, #8]
    36dc:	cbz	x24, 36f0 <libintl_gettext@@Base+0x1018>
    36e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    36e4:	add	x0, x0, #0x2c0
    36e8:	bl	2230 <pthread_mutex_unlock@plt>
    36ec:	cbnz	w0, 38a8 <libintl_gettext@@Base+0x11d0>
    36f0:	mov	sp, x29
    36f4:	ldp	x20, x19, [sp, #80]
    36f8:	ldp	x22, x21, [sp, #64]
    36fc:	ldp	x24, x23, [sp, #48]
    3700:	ldp	x26, x25, [sp, #32]
    3704:	ldp	x28, x27, [sp, #16]
    3708:	ldp	x29, x30, [sp], #96
    370c:	ret
    3710:	mov	x0, x28
    3714:	bl	1f20 <malloc@plt>
    3718:	cbz	x0, 377c <libintl_gettext@@Base+0x10a4>
    371c:	mov	x22, x0
    3720:	mov	x26, x0
    3724:	mov	x21, x28
    3728:	mov	w0, w23
    372c:	mov	x1, x26
    3730:	mov	x2, x28
    3734:	bl	2180 <read@plt>
    3738:	cmp	x0, #0x0
    373c:	b.le	374c <libintl_gettext@@Base+0x1074>
    3740:	add	x26, x26, x0
    3744:	sub	x28, x28, x0
    3748:	b	3764 <libintl_gettext@@Base+0x108c>
    374c:	cmn	x0, #0x1
    3750:	b.ne	3774 <libintl_gettext@@Base+0x109c>  // b.any
    3754:	bl	2200 <__errno_location@plt>
    3758:	ldr	w8, [x0]
    375c:	cmp	w8, #0x4
    3760:	b.ne	3774 <libintl_gettext@@Base+0x109c>  // b.any
    3764:	cbnz	x28, 3728 <libintl_gettext@@Base+0x1050>
    3768:	mov	w27, wzr
    376c:	mov	x28, x21
    3770:	b	2a6c <libintl_gettext@@Base+0x394>
    3774:	mov	x0, x22
    3778:	bl	20e0 <free@plt>
    377c:	mov	w0, w23
    3780:	bl	2020 <close@plt>
    3784:	b	36d4 <libintl_gettext@@Base+0xffc>
    3788:	cbz	x24, 36a8 <libintl_gettext@@Base+0xfd0>
    378c:	add	x0, x23, #0x80
    3790:	bl	1f30 <pthread_rwlock_destroy@plt>
    3794:	cbz	w0, 36a8 <libintl_gettext@@Base+0xfd0>
    3798:	b	38a8 <libintl_gettext@@Base+0x11d0>
    379c:	sub	x9, x29, #0x24
    37a0:	ldur	w8, [x29, #-252]
    37a4:	ldur	w9, [x9, #-256]
    37a8:	cmp	w9, w8
    37ac:	b.ne	38a8 <libintl_gettext@@Base+0x11d0>  // b.any
    37b0:	sub	x9, x29, #0x30
    37b4:	ldr	w8, [x23, #88]
    37b8:	ldur	x26, [x9, #-256]
    37bc:	cbz	w8, 37ec <libintl_gettext@@Base+0x1114>
    37c0:	ldr	w9, [x23, #104]
    37c4:	ldr	x10, [x23, #96]
    37c8:	mov	x11, xzr
    37cc:	ldr	w12, [x10, x11, lsl #2]
    37d0:	cmp	w9, #0x0
    37d4:	rev	w13, w12
    37d8:	csel	w12, w12, w13, eq  // eq = none
    37dc:	str	w12, [x26, x11, lsl #2]
    37e0:	add	x11, x11, #0x1
    37e4:	cmp	x11, x8
    37e8:	b.cc	37cc <libintl_gettext@@Base+0x10f4>  // b.lo, b.ul, b.last
    37ec:	sub	x8, x29, #0x38
    37f0:	ldur	x25, [x29, #-200]
    37f4:	ldur	x27, [x8, #-256]
    37f8:	mov	x21, xzr
    37fc:	ldur	x8, [x29, #-208]
    3800:	add	x8, x8, x21, lsl #4
    3804:	ldr	x0, [x8, #8]
    3808:	bl	2968 <libintl_gettext@@Base+0x290>
    380c:	ldr	w10, [x23, #88]
    3810:	udiv	w8, w0, w10
    3814:	msub	w8, w8, w10, w0
    3818:	add	x9, x26, w8, uxtw #2
    381c:	ldr	w11, [x9]
    3820:	cbz	w11, 3854 <libintl_gettext@@Base+0x117c>
    3824:	sub	w9, w10, #0x2
    3828:	udiv	w11, w0, w9
    382c:	msub	w9, w11, w9, w0
    3830:	add	w9, w9, #0x1
    3834:	sub	w10, w10, w9
    3838:	neg	w11, w10
    383c:	cmp	w8, w10
    3840:	csel	w12, w9, w11, cc  // cc = lo, ul, last
    3844:	add	w8, w12, w8
    3848:	ldr	w12, [x26, w8, uxtw #2]
    384c:	cbnz	w12, 383c <libintl_gettext@@Base+0x1164>
    3850:	add	x9, x26, w8, uxtw #2
    3854:	ldr	w8, [x25]
    3858:	add	x21, x21, #0x1
    385c:	cmp	x21, x27
    3860:	add	w8, w8, w21
    3864:	str	w8, [x9]
    3868:	b.cc	37fc <libintl_gettext@@Base+0x1124>  // b.lo, b.ul, b.last
    386c:	ldur	w8, [x29, #-252]
    3870:	str	x26, [x23, #96]
    3874:	str	wzr, [x23, #104]
    3878:	str	w8, [x23, #64]
    387c:	ldur	x8, [x29, #-208]
    3880:	str	x8, [x23, #72]
    3884:	sub	x8, x29, #0x18
    3888:	ldur	x8, [x8, #-256]
    388c:	str	x8, [x23, #80]
    3890:	b	389c <libintl_gettext@@Base+0x11c4>
    3894:	str	wzr, [x23, #64]
    3898:	stp	xzr, xzr, [x23, #72]
    389c:	ldur	x28, [x29, #-240]
    38a0:	ldur	w27, [x29, #-228]
    38a4:	b	2c0c <libintl_gettext@@Base+0x534>
    38a8:	bl	2040 <abort@plt>

00000000000038ac <_nl_expand_alias@@Base>:
    38ac:	sub	sp, sp, #0x50
    38b0:	stp	x29, x30, [sp, #16]
    38b4:	stp	x24, x23, [sp, #32]
    38b8:	stp	x22, x21, [sp, #48]
    38bc:	stp	x20, x19, [sp, #64]
    38c0:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    38c4:	ldr	x21, [x21, #4064]
    38c8:	mov	x19, x0
    38cc:	add	x29, sp, #0x10
    38d0:	cbz	x21, 38e4 <_nl_expand_alias@@Base+0x38>
    38d4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    38d8:	add	x0, x0, #0x388
    38dc:	bl	2220 <pthread_mutex_lock@plt>
    38e0:	cbnz	w0, 39dc <_nl_expand_alias@@Base+0x130>
    38e4:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    38e8:	ldr	x8, [x22, #896]
    38ec:	cbnz	x8, 38fc <_nl_expand_alias@@Base+0x50>
    38f0:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    38f4:	add	x8, x8, #0x9f1
    38f8:	str	x8, [x22, #896]
    38fc:	adrp	x20, 3000 <libintl_gettext@@Base+0x928>
    3900:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3904:	adrp	x24, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3908:	add	x20, x20, #0x9e0
    390c:	ldr	x2, [x23, #952]
    3910:	str	x19, [sp]
    3914:	cbz	x2, 3930 <_nl_expand_alias@@Base+0x84>
    3918:	ldr	x1, [x24, #960]
    391c:	mov	x0, sp
    3920:	mov	w3, #0x10                  	// #16
    3924:	mov	x4, x20
    3928:	bl	1fd0 <bsearch@plt>
    392c:	cbnz	x0, 39d0 <_nl_expand_alias@@Base+0x124>
    3930:	ldr	x0, [x22, #896]
    3934:	ldrb	w8, [x0]
    3938:	cmp	w8, #0x3a
    393c:	b.eq	3948 <_nl_expand_alias@@Base+0x9c>  // b.none
    3940:	cbnz	w8, 3958 <_nl_expand_alias@@Base+0xac>
    3944:	b	399c <_nl_expand_alias@@Base+0xf0>
    3948:	ldrb	w8, [x0, #1]!
    394c:	cmp	w8, #0x3a
    3950:	b.eq	3948 <_nl_expand_alias@@Base+0x9c>  // b.none
    3954:	str	x0, [x22, #896]
    3958:	add	x9, x0, #0x1
    395c:	ands	w8, w8, #0xff
    3960:	b.eq	3978 <_nl_expand_alias@@Base+0xcc>  // b.none
    3964:	cmp	w8, #0x3a
    3968:	b.eq	3978 <_nl_expand_alias@@Base+0xcc>  // b.none
    396c:	str	x9, [x22, #896]
    3970:	ldrb	w8, [x9], #1
    3974:	b	395c <_nl_expand_alias@@Base+0xb0>
    3978:	sub	x8, x9, #0x1
    397c:	cmp	x0, x8
    3980:	b.cs	3990 <_nl_expand_alias@@Base+0xe4>  // b.hs, b.nlast
    3984:	sub	w1, w8, w0
    3988:	bl	39ec <_nl_expand_alias@@Base+0x140>
    398c:	b	3994 <_nl_expand_alias@@Base+0xe8>
    3990:	mov	x0, xzr
    3994:	cbz	x0, 3930 <_nl_expand_alias@@Base+0x84>
    3998:	b	390c <_nl_expand_alias@@Base+0x60>
    399c:	mov	x19, xzr
    39a0:	cbz	x21, 39b4 <_nl_expand_alias@@Base+0x108>
    39a4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    39a8:	add	x0, x0, #0x388
    39ac:	bl	2230 <pthread_mutex_unlock@plt>
    39b0:	cbnz	w0, 39dc <_nl_expand_alias@@Base+0x130>
    39b4:	mov	x0, x19
    39b8:	ldp	x20, x19, [sp, #64]
    39bc:	ldp	x22, x21, [sp, #48]
    39c0:	ldp	x24, x23, [sp, #32]
    39c4:	ldp	x29, x30, [sp, #16]
    39c8:	add	sp, sp, #0x50
    39cc:	ret
    39d0:	ldr	x19, [x0, #8]
    39d4:	cbnz	x21, 39a4 <_nl_expand_alias@@Base+0xf8>
    39d8:	b	39b4 <_nl_expand_alias@@Base+0x108>
    39dc:	bl	2040 <abort@plt>
    39e0:	ldr	x0, [x0]
    39e4:	ldr	x1, [x1]
    39e8:	b	1fe0 <strcasecmp@plt>
    39ec:	stp	x29, x30, [sp, #-96]!
    39f0:	stp	x28, x27, [sp, #16]
    39f4:	stp	x26, x25, [sp, #32]
    39f8:	stp	x24, x23, [sp, #48]
    39fc:	stp	x22, x21, [sp, #64]
    3a00:	stp	x20, x19, [sp, #80]
    3a04:	mov	x29, sp
    3a08:	sub	sp, sp, #0x1d0
    3a0c:	mov	w20, w1
    3a10:	sxtw	x2, w20
    3a14:	add	x8, x2, #0x1d
    3a18:	and	x8, x8, #0xfffffffffffffff0
    3a1c:	mov	x9, sp
    3a20:	sub	x21, x9, x8
    3a24:	mov	x19, sp
    3a28:	mov	x1, x0
    3a2c:	mov	sp, x21
    3a30:	mov	x0, x21
    3a34:	bl	1d70 <memcpy@plt>
    3a38:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    3a3c:	add	x8, x8, #0x992
    3a40:	ldr	x9, [x8]
    3a44:	ldur	x8, [x8, #6]
    3a48:	add	x10, x21, w20, sxtw
    3a4c:	sub	x1, x29, #0x10
    3a50:	mov	x0, x21
    3a54:	str	x9, [x10]
    3a58:	stur	x8, [x10, #6]
    3a5c:	bl	62b8 <libintl_set_relocation_prefix@@Base+0x19c>
    3a60:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    3a64:	add	x1, x1, #0xcce
    3a68:	bl	1f10 <fopen@plt>
    3a6c:	ldur	x8, [x29, #-16]
    3a70:	mov	x21, x0
    3a74:	mov	x0, x8
    3a78:	bl	20e0 <free@plt>
    3a7c:	cbz	x21, 3aa0 <_nl_expand_alias@@Base+0x1f4>
    3a80:	mov	w1, #0x2                   	// #2
    3a84:	mov	x0, x21
    3a88:	bl	21e0 <__fsetlocking@plt>
    3a8c:	mov	x0, x21
    3a90:	bl	2130 <feof_unlocked@plt>
    3a94:	cbz	w0, 3ac8 <_nl_expand_alias@@Base+0x21c>
    3a98:	mov	x0, x21
    3a9c:	bl	1ef0 <fclose@plt>
    3aa0:	mov	x20, xzr
    3aa4:	mov	x0, x20
    3aa8:	mov	sp, x29
    3aac:	ldp	x20, x19, [sp, #80]
    3ab0:	ldp	x22, x21, [sp, #64]
    3ab4:	ldp	x24, x23, [sp, #48]
    3ab8:	ldp	x26, x25, [sp, #32]
    3abc:	ldp	x28, x27, [sp, #16]
    3ac0:	ldp	x29, x30, [sp], #96
    3ac4:	ret
    3ac8:	add	x8, x19, #0x30
    3acc:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3ad0:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3ad4:	sub	x9, x8, #0x1
    3ad8:	orr	x8, x8, #0x1
    3adc:	str	x9, [x19, #40]
    3ae0:	stp	xzr, x8, [x19, #24]
    3ae4:	add	x0, x19, #0x30
    3ae8:	mov	w1, #0x190                 	// #400
    3aec:	mov	x2, x21
    3af0:	bl	1e50 <fgets_unlocked@plt>
    3af4:	cbz	x0, 3d6c <_nl_expand_alias@@Base+0x4c0>
    3af8:	add	x0, x19, #0x30
    3afc:	mov	w1, #0xa                   	// #10
    3b00:	bl	2120 <strchr@plt>
    3b04:	mov	x20, x0
    3b08:	bl	20b0 <__ctype_b_loc@plt>
    3b0c:	ldr	x8, [x0]
    3b10:	ldp	x10, x23, [x19, #32]
    3b14:	ldrb	w11, [x23, #1]!
    3b18:	mov	x9, x10
    3b1c:	add	x10, x10, #0x1
    3b20:	ldrh	w12, [x8, x11, lsl #1]
    3b24:	tbnz	w12, #13, 3b14 <_nl_expand_alias@@Base+0x268>
    3b28:	cbz	w11, 3cfc <_nl_expand_alias@@Base+0x450>
    3b2c:	cmp	w11, #0x23
    3b30:	b.eq	3cfc <_nl_expand_alias@@Base+0x450>  // b.none
    3b34:	ldrb	w10, [x9]
    3b38:	cbz	x10, 3b50 <_nl_expand_alias@@Base+0x2a4>
    3b3c:	ldrh	w10, [x8, x10, lsl #1]
    3b40:	add	x9, x9, #0x1
    3b44:	tbz	w10, #13, 3b34 <_nl_expand_alias@@Base+0x288>
    3b48:	sturb	wzr, [x9, #-1]
    3b4c:	ldr	x8, [x0]
    3b50:	sub	x24, x9, #0x1
    3b54:	add	x10, x9, #0x1
    3b58:	adrp	x13, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3b5c:	ldrb	w11, [x24, #1]!
    3b60:	mov	x9, x10
    3b64:	add	x10, x10, #0x1
    3b68:	ldrh	w12, [x8, x11, lsl #1]
    3b6c:	tbnz	w12, #13, 3b5c <_nl_expand_alias@@Base+0x2b0>
    3b70:	cbz	w11, 3cfc <_nl_expand_alias@@Base+0x450>
    3b74:	ldrb	w10, [x9]
    3b78:	cbz	x10, 3ba0 <_nl_expand_alias@@Base+0x2f4>
    3b7c:	ldrh	w11, [x8, x10, lsl #1]
    3b80:	add	x9, x9, #0x1
    3b84:	tbz	w11, #13, 3b74 <_nl_expand_alias@@Base+0x2c8>
    3b88:	cmp	w10, #0xa
    3b8c:	b.ne	3b9c <_nl_expand_alias@@Base+0x2f0>  // b.any
    3b90:	mov	w8, #0xa00                 	// #2560
    3b94:	sturh	w8, [x9, #-1]
    3b98:	b	3ba0 <_nl_expand_alias@@Base+0x2f4>
    3b9c:	sturb	wzr, [x9, #-1]
    3ba0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3ba4:	ldr	x9, [x13, #952]
    3ba8:	ldr	x8, [x8, #968]
    3bac:	str	x20, [x19, #16]
    3bb0:	cmp	x9, x8
    3bb4:	b.cc	3bec <_nl_expand_alias@@Base+0x340>  // b.lo, b.ul, b.last
    3bb8:	adrp	x10, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3bbc:	ldr	x0, [x10, #960]
    3bc0:	lsl	x9, x8, #1
    3bc4:	cmp	x8, #0x0
    3bc8:	mov	w8, #0x64                  	// #100
    3bcc:	csel	x20, x8, x9, eq  // eq = none
    3bd0:	lsl	x1, x20, #4
    3bd4:	bl	1ff0 <realloc@plt>
    3bd8:	cbz	x0, 3d6c <_nl_expand_alias@@Base+0x4c0>
    3bdc:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3be0:	str	x0, [x8, #960]
    3be4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3be8:	str	x20, [x8, #968]
    3bec:	mov	x0, x23
    3bf0:	bl	1dc0 <strlen@plt>
    3bf4:	add	x25, x0, #0x1
    3bf8:	mov	x0, x24
    3bfc:	bl	1dc0 <strlen@plt>
    3c00:	ldr	x20, [x26, #976]
    3c04:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3c08:	ldr	x8, [x8, #984]
    3c0c:	add	x9, x0, #0x1
    3c10:	str	x9, [x19, #8]
    3c14:	add	x9, x9, x25
    3c18:	add	x10, x9, x20
    3c1c:	cmp	x10, x8
    3c20:	b.ls	3c7c <_nl_expand_alias@@Base+0x3d0>  // b.plast
    3c24:	ldr	x0, [x22, #992]
    3c28:	cmp	x9, #0x400
    3c2c:	mov	w10, #0x400                 	// #1024
    3c30:	csel	x9, x9, x10, hi  // hi = pmore
    3c34:	add	x28, x9, x8
    3c38:	mov	x1, x28
    3c3c:	bl	1ff0 <realloc@plt>
    3c40:	cbz	x0, 3d6c <_nl_expand_alias@@Base+0x4c0>
    3c44:	ldr	x9, [x22, #992]
    3c48:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3c4c:	ldr	x13, [x8, #952]
    3c50:	mov	x27, x0
    3c54:	cmp	x9, x0
    3c58:	b.eq	3c60 <_nl_expand_alias@@Base+0x3b4>  // b.none
    3c5c:	cbnz	x13, 3d34 <_nl_expand_alias@@Base+0x488>
    3c60:	ldr	x20, [x26, #976]
    3c64:	str	x27, [x22, #992]
    3c68:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3c6c:	mov	x22, x26
    3c70:	mov	x26, x13
    3c74:	str	x28, [x8, #984]
    3c78:	b	3c8c <_nl_expand_alias@@Base+0x3e0>
    3c7c:	ldr	x27, [x22, #992]
    3c80:	mov	x22, x26
    3c84:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3c88:	ldr	x26, [x26, #952]
    3c8c:	add	x28, x27, x20
    3c90:	mov	x0, x28
    3c94:	mov	x1, x23
    3c98:	mov	x2, x25
    3c9c:	bl	1d70 <memcpy@plt>
    3ca0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3ca4:	ldr	x8, [x8, #960]
    3ca8:	mov	x1, x24
    3cac:	ldr	x24, [x19, #8]
    3cb0:	add	x20, x20, x25
    3cb4:	add	x23, x27, x20
    3cb8:	add	x25, x8, x26, lsl #4
    3cbc:	mov	x0, x23
    3cc0:	mov	x2, x24
    3cc4:	str	x28, [x25]
    3cc8:	str	x20, [x22, #976]
    3ccc:	bl	1d70 <memcpy@plt>
    3cd0:	add	x8, x20, x24
    3cd4:	str	x23, [x25, #8]
    3cd8:	add	x9, x26, #0x1
    3cdc:	str	x8, [x22, #976]
    3ce0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3ce4:	str	x9, [x8, #952]
    3ce8:	ldp	x20, x8, [x19, #16]
    3cec:	mov	x26, x22
    3cf0:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3cf4:	add	x8, x8, #0x1
    3cf8:	str	x8, [x19, #24]
    3cfc:	cbnz	x20, 3d24 <_nl_expand_alias@@Base+0x478>
    3d00:	add	x0, x19, #0x30
    3d04:	mov	w1, #0x190                 	// #400
    3d08:	mov	x2, x21
    3d0c:	bl	1e50 <fgets_unlocked@plt>
    3d10:	cbz	x0, 3d24 <_nl_expand_alias@@Base+0x478>
    3d14:	add	x0, x19, #0x30
    3d18:	mov	w1, #0xa                   	// #10
    3d1c:	bl	2120 <strchr@plt>
    3d20:	cbz	x0, 3d00 <_nl_expand_alias@@Base+0x454>
    3d24:	mov	x0, x21
    3d28:	bl	2130 <feof_unlocked@plt>
    3d2c:	cbz	w0, 3ae4 <_nl_expand_alias@@Base+0x238>
    3d30:	b	3d6c <_nl_expand_alias@@Base+0x4c0>
    3d34:	adrp	x10, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3d38:	ldr	x10, [x10, #960]
    3d3c:	mov	x8, xzr
    3d40:	sub	x9, x27, x9
    3d44:	add	x10, x10, #0x8
    3d48:	ldp	x11, x12, [x10, #-8]
    3d4c:	add	x8, x8, #0x1
    3d50:	cmp	x8, x13
    3d54:	add	x11, x11, x9
    3d58:	add	x12, x12, x9
    3d5c:	stp	x11, x12, [x10, #-8]
    3d60:	add	x10, x10, #0x10
    3d64:	b.cc	3d48 <_nl_expand_alias@@Base+0x49c>  // b.lo, b.ul, b.last
    3d68:	b	3c60 <_nl_expand_alias@@Base+0x3b4>
    3d6c:	mov	x0, x21
    3d70:	bl	1ef0 <fclose@plt>
    3d74:	ldr	x20, [x19, #24]
    3d78:	cbz	x20, 3aa4 <_nl_expand_alias@@Base+0x1f8>
    3d7c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3d80:	ldr	x0, [x8, #960]
    3d84:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    3d88:	ldr	x1, [x8, #952]
    3d8c:	adrp	x3, 3000 <libintl_gettext@@Base+0x928>
    3d90:	add	x3, x3, #0x9e0
    3d94:	mov	w2, #0x10                  	// #16
    3d98:	bl	1e90 <qsort@plt>
    3d9c:	b	3aa4 <_nl_expand_alias@@Base+0x1f8>

0000000000003da0 <libintl_textdomain@@Base>:
    3da0:	stp	x29, x30, [sp, #-64]!
    3da4:	stp	x24, x23, [sp, #16]
    3da8:	stp	x22, x21, [sp, #32]
    3dac:	stp	x20, x19, [sp, #48]
    3db0:	mov	x29, sp
    3db4:	cbz	x0, 3e34 <libintl_textdomain@@Base+0x94>
    3db8:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3dbc:	ldr	x22, [x22, #4064]
    3dc0:	mov	x20, x0
    3dc4:	cbz	x22, 3dd8 <libintl_textdomain@@Base+0x38>
    3dc8:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3dcc:	ldr	x0, [x0, #4048]
    3dd0:	bl	2050 <pthread_rwlock_wrlock@plt>
    3dd4:	cbnz	w0, 3ec4 <libintl_textdomain@@Base+0x124>
    3dd8:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3ddc:	ldr	x23, [x23, #4008]
    3de0:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3de4:	ldrb	w8, [x20]
    3de8:	ldr	x19, [x23]
    3dec:	ldr	x24, [x24, #4024]
    3df0:	cbz	w8, 3e44 <libintl_textdomain@@Base+0xa4>
    3df4:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3df8:	ldr	x21, [x21, #4024]
    3dfc:	mov	x0, x20
    3e00:	mov	x1, x21
    3e04:	bl	2090 <strcmp@plt>
    3e08:	cbz	w0, 3e48 <libintl_textdomain@@Base+0xa8>
    3e0c:	mov	x0, x20
    3e10:	mov	x1, x19
    3e14:	bl	2090 <strcmp@plt>
    3e18:	cbz	w0, 3ea8 <libintl_textdomain@@Base+0x108>
    3e1c:	mov	x0, x20
    3e20:	bl	2000 <strdup@plt>
    3e24:	mov	x21, x0
    3e28:	cbnz	x0, 3e48 <libintl_textdomain@@Base+0xa8>
    3e2c:	mov	x19, xzr
    3e30:	b	3e7c <libintl_textdomain@@Base+0xdc>
    3e34:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3e38:	ldr	x8, [x8, #4008]
    3e3c:	ldr	x19, [x8]
    3e40:	b	3e90 <libintl_textdomain@@Base+0xf0>
    3e44:	mov	x21, x24
    3e48:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3e4c:	ldr	x8, [x8, #4032]
    3e50:	cmp	x19, x24
    3e54:	str	x21, [x23]
    3e58:	ldr	w9, [x8]
    3e5c:	add	w9, w9, #0x1
    3e60:	str	w9, [x8]
    3e64:	b.eq	3e78 <libintl_textdomain@@Base+0xd8>  // b.none
    3e68:	cmp	x19, x21
    3e6c:	b.eq	3e78 <libintl_textdomain@@Base+0xd8>  // b.none
    3e70:	mov	x0, x19
    3e74:	bl	20e0 <free@plt>
    3e78:	mov	x19, x21
    3e7c:	cbz	x22, 3e90 <libintl_textdomain@@Base+0xf0>
    3e80:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3e84:	ldr	x0, [x0, #4048]
    3e88:	bl	2100 <pthread_rwlock_unlock@plt>
    3e8c:	cbnz	w0, 3ec4 <libintl_textdomain@@Base+0x124>
    3e90:	mov	x0, x19
    3e94:	ldp	x20, x19, [sp, #48]
    3e98:	ldp	x22, x21, [sp, #32]
    3e9c:	ldp	x24, x23, [sp, #16]
    3ea0:	ldp	x29, x30, [sp], #64
    3ea4:	ret
    3ea8:	cbz	x19, 3e7c <libintl_textdomain@@Base+0xdc>
    3eac:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    3eb0:	ldr	x8, [x8, #4032]
    3eb4:	ldr	w9, [x8]
    3eb8:	add	w9, w9, #0x1
    3ebc:	str	w9, [x8]
    3ec0:	b	3e7c <libintl_textdomain@@Base+0xdc>
    3ec4:	bl	2040 <abort@plt>
    3ec8:	sub	sp, sp, #0xd0
    3ecc:	stp	x29, x30, [sp, #112]
    3ed0:	stp	x28, x27, [sp, #128]
    3ed4:	stp	x26, x25, [sp, #144]
    3ed8:	stp	x24, x23, [sp, #160]
    3edc:	stp	x22, x21, [sp, #176]
    3ee0:	stp	x20, x19, [sp, #192]
    3ee4:	ldrb	w8, [x4]
    3ee8:	add	x29, sp, #0x70
    3eec:	mov	x22, x0
    3ef0:	mov	x0, x4
    3ef4:	cmp	w8, #0x2f
    3ef8:	csel	x8, xzr, x2, eq  // eq = none
    3efc:	mov	x28, x7
    3f00:	mov	x27, x6
    3f04:	mov	x25, x5
    3f08:	mov	x26, x4
    3f0c:	mov	w23, w3
    3f10:	stur	x1, [x29, #-8]
    3f14:	stur	x8, [x29, #-48]
    3f18:	bl	1dc0 <strlen@plt>
    3f1c:	mov	x19, x0
    3f20:	mov	x20, xzr
    3f24:	tbz	w23, #2, 3f34 <libintl_textdomain@@Base+0x194>
    3f28:	mov	x0, x25
    3f2c:	bl	1dc0 <strlen@plt>
    3f30:	add	x20, x0, #0x1
    3f34:	tbz	w23, #1, 3f48 <libintl_textdomain@@Base+0x1a8>
    3f38:	mov	x0, x27
    3f3c:	bl	1dc0 <strlen@plt>
    3f40:	add	x21, x0, #0x1
    3f44:	b	3f4c <libintl_textdomain@@Base+0x1ac>
    3f48:	mov	x21, xzr
    3f4c:	str	x22, [sp, #40]
    3f50:	tbz	w23, #0, 3f64 <libintl_textdomain@@Base+0x1c4>
    3f54:	mov	x0, x28
    3f58:	bl	1dc0 <strlen@plt>
    3f5c:	add	x22, x0, #0x1
    3f60:	b	3f68 <libintl_textdomain@@Base+0x1c8>
    3f64:	mov	x22, xzr
    3f68:	ldp	x0, x8, [x29, #96]
    3f6c:	mov	w24, w23
    3f70:	str	x8, [sp, #48]
    3f74:	str	x0, [sp, #32]
    3f78:	tbz	w23, #3, 3f8c <libintl_textdomain@@Base+0x1ec>
    3f7c:	bl	1dc0 <strlen@plt>
    3f80:	ldr	x8, [sp, #48]
    3f84:	add	x23, x0, #0x1
    3f88:	b	3f90 <libintl_textdomain@@Base+0x1f0>
    3f8c:	mov	x23, xzr
    3f90:	mov	x0, x8
    3f94:	bl	1dc0 <strlen@plt>
    3f98:	ldur	x9, [x29, #-48]
    3f9c:	add	x8, x19, x9
    3fa0:	add	x8, x8, x20
    3fa4:	add	x8, x8, x21
    3fa8:	add	x8, x8, x22
    3fac:	add	x8, x8, x23
    3fb0:	add	x8, x8, x0
    3fb4:	add	x0, x8, #0x2
    3fb8:	mov	x19, x9
    3fbc:	bl	1f20 <malloc@plt>
    3fc0:	cbz	x0, 40d8 <libintl_textdomain@@Base+0x338>
    3fc4:	mov	x23, x0
    3fc8:	cbz	x19, 3ff8 <libintl_textdomain@@Base+0x258>
    3fcc:	ldur	x1, [x29, #-8]
    3fd0:	mov	x0, x23
    3fd4:	mov	x2, x19
    3fd8:	bl	1d70 <memcpy@plt>
    3fdc:	mov	w2, #0x3a                  	// #58
    3fe0:	mov	x0, x23
    3fe4:	mov	x1, x19
    3fe8:	bl	1fc0 <argz_stringify@plt>
    3fec:	add	x0, x23, x19
    3ff0:	mov	w8, #0x2f                  	// #47
    3ff4:	sturb	w8, [x0, #-1]
    3ff8:	mov	x1, x26
    3ffc:	bl	1ee0 <stpcpy@plt>
    4000:	ldp	x19, x20, [sp, #32]
    4004:	tbz	w24, #2, 4018 <libintl_textdomain@@Base+0x278>
    4008:	mov	w8, #0x5f                  	// #95
    400c:	strb	w8, [x0], #1
    4010:	mov	x1, x25
    4014:	bl	1ee0 <stpcpy@plt>
    4018:	mov	x22, x28
    401c:	tbz	w24, #1, 4030 <libintl_textdomain@@Base+0x290>
    4020:	mov	w8, #0x2e                  	// #46
    4024:	strb	w8, [x0], #1
    4028:	mov	x1, x27
    402c:	bl	1ee0 <stpcpy@plt>
    4030:	tbz	w24, #0, 4044 <libintl_textdomain@@Base+0x2a4>
    4034:	mov	w8, #0x2e                  	// #46
    4038:	strb	w8, [x0], #1
    403c:	mov	x1, x22
    4040:	bl	1ee0 <stpcpy@plt>
    4044:	stp	x25, x27, [x29, #-24]
    4048:	stur	x26, [x29, #-32]
    404c:	tbz	w24, #3, 4060 <libintl_textdomain@@Base+0x2c0>
    4050:	mov	w8, #0x40                  	// #64
    4054:	strb	w8, [x0], #1
    4058:	mov	x1, x19
    405c:	bl	1ee0 <stpcpy@plt>
    4060:	ldr	x1, [sp, #48]
    4064:	ldr	w19, [x29, #112]
    4068:	mov	w8, #0x2f                  	// #47
    406c:	strb	w8, [x0], #1
    4070:	bl	1ee0 <stpcpy@plt>
    4074:	ldr	x28, [x20]
    4078:	cbz	x28, 40b8 <libintl_textdomain@@Base+0x318>
    407c:	ldr	x0, [x28]
    4080:	cbz	x0, 40b0 <libintl_textdomain@@Base+0x310>
    4084:	mov	x1, x23
    4088:	bl	2090 <strcmp@plt>
    408c:	cmp	w0, #0x0
    4090:	add	x8, x28, #0x18
    4094:	cset	w9, eq  // eq = none
    4098:	cset	w10, lt  // lt = tstop
    409c:	csel	x11, xzr, x28, lt  // lt = tstop
    40a0:	csel	x20, x8, x20, gt
    40a4:	csel	x28, x28, x11, eq  // eq = none
    40a8:	cmp	w10, w9
    40ac:	b.ne	40b8 <libintl_textdomain@@Base+0x318>  // b.any
    40b0:	ldr	x28, [x28, #24]
    40b4:	cbnz	x28, 407c <libintl_textdomain@@Base+0x2dc>
    40b8:	cbz	w19, 4290 <libintl_textdomain@@Base+0x4f0>
    40bc:	cbnz	x28, 4290 <libintl_textdomain@@Base+0x4f0>
    40c0:	ldur	x1, [x29, #-48]
    40c4:	cbz	x1, 40e0 <libintl_textdomain@@Base+0x340>
    40c8:	ldur	x0, [x29, #-8]
    40cc:	bl	2080 <argz_count@plt>
    40d0:	mov	x19, x0
    40d4:	b	40e4 <libintl_textdomain@@Base+0x344>
    40d8:	mov	x28, xzr
    40dc:	b	42a8 <libintl_textdomain@@Base+0x508>
    40e0:	mov	w19, #0x1                   	// #1
    40e4:	mov	w8, #0xffffd555            	// #-10923
    40e8:	mov	w9, #0x5555                	// #21845
    40ec:	and	w8, w8, w24, asr #1
    40f0:	and	w9, w24, w9
    40f4:	mov	w10, #0xfffff333            	// #-3277
    40f8:	add	w8, w8, w9
    40fc:	mov	w9, #0x3333                	// #13107
    4100:	and	w10, w10, w8, asr #2
    4104:	and	w8, w8, w9
    4108:	add	w8, w10, w8
    410c:	mov	w9, #0xf0f                 	// #3855
    4110:	add	w8, w8, w8, lsr #4
    4114:	and	w8, w8, w9
    4118:	add	w8, w8, w8, lsr #8
    411c:	and	w8, w8, #0x1f
    4120:	lsl	x8, x19, x8
    4124:	cmp	x19, #0x1
    4128:	cinc	x8, x8, hi  // hi = pmore
    412c:	lsl	x8, x8, #3
    4130:	add	x0, x8, #0x28
    4134:	bl	1f20 <malloc@plt>
    4138:	mov	x28, x0
    413c:	cbz	x0, 4290 <libintl_textdomain@@Base+0x4f0>
    4140:	cmp	x19, #0x2
    4144:	mov	w8, #0x3                   	// #3
    4148:	cset	w9, cc  // cc = lo, ul, last
    414c:	cmp	x19, #0x1
    4150:	cset	w10, hi  // hi = pmore
    4154:	bics	wzr, w8, w24
    4158:	cset	w8, eq  // eq = none
    415c:	orr	w8, w8, w10
    4160:	str	x23, [x28]
    4164:	str	xzr, [x28, #16]
    4168:	str	w8, [x28, #8]
    416c:	ldr	x8, [x20]
    4170:	str	x19, [sp, #24]
    4174:	subs	w19, w24, w9
    4178:	str	x8, [x28, #24]
    417c:	str	x28, [x20]
    4180:	b.mi	429c <libintl_textdomain@@Base+0x4fc>  // b.first
    4184:	mvn	w8, w24
    4188:	ldp	x27, x26, [sp, #40]
    418c:	ldur	x25, [x29, #-48]
    4190:	ldr	x24, [sp, #32]
    4194:	stur	x22, [x29, #-40]
    4198:	mov	x22, xzr
    419c:	add	x21, x28, #0x20
    41a0:	mov	w9, #0x1                   	// #1
    41a4:	stur	w8, [x29, #-52]
    41a8:	ldur	w8, [x29, #-52]
    41ac:	tst	w19, w8
    41b0:	b.ne	4240 <libintl_textdomain@@Base+0x4a0>  // b.any
    41b4:	and	w8, w19, #0x3
    41b8:	cmp	w8, #0x3
    41bc:	b.eq	4240 <libintl_textdomain@@Base+0x4a0>  // b.none
    41c0:	ldr	x8, [sp, #24]
    41c4:	cmp	x8, #0x2
    41c8:	b.cc	4248 <libintl_textdomain@@Base+0x4a8>  // b.lo, b.ul, b.last
    41cc:	ldur	x0, [x29, #-8]
    41d0:	ldur	x1, [x29, #-48]
    41d4:	mov	x2, xzr
    41d8:	bl	2070 <argz_next@plt>
    41dc:	cbz	x0, 4240 <libintl_textdomain@@Base+0x4a0>
    41e0:	mov	x20, x0
    41e4:	mov	x0, x20
    41e8:	bl	1dc0 <strlen@plt>
    41ec:	ldp	x4, x5, [x29, #-32]
    41f0:	ldur	x6, [x29, #-16]
    41f4:	ldur	x7, [x29, #-40]
    41f8:	add	x2, x0, #0x1
    41fc:	mov	w8, #0x1                   	// #1
    4200:	mov	x0, x27
    4204:	mov	x1, x20
    4208:	mov	w3, w19
    420c:	str	w8, [sp, #16]
    4210:	stp	x24, x26, [sp]
    4214:	bl	3ec8 <libintl_textdomain@@Base+0x128>
    4218:	str	x0, [x21, x22, lsl #3]
    421c:	ldur	x0, [x29, #-8]
    4220:	mov	x1, x25
    4224:	mov	x2, x20
    4228:	add	x23, x22, #0x1
    422c:	bl	2070 <argz_next@plt>
    4230:	mov	x20, x0
    4234:	mov	x22, x23
    4238:	cbnz	x0, 41e4 <libintl_textdomain@@Base+0x444>
    423c:	b	4278 <libintl_textdomain@@Base+0x4d8>
    4240:	mov	x23, x22
    4244:	b	4278 <libintl_textdomain@@Base+0x4d8>
    4248:	ldp	x0, x8, [sp, #40]
    424c:	ldp	x6, x1, [x29, #-16]
    4250:	ldp	x2, x7, [x29, #-48]
    4254:	ldp	x4, x5, [x29, #-32]
    4258:	str	x8, [sp, #8]
    425c:	ldr	x8, [sp, #32]
    4260:	mov	w3, w19
    4264:	str	w9, [sp, #16]
    4268:	str	x8, [sp]
    426c:	bl	3ec8 <libintl_textdomain@@Base+0x128>
    4270:	add	x23, x22, #0x1
    4274:	str	x0, [x21, x22, lsl #3]
    4278:	cmp	w19, #0x0
    427c:	sub	w19, w19, #0x1
    4280:	mov	x22, x23
    4284:	mov	w9, #0x1                   	// #1
    4288:	b.gt	41a8 <libintl_textdomain@@Base+0x408>
    428c:	b	42a0 <libintl_textdomain@@Base+0x500>
    4290:	mov	x0, x23
    4294:	bl	20e0 <free@plt>
    4298:	b	42a8 <libintl_textdomain@@Base+0x508>
    429c:	mov	x23, xzr
    42a0:	add	x8, x28, x23, lsl #3
    42a4:	str	xzr, [x8, #32]
    42a8:	mov	x0, x28
    42ac:	ldp	x20, x19, [sp, #192]
    42b0:	ldp	x22, x21, [sp, #176]
    42b4:	ldp	x24, x23, [sp, #160]
    42b8:	ldp	x26, x25, [sp, #144]
    42bc:	ldp	x28, x27, [sp, #128]
    42c0:	ldp	x29, x30, [sp, #112]
    42c4:	add	sp, sp, #0xd0
    42c8:	ret
    42cc:	stp	x29, x30, [sp, #-64]!
    42d0:	stp	x20, x19, [sp, #48]
    42d4:	mov	x19, x1
    42d8:	mov	x20, x0
    42dc:	stp	x24, x23, [sp, #16]
    42e0:	stp	x22, x21, [sp, #32]
    42e4:	mov	x29, sp
    42e8:	cbz	x1, 433c <libintl_textdomain@@Base+0x59c>
    42ec:	bl	20b0 <__ctype_b_loc@plt>
    42f0:	ldr	x10, [x0]
    42f4:	mov	x9, xzr
    42f8:	mov	w8, #0x1                   	// #1
    42fc:	mov	w11, #0x408                 	// #1032
    4300:	mov	x12, x20
    4304:	mov	x13, x19
    4308:	ldrb	w14, [x12], #1
    430c:	ldrh	w14, [x10, x14, lsl #1]
    4310:	bics	wzr, w11, w14
    4314:	ubfx	x14, x14, #3, #1
    4318:	csel	w8, wzr, w8, eq  // eq = none
    431c:	subs	x13, x13, #0x1
    4320:	add	x9, x9, x14
    4324:	b.ne	4308 <libintl_textdomain@@Base+0x568>  // b.any
    4328:	add	x9, x9, #0x1
    432c:	cbnz	w8, 4340 <libintl_textdomain@@Base+0x5a0>
    4330:	mov	w22, wzr
    4334:	mov	x8, xzr
    4338:	b	4348 <libintl_textdomain@@Base+0x5a8>
    433c:	mov	w9, #0x1                   	// #1
    4340:	mov	w22, #0x1                   	// #1
    4344:	mov	w8, #0x3                   	// #3
    4348:	add	x0, x9, x8
    434c:	bl	1f20 <malloc@plt>
    4350:	mov	x21, x0
    4354:	cbz	x0, 43b4 <libintl_textdomain@@Base+0x614>
    4358:	mov	x23, x21
    435c:	cbz	w22, 4370 <libintl_textdomain@@Base+0x5d0>
    4360:	mov	w8, #0x7369                	// #29545
    4364:	movk	w8, #0x6f, lsl #16
    4368:	mov	x23, x21
    436c:	str	w8, [x23], #3
    4370:	cbz	x19, 43b0 <libintl_textdomain@@Base+0x610>
    4374:	bl	20b0 <__ctype_b_loc@plt>
    4378:	mov	x22, x0
    437c:	ldr	x8, [x22]
    4380:	ldrb	w24, [x20]
    4384:	ldrh	w8, [x8, x24, lsl #1]
    4388:	tbnz	w8, #10, 4394 <libintl_textdomain@@Base+0x5f4>
    438c:	tbnz	w8, #11, 43a0 <libintl_textdomain@@Base+0x600>
    4390:	b	43a4 <libintl_textdomain@@Base+0x604>
    4394:	bl	1ec0 <__ctype_tolower_loc@plt>
    4398:	ldr	x8, [x0]
    439c:	ldr	w24, [x8, x24, lsl #2]
    43a0:	strb	w24, [x23], #1
    43a4:	subs	x19, x19, #0x1
    43a8:	add	x20, x20, #0x1
    43ac:	b.ne	437c <libintl_textdomain@@Base+0x5dc>  // b.any
    43b0:	strb	wzr, [x23]
    43b4:	mov	x0, x21
    43b8:	ldp	x20, x19, [sp, #48]
    43bc:	ldp	x22, x21, [sp, #32]
    43c0:	ldp	x24, x23, [sp, #16]
    43c4:	ldp	x29, x30, [sp], #64
    43c8:	ret
    43cc:	stp	x29, x30, [sp, #-80]!
    43d0:	mov	x11, #0x1                   	// #1
    43d4:	movk	x11, #0x4, lsl #16
    43d8:	stp	x24, x23, [sp, #32]
    43dc:	stp	x22, x21, [sp, #48]
    43e0:	stp	x20, x19, [sp, #64]
    43e4:	mov	x22, x5
    43e8:	mov	x19, x4
    43ec:	mov	x20, x3
    43f0:	mov	x21, x2
    43f4:	mov	x24, x0
    43f8:	mov	x9, xzr
    43fc:	mov	w10, #0x1                   	// #1
    4400:	movk	x11, #0x2, lsl #48
    4404:	stp	x26, x25, [sp, #16]
    4408:	mov	x29, sp
    440c:	str	xzr, [x2]
    4410:	str	xzr, [x3]
    4414:	str	xzr, [x4]
    4418:	str	xzr, [x5]
    441c:	str	x0, [x1]
    4420:	ldrb	w8, [x24, x9]
    4424:	sub	w12, w8, #0x2e
    4428:	cmp	w12, #0x31
    442c:	b.hi	443c <libintl_textdomain@@Base+0x69c>  // b.pmore
    4430:	lsl	x12, x10, x12
    4434:	tst	x12, x11
    4438:	b.ne	4448 <libintl_textdomain@@Base+0x6a8>  // b.any
    443c:	cbz	w8, 4448 <libintl_textdomain@@Base+0x6a8>
    4440:	add	x9, x9, #0x1
    4444:	b	4420 <libintl_textdomain@@Base+0x680>
    4448:	cbz	x9, 4480 <libintl_textdomain@@Base+0x6e0>
    444c:	cmp	w8, #0x5f
    4450:	b.ne	4494 <libintl_textdomain@@Base+0x6f4>  // b.any
    4454:	add	x25, x24, x9
    4458:	strb	wzr, [x25], #1
    445c:	str	x25, [x20]
    4460:	ldrb	w8, [x25]
    4464:	cbz	w8, 44a0 <libintl_textdomain@@Base+0x700>
    4468:	cmp	w8, #0x2e
    446c:	b.eq	44a0 <libintl_textdomain@@Base+0x700>  // b.none
    4470:	cmp	w8, #0x40
    4474:	b.eq	44a0 <libintl_textdomain@@Base+0x700>  // b.none
    4478:	add	x25, x25, #0x1
    447c:	b	4460 <libintl_textdomain@@Base+0x6c0>
    4480:	mov	x0, x24
    4484:	bl	1dc0 <strlen@plt>
    4488:	mov	w23, wzr
    448c:	add	x25, x24, x0
    4490:	b	452c <libintl_textdomain@@Base+0x78c>
    4494:	mov	w26, wzr
    4498:	add	x25, x24, x9
    449c:	b	44a4 <libintl_textdomain@@Base+0x704>
    44a0:	mov	w26, #0x4                   	// #4
    44a4:	cmp	w8, #0x2e
    44a8:	b.ne	44d4 <libintl_textdomain@@Base+0x734>  // b.any
    44ac:	mov	x0, x25
    44b0:	mov	x1, xzr
    44b4:	strb	wzr, [x0], #1
    44b8:	str	x0, [x19]
    44bc:	ldrb	w8, [x0, x1]
    44c0:	orr	w8, w8, #0x40
    44c4:	cmp	w8, #0x40
    44c8:	b.eq	44dc <libintl_textdomain@@Base+0x73c>  // b.none
    44cc:	add	x1, x1, #0x1
    44d0:	b	44bc <libintl_textdomain@@Base+0x71c>
    44d4:	mov	w23, w26
    44d8:	b	452c <libintl_textdomain@@Base+0x78c>
    44dc:	add	x8, x25, x1
    44e0:	add	x25, x8, #0x1
    44e4:	orr	w23, w26, #0x2
    44e8:	cbz	x1, 452c <libintl_textdomain@@Base+0x78c>
    44ec:	ldrb	w8, [x0]
    44f0:	cbz	w8, 452c <libintl_textdomain@@Base+0x78c>
    44f4:	bl	42cc <libintl_textdomain@@Base+0x52c>
    44f8:	str	x0, [x22]
    44fc:	cbz	x0, 451c <libintl_textdomain@@Base+0x77c>
    4500:	mov	x24, x0
    4504:	ldr	x0, [x19]
    4508:	mov	x1, x24
    450c:	bl	2090 <strcmp@plt>
    4510:	cbz	w0, 4524 <libintl_textdomain@@Base+0x784>
    4514:	orr	w23, w26, #0x3
    4518:	b	452c <libintl_textdomain@@Base+0x78c>
    451c:	mov	w23, #0xffffffff            	// #-1
    4520:	b	4584 <libintl_textdomain@@Base+0x7e4>
    4524:	mov	x0, x24
    4528:	bl	20e0 <free@plt>
    452c:	ldrb	w8, [x25]
    4530:	cmp	w8, #0x40
    4534:	b.ne	4550 <libintl_textdomain@@Base+0x7b0>  // b.any
    4538:	strb	wzr, [x25], #1
    453c:	str	x25, [x21]
    4540:	ldrb	w8, [x25]
    4544:	orr	w9, w23, #0x8
    4548:	cmp	w8, #0x0
    454c:	csel	w23, w23, w9, eq  // eq = none
    4550:	ldr	x8, [x20]
    4554:	cbz	x8, 4568 <libintl_textdomain@@Base+0x7c8>
    4558:	ldrb	w8, [x8]
    455c:	and	w9, w23, #0xfffffffb
    4560:	cmp	w8, #0x0
    4564:	csel	w23, w9, w23, eq  // eq = none
    4568:	ldr	x8, [x19]
    456c:	cbz	x8, 4584 <libintl_textdomain@@Base+0x7e4>
    4570:	ldrb	w8, [x8]
    4574:	and	w9, w23, #0xfffffffd
    4578:	cmp	w8, #0x0
    457c:	csel	w0, w9, w23, eq  // eq = none
    4580:	b	4588 <libintl_textdomain@@Base+0x7e8>
    4584:	mov	w0, w23
    4588:	ldp	x20, x19, [sp, #64]
    458c:	ldp	x22, x21, [sp, #48]
    4590:	ldp	x24, x23, [sp, #32]
    4594:	ldp	x26, x25, [sp, #16]
    4598:	ldp	x29, x30, [sp], #80
    459c:	ret
    45a0:	stp	x29, x30, [sp, #-96]!
    45a4:	stp	x28, x27, [sp, #16]
    45a8:	stp	x26, x25, [sp, #32]
    45ac:	stp	x24, x23, [sp, #48]
    45b0:	stp	x22, x21, [sp, #64]
    45b4:	stp	x20, x19, [sp, #80]
    45b8:	mov	x29, sp
    45bc:	sub	sp, sp, #0x90
    45c0:	stur	w5, [x29, #-76]
    45c4:	cbz	x1, 4644 <libintl_textdomain@@Base+0x8a4>
    45c8:	mov	x22, x4
    45cc:	mov	w24, w3
    45d0:	mov	x28, x1
    45d4:	mov	x19, x0
    45d8:	stur	x2, [x29, #-128]
    45dc:	bl	2200 <__errno_location@plt>
    45e0:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    45e4:	ldr	w21, [x0]
    45e8:	ldr	x27, [x27, #4064]
    45ec:	mov	x26, x0
    45f0:	cbz	x27, 4604 <libintl_textdomain@@Base+0x864>
    45f4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    45f8:	add	x0, x0, #0x2f8
    45fc:	bl	1e00 <pthread_rwlock_rdlock@plt>
    4600:	cbnz	w0, 4d28 <libintl_textdomain@@Base+0xf88>
    4604:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4608:	ldr	x8, [x8, #752]
    460c:	cmp	x19, #0x0
    4610:	stur	xzr, [x29, #-40]
    4614:	stur	x28, [x29, #-16]
    4618:	csel	x25, x8, x19, eq  // eq = none
    461c:	ldur	w8, [x29, #-76]
    4620:	stur	x25, [x29, #-72]
    4624:	cmp	w8, #0x6
    4628:	stur	w8, [x29, #-64]
    462c:	b.hi	464c <libintl_textdomain@@Base+0x8ac>  // b.pmore
    4630:	ldur	w9, [x29, #-76]
    4634:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    4638:	add	x8, x8, #0xd50
    463c:	ldr	x20, [x8, w9, sxtw #3]
    4640:	b	4654 <libintl_textdomain@@Base+0x8b4>
    4644:	mov	x20, xzr
    4648:	b	4cbc <libintl_textdomain@@Base+0xf1c>
    464c:	adrp	x20, 6000 <libintl_ngettext@@Base+0x890>
    4650:	add	x20, x20, #0xa43
    4654:	ldur	w0, [x29, #-76]
    4658:	mov	x1, x20
    465c:	bl	62f0 <libintl_set_relocation_prefix@@Base+0x1d4>
    4660:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    4664:	add	x8, x8, #0x9f1
    4668:	cmp	x0, #0x0
    466c:	csel	x19, x8, x0, eq  // eq = none
    4670:	stur	x19, [x29, #-56]
    4674:	cbz	x27, 46c4 <libintl_textdomain@@Base+0x924>
    4678:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    467c:	add	x0, x0, #0x330
    4680:	bl	1e00 <pthread_rwlock_rdlock@plt>
    4684:	cbnz	w0, 4d28 <libintl_textdomain@@Base+0xf88>
    4688:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    468c:	adrp	x2, 4000 <libintl_textdomain@@Base+0x260>
    4690:	add	x1, x1, #0x3e8
    4694:	add	x2, x2, #0xd2c
    4698:	sub	x0, x29, #0x48
    469c:	bl	1ed0 <tfind@plt>
    46a0:	cbz	x27, 46bc <libintl_textdomain@@Base+0x91c>
    46a4:	mov	x23, x0
    46a8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    46ac:	add	x0, x0, #0x330
    46b0:	bl	2100 <pthread_rwlock_unlock@plt>
    46b4:	cbnz	w0, 4d28 <libintl_textdomain@@Base+0xf88>
    46b8:	mov	x0, x23
    46bc:	cbnz	x0, 46e0 <libintl_textdomain@@Base+0x940>
    46c0:	b	471c <libintl_textdomain@@Base+0x97c>
    46c4:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    46c8:	adrp	x2, 4000 <libintl_textdomain@@Base+0x260>
    46cc:	add	x1, x1, #0x3e8
    46d0:	add	x2, x2, #0xd2c
    46d4:	sub	x0, x29, #0x48
    46d8:	bl	1ed0 <tfind@plt>
    46dc:	cbz	x0, 471c <libintl_textdomain@@Base+0x97c>
    46e0:	adrp	x9, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    46e4:	ldr	x8, [x0]
    46e8:	ldr	x9, [x9, #4032]
    46ec:	ldr	w10, [x8, #24]
    46f0:	ldr	w9, [x9]
    46f4:	cmp	w10, w9
    46f8:	b.ne	471c <libintl_textdomain@@Base+0x97c>  // b.any
    46fc:	cbz	w24, 4ca0 <libintl_textdomain@@Base+0xf00>
    4700:	ldp	x0, x2, [x8, #32]
    4704:	ldr	x3, [x8, #48]
    4708:	mov	x1, x22
    470c:	bl	4da0 <libintl_textdomain@@Base+0x1000>
    4710:	mov	x20, x0
    4714:	cbnz	x27, 4ca8 <libintl_textdomain@@Base+0xf08>
    4718:	b	4cb8 <libintl_textdomain@@Base+0xf18>
    471c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4720:	ldr	w8, [x8, #1008]
    4724:	stur	x19, [x29, #-136]
    4728:	stur	x0, [x29, #-112]
    472c:	cbnz	w8, 476c <libintl_textdomain@@Base+0x9cc>
    4730:	bl	1e70 <getuid@plt>
    4734:	mov	w19, w0
    4738:	bl	1e20 <geteuid@plt>
    473c:	cmp	w19, w0
    4740:	b.ne	4760 <libintl_textdomain@@Base+0x9c0>  // b.any
    4744:	bl	20f0 <getgid@plt>
    4748:	mov	w19, w0
    474c:	bl	1e10 <getegid@plt>
    4750:	cmp	w19, w0
    4754:	mov	w8, #0xffffffff            	// #-1
    4758:	cneg	w8, w8, ne  // ne = any
    475c:	b	4764 <libintl_textdomain@@Base+0x9c4>
    4760:	mov	w8, #0x1                   	// #1
    4764:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4768:	str	w8, [x9, #1008]
    476c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4770:	ldr	x19, [x8, #3304]
    4774:	stp	w24, w21, [x29, #-104]
    4778:	stur	x22, [x29, #-120]
    477c:	stp	x26, x28, [x29, #-96]
    4780:	cbz	x19, 47c4 <libintl_textdomain@@Base+0xa24>
    4784:	adrp	x23, 6000 <libintl_ngettext@@Base+0x890>
    4788:	add	x23, x23, #0x9b4
    478c:	add	x1, x19, #0x18
    4790:	mov	x0, x25
    4794:	bl	2090 <strcmp@plt>
    4798:	cmp	w0, #0x0
    479c:	cset	w8, eq  // eq = none
    47a0:	cset	w9, lt  // lt = tstop
    47a4:	csel	x10, xzr, x19, lt  // lt = tstop
    47a8:	csel	x24, x19, x10, eq  // eq = none
    47ac:	cmp	w9, w8
    47b0:	b.ne	47cc <libintl_textdomain@@Base+0xa2c>  // b.any
    47b4:	ldr	x19, [x24]
    47b8:	cbnz	x19, 478c <libintl_textdomain@@Base+0x9ec>
    47bc:	mov	x24, xzr
    47c0:	b	4890 <libintl_textdomain@@Base+0xaf0>
    47c4:	mov	x24, xzr
    47c8:	b	4888 <libintl_textdomain@@Base+0xae8>
    47cc:	cbz	x24, 4888 <libintl_textdomain@@Base+0xae8>
    47d0:	ldr	x23, [x24, #8]
    47d4:	ldrb	w8, [x23]
    47d8:	cmp	w8, #0x2f
    47dc:	b.eq	4890 <libintl_textdomain@@Base+0xaf0>  // b.none
    47e0:	mov	x0, x23
    47e4:	bl	1dc0 <strlen@plt>
    47e8:	mov	w8, #0x1012                	// #4114
    47ec:	add	x8, x0, x8
    47f0:	and	x8, x8, #0xfffffffffffffff0
    47f4:	mov	x9, sp
    47f8:	mov	x21, x0
    47fc:	sub	x19, x9, x8
    4800:	mov	sp, x19
    4804:	mov	w1, #0x1002                	// #4098
    4808:	mov	x0, x19
    480c:	str	wzr, [x26]
    4810:	bl	1da0 <getcwd@plt>
    4814:	cbnz	x0, 4864 <libintl_textdomain@@Base+0xac4>
    4818:	add	x22, x21, #0x1
    481c:	mov	w21, #0x1002                	// #4098
    4820:	ldr	w8, [x26]
    4824:	cmp	w8, #0x22
    4828:	b.ne	4c28 <libintl_textdomain@@Base+0xe88>  // b.any
    482c:	add	x8, x21, x21, lsr #1
    4830:	add	x21, x8, #0x20
    4834:	add	x8, x22, x21
    4838:	add	x8, x8, #0xf
    483c:	and	x8, x8, #0xfffffffffffffff0
    4840:	mov	x9, sp
    4844:	sub	x19, x9, x8
    4848:	mov	sp, x19
    484c:	ldur	x26, [x29, #-96]
    4850:	mov	x0, x19
    4854:	mov	x1, x21
    4858:	str	wzr, [x26]
    485c:	bl	1da0 <getcwd@plt>
    4860:	cbz	x0, 4820 <libintl_textdomain@@Base+0xa80>
    4864:	mov	x0, x19
    4868:	bl	1dc0 <strlen@plt>
    486c:	add	x0, x19, x0
    4870:	mov	w8, #0x2f                  	// #47
    4874:	strh	w8, [x0], #1
    4878:	mov	x1, x23
    487c:	bl	1ee0 <stpcpy@plt>
    4880:	mov	x23, x19
    4884:	b	4890 <libintl_textdomain@@Base+0xaf0>
    4888:	adrp	x23, 6000 <libintl_ngettext@@Base+0x890>
    488c:	add	x23, x23, #0x9b4
    4890:	ldur	w0, [x29, #-76]
    4894:	mov	x1, x20
    4898:	bl	62f0 <libintl_set_relocation_prefix@@Base+0x1d4>
    489c:	cbnz	x0, 48b0 <libintl_textdomain@@Base+0xb10>
    48a0:	ldur	w0, [x29, #-76]
    48a4:	mov	x1, x20
    48a8:	bl	64a8 <libintl_set_relocation_prefix@@Base+0x38c>
    48ac:	cbz	x0, 4ce0 <libintl_textdomain@@Base+0xf40>
    48b0:	mov	x19, x0
    48b4:	mov	w21, wzr
    48b8:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    48bc:	add	x1, x1, #0xa26
    48c0:	mov	x0, x19
    48c4:	bl	2090 <strcmp@plt>
    48c8:	cbz	w0, 48f8 <libintl_textdomain@@Base+0xb58>
    48cc:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    48d0:	add	x0, x0, #0xa4a
    48d4:	bl	2210 <getenv@plt>
    48d8:	cbz	x0, 48e8 <libintl_textdomain@@Base+0xb48>
    48dc:	ldrb	w8, [x0]
    48e0:	mov	x26, x0
    48e4:	cbnz	w8, 48fc <libintl_textdomain@@Base+0xb5c>
    48e8:	cbz	w21, 48f8 <libintl_textdomain@@Base+0xb58>
    48ec:	bl	62e8 <libintl_set_relocation_prefix@@Base+0x1cc>
    48f0:	mov	x26, x0
    48f4:	cbnz	x0, 48fc <libintl_textdomain@@Base+0xb5c>
    48f8:	mov	x26, x19
    48fc:	mov	x0, x25
    4900:	bl	1dc0 <strlen@plt>
    4904:	mov	x21, x0
    4908:	mov	x0, x20
    490c:	bl	1dc0 <strlen@plt>
    4910:	add	x8, x21, x0
    4914:	add	x8, x8, #0x14
    4918:	and	x8, x8, #0xfffffffffffffff0
    491c:	mov	x9, sp
    4920:	sub	x28, x9, x8
    4924:	mov	sp, x28
    4928:	mov	x0, x28
    492c:	mov	x1, x20
    4930:	bl	1ee0 <stpcpy@plt>
    4934:	mov	x19, x0
    4938:	mov	w8, #0x2f                  	// #47
    493c:	strh	w8, [x19], #1
    4940:	mov	x0, x19
    4944:	mov	x1, x25
    4948:	mov	x2, x21
    494c:	bl	1d70 <memcpy@plt>
    4950:	mov	w8, #0x6d2e                	// #27950
    4954:	movk	w8, #0x6f, lsl #16
    4958:	mov	x0, x26
    495c:	str	w8, [x19, x21]
    4960:	bl	1dc0 <strlen@plt>
    4964:	add	x9, x0, #0x10
    4968:	mov	x8, sp
    496c:	and	x9, x9, #0xfffffffffffffff0
    4970:	sub	x27, x8, x9
    4974:	mov	sp, x27
    4978:	ldrb	w8, [x26]
    497c:	cbz	w8, 4990 <libintl_textdomain@@Base+0xbf0>
    4980:	cmp	w8, #0x3a
    4984:	b.ne	499c <libintl_textdomain@@Base+0xbfc>  // b.any
    4988:	add	x26, x26, #0x1
    498c:	b	4978 <libintl_textdomain@@Base+0xbd8>
    4990:	mov	w8, #0x43                  	// #67
    4994:	strh	w8, [x27]
    4998:	b	49ec <libintl_textdomain@@Base+0xc4c>
    499c:	mov	x9, xzr
    49a0:	ands	w10, w8, #0xff
    49a4:	b.eq	49c4 <libintl_textdomain@@Base+0xc24>  // b.none
    49a8:	cmp	w10, #0x3a
    49ac:	b.eq	49c4 <libintl_textdomain@@Base+0xc24>  // b.none
    49b0:	add	x10, x26, x9
    49b4:	strb	w8, [x27, x9]
    49b8:	ldrb	w8, [x10, #1]
    49bc:	add	x9, x9, #0x1
    49c0:	b	49a0 <libintl_textdomain@@Base+0xc00>
    49c4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    49c8:	ldr	w8, [x8, #1008]
    49cc:	add	x26, x26, x9
    49d0:	strb	wzr, [x27, x9]
    49d4:	cmp	w8, #0x1
    49d8:	b.ne	49ec <libintl_textdomain@@Base+0xc4c>  // b.any
    49dc:	mov	w1, #0x2f                  	// #47
    49e0:	mov	x0, x27
    49e4:	bl	2120 <strchr@plt>
    49e8:	cbnz	x0, 4978 <libintl_textdomain@@Base+0xbd8>
    49ec:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    49f0:	mov	x0, x27
    49f4:	add	x1, x1, #0xa26
    49f8:	mov	x22, x23
    49fc:	bl	2090 <strcmp@plt>
    4a00:	cbz	w0, 4c28 <libintl_textdomain@@Base+0xe88>
    4a04:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    4a08:	mov	x0, x27
    4a0c:	add	x1, x1, #0x9c6
    4a10:	bl	2090 <strcmp@plt>
    4a14:	cbz	w0, 4c28 <libintl_textdomain@@Base+0xe88>
    4a18:	mov	x0, x22
    4a1c:	mov	x1, x27
    4a20:	mov	x2, x28
    4a24:	mov	x3, x24
    4a28:	mov	x23, x22
    4a2c:	bl	26e8 <libintl_gettext@@Base+0x10>
    4a30:	cbz	x0, 4978 <libintl_textdomain@@Base+0xbd8>
    4a34:	ldur	x2, [x29, #-88]
    4a38:	sub	x4, x29, #0x8
    4a3c:	mov	w3, #0x1                   	// #1
    4a40:	mov	x1, x24
    4a44:	mov	x19, x0
    4a48:	bl	4e14 <libintl_textdomain@@Base+0x1074>
    4a4c:	cbz	x0, 4a5c <libintl_textdomain@@Base+0xcbc>
    4a50:	mov	x20, x0
    4a54:	cbnz	x20, 4ab4 <libintl_textdomain@@Base+0xd14>
    4a58:	b	4978 <libintl_textdomain@@Base+0xbd8>
    4a5c:	ldr	x0, [x19, #32]
    4a60:	cbz	x0, 4aac <libintl_textdomain@@Base+0xd0c>
    4a64:	add	x23, x19, #0x28
    4a68:	ldur	x2, [x29, #-88]
    4a6c:	sub	x4, x29, #0x8
    4a70:	mov	w3, #0x1                   	// #1
    4a74:	mov	x1, x24
    4a78:	bl	4e14 <libintl_textdomain@@Base+0x1074>
    4a7c:	cbnz	x0, 4a90 <libintl_textdomain@@Base+0xcf0>
    4a80:	ldr	x0, [x23], #8
    4a84:	cbnz	x0, 4a68 <libintl_textdomain@@Base+0xcc8>
    4a88:	mov	x20, xzr
    4a8c:	b	4aa0 <libintl_textdomain@@Base+0xd00>
    4a90:	mov	x20, x0
    4a94:	cmn	x0, #0x1
    4a98:	b.eq	4c28 <libintl_textdomain@@Base+0xe88>  // b.none
    4a9c:	ldur	x19, [x23, #-8]
    4aa0:	mov	x23, x22
    4aa4:	cbnz	x20, 4ab4 <libintl_textdomain@@Base+0xd14>
    4aa8:	b	4978 <libintl_textdomain@@Base+0xbd8>
    4aac:	mov	x20, xzr
    4ab0:	cbz	x20, 4978 <libintl_textdomain@@Base+0xbd8>
    4ab4:	cmn	x20, #0x1
    4ab8:	b.eq	4c28 <libintl_textdomain@@Base+0xe88>  // b.none
    4abc:	ldur	x10, [x29, #-112]
    4ac0:	cbz	x10, 4b3c <libintl_textdomain@@Base+0xd9c>
    4ac4:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    4ac8:	ldr	x8, [x8, #4032]
    4acc:	ldr	x9, [x10]
    4ad0:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    4ad4:	ldr	w8, [x8]
    4ad8:	str	x19, [x9, #32]
    4adc:	str	w8, [x9, #24]
    4ae0:	ldr	x8, [x10]
    4ae4:	str	x20, [x8, #40]
    4ae8:	ldur	x8, [x29, #-8]
    4aec:	ldr	x9, [x10]
    4af0:	str	x8, [x9, #48]
    4af4:	ldr	x28, [x28, #4064]
    4af8:	ldur	x8, [x29, #-96]
    4afc:	ldur	w9, [x29, #-100]
    4b00:	str	w9, [x8]
    4b04:	ldur	w8, [x29, #-104]
    4b08:	cbz	w8, 4b24 <libintl_textdomain@@Base+0xd84>
    4b0c:	ldur	x3, [x29, #-8]
    4b10:	ldur	x1, [x29, #-120]
    4b14:	mov	x0, x19
    4b18:	mov	x2, x20
    4b1c:	bl	4da0 <libintl_textdomain@@Base+0x1000>
    4b20:	mov	x20, x0
    4b24:	cbz	x28, 4cbc <libintl_textdomain@@Base+0xf1c>
    4b28:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4b2c:	add	x0, x0, #0x2f8
    4b30:	bl	2100 <pthread_rwlock_unlock@plt>
    4b34:	cbz	w0, 4cbc <libintl_textdomain@@Base+0xf1c>
    4b38:	b	4d28 <libintl_textdomain@@Base+0xf88>
    4b3c:	ldur	x22, [x29, #-88]
    4b40:	mov	x0, x22
    4b44:	bl	1dc0 <strlen@plt>
    4b48:	ldur	x23, [x29, #-136]
    4b4c:	mov	x26, x0
    4b50:	mov	x0, x23
    4b54:	bl	1dc0 <strlen@plt>
    4b58:	add	x8, x21, x26
    4b5c:	add	x8, x8, x0
    4b60:	add	x0, x8, #0x3b
    4b64:	bl	1f20 <malloc@plt>
    4b68:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    4b6c:	ldr	x28, [x28, #4064]
    4b70:	cbz	x0, 4af8 <libintl_textdomain@@Base+0xd58>
    4b74:	add	x26, x26, #0x1
    4b78:	add	x27, x0, #0x38
    4b7c:	mov	x24, x0
    4b80:	mov	x0, x27
    4b84:	mov	x1, x22
    4b88:	mov	x2, x26
    4b8c:	bl	1d70 <memcpy@plt>
    4b90:	add	x22, x27, x26
    4b94:	add	x2, x21, #0x1
    4b98:	mov	x0, x22
    4b9c:	mov	x1, x25
    4ba0:	bl	1d70 <memcpy@plt>
    4ba4:	add	x8, x22, x21
    4ba8:	add	x0, x8, #0x1
    4bac:	mov	x1, x23
    4bb0:	bl	2160 <strcpy@plt>
    4bb4:	ldur	w8, [x29, #-76]
    4bb8:	str	x22, [x24]
    4bbc:	str	x0, [x24, #16]
    4bc0:	str	w8, [x24, #8]
    4bc4:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    4bc8:	ldr	x8, [x8, #4032]
    4bcc:	ldur	x9, [x29, #-8]
    4bd0:	stp	x19, x20, [x24, #32]
    4bd4:	ldr	w8, [x8]
    4bd8:	str	x9, [x24, #48]
    4bdc:	str	w8, [x24, #24]
    4be0:	cbz	x28, 4cf0 <libintl_textdomain@@Base+0xf50>
    4be4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4be8:	add	x0, x0, #0x330
    4bec:	bl	2050 <pthread_rwlock_wrlock@plt>
    4bf0:	cbnz	w0, 4d28 <libintl_textdomain@@Base+0xf88>
    4bf4:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4bf8:	adrp	x2, 4000 <libintl_textdomain@@Base+0x260>
    4bfc:	add	x1, x1, #0x3e8
    4c00:	add	x2, x2, #0xd2c
    4c04:	mov	x0, x24
    4c08:	bl	1f80 <tsearch@plt>
    4c0c:	mov	x21, x0
    4c10:	cbz	x28, 4d0c <libintl_textdomain@@Base+0xf6c>
    4c14:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4c18:	add	x0, x0, #0x330
    4c1c:	bl	2100 <pthread_rwlock_unlock@plt>
    4c20:	cbz	w0, 4d0c <libintl_textdomain@@Base+0xf6c>
    4c24:	b	4d28 <libintl_textdomain@@Base+0xf88>
    4c28:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    4c2c:	ldp	w22, w20, [x29, #-104]
    4c30:	ldr	x8, [x8, #4064]
    4c34:	cbz	x8, 4c48 <libintl_textdomain@@Base+0xea8>
    4c38:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4c3c:	add	x0, x0, #0x2f8
    4c40:	bl	2100 <pthread_rwlock_unlock@plt>
    4c44:	cbnz	w0, 4d28 <libintl_textdomain@@Base+0xf88>
    4c48:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4c4c:	ldr	w8, [x8, #1008]
    4c50:	ldp	x19, x23, [x29, #-96]
    4c54:	ldp	x24, x21, [x29, #-128]
    4c58:	cmp	w8, #0x1
    4c5c:	b.eq	4c8c <libintl_textdomain@@Base+0xeec>  // b.none
    4c60:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    4c64:	add	x0, x0, #0x9cc
    4c68:	bl	2210 <getenv@plt>
    4c6c:	cbz	x0, 4c8c <libintl_textdomain@@Base+0xeec>
    4c70:	ldrb	w8, [x0]
    4c74:	cbz	w8, 4c8c <libintl_textdomain@@Base+0xeec>
    4c78:	mov	x1, x25
    4c7c:	mov	x2, x23
    4c80:	mov	x3, x24
    4c84:	mov	w4, w22
    4c88:	bl	6560 <libintl_set_relocation_prefix@@Base+0x444>
    4c8c:	cmp	x21, #0x1
    4c90:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    4c94:	str	w20, [x19]
    4c98:	csel	x20, x23, x24, eq  // eq = none
    4c9c:	b	4cbc <libintl_textdomain@@Base+0xf1c>
    4ca0:	ldr	x20, [x8, #40]
    4ca4:	cbz	x27, 4cb8 <libintl_textdomain@@Base+0xf18>
    4ca8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4cac:	add	x0, x0, #0x2f8
    4cb0:	bl	2100 <pthread_rwlock_unlock@plt>
    4cb4:	cbnz	w0, 4d28 <libintl_textdomain@@Base+0xf88>
    4cb8:	str	w21, [x26]
    4cbc:	mov	x0, x20
    4cc0:	mov	sp, x29
    4cc4:	ldp	x20, x19, [sp, #80]
    4cc8:	ldp	x22, x21, [sp, #64]
    4ccc:	ldp	x24, x23, [sp, #48]
    4cd0:	ldp	x26, x25, [sp, #32]
    4cd4:	ldp	x28, x27, [sp, #16]
    4cd8:	ldp	x29, x30, [sp], #96
    4cdc:	ret
    4ce0:	mov	w21, #0x1                   	// #1
    4ce4:	bl	6514 <libintl_set_relocation_prefix@@Base+0x3f8>
    4ce8:	mov	x19, x0
    4cec:	b	48b8 <libintl_textdomain@@Base+0xb18>
    4cf0:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    4cf4:	adrp	x2, 4000 <libintl_textdomain@@Base+0x260>
    4cf8:	add	x1, x1, #0x3e8
    4cfc:	add	x2, x2, #0xd2c
    4d00:	mov	x0, x24
    4d04:	bl	1f80 <tsearch@plt>
    4d08:	mov	x21, x0
    4d0c:	cbz	x21, 4d1c <libintl_textdomain@@Base+0xf7c>
    4d10:	ldr	x8, [x21]
    4d14:	cmp	x8, x24
    4d18:	b.eq	4af8 <libintl_textdomain@@Base+0xd58>  // b.none
    4d1c:	mov	x0, x24
    4d20:	bl	20e0 <free@plt>
    4d24:	b	4af8 <libintl_textdomain@@Base+0xd58>
    4d28:	bl	2040 <abort@plt>
    4d2c:	stp	x29, x30, [sp, #-32]!
    4d30:	stp	x20, x19, [sp, #16]
    4d34:	ldr	x8, [x0, #32]
    4d38:	mov	x19, x1
    4d3c:	mov	x20, x0
    4d40:	add	x0, x0, #0x38
    4d44:	mov	x29, sp
    4d48:	cbnz	x8, 4d50 <libintl_textdomain@@Base+0xfb0>
    4d4c:	ldr	x0, [x0]
    4d50:	ldr	x8, [x19, #32]
    4d54:	add	x1, x19, #0x38
    4d58:	cbnz	x8, 4d60 <libintl_textdomain@@Base+0xfc0>
    4d5c:	ldr	x1, [x1]
    4d60:	bl	2090 <strcmp@plt>
    4d64:	cbnz	w0, 4d94 <libintl_textdomain@@Base+0xff4>
    4d68:	ldr	x0, [x20]
    4d6c:	ldr	x1, [x19]
    4d70:	bl	2090 <strcmp@plt>
    4d74:	cbnz	w0, 4d94 <libintl_textdomain@@Base+0xff4>
    4d78:	ldr	x0, [x20, #16]
    4d7c:	ldr	x1, [x19, #16]
    4d80:	bl	2090 <strcmp@plt>
    4d84:	cbnz	w0, 4d94 <libintl_textdomain@@Base+0xff4>
    4d88:	ldr	w8, [x20, #8]
    4d8c:	ldr	w9, [x19, #8]
    4d90:	sub	w0, w8, w9
    4d94:	ldp	x20, x19, [sp, #16]
    4d98:	ldp	x29, x30, [sp], #32
    4d9c:	ret
    4da0:	stp	x29, x30, [sp, #-48]!
    4da4:	stp	x22, x21, [sp, #16]
    4da8:	stp	x20, x19, [sp, #32]
    4dac:	ldr	x21, [x0, #16]
    4db0:	mov	x29, sp
    4db4:	mov	x20, x3
    4db8:	mov	x19, x2
    4dbc:	ldr	x0, [x21, #184]
    4dc0:	bl	55a4 <libintl_textdomain@@Base+0x1804>
    4dc4:	ldr	x8, [x21, #192]
    4dc8:	add	x21, x19, x20
    4dcc:	mov	x20, x19
    4dd0:	cmp	x0, x8
    4dd4:	csel	x8, x0, xzr, cc  // cc = lo, ul, last
    4dd8:	add	x22, x8, #0x1
    4ddc:	subs	x22, x22, #0x1
    4de0:	b.eq	4e00 <libintl_textdomain@@Base+0x1060>  // b.none
    4de4:	mov	x0, x20
    4de8:	bl	1dc0 <strlen@plt>
    4dec:	add	x8, x20, x0
    4df0:	add	x20, x8, #0x1
    4df4:	cmp	x20, x21
    4df8:	b.cc	4ddc <libintl_textdomain@@Base+0x103c>  // b.lo, b.ul, b.last
    4dfc:	mov	x20, x19
    4e00:	mov	x0, x20
    4e04:	ldp	x20, x19, [sp, #32]
    4e08:	ldp	x22, x21, [sp, #16]
    4e0c:	ldp	x29, x30, [sp], #48
    4e10:	ret
    4e14:	stp	x29, x30, [sp, #-96]!
    4e18:	stp	x28, x27, [sp, #16]
    4e1c:	stp	x26, x25, [sp, #32]
    4e20:	stp	x24, x23, [sp, #48]
    4e24:	stp	x22, x21, [sp, #64]
    4e28:	stp	x20, x19, [sp, #80]
    4e2c:	mov	x29, sp
    4e30:	sub	sp, sp, #0x50
    4e34:	ldr	w8, [x0, #8]
    4e38:	mov	x28, x4
    4e3c:	mov	w25, w3
    4e40:	mov	x20, x2
    4e44:	mov	x22, x0
    4e48:	cmp	w8, #0x0
    4e4c:	mov	x23, x1
    4e50:	b.gt	4e60 <libintl_textdomain@@Base+0x10c0>
    4e54:	mov	x0, x22
    4e58:	mov	x1, x23
    4e5c:	bl	29ac <libintl_gettext@@Base+0x2d4>
    4e60:	ldr	x27, [x22, #16]
    4e64:	cbz	x27, 4f88 <libintl_textdomain@@Base+0x11e8>
    4e68:	ldr	x8, [x27, #96]
    4e6c:	ldr	w21, [x27, #40]
    4e70:	stur	x21, [x29, #-40]
    4e74:	cbz	x8, 4fb0 <libintl_textdomain@@Base+0x1210>
    4e78:	mov	x0, x20
    4e7c:	stur	w25, [x29, #-68]
    4e80:	bl	1dc0 <strlen@plt>
    4e84:	mov	x21, x0
    4e88:	mov	x0, x20
    4e8c:	bl	2968 <libintl_gettext@@Base+0x290>
    4e90:	ldr	w9, [x27, #88]
    4e94:	ldr	x25, [x27, #96]
    4e98:	ldr	w19, [x27, #104]
    4e9c:	udiv	w8, w0, w9
    4ea0:	msub	w26, w8, w9, w0
    4ea4:	ldr	w8, [x25, w26, uxtw #2]
    4ea8:	cmp	w19, #0x0
    4eac:	rev	w10, w8
    4eb0:	csel	w8, w8, w10, eq  // eq = none
    4eb4:	cbz	w8, 4f88 <libintl_textdomain@@Base+0x11e8>
    4eb8:	sub	w10, w9, #0x2
    4ebc:	udiv	w11, w0, w10
    4ec0:	msub	w10, w11, w10, w0
    4ec4:	stp	x22, x23, [x29, #-64]
    4ec8:	add	w22, w10, #0x1
    4ecc:	stur	x21, [x29, #-48]
    4ed0:	and	x23, x21, #0xffffffff
    4ed4:	sub	w21, w9, w22
    4ed8:	stur	x28, [x29, #-80]
    4edc:	neg	w28, w21
    4ee0:	ldur	x9, [x29, #-40]
    4ee4:	sub	w24, w8, #0x1
    4ee8:	cmp	w24, w9
    4eec:	b.cs	4f3c <libintl_textdomain@@Base+0x119c>  // b.hs, b.nlast
    4ef0:	ldr	x8, [x27, #48]
    4ef4:	mov	w9, w24
    4ef8:	lsl	x10, x9, #3
    4efc:	ldr	w11, [x8, x10]
    4f00:	ldr	w10, [x27, #24]
    4f04:	rev	w12, w11
    4f08:	cmp	w10, #0x0
    4f0c:	csel	w11, w11, w12, eq  // eq = none
    4f10:	ldur	x12, [x29, #-48]
    4f14:	cmp	w11, w12
    4f18:	b.cc	4f68 <libintl_textdomain@@Base+0x11c8>  // b.lo, b.ul, b.last
    4f1c:	add	x8, x8, x9, lsl #3
    4f20:	ldr	w8, [x8, #4]
    4f24:	ldr	x9, [x27]
    4f28:	cmp	w10, #0x0
    4f2c:	rev	w11, w8
    4f30:	csel	w8, w8, w11, eq  // eq = none
    4f34:	add	x1, x9, x8
    4f38:	b	4f5c <libintl_textdomain@@Base+0x11bc>
    4f3c:	ldr	x8, [x27, #72]
    4f40:	sub	w9, w24, w9
    4f44:	lsl	x10, x9, #4
    4f48:	ldr	x10, [x8, x10]
    4f4c:	cmp	x10, x23
    4f50:	b.ls	4f68 <libintl_textdomain@@Base+0x11c8>  // b.plast
    4f54:	add	x8, x8, x9, lsl #4
    4f58:	ldr	x1, [x8, #8]
    4f5c:	mov	x0, x20
    4f60:	bl	2090 <strcmp@plt>
    4f64:	cbz	w0, 5004 <libintl_textdomain@@Base+0x1264>
    4f68:	cmp	w26, w21
    4f6c:	csel	w8, w22, w28, cc  // cc = lo, ul, last
    4f70:	add	w26, w8, w26
    4f74:	ldr	w8, [x25, w26, uxtw #2]
    4f78:	cmp	w19, #0x0
    4f7c:	rev	w9, w8
    4f80:	csel	w8, w8, w9, eq  // eq = none
    4f84:	cbnz	w8, 4ee0 <libintl_textdomain@@Base+0x1140>
    4f88:	mov	x20, xzr
    4f8c:	mov	x0, x20
    4f90:	mov	sp, x29
    4f94:	ldp	x20, x19, [sp, #80]
    4f98:	ldp	x22, x21, [sp, #64]
    4f9c:	ldp	x24, x23, [sp, #48]
    4fa0:	ldp	x26, x25, [sp, #32]
    4fa4:	ldp	x28, x27, [sp, #16]
    4fa8:	ldp	x29, x30, [sp], #96
    4fac:	ret
    4fb0:	mov	x19, xzr
    4fb4:	cmp	x19, x21
    4fb8:	b.cs	4f88 <libintl_textdomain@@Base+0x11e8>  // b.hs, b.nlast
    4fbc:	ldr	x8, [x27, #48]
    4fc0:	add	x9, x19, x21
    4fc4:	lsr	x26, x9, #1
    4fc8:	ldr	w9, [x27, #24]
    4fcc:	add	x8, x8, x26, lsl #3
    4fd0:	ldr	w8, [x8, #4]
    4fd4:	ldr	x10, [x27]
    4fd8:	cmp	w9, #0x0
    4fdc:	mov	x0, x20
    4fe0:	rev	w11, w8
    4fe4:	csel	w8, w8, w11, eq  // eq = none
    4fe8:	add	x1, x10, x8
    4fec:	bl	2090 <strcmp@plt>
    4ff0:	cmp	w0, #0x0
    4ff4:	csel	x21, x26, x21, lt  // lt = tstop
    4ff8:	csinc	x19, x19, x26, le
    4ffc:	cbnz	w0, 4fb4 <libintl_textdomain@@Base+0x1214>
    5000:	b	5014 <libintl_textdomain@@Base+0x1274>
    5004:	ldur	x28, [x29, #-80]
    5008:	ldp	x22, x23, [x29, #-64]
    500c:	ldur	w25, [x29, #-68]
    5010:	mov	w26, w24
    5014:	ldur	x8, [x29, #-40]
    5018:	subs	x8, x26, x8
    501c:	b.cs	504c <libintl_textdomain@@Base+0x12ac>  // b.hs, b.nlast
    5020:	ldr	x10, [x27, #56]
    5024:	ldr	x8, [x27]
    5028:	ldr	w12, [x27, #24]
    502c:	lsl	x11, x26, #3
    5030:	add	x9, x10, x26, lsl #3
    5034:	ldr	w9, [x9, #4]
    5038:	cbz	w12, 5060 <libintl_textdomain@@Base+0x12c0>
    503c:	ldr	w10, [x10, x11]
    5040:	rev	w9, w9
    5044:	rev	w10, w10
    5048:	b	5064 <libintl_textdomain@@Base+0x12c4>
    504c:	ldr	x9, [x27, #80]
    5050:	add	x8, x9, x8, lsl #4
    5054:	ldp	x24, x20, [x8]
    5058:	cbnz	w25, 5070 <libintl_textdomain@@Base+0x12d0>
    505c:	b	5388 <libintl_textdomain@@Base+0x15e8>
    5060:	ldr	w10, [x10, x11]
    5064:	add	x20, x8, w9, uxtw
    5068:	add	w24, w10, #0x1
    506c:	cbz	w25, 5388 <libintl_textdomain@@Base+0x15e8>
    5070:	stp	x22, x23, [x29, #-64]
    5074:	cbz	x23, 5084 <libintl_textdomain@@Base+0x12e4>
    5078:	ldur	x8, [x29, #-56]
    507c:	ldr	x23, [x8, #16]
    5080:	cbnz	x23, 50f8 <libintl_textdomain@@Base+0x1358>
    5084:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    5088:	ldrb	w8, [x19, #1088]
    508c:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    5090:	tbnz	w8, #0, 50e8 <libintl_textdomain@@Base+0x1348>
    5094:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    5098:	add	x0, x0, #0xa53
    509c:	bl	2210 <getenv@plt>
    50a0:	cbz	x0, 50e0 <libintl_textdomain@@Base+0x1340>
    50a4:	ldrb	w8, [x0]
    50a8:	mov	x23, x0
    50ac:	cbz	w8, 50e0 <libintl_textdomain@@Base+0x1340>
    50b0:	mov	x0, x23
    50b4:	bl	1dc0 <strlen@plt>
    50b8:	add	x22, x0, #0x1
    50bc:	mov	x0, x22
    50c0:	bl	1f20 <malloc@plt>
    50c4:	mov	x25, x0
    50c8:	cbz	x0, 50dc <libintl_textdomain@@Base+0x133c>
    50cc:	mov	x0, x25
    50d0:	mov	x1, x23
    50d4:	mov	x2, x22
    50d8:	bl	1d70 <memcpy@plt>
    50dc:	str	x25, [x21, #1080]
    50e0:	mov	w8, #0x1                   	// #1
    50e4:	strb	w8, [x19, #1088]
    50e8:	ldr	x23, [x21, #1080]
    50ec:	cbnz	x23, 50f8 <libintl_textdomain@@Base+0x1358>
    50f0:	bl	5fe4 <libintl_ngettext@@Base+0x874>
    50f4:	mov	x23, x0
    50f8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    50fc:	ldr	x8, [x8, #4064]
    5100:	cbz	x8, 5110 <libintl_textdomain@@Base+0x1370>
    5104:	add	x0, x27, #0x80
    5108:	bl	1e00 <pthread_rwlock_rdlock@plt>
    510c:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    5110:	ldr	x8, [x27, #120]
    5114:	add	x19, x8, #0x1
    5118:	add	x8, x8, x8, lsl #1
    511c:	lsl	x8, x8, #3
    5120:	sub	x19, x19, #0x1
    5124:	cbz	x19, 5150 <libintl_textdomain@@Base+0x13b0>
    5128:	ldr	x21, [x27, #112]
    512c:	mov	x1, x23
    5130:	sub	x22, x8, #0x18
    5134:	add	x9, x21, x8
    5138:	ldur	x0, [x9, #-24]
    513c:	bl	2090 <strcmp@plt>
    5140:	mov	x8, x22
    5144:	cbnz	w0, 5120 <libintl_textdomain@@Base+0x1380>
    5148:	add	x25, x21, x22
    514c:	b	5154 <libintl_textdomain@@Base+0x13b4>
    5150:	mov	x25, xzr
    5154:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    5158:	ldr	x8, [x8, #4064]
    515c:	cbz	x8, 516c <libintl_textdomain@@Base+0x13cc>
    5160:	add	x0, x27, #0x80
    5164:	bl	2100 <pthread_rwlock_unlock@plt>
    5168:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    516c:	cbnz	x25, 5358 <libintl_textdomain@@Base+0x15b8>
    5170:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    5174:	ldr	x8, [x8, #4064]
    5178:	cbz	x8, 5188 <libintl_textdomain@@Base+0x13e8>
    517c:	add	x0, x27, #0x80
    5180:	bl	2050 <pthread_rwlock_wrlock@plt>
    5184:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    5188:	ldr	x25, [x27, #120]
    518c:	add	x8, x25, x25, lsl #1
    5190:	add	x19, x25, #0x1
    5194:	lsl	x8, x8, #3
    5198:	sub	x19, x19, #0x1
    519c:	cbz	x19, 51c8 <libintl_textdomain@@Base+0x1428>
    51a0:	ldr	x21, [x27, #112]
    51a4:	mov	x1, x23
    51a8:	sub	x22, x8, #0x18
    51ac:	add	x9, x21, x8
    51b0:	ldur	x0, [x9, #-24]
    51b4:	bl	2090 <strcmp@plt>
    51b8:	mov	x8, x22
    51bc:	cbnz	w0, 5198 <libintl_textdomain@@Base+0x13f8>
    51c0:	add	x25, x21, x22
    51c4:	b	5340 <libintl_textdomain@@Base+0x15a0>
    51c8:	ldr	x0, [x27, #112]
    51cc:	cbz	x0, 51e4 <libintl_textdomain@@Base+0x1444>
    51d0:	mov	w8, #0x18                  	// #24
    51d4:	orr	x9, xzr, #0x18
    51d8:	madd	x1, x25, x8, x9
    51dc:	bl	1ff0 <realloc@plt>
    51e0:	b	51f4 <libintl_textdomain@@Base+0x1454>
    51e4:	mov	w8, #0x18                  	// #24
    51e8:	orr	x9, xzr, #0x18
    51ec:	madd	x0, x25, x8, x9
    51f0:	bl	1f20 <malloc@plt>
    51f4:	mov	x21, x0
    51f8:	cbz	x0, 5588 <libintl_textdomain@@Base+0x17e8>
    51fc:	mov	x0, x23
    5200:	str	x21, [x27, #112]
    5204:	bl	2000 <strdup@plt>
    5208:	cbz	x0, 5588 <libintl_textdomain@@Base+0x17e8>
    520c:	mov	w8, #0x18                  	// #24
    5210:	stur	x25, [x29, #-48]
    5214:	madd	x25, x25, x8, x21
    5218:	mov	x23, x0
    521c:	str	x0, [x25]
    5220:	ldp	x0, x1, [x29, #-64]
    5224:	adrp	x2, 6000 <libintl_ngettext@@Base+0x890>
    5228:	mov	x8, #0xffffffffffffffff    	// #-1
    522c:	mov	x22, x25
    5230:	add	x2, x2, #0x9f1
    5234:	sub	x4, x29, #0x8
    5238:	mov	w3, wzr
    523c:	str	x8, [x22, #8]!
    5240:	bl	4e14 <libintl_textdomain@@Base+0x1074>
    5244:	cbz	x0, 5324 <libintl_textdomain@@Base+0x1584>
    5248:	cmn	x0, #0x1
    524c:	b.eq	5580 <libintl_textdomain@@Base+0x17e0>  // b.none
    5250:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    5254:	add	x1, x1, #0x9e5
    5258:	bl	21c0 <strstr@plt>
    525c:	cbz	x0, 5324 <libintl_textdomain@@Base+0x1584>
    5260:	stp	x22, x21, [x29, #-64]
    5264:	add	x22, x0, #0x8
    5268:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    526c:	add	x1, x1, #0x9ee
    5270:	mov	x0, x22
    5274:	bl	21f0 <strcspn@plt>
    5278:	add	x8, x0, #0x10
    527c:	and	x8, x8, #0xfffffffffffffff0
    5280:	mov	x9, sp
    5284:	sub	x21, x9, x8
    5288:	mov	x19, x0
    528c:	mov	sp, x21
    5290:	mov	x0, x21
    5294:	mov	x1, x22
    5298:	mov	x2, x19
    529c:	bl	1d70 <memcpy@plt>
    52a0:	mov	w1, #0x2f                  	// #47
    52a4:	mov	x0, x23
    52a8:	strb	wzr, [x21, x19]
    52ac:	bl	2120 <strchr@plt>
    52b0:	cbnz	x0, 5310 <libintl_textdomain@@Base+0x1570>
    52b4:	mov	x0, x23
    52b8:	bl	1dc0 <strlen@plt>
    52bc:	add	x9, x0, #0x1a
    52c0:	mov	x8, sp
    52c4:	and	x9, x9, #0xfffffffffffffff0
    52c8:	mov	x19, x21
    52cc:	sub	x21, x8, x9
    52d0:	mov	x22, x0
    52d4:	mov	sp, x21
    52d8:	mov	x0, x21
    52dc:	mov	x1, x23
    52e0:	mov	x2, x22
    52e4:	bl	1d70 <memcpy@plt>
    52e8:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    52ec:	add	x8, x8, #0x9f2
    52f0:	ldr	x8, [x8]
    52f4:	mov	w10, #0x494c                	// #18764
    52f8:	add	x9, x21, x22
    52fc:	movk	w10, #0x54, lsl #16
    5300:	mov	x23, x21
    5304:	mov	x21, x19
    5308:	stur	w10, [x9, #7]
    530c:	str	x8, [x9]
    5310:	mov	x0, x23
    5314:	mov	x1, x21
    5318:	bl	2170 <iconv_open@plt>
    531c:	ldp	x8, x21, [x29, #-64]
    5320:	str	x0, [x8]
    5324:	ldur	x9, [x29, #-48]
    5328:	mov	w8, #0x18                  	// #24
    532c:	madd	x8, x9, x8, x21
    5330:	str	xzr, [x8, #16]
    5334:	ldr	x8, [x27, #120]
    5338:	add	x8, x8, #0x1
    533c:	str	x8, [x27, #120]
    5340:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    5344:	ldr	x8, [x8, #4064]
    5348:	cbz	x8, 5358 <libintl_textdomain@@Base+0x15b8>
    534c:	add	x0, x27, #0x80
    5350:	bl	2100 <pthread_rwlock_unlock@plt>
    5354:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    5358:	ldr	x8, [x25, #8]
    535c:	cmn	x8, #0x1
    5360:	b.eq	5388 <libintl_textdomain@@Base+0x15e8>  // b.none
    5364:	ldr	x8, [x25, #16]
    5368:	cbz	x8, 5504 <libintl_textdomain@@Base+0x1764>
    536c:	cmn	x8, #0x1
    5370:	b.eq	54fc <libintl_textdomain@@Base+0x175c>  // b.none
    5374:	ldr	x8, [x8, x26, lsl #3]
    5378:	cbz	x8, 5390 <libintl_textdomain@@Base+0x15f0>
    537c:	ldr	x8, [x25, #16]
    5380:	ldr	x20, [x8, x26, lsl #3]
    5384:	ldr	x24, [x20], #8
    5388:	str	x24, [x28]
    538c:	b	4f8c <libintl_textdomain@@Base+0x11ec>
    5390:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    5394:	ldr	x8, [x8, #4064]
    5398:	cbz	x8, 53ac <libintl_textdomain@@Base+0x160c>
    539c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    53a0:	add	x0, x0, #0x3f8
    53a4:	bl	2220 <pthread_mutex_lock@plt>
    53a8:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    53ac:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    53b0:	ldr	x0, [x22, #1064]
    53b4:	mov	w19, wzr
    53b8:	mov	x21, xzr
    53bc:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    53c0:	mov	w27, #0xff0                 	// #4080
    53c4:	ldr	x8, [x23, #1072]
    53c8:	add	x9, x0, #0x8
    53cc:	stp	x24, x20, [x29, #-16]
    53d0:	stur	x9, [x29, #-24]
    53d4:	subs	x8, x8, #0x8
    53d8:	b.cc	5410 <libintl_textdomain@@Base+0x1670>  // b.lo, b.ul, b.last
    53dc:	stur	x8, [x29, #-32]
    53e0:	ldr	x0, [x25, #8]
    53e4:	sub	x1, x29, #0x8
    53e8:	sub	x2, x29, #0x10
    53ec:	sub	x3, x29, #0x18
    53f0:	sub	x4, x29, #0x20
    53f4:	bl	20a0 <iconv@plt>
    53f8:	cmn	x0, #0x1
    53fc:	b.ne	5458 <libintl_textdomain@@Base+0x16b8>  // b.any
    5400:	bl	2200 <__errno_location@plt>
    5404:	ldr	w8, [x0]
    5408:	cmp	w8, #0x7
    540c:	b.ne	54b8 <libintl_textdomain@@Base+0x1718>  // b.any
    5410:	cmp	w19, #0x1
    5414:	b.lt	5438 <libintl_textdomain@@Base+0x1698>  // b.tstop
    5418:	add	w19, w19, #0x1
    541c:	mul	w8, w19, w27
    5420:	sxtw	x1, w8
    5424:	mov	x0, x21
    5428:	str	x1, [x23, #1072]
    542c:	bl	1ff0 <realloc@plt>
    5430:	cbnz	x0, 544c <libintl_textdomain@@Base+0x16ac>
    5434:	b	54d8 <libintl_textdomain@@Base+0x1738>
    5438:	mov	w0, #0xff0                 	// #4080
    543c:	str	x27, [x23, #1072]
    5440:	bl	1f20 <malloc@plt>
    5444:	mov	w19, #0x1                   	// #1
    5448:	cbz	x0, 54d8 <libintl_textdomain@@Base+0x1738>
    544c:	str	x0, [x22, #1064]
    5450:	mov	x21, x0
    5454:	b	53c4 <libintl_textdomain@@Base+0x1624>
    5458:	ldur	x8, [x29, #-24]
    545c:	ldr	x9, [x22, #1064]
    5460:	sub	x10, x8, x9
    5464:	sub	x10, x10, #0x8
    5468:	str	x10, [x9]
    546c:	ldr	x10, [x25, #16]
    5470:	str	x9, [x10, x26, lsl #3]
    5474:	ldr	x9, [x22, #1064]
    5478:	ldr	x10, [x23, #1072]
    547c:	sub	x9, x9, x8
    5480:	add	x9, x10, x9
    5484:	and	x10, x9, #0x7
    5488:	and	x9, x9, #0xfffffffffffffff8
    548c:	add	x8, x8, x10
    5490:	str	x8, [x22, #1064]
    5494:	str	x9, [x23, #1072]
    5498:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    549c:	ldr	x8, [x8, #4064]
    54a0:	cbz	x8, 537c <libintl_textdomain@@Base+0x15dc>
    54a4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    54a8:	add	x0, x0, #0x3f8
    54ac:	bl	2230 <pthread_mutex_unlock@plt>
    54b0:	cbz	w0, 537c <libintl_textdomain@@Base+0x15dc>
    54b4:	b	55a0 <libintl_textdomain@@Base+0x1800>
    54b8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    54bc:	ldr	x8, [x8, #4064]
    54c0:	cbz	x8, 4f88 <libintl_textdomain@@Base+0x11e8>
    54c4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    54c8:	add	x0, x0, #0x3f8
    54cc:	bl	2230 <pthread_mutex_unlock@plt>
    54d0:	cbz	w0, 4f88 <libintl_textdomain@@Base+0x11e8>
    54d4:	b	55a0 <libintl_textdomain@@Base+0x1800>
    54d8:	str	xzr, [x22, #1064]
    54dc:	str	xzr, [x23, #1072]
    54e0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    54e4:	ldr	x8, [x8, #4064]
    54e8:	cbz	x8, 54fc <libintl_textdomain@@Base+0x175c>
    54ec:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    54f0:	add	x0, x0, #0x3f8
    54f4:	bl	2230 <pthread_mutex_unlock@plt>
    54f8:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    54fc:	mov	x20, #0xffffffffffffffff    	// #-1
    5500:	b	4f8c <libintl_textdomain@@Base+0x11ec>
    5504:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    5508:	ldr	x8, [x8, #4064]
    550c:	mov	x19, x28
    5510:	cbz	x8, 552c <libintl_textdomain@@Base+0x178c>
    5514:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    5518:	add	x0, x0, #0x3f8
    551c:	bl	2220 <pthread_mutex_lock@plt>
    5520:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    5524:	ldr	x8, [x25, #16]
    5528:	cbnz	x8, 5554 <libintl_textdomain@@Base+0x17b4>
    552c:	ldr	w8, [x27, #64]
    5530:	ldur	x9, [x29, #-40]
    5534:	mov	w1, #0x8                   	// #8
    5538:	add	w0, w8, w9
    553c:	bl	1fb0 <calloc@plt>
    5540:	mov	x28, x19
    5544:	str	x0, [x25, #16]
    5548:	cbnz	x0, 53ac <libintl_textdomain@@Base+0x160c>
    554c:	mov	x8, #0xffffffffffffffff    	// #-1
    5550:	str	x8, [x25, #16]
    5554:	adrp	x9, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    5558:	ldr	x9, [x9, #4064]
    555c:	mov	x28, x19
    5560:	cbz	x9, 536c <libintl_textdomain@@Base+0x15cc>
    5564:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    5568:	add	x0, x0, #0x3f8
    556c:	bl	2230 <pthread_mutex_unlock@plt>
    5570:	cbnz	w0, 55a0 <libintl_textdomain@@Base+0x1800>
    5574:	ldr	x8, [x25, #16]
    5578:	mov	x28, x19
    557c:	b	536c <libintl_textdomain@@Base+0x15cc>
    5580:	mov	x0, x23
    5584:	bl	20e0 <free@plt>
    5588:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    558c:	ldr	x8, [x8, #4064]
    5590:	cbz	x8, 54fc <libintl_textdomain@@Base+0x175c>
    5594:	add	x0, x27, #0x80
    5598:	bl	2100 <pthread_rwlock_unlock@plt>
    559c:	cbz	w0, 54fc <libintl_textdomain@@Base+0x175c>
    55a0:	bl	2040 <abort@plt>
    55a4:	stp	x29, x30, [sp, #-48]!
    55a8:	stp	x22, x21, [sp, #16]
    55ac:	stp	x20, x19, [sp, #32]
    55b0:	mov	x19, x1
    55b4:	mov	x20, x0
    55b8:	mov	w21, #0x8                   	// #8
    55bc:	mov	w22, #0x10                  	// #16
    55c0:	mov	x29, sp
    55c4:	ldr	w8, [x20]
    55c8:	cmp	w8, #0x3
    55cc:	b.ne	55ec <libintl_textdomain@@Base+0x184c>  // b.any
    55d0:	ldr	x0, [x20, #8]!
    55d4:	mov	x1, x19
    55d8:	bl	55a4 <libintl_textdomain@@Base+0x1804>
    55dc:	cmp	x0, #0x0
    55e0:	csel	x8, x22, x21, eq  // eq = none
    55e4:	ldr	x20, [x20, x8]
    55e8:	b	55c4 <libintl_textdomain@@Base+0x1824>
    55ec:	cmp	w8, #0x2
    55f0:	b.eq	5618 <libintl_textdomain@@Base+0x1878>  // b.none
    55f4:	cmp	w8, #0x1
    55f8:	b.eq	5648 <libintl_textdomain@@Base+0x18a8>  // b.none
    55fc:	cbnz	w8, 56bc <libintl_textdomain@@Base+0x191c>
    5600:	ldr	w8, [x20, #4]
    5604:	cbz	w8, 56c0 <libintl_textdomain@@Base+0x1920>
    5608:	cmp	w8, #0x1
    560c:	b.ne	56bc <libintl_textdomain@@Base+0x191c>  // b.any
    5610:	ldr	x19, [x20, #8]
    5614:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5618:	ldr	x0, [x20, #8]
    561c:	mov	x1, x19
    5620:	bl	55a4 <libintl_textdomain@@Base+0x1804>
    5624:	ldr	w8, [x20, #4]
    5628:	mov	x21, x0
    562c:	cmp	w8, #0xe
    5630:	b.eq	5660 <libintl_textdomain@@Base+0x18c0>  // b.none
    5634:	cmp	w8, #0xf
    5638:	b.ne	567c <libintl_textdomain@@Base+0x18dc>  // b.any
    563c:	cbz	x21, 5664 <libintl_textdomain@@Base+0x18c4>
    5640:	mov	w19, #0x1                   	// #1
    5644:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5648:	ldr	x0, [x20, #8]
    564c:	mov	x1, x19
    5650:	bl	55a4 <libintl_textdomain@@Base+0x1804>
    5654:	cmp	x0, #0x0
    5658:	cset	w0, eq  // eq = none
    565c:	b	56c4 <libintl_textdomain@@Base+0x1924>
    5660:	cbz	x21, 56bc <libintl_textdomain@@Base+0x191c>
    5664:	ldr	x0, [x20, #16]
    5668:	mov	x1, x19
    566c:	bl	55a4 <libintl_textdomain@@Base+0x1804>
    5670:	cmp	x0, #0x0
    5674:	cset	w0, ne  // ne = any
    5678:	b	56c4 <libintl_textdomain@@Base+0x1924>
    567c:	ldr	x0, [x20, #16]
    5680:	mov	x1, x19
    5684:	bl	55a4 <libintl_textdomain@@Base+0x1804>
    5688:	ldr	w8, [x20, #4]
    568c:	sub	w8, w8, #0x3
    5690:	cmp	w8, #0xa
    5694:	b.hi	56bc <libintl_textdomain@@Base+0x191c>  // b.pmore
    5698:	adrp	x9, 6000 <libintl_ngettext@@Base+0x890>
    569c:	add	x9, x9, #0x9a0
    56a0:	adr	x10, 56b4 <libintl_textdomain@@Base+0x1914>
    56a4:	ldrb	w11, [x9, x8]
    56a8:	add	x10, x10, x11, lsl #2
    56ac:	mov	x19, x0
    56b0:	br	x10
    56b4:	mul	x19, x19, x21
    56b8:	b	56c0 <libintl_textdomain@@Base+0x1920>
    56bc:	mov	x19, xzr
    56c0:	mov	x0, x19
    56c4:	ldp	x20, x19, [sp, #32]
    56c8:	ldp	x22, x21, [sp, #16]
    56cc:	ldp	x29, x30, [sp], #48
    56d0:	ret
    56d4:	cbnz	x19, 56e0 <libintl_textdomain@@Base+0x1940>
    56d8:	mov	w0, #0x8                   	// #8
    56dc:	bl	1de0 <raise@plt>
    56e0:	udiv	x19, x21, x19
    56e4:	b	56c0 <libintl_textdomain@@Base+0x1920>
    56e8:	cbnz	x19, 56f4 <libintl_textdomain@@Base+0x1954>
    56ec:	mov	w0, #0x8                   	// #8
    56f0:	bl	1de0 <raise@plt>
    56f4:	udiv	x8, x21, x19
    56f8:	msub	x19, x8, x19, x21
    56fc:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5700:	add	x19, x19, x21
    5704:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5708:	sub	x19, x21, x19
    570c:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5710:	cmp	x21, x19
    5714:	cset	w19, cc  // cc = lo, ul, last
    5718:	b	56c0 <libintl_textdomain@@Base+0x1920>
    571c:	cmp	x21, x19
    5720:	cset	w19, hi  // hi = pmore
    5724:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5728:	cmp	x21, x19
    572c:	cset	w19, ls  // ls = plast
    5730:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5734:	cmp	x21, x19
    5738:	cset	w19, cs  // cs = hs, nlast
    573c:	b	56c0 <libintl_textdomain@@Base+0x1920>
    5740:	cmp	x21, x19
    5744:	cset	w19, eq  // eq = none
    5748:	b	56c0 <libintl_textdomain@@Base+0x1920>
    574c:	cmp	x21, x19
    5750:	cset	w19, ne  // ne = any
    5754:	b	56c0 <libintl_textdomain@@Base+0x1920>

0000000000005758 <libintl_dcngettext@@Base>:
    5758:	mov	w5, w4
    575c:	mov	x4, x3
    5760:	mov	w3, #0x1                   	// #1
    5764:	b	45a0 <libintl_textdomain@@Base+0x800>

0000000000005768 <libintl_dngettext@@Base>:
    5768:	mov	w4, #0x5                   	// #5
    576c:	b	1f70 <libintl_dcngettext@plt>

0000000000005770 <libintl_ngettext@@Base>:
    5770:	mov	x3, x2
    5774:	mov	x2, x1
    5778:	mov	w4, #0x5                   	// #5
    577c:	mov	x1, x0
    5780:	mov	x0, xzr
    5784:	b	1f70 <libintl_dcngettext@plt>
    5788:	str	d8, [sp, #-112]!
    578c:	stp	x29, x30, [sp, #16]
    5790:	stp	x28, x27, [sp, #32]
    5794:	stp	x26, x25, [sp, #48]
    5798:	stp	x24, x23, [sp, #64]
    579c:	stp	x22, x21, [sp, #80]
    57a0:	stp	x20, x19, [sp, #96]
    57a4:	mov	x29, sp
    57a8:	sub	sp, sp, #0x810
    57ac:	add	x8, sp, #0x20
    57b0:	str	x8, [x29, #8]
    57b4:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    57b8:	ldr	d8, [x8, #2664]
    57bc:	mov	w26, #0x28c                 	// #652
    57c0:	adrp	x24, 6000 <libintl_ngettext@@Base+0x890>
    57c4:	mov	w25, #0x160                 	// #352
    57c8:	stp	xzr, x0, [sp, #8]
    57cc:	mov	w22, wzr
    57d0:	str	wzr, [sp, #28]
    57d4:	mov	w27, wzr
    57d8:	movk	w26, #0x102, lsl #16
    57dc:	mov	w19, #0xfffffffe            	// #-2
    57e0:	mov	w28, #0xc8                  	// #200
    57e4:	add	x24, x24, #0xae8
    57e8:	movk	w25, #0x4bc, lsl #16
    57ec:	add	x23, sp, #0x660
    57f0:	add	x21, sp, #0x20
    57f4:	add	x20, sp, #0x660
    57f8:	add	x8, x20, x28, lsl #1
    57fc:	sub	x8, x8, #0x2
    5800:	cmp	x8, x23
    5804:	strh	w27, [x23]
    5808:	b.hi	58c0 <libintl_ngettext@@Base+0x150>  // b.pmore
    580c:	lsr	x8, x28, #4
    5810:	cmp	x8, #0x270
    5814:	b.hi	5dac <libintl_ngettext@@Base+0x63c>  // b.pmore
    5818:	ubfx	x9, x28, #3, #60
    581c:	lsl	x8, x28, #1
    5820:	cmp	x9, #0x271
    5824:	mov	w9, #0x2710                	// #10000
    5828:	csel	x28, x8, x9, cc  // cc = lo, ul, last
    582c:	mov	w8, #0xa                   	// #10
    5830:	orr	x9, xzr, #0x7
    5834:	madd	x0, x28, x8, x9
    5838:	bl	1f20 <malloc@plt>
    583c:	cbz	x0, 5dac <libintl_ngettext@@Base+0x63c>
    5840:	sub	x8, x23, x20
    5844:	asr	x21, x8, #1
    5848:	add	x23, x21, #0x1
    584c:	lsl	x2, x23, #1
    5850:	mov	x1, x20
    5854:	mov	x24, x0
    5858:	bl	1d70 <memcpy@plt>
    585c:	lsl	x8, x28, #1
    5860:	add	x8, x8, #0x7
    5864:	ldr	x1, [x29, #8]
    5868:	and	x8, x8, #0xfffffffffffffff8
    586c:	add	x25, x24, x8
    5870:	lsl	x2, x23, #3
    5874:	mov	x0, x25
    5878:	bl	1d70 <memcpy@plt>
    587c:	add	x8, sp, #0x660
    5880:	cmp	x20, x8
    5884:	b.eq	5890 <libintl_ngettext@@Base+0x120>  // b.none
    5888:	mov	x0, x20
    588c:	bl	20e0 <free@plt>
    5890:	add	x8, x24, x28, lsl #1
    5894:	add	x23, x24, x21, lsl #1
    5898:	sub	x8, x8, #0x2
    589c:	cmp	x8, x23
    58a0:	b.ls	5dd4 <libintl_ngettext@@Base+0x664>  // b.plast
    58a4:	add	x21, x25, x21, lsl #3
    58a8:	str	x25, [x29, #8]
    58ac:	mov	x20, x24
    58b0:	adrp	x24, 6000 <libintl_ngettext@@Base+0x890>
    58b4:	mov	w25, #0x160                 	// #352
    58b8:	add	x24, x24, #0xae8
    58bc:	movk	w25, #0x4bc, lsl #16
    58c0:	cmp	w27, #0x9
    58c4:	b.eq	5dcc <libintl_ngettext@@Base+0x65c>  // b.none
    58c8:	lsr	x8, x26, x27
    58cc:	tbnz	w8, #0, 59e4 <libintl_ngettext@@Base+0x274>
    58d0:	cmn	w19, #0x2
    58d4:	b.ne	5970 <libintl_ngettext@@Base+0x200>  // b.any
    58d8:	ldr	x8, [sp, #16]
    58dc:	ldr	x8, [x8]
    58e0:	add	x8, x8, #0x1
    58e4:	ldurb	w19, [x8, #-1]
    58e8:	cmp	w19, #0x9
    58ec:	b.eq	58e0 <libintl_ngettext@@Base+0x170>  // b.none
    58f0:	cmp	w19, #0x20
    58f4:	b.eq	58e0 <libintl_ngettext@@Base+0x170>  // b.none
    58f8:	cbnz	w19, 5904 <libintl_ngettext@@Base+0x194>
    58fc:	sub	x8, x8, #0x1
    5900:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5904:	sub	w9, w19, #0xa
    5908:	cmp	w9, #0x35
    590c:	b.hi	5c6c <libintl_ngettext@@Base+0x4fc>  // b.pmore
    5910:	adrp	x12, 6000 <libintl_ngettext@@Base+0x890>
    5914:	add	x12, x12, #0xa70
    5918:	adr	x10, 5928 <libintl_ngettext@@Base+0x1b8>
    591c:	ldrh	w11, [x12, x9, lsl #1]
    5920:	add	x10, x10, x11, lsl #2
    5924:	br	x10
    5928:	ldrb	w9, [x8]
    592c:	sub	x22, x19, #0x30
    5930:	sub	w10, w9, #0x30
    5934:	cmp	w10, #0x9
    5938:	b.hi	595c <libintl_ngettext@@Base+0x1ec>  // b.pmore
    593c:	mov	w12, #0xa                   	// #10
    5940:	mul	x10, x22, x12
    5944:	add	x10, x10, w9, uxtb
    5948:	ldrb	w9, [x8, #1]!
    594c:	sub	x22, x10, #0x30
    5950:	sub	w11, w9, #0x30
    5954:	cmp	w11, #0xa
    5958:	b.cc	5940 <libintl_ngettext@@Base+0x1d0>  // b.lo, b.ul, b.last
    595c:	lsr	x9, x22, #32
    5960:	str	x9, [sp, #8]
    5964:	mov	w19, #0x106                 	// #262
    5968:	ldr	x9, [sp, #16]
    596c:	str	x8, [x9]
    5970:	ldrsb	w8, [x24, w27, sxtw]
    5974:	cmp	w19, #0x1
    5978:	b.lt	5994 <libintl_ngettext@@Base+0x224>  // b.tstop
    597c:	cmp	w19, #0x106
    5980:	b.hi	59a0 <libintl_ngettext@@Base+0x230>  // b.pmore
    5984:	adrp	x9, 6000 <libintl_ngettext@@Base+0x890>
    5988:	add	x9, x9, #0xb03
    598c:	ldrb	w9, [x9, w19, uxtw]
    5990:	b	59a4 <libintl_ngettext@@Base+0x234>
    5994:	mov	w9, wzr
    5998:	mov	w19, wzr
    599c:	b	59a4 <libintl_ngettext@@Base+0x234>
    59a0:	mov	w9, #0x2                   	// #2
    59a4:	add	w8, w9, w8
    59a8:	cmp	w8, #0x36
    59ac:	b.hi	59e4 <libintl_ngettext@@Base+0x274>  // b.pmore
    59b0:	adrp	x10, 6000 <libintl_ngettext@@Base+0x890>
    59b4:	add	x10, x10, #0xc0a
    59b8:	ldrsb	w10, [x10, w8, uxtw]
    59bc:	cmp	w9, w10
    59c0:	b.ne	59e4 <libintl_ngettext@@Base+0x274>  // b.any
    59c4:	adrp	x9, 6000 <libintl_ngettext@@Base+0x890>
    59c8:	add	x9, x9, #0xc41
    59cc:	ldrb	w27, [x9, x8]
    59d0:	orr	x8, x8, #0x1
    59d4:	cmp	x8, #0x25
    59d8:	b.ne	5b20 <libintl_ngettext@@Base+0x3b0>  // b.any
    59dc:	neg	w24, w27
    59e0:	b	5a04 <libintl_ngettext@@Base+0x294>
    59e4:	mov	w9, #0xfd33                	// #64819
    59e8:	sxtw	x8, w27
    59ec:	movk	w9, #0x205, lsl #16
    59f0:	lsr	x9, x9, x8
    59f4:	tbnz	w9, #0, 5ac0 <libintl_ngettext@@Base+0x350>
    59f8:	adrp	x9, 6000 <libintl_ngettext@@Base+0x890>
    59fc:	add	x9, x9, #0xc78
    5a00:	ldrb	w24, [x9, x8]
    5a04:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    5a08:	add	x8, x8, #0xc93
    5a0c:	ldrb	w25, [x8, w24, sxtw]
    5a10:	mov	w8, #0x1                   	// #1
    5a14:	sub	x8, x8, x25
    5a18:	ldr	x0, [x21, x8, lsl #3]
    5a1c:	sub	w8, w24, #0x2
    5a20:	cmp	w8, #0xb
    5a24:	b.hi	5a5c <libintl_ngettext@@Base+0x2ec>  // b.pmore
    5a28:	adrp	x11, 6000 <libintl_ngettext@@Base+0x890>
    5a2c:	add	x11, x11, #0xadc
    5a30:	adr	x9, 5a40 <libintl_ngettext@@Base+0x2d0>
    5a34:	ldrb	w10, [x11, x8]
    5a38:	add	x9, x9, x10, lsl #2
    5a3c:	br	x9
    5a40:	ldur	x8, [x21, #-16]
    5a44:	ldr	x9, [x21]
    5a48:	ldur	w1, [x21, #-8]
    5a4c:	sub	x2, x29, #0x20
    5a50:	mov	w0, #0x2                   	// #2
    5a54:	stp	x8, x9, [x29, #-32]
    5a58:	bl	5e3c <libintl_ngettext@@Base+0x6cc>
    5a5c:	adrp	x9, 6000 <libintl_ngettext@@Base+0x890>
    5a60:	sxtw	x8, w24
    5a64:	add	x9, x9, #0xca1
    5a68:	ldrb	w8, [x9, x8]
    5a6c:	sub	x21, x21, x25, lsl #3
    5a70:	adrp	x9, 6000 <libintl_ngettext@@Base+0x890>
    5a74:	sub	x23, x23, x25, lsl #1
    5a78:	str	x0, [x21, #8]!
    5a7c:	sub	x8, x8, #0x10
    5a80:	add	x9, x9, #0xcaf
    5a84:	ldrsb	w9, [x9, x8]
    5a88:	ldrsh	w10, [x23]
    5a8c:	add	w9, w10, w9
    5a90:	cmp	w9, #0x36
    5a94:	b.hi	5aec <libintl_ngettext@@Base+0x37c>  // b.pmore
    5a98:	adrp	x11, 6000 <libintl_ngettext@@Base+0x890>
    5a9c:	add	x11, x11, #0xc0a
    5aa0:	ldrsb	w11, [x11, w9, uxtw]
    5aa4:	and	w10, w10, #0xffff
    5aa8:	cmp	w10, w11, uxth
    5aac:	b.ne	5aec <libintl_ngettext@@Base+0x37c>  // b.any
    5ab0:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    5ab4:	add	x8, x8, #0xc41
    5ab8:	ldrb	w27, [x8, x9]
    5abc:	b	5af8 <libintl_ngettext@@Base+0x388>
    5ac0:	ldr	w8, [sp, #28]
    5ac4:	cmp	w8, #0x3
    5ac8:	b.eq	5b10 <libintl_ngettext@@Base+0x3a0>  // b.none
    5acc:	cbnz	w8, 5b50 <libintl_ngettext@@Base+0x3e0>
    5ad0:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    5ad4:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    5ad8:	mov	w2, #0x5                   	// #5
    5adc:	add	x0, x0, #0xcb5
    5ae0:	add	x1, x1, #0xcc3
    5ae4:	bl	2060 <dcgettext@plt>
    5ae8:	b	5b50 <libintl_ngettext@@Base+0x3e0>
    5aec:	adrp	x9, 6000 <libintl_ngettext@@Base+0x890>
    5af0:	add	x9, x9, #0xcb2
    5af4:	ldrsb	w27, [x9, x8]
    5af8:	adrp	x24, 6000 <libintl_ngettext@@Base+0x890>
    5afc:	mov	w25, #0x160                 	// #352
    5b00:	add	x24, x24, #0xae8
    5b04:	movk	w25, #0x4bc, lsl #16
    5b08:	add	x23, x23, #0x2
    5b0c:	b	57f8 <libintl_ngettext@@Base+0x88>
    5b10:	cmp	w19, #0x0
    5b14:	b.le	5b4c <libintl_ngettext@@Base+0x3dc>
    5b18:	mov	w19, #0xfffffffe            	// #-2
    5b1c:	b	5b50 <libintl_ngettext@@Base+0x3e0>
    5b20:	ldr	w9, [sp, #28]
    5b24:	mov	w19, #0xfffffffe            	// #-2
    5b28:	sub	w8, w9, #0x1
    5b2c:	cmp	w9, #0x0
    5b30:	csel	w8, wzr, w8, eq  // eq = none
    5b34:	str	w8, [sp, #28]
    5b38:	ldr	x8, [sp, #8]
    5b3c:	mov	w9, w22
    5b40:	bfi	x9, x8, #32, #32
    5b44:	str	x9, [x21, #8]!
    5b48:	b	5b08 <libintl_ngettext@@Base+0x398>
    5b4c:	cbz	w19, 5d6c <libintl_ngettext@@Base+0x5fc>
    5b50:	add	x21, x21, #0x8
    5b54:	lsr	x8, x26, x27
    5b58:	tbnz	w8, #0, 5b80 <libintl_ngettext@@Base+0x410>
    5b5c:	sxtw	x8, w27
    5b60:	lsr	x9, x25, x8
    5b64:	tbz	w9, #0, 5b80 <libintl_ngettext@@Base+0x410>
    5b68:	ldrsb	x8, [x24, x8]
    5b6c:	adds	x8, x8, #0x1
    5b70:	b.ne	5b80 <libintl_ngettext@@Base+0x410>  // b.any
    5b74:	orr	x8, x8, #0x1
    5b78:	cmp	x8, #0x25
    5b7c:	b.ne	5b94 <libintl_ngettext@@Base+0x424>  // b.any
    5b80:	cmp	x20, x23
    5b84:	b.eq	5d6c <libintl_ngettext@@Base+0x5fc>  // b.none
    5b88:	ldrsh	w27, [x23, #-2]!
    5b8c:	sub	x21, x21, #0x8
    5b90:	b	5b54 <libintl_ngettext@@Base+0x3e4>
    5b94:	ldr	x9, [sp, #8]
    5b98:	mov	w8, w22
    5b9c:	mov	w27, #0x7                   	// #7
    5ba0:	bfi	x8, x9, #32, #32
    5ba4:	str	x8, [x21]
    5ba8:	mov	w8, #0x3                   	// #3
    5bac:	str	w8, [sp, #28]
    5bb0:	b	5b08 <libintl_ngettext@@Base+0x398>
    5bb4:	ldr	x8, [x21]
    5bb8:	cbz	x8, 5d6c <libintl_ngettext@@Base+0x5fc>
    5bbc:	ldr	x9, [sp, #16]
    5bc0:	str	x8, [x9, #8]
    5bc4:	b	5a5c <libintl_ngettext@@Base+0x2ec>
    5bc8:	ldur	x8, [x21, #-32]
    5bcc:	ldur	x9, [x21, #-16]
    5bd0:	ldr	x10, [x21]
    5bd4:	sub	x2, x29, #0x20
    5bd8:	mov	w0, #0x3                   	// #3
    5bdc:	mov	w1, #0x10                  	// #16
    5be0:	stp	x8, x9, [x29, #-32]
    5be4:	stur	x10, [x29, #-16]
    5be8:	b	5a58 <libintl_ngettext@@Base+0x2e8>
    5bec:	ldur	x8, [x21, #-16]
    5bf0:	ldr	x9, [x21]
    5bf4:	sub	x2, x29, #0x20
    5bf8:	mov	w0, #0x2                   	// #2
    5bfc:	mov	w1, #0xf                   	// #15
    5c00:	b	5a54 <libintl_ngettext@@Base+0x2e4>
    5c04:	ldur	x8, [x21, #-16]
    5c08:	ldr	x9, [x21]
    5c0c:	sub	x2, x29, #0x20
    5c10:	mov	w0, #0x2                   	// #2
    5c14:	mov	w1, #0xe                   	// #14
    5c18:	b	5a54 <libintl_ngettext@@Base+0x2e4>
    5c1c:	ldr	x8, [x21]
    5c20:	sub	x2, x29, #0x20
    5c24:	mov	w0, #0x1                   	// #1
    5c28:	mov	w1, #0x2                   	// #2
    5c2c:	stur	x8, [x29, #-32]
    5c30:	b	5a58 <libintl_ngettext@@Base+0x2e8>
    5c34:	mov	w0, #0x20                  	// #32
    5c38:	bl	1f20 <malloc@plt>
    5c3c:	cbz	x0, 5a5c <libintl_ngettext@@Base+0x2ec>
    5c40:	str	xzr, [x0]
    5c44:	b	5a5c <libintl_ngettext@@Base+0x2ec>
    5c48:	mov	w0, #0x20                  	// #32
    5c4c:	bl	1f20 <malloc@plt>
    5c50:	cbz	x0, 5a5c <libintl_ngettext@@Base+0x2ec>
    5c54:	ldr	x8, [x21]
    5c58:	str	d8, [x0]
    5c5c:	str	x8, [x0, #8]
    5c60:	b	5a5c <libintl_ngettext@@Base+0x2ec>
    5c64:	ldur	x0, [x21, #-8]
    5c68:	b	5a5c <libintl_ngettext@@Base+0x2ec>
    5c6c:	cmp	w19, #0x7c
    5c70:	b.eq	5c8c <libintl_ngettext@@Base+0x51c>  // b.none
    5c74:	cmp	w19, #0x6e
    5c78:	b.eq	5968 <libintl_ngettext@@Base+0x1f8>  // b.none
    5c7c:	mov	w19, #0x100                 	// #256
    5c80:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5c84:	mov	w19, wzr
    5c88:	b	58fc <libintl_ngettext@@Base+0x18c>
    5c8c:	mov	x9, x8
    5c90:	ldrb	w10, [x9], #1
    5c94:	cmp	w10, w19
    5c98:	csel	x8, x9, x8, eq  // eq = none
    5c9c:	mov	w9, #0x100                 	// #256
    5ca0:	csel	w19, w19, w9, eq  // eq = none
    5ca4:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5ca8:	mov	x9, x8
    5cac:	ldrb	w10, [x9], #1
    5cb0:	cmp	w10, #0x3d
    5cb4:	mov	w10, #0xd                   	// #13
    5cb8:	csel	w22, w10, w22, eq  // eq = none
    5cbc:	csel	x8, x9, x8, eq  // eq = none
    5cc0:	mov	w9, #0x21                  	// #33
    5cc4:	b	5d3c <libintl_ngettext@@Base+0x5cc>
    5cc8:	mov	w19, #0x105                 	// #261
    5ccc:	mov	w22, #0x5                   	// #5
    5cd0:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5cd4:	mov	w19, #0x105                 	// #261
    5cd8:	mov	w22, #0x3                   	// #3
    5cdc:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5ce0:	mov	w19, #0x104                 	// #260
    5ce4:	mov	w22, #0x6                   	// #6
    5ce8:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5cec:	mov	w19, #0x104                 	// #260
    5cf0:	mov	w22, #0x7                   	// #7
    5cf4:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5cf8:	mov	w19, #0x105                 	// #261
    5cfc:	mov	w22, #0x4                   	// #4
    5d00:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5d04:	mov	x9, x8
    5d08:	ldrb	w10, [x9], #1
    5d0c:	mov	w11, #0x8                   	// #8
    5d10:	cmp	w10, #0x3d
    5d14:	mov	w10, #0xa                   	// #10
    5d18:	csel	w22, w10, w11, eq  // eq = none
    5d1c:	b	5d60 <libintl_ngettext@@Base+0x5f0>
    5d20:	mov	x9, x8
    5d24:	ldrb	w10, [x9], #1
    5d28:	cmp	w10, #0x3d
    5d2c:	mov	w10, #0xc                   	// #12
    5d30:	csel	w22, w10, w22, eq  // eq = none
    5d34:	csel	x8, x9, x8, eq  // eq = none
    5d38:	mov	w9, #0x100                 	// #256
    5d3c:	mov	w10, #0x102                 	// #258
    5d40:	csel	w19, w10, w9, eq  // eq = none
    5d44:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5d48:	mov	x9, x8
    5d4c:	ldrb	w10, [x9], #1
    5d50:	mov	w11, #0xb                   	// #11
    5d54:	cmp	w10, #0x3d
    5d58:	mov	w10, #0x9                   	// #9
    5d5c:	csel	w22, w11, w10, eq  // eq = none
    5d60:	csel	x8, x9, x8, eq  // eq = none
    5d64:	mov	w19, #0x103                 	// #259
    5d68:	b	5968 <libintl_ngettext@@Base+0x1f8>
    5d6c:	mov	w19, #0x1                   	// #1
    5d70:	add	x8, sp, #0x660
    5d74:	cmp	x20, x8
    5d78:	b.eq	5d84 <libintl_ngettext@@Base+0x614>  // b.none
    5d7c:	mov	x0, x20
    5d80:	bl	20e0 <free@plt>
    5d84:	mov	w0, w19
    5d88:	add	sp, sp, #0x810
    5d8c:	ldp	x20, x19, [sp, #96]
    5d90:	ldp	x22, x21, [sp, #80]
    5d94:	ldp	x24, x23, [sp, #64]
    5d98:	ldp	x26, x25, [sp, #48]
    5d9c:	ldp	x28, x27, [sp, #32]
    5da0:	ldp	x29, x30, [sp, #16]
    5da4:	ldr	d8, [sp], #112
    5da8:	ret
    5dac:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    5db0:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    5db4:	add	x0, x0, #0xcb5
    5db8:	add	x1, x1, #0xcd0
    5dbc:	mov	w2, #0x5                   	// #5
    5dc0:	bl	2060 <dcgettext@plt>
    5dc4:	mov	w19, #0x2                   	// #2
    5dc8:	b	5d70 <libintl_ngettext@@Base+0x600>
    5dcc:	mov	w19, wzr
    5dd0:	b	5d70 <libintl_ngettext@@Base+0x600>
    5dd4:	mov	w19, #0x1                   	// #1
    5dd8:	mov	x20, x24
    5ddc:	b	5d7c <libintl_ngettext@@Base+0x60c>
    5de0:	cbz	x0, 5e38 <libintl_ngettext@@Base+0x6c8>
    5de4:	stp	x29, x30, [sp, #-32]!
    5de8:	ldr	w8, [x0]
    5dec:	str	x19, [sp, #16]
    5df0:	mov	x19, x0
    5df4:	mov	x29, sp
    5df8:	cmp	w8, #0x1
    5dfc:	b.eq	5e20 <libintl_ngettext@@Base+0x6b0>  // b.none
    5e00:	cmp	w8, #0x2
    5e04:	b.eq	5e18 <libintl_ngettext@@Base+0x6a8>  // b.none
    5e08:	cmp	w8, #0x3
    5e0c:	b.ne	5e28 <libintl_ngettext@@Base+0x6b8>  // b.any
    5e10:	ldr	x0, [x19, #24]
    5e14:	bl	5de0 <libintl_ngettext@@Base+0x670>
    5e18:	ldr	x0, [x19, #16]
    5e1c:	bl	5de0 <libintl_ngettext@@Base+0x670>
    5e20:	ldr	x0, [x19, #8]
    5e24:	bl	5de0 <libintl_ngettext@@Base+0x670>
    5e28:	mov	x0, x19
    5e2c:	ldr	x19, [sp, #16]
    5e30:	ldp	x29, x30, [sp], #32
    5e34:	b	20e0 <free@plt>
    5e38:	ret
    5e3c:	stp	x29, x30, [sp, #-64]!
    5e40:	str	x23, [sp, #16]
    5e44:	stp	x22, x21, [sp, #32]
    5e48:	stp	x20, x19, [sp, #48]
    5e4c:	mov	x19, x2
    5e50:	mov	w20, w0
    5e54:	subs	w23, w0, #0x1
    5e58:	mov	w22, w1
    5e5c:	mov	x29, sp
    5e60:	b.lt	5e7c <libintl_ngettext@@Base+0x70c>  // b.tstop
    5e64:	mov	w8, w20
    5e68:	sub	w8, w8, #0x1
    5e6c:	ldr	x9, [x19, w8, uxtw #3]
    5e70:	cbz	x9, 5eb0 <libintl_ngettext@@Base+0x740>
    5e74:	cmp	w8, #0x1
    5e78:	b.ge	5e68 <libintl_ngettext@@Base+0x6f8>  // b.tcont
    5e7c:	mov	w0, #0x20                  	// #32
    5e80:	bl	1f20 <malloc@plt>
    5e84:	cbz	x0, 5eb0 <libintl_ngettext@@Base+0x740>
    5e88:	mov	x21, x0
    5e8c:	cmp	w20, #0x1
    5e90:	stp	w20, w22, [x0]
    5e94:	b.lt	5ed4 <libintl_ngettext@@Base+0x764>  // b.tstop
    5e98:	mov	w8, w20
    5e9c:	add	x0, x21, #0x8
    5ea0:	lsl	x2, x8, #3
    5ea4:	mov	x1, x19
    5ea8:	bl	1d70 <memcpy@plt>
    5eac:	b	5ed4 <libintl_ngettext@@Base+0x764>
    5eb0:	cmp	w20, #0x1
    5eb4:	b.lt	5ed0 <libintl_ngettext@@Base+0x760>  // b.tstop
    5eb8:	mov	w20, w23
    5ebc:	ldr	x0, [x19, x20, lsl #3]
    5ec0:	bl	5de0 <libintl_ngettext@@Base+0x670>
    5ec4:	cmp	x20, #0x0
    5ec8:	sub	x20, x20, #0x1
    5ecc:	b.gt	5ebc <libintl_ngettext@@Base+0x74c>
    5ed0:	mov	x21, xzr
    5ed4:	mov	x0, x21
    5ed8:	ldp	x20, x19, [sp, #48]
    5edc:	ldp	x22, x21, [sp, #32]
    5ee0:	ldr	x23, [sp, #16]
    5ee4:	ldp	x29, x30, [sp], #64
    5ee8:	ret
    5eec:	sub	sp, sp, #0x50
    5ef0:	stp	x20, x19, [sp, #64]
    5ef4:	mov	x19, x2
    5ef8:	mov	x20, x1
    5efc:	stp	x29, x30, [sp, #16]
    5f00:	str	x23, [sp, #32]
    5f04:	stp	x22, x21, [sp, #48]
    5f08:	add	x29, sp, #0x10
    5f0c:	cbz	x0, 5fac <libintl_ngettext@@Base+0x83c>
    5f10:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    5f14:	add	x1, x1, #0xd28
    5f18:	mov	x22, x0
    5f1c:	bl	21c0 <strstr@plt>
    5f20:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    5f24:	mov	x21, x0
    5f28:	add	x1, x1, #0xd30
    5f2c:	mov	x0, x22
    5f30:	bl	21c0 <strstr@plt>
    5f34:	cbz	x21, 5fac <libintl_ngettext@@Base+0x83c>
    5f38:	mov	x22, x0
    5f3c:	cbz	x0, 5fac <libintl_ngettext@@Base+0x83c>
    5f40:	ldrb	w23, [x22, #9]!
    5f44:	cbz	w23, 5fac <libintl_ngettext@@Base+0x83c>
    5f48:	bl	20b0 <__ctype_b_loc@plt>
    5f4c:	ldr	x8, [x0]
    5f50:	and	x9, x23, #0xff
    5f54:	ldrh	w9, [x8, x9, lsl #1]
    5f58:	tbz	w9, #13, 5f68 <libintl_ngettext@@Base+0x7f8>
    5f5c:	ldrb	w23, [x22, #1]!
    5f60:	cbnz	w23, 5f50 <libintl_ngettext@@Base+0x7e0>
    5f64:	b	5fac <libintl_ngettext@@Base+0x83c>
    5f68:	sub	w8, w23, #0x30
    5f6c:	and	w8, w8, #0xff
    5f70:	cmp	w8, #0x9
    5f74:	b.hi	5fac <libintl_ngettext@@Base+0x83c>  // b.pmore
    5f78:	add	x1, x29, #0x18
    5f7c:	mov	w2, #0xa                   	// #10
    5f80:	mov	x0, x22
    5f84:	bl	1db0 <strtoul@plt>
    5f88:	ldr	x8, [x29, #24]
    5f8c:	cmp	x8, x22
    5f90:	b.eq	5fac <libintl_ngettext@@Base+0x83c>  // b.none
    5f94:	str	x0, [x19]
    5f98:	add	x8, x21, #0x7
    5f9c:	mov	x0, sp
    5fa0:	str	x8, [sp]
    5fa4:	bl	5788 <libintl_ngettext@@Base+0x18>
    5fa8:	cbz	w0, 5fd8 <libintl_ngettext@@Base+0x868>
    5fac:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    5fb0:	add	x8, x8, #0xd88
    5fb4:	mov	w9, #0x2                   	// #2
    5fb8:	str	x8, [x20]
    5fbc:	str	x9, [x19]
    5fc0:	ldp	x20, x19, [sp, #64]
    5fc4:	ldp	x22, x21, [sp, #48]
    5fc8:	ldr	x23, [sp, #32]
    5fcc:	ldp	x29, x30, [sp, #16]
    5fd0:	add	sp, sp, #0x50
    5fd4:	ret
    5fd8:	ldr	x8, [sp, #8]
    5fdc:	str	x8, [x20]
    5fe0:	b	5fc0 <libintl_ngettext@@Base+0x850>
    5fe4:	stp	x29, x30, [sp, #-16]!
    5fe8:	mov	w0, #0xe                   	// #14
    5fec:	mov	x29, sp
    5ff0:	bl	1f00 <nl_langinfo@plt>
    5ff4:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    5ff8:	add	x8, x8, #0x9f1
    5ffc:	cmp	x0, #0x0
    6000:	csel	x8, x8, x0, eq  // eq = none
    6004:	ldrb	w9, [x8]
    6008:	adrp	x10, 6000 <libintl_ngettext@@Base+0x890>
    600c:	add	x10, x10, #0xd3a
    6010:	cmp	w9, #0x0
    6014:	csel	x0, x10, x8, eq  // eq = none
    6018:	ldp	x29, x30, [sp], #16
    601c:	ret
    6020:	sub	sp, sp, #0x30
    6024:	stp	x20, x19, [sp, #32]
    6028:	mov	x19, x0
    602c:	add	x0, sp, #0x8
    6030:	stp	x29, x30, [sp, #16]
    6034:	add	x29, sp, #0x10
    6038:	bl	1d90 <pthread_rwlockattr_init@plt>
    603c:	mov	w20, w0
    6040:	cbnz	w0, 6070 <libintl_ngettext@@Base+0x900>
    6044:	add	x0, sp, #0x8
    6048:	mov	w1, #0x2                   	// #2
    604c:	bl	1e40 <pthread_rwlockattr_setkind_np@plt>
    6050:	mov	w20, w0
    6054:	cbnz	w0, 6068 <libintl_ngettext@@Base+0x8f8>
    6058:	add	x1, sp, #0x8
    605c:	mov	x0, x19
    6060:	bl	1e30 <pthread_rwlock_init@plt>
    6064:	mov	w20, w0
    6068:	add	x0, sp, #0x8
    606c:	bl	21d0 <pthread_rwlockattr_destroy@plt>
    6070:	mov	w0, w20
    6074:	ldp	x20, x19, [sp, #32]
    6078:	ldp	x29, x30, [sp, #16]
    607c:	add	sp, sp, #0x30
    6080:	ret
    6084:	sub	sp, sp, #0x30
    6088:	stp	x20, x19, [sp, #32]
    608c:	mov	x19, x0
    6090:	add	x0, sp, #0x8
    6094:	stp	x29, x30, [sp, #16]
    6098:	add	x29, sp, #0x10
    609c:	bl	2190 <pthread_mutexattr_init@plt>
    60a0:	mov	w20, w0
    60a4:	cbnz	w0, 60e8 <libintl_ngettext@@Base+0x978>
    60a8:	add	x0, sp, #0x8
    60ac:	mov	w1, #0x1                   	// #1
    60b0:	bl	1df0 <pthread_mutexattr_settype@plt>
    60b4:	cbz	w0, 60c8 <libintl_ngettext@@Base+0x958>
    60b8:	mov	w20, w0
    60bc:	add	x0, sp, #0x8
    60c0:	bl	21b0 <pthread_mutexattr_destroy@plt>
    60c4:	b	60e8 <libintl_ngettext@@Base+0x978>
    60c8:	add	x1, sp, #0x8
    60cc:	mov	x0, x19
    60d0:	bl	2010 <pthread_mutex_init@plt>
    60d4:	mov	w19, w0
    60d8:	add	x0, sp, #0x8
    60dc:	bl	21b0 <pthread_mutexattr_destroy@plt>
    60e0:	cmp	w19, #0x0
    60e4:	csel	w20, w0, w19, eq  // eq = none
    60e8:	mov	w0, w20
    60ec:	ldp	x20, x19, [sp, #32]
    60f0:	ldp	x29, x30, [sp, #16]
    60f4:	add	sp, sp, #0x30
    60f8:	ret
    60fc:	ldrb	w8, [x0]
    6100:	cbz	w8, 610c <libintl_ngettext@@Base+0x99c>
    6104:	mov	w0, wzr
    6108:	ret
    610c:	mov	w8, #0xff                  	// #255
    6110:	strb	w8, [x0]
    6114:	mov	w0, #0x1                   	// #1
    6118:	ret

000000000000611c <libintl_set_relocation_prefix@@Base>:
    611c:	stp	x29, x30, [sp, #-64]!
    6120:	str	x23, [sp, #16]
    6124:	stp	x22, x21, [sp, #32]
    6128:	stp	x20, x19, [sp, #48]
    612c:	mov	x29, sp
    6130:	cbz	x0, 61b4 <libintl_set_relocation_prefix@@Base+0x98>
    6134:	mov	x19, x1
    6138:	cbz	x1, 61b4 <libintl_set_relocation_prefix@@Base+0x98>
    613c:	mov	x1, x19
    6140:	mov	x20, x0
    6144:	bl	2090 <strcmp@plt>
    6148:	cbz	w0, 61b4 <libintl_set_relocation_prefix@@Base+0x98>
    614c:	mov	x0, x20
    6150:	bl	1dc0 <strlen@plt>
    6154:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    6158:	mov	x21, x0
    615c:	str	x0, [x8, #1112]
    6160:	mov	x0, x19
    6164:	bl	1dc0 <strlen@plt>
    6168:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    616c:	add	x22, x21, #0x1
    6170:	add	x21, x0, #0x1
    6174:	str	x0, [x8, #1120]
    6178:	add	x0, x21, x22
    617c:	bl	1f20 <malloc@plt>
    6180:	cbz	x0, 61b4 <libintl_set_relocation_prefix@@Base+0x98>
    6184:	mov	x1, x20
    6188:	mov	x2, x22
    618c:	mov	x23, x0
    6190:	bl	1d70 <memcpy@plt>
    6194:	add	x20, x23, x22
    6198:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    619c:	mov	x0, x20
    61a0:	mov	x1, x19
    61a4:	mov	x2, x21
    61a8:	str	x23, [x8, #1096]
    61ac:	bl	1d70 <memcpy@plt>
    61b0:	b	61c0 <libintl_set_relocation_prefix@@Base+0xa4>
    61b4:	mov	x20, xzr
    61b8:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    61bc:	str	xzr, [x8, #1096]
    61c0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    61c4:	str	x20, [x8, #1104]
    61c8:	ldp	x20, x19, [sp, #48]
    61cc:	ldp	x22, x21, [sp, #32]
    61d0:	ldr	x23, [sp, #16]
    61d4:	ldp	x29, x30, [sp], #64
    61d8:	ret
    61dc:	stp	x29, x30, [sp, #-64]!
    61e0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    61e4:	ldr	x1, [x8, #1096]
    61e8:	stp	x20, x19, [sp, #48]
    61ec:	mov	x19, x0
    61f0:	str	x23, [sp, #16]
    61f4:	stp	x22, x21, [sp, #32]
    61f8:	mov	x29, sp
    61fc:	cbz	x1, 6224 <libintl_set_relocation_prefix@@Base+0x108>
    6200:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    6204:	ldr	x20, [x8, #1104]
    6208:	cbz	x20, 6224 <libintl_set_relocation_prefix@@Base+0x108>
    620c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    6210:	ldr	x21, [x8, #1112]
    6214:	mov	x0, x19
    6218:	mov	x2, x21
    621c:	bl	1f50 <strncmp@plt>
    6220:	cbz	w0, 623c <libintl_set_relocation_prefix@@Base+0x120>
    6224:	mov	x0, x19
    6228:	ldp	x20, x19, [sp, #48]
    622c:	ldp	x22, x21, [sp, #32]
    6230:	ldr	x23, [sp, #16]
    6234:	ldp	x29, x30, [sp], #64
    6238:	ret
    623c:	add	x21, x19, x21
    6240:	ldrb	w8, [x21]
    6244:	cmp	w8, #0x2f
    6248:	b.eq	6274 <libintl_set_relocation_prefix@@Base+0x158>  // b.none
    624c:	cbnz	w8, 6224 <libintl_set_relocation_prefix@@Base+0x108>
    6250:	mov	x0, x20
    6254:	bl	1dc0 <strlen@plt>
    6258:	add	x0, x0, #0x1
    625c:	bl	1f20 <malloc@plt>
    6260:	cbz	x0, 6224 <libintl_set_relocation_prefix@@Base+0x108>
    6264:	mov	x1, x20
    6268:	bl	2160 <strcpy@plt>
    626c:	mov	x19, x0
    6270:	b	6224 <libintl_set_relocation_prefix@@Base+0x108>
    6274:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    6278:	ldr	x22, [x8, #1120]
    627c:	mov	x0, x21
    6280:	bl	1dc0 <strlen@plt>
    6284:	add	x8, x22, x0
    6288:	add	x0, x8, #0x1
    628c:	bl	1f20 <malloc@plt>
    6290:	cbz	x0, 6224 <libintl_set_relocation_prefix@@Base+0x108>
    6294:	mov	x1, x20
    6298:	mov	x2, x22
    629c:	mov	x23, x0
    62a0:	bl	1d70 <memcpy@plt>
    62a4:	add	x0, x23, x22
    62a8:	mov	x1, x21
    62ac:	bl	2160 <strcpy@plt>
    62b0:	mov	x19, x23
    62b4:	b	6224 <libintl_set_relocation_prefix@@Base+0x108>
    62b8:	stp	x29, x30, [sp, #-32]!
    62bc:	stp	x20, x19, [sp, #16]
    62c0:	mov	x29, sp
    62c4:	mov	x19, x1
    62c8:	mov	x20, x0
    62cc:	bl	61dc <libintl_set_relocation_prefix@@Base+0xc0>
    62d0:	cmp	x0, x20
    62d4:	csel	x8, xzr, x0, eq  // eq = none
    62d8:	str	x8, [x19]
    62dc:	ldp	x20, x19, [sp, #16]
    62e0:	ldp	x29, x30, [sp], #32
    62e4:	ret
    62e8:	mov	x0, xzr
    62ec:	ret
    62f0:	stp	x29, x30, [sp, #-32]!
    62f4:	stp	x20, x19, [sp, #16]
    62f8:	mov	w19, w0
    62fc:	mov	x0, xzr
    6300:	mov	x29, sp
    6304:	bl	20d0 <uselocale@plt>
    6308:	cmn	x0, #0x1
    630c:	b.eq	6334 <libintl_set_relocation_prefix@@Base+0x218>  // b.none
    6310:	mov	x20, x0
    6314:	mov	w0, #0xffff                	// #65535
    6318:	bfi	w0, w19, #16, #16
    631c:	bl	1f00 <nl_langinfo@plt>
    6320:	ldrb	w8, [x0]
    6324:	cbnz	w8, 6338 <libintl_set_relocation_prefix@@Base+0x21c>
    6328:	add	x8, x20, w19, sxtw #3
    632c:	ldr	x0, [x8, #128]
    6330:	b	6338 <libintl_set_relocation_prefix@@Base+0x21c>
    6334:	mov	x0, xzr
    6338:	ldp	x20, x19, [sp, #16]
    633c:	ldp	x29, x30, [sp], #32
    6340:	ret
    6344:	stp	x29, x30, [sp, #-64]!
    6348:	stp	x24, x23, [sp, #16]
    634c:	stp	x22, x21, [sp, #32]
    6350:	stp	x20, x19, [sp, #48]
    6354:	mov	x29, sp
    6358:	bl	62f0 <libintl_set_relocation_prefix@@Base+0x1d4>
    635c:	cbz	x0, 63a4 <libintl_set_relocation_prefix@@Base+0x288>
    6360:	ldrb	w9, [x0]
    6364:	mov	x19, x0
    6368:	cbz	w9, 63ac <libintl_set_relocation_prefix@@Base+0x290>
    636c:	mov	x8, xzr
    6370:	add	x10, x19, #0x1
    6374:	ror	x8, x8, #55
    6378:	add	x8, x8, w9, uxtb
    637c:	ldrb	w9, [x10], #1
    6380:	cbnz	w9, 6374 <libintl_set_relocation_prefix@@Base+0x258>
    6384:	mov	x9, #0xff00ff00ff00ff00    	// #-71777214294589696
    6388:	movk	x9, #0xff01
    638c:	umulh	x9, x8, x9
    6390:	lsr	x10, x9, #8
    6394:	lsl	x10, x10, #8
    6398:	add	x9, x10, x9, lsr #8
    639c:	sub	x22, x8, x9
    63a0:	b	63b0 <libintl_set_relocation_prefix@@Base+0x294>
    63a4:	mov	x20, xzr
    63a8:	b	648c <libintl_set_relocation_prefix@@Base+0x370>
    63ac:	mov	x22, xzr
    63b0:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    63b4:	add	x23, x23, #0x468
    63b8:	ldr	x21, [x23, x22, lsl #3]
    63bc:	cbz	x21, 63dc <libintl_set_relocation_prefix@@Base+0x2c0>
    63c0:	add	x20, x21, #0x8
    63c4:	mov	x0, x20
    63c8:	mov	x1, x19
    63cc:	bl	2090 <strcmp@plt>
    63d0:	cbz	w0, 648c <libintl_set_relocation_prefix@@Base+0x370>
    63d4:	ldr	x21, [x21]
    63d8:	cbnz	x21, 63c0 <libintl_set_relocation_prefix@@Base+0x2a4>
    63dc:	mov	x0, x19
    63e0:	bl	1dc0 <strlen@plt>
    63e4:	add	x8, x0, #0x10
    63e8:	mov	x21, x0
    63ec:	and	x0, x8, #0xfffffffffffffff8
    63f0:	bl	1f20 <malloc@plt>
    63f4:	cbz	x0, 6460 <libintl_set_relocation_prefix@@Base+0x344>
    63f8:	mov	x20, x0
    63fc:	add	x2, x21, #0x1
    6400:	add	x0, x0, #0x8
    6404:	mov	x1, x19
    6408:	bl	1d70 <memcpy@plt>
    640c:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    6410:	ldr	x21, [x21, #4064]
    6414:	cbz	x21, 6428 <libintl_set_relocation_prefix@@Base+0x30c>
    6418:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    641c:	add	x0, x0, #0xc70
    6420:	bl	2220 <pthread_mutex_lock@plt>
    6424:	cbnz	w0, 64a4 <libintl_set_relocation_prefix@@Base+0x388>
    6428:	ldr	x24, [x23, x22, lsl #3]
    642c:	cbz	x24, 6448 <libintl_set_relocation_prefix@@Base+0x32c>
    6430:	add	x0, x24, #0x8
    6434:	mov	x1, x19
    6438:	bl	2090 <strcmp@plt>
    643c:	cbz	w0, 646c <libintl_set_relocation_prefix@@Base+0x350>
    6440:	ldr	x24, [x24]
    6444:	cbnz	x24, 6430 <libintl_set_relocation_prefix@@Base+0x314>
    6448:	ldr	x8, [x23, x22, lsl #3]
    644c:	mov	x24, x20
    6450:	str	x8, [x20]
    6454:	str	x20, [x23, x22, lsl #3]
    6458:	cbnz	x21, 6478 <libintl_set_relocation_prefix@@Base+0x35c>
    645c:	b	6488 <libintl_set_relocation_prefix@@Base+0x36c>
    6460:	adrp	x20, 6000 <libintl_ngettext@@Base+0x890>
    6464:	add	x20, x20, #0xa26
    6468:	b	648c <libintl_set_relocation_prefix@@Base+0x370>
    646c:	mov	x0, x20
    6470:	bl	20e0 <free@plt>
    6474:	cbz	x21, 6488 <libintl_set_relocation_prefix@@Base+0x36c>
    6478:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    647c:	add	x0, x0, #0xc70
    6480:	bl	2230 <pthread_mutex_unlock@plt>
    6484:	cbnz	w0, 64a4 <libintl_set_relocation_prefix@@Base+0x388>
    6488:	add	x20, x24, #0x8
    648c:	mov	x0, x20
    6490:	ldp	x20, x19, [sp, #48]
    6494:	ldp	x22, x21, [sp, #32]
    6498:	ldp	x24, x23, [sp, #16]
    649c:	ldp	x29, x30, [sp], #64
    64a0:	ret
    64a4:	bl	2040 <abort@plt>
    64a8:	mov	x1, xzr
    64ac:	b	2250 <setlocale@plt>
    64b0:	stp	x29, x30, [sp, #-32]!
    64b4:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    64b8:	add	x0, x0, #0xa3c
    64bc:	str	x19, [sp, #16]
    64c0:	mov	x29, sp
    64c4:	mov	x19, x1
    64c8:	bl	2210 <getenv@plt>
    64cc:	cbz	x0, 64d8 <libintl_set_relocation_prefix@@Base+0x3bc>
    64d0:	ldrb	w8, [x0]
    64d4:	cbnz	w8, 6508 <libintl_set_relocation_prefix@@Base+0x3ec>
    64d8:	mov	x0, x19
    64dc:	bl	2210 <getenv@plt>
    64e0:	cbz	x0, 64ec <libintl_set_relocation_prefix@@Base+0x3d0>
    64e4:	ldrb	w8, [x0]
    64e8:	cbnz	w8, 6508 <libintl_set_relocation_prefix@@Base+0x3ec>
    64ec:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    64f0:	add	x0, x0, #0xd40
    64f4:	bl	2210 <getenv@plt>
    64f8:	cbz	x0, 6504 <libintl_set_relocation_prefix@@Base+0x3e8>
    64fc:	ldrb	w8, [x0]
    6500:	cbnz	w8, 6508 <libintl_set_relocation_prefix@@Base+0x3ec>
    6504:	mov	x0, xzr
    6508:	ldr	x19, [sp, #16]
    650c:	ldp	x29, x30, [sp], #32
    6510:	ret
    6514:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    6518:	add	x0, x0, #0xa26
    651c:	ret
    6520:	stp	x29, x30, [sp, #-32]!
    6524:	str	x19, [sp, #16]
    6528:	mov	x29, sp
    652c:	mov	w19, w0
    6530:	bl	6344 <libintl_set_relocation_prefix@@Base+0x228>
    6534:	cbnz	x0, 6554 <libintl_set_relocation_prefix@@Base+0x438>
    6538:	mov	w0, w19
    653c:	mov	x1, xzr
    6540:	bl	2250 <setlocale@plt>
    6544:	adrp	x8, 6000 <libintl_ngettext@@Base+0x890>
    6548:	add	x8, x8, #0xa26
    654c:	cmp	x0, #0x0
    6550:	csel	x0, x8, x0, eq  // eq = none
    6554:	ldr	x19, [sp, #16]
    6558:	ldp	x29, x30, [sp], #32
    655c:	ret
    6560:	stp	x29, x30, [sp, #-64]!
    6564:	stp	x24, x23, [sp, #16]
    6568:	stp	x22, x21, [sp, #32]
    656c:	stp	x20, x19, [sp, #48]
    6570:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x106c0>
    6574:	ldr	x24, [x24, #4064]
    6578:	mov	w19, w4
    657c:	mov	x20, x3
    6580:	mov	x21, x2
    6584:	mov	x22, x1
    6588:	mov	x23, x0
    658c:	mov	x29, sp
    6590:	cbz	x24, 65e4 <libintl_set_relocation_prefix@@Base+0x4c8>
    6594:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    6598:	add	x0, x0, #0xca0
    659c:	bl	2220 <pthread_mutex_lock@plt>
    65a0:	cbnz	w0, 660c <libintl_set_relocation_prefix@@Base+0x4f0>
    65a4:	mov	x0, x23
    65a8:	mov	x1, x22
    65ac:	mov	x2, x21
    65b0:	mov	x3, x20
    65b4:	mov	w4, w19
    65b8:	bl	6610 <libintl_set_relocation_prefix@@Base+0x4f4>
    65bc:	cbz	x24, 65d0 <libintl_set_relocation_prefix@@Base+0x4b4>
    65c0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    65c4:	add	x0, x0, #0xca0
    65c8:	bl	2230 <pthread_mutex_unlock@plt>
    65cc:	cbnz	w0, 660c <libintl_set_relocation_prefix@@Base+0x4f0>
    65d0:	ldp	x20, x19, [sp, #48]
    65d4:	ldp	x22, x21, [sp, #32]
    65d8:	ldp	x24, x23, [sp, #16]
    65dc:	ldp	x29, x30, [sp], #64
    65e0:	ret
    65e4:	mov	x0, x23
    65e8:	mov	x1, x22
    65ec:	mov	x2, x21
    65f0:	mov	x3, x20
    65f4:	mov	w4, w19
    65f8:	ldp	x20, x19, [sp, #48]
    65fc:	ldp	x22, x21, [sp, #32]
    6600:	ldp	x24, x23, [sp, #16]
    6604:	ldp	x29, x30, [sp], #64
    6608:	b	6610 <libintl_set_relocation_prefix@@Base+0x4f4>
    660c:	bl	2040 <abort@plt>
    6610:	stp	x29, x30, [sp, #-96]!
    6614:	str	x27, [sp, #16]
    6618:	stp	x26, x25, [sp, #32]
    661c:	stp	x24, x23, [sp, #48]
    6620:	stp	x22, x21, [sp, #64]
    6624:	stp	x20, x19, [sp, #80]
    6628:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    662c:	ldr	x25, [x27, #3280]
    6630:	mov	w20, w4
    6634:	mov	x19, x3
    6638:	mov	x22, x2
    663c:	mov	x23, x1
    6640:	mov	x24, x0
    6644:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x116c0>
    6648:	mov	x29, sp
    664c:	cbz	x25, 6684 <libintl_set_relocation_prefix@@Base+0x568>
    6650:	mov	x0, x24
    6654:	mov	x1, x25
    6658:	bl	2090 <strcmp@plt>
    665c:	ldr	x21, [x26, #3288]
    6660:	cbz	w0, 66c0 <libintl_set_relocation_prefix@@Base+0x5a4>
    6664:	cbz	x21, 6678 <libintl_set_relocation_prefix@@Base+0x55c>
    6668:	mov	x0, x21
    666c:	bl	1ef0 <fclose@plt>
    6670:	ldr	x25, [x27, #3280]
    6674:	str	xzr, [x26, #3288]
    6678:	mov	x0, x25
    667c:	bl	20e0 <free@plt>
    6680:	str	xzr, [x27, #3280]
    6684:	mov	x0, x24
    6688:	bl	1dc0 <strlen@plt>
    668c:	add	x0, x0, #0x1
    6690:	bl	1f20 <malloc@plt>
    6694:	str	x0, [x27, #3280]
    6698:	cbz	x0, 67a4 <libintl_set_relocation_prefix@@Base+0x688>
    669c:	mov	x1, x24
    66a0:	bl	2160 <strcpy@plt>
    66a4:	adrp	x1, 6000 <libintl_ngettext@@Base+0x890>
    66a8:	add	x1, x1, #0xd45
    66ac:	mov	x0, x24
    66b0:	bl	1f10 <fopen@plt>
    66b4:	mov	x21, x0
    66b8:	str	x0, [x26, #3288]
    66bc:	cbz	x0, 67a4 <libintl_set_relocation_prefix@@Base+0x688>
    66c0:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    66c4:	add	x0, x0, #0xd47
    66c8:	mov	w1, #0x7                   	// #7
    66cc:	mov	w2, #0x1                   	// #1
    66d0:	mov	x3, x21
    66d4:	bl	2140 <fwrite@plt>
    66d8:	mov	x0, x23
    66dc:	bl	1dc0 <strlen@plt>
    66e0:	add	x2, x23, x0
    66e4:	mov	x0, x21
    66e8:	mov	x1, x23
    66ec:	bl	67fc <libintl_set_relocation_prefix@@Base+0x6e0>
    66f0:	mov	w1, #0x4                   	// #4
    66f4:	mov	x0, x22
    66f8:	bl	2120 <strchr@plt>
    66fc:	cbz	x0, 6730 <libintl_set_relocation_prefix@@Base+0x614>
    6700:	mov	x23, x0
    6704:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    6708:	add	x0, x0, #0xd4f
    670c:	mov	w1, #0x9                   	// #9
    6710:	mov	w2, #0x1                   	// #1
    6714:	mov	x3, x21
    6718:	bl	2140 <fwrite@plt>
    671c:	mov	x0, x21
    6720:	mov	x1, x22
    6724:	mov	x2, x23
    6728:	bl	67fc <libintl_set_relocation_prefix@@Base+0x6e0>
    672c:	add	x22, x23, #0x1
    6730:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    6734:	add	x0, x0, #0xd59
    6738:	mov	w1, #0x7                   	// #7
    673c:	mov	w2, #0x1                   	// #1
    6740:	mov	x3, x21
    6744:	bl	2140 <fwrite@plt>
    6748:	mov	x0, x22
    674c:	bl	1dc0 <strlen@plt>
    6750:	add	x2, x22, x0
    6754:	mov	x0, x21
    6758:	mov	x1, x22
    675c:	bl	67fc <libintl_set_relocation_prefix@@Base+0x6e0>
    6760:	cbz	w20, 67c0 <libintl_set_relocation_prefix@@Base+0x6a4>
    6764:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    6768:	add	x0, x0, #0xd61
    676c:	mov	w1, #0xe                   	// #14
    6770:	mov	w2, #0x1                   	// #1
    6774:	mov	x3, x21
    6778:	bl	2140 <fwrite@plt>
    677c:	mov	x0, x19
    6780:	bl	1dc0 <strlen@plt>
    6784:	add	x2, x19, x0
    6788:	mov	x0, x21
    678c:	mov	x1, x19
    6790:	bl	67fc <libintl_set_relocation_prefix@@Base+0x6e0>
    6794:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    6798:	add	x0, x0, #0xd70
    679c:	mov	w1, #0xe                   	// #14
    67a0:	b	67cc <libintl_set_relocation_prefix@@Base+0x6b0>
    67a4:	ldp	x20, x19, [sp, #80]
    67a8:	ldp	x22, x21, [sp, #64]
    67ac:	ldp	x24, x23, [sp, #48]
    67b0:	ldp	x26, x25, [sp, #32]
    67b4:	ldr	x27, [sp, #16]
    67b8:	ldp	x29, x30, [sp], #96
    67bc:	ret
    67c0:	adrp	x0, 6000 <libintl_ngettext@@Base+0x890>
    67c4:	add	x0, x0, #0xd7f
    67c8:	mov	w1, #0xb                   	// #11
    67cc:	mov	w2, #0x1                   	// #1
    67d0:	mov	x3, x21
    67d4:	bl	2140 <fwrite@plt>
    67d8:	mov	x1, x21
    67dc:	ldp	x20, x19, [sp, #80]
    67e0:	ldp	x22, x21, [sp, #64]
    67e4:	ldp	x24, x23, [sp, #48]
    67e8:	ldp	x26, x25, [sp, #32]
    67ec:	ldr	x27, [sp, #16]
    67f0:	mov	w0, #0xa                   	// #10
    67f4:	ldp	x29, x30, [sp], #96
    67f8:	b	1e80 <putc@plt>
    67fc:	stp	x29, x30, [sp, #-64]!
    6800:	stp	x20, x19, [sp, #48]
    6804:	mov	x19, x0
    6808:	stp	x22, x21, [sp, #32]
    680c:	mov	x21, x1
    6810:	mov	w0, #0x22                  	// #34
    6814:	mov	x1, x19
    6818:	stp	x24, x23, [sp, #16]
    681c:	mov	x29, sp
    6820:	mov	x20, x2
    6824:	bl	1e80 <putc@plt>
    6828:	cmp	x21, x20
    682c:	b.eq	68a8 <libintl_set_relocation_prefix@@Base+0x78c>  // b.none
    6830:	adrp	x22, 6000 <libintl_ngettext@@Base+0x890>
    6834:	adrp	x23, 6000 <libintl_ngettext@@Base+0x890>
    6838:	sub	x24, x20, #0x1
    683c:	add	x22, x22, #0xd8b
    6840:	add	x23, x23, #0xd8f
    6844:	ldrb	w0, [x21]
    6848:	cmp	w0, #0x5c
    684c:	b.eq	6884 <libintl_set_relocation_prefix@@Base+0x768>  // b.none
    6850:	cmp	w0, #0x22
    6854:	b.eq	6884 <libintl_set_relocation_prefix@@Base+0x768>  // b.none
    6858:	cmp	w0, #0xa
    685c:	b.ne	6894 <libintl_set_relocation_prefix@@Base+0x778>  // b.any
    6860:	mov	x0, x22
    6864:	mov	x1, x19
    6868:	bl	1dd0 <fputs@plt>
    686c:	cmp	x24, x21
    6870:	b.eq	68c4 <libintl_set_relocation_prefix@@Base+0x7a8>  // b.none
    6874:	mov	x0, x23
    6878:	mov	x1, x19
    687c:	bl	1dd0 <fputs@plt>
    6880:	b	689c <libintl_set_relocation_prefix@@Base+0x780>
    6884:	mov	w0, #0x5c                  	// #92
    6888:	mov	x1, x19
    688c:	bl	1e80 <putc@plt>
    6890:	ldrb	w0, [x21]
    6894:	mov	x1, x19
    6898:	bl	1e80 <putc@plt>
    689c:	add	x21, x21, #0x1
    68a0:	cmp	x20, x21
    68a4:	b.ne	6844 <libintl_set_relocation_prefix@@Base+0x728>  // b.any
    68a8:	mov	x1, x19
    68ac:	ldp	x20, x19, [sp, #48]
    68b0:	ldp	x22, x21, [sp, #32]
    68b4:	ldp	x24, x23, [sp, #16]
    68b8:	mov	w0, #0x22                  	// #34
    68bc:	ldp	x29, x30, [sp], #64
    68c0:	b	1e80 <putc@plt>
    68c4:	ldp	x20, x19, [sp, #48]
    68c8:	ldp	x22, x21, [sp, #32]
    68cc:	ldp	x24, x23, [sp, #16]
    68d0:	ldp	x29, x30, [sp], #64
    68d4:	ret
    68d8:	adds	x8, x0, x1
    68dc:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    68e0:	ret
    68e4:	adds	x8, x0, x1
    68e8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    68ec:	adds	x8, x8, x2
    68f0:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    68f4:	ret
    68f8:	adds	x8, x0, x1
    68fc:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6900:	adds	x8, x8, x2
    6904:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6908:	adds	x8, x8, x3
    690c:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    6910:	ret
    6914:	cmp	x0, x1
    6918:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    691c:	ret

0000000000006920 <gettext@@Base>:
    6920:	b	2240 <libintl_gettext@plt>

0000000000006924 <dgettext@@Base>:
    6924:	b	2110 <libintl_dgettext@plt>

0000000000006928 <dcgettext@@Base>:
    6928:	b	1eb0 <libintl_dcgettext@plt>

000000000000692c <ngettext@@Base>:
    692c:	b	2260 <libintl_ngettext@plt>

0000000000006930 <dngettext@@Base>:
    6930:	b	1d80 <libintl_dngettext@plt>

0000000000006934 <dcngettext@@Base>:
    6934:	b	1f70 <libintl_dcngettext@plt>

0000000000006938 <textdomain@@Base>:
    6938:	b	1ea0 <libintl_textdomain@plt>

000000000000693c <bindtextdomain@@Base>:
    693c:	b	1fa0 <libintl_bindtextdomain@plt>

0000000000006940 <bind_textdomain_codeset@@Base>:
    6940:	b	1f90 <libintl_bind_textdomain_codeset@plt>
    6944:	nop
    6948:	mov	x2, x1
    694c:	mov	w1, w0
    6950:	mov	w0, #0x0                   	// #0
    6954:	b	21a0 <__fxstat@plt>

Disassembly of section .fini:

0000000000006958 <.fini>:
    6958:	stp	x29, x30, [sp, #-16]!
    695c:	mov	x29, sp
    6960:	ldp	x29, x30, [sp], #16
    6964:	ret
