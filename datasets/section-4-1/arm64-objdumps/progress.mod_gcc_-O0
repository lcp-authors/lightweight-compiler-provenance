
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//progress.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x550>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x1, [x0, #56]
  14:	ldr	x0, [sp, #24]
  18:	blr	x1
  1c:	and	w0, w0, #0xffff
  20:	cmp	w0, #0x0
  24:	b.eq	2c <grub_mod_init-0x524>  // b.none
  28:	b	30 <grub_mod_init-0x520>
  2c:	mov	w0, #0x50                  	// #80
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	stp	x29, x30, [sp, #-32]!
  3c:	mov	x29, sp
  40:	str	x0, [sp, #24]
  44:	ldr	x0, [sp, #24]
  48:	ldr	x1, [x0, #64]
  4c:	ldr	x0, [sp, #24]
  50:	blr	x1
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	stp	x29, x30, [sp, #-32]!
  60:	mov	x29, sp
  64:	str	x0, [sp, #24]
  68:	str	w1, [sp, #16]
  6c:	ldr	x0, [sp, #24]
  70:	ldr	x2, [x0, #72]
  74:	ldr	w1, [sp, #16]
  78:	ldr	x0, [sp, #24]
  7c:	blr	x2
  80:	nop
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	stp	x29, x30, [sp, #-160]!
  90:	mov	x29, sp
  94:	str	x19, [sp, #16]
  98:	str	x0, [sp, #56]
  9c:	str	w1, [sp, #52]
  a0:	str	w2, [sp, #48]
  a4:	str	x3, [sp, #40]
  a8:	ldr	x0, [sp, #40]
  ac:	str	x0, [sp, #120]
  b0:	ldr	x0, [sp, #120]
  b4:	ldr	x1, [x0, #32]
  b8:	ldr	w0, [sp, #48]
  bc:	add	x1, x1, x0
  c0:	ldr	x0, [sp, #120]
  c4:	str	x1, [x0, #32]
  c8:	adrp	x0, 0 <grub_mod_init-0x550>
  cc:	add	x0, x0, #0x0
  d0:	ldr	x0, [x0]
  d4:	ldr	w0, [x0]
  d8:	cmp	w0, #0x0
  dc:	b.ne	4f8 <grub_mod_init-0x58>  // b.any
  e0:	adrp	x0, 0 <grub_mod_init-0x550>
  e4:	add	x0, x0, #0x0
  e8:	ldr	x0, [x0]
  ec:	bl	0 <grub_env_get>
  f0:	str	x0, [sp, #112]
  f4:	ldr	x0, [sp, #112]
  f8:	cmp	x0, #0x0
  fc:	b.eq	110 <grub_mod_init-0x440>  // b.none
 100:	ldr	x0, [sp, #112]
 104:	ldrb	w0, [x0]
 108:	cmp	w0, #0x30
 10c:	b.eq	500 <grub_mod_init-0x50>  // b.none
 110:	adrp	x0, 0 <grub_mod_init-0x550>
 114:	add	x0, x0, #0x0
 118:	ldr	x0, [x0]
 11c:	mov	w1, #0x1                   	// #1
 120:	str	w1, [x0]
 124:	bl	0 <grub_get_time_ms>
 128:	str	x0, [sp, #104]
 12c:	adrp	x0, 0 <grub_mod_init-0x550>
 130:	add	x0, x0, #0x0
 134:	ldr	x0, [x0]
 138:	ldr	x0, [x0]
 13c:	ldr	x1, [sp, #104]
 140:	sub	x0, x1, x0
 144:	cmp	x0, #0x320
 148:	b.ls	164 <grub_mod_init-0x3ec>  // b.plast
 14c:	ldr	x0, [sp, #120]
 150:	ldr	x1, [x0, #32]
 154:	ldr	x0, [sp, #120]
 158:	ldr	x0, [x0, #24]
 15c:	cmp	x1, x0
 160:	b.ne	17c <grub_mod_init-0x3d4>  // b.any
 164:	ldr	x0, [sp, #120]
 168:	ldr	x1, [x0, #32]
 16c:	ldr	x0, [sp, #120]
 170:	ldr	x0, [x0, #64]
 174:	cmp	x1, x0
 178:	b.ne	4e4 <grub_mod_init-0x6c>  // b.any
 17c:	ldr	x0, [sp, #120]
 180:	ldr	x0, [x0, #40]
 184:	ldr	x1, [sp, #104]
 188:	sub	x0, x1, x0
 18c:	cmp	x0, #0x9
 190:	b.hi	19c <grub_mod_init-0x3b4>  // b.pmore
 194:	str	xzr, [sp, #128]
 198:	b	1e0 <grub_mod_init-0x370>
 19c:	ldr	x0, [sp, #120]
 1a0:	ldr	x1, [x0, #32]
 1a4:	ldr	x0, [sp, #120]
 1a8:	ldr	x0, [x0, #48]
 1ac:	sub	x1, x1, x0
 1b0:	mov	x0, #0x86a0                	// #34464
 1b4:	movk	x0, #0x1, lsl #16
 1b8:	mul	x3, x1, x0
 1bc:	ldr	x0, [sp, #120]
 1c0:	ldr	x0, [x0, #40]
 1c4:	ldr	x1, [sp, #104]
 1c8:	sub	x0, x1, x0
 1cc:	mov	x2, #0x0                   	// #0
 1d0:	mov	x1, x0
 1d4:	mov	x0, x3
 1d8:	bl	0 <grub_divmod64>
 1dc:	str	x0, [sp, #128]
 1e0:	ldr	x0, [sp, #120]
 1e4:	ldr	x0, [x0, #64]
 1e8:	cmp	x0, #0x0
 1ec:	b.ne	1fc <grub_mod_init-0x354>  // b.any
 1f0:	mov	x0, #0x64                  	// #100
 1f4:	str	x0, [sp, #136]
 1f8:	b	23c <grub_mod_init-0x314>
 1fc:	ldr	x0, [sp, #120]
 200:	ldr	x1, [x0, #32]
 204:	mov	x0, x1
 208:	lsl	x0, x0, #1
 20c:	add	x0, x0, x1
 210:	lsl	x0, x0, #3
 214:	add	x0, x0, x1
 218:	lsl	x0, x0, #2
 21c:	mov	x3, x0
 220:	ldr	x0, [sp, #120]
 224:	ldr	x0, [x0, #64]
 228:	mov	x2, #0x0                   	// #0
 22c:	mov	x1, x0
 230:	mov	x0, x3
 234:	bl	0 <grub_divmod64>
 238:	str	x0, [sp, #136]
 23c:	ldr	x0, [sp, #120]
 240:	ldr	x0, [x0, #8]
 244:	ldr	x0, [x0, #8]
 248:	cmp	x0, #0x0
 24c:	b.eq	270 <grub_mod_init-0x2e0>  // b.none
 250:	ldr	x0, [sp, #120]
 254:	ldr	x0, [x0, #8]
 258:	ldr	x0, [x0, #8]
 25c:	ldr	x0, [x0, #8]
 260:	mov	w1, #0x2f                  	// #47
 264:	bl	0 <grub_strrchr>
 268:	str	x0, [sp, #144]
 26c:	b	29c <grub_mod_init-0x2b4>
 270:	ldr	x0, [sp, #120]
 274:	ldr	x0, [x0]
 278:	cmp	x0, #0x0
 27c:	b.eq	298 <grub_mod_init-0x2b8>  // b.none
 280:	ldr	x0, [sp, #120]
 284:	ldr	x0, [x0]
 288:	mov	w1, #0x2f                  	// #47
 28c:	bl	0 <grub_strrchr>
 290:	str	x0, [sp, #144]
 294:	b	29c <grub_mod_init-0x2b4>
 298:	str	xzr, [sp, #144]
 29c:	ldr	x0, [sp, #144]
 2a0:	cmp	x0, #0x0
 2a4:	b.eq	2b8 <grub_mod_init-0x298>  // b.none
 2a8:	ldr	x0, [sp, #144]
 2ac:	add	x0, x0, #0x1
 2b0:	str	x0, [sp, #144]
 2b4:	b	2c8 <grub_mod_init-0x288>
 2b8:	adrp	x0, 0 <grub_mod_init-0x550>
 2bc:	add	x0, x0, #0x0
 2c0:	ldr	x0, [x0]
 2c4:	str	x0, [sp, #144]
 2c8:	ldr	x0, [sp, #120]
 2cc:	ldr	x1, [x0, #56]
 2d0:	ldr	x0, [sp, #128]
 2d4:	add	x0, x1, x0
 2d8:	lsr	x1, x0, #1
 2dc:	ldr	x0, [sp, #120]
 2e0:	str	x1, [x0, #56]
 2e4:	ldr	x0, [sp, #120]
 2e8:	ldr	x0, [x0, #32]
 2ec:	mov	w1, #0x0                   	// #0
 2f0:	bl	0 <grub_get_human_size>
 2f4:	ldr	x5, [sp, #136]
 2f8:	mov	x4, x0
 2fc:	ldr	x3, [sp, #144]
 300:	adrp	x0, 0 <grub_mod_init-0x550>
 304:	add	x0, x0, #0x0
 308:	ldr	x2, [x0]
 30c:	mov	x1, #0x50                  	// #80
 310:	adrp	x0, 0 <grub_mod_init-0x550>
 314:	add	x0, x0, #0x0
 318:	ldr	x0, [x0]
 31c:	bl	0 <grub_snprintf>
 320:	adrp	x0, 0 <grub_mod_init-0x550>
 324:	add	x0, x0, #0x0
 328:	ldr	x0, [x0]
 32c:	bl	0 <grub_strlen>
 330:	mov	x1, x0
 334:	adrp	x0, 0 <grub_mod_init-0x550>
 338:	add	x0, x0, #0x0
 33c:	ldr	x0, [x0]
 340:	add	x0, x1, x0
 344:	str	x0, [sp, #96]
 348:	ldr	x1, [sp, #96]
 34c:	adrp	x0, 0 <grub_mod_init-0x550>
 350:	add	x0, x0, #0x0
 354:	ldr	x0, [x0]
 358:	sub	x0, x1, x0
 35c:	mov	x1, x0
 360:	mov	x0, #0x50                  	// #80
 364:	sub	x19, x0, x1
 368:	ldr	x0, [sp, #120]
 36c:	ldr	x0, [x0, #56]
 370:	mov	w1, #0x2                   	// #2
 374:	bl	0 <grub_get_human_size>
 378:	mov	x3, x0
 37c:	adrp	x0, 0 <grub_mod_init-0x550>
 380:	add	x0, x0, #0x0
 384:	ldr	x2, [x0]
 388:	mov	x1, x19
 38c:	ldr	x0, [sp, #96]
 390:	bl	0 <grub_snprintf>
 394:	adrp	x0, 0 <grub_mod_init-0x550>
 398:	add	x0, x0, #0x0
 39c:	ldr	x0, [x0]
 3a0:	bl	0 <grub_strlen>
 3a4:	str	x0, [sp, #88]
 3a8:	adrp	x0, 0 <grub_mod_init-0x550>
 3ac:	add	x0, x0, #0x0
 3b0:	ldr	x0, [x0]
 3b4:	ldr	x0, [x0]
 3b8:	str	x0, [sp, #152]
 3bc:	b	4a8 <grub_mod_init-0xa8>
 3c0:	ldr	x0, [sp, #152]
 3c4:	ldr	w0, [x0, #128]
 3c8:	add	w2, w0, #0x1
 3cc:	ldr	x1, [sp, #152]
 3d0:	str	w2, [x1, #128]
 3d4:	ldr	x1, [sp, #152]
 3d8:	ldr	w1, [x1, #124]
 3dc:	cmp	w0, w1
 3e0:	b.hi	40c <grub_mod_init-0x144>  // b.pmore
 3e4:	ldr	x0, [sp, #120]
 3e8:	ldr	x1, [x0, #32]
 3ec:	ldr	x0, [sp, #120]
 3f0:	ldr	x0, [x0, #64]
 3f4:	cmp	x1, x0
 3f8:	b.ne	49c <grub_mod_init-0xb4>  // b.any
 3fc:	ldr	x0, [sp, #152]
 400:	ldr	w0, [x0, #124]
 404:	cmn	w0, #0x1
 408:	b.eq	49c <grub_mod_init-0xb4>  // b.none
 40c:	ldr	x0, [sp, #152]
 410:	bl	38 <grub_mod_init-0x518>
 414:	str	w0, [sp, #80]
 418:	ldr	w0, [sp, #80]
 41c:	str	w0, [sp, #72]
 420:	ldr	x0, [sp, #152]
 424:	bl	0 <grub_mod_init-0x550>
 428:	and	w1, w0, #0xffff
 42c:	ldr	x0, [sp, #88]
 430:	and	w0, w0, #0xffff
 434:	sub	w0, w1, w0
 438:	and	w0, w0, #0xffff
 43c:	sub	w0, w0, #0x1
 440:	and	w0, w0, #0xffff
 444:	strh	w0, [sp, #72]
 448:	ldr	w1, [sp, #72]
 44c:	ldr	x0, [sp, #152]
 450:	bl	5c <grub_mod_init-0x4f4>
 454:	ldr	x1, [sp, #152]
 458:	adrp	x0, 0 <grub_mod_init-0x550>
 45c:	add	x0, x0, #0x0
 460:	ldr	x0, [x0]
 464:	bl	0 <grub_puts_terminal>
 468:	ldr	w1, [sp, #80]
 46c:	ldr	x0, [sp, #152]
 470:	bl	5c <grub_mod_init-0x4f4>
 474:	ldr	x0, [sp, #152]
 478:	str	wzr, [x0, #128]
 47c:	ldr	x0, [sp, #152]
 480:	ldr	x0, [x0, #104]
 484:	cmp	x0, #0x0
 488:	b.eq	49c <grub_mod_init-0xb4>  // b.none
 48c:	ldr	x0, [sp, #152]
 490:	ldr	x1, [x0, #104]
 494:	ldr	x0, [sp, #152]
 498:	blr	x1
 49c:	ldr	x0, [sp, #152]
 4a0:	ldr	x0, [x0]
 4a4:	str	x0, [sp, #152]
 4a8:	ldr	x0, [sp, #152]
 4ac:	cmp	x0, #0x0
 4b0:	b.ne	3c0 <grub_mod_init-0x190>  // b.any
 4b4:	ldr	x0, [sp, #120]
 4b8:	ldr	x1, [x0, #32]
 4bc:	ldr	x0, [sp, #120]
 4c0:	str	x1, [x0, #48]
 4c4:	ldr	x0, [sp, #120]
 4c8:	ldr	x1, [sp, #104]
 4cc:	str	x1, [x0, #40]
 4d0:	adrp	x0, 0 <grub_mod_init-0x550>
 4d4:	add	x0, x0, #0x0
 4d8:	ldr	x0, [x0]
 4dc:	ldr	x1, [sp, #104]
 4e0:	str	x1, [x0]
 4e4:	adrp	x0, 0 <grub_mod_init-0x550>
 4e8:	add	x0, x0, #0x0
 4ec:	ldr	x0, [x0]
 4f0:	str	wzr, [x0]
 4f4:	b	504 <grub_mod_init-0x4c>
 4f8:	nop
 4fc:	b	504 <grub_mod_init-0x4c>
 500:	nop
 504:	ldr	x19, [sp, #16]
 508:	ldp	x29, x30, [sp], #160
 50c:	ret
	...

0000000000000550 <grub_mod_init>:
 550:	sub	sp, sp, #0x10
 554:	str	x0, [sp, #8]
 558:	adrp	x0, 0 <grub_mod_init-0x550>
 55c:	add	x0, x0, #0x0
 560:	ldr	x0, [x0]
 564:	adrp	x1, 0 <grub_mod_init-0x550>
 568:	add	x1, x1, #0x0
 56c:	ldr	x1, [x1]
 570:	str	x1, [x0]
 574:	nop
 578:	add	sp, sp, #0x10
 57c:	ret
	...

0000000000000590 <grub_mod_fini>:
 590:	adrp	x0, 0 <grub_mod_init-0x550>
 594:	add	x0, x0, #0x0
 598:	ldr	x0, [x0]
 59c:	str	xzr, [x0]
 5a0:	nop
 5a4:	ret
	...
