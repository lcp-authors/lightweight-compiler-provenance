
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libelf-0.178.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003020 <.init>:
    3020:	stp	x29, x30, [sp, #-16]!
    3024:	mov	x29, sp
    3028:	bl	33c0 <*ABS*@plt+0x20>
    302c:	ldp	x29, x30, [sp], #16
    3030:	ret

Disassembly of section .plt:

0000000000003040 <memcpy@plt-0x20>:
    3040:	stp	x16, x30, [sp, #-16]!
    3044:	adrp	x16, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    3048:	ldr	x17, [x16, #4088]
    304c:	add	x16, x16, #0xff8
    3050:	br	x17
    3054:	nop
    3058:	nop
    305c:	nop

0000000000003060 <memcpy@plt>:
    3060:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16]
    3068:	add	x16, x16, #0x0
    306c:	br	x17

0000000000003070 <memmove@plt>:
    3070:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #8]
    3078:	add	x16, x16, #0x8
    307c:	br	x17

0000000000003080 <msync@plt>:
    3080:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #16]
    3088:	add	x16, x16, #0x10
    308c:	br	x17

0000000000003090 <posix_fallocate@plt>:
    3090:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #24]
    3098:	add	x16, x16, #0x18
    309c:	br	x17

00000000000030a0 <memccpy@plt>:
    30a0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #32]
    30a8:	add	x16, x16, #0x20
    30ac:	br	x17

00000000000030b0 <inflate@plt>:
    30b0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #40]
    30b8:	add	x16, x16, #0x28
    30bc:	br	x17

00000000000030c0 <mremap@plt>:
    30c0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #48]
    30c8:	add	x16, x16, #0x30
    30cc:	br	x17

00000000000030d0 <elf32_getchdr@plt>:
    30d0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #56]
    30d8:	add	x16, x16, #0x38
    30dc:	br	x17

00000000000030e0 <__cxa_finalize@plt>:
    30e0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #64]
    30e8:	add	x16, x16, #0x40
    30ec:	br	x17

00000000000030f0 <qsort@plt>:
    30f0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #72]
    30f8:	add	x16, x16, #0x48
    30fc:	br	x17

0000000000003100 <malloc@plt>:
    3100:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #80]
    3108:	add	x16, x16, #0x50
    310c:	br	x17

0000000000003110 <open@plt>:
    3110:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #88]
    3118:	add	x16, x16, #0x58
    311c:	br	x17

0000000000003120 <deflate@plt>:
    3120:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #96]
    3128:	add	x16, x16, #0x60
    312c:	br	x17

0000000000003130 <strncmp@plt>:
    3130:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #104]
    3138:	add	x16, x16, #0x68
    313c:	br	x17

0000000000003140 <memset@plt>:
    3140:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #112]
    3148:	add	x16, x16, #0x70
    314c:	br	x17

0000000000003150 <elf64_getshdr@plt>:
    3150:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #120]
    3158:	add	x16, x16, #0x78
    315c:	br	x17

0000000000003160 <fchmod@plt>:
    3160:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #128]
    3168:	add	x16, x16, #0x80
    316c:	br	x17

0000000000003170 <posix_memalign@plt>:
    3170:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #136]
    3178:	add	x16, x16, #0x88
    317c:	br	x17

0000000000003180 <calloc@plt>:
    3180:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #144]
    3188:	add	x16, x16, #0x90
    318c:	br	x17

0000000000003190 <gelf_xlatetof@plt>:
    3190:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #152]
    3198:	add	x16, x16, #0x98
    319c:	br	x17

00000000000031a0 <realloc@plt>:
    31a0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #160]
    31a8:	add	x16, x16, #0xa0
    31ac:	br	x17

00000000000031b0 <deflateInit_@plt>:
    31b0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #168]
    31b8:	add	x16, x16, #0xa8
    31bc:	br	x17

00000000000031c0 <close@plt>:
    31c0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #176]
    31c8:	add	x16, x16, #0xb0
    31cc:	br	x17

00000000000031d0 <elf64_getchdr@plt>:
    31d0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #184]
    31d8:	add	x16, x16, #0xb8
    31dc:	br	x17

00000000000031e0 <atol@plt>:
    31e0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #192]
    31e8:	add	x16, x16, #0xc0
    31ec:	br	x17

00000000000031f0 <__gmon_start__@plt>:
    31f0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #200]
    31f8:	add	x16, x16, #0xc8
    31fc:	br	x17

0000000000003200 <inflateEnd@plt>:
    3200:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #208]
    3208:	add	x16, x16, #0xd0
    320c:	br	x17

0000000000003210 <memcmp@plt>:
    3210:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #216]
    3218:	add	x16, x16, #0xd8
    321c:	br	x17

0000000000003220 <strcmp@plt>:
    3220:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #224]
    3228:	add	x16, x16, #0xe0
    322c:	br	x17

0000000000003230 <__ctype_b_loc@plt>:
    3230:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #232]
    3238:	add	x16, x16, #0xe8
    323c:	br	x17

0000000000003240 <mmap@plt>:
    3240:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #240]
    3248:	add	x16, x16, #0xf0
    324c:	br	x17

0000000000003250 <free@plt>:
    3250:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #248]
    3258:	add	x16, x16, #0xf8
    325c:	br	x17

0000000000003260 <rawmemchr@plt>:
    3260:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #256]
    3268:	add	x16, x16, #0x100
    326c:	br	x17

0000000000003270 <pwrite@plt>:
    3270:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #264]
    3278:	add	x16, x16, #0x108
    327c:	br	x17

0000000000003280 <deflateEnd@plt>:
    3280:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #272]
    3288:	add	x16, x16, #0x110
    328c:	br	x17

0000000000003290 <gelf_getchdr@plt>:
    3290:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #280]
    3298:	add	x16, x16, #0x118
    329c:	br	x17

00000000000032a0 <pread@plt>:
    32a0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #288]
    32a8:	add	x16, x16, #0x120
    32ac:	br	x17

00000000000032b0 <memrchr@plt>:
    32b0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #296]
    32b8:	add	x16, x16, #0x128
    32bc:	br	x17

00000000000032c0 <inflateInit_@plt>:
    32c0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #304]
    32c8:	add	x16, x16, #0x130
    32cc:	br	x17

00000000000032d0 <fcntl@plt>:
    32d0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #312]
    32d8:	add	x16, x16, #0x138
    32dc:	br	x17

00000000000032e0 <elf32_getshdr@plt>:
    32e0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #320]
    32e8:	add	x16, x16, #0x140
    32ec:	br	x17

00000000000032f0 <munmap@plt>:
    32f0:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #328]
    32f8:	add	x16, x16, #0x148
    32fc:	br	x17

0000000000003300 <gelf_getehdr@plt>:
    3300:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #336]
    3308:	add	x16, x16, #0x150
    330c:	br	x17

0000000000003310 <memchr@plt>:
    3310:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #344]
    3318:	add	x16, x16, #0x158
    331c:	br	x17

0000000000003320 <sysconf@plt>:
    3320:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #352]
    3328:	add	x16, x16, #0x160
    332c:	br	x17

0000000000003330 <elf_getdata@plt>:
    3330:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #360]
    3338:	add	x16, x16, #0x168
    333c:	br	x17

0000000000003340 <__fxstat@plt>:
    3340:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #368]
    3348:	add	x16, x16, #0x170
    334c:	br	x17

0000000000003350 <dcgettext@plt>:
    3350:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #376]
    3358:	add	x16, x16, #0x178
    335c:	br	x17

0000000000003360 <inflateReset@plt>:
    3360:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #384]
    3368:	add	x16, x16, #0x180
    336c:	br	x17

0000000000003370 <ftruncate@plt>:
    3370:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #392]
    3378:	add	x16, x16, #0x188
    337c:	br	x17

0000000000003380 <__assert_fail@plt>:
    3380:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #400]
    3388:	add	x16, x16, #0x190
    338c:	br	x17

0000000000003390 <__errno_location@plt>:
    3390:	adrp	x16, 24000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #408]
    3398:	add	x16, x16, #0x198
    339c:	br	x17

00000000000033a0 <*ABS*@plt>:
    33a0:	stp	x2, x3, [sp, #-16]!
    33a4:	adrp	x2, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    33a8:	adrp	x3, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    33ac:	ldr	x2, [x2, #4064]
    33b0:	add	x3, x3, #0xfe8
    33b4:	br	x2
    33b8:	nop
    33bc:	nop

Disassembly of section .text:

00000000000033c0 <elf_version@@ELFUTILS_1.0-0xd4>:
    33c0:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    33c4:	ldr	x0, [x0, #4048]
    33c8:	cbz	x0, 33d0 <*ABS*@plt+0x30>
    33cc:	b	31f0 <__gmon_start__@plt>
    33d0:	ret
    33d4:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    33d8:	add	x0, x0, #0x1b8
    33dc:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    33e0:	add	x1, x1, #0x1b8
    33e4:	cmp	x1, x0
    33e8:	b.eq	3400 <*ABS*@plt+0x60>  // b.none
    33ec:	adrp	x1, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    33f0:	ldr	x1, [x1, #4032]
    33f4:	cbz	x1, 3400 <*ABS*@plt+0x60>
    33f8:	mov	x16, x1
    33fc:	br	x16
    3400:	ret
    3404:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    3408:	add	x0, x0, #0x1b8
    340c:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    3410:	add	x1, x1, #0x1b8
    3414:	sub	x1, x1, x0
    3418:	mov	x2, #0x2                   	// #2
    341c:	asr	x1, x1, #3
    3420:	sdiv	x1, x1, x2
    3424:	cbz	x1, 343c <*ABS*@plt+0x9c>
    3428:	adrp	x2, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    342c:	ldr	x2, [x2, #4056]
    3430:	cbz	x2, 343c <*ABS*@plt+0x9c>
    3434:	mov	x16, x2
    3438:	br	x16
    343c:	ret
    3440:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    3444:	ldrb	w1, [x0, #440]
    3448:	cbnz	w1, 348c <*ABS*@plt+0xec>
    344c:	stp	x29, x30, [sp, #-32]!
    3450:	mov	x29, sp
    3454:	str	x19, [sp, #16]
    3458:	mov	x19, x0
    345c:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    3460:	ldr	x0, [x0, #4040]
    3464:	cbz	x0, 3474 <*ABS*@plt+0xd4>
    3468:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    346c:	ldr	x0, [x0, #432]
    3470:	bl	30e0 <__cxa_finalize@plt>
    3474:	bl	33d4 <*ABS*@plt+0x34>
    3478:	mov	w0, #0x1                   	// #1
    347c:	strb	w0, [x19, #440]
    3480:	ldr	x19, [sp, #16]
    3484:	ldp	x29, x30, [sp], #32
    3488:	ret
    348c:	ret
    3490:	b	3404 <*ABS*@plt+0x64>

0000000000003494 <elf_version@@ELFUTILS_1.0>:
    3494:	cbz	w0, 34c8 <elf_version@@ELFUTILS_1.0+0x34>
    3498:	cmp	w0, #0x1
    349c:	b.ne	34ac <elf_version@@ELFUTILS_1.0+0x18>  // b.any
    34a0:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    34a4:	str	w0, [x1, #444]
    34a8:	ret
    34ac:	stp	x29, x30, [sp, #-16]!
    34b0:	mov	w0, #0x2                   	// #2
    34b4:	mov	x29, sp
    34b8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    34bc:	mov	w0, #0x0                   	// #0
    34c0:	ldp	x29, x30, [sp], #16
    34c4:	ret
    34c8:	mov	w0, #0x1                   	// #1
    34cc:	ret

00000000000034d0 <elf_hash@@ELFUTILS_1.0>:
    34d0:	mov	x2, x0
    34d4:	ldrb	w0, [x0]
    34d8:	cbz	x0, 352c <elf_hash@@ELFUTILS_1.0+0x5c>
    34dc:	ldrb	w1, [x2, #1]
    34e0:	cbz	w1, 352c <elf_hash@@ELFUTILS_1.0+0x5c>
    34e4:	and	x1, x1, #0xff
    34e8:	add	x0, x1, x0, lsl #4
    34ec:	ldrb	w1, [x2, #2]
    34f0:	cbz	w1, 352c <elf_hash@@ELFUTILS_1.0+0x5c>
    34f4:	and	x1, x1, #0xff
    34f8:	add	x0, x1, x0, lsl #4
    34fc:	ldrb	w1, [x2, #3]
    3500:	cbz	w1, 352c <elf_hash@@ELFUTILS_1.0+0x5c>
    3504:	and	x1, x1, #0xff
    3508:	add	x0, x1, x0, lsl #4
    350c:	ldrb	w1, [x2, #4]
    3510:	cbz	w1, 352c <elf_hash@@ELFUTILS_1.0+0x5c>
    3514:	and	x1, x1, #0xff
    3518:	add	x2, x2, #0x5
    351c:	add	x1, x1, x0, lsl #4
    3520:	ldrb	w0, [x2]
    3524:	cbnz	w0, 3530 <elf_hash@@ELFUTILS_1.0+0x60>
    3528:	and	x0, x1, #0xfffffff
    352c:	ret
    3530:	and	x0, x0, #0xff
    3534:	add	x2, x2, #0x1
    3538:	add	x0, x0, x1, lsl #4
    353c:	lsr	x1, x0, #24
    3540:	and	x1, x1, #0xf0
    3544:	eor	x1, x0, x1
    3548:	b	3520 <elf_hash@@ELFUTILS_1.0+0x50>

000000000000354c <elf_errno@@ELFUTILS_1.0>:
    354c:	stp	x29, x30, [sp, #-16]!
    3550:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    3554:	ldr	x1, [x0, #416]
    3558:	add	x0, x0, #0x1a0
    355c:	blr	x1
    3560:	mrs	x1, tpidr_el0
    3564:	mov	x29, sp
    3568:	ldr	w2, [x1, x0]
    356c:	str	wzr, [x1, x0]
    3570:	mov	w0, w2
    3574:	ldp	x29, x30, [sp], #16
    3578:	ret
    357c:	cmp	w0, #0x33
    3580:	stp	x29, x30, [sp, #-16]!
    3584:	csinc	w1, w0, wzr, cc  // cc = lo, ul, last
    3588:	mov	x29, sp
    358c:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    3590:	ldr	x2, [x0, #416]
    3594:	add	x0, x0, #0x1a0
    3598:	blr	x2
    359c:	mrs	x2, tpidr_el0
    35a0:	str	w1, [x2, x0]
    35a4:	ldp	x29, x30, [sp], #16
    35a8:	ret

00000000000035ac <elf_errmsg@@ELFUTILS_1.0>:
    35ac:	stp	x29, x30, [sp, #-16]!
    35b0:	mov	w1, w0
    35b4:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    35b8:	ldr	x2, [x0, #416]
    35bc:	add	x0, x0, #0x1a0
    35c0:	blr	x2
    35c4:	mrs	x2, tpidr_el0
    35c8:	mov	x29, sp
    35cc:	adrp	x3, f000 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
    35d0:	ldr	w2, [x2, x0]
    35d4:	cbnz	w1, 3624 <elf_errmsg@@ELFUTILS_1.0+0x78>
    35d8:	add	x3, x3, #0xe70
    35dc:	ldr	x1, [x3, w2, sxtw #3]
    35e0:	cmp	x1, #0x4f1
    35e4:	b.ls	3604 <elf_errmsg@@ELFUTILS_1.0+0x58>  // b.plast
    35e8:	adrp	x1, f000 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
    35ec:	adrp	x0, f000 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
    35f0:	add	x3, x3, #0x198
    35f4:	add	x1, x1, #0xdf8
    35f8:	add	x0, x0, #0xe04
    35fc:	mov	w2, #0x15b                 	// #347
    3600:	bl	3380 <__assert_fail@plt>
    3604:	cbz	w2, 3688 <elf_errmsg@@ELFUTILS_1.0+0xdc>
    3608:	add	x3, x3, #0x1a3
    360c:	mov	w2, #0x5                   	// #5
    3610:	add	x1, x3, x1
    3614:	adrp	x0, f000 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
    3618:	ldp	x29, x30, [sp], #16
    361c:	add	x0, x0, #0xe29
    3620:	b	3350 <dcgettext@plt>
    3624:	add	w0, w1, #0x1
    3628:	cmp	w0, #0x33
    362c:	adrp	x0, f000 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
    3630:	b.ls	3644 <elf_errmsg@@ELFUTILS_1.0+0x98>  // b.plast
    3634:	add	x3, x3, #0xe70
    3638:	mov	w2, #0x5                   	// #5
    363c:	add	x1, x3, #0x1ac
    3640:	b	3618 <elf_errmsg@@ELFUTILS_1.0+0x6c>
    3644:	cmn	w1, #0x1
    3648:	add	x3, x3, #0xe70
    364c:	csel	w2, w2, w1, eq  // eq = none
    3650:	ldr	x1, [x3, w2, sxtw #3]
    3654:	cmp	x1, #0x4f1
    3658:	b.ls	3678 <elf_errmsg@@ELFUTILS_1.0+0xcc>  // b.plast
    365c:	adrp	x1, f000 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
    3660:	adrp	x0, f000 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
    3664:	add	x3, x3, #0x198
    3668:	add	x1, x1, #0xdf8
    366c:	add	x0, x0, #0xe32
    3670:	mov	w2, #0x161                 	// #353
    3674:	b	3600 <elf_errmsg@@ELFUTILS_1.0+0x54>
    3678:	add	x3, x3, #0x1a3
    367c:	mov	w2, #0x5                   	// #5
    3680:	add	x1, x3, x1
    3684:	b	3618 <elf_errmsg@@ELFUTILS_1.0+0x6c>
    3688:	mov	x0, #0x0                   	// #0
    368c:	ldp	x29, x30, [sp], #16
    3690:	ret

0000000000003694 <elf_fill@@ELFUTILS_1.0>:
    3694:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    3698:	str	w0, [x1, #448]
    369c:	ret
    36a0:	stp	x29, x30, [sp, #-64]!
    36a4:	mov	x29, sp
    36a8:	stp	x21, x22, [sp, #32]
    36ac:	mov	w22, w0
    36b0:	mov	x21, x2
    36b4:	stp	x23, x24, [sp, #48]
    36b8:	mov	x23, x1
    36bc:	mov	x24, x3
    36c0:	stp	x19, x20, [sp, #16]
    36c4:	mov	x20, #0x0                   	// #0
    36c8:	add	x3, x20, x24
    36cc:	sub	x2, x21, x20
    36d0:	add	x1, x23, x20
    36d4:	mov	w0, w22
    36d8:	bl	32a0 <pread@plt>
    36dc:	mov	x19, x0
    36e0:	cmn	x0, #0x1
    36e4:	b.ne	3704 <elf_fill@@ELFUTILS_1.0+0x70>  // b.any
    36e8:	bl	3390 <__errno_location@plt>
    36ec:	ldr	w0, [x0]
    36f0:	cmp	w0, #0x4
    36f4:	b.ne	3710 <elf_fill@@ELFUTILS_1.0+0x7c>  // b.any
    36f8:	mov	x19, x20
    36fc:	mov	x20, x19
    3700:	b	36c8 <elf_fill@@ELFUTILS_1.0+0x34>
    3704:	cmp	x0, #0x0
    3708:	b.gt	3728 <elf_fill@@ELFUTILS_1.0+0x94>
    370c:	csel	x19, x0, x20, ne  // ne = any
    3710:	mov	x0, x19
    3714:	ldp	x19, x20, [sp, #16]
    3718:	ldp	x21, x22, [sp, #32]
    371c:	ldp	x23, x24, [sp, #48]
    3720:	ldp	x29, x30, [sp], #64
    3724:	ret
    3728:	add	x19, x0, x20
    372c:	cmp	x19, x21
    3730:	b.cc	36fc <elf_fill@@ELFUTILS_1.0+0x68>  // b.lo, b.ul, b.last
    3734:	b	3710 <elf_fill@@ELFUTILS_1.0+0x7c>
    3738:	stp	x29, x30, [sp, #-80]!
    373c:	mov	x29, sp
    3740:	stp	x19, x20, [sp, #16]
    3744:	mov	x20, x5
    3748:	stp	x21, x22, [sp, #32]
    374c:	mov	x21, x1
    3750:	mov	x22, x3
    3754:	add	x1, x7, #0x108
    3758:	stp	x23, x24, [sp, #48]
    375c:	mov	w24, w0
    3760:	mov	x23, x2
    3764:	mov	x0, #0x1                   	// #1
    3768:	stp	x25, x26, [sp, #64]
    376c:	mov	w25, w4
    3770:	mov	w26, w6
    3774:	bl	3180 <calloc@plt>
    3778:	mov	x19, x0
    377c:	cbnz	x0, 37a4 <elf_fill@@ELFUTILS_1.0+0x110>
    3780:	mov	w0, #0x8                   	// #8
    3784:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    3788:	mov	x0, x19
    378c:	ldp	x19, x20, [sp, #16]
    3790:	ldp	x21, x22, [sp, #32]
    3794:	ldp	x23, x24, [sp, #48]
    3798:	ldp	x25, x26, [sp, #64]
    379c:	ldp	x29, x30, [sp], #80
    37a0:	ret
    37a4:	mov	w0, #0x1                   	// #1
    37a8:	stp	x21, x20, [x19]
    37ac:	stp	w26, w25, [x19, #24]
    37b0:	str	w24, [x19, #36]
    37b4:	stp	x23, x22, [x19, #40]
    37b8:	str	w0, [x19, #60]
    37bc:	b	3788 <elf_fill@@ELFUTILS_1.0+0xf4>
    37c0:	cmp	x1, #0x7
    37c4:	b.ls	384c <elf_fill@@ELFUTILS_1.0+0x1b8>  // b.plast
    37c8:	stp	x29, x30, [sp, #-32]!
    37cc:	mov	x2, #0x8                   	// #8
    37d0:	mov	x29, sp
    37d4:	stp	x19, x20, [sp, #16]
    37d8:	mov	x20, x1
    37dc:	mov	x19, x0
    37e0:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    37e4:	add	x1, x1, #0x505
    37e8:	bl	3210 <memcmp@plt>
    37ec:	cbz	w0, 3854 <elf_fill@@ELFUTILS_1.0+0x1c0>
    37f0:	cmp	x20, #0xf
    37f4:	b.ls	385c <elf_fill@@ELFUTILS_1.0+0x1c8>  // b.plast
    37f8:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    37fc:	mov	x0, x19
    3800:	add	x1, x1, #0x50e
    3804:	mov	x2, #0x4                   	// #4
    3808:	bl	3210 <memcmp@plt>
    380c:	cbnz	w0, 385c <elf_fill@@ELFUTILS_1.0+0x1c8>
    3810:	ldrb	w1, [x19, #4]
    3814:	ldrb	w0, [x19, #5]
    3818:	sub	w1, w1, #0x1
    381c:	ldrb	w2, [x19, #6]
    3820:	cmp	w1, #0x1
    3824:	b.hi	385c <elf_fill@@ELFUTILS_1.0+0x1c8>  // b.pmore
    3828:	sub	w0, w0, #0x1
    382c:	cmp	w0, #0x1
    3830:	b.hi	385c <elf_fill@@ELFUTILS_1.0+0x1c8>  // b.pmore
    3834:	cmp	w2, #0x1
    3838:	mov	w0, #0x3                   	// #3
    383c:	csel	w0, wzr, w0, ne  // ne = any
    3840:	ldp	x19, x20, [sp, #16]
    3844:	ldp	x29, x30, [sp], #32
    3848:	ret
    384c:	mov	w0, #0x0                   	// #0
    3850:	ret
    3854:	mov	w0, #0x1                   	// #1
    3858:	b	3840 <elf_fill@@ELFUTILS_1.0+0x1ac>
    385c:	mov	w0, #0x0                   	// #0
    3860:	b	3840 <elf_fill@@ELFUTILS_1.0+0x1ac>
    3864:	stp	x29, x30, [sp, #-176]!
    3868:	mov	x29, sp
    386c:	stp	x19, x20, [sp, #16]
    3870:	stp	x21, x22, [sp, #32]
    3874:	stp	x23, x24, [sp, #48]
    3878:	mov	x23, x1
    387c:	stp	x25, x26, [sp, #64]
    3880:	stp	x27, x28, [sp, #80]
    3884:	mov	w28, w0
    3888:	ldrb	w0, [x2, #4]
    388c:	sub	w1, w0, #0x1
    3890:	and	w1, w1, #0xff
    3894:	cmp	w1, #0x1
    3898:	b.hi	38b4 <elf_fill@@ELFUTILS_1.0+0x220>  // b.pmore
    389c:	ldrb	w25, [x2, #5]
    38a0:	mov	x20, x2
    38a4:	sub	w1, w25, #0x1
    38a8:	and	w1, w1, #0xff
    38ac:	cmp	w1, #0x1
    38b0:	b.ls	38e0 <elf_fill@@ELFUTILS_1.0+0x24c>  // b.plast
    38b4:	mov	w0, #0xa                   	// #10
    38b8:	mov	x19, #0x0                   	// #0
    38bc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    38c0:	mov	x0, x19
    38c4:	ldp	x19, x20, [sp, #16]
    38c8:	ldp	x21, x22, [sp, #32]
    38cc:	ldp	x23, x24, [sp, #48]
    38d0:	ldp	x25, x26, [sp, #64]
    38d4:	ldp	x27, x28, [sp, #80]
    38d8:	ldp	x29, x30, [sp], #176
    38dc:	ret
    38e0:	mov	x24, x3
    38e4:	mov	x22, x4
    38e8:	mov	w26, w5
    38ec:	mov	x27, x6
    38f0:	cmp	w25, #0x1
    38f4:	b.ne	3910 <elf_fill@@ELFUTILS_1.0+0x27c>  // b.any
    38f8:	cmp	w0, #0x1
    38fc:	mov	x1, #0x3                   	// #3
    3900:	mov	x2, #0x7                   	// #7
    3904:	csel	x1, x1, x2, eq  // eq = none
    3908:	tst	x20, x1
    390c:	b.eq	3b38 <elf_fill@@ELFUTILS_1.0+0x4a4>  // b.none
    3910:	cmp	w0, #0x1
    3914:	add	x19, sp, #0x70
    3918:	b.ne	39c4 <elf_fill@@ELFUTILS_1.0+0x330>  // b.any
    391c:	mov	x1, x20
    3920:	mov	x0, x19
    3924:	mov	x2, #0x34                  	// #52
    3928:	bl	3060 <memcpy@plt>
    392c:	cmp	w25, #0x1
    3930:	b.eq	394c <elf_fill@@ELFUTILS_1.0+0x2b8>  // b.none
    3934:	ldrh	w0, [sp, #160]
    3938:	rev16	w0, w0
    393c:	strh	w0, [sp, #160]
    3940:	ldr	w0, [sp, #144]
    3944:	rev	w0, w0
    3948:	str	w0, [sp, #144]
    394c:	ldrh	w21, [x19, #48]
    3950:	cbnz	x21, 3998 <elf_fill@@ELFUTILS_1.0+0x304>
    3954:	ldr	w0, [x19, #32]
    3958:	cbz	w0, 3998 <elf_fill@@ELFUTILS_1.0+0x304>
    395c:	mov	w3, w0
    3960:	cmp	x22, w0, uxtw
    3964:	b.ls	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>  // b.plast
    3968:	sub	x0, x22, x3
    396c:	cmp	x0, #0x27
    3970:	b.ls	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>  // b.plast
    3974:	cbz	x23, 3b6c <elf_fill@@ELFUTILS_1.0+0x4d8>
    3978:	add	x3, x23, x3
    397c:	cmp	w25, #0x1
    3980:	add	x0, x3, x24
    3984:	ldr	w21, [x0, #20]
    3988:	b.ne	3b48 <elf_fill@@ELFUTILS_1.0+0x4b4>  // b.any
    398c:	tst	x3, #0x3
    3990:	b.ne	3b48 <elf_fill@@ELFUTILS_1.0+0x4b4>  // b.any
    3994:	mov	w21, w21
    3998:	ldr	w0, [x19, #32]
    399c:	cmp	x22, x0
    39a0:	b.cc	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>  // b.lo, b.ul, b.last
    39a4:	mov	x1, #0x28                  	// #40
    39a8:	sub	x0, x22, x0
    39ac:	mul	x1, x21, x1
    39b0:	cmp	x0, x1
    39b4:	b.cc	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>  // b.lo, b.ul, b.last
    39b8:	mov	x25, x21
    39bc:	cbnz	x21, 3a84 <elf_fill@@ELFUTILS_1.0+0x3f0>
    39c0:	b	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>
    39c4:	ldp	x0, x1, [x20]
    39c8:	stp	x0, x1, [sp, #112]
    39cc:	cmp	w25, #0x1
    39d0:	ldp	x0, x1, [x20, #16]
    39d4:	stp	x0, x1, [sp, #128]
    39d8:	ldp	x0, x1, [x20, #32]
    39dc:	stp	x0, x1, [sp, #144]
    39e0:	ldp	x0, x1, [x20, #48]
    39e4:	stp	x0, x1, [sp, #160]
    39e8:	b.eq	3a04 <elf_fill@@ELFUTILS_1.0+0x370>  // b.none
    39ec:	ldrh	w0, [sp, #172]
    39f0:	rev16	w0, w0
    39f4:	strh	w0, [sp, #172]
    39f8:	ldr	x0, [sp, #152]
    39fc:	rev	x0, x0
    3a00:	str	x0, [sp, #152]
    3a04:	ldrh	w21, [x19, #60]
    3a08:	cbnz	x21, 3a5c <elf_fill@@ELFUTILS_1.0+0x3c8>
    3a0c:	ldr	x21, [x19, #40]
    3a10:	cbz	x21, 3a5c <elf_fill@@ELFUTILS_1.0+0x3c8>
    3a14:	cmp	x22, x21
    3a18:	b.ls	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>  // b.plast
    3a1c:	add	x0, x21, #0x40
    3a20:	cmp	x22, x0
    3a24:	b.cc	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>  // b.lo, b.ul, b.last
    3a28:	cbz	x23, 3b98 <elf_fill@@ELFUTILS_1.0+0x504>
    3a2c:	add	x21, x23, x21
    3a30:	cmp	w25, #0x1
    3a34:	add	x0, x21, x24
    3a38:	ldr	x0, [x0, #32]
    3a3c:	str	x0, [sp, #104]
    3a40:	b.ne	3bb8 <elf_fill@@ELFUTILS_1.0+0x524>  // b.any
    3a44:	tst	x21, #0x7
    3a48:	b.ne	3bb8 <elf_fill@@ELFUTILS_1.0+0x524>  // b.any
    3a4c:	ldr	x21, [sp, #104]
    3a50:	mov	x0, #0xffffffff            	// #4294967295
    3a54:	cmp	x21, x0
    3a58:	b.hi	38b4 <elf_fill@@ELFUTILS_1.0+0x220>  // b.pmore
    3a5c:	ldr	x0, [x19, #40]
    3a60:	cmp	x22, x0
    3a64:	b.cc	3a74 <elf_fill@@ELFUTILS_1.0+0x3e0>  // b.lo, b.ul, b.last
    3a68:	sub	x0, x22, x0
    3a6c:	cmp	x0, x21, lsl #6
    3a70:	b.cs	39b8 <elf_fill@@ELFUTILS_1.0+0x324>  // b.hs, b.nlast
    3a74:	cmp	w26, #0x2
    3a78:	mov	x25, #0x0                   	// #0
    3a7c:	ccmp	w26, #0x9, #0x4, ne  // ne = any
    3a80:	cset	x21, eq  // eq = none
    3a84:	mov	x7, #0xd0                  	// #208
    3a88:	mov	x5, x27
    3a8c:	mov	w4, w26
    3a90:	mov	x3, x22
    3a94:	mul	x7, x21, x7
    3a98:	mov	x2, x24
    3a9c:	mov	x1, x23
    3aa0:	mov	w0, w28
    3aa4:	mov	w6, #0x3                   	// #3
    3aa8:	bl	3738 <elf_fill@@ELFUTILS_1.0+0xa4>
    3aac:	mov	x19, x0
    3ab0:	cbz	x0, 38c0 <elf_fill@@ELFUTILS_1.0+0x22c>
    3ab4:	mov	w0, #0xa                   	// #10
    3ab8:	str	w0, [x19, #112]
    3abc:	stp	w25, w21, [x19, #200]
    3ac0:	add	x21, x23, x24
    3ac4:	ldrb	w0, [x20, #4]
    3ac8:	str	w0, [x19, #32]
    3acc:	ldrb	w0, [x20, #4]
    3ad0:	cmp	w0, #0x1
    3ad4:	b.ne	3d70 <elf_fill@@ELFUTILS_1.0+0x6dc>  // b.any
    3ad8:	cbz	x23, 3bd4 <elf_fill@@ELFUTILS_1.0+0x540>
    3adc:	ldrb	w0, [x20, #5]
    3ae0:	cmp	w0, #0x1
    3ae4:	b.ne	3bd4 <elf_fill@@ELFUTILS_1.0+0x540>  // b.any
    3ae8:	tst	x21, #0x3
    3aec:	b.ne	3bd4 <elf_fill@@ELFUTILS_1.0+0x540>  // b.any
    3af0:	str	x21, [x19, #72]
    3af4:	ldrb	w0, [x20, #5]
    3af8:	cmp	w0, #0x1
    3afc:	b.ne	3c94 <elf_fill@@ELFUTILS_1.0+0x600>  // b.any
    3b00:	cmp	w26, #0x8
    3b04:	b.eq	3c94 <elf_fill@@ELFUTILS_1.0+0x600>  // b.none
    3b08:	ldr	x0, [x19, #72]
    3b0c:	ldr	w1, [x0, #32]
    3b10:	add	x0, x21, x1
    3b14:	mov	x2, x0
    3b18:	ands	x3, x0, #0x3
    3b1c:	b.ne	3c94 <elf_fill@@ELFUTILS_1.0+0x600>  // b.any
    3b20:	cbz	x25, 3cd0 <elf_fill@@ELFUTILS_1.0+0x63c>
    3b24:	cmp	x1, x22
    3b28:	b.cc	3cbc <elf_fill@@ELFUTILS_1.0+0x628>  // b.lo, b.ul, b.last
    3b2c:	mov	x0, x19
    3b30:	bl	3250 <free@plt>
    3b34:	b	38b4 <elf_fill@@ELFUTILS_1.0+0x220>
    3b38:	mov	x19, x20
    3b3c:	cmp	w0, #0x1
    3b40:	b.eq	394c <elf_fill@@ELFUTILS_1.0+0x2b8>  // b.none
    3b44:	b	3a04 <elf_fill@@ELFUTILS_1.0+0x370>
    3b48:	str	w21, [sp, #104]
    3b4c:	ldrb	w0, [x20, #5]
    3b50:	cmp	w0, #0x1
    3b54:	b.eq	3b64 <elf_fill@@ELFUTILS_1.0+0x4d0>  // b.none
    3b58:	ldr	w0, [sp, #104]
    3b5c:	rev	w0, w0
    3b60:	str	w0, [sp, #104]
    3b64:	ldr	w21, [sp, #104]
    3b68:	b	3998 <elf_fill@@ELFUTILS_1.0+0x304>
    3b6c:	add	x3, x3, x24
    3b70:	add	x1, sp, #0x68
    3b74:	add	x3, x3, #0x14
    3b78:	mov	w0, w28
    3b7c:	mov	x2, #0x4                   	// #4
    3b80:	bl	36a0 <elf_fill@@ELFUTILS_1.0+0xc>
    3b84:	cmp	x0, #0x4
    3b88:	b.eq	3b4c <elf_fill@@ELFUTILS_1.0+0x4b8>  // b.none
    3b8c:	tbz	x0, #63, 38b4 <elf_fill@@ELFUTILS_1.0+0x220>
    3b90:	mov	w0, #0x9                   	// #9
    3b94:	b	38b8 <elf_fill@@ELFUTILS_1.0+0x224>
    3b98:	add	x3, x24, #0x20
    3b9c:	add	x1, sp, #0x68
    3ba0:	add	x3, x3, x21
    3ba4:	mov	w0, w28
    3ba8:	mov	x2, #0x8                   	// #8
    3bac:	bl	36a0 <elf_fill@@ELFUTILS_1.0+0xc>
    3bb0:	cmp	x0, #0x8
    3bb4:	b.ne	3b8c <elf_fill@@ELFUTILS_1.0+0x4f8>  // b.any
    3bb8:	ldrb	w0, [x20, #5]
    3bbc:	cmp	w0, #0x1
    3bc0:	b.eq	3a4c <elf_fill@@ELFUTILS_1.0+0x3b8>  // b.none
    3bc4:	ldr	x0, [sp, #104]
    3bc8:	rev	x0, x0
    3bcc:	str	x0, [sp, #104]
    3bd0:	b	3a4c <elf_fill@@ELFUTILS_1.0+0x3b8>
    3bd4:	mov	x1, x20
    3bd8:	add	x0, x19, #0x88
    3bdc:	mov	x2, #0x34                  	// #52
    3be0:	bl	3060 <memcpy@plt>
    3be4:	str	x0, [x19, #72]
    3be8:	ldrb	w0, [x20, #5]
    3bec:	cmp	w0, #0x1
    3bf0:	b.eq	3f5c <elf_fill@@ELFUTILS_1.0+0x8c8>  // b.none
    3bf4:	ldrh	w0, [x19, #152]
    3bf8:	rev16	w0, w0
    3bfc:	strh	w0, [x19, #152]
    3c00:	ldrh	w0, [x19, #154]
    3c04:	rev16	w0, w0
    3c08:	strh	w0, [x19, #154]
    3c0c:	ldr	w0, [x19, #156]
    3c10:	rev	w0, w0
    3c14:	str	w0, [x19, #156]
    3c18:	ldr	w0, [x19, #160]
    3c1c:	rev	w0, w0
    3c20:	str	w0, [x19, #160]
    3c24:	ldr	w0, [x19, #164]
    3c28:	rev	w0, w0
    3c2c:	str	w0, [x19, #164]
    3c30:	ldr	w0, [x19, #168]
    3c34:	rev	w0, w0
    3c38:	str	w0, [x19, #168]
    3c3c:	ldr	w0, [x19, #172]
    3c40:	rev	w0, w0
    3c44:	str	w0, [x19, #172]
    3c48:	ldrh	w0, [x19, #176]
    3c4c:	rev16	w0, w0
    3c50:	strh	w0, [x19, #176]
    3c54:	ldrh	w0, [x19, #178]
    3c58:	rev16	w0, w0
    3c5c:	strh	w0, [x19, #178]
    3c60:	ldrh	w0, [x19, #180]
    3c64:	rev16	w0, w0
    3c68:	strh	w0, [x19, #180]
    3c6c:	ldrh	w0, [x19, #182]
    3c70:	rev16	w0, w0
    3c74:	strh	w0, [x19, #182]
    3c78:	ldrh	w0, [x19, #184]
    3c7c:	rev16	w0, w0
    3c80:	strh	w0, [x19, #184]
    3c84:	ldrh	w0, [x19, #186]
    3c88:	rev16	w0, w0
    3c8c:	strh	w0, [x19, #186]
    3c90:	cbnz	x23, 3af4 <elf_fill@@ELFUTILS_1.0+0x460>
    3c94:	add	x0, x19, #0x158
    3c98:	add	x2, x19, #0xc8
    3c9c:	mov	x1, #0x0                   	// #0
    3ca0:	cmp	x1, x25
    3ca4:	b.eq	3cec <elf_fill@@ELFUTILS_1.0+0x658>  // b.none
    3ca8:	stp	x1, x19, [x0]
    3cac:	add	x1, x1, #0x1
    3cb0:	add	x0, x0, #0xd0
    3cb4:	stur	x2, [x0, #-136]
    3cb8:	b	3ca0 <elf_fill@@ELFUTILS_1.0+0x60c>
    3cbc:	mov	x4, #0x28                  	// #40
    3cc0:	sub	x1, x22, x1
    3cc4:	mul	x4, x25, x4
    3cc8:	cmp	x1, x4
    3ccc:	b.cc	3b2c <elf_fill@@ELFUTILS_1.0+0x498>  // b.lo, b.ul, b.last
    3cd0:	add	x4, x19, #0xc8
    3cd4:	str	x0, [x19, #80]
    3cd8:	add	x0, x19, #0x154
    3cdc:	mov	x5, #0xd0                  	// #208
    3ce0:	mov	w6, #0xffffffff            	// #-1
    3ce4:	cmp	x3, x25
    3ce8:	b.ne	3cf8 <elf_fill@@ELFUTILS_1.0+0x664>  // b.any
    3cec:	add	x0, x19, #0xc8
    3cf0:	str	x0, [x19, #96]
    3cf4:	b	38c0 <elf_fill@@ELFUTILS_1.0+0x22c>
    3cf8:	stur	x3, [x0, #4]
    3cfc:	stur	x19, [x0, #12]
    3d00:	stur	x2, [x0, #20]
    3d04:	ldr	w1, [x2, #16]
    3d08:	cmp	x1, x22
    3d0c:	b.cs	3d30 <elf_fill@@ELFUTILS_1.0+0x69c>  // b.hs, b.nlast
    3d10:	ldr	w8, [x2, #20]
    3d14:	sub	x7, x22, x1
    3d18:	cmp	x8, x7
    3d1c:	b.hi	3d30 <elf_fill@@ELFUTILS_1.0+0x69c>  // b.pmore
    3d20:	add	x1, x1, x24
    3d24:	add	x1, x23, x1
    3d28:	stur	x1, [x0, #36]
    3d2c:	stur	x1, [x0, #44]
    3d30:	stur	x4, [x0, #76]
    3d34:	ldr	w1, [x2, #4]
    3d38:	cmp	w1, #0x12
    3d3c:	b.ne	3d54 <elf_fill@@ELFUTILS_1.0+0x6c0>  // b.any
    3d40:	ldr	w1, [x2, #24]
    3d44:	cmp	x1, x25
    3d48:	b.cs	3d54 <elf_fill@@ELFUTILS_1.0+0x6c0>  // b.hs, b.nlast
    3d4c:	madd	x1, x1, x5, x19
    3d50:	str	w3, [x1, #340]
    3d54:	ldr	w1, [x0]
    3d58:	cbnz	w1, 3d60 <elf_fill@@ELFUTILS_1.0+0x6cc>
    3d5c:	str	w6, [x0]
    3d60:	add	x3, x3, #0x1
    3d64:	add	x0, x0, #0xd0
    3d68:	add	x2, x2, #0x28
    3d6c:	b	3ce4 <elf_fill@@ELFUTILS_1.0+0x650>
    3d70:	cbz	x23, 3e60 <elf_fill@@ELFUTILS_1.0+0x7cc>
    3d74:	ldrb	w0, [x20, #5]
    3d78:	cmp	w0, #0x1
    3d7c:	b.ne	3e60 <elf_fill@@ELFUTILS_1.0+0x7cc>  // b.any
    3d80:	tst	x21, #0x7
    3d84:	b.ne	3e60 <elf_fill@@ELFUTILS_1.0+0x7cc>  // b.any
    3d88:	str	x21, [x19, #72]
    3d8c:	ldrb	w0, [x20, #5]
    3d90:	cmp	w0, #0x1
    3d94:	b.ne	3f34 <elf_fill@@ELFUTILS_1.0+0x8a0>  // b.any
    3d98:	cmp	w26, #0x8
    3d9c:	b.eq	3f34 <elf_fill@@ELFUTILS_1.0+0x8a0>  // b.none
    3da0:	ldr	x0, [x19, #72]
    3da4:	ldr	x1, [x0, #40]
    3da8:	add	x0, x21, x1
    3dac:	ands	x3, x0, #0x7
    3db0:	b.ne	3f34 <elf_fill@@ELFUTILS_1.0+0x8a0>  // b.any
    3db4:	cmp	x25, #0x0
    3db8:	ccmp	x22, x1, #0x2, ne  // ne = any
    3dbc:	b.ls	3b2c <elf_fill@@ELFUTILS_1.0+0x498>  // b.plast
    3dc0:	sub	x1, x22, x1
    3dc4:	cmp	x1, x25, lsl #6
    3dc8:	b.cc	3b2c <elf_fill@@ELFUTILS_1.0+0x498>  // b.lo, b.ul, b.last
    3dcc:	add	x1, x19, #0x154
    3dd0:	add	x5, x19, #0xc8
    3dd4:	mov	x6, #0xd0                  	// #208
    3dd8:	mov	w7, #0xffffffff            	// #-1
    3ddc:	str	x0, [x19, #80]
    3de0:	cmp	x3, x25
    3de4:	b.eq	3cec <elf_fill@@ELFUTILS_1.0+0x658>  // b.none
    3de8:	stur	x3, [x1, #4]
    3dec:	stur	x19, [x1, #12]
    3df0:	stur	x0, [x1, #20]
    3df4:	ldr	x2, [x0, #24]
    3df8:	cmp	x2, x22
    3dfc:	b.cs	3e20 <elf_fill@@ELFUTILS_1.0+0x78c>  // b.hs, b.nlast
    3e00:	ldr	x8, [x0, #32]
    3e04:	sub	x4, x22, x2
    3e08:	cmp	x8, x4
    3e0c:	b.hi	3e20 <elf_fill@@ELFUTILS_1.0+0x78c>  // b.pmore
    3e10:	add	x2, x2, x24
    3e14:	add	x2, x23, x2
    3e18:	stur	x2, [x1, #36]
    3e1c:	stur	x2, [x1, #44]
    3e20:	stur	x5, [x1, #76]
    3e24:	ldr	w2, [x0, #4]
    3e28:	cmp	w2, #0x12
    3e2c:	b.ne	3e44 <elf_fill@@ELFUTILS_1.0+0x7b0>  // b.any
    3e30:	ldr	w2, [x0, #40]
    3e34:	cmp	x2, x25
    3e38:	b.cs	3e44 <elf_fill@@ELFUTILS_1.0+0x7b0>  // b.hs, b.nlast
    3e3c:	madd	x2, x2, x6, x19
    3e40:	str	w3, [x2, #340]
    3e44:	ldr	w2, [x1]
    3e48:	cbnz	w2, 3e50 <elf_fill@@ELFUTILS_1.0+0x7bc>
    3e4c:	str	w7, [x1]
    3e50:	add	x3, x3, #0x1
    3e54:	add	x1, x1, #0xd0
    3e58:	add	x0, x0, #0x40
    3e5c:	b	3de0 <elf_fill@@ELFUTILS_1.0+0x74c>
    3e60:	ldp	x0, x1, [x20]
    3e64:	stp	x0, x1, [x19, #136]
    3e68:	add	x2, x19, #0x88
    3e6c:	ldp	x0, x1, [x20, #16]
    3e70:	stp	x0, x1, [x19, #152]
    3e74:	ldp	x0, x1, [x20, #32]
    3e78:	stp	x0, x1, [x19, #168]
    3e7c:	ldp	x0, x1, [x20, #48]
    3e80:	str	x2, [x19, #72]
    3e84:	stp	x0, x1, [x19, #184]
    3e88:	ldrb	w0, [x20, #5]
    3e8c:	cmp	w0, #0x1
    3e90:	b.eq	3f64 <elf_fill@@ELFUTILS_1.0+0x8d0>  // b.none
    3e94:	ldrh	w0, [x19, #152]
    3e98:	rev16	w0, w0
    3e9c:	strh	w0, [x19, #152]
    3ea0:	ldrh	w0, [x19, #154]
    3ea4:	rev16	w0, w0
    3ea8:	strh	w0, [x19, #154]
    3eac:	ldr	w0, [x19, #156]
    3eb0:	rev	w0, w0
    3eb4:	str	w0, [x19, #156]
    3eb8:	ldr	x0, [x19, #160]
    3ebc:	rev	x0, x0
    3ec0:	str	x0, [x19, #160]
    3ec4:	ldr	x0, [x19, #168]
    3ec8:	rev	x0, x0
    3ecc:	str	x0, [x19, #168]
    3ed0:	ldr	x0, [x19, #176]
    3ed4:	rev	x0, x0
    3ed8:	str	x0, [x19, #176]
    3edc:	ldr	w0, [x19, #184]
    3ee0:	rev	w0, w0
    3ee4:	str	w0, [x19, #184]
    3ee8:	ldrh	w0, [x19, #188]
    3eec:	rev16	w0, w0
    3ef0:	strh	w0, [x19, #188]
    3ef4:	ldrh	w0, [x19, #190]
    3ef8:	rev16	w0, w0
    3efc:	strh	w0, [x19, #190]
    3f00:	ldrh	w0, [x19, #192]
    3f04:	rev16	w0, w0
    3f08:	strh	w0, [x19, #192]
    3f0c:	ldrh	w0, [x19, #194]
    3f10:	rev16	w0, w0
    3f14:	strh	w0, [x19, #194]
    3f18:	ldrh	w0, [x19, #196]
    3f1c:	rev16	w0, w0
    3f20:	strh	w0, [x19, #196]
    3f24:	ldrh	w0, [x19, #198]
    3f28:	rev16	w0, w0
    3f2c:	strh	w0, [x19, #198]
    3f30:	cbnz	x23, 3d8c <elf_fill@@ELFUTILS_1.0+0x6f8>
    3f34:	add	x0, x19, #0x158
    3f38:	add	x2, x19, #0xc8
    3f3c:	mov	x1, #0x0                   	// #0
    3f40:	cmp	x1, x25
    3f44:	b.eq	3cec <elf_fill@@ELFUTILS_1.0+0x658>  // b.none
    3f48:	stp	x1, x19, [x0]
    3f4c:	add	x1, x1, #0x1
    3f50:	add	x0, x0, #0xd0
    3f54:	stur	x2, [x0, #-136]
    3f58:	b	3f40 <elf_fill@@ELFUTILS_1.0+0x8ac>
    3f5c:	cbnz	x23, 3b00 <elf_fill@@ELFUTILS_1.0+0x46c>
    3f60:	b	3c94 <elf_fill@@ELFUTILS_1.0+0x600>
    3f64:	cbnz	x23, 3d98 <elf_fill@@ELFUTILS_1.0+0x704>
    3f68:	b	3f34 <elf_fill@@ELFUTILS_1.0+0x8a0>
    3f6c:	stp	x29, x30, [sp, #-80]!
    3f70:	mov	x29, sp
    3f74:	str	x25, [sp, #64]
    3f78:	add	x25, x1, x2
    3f7c:	stp	x19, x20, [sp, #16]
    3f80:	mov	x20, x1
    3f84:	mov	x19, x2
    3f88:	mov	x1, x3
    3f8c:	stp	x21, x22, [sp, #32]
    3f90:	mov	w22, w0
    3f94:	mov	x21, x3
    3f98:	mov	x0, x25
    3f9c:	stp	x23, x24, [sp, #48]
    3fa0:	mov	w23, w4
    3fa4:	mov	x24, x5
    3fa8:	bl	37c0 <elf_fill@@ELFUTILS_1.0+0x12c>
    3fac:	mov	w6, w0
    3fb0:	cmp	w0, #0x1
    3fb4:	b.eq	3ff4 <elf_fill@@ELFUTILS_1.0+0x960>  // b.none
    3fb8:	cmp	w0, #0x3
    3fbc:	b.ne	4040 <elf_fill@@ELFUTILS_1.0+0x9ac>  // b.any
    3fc0:	mov	x6, x24
    3fc4:	mov	w5, w23
    3fc8:	mov	x4, x21
    3fcc:	mov	x3, x19
    3fd0:	mov	x2, x25
    3fd4:	mov	x1, x20
    3fd8:	mov	w0, w22
    3fdc:	ldp	x19, x20, [sp, #16]
    3fe0:	ldp	x21, x22, [sp, #32]
    3fe4:	ldp	x23, x24, [sp, #48]
    3fe8:	ldr	x25, [sp, #64]
    3fec:	ldp	x29, x30, [sp], #80
    3ff0:	b	3864 <elf_fill@@ELFUTILS_1.0+0x1d0>
    3ff4:	mov	x5, x24
    3ff8:	mov	w4, w23
    3ffc:	mov	x3, x21
    4000:	mov	x2, x19
    4004:	mov	x1, x20
    4008:	mov	w0, w22
    400c:	mov	x7, #0x0                   	// #0
    4010:	bl	3738 <elf_fill@@ELFUTILS_1.0+0xa4>
    4014:	cbz	x0, 4028 <elf_fill@@ELFUTILS_1.0+0x994>
    4018:	add	x19, x19, #0x8
    401c:	add	x1, x0, #0xf4
    4020:	str	x19, [x0, #112]
    4024:	str	x1, [x0, #160]
    4028:	ldp	x19, x20, [sp, #16]
    402c:	ldp	x21, x22, [sp, #32]
    4030:	ldp	x23, x24, [sp, #48]
    4034:	ldr	x25, [sp, #64]
    4038:	ldp	x29, x30, [sp], #80
    403c:	ret
    4040:	mov	x5, x24
    4044:	mov	w4, w23
    4048:	mov	x3, x21
    404c:	mov	x2, x19
    4050:	mov	x1, x20
    4054:	mov	w0, w22
    4058:	ldp	x19, x20, [sp, #16]
    405c:	mov	x7, #0x0                   	// #0
    4060:	ldp	x21, x22, [sp, #32]
    4064:	mov	w6, #0x0                   	// #0
    4068:	ldp	x23, x24, [sp, #48]
    406c:	ldr	x25, [sp, #64]
    4070:	ldp	x29, x30, [sp], #80
    4074:	b	3738 <elf_fill@@ELFUTILS_1.0+0xa4>
    4078:	stp	x29, x30, [sp, #-208]!
    407c:	cmn	x2, #0x1
    4080:	mov	x29, sp
    4084:	stp	x19, x20, [sp, #16]
    4088:	mov	x20, x2
    408c:	mov	w19, w3
    4090:	stp	x21, x22, [sp, #32]
    4094:	mov	x21, x1
    4098:	mov	x22, x4
    409c:	stp	x23, x24, [sp, #48]
    40a0:	mov	w24, w0
    40a4:	sub	w23, w3, #0x8
    40a8:	stp	x25, x26, [sp, #64]
    40ac:	cbnz	x4, 4140 <elf_fill@@ELFUTILS_1.0+0xaac>
    40b0:	b.ne	40c4 <elf_fill@@ELFUTILS_1.0+0xa30>  // b.any
    40b4:	add	x1, sp, #0x50
    40b8:	bl	fdd8 <elf_compress_gnu@@ELFUTILS_1.7+0x24c>
    40bc:	cbnz	w0, 40c4 <elf_fill@@ELFUTILS_1.0+0xa30>
    40c0:	ldr	x20, [sp, #128]
    40c4:	cmp	w23, #0x3
    40c8:	b.hi	4104 <elf_fill@@ELFUTILS_1.0+0xa70>  // b.pmore
    40cc:	cmp	w19, #0x8
    40d0:	b.eq	4164 <elf_fill@@ELFUTILS_1.0+0xad0>  // b.none
    40d4:	cmp	w19, #0xb
    40d8:	mov	w3, #0x2                   	// #2
    40dc:	csinc	w3, w3, wzr, eq  // eq = none
    40e0:	mov	w2, #0x3                   	// #3
    40e4:	mov	x5, x21
    40e8:	mov	w4, w24
    40ec:	mov	x1, x20
    40f0:	mov	x0, #0x0                   	// #0
    40f4:	bl	3240 <mmap@plt>
    40f8:	mov	x23, x0
    40fc:	cmn	x0, #0x1
    4100:	b.ne	4248 <elf_fill@@ELFUTILS_1.0+0xbb4>  // b.any
    4104:	mov	x25, #0x40                  	// #64
    4108:	cmp	x20, x25
    410c:	add	x26, sp, #0x50
    4110:	csel	x2, x20, x25, ls  // ls = plast
    4114:	mov	x3, x21
    4118:	mov	x1, x26
    411c:	mov	w0, w24
    4120:	bl	36a0 <elf_fill@@ELFUTILS_1.0+0xc>
    4124:	mov	x23, x0
    4128:	cmn	x0, #0x1
    412c:	b.ne	4184 <elf_fill@@ELFUTILS_1.0+0xaf0>  // b.any
    4130:	mov	w0, #0x9                   	// #9
    4134:	mov	x19, #0x0                   	// #0
    4138:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    413c:	b	428c <elf_fill@@ELFUTILS_1.0+0xbf8>
    4140:	b.ne	42a8 <elf_fill@@ELFUTILS_1.0+0xc14>  // b.any
    4144:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4148:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    414c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4150:	add	x3, x3, #0x5a4
    4154:	add	x1, x1, #0x513
    4158:	add	x0, x0, #0x51f
    415c:	mov	w2, #0x291                 	// #657
    4160:	bl	3380 <__assert_fail@plt>
    4164:	mov	w2, #0x1                   	// #1
    4168:	mov	w3, #0x2                   	// #2
    416c:	b	40e4 <elf_fill@@ELFUTILS_1.0+0xa50>
    4170:	cbnz	x22, 428c <elf_fill@@ELFUTILS_1.0+0xbf8>
    4174:	ldr	w0, [x0, #56]
    4178:	orr	w0, w0, #0x40
    417c:	str	w0, [x19, #56]
    4180:	b	428c <elf_fill@@ELFUTILS_1.0+0xbf8>
    4184:	mov	x1, x0
    4188:	mov	x0, x26
    418c:	bl	37c0 <elf_fill@@ELFUTILS_1.0+0x12c>
    4190:	mov	w6, w0
    4194:	cmp	w0, #0x1
    4198:	b.eq	41cc <elf_fill@@ELFUTILS_1.0+0xb38>  // b.none
    419c:	cmp	w0, #0x3
    41a0:	b.eq	4208 <elf_fill@@ELFUTILS_1.0+0xb74>  // b.none
    41a4:	mov	x5, x22
    41a8:	mov	w4, w19
    41ac:	mov	x3, x20
    41b0:	mov	x2, x21
    41b4:	mov	w0, w24
    41b8:	mov	x7, #0x0                   	// #0
    41bc:	mov	w6, #0x0                   	// #0
    41c0:	mov	x1, #0x0                   	// #0
    41c4:	bl	3738 <elf_fill@@ELFUTILS_1.0+0xa4>
    41c8:	b	4240 <elf_fill@@ELFUTILS_1.0+0xbac>
    41cc:	mov	w4, w19
    41d0:	mov	x5, x22
    41d4:	mov	x3, x20
    41d8:	mov	x2, x21
    41dc:	mov	w0, w24
    41e0:	mov	x7, #0x0                   	// #0
    41e4:	mov	x1, #0x0                   	// #0
    41e8:	bl	3738 <elf_fill@@ELFUTILS_1.0+0xa4>
    41ec:	mov	x19, x0
    41f0:	cbz	x0, 428c <elf_fill@@ELFUTILS_1.0+0xbf8>
    41f4:	add	x21, x21, #0x8
    41f8:	add	x0, x0, #0xf4
    41fc:	str	x21, [x19, #112]
    4200:	str	x0, [x19, #160]
    4204:	b	428c <elf_fill@@ELFUTILS_1.0+0xbf8>
    4208:	ldrb	w0, [sp, #84]
    420c:	cmp	w0, #0x1
    4210:	mov	x0, #0x34                  	// #52
    4214:	csel	x25, x0, x25, eq  // eq = none
    4218:	cmp	x23, x25
    421c:	b.cc	41a4 <elf_fill@@ELFUTILS_1.0+0xb10>  // b.lo, b.ul, b.last
    4220:	mov	x6, x22
    4224:	mov	w5, w19
    4228:	mov	x4, x20
    422c:	mov	x3, x21
    4230:	mov	x2, x26
    4234:	mov	w0, w24
    4238:	mov	x1, #0x0                   	// #0
    423c:	bl	3864 <elf_fill@@ELFUTILS_1.0+0x1d0>
    4240:	mov	x19, x0
    4244:	b	428c <elf_fill@@ELFUTILS_1.0+0xbf8>
    4248:	cbz	x0, 4104 <elf_fill@@ELFUTILS_1.0+0xa70>
    424c:	mov	w4, w19
    4250:	mov	x5, x22
    4254:	mov	x3, x20
    4258:	mov	x2, x21
    425c:	mov	x1, x23
    4260:	mov	w0, w24
    4264:	bl	3f6c <elf_fill@@ELFUTILS_1.0+0x8d8>
    4268:	mov	x19, x0
    426c:	cbnz	x0, 4170 <elf_fill@@ELFUTILS_1.0+0xadc>
    4270:	cbz	x22, 4280 <elf_fill@@ELFUTILS_1.0+0xbec>
    4274:	ldr	x0, [x22]
    4278:	cmp	x0, x23
    427c:	b.eq	428c <elf_fill@@ELFUTILS_1.0+0xbf8>  // b.none
    4280:	mov	x1, x20
    4284:	mov	x0, x23
    4288:	bl	32f0 <munmap@plt>
    428c:	mov	x0, x19
    4290:	ldp	x19, x20, [sp, #16]
    4294:	ldp	x21, x22, [sp, #32]
    4298:	ldp	x23, x24, [sp, #48]
    429c:	ldp	x25, x26, [sp, #64]
    42a0:	ldp	x29, x30, [sp], #208
    42a4:	ret
    42a8:	cmp	w23, #0x3
    42ac:	b.hi	4104 <elf_fill@@ELFUTILS_1.0+0xa70>  // b.pmore
    42b0:	ldr	x23, [x22]
    42b4:	cbz	x23, 4104 <elf_fill@@ELFUTILS_1.0+0xa70>
    42b8:	cmn	x23, #0x1
    42bc:	b.ne	424c <elf_fill@@ELFUTILS_1.0+0xbb8>  // b.any
    42c0:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    42c4:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    42c8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    42cc:	add	x3, x3, #0x5a4
    42d0:	add	x1, x1, #0x513
    42d4:	add	x0, x0, #0x538
    42d8:	mov	w2, #0x2ad                 	// #685
    42dc:	b	4160 <elf_fill@@ELFUTILS_1.0+0xacc>
    42e0:	stp	x29, x30, [sp, #-176]!
    42e4:	mov	x29, sp
    42e8:	stp	x19, x20, [sp, #16]
    42ec:	mov	x19, x0
    42f0:	ldr	x20, [x0]
    42f4:	stp	x21, x22, [sp, #32]
    42f8:	stp	x23, x24, [sp, #48]
    42fc:	stp	x25, x26, [sp, #64]
    4300:	ldr	x3, [x0, #112]
    4304:	str	x27, [sp, #80]
    4308:	cbz	x20, 4358 <elf_fill@@ELFUTILS_1.0+0xcc4>
    430c:	ldp	x0, x1, [x0, #40]
    4310:	add	x0, x0, x1
    4314:	cmp	x3, x0
    4318:	b.hi	432c <elf_fill@@ELFUTILS_1.0+0xc98>  // b.pmore
    431c:	sub	x0, x0, x3
    4320:	add	x20, x20, x3
    4324:	cmp	x0, #0x3b
    4328:	b.hi	4374 <elf_fill@@ELFUTILS_1.0+0xce0>  // b.pmore
    432c:	mov	w0, #0xe                   	// #14
    4330:	mov	w23, #0xffffffff            	// #-1
    4334:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    4338:	mov	w0, w23
    433c:	ldp	x19, x20, [sp, #16]
    4340:	ldp	x21, x22, [sp, #32]
    4344:	ldp	x23, x24, [sp, #48]
    4348:	ldp	x25, x26, [sp, #64]
    434c:	ldr	x27, [sp, #80]
    4350:	ldp	x29, x30, [sp], #176
    4354:	ret
    4358:	add	x20, x0, #0xa8
    435c:	ldr	w0, [x0, #36]
    4360:	mov	x1, x20
    4364:	mov	x2, #0x3c                  	// #60
    4368:	bl	36a0 <elf_fill@@ELFUTILS_1.0+0xc>
    436c:	cmp	x0, #0x3c
    4370:	b.ne	432c <elf_fill@@ELFUTILS_1.0+0xc98>  // b.any
    4374:	add	x0, x20, #0x3a
    4378:	mov	x2, #0x2                   	// #2
    437c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4380:	add	x1, x1, #0x552
    4384:	bl	3210 <memcmp@plt>
    4388:	mov	w23, w0
    438c:	cbz	w0, 4398 <elf_fill@@ELFUTILS_1.0+0xd04>
    4390:	mov	w0, #0xf                   	// #15
    4394:	b	4330 <elf_fill@@ELFUTILS_1.0+0xc9c>
    4398:	add	x0, x19, #0xf4
    439c:	ldp	x2, x3, [x20]
    43a0:	stp	x2, x3, [x0]
    43a4:	strb	wzr, [x19, #260]
    43a8:	ldrb	w22, [x20]
    43ac:	cmp	w22, #0x2f
    43b0:	b.ne	4734 <elf_fill@@ELFUTILS_1.0+0x10a0>  // b.any
    43b4:	ldrb	w21, [x20, #1]
    43b8:	cmp	w21, #0x20
    43bc:	b.ne	44f8 <elf_fill@@ELFUTILS_1.0+0xe64>  // b.any
    43c0:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    43c4:	mov	x0, x20
    43c8:	add	x1, x1, #0x555
    43cc:	mov	x2, #0x10                  	// #16
    43d0:	bl	3210 <memcmp@plt>
    43d4:	cbnz	w0, 4578 <elf_fill@@ELFUTILS_1.0+0xee4>
    43d8:	add	x0, x19, #0xe4
    43dc:	strh	w22, [x19, #228]
    43e0:	str	x0, [x19, #120]
    43e4:	ldrb	w0, [x20, #48]
    43e8:	cmp	w0, #0x20
    43ec:	b.eq	4710 <elf_fill@@ELFUTILS_1.0+0x107c>  // b.none
    43f0:	ldrb	w1, [x20, #27]
    43f4:	add	x0, x20, #0x10
    43f8:	cmp	w1, #0x20
    43fc:	b.eq	4418 <elf_fill@@ELFUTILS_1.0+0xd84>  // b.none
    4400:	ldr	x1, [x20, #16]
    4404:	str	x1, [sp, #112]
    4408:	ldr	w0, [x0, #8]
    440c:	str	w0, [sp, #120]
    4410:	add	x0, sp, #0x70
    4414:	strb	wzr, [sp, #124]
    4418:	add	x21, x19, #0x78
    441c:	bl	31e0 <atol@plt>
    4420:	str	x0, [x21, #8]
    4424:	add	x0, x20, #0x1c
    4428:	ldrb	w1, [x20, #33]
    442c:	cmp	w1, #0x20
    4430:	b.eq	444c <elf_fill@@ELFUTILS_1.0+0xdb8>  // b.none
    4434:	ldr	w1, [x20, #28]
    4438:	str	w1, [sp, #112]
    443c:	ldrh	w0, [x0, #4]
    4440:	strh	w0, [sp, #116]
    4444:	add	x0, sp, #0x70
    4448:	strb	wzr, [sp, #118]
    444c:	bl	31e0 <atol@plt>
    4450:	str	w0, [x21, #16]
    4454:	add	x0, x20, #0x22
    4458:	ldrb	w1, [x20, #39]
    445c:	cmp	w1, #0x20
    4460:	b.eq	447c <elf_fill@@ELFUTILS_1.0+0xde8>  // b.none
    4464:	ldur	w1, [x20, #34]
    4468:	str	w1, [sp, #112]
    446c:	ldrh	w0, [x0, #4]
    4470:	strh	w0, [sp, #116]
    4474:	add	x0, sp, #0x70
    4478:	strb	wzr, [sp, #118]
    447c:	bl	31e0 <atol@plt>
    4480:	str	w0, [x21, #20]
    4484:	ldrb	w0, [x20, #47]
    4488:	cmp	w0, #0x20
    448c:	b.ne	4780 <elf_fill@@ELFUTILS_1.0+0x10ec>  // b.any
    4490:	add	x0, x20, #0x28
    4494:	bl	31e0 <atol@plt>
    4498:	str	w0, [x21, #24]
    449c:	add	x0, x20, #0x30
    44a0:	ldrb	w1, [x20, #57]
    44a4:	cmp	w1, #0x20
    44a8:	b.eq	44c4 <elf_fill@@ELFUTILS_1.0+0xe30>  // b.none
    44ac:	ldr	x1, [x20, #48]
    44b0:	str	x1, [sp, #112]
    44b4:	ldrh	w0, [x0, #8]
    44b8:	strh	w0, [sp, #120]
    44bc:	add	x0, sp, #0x70
    44c0:	strb	wzr, [sp, #122]
    44c4:	bl	31e0 <atol@plt>
    44c8:	str	x0, [x21, #32]
    44cc:	tbnz	x0, #63, 4710 <elf_fill@@ELFUTILS_1.0+0x107c>
    44d0:	ldr	x1, [x19, #40]
    44d4:	ldr	x2, [x19, #112]
    44d8:	sub	x1, x1, x2
    44dc:	ldr	x2, [x19, #48]
    44e0:	sub	x2, x2, #0x3c
    44e4:	add	x1, x1, x2
    44e8:	cmp	x0, x1
    44ec:	b.ls	4338 <elf_fill@@ELFUTILS_1.0+0xca4>  // b.plast
    44f0:	str	x1, [x21, #32]
    44f4:	b	4338 <elf_fill@@ELFUTILS_1.0+0xca4>
    44f8:	cmp	w21, #0x53
    44fc:	b.ne	4534 <elf_fill@@ELFUTILS_1.0+0xea0>  // b.any
    4500:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4504:	mov	x0, x20
    4508:	add	x1, x1, #0x566
    450c:	mov	x2, #0x10                  	// #16
    4510:	bl	3210 <memcmp@plt>
    4514:	cbnz	w0, 4578 <elf_fill@@ELFUTILS_1.0+0xee4>
    4518:	mov	x1, #0x532f                	// #21295
    451c:	add	x0, x19, #0xe4
    4520:	movk	x1, #0x4d59, lsl #16
    4524:	movk	x1, #0x3436, lsl #32
    4528:	movk	x1, #0x2f, lsl #48
    452c:	stur	x1, [x19, #228]
    4530:	b	43e0 <elf_fill@@ELFUTILS_1.0+0xd4c>
    4534:	cmp	w21, #0x2f
    4538:	b.ne	4578 <elf_fill@@ELFUTILS_1.0+0xee4>  // b.any
    453c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4540:	mov	x0, x20
    4544:	add	x1, x1, #0x577
    4548:	mov	x2, #0x10                  	// #16
    454c:	bl	3210 <memcmp@plt>
    4550:	cbnz	w0, 4578 <elf_fill@@ELFUTILS_1.0+0xee4>
    4554:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4558:	add	x0, x0, #0x588
    455c:	add	x1, x19, #0xe4
    4560:	str	x1, [x19, #120]
    4564:	ldrh	w2, [x0]
    4568:	ldrb	w0, [x0, #2]
    456c:	strh	w2, [x19, #228]
    4570:	strb	w0, [x19, #230]
    4574:	b	43e4 <elf_fill@@ELFUTILS_1.0+0xd50>
    4578:	bl	3230 <__ctype_b_loc@plt>
    457c:	ubfiz	x21, x21, #1, #8
    4580:	ldr	x0, [x0]
    4584:	ldrh	w0, [x0, x21]
    4588:	tbz	w0, #11, 4710 <elf_fill@@ELFUTILS_1.0+0x107c>
    458c:	ldr	x0, [x19, #96]
    4590:	cbnz	x0, 46c0 <elf_fill@@ELFUTILS_1.0+0x102c>
    4594:	adrp	x22, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4598:	add	x25, sp, #0x70
    459c:	add	x27, sp, #0x60
    45a0:	add	x22, x22, #0x577
    45a4:	mov	x24, #0x8                   	// #8
    45a8:	ldr	x26, [x19]
    45ac:	cbz	x26, 4624 <elf_fill@@ELFUTILS_1.0+0xf90>
    45b0:	ldr	x0, [x19, #48]
    45b4:	cmp	x0, x24
    45b8:	b.cc	4710 <elf_fill@@ELFUTILS_1.0+0x107c>  // b.lo, b.ul, b.last
    45bc:	sub	x0, x0, x24
    45c0:	cmp	x0, #0x3b
    45c4:	b.ls	4710 <elf_fill@@ELFUTILS_1.0+0x107c>  // b.plast
    45c8:	add	x26, x26, x24
    45cc:	ldrb	w1, [x26, #57]
    45d0:	add	x0, x26, #0x30
    45d4:	cmp	w1, #0x20
    45d8:	b.eq	45f4 <elf_fill@@ELFUTILS_1.0+0xf60>  // b.none
    45dc:	ldr	x1, [x26, #48]
    45e0:	str	x1, [x27]
    45e4:	ldrh	w0, [x0, #8]
    45e8:	strh	w0, [x27, #8]
    45ec:	mov	x0, x27
    45f0:	strb	wzr, [x27, #10]
    45f4:	bl	31e0 <atol@plt>
    45f8:	mov	x21, x0
    45fc:	mov	x1, x22
    4600:	mov	x0, x26
    4604:	mov	x2, #0x10                  	// #16
    4608:	bl	3210 <memcmp@plt>
    460c:	cbz	w0, 464c <elf_fill@@ELFUTILS_1.0+0xfb8>
    4610:	add	x21, x21, #0x1
    4614:	add	x24, x24, #0x3c
    4618:	and	x21, x21, #0xfffffffffffffffe
    461c:	add	x24, x21, x24
    4620:	b	45a8 <elf_fill@@ELFUTILS_1.0+0xf14>
    4624:	ldr	w0, [x19, #36]
    4628:	mov	x1, x25
    462c:	ldr	x3, [x19, #40]
    4630:	mov	x2, #0x3c                  	// #60
    4634:	add	x3, x24, x3
    4638:	bl	36a0 <elf_fill@@ELFUTILS_1.0+0xc>
    463c:	cmp	x0, #0x3c
    4640:	b.ne	4710 <elf_fill@@ELFUTILS_1.0+0x107c>  // b.any
    4644:	mov	x26, x25
    4648:	b	45cc <elf_fill@@ELFUTILS_1.0+0xf38>
    464c:	ldr	x25, [x19]
    4650:	cbz	x25, 4668 <elf_fill@@ELFUTILS_1.0+0xfd4>
    4654:	ldr	x0, [x19, #48]
    4658:	sub	x0, x0, #0x3c
    465c:	sub	x0, x0, x24
    4660:	cmp	x21, x0
    4664:	b.hi	4710 <elf_fill@@ELFUTILS_1.0+0x107c>  // b.pmore
    4668:	mov	x0, x21
    466c:	bl	3100 <malloc@plt>
    4670:	mov	x22, x0
    4674:	cbz	x0, 4710 <elf_fill@@ELFUTILS_1.0+0x107c>
    4678:	cbz	x25, 46e0 <elf_fill@@ELFUTILS_1.0+0x104c>
    467c:	add	x1, x24, #0x3c
    4680:	mov	x2, x21
    4684:	add	x1, x25, x1
    4688:	bl	3060 <memcpy@plt>
    468c:	str	x0, [x19, #96]
    4690:	str	x21, [x19, #104]
    4694:	add	x21, x22, x21
    4698:	sub	x24, x21, x22
    469c:	mov	x0, x22
    46a0:	mov	x2, x24
    46a4:	mov	w1, #0x2f                  	// #47
    46a8:	bl	3310 <memchr@plt>
    46ac:	cbnz	x0, 4720 <elf_fill@@ELFUTILS_1.0+0x108c>
    46b0:	mov	x2, x24
    46b4:	mov	x0, x22
    46b8:	mov	w1, #0x0                   	// #0
    46bc:	bl	3140 <memset@plt>
    46c0:	add	x0, x20, #0x1
    46c4:	bl	31e0 <atol@plt>
    46c8:	ldr	x1, [x19, #104]
    46cc:	cmp	x1, x0
    46d0:	b.ls	4710 <elf_fill@@ELFUTILS_1.0+0x107c>  // b.plast
    46d4:	ldr	x1, [x19, #96]
    46d8:	add	x0, x1, x0
    46dc:	b	43e0 <elf_fill@@ELFUTILS_1.0+0xd4c>
    46e0:	mov	x1, x0
    46e4:	ldr	w0, [x19, #36]
    46e8:	ldr	x3, [x19, #40]
    46ec:	mov	x2, x21
    46f0:	add	x3, x24, x3
    46f4:	add	x3, x3, #0x3c
    46f8:	bl	36a0 <elf_fill@@ELFUTILS_1.0+0xc>
    46fc:	cmp	x21, x0
    4700:	b.eq	4718 <elf_fill@@ELFUTILS_1.0+0x1084>  // b.none
    4704:	mov	x0, x22
    4708:	bl	3250 <free@plt>
    470c:	str	xzr, [x19, #96]
    4710:	mov	w0, #0x10                  	// #16
    4714:	b	4330 <elf_fill@@ELFUTILS_1.0+0xc9c>
    4718:	str	x22, [x19, #96]
    471c:	b	4690 <elf_fill@@ELFUTILS_1.0+0xffc>
    4720:	mov	x22, x0
    4724:	strb	wzr, [x22], #1
    4728:	cmp	x21, x22
    472c:	b.hi	4698 <elf_fill@@ELFUTILS_1.0+0x1004>  // b.pmore
    4730:	b	46c0 <elf_fill@@ELFUTILS_1.0+0x102c>
    4734:	add	x21, x19, #0xe4
    4738:	mov	x1, x20
    473c:	mov	x0, x21
    4740:	mov	x3, #0x10                  	// #16
    4744:	mov	w2, #0x2f                  	// #47
    4748:	bl	30a0 <memccpy@plt>
    474c:	cbz	x0, 475c <elf_fill@@ELFUTILS_1.0+0x10c8>
    4750:	sturb	wzr, [x0, #-1]
    4754:	str	x21, [x19, #120]
    4758:	b	43e4 <elf_fill@@ELFUTILS_1.0+0xd50>
    475c:	add	x0, x19, #0xf2
    4760:	add	x2, x19, #0xe3
    4764:	strb	wzr, [x0, #1]
    4768:	cmp	x2, x0
    476c:	b.eq	4754 <elf_fill@@ELFUTILS_1.0+0x10c0>  // b.none
    4770:	ldrb	w1, [x0], #-1
    4774:	cmp	w1, #0x20
    4778:	b.eq	4764 <elf_fill@@ELFUTILS_1.0+0x10d0>  // b.none
    477c:	b	4754 <elf_fill@@ELFUTILS_1.0+0x10c0>
    4780:	ldr	x0, [x20, #40]
    4784:	str	x0, [sp, #112]
    4788:	add	x0, sp, #0x70
    478c:	strb	wzr, [sp, #120]
    4790:	b	4494 <elf_fill@@ELFUTILS_1.0+0xe00>
    4794:	stp	x29, x30, [sp, #-48]!
    4798:	cmn	w0, #0x1
    479c:	mov	x29, sp
    47a0:	stp	x19, x20, [sp, #16]
    47a4:	mov	x19, x2
    47a8:	stp	x21, x22, [sp, #32]
    47ac:	mov	w21, w0
    47b0:	mov	w22, w1
    47b4:	ldr	w0, [x2, #36]
    47b8:	b.eq	47ec <elf_fill@@ELFUTILS_1.0+0x1158>  // b.none
    47bc:	cmn	w0, #0x1
    47c0:	b.eq	47f0 <elf_fill@@ELFUTILS_1.0+0x115c>  // b.none
    47c4:	cmp	w0, w21
    47c8:	b.eq	47f0 <elf_fill@@ELFUTILS_1.0+0x115c>  // b.none
    47cc:	mov	w0, #0x1c                  	// #28
    47d0:	mov	x20, #0x0                   	// #0
    47d4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    47d8:	mov	x0, x20
    47dc:	ldp	x19, x20, [sp, #16]
    47e0:	ldp	x21, x22, [sp, #32]
    47e4:	ldp	x29, x30, [sp], #48
    47e8:	ret
    47ec:	mov	w21, w0
    47f0:	ldr	w0, [x19, #28]
    47f4:	sub	w1, w0, #0x1
    47f8:	sub	w0, w0, #0x8
    47fc:	cmp	w1, #0x2
    4800:	ccmp	w0, #0x3, #0x0, hi  // hi = pmore
    4804:	b.ls	4810 <elf_fill@@ELFUTILS_1.0+0x117c>  // b.plast
    4808:	mov	w0, #0xb                   	// #11
    480c:	b	47d0 <elf_fill@@ELFUTILS_1.0+0x113c>
    4810:	ldr	w0, [x19, #24]
    4814:	cmp	w0, #0x1
    4818:	b.eq	4830 <elf_fill@@ELFUTILS_1.0+0x119c>  // b.none
    481c:	ldr	w0, [x19, #60]
    4820:	mov	x20, x19
    4824:	add	w0, w0, #0x1
    4828:	str	w0, [x19, #60]
    482c:	b	47d8 <elf_fill@@ELFUTILS_1.0+0x1144>
    4830:	ldr	x20, [x19, #120]
    4834:	cbz	x20, 486c <elf_fill@@ELFUTILS_1.0+0x11d8>
    4838:	ldr	x2, [x19, #152]
    483c:	mov	x4, x19
    4840:	ldr	x1, [x19, #112]
    4844:	mov	w3, w22
    4848:	mov	w0, w21
    484c:	add	x1, x1, #0x3c
    4850:	bl	4078 <elf_fill@@ELFUTILS_1.0+0x9e4>
    4854:	mov	x20, x0
    4858:	cbz	x0, 47d8 <elf_fill@@ELFUTILS_1.0+0x1144>
    485c:	ldr	x0, [x19, #72]
    4860:	str	x0, [x20, #16]
    4864:	str	x20, [x19, #72]
    4868:	b	47d8 <elf_fill@@ELFUTILS_1.0+0x1144>
    486c:	mov	x0, x19
    4870:	bl	42e0 <elf_fill@@ELFUTILS_1.0+0xc4c>
    4874:	cbz	w0, 4838 <elf_fill@@ELFUTILS_1.0+0x11a4>
    4878:	b	47d8 <elf_fill@@ELFUTILS_1.0+0x1144>

000000000000487c <elf_begin@@ELFUTILS_1.0>:
    487c:	stp	x29, x30, [sp, #-48]!
    4880:	mov	x29, sp
    4884:	stp	x19, x20, [sp, #16]
    4888:	mov	w20, w1
    488c:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    4890:	str	x21, [sp, #32]
    4894:	ldr	w1, [x1, #444]
    4898:	cmp	w1, #0x1
    489c:	b.eq	48b0 <elf_begin@@ELFUTILS_1.0+0x34>  // b.none
    48a0:	mov	w0, #0xc                   	// #12
    48a4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    48a8:	mov	x19, #0x0                   	// #0
    48ac:	b	48dc <elf_begin@@ELFUTILS_1.0+0x60>
    48b0:	mov	w21, w0
    48b4:	mov	x19, x2
    48b8:	cbnz	x2, 49b0 <elf_begin@@ELFUTILS_1.0+0x134>
    48bc:	bl	32d0 <fcntl@plt>
    48c0:	cmn	w0, #0x1
    48c4:	b.ne	49d0 <elf_begin@@ELFUTILS_1.0+0x154>  // b.any
    48c8:	bl	3390 <__errno_location@plt>
    48cc:	ldr	w0, [x0]
    48d0:	cmp	w0, #0x9
    48d4:	b.ne	49d0 <elf_begin@@ELFUTILS_1.0+0x154>  // b.any
    48d8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    48dc:	mov	x0, x19
    48e0:	ldp	x19, x20, [sp, #16]
    48e4:	ldr	x21, [sp, #32]
    48e8:	ldp	x29, x30, [sp], #48
    48ec:	ret
    48f0:	cbz	x19, 4920 <elf_begin@@ELFUTILS_1.0+0xa4>
    48f4:	ldr	w0, [x19, #28]
    48f8:	cmp	w0, #0xb
    48fc:	b.ne	495c <elf_begin@@ELFUTILS_1.0+0xe0>  // b.any
    4900:	mov	x2, x19
    4904:	mov	w1, w20
    4908:	mov	w0, w21
    490c:	ldp	x19, x20, [sp, #16]
    4910:	ldr	x21, [sp, #32]
    4914:	ldp	x29, x30, [sp], #48
    4918:	b	4794 <elf_fill@@ELFUTILS_1.0+0x1100>
    491c:	cbnz	x19, 4900 <elf_begin@@ELFUTILS_1.0+0x84>
    4920:	mov	w3, w20
    4924:	mov	w0, w21
    4928:	ldp	x19, x20, [sp, #16]
    492c:	mov	x4, #0x0                   	// #0
    4930:	ldr	x21, [sp, #32]
    4934:	mov	x2, #0xffffffffffffffff    	// #-1
    4938:	ldp	x29, x30, [sp], #48
    493c:	mov	x1, #0x0                   	// #0
    4940:	b	4078 <elf_fill@@ELFUTILS_1.0+0x9e4>
    4944:	ldr	w0, [x19, #28]
    4948:	sub	w1, w0, #0x9
    494c:	sub	w0, w0, #0x2
    4950:	cmp	w1, #0x1
    4954:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    4958:	b.ls	4900 <elf_begin@@ELFUTILS_1.0+0x84>  // b.plast
    495c:	mov	w0, #0xd                   	// #13
    4960:	b	48a4 <elf_begin@@ELFUTILS_1.0+0x28>
    4964:	mov	w4, w20
    4968:	mov	w0, w21
    496c:	mov	x7, #0x820                 	// #2080
    4970:	mov	w6, #0x3                   	// #3
    4974:	mov	x5, #0x0                   	// #0
    4978:	mov	x3, #0x0                   	// #0
    497c:	mov	x2, #0x0                   	// #0
    4980:	mov	x1, #0x0                   	// #0
    4984:	bl	3738 <elf_fill@@ELFUTILS_1.0+0xa4>
    4988:	mov	x19, x0
    498c:	cbz	x0, 48dc <elf_begin@@ELFUTILS_1.0+0x60>
    4990:	mov	w0, #0x1                   	// #1
    4994:	add	x1, x19, #0xc8
    4998:	str	w0, [x19, #56]
    499c:	mov	w0, #0xa                   	// #10
    49a0:	str	x1, [x19, #96]
    49a4:	str	w0, [x19, #112]
    49a8:	str	w0, [x19, #204]
    49ac:	b	48dc <elf_begin@@ELFUTILS_1.0+0x60>
    49b0:	cmp	w20, #0xb
    49b4:	b.hi	495c <elf_begin@@ELFUTILS_1.0+0xe0>  // b.pmore
    49b8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    49bc:	add	x0, x0, #0x58c
    49c0:	ldrb	w0, [x0, w20, uxtw]
    49c4:	adr	x1, 49d0 <elf_begin@@ELFUTILS_1.0+0x154>
    49c8:	add	x0, x1, w0, sxtb #2
    49cc:	br	x0
    49d0:	cmp	w20, #0xb
    49d4:	b.hi	495c <elf_begin@@ELFUTILS_1.0+0xe0>  // b.pmore
    49d8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    49dc:	add	x0, x0, #0x598
    49e0:	ldrb	w0, [x0, w20, uxtw]
    49e4:	adr	x1, 49f0 <elf_next@@ELFUTILS_1.0>
    49e8:	add	x0, x1, w0, sxtb #2
    49ec:	br	x0

00000000000049f0 <elf_next@@ELFUTILS_1.0>:
    49f0:	cbz	x0, 4a7c <elf_next@@ELFUTILS_1.0+0x8c>
    49f4:	stp	x29, x30, [sp, #-32]!
    49f8:	mov	x29, sp
    49fc:	stp	x19, x20, [sp, #16]
    4a00:	mov	x20, x0
    4a04:	ldr	x19, [x0, #8]
    4a08:	cbz	x19, 4a6c <elf_next@@ELFUTILS_1.0+0x7c>
    4a0c:	ldr	w0, [x19, #24]
    4a10:	cmp	w0, #0x1
    4a14:	b.eq	4a38 <elf_next@@ELFUTILS_1.0+0x48>  // b.none
    4a18:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4a1c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4a20:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4a24:	add	x3, x3, #0x5d2
    4a28:	add	x1, x1, #0x5ae
    4a2c:	add	x0, x0, #0x5b9
    4a30:	mov	w2, #0x35                  	// #53
    4a34:	bl	3380 <__assert_fail@plt>
    4a38:	ldr	x1, [x19, #152]
    4a3c:	ldr	x0, [x19, #112]
    4a40:	add	x1, x1, #0x1
    4a44:	and	x1, x1, #0xfffffffffffffffe
    4a48:	add	x0, x0, #0x3c
    4a4c:	add	x1, x1, x0
    4a50:	str	x1, [x19, #112]
    4a54:	mov	x0, x19
    4a58:	bl	42e0 <elf_fill@@ELFUTILS_1.0+0xc4c>
    4a5c:	cbnz	w0, 4a68 <elf_next@@ELFUTILS_1.0+0x78>
    4a60:	ldr	w0, [x20, #28]
    4a64:	cbnz	w0, 4a70 <elf_next@@ELFUTILS_1.0+0x80>
    4a68:	str	xzr, [x19, #120]
    4a6c:	mov	w0, #0x0                   	// #0
    4a70:	ldp	x19, x20, [sp, #16]
    4a74:	ldp	x29, x30, [sp], #32
    4a78:	ret
    4a7c:	mov	w0, #0x0                   	// #0
    4a80:	ret

0000000000004a84 <elf_rand@@ELFUTILS_1.0>:
    4a84:	stp	x29, x30, [sp, #-32]!
    4a88:	mov	x29, sp
    4a8c:	stp	x19, x20, [sp, #16]
    4a90:	cbz	x0, 4ac0 <elf_rand@@ELFUTILS_1.0+0x3c>
    4a94:	mov	x19, x1
    4a98:	ldr	w1, [x0, #24]
    4a9c:	mov	x20, x0
    4aa0:	cmp	w1, #0x1
    4aa4:	b.ne	4ac0 <elf_rand@@ELFUTILS_1.0+0x3c>  // b.any
    4aa8:	ldr	x1, [x0, #40]
    4aac:	add	x1, x1, x19
    4ab0:	str	x1, [x0, #112]
    4ab4:	bl	42e0 <elf_fill@@ELFUTILS_1.0+0xc4c>
    4ab8:	cbz	w0, 4ac4 <elf_rand@@ELFUTILS_1.0+0x40>
    4abc:	str	xzr, [x20, #120]
    4ac0:	mov	x19, #0x0                   	// #0
    4ac4:	mov	x0, x19
    4ac8:	ldp	x19, x20, [sp, #16]
    4acc:	ldp	x29, x30, [sp], #32
    4ad0:	ret

0000000000004ad4 <elf_end@@ELFUTILS_1.0>:
    4ad4:	stp	x29, x30, [sp, #-80]!
    4ad8:	mov	x29, sp
    4adc:	stp	x19, x20, [sp, #16]
    4ae0:	mov	x19, x0
    4ae4:	stp	x21, x22, [sp, #32]
    4ae8:	stp	x23, x24, [sp, #48]
    4aec:	mov	w23, #0xd0                  	// #208
    4af0:	stp	x25, x26, [sp, #64]
    4af4:	cbnz	x19, 4b14 <elf_end@@ELFUTILS_1.0+0x40>
    4af8:	mov	w0, #0x0                   	// #0
    4afc:	ldp	x19, x20, [sp, #16]
    4b00:	ldp	x21, x22, [sp, #32]
    4b04:	ldp	x23, x24, [sp, #48]
    4b08:	ldp	x25, x26, [sp, #64]
    4b0c:	ldp	x29, x30, [sp], #80
    4b10:	ret
    4b14:	ldr	w0, [x19, #60]
    4b18:	cbnz	w0, 4b94 <elf_end@@ELFUTILS_1.0+0xc0>
    4b1c:	ldr	w0, [x19, #24]
    4b20:	cmp	w0, #0x1
    4b24:	b.ne	4b44 <elf_end@@ELFUTILS_1.0+0x70>  // b.any
    4b28:	ldr	x0, [x19, #80]
    4b2c:	cmn	x0, #0x1
    4b30:	b.eq	4b38 <elf_end@@ELFUTILS_1.0+0x64>  // b.none
    4b34:	bl	3250 <free@plt>
    4b38:	ldr	x0, [x19, #72]
    4b3c:	str	xzr, [x19, #80]
    4b40:	cbnz	x0, 4af8 <elf_end@@ELFUTILS_1.0+0x24>
    4b44:	ldr	x22, [x19, #8]
    4b48:	cbnz	x22, 4ba4 <elf_end@@ELFUTILS_1.0+0xd0>
    4b4c:	ldr	w0, [x19, #24]
    4b50:	cmp	w0, #0x1
    4b54:	b.eq	4bd4 <elf_end@@ELFUTILS_1.0+0x100>  // b.none
    4b58:	cmp	w0, #0x3
    4b5c:	b.eq	4be4 <elf_end@@ELFUTILS_1.0+0x110>  // b.none
    4b60:	ldr	x0, [x19]
    4b64:	cbz	x0, 4b78 <elf_end@@ELFUTILS_1.0+0xa4>
    4b68:	cbnz	x22, 4b78 <elf_end@@ELFUTILS_1.0+0xa4>
    4b6c:	ldr	w1, [x19, #56]
    4b70:	tbz	w1, #7, 4cec <elf_end@@ELFUTILS_1.0+0x218>
    4b74:	bl	3250 <free@plt>
    4b78:	mov	x0, x19
    4b7c:	bl	3250 <free@plt>
    4b80:	cbz	x22, 4af8 <elf_end@@ELFUTILS_1.0+0x24>
    4b84:	ldr	w0, [x22, #60]
    4b88:	cbnz	w0, 4af8 <elf_end@@ELFUTILS_1.0+0x24>
    4b8c:	mov	x19, x22
    4b90:	b	4af4 <elf_end@@ELFUTILS_1.0+0x20>
    4b94:	sub	w0, w0, #0x1
    4b98:	str	w0, [x19, #60]
    4b9c:	cbz	w0, 4b1c <elf_end@@ELFUTILS_1.0+0x48>
    4ba0:	b	4afc <elf_end@@ELFUTILS_1.0+0x28>
    4ba4:	ldr	x0, [x22, #72]
    4ba8:	ldr	x1, [x19, #16]
    4bac:	cmp	x0, x19
    4bb0:	b.ne	4bbc <elf_end@@ELFUTILS_1.0+0xe8>  // b.any
    4bb4:	str	x1, [x22, #72]
    4bb8:	b	4b4c <elf_end@@ELFUTILS_1.0+0x78>
    4bbc:	mov	x2, x0
    4bc0:	ldr	x0, [x0, #16]
    4bc4:	cmp	x0, x19
    4bc8:	b.ne	4bbc <elf_end@@ELFUTILS_1.0+0xe8>  // b.any
    4bcc:	str	x1, [x2, #16]
    4bd0:	b	4b4c <elf_end@@ELFUTILS_1.0+0x78>
    4bd4:	ldr	x0, [x19, #96]
    4bd8:	cbz	x0, 4b60 <elf_end@@ELFUTILS_1.0+0x8c>
    4bdc:	bl	3250 <free@plt>
    4be0:	b	4b60 <elf_end@@ELFUTILS_1.0+0x8c>
    4be4:	ldr	x20, [x19, #104]
    4be8:	cbnz	x20, 4c40 <elf_end@@ELFUTILS_1.0+0x16c>
    4bec:	add	x24, x19, #0xc8
    4bf0:	mov	x21, x24
    4bf4:	ldr	w20, [x21, #4]
    4bf8:	mov	w25, w20
    4bfc:	umaddl	x20, w20, w23, x21
    4c00:	sub	x25, x25, #0x1
    4c04:	cmn	x25, #0x1
    4c08:	b.ne	4c6c <elf_end@@ELFUTILS_1.0+0x198>  // b.any
    4c0c:	ldr	x20, [x21, #8]
    4c10:	cbz	x20, 4d30 <elf_end@@ELFUTILS_1.0+0x25c>
    4c14:	ldp	w1, w0, [x21]
    4c18:	cmp	w1, w0
    4c1c:	b.eq	4cfc <elf_end@@ELFUTILS_1.0+0x228>  // b.none
    4c20:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4c24:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4c28:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4c2c:	add	x3, x3, #0x60c
    4c30:	add	x1, x1, #0x5db
    4c34:	add	x0, x0, #0x5e5
    4c38:	mov	w2, #0xbd                  	// #189
    4c3c:	bl	3380 <__assert_fail@plt>
    4c40:	ldr	w0, [x20, #204]
    4c44:	ldr	x21, [x20, #48]
    4c48:	tbz	w0, #7, 4c54 <elf_end@@ELFUTILS_1.0+0x180>
    4c4c:	ldr	x0, [x20]
    4c50:	bl	3250 <free@plt>
    4c54:	mov	x0, x20
    4c58:	mov	x20, x21
    4c5c:	bl	3250 <free@plt>
    4c60:	b	4be8 <elf_end@@ELFUTILS_1.0+0x114>
    4c64:	mov	x21, x20
    4c68:	b	4bf4 <elf_end@@ELFUTILS_1.0+0x120>
    4c6c:	ldur	w0, [x20, #-40]
    4c70:	tbz	w0, #7, 4c7c <elf_end@@ELFUTILS_1.0+0x1a8>
    4c74:	ldur	x0, [x20, #-48]
    4c78:	bl	3250 <free@plt>
    4c7c:	ldur	x1, [x20, #-32]
    4c80:	ldur	x0, [x20, #-16]
    4c84:	cmp	x0, x1
    4c88:	b.eq	4c90 <elf_end@@ELFUTILS_1.0+0x1bc>  // b.none
    4c8c:	bl	3250 <free@plt>
    4c90:	ldp	x1, x0, [x20, #-32]
    4c94:	cmp	x0, x1
    4c98:	b.eq	4ca0 <elf_end@@ELFUTILS_1.0+0x1cc>  // b.none
    4c9c:	bl	3250 <free@plt>
    4ca0:	ldr	x1, [x19]
    4ca4:	ldur	x0, [x20, #-32]
    4ca8:	cbz	x1, 4cc0 <elf_end@@ELFUTILS_1.0+0x1ec>
    4cac:	ldur	x1, [x20, #-16]
    4cb0:	cmp	x1, x0
    4cb4:	b.eq	4cc0 <elf_end@@ELFUTILS_1.0+0x1ec>  // b.none
    4cb8:	ldur	w1, [x20, #-36]
    4cbc:	tbz	w1, #7, 4cc4 <elf_end@@ELFUTILS_1.0+0x1f0>
    4cc0:	bl	3250 <free@plt>
    4cc4:	ldur	x0, [x20, #-144]
    4cc8:	cbnz	x0, 4cd4 <elf_end@@ELFUTILS_1.0+0x200>
    4ccc:	sub	x20, x20, #0xd0
    4cd0:	b	4c00 <elf_end@@ELFUTILS_1.0+0x12c>
    4cd4:	ldr	w1, [x0, #56]
    4cd8:	ldr	x26, [x0, #48]
    4cdc:	tbz	w1, #7, 4ce4 <elf_end@@ELFUTILS_1.0+0x210>
    4ce0:	bl	3250 <free@plt>
    4ce4:	mov	x0, x26
    4ce8:	b	4cc8 <elf_end@@ELFUTILS_1.0+0x1f4>
    4cec:	tbz	w1, #6, 4b78 <elf_end@@ELFUTILS_1.0+0xa4>
    4cf0:	ldr	x1, [x19, #48]
    4cf4:	bl	32f0 <munmap@plt>
    4cf8:	b	4b78 <elf_end@@ELFUTILS_1.0+0xa4>
    4cfc:	cmp	x21, x24
    4d00:	b.eq	4c64 <elf_end@@ELFUTILS_1.0+0x190>  // b.none
    4d04:	mov	x0, x21
    4d08:	bl	3250 <free@plt>
    4d0c:	cbnz	x20, 4c64 <elf_end@@ELFUTILS_1.0+0x190>
    4d10:	ldr	w0, [x19, #124]
    4d14:	cbz	w0, 4d20 <elf_end@@ELFUTILS_1.0+0x24c>
    4d18:	ldr	x0, [x19, #80]
    4d1c:	bl	3250 <free@plt>
    4d20:	ldr	w0, [x19, #120]
    4d24:	tbz	w0, #7, 4b60 <elf_end@@ELFUTILS_1.0+0x8c>
    4d28:	ldr	x0, [x19, #88]
    4d2c:	b	4bdc <elf_end@@ELFUTILS_1.0+0x108>
    4d30:	cmp	x21, x24
    4d34:	b.ne	4d04 <elf_end@@ELFUTILS_1.0+0x230>  // b.any
    4d38:	b	4d10 <elf_end@@ELFUTILS_1.0+0x23c>

0000000000004d3c <elf_kind@@ELFUTILS_1.0>:
    4d3c:	cbz	x0, 4d48 <elf_kind@@ELFUTILS_1.0+0xc>
    4d40:	ldr	w0, [x0, #24]
    4d44:	ret
    4d48:	mov	w0, #0x0                   	// #0
    4d4c:	b	4d44 <elf_kind@@ELFUTILS_1.0+0x8>

0000000000004d50 <gelf_getclass@@ELFUTILS_1.0>:
    4d50:	cbz	x0, 4d68 <gelf_getclass@@ELFUTILS_1.0+0x18>
    4d54:	ldr	w1, [x0, #24]
    4d58:	cmp	w1, #0x3
    4d5c:	b.ne	4d68 <gelf_getclass@@ELFUTILS_1.0+0x18>  // b.any
    4d60:	ldr	w0, [x0, #32]
    4d64:	ret
    4d68:	mov	w0, #0x0                   	// #0
    4d6c:	b	4d64 <gelf_getclass@@ELFUTILS_1.0+0x14>

0000000000004d70 <elf_getbase@@ELFUTILS_1.0>:
    4d70:	cbz	x0, 4d7c <elf_getbase@@ELFUTILS_1.0+0xc>
    4d74:	ldr	x0, [x0, #40]
    4d78:	ret
    4d7c:	mov	x0, #0xffffffffffffffff    	// #-1
    4d80:	b	4d78 <elf_getbase@@ELFUTILS_1.0+0x8>

0000000000004d84 <elf_getident@@ELFUTILS_1.0>:
    4d84:	mov	x2, x0
    4d88:	mov	x0, x1
    4d8c:	cbz	x2, 4d9c <elf_getident@@ELFUTILS_1.0+0x18>
    4d90:	ldr	w1, [x2, #24]
    4d94:	cmp	w1, #0x3
    4d98:	b.eq	4dac <elf_getident@@ELFUTILS_1.0+0x28>  // b.none
    4d9c:	cbz	x0, 4da8 <elf_getident@@ELFUTILS_1.0+0x24>
    4da0:	str	xzr, [x0]
    4da4:	mov	x0, #0x0                   	// #0
    4da8:	ret
    4dac:	cbz	x0, 4db8 <elf_getident@@ELFUTILS_1.0+0x34>
    4db0:	mov	x1, #0x10                  	// #16
    4db4:	str	x1, [x0]
    4db8:	ldr	x0, [x2, #72]
    4dbc:	b	4da8 <elf_getident@@ELFUTILS_1.0+0x24>

0000000000004dc0 <elf32_fsize@@ELFUTILS_1.0>:
    4dc0:	stp	x29, x30, [sp, #-16]!
    4dc4:	cmp	w2, #0x1
    4dc8:	mov	x29, sp
    4dcc:	b.eq	4de4 <elf32_fsize@@ELFUTILS_1.0+0x24>  // b.none
    4dd0:	mov	w0, #0x2                   	// #2
    4dd4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    4dd8:	mov	x0, #0x0                   	// #0
    4ddc:	ldp	x29, x30, [sp], #16
    4de0:	ret
    4de4:	cmp	w0, #0x1a
    4de8:	b.ls	4df4 <elf32_fsize@@ELFUTILS_1.0+0x34>  // b.plast
    4dec:	mov	w0, #0x3                   	// #3
    4df0:	b	4dd4 <elf32_fsize@@ELFUTILS_1.0+0x14>
    4df4:	adrp	x2, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4df8:	add	x2, x2, #0x618
    4dfc:	ldr	x0, [x2, w0, uxtw #3]
    4e00:	mul	x0, x1, x0
    4e04:	b	4ddc <elf32_fsize@@ELFUTILS_1.0+0x1c>

0000000000004e08 <elf64_fsize@@ELFUTILS_1.0>:
    4e08:	stp	x29, x30, [sp, #-16]!
    4e0c:	cmp	w2, #0x1
    4e10:	mov	x29, sp
    4e14:	b.eq	4e2c <elf64_fsize@@ELFUTILS_1.0+0x24>  // b.none
    4e18:	mov	w0, #0x2                   	// #2
    4e1c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    4e20:	mov	x0, #0x0                   	// #0
    4e24:	ldp	x29, x30, [sp], #16
    4e28:	ret
    4e2c:	cmp	w0, #0x1a
    4e30:	b.ls	4e3c <elf64_fsize@@ELFUTILS_1.0+0x34>  // b.plast
    4e34:	mov	w0, #0x3                   	// #3
    4e38:	b	4e1c <elf64_fsize@@ELFUTILS_1.0+0x14>
    4e3c:	adrp	x2, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4e40:	add	x2, x2, #0x618
    4e44:	add	x0, x2, w0, uxtw #3
    4e48:	ldr	x0, [x0, #216]
    4e4c:	mul	x0, x1, x0
    4e50:	b	4e24 <elf64_fsize@@ELFUTILS_1.0+0x1c>

0000000000004e54 <gelf_fsize@@ELFUTILS_1.0>:
    4e54:	cbz	x0, 4eb4 <gelf_fsize@@ELFUTILS_1.0+0x60>
    4e58:	stp	x29, x30, [sp, #-16]!
    4e5c:	cmp	w3, #0x1
    4e60:	mov	x29, sp
    4e64:	b.eq	4e7c <gelf_fsize@@ELFUTILS_1.0+0x28>  // b.none
    4e68:	mov	w0, #0x2                   	// #2
    4e6c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    4e70:	mov	x0, #0x0                   	// #0
    4e74:	ldp	x29, x30, [sp], #16
    4e78:	ret
    4e7c:	cmp	w1, #0x1a
    4e80:	b.ls	4e8c <gelf_fsize@@ELFUTILS_1.0+0x38>  // b.plast
    4e84:	mov	w0, #0x3                   	// #3
    4e88:	b	4e6c <gelf_fsize@@ELFUTILS_1.0+0x18>
    4e8c:	ldr	w0, [x0, #32]
    4e90:	mov	x3, #0x1b                  	// #27
    4e94:	sub	w0, w0, #0x1
    4e98:	mul	x0, x0, x3
    4e9c:	add	x1, x0, w1, uxtw
    4ea0:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4ea4:	add	x0, x0, #0x618
    4ea8:	ldr	x0, [x0, x1, lsl #3]
    4eac:	mul	x0, x2, x0
    4eb0:	b	4e74 <gelf_fsize@@ELFUTILS_1.0+0x20>
    4eb4:	mov	x0, #0x0                   	// #0
    4eb8:	ret

0000000000004ebc <elf32_xlatetof@@ELFUTILS_1.0>:
    4ebc:	stp	x29, x30, [sp, #-32]!
    4ec0:	mov	w3, w2
    4ec4:	mov	x29, sp
    4ec8:	ldr	w4, [x1, #8]
    4ecc:	stp	x19, x20, [sp, #16]
    4ed0:	mov	x19, x0
    4ed4:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4ed8:	add	x0, x0, #0x618
    4edc:	mov	x20, x1
    4ee0:	ldr	x2, [x1, #16]
    4ee4:	ldr	x1, [x0, x4, lsl #3]
    4ee8:	udiv	x0, x2, x1
    4eec:	msub	x0, x0, x1, x2
    4ef0:	cbz	x0, 4f10 <elf32_xlatetof@@ELFUTILS_1.0+0x54>
    4ef4:	mov	w0, #0x21                  	// #33
    4ef8:	mov	x19, #0x0                   	// #0
    4efc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    4f00:	mov	x0, x19
    4f04:	ldp	x19, x20, [sp, #16]
    4f08:	ldp	x29, x30, [sp], #32
    4f0c:	ret
    4f10:	ldr	x0, [x19, #16]
    4f14:	cmp	x2, x0
    4f18:	b.ls	4f24 <elf32_xlatetof@@ELFUTILS_1.0+0x68>  // b.plast
    4f1c:	mov	w0, #0x6                   	// #6
    4f20:	b	4ef8 <elf32_xlatetof@@ELFUTILS_1.0+0x3c>
    4f24:	sub	w0, w3, #0x1
    4f28:	cmp	w0, #0x1
    4f2c:	b.ls	4f38 <elf32_xlatetof@@ELFUTILS_1.0+0x7c>  // b.plast
    4f30:	mov	w0, #0x7                   	// #7
    4f34:	b	4ef8 <elf32_xlatetof@@ELFUTILS_1.0+0x3c>
    4f38:	cmp	w3, #0x1
    4f3c:	ldr	x0, [x19]
    4f40:	ldr	x1, [x20]
    4f44:	b.ne	4f68 <elf32_xlatetof@@ELFUTILS_1.0+0xac>  // b.any
    4f48:	cmp	x0, x1
    4f4c:	b.eq	4f54 <elf32_xlatetof@@ELFUTILS_1.0+0x98>  // b.none
    4f50:	bl	3070 <memmove@plt>
    4f54:	ldr	w0, [x20, #8]
    4f58:	str	w0, [x19, #8]
    4f5c:	ldr	x0, [x20, #16]
    4f60:	str	x0, [x19, #16]
    4f64:	b	4f00 <elf32_xlatetof@@ELFUTILS_1.0+0x44>
    4f68:	adrp	x3, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    4f6c:	add	x3, x3, #0xbd8
    4f70:	ldr	x4, [x3, x4, lsl #3]
    4f74:	mov	w3, #0x1                   	// #1
    4f78:	blr	x4
    4f7c:	b	4f54 <elf32_xlatetof@@ELFUTILS_1.0+0x98>

0000000000004f80 <elf32_xlatetom@@ELFUTILS_1.0>:
    4f80:	stp	x29, x30, [sp, #-32]!
    4f84:	mov	w4, w2
    4f88:	mov	x29, sp
    4f8c:	ldr	w3, [x1, #8]
    4f90:	stp	x19, x20, [sp, #16]
    4f94:	mov	x19, x0
    4f98:	cmp	w3, #0x13
    4f9c:	mov	x20, x1
    4fa0:	ccmp	w3, #0x1a, #0x4, ne  // ne = any
    4fa4:	ldr	x2, [x1, #16]
    4fa8:	b.eq	4fe0 <elf32_xlatetom@@ELFUTILS_1.0+0x60>  // b.none
    4fac:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    4fb0:	add	x0, x0, #0x618
    4fb4:	ldr	x1, [x0, w3, uxtw #3]
    4fb8:	udiv	x0, x2, x1
    4fbc:	msub	x0, x0, x1, x2
    4fc0:	cbz	x0, 4fe0 <elf32_xlatetom@@ELFUTILS_1.0+0x60>
    4fc4:	mov	w0, #0x21                  	// #33
    4fc8:	mov	x19, #0x0                   	// #0
    4fcc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    4fd0:	mov	x0, x19
    4fd4:	ldp	x19, x20, [sp, #16]
    4fd8:	ldp	x29, x30, [sp], #32
    4fdc:	ret
    4fe0:	ldr	x0, [x19, #16]
    4fe4:	cmp	x0, x2
    4fe8:	b.cs	4ff4 <elf32_xlatetom@@ELFUTILS_1.0+0x74>  // b.hs, b.nlast
    4fec:	mov	w0, #0x6                   	// #6
    4ff0:	b	4fc8 <elf32_xlatetom@@ELFUTILS_1.0+0x48>
    4ff4:	sub	w0, w4, #0x1
    4ff8:	cmp	w0, #0x1
    4ffc:	b.ls	5008 <elf32_xlatetom@@ELFUTILS_1.0+0x88>  // b.plast
    5000:	mov	w0, #0x7                   	// #7
    5004:	b	4fc8 <elf32_xlatetom@@ELFUTILS_1.0+0x48>
    5008:	cmp	w4, #0x1
    500c:	ldr	x0, [x19]
    5010:	ldr	x1, [x20]
    5014:	b.ne	5038 <elf32_xlatetom@@ELFUTILS_1.0+0xb8>  // b.any
    5018:	cmp	x0, x1
    501c:	b.eq	5024 <elf32_xlatetom@@ELFUTILS_1.0+0xa4>  // b.none
    5020:	bl	3070 <memmove@plt>
    5024:	ldr	w0, [x20, #8]
    5028:	str	w0, [x19, #8]
    502c:	ldr	x0, [x20, #16]
    5030:	str	x0, [x19, #16]
    5034:	b	4fd0 <elf32_xlatetom@@ELFUTILS_1.0+0x50>
    5038:	adrp	x4, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    503c:	add	x4, x4, #0xbd8
    5040:	ldr	x4, [x4, w3, uxtw #3]
    5044:	mov	w3, #0x0                   	// #0
    5048:	blr	x4
    504c:	b	5024 <elf32_xlatetom@@ELFUTILS_1.0+0xa4>

0000000000005050 <elf64_xlatetof@@ELFUTILS_1.0>:
    5050:	stp	x29, x30, [sp, #-32]!
    5054:	mov	w4, w2
    5058:	mov	x29, sp
    505c:	ldr	w3, [x1, #8]
    5060:	stp	x19, x20, [sp, #16]
    5064:	mov	x19, x0
    5068:	add	x3, x3, #0x1b
    506c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    5070:	add	x0, x0, #0x618
    5074:	mov	x20, x1
    5078:	ldr	x2, [x1, #16]
    507c:	ldr	x1, [x0, x3, lsl #3]
    5080:	udiv	x0, x2, x1
    5084:	msub	x0, x0, x1, x2
    5088:	cbz	x0, 50a8 <elf64_xlatetof@@ELFUTILS_1.0+0x58>
    508c:	mov	w0, #0x21                  	// #33
    5090:	mov	x19, #0x0                   	// #0
    5094:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    5098:	mov	x0, x19
    509c:	ldp	x19, x20, [sp, #16]
    50a0:	ldp	x29, x30, [sp], #32
    50a4:	ret
    50a8:	ldr	x0, [x19, #16]
    50ac:	cmp	x2, x0
    50b0:	b.ls	50bc <elf64_xlatetof@@ELFUTILS_1.0+0x6c>  // b.plast
    50b4:	mov	w0, #0x6                   	// #6
    50b8:	b	5090 <elf64_xlatetof@@ELFUTILS_1.0+0x40>
    50bc:	sub	w0, w4, #0x1
    50c0:	cmp	w0, #0x1
    50c4:	b.ls	50d0 <elf64_xlatetof@@ELFUTILS_1.0+0x80>  // b.plast
    50c8:	mov	w0, #0x7                   	// #7
    50cc:	b	5090 <elf64_xlatetof@@ELFUTILS_1.0+0x40>
    50d0:	cmp	w4, #0x1
    50d4:	ldr	x0, [x19]
    50d8:	ldr	x1, [x20]
    50dc:	b.ne	5100 <elf64_xlatetof@@ELFUTILS_1.0+0xb0>  // b.any
    50e0:	cmp	x0, x1
    50e4:	b.eq	50ec <elf64_xlatetof@@ELFUTILS_1.0+0x9c>  // b.none
    50e8:	bl	3070 <memmove@plt>
    50ec:	ldr	w0, [x20, #8]
    50f0:	str	w0, [x19, #8]
    50f4:	ldr	x0, [x20, #16]
    50f8:	str	x0, [x19, #16]
    50fc:	b	5098 <elf64_xlatetof@@ELFUTILS_1.0+0x48>
    5100:	adrp	x4, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    5104:	add	x4, x4, #0xbd8
    5108:	ldr	x4, [x4, x3, lsl #3]
    510c:	mov	w3, #0x1                   	// #1
    5110:	blr	x4
    5114:	b	50ec <elf64_xlatetof@@ELFUTILS_1.0+0x9c>

0000000000005118 <elf64_xlatetom@@ELFUTILS_1.0>:
    5118:	stp	x29, x30, [sp, #-32]!
    511c:	mov	w4, w2
    5120:	mov	x29, sp
    5124:	ldr	w3, [x1, #8]
    5128:	stp	x19, x20, [sp, #16]
    512c:	mov	x19, x0
    5130:	cmp	w3, #0x13
    5134:	mov	x20, x1
    5138:	ccmp	w3, #0x1a, #0x4, ne  // ne = any
    513c:	ldr	x2, [x1, #16]
    5140:	b.eq	517c <elf64_xlatetom@@ELFUTILS_1.0+0x64>  // b.none
    5144:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    5148:	add	x0, x0, #0x618
    514c:	add	x0, x0, w3, uxtw #3
    5150:	ldr	x1, [x0, #216]
    5154:	udiv	x0, x2, x1
    5158:	msub	x0, x0, x1, x2
    515c:	cbz	x0, 517c <elf64_xlatetom@@ELFUTILS_1.0+0x64>
    5160:	mov	w0, #0x21                  	// #33
    5164:	mov	x19, #0x0                   	// #0
    5168:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    516c:	mov	x0, x19
    5170:	ldp	x19, x20, [sp, #16]
    5174:	ldp	x29, x30, [sp], #32
    5178:	ret
    517c:	ldr	x0, [x19, #16]
    5180:	cmp	x0, x2
    5184:	b.cs	5190 <elf64_xlatetom@@ELFUTILS_1.0+0x78>  // b.hs, b.nlast
    5188:	mov	w0, #0x6                   	// #6
    518c:	b	5164 <elf64_xlatetom@@ELFUTILS_1.0+0x4c>
    5190:	sub	w0, w4, #0x1
    5194:	cmp	w0, #0x1
    5198:	b.ls	51a4 <elf64_xlatetom@@ELFUTILS_1.0+0x8c>  // b.plast
    519c:	mov	w0, #0x7                   	// #7
    51a0:	b	5164 <elf64_xlatetom@@ELFUTILS_1.0+0x4c>
    51a4:	cmp	w4, #0x1
    51a8:	ldr	x0, [x19]
    51ac:	ldr	x1, [x20]
    51b0:	b.ne	51d4 <elf64_xlatetom@@ELFUTILS_1.0+0xbc>  // b.any
    51b4:	cmp	x0, x1
    51b8:	b.eq	51c0 <elf64_xlatetom@@ELFUTILS_1.0+0xa8>  // b.none
    51bc:	bl	3070 <memmove@plt>
    51c0:	ldr	w0, [x20, #8]
    51c4:	str	w0, [x19, #8]
    51c8:	ldr	x0, [x20, #16]
    51cc:	str	x0, [x19, #16]
    51d0:	b	516c <elf64_xlatetom@@ELFUTILS_1.0+0x54>
    51d4:	adrp	x4, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    51d8:	add	x4, x4, #0xbd8
    51dc:	add	x3, x4, w3, uxtw #3
    51e0:	ldr	x4, [x3, #216]
    51e4:	mov	w3, #0x0                   	// #0
    51e8:	blr	x4
    51ec:	b	51c0 <elf64_xlatetom@@ELFUTILS_1.0+0xa8>
    51f0:	cbz	x2, 51f8 <elf64_xlatetom@@ELFUTILS_1.0+0xe0>
    51f4:	b	3070 <memmove@plt>
    51f8:	ret
    51fc:	mov	x3, #0x14                  	// #20
    5200:	udiv	x2, x2, x3
    5204:	madd	x2, x2, x3, x1
    5208:	cmp	x1, x2
    520c:	b.ne	5214 <elf64_xlatetom@@ELFUTILS_1.0+0xfc>  // b.any
    5210:	ret
    5214:	ldr	w3, [x1]
    5218:	add	x0, x0, #0x14
    521c:	add	x1, x1, #0x14
    5220:	rev	w3, w3
    5224:	stur	w3, [x0, #-20]
    5228:	ldur	w3, [x1, #-16]
    522c:	rev	w3, w3
    5230:	stur	w3, [x0, #-16]
    5234:	ldur	w3, [x1, #-12]
    5238:	rev	w3, w3
    523c:	stur	w3, [x0, #-12]
    5240:	ldur	w3, [x1, #-8]
    5244:	rev	w3, w3
    5248:	stur	w3, [x0, #-8]
    524c:	ldur	w3, [x1, #-4]
    5250:	rev	w3, w3
    5254:	stur	w3, [x0, #-4]
    5258:	b	5208 <elf64_xlatetom@@ELFUTILS_1.0+0xf0>
    525c:	mov	x3, #0x14                  	// #20
    5260:	udiv	x2, x2, x3
    5264:	madd	x2, x2, x3, x1
    5268:	cmp	x1, x2
    526c:	b.ne	5274 <elf64_xlatetom@@ELFUTILS_1.0+0x15c>  // b.any
    5270:	ret
    5274:	ldr	w3, [x1]
    5278:	add	x0, x0, #0x14
    527c:	add	x1, x1, #0x14
    5280:	rev	w3, w3
    5284:	stur	w3, [x0, #-20]
    5288:	ldur	w3, [x1, #-16]
    528c:	rev	w3, w3
    5290:	stur	w3, [x0, #-16]
    5294:	ldur	w3, [x1, #-12]
    5298:	rev	w3, w3
    529c:	stur	w3, [x0, #-12]
    52a0:	ldur	w3, [x1, #-8]
    52a4:	rev	w3, w3
    52a8:	stur	w3, [x0, #-8]
    52ac:	ldur	w3, [x1, #-4]
    52b0:	rev	w3, w3
    52b4:	stur	w3, [x0, #-4]
    52b8:	b	5268 <elf64_xlatetom@@ELFUTILS_1.0+0x150>
    52bc:	and	x2, x2, #0xfffffffffffffff8
    52c0:	add	x2, x1, x2
    52c4:	cmp	x1, x2
    52c8:	b.ne	52d0 <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>  // b.any
    52cc:	ret
    52d0:	ldr	w3, [x1]
    52d4:	add	x0, x0, #0x8
    52d8:	add	x1, x1, #0x8
    52dc:	rev	w3, w3
    52e0:	stur	w3, [x0, #-8]
    52e4:	ldur	w3, [x1, #-4]
    52e8:	rev	w3, w3
    52ec:	stur	w3, [x0, #-4]
    52f0:	b	52c4 <elf64_xlatetom@@ELFUTILS_1.0+0x1ac>
    52f4:	and	x2, x2, #0xfffffffffffffff8
    52f8:	add	x2, x1, x2
    52fc:	cmp	x1, x2
    5300:	b.ne	5308 <elf64_xlatetom@@ELFUTILS_1.0+0x1f0>  // b.any
    5304:	ret
    5308:	ldr	w3, [x1]
    530c:	add	x0, x0, #0x8
    5310:	add	x1, x1, #0x8
    5314:	rev	w3, w3
    5318:	stur	w3, [x0, #-8]
    531c:	ldur	w3, [x1, #-4]
    5320:	rev	w3, w3
    5324:	stur	w3, [x0, #-4]
    5328:	b	52fc <elf64_xlatetom@@ELFUTILS_1.0+0x1e4>
    532c:	lsr	x3, x2, #2
    5330:	cmp	x0, x1
    5334:	b.cc	5380 <elf64_xlatetom@@ELFUTILS_1.0+0x268>  // b.lo, b.ul, b.last
    5338:	mvn	x3, x3
    533c:	add	x0, x0, x2
    5340:	add	x1, x1, x2
    5344:	mov	x2, #0x0                   	// #0
    5348:	sub	x2, x2, #0x1
    534c:	cmp	x3, x2
    5350:	b.eq	537c <elf64_xlatetom@@ELFUTILS_1.0+0x264>  // b.none
    5354:	ldr	w4, [x1, x2, lsl #2]
    5358:	rev	w4, w4
    535c:	str	w4, [x0, x2, lsl #2]
    5360:	b	5348 <elf64_xlatetom@@ELFUTILS_1.0+0x230>
    5364:	ldr	w4, [x1, x2, lsl #2]
    5368:	rev	w4, w4
    536c:	str	w4, [x0, x2, lsl #2]
    5370:	add	x2, x2, #0x1
    5374:	cmp	x2, x3
    5378:	b.ne	5364 <elf64_xlatetom@@ELFUTILS_1.0+0x24c>  // b.any
    537c:	ret
    5380:	mov	x2, #0x0                   	// #0
    5384:	b	5374 <elf64_xlatetom@@ELFUTILS_1.0+0x25c>
    5388:	b	532c <elf64_xlatetom@@ELFUTILS_1.0+0x214>
    538c:	b	532c <elf64_xlatetom@@ELFUTILS_1.0+0x214>
    5390:	b	532c <elf64_xlatetom@@ELFUTILS_1.0+0x214>
    5394:	b	532c <elf64_xlatetom@@ELFUTILS_1.0+0x214>
    5398:	b	532c <elf64_xlatetom@@ELFUTILS_1.0+0x214>
    539c:	mov	x3, #0xc                   	// #12
    53a0:	udiv	x2, x2, x3
    53a4:	madd	x2, x2, x3, x1
    53a8:	cmp	x1, x2
    53ac:	b.ne	53b4 <elf64_xlatetom@@ELFUTILS_1.0+0x29c>  // b.any
    53b0:	ret
    53b4:	ldr	w3, [x1]
    53b8:	add	x0, x0, #0xc
    53bc:	add	x1, x1, #0xc
    53c0:	rev	w3, w3
    53c4:	stur	w3, [x0, #-12]
    53c8:	ldur	w3, [x1, #-8]
    53cc:	rev	w3, w3
    53d0:	stur	w3, [x0, #-8]
    53d4:	ldur	w3, [x1, #-4]
    53d8:	rev	w3, w3
    53dc:	stur	w3, [x0, #-4]
    53e0:	b	53a8 <elf64_xlatetom@@ELFUTILS_1.0+0x290>
    53e4:	and	x2, x2, #0xfffffffffffffff8
    53e8:	add	x2, x1, x2
    53ec:	cmp	x1, x2
    53f0:	b.ne	53f8 <elf64_xlatetom@@ELFUTILS_1.0+0x2e0>  // b.any
    53f4:	ret
    53f8:	ldr	w3, [x1]
    53fc:	add	x0, x0, #0x8
    5400:	add	x1, x1, #0x8
    5404:	rev	w3, w3
    5408:	stur	w3, [x0, #-8]
    540c:	ldur	w3, [x1, #-4]
    5410:	rev	w3, w3
    5414:	stur	w3, [x0, #-4]
    5418:	b	53ec <elf64_xlatetom@@ELFUTILS_1.0+0x2d4>
    541c:	mov	x3, #0x28                  	// #40
    5420:	udiv	x2, x2, x3
    5424:	madd	x2, x2, x3, x1
    5428:	cmp	x1, x2
    542c:	b.ne	5434 <elf64_xlatetom@@ELFUTILS_1.0+0x31c>  // b.any
    5430:	ret
    5434:	ldr	w3, [x1]
    5438:	add	x0, x0, #0x28
    543c:	add	x1, x1, #0x28
    5440:	rev	w3, w3
    5444:	stur	w3, [x0, #-40]
    5448:	ldur	w3, [x1, #-36]
    544c:	rev	w3, w3
    5450:	stur	w3, [x0, #-36]
    5454:	ldur	w3, [x1, #-32]
    5458:	rev	w3, w3
    545c:	stur	w3, [x0, #-32]
    5460:	ldur	w3, [x1, #-28]
    5464:	rev	w3, w3
    5468:	stur	w3, [x0, #-28]
    546c:	ldur	w3, [x1, #-24]
    5470:	rev	w3, w3
    5474:	stur	w3, [x0, #-24]
    5478:	ldur	w3, [x1, #-20]
    547c:	rev	w3, w3
    5480:	stur	w3, [x0, #-20]
    5484:	ldur	w3, [x1, #-16]
    5488:	rev	w3, w3
    548c:	stur	w3, [x0, #-16]
    5490:	ldur	w3, [x1, #-12]
    5494:	rev	w3, w3
    5498:	stur	w3, [x0, #-12]
    549c:	ldur	w3, [x1, #-8]
    54a0:	rev	w3, w3
    54a4:	stur	w3, [x0, #-8]
    54a8:	ldur	w3, [x1, #-4]
    54ac:	rev	w3, w3
    54b0:	stur	w3, [x0, #-4]
    54b4:	b	5428 <elf64_xlatetom@@ELFUTILS_1.0+0x310>
    54b8:	and	x2, x2, #0xffffffffffffffe0
    54bc:	add	x2, x1, x2
    54c0:	cmp	x1, x2
    54c4:	b.ne	54cc <elf64_xlatetom@@ELFUTILS_1.0+0x3b4>  // b.any
    54c8:	ret
    54cc:	ldr	w3, [x1]
    54d0:	add	x0, x0, #0x20
    54d4:	add	x1, x1, #0x20
    54d8:	rev	w3, w3
    54dc:	stur	w3, [x0, #-32]
    54e0:	ldur	w3, [x1, #-28]
    54e4:	rev	w3, w3
    54e8:	stur	w3, [x0, #-28]
    54ec:	ldur	w3, [x1, #-24]
    54f0:	rev	w3, w3
    54f4:	stur	w3, [x0, #-24]
    54f8:	ldur	w3, [x1, #-20]
    54fc:	rev	w3, w3
    5500:	stur	w3, [x0, #-20]
    5504:	ldur	w3, [x1, #-16]
    5508:	rev	w3, w3
    550c:	stur	w3, [x0, #-16]
    5510:	ldur	w3, [x1, #-12]
    5514:	rev	w3, w3
    5518:	stur	w3, [x0, #-12]
    551c:	ldur	w3, [x1, #-8]
    5520:	rev	w3, w3
    5524:	stur	w3, [x0, #-8]
    5528:	ldur	w3, [x1, #-4]
    552c:	rev	w3, w3
    5530:	stur	w3, [x0, #-4]
    5534:	b	54c0 <elf64_xlatetom@@ELFUTILS_1.0+0x3a8>
    5538:	and	x2, x2, #0xfffffffffffffff0
    553c:	add	x2, x1, x2
    5540:	cmp	x1, x2
    5544:	b.ne	554c <elf64_xlatetom@@ELFUTILS_1.0+0x434>  // b.any
    5548:	ret
    554c:	ldr	x3, [x1]
    5550:	add	x0, x0, #0x10
    5554:	add	x1, x1, #0x10
    5558:	rev	x3, x3
    555c:	stur	x3, [x0, #-16]
    5560:	ldur	x3, [x1, #-8]
    5564:	rev	x3, x3
    5568:	stur	x3, [x0, #-8]
    556c:	b	5540 <elf64_xlatetom@@ELFUTILS_1.0+0x428>
    5570:	and	x2, x2, #0xfffffffffffffff0
    5574:	add	x2, x1, x2
    5578:	cmp	x1, x2
    557c:	b.ne	5584 <elf64_xlatetom@@ELFUTILS_1.0+0x46c>  // b.any
    5580:	ret
    5584:	ldr	x3, [x1]
    5588:	add	x0, x0, #0x10
    558c:	add	x1, x1, #0x10
    5590:	rev	x3, x3
    5594:	stur	x3, [x0, #-16]
    5598:	ldur	x3, [x1, #-8]
    559c:	rev	x3, x3
    55a0:	stur	x3, [x0, #-8]
    55a4:	b	5578 <elf64_xlatetom@@ELFUTILS_1.0+0x460>
    55a8:	and	x2, x2, #0xfffffffffffffff0
    55ac:	add	x2, x1, x2
    55b0:	cmp	x1, x2
    55b4:	b.ne	55bc <elf64_xlatetom@@ELFUTILS_1.0+0x4a4>  // b.any
    55b8:	ret
    55bc:	ldr	x3, [x1]
    55c0:	add	x0, x0, #0x10
    55c4:	add	x1, x1, #0x10
    55c8:	rev	x3, x3
    55cc:	stur	x3, [x0, #-16]
    55d0:	ldur	x3, [x1, #-8]
    55d4:	rev	x3, x3
    55d8:	stur	x3, [x0, #-8]
    55dc:	b	55b0 <elf64_xlatetom@@ELFUTILS_1.0+0x498>
    55e0:	mov	x4, #0x0                   	// #0
    55e4:	cmp	x2, #0x3
    55e8:	b.ls	563c <elf64_xlatetom@@ELFUTILS_1.0+0x524>  // b.plast
    55ec:	ldr	w5, [x1, x4]
    55f0:	sub	x2, x2, #0x4
    55f4:	rev	w5, w5
    55f8:	str	w5, [x0, x4]
    55fc:	add	x4, x4, #0x4
    5600:	cmp	x4, #0x10
    5604:	b.ne	55e4 <elf64_xlatetom@@ELFUTILS_1.0+0x4cc>  // b.any
    5608:	cbz	w3, 5640 <elf64_xlatetom@@ELFUTILS_1.0+0x528>
    560c:	ldr	w3, [x1, #8]
    5610:	ubfiz	x3, x3, #3, #32
    5614:	sub	x6, x2, x3
    5618:	cmp	x2, x6
    561c:	b.ne	5648 <elf64_xlatetom@@ELFUTILS_1.0+0x530>  // b.any
    5620:	add	x2, x3, #0x10
    5624:	add	x1, x1, x2
    5628:	add	x0, x0, x2
    562c:	mov	x2, #0x0                   	// #0
    5630:	sub	x3, x6, x2
    5634:	cmp	x3, #0x3
    5638:	b.hi	5668 <elf64_xlatetom@@ELFUTILS_1.0+0x550>  // b.pmore
    563c:	ret
    5640:	ldr	w3, [x0, #8]
    5644:	b	5610 <elf64_xlatetom@@ELFUTILS_1.0+0x4f8>
    5648:	cmp	x2, #0x7
    564c:	b.ls	563c <elf64_xlatetom@@ELFUTILS_1.0+0x524>  // b.plast
    5650:	ldr	x5, [x1, x4]
    5654:	sub	x2, x2, #0x8
    5658:	rev	x5, x5
    565c:	str	x5, [x0, x4]
    5660:	add	x4, x4, #0x8
    5664:	b	5618 <elf64_xlatetom@@ELFUTILS_1.0+0x500>
    5668:	ldr	w3, [x1, x2]
    566c:	rev	w3, w3
    5670:	str	w3, [x0, x2]
    5674:	add	x2, x2, #0x4
    5678:	b	5630 <elf64_xlatetom@@ELFUTILS_1.0+0x518>
    567c:	mov	x3, #0x18                  	// #24
    5680:	udiv	x2, x2, x3
    5684:	madd	x2, x2, x3, x1
    5688:	cmp	x1, x2
    568c:	b.ne	5694 <elf64_xlatetom@@ELFUTILS_1.0+0x57c>  // b.any
    5690:	ret
    5694:	ldr	x3, [x1]
    5698:	add	x0, x0, #0x18
    569c:	add	x1, x1, #0x18
    56a0:	rev	x3, x3
    56a4:	stur	x3, [x0, #-24]
    56a8:	ldur	x3, [x1, #-16]
    56ac:	rev	x3, x3
    56b0:	stur	x3, [x0, #-16]
    56b4:	ldur	x3, [x1, #-8]
    56b8:	rev	x3, x3
    56bc:	stur	x3, [x0, #-8]
    56c0:	b	5688 <elf64_xlatetom@@ELFUTILS_1.0+0x570>
    56c4:	and	x2, x2, #0xffffffffffffffc0
    56c8:	add	x2, x1, x2
    56cc:	cmp	x1, x2
    56d0:	b.ne	56d8 <elf64_xlatetom@@ELFUTILS_1.0+0x5c0>  // b.any
    56d4:	ret
    56d8:	ldr	w3, [x1]
    56dc:	add	x0, x0, #0x40
    56e0:	add	x1, x1, #0x40
    56e4:	rev	w3, w3
    56e8:	stur	w3, [x0, #-64]
    56ec:	ldur	w3, [x1, #-60]
    56f0:	rev	w3, w3
    56f4:	stur	w3, [x0, #-60]
    56f8:	ldur	x3, [x1, #-56]
    56fc:	rev	x3, x3
    5700:	stur	x3, [x0, #-56]
    5704:	ldur	x3, [x1, #-48]
    5708:	rev	x3, x3
    570c:	stur	x3, [x0, #-48]
    5710:	ldur	x3, [x1, #-40]
    5714:	rev	x3, x3
    5718:	stur	x3, [x0, #-40]
    571c:	ldur	x3, [x1, #-32]
    5720:	rev	x3, x3
    5724:	stur	x3, [x0, #-32]
    5728:	ldur	w3, [x1, #-24]
    572c:	rev	w3, w3
    5730:	stur	w3, [x0, #-24]
    5734:	ldur	w3, [x1, #-20]
    5738:	rev	w3, w3
    573c:	stur	w3, [x0, #-20]
    5740:	ldur	x3, [x1, #-16]
    5744:	rev	x3, x3
    5748:	stur	x3, [x0, #-16]
    574c:	ldur	x3, [x1, #-8]
    5750:	rev	x3, x3
    5754:	stur	x3, [x0, #-8]
    5758:	b	56cc <elf64_xlatetom@@ELFUTILS_1.0+0x5b4>
    575c:	mov	x3, #0x38                  	// #56
    5760:	udiv	x2, x2, x3
    5764:	madd	x2, x2, x3, x1
    5768:	cmp	x1, x2
    576c:	b.ne	5774 <elf64_xlatetom@@ELFUTILS_1.0+0x65c>  // b.any
    5770:	ret
    5774:	ldr	w3, [x1]
    5778:	add	x0, x0, #0x38
    577c:	add	x1, x1, #0x38
    5780:	rev	w3, w3
    5784:	stur	w3, [x0, #-56]
    5788:	ldur	w3, [x1, #-52]
    578c:	rev	w3, w3
    5790:	stur	w3, [x0, #-52]
    5794:	ldur	x3, [x1, #-48]
    5798:	rev	x3, x3
    579c:	stur	x3, [x0, #-48]
    57a0:	ldur	x3, [x1, #-40]
    57a4:	rev	x3, x3
    57a8:	stur	x3, [x0, #-40]
    57ac:	ldur	x3, [x1, #-32]
    57b0:	rev	x3, x3
    57b4:	stur	x3, [x0, #-32]
    57b8:	ldur	x3, [x1, #-24]
    57bc:	rev	x3, x3
    57c0:	stur	x3, [x0, #-24]
    57c4:	ldur	x3, [x1, #-16]
    57c8:	rev	x3, x3
    57cc:	stur	x3, [x0, #-16]
    57d0:	ldur	x3, [x1, #-8]
    57d4:	rev	x3, x3
    57d8:	stur	x3, [x0, #-8]
    57dc:	b	5768 <elf64_xlatetom@@ELFUTILS_1.0+0x650>
    57e0:	lsr	x3, x2, #3
    57e4:	cmp	x0, x1
    57e8:	b.cc	5834 <elf64_xlatetom@@ELFUTILS_1.0+0x71c>  // b.lo, b.ul, b.last
    57ec:	mvn	x3, x3
    57f0:	add	x0, x0, x2
    57f4:	add	x1, x1, x2
    57f8:	mov	x2, #0x0                   	// #0
    57fc:	sub	x2, x2, #0x1
    5800:	cmp	x3, x2
    5804:	b.eq	5830 <elf64_xlatetom@@ELFUTILS_1.0+0x718>  // b.none
    5808:	ldr	x4, [x1, x2, lsl #3]
    580c:	rev	x4, x4
    5810:	str	x4, [x0, x2, lsl #3]
    5814:	b	57fc <elf64_xlatetom@@ELFUTILS_1.0+0x6e4>
    5818:	ldr	x4, [x1, x2, lsl #3]
    581c:	rev	x4, x4
    5820:	str	x4, [x0, x2, lsl #3]
    5824:	add	x2, x2, #0x1
    5828:	cmp	x2, x3
    582c:	b.ne	5818 <elf64_xlatetom@@ELFUTILS_1.0+0x700>  // b.any
    5830:	ret
    5834:	mov	x2, #0x0                   	// #0
    5838:	b	5828 <elf64_xlatetom@@ELFUTILS_1.0+0x710>
    583c:	b	57e0 <elf64_xlatetom@@ELFUTILS_1.0+0x6c8>
    5840:	b	57e0 <elf64_xlatetom@@ELFUTILS_1.0+0x6c8>
    5844:	b	57e0 <elf64_xlatetom@@ELFUTILS_1.0+0x6c8>
    5848:	b	57e0 <elf64_xlatetom@@ELFUTILS_1.0+0x6c8>
    584c:	b	57e0 <elf64_xlatetom@@ELFUTILS_1.0+0x6c8>
    5850:	and	x2, x2, #0xffffffffffffffe0
    5854:	add	x2, x1, x2
    5858:	cmp	x1, x2
    585c:	b.ne	5864 <elf64_xlatetom@@ELFUTILS_1.0+0x74c>  // b.any
    5860:	ret
    5864:	ldr	x3, [x1]
    5868:	add	x0, x0, #0x20
    586c:	add	x1, x1, #0x20
    5870:	rev	x3, x3
    5874:	stur	x3, [x0, #-32]
    5878:	ldur	x3, [x1, #-24]
    587c:	rev	x3, x3
    5880:	stur	x3, [x0, #-24]
    5884:	ldur	x3, [x1, #-16]
    5888:	rev	x3, x3
    588c:	stur	x3, [x0, #-16]
    5890:	ldurh	w3, [x1, #-8]
    5894:	rev16	w3, w3
    5898:	sturh	w3, [x0, #-8]
    589c:	ldurh	w3, [x1, #-6]
    58a0:	rev16	w3, w3
    58a4:	sturh	w3, [x0, #-6]
    58a8:	b	5858 <elf64_xlatetom@@ELFUTILS_1.0+0x740>
    58ac:	and	x2, x2, #0xfffffffffffffffc
    58b0:	add	x2, x1, x2
    58b4:	cmp	x1, x2
    58b8:	b.ne	58c0 <elf64_xlatetom@@ELFUTILS_1.0+0x7a8>  // b.any
    58bc:	ret
    58c0:	ldrh	w3, [x1]
    58c4:	add	x0, x0, #0x4
    58c8:	add	x1, x1, #0x4
    58cc:	rev16	w3, w3
    58d0:	sturh	w3, [x0, #-4]
    58d4:	ldurh	w3, [x1, #-2]
    58d8:	rev16	w3, w3
    58dc:	sturh	w3, [x0, #-2]
    58e0:	b	58b4 <elf64_xlatetom@@ELFUTILS_1.0+0x79c>
    58e4:	mov	x3, #0x18                  	// #24
    58e8:	udiv	x2, x2, x3
    58ec:	madd	x2, x2, x3, x1
    58f0:	cmp	x1, x2
    58f4:	b.ne	58fc <elf64_xlatetom@@ELFUTILS_1.0+0x7e4>  // b.any
    58f8:	ret
    58fc:	ldr	w3, [x1]
    5900:	add	x0, x0, #0x18
    5904:	add	x1, x1, #0x18
    5908:	rev	w3, w3
    590c:	stur	w3, [x0, #-24]
    5910:	ldurb	w3, [x1, #-20]
    5914:	sturb	w3, [x0, #-20]
    5918:	ldurb	w3, [x1, #-19]
    591c:	sturb	w3, [x0, #-19]
    5920:	ldurh	w3, [x1, #-18]
    5924:	rev16	w3, w3
    5928:	sturh	w3, [x0, #-18]
    592c:	ldur	x3, [x1, #-16]
    5930:	rev	x3, x3
    5934:	stur	x3, [x0, #-16]
    5938:	ldur	x3, [x1, #-8]
    593c:	rev	x3, x3
    5940:	stur	x3, [x0, #-8]
    5944:	b	58f0 <elf64_xlatetom@@ELFUTILS_1.0+0x7d8>
    5948:	and	x2, x2, #0xffffffffffffffc0
    594c:	add	x2, x1, x2
    5950:	cmp	x2, x1
    5954:	b.ne	595c <elf64_xlatetom@@ELFUTILS_1.0+0x844>  // b.any
    5958:	ret
    595c:	ldp	x4, x5, [x1]
    5960:	stp	x4, x5, [x0]
    5964:	add	x1, x1, #0x40
    5968:	ldurh	w3, [x1, #-48]
    596c:	add	x0, x0, #0x40
    5970:	rev16	w3, w3
    5974:	sturh	w3, [x0, #-48]
    5978:	ldurh	w3, [x1, #-46]
    597c:	rev16	w3, w3
    5980:	sturh	w3, [x0, #-46]
    5984:	ldur	w3, [x1, #-44]
    5988:	rev	w3, w3
    598c:	stur	w3, [x0, #-44]
    5990:	ldur	x3, [x1, #-40]
    5994:	rev	x3, x3
    5998:	stur	x3, [x0, #-40]
    599c:	ldur	x3, [x1, #-32]
    59a0:	rev	x3, x3
    59a4:	stur	x3, [x0, #-32]
    59a8:	ldur	x3, [x1, #-24]
    59ac:	rev	x3, x3
    59b0:	stur	x3, [x0, #-24]
    59b4:	ldur	w3, [x1, #-16]
    59b8:	rev	w3, w3
    59bc:	stur	w3, [x0, #-16]
    59c0:	ldurh	w3, [x1, #-12]
    59c4:	rev16	w3, w3
    59c8:	sturh	w3, [x0, #-12]
    59cc:	ldurh	w3, [x1, #-10]
    59d0:	rev16	w3, w3
    59d4:	sturh	w3, [x0, #-10]
    59d8:	ldurh	w3, [x1, #-8]
    59dc:	rev16	w3, w3
    59e0:	sturh	w3, [x0, #-8]
    59e4:	ldurh	w3, [x1, #-6]
    59e8:	rev16	w3, w3
    59ec:	sturh	w3, [x0, #-6]
    59f0:	ldurh	w3, [x1, #-4]
    59f4:	rev16	w3, w3
    59f8:	sturh	w3, [x0, #-4]
    59fc:	ldurh	w3, [x1, #-2]
    5a00:	rev16	w3, w3
    5a04:	sturh	w3, [x0, #-2]
    5a08:	b	5950 <elf64_xlatetom@@ELFUTILS_1.0+0x838>
    5a0c:	mov	x3, #0x18                  	// #24
    5a10:	udiv	x2, x2, x3
    5a14:	madd	x2, x2, x3, x1
    5a18:	cmp	x1, x2
    5a1c:	b.ne	5a24 <elf64_xlatetom@@ELFUTILS_1.0+0x90c>  // b.any
    5a20:	ret
    5a24:	ldr	x3, [x1]
    5a28:	add	x0, x0, #0x18
    5a2c:	add	x1, x1, #0x18
    5a30:	rev	x3, x3
    5a34:	stur	x3, [x0, #-24]
    5a38:	ldur	x3, [x1, #-16]
    5a3c:	rev	x3, x3
    5a40:	stur	x3, [x0, #-16]
    5a44:	ldur	x3, [x1, #-12]
    5a48:	rev	x3, x3
    5a4c:	stur	x3, [x0, #-12]
    5a50:	ldurh	w3, [x1, #-8]
    5a54:	rev16	w3, w3
    5a58:	sturh	w3, [x0, #-8]
    5a5c:	ldurh	w3, [x1, #-6]
    5a60:	rev16	w3, w3
    5a64:	sturh	w3, [x0, #-6]
    5a68:	b	5a18 <elf64_xlatetom@@ELFUTILS_1.0+0x900>
    5a6c:	and	x2, x2, #0xfffffffffffffffc
    5a70:	add	x2, x1, x2
    5a74:	cmp	x1, x2
    5a78:	b.ne	5a80 <elf64_xlatetom@@ELFUTILS_1.0+0x968>  // b.any
    5a7c:	ret
    5a80:	ldrh	w3, [x1]
    5a84:	add	x0, x0, #0x4
    5a88:	add	x1, x1, #0x4
    5a8c:	rev16	w3, w3
    5a90:	sturh	w3, [x0, #-4]
    5a94:	ldurh	w3, [x1, #-2]
    5a98:	rev16	w3, w3
    5a9c:	sturh	w3, [x0, #-2]
    5aa0:	b	5a74 <elf64_xlatetom@@ELFUTILS_1.0+0x95c>
    5aa4:	and	x2, x2, #0xfffffffffffffff0
    5aa8:	add	x2, x1, x2
    5aac:	cmp	x1, x2
    5ab0:	b.ne	5ab8 <elf64_xlatetom@@ELFUTILS_1.0+0x9a0>  // b.any
    5ab4:	ret
    5ab8:	ldr	w3, [x1]
    5abc:	add	x0, x0, #0x10
    5ac0:	add	x1, x1, #0x10
    5ac4:	rev	w3, w3
    5ac8:	stur	w3, [x0, #-16]
    5acc:	ldur	w3, [x1, #-12]
    5ad0:	rev	w3, w3
    5ad4:	stur	w3, [x0, #-12]
    5ad8:	ldur	w3, [x1, #-8]
    5adc:	rev	w3, w3
    5ae0:	stur	w3, [x0, #-8]
    5ae4:	ldurb	w3, [x1, #-4]
    5ae8:	sturb	w3, [x0, #-4]
    5aec:	ldurb	w3, [x1, #-3]
    5af0:	sturb	w3, [x0, #-3]
    5af4:	ldurh	w3, [x1, #-2]
    5af8:	rev16	w3, w3
    5afc:	sturh	w3, [x0, #-2]
    5b00:	b	5aac <elf64_xlatetom@@ELFUTILS_1.0+0x994>
    5b04:	lsr	x3, x2, #1
    5b08:	cmp	x0, x1
    5b0c:	b.cc	5b58 <elf64_xlatetom@@ELFUTILS_1.0+0xa40>  // b.lo, b.ul, b.last
    5b10:	mvn	x3, x3
    5b14:	add	x0, x0, x2
    5b18:	add	x1, x1, x2
    5b1c:	mov	x2, #0x0                   	// #0
    5b20:	sub	x2, x2, #0x1
    5b24:	cmp	x3, x2
    5b28:	b.eq	5b54 <elf64_xlatetom@@ELFUTILS_1.0+0xa3c>  // b.none
    5b2c:	ldrh	w4, [x1, x2, lsl #1]
    5b30:	rev16	w4, w4
    5b34:	strh	w4, [x0, x2, lsl #1]
    5b38:	b	5b20 <elf64_xlatetom@@ELFUTILS_1.0+0xa08>
    5b3c:	ldrh	w4, [x1, x2, lsl #1]
    5b40:	rev16	w4, w4
    5b44:	strh	w4, [x0, x2, lsl #1]
    5b48:	add	x2, x2, #0x1
    5b4c:	cmp	x2, x3
    5b50:	b.ne	5b3c <elf64_xlatetom@@ELFUTILS_1.0+0xa24>  // b.any
    5b54:	ret
    5b58:	mov	x2, #0x0                   	// #0
    5b5c:	b	5b4c <elf64_xlatetom@@ELFUTILS_1.0+0xa34>
    5b60:	b	5b04 <elf64_xlatetom@@ELFUTILS_1.0+0x9ec>
    5b64:	mov	x3, #0x34                  	// #52
    5b68:	udiv	x2, x2, x3
    5b6c:	madd	x2, x2, x3, x1
    5b70:	cmp	x2, x1
    5b74:	b.ne	5b7c <elf64_xlatetom@@ELFUTILS_1.0+0xa64>  // b.any
    5b78:	ret
    5b7c:	ldp	x4, x5, [x1]
    5b80:	stp	x4, x5, [x0]
    5b84:	add	x1, x1, #0x34
    5b88:	ldurh	w3, [x1, #-36]
    5b8c:	add	x0, x0, #0x34
    5b90:	rev16	w3, w3
    5b94:	sturh	w3, [x0, #-36]
    5b98:	ldurh	w3, [x1, #-34]
    5b9c:	rev16	w3, w3
    5ba0:	sturh	w3, [x0, #-34]
    5ba4:	ldur	w3, [x1, #-32]
    5ba8:	rev	w3, w3
    5bac:	stur	w3, [x0, #-32]
    5bb0:	ldur	w3, [x1, #-28]
    5bb4:	rev	w3, w3
    5bb8:	stur	w3, [x0, #-28]
    5bbc:	ldur	w3, [x1, #-24]
    5bc0:	rev	w3, w3
    5bc4:	stur	w3, [x0, #-24]
    5bc8:	ldur	w3, [x1, #-20]
    5bcc:	rev	w3, w3
    5bd0:	stur	w3, [x0, #-20]
    5bd4:	ldur	w3, [x1, #-16]
    5bd8:	rev	w3, w3
    5bdc:	stur	w3, [x0, #-16]
    5be0:	ldurh	w3, [x1, #-12]
    5be4:	rev16	w3, w3
    5be8:	sturh	w3, [x0, #-12]
    5bec:	ldurh	w3, [x1, #-10]
    5bf0:	rev16	w3, w3
    5bf4:	sturh	w3, [x0, #-10]
    5bf8:	ldurh	w3, [x1, #-8]
    5bfc:	rev16	w3, w3
    5c00:	sturh	w3, [x0, #-8]
    5c04:	ldurh	w3, [x1, #-6]
    5c08:	rev16	w3, w3
    5c0c:	sturh	w3, [x0, #-6]
    5c10:	ldurh	w3, [x1, #-4]
    5c14:	rev16	w3, w3
    5c18:	sturh	w3, [x0, #-4]
    5c1c:	ldurh	w3, [x1, #-2]
    5c20:	rev16	w3, w3
    5c24:	sturh	w3, [x0, #-2]
    5c28:	b	5b70 <elf64_xlatetom@@ELFUTILS_1.0+0xa58>
    5c2c:	cbz	x2, 5d84 <elf64_xlatetom@@ELFUTILS_1.0+0xc6c>
    5c30:	stp	x29, x30, [sp, #-48]!
    5c34:	mov	x29, sp
    5c38:	stp	x19, x20, [sp, #16]
    5c3c:	mov	x19, x2
    5c40:	mov	w20, w3
    5c44:	stp	x21, x22, [sp, #32]
    5c48:	mov	x21, x0
    5c4c:	mov	x22, x1
    5c50:	bl	3070 <memmove@plt>
    5c54:	mov	x5, #0x0                   	// #0
    5c58:	sub	x0, x19, x5
    5c5c:	cmp	x0, #0xf
    5c60:	b.ls	5d68 <elf64_xlatetom@@ELFUTILS_1.0+0xc50>  // b.plast
    5c64:	add	x6, x22, x5
    5c68:	add	x7, x21, x5
    5c6c:	ldr	w4, [x6, #8]
    5c70:	cbnz	w20, 5ca8 <elf64_xlatetom@@ELFUTILS_1.0+0xb90>
    5c74:	ldrh	w0, [x22, x5]
    5c78:	rev	w4, w4
    5c7c:	rev16	w0, w0
    5c80:	strh	w0, [x21, x5]
    5c84:	ldrh	w0, [x6, #2]
    5c88:	rev16	w0, w0
    5c8c:	strh	w0, [x7, #2]
    5c90:	ldr	w0, [x6, #4]
    5c94:	rev	w0, w0
    5c98:	stp	w0, w4, [x7, #4]
    5c9c:	ldr	w0, [x6, #12]
    5ca0:	rev	w0, w0
    5ca4:	str	w0, [x7, #12]
    5ca8:	add	x4, x5, w4, uxtw
    5cac:	cmp	x19, x4
    5cb0:	b.cc	5d68 <elf64_xlatetom@@ELFUTILS_1.0+0xc50>  // b.lo, b.ul, b.last
    5cb4:	sub	x0, x19, x4
    5cb8:	cmp	x0, #0xf
    5cbc:	b.ls	5d68 <elf64_xlatetom@@ELFUTILS_1.0+0xc50>  // b.plast
    5cc0:	add	x2, x22, x4
    5cc4:	add	x1, x21, x4
    5cc8:	ldr	w0, [x2, #12]
    5ccc:	cbz	w20, 5cd4 <elf64_xlatetom@@ELFUTILS_1.0+0xbbc>
    5cd0:	add	x4, x4, w0, uxtw
    5cd4:	ldr	w3, [x2]
    5cd8:	rev	w0, w0
    5cdc:	rev	w3, w3
    5ce0:	str	w3, [x1]
    5ce4:	ldrh	w3, [x2, #4]
    5ce8:	rev16	w3, w3
    5cec:	strh	w3, [x1, #4]
    5cf0:	ldrh	w3, [x2, #6]
    5cf4:	rev16	w3, w3
    5cf8:	strh	w3, [x1, #6]
    5cfc:	ldr	w3, [x2, #8]
    5d00:	rev	w3, w3
    5d04:	stp	w3, w0, [x1, #8]
    5d08:	cbnz	w20, 5d10 <elf64_xlatetom@@ELFUTILS_1.0+0xbf8>
    5d0c:	add	x4, x4, w0, uxtw
    5d10:	ldr	w0, [x2, #12]
    5d14:	cbnz	w0, 5cac <elf64_xlatetom@@ELFUTILS_1.0+0xb94>
    5d18:	cbz	w20, 5d78 <elf64_xlatetom@@ELFUTILS_1.0+0xc60>
    5d1c:	ldrh	w1, [x6]
    5d20:	ldr	w0, [x6, #12]
    5d24:	rev16	w1, w1
    5d28:	strh	w1, [x7]
    5d2c:	ldrh	w1, [x6, #2]
    5d30:	add	x5, x5, w0, uxtw
    5d34:	rev	w0, w0
    5d38:	rev16	w1, w1
    5d3c:	strh	w1, [x7, #2]
    5d40:	ldr	w1, [x6, #4]
    5d44:	rev	w1, w1
    5d48:	str	w1, [x7, #4]
    5d4c:	ldr	w1, [x6, #8]
    5d50:	rev	w1, w1
    5d54:	stp	w1, w0, [x7, #8]
    5d58:	ldr	w0, [x6, #12]
    5d5c:	cbz	w0, 5d68 <elf64_xlatetom@@ELFUTILS_1.0+0xc50>
    5d60:	cmp	x19, x5
    5d64:	b.cs	5c58 <elf64_xlatetom@@ELFUTILS_1.0+0xb40>  // b.hs, b.nlast
    5d68:	ldp	x19, x20, [sp, #16]
    5d6c:	ldp	x21, x22, [sp, #32]
    5d70:	ldp	x29, x30, [sp], #48
    5d74:	ret
    5d78:	ldr	w0, [x7, #12]
    5d7c:	add	x5, x5, x0
    5d80:	b	5d58 <elf64_xlatetom@@ELFUTILS_1.0+0xc40>
    5d84:	ret
    5d88:	cbz	x2, 5eec <elf64_xlatetom@@ELFUTILS_1.0+0xdd4>
    5d8c:	stp	x29, x30, [sp, #-48]!
    5d90:	mov	x29, sp
    5d94:	stp	x19, x20, [sp, #16]
    5d98:	mov	x19, x2
    5d9c:	mov	w20, w3
    5da0:	stp	x21, x22, [sp, #32]
    5da4:	mov	x21, x0
    5da8:	mov	x22, x1
    5dac:	bl	3070 <memmove@plt>
    5db0:	mov	x7, #0x0                   	// #0
    5db4:	sub	x0, x19, x7
    5db8:	cmp	x0, #0x13
    5dbc:	b.ls	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0xdb8>  // b.plast
    5dc0:	add	x5, x22, x7
    5dc4:	add	x6, x21, x7
    5dc8:	ldr	w4, [x5, #12]
    5dcc:	cbnz	w20, 5e1c <elf64_xlatetom@@ELFUTILS_1.0+0xd04>
    5dd0:	ldrh	w0, [x22, x7]
    5dd4:	rev	w4, w4
    5dd8:	rev16	w0, w0
    5ddc:	strh	w0, [x21, x7]
    5de0:	ldrh	w0, [x5, #2]
    5de4:	rev16	w0, w0
    5de8:	strh	w0, [x6, #2]
    5dec:	ldrh	w0, [x5, #4]
    5df0:	rev16	w0, w0
    5df4:	strh	w0, [x6, #4]
    5df8:	ldrh	w0, [x5, #6]
    5dfc:	rev16	w0, w0
    5e00:	strh	w0, [x6, #6]
    5e04:	ldr	w0, [x5, #8]
    5e08:	rev	w0, w0
    5e0c:	stp	w0, w4, [x6, #8]
    5e10:	ldr	w0, [x5, #16]
    5e14:	rev	w0, w0
    5e18:	str	w0, [x6, #16]
    5e1c:	add	x4, x7, w4, uxtw
    5e20:	cmp	x19, x4
    5e24:	b.cc	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0xdb8>  // b.lo, b.ul, b.last
    5e28:	sub	x0, x19, x4
    5e2c:	cmp	x0, #0x7
    5e30:	b.ls	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0xdb8>  // b.plast
    5e34:	add	x1, x22, x4
    5e38:	add	x3, x21, x4
    5e3c:	ldr	w0, [x1, #4]
    5e40:	cbz	w20, 5e48 <elf64_xlatetom@@ELFUTILS_1.0+0xd30>
    5e44:	add	x4, x4, w0, uxtw
    5e48:	ldr	w2, [x1]
    5e4c:	rev	w0, w0
    5e50:	rev	w2, w2
    5e54:	stp	w2, w0, [x3]
    5e58:	cbnz	w20, 5e60 <elf64_xlatetom@@ELFUTILS_1.0+0xd48>
    5e5c:	add	x4, x4, w0, uxtw
    5e60:	ldr	w0, [x1, #4]
    5e64:	cbnz	w0, 5e20 <elf64_xlatetom@@ELFUTILS_1.0+0xd08>
    5e68:	cbz	w20, 5ee0 <elf64_xlatetom@@ELFUTILS_1.0+0xdc8>
    5e6c:	ldrh	w1, [x5]
    5e70:	ldr	w0, [x5, #16]
    5e74:	rev16	w1, w1
    5e78:	strh	w1, [x6]
    5e7c:	ldrh	w1, [x5, #2]
    5e80:	add	x7, x7, w0, uxtw
    5e84:	rev	w0, w0
    5e88:	rev16	w1, w1
    5e8c:	strh	w1, [x6, #2]
    5e90:	ldrh	w1, [x5, #4]
    5e94:	rev16	w1, w1
    5e98:	strh	w1, [x6, #4]
    5e9c:	ldrh	w1, [x5, #6]
    5ea0:	rev16	w1, w1
    5ea4:	strh	w1, [x6, #6]
    5ea8:	ldr	w1, [x5, #8]
    5eac:	rev	w1, w1
    5eb0:	str	w1, [x6, #8]
    5eb4:	ldr	w1, [x5, #12]
    5eb8:	rev	w1, w1
    5ebc:	stp	w1, w0, [x6, #12]
    5ec0:	ldr	w0, [x5, #16]
    5ec4:	cbz	w0, 5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0xdb8>
    5ec8:	cmp	x19, x7
    5ecc:	b.cs	5db4 <elf64_xlatetom@@ELFUTILS_1.0+0xc9c>  // b.hs, b.nlast
    5ed0:	ldp	x19, x20, [sp, #16]
    5ed4:	ldp	x21, x22, [sp, #32]
    5ed8:	ldp	x29, x30, [sp], #48
    5edc:	ret
    5ee0:	ldr	w0, [x6, #16]
    5ee4:	add	x7, x7, x0
    5ee8:	b	5ec0 <elf64_xlatetom@@ELFUTILS_1.0+0xda8>
    5eec:	ret
    5ef0:	cbz	x2, 5f64 <elf64_xlatetom@@ELFUTILS_1.0+0xe4c>
    5ef4:	stp	x29, x30, [sp, #-48]!
    5ef8:	cmp	x0, x1
    5efc:	mov	x29, sp
    5f00:	stp	x19, x20, [sp, #16]
    5f04:	mov	x19, x0
    5f08:	mov	x20, x1
    5f0c:	str	x21, [sp, #32]
    5f10:	mov	x21, x2
    5f14:	b.eq	5f1c <elf64_xlatetom@@ELFUTILS_1.0+0xe04>  // b.none
    5f18:	bl	3070 <memmove@plt>
    5f1c:	cmp	x21, #0x17
    5f20:	b.ls	5f54 <elf64_xlatetom@@ELFUTILS_1.0+0xe3c>  // b.plast
    5f24:	ldr	w0, [x20]
    5f28:	rev	w0, w0
    5f2c:	str	w0, [x19]
    5f30:	ldr	w0, [x20, #4]
    5f34:	rev	w0, w0
    5f38:	str	w0, [x19, #4]
    5f3c:	ldr	x0, [x20, #8]
    5f40:	rev	x0, x0
    5f44:	str	x0, [x19, #8]
    5f48:	ldr	x0, [x20, #16]
    5f4c:	rev	x0, x0
    5f50:	str	x0, [x19, #16]
    5f54:	ldp	x19, x20, [sp, #16]
    5f58:	ldr	x21, [sp, #32]
    5f5c:	ldp	x29, x30, [sp], #48
    5f60:	ret
    5f64:	ret
    5f68:	cbz	x2, 5fd0 <elf64_xlatetom@@ELFUTILS_1.0+0xeb8>
    5f6c:	stp	x29, x30, [sp, #-48]!
    5f70:	cmp	x0, x1
    5f74:	mov	x29, sp
    5f78:	stp	x19, x20, [sp, #16]
    5f7c:	mov	x19, x0
    5f80:	mov	x20, x1
    5f84:	str	x21, [sp, #32]
    5f88:	mov	x21, x2
    5f8c:	b.eq	5f94 <elf64_xlatetom@@ELFUTILS_1.0+0xe7c>  // b.none
    5f90:	bl	3070 <memmove@plt>
    5f94:	cmp	x21, #0xb
    5f98:	b.ls	5fc0 <elf64_xlatetom@@ELFUTILS_1.0+0xea8>  // b.plast
    5f9c:	ldr	w0, [x20]
    5fa0:	rev	w0, w0
    5fa4:	str	w0, [x19]
    5fa8:	ldr	w0, [x20, #4]
    5fac:	rev	w0, w0
    5fb0:	str	w0, [x19, #4]
    5fb4:	ldr	w0, [x20, #8]
    5fb8:	rev	w0, w0
    5fbc:	str	w0, [x19, #8]
    5fc0:	ldp	x19, x20, [sp, #16]
    5fc4:	ldr	x21, [sp, #32]
    5fc8:	ldp	x29, x30, [sp], #48
    5fcc:	ret
    5fd0:	ret
    5fd4:	stp	x29, x30, [sp, #-64]!
    5fd8:	mov	x29, sp
    5fdc:	stp	x19, x20, [sp, #16]
    5fe0:	mov	x20, x2
    5fe4:	stp	x21, x22, [sp, #32]
    5fe8:	mov	x21, x0
    5fec:	mov	x22, x1
    5ff0:	stp	x23, x24, [sp, #48]
    5ff4:	mov	w23, w3
    5ff8:	and	w24, w4, #0xff
    5ffc:	cmp	x20, #0xb
    6000:	b.ls	60d4 <elf64_xlatetom@@ELFUTILS_1.0+0xfbc>  // b.plast
    6004:	cmp	w23, #0x0
    6008:	ldr	w0, [x22]
    600c:	csel	x3, x22, x21, ne  // ne = any
    6010:	cmp	w24, #0x0
    6014:	rev	w0, w0
    6018:	add	x1, x22, #0xc
    601c:	ldr	w2, [x3]
    6020:	str	w0, [x21]
    6024:	add	x19, x2, #0x13
    6028:	add	x5, x2, #0xf
    602c:	ldr	w0, [x22, #4]
    6030:	and	x19, x19, #0xfffffff8
    6034:	and	x5, x5, #0xfffffffc
    6038:	rev	w0, w0
    603c:	str	w0, [x21, #4]
    6040:	csel	x19, x5, x19, eq  // eq = none
    6044:	ldr	w0, [x22, #8]
    6048:	cmp	x20, x19
    604c:	ccmp	x19, #0xb, #0x0, cs  // cs = hs, nlast
    6050:	rev	w0, w0
    6054:	str	w0, [x21, #8]
    6058:	add	x0, x21, #0xc
    605c:	b.ls	608c <elf64_xlatetom@@ELFUTILS_1.0+0xf74>  // b.plast
    6060:	ldr	w5, [x3, #4]
    6064:	cmp	w24, #0x0
    6068:	add	x5, x5, x19
    606c:	add	x19, x5, #0x7
    6070:	and	x2, x19, #0xfffffff8
    6074:	add	x19, x5, #0x3
    6078:	and	x19, x19, #0xfffffffc
    607c:	csel	x19, x19, x2, eq  // eq = none
    6080:	cmp	x20, x19
    6084:	ccmp	x19, #0xb, #0x0, cs  // cs = hs, nlast
    6088:	b.hi	60b4 <elf64_xlatetom@@ELFUTILS_1.0+0xf9c>  // b.pmore
    608c:	sub	x20, x20, #0xc
    6090:	cbz	x20, 60e0 <elf64_xlatetom@@ELFUTILS_1.0+0xfc8>
    6094:	cmp	x0, x1
    6098:	b.eq	60e0 <elf64_xlatetom@@ELFUTILS_1.0+0xfc8>  // b.none
    609c:	mov	x2, x20
    60a0:	ldp	x19, x20, [sp, #16]
    60a4:	ldp	x21, x22, [sp, #32]
    60a8:	ldp	x23, x24, [sp, #48]
    60ac:	ldp	x29, x30, [sp], #64
    60b0:	b	3060 <memcpy@plt>
    60b4:	cmp	x0, x1
    60b8:	b.eq	60c4 <elf64_xlatetom@@ELFUTILS_1.0+0xfac>  // b.none
    60bc:	sub	x2, x19, #0xc
    60c0:	bl	3060 <memcpy@plt>
    60c4:	add	x22, x22, x19
    60c8:	add	x21, x21, x19
    60cc:	sub	x20, x20, x19
    60d0:	b	5ffc <elf64_xlatetom@@ELFUTILS_1.0+0xee4>
    60d4:	mov	x1, x22
    60d8:	mov	x0, x21
    60dc:	b	6090 <elf64_xlatetom@@ELFUTILS_1.0+0xf78>
    60e0:	ldp	x19, x20, [sp, #16]
    60e4:	ldp	x21, x22, [sp, #32]
    60e8:	ldp	x23, x24, [sp, #48]
    60ec:	ldp	x29, x30, [sp], #64
    60f0:	ret
    60f4:	mov	w4, #0x1                   	// #1
    60f8:	b	5fd4 <elf64_xlatetom@@ELFUTILS_1.0+0xebc>
    60fc:	mov	w4, #0x0                   	// #0
    6100:	b	5fd4 <elf64_xlatetom@@ELFUTILS_1.0+0xebc>
    6104:	cbz	x0, 6158 <elf64_xlatetom@@ELFUTILS_1.0+0x1040>
    6108:	stp	x29, x30, [sp, #-16]!
    610c:	mov	x29, sp
    6110:	ldr	w1, [x0, #24]
    6114:	cmp	w1, #0x3
    6118:	b.eq	6130 <elf64_xlatetom@@ELFUTILS_1.0+0x1018>  // b.none
    611c:	mov	w0, #0x4                   	// #4
    6120:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6124:	mov	x0, #0x0                   	// #0
    6128:	ldp	x29, x30, [sp], #16
    612c:	ret
    6130:	ldr	w1, [x0, #32]
    6134:	cbnz	w1, 6148 <elf64_xlatetom@@ELFUTILS_1.0+0x1030>
    6138:	mov	w1, #0x1                   	// #1
    613c:	str	w1, [x0, #32]
    6140:	ldr	x0, [x0, #72]
    6144:	b	6128 <elf64_xlatetom@@ELFUTILS_1.0+0x1010>
    6148:	cmp	w1, #0x1
    614c:	b.eq	6140 <elf64_xlatetom@@ELFUTILS_1.0+0x1028>  // b.none
    6150:	mov	w0, #0x15                  	// #21
    6154:	b	6120 <elf64_xlatetom@@ELFUTILS_1.0+0x1008>
    6158:	ret

000000000000615c <elf32_getehdr@@ELFUTILS_1.0>:
    615c:	cbz	x0, 61b0 <elf32_getehdr@@ELFUTILS_1.0+0x54>
    6160:	stp	x29, x30, [sp, #-16]!
    6164:	mov	x29, sp
    6168:	ldr	w1, [x0, #24]
    616c:	cmp	w1, #0x3
    6170:	b.eq	6188 <elf32_getehdr@@ELFUTILS_1.0+0x2c>  // b.none
    6174:	mov	w0, #0x4                   	// #4
    6178:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    617c:	mov	x0, #0x0                   	// #0
    6180:	ldp	x29, x30, [sp], #16
    6184:	ret
    6188:	ldr	w1, [x0, #32]
    618c:	cbnz	w1, 61a0 <elf32_getehdr@@ELFUTILS_1.0+0x44>
    6190:	mov	w1, #0x1                   	// #1
    6194:	str	w1, [x0, #32]
    6198:	ldr	x0, [x0, #72]
    619c:	b	6180 <elf32_getehdr@@ELFUTILS_1.0+0x24>
    61a0:	cmp	w1, #0x1
    61a4:	b.eq	6198 <elf32_getehdr@@ELFUTILS_1.0+0x3c>  // b.none
    61a8:	mov	w0, #0x15                  	// #21
    61ac:	b	6178 <elf32_getehdr@@ELFUTILS_1.0+0x1c>
    61b0:	ret
    61b4:	cbz	x0, 6208 <elf32_getehdr@@ELFUTILS_1.0+0xac>
    61b8:	stp	x29, x30, [sp, #-16]!
    61bc:	mov	x29, sp
    61c0:	ldr	w1, [x0, #24]
    61c4:	cmp	w1, #0x3
    61c8:	b.eq	61e0 <elf32_getehdr@@ELFUTILS_1.0+0x84>  // b.none
    61cc:	mov	w0, #0x4                   	// #4
    61d0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    61d4:	mov	x0, #0x0                   	// #0
    61d8:	ldp	x29, x30, [sp], #16
    61dc:	ret
    61e0:	ldr	w1, [x0, #32]
    61e4:	cbnz	w1, 61f8 <elf32_getehdr@@ELFUTILS_1.0+0x9c>
    61e8:	mov	w1, #0x2                   	// #2
    61ec:	str	w1, [x0, #32]
    61f0:	ldr	x0, [x0, #72]
    61f4:	b	61d8 <elf32_getehdr@@ELFUTILS_1.0+0x7c>
    61f8:	cmp	w1, #0x2
    61fc:	b.eq	61f0 <elf32_getehdr@@ELFUTILS_1.0+0x94>  // b.none
    6200:	mov	w0, #0x15                  	// #21
    6204:	b	61d0 <elf32_getehdr@@ELFUTILS_1.0+0x74>
    6208:	ret

000000000000620c <elf64_getehdr@@ELFUTILS_1.0>:
    620c:	cbz	x0, 6260 <elf64_getehdr@@ELFUTILS_1.0+0x54>
    6210:	stp	x29, x30, [sp, #-16]!
    6214:	mov	x29, sp
    6218:	ldr	w1, [x0, #24]
    621c:	cmp	w1, #0x3
    6220:	b.eq	6238 <elf64_getehdr@@ELFUTILS_1.0+0x2c>  // b.none
    6224:	mov	w0, #0x4                   	// #4
    6228:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    622c:	mov	x0, #0x0                   	// #0
    6230:	ldp	x29, x30, [sp], #16
    6234:	ret
    6238:	ldr	w1, [x0, #32]
    623c:	cbnz	w1, 6250 <elf64_getehdr@@ELFUTILS_1.0+0x44>
    6240:	mov	w1, #0x2                   	// #2
    6244:	str	w1, [x0, #32]
    6248:	ldr	x0, [x0, #72]
    624c:	b	6230 <elf64_getehdr@@ELFUTILS_1.0+0x24>
    6250:	cmp	w1, #0x2
    6254:	b.eq	6248 <elf64_getehdr@@ELFUTILS_1.0+0x3c>  // b.none
    6258:	mov	w0, #0x15                  	// #21
    625c:	b	6228 <elf64_getehdr@@ELFUTILS_1.0+0x1c>
    6260:	ret
    6264:	cbz	x0, 6340 <elf64_getehdr@@ELFUTILS_1.0+0x134>
    6268:	stp	x29, x30, [sp, #-16]!
    626c:	mov	x29, sp
    6270:	ldr	w2, [x0, #24]
    6274:	cmp	w2, #0x3
    6278:	b.eq	6290 <elf64_getehdr@@ELFUTILS_1.0+0x84>  // b.none
    627c:	mov	w0, #0x4                   	// #4
    6280:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6284:	mov	x0, #0x0                   	// #0
    6288:	ldp	x29, x30, [sp], #16
    628c:	ret
    6290:	ldr	x2, [x0, #72]
    6294:	cbnz	x2, 62a0 <elf64_getehdr@@ELFUTILS_1.0+0x94>
    6298:	mov	w0, #0x1a                  	// #26
    629c:	b	6280 <elf64_getehdr@@ELFUTILS_1.0+0x74>
    62a0:	ldp	x4, x5, [x2]
    62a4:	ldr	w0, [x0, #32]
    62a8:	stp	x4, x5, [x1]
    62ac:	cmp	w0, #0x1
    62b0:	b.ne	6324 <elf64_getehdr@@ELFUTILS_1.0+0x118>  // b.any
    62b4:	ldrh	w0, [x2, #16]
    62b8:	strh	w0, [x1, #16]
    62bc:	ldrh	w0, [x2, #18]
    62c0:	strh	w0, [x1, #18]
    62c4:	ldr	w0, [x2, #20]
    62c8:	str	w0, [x1, #20]
    62cc:	ldr	w0, [x2, #24]
    62d0:	str	x0, [x1, #24]
    62d4:	ldr	w0, [x2, #28]
    62d8:	str	x0, [x1, #32]
    62dc:	ldr	w0, [x2, #32]
    62e0:	str	x0, [x1, #40]
    62e4:	ldr	w0, [x2, #36]
    62e8:	str	w0, [x1, #48]
    62ec:	ldrh	w0, [x2, #40]
    62f0:	strh	w0, [x1, #52]
    62f4:	ldrh	w0, [x2, #42]
    62f8:	strh	w0, [x1, #54]
    62fc:	ldrh	w0, [x2, #44]
    6300:	strh	w0, [x1, #56]
    6304:	ldrh	w0, [x2, #46]
    6308:	strh	w0, [x1, #58]
    630c:	ldrh	w0, [x2, #48]
    6310:	strh	w0, [x1, #60]
    6314:	ldrh	w0, [x2, #50]
    6318:	strh	w0, [x1, #62]
    631c:	mov	x0, x1
    6320:	b	6288 <elf64_getehdr@@ELFUTILS_1.0+0x7c>
    6324:	ldp	x4, x5, [x2, #16]
    6328:	stp	x4, x5, [x1, #16]
    632c:	ldp	x4, x5, [x2, #32]
    6330:	stp	x4, x5, [x1, #32]
    6334:	ldp	x2, x3, [x2, #48]
    6338:	stp	x2, x3, [x1, #48]
    633c:	b	631c <elf64_getehdr@@ELFUTILS_1.0+0x110>
    6340:	ret

0000000000006344 <gelf_getehdr@@ELFUTILS_1.0>:
    6344:	cbz	x0, 634c <gelf_getehdr@@ELFUTILS_1.0+0x8>
    6348:	b	6264 <elf64_getehdr@@ELFUTILS_1.0+0x58>
    634c:	ret

0000000000006350 <elf32_newehdr@@ELFUTILS_1.0>:
    6350:	cbz	x0, 63d0 <elf32_newehdr@@ELFUTILS_1.0+0x80>
    6354:	stp	x29, x30, [sp, #-16]!
    6358:	mov	x29, sp
    635c:	ldr	w1, [x0, #24]
    6360:	cmp	w1, #0x3
    6364:	b.eq	637c <elf32_newehdr@@ELFUTILS_1.0+0x2c>  // b.none
    6368:	mov	w0, #0x4                   	// #4
    636c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6370:	mov	x0, #0x0                   	// #0
    6374:	ldp	x29, x30, [sp], #16
    6378:	ret
    637c:	ldr	w1, [x0, #32]
    6380:	cbnz	w1, 63c0 <elf32_newehdr@@ELFUTILS_1.0+0x70>
    6384:	mov	w1, #0x1                   	// #1
    6388:	str	w1, [x0, #32]
    638c:	ldr	x1, [x0, #72]
    6390:	cbnz	x1, 63b8 <elf32_newehdr@@ELFUTILS_1.0+0x68>
    6394:	add	x1, x0, #0x88
    6398:	str	x1, [x0, #72]
    639c:	ldr	w1, [x0, #116]
    63a0:	stp	xzr, xzr, [x0, #136]
    63a4:	orr	w1, w1, #0x1
    63a8:	str	w1, [x0, #116]
    63ac:	stp	xzr, xzr, [x0, #152]
    63b0:	stp	xzr, xzr, [x0, #168]
    63b4:	str	wzr, [x0, #184]
    63b8:	ldr	x0, [x0, #72]
    63bc:	b	6374 <elf32_newehdr@@ELFUTILS_1.0+0x24>
    63c0:	cmp	w1, #0x1
    63c4:	b.eq	638c <elf32_newehdr@@ELFUTILS_1.0+0x3c>  // b.none
    63c8:	mov	w0, #0x15                  	// #21
    63cc:	b	636c <elf32_newehdr@@ELFUTILS_1.0+0x1c>
    63d0:	ret

00000000000063d4 <elf64_newehdr@@ELFUTILS_1.0>:
    63d4:	cbz	x0, 6454 <elf64_newehdr@@ELFUTILS_1.0+0x80>
    63d8:	stp	x29, x30, [sp, #-16]!
    63dc:	mov	x29, sp
    63e0:	ldr	w1, [x0, #24]
    63e4:	cmp	w1, #0x3
    63e8:	b.eq	6400 <elf64_newehdr@@ELFUTILS_1.0+0x2c>  // b.none
    63ec:	mov	w0, #0x4                   	// #4
    63f0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    63f4:	mov	x0, #0x0                   	// #0
    63f8:	ldp	x29, x30, [sp], #16
    63fc:	ret
    6400:	ldr	w1, [x0, #32]
    6404:	cbnz	w1, 6444 <elf64_newehdr@@ELFUTILS_1.0+0x70>
    6408:	mov	w1, #0x2                   	// #2
    640c:	str	w1, [x0, #32]
    6410:	ldr	x1, [x0, #72]
    6414:	cbnz	x1, 643c <elf64_newehdr@@ELFUTILS_1.0+0x68>
    6418:	add	x1, x0, #0x88
    641c:	str	x1, [x0, #72]
    6420:	ldr	w1, [x0, #116]
    6424:	stp	xzr, xzr, [x0, #136]
    6428:	orr	w1, w1, #0x1
    642c:	str	w1, [x0, #116]
    6430:	stp	xzr, xzr, [x0, #152]
    6434:	stp	xzr, xzr, [x0, #168]
    6438:	stp	xzr, xzr, [x0, #184]
    643c:	ldr	x0, [x0, #72]
    6440:	b	63f8 <elf64_newehdr@@ELFUTILS_1.0+0x24>
    6444:	cmp	w1, #0x2
    6448:	b.eq	6410 <elf64_newehdr@@ELFUTILS_1.0+0x3c>  // b.none
    644c:	mov	w0, #0x15                  	// #21
    6450:	b	63f0 <elf64_newehdr@@ELFUTILS_1.0+0x1c>
    6454:	ret

0000000000006458 <gelf_newehdr@@ELFUTILS_1.0>:
    6458:	cmp	w1, #0x1
    645c:	b.ne	6464 <gelf_newehdr@@ELFUTILS_1.0+0xc>  // b.any
    6460:	b	6350 <elf32_newehdr@@ELFUTILS_1.0>
    6464:	b	63d4 <elf64_newehdr@@ELFUTILS_1.0>

0000000000006468 <gelf_update_ehdr@@ELFUTILS_1.0>:
    6468:	cbz	x0, 658c <gelf_update_ehdr@@ELFUTILS_1.0+0x124>
    646c:	stp	x29, x30, [sp, #-16]!
    6470:	mov	x29, sp
    6474:	ldr	w2, [x0, #24]
    6478:	cmp	w2, #0x3
    647c:	b.eq	6494 <gelf_update_ehdr@@ELFUTILS_1.0+0x2c>  // b.none
    6480:	mov	w0, #0x4                   	// #4
    6484:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6488:	mov	w0, #0x0                   	// #0
    648c:	ldp	x29, x30, [sp], #16
    6490:	ret
    6494:	ldr	w3, [x0, #32]
    6498:	ldr	x2, [x0, #72]
    649c:	cmp	w3, #0x1
    64a0:	b.ne	6564 <gelf_update_ehdr@@ELFUTILS_1.0+0xfc>  // b.any
    64a4:	cbnz	x2, 64b0 <gelf_update_ehdr@@ELFUTILS_1.0+0x48>
    64a8:	mov	w0, #0x1a                  	// #26
    64ac:	b	6484 <gelf_update_ehdr@@ELFUTILS_1.0+0x1c>
    64b0:	ldr	x4, [x1, #24]
    64b4:	mov	x3, #0xffffffff            	// #4294967295
    64b8:	cmp	x4, x3
    64bc:	b.hi	64d8 <gelf_update_ehdr@@ELFUTILS_1.0+0x70>  // b.pmore
    64c0:	ldr	x4, [x1, #32]
    64c4:	cmp	x4, x3
    64c8:	b.hi	64d8 <gelf_update_ehdr@@ELFUTILS_1.0+0x70>  // b.pmore
    64cc:	ldr	x4, [x1, #40]
    64d0:	cmp	x4, x3
    64d4:	b.ls	64e0 <gelf_update_ehdr@@ELFUTILS_1.0+0x78>  // b.plast
    64d8:	mov	w0, #0x21                  	// #33
    64dc:	b	6484 <gelf_update_ehdr@@ELFUTILS_1.0+0x1c>
    64e0:	ldp	x4, x5, [x1]
    64e4:	stp	x4, x5, [x2]
    64e8:	ldrh	w3, [x1, #16]
    64ec:	strh	w3, [x2, #16]
    64f0:	ldrh	w3, [x1, #18]
    64f4:	strh	w3, [x2, #18]
    64f8:	ldr	w3, [x1, #20]
    64fc:	str	w3, [x2, #20]
    6500:	ldr	x3, [x1, #24]
    6504:	str	w3, [x2, #24]
    6508:	ldr	x3, [x1, #32]
    650c:	str	w3, [x2, #28]
    6510:	ldr	x3, [x1, #40]
    6514:	str	w3, [x2, #32]
    6518:	ldr	w3, [x1, #48]
    651c:	str	w3, [x2, #36]
    6520:	ldrh	w3, [x1, #52]
    6524:	strh	w3, [x2, #40]
    6528:	ldrh	w3, [x1, #54]
    652c:	strh	w3, [x2, #42]
    6530:	ldrh	w3, [x1, #56]
    6534:	strh	w3, [x2, #44]
    6538:	ldrh	w3, [x1, #58]
    653c:	strh	w3, [x2, #46]
    6540:	ldrh	w3, [x1, #60]
    6544:	ldrh	w1, [x1, #62]
    6548:	strh	w3, [x2, #48]
    654c:	strh	w1, [x2, #50]
    6550:	ldr	w1, [x0, #116]
    6554:	orr	w1, w1, #0x1
    6558:	str	w1, [x0, #116]
    655c:	mov	w0, #0x1                   	// #1
    6560:	b	648c <gelf_update_ehdr@@ELFUTILS_1.0+0x24>
    6564:	cbz	x2, 64a8 <gelf_update_ehdr@@ELFUTILS_1.0+0x40>
    6568:	ldp	x4, x5, [x1]
    656c:	stp	x4, x5, [x2]
    6570:	ldp	x4, x5, [x1, #16]
    6574:	stp	x4, x5, [x2, #16]
    6578:	ldp	x4, x5, [x1, #32]
    657c:	stp	x4, x5, [x2, #32]
    6580:	ldp	x4, x5, [x1, #48]
    6584:	stp	x4, x5, [x2, #48]
    6588:	b	6550 <gelf_update_ehdr@@ELFUTILS_1.0+0xe8>
    658c:	mov	w0, #0x0                   	// #0
    6590:	ret
    6594:	stp	x29, x30, [sp, #-96]!
    6598:	mov	x29, sp
    659c:	stp	x23, x24, [sp, #48]
    65a0:	ldr	x24, [x0, #88]
    65a4:	stp	x19, x20, [sp, #16]
    65a8:	stp	x21, x22, [sp, #32]
    65ac:	stp	x25, x26, [sp, #64]
    65b0:	cbnz	x24, 6604 <gelf_update_ehdr@@ELFUTILS_1.0+0x19c>
    65b4:	mov	x19, x0
    65b8:	ldr	w0, [x0, #32]
    65bc:	cbnz	w0, 65f4 <gelf_update_ehdr@@ELFUTILS_1.0+0x18c>
    65c0:	mov	w0, #0x1                   	// #1
    65c4:	str	w0, [x19, #32]
    65c8:	add	x1, sp, #0x58
    65cc:	mov	x0, x19
    65d0:	ldr	x23, [x19, #72]
    65d4:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    65d8:	cbnz	w0, 6604 <gelf_update_ehdr@@ELFUTILS_1.0+0x19c>
    65dc:	ldr	x25, [sp, #88]
    65e0:	cbz	x25, 65ec <gelf_update_ehdr@@ELFUTILS_1.0+0x184>
    65e4:	ldr	w1, [x23, #28]
    65e8:	cbnz	w1, 6620 <gelf_update_ehdr@@ELFUTILS_1.0+0x1b8>
    65ec:	mov	w0, #0x2a                  	// #42
    65f0:	b	6600 <gelf_update_ehdr@@ELFUTILS_1.0+0x198>
    65f4:	cmp	w0, #0x1
    65f8:	b.eq	65c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x160>  // b.none
    65fc:	mov	w0, #0x15                  	// #21
    6600:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6604:	mov	x0, x24
    6608:	ldp	x19, x20, [sp, #16]
    660c:	ldp	x21, x22, [sp, #32]
    6610:	ldp	x23, x24, [sp, #48]
    6614:	ldp	x25, x26, [sp, #64]
    6618:	ldp	x29, x30, [sp], #96
    661c:	ret
    6620:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    6624:	cmp	x25, x0
    6628:	b.hi	664c <gelf_update_ehdr@@ELFUTILS_1.0+0x1e4>  // b.pmore
    662c:	ldr	x2, [x19, #48]
    6630:	mov	w0, w1
    6634:	cmp	x2, w1, uxtw
    6638:	b.cc	664c <gelf_update_ehdr@@ELFUTILS_1.0+0x1e4>  // b.lo, b.ul, b.last
    663c:	sub	x1, x2, x0
    6640:	lsl	x22, x25, #5
    6644:	cmp	x1, x25, lsl #5
    6648:	b.cs	6654 <gelf_update_ehdr@@ELFUTILS_1.0+0x1ec>  // b.hs, b.nlast
    664c:	mov	w0, #0x21                  	// #33
    6650:	b	6600 <gelf_update_ehdr@@ELFUTILS_1.0+0x198>
    6654:	ldr	x21, [x19]
    6658:	cbz	x21, 6798 <gelf_update_ehdr@@ELFUTILS_1.0+0x330>
    665c:	cmp	x0, x2
    6660:	b.ne	666c <gelf_update_ehdr@@ELFUTILS_1.0+0x204>  // b.any
    6664:	mov	w0, #0x29                  	// #41
    6668:	b	6600 <gelf_update_ehdr@@ELFUTILS_1.0+0x198>
    666c:	ldr	x1, [x19, #40]
    6670:	add	x0, x0, x1
    6674:	add	x21, x21, x0
    6678:	ldrb	w0, [x23, #5]
    667c:	cmp	w0, #0x1
    6680:	b.ne	6698 <gelf_update_ehdr@@ELFUTILS_1.0+0x230>  // b.any
    6684:	tst	x21, #0x3
    6688:	b.ne	6698 <gelf_update_ehdr@@ELFUTILS_1.0+0x230>  // b.any
    668c:	str	x21, [x19, #88]
    6690:	ldr	x24, [x19, #88]
    6694:	b	6604 <gelf_update_ehdr@@ELFUTILS_1.0+0x19c>
    6698:	mov	x0, x22
    669c:	bl	3100 <malloc@plt>
    66a0:	str	x0, [x19, #88]
    66a4:	mov	x20, x0
    66a8:	cbnz	x0, 66b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x24c>
    66ac:	mov	w0, #0x8                   	// #8
    66b0:	b	6600 <gelf_update_ehdr@@ELFUTILS_1.0+0x198>
    66b4:	ldr	w1, [x19, #120]
    66b8:	mov	w2, #0x81                  	// #129
    66bc:	orr	w1, w1, w2
    66c0:	str	w1, [x19, #120]
    66c4:	ldrb	w1, [x23, #5]
    66c8:	cmp	w1, #0x1
    66cc:	b.ne	66e0 <gelf_update_ehdr@@ELFUTILS_1.0+0x278>  // b.any
    66d0:	mov	x2, x22
    66d4:	mov	x1, x21
    66d8:	bl	3060 <memcpy@plt>
    66dc:	b	6690 <gelf_update_ehdr@@ELFUTILS_1.0+0x228>
    66e0:	ands	x26, x21, #0x3
    66e4:	b.eq	6708 <gelf_update_ehdr@@ELFUTILS_1.0+0x2a0>  // b.none
    66e8:	mov	x0, x22
    66ec:	bl	3100 <malloc@plt>
    66f0:	mov	x23, x0
    66f4:	cbz	x0, 66ac <gelf_update_ehdr@@ELFUTILS_1.0+0x244>
    66f8:	mov	x1, x21
    66fc:	mov	x21, x23
    6700:	mov	x2, x22
    6704:	bl	3060 <memcpy@plt>
    6708:	mov	x1, x21
    670c:	mov	x0, x20
    6710:	mov	x2, #0x0                   	// #0
    6714:	ldr	w3, [x1]
    6718:	add	x2, x2, #0x1
    671c:	cmp	x25, x2
    6720:	add	x1, x1, #0x20
    6724:	rev	w3, w3
    6728:	str	w3, [x0]
    672c:	add	x0, x0, #0x20
    6730:	ldur	w3, [x1, #-28]
    6734:	rev	w3, w3
    6738:	stur	w3, [x0, #-28]
    673c:	ldur	w3, [x1, #-24]
    6740:	rev	w3, w3
    6744:	stur	w3, [x0, #-24]
    6748:	ldur	w3, [x1, #-20]
    674c:	rev	w3, w3
    6750:	stur	w3, [x0, #-20]
    6754:	ldur	w3, [x1, #-16]
    6758:	rev	w3, w3
    675c:	stur	w3, [x0, #-16]
    6760:	ldur	w3, [x1, #-12]
    6764:	rev	w3, w3
    6768:	stur	w3, [x0, #-12]
    676c:	ldur	w3, [x1, #-8]
    6770:	rev	w3, w3
    6774:	stur	w3, [x0, #-8]
    6778:	ldur	w3, [x1, #-4]
    677c:	rev	w3, w3
    6780:	stur	w3, [x0, #-4]
    6784:	b.hi	6714 <gelf_update_ehdr@@ELFUTILS_1.0+0x2ac>  // b.pmore
    6788:	cbz	x26, 6690 <gelf_update_ehdr@@ELFUTILS_1.0+0x228>
    678c:	mov	x0, x21
    6790:	bl	3250 <free@plt>
    6794:	b	6690 <gelf_update_ehdr@@ELFUTILS_1.0+0x228>
    6798:	ldr	w25, [x19, #36]
    679c:	cmn	w25, #0x1
    67a0:	b.eq	68c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x460>  // b.none
    67a4:	mov	x0, x22
    67a8:	bl	3100 <malloc@plt>
    67ac:	str	x0, [x19, #88]
    67b0:	mov	x21, x0
    67b4:	cbz	x0, 66ac <gelf_update_ehdr@@ELFUTILS_1.0+0x244>
    67b8:	ldr	w0, [x19, #120]
    67bc:	mov	x20, #0x0                   	// #0
    67c0:	orr	w0, w0, #0x80
    67c4:	str	w0, [x19, #120]
    67c8:	ldr	x0, [x19, #40]
    67cc:	ldr	w26, [x23, #28]
    67d0:	add	x26, x26, x0
    67d4:	add	x3, x26, x20
    67d8:	sub	x2, x22, x20
    67dc:	add	x1, x21, x20
    67e0:	mov	w0, w25
    67e4:	bl	32a0 <pread@plt>
    67e8:	cmn	x0, #0x1
    67ec:	b.ne	6818 <gelf_update_ehdr@@ELFUTILS_1.0+0x3b0>  // b.any
    67f0:	bl	3390 <__errno_location@plt>
    67f4:	ldr	w0, [x0]
    67f8:	cmp	w0, #0x4
    67fc:	b.eq	67d4 <gelf_update_ehdr@@ELFUTILS_1.0+0x36c>  // b.none
    6800:	mov	w0, #0x13                  	// #19
    6804:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6808:	ldr	x0, [x19, #88]
    680c:	bl	3250 <free@plt>
    6810:	str	xzr, [x19, #88]
    6814:	b	6604 <gelf_update_ehdr@@ELFUTILS_1.0+0x19c>
    6818:	cmp	x0, #0x0
    681c:	b.gt	68b8 <gelf_update_ehdr@@ELFUTILS_1.0+0x450>
    6820:	csel	x20, x20, x0, eq  // eq = none
    6824:	cmp	x22, x20
    6828:	b.ne	6800 <gelf_update_ehdr@@ELFUTILS_1.0+0x398>  // b.any
    682c:	ldrb	w0, [x23, #5]
    6830:	cmp	w0, #0x1
    6834:	b.eq	6690 <gelf_update_ehdr@@ELFUTILS_1.0+0x228>  // b.none
    6838:	ldr	x0, [x19, #88]
    683c:	mov	x1, #0x0                   	// #0
    6840:	ldr	x3, [sp, #88]
    6844:	cmp	x3, x1
    6848:	b.eq	6690 <gelf_update_ehdr@@ELFUTILS_1.0+0x228>  // b.none
    684c:	ldr	w2, [x0]
    6850:	add	x1, x1, #0x1
    6854:	add	x0, x0, #0x20
    6858:	rev	w2, w2
    685c:	stur	w2, [x0, #-32]
    6860:	ldur	w2, [x0, #-28]
    6864:	rev	w2, w2
    6868:	stur	w2, [x0, #-28]
    686c:	ldur	w2, [x0, #-24]
    6870:	rev	w2, w2
    6874:	stur	w2, [x0, #-24]
    6878:	ldur	w2, [x0, #-20]
    687c:	rev	w2, w2
    6880:	stur	w2, [x0, #-20]
    6884:	ldur	w2, [x0, #-16]
    6888:	rev	w2, w2
    688c:	stur	w2, [x0, #-16]
    6890:	ldur	w2, [x0, #-12]
    6894:	rev	w2, w2
    6898:	stur	w2, [x0, #-12]
    689c:	ldur	w2, [x0, #-8]
    68a0:	rev	w2, w2
    68a4:	stur	w2, [x0, #-8]
    68a8:	ldur	w2, [x0, #-4]
    68ac:	rev	w2, w2
    68b0:	stur	w2, [x0, #-4]
    68b4:	b	6844 <gelf_update_ehdr@@ELFUTILS_1.0+0x3dc>
    68b8:	add	x20, x20, x0
    68bc:	cmp	x22, x20
    68c0:	b.hi	67d4 <gelf_update_ehdr@@ELFUTILS_1.0+0x36c>  // b.pmore
    68c4:	b	6824 <gelf_update_ehdr@@ELFUTILS_1.0+0x3bc>
    68c8:	mov	w0, #0x1b                  	// #27
    68cc:	b	6600 <gelf_update_ehdr@@ELFUTILS_1.0+0x198>

00000000000068d0 <elf32_getphdr@@ELFUTILS_1.0>:
    68d0:	cbz	x0, 690c <elf32_getphdr@@ELFUTILS_1.0+0x3c>
    68d4:	ldr	w2, [x0, #24]
    68d8:	cmp	w2, #0x3
    68dc:	b.eq	6900 <elf32_getphdr@@ELFUTILS_1.0+0x30>  // b.none
    68e0:	stp	x29, x30, [sp, #-16]!
    68e4:	mov	w0, #0x4                   	// #4
    68e8:	mov	x29, sp
    68ec:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    68f0:	mov	x1, #0x0                   	// #0
    68f4:	mov	x0, x1
    68f8:	ldp	x29, x30, [sp], #16
    68fc:	ret
    6900:	ldr	x1, [x0, #88]
    6904:	cbnz	x1, 6910 <elf32_getphdr@@ELFUTILS_1.0+0x40>
    6908:	b	6594 <gelf_update_ehdr@@ELFUTILS_1.0+0x12c>
    690c:	mov	x1, #0x0                   	// #0
    6910:	mov	x0, x1
    6914:	ret
    6918:	stp	x29, x30, [sp, #-96]!
    691c:	mov	x29, sp
    6920:	stp	x25, x26, [sp, #64]
    6924:	ldr	x25, [x0, #88]
    6928:	stp	x19, x20, [sp, #16]
    692c:	stp	x21, x22, [sp, #32]
    6930:	stp	x23, x24, [sp, #48]
    6934:	cbnz	x25, 6988 <elf32_getphdr@@ELFUTILS_1.0+0xb8>
    6938:	mov	x19, x0
    693c:	ldr	w0, [x0, #32]
    6940:	cbnz	w0, 6978 <elf32_getphdr@@ELFUTILS_1.0+0xa8>
    6944:	mov	w0, #0x2                   	// #2
    6948:	str	w0, [x19, #32]
    694c:	add	x1, sp, #0x58
    6950:	mov	x0, x19
    6954:	ldr	x23, [x19, #72]
    6958:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    695c:	cbnz	w0, 6988 <elf32_getphdr@@ELFUTILS_1.0+0xb8>
    6960:	ldr	x24, [sp, #88]
    6964:	cbz	x24, 6970 <elf32_getphdr@@ELFUTILS_1.0+0xa0>
    6968:	ldr	x0, [x23, #32]
    696c:	cbnz	x0, 69a4 <elf32_getphdr@@ELFUTILS_1.0+0xd4>
    6970:	mov	w0, #0x2a                  	// #42
    6974:	b	6984 <elf32_getphdr@@ELFUTILS_1.0+0xb4>
    6978:	cmp	w0, #0x2
    697c:	b.eq	694c <elf32_getphdr@@ELFUTILS_1.0+0x7c>  // b.none
    6980:	mov	w0, #0x15                  	// #21
    6984:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6988:	mov	x0, x25
    698c:	ldp	x19, x20, [sp, #16]
    6990:	ldp	x21, x22, [sp, #32]
    6994:	ldp	x23, x24, [sp, #48]
    6998:	ldp	x25, x26, [sp, #64]
    699c:	ldp	x29, x30, [sp], #96
    69a0:	ret
    69a4:	mov	x1, #0x2492                	// #9362
    69a8:	movk	x1, #0x9249, lsl #16
    69ac:	movk	x1, #0x4924, lsl #32
    69b0:	movk	x1, #0x492, lsl #48
    69b4:	cmp	x24, x1
    69b8:	b.hi	69dc <elf32_getphdr@@ELFUTILS_1.0+0x10c>  // b.pmore
    69bc:	ldr	x2, [x19, #48]
    69c0:	cmp	x0, x2
    69c4:	b.hi	69dc <elf32_getphdr@@ELFUTILS_1.0+0x10c>  // b.pmore
    69c8:	mov	x22, #0x38                  	// #56
    69cc:	sub	x1, x2, x0
    69d0:	mul	x22, x24, x22
    69d4:	cmp	x1, x22
    69d8:	b.cs	69e4 <elf32_getphdr@@ELFUTILS_1.0+0x114>  // b.hs, b.nlast
    69dc:	mov	w0, #0x21                  	// #33
    69e0:	b	6984 <elf32_getphdr@@ELFUTILS_1.0+0xb4>
    69e4:	ldr	x21, [x19]
    69e8:	cbz	x21, 6b28 <elf32_getphdr@@ELFUTILS_1.0+0x258>
    69ec:	cmp	x0, x2
    69f0:	b.ne	69fc <elf32_getphdr@@ELFUTILS_1.0+0x12c>  // b.any
    69f4:	mov	w0, #0x29                  	// #41
    69f8:	b	6984 <elf32_getphdr@@ELFUTILS_1.0+0xb4>
    69fc:	ldr	x1, [x19, #40]
    6a00:	add	x0, x0, x1
    6a04:	add	x21, x21, x0
    6a08:	ldrb	w0, [x23, #5]
    6a0c:	cmp	w0, #0x1
    6a10:	b.ne	6a28 <elf32_getphdr@@ELFUTILS_1.0+0x158>  // b.any
    6a14:	tst	x21, #0x7
    6a18:	b.ne	6a28 <elf32_getphdr@@ELFUTILS_1.0+0x158>  // b.any
    6a1c:	str	x21, [x19, #88]
    6a20:	ldr	x25, [x19, #88]
    6a24:	b	6988 <elf32_getphdr@@ELFUTILS_1.0+0xb8>
    6a28:	mov	x0, x22
    6a2c:	bl	3100 <malloc@plt>
    6a30:	str	x0, [x19, #88]
    6a34:	mov	x20, x0
    6a38:	cbnz	x0, 6a44 <elf32_getphdr@@ELFUTILS_1.0+0x174>
    6a3c:	mov	w0, #0x8                   	// #8
    6a40:	b	6984 <elf32_getphdr@@ELFUTILS_1.0+0xb4>
    6a44:	ldr	w1, [x19, #120]
    6a48:	mov	w2, #0x81                  	// #129
    6a4c:	orr	w1, w1, w2
    6a50:	str	w1, [x19, #120]
    6a54:	ldrb	w1, [x23, #5]
    6a58:	cmp	w1, #0x1
    6a5c:	b.ne	6a70 <elf32_getphdr@@ELFUTILS_1.0+0x1a0>  // b.any
    6a60:	mov	x2, x22
    6a64:	mov	x1, x21
    6a68:	bl	3060 <memcpy@plt>
    6a6c:	b	6a20 <elf32_getphdr@@ELFUTILS_1.0+0x150>
    6a70:	ands	x26, x21, #0x7
    6a74:	b.eq	6a98 <elf32_getphdr@@ELFUTILS_1.0+0x1c8>  // b.none
    6a78:	mov	x0, x22
    6a7c:	bl	3100 <malloc@plt>
    6a80:	mov	x23, x0
    6a84:	cbz	x0, 6a3c <elf32_getphdr@@ELFUTILS_1.0+0x16c>
    6a88:	mov	x1, x21
    6a8c:	mov	x21, x23
    6a90:	mov	x2, x22
    6a94:	bl	3060 <memcpy@plt>
    6a98:	mov	x1, x21
    6a9c:	mov	x0, x20
    6aa0:	mov	x2, #0x0                   	// #0
    6aa4:	ldr	w3, [x1]
    6aa8:	add	x2, x2, #0x1
    6aac:	cmp	x24, x2
    6ab0:	add	x1, x1, #0x38
    6ab4:	rev	w3, w3
    6ab8:	str	w3, [x0]
    6abc:	ldur	x3, [x1, #-48]
    6ac0:	add	x0, x0, #0x38
    6ac4:	rev	x3, x3
    6ac8:	stur	x3, [x0, #-48]
    6acc:	ldur	x3, [x1, #-40]
    6ad0:	rev	x3, x3
    6ad4:	stur	x3, [x0, #-40]
    6ad8:	ldur	x3, [x1, #-32]
    6adc:	rev	x3, x3
    6ae0:	stur	x3, [x0, #-32]
    6ae4:	ldur	x3, [x1, #-24]
    6ae8:	rev	x3, x3
    6aec:	stur	x3, [x0, #-24]
    6af0:	ldur	x3, [x1, #-16]
    6af4:	rev	x3, x3
    6af8:	stur	x3, [x0, #-16]
    6afc:	ldur	w3, [x1, #-52]
    6b00:	rev	w3, w3
    6b04:	stur	w3, [x0, #-52]
    6b08:	ldur	x3, [x1, #-8]
    6b0c:	rev	x3, x3
    6b10:	stur	x3, [x0, #-8]
    6b14:	b.hi	6aa4 <elf32_getphdr@@ELFUTILS_1.0+0x1d4>  // b.pmore
    6b18:	cbz	x26, 6a20 <elf32_getphdr@@ELFUTILS_1.0+0x150>
    6b1c:	mov	x0, x21
    6b20:	bl	3250 <free@plt>
    6b24:	b	6a20 <elf32_getphdr@@ELFUTILS_1.0+0x150>
    6b28:	ldr	w24, [x19, #36]
    6b2c:	cmn	w24, #0x1
    6b30:	b.eq	6c58 <elf32_getphdr@@ELFUTILS_1.0+0x388>  // b.none
    6b34:	mov	x0, x22
    6b38:	bl	3100 <malloc@plt>
    6b3c:	str	x0, [x19, #88]
    6b40:	mov	x21, x0
    6b44:	cbz	x0, 6a3c <elf32_getphdr@@ELFUTILS_1.0+0x16c>
    6b48:	ldr	w0, [x19, #120]
    6b4c:	mov	x20, #0x0                   	// #0
    6b50:	ldr	x26, [x19, #40]
    6b54:	orr	w0, w0, #0x80
    6b58:	str	w0, [x19, #120]
    6b5c:	ldr	x0, [x23, #32]
    6b60:	add	x26, x26, x0
    6b64:	add	x3, x26, x20
    6b68:	sub	x2, x22, x20
    6b6c:	add	x1, x21, x20
    6b70:	mov	w0, w24
    6b74:	bl	32a0 <pread@plt>
    6b78:	cmn	x0, #0x1
    6b7c:	b.ne	6ba8 <elf32_getphdr@@ELFUTILS_1.0+0x2d8>  // b.any
    6b80:	bl	3390 <__errno_location@plt>
    6b84:	ldr	w0, [x0]
    6b88:	cmp	w0, #0x4
    6b8c:	b.eq	6b64 <elf32_getphdr@@ELFUTILS_1.0+0x294>  // b.none
    6b90:	mov	w0, #0x13                  	// #19
    6b94:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6b98:	ldr	x0, [x19, #88]
    6b9c:	bl	3250 <free@plt>
    6ba0:	str	xzr, [x19, #88]
    6ba4:	b	6988 <elf32_getphdr@@ELFUTILS_1.0+0xb8>
    6ba8:	cmp	x0, #0x0
    6bac:	b.gt	6c48 <elf32_getphdr@@ELFUTILS_1.0+0x378>
    6bb0:	csel	x20, x20, x0, eq  // eq = none
    6bb4:	cmp	x22, x20
    6bb8:	b.ne	6b90 <elf32_getphdr@@ELFUTILS_1.0+0x2c0>  // b.any
    6bbc:	ldrb	w0, [x23, #5]
    6bc0:	cmp	w0, #0x1
    6bc4:	b.eq	6a20 <elf32_getphdr@@ELFUTILS_1.0+0x150>  // b.none
    6bc8:	ldr	x0, [x19, #88]
    6bcc:	mov	x2, #0x38                  	// #56
    6bd0:	ldr	x1, [sp, #88]
    6bd4:	madd	x1, x1, x2, x0
    6bd8:	cmp	x1, x0
    6bdc:	b.eq	6a20 <elf32_getphdr@@ELFUTILS_1.0+0x150>  // b.none
    6be0:	ldr	w2, [x0]
    6be4:	add	x0, x0, #0x38
    6be8:	rev	w2, w2
    6bec:	stur	w2, [x0, #-56]
    6bf0:	ldur	x2, [x0, #-48]
    6bf4:	rev	x2, x2
    6bf8:	stur	x2, [x0, #-48]
    6bfc:	ldur	x2, [x0, #-40]
    6c00:	rev	x2, x2
    6c04:	stur	x2, [x0, #-40]
    6c08:	ldur	x2, [x0, #-32]
    6c0c:	rev	x2, x2
    6c10:	stur	x2, [x0, #-32]
    6c14:	ldur	x2, [x0, #-24]
    6c18:	rev	x2, x2
    6c1c:	stur	x2, [x0, #-24]
    6c20:	ldur	x2, [x0, #-16]
    6c24:	rev	x2, x2
    6c28:	stur	x2, [x0, #-16]
    6c2c:	ldur	w2, [x0, #-52]
    6c30:	rev	w2, w2
    6c34:	stur	w2, [x0, #-52]
    6c38:	ldur	x2, [x0, #-8]
    6c3c:	rev	x2, x2
    6c40:	stur	x2, [x0, #-8]
    6c44:	b	6bd8 <elf32_getphdr@@ELFUTILS_1.0+0x308>
    6c48:	add	x20, x20, x0
    6c4c:	cmp	x22, x20
    6c50:	b.hi	6b64 <elf32_getphdr@@ELFUTILS_1.0+0x294>  // b.pmore
    6c54:	b	6bb4 <elf32_getphdr@@ELFUTILS_1.0+0x2e4>
    6c58:	mov	w0, #0x1b                  	// #27
    6c5c:	b	6984 <elf32_getphdr@@ELFUTILS_1.0+0xb4>

0000000000006c60 <elf64_getphdr@@ELFUTILS_1.0>:
    6c60:	cbz	x0, 6c9c <elf64_getphdr@@ELFUTILS_1.0+0x3c>
    6c64:	ldr	w2, [x0, #24]
    6c68:	cmp	w2, #0x3
    6c6c:	b.eq	6c90 <elf64_getphdr@@ELFUTILS_1.0+0x30>  // b.none
    6c70:	stp	x29, x30, [sp, #-16]!
    6c74:	mov	w0, #0x4                   	// #4
    6c78:	mov	x29, sp
    6c7c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6c80:	mov	x1, #0x0                   	// #0
    6c84:	mov	x0, x1
    6c88:	ldp	x29, x30, [sp], #16
    6c8c:	ret
    6c90:	ldr	x1, [x0, #88]
    6c94:	cbnz	x1, 6ca0 <elf64_getphdr@@ELFUTILS_1.0+0x40>
    6c98:	b	6918 <elf32_getphdr@@ELFUTILS_1.0+0x48>
    6c9c:	mov	x1, #0x0                   	// #0
    6ca0:	mov	x0, x1
    6ca4:	ret

0000000000006ca8 <gelf_getphdr@@ELFUTILS_1.0>:
    6ca8:	stp	x29, x30, [sp, #-64]!
    6cac:	mov	x29, sp
    6cb0:	stp	x19, x20, [sp, #16]
    6cb4:	stp	x21, x22, [sp, #32]
    6cb8:	cbz	x0, 6d20 <gelf_getphdr@@ELFUTILS_1.0+0x78>
    6cbc:	mov	w22, w1
    6cc0:	ldr	w1, [x0, #24]
    6cc4:	mov	x21, x0
    6cc8:	cmp	w1, #0x3
    6ccc:	b.eq	6cdc <gelf_getphdr@@ELFUTILS_1.0+0x34>  // b.none
    6cd0:	mov	w0, #0x4                   	// #4
    6cd4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6cd8:	b	6d20 <gelf_getphdr@@ELFUTILS_1.0+0x78>
    6cdc:	mov	x19, x2
    6ce0:	cbnz	x2, 6d00 <gelf_getphdr@@ELFUTILS_1.0+0x58>
    6ce4:	mov	w0, #0x17                  	// #23
    6ce8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6cec:	mov	x0, x19
    6cf0:	ldp	x19, x20, [sp, #16]
    6cf4:	ldp	x21, x22, [sp, #32]
    6cf8:	ldp	x29, x30, [sp], #64
    6cfc:	ret
    6d00:	ldr	w1, [x0, #32]
    6d04:	ldr	x20, [x0, #88]
    6d08:	cmp	w1, #0x1
    6d0c:	b.ne	6d98 <gelf_getphdr@@ELFUTILS_1.0+0xf0>  // b.any
    6d10:	cbnz	x20, 6d28 <gelf_getphdr@@ELFUTILS_1.0+0x80>
    6d14:	bl	68d0 <elf32_getphdr@@ELFUTILS_1.0>
    6d18:	mov	x20, x0
    6d1c:	cbnz	x0, 6d28 <gelf_getphdr@@ELFUTILS_1.0+0x80>
    6d20:	mov	x19, #0x0                   	// #0
    6d24:	b	6cec <gelf_getphdr@@ELFUTILS_1.0+0x44>
    6d28:	add	x1, sp, #0x38
    6d2c:	mov	x0, x21
    6d30:	bl	e564 <gelf_update_verdaux@@ELFUTILS_1.0+0x104>
    6d34:	cbnz	w0, 6d48 <gelf_getphdr@@ELFUTILS_1.0+0xa0>
    6d38:	ldr	x1, [sp, #56]
    6d3c:	sxtw	x0, w22
    6d40:	cmp	x1, w22, sxtw
    6d44:	b.hi	6d50 <gelf_getphdr@@ELFUTILS_1.0+0xa8>  // b.pmore
    6d48:	mov	w0, #0x16                  	// #22
    6d4c:	b	6cd4 <gelf_getphdr@@ELFUTILS_1.0+0x2c>
    6d50:	lsl	x1, x0, #5
    6d54:	add	x0, x20, x0, lsl #5
    6d58:	ldr	w1, [x20, x1]
    6d5c:	str	w1, [x19]
    6d60:	ldr	w1, [x0, #4]
    6d64:	str	x1, [x19, #8]
    6d68:	ldr	w1, [x0, #8]
    6d6c:	str	x1, [x19, #16]
    6d70:	ldr	w1, [x0, #12]
    6d74:	str	x1, [x19, #24]
    6d78:	ldr	w1, [x0, #16]
    6d7c:	str	x1, [x19, #32]
    6d80:	ldr	w1, [x0, #20]
    6d84:	str	x1, [x19, #40]
    6d88:	ldp	w1, w0, [x0, #24]
    6d8c:	str	w1, [x19, #4]
    6d90:	str	x0, [x19, #48]
    6d94:	b	6cec <gelf_getphdr@@ELFUTILS_1.0+0x44>
    6d98:	cbnz	x20, 6da8 <gelf_getphdr@@ELFUTILS_1.0+0x100>
    6d9c:	bl	6c60 <elf64_getphdr@@ELFUTILS_1.0>
    6da0:	mov	x20, x0
    6da4:	cbz	x0, 6d20 <gelf_getphdr@@ELFUTILS_1.0+0x78>
    6da8:	add	x1, sp, #0x38
    6dac:	mov	x0, x21
    6db0:	bl	e564 <gelf_update_verdaux@@ELFUTILS_1.0+0x104>
    6db4:	cbnz	w0, 6d48 <gelf_getphdr@@ELFUTILS_1.0+0xa0>
    6db8:	ldr	x0, [sp, #56]
    6dbc:	cmp	x0, w22, sxtw
    6dc0:	b.ls	6d48 <gelf_getphdr@@ELFUTILS_1.0+0xa0>  // b.plast
    6dc4:	mov	w1, #0x38                  	// #56
    6dc8:	mov	x0, x19
    6dcc:	mov	x2, #0x38                  	// #56
    6dd0:	smaddl	x1, w22, w1, x20
    6dd4:	bl	3060 <memcpy@plt>
    6dd8:	mov	x19, x0
    6ddc:	b	6cec <gelf_getphdr@@ELFUTILS_1.0+0x44>

0000000000006de0 <elf32_newphdr@@ELFUTILS_1.0>:
    6de0:	stp	x29, x30, [sp, #-48]!
    6de4:	mov	x29, sp
    6de8:	stp	x19, x20, [sp, #16]
    6dec:	stp	x21, x22, [sp, #32]
    6df0:	cbnz	x0, 6e0c <elf32_newphdr@@ELFUTILS_1.0+0x2c>
    6df4:	mov	x20, #0x0                   	// #0
    6df8:	mov	x0, x20
    6dfc:	ldp	x19, x20, [sp, #16]
    6e00:	ldp	x21, x22, [sp, #32]
    6e04:	ldp	x29, x30, [sp], #48
    6e08:	ret
    6e0c:	mov	x19, x0
    6e10:	ldr	w0, [x0, #24]
    6e14:	cmp	w0, #0x3
    6e18:	b.eq	6e28 <elf32_newphdr@@ELFUTILS_1.0+0x48>  // b.none
    6e1c:	mov	w0, #0x4                   	// #4
    6e20:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6e24:	b	6df4 <elf32_newphdr@@ELFUTILS_1.0+0x14>
    6e28:	mov	x21, x1
    6e2c:	tst	x1, #0xffffffff00000000
    6e30:	b.eq	6e3c <elf32_newphdr@@ELFUTILS_1.0+0x5c>  // b.none
    6e34:	mov	w0, #0x17                  	// #23
    6e38:	b	6e20 <elf32_newphdr@@ELFUTILS_1.0+0x40>
    6e3c:	ldr	w0, [x19, #32]
    6e40:	cbnz	w0, 6e60 <elf32_newphdr@@ELFUTILS_1.0+0x80>
    6e44:	mov	w0, #0x1                   	// #1
    6e48:	str	w0, [x19, #32]
    6e4c:	ldr	x20, [x19, #72]
    6e50:	cbnz	x20, 6e70 <elf32_newphdr@@ELFUTILS_1.0+0x90>
    6e54:	mov	w0, #0x1a                  	// #26
    6e58:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    6e5c:	b	6df8 <elf32_newphdr@@ELFUTILS_1.0+0x18>
    6e60:	cmp	w0, #0x1
    6e64:	b.eq	6e4c <elf32_newphdr@@ELFUTILS_1.0+0x6c>  // b.none
    6e68:	mov	w0, #0x15                  	// #21
    6e6c:	b	6e20 <elf32_newphdr@@ELFUTILS_1.0+0x40>
    6e70:	cbnz	x21, 6ed0 <elf32_newphdr@@ELFUTILS_1.0+0xf0>
    6e74:	ldr	x0, [x19, #88]
    6e78:	cbz	x0, 6df4 <elf32_newphdr@@ELFUTILS_1.0+0x14>
    6e7c:	ldr	w1, [x19, #120]
    6e80:	tbz	w1, #7, 6e88 <elf32_newphdr@@ELFUTILS_1.0+0xa8>
    6e84:	bl	3250 <free@plt>
    6e88:	ldr	x0, [x19, #72]
    6e8c:	str	xzr, [x19, #88]
    6e90:	strh	wzr, [x0, #44]
    6e94:	ldr	w0, [x19, #200]
    6e98:	cbz	w0, 6ea4 <elf32_newphdr@@ELFUTILS_1.0+0xc4>
    6e9c:	ldr	x0, [x19, #360]
    6ea0:	str	wzr, [x0, #28]
    6ea4:	ldr	x0, [x19, #72]
    6ea8:	mov	w1, #0x20                  	// #32
    6eac:	strh	w1, [x0, #42]
    6eb0:	ldr	w0, [x19, #120]
    6eb4:	orr	w0, w0, #0x1
    6eb8:	str	w0, [x19, #120]
    6ebc:	ldr	w0, [x19, #56]
    6ec0:	orr	w0, w0, #0x1
    6ec4:	str	w0, [x19, #56]
    6ec8:	mov	w0, #0x0                   	// #0
    6ecc:	b	6e20 <elf32_newphdr@@ELFUTILS_1.0+0x40>
    6ed0:	ldrh	w0, [x20, #44]
    6ed4:	cmp	x0, x21
    6ed8:	b.ne	6f10 <elf32_newphdr@@ELFUTILS_1.0+0x130>  // b.any
    6edc:	mov	x0, #0xffff                	// #65535
    6ee0:	cmp	x21, x0
    6ee4:	b.eq	6f1c <elf32_newphdr@@ELFUTILS_1.0+0x13c>  // b.none
    6ee8:	ldr	x3, [x19, #88]
    6eec:	cbnz	x3, 6fe0 <elf32_newphdr@@ELFUTILS_1.0+0x200>
    6ef0:	ldr	x0, [x19, #88]
    6ef4:	lsl	x22, x21, #5
    6ef8:	mov	x1, x22
    6efc:	bl	31a0 <realloc@plt>
    6f00:	mov	x20, x0
    6f04:	cbnz	x0, 6f2c <elf32_newphdr@@ELFUTILS_1.0+0x14c>
    6f08:	mov	w0, #0x8                   	// #8
    6f0c:	b	6e58 <elf32_newphdr@@ELFUTILS_1.0+0x78>
    6f10:	mov	x0, #0xfffe                	// #65534
    6f14:	cmp	x21, x0
    6f18:	b.ls	6ef0 <elf32_newphdr@@ELFUTILS_1.0+0x110>  // b.plast
    6f1c:	ldr	x20, [x19, #360]
    6f20:	cbnz	x20, 6ef0 <elf32_newphdr@@ELFUTILS_1.0+0x110>
    6f24:	mov	w0, #0x20                  	// #32
    6f28:	b	6e58 <elf32_newphdr@@ELFUTILS_1.0+0x78>
    6f2c:	str	x20, [x19, #88]
    6f30:	mov	x0, #0xfffe                	// #65534
    6f34:	cmp	x21, x0
    6f38:	b.ls	6fd4 <elf32_newphdr@@ELFUTILS_1.0+0x1f4>  // b.plast
    6f3c:	ldr	w0, [x19, #200]
    6f40:	cbnz	w0, 6f74 <elf32_newphdr@@ELFUTILS_1.0+0x194>
    6f44:	ldr	w0, [x19, #204]
    6f48:	cbnz	w0, 6f6c <elf32_newphdr@@ELFUTILS_1.0+0x18c>
    6f4c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    6f50:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    6f54:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    6f58:	add	x3, x3, #0x863
    6f5c:	add	x1, x1, #0x7c8
    6f60:	add	x0, x0, #0x7d8
    6f64:	mov	w2, #0x97                  	// #151
    6f68:	bl	3380 <__assert_fail@plt>
    6f6c:	mov	w0, #0x1                   	// #1
    6f70:	str	w0, [x19, #200]
    6f74:	ldr	x1, [x19, #360]
    6f78:	ldr	x0, [x19, #72]
    6f7c:	ldr	w3, [x19, #368]
    6f80:	str	w21, [x1, #28]
    6f84:	mov	w1, #0xffffffff            	// #-1
    6f88:	orr	w3, w3, #0x1
    6f8c:	str	w3, [x19, #368]
    6f90:	strh	w1, [x0, #44]
    6f94:	mov	w1, #0x0                   	// #0
    6f98:	mov	x2, x22
    6f9c:	mov	x0, x20
    6fa0:	bl	3140 <memset@plt>
    6fa4:	ldr	x0, [x19, #72]
    6fa8:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    6fac:	ldr	x1, [x1, #1608]
    6fb0:	strh	w1, [x0, #42]
    6fb4:	mov	w1, #0x81                  	// #129
    6fb8:	ldr	w0, [x19, #120]
    6fbc:	orr	w0, w0, w1
    6fc0:	str	w0, [x19, #120]
    6fc4:	ldr	w0, [x19, #56]
    6fc8:	orr	w0, w0, #0x1
    6fcc:	str	w0, [x19, #56]
    6fd0:	b	6df8 <elf32_newphdr@@ELFUTILS_1.0+0x18>
    6fd4:	ldr	x0, [x19, #72]
    6fd8:	strh	w21, [x0, #44]
    6fdc:	b	6f94 <elf32_newphdr@@ELFUTILS_1.0+0x1b4>
    6fe0:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    6fe4:	ldrh	w1, [x20, #42]
    6fe8:	ldr	x0, [x0, #1608]
    6fec:	cmp	x1, x0
    6ff0:	b.eq	7014 <elf32_newphdr@@ELFUTILS_1.0+0x234>  // b.none
    6ff4:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    6ff8:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    6ffc:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7000:	add	x3, x3, #0x863
    7004:	add	x1, x1, #0x7c8
    7008:	add	x0, x0, #0x805
    700c:	mov	w2, #0xb2                  	// #178
    7010:	b	6f68 <elf32_newphdr@@ELFUTILS_1.0+0x188>
    7014:	ldr	w0, [x19, #120]
    7018:	lsl	x2, x21, #5
    701c:	mov	w1, #0x0                   	// #0
    7020:	orr	w0, w0, #0x1
    7024:	str	w0, [x19, #120]
    7028:	mov	x0, x3
    702c:	bl	3140 <memset@plt>
    7030:	mov	x20, x0
    7034:	b	6df8 <elf32_newphdr@@ELFUTILS_1.0+0x18>

0000000000007038 <elf64_newphdr@@ELFUTILS_1.0>:
    7038:	stp	x29, x30, [sp, #-48]!
    703c:	mov	x29, sp
    7040:	stp	x19, x20, [sp, #16]
    7044:	stp	x21, x22, [sp, #32]
    7048:	cbnz	x0, 7064 <elf64_newphdr@@ELFUTILS_1.0+0x2c>
    704c:	mov	x20, #0x0                   	// #0
    7050:	mov	x0, x20
    7054:	ldp	x19, x20, [sp, #16]
    7058:	ldp	x21, x22, [sp, #32]
    705c:	ldp	x29, x30, [sp], #48
    7060:	ret
    7064:	mov	x19, x0
    7068:	ldr	w0, [x0, #24]
    706c:	cmp	w0, #0x3
    7070:	b.eq	7080 <elf64_newphdr@@ELFUTILS_1.0+0x48>  // b.none
    7074:	mov	w0, #0x4                   	// #4
    7078:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    707c:	b	704c <elf64_newphdr@@ELFUTILS_1.0+0x14>
    7080:	mov	x21, x1
    7084:	tst	x1, #0xffffffff00000000
    7088:	b.eq	7094 <elf64_newphdr@@ELFUTILS_1.0+0x5c>  // b.none
    708c:	mov	w0, #0x17                  	// #23
    7090:	b	7078 <elf64_newphdr@@ELFUTILS_1.0+0x40>
    7094:	ldr	w0, [x19, #32]
    7098:	cbnz	w0, 70b8 <elf64_newphdr@@ELFUTILS_1.0+0x80>
    709c:	mov	w0, #0x2                   	// #2
    70a0:	str	w0, [x19, #32]
    70a4:	ldr	x20, [x19, #72]
    70a8:	cbnz	x20, 70c8 <elf64_newphdr@@ELFUTILS_1.0+0x90>
    70ac:	mov	w0, #0x1a                  	// #26
    70b0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    70b4:	b	7050 <elf64_newphdr@@ELFUTILS_1.0+0x18>
    70b8:	cmp	w0, #0x2
    70bc:	b.eq	70a4 <elf64_newphdr@@ELFUTILS_1.0+0x6c>  // b.none
    70c0:	mov	w0, #0x15                  	// #21
    70c4:	b	7078 <elf64_newphdr@@ELFUTILS_1.0+0x40>
    70c8:	cbnz	x21, 7128 <elf64_newphdr@@ELFUTILS_1.0+0xf0>
    70cc:	ldr	x0, [x19, #88]
    70d0:	cbz	x0, 704c <elf64_newphdr@@ELFUTILS_1.0+0x14>
    70d4:	ldr	w1, [x19, #120]
    70d8:	tbz	w1, #7, 70e0 <elf64_newphdr@@ELFUTILS_1.0+0xa8>
    70dc:	bl	3250 <free@plt>
    70e0:	ldr	x0, [x19, #72]
    70e4:	str	xzr, [x19, #88]
    70e8:	strh	wzr, [x0, #56]
    70ec:	ldr	w0, [x19, #200]
    70f0:	cbz	w0, 70fc <elf64_newphdr@@ELFUTILS_1.0+0xc4>
    70f4:	ldr	x0, [x19, #360]
    70f8:	str	wzr, [x0, #44]
    70fc:	ldr	x0, [x19, #72]
    7100:	mov	w1, #0x38                  	// #56
    7104:	strh	w1, [x0, #54]
    7108:	ldr	w0, [x19, #120]
    710c:	orr	w0, w0, #0x1
    7110:	str	w0, [x19, #120]
    7114:	ldr	w0, [x19, #56]
    7118:	orr	w0, w0, #0x1
    711c:	str	w0, [x19, #56]
    7120:	mov	w0, #0x0                   	// #0
    7124:	b	7078 <elf64_newphdr@@ELFUTILS_1.0+0x40>
    7128:	ldrh	w0, [x20, #56]
    712c:	cmp	x0, x21
    7130:	b.ne	716c <elf64_newphdr@@ELFUTILS_1.0+0x134>  // b.any
    7134:	mov	x0, #0xffff                	// #65535
    7138:	cmp	x21, x0
    713c:	b.eq	7178 <elf64_newphdr@@ELFUTILS_1.0+0x140>  // b.none
    7140:	ldr	x3, [x19, #88]
    7144:	cbnz	x3, 723c <elf64_newphdr@@ELFUTILS_1.0+0x204>
    7148:	mov	x22, #0x38                  	// #56
    714c:	ldr	x0, [x19, #88]
    7150:	mul	x22, x21, x22
    7154:	mov	x1, x22
    7158:	bl	31a0 <realloc@plt>
    715c:	mov	x20, x0
    7160:	cbnz	x0, 7188 <elf64_newphdr@@ELFUTILS_1.0+0x150>
    7164:	mov	w0, #0x8                   	// #8
    7168:	b	70b0 <elf64_newphdr@@ELFUTILS_1.0+0x78>
    716c:	mov	x0, #0xfffe                	// #65534
    7170:	cmp	x21, x0
    7174:	b.ls	7148 <elf64_newphdr@@ELFUTILS_1.0+0x110>  // b.plast
    7178:	ldr	x20, [x19, #360]
    717c:	cbnz	x20, 7148 <elf64_newphdr@@ELFUTILS_1.0+0x110>
    7180:	mov	w0, #0x20                  	// #32
    7184:	b	70b0 <elf64_newphdr@@ELFUTILS_1.0+0x78>
    7188:	str	x20, [x19, #88]
    718c:	mov	x0, #0xfffe                	// #65534
    7190:	cmp	x21, x0
    7194:	b.ls	7230 <elf64_newphdr@@ELFUTILS_1.0+0x1f8>  // b.plast
    7198:	ldr	w0, [x19, #200]
    719c:	cbnz	w0, 71d0 <elf64_newphdr@@ELFUTILS_1.0+0x198>
    71a0:	ldr	w0, [x19, #204]
    71a4:	cbnz	w0, 71c8 <elf64_newphdr@@ELFUTILS_1.0+0x190>
    71a8:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    71ac:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    71b0:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    71b4:	add	x3, x3, #0x871
    71b8:	add	x1, x1, #0x7c8
    71bc:	add	x0, x0, #0x7d8
    71c0:	mov	w2, #0x97                  	// #151
    71c4:	bl	3380 <__assert_fail@plt>
    71c8:	mov	w0, #0x1                   	// #1
    71cc:	str	w0, [x19, #200]
    71d0:	ldr	x1, [x19, #360]
    71d4:	ldr	x0, [x19, #72]
    71d8:	str	w21, [x1, #44]
    71dc:	ldr	w1, [x19, #368]
    71e0:	orr	w1, w1, #0x1
    71e4:	str	w1, [x19, #368]
    71e8:	mov	w1, #0xffffffff            	// #-1
    71ec:	strh	w1, [x0, #56]
    71f0:	mov	w1, #0x0                   	// #0
    71f4:	mov	x2, x22
    71f8:	mov	x0, x20
    71fc:	bl	3140 <memset@plt>
    7200:	ldr	x0, [x19, #72]
    7204:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7208:	ldr	x1, [x1, #1824]
    720c:	strh	w1, [x0, #54]
    7210:	mov	w1, #0x81                  	// #129
    7214:	ldr	w0, [x19, #120]
    7218:	orr	w0, w0, w1
    721c:	str	w0, [x19, #120]
    7220:	ldr	w0, [x19, #56]
    7224:	orr	w0, w0, #0x1
    7228:	str	w0, [x19, #56]
    722c:	b	7050 <elf64_newphdr@@ELFUTILS_1.0+0x18>
    7230:	ldr	x0, [x19, #72]
    7234:	strh	w21, [x0, #56]
    7238:	b	71f0 <elf64_newphdr@@ELFUTILS_1.0+0x1b8>
    723c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7240:	ldrh	w1, [x20, #54]
    7244:	ldr	x0, [x0, #1824]
    7248:	cmp	x1, x0
    724c:	b.eq	7270 <elf64_newphdr@@ELFUTILS_1.0+0x238>  // b.none
    7250:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7254:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7258:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    725c:	add	x3, x3, #0x871
    7260:	add	x1, x1, #0x7c8
    7264:	add	x0, x0, #0x805
    7268:	mov	w2, #0xb2                  	// #178
    726c:	b	71c4 <elf64_newphdr@@ELFUTILS_1.0+0x18c>
    7270:	mov	x2, #0x38                  	// #56
    7274:	ldr	w0, [x19, #120]
    7278:	mov	w1, #0x0                   	// #0
    727c:	mul	x2, x21, x2
    7280:	orr	w0, w0, #0x1
    7284:	str	w0, [x19, #120]
    7288:	mov	x0, x3
    728c:	bl	3140 <memset@plt>
    7290:	mov	x20, x0
    7294:	b	7050 <elf64_newphdr@@ELFUTILS_1.0+0x18>

0000000000007298 <gelf_newphdr@@ELFUTILS_1.0>:
    7298:	ldr	w2, [x0, #32]
    729c:	cmp	w2, #0x1
    72a0:	b.ne	72a8 <gelf_newphdr@@ELFUTILS_1.0+0x10>  // b.any
    72a4:	b	6de0 <elf32_newphdr@@ELFUTILS_1.0>
    72a8:	b	7038 <elf64_newphdr@@ELFUTILS_1.0>

00000000000072ac <gelf_update_phdr@@ELFUTILS_1.0>:
    72ac:	cbz	x0, 7468 <gelf_update_phdr@@ELFUTILS_1.0+0x1bc>
    72b0:	stp	x29, x30, [sp, #-64]!
    72b4:	mov	x29, sp
    72b8:	stp	x19, x20, [sp, #16]
    72bc:	mov	x20, x0
    72c0:	stp	x21, x22, [sp, #32]
    72c4:	mov	w22, w1
    72c8:	ldr	w1, [x0, #24]
    72cc:	cmp	w1, #0x3
    72d0:	b.eq	72f0 <gelf_update_phdr@@ELFUTILS_1.0+0x44>  // b.none
    72d4:	mov	w0, #0x4                   	// #4
    72d8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    72dc:	mov	w0, #0x0                   	// #0
    72e0:	ldp	x19, x20, [sp, #16]
    72e4:	ldp	x21, x22, [sp, #32]
    72e8:	ldp	x29, x30, [sp], #64
    72ec:	ret
    72f0:	ldr	w1, [x0, #32]
    72f4:	mov	x19, x2
    72f8:	ldr	x21, [x0, #88]
    72fc:	cmp	w1, #0x1
    7300:	b.ne	7408 <gelf_update_phdr@@ELFUTILS_1.0+0x15c>  // b.any
    7304:	ldr	x1, [x2, #8]
    7308:	mov	x0, #0xffffffff            	// #4294967295
    730c:	cmp	x1, x0
    7310:	b.hi	7350 <gelf_update_phdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    7314:	ldr	x1, [x2, #16]
    7318:	cmp	x1, x0
    731c:	b.hi	7350 <gelf_update_phdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    7320:	ldr	x1, [x2, #24]
    7324:	cmp	x1, x0
    7328:	b.hi	7350 <gelf_update_phdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    732c:	ldr	x1, [x2, #32]
    7330:	cmp	x1, x0
    7334:	b.hi	7350 <gelf_update_phdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    7338:	ldr	x1, [x2, #40]
    733c:	cmp	x1, x0
    7340:	b.hi	7350 <gelf_update_phdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    7344:	ldr	x1, [x2, #48]
    7348:	cmp	x1, x0
    734c:	b.ls	7358 <gelf_update_phdr@@ELFUTILS_1.0+0xac>  // b.plast
    7350:	mov	w0, #0x21                  	// #33
    7354:	b	72d8 <gelf_update_phdr@@ELFUTILS_1.0+0x2c>
    7358:	cbnz	x21, 736c <gelf_update_phdr@@ELFUTILS_1.0+0xc0>
    735c:	mov	x0, x20
    7360:	bl	6594 <gelf_update_ehdr@@ELFUTILS_1.0+0x12c>
    7364:	mov	x21, x0
    7368:	cbz	x0, 72dc <gelf_update_phdr@@ELFUTILS_1.0+0x30>
    736c:	ldr	x0, [x20, #72]
    7370:	ldrh	w0, [x0, #44]
    7374:	cmp	w0, w22
    7378:	b.gt	73ac <gelf_update_phdr@@ELFUTILS_1.0+0x100>
    737c:	mov	w1, #0xffff                	// #65535
    7380:	cmp	w0, w1
    7384:	b.eq	7390 <gelf_update_phdr@@ELFUTILS_1.0+0xe4>  // b.none
    7388:	mov	w0, #0x16                  	// #22
    738c:	b	72d8 <gelf_update_phdr@@ELFUTILS_1.0+0x2c>
    7390:	add	x1, sp, #0x38
    7394:	mov	x0, x20
    7398:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    739c:	cbnz	w0, 7388 <gelf_update_phdr@@ELFUTILS_1.0+0xdc>
    73a0:	ldr	x0, [sp, #56]
    73a4:	cmp	x0, w22, sxtw
    73a8:	b.ls	7388 <gelf_update_phdr@@ELFUTILS_1.0+0xdc>  // b.plast
    73ac:	sbfiz	x22, x22, #5, #32
    73b0:	ldr	w1, [x19]
    73b4:	add	x0, x21, x22
    73b8:	str	w1, [x21, x22]
    73bc:	ldr	x1, [x19, #8]
    73c0:	str	w1, [x0, #4]
    73c4:	ldr	x1, [x19, #16]
    73c8:	str	w1, [x0, #8]
    73cc:	ldr	x1, [x19, #24]
    73d0:	str	w1, [x0, #12]
    73d4:	ldr	x1, [x19, #32]
    73d8:	str	w1, [x0, #16]
    73dc:	ldr	x1, [x19, #40]
    73e0:	str	w1, [x0, #20]
    73e4:	ldr	w1, [x19, #4]
    73e8:	str	w1, [x0, #24]
    73ec:	ldr	x1, [x19, #48]
    73f0:	str	w1, [x0, #28]
    73f4:	ldr	w0, [x20, #120]
    73f8:	orr	w0, w0, #0x1
    73fc:	str	w0, [x20, #120]
    7400:	mov	w0, #0x1                   	// #1
    7404:	b	72e0 <gelf_update_phdr@@ELFUTILS_1.0+0x34>
    7408:	cbnz	x21, 7418 <gelf_update_phdr@@ELFUTILS_1.0+0x16c>
    740c:	bl	6918 <elf32_getphdr@@ELFUTILS_1.0+0x48>
    7410:	mov	x21, x0
    7414:	cbz	x0, 72dc <gelf_update_phdr@@ELFUTILS_1.0+0x30>
    7418:	ldr	x0, [x20, #72]
    741c:	ldrh	w0, [x0, #56]
    7420:	cmp	w0, w22
    7424:	b.gt	7450 <gelf_update_phdr@@ELFUTILS_1.0+0x1a4>
    7428:	mov	w1, #0xffff                	// #65535
    742c:	cmp	w0, w1
    7430:	b.ne	7388 <gelf_update_phdr@@ELFUTILS_1.0+0xdc>  // b.any
    7434:	add	x1, sp, #0x38
    7438:	mov	x0, x20
    743c:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    7440:	cbnz	w0, 7388 <gelf_update_phdr@@ELFUTILS_1.0+0xdc>
    7444:	ldr	x0, [sp, #56]
    7448:	cmp	x0, w22, sxtw
    744c:	b.ls	7388 <gelf_update_phdr@@ELFUTILS_1.0+0xdc>  // b.plast
    7450:	mov	w0, #0x38                  	// #56
    7454:	mov	x1, x19
    7458:	mov	x2, #0x38                  	// #56
    745c:	smaddl	x0, w22, w0, x21
    7460:	bl	3060 <memcpy@plt>
    7464:	b	73f4 <gelf_update_phdr@@ELFUTILS_1.0+0x148>
    7468:	mov	w0, #0x0                   	// #0
    746c:	ret

0000000000007470 <elf_getarhdr@@ELFUTILS_1.0>:
    7470:	stp	x29, x30, [sp, #-32]!
    7474:	mov	x29, sp
    7478:	str	x19, [sp, #16]
    747c:	cbnz	x0, 7494 <elf_getarhdr@@ELFUTILS_1.0+0x24>
    7480:	mov	x19, #0x0                   	// #0
    7484:	mov	x0, x19
    7488:	ldr	x19, [sp, #16]
    748c:	ldp	x29, x30, [sp], #32
    7490:	ret
    7494:	ldr	x19, [x0, #8]
    7498:	cbnz	x19, 74a8 <elf_getarhdr@@ELFUTILS_1.0+0x38>
    749c:	mov	w0, #0xb                   	// #11
    74a0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    74a4:	b	7484 <elf_getarhdr@@ELFUTILS_1.0+0x14>
    74a8:	ldr	x0, [x19, #120]
    74ac:	cbz	x0, 74e0 <elf_getarhdr@@ELFUTILS_1.0+0x70>
    74b0:	ldr	w0, [x19, #24]
    74b4:	add	x19, x19, #0x78
    74b8:	cmp	w0, #0x1
    74bc:	b.eq	7484 <elf_getarhdr@@ELFUTILS_1.0+0x14>  // b.none
    74c0:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    74c4:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    74c8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    74cc:	add	x3, x3, #0x88e
    74d0:	add	x1, x1, #0x87f
    74d4:	add	x0, x0, #0x5b9
    74d8:	mov	w2, #0x46                  	// #70
    74dc:	bl	3380 <__assert_fail@plt>
    74e0:	mov	x0, x19
    74e4:	bl	42e0 <elf_fill@@ELFUTILS_1.0+0xc4c>
    74e8:	cbz	w0, 74b0 <elf_getarhdr@@ELFUTILS_1.0+0x40>
    74ec:	mov	x0, x19
    74f0:	bl	42e0 <elf_fill@@ELFUTILS_1.0+0xc4c>
    74f4:	cbz	w0, 74b0 <elf_getarhdr@@ELFUTILS_1.0+0x40>
    74f8:	b	7480 <elf_getarhdr@@ELFUTILS_1.0+0x10>
    74fc:	stp	x29, x30, [sp, #-64]!
    7500:	mov	x29, sp
    7504:	stp	x21, x22, [sp, #32]
    7508:	mov	w22, w0
    750c:	mov	x21, x2
    7510:	stp	x23, x24, [sp, #48]
    7514:	mov	x23, x1
    7518:	mov	x24, x3
    751c:	stp	x19, x20, [sp, #16]
    7520:	mov	x20, #0x0                   	// #0
    7524:	add	x3, x20, x24
    7528:	sub	x2, x21, x20
    752c:	add	x1, x23, x20
    7530:	mov	w0, w22
    7534:	bl	32a0 <pread@plt>
    7538:	mov	x19, x0
    753c:	cmn	x0, #0x1
    7540:	b.ne	7560 <elf_getarhdr@@ELFUTILS_1.0+0xf0>  // b.any
    7544:	bl	3390 <__errno_location@plt>
    7548:	ldr	w0, [x0]
    754c:	cmp	w0, #0x4
    7550:	b.ne	756c <elf_getarhdr@@ELFUTILS_1.0+0xfc>  // b.any
    7554:	mov	x19, x20
    7558:	mov	x20, x19
    755c:	b	7524 <elf_getarhdr@@ELFUTILS_1.0+0xb4>
    7560:	cmp	x0, #0x0
    7564:	b.gt	7584 <elf_getarhdr@@ELFUTILS_1.0+0x114>
    7568:	csel	x19, x0, x20, ne  // ne = any
    756c:	mov	x0, x19
    7570:	ldp	x19, x20, [sp, #16]
    7574:	ldp	x21, x22, [sp, #32]
    7578:	ldp	x23, x24, [sp, #48]
    757c:	ldp	x29, x30, [sp], #64
    7580:	ret
    7584:	add	x19, x0, x20
    7588:	cmp	x19, x21
    758c:	b.cc	7558 <elf_getarhdr@@ELFUTILS_1.0+0xe8>  // b.lo, b.ul, b.last
    7590:	b	756c <elf_getarhdr@@ELFUTILS_1.0+0xfc>

0000000000007594 <elf_getarsym@@ELFUTILS_1.0>:
    7594:	stp	x29, x30, [sp, #-160]!
    7598:	mov	x29, sp
    759c:	stp	x19, x20, [sp, #16]
    75a0:	mov	x19, x0
    75a4:	ldr	w0, [x0, #24]
    75a8:	stp	x21, x22, [sp, #32]
    75ac:	cmp	w0, #0x1
    75b0:	stp	x23, x24, [sp, #48]
    75b4:	stp	x25, x26, [sp, #64]
    75b8:	stp	x27, x28, [sp, #80]
    75bc:	str	x1, [sp, #104]
    75c0:	b.eq	75f0 <elf_getarsym@@ELFUTILS_1.0+0x5c>  // b.none
    75c4:	mov	w0, #0x11                  	// #17
    75c8:	mov	x21, #0x0                   	// #0
    75cc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    75d0:	mov	x0, x21
    75d4:	ldp	x19, x20, [sp, #16]
    75d8:	ldp	x21, x22, [sp, #32]
    75dc:	ldp	x23, x24, [sp, #48]
    75e0:	ldp	x25, x26, [sp, #64]
    75e4:	ldp	x27, x28, [sp, #80]
    75e8:	ldp	x29, x30, [sp], #160
    75ec:	ret
    75f0:	ldr	x0, [sp, #104]
    75f4:	cbz	x0, 7604 <elf_getarsym@@ELFUTILS_1.0+0x70>
    75f8:	ldr	x1, [sp, #104]
    75fc:	ldr	x0, [x19, #88]
    7600:	str	x0, [x1]
    7604:	ldr	x21, [x19, #80]
    7608:	cmn	x21, #0x1
    760c:	b.ne	7618 <elf_getarsym@@ELFUTILS_1.0+0x84>  // b.any
    7610:	mov	w0, #0x12                  	// #18
    7614:	b	75c8 <elf_getarsym@@ELFUTILS_1.0+0x34>
    7618:	cbnz	x21, 76a8 <elf_getarsym@@ELFUTILS_1.0+0x114>
    761c:	ldr	x20, [x19]
    7620:	mov	x0, #0xffffffffffffffff    	// #-1
    7624:	str	x0, [x19, #80]
    7628:	cbnz	x20, 7688 <elf_getarsym@@ELFUTILS_1.0+0xf4>
    762c:	ldr	w0, [x19, #36]
    7630:	cmn	w0, #0x1
    7634:	b.ne	7658 <elf_getarsym@@ELFUTILS_1.0+0xc4>  // b.any
    7638:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    763c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7640:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7644:	add	x3, x3, #0x8bc
    7648:	add	x1, x1, #0x89b
    764c:	add	x0, x0, #0x8aa
    7650:	mov	w2, #0x72                  	// #114
    7654:	bl	3380 <__assert_fail@plt>
    7658:	ldr	x3, [x19, #40]
    765c:	add	x28, x19, #0xa8
    7660:	mov	x1, x28
    7664:	mov	x2, #0x3c                  	// #60
    7668:	add	x3, x3, #0x8
    766c:	bl	74fc <elf_getarhdr@@ELFUTILS_1.0+0x8c>
    7670:	cmp	x0, #0x3c
    7674:	b.eq	76cc <elf_getarsym@@ELFUTILS_1.0+0x138>  // b.none
    7678:	mov	w0, #0x13                  	// #19
    767c:	mov	x21, #0x0                   	// #0
    7680:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7684:	b	76a0 <elf_getarsym@@ELFUTILS_1.0+0x10c>
    7688:	ldr	x0, [x19, #48]
    768c:	cmp	x0, #0x43
    7690:	b.hi	76c0 <elf_getarsym@@ELFUTILS_1.0+0x12c>  // b.pmore
    7694:	mov	w0, #0x12                  	// #18
    7698:	mov	x20, #0x0                   	// #0
    769c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    76a0:	mov	x0, x20
    76a4:	bl	3250 <free@plt>
    76a8:	ldr	x0, [sp, #104]
    76ac:	cbz	x0, 75d0 <elf_getarsym@@ELFUTILS_1.0+0x3c>
    76b0:	ldr	x1, [sp, #104]
    76b4:	ldr	x0, [x19, #88]
    76b8:	str	x0, [x1]
    76bc:	b	75d0 <elf_getarsym@@ELFUTILS_1.0+0x3c>
    76c0:	ldr	x28, [x19, #40]
    76c4:	add	x28, x28, #0x8
    76c8:	add	x28, x20, x28
    76cc:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    76d0:	add	x0, x28, #0x3a
    76d4:	add	x1, x1, #0x552
    76d8:	mov	x2, #0x2                   	// #2
    76dc:	bl	3210 <memcmp@plt>
    76e0:	cbz	w0, 76ec <elf_getarsym@@ELFUTILS_1.0+0x158>
    76e4:	mov	w0, #0xf                   	// #15
    76e8:	b	7698 <elf_getarsym@@ELFUTILS_1.0+0x104>
    76ec:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    76f0:	mov	x0, x28
    76f4:	add	x1, x1, #0x555
    76f8:	mov	x2, #0x10                  	// #16
    76fc:	bl	3210 <memcmp@plt>
    7700:	cbz	w0, 77f8 <elf_getarsym@@ELFUTILS_1.0+0x264>
    7704:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7708:	mov	x0, x28
    770c:	add	x1, x1, #0x566
    7710:	mov	x2, #0x10                  	// #16
    7714:	bl	3210 <memcmp@plt>
    7718:	cbnz	w0, 7694 <elf_getarsym@@ELFUTILS_1.0+0x100>
    771c:	mov	w27, #0x1                   	// #1
    7720:	mov	w25, #0x8                   	// #8
    7724:	ldr	x20, [x19]
    7728:	cmp	w27, #0x0
    772c:	ldr	x24, [x19, #40]
    7730:	mov	x3, #0x4                   	// #4
    7734:	add	x1, sp, #0x88
    7738:	add	x23, x24, #0x44
    773c:	mov	x24, #0x8                   	// #8
    7740:	csel	x24, x24, x3, ne  // ne = any
    7744:	cbz	x20, 7804 <elf_getarsym@@ELFUTILS_1.0+0x270>
    7748:	ldr	x0, [x20, x23]
    774c:	str	x0, [sp, #136]
    7750:	cbz	w27, 782c <elf_getarsym@@ELFUTILS_1.0+0x298>
    7754:	ldr	x22, [sp, #136]
    7758:	rev	x22, x22
    775c:	ldr	x0, [x28, #48]
    7760:	str	x0, [sp, #136]
    7764:	ldrh	w0, [x28, #56]
    7768:	strh	w0, [sp, #144]
    776c:	mov	x0, x1
    7770:	strb	wzr, [sp, #146]
    7774:	bl	31e0 <atol@plt>
    7778:	mov	x28, x0
    777c:	ldr	x0, [x19, #48]
    7780:	cmp	x0, x28
    7784:	b.cc	7694 <elf_getarsym@@ELFUTILS_1.0+0x100>  // b.lo, b.ul, b.last
    7788:	sub	x0, x0, x28
    778c:	cmp	x0, #0x43
    7790:	b.ls	7694 <elf_getarsym@@ELFUTILS_1.0+0x100>  // b.plast
    7794:	sxtw	x26, w25
    7798:	udiv	x0, x28, x26
    779c:	cmp	x0, x22
    77a0:	b.cc	7694 <elf_getarsym@@ELFUTILS_1.0+0x100>  // b.lo, b.ul, b.last
    77a4:	mov	x25, #0x18                  	// #24
    77a8:	add	x0, x22, #0x1
    77ac:	str	x0, [sp, #112]
    77b0:	madd	x25, x22, x25, x25
    77b4:	mov	x0, x25
    77b8:	bl	3100 <malloc@plt>
    77bc:	str	x0, [x19, #80]
    77c0:	mov	x5, x0
    77c4:	cbz	x0, 7900 <elf_getarsym@@ELFUTILS_1.0+0x36c>
    77c8:	ldr	x20, [x19]
    77cc:	mul	x26, x26, x22
    77d0:	add	x24, x23, x24
    77d4:	cbnz	x20, 790c <elf_getarsym@@ELFUTILS_1.0+0x378>
    77d8:	mov	x0, x26
    77dc:	str	x5, [sp, #120]
    77e0:	bl	3100 <malloc@plt>
    77e4:	mov	x20, x0
    77e8:	ldr	x5, [sp, #120]
    77ec:	cbnz	x0, 7838 <elf_getarsym@@ELFUTILS_1.0+0x2a4>
    77f0:	mov	w0, #0x8                   	// #8
    77f4:	b	7698 <elf_getarsym@@ELFUTILS_1.0+0x104>
    77f8:	mov	w27, #0x0                   	// #0
    77fc:	mov	w25, #0x4                   	// #4
    7800:	b	7724 <elf_getarsym@@ELFUTILS_1.0+0x190>
    7804:	ldr	w0, [x19, #36]
    7808:	mov	x3, x23
    780c:	mov	x2, x24
    7810:	str	x1, [sp, #112]
    7814:	bl	74fc <elf_getarhdr@@ELFUTILS_1.0+0x8c>
    7818:	cmp	x0, x24
    781c:	ldr	x1, [sp, #112]
    7820:	b.eq	7750 <elf_getarsym@@ELFUTILS_1.0+0x1bc>  // b.none
    7824:	mov	w0, #0x12                  	// #18
    7828:	b	767c <elf_getarsym@@ELFUTILS_1.0+0xe8>
    782c:	ldr	w22, [sp, #136]
    7830:	rev	w22, w22
    7834:	b	775c <elf_getarsym@@ELFUTILS_1.0+0x1c8>
    7838:	sub	x28, x28, x26
    783c:	mov	x0, x5
    7840:	add	x1, x28, x25
    7844:	str	x5, [sp, #120]
    7848:	bl	31a0 <realloc@plt>
    784c:	mov	x21, x0
    7850:	ldr	x5, [sp, #120]
    7854:	cbnz	x0, 7870 <elf_getarsym@@ELFUTILS_1.0+0x2dc>
    7858:	mov	x0, x5
    785c:	bl	3250 <free@plt>
    7860:	str	xzr, [x19, #80]
    7864:	mov	w0, #0x8                   	// #8
    7868:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    786c:	b	76a0 <elf_getarsym@@ELFUTILS_1.0+0x10c>
    7870:	ldr	w0, [x19, #36]
    7874:	mov	x3, x24
    7878:	str	x21, [x19, #80]
    787c:	mov	x2, x26
    7880:	mov	x1, x20
    7884:	bl	74fc <elf_getarhdr@@ELFUTILS_1.0+0x8c>
    7888:	cmp	x0, x26
    788c:	b.eq	78a0 <elf_getarsym@@ELFUTILS_1.0+0x30c>  // b.none
    7890:	ldr	x0, [x19, #80]
    7894:	bl	3250 <free@plt>
    7898:	str	xzr, [x19, #80]
    789c:	b	7824 <elf_getarsym@@ELFUTILS_1.0+0x290>
    78a0:	add	x3, x0, x24
    78a4:	ldr	w0, [x19, #36]
    78a8:	add	x4, x21, x25
    78ac:	mov	x2, x28
    78b0:	mov	x1, x4
    78b4:	str	x4, [sp, #120]
    78b8:	bl	74fc <elf_getarhdr@@ELFUTILS_1.0+0x8c>
    78bc:	cmp	x0, x28
    78c0:	b.ne	7890 <elf_getarsym@@ELFUTILS_1.0+0x2fc>  // b.any
    78c4:	ldr	x4, [sp, #120]
    78c8:	mov	x23, x20
    78cc:	ldr	x28, [x19, #80]
    78d0:	mov	x21, #0x0                   	// #0
    78d4:	mov	x24, x28
    78d8:	cmp	x21, x22
    78dc:	b.ne	7950 <elf_getarsym@@ELFUTILS_1.0+0x3bc>  // b.any
    78e0:	sub	x25, x25, #0x18
    78e4:	mov	x1, #0xffffffffffffffff    	// #-1
    78e8:	add	x0, x28, x25
    78ec:	str	xzr, [x28, x25]
    78f0:	stp	xzr, x1, [x0, #8]
    78f4:	ldr	x0, [sp, #112]
    78f8:	str	x0, [x19, #88]
    78fc:	mov	x0, x20
    7900:	mov	x20, x0
    7904:	ldr	x21, [x19, #80]
    7908:	b	76a0 <elf_getarsym@@ELFUTILS_1.0+0x10c>
    790c:	add	x23, x20, x24
    7910:	neg	x0, x22
    7914:	tst	x23, x0
    7918:	b.eq	7940 <elf_getarsym@@ELFUTILS_1.0+0x3ac>  // b.none
    791c:	mov	x0, x26
    7920:	bl	3100 <malloc@plt>
    7924:	mov	x28, x0
    7928:	cbz	x0, 77f0 <elf_getarsym@@ELFUTILS_1.0+0x25c>
    792c:	mov	x1, x23
    7930:	mov	x2, x26
    7934:	mov	x21, x28
    7938:	bl	3060 <memcpy@plt>
    793c:	mov	x23, x0
    7940:	add	x2, x26, x24
    7944:	add	x4, x20, x2
    7948:	mov	x20, x21
    794c:	b	78cc <elf_getarsym@@ELFUTILS_1.0+0x338>
    7950:	str	x4, [x24]
    7954:	cbz	w27, 79dc <elf_getarsym@@ELFUTILS_1.0+0x448>
    7958:	ldr	x0, [x23, x21, lsl #3]
    795c:	rev	x0, x0
    7960:	str	x0, [x24, #8]
    7964:	ldrb	w1, [x4]
    7968:	cbz	x1, 79bc <elf_getarsym@@ELFUTILS_1.0+0x428>
    796c:	ldrb	w0, [x4, #1]
    7970:	cbz	w0, 79bc <elf_getarsym@@ELFUTILS_1.0+0x428>
    7974:	and	x0, x0, #0xff
    7978:	add	x1, x0, x1, lsl #4
    797c:	ldrb	w0, [x4, #2]
    7980:	cbz	w0, 79bc <elf_getarsym@@ELFUTILS_1.0+0x428>
    7984:	and	x0, x0, #0xff
    7988:	add	x1, x0, x1, lsl #4
    798c:	ldrb	w0, [x4, #3]
    7990:	cbz	w0, 79bc <elf_getarsym@@ELFUTILS_1.0+0x428>
    7994:	and	x0, x0, #0xff
    7998:	add	x1, x0, x1, lsl #4
    799c:	ldrb	w0, [x4, #4]
    79a0:	cbz	w0, 79bc <elf_getarsym@@ELFUTILS_1.0+0x428>
    79a4:	and	x0, x0, #0xff
    79a8:	add	x2, x4, #0x5
    79ac:	add	x1, x0, x1, lsl #4
    79b0:	ldrb	w0, [x2]
    79b4:	cbnz	w0, 79e8 <elf_getarsym@@ELFUTILS_1.0+0x454>
    79b8:	and	x1, x1, #0xfffffff
    79bc:	str	x1, [x24, #16]
    79c0:	mov	x0, x4
    79c4:	mov	w1, #0x0                   	// #0
    79c8:	add	x21, x21, #0x1
    79cc:	bl	3260 <rawmemchr@plt>
    79d0:	add	x24, x24, #0x18
    79d4:	add	x4, x0, #0x1
    79d8:	b	78d8 <elf_getarsym@@ELFUTILS_1.0+0x344>
    79dc:	ldr	w0, [x23, x21, lsl #2]
    79e0:	rev	w0, w0
    79e4:	b	7960 <elf_getarsym@@ELFUTILS_1.0+0x3cc>
    79e8:	and	x0, x0, #0xff
    79ec:	add	x2, x2, #0x1
    79f0:	add	x1, x0, x1, lsl #4
    79f4:	lsr	x0, x1, #24
    79f8:	and	x0, x0, #0xf0
    79fc:	eor	x1, x1, x0
    7a00:	b	79b0 <elf_getarsym@@ELFUTILS_1.0+0x41c>

0000000000007a04 <elf_rawfile@@ELFUTILS_1.0>:
    7a04:	stp	x29, x30, [sp, #-32]!
    7a08:	mov	x29, sp
    7a0c:	stp	x19, x20, [sp, #16]
    7a10:	mov	x19, x1
    7a14:	cbnz	x0, 7a3c <elf_rawfile@@ELFUTILS_1.0+0x38>
    7a18:	mov	w0, #0x4                   	// #4
    7a1c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7a20:	cbz	x19, 7a2c <elf_rawfile@@ELFUTILS_1.0+0x28>
    7a24:	str	xzr, [x19]
    7a28:	mov	x19, #0x0                   	// #0
    7a2c:	mov	x0, x19
    7a30:	ldp	x19, x20, [sp, #16]
    7a34:	ldp	x29, x30, [sp], #32
    7a38:	ret
    7a3c:	ldr	x1, [x0]
    7a40:	mov	x20, x0
    7a44:	cbz	x1, 7a5c <elf_rawfile@@ELFUTILS_1.0+0x58>
    7a48:	cbnz	x19, 7a68 <elf_rawfile@@ELFUTILS_1.0+0x64>
    7a4c:	ldr	x19, [x20]
    7a50:	ldr	x1, [x20, #40]
    7a54:	add	x19, x19, x1
    7a58:	b	7a2c <elf_rawfile@@ELFUTILS_1.0+0x28>
    7a5c:	bl	7b40 <elf_rawfile@@ELFUTILS_1.0+0x13c>
    7a60:	cbnz	x0, 7a48 <elf_rawfile@@ELFUTILS_1.0+0x44>
    7a64:	b	7a20 <elf_rawfile@@ELFUTILS_1.0+0x1c>
    7a68:	ldr	x0, [x20, #48]
    7a6c:	str	x0, [x19]
    7a70:	b	7a4c <elf_rawfile@@ELFUTILS_1.0+0x48>
    7a74:	ldr	w1, [x0, #24]
    7a78:	cmp	w1, #0x1
    7a7c:	b.ne	7ab8 <elf_rawfile@@ELFUTILS_1.0+0xb4>  // b.any
    7a80:	stp	x29, x30, [sp, #-32]!
    7a84:	mov	x29, sp
    7a88:	str	x19, [sp, #16]
    7a8c:	ldr	x19, [x0, #72]
    7a90:	cbnz	x19, 7aa0 <elf_rawfile@@ELFUTILS_1.0+0x9c>
    7a94:	ldr	x19, [sp, #16]
    7a98:	ldp	x29, x30, [sp], #32
    7a9c:	ret
    7aa0:	ldr	w0, [x19, #60]
    7aa4:	cbz	w0, 7ab0 <elf_rawfile@@ELFUTILS_1.0+0xac>
    7aa8:	mov	x0, x19
    7aac:	bl	7a74 <elf_rawfile@@ELFUTILS_1.0+0x70>
    7ab0:	ldr	x19, [x19, #16]
    7ab4:	b	7a90 <elf_rawfile@@ELFUTILS_1.0+0x8c>
    7ab8:	ret
    7abc:	stp	x29, x30, [sp, #-48]!
    7ac0:	mov	x29, sp
    7ac4:	stp	x19, x20, [sp, #16]
    7ac8:	mov	x20, x0
    7acc:	ldr	w0, [x0, #24]
    7ad0:	str	x21, [sp, #32]
    7ad4:	cmp	w0, #0x1
    7ad8:	b.ne	7ae8 <elf_rawfile@@ELFUTILS_1.0+0xe4>  // b.any
    7adc:	ldr	x19, [x20, #72]
    7ae0:	mov	x21, x1
    7ae4:	cbnz	x19, 7af8 <elf_rawfile@@ELFUTILS_1.0+0xf4>
    7ae8:	ldp	x19, x20, [sp, #16]
    7aec:	ldr	x21, [sp, #32]
    7af0:	ldp	x29, x30, [sp], #48
    7af4:	ret
    7af8:	ldr	x0, [x19]
    7afc:	cbnz	x0, 7b38 <elf_rawfile@@ELFUTILS_1.0+0x134>
    7b00:	ldr	x0, [x20]
    7b04:	str	x0, [x19]
    7b08:	ldr	x0, [x19, #40]
    7b0c:	sub	x0, x0, x21
    7b10:	str	x0, [x19, #40]
    7b14:	ldr	w0, [x19, #24]
    7b18:	cmp	w0, #0x1
    7b1c:	b.ne	7b2c <elf_rawfile@@ELFUTILS_1.0+0x128>  // b.any
    7b20:	ldr	x0, [x19, #112]
    7b24:	sub	x0, x0, x21
    7b28:	str	x0, [x19, #112]
    7b2c:	mov	x1, x21
    7b30:	mov	x0, x19
    7b34:	bl	7abc <elf_rawfile@@ELFUTILS_1.0+0xb8>
    7b38:	ldr	x19, [x19, #16]
    7b3c:	b	7ae4 <elf_rawfile@@ELFUTILS_1.0+0xe0>
    7b40:	stp	x29, x30, [sp, #-208]!
    7b44:	mov	x29, sp
    7b48:	stp	x21, x22, [sp, #32]
    7b4c:	ldr	x21, [x0]
    7b50:	stp	x19, x20, [sp, #16]
    7b54:	mov	x19, x0
    7b58:	stp	x23, x24, [sp, #48]
    7b5c:	str	x25, [sp, #64]
    7b60:	cbnz	x21, 7c48 <elf_rawfile@@ELFUTILS_1.0+0x244>
    7b64:	ldr	w2, [x0, #36]
    7b68:	cmn	w2, #0x1
    7b6c:	b.ne	7b94 <elf_rawfile@@ELFUTILS_1.0+0x190>  // b.any
    7b70:	mov	w0, #0x4                   	// #4
    7b74:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7b78:	mov	x0, x21
    7b7c:	ldp	x19, x20, [sp, #16]
    7b80:	ldp	x21, x22, [sp, #32]
    7b84:	ldp	x23, x24, [sp, #48]
    7b88:	ldr	x25, [sp, #64]
    7b8c:	ldp	x29, x30, [sp], #208
    7b90:	ret
    7b94:	bl	7a74 <elf_rawfile@@ELFUTILS_1.0+0x70>
    7b98:	ldr	x0, [x19, #48]
    7b9c:	cmn	x0, #0x1
    7ba0:	b.ne	7bbc <elf_rawfile@@ELFUTILS_1.0+0x1b8>  // b.any
    7ba4:	add	x1, sp, #0x50
    7ba8:	mov	w0, w2
    7bac:	bl	fdd8 <elf_compress_gnu@@ELFUTILS_1.7+0x24c>
    7bb0:	tbnz	w0, #31, 7c30 <elf_rawfile@@ELFUTILS_1.0+0x22c>
    7bb4:	ldr	x0, [sp, #128]
    7bb8:	str	x0, [x19, #48]
    7bbc:	ldr	x23, [x19, #48]
    7bc0:	mov	x0, x23
    7bc4:	bl	3100 <malloc@plt>
    7bc8:	mov	x21, x0
    7bcc:	cbz	x0, 7ca0 <elf_rawfile@@ELFUTILS_1.0+0x29c>
    7bd0:	ldr	w24, [x19, #36]
    7bd4:	mov	x22, #0x0                   	// #0
    7bd8:	ldr	x25, [x19, #40]
    7bdc:	add	x3, x25, x22
    7be0:	sub	x2, x23, x22
    7be4:	add	x1, x21, x22
    7be8:	mov	w0, w24
    7bec:	bl	32a0 <pread@plt>
    7bf0:	mov	x20, x0
    7bf4:	cmn	x0, #0x1
    7bf8:	b.ne	7c18 <elf_rawfile@@ELFUTILS_1.0+0x214>  // b.any
    7bfc:	bl	3390 <__errno_location@plt>
    7c00:	ldr	w0, [x0]
    7c04:	cmp	w0, #0x4
    7c08:	b.ne	7c24 <elf_rawfile@@ELFUTILS_1.0+0x220>  // b.any
    7c0c:	mov	x20, x22
    7c10:	mov	x22, x20
    7c14:	b	7bdc <elf_rawfile@@ELFUTILS_1.0+0x1d8>
    7c18:	cmp	x0, #0x0
    7c1c:	b.gt	7c50 <elf_rawfile@@ELFUTILS_1.0+0x24c>
    7c20:	csel	x20, x0, x22, ne  // ne = any
    7c24:	ldr	x0, [x19, #48]
    7c28:	cmp	x0, x20
    7c2c:	b.eq	7c60 <elf_rawfile@@ELFUTILS_1.0+0x25c>  // b.none
    7c30:	mov	w0, #0x13                  	// #19
    7c34:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7c38:	mov	x0, x21
    7c3c:	bl	3250 <free@plt>
    7c40:	mov	x0, x19
    7c44:	bl	7a74 <elf_rawfile@@ELFUTILS_1.0+0x70>
    7c48:	ldr	x21, [x19]
    7c4c:	b	7b78 <elf_rawfile@@ELFUTILS_1.0+0x174>
    7c50:	add	x20, x0, x22
    7c54:	cmp	x23, x20
    7c58:	b.hi	7c10 <elf_rawfile@@ELFUTILS_1.0+0x20c>  // b.pmore
    7c5c:	b	7c24 <elf_rawfile@@ELFUTILS_1.0+0x220>
    7c60:	ldr	w0, [x19, #56]
    7c64:	ldr	x1, [x19, #40]
    7c68:	orr	w0, w0, #0x80
    7c6c:	str	x21, [x19]
    7c70:	str	w0, [x19, #56]
    7c74:	mov	x0, x19
    7c78:	bl	7abc <elf_rawfile@@ELFUTILS_1.0+0xb8>
    7c7c:	ldr	w0, [x19, #24]
    7c80:	cmp	w0, #0x1
    7c84:	b.ne	7c98 <elf_rawfile@@ELFUTILS_1.0+0x294>  // b.any
    7c88:	ldr	x1, [x19, #40]
    7c8c:	ldr	x0, [x19, #112]
    7c90:	sub	x0, x0, x1
    7c94:	str	x0, [x19, #112]
    7c98:	str	xzr, [x19, #40]
    7c9c:	b	7c40 <elf_rawfile@@ELFUTILS_1.0+0x23c>
    7ca0:	mov	w0, #0x8                   	// #8
    7ca4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7ca8:	b	7c40 <elf_rawfile@@ELFUTILS_1.0+0x23c>

0000000000007cac <elf_cntl@@ELFUTILS_1.0>:
    7cac:	stp	x29, x30, [sp, #-32]!
    7cb0:	mov	x29, sp
    7cb4:	stp	x19, x20, [sp, #16]
    7cb8:	cbnz	x0, 7cc4 <elf_cntl@@ELFUTILS_1.0+0x18>
    7cbc:	mov	w20, #0xffffffff            	// #-1
    7cc0:	b	7cdc <elf_cntl@@ELFUTILS_1.0+0x30>
    7cc4:	ldr	w20, [x0, #36]
    7cc8:	mov	x19, x0
    7ccc:	cmn	w20, #0x1
    7cd0:	b.ne	7cec <elf_cntl@@ELFUTILS_1.0+0x40>  // b.any
    7cd4:	mov	w0, #0x4                   	// #4
    7cd8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7cdc:	mov	w0, w20
    7ce0:	ldp	x19, x20, [sp, #16]
    7ce4:	ldp	x29, x30, [sp], #32
    7ce8:	ret
    7cec:	cmp	w1, #0x6
    7cf0:	b.eq	7d0c <elf_cntl@@ELFUTILS_1.0+0x60>  // b.none
    7cf4:	cmp	w1, #0x7
    7cf8:	b.ne	7d1c <elf_cntl@@ELFUTILS_1.0+0x70>  // b.any
    7cfc:	ldr	x1, [x0]
    7d00:	cbnz	x1, 7d0c <elf_cntl@@ELFUTILS_1.0+0x60>
    7d04:	bl	7b40 <elf_rawfile@@ELFUTILS_1.0+0x13c>
    7d08:	cbz	x0, 7cbc <elf_cntl@@ELFUTILS_1.0+0x10>
    7d0c:	mov	w0, #0xffffffff            	// #-1
    7d10:	mov	w20, #0x0                   	// #0
    7d14:	str	w0, [x19, #36]
    7d18:	b	7cdc <elf_cntl@@ELFUTILS_1.0+0x30>
    7d1c:	mov	w0, #0xd                   	// #13
    7d20:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7d24:	b	7cbc <elf_cntl@@ELFUTILS_1.0+0x10>

0000000000007d28 <elf_getscn@@ELFUTILS_1.0>:
    7d28:	stp	x29, x30, [sp, #-48]!
    7d2c:	mov	x29, sp
    7d30:	stp	x19, x20, [sp, #16]
    7d34:	mov	x19, x0
    7d38:	stp	x21, x22, [sp, #32]
    7d3c:	cbz	x0, 7df0 <elf_getscn@@ELFUTILS_1.0+0xc8>
    7d40:	ldr	w0, [x0, #24]
    7d44:	cmp	w0, #0x3
    7d48:	b.eq	7d5c <elf_getscn@@ELFUTILS_1.0+0x34>  // b.none
    7d4c:	mov	w0, #0x4                   	// #4
    7d50:	mov	x19, #0x0                   	// #0
    7d54:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7d58:	b	7df0 <elf_getscn@@ELFUTILS_1.0+0xc8>
    7d5c:	mov	x20, x1
    7d60:	add	x21, x19, #0xc8
    7d64:	cbnz	x1, 7dcc <elf_getscn@@ELFUTILS_1.0+0xa4>
    7d68:	ldr	w0, [x19, #200]
    7d6c:	cbnz	w0, 7dcc <elf_getscn@@ELFUTILS_1.0+0xa4>
    7d70:	ldr	w0, [x19, #204]
    7d74:	cbz	w0, 7dcc <elf_getscn@@ELFUTILS_1.0+0xa4>
    7d78:	ldr	w0, [x19, #32]
    7d7c:	add	x22, x19, #0xd8
    7d80:	cmp	w0, #0x1
    7d84:	b.ne	7da4 <elf_getscn@@ELFUTILS_1.0+0x7c>  // b.any
    7d88:	mov	x1, #0x28                  	// #40
    7d8c:	mov	x0, #0x1                   	// #1
    7d90:	bl	3180 <calloc@plt>
    7d94:	str	x0, [x22, #144]
    7d98:	cbnz	x0, 7dac <elf_getscn@@ELFUTILS_1.0+0x84>
    7d9c:	mov	w0, #0x8                   	// #8
    7da0:	b	7d50 <elf_getscn@@ELFUTILS_1.0+0x28>
    7da4:	mov	x1, #0x40                  	// #64
    7da8:	b	7d8c <elf_getscn@@ELFUTILS_1.0+0x64>
    7dac:	mov	w0, #0x81                  	// #129
    7db0:	str	x19, [x22, #136]
    7db4:	str	w0, [x22, #152]
    7db8:	ldr	x0, [x19, #96]
    7dbc:	str	x0, [x22, #200]
    7dc0:	mov	w0, #0x1                   	// #1
    7dc4:	str	w0, [x22, #120]
    7dc8:	str	w0, [x19, #200]
    7dcc:	ldr	w0, [x21, #4]
    7dd0:	cmp	x0, x20
    7dd4:	b.ls	7e04 <elf_getscn@@ELFUTILS_1.0+0xdc>  // b.plast
    7dd8:	ldr	w0, [x21]
    7ddc:	cmp	x0, x20
    7de0:	b.ls	7e10 <elf_getscn@@ELFUTILS_1.0+0xe8>  // b.plast
    7de4:	mov	x19, #0xd0                  	// #208
    7de8:	madd	x19, x20, x19, x21
    7dec:	add	x19, x19, #0x10
    7df0:	mov	x0, x19
    7df4:	ldp	x19, x20, [sp, #16]
    7df8:	ldp	x21, x22, [sp, #32]
    7dfc:	ldp	x29, x30, [sp], #48
    7e00:	ret
    7e04:	ldr	x21, [x21, #8]
    7e08:	sub	x20, x20, x0
    7e0c:	cbnz	x21, 7dcc <elf_getscn@@ELFUTILS_1.0+0xa4>
    7e10:	mov	w0, #0x16                  	// #22
    7e14:	b	7d50 <elf_getscn@@ELFUTILS_1.0+0x28>

0000000000007e18 <elf_nextscn@@ELFUTILS_1.0>:
    7e18:	cbz	x0, 7ea0 <elf_nextscn@@ELFUTILS_1.0+0x88>
    7e1c:	cbnz	x1, 7e94 <elf_nextscn@@ELFUTILS_1.0+0x7c>
    7e20:	add	x2, x0, #0xc8
    7e24:	add	x1, x0, #0xd8
    7e28:	ldr	w3, [x2]
    7e2c:	mov	w5, #0xd0                  	// #208
    7e30:	mov	x4, #0x10                  	// #16
    7e34:	add	x0, x1, #0xd0
    7e38:	umaddl	x3, w3, w5, x4
    7e3c:	add	x3, x2, x3
    7e40:	cmp	x0, x3
    7e44:	b.cc	7ea0 <elf_nextscn@@ELFUTILS_1.0+0x88>  // b.lo, b.ul, b.last
    7e48:	ldr	w1, [x2, #4]
    7e4c:	umaddl	x1, w1, w5, x4
    7e50:	add	x1, x2, x1
    7e54:	cmp	x0, x1
    7e58:	b.ne	7e9c <elf_nextscn@@ELFUTILS_1.0+0x84>  // b.any
    7e5c:	ldr	x0, [x2, #8]
    7e60:	cbz	x0, 7ea0 <elf_nextscn@@ELFUTILS_1.0+0x88>
    7e64:	ldr	w1, [x0], #16
    7e68:	cbnz	w1, 7ea0 <elf_nextscn@@ELFUTILS_1.0+0x88>
    7e6c:	stp	x29, x30, [sp, #-16]!
    7e70:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7e74:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7e78:	mov	x29, sp
    7e7c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7e80:	add	x3, x3, #0x8e5
    7e84:	add	x1, x1, #0x8c9
    7e88:	add	x0, x0, #0x8d7
    7e8c:	mov	w2, #0x4b                  	// #75
    7e90:	bl	3380 <__assert_fail@plt>
    7e94:	ldr	x2, [x1, #200]
    7e98:	b	7e28 <elf_nextscn@@ELFUTILS_1.0+0x10>
    7e9c:	mov	x0, #0x0                   	// #0
    7ea0:	ret

0000000000007ea4 <elf_ndxscn@@ELFUTILS_1.0>:
    7ea4:	cbz	x0, 7eb0 <elf_ndxscn@@ELFUTILS_1.0+0xc>
    7ea8:	ldr	x0, [x0, #128]
    7eac:	ret
    7eb0:	mov	x0, #0x0                   	// #0
    7eb4:	b	7eac <elf_ndxscn@@ELFUTILS_1.0+0x8>

0000000000007eb8 <elf_newscn@@ELFUTILS_1.0>:
    7eb8:	stp	x29, x30, [sp, #-80]!
    7ebc:	mov	x29, sp
    7ec0:	stp	x19, x20, [sp, #16]
    7ec4:	stp	x21, x22, [sp, #32]
    7ec8:	stp	x23, x24, [sp, #48]
    7ecc:	str	x25, [sp, #64]
    7ed0:	cbz	x0, 805c <elf_newscn@@ELFUTILS_1.0+0x1a4>
    7ed4:	mov	x20, x0
    7ed8:	mov	x19, #0x0                   	// #0
    7edc:	mov	w22, #0xd0                  	// #208
    7ee0:	mov	x23, #0x10                  	// #16
    7ee4:	mov	x24, #0xd0                  	// #208
    7ee8:	ldr	x21, [x20, #96]
    7eec:	ldp	w0, w1, [x21]
    7ef0:	cmp	w0, w1
    7ef4:	b.cs	7fb4 <elf_newscn@@ELFUTILS_1.0+0xfc>  // b.hs, b.nlast
    7ef8:	add	w1, w0, #0x1
    7efc:	umaddl	x19, w0, w22, x23
    7f00:	str	w1, [x21]
    7f04:	cmp	w1, #0x1
    7f08:	add	x19, x21, x19
    7f0c:	ldr	x2, [x20, #96]
    7f10:	b.ne	7f20 <elf_newscn@@ELFUTILS_1.0+0x68>  // b.any
    7f14:	add	x3, x20, #0xc8
    7f18:	cmp	x2, x3
    7f1c:	b.eq	804c <elf_newscn@@ELFUTILS_1.0+0x194>  // b.none
    7f20:	ldr	w1, [x2]
    7f24:	cmp	w1, #0x1
    7f28:	b.hi	7f4c <elf_newscn@@ELFUTILS_1.0+0x94>  // b.pmore
    7f2c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7f30:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7f34:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7f38:	add	x3, x3, #0x93b
    7f3c:	add	x1, x1, #0x8f1
    7f40:	add	x0, x0, #0x8fe
    7f44:	mov	w2, #0x4e                  	// #78
    7f48:	bl	3380 <__assert_fail@plt>
    7f4c:	mov	w0, w0
    7f50:	madd	x21, x0, x24, x21
    7f54:	ldur	x0, [x19, #-80]
    7f58:	add	x0, x0, #0x1
    7f5c:	str	x0, [x21, #144]
    7f60:	mov	w21, #0x0                   	// #0
    7f64:	ldr	w0, [x20, #32]
    7f68:	cmp	w0, #0x1
    7f6c:	b.ne	8054 <elf_newscn@@ELFUTILS_1.0+0x19c>  // b.any
    7f70:	mov	x1, #0x28                  	// #40
    7f74:	mov	x0, #0x1                   	// #1
    7f78:	bl	3180 <calloc@plt>
    7f7c:	str	x0, [x19, #144]
    7f80:	cbz	x0, 7ff4 <elf_newscn@@ELFUTILS_1.0+0x13c>
    7f84:	mov	w0, #0x81                  	// #129
    7f88:	str	x20, [x19, #136]
    7f8c:	str	w0, [x19, #152]
    7f90:	ldr	x0, [x20, #96]
    7f94:	str	x0, [x19, #200]
    7f98:	mov	w0, #0x1                   	// #1
    7f9c:	str	w0, [x19, #120]
    7fa0:	cbnz	w21, 7ee8 <elf_newscn@@ELFUTILS_1.0+0x30>
    7fa4:	ldr	w0, [x19, #156]
    7fa8:	orr	w0, w0, #0x1
    7fac:	str	w0, [x19, #156]
    7fb0:	b	7ffc <elf_newscn@@ELFUTILS_1.0+0x144>
    7fb4:	ldr	w25, [x20, #112]
    7fb8:	cbnz	w25, 7fdc <elf_newscn@@ELFUTILS_1.0+0x124>
    7fbc:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7fc0:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7fc4:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    7fc8:	add	x3, x3, #0x93b
    7fcc:	add	x1, x1, #0x8f1
    7fd0:	add	x0, x0, #0x920
    7fd4:	mov	w2, #0x57                  	// #87
    7fd8:	b	7f48 <elf_newscn@@ELFUTILS_1.0+0x90>
    7fdc:	lsl	w25, w25, #1
    7fe0:	str	w25, [x20, #112]
    7fe4:	mov	x1, #0x1                   	// #1
    7fe8:	umaddl	x0, w25, w22, x23
    7fec:	bl	3180 <calloc@plt>
    7ff0:	cbnz	x0, 8018 <elf_newscn@@ELFUTILS_1.0+0x160>
    7ff4:	mov	w0, #0x8                   	// #8
    7ff8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    7ffc:	mov	x0, x19
    8000:	ldp	x19, x20, [sp, #16]
    8004:	ldp	x21, x22, [sp, #32]
    8008:	ldp	x23, x24, [sp, #48]
    800c:	ldr	x25, [sp, #64]
    8010:	ldp	x29, x30, [sp], #80
    8014:	ret
    8018:	mov	x19, x0
    801c:	ldr	w1, [x19], #16
    8020:	add	w1, w1, #0x1
    8024:	stp	w1, w25, [x0]
    8028:	ldr	w1, [x21, #4]
    802c:	sub	w1, w1, #0x1
    8030:	madd	x1, x1, x24, x21
    8034:	ldr	x1, [x1, #144]
    8038:	add	x1, x1, #0x1
    803c:	str	x1, [x0, #144]
    8040:	str	x0, [x21, #8]
    8044:	str	x0, [x20, #96]
    8048:	b	7f60 <elf_newscn@@ELFUTILS_1.0+0xa8>
    804c:	mov	w21, w1
    8050:	b	7f64 <elf_newscn@@ELFUTILS_1.0+0xac>
    8054:	mov	x1, #0x40                  	// #64
    8058:	b	7f74 <elf_newscn@@ELFUTILS_1.0+0xbc>
    805c:	mov	x19, #0x0                   	// #0
    8060:	b	7ffc <elf_newscn@@ELFUTILS_1.0+0x144>
    8064:	cbz	x0, 80a8 <elf_newscn@@ELFUTILS_1.0+0x1f0>
    8068:	stp	x29, x30, [sp, #-16]!
    806c:	mov	x29, sp
    8070:	ldr	x0, [x0, #136]
    8074:	ldr	x1, [x0, #72]
    8078:	cbnz	x1, 8090 <elf_newscn@@ELFUTILS_1.0+0x1d8>
    807c:	mov	w0, #0x1a                  	// #26
    8080:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8084:	mov	w0, #0x0                   	// #0
    8088:	ldp	x29, x30, [sp], #16
    808c:	ret
    8090:	ldr	w1, [x0, #32]
    8094:	mov	w0, #0x1                   	// #1
    8098:	cmp	w1, w0
    809c:	b.eq	8088 <elf_newscn@@ELFUTILS_1.0+0x1d0>  // b.none
    80a0:	mov	w0, #0x15                  	// #21
    80a4:	b	8080 <elf_newscn@@ELFUTILS_1.0+0x1c8>
    80a8:	mov	w0, #0x0                   	// #0
    80ac:	ret
    80b0:	stp	x29, x30, [sp, #-112]!
    80b4:	mov	x29, sp
    80b8:	stp	x19, x20, [sp, #16]
    80bc:	stp	x21, x22, [sp, #32]
    80c0:	stp	x23, x24, [sp, #48]
    80c4:	mov	x23, x0
    80c8:	stp	x25, x26, [sp, #64]
    80cc:	str	x27, [sp, #80]
    80d0:	bl	8064 <elf_newscn@@ELFUTILS_1.0+0x1ac>
    80d4:	tst	w0, #0xff
    80d8:	b.eq	8490 <elf_newscn@@ELFUTILS_1.0+0x5d8>  // b.none
    80dc:	ldr	x24, [x23, #144]
    80e0:	cbnz	x24, 8134 <elf_newscn@@ELFUTILS_1.0+0x27c>
    80e4:	ldr	x20, [x23, #136]
    80e8:	add	x1, sp, #0x68
    80ec:	mov	x0, x20
    80f0:	ldr	x25, [x20, #72]
    80f4:	bl	e640 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
    80f8:	cbnz	w0, 8134 <elf_newscn@@ELFUTILS_1.0+0x27c>
    80fc:	ldr	x26, [sp, #104]
    8100:	mov	x0, #0x6666666666666666    	// #7378697629483820646
    8104:	movk	x0, #0x666, lsl #48
    8108:	cmp	x26, x0
    810c:	b.hi	8134 <elf_newscn@@ELFUTILS_1.0+0x27c>  // b.pmore
    8110:	mov	x22, #0x28                  	// #40
    8114:	mul	x22, x26, x22
    8118:	mov	x0, x22
    811c:	bl	3100 <malloc@plt>
    8120:	str	x0, [x20, #80]
    8124:	mov	x19, x0
    8128:	cbnz	x0, 8154 <elf_newscn@@ELFUTILS_1.0+0x29c>
    812c:	mov	w0, #0x8                   	// #8
    8130:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8134:	mov	x0, x24
    8138:	ldp	x19, x20, [sp, #16]
    813c:	ldp	x21, x22, [sp, #32]
    8140:	ldp	x23, x24, [sp, #48]
    8144:	ldp	x25, x26, [sp, #64]
    8148:	ldr	x27, [sp, #80]
    814c:	ldp	x29, x30, [sp], #112
    8150:	ret
    8154:	ldr	x21, [x20]
    8158:	mov	w0, #0x1                   	// #1
    815c:	str	w0, [x20, #124]
    8160:	cbz	x21, 8358 <elf_newscn@@ELFUTILS_1.0+0x4a0>
    8164:	ldr	x2, [x20, #48]
    8168:	ldr	w0, [x25, #32]
    816c:	cmp	x0, x2
    8170:	b.cs	8180 <elf_newscn@@ELFUTILS_1.0+0x2c8>  // b.hs, b.nlast
    8174:	sub	x2, x2, x0
    8178:	cmp	x22, x2
    817c:	b.ls	819c <elf_newscn@@ELFUTILS_1.0+0x2e4>  // b.plast
    8180:	mov	w0, #0x20                  	// #32
    8184:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8188:	mov	x0, x19
    818c:	bl	3250 <free@plt>
    8190:	str	xzr, [x20, #80]
    8194:	str	wzr, [x20, #124]
    8198:	b	8134 <elf_newscn@@ELFUTILS_1.0+0x27c>
    819c:	ldr	x1, [x20, #40]
    81a0:	add	x0, x0, x1
    81a4:	ldr	w1, [x20, #56]
    81a8:	add	x21, x21, x0
    81ac:	ldrb	w0, [x25, #5]
    81b0:	tbnz	w1, #7, 81f0 <elf_newscn@@ELFUTILS_1.0+0x338>
    81b4:	cmp	w0, #0x1
    81b8:	b.ne	824c <elf_newscn@@ELFUTILS_1.0+0x394>  // b.any
    81bc:	ldr	w0, [x20, #28]
    81c0:	cmp	w0, #0x8
    81c4:	b.eq	81f8 <elf_newscn@@ELFUTILS_1.0+0x340>  // b.none
    81c8:	tst	x21, #0x3
    81cc:	b.ne	81f8 <elf_newscn@@ELFUTILS_1.0+0x340>  // b.any
    81d0:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    81d4:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    81d8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    81dc:	add	x3, x3, #0xa2e
    81e0:	add	x1, x1, #0x946
    81e4:	add	x0, x0, #0x956
    81e8:	mov	w2, #0x64                  	// #100
    81ec:	bl	3380 <__assert_fail@plt>
    81f0:	cmp	w0, #0x1
    81f4:	b.ne	824c <elf_newscn@@ELFUTILS_1.0+0x394>  // b.any
    81f8:	mov	x2, x22
    81fc:	mov	x1, x21
    8200:	mov	x0, x19
    8204:	bl	3060 <memcpy@plt>
    8208:	ldr	x2, [sp, #104]
    820c:	add	x3, x20, #0x168
    8210:	mov	x0, #0x0                   	// #0
    8214:	mov	x4, #0xd0                  	// #208
    8218:	mov	x5, #0x28                  	// #40
    821c:	cmp	x0, x2
    8220:	b.ne	8478 <elf_newscn@@ELFUTILS_1.0+0x5c0>  // b.any
    8224:	ldr	x24, [x23, #144]
    8228:	cbnz	x24, 8134 <elf_newscn@@ELFUTILS_1.0+0x27c>
    822c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8230:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8234:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8238:	add	x3, x3, #0xa2e
    823c:	add	x1, x1, #0x946
    8240:	add	x0, x0, #0xa1f
    8244:	mov	w2, #0xdd                  	// #221
    8248:	b	81ec <elf_newscn@@ELFUTILS_1.0+0x334>
    824c:	ands	x25, x21, #0x3
    8250:	b.eq	8274 <elf_newscn@@ELFUTILS_1.0+0x3bc>  // b.none
    8254:	mov	x0, x22
    8258:	bl	3100 <malloc@plt>
    825c:	mov	x27, x0
    8260:	cbz	x0, 812c <elf_newscn@@ELFUTILS_1.0+0x274>
    8264:	mov	x1, x21
    8268:	mov	x21, x27
    826c:	mov	x2, x22
    8270:	bl	3060 <memcpy@plt>
    8274:	add	x4, x20, #0x154
    8278:	mov	x2, x21
    827c:	mov	x0, x19
    8280:	mov	x3, #0x0                   	// #0
    8284:	mov	x7, #0xd0                  	// #208
    8288:	mov	w8, #0xffffffff            	// #-1
    828c:	cmp	x26, x3
    8290:	b.ne	82a4 <elf_newscn@@ELFUTILS_1.0+0x3ec>  // b.any
    8294:	cbz	x25, 8208 <elf_newscn@@ELFUTILS_1.0+0x350>
    8298:	mov	x0, x21
    829c:	bl	3250 <free@plt>
    82a0:	b	8208 <elf_newscn@@ELFUTILS_1.0+0x350>
    82a4:	ldr	w1, [x2]
    82a8:	rev	w1, w1
    82ac:	str	w1, [x0]
    82b0:	ldr	w5, [x2, #4]
    82b4:	rev	w5, w5
    82b8:	str	w5, [x0, #4]
    82bc:	cmp	w5, #0x12
    82c0:	ldr	w1, [x2, #8]
    82c4:	rev	w1, w1
    82c8:	str	w1, [x0, #8]
    82cc:	ldr	w1, [x2, #12]
    82d0:	rev	w1, w1
    82d4:	str	w1, [x0, #12]
    82d8:	ldr	w1, [x2, #16]
    82dc:	rev	w1, w1
    82e0:	str	w1, [x0, #16]
    82e4:	ldr	w1, [x2, #20]
    82e8:	rev	w1, w1
    82ec:	str	w1, [x0, #20]
    82f0:	ldr	w1, [x2, #24]
    82f4:	rev	w1, w1
    82f8:	str	w1, [x0, #24]
    82fc:	ldr	w6, [x2, #28]
    8300:	rev	w6, w6
    8304:	str	w6, [x0, #28]
    8308:	ldr	w6, [x2, #32]
    830c:	rev	w6, w6
    8310:	str	w6, [x0, #32]
    8314:	ldr	w6, [x2, #36]
    8318:	rev	w6, w6
    831c:	str	w6, [x0, #36]
    8320:	b.ne	8338 <elf_newscn@@ELFUTILS_1.0+0x480>  // b.any
    8324:	mov	w5, w1
    8328:	cmp	x26, w1, uxtw
    832c:	b.ls	8338 <elf_newscn@@ELFUTILS_1.0+0x480>  // b.plast
    8330:	madd	x1, x5, x7, x20
    8334:	str	w3, [x1, #340]
    8338:	ldr	w1, [x4]
    833c:	cbnz	w1, 8344 <elf_newscn@@ELFUTILS_1.0+0x48c>
    8340:	str	w8, [x4]
    8344:	add	x3, x3, #0x1
    8348:	add	x4, x4, #0xd0
    834c:	add	x2, x2, #0x28
    8350:	add	x0, x0, #0x28
    8354:	b	828c <elf_newscn@@ELFUTILS_1.0+0x3d4>
    8358:	ldr	w27, [x20, #36]
    835c:	cmn	w27, #0x1
    8360:	b.eq	8470 <elf_newscn@@ELFUTILS_1.0+0x5b8>  // b.none
    8364:	ldr	x0, [x20, #40]
    8368:	mov	x21, #0x0                   	// #0
    836c:	ldr	w26, [x25, #32]
    8370:	add	x26, x26, x0
    8374:	add	x3, x26, x21
    8378:	sub	x2, x22, x21
    837c:	add	x1, x19, x21
    8380:	mov	w0, w27
    8384:	bl	32a0 <pread@plt>
    8388:	cmn	x0, #0x1
    838c:	b.ne	83a8 <elf_newscn@@ELFUTILS_1.0+0x4f0>  // b.any
    8390:	bl	3390 <__errno_location@plt>
    8394:	ldr	w0, [x0]
    8398:	cmp	w0, #0x4
    839c:	b.eq	8374 <elf_newscn@@ELFUTILS_1.0+0x4bc>  // b.none
    83a0:	mov	w0, #0x13                  	// #19
    83a4:	b	8184 <elf_newscn@@ELFUTILS_1.0+0x2cc>
    83a8:	cmp	x0, #0x0
    83ac:	b.gt	8460 <elf_newscn@@ELFUTILS_1.0+0x5a8>
    83b0:	csel	x21, x21, x0, eq  // eq = none
    83b4:	cmp	x22, x21
    83b8:	b.ne	83a0 <elf_newscn@@ELFUTILS_1.0+0x4e8>  // b.any
    83bc:	ldrb	w0, [x25, #5]
    83c0:	cmp	w0, #0x1
    83c4:	b.eq	8208 <elf_newscn@@ELFUTILS_1.0+0x350>  // b.none
    83c8:	ldr	x1, [sp, #104]
    83cc:	mov	x2, #0x28                  	// #40
    83d0:	mov	x0, x19
    83d4:	madd	x1, x1, x2, x19
    83d8:	cmp	x1, x0
    83dc:	b.eq	8208 <elf_newscn@@ELFUTILS_1.0+0x350>  // b.none
    83e0:	ldr	w2, [x0]
    83e4:	add	x0, x0, #0x28
    83e8:	rev	w2, w2
    83ec:	stur	w2, [x0, #-40]
    83f0:	ldur	w2, [x0, #-36]
    83f4:	rev	w2, w2
    83f8:	stur	w2, [x0, #-36]
    83fc:	ldur	w2, [x0, #-32]
    8400:	rev	w2, w2
    8404:	stur	w2, [x0, #-32]
    8408:	ldur	w2, [x0, #-28]
    840c:	rev	w2, w2
    8410:	stur	w2, [x0, #-28]
    8414:	ldur	w2, [x0, #-24]
    8418:	rev	w2, w2
    841c:	stur	w2, [x0, #-24]
    8420:	ldur	w2, [x0, #-20]
    8424:	rev	w2, w2
    8428:	stur	w2, [x0, #-20]
    842c:	ldur	w2, [x0, #-16]
    8430:	rev	w2, w2
    8434:	stur	w2, [x0, #-16]
    8438:	ldur	w2, [x0, #-12]
    843c:	rev	w2, w2
    8440:	stur	w2, [x0, #-12]
    8444:	ldur	w2, [x0, #-8]
    8448:	rev	w2, w2
    844c:	stur	w2, [x0, #-8]
    8450:	ldur	w2, [x0, #-4]
    8454:	rev	w2, w2
    8458:	stur	w2, [x0, #-4]
    845c:	b	83d8 <elf_newscn@@ELFUTILS_1.0+0x520>
    8460:	add	x21, x21, x0
    8464:	cmp	x22, x21
    8468:	b.hi	8374 <elf_newscn@@ELFUTILS_1.0+0x4bc>  // b.pmore
    846c:	b	83b4 <elf_newscn@@ELFUTILS_1.0+0x4fc>
    8470:	mov	w0, #0x1b                  	// #27
    8474:	b	8184 <elf_newscn@@ELFUTILS_1.0+0x2cc>
    8478:	ldr	x1, [x20, #80]
    847c:	mul	x6, x0, x4
    8480:	madd	x1, x0, x5, x1
    8484:	add	x0, x0, #0x1
    8488:	str	x1, [x3, x6]
    848c:	b	821c <elf_newscn@@ELFUTILS_1.0+0x364>
    8490:	mov	x24, #0x0                   	// #0
    8494:	b	8134 <elf_newscn@@ELFUTILS_1.0+0x27c>
    8498:	b	80b0 <elf_newscn@@ELFUTILS_1.0+0x1f8>

000000000000849c <elf32_getshdr@@ELFUTILS_1.0>:
    849c:	stp	x29, x30, [sp, #-32]!
    84a0:	mov	x29, sp
    84a4:	str	x19, [sp, #16]
    84a8:	mov	x19, x0
    84ac:	bl	8064 <elf_newscn@@ELFUTILS_1.0+0x1ac>
    84b0:	tst	w0, #0xff
    84b4:	b.eq	84c8 <elf32_getshdr@@ELFUTILS_1.0+0x2c>  // b.none
    84b8:	mov	x0, x19
    84bc:	ldr	x19, [sp, #16]
    84c0:	ldp	x29, x30, [sp], #32
    84c4:	b	80b0 <elf_newscn@@ELFUTILS_1.0+0x1f8>
    84c8:	mov	x0, #0x0                   	// #0
    84cc:	ldr	x19, [sp, #16]
    84d0:	ldp	x29, x30, [sp], #32
    84d4:	ret
    84d8:	cbz	x0, 851c <elf32_getshdr@@ELFUTILS_1.0+0x80>
    84dc:	stp	x29, x30, [sp, #-16]!
    84e0:	mov	x29, sp
    84e4:	ldr	x0, [x0, #136]
    84e8:	ldr	x1, [x0, #72]
    84ec:	cbnz	x1, 8504 <elf32_getshdr@@ELFUTILS_1.0+0x68>
    84f0:	mov	w0, #0x1a                  	// #26
    84f4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    84f8:	mov	w0, #0x0                   	// #0
    84fc:	ldp	x29, x30, [sp], #16
    8500:	ret
    8504:	ldr	w1, [x0, #32]
    8508:	mov	w0, #0x1                   	// #1
    850c:	cmp	w1, #0x2
    8510:	b.eq	84fc <elf32_getshdr@@ELFUTILS_1.0+0x60>  // b.none
    8514:	mov	w0, #0x15                  	// #21
    8518:	b	84f4 <elf32_getshdr@@ELFUTILS_1.0+0x58>
    851c:	mov	w0, #0x0                   	// #0
    8520:	ret
    8524:	stp	x29, x30, [sp, #-112]!
    8528:	mov	x29, sp
    852c:	stp	x19, x20, [sp, #16]
    8530:	stp	x21, x22, [sp, #32]
    8534:	stp	x23, x24, [sp, #48]
    8538:	mov	x23, x0
    853c:	stp	x25, x26, [sp, #64]
    8540:	str	x27, [sp, #80]
    8544:	bl	84d8 <elf32_getshdr@@ELFUTILS_1.0+0x3c>
    8548:	tst	w0, #0xff
    854c:	b.eq	88f8 <elf32_getshdr@@ELFUTILS_1.0+0x45c>  // b.none
    8550:	ldr	x24, [x23, #144]
    8554:	cbnz	x24, 85a0 <elf32_getshdr@@ELFUTILS_1.0+0x104>
    8558:	ldr	x20, [x23, #136]
    855c:	add	x1, sp, #0x68
    8560:	mov	x0, x20
    8564:	ldr	x25, [x20, #72]
    8568:	bl	e640 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
    856c:	cbnz	w0, 85a0 <elf32_getshdr@@ELFUTILS_1.0+0x104>
    8570:	ldr	x26, [sp, #104]
    8574:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
    8578:	cmp	x26, x0
    857c:	b.hi	85a0 <elf32_getshdr@@ELFUTILS_1.0+0x104>  // b.pmore
    8580:	lsl	x22, x26, #6
    8584:	mov	x0, x22
    8588:	bl	3100 <malloc@plt>
    858c:	str	x0, [x20, #80]
    8590:	mov	x19, x0
    8594:	cbnz	x0, 85c0 <elf32_getshdr@@ELFUTILS_1.0+0x124>
    8598:	mov	w0, #0x8                   	// #8
    859c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    85a0:	mov	x0, x24
    85a4:	ldp	x19, x20, [sp, #16]
    85a8:	ldp	x21, x22, [sp, #32]
    85ac:	ldp	x23, x24, [sp, #48]
    85b0:	ldp	x25, x26, [sp, #64]
    85b4:	ldr	x27, [sp, #80]
    85b8:	ldp	x29, x30, [sp], #112
    85bc:	ret
    85c0:	ldr	x21, [x20]
    85c4:	mov	w0, #0x1                   	// #1
    85c8:	str	w0, [x20, #124]
    85cc:	cbz	x21, 87c0 <elf32_getshdr@@ELFUTILS_1.0+0x324>
    85d0:	ldr	x0, [x25, #40]
    85d4:	ldr	x2, [x20, #48]
    85d8:	cmp	x0, x2
    85dc:	b.cs	85ec <elf32_getshdr@@ELFUTILS_1.0+0x150>  // b.hs, b.nlast
    85e0:	sub	x2, x2, x0
    85e4:	cmp	x22, x2
    85e8:	b.ls	8608 <elf32_getshdr@@ELFUTILS_1.0+0x16c>  // b.plast
    85ec:	mov	w0, #0x20                  	// #32
    85f0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    85f4:	mov	x0, x19
    85f8:	bl	3250 <free@plt>
    85fc:	str	xzr, [x20, #80]
    8600:	str	wzr, [x20, #124]
    8604:	b	85a0 <elf32_getshdr@@ELFUTILS_1.0+0x104>
    8608:	ldr	x1, [x20, #40]
    860c:	add	x0, x0, x1
    8610:	ldr	w1, [x20, #56]
    8614:	add	x21, x21, x0
    8618:	ldrb	w0, [x25, #5]
    861c:	tbnz	w1, #7, 865c <elf32_getshdr@@ELFUTILS_1.0+0x1c0>
    8620:	cmp	w0, #0x1
    8624:	b.ne	86b4 <elf32_getshdr@@ELFUTILS_1.0+0x218>  // b.any
    8628:	ldr	w0, [x20, #28]
    862c:	cmp	w0, #0x8
    8630:	b.eq	8664 <elf32_getshdr@@ELFUTILS_1.0+0x1c8>  // b.none
    8634:	tst	x21, #0x7
    8638:	b.ne	8664 <elf32_getshdr@@ELFUTILS_1.0+0x1c8>  // b.any
    863c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8640:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8644:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8648:	add	x3, x3, #0xa3f
    864c:	add	x1, x1, #0x946
    8650:	add	x0, x0, #0x956
    8654:	mov	w2, #0x64                  	// #100
    8658:	bl	3380 <__assert_fail@plt>
    865c:	cmp	w0, #0x1
    8660:	b.ne	86b4 <elf32_getshdr@@ELFUTILS_1.0+0x218>  // b.any
    8664:	mov	x2, x22
    8668:	mov	x1, x21
    866c:	mov	x0, x19
    8670:	bl	3060 <memcpy@plt>
    8674:	ldr	x2, [sp, #104]
    8678:	add	x3, x20, #0x168
    867c:	mov	x0, #0x0                   	// #0
    8680:	mov	x4, #0xd0                  	// #208
    8684:	cmp	x0, x2
    8688:	b.ne	88e0 <elf32_getshdr@@ELFUTILS_1.0+0x444>  // b.any
    868c:	ldr	x24, [x23, #144]
    8690:	cbnz	x24, 85a0 <elf32_getshdr@@ELFUTILS_1.0+0x104>
    8694:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8698:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    869c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    86a0:	add	x3, x3, #0xa3f
    86a4:	add	x1, x1, #0x946
    86a8:	add	x0, x0, #0xa1f
    86ac:	mov	w2, #0xdd                  	// #221
    86b0:	b	8658 <elf32_getshdr@@ELFUTILS_1.0+0x1bc>
    86b4:	ands	x25, x21, #0x7
    86b8:	b.eq	86dc <elf32_getshdr@@ELFUTILS_1.0+0x240>  // b.none
    86bc:	mov	x0, x22
    86c0:	bl	3100 <malloc@plt>
    86c4:	mov	x27, x0
    86c8:	cbz	x0, 8598 <elf32_getshdr@@ELFUTILS_1.0+0xfc>
    86cc:	mov	x1, x21
    86d0:	mov	x21, x27
    86d4:	mov	x2, x22
    86d8:	bl	3060 <memcpy@plt>
    86dc:	add	x4, x20, #0x154
    86e0:	mov	x2, x21
    86e4:	mov	x0, x19
    86e8:	mov	x3, #0x0                   	// #0
    86ec:	mov	x7, #0xd0                  	// #208
    86f0:	mov	w8, #0xffffffff            	// #-1
    86f4:	cmp	x26, x3
    86f8:	b.ne	870c <elf32_getshdr@@ELFUTILS_1.0+0x270>  // b.any
    86fc:	cbz	x25, 8674 <elf32_getshdr@@ELFUTILS_1.0+0x1d8>
    8700:	mov	x0, x21
    8704:	bl	3250 <free@plt>
    8708:	b	8674 <elf32_getshdr@@ELFUTILS_1.0+0x1d8>
    870c:	ldr	w1, [x2]
    8710:	rev	w1, w1
    8714:	str	w1, [x0]
    8718:	ldr	x1, [x2, #8]
    871c:	ldr	w5, [x2, #4]
    8720:	rev	x1, x1
    8724:	str	x1, [x0, #8]
    8728:	rev	w5, w5
    872c:	str	w5, [x0, #4]
    8730:	ldr	x1, [x2, #16]
    8734:	cmp	w5, #0x12
    8738:	rev	x1, x1
    873c:	str	x1, [x0, #16]
    8740:	ldr	x1, [x2, #24]
    8744:	rev	x1, x1
    8748:	str	x1, [x0, #24]
    874c:	ldr	x1, [x2, #32]
    8750:	rev	x1, x1
    8754:	str	x1, [x0, #32]
    8758:	ldr	w1, [x2, #40]
    875c:	rev	w1, w1
    8760:	str	w1, [x0, #40]
    8764:	ldr	w6, [x2, #44]
    8768:	rev	w6, w6
    876c:	str	w6, [x0, #44]
    8770:	ldr	x6, [x2, #48]
    8774:	rev	x6, x6
    8778:	str	x6, [x0, #48]
    877c:	ldr	x6, [x2, #56]
    8780:	rev	x6, x6
    8784:	str	x6, [x0, #56]
    8788:	b.ne	87a0 <elf32_getshdr@@ELFUTILS_1.0+0x304>  // b.any
    878c:	mov	w5, w1
    8790:	cmp	x26, w1, uxtw
    8794:	b.ls	87a0 <elf32_getshdr@@ELFUTILS_1.0+0x304>  // b.plast
    8798:	madd	x1, x5, x7, x20
    879c:	str	w3, [x1, #340]
    87a0:	ldr	w1, [x4]
    87a4:	cbnz	w1, 87ac <elf32_getshdr@@ELFUTILS_1.0+0x310>
    87a8:	str	w8, [x4]
    87ac:	add	x3, x3, #0x1
    87b0:	add	x4, x4, #0xd0
    87b4:	add	x2, x2, #0x40
    87b8:	add	x0, x0, #0x40
    87bc:	b	86f4 <elf32_getshdr@@ELFUTILS_1.0+0x258>
    87c0:	ldr	w27, [x20, #36]
    87c4:	cmn	w27, #0x1
    87c8:	b.eq	88d8 <elf32_getshdr@@ELFUTILS_1.0+0x43c>  // b.none
    87cc:	ldr	x26, [x20, #40]
    87d0:	mov	x21, #0x0                   	// #0
    87d4:	ldr	x0, [x25, #40]
    87d8:	add	x26, x26, x0
    87dc:	add	x3, x26, x21
    87e0:	sub	x2, x22, x21
    87e4:	add	x1, x19, x21
    87e8:	mov	w0, w27
    87ec:	bl	32a0 <pread@plt>
    87f0:	cmn	x0, #0x1
    87f4:	b.ne	8810 <elf32_getshdr@@ELFUTILS_1.0+0x374>  // b.any
    87f8:	bl	3390 <__errno_location@plt>
    87fc:	ldr	w0, [x0]
    8800:	cmp	w0, #0x4
    8804:	b.eq	87dc <elf32_getshdr@@ELFUTILS_1.0+0x340>  // b.none
    8808:	mov	w0, #0x13                  	// #19
    880c:	b	85f0 <elf32_getshdr@@ELFUTILS_1.0+0x154>
    8810:	cmp	x0, #0x0
    8814:	b.gt	88c8 <elf32_getshdr@@ELFUTILS_1.0+0x42c>
    8818:	csel	x21, x21, x0, eq  // eq = none
    881c:	cmp	x22, x21
    8820:	b.ne	8808 <elf32_getshdr@@ELFUTILS_1.0+0x36c>  // b.any
    8824:	ldrb	w0, [x25, #5]
    8828:	cmp	w0, #0x1
    882c:	b.eq	8674 <elf32_getshdr@@ELFUTILS_1.0+0x1d8>  // b.none
    8830:	ldr	x3, [sp, #104]
    8834:	mov	x0, x19
    8838:	mov	x1, #0x0                   	// #0
    883c:	cmp	x3, x1
    8840:	b.eq	8674 <elf32_getshdr@@ELFUTILS_1.0+0x1d8>  // b.none
    8844:	ldr	w2, [x0]
    8848:	add	x1, x1, #0x1
    884c:	add	x0, x0, #0x40
    8850:	rev	w2, w2
    8854:	stur	w2, [x0, #-64]
    8858:	ldur	w2, [x0, #-60]
    885c:	rev	w2, w2
    8860:	stur	w2, [x0, #-60]
    8864:	ldur	x2, [x0, #-56]
    8868:	rev	x2, x2
    886c:	stur	x2, [x0, #-56]
    8870:	ldur	x2, [x0, #-48]
    8874:	rev	x2, x2
    8878:	stur	x2, [x0, #-48]
    887c:	ldur	x2, [x0, #-40]
    8880:	rev	x2, x2
    8884:	stur	x2, [x0, #-40]
    8888:	ldur	x2, [x0, #-32]
    888c:	rev	x2, x2
    8890:	stur	x2, [x0, #-32]
    8894:	ldur	w2, [x0, #-24]
    8898:	rev	w2, w2
    889c:	stur	w2, [x0, #-24]
    88a0:	ldur	w2, [x0, #-20]
    88a4:	rev	w2, w2
    88a8:	stur	w2, [x0, #-20]
    88ac:	ldur	x2, [x0, #-16]
    88b0:	rev	x2, x2
    88b4:	stur	x2, [x0, #-16]
    88b8:	ldur	x2, [x0, #-8]
    88bc:	rev	x2, x2
    88c0:	stur	x2, [x0, #-8]
    88c4:	b	883c <elf32_getshdr@@ELFUTILS_1.0+0x3a0>
    88c8:	add	x21, x21, x0
    88cc:	cmp	x22, x21
    88d0:	b.hi	87dc <elf32_getshdr@@ELFUTILS_1.0+0x340>  // b.pmore
    88d4:	b	881c <elf32_getshdr@@ELFUTILS_1.0+0x380>
    88d8:	mov	w0, #0x1b                  	// #27
    88dc:	b	85f0 <elf32_getshdr@@ELFUTILS_1.0+0x154>
    88e0:	mul	x5, x0, x4
    88e4:	ldr	x1, [x20, #80]
    88e8:	add	x1, x1, x0, lsl #6
    88ec:	add	x0, x0, #0x1
    88f0:	str	x1, [x3, x5]
    88f4:	b	8684 <elf32_getshdr@@ELFUTILS_1.0+0x1e8>
    88f8:	mov	x24, #0x0                   	// #0
    88fc:	b	85a0 <elf32_getshdr@@ELFUTILS_1.0+0x104>
    8900:	b	8524 <elf32_getshdr@@ELFUTILS_1.0+0x88>

0000000000008904 <elf64_getshdr@@ELFUTILS_1.0>:
    8904:	stp	x29, x30, [sp, #-32]!
    8908:	mov	x29, sp
    890c:	str	x19, [sp, #16]
    8910:	mov	x19, x0
    8914:	bl	84d8 <elf32_getshdr@@ELFUTILS_1.0+0x3c>
    8918:	tst	w0, #0xff
    891c:	b.eq	8930 <elf64_getshdr@@ELFUTILS_1.0+0x2c>  // b.none
    8920:	mov	x0, x19
    8924:	ldr	x19, [sp, #16]
    8928:	ldp	x29, x30, [sp], #32
    892c:	b	8524 <elf32_getshdr@@ELFUTILS_1.0+0x88>
    8930:	mov	x0, #0x0                   	// #0
    8934:	ldr	x19, [sp, #16]
    8938:	ldp	x29, x30, [sp], #32
    893c:	ret

0000000000008940 <gelf_getshdr@@ELFUTILS_1.0>:
    8940:	cbz	x0, 8a20 <gelf_getshdr@@ELFUTILS_1.0+0xe0>
    8944:	stp	x29, x30, [sp, #-32]!
    8948:	mov	x29, sp
    894c:	str	x19, [sp, #16]
    8950:	mov	x19, x1
    8954:	cbnz	x1, 8974 <gelf_getshdr@@ELFUTILS_1.0+0x34>
    8958:	mov	w0, #0x17                  	// #23
    895c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8960:	mov	x3, #0x0                   	// #0
    8964:	mov	x0, x3
    8968:	ldr	x19, [sp, #16]
    896c:	ldp	x29, x30, [sp], #32
    8970:	ret
    8974:	ldp	x1, x2, [x0, #136]
    8978:	ldr	w1, [x1, #32]
    897c:	cmp	w1, #0x1
    8980:	b.ne	89ec <gelf_getshdr@@ELFUTILS_1.0+0xac>  // b.any
    8984:	cbnz	x2, 8994 <gelf_getshdr@@ELFUTILS_1.0+0x54>
    8988:	bl	80b0 <elf_newscn@@ELFUTILS_1.0+0x1f8>
    898c:	mov	x2, x0
    8990:	cbz	x0, 8958 <gelf_getshdr@@ELFUTILS_1.0+0x18>
    8994:	ldr	w0, [x2]
    8998:	str	w0, [x19]
    899c:	ldr	w0, [x2, #4]
    89a0:	str	w0, [x19, #4]
    89a4:	ldr	w0, [x2, #8]
    89a8:	str	x0, [x19, #8]
    89ac:	ldr	w0, [x2, #12]
    89b0:	str	x0, [x19, #16]
    89b4:	ldr	w0, [x2, #16]
    89b8:	str	x0, [x19, #24]
    89bc:	ldr	w0, [x2, #20]
    89c0:	str	x0, [x19, #32]
    89c4:	ldr	w0, [x2, #24]
    89c8:	str	w0, [x19, #40]
    89cc:	ldr	w0, [x2, #28]
    89d0:	str	w0, [x19, #44]
    89d4:	ldr	w0, [x2, #32]
    89d8:	str	x0, [x19, #48]
    89dc:	ldr	w0, [x2, #36]
    89e0:	str	x0, [x19, #56]
    89e4:	mov	x3, x19
    89e8:	b	8964 <gelf_getshdr@@ELFUTILS_1.0+0x24>
    89ec:	cbnz	x2, 89fc <gelf_getshdr@@ELFUTILS_1.0+0xbc>
    89f0:	bl	8524 <elf32_getshdr@@ELFUTILS_1.0+0x88>
    89f4:	mov	x2, x0
    89f8:	cbz	x0, 8958 <gelf_getshdr@@ELFUTILS_1.0+0x18>
    89fc:	ldp	x0, x1, [x2]
    8a00:	stp	x0, x1, [x19]
    8a04:	ldp	x0, x1, [x2, #16]
    8a08:	stp	x0, x1, [x19, #16]
    8a0c:	ldp	x0, x1, [x2, #32]
    8a10:	stp	x0, x1, [x19, #32]
    8a14:	ldp	x0, x1, [x2, #48]
    8a18:	stp	x0, x1, [x19, #48]
    8a1c:	b	89e4 <gelf_getshdr@@ELFUTILS_1.0+0xa4>
    8a20:	ret

0000000000008a24 <gelf_update_shdr@@ELFUTILS_1.0>:
    8a24:	cmp	x0, #0x0
    8a28:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    8a2c:	b.eq	8b44 <gelf_update_shdr@@ELFUTILS_1.0+0x120>  // b.none
    8a30:	stp	x29, x30, [sp, #-32]!
    8a34:	mov	x29, sp
    8a38:	stp	x19, x20, [sp, #16]
    8a3c:	mov	x19, x1
    8a40:	mov	x20, x0
    8a44:	ldp	x1, x2, [x0, #136]
    8a48:	ldr	w1, [x1, #32]
    8a4c:	cmp	w1, #0x1
    8a50:	b.ne	8b10 <gelf_update_shdr@@ELFUTILS_1.0+0xec>  // b.any
    8a54:	cbnz	x2, 8a7c <gelf_update_shdr@@ELFUTILS_1.0+0x58>
    8a58:	bl	8498 <elf_newscn@@ELFUTILS_1.0+0x5e0>
    8a5c:	mov	x2, x0
    8a60:	cbnz	x0, 8a7c <gelf_update_shdr@@ELFUTILS_1.0+0x58>
    8a64:	mov	w0, #0x17                  	// #23
    8a68:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8a6c:	mov	w0, #0x0                   	// #0
    8a70:	ldp	x19, x20, [sp, #16]
    8a74:	ldp	x29, x30, [sp], #32
    8a78:	ret
    8a7c:	ldr	x7, [x19, #8]
    8a80:	mov	x0, #0xffffffff            	// #4294967295
    8a84:	cmp	x7, x0
    8a88:	b.hi	8ac8 <gelf_update_shdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    8a8c:	ldr	x6, [x19, #16]
    8a90:	cmp	x6, x0
    8a94:	b.hi	8ac8 <gelf_update_shdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    8a98:	ldr	x5, [x19, #24]
    8a9c:	cmp	x5, x0
    8aa0:	b.hi	8ac8 <gelf_update_shdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    8aa4:	ldr	x4, [x19, #32]
    8aa8:	cmp	x4, x0
    8aac:	b.hi	8ac8 <gelf_update_shdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    8ab0:	ldr	x3, [x19, #48]
    8ab4:	cmp	x3, x0
    8ab8:	b.hi	8ac8 <gelf_update_shdr@@ELFUTILS_1.0+0xa4>  // b.pmore
    8abc:	ldr	x1, [x19, #56]
    8ac0:	cmp	x1, x0
    8ac4:	b.ls	8ad0 <gelf_update_shdr@@ELFUTILS_1.0+0xac>  // b.plast
    8ac8:	mov	w0, #0x21                  	// #33
    8acc:	b	8a68 <gelf_update_shdr@@ELFUTILS_1.0+0x44>
    8ad0:	ldr	w0, [x19]
    8ad4:	str	w0, [x2]
    8ad8:	ldr	w0, [x19, #4]
    8adc:	stp	w0, w7, [x2, #4]
    8ae0:	ldr	w0, [x19, #40]
    8ae4:	str	w0, [x2, #24]
    8ae8:	ldr	w0, [x19, #44]
    8aec:	stp	w6, w5, [x2, #12]
    8af0:	str	w4, [x2, #20]
    8af4:	stp	w0, w3, [x2, #28]
    8af8:	str	w1, [x2, #36]
    8afc:	ldr	w0, [x20, #152]
    8b00:	orr	w0, w0, #0x1
    8b04:	str	w0, [x20, #152]
    8b08:	mov	w0, #0x1                   	// #1
    8b0c:	b	8a70 <gelf_update_shdr@@ELFUTILS_1.0+0x4c>
    8b10:	cbnz	x2, 8b20 <gelf_update_shdr@@ELFUTILS_1.0+0xfc>
    8b14:	bl	8900 <elf32_getshdr@@ELFUTILS_1.0+0x464>
    8b18:	mov	x2, x0
    8b1c:	cbz	x0, 8a64 <gelf_update_shdr@@ELFUTILS_1.0+0x40>
    8b20:	ldp	x0, x1, [x19]
    8b24:	stp	x0, x1, [x2]
    8b28:	ldp	x0, x1, [x19, #16]
    8b2c:	stp	x0, x1, [x2, #16]
    8b30:	ldp	x0, x1, [x19, #32]
    8b34:	stp	x0, x1, [x2, #32]
    8b38:	ldp	x0, x1, [x19, #48]
    8b3c:	stp	x0, x1, [x2, #48]
    8b40:	b	8afc <gelf_update_shdr@@ELFUTILS_1.0+0xd8>
    8b44:	mov	w0, #0x0                   	// #0
    8b48:	ret
    8b4c:	stp	x29, x30, [sp, #-48]!
    8b50:	mov	x29, sp
    8b54:	add	x2, sp, #0x28
    8b58:	add	x1, sp, #0x20
    8b5c:	str	x19, [sp, #16]
    8b60:	mov	x19, x0
    8b64:	bl	f75c <gelf_getchdr@@ELFUTILS_1.7+0x510>
    8b68:	cbz	x0, 8b7c <gelf_update_shdr@@ELFUTILS_1.0+0x158>
    8b6c:	ldr	x1, [sp, #32]
    8b70:	stp	x0, x1, [x19, #176]
    8b74:	ldr	x1, [sp, #40]
    8b78:	str	x1, [x19, #192]
    8b7c:	ldr	x19, [sp, #16]
    8b80:	ldp	x29, x30, [sp], #48
    8b84:	ret

0000000000008b88 <elf_strptr@@ELFUTILS_1.0>:
    8b88:	stp	x29, x30, [sp, #-64]!
    8b8c:	mov	x29, sp
    8b90:	stp	x19, x20, [sp, #16]
    8b94:	stp	x21, x22, [sp, #32]
    8b98:	str	x23, [sp, #48]
    8b9c:	cbnz	x0, 8bbc <elf_strptr@@ELFUTILS_1.0+0x34>
    8ba0:	mov	x19, #0x0                   	// #0
    8ba4:	mov	x0, x19
    8ba8:	ldp	x19, x20, [sp, #16]
    8bac:	ldp	x21, x22, [sp, #32]
    8bb0:	ldr	x23, [sp, #48]
    8bb4:	ldp	x29, x30, [sp], #64
    8bb8:	ret
    8bbc:	mov	x3, x0
    8bc0:	ldr	w0, [x0, #24]
    8bc4:	cmp	w0, #0x3
    8bc8:	b.eq	8bd8 <elf_strptr@@ELFUTILS_1.0+0x50>  // b.none
    8bcc:	mov	w0, #0x4                   	// #4
    8bd0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8bd4:	b	8ba0 <elf_strptr@@ELFUTILS_1.0+0x18>
    8bd8:	mov	x19, x1
    8bdc:	mov	x22, x2
    8be0:	add	x21, x3, #0xc8
    8be4:	ldr	w0, [x21, #4]
    8be8:	cmp	x0, x19
    8bec:	b.ls	8c40 <elf_strptr@@ELFUTILS_1.0+0xb8>  // b.plast
    8bf0:	ldr	w0, [x21]
    8bf4:	cmp	x0, x19
    8bf8:	b.ls	8c4c <elf_strptr@@ELFUTILS_1.0+0xc4>  // b.plast
    8bfc:	mov	x0, #0xd0                  	// #208
    8c00:	ldr	w1, [x3, #32]
    8c04:	mul	x0, x19, x0
    8c08:	cmp	w1, #0x1
    8c0c:	add	x20, x0, #0x10
    8c10:	add	x0, x21, x0
    8c14:	add	x20, x21, x20
    8c18:	ldr	x0, [x0, #160]
    8c1c:	b.ne	8c70 <elf_strptr@@ELFUTILS_1.0+0xe8>  // b.any
    8c20:	cbnz	x0, 8c2c <elf_strptr@@ELFUTILS_1.0+0xa4>
    8c24:	mov	x0, x20
    8c28:	bl	80b0 <elf_newscn@@ELFUTILS_1.0+0x1f8>
    8c2c:	ldr	w1, [x0, #4]
    8c30:	cmp	w1, #0x3
    8c34:	b.eq	8c54 <elf_strptr@@ELFUTILS_1.0+0xcc>  // b.none
    8c38:	mov	w0, #0x18                  	// #24
    8c3c:	b	8bd0 <elf_strptr@@ELFUTILS_1.0+0x48>
    8c40:	ldr	x21, [x21, #8]
    8c44:	sub	x19, x19, x0
    8c48:	cbnz	x21, 8be4 <elf_strptr@@ELFUTILS_1.0+0x5c>
    8c4c:	mov	w0, #0x16                  	// #22
    8c50:	b	8bd0 <elf_strptr@@ELFUTILS_1.0+0x48>
    8c54:	ldr	w1, [x0, #8]
    8c58:	tbnz	w1, #11, 8c98 <elf_strptr@@ELFUTILS_1.0+0x110>
    8c5c:	ldr	w23, [x0, #20]
    8c60:	cmp	x23, x22
    8c64:	b.hi	8cc8 <elf_strptr@@ELFUTILS_1.0+0x140>  // b.pmore
    8c68:	mov	w0, #0x1d                  	// #29
    8c6c:	b	8bd0 <elf_strptr@@ELFUTILS_1.0+0x48>
    8c70:	cbnz	x0, 8c7c <elf_strptr@@ELFUTILS_1.0+0xf4>
    8c74:	mov	x0, x20
    8c78:	bl	8524 <elf32_getshdr@@ELFUTILS_1.0+0x88>
    8c7c:	ldr	w1, [x0, #4]
    8c80:	cmp	w1, #0x3
    8c84:	b.ne	8c38 <elf_strptr@@ELFUTILS_1.0+0xb0>  // b.any
    8c88:	ldr	x1, [x0, #8]
    8c8c:	tbnz	w1, #11, 8c98 <elf_strptr@@ELFUTILS_1.0+0x110>
    8c90:	ldr	x23, [x0, #32]
    8c94:	b	8c60 <elf_strptr@@ELFUTILS_1.0+0xd8>
    8c98:	mov	x0, #0xd0                  	// #208
    8c9c:	madd	x0, x19, x0, x21
    8ca0:	ldr	x0, [x0, #192]
    8ca4:	cbz	x0, 8cb8 <elf_strptr@@ELFUTILS_1.0+0x130>
    8ca8:	mov	x0, #0xd0                  	// #208
    8cac:	madd	x0, x19, x0, x21
    8cb0:	ldr	x23, [x0, #200]
    8cb4:	b	8c60 <elf_strptr@@ELFUTILS_1.0+0xd8>
    8cb8:	mov	x0, x20
    8cbc:	bl	8b4c <gelf_update_shdr@@ELFUTILS_1.0+0x128>
    8cc0:	cbnz	x0, 8ca8 <elf_strptr@@ELFUTILS_1.0+0x120>
    8cc4:	b	8ba0 <elf_strptr@@ELFUTILS_1.0+0x18>
    8cc8:	mov	x0, #0xd0                  	// #208
    8ccc:	madd	x0, x19, x0, x21
    8cd0:	ldr	x1, [x0, #176]
    8cd4:	cbz	x1, 8d04 <elf_strptr@@ELFUTILS_1.0+0x17c>
    8cd8:	mov	x1, #0xd0                  	// #208
    8cdc:	madd	x1, x19, x1, x21
    8ce0:	ldr	x19, [x1, #192]
    8ce4:	cbz	x19, 8d1c <elf_strptr@@ELFUTILS_1.0+0x194>
    8ce8:	add	x19, x19, x22
    8cec:	sub	x2, x23, x22
    8cf0:	mov	x0, x19
    8cf4:	mov	w1, #0x0                   	// #0
    8cf8:	bl	32b0 <memrchr@plt>
    8cfc:	cbnz	x0, 8ba4 <elf_strptr@@ELFUTILS_1.0+0x1c>
    8d00:	b	8c4c <elf_strptr@@ELFUTILS_1.0+0xc4>
    8d04:	ldr	w0, [x0, #136]
    8d08:	cbnz	w0, 8cd8 <elf_strptr@@ELFUTILS_1.0+0x150>
    8d0c:	mov	x0, x20
    8d10:	bl	8e84 <elf_rawdata@@ELFUTILS_1.0+0x120>
    8d14:	cbz	w0, 8cd8 <elf_strptr@@ELFUTILS_1.0+0x150>
    8d18:	b	8ba0 <elf_strptr@@ELFUTILS_1.0+0x18>
    8d1c:	ldr	x0, [x1, #80]
    8d20:	cbnz	x0, 8d34 <elf_strptr@@ELFUTILS_1.0+0x1ac>
    8d24:	ldr	x19, [x1, #176]
    8d28:	b	8ce8 <elf_strptr@@ELFUTILS_1.0+0x160>
    8d2c:	ldr	x20, [x20, #48]
    8d30:	cbz	x20, 8ba0 <elf_strptr@@ELFUTILS_1.0+0x18>
    8d34:	ldr	x19, [x20, #24]
    8d38:	cmp	x19, x22
    8d3c:	b.hi	8d2c <elf_strptr@@ELFUTILS_1.0+0x1a4>  // b.pmore
    8d40:	ldr	x2, [x20, #16]
    8d44:	add	x2, x19, x2
    8d48:	cmp	x2, x22
    8d4c:	b.ls	8d2c <elf_strptr@@ELFUTILS_1.0+0x1a4>  // b.plast
    8d50:	sub	x0, x22, x19
    8d54:	sub	x2, x2, x22
    8d58:	ldr	x19, [x20]
    8d5c:	add	x19, x19, x0
    8d60:	b	8cf0 <elf_strptr@@ELFUTILS_1.0+0x168>

0000000000008d64 <elf_rawdata@@ELFUTILS_1.0>:
    8d64:	stp	x29, x30, [sp, #-32]!
    8d68:	mov	x29, sp
    8d6c:	stp	x19, x20, [sp, #16]
    8d70:	cbz	x0, 8d8c <elf_rawdata@@ELFUTILS_1.0+0x28>
    8d74:	mov	x19, x1
    8d78:	mov	x20, x0
    8d7c:	ldr	x1, [x0, #136]
    8d80:	ldr	w1, [x1, #24]
    8d84:	cmp	w1, #0x3
    8d88:	b.eq	8d9c <elf_rawdata@@ELFUTILS_1.0+0x38>  // b.none
    8d8c:	mov	w0, #0x4                   	// #4
    8d90:	mov	x19, #0x0                   	// #0
    8d94:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8d98:	b	8db4 <elf_rawdata@@ELFUTILS_1.0+0x50>
    8d9c:	cbnz	x19, 8dc4 <elf_rawdata@@ELFUTILS_1.0+0x60>
    8da0:	ldr	w1, [x0, #120]
    8da4:	cbz	w1, 8dcc <elf_rawdata@@ELFUTILS_1.0+0x68>
    8da8:	ldr	w0, [x0, #156]
    8dac:	tbz	w0, #8, 8dc4 <elf_rawdata@@ELFUTILS_1.0+0x60>
    8db0:	add	x19, x20, #0x48
    8db4:	mov	x0, x19
    8db8:	ldp	x19, x20, [sp, #16]
    8dbc:	ldp	x29, x30, [sp], #32
    8dc0:	ret
    8dc4:	mov	w0, #0x1f                  	// #31
    8dc8:	b	8d90 <elf_rawdata@@ELFUTILS_1.0+0x2c>
    8dcc:	bl	9210 <elf_rawdata@@ELFUTILS_1.0+0x4ac>
    8dd0:	cbz	w0, 8db0 <elf_rawdata@@ELFUTILS_1.0+0x4c>
    8dd4:	b	8db4 <elf_rawdata@@ELFUTILS_1.0+0x50>
    8dd8:	cmp	w1, #0x5
    8ddc:	b.ne	8e3c <elf_rawdata@@ELFUTILS_1.0+0xd8>  // b.any
    8de0:	ldr	w3, [x0, #32]
    8de4:	cmp	w3, #0x2
    8de8:	b.ne	8e64 <elf_rawdata@@ELFUTILS_1.0+0x100>  // b.any
    8dec:	stp	x29, x30, [sp, #-80]!
    8df0:	add	x1, sp, #0x10
    8df4:	mov	x29, sp
    8df8:	bl	6264 <elf64_getehdr@@ELFUTILS_1.0+0x58>
    8dfc:	ldrh	w1, [x0, #18]
    8e00:	mov	w2, #0x9026                	// #36902
    8e04:	cmp	w1, w2
    8e08:	b.eq	8e2c <elf_rawdata@@ELFUTILS_1.0+0xc8>  // b.none
    8e0c:	cmp	w1, #0x16
    8e10:	b.ne	8e34 <elf_rawdata@@ELFUTILS_1.0+0xd0>  // b.any
    8e14:	ldrb	w0, [x0, #4]
    8e18:	cmp	w0, #0x2
    8e1c:	cset	w0, eq  // eq = none
    8e20:	add	w0, w0, #0xc
    8e24:	ldp	x29, x30, [sp], #80
    8e28:	ret
    8e2c:	mov	w0, #0xd                   	// #13
    8e30:	b	8e24 <elf_rawdata@@ELFUTILS_1.0+0xc0>
    8e34:	mov	w0, #0xc                   	// #12
    8e38:	b	8e24 <elf_rawdata@@ELFUTILS_1.0+0xc0>
    8e3c:	cmp	w1, #0x12
    8e40:	b.ls	8e64 <elf_rawdata@@ELFUTILS_1.0+0x100>  // b.plast
    8e44:	mov	w0, #0xa                   	// #10
    8e48:	mov	w3, #0x1d                  	// #29
    8e4c:	movk	w0, #0x9000, lsl #16
    8e50:	add	w0, w1, w0
    8e54:	cmp	w0, #0xa
    8e58:	movk	w3, #0x9000, lsl #16
    8e5c:	add	w1, w1, w3
    8e60:	csel	w1, w1, wzr, cc  // cc = lo, ul, last
    8e64:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8e68:	add	x0, x0, #0xa50
    8e6c:	ldr	w0, [x0, w1, sxtw #2]
    8e70:	mov	w1, #0x1a                  	// #26
    8e74:	cmp	w0, #0x13
    8e78:	ccmp	x2, #0x8, #0x0, eq  // eq = none
    8e7c:	csel	w0, w0, w1, ne  // ne = any
    8e80:	ret
    8e84:	stp	x29, x30, [sp, #-192]!
    8e88:	mov	x29, sp
    8e8c:	stp	x21, x22, [sp, #32]
    8e90:	ldp	x21, x1, [x0, #136]
    8e94:	stp	x19, x20, [sp, #16]
    8e98:	mov	x19, x0
    8e9c:	stp	x23, x24, [sp, #48]
    8ea0:	stp	x25, x26, [sp, #64]
    8ea4:	ldr	w2, [x21, #32]
    8ea8:	stp	x27, x28, [sp, #80]
    8eac:	cmp	w2, #0x1
    8eb0:	b.ne	8f48 <elf_rawdata@@ELFUTILS_1.0+0x1e4>  // b.any
    8eb4:	cbnz	x1, 8ee4 <elf_rawdata@@ELFUTILS_1.0+0x180>
    8eb8:	bl	8498 <elf_newscn@@ELFUTILS_1.0+0x5e0>
    8ebc:	mov	x1, x0
    8ec0:	cbnz	x0, 8ee4 <elf_rawdata@@ELFUTILS_1.0+0x180>
    8ec4:	mov	w0, #0x1                   	// #1
    8ec8:	ldp	x19, x20, [sp, #16]
    8ecc:	ldp	x21, x22, [sp, #32]
    8ed0:	ldp	x23, x24, [sp, #48]
    8ed4:	ldp	x25, x26, [sp, #64]
    8ed8:	ldp	x27, x28, [sp, #80]
    8edc:	ldp	x29, x30, [sp], #192
    8ee0:	ret
    8ee4:	ldp	w26, w24, [x1, #4]
    8ee8:	ldp	w25, w28, [x1, #16]
    8eec:	ldr	w20, [x1, #32]
    8ef0:	cmp	w26, #0x8
    8ef4:	cset	w0, ne  // ne = any
    8ef8:	str	w0, [sp, #108]
    8efc:	and	x0, x24, #0x800
    8f00:	str	x0, [sp, #112]
    8f04:	ldr	w0, [sp, #108]
    8f08:	cmp	x28, #0x0
    8f0c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    8f10:	b.eq	90c4 <elf_rawdata@@ELFUTILS_1.0+0x360>  // b.none
    8f14:	ldr	x0, [sp, #112]
    8f18:	cbz	x0, 8f6c <elf_rawdata@@ELFUTILS_1.0+0x208>
    8f1c:	ldr	w0, [x21, #32]
    8f20:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    8f24:	add	x1, x1, #0xa50
    8f28:	mov	x2, #0x1b                  	// #27
    8f2c:	sub	w0, w0, #0x1
    8f30:	madd	x0, x0, x2, x1
    8f34:	ldrb	w20, [x0, #141]
    8f38:	cbz	w20, 9078 <elf_rawdata@@ELFUTILS_1.0+0x314>
    8f3c:	and	x20, x20, #0xff
    8f40:	mov	x0, #0x1                   	// #1
    8f44:	b	8fb4 <elf_rawdata@@ELFUTILS_1.0+0x250>
    8f48:	cbnz	x1, 8f58 <elf_rawdata@@ELFUTILS_1.0+0x1f4>
    8f4c:	bl	8900 <elf32_getshdr@@ELFUTILS_1.0+0x464>
    8f50:	mov	x1, x0
    8f54:	cbz	x0, 8ec4 <elf_rawdata@@ELFUTILS_1.0+0x160>
    8f58:	ldr	w26, [x1, #4]
    8f5c:	ldr	x24, [x1, #8]
    8f60:	ldp	x25, x28, [x1, #24]
    8f64:	ldr	x20, [x1, #48]
    8f68:	b	8ef0 <elf_rawdata@@ELFUTILS_1.0+0x18c>
    8f6c:	cmp	w26, #0x5
    8f70:	b.ne	8fdc <elf_rawdata@@ELFUTILS_1.0+0x278>  // b.any
    8f74:	add	x1, sp, #0x80
    8f78:	mov	x0, x21
    8f7c:	bl	6264 <elf64_getehdr@@ELFUTILS_1.0+0x58>
    8f80:	ldrh	w1, [x0, #18]
    8f84:	mov	w2, #0x9026                	// #36902
    8f88:	cmp	w1, w2
    8f8c:	b.eq	8fcc <elf_rawdata@@ELFUTILS_1.0+0x268>  // b.none
    8f90:	cmp	w1, #0x16
    8f94:	b.ne	8fd4 <elf_rawdata@@ELFUTILS_1.0+0x270>  // b.any
    8f98:	ldrb	w0, [x0, #4]
    8f9c:	mov	x1, #0x8                   	// #8
    8fa0:	cmp	w0, #0x2
    8fa4:	mov	x0, #0x4                   	// #4
    8fa8:	csel	x0, x0, x1, ne  // ne = any
    8fac:	cmp	x0, #0x0
    8fb0:	csinc	x0, x0, xzr, ne  // ne = any
    8fb4:	udiv	x1, x28, x0
    8fb8:	msub	x0, x1, x0, x28
    8fbc:	cbz	x0, 9088 <elf_rawdata@@ELFUTILS_1.0+0x324>
    8fc0:	mov	w0, #0x21                  	// #33
    8fc4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    8fc8:	b	8ec4 <elf_rawdata@@ELFUTILS_1.0+0x160>
    8fcc:	mov	x0, #0x8                   	// #8
    8fd0:	b	8fac <elf_rawdata@@ELFUTILS_1.0+0x248>
    8fd4:	mov	x0, #0x4                   	// #4
    8fd8:	b	8fac <elf_rawdata@@ELFUTILS_1.0+0x248>
    8fdc:	cmp	w26, #0x12
    8fe0:	b.ls	9070 <elf_rawdata@@ELFUTILS_1.0+0x30c>  // b.plast
    8fe4:	mov	w1, #0xa                   	// #10
    8fe8:	mov	w0, #0x1d                  	// #29
    8fec:	movk	w1, #0x9000, lsl #16
    8ff0:	add	w1, w26, w1
    8ff4:	cmp	w1, #0xa
    8ff8:	movk	w0, #0x9000, lsl #16
    8ffc:	add	w0, w26, w0
    9000:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
    9004:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    9008:	add	x1, x1, #0xa50
    900c:	ldr	w1, [x1, w0, sxtw #2]
    9010:	cmp	w1, #0x13
    9014:	cset	w0, eq  // eq = none
    9018:	cmp	w0, #0x0
    901c:	ccmp	x20, #0x8, #0x0, ne  // ne = any
    9020:	b.eq	9080 <elf_rawdata@@ELFUTILS_1.0+0x31c>  // b.none
    9024:	cmp	w0, #0x0
    9028:	mov	x0, #0x1                   	// #1
    902c:	ccmp	w1, #0xf, #0x4, eq  // eq = none
    9030:	b.eq	8fb4 <elf_rawdata@@ELFUTILS_1.0+0x250>  // b.none
    9034:	cmp	w1, #0x1a
    9038:	b.eq	8fb4 <elf_rawdata@@ELFUTILS_1.0+0x250>  // b.none
    903c:	ldr	w2, [x21, #32]
    9040:	cmp	w1, #0x17
    9044:	b.ne	9050 <elf_rawdata@@ELFUTILS_1.0+0x2ec>  // b.any
    9048:	cmp	w2, #0x2
    904c:	b.eq	8fb4 <elf_rawdata@@ELFUTILS_1.0+0x250>  // b.none
    9050:	sub	w2, w2, #0x1
    9054:	mov	x0, #0x1b                  	// #27
    9058:	mul	x2, x2, x0
    905c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    9060:	add	x0, x0, #0x618
    9064:	add	x1, x2, w1, uxtw
    9068:	ldr	x0, [x0, x1, lsl #3]
    906c:	b	8fac <elf_rawdata@@ELFUTILS_1.0+0x248>
    9070:	mov	w0, w26
    9074:	b	9004 <elf_rawdata@@ELFUTILS_1.0+0x2a0>
    9078:	mov	x20, #0x1                   	// #1
    907c:	b	8f40 <elf_rawdata@@ELFUTILS_1.0+0x1dc>
    9080:	mov	x20, #0x8                   	// #8
    9084:	b	8f40 <elf_rawdata@@ELFUTILS_1.0+0x1dc>
    9088:	ldr	x0, [x21]
    908c:	cbz	x0, 9124 <elf_rawdata@@ELFUTILS_1.0+0x3c0>
    9090:	ldr	x1, [x21, #48]
    9094:	cmp	x1, x25
    9098:	b.cc	90a8 <elf_rawdata@@ELFUTILS_1.0+0x344>  // b.lo, b.ul, b.last
    909c:	sub	x1, x1, x25
    90a0:	cmp	x1, x28
    90a4:	b.cs	90b0 <elf_rawdata@@ELFUTILS_1.0+0x34c>  // b.hs, b.nlast
    90a8:	mov	w0, #0x20                  	// #32
    90ac:	b	8fc4 <elf_rawdata@@ELFUTILS_1.0+0x260>
    90b0:	ldr	x1, [x21, #40]
    90b4:	add	x1, x25, x1
    90b8:	add	x0, x0, x1
    90bc:	str	x0, [x19, #72]
    90c0:	str	x0, [x19, #160]
    90c4:	ldr	x0, [sp, #112]
    90c8:	str	x28, [x19, #88]
    90cc:	cbz	x0, 91fc <elf_rawdata@@ELFUTILS_1.0+0x498>
    90d0:	mov	w0, #0x19                  	// #25
    90d4:	ldr	w1, [sp, #108]
    90d8:	cmp	x20, #0x0
    90dc:	str	w0, [x19, #80]
    90e0:	mov	x0, #0x1                   	// #1
    90e4:	csel	x20, x20, x0, ne  // ne = any
    90e8:	cmp	w1, #0x0
    90ec:	ccmp	x25, x20, #0x2, ne  // ne = any
    90f0:	str	xzr, [x19, #96]
    90f4:	csel	x25, x25, x20, cc  // cc = lo, ul, last
    90f8:	str	x25, [x19, #104]
    90fc:	ldr	x1, [x21, #72]
    9100:	ldrb	w1, [x1, #6]
    9104:	str	w0, [x19, #120]
    9108:	ldr	w0, [x19, #156]
    910c:	str	w1, [x19, #84]
    9110:	orr	w0, w0, #0x100
    9114:	str	x19, [x19, #112]
    9118:	str	w0, [x19, #156]
    911c:	mov	w0, #0x0                   	// #0
    9120:	b	8ec8 <elf_rawdata@@ELFUTILS_1.0+0x164>
    9124:	ldr	w27, [x21, #36]
    9128:	cmn	w27, #0x1
    912c:	b.eq	91f4 <elf_rawdata@@ELFUTILS_1.0+0x490>  // b.none
    9130:	ldr	x0, [x21, #48]
    9134:	cmp	x0, x25
    9138:	b.cc	90a8 <elf_rawdata@@ELFUTILS_1.0+0x344>  // b.lo, b.ul, b.last
    913c:	sub	x0, x0, x25
    9140:	cmp	x0, x28
    9144:	b.cc	90a8 <elf_rawdata@@ELFUTILS_1.0+0x344>  // b.lo, b.ul, b.last
    9148:	mov	x0, x28
    914c:	bl	3100 <malloc@plt>
    9150:	str	x0, [x19, #72]
    9154:	mov	x24, x0
    9158:	str	x0, [x19, #160]
    915c:	cbnz	x0, 9168 <elf_rawdata@@ELFUTILS_1.0+0x404>
    9160:	mov	w0, #0x8                   	// #8
    9164:	b	8fc4 <elf_rawdata@@ELFUTILS_1.0+0x260>
    9168:	ldr	x0, [x21, #40]
    916c:	mov	x23, #0x0                   	// #0
    9170:	add	x0, x25, x0
    9174:	str	x0, [sp, #120]
    9178:	ldr	x0, [sp, #120]
    917c:	sub	x2, x28, x23
    9180:	add	x1, x24, x23
    9184:	add	x3, x0, x23
    9188:	mov	w0, w27
    918c:	bl	32a0 <pread@plt>
    9190:	mov	x22, x0
    9194:	cmn	x0, #0x1
    9198:	b.ne	91b8 <elf_rawdata@@ELFUTILS_1.0+0x454>  // b.any
    919c:	bl	3390 <__errno_location@plt>
    91a0:	ldr	w0, [x0]
    91a4:	cmp	w0, #0x4
    91a8:	b.ne	91c4 <elf_rawdata@@ELFUTILS_1.0+0x460>  // b.any
    91ac:	mov	x22, x23
    91b0:	mov	x23, x22
    91b4:	b	9178 <elf_rawdata@@ELFUTILS_1.0+0x414>
    91b8:	cmp	x0, #0x0
    91bc:	b.gt	91e4 <elf_rawdata@@ELFUTILS_1.0+0x480>
    91c0:	csel	x22, x0, x23, ne  // ne = any
    91c4:	cmp	x28, x22
    91c8:	b.eq	90c4 <elf_rawdata@@ELFUTILS_1.0+0x360>  // b.none
    91cc:	ldr	x0, [x19, #72]
    91d0:	bl	3250 <free@plt>
    91d4:	str	xzr, [x19, #72]
    91d8:	mov	w0, #0x13                  	// #19
    91dc:	str	xzr, [x19, #160]
    91e0:	b	8fc4 <elf_rawdata@@ELFUTILS_1.0+0x260>
    91e4:	add	x22, x0, x23
    91e8:	cmp	x28, x22
    91ec:	b.hi	91b0 <elf_rawdata@@ELFUTILS_1.0+0x44c>  // b.pmore
    91f0:	b	91c4 <elf_rawdata@@ELFUTILS_1.0+0x460>
    91f4:	mov	w0, #0x1b                  	// #27
    91f8:	b	8fc4 <elf_rawdata@@ELFUTILS_1.0+0x260>
    91fc:	mov	x2, x20
    9200:	mov	w1, w26
    9204:	mov	x0, x21
    9208:	bl	8dd8 <elf_rawdata@@ELFUTILS_1.0+0x74>
    920c:	b	90d4 <elf_rawdata@@ELFUTILS_1.0+0x370>
    9210:	cbz	x0, 9218 <elf_rawdata@@ELFUTILS_1.0+0x4b4>
    9214:	b	8e84 <elf_rawdata@@ELFUTILS_1.0+0x120>
    9218:	mov	w0, #0x1                   	// #1
    921c:	ret
    9220:	stp	x29, x30, [sp, #-80]!
    9224:	mov	x29, sp
    9228:	stp	x19, x20, [sp, #16]
    922c:	mov	x19, x0
    9230:	ldr	x0, [x0, #72]
    9234:	stp	x21, x22, [sp, #32]
    9238:	stp	x23, x24, [sp, #48]
    923c:	stp	x25, x26, [sp, #64]
    9240:	cbz	x0, 93b4 <elf_rawdata@@ELFUTILS_1.0+0x650>
    9244:	ldr	x21, [x19, #88]
    9248:	cbz	x21, 93b4 <elf_rawdata@@ELFUTILS_1.0+0x650>
    924c:	cbnz	w1, 9258 <elf_rawdata@@ELFUTILS_1.0+0x4f4>
    9250:	ldr	x0, [x19, #64]
    9254:	cbnz	x0, 9308 <elf_rawdata@@ELFUTILS_1.0+0x5a4>
    9258:	ldr	x2, [x19, #136]
    925c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    9260:	add	x0, x0, #0xa50
    9264:	mov	x1, #0x1b                  	// #27
    9268:	add	x0, x0, #0x74
    926c:	ldr	w24, [x19, #80]
    9270:	ldr	w22, [x2, #32]
    9274:	mov	w25, w24
    9278:	sub	w22, w22, #0x1
    927c:	sxtw	x22, w22
    9280:	madd	x0, x22, x1, x0
    9284:	ldrb	w20, [x0, w24, uxtw]
    9288:	ldr	x0, [x2, #72]
    928c:	cmp	w20, #0x0
    9290:	csinc	w20, w20, wzr, ne  // ne = any
    9294:	cmp	w24, #0x0
    9298:	and	x20, x20, #0xff
    929c:	ldrb	w0, [x0, #5]
    92a0:	ccmp	w0, #0x1, #0x4, ne  // ne = any
    92a4:	b.ne	9330 <elf_rawdata@@ELFUTILS_1.0+0x5cc>  // b.any
    92a8:	ldr	x22, [x19, #160]
    92ac:	sub	x20, x20, #0x1
    92b0:	tst	x22, x20
    92b4:	b.ne	92ec <elf_rawdata@@ELFUTILS_1.0+0x588>  // b.any
    92b8:	str	x22, [x19, #168]
    92bc:	ldr	x0, [x19, #168]
    92c0:	str	x0, [x19]
    92c4:	ldr	x0, [x19, #96]
    92c8:	str	x0, [x19, #24]
    92cc:	ldr	x0, [x19, #104]
    92d0:	str	x0, [x19, #32]
    92d4:	ldr	w0, [x19, #84]
    92d8:	str	w24, [x19, #8]
    92dc:	str	w0, [x19, #12]
    92e0:	str	x21, [x19, #16]
    92e4:	str	x19, [x19, #40]
    92e8:	b	9304 <elf_rawdata@@ELFUTILS_1.0+0x5a0>
    92ec:	mov	x0, x21
    92f0:	bl	3100 <malloc@plt>
    92f4:	str	x0, [x19, #168]
    92f8:	cbnz	x0, 9320 <elf_rawdata@@ELFUTILS_1.0+0x5bc>
    92fc:	mov	w0, #0x8                   	// #8
    9300:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9304:	str	x19, [x19, #64]
    9308:	ldp	x19, x20, [sp, #16]
    930c:	ldp	x21, x22, [sp, #32]
    9310:	ldp	x23, x24, [sp, #48]
    9314:	ldp	x25, x26, [sp, #64]
    9318:	ldp	x29, x30, [sp], #80
    931c:	ret
    9320:	mov	x2, x21
    9324:	mov	x1, x22
    9328:	bl	3060 <memcpy@plt>
    932c:	b	92bc <elf_rawdata@@ELFUTILS_1.0+0x558>
    9330:	mov	x0, x21
    9334:	bl	3100 <malloc@plt>
    9338:	str	x0, [x19, #168]
    933c:	mov	x26, x0
    9340:	cbz	x0, 92fc <elf_rawdata@@ELFUTILS_1.0+0x598>
    9344:	ldr	x23, [x19, #160]
    9348:	sub	x20, x20, #0x1
    934c:	tst	x23, x20
    9350:	b.eq	9374 <elf_rawdata@@ELFUTILS_1.0+0x610>  // b.none
    9354:	mov	x0, x21
    9358:	bl	3100 <malloc@plt>
    935c:	mov	x20, x0
    9360:	cbz	x0, 92fc <elf_rawdata@@ELFUTILS_1.0+0x598>
    9364:	mov	x1, x23
    9368:	mov	x23, x20
    936c:	mov	x2, x21
    9370:	bl	3060 <memcpy@plt>
    9374:	mov	x0, #0x1b                  	// #27
    9378:	mov	x2, x21
    937c:	mov	x1, x23
    9380:	mov	w3, #0x0                   	// #0
    9384:	madd	x22, x22, x0, x25
    9388:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    938c:	add	x0, x0, #0xbd8
    9390:	ldr	x4, [x0, x22, lsl #3]
    9394:	mov	x0, x26
    9398:	blr	x4
    939c:	ldr	x0, [x19, #160]
    93a0:	cmp	x23, x0
    93a4:	b.eq	92bc <elf_rawdata@@ELFUTILS_1.0+0x558>  // b.none
    93a8:	mov	x0, x23
    93ac:	bl	3250 <free@plt>
    93b0:	b	92bc <elf_rawdata@@ELFUTILS_1.0+0x558>
    93b4:	ldp	x2, x3, [x19, #72]
    93b8:	stp	x2, x3, [x19]
    93bc:	ldp	x2, x3, [x19, #88]
    93c0:	stp	x2, x3, [x19, #16]
    93c4:	ldr	x0, [x19, #104]
    93c8:	str	x0, [x19, #32]
    93cc:	b	92e4 <elf_rawdata@@ELFUTILS_1.0+0x580>
    93d0:	cbnz	x0, 93dc <elf_rawdata@@ELFUTILS_1.0+0x678>
    93d4:	mov	x0, #0x0                   	// #0
    93d8:	ret
    93dc:	stp	x29, x30, [sp, #-32]!
    93e0:	mov	x29, sp
    93e4:	ldr	x2, [x0, #136]
    93e8:	str	x19, [sp, #16]
    93ec:	mov	x19, x0
    93f0:	ldr	w2, [x2, #24]
    93f4:	cmp	w2, #0x3
    93f8:	b.eq	9414 <elf_rawdata@@ELFUTILS_1.0+0x6b0>  // b.none
    93fc:	mov	w0, #0x4                   	// #4
    9400:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9404:	mov	x0, #0x0                   	// #0
    9408:	ldr	x19, [sp, #16]
    940c:	ldp	x29, x30, [sp], #32
    9410:	ret
    9414:	cbz	x1, 9448 <elf_rawdata@@ELFUTILS_1.0+0x6e4>
    9418:	ldr	x0, [x0, #64]
    941c:	cbz	x0, 942c <elf_rawdata@@ELFUTILS_1.0+0x6c8>
    9420:	ldr	x0, [x1, #40]
    9424:	cmp	x0, x19
    9428:	b.eq	9434 <elf_rawdata@@ELFUTILS_1.0+0x6d0>  // b.none
    942c:	mov	w0, #0x1f                  	// #31
    9430:	b	9400 <elf_rawdata@@ELFUTILS_1.0+0x69c>
    9434:	cmp	x0, x1
    9438:	ldr	x0, [x0, #48]
    943c:	b.eq	9408 <elf_rawdata@@ELFUTILS_1.0+0x6a4>  // b.none
    9440:	cbnz	x0, 9434 <elf_rawdata@@ELFUTILS_1.0+0x6d0>
    9444:	b	942c <elf_rawdata@@ELFUTILS_1.0+0x6c8>
    9448:	ldr	w1, [x0, #120]
    944c:	cbnz	w1, 9474 <elf_rawdata@@ELFUTILS_1.0+0x710>
    9450:	bl	8e84 <elf_rawdata@@ELFUTILS_1.0+0x120>
    9454:	cbnz	w0, 9404 <elf_rawdata@@ELFUTILS_1.0+0x6a0>
    9458:	mov	w1, #0x1                   	// #1
    945c:	ldr	x0, [x19, #64]
    9460:	cbnz	x0, 946c <elf_rawdata@@ELFUTILS_1.0+0x708>
    9464:	mov	x0, x19
    9468:	bl	9220 <elf_rawdata@@ELFUTILS_1.0+0x4bc>
    946c:	mov	x0, x19
    9470:	b	9408 <elf_rawdata@@ELFUTILS_1.0+0x6a4>
    9474:	mov	w1, #0x0                   	// #0
    9478:	b	945c <elf_rawdata@@ELFUTILS_1.0+0x6f8>

000000000000947c <elf_getdata@@ELFUTILS_1.0>:
    947c:	cbz	x0, 9484 <elf_getdata@@ELFUTILS_1.0+0x8>
    9480:	b	93d0 <elf_rawdata@@ELFUTILS_1.0+0x66c>
    9484:	ret

0000000000009488 <elf_newdata@@ELFUTILS_1.0>:
    9488:	stp	x29, x30, [sp, #-32]!
    948c:	mov	x29, sp
    9490:	stp	x19, x20, [sp, #16]
    9494:	mov	x19, x0
    9498:	cbz	x0, 94b0 <elf_newdata@@ELFUTILS_1.0+0x28>
    949c:	ldr	x1, [x0, #128]
    94a0:	cbnz	x1, 94c0 <elf_newdata@@ELFUTILS_1.0+0x38>
    94a4:	mov	w0, #0x1e                  	// #30
    94a8:	mov	x19, #0x0                   	// #0
    94ac:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    94b0:	mov	x0, x19
    94b4:	ldp	x19, x20, [sp, #16]
    94b8:	ldp	x29, x30, [sp], #32
    94bc:	ret
    94c0:	ldr	x1, [x0, #136]
    94c4:	ldr	x1, [x1, #72]
    94c8:	cbnz	x1, 94d4 <elf_newdata@@ELFUTILS_1.0+0x4c>
    94cc:	mov	w0, #0x1a                  	// #26
    94d0:	b	94a8 <elf_newdata@@ELFUTILS_1.0+0x20>
    94d4:	ldr	w1, [x0, #120]
    94d8:	cbz	w1, 9528 <elf_newdata@@ELFUTILS_1.0+0xa0>
    94dc:	ldr	x1, [x0, #160]
    94e0:	cbnz	x1, 9510 <elf_newdata@@ELFUTILS_1.0+0x88>
    94e4:	ldr	x0, [x19, #64]
    94e8:	cbz	x0, 9544 <elf_newdata@@ELFUTILS_1.0+0xbc>
    94ec:	mov	x1, #0x40                  	// #64
    94f0:	mov	x0, #0x1                   	// #1
    94f4:	bl	3180 <calloc@plt>
    94f8:	mov	x20, x0
    94fc:	cbnz	x0, 9570 <elf_newdata@@ELFUTILS_1.0+0xe8>
    9500:	mov	w0, #0x8                   	// #8
    9504:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9508:	mov	x19, x20
    950c:	b	94b0 <elf_newdata@@ELFUTILS_1.0+0x28>
    9510:	ldr	x1, [x0, #64]
    9514:	cbnz	x1, 94ec <elf_newdata@@ELFUTILS_1.0+0x64>
    9518:	mov	w1, #0x1                   	// #1
    951c:	bl	9220 <elf_rawdata@@ELFUTILS_1.0+0x4bc>
    9520:	ldr	w0, [x19, #120]
    9524:	cbnz	w0, 94e4 <elf_newdata@@ELFUTILS_1.0+0x5c>
    9528:	mov	x0, x19
    952c:	bl	8e84 <elf_rawdata@@ELFUTILS_1.0+0x120>
    9530:	cbnz	w0, 957c <elf_newdata@@ELFUTILS_1.0+0xf4>
    9534:	mov	x0, x19
    9538:	mov	w1, #0x1                   	// #1
    953c:	bl	9220 <elf_rawdata@@ELFUTILS_1.0+0x4bc>
    9540:	b	94ec <elf_newdata@@ELFUTILS_1.0+0x64>
    9544:	mov	x20, x19
    9548:	mov	w0, #0x1                   	// #1
    954c:	str	w0, [x19, #56]
    9550:	mov	w0, #0x1                   	// #1
    9554:	str	w0, [x20, #12]
    9558:	ldr	x0, [x19, #64]
    955c:	str	x19, [x20, #40]
    9560:	cbz	x0, 9568 <elf_newdata@@ELFUTILS_1.0+0xe0>
    9564:	str	x20, [x0, #48]
    9568:	str	x20, [x19, #64]
    956c:	b	9508 <elf_newdata@@ELFUTILS_1.0+0x80>
    9570:	mov	w0, #0x81                  	// #129
    9574:	str	w0, [x20, #56]
    9578:	b	9550 <elf_newdata@@ELFUTILS_1.0+0xc8>
    957c:	mov	x20, #0x0                   	// #0
    9580:	b	9508 <elf_newdata@@ELFUTILS_1.0+0x80>

0000000000009584 <elf_getdata_rawchunk@@ELFUTILS_1.3>:
    9584:	stp	x29, x30, [sp, #-96]!
    9588:	mov	x29, sp
    958c:	stp	x19, x20, [sp, #16]
    9590:	mov	x19, x0
    9594:	stp	x21, x22, [sp, #32]
    9598:	stp	x23, x24, [sp, #48]
    959c:	stp	x25, x26, [sp, #64]
    95a0:	stp	x27, x28, [sp, #80]
    95a4:	cbz	x0, 95c0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x3c>
    95a8:	ldr	w0, [x0, #24]
    95ac:	cmp	w0, #0x3
    95b0:	b.eq	95e0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x5c>  // b.none
    95b4:	mov	w0, #0x4                   	// #4
    95b8:	mov	x19, #0x0                   	// #0
    95bc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    95c0:	mov	x0, x19
    95c4:	ldp	x19, x20, [sp, #16]
    95c8:	ldp	x21, x22, [sp, #32]
    95cc:	ldp	x23, x24, [sp, #48]
    95d0:	ldp	x25, x26, [sp, #64]
    95d4:	ldp	x27, x28, [sp, #80]
    95d8:	ldp	x29, x30, [sp], #96
    95dc:	ret
    95e0:	mov	x23, x1
    95e4:	tbnz	x1, #63, 9604 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x80>
    95e8:	ldr	x1, [x19, #48]
    95ec:	cmp	x1, x23
    95f0:	b.cc	9604 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x80>  // b.lo, b.ul, b.last
    95f4:	sub	x1, x1, x23
    95f8:	mov	x21, x2
    95fc:	cmp	x1, x2
    9600:	b.cs	960c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x88>  // b.hs, b.nlast
    9604:	mov	w0, #0xb                   	// #11
    9608:	b	95b8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x34>
    960c:	mov	w25, w3
    9610:	cmp	w3, #0x1a
    9614:	b.hi	95b8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x34>  // b.pmore
    9618:	ldr	w0, [x19, #32]
    961c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    9620:	add	x1, x1, #0xac4
    9624:	mov	x2, #0x1b                  	// #27
    9628:	sub	w0, w0, #0x1
    962c:	mov	w26, w3
    9630:	madd	x0, x0, x2, x1
    9634:	ldrb	w24, [x0, w3, uxtw]
    9638:	ldr	x0, [x19]
    963c:	cmp	w24, #0x0
    9640:	csinc	w24, w24, wzr, ne  // ne = any
    9644:	and	x24, x24, #0xff
    9648:	cbz	x0, 96c8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x144>
    964c:	ldr	x20, [x19, #40]
    9650:	add	x23, x23, x20
    9654:	add	x20, x0, x23
    9658:	sub	x0, x24, #0x1
    965c:	tst	x20, x0
    9660:	b.eq	9764 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1e0>  // b.none
    9664:	mov	x0, x21
    9668:	bl	3100 <malloc@plt>
    966c:	mov	x22, x0
    9670:	cbz	x0, 96d8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x154>
    9674:	mov	x1, x20
    9678:	mov	x20, x22
    967c:	mov	w23, #0x80                  	// #128
    9680:	mov	x2, x21
    9684:	bl	3060 <memcpy@plt>
    9688:	ldr	x0, [x19, #72]
    968c:	ldrb	w0, [x0, #5]
    9690:	cmp	w0, #0x1
    9694:	b.ne	97b0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x22c>  // b.any
    9698:	sub	x0, x24, #0x1
    969c:	tst	x20, x0
    96a0:	b.eq	9790 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x20c>  // b.none
    96a4:	cbz	w23, 976c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1e8>
    96a8:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    96ac:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    96b0:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    96b4:	add	x3, x3, #0xb1c
    96b8:	add	x1, x1, #0xafa
    96bc:	add	x0, x0, #0xb11
    96c0:	mov	w2, #0x82                  	// #130
    96c4:	bl	3380 <__assert_fail@plt>
    96c8:	mov	x0, x21
    96cc:	bl	3100 <malloc@plt>
    96d0:	mov	x20, x0
    96d4:	cbnz	x0, 96e0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x15c>
    96d8:	mov	w0, #0x8                   	// #8
    96dc:	b	95b8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x34>
    96e0:	ldr	x1, [x19, #40]
    96e4:	mov	x28, #0x0                   	// #0
    96e8:	ldr	w27, [x19, #36]
    96ec:	add	x23, x23, x1
    96f0:	add	x3, x23, x28
    96f4:	sub	x2, x21, x28
    96f8:	add	x1, x20, x28
    96fc:	mov	w0, w27
    9700:	bl	32a0 <pread@plt>
    9704:	mov	x22, x0
    9708:	cmn	x0, #0x1
    970c:	b.ne	972c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1a8>  // b.any
    9710:	bl	3390 <__errno_location@plt>
    9714:	ldr	w0, [x0]
    9718:	cmp	w0, #0x4
    971c:	b.ne	9738 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1b4>  // b.any
    9720:	mov	x22, x28
    9724:	mov	x28, x22
    9728:	b	96f0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x16c>
    972c:	cmp	x0, #0x0
    9730:	b.gt	9754 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1d0>
    9734:	csel	x22, x0, x28, ne  // ne = any
    9738:	cmp	x21, x22
    973c:	mov	w23, #0x80                  	// #128
    9740:	b.eq	9688 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x104>  // b.none
    9744:	mov	x0, x20
    9748:	bl	3250 <free@plt>
    974c:	mov	w0, #0x13                  	// #19
    9750:	b	95b8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x34>
    9754:	add	x22, x0, x28
    9758:	cmp	x21, x22
    975c:	b.hi	9724 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1a0>  // b.pmore
    9760:	b	9738 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1b4>
    9764:	mov	w23, #0x0                   	// #0
    9768:	b	9688 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x104>
    976c:	mov	x0, x21
    9770:	bl	3100 <malloc@plt>
    9774:	mov	x22, x0
    9778:	cbz	x0, 96d8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x154>
    977c:	mov	x1, x20
    9780:	mov	x20, x22
    9784:	mov	w23, #0x80                  	// #128
    9788:	mov	x2, x21
    978c:	bl	3060 <memcpy@plt>
    9790:	mov	x1, #0x100                 	// #256
    9794:	mov	x0, #0x1                   	// #1
    9798:	bl	3180 <calloc@plt>
    979c:	cbnz	x0, 9808 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x284>
    97a0:	cbz	w23, 96d8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x154>
    97a4:	mov	x0, x20
    97a8:	bl	3250 <free@plt>
    97ac:	b	96d8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x154>
    97b0:	cbnz	w23, 9800 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x27c>
    97b4:	mov	x0, x21
    97b8:	bl	3100 <malloc@plt>
    97bc:	mov	x22, x0
    97c0:	cbz	x0, 96d8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x154>
    97c4:	mov	w23, #0x80                  	// #128
    97c8:	ldr	w0, [x19, #32]
    97cc:	mov	x1, #0x1b                  	// #27
    97d0:	mov	x2, x21
    97d4:	mov	w3, #0x0                   	// #0
    97d8:	sub	w0, w0, #0x1
    97dc:	madd	x26, x0, x1, x26
    97e0:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    97e4:	add	x0, x0, #0xbd8
    97e8:	mov	x1, x20
    97ec:	mov	x20, x22
    97f0:	ldr	x4, [x0, x26, lsl #3]
    97f4:	mov	x0, x22
    97f8:	blr	x4
    97fc:	b	9790 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x20c>
    9800:	mov	x22, x20
    9804:	b	97c8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x244>
    9808:	add	x1, x0, #0x30
    980c:	stp	x24, x1, [x0, #32]
    9810:	mov	w1, #0x1                   	// #1
    9814:	str	w1, [x0, #12]
    9818:	ldr	x1, [x19, #104]
    981c:	str	x20, [x0]
    9820:	str	w25, [x0, #8]
    9824:	str	x21, [x0, #16]
    9828:	str	x1, [x0, #48]
    982c:	str	x0, [x19, #104]
    9830:	str	x19, [x0, #184]
    9834:	mov	x19, x0
    9838:	str	w23, [x0, #204]
    983c:	b	95c0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x3c>

0000000000009840 <elf_flagelf@@ELFUTILS_1.0>:
    9840:	cbz	x0, 98b4 <elf_flagelf@@ELFUTILS_1.0+0x74>
    9844:	stp	x29, x30, [sp, #-16]!
    9848:	mov	x3, x0
    984c:	mov	x29, sp
    9850:	ldr	w0, [x0, #24]
    9854:	cmp	w0, #0x3
    9858:	b.eq	986c <elf_flagelf@@ELFUTILS_1.0+0x2c>  // b.none
    985c:	mov	w0, #0x4                   	// #4
    9860:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9864:	mov	w0, #0x0                   	// #0
    9868:	b	9888 <elf_flagelf@@ELFUTILS_1.0+0x48>
    986c:	cmp	w1, #0x5
    9870:	b.ne	9890 <elf_flagelf@@ELFUTILS_1.0+0x50>  // b.any
    9874:	mov	w0, #0xd                   	// #13
    9878:	and	w2, w2, w0
    987c:	ldr	w0, [x3, #56]
    9880:	orr	w0, w2, w0
    9884:	str	w0, [x3, #56]
    9888:	ldp	x29, x30, [sp], #16
    988c:	ret
    9890:	cmp	w1, #0x4
    9894:	b.ne	98ac <elf_flagelf@@ELFUTILS_1.0+0x6c>  // b.any
    9898:	mov	w0, #0xd                   	// #13
    989c:	and	w2, w2, w0
    98a0:	ldr	w0, [x3, #56]
    98a4:	bic	w0, w0, w2
    98a8:	b	9884 <elf_flagelf@@ELFUTILS_1.0+0x44>
    98ac:	mov	w0, #0x19                  	// #25
    98b0:	b	9860 <elf_flagelf@@ELFUTILS_1.0+0x20>
    98b4:	mov	w0, #0x0                   	// #0
    98b8:	ret

00000000000098bc <elf_flagehdr@@ELFUTILS_1.0>:
    98bc:	cbz	x0, 9928 <elf_flagehdr@@ELFUTILS_1.0+0x6c>
    98c0:	stp	x29, x30, [sp, #-16]!
    98c4:	mov	x3, x0
    98c8:	mov	x29, sp
    98cc:	ldr	w0, [x0, #24]
    98d0:	cmp	w0, #0x3
    98d4:	b.eq	98e8 <elf_flagehdr@@ELFUTILS_1.0+0x2c>  // b.none
    98d8:	mov	w0, #0x4                   	// #4
    98dc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    98e0:	mov	w0, #0x0                   	// #0
    98e4:	b	9900 <elf_flagehdr@@ELFUTILS_1.0+0x44>
    98e8:	cmp	w1, #0x5
    98ec:	b.ne	9908 <elf_flagehdr@@ELFUTILS_1.0+0x4c>  // b.any
    98f0:	ldr	w0, [x3, #116]
    98f4:	and	w2, w2, #0x1
    98f8:	orr	w0, w2, w0
    98fc:	str	w0, [x3, #116]
    9900:	ldp	x29, x30, [sp], #16
    9904:	ret
    9908:	cmp	w1, #0x4
    990c:	b.ne	9920 <elf_flagehdr@@ELFUTILS_1.0+0x64>  // b.any
    9910:	ldr	w0, [x3, #116]
    9914:	and	w2, w2, #0x1
    9918:	bic	w0, w0, w2
    991c:	b	98fc <elf_flagehdr@@ELFUTILS_1.0+0x40>
    9920:	mov	w0, #0x19                  	// #25
    9924:	b	98dc <elf_flagehdr@@ELFUTILS_1.0+0x20>
    9928:	mov	w0, #0x0                   	// #0
    992c:	ret

0000000000009930 <elf_flagphdr@@ELFUTILS_1.0>:
    9930:	cbz	x0, 999c <elf_flagphdr@@ELFUTILS_1.0+0x6c>
    9934:	stp	x29, x30, [sp, #-16]!
    9938:	mov	x3, x0
    993c:	mov	x29, sp
    9940:	ldr	w0, [x0, #24]
    9944:	cmp	w0, #0x3
    9948:	b.eq	995c <elf_flagphdr@@ELFUTILS_1.0+0x2c>  // b.none
    994c:	mov	w0, #0x4                   	// #4
    9950:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9954:	mov	w0, #0x0                   	// #0
    9958:	b	9974 <elf_flagphdr@@ELFUTILS_1.0+0x44>
    995c:	cmp	w1, #0x5
    9960:	b.ne	997c <elf_flagphdr@@ELFUTILS_1.0+0x4c>  // b.any
    9964:	ldr	w0, [x3, #120]
    9968:	and	w2, w2, #0x1
    996c:	orr	w0, w2, w0
    9970:	str	w0, [x3, #120]
    9974:	ldp	x29, x30, [sp], #16
    9978:	ret
    997c:	cmp	w1, #0x4
    9980:	b.ne	9994 <elf_flagphdr@@ELFUTILS_1.0+0x64>  // b.any
    9984:	ldr	w0, [x3, #120]
    9988:	and	w2, w2, #0x1
    998c:	bic	w0, w0, w2
    9990:	b	9970 <elf_flagphdr@@ELFUTILS_1.0+0x40>
    9994:	mov	w0, #0x19                  	// #25
    9998:	b	9950 <elf_flagphdr@@ELFUTILS_1.0+0x20>
    999c:	mov	w0, #0x0                   	// #0
    99a0:	ret

00000000000099a4 <elf_flagscn@@ELFUTILS_1.0>:
    99a4:	cbz	x0, 9a14 <elf_flagscn@@ELFUTILS_1.0+0x70>
    99a8:	stp	x29, x30, [sp, #-16]!
    99ac:	mov	x3, x0
    99b0:	mov	x29, sp
    99b4:	ldr	x0, [x0, #136]
    99b8:	ldr	w0, [x0, #24]
    99bc:	cmp	w0, #0x3
    99c0:	b.eq	99d4 <elf_flagscn@@ELFUTILS_1.0+0x30>  // b.none
    99c4:	mov	w0, #0x4                   	// #4
    99c8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    99cc:	mov	w0, #0x0                   	// #0
    99d0:	b	99ec <elf_flagscn@@ELFUTILS_1.0+0x48>
    99d4:	cmp	w1, #0x5
    99d8:	b.ne	99f4 <elf_flagscn@@ELFUTILS_1.0+0x50>  // b.any
    99dc:	ldr	w0, [x3, #156]
    99e0:	and	w2, w2, #0x1
    99e4:	orr	w0, w2, w0
    99e8:	str	w0, [x3, #156]
    99ec:	ldp	x29, x30, [sp], #16
    99f0:	ret
    99f4:	cmp	w1, #0x4
    99f8:	b.ne	9a0c <elf_flagscn@@ELFUTILS_1.0+0x68>  // b.any
    99fc:	ldr	w0, [x3, #156]
    9a00:	and	w2, w2, #0x1
    9a04:	bic	w0, w0, w2
    9a08:	b	99e8 <elf_flagscn@@ELFUTILS_1.0+0x44>
    9a0c:	mov	w0, #0x19                  	// #25
    9a10:	b	99c8 <elf_flagscn@@ELFUTILS_1.0+0x24>
    9a14:	mov	w0, #0x0                   	// #0
    9a18:	ret

0000000000009a1c <elf_flagshdr@@ELFUTILS_1.0>:
    9a1c:	cbz	x0, 9a8c <elf_flagshdr@@ELFUTILS_1.0+0x70>
    9a20:	stp	x29, x30, [sp, #-16]!
    9a24:	mov	x3, x0
    9a28:	mov	x29, sp
    9a2c:	ldr	x0, [x0, #136]
    9a30:	ldr	w0, [x0, #24]
    9a34:	cmp	w0, #0x3
    9a38:	b.eq	9a4c <elf_flagshdr@@ELFUTILS_1.0+0x30>  // b.none
    9a3c:	mov	w0, #0x4                   	// #4
    9a40:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9a44:	mov	w0, #0x0                   	// #0
    9a48:	b	9a64 <elf_flagshdr@@ELFUTILS_1.0+0x48>
    9a4c:	cmp	w1, #0x5
    9a50:	b.ne	9a6c <elf_flagshdr@@ELFUTILS_1.0+0x50>  // b.any
    9a54:	ldr	w0, [x3, #152]
    9a58:	and	w2, w2, #0x1
    9a5c:	orr	w0, w2, w0
    9a60:	str	w0, [x3, #152]
    9a64:	ldp	x29, x30, [sp], #16
    9a68:	ret
    9a6c:	cmp	w1, #0x4
    9a70:	b.ne	9a84 <elf_flagshdr@@ELFUTILS_1.0+0x68>  // b.any
    9a74:	ldr	w0, [x3, #152]
    9a78:	and	w2, w2, #0x1
    9a7c:	bic	w0, w0, w2
    9a80:	b	9a60 <elf_flagshdr@@ELFUTILS_1.0+0x44>
    9a84:	mov	w0, #0x19                  	// #25
    9a88:	b	9a40 <elf_flagshdr@@ELFUTILS_1.0+0x24>
    9a8c:	mov	w0, #0x0                   	// #0
    9a90:	ret

0000000000009a94 <elf_flagdata@@ELFUTILS_1.0>:
    9a94:	cbz	x0, 9b04 <elf_flagdata@@ELFUTILS_1.0+0x70>
    9a98:	stp	x29, x30, [sp, #-16]!
    9a9c:	mov	x29, sp
    9aa0:	ldr	x3, [x0, #40]
    9aa4:	ldr	x0, [x3, #136]
    9aa8:	ldr	w0, [x0, #24]
    9aac:	cmp	w0, #0x3
    9ab0:	b.eq	9ac4 <elf_flagdata@@ELFUTILS_1.0+0x30>  // b.none
    9ab4:	mov	w0, #0x4                   	// #4
    9ab8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9abc:	mov	w0, #0x0                   	// #0
    9ac0:	b	9adc <elf_flagdata@@ELFUTILS_1.0+0x48>
    9ac4:	cmp	w1, #0x5
    9ac8:	b.ne	9ae4 <elf_flagdata@@ELFUTILS_1.0+0x50>  // b.any
    9acc:	and	w0, w2, #0x1
    9ad0:	ldr	w2, [x3, #156]
    9ad4:	orr	w0, w0, w2
    9ad8:	str	w0, [x3, #156]
    9adc:	ldp	x29, x30, [sp], #16
    9ae0:	ret
    9ae4:	cmp	w1, #0x4
    9ae8:	b.ne	9afc <elf_flagdata@@ELFUTILS_1.0+0x68>  // b.any
    9aec:	and	w0, w2, #0x1
    9af0:	ldr	w2, [x3, #156]
    9af4:	bic	w0, w2, w0
    9af8:	b	9ad8 <elf_flagdata@@ELFUTILS_1.0+0x44>
    9afc:	mov	w0, #0x19                  	// #25
    9b00:	b	9ab8 <elf_flagdata@@ELFUTILS_1.0+0x24>
    9b04:	mov	w0, #0x0                   	// #0
    9b08:	ret

0000000000009b0c <elf_memory@@ELFUTILS_1.0>:
    9b0c:	cbz	x0, 9b2c <elf_memory@@ELFUTILS_1.0+0x20>
    9b10:	mov	x3, x1
    9b14:	mov	x5, #0x0                   	// #0
    9b18:	mov	x1, x0
    9b1c:	mov	w4, #0x1                   	// #1
    9b20:	mov	x2, #0x0                   	// #0
    9b24:	mov	w0, #0xffffffff            	// #-1
    9b28:	b	3f6c <elf_fill@@ELFUTILS_1.0+0x8d8>
    9b2c:	stp	x29, x30, [sp, #-16]!
    9b30:	mov	w0, #0x17                  	// #23
    9b34:	mov	x29, sp
    9b38:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9b3c:	mov	x0, #0x0                   	// #0
    9b40:	ldp	x29, x30, [sp], #16
    9b44:	ret

0000000000009b48 <elf_update@@ELFUTILS_1.0>:
    9b48:	stp	x29, x30, [sp, #-208]!
    9b4c:	cmp	w1, #0xa
    9b50:	mov	x29, sp
    9b54:	stp	x19, x20, [sp, #16]
    9b58:	stp	x21, x22, [sp, #32]
    9b5c:	str	x23, [sp, #48]
    9b60:	str	wzr, [sp, #76]
    9b64:	b.hi	9b7c <elf_update@@ELFUTILS_1.0+0x34>  // b.pmore
    9b68:	mov	x19, x0
    9b6c:	mov	x0, #0x409                 	// #1033
    9b70:	mov	w22, w1
    9b74:	lsr	x0, x0, x1
    9b78:	tbnz	w0, #0, 9b88 <elf_update@@ELFUTILS_1.0+0x40>
    9b7c:	mov	w0, #0xd                   	// #13
    9b80:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9b84:	b	9b8c <elf_update@@ELFUTILS_1.0+0x44>
    9b88:	cbnz	x19, 9ba8 <elf_update@@ELFUTILS_1.0+0x60>
    9b8c:	mov	x20, #0xffffffffffffffff    	// #-1
    9b90:	mov	x0, x20
    9b94:	ldp	x19, x20, [sp, #16]
    9b98:	ldp	x21, x22, [sp, #32]
    9b9c:	ldr	x23, [sp, #48]
    9ba0:	ldp	x29, x30, [sp], #208
    9ba4:	ret
    9ba8:	ldr	w0, [x19, #24]
    9bac:	cmp	w0, #0x3
    9bb0:	b.eq	9bbc <elf_update@@ELFUTILS_1.0+0x74>  // b.none
    9bb4:	mov	w0, #0x4                   	// #4
    9bb8:	b	9b80 <elf_update@@ELFUTILS_1.0+0x38>
    9bbc:	ldr	x0, [x19, #72]
    9bc0:	cbnz	x0, 9bcc <elf_update@@ELFUTILS_1.0+0x84>
    9bc4:	mov	w0, #0x1a                  	// #26
    9bc8:	b	9b80 <elf_update@@ELFUTILS_1.0+0x38>
    9bcc:	ldr	x1, [x19, #96]
    9bd0:	ldr	w0, [x1]
    9bd4:	cbz	w0, 9c40 <elf_update@@ELFUTILS_1.0+0xf8>
    9bd8:	sub	w0, w0, #0x1
    9bdc:	mov	x2, #0xd0                  	// #208
    9be0:	madd	x0, x0, x2, x1
    9be4:	ldr	x21, [x0, #144]
    9be8:	add	x21, x21, #0x1
    9bec:	ldr	w0, [x19, #32]
    9bf0:	mov	x2, x21
    9bf4:	add	x1, sp, #0x4c
    9bf8:	cmp	w0, #0x1
    9bfc:	mov	x0, x19
    9c00:	b.ne	9c48 <elf_update@@ELFUTILS_1.0+0x100>  // b.any
    9c04:	bl	9e24 <elf_update@@ELFUTILS_1.0+0x2dc>
    9c08:	mov	x20, x0
    9c0c:	cmn	x0, #0x1
    9c10:	b.eq	9b8c <elf_update@@ELFUTILS_1.0+0x44>  // b.none
    9c14:	cmp	w22, #0x3
    9c18:	ccmp	w22, #0xa, #0x4, ne  // ne = any
    9c1c:	b.ne	9b90 <elf_update@@ELFUTILS_1.0+0x48>  // b.any
    9c20:	ldr	w0, [x19, #28]
    9c24:	sub	w1, w0, #0x2
    9c28:	sub	w0, w0, #0x9
    9c2c:	cmp	w1, #0x1
    9c30:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    9c34:	b.ls	9c50 <elf_update@@ELFUTILS_1.0+0x108>  // b.plast
    9c38:	mov	w0, #0x26                  	// #38
    9c3c:	b	9b80 <elf_update@@ELFUTILS_1.0+0x38>
    9c40:	mov	x21, #0x0                   	// #0
    9c44:	b	9bec <elf_update@@ELFUTILS_1.0+0xa4>
    9c48:	bl	a558 <elf_update@@ELFUTILS_1.0+0xa10>
    9c4c:	b	9c08 <elf_update@@ELFUTILS_1.0+0xc0>
    9c50:	ldr	w0, [x19, #36]
    9c54:	cmn	w0, #0x1
    9c58:	b.ne	9c64 <elf_update@@ELFUTILS_1.0+0x11c>  // b.any
    9c5c:	mov	w0, #0x1b                  	// #27
    9c60:	b	9b80 <elf_update@@ELFUTILS_1.0+0x38>
    9c64:	ldr	w23, [x19, #32]
    9c68:	add	x1, sp, #0x50
    9c6c:	ldr	w22, [sp, #76]
    9c70:	bl	fdd8 <elf_compress_gnu@@ELFUTILS_1.7+0x24c>
    9c74:	cbz	w0, 9c80 <elf_update@@ELFUTILS_1.0+0x138>
    9c78:	mov	w0, #0x14                  	// #20
    9c7c:	b	9b80 <elf_update@@ELFUTILS_1.0+0x38>
    9c80:	ldr	x0, [x19, #8]
    9c84:	cbnz	x0, 9cac <elf_update@@ELFUTILS_1.0+0x164>
    9c88:	ldr	x0, [x19, #48]
    9c8c:	cmn	x0, #0x1
    9c90:	b.eq	9c9c <elf_update@@ELFUTILS_1.0+0x154>  // b.none
    9c94:	cmp	x0, x20
    9c98:	b.cs	9cac <elf_update@@ELFUTILS_1.0+0x164>  // b.hs, b.nlast
    9c9c:	ldr	w0, [x19, #36]
    9ca0:	mov	x1, x20
    9ca4:	bl	3370 <ftruncate@plt>
    9ca8:	cbnz	w0, 9c78 <elf_update@@ELFUTILS_1.0+0x130>
    9cac:	ldr	x0, [x19]
    9cb0:	cbz	x0, 9da0 <elf_update@@ELFUTILS_1.0+0x258>
    9cb4:	ldr	x0, [x19, #8]
    9cb8:	cbnz	x0, 9d28 <elf_update@@ELFUTILS_1.0+0x1e0>
    9cbc:	ldr	x0, [x19, #48]
    9cc0:	cmn	x0, #0x1
    9cc4:	b.eq	9cd0 <elf_update@@ELFUTILS_1.0+0x188>  // b.none
    9cc8:	cmp	x0, x20
    9ccc:	b.cs	9d28 <elf_update@@ELFUTILS_1.0+0x1e0>  // b.hs, b.nlast
    9cd0:	ldr	w0, [x19, #36]
    9cd4:	mov	x2, x20
    9cd8:	mov	x1, #0x0                   	// #0
    9cdc:	bl	3090 <posix_fallocate@plt>
    9ce0:	cbz	w0, 9cf4 <elf_update@@ELFUTILS_1.0+0x1ac>
    9ce4:	bl	3390 <__errno_location@plt>
    9ce8:	ldr	w0, [x0]
    9cec:	cmp	w0, #0x1c
    9cf0:	b.eq	9c78 <elf_update@@ELFUTILS_1.0+0x130>  // b.none
    9cf4:	ldr	w0, [x19, #28]
    9cf8:	cmp	w0, #0x9
    9cfc:	b.ne	9d28 <elf_update@@ELFUTILS_1.0+0x1e0>  // b.any
    9d00:	ldr	x1, [x19, #48]
    9d04:	cmp	x1, x20
    9d08:	b.cs	9d28 <elf_update@@ELFUTILS_1.0+0x1e0>  // b.hs, b.nlast
    9d0c:	ldr	x0, [x19]
    9d10:	mov	x2, x20
    9d14:	mov	w3, #0x0                   	// #0
    9d18:	bl	30c0 <mremap@plt>
    9d1c:	cmn	x0, #0x1
    9d20:	b.eq	9c78 <elf_update@@ELFUTILS_1.0+0x130>  // b.none
    9d24:	str	x20, [x19, #48]
    9d28:	mov	x2, x21
    9d2c:	mov	w1, w22
    9d30:	mov	x0, x19
    9d34:	cmp	w23, #0x1
    9d38:	b.ne	9e08 <elf_update@@ELFUTILS_1.0+0x2c0>  // b.any
    9d3c:	bl	af14 <elf_update@@ELFUTILS_1.0+0x13cc>
    9d40:	cmp	w0, #0x0
    9d44:	cset	w0, ne  // ne = any
    9d48:	cbnz	w0, 9b8c <elf_update@@ELFUTILS_1.0+0x44>
    9d4c:	ldr	x0, [x19, #8]
    9d50:	cbnz	x0, 9d78 <elf_update@@ELFUTILS_1.0+0x230>
    9d54:	ldr	x0, [x19, #48]
    9d58:	cmn	x0, #0x1
    9d5c:	b.eq	9d78 <elf_update@@ELFUTILS_1.0+0x230>  // b.none
    9d60:	cmp	x0, x20
    9d64:	b.ls	9d78 <elf_update@@ELFUTILS_1.0+0x230>  // b.plast
    9d68:	ldr	w0, [x19, #36]
    9d6c:	mov	x1, x20
    9d70:	bl	3370 <ftruncate@plt>
    9d74:	cbnz	w0, 9c78 <elf_update@@ELFUTILS_1.0+0x130>
    9d78:	ldr	w1, [sp, #96]
    9d7c:	tst	w1, #0xc00
    9d80:	b.eq	9d90 <elf_update@@ELFUTILS_1.0+0x248>  // b.none
    9d84:	ldr	w0, [x19, #36]
    9d88:	bl	3160 <fchmod@plt>
    9d8c:	cbnz	w0, 9c78 <elf_update@@ELFUTILS_1.0+0x130>
    9d90:	ldr	x0, [x19, #8]
    9d94:	cbnz	x0, 9b90 <elf_update@@ELFUTILS_1.0+0x48>
    9d98:	str	x20, [x19, #48]
    9d9c:	b	9b90 <elf_update@@ELFUTILS_1.0+0x48>
    9da0:	ldr	w0, [x19, #28]
    9da4:	cmp	w0, #0xa
    9da8:	b.ne	9dd8 <elf_update@@ELFUTILS_1.0+0x290>  // b.any
    9dac:	ldr	w4, [x19, #36]
    9db0:	mov	x1, x20
    9db4:	mov	x5, #0x0                   	// #0
    9db8:	mov	w3, #0x1                   	// #1
    9dbc:	mov	w2, #0x3                   	// #3
    9dc0:	mov	x0, #0x0                   	// #0
    9dc4:	bl	3240 <mmap@plt>
    9dc8:	str	x0, [x19]
    9dcc:	cmn	x0, #0x1
    9dd0:	b.ne	9df4 <elf_update@@ELFUTILS_1.0+0x2ac>  // b.any
    9dd4:	str	xzr, [x19]
    9dd8:	cmp	w23, #0x1
    9ddc:	b.ne	9e10 <elf_update@@ELFUTILS_1.0+0x2c8>  // b.any
    9de0:	mov	x2, x21
    9de4:	mov	w1, w22
    9de8:	mov	x0, x19
    9dec:	bl	b768 <elf_update@@ELFUTILS_1.0+0x1c20>
    9df0:	b	9d40 <elf_update@@ELFUTILS_1.0+0x1f8>
    9df4:	ldr	w1, [x19, #56]
    9df8:	orr	w1, w1, #0x40
    9dfc:	str	w1, [x19, #56]
    9e00:	cbz	x0, 9dd8 <elf_update@@ELFUTILS_1.0+0x290>
    9e04:	b	9cb4 <elf_update@@ELFUTILS_1.0+0x16c>
    9e08:	bl	c070 <elf_update@@ELFUTILS_1.0+0x2528>
    9e0c:	b	9d40 <elf_update@@ELFUTILS_1.0+0x1f8>
    9e10:	mov	x2, x21
    9e14:	mov	w1, w22
    9e18:	mov	x0, x19
    9e1c:	bl	c900 <elf_update@@ELFUTILS_1.0+0x2db8>
    9e20:	b	9d40 <elf_update@@ELFUTILS_1.0+0x1f8>
    9e24:	stp	x29, x30, [sp, #-144]!
    9e28:	mov	x29, sp
    9e2c:	stp	x19, x20, [sp, #16]
    9e30:	mov	x19, x1
    9e34:	mov	x20, x2
    9e38:	stp	x21, x22, [sp, #32]
    9e3c:	stp	x23, x24, [sp, #48]
    9e40:	stp	x25, x26, [sp, #64]
    9e44:	stp	x27, x28, [sp, #80]
    9e48:	mov	x27, x0
    9e4c:	bl	6104 <elf64_xlatetom@@ELFUTILS_1.0+0xfec>
    9e50:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    9e54:	mov	x28, x0
    9e58:	add	x1, x1, #0x50e
    9e5c:	mov	x2, #0x4                   	// #4
    9e60:	bl	3210 <memcmp@plt>
    9e64:	cbz	w0, 9e80 <elf_update@@ELFUTILS_1.0+0x338>
    9e68:	mov	w0, #0x457f                	// #17791
    9e6c:	movk	w0, #0x464c, lsl #16
    9e70:	str	w0, [x28]
    9e74:	ldr	w0, [x27, #116]
    9e78:	orr	w0, w0, #0x1
    9e7c:	str	w0, [x27, #116]
    9e80:	ldrb	w0, [x28, #4]
    9e84:	cmp	w0, #0x1
    9e88:	b.eq	9ea0 <elf_update@@ELFUTILS_1.0+0x358>  // b.none
    9e8c:	mov	w0, #0x1                   	// #1
    9e90:	strb	w0, [x28, #4]
    9e94:	ldr	w0, [x27, #116]
    9e98:	orr	w0, w0, #0x1
    9e9c:	str	w0, [x27, #116]
    9ea0:	ldrb	w0, [x28, #5]
    9ea4:	cbnz	w0, 9fa4 <elf_update@@ELFUTILS_1.0+0x45c>
    9ea8:	mov	w0, #0x1                   	// #1
    9eac:	strb	w0, [x28, #5]
    9eb0:	ldr	w0, [x27, #116]
    9eb4:	orr	w0, w0, #0x1
    9eb8:	str	w0, [x27, #116]
    9ebc:	ldrb	w0, [x28, #6]
    9ec0:	cmp	w0, #0x1
    9ec4:	b.eq	9edc <elf_update@@ELFUTILS_1.0+0x394>  // b.none
    9ec8:	mov	w0, #0x1                   	// #1
    9ecc:	strb	w0, [x28, #6]
    9ed0:	ldr	w0, [x27, #116]
    9ed4:	orr	w0, w0, #0x1
    9ed8:	str	w0, [x27, #116]
    9edc:	ldr	w0, [x28, #20]
    9ee0:	cbnz	w0, 9fc8 <elf_update@@ELFUTILS_1.0+0x480>
    9ee4:	mov	w0, #0x1                   	// #1
    9ee8:	str	w0, [x28, #20]
    9eec:	ldr	w0, [x27, #116]
    9ef0:	orr	w0, w0, #0x1
    9ef4:	str	w0, [x27, #116]
    9ef8:	mov	x1, #0xfeff                	// #65279
    9efc:	ldrh	w0, [x28, #48]
    9f00:	cmp	x20, x1
    9f04:	b.ls	9fd8 <elf_update@@ELFUTILS_1.0+0x490>  // b.plast
    9f08:	cbz	w0, 9f1c <elf_update@@ELFUTILS_1.0+0x3d4>
    9f0c:	strh	wzr, [x28, #48]
    9f10:	ldr	w0, [x27, #116]
    9f14:	orr	w0, w0, #0x1
    9f18:	str	w0, [x27, #116]
    9f1c:	adrp	x19, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    9f20:	add	x0, x19, #0x618
    9f24:	ldr	x22, [x0, #24]
    9f28:	ldrh	w0, [x28, #40]
    9f2c:	cmp	x0, x22
    9f30:	b.eq	9f44 <elf_update@@ELFUTILS_1.0+0x3fc>  // b.none
    9f34:	ldr	w0, [x27, #116]
    9f38:	strh	w22, [x28, #40]
    9f3c:	orr	w0, w0, #0x1
    9f40:	str	w0, [x27, #116]
    9f44:	ldrh	w0, [x28, #44]
    9f48:	cbnz	w0, 9f64 <elf_update@@ELFUTILS_1.0+0x41c>
    9f4c:	ldr	w0, [x28, #28]
    9f50:	cbz	w0, 9f64 <elf_update@@ELFUTILS_1.0+0x41c>
    9f54:	str	wzr, [x28, #28]
    9f58:	ldr	w0, [x27, #116]
    9f5c:	orr	w0, w0, #0x1
    9f60:	str	w0, [x27, #116]
    9f64:	ldr	x0, [x27, #88]
    9f68:	mov	w26, w22
    9f6c:	cbz	x0, 9fe8 <elf_update@@ELFUTILS_1.0+0x4a0>
    9f70:	add	x1, sp, #0x88
    9f74:	mov	x0, x27
    9f78:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    9f7c:	mov	w21, w0
    9f80:	cbz	w0, a028 <elf_update@@ELFUTILS_1.0+0x4e0>
    9f84:	mov	x0, #0xffffffffffffffff    	// #-1
    9f88:	ldp	x19, x20, [sp, #16]
    9f8c:	ldp	x21, x22, [sp, #32]
    9f90:	ldp	x23, x24, [sp, #48]
    9f94:	ldp	x25, x26, [sp, #64]
    9f98:	ldp	x27, x28, [sp, #80]
    9f9c:	ldp	x29, x30, [sp], #144
    9fa0:	ret
    9fa4:	cmp	w0, #0x2
    9fa8:	b.ls	9fb8 <elf_update@@ELFUTILS_1.0+0x470>  // b.plast
    9fac:	mov	w0, #0x22                  	// #34
    9fb0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    9fb4:	b	9f84 <elf_update@@ELFUTILS_1.0+0x43c>
    9fb8:	cmp	w0, #0x1
    9fbc:	cset	w0, ne  // ne = any
    9fc0:	str	w0, [x19]
    9fc4:	b	9ebc <elf_update@@ELFUTILS_1.0+0x374>
    9fc8:	cmp	w0, #0x1
    9fcc:	b.eq	9ef8 <elf_update@@ELFUTILS_1.0+0x3b0>  // b.none
    9fd0:	mov	w0, #0x2                   	// #2
    9fd4:	b	9fb0 <elf_update@@ELFUTILS_1.0+0x468>
    9fd8:	cmp	x20, w0, uxth
    9fdc:	b.eq	9f1c <elf_update@@ELFUTILS_1.0+0x3d4>  // b.none
    9fe0:	strh	w20, [x28, #48]
    9fe4:	b	9f10 <elf_update@@ELFUTILS_1.0+0x3c8>
    9fe8:	mov	x0, x27
    9fec:	bl	6594 <gelf_update_ehdr@@ELFUTILS_1.0+0x12c>
    9ff0:	ldr	x0, [x27, #88]
    9ff4:	cbnz	x0, 9f70 <elf_update@@ELFUTILS_1.0+0x428>
    9ff8:	mov	w21, #0x0                   	// #0
    9ffc:	cbz	x20, a51c <elf_update@@ELFUTILS_1.0+0x9d4>
    a000:	ldr	w0, [x27, #200]
    a004:	cbnz	w0, a074 <elf_update@@ELFUTILS_1.0+0x52c>
    a008:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a00c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a010:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a014:	add	x3, x3, #0xbbd
    a018:	add	x1, x1, #0xb31
    a01c:	add	x0, x0, #0xb44
    a020:	mov	w2, #0xb4                  	// #180
    a024:	bl	3380 <__assert_fail@plt>
    a028:	ldr	w6, [x27, #56]
    a02c:	add	x0, x19, #0x618
    a030:	ldr	w2, [x28, #28]
    a034:	and	w1, w6, #0x4
    a038:	ldr	x3, [x0, #48]
    a03c:	ldr	x0, [sp, #136]
    a040:	tbz	w6, #2, a058 <elf_update@@ELFUTILS_1.0+0x510>
    a044:	madd	x3, x3, x0, x2
    a048:	and	x0, x22, #0xffffffff
    a04c:	cmp	x3, w22, uxtw
    a050:	csel	x26, x3, x0, cs  // cs = hs, nlast
    a054:	b	9ffc <elf_update@@ELFUTILS_1.0+0x4b4>
    a058:	cmp	x22, x2
    a05c:	b.eq	a068 <elf_update@@ELFUTILS_1.0+0x520>  // b.none
    a060:	mov	w1, #0x1                   	// #1
    a064:	str	w22, [x28, #28]
    a068:	madd	w26, w3, w0, w22
    a06c:	mov	w21, w1
    a070:	b	9ffc <elf_update@@ELFUTILS_1.0+0x4b4>
    a074:	mov	x0, #0xfeff                	// #65279
    a078:	cmp	x20, x0
    a07c:	b.ls	a0a0 <elf_update@@ELFUTILS_1.0+0x558>  // b.plast
    a080:	ldr	x1, [x27, #360]
    a084:	ldr	w2, [x1, #20]
    a088:	cmp	x2, x20
    a08c:	b.eq	a0a0 <elf_update@@ELFUTILS_1.0+0x558>  // b.none
    a090:	str	w20, [x1, #20]
    a094:	ldr	w1, [x27, #368]
    a098:	orr	w1, w1, #0x1
    a09c:	str	w1, [x27, #368]
    a0a0:	ldr	w0, [x27, #200]
    a0a4:	add	x23, x27, #0xc8
    a0a8:	cmp	w0, #0x1
    a0ac:	b.ls	a130 <elf_update@@ELFUTILS_1.0+0x5e8>  // b.plast
    a0b0:	add	x0, x27, #0x1a8
    a0b4:	ldr	x1, [x0, #144]
    a0b8:	cbnz	x1, a0c0 <elf_update@@ELFUTILS_1.0+0x578>
    a0bc:	bl	8498 <elf_newscn@@ELFUTILS_1.0+0x5e0>
    a0c0:	mov	w22, #0x1                   	// #1
    a0c4:	mov	w25, #0x0                   	// #0
    a0c8:	and	x0, x22, #0xff
    a0cc:	mov	x1, #0xd0                  	// #208
    a0d0:	str	x0, [sp, #96]
    a0d4:	madd	x2, x0, x1, x23
    a0d8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a0dc:	add	x0, x0, #0xbac
    a0e0:	str	x0, [sp, #104]
    a0e4:	add	x24, x2, #0x10
    a0e8:	ldr	x1, [sp, #96]
    a0ec:	ldr	w0, [x23]
    a0f0:	cmp	x1, w0, uxtw
    a0f4:	b.cc	a148 <elf_update@@ELFUTILS_1.0+0x600>  // b.lo, b.ul, b.last
    a0f8:	ldr	x1, [x23, #8]
    a0fc:	cbz	x1, a4e0 <elf_update@@ELFUTILS_1.0+0x998>
    a100:	ldr	w2, [x23, #4]
    a104:	mov	w22, #0x0                   	// #0
    a108:	cmp	w0, w2
    a10c:	b.eq	a140 <elf_update@@ELFUTILS_1.0+0x5f8>  // b.none
    a110:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a114:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a118:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a11c:	add	x3, x3, #0xbbd
    a120:	add	x1, x1, #0xb31
    a124:	add	x0, x0, #0xb7e
    a128:	mov	w2, #0x19b                 	// #411
    a12c:	b	a024 <elf_update@@ELFUTILS_1.0+0x4dc>
    a130:	ldr	x0, [x27, #208]
    a134:	cbz	x0, a0c0 <elf_update@@ELFUTILS_1.0+0x578>
    a138:	add	x0, x0, #0x10
    a13c:	b	a0b4 <elf_update@@ELFUTILS_1.0+0x56c>
    a140:	mov	x23, x1
    a144:	b	a0c8 <elf_update@@ELFUTILS_1.0+0x580>
    a148:	ldr	x22, [x24, #144]
    a14c:	cbnz	x22, a170 <elf_update@@ELFUTILS_1.0+0x628>
    a150:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a154:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a158:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a15c:	add	x3, x3, #0xbbd
    a160:	add	x1, x1, #0xb31
    a164:	add	x0, x0, #0xb71
    a168:	mov	w2, #0xd6                  	// #214
    a16c:	b	a024 <elf_update@@ELFUTILS_1.0+0x4dc>
    a170:	ldp	w1, w7, [x22, #32]
    a174:	cmp	w1, #0x0
    a178:	csinc	w1, w1, wzr, ne  // ne = any
    a17c:	sub	w8, w1, #0x1
    a180:	ands	w8, w8, w1
    a184:	b.eq	a190 <elf_update@@ELFUTILS_1.0+0x648>  // b.none
    a188:	mov	w0, #0x24                  	// #36
    a18c:	b	9fb0 <elf_update@@ELFUTILS_1.0+0x468>
    a190:	ldr	w0, [x22, #4]
    a194:	cmp	w0, #0x12
    a198:	b.hi	a1c4 <elf_update@@ELFUTILS_1.0+0x67c>  // b.pmore
    a19c:	cmp	w0, #0x1
    a1a0:	b.ls	a1e0 <elf_update@@ELFUTILS_1.0+0x698>  // b.plast
    a1a4:	sub	w0, w0, #0x2
    a1a8:	cmp	w0, #0x10
    a1ac:	b.hi	a318 <elf_update@@ELFUTILS_1.0+0x7d0>  // b.pmore
    a1b0:	ldr	x2, [sp, #104]
    a1b4:	ldrb	w0, [x2, w0, uxtw]
    a1b8:	adr	x2, a1c4 <elf_update@@ELFUTILS_1.0+0x67c>
    a1bc:	add	x0, x2, w0, sxtb #2
    a1c0:	br	x0
    a1c4:	mov	w2, #0xfffa                	// #65530
    a1c8:	movk	w2, #0x6fff, lsl #16
    a1cc:	cmp	w0, w2
    a1d0:	b.eq	a300 <elf_update@@ELFUTILS_1.0+0x7b8>  // b.none
    a1d4:	add	w2, w2, #0x2
    a1d8:	cmp	w0, w2
    a1dc:	b.eq	a30c <elf_update@@ELFUTILS_1.0+0x7c4>  // b.none
    a1e0:	ldr	w0, [x24, #120]
    a1e4:	cbz	w0, a330 <elf_update@@ELFUTILS_1.0+0x7e8>
    a1e8:	ldr	x0, [x24, #64]
    a1ec:	cbz	x0, a3f4 <elf_update@@ELFUTILS_1.0+0x8ac>
    a1f0:	add	x14, x24, #0x48
    a1f4:	mov	x11, x24
    a1f8:	mov	x7, #0x0                   	// #0
    a1fc:	mov	x10, x11
    a200:	cmp	x24, x11
    a204:	b.ne	a21c <elf_update@@ELFUTILS_1.0+0x6d4>  // b.any
    a208:	ldr	x0, [x24]
    a20c:	cbnz	x0, a21c <elf_update@@ELFUTILS_1.0+0x6d4>
    a210:	ldr	x0, [x24, #72]
    a214:	cmp	x0, #0x0
    a218:	csel	x10, x24, x14, eq  // eq = none
    a21c:	ldr	w13, [x10, #12]
    a220:	cmp	w13, #0x1
    a224:	b.ne	9fd0 <elf_update@@ELFUTILS_1.0+0x488>  // b.any
    a228:	ldr	x0, [x10, #32]
    a22c:	sub	x12, x0, #0x1
    a230:	tst	x12, x0
    a234:	b.ne	a188 <elf_update@@ELFUTILS_1.0+0x640>  // b.any
    a238:	ldr	w16, [x27, #56]
    a23c:	cmp	x0, w1, uxtw
    a240:	mov	w12, w1
    a244:	csel	x1, x12, x0, ls  // ls = plast
    a248:	ldp	x12, x15, [x10, #16]
    a24c:	tbz	w16, #2, a348 <elf_update@@ELFUTILS_1.0+0x800>
    a250:	ldr	w0, [x22, #20]
    a254:	add	w12, w15, w12
    a258:	cmp	w12, w0
    a25c:	b.ls	a36c <elf_update@@ELFUTILS_1.0+0x824>  // b.plast
    a260:	mov	w0, #0x23                  	// #35
    a264:	b	9fb0 <elf_update@@ELFUTILS_1.0+0x468>
    a268:	add	x0, x19, #0x618
    a26c:	ldr	w0, [x0, #88]
    a270:	cmp	w0, w7
    a274:	b.eq	a1e0 <elf_update@@ELFUTILS_1.0+0x698>  // b.none
    a278:	str	w0, [x22, #36]
    a27c:	ldr	w0, [x24, #152]
    a280:	orr	w0, w0, #0x1
    a284:	str	w0, [x24, #152]
    a288:	b	a1e0 <elf_update@@ELFUTILS_1.0+0x698>
    a28c:	add	x0, x19, #0x618
    a290:	ldr	w0, [x0, #56]
    a294:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a298:	ldrh	w0, [x28, #16]
    a29c:	cmp	w0, #0x1
    a2a0:	b.eq	a2ac <elf_update@@ELFUTILS_1.0+0x764>  // b.none
    a2a4:	mov	w0, #0x28                  	// #40
    a2a8:	b	9fb0 <elf_update@@ELFUTILS_1.0+0x468>
    a2ac:	add	x0, x19, #0x618
    a2b0:	ldr	w0, [x0, #96]
    a2b4:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a2b8:	ldrh	w0, [x28, #18]
    a2bc:	mov	w10, #0x9026                	// #36902
    a2c0:	cmp	w0, w10
    a2c4:	b.eq	a320 <elf_update@@ELFUTILS_1.0+0x7d8>  // b.none
    a2c8:	cmp	w0, #0x16
    a2cc:	b.ne	a328 <elf_update@@ELFUTILS_1.0+0x7e0>  // b.any
    a2d0:	ldrb	w0, [x28, #4]
    a2d4:	mov	w10, #0x8                   	// #8
    a2d8:	cmp	w0, #0x2
    a2dc:	mov	w0, #0x4                   	// #4
    a2e0:	csel	w0, w0, w10, ne  // ne = any
    a2e4:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a2e8:	add	x0, x19, #0x618
    a2ec:	ldr	w0, [x0, #16]
    a2f0:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a2f4:	add	x0, x19, #0x618
    a2f8:	ldr	w0, [x0, #64]
    a2fc:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a300:	add	x0, x19, #0x618
    a304:	ldr	w0, [x0, #168]
    a308:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a30c:	add	x0, x19, #0x618
    a310:	ldr	w0, [x0, #160]
    a314:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a318:	mov	w0, w7
    a31c:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a320:	mov	w0, #0x8                   	// #8
    a324:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a328:	mov	w0, #0x4                   	// #4
    a32c:	b	a270 <elf_update@@ELFUTILS_1.0+0x728>
    a330:	mov	x0, x24
    a334:	stp	w8, w1, [sp, #116]
    a338:	bl	8e84 <elf_rawdata@@ELFUTILS_1.0+0x120>
    a33c:	ldp	w8, w1, [sp, #116]
    a340:	cbz	w0, a1e8 <elf_update@@ELFUTILS_1.0+0x6a0>
    a344:	b	9f84 <elf_update@@ELFUTILS_1.0+0x43c>
    a348:	sub	x7, x7, #0x1
    a34c:	add	x7, x7, x0
    a350:	neg	x0, x0
    a354:	and	x0, x7, x0
    a358:	cmp	x15, x0
    a35c:	b.eq	a368 <elf_update@@ELFUTILS_1.0+0x820>  // b.none
    a360:	mov	w25, w13
    a364:	str	x0, [x10, #24]
    a368:	add	x7, x12, x0
    a36c:	ldr	x11, [x11, #48]
    a370:	cbnz	x11, a1fc <elf_update@@ELFUTILS_1.0+0x6b4>
    a374:	ldr	w11, [x27, #56]
    a378:	ldr	w0, [x22, #32]
    a37c:	and	w10, w11, #0x4
    a380:	tbz	w11, #2, a3fc <elf_update@@ELFUTILS_1.0+0x8b4>
    a384:	ldr	w7, [x22, #4]
    a388:	cmp	w7, #0x8
    a38c:	b.eq	a398 <elf_update@@ELFUTILS_1.0+0x850>  // b.none
    a390:	ldp	w8, w7, [x22, #16]
    a394:	add	w8, w8, w7
    a398:	cmp	w26, w8
    a39c:	sub	w7, w0, #0x1
    a3a0:	csel	w26, w26, w8, cs  // cs = hs, nlast
    a3a4:	tst	w7, w0
    a3a8:	b.ne	a188 <elf_update@@ELFUTILS_1.0+0x640>  // b.any
    a3ac:	cmp	w0, #0x0
    a3b0:	csinc	w0, w0, wzr, ne  // ne = any
    a3b4:	cmp	w1, w0
    a3b8:	b.hi	a188 <elf_update@@ELFUTILS_1.0+0x640>  // b.pmore
    a3bc:	ldr	w0, [x22, #36]
    a3c0:	cmp	w0, #0x1
    a3c4:	b.ls	a4cc <elf_update@@ELFUTILS_1.0+0x984>  // b.plast
    a3c8:	ldr	w0, [x27, #56]
    a3cc:	tbnz	w0, #3, a4cc <elf_update@@ELFUTILS_1.0+0x984>
    a3d0:	ldr	w0, [x22, #8]
    a3d4:	tbnz	w0, #11, a4b8 <elf_update@@ELFUTILS_1.0+0x970>
    a3d8:	ldr	w1, [x22, #20]
    a3dc:	ldr	w6, [x22, #36]
    a3e0:	udiv	w0, w1, w6
    a3e4:	msub	w0, w0, w6, w1
    a3e8:	cbz	w0, a4cc <elf_update@@ELFUTILS_1.0+0x984>
    a3ec:	mov	w0, #0x25                  	// #37
    a3f0:	b	9fb0 <elf_update@@ELFUTILS_1.0+0x468>
    a3f4:	ldr	x7, [x24, #88]
    a3f8:	b	a374 <elf_update@@ELFUTILS_1.0+0x82c>
    a3fc:	cmp	w0, w1
    a400:	b.eq	a414 <elf_update@@ELFUTILS_1.0+0x8cc>  // b.none
    a404:	str	w1, [x22, #32]
    a408:	ldr	w0, [x24, #152]
    a40c:	orr	w0, w0, #0x1
    a410:	str	w0, [x24, #152]
    a414:	sub	w3, w26, #0x1
    a418:	ldr	w0, [x22, #16]
    a41c:	add	w3, w3, w1
    a420:	neg	w1, w1
    a424:	and	w26, w1, w3
    a428:	cmp	w0, w26
    a42c:	b.eq	a4b0 <elf_update@@ELFUTILS_1.0+0x968>  // b.none
    a430:	str	w26, [x22, #16]
    a434:	ldr	x0, [x24, #64]
    a438:	cbz	x0, a48c <elf_update@@ELFUTILS_1.0+0x944>
    a43c:	mov	w25, #0x1                   	// #1
    a440:	mov	w0, w25
    a444:	ldr	w8, [x22, #20]
    a448:	mov	w1, w7
    a44c:	cmp	w8, w7
    a450:	b.eq	a45c <elf_update@@ELFUTILS_1.0+0x914>  // b.none
    a454:	mov	w10, #0x1                   	// #1
    a458:	str	w7, [x22, #20]
    a45c:	ldr	w7, [x22, #4]
    a460:	orr	w25, w25, w10
    a464:	cmp	w7, #0x8
    a468:	b.eq	a470 <elf_update@@ELFUTILS_1.0+0x928>  // b.none
    a46c:	add	w26, w26, w1
    a470:	orr	w10, w10, w0
    a474:	ldr	w0, [x24, #152]
    a478:	orr	w10, w0, w10
    a47c:	ldr	w0, [x24, #156]
    a480:	orr	w0, w0, w25
    a484:	stp	w10, w0, [x24, #152]
    a488:	b	a3bc <elf_update@@ELFUTILS_1.0+0x874>
    a48c:	mov	x0, x24
    a490:	mov	x1, #0x0                   	// #0
    a494:	str	w10, [sp, #116]
    a498:	str	x7, [sp, #120]
    a49c:	bl	93d0 <elf_rawdata@@ELFUTILS_1.0+0x66c>
    a4a0:	ldr	w10, [sp, #116]
    a4a4:	ldr	x7, [sp, #120]
    a4a8:	cbnz	x0, a43c <elf_update@@ELFUTILS_1.0+0x8f4>
    a4ac:	b	9f84 <elf_update@@ELFUTILS_1.0+0x43c>
    a4b0:	mov	w0, #0x0                   	// #0
    a4b4:	b	a444 <elf_update@@ELFUTILS_1.0+0x8fc>
    a4b8:	mov	x0, x24
    a4bc:	bl	30d0 <elf32_getchdr@plt>
    a4c0:	cbz	x0, 9f84 <elf_update@@ELFUTILS_1.0+0x43c>
    a4c4:	ldr	w1, [x0, #4]
    a4c8:	b	a3dc <elf_update@@ELFUTILS_1.0+0x894>
    a4cc:	ldr	x0, [sp, #96]
    a4d0:	add	x24, x24, #0xd0
    a4d4:	add	x0, x0, #0x1
    a4d8:	str	x0, [sp, #96]
    a4dc:	b	a0e8 <elf_update@@ELFUTILS_1.0+0x5a0>
    a4e0:	add	x19, x19, #0x618
    a4e4:	ldrh	w0, [x28, #46]
    a4e8:	ldr	x2, [x19, #72]
    a4ec:	cmp	x0, x2
    a4f0:	b.eq	a4fc <elf_update@@ELFUTILS_1.0+0x9b4>  // b.none
    a4f4:	mov	w21, #0x1                   	// #1
    a4f8:	strh	w2, [x28, #46]
    a4fc:	ldr	w1, [x27, #56]
    a500:	ldr	w0, [x28, #32]
    a504:	tbz	w1, #2, a530 <elf_update@@ELFUTILS_1.0+0x9e8>
    a508:	mov	w0, w0
    a50c:	madd	x2, x20, x2, x0
    a510:	mov	w0, w26
    a514:	cmp	x2, w26, uxtw
    a518:	csel	x26, x2, x0, cs  // cs = hs, nlast
    a51c:	ldr	w0, [x27, #116]
    a520:	orr	w21, w0, w21
    a524:	mov	w0, w26
    a528:	str	w21, [x27, #116]
    a52c:	b	9f88 <elf_update@@ELFUTILS_1.0+0x440>
    a530:	add	w3, w26, #0x3
    a534:	and	w3, w3, #0xfffffffc
    a538:	cmp	w0, w3
    a53c:	b.eq	a550 <elf_update@@ELFUTILS_1.0+0xa08>  // b.none
    a540:	str	w3, [x28, #32]
    a544:	ldr	w0, [x27, #56]
    a548:	orr	w0, w0, #0x1
    a54c:	str	w0, [x27, #56]
    a550:	madd	w26, w2, w20, w3
    a554:	b	a51c <elf_update@@ELFUTILS_1.0+0x9d4>
    a558:	stp	x29, x30, [sp, #-144]!
    a55c:	mov	x29, sp
    a560:	stp	x19, x20, [sp, #16]
    a564:	mov	x20, x1
    a568:	mov	x19, x2
    a56c:	stp	x21, x22, [sp, #32]
    a570:	stp	x23, x24, [sp, #48]
    a574:	stp	x25, x26, [sp, #64]
    a578:	stp	x27, x28, [sp, #80]
    a57c:	mov	x27, x0
    a580:	bl	61b4 <elf32_getehdr@@ELFUTILS_1.0+0x58>
    a584:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a588:	mov	x28, x0
    a58c:	add	x1, x1, #0x50e
    a590:	mov	x2, #0x4                   	// #4
    a594:	bl	3210 <memcmp@plt>
    a598:	cbz	w0, a5b4 <elf_update@@ELFUTILS_1.0+0xa6c>
    a59c:	mov	w0, #0x457f                	// #17791
    a5a0:	movk	w0, #0x464c, lsl #16
    a5a4:	str	w0, [x28]
    a5a8:	ldr	w0, [x27, #116]
    a5ac:	orr	w0, w0, #0x1
    a5b0:	str	w0, [x27, #116]
    a5b4:	ldrb	w0, [x28, #4]
    a5b8:	cmp	w0, #0x2
    a5bc:	b.eq	a5d4 <elf_update@@ELFUTILS_1.0+0xa8c>  // b.none
    a5c0:	mov	w0, #0x2                   	// #2
    a5c4:	strb	w0, [x28, #4]
    a5c8:	ldr	w0, [x27, #116]
    a5cc:	orr	w0, w0, #0x1
    a5d0:	str	w0, [x27, #116]
    a5d4:	ldrb	w0, [x28, #5]
    a5d8:	cbnz	w0, a6d4 <elf_update@@ELFUTILS_1.0+0xb8c>
    a5dc:	mov	w0, #0x1                   	// #1
    a5e0:	strb	w0, [x28, #5]
    a5e4:	ldr	w0, [x27, #116]
    a5e8:	orr	w0, w0, #0x1
    a5ec:	str	w0, [x27, #116]
    a5f0:	ldrb	w0, [x28, #6]
    a5f4:	cmp	w0, #0x1
    a5f8:	b.eq	a610 <elf_update@@ELFUTILS_1.0+0xac8>  // b.none
    a5fc:	mov	w0, #0x1                   	// #1
    a600:	strb	w0, [x28, #6]
    a604:	ldr	w0, [x27, #116]
    a608:	orr	w0, w0, #0x1
    a60c:	str	w0, [x27, #116]
    a610:	ldr	w0, [x28, #20]
    a614:	cbnz	w0, a6f8 <elf_update@@ELFUTILS_1.0+0xbb0>
    a618:	mov	w0, #0x1                   	// #1
    a61c:	str	w0, [x28, #20]
    a620:	ldr	w0, [x27, #116]
    a624:	orr	w0, w0, #0x1
    a628:	str	w0, [x27, #116]
    a62c:	mov	x1, #0xfeff                	// #65279
    a630:	ldrh	w0, [x28, #60]
    a634:	cmp	x19, x1
    a638:	b.ls	a708 <elf_update@@ELFUTILS_1.0+0xbc0>  // b.plast
    a63c:	cbz	w0, a650 <elf_update@@ELFUTILS_1.0+0xb08>
    a640:	strh	wzr, [x28, #60]
    a644:	ldr	w0, [x27, #116]
    a648:	orr	w0, w0, #0x1
    a64c:	str	w0, [x27, #116]
    a650:	adrp	x20, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a654:	add	x0, x20, #0x618
    a658:	ldr	x26, [x0, #240]
    a65c:	ldrh	w0, [x28, #52]
    a660:	cmp	x0, x26
    a664:	b.eq	a678 <elf_update@@ELFUTILS_1.0+0xb30>  // b.none
    a668:	ldr	w0, [x27, #116]
    a66c:	strh	w26, [x28, #52]
    a670:	orr	w0, w0, #0x1
    a674:	str	w0, [x27, #116]
    a678:	ldrh	w0, [x28, #56]
    a67c:	cbnz	w0, a698 <elf_update@@ELFUTILS_1.0+0xb50>
    a680:	ldr	x0, [x28, #32]
    a684:	cbz	x0, a698 <elf_update@@ELFUTILS_1.0+0xb50>
    a688:	ldr	w0, [x27, #116]
    a68c:	str	xzr, [x28, #32]
    a690:	orr	w0, w0, #0x1
    a694:	str	w0, [x27, #116]
    a698:	ldr	x0, [x27, #88]
    a69c:	cbz	x0, a718 <elf_update@@ELFUTILS_1.0+0xbd0>
    a6a0:	add	x1, sp, #0x88
    a6a4:	mov	x0, x27
    a6a8:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    a6ac:	mov	w21, w0
    a6b0:	cbz	w0, a758 <elf_update@@ELFUTILS_1.0+0xc10>
    a6b4:	mov	x0, #0xffffffffffffffff    	// #-1
    a6b8:	ldp	x19, x20, [sp, #16]
    a6bc:	ldp	x21, x22, [sp, #32]
    a6c0:	ldp	x23, x24, [sp, #48]
    a6c4:	ldp	x25, x26, [sp, #64]
    a6c8:	ldp	x27, x28, [sp, #80]
    a6cc:	ldp	x29, x30, [sp], #144
    a6d0:	ret
    a6d4:	cmp	w0, #0x2
    a6d8:	b.ls	a6e8 <elf_update@@ELFUTILS_1.0+0xba0>  // b.plast
    a6dc:	mov	w0, #0x22                  	// #34
    a6e0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    a6e4:	b	a6b4 <elf_update@@ELFUTILS_1.0+0xb6c>
    a6e8:	cmp	w0, #0x1
    a6ec:	cset	w0, ne  // ne = any
    a6f0:	str	w0, [x20]
    a6f4:	b	a5f0 <elf_update@@ELFUTILS_1.0+0xaa8>
    a6f8:	cmp	w0, #0x1
    a6fc:	b.eq	a62c <elf_update@@ELFUTILS_1.0+0xae4>  // b.none
    a700:	mov	w0, #0x2                   	// #2
    a704:	b	a6e0 <elf_update@@ELFUTILS_1.0+0xb98>
    a708:	cmp	x19, w0, uxth
    a70c:	b.eq	a650 <elf_update@@ELFUTILS_1.0+0xb08>  // b.none
    a710:	strh	w19, [x28, #60]
    a714:	b	a644 <elf_update@@ELFUTILS_1.0+0xafc>
    a718:	mov	x0, x27
    a71c:	bl	6918 <elf32_getphdr@@ELFUTILS_1.0+0x48>
    a720:	ldr	x0, [x27, #88]
    a724:	cbnz	x0, a6a0 <elf_update@@ELFUTILS_1.0+0xb58>
    a728:	mov	w21, #0x0                   	// #0
    a72c:	cbz	x19, ac3c <elf_update@@ELFUTILS_1.0+0x10f4>
    a730:	ldr	w2, [x27, #200]
    a734:	cbnz	w2, a7a4 <elf_update@@ELFUTILS_1.0+0xc5c>
    a738:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a73c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a740:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a744:	add	x3, x3, #0xbe9
    a748:	add	x1, x1, #0xb31
    a74c:	add	x0, x0, #0xb44
    a750:	mov	w2, #0xb4                  	// #180
    a754:	bl	3380 <__assert_fail@plt>
    a758:	add	x0, x20, #0x618
    a75c:	ldr	w6, [x27, #56]
    a760:	ldr	x1, [sp, #136]
    a764:	ldr	x0, [x0, #264]
    a768:	ldr	x2, [x28, #32]
    a76c:	mul	x0, x0, x1
    a770:	and	w1, w6, #0x4
    a774:	tbz	w6, #2, a788 <elf_update@@ELFUTILS_1.0+0xc40>
    a778:	add	x0, x0, x2
    a77c:	cmp	x26, x0
    a780:	csel	x26, x26, x0, cs  // cs = hs, nlast
    a784:	b	a72c <elf_update@@ELFUTILS_1.0+0xbe4>
    a788:	cmp	x26, x2
    a78c:	b.eq	a798 <elf_update@@ELFUTILS_1.0+0xc50>  // b.none
    a790:	mov	w1, #0x1                   	// #1
    a794:	str	x26, [x28, #32]
    a798:	add	x26, x26, x0
    a79c:	mov	w21, w1
    a7a0:	b	a72c <elf_update@@ELFUTILS_1.0+0xbe4>
    a7a4:	mov	x0, #0xfeff                	// #65279
    a7a8:	cmp	x19, x0
    a7ac:	b.ls	a7d0 <elf_update@@ELFUTILS_1.0+0xc88>  // b.plast
    a7b0:	ldr	x1, [x27, #360]
    a7b4:	ldr	x6, [x1, #32]
    a7b8:	cmp	x6, x19
    a7bc:	b.eq	a7d0 <elf_update@@ELFUTILS_1.0+0xc88>  // b.none
    a7c0:	str	x19, [x1, #32]
    a7c4:	ldr	w1, [x27, #368]
    a7c8:	orr	w1, w1, #0x1
    a7cc:	str	w1, [x27, #368]
    a7d0:	add	x23, x27, #0xc8
    a7d4:	cmp	w2, #0x1
    a7d8:	b.ls	a85c <elf_update@@ELFUTILS_1.0+0xd14>  // b.plast
    a7dc:	add	x0, x27, #0x1a8
    a7e0:	ldr	x1, [x0, #144]
    a7e4:	cbnz	x1, a7ec <elf_update@@ELFUTILS_1.0+0xca4>
    a7e8:	bl	8900 <elf32_getshdr@@ELFUTILS_1.0+0x464>
    a7ec:	mov	w22, #0x1                   	// #1
    a7f0:	mov	w25, #0x0                   	// #0
    a7f4:	and	x0, x22, #0xff
    a7f8:	mov	x1, #0xd0                  	// #208
    a7fc:	str	x0, [sp, #96]
    a800:	madd	x2, x0, x1, x23
    a804:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a808:	add	x0, x0, #0xbd8
    a80c:	str	x0, [sp, #104]
    a810:	add	x24, x2, #0x10
    a814:	ldr	x1, [sp, #96]
    a818:	ldr	w0, [x23]
    a81c:	cmp	x1, w0, uxtw
    a820:	b.cc	a874 <elf_update@@ELFUTILS_1.0+0xd2c>  // b.lo, b.ul, b.last
    a824:	ldr	x1, [x23, #8]
    a828:	cbz	x1, ac04 <elf_update@@ELFUTILS_1.0+0x10bc>
    a82c:	ldr	w2, [x23, #4]
    a830:	mov	w22, #0x0                   	// #0
    a834:	cmp	w0, w2
    a838:	b.eq	a86c <elf_update@@ELFUTILS_1.0+0xd24>  // b.none
    a83c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a840:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a844:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a848:	add	x3, x3, #0xbe9
    a84c:	add	x1, x1, #0xb31
    a850:	add	x0, x0, #0xb7e
    a854:	mov	w2, #0x19b                 	// #411
    a858:	b	a754 <elf_update@@ELFUTILS_1.0+0xc0c>
    a85c:	ldr	x0, [x27, #208]
    a860:	cbz	x0, a7ec <elf_update@@ELFUTILS_1.0+0xca4>
    a864:	add	x0, x0, #0x10
    a868:	b	a7e0 <elf_update@@ELFUTILS_1.0+0xc98>
    a86c:	mov	x23, x1
    a870:	b	a7f4 <elf_update@@ELFUTILS_1.0+0xcac>
    a874:	ldr	x22, [x24, #144]
    a878:	cbnz	x22, a89c <elf_update@@ELFUTILS_1.0+0xd54>
    a87c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a880:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a884:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    a888:	add	x3, x3, #0xbe9
    a88c:	add	x1, x1, #0xb31
    a890:	add	x0, x0, #0xb71
    a894:	mov	w2, #0xd6                  	// #214
    a898:	b	a754 <elf_update@@ELFUTILS_1.0+0xc0c>
    a89c:	ldp	x1, x7, [x22, #48]
    a8a0:	cmp	x1, #0x0
    a8a4:	csinc	x1, x1, xzr, ne  // ne = any
    a8a8:	sub	x8, x1, #0x1
    a8ac:	ands	x8, x8, x1
    a8b0:	b.eq	a8bc <elf_update@@ELFUTILS_1.0+0xd74>  // b.none
    a8b4:	mov	w0, #0x24                  	// #36
    a8b8:	b	a6e0 <elf_update@@ELFUTILS_1.0+0xb98>
    a8bc:	ldr	w0, [x22, #4]
    a8c0:	cmp	w0, #0x12
    a8c4:	b.hi	a8f0 <elf_update@@ELFUTILS_1.0+0xda8>  // b.pmore
    a8c8:	cmp	w0, #0x1
    a8cc:	b.ls	a90c <elf_update@@ELFUTILS_1.0+0xdc4>  // b.plast
    a8d0:	sub	w0, w0, #0x2
    a8d4:	cmp	w0, #0x10
    a8d8:	b.hi	aa40 <elf_update@@ELFUTILS_1.0+0xef8>  // b.pmore
    a8dc:	ldr	x2, [sp, #104]
    a8e0:	ldrb	w0, [x2, w0, uxtw]
    a8e4:	adr	x2, a8f0 <elf_update@@ELFUTILS_1.0+0xda8>
    a8e8:	add	x0, x2, w0, sxtb #2
    a8ec:	br	x0
    a8f0:	mov	w2, #0xfffa                	// #65530
    a8f4:	movk	w2, #0x6fff, lsl #16
    a8f8:	cmp	w0, w2
    a8fc:	b.eq	aa28 <elf_update@@ELFUTILS_1.0+0xee0>  // b.none
    a900:	add	w2, w2, #0x2
    a904:	cmp	w0, w2
    a908:	b.eq	aa34 <elf_update@@ELFUTILS_1.0+0xeec>  // b.none
    a90c:	ldr	w0, [x24, #120]
    a910:	cbz	w0, aa58 <elf_update@@ELFUTILS_1.0+0xf10>
    a914:	ldr	x0, [x24, #64]
    a918:	cbz	x0, ab1c <elf_update@@ELFUTILS_1.0+0xfd4>
    a91c:	add	x14, x24, #0x48
    a920:	mov	x11, x24
    a924:	mov	x7, #0x0                   	// #0
    a928:	mov	x10, x11
    a92c:	cmp	x24, x11
    a930:	b.ne	a948 <elf_update@@ELFUTILS_1.0+0xe00>  // b.any
    a934:	ldr	x0, [x24]
    a938:	cbnz	x0, a948 <elf_update@@ELFUTILS_1.0+0xe00>
    a93c:	ldr	x0, [x24, #72]
    a940:	cmp	x0, #0x0
    a944:	csel	x10, x24, x14, eq  // eq = none
    a948:	ldr	w13, [x10, #12]
    a94c:	cmp	w13, #0x1
    a950:	b.ne	a700 <elf_update@@ELFUTILS_1.0+0xbb8>  // b.any
    a954:	ldr	x0, [x10, #32]
    a958:	sub	x12, x0, #0x1
    a95c:	tst	x12, x0
    a960:	b.ne	a8b4 <elf_update@@ELFUTILS_1.0+0xd6c>  // b.any
    a964:	ldr	w16, [x27, #56]
    a968:	cmp	x1, x0
    a96c:	csel	x1, x1, x0, cs  // cs = hs, nlast
    a970:	ldp	x12, x15, [x10, #16]
    a974:	tbz	w16, #2, aa70 <elf_update@@ELFUTILS_1.0+0xf28>
    a978:	ldr	x0, [x22, #32]
    a97c:	add	x12, x15, x12
    a980:	cmp	x12, x0
    a984:	b.ls	aa94 <elf_update@@ELFUTILS_1.0+0xf4c>  // b.plast
    a988:	mov	w0, #0x23                  	// #35
    a98c:	b	a6e0 <elf_update@@ELFUTILS_1.0+0xb98>
    a990:	add	x0, x20, #0x618
    a994:	ldr	x0, [x0, #304]
    a998:	cmp	x0, x7
    a99c:	b.eq	a90c <elf_update@@ELFUTILS_1.0+0xdc4>  // b.none
    a9a0:	str	x0, [x22, #56]
    a9a4:	ldr	w0, [x24, #152]
    a9a8:	orr	w0, w0, #0x1
    a9ac:	str	w0, [x24, #152]
    a9b0:	b	a90c <elf_update@@ELFUTILS_1.0+0xdc4>
    a9b4:	add	x0, x20, #0x618
    a9b8:	ldr	x0, [x0, #272]
    a9bc:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    a9c0:	ldrh	w0, [x28, #16]
    a9c4:	cmp	w0, #0x1
    a9c8:	b.eq	a9d4 <elf_update@@ELFUTILS_1.0+0xe8c>  // b.none
    a9cc:	mov	w0, #0x28                  	// #40
    a9d0:	b	a6e0 <elf_update@@ELFUTILS_1.0+0xb98>
    a9d4:	add	x0, x20, #0x618
    a9d8:	ldr	x0, [x0, #96]
    a9dc:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    a9e0:	ldrh	w0, [x28, #18]
    a9e4:	mov	w10, #0x9026                	// #36902
    a9e8:	cmp	w0, w10
    a9ec:	b.eq	aa48 <elf_update@@ELFUTILS_1.0+0xf00>  // b.none
    a9f0:	cmp	w0, #0x16
    a9f4:	b.ne	aa50 <elf_update@@ELFUTILS_1.0+0xf08>  // b.any
    a9f8:	ldrb	w0, [x28, #4]
    a9fc:	mov	x10, #0x8                   	// #8
    aa00:	cmp	w0, #0x2
    aa04:	mov	x0, #0x4                   	// #4
    aa08:	csel	x0, x0, x10, ne  // ne = any
    aa0c:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa10:	add	x0, x20, #0x618
    aa14:	ldr	x0, [x0, #232]
    aa18:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa1c:	add	x0, x20, #0x618
    aa20:	ldr	x0, [x0, #280]
    aa24:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa28:	add	x0, x20, #0x618
    aa2c:	ldr	x0, [x0, #384]
    aa30:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa34:	add	x0, x20, #0x618
    aa38:	ldr	x0, [x0, #376]
    aa3c:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa40:	mov	x0, x7
    aa44:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa48:	mov	x0, #0x8                   	// #8
    aa4c:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa50:	mov	x0, #0x4                   	// #4
    aa54:	b	a998 <elf_update@@ELFUTILS_1.0+0xe50>
    aa58:	mov	x0, x24
    aa5c:	stp	x8, x1, [sp, #112]
    aa60:	bl	8e84 <elf_rawdata@@ELFUTILS_1.0+0x120>
    aa64:	ldp	x8, x1, [sp, #112]
    aa68:	cbz	w0, a914 <elf_update@@ELFUTILS_1.0+0xdcc>
    aa6c:	b	a6b4 <elf_update@@ELFUTILS_1.0+0xb6c>
    aa70:	sub	x7, x7, #0x1
    aa74:	add	x7, x7, x0
    aa78:	neg	x0, x0
    aa7c:	and	x0, x7, x0
    aa80:	cmp	x15, x0
    aa84:	b.eq	aa90 <elf_update@@ELFUTILS_1.0+0xf48>  // b.none
    aa88:	mov	w25, w13
    aa8c:	str	x0, [x10, #24]
    aa90:	add	x7, x12, x0
    aa94:	ldr	x11, [x11, #48]
    aa98:	cbnz	x11, a928 <elf_update@@ELFUTILS_1.0+0xde0>
    aa9c:	ldr	w11, [x27, #56]
    aaa0:	ldr	x0, [x22, #48]
    aaa4:	and	w10, w11, #0x4
    aaa8:	tbz	w11, #2, ab24 <elf_update@@ELFUTILS_1.0+0xfdc>
    aaac:	ldr	w7, [x22, #4]
    aab0:	cmp	w7, #0x8
    aab4:	b.eq	aac0 <elf_update@@ELFUTILS_1.0+0xf78>  // b.none
    aab8:	ldp	x8, x7, [x22, #24]
    aabc:	add	x8, x8, x7
    aac0:	cmp	x26, x8
    aac4:	sub	x7, x0, #0x1
    aac8:	csel	x26, x26, x8, cs  // cs = hs, nlast
    aacc:	tst	x7, x0
    aad0:	b.ne	a8b4 <elf_update@@ELFUTILS_1.0+0xd6c>  // b.any
    aad4:	cmp	x0, #0x0
    aad8:	csinc	x0, x0, xzr, ne  // ne = any
    aadc:	cmp	x1, x0
    aae0:	b.hi	a8b4 <elf_update@@ELFUTILS_1.0+0xd6c>  // b.pmore
    aae4:	ldr	x0, [x22, #56]
    aae8:	cmp	x0, #0x1
    aaec:	b.ls	abf0 <elf_update@@ELFUTILS_1.0+0x10a8>  // b.plast
    aaf0:	ldr	w0, [x27, #56]
    aaf4:	tbnz	w0, #3, abf0 <elf_update@@ELFUTILS_1.0+0x10a8>
    aaf8:	ldr	x0, [x22, #8]
    aafc:	tbnz	w0, #11, abdc <elf_update@@ELFUTILS_1.0+0x1094>
    ab00:	ldr	x1, [x22, #32]
    ab04:	ldr	x6, [x22, #56]
    ab08:	udiv	x0, x1, x6
    ab0c:	msub	x0, x0, x6, x1
    ab10:	cbz	x0, abf0 <elf_update@@ELFUTILS_1.0+0x10a8>
    ab14:	mov	w0, #0x25                  	// #37
    ab18:	b	a6e0 <elf_update@@ELFUTILS_1.0+0xb98>
    ab1c:	ldr	x7, [x24, #88]
    ab20:	b	aa9c <elf_update@@ELFUTILS_1.0+0xf54>
    ab24:	cmp	x0, x1
    ab28:	b.eq	ab3c <elf_update@@ELFUTILS_1.0+0xff4>  // b.none
    ab2c:	str	x1, [x22, #48]
    ab30:	ldr	w0, [x24, #152]
    ab34:	orr	w0, w0, #0x1
    ab38:	str	w0, [x24, #152]
    ab3c:	sub	x3, x26, #0x1
    ab40:	ldr	x0, [x22, #24]
    ab44:	add	x3, x3, x1
    ab48:	neg	x1, x1
    ab4c:	and	x26, x1, x3
    ab50:	cmp	x0, x26
    ab54:	b.eq	abd4 <elf_update@@ELFUTILS_1.0+0x108c>  // b.none
    ab58:	str	x26, [x22, #24]
    ab5c:	ldr	x0, [x24, #64]
    ab60:	cbz	x0, abb0 <elf_update@@ELFUTILS_1.0+0x1068>
    ab64:	mov	w25, #0x1                   	// #1
    ab68:	mov	w0, w25
    ab6c:	ldr	x1, [x22, #32]
    ab70:	cmp	x1, x7
    ab74:	b.eq	ab80 <elf_update@@ELFUTILS_1.0+0x1038>  // b.none
    ab78:	mov	w10, #0x1                   	// #1
    ab7c:	str	x7, [x22, #32]
    ab80:	ldr	w1, [x22, #4]
    ab84:	orr	w25, w25, w10
    ab88:	cmp	w1, #0x8
    ab8c:	b.eq	ab94 <elf_update@@ELFUTILS_1.0+0x104c>  // b.none
    ab90:	add	x26, x26, x7
    ab94:	orr	w10, w10, w0
    ab98:	ldr	w0, [x24, #152]
    ab9c:	orr	w10, w0, w10
    aba0:	ldr	w0, [x24, #156]
    aba4:	orr	w0, w0, w25
    aba8:	stp	w10, w0, [x24, #152]
    abac:	b	aae4 <elf_update@@ELFUTILS_1.0+0xf9c>
    abb0:	mov	x0, x24
    abb4:	mov	x1, #0x0                   	// #0
    abb8:	str	w10, [sp, #112]
    abbc:	str	x7, [sp, #120]
    abc0:	bl	93d0 <elf_rawdata@@ELFUTILS_1.0+0x66c>
    abc4:	ldr	w10, [sp, #112]
    abc8:	ldr	x7, [sp, #120]
    abcc:	cbnz	x0, ab64 <elf_update@@ELFUTILS_1.0+0x101c>
    abd0:	b	a6b4 <elf_update@@ELFUTILS_1.0+0xb6c>
    abd4:	mov	w0, #0x0                   	// #0
    abd8:	b	ab6c <elf_update@@ELFUTILS_1.0+0x1024>
    abdc:	mov	x0, x24
    abe0:	bl	31d0 <elf64_getchdr@plt>
    abe4:	cbz	x0, a6b4 <elf_update@@ELFUTILS_1.0+0xb6c>
    abe8:	ldr	x1, [x0, #8]
    abec:	b	ab04 <elf_update@@ELFUTILS_1.0+0xfbc>
    abf0:	ldr	x0, [sp, #96]
    abf4:	add	x24, x24, #0xd0
    abf8:	add	x0, x0, #0x1
    abfc:	str	x0, [sp, #96]
    ac00:	b	a814 <elf_update@@ELFUTILS_1.0+0xccc>
    ac04:	add	x20, x20, #0x618
    ac08:	ldrh	w0, [x28, #58]
    ac0c:	ldr	x2, [x20, #288]
    ac10:	cmp	x0, x2
    ac14:	b.eq	ac20 <elf_update@@ELFUTILS_1.0+0x10d8>  // b.none
    ac18:	mov	w21, #0x1                   	// #1
    ac1c:	strh	w2, [x28, #58]
    ac20:	ldr	w0, [x27, #56]
    ac24:	mul	x19, x19, x2
    ac28:	ldr	x1, [x28, #40]
    ac2c:	tbz	w0, #2, ac50 <elf_update@@ELFUTILS_1.0+0x1108>
    ac30:	add	x19, x19, x1
    ac34:	cmp	x26, x19
    ac38:	csel	x26, x26, x19, cs  // cs = hs, nlast
    ac3c:	ldr	w0, [x27, #116]
    ac40:	orr	w21, w0, w21
    ac44:	mov	x0, x26
    ac48:	str	w21, [x27, #116]
    ac4c:	b	a6b8 <elf_update@@ELFUTILS_1.0+0xb70>
    ac50:	add	x3, x26, #0x7
    ac54:	and	x3, x3, #0xfffffffffffffff8
    ac58:	cmp	x1, x3
    ac5c:	b.eq	ac6c <elf_update@@ELFUTILS_1.0+0x1124>  // b.none
    ac60:	str	x3, [x28, #40]
    ac64:	orr	w0, w0, #0x1
    ac68:	str	w0, [x27, #56]
    ac6c:	add	x26, x19, x3
    ac70:	b	ac3c <elf_update@@ELFUTILS_1.0+0x10f4>
    ac74:	ldr	x2, [x0]
    ac78:	ldr	x0, [x1]
    ac7c:	ldr	x3, [x2, #144]
    ac80:	ldr	x1, [x0, #144]
    ac84:	ldr	w5, [x3, #16]
    ac88:	ldr	w4, [x1, #16]
    ac8c:	cmp	w5, w4
    ac90:	b.cc	acc4 <elf_update@@ELFUTILS_1.0+0x117c>  // b.lo, b.ul, b.last
    ac94:	b.hi	accc <elf_update@@ELFUTILS_1.0+0x1184>  // b.pmore
    ac98:	ldr	w1, [x1, #20]
    ac9c:	ldr	w3, [x3, #20]
    aca0:	cmp	w3, w1
    aca4:	b.cc	acc4 <elf_update@@ELFUTILS_1.0+0x117c>  // b.lo, b.ul, b.last
    aca8:	b.hi	accc <elf_update@@ELFUTILS_1.0+0x1184>  // b.pmore
    acac:	ldr	x1, [x0, #128]
    acb0:	ldr	x2, [x2, #128]
    acb4:	cmp	x2, x1
    acb8:	cset	w0, hi  // hi = pmore
    acbc:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
    acc0:	ret
    acc4:	mov	w0, #0xffffffff            	// #-1
    acc8:	b	acc0 <elf_update@@ELFUTILS_1.0+0x1178>
    accc:	mov	w0, #0x1                   	// #1
    acd0:	b	acc0 <elf_update@@ELFUTILS_1.0+0x1178>
    acd4:	mov	x2, x0
    acd8:	mov	x3, x1
    acdc:	mov	x4, #0x0                   	// #0
    ace0:	ldr	w5, [x3], #16
    ace4:	cmp	x5, x4
    ace8:	b.hi	ad10 <elf_update@@ELFUTILS_1.0+0x11c8>  // b.pmore
    acec:	ldr	x1, [x1, #8]
    acf0:	add	x2, x2, x5, lsl #3
    acf4:	cbnz	x1, acd8 <elf_update@@ELFUTILS_1.0+0x1190>
    acf8:	sub	x1, x2, x0
    acfc:	adrp	x3, a000 <elf_update@@ELFUTILS_1.0+0x4b8>
    ad00:	mov	x2, #0x8                   	// #8
    ad04:	add	x3, x3, #0xc74
    ad08:	asr	x1, x1, #3
    ad0c:	b	30f0 <qsort@plt>
    ad10:	str	x3, [x2, x4, lsl #3]
    ad14:	add	x4, x4, #0x1
    ad18:	add	x3, x3, #0xd0
    ad1c:	b	ace4 <elf_update@@ELFUTILS_1.0+0x119c>
    ad20:	stp	x29, x30, [sp, #-48]!
    ad24:	mov	x5, x1
    ad28:	cmp	x1, x3
    ad2c:	mov	x29, sp
    ad30:	stp	x19, x20, [sp, #16]
    ad34:	mov	x19, x2
    ad38:	add	x20, x2, x0
    ad3c:	stp	x21, x22, [sp, #32]
    ad40:	mov	x21, x4
    ad44:	b.cs	ada8 <elf_update@@ELFUTILS_1.0+0x1260>  // b.hs, b.nlast
    ad48:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    ad4c:	sub	x2, x3, x1
    ad50:	sub	x22, x20, x1
    ad54:	cmp	x3, x20
    ad58:	ldr	w1, [x0, #448]
    ad5c:	csel	x22, x2, x22, ls  // ls = plast
    ad60:	mov	x0, x5
    ad64:	mov	x2, x22
    ad68:	bl	3140 <memset@plt>
    ad6c:	mov	x5, x0
    ad70:	add	x5, x5, x22
    ad74:	cmp	x20, x5
    ad78:	b.eq	adb0 <elf_update@@ELFUTILS_1.0+0x1268>  // b.none
    ad7c:	cmp	x21, x20
    ad80:	b.cs	adb0 <elf_update@@ELFUTILS_1.0+0x1268>  // b.hs, b.nlast
    ad84:	cmp	x19, x21
    ad88:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    ad8c:	csel	x0, x19, x21, cs  // cs = hs, nlast
    ad90:	sub	x2, x20, x0
    ad94:	ldr	w1, [x1, #448]
    ad98:	ldp	x19, x20, [sp, #16]
    ad9c:	ldp	x21, x22, [sp, #32]
    ada0:	ldp	x29, x30, [sp], #48
    ada4:	b	3140 <memset@plt>
    ada8:	mov	x22, #0x0                   	// #0
    adac:	b	ad70 <elf_update@@ELFUTILS_1.0+0x1228>
    adb0:	ldp	x19, x20, [sp, #16]
    adb4:	ldp	x21, x22, [sp, #32]
    adb8:	ldp	x29, x30, [sp], #48
    adbc:	ret
    adc0:	stp	x29, x30, [sp, #-64]!
    adc4:	mov	x29, sp
    adc8:	stp	x21, x22, [sp, #32]
    adcc:	mov	w22, w0
    add0:	mov	x21, x2
    add4:	stp	x23, x24, [sp, #48]
    add8:	mov	x23, x1
    addc:	mov	x24, x3
    ade0:	stp	x19, x20, [sp, #16]
    ade4:	mov	x20, #0x0                   	// #0
    ade8:	add	x3, x20, x24
    adec:	sub	x2, x21, x20
    adf0:	add	x1, x23, x20
    adf4:	mov	w0, w22
    adf8:	bl	3270 <pwrite@plt>
    adfc:	mov	x19, x0
    ae00:	cmn	x0, #0x1
    ae04:	b.ne	ae24 <elf_update@@ELFUTILS_1.0+0x12dc>  // b.any
    ae08:	bl	3390 <__errno_location@plt>
    ae0c:	ldr	w0, [x0]
    ae10:	cmp	w0, #0x4
    ae14:	b.ne	ae30 <elf_update@@ELFUTILS_1.0+0x12e8>  // b.any
    ae18:	mov	x19, x20
    ae1c:	mov	x20, x19
    ae20:	b	ade8 <elf_update@@ELFUTILS_1.0+0x12a0>
    ae24:	cmp	x0, #0x0
    ae28:	b.gt	ae48 <elf_update@@ELFUTILS_1.0+0x1300>
    ae2c:	csel	x19, x0, x20, ne  // ne = any
    ae30:	mov	x0, x19
    ae34:	ldp	x19, x20, [sp, #16]
    ae38:	ldp	x21, x22, [sp, #32]
    ae3c:	ldp	x23, x24, [sp, #48]
    ae40:	ldp	x29, x30, [sp], #64
    ae44:	ret
    ae48:	add	x19, x0, x20
    ae4c:	cmp	x19, x21
    ae50:	b.cc	ae1c <elf_update@@ELFUTILS_1.0+0x12d4>  // b.lo, b.ul, b.last
    ae54:	b	ae30 <elf_update@@ELFUTILS_1.0+0x12e8>
    ae58:	stp	x29, x30, [sp, #-80]!
    ae5c:	cmp	x2, #0x1, lsl #12
    ae60:	mov	x29, sp
    ae64:	stp	x19, x20, [sp, #16]
    ae68:	mov	x19, x2
    ae6c:	ldr	x20, [x4]
    ae70:	stp	x21, x22, [sp, #32]
    ae74:	mov	x21, #0x1000                	// #4096
    ae78:	stp	x23, x24, [sp, #48]
    ae7c:	csel	x21, x2, x21, ls  // ls = plast
    ae80:	mov	w23, w0
    ae84:	str	x25, [sp, #64]
    ae88:	mov	x22, x1
    ae8c:	mov	x24, x3
    ae90:	cmp	x20, x21
    ae94:	b.cs	aeb8 <elf_update@@ELFUTILS_1.0+0x1370>  // b.hs, b.nlast
    ae98:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    ae9c:	mov	x25, x4
    aea0:	sub	x2, x21, x20
    aea4:	ldr	w1, [x0, #448]
    aea8:	add	x0, x3, x20
    aeac:	mov	x20, x21
    aeb0:	bl	3140 <memset@plt>
    aeb4:	str	x21, [x25]
    aeb8:	cmp	x19, x20
    aebc:	mov	x3, x22
    aec0:	csel	x21, x19, x20, ls  // ls = plast
    aec4:	mov	x1, x24
    aec8:	mov	x2, x21
    aecc:	mov	w0, w23
    aed0:	bl	adc0 <elf_update@@ELFUTILS_1.0+0x1278>
    aed4:	cmp	x0, x21
    aed8:	b.eq	af00 <elf_update@@ELFUTILS_1.0+0x13b8>  // b.none
    aedc:	mov	w0, #0x14                  	// #20
    aee0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    aee4:	mov	w0, #0x1                   	// #1
    aee8:	ldp	x19, x20, [sp, #16]
    aeec:	ldp	x21, x22, [sp, #32]
    aef0:	ldp	x23, x24, [sp, #48]
    aef4:	ldr	x25, [sp, #64]
    aef8:	ldp	x29, x30, [sp], #80
    aefc:	ret
    af00:	add	x22, x22, x0
    af04:	subs	x19, x19, x0
    af08:	b.ne	aeb8 <elf_update@@ELFUTILS_1.0+0x1370>  // b.any
    af0c:	mov	w0, #0x0                   	// #0
    af10:	b	aee8 <elf_update@@ELFUTILS_1.0+0x13a0>
    af14:	stp	x29, x30, [sp, #-208]!
    af18:	mov	x29, sp
    af1c:	stp	x25, x26, [sp, #64]
    af20:	mov	x26, x0
    af24:	stp	x19, x20, [sp, #16]
    af28:	stp	x21, x22, [sp, #32]
    af2c:	stp	x23, x24, [sp, #48]
    af30:	stp	x27, x28, [sp, #80]
    af34:	str	x2, [sp, #96]
    af38:	str	w1, [sp, #132]
    af3c:	ldr	w1, [x26, #56]
    af40:	ldr	x19, [x0, #72]
    af44:	ldr	w0, [x0, #116]
    af48:	orr	w0, w0, w1
    af4c:	tbz	w0, #0, b034 <elf_update@@ELFUTILS_1.0+0x14ec>
    af50:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    af54:	ldr	x2, [x0, #1584]
    af58:	cmp	x2, #0x34
    af5c:	b.eq	af80 <elf_update@@ELFUTILS_1.0+0x1438>  // b.none
    af60:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    af64:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    af68:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    af6c:	add	x3, x3, #0xe58
    af70:	add	x1, x1, #0xc03
    af74:	add	x0, x0, #0xc16
    af78:	mov	w2, #0x8c                  	// #140
    af7c:	bl	3380 <__assert_fail@plt>
    af80:	ldr	x0, [x26]
    af84:	ldr	x1, [x26, #40]
    af88:	add	x0, x0, x1
    af8c:	ldr	w1, [sp, #132]
    af90:	cbz	w1, b020 <elf_update@@ELFUTILS_1.0+0x14d8>
    af94:	adrp	x1, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    af98:	mov	w3, #0x1                   	// #1
    af9c:	ldr	x4, [x1, #3056]
    afa0:	mov	x1, x19
    afa4:	blr	x4
    afa8:	ldr	w0, [x26, #116]
    afac:	and	w0, w0, #0xfffffffe
    afb0:	str	w0, [x26, #116]
    afb4:	ldr	x0, [x26, #88]
    afb8:	cmp	x0, #0x0
    afbc:	cset	w22, eq  // eq = none
    afc0:	add	x1, sp, #0xc0
    afc4:	mov	x0, x26
    afc8:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    afcc:	mov	w23, w0
    afd0:	cbnz	w0, b114 <elf_update@@ELFUTILS_1.0+0x15cc>
    afd4:	adrp	x20, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    afd8:	add	x0, x20, #0x618
    afdc:	ldr	x27, [x0, #48]
    afe0:	ldr	x0, [x26, #88]
    afe4:	cbz	x0, b0b4 <elf_update@@ELFUTILS_1.0+0x156c>
    afe8:	ldr	w1, [x26, #56]
    afec:	ldr	w0, [x26, #120]
    aff0:	orr	w0, w0, w1
    aff4:	tbz	w0, #0, b0b4 <elf_update@@ELFUTILS_1.0+0x156c>
    aff8:	cmp	x27, #0x20
    affc:	b.eq	b03c <elf_update@@ELFUTILS_1.0+0x14f4>  // b.none
    b000:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b004:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b008:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b00c:	add	x3, x3, #0xe58
    b010:	add	x1, x1, #0xc03
    b014:	add	x0, x0, #0xc62
    b018:	mov	w2, #0xaf                  	// #175
    b01c:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b020:	cmp	x19, x0
    b024:	b.eq	afa8 <elf_update@@ELFUTILS_1.0+0x1460>  // b.none
    b028:	mov	x1, x19
    b02c:	bl	3060 <memcpy@plt>
    b030:	b	afa8 <elf_update@@ELFUTILS_1.0+0x1460>
    b034:	mov	w22, #0x0                   	// #0
    b038:	b	afc0 <elf_update@@ELFUTILS_1.0+0x1478>
    b03c:	ldrh	w1, [x19, #40]
    b040:	ldr	w2, [x19, #28]
    b044:	cmp	w2, w1
    b048:	b.ls	b06c <elf_update@@ELFUTILS_1.0+0x1524>  // b.plast
    b04c:	ldr	x0, [x26, #40]
    b050:	sub	w2, w2, w1
    b054:	ldr	x3, [x26]
    b058:	add	x0, x0, w1, uxth
    b05c:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    b060:	add	x0, x3, x0
    b064:	ldr	w1, [x1, #448]
    b068:	bl	3140 <memset@plt>
    b06c:	ldr	x1, [x26, #40]
    b070:	ldr	w0, [x19, #28]
    b074:	ldr	w3, [sp, #132]
    b078:	ldr	x2, [sp, #192]
    b07c:	add	x1, x0, x1
    b080:	ldr	x0, [x26]
    b084:	lsl	x2, x2, #5
    b088:	add	x0, x0, x1
    b08c:	ldr	x1, [x26, #88]
    b090:	cbz	w3, b138 <elf_update@@ELFUTILS_1.0+0x15f0>
    b094:	adrp	x3, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    b098:	ldr	x4, [x3, #3080]
    b09c:	mov	w3, #0x1                   	// #1
    b0a0:	blr	x4
    b0a4:	ldr	w0, [x26, #120]
    b0a8:	mov	w22, #0x1                   	// #1
    b0ac:	and	w0, w0, #0xfffffffe
    b0b0:	str	w0, [x26, #120]
    b0b4:	ldr	x0, [sp, #96]
    b0b8:	cbz	x0, b6bc <elf_update@@ELFUTILS_1.0+0x1b74>
    b0bc:	ldr	x1, [sp, #96]
    b0c0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    b0c4:	cmp	x1, x0
    b0c8:	b.hi	b540 <elf_update@@ELFUTILS_1.0+0x19f8>  // b.pmore
    b0cc:	add	x20, x20, #0x618
    b0d0:	lsl	x24, x1, #3
    b0d4:	ldr	x0, [x26]
    b0d8:	str	x0, [sp, #104]
    b0dc:	ldr	w0, [x19, #28]
    b0e0:	add	x25, x26, #0xc8
    b0e4:	str	w0, [sp, #112]
    b0e8:	ldr	x0, [x20, #24]
    b0ec:	str	x0, [sp, #144]
    b0f0:	ldr	x0, [sp, #192]
    b0f4:	str	x0, [sp, #152]
    b0f8:	mov	x0, x24
    b0fc:	ldr	x28, [x26, #40]
    b100:	bl	3100 <malloc@plt>
    b104:	mov	x20, x0
    b108:	cbnz	x0, b140 <elf_update@@ELFUTILS_1.0+0x15f8>
    b10c:	mov	w0, #0x8                   	// #8
    b110:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    b114:	mov	w23, #0xffffffff            	// #-1
    b118:	mov	w0, w23
    b11c:	ldp	x19, x20, [sp, #16]
    b120:	ldp	x21, x22, [sp, #32]
    b124:	ldp	x23, x24, [sp, #48]
    b128:	ldp	x25, x26, [sp, #64]
    b12c:	ldp	x27, x28, [sp, #80]
    b130:	ldp	x29, x30, [sp], #208
    b134:	ret
    b138:	bl	3070 <memmove@plt>
    b13c:	b	b0a4 <elf_update@@ELFUTILS_1.0+0x155c>
    b140:	ldr	w21, [x19, #32]
    b144:	ldr	x1, [sp, #104]
    b148:	add	x21, x21, x28
    b14c:	add	x21, x1, x21
    b150:	ldrh	w1, [x19, #46]
    b154:	str	w1, [sp, #160]
    b158:	mov	x1, x25
    b15c:	bl	acd4 <elf_update@@ELFUTILS_1.0+0x118c>
    b160:	str	x20, [sp, #120]
    b164:	add	x0, x24, x20
    b168:	mov	x24, x20
    b16c:	str	x0, [sp, #136]
    b170:	ldr	w0, [x26, #124]
    b174:	ldr	x25, [x24]
    b178:	ldr	x2, [x26, #40]
    b17c:	cbnz	w0, b240 <elf_update@@ELFUTILS_1.0+0x16f8>
    b180:	ldr	w0, [x25, #152]
    b184:	tbnz	w0, #7, b240 <elf_update@@ELFUTILS_1.0+0x16f8>
    b188:	ldr	x0, [x25, #128]
    b18c:	mov	x3, #0x28                  	// #40
    b190:	ldr	x1, [x25, #144]
    b194:	madd	x0, x0, x3, x21
    b198:	cmp	x1, x0
    b19c:	b.eq	b240 <elf_update@@ELFUTILS_1.0+0x16f8>  // b.none
    b1a0:	ldr	x0, [x26]
    b1a4:	add	x4, x0, x2
    b1a8:	cmp	x1, x4
    b1ac:	b.hi	b1d0 <elf_update@@ELFUTILS_1.0+0x1688>  // b.pmore
    b1b0:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b1b4:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b1b8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b1bc:	add	x3, x3, #0xe58
    b1c0:	add	x1, x1, #0xc03
    b1c4:	add	x0, x0, #0xcae
    b1c8:	mov	w2, #0xf8                  	// #248
    b1cc:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b1d0:	ldr	x4, [x26, #48]
    b1d4:	add	x4, x2, x4
    b1d8:	add	x0, x0, x4
    b1dc:	cmp	x1, x0
    b1e0:	b.cc	b204 <elf_update@@ELFUTILS_1.0+0x16bc>  // b.lo, b.ul, b.last
    b1e4:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b1e8:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b1ec:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b1f0:	add	x3, x3, #0xe58
    b1f4:	add	x1, x1, #0xc03
    b1f8:	add	x0, x0, #0xd04
    b1fc:	mov	w2, #0xfa                  	// #250
    b200:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b204:	mov	x0, #0x28                  	// #40
    b208:	stp	x1, x2, [sp, #168]
    b20c:	bl	3100 <malloc@plt>
    b210:	ldp	x1, x2, [sp, #168]
    b214:	cbnz	x0, b224 <elf_update@@ELFUTILS_1.0+0x16dc>
    b218:	mov	x0, x20
    b21c:	bl	3250 <free@plt>
    b220:	b	b10c <elf_update@@ELFUTILS_1.0+0x15c4>
    b224:	ldp	x6, x7, [x1]
    b228:	stp	x6, x7, [x0]
    b22c:	ldp	x6, x7, [x1, #16]
    b230:	stp	x6, x7, [x0, #16]
    b234:	ldr	x1, [x1, #32]
    b238:	str	x1, [x0, #32]
    b23c:	str	x0, [x25, #144]
    b240:	ldr	x0, [x26]
    b244:	ldr	x1, [x25]
    b248:	add	x4, x0, x2
    b24c:	cmp	x1, x4
    b250:	b.cc	b2a4 <elf_update@@ELFUTILS_1.0+0x175c>  // b.lo, b.ul, b.last
    b254:	ldr	x4, [x26, #48]
    b258:	add	x4, x2, x4
    b25c:	add	x4, x0, x4
    b260:	cmp	x1, x4
    b264:	b.cs	b2a4 <elf_update@@ELFUTILS_1.0+0x175c>  // b.hs, b.nlast
    b268:	ldr	x4, [x25, #144]
    b26c:	ldr	w4, [x4, #16]
    b270:	add	x2, x4, x2
    b274:	add	x0, x0, x2
    b278:	cmp	x1, x0
    b27c:	b.cs	b2a4 <elf_update@@ELFUTILS_1.0+0x175c>  // b.hs, b.nlast
    b280:	ldr	x2, [x25, #16]
    b284:	stp	x2, x1, [sp, #168]
    b288:	mov	x0, x2
    b28c:	bl	3100 <malloc@plt>
    b290:	ldp	x2, x1, [sp, #168]
    b294:	cbz	x0, b218 <elf_update@@ELFUTILS_1.0+0x16d0>
    b298:	bl	3060 <memcpy@plt>
    b29c:	str	x0, [x25]
    b2a0:	str	x0, [x25, #168]
    b2a4:	ldr	x0, [sp, #136]
    b2a8:	add	x24, x24, #0x8
    b2ac:	cmp	x0, x24
    b2b0:	b.ne	b170 <elf_update@@ELFUTILS_1.0+0x1628>  // b.any
    b2b4:	ldp	x1, x0, [sp, #144]
    b2b8:	ldr	w6, [sp, #112]
    b2bc:	str	x20, [sp, #112]
    b2c0:	cmp	x1, w6, uxtw
    b2c4:	madd	x27, x0, x27, x28
    b2c8:	csel	x6, x6, x1, ls  // ls = plast
    b2cc:	ldp	x1, x0, [sp, #96]
    b2d0:	add	x6, x27, x6
    b2d4:	add	x27, x0, x6
    b2d8:	ldrh	w0, [sp, #160]
    b2dc:	madd	x0, x0, x1, x21
    b2e0:	str	x0, [sp, #144]
    b2e4:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b2e8:	add	x0, x0, #0xac4
    b2ec:	str	x0, [sp, #168]
    b2f0:	add	x0, sp, #0xc8
    b2f4:	str	x0, [sp, #176]
    b2f8:	ldr	x0, [sp, #112]
    b2fc:	ldr	x28, [x0]
    b300:	ldr	x0, [x28, #128]
    b304:	cbnz	x0, b330 <elf_update@@ELFUTILS_1.0+0x17e8>
    b308:	ldr	w0, [x28, #156]
    b30c:	tbz	w0, #0, b5bc <elf_update@@ELFUTILS_1.0+0x1a74>
    b310:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b314:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b318:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b31c:	add	x3, x3, #0xe58
    b320:	add	x1, x1, #0xc03
    b324:	add	x0, x0, #0xd70
    b328:	mov	w2, #0x12f                 	// #303
    b32c:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b330:	ldr	x0, [x28, #144]
    b334:	str	x0, [sp, #104]
    b338:	ldr	w0, [x0, #4]
    b33c:	cmp	w0, #0x8
    b340:	b.eq	b5b0 <elf_update@@ELFUTILS_1.0+0x1a68>  // b.none
    b344:	ldr	x0, [sp, #104]
    b348:	ldr	w24, [x0, #16]
    b34c:	ldr	x0, [x26, #40]
    b350:	add	x0, x24, x0
    b354:	ldr	x24, [x26]
    b358:	add	x24, x24, x0
    b35c:	ldr	x0, [x28, #64]
    b360:	cbz	x0, b714 <elf_update@@ELFUTILS_1.0+0x1bcc>
    b364:	mov	x25, x28
    b368:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    b36c:	mov	w22, #0x0                   	// #0
    b370:	add	x0, x0, #0xbd8
    b374:	str	x0, [sp, #160]
    b378:	ldr	x0, [x25, #24]
    b37c:	tbz	x0, #63, b3a0 <elf_update@@ELFUTILS_1.0+0x1858>
    b380:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b384:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b388:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b38c:	add	x3, x3, #0xe58
    b390:	add	x1, x1, #0xc03
    b394:	add	x0, x0, #0xd90
    b398:	mov	w2, #0x13f                 	// #319
    b39c:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b3a0:	ldr	x1, [sp, #104]
    b3a4:	ldr	w1, [x1, #20]
    b3a8:	cmp	x0, x1
    b3ac:	b.ls	b3d0 <elf_update@@ELFUTILS_1.0+0x1888>  // b.plast
    b3b0:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b3b4:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b3b8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b3bc:	add	x3, x3, #0xe58
    b3c0:	add	x1, x1, #0xc03
    b3c4:	add	x0, x0, #0xda6
    b3c8:	mov	w2, #0x140                 	// #320
    b3cc:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b3d0:	ldr	x2, [x25, #16]
    b3d4:	sub	x1, x1, x0
    b3d8:	cmp	x2, x1
    b3dc:	b.ls	b400 <elf_update@@ELFUTILS_1.0+0x18b8>  // b.plast
    b3e0:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b3e4:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b3e8:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b3ec:	add	x3, x3, #0xe58
    b3f0:	add	x1, x1, #0xc03
    b3f4:	add	x0, x0, #0xdd3
    b3f8:	mov	w2, #0x141                 	// #321
    b3fc:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b400:	add	x1, x24, x0
    b404:	cmp	x27, x1
    b408:	b.cs	b43c <elf_update@@ELFUTILS_1.0+0x18f4>  // b.hs, b.nlast
    b40c:	cbz	x0, b428 <elf_update@@ELFUTILS_1.0+0x18e0>
    b410:	ldr	w2, [x26, #56]
    b414:	ldr	w1, [x28, #156]
    b418:	orr	w1, w1, w2
    b41c:	ldr	w2, [x25, #56]
    b420:	orr	w1, w1, w2
    b424:	tbz	w1, #0, b43c <elf_update@@ELFUTILS_1.0+0x18f4>
    b428:	ldr	x4, [sp, #144]
    b42c:	mov	x3, x21
    b430:	mov	x2, x24
    b434:	mov	x1, x27
    b438:	bl	ad20 <elf_update@@ELFUTILS_1.0+0x11d8>
    b43c:	ldp	x2, x6, [x25, #16]
    b440:	ldr	w1, [x26, #56]
    b444:	ldr	w0, [x28, #156]
    b448:	orr	w0, w0, w1
    b44c:	ldr	w1, [x25, #56]
    b450:	add	x27, x24, x6
    b454:	orr	w0, w0, w1
    b458:	tbz	w0, #0, b564 <elf_update@@ELFUTILS_1.0+0x1a1c>
    b45c:	ldr	w0, [sp, #132]
    b460:	cbz	w0, b550 <elf_update@@ELFUTILS_1.0+0x1a08>
    b464:	mov	w22, #0x1                   	// #1
    b468:	cbz	x2, b568 <elf_update@@ELFUTILS_1.0+0x1a20>
    b46c:	ldr	w0, [x25, #8]
    b470:	cbz	w0, b554 <elf_update@@ELFUTILS_1.0+0x1a0c>
    b474:	mov	w1, w0
    b478:	str	x1, [sp, #152]
    b47c:	ldr	x1, [sp, #168]
    b480:	ldrb	w0, [x1, w0, uxtw]
    b484:	cmp	w0, #0x0
    b488:	csel	w1, w22, w0, eq  // eq = none
    b48c:	and	x1, x1, #0xff
    b490:	sub	x3, x1, #0x1
    b494:	tst	x27, x3
    b498:	b.ne	b4c4 <elf_update@@ELFUTILS_1.0+0x197c>  // b.any
    b49c:	ldp	x1, x0, [sp, #152]
    b4a0:	mov	w3, w22
    b4a4:	ldr	x4, [x0, x1, lsl #3]
    b4a8:	mov	x0, x27
    b4ac:	ldr	x1, [x25]
    b4b0:	blr	x4
    b4b4:	ldr	x0, [x25, #16]
    b4b8:	add	x27, x27, x0
    b4bc:	mov	w22, #0x1                   	// #1
    b4c0:	b	b568 <elf_update@@ELFUTILS_1.0+0x1a20>
    b4c4:	cmp	w0, #0x7
    b4c8:	b.hi	b51c <elf_update@@ELFUTILS_1.0+0x19d4>  // b.pmore
    b4cc:	mov	x0, x2
    b4d0:	str	x2, [sp, #184]
    b4d4:	bl	3100 <malloc@plt>
    b4d8:	mov	x22, x0
    b4dc:	ldr	x2, [sp, #184]
    b4e0:	cbz	x22, b530 <elf_update@@ELFUTILS_1.0+0x19e8>
    b4e4:	ldp	x1, x0, [sp, #152]
    b4e8:	mov	w3, #0x1                   	// #1
    b4ec:	str	x2, [sp, #152]
    b4f0:	ldr	x4, [x0, x1, lsl #3]
    b4f4:	mov	x0, x22
    b4f8:	ldr	x1, [x25]
    b4fc:	blr	x4
    b500:	ldr	x2, [sp, #152]
    b504:	mov	x1, x22
    b508:	mov	x0, x27
    b50c:	bl	3060 <memcpy@plt>
    b510:	mov	x0, x22
    b514:	bl	3250 <free@plt>
    b518:	b	b4b4 <elf_update@@ELFUTILS_1.0+0x196c>
    b51c:	ldr	x0, [sp, #176]
    b520:	str	x2, [sp, #184]
    b524:	bl	3170 <posix_memalign@plt>
    b528:	ldr	x2, [sp, #184]
    b52c:	cbz	w0, b548 <elf_update@@ELFUTILS_1.0+0x1a00>
    b530:	mov	x0, x20
    b534:	bl	3250 <free@plt>
    b538:	mov	w0, #0x8                   	// #8
    b53c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    b540:	mov	w23, #0x1                   	// #1
    b544:	b	b118 <elf_update@@ELFUTILS_1.0+0x15d0>
    b548:	ldr	x22, [sp, #200]
    b54c:	b	b4e0 <elf_update@@ELFUTILS_1.0+0x1998>
    b550:	cbz	x2, b4bc <elf_update@@ELFUTILS_1.0+0x1974>
    b554:	ldr	x1, [x25]
    b558:	mov	x0, x27
    b55c:	bl	3070 <memmove@plt>
    b560:	b	b4b4 <elf_update@@ELFUTILS_1.0+0x196c>
    b564:	add	x27, x27, x2
    b568:	ldp	x1, x0, [x25, #16]
    b56c:	add	x0, x0, x1
    b570:	add	x0, x24, x0
    b574:	cmp	x27, x0
    b578:	b.eq	b59c <elf_update@@ELFUTILS_1.0+0x1a54>  // b.none
    b57c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b580:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b584:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b588:	add	x3, x3, #0xe58
    b58c:	add	x1, x1, #0xc03
    b590:	add	x0, x0, #0xe16
    b594:	mov	w2, #0x197                 	// #407
    b598:	b	af7c <elf_update@@ELFUTILS_1.0+0x1434>
    b59c:	ldr	w0, [x25, #56]
    b5a0:	and	w0, w0, #0xfffffffe
    b5a4:	str	w0, [x25, #56]
    b5a8:	ldr	x25, [x25, #48]
    b5ac:	cbnz	x25, b378 <elf_update@@ELFUTILS_1.0+0x1830>
    b5b0:	ldr	w0, [x28, #156]
    b5b4:	and	w0, w0, #0xfffffffe
    b5b8:	str	w0, [x28, #156]
    b5bc:	ldr	x0, [sp, #112]
    b5c0:	add	x0, x0, #0x8
    b5c4:	str	x0, [sp, #112]
    b5c8:	ldr	x0, [sp, #136]
    b5cc:	ldr	x1, [sp, #112]
    b5d0:	cmp	x0, x1
    b5d4:	b.ne	b2f8 <elf_update@@ELFUTILS_1.0+0x17b0>  // b.any
    b5d8:	ldr	w0, [x26, #56]
    b5dc:	tbz	w0, #0, b610 <elf_update@@ELFUTILS_1.0+0x1ac8>
    b5e0:	ldr	x0, [x26, #40]
    b5e4:	ldr	w2, [x19, #32]
    b5e8:	add	x0, x2, x0
    b5ec:	ldr	x2, [x26]
    b5f0:	add	x2, x2, x0
    b5f4:	cmp	x2, x27
    b5f8:	b.ls	b610 <elf_update@@ELFUTILS_1.0+0x1ac8>  // b.plast
    b5fc:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    b600:	sub	x2, x2, x27
    b604:	ldr	w1, [x0, #448]
    b608:	mov	x0, x27
    b60c:	bl	3140 <memset@plt>
    b610:	adrp	x22, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    b614:	add	x22, x22, #0xbd8
    b618:	mov	x27, #0x28                  	// #40
    b61c:	ldr	x0, [sp, #120]
    b620:	ldr	w1, [x26, #56]
    b624:	ldr	x24, [x0]
    b628:	ldr	w0, [x24, #152]
    b62c:	orr	w0, w0, w1
    b630:	tbz	w0, #0, b698 <elf_update@@ELFUTILS_1.0+0x1b50>
    b634:	ldr	w2, [sp, #132]
    b638:	ldr	x0, [x24, #128]
    b63c:	ldr	x1, [x24, #144]
    b640:	madd	x0, x0, x27, x21
    b644:	cbz	w2, b74c <elf_update@@ELFUTILS_1.0+0x1c04>
    b648:	ldr	x4, [x22, #72]
    b64c:	mov	w3, #0x1                   	// #1
    b650:	mov	x2, #0x28                  	// #40
    b654:	blr	x4
    b658:	ldr	w0, [x26, #124]
    b65c:	cbnz	w0, b68c <elf_update@@ELFUTILS_1.0+0x1b44>
    b660:	ldr	w0, [x24, #152]
    b664:	tbnz	w0, #7, b68c <elf_update@@ELFUTILS_1.0+0x1b44>
    b668:	ldr	x1, [x24, #128]
    b66c:	ldr	x0, [x24, #144]
    b670:	madd	x1, x1, x27, x21
    b674:	cmp	x0, x1
    b678:	b.eq	b68c <elf_update@@ELFUTILS_1.0+0x1b44>  // b.none
    b67c:	bl	3250 <free@plt>
    b680:	ldr	x0, [x24, #128]
    b684:	madd	x0, x0, x27, x21
    b688:	str	x0, [x24, #144]
    b68c:	ldr	w0, [x24, #152]
    b690:	and	w0, w0, #0xfffffffe
    b694:	str	w0, [x24, #152]
    b698:	ldr	x0, [sp, #120]
    b69c:	add	x0, x0, #0x8
    b6a0:	str	x0, [sp, #120]
    b6a4:	ldr	x0, [sp, #136]
    b6a8:	ldr	x1, [sp, #120]
    b6ac:	cmp	x0, x1
    b6b0:	b.ne	b61c <elf_update@@ELFUTILS_1.0+0x1ad4>  // b.any
    b6b4:	mov	x0, x20
    b6b8:	bl	3250 <free@plt>
    b6bc:	ldr	w0, [x26, #56]
    b6c0:	ldr	x20, [x26]
    b6c4:	and	w0, w0, #0xfffffffe
    b6c8:	str	w0, [x26, #56]
    b6cc:	mov	w0, #0x1e                  	// #30
    b6d0:	ldr	x21, [x26, #40]
    b6d4:	bl	3320 <sysconf@plt>
    b6d8:	ldr	x1, [x26, #40]
    b6dc:	neg	x0, x0
    b6e0:	ldr	w2, [x19, #32]
    b6e4:	and	x0, x0, x21
    b6e8:	ldr	x3, [sp, #96]
    b6ec:	add	x2, x2, x1
    b6f0:	ldrh	w1, [x19, #46]
    b6f4:	add	x0, x20, x0
    b6f8:	madd	x25, x1, x3, x2
    b6fc:	mov	w2, #0x4                   	// #4
    b700:	ldr	x1, [x26]
    b704:	add	x1, x1, x25
    b708:	sub	x1, x1, x0
    b70c:	bl	3080 <msync@plt>
    b710:	b	b118 <elf_update@@ELFUTILS_1.0+0x15d0>
    b714:	cmp	w22, #0x0
    b718:	ccmp	x27, x24, #0x2, ne  // ne = any
    b71c:	b.cs	b738 <elf_update@@ELFUTILS_1.0+0x1bf0>  // b.hs, b.nlast
    b720:	ldr	x4, [sp, #144]
    b724:	mov	x3, x21
    b728:	mov	x2, x24
    b72c:	mov	x1, x27
    b730:	mov	x0, #0x0                   	// #0
    b734:	bl	ad20 <elf_update@@ELFUTILS_1.0+0x11d8>
    b738:	ldr	x0, [sp, #104]
    b73c:	mov	w22, #0x0                   	// #0
    b740:	ldr	w6, [x0, #20]
    b744:	add	x27, x24, x6
    b748:	b	b5b0 <elf_update@@ELFUTILS_1.0+0x1a68>
    b74c:	ldp	x2, x3, [x1]
    b750:	stp	x2, x3, [x0]
    b754:	ldp	x2, x3, [x1, #16]
    b758:	stp	x2, x3, [x0, #16]
    b75c:	ldr	x1, [x1, #32]
    b760:	str	x1, [x0, #32]
    b764:	b	b658 <elf_update@@ELFUTILS_1.0+0x1b10>
    b768:	mov	x12, #0x90d0                	// #37072
    b76c:	sub	sp, sp, x12
    b770:	stp	x29, x30, [sp]
    b774:	mov	x29, sp
    b778:	stp	x19, x20, [sp, #16]
    b77c:	stp	x21, x22, [sp, #32]
    b780:	mov	w22, w1
    b784:	ldr	w1, [x0, #56]
    b788:	stp	x23, x24, [sp, #48]
    b78c:	stp	x25, x26, [sp, #64]
    b790:	adrp	x25, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b794:	stp	x27, x28, [sp, #80]
    b798:	mov	x28, x0
    b79c:	str	x2, [sp, #96]
    b7a0:	str	xzr, [sp, #192]
    b7a4:	ldr	x21, [x0, #72]
    b7a8:	ldr	w0, [x0, #116]
    b7ac:	orr	w0, w0, w1
    b7b0:	tbz	w0, #0, b880 <elf_update@@ELFUTILS_1.0+0x1d38>
    b7b4:	and	w20, w0, #0x1
    b7b8:	add	x0, x25, #0x618
    b7bc:	ldr	x2, [x0, #24]
    b7c0:	cmp	x2, #0x34
    b7c4:	b.eq	b7ec <elf_update@@ELFUTILS_1.0+0x1ca4>  // b.none
    b7c8:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b7cc:	add	x3, x3, #0xe58
    b7d0:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b7d4:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b7d8:	add	x3, x3, #0x13
    b7dc:	add	x1, x1, #0xc03
    b7e0:	add	x0, x0, #0xc16
    b7e4:	mov	w2, #0x228                 	// #552
    b7e8:	bl	3380 <__assert_fail@plt>
    b7ec:	mov	x1, x21
    b7f0:	cbz	w22, b814 <elf_update@@ELFUTILS_1.0+0x1ccc>
    b7f4:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    b7f8:	mov	x3, #0x10d0                	// #4304
    b7fc:	add	x23, sp, x3
    b800:	mov	w3, #0x1                   	// #1
    b804:	ldr	x4, [x0, #3056]
    b808:	mov	x0, x23
    b80c:	blr	x4
    b810:	mov	x1, x23
    b814:	ldr	w0, [x28, #36]
    b818:	mov	x3, #0x0                   	// #0
    b81c:	mov	x2, #0x34                  	// #52
    b820:	bl	adc0 <elf_update@@ELFUTILS_1.0+0x1278>
    b824:	cmp	x0, #0x34
    b828:	b.eq	b834 <elf_update@@ELFUTILS_1.0+0x1cec>  // b.none
    b82c:	mov	w0, #0x14                  	// #20
    b830:	b	b9c4 <elf_update@@ELFUTILS_1.0+0x1e7c>
    b834:	ldr	w0, [x28, #116]
    b838:	and	w0, w0, #0xfffffffe
    b83c:	str	w0, [x28, #116]
    b840:	ldr	x0, [x28, #88]
    b844:	cmp	x0, #0x0
    b848:	cset	w24, eq  // eq = none
    b84c:	add	x0, x25, #0x618
    b850:	ldr	x0, [x0, #48]
    b854:	cmp	x0, #0x20
    b858:	b.eq	b888 <elf_update@@ELFUTILS_1.0+0x1d40>  // b.none
    b85c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b860:	add	x3, x3, #0xe58
    b864:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b868:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    b86c:	add	x3, x3, #0x13
    b870:	add	x1, x1, #0xc03
    b874:	add	x0, x0, #0xc62
    b878:	mov	w2, #0x24a                 	// #586
    b87c:	b	b7e8 <elf_update@@ELFUTILS_1.0+0x1ca0>
    b880:	mov	w24, #0x0                   	// #0
    b884:	b	b84c <elf_update@@ELFUTILS_1.0+0x1d04>
    b888:	add	x1, sp, #0xc8
    b88c:	mov	x0, x28
    b890:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    b894:	cbnz	w0, b97c <elf_update@@ELFUTILS_1.0+0x1e34>
    b898:	ldr	x26, [x28, #88]
    b89c:	cbz	x26, b908 <elf_update@@ELFUTILS_1.0+0x1dc0>
    b8a0:	ldr	w1, [x28, #56]
    b8a4:	ldr	w0, [x28, #120]
    b8a8:	orr	w0, w0, w1
    b8ac:	and	w20, w0, #0x1
    b8b0:	tbz	w0, #0, b908 <elf_update@@ELFUTILS_1.0+0x1dc0>
    b8b4:	ldrh	w1, [x21, #40]
    b8b8:	ldr	w2, [x21, #28]
    b8bc:	cmp	w2, w1
    b8c0:	b.hi	b984 <elf_update@@ELFUTILS_1.0+0x1e3c>  // b.pmore
    b8c4:	cbnz	w22, b9a8 <elf_update@@ELFUTILS_1.0+0x1e60>
    b8c8:	mov	x23, #0x0                   	// #0
    b8cc:	ldr	x24, [sp, #200]
    b8d0:	mov	x1, x26
    b8d4:	ldr	w3, [x21, #28]
    b8d8:	ldr	w0, [x28, #36]
    b8dc:	lsl	x24, x24, #5
    b8e0:	mov	x2, x24
    b8e4:	bl	adc0 <elf_update@@ELFUTILS_1.0+0x1278>
    b8e8:	cmp	x0, x24
    b8ec:	b.ne	b82c <elf_update@@ELFUTILS_1.0+0x1ce4>  // b.any
    b8f0:	mov	x0, x23
    b8f4:	bl	3250 <free@plt>
    b8f8:	ldr	w0, [x28, #120]
    b8fc:	mov	w24, #0x1                   	// #1
    b900:	and	w0, w0, #0xfffffffe
    b904:	str	w0, [x28, #120]
    b908:	ldr	x0, [x28, #88]
    b90c:	cbnz	x0, ba10 <elf_update@@ELFUTILS_1.0+0x1ec8>
    b910:	add	x25, x25, #0x618
    b914:	ldr	x19, [x25, #24]
    b918:	ldr	x0, [sp, #96]
    b91c:	cbz	x0, bce8 <elf_update@@ELFUTILS_1.0+0x21a0>
    b920:	ldr	x1, [sp, #96]
    b924:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    b928:	movk	x0, #0x555, lsl #48
    b92c:	cmp	x1, x0
    b930:	b.hi	b9a0 <elf_update@@ELFUTILS_1.0+0x1e58>  // b.pmore
    b934:	ldr	x0, [x28, #40]
    b938:	str	x0, [sp, #136]
    b93c:	ldr	w0, [x21, #32]
    b940:	str	w0, [sp, #148]
    b944:	cbnz	w22, b958 <elf_update@@ELFUTILS_1.0+0x1e10>
    b948:	ldr	x20, [x28, #80]
    b94c:	cbz	x20, b958 <elf_update@@ELFUTILS_1.0+0x1e10>
    b950:	ldr	w0, [x28, #56]
    b954:	tbz	w0, #0, ba20 <elf_update@@ELFUTILS_1.0+0x1ed8>
    b958:	ldr	x1, [sp, #96]
    b95c:	mov	x0, #0x28                  	// #40
    b960:	mul	x0, x1, x0
    b964:	bl	3100 <malloc@plt>
    b968:	mov	x20, x0
    b96c:	mov	x25, x0
    b970:	cbnz	x0, ba24 <elf_update@@ELFUTILS_1.0+0x1edc>
    b974:	mov	w0, #0x8                   	// #8
    b978:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    b97c:	mov	w20, #0xffffffff            	// #-1
    b980:	b	b9c8 <elf_update@@ELFUTILS_1.0+0x1e80>
    b984:	ldr	w0, [x28, #36]
    b988:	sub	w2, w2, w1
    b98c:	add	x4, sp, #0xc0
    b990:	add	x3, sp, #0xd0
    b994:	and	x1, x1, #0xffff
    b998:	bl	ae58 <elf_update@@ELFUTILS_1.0+0x1310>
    b99c:	cbz	w0, b8c4 <elf_update@@ELFUTILS_1.0+0x1d7c>
    b9a0:	mov	w20, #0x1                   	// #1
    b9a4:	b	b9c8 <elf_update@@ELFUTILS_1.0+0x1e80>
    b9a8:	ldr	x24, [sp, #200]
    b9ac:	lsl	x24, x24, #5
    b9b0:	mov	x0, x24
    b9b4:	bl	3100 <malloc@plt>
    b9b8:	mov	x23, x0
    b9bc:	cbnz	x0, b9f0 <elf_update@@ELFUTILS_1.0+0x1ea8>
    b9c0:	mov	w0, #0x8                   	// #8
    b9c4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    b9c8:	mov	w0, w20
    b9cc:	mov	x12, #0x90d0                	// #37072
    b9d0:	ldp	x29, x30, [sp]
    b9d4:	ldp	x19, x20, [sp, #16]
    b9d8:	ldp	x21, x22, [sp, #32]
    b9dc:	ldp	x23, x24, [sp, #48]
    b9e0:	ldp	x25, x26, [sp, #64]
    b9e4:	ldp	x27, x28, [sp, #80]
    b9e8:	add	sp, sp, x12
    b9ec:	ret
    b9f0:	adrp	x1, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    b9f4:	mov	x2, x24
    b9f8:	mov	x26, x0
    b9fc:	mov	w3, #0x1                   	// #1
    ba00:	ldr	x4, [x1, #3080]
    ba04:	ldr	x1, [x28, #88]
    ba08:	blr	x4
    ba0c:	b	b8cc <elf_update@@ELFUTILS_1.0+0x1d84>
    ba10:	ldr	x6, [sp, #200]
    ba14:	ldr	w0, [x21, #28]
    ba18:	add	x19, x0, x6, lsl #5
    ba1c:	b	b918 <elf_update@@ELFUTILS_1.0+0x1dd0>
    ba20:	mov	x25, #0x0                   	// #0
    ba24:	ldr	w0, [x28, #56]
    ba28:	add	x26, x28, #0xc8
    ba2c:	str	w0, [sp, #112]
    ba30:	ldr	x0, [sp, #96]
    ba34:	lsl	x23, x0, #3
    ba38:	mov	x0, x23
    ba3c:	bl	3100 <malloc@plt>
    ba40:	mov	x21, x0
    ba44:	cbnz	x0, ba54 <elf_update@@ELFUTILS_1.0+0x1f0c>
    ba48:	mov	x0, x25
    ba4c:	bl	3250 <free@plt>
    ba50:	b	b974 <elf_update@@ELFUTILS_1.0+0x1e2c>
    ba54:	mov	x1, x26
    ba58:	bl	acd4 <elf_update@@ELFUTILS_1.0+0x118c>
    ba5c:	add	x0, x23, x21
    ba60:	mov	x1, #0x10d0                	// #4304
    ba64:	str	x0, [sp, #152]
    ba68:	add	x0, sp, x1
    ba6c:	adrp	x27, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    ba70:	str	x21, [sp, #104]
    ba74:	str	x0, [sp, #120]
    ba78:	add	x0, x27, #0xbd8
    ba7c:	str	x0, [sp, #128]
    ba80:	ldr	x0, [sp, #104]
    ba84:	ldr	x27, [x0]
    ba88:	ldr	x0, [x27, #128]
    ba8c:	cbnz	x0, babc <elf_update@@ELFUTILS_1.0+0x1f74>
    ba90:	ldr	w0, [x27, #156]
    ba94:	tbz	w0, #0, bc64 <elf_update@@ELFUTILS_1.0+0x211c>
    ba98:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    ba9c:	add	x3, x3, #0xe58
    baa0:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    baa4:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    baa8:	add	x3, x3, #0x13
    baac:	add	x1, x1, #0xc03
    bab0:	add	x0, x0, #0xd70
    bab4:	mov	w2, #0x2c3                 	// #707
    bab8:	b	b7e8 <elf_update@@ELFUTILS_1.0+0x1ca0>
    babc:	ldr	x7, [x27, #144]
    bac0:	ldr	w0, [x7, #4]
    bac4:	cmp	w0, #0x8
    bac8:	b.eq	bc64 <elf_update@@ELFUTILS_1.0+0x211c>  // b.none
    bacc:	ldr	x0, [x28, #40]
    bad0:	ldr	w23, [x7, #16]
    bad4:	add	x23, x23, x0
    bad8:	ldr	x0, [x27, #64]
    badc:	cbz	x0, bcfc <elf_update@@ELFUTILS_1.0+0x21b4>
    bae0:	add	x0, sp, #0xc0
    bae4:	mov	x26, x27
    bae8:	mov	w9, #0x0                   	// #0
    baec:	str	x0, [sp, #160]
    baf0:	add	x0, sp, #0xd0
    baf4:	str	x0, [sp, #168]
    baf8:	ldr	x0, [x26, #24]
    bafc:	add	x2, x0, x23
    bb00:	cmp	x2, x19
    bb04:	b.le	bb5c <elf_update@@ELFUTILS_1.0+0x2014>
    bb08:	cbz	w24, bb10 <elf_update@@ELFUTILS_1.0+0x1fc8>
    bb0c:	cbz	x0, bb28 <elf_update@@ELFUTILS_1.0+0x1fe0>
    bb10:	ldr	w1, [x28, #56]
    bb14:	ldr	w0, [x27, #156]
    bb18:	orr	w0, w0, w1
    bb1c:	ldr	w1, [x26, #56]
    bb20:	orr	w0, w0, w1
    bb24:	tbz	w0, #0, bb5c <elf_update@@ELFUTILS_1.0+0x2014>
    bb28:	ldp	x4, x3, [sp, #160]
    bb2c:	sub	x2, x2, x19
    bb30:	ldr	w0, [x28, #36]
    bb34:	mov	x1, x19
    bb38:	str	w9, [sp, #176]
    bb3c:	bl	ae58 <elf_update@@ELFUTILS_1.0+0x1310>
    bb40:	ldr	w9, [sp, #176]
    bb44:	cbz	w0, bb5c <elf_update@@ELFUTILS_1.0+0x2014>
    bb48:	mov	x0, x25
    bb4c:	bl	3250 <free@plt>
    bb50:	mov	x0, x21
    bb54:	bl	3250 <free@plt>
    bb58:	b	b9a0 <elf_update@@ELFUTILS_1.0+0x1e58>
    bb5c:	ldr	x0, [x26, #24]
    bb60:	ldr	w1, [x28, #56]
    bb64:	add	x19, x23, x0
    bb68:	ldr	w0, [x27, #156]
    bb6c:	orr	w0, w0, w1
    bb70:	ldr	w1, [x26, #56]
    bb74:	orr	w0, w0, w1
    bb78:	tbz	w0, #0, bc44 <elf_update@@ELFUTILS_1.0+0x20fc>
    bb7c:	ldr	x1, [x26]
    bb80:	cbz	w22, bbd4 <elf_update@@ELFUTILS_1.0+0x208c>
    bb84:	ldr	x2, [x26, #16]
    bb88:	cmp	x2, #0x8, lsl #12
    bb8c:	b.ls	bbb0 <elf_update@@ELFUTILS_1.0+0x2068>  // b.plast
    bb90:	mov	x0, x2
    bb94:	stp	x2, x1, [sp, #176]
    bb98:	bl	3100 <malloc@plt>
    bb9c:	ldp	x2, x1, [sp, #176]
    bba0:	cbnz	x0, bbb4 <elf_update@@ELFUTILS_1.0+0x206c>
    bba4:	mov	w0, #0x8                   	// #8
    bba8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    bbac:	b	bb48 <elf_update@@ELFUTILS_1.0+0x2000>
    bbb0:	ldr	x0, [sp, #120]
    bbb4:	str	x0, [sp, #176]
    bbb8:	ldr	w3, [x26, #8]
    bbbc:	ldr	x4, [sp, #128]
    bbc0:	ldr	x4, [x4, x3, lsl #3]
    bbc4:	mov	w3, #0x1                   	// #1
    bbc8:	blr	x4
    bbcc:	ldr	x0, [sp, #176]
    bbd0:	mov	x1, x0
    bbd4:	ldr	w0, [x28, #36]
    bbd8:	mov	x3, x19
    bbdc:	ldr	x2, [x26, #16]
    bbe0:	str	x1, [sp, #176]
    bbe4:	bl	adc0 <elf_update@@ELFUTILS_1.0+0x1278>
    bbe8:	ldr	x2, [x26, #16]
    bbec:	ldr	x1, [sp, #176]
    bbf0:	cmp	x2, x0
    bbf4:	ldr	x0, [x26]
    bbf8:	b.eq	bc24 <elf_update@@ELFUTILS_1.0+0x20dc>  // b.none
    bbfc:	cmp	x0, x1
    bc00:	b.eq	bc1c <elf_update@@ELFUTILS_1.0+0x20d4>  // b.none
    bc04:	mov	x0, #0x10d0                	// #4304
    bc08:	add	x0, sp, x0
    bc0c:	cmp	x1, x0
    bc10:	b.eq	bc1c <elf_update@@ELFUTILS_1.0+0x20d4>  // b.none
    bc14:	mov	x0, x1
    bc18:	bl	3250 <free@plt>
    bc1c:	mov	w0, #0x14                  	// #20
    bc20:	b	bba8 <elf_update@@ELFUTILS_1.0+0x2060>
    bc24:	cmp	x0, x1
    bc28:	b.eq	bc40 <elf_update@@ELFUTILS_1.0+0x20f8>  // b.none
    bc2c:	ldr	x0, [sp, #120]
    bc30:	cmp	x1, x0
    bc34:	b.eq	bc40 <elf_update@@ELFUTILS_1.0+0x20f8>  // b.none
    bc38:	mov	x0, x1
    bc3c:	bl	3250 <free@plt>
    bc40:	mov	w9, #0x1                   	// #1
    bc44:	ldr	w0, [x26, #56]
    bc48:	ldr	x6, [x26, #16]
    bc4c:	and	w0, w0, #0xfffffffe
    bc50:	str	w0, [x26, #56]
    bc54:	ldr	x26, [x26, #48]
    bc58:	add	x19, x19, x6
    bc5c:	cbnz	x26, baf8 <elf_update@@ELFUTILS_1.0+0x1fb0>
    bc60:	mov	w24, w9
    bc64:	cbz	w22, bd40 <elf_update@@ELFUTILS_1.0+0x21f8>
    bc68:	ldr	x1, [sp, #128]
    bc6c:	mov	x2, #0x28                  	// #40
    bc70:	ldr	x0, [x27, #128]
    bc74:	mov	w3, #0x1                   	// #1
    bc78:	ldr	x4, [x1, #72]
    bc7c:	madd	x0, x0, x2, x20
    bc80:	ldr	x1, [x27, #144]
    bc84:	blr	x4
    bc88:	ldr	w0, [x27, #152]
    bc8c:	ldr	w1, [sp, #112]
    bc90:	orr	w1, w1, w0
    bc94:	and	w0, w0, #0xfffffffe
    bc98:	str	w0, [x27, #152]
    bc9c:	ldr	x0, [sp, #104]
    bca0:	str	w1, [sp, #112]
    bca4:	add	x0, x0, #0x8
    bca8:	str	x0, [sp, #104]
    bcac:	ldr	x0, [sp, #152]
    bcb0:	ldr	x1, [sp, #104]
    bcb4:	cmp	x0, x1
    bcb8:	b.ne	ba80 <elf_update@@ELFUTILS_1.0+0x1f38>  // b.any
    bcbc:	ldr	x1, [sp, #136]
    bcc0:	ldr	w0, [sp, #148]
    bcc4:	add	x22, x1, w0, uxtw
    bcc8:	ldr	w0, [x28, #56]
    bccc:	tbnz	w0, #0, bd7c <elf_update@@ELFUTILS_1.0+0x2234>
    bcd0:	ldr	x0, [sp, #112]
    bcd4:	tbnz	w0, #0, bda4 <elf_update@@ELFUTILS_1.0+0x225c>
    bcd8:	mov	x0, x25
    bcdc:	bl	3250 <free@plt>
    bce0:	mov	x0, x21
    bce4:	bl	3250 <free@plt>
    bce8:	ldr	w0, [x28, #56]
    bcec:	mov	w20, #0x0                   	// #0
    bcf0:	and	w0, w0, #0xfffffffe
    bcf4:	str	w0, [x28, #56]
    bcf8:	b	b9c8 <elf_update@@ELFUTILS_1.0+0x1e80>
    bcfc:	cmp	w24, #0x0
    bd00:	ccmp	x19, x23, #0x0, ne  // ne = any
    bd04:	b.lt	bd18 <elf_update@@ELFUTILS_1.0+0x21d0>  // b.tstop
    bd08:	ldr	w6, [x7, #20]
    bd0c:	mov	w24, #0x0                   	// #0
    bd10:	add	x19, x6, x23
    bd14:	b	bc64 <elf_update@@ELFUTILS_1.0+0x211c>
    bd18:	ldr	w0, [x28, #36]
    bd1c:	add	x4, sp, #0xc0
    bd20:	add	x3, sp, #0xd0
    bd24:	sub	x2, x23, x19
    bd28:	mov	x1, x19
    bd2c:	str	x7, [sp, #160]
    bd30:	bl	ae58 <elf_update@@ELFUTILS_1.0+0x1310>
    bd34:	ldr	x7, [sp, #160]
    bd38:	cbz	w0, bd08 <elf_update@@ELFUTILS_1.0+0x21c0>
    bd3c:	b	bb48 <elf_update@@ELFUTILS_1.0+0x2000>
    bd40:	ldr	x0, [x28, #80]
    bd44:	cbz	x0, bd50 <elf_update@@ELFUTILS_1.0+0x2208>
    bd48:	ldr	w0, [x28, #56]
    bd4c:	tbz	w0, #0, bc88 <elf_update@@ELFUTILS_1.0+0x2140>
    bd50:	ldr	x0, [x27, #128]
    bd54:	mov	x1, #0x28                  	// #40
    bd58:	madd	x0, x0, x1, x20
    bd5c:	ldr	x1, [x27, #144]
    bd60:	ldp	x2, x3, [x1]
    bd64:	stp	x2, x3, [x0]
    bd68:	ldp	x2, x3, [x1, #16]
    bd6c:	stp	x2, x3, [x0, #16]
    bd70:	ldr	x1, [x1, #32]
    bd74:	str	x1, [x0, #32]
    bd78:	b	bc88 <elf_update@@ELFUTILS_1.0+0x2140>
    bd7c:	cmp	x19, x22
    bd80:	b.ge	bcd0 <elf_update@@ELFUTILS_1.0+0x2188>  // b.tcont
    bd84:	ldr	w0, [x28, #36]
    bd88:	add	x4, sp, #0xc0
    bd8c:	add	x3, sp, #0xd0
    bd90:	sub	x2, x22, x19
    bd94:	mov	x1, x19
    bd98:	bl	ae58 <elf_update@@ELFUTILS_1.0+0x1310>
    bd9c:	cbz	w0, bcd0 <elf_update@@ELFUTILS_1.0+0x2188>
    bda0:	b	bb48 <elf_update@@ELFUTILS_1.0+0x2000>
    bda4:	ldr	x0, [sp, #96]
    bda8:	mov	x2, #0x28                  	// #40
    bdac:	mov	x3, x22
    bdb0:	mov	x1, x20
    bdb4:	mul	x19, x0, x2
    bdb8:	ldr	w0, [x28, #36]
    bdbc:	mov	x2, x19
    bdc0:	bl	adc0 <elf_update@@ELFUTILS_1.0+0x1278>
    bdc4:	cmp	x19, x0
    bdc8:	b.eq	bcd8 <elf_update@@ELFUTILS_1.0+0x2190>  // b.none
    bdcc:	b	bc1c <elf_update@@ELFUTILS_1.0+0x20d4>
    bdd0:	ldr	x2, [x0]
    bdd4:	ldr	x0, [x1]
    bdd8:	ldr	x3, [x2, #144]
    bddc:	ldr	x1, [x0, #144]
    bde0:	ldr	x5, [x3, #24]
    bde4:	ldr	x4, [x1, #24]
    bde8:	cmp	x5, x4
    bdec:	b.cc	be20 <elf_update@@ELFUTILS_1.0+0x22d8>  // b.lo, b.ul, b.last
    bdf0:	b.hi	be28 <elf_update@@ELFUTILS_1.0+0x22e0>  // b.pmore
    bdf4:	ldr	x1, [x1, #32]
    bdf8:	ldr	x3, [x3, #32]
    bdfc:	cmp	x3, x1
    be00:	b.cc	be20 <elf_update@@ELFUTILS_1.0+0x22d8>  // b.lo, b.ul, b.last
    be04:	b.hi	be28 <elf_update@@ELFUTILS_1.0+0x22e0>  // b.pmore
    be08:	ldr	x1, [x0, #128]
    be0c:	ldr	x2, [x2, #128]
    be10:	cmp	x2, x1
    be14:	cset	w0, hi  // hi = pmore
    be18:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
    be1c:	ret
    be20:	mov	w0, #0xffffffff            	// #-1
    be24:	b	be1c <elf_update@@ELFUTILS_1.0+0x22d4>
    be28:	mov	w0, #0x1                   	// #1
    be2c:	b	be1c <elf_update@@ELFUTILS_1.0+0x22d4>
    be30:	mov	x2, x0
    be34:	mov	x3, x1
    be38:	mov	x4, #0x0                   	// #0
    be3c:	ldr	w5, [x3], #16
    be40:	cmp	x5, x4
    be44:	b.hi	be6c <elf_update@@ELFUTILS_1.0+0x2324>  // b.pmore
    be48:	ldr	x1, [x1, #8]
    be4c:	add	x2, x2, x5, lsl #3
    be50:	cbnz	x1, be34 <elf_update@@ELFUTILS_1.0+0x22ec>
    be54:	sub	x1, x2, x0
    be58:	adrp	x3, b000 <elf_update@@ELFUTILS_1.0+0x14b8>
    be5c:	mov	x2, #0x8                   	// #8
    be60:	add	x3, x3, #0xdd0
    be64:	asr	x1, x1, #3
    be68:	b	30f0 <qsort@plt>
    be6c:	str	x3, [x2, x4, lsl #3]
    be70:	add	x4, x4, #0x1
    be74:	add	x3, x3, #0xd0
    be78:	b	be40 <elf_update@@ELFUTILS_1.0+0x22f8>
    be7c:	stp	x29, x30, [sp, #-48]!
    be80:	mov	x5, x1
    be84:	cmp	x1, x3
    be88:	mov	x29, sp
    be8c:	stp	x19, x20, [sp, #16]
    be90:	mov	x19, x2
    be94:	add	x20, x2, x0
    be98:	stp	x21, x22, [sp, #32]
    be9c:	mov	x21, x4
    bea0:	b.cs	bf04 <elf_update@@ELFUTILS_1.0+0x23bc>  // b.hs, b.nlast
    bea4:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    bea8:	sub	x2, x3, x1
    beac:	sub	x22, x20, x1
    beb0:	cmp	x3, x20
    beb4:	ldr	w1, [x0, #448]
    beb8:	csel	x22, x2, x22, ls  // ls = plast
    bebc:	mov	x0, x5
    bec0:	mov	x2, x22
    bec4:	bl	3140 <memset@plt>
    bec8:	mov	x5, x0
    becc:	add	x5, x5, x22
    bed0:	cmp	x20, x5
    bed4:	b.eq	bf0c <elf_update@@ELFUTILS_1.0+0x23c4>  // b.none
    bed8:	cmp	x21, x20
    bedc:	b.cs	bf0c <elf_update@@ELFUTILS_1.0+0x23c4>  // b.hs, b.nlast
    bee0:	cmp	x19, x21
    bee4:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    bee8:	csel	x0, x19, x21, cs  // cs = hs, nlast
    beec:	sub	x2, x20, x0
    bef0:	ldr	w1, [x1, #448]
    bef4:	ldp	x19, x20, [sp, #16]
    bef8:	ldp	x21, x22, [sp, #32]
    befc:	ldp	x29, x30, [sp], #48
    bf00:	b	3140 <memset@plt>
    bf04:	mov	x22, #0x0                   	// #0
    bf08:	b	becc <elf_update@@ELFUTILS_1.0+0x2384>
    bf0c:	ldp	x19, x20, [sp, #16]
    bf10:	ldp	x21, x22, [sp, #32]
    bf14:	ldp	x29, x30, [sp], #48
    bf18:	ret
    bf1c:	stp	x29, x30, [sp, #-64]!
    bf20:	mov	x29, sp
    bf24:	stp	x21, x22, [sp, #32]
    bf28:	mov	w22, w0
    bf2c:	mov	x21, x2
    bf30:	stp	x23, x24, [sp, #48]
    bf34:	mov	x23, x1
    bf38:	mov	x24, x3
    bf3c:	stp	x19, x20, [sp, #16]
    bf40:	mov	x20, #0x0                   	// #0
    bf44:	add	x3, x20, x24
    bf48:	sub	x2, x21, x20
    bf4c:	add	x1, x23, x20
    bf50:	mov	w0, w22
    bf54:	bl	3270 <pwrite@plt>
    bf58:	mov	x19, x0
    bf5c:	cmn	x0, #0x1
    bf60:	b.ne	bf80 <elf_update@@ELFUTILS_1.0+0x2438>  // b.any
    bf64:	bl	3390 <__errno_location@plt>
    bf68:	ldr	w0, [x0]
    bf6c:	cmp	w0, #0x4
    bf70:	b.ne	bf8c <elf_update@@ELFUTILS_1.0+0x2444>  // b.any
    bf74:	mov	x19, x20
    bf78:	mov	x20, x19
    bf7c:	b	bf44 <elf_update@@ELFUTILS_1.0+0x23fc>
    bf80:	cmp	x0, #0x0
    bf84:	b.gt	bfa4 <elf_update@@ELFUTILS_1.0+0x245c>
    bf88:	csel	x19, x0, x20, ne  // ne = any
    bf8c:	mov	x0, x19
    bf90:	ldp	x19, x20, [sp, #16]
    bf94:	ldp	x21, x22, [sp, #32]
    bf98:	ldp	x23, x24, [sp, #48]
    bf9c:	ldp	x29, x30, [sp], #64
    bfa0:	ret
    bfa4:	add	x19, x0, x20
    bfa8:	cmp	x19, x21
    bfac:	b.cc	bf78 <elf_update@@ELFUTILS_1.0+0x2430>  // b.lo, b.ul, b.last
    bfb0:	b	bf8c <elf_update@@ELFUTILS_1.0+0x2444>
    bfb4:	stp	x29, x30, [sp, #-80]!
    bfb8:	cmp	x2, #0x1, lsl #12
    bfbc:	mov	x29, sp
    bfc0:	stp	x19, x20, [sp, #16]
    bfc4:	mov	x19, x2
    bfc8:	ldr	x20, [x4]
    bfcc:	stp	x21, x22, [sp, #32]
    bfd0:	mov	x21, #0x1000                	// #4096
    bfd4:	stp	x23, x24, [sp, #48]
    bfd8:	csel	x21, x2, x21, ls  // ls = plast
    bfdc:	mov	w23, w0
    bfe0:	str	x25, [sp, #64]
    bfe4:	mov	x22, x1
    bfe8:	mov	x24, x3
    bfec:	cmp	x20, x21
    bff0:	b.cs	c014 <elf_update@@ELFUTILS_1.0+0x24cc>  // b.hs, b.nlast
    bff4:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    bff8:	mov	x25, x4
    bffc:	sub	x2, x21, x20
    c000:	ldr	w1, [x0, #448]
    c004:	add	x0, x3, x20
    c008:	mov	x20, x21
    c00c:	bl	3140 <memset@plt>
    c010:	str	x21, [x25]
    c014:	cmp	x19, x20
    c018:	mov	x3, x22
    c01c:	csel	x21, x19, x20, ls  // ls = plast
    c020:	mov	x1, x24
    c024:	mov	x2, x21
    c028:	mov	w0, w23
    c02c:	bl	bf1c <elf_update@@ELFUTILS_1.0+0x23d4>
    c030:	cmp	x0, x21
    c034:	b.eq	c05c <elf_update@@ELFUTILS_1.0+0x2514>  // b.none
    c038:	mov	w0, #0x14                  	// #20
    c03c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    c040:	mov	w0, #0x1                   	// #1
    c044:	ldp	x19, x20, [sp, #16]
    c048:	ldp	x21, x22, [sp, #32]
    c04c:	ldp	x23, x24, [sp, #48]
    c050:	ldr	x25, [sp, #64]
    c054:	ldp	x29, x30, [sp], #80
    c058:	ret
    c05c:	add	x22, x22, x0
    c060:	subs	x19, x19, x0
    c064:	b.ne	c014 <elf_update@@ELFUTILS_1.0+0x24cc>  // b.any
    c068:	mov	w0, #0x0                   	// #0
    c06c:	b	c044 <elf_update@@ELFUTILS_1.0+0x24fc>
    c070:	stp	x29, x30, [sp, #-208]!
    c074:	mov	x29, sp
    c078:	stp	x25, x26, [sp, #64]
    c07c:	mov	x26, x0
    c080:	stp	x19, x20, [sp, #16]
    c084:	stp	x21, x22, [sp, #32]
    c088:	stp	x23, x24, [sp, #48]
    c08c:	stp	x27, x28, [sp, #80]
    c090:	str	x2, [sp, #96]
    c094:	str	w1, [sp, #132]
    c098:	ldr	w1, [x26, #56]
    c09c:	ldr	x19, [x0, #72]
    c0a0:	ldr	w0, [x0, #116]
    c0a4:	orr	w0, w0, w1
    c0a8:	tbz	w0, #0, c1a8 <elf_update@@ELFUTILS_1.0+0x2660>
    c0ac:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c0b0:	ldr	x2, [x0, #1800]
    c0b4:	cmp	x2, #0x40
    c0b8:	b.eq	c0dc <elf_update@@ELFUTILS_1.0+0x2594>  // b.none
    c0bc:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c0c0:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c0c4:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c0c8:	add	x3, x3, #0xe7e
    c0cc:	add	x1, x1, #0xc03
    c0d0:	add	x0, x0, #0xc16
    c0d4:	mov	w2, #0x8c                  	// #140
    c0d8:	bl	3380 <__assert_fail@plt>
    c0dc:	ldr	x0, [x26]
    c0e0:	ldr	x1, [x26, #40]
    c0e4:	add	x0, x0, x1
    c0e8:	ldr	w1, [sp, #132]
    c0ec:	cbz	w1, c17c <elf_update@@ELFUTILS_1.0+0x2634>
    c0f0:	adrp	x1, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    c0f4:	mov	w3, #0x1                   	// #1
    c0f8:	ldr	x4, [x1, #3272]
    c0fc:	mov	x1, x19
    c100:	blr	x4
    c104:	ldr	w0, [x26, #116]
    c108:	and	w0, w0, #0xfffffffe
    c10c:	str	w0, [x26, #116]
    c110:	ldr	x0, [x26, #88]
    c114:	cmp	x0, #0x0
    c118:	cset	w22, eq  // eq = none
    c11c:	add	x1, sp, #0xc0
    c120:	mov	x0, x26
    c124:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    c128:	mov	w23, w0
    c12c:	cbnz	w0, c28c <elf_update@@ELFUTILS_1.0+0x2744>
    c130:	adrp	x20, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c134:	add	x0, x20, #0x618
    c138:	ldr	x27, [x0, #264]
    c13c:	ldr	x0, [x26, #88]
    c140:	cbz	x0, c22c <elf_update@@ELFUTILS_1.0+0x26e4>
    c144:	ldr	w1, [x26, #56]
    c148:	ldr	w0, [x26, #120]
    c14c:	orr	w0, w0, w1
    c150:	tbz	w0, #0, c22c <elf_update@@ELFUTILS_1.0+0x26e4>
    c154:	cmp	x27, #0x38
    c158:	b.eq	c1b0 <elf_update@@ELFUTILS_1.0+0x2668>  // b.none
    c15c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c160:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c164:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c168:	add	x3, x3, #0xe7e
    c16c:	add	x1, x1, #0xc03
    c170:	add	x0, x0, #0xc62
    c174:	mov	w2, #0xaf                  	// #175
    c178:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c17c:	cmp	x19, x0
    c180:	b.eq	c104 <elf_update@@ELFUTILS_1.0+0x25bc>  // b.none
    c184:	ldp	x2, x3, [x19]
    c188:	stp	x2, x3, [x0]
    c18c:	ldp	x2, x3, [x19, #16]
    c190:	stp	x2, x3, [x0, #16]
    c194:	ldp	x2, x3, [x19, #32]
    c198:	stp	x2, x3, [x0, #32]
    c19c:	ldp	x2, x3, [x19, #48]
    c1a0:	stp	x2, x3, [x0, #48]
    c1a4:	b	c104 <elf_update@@ELFUTILS_1.0+0x25bc>
    c1a8:	mov	w22, #0x0                   	// #0
    c1ac:	b	c11c <elf_update@@ELFUTILS_1.0+0x25d4>
    c1b0:	ldr	x2, [x19, #32]
    c1b4:	ldrh	w1, [x19, #52]
    c1b8:	cmp	x2, x1
    c1bc:	b.ls	c1e0 <elf_update@@ELFUTILS_1.0+0x2698>  // b.plast
    c1c0:	ldr	x0, [x26, #40]
    c1c4:	sub	x2, x2, x1
    c1c8:	ldr	x3, [x26]
    c1cc:	add	x0, x1, x0
    c1d0:	adrp	x1, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    c1d4:	add	x0, x3, x0
    c1d8:	ldr	w1, [x1, #448]
    c1dc:	bl	3140 <memset@plt>
    c1e0:	ldr	x2, [sp, #192]
    c1e4:	mov	x3, #0x38                  	// #56
    c1e8:	ldr	x1, [x19, #32]
    c1ec:	ldr	x0, [x26, #40]
    c1f0:	mul	x2, x2, x3
    c1f4:	ldr	w3, [sp, #132]
    c1f8:	add	x1, x0, x1
    c1fc:	ldr	x0, [x26]
    c200:	add	x0, x0, x1
    c204:	ldr	x1, [x26, #88]
    c208:	cbz	w3, c2b0 <elf_update@@ELFUTILS_1.0+0x2768>
    c20c:	adrp	x3, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    c210:	ldr	x4, [x3, #3296]
    c214:	mov	w3, #0x1                   	// #1
    c218:	blr	x4
    c21c:	ldr	w0, [x26, #120]
    c220:	mov	w22, #0x1                   	// #1
    c224:	and	w0, w0, #0xfffffffe
    c228:	str	w0, [x26, #120]
    c22c:	ldr	x0, [sp, #96]
    c230:	cbz	x0, c84c <elf_update@@ELFUTILS_1.0+0x2d04>
    c234:	ldr	x1, [sp, #96]
    c238:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    c23c:	cmp	x1, x0
    c240:	b.hi	c6d4 <elf_update@@ELFUTILS_1.0+0x2b8c>  // b.pmore
    c244:	ldr	x0, [x26]
    c248:	add	x20, x20, #0x618
    c24c:	str	x0, [sp, #104]
    c250:	lsl	x24, x1, #3
    c254:	ldr	x0, [x26, #40]
    c258:	str	x0, [sp, #112]
    c25c:	ldr	x0, [x19, #32]
    c260:	str	x0, [sp, #144]
    c264:	ldr	x0, [sp, #192]
    c268:	add	x25, x26, #0xc8
    c26c:	str	x0, [sp, #152]
    c270:	mov	x0, x24
    c274:	ldr	x28, [x20, #240]
    c278:	bl	3100 <malloc@plt>
    c27c:	mov	x20, x0
    c280:	cbnz	x0, c2b8 <elf_update@@ELFUTILS_1.0+0x2770>
    c284:	mov	w0, #0x8                   	// #8
    c288:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    c28c:	mov	w23, #0xffffffff            	// #-1
    c290:	mov	w0, w23
    c294:	ldp	x19, x20, [sp, #16]
    c298:	ldp	x21, x22, [sp, #32]
    c29c:	ldp	x23, x24, [sp, #48]
    c2a0:	ldp	x25, x26, [sp, #64]
    c2a4:	ldp	x27, x28, [sp, #80]
    c2a8:	ldp	x29, x30, [sp], #208
    c2ac:	ret
    c2b0:	bl	3070 <memmove@plt>
    c2b4:	b	c21c <elf_update@@ELFUTILS_1.0+0x26d4>
    c2b8:	ldr	x21, [x19, #40]
    c2bc:	ldr	x1, [sp, #112]
    c2c0:	add	x21, x1, x21
    c2c4:	ldr	x1, [sp, #104]
    c2c8:	add	x21, x1, x21
    c2cc:	ldrh	w1, [x19, #58]
    c2d0:	str	w1, [sp, #160]
    c2d4:	mov	x1, x25
    c2d8:	bl	be30 <elf_update@@ELFUTILS_1.0+0x22e8>
    c2dc:	str	x20, [sp, #120]
    c2e0:	add	x0, x24, x20
    c2e4:	mov	x24, x20
    c2e8:	str	x0, [sp, #136]
    c2ec:	ldr	w0, [x26, #124]
    c2f0:	ldr	x25, [x24]
    c2f4:	ldr	x2, [x26, #40]
    c2f8:	cbnz	w0, c3c0 <elf_update@@ELFUTILS_1.0+0x2878>
    c2fc:	ldr	w0, [x25, #152]
    c300:	tbnz	w0, #7, c3c0 <elf_update@@ELFUTILS_1.0+0x2878>
    c304:	ldr	x0, [x25, #128]
    c308:	ldr	x1, [x25, #144]
    c30c:	add	x0, x21, x0, lsl #6
    c310:	cmp	x1, x0
    c314:	b.eq	c3c0 <elf_update@@ELFUTILS_1.0+0x2878>  // b.none
    c318:	ldr	x0, [x26]
    c31c:	add	x4, x0, x2
    c320:	cmp	x1, x4
    c324:	b.hi	c348 <elf_update@@ELFUTILS_1.0+0x2800>  // b.pmore
    c328:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c32c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c330:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c334:	add	x3, x3, #0xe7e
    c338:	add	x1, x1, #0xc03
    c33c:	add	x0, x0, #0xcae
    c340:	mov	w2, #0xf8                  	// #248
    c344:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c348:	ldr	x4, [x26, #48]
    c34c:	add	x4, x2, x4
    c350:	add	x0, x0, x4
    c354:	cmp	x1, x0
    c358:	b.cc	c37c <elf_update@@ELFUTILS_1.0+0x2834>  // b.lo, b.ul, b.last
    c35c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c360:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c364:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c368:	add	x3, x3, #0xe7e
    c36c:	add	x1, x1, #0xc03
    c370:	add	x0, x0, #0xd04
    c374:	mov	w2, #0xfa                  	// #250
    c378:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c37c:	mov	x0, #0x40                  	// #64
    c380:	stp	x1, x2, [sp, #168]
    c384:	bl	3100 <malloc@plt>
    c388:	ldp	x1, x2, [sp, #168]
    c38c:	cbnz	x0, c39c <elf_update@@ELFUTILS_1.0+0x2854>
    c390:	mov	x0, x20
    c394:	bl	3250 <free@plt>
    c398:	b	c284 <elf_update@@ELFUTILS_1.0+0x273c>
    c39c:	ldp	x6, x7, [x1]
    c3a0:	stp	x6, x7, [x0]
    c3a4:	ldp	x6, x7, [x1, #16]
    c3a8:	stp	x6, x7, [x0, #16]
    c3ac:	ldp	x6, x7, [x1, #32]
    c3b0:	stp	x6, x7, [x0, #32]
    c3b4:	ldp	x6, x7, [x1, #48]
    c3b8:	stp	x6, x7, [x0, #48]
    c3bc:	str	x0, [x25, #144]
    c3c0:	ldr	x0, [x26]
    c3c4:	ldr	x1, [x25]
    c3c8:	add	x4, x0, x2
    c3cc:	cmp	x1, x4
    c3d0:	b.cc	c424 <elf_update@@ELFUTILS_1.0+0x28dc>  // b.lo, b.ul, b.last
    c3d4:	ldr	x4, [x26, #48]
    c3d8:	add	x4, x2, x4
    c3dc:	add	x4, x0, x4
    c3e0:	cmp	x1, x4
    c3e4:	b.cs	c424 <elf_update@@ELFUTILS_1.0+0x28dc>  // b.hs, b.nlast
    c3e8:	ldr	x4, [x25, #144]
    c3ec:	ldr	x4, [x4, #24]
    c3f0:	add	x2, x2, x4
    c3f4:	add	x2, x0, x2
    c3f8:	cmp	x1, x2
    c3fc:	b.cs	c424 <elf_update@@ELFUTILS_1.0+0x28dc>  // b.hs, b.nlast
    c400:	ldr	x2, [x25, #16]
    c404:	stp	x2, x1, [sp, #168]
    c408:	mov	x0, x2
    c40c:	bl	3100 <malloc@plt>
    c410:	ldp	x2, x1, [sp, #168]
    c414:	cbz	x0, c390 <elf_update@@ELFUTILS_1.0+0x2848>
    c418:	bl	3060 <memcpy@plt>
    c41c:	str	x0, [x25]
    c420:	str	x0, [x25, #168]
    c424:	ldr	x0, [sp, #136]
    c428:	add	x24, x24, #0x8
    c42c:	cmp	x0, x24
    c430:	b.ne	c2ec <elf_update@@ELFUTILS_1.0+0x27a4>  // b.any
    c434:	ldr	x1, [sp, #112]
    c438:	str	x20, [sp, #112]
    c43c:	ldr	x0, [sp, #152]
    c440:	madd	x6, x0, x27, x1
    c444:	ldr	x0, [sp, #144]
    c448:	ldr	x1, [sp, #96]
    c44c:	cmp	x0, x28
    c450:	csel	x28, x0, x28, cs  // cs = hs, nlast
    c454:	ldr	x0, [sp, #104]
    c458:	add	x6, x6, x28
    c45c:	add	x27, x0, x6
    c460:	ldrh	w0, [sp, #160]
    c464:	madd	x0, x0, x1, x21
    c468:	str	x0, [sp, #144]
    c46c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c470:	add	x0, x0, #0xac4
    c474:	str	x0, [sp, #168]
    c478:	add	x0, sp, #0xc8
    c47c:	str	x0, [sp, #176]
    c480:	ldr	x0, [sp, #112]
    c484:	ldr	x25, [x0]
    c488:	ldr	x0, [x25, #128]
    c48c:	cbnz	x0, c4b8 <elf_update@@ELFUTILS_1.0+0x2970>
    c490:	ldr	w0, [x25, #156]
    c494:	tbz	w0, #0, c750 <elf_update@@ELFUTILS_1.0+0x2c08>
    c498:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c49c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c4a0:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c4a4:	add	x3, x3, #0xe7e
    c4a8:	add	x1, x1, #0xc03
    c4ac:	add	x0, x0, #0xd70
    c4b0:	mov	w2, #0x12f                 	// #303
    c4b4:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c4b8:	ldr	x0, [x25, #144]
    c4bc:	str	x0, [sp, #104]
    c4c0:	ldr	w0, [x0, #4]
    c4c4:	cmp	w0, #0x8
    c4c8:	b.eq	c744 <elf_update@@ELFUTILS_1.0+0x2bfc>  // b.none
    c4cc:	ldr	x0, [sp, #104]
    c4d0:	ldr	x24, [x26, #40]
    c4d4:	ldr	x0, [x0, #24]
    c4d8:	add	x0, x24, x0
    c4dc:	ldr	x24, [x26]
    c4e0:	add	x24, x24, x0
    c4e4:	ldr	x0, [x25, #64]
    c4e8:	cbz	x0, c8a4 <elf_update@@ELFUTILS_1.0+0x2d5c>
    c4ec:	mov	x28, x25
    c4f0:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    c4f4:	mov	w22, #0x0                   	// #0
    c4f8:	add	x0, x0, #0xbd8
    c4fc:	str	x0, [sp, #160]
    c500:	ldr	x0, [x28, #24]
    c504:	tbz	x0, #63, c528 <elf_update@@ELFUTILS_1.0+0x29e0>
    c508:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c50c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c510:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c514:	add	x3, x3, #0xe7e
    c518:	add	x1, x1, #0xc03
    c51c:	add	x0, x0, #0xd90
    c520:	mov	w2, #0x13f                 	// #319
    c524:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c528:	ldr	x1, [sp, #104]
    c52c:	ldr	x1, [x1, #32]
    c530:	cmp	x0, x1
    c534:	b.ls	c558 <elf_update@@ELFUTILS_1.0+0x2a10>  // b.plast
    c538:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c53c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c540:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c544:	add	x3, x3, #0xe7e
    c548:	add	x1, x1, #0xc03
    c54c:	add	x0, x0, #0xda6
    c550:	mov	w2, #0x140                 	// #320
    c554:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c558:	ldr	x2, [x28, #16]
    c55c:	sub	x1, x1, x0
    c560:	cmp	x2, x1
    c564:	b.ls	c588 <elf_update@@ELFUTILS_1.0+0x2a40>  // b.plast
    c568:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c56c:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c570:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c574:	add	x3, x3, #0xe7e
    c578:	add	x1, x1, #0xc03
    c57c:	add	x0, x0, #0xdd3
    c580:	mov	w2, #0x141                 	// #321
    c584:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c588:	add	x1, x24, x0
    c58c:	cmp	x27, x1
    c590:	b.cs	c5c4 <elf_update@@ELFUTILS_1.0+0x2a7c>  // b.hs, b.nlast
    c594:	cbz	x0, c5b0 <elf_update@@ELFUTILS_1.0+0x2a68>
    c598:	ldr	w2, [x26, #56]
    c59c:	ldr	w1, [x25, #156]
    c5a0:	orr	w1, w1, w2
    c5a4:	ldr	w2, [x28, #56]
    c5a8:	orr	w1, w1, w2
    c5ac:	tbz	w1, #0, c5c4 <elf_update@@ELFUTILS_1.0+0x2a7c>
    c5b0:	ldr	x4, [sp, #144]
    c5b4:	mov	x3, x21
    c5b8:	mov	x2, x24
    c5bc:	mov	x1, x27
    c5c0:	bl	be7c <elf_update@@ELFUTILS_1.0+0x2334>
    c5c4:	ldp	x2, x6, [x28, #16]
    c5c8:	ldr	w1, [x26, #56]
    c5cc:	ldr	w0, [x25, #156]
    c5d0:	orr	w0, w0, w1
    c5d4:	ldr	w1, [x28, #56]
    c5d8:	add	x27, x24, x6
    c5dc:	orr	w0, w0, w1
    c5e0:	tbz	w0, #0, c6f8 <elf_update@@ELFUTILS_1.0+0x2bb0>
    c5e4:	ldr	w0, [sp, #132]
    c5e8:	cbz	w0, c6e4 <elf_update@@ELFUTILS_1.0+0x2b9c>
    c5ec:	mov	w22, #0x1                   	// #1
    c5f0:	cbz	x2, c6fc <elf_update@@ELFUTILS_1.0+0x2bb4>
    c5f4:	ldr	w0, [x28, #8]
    c5f8:	cbz	w0, c6e8 <elf_update@@ELFUTILS_1.0+0x2ba0>
    c5fc:	mov	w1, w0
    c600:	str	x1, [sp, #152]
    c604:	ldr	x1, [sp, #168]
    c608:	add	x0, x1, w0, uxtw
    c60c:	ldrb	w0, [x0, #27]
    c610:	cmp	w0, #0x0
    c614:	csel	w1, w22, w0, eq  // eq = none
    c618:	and	x1, x1, #0xff
    c61c:	sub	x3, x1, #0x1
    c620:	tst	x27, x3
    c624:	b.ne	c654 <elf_update@@ELFUTILS_1.0+0x2b0c>  // b.any
    c628:	ldp	x0, x1, [sp, #152]
    c62c:	mov	w3, w22
    c630:	add	x0, x0, #0x1b
    c634:	ldr	x4, [x1, x0, lsl #3]
    c638:	mov	x0, x27
    c63c:	ldr	x1, [x28]
    c640:	blr	x4
    c644:	ldr	x0, [x28, #16]
    c648:	add	x27, x27, x0
    c64c:	mov	w22, #0x1                   	// #1
    c650:	b	c6fc <elf_update@@ELFUTILS_1.0+0x2bb4>
    c654:	cmp	w0, #0x7
    c658:	b.hi	c6b0 <elf_update@@ELFUTILS_1.0+0x2b68>  // b.pmore
    c65c:	mov	x0, x2
    c660:	str	x2, [sp, #184]
    c664:	bl	3100 <malloc@plt>
    c668:	mov	x22, x0
    c66c:	ldr	x2, [sp, #184]
    c670:	cbz	x22, c6c4 <elf_update@@ELFUTILS_1.0+0x2b7c>
    c674:	ldp	x0, x1, [sp, #152]
    c678:	mov	w3, #0x1                   	// #1
    c67c:	str	x2, [sp, #152]
    c680:	add	x0, x0, #0x1b
    c684:	ldr	x4, [x1, x0, lsl #3]
    c688:	mov	x0, x22
    c68c:	ldr	x1, [x28]
    c690:	blr	x4
    c694:	ldr	x2, [sp, #152]
    c698:	mov	x1, x22
    c69c:	mov	x0, x27
    c6a0:	bl	3060 <memcpy@plt>
    c6a4:	mov	x0, x22
    c6a8:	bl	3250 <free@plt>
    c6ac:	b	c644 <elf_update@@ELFUTILS_1.0+0x2afc>
    c6b0:	ldr	x0, [sp, #176]
    c6b4:	str	x2, [sp, #184]
    c6b8:	bl	3170 <posix_memalign@plt>
    c6bc:	ldr	x2, [sp, #184]
    c6c0:	cbz	w0, c6dc <elf_update@@ELFUTILS_1.0+0x2b94>
    c6c4:	mov	x0, x20
    c6c8:	bl	3250 <free@plt>
    c6cc:	mov	w0, #0x8                   	// #8
    c6d0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    c6d4:	mov	w23, #0x1                   	// #1
    c6d8:	b	c290 <elf_update@@ELFUTILS_1.0+0x2748>
    c6dc:	ldr	x22, [sp, #200]
    c6e0:	b	c670 <elf_update@@ELFUTILS_1.0+0x2b28>
    c6e4:	cbz	x2, c64c <elf_update@@ELFUTILS_1.0+0x2b04>
    c6e8:	ldr	x1, [x28]
    c6ec:	mov	x0, x27
    c6f0:	bl	3070 <memmove@plt>
    c6f4:	b	c644 <elf_update@@ELFUTILS_1.0+0x2afc>
    c6f8:	add	x27, x27, x2
    c6fc:	ldp	x1, x0, [x28, #16]
    c700:	add	x0, x0, x1
    c704:	add	x0, x24, x0
    c708:	cmp	x27, x0
    c70c:	b.eq	c730 <elf_update@@ELFUTILS_1.0+0x2be8>  // b.none
    c710:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c714:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c718:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c71c:	add	x3, x3, #0xe7e
    c720:	add	x1, x1, #0xc03
    c724:	add	x0, x0, #0xe16
    c728:	mov	w2, #0x197                 	// #407
    c72c:	b	c0d8 <elf_update@@ELFUTILS_1.0+0x2590>
    c730:	ldr	w0, [x28, #56]
    c734:	and	w0, w0, #0xfffffffe
    c738:	str	w0, [x28, #56]
    c73c:	ldr	x28, [x28, #48]
    c740:	cbnz	x28, c500 <elf_update@@ELFUTILS_1.0+0x29b8>
    c744:	ldr	w0, [x25, #156]
    c748:	and	w0, w0, #0xfffffffe
    c74c:	str	w0, [x25, #156]
    c750:	ldr	x0, [sp, #112]
    c754:	add	x0, x0, #0x8
    c758:	str	x0, [sp, #112]
    c75c:	ldr	x0, [sp, #136]
    c760:	ldr	x1, [sp, #112]
    c764:	cmp	x0, x1
    c768:	b.ne	c480 <elf_update@@ELFUTILS_1.0+0x2938>  // b.any
    c76c:	ldr	w0, [x26, #56]
    c770:	tbz	w0, #0, c7a4 <elf_update@@ELFUTILS_1.0+0x2c5c>
    c774:	ldr	x2, [x26, #40]
    c778:	ldr	x0, [x19, #40]
    c77c:	add	x0, x2, x0
    c780:	ldr	x2, [x26]
    c784:	add	x2, x2, x0
    c788:	cmp	x2, x27
    c78c:	b.ls	c7a4 <elf_update@@ELFUTILS_1.0+0x2c5c>  // b.plast
    c790:	adrp	x0, 24000 <elf_compress_gnu@@ELFUTILS_1.7+0x14474>
    c794:	sub	x2, x2, x27
    c798:	ldr	w1, [x0, #448]
    c79c:	mov	x0, x27
    c7a0:	bl	3140 <memset@plt>
    c7a4:	adrp	x22, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    c7a8:	add	x22, x22, #0xbd8
    c7ac:	ldr	x0, [sp, #120]
    c7b0:	ldr	w1, [x26, #56]
    c7b4:	ldr	x24, [x0]
    c7b8:	ldr	w0, [x24, #152]
    c7bc:	orr	w0, w0, w1
    c7c0:	tbz	w0, #0, c828 <elf_update@@ELFUTILS_1.0+0x2ce0>
    c7c4:	ldr	w2, [sp, #132]
    c7c8:	ldr	x0, [x24, #128]
    c7cc:	ldr	x1, [x24, #144]
    c7d0:	add	x0, x21, x0, lsl #6
    c7d4:	cbz	w2, c8dc <elf_update@@ELFUTILS_1.0+0x2d94>
    c7d8:	ldr	x4, [x22, #288]
    c7dc:	mov	w3, #0x1                   	// #1
    c7e0:	mov	x2, #0x40                  	// #64
    c7e4:	blr	x4
    c7e8:	ldr	w0, [x26, #124]
    c7ec:	cbnz	w0, c81c <elf_update@@ELFUTILS_1.0+0x2cd4>
    c7f0:	ldr	w0, [x24, #152]
    c7f4:	tbnz	w0, #7, c81c <elf_update@@ELFUTILS_1.0+0x2cd4>
    c7f8:	ldr	x1, [x24, #128]
    c7fc:	ldr	x0, [x24, #144]
    c800:	add	x1, x21, x1, lsl #6
    c804:	cmp	x0, x1
    c808:	b.eq	c81c <elf_update@@ELFUTILS_1.0+0x2cd4>  // b.none
    c80c:	bl	3250 <free@plt>
    c810:	ldr	x0, [x24, #128]
    c814:	add	x0, x21, x0, lsl #6
    c818:	str	x0, [x24, #144]
    c81c:	ldr	w0, [x24, #152]
    c820:	and	w0, w0, #0xfffffffe
    c824:	str	w0, [x24, #152]
    c828:	ldr	x0, [sp, #120]
    c82c:	add	x0, x0, #0x8
    c830:	str	x0, [sp, #120]
    c834:	ldr	x0, [sp, #136]
    c838:	ldr	x1, [sp, #120]
    c83c:	cmp	x0, x1
    c840:	b.ne	c7ac <elf_update@@ELFUTILS_1.0+0x2c64>  // b.any
    c844:	mov	x0, x20
    c848:	bl	3250 <free@plt>
    c84c:	ldr	w0, [x26, #56]
    c850:	ldr	x20, [x26]
    c854:	and	w0, w0, #0xfffffffe
    c858:	str	w0, [x26, #56]
    c85c:	mov	w0, #0x1e                  	// #30
    c860:	ldr	x21, [x26, #40]
    c864:	bl	3320 <sysconf@plt>
    c868:	ldr	x1, [x19, #40]
    c86c:	neg	x0, x0
    c870:	ldr	x2, [x26, #40]
    c874:	and	x0, x0, x21
    c878:	ldr	x3, [sp, #96]
    c87c:	add	x2, x2, x1
    c880:	ldrh	w1, [x19, #58]
    c884:	add	x0, x20, x0
    c888:	madd	x25, x1, x3, x2
    c88c:	mov	w2, #0x4                   	// #4
    c890:	ldr	x1, [x26]
    c894:	add	x1, x1, x25
    c898:	sub	x1, x1, x0
    c89c:	bl	3080 <msync@plt>
    c8a0:	b	c290 <elf_update@@ELFUTILS_1.0+0x2748>
    c8a4:	cmp	w22, #0x0
    c8a8:	ccmp	x27, x24, #0x2, ne  // ne = any
    c8ac:	b.cs	c8c8 <elf_update@@ELFUTILS_1.0+0x2d80>  // b.hs, b.nlast
    c8b0:	ldr	x4, [sp, #144]
    c8b4:	mov	x3, x21
    c8b8:	mov	x2, x24
    c8bc:	mov	x1, x27
    c8c0:	mov	x0, #0x0                   	// #0
    c8c4:	bl	be7c <elf_update@@ELFUTILS_1.0+0x2334>
    c8c8:	ldr	x0, [sp, #104]
    c8cc:	mov	w22, #0x0                   	// #0
    c8d0:	ldr	x6, [x0, #32]
    c8d4:	add	x27, x24, x6
    c8d8:	b	c744 <elf_update@@ELFUTILS_1.0+0x2bfc>
    c8dc:	ldp	x2, x3, [x1]
    c8e0:	stp	x2, x3, [x0]
    c8e4:	ldp	x2, x3, [x1, #16]
    c8e8:	stp	x2, x3, [x0, #16]
    c8ec:	ldp	x2, x3, [x1, #32]
    c8f0:	stp	x2, x3, [x0, #32]
    c8f4:	ldp	x2, x3, [x1, #48]
    c8f8:	stp	x2, x3, [x0, #48]
    c8fc:	b	c7e8 <elf_update@@ELFUTILS_1.0+0x2ca0>
    c900:	mov	x12, #0x90d0                	// #37072
    c904:	sub	sp, sp, x12
    c908:	stp	x29, x30, [sp]
    c90c:	mov	x29, sp
    c910:	stp	x19, x20, [sp, #16]
    c914:	stp	x21, x22, [sp, #32]
    c918:	mov	w22, w1
    c91c:	ldr	w1, [x0, #56]
    c920:	stp	x23, x24, [sp, #48]
    c924:	stp	x25, x26, [sp, #64]
    c928:	adrp	x25, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c92c:	stp	x27, x28, [sp, #80]
    c930:	mov	x28, x0
    c934:	str	x2, [sp, #96]
    c938:	str	xzr, [sp, #192]
    c93c:	ldr	x21, [x0, #72]
    c940:	ldr	w0, [x0, #116]
    c944:	orr	w0, w0, w1
    c948:	tbz	w0, #0, ca18 <elf_update@@ELFUTILS_1.0+0x2ed0>
    c94c:	and	w20, w0, #0x1
    c950:	add	x0, x25, #0x618
    c954:	ldr	x2, [x0, #240]
    c958:	cmp	x2, #0x40
    c95c:	b.eq	c984 <elf_update@@ELFUTILS_1.0+0x2e3c>  // b.none
    c960:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c964:	add	x3, x3, #0xe7e
    c968:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c96c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c970:	add	x3, x3, #0x13
    c974:	add	x1, x1, #0xc03
    c978:	add	x0, x0, #0xc16
    c97c:	mov	w2, #0x228                 	// #552
    c980:	bl	3380 <__assert_fail@plt>
    c984:	mov	x1, x21
    c988:	cbz	w22, c9ac <elf_update@@ELFUTILS_1.0+0x2e64>
    c98c:	adrp	x0, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    c990:	mov	x3, #0x10d0                	// #4304
    c994:	add	x23, sp, x3
    c998:	mov	w3, #0x1                   	// #1
    c99c:	ldr	x4, [x0, #3272]
    c9a0:	mov	x0, x23
    c9a4:	blr	x4
    c9a8:	mov	x1, x23
    c9ac:	ldr	w0, [x28, #36]
    c9b0:	mov	x3, #0x0                   	// #0
    c9b4:	mov	x2, #0x40                  	// #64
    c9b8:	bl	bf1c <elf_update@@ELFUTILS_1.0+0x23d4>
    c9bc:	cmp	x0, #0x40
    c9c0:	b.eq	c9cc <elf_update@@ELFUTILS_1.0+0x2e84>  // b.none
    c9c4:	mov	w0, #0x14                  	// #20
    c9c8:	b	cb64 <elf_update@@ELFUTILS_1.0+0x301c>
    c9cc:	ldr	w0, [x28, #116]
    c9d0:	and	w0, w0, #0xfffffffe
    c9d4:	str	w0, [x28, #116]
    c9d8:	ldr	x0, [x28, #88]
    c9dc:	cmp	x0, #0x0
    c9e0:	cset	w24, eq  // eq = none
    c9e4:	add	x0, x25, #0x618
    c9e8:	ldr	x0, [x0, #264]
    c9ec:	cmp	x0, #0x38
    c9f0:	b.eq	ca20 <elf_update@@ELFUTILS_1.0+0x2ed8>  // b.none
    c9f4:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    c9f8:	add	x3, x3, #0xe7e
    c9fc:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    ca00:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    ca04:	add	x3, x3, #0x13
    ca08:	add	x1, x1, #0xc03
    ca0c:	add	x0, x0, #0xc62
    ca10:	mov	w2, #0x24a                 	// #586
    ca14:	b	c980 <elf_update@@ELFUTILS_1.0+0x2e38>
    ca18:	mov	w24, #0x0                   	// #0
    ca1c:	b	c9e4 <elf_update@@ELFUTILS_1.0+0x2e9c>
    ca20:	add	x1, sp, #0xc8
    ca24:	mov	x0, x28
    ca28:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    ca2c:	cbnz	w0, cb1c <elf_update@@ELFUTILS_1.0+0x2fd4>
    ca30:	ldr	x26, [x28, #88]
    ca34:	cbz	x26, caa4 <elf_update@@ELFUTILS_1.0+0x2f5c>
    ca38:	ldr	w1, [x28, #56]
    ca3c:	ldr	w0, [x28, #120]
    ca40:	orr	w0, w0, w1
    ca44:	and	w20, w0, #0x1
    ca48:	tbz	w0, #0, caa4 <elf_update@@ELFUTILS_1.0+0x2f5c>
    ca4c:	ldr	x2, [x21, #32]
    ca50:	ldrh	w1, [x21, #52]
    ca54:	cmp	x2, x1
    ca58:	b.hi	cb24 <elf_update@@ELFUTILS_1.0+0x2fdc>  // b.pmore
    ca5c:	cbnz	w22, cb44 <elf_update@@ELFUTILS_1.0+0x2ffc>
    ca60:	mov	x23, #0x0                   	// #0
    ca64:	ldr	x24, [sp, #200]
    ca68:	mov	x2, #0x38                  	// #56
    ca6c:	ldr	w0, [x28, #36]
    ca70:	mov	x1, x26
    ca74:	ldr	x3, [x21, #32]
    ca78:	mul	x24, x24, x2
    ca7c:	mov	x2, x24
    ca80:	bl	bf1c <elf_update@@ELFUTILS_1.0+0x23d4>
    ca84:	cmp	x0, x24
    ca88:	b.ne	c9c4 <elf_update@@ELFUTILS_1.0+0x2e7c>  // b.any
    ca8c:	mov	x0, x23
    ca90:	bl	3250 <free@plt>
    ca94:	ldr	w0, [x28, #120]
    ca98:	mov	w24, #0x1                   	// #1
    ca9c:	and	w0, w0, #0xfffffffe
    caa0:	str	w0, [x28, #120]
    caa4:	ldr	x0, [x28, #88]
    caa8:	cbnz	x0, cbb0 <elf_update@@ELFUTILS_1.0+0x3068>
    caac:	add	x25, x25, #0x618
    cab0:	ldr	x19, [x25, #240]
    cab4:	ldr	x0, [sp, #96]
    cab8:	cbz	x0, ce8c <elf_update@@ELFUTILS_1.0+0x3344>
    cabc:	mov	x0, #0xe38e                	// #58254
    cac0:	ldr	x1, [sp, #96]
    cac4:	movk	x0, #0x8e38, lsl #16
    cac8:	movk	x0, #0x38e3, lsl #32
    cacc:	movk	x0, #0x38e, lsl #48
    cad0:	cmp	x1, x0
    cad4:	b.hi	cb3c <elf_update@@ELFUTILS_1.0+0x2ff4>  // b.pmore
    cad8:	ldr	x0, [x28, #40]
    cadc:	str	x0, [sp, #136]
    cae0:	ldr	x0, [x21, #40]
    cae4:	str	x0, [sp, #144]
    cae8:	cbnz	w22, cafc <elf_update@@ELFUTILS_1.0+0x2fb4>
    caec:	ldr	x20, [x28, #80]
    caf0:	cbz	x20, cafc <elf_update@@ELFUTILS_1.0+0x2fb4>
    caf4:	ldr	w0, [x28, #56]
    caf8:	tbz	w0, #0, cbc4 <elf_update@@ELFUTILS_1.0+0x307c>
    cafc:	ldr	x0, [sp, #96]
    cb00:	lsl	x0, x0, #6
    cb04:	bl	3100 <malloc@plt>
    cb08:	mov	x20, x0
    cb0c:	mov	x25, x0
    cb10:	cbnz	x0, cbc8 <elf_update@@ELFUTILS_1.0+0x3080>
    cb14:	mov	w0, #0x8                   	// #8
    cb18:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    cb1c:	mov	w20, #0xffffffff            	// #-1
    cb20:	b	cb68 <elf_update@@ELFUTILS_1.0+0x3020>
    cb24:	ldr	w0, [x28, #36]
    cb28:	add	x4, sp, #0xc0
    cb2c:	add	x3, sp, #0xd0
    cb30:	sub	x2, x2, x1
    cb34:	bl	bfb4 <elf_update@@ELFUTILS_1.0+0x246c>
    cb38:	cbz	w0, ca5c <elf_update@@ELFUTILS_1.0+0x2f14>
    cb3c:	mov	w20, #0x1                   	// #1
    cb40:	b	cb68 <elf_update@@ELFUTILS_1.0+0x3020>
    cb44:	ldr	x24, [sp, #200]
    cb48:	mov	x2, #0x38                  	// #56
    cb4c:	mul	x24, x24, x2
    cb50:	mov	x0, x24
    cb54:	bl	3100 <malloc@plt>
    cb58:	mov	x23, x0
    cb5c:	cbnz	x0, cb90 <elf_update@@ELFUTILS_1.0+0x3048>
    cb60:	mov	w0, #0x8                   	// #8
    cb64:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    cb68:	mov	w0, w20
    cb6c:	mov	x12, #0x90d0                	// #37072
    cb70:	ldp	x29, x30, [sp]
    cb74:	ldp	x19, x20, [sp, #16]
    cb78:	ldp	x21, x22, [sp, #32]
    cb7c:	ldp	x23, x24, [sp, #48]
    cb80:	ldp	x25, x26, [sp, #64]
    cb84:	ldp	x27, x28, [sp, #80]
    cb88:	add	sp, sp, x12
    cb8c:	ret
    cb90:	adrp	x1, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    cb94:	mov	x2, x24
    cb98:	mov	x26, x0
    cb9c:	mov	w3, #0x1                   	// #1
    cba0:	ldr	x4, [x1, #3296]
    cba4:	ldr	x1, [x28, #88]
    cba8:	blr	x4
    cbac:	b	ca64 <elf_update@@ELFUTILS_1.0+0x2f1c>
    cbb0:	ldr	x0, [x21, #32]
    cbb4:	mov	x1, #0x38                  	// #56
    cbb8:	ldr	x6, [sp, #200]
    cbbc:	madd	x19, x6, x1, x0
    cbc0:	b	cab4 <elf_update@@ELFUTILS_1.0+0x2f6c>
    cbc4:	mov	x25, #0x0                   	// #0
    cbc8:	ldr	w0, [x28, #56]
    cbcc:	add	x26, x28, #0xc8
    cbd0:	str	w0, [sp, #112]
    cbd4:	ldr	x0, [sp, #96]
    cbd8:	lsl	x23, x0, #3
    cbdc:	mov	x0, x23
    cbe0:	bl	3100 <malloc@plt>
    cbe4:	mov	x21, x0
    cbe8:	cbnz	x0, cbf8 <elf_update@@ELFUTILS_1.0+0x30b0>
    cbec:	mov	x0, x25
    cbf0:	bl	3250 <free@plt>
    cbf4:	b	cb14 <elf_update@@ELFUTILS_1.0+0x2fcc>
    cbf8:	mov	x1, x26
    cbfc:	bl	be30 <elf_update@@ELFUTILS_1.0+0x22e8>
    cc00:	add	x0, x23, x21
    cc04:	mov	x1, #0x10d0                	// #4304
    cc08:	str	x0, [sp, #152]
    cc0c:	add	x0, sp, x1
    cc10:	adrp	x27, 23000 <elf_compress_gnu@@ELFUTILS_1.7+0x13474>
    cc14:	str	x21, [sp, #104]
    cc18:	str	x0, [sp, #120]
    cc1c:	add	x0, x27, #0xbd8
    cc20:	str	x0, [sp, #128]
    cc24:	ldr	x0, [sp, #104]
    cc28:	ldr	x27, [x0]
    cc2c:	ldr	x0, [x27, #128]
    cc30:	cbnz	x0, cc60 <elf_update@@ELFUTILS_1.0+0x3118>
    cc34:	ldr	w0, [x27, #156]
    cc38:	tbz	w0, #0, ce0c <elf_update@@ELFUTILS_1.0+0x32c4>
    cc3c:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    cc40:	add	x3, x3, #0xe7e
    cc44:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    cc48:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    cc4c:	add	x3, x3, #0x13
    cc50:	add	x1, x1, #0xc03
    cc54:	add	x0, x0, #0xd70
    cc58:	mov	w2, #0x2c3                 	// #707
    cc5c:	b	c980 <elf_update@@ELFUTILS_1.0+0x2e38>
    cc60:	ldr	x7, [x27, #144]
    cc64:	ldr	w0, [x7, #4]
    cc68:	cmp	w0, #0x8
    cc6c:	b.eq	ce0c <elf_update@@ELFUTILS_1.0+0x32c4>  // b.none
    cc70:	ldr	x0, [x7, #24]
    cc74:	ldr	x23, [x28, #40]
    cc78:	add	x23, x23, x0
    cc7c:	ldr	x0, [x27, #64]
    cc80:	cbz	x0, cea0 <elf_update@@ELFUTILS_1.0+0x3358>
    cc84:	add	x0, sp, #0xc0
    cc88:	mov	x26, x27
    cc8c:	mov	w9, #0x0                   	// #0
    cc90:	str	x0, [sp, #160]
    cc94:	add	x0, sp, #0xd0
    cc98:	str	x0, [sp, #168]
    cc9c:	ldr	x0, [x26, #24]
    cca0:	add	x2, x0, x23
    cca4:	cmp	x2, x19
    cca8:	b.le	cd00 <elf_update@@ELFUTILS_1.0+0x31b8>
    ccac:	cbz	w24, ccb4 <elf_update@@ELFUTILS_1.0+0x316c>
    ccb0:	cbz	x0, cccc <elf_update@@ELFUTILS_1.0+0x3184>
    ccb4:	ldr	w1, [x28, #56]
    ccb8:	ldr	w0, [x27, #156]
    ccbc:	orr	w0, w0, w1
    ccc0:	ldr	w1, [x26, #56]
    ccc4:	orr	w0, w0, w1
    ccc8:	tbz	w0, #0, cd00 <elf_update@@ELFUTILS_1.0+0x31b8>
    cccc:	ldp	x4, x3, [sp, #160]
    ccd0:	sub	x2, x2, x19
    ccd4:	ldr	w0, [x28, #36]
    ccd8:	mov	x1, x19
    ccdc:	str	w9, [sp, #176]
    cce0:	bl	bfb4 <elf_update@@ELFUTILS_1.0+0x246c>
    cce4:	ldr	w9, [sp, #176]
    cce8:	cbz	w0, cd00 <elf_update@@ELFUTILS_1.0+0x31b8>
    ccec:	mov	x0, x25
    ccf0:	bl	3250 <free@plt>
    ccf4:	mov	x0, x21
    ccf8:	bl	3250 <free@plt>
    ccfc:	b	cb3c <elf_update@@ELFUTILS_1.0+0x2ff4>
    cd00:	ldr	x0, [x26, #24]
    cd04:	ldr	w1, [x28, #56]
    cd08:	add	x19, x23, x0
    cd0c:	ldr	w0, [x27, #156]
    cd10:	orr	w0, w0, w1
    cd14:	ldr	w1, [x26, #56]
    cd18:	orr	w0, w0, w1
    cd1c:	tbz	w0, #0, cdec <elf_update@@ELFUTILS_1.0+0x32a4>
    cd20:	ldr	x1, [x26]
    cd24:	cbz	w22, cd7c <elf_update@@ELFUTILS_1.0+0x3234>
    cd28:	ldr	x2, [x26, #16]
    cd2c:	cmp	x2, #0x8, lsl #12
    cd30:	b.ls	cd54 <elf_update@@ELFUTILS_1.0+0x320c>  // b.plast
    cd34:	mov	x0, x2
    cd38:	stp	x2, x1, [sp, #176]
    cd3c:	bl	3100 <malloc@plt>
    cd40:	ldp	x2, x1, [sp, #176]
    cd44:	cbnz	x0, cd58 <elf_update@@ELFUTILS_1.0+0x3210>
    cd48:	mov	w0, #0x8                   	// #8
    cd4c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    cd50:	b	ccec <elf_update@@ELFUTILS_1.0+0x31a4>
    cd54:	ldr	x0, [sp, #120]
    cd58:	str	x0, [sp, #176]
    cd5c:	ldr	w3, [x26, #8]
    cd60:	ldr	x4, [sp, #128]
    cd64:	add	x3, x3, #0x1b
    cd68:	ldr	x4, [x4, x3, lsl #3]
    cd6c:	mov	w3, #0x1                   	// #1
    cd70:	blr	x4
    cd74:	ldr	x0, [sp, #176]
    cd78:	mov	x1, x0
    cd7c:	ldr	w0, [x28, #36]
    cd80:	mov	x3, x19
    cd84:	ldr	x2, [x26, #16]
    cd88:	str	x1, [sp, #176]
    cd8c:	bl	bf1c <elf_update@@ELFUTILS_1.0+0x23d4>
    cd90:	ldr	x2, [x26, #16]
    cd94:	ldr	x1, [sp, #176]
    cd98:	cmp	x2, x0
    cd9c:	ldr	x0, [x26]
    cda0:	b.eq	cdcc <elf_update@@ELFUTILS_1.0+0x3284>  // b.none
    cda4:	cmp	x0, x1
    cda8:	b.eq	cdc4 <elf_update@@ELFUTILS_1.0+0x327c>  // b.none
    cdac:	mov	x0, #0x10d0                	// #4304
    cdb0:	add	x0, sp, x0
    cdb4:	cmp	x1, x0
    cdb8:	b.eq	cdc4 <elf_update@@ELFUTILS_1.0+0x327c>  // b.none
    cdbc:	mov	x0, x1
    cdc0:	bl	3250 <free@plt>
    cdc4:	mov	w0, #0x14                  	// #20
    cdc8:	b	cd4c <elf_update@@ELFUTILS_1.0+0x3204>
    cdcc:	cmp	x0, x1
    cdd0:	b.eq	cde8 <elf_update@@ELFUTILS_1.0+0x32a0>  // b.none
    cdd4:	ldr	x0, [sp, #120]
    cdd8:	cmp	x1, x0
    cddc:	b.eq	cde8 <elf_update@@ELFUTILS_1.0+0x32a0>  // b.none
    cde0:	mov	x0, x1
    cde4:	bl	3250 <free@plt>
    cde8:	mov	w9, #0x1                   	// #1
    cdec:	ldr	w0, [x26, #56]
    cdf0:	ldr	x6, [x26, #16]
    cdf4:	and	w0, w0, #0xfffffffe
    cdf8:	str	w0, [x26, #56]
    cdfc:	ldr	x26, [x26, #48]
    ce00:	add	x19, x19, x6
    ce04:	cbnz	x26, cc9c <elf_update@@ELFUTILS_1.0+0x3154>
    ce08:	mov	w24, w9
    ce0c:	cbz	w22, cee4 <elf_update@@ELFUTILS_1.0+0x339c>
    ce10:	ldr	x1, [sp, #128]
    ce14:	mov	w3, #0x1                   	// #1
    ce18:	ldr	x0, [x27, #128]
    ce1c:	mov	x2, #0x40                  	// #64
    ce20:	ldr	x4, [x1, #288]
    ce24:	ldr	x1, [x27, #144]
    ce28:	add	x0, x20, x0, lsl #6
    ce2c:	blr	x4
    ce30:	ldr	w0, [x27, #152]
    ce34:	ldr	w1, [sp, #112]
    ce38:	orr	w1, w1, w0
    ce3c:	and	w0, w0, #0xfffffffe
    ce40:	str	w0, [x27, #152]
    ce44:	ldr	x0, [sp, #104]
    ce48:	str	w1, [sp, #112]
    ce4c:	add	x0, x0, #0x8
    ce50:	str	x0, [sp, #104]
    ce54:	ldr	x0, [sp, #152]
    ce58:	ldr	x1, [sp, #104]
    ce5c:	cmp	x0, x1
    ce60:	b.ne	cc24 <elf_update@@ELFUTILS_1.0+0x30dc>  // b.any
    ce64:	ldp	x0, x1, [sp, #136]
    ce68:	add	x22, x0, x1
    ce6c:	ldr	w0, [x28, #56]
    ce70:	tbnz	w0, #0, cf24 <elf_update@@ELFUTILS_1.0+0x33dc>
    ce74:	ldr	x0, [sp, #112]
    ce78:	tbnz	w0, #0, cf4c <elf_update@@ELFUTILS_1.0+0x3404>
    ce7c:	mov	x0, x25
    ce80:	bl	3250 <free@plt>
    ce84:	mov	x0, x21
    ce88:	bl	3250 <free@plt>
    ce8c:	ldr	w0, [x28, #56]
    ce90:	mov	w20, #0x0                   	// #0
    ce94:	and	w0, w0, #0xfffffffe
    ce98:	str	w0, [x28, #56]
    ce9c:	b	cb68 <elf_update@@ELFUTILS_1.0+0x3020>
    cea0:	cmp	w24, #0x0
    cea4:	ccmp	x19, x23, #0x0, ne  // ne = any
    cea8:	b.lt	cebc <elf_update@@ELFUTILS_1.0+0x3374>  // b.tstop
    ceac:	ldr	x6, [x7, #32]
    ceb0:	mov	w24, #0x0                   	// #0
    ceb4:	add	x19, x23, x6
    ceb8:	b	ce0c <elf_update@@ELFUTILS_1.0+0x32c4>
    cebc:	ldr	w0, [x28, #36]
    cec0:	add	x4, sp, #0xc0
    cec4:	add	x3, sp, #0xd0
    cec8:	sub	x2, x23, x19
    cecc:	mov	x1, x19
    ced0:	str	x7, [sp, #160]
    ced4:	bl	bfb4 <elf_update@@ELFUTILS_1.0+0x246c>
    ced8:	ldr	x7, [sp, #160]
    cedc:	cbz	w0, ceac <elf_update@@ELFUTILS_1.0+0x3364>
    cee0:	b	ccec <elf_update@@ELFUTILS_1.0+0x31a4>
    cee4:	ldr	x0, [x28, #80]
    cee8:	cbz	x0, cef4 <elf_update@@ELFUTILS_1.0+0x33ac>
    ceec:	ldr	w0, [x28, #56]
    cef0:	tbz	w0, #0, ce30 <elf_update@@ELFUTILS_1.0+0x32e8>
    cef4:	ldr	x0, [x27, #128]
    cef8:	ldr	x1, [x27, #144]
    cefc:	add	x0, x20, x0, lsl #6
    cf00:	ldp	x2, x3, [x1]
    cf04:	stp	x2, x3, [x0]
    cf08:	ldp	x2, x3, [x1, #16]
    cf0c:	stp	x2, x3, [x0, #16]
    cf10:	ldp	x2, x3, [x1, #32]
    cf14:	stp	x2, x3, [x0, #32]
    cf18:	ldp	x2, x3, [x1, #48]
    cf1c:	stp	x2, x3, [x0, #48]
    cf20:	b	ce30 <elf_update@@ELFUTILS_1.0+0x32e8>
    cf24:	cmp	x19, x22
    cf28:	b.ge	ce74 <elf_update@@ELFUTILS_1.0+0x332c>  // b.tcont
    cf2c:	ldr	w0, [x28, #36]
    cf30:	add	x4, sp, #0xc0
    cf34:	add	x3, sp, #0xd0
    cf38:	sub	x2, x22, x19
    cf3c:	mov	x1, x19
    cf40:	bl	bfb4 <elf_update@@ELFUTILS_1.0+0x246c>
    cf44:	cbz	w0, ce74 <elf_update@@ELFUTILS_1.0+0x332c>
    cf48:	b	ccec <elf_update@@ELFUTILS_1.0+0x31a4>
    cf4c:	ldr	x0, [sp, #96]
    cf50:	mov	x3, x22
    cf54:	mov	x1, x20
    cf58:	lsl	x19, x0, #6
    cf5c:	ldr	w0, [x28, #36]
    cf60:	mov	x2, x19
    cf64:	bl	bf1c <elf_update@@ELFUTILS_1.0+0x23d4>
    cf68:	cmp	x19, x0
    cf6c:	b.eq	ce7c <elf_update@@ELFUTILS_1.0+0x3334>  // b.none
    cf70:	b	cdc4 <elf_update@@ELFUTILS_1.0+0x327c>

000000000000cf74 <gelf_getsym@@ELFUTILS_1.0>:
    cf74:	mov	x3, x0
    cf78:	cbz	x0, d03c <gelf_getsym@@ELFUTILS_1.0+0xc8>
    cf7c:	stp	x29, x30, [sp, #-16]!
    cf80:	mov	x0, x2
    cf84:	mov	x29, sp
    cf88:	ldr	w2, [x3, #8]
    cf8c:	cmp	w2, #0xb
    cf90:	b.eq	cfa8 <gelf_getsym@@ELFUTILS_1.0+0x34>  // b.none
    cf94:	mov	w0, #0x4                   	// #4
    cf98:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    cf9c:	mov	x0, #0x0                   	// #0
    cfa0:	ldp	x29, x30, [sp], #16
    cfa4:	ret
    cfa8:	ldr	x4, [x3, #40]
    cfac:	mov	w5, w1
    cfb0:	ldr	x2, [x3, #16]
    cfb4:	ldr	x4, [x4, #136]
    cfb8:	ldr	w4, [x4, #32]
    cfbc:	cmp	w4, #0x1
    cfc0:	b.ne	d010 <gelf_getsym@@ELFUTILS_1.0+0x9c>  // b.any
    cfc4:	cmp	x5, x2, lsr #4
    cfc8:	b.cc	cfd4 <gelf_getsym@@ELFUTILS_1.0+0x60>  // b.lo, b.ul, b.last
    cfcc:	mov	w0, #0x16                  	// #22
    cfd0:	b	cf98 <gelf_getsym@@ELFUTILS_1.0+0x24>
    cfd4:	ldr	x2, [x3]
    cfd8:	sbfiz	x4, x1, #4, #32
    cfdc:	add	x1, x2, w1, sxtw #4
    cfe0:	ldr	w2, [x2, x4]
    cfe4:	str	w2, [x0]
    cfe8:	ldrb	w2, [x1, #12]
    cfec:	strb	w2, [x0, #4]
    cff0:	ldrb	w2, [x1, #13]
    cff4:	strb	w2, [x0, #5]
    cff8:	ldrh	w2, [x1, #14]
    cffc:	strh	w2, [x0, #6]
    d000:	ldp	w2, w1, [x1, #4]
    d004:	str	x2, [x0, #8]
    d008:	str	x1, [x0, #16]
    d00c:	b	cfa0 <gelf_getsym@@ELFUTILS_1.0+0x2c>
    d010:	mov	x4, #0x18                  	// #24
    d014:	udiv	x2, x2, x4
    d018:	cmp	x2, x5
    d01c:	b.ls	cfcc <gelf_getsym@@ELFUTILS_1.0+0x58>  // b.plast
    d020:	ldr	x2, [x3]
    d024:	smull	x1, w1, w4
    d028:	add	x1, x2, x1
    d02c:	ldp	x2, x3, [x1]
    d030:	stp	x2, x3, [x0]
    d034:	ldr	x1, [x1, #16]
    d038:	b	d008 <gelf_getsym@@ELFUTILS_1.0+0x94>
    d03c:	mov	x0, #0x0                   	// #0
    d040:	ret

000000000000d044 <gelf_update_sym@@ELFUTILS_1.0>:
    d044:	cbz	x0, d138 <gelf_update_sym@@ELFUTILS_1.0+0xf4>
    d048:	stp	x29, x30, [sp, #-16]!
    d04c:	mov	x29, sp
    d050:	ldr	w3, [x0, #8]
    d054:	cmp	w3, #0xb
    d058:	b.eq	d070 <gelf_update_sym@@ELFUTILS_1.0+0x2c>  // b.none
    d05c:	mov	w0, #0x1f                  	// #31
    d060:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d064:	mov	w0, #0x0                   	// #0
    d068:	ldp	x29, x30, [sp], #16
    d06c:	ret
    d070:	ldr	x3, [x0, #40]
    d074:	ldr	x4, [x3, #136]
    d078:	ldr	w4, [x4, #32]
    d07c:	cmp	w4, #0x1
    d080:	b.ne	d104 <gelf_update_sym@@ELFUTILS_1.0+0xc0>  // b.any
    d084:	ldr	x5, [x2, #8]
    d088:	mov	x6, #0xffffffff            	// #4294967295
    d08c:	cmp	x5, x6
    d090:	b.hi	d0a0 <gelf_update_sym@@ELFUTILS_1.0+0x5c>  // b.pmore
    d094:	ldr	x4, [x2, #16]
    d098:	cmp	x4, x6
    d09c:	b.ls	d0a8 <gelf_update_sym@@ELFUTILS_1.0+0x64>  // b.plast
    d0a0:	mov	w0, #0x21                  	// #33
    d0a4:	b	d060 <gelf_update_sym@@ELFUTILS_1.0+0x1c>
    d0a8:	ldr	x7, [x0, #16]
    d0ac:	mov	w6, w1
    d0b0:	cmp	x6, x7, lsr #4
    d0b4:	b.cc	d0c0 <gelf_update_sym@@ELFUTILS_1.0+0x7c>  // b.lo, b.ul, b.last
    d0b8:	mov	w0, #0x16                  	// #22
    d0bc:	b	d060 <gelf_update_sym@@ELFUTILS_1.0+0x1c>
    d0c0:	ldr	x0, [x0]
    d0c4:	sbfiz	x6, x1, #4, #32
    d0c8:	ldr	w7, [x2]
    d0cc:	add	x1, x0, w1, sxtw #4
    d0d0:	str	w7, [x0, x6]
    d0d4:	stp	w5, w4, [x1, #4]
    d0d8:	ldrb	w0, [x2, #4]
    d0dc:	strb	w0, [x1, #12]
    d0e0:	ldrb	w0, [x2, #5]
    d0e4:	strb	w0, [x1, #13]
    d0e8:	ldrh	w0, [x2, #6]
    d0ec:	strh	w0, [x1, #14]
    d0f0:	ldr	w0, [x3, #156]
    d0f4:	orr	w0, w0, #0x1
    d0f8:	str	w0, [x3, #156]
    d0fc:	mov	w0, #0x1                   	// #1
    d100:	b	d068 <gelf_update_sym@@ELFUTILS_1.0+0x24>
    d104:	ldr	x4, [x0, #16]
    d108:	mov	x5, #0x18                  	// #24
    d10c:	udiv	x4, x4, x5
    d110:	cmp	x4, w1, uxtw
    d114:	b.ls	d0b8 <gelf_update_sym@@ELFUTILS_1.0+0x74>  // b.plast
    d118:	ldr	x0, [x0]
    d11c:	smull	x1, w1, w5
    d120:	ldp	x4, x5, [x2]
    d124:	add	x1, x0, x1
    d128:	stp	x4, x5, [x1]
    d12c:	ldr	x0, [x2, #16]
    d130:	str	x0, [x1, #16]
    d134:	b	d0f0 <gelf_update_sym@@ELFUTILS_1.0+0xac>
    d138:	mov	w0, #0x0                   	// #0
    d13c:	ret

000000000000d140 <gelf_getversym@@ELFUTILS_1.0>:
    d140:	cbz	x0, d198 <gelf_getversym@@ELFUTILS_1.0+0x58>
    d144:	stp	x29, x30, [sp, #-16]!
    d148:	mov	x29, sp
    d14c:	ldr	w3, [x0, #8]
    d150:	cmp	w3, #0x4
    d154:	b.eq	d16c <gelf_getversym@@ELFUTILS_1.0+0x2c>  // b.none
    d158:	mov	w0, #0x4                   	// #4
    d15c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d160:	mov	x0, #0x0                   	// #0
    d164:	ldp	x29, x30, [sp], #16
    d168:	ret
    d16c:	ldr	x4, [x0, #16]
    d170:	mov	w3, w1
    d174:	cmp	x3, x4, lsr #1
    d178:	b.cc	d184 <gelf_getversym@@ELFUTILS_1.0+0x44>  // b.lo, b.ul, b.last
    d17c:	mov	w0, #0x16                  	// #22
    d180:	b	d15c <gelf_getversym@@ELFUTILS_1.0+0x1c>
    d184:	ldr	x0, [x0]
    d188:	ldrh	w0, [x0, w1, sxtw #1]
    d18c:	strh	w0, [x2]
    d190:	mov	x0, x2
    d194:	b	d164 <gelf_getversym@@ELFUTILS_1.0+0x24>
    d198:	ret

000000000000d19c <gelf_getverneed@@ELFUTILS_1.0>:
    d19c:	cbz	x0, d208 <gelf_getverneed@@ELFUTILS_1.0+0x6c>
    d1a0:	stp	x29, x30, [sp, #-16]!
    d1a4:	mov	x29, sp
    d1a8:	ldr	w3, [x0, #8]
    d1ac:	cmp	w3, #0x11
    d1b0:	b.eq	d1c8 <gelf_getverneed@@ELFUTILS_1.0+0x2c>  // b.none
    d1b4:	mov	w0, #0x4                   	// #4
    d1b8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d1bc:	mov	x0, #0x0                   	// #0
    d1c0:	ldp	x29, x30, [sp], #16
    d1c4:	ret
    d1c8:	tbnz	w1, #31, d1e8 <gelf_getverneed@@ELFUTILS_1.0+0x4c>
    d1cc:	ldr	x4, [x0, #16]
    d1d0:	sxtw	x3, w1
    d1d4:	add	x5, x3, #0x10
    d1d8:	cmp	x5, x4
    d1dc:	b.hi	d1e8 <gelf_getverneed@@ELFUTILS_1.0+0x4c>  // b.pmore
    d1e0:	tst	x1, #0xf
    d1e4:	b.eq	d1f0 <gelf_getverneed@@ELFUTILS_1.0+0x54>  // b.none
    d1e8:	mov	w0, #0x1d                  	// #29
    d1ec:	b	d1b8 <gelf_getverneed@@ELFUTILS_1.0+0x1c>
    d1f0:	ldr	x0, [x0]
    d1f4:	add	x0, x0, x3
    d1f8:	ldp	x0, x1, [x0]
    d1fc:	stp	x0, x1, [x2]
    d200:	mov	x0, x2
    d204:	b	d1c0 <gelf_getverneed@@ELFUTILS_1.0+0x24>
    d208:	ret

000000000000d20c <gelf_getvernaux@@ELFUTILS_1.0>:
    d20c:	cbz	x0, d278 <gelf_getvernaux@@ELFUTILS_1.0+0x6c>
    d210:	stp	x29, x30, [sp, #-16]!
    d214:	mov	x29, sp
    d218:	ldr	w3, [x0, #8]
    d21c:	cmp	w3, #0x11
    d220:	b.eq	d238 <gelf_getvernaux@@ELFUTILS_1.0+0x2c>  // b.none
    d224:	mov	w0, #0x4                   	// #4
    d228:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d22c:	mov	x0, #0x0                   	// #0
    d230:	ldp	x29, x30, [sp], #16
    d234:	ret
    d238:	tbnz	w1, #31, d258 <gelf_getvernaux@@ELFUTILS_1.0+0x4c>
    d23c:	ldr	x4, [x0, #16]
    d240:	sxtw	x3, w1
    d244:	add	x5, x3, #0x10
    d248:	cmp	x5, x4
    d24c:	b.hi	d258 <gelf_getvernaux@@ELFUTILS_1.0+0x4c>  // b.pmore
    d250:	tst	x1, #0xf
    d254:	b.eq	d260 <gelf_getvernaux@@ELFUTILS_1.0+0x54>  // b.none
    d258:	mov	w0, #0x1d                  	// #29
    d25c:	b	d228 <gelf_getvernaux@@ELFUTILS_1.0+0x1c>
    d260:	ldr	x0, [x0]
    d264:	add	x0, x0, x3
    d268:	ldp	x0, x1, [x0]
    d26c:	stp	x0, x1, [x2]
    d270:	mov	x0, x2
    d274:	b	d230 <gelf_getvernaux@@ELFUTILS_1.0+0x24>
    d278:	ret

000000000000d27c <gelf_getverdef@@ELFUTILS_1.0>:
    d27c:	cbz	x0, d2f0 <gelf_getverdef@@ELFUTILS_1.0+0x74>
    d280:	stp	x29, x30, [sp, #-16]!
    d284:	mov	x29, sp
    d288:	ldr	w3, [x0, #8]
    d28c:	cmp	w3, #0xf
    d290:	b.eq	d2a8 <gelf_getverdef@@ELFUTILS_1.0+0x2c>  // b.none
    d294:	mov	w0, #0x4                   	// #4
    d298:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d29c:	mov	x0, #0x0                   	// #0
    d2a0:	ldp	x29, x30, [sp], #16
    d2a4:	ret
    d2a8:	tbnz	w1, #31, d2c8 <gelf_getverdef@@ELFUTILS_1.0+0x4c>
    d2ac:	ldr	x4, [x0, #16]
    d2b0:	sxtw	x3, w1
    d2b4:	add	x5, x3, #0x14
    d2b8:	cmp	x5, x4
    d2bc:	b.hi	d2c8 <gelf_getverdef@@ELFUTILS_1.0+0x4c>  // b.pmore
    d2c0:	tst	x1, #0x3
    d2c4:	b.eq	d2d0 <gelf_getverdef@@ELFUTILS_1.0+0x54>  // b.none
    d2c8:	mov	w0, #0x1d                  	// #29
    d2cc:	b	d298 <gelf_getverdef@@ELFUTILS_1.0+0x1c>
    d2d0:	ldr	x0, [x0]
    d2d4:	add	x0, x0, x3
    d2d8:	ldp	x4, x5, [x0]
    d2dc:	stp	x4, x5, [x2]
    d2e0:	ldr	w0, [x0, #16]
    d2e4:	str	w0, [x2, #16]
    d2e8:	mov	x0, x2
    d2ec:	b	d2a0 <gelf_getverdef@@ELFUTILS_1.0+0x24>
    d2f0:	ret

000000000000d2f4 <gelf_getverdaux@@ELFUTILS_1.0>:
    d2f4:	cbz	x0, d35c <gelf_getverdaux@@ELFUTILS_1.0+0x68>
    d2f8:	stp	x29, x30, [sp, #-16]!
    d2fc:	mov	x29, sp
    d300:	ldr	w3, [x0, #8]
    d304:	cmp	w3, #0xf
    d308:	b.eq	d320 <gelf_getverdaux@@ELFUTILS_1.0+0x2c>  // b.none
    d30c:	mov	w0, #0x4                   	// #4
    d310:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d314:	mov	x0, #0x0                   	// #0
    d318:	ldp	x29, x30, [sp], #16
    d31c:	ret
    d320:	tbnz	w1, #31, d340 <gelf_getverdaux@@ELFUTILS_1.0+0x4c>
    d324:	ldr	x4, [x0, #16]
    d328:	sxtw	x3, w1
    d32c:	add	x5, x3, #0x8
    d330:	cmp	x5, x4
    d334:	b.hi	d340 <gelf_getverdaux@@ELFUTILS_1.0+0x4c>  // b.pmore
    d338:	tst	x1, #0x3
    d33c:	b.eq	d348 <gelf_getverdaux@@ELFUTILS_1.0+0x54>  // b.none
    d340:	mov	w0, #0x1d                  	// #29
    d344:	b	d310 <gelf_getverdaux@@ELFUTILS_1.0+0x1c>
    d348:	ldr	x0, [x0]
    d34c:	ldr	x0, [x0, x3]
    d350:	str	x0, [x2]
    d354:	mov	x0, x2
    d358:	b	d318 <gelf_getverdaux@@ELFUTILS_1.0+0x24>
    d35c:	ret

000000000000d360 <gelf_getrel@@ELFUTILS_1.0>:
    d360:	mov	x3, x0
    d364:	cbz	x0, d408 <gelf_getrel@@ELFUTILS_1.0+0xa8>
    d368:	stp	x29, x30, [sp, #-16]!
    d36c:	mov	x0, x2
    d370:	mov	x29, sp
    d374:	ldr	w2, [x3, #8]
    d378:	cmp	w2, #0x8
    d37c:	b.eq	d394 <gelf_getrel@@ELFUTILS_1.0+0x34>  // b.none
    d380:	mov	w0, #0x4                   	// #4
    d384:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d388:	mov	x0, #0x0                   	// #0
    d38c:	ldp	x29, x30, [sp], #16
    d390:	ret
    d394:	ldr	x5, [x3, #40]
    d398:	mov	w2, w1
    d39c:	ldr	x4, [x3, #16]
    d3a0:	ldr	x5, [x5, #136]
    d3a4:	ldr	w5, [x5, #32]
    d3a8:	cmp	w5, #0x1
    d3ac:	b.ne	d3ec <gelf_getrel@@ELFUTILS_1.0+0x8c>  // b.any
    d3b0:	cmp	x2, x4, lsr #3
    d3b4:	b.cc	d3c0 <gelf_getrel@@ELFUTILS_1.0+0x60>  // b.lo, b.ul, b.last
    d3b8:	mov	w0, #0x16                  	// #22
    d3bc:	b	d384 <gelf_getrel@@ELFUTILS_1.0+0x24>
    d3c0:	ldr	x2, [x3]
    d3c4:	sbfiz	x4, x1, #3, #32
    d3c8:	add	x1, x2, w1, sxtw #3
    d3cc:	ldr	w2, [x2, x4]
    d3d0:	ldr	w1, [x1, #4]
    d3d4:	str	x2, [x0]
    d3d8:	lsr	w2, w1, #8
    d3dc:	and	x1, x1, #0xff
    d3e0:	add	x1, x1, x2, lsl #32
    d3e4:	str	x1, [x0, #8]
    d3e8:	b	d38c <gelf_getrel@@ELFUTILS_1.0+0x2c>
    d3ec:	cmp	x2, x4, lsr #4
    d3f0:	b.cs	d3b8 <gelf_getrel@@ELFUTILS_1.0+0x58>  // b.hs, b.nlast
    d3f4:	ldr	x2, [x3]
    d3f8:	add	x1, x2, w1, sxtw #4
    d3fc:	ldp	x2, x3, [x1]
    d400:	stp	x2, x3, [x0]
    d404:	b	d38c <gelf_getrel@@ELFUTILS_1.0+0x2c>
    d408:	mov	x0, #0x0                   	// #0
    d40c:	ret

000000000000d410 <gelf_getrela@@ELFUTILS_1.0>:
    d410:	cbz	x0, d4d4 <gelf_getrela@@ELFUTILS_1.0+0xc4>
    d414:	stp	x29, x30, [sp, #-16]!
    d418:	mov	x29, sp
    d41c:	ldr	w3, [x0, #8]
    d420:	cmp	w3, #0x7
    d424:	b.eq	d43c <gelf_getrela@@ELFUTILS_1.0+0x2c>  // b.none
    d428:	mov	w0, #0x4                   	// #4
    d42c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d430:	mov	x0, #0x0                   	// #0
    d434:	ldp	x29, x30, [sp], #16
    d438:	ret
    d43c:	ldr	x4, [x0, #40]
    d440:	mov	w5, w1
    d444:	ldr	x3, [x0, #16]
    d448:	ldr	x4, [x4, #136]
    d44c:	ldr	w4, [x4, #32]
    d450:	cmp	w4, #0x1
    d454:	b.ne	d4a8 <gelf_getrela@@ELFUTILS_1.0+0x98>  // b.any
    d458:	mov	x4, #0xc                   	// #12
    d45c:	udiv	x3, x3, x4
    d460:	cmp	x3, x5
    d464:	b.hi	d470 <gelf_getrela@@ELFUTILS_1.0+0x60>  // b.pmore
    d468:	mov	w0, #0x16                  	// #22
    d46c:	b	d42c <gelf_getrela@@ELFUTILS_1.0+0x1c>
    d470:	ldr	x0, [x0]
    d474:	smull	x1, w1, w4
    d478:	add	x3, x0, x1
    d47c:	ldr	w0, [x0, x1]
    d480:	str	x0, [x2]
    d484:	ldr	w0, [x3, #4]
    d488:	lsr	w1, w0, #8
    d48c:	and	x0, x0, #0xff
    d490:	add	x0, x0, x1, lsl #32
    d494:	str	x0, [x2, #8]
    d498:	ldrsw	x0, [x3, #8]
    d49c:	str	x0, [x2, #16]
    d4a0:	mov	x0, x2
    d4a4:	b	d434 <gelf_getrela@@ELFUTILS_1.0+0x24>
    d4a8:	mov	x4, #0x18                  	// #24
    d4ac:	udiv	x3, x3, x4
    d4b0:	cmp	x3, x5
    d4b4:	b.ls	d468 <gelf_getrela@@ELFUTILS_1.0+0x58>  // b.plast
    d4b8:	ldr	x0, [x0]
    d4bc:	smull	x1, w1, w4
    d4c0:	add	x1, x0, x1
    d4c4:	ldp	x4, x5, [x1]
    d4c8:	stp	x4, x5, [x2]
    d4cc:	ldr	x0, [x1, #16]
    d4d0:	b	d49c <gelf_getrela@@ELFUTILS_1.0+0x8c>
    d4d4:	ret

000000000000d4d8 <gelf_update_rel@@ELFUTILS_1.0>:
    d4d8:	cbz	x0, d5b8 <gelf_update_rel@@ELFUTILS_1.0+0xe0>
    d4dc:	stp	x29, x30, [sp, #-16]!
    d4e0:	mov	x29, sp
    d4e4:	ldr	w3, [x0, #8]
    d4e8:	cmp	w3, #0x8
    d4ec:	b.eq	d504 <gelf_update_rel@@ELFUTILS_1.0+0x2c>  // b.none
    d4f0:	mov	w0, #0x1f                  	// #31
    d4f4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d4f8:	mov	w0, #0x0                   	// #0
    d4fc:	ldp	x29, x30, [sp], #16
    d500:	ret
    d504:	ldr	x3, [x0, #40]
    d508:	ldr	x4, [x3, #136]
    d50c:	ldr	w4, [x4, #32]
    d510:	cmp	w4, #0x1
    d514:	b.ne	d594 <gelf_update_rel@@ELFUTILS_1.0+0xbc>  // b.any
    d518:	ldr	x5, [x2]
    d51c:	mov	x4, #0xffffffff            	// #4294967295
    d520:	cmp	x5, x4
    d524:	b.hi	d544 <gelf_update_rel@@ELFUTILS_1.0+0x6c>  // b.pmore
    d528:	ldr	x2, [x2, #8]
    d52c:	mov	x6, #0xffffff              	// #16777215
    d530:	lsr	x4, x2, #32
    d534:	cmp	x6, x2, lsr #32
    d538:	b.cc	d544 <gelf_update_rel@@ELFUTILS_1.0+0x6c>  // b.lo, b.ul, b.last
    d53c:	tst	x2, #0xffffff00
    d540:	b.eq	d54c <gelf_update_rel@@ELFUTILS_1.0+0x74>  // b.none
    d544:	mov	w0, #0x21                  	// #33
    d548:	b	d4f4 <gelf_update_rel@@ELFUTILS_1.0+0x1c>
    d54c:	ldr	x7, [x0, #16]
    d550:	mov	w6, w1
    d554:	cmp	x6, x7, lsr #3
    d558:	b.cc	d564 <gelf_update_rel@@ELFUTILS_1.0+0x8c>  // b.lo, b.ul, b.last
    d55c:	mov	w0, #0x16                  	// #22
    d560:	b	d4f4 <gelf_update_rel@@ELFUTILS_1.0+0x1c>
    d564:	ldr	x0, [x0]
    d568:	sbfiz	x6, x1, #3, #32
    d56c:	and	w2, w2, #0xff
    d570:	add	w2, w2, w4, lsl #8
    d574:	add	x1, x0, w1, sxtw #3
    d578:	str	w5, [x0, x6]
    d57c:	str	w2, [x1, #4]
    d580:	ldr	w0, [x3, #156]
    d584:	orr	w0, w0, #0x1
    d588:	str	w0, [x3, #156]
    d58c:	mov	w0, #0x1                   	// #1
    d590:	b	d4fc <gelf_update_rel@@ELFUTILS_1.0+0x24>
    d594:	ldr	x5, [x0, #16]
    d598:	mov	w4, w1
    d59c:	cmp	x4, x5, lsr #4
    d5a0:	b.cs	d55c <gelf_update_rel@@ELFUTILS_1.0+0x84>  // b.hs, b.nlast
    d5a4:	ldr	x0, [x0]
    d5a8:	ldp	x4, x5, [x2]
    d5ac:	add	x1, x0, w1, sxtw #4
    d5b0:	stp	x4, x5, [x1]
    d5b4:	b	d580 <gelf_update_rel@@ELFUTILS_1.0+0xa8>
    d5b8:	mov	w0, #0x0                   	// #0
    d5bc:	ret

000000000000d5c0 <gelf_update_rela@@ELFUTILS_1.0>:
    d5c0:	cbz	x0, d6c8 <gelf_update_rela@@ELFUTILS_1.0+0x108>
    d5c4:	stp	x29, x30, [sp, #-16]!
    d5c8:	mov	x29, sp
    d5cc:	ldr	w3, [x0, #8]
    d5d0:	cmp	w3, #0x7
    d5d4:	b.eq	d5ec <gelf_update_rela@@ELFUTILS_1.0+0x2c>  // b.none
    d5d8:	mov	w0, #0x1f                  	// #31
    d5dc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d5e0:	mov	w0, #0x0                   	// #0
    d5e4:	ldp	x29, x30, [sp], #16
    d5e8:	ret
    d5ec:	ldr	x4, [x0, #40]
    d5f0:	ldr	x3, [x4, #136]
    d5f4:	ldr	w3, [x3, #32]
    d5f8:	cmp	w3, #0x1
    d5fc:	b.ne	d694 <gelf_update_rela@@ELFUTILS_1.0+0xd4>  // b.any
    d600:	ldr	x7, [x2]
    d604:	mov	x8, #0xffffffff            	// #4294967295
    d608:	cmp	x7, x8
    d60c:	b.hi	d640 <gelf_update_rela@@ELFUTILS_1.0+0x80>  // b.pmore
    d610:	ldr	x3, [x2, #8]
    d614:	mov	x6, #0xffffff              	// #16777215
    d618:	lsr	x5, x3, #32
    d61c:	cmp	x6, x3, lsr #32
    d620:	b.cc	d640 <gelf_update_rela@@ELFUTILS_1.0+0x80>  // b.lo, b.ul, b.last
    d624:	tst	x3, #0xffffff00
    d628:	b.ne	d640 <gelf_update_rela@@ELFUTILS_1.0+0x80>  // b.any
    d62c:	ldr	x6, [x2, #16]
    d630:	mov	x2, #0x80000000            	// #2147483648
    d634:	add	x2, x6, x2
    d638:	cmp	x2, x8
    d63c:	b.ls	d648 <gelf_update_rela@@ELFUTILS_1.0+0x88>  // b.plast
    d640:	mov	w0, #0x21                  	// #33
    d644:	b	d5dc <gelf_update_rela@@ELFUTILS_1.0+0x1c>
    d648:	ldr	x2, [x0, #16]
    d64c:	mov	x8, #0xc                   	// #12
    d650:	udiv	x2, x2, x8
    d654:	cmp	x2, w1, uxtw
    d658:	b.hi	d664 <gelf_update_rela@@ELFUTILS_1.0+0xa4>  // b.pmore
    d65c:	mov	w0, #0x16                  	// #22
    d660:	b	d5dc <gelf_update_rela@@ELFUTILS_1.0+0x1c>
    d664:	ldr	x2, [x0]
    d668:	smull	x1, w1, w8
    d66c:	and	w3, w3, #0xff
    d670:	add	x0, x2, x1
    d674:	add	w3, w3, w5, lsl #8
    d678:	str	w7, [x2, x1]
    d67c:	stp	w3, w6, [x0, #4]
    d680:	ldr	w0, [x4, #156]
    d684:	orr	w0, w0, #0x1
    d688:	str	w0, [x4, #156]
    d68c:	mov	w0, #0x1                   	// #1
    d690:	b	d5e4 <gelf_update_rela@@ELFUTILS_1.0+0x24>
    d694:	ldr	x3, [x0, #16]
    d698:	mov	x5, #0x18                  	// #24
    d69c:	udiv	x3, x3, x5
    d6a0:	cmp	x3, w1, uxtw
    d6a4:	b.ls	d65c <gelf_update_rela@@ELFUTILS_1.0+0x9c>  // b.plast
    d6a8:	ldr	x0, [x0]
    d6ac:	smull	x1, w1, w5
    d6b0:	ldp	x6, x7, [x2]
    d6b4:	add	x1, x0, x1
    d6b8:	stp	x6, x7, [x1]
    d6bc:	ldr	x0, [x2, #16]
    d6c0:	str	x0, [x1, #16]
    d6c4:	b	d680 <gelf_update_rela@@ELFUTILS_1.0+0xc0>
    d6c8:	mov	w0, #0x0                   	// #0
    d6cc:	ret

000000000000d6d0 <gelf_getdyn@@ELFUTILS_1.0>:
    d6d0:	mov	x3, x0
    d6d4:	cbz	x0, d768 <gelf_getdyn@@ELFUTILS_1.0+0x98>
    d6d8:	stp	x29, x30, [sp, #-16]!
    d6dc:	mov	x0, x2
    d6e0:	mov	x29, sp
    d6e4:	ldr	w2, [x3, #8]
    d6e8:	cmp	w2, #0x2
    d6ec:	b.eq	d704 <gelf_getdyn@@ELFUTILS_1.0+0x34>  // b.none
    d6f0:	mov	w0, #0x4                   	// #4
    d6f4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d6f8:	mov	x0, #0x0                   	// #0
    d6fc:	ldp	x29, x30, [sp], #16
    d700:	ret
    d704:	ldr	x5, [x3, #40]
    d708:	mov	w2, w1
    d70c:	ldr	x4, [x3, #16]
    d710:	ldr	x5, [x5, #136]
    d714:	ldr	w5, [x5, #32]
    d718:	cmp	w5, #0x1
    d71c:	b.ne	d74c <gelf_getdyn@@ELFUTILS_1.0+0x7c>  // b.any
    d720:	cmp	x2, x4, lsr #3
    d724:	b.cc	d730 <gelf_getdyn@@ELFUTILS_1.0+0x60>  // b.lo, b.ul, b.last
    d728:	mov	w0, #0x16                  	// #22
    d72c:	b	d6f4 <gelf_getdyn@@ELFUTILS_1.0+0x24>
    d730:	ldr	x2, [x3]
    d734:	sbfiz	x4, x1, #3, #32
    d738:	add	x1, x2, w1, sxtw #3
    d73c:	ldrsw	x2, [x2, x4]
    d740:	ldr	w1, [x1, #4]
    d744:	stp	x2, x1, [x0]
    d748:	b	d6fc <gelf_getdyn@@ELFUTILS_1.0+0x2c>
    d74c:	cmp	x2, x4, lsr #4
    d750:	b.cs	d728 <gelf_getdyn@@ELFUTILS_1.0+0x58>  // b.hs, b.nlast
    d754:	ldr	x2, [x3]
    d758:	add	x1, x2, w1, sxtw #4
    d75c:	ldp	x2, x3, [x1]
    d760:	stp	x2, x3, [x0]
    d764:	b	d6fc <gelf_getdyn@@ELFUTILS_1.0+0x2c>
    d768:	mov	x0, #0x0                   	// #0
    d76c:	ret

000000000000d770 <gelf_update_dyn@@ELFUTILS_1.0>:
    d770:	cbz	x0, d840 <gelf_update_dyn@@ELFUTILS_1.0+0xd0>
    d774:	stp	x29, x30, [sp, #-16]!
    d778:	mov	x29, sp
    d77c:	ldr	w3, [x0, #8]
    d780:	cmp	w3, #0x2
    d784:	b.eq	d79c <gelf_update_dyn@@ELFUTILS_1.0+0x2c>  // b.none
    d788:	mov	w0, #0x1f                  	// #31
    d78c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d790:	mov	w0, #0x0                   	// #0
    d794:	ldp	x29, x30, [sp], #16
    d798:	ret
    d79c:	ldr	x3, [x0, #40]
    d7a0:	ldr	x4, [x3, #136]
    d7a4:	ldr	w4, [x4, #32]
    d7a8:	cmp	w4, #0x1
    d7ac:	b.ne	d81c <gelf_update_dyn@@ELFUTILS_1.0+0xac>  // b.any
    d7b0:	ldr	x5, [x2]
    d7b4:	mov	x4, #0x80000000            	// #2147483648
    d7b8:	mov	x6, #0xffffffff            	// #4294967295
    d7bc:	add	x4, x5, x4
    d7c0:	cmp	x4, x6
    d7c4:	b.hi	d7d4 <gelf_update_dyn@@ELFUTILS_1.0+0x64>  // b.pmore
    d7c8:	ldr	x2, [x2, #8]
    d7cc:	cmp	x2, x6
    d7d0:	b.ls	d7dc <gelf_update_dyn@@ELFUTILS_1.0+0x6c>  // b.plast
    d7d4:	mov	w0, #0x21                  	// #33
    d7d8:	b	d78c <gelf_update_dyn@@ELFUTILS_1.0+0x1c>
    d7dc:	ldr	x6, [x0, #16]
    d7e0:	mov	w4, w1
    d7e4:	cmp	x4, x6, lsr #3
    d7e8:	b.cc	d7f4 <gelf_update_dyn@@ELFUTILS_1.0+0x84>  // b.lo, b.ul, b.last
    d7ec:	mov	w0, #0x16                  	// #22
    d7f0:	b	d78c <gelf_update_dyn@@ELFUTILS_1.0+0x1c>
    d7f4:	ldr	x0, [x0]
    d7f8:	sbfiz	x4, x1, #3, #32
    d7fc:	add	x1, x0, w1, sxtw #3
    d800:	str	w5, [x0, x4]
    d804:	str	w2, [x1, #4]
    d808:	ldr	w0, [x3, #156]
    d80c:	orr	w0, w0, #0x1
    d810:	str	w0, [x3, #156]
    d814:	mov	w0, #0x1                   	// #1
    d818:	b	d794 <gelf_update_dyn@@ELFUTILS_1.0+0x24>
    d81c:	ldr	x5, [x0, #16]
    d820:	mov	w4, w1
    d824:	cmp	x4, x5, lsr #4
    d828:	b.cs	d7ec <gelf_update_dyn@@ELFUTILS_1.0+0x7c>  // b.hs, b.nlast
    d82c:	ldr	x0, [x0]
    d830:	ldp	x4, x5, [x2]
    d834:	add	x1, x0, w1, sxtw #4
    d838:	stp	x4, x5, [x1]
    d83c:	b	d808 <gelf_update_dyn@@ELFUTILS_1.0+0x98>
    d840:	mov	w0, #0x0                   	// #0
    d844:	ret

000000000000d848 <gelf_getmove@@ELFUTILS_1.0>:
    d848:	cbz	x0, d894 <gelf_getmove@@ELFUTILS_1.0+0x4c>
    d84c:	stp	x29, x30, [sp, #-16]!
    d850:	mov	x29, sp
    d854:	ldr	w0, [x0, #8]
    d858:	cmp	w0, #0x15
    d85c:	b.eq	d874 <gelf_getmove@@ELFUTILS_1.0+0x2c>  // b.none
    d860:	mov	w0, #0x4                   	// #4
    d864:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d868:	mov	x0, #0x0                   	// #0
    d86c:	ldp	x29, x30, [sp], #16
    d870:	ret
    d874:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    d878:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    d87c:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    d880:	add	x3, x3, #0xedd
    d884:	add	x1, x1, #0xea4
    d888:	add	x0, x0, #0xeb3
    d88c:	mov	w2, #0x39                  	// #57
    d890:	bl	3380 <__assert_fail@plt>
    d894:	mov	x0, #0x0                   	// #0
    d898:	ret

000000000000d89c <gelf_update_move@@ELFUTILS_1.0>:
    d89c:	cbz	x0, d8c8 <gelf_update_move@@ELFUTILS_1.0+0x2c>
    d8a0:	stp	x29, x30, [sp, #-16]!
    d8a4:	adrp	x3, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    d8a8:	adrp	x1, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    d8ac:	mov	x29, sp
    d8b0:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    d8b4:	add	x3, x3, #0xefd
    d8b8:	add	x1, x1, #0xeea
    d8bc:	add	x0, x0, #0xeb3
    d8c0:	mov	w2, #0x32                  	// #50
    d8c4:	bl	3380 <__assert_fail@plt>
    d8c8:	mov	w0, #0x0                   	// #0
    d8cc:	ret

000000000000d8d0 <gelf_getsyminfo@@ELFUTILS_1.0>:
    d8d0:	cbz	x0, d928 <gelf_getsyminfo@@ELFUTILS_1.0+0x58>
    d8d4:	stp	x29, x30, [sp, #-16]!
    d8d8:	mov	x29, sp
    d8dc:	ldr	w3, [x0, #8]
    d8e0:	cmp	w3, #0x14
    d8e4:	b.eq	d8fc <gelf_getsyminfo@@ELFUTILS_1.0+0x2c>  // b.none
    d8e8:	mov	w0, #0x4                   	// #4
    d8ec:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d8f0:	mov	x0, #0x0                   	// #0
    d8f4:	ldp	x29, x30, [sp], #16
    d8f8:	ret
    d8fc:	ldr	x4, [x0, #16]
    d900:	mov	w3, w1
    d904:	cmp	x3, x4, lsr #2
    d908:	b.cc	d914 <gelf_getsyminfo@@ELFUTILS_1.0+0x44>  // b.lo, b.ul, b.last
    d90c:	mov	w0, #0x16                  	// #22
    d910:	b	d8ec <gelf_getsyminfo@@ELFUTILS_1.0+0x1c>
    d914:	ldr	x0, [x0]
    d918:	ldr	w0, [x0, w1, sxtw #2]
    d91c:	str	w0, [x2]
    d920:	mov	x0, x2
    d924:	b	d8f4 <gelf_getsyminfo@@ELFUTILS_1.0+0x24>
    d928:	ret

000000000000d92c <gelf_update_syminfo@@ELFUTILS_1.0>:
    d92c:	cbz	x0, d994 <gelf_update_syminfo@@ELFUTILS_1.0+0x68>
    d930:	stp	x29, x30, [sp, #-16]!
    d934:	mov	x29, sp
    d938:	ldr	w3, [x0, #8]
    d93c:	cmp	w3, #0x14
    d940:	b.eq	d958 <gelf_update_syminfo@@ELFUTILS_1.0+0x2c>  // b.none
    d944:	mov	w0, #0x1f                  	// #31
    d948:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d94c:	mov	w0, #0x0                   	// #0
    d950:	ldp	x29, x30, [sp], #16
    d954:	ret
    d958:	ldr	x5, [x0, #16]
    d95c:	mov	w4, w1
    d960:	ldr	x3, [x0, #40]
    d964:	cmp	x4, x5, lsr #2
    d968:	b.cc	d974 <gelf_update_syminfo@@ELFUTILS_1.0+0x48>  // b.lo, b.ul, b.last
    d96c:	mov	w0, #0x16                  	// #22
    d970:	b	d948 <gelf_update_syminfo@@ELFUTILS_1.0+0x1c>
    d974:	ldr	x0, [x0]
    d978:	ldr	w2, [x2]
    d97c:	str	w2, [x0, w1, sxtw #2]
    d980:	ldr	w0, [x3, #156]
    d984:	orr	w0, w0, #0x1
    d988:	str	w0, [x3, #156]
    d98c:	mov	w0, #0x1                   	// #1
    d990:	b	d950 <gelf_update_syminfo@@ELFUTILS_1.0+0x24>
    d994:	mov	w0, #0x0                   	// #0
    d998:	ret

000000000000d99c <gelf_getauxv@@ELFUTILS_1.3>:
    d99c:	mov	x3, x0
    d9a0:	cbz	x0, da44 <gelf_getauxv@@ELFUTILS_1.3+0xa8>
    d9a4:	stp	x29, x30, [sp, #-16]!
    d9a8:	mov	x0, x2
    d9ac:	mov	x29, sp
    d9b0:	ldr	w2, [x3, #8]
    d9b4:	cmp	w2, #0x18
    d9b8:	b.eq	d9d0 <gelf_getauxv@@ELFUTILS_1.3+0x34>  // b.none
    d9bc:	mov	w0, #0x4                   	// #4
    d9c0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    d9c4:	mov	x0, #0x0                   	// #0
    d9c8:	ldp	x29, x30, [sp], #16
    d9cc:	ret
    d9d0:	ldr	x2, [x3, #40]
    d9d4:	add	w1, w1, #0x1
    d9d8:	ldr	x4, [x3, #16]
    d9dc:	sxtw	x1, w1
    d9e0:	ldr	x2, [x2, #136]
    d9e4:	ldr	w2, [x2, #32]
    d9e8:	cmp	w2, #0x1
    d9ec:	b.ne	da24 <gelf_getauxv@@ELFUTILS_1.3+0x88>  // b.any
    d9f0:	lsl	x2, x1, #3
    d9f4:	cmp	x4, x1, lsl #3
    d9f8:	b.cs	da04 <gelf_getauxv@@ELFUTILS_1.3+0x68>  // b.hs, b.nlast
    d9fc:	mov	w0, #0x16                  	// #22
    da00:	b	d9c0 <gelf_getauxv@@ELFUTILS_1.3+0x24>
    da04:	sub	x1, x2, #0x8
    da08:	ldr	x2, [x3]
    da0c:	add	x3, x2, x1
    da10:	ldr	w1, [x2, x1]
    da14:	str	x1, [x0]
    da18:	ldr	w1, [x3, #4]
    da1c:	str	x1, [x0, #8]
    da20:	b	d9c8 <gelf_getauxv@@ELFUTILS_1.3+0x2c>
    da24:	lsl	x2, x1, #4
    da28:	cmp	x4, x1, lsl #4
    da2c:	b.cc	d9fc <gelf_getauxv@@ELFUTILS_1.3+0x60>  // b.lo, b.ul, b.last
    da30:	ldr	x1, [x3]
    da34:	add	x1, x1, x2
    da38:	ldp	x2, x3, [x1, #-16]
    da3c:	stp	x2, x3, [x0]
    da40:	b	d9c8 <gelf_getauxv@@ELFUTILS_1.3+0x2c>
    da44:	mov	x0, #0x0                   	// #0
    da48:	ret

000000000000da4c <gelf_update_auxv@@ELFUTILS_1.3>:
    da4c:	cbz	x0, db20 <gelf_update_auxv@@ELFUTILS_1.3+0xd4>
    da50:	stp	x29, x30, [sp, #-16]!
    da54:	mov	x29, sp
    da58:	tbz	w1, #31, da70 <gelf_update_auxv@@ELFUTILS_1.3+0x24>
    da5c:	mov	w0, #0x16                  	// #22
    da60:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    da64:	mov	w0, #0x0                   	// #0
    da68:	ldp	x29, x30, [sp], #16
    da6c:	ret
    da70:	ldr	w3, [x0, #8]
    da74:	cmp	w3, #0x18
    da78:	b.eq	da84 <gelf_update_auxv@@ELFUTILS_1.3+0x38>  // b.none
    da7c:	mov	w0, #0x1f                  	// #31
    da80:	b	da60 <gelf_update_auxv@@ELFUTILS_1.3+0x14>
    da84:	ldr	x3, [x0, #40]
    da88:	ldr	x4, [x3, #136]
    da8c:	ldr	w4, [x4, #32]
    da90:	cmp	w4, #0x1
    da94:	b.ne	daf8 <gelf_update_auxv@@ELFUTILS_1.3+0xac>  // b.any
    da98:	ldr	x5, [x2]
    da9c:	mov	x6, #0xffffffff            	// #4294967295
    daa0:	cmp	x5, x6
    daa4:	b.hi	dab4 <gelf_update_auxv@@ELFUTILS_1.3+0x68>  // b.pmore
    daa8:	ldr	x4, [x2, #8]
    daac:	cmp	x4, x6
    dab0:	b.ls	dabc <gelf_update_auxv@@ELFUTILS_1.3+0x70>  // b.plast
    dab4:	mov	w0, #0x21                  	// #33
    dab8:	b	da60 <gelf_update_auxv@@ELFUTILS_1.3+0x14>
    dabc:	ldr	x6, [x0, #16]
    dac0:	add	w1, w1, #0x1
    dac4:	sbfiz	x2, x1, #3, #32
    dac8:	cmp	x6, w1, sxtw #3
    dacc:	b.cc	da5c <gelf_update_auxv@@ELFUTILS_1.3+0x10>  // b.lo, b.ul, b.last
    dad0:	ldr	x0, [x0]
    dad4:	sub	x1, x2, #0x8
    dad8:	add	x2, x0, x1
    dadc:	str	w5, [x0, x1]
    dae0:	str	w4, [x2, #4]
    dae4:	ldr	w0, [x3, #156]
    dae8:	orr	w0, w0, #0x1
    daec:	str	w0, [x3, #156]
    daf0:	mov	w0, #0x1                   	// #1
    daf4:	b	da68 <gelf_update_auxv@@ELFUTILS_1.3+0x1c>
    daf8:	ldr	x5, [x0, #16]
    dafc:	add	w1, w1, #0x1
    db00:	sbfiz	x4, x1, #4, #32
    db04:	cmp	x5, w1, sxtw #4
    db08:	b.cc	da5c <gelf_update_auxv@@ELFUTILS_1.3+0x10>  // b.lo, b.ul, b.last
    db0c:	ldr	x0, [x0]
    db10:	add	x0, x0, x4
    db14:	ldp	x4, x5, [x2]
    db18:	stp	x4, x5, [x0, #-16]
    db1c:	b	dae4 <gelf_update_auxv@@ELFUTILS_1.3+0x98>
    db20:	mov	w0, #0x0                   	// #0
    db24:	ret

000000000000db28 <gelf_getnote@@ELFUTILS_1.3>:
    db28:	cbnz	x0, db34 <gelf_getnote@@ELFUTILS_1.3+0xc>
    db2c:	mov	x0, #0x0                   	// #0
    db30:	ret
    db34:	stp	x29, x30, [sp, #-16]!
    db38:	mov	x29, sp
    db3c:	ldr	w9, [x0, #8]
    db40:	cmp	w9, #0x13
    db44:	ccmp	w9, #0x1a, #0x4, ne  // ne = any
    db48:	b.eq	db60 <gelf_getnote@@ELFUTILS_1.3+0x38>  // b.none
    db4c:	mov	w0, #0x4                   	// #4
    db50:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    db54:	mov	x0, #0x0                   	// #0
    db58:	ldp	x29, x30, [sp], #16
    db5c:	ret
    db60:	ldr	x6, [x0, #16]
    db64:	cmp	x6, x1
    db68:	b.cc	db78 <gelf_getnote@@ELFUTILS_1.3+0x50>  // b.lo, b.ul, b.last
    db6c:	sub	x5, x6, x1
    db70:	cmp	x5, #0xb
    db74:	b.hi	db80 <gelf_getnote@@ELFUTILS_1.3+0x58>  // b.pmore
    db78:	mov	w0, #0x1d                  	// #29
    db7c:	b	db50 <gelf_getnote@@ELFUTILS_1.3+0x28>
    db80:	add	x5, x1, #0xc
    db84:	cmp	x6, x5
    db88:	b.cc	db54 <gelf_getnote@@ELFUTILS_1.3+0x2c>  // b.lo, b.ul, b.last
    db8c:	ldr	x7, [x0]
    db90:	str	x5, [x3]
    db94:	ldr	x6, [x0, #16]
    db98:	add	x10, x7, x1
    db9c:	ldr	w3, [x7, x1]
    dba0:	cmp	x3, x6
    dba4:	b.hi	db54 <gelf_getnote@@ELFUTILS_1.3+0x2c>  // b.pmore
    dba8:	sub	x0, x6, x3
    dbac:	cmp	x0, x5
    dbb0:	b.cc	db54 <gelf_getnote@@ELFUTILS_1.3+0x2c>  // b.lo, b.ul, b.last
    dbb4:	ldr	w8, [x10, #4]
    dbb8:	add	x3, x3, x5
    dbbc:	cmp	w9, #0x1a
    dbc0:	b.ne	dc10 <gelf_getnote@@ELFUTILS_1.3+0xe8>  // b.any
    dbc4:	add	w5, w8, #0x7
    dbc8:	add	x3, x3, #0x7
    dbcc:	and	w5, w5, #0xfffffff8
    dbd0:	and	x0, x3, #0xfffffff8
    dbd4:	cmp	x6, x0
    dbd8:	b.cc	db54 <gelf_getnote@@ELFUTILS_1.3+0x2c>  // b.lo, b.ul, b.last
    dbdc:	sub	x6, x6, x0
    dbe0:	mov	w3, w5
    dbe4:	cmp	x6, w5, uxtw
    dbe8:	b.cc	db54 <gelf_getnote@@ELFUTILS_1.3+0x2c>  // b.lo, b.ul, b.last
    dbec:	cbnz	w5, dbf4 <gelf_getnote@@ELFUTILS_1.3+0xcc>
    dbf0:	cbnz	w8, db54 <gelf_getnote@@ELFUTILS_1.3+0x2c>
    dbf4:	ldr	x1, [x7, x1]
    dbf8:	str	x0, [x4]
    dbfc:	str	x1, [x2]
    dc00:	add	x0, x3, x0
    dc04:	ldr	w1, [x10, #8]
    dc08:	str	w1, [x2, #8]
    dc0c:	b	db58 <gelf_getnote@@ELFUTILS_1.3+0x30>
    dc10:	add	w5, w8, #0x3
    dc14:	add	x3, x3, #0x3
    dc18:	and	w5, w5, #0xfffffffc
    dc1c:	and	x0, x3, #0xfffffffc
    dc20:	b	dbd4 <gelf_getnote@@ELFUTILS_1.3+0xac>

000000000000dc24 <gelf_xlatetof@@ELFUTILS_1.0>:
    dc24:	mov	x4, x1
    dc28:	mov	x1, x2
    dc2c:	mov	w2, w3
    dc30:	cbz	x0, dc4c <gelf_xlatetof@@ELFUTILS_1.0+0x28>
    dc34:	ldr	w0, [x0, #32]
    dc38:	cmp	w0, #0x1
    dc3c:	mov	x0, x4
    dc40:	b.ne	dc48 <gelf_xlatetof@@ELFUTILS_1.0+0x24>  // b.any
    dc44:	b	4ebc <elf32_xlatetof@@ELFUTILS_1.0>
    dc48:	b	5050 <elf64_xlatetof@@ELFUTILS_1.0>
    dc4c:	ret

000000000000dc50 <gelf_xlatetom@@ELFUTILS_1.0>:
    dc50:	mov	x4, x1
    dc54:	mov	x1, x2
    dc58:	mov	w2, w3
    dc5c:	cbz	x0, dc78 <gelf_xlatetom@@ELFUTILS_1.0+0x28>
    dc60:	ldr	w0, [x0, #32]
    dc64:	cmp	w0, #0x1
    dc68:	mov	x0, x4
    dc6c:	b.ne	dc74 <gelf_xlatetom@@ELFUTILS_1.0+0x24>  // b.any
    dc70:	b	4f80 <elf32_xlatetom@@ELFUTILS_1.0>
    dc74:	b	5118 <elf64_xlatetom@@ELFUTILS_1.0>
    dc78:	ret
    dc7c:	stp	x29, x30, [sp, #-96]!
    dc80:	mov	x29, sp
    dc84:	stp	x23, x24, [sp, #48]
    dc88:	ldr	x24, [x0]
    dc8c:	stp	x19, x20, [sp, #16]
    dc90:	mov	x20, x0
    dc94:	stp	x21, x22, [sp, #32]
    dc98:	mov	x22, #0x28                  	// #40
    dc9c:	mov	x21, x1
    dca0:	udiv	x0, x1, x24
    dca4:	stp	x25, x26, [sp, #64]
    dca8:	msub	x0, x0, x24, x1
    dcac:	add	x19, x0, #0x1
    dcb0:	madd	x0, x0, x22, x20
    dcb4:	ldr	x1, [x0, #48]
    dcb8:	str	x27, [sp, #80]
    dcbc:	cbz	x1, dd5c <gelf_xlatetom@@ELFUTILS_1.0+0x10c>
    dcc0:	mov	x23, x2
    dcc4:	cmp	x21, x1
    dcc8:	b.ne	dce8 <gelf_xlatetom@@ELFUTILS_1.0+0x98>  // b.any
    dccc:	ldr	x1, [x0, #56]
    dcd0:	ldr	x0, [x2]
    dcd4:	bl	3220 <strcmp@plt>
    dcd8:	cbnz	w0, dce8 <gelf_xlatetom@@ELFUTILS_1.0+0x98>
    dcdc:	madd	x0, x19, x22, x20
    dce0:	add	x0, x0, #0x8
    dce4:	b	dd3c <gelf_xlatetom@@ELFUTILS_1.0+0xec>
    dce8:	sub	x0, x24, #0x2
    dcec:	mov	x27, #0x28                  	// #40
    dcf0:	udiv	x22, x21, x0
    dcf4:	msub	x22, x22, x0, x21
    dcf8:	add	x22, x22, #0x1
    dcfc:	sub	x24, x24, x22
    dd00:	add	x0, x19, x24
    dd04:	cmp	x22, x19
    dd08:	sub	x1, x19, x22
    dd0c:	csel	x19, x1, x0, cc  // cc = lo, ul, last
    dd10:	mul	x25, x19, x27
    dd14:	add	x0, x20, x25
    dd18:	ldr	x26, [x0, #8]
    dd1c:	cmp	x21, x26
    dd20:	b.ne	dd58 <gelf_xlatetom@@ELFUTILS_1.0+0x108>  // b.any
    dd24:	ldr	x1, [x0, #16]
    dd28:	ldr	x0, [x23]
    dd2c:	bl	3220 <strcmp@plt>
    dd30:	cbnz	w0, dd58 <gelf_xlatetom@@ELFUTILS_1.0+0x108>
    dd34:	add	x0, x25, #0x8
    dd38:	add	x0, x20, x0
    dd3c:	ldp	x19, x20, [sp, #16]
    dd40:	ldp	x21, x22, [sp, #32]
    dd44:	ldp	x23, x24, [sp, #48]
    dd48:	ldp	x25, x26, [sp, #64]
    dd4c:	ldr	x27, [sp, #80]
    dd50:	ldp	x29, x30, [sp], #96
    dd54:	ret
    dd58:	cbnz	x26, dd00 <gelf_xlatetom@@ELFUTILS_1.0+0xb0>
    dd5c:	mov	x0, #0x28                  	// #40
    dd60:	madd	x0, x19, x0, x20
    dd64:	b	dce0 <gelf_xlatetom@@ELFUTILS_1.0+0x90>

000000000000dd68 <nlist@@ELFUTILS_1.0>:
    dd68:	stp	x29, x30, [sp, #-208]!
    dd6c:	mov	x29, sp
    dd70:	stp	x19, x20, [sp, #16]
    dd74:	mov	x19, x1
    dd78:	mov	w1, #0x0                   	// #0
    dd7c:	stp	x21, x22, [sp, #32]
    dd80:	stp	x23, x24, [sp, #48]
    dd84:	stp	x25, x26, [sp, #64]
    dd88:	stp	x27, x28, [sp, #80]
    dd8c:	bl	3110 <open@plt>
    dd90:	cmn	w0, #0x1
    dd94:	b.ne	ddb8 <nlist@@ELFUTILS_1.0+0x50>  // b.any
    dd98:	mov	w0, #0x27                  	// #39
    dd9c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    dda0:	ldr	x0, [x19]
    dda4:	cbz	x0, ddb0 <nlist@@ELFUTILS_1.0+0x48>
    dda8:	ldrb	w0, [x0]
    ddac:	cbnz	w0, e01c <nlist@@ELFUTILS_1.0+0x2b4>
    ddb0:	mov	w0, #0xffffffff            	// #-1
    ddb4:	b	df24 <nlist@@ELFUTILS_1.0+0x1bc>
    ddb8:	mov	w23, w0
    ddbc:	mov	w0, #0x1                   	// #1
    ddc0:	bl	3494 <elf_version@@ELFUTILS_1.0>
    ddc4:	mov	w0, w23
    ddc8:	mov	x2, #0x0                   	// #0
    ddcc:	mov	w1, #0x8                   	// #8
    ddd0:	bl	487c <elf_begin@@ELFUTILS_1.0>
    ddd4:	mov	x21, x0
    ddd8:	cbz	x0, de70 <nlist@@ELFUTILS_1.0+0x108>
    dddc:	add	x25, sp, #0x90
    dde0:	mov	x24, #0x0                   	// #0
    dde4:	mov	x22, #0x0                   	// #0
    dde8:	mov	x1, x22
    ddec:	mov	x0, x21
    ddf0:	bl	7e18 <elf_nextscn@@ELFUTILS_1.0>
    ddf4:	mov	x22, x0
    ddf8:	cbnz	x0, de7c <nlist@@ELFUTILS_1.0+0x114>
    ddfc:	cbz	x24, de68 <nlist@@ELFUTILS_1.0+0x100>
    de00:	add	x1, sp, #0x90
    de04:	mov	x0, x24
    de08:	bl	8940 <gelf_getshdr@@ELFUTILS_1.0>
    de0c:	mov	x20, x0
    de10:	cbz	x0, de68 <nlist@@ELFUTILS_1.0+0x100>
    de14:	mov	x22, x24
    de18:	mov	x0, x22
    de1c:	mov	x1, #0x0                   	// #0
    de20:	bl	947c <elf_getdata@@ELFUTILS_1.0>
    de24:	mov	x26, x0
    de28:	cbz	x0, de68 <nlist@@ELFUTILS_1.0+0x100>
    de2c:	ldr	x24, [x20, #32]
    de30:	mov	x0, x21
    de34:	mov	w3, #0x1                   	// #1
    de38:	mov	x2, #0x1                   	// #1
    de3c:	mov	w1, #0xb                   	// #11
    de40:	bl	4e54 <gelf_fsize@@ELFUTILS_1.0>
    de44:	udiv	x24, x24, x0
    de48:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    de4c:	cmp	x24, x0
    de50:	b.cc	dea4 <nlist@@ELFUTILS_1.0+0x13c>  // b.lo, b.ul, b.last
    de54:	bl	3390 <__errno_location@plt>
    de58:	mov	w1, #0x16                  	// #22
    de5c:	str	w1, [x0]
    de60:	mov	w0, #0x8                   	// #8
    de64:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    de68:	mov	x0, x21
    de6c:	bl	4ad4 <elf_end@@ELFUTILS_1.0>
    de70:	mov	w0, w23
    de74:	bl	31c0 <close@plt>
    de78:	b	dda0 <nlist@@ELFUTILS_1.0+0x38>
    de7c:	mov	x1, x25
    de80:	bl	8940 <gelf_getshdr@@ELFUTILS_1.0>
    de84:	mov	x20, x0
    de88:	cbz	x0, de68 <nlist@@ELFUTILS_1.0+0x100>
    de8c:	ldr	w0, [x0, #4]
    de90:	cmp	w0, #0x2
    de94:	b.eq	de18 <nlist@@ELFUTILS_1.0+0xb0>  // b.none
    de98:	cmp	w0, #0xb
    de9c:	csel	x24, x24, x22, ne  // ne = any
    dea0:	b	dde8 <nlist@@ELFUTILS_1.0+0x80>
    dea4:	add	x1, x24, x24, lsl #1
    dea8:	mov	x0, #0xa                   	// #10
    deac:	cmp	x1, #0x15
    deb0:	lsr	x2, x1, #1
    deb4:	csel	x0, x2, x0, hi  // hi = pmore
    deb8:	bl	eca0 <elf64_checksum@@ELFUTILS_1.0+0x1c4>
    debc:	mov	x25, x0
    dec0:	mov	x0, #0x28                  	// #40
    dec4:	mov	x1, #0x1                   	// #1
    dec8:	madd	x0, x25, x0, x0
    decc:	add	x0, x0, #0x8
    ded0:	bl	3180 <calloc@plt>
    ded4:	mov	x22, x0
    ded8:	cbz	x0, de60 <nlist@@ELFUTILS_1.0+0xf8>
    dedc:	add	x27, sp, #0x70
    dee0:	str	x25, [x0]
    dee4:	add	x28, x27, #0x8
    dee8:	mov	x25, #0x0                   	// #0
    deec:	cmp	x25, x24
    def0:	b.ne	df40 <nlist@@ELFUTILS_1.0+0x1d8>  // b.any
    def4:	add	x20, sp, #0x70
    def8:	ldr	x0, [x19]
    defc:	cbz	x0, df08 <nlist@@ELFUTILS_1.0+0x1a0>
    df00:	ldrb	w1, [x0]
    df04:	cbnz	w1, dfbc <nlist@@ELFUTILS_1.0+0x254>
    df08:	mov	x0, x22
    df0c:	bl	3250 <free@plt>
    df10:	mov	x0, x21
    df14:	bl	4ad4 <elf_end@@ELFUTILS_1.0>
    df18:	mov	w0, w23
    df1c:	bl	31c0 <close@plt>
    df20:	mov	w0, #0x0                   	// #0
    df24:	ldp	x19, x20, [sp, #16]
    df28:	ldp	x21, x22, [sp, #32]
    df2c:	ldp	x23, x24, [sp, #48]
    df30:	ldp	x25, x26, [sp, #64]
    df34:	ldp	x27, x28, [sp, #80]
    df38:	ldp	x29, x30, [sp], #208
    df3c:	ret
    df40:	mov	x2, x28
    df44:	mov	w1, w25
    df48:	mov	x0, x26
    df4c:	bl	cf74 <gelf_getsym@@ELFUTILS_1.0>
    df50:	cbz	x0, dfb0 <nlist@@ELFUTILS_1.0+0x248>
    df54:	ldr	w2, [x0]
    df58:	mov	x0, x21
    df5c:	ldr	w1, [x20, #40]
    df60:	bl	8b88 <elf_strptr@@ELFUTILS_1.0>
    df64:	str	x0, [sp, #112]
    df68:	cbz	x0, dfb0 <nlist@@ELFUTILS_1.0+0x248>
    df6c:	ldrb	w1, [x0]
    df70:	cbz	w1, dfa8 <nlist@@ELFUTILS_1.0+0x240>
    df74:	bl	34d0 <elf_hash@@ELFUTILS_1.0>
    df78:	mov	x1, x0
    df7c:	mov	x2, x27
    df80:	mov	x0, x22
    df84:	str	x1, [sp, #104]
    df88:	bl	dc7c <gelf_xlatetom@@ELFUTILS_1.0+0x2c>
    df8c:	mov	x2, x0
    df90:	ldr	x1, [sp, #104]
    df94:	str	x1, [x2], #8
    df98:	ldp	x4, x5, [x27]
    df9c:	stp	x4, x5, [x0, #8]
    dfa0:	ldp	x0, x1, [x27, #16]
    dfa4:	stp	x0, x1, [x2, #16]
    dfa8:	add	x25, x25, #0x1
    dfac:	b	deec <nlist@@ELFUTILS_1.0+0x184>
    dfb0:	mov	x0, x22
    dfb4:	bl	3250 <free@plt>
    dfb8:	b	de68 <nlist@@ELFUTILS_1.0+0x100>
    dfbc:	str	x0, [sp, #112]
    dfc0:	bl	34d0 <elf_hash@@ELFUTILS_1.0>
    dfc4:	mov	x1, x0
    dfc8:	mov	x2, x20
    dfcc:	mov	x0, x22
    dfd0:	bl	dc7c <gelf_xlatetom@@ELFUTILS_1.0+0x2c>
    dfd4:	ldr	x1, [x0]
    dfd8:	cbz	x1, e00c <nlist@@ELFUTILS_1.0+0x2a4>
    dfdc:	add	x1, x0, #0x8
    dfe0:	ldr	x0, [x0, #24]
    dfe4:	str	x0, [x19, #8]
    dfe8:	ldrh	w0, [x1, #14]
    dfec:	strh	w0, [x19, #16]
    dff0:	ldrb	w0, [x1, #12]
    dff4:	and	w0, w0, #0xf
    dff8:	strh	w0, [x19, #18]
    dffc:	add	x19, x19, #0x18
    e000:	sturb	wzr, [x19, #-4]
    e004:	sturb	wzr, [x19, #-3]
    e008:	b	def8 <nlist@@ELFUTILS_1.0+0x190>
    e00c:	str	xzr, [x19, #8]
    e010:	strh	wzr, [x19, #16]
    e014:	strh	wzr, [x19, #18]
    e018:	b	dffc <nlist@@ELFUTILS_1.0+0x294>
    e01c:	add	x19, x19, #0x18
    e020:	stur	xzr, [x19, #-16]
    e024:	sturh	wzr, [x19, #-8]
    e028:	sturh	wzr, [x19, #-6]
    e02c:	sturb	wzr, [x19, #-4]
    e030:	sturb	wzr, [x19, #-3]
    e034:	b	dda0 <nlist@@ELFUTILS_1.0+0x38>

000000000000e038 <gelf_getsymshndx@@ELFUTILS_1.0>:
    e038:	mov	x5, x0
    e03c:	cbz	x0, e13c <gelf_getsymshndx@@ELFUTILS_1.0+0x104>
    e040:	stp	x29, x30, [sp, #-16]!
    e044:	mov	x0, x3
    e048:	mov	x29, sp
    e04c:	ldr	w3, [x5, #8]
    e050:	cmp	w3, #0xb
    e054:	b.ne	e068 <gelf_getsymshndx@@ELFUTILS_1.0+0x30>  // b.any
    e058:	cbz	x1, e07c <gelf_getsymshndx@@ELFUTILS_1.0+0x44>
    e05c:	ldr	w3, [x1, #8]
    e060:	cmp	w3, #0xc
    e064:	b.eq	e07c <gelf_getsymshndx@@ELFUTILS_1.0+0x44>  // b.none
    e068:	mov	w0, #0x4                   	// #4
    e06c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e070:	mov	x0, #0x0                   	// #0
    e074:	ldp	x29, x30, [sp], #16
    e078:	ret
    e07c:	ldr	x3, [x5, #40]
    e080:	ldr	x7, [x3, #136]
    e084:	mov	w3, w2
    e088:	cbz	x1, e108 <gelf_getsymshndx@@ELFUTILS_1.0+0xd0>
    e08c:	ldr	x6, [x1, #16]
    e090:	cmp	x3, x6, lsr #2
    e094:	b.cc	e0a0 <gelf_getsymshndx@@ELFUTILS_1.0+0x68>  // b.lo, b.ul, b.last
    e098:	mov	w0, #0x16                  	// #22
    e09c:	b	e06c <gelf_getsymshndx@@ELFUTILS_1.0+0x34>
    e0a0:	ldr	x1, [x1]
    e0a4:	ldr	w6, [x1, w2, sxtw #2]
    e0a8:	ldr	w7, [x7, #32]
    e0ac:	ldr	x1, [x5, #16]
    e0b0:	cmp	w7, #0x1
    e0b4:	b.ne	e110 <gelf_getsymshndx@@ELFUTILS_1.0+0xd8>  // b.any
    e0b8:	cmp	x3, x1, lsr #4
    e0bc:	b.cs	e098 <gelf_getsymshndx@@ELFUTILS_1.0+0x60>  // b.hs, b.nlast
    e0c0:	ldr	x1, [x5]
    e0c4:	sbfiz	x3, x2, #4, #32
    e0c8:	add	x2, x1, w2, sxtw #4
    e0cc:	ldr	w1, [x1, x3]
    e0d0:	str	w1, [x0]
    e0d4:	ldrb	w1, [x2, #12]
    e0d8:	strb	w1, [x0, #4]
    e0dc:	ldrb	w1, [x2, #13]
    e0e0:	strb	w1, [x0, #5]
    e0e4:	ldrh	w1, [x2, #14]
    e0e8:	strh	w1, [x0, #6]
    e0ec:	ldr	w1, [x2, #4]
    e0f0:	str	x1, [x0, #8]
    e0f4:	ldr	w1, [x2, #8]
    e0f8:	str	x1, [x0, #16]
    e0fc:	cbz	x4, e074 <gelf_getsymshndx@@ELFUTILS_1.0+0x3c>
    e100:	str	w6, [x4]
    e104:	b	e074 <gelf_getsymshndx@@ELFUTILS_1.0+0x3c>
    e108:	mov	w6, #0x0                   	// #0
    e10c:	b	e0a8 <gelf_getsymshndx@@ELFUTILS_1.0+0x70>
    e110:	mov	x7, #0x18                  	// #24
    e114:	udiv	x1, x1, x7
    e118:	cmp	x3, x1
    e11c:	b.cs	e098 <gelf_getsymshndx@@ELFUTILS_1.0+0x60>  // b.hs, b.nlast
    e120:	ldr	x1, [x5]
    e124:	smull	x2, w2, w7
    e128:	add	x2, x1, x2
    e12c:	ldp	x8, x9, [x2]
    e130:	stp	x8, x9, [x0]
    e134:	ldr	x1, [x2, #16]
    e138:	b	e0f8 <gelf_getsymshndx@@ELFUTILS_1.0+0xc0>
    e13c:	mov	x0, #0x0                   	// #0
    e140:	ret

000000000000e144 <gelf_update_symshndx@@ELFUTILS_1.0>:
    e144:	cbz	x0, e26c <gelf_update_symshndx@@ELFUTILS_1.0+0x128>
    e148:	stp	x29, x30, [sp, #-16]!
    e14c:	mov	x29, sp
    e150:	ldr	w5, [x0, #8]
    e154:	cmp	w5, #0xb
    e158:	b.eq	e170 <gelf_update_symshndx@@ELFUTILS_1.0+0x2c>  // b.none
    e15c:	mov	w0, #0x1f                  	// #31
    e160:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e164:	mov	w0, #0x0                   	// #0
    e168:	ldp	x29, x30, [sp], #16
    e16c:	ret
    e170:	ldr	x5, [x0, #40]
    e174:	ldr	x8, [x5, #136]
    e178:	cbz	x1, e1d4 <gelf_update_symshndx@@ELFUTILS_1.0+0x90>
    e17c:	ldr	x9, [x1, #16]
    e180:	add	w7, w2, #0x1
    e184:	sbfiz	x6, x7, #2, #32
    e188:	cmp	x9, w7, sxtw #2
    e18c:	b.cs	e198 <gelf_update_symshndx@@ELFUTILS_1.0+0x54>  // b.hs, b.nlast
    e190:	mov	w0, #0x16                  	// #22
    e194:	b	e160 <gelf_update_symshndx@@ELFUTILS_1.0+0x1c>
    e198:	ldr	x1, [x1]
    e19c:	sub	x6, x6, #0x4
    e1a0:	add	x1, x1, x6
    e1a4:	ldr	w6, [x8, #32]
    e1a8:	cmp	w6, #0x1
    e1ac:	b.ne	e238 <gelf_update_symshndx@@ELFUTILS_1.0+0xf4>  // b.any
    e1b0:	ldr	x7, [x3, #8]
    e1b4:	mov	x8, #0xffffffff            	// #4294967295
    e1b8:	cmp	x7, x8
    e1bc:	b.hi	e1cc <gelf_update_symshndx@@ELFUTILS_1.0+0x88>  // b.pmore
    e1c0:	ldr	x6, [x3, #16]
    e1c4:	cmp	x6, x8
    e1c8:	b.ls	e1dc <gelf_update_symshndx@@ELFUTILS_1.0+0x98>  // b.plast
    e1cc:	mov	w0, #0x21                  	// #33
    e1d0:	b	e160 <gelf_update_symshndx@@ELFUTILS_1.0+0x1c>
    e1d4:	cbz	w4, e1a4 <gelf_update_symshndx@@ELFUTILS_1.0+0x60>
    e1d8:	b	e190 <gelf_update_symshndx@@ELFUTILS_1.0+0x4c>
    e1dc:	ldr	x9, [x0, #16]
    e1e0:	mov	w8, w2
    e1e4:	cmp	x8, x9, lsr #4
    e1e8:	b.cs	e190 <gelf_update_symshndx@@ELFUTILS_1.0+0x4c>  // b.hs, b.nlast
    e1ec:	ldr	x0, [x0]
    e1f0:	sbfiz	x8, x2, #4, #32
    e1f4:	ldr	w9, [x3]
    e1f8:	add	x2, x0, w2, sxtw #4
    e1fc:	str	w9, [x0, x8]
    e200:	stp	w7, w6, [x2, #4]
    e204:	ldrb	w0, [x3, #4]
    e208:	strb	w0, [x2, #12]
    e20c:	ldrb	w0, [x3, #5]
    e210:	strb	w0, [x2, #13]
    e214:	ldrh	w0, [x3, #6]
    e218:	strh	w0, [x2, #14]
    e21c:	cbz	x1, e224 <gelf_update_symshndx@@ELFUTILS_1.0+0xe0>
    e220:	str	w4, [x1]
    e224:	ldr	w0, [x5, #156]
    e228:	orr	w0, w0, #0x1
    e22c:	str	w0, [x5, #156]
    e230:	mov	w0, #0x1                   	// #1
    e234:	b	e168 <gelf_update_symshndx@@ELFUTILS_1.0+0x24>
    e238:	ldr	x6, [x0, #16]
    e23c:	mov	x7, #0x18                  	// #24
    e240:	udiv	x6, x6, x7
    e244:	cmp	x6, w2, uxtw
    e248:	b.ls	e190 <gelf_update_symshndx@@ELFUTILS_1.0+0x4c>  // b.plast
    e24c:	ldr	x0, [x0]
    e250:	smull	x2, w2, w7
    e254:	ldp	x6, x7, [x3]
    e258:	add	x2, x0, x2
    e25c:	stp	x6, x7, [x2]
    e260:	ldr	x0, [x3, #16]
    e264:	str	x0, [x2, #16]
    e268:	b	e21c <gelf_update_symshndx@@ELFUTILS_1.0+0xd8>
    e26c:	mov	w0, #0x0                   	// #0
    e270:	ret

000000000000e274 <gelf_update_versym@@ELFUTILS_1.0>:
    e274:	cbz	x0, e2dc <gelf_update_versym@@ELFUTILS_1.0+0x68>
    e278:	stp	x29, x30, [sp, #-16]!
    e27c:	mov	w3, w1
    e280:	mov	x29, sp
    e284:	ldr	x4, [x0, #16]
    e288:	cmp	x3, x4, lsr #1
    e28c:	b.cc	e2a4 <gelf_update_versym@@ELFUTILS_1.0+0x30>  // b.lo, b.ul, b.last
    e290:	mov	w0, #0x16                  	// #22
    e294:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e298:	mov	w0, #0x0                   	// #0
    e29c:	ldp	x29, x30, [sp], #16
    e2a0:	ret
    e2a4:	ldr	w3, [x0, #8]
    e2a8:	cmp	w3, #0x4
    e2ac:	b.eq	e2b8 <gelf_update_versym@@ELFUTILS_1.0+0x44>  // b.none
    e2b0:	mov	w0, #0x1f                  	// #31
    e2b4:	b	e294 <gelf_update_versym@@ELFUTILS_1.0+0x20>
    e2b8:	ldr	x3, [x0, #40]
    e2bc:	ldr	x0, [x0]
    e2c0:	ldrh	w2, [x2]
    e2c4:	strh	w2, [x0, w1, sxtw #1]
    e2c8:	ldr	w0, [x3, #156]
    e2cc:	orr	w0, w0, #0x1
    e2d0:	str	w0, [x3, #156]
    e2d4:	mov	w0, #0x1                   	// #1
    e2d8:	b	e29c <gelf_update_versym@@ELFUTILS_1.0+0x28>
    e2dc:	mov	w0, #0x0                   	// #0
    e2e0:	ret

000000000000e2e4 <gelf_update_verneed@@ELFUTILS_1.0>:
    e2e4:	cbz	x0, e358 <gelf_update_verneed@@ELFUTILS_1.0+0x74>
    e2e8:	stp	x29, x30, [sp, #-16]!
    e2ec:	mov	x29, sp
    e2f0:	tbnz	w1, #31, e308 <gelf_update_verneed@@ELFUTILS_1.0+0x24>
    e2f4:	ldr	x3, [x0, #16]
    e2f8:	sxtw	x1, w1
    e2fc:	add	x4, x1, #0x10
    e300:	cmp	x4, x3
    e304:	b.ls	e31c <gelf_update_verneed@@ELFUTILS_1.0+0x38>  // b.plast
    e308:	mov	w0, #0x16                  	// #22
    e30c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e310:	mov	w0, #0x0                   	// #0
    e314:	ldp	x29, x30, [sp], #16
    e318:	ret
    e31c:	ldr	w3, [x0, #8]
    e320:	cmp	w3, #0x11
    e324:	b.eq	e330 <gelf_update_verneed@@ELFUTILS_1.0+0x4c>  // b.none
    e328:	mov	w0, #0x1f                  	// #31
    e32c:	b	e30c <gelf_update_verneed@@ELFUTILS_1.0+0x28>
    e330:	ldp	x4, x5, [x2]
    e334:	ldr	x2, [x0]
    e338:	add	x1, x2, x1
    e33c:	stp	x4, x5, [x1]
    e340:	ldr	x1, [x0, #40]
    e344:	ldr	w0, [x1, #156]
    e348:	orr	w0, w0, #0x1
    e34c:	str	w0, [x1, #156]
    e350:	mov	w0, #0x1                   	// #1
    e354:	b	e314 <gelf_update_verneed@@ELFUTILS_1.0+0x30>
    e358:	mov	w0, #0x0                   	// #0
    e35c:	ret

000000000000e360 <gelf_update_vernaux@@ELFUTILS_1.0>:
    e360:	cbz	x0, e3d4 <gelf_update_vernaux@@ELFUTILS_1.0+0x74>
    e364:	stp	x29, x30, [sp, #-16]!
    e368:	mov	x29, sp
    e36c:	tbnz	w1, #31, e384 <gelf_update_vernaux@@ELFUTILS_1.0+0x24>
    e370:	ldr	x3, [x0, #16]
    e374:	sxtw	x1, w1
    e378:	add	x4, x1, #0x10
    e37c:	cmp	x4, x3
    e380:	b.ls	e398 <gelf_update_vernaux@@ELFUTILS_1.0+0x38>  // b.plast
    e384:	mov	w0, #0x16                  	// #22
    e388:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e38c:	mov	w0, #0x0                   	// #0
    e390:	ldp	x29, x30, [sp], #16
    e394:	ret
    e398:	ldr	w3, [x0, #8]
    e39c:	cmp	w3, #0x11
    e3a0:	b.eq	e3ac <gelf_update_vernaux@@ELFUTILS_1.0+0x4c>  // b.none
    e3a4:	mov	w0, #0x1f                  	// #31
    e3a8:	b	e388 <gelf_update_vernaux@@ELFUTILS_1.0+0x28>
    e3ac:	ldp	x4, x5, [x2]
    e3b0:	ldr	x2, [x0]
    e3b4:	add	x1, x2, x1
    e3b8:	stp	x4, x5, [x1]
    e3bc:	ldr	x1, [x0, #40]
    e3c0:	ldr	w0, [x1, #156]
    e3c4:	orr	w0, w0, #0x1
    e3c8:	str	w0, [x1, #156]
    e3cc:	mov	w0, #0x1                   	// #1
    e3d0:	b	e390 <gelf_update_vernaux@@ELFUTILS_1.0+0x30>
    e3d4:	mov	w0, #0x0                   	// #0
    e3d8:	ret

000000000000e3dc <gelf_update_verdef@@ELFUTILS_1.0>:
    e3dc:	cbz	x0, e458 <gelf_update_verdef@@ELFUTILS_1.0+0x7c>
    e3e0:	stp	x29, x30, [sp, #-16]!
    e3e4:	mov	x29, sp
    e3e8:	tbnz	w1, #31, e400 <gelf_update_verdef@@ELFUTILS_1.0+0x24>
    e3ec:	ldr	x3, [x0, #16]
    e3f0:	sxtw	x1, w1
    e3f4:	add	x4, x1, #0x14
    e3f8:	cmp	x4, x3
    e3fc:	b.ls	e414 <gelf_update_verdef@@ELFUTILS_1.0+0x38>  // b.plast
    e400:	mov	w0, #0x16                  	// #22
    e404:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e408:	mov	w0, #0x0                   	// #0
    e40c:	ldp	x29, x30, [sp], #16
    e410:	ret
    e414:	ldr	w3, [x0, #8]
    e418:	cmp	w3, #0xf
    e41c:	b.eq	e428 <gelf_update_verdef@@ELFUTILS_1.0+0x4c>  // b.none
    e420:	mov	w0, #0x1f                  	// #31
    e424:	b	e404 <gelf_update_verdef@@ELFUTILS_1.0+0x28>
    e428:	ldr	x3, [x0]
    e42c:	ldp	x4, x5, [x2]
    e430:	add	x1, x3, x1
    e434:	stp	x4, x5, [x1]
    e438:	ldr	w2, [x2, #16]
    e43c:	str	w2, [x1, #16]
    e440:	ldr	x1, [x0, #40]
    e444:	ldr	w0, [x1, #156]
    e448:	orr	w0, w0, #0x1
    e44c:	str	w0, [x1, #156]
    e450:	mov	w0, #0x1                   	// #1
    e454:	b	e40c <gelf_update_verdef@@ELFUTILS_1.0+0x30>
    e458:	mov	w0, #0x0                   	// #0
    e45c:	ret

000000000000e460 <gelf_update_verdaux@@ELFUTILS_1.0>:
    e460:	cbz	x0, e4d0 <gelf_update_verdaux@@ELFUTILS_1.0+0x70>
    e464:	stp	x29, x30, [sp, #-16]!
    e468:	mov	x29, sp
    e46c:	tbnz	w1, #31, e484 <gelf_update_verdaux@@ELFUTILS_1.0+0x24>
    e470:	ldr	x3, [x0, #16]
    e474:	sxtw	x1, w1
    e478:	add	x4, x1, #0x8
    e47c:	cmp	x4, x3
    e480:	b.ls	e498 <gelf_update_verdaux@@ELFUTILS_1.0+0x38>  // b.plast
    e484:	mov	w0, #0x16                  	// #22
    e488:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e48c:	mov	w0, #0x0                   	// #0
    e490:	ldp	x29, x30, [sp], #16
    e494:	ret
    e498:	ldr	w3, [x0, #8]
    e49c:	cmp	w3, #0xf
    e4a0:	b.eq	e4ac <gelf_update_verdaux@@ELFUTILS_1.0+0x4c>  // b.none
    e4a4:	mov	w0, #0x1f                  	// #31
    e4a8:	b	e488 <gelf_update_verdaux@@ELFUTILS_1.0+0x28>
    e4ac:	ldr	x3, [x2]
    e4b0:	ldr	x2, [x0]
    e4b4:	str	x3, [x2, x1]
    e4b8:	ldr	x1, [x0, #40]
    e4bc:	ldr	w0, [x1, #156]
    e4c0:	orr	w0, w0, #0x1
    e4c4:	str	w0, [x1, #156]
    e4c8:	mov	w0, #0x1                   	// #1
    e4cc:	b	e490 <gelf_update_verdaux@@ELFUTILS_1.0+0x30>
    e4d0:	mov	w0, #0x0                   	// #0
    e4d4:	ret
    e4d8:	ldr	x2, [x0, #72]
    e4dc:	cbnz	x2, e4fc <gelf_update_verdaux@@ELFUTILS_1.0+0x9c>
    e4e0:	stp	x29, x30, [sp, #-16]!
    e4e4:	mov	w0, #0x1a                  	// #26
    e4e8:	mov	x29, sp
    e4ec:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e4f0:	mov	w0, #0xffffffff            	// #-1
    e4f4:	ldp	x29, x30, [sp], #16
    e4f8:	ret
    e4fc:	ldr	w3, [x0, #32]
    e500:	cmp	w3, #0x1
    e504:	b.ne	e534 <gelf_update_verdaux@@ELFUTILS_1.0+0xd4>  // b.any
    e508:	ldrh	w2, [x2, #44]
    e50c:	str	x2, [x1]
    e510:	mov	x4, #0xffff                	// #65535
    e514:	cmp	x2, x4
    e518:	b.ne	e52c <gelf_update_verdaux@@ELFUTILS_1.0+0xcc>  // b.any
    e51c:	ldr	w2, [x0, #200]
    e520:	cmp	w3, #0x1
    e524:	b.ne	e53c <gelf_update_verdaux@@ELFUTILS_1.0+0xdc>  // b.any
    e528:	cbnz	w2, e550 <gelf_update_verdaux@@ELFUTILS_1.0+0xf0>
    e52c:	mov	w0, #0x0                   	// #0
    e530:	ret
    e534:	ldrh	w2, [x2, #56]
    e538:	b	e50c <gelf_update_verdaux@@ELFUTILS_1.0+0xac>
    e53c:	cbz	w2, e52c <gelf_update_verdaux@@ELFUTILS_1.0+0xcc>
    e540:	ldr	x0, [x0, #360]
    e544:	cbz	x0, e52c <gelf_update_verdaux@@ELFUTILS_1.0+0xcc>
    e548:	ldr	w0, [x0, #44]
    e54c:	b	e55c <gelf_update_verdaux@@ELFUTILS_1.0+0xfc>
    e550:	ldr	x0, [x0, #360]
    e554:	cbz	x0, e52c <gelf_update_verdaux@@ELFUTILS_1.0+0xcc>
    e558:	ldr	w0, [x0, #28]
    e55c:	str	x0, [x1]
    e560:	b	e52c <gelf_update_verdaux@@ELFUTILS_1.0+0xcc>
    e564:	stp	x29, x30, [sp, #-32]!
    e568:	mov	x29, sp
    e56c:	stp	x19, x20, [sp, #16]
    e570:	mov	x19, x0
    e574:	mov	x20, x1
    e578:	bl	e4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
    e57c:	ldr	x1, [x19, #88]
    e580:	cbnz	x1, e5a0 <gelf_update_verdaux@@ELFUTILS_1.0+0x140>
    e584:	ldr	w1, [x19, #32]
    e588:	ldr	x2, [x19, #72]
    e58c:	cmp	w1, #0x1
    e590:	b.ne	e5ac <gelf_update_verdaux@@ELFUTILS_1.0+0x14c>  // b.any
    e594:	ldr	w4, [x2, #28]
    e598:	cbnz	x4, e5b4 <gelf_update_verdaux@@ELFUTILS_1.0+0x154>
    e59c:	str	xzr, [x20]
    e5a0:	ldp	x19, x20, [sp, #16]
    e5a4:	ldp	x29, x30, [sp], #32
    e5a8:	ret
    e5ac:	ldr	x4, [x2, #32]
    e5b0:	b	e598 <gelf_update_verdaux@@ELFUTILS_1.0+0x138>
    e5b4:	ldr	x2, [x19, #48]
    e5b8:	cmp	x2, x4
    e5bc:	b.hi	e5d0 <gelf_update_verdaux@@ELFUTILS_1.0+0x170>  // b.pmore
    e5c0:	mov	w0, #0x21                  	// #33
    e5c4:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e5c8:	mov	w0, #0xffffffff            	// #-1
    e5cc:	b	e5a0 <gelf_update_verdaux@@ELFUTILS_1.0+0x140>
    e5d0:	cmp	w1, #0x1
    e5d4:	mov	x3, #0x38                  	// #56
    e5d8:	mov	x1, #0x20                  	// #32
    e5dc:	csel	x1, x1, x3, eq  // eq = none
    e5e0:	ldr	x3, [x20]
    e5e4:	umulh	x5, x3, x1
    e5e8:	cbnz	x5, e5c0 <gelf_update_verdaux@@ELFUTILS_1.0+0x160>
    e5ec:	mul	x3, x3, x1
    e5f0:	sub	x2, x2, x4
    e5f4:	cmp	x2, x3
    e5f8:	b.cs	e5a0 <gelf_update_verdaux@@ELFUTILS_1.0+0x140>  // b.hs, b.nlast
    e5fc:	udiv	x2, x2, x1
    e600:	str	x2, [x20]
    e604:	b	e5a0 <gelf_update_verdaux@@ELFUTILS_1.0+0x140>

000000000000e608 <elf_getphdrnum@@ELFUTILS_1.6>:
    e608:	cbz	x0, e638 <elf_getphdrnum@@ELFUTILS_1.6+0x30>
    e60c:	ldr	w2, [x0, #24]
    e610:	cmp	w2, #0x3
    e614:	b.eq	e634 <elf_getphdrnum@@ELFUTILS_1.6+0x2c>  // b.none
    e618:	stp	x29, x30, [sp, #-16]!
    e61c:	mov	w0, #0x4                   	// #4
    e620:	mov	x29, sp
    e624:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e628:	mov	w0, #0xffffffff            	// #-1
    e62c:	ldp	x29, x30, [sp], #16
    e630:	ret
    e634:	b	e564 <gelf_update_verdaux@@ELFUTILS_1.0+0x104>
    e638:	mov	w0, #0xffffffff            	// #-1
    e63c:	ret
    e640:	cbz	x0, e6b4 <elf_getphdrnum@@ELFUTILS_1.6+0xac>
    e644:	mov	x2, x0
    e648:	ldr	w0, [x0, #24]
    e64c:	cmp	w0, #0x3
    e650:	b.eq	e670 <elf_getphdrnum@@ELFUTILS_1.6+0x68>  // b.none
    e654:	stp	x29, x30, [sp, #-16]!
    e658:	mov	w0, #0x4                   	// #4
    e65c:	mov	x29, sp
    e660:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e664:	mov	w0, #0xffffffff            	// #-1
    e668:	ldp	x29, x30, [sp], #16
    e66c:	ret
    e670:	ldr	x3, [x2, #96]
    e674:	ldr	w0, [x3]
    e678:	cbnz	w0, e688 <elf_getphdrnum@@ELFUTILS_1.6+0x80>
    e67c:	add	x2, x2, #0xc8
    e680:	cmp	x3, x2
    e684:	b.eq	e6ac <elf_getphdrnum@@ELFUTILS_1.6+0xa4>  // b.none
    e688:	sub	w0, w0, #0x1
    e68c:	mov	x2, #0xd0                  	// #208
    e690:	sxtw	x0, w0
    e694:	madd	x0, x0, x2, x3
    e698:	ldr	x0, [x0, #144]
    e69c:	add	x0, x0, #0x1
    e6a0:	str	x0, [x1]
    e6a4:	mov	w0, #0x0                   	// #0
    e6a8:	ret
    e6ac:	str	xzr, [x1]
    e6b0:	ret
    e6b4:	mov	w0, #0xffffffff            	// #-1
    e6b8:	ret

000000000000e6bc <elf_getshdrnum@@ELFUTILS_1.5>:
    e6bc:	cbz	x0, e6c4 <elf_getshdrnum@@ELFUTILS_1.5+0x8>
    e6c0:	b	e640 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
    e6c4:	mov	w0, #0xffffffff            	// #-1
    e6c8:	ret
    e6cc:	stp	x29, x30, [sp, #-64]!
    e6d0:	mov	x29, sp
    e6d4:	stp	x21, x22, [sp, #32]
    e6d8:	mov	w22, w0
    e6dc:	mov	x21, x2
    e6e0:	stp	x23, x24, [sp, #48]
    e6e4:	mov	x23, x1
    e6e8:	mov	x24, x3
    e6ec:	stp	x19, x20, [sp, #16]
    e6f0:	mov	x20, #0x0                   	// #0
    e6f4:	add	x3, x20, x24
    e6f8:	sub	x2, x21, x20
    e6fc:	add	x1, x23, x20
    e700:	mov	w0, w22
    e704:	bl	32a0 <pread@plt>
    e708:	mov	x19, x0
    e70c:	cmn	x0, #0x1
    e710:	b.ne	e730 <elf_getshdrnum@@ELFUTILS_1.5+0x74>  // b.any
    e714:	bl	3390 <__errno_location@plt>
    e718:	ldr	w0, [x0]
    e71c:	cmp	w0, #0x4
    e720:	b.ne	e73c <elf_getshdrnum@@ELFUTILS_1.5+0x80>  // b.any
    e724:	mov	x19, x20
    e728:	mov	x20, x19
    e72c:	b	e6f4 <elf_getshdrnum@@ELFUTILS_1.5+0x38>
    e730:	cmp	x0, #0x0
    e734:	b.gt	e754 <elf_getshdrnum@@ELFUTILS_1.5+0x98>
    e738:	csel	x19, x0, x20, ne  // ne = any
    e73c:	mov	x0, x19
    e740:	ldp	x19, x20, [sp, #16]
    e744:	ldp	x21, x22, [sp, #32]
    e748:	ldp	x23, x24, [sp, #48]
    e74c:	ldp	x29, x30, [sp], #64
    e750:	ret
    e754:	add	x19, x0, x20
    e758:	cmp	x19, x21
    e75c:	b.cc	e728 <elf_getshdrnum@@ELFUTILS_1.5+0x6c>  // b.lo, b.ul, b.last
    e760:	b	e73c <elf_getshdrnum@@ELFUTILS_1.5+0x80>

000000000000e764 <elf_getshdrstrndx@@ELFUTILS_1.5>:
    e764:	cbz	x0, e928 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1c4>
    e768:	stp	x29, x30, [sp, #-96]!
    e76c:	mov	x29, sp
    e770:	stp	x19, x20, [sp, #16]
    e774:	mov	x19, x0
    e778:	ldr	w0, [x0, #24]
    e77c:	cmp	w0, #0x3
    e780:	b.eq	e79c <elf_getshdrstrndx@@ELFUTILS_1.5+0x38>  // b.none
    e784:	mov	w0, #0x4                   	// #4
    e788:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e78c:	mov	w0, #0xffffffff            	// #-1
    e790:	ldp	x19, x20, [sp, #16]
    e794:	ldp	x29, x30, [sp], #96
    e798:	ret
    e79c:	ldr	x2, [x19, #72]
    e7a0:	cbnz	x2, e7ac <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
    e7a4:	mov	w0, #0x1a                  	// #26
    e7a8:	b	e788 <elf_getshdrstrndx@@ELFUTILS_1.5+0x24>
    e7ac:	ldr	w0, [x19, #32]
    e7b0:	mov	x20, x1
    e7b4:	mov	w1, #0xffff                	// #65535
    e7b8:	cmp	w0, #0x1
    e7bc:	b.ne	e7dc <elf_getshdrstrndx@@ELFUTILS_1.5+0x78>  // b.any
    e7c0:	ldrh	w0, [x2, #50]
    e7c4:	cmp	w0, w1
    e7c8:	b.ne	e80c <elf_getshdrstrndx@@ELFUTILS_1.5+0xa8>  // b.any
    e7cc:	ldr	w0, [x19, #200]
    e7d0:	cbnz	w0, e800 <elf_getshdrstrndx@@ELFUTILS_1.5+0x9c>
    e7d4:	mov	w0, #0x20                  	// #32
    e7d8:	b	e788 <elf_getshdrstrndx@@ELFUTILS_1.5+0x24>
    e7dc:	ldrh	w0, [x2, #62]
    e7e0:	cmp	w0, w1
    e7e4:	b.ne	e80c <elf_getshdrstrndx@@ELFUTILS_1.5+0xa8>  // b.any
    e7e8:	ldr	w0, [x19, #200]
    e7ec:	cbz	w0, e7d4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x70>
    e7f0:	ldr	x0, [x19, #360]
    e7f4:	cbz	x0, e8a4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x140>
    e7f8:	ldr	w0, [x0, #40]
    e7fc:	b	e80c <elf_getshdrstrndx@@ELFUTILS_1.5+0xa8>
    e800:	ldr	x0, [x19, #360]
    e804:	cbz	x0, e81c <elf_getshdrstrndx@@ELFUTILS_1.5+0xb8>
    e808:	ldr	w0, [x0, #24]
    e80c:	mov	w0, w0
    e810:	str	x0, [x20]
    e814:	mov	w0, #0x0                   	// #0
    e818:	b	e790 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2c>
    e81c:	ldr	x0, [x19]
    e820:	ldr	w3, [x2, #32]
    e824:	cbz	x0, e85c <elf_getshdrstrndx@@ELFUTILS_1.5+0xf8>
    e828:	ldrb	w1, [x2, #5]
    e82c:	cmp	w1, #0x1
    e830:	b.ne	e85c <elf_getshdrstrndx@@ELFUTILS_1.5+0xf8>  // b.any
    e834:	ldr	x1, [x19, #40]
    e838:	add	x1, x3, x1
    e83c:	add	x0, x0, x1
    e840:	tst	x0, #0x3
    e844:	b.ne	e85c <elf_getshdrstrndx@@ELFUTILS_1.5+0xf8>  // b.any
    e848:	ldr	x1, [x19, #48]
    e84c:	sub	x3, x1, x3
    e850:	cmp	x3, #0x27
    e854:	b.hi	e808 <elf_getshdrstrndx@@ELFUTILS_1.5+0xa4>  // b.pmore
    e858:	b	e7d4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x70>
    e85c:	ldr	w0, [x19, #36]
    e860:	add	x1, sp, #0x20
    e864:	mov	x2, #0x28                  	// #40
    e868:	bl	e6cc <elf_getshdrnum@@ELFUTILS_1.5+0x10>
    e86c:	cmp	x0, #0x28
    e870:	b.eq	e880 <elf_getshdrstrndx@@ELFUTILS_1.5+0x11c>  // b.none
    e874:	tbz	x0, #63, e920 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1bc>
    e878:	mov	w0, #0x9                   	// #9
    e87c:	b	e788 <elf_getshdrstrndx@@ELFUTILS_1.5+0x24>
    e880:	ldr	x0, [x19, #72]
    e884:	ldrb	w0, [x0, #5]
    e888:	cmp	w0, #0x1
    e88c:	b.eq	e89c <elf_getshdrstrndx@@ELFUTILS_1.5+0x138>  // b.none
    e890:	ldr	w0, [sp, #56]
    e894:	rev	w0, w0
    e898:	str	w0, [sp, #56]
    e89c:	ldr	w0, [sp, #56]
    e8a0:	b	e80c <elf_getshdrstrndx@@ELFUTILS_1.5+0xa8>
    e8a4:	ldr	x0, [x19]
    e8a8:	ldr	x3, [x2, #40]
    e8ac:	cbz	x0, e8e4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x180>
    e8b0:	ldrb	w1, [x2, #5]
    e8b4:	cmp	w1, #0x1
    e8b8:	b.ne	e8e4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x180>  // b.any
    e8bc:	ldr	x1, [x19, #40]
    e8c0:	add	x1, x3, x1
    e8c4:	add	x0, x0, x1
    e8c8:	tst	x0, #0x7
    e8cc:	b.ne	e8e4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x180>  // b.any
    e8d0:	ldr	x1, [x19, #48]
    e8d4:	sub	x3, x1, x3
    e8d8:	cmp	x3, #0x3f
    e8dc:	b.hi	e7f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x94>  // b.pmore
    e8e0:	b	e7d4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x70>
    e8e4:	ldr	w0, [x19, #36]
    e8e8:	add	x1, sp, #0x20
    e8ec:	mov	x2, #0x40                  	// #64
    e8f0:	bl	e6cc <elf_getshdrnum@@ELFUTILS_1.5+0x10>
    e8f4:	cmp	x0, #0x40
    e8f8:	b.ne	e874 <elf_getshdrstrndx@@ELFUTILS_1.5+0x110>  // b.any
    e8fc:	ldr	x0, [x19, #72]
    e900:	ldrb	w0, [x0, #5]
    e904:	cmp	w0, #0x1
    e908:	b.eq	e918 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1b4>  // b.none
    e90c:	ldr	w0, [sp, #72]
    e910:	rev	w0, w0
    e914:	str	w0, [sp, #72]
    e918:	ldr	w0, [sp, #72]
    e91c:	b	e80c <elf_getshdrstrndx@@ELFUTILS_1.5+0xa8>
    e920:	mov	w0, #0xa                   	// #10
    e924:	b	e788 <elf_getshdrstrndx@@ELFUTILS_1.5+0x24>
    e928:	mov	w0, #0xffffffff            	// #-1
    e92c:	ret

000000000000e930 <gelf_checksum@@ELFUTILS_1.0>:
    e930:	cbz	x0, e948 <gelf_checksum@@ELFUTILS_1.0+0x18>
    e934:	ldr	w1, [x0, #32]
    e938:	cmp	w1, #0x1
    e93c:	b.ne	e944 <gelf_checksum@@ELFUTILS_1.0+0x14>  // b.any
    e940:	b	e950 <elf32_checksum@@ELFUTILS_1.0>
    e944:	b	eadc <elf64_checksum@@ELFUTILS_1.0>
    e948:	mov	x0, #0xffffffffffffffff    	// #-1
    e94c:	ret

000000000000e950 <elf32_checksum@@ELFUTILS_1.0>:
    e950:	stp	x29, x30, [sp, #-160]!
    e954:	mov	x29, sp
    e958:	stp	x19, x20, [sp, #16]
    e95c:	stp	x21, x22, [sp, #32]
    e960:	stp	x23, x24, [sp, #48]
    e964:	stp	x25, x26, [sp, #64]
    e968:	cbz	x0, e984 <elf32_checksum@@ELFUTILS_1.0+0x34>
    e96c:	mov	x22, x0
    e970:	add	x1, sp, #0x58
    e974:	bl	e764 <elf_getshdrstrndx@@ELFUTILS_1.5>
    e978:	tbz	w0, #31, e98c <elf32_checksum@@ELFUTILS_1.0+0x3c>
    e97c:	mov	w0, #0x4                   	// #4
    e980:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    e984:	mov	x20, #0xffffffffffffffff    	// #-1
    e988:	b	e9bc <elf32_checksum@@ELFUTILS_1.0+0x6c>
    e98c:	ldr	x23, [x22, #72]
    e990:	adrp	x24, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    e994:	add	x26, sp, #0x60
    e998:	add	x24, x24, #0xf0e
    e99c:	mov	x20, #0x0                   	// #0
    e9a0:	mov	x21, #0x0                   	// #0
    e9a4:	ldrb	w25, [x23, #5]
    e9a8:	mov	x1, x21
    e9ac:	mov	x0, x22
    e9b0:	bl	7e18 <elf_nextscn@@ELFUTILS_1.0>
    e9b4:	mov	x21, x0
    e9b8:	cbnz	x0, e9d8 <elf32_checksum@@ELFUTILS_1.0+0x88>
    e9bc:	mov	x0, x20
    e9c0:	ldp	x19, x20, [sp, #16]
    e9c4:	ldp	x21, x22, [sp, #32]
    e9c8:	ldp	x23, x24, [sp, #48]
    e9cc:	ldp	x25, x26, [sp, #64]
    e9d0:	ldp	x29, x30, [sp], #160
    e9d4:	ret
    e9d8:	mov	x1, x26
    e9dc:	bl	8940 <gelf_getshdr@@ELFUTILS_1.0>
    e9e0:	mov	x19, x0
    e9e4:	cbnz	x0, e9f0 <elf32_checksum@@ELFUTILS_1.0+0xa0>
    e9e8:	mov	w0, #0x20                  	// #32
    e9ec:	b	e980 <elf32_checksum@@ELFUTILS_1.0+0x30>
    e9f0:	ldr	x0, [x0, #8]
    e9f4:	tbz	w0, #1, ea54 <elf32_checksum@@ELFUTILS_1.0+0x104>
    e9f8:	ldr	w0, [x19, #4]
    e9fc:	cmp	w0, #0x8
    ea00:	b.eq	e9a8 <elf32_checksum@@ELFUTILS_1.0+0x58>  // b.none
    ea04:	mov	x0, x21
    ea08:	mov	x1, #0x0                   	// #0
    ea0c:	bl	8d64 <elf_rawdata@@ELFUTILS_1.0>
    ea10:	mov	x19, x0
    ea14:	cbnz	x0, ea3c <elf32_checksum@@ELFUTILS_1.0+0xec>
    ea18:	mov	x1, x19
    ea1c:	mov	x0, x21
    ea20:	bl	947c <elf_getdata@@ELFUTILS_1.0>
    ea24:	mov	x19, x0
    ea28:	cbz	x0, e9a8 <elf32_checksum@@ELFUTILS_1.0+0x58>
    ea2c:	cmp	w25, #0x1
    ea30:	b.eq	ea3c <elf32_checksum@@ELFUTILS_1.0+0xec>  // b.none
    ea34:	ldr	w1, [x19, #8]
    ea38:	cbnz	w1, eaa0 <elf32_checksum@@ELFUTILS_1.0+0x150>
    ea3c:	ldr	x1, [x19]
    ea40:	mov	w0, w20
    ea44:	ldr	x2, [x19, #16]
    ea48:	bl	ec68 <elf64_checksum@@ELFUTILS_1.0+0x18c>
    ea4c:	mov	w20, w0
    ea50:	b	ea18 <elf32_checksum@@ELFUTILS_1.0+0xc8>
    ea54:	ldr	w0, [x19, #4]
    ea58:	cmp	w0, #0x7
    ea5c:	b.eq	ea04 <elf32_checksum@@ELFUTILS_1.0+0xb4>  // b.none
    ea60:	cmp	w0, #0x1
    ea64:	b.ne	e9a8 <elf32_checksum@@ELFUTILS_1.0+0x58>  // b.any
    ea68:	ldr	w2, [x19]
    ea6c:	mov	x0, x22
    ea70:	ldr	x1, [sp, #88]
    ea74:	bl	8b88 <elf_strptr@@ELFUTILS_1.0>
    ea78:	cbz	x0, e9f8 <elf32_checksum@@ELFUTILS_1.0+0xa8>
    ea7c:	ldr	w2, [x19]
    ea80:	mov	x0, x22
    ea84:	ldr	x1, [sp, #88]
    ea88:	bl	8b88 <elf_strptr@@ELFUTILS_1.0>
    ea8c:	mov	x1, x24
    ea90:	mov	x2, #0xd                   	// #13
    ea94:	bl	3130 <strncmp@plt>
    ea98:	cbz	w0, e9f8 <elf32_checksum@@ELFUTILS_1.0+0xa8>
    ea9c:	b	e9a8 <elf32_checksum@@ELFUTILS_1.0+0x58>
    eaa0:	ldrb	w2, [x23, #5]
    eaa4:	mov	x1, x19
    eaa8:	bl	4ebc <elf32_xlatetof@@ELFUTILS_1.0>
    eaac:	cbz	x0, e984 <elf32_checksum@@ELFUTILS_1.0+0x34>
    eab0:	ldr	x1, [x19]
    eab4:	mov	w0, w20
    eab8:	ldr	x2, [x19, #16]
    eabc:	bl	ec68 <elf64_checksum@@ELFUTILS_1.0+0x18c>
    eac0:	mov	w20, w0
    eac4:	ldrb	w2, [x23, #5]
    eac8:	mov	x1, x19
    eacc:	mov	x0, x19
    ead0:	bl	4f80 <elf32_xlatetom@@ELFUTILS_1.0>
    ead4:	cbnz	x0, ea18 <elf32_checksum@@ELFUTILS_1.0+0xc8>
    ead8:	b	e984 <elf32_checksum@@ELFUTILS_1.0+0x34>

000000000000eadc <elf64_checksum@@ELFUTILS_1.0>:
    eadc:	stp	x29, x30, [sp, #-160]!
    eae0:	mov	x29, sp
    eae4:	stp	x19, x20, [sp, #16]
    eae8:	stp	x21, x22, [sp, #32]
    eaec:	stp	x23, x24, [sp, #48]
    eaf0:	stp	x25, x26, [sp, #64]
    eaf4:	cbz	x0, eb10 <elf64_checksum@@ELFUTILS_1.0+0x34>
    eaf8:	mov	x22, x0
    eafc:	add	x1, sp, #0x58
    eb00:	bl	e764 <elf_getshdrstrndx@@ELFUTILS_1.5>
    eb04:	tbz	w0, #31, eb18 <elf64_checksum@@ELFUTILS_1.0+0x3c>
    eb08:	mov	w0, #0x4                   	// #4
    eb0c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    eb10:	mov	x20, #0xffffffffffffffff    	// #-1
    eb14:	b	eb48 <elf64_checksum@@ELFUTILS_1.0+0x6c>
    eb18:	ldr	x23, [x22, #72]
    eb1c:	adrp	x24, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    eb20:	add	x26, sp, #0x60
    eb24:	add	x24, x24, #0xf0e
    eb28:	mov	x20, #0x0                   	// #0
    eb2c:	mov	x21, #0x0                   	// #0
    eb30:	ldrb	w25, [x23, #5]
    eb34:	mov	x1, x21
    eb38:	mov	x0, x22
    eb3c:	bl	7e18 <elf_nextscn@@ELFUTILS_1.0>
    eb40:	mov	x21, x0
    eb44:	cbnz	x0, eb64 <elf64_checksum@@ELFUTILS_1.0+0x88>
    eb48:	mov	x0, x20
    eb4c:	ldp	x19, x20, [sp, #16]
    eb50:	ldp	x21, x22, [sp, #32]
    eb54:	ldp	x23, x24, [sp, #48]
    eb58:	ldp	x25, x26, [sp, #64]
    eb5c:	ldp	x29, x30, [sp], #160
    eb60:	ret
    eb64:	mov	x1, x26
    eb68:	bl	8940 <gelf_getshdr@@ELFUTILS_1.0>
    eb6c:	mov	x19, x0
    eb70:	cbnz	x0, eb7c <elf64_checksum@@ELFUTILS_1.0+0xa0>
    eb74:	mov	w0, #0x20                  	// #32
    eb78:	b	eb0c <elf64_checksum@@ELFUTILS_1.0+0x30>
    eb7c:	ldr	x0, [x0, #8]
    eb80:	tbz	w0, #1, ebe0 <elf64_checksum@@ELFUTILS_1.0+0x104>
    eb84:	ldr	w0, [x19, #4]
    eb88:	cmp	w0, #0x8
    eb8c:	b.eq	eb34 <elf64_checksum@@ELFUTILS_1.0+0x58>  // b.none
    eb90:	mov	x0, x21
    eb94:	mov	x1, #0x0                   	// #0
    eb98:	bl	8d64 <elf_rawdata@@ELFUTILS_1.0>
    eb9c:	mov	x19, x0
    eba0:	cbnz	x0, ebc8 <elf64_checksum@@ELFUTILS_1.0+0xec>
    eba4:	mov	x1, x19
    eba8:	mov	x0, x21
    ebac:	bl	947c <elf_getdata@@ELFUTILS_1.0>
    ebb0:	mov	x19, x0
    ebb4:	cbz	x0, eb34 <elf64_checksum@@ELFUTILS_1.0+0x58>
    ebb8:	cmp	w25, #0x1
    ebbc:	b.eq	ebc8 <elf64_checksum@@ELFUTILS_1.0+0xec>  // b.none
    ebc0:	ldr	w1, [x19, #8]
    ebc4:	cbnz	w1, ec2c <elf64_checksum@@ELFUTILS_1.0+0x150>
    ebc8:	ldr	x1, [x19]
    ebcc:	mov	w0, w20
    ebd0:	ldr	x2, [x19, #16]
    ebd4:	bl	ec68 <elf64_checksum@@ELFUTILS_1.0+0x18c>
    ebd8:	mov	w20, w0
    ebdc:	b	eba4 <elf64_checksum@@ELFUTILS_1.0+0xc8>
    ebe0:	ldr	w0, [x19, #4]
    ebe4:	cmp	w0, #0x7
    ebe8:	b.eq	eb90 <elf64_checksum@@ELFUTILS_1.0+0xb4>  // b.none
    ebec:	cmp	w0, #0x1
    ebf0:	b.ne	eb34 <elf64_checksum@@ELFUTILS_1.0+0x58>  // b.any
    ebf4:	ldr	w2, [x19]
    ebf8:	mov	x0, x22
    ebfc:	ldr	x1, [sp, #88]
    ec00:	bl	8b88 <elf_strptr@@ELFUTILS_1.0>
    ec04:	cbz	x0, eb84 <elf64_checksum@@ELFUTILS_1.0+0xa8>
    ec08:	ldr	w2, [x19]
    ec0c:	mov	x0, x22
    ec10:	ldr	x1, [sp, #88]
    ec14:	bl	8b88 <elf_strptr@@ELFUTILS_1.0>
    ec18:	mov	x1, x24
    ec1c:	mov	x2, #0xd                   	// #13
    ec20:	bl	3130 <strncmp@plt>
    ec24:	cbz	w0, eb84 <elf64_checksum@@ELFUTILS_1.0+0xa8>
    ec28:	b	eb34 <elf64_checksum@@ELFUTILS_1.0+0x58>
    ec2c:	ldrb	w2, [x23, #5]
    ec30:	mov	x1, x19
    ec34:	bl	5050 <elf64_xlatetof@@ELFUTILS_1.0>
    ec38:	cbz	x0, eb10 <elf64_checksum@@ELFUTILS_1.0+0x34>
    ec3c:	ldr	x1, [x19]
    ec40:	mov	w0, w20
    ec44:	ldr	x2, [x19, #16]
    ec48:	bl	ec68 <elf64_checksum@@ELFUTILS_1.0+0x18c>
    ec4c:	mov	w20, w0
    ec50:	ldrb	w2, [x23, #5]
    ec54:	mov	x1, x19
    ec58:	mov	x0, x19
    ec5c:	bl	5118 <elf64_xlatetom@@ELFUTILS_1.0>
    ec60:	cbnz	x0, eba4 <elf64_checksum@@ELFUTILS_1.0+0xc8>
    ec64:	b	eb10 <elf64_checksum@@ELFUTILS_1.0+0x34>
    ec68:	adrp	x4, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    ec6c:	mvn	w0, w0
    ec70:	add	x2, x1, x2
    ec74:	add	x4, x4, #0xf1c
    ec78:	cmp	x1, x2
    ec7c:	b.cc	ec88 <elf64_checksum@@ELFUTILS_1.0+0x1ac>  // b.lo, b.ul, b.last
    ec80:	mvn	w0, w0
    ec84:	ret
    ec88:	ldrb	w3, [x1], #1
    ec8c:	eor	w3, w3, w0
    ec90:	and	x3, x3, #0xff
    ec94:	ldr	w3, [x4, x3, lsl #2]
    ec98:	eor	w0, w3, w0, lsr #8
    ec9c:	b	ec78 <elf64_checksum@@ELFUTILS_1.0+0x19c>
    eca0:	orr	x0, x0, #0x1
    eca4:	mov	x1, #0x9                   	// #9
    eca8:	mov	x2, #0x3                   	// #3
    ecac:	udiv	x3, x0, x2
    ecb0:	cmp	x0, x1
    ecb4:	msub	x3, x3, x2, x0
    ecb8:	b.ls	ece0 <elf64_checksum@@ELFUTILS_1.0+0x204>  // b.plast
    ecbc:	cbnz	x3, ecc8 <elf64_checksum@@ELFUTILS_1.0+0x1ec>
    ecc0:	add	x0, x0, #0x2
    ecc4:	b	eca4 <elf64_checksum@@ELFUTILS_1.0+0x1c8>
    ecc8:	add	x3, x2, #0x1
    eccc:	lsl	x3, x3, #2
    ecd0:	adds	x1, x3, x1
    ecd4:	b.cs	ece4 <elf64_checksum@@ELFUTILS_1.0+0x208>  // b.hs, b.nlast
    ecd8:	add	x2, x2, #0x2
    ecdc:	b	ecac <elf64_checksum@@ELFUTILS_1.0+0x1d0>
    ece0:	cbz	x3, ecc0 <elf64_checksum@@ELFUTILS_1.0+0x1e4>
    ece4:	ret

000000000000ece8 <elf_clone@@ELFUTILS_1.0>:
    ece8:	stp	x29, x30, [sp, #-96]!
    ecec:	mov	x29, sp
    ecf0:	stp	x19, x20, [sp, #16]
    ecf4:	stp	x21, x22, [sp, #32]
    ecf8:	stp	x23, x24, [sp, #48]
    ecfc:	stp	x25, x26, [sp, #64]
    ed00:	str	x27, [sp, #80]
    ed04:	cbz	x0, eda4 <elf_clone@@ELFUTILS_1.0+0xbc>
    ed08:	cmp	w1, #0xc
    ed0c:	b.ne	eda4 <elf_clone@@ELFUTILS_1.0+0xbc>  // b.any
    ed10:	mov	x20, x0
    ed14:	mov	w1, #0xd0                  	// #208
    ed18:	mov	x0, #0x108                 	// #264
    ed1c:	ldr	w21, [x20, #204]
    ed20:	ldr	w26, [x20, #36]
    ed24:	ldp	x23, x22, [x20]
    ed28:	umaddl	x1, w21, w1, x0
    ed2c:	mov	x0, #0x1                   	// #1
    ed30:	ldr	x27, [x20, #24]
    ed34:	ldp	x25, x24, [x20, #40]
    ed38:	bl	3180 <calloc@plt>
    ed3c:	mov	x19, x0
    ed40:	cbnz	x0, ed6c <elf_clone@@ELFUTILS_1.0+0x84>
    ed44:	mov	w0, #0x8                   	// #8
    ed48:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    ed4c:	mov	x0, x19
    ed50:	ldp	x19, x20, [sp, #16]
    ed54:	ldp	x21, x22, [sp, #32]
    ed58:	ldp	x23, x24, [sp, #48]
    ed5c:	ldp	x25, x26, [sp, #64]
    ed60:	ldr	x27, [sp, #80]
    ed64:	ldp	x29, x30, [sp], #96
    ed68:	ret
    ed6c:	mov	x0, #0x100000001           	// #4294967297
    ed70:	str	x0, [x19, #56]
    ed74:	mov	w0, #0xa                   	// #10
    ed78:	str	w0, [x19, #112]
    ed7c:	add	x0, x19, #0xc8
    ed80:	str	x0, [x19, #96]
    ed84:	ldr	w0, [x20, #32]
    ed88:	stp	x23, x22, [x19]
    ed8c:	str	x27, [x19, #24]
    ed90:	str	w0, [x19, #32]
    ed94:	str	w26, [x19, #36]
    ed98:	stp	x25, x24, [x19, #40]
    ed9c:	str	w21, [x19, #204]
    eda0:	b	ed4c <elf_clone@@ELFUTILS_1.0+0x64>
    eda4:	mov	x19, #0x0                   	// #0
    eda8:	b	ed4c <elf_clone@@ELFUTILS_1.0+0x64>

000000000000edac <gelf_getlib@@ELFUTILS_1.1>:
    edac:	cbz	x0, ee18 <gelf_getlib@@ELFUTILS_1.1+0x6c>
    edb0:	stp	x29, x30, [sp, #-16]!
    edb4:	mov	x29, sp
    edb8:	ldr	w5, [x0, #8]
    edbc:	cmp	w5, #0x16
    edc0:	b.eq	edd8 <gelf_getlib@@ELFUTILS_1.1+0x2c>  // b.none
    edc4:	mov	w0, #0x4                   	// #4
    edc8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    edcc:	mov	x0, #0x0                   	// #0
    edd0:	ldp	x29, x30, [sp], #16
    edd4:	ret
    edd8:	ldr	x3, [x0, #16]
    eddc:	mov	x4, #0x14                  	// #20
    ede0:	udiv	x3, x3, x4
    ede4:	cmp	x3, w1, uxtw
    ede8:	b.hi	edf4 <gelf_getlib@@ELFUTILS_1.1+0x48>  // b.pmore
    edec:	mov	w0, w5
    edf0:	b	edc8 <gelf_getlib@@ELFUTILS_1.1+0x1c>
    edf4:	ldr	x0, [x0]
    edf8:	smull	x1, w1, w4
    edfc:	add	x1, x0, x1
    ee00:	ldp	x4, x5, [x1]
    ee04:	stp	x4, x5, [x2]
    ee08:	ldr	w0, [x1, #16]
    ee0c:	str	w0, [x2, #16]
    ee10:	mov	x0, x2
    ee14:	b	edd0 <gelf_getlib@@ELFUTILS_1.1+0x24>
    ee18:	ret

000000000000ee1c <gelf_update_lib@@ELFUTILS_1.1>:
    ee1c:	cbz	x0, ee94 <gelf_update_lib@@ELFUTILS_1.1+0x78>
    ee20:	stp	x29, x30, [sp, #-16]!
    ee24:	mov	x3, x0
    ee28:	mov	x29, sp
    ee2c:	ldr	w0, [x0, #8]
    ee30:	cmp	w0, #0x16
    ee34:	b.eq	ee4c <gelf_update_lib@@ELFUTILS_1.1+0x30>  // b.none
    ee38:	mov	w0, #0x1f                  	// #31
    ee3c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    ee40:	mov	w0, #0x0                   	// #0
    ee44:	ldp	x29, x30, [sp], #16
    ee48:	ret
    ee4c:	ldr	x4, [x3, #16]
    ee50:	mov	x6, #0x14                  	// #20
    ee54:	ldr	x5, [x3, #40]
    ee58:	udiv	x4, x4, x6
    ee5c:	cmp	x4, w1, uxtw
    ee60:	b.ls	ee3c <gelf_update_lib@@ELFUTILS_1.1+0x20>  // b.plast
    ee64:	ldr	x0, [x3]
    ee68:	smull	x1, w1, w6
    ee6c:	ldp	x6, x7, [x2]
    ee70:	add	x1, x0, x1
    ee74:	stp	x6, x7, [x1]
    ee78:	ldr	w0, [x2, #16]
    ee7c:	str	w0, [x1, #16]
    ee80:	ldr	w0, [x5, #156]
    ee84:	orr	w0, w0, #0x1
    ee88:	str	w0, [x5, #156]
    ee8c:	mov	w0, #0x1                   	// #1
    ee90:	b	ee44 <gelf_update_lib@@ELFUTILS_1.1+0x28>
    ee94:	mov	w0, #0x0                   	// #0
    ee98:	ret

000000000000ee9c <elf32_offscn@@ELFUTILS_1.1.1>:
    ee9c:	cbnz	x0, eea8 <elf32_offscn@@ELFUTILS_1.1.1+0xc>
    eea0:	mov	x0, #0x0                   	// #0
    eea4:	ret
    eea8:	stp	x29, x30, [sp, #-48]!
    eeac:	mov	x29, sp
    eeb0:	stp	x19, x20, [sp, #16]
    eeb4:	str	x21, [sp, #32]
    eeb8:	mov	w21, w1
    eebc:	ldr	w1, [x0, #24]
    eec0:	cmp	w1, #0x3
    eec4:	b.eq	eee4 <elf32_offscn@@ELFUTILS_1.1.1+0x48>  // b.none
    eec8:	mov	w0, #0x4                   	// #4
    eecc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    eed0:	mov	x0, #0x0                   	// #0
    eed4:	ldp	x19, x20, [sp, #16]
    eed8:	ldr	x21, [sp, #32]
    eedc:	ldp	x29, x30, [sp], #48
    eee0:	ret
    eee4:	ldr	w1, [x0, #200]
    eee8:	add	x19, x0, #0xc8
    eeec:	cbnz	w1, ef20 <elf32_offscn@@ELFUTILS_1.1.1+0x84>
    eef0:	mov	x20, #0x0                   	// #0
    eef4:	mov	x2, x19
    eef8:	mov	w1, #0x0                   	// #0
    eefc:	ldr	w4, [x2], #16
    ef00:	cmp	w4, w1
    ef04:	b.ne	ef38 <elf32_offscn@@ELFUTILS_1.1.1+0x9c>  // b.any
    ef08:	ldr	x19, [x19, #8]
    ef0c:	cbnz	x19, eef4 <elf32_offscn@@ELFUTILS_1.1.1+0x58>
    ef10:	mov	w0, #0x2b                  	// #43
    ef14:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    ef18:	mov	x0, x20
    ef1c:	b	eed4 <elf32_offscn@@ELFUTILS_1.1.1+0x38>
    ef20:	ldr	x1, [x0, #360]
    ef24:	cbnz	x1, eef0 <elf32_offscn@@ELFUTILS_1.1.1+0x54>
    ef28:	add	x0, x0, #0xd8
    ef2c:	bl	32e0 <elf32_getshdr@plt>
    ef30:	cbnz	x0, eef0 <elf32_offscn@@ELFUTILS_1.1.1+0x54>
    ef34:	b	eed0 <elf32_offscn@@ELFUTILS_1.1.1+0x34>
    ef38:	ldr	x3, [x2, #144]
    ef3c:	mov	x0, x2
    ef40:	ldr	w5, [x3, #16]
    ef44:	cmp	w5, w21
    ef48:	b.ne	ef70 <elf32_offscn@@ELFUTILS_1.1.1+0xd4>  // b.any
    ef4c:	ldr	w5, [x3, #20]
    ef50:	cbz	w5, ef60 <elf32_offscn@@ELFUTILS_1.1.1+0xc4>
    ef54:	ldr	w3, [x3, #4]
    ef58:	cmp	w3, #0x8
    ef5c:	b.ne	eed4 <elf32_offscn@@ELFUTILS_1.1.1+0x38>  // b.any
    ef60:	add	w1, w1, #0x1
    ef64:	add	x2, x2, #0xd0
    ef68:	mov	x20, x0
    ef6c:	b	ef00 <elf32_offscn@@ELFUTILS_1.1.1+0x64>
    ef70:	mov	x0, x20
    ef74:	b	ef60 <elf32_offscn@@ELFUTILS_1.1.1+0xc4>

000000000000ef78 <elf64_offscn@@ELFUTILS_1.1.1>:
    ef78:	cbnz	x0, ef84 <elf64_offscn@@ELFUTILS_1.1.1+0xc>
    ef7c:	mov	x0, #0x0                   	// #0
    ef80:	ret
    ef84:	stp	x29, x30, [sp, #-48]!
    ef88:	mov	x29, sp
    ef8c:	stp	x19, x20, [sp, #16]
    ef90:	str	x21, [sp, #32]
    ef94:	mov	x21, x1
    ef98:	ldr	w1, [x0, #24]
    ef9c:	cmp	w1, #0x3
    efa0:	b.eq	efc0 <elf64_offscn@@ELFUTILS_1.1.1+0x48>  // b.none
    efa4:	mov	w0, #0x4                   	// #4
    efa8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    efac:	mov	x0, #0x0                   	// #0
    efb0:	ldp	x19, x20, [sp, #16]
    efb4:	ldr	x21, [sp, #32]
    efb8:	ldp	x29, x30, [sp], #48
    efbc:	ret
    efc0:	ldr	w1, [x0, #200]
    efc4:	add	x19, x0, #0xc8
    efc8:	cbnz	w1, effc <elf64_offscn@@ELFUTILS_1.1.1+0x84>
    efcc:	mov	x20, #0x0                   	// #0
    efd0:	mov	x2, x19
    efd4:	mov	w1, #0x0                   	// #0
    efd8:	ldr	w4, [x2], #16
    efdc:	cmp	w4, w1
    efe0:	b.ne	f014 <elf64_offscn@@ELFUTILS_1.1.1+0x9c>  // b.any
    efe4:	ldr	x19, [x19, #8]
    efe8:	cbnz	x19, efd0 <elf64_offscn@@ELFUTILS_1.1.1+0x58>
    efec:	mov	w0, #0x2b                  	// #43
    eff0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    eff4:	mov	x0, x20
    eff8:	b	efb0 <elf64_offscn@@ELFUTILS_1.1.1+0x38>
    effc:	ldr	x1, [x0, #360]
    f000:	cbnz	x1, efcc <elf64_offscn@@ELFUTILS_1.1.1+0x54>
    f004:	add	x0, x0, #0xd8
    f008:	bl	3150 <elf64_getshdr@plt>
    f00c:	cbnz	x0, efcc <elf64_offscn@@ELFUTILS_1.1.1+0x54>
    f010:	b	efac <elf64_offscn@@ELFUTILS_1.1.1+0x34>
    f014:	ldr	x3, [x2, #144]
    f018:	mov	x0, x2
    f01c:	ldr	x5, [x3, #24]
    f020:	cmp	x5, x21
    f024:	b.ne	f04c <elf64_offscn@@ELFUTILS_1.1.1+0xd4>  // b.any
    f028:	ldr	x5, [x3, #32]
    f02c:	cbz	x5, f03c <elf64_offscn@@ELFUTILS_1.1.1+0xc4>
    f030:	ldr	w3, [x3, #4]
    f034:	cmp	w3, #0x8
    f038:	b.ne	efb0 <elf64_offscn@@ELFUTILS_1.1.1+0x38>  // b.any
    f03c:	add	w1, w1, #0x1
    f040:	add	x2, x2, #0xd0
    f044:	mov	x20, x0
    f048:	b	efdc <elf64_offscn@@ELFUTILS_1.1.1+0x64>
    f04c:	mov	x0, x20
    f050:	b	f03c <elf64_offscn@@ELFUTILS_1.1.1+0xc4>

000000000000f054 <gelf_offscn@@ELFUTILS_1.1.1>:
    f054:	ldr	w3, [x0, #32]
    f058:	cmp	w3, #0x1
    f05c:	b.ne	f06c <gelf_offscn@@ELFUTILS_1.1.1+0x18>  // b.any
    f060:	tst	x1, #0xffffffff00000000
    f064:	b.ne	f070 <gelf_offscn@@ELFUTILS_1.1.1+0x1c>  // b.any
    f068:	b	ee9c <elf32_offscn@@ELFUTILS_1.1.1>
    f06c:	b	ef78 <elf64_offscn@@ELFUTILS_1.1.1>
    f070:	stp	x29, x30, [sp, #-16]!
    f074:	mov	w0, #0x2b                  	// #43
    f078:	mov	x29, sp
    f07c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f080:	mov	x0, #0x0                   	// #0
    f084:	ldp	x29, x30, [sp], #16
    f088:	ret

000000000000f08c <elf_getaroff@@ELFUTILS_1.1.1>:
    f08c:	cbz	x0, f0e0 <elf_getaroff@@ELFUTILS_1.1.1+0x54>
    f090:	ldr	x1, [x0, #8]
    f094:	cbz	x1, f0e0 <elf_getaroff@@ELFUTILS_1.1.1+0x54>
    f098:	ldr	w2, [x1, #24]
    f09c:	cmp	w2, #0x1
    f0a0:	b.eq	f0cc <elf_getaroff@@ELFUTILS_1.1.1+0x40>  // b.none
    f0a4:	stp	x29, x30, [sp, #-16]!
    f0a8:	adrp	x3, 11000 <elf_compress_gnu@@ELFUTILS_1.7+0x1474>
    f0ac:	adrp	x1, 11000 <elf_compress_gnu@@ELFUTILS_1.7+0x1474>
    f0b0:	mov	x29, sp
    f0b4:	adrp	x0, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    f0b8:	add	x3, x3, #0x32b
    f0bc:	add	x1, x1, #0x31c
    f0c0:	add	x0, x0, #0x5b9
    f0c4:	mov	w2, #0x32                  	// #50
    f0c8:	bl	3380 <__assert_fail@plt>
    f0cc:	ldr	x0, [x0, #40]
    f0d0:	ldr	x1, [x1, #40]
    f0d4:	sub	x0, x0, #0x3c
    f0d8:	sub	x0, x0, x1
    f0dc:	ret
    f0e0:	mov	x0, #0x0                   	// #0
    f0e4:	ret

000000000000f0e8 <elf_gnu_hash@@ELFUTILS_1.2>:
    f0e8:	ldrb	w2, [x0]
    f0ec:	mov	x1, #0x1505                	// #5381
    f0f0:	cbnz	w2, f0fc <elf_gnu_hash@@ELFUTILS_1.2+0x14>
    f0f4:	mov	w0, w1
    f0f8:	ret
    f0fc:	add	x1, x1, x1, lsl #5
    f100:	add	x1, x1, w2, uxtb
    f104:	ldrb	w2, [x0, #1]!
    f108:	b	f0f0 <elf_gnu_hash@@ELFUTILS_1.2+0x8>

000000000000f10c <elf_scnshndx@@ELFUTILS_1.4>:
    f10c:	stp	x29, x30, [sp, #-96]!
    f110:	mov	x29, sp
    f114:	ldr	w1, [x0, #124]
    f118:	str	x19, [sp, #16]
    f11c:	mov	x19, x0
    f120:	cbnz	w1, f12c <elf_scnshndx@@ELFUTILS_1.4+0x20>
    f124:	add	x1, sp, #0x20
    f128:	bl	8940 <gelf_getshdr@@ELFUTILS_1.0>
    f12c:	ldr	w0, [x19, #124]
    f130:	ldr	x19, [sp, #16]
    f134:	ldp	x29, x30, [sp], #96
    f138:	ret

000000000000f13c <elf32_getchdr@@ELFUTILS_1.7>:
    f13c:	stp	x29, x30, [sp, #-32]!
    f140:	mov	x29, sp
    f144:	str	x19, [sp, #16]
    f148:	mov	x19, x0
    f14c:	bl	32e0 <elf32_getshdr@plt>
    f150:	cbnz	x0, f164 <elf32_getchdr@@ELFUTILS_1.7+0x28>
    f154:	mov	x0, #0x0                   	// #0
    f158:	ldr	x19, [sp, #16]
    f15c:	ldp	x29, x30, [sp], #32
    f160:	ret
    f164:	ldr	w1, [x0, #8]
    f168:	tbz	w1, #1, f178 <elf32_getchdr@@ELFUTILS_1.7+0x3c>
    f16c:	mov	w0, #0x2d                  	// #45
    f170:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f174:	b	f154 <elf32_getchdr@@ELFUTILS_1.7+0x18>
    f178:	ldr	w0, [x0, #4]
    f17c:	tst	w0, #0xfffffff7
    f180:	b.ne	f18c <elf32_getchdr@@ELFUTILS_1.7+0x50>  // b.any
    f184:	mov	w0, #0x2c                  	// #44
    f188:	b	f170 <elf32_getchdr@@ELFUTILS_1.7+0x34>
    f18c:	tbnz	w1, #11, f198 <elf32_getchdr@@ELFUTILS_1.7+0x5c>
    f190:	mov	w0, #0x2e                  	// #46
    f194:	b	f170 <elf32_getchdr@@ELFUTILS_1.7+0x34>
    f198:	mov	x0, x19
    f19c:	mov	x1, #0x0                   	// #0
    f1a0:	bl	3330 <elf_getdata@plt>
    f1a4:	cbz	x0, f154 <elf32_getchdr@@ELFUTILS_1.7+0x18>
    f1a8:	ldr	x1, [x0, #16]
    f1ac:	cmp	x1, #0xb
    f1b0:	b.ls	f1bc <elf32_getchdr@@ELFUTILS_1.7+0x80>  // b.plast
    f1b4:	ldr	x0, [x0]
    f1b8:	cbnz	x0, f158 <elf32_getchdr@@ELFUTILS_1.7+0x1c>
    f1bc:	mov	w0, #0x21                  	// #33
    f1c0:	b	f170 <elf32_getchdr@@ELFUTILS_1.7+0x34>

000000000000f1c4 <elf64_getchdr@@ELFUTILS_1.7>:
    f1c4:	stp	x29, x30, [sp, #-32]!
    f1c8:	mov	x29, sp
    f1cc:	str	x19, [sp, #16]
    f1d0:	mov	x19, x0
    f1d4:	bl	3150 <elf64_getshdr@plt>
    f1d8:	cbnz	x0, f1ec <elf64_getchdr@@ELFUTILS_1.7+0x28>
    f1dc:	mov	x0, #0x0                   	// #0
    f1e0:	ldr	x19, [sp, #16]
    f1e4:	ldp	x29, x30, [sp], #32
    f1e8:	ret
    f1ec:	ldr	x1, [x0, #8]
    f1f0:	tbz	w1, #1, f200 <elf64_getchdr@@ELFUTILS_1.7+0x3c>
    f1f4:	mov	w0, #0x2d                  	// #45
    f1f8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f1fc:	b	f1dc <elf64_getchdr@@ELFUTILS_1.7+0x18>
    f200:	ldr	w0, [x0, #4]
    f204:	tst	w0, #0xfffffff7
    f208:	b.ne	f214 <elf64_getchdr@@ELFUTILS_1.7+0x50>  // b.any
    f20c:	mov	w0, #0x2c                  	// #44
    f210:	b	f1f8 <elf64_getchdr@@ELFUTILS_1.7+0x34>
    f214:	tbnz	w1, #11, f220 <elf64_getchdr@@ELFUTILS_1.7+0x5c>
    f218:	mov	w0, #0x2e                  	// #46
    f21c:	b	f1f8 <elf64_getchdr@@ELFUTILS_1.7+0x34>
    f220:	mov	x0, x19
    f224:	mov	x1, #0x0                   	// #0
    f228:	bl	3330 <elf_getdata@plt>
    f22c:	cbz	x0, f1dc <elf64_getchdr@@ELFUTILS_1.7+0x18>
    f230:	ldr	x1, [x0, #16]
    f234:	cmp	x1, #0x17
    f238:	b.ls	f244 <elf64_getchdr@@ELFUTILS_1.7+0x80>  // b.plast
    f23c:	ldr	x0, [x0]
    f240:	cbnz	x0, f1e0 <elf64_getchdr@@ELFUTILS_1.7+0x1c>
    f244:	mov	w0, #0x21                  	// #33
    f248:	b	f1f8 <elf64_getchdr@@ELFUTILS_1.7+0x34>

000000000000f24c <gelf_getchdr@@ELFUTILS_1.7>:
    f24c:	stp	x29, x30, [sp, #-32]!
    f250:	mov	x29, sp
    f254:	str	x19, [sp, #16]
    f258:	cbnz	x0, f270 <gelf_getchdr@@ELFUTILS_1.7+0x24>
    f25c:	mov	x19, #0x0                   	// #0
    f260:	mov	x0, x19
    f264:	ldr	x19, [sp, #16]
    f268:	ldp	x29, x30, [sp], #32
    f26c:	ret
    f270:	mov	x19, x1
    f274:	cbnz	x1, f284 <gelf_getchdr@@ELFUTILS_1.7+0x38>
    f278:	mov	w0, #0x17                  	// #23
    f27c:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f280:	b	f260 <gelf_getchdr@@ELFUTILS_1.7+0x14>
    f284:	ldr	x1, [x0, #136]
    f288:	ldr	w1, [x1, #32]
    f28c:	cmp	w1, #0x1
    f290:	b.ne	f2b4 <gelf_getchdr@@ELFUTILS_1.7+0x68>  // b.any
    f294:	bl	30d0 <elf32_getchdr@plt>
    f298:	cbz	x0, f25c <gelf_getchdr@@ELFUTILS_1.7+0x10>
    f29c:	ldr	w1, [x0]
    f2a0:	str	w1, [x19]
    f2a4:	ldp	w1, w0, [x0, #4]
    f2a8:	str	x1, [x19, #8]
    f2ac:	str	x0, [x19, #16]
    f2b0:	b	f260 <gelf_getchdr@@ELFUTILS_1.7+0x14>
    f2b4:	bl	31d0 <elf64_getchdr@plt>
    f2b8:	cbz	x0, f25c <gelf_getchdr@@ELFUTILS_1.7+0x10>
    f2bc:	ldp	x2, x3, [x0]
    f2c0:	stp	x2, x3, [x19]
    f2c4:	ldr	x0, [x0, #16]
    f2c8:	b	f2ac <gelf_getchdr@@ELFUTILS_1.7+0x60>
    f2cc:	stp	x29, x30, [sp, #-320]!
    f2d0:	mov	x29, sp
    f2d4:	stp	x19, x20, [sp, #16]
    f2d8:	mov	x20, x1
    f2dc:	and	w19, w6, #0xff
    f2e0:	mov	x1, #0x0                   	// #0
    f2e4:	stp	x21, x22, [sp, #32]
    f2e8:	stp	x23, x24, [sp, #48]
    f2ec:	stp	x25, x26, [sp, #64]
    f2f0:	mov	x25, x3
    f2f4:	stp	x27, x28, [sp, #80]
    f2f8:	stp	x0, x4, [sp, #112]
    f2fc:	str	w2, [sp, #148]
    f300:	str	x5, [sp, #152]
    f304:	bl	3330 <elf_getdata@plt>
    f308:	cbnz	x0, f314 <gelf_getchdr@@ELFUTILS_1.7+0xc8>
    f30c:	mov	x27, #0x0                   	// #0
    f310:	b	f38c <gelf_getchdr@@ELFUTILS_1.7+0x140>
    f314:	mov	x1, x0
    f318:	mov	x26, x0
    f31c:	ldr	x0, [sp, #112]
    f320:	bl	3330 <elf_getdata@plt>
    f324:	mov	x22, x0
    f328:	eor	w0, w19, #0x1
    f32c:	str	w0, [sp, #144]
    f330:	cmp	x22, #0x0
    f334:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    f338:	b.eq	f354 <gelf_getchdr@@ELFUTILS_1.7+0x108>  // b.none
    f33c:	ldr	x1, [x26, #16]
    f340:	add	x0, x20, #0xb
    f344:	cmp	x1, x0
    f348:	b.hi	f354 <gelf_getchdr@@ELFUTILS_1.7+0x108>  // b.pmore
    f34c:	mov	x27, #0xffffffffffffffff    	// #-1
    f350:	b	f38c <gelf_getchdr@@ELFUTILS_1.7+0x140>
    f354:	ldr	x1, [sp, #120]
    f358:	ldr	x0, [x26, #32]
    f35c:	str	x0, [x1]
    f360:	ldr	x0, [x26, #16]
    f364:	str	x0, [x25]
    f368:	add	x0, x20, x0, lsr #3
    f36c:	str	x0, [sp, #128]
    f370:	lsl	x24, x0, #1
    f374:	mov	x0, x24
    f378:	bl	3100 <malloc@plt>
    f37c:	mov	x27, x0
    f380:	cbnz	x0, f3ac <gelf_getchdr@@ELFUTILS_1.7+0x160>
    f384:	mov	w0, #0x8                   	// #8
    f388:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f38c:	mov	x0, x27
    f390:	ldp	x19, x20, [sp, #16]
    f394:	ldp	x21, x22, [sp, #32]
    f398:	ldp	x23, x24, [sp, #48]
    f39c:	ldp	x25, x26, [sp, #64]
    f3a0:	ldp	x27, x28, [sp, #80]
    f3a4:	ldp	x29, x30, [sp], #320
    f3a8:	ret
    f3ac:	add	x23, sp, #0xd0
    f3b0:	adrp	x2, 11000 <elf_compress_gnu@@ELFUTILS_1.7+0x1474>
    f3b4:	mov	x0, x23
    f3b8:	add	x2, x2, #0x338
    f3bc:	mov	w3, #0x70                  	// #112
    f3c0:	mov	w1, #0x9                   	// #9
    f3c4:	stp	xzr, xzr, [sp, #272]
    f3c8:	str	xzr, [sp, #288]
    f3cc:	bl	31b0 <deflateInit_@plt>
    f3d0:	cbz	w0, f3e8 <gelf_getchdr@@ELFUTILS_1.7+0x19c>
    f3d4:	mov	x0, x27
    f3d8:	bl	3250 <free@plt>
    f3dc:	mov	w0, #0x31                  	// #49
    f3e0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f3e4:	b	f30c <gelf_getchdr@@ELFUTILS_1.7+0xc0>
    f3e8:	mov	x21, x27
    f3ec:	add	x19, sp, #0xa8
    f3f0:	mov	w28, #0x0                   	// #0
    f3f4:	str	xzr, [sp, #168]
    f3f8:	ldp	x0, x1, [x26]
    f3fc:	stp	x0, x1, [x19]
    f400:	ldp	x0, x1, [x26, #16]
    f404:	stp	x0, x1, [x19, #16]
    f408:	ldr	x0, [x26, #32]
    f40c:	str	x0, [x19, #32]
    f410:	ldr	w0, [sp, #148]
    f414:	cmp	w0, #0x1
    f418:	b.eq	f490 <gelf_getchdr@@ELFUTILS_1.7+0x244>  // b.none
    f41c:	ldr	x0, [x26, #16]
    f420:	cbz	x0, f490 <gelf_getchdr@@ELFUTILS_1.7+0x244>
    f424:	bl	3100 <malloc@plt>
    f428:	str	x0, [sp, #168]
    f42c:	mov	x27, x0
    f430:	cbnz	x0, f458 <gelf_getchdr@@ELFUTILS_1.7+0x20c>
    f434:	mov	w0, #0x8                   	// #8
    f438:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f43c:	mov	x0, x23
    f440:	bl	3280 <deflateEnd@plt>
    f444:	mov	x0, x21
    f448:	bl	3250 <free@plt>
    f44c:	b	f38c <gelf_getchdr@@ELFUTILS_1.7+0x140>
    f450:	ldr	x22, [sp, #136]
    f454:	b	f3f8 <gelf_getchdr@@ELFUTILS_1.7+0x1ac>
    f458:	ldr	x0, [sp, #112]
    f45c:	mov	x2, x26
    f460:	ldr	w3, [sp, #148]
    f464:	mov	x1, x19
    f468:	ldr	x0, [x0, #136]
    f46c:	bl	3190 <gelf_xlatetof@plt>
    f470:	mov	x27, x0
    f474:	cbnz	x0, f53c <gelf_getchdr@@ELFUTILS_1.7+0x2f0>
    f478:	mov	x0, x23
    f47c:	bl	3280 <deflateEnd@plt>
    f480:	mov	x0, x21
    f484:	bl	3250 <free@plt>
    f488:	ldr	x0, [sp, #168]
    f48c:	b	f448 <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
    f490:	mov	w26, #0x0                   	// #0
    f494:	str	wzr, [sp, #108]
    f498:	ldr	x0, [sp, #184]
    f49c:	str	w0, [sp, #216]
    f4a0:	ldr	x0, [sp, #168]
    f4a4:	str	x0, [sp, #208]
    f4a8:	cbz	x22, f548 <gelf_getchdr@@ELFUTILS_1.7+0x2fc>
    f4ac:	ldr	x0, [sp, #120]
    f4b0:	ldr	x1, [x0]
    f4b4:	ldr	x0, [x22, #32]
    f4b8:	cmp	x0, x1
    f4bc:	csel	x0, x0, x1, cs  // cs = hs, nlast
    f4c0:	ldr	x1, [sp, #120]
    f4c4:	str	x0, [x1]
    f4c8:	ldr	x0, [x25]
    f4cc:	ldr	x1, [x22, #16]
    f4d0:	add	x0, x0, x1
    f4d4:	str	x0, [x25]
    f4d8:	ldr	x0, [sp, #112]
    f4dc:	mov	x1, x22
    f4e0:	bl	3330 <elf_getdata@plt>
    f4e4:	str	x0, [sp, #136]
    f4e8:	sub	w0, w24, w20
    f4ec:	mov	w1, w28
    f4f0:	add	x20, x21, x20
    f4f4:	str	x20, [sp, #232]
    f4f8:	str	w0, [sp, #240]
    f4fc:	mov	x0, x23
    f500:	bl	3120 <deflate@plt>
    f504:	cmn	w0, #0x2
    f508:	b.ne	f55c <gelf_getchdr@@ELFUTILS_1.7+0x310>  // b.any
    f50c:	mov	w0, #0x31                  	// #49
    f510:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f514:	cmp	w26, #0x0
    f518:	mov	x0, x23
    f51c:	csel	x19, x19, xzr, ne  // ne = any
    f520:	bl	3280 <deflateEnd@plt>
    f524:	mov	x0, x21
    f528:	bl	3250 <free@plt>
    f52c:	cbz	x19, f30c <gelf_getchdr@@ELFUTILS_1.7+0xc0>
    f530:	ldr	x0, [x19]
    f534:	bl	3250 <free@plt>
    f538:	b	f30c <gelf_getchdr@@ELFUTILS_1.7+0xc0>
    f53c:	mov	w26, #0x1                   	// #1
    f540:	str	w26, [sp, #108]
    f544:	b	f498 <gelf_getchdr@@ELFUTILS_1.7+0x24c>
    f548:	mov	w28, #0x4                   	// #4
    f54c:	str	xzr, [sp, #136]
    f550:	b	f4e8 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
    f554:	mov	x21, x27
    f558:	b	f4e8 <gelf_getchdr@@ELFUTILS_1.7+0x29c>
    f55c:	ldr	w1, [sp, #144]
    f560:	ldr	w0, [sp, #240]
    f564:	cmp	w1, #0x0
    f568:	ccmp	w28, #0x4, #0x0, ne  // ne = any
    f56c:	sub	x20, x24, w0, uxtw
    f570:	b.ne	f5a8 <gelf_getchdr@@ELFUTILS_1.7+0x35c>  // b.any
    f574:	ldr	x1, [x25]
    f578:	cmp	x1, x20
    f57c:	b.hi	f5a8 <gelf_getchdr@@ELFUTILS_1.7+0x35c>  // b.pmore
    f580:	cmp	w26, #0x0
    f584:	mov	x0, x23
    f588:	csel	x19, x19, xzr, ne  // ne = any
    f58c:	bl	3280 <deflateEnd@plt>
    f590:	mov	x0, x21
    f594:	bl	3250 <free@plt>
    f598:	cbz	x19, f34c <gelf_getchdr@@ELFUTILS_1.7+0x100>
    f59c:	ldr	x0, [x19]
    f5a0:	bl	3250 <free@plt>
    f5a4:	b	f34c <gelf_getchdr@@ELFUTILS_1.7+0x100>
    f5a8:	cbnz	w0, f604 <gelf_getchdr@@ELFUTILS_1.7+0x3b8>
    f5ac:	ldr	x0, [sp, #128]
    f5b0:	add	x24, x24, x0
    f5b4:	mov	x0, x21
    f5b8:	mov	x1, x24
    f5bc:	bl	31a0 <realloc@plt>
    f5c0:	mov	x27, x0
    f5c4:	cbnz	x0, f554 <gelf_getchdr@@ELFUTILS_1.7+0x308>
    f5c8:	mov	w0, #0x8                   	// #8
    f5cc:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f5d0:	cmp	w26, #0x0
    f5d4:	mov	x0, x23
    f5d8:	csel	x19, x19, xzr, ne  // ne = any
    f5dc:	bl	3280 <deflateEnd@plt>
    f5e0:	mov	x0, x21
    f5e4:	bl	3250 <free@plt>
    f5e8:	cbz	x19, f30c <gelf_getchdr@@ELFUTILS_1.7+0xc0>
    f5ec:	ldr	x0, [x19]
    f5f0:	b	f448 <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
    f5f4:	ldr	x0, [sp, #152]
    f5f8:	mov	x27, x21
    f5fc:	str	x20, [x0]
    f600:	b	f38c <gelf_getchdr@@ELFUTILS_1.7+0x140>
    f604:	ldr	w0, [sp, #108]
    f608:	cbz	w0, f618 <gelf_getchdr@@ELFUTILS_1.7+0x3cc>
    f60c:	ldr	x0, [sp, #168]
    f610:	bl	3250 <free@plt>
    f614:	str	xzr, [sp, #168]
    f618:	mov	x26, x22
    f61c:	cbz	w28, f450 <gelf_getchdr@@ELFUTILS_1.7+0x204>
    f620:	mov	x0, x23
    f624:	bl	3280 <deflateEnd@plt>
    f628:	cbz	w0, f5f4 <gelf_getchdr@@ELFUTILS_1.7+0x3a8>
    f62c:	mov	w0, #0x31                  	// #49
    f630:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f634:	mov	x0, x23
    f638:	bl	3280 <deflateEnd@plt>
    f63c:	mov	x0, x21
    f640:	b	f534 <gelf_getchdr@@ELFUTILS_1.7+0x2e8>
    f644:	stp	x29, x30, [sp, #-160]!
    f648:	mov	x29, sp
    f64c:	stp	x21, x22, [sp, #32]
    f650:	mov	x22, x0
    f654:	mov	x0, #0x408                 	// #1032
    f658:	stp	x19, x20, [sp, #16]
    f65c:	udiv	x0, x2, x0
    f660:	cmp	x0, x1
    f664:	b.ls	f678 <gelf_getchdr@@ELFUTILS_1.7+0x42c>  // b.plast
    f668:	mov	w0, #0x21                  	// #33
    f66c:	mov	x19, #0x0                   	// #0
    f670:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f674:	b	f69c <gelf_getchdr@@ELFUTILS_1.7+0x450>
    f678:	cmp	x2, #0x0
    f67c:	mov	x21, x1
    f680:	mov	x20, x2
    f684:	csinc	x0, x2, xzr, ne  // ne = any
    f688:	bl	3100 <malloc@plt>
    f68c:	mov	x19, x0
    f690:	cbnz	x0, f6b0 <gelf_getchdr@@ELFUTILS_1.7+0x464>
    f694:	mov	w0, #0x8                   	// #8
    f698:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f69c:	mov	x0, x19
    f6a0:	ldp	x19, x20, [sp, #16]
    f6a4:	ldp	x21, x22, [sp, #32]
    f6a8:	ldp	x29, x30, [sp], #160
    f6ac:	ret
    f6b0:	stp	xzr, xzr, [sp, #56]
    f6b4:	adrp	x1, 11000 <elf_compress_gnu@@ELFUTILS_1.7+0x1474>
    f6b8:	mov	w2, #0x70                  	// #112
    f6bc:	str	w21, [sp, #56]
    f6c0:	add	x21, sp, #0x30
    f6c4:	stp	xzr, xzr, [sp, #72]
    f6c8:	add	x1, x1, #0x338
    f6cc:	str	x22, [sp, #48]
    f6d0:	str	x0, [sp, #72]
    f6d4:	mov	x0, x21
    f6d8:	str	w20, [sp, #80]
    f6dc:	stp	xzr, xzr, [sp, #88]
    f6e0:	stp	xzr, xzr, [sp, #104]
    f6e4:	stp	xzr, xzr, [sp, #120]
    f6e8:	stp	xzr, xzr, [sp, #136]
    f6ec:	str	xzr, [sp, #152]
    f6f0:	bl	32c0 <inflateInit_@plt>
    f6f4:	ldr	w1, [sp, #56]
    f6f8:	cbz	w1, f740 <gelf_getchdr@@ELFUTILS_1.7+0x4f4>
    f6fc:	cbz	w0, f710 <gelf_getchdr@@ELFUTILS_1.7+0x4c4>
    f700:	mov	x0, x19
    f704:	bl	3250 <free@plt>
    f708:	mov	w0, #0x32                  	// #50
    f70c:	b	f66c <gelf_getchdr@@ELFUTILS_1.7+0x420>
    f710:	ldr	w0, [sp, #80]
    f714:	mov	w1, #0x4                   	// #4
    f718:	sub	x0, x20, x0
    f71c:	add	x0, x19, x0
    f720:	str	x0, [sp, #72]
    f724:	mov	x0, x21
    f728:	bl	30b0 <inflate@plt>
    f72c:	cmp	w0, #0x1
    f730:	b.ne	f700 <gelf_getchdr@@ELFUTILS_1.7+0x4b4>  // b.any
    f734:	mov	x0, x21
    f738:	bl	3360 <inflateReset@plt>
    f73c:	b	f6f4 <gelf_getchdr@@ELFUTILS_1.7+0x4a8>
    f740:	cbnz	w0, f700 <gelf_getchdr@@ELFUTILS_1.7+0x4b4>
    f744:	mov	x0, x21
    f748:	bl	3200 <inflateEnd@plt>
    f74c:	ldr	w1, [sp, #80]
    f750:	orr	w0, w0, w1
    f754:	cbz	w0, f69c <gelf_getchdr@@ELFUTILS_1.7+0x450>
    f758:	b	f700 <gelf_getchdr@@ELFUTILS_1.7+0x4b4>
    f75c:	stp	x29, x30, [sp, #-80]!
    f760:	mov	x29, sp
    f764:	stp	x19, x20, [sp, #16]
    f768:	mov	x19, x0
    f76c:	mov	x20, x2
    f770:	str	x21, [sp, #32]
    f774:	mov	x21, x1
    f778:	add	x1, sp, #0x38
    f77c:	bl	3290 <gelf_getchdr@plt>
    f780:	cbnz	x0, f798 <gelf_getchdr@@ELFUTILS_1.7+0x54c>
    f784:	mov	x0, #0x0                   	// #0
    f788:	ldp	x19, x20, [sp, #16]
    f78c:	ldr	x21, [sp, #32]
    f790:	ldp	x29, x30, [sp], #80
    f794:	ret
    f798:	ldr	w0, [sp, #56]
    f79c:	cmp	w0, #0x1
    f7a0:	b.eq	f7b0 <gelf_getchdr@@ELFUTILS_1.7+0x564>  // b.none
    f7a4:	mov	w0, #0x30                  	// #48
    f7a8:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f7ac:	b	f784 <gelf_getchdr@@ELFUTILS_1.7+0x538>
    f7b0:	ldr	x0, [sp, #72]
    f7b4:	sub	x1, x0, #0x1
    f7b8:	tst	x1, x0
    f7bc:	b.eq	f7c8 <gelf_getchdr@@ELFUTILS_1.7+0x57c>  // b.none
    f7c0:	mov	w0, #0x24                  	// #36
    f7c4:	b	f7a8 <gelf_getchdr@@ELFUTILS_1.7+0x55c>
    f7c8:	mov	x0, x19
    f7cc:	mov	x1, #0x0                   	// #0
    f7d0:	bl	3330 <elf_getdata@plt>
    f7d4:	cbz	x0, f784 <gelf_getchdr@@ELFUTILS_1.7+0x538>
    f7d8:	ldr	x1, [x19, #136]
    f7dc:	mov	x3, #0xc                   	// #12
    f7e0:	ldr	x2, [sp, #64]
    f7e4:	ldr	w1, [x1, #32]
    f7e8:	cmp	w1, #0x1
    f7ec:	mov	x1, #0x18                  	// #24
    f7f0:	csel	x3, x3, x1, eq  // eq = none
    f7f4:	ldr	x1, [x0, #16]
    f7f8:	ldr	x0, [x0]
    f7fc:	sub	x1, x1, x3
    f800:	add	x0, x0, x3
    f804:	bl	f644 <gelf_getchdr@@ELFUTILS_1.7+0x3f8>
    f808:	ldr	x1, [sp, #64]
    f80c:	str	x1, [x21]
    f810:	ldr	x1, [sp, #72]
    f814:	str	x1, [x20]
    f818:	b	f788 <gelf_getchdr@@ELFUTILS_1.7+0x53c>
    f81c:	stp	x29, x30, [sp, #-32]!
    f820:	mov	x29, sp
    f824:	stp	x19, x20, [sp, #16]
    f828:	mov	x19, x0
    f82c:	mov	x20, x1
    f830:	str	xzr, [x0, #96]
    f834:	mov	w0, #0x1                   	// #1
    f838:	stp	xzr, x1, [x19, #64]
    f83c:	stp	w4, w0, [x19, #80]
    f840:	ldp	x1, x0, [x19, #160]
    f844:	str	x2, [x19, #88]
    f848:	str	x3, [x19, #104]
    f84c:	cmp	x0, x1
    f850:	b.eq	f858 <gelf_getchdr@@ELFUTILS_1.7+0x60c>  // b.none
    f854:	bl	3250 <free@plt>
    f858:	ldr	x1, [x19, #136]
    f85c:	ldr	x0, [x19, #160]
    f860:	ldr	x1, [x1]
    f864:	str	xzr, [x19, #168]
    f868:	cbz	x1, f880 <gelf_getchdr@@ELFUTILS_1.7+0x634>
    f86c:	ldr	x1, [x19, #176]
    f870:	cmp	x1, x0
    f874:	b.eq	f880 <gelf_getchdr@@ELFUTILS_1.7+0x634>  // b.none
    f878:	ldr	w1, [x19, #156]
    f87c:	tbz	w1, #7, f884 <gelf_getchdr@@ELFUTILS_1.7+0x638>
    f880:	bl	3250 <free@plt>
    f884:	ldr	w0, [x19, #156]
    f888:	mov	w1, #0x1                   	// #1
    f88c:	str	w1, [x19, #120]
    f890:	orr	w0, w0, #0x180
    f894:	str	w0, [x19, #156]
    f898:	str	x20, [x19, #160]
    f89c:	mov	x0, x19
    f8a0:	ldp	x19, x20, [sp, #16]
    f8a4:	ldp	x29, x30, [sp], #32
    f8a8:	b	9220 <elf_rawdata@@ELFUTILS_1.0+0x4bc>

000000000000f8ac <elf_compress@@ELFUTILS_1.7>:
    f8ac:	cbnz	x0, f8b8 <elf_compress@@ELFUTILS_1.7+0xc>
    f8b0:	mov	w0, #0xffffffff            	// #-1
    f8b4:	ret
    f8b8:	stp	x29, x30, [sp, #-176]!
    f8bc:	tst	w2, #0xfffffffe
    f8c0:	mov	x29, sp
    f8c4:	stp	x19, x20, [sp, #16]
    f8c8:	stp	x21, x22, [sp, #32]
    f8cc:	stp	x23, x24, [sp, #48]
    f8d0:	stp	x25, x26, [sp, #64]
    f8d4:	mov	w25, w2
    f8d8:	b.eq	f8e8 <elf_compress@@ELFUTILS_1.7+0x3c>  // b.none
    f8dc:	mov	w0, #0x17                  	// #23
    f8e0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    f8e4:	b	fae0 <elf_compress@@ELFUTILS_1.7+0x234>
    f8e8:	ldr	x21, [x0, #136]
    f8ec:	mov	x19, x0
    f8f0:	mov	w20, w1
    f8f4:	add	x1, sp, #0x70
    f8f8:	mov	x0, x21
    f8fc:	bl	3300 <gelf_getehdr@plt>
    f900:	cbz	x0, fae0 <elf_compress@@ELFUTILS_1.7+0x234>
    f904:	ldr	w24, [x21, #32]
    f908:	mov	x0, x19
    f90c:	ldrb	w23, [sp, #117]
    f910:	cmp	w24, #0x1
    f914:	b.ne	f934 <elf_compress@@ELFUTILS_1.7+0x88>  // b.any
    f918:	bl	32e0 <elf32_getshdr@plt>
    f91c:	cbz	x0, fae0 <elf_compress@@ELFUTILS_1.7+0x234>
    f920:	ldp	w22, w1, [x0, #4]
    f924:	ldr	w26, [x0, #32]
    f928:	tbz	w1, #1, f94c <elf_compress@@ELFUTILS_1.7+0xa0>
    f92c:	mov	w0, #0x2d                  	// #45
    f930:	b	f8e0 <elf_compress@@ELFUTILS_1.7+0x34>
    f934:	bl	3150 <elf64_getshdr@plt>
    f938:	cbz	x0, fae0 <elf_compress@@ELFUTILS_1.7+0x234>
    f93c:	ldr	w22, [x0, #4]
    f940:	ldr	x1, [x0, #8]
    f944:	ldr	x26, [x0, #48]
    f948:	b	f928 <elf_compress@@ELFUTILS_1.7+0x7c>
    f94c:	tst	w22, #0xfffffff7
    f950:	b.ne	f95c <elf_compress@@ELFUTILS_1.7+0xb0>  // b.any
    f954:	mov	w0, #0x2c                  	// #44
    f958:	b	f8e0 <elf_compress@@ELFUTILS_1.7+0x34>
    f95c:	cmp	w20, #0x1
    f960:	b.ne	fab4 <elf_compress@@ELFUTILS_1.7+0x208>  // b.any
    f964:	cmp	w24, #0x1
    f968:	mov	x0, #0x18                  	// #24
    f96c:	and	w6, w25, #0x1
    f970:	add	x5, sp, #0x68
    f974:	add	x4, sp, #0x60
    f978:	add	x3, sp, #0x58
    f97c:	mov	w2, w23
    f980:	mov	x1, #0xc                   	// #12
    f984:	csel	x1, x1, x0, eq  // eq = none
    f988:	mov	x0, x19
    f98c:	bl	f2cc <gelf_getchdr@@ELFUTILS_1.7+0x80>
    f990:	mov	x21, x0
    f994:	cmn	x0, #0x1
    f998:	b.eq	faa4 <elf_compress@@ELFUTILS_1.7+0x1f8>  // b.none
    f99c:	cbz	x0, faac <elf_compress@@ELFUTILS_1.7+0x200>
    f9a0:	cmp	w24, #0x1
    f9a4:	adrp	x22, 10000 <elf_compress_gnu@@ELFUTILS_1.7+0x474>
    f9a8:	ldr	x0, [sp, #88]
    f9ac:	b.ne	fa48 <elf_compress@@ELFUTILS_1.7+0x19c>  // b.any
    f9b0:	ldr	x3, [sp, #96]
    f9b4:	mov	w2, w0
    f9b8:	cmp	w23, #0x1
    f9bc:	mov	w1, w3
    f9c0:	b.eq	fa40 <elf_compress@@ELFUTILS_1.7+0x194>  // b.none
    f9c4:	rev	w1, w3
    f9c8:	rev	w2, w0
    f9cc:	mov	w0, #0x1000000             	// #16777216
    f9d0:	stp	w0, w2, [x21]
    f9d4:	add	x22, x22, #0xac4
    f9d8:	str	w1, [x21, #8]
    f9dc:	mov	x0, x19
    f9e0:	bl	32e0 <elf32_getshdr@plt>
    f9e4:	ldr	x1, [sp, #104]
    f9e8:	str	w1, [x0, #20]
    f9ec:	ldrb	w1, [x22, #25]
    f9f0:	cmp	w1, #0x0
    f9f4:	csinc	w1, w1, wzr, ne  // ne = any
    f9f8:	str	w1, [x0, #32]
    f9fc:	ldr	w1, [x0, #8]
    fa00:	orr	w1, w1, #0x800
    fa04:	str	w1, [x0, #8]
    fa08:	ldr	x2, [sp, #104]
    fa0c:	mov	x1, x21
    fa10:	mov	x0, x19
    fa14:	mov	w4, #0x19                  	// #25
    fa18:	mov	x3, #0x1                   	// #1
    fa1c:	bl	f81c <gelf_getchdr@@ELFUTILS_1.7+0x5d0>
    fa20:	str	xzr, [x19, #176]
    fa24:	mov	w0, w20
    fa28:	ldp	x19, x20, [sp, #16]
    fa2c:	ldp	x21, x22, [sp, #32]
    fa30:	ldp	x23, x24, [sp, #48]
    fa34:	ldp	x25, x26, [sp, #64]
    fa38:	ldp	x29, x30, [sp], #176
    fa3c:	ret
    fa40:	mov	w0, w20
    fa44:	b	f9d0 <elf_compress@@ELFUTILS_1.7+0x124>
    fa48:	cmp	w23, #0x1
    fa4c:	b.eq	fa9c <elf_compress@@ELFUTILS_1.7+0x1f0>  // b.none
    fa50:	rev	x0, x0
    fa54:	rev	x26, x26
    fa58:	mov	w1, #0x1000000             	// #16777216
    fa5c:	stp	w1, wzr, [x21]
    fa60:	add	x22, x22, #0xac4
    fa64:	stp	x0, x26, [x21, #8]
    fa68:	mov	x0, x19
    fa6c:	bl	3150 <elf64_getshdr@plt>
    fa70:	ldr	x1, [sp, #104]
    fa74:	str	x1, [x0, #32]
    fa78:	ldrb	w1, [x22, #52]
    fa7c:	cmp	w1, #0x0
    fa80:	csinc	w1, w1, wzr, ne  // ne = any
    fa84:	and	x1, x1, #0xff
    fa88:	str	x1, [x0, #48]
    fa8c:	ldr	x1, [x0, #8]
    fa90:	orr	x1, x1, #0x800
    fa94:	str	x1, [x0, #8]
    fa98:	b	fa08 <elf_compress@@ELFUTILS_1.7+0x15c>
    fa9c:	mov	w1, w20
    faa0:	b	fa5c <elf_compress@@ELFUTILS_1.7+0x1b0>
    faa4:	mov	w20, #0x0                   	// #0
    faa8:	b	fa24 <elf_compress@@ELFUTILS_1.7+0x178>
    faac:	mov	w20, #0xffffffff            	// #-1
    fab0:	b	fa24 <elf_compress@@ELFUTILS_1.7+0x178>
    fab4:	cbnz	w20, fb84 <elf_compress@@ELFUTILS_1.7+0x2d8>
    fab8:	tbnz	w1, #11, fac4 <elf_compress@@ELFUTILS_1.7+0x218>
    fabc:	mov	w0, #0x2e                  	// #46
    fac0:	b	f8e0 <elf_compress@@ELFUTILS_1.7+0x34>
    fac4:	ldr	x0, [x19, #176]
    fac8:	cbnz	x0, fafc <elf_compress@@ELFUTILS_1.7+0x250>
    facc:	add	x2, sp, #0x68
    fad0:	add	x1, sp, #0x60
    fad4:	mov	x0, x19
    fad8:	bl	f75c <gelf_getchdr@@ELFUTILS_1.7+0x510>
    fadc:	cbnz	x0, fae8 <elf_compress@@ELFUTILS_1.7+0x23c>
    fae0:	mov	w0, #0xffffffff            	// #-1
    fae4:	b	fa28 <elf_compress@@ELFUTILS_1.7+0x17c>
    fae8:	str	x0, [x19, #176]
    faec:	ldr	x0, [sp, #96]
    faf0:	str	x0, [x19, #184]
    faf4:	ldr	x0, [sp, #104]
    faf8:	str	x0, [x19, #192]
    fafc:	mov	x0, x19
    fb00:	cmp	w24, #0x1
    fb04:	b.ne	fb60 <elf_compress@@ELFUTILS_1.7+0x2b4>  // b.any
    fb08:	bl	32e0 <elf32_getshdr@plt>
    fb0c:	ldr	x1, [x19, #184]
    fb10:	str	w1, [x0, #20]
    fb14:	ldr	x1, [x19, #192]
    fb18:	str	w1, [x0, #32]
    fb1c:	ldr	w1, [x0, #8]
    fb20:	and	w1, w1, #0xfffff7ff
    fb24:	str	w1, [x0, #8]
    fb28:	ldp	x23, x24, [x19, #176]
    fb2c:	mov	w1, w22
    fb30:	ldr	x20, [x19, #192]
    fb34:	mov	x0, x21
    fb38:	mov	x2, x20
    fb3c:	bl	8dd8 <elf_rawdata@@ELFUTILS_1.0+0x74>
    fb40:	mov	x3, x20
    fb44:	mov	w4, w0
    fb48:	mov	x2, x24
    fb4c:	mov	x0, x19
    fb50:	mov	x1, x23
    fb54:	bl	f81c <gelf_getchdr@@ELFUTILS_1.7+0x5d0>
    fb58:	mov	w0, #0x1                   	// #1
    fb5c:	b	fa28 <elf_compress@@ELFUTILS_1.7+0x17c>
    fb60:	bl	3150 <elf64_getshdr@plt>
    fb64:	ldr	x1, [x19, #184]
    fb68:	str	x1, [x0, #32]
    fb6c:	ldr	x1, [x19, #192]
    fb70:	str	x1, [x0, #48]
    fb74:	ldr	x1, [x0, #8]
    fb78:	and	x1, x1, #0xfffffffffffff7ff
    fb7c:	str	x1, [x0, #8]
    fb80:	b	fb28 <elf_compress@@ELFUTILS_1.7+0x27c>
    fb84:	mov	w0, #0x30                  	// #48
    fb88:	b	f8e0 <elf_compress@@ELFUTILS_1.7+0x34>

000000000000fb8c <elf_compress_gnu@@ELFUTILS_1.7>:
    fb8c:	cbnz	x0, fb98 <elf_compress_gnu@@ELFUTILS_1.7+0xc>
    fb90:	mov	w0, #0xffffffff            	// #-1
    fb94:	ret
    fb98:	stp	x29, x30, [sp, #-176]!
    fb9c:	tst	w2, #0xfffffffe
    fba0:	mov	x29, sp
    fba4:	stp	x19, x20, [sp, #16]
    fba8:	stp	x21, x22, [sp, #32]
    fbac:	mov	w21, w2
    fbb0:	stp	x23, x24, [sp, #48]
    fbb4:	stp	x25, x26, [sp, #64]
    fbb8:	b.eq	fbcc <elf_compress_gnu@@ELFUTILS_1.7+0x40>  // b.none
    fbbc:	mov	w0, #0x17                  	// #23
    fbc0:	bl	357c <elf_errno@@ELFUTILS_1.0+0x30>
    fbc4:	mov	w0, #0xffffffff            	// #-1
    fbc8:	b	fcd0 <elf_compress_gnu@@ELFUTILS_1.7+0x144>
    fbcc:	ldr	x23, [x0, #136]
    fbd0:	mov	x20, x0
    fbd4:	mov	w19, w1
    fbd8:	add	x1, sp, #0x70
    fbdc:	mov	x0, x23
    fbe0:	bl	3300 <gelf_getehdr@plt>
    fbe4:	cbz	x0, fbc4 <elf_compress_gnu@@ELFUTILS_1.7+0x38>
    fbe8:	ldr	w22, [x23, #32]
    fbec:	mov	x0, x20
    fbf0:	ldrb	w24, [sp, #117]
    fbf4:	cmp	w22, #0x1
    fbf8:	b.ne	fc20 <elf_compress_gnu@@ELFUTILS_1.7+0x94>  // b.any
    fbfc:	bl	32e0 <elf32_getshdr@plt>
    fc00:	cbz	x0, fbc4 <elf_compress_gnu@@ELFUTILS_1.7+0x38>
    fc04:	ldp	w25, w1, [x0, #4]
    fc08:	ldr	w26, [x0, #32]
    fc0c:	mov	x0, #0x802                 	// #2050
    fc10:	tst	x1, x0
    fc14:	b.eq	fc38 <elf_compress_gnu@@ELFUTILS_1.7+0xac>  // b.none
    fc18:	mov	w0, #0x2d                  	// #45
    fc1c:	b	fbc0 <elf_compress_gnu@@ELFUTILS_1.7+0x34>
    fc20:	bl	3150 <elf64_getshdr@plt>
    fc24:	cbz	x0, fbc4 <elf_compress_gnu@@ELFUTILS_1.7+0x38>
    fc28:	ldr	w25, [x0, #4]
    fc2c:	ldr	x1, [x0, #8]
    fc30:	ldr	x26, [x0, #48]
    fc34:	b	fc0c <elf_compress_gnu@@ELFUTILS_1.7+0x80>
    fc38:	tst	w25, #0xfffffff7
    fc3c:	b.ne	fc48 <elf_compress_gnu@@ELFUTILS_1.7+0xbc>  // b.any
    fc40:	mov	w0, #0x2c                  	// #44
    fc44:	b	fbc0 <elf_compress_gnu@@ELFUTILS_1.7+0x34>
    fc48:	cmp	w19, #0x1
    fc4c:	b.ne	fd08 <elf_compress_gnu@@ELFUTILS_1.7+0x17c>  // b.any
    fc50:	and	w6, w21, #0x1
    fc54:	add	x5, sp, #0x60
    fc58:	add	x4, sp, #0x68
    fc5c:	add	x3, sp, #0x58
    fc60:	mov	w2, w24
    fc64:	mov	x0, x20
    fc68:	mov	x1, #0xc                   	// #12
    fc6c:	bl	f2cc <gelf_getchdr@@ELFUTILS_1.7+0x80>
    fc70:	mov	x21, x0
    fc74:	cmn	x0, #0x1
    fc78:	b.eq	fcf8 <elf_compress_gnu@@ELFUTILS_1.7+0x16c>  // b.none
    fc7c:	cbz	x0, fd00 <elf_compress_gnu@@ELFUTILS_1.7+0x174>
    fc80:	ldr	x0, [sp, #88]
    fc84:	mov	w1, #0x4c5a                	// #19546
    fc88:	movk	w1, #0x4249, lsl #16
    fc8c:	str	w1, [x21]
    fc90:	rev	x0, x0
    fc94:	stur	x0, [x21, #4]
    fc98:	cmp	w22, #0x1
    fc9c:	mov	x0, x20
    fca0:	b.ne	fce8 <elf_compress_gnu@@ELFUTILS_1.7+0x15c>  // b.any
    fca4:	bl	32e0 <elf32_getshdr@plt>
    fca8:	ldr	x1, [sp, #96]
    fcac:	str	w1, [x0, #20]
    fcb0:	ldr	x2, [sp, #96]
    fcb4:	mov	x1, x21
    fcb8:	mov	x0, x20
    fcbc:	mov	w4, #0x0                   	// #0
    fcc0:	mov	x3, #0x1                   	// #1
    fcc4:	bl	f81c <gelf_getchdr@@ELFUTILS_1.7+0x5d0>
    fcc8:	str	xzr, [x20, #176]
    fccc:	mov	w0, w19
    fcd0:	ldp	x19, x20, [sp, #16]
    fcd4:	ldp	x21, x22, [sp, #32]
    fcd8:	ldp	x23, x24, [sp, #48]
    fcdc:	ldp	x25, x26, [sp, #64]
    fce0:	ldp	x29, x30, [sp], #176
    fce4:	ret
    fce8:	bl	3150 <elf64_getshdr@plt>
    fcec:	ldr	x1, [sp, #96]
    fcf0:	str	x1, [x0, #32]
    fcf4:	b	fcb0 <elf_compress_gnu@@ELFUTILS_1.7+0x124>
    fcf8:	mov	w19, #0x0                   	// #0
    fcfc:	b	fccc <elf_compress_gnu@@ELFUTILS_1.7+0x140>
    fd00:	mov	w19, #0xffffffff            	// #-1
    fd04:	b	fccc <elf_compress_gnu@@ELFUTILS_1.7+0x140>
    fd08:	cbnz	w19, fdcc <elf_compress_gnu@@ELFUTILS_1.7+0x240>
    fd0c:	mov	x0, x20
    fd10:	mov	x1, #0x0                   	// #0
    fd14:	bl	3330 <elf_getdata@plt>
    fd18:	cbz	x0, fbc4 <elf_compress_gnu@@ELFUTILS_1.7+0x38>
    fd1c:	ldr	x24, [x0, #16]
    fd20:	cmp	x24, #0xb
    fd24:	b.ls	fd44 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>  // b.plast
    fd28:	ldr	x21, [x0]
    fd2c:	adrp	x1, 11000 <elf_compress_gnu@@ELFUTILS_1.7+0x1474>
    fd30:	mov	x2, #0x4                   	// #4
    fd34:	add	x1, x1, #0x33f
    fd38:	mov	x0, x21
    fd3c:	bl	3210 <memcmp@plt>
    fd40:	cbz	w0, fd4c <elf_compress_gnu@@ELFUTILS_1.7+0x1c0>
    fd44:	mov	w0, #0x2e                  	// #46
    fd48:	b	fbc0 <elf_compress_gnu@@ELFUTILS_1.7+0x34>
    fd4c:	ldur	x19, [x21, #4]
    fd50:	rev	x19, x19
    fd54:	add	x0, x19, #0x17
    fd58:	cmp	x24, x0
    fd5c:	b.hi	fd44 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>  // b.pmore
    fd60:	add	x0, x21, #0xc
    fd64:	mov	x2, x19
    fd68:	sub	x1, x24, #0xc
    fd6c:	bl	f644 <gelf_getchdr@@ELFUTILS_1.7+0x3f8>
    fd70:	mov	x21, x0
    fd74:	cbz	x0, fbc4 <elf_compress_gnu@@ELFUTILS_1.7+0x38>
    fd78:	mov	x0, x20
    fd7c:	cmp	w22, #0x1
    fd80:	b.ne	fdc0 <elf_compress_gnu@@ELFUTILS_1.7+0x234>  // b.any
    fd84:	bl	32e0 <elf32_getshdr@plt>
    fd88:	str	w19, [x0, #20]
    fd8c:	mov	x2, x26
    fd90:	mov	w1, w25
    fd94:	mov	x0, x23
    fd98:	bl	8dd8 <elf_rawdata@@ELFUTILS_1.0+0x74>
    fd9c:	mov	x3, x26
    fda0:	mov	w4, w0
    fda4:	mov	x2, x19
    fda8:	mov	x0, x20
    fdac:	mov	x1, x21
    fdb0:	bl	f81c <gelf_getchdr@@ELFUTILS_1.7+0x5d0>
    fdb4:	mov	w0, #0x1                   	// #1
    fdb8:	str	x21, [x20, #176]
    fdbc:	b	fcd0 <elf_compress_gnu@@ELFUTILS_1.7+0x144>
    fdc0:	bl	3150 <elf64_getshdr@plt>
    fdc4:	str	x19, [x0, #32]
    fdc8:	b	fd8c <elf_compress_gnu@@ELFUTILS_1.7+0x200>
    fdcc:	mov	w0, #0x30                  	// #48
    fdd0:	b	fbc0 <elf_compress_gnu@@ELFUTILS_1.7+0x34>
    fdd4:	nop
    fdd8:	mov	x2, x1
    fddc:	mov	w1, w0
    fde0:	mov	w0, #0x0                   	// #0
    fde4:	b	3340 <__fxstat@plt>

Disassembly of section .fini:

000000000000fde8 <.fini>:
    fde8:	stp	x29, x30, [sp, #-16]!
    fdec:	mov	x29, sp
    fdf0:	ldp	x29, x30, [sp], #16
    fdf4:	ret
