
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004008e0 <_init>:
  4008e0:	stp	x29, x30, [sp, #-16]!
  4008e4:	mov	x29, sp
  4008e8:	bl	400cec <call_weak_fn>
  4008ec:	ldp	x29, x30, [sp], #16
  4008f0:	ret

Disassembly of section .plt:

0000000000400900 <.plt>:
  400900:	stp	x16, x30, [sp, #-16]!
  400904:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400908:	ldr	x17, [x16, #3952]
  40090c:	add	x16, x16, #0xf70
  400910:	br	x17
  400914:	nop
  400918:	nop
  40091c:	nop

0000000000400920 <__libc_start_main@plt>:
  400920:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400924:	ldr	x17, [x16, #3960]
  400928:	add	x16, x16, #0xf78
  40092c:	br	x17

0000000000400930 <__gmon_start__@plt>:
  400930:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400934:	ldr	x17, [x16, #3968]
  400938:	add	x16, x16, #0xf80
  40093c:	br	x17

0000000000400940 <write_string_file_ts@plt>:
  400940:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400944:	ldr	x17, [x16, #3976]
  400948:	add	x16, x16, #0xf88
  40094c:	br	x17

0000000000400950 <log_setup_service@plt>:
  400950:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400954:	ldr	x17, [x16, #3984]
  400958:	add	x16, x16, #0xf90
  40095c:	br	x17

0000000000400960 <umask@plt>:
  400960:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400964:	ldr	x17, [x16, #3992]
  400968:	add	x16, x16, #0xf98
  40096c:	br	x17

0000000000400970 <in_initrd@plt>:
  400970:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400974:	ldr	x17, [x16, #4000]
  400978:	add	x16, x16, #0xfa0
  40097c:	br	x17

0000000000400980 <abort@plt>:
  400980:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400984:	ldr	x17, [x16, #4008]
  400988:	add	x16, x16, #0xfa8
  40098c:	br	x17

0000000000400990 <__errno_location@plt>:
  400990:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400994:	ldr	x17, [x16, #4016]
  400998:	add	x16, x16, #0xfb0
  40099c:	br	x17

00000000004009a0 <__stack_chk_fail@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  4009a4:	ldr	x17, [x16, #4024]
  4009a8:	add	x16, x16, #0xfb8
  4009ac:	br	x17

00000000004009b0 <__xstat64@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  4009b4:	ldr	x17, [x16, #4032]
  4009b8:	add	x16, x16, #0xfc0
  4009bc:	br	x17

00000000004009c0 <log_internal_realm@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  4009c4:	ldr	x17, [x16, #4040]
  4009c8:	add	x16, x16, #0xfc8
  4009cc:	br	x17

00000000004009d0 <asprintf@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  4009d4:	ldr	x17, [x16, #4048]
  4009d8:	add	x16, x16, #0xfd0
  4009dc:	br	x17

00000000004009e0 <free@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  4009e4:	ldr	x17, [x16, #4056]
  4009e8:	add	x16, x16, #0xfd8
  4009ec:	br	x17

00000000004009f0 <log_oom_internal@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  4009f4:	ldr	x17, [x16, #4064]
  4009f8:	add	x16, x16, #0xfe0
  4009fc:	br	x17

0000000000400a00 <log_get_max_level_realm@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xff38>
  400a04:	ldr	x17, [x16, #4072]
  400a08:	add	x16, x16, #0xfe8
  400a0c:	br	x17

Disassembly of section .text:

0000000000400a10 <main>:
  400a10:	stp	x29, x30, [sp, #-192]!
  400a14:	cmp	w0, #0x2
  400a18:	mov	x29, sp
  400a1c:	stp	x19, x20, [sp, #16]
  400a20:	adrp	x19, 411000 <__FRAME_END__+0xff38>
  400a24:	add	x19, x19, #0xd28
  400a28:	ldr	x2, [x19]
  400a2c:	str	x2, [sp, #184]
  400a30:	mov	x2, #0x0                   	// #0
  400a34:	str	xzr, [sp, #48]
  400a38:	b.eq	400aa8 <main+0x98>  // b.none
  400a3c:	mov	w0, #0x0                   	// #0
  400a40:	bl	400a00 <log_get_max_level_realm@plt>
  400a44:	cmp	w0, #0x2
  400a48:	b.gt	400a78 <main+0x68>
  400a4c:	mov	w20, #0x1                   	// #1
  400a50:	ldr	x0, [sp, #48]
  400a54:	bl	4009e0 <free@plt>
  400a58:	ldr	x1, [sp, #184]
  400a5c:	ldr	x0, [x19]
  400a60:	eor	x0, x1, x0
  400a64:	cbnz	x0, 400c94 <main+0x284>
  400a68:	mov	w0, w20
  400a6c:	ldp	x19, x20, [sp, #16]
  400a70:	ldp	x29, x30, [sp], #192
  400a74:	ret
  400a78:	adrp	x5, 400000 <_init-0x8e0>
  400a7c:	adrp	x4, 400000 <_init-0x8e0>
  400a80:	add	x5, x5, #0xe50
  400a84:	add	x4, x4, #0xf68
  400a88:	adrp	x2, 400000 <_init-0x8e0>
  400a8c:	mov	w3, #0x13                  	// #19
  400a90:	add	x2, x2, #0xe7b
  400a94:	mov	w1, #0x0                   	// #0
  400a98:	mov	w20, #0x1                   	// #1
  400a9c:	mov	w0, #0x3                   	// #3
  400aa0:	bl	4009c0 <log_internal_realm@plt>
  400aa4:	b	400a50 <main+0x40>
  400aa8:	mov	x20, x1
  400aac:	bl	400950 <log_setup_service@plt>
  400ab0:	mov	w0, #0x12                  	// #18
  400ab4:	bl	400960 <umask@plt>
  400ab8:	bl	400970 <in_initrd@plt>
  400abc:	tst	w0, #0xff
  400ac0:	b.ne	400acc <main+0xbc>  // b.any
  400ac4:	mov	w20, #0x0                   	// #0
  400ac8:	b	400a50 <main+0x40>
  400acc:	str	x21, [sp, #32]
  400ad0:	add	x2, sp, #0x38
  400ad4:	mov	w0, #0x0                   	// #0
  400ad8:	ldr	x21, [x20, #8]
  400adc:	mov	x1, x21
  400ae0:	bl	4009b0 <__xstat64@plt>
  400ae4:	tbnz	w0, #31, 400b48 <main+0x138>
  400ae8:	ldr	w0, [sp, #72]
  400aec:	and	w0, w0, #0xf000
  400af0:	cmp	w0, #0x6, lsl #12
  400af4:	b.eq	400b94 <main+0x184>  // b.none
  400af8:	mov	w0, #0x0                   	// #0
  400afc:	bl	400a00 <log_get_max_level_realm@plt>
  400b00:	cmp	w0, #0x2
  400b04:	b.gt	400b10 <main+0x100>
  400b08:	ldr	x21, [sp, #32]
  400b0c:	b	400a4c <main+0x3c>
  400b10:	mov	x6, x21
  400b14:	adrp	x5, 400000 <_init-0x8e0>
  400b18:	adrp	x4, 400000 <_init-0x8e0>
  400b1c:	add	x5, x5, #0xec0
  400b20:	add	x4, x4, #0xf68
  400b24:	adrp	x2, 400000 <_init-0x8e0>
  400b28:	mov	w3, #0x27                  	// #39
  400b2c:	add	x2, x2, #0xe7b
  400b30:	mov	w1, #0x0                   	// #0
  400b34:	mov	w0, #0x3                   	// #3
  400b38:	mov	w20, #0x1                   	// #1
  400b3c:	bl	4009c0 <log_internal_realm@plt>
  400b40:	ldr	x21, [sp, #32]
  400b44:	b	400a50 <main+0x40>
  400b48:	mov	w0, #0x0                   	// #0
  400b4c:	bl	400a00 <log_get_max_level_realm@plt>
  400b50:	cmp	w0, #0x2
  400b54:	b.le	400b08 <main+0xf8>
  400b58:	bl	400990 <__errno_location@plt>
  400b5c:	ldr	w1, [x0]
  400b60:	adrp	x5, 400000 <_init-0x8e0>
  400b64:	adrp	x4, 400000 <_init-0x8e0>
  400b68:	mov	x6, x21
  400b6c:	add	x5, x5, #0xea8
  400b70:	add	x4, x4, #0xf68
  400b74:	adrp	x2, 400000 <_init-0x8e0>
  400b78:	mov	w3, #0x22                  	// #34
  400b7c:	add	x2, x2, #0xe7b
  400b80:	mov	w0, #0x3                   	// #3
  400b84:	mov	w20, #0x1                   	// #1
  400b88:	bl	4009c0 <log_internal_realm@plt>
  400b8c:	ldr	x21, [sp, #32]
  400b90:	b	400a50 <main+0x40>
  400b94:	ldr	x4, [sp, #88]
  400b98:	adrp	x1, 400000 <_init-0x8e0>
  400b9c:	add	x0, sp, #0x30
  400ba0:	add	x1, x1, #0xef0
  400ba4:	ubfx	w5, w4, #8, #12
  400ba8:	lsr	x2, x4, #32
  400bac:	lsr	x3, x4, #12
  400bb0:	and	w2, w2, #0xfffff000
  400bb4:	orr	w2, w2, w5
  400bb8:	bfxil	w3, w4, #0, #8
  400bbc:	bl	4009d0 <asprintf@plt>
  400bc0:	tbnz	w0, #31, 400c00 <main+0x1f0>
  400bc4:	ldr	x1, [sp, #48]
  400bc8:	adrp	x0, 400000 <_init-0x8e0>
  400bcc:	mov	x3, #0x0                   	// #0
  400bd0:	add	x0, x0, #0xef8
  400bd4:	mov	w2, #0x20                  	// #32
  400bd8:	bl	400940 <write_string_file_ts@plt>
  400bdc:	mov	w20, w0
  400be0:	mov	w0, #0x0                   	// #0
  400be4:	tbnz	w20, #31, 400c28 <main+0x218>
  400be8:	bl	400a00 <log_get_max_level_realm@plt>
  400bec:	cmp	w0, #0x5
  400bf0:	b.gt	400c58 <main+0x248>
  400bf4:	mov	w20, #0x0                   	// #0
  400bf8:	ldr	x21, [sp, #32]
  400bfc:	b	400a50 <main+0x40>
  400c00:	adrp	x3, 400000 <_init-0x8e0>
  400c04:	adrp	x1, 400000 <_init-0x8e0>
  400c08:	add	x3, x3, #0xf68
  400c0c:	add	x1, x1, #0xe7b
  400c10:	mov	w2, #0x2c                  	// #44
  400c14:	mov	w0, #0x0                   	// #0
  400c18:	mov	w20, #0x1                   	// #1
  400c1c:	bl	4009f0 <log_oom_internal@plt>
  400c20:	ldr	x21, [sp, #32]
  400c24:	b	400a50 <main+0x40>
  400c28:	bl	400a00 <log_get_max_level_realm@plt>
  400c2c:	cmp	w0, #0x2
  400c30:	b.le	400b08 <main+0xf8>
  400c34:	adrp	x5, 400000 <_init-0x8e0>
  400c38:	adrp	x4, 400000 <_init-0x8e0>
  400c3c:	mov	w1, w20
  400c40:	add	x5, x5, #0xf10
  400c44:	add	x4, x4, #0xf68
  400c48:	adrp	x2, 400000 <_init-0x8e0>
  400c4c:	mov	w3, #0x32                  	// #50
  400c50:	ldr	x6, [sp, #48]
  400c54:	b	400b7c <main+0x16c>
  400c58:	ldr	x7, [sp, #48]
  400c5c:	mov	x6, x21
  400c60:	adrp	x5, 400000 <_init-0x8e0>
  400c64:	adrp	x4, 400000 <_init-0x8e0>
  400c68:	add	x5, x5, #0xf40
  400c6c:	add	x4, x4, #0xf68
  400c70:	adrp	x2, 400000 <_init-0x8e0>
  400c74:	mov	w3, #0x3d                  	// #61
  400c78:	add	x2, x2, #0xe7b
  400c7c:	mov	w1, #0x0                   	// #0
  400c80:	mov	w0, #0x6                   	// #6
  400c84:	mov	w20, #0x0                   	// #0
  400c88:	bl	4009c0 <log_internal_realm@plt>
  400c8c:	ldr	x21, [sp, #32]
  400c90:	b	400a50 <main+0x40>
  400c94:	str	x21, [sp, #32]
  400c98:	bl	4009a0 <__stack_chk_fail@plt>

0000000000400c9c <_start>:
  400c9c:	mov	x29, #0x0                   	// #0
  400ca0:	mov	x30, #0x0                   	// #0
  400ca4:	mov	x5, x0
  400ca8:	ldr	x1, [sp]
  400cac:	add	x2, sp, #0x8
  400cb0:	mov	x6, sp
  400cb4:	movz	x0, #0x0, lsl #48
  400cb8:	movk	x0, #0x0, lsl #32
  400cbc:	movk	x0, #0x40, lsl #16
  400cc0:	movk	x0, #0xa10
  400cc4:	movz	x3, #0x0, lsl #48
  400cc8:	movk	x3, #0x0, lsl #32
  400ccc:	movk	x3, #0x40, lsl #16
  400cd0:	movk	x3, #0xda8
  400cd4:	movz	x4, #0x0, lsl #48
  400cd8:	movk	x4, #0x0, lsl #32
  400cdc:	movk	x4, #0x40, lsl #16
  400ce0:	movk	x4, #0xe28
  400ce4:	bl	400920 <__libc_start_main@plt>
  400ce8:	bl	400980 <abort@plt>

0000000000400cec <call_weak_fn>:
  400cec:	adrp	x0, 411000 <__FRAME_END__+0xff38>
  400cf0:	ldr	x0, [x0, #4088]
  400cf4:	cbz	x0, 400cfc <call_weak_fn+0x10>
  400cf8:	b	400930 <__gmon_start__@plt>
  400cfc:	ret

0000000000400d00 <deregister_tm_clones>:
  400d00:	adrp	x0, 412000 <__TMC_END__>
  400d04:	add	x0, x0, #0x0
  400d08:	adrp	x1, 412000 <__TMC_END__>
  400d0c:	add	x1, x1, #0x0
  400d10:	cmp	x1, x0
  400d14:	b.eq	400d2c <deregister_tm_clones+0x2c>  // b.none
  400d18:	adrp	x1, 400000 <_init-0x8e0>
  400d1c:	ldr	x1, [x1, #3648]
  400d20:	cbz	x1, 400d2c <deregister_tm_clones+0x2c>
  400d24:	mov	x16, x1
  400d28:	br	x16
  400d2c:	ret

0000000000400d30 <register_tm_clones>:
  400d30:	adrp	x0, 412000 <__TMC_END__>
  400d34:	add	x0, x0, #0x0
  400d38:	adrp	x1, 412000 <__TMC_END__>
  400d3c:	add	x1, x1, #0x0
  400d40:	sub	x1, x1, x0
  400d44:	lsr	x2, x1, #63
  400d48:	add	x1, x2, x1, asr #3
  400d4c:	cmp	xzr, x1, asr #1
  400d50:	asr	x1, x1, #1
  400d54:	b.eq	400d6c <register_tm_clones+0x3c>  // b.none
  400d58:	adrp	x2, 400000 <_init-0x8e0>
  400d5c:	ldr	x2, [x2, #3656]
  400d60:	cbz	x2, 400d6c <register_tm_clones+0x3c>
  400d64:	mov	x16, x2
  400d68:	br	x16
  400d6c:	ret

0000000000400d70 <__do_global_dtors_aux>:
  400d70:	stp	x29, x30, [sp, #-32]!
  400d74:	mov	x29, sp
  400d78:	str	x19, [sp, #16]
  400d7c:	adrp	x19, 412000 <__TMC_END__>
  400d80:	ldrb	w0, [x19]
  400d84:	cbnz	w0, 400d94 <__do_global_dtors_aux+0x24>
  400d88:	bl	400d00 <deregister_tm_clones>
  400d8c:	mov	w0, #0x1                   	// #1
  400d90:	strb	w0, [x19]
  400d94:	ldr	x19, [sp, #16]
  400d98:	ldp	x29, x30, [sp], #32
  400d9c:	ret

0000000000400da0 <frame_dummy>:
  400da0:	b	400d30 <register_tm_clones>
  400da4:	nop

0000000000400da8 <__libc_csu_init>:
  400da8:	stp	x29, x30, [sp, #-64]!
  400dac:	mov	x29, sp
  400db0:	stp	x19, x20, [sp, #16]
  400db4:	adrp	x20, 411000 <__FRAME_END__+0xff38>
  400db8:	add	x20, x20, #0xd20
  400dbc:	stp	x21, x22, [sp, #32]
  400dc0:	adrp	x21, 411000 <__FRAME_END__+0xff38>
  400dc4:	add	x21, x21, #0xd18
  400dc8:	sub	x20, x20, x21
  400dcc:	mov	w22, w0
  400dd0:	stp	x23, x24, [sp, #48]
  400dd4:	mov	x23, x1
  400dd8:	mov	x24, x2
  400ddc:	bl	4008e0 <_init>
  400de0:	cmp	xzr, x20, asr #3
  400de4:	b.eq	400e10 <__libc_csu_init+0x68>  // b.none
  400de8:	asr	x20, x20, #3
  400dec:	mov	x19, #0x0                   	// #0
  400df0:	ldr	x3, [x21, x19, lsl #3]
  400df4:	mov	x2, x24
  400df8:	add	x19, x19, #0x1
  400dfc:	mov	x1, x23
  400e00:	mov	w0, w22
  400e04:	blr	x3
  400e08:	cmp	x20, x19
  400e0c:	b.ne	400df0 <__libc_csu_init+0x48>  // b.any
  400e10:	ldp	x19, x20, [sp, #16]
  400e14:	ldp	x21, x22, [sp, #32]
  400e18:	ldp	x23, x24, [sp, #48]
  400e1c:	ldp	x29, x30, [sp], #64
  400e20:	ret
  400e24:	nop

0000000000400e28 <__libc_csu_fini>:
  400e28:	ret

Disassembly of section .fini:

0000000000400e2c <_fini>:
  400e2c:	stp	x29, x30, [sp, #-16]!
  400e30:	mov	x29, sp
  400e34:	ldp	x29, x30, [sp], #16
  400e38:	ret
