
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_statistics.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000788 <.init>:
 788:	stp	x29, x30, [sp, #-16]!
 78c:	mov	x29, sp
 790:	bl	860 <sqrt@plt+0x10>
 794:	ldp	x29, x30, [sp], #16
 798:	ret

Disassembly of section .plt:

00000000000007a0 <__cxa_finalize@plt-0x20>:
 7a0:	stp	x16, x30, [sp, #-16]!
 7a4:	adrp	x16, 11000 <PyInit__statistics@@Base+0xfec0>
 7a8:	ldr	x17, [x16, #4088]
 7ac:	add	x16, x16, #0xff8
 7b0:	br	x17
 7b4:	nop
 7b8:	nop
 7bc:	nop

00000000000007c0 <__cxa_finalize@plt>:
 7c0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7c4:	ldr	x17, [x16]
 7c8:	add	x16, x16, #0x0
 7cc:	br	x17

00000000000007d0 <PyErr_SetString@plt>:
 7d0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #8]
 7d8:	add	x16, x16, #0x8
 7dc:	br	x17

00000000000007e0 <PyFloat_FromDouble@plt>:
 7e0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #16]
 7e8:	add	x16, x16, #0x10
 7ec:	br	x17

00000000000007f0 <__gmon_start__@plt>:
 7f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #24]
 7f8:	add	x16, x16, #0x18
 7fc:	br	x17

0000000000000800 <_PyArg_CheckPositional@plt>:
 800:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 804:	ldr	x17, [x16, #32]
 808:	add	x16, x16, #0x20
 80c:	br	x17

0000000000000810 <PyErr_Occurred@plt>:
 810:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 814:	ldr	x17, [x16, #40]
 818:	add	x16, x16, #0x28
 81c:	br	x17

0000000000000820 <PyModule_Create2@plt>:
 820:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 824:	ldr	x17, [x16, #48]
 828:	add	x16, x16, #0x30
 82c:	br	x17

0000000000000830 <PyFloat_AsDouble@plt>:
 830:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 834:	ldr	x17, [x16, #56]
 838:	add	x16, x16, #0x38
 83c:	br	x17

0000000000000840 <log@plt>:
 840:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 844:	ldr	x17, [x16, #64]
 848:	add	x16, x16, #0x40
 84c:	br	x17

0000000000000850 <sqrt@plt>:
 850:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 854:	ldr	x17, [x16, #72]
 858:	add	x16, x16, #0x48
 85c:	br	x17

Disassembly of section .text:

0000000000000860 <PyInit__statistics@@Base-0x8e0>:
     860:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
     864:	ldr	x0, [x0, #4056]
     868:	cbz	x0, 870 <sqrt@plt+0x20>
     86c:	b	7f0 <__gmon_start__@plt>
     870:	ret
     874:	stp	x29, x30, [sp, #-32]!
     878:	mov	x29, sp
     87c:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     880:	add	x0, x0, #0x100
     884:	str	x0, [sp, #24]
     888:	ldr	x0, [sp, #24]
     88c:	str	x0, [sp, #24]
     890:	ldr	x1, [sp, #24]
     894:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     898:	add	x0, x0, #0x100
     89c:	cmp	x1, x0
     8a0:	b.eq	8d8 <sqrt@plt+0x88>  // b.none
     8a4:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
     8a8:	ldr	x0, [x0, #4024]
     8ac:	str	x0, [sp, #16]
     8b0:	ldr	x0, [sp, #16]
     8b4:	str	x0, [sp, #16]
     8b8:	ldr	x0, [sp, #16]
     8bc:	cmp	x0, #0x0
     8c0:	b.eq	8dc <sqrt@plt+0x8c>  // b.none
     8c4:	ldr	x1, [sp, #16]
     8c8:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     8cc:	add	x0, x0, #0x100
     8d0:	blr	x1
     8d4:	b	8dc <sqrt@plt+0x8c>
     8d8:	nop
     8dc:	ldp	x29, x30, [sp], #32
     8e0:	ret
     8e4:	stp	x29, x30, [sp, #-48]!
     8e8:	mov	x29, sp
     8ec:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     8f0:	add	x0, x0, #0x100
     8f4:	str	x0, [sp, #40]
     8f8:	ldr	x0, [sp, #40]
     8fc:	str	x0, [sp, #40]
     900:	ldr	x1, [sp, #40]
     904:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     908:	add	x0, x0, #0x100
     90c:	sub	x0, x1, x0
     910:	asr	x0, x0, #3
     914:	lsr	x1, x0, #63
     918:	add	x0, x1, x0
     91c:	asr	x0, x0, #1
     920:	str	x0, [sp, #32]
     924:	ldr	x0, [sp, #32]
     928:	cmp	x0, #0x0
     92c:	b.eq	968 <sqrt@plt+0x118>  // b.none
     930:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
     934:	ldr	x0, [x0, #4064]
     938:	str	x0, [sp, #24]
     93c:	ldr	x0, [sp, #24]
     940:	str	x0, [sp, #24]
     944:	ldr	x0, [sp, #24]
     948:	cmp	x0, #0x0
     94c:	b.eq	96c <sqrt@plt+0x11c>  // b.none
     950:	ldr	x2, [sp, #24]
     954:	ldr	x1, [sp, #32]
     958:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     95c:	add	x0, x0, #0x100
     960:	blr	x2
     964:	b	96c <sqrt@plt+0x11c>
     968:	nop
     96c:	ldp	x29, x30, [sp], #48
     970:	ret
     974:	stp	x29, x30, [sp, #-16]!
     978:	mov	x29, sp
     97c:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     980:	add	x0, x0, #0x100
     984:	ldrb	w0, [x0]
     988:	and	x0, x0, #0xff
     98c:	cmp	x0, #0x0
     990:	b.ne	9cc <sqrt@plt+0x17c>  // b.any
     994:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
     998:	ldr	x0, [x0, #4040]
     99c:	cmp	x0, #0x0
     9a0:	b.eq	9b4 <sqrt@plt+0x164>  // b.none
     9a4:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     9a8:	add	x0, x0, #0x50
     9ac:	ldr	x0, [x0]
     9b0:	bl	7c0 <__cxa_finalize@plt>
     9b4:	bl	874 <sqrt@plt+0x24>
     9b8:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
     9bc:	add	x0, x0, #0x100
     9c0:	mov	w1, #0x1                   	// #1
     9c4:	strb	w1, [x0]
     9c8:	b	9d0 <sqrt@plt+0x180>
     9cc:	nop
     9d0:	ldp	x29, x30, [sp], #16
     9d4:	ret
     9d8:	stp	x29, x30, [sp, #-16]!
     9dc:	mov	x29, sp
     9e0:	bl	8e4 <sqrt@plt+0x94>
     9e4:	nop
     9e8:	ldp	x29, x30, [sp], #16
     9ec:	ret
     9f0:	stp	x29, x30, [sp, #-96]!
     9f4:	mov	x29, sp
     9f8:	str	x0, [sp, #40]
     9fc:	str	x1, [sp, #32]
     a00:	str	x2, [sp, #24]
     a04:	str	xzr, [sp, #88]
     a08:	ldr	x0, [sp, #24]
     a0c:	cmp	x0, #0x2
     a10:	b.le	a20 <sqrt@plt+0x1d0>
     a14:	ldr	x0, [sp, #24]
     a18:	cmp	x0, #0x3
     a1c:	b.le	a40 <sqrt@plt+0x1f0>
     a20:	mov	x3, #0x3                   	// #3
     a24:	mov	x2, #0x3                   	// #3
     a28:	ldr	x1, [sp, #24]
     a2c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     a30:	add	x0, x0, #0x1c8
     a34:	bl	800 <_PyArg_CheckPositional@plt>
     a38:	cmp	w0, #0x0
     a3c:	b.eq	bb0 <sqrt@plt+0x360>  // b.none
     a40:	ldr	x0, [sp, #32]
     a44:	ldr	x0, [x0]
     a48:	ldr	x1, [x0, #8]
     a4c:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
     a50:	ldr	x0, [x0, #4032]
     a54:	cmp	x1, x0
     a58:	b.ne	a70 <sqrt@plt+0x220>  // b.any
     a5c:	ldr	x0, [sp, #32]
     a60:	ldr	x0, [x0]
     a64:	ldr	d0, [x0, #16]
     a68:	str	d0, [sp, #80]
     a6c:	b	a9c <sqrt@plt+0x24c>
     a70:	ldr	x0, [sp, #32]
     a74:	ldr	x0, [x0]
     a78:	bl	830 <PyFloat_AsDouble@plt>
     a7c:	str	d0, [sp, #80]
     a80:	ldr	d1, [sp, #80]
     a84:	fmov	d0, #-1.000000000000000000e+00
     a88:	fcmp	d1, d0
     a8c:	b.ne	a9c <sqrt@plt+0x24c>  // b.any
     a90:	bl	810 <PyErr_Occurred@plt>
     a94:	cmp	x0, #0x0
     a98:	b.ne	bb8 <sqrt@plt+0x368>  // b.any
     a9c:	ldr	x0, [sp, #32]
     aa0:	add	x0, x0, #0x8
     aa4:	ldr	x0, [x0]
     aa8:	ldr	x1, [x0, #8]
     aac:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
     ab0:	ldr	x0, [x0, #4032]
     ab4:	cmp	x1, x0
     ab8:	b.ne	ad4 <sqrt@plt+0x284>  // b.any
     abc:	ldr	x0, [sp, #32]
     ac0:	add	x0, x0, #0x8
     ac4:	ldr	x0, [x0]
     ac8:	ldr	d0, [x0, #16]
     acc:	str	d0, [sp, #72]
     ad0:	b	b04 <sqrt@plt+0x2b4>
     ad4:	ldr	x0, [sp, #32]
     ad8:	add	x0, x0, #0x8
     adc:	ldr	x0, [x0]
     ae0:	bl	830 <PyFloat_AsDouble@plt>
     ae4:	str	d0, [sp, #72]
     ae8:	ldr	d1, [sp, #72]
     aec:	fmov	d0, #-1.000000000000000000e+00
     af0:	fcmp	d1, d0
     af4:	b.ne	b04 <sqrt@plt+0x2b4>  // b.any
     af8:	bl	810 <PyErr_Occurred@plt>
     afc:	cmp	x0, #0x0
     b00:	b.ne	bc0 <sqrt@plt+0x370>  // b.any
     b04:	ldr	x0, [sp, #32]
     b08:	add	x0, x0, #0x10
     b0c:	ldr	x0, [x0]
     b10:	ldr	x1, [x0, #8]
     b14:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
     b18:	ldr	x0, [x0, #4032]
     b1c:	cmp	x1, x0
     b20:	b.ne	b3c <sqrt@plt+0x2ec>  // b.any
     b24:	ldr	x0, [sp, #32]
     b28:	add	x0, x0, #0x10
     b2c:	ldr	x0, [x0]
     b30:	ldr	d0, [x0, #16]
     b34:	str	d0, [sp, #64]
     b38:	b	b6c <sqrt@plt+0x31c>
     b3c:	ldr	x0, [sp, #32]
     b40:	add	x0, x0, #0x10
     b44:	ldr	x0, [x0]
     b48:	bl	830 <PyFloat_AsDouble@plt>
     b4c:	str	d0, [sp, #64]
     b50:	ldr	d1, [sp, #64]
     b54:	fmov	d0, #-1.000000000000000000e+00
     b58:	fcmp	d1, d0
     b5c:	b.ne	b6c <sqrt@plt+0x31c>  // b.any
     b60:	bl	810 <PyErr_Occurred@plt>
     b64:	cmp	x0, #0x0
     b68:	b.ne	bc8 <sqrt@plt+0x378>  // b.any
     b6c:	ldr	d2, [sp, #64]
     b70:	ldr	d1, [sp, #72]
     b74:	ldr	d0, [sp, #80]
     b78:	ldr	x0, [sp, #40]
     b7c:	bl	be0 <sqrt@plt+0x390>
     b80:	str	d0, [sp, #56]
     b84:	ldr	d1, [sp, #56]
     b88:	fmov	d0, #-1.000000000000000000e+00
     b8c:	fcmp	d1, d0
     b90:	b.ne	ba0 <sqrt@plt+0x350>  // b.any
     b94:	bl	810 <PyErr_Occurred@plt>
     b98:	cmp	x0, #0x0
     b9c:	b.ne	bd0 <sqrt@plt+0x380>  // b.any
     ba0:	ldr	d0, [sp, #56]
     ba4:	bl	7e0 <PyFloat_FromDouble@plt>
     ba8:	str	x0, [sp, #88]
     bac:	b	bd4 <sqrt@plt+0x384>
     bb0:	nop
     bb4:	b	bd4 <sqrt@plt+0x384>
     bb8:	nop
     bbc:	b	bd4 <sqrt@plt+0x384>
     bc0:	nop
     bc4:	b	bd4 <sqrt@plt+0x384>
     bc8:	nop
     bcc:	b	bd4 <sqrt@plt+0x384>
     bd0:	nop
     bd4:	ldr	x0, [sp, #88]
     bd8:	ldp	x29, x30, [sp], #96
     bdc:	ret
     be0:	stp	x29, x30, [sp, #-96]!
     be4:	mov	x29, sp
     be8:	str	x0, [sp, #40]
     bec:	str	d0, [sp, #32]
     bf0:	str	d1, [sp, #24]
     bf4:	str	d2, [sp, #16]
     bf8:	ldr	d0, [sp, #32]
     bfc:	fcmpe	d0, #0.0
     c00:	b.ls	10fc <sqrt@plt+0x8ac>  // b.plast
     c04:	ldr	d1, [sp, #32]
     c08:	fmov	d0, #1.000000000000000000e+00
     c0c:	fcmpe	d1, d0
     c10:	b.ge	10fc <sqrt@plt+0x8ac>  // b.tcont
     c14:	ldr	d0, [sp, #16]
     c18:	fcmpe	d0, #0.0
     c1c:	b.ls	10fc <sqrt@plt+0x8ac>  // b.plast
     c20:	ldr	d1, [sp, #32]
     c24:	fmov	d0, #5.000000000000000000e-01
     c28:	fsub	d0, d1, d0
     c2c:	str	d0, [sp, #64]
     c30:	ldr	d0, [sp, #64]
     c34:	fabs	d0, d0
     c38:	mov	x0, #0x3333333333333333    	// #3689348814741910323
     c3c:	movk	x0, #0x3fdb, lsl #48
     c40:	fmov	d1, x0
     c44:	fcmpe	d0, d1
     c48:	b.hi	dcc <sqrt@plt+0x57c>  // b.pmore
     c4c:	ldr	d0, [sp, #64]
     c50:	fmul	d0, d0, d0
     c54:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     c58:	ldr	d1, [x0, #584]
     c5c:	fsub	d0, d1, d0
     c60:	str	d0, [sp, #56]
     c64:	ldr	d0, [sp, #56]
     c68:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     c6c:	ldr	d1, [x0, #592]
     c70:	fmul	d0, d0, d1
     c74:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     c78:	ldr	d1, [x0, #600]
     c7c:	fadd	d1, d0, d1
     c80:	ldr	d0, [sp, #56]
     c84:	fmul	d0, d1, d0
     c88:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     c8c:	ldr	d1, [x0, #608]
     c90:	fadd	d1, d0, d1
     c94:	ldr	d0, [sp, #56]
     c98:	fmul	d0, d1, d0
     c9c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     ca0:	ldr	d1, [x0, #616]
     ca4:	fadd	d1, d0, d1
     ca8:	ldr	d0, [sp, #56]
     cac:	fmul	d0, d1, d0
     cb0:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     cb4:	ldr	d1, [x0, #624]
     cb8:	fadd	d1, d0, d1
     cbc:	ldr	d0, [sp, #56]
     cc0:	fmul	d0, d1, d0
     cc4:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     cc8:	ldr	d1, [x0, #632]
     ccc:	fadd	d1, d0, d1
     cd0:	ldr	d0, [sp, #56]
     cd4:	fmul	d0, d1, d0
     cd8:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     cdc:	ldr	d1, [x0, #640]
     ce0:	fadd	d1, d0, d1
     ce4:	ldr	d0, [sp, #56]
     ce8:	fmul	d0, d1, d0
     cec:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     cf0:	ldr	d1, [x0, #648]
     cf4:	fadd	d0, d0, d1
     cf8:	ldr	d1, [sp, #64]
     cfc:	fmul	d0, d1, d0
     d00:	str	d0, [sp, #88]
     d04:	ldr	d0, [sp, #56]
     d08:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     d0c:	ldr	d1, [x0, #656]
     d10:	fmul	d0, d0, d1
     d14:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     d18:	ldr	d1, [x0, #664]
     d1c:	fadd	d1, d0, d1
     d20:	ldr	d0, [sp, #56]
     d24:	fmul	d0, d1, d0
     d28:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     d2c:	ldr	d1, [x0, #672]
     d30:	fadd	d1, d0, d1
     d34:	ldr	d0, [sp, #56]
     d38:	fmul	d0, d1, d0
     d3c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     d40:	ldr	d1, [x0, #680]
     d44:	fadd	d1, d0, d1
     d48:	ldr	d0, [sp, #56]
     d4c:	fmul	d0, d1, d0
     d50:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     d54:	ldr	d1, [x0, #688]
     d58:	fadd	d1, d0, d1
     d5c:	ldr	d0, [sp, #56]
     d60:	fmul	d0, d1, d0
     d64:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     d68:	ldr	d1, [x0, #696]
     d6c:	fadd	d1, d0, d1
     d70:	ldr	d0, [sp, #56]
     d74:	fmul	d0, d1, d0
     d78:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     d7c:	ldr	d1, [x0, #704]
     d80:	fadd	d1, d0, d1
     d84:	ldr	d0, [sp, #56]
     d88:	fmul	d1, d1, d0
     d8c:	fmov	d0, #1.000000000000000000e+00
     d90:	fadd	d0, d1, d0
     d94:	str	d0, [sp, #80]
     d98:	ldr	d0, [sp, #80]
     d9c:	fcmp	d0, #0.0
     da0:	b.eq	1104 <sqrt@plt+0x8b4>  // b.none
     da4:	ldr	d0, [sp, #80]
     da8:	ldr	d1, [sp, #88]
     dac:	fdiv	d0, d1, d0
     db0:	str	d0, [sp, #72]
     db4:	ldr	d1, [sp, #72]
     db8:	ldr	d0, [sp, #16]
     dbc:	fmul	d1, d1, d0
     dc0:	ldr	d0, [sp, #24]
     dc4:	fadd	d0, d1, d0
     dc8:	b	1138 <sqrt@plt+0x8e8>
     dcc:	ldr	d0, [sp, #64]
     dd0:	fcmpe	d0, #0.0
     dd4:	b.hi	de0 <sqrt@plt+0x590>  // b.pmore
     dd8:	ldr	d0, [sp, #32]
     ddc:	b	dec <sqrt@plt+0x59c>
     de0:	fmov	d1, #1.000000000000000000e+00
     de4:	ldr	d0, [sp, #32]
     de8:	fsub	d0, d1, d0
     dec:	str	d0, [sp, #56]
     df0:	ldr	d0, [sp, #56]
     df4:	fcmpe	d0, #0.0
     df8:	b.ls	110c <sqrt@plt+0x8bc>  // b.plast
     dfc:	ldr	d1, [sp, #56]
     e00:	fmov	d0, #1.000000000000000000e+00
     e04:	fcmpe	d1, d0
     e08:	b.ge	110c <sqrt@plt+0x8bc>  // b.tcont
     e0c:	ldr	d0, [sp, #56]
     e10:	bl	840 <log@plt>
     e14:	fneg	d0, d0
     e18:	bl	850 <sqrt@plt>
     e1c:	str	d0, [sp, #56]
     e20:	ldr	d1, [sp, #56]
     e24:	fmov	d0, #5.000000000000000000e+00
     e28:	fcmpe	d1, d0
     e2c:	b.hi	f74 <sqrt@plt+0x724>  // b.pmore
     e30:	ldr	d0, [sp, #56]
     e34:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     e38:	ldr	d1, [x0, #712]
     e3c:	fsub	d0, d0, d1
     e40:	str	d0, [sp, #56]
     e44:	ldr	d0, [sp, #56]
     e48:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     e4c:	ldr	d1, [x0, #720]
     e50:	fmul	d0, d0, d1
     e54:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     e58:	ldr	d1, [x0, #728]
     e5c:	fadd	d1, d0, d1
     e60:	ldr	d0, [sp, #56]
     e64:	fmul	d0, d1, d0
     e68:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     e6c:	ldr	d1, [x0, #736]
     e70:	fadd	d1, d0, d1
     e74:	ldr	d0, [sp, #56]
     e78:	fmul	d0, d1, d0
     e7c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     e80:	ldr	d1, [x0, #744]
     e84:	fadd	d1, d0, d1
     e88:	ldr	d0, [sp, #56]
     e8c:	fmul	d0, d1, d0
     e90:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     e94:	ldr	d1, [x0, #752]
     e98:	fadd	d1, d0, d1
     e9c:	ldr	d0, [sp, #56]
     ea0:	fmul	d0, d1, d0
     ea4:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     ea8:	ldr	d1, [x0, #760]
     eac:	fadd	d1, d0, d1
     eb0:	ldr	d0, [sp, #56]
     eb4:	fmul	d0, d1, d0
     eb8:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     ebc:	ldr	d1, [x0, #768]
     ec0:	fadd	d1, d0, d1
     ec4:	ldr	d0, [sp, #56]
     ec8:	fmul	d0, d1, d0
     ecc:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     ed0:	ldr	d1, [x0, #776]
     ed4:	fadd	d0, d0, d1
     ed8:	str	d0, [sp, #88]
     edc:	ldr	d0, [sp, #56]
     ee0:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     ee4:	ldr	d1, [x0, #784]
     ee8:	fmul	d0, d0, d1
     eec:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     ef0:	ldr	d1, [x0, #792]
     ef4:	fadd	d1, d0, d1
     ef8:	ldr	d0, [sp, #56]
     efc:	fmul	d0, d1, d0
     f00:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     f04:	ldr	d1, [x0, #800]
     f08:	fadd	d1, d0, d1
     f0c:	ldr	d0, [sp, #56]
     f10:	fmul	d0, d1, d0
     f14:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     f18:	ldr	d1, [x0, #808]
     f1c:	fadd	d1, d0, d1
     f20:	ldr	d0, [sp, #56]
     f24:	fmul	d0, d1, d0
     f28:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     f2c:	ldr	d1, [x0, #816]
     f30:	fadd	d1, d0, d1
     f34:	ldr	d0, [sp, #56]
     f38:	fmul	d0, d1, d0
     f3c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     f40:	ldr	d1, [x0, #824]
     f44:	fadd	d1, d0, d1
     f48:	ldr	d0, [sp, #56]
     f4c:	fmul	d0, d1, d0
     f50:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     f54:	ldr	d1, [x0, #832]
     f58:	fadd	d1, d0, d1
     f5c:	ldr	d0, [sp, #56]
     f60:	fmul	d1, d1, d0
     f64:	fmov	d0, #1.000000000000000000e+00
     f68:	fadd	d0, d1, d0
     f6c:	str	d0, [sp, #80]
     f70:	b	10b0 <sqrt@plt+0x860>
     f74:	ldr	d1, [sp, #56]
     f78:	fmov	d0, #5.000000000000000000e+00
     f7c:	fsub	d0, d1, d0
     f80:	str	d0, [sp, #56]
     f84:	ldr	d0, [sp, #56]
     f88:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     f8c:	ldr	d1, [x0, #840]
     f90:	fmul	d0, d0, d1
     f94:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     f98:	ldr	d1, [x0, #848]
     f9c:	fadd	d1, d0, d1
     fa0:	ldr	d0, [sp, #56]
     fa4:	fmul	d0, d1, d0
     fa8:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     fac:	ldr	d1, [x0, #856]
     fb0:	fadd	d1, d0, d1
     fb4:	ldr	d0, [sp, #56]
     fb8:	fmul	d0, d1, d0
     fbc:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     fc0:	ldr	d1, [x0, #864]
     fc4:	fadd	d1, d0, d1
     fc8:	ldr	d0, [sp, #56]
     fcc:	fmul	d0, d1, d0
     fd0:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     fd4:	ldr	d1, [x0, #872]
     fd8:	fadd	d1, d0, d1
     fdc:	ldr	d0, [sp, #56]
     fe0:	fmul	d0, d1, d0
     fe4:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     fe8:	ldr	d1, [x0, #880]
     fec:	fadd	d1, d0, d1
     ff0:	ldr	d0, [sp, #56]
     ff4:	fmul	d0, d1, d0
     ff8:	adrp	x0, 1000 <sqrt@plt+0x7b0>
     ffc:	ldr	d1, [x0, #888]
    1000:	fadd	d1, d0, d1
    1004:	ldr	d0, [sp, #56]
    1008:	fmul	d0, d1, d0
    100c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1010:	ldr	d1, [x0, #896]
    1014:	fadd	d0, d0, d1
    1018:	str	d0, [sp, #88]
    101c:	ldr	d0, [sp, #56]
    1020:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1024:	ldr	d1, [x0, #904]
    1028:	fmul	d0, d0, d1
    102c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1030:	ldr	d1, [x0, #912]
    1034:	fadd	d1, d0, d1
    1038:	ldr	d0, [sp, #56]
    103c:	fmul	d0, d1, d0
    1040:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1044:	ldr	d1, [x0, #920]
    1048:	fadd	d1, d0, d1
    104c:	ldr	d0, [sp, #56]
    1050:	fmul	d0, d1, d0
    1054:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1058:	ldr	d1, [x0, #928]
    105c:	fadd	d1, d0, d1
    1060:	ldr	d0, [sp, #56]
    1064:	fmul	d0, d1, d0
    1068:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    106c:	ldr	d1, [x0, #936]
    1070:	fadd	d1, d0, d1
    1074:	ldr	d0, [sp, #56]
    1078:	fmul	d0, d1, d0
    107c:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1080:	ldr	d1, [x0, #944]
    1084:	fadd	d1, d0, d1
    1088:	ldr	d0, [sp, #56]
    108c:	fmul	d0, d1, d0
    1090:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1094:	ldr	d1, [x0, #952]
    1098:	fadd	d1, d0, d1
    109c:	ldr	d0, [sp, #56]
    10a0:	fmul	d1, d1, d0
    10a4:	fmov	d0, #1.000000000000000000e+00
    10a8:	fadd	d0, d1, d0
    10ac:	str	d0, [sp, #80]
    10b0:	ldr	d0, [sp, #80]
    10b4:	fcmp	d0, #0.0
    10b8:	b.eq	1114 <sqrt@plt+0x8c4>  // b.none
    10bc:	ldr	d0, [sp, #80]
    10c0:	ldr	d1, [sp, #88]
    10c4:	fdiv	d0, d1, d0
    10c8:	str	d0, [sp, #72]
    10cc:	ldr	d0, [sp, #64]
    10d0:	fcmpe	d0, #0.0
    10d4:	b.pl	10e4 <sqrt@plt+0x894>  // b.nfrst
    10d8:	ldr	d0, [sp, #72]
    10dc:	fneg	d0, d0
    10e0:	str	d0, [sp, #72]
    10e4:	ldr	d1, [sp, #72]
    10e8:	ldr	d0, [sp, #16]
    10ec:	fmul	d1, d1, d0
    10f0:	ldr	d0, [sp, #24]
    10f4:	fadd	d0, d1, d0
    10f8:	b	1138 <sqrt@plt+0x8e8>
    10fc:	nop
    1100:	b	1118 <sqrt@plt+0x8c8>
    1104:	nop
    1108:	b	1118 <sqrt@plt+0x8c8>
    110c:	nop
    1110:	b	1118 <sqrt@plt+0x8c8>
    1114:	nop
    1118:	adrp	x0, 11000 <PyInit__statistics@@Base+0xfec0>
    111c:	ldr	x0, [x0, #4048]
    1120:	ldr	x2, [x0]
    1124:	adrp	x0, 1000 <sqrt@plt+0x7b0>
    1128:	add	x1, x0, #0x1e0
    112c:	mov	x0, x2
    1130:	bl	7d0 <PyErr_SetString@plt>
    1134:	fmov	d0, #-1.000000000000000000e+00
    1138:	ldp	x29, x30, [sp], #96
    113c:	ret

0000000000001140 <PyInit__statistics@@Base>:
    1140:	stp	x29, x30, [sp, #-32]!
    1144:	mov	x29, sp
    1148:	mov	w1, #0x3f5                 	// #1013
    114c:	adrp	x0, 12000 <PyInit__statistics@@Base+0x10ec0>
    1150:	add	x0, x0, #0x98
    1154:	bl	820 <PyModule_Create2@plt>
    1158:	str	x0, [sp, #24]
    115c:	ldr	x0, [sp, #24]
    1160:	cmp	x0, #0x0
    1164:	b.ne	1170 <PyInit__statistics@@Base+0x30>  // b.any
    1168:	mov	x0, #0x0                   	// #0
    116c:	b	1174 <PyInit__statistics@@Base+0x34>
    1170:	ldr	x0, [sp, #24]
    1174:	ldp	x29, x30, [sp], #32
    1178:	ret

Disassembly of section .fini:

000000000000117c <.fini>:
    117c:	stp	x29, x30, [sp, #-16]!
    1180:	mov	x29, sp
    1184:	ldp	x29, x30, [sp], #16
    1188:	ret
