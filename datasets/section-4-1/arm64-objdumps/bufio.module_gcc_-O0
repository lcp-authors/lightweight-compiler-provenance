
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bufio.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_memcpy>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x2, [sp, #24]
  18:	ldr	x1, [sp, #32]
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <grub_memmove>
  24:	ldp	x29, x30, [sp], #48
  28:	ret

000000000000002c <grub_bufio_open>:
  2c:	stp	x29, x30, [sp, #-48]!
  30:	mov	x29, sp
  34:	str	x0, [sp, #24]
  38:	str	x1, [sp, #16]
  3c:	str	xzr, [sp, #40]
  40:	mov	x0, #0x68                  	// #104
  44:	bl	0 <grub_zalloc>
  48:	str	x0, [sp, #32]
  4c:	ldr	x0, [sp, #32]
  50:	cmp	x0, #0x0
  54:	b.ne	60 <grub_bufio_open+0x34>  // b.any
  58:	mov	x0, #0x0                   	// #0
  5c:	b	184 <grub_bufio_open+0x158>
  60:	ldr	x0, [sp, #16]
  64:	cmp	x0, #0x0
  68:	b.ne	78 <grub_bufio_open+0x4c>  // b.any
  6c:	mov	x0, #0x2000                	// #8192
  70:	str	x0, [sp, #16]
  74:	b	8c <grub_bufio_open+0x60>
  78:	ldr	x0, [sp, #16]
  7c:	cmp	x0, #0x100, lsl #12
  80:	b.ls	8c <grub_bufio_open+0x60>  // b.plast
  84:	mov	x0, #0x100000              	// #1048576
  88:	str	x0, [sp, #16]
  8c:	ldr	x0, [sp, #24]
  90:	ldr	x0, [x0, #64]
  94:	ldr	x1, [sp, #16]
  98:	cmp	x1, x0
  9c:	b.ls	d4 <grub_bufio_open+0xa8>  // b.plast
  a0:	ldr	x0, [sp, #24]
  a4:	ldr	x0, [x0, #64]
  a8:	mov	x1, #0x100000              	// #1048576
  ac:	cmp	x0, #0x100, lsl #12
  b0:	csel	x0, x0, x1, ls  // ls = plast
  b4:	str	x0, [sp, #16]
  b8:	b	d4 <grub_bufio_open+0xa8>
  bc:	ldr	x0, [sp, #16]
  c0:	sub	x1, x0, #0x1
  c4:	ldr	x0, [sp, #16]
  c8:	orr	x0, x1, x0
  cc:	add	x0, x0, #0x1
  d0:	str	x0, [sp, #16]
  d4:	ldr	x0, [sp, #16]
  d8:	sub	x1, x0, #0x1
  dc:	ldr	x0, [sp, #16]
  e0:	and	x0, x1, x0
  e4:	cmp	x0, #0x0
  e8:	b.ne	bc <grub_bufio_open+0x90>  // b.any
  ec:	ldr	x0, [sp, #16]
  f0:	add	x0, x0, #0x20
  f4:	bl	0 <grub_zalloc>
  f8:	str	x0, [sp, #40]
  fc:	ldr	x0, [sp, #40]
 100:	cmp	x0, #0x0
 104:	b.ne	118 <grub_bufio_open+0xec>  // b.any
 108:	ldr	x0, [sp, #32]
 10c:	bl	0 <grub_free>
 110:	mov	x0, #0x0                   	// #0
 114:	b	184 <grub_bufio_open+0x158>
 118:	ldr	x0, [sp, #40]
 11c:	ldr	x1, [sp, #24]
 120:	str	x1, [x0]
 124:	ldr	x0, [sp, #40]
 128:	ldr	x1, [sp, #16]
 12c:	str	x1, [x0, #8]
 130:	ldr	x0, [sp, #24]
 134:	ldr	x1, [x0, #8]
 138:	ldr	x0, [sp, #32]
 13c:	str	x1, [x0, #8]
 140:	ldr	x0, [sp, #24]
 144:	ldr	x1, [x0, #64]
 148:	ldr	x0, [sp, #32]
 14c:	str	x1, [x0, #64]
 150:	ldr	x0, [sp, #32]
 154:	ldr	x1, [sp, #40]
 158:	str	x1, [x0, #80]
 15c:	ldr	x0, [sp, #32]
 160:	adrp	x1, 0 <grub_memcpy>
 164:	add	x1, x1, #0x0
 168:	ldr	x1, [x1]
 16c:	str	x1, [x0, #16]
 170:	ldr	x0, [sp, #24]
 174:	ldr	w1, [x0, #72]
 178:	ldr	x0, [sp, #32]
 17c:	str	w1, [x0, #72]
 180:	ldr	x0, [sp, #32]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	nop
	...

0000000000000198 <grub_buffile_open>:
 198:	stp	x29, x30, [sp, #-64]!
 19c:	mov	x29, sp
 1a0:	str	x0, [sp, #40]
 1a4:	str	w1, [sp, #36]
 1a8:	str	x2, [sp, #24]
 1ac:	ldr	w1, [sp, #36]
 1b0:	ldr	x0, [sp, #40]
 1b4:	bl	0 <grub_file_open>
 1b8:	str	x0, [sp, #56]
 1bc:	ldr	x0, [sp, #56]
 1c0:	cmp	x0, #0x0
 1c4:	b.ne	1d0 <grub_buffile_open+0x38>  // b.any
 1c8:	mov	x0, #0x0                   	// #0
 1cc:	b	200 <grub_buffile_open+0x68>
 1d0:	ldr	x1, [sp, #24]
 1d4:	ldr	x0, [sp, #56]
 1d8:	bl	2c <grub_bufio_open>
 1dc:	str	x0, [sp, #48]
 1e0:	ldr	x0, [sp, #48]
 1e4:	cmp	x0, #0x0
 1e8:	b.ne	1fc <grub_buffile_open+0x64>  // b.any
 1ec:	ldr	x0, [sp, #56]
 1f0:	bl	0 <grub_file_close>
 1f4:	mov	x0, #0x0                   	// #0
 1f8:	b	200 <grub_buffile_open+0x68>
 1fc:	ldr	x0, [sp, #48]
 200:	ldp	x29, x30, [sp], #64
 204:	ret

0000000000000208 <grub_bufio_read>:
 208:	stp	x29, x30, [sp, #-112]!
 20c:	mov	x29, sp
 210:	str	x0, [sp, #40]
 214:	str	x1, [sp, #32]
 218:	str	x2, [sp, #24]
 21c:	str	xzr, [sp, #104]
 220:	ldr	x0, [sp, #40]
 224:	ldr	x0, [x0, #80]
 228:	str	x0, [sp, #88]
 22c:	ldr	x0, [sp, #40]
 230:	ldr	x0, [x0, #64]
 234:	cmn	x0, #0x1
 238:	b.ne	250 <grub_bufio_read+0x48>  // b.any
 23c:	ldr	x0, [sp, #88]
 240:	ldr	x0, [x0]
 244:	ldr	x1, [x0, #64]
 248:	ldr	x0, [sp, #40]
 24c:	str	x1, [x0, #64]
 250:	ldr	x0, [sp, #40]
 254:	ldr	x1, [x0, #24]
 258:	ldr	x0, [sp, #88]
 25c:	ldr	x0, [x0, #24]
 260:	cmp	x1, x0
 264:	b.cc	320 <grub_bufio_read+0x118>  // b.lo, b.ul, b.last
 268:	ldr	x0, [sp, #40]
 26c:	ldr	x1, [x0, #24]
 270:	ldr	x0, [sp, #88]
 274:	ldr	x2, [x0, #24]
 278:	ldr	x0, [sp, #88]
 27c:	ldr	x0, [x0, #16]
 280:	add	x0, x2, x0
 284:	cmp	x1, x0
 288:	b.cs	320 <grub_bufio_read+0x118>  // b.hs, b.nlast
 28c:	ldr	x0, [sp, #40]
 290:	ldr	x1, [x0, #24]
 294:	ldr	x0, [sp, #88]
 298:	ldr	x0, [x0, #24]
 29c:	sub	x0, x1, x0
 2a0:	str	x0, [sp, #80]
 2a4:	ldr	x0, [sp, #88]
 2a8:	ldr	x1, [x0, #16]
 2ac:	ldr	x0, [sp, #80]
 2b0:	sub	x0, x1, x0
 2b4:	str	x0, [sp, #96]
 2b8:	ldr	x1, [sp, #96]
 2bc:	ldr	x0, [sp, #24]
 2c0:	cmp	x1, x0
 2c4:	b.ls	2d0 <grub_bufio_read+0xc8>  // b.plast
 2c8:	ldr	x0, [sp, #24]
 2cc:	str	x0, [sp, #96]
 2d0:	ldr	x0, [sp, #80]
 2d4:	add	x0, x0, #0x20
 2d8:	ldr	x1, [sp, #88]
 2dc:	add	x0, x1, x0
 2e0:	ldr	x2, [sp, #96]
 2e4:	mov	x1, x0
 2e8:	ldr	x0, [sp, #32]
 2ec:	bl	0 <grub_memcpy>
 2f0:	ldr	x1, [sp, #24]
 2f4:	ldr	x0, [sp, #96]
 2f8:	sub	x0, x1, x0
 2fc:	str	x0, [sp, #24]
 300:	ldr	x1, [sp, #104]
 304:	ldr	x0, [sp, #96]
 308:	add	x0, x1, x0
 30c:	str	x0, [sp, #104]
 310:	ldr	x1, [sp, #32]
 314:	ldr	x0, [sp, #96]
 318:	add	x0, x1, x0
 31c:	str	x0, [sp, #32]
 320:	ldr	x0, [sp, #24]
 324:	cmp	x0, #0x0
 328:	b.ne	334 <grub_bufio_read+0x12c>  // b.any
 32c:	ldr	x0, [sp, #104]
 330:	b	5d0 <grub_bufio_read+0x3c8>
 334:	ldr	x0, [sp, #40]
 338:	ldr	x1, [x0, #24]
 33c:	ldr	x0, [sp, #104]
 340:	add	x1, x1, x0
 344:	ldr	x0, [sp, #24]
 348:	add	x0, x1, x0
 34c:	sub	x1, x0, #0x1
 350:	ldr	x0, [sp, #88]
 354:	ldr	x0, [x0, #8]
 358:	neg	x0, x0
 35c:	and	x0, x1, x0
 360:	str	x0, [sp, #72]
 364:	ldr	x0, [sp, #40]
 368:	ldr	x1, [x0, #24]
 36c:	ldr	x0, [sp, #104]
 370:	add	x0, x1, x0
 374:	ldr	x1, [sp, #72]
 378:	cmp	x1, x0
 37c:	b.ls	4e0 <grub_bufio_read+0x2d8>  // b.plast
 380:	ldr	x0, [sp, #40]
 384:	ldr	x1, [x0, #24]
 388:	ldr	x0, [sp, #104]
 38c:	add	x0, x1, x0
 390:	ldr	x1, [sp, #72]
 394:	sub	x0, x1, x0
 398:	str	x0, [sp, #64]
 39c:	ldr	x0, [sp, #88]
 3a0:	ldr	x2, [x0]
 3a4:	ldr	x0, [sp, #40]
 3a8:	ldr	x1, [x0, #24]
 3ac:	ldr	x0, [sp, #104]
 3b0:	add	x0, x1, x0
 3b4:	mov	x1, x0
 3b8:	mov	x0, x2
 3bc:	bl	0 <grub_file_seek>
 3c0:	ldr	x0, [sp, #88]
 3c4:	ldr	x0, [x0]
 3c8:	ldr	x2, [sp, #64]
 3cc:	ldr	x1, [sp, #32]
 3d0:	bl	0 <grub_file_read>
 3d4:	str	x0, [sp, #56]
 3d8:	ldr	x0, [sp, #56]
 3dc:	cmp	x0, #0x0
 3e0:	b.ge	3ec <grub_bufio_read+0x1e4>  // b.tcont
 3e4:	mov	x0, #0xffffffffffffffff    	// #-1
 3e8:	b	5d0 <grub_bufio_read+0x3c8>
 3ec:	ldr	x0, [sp, #40]
 3f0:	ldr	x0, [x0, #64]
 3f4:	cmn	x0, #0x1
 3f8:	b.ne	410 <grub_bufio_read+0x208>  // b.any
 3fc:	ldr	x0, [sp, #88]
 400:	ldr	x0, [x0]
 404:	ldr	x1, [x0, #64]
 408:	ldr	x0, [sp, #40]
 40c:	str	x1, [x0, #64]
 410:	ldr	x0, [sp, #56]
 414:	ldr	x1, [sp, #24]
 418:	sub	x0, x1, x0
 41c:	str	x0, [sp, #24]
 420:	ldr	x0, [sp, #56]
 424:	ldr	x1, [sp, #32]
 428:	add	x0, x1, x0
 42c:	str	x0, [sp, #32]
 430:	ldr	x0, [sp, #56]
 434:	ldr	x1, [sp, #104]
 438:	add	x0, x1, x0
 43c:	str	x0, [sp, #104]
 440:	ldr	x0, [sp, #64]
 444:	ldr	x1, [sp, #56]
 448:	cmp	x1, x0
 44c:	b.eq	4e0 <grub_bufio_read+0x2d8>  // b.none
 450:	ldr	x1, [sp, #56]
 454:	ldr	x0, [sp, #88]
 458:	str	x1, [x0, #16]
 45c:	ldr	x0, [sp, #88]
 460:	ldr	x1, [x0, #16]
 464:	ldr	x0, [sp, #88]
 468:	ldr	x0, [x0, #8]
 46c:	cmp	x1, x0
 470:	b.ls	484 <grub_bufio_read+0x27c>  // b.plast
 474:	ldr	x0, [sp, #88]
 478:	ldr	x1, [x0, #8]
 47c:	ldr	x0, [sp, #88]
 480:	str	x1, [x0, #16]
 484:	ldr	x0, [sp, #40]
 488:	ldr	x1, [x0, #24]
 48c:	ldr	x0, [sp, #104]
 490:	add	x1, x1, x0
 494:	ldr	x0, [sp, #88]
 498:	ldr	x0, [x0, #16]
 49c:	sub	x1, x1, x0
 4a0:	ldr	x0, [sp, #88]
 4a4:	str	x1, [x0, #24]
 4a8:	ldr	x0, [sp, #88]
 4ac:	add	x3, x0, #0x20
 4b0:	ldr	x0, [sp, #88]
 4b4:	ldr	x0, [x0, #16]
 4b8:	neg	x0, x0
 4bc:	ldr	x1, [sp, #32]
 4c0:	add	x1, x1, x0
 4c4:	ldr	x0, [sp, #88]
 4c8:	ldr	x0, [x0, #16]
 4cc:	mov	x2, x0
 4d0:	mov	x0, x3
 4d4:	bl	0 <grub_memcpy>
 4d8:	ldr	x0, [sp, #104]
 4dc:	b	5d0 <grub_bufio_read+0x3c8>
 4e0:	ldr	x0, [sp, #88]
 4e4:	ldr	x0, [x0]
 4e8:	ldr	x1, [sp, #72]
 4ec:	bl	0 <grub_file_seek>
 4f0:	ldr	x0, [sp, #88]
 4f4:	ldr	x3, [x0]
 4f8:	ldr	x0, [sp, #88]
 4fc:	add	x1, x0, #0x20
 500:	ldr	x0, [sp, #88]
 504:	ldr	x0, [x0, #8]
 508:	mov	x2, x0
 50c:	mov	x0, x3
 510:	bl	0 <grub_file_read>
 514:	str	x0, [sp, #56]
 518:	ldr	x0, [sp, #56]
 51c:	cmp	x0, #0x0
 520:	b.ge	52c <grub_bufio_read+0x324>  // b.tcont
 524:	mov	x0, #0xffffffffffffffff    	// #-1
 528:	b	5d0 <grub_bufio_read+0x3c8>
 52c:	ldr	x0, [sp, #88]
 530:	ldr	x1, [sp, #72]
 534:	str	x1, [x0, #24]
 538:	ldr	x1, [sp, #56]
 53c:	ldr	x0, [sp, #88]
 540:	str	x1, [x0, #16]
 544:	ldr	x0, [sp, #40]
 548:	ldr	x0, [x0, #64]
 54c:	cmn	x0, #0x1
 550:	b.ne	568 <grub_bufio_read+0x360>  // b.any
 554:	ldr	x0, [sp, #88]
 558:	ldr	x0, [x0]
 55c:	ldr	x1, [x0, #64]
 560:	ldr	x0, [sp, #40]
 564:	str	x1, [x0, #64]
 568:	ldr	x0, [sp, #88]
 56c:	ldr	x0, [x0, #16]
 570:	ldr	x1, [sp, #24]
 574:	cmp	x1, x0
 578:	b.ls	588 <grub_bufio_read+0x380>  // b.plast
 57c:	ldr	x0, [sp, #88]
 580:	ldr	x0, [x0, #16]
 584:	str	x0, [sp, #24]
 588:	ldr	x0, [sp, #40]
 58c:	ldr	x1, [x0, #24]
 590:	ldr	x0, [sp, #104]
 594:	add	x1, x1, x0
 598:	ldr	x0, [sp, #72]
 59c:	sub	x0, x1, x0
 5a0:	add	x0, x0, #0x20
 5a4:	ldr	x1, [sp, #88]
 5a8:	add	x0, x1, x0
 5ac:	ldr	x2, [sp, #24]
 5b0:	mov	x1, x0
 5b4:	ldr	x0, [sp, #32]
 5b8:	bl	0 <grub_memcpy>
 5bc:	ldr	x1, [sp, #104]
 5c0:	ldr	x0, [sp, #24]
 5c4:	add	x0, x1, x0
 5c8:	str	x0, [sp, #104]
 5cc:	ldr	x0, [sp, #104]
 5d0:	ldp	x29, x30, [sp], #112
 5d4:	ret

00000000000005d8 <grub_bufio_close>:
 5d8:	stp	x29, x30, [sp, #-48]!
 5dc:	mov	x29, sp
 5e0:	str	x0, [sp, #24]
 5e4:	ldr	x0, [sp, #24]
 5e8:	ldr	x0, [x0, #80]
 5ec:	str	x0, [sp, #40]
 5f0:	ldr	x0, [sp, #40]
 5f4:	ldr	x0, [x0]
 5f8:	bl	0 <grub_file_close>
 5fc:	ldr	x0, [sp, #40]
 600:	bl	0 <grub_free>
 604:	ldr	x0, [sp, #24]
 608:	str	xzr, [x0, #8]
 60c:	adrp	x0, 0 <grub_memcpy>
 610:	add	x0, x0, #0x0
 614:	ldr	x0, [x0]
 618:	ldr	w0, [x0]
 61c:	ldp	x29, x30, [sp], #48
 620:	ret
 624:	nop
	...
