
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000010f8 <.init>:
    10f8:	stp	x29, x30, [sp, #-16]!
    10fc:	mov	x29, sp
    1100:	bl	1330 <_PyTime_GetMonotonicClock@plt+0x10>
    1104:	ldp	x29, x30, [sp], #16
    1108:	ret

Disassembly of section .plt:

0000000000001110 <PyMem_Free@plt-0x20>:
    1110:	stp	x16, x30, [sp, #-16]!
    1114:	adrp	x16, 12000 <PyInit__random@@Base+0x10370>
    1118:	ldr	x17, [x16, #4088]
    111c:	add	x16, x16, #0xff8
    1120:	br	x17
    1124:	nop
    1128:	nop
    112c:	nop

0000000000001130 <PyMem_Free@plt>:
    1130:	adrp	x16, 13000 <PyMem_Free>
    1134:	ldr	x17, [x16]
    1138:	add	x16, x16, #0x0
    113c:	br	x17

0000000000001140 <__cxa_finalize@plt>:
    1140:	adrp	x16, 13000 <PyMem_Free>
    1144:	ldr	x17, [x16, #8]
    1148:	add	x16, x16, #0x8
    114c:	br	x17

0000000000001150 <_PyTime_GetSystemClock@plt>:
    1150:	adrp	x16, 13000 <PyMem_Free>
    1154:	ldr	x17, [x16, #16]
    1158:	add	x16, x16, #0x10
    115c:	br	x17

0000000000001160 <_Py_Dealloc@plt>:
    1160:	adrp	x16, 13000 <PyMem_Free>
    1164:	ldr	x17, [x16, #24]
    1168:	add	x16, x16, #0x18
    116c:	br	x17

0000000000001170 <PyErr_NoMemory@plt>:
    1170:	adrp	x16, 13000 <PyMem_Free>
    1174:	ldr	x17, [x16, #32]
    1178:	add	x16, x16, #0x20
    117c:	br	x17

0000000000001180 <PyLong_FromSize_t@plt>:
    1180:	adrp	x16, 13000 <PyMem_Free>
    1184:	ldr	x17, [x16, #40]
    1188:	add	x16, x16, #0x28
    118c:	br	x17

0000000000001190 <_PyLong_NumBits@plt>:
    1190:	adrp	x16, 13000 <PyMem_Free>
    1194:	ldr	x17, [x16, #48]
    1198:	add	x16, x16, #0x30
    119c:	br	x17

00000000000011a0 <getpid@plt>:
    11a0:	adrp	x16, 13000 <PyMem_Free>
    11a4:	ldr	x17, [x16, #56]
    11a8:	add	x16, x16, #0x38
    11ac:	br	x17

00000000000011b0 <PyErr_SetString@plt>:
    11b0:	adrp	x16, 13000 <PyMem_Free>
    11b4:	ldr	x17, [x16, #64]
    11b8:	add	x16, x16, #0x40
    11bc:	br	x17

00000000000011c0 <_PyLong_FromByteArray@plt>:
    11c0:	adrp	x16, 13000 <PyMem_Free>
    11c4:	ldr	x17, [x16, #72]
    11c8:	add	x16, x16, #0x48
    11cc:	br	x17

00000000000011d0 <PyFloat_FromDouble@plt>:
    11d0:	adrp	x16, 13000 <PyMem_Free>
    11d4:	ldr	x17, [x16, #80]
    11d8:	add	x16, x16, #0x50
    11dc:	br	x17

00000000000011e0 <PyType_Ready@plt>:
    11e0:	adrp	x16, 13000 <PyMem_Free>
    11e4:	ldr	x17, [x16, #88]
    11e8:	add	x16, x16, #0x58
    11ec:	br	x17

00000000000011f0 <PyLong_FromLong@plt>:
    11f0:	adrp	x16, 13000 <PyMem_Free>
    11f4:	ldr	x17, [x16, #96]
    11f8:	add	x16, x16, #0x60
    11fc:	br	x17

0000000000001200 <PyErr_Clear@plt>:
    1200:	adrp	x16, 13000 <PyMem_Free>
    1204:	ldr	x17, [x16, #104]
    1208:	add	x16, x16, #0x68
    120c:	br	x17

0000000000001210 <__gmon_start__@plt>:
    1210:	adrp	x16, 13000 <PyMem_Free>
    1214:	ldr	x17, [x16, #112]
    1218:	add	x16, x16, #0x70
    121c:	br	x17

0000000000001220 <PyTuple_New@plt>:
    1220:	adrp	x16, 13000 <PyMem_Free>
    1224:	ldr	x17, [x16, #120]
    1228:	add	x16, x16, #0x78
    122c:	br	x17

0000000000001230 <_PyArg_CheckPositional@plt>:
    1230:	adrp	x16, 13000 <PyMem_Free>
    1234:	ldr	x17, [x16, #128]
    1238:	add	x16, x16, #0x80
    123c:	br	x17

0000000000001240 <PyErr_Occurred@plt>:
    1240:	adrp	x16, 13000 <PyMem_Free>
    1244:	ldr	x17, [x16, #136]
    1248:	add	x16, x16, #0x88
    124c:	br	x17

0000000000001250 <PyModule_Create2@plt>:
    1250:	adrp	x16, 13000 <PyMem_Free>
    1254:	ldr	x17, [x16, #144]
    1258:	add	x16, x16, #0x90
    125c:	br	x17

0000000000001260 <PyLong_AsLong@plt>:
    1260:	adrp	x16, 13000 <PyMem_Free>
    1264:	ldr	x17, [x16, #152]
    1268:	add	x16, x16, #0x98
    126c:	br	x17

0000000000001270 <PyObject_Hash@plt>:
    1270:	adrp	x16, 13000 <PyMem_Free>
    1274:	ldr	x17, [x16, #160]
    1278:	add	x16, x16, #0xa0
    127c:	br	x17

0000000000001280 <PyLong_AsUnsignedLong@plt>:
    1280:	adrp	x16, 13000 <PyMem_Free>
    1284:	ldr	x17, [x16, #168]
    1288:	add	x16, x16, #0xa8
    128c:	br	x17

0000000000001290 <PyLong_FromUnsignedLong@plt>:
    1290:	adrp	x16, 13000 <PyMem_Free>
    1294:	ldr	x17, [x16, #176]
    1298:	add	x16, x16, #0xb0
    129c:	br	x17

00000000000012a0 <PyModule_AddObject@plt>:
    12a0:	adrp	x16, 13000 <PyMem_Free>
    12a4:	ldr	x17, [x16, #184]
    12a8:	add	x16, x16, #0xb8
    12ac:	br	x17

00000000000012b0 <PyType_IsSubtype@plt>:
    12b0:	adrp	x16, 13000 <PyMem_Free>
    12b4:	ldr	x17, [x16, #192]
    12b8:	add	x16, x16, #0xc0
    12bc:	br	x17

00000000000012c0 <_PyLong_AsByteArray@plt>:
    12c0:	adrp	x16, 13000 <PyMem_Free>
    12c4:	ldr	x17, [x16, #200]
    12c8:	add	x16, x16, #0xc8
    12cc:	br	x17

00000000000012d0 <PyTuple_Size@plt>:
    12d0:	adrp	x16, 13000 <PyMem_Free>
    12d4:	ldr	x17, [x16, #208]
    12d8:	add	x16, x16, #0xd0
    12dc:	br	x17

00000000000012e0 <_PyOS_URandomNonblock@plt>:
    12e0:	adrp	x16, 13000 <PyMem_Free>
    12e4:	ldr	x17, [x16, #216]
    12e8:	add	x16, x16, #0xd8
    12ec:	br	x17

00000000000012f0 <_PyArg_NoKeywords@plt>:
    12f0:	adrp	x16, 13000 <PyMem_Free>
    12f4:	ldr	x17, [x16, #224]
    12f8:	add	x16, x16, #0xe0
    12fc:	br	x17

0000000000001300 <_PyLong_AsInt@plt>:
    1300:	adrp	x16, 13000 <PyMem_Free>
    1304:	ldr	x17, [x16, #232]
    1308:	add	x16, x16, #0xe8
    130c:	br	x17

0000000000001310 <PyMem_Malloc@plt>:
    1310:	adrp	x16, 13000 <PyMem_Free>
    1314:	ldr	x17, [x16, #240]
    1318:	add	x16, x16, #0xf0
    131c:	br	x17

0000000000001320 <_PyTime_GetMonotonicClock@plt>:
    1320:	adrp	x16, 13000 <PyMem_Free>
    1324:	ldr	x17, [x16, #248]
    1328:	add	x16, x16, #0xf8
    132c:	br	x17

Disassembly of section .text:

0000000000001330 <PyInit__random@@Base-0x960>:
    1330:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    1334:	ldr	x0, [x0, #4040]
    1338:	cbz	x0, 1340 <_PyTime_GetMonotonicClock@plt+0x20>
    133c:	b	1210 <__gmon_start__@plt>
    1340:	ret
    1344:	adrp	x0, 13000 <PyInit__random@@Base+0x11370>
    1348:	add	x0, x0, #0x3d0
    134c:	adrp	x1, 13000 <PyInit__random@@Base+0x11370>
    1350:	add	x1, x1, #0x3d0
    1354:	cmp	x1, x0
    1358:	b.eq	1370 <_PyTime_GetMonotonicClock@plt+0x50>  // b.none
    135c:	adrp	x1, 12000 <PyInit__random@@Base+0x10370>
    1360:	ldr	x1, [x1, #4000]
    1364:	cbz	x1, 1370 <_PyTime_GetMonotonicClock@plt+0x50>
    1368:	mov	x16, x1
    136c:	br	x16
    1370:	ret
    1374:	adrp	x0, 13000 <PyInit__random@@Base+0x11370>
    1378:	add	x0, x0, #0x3d0
    137c:	adrp	x1, 13000 <PyInit__random@@Base+0x11370>
    1380:	add	x1, x1, #0x3d0
    1384:	sub	x1, x1, x0
    1388:	mov	x2, #0x2                   	// #2
    138c:	asr	x1, x1, #3
    1390:	sdiv	x1, x1, x2
    1394:	cbz	x1, 13ac <_PyTime_GetMonotonicClock@plt+0x8c>
    1398:	adrp	x2, 12000 <PyInit__random@@Base+0x10370>
    139c:	ldr	x2, [x2, #4064]
    13a0:	cbz	x2, 13ac <_PyTime_GetMonotonicClock@plt+0x8c>
    13a4:	mov	x16, x2
    13a8:	br	x16
    13ac:	ret
    13b0:	adrp	x0, 13000 <PyInit__random@@Base+0x11370>
    13b4:	ldrb	w1, [x0, #976]
    13b8:	cbnz	w1, 13fc <_PyTime_GetMonotonicClock@plt+0xdc>
    13bc:	stp	x29, x30, [sp, #-32]!
    13c0:	mov	x29, sp
    13c4:	str	x19, [sp, #16]
    13c8:	mov	x19, x0
    13cc:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    13d0:	ldr	x0, [x0, #4016]
    13d4:	cbz	x0, 13e4 <_PyTime_GetMonotonicClock@plt+0xc4>
    13d8:	adrp	x0, 13000 <PyInit__random@@Base+0x11370>
    13dc:	ldr	x0, [x0, #256]
    13e0:	bl	1140 <__cxa_finalize@plt>
    13e4:	bl	1344 <_PyTime_GetMonotonicClock@plt+0x24>
    13e8:	mov	w0, #0x1                   	// #1
    13ec:	strb	w0, [x19, #976]
    13f0:	ldr	x19, [sp, #16]
    13f4:	ldp	x29, x30, [sp], #32
    13f8:	ret
    13fc:	ret
    1400:	b	1374 <_PyTime_GetMonotonicClock@plt+0x54>
    1404:	ldr	w1, [x0, #16]
    1408:	add	x6, x0, #0x14
    140c:	cmp	w1, #0x26f
    1410:	b.le	14b0 <_PyTime_GetMonotonicClock@plt+0x190>
    1414:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1418:	mov	x2, x6
    141c:	add	x7, x0, #0x3a0
    1420:	mov	x3, x6
    1424:	add	x8, x1, #0xde8
    1428:	ldp	w4, w5, [x3]
    142c:	bfxil	w4, w5, #0, #31
    1430:	ldr	w5, [x3, #1588]
    1434:	eor	w5, w5, w4, lsr #1
    1438:	and	x4, x4, #0x1
    143c:	ldr	w4, [x8, x4, lsl #2]
    1440:	eor	w4, w5, w4
    1444:	str	w4, [x3], #4
    1448:	cmp	x7, x3
    144c:	b.ne	1428 <_PyTime_GetMonotonicClock@plt+0x108>  // b.any
    1450:	add	x5, x0, #0x644
    1454:	add	x1, x1, #0xde8
    1458:	ldr	w3, [x2, #908]
    145c:	add	x2, x2, #0x4
    1460:	ldr	w4, [x2, #908]
    1464:	bfxil	w3, w4, #0, #31
    1468:	ldur	w4, [x2, #-4]
    146c:	eor	w4, w4, w3, lsr #1
    1470:	and	x3, x3, #0x1
    1474:	ldr	w3, [x1, x3, lsl #2]
    1478:	eor	w3, w4, w3
    147c:	str	w3, [x2, #904]
    1480:	cmp	x5, x2
    1484:	b.ne	1458 <_PyTime_GetMonotonicClock@plt+0x138>  // b.any
    1488:	ldr	w3, [x0, #20]
    148c:	ldr	w2, [x0, #2512]
    1490:	str	wzr, [x0, #16]
    1494:	bfxil	w2, w3, #0, #31
    1498:	ldr	w3, [x0, #1604]
    149c:	eor	w3, w3, w2, lsr #1
    14a0:	and	x2, x2, #0x1
    14a4:	ldr	w1, [x1, x2, lsl #2]
    14a8:	eor	w1, w3, w1
    14ac:	str	w1, [x0, #2512]
    14b0:	ldr	w1, [x0, #16]
    14b4:	add	w2, w1, #0x1
    14b8:	str	w2, [x0, #16]
    14bc:	mov	w0, #0x5680                	// #22144
    14c0:	ldr	w1, [x6, w1, sxtw #2]
    14c4:	movk	w0, #0x9d2c, lsl #16
    14c8:	eor	w1, w1, w1, lsr #11
    14cc:	and	w0, w0, w1, lsl #7
    14d0:	eor	w1, w0, w1
    14d4:	mov	w0, #0xefc60000            	// #-272236544
    14d8:	and	w0, w0, w1, lsl #15
    14dc:	eor	w0, w0, w1
    14e0:	eor	w0, w0, w0, lsr #18
    14e4:	ret
    14e8:	mov	x10, x0
    14ec:	stp	x29, x30, [sp, #-16]!
    14f0:	mov	x29, sp
    14f4:	bl	1404 <_PyTime_GetMonotonicClock@plt+0xe4>
    14f8:	mov	w9, w0
    14fc:	mov	x0, x10
    1500:	bl	1404 <_PyTime_GetMonotonicClock@plt+0xe4>
    1504:	lsr	w9, w9, #5
    1508:	lsr	w0, w0, #6
    150c:	mov	x1, #0x4190000000000000    	// #4724276009111650304
    1510:	scvtf	d0, w9
    1514:	fmov	d1, x1
    1518:	ldp	x29, x30, [sp], #16
    151c:	fmul	d0, d0, d1
    1520:	scvtf	d1, w0
    1524:	mov	x0, #0x3ca0000000000000    	// #4368491638549381120
    1528:	fadd	d0, d0, d1
    152c:	fmov	d1, x0
    1530:	fmul	d0, d0, d1
    1534:	b	11d0 <PyFloat_FromDouble@plt>
    1538:	ldr	x1, [x0]
    153c:	sub	x1, x1, #0x1
    1540:	str	x1, [x0]
    1544:	cbnz	x1, 154c <_PyTime_GetMonotonicClock@plt+0x22c>
    1548:	b	1160 <_Py_Dealloc@plt>
    154c:	ret
    1550:	stp	x29, x30, [sp, #-64]!
    1554:	mov	x29, sp
    1558:	stp	x19, x20, [sp, #16]
    155c:	stp	x21, x22, [sp, #32]
    1560:	mov	x21, x0
    1564:	mov	x0, #0x271                 	// #625
    1568:	str	x23, [sp, #48]
    156c:	bl	1220 <PyTuple_New@plt>
    1570:	mov	x19, x0
    1574:	cbz	x0, 15b0 <_PyTime_GetMonotonicClock@plt+0x290>
    1578:	add	x23, x21, #0x14
    157c:	add	x22, x0, #0x18
    1580:	mov	x20, #0x0                   	// #0
    1584:	ldr	w0, [x23, x20, lsl #2]
    1588:	bl	1290 <PyLong_FromUnsignedLong@plt>
    158c:	cbz	x0, 15c8 <_PyTime_GetMonotonicClock@plt+0x2a8>
    1590:	str	x0, [x22, x20, lsl #3]
    1594:	add	x20, x20, #0x1
    1598:	cmp	x20, #0x270
    159c:	b.ne	1584 <_PyTime_GetMonotonicClock@plt+0x264>  // b.any
    15a0:	ldrsw	x0, [x21, #16]
    15a4:	bl	11f0 <PyLong_FromLong@plt>
    15a8:	cbz	x0, 15c8 <_PyTime_GetMonotonicClock@plt+0x2a8>
    15ac:	str	x0, [x19, #5016]
    15b0:	mov	x0, x19
    15b4:	ldp	x19, x20, [sp, #16]
    15b8:	ldp	x21, x22, [sp, #32]
    15bc:	ldr	x23, [sp, #48]
    15c0:	ldp	x29, x30, [sp], #64
    15c4:	ret
    15c8:	mov	x0, x19
    15cc:	mov	x19, #0x0                   	// #0
    15d0:	bl	1538 <_PyTime_GetMonotonicClock@plt+0x218>
    15d4:	b	15b0 <_PyTime_GetMonotonicClock@plt+0x290>
    15d8:	stp	x29, x30, [sp, #-64]!
    15dc:	mov	x29, sp
    15e0:	stp	x19, x20, [sp, #16]
    15e4:	mov	x19, x1
    15e8:	str	x23, [sp, #48]
    15ec:	mov	x23, x0
    15f0:	ldr	x0, [x1, #8]
    15f4:	adrp	x1, 12000 <PyInit__random@@Base+0x10370>
    15f8:	stp	x21, x22, [sp, #32]
    15fc:	ldr	x1, [x1, #4008]
    1600:	cmp	x0, x1
    1604:	b.ne	1628 <_PyTime_GetMonotonicClock@plt+0x308>  // b.any
    1608:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    160c:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1610:	add	x1, x1, #0xd14
    1614:	ldr	x0, [x0, #4032]
    1618:	ldr	x0, [x0]
    161c:	bl	11b0 <PyErr_SetString@plt>
    1620:	mov	x20, #0x0                   	// #0
    1624:	b	171c <_PyTime_GetMonotonicClock@plt+0x3fc>
    1628:	bl	12b0 <PyType_IsSubtype@plt>
    162c:	cbnz	w0, 1608 <_PyTime_GetMonotonicClock@plt+0x2e8>
    1630:	mov	x0, x19
    1634:	bl	1300 <_PyLong_AsInt@plt>
    1638:	mov	w19, w0
    163c:	cmn	w0, #0x1
    1640:	b.ne	1660 <_PyTime_GetMonotonicClock@plt+0x340>  // b.any
    1644:	bl	1240 <PyErr_Occurred@plt>
    1648:	cbnz	x0, 1620 <_PyTime_GetMonotonicClock@plt+0x300>
    164c:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    1650:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1654:	add	x1, x1, #0xd39
    1658:	ldr	x0, [x0, #4024]
    165c:	b	1618 <_PyTime_GetMonotonicClock@plt+0x2f8>
    1660:	cmp	w0, #0x0
    1664:	b.le	164c <_PyTime_GetMonotonicClock@plt+0x32c>
    1668:	cmp	w0, #0x20
    166c:	b.gt	1698 <_PyTime_GetMonotonicClock@plt+0x378>
    1670:	neg	w19, w19
    1674:	mov	x0, x23
    1678:	bl	1404 <_PyTime_GetMonotonicClock@plt+0xe4>
    167c:	lsr	w0, w0, w19
    1680:	mov	w0, w0
    1684:	ldp	x19, x20, [sp, #16]
    1688:	ldp	x21, x22, [sp, #32]
    168c:	ldr	x23, [sp, #48]
    1690:	ldp	x29, x30, [sp], #64
    1694:	b	1290 <PyLong_FromUnsignedLong@plt>
    1698:	sub	w21, w0, #0x1
    169c:	asr	w21, w21, #5
    16a0:	add	w21, w21, #0x1
    16a4:	lsl	w22, w21, #2
    16a8:	sxtw	x22, w22
    16ac:	mov	x0, x22
    16b0:	bl	1310 <PyMem_Malloc@plt>
    16b4:	mov	x9, #0x0                   	// #0
    16b8:	mov	x20, x0
    16bc:	cbz	x0, 1718 <_PyTime_GetMonotonicClock@plt+0x3f8>
    16c0:	mov	w10, #0x20                  	// #32
    16c4:	mov	x0, x23
    16c8:	bl	1404 <_PyTime_GetMonotonicClock@plt+0xe4>
    16cc:	cmp	w19, #0x1f
    16d0:	b.gt	16dc <_PyTime_GetMonotonicClock@plt+0x3bc>
    16d4:	sub	w1, w10, w19
    16d8:	lsr	w0, w0, w1
    16dc:	str	w0, [x20, x9, lsl #2]
    16e0:	add	x9, x9, #0x1
    16e4:	sub	w19, w19, #0x20
    16e8:	cmp	w21, w9
    16ec:	b.gt	16c4 <_PyTime_GetMonotonicClock@plt+0x3a4>
    16f0:	mov	x1, x22
    16f4:	mov	w3, #0x0                   	// #0
    16f8:	mov	w2, #0x1                   	// #1
    16fc:	mov	x0, x20
    1700:	bl	11c0 <_PyLong_FromByteArray@plt>
    1704:	mov	x19, x0
    1708:	mov	x0, x20
    170c:	mov	x20, x19
    1710:	bl	1130 <PyMem_Free@plt>
    1714:	b	171c <_PyTime_GetMonotonicClock@plt+0x3fc>
    1718:	bl	1170 <PyErr_NoMemory@plt>
    171c:	mov	x0, x20
    1720:	ldp	x19, x20, [sp, #16]
    1724:	ldp	x21, x22, [sp, #32]
    1728:	ldr	x23, [sp, #48]
    172c:	ldp	x29, x30, [sp], #64
    1730:	ret
    1734:	sub	sp, sp, #0xa00
    1738:	stp	x29, x30, [sp]
    173c:	mov	x29, sp
    1740:	stp	x19, x20, [sp, #16]
    1744:	mov	x19, x0
    1748:	mov	x20, #0x0                   	// #0
    174c:	stp	x21, x22, [sp, #32]
    1750:	mov	x21, x1
    1754:	stp	x23, x24, [sp, #48]
    1758:	add	x24, x1, #0x18
    175c:	add	x23, sp, #0x40
    1760:	ldr	x0, [x24, x20, lsl #3]
    1764:	bl	1280 <PyLong_AsUnsignedLong@plt>
    1768:	mov	x22, x0
    176c:	cmn	x0, #0x1
    1770:	b.eq	17b8 <_PyTime_GetMonotonicClock@plt+0x498>  // b.none
    1774:	str	w22, [x23, x20, lsl #2]
    1778:	add	x20, x20, #0x1
    177c:	cmp	x20, #0x270
    1780:	b.ne	1760 <_PyTime_GetMonotonicClock@plt+0x440>  // b.any
    1784:	ldr	x0, [x21, #5016]
    1788:	bl	1260 <PyLong_AsLong@plt>
    178c:	cmn	x0, #0x1
    1790:	b.ne	17dc <_PyTime_GetMonotonicClock@plt+0x4bc>  // b.any
    1794:	bl	1240 <PyErr_Occurred@plt>
    1798:	cbnz	x0, 17c0 <_PyTime_GetMonotonicClock@plt+0x4a0>
    179c:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    17a0:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    17a4:	add	x1, x1, #0xd62
    17a8:	ldr	x0, [x0, #4024]
    17ac:	ldr	x0, [x0]
    17b0:	bl	11b0 <PyErr_SetString@plt>
    17b4:	b	17c0 <_PyTime_GetMonotonicClock@plt+0x4a0>
    17b8:	bl	1240 <PyErr_Occurred@plt>
    17bc:	cbz	x0, 1774 <_PyTime_GetMonotonicClock@plt+0x454>
    17c0:	mov	x0, #0x0                   	// #0
    17c4:	ldp	x29, x30, [sp]
    17c8:	ldp	x19, x20, [sp, #16]
    17cc:	ldp	x21, x22, [sp, #32]
    17d0:	ldp	x23, x24, [sp, #48]
    17d4:	add	sp, sp, #0xa00
    17d8:	ret
    17dc:	cmp	x0, #0x270
    17e0:	b.hi	179c <_PyTime_GetMonotonicClock@plt+0x47c>  // b.pmore
    17e4:	add	x19, x19, #0x14
    17e8:	mov	x1, #0x0                   	// #0
    17ec:	stur	w0, [x19, #-4]
    17f0:	ldr	w0, [x23, x1]
    17f4:	str	w0, [x19, x1]
    17f8:	add	x1, x1, #0x4
    17fc:	cmp	x1, #0x9c0
    1800:	b.ne	17f0 <_PyTime_GetMonotonicClock@plt+0x4d0>  // b.any
    1804:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    1808:	ldr	x0, [x0, #4048]
    180c:	ldr	x1, [x0]
    1810:	add	x1, x1, #0x1
    1814:	str	x1, [x0]
    1818:	b	17c4 <_PyTime_GetMonotonicClock@plt+0x4a4>
    181c:	stp	x29, x30, [sp, #-32]!
    1820:	mov	x29, sp
    1824:	stp	x19, x20, [sp, #16]
    1828:	mov	x20, x0
    182c:	ldr	x0, [x1, #8]
    1830:	ldr	x0, [x0, #168]
    1834:	tbnz	w0, #26, 1860 <_PyTime_GetMonotonicClock@plt+0x540>
    1838:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    183c:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1840:	add	x1, x1, #0xd70
    1844:	ldr	x0, [x0, #4032]
    1848:	ldr	x0, [x0]
    184c:	bl	11b0 <PyErr_SetString@plt>
    1850:	mov	x0, #0x0                   	// #0
    1854:	ldp	x19, x20, [sp, #16]
    1858:	ldp	x29, x30, [sp], #32
    185c:	ret
    1860:	mov	x19, x1
    1864:	mov	x0, x1
    1868:	bl	12d0 <PyTuple_Size@plt>
    186c:	cmp	x0, #0x271
    1870:	b.eq	1888 <_PyTime_GetMonotonicClock@plt+0x568>  // b.none
    1874:	adrp	x0, 12000 <PyInit__random@@Base+0x10370>
    1878:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    187c:	add	x1, x1, #0xd8d
    1880:	ldr	x0, [x0, #4024]
    1884:	b	1848 <_PyTime_GetMonotonicClock@plt+0x528>
    1888:	mov	x1, x19
    188c:	mov	x0, x20
    1890:	ldp	x19, x20, [sp, #16]
    1894:	ldp	x29, x30, [sp], #32
    1898:	b	1734 <_PyTime_GetMonotonicClock@plt+0x414>
    189c:	mov	w3, #0xd6aa                	// #54954
    18a0:	mov	w7, #0x8965                	// #35173
    18a4:	add	x6, x0, #0x14
    18a8:	add	x5, x0, #0x18
    18ac:	movk	w3, #0x12b, lsl #16
    18b0:	mov	w4, #0x1                   	// #1
    18b4:	movk	w7, #0x6c07, lsl #16
    18b8:	str	w3, [x0, #20]
    18bc:	ldur	w3, [x5, #-4]
    18c0:	eor	w3, w3, w3, lsr #30
    18c4:	madd	w3, w3, w7, w4
    18c8:	add	w4, w4, #0x1
    18cc:	str	w3, [x5], #4
    18d0:	cmp	w4, #0x270
    18d4:	b.ne	18bc <_PyTime_GetMonotonicClock@plt+0x59c>  // b.any
    18d8:	cmp	x2, #0x270
    18dc:	mov	x7, #0x270                 	// #624
    18e0:	mov	w10, #0x660d                	// #26125
    18e4:	csel	x7, x2, x7, cs  // cs = hs, nlast
    18e8:	mov	x5, #0x0                   	// #0
    18ec:	mov	x3, #0x1                   	// #1
    18f0:	movk	w10, #0x19, lsl #16
    18f4:	str	w4, [x0, #16]
    18f8:	add	x4, x6, x3, lsl #2
    18fc:	lsl	x9, x3, #2
    1900:	add	x3, x3, #0x1
    1904:	cmp	x3, #0x26f
    1908:	ldur	w4, [x4, #-4]
    190c:	ldr	w8, [x6, x9]
    1910:	eor	w4, w4, w4, lsr #30
    1914:	mul	w4, w4, w10
    1918:	eor	w4, w4, w8
    191c:	ldr	w8, [x1, x5, lsl #2]
    1920:	add	w8, w8, w5
    1924:	add	x5, x5, #0x1
    1928:	add	w4, w4, w8
    192c:	str	w4, [x6, x9]
    1930:	b.ls	1940 <_PyTime_GetMonotonicClock@plt+0x620>  // b.plast
    1934:	ldr	w3, [x0, #2512]
    1938:	str	w3, [x0, #20]
    193c:	mov	x3, #0x1                   	// #1
    1940:	cmp	x2, x5
    1944:	csel	x5, x5, xzr, hi  // hi = pmore
    1948:	subs	x7, x7, #0x1
    194c:	b.ne	18f8 <_PyTime_GetMonotonicClock@plt+0x5d8>  // b.any
    1950:	mov	w5, #0x8b65                	// #35685
    1954:	mov	x2, #0x26f                 	// #623
    1958:	movk	w5, #0x5d58, lsl #16
    195c:	add	x1, x6, x3, lsl #2
    1960:	lsl	x4, x3, #2
    1964:	ldur	w1, [x1, #-4]
    1968:	ldr	w7, [x6, x4]
    196c:	eor	w1, w1, w1, lsr #30
    1970:	mul	w1, w1, w5
    1974:	eor	w1, w1, w7
    1978:	sub	w1, w1, w3
    197c:	str	w1, [x6, x4]
    1980:	add	x3, x3, #0x1
    1984:	cmp	x3, #0x270
    1988:	b.ne	1998 <_PyTime_GetMonotonicClock@plt+0x678>  // b.any
    198c:	ldr	w1, [x0, #2512]
    1990:	mov	x3, #0x1                   	// #1
    1994:	str	w1, [x0, #20]
    1998:	subs	x2, x2, #0x1
    199c:	b.ne	195c <_PyTime_GetMonotonicClock@plt+0x63c>  // b.any
    19a0:	mov	w1, #0x80000000            	// #-2147483648
    19a4:	str	w1, [x0, #20]
    19a8:	ret
    19ac:	sub	sp, sp, #0x9e0
    19b0:	mov	x1, #0x9c0                 	// #2496
    19b4:	stp	x29, x30, [sp]
    19b8:	mov	x29, sp
    19bc:	stp	x19, x20, [sp, #16]
    19c0:	add	x20, sp, #0x20
    19c4:	mov	x19, x0
    19c8:	mov	x0, x20
    19cc:	bl	12e0 <_PyOS_URandomNonblock@plt>
    19d0:	tbnz	w0, #31, 19f8 <_PyTime_GetMonotonicClock@plt+0x6d8>
    19d4:	mov	x0, x19
    19d8:	mov	x1, x20
    19dc:	mov	x2, #0x270                 	// #624
    19e0:	bl	189c <_PyTime_GetMonotonicClock@plt+0x57c>
    19e4:	mov	w0, #0x0                   	// #0
    19e8:	ldp	x29, x30, [sp]
    19ec:	ldp	x19, x20, [sp, #16]
    19f0:	add	sp, sp, #0x9e0
    19f4:	ret
    19f8:	mov	w0, #0xffffffff            	// #-1
    19fc:	b	19e8 <_PyTime_GetMonotonicClock@plt+0x6c8>
    1a00:	stp	x29, x30, [sp, #-96]!
    1a04:	mov	x29, sp
    1a08:	stp	x19, x20, [sp, #16]
    1a0c:	adrp	x19, 12000 <PyInit__random@@Base+0x10370>
    1a10:	stp	x21, x22, [sp, #32]
    1a14:	stp	x23, x24, [sp, #48]
    1a18:	mov	x23, x0
    1a1c:	cbz	x1, 1a30 <_PyTime_GetMonotonicClock@plt+0x710>
    1a20:	mov	x0, x1
    1a24:	ldr	x1, [x19, #4048]
    1a28:	cmp	x0, x1
    1a2c:	b.ne	1a90 <_PyTime_GetMonotonicClock@plt+0x770>  // b.any
    1a30:	mov	x0, x23
    1a34:	bl	19ac <_PyTime_GetMonotonicClock@plt+0x68c>
    1a38:	tbz	w0, #31, 1a68 <_PyTime_GetMonotonicClock@plt+0x748>
    1a3c:	bl	1200 <PyErr_Clear@plt>
    1a40:	bl	1150 <_PyTime_GetSystemClock@plt>
    1a44:	str	x0, [sp, #72]
    1a48:	bl	11a0 <getpid@plt>
    1a4c:	str	w0, [sp, #80]
    1a50:	bl	1320 <_PyTime_GetMonotonicClock@plt>
    1a54:	stur	x0, [sp, #84]
    1a58:	add	x1, sp, #0x48
    1a5c:	mov	x0, x23
    1a60:	mov	x2, #0x5                   	// #5
    1a64:	bl	189c <_PyTime_GetMonotonicClock@plt+0x57c>
    1a68:	ldr	x19, [x19, #4048]
    1a6c:	ldr	x0, [x19]
    1a70:	add	x0, x0, #0x1
    1a74:	str	x0, [x19]
    1a78:	mov	x0, x19
    1a7c:	ldp	x19, x20, [sp, #16]
    1a80:	ldp	x21, x22, [sp, #32]
    1a84:	ldp	x23, x24, [sp, #48]
    1a88:	ldp	x29, x30, [sp], #96
    1a8c:	ret
    1a90:	ldr	x1, [x0, #8]
    1a94:	ldr	x1, [x1, #168]
    1a98:	tbz	w1, #24, 1afc <_PyTime_GetMonotonicClock@plt+0x7dc>
    1a9c:	adrp	x1, 12000 <PyInit__random@@Base+0x10370>
    1aa0:	ldr	x1, [x1, #4056]
    1aa4:	ldr	x1, [x1, #96]
    1aa8:	ldr	x1, [x1, #64]
    1aac:	blr	x1
    1ab0:	mov	x21, x0
    1ab4:	cbz	x0, 1b68 <_PyTime_GetMonotonicClock@plt+0x848>
    1ab8:	bl	1190 <_PyLong_NumBits@plt>
    1abc:	mov	x20, x0
    1ac0:	cmn	x0, #0x1
    1ac4:	b.ne	1b10 <_PyTime_GetMonotonicClock@plt+0x7f0>  // b.any
    1ac8:	bl	1240 <PyErr_Occurred@plt>
    1acc:	cbnz	x0, 1b7c <_PyTime_GetMonotonicClock@plt+0x85c>
    1ad0:	sub	x20, x20, #0x1
    1ad4:	lsr	x20, x20, #5
    1ad8:	add	x20, x20, #0x1
    1adc:	lsl	x24, x20, #2
    1ae0:	mov	x0, x24
    1ae4:	bl	1310 <PyMem_Malloc@plt>
    1ae8:	mov	x22, x0
    1aec:	cbnz	x0, 1b1c <_PyTime_GetMonotonicClock@plt+0x7fc>
    1af0:	bl	1170 <PyErr_NoMemory@plt>
    1af4:	mov	x19, #0x0                   	// #0
    1af8:	b	1b5c <_PyTime_GetMonotonicClock@plt+0x83c>
    1afc:	bl	1270 <PyObject_Hash@plt>
    1b00:	cmn	x0, #0x1
    1b04:	b.eq	1b68 <_PyTime_GetMonotonicClock@plt+0x848>  // b.none
    1b08:	bl	1180 <PyLong_FromSize_t@plt>
    1b0c:	b	1ab0 <_PyTime_GetMonotonicClock@plt+0x790>
    1b10:	cbnz	x0, 1ad0 <_PyTime_GetMonotonicClock@plt+0x7b0>
    1b14:	mov	x20, #0x1                   	// #1
    1b18:	b	1adc <_PyTime_GetMonotonicClock@plt+0x7bc>
    1b1c:	mov	x1, x0
    1b20:	mov	x2, x24
    1b24:	mov	x0, x21
    1b28:	mov	w4, #0x0                   	// #0
    1b2c:	mov	w3, #0x1                   	// #1
    1b30:	bl	12c0 <_PyLong_AsByteArray@plt>
    1b34:	cmn	w0, #0x1
    1b38:	b.eq	1af4 <_PyTime_GetMonotonicClock@plt+0x7d4>  // b.none
    1b3c:	mov	x0, x23
    1b40:	mov	x2, x20
    1b44:	mov	x1, x22
    1b48:	bl	189c <_PyTime_GetMonotonicClock@plt+0x57c>
    1b4c:	ldr	x19, [x19, #4048]
    1b50:	ldr	x0, [x19]
    1b54:	add	x0, x0, #0x1
    1b58:	str	x0, [x19]
    1b5c:	mov	x0, x21
    1b60:	bl	1538 <_PyTime_GetMonotonicClock@plt+0x218>
    1b64:	b	1b70 <_PyTime_GetMonotonicClock@plt+0x850>
    1b68:	mov	x22, #0x0                   	// #0
    1b6c:	mov	x19, #0x0                   	// #0
    1b70:	mov	x0, x22
    1b74:	bl	1130 <PyMem_Free@plt>
    1b78:	b	1a78 <_PyTime_GetMonotonicClock@plt+0x758>
    1b7c:	mov	x22, #0x0                   	// #0
    1b80:	b	1af4 <_PyTime_GetMonotonicClock@plt+0x7d4>
    1b84:	stp	x29, x30, [sp, #-32]!
    1b88:	mov	x29, sp
    1b8c:	stp	x19, x20, [sp, #16]
    1b90:	mov	x19, x0
    1b94:	adrp	x0, 13000 <PyInit__random@@Base+0x11370>
    1b98:	add	x0, x0, #0x108
    1b9c:	mov	x20, x1
    1ba0:	cmp	x19, x0
    1ba4:	b.eq	1bd4 <_PyTime_GetMonotonicClock@plt+0x8b4>  // b.none
    1ba8:	ldr	x2, [x19, #304]
    1bac:	mov	x0, x19
    1bb0:	mov	x1, #0x0                   	// #0
    1bb4:	blr	x2
    1bb8:	mov	x19, x0
    1bbc:	cbnz	x0, 1bf0 <_PyTime_GetMonotonicClock@plt+0x8d0>
    1bc0:	mov	x19, #0x0                   	// #0
    1bc4:	mov	x0, x19
    1bc8:	ldp	x19, x20, [sp, #16]
    1bcc:	ldp	x29, x30, [sp], #32
    1bd0:	ret
    1bd4:	mov	x1, x2
    1bd8:	cbz	x2, 1ba8 <_PyTime_GetMonotonicClock@plt+0x888>
    1bdc:	adrp	x0, 1000 <PyMem_Free@plt-0x130>
    1be0:	add	x0, x0, #0xddf
    1be4:	bl	12f0 <_PyArg_NoKeywords@plt>
    1be8:	cbnz	w0, 1ba8 <_PyTime_GetMonotonicClock@plt+0x888>
    1bec:	b	1bc0 <_PyTime_GetMonotonicClock@plt+0x8a0>
    1bf0:	mov	x1, x20
    1bf4:	bl	1a00 <_PyTime_GetMonotonicClock@plt+0x6e0>
    1bf8:	cbnz	x0, 1c08 <_PyTime_GetMonotonicClock@plt+0x8e8>
    1bfc:	mov	x0, x19
    1c00:	bl	1538 <_PyTime_GetMonotonicClock@plt+0x218>
    1c04:	b	1bc0 <_PyTime_GetMonotonicClock@plt+0x8a0>
    1c08:	bl	1538 <_PyTime_GetMonotonicClock@plt+0x218>
    1c0c:	b	1bc4 <_PyTime_GetMonotonicClock@plt+0x8a4>
    1c10:	stp	x29, x30, [sp, #-48]!
    1c14:	cmp	x2, #0x1
    1c18:	mov	x29, sp
    1c1c:	stp	x19, x20, [sp, #16]
    1c20:	mov	x20, x0
    1c24:	mov	x19, x2
    1c28:	str	x21, [sp, #32]
    1c2c:	mov	x21, x1
    1c30:	b.hi	1c48 <_PyTime_GetMonotonicClock@plt+0x928>  // b.pmore
    1c34:	cmp	x19, #0x0
    1c38:	b.gt	1c78 <_PyTime_GetMonotonicClock@plt+0x958>
    1c3c:	adrp	x1, 12000 <PyInit__random@@Base+0x10370>
    1c40:	ldr	x1, [x1, #4048]
    1c44:	b	1c7c <_PyTime_GetMonotonicClock@plt+0x95c>
    1c48:	adrp	x0, 1000 <PyMem_Free@plt-0x130>
    1c4c:	mov	x1, x19
    1c50:	add	x0, x0, #0xdac
    1c54:	mov	x3, #0x1                   	// #1
    1c58:	mov	x2, #0x0                   	// #0
    1c5c:	bl	1230 <_PyArg_CheckPositional@plt>
    1c60:	cbnz	w0, 1c34 <_PyTime_GetMonotonicClock@plt+0x914>
    1c64:	mov	x0, #0x0                   	// #0
    1c68:	ldp	x19, x20, [sp, #16]
    1c6c:	ldr	x21, [sp, #32]
    1c70:	ldp	x29, x30, [sp], #48
    1c74:	ret
    1c78:	ldr	x1, [x21]
    1c7c:	mov	x0, x20
    1c80:	ldp	x19, x20, [sp, #16]
    1c84:	ldr	x21, [sp, #32]
    1c88:	ldp	x29, x30, [sp], #48
    1c8c:	b	1a00 <_PyTime_GetMonotonicClock@plt+0x6e0>

0000000000001c90 <PyInit__random@@Base>:
    1c90:	stp	x29, x30, [sp, #-48]!
    1c94:	mov	x29, sp
    1c98:	stp	x19, x20, [sp, #16]
    1c9c:	adrp	x20, 13000 <PyInit__random@@Base+0x11370>
    1ca0:	str	x21, [sp, #32]
    1ca4:	add	x21, x20, #0x108
    1ca8:	mov	x0, x21
    1cac:	bl	11e0 <PyType_Ready@plt>
    1cb0:	tbnz	w0, #31, 1cfc <PyInit__random@@Base+0x6c>
    1cb4:	mov	w1, #0x3f5                 	// #1013
    1cb8:	adrp	x0, 13000 <PyInit__random@@Base+0x11370>
    1cbc:	add	x0, x0, #0x2a8
    1cc0:	bl	1250 <PyModule_Create2@plt>
    1cc4:	mov	x19, x0
    1cc8:	cbz	x0, 1ce8 <PyInit__random@@Base+0x58>
    1ccc:	ldr	x1, [x20, #264]
    1cd0:	mov	x2, x21
    1cd4:	add	x1, x1, #0x1
    1cd8:	str	x1, [x20, #264]
    1cdc:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1ce0:	add	x1, x1, #0xddf
    1ce4:	bl	12a0 <PyModule_AddObject@plt>
    1ce8:	mov	x0, x19
    1cec:	ldp	x19, x20, [sp, #16]
    1cf0:	ldr	x21, [sp, #32]
    1cf4:	ldp	x29, x30, [sp], #48
    1cf8:	ret
    1cfc:	mov	x19, #0x0                   	// #0
    1d00:	b	1ce8 <PyInit__random@@Base+0x58>

Disassembly of section .fini:

0000000000001d04 <.fini>:
    1d04:	stp	x29, x30, [sp, #-16]!
    1d08:	mov	x29, sp
    1d0c:	ldp	x29, x30, [sp], #16
    1d10:	ret
