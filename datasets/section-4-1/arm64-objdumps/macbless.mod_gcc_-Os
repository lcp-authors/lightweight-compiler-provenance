
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//macbless.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mac_bless_inode-0x218>:
   0:	sub	sp, sp, #0x230
   4:	mov	x3, #0x200                 	// #512
   8:	add	x4, sp, #0x30
   c:	stp	x29, x30, [sp]
  10:	mov	x29, sp
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	mov	w22, w2
  20:	ldr	x0, [x0]
  24:	mov	x2, #0x0                   	// #0
  28:	stp	x19, x20, [sp, #16]
  2c:	mov	w20, w1
  30:	mov	x1, #0x2                   	// #2
  34:	bl	0 <grub_disk_read>
  38:	cbnz	w0, b8 <grub_mac_bless_inode-0x160>
  3c:	ldrb	w2, [sp, #49]
  40:	ldrh	w1, [sp, #48]
  44:	orr	w1, w2, w1, lsl #8
  48:	mov	w2, #0x4244                	// #16964
  4c:	cmp	w2, w1, sxth
  50:	b.ne	cc <grub_mac_bless_inode-0x14c>  // b.any
  54:	ldrb	w2, [sp, #173]
  58:	ldrh	w1, [sp, #172]
  5c:	orr	w1, w2, w1, lsl #8
  60:	mov	w2, #0x482b                	// #18475
  64:	cmp	w2, w1, sxth
  68:	b.ne	b8 <grub_mac_bless_inode-0x160>  // b.any
  6c:	ldr	w19, [sp, #68]
  70:	add	x4, sp, #0x30
  74:	ldrh	w1, [sp, #174]
  78:	mov	x2, #0x0                   	// #0
  7c:	rev	w19, w19
  80:	ldrh	w0, [sp, #76]
  84:	asr	w3, w19, #9
  88:	ldrb	w19, [sp, #175]
  8c:	orr	w19, w19, w1, lsl #8
  90:	and	w1, w19, #0xffff
  94:	ldrb	w19, [sp, #77]
  98:	orr	w19, w19, w0, lsl #8
  9c:	and	x19, x19, #0xffff
  a0:	ldr	x0, [x21]
  a4:	smaddl	x19, w3, w1, x19
  a8:	mov	x3, #0x200                 	// #512
  ac:	add	x1, x19, #0x2
  b0:	bl	0 <grub_disk_read>
  b4:	cbz	w0, d0 <grub_mac_bless_inode-0x148>
  b8:	ldp	x29, x30, [sp]
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	add	sp, sp, #0x230
  c8:	ret
  cc:	mov	x19, #0x0                   	// #0
  d0:	ldrb	w1, [sp, #49]
  d4:	mov	w2, #0x482b                	// #18475
  d8:	ldrh	w0, [sp, #48]
  dc:	orr	w0, w1, w0, lsl #8
  e0:	sxth	w1, w0
  e4:	cmp	w2, w0, sxth
  e8:	b.eq	10c <grub_mac_bless_inode-0x10c>  // b.none
  ec:	mov	w0, #0x4858                	// #18520
  f0:	cmp	w1, w0
  f4:	b.eq	10c <grub_mac_bless_inode-0x10c>  // b.none
  f8:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
  fc:	ldr	x1, [x0]
 100:	mov	w0, #0x9                   	// #9
 104:	bl	0 <grub_error>
 108:	b	b8 <grub_mac_bless_inode-0x160>
 10c:	rev	w20, w20
 110:	cbz	w22, 134 <grub_mac_bless_inode-0xe4>
 114:	str	w20, [sp, #132]
 118:	ldr	x0, [x21]
 11c:	add	x4, sp, #0x30
 120:	add	x1, x19, #0x2
 124:	mov	x3, #0x200                 	// #512
 128:	mov	x2, #0x0                   	// #0
 12c:	bl	0 <grub_disk_write>
 130:	b	b8 <grub_mac_bless_inode-0x160>
 134:	str	w20, [sp, #128]
 138:	b	118 <grub_mac_bless_inode-0x100>
 13c:	nop
	...
 148:	stp	x29, x30, [sp, #-48]!
 14c:	mov	x29, sp
 150:	str	x21, [sp, #32]
 154:	mov	x21, x0
 158:	ldrb	w0, [x1]
 15c:	stp	x19, x20, [sp, #16]
 160:	tbz	w0, #3, 204 <grub_mac_bless_inode-0x14>
 164:	ldr	x0, [x2, #8]
 168:	mov	x20, x1
 16c:	mov	x19, x2
 170:	mov	x1, x21
 174:	bl	0 <grub_strcmp>
 178:	ldrb	w2, [x20]
 17c:	cbz	w0, 1f0 <grub_mac_bless_inode-0x28>
 180:	tbz	w2, #2, 204 <grub_mac_bless_inode-0x14>
 184:	ldr	x8, [x19, #8]
 188:	mov	x1, #0x0                   	// #0
 18c:	ldrb	w3, [x8, x1]
 190:	ldrb	w4, [x21, x1]
 194:	sub	w5, w3, #0x41
 198:	sub	w0, w4, #0x41
 19c:	cbz	w3, 1d0 <grub_mac_bless_inode-0x48>
 1a0:	mov	w6, w3
 1a4:	cbz	w4, 1d0 <grub_mac_bless_inode-0x48>
 1a8:	cmp	w5, #0x19
 1ac:	b.hi	1b4 <grub_mac_bless_inode-0x64>  // b.pmore
 1b0:	add	w6, w3, #0x20
 1b4:	mov	w7, w4
 1b8:	cmp	w0, #0x19
 1bc:	b.hi	1c4 <grub_mac_bless_inode-0x54>  // b.pmore
 1c0:	add	w7, w4, #0x20
 1c4:	add	x1, x1, #0x1
 1c8:	cmp	w7, w6
 1cc:	b.eq	18c <grub_mac_bless_inode-0x8c>  // b.none
 1d0:	cmp	w5, #0x19
 1d4:	b.hi	1dc <grub_mac_bless_inode-0x3c>  // b.pmore
 1d8:	add	w3, w3, #0x20
 1dc:	cmp	w0, #0x19
 1e0:	b.hi	1e8 <grub_mac_bless_inode-0x30>  // b.pmore
 1e4:	add	w4, w4, #0x20
 1e8:	cmp	w4, w3
 1ec:	b.ne	204 <grub_mac_bless_inode-0x14>  // b.any
 1f0:	and	w2, w2, #0x1
 1f4:	ldr	x0, [x20, #8]
 1f8:	add	w2, w2, #0x1
 1fc:	str	x0, [x19]
 200:	str	w2, [x19, #16]
 204:	mov	w0, #0x0                   	// #0
 208:	ldp	x19, x20, [sp, #16]
 20c:	ldr	x21, [sp, #32]
 210:	ldp	x29, x30, [sp], #48
 214:	ret

0000000000000218 <grub_mac_bless_inode>:
 218:	mov	w4, w2
 21c:	cmp	w3, #0x0
 220:	mov	w2, w3
 224:	ccmp	w4, #0x0, #0x4, ne  // ne = any
 228:	b.eq	23c <grub_mac_bless_inode+0x24>  // b.none
 22c:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 230:	ldr	x1, [x0]
 234:	mov	w0, #0x12                  	// #18
 238:	b	0 <grub_error>
 23c:	orr	w4, w3, w4
 240:	cbnz	w4, 254 <grub_mac_bless_inode+0x3c>
 244:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 248:	ldr	x1, [x0]
 24c:	mov	w0, #0x18                  	// #24
 250:	b	238 <grub_mac_bless_inode+0x20>
 254:	b	0 <grub_mac_bless_inode-0x218>
	...

0000000000000268 <grub_mac_bless_file>:
 268:	stp	x29, x30, [sp, #-96]!
 26c:	mov	x29, sp
 270:	stp	x19, x20, [sp, #16]
 274:	stp	x21, x22, [sp, #32]
 278:	mov	x21, x0
 27c:	mov	x22, x1
 280:	str	x23, [sp, #48]
 284:	mov	w23, w2
 288:	bl	0 <grub_fs_probe>
 28c:	cbnz	x0, 2b4 <grub_mac_bless_file+0x4c>
 290:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 294:	ldr	x1, [x0]
 298:	mov	w0, #0x9                   	// #9
 29c:	bl	0 <grub_error>
 2a0:	ldp	x19, x20, [sp, #16]
 2a4:	ldp	x21, x22, [sp, #32]
 2a8:	ldr	x23, [sp, #48]
 2ac:	ldp	x29, x30, [sp], #96
 2b0:	ret
 2b4:	mov	x20, x0
 2b8:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 2bc:	ldr	x1, [x0]
 2c0:	ldr	x0, [x20, #16]
 2c4:	bl	0 <grub_strcmp>
 2c8:	cbz	w0, 2e0 <grub_mac_bless_file+0x78>
 2cc:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 2d0:	ldr	x1, [x0]
 2d4:	ldr	x0, [x20, #16]
 2d8:	bl	0 <grub_strcmp>
 2dc:	cbnz	w0, 290 <grub_mac_bless_file+0x28>
 2e0:	mov	x0, x22
 2e4:	bl	0 <grub_strdup>
 2e8:	mov	x19, x0
 2ec:	cbnz	x0, 300 <grub_mac_bless_file+0x98>
 2f0:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 2f4:	ldr	x0, [x0]
 2f8:	ldr	w0, [x0]
 2fc:	b	2a0 <grub_mac_bless_file+0x38>
 300:	bl	0 <grub_strlen>
 304:	sub	x3, x0, #0x1
 308:	add	x3, x19, x3
 30c:	cmp	x3, x19
 310:	b.eq	320 <grub_mac_bless_file+0xb8>  // b.none
 314:	ldrb	w0, [x3]
 318:	cmp	w0, #0x2f
 31c:	b.eq	394 <grub_mac_bless_file+0x12c>  // b.none
 320:	mov	x0, x19
 324:	mov	w1, #0x2f                  	// #47
 328:	bl	0 <grub_strrchr>
 32c:	str	wzr, [sp, #88]
 330:	mov	x3, x0
 334:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 338:	cbz	x3, 39c <grub_mac_bless_file+0x134>
 33c:	strb	wzr, [x3], #1
 340:	adrp	x1, 0 <grub_mac_bless_inode-0x218>
 344:	str	x3, [sp, #80]
 348:	add	x3, sp, #0x48
 34c:	ldr	x1, [x1]
 350:	ldrb	w2, [x19]
 354:	ldr	x4, [x20, #24]
 358:	cmp	w2, #0x0
 35c:	ldr	x2, [x0]
 360:	csel	x1, x19, x1, ne  // ne = any
 364:	mov	x0, x21
 368:	blr	x4
 36c:	ldr	w0, [sp, #88]
 370:	cbnz	w0, 3bc <grub_mac_bless_file+0x154>
 374:	mov	x0, x19
 378:	bl	0 <grub_free>
 37c:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 380:	mov	x2, x22
 384:	ldr	x1, [x0]
 388:	mov	w0, #0x5                   	// #5
 38c:	bl	0 <grub_error>
 390:	b	2a0 <grub_mac_bless_file+0x38>
 394:	strb	wzr, [x3], #-1
 398:	b	30c <grub_mac_bless_file+0xa4>
 39c:	ldr	x2, [x0]
 3a0:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 3a4:	add	x1, x19, #0x1
 3a8:	add	x3, sp, #0x48
 3ac:	str	x1, [sp, #80]
 3b0:	ldr	x1, [x0]
 3b4:	ldr	x4, [x20, #24]
 3b8:	b	364 <grub_mac_bless_file+0xfc>
 3bc:	mov	x0, x19
 3c0:	bl	0 <grub_free>
 3c4:	ldr	w0, [sp, #88]
 3c8:	mov	w3, w23
 3cc:	ldr	w1, [sp, #72]
 3d0:	cmp	w0, #0x2
 3d4:	mov	x0, x21
 3d8:	cset	w2, eq  // eq = none
 3dc:	bl	218 <grub_mac_bless_inode>
 3e0:	b	2a0 <grub_mac_bless_file+0x38>
 3e4:	nop
	...
 420:	cmp	w1, #0x1
 424:	b.eq	438 <grub_mac_bless_file+0x1d0>  // b.none
 428:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 42c:	ldr	x1, [x0]
 430:	mov	w0, #0x12                  	// #18
 434:	b	0 <grub_error>
 438:	stp	x29, x30, [sp, #-48]!
 43c:	mov	x29, sp
 440:	stp	x21, x22, [sp, #32]
 444:	mov	x22, x0
 448:	ldr	x0, [x2]
 44c:	stp	x19, x20, [sp, #16]
 450:	mov	x20, x2
 454:	bl	0 <grub_file_get_device_name>
 458:	mov	x21, x0
 45c:	bl	0 <grub_device_open>
 460:	mov	x19, x0
 464:	ldr	x0, [x20]
 468:	mov	w1, #0x29                  	// #41
 46c:	bl	0 <grub_strchr>
 470:	cbnz	x0, 4ac <grub_mac_bless_file+0x244>
 474:	ldr	x1, [x20]
 478:	cbz	x1, 4b4 <grub_mac_bless_file+0x24c>
 47c:	ldrb	w0, [x1]
 480:	cbz	w0, 4b4 <grub_mac_bless_file+0x24c>
 484:	cbnz	x19, 4c4 <grub_mac_bless_file+0x25c>
 488:	mov	x0, x21
 48c:	bl	0 <grub_free>
 490:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 494:	ldp	x19, x20, [sp, #16]
 498:	ldr	x1, [x0]
 49c:	mov	w0, #0x12                  	// #18
 4a0:	ldp	x21, x22, [sp, #32]
 4a4:	ldp	x29, x30, [sp], #48
 4a8:	b	434 <grub_mac_bless_file+0x1cc>
 4ac:	add	x1, x0, #0x1
 4b0:	b	47c <grub_mac_bless_file+0x214>
 4b4:	cbz	x19, 488 <grub_mac_bless_file+0x220>
 4b8:	mov	x0, x19
 4bc:	bl	0 <grub_device_close>
 4c0:	b	488 <grub_mac_bless_file+0x220>
 4c4:	ldr	x0, [x22, #16]
 4c8:	ldrb	w0, [x0, #3]
 4cc:	cmp	w0, #0x74
 4d0:	mov	x0, x19
 4d4:	cset	w2, eq  // eq = none
 4d8:	bl	268 <grub_mac_bless_file>
 4dc:	mov	w20, w0
 4e0:	mov	x0, x19
 4e4:	bl	0 <grub_device_close>
 4e8:	mov	x0, x21
 4ec:	bl	0 <grub_free>
 4f0:	mov	w0, w20
 4f4:	ldp	x19, x20, [sp, #16]
 4f8:	ldp	x21, x22, [sp, #32]
 4fc:	ldp	x29, x30, [sp], #48
 500:	ret
 504:	nop
	...

0000000000000518 <grub_mod_init>:
 518:	stp	x29, x30, [sp, #-32]!
 51c:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 520:	mov	w4, #0x0                   	// #0
 524:	mov	x29, sp
 528:	ldr	x3, [x0]
 52c:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 530:	stp	x19, x20, [sp, #16]
 534:	adrp	x20, 0 <grub_mac_bless_inode-0x218>
 538:	ldr	x2, [x0]
 53c:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 540:	ldr	x1, [x20]
 544:	ldr	x0, [x0]
 548:	bl	0 <grub_register_command_prio>
 54c:	adrp	x1, 0 <grub_mac_bless_inode-0x218>
 550:	mov	w4, #0x0                   	// #0
 554:	ldr	x19, [x1]
 558:	ldr	x1, [x20]
 55c:	str	x0, [x19]
 560:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 564:	ldr	x3, [x0]
 568:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 56c:	ldr	x2, [x0]
 570:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 574:	ldr	x0, [x0]
 578:	bl	0 <grub_register_command_prio>
 57c:	str	x0, [x19, #8]
 580:	ldp	x19, x20, [sp, #16]
 584:	ldp	x29, x30, [sp], #32
 588:	ret
 58c:	nop
	...

00000000000005d0 <grub_mod_fini>:
 5d0:	stp	x29, x30, [sp, #-32]!
 5d4:	adrp	x0, 0 <grub_mac_bless_inode-0x218>
 5d8:	mov	x29, sp
 5dc:	str	x19, [sp, #16]
 5e0:	ldr	x19, [x0]
 5e4:	ldr	x0, [x19]
 5e8:	bl	0 <grub_unregister_command>
 5ec:	ldr	x0, [x19, #8]
 5f0:	ldr	x19, [sp, #16]
 5f4:	ldp	x29, x30, [sp], #32
 5f8:	b	0 <grub_unregister_command>
 5fc:	nop
	...
