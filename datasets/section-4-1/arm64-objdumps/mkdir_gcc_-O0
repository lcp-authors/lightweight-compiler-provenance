
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mkdir_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b78 <_init>:
 b78:	stp	x29, x30, [sp, #-16]!
 b7c:	mov	x29, sp
 b80:	bl	cf0 <call_weak_fn>
 b84:	ldp	x29, x30, [sp], #16
 b88:	ret

Disassembly of section .plt:

0000000000000b90 <.plt>:
 b90:	stp	x16, x30, [sp, #-16]!
 b94:	adrp	x16, 11000 <__FRAME_END__+0xf664>
 b98:	ldr	x17, [x16, #4088]
 b9c:	add	x16, x16, #0xff8
 ba0:	br	x17
 ba4:	nop
 ba8:	nop
 bac:	nop

0000000000000bb0 <strlen@plt>:
 bb0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bb4:	ldr	x17, [x16]
 bb8:	add	x16, x16, #0x0
 bbc:	br	x17

0000000000000bc0 <builtin_error@plt>:
 bc0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #8]
 bc8:	add	x16, x16, #0x8
 bcc:	br	x17

0000000000000bd0 <__cxa_finalize@plt>:
 bd0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #16]
 bd8:	add	x16, x16, #0x10
 bdc:	br	x17

0000000000000be0 <chmod@plt>:
 be0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 be4:	ldr	x17, [x16, #24]
 be8:	add	x16, x16, #0x18
 bec:	br	x17

0000000000000bf0 <builtin_help@plt>:
 bf0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #32]
 bf8:	add	x16, x16, #0x20
 bfc:	br	x17

0000000000000c00 <parse_symbolic_mode@plt>:
 c00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c04:	ldr	x17, [x16, #40]
 c08:	add	x16, x16, #0x28
 c0c:	br	x17

0000000000000c10 <xmalloc@plt>:
 c10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c14:	ldr	x17, [x16, #48]
 c18:	add	x16, x16, #0x30
 c1c:	br	x17

0000000000000c20 <builtin_usage@plt>:
 c20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c24:	ldr	x17, [x16, #56]
 c28:	add	x16, x16, #0x38
 c2c:	br	x17

0000000000000c30 <strerror@plt>:
 c30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c34:	ldr	x17, [x16, #64]
 c38:	add	x16, x16, #0x40
 c3c:	br	x17

0000000000000c40 <__gmon_start__@plt>:
 c40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c44:	ldr	x17, [x16, #72]
 c48:	add	x16, x16, #0x48
 c4c:	br	x17

0000000000000c50 <free@plt>:
 c50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c54:	ldr	x17, [x16, #80]
 c58:	add	x16, x16, #0x50
 c5c:	br	x17

0000000000000c60 <internal_getopt@plt>:
 c60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c64:	ldr	x17, [x16, #88]
 c68:	add	x16, x16, #0x58
 c6c:	br	x17

0000000000000c70 <reset_internal_getopt@plt>:
 c70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c74:	ldr	x17, [x16, #96]
 c78:	add	x16, x16, #0x60
 c7c:	br	x17

0000000000000c80 <strchr@plt>:
 c80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c84:	ldr	x17, [x16, #104]
 c88:	add	x16, x16, #0x68
 c8c:	br	x17

0000000000000c90 <strcpy@plt>:
 c90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c94:	ldr	x17, [x16, #112]
 c98:	add	x16, x16, #0x70
 c9c:	br	x17

0000000000000ca0 <read_octal@plt>:
 ca0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #120]
 ca8:	add	x16, x16, #0x78
 cac:	br	x17

0000000000000cb0 <umask@plt>:
 cb0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #128]
 cb8:	add	x16, x16, #0x80
 cbc:	br	x17

0000000000000cc0 <__errno_location@plt>:
 cc0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #136]
 cc8:	add	x16, x16, #0x88
 ccc:	br	x17

0000000000000cd0 <__xstat@plt>:
 cd0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #144]
 cd8:	add	x16, x16, #0x90
 cdc:	br	x17

0000000000000ce0 <mkdir@plt>:
 ce0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ce4:	ldr	x17, [x16, #152]
 ce8:	add	x16, x16, #0x98
 cec:	br	x17

Disassembly of section .text:

0000000000000cf0 <call_weak_fn>:
     cf0:	adrp	x0, 11000 <__FRAME_END__+0xf664>
     cf4:	ldr	x0, [x0, #4040]
     cf8:	cbz	x0, d00 <call_weak_fn+0x10>
     cfc:	b	c40 <__gmon_start__@plt>
     d00:	ret

0000000000000d04 <deregister_tm_clones>:
     d04:	stp	x29, x30, [sp, #-32]!
     d08:	mov	x29, sp
     d0c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d10:	add	x0, x0, #0x150
     d14:	str	x0, [sp, #24]
     d18:	ldr	x0, [sp, #24]
     d1c:	str	x0, [sp, #24]
     d20:	ldr	x1, [sp, #24]
     d24:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d28:	add	x0, x0, #0x150
     d2c:	cmp	x1, x0
     d30:	b.eq	d68 <deregister_tm_clones+0x64>  // b.none
     d34:	adrp	x0, 11000 <__FRAME_END__+0xf664>
     d38:	ldr	x0, [x0, #4024]
     d3c:	str	x0, [sp, #16]
     d40:	ldr	x0, [sp, #16]
     d44:	str	x0, [sp, #16]
     d48:	ldr	x0, [sp, #16]
     d4c:	cmp	x0, #0x0
     d50:	b.eq	d6c <deregister_tm_clones+0x68>  // b.none
     d54:	ldr	x1, [sp, #16]
     d58:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d5c:	add	x0, x0, #0x150
     d60:	blr	x1
     d64:	b	d6c <deregister_tm_clones+0x68>
     d68:	nop
     d6c:	ldp	x29, x30, [sp], #32
     d70:	ret

0000000000000d74 <register_tm_clones>:
     d74:	stp	x29, x30, [sp, #-48]!
     d78:	mov	x29, sp
     d7c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d80:	add	x0, x0, #0x150
     d84:	str	x0, [sp, #40]
     d88:	ldr	x0, [sp, #40]
     d8c:	str	x0, [sp, #40]
     d90:	ldr	x1, [sp, #40]
     d94:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d98:	add	x0, x0, #0x150
     d9c:	sub	x0, x1, x0
     da0:	asr	x0, x0, #3
     da4:	lsr	x1, x0, #63
     da8:	add	x0, x1, x0
     dac:	asr	x0, x0, #1
     db0:	str	x0, [sp, #32]
     db4:	ldr	x0, [sp, #32]
     db8:	cmp	x0, #0x0
     dbc:	b.eq	df8 <register_tm_clones+0x84>  // b.none
     dc0:	adrp	x0, 11000 <__FRAME_END__+0xf664>
     dc4:	ldr	x0, [x0, #4064]
     dc8:	str	x0, [sp, #24]
     dcc:	ldr	x0, [sp, #24]
     dd0:	str	x0, [sp, #24]
     dd4:	ldr	x0, [sp, #24]
     dd8:	cmp	x0, #0x0
     ddc:	b.eq	dfc <register_tm_clones+0x88>  // b.none
     de0:	ldr	x2, [sp, #24]
     de4:	ldr	x1, [sp, #32]
     de8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     dec:	add	x0, x0, #0x150
     df0:	blr	x2
     df4:	b	dfc <register_tm_clones+0x88>
     df8:	nop
     dfc:	ldp	x29, x30, [sp], #48
     e00:	ret

0000000000000e04 <__do_global_dtors_aux>:
     e04:	stp	x29, x30, [sp, #-16]!
     e08:	mov	x29, sp
     e0c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     e10:	add	x0, x0, #0x150
     e14:	ldrb	w0, [x0]
     e18:	and	x0, x0, #0xff
     e1c:	cmp	x0, #0x0
     e20:	b.ne	e5c <__do_global_dtors_aux+0x58>  // b.any
     e24:	adrp	x0, 11000 <__FRAME_END__+0xf664>
     e28:	ldr	x0, [x0, #4032]
     e2c:	cmp	x0, #0x0
     e30:	b.eq	e44 <__do_global_dtors_aux+0x40>  // b.none
     e34:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     e38:	add	x0, x0, #0xa0
     e3c:	ldr	x0, [x0]
     e40:	bl	bd0 <__cxa_finalize@plt>
     e44:	bl	d04 <deregister_tm_clones>
     e48:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     e4c:	add	x0, x0, #0x150
     e50:	mov	w1, #0x1                   	// #1
     e54:	strb	w1, [x0]
     e58:	b	e60 <__do_global_dtors_aux+0x5c>
     e5c:	nop
     e60:	ldp	x29, x30, [sp], #16
     e64:	ret

0000000000000e68 <frame_dummy>:
     e68:	stp	x29, x30, [sp, #-16]!
     e6c:	mov	x29, sp
     e70:	bl	d74 <register_tm_clones>
     e74:	nop
     e78:	ldp	x29, x30, [sp], #16
     e7c:	ret

0000000000000e80 <mkdir_builtin>:
     e80:	stp	x29, x30, [sp, #-96]!
     e84:	mov	x29, sp
     e88:	str	x19, [sp, #16]
     e8c:	str	x0, [sp, #40]
     e90:	bl	c70 <reset_internal_getopt@plt>
     e94:	str	wzr, [sp, #88]
     e98:	ldr	w0, [sp, #88]
     e9c:	str	w0, [sp, #92]
     ea0:	str	xzr, [sp, #72]
     ea4:	b	f1c <mkdir_builtin+0x9c>
     ea8:	ldr	w0, [sp, #60]
     eac:	cmp	w0, #0x70
     eb0:	b.eq	edc <mkdir_builtin+0x5c>  // b.none
     eb4:	ldr	w0, [sp, #60]
     eb8:	cmp	w0, #0x70
     ebc:	b.gt	f10 <mkdir_builtin+0x90>
     ec0:	ldr	w0, [sp, #60]
     ec4:	cmn	w0, #0x63
     ec8:	b.eq	f04 <mkdir_builtin+0x84>  // b.none
     ecc:	ldr	w0, [sp, #60]
     ed0:	cmp	w0, #0x6d
     ed4:	b.eq	ee8 <mkdir_builtin+0x68>  // b.none
     ed8:	b	f10 <mkdir_builtin+0x90>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	str	w0, [sp, #92]
     ee4:	b	f1c <mkdir_builtin+0x9c>
     ee8:	mov	w0, #0x1                   	// #1
     eec:	str	w0, [sp, #88]
     ef0:	adrp	x0, 11000 <__FRAME_END__+0xf664>
     ef4:	ldr	x0, [x0, #4048]
     ef8:	ldr	x0, [x0]
     efc:	str	x0, [sp, #72]
     f00:	b	f1c <mkdir_builtin+0x9c>
     f04:	bl	bf0 <builtin_help@plt>
     f08:	mov	w0, #0x102                 	// #258
     f0c:	b	112c <mkdir_builtin+0x2ac>
     f10:	bl	c20 <builtin_usage@plt>
     f14:	mov	w0, #0x102                 	// #258
     f18:	b	112c <mkdir_builtin+0x2ac>
     f1c:	adrp	x0, 1000 <mkdir_builtin+0x180>
     f20:	add	x1, x0, #0x448
     f24:	ldr	x0, [sp, #40]
     f28:	bl	c60 <internal_getopt@plt>
     f2c:	str	w0, [sp, #60]
     f30:	ldr	w0, [sp, #60]
     f34:	cmn	w0, #0x1
     f38:	b.ne	ea8 <mkdir_builtin+0x28>  // b.any
     f3c:	adrp	x0, 11000 <__FRAME_END__+0xf664>
     f40:	ldr	x0, [x0, #4056]
     f44:	ldr	x0, [x0]
     f48:	str	x0, [sp, #40]
     f4c:	ldr	x0, [sp, #40]
     f50:	cmp	x0, #0x0
     f54:	b.ne	f64 <mkdir_builtin+0xe4>  // b.any
     f58:	bl	c20 <builtin_usage@plt>
     f5c:	mov	w0, #0x102                 	// #258
     f60:	b	112c <mkdir_builtin+0x2ac>
     f64:	ldr	x0, [sp, #72]
     f68:	cmp	x0, #0x0
     f6c:	b.ne	f7c <mkdir_builtin+0xfc>  // b.any
     f70:	mov	w0, #0x1ff                 	// #511
     f74:	str	w0, [sp, #84]
     f78:	b	100c <mkdir_builtin+0x18c>
     f7c:	ldr	x0, [sp, #72]
     f80:	ldrb	w0, [x0]
     f84:	cmp	w0, #0x2f
     f88:	b.ls	fcc <mkdir_builtin+0x14c>  // b.plast
     f8c:	ldr	x0, [sp, #72]
     f90:	ldrb	w0, [x0]
     f94:	cmp	w0, #0x37
     f98:	b.hi	fcc <mkdir_builtin+0x14c>  // b.pmore
     f9c:	ldr	x0, [sp, #72]
     fa0:	bl	ca0 <read_octal@plt>
     fa4:	str	w0, [sp, #84]
     fa8:	ldr	w0, [sp, #84]
     fac:	cmp	w0, #0x0
     fb0:	b.ge	100c <mkdir_builtin+0x18c>  // b.tcont
     fb4:	ldr	x1, [sp, #72]
     fb8:	adrp	x0, 1000 <mkdir_builtin+0x180>
     fbc:	add	x0, x0, #0x450
     fc0:	bl	bc0 <builtin_error@plt>
     fc4:	mov	w0, #0x1                   	// #1
     fc8:	b	112c <mkdir_builtin+0x2ac>
     fcc:	ldr	x0, [sp, #72]
     fd0:	cmp	x0, #0x0
     fd4:	b.eq	100c <mkdir_builtin+0x18c>  // b.none
     fd8:	mov	w1, #0x1ff                 	// #511
     fdc:	ldr	x0, [sp, #72]
     fe0:	bl	c00 <parse_symbolic_mode@plt>
     fe4:	str	w0, [sp, #84]
     fe8:	ldr	w0, [sp, #84]
     fec:	cmp	w0, #0x0
     ff0:	b.ge	100c <mkdir_builtin+0x18c>  // b.tcont
     ff4:	ldr	x1, [sp, #72]
     ff8:	adrp	x0, 1000 <mkdir_builtin+0x180>
     ffc:	add	x0, x0, #0x450
    1000:	bl	bc0 <builtin_error@plt>
    1004:	mov	w0, #0x1                   	// #1
    1008:	b	112c <mkdir_builtin+0x2ac>
    100c:	mov	w0, #0x0                   	// #0
    1010:	bl	cb0 <umask@plt>
    1014:	mov	w1, w0
    1018:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    101c:	add	x0, x0, #0x154
    1020:	str	w1, [x0]
    1024:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    1028:	add	x0, x0, #0x154
    102c:	ldr	w0, [x0]
    1030:	bl	cb0 <umask@plt>
    1034:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    1038:	add	x0, x0, #0x154
    103c:	ldr	w0, [x0]
    1040:	mvn	w0, w0
    1044:	and	w0, w0, #0x1ff
    1048:	str	w0, [sp, #56]
    104c:	ldr	w0, [sp, #56]
    1050:	orr	w0, w0, #0xc0
    1054:	str	w0, [sp, #52]
    1058:	ldr	w1, [sp, #56]
    105c:	ldr	w0, [sp, #84]
    1060:	and	w0, w1, w0
    1064:	str	w0, [sp, #56]
    1068:	str	wzr, [sp, #80]
    106c:	ldr	x0, [sp, #40]
    1070:	str	x0, [sp, #64]
    1074:	b	111c <mkdir_builtin+0x29c>
    1078:	ldr	w0, [sp, #92]
    107c:	cmp	w0, #0x0
    1080:	b.eq	10b4 <mkdir_builtin+0x234>  // b.none
    1084:	ldr	x0, [sp, #64]
    1088:	ldr	x0, [x0, #8]
    108c:	ldr	x0, [x0]
    1090:	ldr	w3, [sp, #52]
    1094:	ldr	w2, [sp, #56]
    1098:	ldr	w1, [sp, #88]
    109c:	bl	1138 <make_path>
    10a0:	cmp	w0, #0x0
    10a4:	b.eq	10b4 <mkdir_builtin+0x234>  // b.none
    10a8:	mov	w0, #0x1                   	// #1
    10ac:	str	w0, [sp, #80]
    10b0:	b	1110 <mkdir_builtin+0x290>
    10b4:	ldr	w0, [sp, #92]
    10b8:	cmp	w0, #0x0
    10bc:	b.ne	1110 <mkdir_builtin+0x290>  // b.any
    10c0:	ldr	x0, [sp, #64]
    10c4:	ldr	x0, [x0, #8]
    10c8:	ldr	x0, [x0]
    10cc:	ldr	w1, [sp, #56]
    10d0:	bl	ce0 <mkdir@plt>
    10d4:	cmp	w0, #0x0
    10d8:	b.ge	1110 <mkdir_builtin+0x290>  // b.tcont
    10dc:	ldr	x0, [sp, #64]
    10e0:	ldr	x0, [x0, #8]
    10e4:	ldr	x19, [x0]
    10e8:	bl	cc0 <__errno_location@plt>
    10ec:	ldr	w0, [x0]
    10f0:	bl	c30 <strerror@plt>
    10f4:	mov	x2, x0
    10f8:	mov	x1, x19
    10fc:	adrp	x0, 1000 <mkdir_builtin+0x180>
    1100:	add	x0, x0, #0x468
    1104:	bl	bc0 <builtin_error@plt>
    1108:	mov	w0, #0x1                   	// #1
    110c:	str	w0, [sp, #80]
    1110:	ldr	x0, [sp, #64]
    1114:	ldr	x0, [x0]
    1118:	str	x0, [sp, #64]
    111c:	ldr	x0, [sp, #64]
    1120:	cmp	x0, #0x0
    1124:	b.ne	1078 <mkdir_builtin+0x1f8>  // b.any
    1128:	ldr	w0, [sp, #80]
    112c:	ldr	x19, [sp, #16]
    1130:	ldp	x29, x30, [sp], #96
    1134:	ret

0000000000001138 <make_path>:
    1138:	stp	x29, x30, [sp, #-208]!
    113c:	mov	x29, sp
    1140:	str	x0, [sp, #40]
    1144:	str	w1, [sp, #36]
    1148:	str	w2, [sp, #32]
    114c:	str	w3, [sp, #28]
    1150:	add	x0, sp, #0x38
    1154:	mov	x1, x0
    1158:	ldr	x0, [sp, #40]
    115c:	bl	1428 <__stat>
    1160:	cmp	w0, #0x0
    1164:	b.ne	11e4 <make_path+0xac>  // b.any
    1168:	ldr	w0, [sp, #72]
    116c:	and	w0, w0, #0xf000
    1170:	cmp	w0, #0x4, lsl #12
    1174:	b.eq	1190 <make_path+0x58>  // b.none
    1178:	ldr	x1, [sp, #40]
    117c:	adrp	x0, 1000 <mkdir_builtin+0x180>
    1180:	add	x0, x0, #0x490
    1184:	bl	bc0 <builtin_error@plt>
    1188:	mov	w0, #0x1                   	// #1
    118c:	b	1420 <make_path+0x2e8>
    1190:	ldr	w0, [sp, #36]
    1194:	cmp	w0, #0x0
    1198:	b.eq	11dc <make_path+0xa4>  // b.none
    119c:	ldr	w0, [sp, #32]
    11a0:	mov	w1, w0
    11a4:	ldr	x0, [sp, #40]
    11a8:	bl	be0 <chmod@plt>
    11ac:	cmp	w0, #0x0
    11b0:	b.eq	11dc <make_path+0xa4>  // b.none
    11b4:	bl	cc0 <__errno_location@plt>
    11b8:	ldr	w0, [x0]
    11bc:	bl	c30 <strerror@plt>
    11c0:	mov	x2, x0
    11c4:	ldr	x1, [sp, #40]
    11c8:	adrp	x0, 1000 <mkdir_builtin+0x180>
    11cc:	add	x0, x0, #0x4c0
    11d0:	bl	bc0 <builtin_error@plt>
    11d4:	mov	w0, #0x1                   	// #1
    11d8:	b	1420 <make_path+0x2e8>
    11dc:	mov	w0, #0x0                   	// #0
    11e0:	b	1420 <make_path+0x2e8>
    11e4:	mov	w0, #0x0                   	// #0
    11e8:	bl	cb0 <umask@plt>
    11ec:	str	w0, [sp, #196]
    11f0:	ldr	x0, [sp, #40]
    11f4:	bl	bb0 <strlen@plt>
    11f8:	add	x0, x0, #0x1
    11fc:	bl	c10 <xmalloc@plt>
    1200:	ldr	x1, [sp, #40]
    1204:	bl	c90 <strcpy@plt>
    1208:	str	x0, [sp, #184]
    120c:	ldr	x0, [sp, #184]
    1210:	str	x0, [sp, #200]
    1214:	b	1224 <make_path+0xec>
    1218:	ldr	x0, [sp, #200]
    121c:	add	x0, x0, #0x1
    1220:	str	x0, [sp, #200]
    1224:	ldr	x0, [sp, #200]
    1228:	ldrb	w0, [x0]
    122c:	cmp	w0, #0x2f
    1230:	b.eq	1218 <make_path+0xe0>  // b.none
    1234:	b	1378 <make_path+0x240>
    1238:	ldr	x0, [sp, #200]
    123c:	strb	wzr, [x0]
    1240:	add	x0, sp, #0x38
    1244:	mov	x1, x0
    1248:	ldr	x0, [sp, #184]
    124c:	bl	1428 <__stat>
    1250:	cmp	w0, #0x0
    1254:	b.eq	1304 <make_path+0x1cc>  // b.none
    1258:	mov	w1, #0x0                   	// #0
    125c:	ldr	x0, [sp, #184]
    1260:	bl	ce0 <mkdir@plt>
    1264:	cmp	w0, #0x0
    1268:	b.eq	12ac <make_path+0x174>  // b.none
    126c:	bl	cc0 <__errno_location@plt>
    1270:	ldr	w0, [x0]
    1274:	bl	c30 <strerror@plt>
    1278:	mov	x2, x0
    127c:	ldr	x1, [sp, #184]
    1280:	adrp	x0, 1000 <mkdir_builtin+0x180>
    1284:	add	x0, x0, #0x468
    1288:	bl	bc0 <builtin_error@plt>
    128c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    1290:	add	x0, x0, #0x154
    1294:	ldr	w0, [x0]
    1298:	bl	cb0 <umask@plt>
    129c:	ldr	x0, [sp, #184]
    12a0:	bl	c50 <free@plt>
    12a4:	mov	w0, #0x1                   	// #1
    12a8:	b	1420 <make_path+0x2e8>
    12ac:	ldr	w0, [sp, #28]
    12b0:	mov	w1, w0
    12b4:	ldr	x0, [sp, #184]
    12b8:	bl	be0 <chmod@plt>
    12bc:	cmp	w0, #0x0
    12c0:	b.eq	1344 <make_path+0x20c>  // b.none
    12c4:	bl	cc0 <__errno_location@plt>
    12c8:	ldr	w0, [x0]
    12cc:	bl	c30 <strerror@plt>
    12d0:	mov	x2, x0
    12d4:	ldr	x1, [sp, #184]
    12d8:	adrp	x0, 1000 <mkdir_builtin+0x180>
    12dc:	add	x0, x0, #0x4c8
    12e0:	bl	bc0 <builtin_error@plt>
    12e4:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    12e8:	add	x0, x0, #0x154
    12ec:	ldr	w0, [x0]
    12f0:	bl	cb0 <umask@plt>
    12f4:	ldr	x0, [sp, #184]
    12f8:	bl	c50 <free@plt>
    12fc:	mov	w0, #0x1                   	// #1
    1300:	b	1420 <make_path+0x2e8>
    1304:	ldr	w0, [sp, #72]
    1308:	and	w0, w0, #0xf000
    130c:	cmp	w0, #0x4, lsl #12
    1310:	b.eq	1344 <make_path+0x20c>  // b.none
    1314:	ldr	x1, [sp, #184]
    1318:	adrp	x0, 1000 <mkdir_builtin+0x180>
    131c:	add	x0, x0, #0x490
    1320:	bl	bc0 <builtin_error@plt>
    1324:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    1328:	add	x0, x0, #0x154
    132c:	ldr	w0, [x0]
    1330:	bl	cb0 <umask@plt>
    1334:	ldr	x0, [sp, #184]
    1338:	bl	c50 <free@plt>
    133c:	mov	w0, #0x1                   	// #1
    1340:	b	1420 <make_path+0x2e8>
    1344:	ldr	x0, [sp, #200]
    1348:	add	x1, x0, #0x1
    134c:	str	x1, [sp, #200]
    1350:	mov	w1, #0x2f                  	// #47
    1354:	strb	w1, [x0]
    1358:	b	1368 <make_path+0x230>
    135c:	ldr	x0, [sp, #200]
    1360:	add	x0, x0, #0x1
    1364:	str	x0, [sp, #200]
    1368:	ldr	x0, [sp, #200]
    136c:	ldrb	w0, [x0]
    1370:	cmp	w0, #0x2f
    1374:	b.eq	135c <make_path+0x224>  // b.none
    1378:	mov	w1, #0x2f                  	// #47
    137c:	ldr	x0, [sp, #200]
    1380:	bl	c80 <strchr@plt>
    1384:	str	x0, [sp, #200]
    1388:	ldr	x0, [sp, #200]
    138c:	cmp	x0, #0x0
    1390:	b.ne	1238 <make_path+0x100>  // b.any
    1394:	add	x0, sp, #0x38
    1398:	mov	x1, x0
    139c:	ldr	x0, [sp, #184]
    13a0:	bl	1428 <__stat>
    13a4:	cmp	w0, #0x0
    13a8:	b.eq	1404 <make_path+0x2cc>  // b.none
    13ac:	ldr	w0, [sp, #32]
    13b0:	mov	w1, w0
    13b4:	ldr	x0, [sp, #184]
    13b8:	bl	ce0 <mkdir@plt>
    13bc:	cmp	w0, #0x0
    13c0:	b.eq	1404 <make_path+0x2cc>  // b.none
    13c4:	bl	cc0 <__errno_location@plt>
    13c8:	ldr	w0, [x0]
    13cc:	bl	c30 <strerror@plt>
    13d0:	mov	x2, x0
    13d4:	ldr	x1, [sp, #184]
    13d8:	adrp	x0, 1000 <mkdir_builtin+0x180>
    13dc:	add	x0, x0, #0x468
    13e0:	bl	bc0 <builtin_error@plt>
    13e4:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    13e8:	add	x0, x0, #0x154
    13ec:	ldr	w0, [x0]
    13f0:	bl	cb0 <umask@plt>
    13f4:	ldr	x0, [sp, #184]
    13f8:	bl	c50 <free@plt>
    13fc:	mov	w0, #0x1                   	// #1
    1400:	b	1420 <make_path+0x2e8>
    1404:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    1408:	add	x0, x0, #0x154
    140c:	ldr	w0, [x0]
    1410:	bl	cb0 <umask@plt>
    1414:	ldr	x0, [sp, #184]
    1418:	bl	c50 <free@plt>
    141c:	mov	w0, #0x0                   	// #0
    1420:	ldp	x29, x30, [sp], #208
    1424:	ret

0000000000001428 <__stat>:
    1428:	mov	x2, x1
    142c:	mov	x1, x0
    1430:	mov	w0, #0x0                   	// #0
    1434:	b	cd0 <__xstat@plt>

Disassembly of section .fini:

0000000000001438 <_fini>:
    1438:	stp	x29, x30, [sp, #-16]!
    143c:	mov	x29, sp
    1440:	ldp	x29, x30, [sp], #16
    1444:	ret
