
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0xd4>:
    2940:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	nop
    2958:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    295c:	add	x0, x0, #0x928
    2960:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2964:	add	x1, x1, #0x928
    2968:	cmp	x1, x0
    296c:	b.eq	2984 <PyThread_free_lock@plt+0x54>  // b.none
    2970:	adrp	x1, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2974:	ldr	x1, [x1, #3952]
    2978:	cbz	x1, 2984 <PyThread_free_lock@plt+0x54>
    297c:	mov	x16, x1
    2980:	br	x16
    2984:	ret
    2988:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    298c:	add	x0, x0, #0x928
    2990:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2994:	add	x1, x1, #0x928
    2998:	sub	x1, x1, x0
    299c:	lsr	x2, x1, #63
    29a0:	add	x1, x2, x1, asr #3
    29a4:	cmp	xzr, x1, asr #1
    29a8:	asr	x1, x1, #1
    29ac:	b.eq	29c4 <PyThread_free_lock@plt+0x94>  // b.none
    29b0:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29b4:	ldr	x2, [x2, #4064]
    29b8:	cbz	x2, 29c4 <PyThread_free_lock@plt+0x94>
    29bc:	mov	x16, x2
    29c0:	br	x16
    29c4:	ret
    29c8:	stp	x29, x30, [sp, #-32]!
    29cc:	mov	x29, sp
    29d0:	str	x19, [sp, #16]
    29d4:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29d8:	ldrb	w0, [x19, #2344]
    29dc:	cbnz	w0, 2a04 <PyThread_free_lock@plt+0xd4>
    29e0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29e4:	ldr	x0, [x0, #3968]
    29e8:	cbz	x0, 29f8 <PyThread_free_lock@plt+0xc8>
    29ec:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29f0:	ldr	x0, [x0, #552]
    29f4:	bl	25c0 <__cxa_finalize@plt>
    29f8:	bl	2958 <PyThread_free_lock@plt+0x28>
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	strb	w0, [x19, #2344]
    2a04:	ldr	x19, [sp, #16]
    2a08:	ldp	x29, x30, [sp], #32
    2a0c:	ret
    2a10:	b	2988 <PyThread_free_lock@plt+0x58>

0000000000002a14 <PyInit__xxsubinterpreters@@Base>:
    2a14:	stp	x29, x30, [sp, #-64]!
    2a18:	str	x23, [sp, #16]
    2a1c:	stp	x22, x21, [sp, #32]
    2a20:	stp	x20, x19, [sp, #48]
    2a24:	mov	x29, sp
    2a28:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a2c:	ldr	x8, [x19, #2400]
    2a30:	cbnz	x8, 2a40 <PyInit__xxsubinterpreters@@Base+0x2c>
    2a34:	bl	2790 <PyThread_allocate_lock@plt>
    2a38:	str	x0, [x19, #2400]
    2a3c:	cbz	x0, 2c1c <PyInit__xxsubinterpreters@@Base+0x208>
    2a40:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a44:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a48:	add	x20, x20, #0x788
    2a4c:	add	x8, x8, #0x968
    2a50:	mov	x0, x20
    2a54:	stp	xzr, xzr, [x8]
    2a58:	str	xzr, [x8, #16]
    2a5c:	bl	26c0 <PyType_Ready@plt>
    2a60:	mov	w8, w0
    2a64:	mov	x0, xzr
    2a68:	cbnz	w8, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2a6c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a70:	add	x0, x0, #0x720
    2a74:	mov	w1, #0x3f5                 	// #1013
    2a78:	bl	2740 <PyModule_Create2@plt>
    2a7c:	cbz	x0, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2a80:	mov	x19, x0
    2a84:	bl	28d0 <PyModule_GetDict@plt>
    2a88:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a8c:	adrp	x22, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2a90:	ldr	x8, [x23, #2368]
    2a94:	ldr	x22, [x22, #4000]
    2a98:	mov	x21, x0
    2a9c:	cbz	x8, 2c48 <PyInit__xxsubinterpreters@@Base+0x234>
    2aa0:	ldr	x1, [x22]
    2aa4:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2aa8:	add	x0, x0, #0x671
    2aac:	mov	x2, xzr
    2ab0:	bl	26e0 <PyErr_NewException@plt>
    2ab4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ab8:	str	x0, [x8, #2352]
    2abc:	cbz	x0, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2ac0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ac4:	mov	x2, x0
    2ac8:	add	x1, x1, #0x684
    2acc:	mov	x0, x21
    2ad0:	bl	2510 <PyDict_SetItemString@plt>
    2ad4:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2ad8:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2adc:	add	x22, x22, #0x930
    2ae0:	ldr	x1, [x22]
    2ae4:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ae8:	add	x0, x0, #0x691
    2aec:	mov	x2, xzr
    2af0:	bl	26e0 <PyErr_NewException@plt>
    2af4:	str	x0, [x22, #8]
    2af8:	cbz	x0, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2afc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b00:	mov	x2, x0
    2b04:	add	x1, x1, #0x6a4
    2b08:	mov	x0, x21
    2b0c:	bl	2510 <PyDict_SetItemString@plt>
    2b10:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2b14:	ldr	x1, [x22]
    2b18:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b1c:	add	x0, x0, #0x6b9
    2b20:	mov	x2, xzr
    2b24:	bl	26e0 <PyErr_NewException@plt>
    2b28:	str	x0, [x22, #24]
    2b2c:	cbz	x0, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2b30:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b34:	mov	x2, x0
    2b38:	add	x1, x1, #0x6cc
    2b3c:	mov	x0, x21
    2b40:	bl	2510 <PyDict_SetItemString@plt>
    2b44:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2b48:	ldr	x1, [x22]
    2b4c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b50:	add	x0, x0, #0x6df
    2b54:	mov	x2, xzr
    2b58:	bl	26e0 <PyErr_NewException@plt>
    2b5c:	str	x0, [x22, #32]
    2b60:	cbz	x0, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2b64:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b68:	mov	x2, x0
    2b6c:	add	x1, x1, #0x6f2
    2b70:	mov	x0, x21
    2b74:	bl	2510 <PyDict_SetItemString@plt>
    2b78:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2b7c:	ldr	x1, [x22]
    2b80:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b84:	add	x0, x0, #0x704
    2b88:	mov	x2, xzr
    2b8c:	bl	26e0 <PyErr_NewException@plt>
    2b90:	str	x0, [x22, #40]
    2b94:	cbz	x0, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2b98:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b9c:	mov	x2, x0
    2ba0:	add	x1, x1, #0x717
    2ba4:	mov	x0, x21
    2ba8:	bl	2510 <PyDict_SetItemString@plt>
    2bac:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2bb0:	ldr	x8, [x20]
    2bb4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2bb8:	add	x1, x1, #0x193
    2bbc:	mov	x0, x21
    2bc0:	add	x8, x8, #0x1
    2bc4:	mov	x2, x20
    2bc8:	str	x8, [x20]
    2bcc:	bl	2510 <PyDict_SetItemString@plt>
    2bd0:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2bd4:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2bd8:	ldr	x2, [x2, #3984]
    2bdc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2be0:	add	x1, x1, #0x144
    2be4:	mov	x0, x21
    2be8:	ldr	x8, [x2]
    2bec:	add	x8, x8, #0x1
    2bf0:	str	x8, [x2]
    2bf4:	bl	2510 <PyDict_SetItemString@plt>
    2bf8:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2bfc:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c00:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    2c04:	add	x0, x0, #0x788
    2c08:	add	x1, x1, #0xc80
    2c0c:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    2c10:	cmp	w0, #0x0
    2c14:	csel	x0, x19, xzr, eq  // eq = none
    2c18:	b	2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2c1c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c20:	ldr	x0, [x8, #2352]
    2c24:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c28:	add	x1, x1, #0x152
    2c2c:	bl	2670 <PyErr_SetString@plt>
    2c30:	mov	x0, xzr
    2c34:	ldp	x20, x19, [sp, #48]
    2c38:	ldp	x22, x21, [sp, #32]
    2c3c:	ldr	x23, [sp, #16]
    2c40:	ldp	x29, x30, [sp], #64
    2c44:	ret
    2c48:	ldr	x1, [x22]
    2c4c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c50:	add	x0, x0, #0x64f
    2c54:	mov	x2, xzr
    2c58:	bl	26e0 <PyErr_NewException@plt>
    2c5c:	str	x0, [x23, #2368]
    2c60:	cbz	x0, 2c34 <PyInit__xxsubinterpreters@@Base+0x220>
    2c64:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c68:	mov	x2, x0
    2c6c:	add	x1, x1, #0x662
    2c70:	mov	x0, x21
    2c74:	bl	2510 <PyDict_SetItemString@plt>
    2c78:	cbnz	w0, 2c30 <PyInit__xxsubinterpreters@@Base+0x21c>
    2c7c:	b	2aa0 <PyInit__xxsubinterpreters@@Base+0x8c>
    2c80:	stp	x29, x30, [sp, #-32]!
    2c84:	stp	x20, x19, [sp, #16]
    2c88:	mov	x29, sp
    2c8c:	mov	x20, x0
    2c90:	mov	w0, #0x10                  	// #16
    2c94:	mov	x19, x1
    2c98:	bl	2910 <PyMem_Malloc@plt>
    2c9c:	cbz	x0, 2cec <PyInit__xxsubinterpreters@@Base+0x2d8>
    2ca0:	ldr	x9, [x20, #16]
    2ca4:	mov	x8, x0
    2ca8:	adrp	x10, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2cac:	mov	w0, wzr
    2cb0:	str	x9, [x8]
    2cb4:	ldr	x9, [x20, #24]
    2cb8:	str	x9, [x8, #8]
    2cbc:	str	x8, [x19]
    2cc0:	ldr	x8, [x20]
    2cc4:	ldr	x10, [x10, #3960]
    2cc8:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ccc:	add	x9, x9, #0x8
    2cd0:	add	x8, x8, #0x1
    2cd4:	str	x8, [x20]
    2cd8:	str	x20, [x19, #8]
    2cdc:	stp	x9, x10, [x19, #24]
    2ce0:	ldp	x20, x19, [sp, #16]
    2ce4:	ldp	x29, x30, [sp], #32
    2ce8:	ret
    2cec:	mov	w0, #0xffffffff            	// #-1
    2cf0:	ldp	x20, x19, [sp, #16]
    2cf4:	ldp	x29, x30, [sp], #32
    2cf8:	ret
    2cfc:	stp	x29, x30, [sp, #-48]!
    2d00:	str	x21, [sp, #16]
    2d04:	stp	x20, x19, [sp, #32]
    2d08:	mov	x29, sp
    2d0c:	ldp	x8, x20, [x0, #8]
    2d10:	ldr	x21, [x0, #32]
    2d14:	ldr	x8, [x8, #320]
    2d18:	blr	x8
    2d1c:	ldr	x0, [x21]
    2d20:	mov	w1, #0x1                   	// #1
    2d24:	bl	2640 <PyThread_acquire_lock@plt>
    2d28:	mov	x8, x21
    2d2c:	ldr	x9, [x8, #8]!
    2d30:	cbz	x9, 2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>
    2d34:	ldr	x10, [x9]
    2d38:	cmp	x10, x20
    2d3c:	b.ne	2d4c <PyInit__xxsubinterpreters@@Base+0x338>  // b.any
    2d40:	mov	x10, xzr
    2d44:	mov	x19, x9
    2d48:	b	2d68 <PyInit__xxsubinterpreters@@Base+0x354>
    2d4c:	mov	x19, x9
    2d50:	mov	x10, x19
    2d54:	ldr	x19, [x19, #16]
    2d58:	cbz	x19, 2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>
    2d5c:	ldr	x11, [x19]
    2d60:	cmp	x11, x20
    2d64:	b.ne	2d50 <PyInit__xxsubinterpreters@@Base+0x33c>  // b.any
    2d68:	ldr	x11, [x19, #24]
    2d6c:	subs	x11, x11, #0x1
    2d70:	str	x11, [x19, #24]
    2d74:	b.ne	2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>  // b.any
    2d78:	ldr	x11, [x19, #16]
    2d7c:	add	x10, x10, #0x10
    2d80:	cmp	x9, x19
    2d84:	csel	x8, x8, x10, eq  // eq = none
    2d88:	str	x11, [x8]
    2d8c:	ldr	x8, [x21, #16]
    2d90:	sub	x8, x8, #0x1
    2d94:	str	x8, [x21, #16]
    2d98:	ldr	x20, [x19, #8]
    2d9c:	cbz	x20, 2dd8 <PyInit__xxsubinterpreters@@Base+0x3c4>
    2da0:	ldr	x0, [x20]
    2da4:	mov	w1, #0x1                   	// #1
    2da8:	bl	2640 <PyThread_acquire_lock@plt>
    2dac:	ldr	x0, [x20, #32]
    2db0:	cbz	x0, 2dbc <PyInit__xxsubinterpreters@@Base+0x3a8>
    2db4:	bl	2590 <PyMem_Free@plt>
    2db8:	str	xzr, [x20, #32]
    2dbc:	ldr	x0, [x20]
    2dc0:	bl	27b0 <PyThread_release_lock@plt>
    2dc4:	mov	x0, x19
    2dc8:	bl	2590 <PyMem_Free@plt>
    2dcc:	mov	x0, x20
    2dd0:	bl	306c <PyInit__xxsubinterpreters@@Base+0x658>
    2dd4:	b	2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>
    2dd8:	mov	x0, x19
    2ddc:	bl	2590 <PyMem_Free@plt>
    2de0:	ldr	x0, [x21]
    2de4:	ldp	x20, x19, [sp, #32]
    2de8:	ldr	x21, [sp, #16]
    2dec:	ldp	x29, x30, [sp], #48
    2df0:	b	27b0 <PyThread_release_lock@plt>
    2df4:	stp	x29, x30, [sp, #-32]!
    2df8:	str	x19, [sp, #16]
    2dfc:	mov	x29, sp
    2e00:	mov	x19, x0
    2e04:	ldr	x0, [x0, #8]
    2e08:	bl	2630 <_PyType_Name@plt>
    2e0c:	ldr	w8, [x19, #24]
    2e10:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e14:	adrp	x10, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e18:	add	x9, x9, #0x1c3
    2e1c:	add	x10, x10, #0x1b0
    2e20:	adrp	x11, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e24:	ldr	x2, [x19, #16]
    2e28:	cmn	w8, #0x1
    2e2c:	ldr	x19, [sp, #16]
    2e30:	add	x11, x11, #0x19d
    2e34:	csel	x9, x10, x9, eq  // eq = none
    2e38:	cmp	w8, #0x1
    2e3c:	csel	x8, x11, x9, eq  // eq = none
    2e40:	mov	x1, x0
    2e44:	mov	x0, x8
    2e48:	ldp	x29, x30, [sp], #32
    2e4c:	b	24f0 <PyUnicode_FromFormat@plt>
    2e50:	stp	x29, x30, [sp, #-32]!
    2e54:	stp	x20, x19, [sp, #16]
    2e58:	mov	x29, sp
    2e5c:	ldr	x0, [x0, #16]
    2e60:	bl	28e0 <PyLong_FromLongLong@plt>
    2e64:	cbz	x0, 2e94 <PyInit__xxsubinterpreters@@Base+0x480>
    2e68:	mov	x20, x0
    2e6c:	bl	27a0 <PyObject_Hash@plt>
    2e70:	ldr	x8, [x20]
    2e74:	mov	x19, x0
    2e78:	subs	x8, x8, #0x1
    2e7c:	str	x8, [x20]
    2e80:	b.eq	2ea8 <PyInit__xxsubinterpreters@@Base+0x494>  // b.none
    2e84:	mov	x0, x19
    2e88:	ldp	x20, x19, [sp, #16]
    2e8c:	ldp	x29, x30, [sp], #32
    2e90:	ret
    2e94:	mov	x19, #0xffffffffffffffff    	// #-1
    2e98:	mov	x0, x19
    2e9c:	ldp	x20, x19, [sp, #16]
    2ea0:	ldp	x29, x30, [sp], #32
    2ea4:	ret
    2ea8:	mov	x0, x20
    2eac:	bl	25e0 <_Py_Dealloc@plt>
    2eb0:	mov	x0, x19
    2eb4:	ldp	x20, x19, [sp, #16]
    2eb8:	ldp	x29, x30, [sp], #32
    2ebc:	ret
    2ec0:	ldr	x1, [x0, #16]
    2ec4:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ec8:	add	x0, x0, #0x1cb
    2ecc:	b	24f0 <PyUnicode_FromFormat@plt>
    2ed0:	sub	sp, sp, #0x40
    2ed4:	stp	x29, x30, [sp, #16]
    2ed8:	stp	x22, x21, [sp, #32]
    2edc:	stp	x20, x19, [sp, #48]
    2ee0:	add	x29, sp, #0x10
    2ee4:	orr	w8, w2, #0x1
    2ee8:	cmp	w8, #0x3
    2eec:	b.ne	2ff8 <PyInit__xxsubinterpreters@@Base+0x5e4>  // b.any
    2ef0:	mov	x20, x0
    2ef4:	ldr	x0, [x0, #8]
    2ef8:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2efc:	add	x22, x22, #0x788
    2f00:	mov	w19, w2
    2f04:	mov	x21, x1
    2f08:	cmp	x0, x22
    2f0c:	b.eq	2f20 <PyInit__xxsubinterpreters@@Base+0x50c>  // b.none
    2f10:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2f14:	add	x1, x1, #0x788
    2f18:	bl	28a0 <PyType_IsSubtype@plt>
    2f1c:	cbz	w0, 2ff8 <PyInit__xxsubinterpreters@@Base+0x5e4>
    2f20:	ldr	x0, [x21, #8]
    2f24:	cmp	x0, x22
    2f28:	b.eq	2f3c <PyInit__xxsubinterpreters@@Base+0x528>  // b.none
    2f2c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2f30:	add	x1, x1, #0x788
    2f34:	bl	28a0 <PyType_IsSubtype@plt>
    2f38:	cbz	w0, 2fa4 <PyInit__xxsubinterpreters@@Base+0x590>
    2f3c:	ldr	w8, [x20, #24]
    2f40:	ldr	w9, [x21, #24]
    2f44:	cmp	w8, w9
    2f48:	b.ne	2f90 <PyInit__xxsubinterpreters@@Base+0x57c>  // b.any
    2f4c:	ldr	x8, [x20, #16]
    2f50:	ldr	x9, [x21, #16]
    2f54:	cmp	x8, x9
    2f58:	cset	w8, eq  // eq = none
    2f5c:	cmp	w19, #0x3
    2f60:	cset	w9, ne  // ne = any
    2f64:	cmp	w19, #0x2
    2f68:	cset	w10, eq  // eq = none
    2f6c:	cmp	w8, #0x0
    2f70:	cset	w8, ne  // ne = any
    2f74:	and	w10, w10, w8
    2f78:	orr	w8, w9, w8
    2f7c:	cmp	w10, w8
    2f80:	b.eq	2f98 <PyInit__xxsubinterpreters@@Base+0x584>  // b.none
    2f84:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f88:	ldr	x19, [x19, #4032]
    2f8c:	b	3000 <PyInit__xxsubinterpreters@@Base+0x5ec>
    2f90:	cmp	w19, #0x3
    2f94:	b.ne	2f84 <PyInit__xxsubinterpreters@@Base+0x570>  // b.any
    2f98:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f9c:	ldr	x19, [x19, #4056]
    2fa0:	b	3000 <PyInit__xxsubinterpreters@@Base+0x5ec>
    2fa4:	ldr	x8, [x21, #8]
    2fa8:	ldrb	w8, [x8, #171]
    2fac:	tbnz	w8, #0, 3024 <PyInit__xxsubinterpreters@@Base+0x610>
    2fb0:	mov	x0, x21
    2fb4:	bl	2880 <PyNumber_Check@plt>
    2fb8:	cbz	w0, 2ff8 <PyInit__xxsubinterpreters@@Base+0x5e4>
    2fbc:	ldr	x0, [x20, #16]
    2fc0:	bl	28e0 <PyLong_FromLongLong@plt>
    2fc4:	cbz	x0, 305c <PyInit__xxsubinterpreters@@Base+0x648>
    2fc8:	mov	x1, x21
    2fcc:	mov	w2, w19
    2fd0:	mov	x20, x0
    2fd4:	bl	2650 <PyObject_RichCompare@plt>
    2fd8:	ldr	x8, [x20]
    2fdc:	mov	x19, x0
    2fe0:	subs	x8, x8, #0x1
    2fe4:	str	x8, [x20]
    2fe8:	b.ne	300c <PyInit__xxsubinterpreters@@Base+0x5f8>  // b.any
    2fec:	mov	x0, x20
    2ff0:	bl	25e0 <_Py_Dealloc@plt>
    2ff4:	b	300c <PyInit__xxsubinterpreters@@Base+0x5f8>
    2ff8:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2ffc:	ldr	x19, [x19, #3992]
    3000:	ldr	x8, [x19]
    3004:	add	x8, x8, #0x1
    3008:	str	x8, [x19]
    300c:	mov	x0, x19
    3010:	ldp	x20, x19, [sp, #48]
    3014:	ldp	x22, x21, [sp, #32]
    3018:	ldp	x29, x30, [sp, #16]
    301c:	add	sp, sp, #0x40
    3020:	ret
    3024:	sub	x1, x29, #0x4
    3028:	mov	x0, x21
    302c:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    3030:	cmn	x0, #0x1
    3034:	b.eq	3054 <PyInit__xxsubinterpreters@@Base+0x640>  // b.none
    3038:	mov	w8, wzr
    303c:	tbnz	x0, #63, 2f5c <PyInit__xxsubinterpreters@@Base+0x548>
    3040:	ldur	w9, [x29, #-4]
    3044:	cbnz	w9, 2f5c <PyInit__xxsubinterpreters@@Base+0x548>
    3048:	ldr	x8, [x20, #16]
    304c:	cmp	x8, x0
    3050:	b	2f58 <PyInit__xxsubinterpreters@@Base+0x544>
    3054:	bl	2730 <PyErr_Occurred@plt>
    3058:	cbz	x0, 3064 <PyInit__xxsubinterpreters@@Base+0x650>
    305c:	mov	x19, xzr
    3060:	b	300c <PyInit__xxsubinterpreters@@Base+0x5f8>
    3064:	mov	w8, wzr
    3068:	b	2f5c <PyInit__xxsubinterpreters@@Base+0x548>
    306c:	stp	x29, x30, [sp, #-48]!
    3070:	stp	x22, x21, [sp, #16]
    3074:	stp	x20, x19, [sp, #32]
    3078:	mov	x29, sp
    307c:	mov	x19, x0
    3080:	ldr	x0, [x0]
    3084:	mov	w1, #0x1                   	// #1
    3088:	bl	2640 <PyThread_acquire_lock@plt>
    308c:	ldr	x0, [x19, #32]
    3090:	cbz	x0, 309c <PyInit__xxsubinterpreters@@Base+0x688>
    3094:	bl	2590 <PyMem_Free@plt>
    3098:	str	xzr, [x19, #32]
    309c:	ldr	x0, [x19]
    30a0:	bl	27b0 <PyThread_release_lock@plt>
    30a4:	ldr	x0, [x19]
    30a8:	mov	w1, #0x1                   	// #1
    30ac:	bl	2640 <PyThread_acquire_lock@plt>
    30b0:	ldr	x20, [x19, #8]
    30b4:	ldr	x21, [x20, #8]
    30b8:	cbnz	x21, 3150 <PyInit__xxsubinterpreters@@Base+0x73c>
    30bc:	mov	x0, x20
    30c0:	stp	xzr, xzr, [x20]
    30c4:	str	xzr, [x20, #16]
    30c8:	bl	2590 <PyMem_Free@plt>
    30cc:	ldr	x20, [x19, #16]
    30d0:	ldr	x0, [x20, #16]
    30d4:	cbz	x0, 30e8 <PyInit__xxsubinterpreters@@Base+0x6d4>
    30d8:	ldr	x21, [x0]
    30dc:	bl	2590 <PyMem_Free@plt>
    30e0:	mov	x0, x21
    30e4:	cbnz	x21, 30d8 <PyInit__xxsubinterpreters@@Base+0x6c4>
    30e8:	ldr	x0, [x20, #24]
    30ec:	str	xzr, [x20, #16]
    30f0:	str	xzr, [x20]
    30f4:	cbz	x0, 3108 <PyInit__xxsubinterpreters@@Base+0x6f4>
    30f8:	ldr	x21, [x0]
    30fc:	bl	2590 <PyMem_Free@plt>
    3100:	mov	x0, x21
    3104:	cbnz	x21, 30f8 <PyInit__xxsubinterpreters@@Base+0x6e4>
    3108:	mov	x0, x20
    310c:	str	xzr, [x20, #24]
    3110:	str	xzr, [x20, #8]
    3114:	bl	2590 <PyMem_Free@plt>
    3118:	ldr	x0, [x19]
    311c:	bl	27b0 <PyThread_release_lock@plt>
    3120:	ldr	x0, [x19]
    3124:	bl	2930 <PyThread_free_lock@plt>
    3128:	mov	x0, x19
    312c:	ldp	x20, x19, [sp, #32]
    3130:	ldp	x22, x21, [sp, #16]
    3134:	ldp	x29, x30, [sp], #48
    3138:	b	2590 <PyMem_Free@plt>
    313c:	mov	x0, x21
    3140:	str	xzr, [x21, #8]
    3144:	bl	2590 <PyMem_Free@plt>
    3148:	mov	x21, x22
    314c:	cbz	x22, 30bc <PyInit__xxsubinterpreters@@Base+0x6a8>
    3150:	ldp	x0, x22, [x21]
    3154:	cbz	x0, 313c <PyInit__xxsubinterpreters@@Base+0x728>
    3158:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    315c:	ldr	x0, [x21]
    3160:	bl	2590 <PyMem_Free@plt>
    3164:	str	xzr, [x21]
    3168:	b	313c <PyInit__xxsubinterpreters@@Base+0x728>
    316c:	ldr	x0, [x0, #16]
    3170:	b	28e0 <PyLong_FromLongLong@plt>
    3174:	cbz	x1, 3198 <PyInit__xxsubinterpreters@@Base+0x784>
    3178:	ldp	x8, x9, [x0, #8]
    317c:	ldr	w2, [x1]
    3180:	ldr	x3, [x0, #32]
    3184:	ldr	w5, [x0, #28]
    3188:	mov	w4, #0x1                   	// #1
    318c:	mov	x0, x8
    3190:	mov	x1, x9
    3194:	b	31d0 <PyInit__xxsubinterpreters@@Base+0x7bc>
    3198:	ldr	w8, [x0, #24]
    319c:	cmn	w8, #0x1
    31a0:	b.eq	31b8 <PyInit__xxsubinterpreters@@Base+0x7a4>  // b.none
    31a4:	cmp	w8, #0x1
    31a8:	b.ne	31c4 <PyInit__xxsubinterpreters@@Base+0x7b0>  // b.any
    31ac:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    31b0:	add	x0, x0, #0x53d
    31b4:	b	2850 <PyUnicode_InternFromString@plt>
    31b8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    31bc:	add	x0, x0, #0x586
    31c0:	b	2850 <PyUnicode_InternFromString@plt>
    31c4:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    31c8:	add	x0, x0, #0x225
    31cc:	b	2850 <PyUnicode_InternFromString@plt>
    31d0:	stp	x29, x30, [sp, #-64]!
    31d4:	stp	x24, x23, [sp, #16]
    31d8:	stp	x22, x21, [sp, #32]
    31dc:	stp	x20, x19, [sp, #48]
    31e0:	mov	x29, sp
    31e4:	mov	w23, w5
    31e8:	mov	w20, w4
    31ec:	mov	x21, x3
    31f0:	mov	w24, w2
    31f4:	mov	x22, x1
    31f8:	bl	2830 <_PyObject_New@plt>
    31fc:	mov	x19, x0
    3200:	cbz	x0, 32a4 <PyInit__xxsubinterpreters@@Base+0x890>
    3204:	str	x22, [x19, #16]
    3208:	stp	w24, w23, [x19, #24]
    320c:	str	x21, [x19, #32]
    3210:	ldr	x0, [x21]
    3214:	mov	w1, #0x1                   	// #1
    3218:	bl	2640 <PyThread_acquire_lock@plt>
    321c:	ldr	x8, [x21, #8]
    3220:	cbz	x8, 3238 <PyInit__xxsubinterpreters@@Base+0x824>
    3224:	ldr	x9, [x8]
    3228:	cmp	x9, x22
    322c:	b.eq	3290 <PyInit__xxsubinterpreters@@Base+0x87c>  // b.none
    3230:	ldr	x8, [x8, #16]
    3234:	cbnz	x8, 3224 <PyInit__xxsubinterpreters@@Base+0x810>
    3238:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    323c:	ldr	x0, [x23, #2360]
    3240:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3244:	add	x1, x1, #0x22a
    3248:	mov	x2, x22
    324c:	bl	28c0 <PyErr_Format@plt>
    3250:	ldr	x0, [x21]
    3254:	bl	27b0 <PyThread_release_lock@plt>
    3258:	cbz	w20, 3270 <PyInit__xxsubinterpreters@@Base+0x85c>
    325c:	ldr	x0, [x23, #2360]
    3260:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3264:	cbz	w0, 3270 <PyInit__xxsubinterpreters@@Base+0x85c>
    3268:	bl	26f0 <PyErr_Clear@plt>
    326c:	b	32a4 <PyInit__xxsubinterpreters@@Base+0x890>
    3270:	ldr	x8, [x19]
    3274:	subs	x8, x8, #0x1
    3278:	str	x8, [x19]
    327c:	b.ne	3288 <PyInit__xxsubinterpreters@@Base+0x874>  // b.any
    3280:	mov	x0, x19
    3284:	bl	25e0 <_Py_Dealloc@plt>
    3288:	mov	x19, xzr
    328c:	b	32a4 <PyInit__xxsubinterpreters@@Base+0x890>
    3290:	ldr	x9, [x8, #24]
    3294:	add	x9, x9, #0x1
    3298:	str	x9, [x8, #24]
    329c:	ldr	x0, [x21]
    32a0:	bl	27b0 <PyThread_release_lock@plt>
    32a4:	mov	x0, x19
    32a8:	ldp	x20, x19, [sp, #48]
    32ac:	ldp	x22, x21, [sp, #32]
    32b0:	ldp	x24, x23, [sp, #16]
    32b4:	ldp	x29, x30, [sp], #64
    32b8:	ret
    32bc:	stp	x29, x30, [sp, #-32]!
    32c0:	stp	x20, x19, [sp, #16]
    32c4:	mov	x29, sp
    32c8:	mov	x0, x1
    32cc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    32d0:	add	x1, x1, #0x270
    32d4:	mov	x2, xzr
    32d8:	mov	x3, xzr
    32dc:	bl	2720 <PyArg_UnpackTuple@plt>
    32e0:	cbz	w0, 3368 <PyInit__xxsubinterpreters@@Base+0x954>
    32e4:	mov	x0, xzr
    32e8:	bl	2920 <PyThreadState_Swap@plt>
    32ec:	mov	x20, x0
    32f0:	bl	26b0 <Py_NewInterpreter@plt>
    32f4:	mov	x19, x0
    32f8:	mov	x0, x20
    32fc:	bl	2920 <PyThreadState_Swap@plt>
    3300:	cbz	x19, 3330 <PyInit__xxsubinterpreters@@Base+0x91c>
    3304:	ldr	x0, [x19, #16]
    3308:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    330c:	cbz	x0, 334c <PyInit__xxsubinterpreters@@Base+0x938>
    3310:	mov	x20, x0
    3314:	ldr	x0, [x19, #16]
    3318:	mov	w1, #0x1                   	// #1
    331c:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    3320:	mov	x0, x20
    3324:	ldp	x20, x19, [sp, #16]
    3328:	ldp	x29, x30, [sp], #32
    332c:	ret
    3330:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3334:	ldr	x8, [x8, #4000]
    3338:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    333c:	add	x1, x1, #0x294
    3340:	ldr	x0, [x8]
    3344:	bl	2670 <PyErr_SetString@plt>
    3348:	b	3368 <PyInit__xxsubinterpreters@@Base+0x954>
    334c:	mov	x0, x19
    3350:	bl	2920 <PyThreadState_Swap@plt>
    3354:	mov	x20, x0
    3358:	mov	x0, x19
    335c:	bl	25d0 <Py_EndInterpreter@plt>
    3360:	mov	x0, x20
    3364:	bl	2920 <PyThreadState_Swap@plt>
    3368:	mov	x20, xzr
    336c:	mov	x0, x20
    3370:	ldp	x20, x19, [sp, #16]
    3374:	ldp	x29, x30, [sp], #32
    3378:	ret
    337c:	sub	sp, sp, #0x30
    3380:	stp	x29, x30, [sp, #16]
    3384:	stp	x20, x19, [sp, #32]
    3388:	add	x29, sp, #0x10
    338c:	mov	x8, x2
    3390:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3394:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3398:	mov	x0, x1
    339c:	add	x2, x2, #0x2b0
    33a0:	add	x3, x3, #0x618
    33a4:	add	x4, sp, #0x8
    33a8:	mov	x1, x8
    33ac:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    33b0:	cbz	w0, 33fc <PyInit__xxsubinterpreters@@Base+0x9e8>
    33b4:	ldr	x0, [sp, #8]
    33b8:	bl	2550 <_PyInterpreterID_LookUp@plt>
    33bc:	cbz	x0, 3400 <PyInit__xxsubinterpreters@@Base+0x9ec>
    33c0:	mov	x19, x0
    33c4:	bl	2800 <_PyInterpreterState_Get@plt>
    33c8:	cbz	x0, 3400 <PyInit__xxsubinterpreters@@Base+0x9ec>
    33cc:	cmp	x19, x0
    33d0:	b.eq	3410 <PyInit__xxsubinterpreters@@Base+0x9fc>  // b.none
    33d4:	mov	x0, x19
    33d8:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    33dc:	mov	x20, x0
    33e0:	bl	2780 <PyThreadState_Next@plt>
    33e4:	cbz	x0, 343c <PyInit__xxsubinterpreters@@Base+0xa28>
    33e8:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    33ec:	ldr	x8, [x8, #4000]
    33f0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    33f4:	add	x1, x1, #0x2fd
    33f8:	b	3420 <PyInit__xxsubinterpreters@@Base+0xa0c>
    33fc:	mov	x0, xzr
    3400:	ldp	x20, x19, [sp, #32]
    3404:	ldp	x29, x30, [sp, #16]
    3408:	add	sp, sp, #0x30
    340c:	ret
    3410:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3414:	ldr	x8, [x8, #4000]
    3418:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    341c:	add	x1, x1, #0x2ba
    3420:	ldr	x0, [x8]
    3424:	bl	2670 <PyErr_SetString@plt>
    3428:	mov	x0, xzr
    342c:	ldp	x20, x19, [sp, #32]
    3430:	ldp	x29, x30, [sp, #16]
    3434:	add	sp, sp, #0x30
    3438:	ret
    343c:	ldr	x8, [x20, #24]
    3440:	cbz	x8, 3468 <PyInit__xxsubinterpreters@@Base+0xa54>
    3444:	ldrb	w8, [x8, #116]
    3448:	cbz	w8, 3470 <PyInit__xxsubinterpreters@@Base+0xa5c>
    344c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3450:	ldr	x8, [x8, #4000]
    3454:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3458:	add	x1, x1, #0x2e1
    345c:	ldr	x0, [x8]
    3460:	bl	28c0 <PyErr_Format@plt>
    3464:	b	3428 <PyInit__xxsubinterpreters@@Base+0xa14>
    3468:	bl	2730 <PyErr_Occurred@plt>
    346c:	cbnz	x0, 3428 <PyInit__xxsubinterpreters@@Base+0xa14>
    3470:	mov	x0, x19
    3474:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    3478:	mov	x19, x0
    347c:	bl	2920 <PyThreadState_Swap@plt>
    3480:	mov	x20, x0
    3484:	mov	x0, x19
    3488:	bl	25d0 <Py_EndInterpreter@plt>
    348c:	mov	x0, x20
    3490:	bl	2920 <PyThreadState_Swap@plt>
    3494:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3498:	ldr	x0, [x0, #4048]
    349c:	ldr	x8, [x0]
    34a0:	add	x8, x8, #0x1
    34a4:	str	x8, [x0]
    34a8:	ldp	x20, x19, [sp, #32]
    34ac:	ldp	x29, x30, [sp, #16]
    34b0:	add	sp, sp, #0x30
    34b4:	ret
    34b8:	stp	x29, x30, [sp, #-48]!
    34bc:	stp	x22, x21, [sp, #16]
    34c0:	stp	x20, x19, [sp, #32]
    34c4:	mov	x29, sp
    34c8:	mov	x0, xzr
    34cc:	bl	2500 <PyList_New@plt>
    34d0:	mov	x19, x0
    34d4:	cbz	x0, 3554 <PyInit__xxsubinterpreters@@Base+0xb40>
    34d8:	bl	28f0 <PyInterpreterState_Head@plt>
    34dc:	cbz	x0, 3554 <PyInit__xxsubinterpreters@@Base+0xb40>
    34e0:	mov	x20, x0
    34e4:	mov	x0, x20
    34e8:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    34ec:	cbz	x0, 3538 <PyInit__xxsubinterpreters@@Base+0xb24>
    34f0:	mov	x21, x0
    34f4:	mov	x0, x19
    34f8:	mov	x1, xzr
    34fc:	mov	x2, x21
    3500:	bl	2580 <PyList_Insert@plt>
    3504:	ldr	x8, [x21]
    3508:	mov	w22, w0
    350c:	subs	x8, x8, #0x1
    3510:	str	x8, [x21]
    3514:	b.ne	3520 <PyInit__xxsubinterpreters@@Base+0xb0c>  // b.any
    3518:	mov	x0, x21
    351c:	bl	25e0 <_Py_Dealloc@plt>
    3520:	tbnz	w22, #31, 3538 <PyInit__xxsubinterpreters@@Base+0xb24>
    3524:	mov	x0, x20
    3528:	bl	25f0 <PyInterpreterState_Next@plt>
    352c:	mov	x20, x0
    3530:	cbnz	x0, 34e4 <PyInit__xxsubinterpreters@@Base+0xad0>
    3534:	b	3554 <PyInit__xxsubinterpreters@@Base+0xb40>
    3538:	ldr	x8, [x19]
    353c:	subs	x8, x8, #0x1
    3540:	str	x8, [x19]
    3544:	b.ne	3550 <PyInit__xxsubinterpreters@@Base+0xb3c>  // b.any
    3548:	mov	x0, x19
    354c:	bl	25e0 <_Py_Dealloc@plt>
    3550:	mov	x19, xzr
    3554:	mov	x0, x19
    3558:	ldp	x20, x19, [sp, #32]
    355c:	ldp	x22, x21, [sp, #16]
    3560:	ldp	x29, x30, [sp], #48
    3564:	ret
    3568:	stp	x29, x30, [sp, #-16]!
    356c:	mov	x29, sp
    3570:	bl	2800 <_PyInterpreterState_Get@plt>
    3574:	cbz	x0, 3580 <PyInit__xxsubinterpreters@@Base+0xb6c>
    3578:	ldp	x29, x30, [sp], #16
    357c:	b	2620 <_PyInterpreterState_GetIDObject@plt>
    3580:	ldp	x29, x30, [sp], #16
    3584:	ret
    3588:	mov	x0, xzr
    358c:	b	2810 <_PyInterpreterID_New@plt>
    3590:	stp	x29, x30, [sp, #-32]!
    3594:	str	x19, [sp, #16]
    3598:	mov	x29, sp
    359c:	mov	x8, x2
    35a0:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    35a4:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    35a8:	mov	x0, x1
    35ac:	add	x2, x2, #0x322
    35b0:	add	x3, x3, #0x628
    35b4:	add	x4, x29, #0x18
    35b8:	mov	x1, x8
    35bc:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    35c0:	cbz	w0, 362c <PyInit__xxsubinterpreters@@Base+0xc18>
    35c4:	ldr	x0, [x29, #24]
    35c8:	bl	2550 <_PyInterpreterID_LookUp@plt>
    35cc:	cbz	x0, 35fc <PyInit__xxsubinterpreters@@Base+0xbe8>
    35d0:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    35d4:	mov	x19, x0
    35d8:	bl	2780 <PyThreadState_Next@plt>
    35dc:	cbz	x0, 3608 <PyInit__xxsubinterpreters@@Base+0xbf4>
    35e0:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    35e4:	ldr	x8, [x8, #4000]
    35e8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    35ec:	add	x1, x1, #0x2fd
    35f0:	ldr	x0, [x8]
    35f4:	bl	2670 <PyErr_SetString@plt>
    35f8:	mov	x0, xzr
    35fc:	ldr	x19, [sp, #16]
    3600:	ldp	x29, x30, [sp], #32
    3604:	ret
    3608:	ldr	x8, [x19, #24]
    360c:	cbz	x8, 3624 <PyInit__xxsubinterpreters@@Base+0xc10>
    3610:	ldrb	w8, [x8, #116]
    3614:	cbz	w8, 363c <PyInit__xxsubinterpreters@@Base+0xc28>
    3618:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    361c:	ldr	x0, [x0, #4056]
    3620:	b	3644 <PyInit__xxsubinterpreters@@Base+0xc30>
    3624:	bl	2730 <PyErr_Occurred@plt>
    3628:	cbz	x0, 363c <PyInit__xxsubinterpreters@@Base+0xc28>
    362c:	mov	x0, xzr
    3630:	ldr	x19, [sp, #16]
    3634:	ldp	x29, x30, [sp], #32
    3638:	ret
    363c:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3640:	ldr	x0, [x0, #4032]
    3644:	ldr	x8, [x0]
    3648:	add	x8, x8, #0x1
    364c:	str	x8, [x0]
    3650:	ldr	x19, [sp, #16]
    3654:	ldp	x29, x30, [sp], #32
    3658:	ret
    365c:	sub	sp, sp, #0xa0
    3660:	stp	x29, x30, [sp, #64]
    3664:	stp	x28, x27, [sp, #80]
    3668:	stp	x26, x25, [sp, #96]
    366c:	stp	x24, x23, [sp, #112]
    3670:	stp	x22, x21, [sp, #128]
    3674:	stp	x20, x19, [sp, #144]
    3678:	add	x29, sp, #0x40
    367c:	mov	x8, x2
    3680:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3684:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3688:	mov	x0, x1
    368c:	add	x2, x2, #0x33d
    3690:	add	x3, x3, #0x638
    3694:	add	x4, sp, #0x20
    3698:	add	x5, sp, #0x18
    369c:	add	x6, sp, #0x10
    36a0:	mov	x1, x8
    36a4:	str	xzr, [sp, #16]
    36a8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    36ac:	cbz	w0, 3728 <PyInit__xxsubinterpreters@@Base+0xd14>
    36b0:	ldr	x0, [sp, #32]
    36b4:	bl	2550 <_PyInterpreterID_LookUp@plt>
    36b8:	cbz	x0, 372c <PyInit__xxsubinterpreters@@Base+0xd18>
    36bc:	mov	x22, x0
    36c0:	ldr	x0, [sp, #24]
    36c4:	add	x1, sp, #0x8
    36c8:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    36cc:	cbz	x0, 372c <PyInit__xxsubinterpreters@@Base+0xd18>
    36d0:	mov	x21, x0
    36d4:	bl	2530 <strlen@plt>
    36d8:	ldr	x8, [sp, #8]
    36dc:	cmp	x0, x8
    36e0:	b.ne	3710 <PyInit__xxsubinterpreters@@Base+0xcfc>  // b.any
    36e4:	ldr	x20, [sp, #16]
    36e8:	mov	x0, x22
    36ec:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    36f0:	mov	x19, x0
    36f4:	bl	2780 <PyThreadState_Next@plt>
    36f8:	cbz	x0, 374c <PyInit__xxsubinterpreters@@Base+0xd38>
    36fc:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3700:	ldr	x8, [x8, #4000]
    3704:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3708:	add	x1, x1, #0x2fd
    370c:	b	3720 <PyInit__xxsubinterpreters@@Base+0xd0c>
    3710:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3714:	ldr	x8, [x8, #4016]
    3718:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    371c:	add	x1, x1, #0x34d
    3720:	ldr	x0, [x8]
    3724:	bl	2670 <PyErr_SetString@plt>
    3728:	mov	x0, xzr
    372c:	ldp	x20, x19, [sp, #144]
    3730:	ldp	x22, x21, [sp, #128]
    3734:	ldp	x24, x23, [sp, #112]
    3738:	ldp	x26, x25, [sp, #96]
    373c:	ldp	x28, x27, [sp, #80]
    3740:	ldp	x29, x30, [sp, #64]
    3744:	add	sp, sp, #0xa0
    3748:	ret
    374c:	ldr	x8, [x19, #24]
    3750:	cbz	x8, 3778 <PyInit__xxsubinterpreters@@Base+0xd64>
    3754:	ldrb	w8, [x8, #116]
    3758:	cbz	w8, 3780 <PyInit__xxsubinterpreters@@Base+0xd6c>
    375c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3760:	ldr	x8, [x8, #4000]
    3764:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3768:	add	x1, x1, #0x2e1
    376c:	ldr	x0, [x8]
    3770:	bl	28c0 <PyErr_Format@plt>
    3774:	b	3728 <PyInit__xxsubinterpreters@@Base+0xd14>
    3778:	bl	2730 <PyErr_Occurred@plt>
    377c:	cbnz	x0, 3728 <PyInit__xxsubinterpreters@@Base+0xd14>
    3780:	cbz	x20, 38f8 <PyInit__xxsubinterpreters@@Base+0xee4>
    3784:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3788:	ldr	x8, [x8, #4048]
    378c:	cmp	x20, x8
    3790:	b.eq	38f8 <PyInit__xxsubinterpreters@@Base+0xee4>  // b.none
    3794:	mov	x0, x20
    3798:	bl	2540 <PyDict_Size@plt>
    379c:	cbz	x0, 38f8 <PyInit__xxsubinterpreters@@Base+0xee4>
    37a0:	mov	x23, x0
    37a4:	mov	w0, #0x10                  	// #16
    37a8:	bl	2910 <PyMem_Malloc@plt>
    37ac:	cbz	x0, 37d4 <PyInit__xxsubinterpreters@@Base+0xdc0>
    37b0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    37b4:	movk	x8, #0xaaab
    37b8:	movk	x8, #0x2aa, lsl #48
    37bc:	mov	x19, x0
    37c0:	cmp	x23, x8
    37c4:	str	x23, [x0]
    37c8:	b.cc	37dc <PyInit__xxsubinterpreters@@Base+0xdc8>  // b.lo, b.ul, b.last
    37cc:	str	xzr, [x19, #8]
    37d0:	b	3864 <PyInit__xxsubinterpreters@@Base+0xe50>
    37d4:	bl	2600 <PyErr_NoMemory@plt>
    37d8:	b	38f8 <PyInit__xxsubinterpreters@@Base+0xee4>
    37dc:	add	x8, x23, x23, lsl #1
    37e0:	lsl	x0, x8, #4
    37e4:	bl	2910 <PyMem_Malloc@plt>
    37e8:	str	x0, [x19, #8]
    37ec:	cbz	x0, 3864 <PyInit__xxsubinterpreters@@Base+0xe50>
    37f0:	mov	x26, xzr
    37f4:	stur	xzr, [x29, #-8]
    37f8:	sub	x1, x29, #0x8
    37fc:	sub	x2, x29, #0x10
    3800:	sub	x3, x29, #0x18
    3804:	mov	x0, x20
    3808:	bl	27d0 <PyDict_Next@plt>
    380c:	cbz	w0, 3890 <PyInit__xxsubinterpreters@@Base+0xe7c>
    3810:	ldp	x24, x0, [x29, #-24]
    3814:	ldr	x27, [x19, #8]
    3818:	bl	27e0 <PyUnicode_AsUTF8@plt>
    381c:	cbz	x0, 3870 <PyInit__xxsubinterpreters@@Base+0xe5c>
    3820:	mov	x25, x0
    3824:	bl	2530 <strlen@plt>
    3828:	add	x0, x0, #0x1
    382c:	bl	2910 <PyMem_Malloc@plt>
    3830:	cbz	x0, 386c <PyInit__xxsubinterpreters@@Base+0xe58>
    3834:	mov	x1, x25
    3838:	bl	27f0 <strcpy@plt>
    383c:	add	x25, x27, x26
    3840:	mov	x1, x25
    3844:	str	x0, [x1], #8
    3848:	mov	x0, x24
    384c:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    3850:	cbnz	w0, 3878 <PyInit__xxsubinterpreters@@Base+0xe64>
    3854:	subs	x23, x23, #0x1
    3858:	add	x26, x26, #0x30
    385c:	b.ne	37f8 <PyInit__xxsubinterpreters@@Base+0xde4>  // b.any
    3860:	b	3890 <PyInit__xxsubinterpreters@@Base+0xe7c>
    3864:	bl	2600 <PyErr_NoMemory@plt>
    3868:	b	38f0 <PyInit__xxsubinterpreters@@Base+0xedc>
    386c:	bl	2600 <PyErr_NoMemory@plt>
    3870:	str	xzr, [x27, x26]
    3874:	b	3890 <PyInit__xxsubinterpreters@@Base+0xe7c>
    3878:	ldr	x0, [x25], #8
    387c:	cbz	x0, 3888 <PyInit__xxsubinterpreters@@Base+0xe74>
    3880:	bl	2590 <PyMem_Free@plt>
    3884:	str	xzr, [x27, x26]
    3888:	mov	x0, x25
    388c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3890:	bl	2730 <PyErr_Occurred@plt>
    3894:	cbz	x0, 3930 <PyInit__xxsubinterpreters@@Base+0xf1c>
    3898:	ldr	x8, [x19]
    389c:	cmp	x8, #0x1
    38a0:	b.lt	38e8 <PyInit__xxsubinterpreters@@Base+0xed4>  // b.tstop
    38a4:	mov	x20, xzr
    38a8:	mov	x23, xzr
    38ac:	b	38d0 <PyInit__xxsubinterpreters@@Base+0xebc>
    38b0:	add	x8, x24, x20
    38b4:	add	x0, x8, #0x8
    38b8:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    38bc:	ldr	x8, [x19]
    38c0:	add	x23, x23, #0x1
    38c4:	add	x20, x20, #0x30
    38c8:	cmp	x23, x8
    38cc:	b.ge	38e8 <PyInit__xxsubinterpreters@@Base+0xed4>  // b.tcont
    38d0:	ldr	x24, [x19, #8]
    38d4:	ldr	x0, [x24, x20]
    38d8:	cbz	x0, 38b0 <PyInit__xxsubinterpreters@@Base+0xe9c>
    38dc:	bl	2590 <PyMem_Free@plt>
    38e0:	str	xzr, [x24, x20]
    38e4:	b	38b0 <PyInit__xxsubinterpreters@@Base+0xe9c>
    38e8:	ldr	x0, [x19, #8]
    38ec:	bl	2590 <PyMem_Free@plt>
    38f0:	mov	x0, x19
    38f4:	bl	2590 <PyMem_Free@plt>
    38f8:	bl	2730 <PyErr_Occurred@plt>
    38fc:	mov	x8, x0
    3900:	mov	x0, xzr
    3904:	cbnz	x8, 372c <PyInit__xxsubinterpreters@@Base+0xd18>
    3908:	mov	x19, xzr
    390c:	mov	w26, #0x1                   	// #1
    3910:	bl	2800 <_PyInterpreterState_Get@plt>
    3914:	cmp	x0, x22
    3918:	b.eq	3940 <PyInit__xxsubinterpreters@@Base+0xf2c>  // b.none
    391c:	mov	x0, x22
    3920:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    3924:	bl	2920 <PyThreadState_Swap@plt>
    3928:	mov	x20, x0
    392c:	b	3944 <PyInit__xxsubinterpreters@@Base+0xf30>
    3930:	mov	w26, wzr
    3934:	bl	2800 <_PyInterpreterState_Get@plt>
    3938:	cmp	x0, x22
    393c:	b.ne	391c <PyInit__xxsubinterpreters@@Base+0xf08>  // b.any
    3940:	mov	x20, xzr
    3944:	mov	x0, x22
    3948:	stp	xzr, xzr, [x29, #-16]
    394c:	stur	xzr, [x29, #-24]
    3950:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    3954:	cbz	x0, 3acc <PyInit__xxsubinterpreters@@Base+0x10b8>
    3958:	mov	x23, x0
    395c:	bl	28d0 <PyModule_GetDict@plt>
    3960:	ldr	x8, [x23]
    3964:	mov	x22, x0
    3968:	subs	x8, x8, #0x1
    396c:	str	x8, [x23]
    3970:	b.ne	397c <PyInit__xxsubinterpreters@@Base+0xf68>  // b.any
    3974:	mov	x0, x23
    3978:	bl	25e0 <_Py_Dealloc@plt>
    397c:	cbz	x22, 3acc <PyInit__xxsubinterpreters@@Base+0x10b8>
    3980:	ldr	x8, [x22]
    3984:	add	x8, x8, #0x1
    3988:	str	x8, [x22]
    398c:	tbnz	w26, #0, 3a40 <PyInit__xxsubinterpreters@@Base+0x102c>
    3990:	ldr	x8, [x19]
    3994:	cmp	x8, #0x1
    3998:	b.lt	3a40 <PyInit__xxsubinterpreters@@Base+0x102c>  // b.tstop
    399c:	mov	x27, xzr
    39a0:	mov	x28, xzr
    39a4:	ldr	x24, [x19, #8]
    39a8:	ldr	x0, [x24, x27]
    39ac:	bl	2840 <PyUnicode_FromString@plt>
    39b0:	cbz	x0, 3ab4 <PyInit__xxsubinterpreters@@Base+0x10a0>
    39b4:	add	x8, x24, x27
    39b8:	mov	x23, x0
    39bc:	add	x0, x8, #0x8
    39c0:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    39c4:	cbz	x0, 3a9c <PyInit__xxsubinterpreters@@Base+0x1088>
    39c8:	mov	x24, x0
    39cc:	mov	x0, x22
    39d0:	mov	x1, x23
    39d4:	mov	x2, x24
    39d8:	bl	2870 <PyDict_SetItem@plt>
    39dc:	ldr	x8, [x23]
    39e0:	mov	w25, w0
    39e4:	subs	x8, x8, #0x1
    39e8:	str	x8, [x23]
    39ec:	b.eq	3a08 <PyInit__xxsubinterpreters@@Base+0xff4>  // b.none
    39f0:	ldr	x8, [x24]
    39f4:	subs	x8, x8, #0x1
    39f8:	str	x8, [x24]
    39fc:	b.eq	3a20 <PyInit__xxsubinterpreters@@Base+0x100c>  // b.none
    3a00:	cbz	w25, 3a2c <PyInit__xxsubinterpreters@@Base+0x1018>
    3a04:	b	3ab4 <PyInit__xxsubinterpreters@@Base+0x10a0>
    3a08:	mov	x0, x23
    3a0c:	bl	25e0 <_Py_Dealloc@plt>
    3a10:	ldr	x8, [x24]
    3a14:	subs	x8, x8, #0x1
    3a18:	str	x8, [x24]
    3a1c:	b.ne	3a00 <PyInit__xxsubinterpreters@@Base+0xfec>  // b.any
    3a20:	mov	x0, x24
    3a24:	bl	25e0 <_Py_Dealloc@plt>
    3a28:	cbnz	w25, 3ab4 <PyInit__xxsubinterpreters@@Base+0x10a0>
    3a2c:	ldr	x8, [x19]
    3a30:	add	x28, x28, #0x1
    3a34:	add	x27, x27, #0x30
    3a38:	cmp	x28, x8
    3a3c:	b.lt	39a4 <PyInit__xxsubinterpreters@@Base+0xf90>  // b.tstop
    3a40:	mov	w1, #0x101                 	// #257
    3a44:	mov	x0, x21
    3a48:	mov	x2, x22
    3a4c:	mov	x3, x22
    3a50:	mov	x4, xzr
    3a54:	bl	2760 <PyRun_StringFlags@plt>
    3a58:	ldr	x8, [x22]
    3a5c:	mov	x21, x0
    3a60:	subs	x8, x8, #0x1
    3a64:	str	x8, [x22]
    3a68:	b.ne	3a74 <PyInit__xxsubinterpreters@@Base+0x1060>  // b.any
    3a6c:	mov	x0, x22
    3a70:	bl	25e0 <_Py_Dealloc@plt>
    3a74:	cbz	x21, 3acc <PyInit__xxsubinterpreters@@Base+0x10b8>
    3a78:	ldr	x8, [x21]
    3a7c:	subs	x8, x8, #0x1
    3a80:	str	x8, [x21]
    3a84:	b.ne	3a90 <PyInit__xxsubinterpreters@@Base+0x107c>  // b.any
    3a88:	mov	x0, x21
    3a8c:	bl	25e0 <_Py_Dealloc@plt>
    3a90:	mov	x21, xzr
    3a94:	mov	w22, wzr
    3a98:	b	3c98 <PyInit__xxsubinterpreters@@Base+0x1284>
    3a9c:	ldr	x8, [x23]
    3aa0:	subs	x8, x8, #0x1
    3aa4:	str	x8, [x23]
    3aa8:	b.ne	3ab4 <PyInit__xxsubinterpreters@@Base+0x10a0>  // b.any
    3aac:	mov	x0, x23
    3ab0:	bl	25e0 <_Py_Dealloc@plt>
    3ab4:	ldr	x8, [x22]
    3ab8:	subs	x8, x8, #0x1
    3abc:	str	x8, [x22]
    3ac0:	b.ne	3acc <PyInit__xxsubinterpreters@@Base+0x10b8>  // b.any
    3ac4:	mov	x0, x22
    3ac8:	bl	25e0 <_Py_Dealloc@plt>
    3acc:	sub	x0, x29, #0x8
    3ad0:	sub	x1, x29, #0x10
    3ad4:	sub	x2, x29, #0x18
    3ad8:	bl	2820 <PyErr_Fetch@plt>
    3adc:	ldp	x22, x23, [x29, #-16]
    3ae0:	mov	w0, #0x10                  	// #16
    3ae4:	bl	2910 <PyMem_Malloc@plt>
    3ae8:	mov	x21, x0
    3aec:	cbz	x0, 3b34 <PyInit__xxsubinterpreters@@Base+0x1120>
    3af0:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3af4:	add	x0, x0, #0x3ae
    3af8:	mov	x1, x23
    3afc:	stp	xzr, xzr, [x21]
    3b00:	bl	24f0 <PyUnicode_FromFormat@plt>
    3b04:	cbz	x0, 3b3c <PyInit__xxsubinterpreters@@Base+0x1128>
    3b08:	mov	x23, x0
    3b0c:	bl	27e0 <PyUnicode_AsUTF8@plt>
    3b10:	cbz	x0, 3b50 <PyInit__xxsubinterpreters@@Base+0x113c>
    3b14:	mov	x24, x0
    3b18:	bl	2530 <strlen@plt>
    3b1c:	add	x0, x0, #0x1
    3b20:	bl	2910 <PyMem_Malloc@plt>
    3b24:	cbz	x0, 3b48 <PyInit__xxsubinterpreters@@Base+0x1134>
    3b28:	mov	x1, x24
    3b2c:	bl	27f0 <strcpy@plt>
    3b30:	b	3b50 <PyInit__xxsubinterpreters@@Base+0x113c>
    3b34:	bl	2600 <PyErr_NoMemory@plt>
    3b38:	b	3c3c <PyInit__xxsubinterpreters@@Base+0x1228>
    3b3c:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3b40:	add	x22, x22, #0x3b1
    3b44:	b	3c24 <PyInit__xxsubinterpreters@@Base+0x1210>
    3b48:	bl	2600 <PyErr_NoMemory@plt>
    3b4c:	mov	x0, xzr
    3b50:	str	x0, [x21]
    3b54:	ldr	x8, [x23]
    3b58:	subs	x8, x8, #0x1
    3b5c:	str	x8, [x23]
    3b60:	b.ne	3b70 <PyInit__xxsubinterpreters@@Base+0x115c>  // b.any
    3b64:	mov	x0, x23
    3b68:	bl	25e0 <_Py_Dealloc@plt>
    3b6c:	ldr	x0, [x21]
    3b70:	cbz	x0, 3bb8 <PyInit__xxsubinterpreters@@Base+0x11a4>
    3b74:	cbz	x22, 3c3c <PyInit__xxsubinterpreters@@Base+0x1228>
    3b78:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3b7c:	add	x0, x0, #0x3ae
    3b80:	mov	x1, x22
    3b84:	bl	24f0 <PyUnicode_FromFormat@plt>
    3b88:	cbz	x0, 3bd4 <PyInit__xxsubinterpreters@@Base+0x11c0>
    3b8c:	mov	x22, x0
    3b90:	bl	27e0 <PyUnicode_AsUTF8@plt>
    3b94:	cbz	x0, 3be8 <PyInit__xxsubinterpreters@@Base+0x11d4>
    3b98:	mov	x23, x0
    3b9c:	bl	2530 <strlen@plt>
    3ba0:	add	x0, x0, #0x1
    3ba4:	bl	2910 <PyMem_Malloc@plt>
    3ba8:	cbz	x0, 3be0 <PyInit__xxsubinterpreters@@Base+0x11cc>
    3bac:	mov	x1, x23
    3bb0:	bl	27f0 <strcpy@plt>
    3bb4:	b	3be8 <PyInit__xxsubinterpreters@@Base+0x11d4>
    3bb8:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3bbc:	ldr	x8, [x8, #4008]
    3bc0:	ldr	x0, [x8]
    3bc4:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3bc8:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3bcc:	add	x22, x22, #0x3d6
    3bd0:	b	3c24 <PyInit__xxsubinterpreters@@Base+0x1210>
    3bd4:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3bd8:	add	x22, x22, #0x404
    3bdc:	b	3c24 <PyInit__xxsubinterpreters@@Base+0x1210>
    3be0:	bl	2600 <PyErr_NoMemory@plt>
    3be4:	mov	x0, xzr
    3be8:	str	x0, [x21, #8]
    3bec:	ldr	x8, [x22]
    3bf0:	subs	x8, x8, #0x1
    3bf4:	str	x8, [x22]
    3bf8:	b.ne	3c08 <PyInit__xxsubinterpreters@@Base+0x11f4>  // b.any
    3bfc:	mov	x0, x22
    3c00:	bl	25e0 <_Py_Dealloc@plt>
    3c04:	ldr	x0, [x21, #8]
    3c08:	cbnz	x0, 3c3c <PyInit__xxsubinterpreters@@Base+0x1228>
    3c0c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3c10:	ldr	x8, [x8, #4008]
    3c14:	ldr	x0, [x8]
    3c18:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3c1c:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3c20:	add	x22, x22, #0x427
    3c24:	bl	26f0 <PyErr_Clear@plt>
    3c28:	ldr	x0, [x21]
    3c2c:	cbz	x0, 3c38 <PyInit__xxsubinterpreters@@Base+0x1224>
    3c30:	bl	2590 <PyMem_Free@plt>
    3c34:	str	xzr, [x21]
    3c38:	str	x22, [x21, #8]
    3c3c:	ldur	x0, [x29, #-8]
    3c40:	cbz	x0, 3c58 <PyInit__xxsubinterpreters@@Base+0x1244>
    3c44:	ldr	x8, [x0]
    3c48:	subs	x8, x8, #0x1
    3c4c:	str	x8, [x0]
    3c50:	b.ne	3c58 <PyInit__xxsubinterpreters@@Base+0x1244>  // b.any
    3c54:	bl	25e0 <_Py_Dealloc@plt>
    3c58:	ldur	x0, [x29, #-16]
    3c5c:	cbz	x0, 3c74 <PyInit__xxsubinterpreters@@Base+0x1260>
    3c60:	ldr	x8, [x0]
    3c64:	subs	x8, x8, #0x1
    3c68:	str	x8, [x0]
    3c6c:	b.ne	3c74 <PyInit__xxsubinterpreters@@Base+0x1260>  // b.any
    3c70:	bl	25e0 <_Py_Dealloc@plt>
    3c74:	ldur	x0, [x29, #-24]
    3c78:	cbz	x0, 3c90 <PyInit__xxsubinterpreters@@Base+0x127c>
    3c7c:	ldr	x8, [x0]
    3c80:	subs	x8, x8, #0x1
    3c84:	str	x8, [x0]
    3c88:	b.ne	3c90 <PyInit__xxsubinterpreters@@Base+0x127c>  // b.any
    3c8c:	bl	25e0 <_Py_Dealloc@plt>
    3c90:	cbz	x21, 3d98 <PyInit__xxsubinterpreters@@Base+0x1384>
    3c94:	mov	w22, #0xffffffff            	// #-1
    3c98:	cbz	x20, 3ca4 <PyInit__xxsubinterpreters@@Base+0x1290>
    3c9c:	mov	x0, x20
    3ca0:	bl	2920 <PyThreadState_Swap@plt>
    3ca4:	cbz	x21, 3ccc <PyInit__xxsubinterpreters@@Base+0x12b8>
    3ca8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3cac:	ldr	x0, [x8, #2368]
    3cb0:	ldp	x2, x3, [x21]
    3cb4:	cbz	x2, 3cd8 <PyInit__xxsubinterpreters@@Base+0x12c4>
    3cb8:	cbz	x3, 3ce8 <PyInit__xxsubinterpreters@@Base+0x12d4>
    3cbc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3cc0:	add	x1, x1, #0x453
    3cc4:	bl	28c0 <PyErr_Format@plt>
    3cc8:	b	3cf8 <PyInit__xxsubinterpreters@@Base+0x12e4>
    3ccc:	cbz	w22, 3d18 <PyInit__xxsubinterpreters@@Base+0x1304>
    3cd0:	bl	2600 <PyErr_NoMemory@plt>
    3cd4:	b	3d18 <PyInit__xxsubinterpreters@@Base+0x1304>
    3cd8:	cbz	x3, 3cf4 <PyInit__xxsubinterpreters@@Base+0x12e0>
    3cdc:	mov	x1, x3
    3ce0:	bl	2670 <PyErr_SetString@plt>
    3ce4:	b	3cf8 <PyInit__xxsubinterpreters@@Base+0x12e4>
    3ce8:	mov	x1, x2
    3cec:	bl	2670 <PyErr_SetString@plt>
    3cf0:	b	3cf8 <PyInit__xxsubinterpreters@@Base+0x12e4>
    3cf4:	bl	2690 <PyErr_SetNone@plt>
    3cf8:	ldr	x0, [x21]
    3cfc:	cbz	x0, 3d04 <PyInit__xxsubinterpreters@@Base+0x12f0>
    3d00:	bl	2590 <PyMem_Free@plt>
    3d04:	ldr	x0, [x21, #8]
    3d08:	cbz	x0, 3d10 <PyInit__xxsubinterpreters@@Base+0x12fc>
    3d0c:	bl	2590 <PyMem_Free@plt>
    3d10:	mov	x0, x21
    3d14:	bl	2590 <PyMem_Free@plt>
    3d18:	tbnz	w26, #0, 3d7c <PyInit__xxsubinterpreters@@Base+0x1368>
    3d1c:	ldr	x8, [x19]
    3d20:	cmp	x8, #0x1
    3d24:	b.lt	3d6c <PyInit__xxsubinterpreters@@Base+0x1358>  // b.tstop
    3d28:	mov	x20, xzr
    3d2c:	mov	x21, xzr
    3d30:	b	3d54 <PyInit__xxsubinterpreters@@Base+0x1340>
    3d34:	add	x8, x23, x20
    3d38:	add	x0, x8, #0x8
    3d3c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3d40:	ldr	x8, [x19]
    3d44:	add	x21, x21, #0x1
    3d48:	add	x20, x20, #0x30
    3d4c:	cmp	x21, x8
    3d50:	b.ge	3d6c <PyInit__xxsubinterpreters@@Base+0x1358>  // b.tcont
    3d54:	ldr	x23, [x19, #8]
    3d58:	ldr	x0, [x23, x20]
    3d5c:	cbz	x0, 3d34 <PyInit__xxsubinterpreters@@Base+0x1320>
    3d60:	bl	2590 <PyMem_Free@plt>
    3d64:	str	xzr, [x23, x20]
    3d68:	b	3d34 <PyInit__xxsubinterpreters@@Base+0x1320>
    3d6c:	ldr	x0, [x19, #8]
    3d70:	bl	2590 <PyMem_Free@plt>
    3d74:	mov	x0, x19
    3d78:	bl	2590 <PyMem_Free@plt>
    3d7c:	cbnz	w22, 3728 <PyInit__xxsubinterpreters@@Base+0xd14>
    3d80:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d84:	ldr	x0, [x0, #4048]
    3d88:	ldr	x8, [x0]
    3d8c:	add	x8, x8, #0x1
    3d90:	str	x8, [x0]
    3d94:	b	372c <PyInit__xxsubinterpreters@@Base+0xd18>
    3d98:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d9c:	ldr	x8, [x8, #3976]
    3da0:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3da4:	add	x0, x0, #0x37a
    3da8:	mov	w1, #0x33                  	// #51
    3dac:	ldr	x3, [x8]
    3db0:	mov	w2, #0x1                   	// #1
    3db4:	bl	27c0 <fwrite@plt>
    3db8:	bl	26f0 <PyErr_Clear@plt>
    3dbc:	b	3c94 <PyInit__xxsubinterpreters@@Base+0x1280>
    3dc0:	sub	sp, sp, #0x20
    3dc4:	stp	x29, x30, [sp, #16]
    3dc8:	add	x29, sp, #0x10
    3dcc:	mov	x8, x2
    3dd0:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3dd4:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3dd8:	mov	x0, x1
    3ddc:	add	x2, x2, #0x45e
    3de0:	add	x3, x3, #0x658
    3de4:	add	x4, sp, #0x8
    3de8:	mov	x1, x8
    3dec:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3df0:	cbz	w0, 3e10 <PyInit__xxsubinterpreters@@Base+0x13fc>
    3df4:	ldr	x0, [sp, #8]
    3df8:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    3dfc:	cbz	w0, 3e20 <PyInit__xxsubinterpreters@@Base+0x140c>
    3e00:	bl	26f0 <PyErr_Clear@plt>
    3e04:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3e08:	ldr	x0, [x0, #4032]
    3e0c:	b	3e28 <PyInit__xxsubinterpreters@@Base+0x1414>
    3e10:	mov	x0, xzr
    3e14:	ldp	x29, x30, [sp, #16]
    3e18:	add	sp, sp, #0x20
    3e1c:	ret
    3e20:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3e24:	ldr	x0, [x0, #4056]
    3e28:	ldr	x8, [x0]
    3e2c:	add	x8, x8, #0x1
    3e30:	str	x8, [x0]
    3e34:	ldp	x29, x30, [sp, #16]
    3e38:	add	sp, sp, #0x20
    3e3c:	ret
    3e40:	stp	x29, x30, [sp, #-48]!
    3e44:	stp	x22, x21, [sp, #16]
    3e48:	stp	x20, x19, [sp, #32]
    3e4c:	mov	x29, sp
    3e50:	mov	w0, #0x28                  	// #40
    3e54:	bl	2910 <PyMem_Malloc@plt>
    3e58:	cbz	x0, 3fe8 <PyInit__xxsubinterpreters@@Base+0x15d4>
    3e5c:	mov	x19, x0
    3e60:	bl	2790 <PyThread_allocate_lock@plt>
    3e64:	str	x0, [x19]
    3e68:	cbz	x0, 3f34 <PyInit__xxsubinterpreters@@Base+0x1520>
    3e6c:	mov	w0, #0x18                  	// #24
    3e70:	bl	2910 <PyMem_Malloc@plt>
    3e74:	cbz	x0, 3f54 <PyInit__xxsubinterpreters@@Base+0x1540>
    3e78:	stp	xzr, xzr, [x0]
    3e7c:	str	xzr, [x0, #16]
    3e80:	str	x0, [x19, #8]
    3e84:	mov	w0, #0x20                  	// #32
    3e88:	bl	2910 <PyMem_Malloc@plt>
    3e8c:	cbz	x0, 3f60 <PyInit__xxsubinterpreters@@Base+0x154c>
    3e90:	movi	v0.2d, #0x0
    3e94:	mov	w8, #0x1                   	// #1
    3e98:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3e9c:	stp	q0, q0, [x0]
    3ea0:	str	x0, [x19, #16]
    3ea4:	str	w8, [x19, #24]
    3ea8:	str	xzr, [x19, #32]
    3eac:	add	x21, x21, #0x960
    3eb0:	ldr	x0, [x21]
    3eb4:	mov	w1, #0x1                   	// #1
    3eb8:	bl	2640 <PyThread_acquire_lock@plt>
    3ebc:	ldr	x20, [x21, #24]
    3ec0:	tbnz	x20, #63, 3fbc <PyInit__xxsubinterpreters@@Base+0x15a8>
    3ec4:	add	x8, x20, #0x1
    3ec8:	adrp	x9, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3ecc:	mov	w0, #0x20                  	// #32
    3ed0:	str	x8, [x9, #2424]
    3ed4:	bl	2910 <PyMem_Malloc@plt>
    3ed8:	cbz	x0, 3fd0 <PyInit__xxsubinterpreters@@Base+0x15bc>
    3edc:	stp	x20, x19, [x0]
    3ee0:	str	xzr, [x0, #24]
    3ee4:	ldr	x8, [x21, #8]
    3ee8:	str	x8, [x0, #16]
    3eec:	ldr	x9, [x21, #16]
    3ef0:	ldr	x8, [x21]
    3ef4:	add	x9, x9, #0x1
    3ef8:	stp	x0, x9, [x21, #8]
    3efc:	mov	x0, x8
    3f00:	bl	27b0 <PyThread_release_lock@plt>
    3f04:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3f08:	add	x0, x0, #0x788
    3f0c:	mov	x1, x20
    3f10:	mov	w2, wzr
    3f14:	mov	x3, x21
    3f18:	mov	w4, wzr
    3f1c:	mov	w5, wzr
    3f20:	bl	31d0 <PyInit__xxsubinterpreters@@Base+0x7bc>
    3f24:	cbnz	x0, 3fe8 <PyInit__xxsubinterpreters@@Base+0x15d4>
    3f28:	mov	x0, x20
    3f2c:	bl	4df8 <PyInit__xxsubinterpreters@@Base+0x23e4>
    3f30:	b	3fe4 <PyInit__xxsubinterpreters@@Base+0x15d0>
    3f34:	mov	x0, x19
    3f38:	bl	2590 <PyMem_Free@plt>
    3f3c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3f40:	ldr	x0, [x8, #2352]
    3f44:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3f48:	add	x1, x1, #0x46d
    3f4c:	bl	2670 <PyErr_SetString@plt>
    3f50:	b	3fe4 <PyInit__xxsubinterpreters@@Base+0x15d0>
    3f54:	bl	2600 <PyErr_NoMemory@plt>
    3f58:	str	xzr, [x19, #8]
    3f5c:	b	3f80 <PyInit__xxsubinterpreters@@Base+0x156c>
    3f60:	ldr	x20, [x19, #8]
    3f64:	str	xzr, [x19, #16]
    3f68:	ldr	x21, [x20, #8]
    3f6c:	cbnz	x21, 3fa0 <PyInit__xxsubinterpreters@@Base+0x158c>
    3f70:	mov	x0, x20
    3f74:	stp	xzr, xzr, [x20]
    3f78:	str	xzr, [x20, #16]
    3f7c:	bl	2590 <PyMem_Free@plt>
    3f80:	mov	x0, x19
    3f84:	bl	2590 <PyMem_Free@plt>
    3f88:	b	3fe4 <PyInit__xxsubinterpreters@@Base+0x15d0>
    3f8c:	mov	x0, x21
    3f90:	str	xzr, [x21, #8]
    3f94:	bl	2590 <PyMem_Free@plt>
    3f98:	mov	x21, x22
    3f9c:	cbz	x22, 3f70 <PyInit__xxsubinterpreters@@Base+0x155c>
    3fa0:	ldp	x0, x22, [x21]
    3fa4:	cbz	x0, 3f8c <PyInit__xxsubinterpreters@@Base+0x1578>
    3fa8:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3fac:	ldr	x0, [x21]
    3fb0:	bl	2590 <PyMem_Free@plt>
    3fb4:	str	xzr, [x21]
    3fb8:	b	3f8c <PyInit__xxsubinterpreters@@Base+0x1578>
    3fbc:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3fc0:	ldr	x0, [x8, #2352]
    3fc4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3fc8:	add	x1, x1, #0x494
    3fcc:	bl	2670 <PyErr_SetString@plt>
    3fd0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3fd4:	ldr	x0, [x8, #2400]
    3fd8:	bl	27b0 <PyThread_release_lock@plt>
    3fdc:	mov	x0, x19
    3fe0:	bl	306c <PyInit__xxsubinterpreters@@Base+0x658>
    3fe4:	mov	x0, xzr
    3fe8:	ldp	x20, x19, [sp, #32]
    3fec:	ldp	x22, x21, [sp, #16]
    3ff0:	ldp	x29, x30, [sp], #48
    3ff4:	ret
    3ff8:	sub	sp, sp, #0x20
    3ffc:	stp	x29, x30, [sp, #16]
    4000:	add	x29, sp, #0x10
    4004:	mov	x8, x2
    4008:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    400c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4010:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4014:	mov	x0, x1
    4018:	add	x2, x2, #0x4b3
    401c:	add	x3, x3, #0x668
    4020:	add	x4, x4, #0xf2c
    4024:	add	x5, sp, #0x8
    4028:	mov	x1, x8
    402c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4030:	cbz	w0, 4040 <PyInit__xxsubinterpreters@@Base+0x162c>
    4034:	ldr	x0, [sp, #8]
    4038:	bl	4df8 <PyInit__xxsubinterpreters@@Base+0x23e4>
    403c:	cbz	w0, 4050 <PyInit__xxsubinterpreters@@Base+0x163c>
    4040:	mov	x0, xzr
    4044:	ldp	x29, x30, [sp, #16]
    4048:	add	sp, sp, #0x20
    404c:	ret
    4050:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4054:	ldr	x0, [x0, #4048]
    4058:	ldr	x8, [x0]
    405c:	add	x8, x8, #0x1
    4060:	str	x8, [x0]
    4064:	ldp	x29, x30, [sp, #16]
    4068:	add	sp, sp, #0x20
    406c:	ret
    4070:	stp	x29, x30, [sp, #-64]!
    4074:	stp	x24, x23, [sp, #16]
    4078:	stp	x22, x21, [sp, #32]
    407c:	stp	x20, x19, [sp, #48]
    4080:	mov	x29, sp
    4084:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4088:	add	x20, x20, #0x960
    408c:	ldr	x0, [x20]
    4090:	mov	w1, #0x1                   	// #1
    4094:	bl	2640 <PyThread_acquire_lock@plt>
    4098:	ldr	x8, [x20, #16]
    409c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    40a0:	cmp	x8, x9
    40a4:	b.ne	40c4 <PyInit__xxsubinterpreters@@Base+0x16b0>  // b.any
    40a8:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    40ac:	ldr	x8, [x8, #4000]
    40b0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    40b4:	add	x1, x1, #0x51a
    40b8:	ldr	x0, [x8]
    40bc:	bl	2670 <PyErr_SetString@plt>
    40c0:	b	416c <PyInit__xxsubinterpreters@@Base+0x1758>
    40c4:	lsr	x9, x8, #60
    40c8:	cbnz	x9, 416c <PyInit__xxsubinterpreters@@Base+0x1758>
    40cc:	lsl	x0, x8, #3
    40d0:	bl	2910 <PyMem_Malloc@plt>
    40d4:	cbz	x0, 416c <PyInit__xxsubinterpreters@@Base+0x1758>
    40d8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    40dc:	ldr	x8, [x8, #2408]
    40e0:	mov	x19, x0
    40e4:	cbz	x8, 40fc <PyInit__xxsubinterpreters@@Base+0x16e8>
    40e8:	mov	x9, x19
    40ec:	ldr	x10, [x8]
    40f0:	str	x10, [x9], #8
    40f4:	ldr	x8, [x8, #16]
    40f8:	cbnz	x8, 40ec <PyInit__xxsubinterpreters@@Base+0x16d8>
    40fc:	ldr	x0, [x20]
    4100:	ldr	x21, [x20, #16]
    4104:	bl	27b0 <PyThread_release_lock@plt>
    4108:	mov	x0, x21
    410c:	bl	2500 <PyList_New@plt>
    4110:	mov	x20, x0
    4114:	cbz	x0, 41ac <PyInit__xxsubinterpreters@@Base+0x1798>
    4118:	cmp	x21, #0x1
    411c:	b.lt	41ac <PyInit__xxsubinterpreters@@Base+0x1798>  // b.tstop
    4120:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4124:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4128:	mov	x24, xzr
    412c:	add	x22, x22, #0x788
    4130:	add	x23, x23, #0x960
    4134:	ldr	x1, [x19, x24, lsl #3]
    4138:	mov	x0, x22
    413c:	mov	w2, wzr
    4140:	mov	x3, x23
    4144:	mov	w4, wzr
    4148:	mov	w5, wzr
    414c:	bl	31d0 <PyInit__xxsubinterpreters@@Base+0x7bc>
    4150:	cbz	x0, 4190 <PyInit__xxsubinterpreters@@Base+0x177c>
    4154:	ldr	x8, [x20, #24]
    4158:	str	x0, [x8, x24, lsl #3]
    415c:	add	x24, x24, #0x1
    4160:	cmp	x21, x24
    4164:	b.ne	4134 <PyInit__xxsubinterpreters@@Base+0x1720>  // b.any
    4168:	b	41ac <PyInit__xxsubinterpreters@@Base+0x1798>
    416c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4170:	ldr	x0, [x8, #2400]
    4174:	bl	27b0 <PyThread_release_lock@plt>
    4178:	ldp	x20, x19, [sp, #48]
    417c:	ldp	x22, x21, [sp, #32]
    4180:	ldp	x24, x23, [sp, #16]
    4184:	mov	x0, xzr
    4188:	ldp	x29, x30, [sp], #64
    418c:	b	2500 <PyList_New@plt>
    4190:	ldr	x8, [x20]
    4194:	subs	x8, x8, #0x1
    4198:	str	x8, [x20]
    419c:	b.ne	41a8 <PyInit__xxsubinterpreters@@Base+0x1794>  // b.any
    41a0:	mov	x0, x20
    41a4:	bl	25e0 <_Py_Dealloc@plt>
    41a8:	mov	x20, xzr
    41ac:	mov	x0, x19
    41b0:	bl	2590 <PyMem_Free@plt>
    41b4:	mov	x0, x20
    41b8:	ldp	x20, x19, [sp, #48]
    41bc:	ldp	x22, x21, [sp, #32]
    41c0:	ldp	x24, x23, [sp, #16]
    41c4:	ldp	x29, x30, [sp], #64
    41c8:	ret
    41cc:	sub	sp, sp, #0x60
    41d0:	stp	x29, x30, [sp, #16]
    41d4:	str	x25, [sp, #32]
    41d8:	stp	x24, x23, [sp, #48]
    41dc:	stp	x22, x21, [sp, #64]
    41e0:	stp	x20, x19, [sp, #80]
    41e4:	add	x29, sp, #0x10
    41e8:	mov	x8, x2
    41ec:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    41f0:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    41f4:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    41f8:	mov	x0, x1
    41fc:	add	x2, x2, #0x531
    4200:	add	x3, x3, #0x678
    4204:	add	x4, x4, #0xf2c
    4208:	add	x5, x29, #0x18
    420c:	add	x6, sp, #0x8
    4210:	mov	x1, x8
    4214:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4218:	cbz	w0, 42f4 <PyInit__xxsubinterpreters@@Base+0x18e0>
    421c:	ldr	x20, [x29, #24]
    4220:	ldr	x22, [sp, #8]
    4224:	bl	2800 <_PyInterpreterState_Get@plt>
    4228:	cbz	x0, 42f8 <PyInit__xxsubinterpreters@@Base+0x18e4>
    422c:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4230:	add	x19, x19, #0x938
    4234:	mov	x21, x0
    4238:	ldr	x0, [x19, #40]
    423c:	mov	w1, #0x1                   	// #1
    4240:	bl	2640 <PyThread_acquire_lock@plt>
    4244:	ldr	x8, [x19, #48]
    4248:	cbz	x8, 4274 <PyInit__xxsubinterpreters@@Base+0x1860>
    424c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4250:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4254:	add	x1, x1, #0x22a
    4258:	add	x19, x19, #0x938
    425c:	ldr	x9, [x8]
    4260:	cmp	x9, x20
    4264:	b.eq	4280 <PyInit__xxsubinterpreters@@Base+0x186c>  // b.none
    4268:	ldr	x8, [x8, #16]
    426c:	cbnz	x8, 425c <PyInit__xxsubinterpreters@@Base+0x1848>
    4270:	b	42dc <PyInit__xxsubinterpreters@@Base+0x18c8>
    4274:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4278:	add	x1, x1, #0x22a
    427c:	b	42dc <PyInit__xxsubinterpreters@@Base+0x18c8>
    4280:	ldr	x23, [x8, #8]
    4284:	cbz	x23, 42cc <PyInit__xxsubinterpreters@@Base+0x18b8>
    4288:	ldr	w8, [x23, #24]
    428c:	cbz	w8, 42cc <PyInit__xxsubinterpreters@@Base+0x18b8>
    4290:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4294:	ldr	x19, [x8, #2400]
    4298:	cbnz	x19, 42a4 <PyInit__xxsubinterpreters@@Base+0x1890>
    429c:	mov	x0, x19
    42a0:	bl	27b0 <PyThread_release_lock@plt>
    42a4:	ldr	x8, [x23, #32]
    42a8:	cbz	x8, 4314 <PyInit__xxsubinterpreters@@Base+0x1900>
    42ac:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    42b0:	ldr	x0, [x8, #2376]
    42b4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    42b8:	add	x1, x1, #0x542
    42bc:	mov	x2, x20
    42c0:	bl	28c0 <PyErr_Format@plt>
    42c4:	mov	x0, x19
    42c8:	b	42f0 <PyInit__xxsubinterpreters@@Base+0x18dc>
    42cc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    42d0:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    42d4:	add	x1, x1, #0x542
    42d8:	add	x19, x19, #0x948
    42dc:	ldr	x0, [x19]
    42e0:	mov	x2, x20
    42e4:	bl	28c0 <PyErr_Format@plt>
    42e8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    42ec:	ldr	x0, [x8, #2400]
    42f0:	bl	27b0 <PyThread_release_lock@plt>
    42f4:	mov	x0, xzr
    42f8:	ldp	x20, x19, [sp, #80]
    42fc:	ldp	x22, x21, [sp, #64]
    4300:	ldp	x24, x23, [sp, #48]
    4304:	ldr	x25, [sp, #32]
    4308:	ldp	x29, x30, [sp, #16]
    430c:	add	sp, sp, #0x60
    4310:	ret
    4314:	mov	w0, #0x28                  	// #40
    4318:	bl	2910 <PyMem_Malloc@plt>
    431c:	cbz	x0, 42c4 <PyInit__xxsubinterpreters@@Base+0x18b0>
    4320:	mov	x20, x0
    4324:	mov	x0, x22
    4328:	mov	x1, x20
    432c:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    4330:	cbz	w0, 4340 <PyInit__xxsubinterpreters@@Base+0x192c>
    4334:	mov	x0, x19
    4338:	bl	27b0 <PyThread_release_lock@plt>
    433c:	b	4468 <PyInit__xxsubinterpreters@@Base+0x1a54>
    4340:	mov	x0, x21
    4344:	bl	2680 <PyInterpreterState_GetID@plt>
    4348:	ldr	x8, [x23]
    434c:	mov	x21, x0
    4350:	mov	w1, #0x1                   	// #1
    4354:	mov	x0, x8
    4358:	bl	2640 <PyThread_acquire_lock@plt>
    435c:	ldr	w8, [x23, #24]
    4360:	cbz	w8, 4390 <PyInit__xxsubinterpreters@@Base+0x197c>
    4364:	ldr	x22, [x23, #16]
    4368:	mov	x24, x22
    436c:	ldr	x8, [x24, #16]!
    4370:	cbz	x8, 43a8 <PyInit__xxsubinterpreters@@Base+0x1994>
    4374:	mov	x25, x8
    4378:	ldr	x8, [x8, #8]
    437c:	cmp	x8, x21
    4380:	b.eq	43e0 <PyInit__xxsubinterpreters@@Base+0x19cc>  // b.none
    4384:	ldr	x8, [x25]
    4388:	cbnz	x8, 4374 <PyInit__xxsubinterpreters@@Base+0x1960>
    438c:	b	43ac <PyInit__xxsubinterpreters@@Base+0x1998>
    4390:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4394:	ldr	x0, [x8, #2376]
    4398:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    439c:	add	x1, x1, #0x555
    43a0:	bl	2670 <PyErr_SetString@plt>
    43a4:	b	4450 <PyInit__xxsubinterpreters@@Base+0x1a3c>
    43a8:	mov	x25, xzr
    43ac:	mov	w0, #0x18                  	// #24
    43b0:	bl	2910 <PyMem_Malloc@plt>
    43b4:	cbz	x0, 444c <PyInit__xxsubinterpreters@@Base+0x1a38>
    43b8:	mov	w8, #0x1                   	// #1
    43bc:	cmp	x25, #0x0
    43c0:	str	w8, [x0, #16]
    43c4:	csel	x8, x24, x25, eq  // eq = none
    43c8:	stp	xzr, x21, [x0]
    43cc:	str	x0, [x8]
    43d0:	ldr	x8, [x22]
    43d4:	add	x8, x8, #0x1
    43d8:	str	x8, [x22]
    43dc:	b	43e8 <PyInit__xxsubinterpreters@@Base+0x19d4>
    43e0:	ldr	w8, [x25, #16]
    43e4:	cbz	w8, 4474 <PyInit__xxsubinterpreters@@Base+0x1a60>
    43e8:	ldr	x21, [x23, #8]
    43ec:	mov	w0, #0x10                  	// #16
    43f0:	bl	2910 <PyMem_Malloc@plt>
    43f4:	cbz	x0, 444c <PyInit__xxsubinterpreters@@Base+0x1a38>
    43f8:	stp	x20, xzr, [x0]
    43fc:	ldr	x8, [x21]
    4400:	add	x9, x8, #0x1
    4404:	mov	x8, x21
    4408:	str	x9, [x8], #8
    440c:	ldr	x9, [x8]
    4410:	cbz	x9, 441c <PyInit__xxsubinterpreters@@Base+0x1a08>
    4414:	ldr	x8, [x21, #16]
    4418:	add	x8, x8, #0x8
    441c:	str	x0, [x8]
    4420:	str	x0, [x21, #16]
    4424:	ldr	x0, [x23]
    4428:	bl	27b0 <PyThread_release_lock@plt>
    442c:	mov	x0, x19
    4430:	bl	27b0 <PyThread_release_lock@plt>
    4434:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4438:	ldr	x0, [x0, #4048]
    443c:	ldr	x8, [x0]
    4440:	add	x8, x8, #0x1
    4444:	str	x8, [x0]
    4448:	b	42f8 <PyInit__xxsubinterpreters@@Base+0x18e4>
    444c:	bl	2600 <PyErr_NoMemory@plt>
    4450:	ldr	x0, [x23]
    4454:	bl	27b0 <PyThread_release_lock@plt>
    4458:	mov	x0, x19
    445c:	bl	27b0 <PyThread_release_lock@plt>
    4460:	mov	x0, x20
    4464:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4468:	mov	x0, x20
    446c:	bl	2590 <PyMem_Free@plt>
    4470:	b	42f4 <PyInit__xxsubinterpreters@@Base+0x18e0>
    4474:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4478:	ldr	x0, [x8, #2376]
    447c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4480:	add	x1, x1, #0x564
    4484:	b	43a0 <PyInit__xxsubinterpreters@@Base+0x198c>
    4488:	stp	x29, x30, [sp, #-80]!
    448c:	str	x25, [sp, #16]
    4490:	stp	x24, x23, [sp, #32]
    4494:	stp	x22, x21, [sp, #48]
    4498:	stp	x20, x19, [sp, #64]
    449c:	mov	x29, sp
    44a0:	mov	x8, x2
    44a4:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    44a8:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    44ac:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    44b0:	mov	x0, x1
    44b4:	add	x2, x2, #0x57b
    44b8:	add	x3, x3, #0x690
    44bc:	add	x4, x4, #0xf2c
    44c0:	add	x5, x29, #0x18
    44c4:	mov	x1, x8
    44c8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    44cc:	cbz	w0, 45cc <PyInit__xxsubinterpreters@@Base+0x1bb8>
    44d0:	ldr	x19, [x29, #24]
    44d4:	bl	2800 <_PyInterpreterState_Get@plt>
    44d8:	cbz	x0, 45cc <PyInit__xxsubinterpreters@@Base+0x1bb8>
    44dc:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    44e0:	add	x20, x20, #0x938
    44e4:	mov	x22, x0
    44e8:	ldr	x0, [x20, #40]
    44ec:	mov	w1, #0x1                   	// #1
    44f0:	bl	2640 <PyThread_acquire_lock@plt>
    44f4:	ldr	x8, [x20, #48]
    44f8:	cbz	x8, 4524 <PyInit__xxsubinterpreters@@Base+0x1b10>
    44fc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4500:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4504:	add	x1, x1, #0x22a
    4508:	add	x20, x20, #0x938
    450c:	ldr	x9, [x8]
    4510:	cmp	x9, x19
    4514:	b.eq	4530 <PyInit__xxsubinterpreters@@Base+0x1b1c>  // b.none
    4518:	ldr	x8, [x8, #16]
    451c:	cbnz	x8, 450c <PyInit__xxsubinterpreters@@Base+0x1af8>
    4520:	b	45b4 <PyInit__xxsubinterpreters@@Base+0x1ba0>
    4524:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4528:	add	x1, x1, #0x22a
    452c:	b	45b4 <PyInit__xxsubinterpreters@@Base+0x1ba0>
    4530:	ldr	x20, [x8, #8]
    4534:	cbz	x20, 45a4 <PyInit__xxsubinterpreters@@Base+0x1b90>
    4538:	ldr	w8, [x20, #24]
    453c:	cbz	w8, 45a4 <PyInit__xxsubinterpreters@@Base+0x1b90>
    4540:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4544:	ldr	x21, [x8, #2400]
    4548:	cbnz	x21, 4554 <PyInit__xxsubinterpreters@@Base+0x1b40>
    454c:	mov	x0, x21
    4550:	bl	27b0 <PyThread_release_lock@plt>
    4554:	mov	x0, x22
    4558:	bl	2680 <PyInterpreterState_GetID@plt>
    455c:	ldr	x8, [x20]
    4560:	mov	x22, x0
    4564:	mov	w1, #0x1                   	// #1
    4568:	mov	x0, x8
    456c:	bl	2640 <PyThread_acquire_lock@plt>
    4570:	ldr	w8, [x20, #24]
    4574:	cbz	w8, 45ec <PyInit__xxsubinterpreters@@Base+0x1bd8>
    4578:	ldr	x23, [x20, #16]
    457c:	mov	x24, x23
    4580:	ldr	x8, [x24, #24]!
    4584:	cbz	x8, 4604 <PyInit__xxsubinterpreters@@Base+0x1bf0>
    4588:	mov	x25, x8
    458c:	ldr	x8, [x8, #8]
    4590:	cmp	x8, x22
    4594:	b.eq	463c <PyInit__xxsubinterpreters@@Base+0x1c28>  // b.none
    4598:	ldr	x8, [x25]
    459c:	cbnz	x8, 4588 <PyInit__xxsubinterpreters@@Base+0x1b74>
    45a0:	b	4608 <PyInit__xxsubinterpreters@@Base+0x1bf4>
    45a4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    45a8:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    45ac:	add	x1, x1, #0x542
    45b0:	add	x20, x20, #0x948
    45b4:	ldr	x0, [x20]
    45b8:	mov	x2, x19
    45bc:	bl	28c0 <PyErr_Format@plt>
    45c0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    45c4:	ldr	x0, [x8, #2400]
    45c8:	bl	27b0 <PyThread_release_lock@plt>
    45cc:	mov	x19, xzr
    45d0:	mov	x0, x19
    45d4:	ldp	x20, x19, [sp, #64]
    45d8:	ldp	x22, x21, [sp, #48]
    45dc:	ldp	x24, x23, [sp, #32]
    45e0:	ldr	x25, [sp, #16]
    45e4:	ldp	x29, x30, [sp], #80
    45e8:	ret
    45ec:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    45f0:	ldr	x0, [x8, #2376]
    45f4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    45f8:	add	x1, x1, #0x555
    45fc:	bl	2670 <PyErr_SetString@plt>
    4600:	b	46a4 <PyInit__xxsubinterpreters@@Base+0x1c90>
    4604:	mov	x25, xzr
    4608:	mov	w0, #0x18                  	// #24
    460c:	bl	2910 <PyMem_Malloc@plt>
    4610:	cbz	x0, 46a0 <PyInit__xxsubinterpreters@@Base+0x1c8c>
    4614:	mov	w8, #0x1                   	// #1
    4618:	cmp	x25, #0x0
    461c:	str	w8, [x0, #16]
    4620:	csel	x8, x24, x25, eq  // eq = none
    4624:	stp	xzr, x22, [x0]
    4628:	str	x0, [x8]
    462c:	ldr	x8, [x23, #8]
    4630:	add	x8, x8, #0x1
    4634:	str	x8, [x23, #8]
    4638:	b	4644 <PyInit__xxsubinterpreters@@Base+0x1c30>
    463c:	ldr	w8, [x25, #16]
    4640:	cbz	w8, 474c <PyInit__xxsubinterpreters@@Base+0x1d38>
    4644:	ldr	x8, [x20, #8]
    4648:	ldr	x0, [x8, #8]
    464c:	cbz	x0, 4684 <PyInit__xxsubinterpreters@@Base+0x1c70>
    4650:	ldr	x9, [x8, #16]
    4654:	ldr	x10, [x0, #8]
    4658:	cmp	x9, x0
    465c:	str	x10, [x8, #8]
    4660:	b.ne	4668 <PyInit__xxsubinterpreters@@Base+0x1c54>  // b.any
    4664:	str	xzr, [x8, #16]
    4668:	ldr	x9, [x8]
    466c:	sub	x9, x9, #0x1
    4670:	str	x9, [x8]
    4674:	ldr	x22, [x0]
    4678:	stp	xzr, xzr, [x0]
    467c:	bl	2590 <PyMem_Free@plt>
    4680:	cbnz	x22, 46a8 <PyInit__xxsubinterpreters@@Base+0x1c94>
    4684:	bl	2730 <PyErr_Occurred@plt>
    4688:	cbnz	x0, 46a4 <PyInit__xxsubinterpreters@@Base+0x1c90>
    468c:	ldr	x8, [x20, #32]
    4690:	cbz	x8, 46a4 <PyInit__xxsubinterpreters@@Base+0x1c90>
    4694:	mov	x22, xzr
    4698:	str	wzr, [x20, #24]
    469c:	b	46a8 <PyInit__xxsubinterpreters@@Base+0x1c94>
    46a0:	bl	2600 <PyErr_NoMemory@plt>
    46a4:	mov	x22, xzr
    46a8:	ldr	x0, [x20]
    46ac:	bl	27b0 <PyThread_release_lock@plt>
    46b0:	ldr	x8, [x20, #8]
    46b4:	ldr	x8, [x8]
    46b8:	cbnz	x8, 46f8 <PyInit__xxsubinterpreters@@Base+0x1ce4>
    46bc:	ldr	x8, [x20, #32]
    46c0:	cbz	x8, 46f8 <PyInit__xxsubinterpreters@@Base+0x1ce4>
    46c4:	ldr	x0, [x20]
    46c8:	ldr	x23, [x8]
    46cc:	mov	w1, #0x1                   	// #1
    46d0:	bl	2640 <PyThread_acquire_lock@plt>
    46d4:	ldr	x0, [x20, #32]
    46d8:	cbz	x0, 46e4 <PyInit__xxsubinterpreters@@Base+0x1cd0>
    46dc:	bl	2590 <PyMem_Free@plt>
    46e0:	str	xzr, [x20, #32]
    46e4:	ldr	x0, [x20]
    46e8:	bl	27b0 <PyThread_release_lock@plt>
    46ec:	mov	x0, x20
    46f0:	str	xzr, [x23, #8]
    46f4:	bl	306c <PyInit__xxsubinterpreters@@Base+0x658>
    46f8:	mov	x0, x21
    46fc:	bl	27b0 <PyThread_release_lock@plt>
    4700:	cbz	x22, 4728 <PyInit__xxsubinterpreters@@Base+0x1d14>
    4704:	mov	x0, x22
    4708:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    470c:	mov	x19, x0
    4710:	cbz	x0, 45d0 <PyInit__xxsubinterpreters@@Base+0x1bbc>
    4714:	mov	x0, x22
    4718:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    471c:	mov	x0, x22
    4720:	bl	2590 <PyMem_Free@plt>
    4724:	b	45d0 <PyInit__xxsubinterpreters@@Base+0x1bbc>
    4728:	bl	2730 <PyErr_Occurred@plt>
    472c:	cbnz	x0, 45cc <PyInit__xxsubinterpreters@@Base+0x1bb8>
    4730:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4734:	ldr	x0, [x8, #2384]
    4738:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    473c:	add	x1, x1, #0x58b
    4740:	mov	x2, x19
    4744:	bl	28c0 <PyErr_Format@plt>
    4748:	b	45cc <PyInit__xxsubinterpreters@@Base+0x1bb8>
    474c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4750:	ldr	x0, [x8, #2376]
    4754:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4758:	add	x1, x1, #0x564
    475c:	b	45fc <PyInit__xxsubinterpreters@@Base+0x1be8>
    4760:	sub	sp, sp, #0x60
    4764:	stp	x29, x30, [sp, #32]
    4768:	str	x23, [sp, #48]
    476c:	stp	x22, x21, [sp, #64]
    4770:	stp	x20, x19, [sp, #80]
    4774:	add	x29, sp, #0x20
    4778:	mov	x8, x2
    477c:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4780:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4784:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4788:	mov	x0, x1
    478c:	sub	x9, x29, #0xc
    4790:	add	x2, x2, #0x5a6
    4794:	add	x3, x3, #0x6a0
    4798:	add	x4, x4, #0xf2c
    479c:	add	x5, x29, #0x18
    47a0:	sub	x6, x29, #0x4
    47a4:	sub	x7, x29, #0x8
    47a8:	mov	x1, x8
    47ac:	stur	xzr, [x29, #-8]
    47b0:	stur	wzr, [x29, #-12]
    47b4:	str	x9, [sp]
    47b8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    47bc:	cbz	w0, 4854 <PyInit__xxsubinterpreters@@Base+0x1e40>
    47c0:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    47c4:	add	x20, x20, #0x960
    47c8:	ldr	x0, [x20]
    47cc:	ldr	x19, [x29, #24]
    47d0:	ldp	w22, w21, [x29, #-8]
    47d4:	ldur	w23, [x29, #-12]
    47d8:	mov	w1, #0x1                   	// #1
    47dc:	bl	2640 <PyThread_acquire_lock@plt>
    47e0:	ldr	x20, [x20, #8]
    47e4:	cbz	x20, 4800 <PyInit__xxsubinterpreters@@Base+0x1dec>
    47e8:	sub	w22, w21, w22
    47ec:	ldr	x8, [x20]
    47f0:	cmp	x8, x19
    47f4:	b.eq	4814 <PyInit__xxsubinterpreters@@Base+0x1e00>  // b.none
    47f8:	ldr	x20, [x20, #16]
    47fc:	cbnz	x20, 47ec <PyInit__xxsubinterpreters@@Base+0x1dd8>
    4800:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4804:	ldr	x0, [x8, #2360]
    4808:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    480c:	add	x1, x1, #0x22a
    4810:	b	4840 <PyInit__xxsubinterpreters@@Base+0x1e2c>
    4814:	ldr	x21, [x20, #8]
    4818:	cbz	x21, 4830 <PyInit__xxsubinterpreters@@Base+0x1e1c>
    481c:	cmp	w22, #0x1
    4820:	b.ne	4870 <PyInit__xxsubinterpreters@@Base+0x1e5c>  // b.any
    4824:	cbnz	w23, 4870 <PyInit__xxsubinterpreters@@Base+0x1e5c>
    4828:	ldr	x8, [x21, #32]
    482c:	cbz	x8, 4870 <PyInit__xxsubinterpreters@@Base+0x1e5c>
    4830:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4834:	ldr	x0, [x8, #2376]
    4838:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    483c:	add	x1, x1, #0x542
    4840:	mov	x2, x19
    4844:	bl	28c0 <PyErr_Format@plt>
    4848:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    484c:	ldr	x0, [x8, #2400]
    4850:	bl	27b0 <PyThread_release_lock@plt>
    4854:	mov	x0, xzr
    4858:	ldp	x20, x19, [sp, #80]
    485c:	ldp	x22, x21, [sp, #64]
    4860:	ldr	x23, [sp, #48]
    4864:	ldp	x29, x30, [sp, #32]
    4868:	add	sp, sp, #0x60
    486c:	ret
    4870:	ldr	x0, [x21]
    4874:	mov	w1, #0x1                   	// #1
    4878:	bl	2640 <PyThread_acquire_lock@plt>
    487c:	ldr	w8, [x21, #24]
    4880:	cbz	w8, 4908 <PyInit__xxsubinterpreters@@Base+0x1ef4>
    4884:	cbz	w23, 491c <PyInit__xxsubinterpreters@@Base+0x1f08>
    4888:	ldr	x8, [x21, #16]
    488c:	str	wzr, [x21, #24]
    4890:	ldr	x9, [x8, #16]
    4894:	cbz	x9, 48b0 <PyInit__xxsubinterpreters@@Base+0x1e9c>
    4898:	ldr	x10, [x8]
    489c:	str	wzr, [x9, #16]
    48a0:	ldr	x9, [x9]
    48a4:	sub	x10, x10, #0x1
    48a8:	cbnz	x9, 489c <PyInit__xxsubinterpreters@@Base+0x1e88>
    48ac:	str	x10, [x8]
    48b0:	ldr	x9, [x8, #24]
    48b4:	cbz	x9, 48d0 <PyInit__xxsubinterpreters@@Base+0x1ebc>
    48b8:	ldr	x10, [x8, #8]
    48bc:	str	wzr, [x9, #16]
    48c0:	ldr	x9, [x9]
    48c4:	sub	x10, x10, #0x1
    48c8:	cbnz	x9, 48bc <PyInit__xxsubinterpreters@@Base+0x1ea8>
    48cc:	str	x10, [x8, #8]
    48d0:	ldr	x0, [x21]
    48d4:	bl	27b0 <PyThread_release_lock@plt>
    48d8:	ldr	x0, [x20, #8]
    48dc:	bl	306c <PyInit__xxsubinterpreters@@Base+0x658>
    48e0:	str	xzr, [x20, #8]
    48e4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    48e8:	ldr	x0, [x8, #2400]
    48ec:	bl	27b0 <PyThread_release_lock@plt>
    48f0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    48f4:	ldr	x0, [x0, #4048]
    48f8:	ldr	x8, [x0]
    48fc:	add	x8, x8, #0x1
    4900:	str	x8, [x0]
    4904:	b	4858 <PyInit__xxsubinterpreters@@Base+0x1e44>
    4908:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    490c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4910:	add	x1, x1, #0x564
    4914:	add	x8, x8, #0x948
    4918:	b	493c <PyInit__xxsubinterpreters@@Base+0x1f28>
    491c:	ldr	x8, [x21, #8]
    4920:	ldr	x8, [x8]
    4924:	cmp	x8, #0x0
    4928:	b.le	49b0 <PyInit__xxsubinterpreters@@Base+0x1f9c>
    492c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4930:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4934:	add	x1, x1, #0x5bc
    4938:	add	x8, x8, #0x958
    493c:	ldr	x0, [x8]
    4940:	bl	2670 <PyErr_SetString@plt>
    4944:	ldr	x0, [x21]
    4948:	bl	27b0 <PyThread_release_lock@plt>
    494c:	cmp	w22, #0x1
    4950:	b.ne	4848 <PyInit__xxsubinterpreters@@Base+0x1e34>  // b.any
    4954:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4958:	ldr	x0, [x8, #2392]
    495c:	bl	26a0 <PyErr_ExceptionMatches@plt>
    4960:	cbz	w0, 4848 <PyInit__xxsubinterpreters@@Base+0x1e34>
    4964:	ldr	x8, [x20, #8]
    4968:	ldr	x8, [x8, #32]
    496c:	cbnz	x8, 4830 <PyInit__xxsubinterpreters@@Base+0x1e1c>
    4970:	bl	26f0 <PyErr_Clear@plt>
    4974:	ldr	x19, [x20, #8]
    4978:	cbz	x19, 48e4 <PyInit__xxsubinterpreters@@Base+0x1ed0>
    497c:	ldr	x0, [x19]
    4980:	mov	w1, #0x1                   	// #1
    4984:	bl	2640 <PyThread_acquire_lock@plt>
    4988:	ldr	x8, [x19, #32]
    498c:	cbz	x8, 49f8 <PyInit__xxsubinterpreters@@Base+0x1fe4>
    4990:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4994:	ldr	x0, [x8, #2376]
    4998:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    499c:	add	x1, x1, #0x555
    49a0:	bl	2670 <PyErr_SetString@plt>
    49a4:	ldr	x0, [x19]
    49a8:	bl	27b0 <PyThread_release_lock@plt>
    49ac:	b	4848 <PyInit__xxsubinterpreters@@Base+0x1e34>
    49b0:	ldr	x8, [x21, #16]
    49b4:	str	wzr, [x21, #24]
    49b8:	ldr	x9, [x8, #16]
    49bc:	cbz	x9, 49d8 <PyInit__xxsubinterpreters@@Base+0x1fc4>
    49c0:	ldr	x10, [x8]
    49c4:	str	wzr, [x9, #16]
    49c8:	ldr	x9, [x9]
    49cc:	sub	x10, x10, #0x1
    49d0:	cbnz	x9, 49c4 <PyInit__xxsubinterpreters@@Base+0x1fb0>
    49d4:	str	x10, [x8]
    49d8:	ldr	x9, [x8, #24]
    49dc:	cbz	x9, 48d0 <PyInit__xxsubinterpreters@@Base+0x1ebc>
    49e0:	ldr	x10, [x8, #8]
    49e4:	str	wzr, [x9, #16]
    49e8:	ldr	x9, [x9]
    49ec:	sub	x10, x10, #0x1
    49f0:	cbnz	x9, 49e4 <PyInit__xxsubinterpreters@@Base+0x1fd0>
    49f4:	b	48cc <PyInit__xxsubinterpreters@@Base+0x1eb8>
    49f8:	mov	w0, #0x8                   	// #8
    49fc:	bl	2910 <PyMem_Malloc@plt>
    4a00:	str	x0, [x19, #32]
    4a04:	cbz	x0, 49a4 <PyInit__xxsubinterpreters@@Base+0x1f90>
    4a08:	str	x20, [x0]
    4a0c:	ldr	x0, [x19]
    4a10:	bl	27b0 <PyThread_release_lock@plt>
    4a14:	b	48e4 <PyInit__xxsubinterpreters@@Base+0x1ed0>
    4a18:	sub	sp, sp, #0x70
    4a1c:	stp	x29, x30, [sp, #32]
    4a20:	str	x25, [sp, #48]
    4a24:	stp	x24, x23, [sp, #64]
    4a28:	stp	x22, x21, [sp, #80]
    4a2c:	stp	x20, x19, [sp, #96]
    4a30:	add	x29, sp, #0x20
    4a34:	mov	x8, x2
    4a38:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4a3c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a40:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4a44:	mov	x0, x1
    4a48:	sub	x9, x29, #0xc
    4a4c:	add	x2, x2, #0x5ec
    4a50:	add	x3, x3, #0x6c8
    4a54:	add	x4, x4, #0xf2c
    4a58:	add	x5, x29, #0x18
    4a5c:	sub	x6, x29, #0x4
    4a60:	sub	x7, x29, #0x8
    4a64:	mov	x1, x8
    4a68:	stur	xzr, [x29, #-8]
    4a6c:	stur	wzr, [x29, #-12]
    4a70:	str	x9, [sp]
    4a74:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4a78:	cbz	w0, 4b98 <PyInit__xxsubinterpreters@@Base+0x2184>
    4a7c:	ldp	w23, w24, [x29, #-8]
    4a80:	orr	w8, w23, w24
    4a84:	cbnz	w8, 4a94 <PyInit__xxsubinterpreters@@Base+0x2080>
    4a88:	mov	w23, #0x1                   	// #1
    4a8c:	mov	w24, #0x1                   	// #1
    4a90:	stp	w23, w23, [x29, #-8]
    4a94:	ldr	x19, [x29, #24]
    4a98:	bl	2800 <_PyInterpreterState_Get@plt>
    4a9c:	cbz	x0, 4b9c <PyInit__xxsubinterpreters@@Base+0x2188>
    4aa0:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4aa4:	add	x21, x21, #0x938
    4aa8:	mov	x20, x0
    4aac:	ldr	x0, [x21, #40]
    4ab0:	mov	w1, #0x1                   	// #1
    4ab4:	bl	2640 <PyThread_acquire_lock@plt>
    4ab8:	ldr	x8, [x21, #48]
    4abc:	cbz	x8, 4ae8 <PyInit__xxsubinterpreters@@Base+0x20d4>
    4ac0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4ac4:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4ac8:	add	x1, x1, #0x22a
    4acc:	add	x21, x21, #0x938
    4ad0:	ldr	x9, [x8]
    4ad4:	cmp	x9, x19
    4ad8:	b.eq	4af4 <PyInit__xxsubinterpreters@@Base+0x20e0>  // b.none
    4adc:	ldr	x8, [x8, #16]
    4ae0:	cbnz	x8, 4ad0 <PyInit__xxsubinterpreters@@Base+0x20bc>
    4ae4:	b	4b80 <PyInit__xxsubinterpreters@@Base+0x216c>
    4ae8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4aec:	add	x1, x1, #0x22a
    4af0:	b	4b80 <PyInit__xxsubinterpreters@@Base+0x216c>
    4af4:	ldr	x21, [x8, #8]
    4af8:	cbz	x21, 4b70 <PyInit__xxsubinterpreters@@Base+0x215c>
    4afc:	ldr	w8, [x21, #24]
    4b00:	cbz	w8, 4b70 <PyInit__xxsubinterpreters@@Base+0x215c>
    4b04:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b08:	ldr	x19, [x8, #2400]
    4b0c:	cbnz	x19, 4b18 <PyInit__xxsubinterpreters@@Base+0x2104>
    4b10:	mov	x0, x19
    4b14:	bl	27b0 <PyThread_release_lock@plt>
    4b18:	mov	x0, x20
    4b1c:	bl	2680 <PyInterpreterState_GetID@plt>
    4b20:	ldr	x8, [x21]
    4b24:	mov	x20, x0
    4b28:	mov	w1, #0x1                   	// #1
    4b2c:	mov	x0, x8
    4b30:	bl	2640 <PyThread_acquire_lock@plt>
    4b34:	ldr	w8, [x21, #24]
    4b38:	cbz	w8, 4bb8 <PyInit__xxsubinterpreters@@Base+0x21a4>
    4b3c:	ldr	x22, [x21, #16]
    4b40:	sub	w23, w24, w23
    4b44:	tbnz	w23, #31, 4c24 <PyInit__xxsubinterpreters@@Base+0x2210>
    4b48:	mov	x25, x22
    4b4c:	ldr	x8, [x25, #16]!
    4b50:	cbz	x8, 4bd0 <PyInit__xxsubinterpreters@@Base+0x21bc>
    4b54:	mov	x24, x8
    4b58:	ldr	x8, [x8, #8]
    4b5c:	cmp	x8, x20
    4b60:	b.eq	4c0c <PyInit__xxsubinterpreters@@Base+0x21f8>  // b.none
    4b64:	ldr	x8, [x24]
    4b68:	cbnz	x8, 4b54 <PyInit__xxsubinterpreters@@Base+0x2140>
    4b6c:	b	4bd4 <PyInit__xxsubinterpreters@@Base+0x21c0>
    4b70:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4b74:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b78:	add	x1, x1, #0x542
    4b7c:	add	x21, x21, #0x948
    4b80:	ldr	x0, [x21]
    4b84:	mov	x2, x19
    4b88:	bl	28c0 <PyErr_Format@plt>
    4b8c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b90:	ldr	x0, [x8, #2400]
    4b94:	bl	27b0 <PyThread_release_lock@plt>
    4b98:	mov	x0, xzr
    4b9c:	ldp	x20, x19, [sp, #96]
    4ba0:	ldp	x22, x21, [sp, #80]
    4ba4:	ldp	x24, x23, [sp, #64]
    4ba8:	ldr	x25, [sp, #48]
    4bac:	ldp	x29, x30, [sp, #32]
    4bb0:	add	sp, sp, #0x70
    4bb4:	ret
    4bb8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4bbc:	ldr	x0, [x8, #2376]
    4bc0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4bc4:	add	x1, x1, #0x564
    4bc8:	bl	2670 <PyErr_SetString@plt>
    4bcc:	b	4c8c <PyInit__xxsubinterpreters@@Base+0x2278>
    4bd0:	mov	x24, xzr
    4bd4:	mov	w0, #0x18                  	// #24
    4bd8:	bl	2910 <PyMem_Malloc@plt>
    4bdc:	cbz	x0, 4c88 <PyInit__xxsubinterpreters@@Base+0x2274>
    4be0:	mov	w8, #0x1                   	// #1
    4be4:	cmp	x24, #0x0
    4be8:	str	w8, [x0, #16]
    4bec:	csel	x8, x25, x24, eq  // eq = none
    4bf0:	stp	xzr, x20, [x0]
    4bf4:	str	x0, [x8]
    4bf8:	ldr	x8, [x22]
    4bfc:	mov	x24, x0
    4c00:	add	x8, x8, #0x1
    4c04:	str	x8, [x22]
    4c08:	b	4c10 <PyInit__xxsubinterpreters@@Base+0x21fc>
    4c0c:	ldr	x8, [x22]
    4c10:	sub	x8, x8, #0x1
    4c14:	cmp	w23, #0x0
    4c18:	str	wzr, [x24, #16]
    4c1c:	str	x8, [x22]
    4c20:	b.gt	4cac <PyInit__xxsubinterpreters@@Base+0x2298>
    4c24:	mov	x24, x22
    4c28:	ldr	x8, [x24, #24]!
    4c2c:	cbz	x8, 4c4c <PyInit__xxsubinterpreters@@Base+0x2238>
    4c30:	mov	x23, x8
    4c34:	ldr	x8, [x8, #8]
    4c38:	cmp	x8, x20
    4c3c:	b.eq	4c9c <PyInit__xxsubinterpreters@@Base+0x2288>  // b.none
    4c40:	ldr	x8, [x23]
    4c44:	cbnz	x8, 4c30 <PyInit__xxsubinterpreters@@Base+0x221c>
    4c48:	b	4c50 <PyInit__xxsubinterpreters@@Base+0x223c>
    4c4c:	mov	x23, xzr
    4c50:	mov	w0, #0x18                  	// #24
    4c54:	bl	2910 <PyMem_Malloc@plt>
    4c58:	cbz	x0, 4c88 <PyInit__xxsubinterpreters@@Base+0x2274>
    4c5c:	mov	w8, #0x1                   	// #1
    4c60:	cmp	x23, #0x0
    4c64:	str	w8, [x0, #16]
    4c68:	csel	x8, x24, x23, eq  // eq = none
    4c6c:	stp	xzr, x20, [x0]
    4c70:	str	x0, [x8]
    4c74:	ldr	x8, [x22, #8]
    4c78:	mov	x23, x0
    4c7c:	add	x8, x8, #0x1
    4c80:	str	x8, [x22, #8]
    4c84:	b	4ca0 <PyInit__xxsubinterpreters@@Base+0x228c>
    4c88:	bl	2600 <PyErr_NoMemory@plt>
    4c8c:	ldr	x0, [x21]
    4c90:	bl	27b0 <PyThread_release_lock@plt>
    4c94:	mov	x0, x19
    4c98:	b	4b94 <PyInit__xxsubinterpreters@@Base+0x2180>
    4c9c:	ldr	x8, [x22, #8]
    4ca0:	sub	x8, x8, #0x1
    4ca4:	str	wzr, [x23, #16]
    4ca8:	str	x8, [x22, #8]
    4cac:	ldr	x8, [x21, #16]
    4cb0:	ldr	x9, [x8]
    4cb4:	cbnz	x9, 4cc0 <PyInit__xxsubinterpreters@@Base+0x22ac>
    4cb8:	ldr	x9, [x8, #8]
    4cbc:	cbz	x9, 4cf0 <PyInit__xxsubinterpreters@@Base+0x22dc>
    4cc0:	mov	w8, #0x1                   	// #1
    4cc4:	ldr	x0, [x21]
    4cc8:	str	w8, [x21, #24]
    4ccc:	bl	27b0 <PyThread_release_lock@plt>
    4cd0:	mov	x0, x19
    4cd4:	bl	27b0 <PyThread_release_lock@plt>
    4cd8:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4cdc:	ldr	x0, [x0, #4048]
    4ce0:	ldr	x8, [x0]
    4ce4:	add	x8, x8, #0x1
    4ce8:	str	x8, [x0]
    4cec:	b	4b9c <PyInit__xxsubinterpreters@@Base+0x2188>
    4cf0:	ldr	x9, [x8, #16]
    4cf4:	cbnz	x9, 4d00 <PyInit__xxsubinterpreters@@Base+0x22ec>
    4cf8:	ldr	x8, [x8, #24]
    4cfc:	cbz	x8, 4cc0 <PyInit__xxsubinterpreters@@Base+0x22ac>
    4d00:	mov	w8, wzr
    4d04:	b	4cc4 <PyInit__xxsubinterpreters@@Base+0x22b0>
    4d08:	sub	sp, sp, #0x40
    4d0c:	stp	x29, x30, [sp, #48]
    4d10:	add	x29, sp, #0x30
    4d14:	mov	x8, x2
    4d18:	mov	w9, #0xffffffff            	// #-1
    4d1c:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4d20:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4d24:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4d28:	mov	x0, x1
    4d2c:	stp	wzr, w9, [x29, #-20]
    4d30:	stur	w9, [x29, #-12]
    4d34:	add	x9, sp, #0x18
    4d38:	sub	x10, x29, #0x14
    4d3c:	add	x2, x2, #0x60d
    4d40:	add	x3, x3, #0x6f0
    4d44:	add	x4, x4, #0xf2c
    4d48:	sub	x5, x29, #0x8
    4d4c:	sub	x6, x29, #0xc
    4d50:	sub	x7, x29, #0x10
    4d54:	mov	x1, x8
    4d58:	str	wzr, [sp, #24]
    4d5c:	stp	x10, x9, [sp]
    4d60:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4d64:	cbz	w0, 4d8c <PyInit__xxsubinterpreters@@Base+0x2378>
    4d68:	ldp	w8, w9, [x29, #-16]
    4d6c:	orr	w10, w8, w9
    4d70:	cbz	w10, 4d9c <PyInit__xxsubinterpreters@@Base+0x2388>
    4d74:	cmp	w9, #0x1
    4d78:	b.ne	4dc4 <PyInit__xxsubinterpreters@@Base+0x23b0>  // b.any
    4d7c:	add	w8, w8, #0x1
    4d80:	cmp	w8, #0x2
    4d84:	cset	w2, cc  // cc = lo, ul, last
    4d88:	b	4dcc <PyInit__xxsubinterpreters@@Base+0x23b8>
    4d8c:	mov	x0, xzr
    4d90:	ldp	x29, x30, [sp, #48]
    4d94:	add	sp, sp, #0x40
    4d98:	ret
    4d9c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4da0:	ldr	x8, [x8, #4016]
    4da4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4da8:	add	x1, x1, #0x628
    4dac:	ldr	x0, [x8]
    4db0:	bl	2670 <PyErr_SetString@plt>
    4db4:	mov	x0, xzr
    4db8:	ldp	x29, x30, [sp, #48]
    4dbc:	add	sp, sp, #0x40
    4dc0:	ret
    4dc4:	cmp	w8, #0x1
    4dc8:	csetm	w2, eq  // eq = none
    4dcc:	ldur	x1, [x29, #-8]
    4dd0:	ldur	w4, [x29, #-20]
    4dd4:	ldr	w5, [sp, #24]
    4dd8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4ddc:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4de0:	add	x0, x0, #0x788
    4de4:	add	x3, x3, #0x960
    4de8:	bl	31d0 <PyInit__xxsubinterpreters@@Base+0x7bc>
    4dec:	ldp	x29, x30, [sp, #48]
    4df0:	add	sp, sp, #0x40
    4df4:	ret
    4df8:	stp	x29, x30, [sp, #-32]!
    4dfc:	stp	x20, x19, [sp, #16]
    4e00:	mov	x29, sp
    4e04:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4e08:	add	x19, x19, #0x960
    4e0c:	ldr	x8, [x19]
    4e10:	mov	x20, x0
    4e14:	mov	w1, #0x1                   	// #1
    4e18:	mov	x0, x8
    4e1c:	bl	2640 <PyThread_acquire_lock@plt>
    4e20:	ldr	x19, [x19, #8]
    4e24:	cbz	x19, 4ed4 <PyInit__xxsubinterpreters@@Base+0x24c0>
    4e28:	ldr	x8, [x19]
    4e2c:	cmp	x8, x20
    4e30:	b.ne	4e44 <PyInit__xxsubinterpreters@@Base+0x2430>  // b.any
    4e34:	ldr	x10, [x19, #16]
    4e38:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4e3c:	str	x10, [x8, #2408]
    4e40:	b	4e74 <PyInit__xxsubinterpreters@@Base+0x2460>
    4e44:	mov	x8, x19
    4e48:	mov	x9, x8
    4e4c:	ldr	x8, [x8, #16]
    4e50:	cbz	x8, 4ed4 <PyInit__xxsubinterpreters@@Base+0x24c0>
    4e54:	ldr	x10, [x8]
    4e58:	cmp	x10, x20
    4e5c:	b.ne	4e48 <PyInit__xxsubinterpreters@@Base+0x2434>  // b.any
    4e60:	ldr	x10, [x8, #16]
    4e64:	cmp	x19, x8
    4e68:	b.eq	4e38 <PyInit__xxsubinterpreters@@Base+0x2424>  // b.none
    4e6c:	mov	x19, x8
    4e70:	str	x10, [x9, #16]
    4e74:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4e78:	ldr	x9, [x8, #2416]
    4e7c:	sub	x9, x9, #0x1
    4e80:	str	x9, [x8, #2416]
    4e84:	ldr	x20, [x19, #8]
    4e88:	cbz	x20, 4f08 <PyInit__xxsubinterpreters@@Base+0x24f4>
    4e8c:	ldr	x0, [x20]
    4e90:	mov	w1, #0x1                   	// #1
    4e94:	bl	2640 <PyThread_acquire_lock@plt>
    4e98:	ldr	x0, [x20, #32]
    4e9c:	cbz	x0, 4ea8 <PyInit__xxsubinterpreters@@Base+0x2494>
    4ea0:	bl	2590 <PyMem_Free@plt>
    4ea4:	str	xzr, [x20, #32]
    4ea8:	ldr	x0, [x20]
    4eac:	bl	27b0 <PyThread_release_lock@plt>
    4eb0:	mov	x0, x19
    4eb4:	bl	2590 <PyMem_Free@plt>
    4eb8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4ebc:	ldr	x0, [x8, #2400]
    4ec0:	bl	27b0 <PyThread_release_lock@plt>
    4ec4:	cbz	x20, 4f1c <PyInit__xxsubinterpreters@@Base+0x2508>
    4ec8:	mov	x0, x20
    4ecc:	bl	306c <PyInit__xxsubinterpreters@@Base+0x658>
    4ed0:	b	4f1c <PyInit__xxsubinterpreters@@Base+0x2508>
    4ed4:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4ed8:	add	x19, x19, #0x938
    4edc:	ldr	x0, [x19]
    4ee0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4ee4:	add	x1, x1, #0x22a
    4ee8:	mov	x2, x20
    4eec:	bl	28c0 <PyErr_Format@plt>
    4ef0:	ldr	x0, [x19, #40]
    4ef4:	bl	27b0 <PyThread_release_lock@plt>
    4ef8:	mov	w0, #0xffffffff            	// #-1
    4efc:	ldp	x20, x19, [sp, #16]
    4f00:	ldp	x29, x30, [sp], #32
    4f04:	ret
    4f08:	mov	x0, x19
    4f0c:	bl	2590 <PyMem_Free@plt>
    4f10:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4f14:	ldr	x0, [x8, #2400]
    4f18:	bl	27b0 <PyThread_release_lock@plt>
    4f1c:	mov	w0, wzr
    4f20:	ldp	x20, x19, [sp, #16]
    4f24:	ldp	x29, x30, [sp], #32
    4f28:	ret
    4f2c:	stp	x29, x30, [sp, #-32]!
    4f30:	stp	x20, x19, [sp, #16]
    4f34:	mov	x29, sp
    4f38:	mov	x19, x0
    4f3c:	ldr	x0, [x0, #8]
    4f40:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4f44:	add	x8, x8, #0x788
    4f48:	mov	x20, x1
    4f4c:	cmp	x0, x8
    4f50:	b.eq	4f64 <PyInit__xxsubinterpreters@@Base+0x2550>  // b.none
    4f54:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4f58:	add	x1, x1, #0x788
    4f5c:	bl	28a0 <PyType_IsSubtype@plt>
    4f60:	cbz	w0, 4f7c <PyInit__xxsubinterpreters@@Base+0x2568>
    4f64:	ldr	x0, [x19, #16]
    4f68:	str	x0, [x20]
    4f6c:	mov	w0, #0x1                   	// #1
    4f70:	ldp	x20, x19, [sp, #16]
    4f74:	ldp	x29, x30, [sp], #32
    4f78:	ret
    4f7c:	ldr	x8, [x19, #8]
    4f80:	ldr	x9, [x8, #96]
    4f84:	cbz	x9, 4fa8 <PyInit__xxsubinterpreters@@Base+0x2594>
    4f88:	ldr	x9, [x9, #264]
    4f8c:	cbz	x9, 4fa8 <PyInit__xxsubinterpreters@@Base+0x2594>
    4f90:	mov	x0, x19
    4f94:	bl	2890 <PyLong_AsLongLong@plt>
    4f98:	cmn	x0, #0x1
    4f9c:	b.eq	4fd4 <PyInit__xxsubinterpreters@@Base+0x25c0>  // b.none
    4fa0:	tbz	x0, #63, 4f68 <PyInit__xxsubinterpreters@@Base+0x2554>
    4fa4:	b	4fec <PyInit__xxsubinterpreters@@Base+0x25d8>
    4fa8:	adrp	x9, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4fac:	ldr	x9, [x9, #4024]
    4fb0:	ldr	x2, [x8, #24]
    4fb4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4fb8:	add	x1, x1, #0x4f4
    4fbc:	ldr	x0, [x9]
    4fc0:	bl	28c0 <PyErr_Format@plt>
    4fc4:	mov	w0, wzr
    4fc8:	ldp	x20, x19, [sp, #16]
    4fcc:	ldp	x29, x30, [sp], #32
    4fd0:	ret
    4fd4:	bl	2730 <PyErr_Occurred@plt>
    4fd8:	cbz	x0, 4fec <PyInit__xxsubinterpreters@@Base+0x25d8>
    4fdc:	mov	w0, wzr
    4fe0:	ldp	x20, x19, [sp, #16]
    4fe4:	ldp	x29, x30, [sp], #32
    4fe8:	ret
    4fec:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4ff0:	ldr	x8, [x8, #4016]
    4ff4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4ff8:	add	x1, x1, #0x4c6
    4ffc:	mov	x2, x19
    5000:	ldr	x0, [x8]
    5004:	b	4fc0 <PyInit__xxsubinterpreters@@Base+0x25ac>
    5008:	stp	x29, x30, [sp, #-48]!
    500c:	str	x21, [sp, #16]
    5010:	stp	x20, x19, [sp, #32]
    5014:	mov	x29, sp
    5018:	ldr	x20, [x0]
    501c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5020:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5024:	add	x0, x0, #0x788
    5028:	ldr	x1, [x20]
    502c:	ldr	w2, [x20, #8]
    5030:	add	x3, x3, #0x960
    5034:	mov	w4, wzr
    5038:	mov	w5, wzr
    503c:	bl	31d0 <PyInit__xxsubinterpreters@@Base+0x7bc>
    5040:	ldr	w21, [x20, #8]
    5044:	mov	x19, x0
    5048:	cbz	w21, 511c <PyInit__xxsubinterpreters@@Base+0x2708>
    504c:	ldr	w8, [x20, #12]
    5050:	cbz	w8, 511c <PyInit__xxsubinterpreters@@Base+0x2708>
    5054:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5058:	add	x0, x0, #0x739
    505c:	bl	2750 <PyImport_ImportModule@plt>
    5060:	mov	x20, x0
    5064:	cbnz	x0, 5080 <PyInit__xxsubinterpreters@@Base+0x266c>
    5068:	bl	26f0 <PyErr_Clear@plt>
    506c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5070:	add	x0, x0, #0x72c
    5074:	bl	2750 <PyImport_ImportModule@plt>
    5078:	mov	x20, x0
    507c:	cbz	x0, 5118 <PyInit__xxsubinterpreters@@Base+0x2704>
    5080:	adrp	x8, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5084:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5088:	add	x8, x8, #0x752
    508c:	add	x9, x9, #0x746
    5090:	cmn	w21, #0x1
    5094:	csel	x1, x9, x8, eq  // eq = none
    5098:	mov	x0, x20
    509c:	bl	25b0 <PyObject_GetAttrString@plt>
    50a0:	ldr	x8, [x20]
    50a4:	mov	x21, x0
    50a8:	subs	x8, x8, #0x1
    50ac:	str	x8, [x20]
    50b0:	b.eq	50bc <PyInit__xxsubinterpreters@@Base+0x26a8>  // b.none
    50b4:	cbnz	x21, 50c8 <PyInit__xxsubinterpreters@@Base+0x26b4>
    50b8:	b	5118 <PyInit__xxsubinterpreters@@Base+0x2704>
    50bc:	mov	x0, x20
    50c0:	bl	25e0 <_Py_Dealloc@plt>
    50c4:	cbz	x21, 5118 <PyInit__xxsubinterpreters@@Base+0x2704>
    50c8:	mov	x0, x21
    50cc:	mov	x1, x19
    50d0:	mov	x2, xzr
    50d4:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    50d8:	ldr	x8, [x21]
    50dc:	mov	x20, x0
    50e0:	subs	x8, x8, #0x1
    50e4:	str	x8, [x21]
    50e8:	b.eq	510c <PyInit__xxsubinterpreters@@Base+0x26f8>  // b.none
    50ec:	cbz	x20, 5118 <PyInit__xxsubinterpreters@@Base+0x2704>
    50f0:	ldr	x8, [x19]
    50f4:	subs	x8, x8, #0x1
    50f8:	str	x8, [x19]
    50fc:	b.ne	5120 <PyInit__xxsubinterpreters@@Base+0x270c>  // b.any
    5100:	mov	x0, x19
    5104:	bl	25e0 <_Py_Dealloc@plt>
    5108:	b	5120 <PyInit__xxsubinterpreters@@Base+0x270c>
    510c:	mov	x0, x21
    5110:	bl	25e0 <_Py_Dealloc@plt>
    5114:	cbnz	x20, 50f0 <PyInit__xxsubinterpreters@@Base+0x26dc>
    5118:	bl	26f0 <PyErr_Clear@plt>
    511c:	mov	x20, x19
    5120:	mov	x0, x20
    5124:	ldp	x20, x19, [sp, #32]
    5128:	ldr	x21, [sp, #16]
    512c:	ldp	x29, x30, [sp], #48
    5130:	ret

Disassembly of section .fini:

0000000000005134 <.fini>:
    5134:	stp	x29, x30, [sp, #-16]!
    5138:	mov	x29, sp
    513c:	ldp	x29, x30, [sp], #16
    5140:	ret
