
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_rfc2268.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x3d0>:
   0:	ldrb	w5, [x2, #1]
   4:	mov	x9, x0
   8:	ldrb	w3, [x2]
   c:	mov	w10, #0x0                   	// #0
  10:	ldrb	w4, [x2, #3]
  14:	orr	w8, w3, w5, lsl #8
  18:	ldrb	w3, [x2, #2]
  1c:	ldrb	w5, [x2, #5]
  20:	orr	w3, w3, w4, lsl #8
  24:	ldrb	w4, [x2, #4]
  28:	orr	w4, w4, w5, lsl #8
  2c:	ldrb	w5, [x2, #7]
  30:	ldrb	w2, [x2, #6]
  34:	orr	w2, w2, w5, lsl #8
  38:	sxth	w14, w2
  3c:	ldrh	w7, [x9]
  40:	bic	w5, w3, w14
  44:	and	w6, w4, w2
  48:	add	w5, w8, w5
  4c:	add	w6, w6, w7
  50:	cmp	w10, #0x4
  54:	add	w5, w6, w5, uxth
  58:	ldrh	w6, [x9, #2]
  5c:	ccmp	w10, #0xa, #0x4, ne  // ne = any
  60:	ubfiz	w7, w5, #1, #16
  64:	ubfx	x5, x5, #15, #1
  68:	orr	w7, w7, w5
  6c:	add	w3, w3, w6
  70:	and	w5, w7, w2
  74:	ldrh	w6, [x9, #4]
  78:	sxth	w13, w7
  7c:	and	w8, w7, #0xffff
  80:	bic	w12, w4, w13
  84:	add	w4, w4, w6
  88:	add	w12, w12, w5
  8c:	ldrh	w5, [x9, #6]
  90:	add	w3, w12, w3, uxth
  94:	add	w2, w2, w5
  98:	ubfiz	w12, w3, #2, #16
  9c:	ubfx	x3, x3, #14, #2
  a0:	orr	w3, w12, w3
  a4:	sxth	w11, w3
  a8:	and	w3, w3, #0xffff
  ac:	bic	w11, w14, w11
  b0:	and	w7, w7, w3
  b4:	add	w7, w11, w7
  b8:	add	w4, w7, w4, uxth
  bc:	ubfiz	w6, w4, #3, #16
  c0:	ubfx	x4, x4, #13, #3
  c4:	orr	w6, w6, w4
  c8:	and	w4, w6, #0xffff
  cc:	sxth	w7, w6
  d0:	and	w6, w6, w3
  d4:	bic	w5, w13, w7
  d8:	add	w6, w5, w6
  dc:	add	w5, w6, w2, uxth
  e0:	ubfx	x2, x5, #11, #5
  e4:	ubfiz	w5, w5, #5, #11
  e8:	orr	w2, w5, w2
  ec:	b.ne	130 <grub_mod_init-0x2a0>  // b.any
  f0:	and	x5, x2, #0x3f
  f4:	ldrh	w5, [x0, x5, lsl #1]
  f8:	add	w5, w8, w5
  fc:	and	w8, w5, #0xffff
 100:	and	x5, x5, #0x3f
 104:	ldrh	w5, [x0, x5, lsl #1]
 108:	add	w5, w3, w5
 10c:	and	w3, w5, #0xffff
 110:	and	x5, x5, #0x3f
 114:	ldrh	w5, [x0, x5, lsl #1]
 118:	add	w5, w4, w5
 11c:	and	w4, w5, #0xffff
 120:	and	x5, x5, #0x3f
 124:	ldrh	w5, [x0, x5, lsl #1]
 128:	add	w2, w2, w5
 12c:	and	w2, w2, #0xffff
 130:	add	w10, w10, #0x1
 134:	add	x9, x9, #0x8
 138:	cmp	w10, #0x10
 13c:	b.ne	38 <grub_mod_init-0x398>  // b.any
 140:	strh	w8, [x1]
 144:	strh	w3, [x1, #2]
 148:	strh	w4, [x1, #4]
 14c:	strh	w2, [x1, #6]
 150:	ret
 154:	ldrb	w3, [x2]
 158:	add	x8, x0, #0x78
 15c:	ldrb	w10, [x2, #1]
 160:	mov	w9, #0xf                   	// #15
 164:	ldrb	w4, [x2, #3]
 168:	ldrb	w5, [x2, #5]
 16c:	orr	w10, w3, w10, lsl #8
 170:	ldrb	w3, [x2, #2]
 174:	ldrb	w11, [x2, #7]
 178:	orr	w7, w3, w4, lsl #8
 17c:	ldrb	w3, [x2, #4]
 180:	ldrb	w2, [x2, #6]
 184:	orr	w6, w3, w5, lsl #8
 188:	orr	w11, w2, w11, lsl #8
 18c:	lsl	w2, w11, #11
 190:	sxth	w3, w10
 194:	orr	w2, w2, w11, lsr #5
 198:	bic	w4, w3, w6
 19c:	ldrh	w5, [x8, #6]
 1a0:	cmp	w9, #0x5
 1a4:	sxth	w2, w2
 1a8:	ccmp	w9, #0xb, #0x4, ne  // ne = any
 1ac:	sub	w2, w2, w4
 1b0:	and	w4, w7, w6
 1b4:	add	w4, w4, w5
 1b8:	and	w2, w2, #0xffff
 1bc:	sub	w2, w2, w4
 1c0:	lsl	w5, w6, #13
 1c4:	orr	w5, w5, w6, lsr #3
 1c8:	ldrh	w6, [x8, #4]
 1cc:	sxth	w12, w2
 1d0:	and	w11, w2, #0xffff
 1d4:	bic	w4, w12, w7
 1d8:	sxth	w5, w5
 1dc:	sub	w5, w5, w4
 1e0:	and	w4, w10, w7
 1e4:	add	w4, w4, w6
 1e8:	and	w5, w5, #0xffff
 1ec:	sub	w5, w5, w4
 1f0:	lsl	w4, w7, #14
 1f4:	orr	w4, w4, w7, lsr #2
 1f8:	and	w6, w5, #0xffff
 1fc:	ldrh	w5, [x8, #2]
 200:	bic	w3, w6, w3
 204:	sxth	w4, w4
 208:	sub	w4, w4, w5
 20c:	and	w5, w2, w10
 210:	add	w3, w3, w5
 214:	and	w4, w4, #0xffff
 218:	sub	w4, w4, w3
 21c:	lsl	w3, w10, #15
 220:	orr	w3, w3, w10, lsr #1
 224:	and	w7, w4, #0xffff
 228:	ldrh	w4, [x8]
 22c:	bic	w12, w7, w12
 230:	sxth	w3, w3
 234:	and	w2, w2, w6
 238:	sub	w3, w3, w4
 23c:	add	w2, w12, w2
 240:	and	w3, w3, #0xffff
 244:	sub	w2, w3, w2
 248:	and	w10, w2, #0xffff
 24c:	b.ne	290 <grub_mod_init-0x140>  // b.any
 250:	and	x2, x6, #0x3f
 254:	and	x3, x7, #0x3f
 258:	ldrh	w2, [x0, x2, lsl #1]
 25c:	ldrh	w5, [x0, x3, lsl #1]
 260:	and	x3, x10, #0x3f
 264:	sub	w2, w11, w2
 268:	and	w11, w2, #0xffff
 26c:	and	x2, x2, #0x3f
 270:	ldrh	w4, [x0, x3, lsl #1]
 274:	sub	w5, w6, w5
 278:	and	w6, w5, #0xffff
 27c:	ldrh	w3, [x0, x2, lsl #1]
 280:	sub	w4, w7, w4
 284:	and	w7, w4, #0xffff
 288:	sub	w3, w10, w3
 28c:	and	w10, w3, #0xffff
 290:	sub	w9, w9, #0x1
 294:	sub	x8, x8, #0x8
 298:	cmn	w9, #0x1
 29c:	b.ne	18c <grub_mod_init-0x244>  // b.any
 2a0:	strh	w10, [x1]
 2a4:	strh	w7, [x1, #2]
 2a8:	strh	w6, [x1, #4]
 2ac:	strh	w11, [x1, #6]
 2b0:	ret
 2b4:	adrp	x3, 0 <grub_mod_init-0x3d0>
 2b8:	ldr	x3, [x3]
 2bc:	ldr	w4, [x3]
 2c0:	cbnz	w4, 370 <grub_mod_init-0x60>
 2c4:	mov	w4, #0x1                   	// #1
 2c8:	str	w4, [x3]
 2cc:	str	xzr, [x3, #8]
 2d0:	cmp	w2, #0x4
 2d4:	b.ls	3b8 <grub_mod_init-0x18>  // b.plast
 2d8:	mov	x3, #0x0                   	// #0
 2dc:	ldrb	w4, [x1, x3]
 2e0:	strb	w4, [x0, x3]
 2e4:	add	x3, x3, #0x1
 2e8:	cmp	w2, w3
 2ec:	b.hi	2dc <grub_mod_init-0xf4>  // b.pmore
 2f0:	mov	x3, x0
 2f4:	mov	x1, x0
 2f8:	sub	w7, w2, w0
 2fc:	mov	w8, w2
 300:	sub	w9, w2, #0x1
 304:	adrp	x5, 0 <grub_mod_init-0x3d0>
 308:	add	w4, w7, w1
 30c:	ldr	x6, [x5]
 310:	cmp	w4, #0x7f
 314:	b.ls	380 <grub_mod_init-0x50>  // b.plast
 318:	ldrb	w1, [x0]
 31c:	sbfx	x2, x2, #0, #29
 320:	mov	w4, #0x80                  	// #128
 324:	ldrb	w1, [x6, x1]
 328:	strb	w1, [x0]
 32c:	sub	w1, w4, w2
 330:	sub	w4, w4, w2
 334:	ldrb	w5, [x0, x4]
 338:	ldrb	w5, [x6, x5]
 33c:	strb	w5, [x0, x4]
 340:	sub	w1, w1, #0x1
 344:	cmn	w1, #0x1
 348:	b.ne	3a0 <grub_mod_init-0x30>  // b.any
 34c:	add	x0, x0, #0x80
 350:	ldrb	w1, [x3, #1]
 354:	ldrb	w2, [x3]
 358:	orr	w1, w2, w1, lsl #8
 35c:	strh	w1, [x3], #2
 360:	cmp	x0, x3
 364:	b.ne	350 <grub_mod_init-0x80>  // b.any
 368:	mov	w0, #0x0                   	// #0
 36c:	ret
 370:	ldr	x3, [x3, #8]
 374:	cbz	x3, 2d0 <grub_mod_init-0x100>
 378:	mov	w0, #0x1c                  	// #28
 37c:	b	36c <grub_mod_init-0x64>
 380:	ldrb	w4, [x1, x9]
 384:	ldrb	w10, [x1]
 388:	add	w4, w4, w10
 38c:	and	x4, x4, #0xff
 390:	ldrb	w4, [x6, x4]
 394:	strb	w4, [x1, x8]
 398:	add	x1, x1, #0x1
 39c:	b	308 <grub_mod_init-0xc8>
 3a0:	add	w4, w2, w1
 3a4:	ldrb	w4, [x0, x4]
 3a8:	eor	w5, w4, w5
 3ac:	ldrb	w5, [x6, w5, sxtw]
 3b0:	strb	w5, [x0, w1, uxtw]
 3b4:	b	340 <grub_mod_init-0x90>
 3b8:	mov	w0, #0xd                   	// #13
 3bc:	b	36c <grub_mod_init-0x64>
	...

00000000000003d0 <grub_mod_init>:
 3d0:	adrp	x0, 0 <grub_mod_init-0x3d0>
 3d4:	ldr	x0, [x0]
 3d8:	b	0 <grub_cipher_register>
 3dc:	nop
	...

00000000000003e8 <grub_mod_fini>:
 3e8:	adrp	x0, 0 <grub_mod_init-0x3d0>
 3ec:	ldr	x0, [x0]
 3f0:	b	0 <grub_cipher_unregister>
 3f4:	nop
	...
