
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libffi.so.7.1.0_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001968 <.init>:
    1968:	stp	x29, x30, [sp, #-16]!
    196c:	mov	x29, sp
    1970:	bl	1c40 <ffi_prep_java_raw_closure_loc@plt+0x10>
    1974:	ldp	x29, x30, [sp], #16
    1978:	ret

Disassembly of section .plt:

0000000000001980 <memcpy@plt-0x20>:
    1980:	stp	x16, x30, [sp, #-16]!
    1984:	adrp	x16, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0xfe38>
    1988:	ldr	x17, [x16, #4088]
    198c:	add	x16, x16, #0xff8
    1990:	br	x17
    1994:	nop
    1998:	nop
    199c:	nop

00000000000019a0 <memcpy@plt>:
    19a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19a4:	ldr	x17, [x16]
    19a8:	add	x16, x16, #0x0
    19ac:	br	x17

00000000000019b0 <ffi_prep_closure_loc@plt>:
    19b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19b4:	ldr	x17, [x16, #8]
    19b8:	add	x16, x16, #0x8
    19bc:	br	x17

00000000000019c0 <strlen@plt>:
    19c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19c4:	ldr	x17, [x16, #16]
    19c8:	add	x16, x16, #0x10
    19cc:	br	x17

00000000000019d0 <ffi_java_raw_to_ptrarray@plt>:
    19d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19d4:	ldr	x17, [x16, #24]
    19d8:	add	x16, x16, #0x18
    19dc:	br	x17

00000000000019e0 <__cxa_finalize@plt>:
    19e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19e4:	ldr	x17, [x16, #32]
    19e8:	add	x16, x16, #0x20
    19ec:	br	x17

00000000000019f0 <statfs@plt>:
    19f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16, #40]
    19f8:	add	x16, x16, #0x28
    19fc:	br	x17

0000000000001a00 <fclose@plt>:
    1a00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #48]
    1a08:	add	x16, x16, #0x30
    1a0c:	br	x17

0000000000001a10 <fopen@plt>:
    1a10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #56]
    1a18:	add	x16, x16, #0x38
    1a1c:	br	x17

0000000000001a20 <open@plt>:
    1a20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #64]
    1a28:	add	x16, x16, #0x40
    1a2c:	br	x17

0000000000001a30 <strncmp@plt>:
    1a30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #72]
    1a38:	add	x16, x16, #0x48
    1a3c:	br	x17

0000000000001a40 <memset@plt>:
    1a40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #80]
    1a48:	add	x16, x16, #0x50
    1a4c:	br	x17

0000000000001a50 <ffi_raw_to_ptrarray@plt>:
    1a50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #88]
    1a58:	add	x16, x16, #0x58
    1a5c:	br	x17

0000000000001a60 <ffi_prep_raw_closure_loc@plt>:
    1a60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #96]
    1a68:	add	x16, x16, #0x60
    1a6c:	br	x17

0000000000001a70 <setmntent@plt>:
    1a70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #104]
    1a78:	add	x16, x16, #0x68
    1a7c:	br	x17

0000000000001a80 <endmntent@plt>:
    1a80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #112]
    1a88:	add	x16, x16, #0x70
    1a8c:	br	x17

0000000000001a90 <pthread_mutex_init@plt>:
    1a90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #120]
    1a98:	add	x16, x16, #0x78
    1a9c:	br	x17

0000000000001aa0 <close@plt>:
    1aa0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #128]
    1aa8:	add	x16, x16, #0x80
    1aac:	br	x17

0000000000001ab0 <__gmon_start__@plt>:
    1ab0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #136]
    1ab8:	add	x16, x16, #0x88
    1abc:	br	x17

0000000000001ac0 <write@plt>:
    1ac0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #144]
    1ac8:	add	x16, x16, #0x90
    1acc:	br	x17

0000000000001ad0 <abort@plt>:
    1ad0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #152]
    1ad8:	add	x16, x16, #0x98
    1adc:	br	x17

0000000000001ae0 <mkostemp@plt>:
    1ae0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #160]
    1ae8:	add	x16, x16, #0xa0
    1aec:	br	x17

0000000000001af0 <access@plt>:
    1af0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #168]
    1af8:	add	x16, x16, #0xa8
    1afc:	br	x17

0000000000001b00 <mmap@plt>:
    1b00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #176]
    1b08:	add	x16, x16, #0xb0
    1b0c:	br	x17

0000000000001b10 <getline@plt>:
    1b10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #184]
    1b18:	add	x16, x16, #0xb8
    1b1c:	br	x17

0000000000001b20 <free@plt>:
    1b20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #192]
    1b28:	add	x16, x16, #0xc0
    1b2c:	br	x17

0000000000001b30 <ffi_java_raw_size@plt>:
    1b30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #200]
    1b38:	add	x16, x16, #0xc8
    1b3c:	br	x17

0000000000001b40 <ffi_raw_size@plt>:
    1b40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #208]
    1b48:	add	x16, x16, #0xd0
    1b4c:	br	x17

0000000000001b50 <ffi_ptrarray_to_raw@plt>:
    1b50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #216]
    1b58:	add	x16, x16, #0xd8
    1b5c:	br	x17

0000000000001b60 <hasmntopt@plt>:
    1b60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #224]
    1b68:	add	x16, x16, #0xe0
    1b6c:	br	x17

0000000000001b70 <strchr@plt>:
    1b70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #232]
    1b78:	add	x16, x16, #0xe8
    1b7c:	br	x17

0000000000001b80 <munmap@plt>:
    1b80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #240]
    1b88:	add	x16, x16, #0xf0
    1b8c:	br	x17

0000000000001b90 <ffi_call@plt>:
    1b90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #248]
    1b98:	add	x16, x16, #0xf8
    1b9c:	br	x17

0000000000001ba0 <sysconf@plt>:
    1ba0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #256]
    1ba8:	add	x16, x16, #0x100
    1bac:	br	x17

0000000000001bb0 <getmntent_r@plt>:
    1bb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #264]
    1bb8:	add	x16, x16, #0x108
    1bbc:	br	x17

0000000000001bc0 <ftruncate@plt>:
    1bc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #272]
    1bc8:	add	x16, x16, #0x110
    1bcc:	br	x17

0000000000001bd0 <__errno_location@plt>:
    1bd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #280]
    1bd8:	add	x16, x16, #0x118
    1bdc:	br	x17

0000000000001be0 <getenv@plt>:
    1be0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #288]
    1be8:	add	x16, x16, #0x120
    1bec:	br	x17

0000000000001bf0 <ffi_java_ptrarray_to_raw@plt>:
    1bf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #296]
    1bf8:	add	x16, x16, #0x128
    1bfc:	br	x17

0000000000001c00 <pthread_mutex_lock@plt>:
    1c00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #304]
    1c08:	add	x16, x16, #0x130
    1c0c:	br	x17

0000000000001c10 <pthread_mutex_unlock@plt>:
    1c10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #312]
    1c18:	add	x16, x16, #0x138
    1c1c:	br	x17

0000000000001c20 <unlink@plt>:
    1c20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #320]
    1c28:	add	x16, x16, #0x140
    1c2c:	br	x17

0000000000001c30 <ffi_prep_java_raw_closure_loc@plt>:
    1c30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #328]
    1c38:	add	x16, x16, #0x148
    1c3c:	br	x17

Disassembly of section .text:

0000000000001c40 <ffi_prep_cif@@LIBFFI_BASE_7.0-0x294>:
    1c40:	adrp	x0, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0xfe38>
    1c44:	ldr	x0, [x0, #4056]
    1c48:	cbz	x0, 1c50 <ffi_prep_java_raw_closure_loc@plt+0x20>
    1c4c:	b	1ab0 <__gmon_start__@plt>
    1c50:	ret
    1c54:	nop
    1c58:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1c5c:	add	x0, x0, #0x190
    1c60:	adrp	x1, 17000 <memcpy@GLIBC_2.17>
    1c64:	add	x1, x1, #0x190
    1c68:	cmp	x1, x0
    1c6c:	b.eq	1c84 <ffi_prep_java_raw_closure_loc@plt+0x54>  // b.none
    1c70:	adrp	x1, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0xfe38>
    1c74:	ldr	x1, [x1, #4040]
    1c78:	cbz	x1, 1c84 <ffi_prep_java_raw_closure_loc@plt+0x54>
    1c7c:	mov	x16, x1
    1c80:	br	x16
    1c84:	ret
    1c88:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1c8c:	add	x0, x0, #0x190
    1c90:	adrp	x1, 17000 <memcpy@GLIBC_2.17>
    1c94:	add	x1, x1, #0x190
    1c98:	sub	x1, x1, x0
    1c9c:	lsr	x2, x1, #63
    1ca0:	add	x1, x2, x1, asr #3
    1ca4:	cmp	xzr, x1, asr #1
    1ca8:	asr	x1, x1, #1
    1cac:	b.eq	1cc4 <ffi_prep_java_raw_closure_loc@plt+0x94>  // b.none
    1cb0:	adrp	x2, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0xfe38>
    1cb4:	ldr	x2, [x2, #4064]
    1cb8:	cbz	x2, 1cc4 <ffi_prep_java_raw_closure_loc@plt+0x94>
    1cbc:	mov	x16, x2
    1cc0:	br	x16
    1cc4:	ret
    1cc8:	stp	x29, x30, [sp, #-32]!
    1ccc:	mov	x29, sp
    1cd0:	str	x19, [sp, #16]
    1cd4:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    1cd8:	ldrb	w0, [x19, #400]
    1cdc:	cbnz	w0, 1d04 <ffi_prep_java_raw_closure_loc@plt+0xd4>
    1ce0:	adrp	x0, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0xfe38>
    1ce4:	ldr	x0, [x0, #4048]
    1ce8:	cbz	x0, 1cf8 <ffi_prep_java_raw_closure_loc@plt+0xc8>
    1cec:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1cf0:	ldr	x0, [x0, #336]
    1cf4:	bl	19e0 <__cxa_finalize@plt>
    1cf8:	bl	1c58 <ffi_prep_java_raw_closure_loc@plt+0x28>
    1cfc:	mov	w0, #0x1                   	// #1
    1d00:	strb	w0, [x19, #400]
    1d04:	ldr	x19, [sp, #16]
    1d08:	ldp	x29, x30, [sp], #32
    1d0c:	ret
    1d10:	b	1c88 <ffi_prep_java_raw_closure_loc@plt+0x58>
    1d14:	stp	x29, x30, [sp, #-48]!
    1d18:	stp	x22, x21, [sp, #16]
    1d1c:	stp	x20, x19, [sp, #32]
    1d20:	mov	x29, sp
    1d24:	cmp	w1, #0x1
    1d28:	b.ne	1dbc <ffi_prep_java_raw_closure_loc@plt+0x18c>  // b.any
    1d2c:	stp	w1, w4, [x0]
    1d30:	stp	x6, x5, [x0, #8]
    1d34:	str	wzr, [x0, #28]
    1d38:	ldr	x8, [x5]
    1d3c:	mov	x19, x0
    1d40:	cbz	x8, 1dd4 <ffi_prep_java_raw_closure_loc@plt+0x1a4>
    1d44:	ldr	x8, [x19, #16]
    1d48:	ldr	w20, [x19, #4]
    1d4c:	ldrh	w8, [x8, #10]
    1d50:	cmp	w8, #0xd
    1d54:	cset	w8, eq  // eq = none
    1d58:	lsl	w21, w8, #3
    1d5c:	cbz	w20, 1dc4 <ffi_prep_java_raw_closure_loc@plt+0x194>
    1d60:	ldr	x22, [x19, #8]
    1d64:	b	1da0 <ffi_prep_java_raw_closure_loc@plt+0x170>
    1d68:	ldr	x8, [x22], #8
    1d6c:	sub	w10, w21, #0x1
    1d70:	ldrh	w9, [x8, #8]
    1d74:	ldr	w8, [x8]
    1d78:	sub	w9, w9, #0x1
    1d7c:	sub	w8, w8, #0x1
    1d80:	orr	w10, w9, w10
    1d84:	tst	w9, w21
    1d88:	orr	w8, w8, #0x7
    1d8c:	csinc	w9, w21, w10, eq  // eq = none
    1d90:	add	w8, w8, w9
    1d94:	subs	w20, w20, #0x1
    1d98:	add	w21, w8, #0x1
    1d9c:	b.eq	1dc4 <ffi_prep_java_raw_closure_loc@plt+0x194>  // b.none
    1da0:	ldr	x0, [x22]
    1da4:	ldr	x8, [x0]
    1da8:	cbnz	x8, 1d68 <ffi_prep_java_raw_closure_loc@plt+0x138>
    1dac:	mov	x1, xzr
    1db0:	bl	1df8 <ffi_prep_java_raw_closure_loc@plt+0x1c8>
    1db4:	cbz	w0, 1d68 <ffi_prep_java_raw_closure_loc@plt+0x138>
    1db8:	b	1de4 <ffi_prep_java_raw_closure_loc@plt+0x1b4>
    1dbc:	mov	w0, #0x2                   	// #2
    1dc0:	b	1de8 <ffi_prep_java_raw_closure_loc@plt+0x1b8>
    1dc4:	mov	x0, x19
    1dc8:	str	w21, [x19, #24]
    1dcc:	bl	515c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2738>
    1dd0:	b	1de8 <ffi_prep_java_raw_closure_loc@plt+0x1b8>
    1dd4:	mov	x0, x5
    1dd8:	mov	x1, xzr
    1ddc:	bl	1df8 <ffi_prep_java_raw_closure_loc@plt+0x1c8>
    1de0:	cbz	w0, 1d44 <ffi_prep_java_raw_closure_loc@plt+0x114>
    1de4:	mov	w0, #0x1                   	// #1
    1de8:	ldp	x20, x19, [sp, #32]
    1dec:	ldp	x22, x21, [sp, #16]
    1df0:	ldp	x29, x30, [sp], #48
    1df4:	ret
    1df8:	stp	x29, x30, [sp, #-48]!
    1dfc:	str	x21, [sp, #16]
    1e00:	stp	x20, x19, [sp, #32]
    1e04:	mov	x29, sp
    1e08:	cbz	x0, 1ecc <ffi_prep_java_raw_closure_loc@plt+0x29c>
    1e0c:	ldr	x8, [x0, #16]
    1e10:	mov	x19, x0
    1e14:	cbz	x8, 1ecc <ffi_prep_java_raw_closure_loc@plt+0x29c>
    1e18:	str	xzr, [x19]
    1e1c:	strh	wzr, [x19, #8]
    1e20:	ldr	x0, [x8]
    1e24:	cbz	x0, 1e9c <ffi_prep_java_raw_closure_loc@plt+0x26c>
    1e28:	mov	x20, x1
    1e2c:	add	x21, x8, #0x8
    1e30:	b	1e5c <ffi_prep_java_raw_closure_loc@plt+0x22c>
    1e34:	ldrh	w11, [x19, #8]
    1e38:	ldr	x9, [x9]
    1e3c:	ldr	x10, [x19]
    1e40:	cmp	w11, w8
    1e44:	csel	w8, w11, w8, hi  // hi = pmore
    1e48:	add	x9, x10, x9
    1e4c:	str	x9, [x19]
    1e50:	strh	w8, [x19, #8]
    1e54:	ldr	x0, [x21], #8
    1e58:	cbz	x0, 1e9c <ffi_prep_java_raw_closure_loc@plt+0x26c>
    1e5c:	ldr	x8, [x0]
    1e60:	cbnz	x8, 1e70 <ffi_prep_java_raw_closure_loc@plt+0x240>
    1e64:	mov	x1, xzr
    1e68:	bl	1df8 <ffi_prep_java_raw_closure_loc@plt+0x1c8>
    1e6c:	cbnz	w0, 1ecc <ffi_prep_java_raw_closure_loc@plt+0x29c>
    1e70:	ldur	x9, [x21, #-8]
    1e74:	ldr	x10, [x19]
    1e78:	ldrh	w8, [x9, #8]
    1e7c:	sub	x10, x10, #0x1
    1e80:	sub	x11, x8, #0x1
    1e84:	orr	x10, x11, x10
    1e88:	add	x10, x10, #0x1
    1e8c:	str	x10, [x19]
    1e90:	cbz	x20, 1e34 <ffi_prep_java_raw_closure_loc@plt+0x204>
    1e94:	str	x10, [x20], #8
    1e98:	b	1e34 <ffi_prep_java_raw_closure_loc@plt+0x204>
    1e9c:	ldr	x8, [x19]
    1ea0:	ldrh	w9, [x19, #8]
    1ea4:	sub	x8, x8, #0x1
    1ea8:	sub	x9, x9, #0x1
    1eac:	orr	x8, x9, x8
    1eb0:	adds	x8, x8, #0x1
    1eb4:	cset	w0, cs  // cs = hs, nlast
    1eb8:	str	x8, [x19]
    1ebc:	ldp	x20, x19, [sp, #32]
    1ec0:	ldr	x21, [sp, #16]
    1ec4:	ldp	x29, x30, [sp], #48
    1ec8:	ret
    1ecc:	mov	w0, #0x1                   	// #1
    1ed0:	b	1ebc <ffi_prep_java_raw_closure_loc@plt+0x28c>

0000000000001ed4 <ffi_prep_cif@@LIBFFI_BASE_7.0>:
    1ed4:	stp	x29, x30, [sp, #-16]!
    1ed8:	mov	x29, sp
    1edc:	mov	x6, x4
    1ee0:	mov	w4, w2
    1ee4:	mov	x5, x3
    1ee8:	bl	1d14 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    1eec:	ldp	x29, x30, [sp], #16
    1ef0:	ret

0000000000001ef4 <ffi_prep_cif_var@@LIBFFI_BASE_7.0>:
    1ef4:	stp	x29, x30, [sp, #-16]!
    1ef8:	mov	x29, sp
    1efc:	mov	x6, x5
    1f00:	mov	x5, x4
    1f04:	mov	w4, w3
    1f08:	bl	1d14 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    1f0c:	ldp	x29, x30, [sp], #16
    1f10:	ret

0000000000001f14 <ffi_prep_closure@@LIBFFI_CLOSURE_7.0>:
    1f14:	stp	x29, x30, [sp, #-16]!
    1f18:	mov	x29, sp
    1f1c:	mov	x4, x0
    1f20:	bl	19b0 <ffi_prep_closure_loc@plt>
    1f24:	ldp	x29, x30, [sp], #16
    1f28:	ret

0000000000001f2c <ffi_get_struct_offsets@@LIBFFI_BASE_7.1>:
    1f2c:	stp	x29, x30, [sp, #-16]!
    1f30:	cmp	w0, #0x1
    1f34:	mov	x29, sp
    1f38:	b.ne	1f5c <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x30>  // b.any
    1f3c:	ldrh	w8, [x1, #10]
    1f40:	cmp	w8, #0xd
    1f44:	b.ne	1f68 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x3c>  // b.any
    1f48:	mov	x0, x1
    1f4c:	mov	x1, x2
    1f50:	bl	1df8 <ffi_prep_java_raw_closure_loc@plt+0x1c8>
    1f54:	ldp	x29, x30, [sp], #16
    1f58:	ret
    1f5c:	mov	w0, #0x2                   	// #2
    1f60:	ldp	x29, x30, [sp], #16
    1f64:	ret
    1f68:	mov	w0, #0x1                   	// #1
    1f6c:	ldp	x29, x30, [sp], #16
    1f70:	ret

0000000000001f74 <ffi_raw_size@@LIBFFI_BASE_7.0>:
    1f74:	ldr	w8, [x0, #4]
    1f78:	subs	w8, w8, #0x1
    1f7c:	b.mi	1fc8 <ffi_raw_size@@LIBFFI_BASE_7.0+0x54>  // b.first
    1f80:	ldr	x9, [x0, #8]
    1f84:	mov	x0, xzr
    1f88:	b	1fac <ffi_raw_size@@LIBFFI_BASE_7.0+0x38>
    1f8c:	ldr	x10, [x10]
    1f90:	sub	x10, x10, #0x1
    1f94:	orr	x10, x10, #0x7
    1f98:	add	x10, x0, x10
    1f9c:	add	x0, x10, #0x1
    1fa0:	subs	w8, w8, #0x1
    1fa4:	add	x9, x9, #0x8
    1fa8:	b.mi	1fc4 <ffi_raw_size@@LIBFFI_BASE_7.0+0x50>  // b.first
    1fac:	ldr	x10, [x9]
    1fb0:	ldrh	w11, [x10, #10]
    1fb4:	cmp	w11, #0xd
    1fb8:	b.ne	1f8c <ffi_raw_size@@LIBFFI_BASE_7.0+0x18>  // b.any
    1fbc:	add	x0, x0, #0x8
    1fc0:	b	1fa0 <ffi_raw_size@@LIBFFI_BASE_7.0+0x2c>
    1fc4:	ret
    1fc8:	mov	x0, xzr
    1fcc:	ret

0000000000001fd0 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    1fd0:	ldr	w8, [x0, #4]
    1fd4:	cbz	w8, 2038 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x68>
    1fd8:	ldr	x8, [x0, #8]
    1fdc:	ldr	w9, [x0, #4]
    1fe0:	mov	x10, xzr
    1fe4:	b	2000 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x30>
    1fe8:	ldr	x11, [x1], #8
    1fec:	str	x11, [x2]
    1ff0:	add	x10, x10, #0x1
    1ff4:	cmp	w10, w9
    1ff8:	add	x2, x2, #0x8
    1ffc:	b.cs	2038 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x68>  // b.hs, b.nlast
    2000:	ldr	x11, [x8, x10, lsl #3]
    2004:	ldrh	w11, [x11, #10]
    2008:	cmp	w11, #0xf
    200c:	b.eq	1fe8 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x18>  // b.none
    2010:	cmp	w11, #0xd
    2014:	b.eq	1fe8 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x18>  // b.none
    2018:	str	x1, [x2]
    201c:	ldr	x11, [x8, x10, lsl #3]
    2020:	ldr	x11, [x11]
    2024:	sub	x11, x11, #0x1
    2028:	orr	x11, x11, #0x7
    202c:	add	x11, x11, x1
    2030:	add	x1, x11, #0x1
    2034:	b	1ff0 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x20>
    2038:	ret

000000000000203c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    203c:	stp	x29, x30, [sp, #-64]!
    2040:	stp	x24, x23, [sp, #16]
    2044:	stp	x22, x21, [sp, #32]
    2048:	stp	x20, x19, [sp, #48]
    204c:	ldr	w8, [x0, #4]
    2050:	mov	x29, sp
    2054:	cbz	w8, 2154 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x118>
    2058:	ldr	x23, [x0, #8]
    205c:	adrp	x24, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    2060:	mov	x19, x2
    2064:	mov	x20, x0
    2068:	mov	x21, x1
    206c:	mov	x22, xzr
    2070:	add	x24, x24, #0x1e0
    2074:	b	20b4 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x78>
    2078:	ldr	x1, [x21]
    207c:	ldr	x2, [x8]
    2080:	mov	x0, x19
    2084:	bl	19a0 <memcpy@plt>
    2088:	ldr	x8, [x23, x22, lsl #3]
    208c:	ldr	x8, [x8]
    2090:	sub	x8, x8, #0x1
    2094:	orr	x8, x8, #0x7
    2098:	add	x8, x8, x19
    209c:	add	x19, x8, #0x1
    20a0:	ldr	w8, [x20, #4]
    20a4:	add	x22, x22, #0x1
    20a8:	add	x21, x21, #0x8
    20ac:	cmp	w22, w8
    20b0:	b.cs	2154 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x118>  // b.hs, b.nlast
    20b4:	ldr	x8, [x23, x22, lsl #3]
    20b8:	ldrh	w9, [x8, #10]
    20bc:	sub	w9, w9, #0x5
    20c0:	cmp	w9, #0xa
    20c4:	b.hi	2078 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x3c>  // b.pmore
    20c8:	adr	x10, 2078 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x3c>
    20cc:	ldrb	w11, [x24, x9]
    20d0:	add	x10, x10, x11, lsl #2
    20d4:	br	x10
    20d8:	ldr	x8, [x21]
    20dc:	str	x8, [x19], #8
    20e0:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    20e4:	ldr	x8, [x21]
    20e8:	ldrb	w8, [x8]
    20ec:	str	x8, [x19], #8
    20f0:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    20f4:	ldr	x8, [x21]
    20f8:	ldrsb	x8, [x8]
    20fc:	str	x8, [x19], #8
    2100:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    2104:	ldr	x8, [x21]
    2108:	ldrh	w8, [x8]
    210c:	str	x8, [x19], #8
    2110:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    2114:	ldr	x8, [x21]
    2118:	ldrsh	x8, [x8]
    211c:	str	x8, [x19], #8
    2120:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    2124:	ldr	x8, [x21]
    2128:	ldr	w8, [x8]
    212c:	str	x8, [x19], #8
    2130:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    2134:	ldr	x8, [x21]
    2138:	ldrsw	x8, [x8]
    213c:	str	x8, [x19], #8
    2140:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    2144:	ldr	x8, [x21]
    2148:	ldr	x8, [x8]
    214c:	str	x8, [x19], #8
    2150:	b	20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x64>
    2154:	ldp	x20, x19, [sp, #48]
    2158:	ldp	x22, x21, [sp, #32]
    215c:	ldp	x24, x23, [sp, #16]
    2160:	ldp	x29, x30, [sp], #64
    2164:	ret

0000000000002168 <ffi_raw_call@@LIBFFI_BASE_7.0>:
    2168:	stp	x29, x30, [sp, #-48]!
    216c:	stp	x22, x21, [sp, #16]
    2170:	stp	x20, x19, [sp, #32]
    2174:	mov	x29, sp
    2178:	ldr	w8, [x0, #4]
    217c:	mov	x9, sp
    2180:	mov	x19, x2
    2184:	mov	x20, x0
    2188:	lsl	x8, x8, #3
    218c:	add	x8, x8, #0xf
    2190:	and	x8, x8, #0xffffffff0
    2194:	sub	x22, x9, x8
    2198:	mov	x21, x1
    219c:	mov	sp, x22
    21a0:	mov	x1, x3
    21a4:	mov	x2, x22
    21a8:	bl	1a50 <ffi_raw_to_ptrarray@plt>
    21ac:	mov	x0, x20
    21b0:	mov	x1, x21
    21b4:	mov	x2, x19
    21b8:	mov	x3, x22
    21bc:	bl	1b90 <ffi_call@plt>
    21c0:	mov	sp, x29
    21c4:	ldp	x20, x19, [sp, #32]
    21c8:	ldp	x22, x21, [sp, #16]
    21cc:	ldp	x29, x30, [sp], #48
    21d0:	ret

00000000000021d4 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    21d4:	stp	x29, x30, [sp, #-48]!
    21d8:	str	x21, [sp, #16]
    21dc:	stp	x20, x19, [sp, #32]
    21e0:	mov	x29, sp
    21e4:	mov	x20, x2
    21e8:	adrp	x2, 2000 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x30>
    21ec:	mov	x19, x3
    21f0:	add	x2, x2, #0x218
    21f4:	mov	x3, x4
    21f8:	mov	x21, x0
    21fc:	bl	19b0 <ffi_prep_closure_loc@plt>
    2200:	cbnz	w0, 2208 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x34>
    2204:	stp	x20, x19, [x21, #48]
    2208:	ldp	x20, x19, [sp, #32]
    220c:	ldr	x21, [sp, #16]
    2210:	ldp	x29, x30, [sp], #48
    2214:	ret
    2218:	stp	x29, x30, [sp, #-64]!
    221c:	str	x23, [sp, #16]
    2220:	stp	x22, x21, [sp, #32]
    2224:	stp	x20, x19, [sp, #48]
    2228:	mov	x29, sp
    222c:	mov	x19, x3
    2230:	mov	x20, x2
    2234:	mov	x21, x1
    2238:	mov	x22, x0
    223c:	bl	1b40 <ffi_raw_size@plt>
    2240:	add	x9, x0, #0xf
    2244:	mov	x8, sp
    2248:	and	x9, x9, #0xfffffffffffffff0
    224c:	sub	x23, x8, x9
    2250:	mov	sp, x23
    2254:	mov	x0, x22
    2258:	mov	x1, x20
    225c:	mov	x2, x23
    2260:	bl	1b50 <ffi_ptrarray_to_raw@plt>
    2264:	ldp	x8, x3, [x19, #48]
    2268:	mov	x0, x22
    226c:	mov	x1, x21
    2270:	mov	x2, x23
    2274:	blr	x8
    2278:	mov	sp, x29
    227c:	ldp	x20, x19, [sp, #48]
    2280:	ldp	x22, x21, [sp, #32]
    2284:	ldr	x23, [sp, #16]
    2288:	ldp	x29, x30, [sp], #64
    228c:	ret

0000000000002290 <ffi_prep_raw_closure@@LIBFFI_CLOSURE_7.0>:
    2290:	stp	x29, x30, [sp, #-16]!
    2294:	mov	x29, sp
    2298:	mov	x4, x0
    229c:	bl	1a60 <ffi_prep_raw_closure_loc@plt>
    22a0:	ldp	x29, x30, [sp], #16
    22a4:	ret

00000000000022a8 <ffi_java_raw_size@@LIBFFI_BASE_7.0>:
    22a8:	stp	x29, x30, [sp, #-16]!
    22ac:	ldr	w9, [x0, #4]
    22b0:	mov	x29, sp
    22b4:	subs	w9, w9, #0x1
    22b8:	b.mi	231c <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x74>  // b.first
    22bc:	mov	x8, x0
    22c0:	ldr	x8, [x8, #8]
    22c4:	adrp	x10, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    22c8:	mov	x0, xzr
    22cc:	add	x10, x10, #0x1eb
    22d0:	b	22e8 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x40>
    22d4:	mov	w11, #0x8                   	// #8
    22d8:	add	x0, x0, x11
    22dc:	subs	w9, w9, #0x1
    22e0:	add	x8, x8, #0x8
    22e4:	b.mi	2314 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x6c>  // b.first
    22e8:	ldr	x11, [x8]
    22ec:	ldrh	w11, [x11, #10]
    22f0:	sub	w11, w11, #0x3
    22f4:	cmp	w11, #0xc
    22f8:	b.hi	22d4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x2c>  // b.pmore
    22fc:	adr	x12, 22d4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x2c>
    2300:	ldrb	w13, [x10, x11]
    2304:	add	x12, x12, x13, lsl #2
    2308:	mov	w11, #0x10                  	// #16
    230c:	br	x12
    2310:	bl	1ad0 <abort@plt>
    2314:	ldp	x29, x30, [sp], #16
    2318:	ret
    231c:	mov	x0, xzr
    2320:	ldp	x29, x30, [sp], #16
    2324:	ret

0000000000002328 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    2328:	stp	x29, x30, [sp, #-16]!
    232c:	ldr	w8, [x0, #4]
    2330:	mov	x29, sp
    2334:	cbz	w8, 238c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x64>
    2338:	ldr	x8, [x0, #8]
    233c:	mov	x9, xzr
    2340:	b	235c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x34>
    2344:	str	x1, [x2, x9, lsl #3]
    2348:	add	x1, x1, #0x10
    234c:	ldr	w10, [x0, #4]
    2350:	add	x9, x9, #0x1
    2354:	cmp	w9, w10
    2358:	b.cs	238c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x64>  // b.hs, b.nlast
    235c:	ldr	x10, [x8, x9, lsl #3]
    2360:	ldrh	w10, [x10, #10]
    2364:	sub	w11, w10, #0xb
    2368:	cmp	w11, #0x2
    236c:	ccmp	w10, #0x3, #0x4, cs  // cs = hs, nlast
    2370:	b.eq	2344 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x1c>  // b.none
    2374:	cmp	w10, #0xf
    2378:	b.eq	2394 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x6c>  // b.none
    237c:	add	x10, x1, #0x8
    2380:	str	x1, [x2, x9, lsl #3]
    2384:	mov	x1, x10
    2388:	b	234c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x24>
    238c:	ldp	x29, x30, [sp], #16
    2390:	ret
    2394:	bl	1ad0 <abort@plt>

0000000000002398 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    2398:	ldr	w8, [x0, #4]
    239c:	cbz	w8, 245c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xc4>
    23a0:	ldr	x9, [x0, #8]
    23a4:	adrp	x10, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    23a8:	mov	x8, xzr
    23ac:	add	x10, x10, #0x1f8
    23b0:	b	23d0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x38>
    23b4:	ldr	x11, [x1, x8, lsl #3]
    23b8:	ldr	x11, [x11]
    23bc:	str	x11, [x2], #8
    23c0:	ldr	w11, [x0, #4]
    23c4:	add	x8, x8, #0x1
    23c8:	cmp	w8, w11
    23cc:	b.cs	245c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xc4>  // b.hs, b.nlast
    23d0:	ldr	x11, [x9, x8, lsl #3]
    23d4:	ldrh	w11, [x11, #10]
    23d8:	sub	w11, w11, #0x2
    23dc:	cmp	w11, #0xc
    23e0:	b.hi	23c0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x28>  // b.pmore
    23e4:	adr	x12, 23b4 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1c>
    23e8:	ldrb	w13, [x10, x11]
    23ec:	add	x12, x12, x13, lsl #2
    23f0:	br	x12
    23f4:	ldr	x11, [x1, x8, lsl #3]
    23f8:	ldr	x11, [x11]
    23fc:	str	x11, [x2], #16
    2400:	b	23c0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x28>
    2404:	ldr	x11, [x1, x8, lsl #3]
    2408:	ldr	w11, [x11]
    240c:	str	w11, [x2], #8
    2410:	b	23c0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x28>
    2414:	ldr	x11, [x1, x8, lsl #3]
    2418:	ldrb	w11, [x11]
    241c:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x24>
    2420:	ldr	x11, [x1, x8, lsl #3]
    2424:	ldrsb	x11, [x11]
    2428:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x24>
    242c:	ldr	x11, [x1, x8, lsl #3]
    2430:	ldrh	w11, [x11]
    2434:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x24>
    2438:	ldr	x11, [x1, x8, lsl #3]
    243c:	ldrsh	x11, [x11]
    2440:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x24>
    2444:	ldr	x11, [x1, x8, lsl #3]
    2448:	ldr	w11, [x11]
    244c:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x24>
    2450:	ldr	x11, [x1, x8, lsl #3]
    2454:	ldrsw	x11, [x11]
    2458:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x24>
    245c:	ret

0000000000002460 <ffi_java_raw_call@@LIBFFI_BASE_7.0>:
    2460:	stp	x29, x30, [sp, #-48]!
    2464:	stp	x22, x21, [sp, #16]
    2468:	stp	x20, x19, [sp, #32]
    246c:	mov	x29, sp
    2470:	ldr	w8, [x0, #4]
    2474:	mov	x9, sp
    2478:	mov	x19, x2
    247c:	mov	x20, x0
    2480:	lsl	x8, x8, #3
    2484:	add	x8, x8, #0xf
    2488:	and	x8, x8, #0xffffffff0
    248c:	sub	x22, x9, x8
    2490:	mov	x21, x1
    2494:	mov	sp, x22
    2498:	mov	x1, x3
    249c:	mov	x2, x22
    24a0:	bl	19d0 <ffi_java_raw_to_ptrarray@plt>
    24a4:	mov	x0, x20
    24a8:	mov	x1, x21
    24ac:	mov	x2, x19
    24b0:	mov	x3, x22
    24b4:	bl	1b90 <ffi_call@plt>
    24b8:	mov	sp, x29
    24bc:	ldp	x20, x19, [sp, #32]
    24c0:	ldp	x22, x21, [sp, #16]
    24c4:	ldp	x29, x30, [sp], #48
    24c8:	ret

00000000000024cc <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    24cc:	stp	x29, x30, [sp, #-48]!
    24d0:	str	x21, [sp, #16]
    24d4:	stp	x20, x19, [sp, #32]
    24d8:	mov	x29, sp
    24dc:	mov	x20, x2
    24e0:	adrp	x2, 2000 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x30>
    24e4:	mov	x19, x3
    24e8:	add	x2, x2, #0x510
    24ec:	mov	x3, x4
    24f0:	mov	x21, x0
    24f4:	bl	19b0 <ffi_prep_closure_loc@plt>
    24f8:	cbnz	w0, 2500 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x34>
    24fc:	stp	x20, x19, [x21, #48]
    2500:	ldp	x20, x19, [sp, #32]
    2504:	ldr	x21, [sp, #16]
    2508:	ldp	x29, x30, [sp], #48
    250c:	ret
    2510:	stp	x29, x30, [sp, #-64]!
    2514:	str	x23, [sp, #16]
    2518:	stp	x22, x21, [sp, #32]
    251c:	stp	x20, x19, [sp, #48]
    2520:	mov	x29, sp
    2524:	mov	x19, x3
    2528:	mov	x20, x2
    252c:	mov	x21, x1
    2530:	mov	x22, x0
    2534:	bl	1b30 <ffi_java_raw_size@plt>
    2538:	add	x9, x0, #0xf
    253c:	mov	x8, sp
    2540:	and	x9, x9, #0xfffffffffffffff0
    2544:	sub	x23, x8, x9
    2548:	mov	sp, x23
    254c:	mov	x0, x22
    2550:	mov	x1, x20
    2554:	mov	x2, x23
    2558:	bl	1bf0 <ffi_java_ptrarray_to_raw@plt>
    255c:	ldp	x8, x3, [x19, #48]
    2560:	mov	x0, x22
    2564:	mov	x1, x21
    2568:	mov	x2, x23
    256c:	blr	x8
    2570:	mov	sp, x29
    2574:	ldp	x20, x19, [sp, #48]
    2578:	ldp	x22, x21, [sp, #32]
    257c:	ldr	x23, [sp, #16]
    2580:	ldp	x29, x30, [sp], #64
    2584:	ret

0000000000002588 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0>:
    2588:	stp	x29, x30, [sp, #-16]!
    258c:	mov	x29, sp
    2590:	mov	x4, x0
    2594:	bl	1c30 <ffi_prep_java_raw_closure_loc@plt>
    2598:	ldp	x29, x30, [sp], #16
    259c:	ret

00000000000025a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0>:
    25a0:	stp	x29, x30, [sp, #-32]!
    25a4:	stp	x20, x19, [sp, #16]
    25a8:	mov	x29, sp
    25ac:	cbz	x1, 25d8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x38>
    25b0:	mov	x20, x1
    25b4:	bl	25ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4c>
    25b8:	mov	x19, x0
    25bc:	cbz	x0, 25dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3c>
    25c0:	mov	x0, x19
    25c4:	bl	29bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x41c>
    25c8:	ldr	x8, [x0, #24]
    25cc:	add	x8, x19, x8
    25d0:	str	x8, [x20]
    25d4:	b	25dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3c>
    25d8:	mov	x19, xzr
    25dc:	mov	x0, x19
    25e0:	ldp	x20, x19, [sp, #16]
    25e4:	ldp	x29, x30, [sp], #32
    25e8:	ret
    25ec:	stp	x29, x30, [sp, #-48]!
    25f0:	str	x21, [sp, #16]
    25f4:	stp	x20, x19, [sp, #32]
    25f8:	mov	x29, sp
    25fc:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2600:	ldr	x8, [x8, #1504]
    2604:	mov	x19, x0
    2608:	cbnz	x8, 2610 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x70>
    260c:	bl	3184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x760>
    2610:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    2614:	ldrb	w8, [x21, #1272]
    2618:	tbz	w8, #1, 2634 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x94>
    261c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2620:	add	x0, x0, #0x500
    2624:	bl	1c00 <pthread_mutex_lock@plt>
    2628:	cbz	w0, 2634 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x94>
    262c:	mov	x20, xzr
    2630:	b	2970 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3d0>
    2634:	cmp	x19, #0xf0
    2638:	b.hi	26b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x114>  // b.pmore
    263c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2640:	add	x9, x19, #0xf
    2644:	ldr	w10, [x8, #408]
    2648:	cmp	x19, #0x17
    264c:	and	x9, x9, #0xfffffffffffffff8
    2650:	mov	w11, #0x20                  	// #32
    2654:	csel	x19, x11, x9, cc  // cc = lo, ul, last
    2658:	lsr	x11, x19, #3
    265c:	lsr	x12, x10, x11
    2660:	tst	w12, #0x3
    2664:	b.eq	26ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14c>  // b.none
    2668:	mvn	w9, w12
    266c:	and	x9, x9, #0x1
    2670:	add	x9, x11, x9
    2674:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    2678:	add	x11, x11, #0x198
    267c:	add	x13, x11, x9, lsl #4
    2680:	ldr	x11, [x13, #80]
    2684:	add	x13, x13, #0x40
    2688:	mov	x20, x11
    268c:	ldr	x12, [x20, #16]!
    2690:	cmp	x12, x13
    2694:	b.eq	2774 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1d4>  // b.none
    2698:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    269c:	ldr	x8, [x8, #432]
    26a0:	cmp	x8, x12
    26a4:	b.hi	287c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2dc>  // b.pmore
    26a8:	str	x12, [x13, #16]
    26ac:	str	x13, [x12, #24]
    26b0:	b	2784 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1e4>
    26b4:	cmn	x19, #0x81
    26b8:	b.ls	26c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x124>  // b.plast
    26bc:	mov	x19, #0xffffffffffffffff    	// #-1
    26c0:	b	28b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x310>
    26c4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    26c8:	ldr	w8, [x8, #412]
    26cc:	add	x9, x19, #0xf
    26d0:	and	x19, x9, #0xfffffffffffffff8
    26d4:	cbz	w8, 28b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x310>
    26d8:	mov	x0, x19
    26dc:	bl	34ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac8>
    26e0:	mov	x20, x0
    26e4:	cbnz	x0, 295c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3bc>
    26e8:	b	28b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x310>
    26ec:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    26f0:	ldr	x9, [x9, #416]
    26f4:	cmp	x19, x9
    26f8:	b.ls	27d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x234>  // b.plast
    26fc:	cbz	w12, 27ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x20c>
    2700:	mov	w13, #0x2                   	// #2
    2704:	lsl	w12, w12, w11
    2708:	lsl	w11, w13, w11
    270c:	neg	w13, w11
    2710:	orr	w11, w11, w13
    2714:	and	w11, w12, w11
    2718:	neg	w12, w11
    271c:	and	w13, w11, w12
    2720:	tst	w11, w12
    2724:	rbit	w11, w13
    2728:	clz	w11, w11
    272c:	csinv	w13, w11, wzr, ne  // ne = any
    2730:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    2734:	add	x11, x11, #0x198
    2738:	add	x15, x11, w13, sxtw #4
    273c:	ldr	x12, [x15, #80]
    2740:	add	x15, x15, #0x40
    2744:	sxtw	x13, w13
    2748:	mov	x20, x12
    274c:	ldr	x14, [x20, #16]!
    2750:	cmp	x14, x15
    2754:	b.eq	27e4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x244>  // b.none
    2758:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    275c:	ldr	x10, [x10, #432]
    2760:	cmp	x10, x14
    2764:	b.hi	287c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2dc>  // b.pmore
    2768:	str	x14, [x15, #16]
    276c:	str	x15, [x14, #24]
    2770:	b	27f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x254>
    2774:	mov	w12, #0x1                   	// #1
    2778:	lsl	w12, w12, w9
    277c:	bic	w10, w10, w12
    2780:	str	w10, [x8, #408]
    2784:	mov	w10, #0x3                   	// #3
    2788:	bfi	x10, x9, #3, #61
    278c:	str	x10, [x11, #8]
    2790:	add	x9, x11, x9, lsl #3
    2794:	ldr	x10, [x9, #8]
    2798:	mov	w8, wzr
    279c:	orr	x10, x10, #0x1
    27a0:	str	x10, [x9, #8]
    27a4:	tbnz	wzr, #0, 28b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x310>
    27a8:	b	295c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3bc>
    27ac:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    27b0:	ldr	w8, [x8, #412]
    27b4:	cbz	w8, 27d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x234>
    27b8:	mov	x0, x19
    27bc:	bl	326c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x848>
    27c0:	cbz	x0, 27d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x234>
    27c4:	mov	x20, x0
    27c8:	mov	w8, wzr
    27cc:	tbnz	wzr, #0, 28b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x310>
    27d0:	b	295c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3bc>
    27d4:	mov	x20, xzr
    27d8:	mov	w8, #0x1                   	// #1
    27dc:	tbnz	w8, #0, 28b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x310>
    27e0:	b	295c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3bc>
    27e4:	mov	w14, #0x1                   	// #1
    27e8:	lsl	w14, w14, w13
    27ec:	bic	w10, w10, w14
    27f0:	str	w10, [x8, #408]
    27f4:	lsl	x14, x13, #3
    27f8:	sub	x10, x14, x19
    27fc:	cmp	x10, #0x1f
    2800:	b.hi	2828 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x288>  // b.pmore
    2804:	orr	x8, x14, #0x3
    2808:	str	x8, [x12, #8]
    280c:	add	x8, x12, x14
    2810:	ldr	x9, [x8, #8]
    2814:	orr	x9, x9, #0x1
    2818:	str	x9, [x8, #8]
    281c:	mov	w8, wzr
    2820:	tbnz	wzr, #0, 28b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x310>
    2824:	b	295c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3bc>
    2828:	orr	x15, x19, #0x3
    282c:	add	x13, x12, x19
    2830:	orr	x16, x10, #0x1
    2834:	str	x15, [x12, #8]
    2838:	str	x16, [x13, #8]
    283c:	str	x10, [x12, x14]
    2840:	cbz	x9, 2898 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2f8>
    2844:	ldr	w14, [x11]
    2848:	ldr	x12, [x11, #32]
    284c:	lsr	x9, x9, #3
    2850:	add	x15, x11, x9, lsl #4
    2854:	mov	w11, #0x1                   	// #1
    2858:	lsl	w11, w11, w9
    285c:	tst	w14, w11
    2860:	add	x9, x15, #0x40
    2864:	b.eq	2880 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2e0>  // b.none
    2868:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    286c:	ldr	x8, [x9, #16]
    2870:	ldr	x11, [x11, #432]
    2874:	cmp	x11, x8
    2878:	b.ls	288c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2ec>  // b.plast
    287c:	bl	1ad0 <abort@plt>
    2880:	orr	w11, w14, w11
    2884:	str	w11, [x8, #408]
    2888:	mov	x8, x9
    288c:	str	x12, [x9, #16]
    2890:	str	x12, [x8, #24]
    2894:	stp	x8, x9, [x12, #16]
    2898:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    289c:	add	x8, x8, #0x1a0
    28a0:	str	x10, [x8]
    28a4:	str	x13, [x8, #24]
    28a8:	mov	w8, wzr
    28ac:	tbz	wzr, #0, 295c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3bc>
    28b0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    28b4:	ldr	x9, [x8, #416]
    28b8:	subs	x10, x9, x19
    28bc:	b.cs	2908 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x368>  // b.hs, b.nlast
    28c0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    28c4:	ldr	x8, [x8, #424]
    28c8:	subs	x8, x8, x19
    28cc:	b.ls	2950 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3b0>  // b.plast
    28d0:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    28d4:	add	x9, x9, #0x1a8
    28d8:	ldr	x10, [x9, #24]
    28dc:	orr	x11, x8, #0x1
    28e0:	orr	x12, x19, #0x3
    28e4:	str	x8, [x9]
    28e8:	add	x8, x10, x19
    28ec:	str	x8, [x9, #24]
    28f0:	str	x11, [x8, #8]
    28f4:	str	x12, [x10, #8]
    28f8:	add	x20, x10, #0x10
    28fc:	ldrb	w8, [x21, #1272]
    2900:	tbnz	w8, #1, 2964 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3c4>
    2904:	b	2970 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3d0>
    2908:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    290c:	ldr	x8, [x8, #440]
    2910:	cmp	x10, #0x20
    2914:	b.cc	2984 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3e4>  // b.lo, b.ul, b.last
    2918:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    291c:	add	x11, x8, x19
    2920:	add	x12, x12, #0x1a0
    2924:	orr	x13, x10, #0x1
    2928:	orr	x14, x19, #0x3
    292c:	str	x11, [x12, #24]
    2930:	str	x10, [x12]
    2934:	str	x13, [x11, #8]
    2938:	str	x10, [x8, x9]
    293c:	str	x14, [x8, #8]
    2940:	add	x20, x8, #0x10
    2944:	ldrb	w8, [x21, #1272]
    2948:	tbnz	w8, #1, 2964 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3c4>
    294c:	b	2970 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3d0>
    2950:	mov	x0, x19
    2954:	bl	39fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd8>
    2958:	mov	x20, x0
    295c:	ldrb	w8, [x21, #1272]
    2960:	tbz	w8, #1, 2970 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3d0>
    2964:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2968:	add	x0, x0, #0x500
    296c:	bl	1c10 <pthread_mutex_unlock@plt>
    2970:	mov	x0, x20
    2974:	ldp	x20, x19, [sp, #32]
    2978:	ldr	x21, [sp, #16]
    297c:	ldp	x29, x30, [sp], #48
    2980:	ret
    2984:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2988:	add	x10, x10, #0x1a0
    298c:	orr	x11, x9, #0x3
    2990:	str	xzr, [x10]
    2994:	str	xzr, [x10, #24]
    2998:	str	x11, [x8, #8]
    299c:	add	x9, x8, x9
    29a0:	ldr	x10, [x9, #8]
    29a4:	add	x20, x8, #0x10
    29a8:	orr	x10, x10, #0x1
    29ac:	str	x10, [x9, #8]
    29b0:	ldrb	w8, [x21, #1272]
    29b4:	tbnz	w8, #1, 2964 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3c4>
    29b8:	b	2970 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3d0>
    29bc:	mov	x8, x0
    29c0:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    29c4:	add	x0, x0, #0x530
    29c8:	b	29d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x434>
    29cc:	ldr	x0, [x0, #16]
    29d0:	cbz	x0, 29f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x450>
    29d4:	ldr	x9, [x0]
    29d8:	cmp	x9, x8
    29dc:	b.hi	29cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x42c>  // b.pmore
    29e0:	ldr	x10, [x0, #8]
    29e4:	add	x9, x9, x10
    29e8:	cmp	x9, x8
    29ec:	b.ls	29cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x42c>  // b.plast
    29f0:	ret
    29f4:	stp	x29, x30, [sp, #-32]!
    29f8:	str	x19, [sp, #16]
    29fc:	mov	x29, sp
    2a00:	mov	x19, x0
    2a04:	bl	29bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x41c>
    2a08:	cbz	x0, 2a14 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x474>
    2a0c:	ldr	x8, [x0, #24]
    2a10:	add	x19, x19, x8
    2a14:	mov	x0, x19
    2a18:	ldr	x19, [sp, #16]
    2a1c:	ldp	x29, x30, [sp], #32
    2a20:	ret

0000000000002a24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0>:
    2a24:	stp	x29, x30, [sp, #-16]!
    2a28:	mov	x29, sp
    2a2c:	bl	2a38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14>
    2a30:	ldp	x29, x30, [sp], #16
    2a34:	ret
    2a38:	stp	x29, x30, [sp, #-64]!
    2a3c:	str	x23, [sp, #16]
    2a40:	stp	x22, x21, [sp, #32]
    2a44:	stp	x20, x19, [sp, #48]
    2a48:	mov	x29, sp
    2a4c:	cbz	x0, 2ee4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c0>
    2a50:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2a54:	ldr	x8, [x8, #1504]
    2a58:	mov	x19, x0
    2a5c:	cbnz	x8, 2a64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x40>
    2a60:	bl	3184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x760>
    2a64:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    2a68:	ldrb	w8, [x20, #1272]
    2a6c:	tbz	w8, #1, 2a80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5c>
    2a70:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2a74:	add	x0, x0, #0x500
    2a78:	bl	1c00 <pthread_mutex_lock@plt>
    2a7c:	cbnz	w0, 2ee4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c0>
    2a80:	adrp	x22, 17000 <memcpy@GLIBC_2.17>
    2a84:	ldr	x10, [x22, #432]
    2a88:	sub	x21, x19, #0x10
    2a8c:	cmp	x21, x10
    2a90:	b.cc	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.lo, b.ul, b.last
    2a94:	ldur	x8, [x19, #-8]
    2a98:	tbz	w8, #1, 3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>
    2a9c:	and	x19, x8, #0xfffffffffffffffc
    2aa0:	add	x23, x21, x19
    2aa4:	tbnz	w8, #0, 2b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x168>
    2aa8:	ldr	x9, [x21]
    2aac:	tbnz	w9, #0, 2b28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x104>
    2ab0:	sub	x21, x21, x9
    2ab4:	cmp	x21, x10
    2ab8:	add	x19, x9, x19
    2abc:	b.cc	3178 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x754>  // b.lo, b.ul, b.last
    2ac0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2ac4:	ldr	x8, [x8, #440]
    2ac8:	cmp	x8, x21
    2acc:	b.eq	2b58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x134>  // b.none
    2ad0:	cmp	x9, #0xff
    2ad4:	b.hi	2d08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2e4>  // b.pmore
    2ad8:	ldp	x8, x11, [x21, #16]
    2adc:	lsr	x12, x9, #3
    2ae0:	cmp	x8, x11
    2ae4:	b.eq	2ef8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4d4>  // b.none
    2ae8:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2aec:	add	x9, x9, #0x198
    2af0:	add	x9, x9, x12, lsl #4
    2af4:	add	x9, x9, #0x40
    2af8:	cmp	x8, x9
    2afc:	b.eq	2b08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe4>  // b.none
    2b00:	cmp	x10, x8
    2b04:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2b08:	cmp	x11, x9
    2b0c:	b.eq	2b18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf4>  // b.none
    2b10:	cmp	x10, x11
    2b14:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2b18:	mov	w9, wzr
    2b1c:	str	x11, [x8, #24]
    2b20:	str	x8, [x11, #16]
    2b24:	b	2b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164>
    2b28:	and	x8, x9, #0xfffffffffffffffe
    2b2c:	add	x9, x19, x8
    2b30:	add	x19, x9, #0x20
    2b34:	sub	x0, x21, x8
    2b38:	mov	x1, x19
    2b3c:	bl	4c4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2228>
    2b40:	cbnz	w0, 2b84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    2b44:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2b48:	ldr	x9, [x8, #1256]
    2b4c:	sub	x9, x9, x19
    2b50:	str	x9, [x8, #1256]
    2b54:	b	2b84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    2b58:	ldr	x8, [x23, #8]
    2b5c:	mvn	w9, w8
    2b60:	tst	x9, #0x3
    2b64:	b.ne	30e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6bc>  // b.any
    2b68:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2b6c:	and	x8, x8, #0xfffffffffffffffe
    2b70:	orr	x10, x19, #0x1
    2b74:	str	x19, [x9, #416]
    2b78:	str	x8, [x23, #8]
    2b7c:	str	x10, [x21, #8]
    2b80:	str	x19, [x21, x19]
    2b84:	mov	w9, #0x2                   	// #2
    2b88:	cbnz	w9, 2ec8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a4>
    2b8c:	cmp	x23, x21
    2b90:	b.ls	3170 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x74c>  // b.plast
    2b94:	ldr	x8, [x23, #8]
    2b98:	tbz	w8, #0, 3170 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x74c>
    2b9c:	tbnz	w8, #1, 2c1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f8>
    2ba0:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x9, [x9, #448]
    2ba8:	cmp	x9, x23
    2bac:	b.eq	2c8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.none
    2bb0:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x10, [x9, #440]
    2bb8:	cmp	x10, x23
    2bbc:	b.eq	2ce0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2bc>  // b.none
    2bc0:	cmp	x8, #0xff
    2bc4:	b.hi	2d58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x334>  // b.pmore
    2bc8:	ldp	x10, x11, [x23, #16]
    2bcc:	lsr	x12, x8, #3
    2bd0:	cmp	x10, x11
    2bd4:	b.eq	2f9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x578>  // b.none
    2bd8:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    2bdc:	add	x13, x13, #0x198
    2be0:	add	x12, x13, x12, lsl #4
    2be4:	add	x12, x12, #0x40
    2be8:	cmp	x10, x12
    2bec:	b.eq	2bfc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d8>  // b.none
    2bf0:	ldr	x13, [x22, #432]
    2bf4:	cmp	x13, x10
    2bf8:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2bfc:	cmp	x11, x12
    2c00:	b.eq	2c10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ec>  // b.none
    2c04:	ldr	x12, [x22, #432]
    2c08:	cmp	x12, x11
    2c0c:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2c10:	str	x11, [x10, #24]
    2c14:	str	x10, [x11, #16]
    2c18:	b	3130 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x70c>
    2c1c:	and	x8, x8, #0xfffffffffffffffe
    2c20:	orr	x9, x19, #0x1
    2c24:	str	x8, [x23, #8]
    2c28:	str	x9, [x21, #8]
    2c2c:	str	x19, [x21, x19]
    2c30:	cmp	x19, #0xff
    2c34:	b.hi	2c74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x250>  // b.pmore
    2c38:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2c3c:	add	x10, x10, #0x198
    2c40:	ldr	w9, [x10]
    2c44:	lsr	x8, x19, #3
    2c48:	add	x11, x10, x8, lsl #4
    2c4c:	mov	w10, #0x1                   	// #1
    2c50:	lsl	w10, w10, w8
    2c54:	tst	w9, w10
    2c58:	add	x8, x11, #0x40
    2c5c:	b.eq	2d30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x30c>  // b.none
    2c60:	ldr	x9, [x8, #16]
    2c64:	ldr	x10, [x22, #432]
    2c68:	cmp	x10, x9
    2c6c:	b.ls	2d40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x31c>  // b.plast
    2c70:	b	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>
    2c74:	lsr	x8, x19, #8
    2c78:	cbz	x8, 2d50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x32c>
    2c7c:	lsr	x9, x19, #24
    2c80:	cbz	x9, 2d84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x360>
    2c84:	mov	w9, #0x1f                  	// #31
    2c88:	b	2ddc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b8>
    2c8c:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2c90:	add	x9, x9, #0x1a8
    2c94:	ldr	x8, [x9]
    2c98:	str	x21, [x9, #24]
    2c9c:	add	x8, x8, x19
    2ca0:	orr	x10, x8, #0x1
    2ca4:	str	x8, [x9]
    2ca8:	str	x10, [x21, #8]
    2cac:	ldr	x9, [x9, #16]
    2cb0:	cmp	x21, x9
    2cb4:	b.ne	2cc8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2a4>  // b.any
    2cb8:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2cbc:	add	x9, x9, #0x1a0
    2cc0:	str	xzr, [x9, #24]
    2cc4:	str	xzr, [x9]
    2cc8:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2ccc:	ldr	x9, [x9, #456]
    2cd0:	cmp	x8, x9
    2cd4:	b.ls	2ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>  // b.plast
    2cd8:	bl	4c98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2274>
    2cdc:	b	2ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>
    2ce0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2ce4:	add	x8, x8, #0x1a0
    2ce8:	ldr	x9, [x8]
    2cec:	str	x21, [x8, #24]
    2cf0:	add	x9, x9, x19
    2cf4:	str	x9, [x8]
    2cf8:	orr	x8, x9, #0x1
    2cfc:	str	x8, [x21, #8]
    2d00:	str	x9, [x21, x9]
    2d04:	b	2ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>
    2d08:	ldr	x8, [x21, #24]
    2d0c:	ldr	x9, [x21, #48]
    2d10:	cmp	x8, x21
    2d14:	b.eq	2f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f4>  // b.none
    2d18:	ldr	x11, [x21, #16]
    2d1c:	cmp	x10, x11
    2d20:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2d24:	str	x8, [x11, #24]
    2d28:	str	x11, [x8, #16]
    2d2c:	b	2f5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x538>
    2d30:	orr	w9, w9, w10
    2d34:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2d38:	str	w9, [x10, #408]
    2d3c:	mov	x9, x8
    2d40:	str	x21, [x8, #16]
    2d44:	str	x21, [x9, #24]
    2d48:	stp	x9, x8, [x21, #16]
    2d4c:	b	2ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>
    2d50:	mov	x9, xzr
    2d54:	b	2ddc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b8>
    2d58:	ldr	x10, [x23, #24]
    2d5c:	ldr	x11, [x23, #48]
    2d60:	cmp	x10, x23
    2d64:	b.eq	2fb8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x594>  // b.none
    2d68:	ldr	x12, [x23, #16]
    2d6c:	ldr	x13, [x22, #432]
    2d70:	cmp	x13, x12
    2d74:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2d78:	str	x10, [x12, #24]
    2d7c:	str	x12, [x10, #16]
    2d80:	b	3000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5dc>
    2d84:	mov	w9, #0xfff00               	// #1048320
    2d88:	add	w9, w8, w9
    2d8c:	lsr	w9, w9, #16
    2d90:	and	w9, w9, #0x8
    2d94:	lsl	w8, w8, w9
    2d98:	add	w10, w8, #0x7f, lsl #12
    2d9c:	lsr	w10, w10, #16
    2da0:	and	w10, w10, #0x4
    2da4:	lsl	w8, w8, w10
    2da8:	orr	w9, w10, w9
    2dac:	add	w10, w8, #0x3c, lsl #12
    2db0:	lsr	w10, w10, #16
    2db4:	and	w10, w10, #0x2
    2db8:	lsl	w8, w8, w10
    2dbc:	orr	w9, w9, w10
    2dc0:	lsr	w8, w8, #15
    2dc4:	sub	w8, w8, w9
    2dc8:	lsl	w9, w8, #1
    2dcc:	add	w8, w8, #0x15
    2dd0:	add	w9, w9, #0x1c
    2dd4:	lsr	x8, x19, x8
    2dd8:	bfxil	x9, x8, #0, #1
    2ddc:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2de0:	add	x8, x8, #0x198
    2de4:	str	x9, [x21, #56]
    2de8:	stp	xzr, xzr, [x21, #32]
    2dec:	ldr	w10, [x8, #4]
    2df0:	mov	w11, #0x1                   	// #1
    2df4:	add	x8, x8, x9, lsl #3
    2df8:	lsl	w11, w11, w9
    2dfc:	tst	w10, w11
    2e00:	add	x8, x8, #0x250
    2e04:	b.eq	2e80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x45c>  // b.none
    2e08:	ldr	x8, [x8]
    2e0c:	mov	w10, #0x39                  	// #57
    2e10:	sub	x10, x10, x9, lsr #1
    2e14:	cmp	x9, #0x1f
    2e18:	csel	x9, xzr, x10, eq  // eq = none
    2e1c:	lsl	x9, x19, x9
    2e20:	b	2e34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x410>
    2e24:	mov	w10, #0x1                   	// #1
    2e28:	mov	x8, x12
    2e2c:	lsl	x9, x9, #1
    2e30:	tbz	w10, #0, 2ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>
    2e34:	ldr	x10, [x8, #8]
    2e38:	and	x10, x10, #0xfffffffffffffffc
    2e3c:	cmp	x10, x19
    2e40:	b.eq	2e9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x478>  // b.none
    2e44:	lsr	x10, x9, #60
    2e48:	and	x10, x10, #0x8
    2e4c:	add	x11, x8, x10
    2e50:	ldr	x12, [x11, #32]!
    2e54:	cbnz	x12, 2e24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x400>
    2e58:	ldr	x10, [x22, #432]
    2e5c:	cmp	x10, x11
    2e60:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2e64:	mov	w10, wzr
    2e68:	str	x21, [x11]
    2e6c:	str	x8, [x21, #48]
    2e70:	stp	x21, x21, [x21, #16]
    2e74:	lsl	x9, x9, #1
    2e78:	tbnz	w10, #0, 2e34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x410>
    2e7c:	b	2ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>
    2e80:	orr	w9, w10, w11
    2e84:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2e88:	str	w9, [x10, #412]
    2e8c:	str	x21, [x8]
    2e90:	str	x8, [x21, #48]
    2e94:	stp	x21, x21, [x21, #16]
    2e98:	b	2ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>
    2e9c:	ldr	x9, [x8, #16]
    2ea0:	ldr	x10, [x22, #432]
    2ea4:	cmp	x10, x9
    2ea8:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2eac:	cmp	x10, x8
    2eb0:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2eb4:	str	x21, [x9, #24]
    2eb8:	str	x21, [x8, #16]
    2ebc:	stp	x9, x8, [x21, #16]
    2ec0:	str	xzr, [x21, #48]
    2ec4:	mov	w9, #0x2                   	// #2
    2ec8:	cmp	w9, #0x2
    2ecc:	b.ne	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.any
    2ed0:	ldrb	w8, [x20, #1272]
    2ed4:	tbz	w8, #1, 2ee4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c0>
    2ed8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2edc:	add	x0, x0, #0x500
    2ee0:	bl	1c10 <pthread_mutex_unlock@plt>
    2ee4:	ldp	x20, x19, [sp, #48]
    2ee8:	ldp	x22, x21, [sp, #32]
    2eec:	ldr	x23, [sp, #16]
    2ef0:	ldp	x29, x30, [sp], #64
    2ef4:	ret
    2ef8:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2efc:	ldr	w10, [x8, #408]
    2f00:	mov	w11, #0x1                   	// #1
    2f04:	lsl	w11, w11, w12
    2f08:	mov	w9, wzr
    2f0c:	bic	w10, w10, w11
    2f10:	str	w10, [x8, #408]
    2f14:	b	2b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164>
    2f18:	mov	x11, x21
    2f1c:	ldr	x8, [x11, #40]!
    2f20:	cbnz	x8, 2f38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x514>
    2f24:	ldr	x8, [x11, #-8]!
    2f28:	cbnz	x8, 2f38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x514>
    2f2c:	b	2f5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x538>
    2f30:	ldr	x8, [x12]
    2f34:	mov	x11, x12
    2f38:	mov	x12, x8
    2f3c:	ldr	x13, [x12, #40]!
    2f40:	cbnz	x13, 2f30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x50c>
    2f44:	mov	x12, x8
    2f48:	ldr	x13, [x12, #32]!
    2f4c:	cbnz	x13, 2f30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x50c>
    2f50:	cmp	x10, x11
    2f54:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2f58:	str	xzr, [x11]
    2f5c:	cbz	x9, 2b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164>
    2f60:	ldr	x10, [x21, #56]
    2f64:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    2f68:	add	x11, x11, #0x198
    2f6c:	add	x11, x11, x10, lsl #3
    2f70:	ldr	x12, [x11, #592]
    2f74:	cmp	x12, x21
    2f78:	b.eq	3040 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x61c>  // b.none
    2f7c:	ldr	x10, [x22, #432]
    2f80:	cmp	x10, x9
    2f84:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2f88:	ldr	x10, [x9, #32]
    2f8c:	cmp	x10, x21
    2f90:	b.eq	3090 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x66c>  // b.none
    2f94:	str	x8, [x9, #40]
    2f98:	b	3094 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x670>
    2f9c:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2fa0:	ldr	w11, [x10, #408]
    2fa4:	mov	w13, #0x1                   	// #1
    2fa8:	lsl	w12, w13, w12
    2fac:	bic	w11, w11, w12
    2fb0:	str	w11, [x10, #408]
    2fb4:	b	3130 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x70c>
    2fb8:	mov	x12, x23
    2fbc:	ldr	x10, [x12, #40]!
    2fc0:	cbnz	x10, 2fd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5b4>
    2fc4:	ldr	x10, [x12, #-8]!
    2fc8:	cbnz	x10, 2fd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5b4>
    2fcc:	b	3000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5dc>
    2fd0:	ldr	x10, [x13]
    2fd4:	mov	x12, x13
    2fd8:	mov	x13, x10
    2fdc:	ldr	x14, [x13, #40]!
    2fe0:	cbnz	x14, 2fd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5ac>
    2fe4:	mov	x13, x10
    2fe8:	ldr	x14, [x13, #32]!
    2fec:	cbnz	x14, 2fd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5ac>
    2ff0:	ldr	x13, [x22, #432]
    2ff4:	cmp	x13, x12
    2ff8:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    2ffc:	str	xzr, [x12]
    3000:	cbz	x11, 3130 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x70c>
    3004:	ldr	x12, [x23, #56]
    3008:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    300c:	add	x13, x13, #0x198
    3010:	add	x13, x13, x12, lsl #3
    3014:	ldr	x14, [x13, #592]
    3018:	cmp	x14, x23
    301c:	b.eq	3068 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x644>  // b.none
    3020:	ldr	x12, [x22, #432]
    3024:	cmp	x12, x11
    3028:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    302c:	ldr	x12, [x11, #32]
    3030:	cmp	x12, x23
    3034:	b.eq	30e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6c4>  // b.none
    3038:	str	x10, [x11, #40]
    303c:	b	30ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6c8>
    3040:	add	x11, x11, #0x250
    3044:	str	x8, [x11]
    3048:	cbnz	x8, 3098 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x674>
    304c:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3050:	ldr	w12, [x11, #412]
    3054:	mov	w13, #0x1                   	// #1
    3058:	lsl	w10, w13, w10
    305c:	bic	w10, w12, w10
    3060:	str	w10, [x11, #412]
    3064:	b	3094 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x670>
    3068:	add	x13, x13, #0x250
    306c:	str	x10, [x13]
    3070:	cbnz	x10, 30f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6cc>
    3074:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    3078:	ldr	w14, [x13, #412]
    307c:	mov	w15, #0x1                   	// #1
    3080:	lsl	w12, w15, w12
    3084:	bic	w12, w14, w12
    3088:	str	w12, [x13, #412]
    308c:	b	30ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6c8>
    3090:	str	x8, [x9, #32]
    3094:	cbz	x8, 30e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6bc>
    3098:	ldr	x10, [x22, #432]
    309c:	cmp	x10, x8
    30a0:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    30a4:	str	x9, [x8, #48]
    30a8:	ldr	x9, [x21, #32]
    30ac:	cbz	x9, 30c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x69c>
    30b0:	cmp	x10, x9
    30b4:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    30b8:	str	x9, [x8, #32]
    30bc:	str	x8, [x9, #48]
    30c0:	ldr	x11, [x21, #40]
    30c4:	cbz	x11, 30e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6bc>
    30c8:	cmp	x10, x11
    30cc:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    30d0:	mov	w9, wzr
    30d4:	str	x11, [x8, #40]
    30d8:	str	x8, [x11, #48]
    30dc:	b	2b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164>
    30e0:	mov	w9, wzr
    30e4:	b	2b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164>
    30e8:	str	x10, [x11, #32]
    30ec:	cbz	x10, 3130 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x70c>
    30f0:	ldr	x12, [x22, #432]
    30f4:	cmp	x12, x10
    30f8:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    30fc:	str	x11, [x10, #48]
    3100:	ldr	x11, [x23, #32]
    3104:	cbz	x11, 3118 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6f4>
    3108:	cmp	x12, x11
    310c:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    3110:	str	x11, [x10, #32]
    3114:	str	x10, [x11, #48]
    3118:	ldr	x11, [x23, #40]
    311c:	cbz	x11, 3130 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x70c>
    3120:	cmp	x12, x11
    3124:	b.hi	3180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x75c>  // b.pmore
    3128:	str	x11, [x10, #40]
    312c:	str	x10, [x11, #48]
    3130:	and	x8, x8, #0xfffffffffffffffc
    3134:	add	x19, x8, x19
    3138:	orr	x8, x19, #0x1
    313c:	str	x8, [x21, #8]
    3140:	str	x19, [x21, x19]
    3144:	ldr	x8, [x9, #440]
    3148:	cmp	x21, x8
    314c:	b.eq	315c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x738>  // b.none
    3150:	mov	w9, wzr
    3154:	cbnz	wzr, 2ec8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a4>
    3158:	b	2c30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20c>
    315c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3160:	mov	w9, #0x2                   	// #2
    3164:	str	x19, [x8, #416]
    3168:	cbnz	w9, 2ec8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a4>
    316c:	b	2c30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20c>
    3170:	mov	w9, wzr
    3174:	b	2ec8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a4>
    3178:	mov	w9, #0x5                   	// #5
    317c:	b	2b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164>
    3180:	bl	1ad0 <abort@plt>
    3184:	stp	x29, x30, [sp, #-48]!
    3188:	stp	x20, x19, [sp, #32]
    318c:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    3190:	ldr	x8, [x19, #1504]
    3194:	str	x21, [sp, #16]
    3198:	mov	x29, sp
    319c:	cbnz	x8, 3258 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x834>
    31a0:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    31a4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    31a8:	mov	w21, #0x1                   	// #1
    31ac:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    31b0:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    31b4:	add	x0, x0, #0x550
    31b8:	strb	w21, [x8, #1520]
    31bc:	strb	w21, [x9, #1528]
    31c0:	strb	w21, [x20, #1536]
    31c4:	bl	1c00 <pthread_mutex_lock@plt>
    31c8:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    31cc:	ldrb	w9, [x8, #1496]
    31d0:	tbnz	w9, #0, 3200 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7dc>
    31d4:	strb	w21, [x8, #1496]
    31d8:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    31dc:	add	x21, x21, #0x4f8
    31e0:	add	x0, x21, #0x8
    31e4:	mov	x1, xzr
    31e8:	bl	1a90 <pthread_mutex_init@plt>
    31ec:	ldrb	w8, [x20, #1536]
    31f0:	cmp	w8, #0x0
    31f4:	mov	w8, #0x7                   	// #7
    31f8:	csel	w8, w8, wzr, ne  // ne = any
    31fc:	str	w8, [x21]
    3200:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    3204:	add	x0, x0, #0x550
    3208:	bl	1c10 <pthread_mutex_unlock@plt>
    320c:	mov	w0, #0x1e                  	// #30
    3210:	bl	1ba0 <sysconf@plt>
    3214:	str	x0, [x19, #1504]
    3218:	mov	w0, #0x1e                  	// #30
    321c:	bl	1ba0 <sysconf@plt>
    3220:	cbz	x0, 3230 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x80c>
    3224:	mov	w0, #0x1e                  	// #30
    3228:	bl	1ba0 <sysconf@plt>
    322c:	b	3234 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x810>
    3230:	ldr	x0, [x19, #1504]
    3234:	sub	x9, x0, #0x1
    3238:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    323c:	tst	x0, x9
    3240:	str	x0, [x8, #1512]
    3244:	b.ne	3268 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x844>  // b.any
    3248:	ldr	x8, [x19, #1504]
    324c:	sub	x9, x8, #0x1
    3250:	tst	x8, x9
    3254:	b.ne	3268 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x844>  // b.any
    3258:	ldp	x20, x19, [sp, #32]
    325c:	ldr	x21, [sp, #16]
    3260:	ldp	x29, x30, [sp], #48
    3264:	ret
    3268:	bl	1ad0 <abort@plt>
    326c:	stp	x29, x30, [sp, #-16]!
    3270:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3274:	add	x10, x10, #0x198
    3278:	ldr	w13, [x10, #4]
    327c:	mov	x29, sp
    3280:	neg	w8, w13
    3284:	and	w9, w13, w8
    3288:	rbit	w9, w9
    328c:	clz	w9, w9
    3290:	tst	w13, w8
    3294:	csinv	w8, w9, wzr, ne  // ne = any
    3298:	add	x8, x10, w8, sxtw #3
    329c:	ldr	x8, [x8, #592]
    32a0:	ldr	x9, [x8, #8]
    32a4:	mov	x12, x8
    32a8:	and	x9, x9, #0xfffffffffffffffc
    32ac:	sub	x9, x9, x0
    32b0:	ldr	x11, [x12, #32]
    32b4:	cbnz	x11, 32bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x898>
    32b8:	ldr	x11, [x12, #40]
    32bc:	cbz	x11, 32e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8c4>
    32c0:	ldr	x12, [x11, #8]
    32c4:	and	x12, x12, #0xfffffffffffffffc
    32c8:	sub	x12, x12, x0
    32cc:	cmp	x12, x9
    32d0:	csel	x9, x12, x9, cc  // cc = lo, ul, last
    32d4:	csel	x8, x11, x8, cc  // cc = lo, ul, last
    32d8:	mov	x12, x11
    32dc:	ldr	x11, [x12, #32]
    32e0:	cbnz	x11, 32bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x898>
    32e4:	b	32b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x894>
    32e8:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    32ec:	ldr	x16, [x12, #432]
    32f0:	cmp	x16, x8
    32f4:	b.hi	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>  // b.pmore
    32f8:	add	x11, x8, x0
    32fc:	cmp	x11, x8
    3300:	b.ls	34e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xabc>  // b.plast
    3304:	ldr	x14, [x8, #24]
    3308:	ldr	x15, [x8, #48]
    330c:	cmp	x14, x8
    3310:	b.eq	332c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x908>  // b.none
    3314:	ldr	x17, [x8, #16]
    3318:	cmp	x16, x17
    331c:	b.hi	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>  // b.pmore
    3320:	str	x14, [x17, #24]
    3324:	str	x17, [x14, #16]
    3328:	b	3374 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x950>
    332c:	mov	x17, x8
    3330:	ldr	x14, [x17, #40]!
    3334:	cbnz	x14, 3350 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x92c>
    3338:	mov	x17, x8
    333c:	ldr	x14, [x17, #32]!
    3340:	cbnz	x14, 3350 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x92c>
    3344:	b	3374 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x950>
    3348:	ldr	x14, [x18]
    334c:	mov	x17, x18
    3350:	mov	x18, x14
    3354:	ldr	x1, [x18, #40]!
    3358:	cbnz	x1, 3348 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x924>
    335c:	mov	x18, x14
    3360:	ldr	x1, [x18, #32]!
    3364:	cbnz	x1, 3348 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x924>
    3368:	cmp	x16, x17
    336c:	b.hi	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>  // b.pmore
    3370:	str	xzr, [x17]
    3374:	cbz	x15, 3420 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9fc>
    3378:	ldr	x16, [x8, #56]
    337c:	add	x17, x10, x16, lsl #3
    3380:	ldr	x18, [x17, #592]
    3384:	cmp	x8, x18
    3388:	b.eq	33b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x98c>  // b.none
    338c:	ldr	x13, [x12, #432]
    3390:	cmp	x13, x15
    3394:	b.hi	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>  // b.pmore
    3398:	ldr	x13, [x15, #32]
    339c:	cmp	x13, x8
    33a0:	b.eq	33d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>  // b.none
    33a4:	str	x14, [x15, #40]
    33a8:	cbnz	x14, 33e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9bc>
    33ac:	b	3420 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9fc>
    33b0:	add	x17, x17, #0x250
    33b4:	str	x14, [x17]
    33b8:	cbnz	x14, 33e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9bc>
    33bc:	mov	w17, #0x1                   	// #1
    33c0:	lsl	w16, w17, w16
    33c4:	bic	w13, w13, w16
    33c8:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    33cc:	str	w13, [x16, #412]
    33d0:	cbnz	x14, 33e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9bc>
    33d4:	b	3420 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9fc>
    33d8:	str	x14, [x15, #32]
    33dc:	cbz	x14, 3420 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9fc>
    33e0:	ldr	x13, [x12, #432]
    33e4:	cmp	x13, x14
    33e8:	b.hi	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>  // b.pmore
    33ec:	str	x15, [x14, #48]
    33f0:	ldr	x15, [x8, #32]
    33f4:	cbz	x15, 3408 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9e4>
    33f8:	cmp	x13, x15
    33fc:	b.hi	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>  // b.pmore
    3400:	str	x15, [x14, #32]
    3404:	str	x14, [x15, #48]
    3408:	ldr	x15, [x8, #40]
    340c:	cbz	x15, 3420 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9fc>
    3410:	cmp	x13, x15
    3414:	b.hi	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>  // b.pmore
    3418:	str	x15, [x14, #40]
    341c:	str	x14, [x15, #48]
    3420:	cmp	x9, #0x1f
    3424:	b.hi	3448 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa24>  // b.pmore
    3428:	add	x9, x9, x0
    342c:	orr	x10, x9, #0x3
    3430:	str	x10, [x8, #8]
    3434:	add	x9, x8, x9
    3438:	ldr	x10, [x9, #8]
    343c:	orr	x10, x10, #0x1
    3440:	str	x10, [x9, #8]
    3444:	b	34cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaa8>
    3448:	orr	x13, x0, #0x3
    344c:	orr	x14, x9, #0x1
    3450:	str	x13, [x8, #8]
    3454:	str	x14, [x11, #8]
    3458:	str	x9, [x11, x9]
    345c:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    3460:	ldr	x14, [x13, #416]
    3464:	cbz	x14, 34bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa98>
    3468:	lsr	x15, x14, #3
    346c:	ldr	w14, [x10]
    3470:	ldr	x13, [x10, #32]
    3474:	mov	w16, #0x1                   	// #1
    3478:	add	x10, x10, x15, lsl #4
    347c:	lsl	w15, w16, w15
    3480:	tst	w14, w15
    3484:	add	x10, x10, #0x40
    3488:	b.eq	34a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa7c>  // b.none
    348c:	ldr	x14, [x10, #16]
    3490:	ldr	x12, [x12, #432]
    3494:	cmp	x12, x14
    3498:	b.ls	34b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa8c>  // b.plast
    349c:	b	34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>
    34a0:	orr	w12, w14, w15
    34a4:	adrp	x14, 17000 <memcpy@GLIBC_2.17>
    34a8:	str	w12, [x14, #408]
    34ac:	mov	x14, x10
    34b0:	str	x13, [x10, #16]
    34b4:	str	x13, [x14, #24]
    34b8:	stp	x14, x10, [x13, #16]
    34bc:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    34c0:	add	x10, x10, #0x1a0
    34c4:	str	x9, [x10]
    34c8:	str	x11, [x10, #24]
    34cc:	mov	w9, wzr
    34d0:	add	x0, x8, #0x10
    34d4:	cbnz	w9, 34e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>
    34d8:	ldp	x29, x30, [sp], #16
    34dc:	ret
    34e0:	mov	w9, #0x1                   	// #1
    34e4:	cbz	w9, 34d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xab4>
    34e8:	bl	1ad0 <abort@plt>
    34ec:	stp	x29, x30, [sp, #-16]!
    34f0:	lsr	x8, x0, #8
    34f4:	neg	x9, x0
    34f8:	mov	x29, sp
    34fc:	cbz	x8, 3510 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaec>
    3500:	lsr	x10, x0, #24
    3504:	cbz	x10, 3518 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaf4>
    3508:	mov	w11, #0x1f                  	// #31
    350c:	b	3570 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb4c>
    3510:	mov	x11, xzr
    3514:	b	3570 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb4c>
    3518:	mov	w10, #0xfff00               	// #1048320
    351c:	add	w10, w8, w10
    3520:	lsr	w10, w10, #16
    3524:	and	w10, w10, #0x8
    3528:	lsl	w8, w8, w10
    352c:	add	w11, w8, #0x7f, lsl #12
    3530:	lsr	w11, w11, #16
    3534:	and	w11, w11, #0x4
    3538:	lsl	w8, w8, w11
    353c:	orr	w10, w11, w10
    3540:	add	w11, w8, #0x3c, lsl #12
    3544:	lsr	w11, w11, #16
    3548:	and	w11, w11, #0x2
    354c:	lsl	w8, w8, w11
    3550:	orr	w10, w10, w11
    3554:	lsr	w8, w8, #15
    3558:	sub	w8, w8, w10
    355c:	lsl	w10, w8, #1
    3560:	add	w8, w8, #0x15
    3564:	add	w11, w10, #0x1c
    3568:	lsr	x8, x0, x8
    356c:	bfxil	x11, x8, #0, #1
    3570:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3574:	add	x10, x10, #0x198
    3578:	add	x8, x10, x11, lsl #3
    357c:	ldr	x12, [x8, #592]
    3580:	cbz	x12, 3610 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbec>
    3584:	mov	w14, #0x39                  	// #57
    3588:	sub	x14, x14, x11, lsr #1
    358c:	cmp	x11, #0x1f
    3590:	csel	x14, xzr, x14, eq  // eq = none
    3594:	mov	x13, xzr
    3598:	mov	x8, xzr
    359c:	lsl	x14, x0, x14
    35a0:	b	35d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbb4>
    35a4:	lsr	x15, x14, #60
    35a8:	and	x15, x15, #0x8
    35ac:	ldr	x16, [x12, #40]
    35b0:	add	x12, x12, x15
    35b4:	ldr	x12, [x12, #32]
    35b8:	cmp	x16, x12
    35bc:	ccmp	x16, #0x0, #0x4, ne  // ne = any
    35c0:	csel	x13, x13, x16, eq  // eq = none
    35c4:	cmp	x12, #0x0
    35c8:	cset	w15, ne  // ne = any
    35cc:	lsl	x14, x14, x15
    35d0:	csel	x12, x13, x12, eq  // eq = none
    35d4:	tbz	w15, #0, 3600 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbdc>
    35d8:	ldr	x15, [x12, #8]
    35dc:	and	x15, x15, #0xfffffffffffffffc
    35e0:	sub	x15, x15, x0
    35e4:	cmp	x15, x9
    35e8:	b.cs	35a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb80>  // b.hs, b.nlast
    35ec:	mov	x9, x15
    35f0:	mov	x8, x12
    35f4:	cbnz	x15, 35a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb80>
    35f8:	mov	x8, x12
    35fc:	tbnz	w15, #0, 35d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbb4>
    3600:	orr	x13, x12, x8
    3604:	cbz	x13, 361c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbf8>
    3608:	cbnz	x12, 36d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcac>
    360c:	b	366c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc48>
    3610:	mov	x8, xzr
    3614:	orr	x13, x12, x8
    3618:	cbnz	x13, 3608 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbe4>
    361c:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    3620:	mov	w12, #0x2                   	// #2
    3624:	ldr	w13, [x13, #412]
    3628:	lsl	w11, w12, w11
    362c:	neg	w12, w11
    3630:	orr	w11, w11, w12
    3634:	ands	w11, w13, w11
    3638:	b.eq	3664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc40>  // b.none
    363c:	neg	w12, w11
    3640:	and	w13, w11, w12
    3644:	rbit	w13, w13
    3648:	clz	w13, w13
    364c:	tst	w11, w12
    3650:	csinv	w11, w13, wzr, ne  // ne = any
    3654:	add	x11, x10, w11, sxtw #3
    3658:	ldr	x12, [x11, #592]
    365c:	cbnz	x12, 36d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcac>
    3660:	b	366c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc48>
    3664:	mov	x12, xzr
    3668:	cbnz	x12, 36d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcac>
    366c:	cbz	x8, 36f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcd4>
    3670:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3674:	ldr	x11, [x11, #416]
    3678:	sub	x11, x11, x0
    367c:	cmp	x9, x11
    3680:	b.cs	36f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcd4>  // b.hs, b.nlast
    3684:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    3688:	ldr	x15, [x12, #432]
    368c:	cmp	x15, x8
    3690:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    3694:	add	x11, x8, x0
    3698:	cmp	x11, x8
    369c:	b.ls	39f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfcc>  // b.plast
    36a0:	ldr	x13, [x8, #24]
    36a4:	ldr	x14, [x8, #48]
    36a8:	cmp	x13, x8
    36ac:	b.eq	3704 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xce0>  // b.none
    36b0:	ldr	x16, [x8, #16]
    36b4:	cmp	x15, x16
    36b8:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    36bc:	str	x13, [x16, #24]
    36c0:	str	x16, [x13, #16]
    36c4:	b	374c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd28>
    36c8:	mov	x12, x11
    36cc:	cbz	x11, 366c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc48>
    36d0:	ldr	x13, [x12, #8]
    36d4:	ldr	x11, [x12, #32]
    36d8:	and	x13, x13, #0xfffffffffffffffc
    36dc:	sub	x13, x13, x0
    36e0:	cmp	x13, x9
    36e4:	csel	x9, x13, x9, cc  // cc = lo, ul, last
    36e8:	csel	x8, x12, x8, cc  // cc = lo, ul, last
    36ec:	cbnz	x11, 36c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xca4>
    36f0:	ldr	x11, [x12, #40]
    36f4:	b	36c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xca4>
    36f8:	mov	x0, xzr
    36fc:	ldp	x29, x30, [sp], #16
    3700:	ret
    3704:	mov	x16, x8
    3708:	ldr	x13, [x16, #40]!
    370c:	cbnz	x13, 3728 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd04>
    3710:	mov	x16, x8
    3714:	ldr	x13, [x16, #32]!
    3718:	cbnz	x13, 3728 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd04>
    371c:	b	374c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd28>
    3720:	ldr	x13, [x17]
    3724:	mov	x16, x17
    3728:	mov	x17, x13
    372c:	ldr	x18, [x17, #40]!
    3730:	cbnz	x18, 3720 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcfc>
    3734:	mov	x17, x13
    3738:	ldr	x18, [x17, #32]!
    373c:	cbnz	x18, 3720 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcfc>
    3740:	cmp	x15, x16
    3744:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    3748:	str	xzr, [x16]
    374c:	cbz	x14, 37f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdd0>
    3750:	ldr	x15, [x8, #56]
    3754:	add	x16, x10, x15, lsl #3
    3758:	ldr	x17, [x16, #592]
    375c:	cmp	x8, x17
    3760:	b.eq	3784 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd60>  // b.none
    3764:	ldr	x15, [x12, #432]
    3768:	cmp	x15, x14
    376c:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    3770:	ldr	x15, [x14, #32]
    3774:	cmp	x15, x8
    3778:	b.eq	37ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd88>  // b.none
    377c:	str	x13, [x14, #40]
    3780:	b	37b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd8c>
    3784:	add	x16, x16, #0x250
    3788:	str	x13, [x16]
    378c:	cbnz	x13, 37b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd90>
    3790:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    3794:	ldr	w17, [x16, #412]
    3798:	mov	w18, #0x1                   	// #1
    379c:	lsl	w15, w18, w15
    37a0:	bic	w15, w17, w15
    37a4:	str	w15, [x16, #412]
    37a8:	b	37b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd8c>
    37ac:	str	x13, [x14, #32]
    37b0:	cbz	x13, 37f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdd0>
    37b4:	ldr	x15, [x12, #432]
    37b8:	cmp	x15, x13
    37bc:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    37c0:	str	x14, [x13, #48]
    37c4:	ldr	x14, [x8, #32]
    37c8:	cbz	x14, 37dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdb8>
    37cc:	cmp	x15, x14
    37d0:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    37d4:	str	x14, [x13, #32]
    37d8:	str	x13, [x14, #48]
    37dc:	ldr	x14, [x8, #40]
    37e0:	cbz	x14, 37f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdd0>
    37e4:	cmp	x15, x14
    37e8:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    37ec:	str	x14, [x13, #40]
    37f0:	str	x13, [x14, #48]
    37f4:	cmp	x9, #0x1f
    37f8:	b.hi	381c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf8>  // b.pmore
    37fc:	add	x9, x9, x0
    3800:	orr	x10, x9, #0x3
    3804:	str	x10, [x8, #8]
    3808:	add	x9, x8, x9
    380c:	ldr	x10, [x9, #8]
    3810:	orr	x10, x10, #0x1
    3814:	str	x10, [x9, #8]
    3818:	b	39dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfb8>
    381c:	orr	x13, x0, #0x3
    3820:	orr	x14, x9, #0x1
    3824:	cmp	x9, #0xff
    3828:	str	x13, [x8, #8]
    382c:	str	x14, [x11, #8]
    3830:	str	x9, [x11, x9]
    3834:	b.hi	386c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe48>  // b.pmore
    3838:	ldr	w13, [x10]
    383c:	lsr	x9, x9, #3
    3840:	add	x14, x10, x9, lsl #4
    3844:	mov	w10, #0x1                   	// #1
    3848:	lsl	w10, w10, w9
    384c:	tst	w13, w10
    3850:	add	x9, x14, #0x40
    3854:	b.eq	3884 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe60>  // b.none
    3858:	ldr	x10, [x9, #16]
    385c:	ldr	x12, [x12, #432]
    3860:	cmp	x12, x10
    3864:	b.ls	3894 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe70>  // b.plast
    3868:	b	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>
    386c:	lsr	x13, x9, #8
    3870:	cbz	x13, 38fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed8>
    3874:	lsr	x14, x9, #24
    3878:	cbz	x14, 38a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe80>
    387c:	mov	w13, #0x1f                  	// #31
    3880:	b	38fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed8>
    3884:	orr	w10, w13, w10
    3888:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    388c:	str	w10, [x12, #408]
    3890:	mov	x10, x9
    3894:	str	x11, [x9, #16]
    3898:	str	x11, [x10, #24]
    389c:	stp	x10, x9, [x11, #16]
    38a0:	b	39dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfb8>
    38a4:	mov	w14, #0xfff00               	// #1048320
    38a8:	add	w14, w13, w14
    38ac:	lsr	w14, w14, #16
    38b0:	and	w14, w14, #0x8
    38b4:	lsl	w13, w13, w14
    38b8:	add	w15, w13, #0x7f, lsl #12
    38bc:	lsr	w15, w15, #16
    38c0:	and	w15, w15, #0x4
    38c4:	lsl	w13, w13, w15
    38c8:	orr	w14, w15, w14
    38cc:	add	w15, w13, #0x3c, lsl #12
    38d0:	lsr	w15, w15, #16
    38d4:	and	w15, w15, #0x2
    38d8:	lsl	w13, w13, w15
    38dc:	orr	w14, w14, w15
    38e0:	lsr	w13, w13, #15
    38e4:	sub	w13, w13, w14
    38e8:	lsl	w14, w13, #1
    38ec:	add	w15, w13, #0x15
    38f0:	add	w13, w14, #0x1c
    38f4:	lsr	x14, x9, x15
    38f8:	bfxil	x13, x14, #0, #1
    38fc:	str	x13, [x11, #56]
    3900:	stp	xzr, xzr, [x11, #32]
    3904:	ldr	w14, [x10, #4]
    3908:	mov	w15, #0x1                   	// #1
    390c:	add	x10, x10, x13, lsl #3
    3910:	lsl	w15, w15, w13
    3914:	tst	w14, w15
    3918:	add	x10, x10, #0x250
    391c:	b.eq	3998 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf74>  // b.none
    3920:	ldr	x10, [x10]
    3924:	mov	w14, #0x39                  	// #57
    3928:	sub	x14, x14, x13, lsr #1
    392c:	cmp	x13, #0x1f
    3930:	csel	x13, xzr, x14, eq  // eq = none
    3934:	lsl	x13, x9, x13
    3938:	b	394c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf28>
    393c:	mov	w14, #0x1                   	// #1
    3940:	mov	x10, x16
    3944:	lsl	x13, x13, #1
    3948:	tbz	w14, #0, 39dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfb8>
    394c:	ldr	x14, [x10, #8]
    3950:	and	x14, x14, #0xfffffffffffffffc
    3954:	cmp	x14, x9
    3958:	b.eq	39b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf90>  // b.none
    395c:	lsr	x14, x13, #60
    3960:	and	x14, x14, #0x8
    3964:	add	x15, x10, x14
    3968:	ldr	x16, [x15, #32]!
    396c:	cbnz	x16, 393c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf18>
    3970:	ldr	x14, [x12, #432]
    3974:	cmp	x14, x15
    3978:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    397c:	mov	w14, wzr
    3980:	str	x11, [x15]
    3984:	str	x10, [x11, #48]
    3988:	stp	x11, x11, [x11, #16]
    398c:	lsl	x13, x13, #1
    3990:	tbnz	w14, #0, 394c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf28>
    3994:	b	39dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfb8>
    3998:	orr	w9, w14, w15
    399c:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    39a0:	str	w9, [x12, #412]
    39a4:	str	x11, [x10]
    39a8:	str	x10, [x11, #48]
    39ac:	stp	x11, x11, [x11, #16]
    39b0:	b	39dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfb8>
    39b4:	ldr	x9, [x10, #16]
    39b8:	ldr	x12, [x12, #432]
    39bc:	cmp	x12, x9
    39c0:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    39c4:	cmp	x12, x10
    39c8:	b.hi	39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.pmore
    39cc:	str	x11, [x9, #24]
    39d0:	str	x11, [x10, #16]
    39d4:	stp	x9, x10, [x11, #16]
    39d8:	str	xzr, [x11, #48]
    39dc:	mov	w9, wzr
    39e0:	add	x0, x8, #0x10
    39e4:	cbnz	w9, 39f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>
    39e8:	ldp	x29, x30, [sp], #16
    39ec:	ret
    39f0:	mov	w9, #0x1                   	// #1
    39f4:	cbz	w9, 39e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfc4>
    39f8:	bl	1ad0 <abort@plt>
    39fc:	stp	x29, x30, [sp, #-48]!
    3a00:	stp	x22, x21, [sp, #16]
    3a04:	stp	x20, x19, [sp, #32]
    3a08:	mov	x29, sp
    3a0c:	mov	x19, x0
    3a10:	bl	3184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x760>
    3a14:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3a18:	ldrb	w8, [x8, #1272]
    3a1c:	tbz	w8, #0, 3a44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1020>
    3a20:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3a24:	ldrb	w8, [x8, #1520]
    3a28:	sbfx	x8, x8, #0, #1
    3a2c:	cmp	x8, x19
    3a30:	b.hi	3a44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1020>  // b.pmore
    3a34:	mov	x0, x19
    3a38:	bl	3c9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1278>
    3a3c:	mov	x20, x0
    3a40:	cbnz	x0, 3c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1260>
    3a44:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3a48:	ldr	x8, [x8, #1512]
    3a4c:	add	x9, x19, x8
    3a50:	add	x9, x9, #0x49
    3a54:	neg	x8, x8
    3a58:	and	x22, x9, x8
    3a5c:	cmp	x22, x19
    3a60:	b.ls	3a88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1064>  // b.plast
    3a64:	mov	x0, x22
    3a68:	bl	3d78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1354>
    3a6c:	cmn	x0, #0x1
    3a70:	mov	x21, x0
    3a74:	cset	w2, ne  // ne = any
    3a78:	csel	x22, xzr, x22, eq  // eq = none
    3a7c:	cmn	x21, #0x1
    3a80:	b.ne	3a9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1078>  // b.any
    3a84:	b	3c74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1250>
    3a88:	mov	w2, wzr
    3a8c:	mov	x22, xzr
    3a90:	mov	x21, #0xffffffffffffffff    	// #-1
    3a94:	cmn	x21, #0x1
    3a98:	b.eq	3c74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1250>  // b.none
    3a9c:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3aa0:	add	x9, x9, #0x4e8
    3aa4:	ldp	x8, x10, [x9]
    3aa8:	add	x8, x8, x22
    3aac:	cmp	x8, x10
    3ab0:	str	x8, [x9]
    3ab4:	b.ls	3ac0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x109c>  // b.plast
    3ab8:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3abc:	str	x8, [x9, #1264]
    3ac0:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3ac4:	ldr	x0, [x9, #448]
    3ac8:	cbz	x0, 3af0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10cc>
    3acc:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3ad0:	add	x8, x8, #0x530
    3ad4:	ldp	x12, x10, [x8]
    3ad8:	add	x11, x12, x10
    3adc:	cmp	x21, x11
    3ae0:	b.eq	3b64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1140>  // b.none
    3ae4:	ldr	x8, [x8, #16]
    3ae8:	cbnz	x8, 3ad4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10b0>
    3aec:	b	3bac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1188>
    3af0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3af4:	add	x8, x8, #0x1b0
    3af8:	str	x21, [x8]
    3afc:	str	x21, [x8, #896]
    3b00:	str	x22, [x8, #904]
    3b04:	cbz	w2, 3c98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1274>
    3b08:	add	x8, x21, x22
    3b0c:	ldur	x9, [x8, #-8]
    3b10:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3b14:	str	x9, [x10, #1352]
    3b18:	add	x10, x21, x9
    3b1c:	add	x10, x10, x22
    3b20:	ldur	x10, [x10, #-8]
    3b24:	cmp	x10, x9
    3b28:	b.ne	3c98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1274>  // b.any
    3b2c:	stur	xzr, [x8, #-8]
    3b30:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3b34:	ldrb	w8, [x8, #1496]
    3b38:	mov	w9, #0x5858                	// #22616
    3b3c:	movk	w9, #0x5858, lsl #16
    3b40:	cmp	w8, #0x0
    3b44:	csel	x8, x9, xzr, ne  // ne = any
    3b48:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3b4c:	str	x8, [x9, #464]
    3b50:	bl	3e60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x143c>
    3b54:	sub	x1, x22, #0x48
    3b58:	mov	x0, x21
    3b5c:	bl	3e88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1464>
    3b60:	b	3c34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1210>
    3b64:	cbz	w2, 3bac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1188>
    3b68:	add	x13, x21, x22
    3b6c:	ldur	x13, [x13, #-8]
    3b70:	ldr	x14, [x8, #24]
    3b74:	cmp	x13, x14
    3b78:	b.ne	3bac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1188>  // b.any
    3b7c:	ldr	x9, [x9, #448]
    3b80:	cmp	x9, x12
    3b84:	b.cc	3bac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1188>  // b.lo, b.ul, b.last
    3b88:	cmp	x9, x11
    3b8c:	b.cs	3bac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1188>  // b.hs, b.nlast
    3b90:	add	x9, x10, x22
    3b94:	str	x9, [x8, #8]
    3b98:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3b9c:	ldr	x8, [x8, #424]
    3ba0:	add	x1, x8, x22
    3ba4:	bl	3e88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1464>
    3ba8:	b	3c2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1208>
    3bac:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3bb0:	ldr	x9, [x8, #432]
    3bb4:	cmp	x21, x9
    3bb8:	b.cs	3bc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x119c>  // b.hs, b.nlast
    3bbc:	str	x21, [x8, #432]
    3bc0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3bc4:	add	x9, x21, x22
    3bc8:	add	x8, x8, #0x530
    3bcc:	ldr	x1, [x8]
    3bd0:	cmp	x1, x9
    3bd4:	b.eq	3be4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11c0>  // b.none
    3bd8:	ldr	x8, [x8, #16]
    3bdc:	cbnz	x8, 3bcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11a8>
    3be0:	b	3c20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11fc>
    3be4:	cbz	w2, 3c20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11fc>
    3be8:	ldur	x9, [x9, #-8]
    3bec:	ldr	x10, [x8, #24]
    3bf0:	cmp	x9, x10
    3bf4:	b.ne	3c20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11fc>  // b.any
    3bf8:	ldr	x9, [x8, #8]
    3bfc:	mov	x0, x21
    3c00:	mov	x2, x19
    3c04:	add	x9, x9, x22
    3c08:	stp	x21, x9, [x8]
    3c0c:	bl	3ee4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14c0>
    3c10:	mov	x20, x0
    3c14:	mov	w8, wzr
    3c18:	cbz	w8, 3c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1260>
    3c1c:	b	3c34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1210>
    3c20:	mov	x0, x21
    3c24:	mov	x1, x22
    3c28:	bl	4350 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x192c>
    3c2c:	mov	w8, #0x1                   	// #1
    3c30:	cbz	w8, 3c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1260>
    3c34:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3c38:	ldr	x8, [x8, #424]
    3c3c:	subs	x8, x8, x19
    3c40:	b.ls	3c74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1250>  // b.plast
    3c44:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3c48:	add	x9, x9, #0x1a8
    3c4c:	ldr	x10, [x9, #24]
    3c50:	orr	x11, x8, #0x1
    3c54:	orr	x12, x19, #0x3
    3c58:	str	x8, [x9]
    3c5c:	add	x8, x10, x19
    3c60:	str	x8, [x9, #24]
    3c64:	str	x11, [x8, #8]
    3c68:	str	x12, [x10, #8]
    3c6c:	add	x20, x10, #0x10
    3c70:	b	3c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1260>
    3c74:	bl	1bd0 <__errno_location@plt>
    3c78:	mov	x20, xzr
    3c7c:	mov	w8, #0xc                   	// #12
    3c80:	str	w8, [x0]
    3c84:	mov	x0, x20
    3c88:	ldp	x20, x19, [sp, #32]
    3c8c:	ldp	x22, x21, [sp, #16]
    3c90:	ldp	x29, x30, [sp], #48
    3c94:	ret
    3c98:	bl	1ad0 <abort@plt>
    3c9c:	stp	x29, x30, [sp, #-32]!
    3ca0:	str	x19, [sp, #16]
    3ca4:	mov	x29, sp
    3ca8:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3cac:	ldr	x8, [x8, #1512]
    3cb0:	add	x9, x0, x8
    3cb4:	add	x9, x9, #0x37
    3cb8:	neg	x8, x8
    3cbc:	and	x19, x9, x8
    3cc0:	cmp	x19, x0
    3cc4:	b.ls	3d5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1338>  // b.plast
    3cc8:	mov	x0, x19
    3ccc:	bl	3d78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1354>
    3cd0:	cmn	x0, #0x1
    3cd4:	b.eq	3d6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1348>  // b.none
    3cd8:	add	x8, x0, #0x10
    3cdc:	neg	w9, w8
    3ce0:	tst	x8, #0x7
    3ce4:	and	x8, x9, #0x7
    3ce8:	csel	x9, xzr, x8, eq  // eq = none
    3cec:	sub	x10, x19, x9
    3cf0:	sub	x11, x10, #0x20
    3cf4:	add	x8, x0, x9
    3cf8:	orr	x9, x9, #0x1
    3cfc:	orr	x12, x11, #0x2
    3d00:	stp	x9, x12, [x8]
    3d04:	mov	w9, #0xb                   	// #11
    3d08:	add	x10, x10, x8
    3d0c:	add	x11, x8, x11
    3d10:	str	x9, [x11, #8]
    3d14:	stur	xzr, [x10, #-16]
    3d18:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3d1c:	ldr	x10, [x9, #432]
    3d20:	cmp	x0, x10
    3d24:	b.cs	3d2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1308>  // b.hs, b.nlast
    3d28:	str	x0, [x9, #432]
    3d2c:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3d30:	add	x10, x10, #0x4e8
    3d34:	ldp	x9, x11, [x10]
    3d38:	add	x9, x9, x19
    3d3c:	cmp	x9, x11
    3d40:	str	x9, [x10]
    3d44:	b.ls	3d50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x132c>  // b.plast
    3d48:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3d4c:	str	x9, [x10, #1264]
    3d50:	mov	w9, wzr
    3d54:	add	x0, x8, #0x10
    3d58:	cbz	w9, 3d60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x133c>
    3d5c:	mov	x0, xzr
    3d60:	ldr	x19, [sp, #16]
    3d64:	ldp	x29, x30, [sp], #32
    3d68:	ret
    3d6c:	mov	w9, #0x1                   	// #1
    3d70:	cbnz	w9, 3d5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1338>
    3d74:	b	3d60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x133c>
    3d78:	stp	x29, x30, [sp, #-48]!
    3d7c:	str	x21, [sp, #16]
    3d80:	stp	x20, x19, [sp, #32]
    3d84:	mov	x29, sp
    3d88:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    3d8c:	ldr	w8, [x21, #392]
    3d90:	mov	x19, x0
    3d94:	cmn	w8, #0x1
    3d98:	b.eq	3dfc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13d8>  // b.none
    3d9c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3da0:	ldr	x8, [x8, #1408]
    3da4:	cbz	x8, 3dc4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13a0>
    3da8:	ldr	w8, [x21, #392]
    3dac:	cmn	w8, #0x1
    3db0:	b.eq	3dc4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13a0>  // b.none
    3db4:	mov	x0, x19
    3db8:	bl	4750 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d2c>
    3dbc:	mov	x20, x0
    3dc0:	b	3de8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13c4>
    3dc4:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    3dc8:	add	x21, x21, #0x588
    3dcc:	mov	x0, x21
    3dd0:	bl	1c00 <pthread_mutex_lock@plt>
    3dd4:	mov	x0, x19
    3dd8:	bl	4750 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d2c>
    3ddc:	mov	x20, x0
    3de0:	mov	x0, x21
    3de4:	bl	1c10 <pthread_mutex_unlock@plt>
    3de8:	mov	x0, x20
    3dec:	ldp	x20, x19, [sp, #32]
    3df0:	ldr	x21, [sp, #16]
    3df4:	ldp	x29, x30, [sp], #48
    3df8:	ret
    3dfc:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    3e00:	ldr	w8, [x20, #396]
    3e04:	tbnz	w8, #31, 3e10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13ec>
    3e08:	cbnz	w8, 3d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1378>
    3e0c:	b	3e1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13f8>
    3e10:	bl	4638 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c14>
    3e14:	str	w0, [x20, #396]
    3e18:	cbnz	w0, 3d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1378>
    3e1c:	mov	w2, #0x7                   	// #7
    3e20:	mov	w3, #0x22                  	// #34
    3e24:	mov	w4, #0xffffffff            	// #-1
    3e28:	mov	x0, xzr
    3e2c:	mov	x1, x19
    3e30:	mov	x5, xzr
    3e34:	bl	1b00 <mmap@plt>
    3e38:	mov	x20, x0
    3e3c:	cmn	x0, #0x1
    3e40:	b.ne	3de8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13c4>  // b.any
    3e44:	bl	1bd0 <__errno_location@plt>
    3e48:	ldr	w8, [x0]
    3e4c:	cmp	w8, #0xd
    3e50:	b.eq	3d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1378>  // b.none
    3e54:	cmp	w8, #0x1
    3e58:	b.eq	3d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1378>  // b.none
    3e5c:	b	3de8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13c4>
    3e60:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3e64:	mov	x8, xzr
    3e68:	add	x9, x9, #0x198
    3e6c:	add	x10, x9, x8
    3e70:	add	x8, x8, #0x10
    3e74:	add	x11, x10, #0x40
    3e78:	cmp	x8, #0x200
    3e7c:	stp	x11, x11, [x10, #80]
    3e80:	b.ne	3e6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1448>  // b.any
    3e84:	ret
    3e88:	add	x8, x0, #0x10
    3e8c:	tst	x8, #0x7
    3e90:	neg	w8, w8
    3e94:	and	x8, x8, #0x7
    3e98:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    3e9c:	csel	x8, xzr, x8, eq  // eq = none
    3ea0:	add	x9, x9, #0x1a8
    3ea4:	add	x11, x0, x8
    3ea8:	sub	x8, x1, x8
    3eac:	add	x10, x0, x1
    3eb0:	mov	w12, #0x48                  	// #72
    3eb4:	str	x8, [x9]
    3eb8:	orr	x8, x8, #0x1
    3ebc:	str	x11, [x9, #24]
    3ec0:	str	x8, [x11, #8]
    3ec4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3ec8:	str	x12, [x10, #8]
    3ecc:	ldrb	w8, [x8, #1528]
    3ed0:	cmp	w8, #0x0
    3ed4:	mov	w8, #0x200000              	// #2097152
    3ed8:	csel	x8, x8, xzr, ne  // ne = any
    3edc:	str	x8, [x9, #32]
    3ee0:	ret
    3ee4:	stp	x29, x30, [sp, #-16]!
    3ee8:	add	x8, x0, #0x10
    3eec:	tst	x8, #0x7
    3ef0:	neg	w8, w8
    3ef4:	and	x8, x8, #0x7
    3ef8:	csel	x8, xzr, x8, eq  // eq = none
    3efc:	add	x9, x1, #0x10
    3f00:	add	x8, x0, x8
    3f04:	orr	x10, x2, #0x3
    3f08:	str	x10, [x8, #8]
    3f0c:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3f10:	tst	x9, #0x7
    3f14:	neg	w9, w9
    3f18:	and	x9, x9, #0x7
    3f1c:	ldr	x10, [x10, #448]
    3f20:	csel	x9, xzr, x9, eq  // eq = none
    3f24:	add	x11, x1, x9
    3f28:	sub	x12, x11, x8
    3f2c:	cmp	x10, x11
    3f30:	add	x9, x8, x2
    3f34:	sub	x10, x12, x2
    3f38:	mov	x29, sp
    3f3c:	b.eq	3fbc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1598>  // b.none
    3f40:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x12, [x12, #440]
    3f48:	cmp	x12, x11
    3f4c:	b.eq	3fe0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15bc>  // b.none
    3f50:	ldr	x12, [x11, #8]
    3f54:	tbnz	w12, #1, 4164 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1740>
    3f58:	cmp	x12, #0xff
    3f5c:	b.hi	4008 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15e4>  // b.pmore
    3f60:	ldp	x13, x14, [x11, #16]
    3f64:	lsr	x15, x12, #3
    3f68:	cmp	x13, x14
    3f6c:	b.eq	4038 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1614>  // b.none
    3f70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    3f74:	add	x16, x16, #0x198
    3f78:	add	x15, x16, x15, lsl #4
    3f7c:	add	x15, x15, #0x40
    3f80:	cmp	x13, x15
    3f84:	b.eq	3f98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1574>  // b.none
    3f88:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    3f8c:	ldr	x16, [x16, #432]
    3f90:	cmp	x16, x13
    3f94:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    3f98:	cmp	x14, x15
    3f9c:	b.eq	3fb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x158c>  // b.none
    3fa0:	adrp	x15, 17000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x15, [x15, #432]
    3fa8:	cmp	x15, x14
    3fac:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    3fb0:	str	x14, [x13, #24]
    3fb4:	str	x13, [x14, #16]
    3fb8:	b	4158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1734>
    3fbc:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3fc0:	add	x11, x11, #0x1a8
    3fc4:	ldr	x12, [x11]
    3fc8:	str	x9, [x11, #24]
    3fcc:	add	x10, x12, x10
    3fd0:	str	x10, [x11]
    3fd4:	orr	x10, x10, #0x1
    3fd8:	str	x10, [x9, #8]
    3fdc:	b	4340 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x191c>
    3fe0:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3fe4:	add	x11, x11, #0x1a0
    3fe8:	ldr	x12, [x11]
    3fec:	str	x9, [x11, #24]
    3ff0:	add	x10, x12, x10
    3ff4:	str	x10, [x11]
    3ff8:	orr	x11, x10, #0x1
    3ffc:	str	x11, [x9, #8]
    4000:	str	x10, [x9, x10]
    4004:	b	4340 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x191c>
    4008:	ldr	x13, [x11, #24]
    400c:	ldr	x14, [x11, #48]
    4010:	cmp	x13, x11
    4014:	b.eq	4054 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1630>  // b.none
    4018:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    401c:	ldr	x15, [x11, #16]
    4020:	ldr	x16, [x16, #432]
    4024:	cmp	x16, x15
    4028:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    402c:	str	x13, [x15, #24]
    4030:	str	x15, [x13, #16]
    4034:	b	40a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x167c>
    4038:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    403c:	ldr	w14, [x13, #408]
    4040:	mov	w16, #0x1                   	// #1
    4044:	lsl	w15, w16, w15
    4048:	bic	w14, w14, w15
    404c:	str	w14, [x13, #408]
    4050:	b	4158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1734>
    4054:	mov	x15, x11
    4058:	ldr	x13, [x15, #40]!
    405c:	cbnz	x13, 4074 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1650>
    4060:	ldr	x13, [x15, #-8]!
    4064:	cbnz	x13, 4074 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1650>
    4068:	b	40a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x167c>
    406c:	ldr	x13, [x16]
    4070:	mov	x15, x16
    4074:	mov	x16, x13
    4078:	ldr	x17, [x16, #40]!
    407c:	cbnz	x17, 406c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1648>
    4080:	mov	x16, x13
    4084:	ldr	x17, [x16, #32]!
    4088:	cbnz	x17, 406c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1648>
    408c:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    4090:	ldr	x16, [x16, #432]
    4094:	cmp	x16, x15
    4098:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    409c:	str	xzr, [x15]
    40a0:	cbz	x14, 4158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1734>
    40a4:	ldr	x15, [x11, #56]
    40a8:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    40ac:	add	x16, x16, #0x198
    40b0:	add	x16, x16, x15, lsl #3
    40b4:	ldr	x17, [x16, #592]
    40b8:	cmp	x17, x11
    40bc:	b.eq	40e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x16c0>  // b.none
    40c0:	adrp	x15, 17000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x15, [x15, #432]
    40c8:	cmp	x15, x14
    40cc:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    40d0:	ldr	x15, [x14, #32]
    40d4:	cmp	x15, x11
    40d8:	b.eq	410c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x16e8>  // b.none
    40dc:	str	x13, [x14, #40]
    40e0:	b	4110 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x16ec>
    40e4:	add	x16, x16, #0x250
    40e8:	str	x13, [x16]
    40ec:	cbnz	x13, 4114 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x16f0>
    40f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    40f4:	ldr	w17, [x16, #412]
    40f8:	mov	w18, #0x1                   	// #1
    40fc:	lsl	w15, w18, w15
    4100:	bic	w15, w17, w15
    4104:	str	w15, [x16, #412]
    4108:	b	4110 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x16ec>
    410c:	str	x13, [x14, #32]
    4110:	cbz	x13, 4158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1734>
    4114:	adrp	x15, 17000 <memcpy@GLIBC_2.17>
    4118:	ldr	x15, [x15, #432]
    411c:	cmp	x15, x13
    4120:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    4124:	str	x14, [x13, #48]
    4128:	ldr	x14, [x11, #32]
    412c:	cbz	x14, 4140 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x171c>
    4130:	cmp	x15, x14
    4134:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    4138:	str	x14, [x13, #32]
    413c:	str	x13, [x14, #48]
    4140:	ldr	x14, [x11, #40]
    4144:	cbz	x14, 4158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1734>
    4148:	cmp	x15, x14
    414c:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    4150:	str	x14, [x13, #40]
    4154:	str	x13, [x14, #48]
    4158:	and	x12, x12, #0xfffffffffffffffc
    415c:	add	x11, x11, x12
    4160:	add	x10, x12, x10
    4164:	ldr	x12, [x11, #8]
    4168:	orr	x13, x10, #0x1
    416c:	cmp	x10, #0xff
    4170:	and	x12, x12, #0xfffffffffffffffe
    4174:	str	x12, [x11, #8]
    4178:	str	x13, [x9, #8]
    417c:	str	x10, [x9, x10]
    4180:	b.hi	41c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17a0>  // b.pmore
    4184:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    4188:	add	x12, x12, #0x198
    418c:	ldr	w11, [x12]
    4190:	lsr	x10, x10, #3
    4194:	add	x13, x12, x10, lsl #4
    4198:	mov	w12, #0x1                   	// #1
    419c:	lsl	w12, w12, w10
    41a0:	tst	w11, w12
    41a4:	add	x10, x13, #0x40
    41a8:	b.eq	41dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17b8>  // b.none
    41ac:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    41b0:	ldr	x11, [x10, #16]
    41b4:	ldr	x12, [x12, #432]
    41b8:	cmp	x12, x11
    41bc:	b.ls	41ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17c8>  // b.plast
    41c0:	b	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>
    41c4:	lsr	x11, x10, #8
    41c8:	cbz	x11, 41fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17d8>
    41cc:	lsr	x12, x10, #24
    41d0:	cbz	x12, 4204 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17e0>
    41d4:	mov	w12, #0x1f                  	// #31
    41d8:	b	425c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1838>
    41dc:	orr	w11, w11, w12
    41e0:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    41e4:	str	w11, [x12, #408]
    41e8:	mov	x11, x10
    41ec:	str	x9, [x10, #16]
    41f0:	str	x9, [x11, #24]
    41f4:	stp	x11, x10, [x9, #16]
    41f8:	b	4340 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x191c>
    41fc:	mov	x12, xzr
    4200:	b	425c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1838>
    4204:	mov	w12, #0xfff00               	// #1048320
    4208:	add	w12, w11, w12
    420c:	lsr	w12, w12, #16
    4210:	and	w12, w12, #0x8
    4214:	lsl	w11, w11, w12
    4218:	add	w13, w11, #0x7f, lsl #12
    421c:	lsr	w13, w13, #16
    4220:	and	w13, w13, #0x4
    4224:	lsl	w11, w11, w13
    4228:	orr	w12, w13, w12
    422c:	add	w13, w11, #0x3c, lsl #12
    4230:	lsr	w13, w13, #16
    4234:	and	w13, w13, #0x2
    4238:	lsl	w11, w11, w13
    423c:	orr	w12, w12, w13
    4240:	lsr	w11, w11, #15
    4244:	sub	w11, w11, w12
    4248:	lsl	w12, w11, #1
    424c:	add	w11, w11, #0x15
    4250:	add	w12, w12, #0x1c
    4254:	lsr	x11, x10, x11
    4258:	bfxil	x12, x11, #0, #1
    425c:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    4260:	add	x11, x11, #0x198
    4264:	str	x12, [x9, #56]
    4268:	stp	xzr, xzr, [x9, #32]
    426c:	ldr	w13, [x11, #4]
    4270:	mov	w14, #0x1                   	// #1
    4274:	add	x11, x11, x12, lsl #3
    4278:	lsl	w14, w14, w12
    427c:	tst	w13, w14
    4280:	add	x11, x11, #0x250
    4284:	b.eq	42fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x18d8>  // b.none
    4288:	ldr	x11, [x11]
    428c:	mov	w13, #0x39                  	// #57
    4290:	cmp	x12, #0x1f
    4294:	sub	x12, x13, x12, lsr #1
    4298:	csel	x12, xzr, x12, eq  // eq = none
    429c:	lsl	x13, x10, x12
    42a0:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    42a4:	b	42b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1894>
    42a8:	mov	w14, #0x1                   	// #1
    42ac:	mov	x11, x16
    42b0:	lsl	x13, x13, #1
    42b4:	tbz	w14, #0, 4340 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x191c>
    42b8:	ldr	x14, [x11, #8]
    42bc:	and	x14, x14, #0xfffffffffffffffc
    42c0:	cmp	x14, x10
    42c4:	b.eq	4318 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x18f4>  // b.none
    42c8:	lsr	x14, x13, #60
    42cc:	and	x14, x14, #0x8
    42d0:	add	x15, x11, x14
    42d4:	ldr	x16, [x15, #32]!
    42d8:	cbnz	x16, 42a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1884>
    42dc:	ldr	x14, [x12, #432]
    42e0:	cmp	x14, x15
    42e4:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    42e8:	mov	w14, wzr
    42ec:	str	x9, [x15]
    42f0:	str	x11, [x9, #48]
    42f4:	stp	x9, x9, [x9, #16]
    42f8:	b	42b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x188c>
    42fc:	orr	w10, w13, w14
    4300:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    4304:	str	w10, [x12, #412]
    4308:	str	x9, [x11]
    430c:	str	x11, [x9, #48]
    4310:	stp	x9, x9, [x9, #16]
    4314:	b	4340 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x191c>
    4318:	ldr	x10, [x11, #16]
    431c:	ldr	x12, [x12, #432]
    4320:	cmp	x12, x10
    4324:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    4328:	cmp	x12, x11
    432c:	b.hi	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1928>  // b.pmore
    4330:	str	x9, [x10, #24]
    4334:	str	x9, [x11, #16]
    4338:	stp	x10, x11, [x9, #16]
    433c:	str	xzr, [x9, #48]
    4340:	add	x0, x8, #0x10
    4344:	ldp	x29, x30, [sp], #16
    4348:	ret
    434c:	bl	1ad0 <abort@plt>
    4350:	stp	x29, x30, [sp, #-80]!
    4354:	stp	x26, x25, [sp, #16]
    4358:	adrp	x26, 17000 <memcpy@GLIBC_2.17>
    435c:	add	x26, x26, #0x1c0
    4360:	stp	x20, x19, [sp, #64]
    4364:	ldr	x19, [x26]
    4368:	stp	x22, x21, [sp, #48]
    436c:	mov	x21, x0
    4370:	stp	x24, x23, [sp, #32]
    4374:	mov	x0, x19
    4378:	mov	x29, sp
    437c:	mov	w22, w2
    4380:	mov	x20, x1
    4384:	bl	29bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x41c>
    4388:	ldp	x8, x9, [x0]
    438c:	add	x23, x19, #0x20
    4390:	sub	x1, x20, #0x48
    4394:	mov	x0, x21
    4398:	add	x25, x8, x9
    439c:	sub	x8, x25, #0x3f
    43a0:	neg	w9, w8
    43a4:	tst	x8, #0x7
    43a8:	and	x8, x9, #0x7
    43ac:	csel	x8, xzr, x8, eq  // eq = none
    43b0:	add	x8, x25, x8
    43b4:	sub	x8, x8, #0x4f
    43b8:	cmp	x8, x23
    43bc:	csel	x24, x19, x8, cc  // cc = lo, ul, last
    43c0:	bl	3e88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1464>
    43c4:	mov	w8, #0x2b                  	// #43
    43c8:	str	x8, [x24, #8]
    43cc:	ldp	q1, q0, [x26, #880]
    43d0:	cmp	w22, #0x1
    43d4:	stp	q1, q0, [x24, #16]
    43d8:	str	x21, [x26, #880]
    43dc:	str	x20, [x26, #888]
    43e0:	b.ne	4634 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c10>  // b.any
    43e4:	add	x9, x21, x20
    43e8:	ldur	x8, [x9, #-8]
    43ec:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    43f0:	str	x8, [x10, #1352]
    43f4:	add	x10, x21, x8
    43f8:	add	x10, x10, x20
    43fc:	ldur	x10, [x10, #-8]
    4400:	cmp	x10, x8
    4404:	b.ne	4634 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c10>  // b.any
    4408:	add	x10, x24, #0x10
    440c:	stur	xzr, [x9, #-8]
    4410:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    4414:	add	x8, x24, #0x28
    4418:	str	x10, [x9, #1344]
    441c:	mov	w9, #0xb                   	// #11
    4420:	mov	x10, x8
    4424:	add	x11, x8, #0x10
    4428:	str	x9, [x10, #8]!
    442c:	cmp	x25, x11
    4430:	csel	x8, x10, x8, hi  // hi = pmore
    4434:	b.hi	4420 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x19fc>  // b.pmore
    4438:	subs	x8, x24, x19
    443c:	b.eq	461c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bf8>  // b.none
    4440:	ldr	x9, [x24, #8]
    4444:	orr	x10, x8, #0x1
    4448:	cmp	x8, #0xff
    444c:	and	x9, x9, #0xfffffffffffffffe
    4450:	str	x9, [x24, #8]
    4454:	str	x10, [x19, #8]
    4458:	str	x8, [x24]
    445c:	b.hi	44a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a7c>  // b.pmore
    4460:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    4464:	add	x10, x10, #0x198
    4468:	ldr	w9, [x10]
    446c:	lsr	x8, x8, #3
    4470:	add	x11, x10, x8, lsl #4
    4474:	mov	w10, #0x1                   	// #1
    4478:	lsl	w10, w10, w8
    447c:	tst	w9, w10
    4480:	add	x8, x11, #0x40
    4484:	b.eq	44b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a94>  // b.none
    4488:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    448c:	ldr	x9, [x8, #16]
    4490:	ldr	x10, [x10, #432]
    4494:	cmp	x10, x9
    4498:	b.ls	44c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1aa4>  // b.plast
    449c:	b	4634 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c10>
    44a0:	lsr	x9, x8, #8
    44a4:	cbz	x9, 44d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ab4>
    44a8:	lsr	x10, x8, #24
    44ac:	cbz	x10, 44e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1abc>
    44b0:	mov	w10, #0x1f                  	// #31
    44b4:	b	4538 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b14>
    44b8:	orr	w9, w9, w10
    44bc:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    44c0:	str	w9, [x10, #408]
    44c4:	mov	x9, x8
    44c8:	str	x19, [x8, #16]
    44cc:	str	x19, [x9, #24]
    44d0:	stp	x9, x8, [x19, #16]
    44d4:	b	461c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bf8>
    44d8:	mov	x10, xzr
    44dc:	b	4538 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b14>
    44e0:	mov	w10, #0xfff00               	// #1048320
    44e4:	add	w10, w9, w10
    44e8:	lsr	w10, w10, #16
    44ec:	and	w10, w10, #0x8
    44f0:	lsl	w9, w9, w10
    44f4:	add	w11, w9, #0x7f, lsl #12
    44f8:	lsr	w11, w11, #16
    44fc:	and	w11, w11, #0x4
    4500:	lsl	w9, w9, w11
    4504:	orr	w10, w11, w10
    4508:	add	w11, w9, #0x3c, lsl #12
    450c:	lsr	w11, w11, #16
    4510:	and	w11, w11, #0x2
    4514:	lsl	w9, w9, w11
    4518:	orr	w10, w10, w11
    451c:	lsr	w9, w9, #15
    4520:	sub	w9, w9, w10
    4524:	lsl	w10, w9, #1
    4528:	add	w9, w9, #0x15
    452c:	add	w10, w10, #0x1c
    4530:	lsr	x9, x8, x9
    4534:	bfxil	x10, x9, #0, #1
    4538:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    453c:	add	x9, x9, #0x198
    4540:	str	x10, [x19, #56]
    4544:	stp	xzr, xzr, [x23]
    4548:	ldr	w11, [x9, #4]
    454c:	mov	w12, #0x1                   	// #1
    4550:	add	x9, x9, x10, lsl #3
    4554:	lsl	w12, w12, w10
    4558:	tst	w11, w12
    455c:	add	x9, x9, #0x250
    4560:	b.eq	45d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bb4>  // b.none
    4564:	ldr	x9, [x9]
    4568:	mov	w11, #0x39                  	// #57
    456c:	cmp	x10, #0x1f
    4570:	sub	x10, x11, x10, lsr #1
    4574:	csel	x10, xzr, x10, eq  // eq = none
    4578:	lsl	x11, x8, x10
    457c:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    4580:	b	4594 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b70>
    4584:	mov	w12, #0x1                   	// #1
    4588:	mov	x9, x14
    458c:	lsl	x11, x11, #1
    4590:	tbz	w12, #0, 461c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bf8>
    4594:	ldr	x12, [x9, #8]
    4598:	and	x12, x12, #0xfffffffffffffffc
    459c:	cmp	x12, x8
    45a0:	b.eq	45f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bd0>  // b.none
    45a4:	lsr	x12, x11, #60
    45a8:	and	x12, x12, #0x8
    45ac:	add	x13, x9, x12
    45b0:	ldr	x14, [x13, #32]!
    45b4:	cbnz	x14, 4584 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b60>
    45b8:	ldr	x12, [x10, #432]
    45bc:	cmp	x12, x13
    45c0:	b.hi	4634 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c10>  // b.pmore
    45c4:	mov	w12, wzr
    45c8:	str	x19, [x13]
    45cc:	str	x9, [x19, #48]
    45d0:	stp	x19, x19, [x19, #16]
    45d4:	b	458c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b68>
    45d8:	orr	w8, w11, w12
    45dc:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    45e0:	str	w8, [x10, #412]
    45e4:	str	x19, [x9]
    45e8:	str	x9, [x19, #48]
    45ec:	stp	x19, x19, [x19, #16]
    45f0:	b	461c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bf8>
    45f4:	ldr	x8, [x9, #16]
    45f8:	ldr	x10, [x10, #432]
    45fc:	cmp	x10, x8
    4600:	b.hi	4634 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c10>  // b.pmore
    4604:	cmp	x10, x9
    4608:	b.hi	4634 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c10>  // b.pmore
    460c:	str	x19, [x8, #24]
    4610:	str	x19, [x9, #16]
    4614:	stp	x8, x9, [x19, #16]
    4618:	str	xzr, [x19, #48]
    461c:	ldp	x20, x19, [sp, #64]
    4620:	ldp	x22, x21, [sp, #48]
    4624:	ldp	x24, x23, [sp, #32]
    4628:	ldp	x26, x25, [sp, #16]
    462c:	ldp	x29, x30, [sp], #80
    4630:	ret
    4634:	bl	1ad0 <abort@plt>
    4638:	sub	sp, sp, #0xb0
    463c:	stp	x29, x30, [sp, #128]
    4640:	str	x21, [sp, #144]
    4644:	stp	x20, x19, [sp, #160]
    4648:	add	x29, sp, #0x80
    464c:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4650:	add	x0, x0, #0x205
    4654:	add	x1, sp, #0x8
    4658:	str	xzr, [x29, #24]
    465c:	str	xzr, [sp]
    4660:	bl	19f0 <statfs@plt>
    4664:	tbnz	w0, #31, 467c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c58>
    4668:	ldr	w8, [sp, #8]
    466c:	mov	w9, #0xff8c                	// #65420
    4670:	movk	w9, #0xf97c, lsl #16
    4674:	cmp	w8, w9
    4678:	b.eq	4738 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d14>  // b.none
    467c:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4680:	adrp	x1, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4684:	add	x0, x0, #0x20e
    4688:	add	x1, x1, #0x21b
    468c:	bl	1a10 <fopen@plt>
    4690:	cbz	x0, 473c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d18>
    4694:	adrp	x20, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4698:	mov	x19, x0
    469c:	add	x20, x20, #0x21d
    46a0:	b	46ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c88>
    46a4:	mov	w8, #0x3                   	// #3
    46a8:	cbnz	w8, 4718 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1cf4>
    46ac:	add	x0, x29, #0x18
    46b0:	mov	x1, sp
    46b4:	mov	x2, x19
    46b8:	bl	1b10 <getline@plt>
    46bc:	tbnz	x0, #63, 4720 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1cfc>
    46c0:	ldr	x21, [x29, #24]
    46c4:	mov	w1, #0x20                  	// #32
    46c8:	mov	x0, x21
    46cc:	bl	1b70 <strchr@plt>
    46d0:	cbz	x0, 46a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c80>
    46d4:	add	x0, x0, #0x1
    46d8:	mov	w1, #0x20                  	// #32
    46dc:	bl	1b70 <strchr@plt>
    46e0:	cbz	x0, 46a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c80>
    46e4:	add	x0, x0, #0x1
    46e8:	mov	w2, #0xa                   	// #10
    46ec:	mov	x1, x20
    46f0:	bl	1a30 <strncmp@plt>
    46f4:	cbz	w0, 4700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1cdc>
    46f8:	mov	w8, wzr
    46fc:	b	46a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c84>
    4700:	mov	x0, x21
    4704:	bl	1b20 <free@plt>
    4708:	mov	x0, x19
    470c:	bl	1a00 <fclose@plt>
    4710:	mov	w8, #0x1                   	// #1
    4714:	b	46a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c84>
    4718:	cmp	w8, #0x3
    471c:	b.ne	4738 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d14>  // b.any
    4720:	ldr	x0, [x29, #24]
    4724:	bl	1b20 <free@plt>
    4728:	mov	x0, x19
    472c:	bl	1a00 <fclose@plt>
    4730:	mov	w0, wzr
    4734:	b	473c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d18>
    4738:	mov	w0, #0x1                   	// #1
    473c:	ldp	x20, x19, [sp, #160]
    4740:	ldr	x21, [sp, #144]
    4744:	ldp	x29, x30, [sp, #128]
    4748:	add	sp, sp, #0xb0
    474c:	ret
    4750:	stp	x29, x30, [sp, #-64]!
    4754:	stp	x24, x23, [sp, #16]
    4758:	stp	x22, x21, [sp, #32]
    475c:	stp	x20, x19, [sp, #48]
    4760:	mov	x29, sp
    4764:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    4768:	ldr	w8, [x23, #392]
    476c:	mov	x19, x0
    4770:	cmn	w8, #0x1
    4774:	b.eq	4780 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d5c>  // b.none
    4778:	mov	w20, #0x22                  	// #34
    477c:	b	4790 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d6c>
    4780:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4784:	mov	w20, #0x22                  	// #34
    4788:	str	wzr, [x8, #1464]
    478c:	b	47e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1dc0>
    4790:	adrp	x24, 17000 <memcpy@GLIBC_2.17>
    4794:	ldr	w0, [x23, #392]
    4798:	ldr	x21, [x24, #1408]
    479c:	mov	x1, x19
    47a0:	bl	48f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ed4>
    47a4:	cbnz	w0, 4870 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e4c>
    47a8:	ldr	w4, [x23, #392]
    47ac:	mov	w8, #0xffffffdc            	// #-36
    47b0:	and	w8, w20, w8
    47b4:	orr	w20, w8, #0x1
    47b8:	mov	w2, #0x5                   	// #5
    47bc:	mov	x0, xzr
    47c0:	mov	x1, x19
    47c4:	mov	w3, w20
    47c8:	mov	x5, x21
    47cc:	bl	1b00 <mmap@plt>
    47d0:	cmn	x0, #0x1
    47d4:	b.ne	47f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1dd4>  // b.any
    47d8:	ldr	w0, [x23, #392]
    47dc:	cbnz	x21, 4868 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e44>
    47e0:	bl	1aa0 <close@plt>
    47e4:	bl	4888 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e64>
    47e8:	cmn	w0, #0x1
    47ec:	str	w0, [x23, #392]
    47f0:	b.ne	4790 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d6c>  // b.any
    47f4:	b	4870 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e4c>
    47f8:	mov	x22, x0
    47fc:	cbnz	x21, 4818 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1df4>
    4800:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4804:	ldrsw	x8, [x8, #1464]
    4808:	sub	x8, x8, #0x5
    480c:	cmp	x8, #0x1
    4810:	b.hi	4818 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1df4>  // b.pmore
    4814:	bl	49ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f88>
    4818:	ldr	w4, [x23, #392]
    481c:	mov	w2, #0x3                   	// #3
    4820:	mov	x0, xzr
    4824:	mov	x1, x19
    4828:	mov	w3, w20
    482c:	mov	x5, x21
    4830:	bl	1b00 <mmap@plt>
    4834:	cmn	x0, #0x1
    4838:	b.eq	4858 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e34>  // b.none
    483c:	sub	x8, x22, x0
    4840:	add	x9, x0, x19
    4844:	stur	x8, [x9, #-8]
    4848:	ldr	x8, [x24, #1408]
    484c:	add	x8, x8, x19
    4850:	str	x8, [x24, #1408]
    4854:	b	4874 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e50>
    4858:	mov	x0, x22
    485c:	mov	x1, x19
    4860:	bl	1b80 <munmap@plt>
    4864:	ldr	w0, [x23, #392]
    4868:	mov	x1, x21
    486c:	bl	1bc0 <ftruncate@plt>
    4870:	mov	x0, #0xffffffffffffffff    	// #-1
    4874:	ldp	x20, x19, [sp, #48]
    4878:	ldp	x22, x21, [sp, #32]
    487c:	ldp	x24, x23, [sp, #16]
    4880:	ldp	x29, x30, [sp], #64
    4884:	ret
    4888:	stp	x29, x30, [sp, #-48]!
    488c:	stp	x22, x21, [sp, #16]
    4890:	stp	x20, x19, [sp, #32]
    4894:	mov	x29, sp
    4898:	adrp	x22, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0xfe38>
    489c:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    48a0:	mov	w21, #0x18                  	// #24
    48a4:	add	x22, x22, #0xd18
    48a8:	ldrsw	x8, [x20, #1464]
    48ac:	madd	x8, x8, x21, x22
    48b0:	ldp	x9, x0, [x8]
    48b4:	blr	x9
    48b8:	mov	w19, w0
    48bc:	cmn	w0, #0x1
    48c0:	b.eq	48d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1eb0>  // b.none
    48c4:	ldrsw	x8, [x20, #1464]
    48c8:	sub	x8, x8, #0x5
    48cc:	cmp	x8, #0x2
    48d0:	b.cc	48e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ec0>  // b.lo, b.ul, b.last
    48d4:	bl	49ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f88>
    48d8:	cbnz	w0, 48e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ec0>
    48dc:	cmn	w19, #0x1
    48e0:	b.eq	48a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e84>  // b.none
    48e4:	mov	w0, w19
    48e8:	ldp	x20, x19, [sp, #32]
    48ec:	ldp	x22, x21, [sp, #16]
    48f0:	ldp	x29, x30, [sp], #48
    48f4:	ret
    48f8:	stp	x29, x30, [sp, #-64]!
    48fc:	str	x23, [sp, #16]
    4900:	stp	x22, x21, [sp, #32]
    4904:	stp	x20, x19, [sp, #48]
    4908:	mov	x29, sp
    490c:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    4910:	ldr	x8, [x23, #1472]
    4914:	mov	x19, x1
    4918:	mov	w20, w0
    491c:	cbnz	x8, 492c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f08>
    4920:	mov	w0, #0x1e                  	// #30
    4924:	bl	1ba0 <sysconf@plt>
    4928:	str	x0, [x23, #1472]
    492c:	ldr	x2, [x23, #1472]
    4930:	mov	x8, sp
    4934:	add	x9, x2, #0xf
    4938:	and	x9, x9, #0xfffffffffffffff0
    493c:	sub	x21, x8, x9
    4940:	mov	sp, x21
    4944:	mov	x0, x21
    4948:	mov	w1, wzr
    494c:	bl	1a40 <memset@plt>
    4950:	cmp	x19, #0x1
    4954:	b.lt	4990 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f6c>  // b.tstop
    4958:	ldr	x8, [x23, #1472]
    495c:	mov	w0, w20
    4960:	mov	x1, x21
    4964:	cmp	x19, x8
    4968:	csel	x22, x19, x8, cc  // cc = lo, ul, last
    496c:	mov	x2, x22
    4970:	bl	1ac0 <write@plt>
    4974:	cmp	x0, x22
    4978:	csel	x8, xzr, x22, lt  // lt = tstop
    497c:	cmp	x0, x22
    4980:	sub	x19, x19, x8
    4984:	b.ge	4950 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f2c>  // b.tcont
    4988:	mov	w0, #0xffffffff            	// #-1
    498c:	b	4994 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f70>
    4990:	mov	w0, wzr
    4994:	mov	sp, x29
    4998:	ldp	x20, x19, [sp, #48]
    499c:	ldp	x22, x21, [sp, #32]
    49a0:	ldr	x23, [sp, #16]
    49a4:	ldp	x29, x30, [sp], #64
    49a8:	ret
    49ac:	stp	x29, x30, [sp, #-32]!
    49b0:	str	x19, [sp, #16]
    49b4:	mov	x29, sp
    49b8:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    49bc:	ldrsw	x8, [x19, #1464]
    49c0:	sub	x9, x8, #0x5
    49c4:	cmp	x9, #0x1
    49c8:	b.hi	49e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1fc4>  // b.pmore
    49cc:	mov	w9, #0x18                  	// #24
    49d0:	mul	x8, x8, x9
    49d4:	adrp	x9, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0xfe38>
    49d8:	add	x9, x9, #0xd18
    49dc:	ldr	x8, [x9, x8]
    49e0:	mov	x0, xzr
    49e4:	blr	x8
    49e8:	ldr	w8, [x19, #1464]
    49ec:	add	w9, w8, #0x1
    49f0:	cmp	w9, #0x7
    49f4:	csinc	w8, wzr, w8, eq  // eq = none
    49f8:	str	w8, [x19, #1464]
    49fc:	ldr	x19, [sp, #16]
    4a00:	cset	w0, eq  // eq = none
    4a04:	ldp	x29, x30, [sp], #32
    4a08:	ret
    4a0c:	stp	x29, x30, [sp, #-16]!
    4a10:	mov	x29, sp
    4a14:	bl	1be0 <getenv@plt>
    4a18:	cbz	x0, 4a28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2004>
    4a1c:	bl	4a34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2010>
    4a20:	ldp	x29, x30, [sp], #16
    4a24:	ret
    4a28:	mov	w0, #0xffffffff            	// #-1
    4a2c:	ldp	x29, x30, [sp], #16
    4a30:	ret
    4a34:	stp	x29, x30, [sp, #-48]!
    4a38:	str	x21, [sp, #16]
    4a3c:	stp	x20, x19, [sp, #32]
    4a40:	mov	x29, sp
    4a44:	mov	w1, #0x4082                	// #16514
    4a48:	movk	w1, #0x48, lsl #16
    4a4c:	mov	w2, #0x1c0                 	// #448
    4a50:	mov	x19, x0
    4a54:	bl	1a20 <open@plt>
    4a58:	mov	w20, w0
    4a5c:	cmn	w0, #0x1
    4a60:	b.ne	4ae0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20bc>  // b.any
    4a64:	bl	1bd0 <__errno_location@plt>
    4a68:	ldr	w8, [x0]
    4a6c:	sub	w9, w8, #0x15
    4a70:	cmp	w9, #0x2
    4a74:	b.cc	4a80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x205c>  // b.lo, b.ul, b.last
    4a78:	cmp	w8, #0x5f
    4a7c:	b.ne	4ae0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20bc>  // b.any
    4a80:	str	wzr, [x0]
    4a84:	mov	x0, x19
    4a88:	bl	19c0 <strlen@plt>
    4a8c:	sxtw	x20, w0
    4a90:	add	x9, x20, #0x1a
    4a94:	mov	x8, sp
    4a98:	and	x9, x9, #0xfffffffffffffff0
    4a9c:	sub	x21, x8, x9
    4aa0:	mov	sp, x21
    4aa4:	mov	x0, x21
    4aa8:	mov	x1, x19
    4aac:	mov	x2, x20
    4ab0:	bl	19a0 <memcpy@plt>
    4ab4:	adrp	x8, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4ab8:	add	x8, x8, #0x250
    4abc:	ldr	x8, [x8]
    4ac0:	mov	w10, #0x5858                	// #22616
    4ac4:	add	x9, x21, x20
    4ac8:	movk	w10, #0x58, lsl #16
    4acc:	mov	x0, x21
    4ad0:	stur	w10, [x9, #7]
    4ad4:	str	x8, [x9]
    4ad8:	bl	4c10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x21ec>
    4adc:	mov	w20, w0
    4ae0:	mov	w0, w20
    4ae4:	mov	sp, x29
    4ae8:	ldp	x20, x19, [sp, #32]
    4aec:	ldr	x21, [sp, #16]
    4af0:	ldp	x29, x30, [sp], #48
    4af4:	ret
    4af8:	stp	x29, x30, [sp, #-64]!
    4afc:	str	x28, [sp, #16]
    4b00:	stp	x22, x21, [sp, #32]
    4b04:	stp	x20, x19, [sp, #48]
    4b08:	mov	x29, sp
    4b0c:	sub	sp, sp, #0x3, lsl #12
    4b10:	sub	sp, sp, #0x30
    4b14:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    4b18:	ldr	x8, [x20, #1480]
    4b1c:	adrp	x22, 17000 <memcpy@GLIBC_2.17>
    4b20:	cmp	x8, x0
    4b24:	b.eq	4b5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2138>  // b.none
    4b28:	mov	x19, x0
    4b2c:	ldr	x0, [x22, #1488]
    4b30:	cbz	x0, 4b38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2114>
    4b34:	bl	1a80 <endmntent@plt>
    4b38:	str	x19, [x20, #1480]
    4b3c:	cbz	x19, 4b54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2130>
    4b40:	adrp	x1, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4b44:	add	x1, x1, #0x21b
    4b48:	mov	x0, x19
    4b4c:	bl	1a70 <setmntent@plt>
    4b50:	b	4b58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2134>
    4b54:	mov	x0, xzr
    4b58:	str	x0, [x22, #1488]
    4b5c:	ldr	x8, [x22, #1488]
    4b60:	cbz	x8, 4bec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x21c8>
    4b64:	adrp	x19, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4b68:	adrp	x21, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    4b6c:	add	x19, x19, #0x25b
    4b70:	add	x21, x21, #0x25e
    4b74:	b	4b80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x215c>
    4b78:	mov	w8, wzr
    4b7c:	cbnz	w8, 4bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x21cc>
    4b80:	ldr	x0, [x22, #1488]
    4b84:	sub	x1, x29, #0x28
    4b88:	add	x2, sp, #0x8
    4b8c:	mov	w3, #0x3000                	// #12288
    4b90:	bl	1bb0 <getmntent_r@plt>
    4b94:	cbz	x0, 4be0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x21bc>
    4b98:	sub	x0, x29, #0x28
    4b9c:	mov	x1, x19
    4ba0:	bl	1b60 <hasmntopt@plt>
    4ba4:	cbnz	x0, 4b78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2154>
    4ba8:	sub	x0, x29, #0x28
    4bac:	mov	x1, x21
    4bb0:	bl	1b60 <hasmntopt@plt>
    4bb4:	cbnz	x0, 4b78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2154>
    4bb8:	ldur	x0, [x29, #-32]
    4bbc:	mov	w1, #0x2                   	// #2
    4bc0:	bl	1af0 <access@plt>
    4bc4:	cbnz	w0, 4b78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2154>
    4bc8:	ldur	x0, [x29, #-32]
    4bcc:	bl	4a34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2010>
    4bd0:	cmn	w0, #0x1
    4bd4:	cset	w8, ne  // ne = any
    4bd8:	csel	w20, w20, w0, eq  // eq = none
    4bdc:	b	4b7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2158>
    4be0:	mov	w8, #0x1                   	// #1
    4be4:	mov	w20, #0xffffffff            	// #-1
    4be8:	b	4b7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2158>
    4bec:	mov	w20, #0xffffffff            	// #-1
    4bf0:	mov	w0, w20
    4bf4:	add	sp, sp, #0x3, lsl #12
    4bf8:	add	sp, sp, #0x30
    4bfc:	ldp	x20, x19, [sp, #48]
    4c00:	ldp	x22, x21, [sp, #32]
    4c04:	ldr	x28, [sp, #16]
    4c08:	ldp	x29, x30, [sp], #64
    4c0c:	ret
    4c10:	stp	x29, x30, [sp, #-32]!
    4c14:	stp	x20, x19, [sp, #16]
    4c18:	mov	x29, sp
    4c1c:	mov	w1, #0x80000               	// #524288
    4c20:	mov	x19, x0
    4c24:	bl	1ae0 <mkostemp@plt>
    4c28:	mov	w20, w0
    4c2c:	cmn	w0, #0x1
    4c30:	b.eq	4c3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2218>  // b.none
    4c34:	mov	x0, x19
    4c38:	bl	1c20 <unlink@plt>
    4c3c:	mov	w0, w20
    4c40:	ldp	x20, x19, [sp, #16]
    4c44:	ldp	x29, x30, [sp], #32
    4c48:	ret
    4c4c:	stp	x29, x30, [sp, #-32]!
    4c50:	stp	x20, x19, [sp, #16]
    4c54:	mov	x29, sp
    4c58:	mov	x19, x1
    4c5c:	mov	x20, x0
    4c60:	bl	29bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x41c>
    4c64:	cbz	x0, 4c80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x225c>
    4c68:	ldr	x8, [x0, #24]
    4c6c:	cbz	x8, 4c80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x225c>
    4c70:	add	x0, x20, x8
    4c74:	mov	x1, x19
    4c78:	bl	1b80 <munmap@plt>
    4c7c:	cbnz	w0, 4c8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2268>
    4c80:	mov	x0, x20
    4c84:	mov	x1, x19
    4c88:	bl	1b80 <munmap@plt>
    4c8c:	ldp	x20, x19, [sp, #16]
    4c90:	ldp	x29, x30, [sp], #32
    4c94:	ret
    4c98:	stp	x29, x30, [sp, #-48]!
    4c9c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4ca0:	ldr	x0, [x8, #448]
    4ca4:	str	x21, [sp, #16]
    4ca8:	stp	x20, x19, [sp, #32]
    4cac:	mov	x29, sp
    4cb0:	cbz	x0, 4d58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2334>
    4cb4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4cb8:	ldr	x8, [x8, #424]
    4cbc:	cmp	x8, #0x49
    4cc0:	b.cc	4d3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2318>  // b.lo, b.ul, b.last
    4cc4:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    4cc8:	ldr	x9, [x9, #1512]
    4ccc:	add	x8, x8, x9
    4cd0:	sub	x8, x8, #0x49
    4cd4:	udiv	x8, x8, x9
    4cd8:	sub	x8, x8, #0x1
    4cdc:	mul	x20, x8, x9
    4ce0:	bl	29bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x41c>
    4ce4:	ldr	x8, [x0, #8]
    4ce8:	mov	x19, x0
    4cec:	subs	x21, x8, x20
    4cf0:	b.cc	4d00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x22dc>  // b.lo, b.ul, b.last
    4cf4:	mov	x0, x19
    4cf8:	bl	4d88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2364>
    4cfc:	cbz	w0, 4d68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2344>
    4d00:	mov	x20, xzr
    4d04:	cbz	x20, 4d40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x231c>
    4d08:	ldr	x8, [x19, #8]
    4d0c:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    4d10:	add	x9, x9, #0x1a8
    4d14:	sub	x8, x8, x20
    4d18:	str	x8, [x19, #8]
    4d1c:	ldr	x8, [x9, #832]
    4d20:	ldr	x10, [x9]
    4d24:	ldr	x0, [x9, #24]
    4d28:	sub	x8, x8, x20
    4d2c:	sub	x1, x10, x20
    4d30:	str	x8, [x9, #832]
    4d34:	bl	3e88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1464>
    4d38:	b	4d40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x231c>
    4d3c:	mov	x20, xzr
    4d40:	bl	4dc8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23a4>
    4d44:	cmn	x20, x0
    4d48:	b.ne	4d58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2334>  // b.any
    4d4c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4d50:	mov	x9, #0xffffffffffffffff    	// #-1
    4d54:	str	x9, [x8, #456]
    4d58:	ldp	x20, x19, [sp, #32]
    4d5c:	ldr	x21, [sp, #16]
    4d60:	ldp	x29, x30, [sp], #48
    4d64:	ret
    4d68:	ldr	x8, [x19]
    4d6c:	mov	x1, x20
    4d70:	add	x0, x8, x21
    4d74:	bl	4c4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2228>
    4d78:	cmp	w0, #0x0
    4d7c:	csel	x20, x20, xzr, eq  // eq = none
    4d80:	cbnz	x20, 4d08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x22e4>
    4d84:	b	4d40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x231c>
    4d88:	ldr	x8, [x0]
    4d8c:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    4d90:	add	x9, x9, #0x530
    4d94:	b	4da0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x237c>
    4d98:	ldr	x9, [x9, #16]
    4d9c:	cbz	x9, 4dc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x239c>
    4da0:	cmp	x8, x9
    4da4:	b.hi	4d98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2374>  // b.pmore
    4da8:	ldr	x10, [x0, #8]
    4dac:	add	x10, x8, x10
    4db0:	cmp	x10, x9
    4db4:	b.ls	4d98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2374>  // b.plast
    4db8:	mov	w0, #0x1                   	// #1
    4dbc:	ret
    4dc0:	mov	w0, wzr
    4dc4:	ret
    4dc8:	stp	x29, x30, [sp, #-96]!
    4dcc:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4dd0:	stp	x28, x27, [sp, #16]
    4dd4:	ldr	x27, [x8, #1344]
    4dd8:	stp	x26, x25, [sp, #32]
    4ddc:	stp	x24, x23, [sp, #48]
    4de0:	stp	x22, x21, [sp, #64]
    4de4:	stp	x20, x19, [sp, #80]
    4de8:	mov	x29, sp
    4dec:	cbz	x27, 5134 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2710>
    4df0:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    4df4:	adrp	x24, 17000 <memcpy@GLIBC_2.17>
    4df8:	mov	x19, xzr
    4dfc:	add	x23, x23, #0x530
    4e00:	add	x24, x24, #0x198
    4e04:	adrp	x26, 17000 <memcpy@GLIBC_2.17>
    4e08:	ldr	x0, [x27]
    4e0c:	mov	x28, x27
    4e10:	ldr	x27, [x27, #16]
    4e14:	add	x8, x0, #0x10
    4e18:	neg	w9, w8
    4e1c:	and	x9, x9, #0x7
    4e20:	tst	x8, #0x7
    4e24:	csel	x8, xzr, x9, eq  // eq = none
    4e28:	add	x25, x0, x8
    4e2c:	ldr	x21, [x25, #8]
    4e30:	tbnz	w21, #1, 4e50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x242c>
    4e34:	ldr	x20, [x28, #8]
    4e38:	and	x22, x21, #0xfffffffffffffffc
    4e3c:	add	x8, x25, x22
    4e40:	add	x9, x0, x20
    4e44:	sub	x9, x9, #0x48
    4e48:	cmp	x8, x9
    4e4c:	b.cs	4e5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2438>  // b.hs, b.nlast
    4e50:	mov	x23, x28
    4e54:	cbnz	x27, 4e08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23e4>
    4e58:	b	5138 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2714>
    4e5c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4e60:	ldr	x8, [x8, #440]
    4e64:	cmp	x8, x25
    4e68:	b.eq	4e98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2474>  // b.none
    4e6c:	ldr	x8, [x25, #24]
    4e70:	ldr	x9, [x25, #48]
    4e74:	cmp	x8, x25
    4e78:	b.eq	4eac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2488>  // b.none
    4e7c:	ldr	x10, [x25, #16]
    4e80:	ldr	x11, [x26, #432]
    4e84:	cmp	x11, x10
    4e88:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    4e8c:	str	x8, [x10, #24]
    4e90:	str	x10, [x8, #16]
    4e94:	b	4ef4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x24d0>
    4e98:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4e9c:	add	x8, x8, #0x1a0
    4ea0:	str	xzr, [x8, #24]
    4ea4:	str	xzr, [x8]
    4ea8:	b	4fa4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2580>
    4eac:	mov	x10, x25
    4eb0:	ldr	x8, [x10, #40]!
    4eb4:	cbnz	x8, 4ecc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x24a8>
    4eb8:	ldr	x8, [x10, #-8]!
    4ebc:	cbnz	x8, 4ecc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x24a8>
    4ec0:	b	4ef4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x24d0>
    4ec4:	ldr	x8, [x11]
    4ec8:	mov	x10, x11
    4ecc:	mov	x11, x8
    4ed0:	ldr	x12, [x11, #40]!
    4ed4:	cbnz	x12, 4ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x24a0>
    4ed8:	mov	x11, x8
    4edc:	ldr	x12, [x11, #32]!
    4ee0:	cbnz	x12, 4ec4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x24a0>
    4ee4:	ldr	x11, [x26, #432]
    4ee8:	cmp	x11, x10
    4eec:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    4ef0:	str	xzr, [x10]
    4ef4:	cbz	x9, 4fa4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2580>
    4ef8:	ldr	x10, [x25, #56]
    4efc:	add	x11, x24, x10, lsl #3
    4f00:	ldr	x12, [x11, #592]
    4f04:	cmp	x12, x25
    4f08:	b.eq	4f30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x250c>  // b.none
    4f0c:	ldr	x10, [x26, #432]
    4f10:	cmp	x10, x9
    4f14:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    4f18:	ldr	x10, [x9, #32]
    4f1c:	cmp	x10, x25
    4f20:	b.eq	4f5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2538>  // b.none
    4f24:	str	x8, [x9, #40]
    4f28:	cbnz	x8, 4f64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2540>
    4f2c:	b	4fa4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2580>
    4f30:	add	x11, x11, #0x250
    4f34:	str	x8, [x11]
    4f38:	cbnz	x8, 4f64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2540>
    4f3c:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    4f40:	ldr	w11, [x13, #412]
    4f44:	mov	w12, #0x1                   	// #1
    4f48:	lsl	w10, w12, w10
    4f4c:	bic	w10, w11, w10
    4f50:	str	w10, [x13, #412]
    4f54:	cbnz	x8, 4f64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2540>
    4f58:	b	4fa4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2580>
    4f5c:	str	x8, [x9, #32]
    4f60:	cbz	x8, 4fa4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2580>
    4f64:	ldr	x10, [x26, #432]
    4f68:	cmp	x10, x8
    4f6c:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    4f70:	str	x9, [x8, #48]
    4f74:	ldr	x9, [x25, #32]
    4f78:	cbz	x9, 4f8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2568>
    4f7c:	cmp	x10, x9
    4f80:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    4f84:	str	x9, [x8, #32]
    4f88:	str	x8, [x9, #48]
    4f8c:	ldr	x9, [x25, #40]
    4f90:	cbz	x9, 4fa4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2580>
    4f94:	cmp	x10, x9
    4f98:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    4f9c:	str	x9, [x8, #40]
    4fa0:	str	x8, [x9, #48]
    4fa4:	mov	x1, x20
    4fa8:	bl	4c4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2228>
    4fac:	cbz	w0, 4fc8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25a4>
    4fb0:	lsr	x8, x21, #8
    4fb4:	cbz	x8, 4fe8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25c4>
    4fb8:	lsr	x9, x21, #24
    4fbc:	cbz	x9, 4ff0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25cc>
    4fc0:	mov	w9, #0x1f                  	// #31
    4fc4:	b	5048 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2624>
    4fc8:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    4fcc:	ldr	x8, [x9, #1256]
    4fd0:	add	x19, x20, x19
    4fd4:	sub	x8, x8, x20
    4fd8:	str	x8, [x9, #1256]
    4fdc:	str	x27, [x23, #16]
    4fe0:	cbnz	x27, 4e08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23e4>
    4fe4:	b	5138 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2714>
    4fe8:	mov	x9, xzr
    4fec:	b	5048 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2624>
    4ff0:	mov	w9, #0xfff00               	// #1048320
    4ff4:	add	w9, w8, w9
    4ff8:	lsr	w9, w9, #16
    4ffc:	and	w9, w9, #0x8
    5000:	lsl	w8, w8, w9
    5004:	add	w10, w8, #0x7f, lsl #12
    5008:	lsr	w10, w10, #16
    500c:	and	w10, w10, #0x4
    5010:	lsl	w8, w8, w10
    5014:	orr	w9, w10, w9
    5018:	add	w10, w8, #0x3c, lsl #12
    501c:	lsr	w10, w10, #16
    5020:	and	w10, w10, #0x2
    5024:	lsl	w8, w8, w10
    5028:	orr	w9, w9, w10
    502c:	lsr	w8, w8, #15
    5030:	sub	w8, w8, w9
    5034:	lsl	w9, w8, #1
    5038:	add	w8, w8, #0x15
    503c:	add	w9, w9, #0x1c
    5040:	lsr	x8, x22, x8
    5044:	bfxil	x9, x8, #0, #1
    5048:	str	x9, [x25, #56]
    504c:	stp	xzr, xzr, [x25, #32]
    5050:	ldr	w10, [x24, #4]
    5054:	mov	w11, #0x1                   	// #1
    5058:	add	x8, x24, x9, lsl #3
    505c:	lsl	w11, w11, w9
    5060:	tst	w10, w11
    5064:	add	x8, x8, #0x250
    5068:	b.eq	50dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26b8>  // b.none
    506c:	ldr	x8, [x8]
    5070:	mov	w10, #0x39                  	// #57
    5074:	sub	x10, x10, x9, lsr #1
    5078:	cmp	x9, #0x1f
    507c:	csel	x9, xzr, x10, eq  // eq = none
    5080:	lsl	x9, x22, x9
    5084:	b	5098 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2674>
    5088:	mov	w10, #0x1                   	// #1
    508c:	mov	x8, x12
    5090:	lsl	x9, x9, #1
    5094:	tbz	w10, #0, 4e50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x242c>
    5098:	ldr	x10, [x8, #8]
    509c:	and	x10, x10, #0xfffffffffffffffc
    50a0:	cmp	x10, x22
    50a4:	b.eq	5100 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26dc>  // b.none
    50a8:	lsr	x10, x9, #60
    50ac:	and	x10, x10, #0x8
    50b0:	add	x11, x8, x10
    50b4:	ldr	x12, [x11, #32]!
    50b8:	cbnz	x12, 5088 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2664>
    50bc:	ldr	x10, [x26, #432]
    50c0:	cmp	x10, x11
    50c4:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    50c8:	mov	w10, wzr
    50cc:	str	x25, [x11]
    50d0:	str	x8, [x25, #48]
    50d4:	stp	x25, x25, [x25, #16]
    50d8:	b	5090 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x266c>
    50dc:	orr	w9, w10, w11
    50e0:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    50e4:	str	w9, [x10, #412]
    50e8:	str	x25, [x8]
    50ec:	str	x8, [x25, #48]
    50f0:	stp	x25, x25, [x25, #16]
    50f4:	mov	x23, x28
    50f8:	cbnz	x27, 4e08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23e4>
    50fc:	b	5138 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2714>
    5100:	ldr	x9, [x8, #16]
    5104:	ldr	x10, [x26, #432]
    5108:	cmp	x10, x9
    510c:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    5110:	cmp	x10, x8
    5114:	b.hi	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2734>  // b.pmore
    5118:	str	x25, [x9, #24]
    511c:	str	x25, [x8, #16]
    5120:	stp	x9, x8, [x25, #16]
    5124:	str	xzr, [x25, #48]
    5128:	mov	x23, x28
    512c:	cbnz	x27, 4e08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23e4>
    5130:	b	5138 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2714>
    5134:	mov	x19, xzr
    5138:	mov	x0, x19
    513c:	ldp	x20, x19, [sp, #80]
    5140:	ldp	x22, x21, [sp, #64]
    5144:	ldp	x24, x23, [sp, #48]
    5148:	ldp	x26, x25, [sp, #32]
    514c:	ldp	x28, x27, [sp, #16]
    5150:	ldp	x29, x30, [sp], #96
    5154:	ret
    5158:	bl	1ad0 <abort@plt>
    515c:	stp	x29, x30, [sp, #-64]!
    5160:	stp	x22, x21, [sp, #32]
    5164:	stp	x20, x19, [sp, #48]
    5168:	ldr	x21, [x0, #16]
    516c:	str	x23, [sp, #16]
    5170:	mov	x29, sp
    5174:	ldrh	w8, [x21, #10]
    5178:	cmp	w8, #0xf
    517c:	b.hi	527c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2858>  // b.pmore
    5180:	ldr	w22, [x0, #24]
    5184:	adrp	x9, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    5188:	add	x9, x9, #0x265
    518c:	adr	x10, 51a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2780>
    5190:	ldrb	w11, [x9, x8]
    5194:	add	x10, x10, x11, lsl #2
    5198:	mov	x19, x0
    519c:	mov	w20, wzr
    51a0:	br	x10
    51a4:	mov	x0, x21
    51a8:	bl	5280 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x285c>
    51ac:	cbz	w0, 51c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x279c>
    51b0:	mov	w20, w0
    51b4:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    51b8:	mov	w20, #0x1e                  	// #30
    51bc:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    51c0:	ldr	x8, [x21]
    51c4:	cmp	x8, #0x11
    51c8:	b.cc	5200 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27dc>  // b.lo, b.ul, b.last
    51cc:	add	w22, w22, #0x8
    51d0:	mov	w20, #0x20                  	// #32
    51d4:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    51d8:	mov	w20, #0x1c                  	// #28
    51dc:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    51e0:	mov	w20, #0x1a                  	// #26
    51e4:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    51e8:	mov	w20, #0x18                  	// #24
    51ec:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    51f0:	mov	w20, #0x14                  	// #20
    51f4:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    51f8:	mov	w20, #0x16                  	// #22
    51fc:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    5200:	cmp	x8, #0x10
    5204:	b.eq	526c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2848>  // b.none
    5208:	cmp	x8, #0x8
    520c:	b.ne	5274 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2850>  // b.any
    5210:	mov	w20, #0x1                   	// #1
    5214:	ldr	w21, [x19, #4]
    5218:	cmp	w21, #0x1
    521c:	b.lt	5244 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2820>  // b.tstop
    5220:	ldr	x23, [x19, #8]
    5224:	ldr	x0, [x23]
    5228:	bl	5280 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x285c>
    522c:	cbnz	w0, 5240 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x281c>
    5230:	subs	x21, x21, #0x1
    5234:	add	x23, x23, #0x8
    5238:	b.ne	5224 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2800>  // b.any
    523c:	b	5244 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2820>
    5240:	orr	w20, w20, #0x80
    5244:	sub	w8, w22, #0x1
    5248:	orr	w8, w8, #0xf
    524c:	add	w8, w8, #0x1
    5250:	stp	w8, w20, [x19, #24]
    5254:	ldp	x20, x19, [sp, #48]
    5258:	ldp	x22, x21, [sp, #32]
    525c:	ldr	x23, [sp, #16]
    5260:	mov	w0, wzr
    5264:	ldp	x29, x30, [sp], #64
    5268:	ret
    526c:	mov	w20, #0x2                   	// #2
    5270:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    5274:	mov	w20, #0x42                  	// #66
    5278:	b	5214 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27f0>
    527c:	bl	1ad0 <abort@plt>
    5280:	stp	x29, x30, [sp, #-48]!
    5284:	stp	x22, x21, [sp, #16]
    5288:	stp	x20, x19, [sp, #32]
    528c:	ldrh	w19, [x0, #10]
    5290:	mov	x29, sp
    5294:	sub	w8, w19, #0x2
    5298:	cmp	w8, #0x3
    529c:	b.cs	52b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2890>  // b.hs, b.nlast
    52a0:	mov	w20, #0x1                   	// #1
    52a4:	lsl	w8, w19, #2
    52a8:	sub	w8, w8, w20
    52ac:	add	w0, w8, #0x4
    52b0:	b	5370 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x294c>
    52b4:	cmp	w19, #0xd
    52b8:	b.eq	52e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28c0>  // b.none
    52bc:	cmp	w19, #0xf
    52c0:	b.ne	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.any
    52c4:	ldr	x8, [x0, #16]
    52c8:	ldr	x8, [x8]
    52cc:	ldrh	w19, [x8, #10]
    52d0:	sub	w8, w19, #0x2
    52d4:	cmp	w8, #0x3
    52d8:	b.cs	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.hs, b.nlast
    52dc:	mov	w20, #0x2                   	// #2
    52e0:	b	52a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2880>
    52e4:	ldr	x20, [x0]
    52e8:	sub	x8, x20, #0x4
    52ec:	cmp	x8, #0x3c
    52f0:	b.hi	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.pmore
    52f4:	ldr	x21, [x0, #16]
    52f8:	ldr	x8, [x21]
    52fc:	ldrh	w19, [x8, #10]
    5300:	orr	w8, w19, #0x2
    5304:	cmp	w8, #0xf
    5308:	b.ne	5320 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28fc>  // b.any
    530c:	mov	x22, x21
    5310:	ldr	x0, [x22], #8
    5314:	bl	5adc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x390>
    5318:	tbnz	w0, #31, 5310 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28ec>
    531c:	mov	w19, w0
    5320:	cmp	w19, #0x4
    5324:	b.eq	5348 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2924>  // b.none
    5328:	cmp	w19, #0x3
    532c:	b.eq	5358 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2934>  // b.none
    5330:	cmp	w19, #0x2
    5334:	b.ne	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.any
    5338:	tst	x20, #0x3
    533c:	b.ne	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.any
    5340:	lsr	x20, x20, #2
    5344:	b	5364 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2940>
    5348:	tst	x20, #0xf
    534c:	b.ne	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.any
    5350:	lsr	x20, x20, #4
    5354:	b	5364 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2940>
    5358:	tst	x20, #0x7
    535c:	b.ne	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.any
    5360:	lsr	x20, x20, #3
    5364:	cmp	x20, #0x4
    5368:	b.ls	5380 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x295c>  // b.plast
    536c:	mov	w0, wzr
    5370:	ldp	x20, x19, [sp, #32]
    5374:	ldp	x22, x21, [sp, #16]
    5378:	ldp	x29, x30, [sp], #48
    537c:	ret
    5380:	ldr	x0, [x21]
    5384:	cbz	x0, 52a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2880>
    5388:	add	x21, x21, #0x8
    538c:	b	53a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2980>
    5390:	mov	w1, w19
    5394:	bl	5b34 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3e8>
    5398:	cbz	w0, 5370 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x294c>
    539c:	ldr	x0, [x21], #8
    53a0:	cbz	x0, 52a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2880>
    53a4:	ldrh	w8, [x0, #10]
    53a8:	orr	w9, w8, #0x2
    53ac:	cmp	w9, #0xf
    53b0:	b.eq	5390 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x296c>  // b.none
    53b4:	cmp	w19, w8
    53b8:	b.eq	539c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2978>  // b.none
    53bc:	b	536c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>

00000000000053c0 <ffi_call@@LIBFFI_BASE_7.0>:
    53c0:	stp	x29, x30, [sp, #-16]!
    53c4:	mov	x29, sp
    53c8:	mov	x4, xzr
    53cc:	bl	53d8 <ffi_call@@LIBFFI_BASE_7.0+0x18>
    53d0:	ldp	x29, x30, [sp], #16
    53d4:	ret
    53d8:	stp	x29, x30, [sp, #-96]!
    53dc:	stp	x28, x27, [sp, #16]
    53e0:	stp	x26, x25, [sp, #32]
    53e4:	stp	x24, x23, [sp, #48]
    53e8:	stp	x22, x21, [sp, #64]
    53ec:	stp	x20, x19, [sp, #80]
    53f0:	mov	x29, sp
    53f4:	sub	sp, sp, #0x60
    53f8:	ldr	x8, [x0, #16]
    53fc:	mov	x23, x3
    5400:	mov	x25, x0
    5404:	ldr	x9, [x8]
    5408:	ldp	w8, w10, [x0, #24]
    540c:	stur	x4, [x29, #-40]
    5410:	stur	x1, [x29, #-56]
    5414:	stur	x9, [x29, #-88]
    5418:	tbnz	w10, #5, 542c <ffi_call@@LIBFFI_BASE_7.0+0x6c>
    541c:	cbz	x2, 543c <ffi_call@@LIBFFI_BASE_7.0+0x7c>
    5420:	lsr	x9, x10, #2
    5424:	and	x9, x9, #0x10
    5428:	b	5444 <ffi_call@@LIBFFI_BASE_7.0+0x84>
    542c:	cmp	x2, #0x0
    5430:	stur	x10, [x29, #-48]
    5434:	csel	x9, x9, xzr, eq  // eq = none
    5438:	b	5448 <ffi_call@@LIBFFI_BASE_7.0+0x88>
    543c:	and	w10, w10, #0x80
    5440:	mov	x9, xzr
    5444:	stur	x10, [x29, #-48]
    5448:	add	x10, x8, x9
    544c:	add	x10, x10, #0xef
    5450:	and	x10, x10, #0xfffffffffffffff0
    5454:	mov	x11, sp
    5458:	sub	x10, x11, x10
    545c:	mov	sp, x10
    5460:	add	x20, x10, #0xc0
    5464:	add	x8, x20, x8
    5468:	stp	x2, x8, [x29, #-80]
    546c:	add	x8, x8, #0x20
    5470:	cmp	x9, #0x0
    5474:	csel	x8, x2, x8, eq  // eq = none
    5478:	sub	x0, x29, #0x10
    547c:	stur	x10, [x29, #-32]
    5480:	stur	x8, [x29, #-64]
    5484:	bl	5974 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x228>
    5488:	ldr	w8, [x25, #4]
    548c:	cmp	w8, #0x1
    5490:	b.lt	5640 <ffi_call@@LIBFFI_BASE_7.0+0x280>  // b.tstop
    5494:	ldur	x9, [x29, #-32]
    5498:	mov	x22, xzr
    549c:	lsl	x27, x8, #3
    54a0:	mov	w28, #0x1                   	// #1
    54a4:	add	x9, x9, #0x80
    54a8:	stur	x9, [x29, #-24]
    54ac:	b	54dc <ffi_call@@LIBFFI_BASE_7.0+0x11c>
    54b0:	ldrh	w2, [x21, #8]
    54b4:	sub	x0, x29, #0x10
    54b8:	mov	x1, x20
    54bc:	mov	x3, x24
    54c0:	bl	5aa8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x35c>
    54c4:	mov	w8, #0x8                   	// #8
    54c8:	stur	w8, [x29, #-16]
    54cc:	str	x19, [x0]
    54d0:	add	x22, x22, #0x8
    54d4:	cmp	x27, x22
    54d8:	b.eq	5640 <ffi_call@@LIBFFI_BASE_7.0+0x280>  // b.none
    54dc:	ldr	x8, [x25, #8]
    54e0:	ldr	x21, [x8, x22]
    54e4:	ldrh	w26, [x21, #10]
    54e8:	cmp	w26, #0xf
    54ec:	b.hi	5688 <ffi_call@@LIBFFI_BASE_7.0+0x2c8>  // b.pmore
    54f0:	ldr	x24, [x21]
    54f4:	ldr	x19, [x23, x22]
    54f8:	lsl	w8, w28, w26
    54fc:	mov	w9, #0x5fe2                	// #24546
    5500:	tst	w8, w9
    5504:	b.eq	5538 <ffi_call@@LIBFFI_BASE_7.0+0x178>  // b.none
    5508:	mov	x0, x19
    550c:	mov	w1, w26
    5510:	bl	5ba0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x454>
    5514:	ldur	w8, [x29, #-16]
    5518:	mov	x19, x0
    551c:	cmp	w8, #0x7
    5520:	b.hi	54b0 <ffi_call@@LIBFFI_BASE_7.0+0xf0>  // b.pmore
    5524:	add	w9, w8, #0x1
    5528:	stur	w9, [x29, #-16]
    552c:	ldur	x9, [x29, #-24]
    5530:	str	x19, [x9, x8, lsl #3]
    5534:	b	54d0 <ffi_call@@LIBFFI_BASE_7.0+0x110>
    5538:	mov	w9, #0xa01c                	// #40988
    553c:	tst	w8, w9
    5540:	b.eq	54d0 <ffi_call@@LIBFFI_BASE_7.0+0x110>  // b.none
    5544:	mov	x0, x21
    5548:	bl	5280 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x285c>
    554c:	cbz	w0, 5590 <ffi_call@@LIBFFI_BASE_7.0+0x1d0>
    5550:	ldur	w8, [x29, #-12]
    5554:	and	w9, w0, #0x3
    5558:	mov	w2, w0
    555c:	sub	w9, w8, w9
    5560:	add	w9, w9, #0x4
    5564:	cmp	w9, #0x8
    5568:	b.hi	55ac <ffi_call@@LIBFFI_BASE_7.0+0x1ec>  // b.pmore
    556c:	ldur	x10, [x29, #-32]
    5570:	mov	x1, x19
    5574:	stur	w9, [x29, #-12]
    5578:	add	x28, x10, x8, lsl #4
    557c:	mov	x0, x28
    5580:	bl	5c24 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4d8>
    5584:	mov	w8, #0x5                   	// #5
    5588:	cbnz	w8, 5630 <ffi_call@@LIBFFI_BASE_7.0+0x270>
    558c:	b	561c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    5590:	cmp	x24, #0x11
    5594:	b.cc	55d0 <ffi_call@@LIBFFI_BASE_7.0+0x210>  // b.lo, b.ul, b.last
    5598:	add	x19, x23, x22
    559c:	mov	w8, #0x6                   	// #6
    55a0:	mov	w26, #0xe                   	// #14
    55a4:	mov	w24, #0x8                   	// #8
    55a8:	b	5634 <ffi_call@@LIBFFI_BASE_7.0+0x274>
    55ac:	mov	w8, #0x8                   	// #8
    55b0:	stur	w8, [x29, #-12]
    55b4:	ldrh	w2, [x21, #8]
    55b8:	sub	x0, x29, #0x10
    55bc:	mov	x1, x20
    55c0:	mov	x3, x24
    55c4:	bl	5aa8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x35c>
    55c8:	cbnz	wzr, 562c <ffi_call@@LIBFFI_BASE_7.0+0x26c>
    55cc:	b	5618 <ffi_call@@LIBFFI_BASE_7.0+0x258>
    55d0:	ldur	w8, [x29, #-16]
    55d4:	add	x9, x24, #0x7
    55d8:	add	x10, x8, x9, lsr #3
    55dc:	cmp	x10, #0x8
    55e0:	b.hi	55fc <ffi_call@@LIBFFI_BASE_7.0+0x23c>  // b.pmore
    55e4:	ldur	x10, [x29, #-24]
    55e8:	lsr	x9, x9, #3
    55ec:	add	x28, x10, x8, lsl #3
    55f0:	add	w8, w8, w9
    55f4:	stur	w8, [x29, #-16]
    55f8:	b	561c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    55fc:	mov	w8, #0x8                   	// #8
    5600:	stur	w8, [x29, #-16]
    5604:	ldrh	w2, [x21, #8]
    5608:	sub	x0, x29, #0x10
    560c:	mov	x1, x20
    5610:	mov	x3, x24
    5614:	bl	5aa8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x35c>
    5618:	mov	x28, x0
    561c:	mov	x0, x28
    5620:	mov	x1, x19
    5624:	mov	x2, x24
    5628:	bl	19a0 <memcpy@plt>
    562c:	mov	w8, wzr
    5630:	mov	w28, #0x1                   	// #1
    5634:	cmp	w8, #0x6
    5638:	b.ne	54d0 <ffi_call@@LIBFFI_BASE_7.0+0x110>  // b.any
    563c:	b	5508 <ffi_call@@LIBFFI_BASE_7.0+0x148>
    5640:	ldp	x1, x20, [x29, #-72]
    5644:	ldp	x2, x19, [x29, #-56]
    5648:	ldp	x5, x0, [x29, #-40]
    564c:	mov	x3, x20
    5650:	mov	w4, w19
    5654:	bl	5ce0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x594>
    5658:	tbz	w19, #6, 5668 <ffi_call@@LIBFFI_BASE_7.0+0x2a8>
    565c:	ldp	x2, x0, [x29, #-88]
    5660:	mov	x1, x20
    5664:	bl	19a0 <memcpy@plt>
    5668:	mov	sp, x29
    566c:	ldp	x20, x19, [sp, #80]
    5670:	ldp	x22, x21, [sp, #64]
    5674:	ldp	x24, x23, [sp, #48]
    5678:	ldp	x26, x25, [sp, #32]
    567c:	ldp	x28, x27, [sp, #16]
    5680:	ldp	x29, x30, [sp], #96
    5684:	ret
    5688:	bl	1ad0 <abort@plt>

000000000000568c <ffi_call_go@@LIBFFI_GO_CLOSURE_7.0>:
    568c:	stp	x29, x30, [sp, #-16]!
    5690:	mov	x29, sp
    5694:	bl	53d8 <ffi_call@@LIBFFI_BASE_7.0+0x18>
    5698:	ldp	x29, x30, [sp], #16
    569c:	ret

00000000000056a0 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0>:
    56a0:	stp	x29, x30, [sp, #-48]!
    56a4:	stp	x22, x21, [sp, #16]
    56a8:	stp	x20, x19, [sp, #32]
    56ac:	mov	x29, sp
    56b0:	ldr	w8, [x1]
    56b4:	cmp	w8, #0x1
    56b8:	b.ne	5724 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x84>  // b.any
    56bc:	ldr	w8, [x1, #28]
    56c0:	adrp	x10, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    56c4:	add	x10, x10, #0x28b
    56c8:	ldr	q0, [x10]
    56cc:	adrp	x9, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25dc>
    56d0:	adrp	x10, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25dc>
    56d4:	add	x9, x9, #0xe50
    56d8:	add	x10, x10, #0xe70
    56dc:	tst	w8, #0x80
    56e0:	mov	x21, x1
    56e4:	csel	x8, x10, x9, eq  // eq = none
    56e8:	add	x1, x0, #0x18
    56ec:	mov	x19, x3
    56f0:	mov	x20, x2
    56f4:	mov	x22, x0
    56f8:	str	q0, [x0]
    56fc:	str	x8, [x0, #16]
    5700:	bl	5738 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x98>
    5704:	mov	x0, x22
    5708:	bl	29f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x454>
    570c:	add	x1, x0, #0x18
    5710:	bl	5738 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x98>
    5714:	mov	w0, wzr
    5718:	stp	x21, x20, [x22, #24]
    571c:	str	x19, [x22, #40]
    5720:	b	5728 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x88>
    5724:	mov	w0, #0x2                   	// #2
    5728:	ldp	x20, x19, [sp, #32]
    572c:	ldp	x22, x21, [sp, #16]
    5730:	ldp	x29, x30, [sp], #48
    5734:	ret
    5738:	stp	x29, x30, [sp, #-16]!
    573c:	mov	x29, sp
    5740:	bl	6008 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8bc>
    5744:	ldp	x29, x30, [sp], #16
    5748:	ret

000000000000574c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0>:
    574c:	ldr	w8, [x1]
    5750:	cmp	w8, #0x1
    5754:	b.ne	5788 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3c>  // b.any
    5758:	ldr	w9, [x1, #28]
    575c:	adrp	x10, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25dc>
    5760:	adrp	x11, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25dc>
    5764:	add	x10, x10, #0xfc0
    5768:	add	x11, x11, #0xfe0
    576c:	tst	w9, #0x80
    5770:	mov	x8, x0
    5774:	mov	w0, wzr
    5778:	csel	x9, x11, x10, eq  // eq = none
    577c:	stp	x9, x1, [x8]
    5780:	str	x2, [x8, #16]
    5784:	ret
    5788:	mov	w0, #0x2                   	// #2
    578c:	ret
    5790:	stp	x29, x30, [sp, #-96]!
    5794:	stp	x28, x27, [sp, #16]
    5798:	stp	x26, x25, [sp, #32]
    579c:	stp	x24, x23, [sp, #48]
    57a0:	stp	x22, x21, [sp, #64]
    57a4:	stp	x20, x19, [sp, #80]
    57a8:	mov	x29, sp
    57ac:	sub	sp, sp, #0x30
    57b0:	stp	x5, x6, [x29, #-40]
    57b4:	ldr	w8, [x0, #4]
    57b8:	mov	x9, sp
    57bc:	mov	x24, x4
    57c0:	mov	x25, x3
    57c4:	lsl	x8, x8, #3
    57c8:	add	x8, x8, #0xf
    57cc:	and	x8, x8, #0xffffffff0
    57d0:	mov	x23, x0
    57d4:	sub	x26, x9, x8
    57d8:	stur	x2, [x29, #-24]
    57dc:	stur	x1, [x29, #-48]
    57e0:	mov	sp, x26
    57e4:	sub	x0, x29, #0x10
    57e8:	bl	5974 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x228>
    57ec:	ldr	w8, [x23, #4]
    57f0:	cmp	w8, #0x1
    57f4:	b.lt	5928 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1dc>  // b.tstop
    57f8:	mov	x19, xzr
    57fc:	lsl	x20, x8, #3
    5800:	mov	w21, #0x1                   	// #1
    5804:	mov	w22, #0x5fe2                	// #24546
    5808:	b	5830 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe4>
    580c:	sub	x1, x29, #0x10
    5810:	mov	x0, x25
    5814:	mov	x2, x24
    5818:	mov	x3, x27
    581c:	bl	597c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x230>
    5820:	str	x0, [x26, x19]
    5824:	add	x19, x19, #0x8
    5828:	cmp	x20, x19
    582c:	b.eq	5928 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1dc>  // b.none
    5830:	ldr	x8, [x23, #8]
    5834:	ldr	x28, [x8, x19]
    5838:	ldrh	w8, [x28, #10]
    583c:	cmp	w8, #0xf
    5840:	b.hi	5970 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x224>  // b.pmore
    5844:	ldr	x27, [x28]
    5848:	lsl	w8, w21, w8
    584c:	tst	w8, w22
    5850:	b.ne	580c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xc0>  // b.any
    5854:	mov	w9, #0xa01c                	// #40988
    5858:	tst	w8, w9
    585c:	b.eq	5824 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd8>  // b.none
    5860:	mov	x0, x28
    5864:	bl	5280 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x285c>
    5868:	cbz	w0, 58a4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x158>
    586c:	ldur	w8, [x29, #-12]
    5870:	and	w9, w0, #0x3
    5874:	mov	w10, #0x4                   	// #4
    5878:	sub	w9, w10, w9
    587c:	add	x10, x8, x9
    5880:	mov	w2, w0
    5884:	cmp	x10, #0x8
    5888:	b.hi	58cc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x180>  // b.pmore
    588c:	add	x0, x25, x8, lsl #4
    5890:	add	w8, w8, w9
    5894:	mov	x1, x0
    5898:	stur	w8, [x29, #-12]
    589c:	bl	59c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x27c>
    58a0:	b	5820 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd4>
    58a4:	cmp	x27, #0x11
    58a8:	b.cc	58d8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x18c>  // b.lo, b.ul, b.last
    58ac:	sub	x1, x29, #0x10
    58b0:	mov	w3, #0x8                   	// #8
    58b4:	mov	x0, x25
    58b8:	mov	x2, x24
    58bc:	bl	597c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x230>
    58c0:	ldr	x8, [x0]
    58c4:	str	x8, [x26, x19]
    58c8:	b	5824 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd8>
    58cc:	mov	w8, #0x8                   	// #8
    58d0:	stur	w8, [x29, #-12]
    58d4:	b	5910 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c4>
    58d8:	ldur	w8, [x29, #-16]
    58dc:	add	x9, x27, #0x7
    58e0:	add	x10, x8, x9, lsr #3
    58e4:	cmp	x10, #0x8
    58e8:	b.hi	5908 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1bc>  // b.pmore
    58ec:	lsr	x9, x9, #3
    58f0:	add	x10, x25, x8, lsl #3
    58f4:	add	x10, x10, #0x80
    58f8:	add	w8, w8, w9
    58fc:	str	x10, [x26, x19]
    5900:	stur	w8, [x29, #-16]
    5904:	b	5824 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd8>
    5908:	mov	w8, #0x8                   	// #8
    590c:	stur	w8, [x29, #-16]
    5910:	ldrh	w2, [x28, #8]
    5914:	sub	x0, x29, #0x10
    5918:	mov	x1, x24
    591c:	mov	x3, x27
    5920:	bl	5aa8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x35c>
    5924:	b	5820 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd4>
    5928:	ldr	w24, [x23, #28]
    592c:	ldp	x9, x8, [x29, #-40]
    5930:	ldur	x3, [x29, #-24]
    5934:	mov	x0, x23
    5938:	tst	w24, #0x20
    593c:	csel	x1, x9, x8, eq  // eq = none
    5940:	ldur	x8, [x29, #-48]
    5944:	mov	x2, x26
    5948:	blr	x8
    594c:	mov	w0, w24
    5950:	mov	sp, x29
    5954:	ldp	x20, x19, [sp, #80]
    5958:	ldp	x22, x21, [sp, #64]
    595c:	ldp	x24, x23, [sp, #48]
    5960:	ldp	x26, x25, [sp, #32]
    5964:	ldp	x28, x27, [sp, #16]
    5968:	ldp	x29, x30, [sp], #96
    596c:	ret
    5970:	bl	1ad0 <abort@plt>
    5974:	stp	xzr, xzr, [x0]
    5978:	ret
    597c:	stp	x29, x30, [sp, #-16]!
    5980:	ldr	w8, [x1]
    5984:	mov	x29, sp
    5988:	cmp	w8, #0x7
    598c:	b.hi	59a8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x25c>  // b.pmore
    5990:	add	w9, w8, #0x1
    5994:	add	x8, x0, x8, lsl #3
    5998:	str	w9, [x1]
    599c:	add	x0, x8, #0x80
    59a0:	ldp	x29, x30, [sp], #16
    59a4:	ret
    59a8:	mov	w8, #0x8                   	// #8
    59ac:	str	w8, [x1]
    59b0:	mov	x0, x1
    59b4:	mov	x1, x2
    59b8:	mov	x2, x3
    59bc:	bl	5aa8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x35c>
    59c0:	ldp	x29, x30, [sp], #16
    59c4:	ret
    59c8:	stp	x29, x30, [sp, #-32]!
    59cc:	sub	w8, w2, #0x8
    59d0:	str	x19, [sp, #16]
    59d4:	cmp	w8, #0x7
    59d8:	mov	x19, x0
    59dc:	mov	x29, sp
    59e0:	b.hi	5a0c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2c0>  // b.pmore
    59e4:	adrp	x9, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    59e8:	add	x9, x9, #0x275
    59ec:	adr	x10, 59fc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2b0>
    59f0:	ldrb	w11, [x9, x8]
    59f4:	add	x10, x10, x11, lsl #2
    59f8:	br	x10
    59fc:	ldp	q16, q17, [x1]
    5a00:	ldp	q18, q19, [x1, #32]
    5a04:	st4	{v16.s-v19.s}[0], [x19]
    5a08:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a0c:	cmp	x19, x1
    5a10:	b.eq	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>  // b.none
    5a14:	ubfiz	w8, w2, #4, #2
    5a18:	mov	w9, #0x40                  	// #64
    5a1c:	sub	w2, w9, w8
    5a20:	mov	x0, x19
    5a24:	bl	19a0 <memcpy@plt>
    5a28:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a2c:	ldp	q16, q17, [x1]
    5a30:	ldr	q18, [x1, #32]
    5a34:	st3	{v16.s-v18.s}[0], [x19]
    5a38:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a3c:	ldp	q16, q17, [x1]
    5a40:	st2	{v16.s, v17.s}[0], [x19]
    5a44:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a48:	cmp	x19, x1
    5a4c:	b.eq	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>  // b.none
    5a50:	ldr	w8, [x1]
    5a54:	str	w8, [x19]
    5a58:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a5c:	ldp	q16, q17, [x1]
    5a60:	ldp	q18, q19, [x1, #32]
    5a64:	st4	{v16.d-v19.d}[0], [x19]
    5a68:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a6c:	ldp	q16, q17, [x1]
    5a70:	ldr	q18, [x1, #32]
    5a74:	st3	{v16.d-v18.d}[0], [x19]
    5a78:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a7c:	ldp	q16, q17, [x1]
    5a80:	st2	{v16.d, v17.d}[0], [x19]
    5a84:	b	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>
    5a88:	cmp	x19, x1
    5a8c:	b.eq	5a98 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34c>  // b.none
    5a90:	ldr	x8, [x1]
    5a94:	str	x8, [x19]
    5a98:	mov	x0, x19
    5a9c:	ldr	x19, [sp, #16]
    5aa0:	ldp	x29, x30, [sp], #32
    5aa4:	ret
    5aa8:	ldr	x8, [x0, #8]
    5aac:	cmp	x2, #0x8
    5ab0:	mov	w9, #0x8                   	// #8
    5ab4:	csel	x9, x2, x9, hi  // hi = pmore
    5ab8:	sub	x9, x9, #0x1
    5abc:	sub	x8, x8, #0x1
    5ac0:	orr	x8, x8, x9
    5ac4:	add	x8, x8, #0x1
    5ac8:	add	x9, x8, x3
    5acc:	add	x8, x1, x8
    5ad0:	str	x9, [x0, #8]
    5ad4:	mov	x0, x8
    5ad8:	ret
    5adc:	stp	x29, x30, [sp, #-32]!
    5ae0:	ldr	x9, [x0, #16]
    5ae4:	str	x19, [sp, #16]
    5ae8:	mov	x29, sp
    5aec:	cbz	x9, 5b24 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d8>
    5af0:	ldr	x8, [x9]
    5af4:	cbz	x8, 5b24 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d8>
    5af8:	add	x19, x9, #0x8
    5afc:	ldrh	w0, [x8, #10]
    5b00:	orr	w9, w0, #0x2
    5b04:	cmp	w9, #0xf
    5b08:	b.ne	5b28 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3dc>  // b.any
    5b0c:	mov	x0, x8
    5b10:	bl	5adc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x390>
    5b14:	tbz	w0, #31, 5b28 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3dc>
    5b18:	ldr	x8, [x19], #8
    5b1c:	cbnz	x8, 5afc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3b0>
    5b20:	b	5b28 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3dc>
    5b24:	mov	w0, #0xffffffff            	// #-1
    5b28:	ldr	x19, [sp, #16]
    5b2c:	ldp	x29, x30, [sp], #32
    5b30:	ret
    5b34:	stp	x29, x30, [sp, #-32]!
    5b38:	stp	x20, x19, [sp, #16]
    5b3c:	ldr	x8, [x0, #16]
    5b40:	mov	x29, sp
    5b44:	cbz	x8, 5b90 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x444>
    5b48:	ldr	x0, [x8]
    5b4c:	cbz	x0, 5b90 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x444>
    5b50:	mov	w19, w1
    5b54:	add	x20, x8, #0x8
    5b58:	b	5b70 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x424>
    5b5c:	mov	w1, w19
    5b60:	bl	5b34 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3e8>
    5b64:	cbz	w0, 5b94 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x448>
    5b68:	ldr	x0, [x20], #8
    5b6c:	cbz	x0, 5b90 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x444>
    5b70:	ldrh	w8, [x0, #10]
    5b74:	orr	w9, w8, #0x2
    5b78:	cmp	w9, #0xf
    5b7c:	b.eq	5b5c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x410>  // b.none
    5b80:	cmp	w8, w19
    5b84:	b.eq	5b68 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x41c>  // b.none
    5b88:	mov	w0, wzr
    5b8c:	b	5b94 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x448>
    5b90:	mov	w0, #0x1                   	// #1
    5b94:	ldp	x20, x19, [sp, #16]
    5b98:	ldp	x29, x30, [sp], #32
    5b9c:	ret
    5ba0:	stp	x29, x30, [sp, #-16]!
    5ba4:	sub	w8, w1, #0x1
    5ba8:	cmp	w8, #0xd
    5bac:	mov	x29, sp
    5bb0:	b.hi	5c20 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4d4>  // b.pmore
    5bb4:	adrp	x9, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b4>
    5bb8:	add	x9, x9, #0x27d
    5bbc:	adr	x10, 5bcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x480>
    5bc0:	ldrb	w11, [x9, x8]
    5bc4:	add	x10, x10, x11, lsl #2
    5bc8:	br	x10
    5bcc:	ldr	x0, [x0]
    5bd0:	ldp	x29, x30, [sp], #16
    5bd4:	ret
    5bd8:	ldrsw	x0, [x0]
    5bdc:	ldp	x29, x30, [sp], #16
    5be0:	ret
    5be4:	ldrh	w0, [x0]
    5be8:	ldp	x29, x30, [sp], #16
    5bec:	ret
    5bf0:	ldrb	w0, [x0]
    5bf4:	ldp	x29, x30, [sp], #16
    5bf8:	ret
    5bfc:	ldrsb	x0, [x0]
    5c00:	ldp	x29, x30, [sp], #16
    5c04:	ret
    5c08:	ldrsh	x0, [x0]
    5c0c:	ldp	x29, x30, [sp], #16
    5c10:	ret
    5c14:	ldr	w0, [x0]
    5c18:	ldp	x29, x30, [sp], #16
    5c1c:	ret
    5c20:	bl	1ad0 <abort@plt>
    5c24:	sub	w8, w2, #0x8
    5c28:	mov	w9, #0xc                   	// #12
    5c2c:	smull	x8, w8, w9
    5c30:	adr	x9, 5c3c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4f0>
    5c34:	add	x9, x9, x8
    5c38:	br	x9
    5c3c:	ldp	s16, s17, [x1]
    5c40:	ldp	s18, s19, [x1, #8]
    5c44:	b	5cc8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x57c>
    5c48:	ldp	s16, s17, [x1]
    5c4c:	ldr	s18, [x1, #8]
    5c50:	b	5ccc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x580>
    5c54:	ldp	s16, s17, [x1]
    5c58:	b	5cd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x584>
    5c5c:	nop
    5c60:	ldr	s16, [x1]
    5c64:	b	5cd4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x588>
    5c68:	nop
    5c6c:	ldp	d16, d17, [x1]
    5c70:	ldp	d18, d19, [x1, #16]
    5c74:	b	5cc8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x57c>
    5c78:	ldp	d16, d17, [x1]
    5c7c:	ldr	d18, [x1, #16]
    5c80:	b	5ccc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x580>
    5c84:	ldp	d16, d17, [x1]
    5c88:	b	5cd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x584>
    5c8c:	nop
    5c90:	ldr	d16, [x1]
    5c94:	b	5cd4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x588>
    5c98:	nop
    5c9c:	ldp	q16, q17, [x1]
    5ca0:	ldp	q18, q19, [x1, #32]
    5ca4:	b	5cc8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x57c>
    5ca8:	ldp	q16, q17, [x1]
    5cac:	ldr	q18, [x1, #32]
    5cb0:	b	5ccc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x580>
    5cb4:	ldp	q16, q17, [x1]
    5cb8:	b	5cd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x584>
    5cbc:	nop
    5cc0:	ldr	q16, [x1]
    5cc4:	b	5cd4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x588>
    5cc8:	str	q19, [x0, #48]
    5ccc:	str	q18, [x0, #32]
    5cd0:	str	q17, [x0, #16]
    5cd4:	str	q16, [x0]
    5cd8:	ret
    5cdc:	nop
    5ce0:	stp	x29, x30, [x1]
    5ce4:	mov	x29, x1
    5ce8:	mov	sp, x0
    5cec:	mov	x9, x2
    5cf0:	mov	x8, x3
    5cf4:	mov	x18, x5
    5cf8:	stp	x3, x4, [x29, #16]
    5cfc:	tbz	w4, #7, 5d10 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5c4>
    5d00:	ldp	q0, q1, [sp]
    5d04:	ldp	q2, q3, [sp, #32]
    5d08:	ldp	q4, q5, [sp, #64]
    5d0c:	ldp	q6, q7, [sp, #96]
    5d10:	ldp	x0, x1, [sp, #128]
    5d14:	ldp	x2, x3, [sp, #144]
    5d18:	ldp	x4, x5, [sp, #160]
    5d1c:	ldp	x6, x7, [sp, #176]
    5d20:	add	sp, sp, #0xc0
    5d24:	blr	x9
    5d28:	ldp	x3, x4, [x29, #16]
    5d2c:	mov	sp, x29
    5d30:	ldp	x29, x30, [x29]
    5d34:	adr	x5, 5d50 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x604>
    5d38:	and	w4, w4, #0x1f
    5d3c:	add	x5, x5, x4, lsl #3
    5d40:	br	x5
    5d44:	nop
    5d48:	nop
    5d4c:	nop
    5d50:	ret
    5d54:	nop
    5d58:	str	x0, [x3]
    5d5c:	ret
    5d60:	stp	x0, x1, [x3]
    5d64:	ret
    5d68:	brk	#0x3e8
    5d6c:	ret
    5d70:	brk	#0x3e8
    5d74:	ret
    5d78:	brk	#0x3e8
    5d7c:	ret
    5d80:	brk	#0x3e8
    5d84:	ret
    5d88:	brk	#0x3e8
    5d8c:	ret
    5d90:	st4	{v0.s-v3.s}[0], [x3]
    5d94:	ret
    5d98:	st3	{v0.s-v2.s}[0], [x3]
    5d9c:	ret
    5da0:	stp	s0, s1, [x3]
    5da4:	ret
    5da8:	str	s0, [x3]
    5dac:	ret
    5db0:	st4	{v0.d-v3.d}[0], [x3]
    5db4:	ret
    5db8:	st3	{v0.d-v2.d}[0], [x3]
    5dbc:	ret
    5dc0:	stp	d0, d1, [x3]
    5dc4:	ret
    5dc8:	str	d0, [x3]
    5dcc:	ret
    5dd0:	str	q3, [x3, #48]
    5dd4:	nop
    5dd8:	str	q2, [x3, #32]
    5ddc:	nop
    5de0:	stp	q0, q1, [x3]
    5de4:	ret
    5de8:	str	q0, [x3]
    5dec:	ret
    5df0:	uxtb	w0, w0
    5df4:	str	x0, [x3]
    5df8:	ret
    5dfc:	nop
    5e00:	uxth	w0, w0
    5e04:	str	x0, [x3]
    5e08:	ret
    5e0c:	nop
    5e10:	mov	w0, w0
    5e14:	str	x0, [x3]
    5e18:	ret
    5e1c:	nop
    5e20:	sxtb	x0, w0
    5e24:	str	x0, [x3]
    5e28:	ret
    5e2c:	nop
    5e30:	sxth	x0, w0
    5e34:	str	x0, [x3]
    5e38:	ret
    5e3c:	nop
    5e40:	sxtw	x0, w0
    5e44:	str	x0, [x3]
    5e48:	ret
    5e4c:	nop
    5e50:	stp	x29, x30, [sp, #-272]!
    5e54:	stp	q0, q1, [sp, #16]
    5e58:	stp	q2, q3, [sp, #48]
    5e5c:	stp	q4, q5, [sp, #80]
    5e60:	stp	q6, q7, [sp, #112]
    5e64:	b	5e74 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x728>
    5e68:	nop
    5e6c:	nop
    5e70:	stp	x29, x30, [sp, #-272]!
    5e74:	mov	x29, sp
    5e78:	stp	x0, x1, [sp, #144]
    5e7c:	stp	x2, x3, [sp, #160]
    5e80:	stp	x4, x5, [sp, #176]
    5e84:	stp	x6, x7, [sp, #192]
    5e88:	ldp	x0, x1, [x17, #24]
    5e8c:	ldr	x2, [x17, #40]
    5e90:	add	x3, sp, #0x10
    5e94:	add	x4, sp, #0x110
    5e98:	add	x5, sp, #0xd0
    5e9c:	mov	x6, x8
    5ea0:	bl	5790 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x44>
    5ea4:	adr	x1, 5ec0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x774>
    5ea8:	and	w0, w0, #0x1f
    5eac:	add	x1, x1, x0, lsl #3
    5eb0:	add	x3, sp, #0xd0
    5eb4:	br	x1
    5eb8:	nop
    5ebc:	nop
    5ec0:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5ec4:	nop
    5ec8:	ldr	x0, [x3]
    5ecc:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5ed0:	ldp	x0, x1, [x3]
    5ed4:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5ed8:	brk	#0x3e8
    5edc:	nop
    5ee0:	brk	#0x3e8
    5ee4:	nop
    5ee8:	brk	#0x3e8
    5eec:	nop
    5ef0:	brk	#0x3e8
    5ef4:	nop
    5ef8:	brk	#0x3e8
    5efc:	nop
    5f00:	ldr	s3, [x3, #12]
    5f04:	nop
    5f08:	ldr	s2, [x3, #8]
    5f0c:	nop
    5f10:	ldp	s0, s1, [x3]
    5f14:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f18:	ldr	s0, [x3]
    5f1c:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f20:	ldr	d3, [x3, #24]
    5f24:	nop
    5f28:	ldr	d2, [x3, #16]
    5f2c:	nop
    5f30:	ldp	d0, d1, [x3]
    5f34:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f38:	ldr	d0, [x3]
    5f3c:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f40:	ldr	q3, [x3, #48]
    5f44:	nop
    5f48:	ldr	q2, [x3, #32]
    5f4c:	nop
    5f50:	ldp	q0, q1, [x3]
    5f54:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f58:	ldr	q0, [x3]
    5f5c:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f60:	ldrb	w0, [x3]
    5f64:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f68:	brk	#0x3e8
    5f6c:	nop
    5f70:	ldrh	w0, [x3]
    5f74:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f78:	brk	#0x3e8
    5f7c:	nop
    5f80:	ldr	w0, [x3]
    5f84:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f88:	brk	#0x3e8
    5f8c:	nop
    5f90:	ldrsb	x0, [x3]
    5f94:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5f98:	brk	#0x3e8
    5f9c:	nop
    5fa0:	ldrsh	x0, [x3]
    5fa4:	b	5fb8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x86c>
    5fa8:	brk	#0x3e8
    5fac:	nop
    5fb0:	ldrsw	x0, [x3]
    5fb4:	nop
    5fb8:	ldp	x29, x30, [sp], #272
    5fbc:	ret
    5fc0:	stp	x29, x30, [sp, #-272]!
    5fc4:	stp	q0, q1, [sp, #16]
    5fc8:	stp	q2, q3, [sp, #48]
    5fcc:	stp	q4, q5, [sp, #80]
    5fd0:	stp	q6, q7, [sp, #112]
    5fd4:	b	5fe4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x898>
    5fd8:	nop
    5fdc:	nop
    5fe0:	stp	x29, x30, [sp, #-272]!
    5fe4:	mov	x29, sp
    5fe8:	stp	x0, x1, [sp, #144]
    5fec:	stp	x2, x3, [sp, #160]
    5ff0:	stp	x4, x5, [sp, #176]
    5ff4:	stp	x6, x7, [sp, #192]
    5ff8:	ldp	x0, x1, [x18, #8]
    5ffc:	mov	x2, x18
    6000:	b	5e90 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x744>
    6004:	nop
    6008:	b	6010 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8c4>
    600c:	nop
    6010:	adrp	x3, 17000 <memcpy@GLIBC_2.17>
    6014:	ldr	w2, [x3, #1540]
    6018:	cbnz	w2, 6028 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8dc>
    601c:	mrs	x4, ctr_el0
    6020:	mov	w2, w4
    6024:	str	w4, [x3, #1540]
    6028:	ubfx	x4, x2, #16, #4
    602c:	mov	w3, #0x4                   	// #4
    6030:	and	w5, w2, #0xf
    6034:	lsl	w4, w3, w4
    6038:	sub	w2, w4, #0x1
    603c:	bic	x2, x0, x2
    6040:	sxtw	x4, w4
    6044:	cmp	x2, x1
    6048:	lsl	w3, w3, w5
    604c:	b.cs	6060 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x914>  // b.hs, b.nlast
    6050:	dc	cvau, x2
    6054:	add	x2, x2, x4
    6058:	cmp	x1, x2
    605c:	b.hi	6050 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x904>  // b.pmore
    6060:	dsb	ish
    6064:	sub	w2, w3, #0x1
    6068:	sxtw	x3, w3
    606c:	bic	x0, x0, x2
    6070:	cmp	x1, x0
    6074:	b.ls	6088 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x93c>  // b.plast
    6078:	ic	ivau, x0
    607c:	add	x0, x0, x3
    6080:	cmp	x1, x0
    6084:	b.hi	6078 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x92c>  // b.pmore
    6088:	dsb	ish
    608c:	isb
    6090:	ret

Disassembly of section .fini:

0000000000006094 <.fini>:
    6094:	stp	x29, x30, [sp, #-16]!
    6098:	mov	x29, sp
    609c:	ldp	x29, x30, [sp], #16
    60a0:	ret
