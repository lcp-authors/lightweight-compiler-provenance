In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libctf.a_clang_-O2:

ctf-archive.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_arc_write_fd>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x22, x21, [sp, #128]
   8:	mov	w21, w0
   c:	adrp	x0, 0 <ctf_arc_write_fd>
  10:	stp	x29, x30, [sp, #64]
  14:	stp	x28, x27, [sp, #80]
  18:	add	x29, sp, #0x40
  1c:	mov	x28, x1
  20:	add	x0, x0, #0x0
  24:	mov	x1, x2
  28:	stp	x26, x25, [sp, #96]
  2c:	stp	x24, x23, [sp, #112]
  30:	stp	x20, x19, [sp, #144]
  34:	mov	x26, x4
  38:	mov	x23, x3
  3c:	mov	x25, x2
  40:	sturb	wzr, [x29, #-12]
  44:	bl	0 <ctf_dprintf>
  48:	lsl	x20, x25, #4
  4c:	add	x19, x20, #0x28
  50:	adrp	x0, 0 <ctf_arc_write_fd>
  54:	add	x0, x0, #0x0
  58:	mov	x1, x19
  5c:	bl	0 <ctf_dprintf>
  60:	add	x1, x20, #0x27
  64:	mov	w0, w21
  68:	mov	w2, wzr
  6c:	bl	0 <lseek>
  70:	tbnz	x0, #63, bc <ctf_arc_write_fd+0xbc>
  74:	sub	x1, x29, #0xc
  78:	mov	w2, #0x1                   	// #1
  7c:	mov	w0, w21
  80:	bl	0 <write>
  84:	tbnz	x0, #63, bc <ctf_arc_write_fd+0xbc>
  88:	mov	w2, #0x3                   	// #3
  8c:	mov	w3, #0x1                   	// #1
  90:	mov	x0, xzr
  94:	mov	x1, x19
  98:	mov	w4, w21
  9c:	mov	x5, xzr
  a0:	bl	0 <mmap>
  a4:	add	x8, x0, #0x1
  a8:	cmp	x8, #0x2
  ac:	b.cs	114 <ctf_arc_write_fd+0x114>  // b.hs, b.nlast
  b0:	adrp	x20, 0 <ctf_arc_write_fd>
  b4:	add	x20, x20, #0x0
  b8:	b	c4 <ctf_arc_write_fd+0xc4>
  bc:	adrp	x20, 0 <ctf_arc_write_fd>
  c0:	add	x20, x20, #0x0
  c4:	bl	0 <__errno_location>
  c8:	mov	x19, x0
  cc:	ldr	w0, [x0]
  d0:	cmp	w0, #0x3e7
  d4:	b.gt	e0 <ctf_arc_write_fd+0xe0>
  d8:	bl	0 <strerror>
  dc:	b	e4 <ctf_arc_write_fd+0xe4>
  e0:	bl	0 <ctf_errmsg>
  e4:	mov	x1, x0
  e8:	mov	x0, x20
  ec:	bl	0 <ctf_dprintf>
  f0:	ldr	w0, [x19]
  f4:	ldp	x20, x19, [sp, #144]
  f8:	ldp	x22, x21, [sp, #128]
  fc:	ldp	x24, x23, [sp, #112]
 100:	ldp	x26, x25, [sp, #96]
 104:	ldp	x28, x27, [sp, #80]
 108:	ldp	x29, x30, [sp, #64]
 10c:	add	sp, sp, #0xa0
 110:	ret
 114:	mov	x8, #0x3eeb                	// #16107
 118:	movk	x8, #0xd762, lsl #16
 11c:	movk	x8, #0xf2a4, lsl #32
 120:	mov	x22, x0
 124:	movk	x8, #0x8b47, lsl #48
 128:	str	x25, [x0, #16]
 12c:	str	x8, [x0]
 130:	str	x19, [x0, #32]
 134:	str	x0, [sp, #24]
 138:	cbz	x25, 17c <ctf_arc_write_fd+0x17c>
 13c:	ldr	x0, [x28]
 140:	bl	0 <ctf_getmodel>
 144:	ldr	x20, [x22, #16]
 148:	sxtw	x8, w0
 14c:	str	x8, [x22, #8]
 150:	cbz	x20, 17c <ctf_arc_write_fd+0x17c>
 154:	mov	x24, xzr
 158:	mov	x22, xzr
 15c:	ldr	x0, [x23, x24, lsl #3]
 160:	bl	0 <strlen>
 164:	add	x8, x22, x0
 168:	add	x24, x24, #0x1
 16c:	cmp	x24, x20
 170:	add	x22, x8, #0x1
 174:	b.cc	15c <ctf_arc_write_fd+0x15c>  // b.lo, b.ul, b.last
 178:	b	180 <ctf_arc_write_fd+0x180>
 17c:	mov	x22, xzr
 180:	mov	x0, x22
 184:	bl	0 <malloc>
 188:	stur	x0, [x29, #-24]
 18c:	cbz	x0, 334 <ctf_arc_write_fd+0x334>
 190:	ldr	x24, [sp, #24]
 194:	ldr	x8, [x24, #16]
 198:	add	x25, x24, #0x28
 19c:	cbz	x8, 344 <ctf_arc_write_fd+0x344>
 1a0:	mov	x20, xzr
 1a4:	mov	x27, xzr
 1a8:	stp	x25, x26, [sp]
 1ac:	str	x28, [sp, #32]
 1b0:	lsl	x22, x20, #3
 1b4:	ldur	x8, [x29, #-24]
 1b8:	ldr	x1, [x23, x22]
 1bc:	add	x0, x8, x27
 1c0:	bl	0 <strcpy>
 1c4:	ldr	x26, [x28, x22]
 1c8:	stur	xzr, [x29, #-8]
 1cc:	mov	x0, x26
 1d0:	bl	0 <ctf_serialize>
 1d4:	tbnz	w0, #31, 254 <ctf_arc_write_fd+0x254>
 1d8:	mov	w2, #0x1                   	// #1
 1dc:	mov	w0, w21
 1e0:	mov	x1, xzr
 1e4:	bl	0 <lseek>
 1e8:	tbnz	x0, #63, 2dc <ctf_arc_write_fd+0x2dc>
 1ec:	ldr	x8, [x26, #416]
 1f0:	ldr	x9, [sp, #8]
 1f4:	mov	x28, x0
 1f8:	sub	x22, x29, #0x8
 1fc:	mov	w24, #0x8                   	// #8
 200:	cmp	x8, x9
 204:	adrp	x8, 0 <ctf_write>
 208:	adrp	x9, 0 <ctf_compress_write>
 20c:	add	x8, x8, #0x0
 210:	add	x9, x9, #0x0
 214:	csel	x8, x9, x8, hi  // hi = pmore
 218:	str	x8, [sp, #16]
 21c:	mov	w0, w21
 220:	mov	x1, x22
 224:	mov	x2, x24
 228:	bl	0 <write>
 22c:	tbnz	x0, #63, 2e4 <ctf_arc_write_fd+0x2e4>
 230:	subs	x24, x24, x0
 234:	add	x22, x22, x0
 238:	b.ne	21c <ctf_arc_write_fd+0x21c>  // b.any
 23c:	ldr	x8, [sp, #16]
 240:	mov	x0, x26
 244:	mov	w1, w21
 248:	blr	x8
 24c:	cbz	w0, 25c <ctf_arc_write_fd+0x25c>
 250:	ldr	x24, [sp, #24]
 254:	add	x0, x26, #0x22c
 258:	b	2ec <ctf_arc_write_fd+0x2ec>
 25c:	mov	w2, #0x1                   	// #1
 260:	mov	w0, w21
 264:	mov	x1, xzr
 268:	bl	0 <lseek>
 26c:	tbnz	x0, #63, 2e4 <ctf_arc_write_fd+0x2e4>
 270:	mov	x22, x0
 274:	sub	x8, x0, x28
 278:	mov	w0, w21
 27c:	mov	x1, x28
 280:	mov	w2, wzr
 284:	stur	x8, [x29, #-8]
 288:	bl	0 <lseek>
 28c:	ldr	x24, [sp, #24]
 290:	tbnz	x0, #63, 2dc <ctf_arc_write_fd+0x2dc>
 294:	str	x22, [sp, #16]
 298:	sub	x22, x29, #0x8
 29c:	mov	w26, #0x8                   	// #8
 2a0:	mov	w0, w21
 2a4:	mov	x1, x22
 2a8:	mov	x2, x26
 2ac:	bl	0 <write>
 2b0:	tbnz	x0, #63, 2dc <ctf_arc_write_fd+0x2dc>
 2b4:	subs	x26, x26, x0
 2b8:	add	x22, x22, x0
 2bc:	b.ne	2a0 <ctf_arc_write_fd+0x2a0>  // b.any
 2c0:	ldr	x8, [sp, #16]
 2c4:	mov	w0, w21
 2c8:	mov	w2, wzr
 2cc:	add	x8, x8, #0x7
 2d0:	and	x1, x8, #0xfffffffffffffff8
 2d4:	bl	0 <lseek>
 2d8:	tbz	x0, #63, 2f4 <ctf_arc_write_fd+0x2f4>
 2dc:	bl	0 <__errno_location>
 2e0:	b	2ec <ctf_arc_write_fd+0x2ec>
 2e4:	bl	0 <__errno_location>
 2e8:	ldr	x24, [sp, #24]
 2ec:	ldrsw	x8, [x0]
 2f0:	neg	x28, x8
 2f4:	cmn	x28, #0x3e8
 2f8:	b.hi	3f4 <ctf_arc_write_fd+0x3f4>  // b.pmore
 2fc:	tbnz	x28, #63, 400 <ctf_arc_write_fd+0x400>
 300:	sub	x8, x28, x19
 304:	stp	x27, x8, [x25], #16
 308:	ldr	x0, [x23, x20, lsl #3]
 30c:	bl	0 <strlen>
 310:	ldr	x1, [x24, #16]
 314:	ldr	x28, [sp, #32]
 318:	add	x8, x27, x0
 31c:	add	x20, x20, #0x1
 320:	add	x27, x8, #0x1
 324:	cmp	x20, x1
 328:	b.cc	1b0 <ctf_arc_write_fd+0x1b0>  // b.lo, b.ul, b.last
 32c:	ldr	x25, [sp]
 330:	b	34c <ctf_arc_write_fd+0x34c>
 334:	ldr	x24, [sp, #24]
 338:	adrp	x20, 0 <ctf_arc_write_fd>
 33c:	add	x20, x20, #0x0
 340:	b	41c <ctf_arc_write_fd+0x41c>
 344:	mov	x27, xzr
 348:	mov	x1, xzr
 34c:	ldur	x4, [x29, #-24]
 350:	adrp	x3, 0 <ctf_arc_write_fd>
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0x10                  	// #16
 35c:	mov	x0, x25
 360:	bl	0 <qsort_r>
 364:	mov	w2, #0x1                   	// #1
 368:	mov	w0, w21
 36c:	mov	x1, xzr
 370:	bl	0 <lseek>
 374:	tbnz	x0, #63, 3e8 <ctf_arc_write_fd+0x3e8>
 378:	cmp	x27, #0x1
 37c:	str	x0, [x24, #24]
 380:	b.lt	3b4 <ctf_arc_write_fd+0x3b4>  // b.tstop
 384:	ldur	x22, [x29, #-24]
 388:	adrp	x20, 0 <ctf_arc_write_fd>
 38c:	add	x20, x20, #0x0
 390:	mov	w0, w21
 394:	mov	x1, x22
 398:	mov	x2, x27
 39c:	bl	0 <write>
 3a0:	tbnz	x0, #63, 414 <ctf_arc_write_fd+0x414>
 3a4:	sub	x27, x27, x0
 3a8:	cmp	x27, #0x0
 3ac:	add	x22, x22, x0
 3b0:	b.gt	390 <ctf_arc_write_fd+0x390>
 3b4:	ldur	x0, [x29, #-24]
 3b8:	bl	0 <free>
 3bc:	mov	w2, #0x1                   	// #1
 3c0:	mov	x0, x24
 3c4:	mov	x1, x19
 3c8:	bl	0 <msync>
 3cc:	tbnz	w0, #31, 42c <ctf_arc_write_fd+0x42c>
 3d0:	mov	x0, x24
 3d4:	mov	x1, x19
 3d8:	bl	0 <munmap>
 3dc:	tbnz	w0, #31, 438 <ctf_arc_write_fd+0x438>
 3e0:	mov	w0, wzr
 3e4:	b	f4 <ctf_arc_write_fd+0xf4>
 3e8:	adrp	x20, 0 <ctf_arc_write_fd>
 3ec:	add	x20, x20, #0x0
 3f0:	b	414 <ctf_arc_write_fd+0x414>
 3f4:	adrp	x20, 0 <ctf_arc_write_fd>
 3f8:	add	x20, x20, #0x0
 3fc:	b	414 <ctf_arc_write_fd+0x414>
 400:	neg	w20, w28
 404:	bl	0 <__errno_location>
 408:	str	w20, [x0]
 40c:	adrp	x20, 0 <ctf_arc_write_fd>
 410:	add	x20, x20, #0x0
 414:	ldur	x0, [x29, #-24]
 418:	bl	0 <free>
 41c:	mov	x0, x24
 420:	mov	x1, x19
 424:	bl	0 <munmap>
 428:	b	c4 <ctf_arc_write_fd+0xc4>
 42c:	adrp	x20, 0 <ctf_arc_write_fd>
 430:	add	x20, x20, #0x0
 434:	b	41c <ctf_arc_write_fd+0x41c>
 438:	adrp	x20, 0 <ctf_arc_write_fd>
 43c:	add	x20, x20, #0x0
 440:	b	c4 <ctf_arc_write_fd+0xc4>

0000000000000444 <sort_modent_by_name>:
 444:	ldr	x8, [x0]
 448:	ldr	x9, [x1]
 44c:	add	x0, x2, x8
 450:	add	x1, x2, x9
 454:	b	0 <strcmp>

0000000000000458 <ctf_arc_write>:
 458:	stp	x29, x30, [sp, #-64]!
 45c:	stp	x24, x23, [sp, #16]
 460:	mov	x24, x1
 464:	mov	w1, #0x242                 	// #578
 468:	mov	x23, x2
 46c:	movk	w1, #0x8, lsl #16
 470:	mov	w2, #0x1b6                 	// #438
 474:	stp	x22, x21, [sp, #32]
 478:	stp	x20, x19, [sp, #48]
 47c:	mov	x29, sp
 480:	mov	x20, x4
 484:	mov	x22, x3
 488:	mov	x19, x0
 48c:	bl	0 <open>
 490:	tbnz	w0, #31, 4d0 <ctf_arc_write+0x78>
 494:	mov	x1, x24
 498:	mov	x2, x23
 49c:	mov	x3, x22
 4a0:	mov	x4, x20
 4a4:	mov	w21, w0
 4a8:	bl	0 <ctf_arc_write_fd>
 4ac:	mov	w22, w0
 4b0:	mov	w0, w21
 4b4:	bl	0 <close>
 4b8:	cbz	w22, 4fc <ctf_arc_write+0xa4>
 4bc:	tbz	w22, #31, 4c8 <ctf_arc_write+0x70>
 4c0:	mov	x0, x19
 4c4:	bl	0 <unlink>
 4c8:	mov	w20, w22
 4cc:	b	534 <ctf_arc_write+0xdc>
 4d0:	bl	0 <__errno_location>
 4d4:	mov	x20, x0
 4d8:	ldr	w0, [x0]
 4dc:	bl	0 <strerror>
 4e0:	mov	x2, x0
 4e4:	adrp	x0, 0 <ctf_arc_write_fd>
 4e8:	add	x0, x0, #0x0
 4ec:	mov	x1, x19
 4f0:	bl	0 <ctf_dprintf>
 4f4:	ldr	w20, [x20]
 4f8:	b	534 <ctf_arc_write+0xdc>
 4fc:	mov	w20, w0
 500:	tbnz	w0, #31, 510 <ctf_arc_write+0xb8>
 504:	mov	w0, w21
 508:	bl	0 <close>
 50c:	b	534 <ctf_arc_write+0xdc>
 510:	bl	0 <__errno_location>
 514:	ldr	w0, [x0]
 518:	bl	0 <strerror>
 51c:	mov	x1, x0
 520:	adrp	x0, 0 <ctf_arc_write_fd>
 524:	add	x0, x0, #0x0
 528:	bl	0 <ctf_dprintf>
 52c:	mov	x0, x19
 530:	bl	0 <unlink>
 534:	mov	w0, w20
 538:	ldp	x20, x19, [sp, #48]
 53c:	ldp	x22, x21, [sp, #32]
 540:	ldp	x24, x23, [sp, #16]
 544:	ldp	x29, x30, [sp], #64
 548:	ret

000000000000054c <ctf_arc_bufopen>:
 54c:	ldr	x8, [x0]
 550:	mov	x9, #0x3eeb                	// #16107
 554:	movk	x9, #0xd762, lsl #16
 558:	movk	x9, #0xf2a4, lsl #32
 55c:	movk	x9, #0x8b47, lsl #48
 560:	cmp	x8, x9
 564:	b.eq	578 <ctf_arc_bufopen+0x2c>  // b.none
 568:	mov	x0, xzr
 56c:	cbz	x2, 578 <ctf_arc_bufopen+0x2c>
 570:	mov	w8, #0x3e8                 	// #1000
 574:	str	w8, [x2]
 578:	ret

000000000000057c <ctf_arc_open_internal>:
 57c:	sub	sp, sp, #0xb0
 580:	stp	x29, x30, [sp, #128]
 584:	stp	x22, x21, [sp, #144]
 588:	stp	x20, x19, [sp, #160]
 58c:	add	x29, sp, #0x80
 590:	mov	x20, x1
 594:	mov	x19, x0
 598:	bl	0 <libctf_init_debug>
 59c:	mov	x0, x19
 5a0:	mov	w1, wzr
 5a4:	bl	0 <open>
 5a8:	tbnz	w0, #31, 61c <ctf_arc_open_internal+0xa0>
 5ac:	mov	w21, w0
 5b0:	mov	x2, sp
 5b4:	mov	w0, wzr
 5b8:	mov	w1, w21
 5bc:	bl	0 <__fxstat>
 5c0:	tbnz	w0, #31, 630 <ctf_arc_open_internal+0xb4>
 5c4:	ldr	x1, [sp, #48]
 5c8:	mov	w2, #0x3                   	// #3
 5cc:	mov	w3, #0x2                   	// #2
 5d0:	mov	x0, xzr
 5d4:	mov	w4, w21
 5d8:	mov	x5, xzr
 5dc:	bl	0 <mmap>
 5e0:	cmn	x0, #0x1
 5e4:	csel	x22, xzr, x0, eq  // eq = none
 5e8:	cbz	x22, 63c <ctf_arc_open_internal+0xc0>
 5ec:	ldr	x8, [x22]
 5f0:	mov	x9, #0x3eeb                	// #16107
 5f4:	movk	x9, #0xd762, lsl #16
 5f8:	movk	x9, #0xf2a4, lsl #32
 5fc:	movk	x9, #0x8b47, lsl #48
 600:	cmp	x8, x9
 604:	b.ne	648 <ctf_arc_open_internal+0xcc>  // b.any
 608:	ldr	x8, [sp, #48]
 60c:	mov	w0, w21
 610:	str	x8, [x22]
 614:	bl	0 <close>
 618:	b	6ac <ctf_arc_open_internal+0x130>
 61c:	adrp	x22, 0 <ctf_arc_write_fd>
 620:	add	x22, x22, #0x0
 624:	bl	0 <__errno_location>
 628:	cbnz	x20, 678 <ctf_arc_open_internal+0xfc>
 62c:	b	680 <ctf_arc_open_internal+0x104>
 630:	adrp	x22, 0 <ctf_arc_write_fd>
 634:	add	x22, x22, #0x0
 638:	b	668 <ctf_arc_open_internal+0xec>
 63c:	adrp	x22, 0 <ctf_arc_write_fd>
 640:	add	x22, x22, #0x0
 644:	b	668 <ctf_arc_open_internal+0xec>
 648:	bl	0 <__errno_location>
 64c:	mov	w8, #0x3e8                 	// #1000
 650:	str	w8, [x0]
 654:	ldr	x1, [sp, #48]
 658:	mov	x0, x22
 65c:	bl	0 <munmap>
 660:	adrp	x22, 0 <ctf_arc_write_fd>
 664:	add	x22, x22, #0x0
 668:	mov	w0, w21
 66c:	bl	0 <close>
 670:	bl	0 <__errno_location>
 674:	cbz	x20, 680 <ctf_arc_open_internal+0x104>
 678:	ldr	w8, [x0]
 67c:	str	w8, [x20]
 680:	ldr	w0, [x0]
 684:	cmp	w0, #0x3e7
 688:	b.gt	694 <ctf_arc_open_internal+0x118>
 68c:	bl	0 <strerror>
 690:	b	698 <ctf_arc_open_internal+0x11c>
 694:	bl	0 <ctf_errmsg>
 698:	mov	x2, x0
 69c:	mov	x0, x22
 6a0:	mov	x1, x19
 6a4:	bl	0 <ctf_dprintf>
 6a8:	mov	x22, xzr
 6ac:	mov	x0, x22
 6b0:	ldp	x20, x19, [sp, #160]
 6b4:	ldp	x22, x21, [sp, #144]
 6b8:	ldp	x29, x30, [sp, #128]
 6bc:	add	sp, sp, #0xb0
 6c0:	ret

00000000000006c4 <ctf_arc_close_internal>:
 6c4:	cbz	x0, 6d0 <ctf_arc_close_internal+0xc>
 6c8:	ldr	x1, [x0]
 6cc:	b	0 <munmap>
 6d0:	ret

00000000000006d4 <ctf_arc_close>:
 6d4:	cbz	x0, 704 <ctf_arc_close+0x30>
 6d8:	stp	x29, x30, [sp, #-32]!
 6dc:	ldr	w8, [x0]
 6e0:	str	x19, [sp, #16]
 6e4:	mov	x19, x0
 6e8:	mov	x29, sp
 6ec:	cbz	w8, 708 <ctf_arc_close+0x34>
 6f0:	ldr	x0, [x19, #16]
 6f4:	cbz	x0, 710 <ctf_arc_close+0x3c>
 6f8:	ldr	x1, [x0]
 6fc:	bl	0 <munmap>
 700:	b	710 <ctf_arc_close+0x3c>
 704:	ret
 708:	ldr	x0, [x19, #8]
 70c:	bl	0 <ctf_file_close>
 710:	ldr	x0, [x19, #32]
 714:	bl	0 <free>
 718:	ldr	x0, [x19, #88]
 71c:	bl	0 <free>
 720:	ldr	x8, [x19, #104]
 724:	cbz	x8, 730 <ctf_arc_close+0x5c>
 728:	mov	x0, x19
 72c:	blr	x8
 730:	mov	x0, x19
 734:	ldr	x19, [sp, #16]
 738:	ldp	x29, x30, [sp], #32
 73c:	b	0 <free>

0000000000000740 <ctf_arc_open_by_name_sections>:
 740:	stp	x29, x30, [sp, #-32]!
 744:	stp	x20, x19, [sp, #16]
 748:	ldr	w8, [x0]
 74c:	mov	x20, x4
 750:	mov	x19, x0
 754:	mov	x29, sp
 758:	cbz	w8, 774 <ctf_arc_open_by_name_sections+0x34>
 75c:	ldr	x0, [x19, #16]
 760:	mov	x4, x20
 764:	bl	7c0 <ctf_arc_open_by_name_internal>
 768:	cbz	x0, 7b4 <ctf_arc_open_by_name_sections+0x74>
 76c:	str	x19, [x0, #640]
 770:	b	7b4 <ctf_arc_open_by_name_sections+0x74>
 774:	cbz	x3, 7a0 <ctf_arc_open_by_name_sections+0x60>
 778:	adrp	x1, 0 <_CTF_SECTION>
 77c:	add	x1, x1, #0x0
 780:	mov	x0, x3
 784:	bl	0 <strcmp>
 788:	cbz	w0, 7a0 <ctf_arc_open_by_name_sections+0x60>
 78c:	mov	x0, xzr
 790:	cbz	x20, 7b4 <ctf_arc_open_by_name_sections+0x74>
 794:	mov	w8, #0x415                 	// #1045
 798:	str	w8, [x20]
 79c:	b	7b4 <ctf_arc_open_by_name_sections+0x74>
 7a0:	ldr	x0, [x19, #8]
 7a4:	ldr	w8, [x0, #548]
 7a8:	str	x19, [x0, #640]
 7ac:	add	w8, w8, #0x1
 7b0:	str	w8, [x0, #548]
 7b4:	ldp	x20, x19, [sp, #16]
 7b8:	ldp	x29, x30, [sp], #32
 7bc:	ret

00000000000007c0 <ctf_arc_open_by_name_internal>:
 7c0:	sub	sp, sp, #0x90
 7c4:	stp	x24, x23, [sp, #96]
 7c8:	adrp	x24, 0 <_CTF_SECTION>
 7cc:	add	x24, x24, #0x0
 7d0:	cmp	x3, #0x0
 7d4:	stp	x20, x19, [sp, #128]
 7d8:	mov	x20, x0
 7dc:	csel	x23, x24, x3, eq  // eq = none
 7e0:	adrp	x0, 0 <ctf_arc_write_fd>
 7e4:	stp	x1, x2, [sp]
 7e8:	add	x0, x0, #0x0
 7ec:	mov	x1, x23
 7f0:	stp	x29, x30, [sp, #48]
 7f4:	stp	x28, x27, [sp, #64]
 7f8:	stp	x26, x25, [sp, #80]
 7fc:	stp	x22, x21, [sp, #112]
 800:	add	x29, sp, #0x30
 804:	mov	x19, x4
 808:	bl	0 <ctf_dprintf>
 80c:	ldp	x21, x8, [x20, #16]
 810:	mrs	x9, tpidr_el0
 814:	add	x9, x9, #0x0, lsl #12
 818:	add	x25, x20, x8
 81c:	add	x8, x9, #0x0
 820:	str	x25, [x8]
 824:	cbz	x21, 870 <ctf_arc_open_by_name_internal+0xb0>
 828:	mov	x28, xzr
 82c:	add	x26, x20, #0x28
 830:	b	840 <ctf_arc_open_by_name_internal+0x80>
 834:	cmp	x28, x27
 838:	mov	x21, x27
 83c:	b.cs	870 <ctf_arc_open_by_name_internal+0xb0>  // b.hs, b.nlast
 840:	add	x8, x21, x28
 844:	lsr	x27, x8, #1
 848:	add	x22, x26, x27, lsl #4
 84c:	ldr	x8, [x22]
 850:	mov	x0, x23
 854:	add	x1, x25, x8
 858:	bl	0 <strcmp>
 85c:	tbnz	w0, #31, 834 <ctf_arc_open_by_name_internal+0x74>
 860:	cbz	w0, 884 <ctf_arc_open_by_name_internal+0xc4>
 864:	add	x28, x27, #0x1
 868:	mov	x27, x21
 86c:	b	834 <ctf_arc_open_by_name_internal+0x74>
 870:	mov	x21, xzr
 874:	cbz	x19, 8dc <ctf_arc_open_by_name_internal+0x11c>
 878:	mov	w8, #0x415                 	// #1045
 87c:	str	w8, [x19]
 880:	b	8dc <ctf_arc_open_by_name_internal+0x11c>
 884:	ldr	x23, [x22, #8]
 888:	adrp	x0, 0 <ctf_arc_write_fd>
 88c:	add	x0, x0, #0x0
 890:	mov	x1, x23
 894:	bl	0 <ctf_dprintf>
 898:	ldr	x8, [x20, #32]
 89c:	str	x24, [sp, #16]
 8a0:	mov	w10, #0x1                   	// #1
 8a4:	add	x0, sp, #0x10
 8a8:	add	x8, x8, x23
 8ac:	add	x8, x20, x8
 8b0:	ldr	x9, [x8], #8
 8b4:	ldp	x1, x2, [sp]
 8b8:	mov	x3, x19
 8bc:	stp	x9, x10, [sp, #32]
 8c0:	str	x8, [sp, #24]
 8c4:	bl	0 <ctf_bufopen>
 8c8:	mov	x21, x0
 8cc:	cbz	x0, 8dc <ctf_arc_open_by_name_internal+0x11c>
 8d0:	ldr	w1, [x20, #8]
 8d4:	mov	x0, x21
 8d8:	bl	0 <ctf_setmodel>
 8dc:	mov	x0, x21
 8e0:	ldp	x20, x19, [sp, #128]
 8e4:	ldp	x22, x21, [sp, #112]
 8e8:	ldp	x24, x23, [sp, #96]
 8ec:	ldp	x26, x25, [sp, #80]
 8f0:	ldp	x28, x27, [sp, #64]
 8f4:	ldp	x29, x30, [sp, #48]
 8f8:	add	sp, sp, #0x90
 8fc:	ret

0000000000000900 <ctf_arc_open_by_name>:
 900:	stp	x29, x30, [sp, #-32]!
 904:	stp	x20, x19, [sp, #16]
 908:	mov	x8, x0
 90c:	ldr	w9, [x8], #56
 910:	mov	x20, x2
 914:	mov	x19, x0
 918:	mov	x3, x1
 91c:	mov	x29, sp
 920:	cbz	w9, 954 <ctf_arc_open_by_name+0x54>
 924:	ldr	x9, [x19, #56]
 928:	ldp	x0, x11, [x19, #16]
 92c:	add	x10, x19, #0x18
 930:	mov	x4, x20
 934:	cmp	x9, #0x0
 938:	csel	x2, xzr, x8, eq  // eq = none
 93c:	cmp	x11, #0x0
 940:	csel	x1, xzr, x10, eq  // eq = none
 944:	bl	7c0 <ctf_arc_open_by_name_internal>
 948:	cbz	x0, 994 <ctf_arc_open_by_name+0x94>
 94c:	str	x19, [x0, #640]
 950:	b	994 <ctf_arc_open_by_name+0x94>
 954:	cbz	x3, 980 <ctf_arc_open_by_name+0x80>
 958:	adrp	x1, 0 <_CTF_SECTION>
 95c:	add	x1, x1, #0x0
 960:	mov	x0, x3
 964:	bl	0 <strcmp>
 968:	cbz	w0, 980 <ctf_arc_open_by_name+0x80>
 96c:	mov	x0, xzr
 970:	cbz	x20, 994 <ctf_arc_open_by_name+0x94>
 974:	mov	w8, #0x415                 	// #1045
 978:	str	w8, [x20]
 97c:	b	994 <ctf_arc_open_by_name+0x94>
 980:	ldr	x0, [x19, #8]
 984:	ldr	w8, [x0, #548]
 988:	str	x19, [x0, #640]
 98c:	add	w8, w8, #0x1
 990:	str	w8, [x0, #548]
 994:	ldp	x20, x19, [sp, #16]
 998:	ldp	x29, x30, [sp], #32
 99c:	ret

00000000000009a0 <ctf_archive_raw_iter>:
 9a0:	stp	x29, x30, [sp, #-64]!
 9a4:	stp	x24, x23, [sp, #16]
 9a8:	stp	x22, x21, [sp, #32]
 9ac:	stp	x20, x19, [sp, #48]
 9b0:	ldr	w8, [x0]
 9b4:	mov	x29, sp
 9b8:	cbz	w8, a20 <ctf_archive_raw_iter+0x80>
 9bc:	ldr	x21, [x0, #16]
 9c0:	ldr	x8, [x21, #16]
 9c4:	cbz	x8, a18 <ctf_archive_raw_iter+0x78>
 9c8:	ldr	x8, [x21, #24]
 9cc:	mov	x19, x2
 9d0:	mov	x20, x1
 9d4:	mov	x22, xzr
 9d8:	add	x23, x21, x8
 9dc:	add	x24, x21, #0x30
 9e0:	ldr	x8, [x21, #32]
 9e4:	ldp	x10, x9, [x24, #-8]
 9e8:	mov	x3, x19
 9ec:	add	x8, x21, x8
 9f0:	add	x1, x8, x9
 9f4:	ldr	x2, [x1], #8
 9f8:	add	x0, x23, x10
 9fc:	blr	x20
 a00:	cbnz	w0, a24 <ctf_archive_raw_iter+0x84>
 a04:	ldr	x8, [x21, #16]
 a08:	add	x22, x22, #0x1
 a0c:	add	x24, x24, #0x10
 a10:	cmp	x22, x8
 a14:	b.cc	9e0 <ctf_archive_raw_iter+0x40>  // b.lo, b.ul, b.last
 a18:	mov	w0, wzr
 a1c:	b	a24 <ctf_archive_raw_iter+0x84>
 a20:	mov	w0, #0xffffffea            	// #-22
 a24:	ldp	x20, x19, [sp, #48]
 a28:	ldp	x22, x21, [sp, #32]
 a2c:	ldp	x24, x23, [sp, #16]
 a30:	ldp	x29, x30, [sp], #64
 a34:	ret

0000000000000a38 <ctf_archive_iter>:
 a38:	sub	sp, sp, #0x70
 a3c:	stp	x29, x30, [sp, #16]
 a40:	stp	x28, x27, [sp, #32]
 a44:	stp	x26, x25, [sp, #48]
 a48:	stp	x24, x23, [sp, #64]
 a4c:	stp	x22, x21, [sp, #80]
 a50:	stp	x20, x19, [sp, #96]
 a54:	mov	x8, x0
 a58:	ldr	x9, [x8, #24]!
 a5c:	mov	x10, x0
 a60:	ldr	x11, [x10, #56]!
 a64:	ldr	w12, [x0]
 a68:	cmp	x9, #0x0
 a6c:	csel	x21, xzr, x8, eq  // eq = none
 a70:	cmp	x11, #0x0
 a74:	mov	x19, x2
 a78:	mov	x3, x1
 a7c:	mov	x20, x0
 a80:	csel	x22, xzr, x10, eq  // eq = none
 a84:	add	x29, sp, #0x10
 a88:	cbz	w12, b18 <ctf_archive_iter+0xe0>
 a8c:	ldr	x23, [x20, #16]
 a90:	ldr	x8, [x23, #16]
 a94:	cbz	x8, b10 <ctf_archive_iter+0xd8>
 a98:	ldr	x8, [x23, #24]
 a9c:	mov	x26, xzr
 aa0:	mov	w28, #0x28                  	// #40
 aa4:	str	x3, [sp]
 aa8:	add	x27, x23, x8
 aac:	ldr	x8, [x23, x28]
 ab0:	sub	x4, x29, #0x4
 ab4:	mov	x0, x23
 ab8:	mov	x1, x21
 abc:	add	x24, x27, x8
 ac0:	mov	x2, x22
 ac4:	mov	x3, x24
 ac8:	bl	7c0 <ctf_arc_open_by_name_internal>
 acc:	cbz	x0, b48 <ctf_archive_iter+0x110>
 ad0:	ldr	x3, [sp]
 ad4:	mov	x1, x24
 ad8:	mov	x2, x19
 adc:	mov	x25, x0
 ae0:	str	x20, [x0, #640]
 ae4:	blr	x3
 ae8:	mov	w24, w0
 aec:	stur	w0, [x29, #-4]
 af0:	mov	x0, x25
 af4:	bl	0 <ctf_file_close>
 af8:	cbnz	w24, b48 <ctf_archive_iter+0x110>
 afc:	ldr	x8, [x23, #16]
 b00:	add	x26, x26, #0x1
 b04:	add	x28, x28, #0x10
 b08:	cmp	x26, x8
 b0c:	b.cc	aac <ctf_archive_iter+0x74>  // b.lo, b.ul, b.last
 b10:	mov	w0, wzr
 b14:	b	b4c <ctf_archive_iter+0x114>
 b18:	ldr	x0, [x20, #8]
 b1c:	mov	x2, x19
 b20:	ldp	x20, x19, [sp, #96]
 b24:	ldp	x22, x21, [sp, #80]
 b28:	ldp	x24, x23, [sp, #64]
 b2c:	ldp	x26, x25, [sp, #48]
 b30:	ldp	x28, x27, [sp, #32]
 b34:	ldp	x29, x30, [sp, #16]
 b38:	adrp	x1, 0 <_CTF_SECTION>
 b3c:	add	x1, x1, #0x0
 b40:	add	sp, sp, #0x70
 b44:	br	x3
 b48:	ldur	w0, [x29, #-4]
 b4c:	ldp	x20, x19, [sp, #96]
 b50:	ldp	x22, x21, [sp, #80]
 b54:	ldp	x24, x23, [sp, #64]
 b58:	ldp	x26, x25, [sp, #48]
 b5c:	ldp	x28, x27, [sp, #32]
 b60:	ldp	x29, x30, [sp, #16]
 b64:	add	sp, sp, #0x70
 b68:	ret

ctf-dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_dump>:
       0:	sub	sp, sp, #0xb0
       4:	stp	x29, x30, [sp, #80]
       8:	stp	x28, x27, [sp, #96]
       c:	stp	x26, x25, [sp, #112]
      10:	stp	x24, x23, [sp, #128]
      14:	stp	x22, x21, [sp, #144]
      18:	stp	x20, x19, [sp, #160]
      1c:	ldr	x21, [x1]
      20:	mov	x22, x4
      24:	mov	x23, x3
      28:	mov	w24, w2
      2c:	mov	x20, x1
      30:	mov	x19, x0
      34:	add	x29, sp, #0x50
      38:	cbz	x21, 100 <ctf_dump+0x100>
      3c:	ldr	w8, [x21]
      40:	cmp	w8, w24
      44:	b.ne	1c8 <ctf_dump+0x1c8>  // b.any
      48:	str	x22, [sp, #8]
      4c:	ldr	x8, [x21, #16]
      50:	add	x9, x21, #0x20
      54:	add	x10, x8, #0x8
      58:	cmp	x8, #0x0
      5c:	csel	x8, x9, x10, eq  // eq = none
      60:	ldr	x8, [x8]
      64:	str	x8, [x21, #16]
      68:	cbz	x8, 1d4 <ctf_dump+0x1d4>
      6c:	ldr	x25, [x8, #16]
      70:	cbz	x23, 24c <ctf_dump+0x24c>
      74:	cbz	x25, 228 <ctf_dump+0x228>
      78:	ldrb	w8, [x25]
      7c:	cbz	w8, 228 <ctf_dump+0x228>
      80:	ldr	x28, [sp, #8]
      84:	adrp	x20, 0 <ctf_dump>
      88:	mov	x21, xzr
      8c:	mov	w22, #0xa                   	// #10
      90:	add	x20, x20, #0x0
      94:	mov	w1, #0xa                   	// #10
      98:	mov	x0, x25
      9c:	bl	0 <strchr>
      a0:	mov	x26, x0
      a4:	cbz	x0, ac <ctf_dump+0xac>
      a8:	strb	wzr, [x26]
      ac:	mov	w0, w24
      b0:	mov	x1, x25
      b4:	mov	x2, x28
      b8:	blr	x23
      bc:	mov	x27, x0
      c0:	mov	x0, x21
      c4:	mov	x1, x27
      c8:	bl	0 <ctf_str_append_noerr>
      cc:	mov	x1, x20
      d0:	bl	0 <ctf_str_append_noerr>
      d4:	cmp	x27, x25
      d8:	mov	x21, x0
      dc:	b.eq	e8 <ctf_dump+0xe8>  // b.none
      e0:	mov	x0, x27
      e4:	bl	0 <free>
      e8:	cbz	x26, 22c <ctf_dump+0x22c>
      ec:	strb	w22, [x26]
      f0:	ldrb	w8, [x26, #1]!
      f4:	mov	x25, x26
      f8:	cbnz	w8, 94 <ctf_dump+0x94>
      fc:	b	22c <ctf_dump+0x22c>
     100:	mov	w0, #0x28                  	// #40
     104:	bl	0 <malloc>
     108:	mov	x21, x0
     10c:	str	x0, [x20]
     110:	cbz	x0, 1fc <ctf_dump+0x1fc>
     114:	movi	v0.2d, #0x0
     118:	mov	x28, x21
     11c:	str	xzr, [x21, #32]
     120:	cmp	w24, #0x6
     124:	stp	q0, q0, [x21]
     128:	str	x19, [x28, #8]!
     12c:	str	x22, [sp, #8]
     130:	str	w24, [x21]
     134:	b.hi	298 <ctf_dump+0x298>  // b.pmore
     138:	adrp	x9, 0 <ctf_dump>
     13c:	mov	w8, w24
     140:	add	x9, x9, #0x0
     144:	adr	x10, 154 <ctf_dump+0x154>
     148:	ldrh	w11, [x9, x8, lsl #1]
     14c:	add	x10, x10, x11, lsl #2
     150:	br	x10
     154:	adrp	x8, 0 <ctf_dump>
     158:	adrp	x9, 0 <ctf_dump>
     15c:	ldr	x25, [x19, #8]
     160:	movi	v0.2d, #0x0
     164:	add	x8, x8, #0x0
     168:	add	x9, x9, #0x0
     16c:	adrp	x10, 0 <ctf_dump>
     170:	stp	q0, q0, [sp, #16]
     174:	stp	x8, x9, [sp, #24]
     178:	adrp	x8, 0 <ctf_dump>
     17c:	add	x10, x10, #0x0
     180:	add	x8, x8, #0x0
     184:	str	q0, [sp, #48]
     188:	stp	x10, x8, [sp, #40]
     18c:	ldrh	w2, [x25]
     190:	adrp	x1, 0 <ctf_dump>
     194:	add	x1, x1, #0x0
     198:	sub	x0, x29, #0x10
     19c:	bl	0 <asprintf>
     1a0:	tbnz	w0, #31, c5c <ctf_dump+0xc5c>
     1a4:	ldur	x22, [x29, #-16]
     1a8:	mov	w0, #0x18                  	// #24
     1ac:	bl	0 <malloc>
     1b0:	cbz	x0, 6f4 <ctf_dump+0x6f4>
     1b4:	mov	x1, x0
     1b8:	str	x22, [x0, #16]
     1bc:	add	x0, x21, #0x18
     1c0:	bl	0 <ctf_list_append>
     1c4:	b	700 <ctf_dump+0x700>
     1c8:	mov	w1, #0x418                 	// #1048
     1cc:	mov	x0, x19
     1d0:	bl	0 <ctf_set_errno>
     1d4:	ldr	x22, [x21, #32]
     1d8:	cbz	x22, 208 <ctf_dump+0x208>
     1dc:	ldr	x0, [x22, #16]
     1e0:	bl	0 <free>
     1e4:	ldr	x23, [x22, #8]
     1e8:	mov	x0, x22
     1ec:	bl	0 <free>
     1f0:	mov	x22, x23
     1f4:	cbnz	x23, 1dc <ctf_dump+0x1dc>
     1f8:	b	208 <ctf_dump+0x208>
     1fc:	mov	w1, #0xc                   	// #12
     200:	mov	x0, x19
     204:	bl	0 <ctf_set_errno>
     208:	mov	x0, x21
     20c:	bl	0 <free>
     210:	mov	x0, x19
     214:	mov	w1, wzr
     218:	bl	0 <ctf_set_errno>
     21c:	mov	x21, xzr
     220:	str	xzr, [x20]
     224:	b	268 <ctf_dump+0x268>
     228:	mov	x21, xzr
     22c:	mov	x0, x21
     230:	bl	0 <strlen>
     234:	sub	x8, x0, #0x1
     238:	ldrb	w9, [x21, x8]
     23c:	cmp	w9, #0xa
     240:	b.ne	25c <ctf_dump+0x25c>  // b.any
     244:	strb	wzr, [x21, x8]
     248:	b	25c <ctf_dump+0x25c>
     24c:	mov	x0, x25
     250:	bl	0 <strdup>
     254:	mov	x21, x0
     258:	cbz	x0, 28c <ctf_dump+0x28c>
     25c:	mov	x0, x19
     260:	mov	w1, wzr
     264:	bl	0 <ctf_set_errno>
     268:	mov	x0, x21
     26c:	ldp	x20, x19, [sp, #160]
     270:	ldp	x22, x21, [sp, #144]
     274:	ldp	x24, x23, [sp, #128]
     278:	ldp	x26, x25, [sp, #112]
     27c:	ldp	x28, x27, [sp, #96]
     280:	ldp	x29, x30, [sp, #80]
     284:	add	sp, sp, #0xb0
     288:	ret
     28c:	mov	w1, #0xc                   	// #12
     290:	mov	x0, x19
     294:	b	264 <ctf_dump+0x264>
     298:	mov	w1, #0x417                 	// #1047
     29c:	b	1cc <ctf_dump+0x1cc>
     2a0:	adrp	x1, 0 <ctf_dump>
     2a4:	add	x1, x1, #0x0
     2a8:	mov	x0, x19
     2ac:	mov	x2, x21
     2b0:	bl	0 <ctf_label_iter>
     2b4:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     2b8:	mov	x0, x19
     2bc:	bl	0 <ctf_errno>
     2c0:	cmp	w0, #0x409
     2c4:	b.ne	1d4 <ctf_dump+0x1d4>  // b.any
     2c8:	mov	x0, x19
     2cc:	mov	w1, wzr
     2d0:	bl	0 <ctf_set_errno>
     2d4:	b	4c <ctf_dump+0x4c>
     2d8:	ldr	x8, [x19, #432]
     2dc:	cbz	x8, 4c <ctf_dump+0x4c>
     2e0:	mov	x25, xzr
     2e4:	add	x26, x21, #0x18
     2e8:	mov	x0, x19
     2ec:	mov	x1, x25
     2f0:	bl	0 <ctf_lookup_by_symbol>
     2f4:	mov	x27, x0
     2f8:	cmn	x0, #0x1
     2fc:	b.eq	334 <ctf_dump+0x334>  // b.none
     300:	mov	x0, x19
     304:	mov	x1, x25
     308:	bl	0 <ctf_lookup_symbol_name>
     30c:	ldrb	w8, [x0]
     310:	cbz	w8, 354 <ctf_dump+0x354>
     314:	adrp	x1, 0 <ctf_dump>
     318:	mov	x2, x0
     31c:	add	x0, sp, #0x10
     320:	add	x1, x1, #0x0
     324:	mov	x3, x25
     328:	bl	0 <asprintf>
     32c:	tbz	w0, #31, 36c <ctf_dump+0x36c>
     330:	b	8ec <ctf_dump+0x8ec>
     334:	ldr	x0, [x28]
     338:	bl	0 <ctf_errno>
     33c:	sub	w8, w0, #0x406
     340:	cmp	w8, #0x2
     344:	b.cc	3d0 <ctf_dump+0x3d0>  // b.lo, b.ul, b.last
     348:	cmp	w0, #0x3f2
     34c:	b.ne	300 <ctf_dump+0x300>  // b.any
     350:	b	1d4 <ctf_dump+0x1d4>
     354:	adrp	x1, 0 <ctf_dump>
     358:	add	x0, sp, #0x10
     35c:	add	x1, x1, #0x0
     360:	mov	x2, x25
     364:	bl	0 <asprintf>
     368:	tbnz	w0, #31, 8ec <ctf_dump+0x8ec>
     36c:	ldr	x0, [x28]
     370:	mov	w2, #0x1                   	// #1
     374:	mov	x1, x27
     378:	bl	f50 <ctf_dump_format_type>
     37c:	ldr	x8, [sp, #16]
     380:	cbz	x0, 764 <ctf_dump+0x764>
     384:	mov	x27, x0
     388:	mov	x0, x8
     38c:	mov	x1, x27
     390:	bl	0 <ctf_str_append_noerr>
     394:	str	x0, [sp, #16]
     398:	mov	x0, x27
     39c:	bl	0 <free>
     3a0:	ldr	x22, [sp, #16]
     3a4:	mov	w0, #0x18                  	// #24
     3a8:	bl	0 <malloc>
     3ac:	cbz	x0, 3c4 <ctf_dump+0x3c4>
     3b0:	mov	x1, x0
     3b4:	str	x22, [x0, #16]
     3b8:	mov	x0, x26
     3bc:	bl	0 <ctf_list_append>
     3c0:	b	3d0 <ctf_dump+0x3d0>
     3c4:	ldr	x0, [x28]
     3c8:	mov	w1, #0xc                   	// #12
     3cc:	bl	0 <ctf_set_errno>
     3d0:	ldr	x8, [x19, #432]
     3d4:	add	x25, x25, #0x1
     3d8:	cmp	x25, x8
     3dc:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     3e0:	ldr	x0, [x28]
     3e4:	b	2ec <ctf_dump+0x2ec>
     3e8:	ldr	x8, [x19, #432]
     3ec:	cbz	x8, 4c <ctf_dump+0x4c>
     3f0:	mov	x25, xzr
     3f4:	add	x8, x21, #0x18
     3f8:	mov	x0, x19
     3fc:	str	x8, [sp]
     400:	add	x2, sp, #0x10
     404:	mov	x1, x25
     408:	bl	0 <ctf_func_info>
     40c:	mov	w26, w0
     410:	cmn	w0, #0x1
     414:	b.eq	480 <ctf_dump+0x480>  // b.none
     418:	ldr	w0, [sp, #24]
     41c:	mov	w1, #0x8                   	// #8
     420:	bl	0 <calloc>
     424:	cbz	x0, 84c <ctf_dump+0x84c>
     428:	mov	x27, x0
     42c:	ldr	x0, [x28]
     430:	sxtw	x1, w26
     434:	bl	0 <ctf_type_aname>
     438:	cbz	x0, 854 <ctf_dump+0x854>
     43c:	adrp	x1, 0 <ctf_dump>
     440:	add	x1, x1, #0x0
     444:	bl	0 <ctf_str_append_noerr>
     448:	mov	x26, x0
     44c:	mov	x0, x19
     450:	mov	x1, x25
     454:	bl	0 <ctf_lookup_symbol_name>
     458:	ldrb	w8, [x0]
     45c:	cbz	w8, 4a0 <ctf_dump+0x4a0>
     460:	adrp	x1, 0 <ctf_dump>
     464:	mov	x2, x0
     468:	sub	x0, x29, #0x8
     46c:	add	x1, x1, #0x0
     470:	mov	x3, x25
     474:	bl	0 <asprintf>
     478:	tbz	w0, #31, 4b8 <ctf_dump+0x4b8>
     47c:	b	8dc <ctf_dump+0x8dc>
     480:	ldr	x0, [x28]
     484:	bl	0 <ctf_errno>
     488:	sub	w8, w0, #0x404
     48c:	cmp	w8, #0x3
     490:	b.cc	5d8 <ctf_dump+0x5d8>  // b.lo, b.ul, b.last
     494:	cmp	w0, #0x3f2
     498:	b.ne	418 <ctf_dump+0x418>  // b.any
     49c:	b	1d4 <ctf_dump+0x1d4>
     4a0:	adrp	x1, 0 <ctf_dump>
     4a4:	sub	x0, x29, #0x8
     4a8:	add	x1, x1, #0x0
     4ac:	mov	x2, x25
     4b0:	bl	0 <asprintf>
     4b4:	tbnz	w0, #31, 8dc <ctf_dump+0x8dc>
     4b8:	ldur	x1, [x29, #-8]
     4bc:	mov	x0, x26
     4c0:	bl	0 <ctf_str_append_noerr>
     4c4:	adrp	x1, 0 <ctf_dump>
     4c8:	add	x1, x1, #0x0
     4cc:	bl	0 <ctf_str_append_noerr>
     4d0:	ldur	x8, [x29, #-8]
     4d4:	mov	x26, x0
     4d8:	mov	x0, x8
     4dc:	bl	0 <free>
     4e0:	ldr	x0, [x28]
     4e4:	ldr	w2, [sp, #24]
     4e8:	mov	x1, x25
     4ec:	mov	x3, x27
     4f0:	bl	0 <ctf_func_args>
     4f4:	tbnz	w0, #31, 97c <ctf_dump+0x97c>
     4f8:	ldr	w8, [sp, #24]
     4fc:	cbz	w8, 574 <ctf_dump+0x574>
     500:	mov	x22, xzr
     504:	b	534 <ctf_dump+0x534>
     508:	adrp	x1, 0 <ctf_dump>
     50c:	mov	x0, x26
     510:	add	x1, x1, #0x0
     514:	bl	0 <ctf_str_append_noerr>
     518:	mov	x26, x0
     51c:	ldur	x0, [x29, #-8]
     520:	bl	0 <free>
     524:	ldr	w8, [sp, #24]
     528:	add	x22, x22, #0x1
     52c:	cmp	x22, x8
     530:	b.cs	574 <ctf_dump+0x574>  // b.hs, b.nlast
     534:	ldr	x0, [x28]
     538:	ldr	x1, [x27, x22, lsl #3]
     53c:	bl	0 <ctf_type_aname>
     540:	stur	x0, [x29, #-8]
     544:	cbz	x0, 6b4 <ctf_dump+0x6b4>
     548:	mov	x1, x0
     54c:	mov	x0, x26
     550:	bl	0 <ctf_str_append_noerr>
     554:	ldr	w8, [sp, #24]
     558:	mov	x26, x0
     55c:	sub	w8, w8, #0x1
     560:	cmp	x22, x8
     564:	b.cc	508 <ctf_dump+0x508>  // b.lo, b.ul, b.last
     568:	ldrb	w8, [sp, #28]
     56c:	tbnz	w8, #0, 508 <ctf_dump+0x508>
     570:	b	51c <ctf_dump+0x51c>
     574:	ldrb	w8, [sp, #28]
     578:	tbz	w8, #0, 590 <ctf_dump+0x590>
     57c:	adrp	x1, 0 <ctf_dump>
     580:	mov	x0, x26
     584:	add	x1, x1, #0x0
     588:	bl	0 <ctf_str_append_noerr>
     58c:	mov	x26, x0
     590:	adrp	x1, 0 <ctf_dump>
     594:	mov	x0, x26
     598:	add	x1, x1, #0x0
     59c:	bl	0 <ctf_str_append_noerr>
     5a0:	mov	x26, x0
     5a4:	mov	x0, x27
     5a8:	bl	0 <free>
     5ac:	mov	w0, #0x18                  	// #24
     5b0:	bl	0 <malloc>
     5b4:	cbz	x0, 5cc <ctf_dump+0x5cc>
     5b8:	mov	x1, x0
     5bc:	str	x26, [x0, #16]
     5c0:	ldr	x0, [sp]
     5c4:	bl	0 <ctf_list_append>
     5c8:	b	5d8 <ctf_dump+0x5d8>
     5cc:	ldr	x0, [x28]
     5d0:	mov	w1, #0xc                   	// #12
     5d4:	bl	0 <ctf_set_errno>
     5d8:	ldr	x8, [x19, #432]
     5dc:	add	x25, x25, #0x1
     5e0:	cmp	x25, x8
     5e4:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     5e8:	ldr	x0, [x28]
     5ec:	b	400 <ctf_dump+0x400>
     5f0:	adrp	x1, 0 <ctf_dump>
     5f4:	add	x1, x1, #0x0
     5f8:	mov	x0, x19
     5fc:	mov	x2, x21
     600:	bl	0 <ctf_variable_iter>
     604:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     608:	b	1d4 <ctf_dump+0x1d4>
     60c:	adrp	x1, 0 <ctf_dump>
     610:	add	x1, x1, #0x0
     614:	mov	x0, x19
     618:	mov	x2, x21
     61c:	bl	0 <ctf_type_iter_all>
     620:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     624:	b	1d4 <ctf_dump+0x1d4>
     628:	ldr	x8, [x19, #344]
     62c:	cmp	x8, #0x1
     630:	b.lt	4c <ctf_dump+0x4c>  // b.tstop
     634:	ldr	x8, [x19, #336]
     638:	adrp	x26, 0 <ctf_dump>
     63c:	add	x25, x21, #0x18
     640:	add	x26, x26, #0x0
     644:	mov	x27, x8
     648:	b	67c <ctf_dump+0x67c>
     64c:	mov	x1, x0
     650:	str	x22, [x0, #16]
     654:	mov	x0, x25
     658:	bl	0 <ctf_list_append>
     65c:	mov	x0, x27
     660:	bl	0 <strlen>
     664:	ldp	x8, x9, [x19, #336]
     668:	add	x10, x0, x27
     66c:	add	x27, x10, #0x1
     670:	add	x9, x8, x9
     674:	cmp	x27, x9
     678:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     67c:	sub	x2, x27, x8
     680:	add	x0, sp, #0x10
     684:	mov	x1, x26
     688:	mov	x3, x27
     68c:	bl	0 <asprintf>
     690:	tbnz	w0, #31, c5c <ctf_dump+0xc5c>
     694:	ldr	x22, [sp, #16]
     698:	mov	w0, #0x18                  	// #24
     69c:	bl	0 <malloc>
     6a0:	cbnz	x0, 64c <ctf_dump+0x64c>
     6a4:	ldr	x0, [x28]
     6a8:	mov	w1, #0xc                   	// #12
     6ac:	bl	0 <ctf_set_errno>
     6b0:	b	65c <ctf_dump+0x65c>
     6b4:	adrp	x22, 0 <ctf_dump>
     6b8:	add	x22, x22, #0x0
     6bc:	ldr	x0, [x28]
     6c0:	bl	0 <ctf_errno>
     6c4:	bl	0 <ctf_errmsg>
     6c8:	mov	x3, x0
     6cc:	adrp	x0, 0 <ctf_dump>
     6d0:	add	x0, x0, #0x0
     6d4:	mov	x1, x22
     6d8:	mov	x2, x25
     6dc:	bl	0 <ctf_dprintf>
     6e0:	mov	x0, x27
     6e4:	bl	0 <free>
     6e8:	mov	x0, x26
     6ec:	bl	0 <free>
     6f0:	b	1d4 <ctf_dump+0x1d4>
     6f4:	ldr	x0, [x28]
     6f8:	mov	w1, #0xc                   	// #12
     6fc:	bl	0 <ctf_set_errno>
     700:	ldrb	w2, [x25, #2]
     704:	cmp	x2, #0x4
     708:	b.hi	718 <ctf_dump+0x718>  // b.pmore
     70c:	add	x8, sp, #0x10
     710:	ldr	x8, [x8, x2, lsl #3]
     714:	b	71c <ctf_dump+0x71c>
     718:	mov	x8, xzr
     71c:	adrp	x9, 0 <ctf_dump>
     720:	add	x9, x9, #0x0
     724:	cmp	x8, #0x0
     728:	adrp	x1, 0 <ctf_dump>
     72c:	csel	x3, x9, x8, eq  // eq = none
     730:	add	x1, x1, #0x0
     734:	sub	x0, x29, #0x10
     738:	bl	0 <asprintf>
     73c:	tbnz	w0, #31, c5c <ctf_dump+0xc5c>
     740:	ldur	x22, [x29, #-16]
     744:	mov	w0, #0x18                  	// #24
     748:	bl	0 <malloc>
     74c:	cbz	x0, 770 <ctf_dump+0x770>
     750:	mov	x1, x0
     754:	str	x22, [x0, #16]
     758:	add	x0, x21, #0x18
     75c:	bl	0 <ctf_list_append>
     760:	b	77c <ctf_dump+0x77c>
     764:	mov	x0, x8
     768:	bl	0 <free>
     76c:	b	1d4 <ctf_dump+0x1d4>
     770:	ldr	x0, [x28]
     774:	mov	w1, #0xc                   	// #12
     778:	bl	0 <ctf_set_errno>
     77c:	ldrb	w2, [x19, #16]
     780:	cbz	w2, 7e0 <ctf_dump+0x7e0>
     784:	adrp	x8, 0 <ctf_dump>
     788:	adrp	x9, 0 <ctf_dump>
     78c:	add	x8, x8, #0x0
     790:	add	x9, x9, #0x0
     794:	tst	w2, #0x1
     798:	adrp	x1, 0 <ctf_dump>
     79c:	csel	x3, x9, x8, eq  // eq = none
     7a0:	add	x1, x1, #0x0
     7a4:	sub	x0, x29, #0x10
     7a8:	bl	0 <asprintf>
     7ac:	tbnz	w0, #31, c5c <ctf_dump+0xc5c>
     7b0:	ldur	x22, [x29, #-16]
     7b4:	mov	w0, #0x18                  	// #24
     7b8:	bl	0 <malloc>
     7bc:	cbz	x0, 7d4 <ctf_dump+0x7d4>
     7c0:	mov	x1, x0
     7c4:	str	x22, [x0, #16]
     7c8:	add	x0, x21, #0x18
     7cc:	bl	0 <ctf_list_append>
     7d0:	b	7e0 <ctf_dump+0x7e0>
     7d4:	ldr	x0, [x28]
     7d8:	mov	w1, #0xc                   	// #12
     7dc:	bl	0 <ctf_set_errno>
     7e0:	ldr	w1, [x25, #4]
     7e4:	cbz	w1, 870 <ctf_dump+0x870>
     7e8:	mov	x0, x19
     7ec:	bl	0 <ctf_strptr>
     7f0:	adrp	x1, 0 <ctf_dump>
     7f4:	adrp	x2, 0 <ctf_dump>
     7f8:	mov	x3, x0
     7fc:	add	x1, x1, #0x0
     800:	add	x2, x2, #0x0
     804:	sub	x0, x29, #0x8
     808:	bl	0 <asprintf>
     80c:	tbnz	w0, #31, 834 <ctf_dump+0x834>
     810:	ldur	x22, [x29, #-8]
     814:	mov	w0, #0x18                  	// #24
     818:	bl	0 <malloc>
     81c:	cbz	x0, 864 <ctf_dump+0x864>
     820:	mov	x1, x0
     824:	str	x22, [x0, #16]
     828:	add	x0, x21, #0x18
     82c:	bl	0 <ctf_list_append>
     830:	b	870 <ctf_dump+0x870>
     834:	bl	0 <__errno_location>
     838:	ldr	w1, [x0]
     83c:	mov	x0, x19
     840:	bl	0 <ctf_set_errno>
     844:	tbz	w0, #31, 870 <ctf_dump+0x870>
     848:	b	c5c <ctf_dump+0xc5c>
     84c:	mov	w1, #0xc                   	// #12
     850:	b	8f4 <ctf_dump+0x8f4>
     854:	adrp	x22, 0 <ctf_dump>
     858:	mov	x26, xzr
     85c:	add	x22, x22, #0x0
     860:	b	6bc <ctf_dump+0x6bc>
     864:	ldr	x0, [x28]
     868:	mov	w1, #0xc                   	// #12
     86c:	bl	0 <ctf_set_errno>
     870:	ldr	w1, [x25, #8]
     874:	cbz	w1, 910 <ctf_dump+0x910>
     878:	mov	x0, x19
     87c:	bl	0 <ctf_strptr>
     880:	adrp	x1, 0 <ctf_dump>
     884:	adrp	x2, 0 <ctf_dump>
     888:	mov	x3, x0
     88c:	add	x1, x1, #0x0
     890:	add	x2, x2, #0x0
     894:	sub	x0, x29, #0x8
     898:	bl	0 <asprintf>
     89c:	tbnz	w0, #31, 8c4 <ctf_dump+0x8c4>
     8a0:	ldur	x22, [x29, #-8]
     8a4:	mov	w0, #0x18                  	// #24
     8a8:	bl	0 <malloc>
     8ac:	cbz	x0, 904 <ctf_dump+0x904>
     8b0:	mov	x1, x0
     8b4:	str	x22, [x0, #16]
     8b8:	add	x0, x21, #0x18
     8bc:	bl	0 <ctf_list_append>
     8c0:	b	910 <ctf_dump+0x910>
     8c4:	bl	0 <__errno_location>
     8c8:	ldr	w1, [x0]
     8cc:	mov	x0, x19
     8d0:	bl	0 <ctf_set_errno>
     8d4:	tbz	w0, #31, 910 <ctf_dump+0x910>
     8d8:	b	c5c <ctf_dump+0xc5c>
     8dc:	mov	x0, x27
     8e0:	bl	0 <free>
     8e4:	mov	x0, x26
     8e8:	bl	0 <free>
     8ec:	bl	0 <__errno_location>
     8f0:	ldr	w1, [x0]
     8f4:	mov	x0, x19
     8f8:	bl	0 <ctf_set_errno>
     8fc:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     900:	b	1d4 <ctf_dump+0x1d4>
     904:	ldr	x0, [x28]
     908:	mov	w1, #0xc                   	// #12
     90c:	bl	0 <ctf_set_errno>
     910:	ldr	w1, [x25, #12]
     914:	cbz	w1, 994 <ctf_dump+0x994>
     918:	mov	x0, x19
     91c:	bl	0 <ctf_strptr>
     920:	adrp	x1, 0 <ctf_dump>
     924:	adrp	x2, 0 <ctf_dump>
     928:	mov	x3, x0
     92c:	add	x1, x1, #0x0
     930:	add	x2, x2, #0x0
     934:	sub	x0, x29, #0x8
     938:	bl	0 <asprintf>
     93c:	tbnz	w0, #31, 964 <ctf_dump+0x964>
     940:	ldur	x22, [x29, #-8]
     944:	mov	w0, #0x18                  	// #24
     948:	bl	0 <malloc>
     94c:	cbz	x0, 988 <ctf_dump+0x988>
     950:	mov	x1, x0
     954:	str	x22, [x0, #16]
     958:	add	x0, x21, #0x18
     95c:	bl	0 <ctf_list_append>
     960:	b	994 <ctf_dump+0x994>
     964:	bl	0 <__errno_location>
     968:	ldr	w1, [x0]
     96c:	mov	x0, x19
     970:	bl	0 <ctf_set_errno>
     974:	tbz	w0, #31, 994 <ctf_dump+0x994>
     978:	b	c5c <ctf_dump+0xc5c>
     97c:	adrp	x22, 0 <ctf_dump>
     980:	add	x22, x22, #0x0
     984:	b	6bc <ctf_dump+0x6bc>
     988:	ldr	x0, [x28]
     98c:	mov	w1, #0xc                   	// #12
     990:	bl	0 <ctf_set_errno>
     994:	ldp	w3, w9, [x25, #16]
     998:	subs	w8, w9, w3
     99c:	b.eq	a0c <ctf_dump+0xa0c>  // b.none
     9a0:	adrp	x1, 0 <ctf_dump>
     9a4:	adrp	x2, 0 <ctf_dump>
     9a8:	sub	w4, w9, #0x1
     9ac:	mov	w5, w8
     9b0:	add	x1, x1, #0x0
     9b4:	add	x2, x2, #0x0
     9b8:	sub	x0, x29, #0x8
     9bc:	bl	0 <asprintf>
     9c0:	tbnz	w0, #31, 9e8 <ctf_dump+0x9e8>
     9c4:	ldur	x22, [x29, #-8]
     9c8:	mov	w0, #0x18                  	// #24
     9cc:	bl	0 <malloc>
     9d0:	cbz	x0, a00 <ctf_dump+0xa00>
     9d4:	mov	x1, x0
     9d8:	str	x22, [x0, #16]
     9dc:	add	x0, x21, #0x18
     9e0:	bl	0 <ctf_list_append>
     9e4:	b	a0c <ctf_dump+0xa0c>
     9e8:	bl	0 <__errno_location>
     9ec:	ldr	w1, [x0]
     9f0:	mov	x0, x19
     9f4:	bl	0 <ctf_set_errno>
     9f8:	tbz	w0, #31, a0c <ctf_dump+0xa0c>
     9fc:	b	c5c <ctf_dump+0xc5c>
     a00:	ldr	x0, [x28]
     a04:	mov	w1, #0xc                   	// #12
     a08:	bl	0 <ctf_set_errno>
     a0c:	ldp	w3, w9, [x25, #20]
     a10:	subs	w8, w9, w3
     a14:	b.eq	a84 <ctf_dump+0xa84>  // b.none
     a18:	adrp	x1, 0 <ctf_dump>
     a1c:	adrp	x2, 0 <ctf_dump>
     a20:	sub	w4, w9, #0x1
     a24:	mov	w5, w8
     a28:	add	x1, x1, #0x0
     a2c:	add	x2, x2, #0x0
     a30:	sub	x0, x29, #0x8
     a34:	bl	0 <asprintf>
     a38:	tbnz	w0, #31, a60 <ctf_dump+0xa60>
     a3c:	ldur	x22, [x29, #-8]
     a40:	mov	w0, #0x18                  	// #24
     a44:	bl	0 <malloc>
     a48:	cbz	x0, a78 <ctf_dump+0xa78>
     a4c:	mov	x1, x0
     a50:	str	x22, [x0, #16]
     a54:	add	x0, x21, #0x18
     a58:	bl	0 <ctf_list_append>
     a5c:	b	a84 <ctf_dump+0xa84>
     a60:	bl	0 <__errno_location>
     a64:	ldr	w1, [x0]
     a68:	mov	x0, x19
     a6c:	bl	0 <ctf_set_errno>
     a70:	tbz	w0, #31, a84 <ctf_dump+0xa84>
     a74:	b	c5c <ctf_dump+0xc5c>
     a78:	ldr	x0, [x28]
     a7c:	mov	w1, #0xc                   	// #12
     a80:	bl	0 <ctf_set_errno>
     a84:	ldr	w3, [x25, #24]
     a88:	ldr	w9, [x25, #36]
     a8c:	subs	w8, w9, w3
     a90:	b.eq	b00 <ctf_dump+0xb00>  // b.none
     a94:	adrp	x1, 0 <ctf_dump>
     a98:	adrp	x2, 0 <ctf_dump>
     a9c:	sub	w4, w9, #0x1
     aa0:	mov	w5, w8
     aa4:	add	x1, x1, #0x0
     aa8:	add	x2, x2, #0x0
     aac:	sub	x0, x29, #0x8
     ab0:	bl	0 <asprintf>
     ab4:	tbnz	w0, #31, adc <ctf_dump+0xadc>
     ab8:	ldur	x22, [x29, #-8]
     abc:	mov	w0, #0x18                  	// #24
     ac0:	bl	0 <malloc>
     ac4:	cbz	x0, af4 <ctf_dump+0xaf4>
     ac8:	mov	x1, x0
     acc:	str	x22, [x0, #16]
     ad0:	add	x0, x21, #0x18
     ad4:	bl	0 <ctf_list_append>
     ad8:	b	b00 <ctf_dump+0xb00>
     adc:	bl	0 <__errno_location>
     ae0:	ldr	w1, [x0]
     ae4:	mov	x0, x19
     ae8:	bl	0 <ctf_set_errno>
     aec:	tbz	w0, #31, b00 <ctf_dump+0xb00>
     af0:	b	c5c <ctf_dump+0xc5c>
     af4:	ldr	x0, [x28]
     af8:	mov	w1, #0xc                   	// #12
     afc:	bl	0 <ctf_set_errno>
     b00:	ldp	w3, w9, [x25, #36]
     b04:	subs	w8, w9, w3
     b08:	b.eq	b78 <ctf_dump+0xb78>  // b.none
     b0c:	adrp	x1, 0 <ctf_dump>
     b10:	adrp	x2, 0 <ctf_dump>
     b14:	sub	w4, w9, #0x1
     b18:	mov	w5, w8
     b1c:	add	x1, x1, #0x0
     b20:	add	x2, x2, #0x0
     b24:	sub	x0, x29, #0x8
     b28:	bl	0 <asprintf>
     b2c:	tbnz	w0, #31, b54 <ctf_dump+0xb54>
     b30:	ldur	x22, [x29, #-8]
     b34:	mov	w0, #0x18                  	// #24
     b38:	bl	0 <malloc>
     b3c:	cbz	x0, b6c <ctf_dump+0xb6c>
     b40:	mov	x1, x0
     b44:	str	x22, [x0, #16]
     b48:	add	x0, x21, #0x18
     b4c:	bl	0 <ctf_list_append>
     b50:	b	b78 <ctf_dump+0xb78>
     b54:	bl	0 <__errno_location>
     b58:	ldr	w1, [x0]
     b5c:	mov	x0, x19
     b60:	bl	0 <ctf_set_errno>
     b64:	tbz	w0, #31, b78 <ctf_dump+0xb78>
     b68:	b	c5c <ctf_dump+0xc5c>
     b6c:	ldr	x0, [x28]
     b70:	mov	w1, #0xc                   	// #12
     b74:	bl	0 <ctf_set_errno>
     b78:	ldp	w3, w9, [x25, #40]
     b7c:	subs	w8, w9, w3
     b80:	b.eq	bf0 <ctf_dump+0xbf0>  // b.none
     b84:	adrp	x1, 0 <ctf_dump>
     b88:	adrp	x2, 0 <ctf_dump>
     b8c:	sub	w4, w9, #0x1
     b90:	mov	w5, w8
     b94:	add	x1, x1, #0x0
     b98:	add	x2, x2, #0x0
     b9c:	sub	x0, x29, #0x8
     ba0:	bl	0 <asprintf>
     ba4:	tbnz	w0, #31, bcc <ctf_dump+0xbcc>
     ba8:	ldur	x22, [x29, #-8]
     bac:	mov	w0, #0x18                  	// #24
     bb0:	bl	0 <malloc>
     bb4:	cbz	x0, be4 <ctf_dump+0xbe4>
     bb8:	mov	x1, x0
     bbc:	str	x22, [x0, #16]
     bc0:	add	x0, x21, #0x18
     bc4:	bl	0 <ctf_list_append>
     bc8:	b	bf0 <ctf_dump+0xbf0>
     bcc:	bl	0 <__errno_location>
     bd0:	ldr	w1, [x0]
     bd4:	mov	x0, x19
     bd8:	bl	0 <ctf_set_errno>
     bdc:	tbz	w0, #31, bf0 <ctf_dump+0xbf0>
     be0:	b	c5c <ctf_dump+0xc5c>
     be4:	ldr	x0, [x28]
     be8:	mov	w1, #0xc                   	// #12
     bec:	bl	0 <ctf_set_errno>
     bf0:	ldr	w9, [x25, #48]
     bf4:	adds	w8, w9, #0x1
     bf8:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     bfc:	ldr	w3, [x25, #44]
     c00:	adrp	x1, 0 <ctf_dump>
     c04:	adrp	x2, 0 <ctf_dump>
     c08:	mov	w5, w8
     c0c:	add	w4, w9, w3
     c10:	add	x1, x1, #0x0
     c14:	add	x2, x2, #0x0
     c18:	sub	x0, x29, #0x8
     c1c:	bl	0 <asprintf>
     c20:	tbnz	w0, #31, c48 <ctf_dump+0xc48>
     c24:	ldur	x22, [x29, #-8]
     c28:	mov	w0, #0x18                  	// #24
     c2c:	bl	0 <malloc>
     c30:	cbz	x0, c70 <ctf_dump+0xc70>
     c34:	mov	x1, x0
     c38:	str	x22, [x0, #16]
     c3c:	add	x0, x21, #0x18
     c40:	bl	0 <ctf_list_append>
     c44:	b	4c <ctf_dump+0x4c>
     c48:	bl	0 <__errno_location>
     c4c:	ldr	w1, [x0]
     c50:	mov	x0, x19
     c54:	bl	0 <ctf_set_errno>
     c58:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     c5c:	bl	0 <__errno_location>
     c60:	ldr	w1, [x0]
     c64:	mov	x0, x19
     c68:	bl	0 <ctf_set_errno>
     c6c:	b	4c <ctf_dump+0x4c>
     c70:	ldr	x0, [x28]
     c74:	mov	w1, #0xc                   	// #12
     c78:	bl	0 <ctf_set_errno>
     c7c:	b	4c <ctf_dump+0x4c>

0000000000000c80 <ctf_dump_label>:
     c80:	stp	x29, x30, [sp, #-48]!
     c84:	str	x21, [sp, #16]
     c88:	mov	x29, sp
     c8c:	mov	x21, x1
     c90:	adrp	x1, 0 <ctf_dump>
     c94:	stp	x20, x19, [sp, #32]
     c98:	mov	x19, x2
     c9c:	mov	x2, x0
     ca0:	add	x1, x1, #0x0
     ca4:	add	x0, x29, #0x18
     ca8:	bl	0 <asprintf>
     cac:	ldr	x20, [x19, #8]
     cb0:	tbnz	w0, #31, d0c <ctf_dump_label+0x8c>
     cb4:	ldr	x1, [x21]
     cb8:	mov	w2, #0x1                   	// #1
     cbc:	mov	x0, x20
     cc0:	bl	f50 <ctf_dump_format_type>
     cc4:	ldr	x8, [x29, #24]
     cc8:	cbz	x0, d20 <ctf_dump_label+0xa0>
     ccc:	mov	x20, x0
     cd0:	mov	x0, x8
     cd4:	mov	x1, x20
     cd8:	bl	0 <ctf_str_append_noerr>
     cdc:	str	x0, [x29, #24]
     ce0:	mov	x0, x20
     ce4:	bl	0 <free>
     ce8:	ldr	x20, [x29, #24]
     cec:	mov	w0, #0x18                  	// #24
     cf0:	bl	0 <malloc>
     cf4:	cbz	x0, d30 <ctf_dump_label+0xb0>
     cf8:	mov	x1, x0
     cfc:	str	x20, [x0, #16]
     d00:	add	x0, x19, #0x18
     d04:	bl	0 <ctf_list_append>
     d08:	b	d3c <ctf_dump_label+0xbc>
     d0c:	bl	0 <__errno_location>
     d10:	ldr	w1, [x0]
     d14:	mov	x0, x20
     d18:	bl	0 <ctf_set_errno>
     d1c:	b	d40 <ctf_dump_label+0xc0>
     d20:	mov	x0, x8
     d24:	bl	0 <free>
     d28:	mov	w0, #0xffffffff            	// #-1
     d2c:	b	d40 <ctf_dump_label+0xc0>
     d30:	ldr	x0, [x19, #8]
     d34:	mov	w1, #0xc                   	// #12
     d38:	bl	0 <ctf_set_errno>
     d3c:	mov	w0, wzr
     d40:	ldp	x20, x19, [sp, #32]
     d44:	ldr	x21, [sp, #16]
     d48:	ldp	x29, x30, [sp], #48
     d4c:	ret

0000000000000d50 <ctf_dump_var>:
     d50:	stp	x29, x30, [sp, #-48]!
     d54:	stp	x20, x19, [sp, #32]
     d58:	mov	x29, sp
     d5c:	mov	x20, x1
     d60:	adrp	x1, 0 <ctf_dump>
     d64:	mov	x19, x2
     d68:	mov	x2, x0
     d6c:	add	x1, x1, #0x0
     d70:	add	x0, x29, #0x18
     d74:	str	x21, [sp, #16]
     d78:	bl	0 <asprintf>
     d7c:	ldr	x21, [x19, #8]
     d80:	tbnz	w0, #31, ddc <ctf_dump_var+0x8c>
     d84:	mov	w2, #0x1                   	// #1
     d88:	mov	x0, x21
     d8c:	mov	x1, x20
     d90:	bl	f50 <ctf_dump_format_type>
     d94:	ldr	x8, [x29, #24]
     d98:	cbz	x0, df0 <ctf_dump_var+0xa0>
     d9c:	mov	x20, x0
     da0:	mov	x0, x8
     da4:	mov	x1, x20
     da8:	bl	0 <ctf_str_append_noerr>
     dac:	str	x0, [x29, #24]
     db0:	mov	x0, x20
     db4:	bl	0 <free>
     db8:	ldr	x20, [x29, #24]
     dbc:	mov	w0, #0x18                  	// #24
     dc0:	bl	0 <malloc>
     dc4:	cbz	x0, e00 <ctf_dump_var+0xb0>
     dc8:	mov	x1, x0
     dcc:	str	x20, [x0, #16]
     dd0:	add	x0, x19, #0x18
     dd4:	bl	0 <ctf_list_append>
     dd8:	b	e0c <ctf_dump_var+0xbc>
     ddc:	bl	0 <__errno_location>
     de0:	ldr	w1, [x0]
     de4:	mov	x0, x21
     de8:	bl	0 <ctf_set_errno>
     dec:	b	e10 <ctf_dump_var+0xc0>
     df0:	mov	x0, x8
     df4:	bl	0 <free>
     df8:	mov	w0, #0xffffffff            	// #-1
     dfc:	b	e10 <ctf_dump_var+0xc0>
     e00:	ldr	x0, [x19, #8]
     e04:	mov	w1, #0xc                   	// #12
     e08:	bl	0 <ctf_set_errno>
     e0c:	mov	w0, wzr
     e10:	ldp	x20, x19, [sp, #32]
     e14:	ldr	x21, [sp, #16]
     e18:	ldp	x29, x30, [sp], #48
     e1c:	ret

0000000000000e20 <ctf_dump_type>:
     e20:	sub	sp, sp, #0x40
     e24:	stp	x29, x30, [sp, #16]
     e28:	stp	x20, x19, [sp, #48]
     e2c:	mov	x19, x2
     e30:	mov	x20, x0
     e34:	ldr	x0, [x19, #8]
     e38:	add	x29, sp, #0x10
     e3c:	mov	w2, w1
     e40:	add	x8, x29, #0x18
     e44:	mov	x1, x20
     e48:	str	x21, [sp, #32]
     e4c:	stp	x8, x0, [sp]
     e50:	bl	f50 <ctf_dump_format_type>
     e54:	str	x0, [x29, #24]
     e58:	cbz	x0, eac <ctf_dump_type+0x8c>
     e5c:	adrp	x1, 0 <ctf_dump>
     e60:	add	x1, x1, #0x0
     e64:	bl	0 <ctf_str_append_noerr>
     e68:	str	x0, [x29, #24]
     e6c:	ldr	x0, [x19, #8]
     e70:	adrp	x2, 0 <ctf_dump>
     e74:	add	x2, x2, #0x0
     e78:	mov	x3, sp
     e7c:	mov	x1, x20
     e80:	bl	0 <ctf_type_visit>
     e84:	tbnz	w0, #31, ee8 <ctf_dump_type+0xc8>
     e88:	ldr	x20, [x29, #24]
     e8c:	mov	x0, x20
     e90:	bl	0 <strlen>
     e94:	sub	x8, x0, #0x1
     e98:	ldrb	w9, [x20, x8]
     e9c:	cmp	w9, #0xa
     ea0:	b.ne	f00 <ctf_dump_type+0xe0>  // b.any
     ea4:	strb	wzr, [x20, x8]
     ea8:	b	efc <ctf_dump_type+0xdc>
     eac:	adrp	x21, 0 <ctf_dump>
     eb0:	add	x21, x21, #0x0
     eb4:	ldr	x0, [x19, #8]
     eb8:	bl	0 <ctf_errno>
     ebc:	bl	0 <ctf_errmsg>
     ec0:	mov	x3, x0
     ec4:	adrp	x0, 0 <ctf_dump>
     ec8:	add	x0, x0, #0x0
     ecc:	mov	x1, x21
     ed0:	mov	x2, x20
     ed4:	bl	0 <ctf_dprintf>
     ed8:	ldr	x0, [x29, #24]
     edc:	bl	0 <free>
     ee0:	mov	w0, #0xffffffff            	// #-1
     ee4:	b	f30 <ctf_dump_type+0x110>
     ee8:	cbz	x20, efc <ctf_dump_type+0xdc>
     eec:	ldr	x0, [x19, #8]
     ef0:	bl	0 <ctf_errno>
     ef4:	cmp	w0, #0x41b
     ef8:	b.ne	f44 <ctf_dump_type+0x124>  // b.any
     efc:	ldr	x20, [x29, #24]
     f00:	mov	w0, #0x18                  	// #24
     f04:	bl	0 <malloc>
     f08:	cbz	x0, f20 <ctf_dump_type+0x100>
     f0c:	mov	x1, x0
     f10:	str	x20, [x0, #16]
     f14:	add	x0, x19, #0x18
     f18:	bl	0 <ctf_list_append>
     f1c:	b	f2c <ctf_dump_type+0x10c>
     f20:	ldr	x0, [x19, #8]
     f24:	mov	w1, #0xc                   	// #12
     f28:	bl	0 <ctf_set_errno>
     f2c:	mov	w0, wzr
     f30:	ldp	x20, x19, [sp, #48]
     f34:	ldr	x21, [sp, #32]
     f38:	ldp	x29, x30, [sp, #16]
     f3c:	add	sp, sp, #0x40
     f40:	ret
     f44:	adrp	x21, 0 <ctf_dump>
     f48:	add	x21, x21, #0x0
     f4c:	b	eb4 <ctf_dump_type+0x94>

0000000000000f50 <ctf_dump_format_type>:
     f50:	sub	sp, sp, #0x80
     f54:	adrp	x8, 0 <ctf_dump>
     f58:	adrp	x9, 0 <ctf_dump>
     f5c:	adrp	x10, 0 <ctf_dump>
     f60:	stp	x29, x30, [sp, #32]
     f64:	add	x29, sp, #0x20
     f68:	add	x8, x8, #0x0
     f6c:	add	x9, x9, #0x0
     f70:	cmp	w2, #0x0
     f74:	add	x10, x10, #0x0
     f78:	stp	x28, x27, [sp, #48]
     f7c:	stp	x26, x25, [sp, #64]
     f80:	stp	x24, x23, [sp, #80]
     f84:	stp	x22, x21, [sp, #96]
     f88:	stp	x20, x19, [sp, #112]
     f8c:	mov	x20, x1
     f90:	mov	x19, x0
     f94:	stur	xzr, [x29, #-8]
     f98:	csel	x22, x9, x8, eq  // eq = none
     f9c:	csel	x23, x10, x8, eq  // eq = none
     fa0:	bl	0 <ctf_type_aname>
     fa4:	cbz	x0, 1100 <ctf_dump_format_type+0x1b0>
     fa8:	adrp	x25, 0 <ctf_dump>
     fac:	mov	x27, x0
     fb0:	mov	x21, xzr
     fb4:	add	x25, x25, #0x0
     fb8:	mov	w26, #0x1                   	// #1
     fbc:	mov	w24, #0x106                 	// #262
     fc0:	mov	x0, x19
     fc4:	mov	x1, x20
     fc8:	bl	0 <ctf_type_kind>
     fcc:	cmp	w0, #0x8
     fd0:	b.hi	1008 <ctf_dump_format_type+0xb8>  // b.pmore
     fd4:	lsl	w8, w26, w0
     fd8:	tst	w8, w24
     fdc:	b.eq	1008 <ctf_dump_format_type+0xb8>  // b.none
     fe0:	mov	x0, x19
     fe4:	mov	x1, x20
     fe8:	bl	0 <ctf_type_reference>
     fec:	cmn	x0, #0x1
     ff0:	b.eq	1008 <ctf_dump_format_type+0xb8>  // b.none
     ff4:	add	x2, sp, #0x8
     ff8:	mov	x0, x19
     ffc:	mov	x1, x20
    1000:	bl	0 <ctf_type_encoding>
    1004:	cbz	w0, 10b8 <ctf_dump_format_type+0x168>
    1008:	ldrb	w8, [x27]
    100c:	mov	x0, x19
    1010:	mov	x1, x20
    1014:	cmp	w8, #0x0
    1018:	adrp	x8, 0 <ctf_dump>
    101c:	add	x8, x8, #0x0
    1020:	csel	x28, x8, x27, eq  // eq = none
    1024:	bl	0 <ctf_type_size>
    1028:	adrp	x1, 0 <ctf_dump>
    102c:	mov	x5, x0
    1030:	sub	x0, x29, #0x8
    1034:	add	x1, x1, #0x0
    1038:	mov	x2, x22
    103c:	mov	x3, x20
    1040:	mov	x4, x28
    1044:	mov	x6, x23
    1048:	bl	0 <asprintf>
    104c:	tbnz	w0, #31, 10ec <ctf_dump_format_type+0x19c>
    1050:	mov	x0, x27
    1054:	bl	0 <free>
    1058:	ldur	x1, [x29, #-8]
    105c:	mov	x0, x21
    1060:	bl	0 <ctf_str_append_noerr>
    1064:	ldur	x8, [x29, #-8]
    1068:	mov	x21, x0
    106c:	mov	x0, x8
    1070:	bl	0 <free>
    1074:	mov	x0, x19
    1078:	mov	x1, x20
    107c:	stur	xzr, [x29, #-8]
    1080:	bl	0 <ctf_type_reference>
    1084:	cmn	x0, #0x1
    1088:	b.eq	1138 <ctf_dump_format_type+0x1e8>  // b.none
    108c:	mov	x20, x0
    1090:	mov	x0, x21
    1094:	mov	x1, x25
    1098:	bl	0 <ctf_str_append_noerr>
    109c:	mov	x21, x0
    10a0:	mov	x0, x19
    10a4:	mov	x1, x20
    10a8:	bl	0 <ctf_type_aname>
    10ac:	mov	x27, x0
    10b0:	cbnz	x0, fc0 <ctf_dump_format_type+0x70>
    10b4:	b	1104 <ctf_dump_format_type+0x1b4>
    10b8:	add	x2, sp, #0x8
    10bc:	mov	x0, x19
    10c0:	mov	x1, x20
    10c4:	bl	0 <ctf_type_encoding>
    10c8:	ldp	w4, w5, [sp, #12]
    10cc:	adrp	x1, 0 <ctf_dump>
    10d0:	sub	x0, x29, #0x8
    10d4:	add	x1, x1, #0x0
    10d8:	mov	x2, x22
    10dc:	mov	x3, x20
    10e0:	mov	x6, x23
    10e4:	bl	0 <asprintf>
    10e8:	tbz	w0, #31, 1050 <ctf_dump_format_type+0x100>
    10ec:	bl	0 <__errno_location>
    10f0:	ldr	w1, [x0]
    10f4:	mov	x0, x19
    10f8:	bl	0 <ctf_set_errno>
    10fc:	b	1150 <ctf_dump_format_type+0x200>
    1100:	mov	x21, xzr
    1104:	cbz	x20, 1118 <ctf_dump_format_type+0x1c8>
    1108:	mov	x0, x19
    110c:	bl	0 <ctf_errno>
    1110:	cmp	w0, #0x41b
    1114:	b.ne	114c <ctf_dump_format_type+0x1fc>  // b.any
    1118:	adrp	x1, 0 <ctf_dump>
    111c:	add	x1, x1, #0x0
    1120:	mov	x0, x21
    1124:	bl	0 <ctf_str_append_noerr>
    1128:	mov	x21, x0
    112c:	mov	w1, #0x400                 	// #1024
    1130:	mov	x0, x19
    1134:	bl	0 <ctf_set_errno>
    1138:	mov	x0, x19
    113c:	bl	0 <ctf_errno>
    1140:	cmp	w0, #0x400
    1144:	b.ne	1164 <ctf_dump_format_type+0x214>  // b.any
    1148:	b	1170 <ctf_dump_format_type+0x220>
    114c:	mov	x27, xzr
    1150:	mov	x0, x27
    1154:	bl	0 <free>
    1158:	mov	x0, x21
    115c:	bl	0 <free>
    1160:	ldur	x21, [x29, #-8]
    1164:	mov	x0, x21
    1168:	bl	0 <free>
    116c:	mov	x21, xzr
    1170:	mov	x0, x21
    1174:	ldp	x20, x19, [sp, #112]
    1178:	ldp	x22, x21, [sp, #96]
    117c:	ldp	x24, x23, [sp, #80]
    1180:	ldp	x26, x25, [sp, #64]
    1184:	ldp	x28, x27, [sp, #48]
    1188:	ldp	x29, x30, [sp, #32]
    118c:	add	sp, sp, #0x80
    1190:	ret

0000000000001194 <ctf_dump_member>:
    1194:	sub	sp, sp, #0x60
    1198:	stp	x29, x30, [sp, #32]
    119c:	stp	x22, x21, [sp, #64]
    11a0:	stp	x20, x19, [sp, #80]
    11a4:	add	x29, sp, #0x20
    11a8:	mov	x19, x4
    11ac:	mov	x21, x2
    11b0:	mov	x20, x1
    11b4:	mov	x22, x0
    11b8:	cmp	w3, #0x1
    11bc:	stp	x24, x23, [sp, #48]
    11c0:	stur	xzr, [x29, #-8]
    11c4:	b.lt	11f4 <ctf_dump_member+0x60>  // b.tstop
    11c8:	adrp	x23, 0 <ctf_dump>
    11cc:	sxtw	x24, w3
    11d0:	add	x23, x23, #0x0
    11d4:	ldr	x8, [x19]
    11d8:	mov	x1, x23
    11dc:	ldr	x0, [x8]
    11e0:	bl	0 <ctf_str_append_noerr>
    11e4:	ldr	x8, [x19]
    11e8:	subs	x24, x24, #0x1
    11ec:	str	x0, [x8]
    11f0:	b.ne	11d4 <ctf_dump_member+0x40>  // b.any
    11f4:	ldr	x0, [x19, #8]
    11f8:	mov	x1, x20
    11fc:	bl	0 <ctf_type_aname>
    1200:	cbz	x0, 12fc <ctf_dump_member+0x168>
    1204:	mov	x23, x0
    1208:	ldr	x0, [x19, #8]
    120c:	mov	x1, x20
    1210:	bl	0 <ctf_type_kind>
    1214:	ldr	x8, [x19, #8]
    1218:	mov	w24, w0
    121c:	mov	x1, x20
    1220:	mov	x0, x8
    1224:	bl	0 <ctf_type_align>
    1228:	adrp	x1, 0 <ctf_dump>
    122c:	mov	x7, x0
    1230:	add	x1, x1, #0x0
    1234:	sub	x0, x29, #0x8
    1238:	mov	x2, x21
    123c:	mov	x3, x20
    1240:	mov	w4, w24
    1244:	mov	x5, x23
    1248:	mov	x6, x22
    124c:	bl	0 <asprintf>
    1250:	tbnz	w0, #31, 1354 <ctf_dump_member+0x1c0>
    1254:	ldr	x8, [x19]
    1258:	ldur	x1, [x29, #-8]
    125c:	ldr	x0, [x8]
    1260:	bl	0 <ctf_str_append_noerr>
    1264:	ldr	x8, [x19]
    1268:	str	x0, [x8]
    126c:	mov	x0, x23
    1270:	bl	0 <free>
    1274:	ldur	x0, [x29, #-8]
    1278:	bl	0 <free>
    127c:	stur	xzr, [x29, #-8]
    1280:	ldr	x0, [x19, #8]
    1284:	mov	x1, x20
    1288:	bl	0 <ctf_type_kind>
    128c:	cmp	w0, #0x1
    1290:	b.eq	12a8 <ctf_dump_member+0x114>  // b.none
    1294:	ldr	x0, [x19, #8]
    1298:	mov	x1, x20
    129c:	bl	0 <ctf_type_kind>
    12a0:	cmp	w0, #0x2
    12a4:	b.ne	137c <ctf_dump_member+0x1e8>  // b.any
    12a8:	ldr	x0, [x19, #8]
    12ac:	add	x2, sp, #0x8
    12b0:	mov	x1, x20
    12b4:	bl	0 <ctf_type_encoding>
    12b8:	ldp	w2, w3, [sp, #8]
    12bc:	ldr	w4, [sp, #16]
    12c0:	adrp	x1, 0 <ctf_dump>
    12c4:	add	x1, x1, #0x0
    12c8:	sub	x0, x29, #0x8
    12cc:	bl	0 <asprintf>
    12d0:	tbnz	w0, #31, 1350 <ctf_dump_member+0x1bc>
    12d4:	ldr	x8, [x19]
    12d8:	ldur	x1, [x29, #-8]
    12dc:	ldr	x0, [x8]
    12e0:	bl	0 <ctf_str_append_noerr>
    12e4:	ldr	x8, [x19]
    12e8:	str	x0, [x8]
    12ec:	ldur	x0, [x29, #-8]
    12f0:	bl	0 <free>
    12f4:	stur	xzr, [x29, #-8]
    12f8:	b	13cc <ctf_dump_member+0x238>
    12fc:	cbz	x20, 1310 <ctf_dump_member+0x17c>
    1300:	ldr	x0, [x19, #8]
    1304:	bl	0 <ctf_errno>
    1308:	cmp	w0, #0x41b
    130c:	b.ne	1350 <ctf_dump_member+0x1bc>  // b.any
    1310:	adrp	x1, 0 <ctf_dump>
    1314:	add	x1, x1, #0x0
    1318:	sub	x0, x29, #0x8
    131c:	mov	x2, x21
    1320:	bl	0 <asprintf>
    1324:	tbnz	w0, #31, 1350 <ctf_dump_member+0x1bc>
    1328:	ldr	x8, [x19]
    132c:	ldur	x1, [x29, #-8]
    1330:	ldr	x0, [x8]
    1334:	bl	0 <ctf_str_append_noerr>
    1338:	ldr	x8, [x19]
    133c:	str	x0, [x8]
    1340:	ldur	x0, [x29, #-8]
    1344:	bl	0 <free>
    1348:	mov	w0, wzr
    134c:	b	13f0 <ctf_dump_member+0x25c>
    1350:	mov	x23, xzr
    1354:	mov	x0, x23
    1358:	bl	0 <free>
    135c:	ldur	x0, [x29, #-8]
    1360:	bl	0 <free>
    1364:	ldr	x19, [x19, #8]
    1368:	bl	0 <__errno_location>
    136c:	ldr	w1, [x0]
    1370:	mov	x0, x19
    1374:	bl	0 <ctf_set_errno>
    1378:	b	13f0 <ctf_dump_member+0x25c>
    137c:	ldr	x21, [x19, #8]
    1380:	mov	x1, x20
    1384:	mov	x0, x21
    1388:	bl	0 <ctf_type_kind>
    138c:	cmp	w0, #0x8
    1390:	b.hi	13cc <ctf_dump_member+0x238>  // b.pmore
    1394:	mov	w8, #0x1                   	// #1
    1398:	lsl	w8, w8, w0
    139c:	mov	w9, #0x106                 	// #262
    13a0:	tst	w8, w9
    13a4:	b.eq	13cc <ctf_dump_member+0x238>  // b.none
    13a8:	mov	x0, x21
    13ac:	mov	x1, x20
    13b0:	bl	0 <ctf_type_reference>
    13b4:	cmn	x0, #0x1
    13b8:	b.eq	13cc <ctf_dump_member+0x238>  // b.none
    13bc:	add	x2, sp, #0x8
    13c0:	mov	x0, x21
    13c4:	mov	x1, x20
    13c8:	bl	0 <ctf_type_encoding>
    13cc:	ldr	x8, [x19]
    13d0:	adrp	x1, 0 <ctf_dump>
    13d4:	add	x1, x1, #0x0
    13d8:	ldr	x0, [x8]
    13dc:	bl	0 <ctf_str_append_noerr>
    13e0:	ldr	x9, [x19]
    13e4:	mov	x8, x0
    13e8:	mov	w0, wzr
    13ec:	str	x8, [x9]
    13f0:	ldp	x20, x19, [sp, #80]
    13f4:	ldp	x22, x21, [sp, #64]
    13f8:	ldp	x24, x23, [sp, #48]
    13fc:	ldp	x29, x30, [sp, #32]
    1400:	add	sp, sp, #0x60
    1404:	ret

ctf-create.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_create>:
       0:	sub	sp, sp, #0x70
       4:	stp	x29, x30, [sp, #32]
       8:	stp	x26, x25, [sp, #48]
       c:	stp	x24, x23, [sp, #64]
      10:	stp	x22, x21, [sp, #80]
      14:	stp	x20, x19, [sp, #96]
      18:	add	x29, sp, #0x20
      1c:	mov	x19, x0
      20:	bl	0 <libctf_init_debug>
      24:	adrp	x0, 0 <ctf_hash_integer>
      28:	adrp	x1, 0 <ctf_hash_eq_integer>
      2c:	add	x0, x0, #0x0
      30:	add	x1, x1, #0x0
      34:	mov	x2, xzr
      38:	mov	x3, xzr
      3c:	bl	0 <ctf_dynhash_create>
      40:	cbz	x0, 198 <ctf_create+0x198>
      44:	mov	x20, x0
      48:	adrp	x0, 0 <ctf_hash_string>
      4c:	adrp	x1, 0 <ctf_hash_eq_string>
      50:	add	x0, x0, #0x0
      54:	add	x1, x1, #0x0
      58:	mov	x2, xzr
      5c:	mov	x3, xzr
      60:	bl	0 <ctf_dynhash_create>
      64:	cbz	x0, 1a8 <ctf_create+0x1a8>
      68:	adrp	x21, 0 <ctf_hash_string>
      6c:	adrp	x26, 0 <ctf_hash_eq_string>
      70:	add	x21, x21, #0x0
      74:	add	x26, x26, #0x0
      78:	mov	x22, x0
      7c:	mov	x0, x21
      80:	mov	x1, x26
      84:	mov	x2, xzr
      88:	mov	x3, xzr
      8c:	bl	0 <ctf_dynhash_create>
      90:	mov	x23, x0
      94:	mov	x0, x21
      98:	mov	x1, x26
      9c:	mov	x2, xzr
      a0:	mov	x3, xzr
      a4:	bl	0 <ctf_dynhash_create>
      a8:	mov	x24, x0
      ac:	mov	x0, x21
      b0:	mov	x1, x26
      b4:	mov	x2, xzr
      b8:	mov	x3, xzr
      bc:	bl	0 <ctf_dynhash_create>
      c0:	mov	x25, x0
      c4:	mov	x0, x21
      c8:	mov	x1, x26
      cc:	mov	x2, xzr
      d0:	mov	x3, xzr
      d4:	bl	0 <ctf_dynhash_create>
      d8:	mov	x26, x0
      dc:	cbz	x23, 1b8 <ctf_create+0x1b8>
      e0:	cbz	x24, 1b8 <ctf_create+0x1b8>
      e4:	cbz	x25, 1b8 <ctf_create+0x1b8>
      e8:	cbz	x26, 1b8 <ctf_create+0x1b8>
      ec:	adrp	x9, 0 <ctf_create>
      f0:	ldr	q0, [x9]
      f4:	adrp	x8, 0 <_CTF_SECTION>
      f8:	adrp	x9, 0 <ctf_create>
      fc:	add	x8, x8, #0x0
     100:	add	x9, x9, #0x0
     104:	mov	x0, sp
     108:	mov	w4, #0x1                   	// #1
     10c:	mov	x1, xzr
     110:	mov	x2, xzr
     114:	mov	x3, xzr
     118:	mov	x5, x19
     11c:	stp	x8, x9, [sp]
     120:	str	q0, [sp, #16]
     124:	bl	0 <ctf_bufopen_internal>
     128:	cbz	x0, 1c4 <ctf_create+0x1c4>
     12c:	adrp	x8, 0 <ctf_create>
     130:	ldr	q0, [x8]
     134:	add	x8, x0, #0x268
     138:	mov	x21, x0
     13c:	str	x23, [x0, #160]
     140:	str	x24, [x0, #176]
     144:	str	x25, [x0, #192]
     148:	str	x26, [x0, #208]
     14c:	str	x20, [x0, #568]
     150:	str	x22, [x0, #592]
     154:	str	q0, [x8]
     158:	str	xzr, [x0, #632]
     15c:	bl	0 <ctf_set_ctl_hashes>
     160:	mov	w1, #0x2                   	// #2
     164:	mov	x0, x21
     168:	bl	0 <ctf_setmodel>
     16c:	ldp	x0, x8, [x21, #448]
     170:	cbz	x0, 218 <ctf_create+0x218>
     174:	ldr	x9, [x21, #480]
     178:	add	x9, x9, #0x2
     17c:	cmp	x9, x8
     180:	b.ls	1f8 <ctf_create+0x1f8>  // b.plast
     184:	ucvtf	d0, x8
     188:	fmov	d1, #1.250000000000000000e+00
     18c:	fmul	d0, d0, d1
     190:	fcvtzu	x20, d0
     194:	b	21c <ctf_create+0x21c>
     198:	mov	w1, #0xb                   	// #11
     19c:	mov	x0, x19
     1a0:	bl	0 <ctf_set_open_errno>
     1a4:	b	1f4 <ctf_create+0x1f4>
     1a8:	mov	w1, #0xb                   	// #11
     1ac:	mov	x0, x19
     1b0:	bl	0 <ctf_set_open_errno>
     1b4:	b	1ec <ctf_create+0x1ec>
     1b8:	mov	w1, #0xb                   	// #11
     1bc:	mov	x0, x19
     1c0:	bl	0 <ctf_set_open_errno>
     1c4:	mov	x0, x23
     1c8:	bl	0 <ctf_dynhash_destroy>
     1cc:	mov	x0, x24
     1d0:	bl	0 <ctf_dynhash_destroy>
     1d4:	mov	x0, x25
     1d8:	bl	0 <ctf_dynhash_destroy>
     1dc:	mov	x0, x26
     1e0:	bl	0 <ctf_dynhash_destroy>
     1e4:	mov	x0, x22
     1e8:	bl	0 <ctf_dynhash_destroy>
     1ec:	mov	x0, x20
     1f0:	bl	0 <ctf_dynhash_destroy>
     1f4:	mov	x21, xzr
     1f8:	mov	x0, x21
     1fc:	ldp	x20, x19, [sp, #96]
     200:	ldp	x22, x21, [sp, #80]
     204:	ldp	x24, x23, [sp, #64]
     208:	ldp	x26, x25, [sp, #48]
     20c:	ldp	x29, x30, [sp, #32]
     210:	add	sp, sp, #0x70
     214:	ret
     218:	mov	w20, #0x400                 	// #1024
     21c:	cmp	x20, x8
     220:	b.eq	1f8 <ctf_create+0x1f8>  // b.none
     224:	lsl	x1, x20, #2
     228:	bl	0 <realloc>
     22c:	cbz	x0, 254 <ctf_create+0x254>
     230:	ldr	x8, [x21, #456]
     234:	str	x0, [x21, #448]
     238:	mov	w1, wzr
     23c:	add	x0, x0, x8, lsl #2
     240:	sub	x8, x20, x8
     244:	lsl	x2, x8, #2
     248:	bl	0 <memset>
     24c:	str	x20, [x21, #456]
     250:	b	1f8 <ctf_create+0x1f8>
     254:	mov	w1, #0xc                   	// #12
     258:	mov	x0, x21
     25c:	bl	0 <ctf_set_errno>
     260:	tbz	w0, #31, 1f8 <ctf_create+0x1f8>
     264:	mov	x0, x21
     268:	bl	0 <ctf_errno>
     26c:	mov	w1, w0
     270:	mov	x0, x19
     274:	bl	0 <ctf_set_open_errno>
     278:	mov	x0, x21
     27c:	bl	0 <ctf_file_close>
     280:	b	1f4 <ctf_create+0x1f4>

0000000000000284 <ctf_update>:
     284:	stp	x29, x30, [sp, #-16]!
     288:	ldrb	w9, [x0, #552]
     28c:	mov	x8, x0
     290:	mov	x29, sp
     294:	tbnz	w9, #1, 2ac <ctf_update+0x28>
     298:	mov	w1, #0x40d                 	// #1037
     29c:	mov	x0, x8
     2a0:	bl	0 <ctf_set_errno>
     2a4:	ldp	x29, x30, [sp], #16
     2a8:	ret
     2ac:	ldr	x9, [x8, #480]
     2b0:	mov	w0, wzr
     2b4:	str	x9, [x8, #616]
     2b8:	ldp	x29, x30, [sp], #16
     2bc:	ret

00000000000002c0 <ctf_serialize>:
     2c0:	stp	x29, x30, [sp, #-96]!
     2c4:	stp	x28, x27, [sp, #16]
     2c8:	stp	x26, x25, [sp, #32]
     2cc:	stp	x24, x23, [sp, #48]
     2d0:	stp	x22, x21, [sp, #64]
     2d4:	stp	x20, x19, [sp, #80]
     2d8:	mov	x29, sp
     2dc:	sub	sp, sp, #0x370
     2e0:	ldr	w8, [x0, #552]
     2e4:	mov	x19, x0
     2e8:	tbnz	w8, #1, 2fc <ctf_serialize+0x3c>
     2ec:	mov	w1, #0x40d                 	// #1037
     2f0:	mov	x0, x19
     2f4:	bl	0 <ctf_set_errno>
     2f8:	b	304 <ctf_serialize+0x44>
     2fc:	tbnz	w8, #2, 324 <ctf_serialize+0x64>
     300:	mov	w0, wzr
     304:	add	sp, sp, #0x370
     308:	ldp	x20, x19, [sp, #80]
     30c:	ldp	x22, x21, [sp, #64]
     310:	ldp	x24, x23, [sp, #48]
     314:	ldp	x26, x25, [sp, #32]
     318:	ldp	x28, x27, [sp, #16]
     31c:	ldp	x29, x30, [sp], #96
     320:	ret
     324:	movi	v0.2d, #0x0
     328:	strb	wzr, [sp, #128]
     32c:	stp	q0, q0, [sp, #96]
     330:	ldr	x21, [x19, #584]
     334:	cbz	x21, 3f4 <ctf_serialize+0x134>
     338:	adrp	x25, 0 <ctf_create>
     33c:	mov	x22, xzr
     340:	mov	w23, #0xc                   	// #12
     344:	mov	w24, #0x14                  	// #20
     348:	add	x25, x25, #0x0
     34c:	b	35c <ctf_serialize+0x9c>
     350:	add	x22, x22, #0x4
     354:	ldr	x21, [x21, #8]
     358:	cbz	x21, 3f8 <ctf_serialize+0x138>
     35c:	ldr	x8, [x19]
     360:	ldr	w0, [x21, #28]
     364:	ldr	x8, [x8]
     368:	blr	x8
     36c:	ldr	x8, [x19]
     370:	mov	w20, w0
     374:	ldr	x9, [x8, #16]
     378:	ldr	w8, [x21, #28]
     37c:	mov	w0, w8
     380:	blr	x9
     384:	ldr	w8, [x21, #32]
     388:	sub	w9, w20, #0x1
     38c:	cmn	w8, #0x1
     390:	csel	x10, x24, x23, eq  // eq = none
     394:	cmp	w9, #0xd
     398:	add	x22, x10, x22
     39c:	b.hi	354 <ctf_serialize+0x94>  // b.pmore
     3a0:	adr	x10, 350 <ctf_serialize+0x90>
     3a4:	ldrb	w11, [x25, x9]
     3a8:	add	x10, x10, x11, lsl #2
     3ac:	br	x10
     3b0:	lsr	w9, w8, #29
     3b4:	mov	w8, w0
     3b8:	cbnz	w9, 3dc <ctf_serialize+0x11c>
     3bc:	madd	x22, x8, x23, x22
     3c0:	b	354 <ctf_serialize+0x94>
     3c4:	add	x22, x22, w0, uxtw #3
     3c8:	b	354 <ctf_serialize+0x94>
     3cc:	add	x22, x22, #0x8
     3d0:	b	354 <ctf_serialize+0x94>
     3d4:	add	x22, x22, #0xc
     3d8:	b	354 <ctf_serialize+0x94>
     3dc:	add	x22, x22, x8, lsl #4
     3e0:	b	354 <ctf_serialize+0x94>
     3e4:	and	w8, w0, #0x1
     3e8:	add	w8, w8, w0
     3ec:	add	x22, x22, w8, uxtw #2
     3f0:	b	354 <ctf_serialize+0x94>
     3f4:	mov	x22, xzr
     3f8:	ldr	x8, [x19, #608]
     3fc:	cbz	x8, 414 <ctf_serialize+0x154>
     400:	mov	x21, xzr
     404:	ldr	x8, [x8, #8]
     408:	add	x21, x21, #0x1
     40c:	cbnz	x8, 404 <ctf_serialize+0x144>
     410:	b	418 <ctf_serialize+0x158>
     414:	mov	x21, xzr
     418:	lsl	x23, x21, #3
     41c:	add	x20, x23, x22
     420:	and	x24, x20, #0xffffffff
     424:	add	x22, x24, #0x34
     428:	mov	x0, x22
     42c:	bl	0 <malloc>
     430:	cbz	x0, 974 <ctf_serialize+0x6b4>
     434:	ldp	q0, q1, [sp, #96]
     438:	ldrb	w10, [sp, #128]
     43c:	mov	w8, #0xdff2                	// #57330
     440:	mov	w9, #0x4                   	// #4
     444:	stp	wzr, w23, [x0, #36]
     448:	strh	w8, [x0]
     44c:	strb	w9, [x0, #2]
     450:	strb	w10, [x0, #35]
     454:	stur	q1, [x0, #19]
     458:	stur	q0, [x0, #3]
     45c:	stp	w20, wzr, [x0, #44]
     460:	ldrb	w8, [x19, #552]
     464:	mov	x25, x0
     468:	tbz	w8, #0, 480 <ctf_serialize+0x1c0>
     46c:	ldr	x1, [x19, #528]
     470:	cbz	x1, 480 <ctf_serialize+0x1c0>
     474:	add	x2, x25, #0x8
     478:	mov	x0, x19
     47c:	bl	0 <ctf_str_add_ref>
     480:	ldr	x1, [x19, #496]
     484:	add	x8, x25, #0x34
     488:	str	x8, [sp, #48]
     48c:	cbz	x1, 49c <ctf_serialize+0x1dc>
     490:	add	x2, x25, #0xc
     494:	mov	x0, x19
     498:	bl	0 <ctf_str_add_ref>
     49c:	stp	x22, x24, [sp, #24]
     4a0:	ldr	x22, [x19, #608]
     4a4:	cbz	x22, 97c <ctf_serialize+0x6bc>
     4a8:	ldr	x24, [sp, #48]
     4ac:	mov	x20, xzr
     4b0:	ldr	x1, [x22, #16]
     4b4:	mov	x0, x19
     4b8:	mov	x2, x24
     4bc:	bl	0 <ctf_str_add_ref>
     4c0:	ldr	x8, [x22, #24]
     4c4:	add	x20, x20, #0x1
     4c8:	str	w8, [x24, #4]
     4cc:	ldr	x22, [x22, #8]
     4d0:	add	x24, x24, #0x8
     4d4:	cbnz	x22, 4b0 <ctf_serialize+0x1f0>
     4d8:	cmp	x20, x21
     4dc:	b.ne	988 <ctf_serialize+0x6c8>  // b.any
     4e0:	and	x8, x23, #0xfffffff8
     4e4:	cmp	x23, x8
     4e8:	b.ne	9d8 <ctf_serialize+0x718>  // b.any
     4ec:	ldr	x8, [sp, #48]
     4f0:	ldr	x20, [x19, #584]
     4f4:	str	x25, [sp, #40]
     4f8:	add	x24, x8, x23
     4fc:	cbz	x20, 6d0 <ctf_serialize+0x410>
     500:	mov	w23, #0xc                   	// #12
     504:	mov	w22, #0x14                  	// #20
     508:	b	52c <ctf_serialize+0x26c>
     50c:	ldp	w9, w8, [x20, #48]
     510:	ldr	w10, [x20, #56]
     514:	lsl	w8, w8, #16
     518:	orr	w8, w8, w9, lsl #24
     51c:	orr	w8, w8, w10
     520:	str	w8, [x24], #4
     524:	ldr	x20, [x20, #8]
     528:	cbz	x20, 6d0 <ctf_serialize+0x410>
     52c:	ldr	x8, [x19]
     530:	ldr	w0, [x20, #28]
     534:	add	x28, x20, #0x18
     538:	ldr	x8, [x8]
     53c:	blr	x8
     540:	ldr	x8, [x19]
     544:	mov	w26, w0
     548:	ldr	x9, [x8, #16]
     54c:	ldr	w8, [x20, #28]
     550:	mov	w0, w8
     554:	blr	x9
     558:	ldr	w8, [x20, #32]
     55c:	mov	w25, w0
     560:	mov	x0, x24
     564:	mov	x1, x28
     568:	cmn	w8, #0x1
     56c:	csel	x27, x22, x23, eq  // eq = none
     570:	mov	x2, x27
     574:	bl	0 <memcpy>
     578:	ldr	w1, [x24]
     57c:	cbz	w1, 59c <ctf_serialize+0x2dc>
     580:	mov	x0, x19
     584:	bl	0 <ctf_strraw>
     588:	cbz	x0, 59c <ctf_serialize+0x2dc>
     58c:	mov	x1, x0
     590:	mov	x0, x19
     594:	mov	x2, x24
     598:	bl	0 <ctf_str_add_ref>
     59c:	sub	w8, w26, #0x1
     5a0:	cmp	w8, #0xd
     5a4:	add	x24, x24, x27
     5a8:	b.hi	524 <ctf_serialize+0x264>  // b.pmore
     5ac:	adrp	x11, 0 <ctf_create>
     5b0:	add	x11, x11, #0x0
     5b4:	adr	x9, 50c <ctf_serialize+0x24c>
     5b8:	ldrb	w10, [x11, x8]
     5bc:	add	x9, x9, x10, lsl #2
     5c0:	br	x9
     5c4:	ldr	w8, [x20, #32]
     5c8:	ldr	x25, [x20, #56]
     5cc:	lsr	w8, w8, #29
     5d0:	cbnz	w8, 660 <ctf_serialize+0x3a0>
     5d4:	cbnz	x25, 5e8 <ctf_serialize+0x328>
     5d8:	b	524 <ctf_serialize+0x264>
     5dc:	ldr	x25, [x25, #8]
     5e0:	add	x24, x24, #0xc
     5e4:	cbz	x25, 524 <ctf_serialize+0x264>
     5e8:	ldp	x9, x8, [x25, #24]
     5ec:	stp	wzr, w8, [x24]
     5f0:	str	w9, [x24, #8]
     5f4:	ldr	x1, [x25, #16]
     5f8:	cbz	x1, 5dc <ctf_serialize+0x31c>
     5fc:	mov	x0, x19
     600:	mov	x2, x24
     604:	bl	0 <ctf_str_add_ref>
     608:	b	5dc <ctf_serialize+0x31c>
     60c:	ldr	x25, [x20, #56]
     610:	cbz	x25, 524 <ctf_serialize+0x264>
     614:	ldr	w8, [x25, #40]
     618:	mov	x0, x19
     61c:	mov	x2, x24
     620:	str	w8, [x24, #4]
     624:	ldr	x1, [x25, #16]
     628:	bl	0 <ctf_str_add_ref>
     62c:	ldr	x25, [x25, #8]
     630:	add	x24, x24, #0x8
     634:	cbnz	x25, 614 <ctf_serialize+0x354>
     638:	b	524 <ctf_serialize+0x264>
     63c:	ldr	x8, [x20, #48]
     640:	str	x8, [x24], #8
     644:	b	524 <ctf_serialize+0x264>
     648:	ldr	q0, [x20, #48]
     64c:	ldr	w8, [x20, #64]
     650:	xtn	v0.2s, v0.2d
     654:	str	w8, [x24, #8]
     658:	str	d0, [x24], #12
     65c:	b	524 <ctf_serialize+0x264>
     660:	cbnz	x25, 674 <ctf_serialize+0x3b4>
     664:	b	524 <ctf_serialize+0x264>
     668:	ldr	x25, [x25, #8]
     66c:	add	x24, x24, #0x10
     670:	cbz	x25, 524 <ctf_serialize+0x264>
     674:	ldp	x9, x8, [x25, #24]
     678:	lsr	x10, x8, #32
     67c:	stp	wzr, w10, [x24]
     680:	stp	w9, w8, [x24, #8]
     684:	ldr	x1, [x25, #16]
     688:	cbz	x1, 668 <ctf_serialize+0x3a8>
     68c:	mov	x0, x19
     690:	mov	x2, x24
     694:	bl	0 <ctf_str_add_ref>
     698:	b	668 <ctf_serialize+0x3a8>
     69c:	cbz	w25, 524 <ctf_serialize+0x264>
     6a0:	mov	w9, w25
     6a4:	mov	x8, xzr
     6a8:	lsl	x9, x9, #3
     6ac:	ldr	x10, [x20, #48]
     6b0:	ldr	x10, [x10, x8]
     6b4:	add	x8, x8, #0x8
     6b8:	cmp	x9, x8
     6bc:	str	w10, [x24], #4
     6c0:	b.ne	6ac <ctf_serialize+0x3ec>  // b.any
     6c4:	tbz	w25, #0, 524 <ctf_serialize+0x264>
     6c8:	str	wzr, [x24], #4
     6cc:	b	524 <ctf_serialize+0x264>
     6d0:	ldr	x8, [sp, #32]
     6d4:	ldr	x9, [sp, #48]
     6d8:	add	x8, x9, x8
     6dc:	cmp	x24, x8
     6e0:	b.ne	9f8 <ctf_serialize+0x738>  // b.any
     6e4:	mov	x0, x19
     6e8:	bl	0 <ctf_str_write_strtab>
     6ec:	mov	x24, x0
     6f0:	stp	x0, x1, [sp, #80]
     6f4:	mov	x0, x19
     6f8:	bl	0 <ctf_str_purge_refs>
     6fc:	ldr	x22, [sp, #40]
     700:	cbz	x24, 9a8 <ctf_serialize+0x6e8>
     704:	ldr	x0, [sp, #48]
     708:	adrp	x3, 0 <ctf_create>
     70c:	add	x8, sp, #0x50
     710:	add	x3, x3, #0x0
     714:	add	x4, sp, #0x38
     718:	mov	w2, #0x8                   	// #8
     71c:	mov	x1, x21
     720:	stp	x19, x8, [sp, #56]
     724:	bl	0 <qsort_r>
     728:	ldr	x8, [sp, #88]
     72c:	ldr	x20, [sp, #24]
     730:	mov	x0, x19
     734:	mov	x1, x22
     738:	add	x2, x8, x20
     73c:	bl	0 <ctf_realloc>
     740:	cbz	x0, 9b0 <ctf_serialize+0x6f0>
     744:	ldp	x1, x2, [sp, #80]
     748:	mov	x21, x0
     74c:	add	x0, x0, x20
     750:	bl	0 <memcpy>
     754:	ldp	x0, x8, [sp, #80]
     758:	str	w8, [x21, #48]
     75c:	add	x20, x20, w8, uxtw
     760:	bl	0 <free>
     764:	ldr	x7, [x19, #128]
     768:	add	x8, sp, #0x4c
     76c:	mov	w9, #0x1                   	// #1
     770:	mov	x0, x21
     774:	mov	x1, x20
     778:	mov	x2, xzr
     77c:	mov	x3, xzr
     780:	mov	x4, xzr
     784:	mov	x5, xzr
     788:	mov	x6, xzr
     78c:	str	x8, [sp, #8]
     790:	str	w9, [sp]
     794:	bl	0 <ctf_simple_open_internal>
     798:	cbz	x0, 9c8 <ctf_serialize+0x708>
     79c:	mov	x20, x0
     7a0:	add	x24, x0, #0x288
     7a4:	mov	x0, x19
     7a8:	add	x22, x19, #0x288
     7ac:	add	x23, x19, #0x240
     7b0:	add	x25, x19, #0x258
     7b4:	bl	0 <ctf_getmodel>
     7b8:	mov	w1, w0
     7bc:	mov	x0, x20
     7c0:	bl	0 <ctf_setmodel>
     7c4:	ldr	x1, [x19, #512]
     7c8:	mov	x0, x20
     7cc:	bl	0 <ctf_import>
     7d0:	ldr	w8, [x19, #548]
     7d4:	ldr	w9, [x20, #552]
     7d8:	ldr	x10, [x20, #400]
     7dc:	str	w8, [x20, #548]
     7e0:	ldr	w8, [x19, #552]
     7e4:	and	w8, w8, #0xfffffffb
     7e8:	orr	w8, w9, w8
     7ec:	str	w8, [x20, #552]
     7f0:	cbnz	x10, 7f8 <ctf_serialize+0x538>
     7f4:	str	x21, [x20, #400]
     7f8:	ldr	x8, [x19, #568]
     7fc:	add	x10, x19, #0xd8
     800:	add	x9, x20, #0xd8
     804:	mov	x0, x20
     808:	str	x8, [x20, #568]
     80c:	ldr	q0, [x23]
     810:	str	q0, [x20, #576]
     814:	ldr	x8, [x19, #592]
     818:	str	x8, [x20, #592]
     81c:	ldr	q0, [x25]
     820:	add	x8, x20, #0x258
     824:	str	q0, [x8]
     828:	ldr	x8, [x19, #616]
     82c:	str	x8, [x20, #616]
     830:	ldr	x8, [x19, #696]
     834:	str	x8, [x20, #696]
     838:	ldr	x8, [x19, #624]
     83c:	add	x8, x8, #0x1
     840:	str	x8, [x20, #624]
     844:	ldr	x8, [x19, #720]
     848:	str	x8, [x20, #720]
     84c:	ldr	q0, [x19, #448]
     850:	str	q0, [x20, #448]
     854:	ldr	q0, [x22]
     858:	str	q0, [x24]
     85c:	ldr	w8, [x19, #384]
     860:	str	w8, [x20, #384]
     864:	ldr	x8, [x19, #128]
     868:	str	x8, [x20, #128]
     86c:	ldr	q0, [x22, #16]
     870:	str	q0, [x24, #16]
     874:	ldr	q0, [x22, #32]
     878:	str	q0, [x24, #32]
     87c:	ldr	x8, [x19, #624]
     880:	str	x8, [x20, #632]
     884:	ldr	q0, [x10, #48]
     888:	ldur	q1, [x19, #248]
     88c:	ldur	q2, [x19, #232]
     890:	ldur	q3, [x19, #216]
     894:	str	q0, [x9, #48]
     898:	stur	q1, [x20, #248]
     89c:	stur	q2, [x20, #232]
     8a0:	stur	q3, [x20, #216]
     8a4:	ldr	x8, [x10, #112]
     8a8:	ldp	q1, q0, [x10, #80]
     8ac:	ldr	q2, [x10, #64]
     8b0:	str	x8, [x9, #112]
     8b4:	stp	q1, q0, [x9, #80]
     8b8:	str	q2, [x9, #64]
     8bc:	ldur	q0, [x19, #152]
     8c0:	stur	q0, [x20, #152]
     8c4:	ldur	q0, [x19, #168]
     8c8:	stur	q0, [x20, #168]
     8cc:	ldur	q0, [x19, #184]
     8d0:	stur	q0, [x20, #184]
     8d4:	ldur	q0, [x19, #200]
     8d8:	stur	q0, [x20, #200]
     8dc:	str	xzr, [x19, #568]
     8e0:	bl	0 <ctf_str_free_atoms>
     8e4:	ldr	x8, [x19, #368]
     8e8:	movi	v0.2d, #0x0
     8ec:	add	x0, sp, #0x90
     8f0:	mov	w2, #0x2d8                 	// #728
     8f4:	str	x8, [x20, #368]
     8f8:	ldr	x8, [x19, #120]
     8fc:	mov	x1, x19
     900:	str	x8, [x20, #120]
     904:	str	xzr, [x19, #368]
     908:	str	xzr, [x19, #696]
     90c:	str	xzr, [x19, #448]
     910:	str	xzr, [x19, #160]
     914:	str	xzr, [x19, #176]
     918:	str	xzr, [x19, #192]
     91c:	stp	xzr, xzr, [x19, #120]
     920:	stp	q0, q0, [x19, #208]
     924:	stp	q0, q0, [x19, #240]
     928:	stp	q0, q0, [x19, #272]
     92c:	stp	q0, q0, [x19, #304]
     930:	stp	q0, q0, [x23]
     934:	str	xzr, [x23, #32]
     938:	stp	q0, q0, [x22]
     93c:	bl	0 <memcpy>
     940:	mov	w2, #0x2d8                 	// #728
     944:	mov	x0, x19
     948:	mov	x1, x20
     94c:	bl	0 <memcpy>
     950:	add	x1, sp, #0x90
     954:	mov	w2, #0x2d8                 	// #728
     958:	mov	x0, x20
     95c:	bl	0 <memcpy>
     960:	mov	w8, #0x1                   	// #1
     964:	mov	x0, x20
     968:	str	w8, [x20, #548]
     96c:	bl	0 <ctf_file_close>
     970:	b	300 <ctf_serialize+0x40>
     974:	mov	w1, #0xb                   	// #11
     978:	b	2f0 <ctf_serialize+0x30>
     97c:	mov	x20, xzr
     980:	cmp	x20, x21
     984:	b.eq	4e0 <ctf_serialize+0x220>  // b.none
     988:	adrp	x0, 0 <ctf_create>
     98c:	adrp	x1, 0 <ctf_create>
     990:	adrp	x3, 0 <ctf_create>
     994:	add	x0, x0, #0x0
     998:	add	x1, x1, #0x0
     99c:	add	x3, x3, #0x0
     9a0:	mov	w2, #0x179                 	// #377
     9a4:	bl	0 <__assert_fail>
     9a8:	mov	x0, x22
     9ac:	b	9bc <ctf_serialize+0x6fc>
     9b0:	mov	x0, x22
     9b4:	bl	0 <free>
     9b8:	ldr	x0, [sp, #80]
     9bc:	bl	0 <free>
     9c0:	mov	w1, #0xb                   	// #11
     9c4:	b	2f0 <ctf_serialize+0x30>
     9c8:	mov	x0, x21
     9cc:	bl	0 <free>
     9d0:	ldr	w1, [sp, #76]
     9d4:	b	2f0 <ctf_serialize+0x30>
     9d8:	adrp	x0, 0 <ctf_create>
     9dc:	adrp	x1, 0 <ctf_create>
     9e0:	adrp	x3, 0 <ctf_create>
     9e4:	add	x0, x0, #0x0
     9e8:	add	x1, x1, #0x0
     9ec:	add	x3, x3, #0x0
     9f0:	mov	w2, #0x17d                 	// #381
     9f4:	bl	0 <__assert_fail>
     9f8:	adrp	x0, 0 <ctf_create>
     9fc:	adrp	x1, 0 <ctf_create>
     a00:	adrp	x3, 0 <ctf_create>
     a04:	add	x0, x0, #0x0
     a08:	add	x1, x1, #0x0
     a0c:	add	x3, x3, #0x0
     a10:	mov	w2, #0x1d8                 	// #472
     a14:	bl	0 <__assert_fail>

0000000000000a18 <ctf_sort_var>:
     a18:	stp	x29, x30, [sp, #-32]!
     a1c:	stp	x20, x19, [sp, #16]
     a20:	ldr	w8, [x0]
     a24:	mov	x19, x2
     a28:	ldp	x0, x2, [x2]
     a2c:	mov	x20, x1
     a30:	mov	w1, w8
     a34:	mov	x29, sp
     a38:	bl	0 <ctf_strraw_explicit>
     a3c:	ldp	x8, x2, [x19]
     a40:	ldr	w1, [x20]
     a44:	mov	x19, x0
     a48:	mov	x0, x8
     a4c:	bl	0 <ctf_strraw_explicit>
     a50:	mov	x1, x0
     a54:	mov	x0, x19
     a58:	ldp	x20, x19, [sp, #16]
     a5c:	ldp	x29, x30, [sp], #32
     a60:	b	0 <strcmp>

0000000000000a64 <ctf_name_table>:
     a64:	cmp	w1, #0x8
     a68:	b.eq	a84 <ctf_name_table+0x20>  // b.none
     a6c:	cmp	w1, #0x7
     a70:	b.eq	a8c <ctf_name_table+0x28>  // b.none
     a74:	cmp	w1, #0x6
     a78:	b.ne	a94 <ctf_name_table+0x30>  // b.any
     a7c:	add	x0, x0, #0x98
     a80:	ret
     a84:	add	x0, x0, #0xb8
     a88:	ret
     a8c:	add	x0, x0, #0xa8
     a90:	ret
     a94:	add	x0, x0, #0xc8
     a98:	ret

0000000000000a9c <ctf_dtd_insert>:
     a9c:	stp	x29, x30, [sp, #-48]!
     aa0:	stp	x20, x19, [sp, #32]
     aa4:	mov	x19, x1
     aa8:	mov	x20, x0
     aac:	ldr	x0, [x0, #568]
     ab0:	ldr	x1, [x1, #16]
     ab4:	str	x21, [sp, #16]
     ab8:	mov	w21, w2
     abc:	mov	x2, x19
     ac0:	mov	x29, sp
     ac4:	bl	0 <ctf_dynhash_insert>
     ac8:	tbnz	w0, #31, b04 <ctf_dtd_insert+0x68>
     acc:	ldr	w1, [x19, #24]
     ad0:	cbz	w1, b30 <ctf_dtd_insert+0x94>
     ad4:	mov	x0, x20
     ad8:	bl	0 <ctf_strraw>
     adc:	cbz	x0, b30 <ctf_dtd_insert+0x94>
     ae0:	mov	x1, x0
     ae4:	cmp	w21, #0x8
     ae8:	b.eq	b0c <ctf_dtd_insert+0x70>  // b.none
     aec:	cmp	w21, #0x7
     af0:	b.eq	b14 <ctf_dtd_insert+0x78>  // b.none
     af4:	cmp	w21, #0x6
     af8:	b.ne	b1c <ctf_dtd_insert+0x80>  // b.any
     afc:	add	x8, x20, #0x98
     b00:	b	b20 <ctf_dtd_insert+0x84>
     b04:	mov	w0, #0xffffffff            	// #-1
     b08:	b	b40 <ctf_dtd_insert+0xa4>
     b0c:	add	x8, x20, #0xb8
     b10:	b	b20 <ctf_dtd_insert+0x84>
     b14:	add	x8, x20, #0xa8
     b18:	b	b20 <ctf_dtd_insert+0x84>
     b1c:	add	x8, x20, #0xc8
     b20:	ldr	x0, [x8, #8]
     b24:	ldr	x2, [x19, #16]
     b28:	bl	0 <ctf_dynhash_insert>
     b2c:	tbnz	w0, #31, b50 <ctf_dtd_insert+0xb4>
     b30:	add	x0, x20, #0x240
     b34:	mov	x1, x19
     b38:	bl	0 <ctf_list_append>
     b3c:	mov	w0, wzr
     b40:	ldp	x20, x19, [sp, #32]
     b44:	ldr	x21, [sp, #16]
     b48:	ldp	x29, x30, [sp], #48
     b4c:	ret
     b50:	ldr	x0, [x20, #568]
     b54:	ldr	x1, [x19, #16]
     b58:	bl	0 <ctf_dynhash_remove>
     b5c:	mov	w0, #0xffffffff            	// #-1
     b60:	b	b40 <ctf_dtd_insert+0xa4>

0000000000000b64 <ctf_dtd_delete>:
     b64:	stp	x29, x30, [sp, #-64]!
     b68:	stp	x22, x21, [sp, #32]
     b6c:	stp	x20, x19, [sp, #48]
     b70:	ldr	x8, [x0]
     b74:	mov	x20, x0
     b78:	ldr	w0, [x1, #28]
     b7c:	str	x23, [sp, #16]
     b80:	ldr	x8, [x8]
     b84:	mov	x29, sp
     b88:	mov	x19, x1
     b8c:	blr	x8
     b90:	ldr	x8, [x20, #568]
     b94:	ldr	x1, [x19, #16]
     b98:	mov	w21, w0
     b9c:	mov	x0, x8
     ba0:	bl	0 <ctf_dynhash_remove>
     ba4:	sub	w8, w21, #0x6
     ba8:	cmp	w8, #0x3
     bac:	b.cs	be0 <ctf_dtd_delete+0x7c>  // b.hs, b.nlast
     bb0:	ldr	x22, [x19, #56]
     bb4:	cbnz	x22, bd0 <ctf_dtd_delete+0x6c>
     bb8:	b	bf0 <ctf_dtd_delete+0x8c>
     bbc:	ldr	x23, [x22, #8]
     bc0:	mov	x0, x22
     bc4:	bl	0 <free>
     bc8:	mov	x22, x23
     bcc:	cbz	x23, bf0 <ctf_dtd_delete+0x8c>
     bd0:	ldr	x0, [x22, #16]
     bd4:	cbz	x0, bbc <ctf_dtd_delete+0x58>
     bd8:	bl	0 <free>
     bdc:	b	bbc <ctf_dtd_delete+0x58>
     be0:	cmp	w21, #0x5
     be4:	b.ne	bf0 <ctf_dtd_delete+0x8c>  // b.any
     be8:	ldr	x0, [x19, #48]
     bec:	bl	0 <free>
     bf0:	mov	x22, x19
     bf4:	ldr	w1, [x22, #24]!
     bf8:	cbz	w1, c5c <ctf_dtd_delete+0xf8>
     bfc:	mov	x0, x20
     c00:	bl	0 <ctf_strraw>
     c04:	cbz	x0, c5c <ctf_dtd_delete+0xf8>
     c08:	mov	x23, x0
     c0c:	cmp	w21, #0x8
     c10:	b.eq	c2c <ctf_dtd_delete+0xc8>  // b.none
     c14:	cmp	w21, #0x7
     c18:	b.eq	c34 <ctf_dtd_delete+0xd0>  // b.none
     c1c:	cmp	w21, #0x6
     c20:	b.ne	c3c <ctf_dtd_delete+0xd8>  // b.any
     c24:	add	x8, x20, #0x98
     c28:	b	c40 <ctf_dtd_delete+0xdc>
     c2c:	add	x8, x20, #0xb8
     c30:	b	c40 <ctf_dtd_delete+0xdc>
     c34:	add	x8, x20, #0xa8
     c38:	b	c40 <ctf_dtd_delete+0xdc>
     c3c:	add	x8, x20, #0xc8
     c40:	ldr	x0, [x8, #8]
     c44:	mov	x1, x23
     c48:	bl	0 <ctf_dynhash_remove>
     c4c:	mov	x0, x20
     c50:	mov	x1, x23
     c54:	mov	x2, x22
     c58:	bl	0 <ctf_str_remove_ref>
     c5c:	add	x0, x20, #0x240
     c60:	mov	x1, x19
     c64:	bl	0 <ctf_list_delete>
     c68:	mov	x0, x19
     c6c:	ldp	x20, x19, [sp, #48]
     c70:	ldp	x22, x21, [sp, #32]
     c74:	ldr	x23, [sp, #16]
     c78:	ldp	x29, x30, [sp], #64
     c7c:	b	0 <free>

0000000000000c80 <ctf_dtd_lookup>:
     c80:	ldr	x0, [x0, #568]
     c84:	b	0 <ctf_dynhash_lookup>

0000000000000c88 <ctf_dynamic_type>:
     c88:	ldr	w8, [x0, #552]
     c8c:	tbz	w8, #1, cb8 <ctf_dynamic_type+0x30>
     c90:	tbz	w8, #0, ca4 <ctf_dynamic_type+0x1c>
     c94:	ldr	w8, [x0, #544]
     c98:	cmp	x8, x1
     c9c:	b.cc	ca4 <ctf_dynamic_type+0x1c>  // b.lo, b.ul, b.last
     ca0:	ldr	x0, [x0, #512]
     ca4:	ldr	w8, [x0, #544]
     ca8:	ldr	x9, [x0, #480]
     cac:	and	x8, x8, x1
     cb0:	cmp	x8, x9
     cb4:	b.ls	cc0 <ctf_dynamic_type+0x38>  // b.plast
     cb8:	mov	x0, xzr
     cbc:	ret
     cc0:	ldr	x0, [x0, #568]
     cc4:	b	0 <ctf_dynhash_lookup>

0000000000000cc8 <ctf_dvd_insert>:
     cc8:	stp	x29, x30, [sp, #-32]!
     ccc:	stp	x20, x19, [sp, #16]
     cd0:	mov	x19, x1
     cd4:	mov	x20, x0
     cd8:	ldr	x0, [x0, #592]
     cdc:	ldr	x1, [x1, #16]
     ce0:	mov	x2, x19
     ce4:	mov	x29, sp
     ce8:	bl	0 <ctf_dynhash_insert>
     cec:	tbnz	w0, #31, d04 <ctf_dvd_insert+0x3c>
     cf0:	add	x0, x20, #0x258
     cf4:	mov	x1, x19
     cf8:	bl	0 <ctf_list_append>
     cfc:	mov	w0, wzr
     d00:	b	d08 <ctf_dvd_insert+0x40>
     d04:	mov	w0, #0xffffffff            	// #-1
     d08:	ldp	x20, x19, [sp, #16]
     d0c:	ldp	x29, x30, [sp], #32
     d10:	ret

0000000000000d14 <ctf_dvd_delete>:
     d14:	stp	x29, x30, [sp, #-32]!
     d18:	stp	x20, x19, [sp, #16]
     d1c:	mov	x19, x1
     d20:	mov	x20, x0
     d24:	ldr	x0, [x0, #592]
     d28:	ldr	x1, [x1, #16]
     d2c:	mov	x29, sp
     d30:	bl	0 <ctf_dynhash_remove>
     d34:	ldr	x0, [x19, #16]
     d38:	bl	0 <free>
     d3c:	add	x0, x20, #0x258
     d40:	mov	x1, x19
     d44:	bl	0 <ctf_list_delete>
     d48:	mov	x0, x19
     d4c:	ldp	x20, x19, [sp, #16]
     d50:	ldp	x29, x30, [sp], #32
     d54:	b	0 <free>

0000000000000d58 <ctf_dvd_lookup>:
     d58:	ldr	x0, [x0, #592]
     d5c:	b	0 <ctf_dynhash_lookup>

0000000000000d60 <ctf_discard>:
     d60:	ldrb	w8, [x0, #552]
     d64:	tbnz	w8, #2, d70 <ctf_discard+0x10>
     d68:	mov	w0, wzr
     d6c:	ret
     d70:	ldr	x8, [x0, #632]
     d74:	ldr	x1, [x0, #616]
     d78:	add	x2, x8, #0x1
     d7c:	b	d80 <ctf_rollback>

0000000000000d80 <ctf_rollback>:
     d80:	sub	sp, sp, #0x70
     d84:	stp	x29, x30, [sp, #16]
     d88:	stp	x28, x27, [sp, #32]
     d8c:	stp	x26, x25, [sp, #48]
     d90:	stp	x24, x23, [sp, #64]
     d94:	stp	x22, x21, [sp, #80]
     d98:	stp	x20, x19, [sp, #96]
     d9c:	ldrb	w8, [x0, #552]
     da0:	mov	x19, x0
     da4:	add	x29, sp, #0x10
     da8:	tbnz	w8, #1, db4 <ctf_rollback+0x34>
     dac:	mov	w1, #0x40d                 	// #1037
     db0:	b	e9c <ctf_rollback+0x11c>
     db4:	ldr	x8, [x19, #632]
     db8:	mov	x20, x2
     dbc:	cmp	x8, x2
     dc0:	b.cs	e98 <ctf_rollback+0x118>  // b.hs, b.nlast
     dc4:	ldr	x22, [x19, #584]
     dc8:	mov	x21, x1
     dcc:	cbz	x22, ec4 <ctf_rollback+0x144>
     dd0:	add	x8, x19, #0xa8
     dd4:	add	x26, x19, #0xb8
     dd8:	str	x8, [sp, #8]
     ddc:	add	x28, x19, #0x98
     de0:	add	x8, x19, #0xc8
     de4:	str	x8, [sp]
     de8:	b	e28 <ctf_rollback+0xa8>
     dec:	ldr	x0, [x8, #8]
     df0:	mov	x1, x24
     df4:	bl	0 <ctf_dynhash_remove>
     df8:	mov	x0, x19
     dfc:	mov	x1, x24
     e00:	mov	x2, x23
     e04:	bl	0 <ctf_str_remove_ref>
     e08:	ldr	x0, [x19, #568]
     e0c:	ldr	x1, [x22, #16]
     e10:	bl	0 <ctf_dynhash_remove>
     e14:	mov	x0, x19
     e18:	mov	x1, x22
     e1c:	bl	b64 <ctf_dtd_delete>
     e20:	mov	x22, x27
     e24:	cbz	x27, ec4 <ctf_rollback+0x144>
     e28:	ldp	x27, x8, [x22, #8]
     e2c:	ldr	w9, [x19, #544]
     e30:	and	x8, x8, x9
     e34:	cmp	x8, x21
     e38:	b.ls	e20 <ctf_rollback+0xa0>  // b.plast
     e3c:	ldr	x8, [x19]
     e40:	ldr	w0, [x22, #28]
     e44:	ldr	x8, [x8]
     e48:	blr	x8
     e4c:	mov	x23, x22
     e50:	ldr	w1, [x23, #24]!
     e54:	cbz	w1, e08 <ctf_rollback+0x88>
     e58:	mov	w25, w0
     e5c:	mov	x0, x19
     e60:	bl	0 <ctf_strraw>
     e64:	cbz	x0, e08 <ctf_rollback+0x88>
     e68:	mov	x24, x0
     e6c:	cmp	w25, #0x6
     e70:	mov	x8, x28
     e74:	b.eq	dec <ctf_rollback+0x6c>  // b.none
     e78:	cmp	w25, #0x8
     e7c:	mov	x8, x26
     e80:	b.eq	dec <ctf_rollback+0x6c>  // b.none
     e84:	ldr	x8, [sp, #8]
     e88:	cmp	w25, #0x7
     e8c:	b.eq	dec <ctf_rollback+0x6c>  // b.none
     e90:	ldr	x8, [sp]
     e94:	b	dec <ctf_rollback+0x6c>
     e98:	mov	w1, #0x412                 	// #1042
     e9c:	mov	x0, x19
     ea0:	bl	0 <ctf_set_errno>
     ea4:	ldp	x20, x19, [sp, #96]
     ea8:	ldp	x22, x21, [sp, #80]
     eac:	ldp	x24, x23, [sp, #64]
     eb0:	ldp	x26, x25, [sp, #48]
     eb4:	ldp	x28, x27, [sp, #32]
     eb8:	ldp	x29, x30, [sp, #16]
     ebc:	add	sp, sp, #0x70
     ec0:	ret
     ec4:	ldr	x22, [x19, #608]
     ec8:	cbz	x22, f18 <ctf_rollback+0x198>
     ecc:	add	x23, x19, #0x258
     ed0:	b	edc <ctf_rollback+0x15c>
     ed4:	mov	x22, x24
     ed8:	cbz	x24, f18 <ctf_rollback+0x198>
     edc:	ldr	x8, [x22, #32]
     ee0:	ldr	x24, [x22, #8]
     ee4:	cmp	x8, x20
     ee8:	b.ls	ed4 <ctf_rollback+0x154>  // b.plast
     eec:	ldr	x0, [x19, #592]
     ef0:	ldr	x1, [x22, #16]
     ef4:	bl	0 <ctf_dynhash_remove>
     ef8:	ldr	x0, [x22, #16]
     efc:	bl	0 <free>
     f00:	mov	x0, x23
     f04:	mov	x1, x22
     f08:	bl	0 <ctf_list_delete>
     f0c:	mov	x0, x22
     f10:	bl	0 <free>
     f14:	b	ed4 <ctf_rollback+0x154>
     f18:	ldr	x8, [x19, #632]
     f1c:	mov	w0, wzr
     f20:	str	x21, [x19, #480]
     f24:	str	x20, [x19, #624]
     f28:	cmp	x20, x8
     f2c:	b.ne	ea4 <ctf_rollback+0x124>  // b.any
     f30:	ldr	w8, [x19, #552]
     f34:	and	w8, w8, #0xfffffffb
     f38:	str	w8, [x19, #552]
     f3c:	b	ea4 <ctf_rollback+0x124>

0000000000000f40 <ctf_snapshot>:
     f40:	ldr	x1, [x0, #624]
     f44:	ldr	x8, [x0, #480]
     f48:	add	x9, x1, #0x1
     f4c:	str	x9, [x0, #624]
     f50:	mov	x0, x8
     f54:	ret

0000000000000f58 <ctf_add_slice>:
     f58:	sub	sp, sp, #0x40
     f5c:	stp	x22, x21, [sp, #32]
     f60:	mov	x21, x0
     f64:	stp	x29, x30, [sp, #16]
     f68:	stp	x20, x19, [sp, #48]
     f6c:	add	x29, sp, #0x10
     f70:	str	x0, [sp]
     f74:	cbz	x3, fac <ctf_add_slice+0x54>
     f78:	ldr	w8, [x3, #8]
     f7c:	mov	x19, x3
     f80:	cmp	w8, #0xff
     f84:	b.hi	f94 <ctf_add_slice+0x3c>  // b.pmore
     f88:	ldr	w8, [x19, #4]
     f8c:	cmp	w8, #0x100
     f90:	b.cc	f9c <ctf_add_slice+0x44>  // b.lo, b.ul, b.last
     f94:	mov	w1, #0x416                 	// #1046
     f98:	b	fb0 <ctf_add_slice+0x58>
     f9c:	mov	w8, #0xffffffff            	// #-1
     fa0:	mov	x20, x2
     fa4:	cmp	x2, x8
     fa8:	b.cc	fcc <ctf_add_slice+0x74>  // b.lo, b.ul, b.last
     fac:	mov	w1, #0x16                  	// #22
     fb0:	mov	x0, x21
     fb4:	bl	0 <ctf_set_errno>
     fb8:	ldp	x20, x19, [sp, #48]
     fbc:	ldp	x22, x21, [sp, #32]
     fc0:	ldp	x29, x30, [sp, #16]
     fc4:	add	sp, sp, #0x40
     fc8:	ret
     fcc:	mov	w22, w1
     fd0:	mov	x0, sp
     fd4:	mov	x1, x20
     fd8:	bl	0 <ctf_lookup_by_id>
     fdc:	cbz	x0, 1090 <ctf_add_slice+0x138>
     fe0:	ldr	x0, [sp]
     fe4:	mov	x1, x20
     fe8:	bl	0 <ctf_type_kind_unsliced>
     fec:	cmp	w0, #0x8
     ff0:	b.hi	1098 <ctf_add_slice+0x140>  // b.pmore
     ff4:	mov	w8, #0x1                   	// #1
     ff8:	lsl	w8, w8, w0
     ffc:	mov	w9, #0x106                 	// #262
    1000:	tst	w8, w9
    1004:	b.eq	1098 <ctf_add_slice+0x140>  // b.none
    1008:	add	x4, sp, #0x8
    100c:	mov	w3, #0xe                   	// #14
    1010:	mov	x0, x21
    1014:	mov	w1, w22
    1018:	mov	x2, xzr
    101c:	bl	10a0 <ctf_add_generic>
    1020:	cmn	x0, #0x1
    1024:	b.eq	fb8 <ctf_add_slice+0x60>  // b.none
    1028:	ldr	x8, [sp, #8]
    102c:	cmp	w22, #0x0
    1030:	mov	w9, #0x3a000000            	// #973078528
    1034:	mov	w10, #0x38000000            	// #939524096
    1038:	csel	w9, w10, w9, eq  // eq = none
    103c:	str	w9, [x8, #28]
    1040:	ldr	w9, [x19, #8]
    1044:	str	w20, [x8, #48]
    1048:	neg	w9, w9
    104c:	and	w9, w9, #0xfffffff8
    1050:	neg	w9, w9
    1054:	lsr	w9, w9, #3
    1058:	sub	x9, x9, #0x1
    105c:	orr	x9, x9, x9, lsr #1
    1060:	orr	x9, x9, x9, lsr #2
    1064:	orr	x9, x9, x9, lsr #4
    1068:	orr	x9, x9, x9, lsr #8
    106c:	lsr	x10, x9, #16
    1070:	orr	w9, w10, w9
    1074:	add	w9, w9, #0x1
    1078:	str	w9, [x8, #32]
    107c:	ldr	w9, [x19, #8]
    1080:	strh	w9, [x8, #54]
    1084:	ldr	w9, [x19, #4]
    1088:	strh	w9, [x8, #52]
    108c:	b	fb8 <ctf_add_slice+0x60>
    1090:	mov	x0, #0xffffffffffffffff    	// #-1
    1094:	b	fb8 <ctf_add_slice+0x60>
    1098:	mov	w1, #0x3fe                 	// #1022
    109c:	b	fb0 <ctf_add_slice+0x58>

00000000000010a0 <ctf_add_generic>:
    10a0:	stp	x29, x30, [sp, #-64]!
    10a4:	stp	x20, x19, [sp, #48]
    10a8:	cmp	w1, #0x2
    10ac:	mov	x19, x0
    10b0:	stp	x24, x23, [sp, #16]
    10b4:	stp	x22, x21, [sp, #32]
    10b8:	mov	x29, sp
    10bc:	b.cc	10c8 <ctf_add_generic+0x28>  // b.lo, b.ul, b.last
    10c0:	mov	w1, #0x16                  	// #22
    10c4:	b	1104 <ctf_add_generic+0x64>
    10c8:	ldrb	w8, [x19, #552]
    10cc:	tbnz	w8, #1, 10d8 <ctf_add_generic+0x38>
    10d0:	mov	w1, #0x40d                 	// #1037
    10d4:	b	1104 <ctf_add_generic+0x64>
    10d8:	ldr	w8, [x19, #544]
    10dc:	ldr	x9, [x19, #480]
    10e0:	mov	w10, #0xfffffffe            	// #-2
    10e4:	add	w8, w8, #0x1
    10e8:	orr	x8, x9, x8
    10ec:	cmp	x8, x10
    10f0:	b.cs	1100 <ctf_add_generic+0x60>  // b.hs, b.nlast
    10f4:	mov	w10, #0x7ffffffe            	// #2147483646
    10f8:	cmp	x8, x10
    10fc:	b.ne	111c <ctf_add_generic+0x7c>  // b.any
    1100:	mov	w1, #0x40f                 	// #1039
    1104:	mov	x0, x19
    1108:	ldp	x20, x19, [sp, #48]
    110c:	ldp	x22, x21, [sp, #32]
    1110:	ldp	x24, x23, [sp, #16]
    1114:	ldp	x29, x30, [sp], #64
    1118:	b	0 <ctf_set_errno>
    111c:	ldp	x0, x8, [x19, #448]
    1120:	mov	x20, x4
    1124:	mov	w21, w3
    1128:	mov	x22, x2
    112c:	cbz	x0, 1150 <ctf_add_generic+0xb0>
    1130:	add	x9, x9, #0x2
    1134:	cmp	x9, x8
    1138:	b.ls	119c <ctf_add_generic+0xfc>  // b.plast
    113c:	ucvtf	d0, x8
    1140:	fmov	d1, #1.250000000000000000e+00
    1144:	fmul	d0, d0, d1
    1148:	fcvtzu	x23, d0
    114c:	b	1154 <ctf_add_generic+0xb4>
    1150:	mov	w23, #0x400                 	// #1024
    1154:	cmp	x23, x8
    1158:	b.eq	119c <ctf_add_generic+0xfc>  // b.none
    115c:	lsl	x1, x23, #2
    1160:	bl	0 <realloc>
    1164:	cbz	x0, 118c <ctf_add_generic+0xec>
    1168:	ldr	x8, [x19, #456]
    116c:	str	x0, [x19, #448]
    1170:	mov	w1, wzr
    1174:	add	x0, x0, x8, lsl #2
    1178:	sub	x8, x23, x8
    117c:	lsl	x2, x8, #2
    1180:	bl	0 <memset>
    1184:	str	x23, [x19, #456]
    1188:	b	119c <ctf_add_generic+0xfc>
    118c:	mov	w1, #0xc                   	// #12
    1190:	mov	x0, x19
    1194:	bl	0 <ctf_set_errno>
    1198:	tbnz	w0, #31, 124c <ctf_add_generic+0x1ac>
    119c:	mov	w0, #0x48                  	// #72
    11a0:	bl	0 <malloc>
    11a4:	cbz	x0, 123c <ctf_add_generic+0x19c>
    11a8:	ldr	x8, [x19, #480]
    11ac:	ldrb	w9, [x19, #552]
    11b0:	mov	x23, x0
    11b4:	add	x24, x8, #0x1
    11b8:	str	x24, [x19, #480]
    11bc:	tbz	w9, #0, 11cc <ctf_add_generic+0x12c>
    11c0:	ldr	w8, [x19, #544]
    11c4:	add	w8, w8, #0x1
    11c8:	orr	x24, x24, x8
    11cc:	movi	v0.2d, #0x0
    11d0:	add	x2, x23, #0x18
    11d4:	mov	x0, x19
    11d8:	mov	x1, x22
    11dc:	str	xzr, [x23, #64]
    11e0:	stp	q0, q0, [x23, #32]
    11e4:	stp	q0, q0, [x23]
    11e8:	bl	0 <ctf_str_add_ref>
    11ec:	str	w0, [x23, #24]
    11f0:	str	x24, [x23, #16]
    11f4:	cbz	x22, 1214 <ctf_add_generic+0x174>
    11f8:	cbnz	w0, 1214 <ctf_add_generic+0x174>
    11fc:	ldrb	w8, [x22]
    1200:	cbz	w8, 1214 <ctf_add_generic+0x174>
    1204:	mov	x0, x23
    1208:	bl	0 <free>
    120c:	mov	w1, #0xb                   	// #11
    1210:	b	1104 <ctf_add_generic+0x64>
    1214:	mov	x0, x19
    1218:	mov	x1, x23
    121c:	mov	w2, w21
    1220:	bl	a9c <ctf_dtd_insert>
    1224:	tbnz	w0, #31, 1244 <ctf_add_generic+0x1a4>
    1228:	ldr	w8, [x19, #552]
    122c:	orr	w8, w8, #0x4
    1230:	str	w8, [x19, #552]
    1234:	str	x23, [x20]
    1238:	b	1250 <ctf_add_generic+0x1b0>
    123c:	mov	w1, #0xb                   	// #11
    1240:	b	1104 <ctf_add_generic+0x64>
    1244:	mov	x0, x23
    1248:	bl	0 <free>
    124c:	mov	x24, #0xffffffffffffffff    	// #-1
    1250:	mov	x0, x24
    1254:	ldp	x20, x19, [sp, #48]
    1258:	ldp	x22, x21, [sp, #32]
    125c:	ldp	x24, x23, [sp, #16]
    1260:	ldp	x29, x30, [sp], #64
    1264:	ret

0000000000001268 <ctf_add_integer>:
    1268:	sub	sp, sp, #0x30
    126c:	stp	x29, x30, [sp, #16]
    1270:	stp	x20, x19, [sp, #32]
    1274:	add	x29, sp, #0x10
    1278:	cbz	x3, 12fc <ctf_add_integer+0x94>
    127c:	mov	x19, x3
    1280:	add	x4, sp, #0x8
    1284:	mov	w3, #0x1                   	// #1
    1288:	mov	w20, w1
    128c:	bl	10a0 <ctf_add_generic>
    1290:	cmn	x0, #0x1
    1294:	b.eq	1304 <ctf_add_integer+0x9c>  // b.none
    1298:	ldr	x8, [sp, #8]
    129c:	cmp	w20, #0x0
    12a0:	mov	w9, #0x6000000             	// #100663296
    12a4:	mov	w10, #0x4000000             	// #67108864
    12a8:	csel	w9, w10, w9, eq  // eq = none
    12ac:	str	w9, [x8, #28]
    12b0:	ldr	w9, [x19, #8]
    12b4:	neg	w9, w9
    12b8:	and	w9, w9, #0xfffffff8
    12bc:	neg	w9, w9
    12c0:	lsr	w9, w9, #3
    12c4:	sub	x9, x9, #0x1
    12c8:	orr	x9, x9, x9, lsr #1
    12cc:	orr	x9, x9, x9, lsr #2
    12d0:	orr	x9, x9, x9, lsr #4
    12d4:	orr	x9, x9, x9, lsr #8
    12d8:	lsr	x10, x9, #16
    12dc:	orr	w9, w10, w9
    12e0:	add	w9, w9, #0x1
    12e4:	str	w9, [x8, #32]
    12e8:	ldr	w9, [x19, #8]
    12ec:	ldr	x10, [x19]
    12f0:	str	w9, [x8, #56]
    12f4:	str	x10, [x8, #48]
    12f8:	b	1304 <ctf_add_integer+0x9c>
    12fc:	mov	w1, #0x16                  	// #22
    1300:	bl	0 <ctf_set_errno>
    1304:	ldp	x20, x19, [sp, #32]
    1308:	ldp	x29, x30, [sp, #16]
    130c:	add	sp, sp, #0x30
    1310:	ret

0000000000001314 <ctf_add_float>:
    1314:	sub	sp, sp, #0x30
    1318:	stp	x29, x30, [sp, #16]
    131c:	stp	x20, x19, [sp, #32]
    1320:	add	x29, sp, #0x10
    1324:	cbz	x3, 13a8 <ctf_add_float+0x94>
    1328:	mov	x19, x3
    132c:	add	x4, sp, #0x8
    1330:	mov	w3, #0x2                   	// #2
    1334:	mov	w20, w1
    1338:	bl	10a0 <ctf_add_generic>
    133c:	cmn	x0, #0x1
    1340:	b.eq	13b0 <ctf_add_float+0x9c>  // b.none
    1344:	ldr	x8, [sp, #8]
    1348:	cmp	w20, #0x0
    134c:	mov	w9, #0xa000000             	// #167772160
    1350:	mov	w10, #0x8000000             	// #134217728
    1354:	csel	w9, w10, w9, eq  // eq = none
    1358:	str	w9, [x8, #28]
    135c:	ldr	w9, [x19, #8]
    1360:	neg	w9, w9
    1364:	and	w9, w9, #0xfffffff8
    1368:	neg	w9, w9
    136c:	lsr	w9, w9, #3
    1370:	sub	x9, x9, #0x1
    1374:	orr	x9, x9, x9, lsr #1
    1378:	orr	x9, x9, x9, lsr #2
    137c:	orr	x9, x9, x9, lsr #4
    1380:	orr	x9, x9, x9, lsr #8
    1384:	lsr	x10, x9, #16
    1388:	orr	w9, w10, w9
    138c:	add	w9, w9, #0x1
    1390:	str	w9, [x8, #32]
    1394:	ldr	w9, [x19, #8]
    1398:	ldr	x10, [x19]
    139c:	str	w9, [x8, #56]
    13a0:	str	x10, [x8, #48]
    13a4:	b	13b0 <ctf_add_float+0x9c>
    13a8:	mov	w1, #0x16                  	// #22
    13ac:	bl	0 <ctf_set_errno>
    13b0:	ldp	x20, x19, [sp, #32]
    13b4:	ldp	x29, x30, [sp, #16]
    13b8:	add	sp, sp, #0x30
    13bc:	ret

00000000000013c0 <ctf_add_pointer>:
    13c0:	mov	w3, #0x3                   	// #3
    13c4:	b	13c8 <ctf_add_reftype>

00000000000013c8 <ctf_add_reftype>:
    13c8:	sub	sp, sp, #0x50
    13cc:	mov	w8, #0xffffffff            	// #-1
    13d0:	stp	x20, x19, [sp, #64]
    13d4:	mov	x20, x0
    13d8:	cmp	x2, x8
    13dc:	stp	x29, x30, [sp, #16]
    13e0:	stp	x24, x23, [sp, #32]
    13e4:	stp	x22, x21, [sp, #48]
    13e8:	add	x29, sp, #0x10
    13ec:	str	x0, [sp]
    13f0:	b.cc	1408 <ctf_add_reftype+0x40>  // b.lo, b.ul, b.last
    13f4:	mov	w1, #0x16                  	// #22
    13f8:	mov	x0, x20
    13fc:	bl	0 <ctf_set_errno>
    1400:	mov	x19, x0
    1404:	b	1500 <ctf_add_reftype+0x138>
    1408:	ldr	w24, [x20, #552]
    140c:	mov	w23, w1
    1410:	mov	x0, sp
    1414:	mov	x1, x2
    1418:	mov	w22, w3
    141c:	mov	x21, x2
    1420:	bl	0 <ctf_lookup_by_id>
    1424:	cbz	x0, 14fc <ctf_add_reftype+0x134>
    1428:	add	x4, sp, #0x8
    142c:	mov	x0, x20
    1430:	mov	w1, w23
    1434:	mov	x2, xzr
    1438:	mov	w3, w22
    143c:	bl	10a0 <ctf_add_generic>
    1440:	mov	x19, x0
    1444:	cmn	x0, #0x1
    1448:	b.eq	1500 <ctf_add_reftype+0x138>  // b.none
    144c:	cmp	w23, #0x0
    1450:	ldr	x23, [sp, #8]
    1454:	cset	w8, ne  // ne = any
    1458:	lsl	w8, w8, #25
    145c:	cmp	w22, #0x3
    1460:	bfi	w8, w22, #26, #6
    1464:	stp	w8, w21, [x23, #28]
    1468:	b.ne	1500 <ctf_add_reftype+0x138>  // b.any
    146c:	ldr	w8, [x20, #544]
    1470:	and	w10, w24, #0x1
    1474:	cmp	x8, x21
    1478:	cset	w9, cs  // cs = hs, nlast
    147c:	cmp	w10, w9
    1480:	b.eq	1500 <ctf_add_reftype+0x138>  // b.none
    1484:	ldr	x10, [x20, #480]
    1488:	mov	w9, w21
    148c:	and	x9, x8, x9
    1490:	cmp	x10, x9
    1494:	b.ls	1500 <ctf_add_reftype+0x138>  // b.plast
    1498:	ldr	x10, [x20, #448]
    149c:	and	w21, w8, w19
    14a0:	str	w21, [x10, x9, lsl #2]
    14a4:	ldr	x8, [sp]
    14a8:	cmp	x8, x20
    14ac:	b.ne	1500 <ctf_add_reftype+0x138>  // b.any
    14b0:	ldr	x8, [x20]
    14b4:	ldp	w0, w24, [x23, #28]
    14b8:	ldr	w22, [x20, #544]
    14bc:	ldr	x8, [x8]
    14c0:	blr	x8
    14c4:	cmp	w0, #0xa
    14c8:	b.ne	1500 <ctf_add_reftype+0x138>  // b.any
    14cc:	ldr	w1, [x23, #24]
    14d0:	mov	x0, x20
    14d4:	bl	0 <ctf_strptr>
    14d8:	ldrb	w8, [x0]
    14dc:	cbnz	w8, 1500 <ctf_add_reftype+0x138>
    14e0:	ldr	x9, [x20, #480]
    14e4:	and	w8, w22, w24
    14e8:	cmp	x9, x8
    14ec:	b.ls	1500 <ctf_add_reftype+0x138>  // b.plast
    14f0:	ldr	x9, [x20, #448]
    14f4:	str	w21, [x9, x8, lsl #2]
    14f8:	b	1500 <ctf_add_reftype+0x138>
    14fc:	mov	x19, #0xffffffffffffffff    	// #-1
    1500:	mov	x0, x19
    1504:	ldp	x20, x19, [sp, #64]
    1508:	ldp	x22, x21, [sp, #48]
    150c:	ldp	x24, x23, [sp, #32]
    1510:	ldp	x29, x30, [sp, #16]
    1514:	add	sp, sp, #0x50
    1518:	ret

000000000000151c <ctf_add_array>:
    151c:	sub	sp, sp, #0x40
    1520:	str	x21, [sp, #32]
    1524:	mov	x21, x0
    1528:	stp	x29, x30, [sp, #16]
    152c:	stp	x20, x19, [sp, #48]
    1530:	add	x29, sp, #0x10
    1534:	str	x0, [sp, #8]
    1538:	cbz	x2, 15b4 <ctf_add_array+0x98>
    153c:	mov	w20, w1
    1540:	ldr	x1, [x2]
    1544:	add	x0, sp, #0x8
    1548:	mov	x19, x2
    154c:	bl	0 <ctf_lookup_by_id>
    1550:	cbz	x0, 15c4 <ctf_add_array+0xa8>
    1554:	str	x21, [sp, #8]
    1558:	ldr	x1, [x19, #8]
    155c:	add	x0, sp, #0x8
    1560:	bl	0 <ctf_lookup_by_id>
    1564:	cbz	x0, 15c4 <ctf_add_array+0xa8>
    1568:	add	x4, x29, #0x18
    156c:	mov	w3, #0x4                   	// #4
    1570:	mov	x0, x21
    1574:	mov	w1, w20
    1578:	mov	x2, xzr
    157c:	bl	10a0 <ctf_add_generic>
    1580:	cmn	x0, #0x1
    1584:	b.eq	15c8 <ctf_add_array+0xac>  // b.none
    1588:	ldr	x8, [x29, #24]
    158c:	cmp	w20, #0x0
    1590:	mov	w9, #0x12000000            	// #301989888
    1594:	mov	w10, #0x10000000            	// #268435456
    1598:	csel	w9, w10, w9, eq  // eq = none
    159c:	stp	w9, wzr, [x8, #28]
    15a0:	ldr	x9, [x19, #16]
    15a4:	ldr	q0, [x19]
    15a8:	str	x9, [x8, #64]
    15ac:	str	q0, [x8, #48]
    15b0:	b	15c8 <ctf_add_array+0xac>
    15b4:	mov	w1, #0x16                  	// #22
    15b8:	mov	x0, x21
    15bc:	bl	0 <ctf_set_errno>
    15c0:	b	15c8 <ctf_add_array+0xac>
    15c4:	mov	x0, #0xffffffffffffffff    	// #-1
    15c8:	ldp	x20, x19, [sp, #48]
    15cc:	ldr	x21, [sp, #32]
    15d0:	ldp	x29, x30, [sp, #16]
    15d4:	add	sp, sp, #0x40
    15d8:	ret

00000000000015dc <ctf_set_array>:
    15dc:	stp	x29, x30, [sp, #-48]!
    15e0:	stp	x20, x19, [sp, #32]
    15e4:	mov	x19, x0
    15e8:	ldr	x0, [x0, #568]
    15ec:	str	x21, [sp, #16]
    15f0:	mov	x29, sp
    15f4:	mov	x20, x2
    15f8:	bl	0 <ctf_dynhash_lookup>
    15fc:	ldrb	w8, [x19, #552]
    1600:	tbnz	w8, #1, 160c <ctf_set_array+0x30>
    1604:	mov	w1, #0x40d                 	// #1037
    1608:	b	1654 <ctf_set_array+0x78>
    160c:	mov	x21, x0
    1610:	cbz	x0, 1650 <ctf_set_array+0x74>
    1614:	ldr	x8, [x19]
    1618:	ldr	w0, [x21, #28]
    161c:	ldr	x8, [x8]
    1620:	blr	x8
    1624:	cmp	w0, #0x4
    1628:	b.ne	1650 <ctf_set_array+0x74>  // b.any
    162c:	ldr	w8, [x19, #552]
    1630:	mov	w0, wzr
    1634:	orr	w8, w8, #0x4
    1638:	str	w8, [x19, #552]
    163c:	ldr	x8, [x20, #16]
    1640:	ldr	q0, [x20]
    1644:	str	x8, [x21, #64]
    1648:	str	q0, [x21, #48]
    164c:	b	165c <ctf_set_array+0x80>
    1650:	mov	w1, #0x3fa                 	// #1018
    1654:	mov	x0, x19
    1658:	bl	0 <ctf_set_errno>
    165c:	ldp	x20, x19, [sp, #32]
    1660:	ldr	x21, [sp, #16]
    1664:	ldp	x29, x30, [sp], #48
    1668:	ret

000000000000166c <ctf_add_function>:
    166c:	sub	sp, sp, #0x50
    1670:	stp	x22, x21, [sp, #48]
    1674:	mov	x21, x0
    1678:	stp	x29, x30, [sp, #16]
    167c:	stp	x24, x23, [sp, #32]
    1680:	stp	x20, x19, [sp, #64]
    1684:	add	x29, sp, #0x10
    1688:	str	x0, [sp]
    168c:	cbz	x2, 16b4 <ctf_add_function+0x48>
    1690:	ldr	w8, [x2, #12]
    1694:	mov	x19, x2
    1698:	cmp	w8, #0x1
    169c:	b.hi	16b4 <ctf_add_function+0x48>  // b.pmore
    16a0:	ldr	w9, [x19, #8]
    16a4:	mov	x20, x3
    16a8:	mov	w22, w1
    16ac:	cbnz	x3, 16e0 <ctf_add_function+0x74>
    16b0:	cbz	w9, 16e0 <ctf_add_function+0x74>
    16b4:	mov	w1, #0x16                  	// #22
    16b8:	mov	x0, x21
    16bc:	bl	0 <ctf_set_errno>
    16c0:	mov	x21, x0
    16c4:	mov	x0, x21
    16c8:	ldp	x20, x19, [sp, #64]
    16cc:	ldp	x22, x21, [sp, #48]
    16d0:	ldp	x24, x23, [sp, #32]
    16d4:	ldp	x29, x30, [sp, #16]
    16d8:	add	sp, sp, #0x50
    16dc:	ret
    16e0:	ldr	x1, [x19]
    16e4:	cmp	w8, #0x0
    16e8:	mov	x0, sp
    16ec:	cinc	w24, w9, ne  // ne = any
    16f0:	bl	0 <ctf_lookup_by_id>
    16f4:	cbz	x0, 1738 <ctf_add_function+0xcc>
    16f8:	ldr	w8, [x19, #8]
    16fc:	cbz	w8, 1728 <ctf_add_function+0xbc>
    1700:	mov	x23, xzr
    1704:	str	x21, [sp]
    1708:	ldr	x1, [x20, x23, lsl #3]
    170c:	mov	x0, sp
    1710:	bl	0 <ctf_lookup_by_id>
    1714:	cbz	x0, 1738 <ctf_add_function+0xcc>
    1718:	ldr	w8, [x19, #8]
    171c:	add	x23, x23, #0x1
    1720:	cmp	x23, x8
    1724:	b.cc	1704 <ctf_add_function+0x98>  // b.lo, b.ul, b.last
    1728:	lsr	w8, w24, #24
    172c:	cbz	w8, 1740 <ctf_add_function+0xd4>
    1730:	mov	w1, #0x4b                  	// #75
    1734:	b	16b8 <ctf_add_function+0x4c>
    1738:	mov	x21, #0xffffffffffffffff    	// #-1
    173c:	b	16c4 <ctf_add_function+0x58>
    1740:	cbz	w24, 1760 <ctf_add_function+0xf4>
    1744:	mov	w8, w24
    1748:	lsl	x0, x8, #3
    174c:	bl	0 <malloc>
    1750:	mov	x23, x0
    1754:	cbnz	x0, 1764 <ctf_add_function+0xf8>
    1758:	mov	w1, #0xb                   	// #11
    175c:	b	16b8 <ctf_add_function+0x4c>
    1760:	mov	x23, xzr
    1764:	add	x4, sp, #0x8
    1768:	mov	w3, #0x5                   	// #5
    176c:	mov	x0, x21
    1770:	mov	w1, w22
    1774:	mov	x2, xzr
    1778:	bl	10a0 <ctf_add_generic>
    177c:	mov	x21, x0
    1780:	cmn	x0, #0x1
    1784:	b.eq	17d8 <ctf_add_function+0x16c>  // b.none
    1788:	cmp	w22, #0x0
    178c:	ldr	x22, [sp, #8]
    1790:	mov	w8, #0x16000000            	// #369098752
    1794:	mov	w9, #0x14000000            	// #335544320
    1798:	csel	w8, w9, w8, eq  // eq = none
    179c:	orr	w8, w24, w8
    17a0:	str	w8, [x22, #28]
    17a4:	ldr	x8, [x19]
    17a8:	mov	x0, x23
    17ac:	mov	x1, x20
    17b0:	str	w8, [x22, #32]
    17b4:	ldr	w8, [x19, #8]
    17b8:	lsl	x2, x8, #3
    17bc:	bl	0 <memcpy>
    17c0:	ldrb	w8, [x19, #12]
    17c4:	tbz	w8, #0, 17d0 <ctf_add_function+0x164>
    17c8:	sub	w8, w24, #0x1
    17cc:	str	xzr, [x23, w8, uxtw #3]
    17d0:	str	x23, [x22, #48]
    17d4:	b	16c4 <ctf_add_function+0x58>
    17d8:	mov	x0, x23
    17dc:	bl	0 <free>
    17e0:	b	16c4 <ctf_add_function+0x58>

00000000000017e4 <ctf_add_struct_sized>:
    17e4:	stp	x29, x30, [sp, #-64]!
    17e8:	str	x23, [sp, #16]
    17ec:	stp	x22, x21, [sp, #32]
    17f0:	stp	x20, x19, [sp, #48]
    17f4:	mov	x19, x3
    17f8:	mov	x22, x2
    17fc:	mov	w21, w1
    1800:	mov	x23, x0
    1804:	mov	x29, sp
    1808:	cbz	x2, 184c <ctf_add_struct_sized+0x68>
    180c:	mov	w1, #0x6                   	// #6
    1810:	mov	x0, x23
    1814:	mov	x2, x22
    1818:	bl	0 <ctf_lookup_by_rawname>
    181c:	cbz	x0, 184c <ctf_add_struct_sized+0x68>
    1820:	mov	x20, x0
    1824:	mov	x0, x23
    1828:	mov	x1, x20
    182c:	bl	0 <ctf_type_kind>
    1830:	cmp	w0, #0x9
    1834:	b.ne	184c <ctf_add_struct_sized+0x68>  // b.any
    1838:	ldr	x0, [x23, #568]
    183c:	mov	x1, x20
    1840:	bl	0 <ctf_dynhash_lookup>
    1844:	str	x0, [x29, #24]
    1848:	b	1874 <ctf_add_struct_sized+0x90>
    184c:	add	x4, x29, #0x18
    1850:	mov	w3, #0x6                   	// #6
    1854:	mov	x0, x23
    1858:	mov	w1, w21
    185c:	mov	x2, x22
    1860:	bl	10a0 <ctf_add_generic>
    1864:	mov	x20, x0
    1868:	cmn	x0, #0x1
    186c:	b.eq	18a8 <ctf_add_struct_sized+0xc4>  // b.none
    1870:	ldr	x0, [x29, #24]
    1874:	cmp	w21, #0x0
    1878:	mov	w9, #0x1a000000            	// #436207616
    187c:	mov	w10, #0x18000000            	// #402653184
    1880:	mov	w8, #0xffffffff            	// #-1
    1884:	csel	w9, w10, w9, eq  // eq = none
    1888:	cmp	x19, x8
    188c:	str	w9, [x0, #28]
    1890:	b.cc	18a4 <ctf_add_struct_sized+0xc0>  // b.lo, b.ul, b.last
    1894:	lsr	x9, x19, #32
    1898:	stp	w8, w9, [x0, #32]
    189c:	str	w19, [x0, #40]
    18a0:	b	18a8 <ctf_add_struct_sized+0xc4>
    18a4:	str	w19, [x0, #32]
    18a8:	mov	x0, x20
    18ac:	ldp	x20, x19, [sp, #48]
    18b0:	ldp	x22, x21, [sp, #32]
    18b4:	ldr	x23, [sp, #16]
    18b8:	ldp	x29, x30, [sp], #64
    18bc:	ret

00000000000018c0 <ctf_add_struct>:
    18c0:	sub	sp, sp, #0x40
    18c4:	stp	x22, x21, [sp, #32]
    18c8:	stp	x20, x19, [sp, #48]
    18cc:	mov	x21, x2
    18d0:	mov	w19, w1
    18d4:	mov	x22, x0
    18d8:	stp	x29, x30, [sp, #16]
    18dc:	add	x29, sp, #0x10
    18e0:	cbz	x2, 1924 <ctf_add_struct+0x64>
    18e4:	mov	w1, #0x6                   	// #6
    18e8:	mov	x0, x22
    18ec:	mov	x2, x21
    18f0:	bl	0 <ctf_lookup_by_rawname>
    18f4:	cbz	x0, 1924 <ctf_add_struct+0x64>
    18f8:	mov	x20, x0
    18fc:	mov	x0, x22
    1900:	mov	x1, x20
    1904:	bl	0 <ctf_type_kind>
    1908:	cmp	w0, #0x9
    190c:	b.ne	1924 <ctf_add_struct+0x64>  // b.any
    1910:	ldr	x0, [x22, #568]
    1914:	mov	x1, x20
    1918:	bl	0 <ctf_dynhash_lookup>
    191c:	str	x0, [sp, #8]
    1920:	b	194c <ctf_add_struct+0x8c>
    1924:	add	x4, sp, #0x8
    1928:	mov	w3, #0x6                   	// #6
    192c:	mov	x0, x22
    1930:	mov	w1, w19
    1934:	mov	x2, x21
    1938:	bl	10a0 <ctf_add_generic>
    193c:	mov	x20, x0
    1940:	cmn	x0, #0x1
    1944:	b.eq	1960 <ctf_add_struct+0xa0>  // b.none
    1948:	ldr	x0, [sp, #8]
    194c:	cmp	w19, #0x0
    1950:	mov	w8, #0x1a000000            	// #436207616
    1954:	mov	w9, #0x18000000            	// #402653184
    1958:	csel	w8, w9, w8, eq  // eq = none
    195c:	stp	w8, wzr, [x0, #28]
    1960:	mov	x0, x20
    1964:	ldp	x20, x19, [sp, #48]
    1968:	ldp	x22, x21, [sp, #32]
    196c:	ldp	x29, x30, [sp, #16]
    1970:	add	sp, sp, #0x40
    1974:	ret

0000000000001978 <ctf_add_union_sized>:
    1978:	stp	x29, x30, [sp, #-64]!
    197c:	str	x23, [sp, #16]
    1980:	stp	x22, x21, [sp, #32]
    1984:	stp	x20, x19, [sp, #48]
    1988:	mov	x19, x3
    198c:	mov	x22, x2
    1990:	mov	w21, w1
    1994:	mov	x23, x0
    1998:	mov	x29, sp
    199c:	cbz	x2, 19e0 <ctf_add_union_sized+0x68>
    19a0:	mov	w1, #0x7                   	// #7
    19a4:	mov	x0, x23
    19a8:	mov	x2, x22
    19ac:	bl	0 <ctf_lookup_by_rawname>
    19b0:	cbz	x0, 19e0 <ctf_add_union_sized+0x68>
    19b4:	mov	x20, x0
    19b8:	mov	x0, x23
    19bc:	mov	x1, x20
    19c0:	bl	0 <ctf_type_kind>
    19c4:	cmp	w0, #0x9
    19c8:	b.ne	19e0 <ctf_add_union_sized+0x68>  // b.any
    19cc:	ldr	x0, [x23, #568]
    19d0:	mov	x1, x20
    19d4:	bl	0 <ctf_dynhash_lookup>
    19d8:	str	x0, [x29, #24]
    19dc:	b	1a08 <ctf_add_union_sized+0x90>
    19e0:	add	x4, x29, #0x18
    19e4:	mov	w3, #0x7                   	// #7
    19e8:	mov	x0, x23
    19ec:	mov	w1, w21
    19f0:	mov	x2, x22
    19f4:	bl	10a0 <ctf_add_generic>
    19f8:	mov	x20, x0
    19fc:	cmn	x0, #0x1
    1a00:	b.eq	1a3c <ctf_add_union_sized+0xc4>  // b.none
    1a04:	ldr	x0, [x29, #24]
    1a08:	cmp	w21, #0x0
    1a0c:	mov	w9, #0x1e000000            	// #503316480
    1a10:	mov	w10, #0x1c000000            	// #469762048
    1a14:	mov	w8, #0xffffffff            	// #-1
    1a18:	csel	w9, w10, w9, eq  // eq = none
    1a1c:	cmp	x19, x8
    1a20:	str	w9, [x0, #28]
    1a24:	b.cc	1a38 <ctf_add_union_sized+0xc0>  // b.lo, b.ul, b.last
    1a28:	lsr	x9, x19, #32
    1a2c:	stp	w8, w9, [x0, #32]
    1a30:	str	w19, [x0, #40]
    1a34:	b	1a3c <ctf_add_union_sized+0xc4>
    1a38:	str	w19, [x0, #32]
    1a3c:	mov	x0, x20
    1a40:	ldp	x20, x19, [sp, #48]
    1a44:	ldp	x22, x21, [sp, #32]
    1a48:	ldr	x23, [sp, #16]
    1a4c:	ldp	x29, x30, [sp], #64
    1a50:	ret

0000000000001a54 <ctf_add_union>:
    1a54:	sub	sp, sp, #0x40
    1a58:	stp	x22, x21, [sp, #32]
    1a5c:	stp	x20, x19, [sp, #48]
    1a60:	mov	x21, x2
    1a64:	mov	w19, w1
    1a68:	mov	x22, x0
    1a6c:	stp	x29, x30, [sp, #16]
    1a70:	add	x29, sp, #0x10
    1a74:	cbz	x2, 1ab8 <ctf_add_union+0x64>
    1a78:	mov	w1, #0x7                   	// #7
    1a7c:	mov	x0, x22
    1a80:	mov	x2, x21
    1a84:	bl	0 <ctf_lookup_by_rawname>
    1a88:	cbz	x0, 1ab8 <ctf_add_union+0x64>
    1a8c:	mov	x20, x0
    1a90:	mov	x0, x22
    1a94:	mov	x1, x20
    1a98:	bl	0 <ctf_type_kind>
    1a9c:	cmp	w0, #0x9
    1aa0:	b.ne	1ab8 <ctf_add_union+0x64>  // b.any
    1aa4:	ldr	x0, [x22, #568]
    1aa8:	mov	x1, x20
    1aac:	bl	0 <ctf_dynhash_lookup>
    1ab0:	str	x0, [sp, #8]
    1ab4:	b	1ae0 <ctf_add_union+0x8c>
    1ab8:	add	x4, sp, #0x8
    1abc:	mov	w3, #0x7                   	// #7
    1ac0:	mov	x0, x22
    1ac4:	mov	w1, w19
    1ac8:	mov	x2, x21
    1acc:	bl	10a0 <ctf_add_generic>
    1ad0:	mov	x20, x0
    1ad4:	cmn	x0, #0x1
    1ad8:	b.eq	1af4 <ctf_add_union+0xa0>  // b.none
    1adc:	ldr	x0, [sp, #8]
    1ae0:	cmp	w19, #0x0
    1ae4:	mov	w8, #0x1e000000            	// #503316480
    1ae8:	mov	w9, #0x1c000000            	// #469762048
    1aec:	csel	w8, w9, w8, eq  // eq = none
    1af0:	stp	w8, wzr, [x0, #28]
    1af4:	mov	x0, x20
    1af8:	ldp	x20, x19, [sp, #48]
    1afc:	ldp	x22, x21, [sp, #32]
    1b00:	ldp	x29, x30, [sp, #16]
    1b04:	add	sp, sp, #0x40
    1b08:	ret

0000000000001b0c <ctf_add_enum>:
    1b0c:	sub	sp, sp, #0x40
    1b10:	stp	x22, x21, [sp, #32]
    1b14:	stp	x20, x19, [sp, #48]
    1b18:	mov	x22, x2
    1b1c:	mov	w20, w1
    1b20:	mov	x19, x0
    1b24:	stp	x29, x30, [sp, #16]
    1b28:	add	x29, sp, #0x10
    1b2c:	cbz	x2, 1b70 <ctf_add_enum+0x64>
    1b30:	mov	w1, #0x8                   	// #8
    1b34:	mov	x0, x19
    1b38:	mov	x2, x22
    1b3c:	bl	0 <ctf_lookup_by_rawname>
    1b40:	cbz	x0, 1b70 <ctf_add_enum+0x64>
    1b44:	mov	x21, x0
    1b48:	mov	x0, x19
    1b4c:	mov	x1, x21
    1b50:	bl	0 <ctf_type_kind>
    1b54:	cmp	w0, #0x9
    1b58:	b.ne	1b70 <ctf_add_enum+0x64>  // b.any
    1b5c:	ldr	x0, [x19, #568]
    1b60:	mov	x1, x21
    1b64:	bl	0 <ctf_dynhash_lookup>
    1b68:	str	x0, [sp, #8]
    1b6c:	b	1b98 <ctf_add_enum+0x8c>
    1b70:	add	x4, sp, #0x8
    1b74:	mov	w3, #0x8                   	// #8
    1b78:	mov	x0, x19
    1b7c:	mov	w1, w20
    1b80:	mov	x2, x22
    1b84:	bl	10a0 <ctf_add_generic>
    1b88:	mov	x21, x0
    1b8c:	cmn	x0, #0x1
    1b90:	b.eq	1bb8 <ctf_add_enum+0xac>  // b.none
    1b94:	ldr	x0, [sp, #8]
    1b98:	cmp	w20, #0x0
    1b9c:	mov	w8, #0x22000000            	// #570425344
    1ba0:	mov	w9, #0x20000000            	// #536870912
    1ba4:	csel	w8, w9, w8, eq  // eq = none
    1ba8:	str	w8, [x0, #28]
    1bac:	ldr	x8, [x19, #488]
    1bb0:	ldr	x8, [x8, #40]
    1bb4:	str	w8, [x0, #32]
    1bb8:	mov	x0, x21
    1bbc:	ldp	x20, x19, [sp, #48]
    1bc0:	ldp	x22, x21, [sp, #32]
    1bc4:	ldp	x29, x30, [sp, #16]
    1bc8:	add	sp, sp, #0x40
    1bcc:	ret

0000000000001bd0 <ctf_add_enum_encoded>:
    1bd0:	stp	x29, x30, [sp, #-64]!
    1bd4:	str	x23, [sp, #16]
    1bd8:	stp	x22, x21, [sp, #32]
    1bdc:	stp	x20, x19, [sp, #48]
    1be0:	mov	x19, x3
    1be4:	mov	x23, x2
    1be8:	mov	w21, w1
    1bec:	mov	x20, x0
    1bf0:	mov	x29, sp
    1bf4:	cbz	x2, 1c54 <ctf_add_enum_encoded+0x84>
    1bf8:	mov	w1, #0x8                   	// #8
    1bfc:	mov	x0, x20
    1c00:	mov	x2, x23
    1c04:	bl	0 <ctf_lookup_by_rawname>
    1c08:	cbz	x0, 1c54 <ctf_add_enum_encoded+0x84>
    1c0c:	mov	x22, x0
    1c10:	mov	x0, x20
    1c14:	mov	x1, x22
    1c18:	bl	0 <ctf_type_kind>
    1c1c:	cmp	w0, #0x9
    1c20:	b.eq	1c70 <ctf_add_enum_encoded+0xa0>  // b.none
    1c24:	mov	x0, x20
    1c28:	mov	x1, x22
    1c2c:	bl	0 <ctf_type_kind_unsliced>
    1c30:	cmp	w0, #0x8
    1c34:	b.eq	1c70 <ctf_add_enum_encoded+0xa0>  // b.none
    1c38:	mov	x0, x20
    1c3c:	ldp	x20, x19, [sp, #48]
    1c40:	ldp	x22, x21, [sp, #32]
    1c44:	ldr	x23, [sp, #16]
    1c48:	mov	w1, #0x3fe                 	// #1022
    1c4c:	ldp	x29, x30, [sp], #64
    1c50:	b	0 <ctf_set_errno>
    1c54:	mov	x0, x20
    1c58:	mov	w1, w21
    1c5c:	mov	x2, x23
    1c60:	bl	1b0c <ctf_add_enum>
    1c64:	mov	x22, x0
    1c68:	cmn	x0, #0x1
    1c6c:	b.eq	1c94 <ctf_add_enum_encoded+0xc4>  // b.none
    1c70:	mov	x0, x20
    1c74:	mov	w1, w21
    1c78:	mov	x2, x22
    1c7c:	mov	x3, x19
    1c80:	ldp	x20, x19, [sp, #48]
    1c84:	ldp	x22, x21, [sp, #32]
    1c88:	ldr	x23, [sp, #16]
    1c8c:	ldp	x29, x30, [sp], #64
    1c90:	b	f58 <ctf_add_slice>
    1c94:	ldp	x20, x19, [sp, #48]
    1c98:	ldp	x22, x21, [sp, #32]
    1c9c:	ldr	x23, [sp, #16]
    1ca0:	ldp	x29, x30, [sp], #64
    1ca4:	ret

0000000000001ca8 <ctf_add_forward>:
    1ca8:	sub	sp, sp, #0x40
    1cac:	sub	w8, w3, #0x6
    1cb0:	stp	x22, x21, [sp, #32]
    1cb4:	cmp	w8, #0x3
    1cb8:	mov	x22, x0
    1cbc:	stp	x29, x30, [sp, #16]
    1cc0:	stp	x20, x19, [sp, #48]
    1cc4:	add	x29, sp, #0x10
    1cc8:	b.cs	1d28 <ctf_add_forward+0x80>  // b.hs, b.nlast
    1ccc:	mov	w19, w3
    1cd0:	mov	x21, x2
    1cd4:	mov	w20, w1
    1cd8:	cbz	x2, 1cec <ctf_add_forward+0x44>
    1cdc:	mov	x0, x22
    1ce0:	mov	w1, w19
    1ce4:	mov	x2, x21
    1ce8:	bl	0 <ctf_lookup_by_rawname>
    1cec:	add	x4, sp, #0x8
    1cf0:	mov	w3, #0x9                   	// #9
    1cf4:	mov	x0, x22
    1cf8:	mov	w1, w20
    1cfc:	mov	x2, x21
    1d00:	bl	10a0 <ctf_add_generic>
    1d04:	cmn	x0, #0x1
    1d08:	b.eq	1d34 <ctf_add_forward+0x8c>  // b.none
    1d0c:	ldr	x8, [sp, #8]
    1d10:	cmp	w20, #0x0
    1d14:	mov	w9, #0x26000000            	// #637534208
    1d18:	mov	w10, #0x24000000            	// #603979776
    1d1c:	csel	w9, w10, w9, eq  // eq = none
    1d20:	stp	w9, w19, [x8, #28]
    1d24:	b	1d34 <ctf_add_forward+0x8c>
    1d28:	mov	w1, #0x3fd                 	// #1021
    1d2c:	mov	x0, x22
    1d30:	bl	0 <ctf_set_errno>
    1d34:	ldp	x20, x19, [sp, #48]
    1d38:	ldp	x22, x21, [sp, #32]
    1d3c:	ldp	x29, x30, [sp, #16]
    1d40:	add	sp, sp, #0x40
    1d44:	ret

0000000000001d48 <ctf_add_typedef>:
    1d48:	sub	sp, sp, #0x40
    1d4c:	mov	w8, #0xffffffff            	// #-1
    1d50:	stp	x22, x21, [sp, #32]
    1d54:	mov	x21, x0
    1d58:	cmp	x3, x8
    1d5c:	stp	x29, x30, [sp, #16]
    1d60:	stp	x20, x19, [sp, #48]
    1d64:	add	x29, sp, #0x10
    1d68:	str	x0, [sp]
    1d6c:	b.cc	1d80 <ctf_add_typedef+0x38>  // b.lo, b.ul, b.last
    1d70:	mov	w1, #0x16                  	// #22
    1d74:	mov	x0, x21
    1d78:	bl	0 <ctf_set_errno>
    1d7c:	b	1ddc <ctf_add_typedef+0x94>
    1d80:	mov	w20, w1
    1d84:	mov	x0, sp
    1d88:	mov	x1, x3
    1d8c:	mov	x19, x3
    1d90:	mov	x22, x2
    1d94:	bl	0 <ctf_lookup_by_id>
    1d98:	cbz	x0, 1dd8 <ctf_add_typedef+0x90>
    1d9c:	add	x4, sp, #0x8
    1da0:	mov	w3, #0xa                   	// #10
    1da4:	mov	x0, x21
    1da8:	mov	w1, w20
    1dac:	mov	x2, x22
    1db0:	bl	10a0 <ctf_add_generic>
    1db4:	cmn	x0, #0x1
    1db8:	b.eq	1ddc <ctf_add_typedef+0x94>  // b.none
    1dbc:	ldr	x8, [sp, #8]
    1dc0:	cmp	w20, #0x0
    1dc4:	mov	w9, #0x2a000000            	// #704643072
    1dc8:	mov	w10, #0x28000000            	// #671088640
    1dcc:	csel	w9, w10, w9, eq  // eq = none
    1dd0:	stp	w9, w19, [x8, #28]
    1dd4:	b	1ddc <ctf_add_typedef+0x94>
    1dd8:	mov	x0, #0xffffffffffffffff    	// #-1
    1ddc:	ldp	x20, x19, [sp, #48]
    1de0:	ldp	x22, x21, [sp, #32]
    1de4:	ldp	x29, x30, [sp, #16]
    1de8:	add	sp, sp, #0x40
    1dec:	ret

0000000000001df0 <ctf_add_volatile>:
    1df0:	sub	sp, sp, #0x40
    1df4:	mov	w8, #0xffffffff            	// #-1
    1df8:	str	x21, [sp, #32]
    1dfc:	mov	x21, x0
    1e00:	cmp	x2, x8
    1e04:	stp	x29, x30, [sp, #16]
    1e08:	stp	x20, x19, [sp, #48]
    1e0c:	add	x29, sp, #0x10
    1e10:	str	x0, [sp, #8]
    1e14:	b.cc	1e28 <ctf_add_volatile+0x38>  // b.lo, b.ul, b.last
    1e18:	mov	w1, #0x16                  	// #22
    1e1c:	mov	x0, x21
    1e20:	bl	0 <ctf_set_errno>
    1e24:	b	1e80 <ctf_add_volatile+0x90>
    1e28:	mov	w20, w1
    1e2c:	add	x0, sp, #0x8
    1e30:	mov	x1, x2
    1e34:	mov	x19, x2
    1e38:	bl	0 <ctf_lookup_by_id>
    1e3c:	cbz	x0, 1e7c <ctf_add_volatile+0x8c>
    1e40:	add	x4, x29, #0x18
    1e44:	mov	w3, #0xb                   	// #11
    1e48:	mov	x0, x21
    1e4c:	mov	w1, w20
    1e50:	mov	x2, xzr
    1e54:	bl	10a0 <ctf_add_generic>
    1e58:	cmn	x0, #0x1
    1e5c:	b.eq	1e80 <ctf_add_volatile+0x90>  // b.none
    1e60:	ldr	x8, [x29, #24]
    1e64:	cmp	w20, #0x0
    1e68:	mov	w9, #0x2e000000            	// #771751936
    1e6c:	mov	w10, #0x2c000000            	// #738197504
    1e70:	csel	w9, w10, w9, eq  // eq = none
    1e74:	stp	w9, w19, [x8, #28]
    1e78:	b	1e80 <ctf_add_volatile+0x90>
    1e7c:	mov	x0, #0xffffffffffffffff    	// #-1
    1e80:	ldp	x20, x19, [sp, #48]
    1e84:	ldr	x21, [sp, #32]
    1e88:	ldp	x29, x30, [sp, #16]
    1e8c:	add	sp, sp, #0x40
    1e90:	ret

0000000000001e94 <ctf_add_const>:
    1e94:	sub	sp, sp, #0x40
    1e98:	mov	w8, #0xffffffff            	// #-1
    1e9c:	str	x21, [sp, #32]
    1ea0:	mov	x21, x0
    1ea4:	cmp	x2, x8
    1ea8:	stp	x29, x30, [sp, #16]
    1eac:	stp	x20, x19, [sp, #48]
    1eb0:	add	x29, sp, #0x10
    1eb4:	str	x0, [sp, #8]
    1eb8:	b.cc	1ecc <ctf_add_const+0x38>  // b.lo, b.ul, b.last
    1ebc:	mov	w1, #0x16                  	// #22
    1ec0:	mov	x0, x21
    1ec4:	bl	0 <ctf_set_errno>
    1ec8:	b	1f24 <ctf_add_const+0x90>
    1ecc:	mov	w20, w1
    1ed0:	add	x0, sp, #0x8
    1ed4:	mov	x1, x2
    1ed8:	mov	x19, x2
    1edc:	bl	0 <ctf_lookup_by_id>
    1ee0:	cbz	x0, 1f20 <ctf_add_const+0x8c>
    1ee4:	add	x4, x29, #0x18
    1ee8:	mov	w3, #0xc                   	// #12
    1eec:	mov	x0, x21
    1ef0:	mov	w1, w20
    1ef4:	mov	x2, xzr
    1ef8:	bl	10a0 <ctf_add_generic>
    1efc:	cmn	x0, #0x1
    1f00:	b.eq	1f24 <ctf_add_const+0x90>  // b.none
    1f04:	ldr	x8, [x29, #24]
    1f08:	cmp	w20, #0x0
    1f0c:	mov	w9, #0x32000000            	// #838860800
    1f10:	mov	w10, #0x30000000            	// #805306368
    1f14:	csel	w9, w10, w9, eq  // eq = none
    1f18:	stp	w9, w19, [x8, #28]
    1f1c:	b	1f24 <ctf_add_const+0x90>
    1f20:	mov	x0, #0xffffffffffffffff    	// #-1
    1f24:	ldp	x20, x19, [sp, #48]
    1f28:	ldr	x21, [sp, #32]
    1f2c:	ldp	x29, x30, [sp, #16]
    1f30:	add	sp, sp, #0x40
    1f34:	ret

0000000000001f38 <ctf_add_restrict>:
    1f38:	sub	sp, sp, #0x40
    1f3c:	mov	w8, #0xffffffff            	// #-1
    1f40:	str	x21, [sp, #32]
    1f44:	mov	x21, x0
    1f48:	cmp	x2, x8
    1f4c:	stp	x29, x30, [sp, #16]
    1f50:	stp	x20, x19, [sp, #48]
    1f54:	add	x29, sp, #0x10
    1f58:	str	x0, [sp, #8]
    1f5c:	b.cc	1f70 <ctf_add_restrict+0x38>  // b.lo, b.ul, b.last
    1f60:	mov	w1, #0x16                  	// #22
    1f64:	mov	x0, x21
    1f68:	bl	0 <ctf_set_errno>
    1f6c:	b	1fc8 <ctf_add_restrict+0x90>
    1f70:	mov	w20, w1
    1f74:	add	x0, sp, #0x8
    1f78:	mov	x1, x2
    1f7c:	mov	x19, x2
    1f80:	bl	0 <ctf_lookup_by_id>
    1f84:	cbz	x0, 1fc4 <ctf_add_restrict+0x8c>
    1f88:	add	x4, x29, #0x18
    1f8c:	mov	w3, #0xd                   	// #13
    1f90:	mov	x0, x21
    1f94:	mov	w1, w20
    1f98:	mov	x2, xzr
    1f9c:	bl	10a0 <ctf_add_generic>
    1fa0:	cmn	x0, #0x1
    1fa4:	b.eq	1fc8 <ctf_add_restrict+0x90>  // b.none
    1fa8:	ldr	x8, [x29, #24]
    1fac:	cmp	w20, #0x0
    1fb0:	mov	w9, #0x36000000            	// #905969664
    1fb4:	mov	w10, #0x34000000            	// #872415232
    1fb8:	csel	w9, w10, w9, eq  // eq = none
    1fbc:	stp	w9, w19, [x8, #28]
    1fc0:	b	1fc8 <ctf_add_restrict+0x90>
    1fc4:	mov	x0, #0xffffffffffffffff    	// #-1
    1fc8:	ldp	x20, x19, [sp, #48]
    1fcc:	ldr	x21, [sp, #32]
    1fd0:	ldp	x29, x30, [sp, #16]
    1fd4:	add	sp, sp, #0x40
    1fd8:	ret

0000000000001fdc <ctf_add_enumerator>:
    1fdc:	stp	x29, x30, [sp, #-80]!
    1fe0:	stp	x24, x23, [sp, #32]
    1fe4:	stp	x22, x21, [sp, #48]
    1fe8:	stp	x20, x19, [sp, #64]
    1fec:	mov	x19, x0
    1ff0:	ldr	x0, [x0, #568]
    1ff4:	str	x25, [sp, #16]
    1ff8:	mov	x29, sp
    1ffc:	mov	w20, w3
    2000:	mov	x22, x2
    2004:	bl	0 <ctf_dynhash_lookup>
    2008:	cbz	x22, 201c <ctf_add_enumerator+0x40>
    200c:	ldrb	w8, [x19, #552]
    2010:	tbnz	w8, #1, 2024 <ctf_add_enumerator+0x48>
    2014:	mov	w1, #0x40d                 	// #1037
    2018:	b	2098 <ctf_add_enumerator+0xbc>
    201c:	mov	w1, #0x16                  	// #22
    2020:	b	2098 <ctf_add_enumerator+0xbc>
    2024:	mov	x21, x0
    2028:	cbz	x0, 208c <ctf_add_enumerator+0xb0>
    202c:	ldr	x8, [x19]
    2030:	ldr	w0, [x21, #28]
    2034:	ldr	x8, [x8]
    2038:	blr	x8
    203c:	ldr	x8, [x19]
    2040:	mov	w24, w0
    2044:	ldr	x9, [x8, #8]
    2048:	ldr	w8, [x21, #28]
    204c:	mov	w0, w8
    2050:	blr	x9
    2054:	ldr	x8, [x19]
    2058:	mov	w23, w0
    205c:	ldr	x9, [x8, #16]
    2060:	ldr	w8, [x21, #28]
    2064:	mov	w0, w8
    2068:	blr	x9
    206c:	cmp	w24, #0x8
    2070:	b.ne	2094 <ctf_add_enumerator+0xb8>  // b.any
    2074:	mov	w8, #0xffffff              	// #16777215
    2078:	mov	w24, w0
    207c:	cmp	w0, w8
    2080:	b.ne	20b8 <ctf_add_enumerator+0xdc>  // b.any
    2084:	mov	w1, #0x40e                 	// #1038
    2088:	b	2098 <ctf_add_enumerator+0xbc>
    208c:	mov	w1, #0x3fa                 	// #1018
    2090:	b	2098 <ctf_add_enumerator+0xbc>
    2094:	mov	w1, #0x3fc                 	// #1020
    2098:	mov	x0, x19
    209c:	bl	0 <ctf_set_errno>
    20a0:	ldp	x20, x19, [sp, #64]
    20a4:	ldp	x22, x21, [sp, #48]
    20a8:	ldp	x24, x23, [sp, #32]
    20ac:	ldr	x25, [sp, #16]
    20b0:	ldp	x29, x30, [sp], #80
    20b4:	ret
    20b8:	ldr	x25, [x21, #56]
    20bc:	cbz	x25, 20d8 <ctf_add_enumerator+0xfc>
    20c0:	ldr	x0, [x25, #16]
    20c4:	mov	x1, x22
    20c8:	bl	0 <strcmp>
    20cc:	cbz	w0, 2148 <ctf_add_enumerator+0x16c>
    20d0:	ldr	x25, [x25, #8]
    20d4:	cbnz	x25, 20c0 <ctf_add_enumerator+0xe4>
    20d8:	mov	w0, #0x30                  	// #48
    20dc:	bl	0 <malloc>
    20e0:	cbz	x0, 2150 <ctf_add_enumerator+0x174>
    20e4:	mov	x25, x0
    20e8:	mov	x0, x22
    20ec:	bl	0 <strdup>
    20f0:	cbz	x0, 2158 <ctf_add_enumerator+0x17c>
    20f4:	adrp	x9, 0 <ctf_create>
    20f8:	ldr	q0, [x9]
    20fc:	cmp	w23, #0x0
    2100:	mov	w10, #0x22000000            	// #570425344
    2104:	mov	w11, #0x20000000            	// #536870912
    2108:	add	x8, x21, #0x30
    210c:	add	w9, w24, #0x1
    2110:	csel	w10, w11, w10, eq  // eq = none
    2114:	str	x0, [x25, #16]
    2118:	bfxil	w10, w9, #0, #24
    211c:	mov	x0, x8
    2120:	mov	x1, x25
    2124:	str	w20, [x25, #40]
    2128:	stur	q0, [x25, #24]
    212c:	str	w10, [x21, #28]
    2130:	bl	0 <ctf_list_append>
    2134:	ldr	w8, [x19, #552]
    2138:	mov	w0, wzr
    213c:	orr	w8, w8, #0x4
    2140:	str	w8, [x19, #552]
    2144:	b	20a0 <ctf_add_enumerator+0xc4>
    2148:	mov	w1, #0x410                 	// #1040
    214c:	b	2098 <ctf_add_enumerator+0xbc>
    2150:	mov	w1, #0xb                   	// #11
    2154:	b	2098 <ctf_add_enumerator+0xbc>
    2158:	mov	x0, x25
    215c:	bl	0 <free>
    2160:	mov	w1, #0xb                   	// #11
    2164:	b	2098 <ctf_add_enumerator+0xbc>

0000000000002168 <ctf_add_member_offset>:
    2168:	sub	sp, sp, #0x80
    216c:	stp	x29, x30, [sp, #32]
    2170:	stp	x28, x27, [sp, #48]
    2174:	stp	x26, x25, [sp, #64]
    2178:	stp	x24, x23, [sp, #80]
    217c:	stp	x22, x21, [sp, #96]
    2180:	stp	x20, x19, [sp, #112]
    2184:	mov	x19, x0
    2188:	ldr	x0, [x0, #568]
    218c:	add	x29, sp, #0x20
    2190:	mov	x25, x4
    2194:	mov	x27, x3
    2198:	mov	x28, x2
    219c:	bl	0 <ctf_dynhash_lookup>
    21a0:	ldrb	w8, [x19, #552]
    21a4:	tbnz	w8, #1, 21b0 <ctf_add_member_offset+0x48>
    21a8:	mov	w1, #0x40d                 	// #1037
    21ac:	b	2228 <ctf_add_member_offset+0xc0>
    21b0:	mov	x20, x0
    21b4:	cbz	x0, 221c <ctf_add_member_offset+0xb4>
    21b8:	ldr	x8, [x19]
    21bc:	ldr	w0, [x20, #28]
    21c0:	ldr	x8, [x8]
    21c4:	blr	x8
    21c8:	ldr	x8, [x19]
    21cc:	mov	w21, w0
    21d0:	ldr	x9, [x8, #8]
    21d4:	ldr	w8, [x20, #28]
    21d8:	mov	w0, w8
    21dc:	blr	x9
    21e0:	ldr	x8, [x19]
    21e4:	mov	w22, w0
    21e8:	ldr	x9, [x8, #16]
    21ec:	ldr	w8, [x20, #28]
    21f0:	mov	w0, w8
    21f4:	blr	x9
    21f8:	orr	w8, w21, #0x1
    21fc:	cmp	w8, #0x7
    2200:	b.ne	2224 <ctf_add_member_offset+0xbc>  // b.any
    2204:	mov	w8, #0xffffff              	// #16777215
    2208:	mov	w23, w0
    220c:	cmp	w0, w8
    2210:	b.ne	2250 <ctf_add_member_offset+0xe8>  // b.any
    2214:	mov	w1, #0x40e                 	// #1038
    2218:	b	2228 <ctf_add_member_offset+0xc0>
    221c:	mov	w1, #0x3fa                 	// #1018
    2220:	b	2228 <ctf_add_member_offset+0xc0>
    2224:	mov	w1, #0x3fb                 	// #1019
    2228:	mov	x0, x19
    222c:	bl	0 <ctf_set_errno>
    2230:	ldp	x20, x19, [sp, #112]
    2234:	ldp	x22, x21, [sp, #96]
    2238:	ldp	x24, x23, [sp, #80]
    223c:	ldp	x26, x25, [sp, #64]
    2240:	ldp	x28, x27, [sp, #48]
    2244:	ldp	x29, x30, [sp, #32]
    2248:	add	sp, sp, #0x80
    224c:	ret
    2250:	cbz	x28, 225c <ctf_add_member_offset+0xf4>
    2254:	ldr	x24, [x20, #56]
    2258:	cbnz	x24, 22bc <ctf_add_member_offset+0x154>
    225c:	mov	x0, x19
    2260:	mov	x1, x27
    2264:	bl	0 <ctf_type_size>
    2268:	tbnz	x0, #63, 22d8 <ctf_add_member_offset+0x170>
    226c:	mov	x26, x0
    2270:	mov	x0, x19
    2274:	mov	x1, x27
    2278:	bl	0 <ctf_type_align>
    227c:	tbnz	x0, #63, 22d8 <ctf_add_member_offset+0x170>
    2280:	str	x0, [sp, #8]
    2284:	mov	w0, #0x30                  	// #48
    2288:	bl	0 <malloc>
    228c:	cbz	x0, 22e0 <ctf_add_member_offset+0x178>
    2290:	mov	x24, x0
    2294:	cbz	x28, 22e8 <ctf_add_member_offset+0x180>
    2298:	mov	x0, x28
    229c:	bl	0 <strdup>
    22a0:	cbnz	x0, 22ec <ctf_add_member_offset+0x184>
    22a4:	mov	x0, x24
    22a8:	bl	0 <free>
    22ac:	mov	w1, #0xb                   	// #11
    22b0:	b	2228 <ctf_add_member_offset+0xc0>
    22b4:	ldr	x24, [x24, #8]
    22b8:	cbz	x24, 225c <ctf_add_member_offset+0xf4>
    22bc:	ldr	x0, [x24, #16]
    22c0:	cbz	x0, 22b4 <ctf_add_member_offset+0x14c>
    22c4:	mov	x1, x28
    22c8:	bl	0 <strcmp>
    22cc:	cbnz	w0, 22b4 <ctf_add_member_offset+0x14c>
    22d0:	mov	w1, #0x410                 	// #1040
    22d4:	b	2228 <ctf_add_member_offset+0xc0>
    22d8:	mov	w0, #0xffffffff            	// #-1
    22dc:	b	2230 <ctf_add_member_offset+0xc8>
    22e0:	mov	w1, #0xb                   	// #11
    22e4:	b	2228 <ctf_add_member_offset+0xc0>
    22e8:	mov	x0, xzr
    22ec:	add	x1, x20, #0x18
    22f0:	mov	w8, #0xffffffff            	// #-1
    22f4:	cmp	w21, #0x6
    22f8:	stp	x0, x27, [x24, #16]
    22fc:	str	w8, [x24, #40]
    2300:	b.ne	234c <ctf_add_member_offset+0x1e4>  // b.any
    2304:	cbz	w23, 234c <ctf_add_member_offset+0x1e4>
    2308:	cmn	x25, #0x1
    230c:	b.eq	2374 <ctf_add_member_offset+0x20c>  // b.none
    2310:	str	x25, [x24, #32]
    2314:	ldr	x8, [x19]
    2318:	mov	x0, x19
    231c:	mov	x2, xzr
    2320:	mov	x3, xzr
    2324:	ldr	x8, [x8, #24]
    2328:	blr	x8
    232c:	add	w8, w25, #0x7
    2330:	cmp	w25, #0x0
    2334:	csel	w8, w8, w25, lt  // lt = tstop
    2338:	asr	w8, w8, #3
    233c:	add	x8, x26, w8, sxtw
    2340:	cmp	x0, x8
    2344:	csel	x8, x0, x8, gt
    2348:	b	23f0 <ctf_add_member_offset+0x288>
    234c:	str	xzr, [x24, #32]
    2350:	ldr	x8, [x19]
    2354:	mov	x0, x19
    2358:	mov	x2, xzr
    235c:	mov	x3, xzr
    2360:	ldr	x8, [x8, #24]
    2364:	blr	x8
    2368:	cmp	x0, x26
    236c:	csel	x8, x0, x26, gt
    2370:	b	23f0 <ctf_add_member_offset+0x288>
    2374:	ldr	x25, [x20, #48]
    2378:	mov	x0, x19
    237c:	ldr	x1, [x25, #24]
    2380:	bl	0 <ctf_type_resolve>
    2384:	ldr	x27, [x25, #32]
    2388:	mov	x25, x0
    238c:	add	x2, sp, #0x10
    2390:	mov	x0, x19
    2394:	mov	x1, x25
    2398:	bl	0 <ctf_type_encoding>
    239c:	cbz	w0, 23bc <ctf_add_member_offset+0x254>
    23a0:	mov	x0, x19
    23a4:	mov	x1, x25
    23a8:	bl	0 <ctf_type_size>
    23ac:	cmp	x0, #0x1
    23b0:	b.lt	23c4 <ctf_add_member_offset+0x25c>  // b.tstop
    23b4:	add	x27, x27, x0, lsl #3
    23b8:	b	23c4 <ctf_add_member_offset+0x25c>
    23bc:	ldr	w8, [sp, #24]
    23c0:	add	x27, x27, x8
    23c4:	ldr	x9, [sp, #8]
    23c8:	add	x8, x27, #0x7
    23cc:	cmp	x9, #0x1
    23d0:	csinc	x9, x9, xzr, gt
    23d4:	add	x8, x9, x8, lsr #3
    23d8:	sub	x8, x8, #0x1
    23dc:	udiv	x8, x8, x9
    23e0:	mul	x8, x8, x9
    23e4:	lsl	x9, x8, #3
    23e8:	str	x9, [x24, #32]
    23ec:	add	x8, x8, x26
    23f0:	mov	w9, #0xffffffff            	// #-1
    23f4:	cmp	x8, x9
    23f8:	b.cc	240c <ctf_add_member_offset+0x2a4>  // b.lo, b.ul, b.last
    23fc:	lsr	x10, x8, #32
    2400:	stp	w9, w10, [x20, #32]
    2404:	mov	w9, #0x28                  	// #40
    2408:	b	2410 <ctf_add_member_offset+0x2a8>
    240c:	mov	w9, #0x20                  	// #32
    2410:	cmp	w22, #0x0
    2414:	str	w8, [x20, x9]
    2418:	lsl	w8, w21, #26
    241c:	cset	w10, ne  // ne = any
    2420:	add	w9, w23, #0x1
    2424:	bfi	w8, w10, #25, #1
    2428:	bfxil	w8, w9, #0, #24
    242c:	add	x0, x20, #0x30
    2430:	mov	x1, x24
    2434:	str	w8, [x20, #28]
    2438:	bl	0 <ctf_list_append>
    243c:	ldr	w8, [x19, #552]
    2440:	mov	w0, wzr
    2444:	orr	w8, w8, #0x4
    2448:	str	w8, [x19, #552]
    244c:	b	2230 <ctf_add_member_offset+0xc8>

0000000000002450 <ctf_add_member_encoded>:
    2450:	sub	sp, sp, #0x50
    2454:	stp	x29, x30, [sp, #16]
    2458:	stp	x22, x21, [sp, #48]
    245c:	stp	x20, x19, [sp, #64]
    2460:	str	x5, [sp]
    2464:	str	w6, [sp, #8]
    2468:	mov	x20, x0
    246c:	ldr	x0, [x0, #568]
    2470:	mov	x22, x1
    2474:	mov	x1, x3
    2478:	str	x23, [sp, #32]
    247c:	add	x29, sp, #0x10
    2480:	mov	x19, x4
    2484:	mov	x23, x3
    2488:	mov	x21, x2
    248c:	bl	0 <ctf_dynhash_lookup>
    2490:	ldr	x8, [x20]
    2494:	ldr	w0, [x0, #28]
    2498:	ldr	x8, [x8]
    249c:	blr	x8
    24a0:	cmp	w0, #0x8
    24a4:	b.hi	24f4 <ctf_add_member_encoded+0xa4>  // b.pmore
    24a8:	mov	w8, #0x1                   	// #1
    24ac:	lsl	w8, w8, w0
    24b0:	mov	w9, #0x106                 	// #262
    24b4:	tst	w8, w9
    24b8:	b.eq	24f4 <ctf_add_member_encoded+0xa4>  // b.none
    24bc:	sxtw	x2, w23
    24c0:	mov	x3, sp
    24c4:	mov	x0, x20
    24c8:	mov	w1, wzr
    24cc:	bl	f58 <ctf_add_slice>
    24d0:	cmn	x0, #0x1
    24d4:	b.eq	2500 <ctf_add_member_encoded+0xb0>  // b.none
    24d8:	mov	x3, x0
    24dc:	mov	x0, x20
    24e0:	mov	x1, x22
    24e4:	mov	x2, x21
    24e8:	mov	x4, x19
    24ec:	bl	2168 <ctf_add_member_offset>
    24f0:	b	2500 <ctf_add_member_encoded+0xb0>
    24f4:	mov	w1, #0x3fe                 	// #1022
    24f8:	mov	x0, x20
    24fc:	bl	0 <ctf_set_errno>
    2500:	ldp	x20, x19, [sp, #64]
    2504:	ldp	x22, x21, [sp, #48]
    2508:	ldr	x23, [sp, #32]
    250c:	ldp	x29, x30, [sp, #16]
    2510:	add	sp, sp, #0x50
    2514:	ret

0000000000002518 <ctf_add_member>:
    2518:	mov	x4, #0xffffffffffffffff    	// #-1
    251c:	b	2168 <ctf_add_member_offset>

0000000000002520 <ctf_add_variable>:
    2520:	sub	sp, sp, #0x40
    2524:	stp	x29, x30, [sp, #16]
    2528:	stp	x22, x21, [sp, #32]
    252c:	stp	x20, x19, [sp, #48]
    2530:	str	x0, [sp, #8]
    2534:	ldrb	w8, [x0, #552]
    2538:	mov	x19, x0
    253c:	add	x29, sp, #0x10
    2540:	tbnz	w8, #1, 254c <ctf_add_variable+0x2c>
    2544:	mov	w1, #0x40d                 	// #1037
    2548:	b	2564 <ctf_add_variable+0x44>
    254c:	ldr	x0, [x19, #592]
    2550:	mov	x20, x2
    2554:	mov	x21, x1
    2558:	bl	0 <ctf_dynhash_lookup>
    255c:	cbz	x0, 2580 <ctf_add_variable+0x60>
    2560:	mov	w1, #0x410                 	// #1040
    2564:	mov	x0, x19
    2568:	bl	0 <ctf_set_errno>
    256c:	ldp	x20, x19, [sp, #48]
    2570:	ldp	x22, x21, [sp, #32]
    2574:	ldp	x29, x30, [sp, #16]
    2578:	add	sp, sp, #0x40
    257c:	ret
    2580:	add	x0, sp, #0x8
    2584:	mov	x1, x20
    2588:	bl	0 <ctf_lookup_by_id>
    258c:	cbz	x0, 25b4 <ctf_add_variable+0x94>
    2590:	mov	x0, x19
    2594:	mov	x1, x20
    2598:	bl	0 <ctf_type_resolve>
    259c:	cmn	x0, #0x1
    25a0:	b.ne	25bc <ctf_add_variable+0x9c>  // b.any
    25a4:	mov	x0, x19
    25a8:	bl	0 <ctf_errno>
    25ac:	cmp	w0, #0x41b
    25b0:	b.ne	25bc <ctf_add_variable+0x9c>  // b.any
    25b4:	mov	w0, #0xffffffff            	// #-1
    25b8:	b	256c <ctf_add_variable+0x4c>
    25bc:	mov	w0, #0x28                  	// #40
    25c0:	bl	0 <malloc>
    25c4:	cbz	x0, 25f4 <ctf_add_variable+0xd4>
    25c8:	mov	x22, x0
    25cc:	cbz	x21, 25fc <ctf_add_variable+0xdc>
    25d0:	mov	x0, x21
    25d4:	bl	0 <strdup>
    25d8:	mov	x1, x0
    25dc:	str	x0, [x22, #16]
    25e0:	cbnz	x0, 25fc <ctf_add_variable+0xdc>
    25e4:	mov	x0, x22
    25e8:	bl	0 <free>
    25ec:	mov	w1, #0xb                   	// #11
    25f0:	b	2564 <ctf_add_variable+0x44>
    25f4:	mov	w1, #0xb                   	// #11
    25f8:	b	2564 <ctf_add_variable+0x44>
    25fc:	ldr	x8, [x19, #624]
    2600:	mov	x2, x22
    2604:	stp	x20, x8, [x22, #24]
    2608:	ldr	x0, [x19, #592]
    260c:	bl	0 <ctf_dynhash_insert>
    2610:	tbnz	w0, #31, 2634 <ctf_add_variable+0x114>
    2614:	add	x0, x19, #0x258
    2618:	mov	x1, x22
    261c:	bl	0 <ctf_list_append>
    2620:	ldr	w8, [x19, #552]
    2624:	mov	w0, wzr
    2628:	orr	w8, w8, #0x4
    262c:	str	w8, [x19, #552]
    2630:	b	256c <ctf_add_variable+0x4c>
    2634:	ldr	x0, [x22, #16]
    2638:	bl	0 <free>
    263c:	mov	x0, x22
    2640:	bl	0 <free>
    2644:	mov	w0, #0xffffffff            	// #-1
    2648:	b	256c <ctf_add_variable+0x4c>

000000000000264c <ctf_add_type>:
    264c:	stp	x29, x30, [sp, #-48]!
    2650:	stp	x20, x19, [sp, #32]
    2654:	ldr	x8, [x1, #696]
    2658:	str	x21, [sp, #16]
    265c:	mov	x20, x2
    2660:	mov	x19, x1
    2664:	mov	x21, x0
    2668:	mov	x29, sp
    266c:	cbnz	x8, 2694 <ctf_add_type+0x48>
    2670:	adrp	x0, 0 <ctf_hash_integer>
    2674:	adrp	x1, 0 <ctf_hash_eq_integer>
    2678:	add	x0, x0, #0x0
    267c:	add	x1, x1, #0x0
    2680:	mov	x2, xzr
    2684:	mov	x3, xzr
    2688:	bl	0 <ctf_dynhash_create>
    268c:	str	x0, [x19, #696]
    2690:	cbz	x0, 26cc <ctf_add_type+0x80>
    2694:	mov	x0, x21
    2698:	mov	x1, x19
    269c:	mov	x2, x20
    26a0:	mov	x3, x19
    26a4:	bl	26e4 <ctf_add_type_internal>
    26a8:	ldr	x8, [x19, #696]
    26ac:	mov	x19, x0
    26b0:	mov	x0, x8
    26b4:	bl	0 <ctf_dynhash_empty>
    26b8:	mov	x0, x19
    26bc:	ldp	x20, x19, [sp, #32]
    26c0:	ldr	x21, [sp, #16]
    26c4:	ldp	x29, x30, [sp], #48
    26c8:	ret
    26cc:	mov	x0, x21
    26d0:	ldp	x20, x19, [sp, #32]
    26d4:	ldr	x21, [sp, #16]
    26d8:	mov	w1, #0xc                   	// #12
    26dc:	ldp	x29, x30, [sp], #48
    26e0:	b	0 <ctf_set_errno>

00000000000026e4 <ctf_add_type_internal>:
    26e4:	sub	sp, sp, #0x120
    26e8:	stp	x29, x30, [sp, #192]
    26ec:	add	x29, sp, #0xc0
    26f0:	stp	x28, x27, [sp, #208]
    26f4:	stp	x26, x25, [sp, #224]
    26f8:	stp	x24, x23, [sp, #240]
    26fc:	stp	x22, x21, [sp, #256]
    2700:	stp	x20, x19, [sp, #272]
    2704:	stp	x0, x1, [x29, #-32]
    2708:	ldrb	w8, [x0, #552]
    270c:	mov	x19, x0
    2710:	tbnz	w8, #1, 271c <ctf_add_type_internal+0x38>
    2714:	mov	w1, #0x40d                 	// #1037
    2718:	b	2978 <ctf_add_type_internal+0x294>
    271c:	sub	x0, x29, #0x18
    2720:	mov	x1, x2
    2724:	mov	x24, x3
    2728:	mov	x20, x2
    272c:	bl	0 <ctf_lookup_by_id>
    2730:	ldur	x8, [x29, #-24]
    2734:	cbz	x0, 2848 <ctf_add_type_internal+0x164>
    2738:	mov	x27, x0
    273c:	mov	x0, x8
    2740:	mov	x1, x20
    2744:	bl	0 <ctf_type_resolve>
    2748:	cmn	x0, #0x1
    274c:	b.ne	2768 <ctf_add_type_internal+0x84>  // b.any
    2750:	ldur	x0, [x29, #-24]
    2754:	bl	0 <ctf_errno>
    2758:	cmp	w0, #0x41b
    275c:	b.ne	2768 <ctf_add_type_internal+0x84>  // b.any
    2760:	mov	w1, #0x41b                 	// #1051
    2764:	b	2978 <ctf_add_type_internal+0x294>
    2768:	ldur	x0, [x29, #-24]
    276c:	ldr	w1, [x27]
    2770:	bl	0 <ctf_strptr>
    2774:	ldur	x8, [x29, #-24]
    2778:	mov	x23, x0
    277c:	ldr	x8, [x8]
    2780:	ldr	x9, [x8]
    2784:	ldr	w8, [x27, #4]
    2788:	mov	w0, w8
    278c:	blr	x9
    2790:	ldur	x8, [x29, #-24]
    2794:	mov	w25, w0
    2798:	ldr	x8, [x8]
    279c:	ldr	x9, [x8, #8]
    27a0:	ldr	w8, [x27, #4]
    27a4:	mov	w0, w8
    27a8:	blr	x9
    27ac:	ldur	x8, [x29, #-24]
    27b0:	mov	w22, w0
    27b4:	ldr	x8, [x8]
    27b8:	ldr	x9, [x8, #16]
    27bc:	ldr	w8, [x27, #4]
    27c0:	mov	w0, w8
    27c4:	blr	x9
    27c8:	ldur	x8, [x29, #-24]
    27cc:	mov	w26, w0
    27d0:	sub	x2, x29, #0x20
    27d4:	mov	x1, x20
    27d8:	mov	x0, x8
    27dc:	bl	0 <ctf_type_mapping>
    27e0:	cbz	x0, 2850 <ctf_add_type_internal+0x16c>
    27e4:	mov	x21, x0
    27e8:	ldr	x0, [x24, #696]
    27ec:	mov	x1, x20
    27f0:	bl	0 <ctf_dynhash_lookup>
    27f4:	cbnz	x0, 2984 <ctf_add_type_internal+0x2a0>
    27f8:	ldur	x0, [x29, #-32]
    27fc:	mov	x1, x21
    2800:	bl	0 <ctf_type_kind_unsliced>
    2804:	sub	w8, w25, #0x6
    2808:	cmp	w8, #0x2
    280c:	b.hi	2850 <ctf_add_type_internal+0x16c>  // b.pmore
    2810:	cmp	w0, w25
    2814:	b.ne	2850 <ctf_add_type_internal+0x16c>  // b.any
    2818:	sub	x0, x29, #0x20
    281c:	mov	x1, #0xffffffffffffffff    	// #-1
    2820:	bl	0 <ctf_lookup_by_id>
    2824:	cbz	x0, 2864 <ctf_add_type_internal+0x180>
    2828:	ldur	x8, [x29, #-32]
    282c:	ldr	w0, [x0, #4]
    2830:	ldr	x8, [x8]
    2834:	ldr	x8, [x8, #16]
    2838:	blr	x8
    283c:	cmp	w26, w0
    2840:	b.eq	2984 <ctf_add_type_internal+0x2a0>  // b.none
    2844:	b	2864 <ctf_add_type_internal+0x180>
    2848:	mov	x0, x8
    284c:	b	2970 <ctf_add_type_internal+0x28c>
    2850:	cmp	w25, #0x9
    2854:	b.ne	2864 <ctf_add_type_internal+0x180>  // b.any
    2858:	ldr	w21, [x27, #8]
    285c:	mov	w28, #0x1                   	// #1
    2860:	b	286c <ctf_add_type_internal+0x188>
    2864:	mov	w28, wzr
    2868:	mov	w21, w25
    286c:	str	w22, [sp, #20]
    2870:	str	x23, [sp, #24]
    2874:	tbz	w22, #0, 28f0 <ctf_add_type_internal+0x20c>
    2878:	ldrb	w8, [x23]
    287c:	cbz	w8, 28f0 <ctf_add_type_internal+0x20c>
    2880:	mov	x0, x19
    2884:	mov	w1, w21
    2888:	mov	x2, x23
    288c:	str	w26, [sp, #16]
    2890:	mov	w26, w21
    2894:	bl	0 <ctf_lookup_by_rawname>
    2898:	cbz	x0, 2908 <ctf_add_type_internal+0x224>
    289c:	mov	x21, x0
    28a0:	mov	x0, x19
    28a4:	mov	x1, x21
    28a8:	bl	0 <ctf_type_kind_unsliced>
    28ac:	cmn	x21, #0x1
    28b0:	mov	w22, w0
    28b4:	cset	w23, ne  // ne = any
    28b8:	cmp	w0, w25
    28bc:	b.eq	2930 <ctf_add_type_internal+0x24c>  // b.none
    28c0:	cmn	x21, #0x1
    28c4:	b.eq	2930 <ctf_add_type_internal+0x24c>  // b.none
    28c8:	cbz	w28, 2918 <ctf_add_type_internal+0x234>
    28cc:	sub	w8, w22, #0x6
    28d0:	cmp	w8, #0x3
    28d4:	b.cs	2918 <ctf_add_type_internal+0x234>  // b.hs, b.nlast
    28d8:	ldur	x0, [x29, #-24]
    28dc:	mov	x1, x20
    28e0:	mov	x2, x19
    28e4:	mov	x3, x21
    28e8:	bl	0 <ctf_add_type_mapping>
    28ec:	b	2984 <ctf_add_type_internal+0x2a0>
    28f0:	mov	w23, wzr
    28f4:	mov	w22, wzr
    28f8:	mov	x28, #0xffffffffffffffff    	// #-1
    28fc:	cmp	w25, #0xe
    2900:	b.ls	2944 <ctf_add_type_internal+0x260>  // b.plast
    2904:	b	2a7c <ctf_add_type_internal+0x398>
    2908:	mov	w23, wzr
    290c:	mov	w22, wzr
    2910:	mov	x28, #0xffffffffffffffff    	// #-1
    2914:	b	2934 <ctf_add_type_internal+0x250>
    2918:	cmp	w22, #0x9
    291c:	b.ne	2a30 <ctf_add_type_internal+0x34c>  // b.any
    2920:	sub	w8, w25, #0x6
    2924:	cmp	w8, #0x3
    2928:	b.cs	2a30 <ctf_add_type_internal+0x34c>  // b.hs, b.nlast
    292c:	mov	w22, #0x9                   	// #9
    2930:	mov	x28, x21
    2934:	mov	w21, w26
    2938:	ldr	w26, [sp, #16]
    293c:	cmp	w25, #0xe
    2940:	b.hi	2a7c <ctf_add_type_internal+0x398>  // b.pmore
    2944:	mov	w8, #0x1                   	// #1
    2948:	lsl	w8, w8, w25
    294c:	mov	w9, #0x4006                	// #16390
    2950:	tst	w8, w9
    2954:	b.eq	2a7c <ctf_add_type_internal+0x398>  // b.none
    2958:	ldur	x0, [x29, #-24]
    295c:	add	x2, sp, #0x60
    2960:	mov	x1, x20
    2964:	bl	0 <ctf_type_encoding>
    2968:	cbz	w0, 29a8 <ctf_add_type_internal+0x2c4>
    296c:	ldur	x0, [x29, #-24]
    2970:	bl	0 <ctf_errno>
    2974:	mov	w1, w0
    2978:	mov	x0, x19
    297c:	bl	0 <ctf_set_errno>
    2980:	mov	x21, x0
    2984:	mov	x0, x21
    2988:	ldp	x20, x19, [sp, #272]
    298c:	ldp	x22, x21, [sp, #256]
    2990:	ldp	x24, x23, [sp, #240]
    2994:	ldp	x26, x25, [sp, #224]
    2998:	ldp	x28, x27, [sp, #208]
    299c:	ldp	x29, x30, [sp, #192]
    29a0:	add	sp, sp, #0x120
    29a4:	ret
    29a8:	cbz	w23, 2a7c <ctf_add_type_internal+0x398>
    29ac:	sub	x0, x29, #0x38
    29b0:	mov	x1, x28
    29b4:	str	w26, [sp, #16]
    29b8:	mov	w26, w21
    29bc:	stur	x19, [x29, #-56]
    29c0:	bl	0 <ctf_lookup_by_id>
    29c4:	cbz	x0, 3020 <ctf_add_type_internal+0x93c>
    29c8:	mov	x21, x0
    29cc:	add	x2, sp, #0x50
    29d0:	mov	x0, x19
    29d4:	mov	x1, x28
    29d8:	bl	0 <ctf_type_encoding>
    29dc:	cbnz	w0, 3020 <ctf_add_type_internal+0x93c>
    29e0:	ldur	x8, [x29, #-56]
    29e4:	ldr	w0, [x21, #4]
    29e8:	ldr	x8, [x8]
    29ec:	ldr	x8, [x8, #8]
    29f0:	blr	x8
    29f4:	ldr	x8, [sp, #96]
    29f8:	ldr	x9, [sp, #80]
    29fc:	ldr	w10, [sp, #104]
    2a00:	ldr	w11, [sp, #88]
    2a04:	eor	x8, x8, x9
    2a08:	eor	w9, w10, w11
    2a0c:	orr	x8, x8, x9
    2a10:	cmp	x8, #0x0
    2a14:	cset	w8, ne  // ne = any
    2a18:	tbnz	w0, #0, 2a54 <ctf_add_type_internal+0x370>
    2a1c:	cmp	w25, #0xe
    2a20:	mov	w21, w26
    2a24:	b.eq	2a78 <ctf_add_type_internal+0x394>  // b.none
    2a28:	cbz	w8, 2c4c <ctf_add_type_internal+0x568>
    2a2c:	b	2a78 <ctf_add_type_internal+0x394>
    2a30:	ldr	x1, [sp, #24]
    2a34:	adrp	x0, 0 <ctf_create>
    2a38:	add	x0, x0, #0x0
    2a3c:	mov	w2, w25
    2a40:	mov	x3, x21
    2a44:	mov	w4, w22
    2a48:	bl	0 <ctf_dprintf>
    2a4c:	mov	w1, #0x411                 	// #1041
    2a50:	b	2978 <ctf_add_type_internal+0x294>
    2a54:	cbz	w8, 2a6c <ctf_add_type_internal+0x388>
    2a58:	mov	w1, #0x411                 	// #1041
    2a5c:	mov	x0, x19
    2a60:	bl	0 <ctf_set_errno>
    2a64:	mov	x28, x0
    2a68:	b	2980 <ctf_add_type_internal+0x29c>
    2a6c:	mov	w21, w26
    2a70:	cmp	w25, #0xe
    2a74:	b.ne	2c4c <ctf_add_type_internal+0x568>  // b.any
    2a78:	ldr	w26, [sp, #16]
    2a7c:	ldur	x8, [x29, #-24]
    2a80:	stp	x20, xzr, [x29, #-48]
    2a84:	stp	x19, x28, [x29, #-80]
    2a88:	mov	w2, #0x1                   	// #1
    2a8c:	stp	xzr, x8, [x29, #-64]
    2a90:	ldr	x0, [x24, #696]
    2a94:	mov	x1, x20
    2a98:	bl	0 <ctf_dynhash_insert>
    2a9c:	tbnz	w0, #31, 2b08 <ctf_add_type_internal+0x424>
    2aa0:	sub	w8, w25, #0x1
    2aa4:	cmp	w8, #0xd
    2aa8:	b.hi	2b78 <ctf_add_type_internal+0x494>  // b.pmore
    2aac:	adrp	x9, 0 <ctf_create>
    2ab0:	add	x9, x9, #0x0
    2ab4:	adr	x10, 2ac4 <ctf_add_type_internal+0x3e0>
    2ab8:	ldrb	w11, [x9, x8]
    2abc:	add	x10, x10, x11, lsl #2
    2ac0:	br	x10
    2ac4:	ldur	x0, [x29, #-24]
    2ac8:	mov	x1, x20
    2acc:	bl	0 <ctf_type_reference>
    2ad0:	ldur	x1, [x29, #-24]
    2ad4:	mov	x2, x0
    2ad8:	mov	x0, x19
    2adc:	mov	x3, x24
    2ae0:	bl	26e4 <ctf_add_type_internal>
    2ae4:	cmn	x0, #0x1
    2ae8:	b.eq	3020 <ctf_add_type_internal+0x93c>  // b.none
    2aec:	ldr	w1, [sp, #20]
    2af0:	mov	x2, x0
    2af4:	mov	x0, x19
    2af8:	mov	w3, w25
    2afc:	bl	13c8 <ctf_add_reftype>
    2b00:	mov	x28, x0
    2b04:	b	2c44 <ctf_add_type_internal+0x560>
    2b08:	mov	w1, #0xc                   	// #12
    2b0c:	b	2978 <ctf_add_type_internal+0x294>
    2b10:	cmp	w22, #0x9
    2b14:	cset	w8, eq  // eq = none
    2b18:	eor	w9, w23, #0x1
    2b1c:	orr	w8, w8, w9
    2b20:	tbnz	w8, #0, 2e2c <ctf_add_type_internal+0x748>
    2b24:	ldur	x0, [x29, #-24]
    2b28:	mov	x1, x20
    2b2c:	bl	0 <ctf_type_size>
    2b30:	mov	x21, x0
    2b34:	mov	x0, x19
    2b38:	mov	x1, x28
    2b3c:	bl	0 <ctf_type_size>
    2b40:	ldur	x8, [x29, #-24]
    2b44:	cmp	x21, x0
    2b48:	ldr	x21, [sp, #24]
    2b4c:	b.ne	2ec0 <ctf_add_type_internal+0x7dc>  // b.any
    2b50:	adrp	x2, 0 <ctf_create>
    2b54:	add	x2, x2, #0x0
    2b58:	sub	x3, x29, #0x50
    2b5c:	mov	x0, x8
    2b60:	mov	x1, x20
    2b64:	bl	0 <ctf_member_iter>
    2b68:	cbz	w0, 2c44 <ctf_add_type_internal+0x560>
    2b6c:	adrp	x0, 0 <ctf_create>
    2b70:	add	x0, x0, #0x0
    2b74:	b	2d18 <ctf_add_type_internal+0x634>
    2b78:	mov	w1, #0x3ef                 	// #1007
    2b7c:	b	2978 <ctf_add_type_internal+0x294>
    2b80:	ldr	w21, [sp, #20]
    2b84:	ldr	x2, [sp, #24]
    2b88:	add	x4, sp, #0x38
    2b8c:	mov	w3, #0x1                   	// #1
    2b90:	mov	x0, x19
    2b94:	mov	w1, w21
    2b98:	bl	10a0 <ctf_add_generic>
    2b9c:	mov	x28, x0
    2ba0:	cmn	x0, #0x1
    2ba4:	b.eq	2c44 <ctf_add_type_internal+0x560>  // b.none
    2ba8:	ldr	x8, [sp, #56]
    2bac:	cmp	w21, #0x0
    2bb0:	mov	w9, #0x6000000             	// #100663296
    2bb4:	mov	w10, #0x4000000             	// #67108864
    2bb8:	b	2bf4 <ctf_add_type_internal+0x510>
    2bbc:	ldr	w21, [sp, #20]
    2bc0:	ldr	x2, [sp, #24]
    2bc4:	add	x4, sp, #0x38
    2bc8:	mov	w3, #0x2                   	// #2
    2bcc:	mov	x0, x19
    2bd0:	mov	w1, w21
    2bd4:	bl	10a0 <ctf_add_generic>
    2bd8:	mov	x28, x0
    2bdc:	cmn	x0, #0x1
    2be0:	b.eq	2c44 <ctf_add_type_internal+0x560>  // b.none
    2be4:	ldr	x8, [sp, #56]
    2be8:	cmp	w21, #0x0
    2bec:	mov	w9, #0xa000000             	// #167772160
    2bf0:	mov	w10, #0x8000000             	// #134217728
    2bf4:	csel	w9, w10, w9, eq  // eq = none
    2bf8:	str	w9, [x8, #28]
    2bfc:	ldr	w9, [sp, #104]
    2c00:	neg	w9, w9
    2c04:	and	w9, w9, #0xfffffff8
    2c08:	neg	w9, w9
    2c0c:	lsr	w9, w9, #3
    2c10:	sub	x9, x9, #0x1
    2c14:	orr	x9, x9, x9, lsr #1
    2c18:	orr	x9, x9, x9, lsr #2
    2c1c:	orr	x9, x9, x9, lsr #4
    2c20:	orr	x9, x9, x9, lsr #8
    2c24:	lsr	x10, x9, #16
    2c28:	orr	w9, w10, w9
    2c2c:	add	w9, w9, #0x1
    2c30:	str	w9, [x8, #32]
    2c34:	ldr	w9, [sp, #104]
    2c38:	ldr	x10, [sp, #96]
    2c3c:	str	w9, [x8, #56]
    2c40:	str	x10, [x8, #48]
    2c44:	cmn	x28, #0x1
    2c48:	b.eq	3020 <ctf_add_type_internal+0x93c>  // b.none
    2c4c:	ldur	x0, [x29, #-24]
    2c50:	mov	x1, x20
    2c54:	mov	x2, x19
    2c58:	mov	x3, x28
    2c5c:	bl	0 <ctf_add_type_mapping>
    2c60:	mov	x21, x28
    2c64:	b	2984 <ctf_add_type_internal+0x2a0>
    2c68:	ldur	x0, [x29, #-24]
    2c6c:	add	x2, sp, #0x38
    2c70:	mov	x1, x20
    2c74:	bl	0 <ctf_array_info>
    2c78:	ldur	x1, [x29, #-24]
    2c7c:	cbz	w0, 2f40 <ctf_add_type_internal+0x85c>
    2c80:	mov	x0, x1
    2c84:	b	2970 <ctf_add_type_internal+0x28c>
    2c88:	ldur	x1, [x29, #-24]
    2c8c:	ldr	w2, [x27, #8]
    2c90:	mov	x0, x19
    2c94:	mov	x3, x24
    2c98:	bl	26e4 <ctf_add_type_internal>
    2c9c:	cmn	x0, #0x1
    2ca0:	stp	x0, xzr, [sp, #56]
    2ca4:	b.eq	3020 <ctf_add_type_internal+0x93c>  // b.none
    2ca8:	ldr	w1, [sp, #20]
    2cac:	add	x2, sp, #0x38
    2cb0:	mov	x0, x19
    2cb4:	mov	x3, xzr
    2cb8:	bl	166c <ctf_add_function>
    2cbc:	b	2b00 <ctf_add_type_internal+0x41c>
    2cc0:	cmp	w22, #0x9
    2cc4:	cset	w8, eq  // eq = none
    2cc8:	eor	w9, w23, #0x1
    2ccc:	orr	w8, w8, w9
    2cd0:	tbnz	w8, #0, 2f00 <ctf_add_type_internal+0x81c>
    2cd4:	ldur	x0, [x29, #-24]
    2cd8:	adrp	x2, 0 <ctf_create>
    2cdc:	add	x2, x2, #0x0
    2ce0:	sub	x3, x29, #0x50
    2ce4:	mov	x1, x20
    2ce8:	bl	0 <ctf_enum_iter>
    2cec:	ldr	x21, [sp, #24]
    2cf0:	cbnz	w0, 2d10 <ctf_add_type_internal+0x62c>
    2cf4:	adrp	x2, 0 <ctf_create>
    2cf8:	add	x2, x2, #0x0
    2cfc:	sub	x3, x29, #0x38
    2d00:	mov	x0, x19
    2d04:	mov	x1, x28
    2d08:	bl	0 <ctf_enum_iter>
    2d0c:	cbz	w0, 2c44 <ctf_add_type_internal+0x560>
    2d10:	adrp	x0, 0 <ctf_create>
    2d14:	add	x0, x0, #0x0
    2d18:	mov	x1, x21
    2d1c:	mov	x2, x28
    2d20:	bl	0 <ctf_dprintf>
    2d24:	mov	w1, #0x411                 	// #1041
    2d28:	b	2978 <ctf_add_type_internal+0x294>
    2d2c:	cmn	x28, #0x1
    2d30:	b.ne	2c4c <ctf_add_type_internal+0x568>  // b.any
    2d34:	sub	w8, w21, #0x6
    2d38:	cmp	w8, #0x3
    2d3c:	b.cs	3080 <ctf_add_type_internal+0x99c>  // b.hs, b.nlast
    2d40:	ldr	x22, [sp, #24]
    2d44:	cbz	x22, 2d58 <ctf_add_type_internal+0x674>
    2d48:	mov	x0, x19
    2d4c:	mov	w1, w21
    2d50:	mov	x2, x22
    2d54:	bl	0 <ctf_lookup_by_rawname>
    2d58:	mov	w23, w21
    2d5c:	ldr	w21, [sp, #20]
    2d60:	add	x4, sp, #0x38
    2d64:	mov	w3, #0x9                   	// #9
    2d68:	mov	x0, x19
    2d6c:	mov	w1, w21
    2d70:	mov	x2, x22
    2d74:	bl	10a0 <ctf_add_generic>
    2d78:	mov	x28, x0
    2d7c:	cmn	x0, #0x1
    2d80:	b.eq	2c44 <ctf_add_type_internal+0x560>  // b.none
    2d84:	ldr	x8, [sp, #56]
    2d88:	cmp	w21, #0x0
    2d8c:	mov	w9, #0x26000000            	// #637534208
    2d90:	mov	w10, #0x24000000            	// #603979776
    2d94:	csel	w9, w10, w9, eq  // eq = none
    2d98:	stp	w9, w23, [x8, #28]
    2d9c:	b	2c44 <ctf_add_type_internal+0x560>
    2da0:	ldur	x0, [x29, #-24]
    2da4:	mov	x1, x20
    2da8:	bl	0 <ctf_type_reference>
    2dac:	ldur	x1, [x29, #-24]
    2db0:	mov	x2, x0
    2db4:	mov	x0, x19
    2db8:	mov	x3, x24
    2dbc:	bl	26e4 <ctf_add_type_internal>
    2dc0:	mov	x21, x0
    2dc4:	cmn	x0, #0x1
    2dc8:	b.eq	2984 <ctf_add_type_internal+0x2a0>  // b.none
    2dcc:	cmn	x28, #0x1
    2dd0:	b.ne	2c4c <ctf_add_type_internal+0x568>  // b.any
    2dd4:	mov	w8, #0xffffffff            	// #-1
    2dd8:	cmp	x21, x8
    2ddc:	str	x19, [sp, #32]
    2de0:	b.cc	3090 <ctf_add_type_internal+0x9ac>  // b.lo, b.ul, b.last
    2de4:	mov	w1, #0x16                  	// #22
    2de8:	b	3084 <ctf_add_type_internal+0x9a0>
    2dec:	ldur	x0, [x29, #-24]
    2df0:	mov	x1, x20
    2df4:	bl	0 <ctf_type_reference>
    2df8:	ldur	x1, [x29, #-24]
    2dfc:	mov	x2, x0
    2e00:	mov	x0, x19
    2e04:	mov	x3, x24
    2e08:	bl	26e4 <ctf_add_type_internal>
    2e0c:	cmn	x0, #0x1
    2e10:	b.eq	3020 <ctf_add_type_internal+0x93c>  // b.none
    2e14:	ldr	w1, [sp, #20]
    2e18:	mov	x2, x0
    2e1c:	add	x3, sp, #0x60
    2e20:	mov	x0, x19
    2e24:	bl	f58 <ctf_add_slice>
    2e28:	b	2b00 <ctf_add_type_internal+0x41c>
    2e2c:	ldr	w22, [sp, #20]
    2e30:	ldr	x2, [sp, #24]
    2e34:	add	x4, sp, #0x38
    2e38:	mov	x0, x19
    2e3c:	mov	w1, w22
    2e40:	mov	w3, w25
    2e44:	bl	10a0 <ctf_add_generic>
    2e48:	cmn	x0, #0x1
    2e4c:	b.eq	3020 <ctf_add_type_internal+0x93c>  // b.none
    2e50:	mov	x28, x0
    2e54:	ldr	x23, [sp, #56]
    2e58:	ldur	x0, [x29, #-24]
    2e5c:	mov	x1, x20
    2e60:	mov	x2, x19
    2e64:	mov	x3, x28
    2e68:	stp	x28, x23, [x29, #-72]
    2e6c:	bl	0 <ctf_add_type_mapping>
    2e70:	ldur	x0, [x29, #-24]
    2e74:	adrp	x2, 0 <ctf_create>
    2e78:	add	x2, x2, #0x0
    2e7c:	sub	x3, x29, #0x50
    2e80:	mov	x1, x20
    2e84:	bl	0 <ctf_member_iter>
    2e88:	ldur	x8, [x29, #-24]
    2e8c:	cmp	w0, #0x0
    2e90:	mov	x1, x20
    2e94:	cset	w21, ne  // ne = any
    2e98:	mov	x0, x8
    2e9c:	bl	0 <ctf_type_size>
    2ea0:	tbnz	x0, #63, 3020 <ctf_add_type_internal+0x93c>
    2ea4:	mov	w8, #0xffffffff            	// #-1
    2ea8:	cmp	x0, x8
    2eac:	b.cc	2ff8 <ctf_add_type_internal+0x914>  // b.lo, b.ul, b.last
    2eb0:	lsr	x9, x0, #32
    2eb4:	stp	w8, w9, [x23, #32]
    2eb8:	str	w0, [x23, #40]
    2ebc:	b	2ffc <ctf_add_type_internal+0x918>
    2ec0:	mov	x0, x8
    2ec4:	mov	x1, x20
    2ec8:	bl	0 <ctf_type_size>
    2ecc:	mov	x20, x0
    2ed0:	mov	x0, x19
    2ed4:	mov	x1, x28
    2ed8:	bl	0 <ctf_type_size>
    2edc:	mov	x4, x0
    2ee0:	adrp	x0, 0 <ctf_create>
    2ee4:	add	x0, x0, #0x0
    2ee8:	mov	x1, x21
    2eec:	mov	x2, x28
    2ef0:	mov	x3, x20
    2ef4:	bl	0 <ctf_dprintf>
    2ef8:	mov	w1, #0x411                 	// #1041
    2efc:	b	2978 <ctf_add_type_internal+0x294>
    2f00:	ldr	w1, [sp, #20]
    2f04:	ldr	x2, [sp, #24]
    2f08:	mov	x0, x19
    2f0c:	bl	1b0c <ctf_add_enum>
    2f10:	cmn	x0, #0x1
    2f14:	stur	x0, [x29, #-72]
    2f18:	b.eq	3020 <ctf_add_type_internal+0x93c>  // b.none
    2f1c:	mov	x28, x0
    2f20:	ldur	x0, [x29, #-24]
    2f24:	adrp	x2, 0 <ctf_create>
    2f28:	add	x2, x2, #0x0
    2f2c:	sub	x3, x29, #0x50
    2f30:	mov	x1, x20
    2f34:	bl	0 <ctf_enum_iter>
    2f38:	cbnz	w0, 3020 <ctf_add_type_internal+0x93c>
    2f3c:	b	2c4c <ctf_add_type_internal+0x568>
    2f40:	ldr	x2, [sp, #56]
    2f44:	mov	x0, x19
    2f48:	mov	x3, x24
    2f4c:	bl	26e4 <ctf_add_type_internal>
    2f50:	ldur	x1, [x29, #-24]
    2f54:	ldr	x2, [sp, #64]
    2f58:	str	x0, [sp, #56]
    2f5c:	mov	x0, x19
    2f60:	mov	x3, x24
    2f64:	bl	26e4 <ctf_add_type_internal>
    2f68:	cmn	x0, #0x1
    2f6c:	mov	x21, #0xffffffffffffffff    	// #-1
    2f70:	str	x0, [sp, #64]
    2f74:	b.eq	2984 <ctf_add_type_internal+0x2a0>  // b.none
    2f78:	ldr	x1, [sp, #56]
    2f7c:	ldr	w22, [sp, #20]
    2f80:	cmn	x1, #0x1
    2f84:	b.eq	2984 <ctf_add_type_internal+0x2a0>  // b.none
    2f88:	cbz	w23, 30e4 <ctf_add_type_internal+0xa00>
    2f8c:	add	x2, sp, #0x20
    2f90:	mov	x0, x19
    2f94:	mov	x1, x28
    2f98:	bl	0 <ctf_array_info>
    2f9c:	cbnz	w0, 3020 <ctf_add_type_internal+0x93c>
    2fa0:	ldp	x8, x9, [sp, #56]
    2fa4:	ldp	x10, x11, [sp, #32]
    2fa8:	ldr	x12, [sp, #72]
    2fac:	ldr	x13, [sp, #48]
    2fb0:	eor	x8, x8, x10
    2fb4:	eor	x9, x9, x11
    2fb8:	eor	x10, x12, x13
    2fbc:	orr	x8, x8, x9
    2fc0:	orr	x8, x8, x10
    2fc4:	cbz	x8, 2c44 <ctf_add_type_internal+0x560>
    2fc8:	ldp	x3, x4, [sp, #56]
    2fcc:	ldr	w5, [sp, #72]
    2fd0:	ldp	x6, x7, [sp, #32]
    2fd4:	ldr	w8, [sp, #48]
    2fd8:	ldr	x1, [sp, #24]
    2fdc:	adrp	x0, 0 <ctf_create>
    2fe0:	add	x0, x0, #0x0
    2fe4:	mov	x2, x28
    2fe8:	str	w8, [sp]
    2fec:	bl	0 <ctf_dprintf>
    2ff0:	mov	w1, #0x411                 	// #1041
    2ff4:	b	2978 <ctf_add_type_internal+0x294>
    2ff8:	str	w0, [x23, #32]
    2ffc:	cmp	w22, #0x0
    3000:	ldr	x22, [x23, #56]
    3004:	lsl	w8, w25, #26
    3008:	cset	w9, ne  // ne = any
    300c:	bfi	w8, w9, #25, #1
    3010:	bfxil	w8, w26, #0, #24
    3014:	str	w8, [x23, #28]
    3018:	cbnz	x22, 3034 <ctf_add_type_internal+0x950>
    301c:	cbz	w21, 2c44 <ctf_add_type_internal+0x560>
    3020:	mov	x21, #0xffffffffffffffff    	// #-1
    3024:	b	2984 <ctf_add_type_internal+0x2a0>
    3028:	str	x0, [x22, #24]
    302c:	ldr	x22, [x22, #8]
    3030:	cbz	x22, 301c <ctf_add_type_internal+0x938>
    3034:	str	x19, [sp, #32]
    3038:	ldur	x0, [x29, #-24]
    303c:	ldr	x1, [x22, #24]
    3040:	add	x2, sp, #0x20
    3044:	bl	0 <ctf_type_mapping>
    3048:	cbnz	x0, 3028 <ctf_add_type_internal+0x944>
    304c:	ldur	x1, [x29, #-24]
    3050:	ldr	x2, [x22, #24]
    3054:	mov	x0, x19
    3058:	mov	x3, x24
    305c:	bl	26e4 <ctf_add_type_internal>
    3060:	cmn	x0, #0x1
    3064:	str	x0, [x22, #24]
    3068:	b.ne	302c <ctf_add_type_internal+0x948>  // b.any
    306c:	mov	x0, x19
    3070:	bl	0 <ctf_errno>
    3074:	cmp	w0, #0x41b
    3078:	cinc	w21, w21, ne  // ne = any
    307c:	b	302c <ctf_add_type_internal+0x948>
    3080:	mov	w1, #0x3fd                 	// #1021
    3084:	mov	x0, x19
    3088:	bl	0 <ctf_set_errno>
    308c:	b	2b00 <ctf_add_type_internal+0x41c>
    3090:	add	x0, sp, #0x20
    3094:	mov	x1, x21
    3098:	bl	0 <ctf_lookup_by_id>
    309c:	cbz	x0, 3158 <ctf_add_type_internal+0xa74>
    30a0:	ldr	w22, [sp, #20]
    30a4:	ldr	x2, [sp, #24]
    30a8:	add	x4, sp, #0x38
    30ac:	mov	w3, #0xa                   	// #10
    30b0:	mov	x0, x19
    30b4:	mov	w1, w22
    30b8:	bl	10a0 <ctf_add_generic>
    30bc:	mov	x28, x0
    30c0:	cmn	x0, #0x1
    30c4:	b.eq	2c44 <ctf_add_type_internal+0x560>  // b.none
    30c8:	ldr	x8, [sp, #56]
    30cc:	cmp	w22, #0x0
    30d0:	mov	w9, #0x2a000000            	// #704643072
    30d4:	mov	w10, #0x28000000            	// #671088640
    30d8:	csel	w9, w10, w9, eq  // eq = none
    30dc:	stp	w9, w21, [x8, #28]
    30e0:	b	2c44 <ctf_add_type_internal+0x560>
    30e4:	sub	x0, x29, #0x10
    30e8:	stur	x19, [x29, #-16]
    30ec:	bl	0 <ctf_lookup_by_id>
    30f0:	cbz	x0, 3158 <ctf_add_type_internal+0xa74>
    30f4:	ldr	x1, [sp, #64]
    30f8:	sub	x0, x29, #0x10
    30fc:	stur	x19, [x29, #-16]
    3100:	bl	0 <ctf_lookup_by_id>
    3104:	cbz	x0, 3158 <ctf_add_type_internal+0xa74>
    3108:	add	x4, sp, #0x20
    310c:	mov	w3, #0x4                   	// #4
    3110:	mov	x0, x19
    3114:	mov	w1, w22
    3118:	mov	x2, xzr
    311c:	bl	10a0 <ctf_add_generic>
    3120:	mov	x28, x0
    3124:	cmn	x0, #0x1
    3128:	b.eq	2c44 <ctf_add_type_internal+0x560>  // b.none
    312c:	ldr	x8, [sp, #32]
    3130:	cmp	w22, #0x0
    3134:	mov	w9, #0x12000000            	// #301989888
    3138:	mov	w10, #0x10000000            	// #268435456
    313c:	csel	w9, w10, w9, eq  // eq = none
    3140:	stp	w9, wzr, [x8, #28]
    3144:	ldr	x9, [sp, #72]
    3148:	ldur	q0, [sp, #56]
    314c:	str	x9, [x8, #64]
    3150:	str	q0, [x8, #48]
    3154:	b	2c44 <ctf_add_type_internal+0x560>
    3158:	mov	x28, #0xffffffffffffffff    	// #-1
    315c:	b	2c44 <ctf_add_type_internal+0x560>

0000000000003160 <ctf_gzwrite>:
    3160:	stp	x29, x30, [sp, #-48]!
    3164:	stp	x22, x21, [sp, #16]
    3168:	stp	x20, x19, [sp, #32]
    316c:	ldr	x21, [x0, #8]
    3170:	mov	x20, x1
    3174:	mov	x19, x0
    3178:	mov	w22, #0x34                  	// #52
    317c:	mov	x29, sp
    3180:	mov	x0, x20
    3184:	mov	x1, x21
    3188:	mov	w2, w22
    318c:	bl	0 <gzwrite>
    3190:	cmp	w0, #0x0
    3194:	b.le	31e4 <ctf_gzwrite+0x84>
    3198:	sxtw	x8, w0
    319c:	subs	x22, x22, x8
    31a0:	add	x21, x21, x8
    31a4:	b.ne	3180 <ctf_gzwrite+0x20>  // b.any
    31a8:	ldr	x21, [x19, #416]
    31ac:	cbz	x21, 31dc <ctf_gzwrite+0x7c>
    31b0:	ldr	x22, [x19, #408]
    31b4:	mov	x0, x20
    31b8:	mov	x1, x22
    31bc:	mov	w2, w21
    31c0:	bl	0 <gzwrite>
    31c4:	cmp	w0, #0x0
    31c8:	b.le	31e4 <ctf_gzwrite+0x84>
    31cc:	sxtw	x8, w0
    31d0:	subs	x21, x21, x8
    31d4:	add	x22, x22, x8
    31d8:	b.ne	31b4 <ctf_gzwrite+0x54>  // b.any
    31dc:	mov	w0, wzr
    31e0:	b	31f4 <ctf_gzwrite+0x94>
    31e4:	bl	0 <__errno_location>
    31e8:	ldr	w1, [x0]
    31ec:	mov	x0, x19
    31f0:	bl	0 <ctf_set_errno>
    31f4:	ldp	x20, x19, [sp, #32]
    31f8:	ldp	x22, x21, [sp, #16]
    31fc:	ldp	x29, x30, [sp], #48
    3200:	ret

0000000000003204 <ctf_compress_write>:
    3204:	sub	sp, sp, #0x90
    3208:	stp	x29, x30, [sp, #80]
    320c:	stp	x24, x23, [sp, #96]
    3210:	stp	x22, x21, [sp, #112]
    3214:	stp	x20, x19, [sp, #128]
    3218:	add	x29, sp, #0x50
    321c:	mov	w21, w1
    3220:	mov	x19, x0
    3224:	bl	2c0 <ctf_serialize>
    3228:	tbnz	w0, #31, 3298 <ctf_compress_write+0x94>
    322c:	ldr	x8, [x19, #8]
    3230:	ldp	q0, q1, [x8]
    3234:	ldr	q2, [x8, #32]
    3238:	ldr	w8, [x8, #48]
    323c:	stp	q0, q1, [sp, #16]
    3240:	ldrb	w9, [sp, #19]
    3244:	str	w8, [sp, #64]
    3248:	str	q2, [sp, #48]
    324c:	orr	w8, w9, #0x1
    3250:	strb	w8, [sp, #19]
    3254:	ldr	x0, [x19, #416]
    3258:	bl	0 <compressBound>
    325c:	str	x0, [sp, #8]
    3260:	bl	0 <malloc>
    3264:	cbz	x0, 32a0 <ctf_compress_write+0x9c>
    3268:	ldp	x2, x3, [x19, #408]
    326c:	add	x1, sp, #0x8
    3270:	mov	x20, x0
    3274:	bl	0 <compress>
    3278:	cbz	w0, 32b4 <ctf_compress_write+0xb0>
    327c:	bl	0 <zError>
    3280:	mov	x1, x0
    3284:	adrp	x0, 0 <ctf_create>
    3288:	add	x0, x0, #0x0
    328c:	bl	0 <ctf_dprintf>
    3290:	mov	w1, #0x413                 	// #1043
    3294:	b	332c <ctf_compress_write+0x128>
    3298:	mov	w19, #0xffffffff            	// #-1
    329c:	b	3340 <ctf_compress_write+0x13c>
    32a0:	mov	w1, #0x3f6                 	// #1014
    32a4:	mov	x0, x19
    32a8:	bl	0 <ctf_set_errno>
    32ac:	mov	x19, x0
    32b0:	b	3340 <ctf_compress_write+0x13c>
    32b4:	add	x22, sp, #0x10
    32b8:	mov	w24, #0x34                  	// #52
    32bc:	mov	w23, #0x34                  	// #52
    32c0:	mov	w0, w21
    32c4:	mov	x1, x22
    32c8:	mov	x2, x23
    32cc:	bl	0 <write>
    32d0:	tbnz	x0, #63, 3324 <ctf_compress_write+0x120>
    32d4:	sub	x23, x23, x0
    32d8:	cmp	x23, #0x0
    32dc:	madd	x22, x0, x24, x22
    32e0:	b.gt	32c0 <ctf_compress_write+0xbc>
    32e4:	ldr	x2, [sp, #8]
    32e8:	cmp	x2, #0x1
    32ec:	b.lt	331c <ctf_compress_write+0x118>  // b.tstop
    32f0:	mov	x22, x20
    32f4:	mov	w0, w21
    32f8:	mov	x1, x22
    32fc:	bl	0 <write>
    3300:	tbnz	x0, #63, 3324 <ctf_compress_write+0x120>
    3304:	ldr	x8, [sp, #8]
    3308:	add	x22, x22, x0
    330c:	sub	x2, x8, x0
    3310:	cmp	x2, #0x0
    3314:	str	x2, [sp, #8]
    3318:	b.gt	32f4 <ctf_compress_write+0xf0>
    331c:	mov	w19, wzr
    3320:	b	3338 <ctf_compress_write+0x134>
    3324:	bl	0 <__errno_location>
    3328:	ldr	w1, [x0]
    332c:	mov	x0, x19
    3330:	bl	0 <ctf_set_errno>
    3334:	mov	x19, x0
    3338:	mov	x0, x20
    333c:	bl	0 <free>
    3340:	mov	w0, w19
    3344:	ldp	x20, x19, [sp, #128]
    3348:	ldp	x22, x21, [sp, #112]
    334c:	ldp	x24, x23, [sp, #96]
    3350:	ldp	x29, x30, [sp, #80]
    3354:	add	sp, sp, #0x90
    3358:	ret

000000000000335c <ctf_write_mem>:
    335c:	stp	x29, x30, [sp, #-64]!
    3360:	str	x23, [sp, #16]
    3364:	stp	x22, x21, [sp, #32]
    3368:	stp	x20, x19, [sp, #48]
    336c:	mov	x29, sp
    3370:	mov	x22, x2
    3374:	mov	x21, x1
    3378:	mov	x20, x0
    337c:	bl	2c0 <ctf_serialize>
    3380:	tbnz	w0, #31, 3400 <ctf_write_mem+0xa4>
    3384:	ldr	x0, [x20, #416]
    3388:	bl	0 <compressBound>
    338c:	ldr	x8, [x20, #416]
    3390:	cmp	x8, x22
    3394:	csel	x8, x8, x0, cc  // cc = lo, ul, last
    3398:	add	x0, x8, #0x34
    339c:	str	x8, [x29, #24]
    33a0:	bl	0 <malloc>
    33a4:	mov	x19, x0
    33a8:	cbz	x0, 3408 <ctf_write_mem+0xac>
    33ac:	ldr	x8, [x20, #8]
    33b0:	add	x0, x19, #0x34
    33b4:	ldp	q2, q0, [x8, #16]
    33b8:	ldr	w9, [x8, #48]
    33bc:	ldr	q1, [x8]
    33c0:	mov	w8, #0x34                  	// #52
    33c4:	stp	q2, q0, [x19, #16]
    33c8:	str	w9, [x19, #48]
    33cc:	str	q1, [x19]
    33d0:	str	x8, [x21]
    33d4:	ldr	x23, [x20, #416]
    33d8:	ldrb	w8, [x19, #3]
    33dc:	cmp	x23, x22
    33e0:	b.cs	3418 <ctf_write_mem+0xbc>  // b.hs, b.nlast
    33e4:	and	w8, w8, #0xfe
    33e8:	strb	w8, [x19, #3]
    33ec:	ldr	x1, [x20, #408]
    33f0:	mov	x2, x23
    33f4:	bl	0 <memcpy>
    33f8:	add	x8, x23, #0x34
    33fc:	b	3470 <ctf_write_mem+0x114>
    3400:	mov	x19, xzr
    3404:	b	3474 <ctf_write_mem+0x118>
    3408:	mov	w1, #0xc                   	// #12
    340c:	mov	x0, x20
    3410:	bl	0 <ctf_set_errno>
    3414:	b	3474 <ctf_write_mem+0x118>
    3418:	orr	w8, w8, #0x1
    341c:	strb	w8, [x19, #3]
    3420:	ldr	x2, [x20, #408]
    3424:	add	x1, x29, #0x18
    3428:	mov	x3, x23
    342c:	bl	0 <compress>
    3430:	cbz	w0, 3464 <ctf_write_mem+0x108>
    3434:	bl	0 <zError>
    3438:	mov	x1, x0
    343c:	adrp	x0, 0 <ctf_create>
    3440:	add	x0, x0, #0x0
    3444:	bl	0 <ctf_dprintf>
    3448:	mov	w1, #0x413                 	// #1043
    344c:	mov	x0, x20
    3450:	bl	0 <ctf_set_errno>
    3454:	mov	x0, x19
    3458:	bl	0 <free>
    345c:	mov	x19, xzr
    3460:	b	3474 <ctf_write_mem+0x118>
    3464:	ldr	x8, [x29, #24]
    3468:	ldr	x9, [x21]
    346c:	add	x8, x9, x8
    3470:	str	x8, [x21]
    3474:	mov	x0, x19
    3478:	ldp	x20, x19, [sp, #48]
    347c:	ldp	x22, x21, [sp, #32]
    3480:	ldr	x23, [sp, #16]
    3484:	ldp	x29, x30, [sp], #64
    3488:	ret

000000000000348c <ctf_write>:
    348c:	stp	x29, x30, [sp, #-48]!
    3490:	stp	x22, x21, [sp, #16]
    3494:	stp	x20, x19, [sp, #32]
    3498:	mov	x29, sp
    349c:	mov	w20, w1
    34a0:	mov	x19, x0
    34a4:	bl	2c0 <ctf_serialize>
    34a8:	tbnz	w0, #31, 3524 <ctf_write+0x98>
    34ac:	ldr	x21, [x19, #8]
    34b0:	mov	w22, #0x34                  	// #52
    34b4:	mov	w0, w20
    34b8:	mov	x1, x21
    34bc:	mov	x2, x22
    34c0:	bl	0 <write>
    34c4:	cmp	x0, #0x0
    34c8:	b.le	3510 <ctf_write+0x84>
    34cc:	subs	x22, x22, x0
    34d0:	add	x21, x21, x0
    34d4:	b.ne	34b4 <ctf_write+0x28>  // b.any
    34d8:	ldr	x21, [x19, #416]
    34dc:	cbz	x21, 3508 <ctf_write+0x7c>
    34e0:	ldr	x22, [x19, #408]
    34e4:	mov	w0, w20
    34e8:	mov	x1, x22
    34ec:	mov	x2, x21
    34f0:	bl	0 <write>
    34f4:	cmp	x0, #0x0
    34f8:	b.le	3510 <ctf_write+0x84>
    34fc:	subs	x21, x21, x0
    3500:	add	x22, x22, x0
    3504:	b.ne	34e4 <ctf_write+0x58>  // b.any
    3508:	mov	w0, wzr
    350c:	b	3528 <ctf_write+0x9c>
    3510:	bl	0 <__errno_location>
    3514:	ldr	w1, [x0]
    3518:	mov	x0, x19
    351c:	bl	0 <ctf_set_errno>
    3520:	b	3528 <ctf_write+0x9c>
    3524:	mov	w0, #0xffffffff            	// #-1
    3528:	ldp	x20, x19, [sp, #32]
    352c:	ldp	x22, x21, [sp, #16]
    3530:	ldp	x29, x30, [sp], #48
    3534:	ret

0000000000003538 <membcmp>:
    3538:	sub	sp, sp, #0x40
    353c:	stp	x29, x30, [sp, #16]
    3540:	str	x21, [sp, #32]
    3544:	stp	x20, x19, [sp, #48]
    3548:	ldp	x8, x1, [x3]
    354c:	mov	x19, x0
    3550:	mov	x21, x3
    3554:	mov	x20, x2
    3558:	mov	x3, sp
    355c:	mov	x0, x8
    3560:	mov	x2, x19
    3564:	add	x29, sp, #0x10
    3568:	bl	0 <ctf_member_info>
    356c:	tbnz	w0, #31, 3584 <membcmp+0x4c>
    3570:	ldr	x2, [sp, #8]
    3574:	cmp	x2, x20
    3578:	b.ne	35a8 <membcmp+0x70>  // b.any
    357c:	mov	w0, wzr
    3580:	b	35c0 <membcmp+0x88>
    3584:	ldr	x0, [x21]
    3588:	bl	0 <ctf_errno>
    358c:	bl	0 <ctf_errmsg>
    3590:	mov	x2, x0
    3594:	adrp	x0, 0 <ctf_create>
    3598:	add	x0, x0, #0x0
    359c:	mov	x1, x19
    35a0:	bl	0 <ctf_dprintf>
    35a4:	b	35bc <membcmp+0x84>
    35a8:	adrp	x0, 0 <ctf_create>
    35ac:	add	x0, x0, #0x0
    35b0:	mov	x1, x19
    35b4:	mov	x3, x20
    35b8:	bl	0 <ctf_dprintf>
    35bc:	mov	w0, #0x1                   	// #1
    35c0:	ldp	x20, x19, [sp, #48]
    35c4:	ldr	x21, [sp, #32]
    35c8:	ldp	x29, x30, [sp, #16]
    35cc:	add	sp, sp, #0x40
    35d0:	ret

00000000000035d4 <membadd>:
    35d4:	stp	x29, x30, [sp, #-64]!
    35d8:	str	x23, [sp, #16]
    35dc:	mov	x23, x0
    35e0:	mov	w0, #0x30                  	// #48
    35e4:	stp	x22, x21, [sp, #32]
    35e8:	stp	x20, x19, [sp, #48]
    35ec:	mov	x29, sp
    35f0:	mov	x19, x3
    35f4:	mov	x21, x2
    35f8:	mov	x22, x1
    35fc:	bl	0 <malloc>
    3600:	cbz	x0, 3620 <membadd+0x4c>
    3604:	mov	x20, x0
    3608:	cbz	x23, 3630 <membadd+0x5c>
    360c:	mov	x0, x23
    3610:	bl	0 <strdup>
    3614:	cbnz	x0, 3634 <membadd+0x60>
    3618:	mov	x0, x20
    361c:	bl	0 <free>
    3620:	ldr	x0, [x19]
    3624:	mov	w1, #0xb                   	// #11
    3628:	bl	0 <ctf_set_errno>
    362c:	b	3668 <membadd+0x94>
    3630:	mov	x0, xzr
    3634:	mov	w8, #0xffffffff            	// #-1
    3638:	stp	x0, x22, [x20, #16]
    363c:	str	x21, [x20, #32]
    3640:	str	w8, [x20, #40]
    3644:	ldr	x8, [x19, #16]
    3648:	mov	x1, x20
    364c:	add	x0, x8, #0x30
    3650:	bl	0 <ctf_list_append>
    3654:	ldr	x8, [x19]
    3658:	mov	w0, wzr
    365c:	ldr	w9, [x8, #552]
    3660:	orr	w9, w9, #0x4
    3664:	str	w9, [x8, #552]
    3668:	ldp	x20, x19, [sp, #48]
    366c:	ldp	x22, x21, [sp, #32]
    3670:	ldr	x23, [sp, #16]
    3674:	ldp	x29, x30, [sp], #64
    3678:	ret

000000000000367c <enumcmp>:
    367c:	stp	x29, x30, [sp, #-48]!
    3680:	str	x21, [sp, #16]
    3684:	stp	x20, x19, [sp, #32]
    3688:	mov	w20, w1
    368c:	ldp	x8, x1, [x2]
    3690:	mov	x29, sp
    3694:	mov	x19, x0
    3698:	mov	x21, x2
    369c:	add	x3, x29, #0x1c
    36a0:	mov	x0, x8
    36a4:	mov	x2, x19
    36a8:	bl	0 <ctf_enum_value>
    36ac:	tbnz	w0, #31, 36c4 <enumcmp+0x48>
    36b0:	ldr	w2, [x29, #28]
    36b4:	cmp	w2, w20
    36b8:	b.ne	36e8 <enumcmp+0x6c>  // b.any
    36bc:	mov	w0, wzr
    36c0:	b	36fc <enumcmp+0x80>
    36c4:	ldr	x0, [x21]
    36c8:	bl	0 <ctf_errno>
    36cc:	bl	0 <ctf_errmsg>
    36d0:	mov	x2, x0
    36d4:	adrp	x0, 0 <ctf_create>
    36d8:	add	x0, x0, #0x0
    36dc:	mov	x1, x19
    36e0:	bl	0 <ctf_dprintf>
    36e4:	b	36f8 <enumcmp+0x7c>
    36e8:	adrp	x0, 0 <ctf_create>
    36ec:	add	x0, x0, #0x0
    36f0:	mov	w1, w20
    36f4:	bl	0 <ctf_dprintf>
    36f8:	mov	w0, #0x1                   	// #1
    36fc:	ldp	x20, x19, [sp, #32]
    3700:	ldr	x21, [sp, #16]
    3704:	ldp	x29, x30, [sp], #48
    3708:	ret

000000000000370c <enumadd>:
    370c:	stp	x29, x30, [sp, #-16]!
    3710:	mov	w3, w1
    3714:	ldp	x8, x1, [x2]
    3718:	mov	x2, x0
    371c:	mov	x29, sp
    3720:	mov	x0, x8
    3724:	bl	1fdc <ctf_add_enumerator>
    3728:	lsr	w0, w0, #31
    372c:	ldp	x29, x30, [sp], #16
    3730:	ret

ctf-decl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_decl_init>:
   0:	movi	v0.2d, #0x0
   4:	mov	x8, #0xffffffffffffffff    	// #-1
   8:	str	xzr, [x0, #96]
   c:	stp	q0, q0, [x0, #64]
  10:	stp	q0, q0, [x0, #32]
  14:	stp	q0, q0, [x0]
  18:	stp	x8, x8, [x0, #64]
  1c:	str	xzr, [x0, #80]
  20:	ret

0000000000000024 <ctf_decl_fini>:
  24:	stp	x29, x30, [sp, #-32]!
  28:	stp	x20, x19, [sp, #16]
  2c:	mov	x19, x0
  30:	ldr	x0, [x0, #8]
  34:	mov	x29, sp
  38:	cbz	x0, 4c <ctf_decl_fini+0x28>
  3c:	ldr	x20, [x0, #8]
  40:	bl	0 <free>
  44:	mov	x0, x20
  48:	cbnz	x20, 3c <ctf_decl_fini+0x18>
  4c:	ldr	x0, [x19, #24]
  50:	cbz	x0, 64 <ctf_decl_fini+0x40>
  54:	ldr	x20, [x0, #8]
  58:	bl	0 <free>
  5c:	mov	x0, x20
  60:	cbnz	x20, 54 <ctf_decl_fini+0x30>
  64:	ldr	x0, [x19, #40]
  68:	cbz	x0, 7c <ctf_decl_fini+0x58>
  6c:	ldr	x20, [x0, #8]
  70:	bl	0 <free>
  74:	mov	x0, x20
  78:	cbnz	x20, 6c <ctf_decl_fini+0x48>
  7c:	ldr	x0, [x19, #56]
  80:	cbz	x0, 94 <ctf_decl_fini+0x70>
  84:	ldr	x19, [x0, #8]
  88:	bl	0 <free>
  8c:	mov	x0, x19
  90:	cbnz	x19, 84 <ctf_decl_fini+0x60>
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret

00000000000000a0 <ctf_decl_push>:
  a0:	sub	sp, sp, #0x70
  a4:	stp	x29, x30, [sp, #32]
  a8:	add	x29, sp, #0x20
  ac:	stp	x20, x19, [sp, #96]
  b0:	mov	x19, x0
  b4:	str	x1, [x29, #24]
  b8:	add	x0, x29, #0x18
  bc:	mov	x1, x2
  c0:	str	x25, [sp, #48]
  c4:	stp	x24, x23, [sp, #64]
  c8:	stp	x22, x21, [sp, #80]
  cc:	mov	x21, x2
  d0:	bl	0 <ctf_lookup_by_id>
  d4:	ldr	x8, [x29, #24]
  d8:	cbz	x0, 144 <ctf_decl_push+0xa4>
  dc:	ldr	x8, [x8]
  e0:	mov	x22, x0
  e4:	ldr	w0, [x0, #4]
  e8:	ldr	x8, [x8]
  ec:	blr	x8
  f0:	sub	w8, w0, #0x3
  f4:	mov	w20, w0
  f8:	mov	w23, wzr
  fc:	cmp	w8, #0xb
 100:	mov	w25, #0x1                   	// #1
 104:	b.hi	218 <ctf_decl_push+0x178>  // b.pmore
 108:	adrp	x9, 0 <ctf_decl_init>
 10c:	add	x9, x9, #0x0
 110:	adr	x10, 124 <ctf_decl_push+0x84>
 114:	ldrb	w11, [x9, x8]
 118:	add	x10, x10, x11, lsl #2
 11c:	mov	w24, w23
 120:	br	x10
 124:	ldr	x1, [x29, #24]
 128:	ldr	w2, [x22, #8]
 12c:	mov	x0, x19
 130:	bl	a0 <ctf_decl_push>
 134:	ldr	w24, [x19, #80]
 138:	mov	w25, #0x1                   	// #1
 13c:	mov	w23, #0x1                   	// #1
 140:	b	21c <ctf_decl_push+0x17c>
 144:	ldr	w8, [x8, #556]
 148:	str	w8, [x19, #96]
 14c:	b	298 <ctf_decl_push+0x1f8>
 150:	ldr	x1, [x29, #24]
 154:	ldr	w2, [x22, #8]
 158:	mov	x0, x19
 15c:	bl	a0 <ctf_decl_push>
 160:	mov	w23, wzr
 164:	mov	w25, #0x1                   	// #1
 168:	mov	w24, #0x1                   	// #1
 16c:	b	21c <ctf_decl_push+0x17c>
 170:	ldr	x0, [x29, #24]
 174:	add	x2, sp, #0x8
 178:	mov	x1, x21
 17c:	bl	0 <ctf_array_info>
 180:	ldr	x1, [x29, #24]
 184:	ldr	x2, [sp, #8]
 188:	mov	x0, x19
 18c:	bl	a0 <ctf_decl_push>
 190:	ldr	w25, [sp, #24]
 194:	mov	w23, wzr
 198:	mov	w24, #0x2                   	// #2
 19c:	b	21c <ctf_decl_push+0x17c>
 1a0:	ldr	x1, [x29, #24]
 1a4:	ldr	w2, [x22, #8]
 1a8:	mov	x0, x19
 1ac:	bl	a0 <ctf_decl_push>
 1b0:	mov	w23, wzr
 1b4:	mov	w24, #0x3                   	// #3
 1b8:	mov	w25, #0x1                   	// #1
 1bc:	b	21c <ctf_decl_push+0x17c>
 1c0:	ldr	x0, [x29, #24]
 1c4:	ldr	w1, [x22]
 1c8:	bl	0 <ctf_strptr>
 1cc:	ldrb	w8, [x0]
 1d0:	cbnz	w8, 208 <ctf_decl_push+0x168>
 1d4:	ldr	x1, [x29, #24]
 1d8:	ldr	w2, [x22, #8]
 1dc:	mov	x0, x19
 1e0:	bl	a0 <ctf_decl_push>
 1e4:	b	298 <ctf_decl_push+0x1f8>
 1e8:	ldr	x22, [x29, #24]
 1ec:	mov	x1, x21
 1f0:	mov	x0, x22
 1f4:	bl	0 <ctf_type_reference>
 1f8:	mov	x2, x0
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	bl	a0 <ctf_decl_push>
 208:	mov	w23, wzr
 20c:	mov	w24, wzr
 210:	mov	w25, #0x1                   	// #1
 214:	b	21c <ctf_decl_push+0x17c>
 218:	mov	w24, w23
 21c:	mov	w0, #0x20                  	// #32
 220:	bl	0 <malloc>
 224:	cbz	x0, 288 <ctf_decl_push+0x1e8>
 228:	mov	x1, x0
 22c:	str	x21, [x0, #16]
 230:	stp	w20, w25, [x0, #24]
 234:	add	x0, x19, w24, uxtw #4
 238:	ldr	x8, [x0, #8]
 23c:	cbnz	x8, 258 <ctf_decl_push+0x1b8>
 240:	ldr	w8, [x19, #84]
 244:	mov	w9, w24
 248:	add	x9, x19, x9, lsl #2
 24c:	add	w10, w8, #0x1
 250:	str	w10, [x19, #84]
 254:	str	w8, [x9, #64]
 258:	cmp	w24, #0x1
 25c:	b.hi	270 <ctf_decl_push+0x1d0>  // b.pmore
 260:	ldr	w8, [x19, #80]
 264:	cmp	w24, w8
 268:	b.ls	270 <ctf_decl_push+0x1d0>  // b.plast
 26c:	str	w24, [x19, #80]
 270:	cmp	w20, #0x4
 274:	b.eq	280 <ctf_decl_push+0x1e0>  // b.none
 278:	cbz	w23, 294 <ctf_decl_push+0x1f4>
 27c:	cbnz	w24, 294 <ctf_decl_push+0x1f4>
 280:	bl	0 <ctf_list_prepend>
 284:	b	298 <ctf_decl_push+0x1f8>
 288:	mov	w8, #0xb                   	// #11
 28c:	str	w8, [x19, #96]
 290:	b	298 <ctf_decl_push+0x1f8>
 294:	bl	0 <ctf_list_append>
 298:	ldp	x20, x19, [sp, #96]
 29c:	ldp	x22, x21, [sp, #80]
 2a0:	ldp	x24, x23, [sp, #64]
 2a4:	ldr	x25, [sp, #48]
 2a8:	ldp	x29, x30, [sp, #32]
 2ac:	add	sp, sp, #0x70
 2b0:	ret

00000000000002b4 <ctf_decl_sprintf>:
 2b4:	sub	sp, sp, #0x120
 2b8:	stp	x29, x30, [sp, #256]
 2bc:	stp	x28, x19, [sp, #272]
 2c0:	stp	x2, x3, [sp, #128]
 2c4:	stp	x4, x5, [sp, #144]
 2c8:	stp	x6, x7, [sp, #160]
 2cc:	stp	q1, q2, [sp, #16]
 2d0:	stp	q3, q4, [sp, #48]
 2d4:	str	q0, [sp]
 2d8:	stp	q5, q6, [sp, #80]
 2dc:	str	q7, [sp, #112]
 2e0:	ldr	w8, [x0, #100]
 2e4:	add	x29, sp, #0x100
 2e8:	cbnz	w8, 378 <ctf_decl_sprintf+0xc4>
 2ec:	mov	x8, #0xffffffffffffffd0    	// #-48
 2f0:	mov	x10, sp
 2f4:	add	x11, sp, #0x80
 2f8:	movk	x8, #0xff80, lsl #32
 2fc:	add	x9, x29, #0x20
 300:	add	x10, x10, #0x80
 304:	add	x11, x11, #0x30
 308:	stp	x10, x8, [x29, #-16]
 30c:	stp	x9, x11, [x29, #-32]
 310:	ldp	q0, q1, [x29, #-32]
 314:	mov	x19, x0
 318:	sub	x0, x29, #0x28
 31c:	sub	x2, x29, #0x50
 320:	stp	q0, q1, [x29, #-80]
 324:	bl	0 <vasprintf>
 328:	cmp	w0, #0x1
 32c:	b.lt	348 <ctf_decl_sprintf+0x94>  // b.tstop
 330:	ldr	x0, [x19, #88]
 334:	ldur	x1, [x29, #-40]
 338:	bl	0 <ctf_str_append>
 33c:	cbz	x0, 34c <ctf_decl_sprintf+0x98>
 340:	str	x0, [x19, #88]
 344:	b	34c <ctf_decl_sprintf+0x98>
 348:	tbnz	w0, #31, 35c <ctf_decl_sprintf+0xa8>
 34c:	ldr	x8, [x19, #88]
 350:	cbnz	x8, 370 <ctf_decl_sprintf+0xbc>
 354:	mov	x0, xzr
 358:	b	360 <ctf_decl_sprintf+0xac>
 35c:	ldr	x0, [x19, #88]
 360:	bl	0 <free>
 364:	mov	w8, #0x1                   	// #1
 368:	str	xzr, [x19, #88]
 36c:	str	w8, [x19, #100]
 370:	ldur	x0, [x29, #-40]
 374:	bl	0 <free>
 378:	ldp	x28, x19, [sp, #272]
 37c:	ldp	x29, x30, [sp, #256]
 380:	add	sp, sp, #0x120
 384:	ret

0000000000000388 <ctf_decl_buf>:
 388:	ldr	x0, [x0, #88]
 38c:	ret

ctf-error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_errmsg>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	sub	w8, w0, #0x3e8
   8:	cmp	w8, #0x33
   c:	mov	x29, sp
  10:	b.hi	24 <ctf_errmsg+0x24>  // b.pmore
  14:	adrp	x9, 0 <ctf_errmsg>
  18:	add	x9, x9, #0x0
  1c:	ldr	x0, [x9, w8, uxtw #3]
  20:	b	28 <ctf_errmsg+0x28>
  24:	bl	0 <ctf_strerror>
  28:	adrp	x8, 0 <ctf_errmsg>
  2c:	add	x8, x8, #0x0
  30:	cmp	x0, #0x0
  34:	csel	x0, x8, x0, eq  // eq = none
  38:	ldp	x29, x30, [sp], #16
  3c:	ret

0000000000000040 <ctf_errno>:
  40:	ldr	w0, [x0, #556]
  44:	ret

ctf-hash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_hash_integer>:
   0:	adrp	x8, 0 <htab_hash_pointer>
   4:	ldr	x1, [x8]
   8:	ldr	x0, [x0]
   c:	br	x1

0000000000000010 <ctf_hash_eq_integer>:
  10:	adrp	x8, 0 <htab_eq_pointer>
  14:	ldr	x0, [x0]
  18:	ldr	x2, [x8]
  1c:	ldr	x1, [x1]
  20:	br	x2

0000000000000024 <ctf_hash_string>:
  24:	ldr	x0, [x0]
  28:	b	0 <htab_hash_string>

000000000000002c <ctf_hash_eq_string>:
  2c:	stp	x29, x30, [sp, #-16]!
  30:	ldr	x0, [x0]
  34:	ldr	x1, [x1]
  38:	mov	x29, sp
  3c:	bl	0 <strcmp>
  40:	cmp	w0, #0x0
  44:	cset	w0, eq  // eq = none
  48:	ldp	x29, x30, [sp], #16
  4c:	ret

0000000000000050 <ctf_hash_type_mapping_key>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	stp	x20, x19, [sp, #16]
  58:	ldr	x19, [x0]
  5c:	adrp	x20, 0 <htab_hash_pointer>
  60:	ldr	x8, [x20]
  64:	mov	x29, sp
  68:	ldr	x0, [x19]
  6c:	blr	x8
  70:	ldr	x8, [x19, #8]
  74:	ldr	x9, [x20]
  78:	mov	w19, w0
  7c:	mov	x0, x8
  80:	blr	x9
  84:	mov	w8, #0x3b                  	// #59
  88:	madd	w0, w0, w8, w19
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret

0000000000000098 <ctf_hash_eq_type_mapping_key>:
  98:	ldr	x8, [x0]
  9c:	ldr	x9, [x1]
  a0:	ldr	x10, [x8]
  a4:	ldr	x11, [x9]
  a8:	cmp	x10, x11
  ac:	b.eq	b8 <ctf_hash_eq_type_mapping_key+0x20>  // b.none
  b0:	mov	w0, wzr
  b4:	ret
  b8:	ldr	x8, [x8, #8]
  bc:	ldr	x9, [x9, #8]
  c0:	cmp	x8, x9
  c4:	cset	w0, eq  // eq = none
  c8:	ret

00000000000000cc <ctf_dynhash_create>:
  cc:	stp	x29, x30, [sp, #-64]!
  d0:	str	x23, [sp, #16]
  d4:	mov	x23, x0
  d8:	mov	w0, #0x18                  	// #24
  dc:	stp	x22, x21, [sp, #32]
  e0:	stp	x20, x19, [sp, #48]
  e4:	mov	x29, sp
  e8:	mov	x19, x3
  ec:	mov	x21, x2
  f0:	mov	x22, x1
  f4:	bl	0 <malloc>
  f8:	mov	x20, x0
  fc:	cbz	x0, 144 <ctf_dynhash_create+0x78>
 100:	adrp	x3, 0 <ctf_hash_integer>
 104:	adrp	x4, 0 <xcalloc>
 108:	adrp	x5, 0 <free>
 10c:	add	x3, x3, #0x0
 110:	add	x4, x4, #0x0
 114:	add	x5, x5, #0x0
 118:	mov	w0, #0x7                   	// #7
 11c:	mov	x1, x23
 120:	mov	x2, x22
 124:	bl	0 <htab_create_alloc>
 128:	str	x0, [x20]
 12c:	cbz	x0, 138 <ctf_dynhash_create+0x6c>
 130:	stp	x21, x19, [x20, #8]
 134:	b	144 <ctf_dynhash_create+0x78>
 138:	mov	x0, x20
 13c:	bl	0 <free>
 140:	mov	x20, xzr
 144:	mov	x0, x20
 148:	ldp	x20, x19, [sp, #48]
 14c:	ldp	x22, x21, [sp, #32]
 150:	ldr	x23, [sp, #16]
 154:	ldp	x29, x30, [sp], #64
 158:	ret

000000000000015c <ctf_dynhash_item_free>:
 15c:	stp	x29, x30, [sp, #-32]!
 160:	ldr	x8, [x0, #16]
 164:	str	x19, [sp, #16]
 168:	mov	x19, x0
 16c:	mov	x29, sp
 170:	cbz	x8, 180 <ctf_dynhash_item_free+0x24>
 174:	ldr	x0, [x19]
 178:	cbz	x0, 180 <ctf_dynhash_item_free+0x24>
 17c:	blr	x8
 180:	ldr	x8, [x19, #24]
 184:	cbz	x8, 194 <ctf_dynhash_item_free+0x38>
 188:	ldr	x0, [x19, #8]
 18c:	cbz	x0, 194 <ctf_dynhash_item_free+0x38>
 190:	blr	x8
 194:	mov	x0, x19
 198:	ldr	x19, [sp, #16]
 19c:	ldp	x29, x30, [sp], #32
 1a0:	b	0 <free>

00000000000001a4 <ctf_dynhash_insert>:
 1a4:	sub	sp, sp, #0x60
 1a8:	stp	x29, x30, [sp, #32]
 1ac:	stp	x24, x23, [sp, #48]
 1b0:	stp	x22, x21, [sp, #64]
 1b4:	stp	x20, x19, [sp, #80]
 1b8:	mov	x19, x0
 1bc:	ldr	x0, [x0]
 1c0:	ldp	x24, x23, [x19, #8]
 1c4:	mov	x20, x2
 1c8:	mov	x21, x1
 1cc:	stp	x1, xzr, [sp]
 1d0:	mov	x1, sp
 1d4:	mov	w2, #0x1                   	// #1
 1d8:	add	x29, sp, #0x20
 1dc:	stp	xzr, xzr, [sp, #16]
 1e0:	bl	0 <htab_find_slot>
 1e4:	cbz	x0, 214 <ctf_dynhash_insert+0x70>
 1e8:	ldr	x8, [x0]
 1ec:	mov	x22, x0
 1f0:	cbz	x8, 224 <ctf_dynhash_insert+0x80>
 1f4:	cbz	x24, 200 <ctf_dynhash_insert+0x5c>
 1f8:	ldr	x0, [x8]
 1fc:	blr	x24
 200:	cbz	x23, 234 <ctf_dynhash_insert+0x90>
 204:	ldr	x8, [x22]
 208:	ldr	x0, [x8, #8]
 20c:	blr	x23
 210:	b	234 <ctf_dynhash_insert+0x90>
 214:	bl	0 <__errno_location>
 218:	mov	w8, #0xfffffff4            	// #-12
 21c:	str	w8, [x0]
 220:	b	25c <ctf_dynhash_insert+0xb8>
 224:	mov	w0, #0x20                  	// #32
 228:	bl	0 <malloc>
 22c:	str	x0, [x22]
 230:	cbz	x0, 25c <ctf_dynhash_insert+0xb8>
 234:	ldr	x8, [x22]
 238:	str	x21, [x8]
 23c:	ldr	x8, [x22]
 240:	str	x20, [x8, #8]
 244:	ldr	x8, [x22]
 248:	cbz	x8, 25c <ctf_dynhash_insert+0xb8>
 24c:	ldur	q0, [x19, #8]
 250:	mov	w0, wzr
 254:	str	q0, [x8, #16]
 258:	b	264 <ctf_dynhash_insert+0xc0>
 25c:	bl	0 <__errno_location>
 260:	ldr	w0, [x0]
 264:	ldp	x20, x19, [sp, #80]
 268:	ldp	x22, x21, [sp, #64]
 26c:	ldp	x24, x23, [sp, #48]
 270:	ldp	x29, x30, [sp, #32]
 274:	add	sp, sp, #0x60
 278:	ret

000000000000027c <ctf_dynhash_remove>:
 27c:	sub	sp, sp, #0x30
 280:	stp	x29, x30, [sp, #32]
 284:	stp	xzr, xzr, [sp, #16]
 288:	stp	x1, xzr, [sp]
 28c:	ldr	x0, [x0]
 290:	mov	x1, sp
 294:	add	x29, sp, #0x20
 298:	bl	0 <htab_remove_elt>
 29c:	ldp	x29, x30, [sp, #32]
 2a0:	add	sp, sp, #0x30
 2a4:	ret

00000000000002a8 <ctf_dynhash_empty>:
 2a8:	ldr	x0, [x0]
 2ac:	b	0 <htab_empty>

00000000000002b0 <ctf_dynhash_lookup>:
 2b0:	sub	sp, sp, #0x30
 2b4:	stp	x29, x30, [sp, #32]
 2b8:	ldr	x0, [x0]
 2bc:	stp	x1, xzr, [sp]
 2c0:	mov	x1, sp
 2c4:	mov	w2, wzr
 2c8:	add	x29, sp, #0x20
 2cc:	stp	xzr, xzr, [sp, #16]
 2d0:	bl	0 <htab_find_slot>
 2d4:	cbz	x0, 2e0 <ctf_dynhash_lookup+0x30>
 2d8:	ldr	x8, [x0]
 2dc:	ldr	x0, [x8, #8]
 2e0:	ldp	x29, x30, [sp, #32]
 2e4:	add	sp, sp, #0x30
 2e8:	ret

00000000000002ec <ctf_dynhash_iter>:
 2ec:	sub	sp, sp, #0x20
 2f0:	stp	x29, x30, [sp, #16]
 2f4:	stp	x1, x2, [sp]
 2f8:	ldr	x0, [x0]
 2fc:	adrp	x1, 0 <ctf_hash_integer>
 300:	add	x1, x1, #0x0
 304:	mov	x2, sp
 308:	add	x29, sp, #0x10
 30c:	bl	0 <htab_traverse>
 310:	ldp	x29, x30, [sp, #16]
 314:	add	sp, sp, #0x20
 318:	ret

000000000000031c <ctf_hashtab_traverse>:
 31c:	stp	x29, x30, [sp, #-16]!
 320:	ldr	x8, [x0]
 324:	ldp	x9, x2, [x1]
 328:	mov	x29, sp
 32c:	ldp	x0, x8, [x8]
 330:	mov	x1, x8
 334:	blr	x9
 338:	mov	w0, #0x1                   	// #1
 33c:	ldp	x29, x30, [sp], #16
 340:	ret

0000000000000344 <ctf_dynhash_iter_remove>:
 344:	sub	sp, sp, #0x30
 348:	stp	x29, x30, [sp, #32]
 34c:	ldr	x0, [x0]
 350:	str	x2, [sp, #24]
 354:	add	x2, sp, #0x8
 358:	add	x29, sp, #0x20
 35c:	stp	x0, x1, [sp, #8]
 360:	adrp	x1, 0 <ctf_hash_integer>
 364:	add	x1, x1, #0x0
 368:	bl	0 <htab_traverse>
 36c:	ldp	x29, x30, [sp, #32]
 370:	add	sp, sp, #0x30
 374:	ret

0000000000000378 <ctf_hashtab_traverse_remove>:
 378:	stp	x29, x30, [sp, #-32]!
 37c:	stp	x20, x19, [sp, #16]
 380:	ldr	x8, [x0]
 384:	mov	x20, x1
 388:	mov	x19, x0
 38c:	mov	x29, sp
 390:	ldp	x0, x1, [x8]
 394:	ldp	x8, x2, [x20, #8]
 398:	blr	x8
 39c:	cbz	w0, 3ac <ctf_hashtab_traverse_remove+0x34>
 3a0:	ldr	x0, [x20]
 3a4:	mov	x1, x19
 3a8:	bl	0 <htab_clear_slot>
 3ac:	ldp	x20, x19, [sp, #16]
 3b0:	mov	w0, #0x1                   	// #1
 3b4:	ldp	x29, x30, [sp], #32
 3b8:	ret

00000000000003bc <ctf_dynhash_destroy>:
 3bc:	stp	x29, x30, [sp, #-32]!
 3c0:	str	x19, [sp, #16]
 3c4:	mov	x19, x0
 3c8:	mov	x29, sp
 3cc:	cbz	x0, 3d8 <ctf_dynhash_destroy+0x1c>
 3d0:	ldr	x0, [x19]
 3d4:	bl	0 <htab_delete>
 3d8:	mov	x0, x19
 3dc:	ldr	x19, [sp, #16]
 3e0:	ldp	x29, x30, [sp], #32
 3e4:	b	0 <free>

00000000000003e8 <ctf_hash_create>:
 3e8:	adrp	x3, 0 <free>
 3ec:	adrp	x4, 0 <xcalloc>
 3f0:	add	x3, x3, #0x0
 3f4:	add	x4, x4, #0x0
 3f8:	mov	x5, x3
 3fc:	b	0 <htab_create_alloc>

0000000000000400 <ctf_hash_size>:
 400:	stp	x29, x30, [sp, #-16]!
 404:	mov	x29, sp
 408:	bl	0 <htab_elements>
 40c:	ldp	x29, x30, [sp], #16
 410:	ret

0000000000000414 <ctf_hash_insert_type>:
 414:	sub	sp, sp, #0x60
 418:	stp	x22, x21, [sp, #64]
 41c:	mov	x22, x1
 420:	mov	x21, x0
 424:	mov	x0, x1
 428:	mov	w1, w3
 42c:	stp	x29, x30, [sp, #32]
 430:	str	x23, [sp, #48]
 434:	stp	x20, x19, [sp, #80]
 438:	add	x29, sp, #0x20
 43c:	mov	w23, w3
 440:	mov	w19, w2
 444:	bl	0 <ctf_strraw>
 448:	cbz	w19, 4c4 <ctf_hash_insert_type+0xb0>
 44c:	mov	x20, x0
 450:	tbz	w23, #31, 460 <ctf_hash_insert_type+0x4c>
 454:	cbnz	x20, 460 <ctf_hash_insert_type+0x4c>
 458:	ldr	x8, [x22, #128]
 45c:	cbz	x8, 4d4 <ctf_hash_insert_type+0xc0>
 460:	cbz	x20, 4cc <ctf_hash_insert_type+0xb8>
 464:	ldrb	w8, [x20]
 468:	cbz	w8, 4bc <ctf_hash_insert_type+0xa8>
 46c:	mov	x1, sp
 470:	mov	w2, #0x1                   	// #1
 474:	mov	x0, x21
 478:	stp	xzr, xzr, [sp, #16]
 47c:	stp	x20, xzr, [sp]
 480:	bl	0 <htab_find_slot>
 484:	cbz	x0, 4e8 <ctf_hash_insert_type+0xd4>
 488:	mov	x21, x0
 48c:	ldr	x0, [x0]
 490:	cbnz	x0, 4a4 <ctf_hash_insert_type+0x90>
 494:	mov	w0, #0x20                  	// #32
 498:	bl	0 <malloc>
 49c:	str	x0, [x21]
 4a0:	cbz	x0, 4f4 <ctf_hash_insert_type+0xe0>
 4a4:	str	x20, [x0]
 4a8:	ldr	x8, [x21]
 4ac:	mov	w9, w19
 4b0:	str	x9, [x8, #8]
 4b4:	ldr	x8, [x21]
 4b8:	cbz	x8, 4f4 <ctf_hash_insert_type+0xe0>
 4bc:	mov	w0, wzr
 4c0:	b	4fc <ctf_hash_insert_type+0xe8>
 4c4:	mov	w0, #0x16                  	// #22
 4c8:	b	4fc <ctf_hash_insert_type+0xe8>
 4cc:	mov	w0, #0x3f9                 	// #1017
 4d0:	b	4fc <ctf_hash_insert_type+0xe8>
 4d4:	ldr	x8, [x22, #352]
 4d8:	cmp	x8, #0x0
 4dc:	mov	w8, #0x3f8                 	// #1016
 4e0:	cinc	w0, w8, ne  // ne = any
 4e4:	b	4fc <ctf_hash_insert_type+0xe8>
 4e8:	bl	0 <__errno_location>
 4ec:	mov	w8, #0xfffffff4            	// #-12
 4f0:	str	w8, [x0]
 4f4:	bl	0 <__errno_location>
 4f8:	ldr	w0, [x0]
 4fc:	ldp	x20, x19, [sp, #80]
 500:	ldp	x22, x21, [sp, #64]
 504:	ldr	x23, [sp, #48]
 508:	ldp	x29, x30, [sp, #32]
 50c:	add	sp, sp, #0x60
 510:	ret

0000000000000514 <ctf_hash_define_type>:
 514:	b	414 <ctf_hash_insert_type>

0000000000000518 <ctf_hash_lookup_type>:
 518:	sub	sp, sp, #0x30
 51c:	stp	x2, xzr, [sp]
 520:	mov	x1, sp
 524:	mov	w2, wzr
 528:	stp	x29, x30, [sp, #32]
 52c:	add	x29, sp, #0x20
 530:	stp	xzr, xzr, [sp, #16]
 534:	bl	0 <htab_find_slot>
 538:	cbz	x0, 544 <ctf_hash_lookup_type+0x2c>
 53c:	ldr	x8, [x0]
 540:	ldr	x0, [x8, #8]
 544:	ldp	x29, x30, [sp, #32]
 548:	add	sp, sp, #0x30
 54c:	ret

0000000000000550 <ctf_hash_destroy>:
 550:	cbz	x0, 558 <ctf_hash_destroy+0x8>
 554:	b	0 <htab_delete>
 558:	ret

ctf-labels.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_label_topmost>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	ldr	x9, [x0, #32]
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x9, #16]
  18:	sub	w9, w9, w8
  1c:	lsr	w9, w9, #3
  20:	cbz	w9, 48 <ctf_label_topmost+0x48>
  24:	ldr	x10, [x19, #408]
  28:	mov	x0, x19
  2c:	add	x8, x10, x8
  30:	add	x8, x8, w9, uxtw #3
  34:	ldur	w1, [x8, #-8]
  38:	bl	0 <ctf_strraw>
  3c:	cbnz	x0, 58 <ctf_label_topmost+0x58>
  40:	mov	w1, #0x3ef                 	// #1007
  44:	b	4c <ctf_label_topmost+0x4c>
  48:	mov	w1, #0x409                 	// #1033
  4c:	mov	x0, x19
  50:	bl	0 <ctf_set_errno>
  54:	mov	x0, xzr
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

0000000000000064 <ctf_label_iter>:
  64:	stp	x29, x30, [sp, #-64]!
  68:	stp	x22, x21, [sp, #32]
  6c:	stp	x20, x19, [sp, #48]
  70:	ldr	x9, [x0, #32]
  74:	str	x23, [sp, #16]
  78:	mov	x19, x0
  7c:	mov	x29, sp
  80:	ldp	w8, w9, [x9, #16]
  84:	sub	w9, w9, w8
  88:	lsr	w22, w9, #3
  8c:	cbz	w22, dc <ctf_label_iter+0x78>
  90:	ldr	x9, [x19, #408]
  94:	mov	x20, x2
  98:	mov	x21, x1
  9c:	add	x23, x9, x8
  a0:	ldr	w1, [x23]
  a4:	mov	x0, x19
  a8:	bl	0 <ctf_strraw>
  ac:	cbz	x0, e4 <ctf_label_iter+0x80>
  b0:	ldr	w8, [x23, #4]
  b4:	add	x1, x29, #0x18
  b8:	mov	x2, x20
  bc:	str	x8, [x29, #24]
  c0:	blr	x21
  c4:	cbnz	w0, 100 <ctf_label_iter+0x9c>
  c8:	subs	w22, w22, #0x1
  cc:	add	x23, x23, #0x8
  d0:	b.ne	a0 <ctf_label_iter+0x3c>  // b.any
  d4:	mov	w0, wzr
  d8:	b	100 <ctf_label_iter+0x9c>
  dc:	mov	w1, #0x409                 	// #1033
  e0:	b	f8 <ctf_label_iter+0x94>
  e4:	ldp	w1, w2, [x23]
  e8:	adrp	x0, 0 <ctf_label_topmost>
  ec:	add	x0, x0, #0x0
  f0:	bl	0 <ctf_dprintf>
  f4:	mov	w1, #0x3ef                 	// #1007
  f8:	mov	x0, x19
  fc:	bl	0 <ctf_set_errno>
 100:	ldp	x20, x19, [sp, #48]
 104:	ldp	x22, x21, [sp, #32]
 108:	ldr	x23, [sp, #16]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret

0000000000000114 <ctf_label_info>:
 114:	stp	x29, x30, [sp, #-64]!
 118:	stp	x22, x21, [sp, #32]
 11c:	stp	x20, x19, [sp, #48]
 120:	ldr	x9, [x0, #32]
 124:	str	x23, [sp, #16]
 128:	mov	x19, x0
 12c:	mov	x29, sp
 130:	ldp	w8, w9, [x9, #16]
 134:	sub	w9, w9, w8
 138:	lsr	w22, w9, #3
 13c:	cbz	w22, 180 <ctf_label_info+0x6c>
 140:	ldr	x9, [x19, #408]
 144:	mov	x20, x2
 148:	mov	x21, x1
 14c:	add	x8, x8, x9
 150:	add	x23, x8, #0x4
 154:	ldur	w1, [x23, #-4]
 158:	mov	x0, x19
 15c:	bl	0 <ctf_strraw>
 160:	cbz	x0, 188 <ctf_label_info+0x74>
 164:	mov	x1, x21
 168:	bl	0 <strcmp>
 16c:	cbz	w0, 1c8 <ctf_label_info+0xb4>
 170:	subs	w22, w22, #0x1
 174:	add	x23, x23, #0x8
 178:	b.ne	154 <ctf_label_info+0x40>  // b.any
 17c:	b	1b8 <ctf_label_info+0xa4>
 180:	mov	w1, #0x409                 	// #1033
 184:	b	19c <ctf_label_info+0x88>
 188:	ldp	w1, w2, [x23, #-4]
 18c:	adrp	x0, 0 <ctf_label_topmost>
 190:	add	x0, x0, #0x0
 194:	bl	0 <ctf_dprintf>
 198:	mov	w1, #0x3ef                 	// #1007
 19c:	mov	x0, x19
 1a0:	bl	0 <ctf_set_errno>
 1a4:	tbnz	w0, #31, 1d8 <ctf_label_info+0xc4>
 1a8:	cmp	w0, #0x1
 1ac:	b.ne	1b8 <ctf_label_info+0xa4>  // b.any
 1b0:	mov	w0, wzr
 1b4:	b	1d8 <ctf_label_info+0xc4>
 1b8:	mov	w1, #0x408                 	// #1032
 1bc:	mov	x0, x19
 1c0:	bl	0 <ctf_set_errno>
 1c4:	b	1d8 <ctf_label_info+0xc4>
 1c8:	mov	w0, wzr
 1cc:	cbz	x20, 1d8 <ctf_label_info+0xc4>
 1d0:	ldr	w8, [x23]
 1d4:	str	x8, [x20]
 1d8:	ldp	x20, x19, [sp, #48]
 1dc:	ldp	x22, x21, [sp, #32]
 1e0:	ldr	x23, [sp, #16]
 1e4:	ldp	x29, x30, [sp], #64
 1e8:	ret

ctf-link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_add_type_mapping>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	stp	x24, x23, [sp, #16]
       8:	stp	x22, x21, [sp, #32]
       c:	stp	x20, x19, [sp, #48]
      10:	ldr	w23, [x0, #544]
      14:	mov	x19, x3
      18:	mov	x20, x0
      1c:	mov	x22, x1
      20:	cmp	x23, x1
      24:	mov	x21, x2
      28:	mov	x29, sp
      2c:	b.cc	40 <ctf_add_type_mapping+0x40>  // b.lo, b.ul, b.last
      30:	ldr	x8, [x20, #512]
      34:	cmp	x8, #0x0
      38:	csel	x20, x20, x8, eq  // eq = none
      3c:	ldr	w23, [x20, #544]
      40:	ldr	w24, [x21, #544]
      44:	cmp	x24, x19
      48:	b.cc	5c <ctf_add_type_mapping+0x5c>  // b.lo, b.ul, b.last
      4c:	ldr	x8, [x21, #512]
      50:	cmp	x8, #0x0
      54:	csel	x21, x21, x8, eq  // eq = none
      58:	ldr	w24, [x21, #544]
      5c:	ldr	x8, [x21, #664]
      60:	cbnz	x8, 8c <ctf_add_type_mapping+0x8c>
      64:	adrp	x0, 0 <ctf_hash_type_mapping_key>
      68:	adrp	x1, 0 <ctf_hash_eq_type_mapping_key>
      6c:	adrp	x2, 0 <free>
      70:	add	x0, x0, #0x0
      74:	add	x1, x1, #0x0
      78:	add	x2, x2, #0x0
      7c:	mov	x3, xzr
      80:	bl	0 <ctf_dynhash_create>
      84:	str	x0, [x21, #664]
      88:	cbz	x0, c4 <ctf_add_type_mapping+0xc4>
      8c:	mov	w0, #0x1                   	// #1
      90:	mov	w1, #0x10                  	// #16
      94:	bl	0 <calloc>
      98:	cbz	x0, c4 <ctf_add_type_mapping+0xc4>
      9c:	and	x8, x23, x22
      a0:	stp	x20, x8, [x0]
      a4:	mov	x1, x0
      a8:	ldr	x0, [x21, #664]
      ac:	and	x2, x24, x19
      b0:	ldp	x20, x19, [sp, #48]
      b4:	ldp	x22, x21, [sp, #32]
      b8:	ldp	x24, x23, [sp, #16]
      bc:	ldp	x29, x30, [sp], #64
      c0:	b	0 <ctf_dynhash_insert>
      c4:	ldp	x20, x19, [sp, #48]
      c8:	ldp	x22, x21, [sp, #32]
      cc:	ldp	x24, x23, [sp, #16]
      d0:	ldp	x29, x30, [sp], #64
      d4:	ret

00000000000000d8 <ctf_type_mapping>:
      d8:	sub	sp, sp, #0x40
      dc:	stp	x29, x30, [sp, #16]
      e0:	stp	x20, x19, [sp, #48]
      e4:	ldr	w8, [x0, #544]
      e8:	ldr	x20, [x2]
      ec:	mov	x19, x2
      f0:	str	x21, [sp, #32]
      f4:	cmp	x8, x1
      f8:	add	x29, sp, #0x10
      fc:	b.cc	110 <ctf_type_mapping+0x38>  // b.lo, b.ul, b.last
     100:	ldr	x8, [x0, #512]
     104:	cmp	x8, #0x0
     108:	csel	x0, x0, x8, eq  // eq = none
     10c:	ldr	w8, [x0, #544]
     110:	and	x8, x8, x1
     114:	stp	x0, x8, [sp]
     118:	ldr	x0, [x20, #664]
     11c:	cbz	x0, 148 <ctf_type_mapping+0x70>
     120:	mov	x1, sp
     124:	bl	0 <ctf_dynhash_lookup>
     128:	ldr	x21, [x20, #512]
     12c:	cbz	x0, 180 <ctf_type_mapping+0xa8>
     130:	cbz	x21, 140 <ctf_type_mapping+0x68>
     134:	ldr	w8, [x20, #544]
     138:	add	w8, w8, #0x1
     13c:	orr	x0, x8, x0
     140:	str	x20, [x19]
     144:	b	188 <ctf_type_mapping+0xb0>
     148:	ldr	x21, [x20, #512]
     14c:	cbz	x21, 184 <ctf_type_mapping+0xac>
     150:	ldr	x0, [x21, #664]
     154:	cbz	x0, 178 <ctf_type_mapping+0xa0>
     158:	mov	x1, sp
     15c:	bl	0 <ctf_dynhash_lookup>
     160:	cbz	x0, 178 <ctf_type_mapping+0xa0>
     164:	ldr	x8, [x21, #512]
     168:	cbz	x8, 178 <ctf_type_mapping+0xa0>
     16c:	ldr	w8, [x21, #544]
     170:	add	w8, w8, #0x1
     174:	orr	x0, x8, x0
     178:	str	x21, [x19]
     17c:	b	188 <ctf_type_mapping+0xb0>
     180:	cbnz	x21, 150 <ctf_type_mapping+0x78>
     184:	mov	x0, xzr
     188:	ldp	x20, x19, [sp, #48]
     18c:	ldr	x21, [sp, #32]
     190:	ldp	x29, x30, [sp, #16]
     194:	add	sp, sp, #0x40
     198:	ret

000000000000019c <ctf_link_add_ctf>:
     19c:	stp	x29, x30, [sp, #-48]!
     1a0:	stp	x20, x19, [sp, #32]
     1a4:	ldr	x8, [x0, #656]
     1a8:	mov	x19, x0
     1ac:	str	x21, [sp, #16]
     1b0:	mov	x29, sp
     1b4:	cbz	x8, 1c0 <ctf_link_add_ctf+0x24>
     1b8:	mov	w1, #0x3f5                 	// #1013
     1bc:	b	244 <ctf_link_add_ctf+0xa8>
     1c0:	ldr	x8, [x19, #648]
     1c4:	mov	x21, x2
     1c8:	mov	x20, x1
     1cc:	cbnz	x8, 1fc <ctf_link_add_ctf+0x60>
     1d0:	adrp	x0, 0 <ctf_hash_string>
     1d4:	adrp	x1, 0 <ctf_hash_eq_string>
     1d8:	adrp	x2, 0 <free>
     1dc:	adrp	x3, 0 <ctf_add_type_mapping>
     1e0:	add	x0, x0, #0x0
     1e4:	add	x1, x1, #0x0
     1e8:	add	x2, x2, #0x0
     1ec:	add	x3, x3, #0x0
     1f0:	bl	0 <ctf_dynhash_create>
     1f4:	str	x0, [x19, #648]
     1f8:	cbz	x0, 228 <ctf_link_add_ctf+0x8c>
     1fc:	mov	x0, x21
     200:	bl	0 <strdup>
     204:	mov	x21, x0
     208:	cbz	x0, 22c <ctf_link_add_ctf+0x90>
     20c:	ldr	x0, [x19, #648]
     210:	mov	x1, x21
     214:	mov	x2, x20
     218:	bl	0 <ctf_dynhash_insert>
     21c:	tbnz	w0, #31, 22c <ctf_link_add_ctf+0x90>
     220:	mov	w0, wzr
     224:	b	24c <ctf_link_add_ctf+0xb0>
     228:	mov	x21, xzr
     22c:	ldr	x0, [x19, #648]
     230:	bl	0 <free>
     234:	mov	x0, x21
     238:	str	xzr, [x19, #648]
     23c:	bl	0 <free>
     240:	mov	w1, #0xc                   	// #12
     244:	mov	x0, x19
     248:	bl	0 <ctf_set_errno>
     24c:	ldp	x20, x19, [sp, #32]
     250:	ldr	x21, [sp, #16]
     254:	ldp	x29, x30, [sp], #48
     258:	ret

000000000000025c <ctf_arc_close_thunk>:
     25c:	b	0 <ctf_arc_close>

0000000000000260 <ctf_link_add_cu_mapping>:
     260:	stp	x29, x30, [sp, #-48]!
     264:	stp	x20, x19, [sp, #32]
     268:	ldr	x8, [x0, #672]
     26c:	str	x21, [sp, #16]
     270:	mov	x21, x2
     274:	mov	x19, x0
     278:	mov	x20, x1
     27c:	mov	x29, sp
     280:	cbnz	x8, 2ac <ctf_link_add_cu_mapping+0x4c>
     284:	adrp	x2, 0 <free>
     288:	adrp	x0, 0 <ctf_hash_string>
     28c:	adrp	x1, 0 <ctf_hash_eq_string>
     290:	add	x2, x2, #0x0
     294:	add	x0, x0, #0x0
     298:	add	x1, x1, #0x0
     29c:	mov	x3, x2
     2a0:	bl	0 <ctf_dynhash_create>
     2a4:	str	x0, [x19, #672]
     2a8:	cbz	x0, 358 <ctf_link_add_cu_mapping+0xf8>
     2ac:	ldr	x8, [x19, #656]
     2b0:	cbnz	x8, 2e0 <ctf_link_add_cu_mapping+0x80>
     2b4:	adrp	x0, 0 <ctf_hash_string>
     2b8:	adrp	x1, 0 <ctf_hash_eq_string>
     2bc:	adrp	x2, 0 <free>
     2c0:	adrp	x3, 0 <ctf_add_type_mapping>
     2c4:	add	x0, x0, #0x0
     2c8:	add	x1, x1, #0x0
     2cc:	add	x2, x2, #0x0
     2d0:	add	x3, x3, #0x0
     2d4:	bl	0 <ctf_dynhash_create>
     2d8:	str	x0, [x19, #656]
     2dc:	cbz	x0, 358 <ctf_link_add_cu_mapping+0xf8>
     2e0:	mov	x0, x20
     2e4:	bl	0 <strdup>
     2e8:	mov	x20, x0
     2ec:	mov	x0, x21
     2f0:	bl	0 <strdup>
     2f4:	mov	x21, x0
     2f8:	cbz	x20, 330 <ctf_link_add_cu_mapping+0xd0>
     2fc:	cbz	x21, 330 <ctf_link_add_cu_mapping+0xd0>
     300:	mov	x0, x19
     304:	mov	x1, x21
     308:	mov	x2, x21
     30c:	bl	378 <ctf_create_per_cu>
     310:	cbz	x0, 340 <ctf_link_add_cu_mapping+0xe0>
     314:	ldr	x0, [x19, #672]
     318:	mov	x1, x20
     31c:	mov	x2, x21
     320:	bl	0 <ctf_dynhash_insert>
     324:	mov	w1, w0
     328:	cbnz	w0, 338 <ctf_link_add_cu_mapping+0xd8>
     32c:	b	364 <ctf_link_add_cu_mapping+0x104>
     330:	bl	0 <__errno_location>
     334:	ldr	w1, [x0]
     338:	mov	x0, x19
     33c:	bl	0 <ctf_set_errno>
     340:	mov	x0, x20
     344:	bl	0 <free>
     348:	mov	x0, x21
     34c:	bl	0 <free>
     350:	mov	w0, #0xffffffff            	// #-1
     354:	b	364 <ctf_link_add_cu_mapping+0x104>
     358:	mov	w1, #0xc                   	// #12
     35c:	mov	x0, x19
     360:	bl	0 <ctf_set_errno>
     364:	ldp	x20, x19, [sp, #32]
     368:	ldr	x21, [sp, #16]
     36c:	ldp	x29, x30, [sp], #48
     370:	ret

0000000000000374 <ctf_file_close_thunk>:
     374:	b	0 <ctf_file_close>

0000000000000378 <ctf_create_per_cu>:
     378:	stp	x29, x30, [sp, #-64]!
     37c:	stp	x22, x21, [sp, #32]
     380:	stp	x20, x19, [sp, #48]
     384:	mov	x19, x0
     388:	ldr	x0, [x0, #672]
     38c:	mov	x20, x2
     390:	mov	x21, x1
     394:	str	x23, [sp, #16]
     398:	mov	x29, sp
     39c:	cbz	x0, 3c0 <ctf_create_per_cu+0x48>
     3a0:	mov	x1, x21
     3a4:	bl	0 <ctf_dynhash_lookup>
     3a8:	cbnz	x0, 3c0 <ctf_create_per_cu+0x48>
     3ac:	ldr	x0, [x19, #672]
     3b0:	mov	x1, x20
     3b4:	bl	0 <ctf_dynhash_lookup>
     3b8:	cmp	x0, #0x0
     3bc:	csel	x0, x21, x0, eq  // eq = none
     3c0:	ldr	x8, [x19, #656]
     3c4:	cmp	x0, #0x0
     3c8:	csel	x23, x21, x0, eq  // eq = none
     3cc:	mov	x1, x23
     3d0:	mov	x0, x8
     3d4:	bl	0 <ctf_dynhash_lookup>
     3d8:	mov	x22, x0
     3dc:	cbz	x0, 3f8 <ctf_create_per_cu+0x80>
     3e0:	mov	x0, x22
     3e4:	ldp	x20, x19, [sp, #48]
     3e8:	ldp	x22, x21, [sp, #32]
     3ec:	ldr	x23, [sp, #16]
     3f0:	ldp	x29, x30, [sp], #64
     3f4:	ret
     3f8:	add	x0, x29, #0x1c
     3fc:	bl	0 <ctf_create>
     400:	mov	x22, x0
     404:	cbz	x0, 458 <ctf_create_per_cu+0xe0>
     408:	mov	x0, x23
     40c:	bl	0 <strdup>
     410:	mov	x21, x0
     414:	cbz	x0, 488 <ctf_create_per_cu+0x110>
     418:	ldr	x0, [x19, #656]
     41c:	mov	x1, x21
     420:	mov	x2, x22
     424:	bl	0 <ctf_dynhash_insert>
     428:	tbnz	w0, #31, 488 <ctf_create_per_cu+0x110>
     42c:	mov	x0, x22
     430:	mov	x1, x19
     434:	bl	0 <ctf_import>
     438:	mov	x0, x22
     43c:	mov	x1, x20
     440:	bl	0 <ctf_cuname_set>
     444:	adrp	x1, 0 <_CTF_SECTION>
     448:	add	x1, x1, #0x0
     44c:	mov	x0, x22
     450:	bl	0 <ctf_parent_name_set>
     454:	b	3e0 <ctf_create_per_cu+0x68>
     458:	ldr	w0, [x29, #28]
     45c:	bl	0 <ctf_errmsg>
     460:	mov	x3, x0
     464:	adrp	x0, 0 <ctf_add_type_mapping>
     468:	add	x0, x0, #0x0
     46c:	mov	x1, x20
     470:	mov	x2, x21
     474:	bl	0 <ctf_dprintf>
     478:	ldr	w1, [x29, #28]
     47c:	mov	x0, x19
     480:	bl	0 <ctf_set_errno>
     484:	b	3e0 <ctf_create_per_cu+0x68>
     488:	mov	x0, x21
     48c:	bl	0 <free>
     490:	mov	x0, x22
     494:	bl	0 <ctf_file_close>
     498:	mov	w1, #0xc                   	// #12
     49c:	mov	x0, x19
     4a0:	bl	0 <ctf_set_errno>
     4a4:	mov	x22, xzr
     4a8:	b	3e0 <ctf_create_per_cu+0x68>

00000000000004ac <ctf_link_set_memb_name_changer>:
     4ac:	str	x1, [x0, #680]
     4b0:	str	x2, [x0, #688]
     4b4:	ret

00000000000004b8 <ctf_link>:
     4b8:	sub	sp, sp, #0x60
     4bc:	movi	v0.2d, #0x0
     4c0:	stp	x29, x30, [sp, #64]
     4c4:	str	xzr, [sp, #56]
     4c8:	str	x0, [sp]
     4cc:	stur	q0, [sp, #40]
     4d0:	stur	q0, [sp, #24]
     4d4:	stur	q0, [sp, #8]
     4d8:	str	w1, [sp, #52]
     4dc:	str	x19, [sp, #80]
     4e0:	mov	x19, x0
     4e4:	ldr	x0, [x0, #648]
     4e8:	add	x29, sp, #0x40
     4ec:	cbz	x0, 548 <ctf_link+0x90>
     4f0:	ldr	x8, [x19, #656]
     4f4:	cbnz	x8, 528 <ctf_link+0x70>
     4f8:	adrp	x0, 0 <ctf_hash_string>
     4fc:	adrp	x1, 0 <ctf_hash_eq_string>
     500:	adrp	x2, 0 <free>
     504:	adrp	x3, 0 <ctf_add_type_mapping>
     508:	add	x0, x0, #0x0
     50c:	add	x1, x1, #0x0
     510:	add	x2, x2, #0x0
     514:	add	x3, x3, #0x0
     518:	bl	0 <ctf_dynhash_create>
     51c:	str	x0, [x19, #656]
     520:	cbz	x0, 558 <ctf_link+0xa0>
     524:	ldr	x0, [x19, #648]
     528:	adrp	x1, 0 <ctf_add_type_mapping>
     52c:	add	x1, x1, #0x0
     530:	mov	x2, sp
     534:	bl	0 <ctf_dynhash_iter>
     538:	mov	x0, x19
     53c:	bl	0 <ctf_errno>
     540:	cmp	w0, #0x0
     544:	csetm	w0, ne  // ne = any
     548:	ldr	x19, [sp, #80]
     54c:	ldp	x29, x30, [sp, #64]
     550:	add	sp, sp, #0x60
     554:	ret
     558:	mov	w1, #0xc                   	// #12
     55c:	mov	x0, x19
     560:	bl	0 <ctf_set_errno>
     564:	b	548 <ctf_link+0x90>

0000000000000568 <ctf_link_one_input_archive>:
     568:	sub	sp, sp, #0x30
     56c:	stp	x29, x30, [sp, #16]
     570:	add	x29, sp, #0x10
     574:	stp	x20, x19, [sp, #32]
     578:	mov	x19, x2
     57c:	mov	x20, x1
     580:	str	x0, [x2, #8]
     584:	str	wzr, [x2, #48]
     588:	sub	x2, x29, #0x4
     58c:	mov	x0, x1
     590:	mov	x1, xzr
     594:	bl	0 <ctf_arc_open_by_name>
     598:	str	x0, [x19, #24]
     59c:	cbnz	x0, 5d0 <ctf_link_one_input_archive+0x68>
     5a0:	ldur	w8, [x29, #-4]
     5a4:	cmp	w8, #0x415
     5a8:	b.eq	5d0 <ctf_link_one_input_archive+0x68>  // b.none
     5ac:	ldr	x19, [x19, #8]
     5b0:	mov	w0, w8
     5b4:	bl	0 <ctf_errmsg>
     5b8:	mov	x2, x0
     5bc:	adrp	x0, 0 <ctf_add_type_mapping>
     5c0:	add	x0, x0, #0x0
     5c4:	mov	x1, x19
     5c8:	bl	0 <ctf_dprintf>
     5cc:	b	670 <ctf_link_one_input_archive+0x108>
     5d0:	adrp	x1, 0 <_CTF_SECTION>
     5d4:	add	x1, x1, #0x0
     5d8:	mov	x2, x19
     5dc:	bl	c0c <ctf_link_one_input_archive_member>
     5e0:	tbnz	w0, #31, 614 <ctf_link_one_input_archive+0xac>
     5e4:	adrp	x1, 0 <ctf_add_type_mapping>
     5e8:	mov	w8, #0x1                   	// #1
     5ec:	add	x1, x1, #0x0
     5f0:	mov	x0, x20
     5f4:	mov	x2, x19
     5f8:	str	w8, [x19, #48]
     5fc:	bl	0 <ctf_archive_iter>
     600:	tbnz	w0, #31, 620 <ctf_link_one_input_archive+0xb8>
     604:	ldr	x0, [x19]
     608:	mov	w1, wzr
     60c:	bl	0 <ctf_set_errno>
     610:	b	640 <ctf_link_one_input_archive+0xd8>
     614:	ldr	x0, [x19, #24]
     618:	bl	0 <ctf_file_close>
     61c:	b	670 <ctf_link_one_input_archive+0x108>
     620:	ldp	x0, x20, [x19]
     624:	bl	0 <ctf_errno>
     628:	bl	0 <ctf_errmsg>
     62c:	mov	x2, x0
     630:	adrp	x0, 0 <ctf_add_type_mapping>
     634:	add	x0, x0, #0x0
     638:	mov	x1, x20
     63c:	bl	0 <ctf_dprintf>
     640:	ldr	x0, [x19, #24]
     644:	bl	0 <ctf_file_close>
     648:	ldr	x8, [x19]
     64c:	ldr	x0, [x8, #664]
     650:	cbz	x0, 65c <ctf_link_one_input_archive+0xf4>
     654:	bl	0 <ctf_dynhash_empty>
     658:	ldr	x8, [x19]
     65c:	ldr	x0, [x8, #656]
     660:	adrp	x1, 0 <ctf_add_type_mapping>
     664:	add	x1, x1, #0x0
     668:	mov	x2, xzr
     66c:	bl	0 <ctf_dynhash_iter>
     670:	ldp	x20, x19, [sp, #32]
     674:	ldp	x29, x30, [sp, #16]
     678:	add	sp, sp, #0x30
     67c:	ret

0000000000000680 <ctf_link_add_strtab>:
     680:	sub	sp, sp, #0x60
     684:	stp	x29, x30, [sp, #32]
     688:	add	x29, sp, #0x20
     68c:	stp	x22, x21, [sp, #64]
     690:	stp	x20, x19, [sp, #80]
     694:	mov	x20, x1
     698:	mov	x21, x0
     69c:	sub	x0, x29, #0x4
     6a0:	mov	x1, x2
     6a4:	stp	x24, x23, [sp, #48]
     6a8:	mov	x19, x2
     6ac:	blr	x20
     6b0:	cbz	x0, 728 <ctf_link_add_strtab+0xa8>
     6b4:	adrp	x22, 0 <ctf_add_type_mapping>
     6b8:	mov	x1, x0
     6bc:	mov	w24, wzr
     6c0:	mov	w23, #0xc                   	// #12
     6c4:	add	x22, x22, #0x0
     6c8:	ldur	w2, [x29, #-4]
     6cc:	str	x1, [sp, #8]
     6d0:	mov	x0, x21
     6d4:	stp	w2, wzr, [sp, #16]
     6d8:	ldr	w8, [x21, #552]
     6dc:	orr	w8, w8, #0x4
     6e0:	str	w8, [x21, #552]
     6e4:	bl	0 <ctf_str_add_external>
     6e8:	ldr	x8, [x21, #656]
     6ec:	cmp	w0, #0x0
     6f0:	add	x2, sp, #0x8
     6f4:	mov	x1, x22
     6f8:	mov	x0, x8
     6fc:	csel	w24, w23, w24, eq  // eq = none
     700:	bl	0 <ctf_dynhash_iter>
     704:	ldr	w8, [sp, #20]
     708:	sub	x0, x29, #0x4
     70c:	mov	x1, x19
     710:	cmp	w8, #0x0
     714:	csel	w24, w24, w8, eq  // eq = none
     718:	blr	x20
     71c:	mov	x1, x0
     720:	cbnz	x0, 6c8 <ctf_link_add_strtab+0x48>
     724:	neg	w0, w24
     728:	ldp	x20, x19, [sp, #80]
     72c:	ldp	x22, x21, [sp, #64]
     730:	ldp	x24, x23, [sp, #48]
     734:	ldp	x29, x30, [sp, #32]
     738:	add	sp, sp, #0x60
     73c:	ret

0000000000000740 <ctf_link_intern_extern_string>:
     740:	stp	x29, x30, [sp, #-32]!
     744:	ldr	w8, [x1, #552]
     748:	str	x19, [sp, #16]
     74c:	mov	x19, x2
     750:	mov	x0, x1
     754:	orr	w8, w8, #0x4
     758:	str	w8, [x1, #552]
     75c:	ldr	x1, [x2]
     760:	ldr	w2, [x2, #8]
     764:	mov	x29, sp
     768:	bl	0 <ctf_str_add_external>
     76c:	cbnz	w0, 778 <ctf_link_intern_extern_string+0x38>
     770:	mov	w8, #0xc                   	// #12
     774:	str	w8, [x19, #12]
     778:	ldr	x19, [sp, #16]
     77c:	ldp	x29, x30, [sp], #32
     780:	ret

0000000000000784 <ctf_link_shuffle_syms>:
     784:	mov	w0, wzr
     788:	ret

000000000000078c <ctf_link_write>:
     78c:	sub	sp, sp, #0x80
     790:	movi	v0.2d, #0x0
     794:	stp	x29, x30, [sp, #48]
     798:	stp	x24, x23, [sp, #80]
     79c:	stp	x22, x21, [sp, #96]
     7a0:	stp	x20, x19, [sp, #112]
     7a4:	stp	q0, q0, [sp, #16]
     7a8:	str	q0, [sp]
     7ac:	str	x0, [sp, #8]
     7b0:	mov	x19, x0
     7b4:	ldr	x0, [x0, #656]
     7b8:	mov	x23, x2
     7bc:	mov	x21, x1
     7c0:	str	x25, [sp, #64]
     7c4:	add	x29, sp, #0x30
     7c8:	cbz	x0, 870 <ctf_link_write+0xe4>
     7cc:	adrp	x1, 0 <ctf_add_type_mapping>
     7d0:	add	x1, x1, #0x0
     7d4:	mov	x2, sp
     7d8:	bl	0 <ctf_dynhash_iter>
     7dc:	mov	x0, x19
     7e0:	bl	0 <ctf_errno>
     7e4:	tbnz	w0, #31, 888 <ctf_link_write+0xfc>
     7e8:	ldr	x8, [sp, #24]
     7ec:	cbz	x8, 870 <ctf_link_write+0xe4>
     7f0:	ldr	x0, [sp]
     7f4:	lsl	x8, x8, #3
     7f8:	add	x1, x8, #0x8
     7fc:	bl	0 <realloc>
     800:	mov	x20, x0
     804:	cbz	x0, 898 <ctf_link_write+0x10c>
     808:	ldr	x8, [sp, #24]
     80c:	add	x0, x20, #0x8
     810:	mov	x1, x20
     814:	str	x20, [sp]
     818:	lsl	x2, x8, #3
     81c:	bl	0 <memmove>
     820:	adrp	x8, 0 <_CTF_SECTION>
     824:	add	x8, x8, #0x0
     828:	str	x8, [x20]
     82c:	ldr	x8, [x19, #680]
     830:	cbz	x8, 8ac <ctf_link_write+0x120>
     834:	ldr	x2, [x19, #688]
     838:	adrp	x1, 0 <_CTF_SECTION>
     83c:	add	x1, x1, #0x0
     840:	mov	x0, x19
     844:	blr	x8
     848:	mov	x20, x0
     84c:	cbz	x0, 8b0 <ctf_link_write+0x124>
     850:	ldr	x8, [sp]
     854:	adrp	x1, 0 <ctf_add_type_mapping>
     858:	add	x1, x1, #0x0
     85c:	mov	x2, x20
     860:	str	x20, [x8]
     864:	ldr	x0, [x19, #656]
     868:	bl	0 <ctf_dynhash_iter>
     86c:	b	8b0 <ctf_link_write+0x124>
     870:	mov	x0, x19
     874:	mov	x1, x21
     878:	mov	x2, x23
     87c:	bl	0 <ctf_write_mem>
     880:	mov	x24, x0
     884:	b	adc <ctf_link_write+0x350>
     888:	adrp	x23, 0 <ctf_add_type_mapping>
     88c:	mov	x20, xzr
     890:	add	x23, x23, #0x0
     894:	b	a74 <ctf_link_write+0x2e8>
     898:	adrp	x23, 0 <ctf_add_type_mapping>
     89c:	mov	x22, xzr
     8a0:	mov	x24, xzr
     8a4:	add	x23, x23, #0x0
     8a8:	b	a50 <ctf_link_write+0x2c4>
     8ac:	mov	x20, xzr
     8b0:	ldp	x0, x8, [sp, #16]
     8b4:	lsl	x8, x8, #3
     8b8:	add	x1, x8, #0x8
     8bc:	bl	0 <realloc>
     8c0:	mov	x22, x0
     8c4:	cbz	x0, 994 <ctf_link_write+0x208>
     8c8:	ldr	x8, [sp, #24]
     8cc:	add	x0, x22, #0x8
     8d0:	mov	x1, x22
     8d4:	str	x22, [sp, #16]
     8d8:	lsl	x2, x8, #3
     8dc:	bl	0 <memmove>
     8e0:	str	x19, [x22]
     8e4:	bl	0 <tmpfile>
     8e8:	mov	x22, x0
     8ec:	cbz	x0, 9a4 <ctf_link_write+0x218>
     8f0:	mov	x0, x22
     8f4:	bl	0 <fileno>
     8f8:	ldp	x1, x8, [sp, #16]
     8fc:	ldr	x3, [sp]
     900:	mov	x4, x23
     904:	add	x2, x8, #0x1
     908:	bl	0 <ctf_arc_write_fd>
     90c:	tbnz	w0, #31, 9b4 <ctf_link_write+0x228>
     910:	mov	w2, #0x2                   	// #2
     914:	mov	x0, x22
     918:	mov	x1, xzr
     91c:	bl	0 <fseek>
     920:	tbnz	w0, #31, 9cc <ctf_link_write+0x240>
     924:	mov	x0, x22
     928:	bl	0 <ftell>
     92c:	tbnz	x0, #63, 9dc <ctf_link_write+0x250>
     930:	mov	x25, x0
     934:	mov	x0, x22
     938:	mov	x1, xzr
     93c:	mov	w2, wzr
     940:	bl	0 <fseek>
     944:	tbnz	w0, #31, 9ec <ctf_link_write+0x260>
     948:	mov	x0, x25
     94c:	bl	0 <malloc>
     950:	mov	x24, x0
     954:	cbz	x0, a48 <ctf_link_write+0x2bc>
     958:	adrp	x23, 0 <ctf_add_type_mapping>
     95c:	add	x23, x23, #0x0
     960:	mov	x0, x22
     964:	bl	0 <feof>
     968:	cbnz	w0, 9fc <ctf_link_write+0x270>
     96c:	mov	w2, #0x1                   	// #1
     970:	mov	x0, x24
     974:	mov	x1, x25
     978:	mov	x3, x22
     97c:	bl	0 <fread>
     980:	cbnz	x0, 9fc <ctf_link_write+0x270>
     984:	mov	x0, x22
     988:	bl	0 <ferror>
     98c:	cbz	w0, 960 <ctf_link_write+0x1d4>
     990:	b	a50 <ctf_link_write+0x2c4>
     994:	adrp	x23, 0 <ctf_add_type_mapping>
     998:	mov	x24, xzr
     99c:	add	x23, x23, #0x0
     9a0:	b	a50 <ctf_link_write+0x2c4>
     9a4:	adrp	x23, 0 <ctf_add_type_mapping>
     9a8:	mov	x24, xzr
     9ac:	add	x23, x23, #0x0
     9b0:	b	a50 <ctf_link_write+0x2c4>
     9b4:	mov	w1, w0
     9b8:	mov	x0, x19
     9bc:	bl	0 <ctf_set_errno>
     9c0:	adrp	x23, 0 <ctf_add_type_mapping>
     9c4:	add	x23, x23, #0x0
     9c8:	b	a6c <ctf_link_write+0x2e0>
     9cc:	adrp	x23, 0 <ctf_add_type_mapping>
     9d0:	mov	x24, xzr
     9d4:	add	x23, x23, #0x0
     9d8:	b	a50 <ctf_link_write+0x2c4>
     9dc:	adrp	x23, 0 <ctf_add_type_mapping>
     9e0:	mov	x24, xzr
     9e4:	add	x23, x23, #0x0
     9e8:	b	a50 <ctf_link_write+0x2c4>
     9ec:	adrp	x23, 0 <ctf_add_type_mapping>
     9f0:	mov	x24, xzr
     9f4:	add	x23, x23, #0x0
     9f8:	b	a50 <ctf_link_write+0x2c4>
     9fc:	str	x25, [x21]
     a00:	ldr	x0, [sp]
     a04:	bl	0 <free>
     a08:	ldr	x0, [sp, #16]
     a0c:	bl	0 <free>
     a10:	mov	x0, x20
     a14:	bl	0 <free>
     a18:	ldr	x8, [sp, #40]
     a1c:	cbz	x8, adc <ctf_link_write+0x350>
     a20:	ldr	x0, [sp, #32]
     a24:	mov	x19, xzr
     a28:	ldr	x0, [x0, x19, lsl #3]
     a2c:	bl	0 <free>
     a30:	ldp	x0, x8, [sp, #32]
     a34:	add	x19, x19, #0x1
     a38:	cmp	x19, x8
     a3c:	b.cc	a28 <ctf_link_write+0x29c>  // b.lo, b.ul, b.last
     a40:	bl	0 <free>
     a44:	b	adc <ctf_link_write+0x350>
     a48:	adrp	x23, 0 <ctf_add_type_mapping>
     a4c:	add	x23, x23, #0x0
     a50:	bl	0 <__errno_location>
     a54:	ldr	w1, [x0]
     a58:	mov	x0, x19
     a5c:	bl	0 <ctf_set_errno>
     a60:	mov	x0, x24
     a64:	bl	0 <free>
     a68:	cbz	x22, a74 <ctf_link_write+0x2e8>
     a6c:	mov	x0, x22
     a70:	bl	0 <fclose>
     a74:	ldr	x0, [sp]
     a78:	bl	0 <free>
     a7c:	ldr	x0, [sp, #16]
     a80:	bl	0 <free>
     a84:	mov	x0, x20
     a88:	bl	0 <free>
     a8c:	ldr	x8, [sp, #40]
     a90:	cbz	x8, ab8 <ctf_link_write+0x32c>
     a94:	ldr	x0, [sp, #32]
     a98:	mov	x20, xzr
     a9c:	ldr	x0, [x0, x20, lsl #3]
     aa0:	bl	0 <free>
     aa4:	ldp	x0, x8, [sp, #32]
     aa8:	add	x20, x20, #0x1
     aac:	cmp	x20, x8
     ab0:	b.cc	a9c <ctf_link_write+0x310>  // b.lo, b.ul, b.last
     ab4:	bl	0 <free>
     ab8:	mov	x0, x19
     abc:	bl	0 <ctf_errno>
     ac0:	bl	0 <ctf_errmsg>
     ac4:	mov	x2, x0
     ac8:	adrp	x0, 0 <ctf_add_type_mapping>
     acc:	add	x0, x0, #0x0
     ad0:	mov	x1, x23
     ad4:	bl	0 <ctf_dprintf>
     ad8:	mov	x24, xzr
     adc:	mov	x0, x24
     ae0:	ldp	x20, x19, [sp, #112]
     ae4:	ldp	x22, x21, [sp, #96]
     ae8:	ldp	x24, x23, [sp, #80]
     aec:	ldr	x25, [sp, #64]
     af0:	ldp	x29, x30, [sp, #48]
     af4:	add	sp, sp, #0x80
     af8:	ret

0000000000000afc <ctf_accumulate_archive_names>:
     afc:	stp	x29, x30, [sp, #-64]!
     b00:	stp	x24, x23, [sp, #16]
     b04:	stp	x22, x21, [sp, #32]
     b08:	stp	x20, x19, [sp, #48]
     b0c:	ldr	x8, [x2, #24]
     b10:	mov	x22, x0
     b14:	ldr	x0, [x2]
     b18:	mov	x20, x1
     b1c:	add	x8, x8, #0x1
     b20:	lsl	x1, x8, #3
     b24:	mov	x29, sp
     b28:	mov	x19, x2
     b2c:	str	x8, [x2, #24]
     b30:	bl	0 <realloc>
     b34:	cbz	x0, bc0 <ctf_accumulate_archive_names+0xc4>
     b38:	mov	x21, x0
     b3c:	ldp	x0, x8, [x19, #16]
     b40:	lsl	x1, x8, #3
     b44:	bl	0 <realloc>
     b48:	cbz	x0, bc0 <ctf_accumulate_archive_names+0xc4>
     b4c:	ldr	x8, [x20, #680]
     b50:	mov	x23, x0
     b54:	cbz	x8, b90 <ctf_accumulate_archive_names+0x94>
     b58:	ldr	x2, [x20, #688]
     b5c:	mov	x0, x20
     b60:	mov	x1, x22
     b64:	blr	x8
     b68:	cbz	x0, b90 <ctf_accumulate_archive_names+0x94>
     b6c:	mov	x24, x0
     b70:	ldp	x0, x8, [x19, #32]
     b74:	add	x8, x8, #0x1
     b78:	lsl	x1, x8, #3
     b7c:	str	x8, [x19, #40]
     b80:	bl	0 <realloc>
     b84:	cbz	x0, be8 <ctf_accumulate_archive_names+0xec>
     b88:	mov	x22, x24
     b8c:	str	x0, [x19, #32]
     b90:	ldr	x8, [x19, #24]
     b94:	str	x21, [x19]
     b98:	lsl	x8, x8, #3
     b9c:	sub	x8, x8, #0x8
     ba0:	str	x22, [x21, x8]
     ba4:	str	x23, [x19, #16]
     ba8:	str	x20, [x23, x8]
     bac:	ldp	x20, x19, [sp, #48]
     bb0:	ldp	x22, x21, [sp, #32]
     bb4:	ldp	x24, x23, [sp, #16]
     bb8:	ldp	x29, x30, [sp], #64
     bbc:	ret
     bc0:	ldr	x8, [x19, #24]
     bc4:	ldr	x0, [x19, #8]
     bc8:	mov	w1, #0xc                   	// #12
     bcc:	sub	x8, x8, #0x1
     bd0:	str	x8, [x19, #24]
     bd4:	ldp	x20, x19, [sp, #48]
     bd8:	ldp	x22, x21, [sp, #32]
     bdc:	ldp	x24, x23, [sp, #16]
     be0:	ldp	x29, x30, [sp], #64
     be4:	b	0 <ctf_set_errno>
     be8:	ldr	x8, [x19, #40]
     bec:	ldr	x0, [x19, #8]
     bf0:	mov	w1, #0xc                   	// #12
     bf4:	sub	x8, x8, #0x1
     bf8:	str	x8, [x19, #40]
     bfc:	b	bd4 <ctf_accumulate_archive_names+0xd8>

0000000000000c00 <ctf_change_parent_name>:
     c00:	mov	x0, x1
     c04:	mov	x1, x2
     c08:	b	0 <ctf_parent_name_set>

0000000000000c0c <ctf_link_one_input_archive_member>:
     c0c:	stp	x29, x30, [sp, #-48]!
     c10:	stp	x22, x21, [sp, #16]
     c14:	mov	x21, x1
     c18:	adrp	x1, 0 <_CTF_SECTION>
     c1c:	stp	x20, x19, [sp, #32]
     c20:	mov	x20, x0
     c24:	add	x1, x1, #0x0
     c28:	mov	x0, x21
     c2c:	mov	x29, sp
     c30:	mov	x19, x2
     c34:	bl	0 <strcmp>
     c38:	cbz	w0, cd4 <ctf_link_one_input_archive_member+0xc8>
     c3c:	mov	x0, x21
     c40:	bl	0 <strdup>
     c44:	mov	x22, x19
     c48:	str	x0, [x22, #40]!
     c4c:	ldur	x1, [x22, #-16]
     c50:	mov	x0, x20
     c54:	bl	0 <ctf_import>
     c58:	mov	w8, #0x1                   	// #1
     c5c:	str	w8, [x22, #16]
     c60:	ldr	x8, [x22]
     c64:	cbz	x8, d20 <ctf_link_one_input_archive_member+0x114>
     c68:	adrp	x1, 0 <ctf_add_type_mapping>
     c6c:	add	x1, x1, #0x0
     c70:	mov	w2, #0x5                   	// #5
     c74:	mov	x0, x21
     c78:	str	x21, [x19, #32]
     c7c:	bl	0 <strncmp>
     c80:	cbnz	w0, c8c <ctf_link_one_input_archive_member+0x80>
     c84:	add	x8, x21, #0x5
     c88:	str	x8, [x19, #32]
     c8c:	adrp	x1, 0 <ctf_add_type_mapping>
     c90:	add	x1, x1, #0x0
     c94:	mov	x0, x20
     c98:	mov	x2, x19
     c9c:	str	x20, [x19, #16]
     ca0:	bl	0 <ctf_type_iter_all>
     ca4:	tbnz	w0, #31, cbc <ctf_link_one_input_archive_member+0xb0>
     ca8:	adrp	x1, 0 <ctf_add_type_mapping>
     cac:	add	x1, x1, #0x0
     cb0:	mov	x0, x20
     cb4:	mov	x2, x19
     cb8:	bl	0 <ctf_variable_iter>
     cbc:	mov	w21, w0
     cc0:	ldr	x0, [x19, #40]
     cc4:	str	wzr, [x19, #56]
     cc8:	bl	0 <free>
     ccc:	asr	w0, w21, #31
     cd0:	b	d2c <ctf_link_one_input_archive_member+0x120>
     cd4:	ldr	w8, [x19, #48]
     cd8:	cbz	w8, ce4 <ctf_link_one_input_archive_member+0xd8>
     cdc:	mov	w0, wzr
     ce0:	b	d2c <ctf_link_one_input_archive_member+0x120>
     ce4:	adrp	x0, 0 <ctf_add_type_mapping>
     ce8:	add	x0, x0, #0x0
     cec:	bl	0 <strdup>
     cf0:	mov	x22, x19
     cf4:	str	x0, [x22, #40]!
     cf8:	cbz	x0, d20 <ctf_link_one_input_archive_member+0x114>
     cfc:	ldr	x1, [x19, #8]
     d00:	bl	0 <ctf_str_append>
     d04:	cbz	x0, d10 <ctf_link_one_input_archive_member+0x104>
     d08:	str	x0, [x22]
     d0c:	b	c68 <ctf_link_one_input_archive_member+0x5c>
     d10:	ldr	x0, [x22]
     d14:	bl	0 <free>
     d18:	ldr	x8, [x22]
     d1c:	cbnz	x8, c68 <ctf_link_one_input_archive_member+0x5c>
     d20:	mov	w1, #0xc                   	// #12
     d24:	mov	x0, x20
     d28:	bl	0 <ctf_set_errno>
     d2c:	ldp	x20, x19, [sp, #32]
     d30:	ldp	x22, x21, [sp, #16]
     d34:	ldp	x29, x30, [sp], #48
     d38:	ret

0000000000000d3c <empty_link_type_mapping>:
     d3c:	ldr	x0, [x1, #664]
     d40:	cbz	x0, d48 <empty_link_type_mapping+0xc>
     d44:	b	0 <ctf_dynhash_empty>
     d48:	ret

0000000000000d4c <ctf_link_one_type>:
     d4c:	stp	x29, x30, [sp, #-64]!
     d50:	stp	x22, x21, [sp, #32]
     d54:	stp	x20, x19, [sp, #48]
     d58:	ldr	w8, [x2, #52]
     d5c:	mov	x19, x2
     d60:	str	x23, [sp, #16]
     d64:	mov	x29, sp
     d68:	cbz	w8, d88 <ctf_link_one_type+0x3c>
     d6c:	adrp	x0, 0 <ctf_add_type_mapping>
     d70:	add	x0, x0, #0x0
     d74:	bl	0 <ctf_dprintf>
     d78:	ldr	x0, [x19]
     d7c:	mov	w1, #0x419                 	// #1049
     d80:	bl	0 <ctf_set_errno>
     d84:	b	e38 <ctf_link_one_type+0xec>
     d88:	ldr	w8, [x19, #56]
     d8c:	mov	x20, x0
     d90:	cbz	w8, e14 <ctf_link_one_type+0xc8>
     d94:	ldp	x0, x1, [x19]
     d98:	ldr	x2, [x19, #32]
     d9c:	bl	378 <ctf_create_per_cu>
     da0:	cbz	x0, e34 <ctf_link_one_type+0xe8>
     da4:	ldr	x1, [x19, #16]
     da8:	mov	x2, x20
     dac:	mov	x21, x0
     db0:	bl	0 <ctf_add_type>
     db4:	cmn	x0, #0x1
     db8:	b.ne	e2c <ctf_link_one_type+0xe0>  // b.any
     dbc:	mov	x0, x21
     dc0:	bl	0 <ctf_errno>
     dc4:	cmp	w0, #0x41b
     dc8:	b.eq	e2c <ctf_link_one_type+0xe0>  // b.none
     dcc:	ldr	x22, [x19, #40]
     dd0:	ldr	x23, [x19, #8]
     dd4:	mov	w21, w0
     dd8:	bl	0 <ctf_errmsg>
     ddc:	mov	x5, x0
     de0:	adrp	x0, 0 <ctf_add_type_mapping>
     de4:	add	x0, x0, #0x0
     de8:	mov	x1, x20
     dec:	mov	x2, x22
     df0:	mov	x3, x23
     df4:	mov	x4, x22
     df8:	bl	0 <ctf_dprintf>
     dfc:	cmp	w21, #0x411
     e00:	b.ne	e2c <ctf_link_one_type+0xe0>  // b.any
     e04:	ldr	x0, [x19]
     e08:	mov	w1, wzr
     e0c:	bl	0 <ctf_set_errno>
     e10:	b	e2c <ctf_link_one_type+0xe0>
     e14:	ldr	x0, [x19]
     e18:	ldr	x1, [x19, #16]
     e1c:	mov	x2, x20
     e20:	bl	0 <ctf_add_type>
     e24:	cmn	x0, #0x1
     e28:	b.eq	e4c <ctf_link_one_type+0x100>  // b.none
     e2c:	mov	w0, wzr
     e30:	b	e38 <ctf_link_one_type+0xec>
     e34:	mov	w0, #0xffffffff            	// #-1
     e38:	ldp	x20, x19, [sp, #48]
     e3c:	ldp	x22, x21, [sp, #32]
     e40:	ldr	x23, [sp, #16]
     e44:	ldp	x29, x30, [sp], #64
     e48:	ret
     e4c:	ldr	x0, [x19]
     e50:	bl	0 <ctf_errno>
     e54:	cmp	w0, #0x411
     e58:	b.eq	e90 <ctf_link_one_type+0x144>  // b.none
     e5c:	cmp	w0, #0x41b
     e60:	b.eq	e2c <ctf_link_one_type+0xe0>  // b.none
     e64:	ldr	x21, [x19, #40]
     e68:	ldr	x19, [x19, #8]
     e6c:	bl	0 <ctf_errmsg>
     e70:	mov	x4, x0
     e74:	adrp	x0, 0 <ctf_add_type_mapping>
     e78:	add	x0, x0, #0x0
     e7c:	mov	x1, x20
     e80:	mov	x2, x21
     e84:	mov	x3, x19
     e88:	bl	0 <ctf_dprintf>
     e8c:	b	e2c <ctf_link_one_type+0xe0>
     e90:	ldr	x0, [x19]
     e94:	mov	w1, wzr
     e98:	bl	0 <ctf_set_errno>
     e9c:	b	d94 <ctf_link_one_type+0x48>

0000000000000ea0 <ctf_link_one_variable>:
     ea0:	sub	sp, sp, #0x50
     ea4:	stp	x29, x30, [sp, #16]
     ea8:	stp	x24, x23, [sp, #32]
     eac:	stp	x22, x21, [sp, #48]
     eb0:	stp	x20, x19, [sp, #64]
     eb4:	ldr	x8, [x2, #16]
     eb8:	ldr	x23, [x2]
     ebc:	mov	x19, x2
     ec0:	mov	x21, x1
     ec4:	ldr	w9, [x8, #544]
     ec8:	mov	x20, x0
     ecc:	add	x29, sp, #0x10
     ed0:	cmp	x9, x1
     ed4:	b.cc	ee8 <ctf_link_one_variable+0x48>  // b.lo, b.ul, b.last
     ed8:	ldr	x9, [x8, #512]
     edc:	cmp	x9, #0x0
     ee0:	csel	x8, x8, x9, eq  // eq = none
     ee4:	ldr	w9, [x8, #544]
     ee8:	and	x9, x9, x21
     eec:	stp	x8, x9, [sp]
     ef0:	ldr	x0, [x23, #664]
     ef4:	cbz	x0, f20 <ctf_link_one_variable+0x80>
     ef8:	mov	x1, sp
     efc:	bl	0 <ctf_dynhash_lookup>
     f00:	ldr	x24, [x23, #512]
     f04:	cbz	x0, f24 <ctf_link_one_variable+0x84>
     f08:	mov	x22, x0
     f0c:	cbz	x24, f58 <ctf_link_one_variable+0xb8>
     f10:	ldr	w8, [x23, #544]
     f14:	add	w8, w8, #0x1
     f18:	orr	x22, x8, x22
     f1c:	b	f58 <ctf_link_one_variable+0xb8>
     f20:	ldr	x24, [x23, #512]
     f24:	cbz	x24, f6c <ctf_link_one_variable+0xcc>
     f28:	ldr	x0, [x24, #664]
     f2c:	cbz	x0, f6c <ctf_link_one_variable+0xcc>
     f30:	mov	x1, sp
     f34:	bl	0 <ctf_dynhash_lookup>
     f38:	cbz	x0, f6c <ctf_link_one_variable+0xcc>
     f3c:	ldr	x8, [x24, #512]
     f40:	mov	x22, x0
     f44:	cbz	x8, f54 <ctf_link_one_variable+0xb4>
     f48:	ldr	w8, [x24, #544]
     f4c:	add	w8, w8, #0x1
     f50:	orr	x22, x8, x22
     f54:	mov	x23, x24
     f58:	ldr	x8, [x19]
     f5c:	cmp	x23, x8
     f60:	b.eq	fe4 <ctf_link_one_variable+0x144>  // b.none
     f64:	mov	w24, wzr
     f68:	b	f74 <ctf_link_one_variable+0xd4>
     f6c:	mov	x22, xzr
     f70:	mov	w24, #0x1                   	// #1
     f74:	ldp	x0, x1, [x19]
     f78:	ldr	x2, [x19, #32]
     f7c:	bl	378 <ctf_create_per_cu>
     f80:	cbz	x0, fdc <ctf_link_one_variable+0x13c>
     f84:	mov	x23, x0
     f88:	cbz	w24, 106c <ctf_link_one_variable+0x1cc>
     f8c:	ldr	x8, [x19, #16]
     f90:	ldr	w9, [x8, #544]
     f94:	cmp	x9, x21
     f98:	b.cc	fac <ctf_link_one_variable+0x10c>  // b.lo, b.ul, b.last
     f9c:	ldr	x9, [x8, #512]
     fa0:	cmp	x9, #0x0
     fa4:	csel	x8, x8, x9, eq  // eq = none
     fa8:	ldr	w9, [x8, #544]
     fac:	and	x9, x9, x21
     fb0:	stp	x8, x9, [sp]
     fb4:	ldr	x0, [x23, #664]
     fb8:	cbz	x0, 1030 <ctf_link_one_variable+0x190>
     fbc:	mov	x1, sp
     fc0:	bl	0 <ctf_dynhash_lookup>
     fc4:	ldr	x24, [x23, #512]
     fc8:	cbz	x0, 103c <ctf_link_one_variable+0x19c>
     fcc:	mov	x22, x0
     fd0:	cbz	x24, 106c <ctf_link_one_variable+0x1cc>
     fd4:	ldr	w8, [x23, #544]
     fd8:	b	1064 <ctf_link_one_variable+0x1c4>
     fdc:	mov	w0, #0xffffffff            	// #-1
     fe0:	b	10e8 <ctf_link_one_variable+0x248>
     fe4:	ldr	x0, [x23, #592]
     fe8:	mov	x1, x20
     fec:	bl	0 <ctf_dynhash_lookup>
     ff0:	cbz	x0, 109c <ctf_link_one_variable+0x1fc>
     ff4:	ldr	x8, [x0, #24]
     ff8:	mov	x24, x0
     ffc:	cmp	x8, x22
    1000:	mov	x8, x22
    1004:	b.eq	101c <ctf_link_one_variable+0x17c>  // b.none
    1008:	adrp	x0, 0 <ctf_add_type_mapping>
    100c:	add	x0, x0, #0x0
    1010:	mov	x1, x20
    1014:	bl	0 <ctf_dprintf>
    1018:	ldr	x8, [x24, #24]
    101c:	mov	w24, wzr
    1020:	cmp	x8, x21
    1024:	mov	w0, wzr
    1028:	b.ne	f74 <ctf_link_one_variable+0xd4>  // b.any
    102c:	b	10e8 <ctf_link_one_variable+0x248>
    1030:	ldr	x24, [x23, #512]
    1034:	cbnz	x24, 1040 <ctf_link_one_variable+0x1a0>
    1038:	b	10cc <ctf_link_one_variable+0x22c>
    103c:	cbz	x24, 10cc <ctf_link_one_variable+0x22c>
    1040:	ldr	x0, [x24, #664]
    1044:	cbz	x0, 10cc <ctf_link_one_variable+0x22c>
    1048:	mov	x1, sp
    104c:	bl	0 <ctf_dynhash_lookup>
    1050:	cbz	x0, 10cc <ctf_link_one_variable+0x22c>
    1054:	ldr	x8, [x24, #512]
    1058:	mov	x22, x0
    105c:	cbz	x8, 106c <ctf_link_one_variable+0x1cc>
    1060:	ldr	w8, [x24, #544]
    1064:	add	w8, w8, #0x1
    1068:	orr	x22, x8, x22
    106c:	ldr	x0, [x23, #592]
    1070:	mov	x1, x20
    1074:	bl	0 <ctf_dynhash_lookup>
    1078:	cbz	x0, 109c <ctf_link_one_variable+0x1fc>
    107c:	ldr	x8, [x0, #24]
    1080:	cmp	x8, x22
    1084:	b.eq	10e4 <ctf_link_one_variable+0x244>  // b.none
    1088:	adrp	x0, 0 <ctf_add_type_mapping>
    108c:	add	x0, x0, #0x0
    1090:	mov	x1, x20
    1094:	bl	0 <ctf_dprintf>
    1098:	b	10e4 <ctf_link_one_variable+0x244>
    109c:	mov	x0, x23
    10a0:	mov	x1, x20
    10a4:	mov	x2, x22
    10a8:	bl	0 <ctf_add_variable>
    10ac:	tbz	w0, #31, 10e4 <ctf_link_one_variable+0x244>
    10b0:	ldr	x19, [x19]
    10b4:	mov	x0, x23
    10b8:	bl	0 <ctf_errno>
    10bc:	mov	w1, w0
    10c0:	mov	x0, x19
    10c4:	bl	0 <ctf_set_errno>
    10c8:	b	10e8 <ctf_link_one_variable+0x248>
    10cc:	ldr	x3, [x19, #8]
    10d0:	adrp	x0, 0 <ctf_add_type_mapping>
    10d4:	add	x0, x0, #0x0
    10d8:	mov	x1, x21
    10dc:	mov	x2, x20
    10e0:	bl	0 <ctf_dprintf>
    10e4:	mov	w0, wzr
    10e8:	ldp	x20, x19, [sp, #64]
    10ec:	ldp	x22, x21, [sp, #48]
    10f0:	ldp	x24, x23, [sp, #32]
    10f4:	ldp	x29, x30, [sp, #16]
    10f8:	add	sp, sp, #0x50
    10fc:	ret

ctf-lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_lookup_by_name>:
   0:	sub	sp, sp, #0x70
   4:	stp	x20, x19, [sp, #96]
   8:	mov	x19, x0
   c:	stp	x29, x30, [sp, #16]
  10:	stp	x28, x27, [sp, #32]
  14:	stp	x26, x25, [sp, #48]
  18:	stp	x24, x23, [sp, #64]
  1c:	stp	x22, x21, [sp, #80]
  20:	add	x29, sp, #0x10
  24:	cbz	x1, 250 <ctf_lookup_by_name+0x250>
  28:	mov	x0, x1
  2c:	mov	x20, x1
  30:	bl	0 <strlen>
  34:	ldrb	w27, [x20]
  38:	cbz	w27, 2bc <ctf_lookup_by_name+0x2bc>
  3c:	add	x26, x20, x0
  40:	bl	0 <__ctype_b_loc>
  44:	mov	x21, x0
  48:	mov	x23, xzr
  4c:	add	x8, x19, #0xf0
  50:	mov	x24, x20
  54:	str	x8, [sp, #8]
  58:	ldr	x28, [x21]
  5c:	and	x8, x27, #0xff
  60:	ldrh	w8, [x28, x8, lsl #1]
  64:	tbz	w8, #13, 74 <ctf_lookup_by_name+0x74>
  68:	ldrb	w27, [x24, #1]!
  6c:	ldrh	w8, [x28, x27, lsl #1]
  70:	tbnz	w8, #13, 68 <ctf_lookup_by_name+0x68>
  74:	cmp	x24, x26
  78:	b.eq	2a8 <ctf_lookup_by_name+0x2a8>  // b.none
  7c:	add	x22, x24, #0x1
  80:	adrp	x1, 0 <ctf_lookup_by_name>
  84:	mov	x0, x22
  88:	add	x1, x1, #0x0
  8c:	bl	0 <strpbrk>
  90:	cmp	x0, #0x0
  94:	and	w8, w27, #0xff
  98:	csel	x25, x26, x0, eq  // eq = none
  9c:	cmp	w8, #0x2a
  a0:	b.ne	fc <ctf_lookup_by_name+0xfc>  // b.any
  a4:	ldr	w8, [x19, #544]
  a8:	ldr	x9, [x19, #448]
  ac:	and	x10, x23, x8
  b0:	ldr	w9, [x9, x10, lsl #2]
  b4:	cbnz	w9, e0 <ctf_lookup_by_name+0xe0>
  b8:	mov	x0, x19
  bc:	mov	x1, x23
  c0:	bl	0 <ctf_type_resolve_unsliced>
  c4:	cmn	x0, #0x1
  c8:	b.eq	258 <ctf_lookup_by_name+0x258>  // b.none
  cc:	ldr	w8, [x19, #544]
  d0:	ldr	x9, [x19, #448]
  d4:	and	x10, x0, x8
  d8:	ldr	w9, [x9, x10, lsl #2]
  dc:	cbz	w9, 258 <ctf_lookup_by_name+0x258>
  e0:	ldrb	w10, [x19, #552]
  e4:	add	w8, w8, #0x1
  e8:	mov	x25, x22
  ec:	sbfx	w10, w10, #0, #1
  f0:	and	w8, w10, w8
  f4:	orr	w23, w9, w8
  f8:	b	23c <ctf_lookup_by_name+0x23c>
  fc:	ldurb	w8, [x25, #-1]
 100:	sub	x22, x25, x24
 104:	add	x8, x8, w22, sxtw
 108:	cmp	w8, #0x69
 10c:	b.lt	154 <ctf_lookup_by_name+0x154>  // b.tstop
 110:	sub	x8, x8, #0x69
 114:	cmp	w8, #0x14
 118:	b.hi	154 <ctf_lookup_by_name+0x154>  // b.pmore
 11c:	adrp	x9, 0 <ctf_lookup_by_name>
 120:	add	x9, x9, #0x0
 124:	add	x9, x9, x8, lsl #4
 128:	ldr	x9, [x9, #8]
 12c:	cmp	x9, x22
 130:	b.ne	154 <ctf_lookup_by_name+0x154>  // b.any
 134:	adrp	x9, 0 <ctf_lookup_by_name>
 138:	lsl	x8, x8, #4
 13c:	add	x9, x9, #0x0
 140:	ldr	x0, [x9, x8]
 144:	mov	x1, x24
 148:	mov	x2, x22
 14c:	bl	0 <strncmp>
 150:	cbz	w0, 23c <ctf_lookup_by_name+0x23c>
 154:	ldr	x1, [x19, #216]
 158:	cbz	x1, 258 <ctf_lookup_by_name+0x258>
 15c:	ldr	x27, [sp, #8]
 160:	b	178 <ctf_lookup_by_name+0x178>
 164:	ldur	x8, [x27, #-16]
 168:	cmp	x22, x8
 16c:	b.cs	194 <ctf_lookup_by_name+0x194>  // b.hs, b.nlast
 170:	ldr	x1, [x27], #24
 174:	cbz	x1, 258 <ctf_lookup_by_name+0x258>
 178:	ldrb	w8, [x1]
 17c:	cbz	w8, 164 <ctf_lookup_by_name+0x164>
 180:	mov	x0, x24
 184:	mov	x2, x22
 188:	bl	0 <strncmp>
 18c:	cbnz	w0, 170 <ctf_lookup_by_name+0x170>
 190:	b	164 <ctf_lookup_by_name+0x164>
 194:	add	x8, x24, x8
 198:	sub	x23, x8, #0x1
 19c:	ldrb	w8, [x23, #1]!
 1a0:	ldrh	w8, [x28, x8, lsl #1]
 1a4:	tbnz	w8, #13, 19c <ctf_lookup_by_name+0x19c>
 1a8:	mov	w1, #0x2a                  	// #42
 1ac:	mov	x0, x23
 1b0:	bl	0 <strchr>
 1b4:	cmp	x0, #0x0
 1b8:	csel	x8, x26, x0, eq  // eq = none
 1bc:	add	x25, x8, #0x1
 1c0:	ldurb	w8, [x25, #-2]
 1c4:	sub	x25, x25, #0x1
 1c8:	ldrh	w8, [x28, x8, lsl #1]
 1cc:	tbnz	w8, #13, 1c0 <ctf_lookup_by_name+0x1c0>
 1d0:	ldr	x8, [x19, #712]
 1d4:	ldr	x0, [x19, #704]
 1d8:	sub	x24, x25, x23
 1dc:	add	x9, x24, #0x1
 1e0:	cmp	x8, x9
 1e4:	b.cs	208 <ctf_lookup_by_name+0x208>  // b.hs, b.nlast
 1e8:	bl	0 <free>
 1ec:	mov	x0, x23
 1f0:	mov	x1, x24
 1f4:	bl	0 <xstrndup>
 1f8:	mov	x2, x0
 1fc:	str	x0, [x19, #704]
 200:	cbnz	x0, 220 <ctf_lookup_by_name+0x220>
 204:	b	2e4 <ctf_lookup_by_name+0x2e4>
 208:	mov	x1, x23
 20c:	mov	x2, x24
 210:	bl	0 <memcpy>
 214:	ldr	x8, [x19, #704]
 218:	strb	wzr, [x8, x24]
 21c:	ldr	x2, [x19, #704]
 220:	ldur	x1, [x27, #-8]
 224:	mov	x0, x19
 228:	bl	0 <ctf_lookup_by_rawhash>
 22c:	cbz	x0, 258 <ctf_lookup_by_name+0x258>
 230:	ldur	x8, [x27, #-24]
 234:	mov	x23, x0
 238:	cbz	x8, 258 <ctf_lookup_by_name+0x258>
 23c:	ldrb	w27, [x25]
 240:	mov	x24, x25
 244:	cbnz	w27, 58 <ctf_lookup_by_name+0x58>
 248:	mov	w8, wzr
 24c:	b	2b4 <ctf_lookup_by_name+0x2b4>
 250:	mov	w1, #0x16                  	// #22
 254:	b	2c0 <ctf_lookup_by_name+0x2c0>
 258:	mov	w1, #0x402                 	// #1026
 25c:	mov	x0, x19
 260:	bl	0 <ctf_set_errno>
 264:	ldr	x0, [x19, #512]
 268:	cbz	x0, 280 <ctf_lookup_by_name+0x280>
 26c:	mov	x1, x20
 270:	bl	0 <ctf_lookup_by_name>
 274:	mov	x23, x0
 278:	cmn	x0, #0x1
 27c:	b.ne	284 <ctf_lookup_by_name+0x284>  // b.any
 280:	mov	x23, #0xffffffffffffffff    	// #-1
 284:	mov	x0, x23
 288:	ldp	x20, x19, [sp, #96]
 28c:	ldp	x22, x21, [sp, #80]
 290:	ldp	x24, x23, [sp, #64]
 294:	ldp	x26, x25, [sp, #48]
 298:	ldp	x28, x27, [sp, #32]
 29c:	ldp	x29, x30, [sp, #16]
 2a0:	add	sp, sp, #0x70
 2a4:	ret
 2a8:	ldrb	w8, [x26]
 2ac:	cmp	w8, #0x0
 2b0:	cset	w8, ne  // ne = any
 2b4:	cbz	x23, 2bc <ctf_lookup_by_name+0x2bc>
 2b8:	cbz	w8, 284 <ctf_lookup_by_name+0x284>
 2bc:	mov	w1, #0x403                 	// #1027
 2c0:	mov	x0, x19
 2c4:	ldp	x20, x19, [sp, #96]
 2c8:	ldp	x22, x21, [sp, #80]
 2cc:	ldp	x24, x23, [sp, #64]
 2d0:	ldp	x26, x25, [sp, #48]
 2d4:	ldp	x28, x27, [sp, #32]
 2d8:	ldp	x29, x30, [sp, #16]
 2dc:	add	sp, sp, #0x70
 2e0:	b	0 <ctf_set_errno>
 2e4:	mov	w1, #0xc                   	// #12
 2e8:	mov	x0, x19
 2ec:	bl	0 <ctf_set_errno>
 2f0:	b	280 <ctf_lookup_by_name+0x280>

00000000000002f4 <ctf_lookup_variable>:
 2f4:	stp	x29, x30, [sp, #-80]!
 2f8:	stp	x20, x19, [sp, #64]
 2fc:	mov	x19, x1
 300:	str	x25, [sp, #16]
 304:	stp	x24, x23, [sp, #32]
 308:	stp	x22, x21, [sp, #48]
 30c:	mov	x29, sp
 310:	b	31c <ctf_lookup_variable+0x28>
 314:	ldr	x0, [x20, #512]
 318:	cbz	x0, 390 <ctf_lookup_variable+0x9c>
 31c:	ldr	x22, [x0, #472]
 320:	mov	x20, x0
 324:	cbz	x22, 314 <ctf_lookup_variable+0x20>
 328:	ldr	x21, [x20, #464]
 32c:	mov	x23, xzr
 330:	b	348 <ctf_lookup_variable+0x54>
 334:	add	x23, x24, #0x1
 338:	mov	x24, x22
 33c:	cmp	x23, x24
 340:	mov	x22, x24
 344:	b.cs	314 <ctf_lookup_variable+0x20>  // b.hs, b.nlast
 348:	add	x8, x22, x23
 34c:	lsr	x24, x8, #1
 350:	add	x25, x21, x24, lsl #3
 354:	ldr	w1, [x25]
 358:	mov	x0, x20
 35c:	bl	0 <ctf_strptr>
 360:	mov	x1, x0
 364:	mov	x0, x19
 368:	bl	0 <strcmp>
 36c:	tbnz	w0, #31, 33c <ctf_lookup_variable+0x48>
 370:	cbnz	w0, 334 <ctf_lookup_variable+0x40>
 374:	ldr	w0, [x25, #4]
 378:	ldp	x20, x19, [sp, #64]
 37c:	ldp	x22, x21, [sp, #48]
 380:	ldp	x24, x23, [sp, #32]
 384:	ldr	x25, [sp, #16]
 388:	ldp	x29, x30, [sp], #80
 38c:	ret
 390:	mov	x0, x20
 394:	ldp	x20, x19, [sp, #64]
 398:	ldp	x22, x21, [sp, #48]
 39c:	ldp	x24, x23, [sp, #32]
 3a0:	ldr	x25, [sp, #16]
 3a4:	mov	w1, #0x407                 	// #1031
 3a8:	ldp	x29, x30, [sp], #80
 3ac:	b	0 <ctf_set_errno>

00000000000003b0 <ctf_lookup_symbol_name>:
 3b0:	sub	sp, sp, #0x40
 3b4:	stp	x29, x30, [sp, #32]
 3b8:	ldr	x8, [x0, #64]
 3bc:	str	x19, [sp, #48]
 3c0:	mov	x19, x0
 3c4:	add	x29, sp, #0x20
 3c8:	cbz	x8, 3f4 <ctf_lookup_symbol_name+0x44>
 3cc:	ldr	x9, [x19, #432]
 3d0:	cmp	x9, x1
 3d4:	b.ls	3fc <ctf_lookup_symbol_name+0x4c>  // b.plast
 3d8:	ldr	x9, [x19, #80]
 3dc:	cmp	x9, #0x10
 3e0:	b.ne	420 <ctf_lookup_symbol_name+0x70>  // b.any
 3e4:	add	x0, x8, x1, lsl #4
 3e8:	add	x1, sp, #0x8
 3ec:	bl	0 <ctf_sym_to_elf64>
 3f0:	b	428 <ctf_lookup_symbol_name+0x78>
 3f4:	mov	w1, #0x3f2                 	// #1010
 3f8:	b	400 <ctf_lookup_symbol_name+0x50>
 3fc:	mov	w1, #0x16                  	// #22
 400:	mov	x0, x19
 404:	bl	0 <ctf_set_errno>
 408:	adrp	x0, 0 <_CTF_NULLSTR>
 40c:	add	x0, x0, #0x0
 410:	ldr	x19, [sp, #48]
 414:	ldp	x29, x30, [sp, #32]
 418:	add	sp, sp, #0x40
 41c:	ret
 420:	mov	w9, #0x18                  	// #24
 424:	madd	x0, x1, x9, x8
 428:	ldr	w8, [x0]
 42c:	ldr	x9, [x19, #360]
 430:	cmp	x9, x8
 434:	b.ls	408 <ctf_lookup_symbol_name+0x58>  // b.plast
 438:	ldr	x9, [x19, #352]
 43c:	add	x0, x9, x8
 440:	b	410 <ctf_lookup_symbol_name+0x60>

0000000000000444 <ctf_lookup_by_symbol>:
 444:	ldr	x8, [x0, #64]
 448:	cbz	x8, 470 <ctf_lookup_by_symbol+0x2c>
 44c:	ldr	x9, [x0, #432]
 450:	cmp	x9, x1
 454:	b.ls	478 <ctf_lookup_by_symbol+0x34>  // b.plast
 458:	ldr	x9, [x0, #80]
 45c:	cmp	x9, #0x10
 460:	b.ne	480 <ctf_lookup_by_symbol+0x3c>  // b.any
 464:	add	x8, x8, x1, lsl #4
 468:	ldrb	w8, [x8, #12]
 46c:	b	48c <ctf_lookup_by_symbol+0x48>
 470:	mov	w1, #0x3f2                 	// #1010
 474:	b	0 <ctf_set_errno>
 478:	mov	w1, #0x16                  	// #22
 47c:	b	0 <ctf_set_errno>
 480:	mov	w9, #0x18                  	// #24
 484:	madd	x8, x1, x9, x8
 488:	ldrb	w8, [x8, #4]
 48c:	and	w8, w8, #0xf
 490:	cmp	w8, #0x1
 494:	b.ne	4bc <ctf_lookup_by_symbol+0x78>  // b.any
 498:	ldr	x8, [x0, #424]
 49c:	ldr	w8, [x8, x1, lsl #2]
 4a0:	cmn	w8, #0x1
 4a4:	b.eq	4c4 <ctf_lookup_by_symbol+0x80>  // b.none
 4a8:	ldr	x9, [x0, #408]
 4ac:	ldr	w8, [x9, x8]
 4b0:	cbz	w8, 4c4 <ctf_lookup_by_symbol+0x80>
 4b4:	mov	x0, x8
 4b8:	ret
 4bc:	mov	w1, #0x406                 	// #1030
 4c0:	b	0 <ctf_set_errno>
 4c4:	mov	w1, #0x407                 	// #1031
 4c8:	b	0 <ctf_set_errno>

00000000000004cc <ctf_lookup_by_id>:
 4cc:	stp	x29, x30, [sp, #-32]!
 4d0:	stp	x20, x19, [sp, #16]
 4d4:	mov	x19, x0
 4d8:	ldr	x0, [x0]
 4dc:	mov	x29, sp
 4e0:	ldr	w8, [x0, #552]
 4e4:	tbnz	w8, #0, 4f0 <ctf_lookup_by_id+0x24>
 4e8:	mov	x20, x0
 4ec:	b	50c <ctf_lookup_by_id+0x40>
 4f0:	ldr	w9, [x0, #544]
 4f4:	mov	x20, x0
 4f8:	cmp	x9, x1
 4fc:	b.cc	50c <ctf_lookup_by_id+0x40>  // b.lo, b.ul, b.last
 500:	ldr	x20, [x0, #512]
 504:	cbz	x20, 574 <ctf_lookup_by_id+0xa8>
 508:	ldr	w8, [x20, #552]
 50c:	tbnz	w8, #1, 540 <ctf_lookup_by_id+0x74>
 510:	ldr	w8, [x20, #544]
 514:	ands	x8, x8, x1
 518:	b.eq	55c <ctf_lookup_by_id+0x90>  // b.none
 51c:	ldr	x9, [x20, #480]
 520:	cmp	x8, x9
 524:	b.hi	55c <ctf_lookup_by_id+0x90>  // b.pmore
 528:	str	x20, [x19]
 52c:	ldr	x9, [x20, #440]
 530:	ldr	x10, [x20, #408]
 534:	ldr	w8, [x9, x8, lsl #2]
 538:	add	x0, x10, x8
 53c:	b	568 <ctf_lookup_by_id+0x9c>
 540:	mov	x0, x20
 544:	bl	0 <ctf_dynamic_type>
 548:	cbz	x0, 558 <ctf_lookup_by_id+0x8c>
 54c:	str	x20, [x19]
 550:	add	x0, x0, #0x18
 554:	b	568 <ctf_lookup_by_id+0x9c>
 558:	ldr	x0, [x19]
 55c:	mov	w1, #0x3fa                 	// #1018
 560:	bl	0 <ctf_set_errno>
 564:	mov	x0, xzr
 568:	ldp	x20, x19, [sp, #16]
 56c:	ldp	x29, x30, [sp], #32
 570:	ret
 574:	mov	w1, #0x3f3                 	// #1011
 578:	b	560 <ctf_lookup_by_id+0x94>

000000000000057c <ctf_func_info>:
 57c:	stp	x29, x30, [sp, #-64]!
 580:	stp	x22, x21, [sp, #32]
 584:	stp	x20, x19, [sp, #48]
 588:	ldr	x8, [x0, #64]
 58c:	mov	x19, x0
 590:	str	x23, [sp, #16]
 594:	mov	x29, sp
 598:	cbz	x8, 5c4 <ctf_func_info+0x48>
 59c:	ldr	x9, [x19, #432]
 5a0:	cmp	x9, x1
 5a4:	b.ls	5cc <ctf_func_info+0x50>  // b.plast
 5a8:	ldr	x9, [x19, #80]
 5ac:	mov	x20, x2
 5b0:	cmp	x9, #0x10
 5b4:	b.ne	5d4 <ctf_func_info+0x58>  // b.any
 5b8:	add	x8, x8, x1, lsl #4
 5bc:	ldrb	w8, [x8, #12]
 5c0:	b	5e0 <ctf_func_info+0x64>
 5c4:	mov	w1, #0x3f2                 	// #1010
 5c8:	b	678 <ctf_func_info+0xfc>
 5cc:	mov	w1, #0x16                  	// #22
 5d0:	b	678 <ctf_func_info+0xfc>
 5d4:	mov	w9, #0x18                  	// #24
 5d8:	madd	x8, x1, x9, x8
 5dc:	ldrb	w8, [x8, #4]
 5e0:	and	w8, w8, #0xf
 5e4:	cmp	w8, #0x2
 5e8:	b.ne	664 <ctf_func_info+0xe8>  // b.any
 5ec:	ldr	x8, [x19, #424]
 5f0:	ldr	w8, [x8, x1, lsl #2]
 5f4:	cmn	w8, #0x1
 5f8:	b.eq	66c <ctf_func_info+0xf0>  // b.none
 5fc:	ldr	x9, [x19, #408]
 600:	ldr	x10, [x19]
 604:	add	x23, x9, x8
 608:	ldr	w22, [x23]
 60c:	ldr	x8, [x10]
 610:	mov	w0, w22
 614:	blr	x8
 618:	ldr	x8, [x19]
 61c:	mov	w21, w0
 620:	mov	w0, w22
 624:	ldr	x8, [x8, #16]
 628:	blr	x8
 62c:	orr	w8, w0, w21
 630:	cbz	w8, 66c <ctf_func_info+0xf0>
 634:	cmp	w21, #0x5
 638:	b.ne	674 <ctf_func_info+0xf8>  // b.any
 63c:	ldr	w8, [x23, #4]
 640:	stp	w0, wzr, [x20, #8]
 644:	str	x8, [x20]
 648:	cbz	w0, 680 <ctf_func_info+0x104>
 64c:	sub	w8, w0, #0x1
 650:	add	x9, x23, w8, uxtw #2
 654:	ldr	w9, [x9, #8]
 658:	cbz	w9, 694 <ctf_func_info+0x118>
 65c:	mov	w0, wzr
 660:	b	680 <ctf_func_info+0x104>
 664:	mov	w1, #0x404                 	// #1028
 668:	b	678 <ctf_func_info+0xfc>
 66c:	mov	w1, #0x405                 	// #1029
 670:	b	678 <ctf_func_info+0xfc>
 674:	mov	w1, #0x3ef                 	// #1007
 678:	mov	x0, x19
 67c:	bl	0 <ctf_set_errno>
 680:	ldp	x20, x19, [sp, #48]
 684:	ldp	x22, x21, [sp, #32]
 688:	ldr	x23, [sp, #16]
 68c:	ldp	x29, x30, [sp], #64
 690:	ret
 694:	mov	w0, wzr
 698:	mov	w9, #0x1                   	// #1
 69c:	stp	w8, w9, [x20, #8]
 6a0:	b	680 <ctf_func_info+0x104>

00000000000006a4 <ctf_func_args>:
 6a4:	sub	sp, sp, #0x40
 6a8:	stp	x22, x21, [sp, #32]
 6ac:	mov	w22, w2
 6b0:	mov	x2, sp
 6b4:	stp	x29, x30, [sp, #16]
 6b8:	stp	x20, x19, [sp, #48]
 6bc:	add	x29, sp, #0x10
 6c0:	mov	x19, x3
 6c4:	mov	x20, x1
 6c8:	mov	x21, x0
 6cc:	bl	57c <ctf_func_info>
 6d0:	tbnz	w0, #31, 764 <ctf_func_args+0xc0>
 6d4:	ldr	w8, [sp, #8]
 6d8:	cmp	w8, w22
 6dc:	csel	w8, w22, w8, hi  // hi = pmore
 6e0:	cbz	w8, 75c <ctf_func_args+0xb8>
 6e4:	ldr	x9, [x21, #424]
 6e8:	ldr	x11, [x21, #408]
 6ec:	sub	w10, w8, #0x1
 6f0:	cmp	w10, #0x3
 6f4:	ldr	w9, [x9, x20, lsl #2]
 6f8:	add	x13, x11, x9
 6fc:	add	x9, x13, #0x8
 700:	b.cc	74c <ctf_func_args+0xa8>  // b.lo, b.ul, b.last
 704:	add	x10, x10, #0x1
 708:	and	x11, x10, #0x1fffffffc
 70c:	add	x12, x19, #0x10
 710:	add	x9, x9, x11, lsl #2
 714:	add	x19, x19, x11, lsl #3
 718:	sub	w8, w8, w11
 71c:	add	x13, x13, #0x10
 720:	mov	x14, x11
 724:	ldp	d0, d1, [x13, #-8]
 728:	subs	x14, x14, #0x4
 72c:	add	x13, x13, #0x10
 730:	uxtl	v0.2d, v0.2s
 734:	uxtl	v1.2d, v1.2s
 738:	stp	q0, q1, [x12, #-16]
 73c:	add	x12, x12, #0x20
 740:	b.ne	724 <ctf_func_args+0x80>  // b.any
 744:	cmp	x10, x11
 748:	b.eq	75c <ctf_func_args+0xb8>  // b.none
 74c:	ldr	w10, [x9], #4
 750:	subs	w8, w8, #0x1
 754:	str	x10, [x19], #8
 758:	b.ne	74c <ctf_func_args+0xa8>  // b.any
 75c:	mov	w0, wzr
 760:	b	768 <ctf_func_args+0xc4>
 764:	mov	w0, #0xffffffff            	// #-1
 768:	ldp	x20, x19, [sp, #48]
 76c:	ldp	x22, x21, [sp, #32]
 770:	ldp	x29, x30, [sp, #16]
 774:	add	sp, sp, #0x40
 778:	ret

ctf-open.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_set_ctl_hashes>:
       0:	adrp	x8, 0 <ctf_set_ctl_hashes>
       4:	add	x8, x8, #0x0
       8:	mov	w9, #0x6                   	// #6
       c:	stp	x8, x9, [x0, #216]
      10:	adrp	x8, 0 <ctf_set_ctl_hashes>
      14:	adrp	x11, 0 <ctf_set_ctl_hashes>
      18:	add	x8, x8, #0x0
      1c:	mov	w9, #0x4                   	// #4
      20:	add	x10, x0, #0x98
      24:	add	x11, x11, #0x0
      28:	stp	x8, x9, [x0, #264]
      2c:	adrp	x8, 8b <ctf_simple_open+0x2b>
      30:	stp	x10, x11, [x0, #232]
      34:	add	x10, x0, #0xb8
      38:	add	x8, x8, #0x0
      3c:	mov	w12, #0x5                   	// #5
      40:	add	x13, x0, #0xa8
      44:	stp	x10, x8, [x0, #280]
      48:	add	x8, x0, #0xc8
      4c:	stp	x12, x13, [x0, #248]
      50:	stp	xzr, xzr, [x0, #320]
      54:	stp	xzr, x8, [x0, #296]
      58:	str	xzr, [x0, #312]
      5c:	ret

0000000000000060 <ctf_simple_open>:
      60:	sub	sp, sp, #0x70
      64:	adrp	x8, 86 <ctf_simple_open+0x26>
      68:	add	x8, x8, #0x0
      6c:	stp	x29, x30, [sp, #96]
      70:	add	x29, sp, #0x60
      74:	cbz	x0, 88 <ctf_simple_open+0x28>
      78:	mov	w9, #0x1                   	// #1
      7c:	stp	x8, x0, [x29, #-32]
      80:	sub	x0, x29, #0x20
      84:	stp	x1, x9, [x29, #-16]
      88:	cbz	x2, b0 <ctf_simple_open+0x50>
      8c:	add	x1, sp, #0x20
      90:	stp	x8, x2, [sp, #32]
      94:	stp	x3, x4, [sp, #48]
      98:	cbz	x5, b8 <ctf_simple_open+0x58>
      9c:	mov	w9, #0x1                   	// #1
      a0:	mov	x2, sp
      a4:	stp	x8, x5, [sp]
      a8:	stp	x6, x9, [sp, #16]
      ac:	b	bc <ctf_simple_open+0x5c>
      b0:	mov	x1, xzr
      b4:	cbnz	x5, 9c <ctf_simple_open+0x3c>
      b8:	mov	x2, xzr
      bc:	mov	x3, xzr
      c0:	mov	w4, wzr
      c4:	mov	x5, x7
      c8:	bl	158 <ctf_bufopen_internal>
      cc:	ldp	x29, x30, [sp, #96]
      d0:	add	sp, sp, #0x70
      d4:	ret

00000000000000d8 <ctf_simple_open_internal>:
      d8:	sub	sp, sp, #0x70
      dc:	adrp	x10, 86 <ctf_simple_open+0x26>
      e0:	mov	x9, x4
      e4:	add	x10, x10, #0x0
      e8:	stp	x29, x30, [sp, #96]
      ec:	add	x29, sp, #0x60
      f0:	cbz	x0, 104 <ctf_simple_open_internal+0x2c>
      f4:	mov	w8, #0x1                   	// #1
      f8:	stp	x10, x0, [x29, #-32]
      fc:	sub	x0, x29, #0x20
     100:	stp	x1, x8, [x29, #-16]
     104:	ldr	x8, [x29, #24]
     108:	ldr	w4, [x29, #16]
     10c:	cbz	x2, 134 <ctf_simple_open_internal+0x5c>
     110:	add	x1, sp, #0x20
     114:	stp	x10, x2, [sp, #32]
     118:	stp	x3, x9, [sp, #48]
     11c:	cbz	x5, 13c <ctf_simple_open_internal+0x64>
     120:	mov	w9, #0x1                   	// #1
     124:	mov	x2, sp
     128:	stp	x10, x5, [sp]
     12c:	stp	x6, x9, [sp, #16]
     130:	b	140 <ctf_simple_open_internal+0x68>
     134:	mov	x1, xzr
     138:	cbnz	x5, 120 <ctf_simple_open_internal+0x48>
     13c:	mov	x2, xzr
     140:	mov	x3, x7
     144:	mov	x5, x8
     148:	bl	158 <ctf_bufopen_internal>
     14c:	ldp	x29, x30, [sp, #96]
     150:	add	sp, sp, #0x70
     154:	ret

0000000000000158 <ctf_bufopen_internal>:
     158:	stp	x29, x30, [sp, #-96]!
     15c:	stp	x28, x27, [sp, #16]
     160:	stp	x26, x25, [sp, #32]
     164:	stp	x24, x23, [sp, #48]
     168:	stp	x22, x21, [sp, #64]
     16c:	stp	x20, x19, [sp, #80]
     170:	mov	x29, sp
     174:	sub	sp, sp, #0x280
     178:	mov	x21, x5
     17c:	mov	w23, w4
     180:	mov	x24, x3
     184:	mov	x22, x2
     188:	mov	x20, x1
     18c:	mov	x25, x0
     190:	bl	0 <libctf_init_debug>
     194:	cbz	x25, 1a4 <ctf_bufopen_internal+0x4c>
     198:	cbz	x20, 1cc <ctf_bufopen_internal+0x74>
     19c:	cbnz	x22, 1cc <ctf_bufopen_internal+0x74>
     1a0:	cbnz	x24, 1cc <ctf_bufopen_internal+0x74>
     1a4:	mov	w1, #0x16                  	// #22
     1a8:	mov	x0, x21
     1ac:	add	sp, sp, #0x280
     1b0:	ldp	x20, x19, [sp, #80]
     1b4:	ldp	x22, x21, [sp, #64]
     1b8:	ldp	x24, x23, [sp, #48]
     1bc:	ldp	x26, x25, [sp, #32]
     1c0:	ldp	x28, x27, [sp, #16]
     1c4:	ldp	x29, x30, [sp], #96
     1c8:	b	0 <ctf_set_open_errno>
     1cc:	cbz	x20, 1e8 <ctf_bufopen_internal+0x90>
     1d0:	ldr	x8, [x20, #24]
     1d4:	orr	x8, x8, #0x8
     1d8:	cmp	x8, #0x18
     1dc:	b.ne	260 <ctf_bufopen_internal+0x108>  // b.any
     1e0:	ldr	x8, [x20, #8]
     1e4:	cbz	x8, 268 <ctf_bufopen_internal+0x110>
     1e8:	cbz	x22, 1f4 <ctf_bufopen_internal+0x9c>
     1ec:	ldr	x8, [x22, #8]
     1f0:	cbz	x8, 270 <ctf_bufopen_internal+0x118>
     1f4:	ldr	x8, [x25, #16]
     1f8:	cmp	x8, #0x3
     1fc:	b.hi	208 <ctf_bufopen_internal+0xb0>  // b.pmore
     200:	mov	w1, #0x3f1                 	// #1009
     204:	b	1a8 <ctf_bufopen_internal+0x50>
     208:	ldr	x27, [x25, #8]
     20c:	adrp	x0, 0 <ctf_set_ctl_hashes>
     210:	add	x0, x0, #0x0
     214:	ldrh	w1, [x27]
     218:	ldrb	w2, [x27, #2]
     21c:	bl	0 <ctf_dprintf>
     220:	ldrh	w8, [x27]
     224:	mov	w9, #0xdff2                	// #57330
     228:	cmp	w8, w9
     22c:	b.ne	4fc <ctf_bufopen_internal+0x3a4>  // b.any
     230:	ldrb	w1, [x27, #2]
     234:	sub	w8, w1, #0x1
     238:	cmp	w8, #0x4
     23c:	b.cs	520 <ctf_bufopen_internal+0x3c8>  // b.hs, b.nlast
     240:	cbz	x20, 278 <ctf_bufopen_internal+0x120>
     244:	cmp	w1, #0x2
     248:	b.hi	278 <ctf_bufopen_internal+0x120>  // b.pmore
     24c:	adrp	x0, 0 <ctf_set_ctl_hashes>
     250:	add	x0, x0, #0x0
     254:	bl	0 <ctf_dprintf>
     258:	mov	w1, #0x40a                 	// #1034
     25c:	b	1a8 <ctf_bufopen_internal+0x50>
     260:	mov	w1, #0x3ec                 	// #1004
     264:	b	1a8 <ctf_bufopen_internal+0x50>
     268:	mov	w1, #0x3ed                 	// #1005
     26c:	b	1a8 <ctf_bufopen_internal+0x50>
     270:	mov	w1, #0x3ee                 	// #1006
     274:	b	1a8 <ctf_bufopen_internal+0x50>
     278:	cmp	w1, #0x4
     27c:	mov	w8, #0x34                  	// #52
     280:	mov	w9, #0x28                  	// #40
     284:	mov	w28, wzr
     288:	csel	x26, x9, x8, cc  // cc = lo, ul, last
     28c:	ldr	x8, [x25, #16]
     290:	cmp	x8, x26
     294:	b.cc	200 <ctf_bufopen_internal+0xa8>  // b.lo, b.ul, b.last
     298:	mov	w0, #0x2d8                 	// #728
     29c:	bl	0 <malloc>
     2a0:	cbz	x0, 394 <ctf_bufopen_internal+0x23c>
     2a4:	mov	w2, #0x2d8                 	// #728
     2a8:	mov	w1, wzr
     2ac:	mov	x19, x0
     2b0:	bl	0 <memset>
     2b4:	cbz	w23, 2c0 <ctf_bufopen_internal+0x168>
     2b8:	mov	w8, #0x2                   	// #2
     2bc:	str	w8, [x19, #552]
     2c0:	mov	w0, #0x34                  	// #52
     2c4:	bl	0 <malloc>
     2c8:	str	x0, [x19, #8]
     2cc:	cbz	x0, 39c <ctf_bufopen_internal+0x244>
     2d0:	ldr	x1, [x25, #8]
     2d4:	mov	x2, x26
     2d8:	mov	x23, x0
     2dc:	bl	0 <memcpy>
     2e0:	ldrb	w8, [x27, #2]
     2e4:	cmp	w8, #0x3
     2e8:	b.hi	310 <ctf_bufopen_internal+0x1b8>  // b.pmore
     2ec:	ldur	q0, [x23, #12]
     2f0:	ldr	w8, [x23, #36]
     2f4:	ldur	x9, [x23, #28]
     2f8:	str	wzr, [x23, #12]
     2fc:	dup	v1.2s, v0.s[3]
     300:	str	w8, [x23, #48]
     304:	str	x9, [x23, #40]
     308:	str	q0, [x23, #16]
     30c:	str	d1, [x23, #32]
     310:	cbz	w28, 3ac <ctf_bufopen_internal+0x254>
     314:	ldp	w8, w9, [x23, #4]
     318:	ldr	w11, [x23, #12]
     31c:	ldrh	w10, [x23]
     320:	rev	w8, w8
     324:	rev	w9, w9
     328:	stp	w8, w9, [x23, #4]
     32c:	ldp	w8, w9, [x23, #20]
     330:	rev	w11, w11
     334:	str	w11, [x23, #12]
     338:	rev	w8, w8
     33c:	str	w8, [x23, #20]
     340:	ldp	w11, w8, [x23, #28]
     344:	rev	w9, w9
     348:	rev	w11, w11
     34c:	stp	w9, w11, [x23, #24]
     350:	ldp	w9, w11, [x23, #36]
     354:	rev	w8, w8
     358:	str	w8, [x23, #32]
     35c:	rev	w8, w10
     360:	rev	w9, w9
     364:	rev	w10, w11
     368:	lsr	w8, w8, #16
     36c:	stp	w9, w10, [x23, #36]
     370:	strh	w8, [x23]
     374:	mov	x10, x23
     378:	ldr	w8, [x10, #44]!
     37c:	ldr	w9, [x10, #4]
     380:	rev	w8, w8
     384:	str	x10, [sp, #88]
     388:	rev	w9, w9
     38c:	stp	w8, w9, [x10]
     390:	b	3bc <ctf_bufopen_internal+0x264>
     394:	mov	w1, #0xc                   	// #12
     398:	b	1a8 <ctf_bufopen_internal+0x50>
     39c:	mov	x0, x19
     3a0:	bl	0 <free>
     3a4:	mov	w1, #0xc                   	// #12
     3a8:	b	1a8 <ctf_bufopen_internal+0x50>
     3ac:	mov	x9, x23
     3b0:	ldr	w8, [x9, #44]!
     3b4:	str	x9, [sp, #88]
     3b8:	ldr	w9, [x9, #4]
     3bc:	ldrb	w10, [x23, #3]
     3c0:	adrp	x0, 0 <ctf_set_ctl_hashes>
     3c4:	add	w1, w9, w8
     3c8:	add	x0, x0, #0x0
     3cc:	strb	w10, [x19, #16]
     3d0:	str	x1, [x19, #416]
     3d4:	bl	0 <ctf_dprintf>
     3d8:	ldr	w8, [x23, #16]
     3dc:	ldr	x27, [x19, #416]
     3e0:	cmp	x27, x8
     3e4:	b.cc	434 <ctf_bufopen_internal+0x2dc>  // b.lo, b.ul, b.last
     3e8:	ldr	w9, [x23, #20]
     3ec:	cmp	x27, x9
     3f0:	b.cc	434 <ctf_bufopen_internal+0x2dc>  // b.lo, b.ul, b.last
     3f4:	ldr	w10, [x23, #24]
     3f8:	cmp	x27, x10
     3fc:	b.cc	434 <ctf_bufopen_internal+0x2dc>  // b.lo, b.ul, b.last
     400:	ldr	w11, [x23, #28]
     404:	cmp	x27, x11
     408:	b.cc	434 <ctf_bufopen_internal+0x2dc>  // b.lo, b.ul, b.last
     40c:	ldr	w12, [x23, #32]
     410:	cmp	x27, x12
     414:	b.cc	434 <ctf_bufopen_internal+0x2dc>  // b.lo, b.ul, b.last
     418:	ldr	w13, [x23, #40]
     41c:	cmp	x27, x13
     420:	b.cc	434 <ctf_bufopen_internal+0x2dc>  // b.lo, b.ul, b.last
     424:	ldr	x14, [sp, #88]
     428:	ldr	w14, [x14]
     42c:	cmp	x27, x14
     430:	b.cs	43c <ctf_bufopen_internal+0x2e4>  // b.hs, b.nlast
     434:	mov	w1, #0x3ef                 	// #1007
     438:	b	1a8 <ctf_bufopen_internal+0x50>
     43c:	cmp	w11, w12
     440:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     444:	cmp	w10, w11
     448:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     44c:	cmp	w8, w9
     450:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     454:	cmp	w9, w10
     458:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     45c:	cmp	w10, w13
     460:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     464:	cmp	w13, w14
     468:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     46c:	ldr	w14, [x23, #36]
     470:	cmp	w12, w14
     474:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     478:	cmp	w14, w13
     47c:	b.hi	434 <ctf_bufopen_internal+0x2dc>  // b.pmore
     480:	and	w8, w8, #0x3
     484:	and	w9, w9, #0x2
     488:	and	w10, w10, #0x2
     48c:	orr	w8, w9, w8
     490:	and	w11, w11, #0x2
     494:	orr	w8, w8, w10
     498:	and	w12, w12, #0x2
     49c:	orr	w8, w8, w11
     4a0:	orr	w8, w8, w12
     4a4:	and	w9, w13, #0x3
     4a8:	and	w14, w14, #0x3
     4ac:	orr	w8, w8, w9
     4b0:	orr	w8, w8, w14
     4b4:	cbnz	w8, 434 <ctf_bufopen_internal+0x2dc>
     4b8:	ldrb	w8, [x23, #3]
     4bc:	str	w8, [sp, #80]
     4c0:	tbnz	w8, #0, 528 <ctf_bufopen_internal+0x3d0>
     4c4:	cbz	w28, 588 <ctf_bufopen_internal+0x430>
     4c8:	mov	x0, x27
     4cc:	bl	0 <malloc>
     4d0:	str	x0, [x19, #392]
     4d4:	cbz	x0, 580 <ctf_bufopen_internal+0x428>
     4d8:	mov	x8, x0
     4dc:	str	x8, [x19, #400]
     4e0:	ldr	x8, [x25, #8]
     4e4:	mov	x2, x27
     4e8:	add	x1, x8, x26
     4ec:	mov	x26, x0
     4f0:	bl	0 <memcpy>
     4f4:	str	x26, [x19, #408]
     4f8:	b	5ac <ctf_bufopen_internal+0x454>
     4fc:	mov	w9, #0xf2df                	// #62175
     500:	cmp	w8, w9
     504:	b.ne	200 <ctf_bufopen_internal+0xa8>  // b.any
     508:	ldrb	w8, [x27, #2]
     50c:	cmp	w8, #0x4
     510:	b.ne	520 <ctf_bufopen_internal+0x3c8>  // b.any
     514:	mov	w28, #0x1                   	// #1
     518:	mov	w26, #0x34                  	// #52
     51c:	b	28c <ctf_bufopen_internal+0x134>
     520:	mov	w1, #0x3ea                 	// #1002
     524:	b	1a8 <ctf_bufopen_internal+0x50>
     528:	mov	x0, x27
     52c:	bl	0 <malloc>
     530:	str	x0, [x19, #392]
     534:	cbz	x0, 580 <ctf_bufopen_internal+0x428>
     538:	stp	x0, x0, [x19, #400]
     53c:	ldr	w8, [sp, #80]
     540:	add	x1, sp, #0x70
     544:	and	w8, w8, #0xfe
     548:	strb	w8, [x23, #3]
     54c:	ldp	x8, x9, [x25, #8]
     550:	str	x27, [sp, #112]
     554:	add	x2, x8, x26
     558:	sub	x3, x9, x26
     55c:	bl	0 <uncompress>
     560:	cbz	w0, 59c <ctf_bufopen_internal+0x444>
     564:	bl	0 <zError>
     568:	mov	x1, x0
     56c:	adrp	x0, 0 <ctf_set_ctl_hashes>
     570:	add	x0, x0, #0x0
     574:	bl	0 <ctf_dprintf>
     578:	mov	w1, #0x3f7                 	// #1015
     57c:	b	1640 <ctf_bufopen_internal+0x14e8>
     580:	mov	w1, #0x3f6                 	// #1014
     584:	b	1640 <ctf_bufopen_internal+0x14e8>
     588:	ldr	x8, [x25, #8]
     58c:	stp	x8, xzr, [x19, #392]
     590:	add	x8, x8, x26
     594:	str	x8, [x19, #408]
     598:	b	5ac <ctf_bufopen_internal+0x454>
     59c:	ldr	x1, [sp, #112]
     5a0:	ldr	x2, [x19, #416]
     5a4:	cmp	x1, x2
     5a8:	b.ne	6c8 <ctf_bufopen_internal+0x570>  // b.any
     5ac:	ldrb	w8, [x23, #2]
     5b0:	adrp	x10, 0 <ctf_set_ctl_hashes>
     5b4:	mov	w9, #0x28                  	// #40
     5b8:	add	x10, x10, #0x0
     5bc:	str	w8, [x19, #560]
     5c0:	madd	x8, x8, x9, x10
     5c4:	mov	x0, x19
     5c8:	str	x8, [x19]
     5cc:	bl	0 <ctf_str_create_atoms>
     5d0:	mov	w8, #0x7fffffff            	// #2147483647
     5d4:	str	w8, [x19, #544]
     5d8:	ldp	q0, q1, [x25]
     5dc:	add	x25, x19, #0x18
     5e0:	stur	q0, [x19, #24]
     5e4:	stur	q1, [x19, #40]
     5e8:	cbz	x20, 604 <ctf_bufopen_internal+0x4ac>
     5ec:	ldp	q1, q0, [x20]
     5f0:	stur	q0, [x19, #72]
     5f4:	stur	q1, [x19, #56]
     5f8:	ldp	q1, q0, [x22]
     5fc:	stur	q0, [x19, #104]
     600:	stur	q1, [x19, #88]
     604:	ldr	x0, [x25]
     608:	cbz	x0, 618 <ctf_bufopen_internal+0x4c0>
     60c:	bl	0 <strdup>
     610:	str	x0, [x25]
     614:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
     618:	ldr	x0, [x19, #56]
     61c:	cbz	x0, 62c <ctf_bufopen_internal+0x4d4>
     620:	bl	0 <strdup>
     624:	str	x0, [x19, #56]
     628:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
     62c:	ldr	x0, [x19, #88]
     630:	cbz	x0, 640 <ctf_bufopen_internal+0x4e8>
     634:	bl	0 <strdup>
     638:	str	x0, [x19, #88]
     63c:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
     640:	ldr	x8, [x25]
     644:	cbz	x8, 690 <ctf_bufopen_internal+0x538>
     648:	ldr	x8, [x19, #56]
     64c:	cbz	x8, 6a4 <ctf_bufopen_internal+0x54c>
     650:	cbz	x0, 6b4 <ctf_bufopen_internal+0x55c>
     654:	cbz	x22, 660 <ctf_bufopen_internal+0x508>
     658:	ldur	q0, [x22, #8]
     65c:	str	q0, [x19, #352]
     660:	str	x24, [x19, #128]
     664:	cbz	w28, d48 <ctf_bufopen_internal+0xbf0>
     668:	ldp	w10, w9, [x23, #16]
     66c:	ldr	x8, [x19, #408]
     670:	sub	w11, w9, w10
     674:	lsr	w11, w11, #3
     678:	cbz	w11, 72c <ctf_bufopen_internal+0x5d4>
     67c:	cmp	w11, #0x1
     680:	add	x10, x8, x10
     684:	b.ne	6d8 <ctf_bufopen_internal+0x580>  // b.any
     688:	mov	x12, x11
     68c:	b	70c <ctf_bufopen_internal+0x5b4>
     690:	adrp	x8, 8b <ctf_simple_open+0x2b>
     694:	add	x8, x8, #0x0
     698:	str	x8, [x25]
     69c:	ldr	x8, [x19, #56]
     6a0:	cbnz	x8, 650 <ctf_bufopen_internal+0x4f8>
     6a4:	adrp	x8, 8b <ctf_simple_open+0x2b>
     6a8:	add	x8, x8, #0x0
     6ac:	str	x8, [x19, #56]
     6b0:	cbnz	x0, 654 <ctf_bufopen_internal+0x4fc>
     6b4:	adrp	x8, 8b <ctf_simple_open+0x2b>
     6b8:	add	x8, x8, #0x0
     6bc:	str	x8, [x19, #88]
     6c0:	cbnz	x22, 658 <ctf_bufopen_internal+0x500>
     6c4:	b	660 <ctf_bufopen_internal+0x508>
     6c8:	adrp	x0, 0 <ctf_set_ctl_hashes>
     6cc:	add	x0, x0, #0x0
     6d0:	bl	0 <ctf_dprintf>
     6d4:	b	ef8 <ctf_bufopen_internal+0xda0>
     6d8:	and	x13, x11, #0x1ffffffe
     6dc:	mov	x14, x10
     6e0:	and	x12, x11, #0x1
     6e4:	add	x10, x10, x13, lsl #3
     6e8:	mov	x15, x13
     6ec:	ld2	{v0.2s, v1.2s}, [x14]
     6f0:	subs	x15, x15, #0x2
     6f4:	rev32	v2.8b, v0.8b
     6f8:	rev32	v3.8b, v1.8b
     6fc:	st2	{v2.2s, v3.2s}, [x14], #16
     700:	b.ne	6ec <ctf_bufopen_internal+0x594>  // b.any
     704:	cmp	x13, x11
     708:	b.eq	72c <ctf_bufopen_internal+0x5d4>  // b.none
     70c:	add	x11, x12, #0x1
     710:	ldp	w12, w13, [x10]
     714:	sub	x11, x11, #0x1
     718:	cmp	x11, #0x1
     71c:	rev	w12, w12
     720:	rev	w13, w13
     724:	stp	w12, w13, [x10], #8
     728:	b.gt	710 <ctf_bufopen_internal+0x5b8>
     72c:	ldr	w12, [x23, #24]
     730:	sub	w10, w12, w9
     734:	lsr	w11, w10, #2
     738:	cbz	w11, 7ac <ctf_bufopen_internal+0x654>
     73c:	cmp	w10, #0x10
     740:	add	x10, x8, x9
     744:	b.cs	750 <ctf_bufopen_internal+0x5f8>  // b.hs, b.nlast
     748:	mov	x12, x11
     74c:	b	78c <ctf_bufopen_internal+0x634>
     750:	and	x13, x11, #0x3ffffffc
     754:	add	x9, x9, x8
     758:	and	x12, x11, #0x3
     75c:	add	x10, x10, x13, lsl #2
     760:	add	x9, x9, #0x8
     764:	mov	x14, x13
     768:	ldp	d0, d1, [x9, #-8]
     76c:	subs	x14, x14, #0x4
     770:	rev32	v0.8b, v0.8b
     774:	rev32	v1.8b, v1.8b
     778:	stp	d0, d1, [x9, #-8]
     77c:	add	x9, x9, #0x10
     780:	b.ne	768 <ctf_bufopen_internal+0x610>  // b.any
     784:	cmp	x13, x11
     788:	b.eq	7a8 <ctf_bufopen_internal+0x650>  // b.none
     78c:	add	x9, x12, #0x1
     790:	ldr	w11, [x10]
     794:	sub	x9, x9, #0x1
     798:	cmp	x9, #0x1
     79c:	rev	w11, w11
     7a0:	str	w11, [x10], #4
     7a4:	b.gt	790 <ctf_bufopen_internal+0x638>
     7a8:	ldr	w12, [x23, #24]
     7ac:	ldr	w9, [x23, #28]
     7b0:	sub	w11, w9, w12
     7b4:	lsr	w10, w11, #2
     7b8:	cbz	w10, 830 <ctf_bufopen_internal+0x6d8>
     7bc:	mov	w13, w12
     7c0:	cmp	w11, #0x10
     7c4:	add	x9, x8, x13
     7c8:	b.cs	7d4 <ctf_bufopen_internal+0x67c>  // b.hs, b.nlast
     7cc:	mov	x11, x10
     7d0:	b	810 <ctf_bufopen_internal+0x6b8>
     7d4:	and	x12, x10, #0x3ffffffc
     7d8:	add	x13, x13, x8
     7dc:	and	x11, x10, #0x3
     7e0:	add	x9, x9, x12, lsl #2
     7e4:	add	x13, x13, #0x8
     7e8:	mov	x14, x12
     7ec:	ldp	d0, d1, [x13, #-8]
     7f0:	subs	x14, x14, #0x4
     7f4:	rev32	v0.8b, v0.8b
     7f8:	rev32	v1.8b, v1.8b
     7fc:	stp	d0, d1, [x13, #-8]
     800:	add	x13, x13, #0x10
     804:	b.ne	7ec <ctf_bufopen_internal+0x694>  // b.any
     808:	cmp	x12, x10
     80c:	b.eq	82c <ctf_bufopen_internal+0x6d4>  // b.none
     810:	add	x10, x11, #0x1
     814:	ldr	w11, [x9]
     818:	sub	x10, x10, #0x1
     81c:	cmp	x10, #0x1
     820:	rev	w11, w11
     824:	str	w11, [x9], #4
     828:	b.gt	814 <ctf_bufopen_internal+0x6bc>
     82c:	ldr	w9, [x23, #28]
     830:	ldr	w11, [x23, #32]
     834:	sub	w12, w11, w9
     838:	lsr	w10, w12, #2
     83c:	cbz	w10, 8b4 <ctf_bufopen_internal+0x75c>
     840:	mov	w13, w9
     844:	cmp	w12, #0x10
     848:	add	x9, x8, x13
     84c:	b.cs	858 <ctf_bufopen_internal+0x700>  // b.hs, b.nlast
     850:	mov	x11, x10
     854:	b	894 <ctf_bufopen_internal+0x73c>
     858:	and	x12, x10, #0x3ffffffc
     85c:	add	x13, x13, x8
     860:	and	x11, x10, #0x3
     864:	add	x9, x9, x12, lsl #2
     868:	add	x13, x13, #0x8
     86c:	mov	x14, x12
     870:	ldp	d0, d1, [x13, #-8]
     874:	subs	x14, x14, #0x4
     878:	rev32	v0.8b, v0.8b
     87c:	rev32	v1.8b, v1.8b
     880:	stp	d0, d1, [x13, #-8]
     884:	add	x13, x13, #0x10
     888:	b.ne	870 <ctf_bufopen_internal+0x718>  // b.any
     88c:	cmp	x12, x10
     890:	b.eq	8b0 <ctf_bufopen_internal+0x758>  // b.none
     894:	add	x10, x11, #0x1
     898:	ldr	w11, [x9]
     89c:	sub	x10, x10, #0x1
     8a0:	cmp	x10, #0x1
     8a4:	rev	w11, w11
     8a8:	str	w11, [x9], #4
     8ac:	b.gt	898 <ctf_bufopen_internal+0x740>
     8b0:	ldr	w11, [x23, #32]
     8b4:	ldr	w12, [x23, #36]
     8b8:	sub	w9, w12, w11
     8bc:	lsr	w10, w9, #2
     8c0:	cbz	w10, 938 <ctf_bufopen_internal+0x7e0>
     8c4:	mov	w13, w11
     8c8:	cmp	w9, #0x10
     8cc:	add	x9, x8, x13
     8d0:	b.cs	8dc <ctf_bufopen_internal+0x784>  // b.hs, b.nlast
     8d4:	mov	x11, x10
     8d8:	b	918 <ctf_bufopen_internal+0x7c0>
     8dc:	and	x12, x10, #0x3ffffffc
     8e0:	add	x13, x13, x8
     8e4:	and	x11, x10, #0x3
     8e8:	add	x9, x9, x12, lsl #2
     8ec:	add	x13, x13, #0x8
     8f0:	mov	x14, x12
     8f4:	ldp	d0, d1, [x13, #-8]
     8f8:	subs	x14, x14, #0x4
     8fc:	rev32	v0.8b, v0.8b
     900:	rev32	v1.8b, v1.8b
     904:	stp	d0, d1, [x13, #-8]
     908:	add	x13, x13, #0x10
     90c:	b.ne	8f4 <ctf_bufopen_internal+0x79c>  // b.any
     910:	cmp	x12, x10
     914:	b.eq	934 <ctf_bufopen_internal+0x7dc>  // b.none
     918:	add	x10, x11, #0x1
     91c:	ldr	w11, [x9]
     920:	sub	x10, x10, #0x1
     924:	cmp	x10, #0x1
     928:	rev	w11, w11
     92c:	str	w11, [x9], #4
     930:	b.gt	91c <ctf_bufopen_internal+0x7c4>
     934:	ldr	w12, [x23, #36]
     938:	ldr	w9, [x23, #40]
     93c:	sub	w10, w9, w12
     940:	lsr	w11, w10, #3
     944:	cbz	w11, 9b0 <ctf_bufopen_internal+0x858>
     948:	cmp	w11, #0x1
     94c:	add	x10, x8, w12, uxtw
     950:	b.ne	95c <ctf_bufopen_internal+0x804>  // b.any
     954:	mov	x12, x11
     958:	b	990 <ctf_bufopen_internal+0x838>
     95c:	and	x13, x11, #0x1ffffffe
     960:	mov	x14, x10
     964:	and	x12, x11, #0x1
     968:	add	x10, x10, x13, lsl #3
     96c:	mov	x15, x13
     970:	ld2	{v0.2s, v1.2s}, [x14]
     974:	subs	x15, x15, #0x2
     978:	rev32	v2.8b, v0.8b
     97c:	rev32	v3.8b, v1.8b
     980:	st2	{v2.2s, v3.2s}, [x14], #16
     984:	b.ne	970 <ctf_bufopen_internal+0x818>  // b.any
     988:	cmp	x13, x11
     98c:	b.eq	9b0 <ctf_bufopen_internal+0x858>  // b.none
     990:	add	x11, x12, #0x1
     994:	ldp	w12, w13, [x10]
     998:	sub	x11, x11, #0x1
     99c:	cmp	x11, #0x1
     9a0:	rev	w12, w12
     9a4:	rev	w13, w13
     9a8:	stp	w12, w13, [x10], #8
     9ac:	b.gt	994 <ctf_bufopen_internal+0x83c>
     9b0:	ldr	x10, [sp, #88]
     9b4:	add	x24, x8, x9
     9b8:	ldr	w10, [x10]
     9bc:	sub	w8, w10, w9
     9c0:	add	x8, x8, x24
     9c4:	str	x8, [sp, #80]
     9c8:	b	9e0 <ctf_bufopen_internal+0x888>
     9cc:	ldr	w10, [x9]
     9d0:	rev	w10, w10
     9d4:	str	w10, [x9]
     9d8:	add	x24, x9, x8
     9dc:	ldr	x8, [sp, #80]
     9e0:	cmp	x8, x24
     9e4:	b.ls	d48 <ctf_bufopen_internal+0xbf0>  // b.plast
     9e8:	ldp	w8, w9, [x24]
     9ec:	ldr	w26, [x24, #8]
     9f0:	rev	w9, w9
     9f4:	lsr	w25, w9, #26
     9f8:	rev	w8, w8
     9fc:	rev	w27, w26
     a00:	cmp	w25, #0xe
     a04:	and	w28, w9, #0xffffff
     a08:	stp	w8, w9, [x24]
     a0c:	str	w27, [x24, #8]
     a10:	b.hi	a74 <ctf_bufopen_internal+0x91c>  // b.pmore
     a14:	adrp	x10, 0 <ctf_set_ctl_hashes>
     a18:	add	x10, x10, #0x0
     a1c:	adr	x9, a30 <ctf_bufopen_internal+0x8d8>
     a20:	ldrb	w8, [x10, x25]
     a24:	add	x9, x9, x8, lsl #2
     a28:	mov	w8, #0xc                   	// #12
     a2c:	br	x9
     a30:	mov	x8, xzr
     a34:	b	a90 <ctf_bufopen_internal+0x938>
     a38:	mov	w8, #0x4                   	// #4
     a3c:	b	a90 <ctf_bufopen_internal+0x938>
     a40:	ubfx	x8, x27, #29, #3
     a44:	cbnz	w8, a8c <ctf_bufopen_internal+0x934>
     a48:	add	x8, x28, x28, lsl #1
     a4c:	lsl	x8, x8, #2
     a50:	b	a90 <ctf_bufopen_internal+0x938>
     a54:	lsl	x8, x28, #3
     a58:	b	a90 <ctf_bufopen_internal+0x938>
     a5c:	and	x8, x28, #0x1
     a60:	add	x8, x8, x28
     a64:	lsl	x8, x8, #2
     a68:	b	a90 <ctf_bufopen_internal+0x938>
     a6c:	mov	w8, #0x8                   	// #8
     a70:	b	a90 <ctf_bufopen_internal+0x938>
     a74:	adrp	x0, 0 <ctf_set_ctl_hashes>
     a78:	add	x0, x0, #0x0
     a7c:	mov	w1, w25
     a80:	bl	0 <ctf_dprintf>
     a84:	mov	w8, #0x3ef                 	// #1007
     a88:	b	a90 <ctf_bufopen_internal+0x938>
     a8c:	lsl	x8, x28, #4
     a90:	cmn	w26, #0x1
     a94:	b.eq	c98 <ctf_bufopen_internal+0xb40>  // b.none
     a98:	mov	w9, #0xc                   	// #12
     a9c:	cmp	w25, #0xe
     aa0:	b.hi	ed8 <ctf_bufopen_internal+0xd80>  // b.pmore
     aa4:	adrp	x12, 0 <ctf_set_ctl_hashes>
     aa8:	add	x12, x12, #0x0
     aac:	adr	x10, 9cc <ctf_bufopen_internal+0x874>
     ab0:	ldrb	w11, [x12, x25]
     ab4:	add	x10, x10, x11, lsl #2
     ab8:	add	x9, x24, x9
     abc:	br	x10
     ac0:	cbz	x8, 9d8 <ctf_bufopen_internal+0x880>
     ac4:	b	1d6c <ctf_bufopen_internal+0x1c14>
     ac8:	lsr	x10, x27, #29
     acc:	cbnz	x10, cbc <ctf_bufopen_internal+0xb64>
     ad0:	cbz	w28, 9d8 <ctf_bufopen_internal+0x880>
     ad4:	cmp	w28, #0x1
     ad8:	b.ne	b78 <ctf_bufopen_internal+0xa20>  // b.any
     adc:	mov	x11, x28
     ae0:	mov	x10, x9
     ae4:	b	bb4 <ctf_bufopen_internal+0xa5c>
     ae8:	cbz	w28, 9d8 <ctf_bufopen_internal+0x880>
     aec:	cmp	w28, #0x1
     af0:	b.ne	be8 <ctf_bufopen_internal+0xa90>  // b.any
     af4:	mov	x11, x28
     af8:	mov	x10, x9
     afc:	b	c1c <ctf_bufopen_internal+0xac4>
     b00:	cbz	w28, 9d8 <ctf_bufopen_internal+0x880>
     b04:	cmp	w28, #0x4
     b08:	b.cs	c40 <ctf_bufopen_internal+0xae8>  // b.hs, b.nlast
     b0c:	mov	x11, x28
     b10:	mov	x10, x9
     b14:	b	c78 <ctf_bufopen_internal+0xb20>
     b18:	cmp	x8, #0x8
     b1c:	b.ne	1d8c <ctf_bufopen_internal+0x1c34>  // b.any
     b20:	ldr	w10, [x9]
     b24:	ldrh	w11, [x9, #4]
     b28:	ldrh	w12, [x9, #6]
     b2c:	rev	w10, w10
     b30:	rev	w11, w11
     b34:	rev	w12, w12
     b38:	str	w10, [x9]
     b3c:	lsr	w10, w11, #16
     b40:	lsr	w11, w12, #16
     b44:	strh	w10, [x9, #4]
     b48:	strh	w11, [x9, #6]
     b4c:	b	9d8 <ctf_bufopen_internal+0x880>
     b50:	cmp	x8, #0xc
     b54:	b.ne	1dac <ctf_bufopen_internal+0x1c54>  // b.any
     b58:	ldp	w10, w11, [x9]
     b5c:	ldr	w12, [x9, #8]
     b60:	rev	w10, w10
     b64:	rev	w11, w11
     b68:	rev	w12, w12
     b6c:	stp	w10, w11, [x9]
     b70:	str	w12, [x9, #8]
     b74:	b	9d8 <ctf_bufopen_internal+0x880>
     b78:	and	x12, x28, #0xfffffe
     b7c:	mov	w10, #0xc                   	// #12
     b80:	and	x11, x28, #0x1
     b84:	madd	x10, x12, x10, x9
     b88:	mov	x13, x12
     b8c:	mov	x14, x9
     b90:	ld3	{v0.2s-v2.2s}, [x14]
     b94:	subs	x13, x13, #0x2
     b98:	rev32	v3.8b, v0.8b
     b9c:	rev32	v4.8b, v1.8b
     ba0:	rev32	v5.8b, v2.8b
     ba4:	st3	{v3.2s-v5.2s}, [x14], #24
     ba8:	b.ne	b90 <ctf_bufopen_internal+0xa38>  // b.any
     bac:	cmp	x12, x28
     bb0:	b.eq	9d8 <ctf_bufopen_internal+0x880>  // b.none
     bb4:	add	x11, x11, #0x1
     bb8:	ldp	w12, w13, [x10]
     bbc:	ldr	w14, [x10, #8]
     bc0:	sub	x11, x11, #0x1
     bc4:	cmp	x11, #0x1
     bc8:	rev	w12, w12
     bcc:	rev	w13, w13
     bd0:	rev	w14, w14
     bd4:	stp	w12, w13, [x10]
     bd8:	str	w14, [x10, #8]
     bdc:	add	x10, x10, #0xc
     be0:	b.gt	bb8 <ctf_bufopen_internal+0xa60>
     be4:	b	9d8 <ctf_bufopen_internal+0x880>
     be8:	and	x12, x28, #0xfffffe
     bec:	and	x11, x28, #0x1
     bf0:	add	x10, x9, x12, lsl #3
     bf4:	mov	x13, x12
     bf8:	mov	x14, x9
     bfc:	ld2	{v0.2s, v1.2s}, [x14]
     c00:	subs	x13, x13, #0x2
     c04:	rev32	v2.8b, v0.8b
     c08:	rev32	v3.8b, v1.8b
     c0c:	st2	{v2.2s, v3.2s}, [x14], #16
     c10:	b.ne	bfc <ctf_bufopen_internal+0xaa4>  // b.any
     c14:	cmp	x12, x28
     c18:	b.eq	9d8 <ctf_bufopen_internal+0x880>  // b.none
     c1c:	add	x11, x11, #0x1
     c20:	ldp	w12, w13, [x10]
     c24:	sub	x11, x11, #0x1
     c28:	cmp	x11, #0x1
     c2c:	rev	w12, w12
     c30:	rev	w13, w13
     c34:	stp	w12, w13, [x10], #8
     c38:	b.gt	c20 <ctf_bufopen_internal+0xac8>
     c3c:	b	9d8 <ctf_bufopen_internal+0x880>
     c40:	and	x12, x28, #0xfffffc
     c44:	and	x11, x28, #0x3
     c48:	add	x10, x9, x12, lsl #2
     c4c:	add	x13, x9, #0x8
     c50:	mov	x14, x12
     c54:	ldp	d0, d1, [x13, #-8]
     c58:	subs	x14, x14, #0x4
     c5c:	rev32	v0.8b, v0.8b
     c60:	rev32	v1.8b, v1.8b
     c64:	stp	d0, d1, [x13, #-8]
     c68:	add	x13, x13, #0x10
     c6c:	b.ne	c54 <ctf_bufopen_internal+0xafc>  // b.any
     c70:	cmp	x12, x28
     c74:	b.eq	9d8 <ctf_bufopen_internal+0x880>  // b.none
     c78:	add	x11, x11, #0x1
     c7c:	ldr	w12, [x10]
     c80:	sub	x11, x11, #0x1
     c84:	cmp	x11, #0x1
     c88:	rev	w12, w12
     c8c:	str	w12, [x10], #4
     c90:	b.gt	c7c <ctf_bufopen_internal+0xb24>
     c94:	b	9d8 <ctf_bufopen_internal+0x880>
     c98:	ldp	w9, w10, [x24, #12]
     c9c:	rev	w9, w9
     ca0:	rev	w27, w10
     ca4:	stp	w9, w27, [x24, #12]
     ca8:	bfi	x27, x9, #32, #32
     cac:	mov	w9, #0x14                  	// #20
     cb0:	cmp	w25, #0xe
     cb4:	b.ls	aa4 <ctf_bufopen_internal+0x94c>  // b.plast
     cb8:	b	ed8 <ctf_bufopen_internal+0xd80>
     cbc:	cbz	w28, 9d8 <ctf_bufopen_internal+0x880>
     cc0:	cmp	w28, #0x1
     cc4:	b.ne	cd4 <ctf_bufopen_internal+0xb7c>  // b.any
     cc8:	mov	x11, x28
     ccc:	mov	x10, x9
     cd0:	b	d10 <ctf_bufopen_internal+0xbb8>
     cd4:	and	x12, x28, #0xfffffe
     cd8:	and	x11, x28, #0x1
     cdc:	add	x10, x9, x12, lsl #4
     ce0:	mov	x13, x12
     ce4:	mov	x14, x9
     ce8:	ld4	{v0.2s-v3.2s}, [x14]
     cec:	subs	x13, x13, #0x2
     cf0:	rev32	v4.8b, v0.8b
     cf4:	rev32	v5.8b, v1.8b
     cf8:	rev32	v6.8b, v2.8b
     cfc:	rev32	v7.8b, v3.8b
     d00:	st4	{v4.2s-v7.2s}, [x14], #32
     d04:	b.ne	ce8 <ctf_bufopen_internal+0xb90>  // b.any
     d08:	cmp	x12, x28
     d0c:	b.eq	9d8 <ctf_bufopen_internal+0x880>  // b.none
     d10:	add	x11, x11, #0x1
     d14:	ldp	w12, w13, [x10]
     d18:	ldp	w14, w15, [x10, #8]
     d1c:	sub	x11, x11, #0x1
     d20:	cmp	x11, #0x1
     d24:	rev	w12, w12
     d28:	rev	w13, w13
     d2c:	rev	w14, w14
     d30:	rev	w15, w15
     d34:	stp	w12, w13, [x10]
     d38:	stp	w14, w15, [x10, #8]
     d3c:	add	x10, x10, #0x10
     d40:	b.gt	d14 <ctf_bufopen_internal+0xbbc>
     d44:	b	9d8 <ctf_bufopen_internal+0x880>
     d48:	ldr	x2, [x19, #392]
     d4c:	mov	x0, x19
     d50:	mov	x1, x23
     d54:	bl	1e5c <ctf_set_base>
     d58:	ldrb	w8, [x19, #552]
     d5c:	tbnz	w8, #1, 1780 <ctf_bufopen_internal+0x1628>
     d60:	ldr	w8, [x23, #8]
     d64:	movi	v0.2d, #0x0
     d68:	stp	q0, q0, [sp, #592]
     d6c:	stp	q0, q0, [sp, #560]
     d70:	str	w8, [sp, #76]
     d74:	ldr	w8, [x19, #560]
     d78:	stp	q0, q0, [sp, #528]
     d7c:	stp	q0, q0, [sp, #496]
     d80:	stp	q0, q0, [sp, #464]
     d84:	cmp	w8, #0x1
     d88:	stp	q0, q0, [sp, #432]
     d8c:	stp	q0, q0, [sp, #400]
     d90:	stp	q0, q0, [sp, #368]
     d94:	stp	q0, q0, [sp, #336]
     d98:	stp	q0, q0, [sp, #304]
     d9c:	stp	q0, q0, [sp, #272]
     da0:	stp	q0, q0, [sp, #240]
     da4:	stp	q0, q0, [sp, #208]
     da8:	stp	q0, q0, [sp, #176]
     dac:	stp	q0, q0, [sp, #144]
     db0:	stp	q0, q0, [sp, #112]
     db4:	b.eq	178c <ctf_bufopen_internal+0x1634>  // b.none
     db8:	ldr	x8, [x19, #408]
     dbc:	ldp	w10, w11, [x23, #40]
     dc0:	add	x9, x8, x10
     dc4:	cmp	w10, w11
     dc8:	add	x8, x8, x11
     dcc:	stp	x11, x10, [sp, #56]
     dd0:	stp	x9, x8, [sp, #80]
     dd4:	b.cs	eb0 <ctf_bufopen_internal+0xd58>  // b.hs, b.nlast
     dd8:	ldr	x25, [sp, #80]
     ddc:	add	x28, sp, #0x70
     de0:	add	x24, x28, #0x30
     de4:	b	e1c <ctf_bufopen_internal+0xcc4>
     de8:	lsl	x8, x8, #3
     dec:	ldr	x9, [sp, #96]
     df0:	ldr	x10, [x19, #480]
     df4:	ldr	x11, [x28, x8]
     df8:	add	x12, x0, x25
     dfc:	add	x25, x12, x9
     e00:	add	x9, x10, #0x1
     e04:	add	x10, x11, #0x1
     e08:	ldr	x11, [sp, #88]
     e0c:	str	x10, [x28, x8]
     e10:	str	x9, [x19, #480]
     e14:	cmp	x25, x11
     e18:	b.cs	eb0 <ctf_bufopen_internal+0xd58>  // b.hs, b.nlast
     e1c:	ldr	x8, [x19]
     e20:	ldr	w0, [x25, #4]
     e24:	ldr	x8, [x8]
     e28:	blr	x8
     e2c:	ldr	x8, [x19]
     e30:	mov	w26, w0
     e34:	ldr	x9, [x8, #16]
     e38:	ldr	w8, [x25, #4]
     e3c:	mov	w0, w8
     e40:	blr	x9
     e44:	ldr	x8, [x19]
     e48:	mov	w27, w0
     e4c:	add	x2, sp, #0x68
     e50:	add	x3, sp, #0x60
     e54:	ldr	x8, [x8, #24]
     e58:	mov	x0, x19
     e5c:	mov	x1, x25
     e60:	blr	x8
     e64:	ldr	x8, [x19]
     e68:	ldr	x1, [sp, #104]
     e6c:	mov	w0, w26
     e70:	mov	x2, x27
     e74:	ldr	x8, [x8, #32]
     e78:	blr	x8
     e7c:	tbnz	x0, #63, ef8 <ctf_bufopen_internal+0xda0>
     e80:	and	w8, w26, #0xffff
     e84:	cmp	w8, #0x9
     e88:	b.ne	de8 <ctf_bufopen_internal+0xc90>  // b.any
     e8c:	ldr	w9, [x25, #8]
     e90:	sub	w10, w9, #0x1
     e94:	add	x9, x28, x9, lsl #3
     e98:	cmp	w10, #0x3d
     e9c:	csel	x9, x24, x9, hi  // hi = pmore
     ea0:	ldr	x10, [x9]
     ea4:	add	x10, x10, #0x1
     ea8:	str	x10, [x9]
     eac:	b	de8 <ctf_bufopen_internal+0xc90>
     eb0:	ldr	w8, [sp, #76]
     eb4:	cbz	w8, f00 <ctf_bufopen_internal+0xda8>
     eb8:	adrp	x0, 0 <ctf_set_ctl_hashes>
     ebc:	add	x0, x0, #0x0
     ec0:	mov	x1, x19
     ec4:	bl	0 <ctf_dprintf>
     ec8:	ldr	w8, [x19, #552]
     ecc:	orr	w8, w8, #0x1
     ed0:	str	w8, [x19, #552]
     ed4:	b	f10 <ctf_bufopen_internal+0xdb8>
     ed8:	adrp	x0, 0 <ctf_set_ctl_hashes>
     edc:	add	x0, x0, #0x0
     ee0:	mov	w1, w25
     ee4:	bl	0 <ctf_dprintf>
     ee8:	ldr	x2, [x19, #392]
     eec:	mov	x0, x19
     ef0:	mov	x1, x23
     ef4:	bl	1e5c <ctf_set_base>
     ef8:	mov	w1, #0x3ef                 	// #1007
     efc:	b	1640 <ctf_bufopen_internal+0x14e8>
     f00:	adrp	x0, 0 <ctf_set_ctl_hashes>
     f04:	add	x0, x0, #0x0
     f08:	mov	x1, x19
     f0c:	bl	0 <ctf_dprintf>
     f10:	ldr	x0, [sp, #160]
     f14:	adrp	x1, 0 <ctf_hash_string>
     f18:	adrp	x2, 0 <ctf_hash_eq_string>
     f1c:	add	x1, x1, #0x0
     f20:	add	x2, x2, #0x0
     f24:	bl	0 <ctf_hash_create>
     f28:	mov	x8, x19
     f2c:	str	x0, [x8, #152]!
     f30:	str	x8, [sp, #48]
     f34:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
     f38:	ldr	x0, [sp, #168]
     f3c:	adrp	x1, 0 <ctf_hash_string>
     f40:	adrp	x2, 0 <ctf_hash_eq_string>
     f44:	add	x1, x1, #0x0
     f48:	add	x2, x2, #0x0
     f4c:	bl	0 <ctf_hash_create>
     f50:	mov	x8, x19
     f54:	str	x0, [x8, #168]!
     f58:	str	x8, [sp, #40]
     f5c:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
     f60:	ldr	x0, [sp, #176]
     f64:	adrp	x1, 0 <ctf_hash_string>
     f68:	adrp	x2, 0 <ctf_hash_eq_string>
     f6c:	add	x1, x1, #0x0
     f70:	add	x2, x2, #0x0
     f74:	bl	0 <ctf_hash_create>
     f78:	mov	x8, x19
     f7c:	str	x0, [x8, #184]!
     f80:	str	x8, [sp, #16]
     f84:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
     f88:	ldp	x8, x9, [sp, #120]
     f8c:	ldr	x10, [sp, #152]
     f90:	ldp	x12, x13, [sp, #192]
     f94:	ldr	x11, [sp, #136]
     f98:	add	x8, x9, x8
     f9c:	add	x8, x8, x10
     fa0:	ldp	x9, x10, [sp, #208]
     fa4:	add	x8, x8, x12
     fa8:	add	x8, x8, x11
     fac:	add	x8, x8, x13
     fb0:	add	x8, x8, x9
     fb4:	adrp	x1, 0 <ctf_hash_string>
     fb8:	adrp	x2, 0 <ctf_hash_eq_string>
     fbc:	add	x0, x8, x10
     fc0:	add	x1, x1, #0x0
     fc4:	add	x2, x2, #0x0
     fc8:	bl	0 <ctf_hash_create>
     fcc:	mov	x8, x19
     fd0:	str	x0, [x8, #200]!
     fd4:	str	x8, [sp, #24]
     fd8:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
     fdc:	ldr	x26, [x19, #480]
     fe0:	lsl	x8, x26, #2
     fe4:	add	x25, x8, #0x4
     fe8:	mov	x0, x25
     fec:	bl	0 <malloc>
     ff0:	add	x8, x26, #0x1
     ff4:	mov	x24, x0
     ff8:	str	x0, [x19, #440]
     ffc:	lsl	x0, x8, #2
    1000:	str	x8, [x19, #456]
    1004:	bl	0 <malloc>
    1008:	mov	w1, #0xc                   	// #12
    100c:	str	x0, [x19, #448]
    1010:	str	x24, [sp, #32]
    1014:	cbz	x24, 1640 <ctf_bufopen_internal+0x14e8>
    1018:	mov	x27, x0
    101c:	cbz	x0, 1640 <ctf_bufopen_internal+0x14e8>
    1020:	ldr	x0, [sp, #32]
    1024:	mov	w1, wzr
    1028:	mov	x2, x25
    102c:	str	wzr, [x0]
    1030:	bl	0 <memset>
    1034:	mov	x0, x27
    1038:	mov	w1, wzr
    103c:	mov	x2, x25
    1040:	bl	0 <memset>
    1044:	ldp	x9, x8, [sp, #56]
    1048:	cmp	w8, w9
    104c:	b.cs	1334 <ctf_bufopen_internal+0x11dc>  // b.hs, b.nlast
    1050:	mov	w8, #0x1                   	// #1
    1054:	str	wzr, [sp, #12]
    1058:	str	wzr, [sp, #56]
    105c:	str	x8, [sp, #64]
    1060:	b	10c4 <ctf_bufopen_internal+0xf6c>
    1064:	ldr	w8, [x19, #544]
    1068:	ldr	x9, [sp, #64]
    106c:	add	w8, w8, #0x1
    1070:	orr	w2, w8, w9
    1074:	ldr	x8, [sp, #80]
    1078:	mov	x1, x19
    107c:	ldr	w3, [x8]
    1080:	bl	0 <ctf_hash_insert_type>
    1084:	cbnz	w0, 176c <ctf_bufopen_internal+0x1614>
    1088:	ldr	x11, [sp, #80]
    108c:	ldr	w8, [x19, #408]
    1090:	ldr	x9, [sp, #96]
    1094:	add	x10, x28, x11
    1098:	sub	w8, w11, w8
    109c:	add	x9, x10, x9
    10a0:	ldr	x10, [sp, #32]
    10a4:	ldr	x11, [sp, #64]
    10a8:	str	x9, [sp, #80]
    10ac:	str	w8, [x10, x11, lsl #2]
    10b0:	ldr	x8, [sp, #88]
    10b4:	add	x11, x11, #0x1
    10b8:	str	x11, [sp, #64]
    10bc:	cmp	x9, x8
    10c0:	b.cs	1350 <ctf_bufopen_internal+0x11f8>  // b.hs, b.nlast
    10c4:	ldr	x8, [x19]
    10c8:	ldr	x24, [sp, #80]
    10cc:	ldr	x8, [x8]
    10d0:	ldr	w0, [x24, #4]
    10d4:	blr	x8
    10d8:	ldr	x8, [x19]
    10dc:	mov	w28, w0
    10e0:	ldr	x9, [x8, #8]
    10e4:	ldr	w8, [x24, #4]
    10e8:	mov	w0, w8
    10ec:	blr	x9
    10f0:	ldr	x8, [x19]
    10f4:	mov	w25, w0
    10f8:	ldr	x9, [x8, #16]
    10fc:	ldr	w8, [x24, #4]
    1100:	mov	w0, w8
    1104:	blr	x9
    1108:	ldr	x8, [x19]
    110c:	mov	w26, w0
    1110:	add	x2, sp, #0x68
    1114:	add	x3, sp, #0x60
    1118:	ldr	x8, [x8, #24]
    111c:	mov	x0, x19
    1120:	mov	x1, x24
    1124:	blr	x8
    1128:	ldr	w1, [x24]
    112c:	mov	x0, x19
    1130:	bl	0 <ctf_strptr>
    1134:	ldr	x8, [x19]
    1138:	ldr	x1, [sp, #104]
    113c:	mov	x27, x0
    1140:	mov	w0, w28
    1144:	ldr	x8, [x8, #32]
    1148:	mov	x2, x26
    114c:	blr	x8
    1150:	and	w1, w28, #0xffff
    1154:	sub	w8, w1, #0x1
    1158:	cmp	w8, #0xd
    115c:	b.hi	1340 <ctf_bufopen_internal+0x11e8>  // b.pmore
    1160:	adrp	x11, 0 <ctf_set_ctl_hashes>
    1164:	add	x11, x11, #0x0
    1168:	adr	x9, 1088 <ctf_bufopen_internal+0xf30>
    116c:	ldrb	w10, [x11, x8]
    1170:	add	x9, x9, x10, lsl #2
    1174:	mov	x28, x0
    1178:	br	x9
    117c:	ldr	x8, [sp, #24]
    1180:	ldr	x0, [x8]
    1184:	ldr	w8, [sp, #76]
    1188:	cbnz	w8, 1064 <ctf_bufopen_internal+0xf0c>
    118c:	ldr	x8, [sp, #64]
    1190:	mov	w2, w8
    1194:	b	1074 <ctf_bufopen_internal+0xf1c>
    1198:	ldr	x0, [x19, #200]
    119c:	mov	x1, x19
    11a0:	mov	x2, x27
    11a4:	bl	0 <ctf_hash_lookup_type>
    11a8:	tbnz	w25, #0, 11b0 <ctf_bufopen_internal+0x1058>
    11ac:	cbnz	x0, 1088 <ctf_bufopen_internal+0xf30>
    11b0:	ldr	x8, [sp, #24]
    11b4:	b	11bc <ctf_bufopen_internal+0x1064>
    11b8:	ldr	x8, [sp, #16]
    11bc:	ldr	x0, [x8]
    11c0:	ldr	w8, [sp, #76]
    11c4:	cbz	w8, 12a4 <ctf_bufopen_internal+0x114c>
    11c8:	ldr	w8, [x19, #544]
    11cc:	ldr	x9, [sp, #64]
    11d0:	add	w8, w8, #0x1
    11d4:	orr	w2, w8, w9
    11d8:	b	12ac <ctf_bufopen_internal+0x1154>
    11dc:	ldr	x8, [sp, #80]
    11e0:	mov	x0, x19
    11e4:	ldr	w1, [x8, #8]
    11e8:	bl	0 <ctf_name_table>
    11ec:	mov	x25, x0
    11f0:	ldr	x0, [x0]
    11f4:	mov	x1, x19
    11f8:	mov	x2, x27
    11fc:	bl	0 <ctf_hash_lookup_type>
    1200:	cbnz	x0, 1088 <ctf_bufopen_internal+0xf30>
    1204:	ldr	x0, [x25]
    1208:	ldr	w8, [sp, #76]
    120c:	cbnz	w8, 1064 <ctf_bufopen_internal+0xf0c>
    1210:	b	118c <ctf_bufopen_internal+0x1034>
    1214:	ldr	x8, [sp, #48]
    1218:	ldr	x0, [x8]
    121c:	ldr	w8, [sp, #76]
    1220:	cbz	w8, 12c4 <ctf_bufopen_internal+0x116c>
    1224:	ldr	w8, [x19, #544]
    1228:	ldr	x9, [sp, #64]
    122c:	add	w8, w8, #0x1
    1230:	orr	w2, w8, w9
    1234:	b	12cc <ctf_bufopen_internal+0x1174>
    1238:	ldr	x8, [sp, #80]
    123c:	ldr	w10, [sp, #76]
    1240:	ldr	w9, [x19, #544]
    1244:	ldr	w8, [x8, #8]
    1248:	cmp	w10, #0x0
    124c:	cset	w10, ne  // ne = any
    1250:	cmp	w8, w9
    1254:	cset	w11, ls  // ls = plast
    1258:	cmp	w10, w11
    125c:	b.eq	117c <ctf_bufopen_internal+0x1024>  // b.none
    1260:	ldr	x10, [x19, #480]
    1264:	and	x8, x9, x8
    1268:	cmp	x10, x8
    126c:	b.cc	117c <ctf_bufopen_internal+0x1024>  // b.lo, b.ul, b.last
    1270:	ldr	x9, [x19, #448]
    1274:	ldr	x10, [sp, #64]
    1278:	str	w10, [x9, x8, lsl #2]
    127c:	b	117c <ctf_bufopen_internal+0x1024>
    1280:	ldr	x8, [sp, #40]
    1284:	ldr	x0, [x8]
    1288:	ldr	w8, [sp, #76]
    128c:	cbz	w8, 12fc <ctf_bufopen_internal+0x11a4>
    1290:	ldr	w8, [x19, #544]
    1294:	ldr	x9, [sp, #64]
    1298:	add	w8, w8, #0x1
    129c:	orr	w2, w8, w9
    12a0:	b	1304 <ctf_bufopen_internal+0x11ac>
    12a4:	ldr	x8, [sp, #64]
    12a8:	mov	w2, w8
    12ac:	ldr	x8, [sp, #80]
    12b0:	mov	x1, x19
    12b4:	ldr	w3, [x8]
    12b8:	bl	0 <ctf_hash_define_type>
    12bc:	cbz	w0, 1088 <ctf_bufopen_internal+0xf30>
    12c0:	b	176c <ctf_bufopen_internal+0x1614>
    12c4:	ldr	x8, [sp, #64]
    12c8:	mov	w2, w8
    12cc:	ldr	x8, [sp, #80]
    12d0:	mov	x1, x19
    12d4:	ldr	w3, [x8]
    12d8:	bl	0 <ctf_hash_define_type>
    12dc:	cbnz	w0, 176c <ctf_bufopen_internal+0x1614>
    12e0:	ldr	x8, [sp, #104]
    12e4:	mov	w9, #0x1fffffff            	// #536870911
    12e8:	cmp	x8, x9
    12ec:	ldr	w8, [sp, #12]
    12f0:	cinc	w8, w8, gt
    12f4:	str	w8, [sp, #12]
    12f8:	b	1088 <ctf_bufopen_internal+0xf30>
    12fc:	ldr	x8, [sp, #64]
    1300:	mov	w2, w8
    1304:	ldr	x8, [sp, #80]
    1308:	mov	x1, x19
    130c:	ldr	w3, [x8]
    1310:	bl	0 <ctf_hash_define_type>
    1314:	cbnz	w0, 176c <ctf_bufopen_internal+0x1614>
    1318:	ldr	x8, [sp, #104]
    131c:	mov	w9, #0x1fffffff            	// #536870911
    1320:	cmp	x8, x9
    1324:	ldr	w8, [sp, #56]
    1328:	cinc	w8, w8, gt
    132c:	str	w8, [sp, #56]
    1330:	b	1088 <ctf_bufopen_internal+0xf30>
    1334:	str	wzr, [sp, #56]
    1338:	str	wzr, [sp, #12]
    133c:	b	1354 <ctf_bufopen_internal+0x11fc>
    1340:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1344:	add	x0, x0, #0x0
    1348:	bl	0 <ctf_dprintf>
    134c:	b	ef8 <ctf_bufopen_internal+0xda0>
    1350:	ldr	x26, [x19, #480]
    1354:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1358:	add	x0, x0, #0x0
    135c:	mov	x1, x26
    1360:	bl	0 <ctf_dprintf>
    1364:	ldr	x0, [x19, #184]
    1368:	bl	0 <ctf_hash_size>
    136c:	mov	w1, w0
    1370:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1374:	add	x0, x0, #0x0
    1378:	bl	0 <ctf_dprintf>
    137c:	ldr	x0, [x19, #152]
    1380:	bl	0 <ctf_hash_size>
    1384:	ldr	w2, [sp, #12]
    1388:	mov	w1, w0
    138c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1390:	add	x0, x0, #0x0
    1394:	bl	0 <ctf_dprintf>
    1398:	ldr	x0, [x19, #168]
    139c:	bl	0 <ctf_hash_size>
    13a0:	ldr	w2, [sp, #56]
    13a4:	mov	w1, w0
    13a8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    13ac:	add	x0, x0, #0x0
    13b0:	bl	0 <ctf_dprintf>
    13b4:	ldr	x0, [x19, #200]
    13b8:	bl	0 <ctf_hash_size>
    13bc:	mov	w1, w0
    13c0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    13c4:	add	x0, x0, #0x0
    13c8:	bl	0 <ctf_dprintf>
    13cc:	ldr	x8, [x19, #480]
    13d0:	cbz	x8, 14a4 <ctf_bufopen_internal+0x134c>
    13d4:	mov	w24, #0x1                   	// #1
    13d8:	b	13ec <ctf_bufopen_internal+0x1294>
    13dc:	ldr	x8, [x19, #480]
    13e0:	add	w24, w24, #0x1
    13e4:	cmp	x8, x24
    13e8:	b.cc	14a4 <ctf_bufopen_internal+0x134c>  // b.lo, b.ul, b.last
    13ec:	ldr	x8, [x19, #448]
    13f0:	ldr	w25, [x8, x24, lsl #2]
    13f4:	cbz	w25, 13dc <ctf_bufopen_internal+0x1284>
    13f8:	ldr	w9, [x19, #552]
    13fc:	tbnz	w9, #1, 1414 <ctf_bufopen_internal+0x12bc>
    1400:	ldr	x8, [x19, #440]
    1404:	ldr	x9, [x19, #408]
    1408:	ldr	w8, [x8, x24, lsl #2]
    140c:	add	x26, x9, x8
    1410:	b	1438 <ctf_bufopen_internal+0x12e0>
    1414:	mov	w8, w24
    1418:	tbz	w9, #0, 1428 <ctf_bufopen_internal+0x12d0>
    141c:	ldr	w8, [x19, #544]
    1420:	add	w8, w8, #0x1
    1424:	orr	w8, w8, w24
    1428:	mov	w1, w8
    142c:	mov	x0, x19
    1430:	bl	0 <ctf_dtd_lookup>
    1434:	add	x26, x0, #0x18
    1438:	ldr	x8, [x19]
    143c:	ldr	w0, [x26, #4]
    1440:	ldr	x8, [x8]
    1444:	blr	x8
    1448:	cmp	w0, #0xa
    144c:	b.ne	13dc <ctf_bufopen_internal+0x1284>  // b.any
    1450:	ldr	w1, [x26]
    1454:	mov	x0, x19
    1458:	bl	0 <ctf_strptr>
    145c:	ldrb	w8, [x0]
    1460:	cbnz	w8, 13dc <ctf_bufopen_internal+0x1284>
    1464:	ldr	w10, [sp, #76]
    1468:	ldr	w8, [x26, #8]
    146c:	ldr	w9, [x19, #544]
    1470:	cmp	w10, #0x0
    1474:	cset	w10, ne  // ne = any
    1478:	cmp	w8, w9
    147c:	cset	w11, ls  // ls = plast
    1480:	cmp	w10, w11
    1484:	b.eq	13dc <ctf_bufopen_internal+0x1284>  // b.none
    1488:	ldr	x10, [x19, #480]
    148c:	and	x8, x9, x8
    1490:	cmp	x10, x8
    1494:	b.cc	13dc <ctf_bufopen_internal+0x1284>  // b.lo, b.ul, b.last
    1498:	ldr	x9, [x19, #448]
    149c:	str	w25, [x9, x8, lsl #2]
    14a0:	b	13dc <ctf_bufopen_internal+0x1284>
    14a4:	cbz	x20, 1678 <ctf_bufopen_internal+0x1520>
    14a8:	ldp	x8, x27, [x20, #16]
    14ac:	udiv	x25, x8, x27
    14b0:	lsl	x0, x25, #2
    14b4:	str	x25, [x19, #432]
    14b8:	bl	0 <malloc>
    14bc:	str	x0, [x19, #424]
    14c0:	cbz	x0, 163c <ctf_bufopen_internal+0x14e4>
    14c4:	cmp	x25, #0x1
    14c8:	b.lt	16e8 <ctf_bufopen_internal+0x1590>  // b.tstop
    14cc:	ldr	w8, [x23, #20]
    14d0:	ldr	x21, [x20, #8]
    14d4:	mov	x24, x0
    14d8:	add	x26, x0, x25, lsl #2
    14dc:	str	w8, [sp, #80]
    14e0:	ldr	w8, [x23, #24]
    14e4:	str	w8, [sp, #88]
    14e8:	cmp	x27, #0x10
    14ec:	b.ne	1504 <ctf_bufopen_internal+0x13ac>  // b.any
    14f0:	add	x1, sp, #0x70
    14f4:	mov	x0, x21
    14f8:	bl	0 <ctf_sym_to_elf64>
    14fc:	mov	x27, x0
    1500:	b	1508 <ctf_bufopen_internal+0x13b0>
    1504:	mov	x27, x21
    1508:	ldr	w8, [x27]
    150c:	ldr	x9, [x22, #16]
    1510:	adrp	x28, 8b <ctf_simple_open+0x2b>
    1514:	add	x28, x28, #0x0
    1518:	cmp	x9, x8
    151c:	b.ls	1528 <ctf_bufopen_internal+0x13d0>  // b.plast
    1520:	ldr	x9, [x22, #8]
    1524:	add	x28, x9, x8
    1528:	cbz	w8, 160c <ctf_bufopen_internal+0x14b4>
    152c:	ldrh	w25, [x27, #6]
    1530:	cbz	w25, 160c <ctf_bufopen_internal+0x14b4>
    1534:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1538:	mov	x0, x28
    153c:	add	x1, x1, #0x0
    1540:	bl	0 <strcmp>
    1544:	cbz	w0, 160c <ctf_bufopen_internal+0x14b4>
    1548:	adrp	x1, 0 <ctf_set_ctl_hashes>
    154c:	mov	x0, x28
    1550:	add	x1, x1, #0x0
    1554:	bl	0 <strcmp>
    1558:	cbz	w0, 160c <ctf_bufopen_internal+0x14b4>
    155c:	ldrb	w8, [x27, #4]
    1560:	and	w8, w8, #0xf
    1564:	cmp	w8, #0x2
    1568:	b.eq	15ac <ctf_bufopen_internal+0x1454>  // b.none
    156c:	cmp	w8, #0x1
    1570:	b.ne	160c <ctf_bufopen_internal+0x14b4>  // b.any
    1574:	ldr	w8, [x23, #24]
    1578:	ldr	w9, [sp, #80]
    157c:	cmp	w9, w8
    1580:	b.cs	160c <ctf_bufopen_internal+0x14b4>  // b.hs, b.nlast
    1584:	mov	w8, #0xfff1                	// #65521
    1588:	cmp	w25, w8
    158c:	b.ne	1598 <ctf_bufopen_internal+0x1440>  // b.any
    1590:	ldr	x8, [x27, #8]
    1594:	cbz	x8, 160c <ctf_bufopen_internal+0x14b4>
    1598:	ldr	w8, [sp, #80]
    159c:	str	w8, [x24]
    15a0:	add	w8, w8, #0x4
    15a4:	str	w8, [sp, #80]
    15a8:	b	1614 <ctf_bufopen_internal+0x14bc>
    15ac:	ldr	w8, [x23, #28]
    15b0:	ldr	w9, [sp, #88]
    15b4:	cmp	w9, w8
    15b8:	b.cs	160c <ctf_bufopen_internal+0x14b4>  // b.hs, b.nlast
    15bc:	ldr	w10, [sp, #88]
    15c0:	ldr	x8, [x19, #408]
    15c4:	ldr	x9, [x19]
    15c8:	str	w10, [x24]
    15cc:	ldr	w28, [x8, w10, uxtw]
    15d0:	ldr	x8, [x9, #16]
    15d4:	mov	w0, w28
    15d8:	blr	x8
    15dc:	ldr	x8, [x19]
    15e0:	mov	w27, w0
    15e4:	mov	w0, w28
    15e8:	ldr	x8, [x8]
    15ec:	blr	x8
    15f0:	orr	w8, w0, w27
    15f4:	cbz	w8, 162c <ctf_bufopen_internal+0x14d4>
    15f8:	ldr	w8, [sp, #88]
    15fc:	add	w8, w8, w27, lsl #2
    1600:	add	w8, w8, #0x8
    1604:	str	w8, [sp, #88]
    1608:	b	1614 <ctf_bufopen_internal+0x14bc>
    160c:	mov	w8, #0xffffffff            	// #-1
    1610:	str	w8, [x24]
    1614:	ldr	x27, [x20, #24]
    1618:	add	x24, x24, #0x4
    161c:	cmp	x24, x26
    1620:	add	x21, x21, x27
    1624:	b.cc	14e8 <ctf_bufopen_internal+0x1390>  // b.lo, b.ul, b.last
    1628:	b	16e4 <ctf_bufopen_internal+0x158c>
    162c:	ldr	w8, [sp, #88]
    1630:	add	w8, w8, #0x4
    1634:	str	w8, [sp, #88]
    1638:	b	1614 <ctf_bufopen_internal+0x14bc>
    163c:	mov	w1, #0xc                   	// #12
    1640:	mov	x0, x21
    1644:	bl	0 <ctf_set_open_errno>
    1648:	mov	x0, x19
    164c:	bl	1fa0 <ctf_file_close>
    1650:	mov	x19, xzr
    1654:	mov	x0, x19
    1658:	add	sp, sp, #0x280
    165c:	ldp	x20, x19, [sp, #80]
    1660:	ldp	x22, x21, [sp, #64]
    1664:	ldp	x24, x23, [sp, #48]
    1668:	ldp	x26, x25, [sp, #32]
    166c:	ldp	x28, x27, [sp, #16]
    1670:	ldp	x29, x30, [sp], #96
    1674:	ret
    1678:	ldr	x12, [sp, #24]
    167c:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1680:	add	x8, x8, #0x0
    1684:	mov	w9, #0x6                   	// #6
    1688:	stp	xzr, x12, [x19, #296]
    168c:	stp	x8, x9, [x19, #216]
    1690:	ldr	x9, [sp, #48]
    1694:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1698:	add	x10, x10, #0x0
    169c:	stp	xzr, xzr, [x19, #320]
    16a0:	stp	x9, x10, [x19, #232]
    16a4:	ldr	x10, [sp, #40]
    16a8:	adrp	x12, 0 <ctf_set_ctl_hashes>
    16ac:	mov	w11, #0x5                   	// #5
    16b0:	add	x12, x12, #0x0
    16b4:	mov	w8, #0x4                   	// #4
    16b8:	stp	x11, x10, [x19, #248]
    16bc:	stp	x12, x8, [x19, #264]
    16c0:	ldr	x8, [sp, #16]
    16c4:	adrp	x9, 8b <ctf_simple_open+0x2b>
    16c8:	adrp	x10, 0 <ctf_set_ctl_hashes>
    16cc:	add	x9, x9, #0x0
    16d0:	add	x10, x10, #0x0
    16d4:	str	xzr, [x19, #312]
    16d8:	stp	x8, x9, [x19, #280]
    16dc:	str	x10, [x19, #488]
    16e0:	b	1780 <ctf_bufopen_internal+0x1628>
    16e4:	ldr	x25, [x19, #432]
    16e8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    16ec:	add	x0, x0, #0x0
    16f0:	mov	x1, x25
    16f4:	bl	0 <ctf_dprintf>
    16f8:	ldr	x12, [sp, #24]
    16fc:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1700:	add	x8, x8, #0x0
    1704:	mov	w9, #0x6                   	// #6
    1708:	stp	xzr, x12, [x19, #296]
    170c:	stp	x8, x9, [x19, #216]
    1710:	ldr	x9, [sp, #48]
    1714:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1718:	add	x10, x10, #0x0
    171c:	stp	xzr, xzr, [x19, #320]
    1720:	stp	x9, x10, [x19, #232]
    1724:	ldr	x10, [sp, #40]
    1728:	adrp	x12, 0 <ctf_set_ctl_hashes>
    172c:	mov	w11, #0x5                   	// #5
    1730:	add	x12, x12, #0x0
    1734:	mov	w8, #0x4                   	// #4
    1738:	stp	x11, x10, [x19, #248]
    173c:	stp	x12, x8, [x19, #264]
    1740:	ldr	x8, [sp, #16]
    1744:	adrp	x9, 8b <ctf_simple_open+0x2b>
    1748:	add	x9, x9, #0x0
    174c:	str	xzr, [x19, #312]
    1750:	stp	x8, x9, [x19, #280]
    1754:	ldr	x8, [x20, #24]
    1758:	cmp	x8, #0x18
    175c:	b.ne	1774 <ctf_bufopen_internal+0x161c>  // b.any
    1760:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1764:	add	x8, x8, #0x0
    1768:	b	177c <ctf_bufopen_internal+0x1624>
    176c:	mov	w1, w0
    1770:	b	1640 <ctf_bufopen_internal+0x14e8>
    1774:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1778:	add	x8, x8, #0x0
    177c:	str	x8, [x19, #488]
    1780:	mov	w8, #0x1                   	// #1
    1784:	str	w8, [x19, #548]
    1788:	b	1654 <ctf_bufopen_internal+0x14fc>
    178c:	ldrb	w8, [x23, #2]
    1790:	cmp	w8, #0x2
    1794:	b.eq	1d60 <ctf_bufopen_internal+0x1c08>  // b.none
    1798:	cmp	w8, #0x1
    179c:	b.ne	db8 <ctf_bufopen_internal+0xc60>  // b.any
    17a0:	ldp	x9, x8, [x19, #400]
    17a4:	ldp	w10, w11, [x23, #40]
    17a8:	mov	x25, xzr
    17ac:	stp	x9, x11, [sp, #24]
    17b0:	add	x9, x8, x10
    17b4:	cmp	w10, w11
    17b8:	add	x8, x8, x11
    17bc:	str	x9, [sp, #80]
    17c0:	stp	x10, x8, [sp, #40]
    17c4:	b.cs	1940 <ctf_bufopen_internal+0x17e8>  // b.hs, b.nlast
    17c8:	ldr	x24, [sp, #80]
    17cc:	ldp	w8, w9, [x24, #8]
    17d0:	ldrh	w10, [x24, #6]
    17d4:	ldrh	w28, [x24, #4]
    17d8:	mov	w27, #0x8                   	// #8
    17dc:	bfi	x9, x8, #32, #32
    17e0:	mov	w8, #0xffff                	// #65535
    17e4:	cmp	w10, w8
    17e8:	csel	x8, x9, x10, eq  // eq = none
    17ec:	ubfx	x1, x28, #11, #21
    17f0:	str	x8, [sp, #64]
    17f4:	mov	w8, #0x10                  	// #16
    17f8:	csel	x8, x8, x27, eq  // eq = none
    17fc:	cmp	w1, #0xe
    1800:	and	x26, x28, #0x3ff
    1804:	str	x8, [sp, #56]
    1808:	b.hi	1868 <ctf_bufopen_internal+0x1710>  // b.pmore
    180c:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1810:	add	x10, x10, #0x0
    1814:	adr	x8, 1824 <ctf_bufopen_internal+0x16cc>
    1818:	ldrb	w9, [x10, x1]
    181c:	add	x8, x8, x9, lsl #2
    1820:	br	x8
    1824:	mov	x27, xzr
    1828:	b	1880 <ctf_bufopen_internal+0x1728>
    182c:	mov	w27, #0x4                   	// #4
    1830:	b	1880 <ctf_bufopen_internal+0x1728>
    1834:	ldr	x8, [sp, #64]
    1838:	cmp	x8, #0x2, lsl #12
    183c:	b.ge	187c <ctf_bufopen_internal+0x1724>  // b.tcont
    1840:	lsl	x27, x26, #3
    1844:	b	1880 <ctf_bufopen_internal+0x1728>
    1848:	lsl	x27, x26, #3
    184c:	mov	x8, x27
    1850:	b	190c <ctf_bufopen_internal+0x17b4>
    1854:	and	x8, x26, #0x1
    1858:	add	x8, x8, x26
    185c:	lsl	x27, x8, #1
    1860:	lsl	x8, x8, #2
    1864:	b	190c <ctf_bufopen_internal+0x17b4>
    1868:	adrp	x0, 0 <ctf_set_ctl_hashes>
    186c:	add	x0, x0, #0x0
    1870:	bl	0 <ctf_dprintf>
    1874:	mov	w27, #0x3ef                 	// #1007
    1878:	b	1880 <ctf_bufopen_internal+0x1728>
    187c:	lsl	x27, x26, #4
    1880:	lsr	w1, w28, #11
    1884:	cmp	w1, #0xe
    1888:	b.hi	18f4 <ctf_bufopen_internal+0x179c>  // b.pmore
    188c:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1890:	add	x10, x10, #0x0
    1894:	adr	x9, 18a8 <ctf_bufopen_internal+0x1750>
    1898:	ldrb	w8, [x10, x1]
    189c:	add	x9, x9, x8, lsl #2
    18a0:	mov	w8, #0xc                   	// #12
    18a4:	br	x9
    18a8:	mov	x8, xzr
    18ac:	b	190c <ctf_bufopen_internal+0x17b4>
    18b0:	mov	w8, #0x4                   	// #4
    18b4:	b	190c <ctf_bufopen_internal+0x17b4>
    18b8:	ldr	x9, [sp, #64]
    18bc:	mov	w8, #0x1fffffff            	// #536870911
    18c0:	cmp	x9, x8
    18c4:	b.gt	1908 <ctf_bufopen_internal+0x17b0>
    18c8:	add	x8, x26, x26, lsl #1
    18cc:	lsl	x8, x8, #2
    18d0:	b	190c <ctf_bufopen_internal+0x17b4>
    18d4:	lsl	x8, x26, #3
    18d8:	b	190c <ctf_bufopen_internal+0x17b4>
    18dc:	and	x8, x26, #0x1
    18e0:	add	x8, x8, x26
    18e4:	lsl	x8, x8, #2
    18e8:	b	190c <ctf_bufopen_internal+0x17b4>
    18ec:	mov	w8, #0x8                   	// #8
    18f0:	b	190c <ctf_bufopen_internal+0x17b4>
    18f4:	adrp	x0, 0 <ctf_set_ctl_hashes>
    18f8:	add	x0, x0, #0x0
    18fc:	bl	0 <ctf_dprintf>
    1900:	mov	w8, #0x3ef                 	// #1007
    1904:	b	190c <ctf_bufopen_internal+0x17b4>
    1908:	lsl	x8, x26, #4
    190c:	ldr	x9, [sp, #64]
    1910:	orr	x9, x27, x9
    1914:	tbnz	x9, #63, 1d60 <ctf_bufopen_internal+0x1c08>
    1918:	ldr	x10, [sp, #56]
    191c:	sub	x9, x25, x10
    1920:	sub	x9, x9, x27
    1924:	add	x8, x9, x8
    1928:	ldr	x9, [sp, #48]
    192c:	add	x10, x10, x24
    1930:	add	x24, x10, x27
    1934:	add	x25, x8, #0xc
    1938:	cmp	x24, x9
    193c:	b.cc	17cc <ctf_bufopen_internal+0x1674>  // b.lo, b.ul, b.last
    1940:	ldr	x8, [x19, #416]
    1944:	add	x0, x8, x25
    1948:	str	x0, [sp, #64]
    194c:	bl	0 <malloc>
    1950:	cbz	x0, 1d60 <ctf_bufopen_internal+0x1c08>
    1954:	ldr	x27, [x19, #408]
    1958:	ldr	w26, [x23, #40]
    195c:	mov	x28, x0
    1960:	mov	x1, x27
    1964:	mov	x2, x26
    1968:	bl	0 <memcpy>
    196c:	ldp	w24, w2, [x23, #44]
    1970:	add	x8, x28, x24
    1974:	add	x0, x8, x25
    1978:	add	x1, x27, x24
    197c:	bl	0 <memcpy>
    1980:	sub	w8, w24, w26
    1984:	add	x0, x28, x26
    1988:	add	x2, x25, x8
    198c:	mov	w1, wzr
    1990:	bl	0 <memset>
    1994:	add	w8, w24, w25
    1998:	str	w8, [x23, #44]
    199c:	cmp	w8, w26
    19a0:	ldr	x8, [sp, #64]
    19a4:	str	x8, [x19, #416]
    19a8:	b.cc	1dec <ctf_bufopen_internal+0x1c94>  // b.lo, b.ul, b.last
    19ac:	mov	x0, x19
    19b0:	mov	x1, x23
    19b4:	mov	x2, x28
    19b8:	stp	x28, x28, [x19, #400]
    19bc:	str	x28, [x19, #392]
    19c0:	bl	1e5c <ctf_set_base>
    19c4:	ldr	x8, [x19, #408]
    19c8:	ldr	w9, [x23, #40]
    19cc:	ldp	x11, x10, [sp, #32]
    19d0:	add	x27, x8, x9
    19d4:	cmp	w10, w11
    19d8:	b.cc	1a1c <ctf_bufopen_internal+0x18c4>  // b.lo, b.ul, b.last
    19dc:	b	1d2c <ctf_bufopen_internal+0x1bd4>
    19e0:	ldrh	w8, [x24]
    19e4:	ldrh	w9, [x24, #2]
    19e8:	fmov	s0, w8
    19ec:	mov	v0.s[1], w9
    19f0:	str	d0, [x27]
    19f4:	ldr	w8, [x24, #4]
    19f8:	str	w8, [x27, #8]
    19fc:	ldr	x8, [sp, #64]
    1a00:	add	x9, x8, x24
    1a04:	ldr	x8, [sp, #48]
    1a08:	str	x9, [sp, #80]
    1a0c:	cmp	x9, x8
    1a10:	ldr	x8, [sp, #56]
    1a14:	add	x27, x8, x27
    1a18:	b.cs	1d28 <ctf_bufopen_internal+0x1bd0>  // b.hs, b.nlast
    1a1c:	ldr	x10, [sp, #80]
    1a20:	mov	w11, #0x8                   	// #8
    1a24:	ldp	w8, w9, [x10, #8]
    1a28:	ldrh	w24, [x10, #4]
    1a2c:	ldrh	w10, [x10, #6]
    1a30:	bfi	x9, x8, #32, #32
    1a34:	mov	w8, #0xffff                	// #65535
    1a38:	ubfx	x1, x24, #11, #21
    1a3c:	cmp	w10, w8
    1a40:	mov	w8, #0x10                  	// #16
    1a44:	csel	x26, x9, x10, eq  // eq = none
    1a48:	mov	w9, #0x8                   	// #8
    1a4c:	csel	x8, x8, x11, eq  // eq = none
    1a50:	cmp	w1, #0xe
    1a54:	and	x28, x24, #0x3ff
    1a58:	str	x9, [sp, #64]
    1a5c:	str	x8, [sp, #40]
    1a60:	b.hi	1aac <ctf_bufopen_internal+0x1954>  // b.pmore
    1a64:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1a68:	add	x10, x10, #0x0
    1a6c:	adr	x8, 1a7c <ctf_bufopen_internal+0x1924>
    1a70:	ldrb	w9, [x10, x1]
    1a74:	add	x8, x8, x9, lsl #2
    1a78:	br	x8
    1a7c:	str	xzr, [sp, #64]
    1a80:	b	1ac8 <ctf_bufopen_internal+0x1970>
    1a84:	cmp	x26, #0x2, lsl #12
    1a88:	b.ge	1ac0 <ctf_bufopen_internal+0x1968>  // b.tcont
    1a8c:	lsl	x8, x28, #3
    1a90:	b	1ac4 <ctf_bufopen_internal+0x196c>
    1a94:	mov	w8, #0x4                   	// #4
    1a98:	b	1ac4 <ctf_bufopen_internal+0x196c>
    1a9c:	and	x8, x28, #0x1
    1aa0:	add	x8, x8, x28
    1aa4:	lsl	x8, x8, #1
    1aa8:	b	1ac4 <ctf_bufopen_internal+0x196c>
    1aac:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1ab0:	add	x0, x0, #0x0
    1ab4:	bl	0 <ctf_dprintf>
    1ab8:	mov	w8, #0x3ef                 	// #1007
    1abc:	b	1ac4 <ctf_bufopen_internal+0x196c>
    1ac0:	lsl	x8, x28, #4
    1ac4:	str	x8, [sp, #64]
    1ac8:	ldr	x8, [sp, #80]
    1acc:	lsr	w9, w24, #10
    1ad0:	mov	w10, w28
    1ad4:	lsr	w25, w24, #11
    1ad8:	ldr	w8, [x8]
    1adc:	bfi	w10, w9, #25, #1
    1ae0:	cmp	w25, #0xd
    1ae4:	bfi	w10, w25, #26, #5
    1ae8:	stp	w8, w10, [x27]
    1aec:	b.hi	1b30 <ctf_bufopen_internal+0x19d8>  // b.pmore
    1af0:	mov	w8, #0x1                   	// #1
    1af4:	lsl	w8, w8, w25
    1af8:	mov	w9, #0x1d7                 	// #471
    1afc:	tst	w8, w9
    1b00:	b.eq	1b18 <ctf_bufopen_internal+0x19c0>  // b.none
    1b04:	mov	w8, #0xfffffffe            	// #-2
    1b08:	cmp	x26, x8
    1b0c:	b.hi	1b28 <ctf_bufopen_internal+0x19d0>  // b.pmore
    1b10:	str	w26, [x27, #8]
    1b14:	b	1b30 <ctf_bufopen_internal+0x19d8>
    1b18:	ldr	x8, [sp, #80]
    1b1c:	ldrh	w8, [x8, #6]
    1b20:	str	w8, [x27, #8]
    1b24:	b	1b30 <ctf_bufopen_internal+0x19d8>
    1b28:	lsr	x8, x26, #32
    1b2c:	stp	w8, w26, [x27, #12]
    1b30:	ldp	w9, w8, [x27, #12]
    1b34:	ldr	w10, [x27, #8]
    1b38:	mov	w11, #0xc                   	// #12
    1b3c:	bfi	x8, x9, #32, #32
    1b40:	cmn	w10, #0x1
    1b44:	csel	x24, x8, x10, eq  // eq = none
    1b48:	mov	w8, #0x14                  	// #20
    1b4c:	mov	w9, #0xc                   	// #12
    1b50:	csel	x8, x8, x11, eq  // eq = none
    1b54:	cmp	w25, #0xe
    1b58:	str	x9, [sp, #56]
    1b5c:	str	x8, [sp, #32]
    1b60:	b.hi	1bc4 <ctf_bufopen_internal+0x1a6c>  // b.pmore
    1b64:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1b68:	add	x10, x10, #0x0
    1b6c:	adr	x8, 1b7c <ctf_bufopen_internal+0x1a24>
    1b70:	ldrb	w9, [x10, x25]
    1b74:	add	x8, x8, x9, lsl #2
    1b78:	br	x8
    1b7c:	str	xzr, [sp, #56]
    1b80:	b	1be4 <ctf_bufopen_internal+0x1a8c>
    1b84:	mov	w8, #0x4                   	// #4
    1b88:	b	1be0 <ctf_bufopen_internal+0x1a88>
    1b8c:	mov	w8, #0x1fffffff            	// #536870911
    1b90:	cmp	x24, x8
    1b94:	b.gt	1bdc <ctf_bufopen_internal+0x1a84>
    1b98:	add	x8, x28, x28, lsl #1
    1b9c:	lsl	x8, x8, #2
    1ba0:	b	1be0 <ctf_bufopen_internal+0x1a88>
    1ba4:	lsl	x8, x28, #3
    1ba8:	b	1be0 <ctf_bufopen_internal+0x1a88>
    1bac:	and	x8, x28, #0x1
    1bb0:	add	x8, x8, x28
    1bb4:	lsl	x8, x8, #2
    1bb8:	b	1be0 <ctf_bufopen_internal+0x1a88>
    1bbc:	mov	w8, #0x8                   	// #8
    1bc0:	b	1be0 <ctf_bufopen_internal+0x1a88>
    1bc4:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1bc8:	add	x0, x0, #0x0
    1bcc:	mov	w1, w25
    1bd0:	bl	0 <ctf_dprintf>
    1bd4:	mov	w8, #0x3ef                 	// #1007
    1bd8:	b	1be0 <ctf_bufopen_internal+0x1a88>
    1bdc:	lsl	x8, x28, #4
    1be0:	str	x8, [sp, #56]
    1be4:	cmp	x26, x24
    1be8:	b.ne	1dcc <ctf_bufopen_internal+0x1c74>  // b.any
    1bec:	ldr	x8, [sp, #80]
    1bf0:	ldr	x9, [sp, #40]
    1bf4:	add	x24, x9, x8
    1bf8:	sub	w8, w25, #0x6
    1bfc:	cmp	w8, #0x2
    1c00:	ldr	x8, [sp, #32]
    1c04:	add	x27, x8, x27
    1c08:	b.cc	1c20 <ctf_bufopen_internal+0x1ac8>  // b.lo, b.ul, b.last
    1c0c:	cmp	w25, #0x5
    1c10:	b.eq	1c98 <ctf_bufopen_internal+0x1b40>  // b.none
    1c14:	cmp	w25, #0x4
    1c18:	b.eq	19e0 <ctf_bufopen_internal+0x1888>  // b.none
    1c1c:	b	1d08 <ctf_bufopen_internal+0x1bb0>
    1c20:	cbz	w28, 19fc <ctf_bufopen_internal+0x18a4>
    1c24:	add	x9, x27, #0x8
    1c28:	add	x8, x24, #0x6
    1c2c:	add	x10, x24, #0x8
    1c30:	mov	x11, x9
    1c34:	b	1c5c <ctf_bufopen_internal+0x1b04>
    1c38:	ldr	w15, [x10]
    1c3c:	stp	w13, w12, [x11]
    1c40:	stp	w14, w15, [x11, #-8]
    1c44:	subs	x28, x28, #0x1
    1c48:	add	x8, x8, #0x8
    1c4c:	add	x10, x10, #0x10
    1c50:	add	x11, x11, #0x10
    1c54:	add	x9, x9, #0xc
    1c58:	b.eq	19fc <ctf_bufopen_internal+0x18a4>  // b.none
    1c5c:	cmp	x26, #0x2, lsl #12
    1c60:	b.ge	1c74 <ctf_bufopen_internal+0x1b1c>  // b.tcont
    1c64:	ldrh	w12, [x8]
    1c68:	ldurh	w13, [x8, #-2]
    1c6c:	ldur	w14, [x8, #-6]
    1c70:	b	1c8c <ctf_bufopen_internal+0x1b34>
    1c74:	ldr	w12, [x10, #4]
    1c78:	ldurh	w13, [x10, #-4]
    1c7c:	ldur	w14, [x10, #-8]
    1c80:	mov	w15, #0x1fffffff            	// #536870911
    1c84:	cmp	x26, x15
    1c88:	b.gt	1c38 <ctf_bufopen_internal+0x1ae0>
    1c8c:	stp	w12, w13, [x9, #-4]
    1c90:	stur	w14, [x9, #-8]
    1c94:	b	1c44 <ctf_bufopen_internal+0x1aec>
    1c98:	cbz	w28, 1d08 <ctf_bufopen_internal+0x1bb0>
    1c9c:	cmp	w28, #0x8
    1ca0:	b.cs	1cb4 <ctf_bufopen_internal+0x1b5c>  // b.hs, b.nlast
    1ca4:	mov	x9, x27
    1ca8:	mov	x10, x24
    1cac:	mov	x8, x28
    1cb0:	b	1cf8 <ctf_bufopen_internal+0x1ba0>
    1cb4:	and	x11, x28, #0x3f8
    1cb8:	and	x8, x28, #0x7
    1cbc:	add	x12, x24, #0x8
    1cc0:	add	x9, x27, x11, lsl #2
    1cc4:	add	x10, x24, x11, lsl #1
    1cc8:	add	x13, x27, #0x10
    1ccc:	mov	x14, x11
    1cd0:	ldp	d0, d1, [x12, #-8]
    1cd4:	add	x12, x12, #0x10
    1cd8:	subs	x14, x14, #0x8
    1cdc:	uxtl	v0.4s, v0.4h
    1ce0:	uxtl	v1.4s, v1.4h
    1ce4:	stp	q0, q1, [x13, #-16]
    1ce8:	add	x13, x13, #0x20
    1cec:	b.ne	1cd0 <ctf_bufopen_internal+0x1b78>  // b.any
    1cf0:	cmp	x11, x28
    1cf4:	b.eq	1d08 <ctf_bufopen_internal+0x1bb0>  // b.none
    1cf8:	ldrh	w11, [x10], #2
    1cfc:	subs	x8, x8, #0x1
    1d00:	str	w11, [x9], #4
    1d04:	b.ne	1cf8 <ctf_bufopen_internal+0x1ba0>  // b.any
    1d08:	ldp	x9, x8, [sp, #56]
    1d0c:	cmp	x8, x9
    1d10:	b.ne	1e0c <ctf_bufopen_internal+0x1cb4>  // b.any
    1d14:	ldr	x2, [sp, #64]
    1d18:	mov	x0, x27
    1d1c:	mov	x1, x24
    1d20:	bl	0 <memcpy>
    1d24:	b	19fc <ctf_bufopen_internal+0x18a4>
    1d28:	ldr	x8, [x19, #408]
    1d2c:	ldr	x9, [sp, #88]
    1d30:	sub	x8, x27, x8
    1d34:	ldr	w9, [x9]
    1d38:	cmp	x8, x9
    1d3c:	b.ne	1e2c <ctf_bufopen_internal+0x1cd4>  // b.any
    1d40:	ldr	x0, [sp, #24]
    1d44:	adrp	x9, 0 <ctf_set_ctl_hashes>
    1d48:	mov	w8, #0x2                   	// #2
    1d4c:	add	x9, x9, #0x0
    1d50:	str	w8, [x19, #560]
    1d54:	strb	w8, [x23, #2]
    1d58:	str	x9, [x19]
    1d5c:	bl	0 <free>
    1d60:	mov	w8, #0x7fff                	// #32767
    1d64:	str	w8, [x19, #544]
    1d68:	b	db8 <ctf_bufopen_internal+0xc60>
    1d6c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1d70:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1d74:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1d78:	add	x0, x0, #0x0
    1d7c:	add	x1, x1, #0x0
    1d80:	add	x3, x3, #0x0
    1d84:	mov	w2, #0x428                 	// #1064
    1d88:	bl	0 <__assert_fail>
    1d8c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1d90:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1d94:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1d98:	add	x0, x0, #0x0
    1d9c:	add	x1, x1, #0x0
    1da0:	add	x3, x3, #0x0
    1da4:	mov	w2, #0x456                 	// #1110
    1da8:	bl	0 <__assert_fail>
    1dac:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1db0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1db4:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1db8:	add	x0, x0, #0x0
    1dbc:	add	x1, x1, #0x0
    1dc0:	add	x3, x3, #0x0
    1dc4:	mov	w2, #0x448                 	// #1096
    1dc8:	bl	0 <__assert_fail>
    1dcc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1dd0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1dd4:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1dd8:	add	x0, x0, #0x0
    1ddc:	add	x1, x1, #0x0
    1de0:	add	x3, x3, #0x0
    1de4:	mov	w2, #0x210                 	// #528
    1de8:	bl	0 <__assert_fail>
    1dec:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1df0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1df4:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1df8:	add	x0, x0, #0x0
    1dfc:	add	x1, x1, #0x0
    1e00:	add	x3, x3, #0x0
    1e04:	mov	w2, #0x1d0                 	// #464
    1e08:	bl	0 <__assert_fail>
    1e0c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1e10:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1e14:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1e18:	add	x0, x0, #0x0
    1e1c:	add	x1, x1, #0x0
    1e20:	add	x3, x3, #0x0
    1e24:	mov	w2, #0x25c                 	// #604
    1e28:	bl	0 <__assert_fail>
    1e2c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1e30:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1e34:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1e38:	add	x0, x0, #0x0
    1e3c:	add	x1, x1, #0x0
    1e40:	add	x3, x3, #0x0
    1e44:	mov	w2, #0x265                 	// #613
    1e48:	bl	0 <__assert_fail>

0000000000001e4c <ctf_bufopen>:
    1e4c:	mov	x5, x3
    1e50:	mov	x3, xzr
    1e54:	mov	w4, wzr
    1e58:	b	158 <ctf_bufopen_internal>

0000000000001e5c <ctf_set_base>:
    1e5c:	stp	x29, x30, [sp, #-32]!
    1e60:	stp	x20, x19, [sp, #16]
    1e64:	ldr	x8, [x0, #408]
    1e68:	ldr	x9, [x0, #392]
    1e6c:	str	x2, [x0, #392]
    1e70:	mov	x20, x1
    1e74:	mov	x19, x0
    1e78:	sub	x8, x8, x9
    1e7c:	add	x8, x2, x8
    1e80:	str	x8, [x0, #408]
    1e84:	ldr	w9, [x1, #36]
    1e88:	mov	x29, sp
    1e8c:	add	x10, x8, x9
    1e90:	str	x10, [x0, #464]
    1e94:	ldr	w10, [x1, #40]
    1e98:	sub	w9, w10, w9
    1e9c:	lsr	w9, w9, #3
    1ea0:	str	x9, [x0, #472]
    1ea4:	ldr	w9, [x1, #44]
    1ea8:	add	x8, x8, x9
    1eac:	str	x8, [x0, #336]
    1eb0:	ldr	w8, [x1, #48]
    1eb4:	str	x8, [x0, #344]
    1eb8:	ldr	w1, [x1, #4]
    1ebc:	cbz	w1, 1ecc <ctf_set_base+0x70>
    1ec0:	mov	x0, x19
    1ec4:	bl	0 <ctf_strptr>
    1ec8:	str	x0, [x19, #520]
    1ecc:	ldr	w1, [x20, #8]
    1ed0:	cbz	w1, 1ee0 <ctf_set_base+0x84>
    1ed4:	mov	x0, x19
    1ed8:	bl	0 <ctf_strptr>
    1edc:	str	x0, [x19, #528]
    1ee0:	ldr	w1, [x20, #12]
    1ee4:	cbz	w1, 1f38 <ctf_set_base+0xdc>
    1ee8:	mov	x0, x19
    1eec:	bl	0 <ctf_strptr>
    1ef0:	mov	x1, x0
    1ef4:	str	x0, [x19, #496]
    1ef8:	cbz	x1, 1f08 <ctf_set_base+0xac>
    1efc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1f00:	add	x0, x0, #0x0
    1f04:	bl	0 <ctf_dprintf>
    1f08:	ldr	x1, [x19, #528]
    1f0c:	cbz	x1, 1f44 <ctf_set_base+0xe8>
    1f10:	ldr	x8, [x19, #520]
    1f14:	ldp	x20, x19, [sp, #16]
    1f18:	adrp	x9, 0 <ctf_set_ctl_hashes>
    1f1c:	add	x9, x9, #0x0
    1f20:	cmp	x8, #0x0
    1f24:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1f28:	csel	x2, x9, x8, eq  // eq = none
    1f2c:	add	x0, x0, #0x0
    1f30:	ldp	x29, x30, [sp], #32
    1f34:	b	0 <ctf_dprintf>
    1f38:	ldr	x1, [x19, #496]
    1f3c:	cbnz	x1, 1efc <ctf_set_base+0xa0>
    1f40:	b	1f08 <ctf_set_base+0xac>
    1f44:	ldp	x20, x19, [sp, #16]
    1f48:	ldp	x29, x30, [sp], #32
    1f4c:	ret

0000000000001f50 <ctf_setmodel>:
    1f50:	stp	x29, x30, [sp, #-16]!
    1f54:	cmp	w1, #0x1
    1f58:	mov	x29, sp
    1f5c:	b.eq	1f74 <ctf_setmodel+0x24>  // b.none
    1f60:	cmp	w1, #0x2
    1f64:	b.ne	1f88 <ctf_setmodel+0x38>  // b.any
    1f68:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1f6c:	add	x8, x8, #0x0
    1f70:	b	1f7c <ctf_setmodel+0x2c>
    1f74:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1f78:	add	x8, x8, #0x0
    1f7c:	mov	w1, wzr
    1f80:	str	x8, [x0, #488]
    1f84:	b	1f94 <ctf_setmodel+0x44>
    1f88:	mov	w1, #0x16                  	// #22
    1f8c:	bl	0 <ctf_set_errno>
    1f90:	mov	x1, x0
    1f94:	mov	w0, w1
    1f98:	ldp	x29, x30, [sp], #16
    1f9c:	ret

0000000000001fa0 <ctf_file_close>:
    1fa0:	stp	x29, x30, [sp, #-32]!
    1fa4:	stp	x20, x19, [sp, #16]
    1fa8:	mov	x29, sp
    1fac:	cbz	x0, 1fdc <ctf_file_close+0x3c>
    1fb0:	ldr	w2, [x0, #548]
    1fb4:	mov	x19, x0
    1fb8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1fbc:	add	x0, x0, #0x0
    1fc0:	mov	x1, x19
    1fc4:	bl	0 <ctf_dprintf>
    1fc8:	ldr	w8, [x19, #548]
    1fcc:	cmp	w8, #0x2
    1fd0:	b.cc	1fe8 <ctf_file_close+0x48>  // b.lo, b.ul, b.last
    1fd4:	sub	w8, w8, #0x1
    1fd8:	str	w8, [x19, #548]
    1fdc:	ldp	x20, x19, [sp, #16]
    1fe0:	ldp	x29, x30, [sp], #32
    1fe4:	ret
    1fe8:	ldr	x0, [x19, #504]
    1fec:	bl	0 <free>
    1ff0:	ldr	x0, [x19, #536]
    1ff4:	bl	0 <free>
    1ff8:	ldr	x0, [x19, #512]
    1ffc:	bl	1fa0 <ctf_file_close>
    2000:	ldr	x1, [x19, #584]
    2004:	cbz	x1, 201c <ctf_file_close+0x7c>
    2008:	ldr	x20, [x1, #8]
    200c:	mov	x0, x19
    2010:	bl	0 <ctf_dtd_delete>
    2014:	mov	x1, x20
    2018:	cbnz	x20, 2008 <ctf_file_close+0x68>
    201c:	ldr	x0, [x19, #568]
    2020:	bl	0 <ctf_dynhash_destroy>
    2024:	ldrb	w8, [x19, #552]
    2028:	tbnz	w8, #1, 2058 <ctf_file_close+0xb8>
    202c:	ldr	x0, [x19, #152]
    2030:	bl	0 <ctf_hash_destroy>
    2034:	ldr	x0, [x19, #168]
    2038:	bl	0 <ctf_hash_destroy>
    203c:	ldr	x0, [x19, #184]
    2040:	bl	0 <ctf_hash_destroy>
    2044:	ldr	x0, [x19, #200]
    2048:	bl	0 <ctf_hash_destroy>
    204c:	ldr	x1, [x19, #608]
    2050:	cbnz	x1, 2080 <ctf_file_close+0xe0>
    2054:	b	2094 <ctf_file_close+0xf4>
    2058:	ldr	x0, [x19, #160]
    205c:	bl	0 <ctf_dynhash_destroy>
    2060:	ldr	x0, [x19, #176]
    2064:	bl	0 <ctf_dynhash_destroy>
    2068:	ldr	x0, [x19, #192]
    206c:	bl	0 <ctf_dynhash_destroy>
    2070:	ldr	x0, [x19, #208]
    2074:	bl	0 <ctf_dynhash_destroy>
    2078:	ldr	x1, [x19, #608]
    207c:	cbz	x1, 2094 <ctf_file_close+0xf4>
    2080:	ldr	x20, [x1, #8]
    2084:	mov	x0, x19
    2088:	bl	0 <ctf_dvd_delete>
    208c:	mov	x1, x20
    2090:	cbnz	x20, 2080 <ctf_file_close+0xe0>
    2094:	ldr	x0, [x19, #592]
    2098:	bl	0 <ctf_dynhash_destroy>
    209c:	mov	x0, x19
    20a0:	bl	0 <ctf_str_free_atoms>
    20a4:	ldr	x0, [x19, #704]
    20a8:	bl	0 <free>
    20ac:	ldr	x0, [x19, #24]
    20b0:	adrp	x20, 8b <ctf_simple_open+0x2b>
    20b4:	add	x20, x20, #0x0
    20b8:	cmp	x0, x20
    20bc:	b.eq	20c4 <ctf_file_close+0x124>  // b.none
    20c0:	bl	0 <free>
    20c4:	ldr	x0, [x19, #56]
    20c8:	cmp	x0, x20
    20cc:	b.eq	20d4 <ctf_file_close+0x134>  // b.none
    20d0:	bl	0 <free>
    20d4:	ldr	x0, [x19, #88]
    20d8:	cmp	x0, x20
    20dc:	b.eq	20e8 <ctf_file_close+0x148>  // b.none
    20e0:	bl	0 <free>
    20e4:	b	20f8 <ctf_file_close+0x158>
    20e8:	ldr	x0, [x19, #136]
    20ec:	cbz	x0, 20f8 <ctf_file_close+0x158>
    20f0:	ldr	x1, [x19, #144]
    20f4:	bl	0 <ctf_munmap>
    20f8:	ldr	x0, [x19, #400]
    20fc:	bl	0 <free>
    2100:	ldr	x0, [x19, #128]
    2104:	bl	0 <ctf_dynhash_destroy>
    2108:	ldr	x0, [x19, #648]
    210c:	bl	0 <ctf_dynhash_destroy>
    2110:	ldr	x0, [x19, #656]
    2114:	bl	0 <ctf_dynhash_destroy>
    2118:	ldr	x0, [x19, #664]
    211c:	bl	0 <ctf_dynhash_destroy>
    2120:	ldr	x0, [x19, #672]
    2124:	bl	0 <ctf_dynhash_destroy>
    2128:	ldr	x0, [x19, #696]
    212c:	bl	0 <ctf_dynhash_destroy>
    2130:	ldr	x0, [x19, #424]
    2134:	bl	0 <free>
    2138:	ldr	x0, [x19, #440]
    213c:	bl	0 <free>
    2140:	ldr	x0, [x19, #448]
    2144:	bl	0 <free>
    2148:	ldr	x0, [x19, #8]
    214c:	bl	0 <free>
    2150:	mov	x0, x19
    2154:	ldp	x20, x19, [sp, #16]
    2158:	ldp	x29, x30, [sp], #32
    215c:	b	0 <free>

0000000000002160 <ctf_close>:
    2160:	b	0 <ctf_arc_close>

0000000000002164 <ctf_get_arc>:
    2164:	ldr	x0, [x0, #640]
    2168:	ret

000000000000216c <ctf_getdatasect>:
    216c:	ldur	q0, [x0, #40]
    2170:	ldur	q1, [x0, #24]
    2174:	stp	q1, q0, [x8]
    2178:	ret

000000000000217c <ctf_parent_file>:
    217c:	ldr	x0, [x0, #512]
    2180:	ret

0000000000002184 <ctf_parent_name>:
    2184:	ldr	x0, [x0, #528]
    2188:	ret

000000000000218c <ctf_parent_name_set>:
    218c:	stp	x29, x30, [sp, #-32]!
    2190:	stp	x20, x19, [sp, #16]
    2194:	mov	x19, x0
    2198:	ldr	x0, [x0, #536]
    219c:	mov	x20, x1
    21a0:	mov	x29, sp
    21a4:	cbz	x0, 21ac <ctf_parent_name_set+0x20>
    21a8:	bl	0 <free>
    21ac:	mov	x0, x20
    21b0:	bl	0 <strdup>
    21b4:	str	x0, [x19, #536]
    21b8:	cbz	x0, 21cc <ctf_parent_name_set+0x40>
    21bc:	mov	x8, x0
    21c0:	mov	w0, wzr
    21c4:	str	x8, [x19, #528]
    21c8:	b	21d8 <ctf_parent_name_set+0x4c>
    21cc:	mov	w1, #0xc                   	// #12
    21d0:	mov	x0, x19
    21d4:	bl	0 <ctf_set_errno>
    21d8:	ldp	x20, x19, [sp, #16]
    21dc:	ldp	x29, x30, [sp], #32
    21e0:	ret

00000000000021e4 <ctf_cuname>:
    21e4:	ldr	x0, [x0, #496]
    21e8:	ret

00000000000021ec <ctf_cuname_set>:
    21ec:	stp	x29, x30, [sp, #-32]!
    21f0:	stp	x20, x19, [sp, #16]
    21f4:	mov	x19, x0
    21f8:	ldr	x0, [x0, #504]
    21fc:	mov	x20, x1
    2200:	mov	x29, sp
    2204:	cbz	x0, 220c <ctf_cuname_set+0x20>
    2208:	bl	0 <free>
    220c:	mov	x0, x20
    2210:	bl	0 <strdup>
    2214:	str	x0, [x19, #504]
    2218:	cbz	x0, 222c <ctf_cuname_set+0x40>
    221c:	mov	x8, x0
    2220:	mov	w0, wzr
    2224:	str	x8, [x19, #496]
    2228:	b	2238 <ctf_cuname_set+0x4c>
    222c:	mov	w1, #0xc                   	// #12
    2230:	mov	x0, x19
    2234:	bl	0 <ctf_set_errno>
    2238:	ldp	x20, x19, [sp, #16]
    223c:	ldp	x29, x30, [sp], #32
    2240:	ret

0000000000002244 <ctf_import>:
    2244:	stp	x29, x30, [sp, #-32]!
    2248:	stp	x20, x19, [sp, #16]
    224c:	mov	x19, x0
    2250:	mov	x29, sp
    2254:	cbz	x0, 2288 <ctf_import+0x44>
    2258:	mov	x20, x1
    225c:	cmp	x19, x1
    2260:	b.eq	2288 <ctf_import+0x44>  // b.none
    2264:	cbz	x20, 2298 <ctf_import+0x54>
    2268:	ldr	w8, [x20, #548]
    226c:	cbz	w8, 2288 <ctf_import+0x44>
    2270:	ldr	x8, [x20, #488]
    2274:	ldr	x9, [x19, #488]
    2278:	cmp	x8, x9
    227c:	b.eq	2298 <ctf_import+0x54>  // b.none
    2280:	mov	w1, #0x3f4                 	// #1012
    2284:	b	228c <ctf_import+0x48>
    2288:	mov	w1, #0x16                  	// #22
    228c:	mov	x0, x19
    2290:	bl	0 <ctf_set_errno>
    2294:	b	2318 <ctf_import+0xd4>
    2298:	ldr	x0, [x19, #512]
    229c:	cbz	x0, 22b4 <ctf_import+0x70>
    22a0:	ldr	w8, [x0, #548]
    22a4:	sub	w8, w8, #0x1
    22a8:	str	w8, [x0, #548]
    22ac:	bl	1fa0 <ctf_file_close>
    22b0:	str	xzr, [x19, #512]
    22b4:	cbz	x20, 2310 <ctf_import+0xcc>
    22b8:	ldr	x8, [x19, #528]
    22bc:	cbnz	x8, 22f8 <ctf_import+0xb4>
    22c0:	ldr	x0, [x19, #536]
    22c4:	cbz	x0, 22cc <ctf_import+0x88>
    22c8:	bl	0 <free>
    22cc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    22d0:	add	x0, x0, #0x0
    22d4:	bl	0 <strdup>
    22d8:	str	x0, [x19, #536]
    22dc:	cbz	x0, 22e8 <ctf_import+0xa4>
    22e0:	str	x0, [x19, #528]
    22e4:	b	22f8 <ctf_import+0xb4>
    22e8:	mov	w1, #0xc                   	// #12
    22ec:	mov	x0, x19
    22f0:	bl	0 <ctf_set_errno>
    22f4:	tbnz	w0, #31, 2318 <ctf_import+0xd4>
    22f8:	ldr	w8, [x19, #552]
    22fc:	orr	w8, w8, #0x1
    2300:	str	w8, [x19, #552]
    2304:	ldr	w8, [x20, #548]
    2308:	add	w8, w8, #0x1
    230c:	str	w8, [x20, #548]
    2310:	mov	w0, wzr
    2314:	str	x20, [x19, #512]
    2318:	ldp	x20, x19, [sp, #16]
    231c:	ldp	x29, x30, [sp], #32
    2320:	ret

0000000000002324 <ctf_getmodel>:
    2324:	ldr	x8, [x0, #488]
    2328:	ldr	w0, [x8, #8]
    232c:	ret

0000000000002330 <ctf_setspecific>:
    2330:	str	x1, [x0, #720]
    2334:	ret

0000000000002338 <ctf_getspecific>:
    2338:	ldr	x0, [x0, #720]
    233c:	ret

0000000000002340 <get_kind_v1>:
    2340:	ubfx	w0, w0, #11, #5
    2344:	ret

0000000000002348 <get_root_v1>:
    2348:	ubfx	w0, w0, #10, #1
    234c:	ret

0000000000002350 <get_vlen_v1>:
    2350:	and	w0, w0, #0x3ff
    2354:	ret

0000000000002358 <get_ctt_size_v1>:
    2358:	ldp	w8, w9, [x1, #8]
    235c:	ldrh	w10, [x1, #6]
    2360:	mov	w11, #0xffff                	// #65535
    2364:	mov	w12, #0x8                   	// #8
    2368:	mov	w13, #0x10                  	// #16
    236c:	bfi	x9, x8, #32, #32
    2370:	cmp	w10, w11
    2374:	csel	x0, x9, x10, eq  // eq = none
    2378:	csel	x8, x13, x12, eq  // eq = none
    237c:	cbz	x2, 2384 <get_ctt_size_v1+0x2c>
    2380:	str	x0, [x2]
    2384:	cbz	x3, 238c <get_ctt_size_v1+0x34>
    2388:	str	x8, [x3]
    238c:	ret

0000000000002390 <get_vbytes_v1>:
    2390:	and	w8, w0, #0xffff
    2394:	cmp	w8, #0xe
    2398:	b.hi	23dc <get_vbytes_v1+0x4c>  // b.pmore
    239c:	adrp	x9, 0 <ctf_set_ctl_hashes>
    23a0:	and	x8, x0, #0xffff
    23a4:	add	x9, x9, #0x0
    23a8:	adr	x10, 23bc <get_vbytes_v1+0x2c>
    23ac:	ldrb	w11, [x9, x8]
    23b0:	add	x10, x10, x11, lsl #2
    23b4:	mov	w0, #0x8                   	// #8
    23b8:	br	x10
    23bc:	mov	x0, xzr
    23c0:	ret
    23c4:	mov	w0, #0x4                   	// #4
    23c8:	ret
    23cc:	cmp	x1, #0x2, lsl #12
    23d0:	b.ge	2410 <get_vbytes_v1+0x80>  // b.tcont
    23d4:	lsl	x0, x2, #3
    23d8:	ret
    23dc:	stp	x29, x30, [sp, #-16]!
    23e0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    23e4:	add	x0, x0, #0x0
    23e8:	mov	w1, w8
    23ec:	mov	x29, sp
    23f0:	bl	0 <ctf_dprintf>
    23f4:	mov	w0, #0x3ef                 	// #1007
    23f8:	ldp	x29, x30, [sp], #16
    23fc:	ret
    2400:	and	x8, x2, #0x1
    2404:	add	x8, x8, x2
    2408:	lsl	x0, x8, #1
    240c:	ret
    2410:	lsl	x0, x2, #4
    2414:	ret

0000000000002418 <get_kind_v2>:
    2418:	lsr	w0, w0, #26
    241c:	ret

0000000000002420 <get_root_v2>:
    2420:	ubfx	w0, w0, #25, #1
    2424:	ret

0000000000002428 <get_vlen_v2>:
    2428:	and	w0, w0, #0xffffff
    242c:	ret

0000000000002430 <get_ctt_size_v2>:
    2430:	ldp	w9, w8, [x1, #12]
    2434:	ldr	w10, [x1, #8]
    2438:	mov	w11, #0xc                   	// #12
    243c:	mov	w12, #0x14                  	// #20
    2440:	bfi	x8, x9, #32, #32
    2444:	cmn	w10, #0x1
    2448:	csel	x0, x8, x10, eq  // eq = none
    244c:	csel	x8, x12, x11, eq  // eq = none
    2450:	cbz	x2, 2458 <get_ctt_size_v2+0x28>
    2454:	str	x0, [x2]
    2458:	cbz	x3, 2460 <get_ctt_size_v2+0x30>
    245c:	str	x8, [x3]
    2460:	ret

0000000000002464 <get_vbytes_v2>:
    2464:	and	w8, w0, #0xffff
    2468:	cmp	w8, #0xe
    246c:	b.hi	24b8 <get_vbytes_v2+0x54>  // b.pmore
    2470:	adrp	x9, 0 <ctf_set_ctl_hashes>
    2474:	and	x8, x0, #0xffff
    2478:	add	x9, x9, #0x0
    247c:	adr	x10, 2490 <get_vbytes_v2+0x2c>
    2480:	ldrb	w11, [x9, x8]
    2484:	add	x10, x10, x11, lsl #2
    2488:	mov	w0, #0xc                   	// #12
    248c:	br	x10
    2490:	mov	x0, xzr
    2494:	ret
    2498:	mov	w0, #0x4                   	// #4
    249c:	ret
    24a0:	mov	w8, #0x1fffffff            	// #536870911
    24a4:	cmp	x1, x8
    24a8:	b.gt	24fc <get_vbytes_v2+0x98>
    24ac:	add	x8, x2, x2, lsl #1
    24b0:	lsl	x0, x8, #2
    24b4:	ret
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    24c0:	add	x0, x0, #0x0
    24c4:	mov	w1, w8
    24c8:	mov	x29, sp
    24cc:	bl	0 <ctf_dprintf>
    24d0:	mov	w0, #0x3ef                 	// #1007
    24d4:	ldp	x29, x30, [sp], #16
    24d8:	ret
    24dc:	and	x8, x2, #0x1
    24e0:	add	x8, x8, x2
    24e4:	lsl	x0, x8, #2
    24e8:	ret
    24ec:	lsl	x0, x2, #3
    24f0:	ret
    24f4:	mov	w0, #0x8                   	// #8
    24f8:	ret
    24fc:	lsl	x0, x2, #4
    2500:	ret

ctf-string.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_strraw_explicit>:
   0:	lsr	w8, w1, #31
   4:	cmp	x2, #0x0
   8:	mov	w9, #0xffffffff            	// #-1
   c:	add	x10, x0, w8, uxtw #4
  10:	ccmp	w1, w9, #0x4, ne  // ne = any
  14:	add	x9, x10, #0x150
  18:	csel	x9, x2, x9, gt
  1c:	cmp	w8, #0x1
  20:	b.ne	38 <ctf_strraw_explicit+0x38>  // b.any
  24:	ldr	x8, [x0, #128]
  28:	cbz	x8, 38 <ctf_strraw_explicit+0x38>
  2c:	mov	w1, w1
  30:	mov	x0, x8
  34:	b	0 <ctf_dynhash_lookup>
  38:	tbnz	w1, #31, 64 <ctf_strraw_explicit+0x64>
  3c:	ldr	x10, [x9, #8]
  40:	mov	w8, w1
  44:	cmp	x10, x8
  48:	b.hi	64 <ctf_strraw_explicit+0x64>  // b.pmore
  4c:	ldr	w10, [x0, #384]
  50:	cmp	w10, w1
  54:	b.ls	64 <ctf_strraw_explicit+0x64>  // b.plast
  58:	ldr	x0, [x0, #120]
  5c:	mov	x1, x8
  60:	b	0 <ctf_dynhash_lookup>
  64:	ldr	x8, [x9]
  68:	cbz	x8, 84 <ctf_strraw_explicit+0x84>
  6c:	ldr	x9, [x9, #8]
  70:	and	w10, w1, #0x7fffffff
  74:	add	x8, x8, x10
  78:	cmp	x9, x10
  7c:	csel	x0, x8, xzr, hi  // hi = pmore
  80:	ret
  84:	mov	x0, xzr
  88:	ret

000000000000008c <ctf_strraw>:
  8c:	lsr	w9, w1, #31
  90:	cmp	w9, #0x1
  94:	b.ne	ac <ctf_strraw+0x20>  // b.any
  98:	ldr	x8, [x0, #128]
  9c:	cbz	x8, ac <ctf_strraw+0x20>
  a0:	mov	w1, w1
  a4:	mov	x0, x8
  a8:	b	0 <ctf_dynhash_lookup>
  ac:	tbnz	w1, #31, dc <ctf_strraw+0x50>
  b0:	add	x8, x0, x9, lsl #4
  b4:	ldr	x10, [x8, #344]
  b8:	mov	w8, w1
  bc:	cmp	x10, x8
  c0:	b.hi	dc <ctf_strraw+0x50>  // b.pmore
  c4:	ldr	w10, [x0, #384]
  c8:	cmp	w10, w1
  cc:	b.ls	dc <ctf_strraw+0x50>  // b.plast
  d0:	ldr	x0, [x0, #120]
  d4:	mov	x1, x8
  d8:	b	0 <ctf_dynhash_lookup>
  dc:	add	x8, x0, x9, lsl #4
  e0:	ldr	x9, [x8, #336]
  e4:	cbz	x9, 100 <ctf_strraw+0x74>
  e8:	ldr	x8, [x8, #344]
  ec:	and	w10, w1, #0x7fffffff
  f0:	add	x9, x9, x10
  f4:	cmp	x8, x10
  f8:	csel	x0, x9, xzr, hi  // hi = pmore
  fc:	ret
 100:	mov	x0, xzr
 104:	ret

0000000000000108 <ctf_strptr>:
 108:	stp	x29, x30, [sp, #-16]!
 10c:	lsr	w9, w1, #31
 110:	cmp	w9, #0x1
 114:	mov	x29, sp
 118:	b.ne	134 <ctf_strptr+0x2c>  // b.any
 11c:	ldr	x8, [x0, #128]
 120:	cbz	x8, 134 <ctf_strptr+0x2c>
 124:	mov	w1, w1
 128:	mov	x0, x8
 12c:	bl	0 <ctf_dynhash_lookup>
 130:	b	190 <ctf_strptr+0x88>
 134:	tbnz	w1, #31, 168 <ctf_strptr+0x60>
 138:	add	x8, x0, x9, lsl #4
 13c:	ldr	x10, [x8, #344]
 140:	mov	w8, w1
 144:	cmp	x10, x8
 148:	b.hi	168 <ctf_strptr+0x60>  // b.pmore
 14c:	ldr	w10, [x0, #384]
 150:	cmp	w10, w1
 154:	b.ls	168 <ctf_strptr+0x60>  // b.plast
 158:	ldr	x0, [x0, #120]
 15c:	mov	x1, x8
 160:	bl	0 <ctf_dynhash_lookup>
 164:	b	190 <ctf_strptr+0x88>
 168:	add	x8, x0, x9, lsl #4
 16c:	ldr	x9, [x8, #336]
 170:	cbz	x9, 18c <ctf_strptr+0x84>
 174:	ldr	x8, [x8, #344]
 178:	and	w10, w1, #0x7fffffff
 17c:	add	x9, x9, x10
 180:	cmp	x8, x10
 184:	csel	x0, x9, xzr, hi  // hi = pmore
 188:	b	190 <ctf_strptr+0x88>
 18c:	mov	x0, xzr
 190:	adrp	x8, 0 <ctf_strraw_explicit>
 194:	add	x8, x8, #0x0
 198:	cmp	x0, #0x0
 19c:	csel	x0, x8, x0, eq  // eq = none
 1a0:	ldp	x29, x30, [sp], #16
 1a4:	ret

00000000000001a8 <ctf_str_create_atoms>:
 1a8:	stp	x29, x30, [sp, #-32]!
 1ac:	stp	x20, x19, [sp, #16]
 1b0:	mov	x19, x0
 1b4:	adrp	x0, 0 <ctf_hash_string>
 1b8:	adrp	x1, 0 <ctf_hash_eq_string>
 1bc:	adrp	x2, 0 <free>
 1c0:	adrp	x3, 0 <ctf_strraw_explicit>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x2, x2, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	x29, sp
 1d8:	bl	0 <ctf_dynhash_create>
 1dc:	str	x0, [x19, #368]
 1e0:	cbz	x0, 260 <ctf_str_create_atoms+0xb8>
 1e4:	ldr	x8, [x19, #120]
 1e8:	cbnz	x8, 210 <ctf_str_create_atoms+0x68>
 1ec:	adrp	x0, 0 <ctf_hash_integer>
 1f0:	adrp	x1, 0 <ctf_hash_eq_integer>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	mov	x2, xzr
 200:	mov	x3, xzr
 204:	bl	0 <ctf_dynhash_create>
 208:	str	x0, [x19, #120]
 20c:	cbz	x0, 254 <ctf_str_create_atoms+0xac>
 210:	bl	0 <__errno_location>
 214:	adrp	x1, 0 <ctf_strraw_explicit>
 218:	mov	x20, x0
 21c:	str	wzr, [x0]
 220:	add	x1, x1, #0x0
 224:	mov	w3, #0x1                   	// #1
 228:	mov	x0, x19
 22c:	mov	w2, wzr
 230:	mov	x4, xzr
 234:	bl	324 <ctf_str_add_ref_internal>
 238:	ldr	w8, [x20]
 23c:	mov	w0, wzr
 240:	cmp	w8, #0xc
 244:	b.ne	264 <ctf_str_create_atoms+0xbc>  // b.any
 248:	ldr	x0, [x19, #120]
 24c:	bl	0 <ctf_dynhash_destroy>
 250:	str	xzr, [x19, #120]
 254:	ldr	x0, [x19, #368]
 258:	bl	0 <ctf_dynhash_destroy>
 25c:	str	xzr, [x19, #368]
 260:	mov	w0, #0xfffffff4            	// #-12
 264:	ldp	x20, x19, [sp, #16]
 268:	ldp	x29, x30, [sp], #32
 26c:	ret

0000000000000270 <ctf_str_free_atom>:
 270:	stp	x29, x30, [sp, #-48]!
 274:	stp	x22, x21, [sp, #16]
 278:	stp	x20, x19, [sp, #32]
 27c:	ldr	x20, [x0, #16]
 280:	mov	x19, x0
 284:	mov	x29, sp
 288:	cbz	x20, 2b0 <ctf_str_free_atom+0x40>
 28c:	add	x21, x19, #0x8
 290:	ldr	x22, [x20, #8]
 294:	mov	x0, x21
 298:	mov	x1, x20
 29c:	bl	0 <ctf_list_delete>
 2a0:	mov	x0, x20
 2a4:	bl	0 <free>
 2a8:	mov	x20, x22
 2ac:	cbnz	x22, 290 <ctf_str_free_atom+0x20>
 2b0:	mov	x0, x19
 2b4:	ldp	x20, x19, [sp, #32]
 2b8:	ldp	x22, x21, [sp, #16]
 2bc:	ldp	x29, x30, [sp], #48
 2c0:	b	0 <free>

00000000000002c4 <ctf_str_add>:
 2c4:	stp	x29, x30, [sp, #-16]!
 2c8:	mov	x29, sp
 2cc:	cbz	x1, 2f0 <ctf_str_add+0x2c>
 2d0:	mov	w3, #0x1                   	// #1
 2d4:	mov	w2, wzr
 2d8:	mov	x4, xzr
 2dc:	bl	324 <ctf_str_add_ref_internal>
 2e0:	cbz	x0, 2e8 <ctf_str_add+0x24>
 2e4:	ldr	w0, [x0, #24]
 2e8:	ldp	x29, x30, [sp], #16
 2ec:	ret
 2f0:	mov	w0, wzr
 2f4:	ldp	x29, x30, [sp], #16
 2f8:	ret

00000000000002fc <ctf_str_free_atoms>:
 2fc:	stp	x29, x30, [sp, #-32]!
 300:	str	x19, [sp, #16]
 304:	mov	x19, x0
 308:	ldr	x0, [x0, #120]
 30c:	mov	x29, sp
 310:	bl	0 <ctf_dynhash_destroy>
 314:	ldr	x0, [x19, #368]
 318:	ldr	x19, [sp, #16]
 31c:	ldp	x29, x30, [sp], #32
 320:	b	0 <ctf_dynhash_destroy>

0000000000000324 <ctf_str_add_ref_internal>:
 324:	stp	x29, x30, [sp, #-80]!
 328:	stp	x24, x23, [sp, #32]
 32c:	stp	x22, x21, [sp, #48]
 330:	stp	x20, x19, [sp, #64]
 334:	mov	x20, x0
 338:	ldr	x0, [x0, #368]
 33c:	str	x25, [sp, #16]
 340:	mov	x29, sp
 344:	mov	x25, x4
 348:	mov	w23, w3
 34c:	mov	w22, w2
 350:	mov	x24, x1
 354:	bl	0 <ctf_dynhash_lookup>
 358:	mov	x19, x0
 35c:	cbz	w22, 37c <ctf_str_add_ref_internal+0x58>
 360:	mov	w0, #0x18                  	// #24
 364:	bl	0 <malloc>
 368:	cbz	x0, 454 <ctf_str_add_ref_internal+0x130>
 36c:	mov	x21, x0
 370:	str	x25, [x0, #16]
 374:	cbnz	x19, 384 <ctf_str_add_ref_internal+0x60>
 378:	b	3a4 <ctf_str_add_ref_internal+0x80>
 37c:	mov	x21, xzr
 380:	cbz	x19, 3a4 <ctf_str_add_ref_internal+0x80>
 384:	cbz	w22, 458 <ctf_str_add_ref_internal+0x134>
 388:	add	x0, x19, #0x8
 38c:	mov	x1, x21
 390:	bl	0 <ctf_list_append>
 394:	ldr	x8, [x20, #376]
 398:	add	x8, x8, #0x1
 39c:	str	x8, [x20, #376]
 3a0:	b	458 <ctf_str_add_ref_internal+0x134>
 3a4:	mov	w0, #0x28                  	// #40
 3a8:	bl	0 <malloc>
 3ac:	mov	x19, x0
 3b0:	cbz	x0, 428 <ctf_str_add_ref_internal+0x104>
 3b4:	movi	v0.2d, #0x0
 3b8:	mov	x0, x24
 3bc:	str	xzr, [x19, #32]
 3c0:	stp	q0, q0, [x19]
 3c4:	bl	0 <strdup>
 3c8:	mov	x24, x0
 3cc:	cbz	x0, 43c <ctf_str_add_ref_internal+0x118>
 3d0:	ldr	x0, [x20, #368]
 3d4:	mov	x1, x24
 3d8:	mov	x2, x19
 3dc:	bl	0 <ctf_dynhash_insert>
 3e0:	tbnz	w0, #31, 430 <ctf_str_add_ref_internal+0x10c>
 3e4:	str	x24, [x19]
 3e8:	ldr	x8, [x20, #624]
 3ec:	str	x8, [x19, #32]
 3f0:	cbz	w23, 384 <ctf_str_add_ref_internal+0x60>
 3f4:	ldr	w1, [x20, #384]
 3f8:	mov	x2, x24
 3fc:	str	w1, [x19, #24]
 400:	ldr	x0, [x20, #120]
 404:	bl	0 <ctf_dynhash_insert>
 408:	tbnz	w0, #31, 430 <ctf_str_add_ref_internal+0x10c>
 40c:	ldr	x0, [x19]
 410:	bl	0 <strlen>
 414:	ldr	w8, [x20, #384]
 418:	add	w8, w0, w8
 41c:	add	w8, w8, #0x1
 420:	str	w8, [x20, #384]
 424:	b	384 <ctf_str_add_ref_internal+0x60>
 428:	mov	x24, xzr
 42c:	b	43c <ctf_str_add_ref_internal+0x118>
 430:	ldr	x0, [x20, #368]
 434:	mov	x1, x24
 438:	bl	0 <ctf_dynhash_remove>
 43c:	mov	x0, x19
 440:	bl	0 <free>
 444:	mov	x0, x21
 448:	bl	0 <free>
 44c:	mov	x0, x24
 450:	bl	0 <free>
 454:	mov	x19, xzr
 458:	mov	x0, x19
 45c:	ldp	x20, x19, [sp, #64]
 460:	ldp	x22, x21, [sp, #48]
 464:	ldp	x24, x23, [sp, #32]
 468:	ldr	x25, [sp, #16]
 46c:	ldp	x29, x30, [sp], #80
 470:	ret

0000000000000474 <ctf_str_add_ref>:
 474:	stp	x29, x30, [sp, #-16]!
 478:	mov	x29, sp
 47c:	cbz	x1, 4a0 <ctf_str_add_ref+0x2c>
 480:	mov	x4, x2
 484:	mov	w2, #0x1                   	// #1
 488:	mov	w3, #0x1                   	// #1
 48c:	bl	324 <ctf_str_add_ref_internal>
 490:	cbz	x0, 498 <ctf_str_add_ref+0x24>
 494:	ldr	w0, [x0, #24]
 498:	ldp	x29, x30, [sp], #16
 49c:	ret
 4a0:	mov	w0, wzr
 4a4:	ldp	x29, x30, [sp], #16
 4a8:	ret

00000000000004ac <ctf_str_add_external>:
 4ac:	stp	x29, x30, [sp, #-32]!
 4b0:	str	x19, [sp, #16]
 4b4:	mov	x29, sp
 4b8:	cbz	x1, 4e4 <ctf_str_add_external+0x38>
 4bc:	mov	w19, w2
 4c0:	mov	w2, wzr
 4c4:	mov	w3, wzr
 4c8:	mov	x4, xzr
 4cc:	bl	324 <ctf_str_add_ref_internal>
 4d0:	cbz	x0, 4e8 <ctf_str_add_external+0x3c>
 4d4:	orr	w8, w19, #0x80000000
 4d8:	str	w8, [x0, #28]
 4dc:	mov	w0, #0x1                   	// #1
 4e0:	b	4e8 <ctf_str_add_external+0x3c>
 4e4:	mov	w0, wzr
 4e8:	ldr	x19, [sp, #16]
 4ec:	ldp	x29, x30, [sp], #32
 4f0:	ret

00000000000004f4 <ctf_str_remove_ref>:
 4f4:	stp	x29, x30, [sp, #-48]!
 4f8:	stp	x22, x21, [sp, #16]
 4fc:	stp	x20, x19, [sp, #32]
 500:	ldr	x0, [x0, #368]
 504:	mov	x29, sp
 508:	mov	x19, x2
 50c:	bl	0 <ctf_dynhash_lookup>
 510:	cbz	x0, 550 <ctf_str_remove_ref+0x5c>
 514:	ldr	x21, [x0, #16]
 518:	cbz	x21, 550 <ctf_str_remove_ref+0x5c>
 51c:	add	x20, x0, #0x8
 520:	b	52c <ctf_str_remove_ref+0x38>
 524:	mov	x21, x22
 528:	cbz	x22, 550 <ctf_str_remove_ref+0x5c>
 52c:	ldp	x22, x8, [x21, #8]
 530:	cmp	x8, x19
 534:	b.ne	524 <ctf_str_remove_ref+0x30>  // b.any
 538:	mov	x0, x20
 53c:	mov	x1, x21
 540:	bl	0 <ctf_list_delete>
 544:	mov	x0, x21
 548:	bl	0 <free>
 54c:	b	524 <ctf_str_remove_ref+0x30>
 550:	ldp	x20, x19, [sp, #32]
 554:	ldp	x22, x21, [sp, #16]
 558:	ldp	x29, x30, [sp], #48
 55c:	ret

0000000000000560 <ctf_str_rollback>:
 560:	sub	sp, sp, #0x20
 564:	stp	x29, x30, [sp, #16]
 568:	stp	x1, x2, [sp]
 56c:	ldr	x0, [x0, #368]
 570:	adrp	x1, 0 <ctf_strraw_explicit>
 574:	add	x1, x1, #0x0
 578:	mov	x2, sp
 57c:	add	x29, sp, #0x10
 580:	bl	0 <ctf_dynhash_iter_remove>
 584:	ldp	x29, x30, [sp, #16]
 588:	add	sp, sp, #0x20
 58c:	ret

0000000000000590 <ctf_str_rollback_atom>:
 590:	ldr	x8, [x1, #32]
 594:	ldr	x9, [x2, #8]
 598:	cmp	x8, x9
 59c:	cset	w0, hi  // hi = pmore
 5a0:	ret

00000000000005a4 <ctf_str_purge_refs>:
 5a4:	stp	x29, x30, [sp, #-32]!
 5a8:	ldr	x8, [x0, #376]
 5ac:	str	x19, [sp, #16]
 5b0:	mov	x19, x0
 5b4:	mov	x29, sp
 5b8:	cbz	x8, 5d0 <ctf_str_purge_refs+0x2c>
 5bc:	ldr	x0, [x19, #368]
 5c0:	adrp	x1, 0 <ctf_strraw_explicit>
 5c4:	add	x1, x1, #0x0
 5c8:	mov	x2, xzr
 5cc:	bl	0 <ctf_dynhash_iter>
 5d0:	str	xzr, [x19, #376]
 5d4:	ldr	x19, [sp, #16]
 5d8:	ldp	x29, x30, [sp], #32
 5dc:	ret

00000000000005e0 <ctf_str_purge_one_atom_refs>:
 5e0:	stp	x29, x30, [sp, #-48]!
 5e4:	stp	x20, x19, [sp, #32]
 5e8:	ldr	x19, [x1, #16]
 5ec:	str	x21, [sp, #16]
 5f0:	mov	x29, sp
 5f4:	cbz	x19, 61c <ctf_str_purge_one_atom_refs+0x3c>
 5f8:	add	x20, x1, #0x8
 5fc:	ldr	x21, [x19, #8]
 600:	mov	x0, x20
 604:	mov	x1, x19
 608:	bl	0 <ctf_list_delete>
 60c:	mov	x0, x19
 610:	bl	0 <free>
 614:	mov	x19, x21
 618:	cbnz	x21, 5fc <ctf_str_purge_one_atom_refs+0x1c>
 61c:	ldp	x20, x19, [sp, #32]
 620:	ldr	x21, [sp, #16]
 624:	ldp	x29, x30, [sp], #48
 628:	ret

000000000000062c <ctf_str_write_strtab>:
 62c:	sub	sp, sp, #0x80
 630:	stp	x29, x30, [sp, #64]
 634:	add	x29, sp, #0x40
 638:	movi	v0.2d, #0x0
 63c:	sub	x8, x29, #0x10
 640:	stp	x22, x21, [sp, #96]
 644:	stp	x20, x19, [sp, #112]
 648:	stp	xzr, xzr, [x29, #-16]
 64c:	stp	q0, q0, [sp, #16]
 650:	str	x8, [sp, #8]
 654:	mov	x19, x0
 658:	ldr	x0, [x0, #368]
 65c:	adrp	x1, 0 <ctf_strraw_explicit>
 660:	add	x1, x1, #0x0
 664:	str	x23, [sp, #80]
 668:	bl	0 <ctf_dynhash_lookup>
 66c:	cbz	x0, 7ec <ctf_str_write_strtab+0x1c0>
 670:	str	x0, [sp, #40]
 674:	mov	x21, x0
 678:	ldr	x0, [x19, #368]
 67c:	adrp	x1, 0 <ctf_strraw_explicit>
 680:	add	x1, x1, #0x0
 684:	add	x2, sp, #0x8
 688:	bl	0 <ctf_dynhash_iter>
 68c:	ldur	x8, [x29, #-8]
 690:	adrp	x0, 0 <ctf_strraw_explicit>
 694:	add	x0, x0, #0x0
 698:	add	x1, x8, #0x1
 69c:	stur	x1, [x29, #-8]
 6a0:	bl	0 <ctf_dprintf>
 6a4:	ldr	x0, [sp, #16]
 6a8:	mov	w1, #0x8                   	// #8
 6ac:	bl	0 <calloc>
 6b0:	cbz	x0, 850 <ctf_str_write_strtab+0x224>
 6b4:	mov	x22, x0
 6b8:	mov	w8, #0x1                   	// #1
 6bc:	str	x21, [x22], #8
 6c0:	stp	x0, x8, [sp, #24]
 6c4:	mov	x20, x0
 6c8:	ldr	x0, [x19, #368]
 6cc:	adrp	x1, 0 <ctf_strraw_explicit>
 6d0:	add	x1, x1, #0x0
 6d4:	add	x2, sp, #0x8
 6d8:	bl	0 <ctf_dynhash_iter>
 6dc:	ldr	x8, [sp, #16]
 6e0:	adrp	x3, 0 <ctf_strraw_explicit>
 6e4:	add	x3, x3, #0x0
 6e8:	mov	w2, #0x8                   	// #8
 6ec:	sub	x1, x8, #0x1
 6f0:	mov	x0, x22
 6f4:	bl	0 <qsort>
 6f8:	ldur	x0, [x29, #-8]
 6fc:	bl	0 <malloc>
 700:	stur	x0, [x29, #-16]
 704:	cbz	x0, 81c <ctf_str_write_strtab+0x1f0>
 708:	ldr	x8, [x19, #128]
 70c:	cbnz	x8, 734 <ctf_str_write_strtab+0x108>
 710:	adrp	x0, 0 <ctf_hash_integer>
 714:	adrp	x1, 0 <ctf_hash_eq_integer>
 718:	add	x0, x0, #0x0
 71c:	add	x1, x1, #0x0
 720:	mov	x2, xzr
 724:	mov	x3, xzr
 728:	bl	0 <ctf_dynhash_create>
 72c:	str	x0, [x19, #128]
 730:	cbz	x0, 810 <ctf_str_write_strtab+0x1e4>
 734:	ldr	x8, [sp, #16]
 738:	cbz	x8, 828 <ctf_str_write_strtab+0x1fc>
 73c:	mov	w23, wzr
 740:	mov	x21, xzr
 744:	mov	w22, wzr
 748:	b	784 <ctf_str_write_strtab+0x158>
 74c:	str	w22, [x8, #24]
 750:	ldur	x9, [x29, #-16]
 754:	ldr	x1, [x8]
 758:	add	x0, x9, w22, uxtw
 75c:	bl	0 <strcpy>
 760:	ldr	x8, [x20, x21, lsl #3]
 764:	ldr	x0, [x8]
 768:	bl	0 <strlen>
 76c:	add	w8, w22, w0
 770:	add	w22, w8, #0x1
 774:	ldr	x8, [sp, #16]
 778:	add	x21, x21, #0x1
 77c:	cmp	x21, x8
 780:	b.cs	800 <ctf_str_write_strtab+0x1d4>  // b.hs, b.nlast
 784:	ldr	x8, [x20, x21, lsl #3]
 788:	ldr	w10, [x8, #28]
 78c:	ldr	x9, [x8, #16]
 790:	cbz	w10, 7d4 <ctf_str_write_strtab+0x1a8>
 794:	cbz	x9, 7ac <ctf_str_write_strtab+0x180>
 798:	ldr	x11, [x9, #16]
 79c:	str	w10, [x11]
 7a0:	ldr	x9, [x9, #8]
 7a4:	cbnz	x9, 798 <ctf_str_write_strtab+0x16c>
 7a8:	ldr	w10, [x8, #28]
 7ac:	ldr	x0, [x19, #128]
 7b0:	ldr	x2, [x8]
 7b4:	mov	w1, w10
 7b8:	bl	0 <ctf_dynhash_insert>
 7bc:	tbnz	w0, #31, 810 <ctf_str_write_strtab+0x1e4>
 7c0:	ldr	x8, [x20, x21, lsl #3]
 7c4:	mov	w23, #0x1                   	// #1
 7c8:	ldr	w9, [x8, #28]
 7cc:	str	w9, [x8, #24]
 7d0:	b	774 <ctf_str_write_strtab+0x148>
 7d4:	cbz	x9, 74c <ctf_str_write_strtab+0x120>
 7d8:	ldr	x10, [x9, #16]
 7dc:	str	w22, [x10]
 7e0:	ldr	x9, [x9, #8]
 7e4:	cbnz	x9, 7d8 <ctf_str_write_strtab+0x1ac>
 7e8:	b	74c <ctf_str_write_strtab+0x120>
 7ec:	adrp	x0, 0 <ctf_strraw_explicit>
 7f0:	add	x0, x0, #0x0
 7f4:	bl	0 <ctf_dprintf>
 7f8:	stur	xzr, [x29, #-16]
 7fc:	b	850 <ctf_str_write_strtab+0x224>
 800:	mov	x0, x20
 804:	bl	0 <free>
 808:	cbnz	w23, 83c <ctf_str_write_strtab+0x210>
 80c:	b	830 <ctf_str_write_strtab+0x204>
 810:	ldur	x0, [x29, #-16]
 814:	bl	0 <free>
 818:	stur	xzr, [x29, #-16]
 81c:	mov	x0, x20
 820:	bl	0 <free>
 824:	b	850 <ctf_str_write_strtab+0x224>
 828:	mov	x0, x20
 82c:	bl	0 <free>
 830:	ldr	x0, [x19, #128]
 834:	bl	0 <ctf_dynhash_destroy>
 838:	str	xzr, [x19, #128]
 83c:	ldr	x0, [x19, #120]
 840:	bl	0 <ctf_dynhash_empty>
 844:	ldur	w8, [x29, #-8]
 848:	add	w8, w8, #0x1
 84c:	str	w8, [x19, #384]
 850:	ldp	x0, x1, [x29, #-16]
 854:	ldp	x20, x19, [sp, #112]
 858:	ldp	x22, x21, [sp, #96]
 85c:	ldr	x23, [sp, #80]
 860:	ldp	x29, x30, [sp, #64]
 864:	add	sp, sp, #0x80
 868:	ret

000000000000086c <ctf_str_count_strtab>:
 86c:	stp	x29, x30, [sp, #-32]!
 870:	stp	x20, x19, [sp, #16]
 874:	ldr	x8, [x2, #32]
 878:	mov	x19, x2
 87c:	mov	x29, sp
 880:	cmp	x8, x1
 884:	b.eq	8bc <ctf_str_count_strtab+0x50>  // b.none
 888:	add	x0, x1, #0x8
 88c:	mov	x20, x1
 890:	bl	0 <ctf_list_empty_p>
 894:	cbnz	w0, 8c8 <ctf_str_count_strtab+0x5c>
 898:	ldr	w8, [x20, #28]
 89c:	cbnz	w8, 8bc <ctf_str_count_strtab+0x50>
 8a0:	ldr	x0, [x20]
 8a4:	bl	0 <strlen>
 8a8:	ldr	x8, [x19]
 8ac:	ldr	x9, [x8, #8]
 8b0:	add	x9, x0, x9
 8b4:	add	x9, x9, #0x1
 8b8:	str	x9, [x8, #8]
 8bc:	ldr	x8, [x19, #8]
 8c0:	add	x8, x8, #0x1
 8c4:	str	x8, [x19, #8]
 8c8:	ldp	x20, x19, [sp, #16]
 8cc:	ldp	x29, x30, [sp], #32
 8d0:	ret

00000000000008d4 <ctf_str_populate_sorttab>:
 8d4:	stp	x29, x30, [sp, #-32]!
 8d8:	stp	x20, x19, [sp, #16]
 8dc:	ldr	x8, [x2, #32]
 8e0:	mov	x29, sp
 8e4:	cmp	x8, x1
 8e8:	b.eq	910 <ctf_str_populate_sorttab+0x3c>  // b.none
 8ec:	add	x0, x1, #0x8
 8f0:	mov	x19, x2
 8f4:	mov	x20, x1
 8f8:	bl	0 <ctf_list_empty_p>
 8fc:	cbnz	w0, 910 <ctf_str_populate_sorttab+0x3c>
 900:	ldp	x9, x8, [x19, #16]
 904:	add	x10, x8, #0x1
 908:	str	x10, [x19, #24]
 90c:	str	x20, [x9, x8, lsl #3]
 910:	ldp	x20, x19, [sp, #16]
 914:	ldp	x29, x30, [sp], #32
 918:	ret

000000000000091c <ctf_str_sort_strtab>:
 91c:	ldr	x8, [x0]
 920:	ldr	x9, [x1]
 924:	ldr	x0, [x8]
 928:	ldr	x1, [x9]
 92c:	b	0 <strcmp>

ctf-subr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_mmap>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	w4, w2
   8:	mov	x5, x1
   c:	mov	x1, x0
  10:	mov	w2, #0x1                   	// #1
  14:	mov	w3, #0x2                   	// #2
  18:	mov	x0, xzr
  1c:	mov	x29, sp
  20:	bl	0 <mmap>
  24:	cmn	x0, #0x1
  28:	csel	x0, xzr, x0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret

0000000000000034 <ctf_munmap>:
  34:	b	0 <munmap>

0000000000000038 <ctf_pread>:
  38:	stp	x29, x30, [sp, #-64]!
  3c:	stp	x24, x23, [sp, #16]
  40:	stp	x22, x21, [sp, #32]
  44:	stp	x20, x19, [sp, #48]
  48:	mov	x20, x3
  4c:	mov	x21, x2
  50:	mov	x22, x1
  54:	mov	w23, w0
  58:	mov	x19, xzr
  5c:	mov	x29, sp
  60:	cmp	x21, #0x1
  64:	b.ge	7c <ctf_pread+0x44>  // b.tcont
  68:	b	d4 <ctf_pread+0x9c>
  6c:	cmp	w8, #0x4
  70:	b.ne	b0 <ctf_pread+0x78>  // b.any
  74:	cmp	x21, #0x1
  78:	b.lt	d4 <ctf_pread+0x9c>  // b.tstop
  7c:	bl	0 <__errno_location>
  80:	mov	x24, x0
  84:	str	wzr, [x0]
  88:	mov	w0, w23
  8c:	mov	x1, x22
  90:	mov	x2, x21
  94:	mov	x3, x20
  98:	bl	0 <pread>
  9c:	ldr	w8, [x24]
  a0:	tbz	x0, #63, 6c <ctf_pread+0x34>
  a4:	cmp	w8, #0x4
  a8:	b.eq	6c <ctf_pread+0x34>  // b.none
  ac:	b	d0 <ctf_pread+0x98>
  b0:	add	x19, x0, x19
  b4:	cbz	x0, d4 <ctf_pread+0x9c>
  b8:	sub	x21, x21, x0
  bc:	add	x20, x0, x20
  c0:	add	x22, x22, x0
  c4:	cmp	x21, #0x1
  c8:	b.ge	7c <ctf_pread+0x44>  // b.tcont
  cc:	b	d4 <ctf_pread+0x9c>
  d0:	mov	x19, x0
  d4:	mov	x0, x19
  d8:	ldp	x20, x19, [sp, #48]
  dc:	ldp	x22, x21, [sp, #32]
  e0:	ldp	x24, x23, [sp, #16]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret

00000000000000ec <ctf_strerror>:
  ec:	b	0 <strerror>

00000000000000f0 <ctf_version>:
  f0:	stp	x29, x30, [sp, #-32]!
  f4:	str	x19, [sp, #16]
  f8:	mov	x29, sp
  fc:	tbnz	w0, #31, 118 <ctf_version+0x28>
 100:	cmp	w0, #0x4
 104:	b.eq	124 <ctf_version+0x34>  // b.none
 108:	cbnz	w0, 144 <ctf_version+0x54>
 10c:	adrp	x8, 0 <ctf_mmap>
 110:	ldr	w19, [x8]
 114:	b	154 <ctf_version+0x64>
 118:	bl	0 <__errno_location>
 11c:	mov	w8, #0x16                  	// #22
 120:	b	14c <ctf_version+0x5c>
 124:	adrp	x0, 0 <ctf_mmap>
 128:	add	x0, x0, #0x0
 12c:	mov	w1, #0x4                   	// #4
 130:	mov	w19, #0x4                   	// #4
 134:	bl	164 <ctf_dprintf>
 138:	adrp	x8, 0 <ctf_mmap>
 13c:	str	w19, [x8]
 140:	b	154 <ctf_version+0x64>
 144:	bl	0 <__errno_location>
 148:	mov	w8, #0x5f                  	// #95
 14c:	str	w8, [x0]
 150:	mov	w19, #0xffffffff            	// #-1
 154:	mov	w0, w19
 158:	ldr	x19, [sp, #16]
 15c:	ldp	x29, x30, [sp], #32
 160:	ret

0000000000000164 <ctf_dprintf>:
 164:	sub	sp, sp, #0x130
 168:	adrp	x8, 0 <ctf_mmap>
 16c:	ldr	w8, [x8]
 170:	stp	x29, x30, [sp, #256]
 174:	add	x29, sp, #0x100
 178:	str	x28, [sp, #272]
 17c:	stp	x20, x19, [sp, #288]
 180:	stp	x1, x2, [x29, #-120]
 184:	stp	x3, x4, [x29, #-104]
 188:	stp	x5, x6, [x29, #-88]
 18c:	stur	x7, [x29, #-72]
 190:	stp	q0, q1, [sp]
 194:	stp	q2, q3, [sp, #32]
 198:	stp	q4, q5, [sp, #64]
 19c:	stp	q6, q7, [sp, #96]
 1a0:	cbnz	w8, 1b8 <ctf_dprintf+0x54>
 1a4:	ldp	x20, x19, [sp, #288]
 1a8:	ldr	x28, [sp, #272]
 1ac:	ldp	x29, x30, [sp, #256]
 1b0:	add	sp, sp, #0x130
 1b4:	ret
 1b8:	adrp	x12, 0 <stdout>
 1bc:	mov	x19, x0
 1c0:	ldr	x0, [x12]
 1c4:	mov	x8, #0xffffffffffffffc8    	// #-56
 1c8:	mov	x10, sp
 1cc:	movk	x8, #0xff80, lsl #32
 1d0:	sub	x11, x29, #0x78
 1d4:	add	x10, x10, #0x80
 1d8:	add	x9, x29, #0x30
 1dc:	stp	x10, x8, [x29, #-16]
 1e0:	add	x8, x11, #0x38
 1e4:	stp	x9, x8, [x29, #-32]
 1e8:	bl	0 <fflush>
 1ec:	adrp	x20, 0 <stderr>
 1f0:	ldr	x3, [x20]
 1f4:	adrp	x0, 0 <ctf_mmap>
 1f8:	add	x0, x0, #0x0
 1fc:	mov	w1, #0xe                   	// #14
 200:	mov	w2, #0x1                   	// #1
 204:	bl	0 <fwrite>
 208:	ldp	q0, q1, [x29, #-32]
 20c:	ldr	x0, [x20]
 210:	sub	x2, x29, #0x40
 214:	mov	x1, x19
 218:	stp	q0, q1, [x29, #-64]
 21c:	bl	0 <vfprintf>
 220:	b	1a4 <ctf_dprintf+0x40>

0000000000000224 <libctf_init_debug>:
 224:	stp	x29, x30, [sp, #-32]!
 228:	str	x19, [sp, #16]
 22c:	adrp	x19, 0 <ctf_mmap>
 230:	ldrb	w8, [x19]
 234:	mov	x29, sp
 238:	tbnz	w8, #0, 260 <libctf_init_debug+0x3c>
 23c:	adrp	x0, 0 <ctf_mmap>
 240:	add	x0, x0, #0x0
 244:	bl	0 <getenv>
 248:	cmp	x0, #0x0
 24c:	adrp	x8, 0 <ctf_mmap>
 250:	mov	w9, #0x1                   	// #1
 254:	cset	w10, ne  // ne = any
 258:	str	w10, [x8]
 25c:	strb	w9, [x19]
 260:	ldr	x19, [sp, #16]
 264:	ldp	x29, x30, [sp], #32
 268:	ret

000000000000026c <ctf_setdebug>:
 26c:	stp	x29, x30, [sp, #-48]!
 270:	str	x21, [sp, #16]
 274:	stp	x20, x19, [sp, #32]
 278:	adrp	x21, 0 <ctf_mmap>
 27c:	ldrb	w8, [x21]
 280:	mov	w19, w0
 284:	adrp	x20, 0 <ctf_mmap>
 288:	mov	x29, sp
 28c:	tbnz	w8, #0, 2b0 <ctf_setdebug+0x44>
 290:	adrp	x0, 0 <ctf_mmap>
 294:	add	x0, x0, #0x0
 298:	bl	0 <getenv>
 29c:	cmp	x0, #0x0
 2a0:	mov	w8, #0x1                   	// #1
 2a4:	cset	w9, ne  // ne = any
 2a8:	str	w9, [x20]
 2ac:	strb	w8, [x21]
 2b0:	str	w19, [x20]
 2b4:	mov	w1, w19
 2b8:	ldp	x20, x19, [sp, #32]
 2bc:	ldr	x21, [sp, #16]
 2c0:	adrp	x0, 0 <ctf_mmap>
 2c4:	add	x0, x0, #0x0
 2c8:	ldp	x29, x30, [sp], #48
 2cc:	b	164 <ctf_dprintf>

00000000000002d0 <ctf_getdebug>:
 2d0:	adrp	x8, 0 <ctf_mmap>
 2d4:	ldr	w0, [x8]
 2d8:	ret

ctf-types.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_type_isparent>:
       0:	ldr	w8, [x0, #544]
       4:	cmp	x8, x1
       8:	cset	w0, cs  // cs = hs, nlast
       c:	ret

0000000000000010 <ctf_type_ischild>:
      10:	ldr	w8, [x0, #544]
      14:	cmp	x8, x1
      18:	cset	w0, cc  // cc = lo, ul, last
      1c:	ret

0000000000000020 <ctf_member_iter>:
      20:	sub	sp, sp, #0x50
      24:	stp	x29, x30, [sp, #16]
      28:	add	x29, sp, #0x10
      2c:	str	x23, [sp, #32]
      30:	stp	x22, x21, [sp, #48]
      34:	stp	x20, x19, [sp, #64]
      38:	mov	x19, x3
      3c:	mov	x20, x2
      40:	mov	x21, x0
      44:	str	x0, [x29, #24]
      48:	bl	1a8 <ctf_type_resolve>
      4c:	cmn	x0, #0x1
      50:	b.eq	190 <ctf_member_iter+0x170>  // b.none
      54:	mov	x23, x0
      58:	add	x0, x29, #0x18
      5c:	mov	x1, x23
      60:	bl	0 <ctf_lookup_by_id>
      64:	cbz	x0, e0 <ctf_member_iter+0xc0>
      68:	mov	x22, x0
      6c:	ldr	x0, [x29, #24]
      70:	add	x2, sp, #0x8
      74:	mov	x3, sp
      78:	mov	x1, x22
      7c:	ldr	x8, [x0]
      80:	ldr	x8, [x8, #24]
      84:	blr	x8
      88:	ldr	x8, [x29, #24]
      8c:	ldr	w0, [x22, #4]
      90:	ldr	x8, [x8]
      94:	ldr	x8, [x8]
      98:	blr	x8
      9c:	orr	w8, w0, #0x1
      a0:	cmp	w8, #0x7
      a4:	b.ne	e8 <ctf_member_iter+0xc8>  // b.any
      a8:	ldr	x0, [x29, #24]
      ac:	mov	x1, x23
      b0:	bl	0 <ctf_dynamic_type>
      b4:	cbz	x0, f8 <ctf_member_iter+0xd8>
      b8:	ldr	x21, [x0, #56]
      bc:	cbz	x21, 18c <ctf_member_iter+0x16c>
      c0:	ldp	x0, x1, [x21, #16]
      c4:	ldr	x2, [x21, #32]
      c8:	mov	x3, x19
      cc:	blr	x20
      d0:	cbnz	w0, 190 <ctf_member_iter+0x170>
      d4:	ldr	x21, [x21, #8]
      d8:	cbnz	x21, c0 <ctf_member_iter+0xa0>
      dc:	b	18c <ctf_member_iter+0x16c>
      e0:	mov	w0, #0xffffffff            	// #-1
      e4:	b	190 <ctf_member_iter+0x170>
      e8:	mov	w1, #0x3fb                 	// #1019
      ec:	mov	x0, x21
      f0:	bl	0 <ctf_set_errno>
      f4:	b	190 <ctf_member_iter+0x170>
      f8:	ldr	x8, [x29, #24]
      fc:	ldp	x9, x21, [sp]
     100:	ldr	w0, [x22, #4]
     104:	ldr	x8, [x8]
     108:	add	x22, x9, x22
     10c:	ldr	x8, [x8, #16]
     110:	blr	x8
     114:	mov	w8, #0x1fffffff            	// #536870911
     118:	cmp	x21, x8
     11c:	mov	w21, w0
     120:	b.gt	154 <ctf_member_iter+0x134>
     124:	cbz	w21, 18c <ctf_member_iter+0x16c>
     128:	ldr	x0, [x29, #24]
     12c:	ldr	w1, [x22]
     130:	bl	0 <ctf_strptr>
     134:	ldp	w2, w1, [x22, #4]
     138:	mov	x3, x19
     13c:	blr	x20
     140:	cbnz	w0, 190 <ctf_member_iter+0x170>
     144:	subs	w21, w21, #0x1
     148:	add	x22, x22, #0xc
     14c:	b.ne	128 <ctf_member_iter+0x108>  // b.any
     150:	b	190 <ctf_member_iter+0x170>
     154:	cbz	w21, 18c <ctf_member_iter+0x16c>
     158:	ldr	x0, [x29, #24]
     15c:	ldr	w1, [x22]
     160:	bl	0 <ctf_strptr>
     164:	ldp	w8, w1, [x22, #4]
     168:	ldr	w2, [x22, #12]
     16c:	mov	x3, x19
     170:	bfi	x2, x8, #32, #32
     174:	blr	x20
     178:	cbnz	w0, 190 <ctf_member_iter+0x170>
     17c:	subs	w21, w21, #0x1
     180:	add	x22, x22, #0x10
     184:	b.ne	158 <ctf_member_iter+0x138>  // b.any
     188:	b	190 <ctf_member_iter+0x170>
     18c:	mov	w0, wzr
     190:	ldp	x20, x19, [sp, #64]
     194:	ldp	x22, x21, [sp, #48]
     198:	ldr	x23, [sp, #32]
     19c:	ldp	x29, x30, [sp, #16]
     1a0:	add	sp, sp, #0x50
     1a4:	ret

00000000000001a8 <ctf_type_resolve>:
     1a8:	stp	x29, x30, [sp, #-64]!
     1ac:	stp	x20, x19, [sp, #48]
     1b0:	mov	x29, sp
     1b4:	mov	x19, x0
     1b8:	str	x23, [sp, #16]
     1bc:	stp	x22, x21, [sp, #32]
     1c0:	str	x0, [x29, #24]
     1c4:	cbz	x1, 238 <ctf_type_resolve+0x90>
     1c8:	mov	x21, x1
     1cc:	mov	x23, x1
     1d0:	mov	x20, x1
     1d4:	add	x0, x29, #0x18
     1d8:	mov	x1, x20
     1dc:	bl	0 <ctf_lookup_by_id>
     1e0:	cbz	x0, 254 <ctf_type_resolve+0xac>
     1e4:	ldr	x8, [x29, #24]
     1e8:	mov	x22, x0
     1ec:	ldr	w0, [x0, #4]
     1f0:	ldr	x8, [x8]
     1f4:	ldr	x8, [x8]
     1f8:	blr	x8
     1fc:	sub	w8, w0, #0xa
     200:	cmp	w8, #0x3
     204:	b.hi	27c <ctf_type_resolve+0xd4>  // b.pmore
     208:	ldr	w8, [x22, #8]
     20c:	cmp	x23, x8
     210:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     214:	cmp	x20, x8
     218:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     21c:	cmp	x8, x21
     220:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     224:	mov	x23, x20
     228:	mov	x20, x8
     22c:	cbnz	w8, 1d4 <ctf_type_resolve+0x2c>
     230:	mov	w1, #0x41b                 	// #1051
     234:	b	270 <ctf_type_resolve+0xc8>
     238:	mov	x0, x19
     23c:	ldp	x20, x19, [sp, #48]
     240:	ldp	x22, x21, [sp, #32]
     244:	ldr	x23, [sp, #16]
     248:	mov	w1, #0x41b                 	// #1051
     24c:	ldp	x29, x30, [sp], #64
     250:	b	0 <ctf_set_errno>
     254:	mov	x20, #0xffffffffffffffff    	// #-1
     258:	b	27c <ctf_type_resolve+0xd4>
     25c:	adrp	x0, 0 <ctf_type_isparent>
     260:	add	x0, x0, #0x0
     264:	mov	x1, x21
     268:	bl	0 <ctf_dprintf>
     26c:	mov	w1, #0x3ef                 	// #1007
     270:	mov	x0, x19
     274:	bl	0 <ctf_set_errno>
     278:	mov	x20, x0
     27c:	mov	x0, x20
     280:	ldp	x20, x19, [sp, #48]
     284:	ldp	x22, x21, [sp, #32]
     288:	ldr	x23, [sp, #16]
     28c:	ldp	x29, x30, [sp], #64
     290:	ret

0000000000000294 <ctf_enum_iter>:
     294:	sub	sp, sp, #0x50
     298:	stp	x29, x30, [sp, #16]
     29c:	add	x29, sp, #0x10
     2a0:	str	x23, [sp, #32]
     2a4:	stp	x22, x21, [sp, #48]
     2a8:	stp	x20, x19, [sp, #64]
     2ac:	mov	x19, x3
     2b0:	mov	x20, x2
     2b4:	mov	x21, x0
     2b8:	str	x0, [x29, #24]
     2bc:	bl	3d0 <ctf_type_resolve_unsliced>
     2c0:	cmn	x0, #0x1
     2c4:	b.eq	368 <ctf_enum_iter+0xd4>  // b.none
     2c8:	mov	x23, x0
     2cc:	add	x0, x29, #0x18
     2d0:	mov	x1, x23
     2d4:	bl	0 <ctf_lookup_by_id>
     2d8:	cbz	x0, 354 <ctf_enum_iter+0xc0>
     2dc:	ldr	x8, [x29, #24]
     2e0:	mov	x22, x0
     2e4:	ldr	w0, [x0, #4]
     2e8:	ldr	x8, [x8]
     2ec:	ldr	x8, [x8]
     2f0:	blr	x8
     2f4:	cmp	w0, #0x8
     2f8:	b.ne	35c <ctf_enum_iter+0xc8>  // b.any
     2fc:	ldr	x0, [x29, #24]
     300:	add	x3, sp, #0x8
     304:	mov	x1, x22
     308:	mov	x2, xzr
     30c:	ldr	x8, [x0]
     310:	ldr	x8, [x8, #24]
     314:	blr	x8
     318:	mov	x0, x21
     31c:	mov	x1, x23
     320:	bl	0 <ctf_dynamic_type>
     324:	cbz	x0, 380 <ctf_enum_iter+0xec>
     328:	ldr	x21, [x0, #56]
     32c:	cbz	x21, 34c <ctf_enum_iter+0xb8>
     330:	ldr	x0, [x21, #16]
     334:	ldr	w1, [x21, #40]
     338:	mov	x2, x19
     33c:	blr	x20
     340:	cbnz	w0, 368 <ctf_enum_iter+0xd4>
     344:	ldr	x21, [x21, #8]
     348:	cbnz	x21, 330 <ctf_enum_iter+0x9c>
     34c:	mov	w0, wzr
     350:	b	368 <ctf_enum_iter+0xd4>
     354:	mov	w0, #0xffffffff            	// #-1
     358:	b	368 <ctf_enum_iter+0xd4>
     35c:	mov	w1, #0x3fc                 	// #1020
     360:	mov	x0, x21
     364:	bl	0 <ctf_set_errno>
     368:	ldp	x20, x19, [sp, #64]
     36c:	ldp	x22, x21, [sp, #48]
     370:	ldr	x23, [sp, #32]
     374:	ldp	x29, x30, [sp, #16]
     378:	add	sp, sp, #0x50
     37c:	ret
     380:	ldr	x8, [x29, #24]
     384:	ldr	w0, [x22, #4]
     388:	ldr	x23, [sp, #8]
     38c:	ldr	x8, [x8]
     390:	ldr	x8, [x8, #16]
     394:	blr	x8
     398:	cbz	w0, 368 <ctf_enum_iter+0xd4>
     39c:	mov	w21, w0
     3a0:	add	x22, x23, x22
     3a4:	ldr	x0, [x29, #24]
     3a8:	ldr	w1, [x22]
     3ac:	bl	0 <ctf_strptr>
     3b0:	ldr	w1, [x22, #4]
     3b4:	mov	x2, x19
     3b8:	blr	x20
     3bc:	cbnz	w0, 368 <ctf_enum_iter+0xd4>
     3c0:	subs	w21, w21, #0x1
     3c4:	add	x22, x22, #0x8
     3c8:	b.ne	3a4 <ctf_enum_iter+0x110>  // b.any
     3cc:	b	368 <ctf_enum_iter+0xd4>

00000000000003d0 <ctf_type_resolve_unsliced>:
     3d0:	sub	sp, sp, #0x40
     3d4:	stp	x29, x30, [sp, #32]
     3d8:	stp	x20, x19, [sp, #48]
     3dc:	add	x29, sp, #0x20
     3e0:	str	x0, [sp, #8]
     3e4:	bl	1a8 <ctf_type_resolve>
     3e8:	mov	x19, x0
     3ec:	cmn	x0, #0x1
     3f0:	b.eq	468 <ctf_type_resolve_unsliced+0x98>  // b.none
     3f4:	add	x0, sp, #0x8
     3f8:	mov	x1, x19
     3fc:	bl	0 <ctf_lookup_by_id>
     400:	cbz	x0, 464 <ctf_type_resolve_unsliced+0x94>
     404:	ldr	x8, [sp, #8]
     408:	ldr	w0, [x0, #4]
     40c:	ldr	x8, [x8]
     410:	ldr	x8, [x8]
     414:	blr	x8
     418:	cmp	w0, #0xe
     41c:	b.ne	468 <ctf_type_resolve_unsliced+0x98>  // b.any
     420:	ldr	x20, [sp, #8]
     424:	sub	x0, x29, #0x8
     428:	mov	x1, x19
     42c:	stur	x20, [x29, #-8]
     430:	bl	0 <ctf_lookup_by_id>
     434:	cbz	x0, 464 <ctf_type_resolve_unsliced+0x94>
     438:	ldur	x8, [x29, #-8]
     43c:	mov	x19, x0
     440:	ldr	w0, [x0, #4]
     444:	ldr	x8, [x8]
     448:	ldr	x8, [x8]
     44c:	blr	x8
     450:	sub	w8, w0, #0xa
     454:	cmp	w8, #0x4
     458:	b.cs	47c <ctf_type_resolve_unsliced+0xac>  // b.hs, b.nlast
     45c:	ldr	w19, [x19, #8]
     460:	b	468 <ctf_type_resolve_unsliced+0x98>
     464:	mov	x19, #0xffffffffffffffff    	// #-1
     468:	mov	x0, x19
     46c:	ldp	x20, x19, [sp, #48]
     470:	ldp	x29, x30, [sp, #32]
     474:	add	sp, sp, #0x40
     478:	ret
     47c:	cmp	w0, #0xe
     480:	b.eq	4a0 <ctf_type_resolve_unsliced+0xd0>  // b.none
     484:	cmp	w0, #0x3
     488:	b.eq	45c <ctf_type_resolve_unsliced+0x8c>  // b.none
     48c:	mov	w1, #0x400                 	// #1024
     490:	mov	x0, x20
     494:	bl	0 <ctf_set_errno>
     498:	mov	x19, x0
     49c:	b	468 <ctf_type_resolve_unsliced+0x98>
     4a0:	ldur	x0, [x29, #-8]
     4a4:	add	x3, sp, #0x10
     4a8:	mov	x1, x19
     4ac:	mov	x2, xzr
     4b0:	ldr	x8, [x0]
     4b4:	ldr	x8, [x8, #24]
     4b8:	blr	x8
     4bc:	ldr	x8, [sp, #16]
     4c0:	ldr	w19, [x8, x19]
     4c4:	b	468 <ctf_type_resolve_unsliced+0x98>

00000000000004c8 <ctf_type_iter>:
     4c8:	stp	x29, x30, [sp, #-64]!
     4cc:	stp	x24, x23, [sp, #16]
     4d0:	stp	x22, x21, [sp, #32]
     4d4:	stp	x20, x19, [sp, #48]
     4d8:	ldr	x22, [x0, #480]
     4dc:	mov	x29, sp
     4e0:	cbz	x22, 580 <ctf_type_iter+0xb8>
     4e4:	ldr	w23, [x0, #552]
     4e8:	mov	x19, x2
     4ec:	mov	x20, x0
     4f0:	mov	x21, x1
     4f4:	mov	w24, #0x1                   	// #1
     4f8:	mov	w8, w23
     4fc:	tbnz	w8, #1, 514 <ctf_type_iter+0x4c>
     500:	ldr	x8, [x20, #440]
     504:	ldr	x9, [x20, #408]
     508:	ldr	w8, [x8, x24, lsl #2]
     50c:	add	x8, x9, x8
     510:	b	534 <ctf_type_iter+0x6c>
     514:	mov	x1, x24
     518:	tbz	w8, #0, 528 <ctf_type_iter+0x60>
     51c:	ldr	w8, [x20, #544]
     520:	add	w8, w8, #0x1
     524:	orr	x1, x24, x8
     528:	mov	x0, x20
     52c:	bl	0 <ctf_dtd_lookup>
     530:	add	x8, x0, #0x18
     534:	ldr	x9, [x20]
     538:	ldr	w0, [x8, #4]
     53c:	ldr	x9, [x9, #8]
     540:	blr	x9
     544:	cbz	w0, 568 <ctf_type_iter+0xa0>
     548:	mov	x0, x24
     54c:	tbz	w23, #0, 55c <ctf_type_iter+0x94>
     550:	ldr	w8, [x20, #544]
     554:	add	w8, w8, #0x1
     558:	orr	x0, x24, x8
     55c:	mov	x1, x19
     560:	blr	x21
     564:	cbnz	w0, 584 <ctf_type_iter+0xbc>
     568:	add	x24, x24, #0x1
     56c:	cmp	x24, x22
     570:	b.hi	580 <ctf_type_iter+0xb8>  // b.pmore
     574:	ldr	w8, [x20, #552]
     578:	tbnz	w8, #1, 514 <ctf_type_iter+0x4c>
     57c:	b	500 <ctf_type_iter+0x38>
     580:	mov	w0, wzr
     584:	ldp	x20, x19, [sp, #48]
     588:	ldp	x22, x21, [sp, #32]
     58c:	ldp	x24, x23, [sp, #16]
     590:	ldp	x29, x30, [sp], #64
     594:	ret

0000000000000598 <ctf_type_iter_all>:
     598:	stp	x29, x30, [sp, #-80]!
     59c:	stp	x24, x23, [sp, #32]
     5a0:	stp	x22, x21, [sp, #48]
     5a4:	stp	x20, x19, [sp, #64]
     5a8:	ldr	x23, [x0, #480]
     5ac:	str	x25, [sp, #16]
     5b0:	mov	x29, sp
     5b4:	cbz	x23, 660 <ctf_type_iter_all+0xc8>
     5b8:	ldr	w24, [x0, #552]
     5bc:	mov	x19, x2
     5c0:	mov	x20, x0
     5c4:	mov	x21, x1
     5c8:	mov	w25, #0x1                   	// #1
     5cc:	mov	w8, w24
     5d0:	tbz	w8, #1, 644 <ctf_type_iter_all+0xac>
     5d4:	mov	x1, x25
     5d8:	tbz	w8, #0, 5e8 <ctf_type_iter_all+0x50>
     5dc:	ldr	w8, [x20, #544]
     5e0:	add	w8, w8, #0x1
     5e4:	orr	x1, x25, x8
     5e8:	mov	x0, x20
     5ec:	bl	0 <ctf_dtd_lookup>
     5f0:	add	x8, x0, #0x18
     5f4:	mov	x22, x25
     5f8:	tbz	w24, #0, 608 <ctf_type_iter_all+0x70>
     5fc:	ldr	w9, [x20, #544]
     600:	add	w9, w9, #0x1
     604:	orr	x22, x25, x9
     608:	ldr	x9, [x20]
     60c:	ldr	w0, [x8, #4]
     610:	ldr	x9, [x9, #8]
     614:	blr	x9
     618:	cmp	w0, #0x0
     61c:	cset	w1, ne  // ne = any
     620:	mov	x0, x22
     624:	mov	x2, x19
     628:	blr	x21
     62c:	cbnz	w0, 668 <ctf_type_iter_all+0xd0>
     630:	add	x25, x25, #0x1
     634:	cmp	x25, x23
     638:	b.hi	660 <ctf_type_iter_all+0xc8>  // b.pmore
     63c:	ldr	w8, [x20, #552]
     640:	tbnz	w8, #1, 5d4 <ctf_type_iter_all+0x3c>
     644:	ldr	x8, [x20, #440]
     648:	ldr	x9, [x20, #408]
     64c:	ldr	w8, [x8, x25, lsl #2]
     650:	add	x8, x9, x8
     654:	mov	x22, x25
     658:	tbnz	w24, #0, 5fc <ctf_type_iter_all+0x64>
     65c:	b	608 <ctf_type_iter_all+0x70>
     660:	mov	w0, wzr
     664:	b	670 <ctf_type_iter_all+0xd8>
     668:	cmp	w0, #0x0
     66c:	cset	w0, ne  // ne = any
     670:	ldp	x20, x19, [sp, #64]
     674:	ldp	x22, x21, [sp, #48]
     678:	ldp	x24, x23, [sp, #32]
     67c:	ldr	x25, [sp, #16]
     680:	ldp	x29, x30, [sp], #80
     684:	ret

0000000000000688 <ctf_variable_iter>:
     688:	stp	x29, x30, [sp, #-64]!
     68c:	stp	x22, x21, [sp, #32]
     690:	stp	x20, x19, [sp, #48]
     694:	ldr	w8, [x0, #552]
     698:	mov	x19, x2
     69c:	mov	x21, x0
     6a0:	mov	x20, x1
     6a4:	str	x23, [sp, #16]
     6a8:	mov	x29, sp
     6ac:	tbz	w8, #0, 6b8 <ctf_variable_iter+0x30>
     6b0:	ldr	x9, [x21, #512]
     6b4:	cbz	x9, 734 <ctf_variable_iter+0xac>
     6b8:	tbnz	w8, #1, 70c <ctf_variable_iter+0x84>
     6bc:	ldr	x8, [x21, #472]
     6c0:	cbz	x8, 72c <ctf_variable_iter+0xa4>
     6c4:	mov	x22, xzr
     6c8:	mov	x23, xzr
     6cc:	ldr	x8, [x21, #464]
     6d0:	mov	x0, x21
     6d4:	ldr	w1, [x8, x22]
     6d8:	bl	0 <ctf_strptr>
     6dc:	ldr	x8, [x21, #464]
     6e0:	mov	x2, x19
     6e4:	add	x8, x8, x22
     6e8:	ldr	w1, [x8, #4]
     6ec:	blr	x20
     6f0:	cbnz	w0, 738 <ctf_variable_iter+0xb0>
     6f4:	ldr	x8, [x21, #472]
     6f8:	add	x23, x23, #0x1
     6fc:	add	x22, x22, #0x8
     700:	cmp	x23, x8
     704:	b.cc	6cc <ctf_variable_iter+0x44>  // b.lo, b.ul, b.last
     708:	b	72c <ctf_variable_iter+0xa4>
     70c:	ldr	x21, [x21, #608]
     710:	cbz	x21, 72c <ctf_variable_iter+0xa4>
     714:	ldp	x0, x1, [x21, #16]
     718:	mov	x2, x19
     71c:	blr	x20
     720:	cbnz	w0, 738 <ctf_variable_iter+0xb0>
     724:	ldr	x21, [x21, #8]
     728:	cbnz	x21, 714 <ctf_variable_iter+0x8c>
     72c:	mov	w0, wzr
     730:	b	738 <ctf_variable_iter+0xb0>
     734:	mov	w0, #0x3f3                 	// #1011
     738:	ldp	x20, x19, [sp, #48]
     73c:	ldp	x22, x21, [sp, #32]
     740:	ldr	x23, [sp, #16]
     744:	ldp	x29, x30, [sp], #64
     748:	ret

000000000000074c <ctf_type_reference>:
     74c:	sub	sp, sp, #0x30
     750:	stp	x20, x19, [sp, #32]
     754:	mov	x20, x0
     758:	str	x0, [sp, #8]
     75c:	add	x0, sp, #0x8
     760:	stp	x29, x30, [sp, #16]
     764:	add	x29, sp, #0x10
     768:	bl	0 <ctf_lookup_by_id>
     76c:	cbz	x0, 79c <ctf_type_reference+0x50>
     770:	ldr	x8, [sp, #8]
     774:	mov	x19, x0
     778:	ldr	w0, [x0, #4]
     77c:	ldr	x8, [x8]
     780:	ldr	x8, [x8]
     784:	blr	x8
     788:	sub	w8, w0, #0xa
     78c:	cmp	w8, #0x4
     790:	b.cs	7a4 <ctf_type_reference+0x58>  // b.hs, b.nlast
     794:	ldr	w0, [x19, #8]
     798:	b	7e8 <ctf_type_reference+0x9c>
     79c:	mov	x0, #0xffffffffffffffff    	// #-1
     7a0:	b	7e8 <ctf_type_reference+0x9c>
     7a4:	cmp	w0, #0xe
     7a8:	b.eq	7c4 <ctf_type_reference+0x78>  // b.none
     7ac:	cmp	w0, #0x3
     7b0:	b.eq	794 <ctf_type_reference+0x48>  // b.none
     7b4:	mov	w1, #0x400                 	// #1024
     7b8:	mov	x0, x20
     7bc:	bl	0 <ctf_set_errno>
     7c0:	b	7e8 <ctf_type_reference+0x9c>
     7c4:	ldr	x0, [sp, #8]
     7c8:	mov	x3, sp
     7cc:	mov	x1, x19
     7d0:	mov	x2, xzr
     7d4:	ldr	x8, [x0]
     7d8:	ldr	x8, [x8, #24]
     7dc:	blr	x8
     7e0:	ldr	x8, [sp]
     7e4:	ldr	w0, [x8, x19]
     7e8:	ldp	x20, x19, [sp, #32]
     7ec:	ldp	x29, x30, [sp, #16]
     7f0:	add	sp, sp, #0x30
     7f4:	ret

00000000000007f8 <ctf_lookup_by_rawname>:
     7f8:	stp	x29, x30, [sp, #-32]!
     7fc:	stp	x20, x19, [sp, #16]
     800:	mov	x29, sp
     804:	mov	x19, x2
     808:	mov	x20, x0
     80c:	bl	0 <ctf_name_table>
     810:	ldrb	w8, [x20, #552]
     814:	tbnz	w8, #1, 830 <ctf_lookup_by_rawname+0x38>
     818:	ldr	x0, [x0]
     81c:	mov	x1, x20
     820:	mov	x2, x19
     824:	ldp	x20, x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	b	0 <ctf_hash_lookup_type>
     830:	ldr	x0, [x0, #8]
     834:	mov	x1, x19
     838:	ldp	x20, x19, [sp, #16]
     83c:	ldp	x29, x30, [sp], #32
     840:	b	0 <ctf_dynhash_lookup>

0000000000000844 <ctf_lookup_by_rawhash>:
     844:	ldrb	w9, [x0, #552]
     848:	tbnz	w9, #1, 85c <ctf_lookup_by_rawhash+0x18>
     84c:	mov	x8, x0
     850:	ldr	x0, [x1]
     854:	mov	x1, x8
     858:	b	0 <ctf_hash_lookup_type>
     85c:	ldr	x0, [x1, #8]
     860:	mov	x1, x2
     864:	b	0 <ctf_dynhash_lookup>

0000000000000868 <ctf_type_aname>:
     868:	sub	sp, sp, #0xe0
     86c:	stp	x20, x19, [sp, #208]
     870:	mov	x20, x1
     874:	mov	x19, x0
     878:	stp	x29, x30, [sp, #128]
     87c:	stp	x28, x27, [sp, #144]
     880:	stp	x26, x25, [sp, #160]
     884:	stp	x24, x23, [sp, #176]
     888:	stp	x22, x21, [sp, #192]
     88c:	add	x29, sp, #0x80
     890:	cbnz	x0, 8a4 <ctf_type_aname+0x3c>
     894:	cmn	x20, #0x1
     898:	b.ne	8a4 <ctf_type_aname+0x3c>  // b.any
     89c:	mov	x19, xzr
     8a0:	b	ad0 <ctf_type_aname+0x268>
     8a4:	add	x0, sp, #0x18
     8a8:	add	x25, sp, #0x18
     8ac:	bl	0 <ctf_decl_init>
     8b0:	add	x0, sp, #0x18
     8b4:	mov	x1, x19
     8b8:	mov	x2, x20
     8bc:	bl	0 <ctf_decl_push>
     8c0:	ldr	w8, [sp, #120]
     8c4:	cbz	w8, 8e4 <ctf_type_aname+0x7c>
     8c8:	add	x0, sp, #0x18
     8cc:	bl	0 <ctf_decl_fini>
     8d0:	ldr	w1, [sp, #120]
     8d4:	mov	x0, x19
     8d8:	bl	0 <ctf_set_errno>
     8dc:	mov	x19, xzr
     8e0:	b	ad0 <ctf_type_aname+0x268>
     8e4:	ldp	w8, w9, [sp, #92]
     8e8:	mov	w10, #0xffffffff            	// #-1
     8ec:	mov	w11, #0x2                   	// #2
     8f0:	adrp	x21, 0 <ctf_type_isparent>
     8f4:	cmp	w8, #0x1
     8f8:	csinc	x10, x10, xzr, le
     8fc:	cmp	w9, #0x2
     900:	csel	x9, x11, x10, gt
     904:	adrp	x22, 0 <ctf_type_isparent>
     908:	adrp	x24, 0 <ctf_type_isparent>
     90c:	adrp	x23, 0 <ctf_type_isparent>
     910:	adrp	x27, 0 <ctf_type_isparent>
     914:	str	x9, [sp, #8]
     918:	csinv	w9, w11, wzr, gt
     91c:	cmp	w8, #0x1
     920:	mov	x20, xzr
     924:	mov	w28, #0x3                   	// #3
     928:	add	x21, x21, #0x0
     92c:	add	x22, x22, #0x0
     930:	add	x24, x24, #0x0
     934:	add	x23, x23, #0x0
     938:	add	x27, x27, #0x0
     93c:	csinc	w26, w9, wzr, le
     940:	b	954 <ctf_type_aname+0xec>
     944:	add	x20, x20, #0x1
     948:	cmp	x20, #0x4
     94c:	add	x25, sp, #0x18
     950:	b.eq	aa8 <ctf_type_aname+0x240>  // b.none
     954:	add	x8, x25, x20, lsl #4
     958:	ldr	x25, [x8, #8]
     95c:	cbnz	x25, 99c <ctf_type_aname+0x134>
     960:	ldr	x8, [sp, #8]
     964:	cmp	x8, x20
     968:	b.ne	944 <ctf_type_aname+0xdc>  // b.any
     96c:	adrp	x1, 0 <ctf_type_isparent>
     970:	add	x0, sp, #0x18
     974:	add	x1, x1, #0x0
     978:	bl	0 <ctf_decl_sprintf>
     97c:	b	944 <ctf_type_aname+0xdc>
     980:	adrp	x1, 0 <ctf_type_isparent>
     984:	add	x0, sp, #0x18
     988:	add	x1, x1, #0x0
     98c:	bl	0 <ctf_decl_sprintf>
     990:	ldr	w28, [x25, #24]
     994:	ldr	x25, [x25, #8]
     998:	cbz	x25, 960 <ctf_type_aname+0xf8>
     99c:	str	x19, [sp, #16]
     9a0:	ldr	x1, [x25, #16]
     9a4:	add	x0, sp, #0x10
     9a8:	bl	0 <ctf_lookup_by_id>
     9ac:	ldr	x8, [sp, #16]
     9b0:	ldr	w1, [x0]
     9b4:	mov	x0, x8
     9b8:	bl	0 <ctf_strptr>
     9bc:	sub	w8, w28, #0x3
     9c0:	cmp	w8, #0x2
     9c4:	mov	x28, x0
     9c8:	b.cc	9d8 <ctf_type_aname+0x170>  // b.lo, b.ul, b.last
     9cc:	add	x0, sp, #0x18
     9d0:	mov	x1, x21
     9d4:	bl	0 <ctf_decl_sprintf>
     9d8:	cmp	x20, w26, uxtw
     9dc:	b.ne	9f0 <ctf_type_aname+0x188>  // b.any
     9e0:	add	x0, sp, #0x18
     9e4:	mov	x1, x22
     9e8:	bl	0 <ctf_decl_sprintf>
     9ec:	mov	w26, #0xffffffff            	// #-1
     9f0:	ldr	w8, [x25, #24]
     9f4:	sub	w8, w8, #0x1
     9f8:	cmp	w8, #0xc
     9fc:	b.hi	990 <ctf_type_aname+0x128>  // b.pmore
     a00:	adr	x9, 980 <ctf_type_aname+0x118>
     a04:	ldrb	w10, [x24, x8]
     a08:	add	x9, x9, x10, lsl #2
     a0c:	br	x9
     a10:	add	x0, sp, #0x18
     a14:	mov	x1, x23
     a18:	b	a7c <ctf_type_aname+0x214>
     a1c:	add	x0, sp, #0x18
     a20:	mov	x1, x27
     a24:	b	a7c <ctf_type_aname+0x214>
     a28:	adrp	x1, 0 <ctf_type_isparent>
     a2c:	add	x0, sp, #0x18
     a30:	add	x1, x1, #0x0
     a34:	b	98c <ctf_type_aname+0x124>
     a38:	ldr	w2, [x25, #28]
     a3c:	adrp	x1, 0 <ctf_type_isparent>
     a40:	add	x0, sp, #0x18
     a44:	add	x1, x1, #0x0
     a48:	bl	0 <ctf_decl_sprintf>
     a4c:	b	990 <ctf_type_aname+0x128>
     a50:	adrp	x1, 0 <ctf_type_isparent>
     a54:	add	x0, sp, #0x18
     a58:	add	x1, x1, #0x0
     a5c:	b	98c <ctf_type_aname+0x124>
     a60:	adrp	x1, 0 <ctf_type_isparent>
     a64:	add	x0, sp, #0x18
     a68:	add	x1, x1, #0x0
     a6c:	b	a7c <ctf_type_aname+0x214>
     a70:	adrp	x1, 0 <ctf_type_isparent>
     a74:	add	x0, sp, #0x18
     a78:	add	x1, x1, #0x0
     a7c:	mov	x2, x28
     a80:	bl	0 <ctf_decl_sprintf>
     a84:	b	990 <ctf_type_aname+0x128>
     a88:	adrp	x1, 0 <ctf_type_isparent>
     a8c:	add	x0, sp, #0x18
     a90:	add	x1, x1, #0x0
     a94:	b	98c <ctf_type_aname+0x124>
     a98:	adrp	x1, 0 <ctf_type_isparent>
     a9c:	add	x0, sp, #0x18
     aa0:	add	x1, x1, #0x0
     aa4:	b	98c <ctf_type_aname+0x124>
     aa8:	ldr	w8, [sp, #124]
     aac:	cbz	w8, abc <ctf_type_aname+0x254>
     ab0:	mov	w1, #0xc                   	// #12
     ab4:	mov	x0, x19
     ab8:	bl	0 <ctf_set_errno>
     abc:	add	x0, sp, #0x18
     ac0:	bl	0 <ctf_decl_buf>
     ac4:	mov	x19, x0
     ac8:	add	x0, sp, #0x18
     acc:	bl	0 <ctf_decl_fini>
     ad0:	mov	x0, x19
     ad4:	ldp	x20, x19, [sp, #208]
     ad8:	ldp	x22, x21, [sp, #192]
     adc:	ldp	x24, x23, [sp, #176]
     ae0:	ldp	x26, x25, [sp, #160]
     ae4:	ldp	x28, x27, [sp, #144]
     ae8:	ldp	x29, x30, [sp, #128]
     aec:	add	sp, sp, #0xe0
     af0:	ret

0000000000000af4 <ctf_type_lname>:
     af4:	stp	x29, x30, [sp, #-64]!
     af8:	str	x23, [sp, #16]
     afc:	stp	x22, x21, [sp, #32]
     b00:	stp	x20, x19, [sp, #48]
     b04:	mov	x29, sp
     b08:	mov	x21, x3
     b0c:	mov	x22, x2
     b10:	mov	x19, x0
     b14:	bl	868 <ctf_type_aname>
     b18:	cbz	x0, b60 <ctf_type_lname+0x6c>
     b1c:	mov	x23, x0
     b20:	bl	0 <strlen>
     b24:	adrp	x2, 0 <ctf_type_isparent>
     b28:	mov	x20, x0
     b2c:	add	x2, x2, #0x0
     b30:	mov	x0, x22
     b34:	mov	x1, x21
     b38:	mov	x3, x23
     b3c:	bl	0 <snprintf>
     b40:	mov	x0, x23
     b44:	bl	0 <free>
     b48:	cmp	x20, x21
     b4c:	b.cc	b64 <ctf_type_lname+0x70>  // b.lo, b.ul, b.last
     b50:	mov	w1, #0x401                 	// #1025
     b54:	mov	x0, x19
     b58:	bl	0 <ctf_set_errno>
     b5c:	b	b64 <ctf_type_lname+0x70>
     b60:	mov	x20, #0xffffffffffffffff    	// #-1
     b64:	mov	x0, x20
     b68:	ldp	x20, x19, [sp, #48]
     b6c:	ldp	x22, x21, [sp, #32]
     b70:	ldr	x23, [sp, #16]
     b74:	ldp	x29, x30, [sp], #64
     b78:	ret

0000000000000b7c <ctf_type_name>:
     b7c:	stp	x29, x30, [sp, #-64]!
     b80:	str	x23, [sp, #16]
     b84:	stp	x22, x21, [sp, #32]
     b88:	stp	x20, x19, [sp, #48]
     b8c:	mov	x29, sp
     b90:	mov	x20, x3
     b94:	mov	x19, x2
     b98:	mov	x21, x0
     b9c:	bl	868 <ctf_type_aname>
     ba0:	cbz	x0, bf4 <ctf_type_name+0x78>
     ba4:	mov	x23, x0
     ba8:	bl	0 <strlen>
     bac:	adrp	x2, 0 <ctf_type_isparent>
     bb0:	mov	x22, x0
     bb4:	add	x2, x2, #0x0
     bb8:	mov	x0, x19
     bbc:	mov	x1, x20
     bc0:	mov	x3, x23
     bc4:	bl	0 <snprintf>
     bc8:	mov	x0, x23
     bcc:	bl	0 <free>
     bd0:	cmp	x22, x20
     bd4:	b.cc	be4 <ctf_type_name+0x68>  // b.lo, b.ul, b.last
     bd8:	mov	w1, #0x401                 	// #1025
     bdc:	mov	x0, x21
     be0:	bl	0 <ctf_set_errno>
     be4:	cmp	x22, x20
     be8:	mov	x8, #0xffffffffffffffff    	// #-1
     bec:	ccmp	x22, x8, #0x4, cc  // cc = lo, ul, last
     bf0:	csel	x0, x19, xzr, gt
     bf4:	ldp	x20, x19, [sp, #48]
     bf8:	ldp	x22, x21, [sp, #32]
     bfc:	ldr	x23, [sp, #16]
     c00:	ldp	x29, x30, [sp], #64
     c04:	ret

0000000000000c08 <ctf_type_aname_raw>:
     c08:	stp	x29, x30, [sp, #-32]!
     c0c:	mov	x29, sp
     c10:	str	x0, [x29, #24]
     c14:	add	x0, x29, #0x18
     c18:	str	x19, [sp, #16]
     c1c:	bl	0 <ctf_lookup_by_id>
     c20:	cbz	x0, c48 <ctf_type_aname_raw+0x40>
     c24:	mov	x19, x0
     c28:	ldr	x0, [x29, #24]
     c2c:	ldr	w1, [x19]
     c30:	bl	0 <ctf_strraw>
     c34:	cbz	x0, c48 <ctf_type_aname_raw+0x40>
     c38:	ldr	x0, [x29, #24]
     c3c:	ldr	w1, [x19]
     c40:	bl	0 <ctf_strraw>
     c44:	bl	0 <strdup>
     c48:	ldr	x19, [sp, #16]
     c4c:	ldp	x29, x30, [sp], #32
     c50:	ret

0000000000000c54 <ctf_type_size>:
     c54:	sub	sp, sp, #0x40
     c58:	stp	x29, x30, [sp, #16]
     c5c:	str	x21, [sp, #32]
     c60:	stp	x20, x19, [sp, #48]
     c64:	add	x29, sp, #0x10
     c68:	str	x0, [sp]
     c6c:	bl	1a8 <ctf_type_resolve>
     c70:	cmn	x0, #0x1
     c74:	b.eq	de0 <ctf_type_size+0x18c>  // b.none
     c78:	mov	x19, x0
     c7c:	mov	x0, sp
     c80:	mov	x1, x19
     c84:	bl	0 <ctf_lookup_by_id>
     c88:	cbz	x0, ddc <ctf_type_size+0x188>
     c8c:	ldr	x8, [sp]
     c90:	mov	x20, x0
     c94:	ldr	w0, [x0, #4]
     c98:	ldr	x8, [x8]
     c9c:	ldr	x8, [x8]
     ca0:	blr	x8
     ca4:	sub	w8, w0, #0x3
     ca8:	cmp	w8, #0x5
     cac:	b.hi	d54 <ctf_type_size+0x100>  // b.pmore
     cb0:	adrp	x9, 0 <ctf_type_isparent>
     cb4:	add	x9, x9, #0x0
     cb8:	adr	x10, ccc <ctf_type_size+0x78>
     cbc:	ldrb	w11, [x9, x8]
     cc0:	add	x10, x10, x11, lsl #2
     cc4:	mov	x0, xzr
     cc8:	br	x10
     ccc:	ldr	x8, [sp]
     cd0:	ldr	x8, [x8, #488]
     cd4:	ldr	x0, [x8, #16]
     cd8:	b	de0 <ctf_type_size+0x18c>
     cdc:	ldr	x0, [sp]
     ce0:	mov	x1, x20
     ce4:	mov	x2, xzr
     ce8:	mov	x3, xzr
     cec:	ldr	x8, [x0]
     cf0:	ldr	x8, [x8, #24]
     cf4:	blr	x8
     cf8:	cmp	x0, #0x0
     cfc:	b.gt	de0 <ctf_type_size+0x18c>
     d00:	ldr	x21, [sp]
     d04:	add	x0, x29, #0x18
     d08:	mov	x1, x19
     d0c:	str	x21, [x29, #24]
     d10:	bl	0 <ctf_lookup_by_id>
     d14:	cbz	x0, ddc <ctf_type_size+0x188>
     d18:	ldr	x8, [x29, #24]
     d1c:	mov	x20, x0
     d20:	ldr	w0, [x0, #4]
     d24:	ldr	x8, [x8]
     d28:	ldr	x8, [x8]
     d2c:	blr	x8
     d30:	cmp	w0, #0x4
     d34:	b.ne	d84 <ctf_type_size+0x130>  // b.any
     d38:	mov	x0, x21
     d3c:	mov	x1, x19
     d40:	bl	0 <ctf_dynamic_type>
     d44:	cbz	x0, d9c <ctf_type_size+0x148>
     d48:	add	x8, x0, #0x40
     d4c:	ldr	x1, [x0, #48]
     d50:	b	dc4 <ctf_type_size+0x170>
     d54:	ldr	x0, [sp]
     d58:	mov	x1, x20
     d5c:	mov	x2, xzr
     d60:	mov	x3, xzr
     d64:	ldr	x8, [x0]
     d68:	ldr	x8, [x8, #24]
     d6c:	blr	x8
     d70:	b	de0 <ctf_type_size+0x18c>
     d74:	ldr	x8, [sp]
     d78:	ldr	x8, [x8, #488]
     d7c:	ldr	x0, [x8, #40]
     d80:	b	de0 <ctf_type_size+0x18c>
     d84:	mov	w1, #0x3ff                 	// #1023
     d88:	mov	x0, x21
     d8c:	bl	0 <ctf_set_errno>
     d90:	tbnz	w0, #31, ddc <ctf_type_size+0x188>
     d94:	mov	x19, xzr
     d98:	b	dc8 <ctf_type_size+0x174>
     d9c:	ldr	x0, [x29, #24]
     da0:	add	x3, sp, #0x8
     da4:	mov	x1, x20
     da8:	mov	x2, xzr
     dac:	ldr	x8, [x0]
     db0:	ldr	x8, [x8, #24]
     db4:	blr	x8
     db8:	ldr	x8, [sp, #8]
     dbc:	add	x8, x8, x20
     dc0:	ldr	w1, [x8], #8
     dc4:	ldr	w19, [x8]
     dc8:	ldr	x0, [sp]
     dcc:	bl	c54 <ctf_type_size>
     dd0:	tbnz	x0, #63, ddc <ctf_type_size+0x188>
     dd4:	mul	x0, x0, x19
     dd8:	b	de0 <ctf_type_size+0x18c>
     ddc:	mov	x0, #0xffffffffffffffff    	// #-1
     de0:	ldp	x20, x19, [sp, #48]
     de4:	ldr	x21, [sp, #32]
     de8:	ldp	x29, x30, [sp, #16]
     dec:	add	sp, sp, #0x40
     df0:	ret

0000000000000df4 <ctf_array_info>:
     df4:	sub	sp, sp, #0x40
     df8:	stp	x22, x21, [sp, #32]
     dfc:	mov	x21, x0
     e00:	str	x0, [sp, #8]
     e04:	add	x0, sp, #0x8
     e08:	stp	x29, x30, [sp, #16]
     e0c:	stp	x20, x19, [sp, #48]
     e10:	add	x29, sp, #0x10
     e14:	mov	x19, x2
     e18:	mov	x22, x1
     e1c:	bl	0 <ctf_lookup_by_id>
     e20:	cbz	x0, e70 <ctf_array_info+0x7c>
     e24:	ldr	x8, [sp, #8]
     e28:	mov	x20, x0
     e2c:	ldr	w0, [x0, #4]
     e30:	ldr	x8, [x8]
     e34:	ldr	x8, [x8]
     e38:	blr	x8
     e3c:	cmp	w0, #0x4
     e40:	b.ne	e78 <ctf_array_info+0x84>  // b.any
     e44:	mov	x0, x21
     e48:	mov	x1, x22
     e4c:	bl	0 <ctf_dynamic_type>
     e50:	cbz	x0, e88 <ctf_array_info+0x94>
     e54:	mov	x8, x0
     e58:	ldr	x9, [x8, #64]
     e5c:	ldr	q0, [x8, #48]
     e60:	mov	w0, wzr
     e64:	str	x9, [x19, #16]
     e68:	str	q0, [x19]
     e6c:	b	ec4 <ctf_array_info+0xd0>
     e70:	mov	w0, #0xffffffff            	// #-1
     e74:	b	ec4 <ctf_array_info+0xd0>
     e78:	mov	w1, #0x3ff                 	// #1023
     e7c:	mov	x0, x21
     e80:	bl	0 <ctf_set_errno>
     e84:	b	ec4 <ctf_array_info+0xd0>
     e88:	ldr	x0, [sp, #8]
     e8c:	mov	x3, sp
     e90:	mov	x1, x20
     e94:	mov	x2, xzr
     e98:	ldr	x8, [x0]
     e9c:	ldr	x8, [x8, #24]
     ea0:	blr	x8
     ea4:	ldr	x8, [sp]
     ea8:	mov	w0, wzr
     eac:	add	x8, x8, x20
     eb0:	ldr	d0, [x8]
     eb4:	uxtl	v0.2d, v0.2s
     eb8:	str	q0, [x19]
     ebc:	ldr	w8, [x8, #8]
     ec0:	str	w8, [x19, #16]
     ec4:	ldp	x20, x19, [sp, #48]
     ec8:	ldp	x22, x21, [sp, #32]
     ecc:	ldp	x29, x30, [sp, #16]
     ed0:	add	sp, sp, #0x40
     ed4:	ret

0000000000000ed8 <ctf_type_align>:
     ed8:	sub	sp, sp, #0x50
     edc:	stp	x29, x30, [sp, #32]
     ee0:	stp	x22, x21, [sp, #48]
     ee4:	stp	x20, x19, [sp, #64]
     ee8:	add	x29, sp, #0x20
     eec:	mov	x22, x0
     ef0:	str	x0, [sp, #8]
     ef4:	bl	1a8 <ctf_type_resolve>
     ef8:	mov	x19, x0
     efc:	cmn	x0, #0x1
     f00:	b.eq	1134 <ctf_type_align+0x25c>  // b.none
     f04:	add	x0, sp, #0x8
     f08:	mov	x1, x19
     f0c:	bl	0 <ctf_lookup_by_id>
     f10:	cbz	x0, 10fc <ctf_type_align+0x224>
     f14:	ldr	x8, [sp, #8]
     f18:	mov	x21, x0
     f1c:	ldr	w0, [x0, #4]
     f20:	ldr	x8, [x8]
     f24:	ldr	x8, [x8]
     f28:	blr	x8
     f2c:	sub	w8, w0, #0x3
     f30:	cmp	w8, #0x5
     f34:	b.hi	fa8 <ctf_type_align+0xd0>  // b.pmore
     f38:	adrp	x9, 0 <ctf_type_isparent>
     f3c:	add	x9, x9, #0x0
     f40:	adr	x10, f50 <ctf_type_align+0x78>
     f44:	ldrb	w11, [x9, x8]
     f48:	add	x10, x10, x11, lsl #2
     f4c:	br	x10
     f50:	ldr	x8, [sp, #8]
     f54:	ldr	x8, [x8, #488]
     f58:	ldr	x19, [x8, #16]
     f5c:	b	1134 <ctf_type_align+0x25c>
     f60:	mov	w20, w0
     f64:	mov	x0, x22
     f68:	mov	x1, x19
     f6c:	bl	0 <ctf_dynamic_type>
     f70:	cbz	x0, 1028 <ctf_type_align+0x150>
     f74:	ldr	x21, [x0, #56]
     f78:	cbz	x21, 10b4 <ctf_type_align+0x1dc>
     f7c:	mov	x19, xzr
     f80:	ldr	x0, [sp, #8]
     f84:	ldr	x1, [x21, #24]
     f88:	bl	ed8 <ctf_type_align>
     f8c:	cmp	x19, x0
     f90:	csel	x19, x19, x0, hi  // hi = pmore
     f94:	cmp	w20, #0x6
     f98:	b.eq	1134 <ctf_type_align+0x25c>  // b.none
     f9c:	ldr	x21, [x21, #8]
     fa0:	cbnz	x21, f80 <ctf_type_align+0xa8>
     fa4:	b	1134 <ctf_type_align+0x25c>
     fa8:	ldr	x0, [sp, #8]
     fac:	mov	x1, x21
     fb0:	mov	x2, xzr
     fb4:	mov	x3, xzr
     fb8:	ldr	x8, [x0]
     fbc:	ldr	x8, [x8, #24]
     fc0:	blr	x8
     fc4:	b	1130 <ctf_type_align+0x258>
     fc8:	ldr	x21, [sp, #8]
     fcc:	sub	x0, x29, #0x8
     fd0:	mov	x1, x19
     fd4:	stur	x21, [x29, #-8]
     fd8:	bl	0 <ctf_lookup_by_id>
     fdc:	cbz	x0, 10fc <ctf_type_align+0x224>
     fe0:	ldur	x8, [x29, #-8]
     fe4:	mov	x20, x0
     fe8:	ldr	w0, [x0, #4]
     fec:	ldr	x8, [x8]
     ff0:	ldr	x8, [x8]
     ff4:	blr	x8
     ff8:	cmp	w0, #0x4
     ffc:	b.ne	10ec <ctf_type_align+0x214>  // b.any
    1000:	mov	x0, x21
    1004:	mov	x1, x19
    1008:	bl	0 <ctf_dynamic_type>
    100c:	cbz	x0, 1104 <ctf_type_align+0x22c>
    1010:	ldr	x1, [x0, #48]
    1014:	b	1128 <ctf_type_align+0x250>
    1018:	ldr	x8, [sp, #8]
    101c:	ldr	x8, [x8, #488]
    1020:	ldr	x19, [x8, #40]
    1024:	b	1134 <ctf_type_align+0x25c>
    1028:	ldr	x8, [sp, #8]
    102c:	ldr	w0, [x21, #4]
    1030:	ldr	x8, [x8]
    1034:	ldr	x8, [x8, #16]
    1038:	blr	x8
    103c:	ldr	x8, [sp, #8]
    1040:	mov	w19, w0
    1044:	sub	x2, x29, #0x8
    1048:	add	x3, sp, #0x10
    104c:	ldr	x9, [x8]
    1050:	mov	x0, x8
    1054:	mov	x1, x21
    1058:	ldr	x9, [x9, #24]
    105c:	blr	x9
    1060:	ldur	x9, [x29, #-8]
    1064:	ldr	x8, [sp, #16]
    1068:	cmp	w19, #0x0
    106c:	cset	w10, ne  // ne = any
    1070:	cmp	w20, #0x6
    1074:	csel	w20, w10, w19, eq  // eq = none
    1078:	mov	w10, #0x1fffffff            	// #536870911
    107c:	cmp	x9, x10
    1080:	b.gt	10bc <ctf_type_align+0x1e4>
    1084:	mov	x19, xzr
    1088:	cbz	w20, 1134 <ctf_type_align+0x25c>
    108c:	add	x8, x8, x21
    1090:	add	x21, x8, #0x8
    1094:	ldr	x0, [sp, #8]
    1098:	ldr	w1, [x21], #12
    109c:	bl	ed8 <ctf_type_align>
    10a0:	cmp	x19, x0
    10a4:	csel	x19, x19, x0, hi  // hi = pmore
    10a8:	subs	w20, w20, #0x1
    10ac:	b.ne	1094 <ctf_type_align+0x1bc>  // b.any
    10b0:	b	1134 <ctf_type_align+0x25c>
    10b4:	mov	x19, xzr
    10b8:	b	1134 <ctf_type_align+0x25c>
    10bc:	mov	x19, xzr
    10c0:	cbz	w20, 1134 <ctf_type_align+0x25c>
    10c4:	add	x8, x8, x21
    10c8:	add	x21, x8, #0x8
    10cc:	ldr	x0, [sp, #8]
    10d0:	ldr	w1, [x21], #16
    10d4:	bl	ed8 <ctf_type_align>
    10d8:	cmp	x19, x0
    10dc:	csel	x19, x19, x0, hi  // hi = pmore
    10e0:	subs	w20, w20, #0x1
    10e4:	b.ne	10cc <ctf_type_align+0x1f4>  // b.any
    10e8:	b	1134 <ctf_type_align+0x25c>
    10ec:	mov	w1, #0x3ff                 	// #1023
    10f0:	mov	x0, x21
    10f4:	bl	0 <ctf_set_errno>
    10f8:	tbz	w0, #31, 1128 <ctf_type_align+0x250>
    10fc:	mov	x19, #0xffffffffffffffff    	// #-1
    1100:	b	1134 <ctf_type_align+0x25c>
    1104:	ldur	x0, [x29, #-8]
    1108:	add	x3, sp, #0x10
    110c:	mov	x1, x20
    1110:	mov	x2, xzr
    1114:	ldr	x8, [x0]
    1118:	ldr	x8, [x8, #24]
    111c:	blr	x8
    1120:	ldr	x8, [sp, #16]
    1124:	ldr	w1, [x8, x20]
    1128:	ldr	x0, [sp, #8]
    112c:	bl	ed8 <ctf_type_align>
    1130:	mov	x19, x0
    1134:	mov	x0, x19
    1138:	ldp	x20, x19, [sp, #64]
    113c:	ldp	x22, x21, [sp, #48]
    1140:	ldp	x29, x30, [sp, #32]
    1144:	add	sp, sp, #0x50
    1148:	ret

000000000000114c <ctf_type_kind_unsliced>:
    114c:	sub	sp, sp, #0x20
    1150:	str	x0, [sp, #8]
    1154:	add	x0, sp, #0x8
    1158:	stp	x29, x30, [sp, #16]
    115c:	add	x29, sp, #0x10
    1160:	bl	0 <ctf_lookup_by_id>
    1164:	cbz	x0, 1180 <ctf_type_kind_unsliced+0x34>
    1168:	ldr	x8, [sp, #8]
    116c:	ldr	w0, [x0, #4]
    1170:	ldr	x8, [x8]
    1174:	ldr	x8, [x8]
    1178:	blr	x8
    117c:	b	1184 <ctf_type_kind_unsliced+0x38>
    1180:	mov	w0, #0xffffffff            	// #-1
    1184:	ldp	x29, x30, [sp, #16]
    1188:	add	sp, sp, #0x20
    118c:	ret

0000000000001190 <ctf_type_kind>:
    1190:	sub	sp, sp, #0x30
    1194:	stp	x20, x19, [sp, #32]
    1198:	mov	x19, x0
    119c:	str	x0, [sp, #8]
    11a0:	add	x0, sp, #0x8
    11a4:	stp	x29, x30, [sp, #16]
    11a8:	add	x29, sp, #0x10
    11ac:	mov	x20, x1
    11b0:	bl	0 <ctf_lookup_by_id>
    11b4:	cbz	x0, 1240 <ctf_type_kind+0xb0>
    11b8:	ldr	x8, [sp, #8]
    11bc:	ldr	w0, [x0, #4]
    11c0:	ldr	x8, [x8]
    11c4:	ldr	x8, [x8]
    11c8:	blr	x8
    11cc:	tbnz	w0, #31, 1240 <ctf_type_kind+0xb0>
    11d0:	cmp	w0, #0xe
    11d4:	b.ne	1244 <ctf_type_kind+0xb4>  // b.any
    11d8:	add	x0, sp, #0x8
    11dc:	mov	x1, x20
    11e0:	str	x19, [sp, #8]
    11e4:	bl	0 <ctf_lookup_by_id>
    11e8:	cbz	x0, 1240 <ctf_type_kind+0xb0>
    11ec:	ldr	x8, [sp, #8]
    11f0:	mov	x20, x0
    11f4:	ldr	w0, [x0, #4]
    11f8:	ldr	x8, [x8]
    11fc:	ldr	x8, [x8]
    1200:	blr	x8
    1204:	sub	w8, w0, #0xa
    1208:	cmp	w8, #0x4
    120c:	b.cs	1254 <ctf_type_kind+0xc4>  // b.hs, b.nlast
    1210:	ldr	w8, [x20, #8]
    1214:	mov	w1, w8
    1218:	add	x0, sp, #0x8
    121c:	str	x19, [sp, #8]
    1220:	bl	0 <ctf_lookup_by_id>
    1224:	cbz	x0, 1240 <ctf_type_kind+0xb0>
    1228:	ldr	x8, [sp, #8]
    122c:	ldr	w0, [x0, #4]
    1230:	ldr	x8, [x8]
    1234:	ldr	x8, [x8]
    1238:	blr	x8
    123c:	b	1244 <ctf_type_kind+0xb4>
    1240:	mov	w0, #0xffffffff            	// #-1
    1244:	ldp	x20, x19, [sp, #32]
    1248:	ldp	x29, x30, [sp, #16]
    124c:	add	sp, sp, #0x30
    1250:	ret
    1254:	cmp	w0, #0xe
    1258:	b.eq	1280 <ctf_type_kind+0xf0>  // b.none
    125c:	cmp	w0, #0x3
    1260:	b.eq	1210 <ctf_type_kind+0x80>  // b.none
    1264:	mov	w1, #0x400                 	// #1024
    1268:	mov	x0, x19
    126c:	bl	0 <ctf_set_errno>
    1270:	mov	x1, x0
    1274:	cmn	x0, #0x1
    1278:	b.ne	1218 <ctf_type_kind+0x88>  // b.any
    127c:	b	1244 <ctf_type_kind+0xb4>
    1280:	ldr	x0, [sp, #8]
    1284:	mov	x3, sp
    1288:	mov	x1, x20
    128c:	mov	x2, xzr
    1290:	ldr	x8, [x0]
    1294:	ldr	x8, [x8, #24]
    1298:	blr	x8
    129c:	ldr	x8, [sp]
    12a0:	ldr	w8, [x8, x20]
    12a4:	b	1214 <ctf_type_kind+0x84>

00000000000012a8 <ctf_type_pointer>:
    12a8:	sub	sp, sp, #0x30
    12ac:	stp	x20, x19, [sp, #32]
    12b0:	mov	x19, x0
    12b4:	str	x0, [sp, #8]
    12b8:	add	x0, sp, #0x8
    12bc:	stp	x29, x30, [sp, #16]
    12c0:	add	x29, sp, #0x10
    12c4:	mov	x20, x1
    12c8:	bl	0 <ctf_lookup_by_id>
    12cc:	cbz	x0, 1300 <ctf_type_pointer+0x58>
    12d0:	ldr	x0, [sp, #8]
    12d4:	ldr	w9, [x0, #544]
    12d8:	ldr	x8, [x0, #448]
    12dc:	and	x10, x9, x20
    12e0:	ldr	w8, [x8, x10, lsl #2]
    12e4:	cbz	w8, 1308 <ctf_type_pointer+0x60>
    12e8:	ldrb	w10, [x0, #552]
    12ec:	add	w9, w9, #0x1
    12f0:	sbfx	w10, w10, #0, #1
    12f4:	and	w9, w10, w9
    12f8:	orr	x0, x9, x8
    12fc:	b	1368 <ctf_type_pointer+0xc0>
    1300:	mov	x0, #0xffffffffffffffff    	// #-1
    1304:	b	1368 <ctf_type_pointer+0xc0>
    1308:	mov	x1, x20
    130c:	bl	1a8 <ctf_type_resolve>
    1310:	cmn	x0, #0x1
    1314:	b.eq	135c <ctf_type_pointer+0xb4>  // b.none
    1318:	mov	x20, x0
    131c:	add	x0, sp, #0x8
    1320:	mov	x1, x20
    1324:	bl	0 <ctf_lookup_by_id>
    1328:	cbz	x0, 135c <ctf_type_pointer+0xb4>
    132c:	ldr	x8, [sp, #8]
    1330:	ldr	w10, [x8, #544]
    1334:	ldr	x9, [x8, #448]
    1338:	and	x11, x20, x10
    133c:	ldr	w9, [x9, x11, lsl #2]
    1340:	cbz	w9, 135c <ctf_type_pointer+0xb4>
    1344:	ldrb	w8, [x8, #552]
    1348:	add	w10, w10, #0x1
    134c:	sbfx	w8, w8, #0, #1
    1350:	and	w8, w8, w10
    1354:	orr	x0, x8, x9
    1358:	b	1368 <ctf_type_pointer+0xc0>
    135c:	mov	w1, #0x402                 	// #1026
    1360:	mov	x0, x19
    1364:	bl	0 <ctf_set_errno>
    1368:	ldp	x20, x19, [sp, #32]
    136c:	ldp	x29, x30, [sp, #16]
    1370:	add	sp, sp, #0x30
    1374:	ret

0000000000001378 <ctf_type_encoding>:
    1378:	sub	sp, sp, #0x50
    137c:	stp	x29, x30, [sp, #32]
    1380:	add	x29, sp, #0x20
    1384:	stp	x20, x19, [sp, #64]
    1388:	mov	x20, x0
    138c:	stur	x0, [x29, #-8]
    1390:	sub	x0, x29, #0x8
    1394:	stp	x22, x21, [sp, #48]
    1398:	mov	x19, x2
    139c:	mov	x22, x1
    13a0:	bl	0 <ctf_lookup_by_id>
    13a4:	cbz	x0, 13f8 <ctf_type_encoding+0x80>
    13a8:	mov	x21, x0
    13ac:	mov	x0, x20
    13b0:	mov	x1, x22
    13b4:	bl	0 <ctf_dynamic_type>
    13b8:	ldur	x8, [x29, #-8]
    13bc:	ldr	x9, [x8]
    13c0:	cbz	x0, 1400 <ctf_type_encoding+0x88>
    13c4:	mov	x22, x0
    13c8:	ldr	x8, [x9]
    13cc:	ldr	w0, [x21, #4]
    13d0:	blr	x8
    13d4:	sub	w8, w0, #0x1
    13d8:	cmp	w8, #0x2
    13dc:	b.cs	1468 <ctf_type_encoding+0xf0>  // b.hs, b.nlast
    13e0:	ldr	w8, [x22, #56]
    13e4:	ldr	x9, [x22, #48]
    13e8:	mov	w0, wzr
    13ec:	str	w8, [x19, #8]
    13f0:	str	x9, [x19]
    13f4:	b	14e0 <ctf_type_encoding+0x168>
    13f8:	mov	w0, #0xffffffff            	// #-1
    13fc:	b	14e0 <ctf_type_encoding+0x168>
    1400:	ldr	x9, [x9, #24]
    1404:	add	x3, sp, #0x10
    1408:	mov	x0, x8
    140c:	mov	x1, x21
    1410:	mov	x2, xzr
    1414:	blr	x9
    1418:	ldur	x8, [x29, #-8]
    141c:	ldr	w0, [x21, #4]
    1420:	ldr	x8, [x8]
    1424:	ldr	x8, [x8]
    1428:	blr	x8
    142c:	cmp	w0, #0xe
    1430:	b.eq	14a8 <ctf_type_encoding+0x130>  // b.none
    1434:	cmp	w0, #0x2
    1438:	b.eq	1444 <ctf_type_encoding+0xcc>  // b.none
    143c:	cmp	w0, #0x1
    1440:	b.ne	1498 <ctf_type_encoding+0x120>  // b.any
    1444:	ldr	x8, [sp, #16]
    1448:	mov	w0, wzr
    144c:	ldr	w8, [x8, x21]
    1450:	lsr	w9, w8, #24
    1454:	ubfx	w10, w8, #16, #8
    1458:	and	w8, w8, #0xffff
    145c:	stp	w9, w10, [x19]
    1460:	str	w8, [x19, #8]
    1464:	b	14e0 <ctf_type_encoding+0x168>
    1468:	cmp	w0, #0xe
    146c:	b.ne	1498 <ctf_type_encoding+0x120>  // b.any
    1470:	ldur	x0, [x29, #-8]
    1474:	ldr	w1, [x22, #48]
    1478:	mov	x2, sp
    147c:	bl	1378 <ctf_type_encoding>
    1480:	ldr	w8, [sp]
    1484:	mov	w0, wzr
    1488:	str	w8, [x19]
    148c:	ldrh	w8, [x22, #52]
    1490:	ldrh	w9, [x22, #54]
    1494:	b	14d4 <ctf_type_encoding+0x15c>
    1498:	mov	w1, #0x3fe                 	// #1022
    149c:	mov	x0, x20
    14a0:	bl	0 <ctf_set_errno>
    14a4:	b	14e0 <ctf_type_encoding+0x168>
    14a8:	ldr	x8, [sp, #16]
    14ac:	ldur	x0, [x29, #-8]
    14b0:	mov	x2, sp
    14b4:	add	x20, x8, x21
    14b8:	ldr	w1, [x20]
    14bc:	bl	1378 <ctf_type_encoding>
    14c0:	ldr	w8, [sp]
    14c4:	mov	w0, wzr
    14c8:	str	w8, [x19]
    14cc:	ldrh	w8, [x20, #4]
    14d0:	ldrh	w9, [x20, #6]
    14d4:	fmov	s0, w8
    14d8:	mov	v0.s[1], w9
    14dc:	stur	d0, [x19, #4]
    14e0:	ldp	x20, x19, [sp, #64]
    14e4:	ldp	x22, x21, [sp, #48]
    14e8:	ldp	x29, x30, [sp, #32]
    14ec:	add	sp, sp, #0x50
    14f0:	ret

00000000000014f4 <ctf_type_cmp>:
    14f4:	cmp	x1, x3
    14f8:	mov	x8, x0
    14fc:	cset	w9, hi  // hi = pmore
    1500:	csinv	w0, w9, wzr, cs  // cs = hs, nlast
    1504:	cmp	x8, x2
    1508:	b.eq	1550 <ctf_type_cmp+0x5c>  // b.none
    150c:	ldr	w9, [x8, #544]
    1510:	cmp	x9, x1
    1514:	b.cc	1524 <ctf_type_cmp+0x30>  // b.lo, b.ul, b.last
    1518:	ldr	x9, [x8, #512]
    151c:	cmp	x9, #0x0
    1520:	csel	x8, x8, x9, eq  // eq = none
    1524:	ldr	w9, [x2, #544]
    1528:	cmp	x9, x3
    152c:	b.cc	153c <ctf_type_cmp+0x48>  // b.lo, b.ul, b.last
    1530:	ldr	x9, [x2, #512]
    1534:	cmp	x9, #0x0
    1538:	csel	x2, x2, x9, eq  // eq = none
    153c:	cmp	x8, x2
    1540:	b.cs	154c <ctf_type_cmp+0x58>  // b.hs, b.nlast
    1544:	mov	w0, #0xffffffff            	// #-1
    1548:	ret
    154c:	csinc	w0, w0, wzr, ls  // ls = plast
    1550:	ret

0000000000001554 <ctf_type_compat>:
    1554:	sub	sp, sp, #0x80
    1558:	cmp	x1, x3
    155c:	cset	w8, hi  // hi = pmore
    1560:	stp	x29, x30, [sp, #48]
    1564:	stp	x22, x21, [sp, #96]
    1568:	stp	x20, x19, [sp, #112]
    156c:	add	x29, sp, #0x30
    1570:	mov	x19, x3
    1574:	mov	x21, x2
    1578:	mov	x22, x0
    157c:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
    1580:	cmp	x0, x2
    1584:	str	x25, [sp, #64]
    1588:	stp	x24, x23, [sp, #80]
    158c:	str	x0, [x29, #24]
    1590:	stur	x2, [x29, #-8]
    1594:	b.eq	15e0 <ctf_type_compat+0x8c>  // b.none
    1598:	ldr	w9, [x22, #544]
    159c:	cmp	x9, x1
    15a0:	mov	x9, x22
    15a4:	b.cc	15b4 <ctf_type_compat+0x60>  // b.lo, b.ul, b.last
    15a8:	ldr	x9, [x22, #512]
    15ac:	cmp	x9, #0x0
    15b0:	csel	x9, x22, x9, eq  // eq = none
    15b4:	ldr	w10, [x21, #544]
    15b8:	cmp	x10, x19
    15bc:	mov	x10, x21
    15c0:	b.cc	15d0 <ctf_type_compat+0x7c>  // b.lo, b.ul, b.last
    15c4:	ldr	x10, [x21, #512]
    15c8:	cmp	x10, #0x0
    15cc:	csel	x10, x21, x10, eq  // eq = none
    15d0:	cbnz	w8, 15e4 <ctf_type_compat+0x90>
    15d4:	cmp	x9, x10
    15d8:	b.eq	16a0 <ctf_type_compat+0x14c>  // b.none
    15dc:	b	15e4 <ctf_type_compat+0x90>
    15e0:	cbz	w8, 16a0 <ctf_type_compat+0x14c>
    15e4:	mov	x0, x22
    15e8:	bl	1a8 <ctf_type_resolve>
    15ec:	mov	x20, x0
    15f0:	mov	x0, x22
    15f4:	mov	x1, x20
    15f8:	bl	1190 <ctf_type_kind>
    15fc:	mov	w22, w0
    1600:	mov	x0, x21
    1604:	mov	x1, x19
    1608:	bl	1a8 <ctf_type_resolve>
    160c:	mov	x19, x0
    1610:	mov	x0, x21
    1614:	mov	x1, x19
    1618:	bl	1190 <ctf_type_kind>
    161c:	mov	w23, w0
    1620:	add	x0, x29, #0x18
    1624:	mov	x1, x20
    1628:	bl	0 <ctf_lookup_by_id>
    162c:	mov	x25, x0
    1630:	sub	x0, x29, #0x8
    1634:	mov	x1, x19
    1638:	bl	0 <ctf_lookup_by_id>
    163c:	mov	w21, wzr
    1640:	cbz	x25, 1680 <ctf_type_compat+0x12c>
    1644:	mov	x24, x0
    1648:	cbz	x0, 1680 <ctf_type_compat+0x12c>
    164c:	ldr	x0, [x29, #24]
    1650:	ldr	w1, [x25]
    1654:	bl	0 <ctf_strptr>
    1658:	ldur	x8, [x29, #-8]
    165c:	ldr	w1, [x24]
    1660:	mov	x21, x0
    1664:	mov	x0, x8
    1668:	bl	0 <ctf_strptr>
    166c:	mov	x1, x0
    1670:	mov	x0, x21
    1674:	bl	0 <strcmp>
    1678:	cmp	w0, #0x0
    167c:	cset	w21, eq  // eq = none
    1680:	cmp	w22, #0x8
    1684:	b.ne	1690 <ctf_type_compat+0x13c>  // b.any
    1688:	cmp	w23, #0x1
    168c:	b.eq	16a0 <ctf_type_compat+0x14c>  // b.none
    1690:	subs	w8, w22, #0x1
    1694:	b.ne	16c4 <ctf_type_compat+0x170>  // b.any
    1698:	cmp	w23, #0x8
    169c:	b.ne	16c4 <ctf_type_compat+0x170>  // b.any
    16a0:	mov	w21, #0x1                   	// #1
    16a4:	mov	w0, w21
    16a8:	ldp	x20, x19, [sp, #112]
    16ac:	ldp	x22, x21, [sp, #96]
    16b0:	ldp	x24, x23, [sp, #80]
    16b4:	ldr	x25, [sp, #64]
    16b8:	ldp	x29, x30, [sp, #48]
    16bc:	add	sp, sp, #0x80
    16c0:	ret
    16c4:	cmp	w22, w23
    16c8:	b.ne	1a7c <ctf_type_compat+0x528>  // b.any
    16cc:	cmp	w8, #0x8
    16d0:	b.hi	1a7c <ctf_type_compat+0x528>  // b.pmore
    16d4:	adrp	x9, 0 <ctf_type_isparent>
    16d8:	add	x9, x9, #0x0
    16dc:	adr	x10, 16a4 <ctf_type_compat+0x150>
    16e0:	ldrb	w11, [x9, x8]
    16e4:	add	x10, x10, x11, lsl #2
    16e8:	br	x10
    16ec:	ldr	x0, [x29, #24]
    16f0:	add	x2, sp, #0x18
    16f4:	mov	x1, x20
    16f8:	str	wzr, [sp, #32]
    16fc:	str	xzr, [sp, #24]
    1700:	str	xzr, [sp, #8]
    1704:	str	wzr, [sp, #16]
    1708:	bl	1378 <ctf_type_encoding>
    170c:	mov	w21, wzr
    1710:	cbnz	w0, 16a4 <ctf_type_compat+0x150>
    1714:	ldur	x0, [x29, #-8]
    1718:	add	x2, sp, #0x8
    171c:	mov	x1, x19
    1720:	bl	1378 <ctf_type_encoding>
    1724:	cbnz	w0, 1a7c <ctf_type_compat+0x528>
    1728:	ldr	x8, [sp, #24]
    172c:	ldr	x9, [sp, #8]
    1730:	ldr	w10, [sp, #32]
    1734:	ldr	w11, [sp, #16]
    1738:	eor	x8, x8, x9
    173c:	eor	w9, w10, w11
    1740:	orr	x8, x8, x9
    1744:	cmp	x8, #0x0
    1748:	cset	w21, eq  // eq = none
    174c:	b	16a4 <ctf_type_compat+0x150>
    1750:	cbz	w21, 16a4 <ctf_type_compat+0x150>
    1754:	ldr	x0, [x29, #24]
    1758:	mov	x1, x20
    175c:	bl	c54 <ctf_type_size>
    1760:	ldur	x8, [x29, #-8]
    1764:	mov	x20, x0
    1768:	mov	x1, x19
    176c:	mov	x0, x8
    1770:	bl	c54 <ctf_type_size>
    1774:	cmp	x20, x0
    1778:	cset	w21, eq  // eq = none
    177c:	b	16a4 <ctf_type_compat+0x150>
    1780:	ldr	x21, [x29, #24]
    1784:	add	x0, sp, #0x18
    1788:	mov	x1, x20
    178c:	str	x21, [sp, #24]
    1790:	bl	0 <ctf_lookup_by_id>
    1794:	cbz	x0, 1880 <ctf_type_compat+0x32c>
    1798:	ldr	x8, [sp, #24]
    179c:	mov	x20, x0
    17a0:	ldr	w0, [x0, #4]
    17a4:	ldr	x8, [x8]
    17a8:	ldr	x8, [x8]
    17ac:	blr	x8
    17b0:	sub	w8, w0, #0xa
    17b4:	cmp	w8, #0x4
    17b8:	b.cc	17cc <ctf_type_compat+0x278>  // b.lo, b.ul, b.last
    17bc:	cmp	w0, #0xe
    17c0:	b.eq	1930 <ctf_type_compat+0x3dc>  // b.none
    17c4:	cmp	w0, #0x3
    17c8:	b.ne	1958 <ctf_type_compat+0x404>  // b.any
    17cc:	ldr	w20, [x20, #8]
    17d0:	b	1968 <ctf_type_compat+0x414>
    17d4:	ldr	x22, [x29, #24]
    17d8:	add	x0, sp, #0x18
    17dc:	mov	x1, x20
    17e0:	str	x22, [sp, #24]
    17e4:	bl	0 <ctf_lookup_by_id>
    17e8:	mov	x21, x0
    17ec:	cbz	x0, 16a4 <ctf_type_compat+0x150>
    17f0:	ldr	x8, [sp, #24]
    17f4:	ldr	w0, [x21, #4]
    17f8:	ldr	x8, [x8]
    17fc:	ldr	x8, [x8]
    1800:	blr	x8
    1804:	cmp	w0, #0x4
    1808:	b.ne	1888 <ctf_type_compat+0x334>  // b.any
    180c:	mov	x0, x22
    1810:	mov	x1, x20
    1814:	bl	0 <ctf_dynamic_type>
    1818:	cbz	x0, 189c <ctf_type_compat+0x348>
    181c:	add	x8, x0, #0x40
    1820:	ldp	x21, x20, [x0, #48]
    1824:	b	18c4 <ctf_type_compat+0x370>
    1828:	ldr	x0, [x29, #24]
    182c:	add	x2, sp, #0x18
    1830:	mov	x1, x20
    1834:	bl	1378 <ctf_type_encoding>
    1838:	ldur	x8, [x29, #-8]
    183c:	mov	w20, w0
    1840:	add	x2, sp, #0x8
    1844:	mov	x1, x19
    1848:	mov	x0, x8
    184c:	bl	1378 <ctf_type_encoding>
    1850:	cmp	w20, w0
    1854:	b.ne	1a7c <ctf_type_compat+0x528>  // b.any
    1858:	cbnz	w20, 16a4 <ctf_type_compat+0x150>
    185c:	ldr	x8, [sp, #24]
    1860:	ldr	x9, [sp, #8]
    1864:	ldr	w10, [sp, #32]
    1868:	ldr	w11, [sp, #16]
    186c:	eor	x8, x8, x9
    1870:	eor	w9, w10, w11
    1874:	orr	x8, x8, x9
    1878:	cbnz	x8, 1a7c <ctf_type_compat+0x528>
    187c:	b	16a4 <ctf_type_compat+0x150>
    1880:	mov	x20, #0xffffffffffffffff    	// #-1
    1884:	b	1968 <ctf_type_compat+0x414>
    1888:	mov	w1, #0x3ff                 	// #1023
    188c:	mov	x0, x22
    1890:	bl	0 <ctf_set_errno>
    1894:	cbnz	w0, 1a7c <ctf_type_compat+0x528>
    1898:	b	18c8 <ctf_type_compat+0x374>
    189c:	ldr	x0, [sp, #24]
    18a0:	add	x3, sp, #0x8
    18a4:	mov	x1, x21
    18a8:	mov	x2, xzr
    18ac:	ldr	x8, [x0]
    18b0:	ldr	x8, [x8, #24]
    18b4:	blr	x8
    18b8:	ldr	x8, [sp, #8]
    18bc:	add	x8, x8, x21
    18c0:	ldp	w21, w20, [x8], #8
    18c4:	ldr	w24, [x8]
    18c8:	ldur	x23, [x29, #-8]
    18cc:	add	x0, sp, #0x18
    18d0:	mov	x1, x19
    18d4:	str	x23, [sp, #24]
    18d8:	bl	0 <ctf_lookup_by_id>
    18dc:	cbz	x0, 1a7c <ctf_type_compat+0x528>
    18e0:	ldr	x8, [sp, #24]
    18e4:	mov	x22, x0
    18e8:	ldr	w0, [x0, #4]
    18ec:	ldr	x8, [x8]
    18f0:	ldr	x8, [x8]
    18f4:	blr	x8
    18f8:	cmp	w0, #0x4
    18fc:	b.ne	191c <ctf_type_compat+0x3c8>  // b.any
    1900:	mov	x0, x23
    1904:	mov	x1, x19
    1908:	bl	0 <ctf_dynamic_type>
    190c:	cbz	x0, 1a14 <ctf_type_compat+0x4c0>
    1910:	add	x8, x0, #0x40
    1914:	ldp	x3, x19, [x0, #48]
    1918:	b	1a3c <ctf_type_compat+0x4e8>
    191c:	mov	w1, #0x3ff                 	// #1023
    1920:	mov	x0, x23
    1924:	bl	0 <ctf_set_errno>
    1928:	cbnz	w0, 1a7c <ctf_type_compat+0x528>
    192c:	b	1a40 <ctf_type_compat+0x4ec>
    1930:	ldr	x0, [sp, #24]
    1934:	add	x3, sp, #0x8
    1938:	mov	x1, x20
    193c:	mov	x2, xzr
    1940:	ldr	x8, [x0]
    1944:	ldr	x8, [x8, #24]
    1948:	blr	x8
    194c:	ldr	x8, [sp, #8]
    1950:	ldr	w20, [x8, x20]
    1954:	b	1968 <ctf_type_compat+0x414>
    1958:	mov	w1, #0x400                 	// #1024
    195c:	mov	x0, x21
    1960:	bl	0 <ctf_set_errno>
    1964:	mov	x20, x0
    1968:	ldur	x22, [x29, #-8]
    196c:	add	x0, sp, #0x18
    1970:	mov	x1, x19
    1974:	str	x22, [sp, #24]
    1978:	bl	0 <ctf_lookup_by_id>
    197c:	cbz	x0, 19bc <ctf_type_compat+0x468>
    1980:	ldr	x8, [sp, #24]
    1984:	mov	x19, x0
    1988:	ldr	w0, [x0, #4]
    198c:	ldr	x8, [x8]
    1990:	ldr	x8, [x8]
    1994:	blr	x8
    1998:	sub	w8, w0, #0xa
    199c:	cmp	w8, #0x4
    19a0:	b.cc	19b4 <ctf_type_compat+0x460>  // b.lo, b.ul, b.last
    19a4:	cmp	w0, #0xe
    19a8:	b.eq	19c4 <ctf_type_compat+0x470>  // b.none
    19ac:	cmp	w0, #0x3
    19b0:	b.ne	19ec <ctf_type_compat+0x498>  // b.any
    19b4:	ldr	w3, [x19, #8]
    19b8:	b	19fc <ctf_type_compat+0x4a8>
    19bc:	mov	x3, #0xffffffffffffffff    	// #-1
    19c0:	b	19fc <ctf_type_compat+0x4a8>
    19c4:	ldr	x0, [sp, #24]
    19c8:	add	x3, sp, #0x8
    19cc:	mov	x1, x19
    19d0:	mov	x2, xzr
    19d4:	ldr	x8, [x0]
    19d8:	ldr	x8, [x8, #24]
    19dc:	blr	x8
    19e0:	ldr	x8, [sp, #8]
    19e4:	ldr	w3, [x8, x19]
    19e8:	b	19fc <ctf_type_compat+0x4a8>
    19ec:	mov	w1, #0x400                 	// #1024
    19f0:	mov	x0, x22
    19f4:	bl	0 <ctf_set_errno>
    19f8:	mov	x3, x0
    19fc:	mov	x0, x21
    1a00:	mov	x1, x20
    1a04:	mov	x2, x22
    1a08:	bl	1554 <ctf_type_compat>
    1a0c:	mov	w21, w0
    1a10:	b	16a4 <ctf_type_compat+0x150>
    1a14:	ldr	x0, [sp, #24]
    1a18:	add	x3, sp, #0x8
    1a1c:	mov	x1, x22
    1a20:	mov	x2, xzr
    1a24:	ldr	x8, [x0]
    1a28:	ldr	x8, [x8, #24]
    1a2c:	blr	x8
    1a30:	ldr	x8, [sp, #8]
    1a34:	add	x8, x8, x22
    1a38:	ldp	w3, w19, [x8], #8
    1a3c:	ldr	w8, [x8]
    1a40:	cmp	w24, w8
    1a44:	b.ne	1a7c <ctf_type_compat+0x528>  // b.any
    1a48:	ldr	x0, [x29, #24]
    1a4c:	ldur	x2, [x29, #-8]
    1a50:	mov	x1, x21
    1a54:	bl	1554 <ctf_type_compat>
    1a58:	cbz	w0, 1a7c <ctf_type_compat+0x528>
    1a5c:	ldr	x0, [x29, #24]
    1a60:	ldur	x2, [x29, #-8]
    1a64:	mov	x1, x20
    1a68:	mov	x3, x19
    1a6c:	bl	1554 <ctf_type_compat>
    1a70:	cmp	w0, #0x0
    1a74:	cset	w21, ne  // ne = any
    1a78:	b	16a4 <ctf_type_compat+0x150>
    1a7c:	mov	w21, wzr
    1a80:	b	16a4 <ctf_type_compat+0x150>

0000000000001a84 <ctf_member_info>:
    1a84:	sub	sp, sp, #0x60
    1a88:	stp	x29, x30, [sp, #32]
    1a8c:	add	x29, sp, #0x20
    1a90:	stp	x24, x23, [sp, #48]
    1a94:	stp	x22, x21, [sp, #64]
    1a98:	stp	x20, x19, [sp, #80]
    1a9c:	mov	x19, x3
    1aa0:	mov	x21, x2
    1aa4:	mov	x20, x0
    1aa8:	stur	x0, [x29, #-8]
    1aac:	bl	1a8 <ctf_type_resolve>
    1ab0:	cmn	x0, #0x1
    1ab4:	b.eq	1bf0 <ctf_member_info+0x16c>  // b.none
    1ab8:	mov	x23, x0
    1abc:	sub	x0, x29, #0x8
    1ac0:	mov	x1, x23
    1ac4:	bl	0 <ctf_lookup_by_id>
    1ac8:	cbz	x0, 1b40 <ctf_member_info+0xbc>
    1acc:	mov	x22, x0
    1ad0:	ldur	x0, [x29, #-8]
    1ad4:	add	x2, sp, #0x10
    1ad8:	add	x3, sp, #0x8
    1adc:	mov	x1, x22
    1ae0:	ldr	x8, [x0]
    1ae4:	ldr	x8, [x8, #24]
    1ae8:	blr	x8
    1aec:	ldur	x8, [x29, #-8]
    1af0:	ldr	w0, [x22, #4]
    1af4:	ldr	x8, [x8]
    1af8:	ldr	x8, [x8]
    1afc:	blr	x8
    1b00:	orr	w8, w0, #0x1
    1b04:	cmp	w8, #0x7
    1b08:	b.ne	1b48 <ctf_member_info+0xc4>  // b.any
    1b0c:	ldur	x0, [x29, #-8]
    1b10:	mov	x1, x23
    1b14:	bl	0 <ctf_dynamic_type>
    1b18:	cbz	x0, 1b50 <ctf_member_info+0xcc>
    1b1c:	ldr	x22, [x0, #56]
    1b20:	cbz	x22, 1be4 <ctf_member_info+0x160>
    1b24:	ldr	x0, [x22, #16]
    1b28:	mov	x1, x21
    1b2c:	bl	0 <strcmp>
    1b30:	cbz	w0, 1bac <ctf_member_info+0x128>
    1b34:	ldr	x22, [x22, #8]
    1b38:	cbnz	x22, 1b24 <ctf_member_info+0xa0>
    1b3c:	b	1be4 <ctf_member_info+0x160>
    1b40:	mov	w0, #0xffffffff            	// #-1
    1b44:	b	1bf0 <ctf_member_info+0x16c>
    1b48:	mov	w1, #0x3fb                 	// #1019
    1b4c:	b	1be8 <ctf_member_info+0x164>
    1b50:	ldur	x8, [x29, #-8]
    1b54:	ldp	x9, x24, [sp, #8]
    1b58:	ldr	w0, [x22, #4]
    1b5c:	ldr	x8, [x8]
    1b60:	add	x23, x9, x22
    1b64:	ldr	x8, [x8, #16]
    1b68:	blr	x8
    1b6c:	mov	w8, #0x1fffffff            	// #536870911
    1b70:	cmp	x24, x8
    1b74:	mov	w22, w0
    1b78:	b.gt	1bb8 <ctf_member_info+0x134>
    1b7c:	cbz	w22, 1be4 <ctf_member_info+0x160>
    1b80:	add	x23, x23, #0x4
    1b84:	ldur	x0, [x29, #-8]
    1b88:	ldur	w1, [x23, #-4]
    1b8c:	bl	0 <ctf_strptr>
    1b90:	mov	x1, x21
    1b94:	bl	0 <strcmp>
    1b98:	cbz	w0, 1c08 <ctf_member_info+0x184>
    1b9c:	subs	w22, w22, #0x1
    1ba0:	add	x23, x23, #0xc
    1ba4:	b.ne	1b84 <ctf_member_info+0x100>  // b.any
    1ba8:	b	1be4 <ctf_member_info+0x160>
    1bac:	ldur	q0, [x22, #24]
    1bb0:	str	q0, [x19]
    1bb4:	b	1bf0 <ctf_member_info+0x16c>
    1bb8:	cbz	w22, 1be4 <ctf_member_info+0x160>
    1bbc:	add	x23, x23, #0x8
    1bc0:	ldur	x0, [x29, #-8]
    1bc4:	ldur	w1, [x23, #-8]
    1bc8:	bl	0 <ctf_strptr>
    1bcc:	mov	x1, x21
    1bd0:	bl	0 <strcmp>
    1bd4:	cbz	w0, 1c1c <ctf_member_info+0x198>
    1bd8:	subs	w22, w22, #0x1
    1bdc:	add	x23, x23, #0x10
    1be0:	b.ne	1bc0 <ctf_member_info+0x13c>  // b.any
    1be4:	mov	w1, #0x40c                 	// #1036
    1be8:	mov	x0, x20
    1bec:	bl	0 <ctf_set_errno>
    1bf0:	ldp	x20, x19, [sp, #80]
    1bf4:	ldp	x22, x21, [sp, #64]
    1bf8:	ldp	x24, x23, [sp, #48]
    1bfc:	ldp	x29, x30, [sp, #32]
    1c00:	add	sp, sp, #0x60
    1c04:	ret
    1c08:	ldr	w8, [x23, #4]
    1c0c:	str	x8, [x19]
    1c10:	ldr	w8, [x23]
    1c14:	str	x8, [x19, #8]
    1c18:	b	1bf0 <ctf_member_info+0x16c>
    1c1c:	ldr	w8, [x23]
    1c20:	str	x8, [x19]
    1c24:	ldur	w8, [x23, #-4]
    1c28:	ldr	w9, [x23, #4]
    1c2c:	bfi	x9, x8, #32, #32
    1c30:	str	x9, [x19, #8]
    1c34:	b	1bf0 <ctf_member_info+0x16c>

0000000000001c38 <ctf_enum_name>:
    1c38:	sub	sp, sp, #0x40
    1c3c:	stp	x29, x30, [sp, #16]
    1c40:	stp	x22, x21, [sp, #32]
    1c44:	stp	x20, x19, [sp, #48]
    1c48:	add	x29, sp, #0x10
    1c4c:	mov	w20, w2
    1c50:	mov	x19, x0
    1c54:	str	x0, [sp, #8]
    1c58:	bl	3d0 <ctf_type_resolve_unsliced>
    1c5c:	cmn	x0, #0x1
    1c60:	b.eq	1d30 <ctf_enum_name+0xf8>  // b.none
    1c64:	mov	x22, x0
    1c68:	add	x0, sp, #0x8
    1c6c:	mov	x1, x22
    1c70:	bl	0 <ctf_lookup_by_id>
    1c74:	cbz	x0, 1d34 <ctf_enum_name+0xfc>
    1c78:	ldr	x8, [sp, #8]
    1c7c:	mov	x21, x0
    1c80:	ldr	w0, [x0, #4]
    1c84:	ldr	x8, [x8]
    1c88:	ldr	x8, [x8]
    1c8c:	blr	x8
    1c90:	cmp	w0, #0x8
    1c94:	b.ne	1ce4 <ctf_enum_name+0xac>  // b.any
    1c98:	ldr	x0, [sp, #8]
    1c9c:	mov	x3, sp
    1ca0:	mov	x1, x21
    1ca4:	mov	x2, xzr
    1ca8:	ldr	x8, [x0]
    1cac:	ldr	x8, [x8, #24]
    1cb0:	blr	x8
    1cb4:	mov	x0, x19
    1cb8:	mov	x1, x22
    1cbc:	bl	0 <ctf_dynamic_type>
    1cc0:	cbz	x0, 1cec <ctf_enum_name+0xb4>
    1cc4:	ldr	x8, [x0, #56]
    1cc8:	cbz	x8, 1d24 <ctf_enum_name+0xec>
    1ccc:	ldr	w9, [x8, #40]
    1cd0:	cmp	w9, w20
    1cd4:	b.eq	1d48 <ctf_enum_name+0x110>  // b.none
    1cd8:	ldr	x8, [x8, #8]
    1cdc:	cbnz	x8, 1ccc <ctf_enum_name+0x94>
    1ce0:	b	1d24 <ctf_enum_name+0xec>
    1ce4:	mov	w1, #0x3fc                 	// #1020
    1ce8:	b	1d28 <ctf_enum_name+0xf0>
    1cec:	ldp	x22, x8, [sp]
    1cf0:	ldr	w0, [x21, #4]
    1cf4:	ldr	x8, [x8]
    1cf8:	ldr	x8, [x8, #16]
    1cfc:	blr	x8
    1d00:	cbz	w0, 1d24 <ctf_enum_name+0xec>
    1d04:	add	x8, x22, x21
    1d08:	add	x8, x8, #0x4
    1d0c:	ldr	w9, [x8]
    1d10:	cmp	w9, w20
    1d14:	b.eq	1d50 <ctf_enum_name+0x118>  // b.none
    1d18:	subs	w0, w0, #0x1
    1d1c:	add	x8, x8, #0x8
    1d20:	b.ne	1d0c <ctf_enum_name+0xd4>  // b.any
    1d24:	mov	w1, #0x40b                 	// #1035
    1d28:	mov	x0, x19
    1d2c:	bl	0 <ctf_set_errno>
    1d30:	mov	x0, xzr
    1d34:	ldp	x20, x19, [sp, #48]
    1d38:	ldp	x22, x21, [sp, #32]
    1d3c:	ldp	x29, x30, [sp, #16]
    1d40:	add	sp, sp, #0x40
    1d44:	ret
    1d48:	ldr	x0, [x8, #16]
    1d4c:	b	1d34 <ctf_enum_name+0xfc>
    1d50:	ldr	x0, [sp, #8]
    1d54:	ldur	w1, [x8, #-4]
    1d58:	bl	0 <ctf_strptr>
    1d5c:	b	1d34 <ctf_enum_name+0xfc>

0000000000001d60 <ctf_enum_value>:
    1d60:	sub	sp, sp, #0x50
    1d64:	stp	x29, x30, [sp, #16]
    1d68:	stp	x24, x23, [sp, #32]
    1d6c:	stp	x22, x21, [sp, #48]
    1d70:	stp	x20, x19, [sp, #64]
    1d74:	add	x29, sp, #0x10
    1d78:	mov	x19, x3
    1d7c:	mov	x21, x2
    1d80:	mov	x20, x0
    1d84:	str	x0, [sp, #8]
    1d88:	bl	3d0 <ctf_type_resolve_unsliced>
    1d8c:	cmn	x0, #0x1
    1d90:	b.eq	1e7c <ctf_enum_value+0x11c>  // b.none
    1d94:	mov	x23, x0
    1d98:	add	x0, sp, #0x8
    1d9c:	mov	x1, x23
    1da0:	bl	0 <ctf_lookup_by_id>
    1da4:	cbz	x0, 1e78 <ctf_enum_value+0x118>
    1da8:	ldr	x8, [sp, #8]
    1dac:	mov	x22, x0
    1db0:	ldr	w0, [x0, #4]
    1db4:	ldr	x8, [x8]
    1db8:	ldr	x8, [x8]
    1dbc:	blr	x8
    1dc0:	cmp	w0, #0x8
    1dc4:	b.ne	1e1c <ctf_enum_value+0xbc>  // b.any
    1dc8:	ldr	x0, [sp, #8]
    1dcc:	mov	x3, sp
    1dd0:	mov	x1, x22
    1dd4:	mov	x2, xzr
    1dd8:	ldr	x8, [x0]
    1ddc:	ldr	x8, [x8, #24]
    1de0:	blr	x8
    1de4:	ldr	x24, [sp]
    1de8:	mov	x0, x20
    1dec:	mov	x1, x23
    1df0:	bl	0 <ctf_dynamic_type>
    1df4:	cbz	x0, 1e24 <ctf_enum_value+0xc4>
    1df8:	ldr	x22, [x0, #56]
    1dfc:	cbz	x22, 1e6c <ctf_enum_value+0x10c>
    1e00:	ldr	x0, [x22, #16]
    1e04:	mov	x1, x21
    1e08:	bl	0 <strcmp>
    1e0c:	cbz	w0, 1e94 <ctf_enum_value+0x134>
    1e10:	ldr	x22, [x22, #8]
    1e14:	cbnz	x22, 1e00 <ctf_enum_value+0xa0>
    1e18:	b	1e6c <ctf_enum_value+0x10c>
    1e1c:	mov	w1, #0x3fc                 	// #1020
    1e20:	b	1e70 <ctf_enum_value+0x110>
    1e24:	ldr	x8, [sp, #8]
    1e28:	ldr	w0, [x22, #4]
    1e2c:	ldr	x8, [x8]
    1e30:	ldr	x8, [x8, #16]
    1e34:	blr	x8
    1e38:	cbz	w0, 1e6c <ctf_enum_value+0x10c>
    1e3c:	add	x8, x24, x22
    1e40:	mov	w23, w0
    1e44:	add	x22, x8, #0x4
    1e48:	ldr	x0, [sp, #8]
    1e4c:	ldur	w1, [x22, #-4]
    1e50:	bl	0 <ctf_strptr>
    1e54:	mov	x1, x21
    1e58:	bl	0 <strcmp>
    1e5c:	cbz	w0, 1ea8 <ctf_enum_value+0x148>
    1e60:	subs	w23, w23, #0x1
    1e64:	add	x22, x22, #0x8
    1e68:	b.ne	1e48 <ctf_enum_value+0xe8>  // b.any
    1e6c:	mov	w1, #0x40b                 	// #1035
    1e70:	mov	x0, x20
    1e74:	bl	0 <ctf_set_errno>
    1e78:	mov	w0, #0xffffffff            	// #-1
    1e7c:	ldp	x20, x19, [sp, #64]
    1e80:	ldp	x22, x21, [sp, #48]
    1e84:	ldp	x24, x23, [sp, #32]
    1e88:	ldp	x29, x30, [sp, #16]
    1e8c:	add	sp, sp, #0x50
    1e90:	ret
    1e94:	mov	w0, wzr
    1e98:	cbz	x19, 1e7c <ctf_enum_value+0x11c>
    1e9c:	ldr	w8, [x22, #40]
    1ea0:	str	w8, [x19]
    1ea4:	b	1e7c <ctf_enum_value+0x11c>
    1ea8:	mov	w0, wzr
    1eac:	cbz	x19, 1e7c <ctf_enum_value+0x11c>
    1eb0:	ldr	w8, [x22]
    1eb4:	str	w8, [x19]
    1eb8:	b	1e7c <ctf_enum_value+0x11c>

0000000000001ebc <ctf_func_type_info>:
    1ebc:	sub	sp, sp, #0x40
    1ec0:	stp	x29, x30, [sp, #16]
    1ec4:	add	x29, sp, #0x10
    1ec8:	str	x21, [sp, #32]
    1ecc:	stp	x20, x19, [sp, #48]
    1ed0:	mov	x19, x2
    1ed4:	str	x0, [x29, #24]
    1ed8:	bl	1a8 <ctf_type_resolve>
    1edc:	cmn	x0, #0x1
    1ee0:	b.eq	1fc4 <ctf_func_type_info+0x108>  // b.none
    1ee4:	mov	x20, x0
    1ee8:	add	x0, x29, #0x18
    1eec:	mov	x1, x20
    1ef0:	bl	0 <ctf_lookup_by_id>
    1ef4:	cbz	x0, 1f78 <ctf_func_type_info+0xbc>
    1ef8:	mov	x21, x0
    1efc:	ldr	x0, [x29, #24]
    1f00:	add	x2, sp, #0x8
    1f04:	mov	x3, sp
    1f08:	mov	x1, x21
    1f0c:	ldr	x8, [x0]
    1f10:	ldr	x8, [x8, #24]
    1f14:	blr	x8
    1f18:	ldr	x8, [x29, #24]
    1f1c:	ldr	w0, [x21, #4]
    1f20:	ldr	x8, [x8]
    1f24:	ldr	x8, [x8]
    1f28:	blr	x8
    1f2c:	cmp	w0, #0x5
    1f30:	b.ne	1f80 <ctf_func_type_info+0xc4>  // b.any
    1f34:	ldr	w8, [x21, #8]
    1f38:	str	wzr, [x19, #12]
    1f3c:	str	x8, [x19]
    1f40:	ldr	x8, [x29, #24]
    1f44:	ldr	w0, [x21, #4]
    1f48:	ldr	x8, [x8]
    1f4c:	ldr	x8, [x8, #16]
    1f50:	blr	x8
    1f54:	str	w0, [x19, #8]
    1f58:	ldr	x0, [x29, #24]
    1f5c:	mov	x1, x20
    1f60:	bl	0 <ctf_dynamic_type>
    1f64:	cbz	x0, 1f90 <ctf_func_type_info+0xd4>
    1f68:	ldr	x8, [x0, #48]
    1f6c:	ldr	w9, [x19, #8]
    1f70:	cbnz	w9, 1fa0 <ctf_func_type_info+0xe4>
    1f74:	b	1fac <ctf_func_type_info+0xf0>
    1f78:	mov	w0, #0xffffffff            	// #-1
    1f7c:	b	1fc4 <ctf_func_type_info+0x108>
    1f80:	ldr	x0, [x29, #24]
    1f84:	mov	w1, #0x404                 	// #1028
    1f88:	bl	0 <ctf_set_errno>
    1f8c:	b	1fc4 <ctf_func_type_info+0x108>
    1f90:	ldr	x8, [sp]
    1f94:	add	x8, x8, x21
    1f98:	ldr	w9, [x19, #8]
    1f9c:	cbz	w9, 1fac <ctf_func_type_info+0xf0>
    1fa0:	sub	w9, w9, #0x1
    1fa4:	ldr	w8, [x8, w9, uxtw #2]
    1fa8:	cbz	w8, 1fb4 <ctf_func_type_info+0xf8>
    1fac:	mov	w0, wzr
    1fb0:	b	1fc4 <ctf_func_type_info+0x108>
    1fb4:	ldr	w8, [x19, #12]
    1fb8:	mov	w0, wzr
    1fbc:	orr	w8, w8, #0x1
    1fc0:	stp	w9, w8, [x19, #8]
    1fc4:	ldp	x20, x19, [sp, #48]
    1fc8:	ldr	x21, [sp, #32]
    1fcc:	ldp	x29, x30, [sp, #16]
    1fd0:	add	sp, sp, #0x40
    1fd4:	ret

0000000000001fd8 <ctf_func_type_args>:
    1fd8:	sub	sp, sp, #0x60
    1fdc:	stp	x29, x30, [sp, #48]
    1fe0:	stp	x20, x19, [sp, #80]
    1fe4:	add	x29, sp, #0x30
    1fe8:	mov	w20, w2
    1fec:	add	x2, sp, #0x8
    1ff0:	stp	x22, x21, [sp, #64]
    1ff4:	mov	x19, x3
    1ff8:	mov	x21, x1
    1ffc:	mov	x22, x0
    2000:	stur	x0, [x29, #-8]
    2004:	bl	1ebc <ctf_func_type_info>
    2008:	tbnz	w0, #31, 206c <ctf_func_type_args+0x94>
    200c:	mov	x0, x22
    2010:	mov	x1, x21
    2014:	bl	1a8 <ctf_type_resolve>
    2018:	cmn	x0, #0x1
    201c:	b.eq	20fc <ctf_func_type_args+0x124>  // b.none
    2020:	mov	x21, x0
    2024:	sub	x0, x29, #0x8
    2028:	mov	x1, x21
    202c:	bl	0 <ctf_lookup_by_id>
    2030:	cbz	x0, 206c <ctf_func_type_args+0x94>
    2034:	mov	x22, x0
    2038:	ldur	x0, [x29, #-8]
    203c:	sub	x2, x29, #0x10
    2040:	add	x3, sp, #0x18
    2044:	mov	x1, x22
    2048:	ldr	x8, [x0]
    204c:	ldr	x8, [x8, #24]
    2050:	blr	x8
    2054:	ldur	x0, [x29, #-8]
    2058:	mov	x1, x21
    205c:	bl	0 <ctf_dynamic_type>
    2060:	cbz	x0, 2074 <ctf_func_type_args+0x9c>
    2064:	ldr	x11, [x0, #48]
    2068:	b	207c <ctf_func_type_args+0xa4>
    206c:	mov	w0, #0xffffffff            	// #-1
    2070:	b	20fc <ctf_func_type_args+0x124>
    2074:	ldr	x8, [sp, #24]
    2078:	add	x11, x8, x22
    207c:	ldr	w8, [sp, #16]
    2080:	cmp	w8, w20
    2084:	csel	w8, w20, w8, hi  // hi = pmore
    2088:	cbz	w8, 20f8 <ctf_func_type_args+0x120>
    208c:	sub	w9, w8, #0x1
    2090:	cmp	w9, #0x3
    2094:	b.cs	20a0 <ctf_func_type_args+0xc8>  // b.hs, b.nlast
    2098:	mov	x9, x11
    209c:	b	20e8 <ctf_func_type_args+0x110>
    20a0:	add	x10, x9, #0x1
    20a4:	and	x12, x10, #0x1fffffffc
    20a8:	add	x13, x19, #0x10
    20ac:	add	x9, x11, x12, lsl #2
    20b0:	add	x19, x19, x12, lsl #3
    20b4:	sub	w8, w8, w12
    20b8:	add	x11, x11, #0x8
    20bc:	mov	x14, x12
    20c0:	ldp	d0, d1, [x11, #-8]
    20c4:	subs	x14, x14, #0x4
    20c8:	add	x11, x11, #0x10
    20cc:	uxtl	v0.2d, v0.2s
    20d0:	uxtl	v1.2d, v1.2s
    20d4:	stp	q0, q1, [x13, #-16]
    20d8:	add	x13, x13, #0x20
    20dc:	b.ne	20c0 <ctf_func_type_args+0xe8>  // b.any
    20e0:	cmp	x10, x12
    20e4:	b.eq	20f8 <ctf_func_type_args+0x120>  // b.none
    20e8:	ldr	w10, [x9], #4
    20ec:	subs	w8, w8, #0x1
    20f0:	str	x10, [x19], #8
    20f4:	b.ne	20e8 <ctf_func_type_args+0x110>  // b.any
    20f8:	mov	w0, wzr
    20fc:	ldp	x20, x19, [sp, #80]
    2100:	ldp	x22, x21, [sp, #64]
    2104:	ldp	x29, x30, [sp, #48]
    2108:	add	sp, sp, #0x60
    210c:	ret

0000000000002110 <ctf_type_visit>:
    2110:	adrp	x4, 0 <ctf_type_isparent>
    2114:	add	x4, x4, #0x0
    2118:	mov	x5, xzr
    211c:	mov	w6, wzr
    2120:	b	2124 <ctf_type_rvisit>

0000000000002124 <ctf_type_rvisit>:
    2124:	sub	sp, sp, #0x70
    2128:	stp	x29, x30, [sp, #32]
    212c:	add	x29, sp, #0x20
    2130:	stp	x26, x25, [sp, #48]
    2134:	stp	x24, x23, [sp, #64]
    2138:	stp	x22, x21, [sp, #80]
    213c:	stp	x20, x19, [sp, #96]
    2140:	mov	w22, w6
    2144:	mov	x21, x5
    2148:	mov	x25, x4
    214c:	mov	x19, x3
    2150:	mov	x20, x2
    2154:	mov	x26, x1
    2158:	stur	x0, [x29, #-8]
    215c:	bl	1a8 <ctf_type_resolve>
    2160:	cmn	x0, #0x1
    2164:	b.eq	2310 <ctf_type_rvisit+0x1ec>  // b.none
    2168:	mov	x24, x0
    216c:	sub	x0, x29, #0x8
    2170:	mov	x1, x24
    2174:	bl	0 <ctf_lookup_by_id>
    2178:	cbz	x0, 2220 <ctf_type_rvisit+0xfc>
    217c:	mov	x23, x0
    2180:	mov	x0, x25
    2184:	mov	x1, x26
    2188:	mov	x2, x21
    218c:	mov	w3, w22
    2190:	mov	x4, x19
    2194:	blr	x20
    2198:	cbnz	w0, 2310 <ctf_type_rvisit+0x1ec>
    219c:	ldur	x8, [x29, #-8]
    21a0:	ldr	w0, [x23, #4]
    21a4:	ldr	x8, [x8]
    21a8:	ldr	x8, [x8]
    21ac:	blr	x8
    21b0:	orr	w8, w0, #0x1
    21b4:	cmp	w8, #0x7
    21b8:	b.ne	230c <ctf_type_rvisit+0x1e8>  // b.any
    21bc:	ldur	x0, [x29, #-8]
    21c0:	add	x2, sp, #0x10
    21c4:	add	x3, sp, #0x8
    21c8:	mov	x1, x23
    21cc:	ldr	x8, [x0]
    21d0:	ldr	x8, [x8, #24]
    21d4:	blr	x8
    21d8:	ldur	x0, [x29, #-8]
    21dc:	mov	x1, x24
    21e0:	bl	0 <ctf_dynamic_type>
    21e4:	cbz	x0, 2228 <ctf_type_rvisit+0x104>
    21e8:	ldr	x23, [x0, #56]
    21ec:	cbz	x23, 230c <ctf_type_rvisit+0x1e8>
    21f0:	add	w21, w22, #0x1
    21f4:	ldur	x0, [x29, #-8]
    21f8:	ldp	x4, x1, [x23, #16]
    21fc:	ldr	x5, [x23, #32]
    2200:	mov	x2, x20
    2204:	mov	x3, x19
    2208:	mov	w6, w21
    220c:	bl	2124 <ctf_type_rvisit>
    2210:	cbnz	w0, 2310 <ctf_type_rvisit+0x1ec>
    2214:	ldr	x23, [x23, #8]
    2218:	cbnz	x23, 21f4 <ctf_type_rvisit+0xd0>
    221c:	b	2310 <ctf_type_rvisit+0x1ec>
    2220:	mov	w0, #0xffffffff            	// #-1
    2224:	b	2310 <ctf_type_rvisit+0x1ec>
    2228:	ldur	x8, [x29, #-8]
    222c:	ldp	x9, x25, [sp, #8]
    2230:	ldr	w0, [x23, #4]
    2234:	ldr	x8, [x8]
    2238:	add	x24, x9, x23
    223c:	ldr	x8, [x8, #16]
    2240:	blr	x8
    2244:	mov	w8, #0x1fffffff            	// #536870911
    2248:	cmp	x25, x8
    224c:	mov	w23, w0
    2250:	b.gt	22ac <ctf_type_rvisit+0x188>
    2254:	cbz	w23, 230c <ctf_type_rvisit+0x1e8>
    2258:	add	w22, w22, #0x1
    225c:	add	x26, x24, #0x8
    2260:	ldur	x24, [x29, #-8]
    2264:	ldur	w1, [x26, #-8]
    2268:	ldr	w25, [x26]
    226c:	mov	x0, x24
    2270:	bl	0 <ctf_strptr>
    2274:	ldur	w8, [x26, #-4]
    2278:	mov	x4, x0
    227c:	mov	x0, x24
    2280:	mov	x1, x25
    2284:	add	x5, x8, x21
    2288:	mov	x2, x20
    228c:	mov	x3, x19
    2290:	mov	w6, w22
    2294:	bl	2124 <ctf_type_rvisit>
    2298:	cbnz	w0, 2310 <ctf_type_rvisit+0x1ec>
    229c:	subs	w23, w23, #0x1
    22a0:	add	x26, x26, #0xc
    22a4:	b.ne	2260 <ctf_type_rvisit+0x13c>  // b.any
    22a8:	b	2310 <ctf_type_rvisit+0x1ec>
    22ac:	cbz	w23, 230c <ctf_type_rvisit+0x1e8>
    22b0:	add	w22, w22, #0x1
    22b4:	add	x26, x24, #0x8
    22b8:	ldur	x24, [x29, #-8]
    22bc:	ldur	w1, [x26, #-8]
    22c0:	ldr	w25, [x26]
    22c4:	mov	x0, x24
    22c8:	bl	0 <ctf_strptr>
    22cc:	ldur	w8, [x26, #-4]
    22d0:	ldr	w9, [x26, #4]
    22d4:	mov	x4, x0
    22d8:	mov	x0, x24
    22dc:	mov	x1, x25
    22e0:	bfi	x9, x8, #32, #32
    22e4:	add	x5, x9, x21
    22e8:	mov	x2, x20
    22ec:	mov	x3, x19
    22f0:	mov	w6, w22
    22f4:	bl	2124 <ctf_type_rvisit>
    22f8:	cbnz	w0, 2310 <ctf_type_rvisit+0x1ec>
    22fc:	subs	w23, w23, #0x1
    2300:	add	x26, x26, #0x10
    2304:	b.ne	22b8 <ctf_type_rvisit+0x194>  // b.any
    2308:	b	2310 <ctf_type_rvisit+0x1ec>
    230c:	mov	w0, wzr
    2310:	ldp	x20, x19, [sp, #96]
    2314:	ldp	x22, x21, [sp, #80]
    2318:	ldp	x24, x23, [sp, #64]
    231c:	ldp	x26, x25, [sp, #48]
    2320:	ldp	x29, x30, [sp, #32]
    2324:	add	sp, sp, #0x70
    2328:	ret

ctf-util.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_list_append>:
   0:	ldr	x8, [x0]
   4:	str	x1, [x0]
   8:	cmp	x8, #0x0
   c:	stp	x8, xzr, [x1]
  10:	csel	x8, x0, x8, eq  // eq = none
  14:	str	x1, [x8, #8]
  18:	ret

000000000000001c <ctf_list_prepend>:
  1c:	ldr	x8, [x0, #8]
  20:	str	x1, [x0, #8]
  24:	cmp	x8, #0x0
  28:	stp	xzr, x8, [x1]
  2c:	csel	x8, x0, x8, eq  // eq = none
  30:	str	x1, [x8]
  34:	ret

0000000000000038 <ctf_list_delete>:
  38:	ldp	x8, x9, [x1]
  3c:	cmp	x8, #0x0
  40:	csel	x10, x0, x8, eq  // eq = none
  44:	str	x9, [x10, #8]
  48:	ldr	x9, [x1, #8]
  4c:	cmp	x9, #0x0
  50:	csel	x9, x0, x9, eq  // eq = none
  54:	str	x8, [x9]
  58:	ret

000000000000005c <ctf_list_empty_p>:
  5c:	ldr	x8, [x0, #8]
  60:	cbz	x8, 6c <ctf_list_empty_p+0x10>
  64:	mov	w0, wzr
  68:	ret
  6c:	ldr	x8, [x0]
  70:	cmp	x8, #0x0
  74:	cset	w0, eq  // eq = none
  78:	ret

000000000000007c <ctf_sym_to_elf64>:
  7c:	ldr	w8, [x0]
  80:	str	w8, [x1]
  84:	ldur	d0, [x0, #4]
  88:	uxtl	v0.2d, v0.2s
  8c:	stur	q0, [x1, #8]
  90:	ldrb	w8, [x0, #12]
  94:	strb	w8, [x1, #4]
  98:	ldrb	w8, [x0, #13]
  9c:	strb	w8, [x1, #5]
  a0:	ldrh	w8, [x0, #14]
  a4:	mov	x0, x1
  a8:	strh	w8, [x1, #6]
  ac:	ret

00000000000000b0 <ctf_str_append>:
  b0:	stp	x29, x30, [sp, #-64]!
  b4:	stp	x20, x19, [sp, #48]
  b8:	mov	x19, x0
  bc:	str	x23, [sp, #16]
  c0:	stp	x22, x21, [sp, #32]
  c4:	mov	x29, sp
  c8:	cbz	x1, 120 <ctf_str_append+0x70>
  cc:	mov	x20, x1
  d0:	cbz	x19, e4 <ctf_str_append+0x34>
  d4:	mov	x0, x19
  d8:	bl	0 <strlen>
  dc:	mov	x21, x0
  e0:	b	e8 <ctf_str_append+0x38>
  e4:	mov	x21, xzr
  e8:	mov	x0, x20
  ec:	bl	0 <strlen>
  f0:	add	x23, x0, x21
  f4:	mov	x22, x0
  f8:	add	x1, x23, #0x1
  fc:	mov	x0, x19
 100:	bl	0 <realloc>
 104:	mov	x19, x0
 108:	cbz	x0, 120 <ctf_str_append+0x70>
 10c:	add	x0, x19, x21
 110:	mov	x1, x20
 114:	mov	x2, x22
 118:	bl	0 <memcpy>
 11c:	strb	wzr, [x19, x23]
 120:	mov	x0, x19
 124:	ldp	x20, x19, [sp, #48]
 128:	ldp	x22, x21, [sp, #32]
 12c:	ldr	x23, [sp, #16]
 130:	ldp	x29, x30, [sp], #64
 134:	ret

0000000000000138 <ctf_str_append_noerr>:
 138:	stp	x29, x30, [sp, #-64]!
 13c:	stp	x22, x21, [sp, #32]
 140:	stp	x20, x19, [sp, #48]
 144:	mov	x19, x0
 148:	mov	x22, x0
 14c:	stp	x24, x23, [sp, #16]
 150:	mov	x29, sp
 154:	cbz	x1, 1ac <ctf_str_append_noerr+0x74>
 158:	mov	x20, x1
 15c:	cbz	x19, 170 <ctf_str_append_noerr+0x38>
 160:	mov	x0, x19
 164:	bl	0 <strlen>
 168:	mov	x21, x0
 16c:	b	174 <ctf_str_append_noerr+0x3c>
 170:	mov	x21, xzr
 174:	mov	x0, x20
 178:	bl	0 <strlen>
 17c:	add	x24, x0, x21
 180:	mov	x23, x0
 184:	add	x1, x24, #0x1
 188:	mov	x0, x19
 18c:	bl	0 <realloc>
 190:	mov	x22, x0
 194:	cbz	x0, 1ac <ctf_str_append_noerr+0x74>
 198:	add	x0, x22, x21
 19c:	mov	x1, x20
 1a0:	mov	x2, x23
 1a4:	bl	0 <memcpy>
 1a8:	strb	wzr, [x22, x24]
 1ac:	cmp	x22, #0x0
 1b0:	csel	x0, x19, x22, eq  // eq = none
 1b4:	ldp	x20, x19, [sp, #48]
 1b8:	ldp	x22, x21, [sp, #32]
 1bc:	ldp	x24, x23, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #64
 1c4:	ret

00000000000001c8 <ctf_realloc>:
 1c8:	stp	x29, x30, [sp, #-16]!
 1cc:	mov	x9, x2
 1d0:	ldr	x2, [x0, #376]
 1d4:	mov	x29, sp
 1d8:	cbz	x2, 1fc <ctf_realloc+0x34>
 1dc:	mov	x8, x0
 1e0:	adrp	x0, 0 <ctf_list_append>
 1e4:	add	x0, x0, #0x0
 1e8:	mov	x1, x8
 1ec:	bl	0 <ctf_dprintf>
 1f0:	mov	x0, xzr
 1f4:	ldp	x29, x30, [sp], #16
 1f8:	ret
 1fc:	mov	x0, x1
 200:	mov	x1, x9
 204:	ldp	x29, x30, [sp], #16
 208:	b	0 <realloc>

000000000000020c <ctf_set_open_errno>:
 20c:	cbz	x0, 214 <ctf_set_open_errno+0x8>
 210:	str	w1, [x0]
 214:	mov	x0, xzr
 218:	ret

000000000000021c <ctf_set_errno>:
 21c:	mov	x8, x0
 220:	mov	x0, #0xffffffffffffffff    	// #-1
 224:	str	w1, [x8, #556]
 228:	ret

ctf-open-bfd.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_bfdopen>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <libctf_init_debug>
  20:	adrp	x21, 0 <_CTF_SECTION>
  24:	add	x21, x21, #0x0
  28:	mov	x0, x20
  2c:	mov	x1, x21
  30:	bl	0 <bfd_get_section_by_name>
  34:	cbz	x0, 88 <ctf_bfdopen+0x88>
  38:	mov	x22, x0
  3c:	sub	x2, x29, #0x8
  40:	mov	x0, x20
  44:	mov	x1, x22
  48:	bl	0 <bfd_malloc_and_get_section>
  4c:	cbz	w0, 90 <ctf_bfdopen+0x90>
  50:	mov	w8, #0x1                   	// #1
  54:	str	x8, [sp, #32]
  58:	ldr	x8, [x22, #56]
  5c:	ldur	x9, [x29, #-8]
  60:	add	x1, sp, #0x8
  64:	mov	x0, x20
  68:	mov	x2, x19
  6c:	str	x8, [sp, #24]
  70:	stp	x21, x9, [sp, #8]
  74:	bl	d8 <ctf_bfdopen_ctfsect>
  78:	cbz	x0, b8 <ctf_bfdopen+0xb8>
  7c:	ldr	x8, [sp, #16]
  80:	str	x8, [x0, #88]
  84:	b	c4 <ctf_bfdopen+0xc4>
  88:	mov	w1, #0x3f0                 	// #1008
  8c:	b	ac <ctf_bfdopen+0xac>
  90:	bl	0 <bfd_get_error>
  94:	bl	0 <bfd_errmsg>
  98:	mov	x1, x0
  9c:	adrp	x0, 0 <ctf_bfdopen>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <ctf_dprintf>
  a8:	mov	w1, #0x3e8                 	// #1000
  ac:	mov	x0, x19
  b0:	bl	0 <ctf_set_open_errno>
  b4:	b	c4 <ctf_bfdopen+0xc4>
  b8:	ldur	x0, [x29, #-8]
  bc:	bl	0 <free>
  c0:	mov	x0, xzr
  c4:	ldp	x20, x19, [sp, #80]
  c8:	ldp	x22, x21, [sp, #64]
  cc:	ldp	x29, x30, [sp, #48]
  d0:	add	sp, sp, #0x60
  d4:	ret

00000000000000d8 <ctf_bfdopen_ctfsect>:
  d8:	sub	sp, sp, #0x90
  dc:	stp	x29, x30, [sp, #64]
  e0:	stp	x24, x23, [sp, #96]
  e4:	stp	x22, x21, [sp, #112]
  e8:	stp	x20, x19, [sp, #128]
  ec:	ldr	x24, [x0, #248]
  f0:	str	x25, [sp, #80]
  f4:	mov	x22, x0
  f8:	add	x29, sp, #0x40
  fc:	ldr	x23, [x24, #136]
 100:	ldr	x25, [x24, #160]
 104:	mov	x19, x2
 108:	mov	x21, x1
 10c:	mov	x0, x23
 110:	bl	0 <malloc>
 114:	cbz	x0, 1d0 <ctf_bfdopen_ctfsect+0xf8>
 118:	mov	x20, x0
 11c:	add	x1, x24, #0x68
 120:	udiv	x2, x23, x25
 124:	mov	x0, x22
 128:	mov	x3, xzr
 12c:	mov	x4, xzr
 130:	mov	x5, x20
 134:	mov	x6, xzr
 138:	bl	0 <bfd_elf_get_elf_syms>
 13c:	mov	x23, x0
 140:	bl	0 <free>
 144:	cbz	x23, 290 <ctf_bfdopen_ctfsect+0x1b8>
 148:	ldr	x9, [x22, #248]
 14c:	ldr	x8, [x9, #88]
 150:	cbz	x8, 1dc <ctf_bfdopen_ctfsect+0x104>
 154:	ldr	w1, [x24, #144]
 158:	ldr	w9, [x9, #764]
 15c:	cmp	w1, w9
 160:	b.cs	1dc <ctf_bfdopen_ctfsect+0x104>  // b.hs, b.nlast
 164:	ldr	x23, [x8, x1, lsl #3]
 168:	ldr	x0, [x23, #72]
 16c:	cbnz	x0, 17c <ctf_bfdopen_ctfsect+0xa4>
 170:	mov	x0, x22
 174:	bl	0 <bfd_elf_get_str_section>
 178:	cbz	x0, 348 <ctf_bfdopen_ctfsect+0x270>
 17c:	adrp	x8, 0 <ctf_bfdopen>
 180:	add	x8, x8, #0x0
 184:	stp	x8, x0, [sp]
 188:	ldr	x8, [x23, #32]
 18c:	str	x8, [sp, #16]
 190:	ldr	x8, [x22, #8]
 194:	ldr	x8, [x8, #880]
 198:	ldr	x9, [x8, #784]
 19c:	ldr	x8, [x24, #160]
 1a0:	ldrb	w9, [x9, #5]
 1a4:	cmp	x8, x9
 1a8:	b.ne	354 <ctf_bfdopen_ctfsect+0x27c>  // b.any
 1ac:	adrp	x9, 0 <ctf_bfdopen>
 1b0:	add	x9, x9, #0x0
 1b4:	stp	x9, x20, [sp, #32]
 1b8:	str	x8, [sp, #56]
 1bc:	ldr	x8, [x24, #136]
 1c0:	add	x23, sp, #0x20
 1c4:	mov	x22, sp
 1c8:	str	x8, [sp, #48]
 1cc:	b	1e4 <ctf_bfdopen_ctfsect+0x10c>
 1d0:	adrp	x21, 0 <ctf_bfdopen>
 1d4:	add	x21, x21, #0x0
 1d8:	b	2a0 <ctf_bfdopen_ctfsect+0x1c8>
 1dc:	mov	x22, xzr
 1e0:	mov	x23, xzr
 1e4:	ldr	x1, [x21, #16]
 1e8:	cmp	x1, #0x9
 1ec:	b.cc	22c <ctf_bfdopen_ctfsect+0x154>  // b.lo, b.ul, b.last
 1f0:	ldr	x0, [x21, #8]
 1f4:	mov	x9, #0x3eeb                	// #16107
 1f8:	movk	x9, #0xd762, lsl #16
 1fc:	movk	x9, #0xf2a4, lsl #32
 200:	ldr	x8, [x0]
 204:	movk	x9, #0x8b47, lsl #48
 208:	cmp	x8, x9
 20c:	b.ne	22c <ctf_bfdopen_ctfsect+0x154>  // b.any
 210:	mov	x2, x19
 214:	bl	0 <ctf_arc_bufopen>
 218:	cbz	x0, 320 <ctf_bfdopen_ctfsect+0x248>
 21c:	mov	x24, x0
 220:	mov	x21, xzr
 224:	mov	w25, #0x1                   	// #1
 228:	b	250 <ctf_bfdopen_ctfsect+0x178>
 22c:	mov	x0, x21
 230:	mov	x1, x23
 234:	mov	x2, x22
 238:	mov	x3, x19
 23c:	bl	0 <ctf_bufopen>
 240:	cbz	x0, 2cc <ctf_bfdopen_ctfsect+0x1f4>
 244:	mov	x21, x0
 248:	mov	w25, wzr
 24c:	mov	x24, xzr
 250:	mov	w0, #0x1                   	// #1
 254:	mov	w1, #0x70                  	// #112
 258:	bl	0 <calloc>
 25c:	cbz	x0, 2e8 <ctf_bfdopen_ctfsect+0x210>
 260:	str	w25, [x0]
 264:	cbz	w25, 2f8 <ctf_bfdopen_ctfsect+0x220>
 268:	str	x24, [x0, #16]
 26c:	cbz	x23, 27c <ctf_bfdopen_ctfsect+0x1a4>
 270:	ldp	q1, q0, [x23]
 274:	stur	q0, [x0, #40]
 278:	stur	q1, [x0, #24]
 27c:	cbz	x22, 32c <ctf_bfdopen_ctfsect+0x254>
 280:	ldp	q1, q0, [x22]
 284:	stur	q0, [x0, #72]
 288:	stur	q1, [x0, #56]
 28c:	b	32c <ctf_bfdopen_ctfsect+0x254>
 290:	adrp	x21, 0 <ctf_bfdopen>
 294:	add	x21, x21, #0x0
 298:	mov	x0, x20
 29c:	bl	0 <free>
 2a0:	bl	0 <bfd_get_error>
 2a4:	bl	0 <bfd_errmsg>
 2a8:	mov	x2, x0
 2ac:	adrp	x0, 0 <ctf_bfdopen>
 2b0:	add	x0, x0, #0x0
 2b4:	mov	x1, x21
 2b8:	bl	0 <ctf_dprintf>
 2bc:	mov	w1, #0x3e8                 	// #1000
 2c0:	mov	x0, x19
 2c4:	bl	0 <ctf_set_open_errno>
 2c8:	b	328 <ctf_bfdopen_ctfsect+0x250>
 2cc:	ldr	w0, [x19]
 2d0:	bl	0 <ctf_errmsg>
 2d4:	mov	x1, x0
 2d8:	adrp	x0, 0 <ctf_bfdopen>
 2dc:	add	x0, x0, #0x0
 2e0:	bl	0 <ctf_dprintf>
 2e4:	b	320 <ctf_bfdopen_ctfsect+0x248>
 2e8:	cbz	w25, 304 <ctf_bfdopen_ctfsect+0x22c>
 2ec:	mov	x0, x24
 2f0:	bl	0 <ctf_arc_close_internal>
 2f4:	b	30c <ctf_bfdopen_ctfsect+0x234>
 2f8:	str	x21, [x0, #8]
 2fc:	cbnz	x23, 270 <ctf_bfdopen_ctfsect+0x198>
 300:	b	27c <ctf_bfdopen_ctfsect+0x1a4>
 304:	mov	x0, x21
 308:	bl	0 <ctf_file_close>
 30c:	bl	0 <__errno_location>
 310:	ldr	w1, [x0]
 314:	mov	x0, x19
 318:	bl	0 <ctf_set_open_errno>
 31c:	cbnz	x0, 32c <ctf_bfdopen_ctfsect+0x254>
 320:	mov	x0, x20
 324:	bl	0 <free>
 328:	mov	x0, xzr
 32c:	ldp	x20, x19, [sp, #128]
 330:	ldp	x22, x21, [sp, #112]
 334:	ldp	x24, x23, [sp, #96]
 338:	ldr	x25, [sp, #80]
 33c:	ldp	x29, x30, [sp, #64]
 340:	add	sp, sp, #0x90
 344:	ret
 348:	adrp	x21, 0 <ctf_bfdopen>
 34c:	add	x21, x21, #0x0
 350:	b	298 <ctf_bfdopen_ctfsect+0x1c0>
 354:	adrp	x0, 0 <ctf_bfdopen>
 358:	adrp	x1, 0 <ctf_bfdopen>
 35c:	adrp	x3, 0 <ctf_bfdopen>
 360:	add	x0, x0, #0x0
 364:	add	x1, x1, #0x0
 368:	add	x3, x3, #0x0
 36c:	mov	w2, #0xba                  	// #186
 370:	bl	0 <__assert_fail>

0000000000000374 <ctf_fdopen>:
 374:	sub	sp, sp, #0xc0
 378:	stp	x29, x30, [sp, #144]
 37c:	stp	x22, x21, [sp, #160]
 380:	stp	x20, x19, [sp, #176]
 384:	add	x29, sp, #0x90
 388:	mov	x19, x3
 38c:	mov	x21, x2
 390:	mov	x20, x1
 394:	mov	w22, w0
 398:	str	wzr, [sp, #12]
 39c:	bl	0 <libctf_init_debug>
 3a0:	add	x2, sp, #0x10
 3a4:	mov	w0, wzr
 3a8:	mov	w1, w22
 3ac:	bl	0 <__fxstat>
 3b0:	cmn	w0, #0x1
 3b4:	b.eq	55c <ctf_fdopen+0x1e8>  // b.none
 3b8:	add	x1, sp, #0xc
 3bc:	mov	w2, #0x4                   	// #4
 3c0:	mov	w0, w22
 3c4:	mov	x3, xzr
 3c8:	bl	0 <ctf_pread>
 3cc:	cmp	x0, #0x0
 3d0:	b.le	4cc <ctf_fdopen+0x158>
 3d4:	cmp	x0, #0x4
 3d8:	b.cc	458 <ctf_fdopen+0xe4>  // b.lo, b.ul, b.last
 3dc:	ldrh	w8, [sp, #12]
 3e0:	mov	w9, #0xf2df                	// #62175
 3e4:	cmp	w8, w9
 3e8:	b.eq	3f8 <ctf_fdopen+0x84>  // b.none
 3ec:	mov	w9, #0xdff2                	// #57330
 3f0:	cmp	w8, w9
 3f4:	b.ne	458 <ctf_fdopen+0xe4>  // b.any
 3f8:	ldr	x0, [sp, #64]
 3fc:	mov	x1, xzr
 400:	mov	w2, w22
 404:	bl	0 <ctf_mmap>
 408:	cbz	x0, 55c <ctf_fdopen+0x1e8>
 40c:	ldr	x1, [sp, #64]
 410:	mov	x2, xzr
 414:	mov	x3, xzr
 418:	mov	x4, xzr
 41c:	mov	x5, xzr
 420:	mov	x6, xzr
 424:	mov	x7, x19
 428:	mov	x20, x0
 42c:	bl	0 <ctf_simple_open>
 430:	cbz	x0, 534 <ctf_fdopen+0x1c0>
 434:	ldr	x8, [sp, #64]
 438:	mov	x21, x0
 43c:	mov	w1, #0x70                  	// #112
 440:	stp	x20, x8, [x0, #136]
 444:	mov	w0, #0x1                   	// #1
 448:	bl	0 <calloc>
 44c:	cbz	x0, 548 <ctf_fdopen+0x1d4>
 450:	str	x21, [x0, #8]
 454:	b	56c <ctf_fdopen+0x1f8>
 458:	mov	x1, sp
 45c:	mov	w2, #0x8                   	// #8
 460:	mov	w0, w22
 464:	mov	x3, xzr
 468:	bl	0 <ctf_pread>
 46c:	cmp	x0, #0x0
 470:	b.le	4cc <ctf_fdopen+0x158>
 474:	cmp	x0, #0x8
 478:	b.cc	4d8 <ctf_fdopen+0x164>  // b.lo, b.ul, b.last
 47c:	ldr	x8, [sp]
 480:	mov	x9, #0x3eeb                	// #16107
 484:	movk	x9, #0xd762, lsl #16
 488:	movk	x9, #0xf2a4, lsl #32
 48c:	movk	x9, #0x8b47, lsl #48
 490:	cmp	x8, x9
 494:	b.ne	4d8 <ctf_fdopen+0x164>  // b.any
 498:	mov	x0, x20
 49c:	mov	x1, x19
 4a0:	bl	0 <ctf_arc_open_internal>
 4a4:	cbz	x0, 56c <ctf_fdopen+0x1f8>
 4a8:	mov	x20, x0
 4ac:	mov	w0, #0x1                   	// #1
 4b0:	mov	w1, #0x70                  	// #112
 4b4:	mov	w21, #0x1                   	// #1
 4b8:	bl	0 <calloc>
 4bc:	cbz	x0, 554 <ctf_fdopen+0x1e0>
 4c0:	str	w21, [x0]
 4c4:	str	x20, [x0, #16]
 4c8:	b	56c <ctf_fdopen+0x1f8>
 4cc:	tbnz	x0, #63, 55c <ctf_fdopen+0x1e8>
 4d0:	mov	w1, #0x3e8                 	// #1000
 4d4:	b	564 <ctf_fdopen+0x1f0>
 4d8:	mov	w0, w22
 4dc:	bl	0 <dup>
 4e0:	tbnz	w0, #31, 55c <ctf_fdopen+0x1e8>
 4e4:	mov	w2, w0
 4e8:	mov	x0, x20
 4ec:	mov	x1, x21
 4f0:	bl	0 <bfd_fdopenr>
 4f4:	cbz	x0, 580 <ctf_fdopen+0x20c>
 4f8:	ldrh	w8, [x0, #76]
 4fc:	mov	w1, #0x1                   	// #1
 500:	mov	x21, x0
 504:	orr	w8, w8, #0x1
 508:	strh	w8, [x0, #76]
 50c:	bl	0 <bfd_check_format>
 510:	cbz	w0, 5b0 <ctf_fdopen+0x23c>
 514:	mov	x0, x21
 518:	mov	x1, x19
 51c:	bl	0 <ctf_bfdopen>
 520:	cbz	x0, 5f0 <ctf_fdopen+0x27c>
 524:	adrp	x8, 0 <ctf_bfdopen>
 528:	add	x8, x8, #0x0
 52c:	stp	x21, x8, [x0, #96]
 530:	b	56c <ctf_fdopen+0x1f8>
 534:	ldr	x1, [sp, #64]
 538:	mov	x0, x20
 53c:	bl	0 <ctf_munmap>
 540:	mov	x0, xzr
 544:	b	56c <ctf_fdopen+0x1f8>
 548:	mov	x0, x21
 54c:	bl	0 <ctf_file_close>
 550:	b	55c <ctf_fdopen+0x1e8>
 554:	mov	x0, x20
 558:	bl	0 <ctf_arc_close_internal>
 55c:	bl	0 <__errno_location>
 560:	ldr	w1, [x0]
 564:	mov	x0, x19
 568:	bl	0 <ctf_set_open_errno>
 56c:	ldp	x20, x19, [sp, #176]
 570:	ldp	x22, x21, [sp, #160]
 574:	ldp	x29, x30, [sp, #144]
 578:	add	sp, sp, #0xc0
 57c:	ret
 580:	adrp	x8, 0 <ctf_bfdopen>
 584:	add	x8, x8, #0x0
 588:	cmp	x20, #0x0
 58c:	csel	x20, x8, x20, eq  // eq = none
 590:	bl	0 <bfd_get_error>
 594:	bl	0 <bfd_errmsg>
 598:	mov	x2, x0
 59c:	adrp	x0, 0 <ctf_bfdopen>
 5a0:	add	x0, x0, #0x0
 5a4:	mov	x1, x20
 5a8:	bl	0 <ctf_dprintf>
 5ac:	b	4d0 <ctf_fdopen+0x15c>
 5b0:	adrp	x8, 0 <ctf_bfdopen>
 5b4:	add	x8, x8, #0x0
 5b8:	cmp	x20, #0x0
 5bc:	csel	x20, x8, x20, eq  // eq = none
 5c0:	bl	0 <bfd_get_error>
 5c4:	bl	0 <bfd_errmsg>
 5c8:	mov	x2, x0
 5cc:	adrp	x0, 0 <ctf_bfdopen>
 5d0:	add	x0, x0, #0x0
 5d4:	mov	x1, x20
 5d8:	bl	0 <ctf_dprintf>
 5dc:	bl	0 <bfd_get_error>
 5e0:	cmp	w0, #0xd
 5e4:	b.ne	4d0 <ctf_fdopen+0x15c>  // b.any
 5e8:	mov	w1, #0x3eb                 	// #1003
 5ec:	b	564 <ctf_fdopen+0x1f0>
 5f0:	mov	x0, x21
 5f4:	bl	0 <bfd_close_all_done>
 5f8:	cbz	w0, 604 <ctf_fdopen+0x290>
 5fc:	mov	x0, xzr
 600:	b	56c <ctf_fdopen+0x1f8>
 604:	bl	0 <bfd_get_error>
 608:	bl	0 <bfd_errmsg>
 60c:	mov	x1, x0
 610:	adrp	x0, 0 <ctf_bfdopen>
 614:	add	x0, x0, #0x0
 618:	bl	0 <ctf_dprintf>
 61c:	mov	x0, xzr
 620:	b	56c <ctf_fdopen+0x1f8>

0000000000000624 <ctf_bfdclose>:
 624:	stp	x29, x30, [sp, #-16]!
 628:	ldr	x0, [x0, #96]
 62c:	mov	x29, sp
 630:	cbz	x0, 63c <ctf_bfdclose+0x18>
 634:	bl	0 <bfd_close_all_done>
 638:	cbz	w0, 644 <ctf_bfdclose+0x20>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret
 644:	bl	0 <bfd_get_error>
 648:	bl	0 <bfd_errmsg>
 64c:	adrp	x8, 0 <ctf_bfdopen>
 650:	add	x8, x8, #0x0
 654:	mov	x1, x0
 658:	mov	x0, x8
 65c:	ldp	x29, x30, [sp], #16
 660:	b	0 <ctf_dprintf>

0000000000000664 <ctf_open>:
 664:	stp	x29, x30, [sp, #-48]!
 668:	stp	x20, x19, [sp, #32]
 66c:	mov	x20, x1
 670:	mov	w1, wzr
 674:	stp	x22, x21, [sp, #16]
 678:	mov	x29, sp
 67c:	mov	x19, x2
 680:	mov	x21, x0
 684:	bl	0 <open>
 688:	cmn	w0, #0x1
 68c:	b.eq	6b8 <ctf_open+0x54>  // b.none
 690:	mov	x1, x21
 694:	mov	x2, x20
 698:	mov	x3, x19
 69c:	mov	w22, w0
 6a0:	bl	374 <ctf_fdopen>
 6a4:	mov	x19, x0
 6a8:	mov	w0, w22
 6ac:	bl	0 <close>
 6b0:	mov	x0, x19
 6b4:	b	6cc <ctf_open+0x68>
 6b8:	cbz	x19, 6c8 <ctf_open+0x64>
 6bc:	bl	0 <__errno_location>
 6c0:	ldr	w8, [x0]
 6c4:	str	w8, [x19]
 6c8:	mov	x0, xzr
 6cc:	ldp	x20, x19, [sp, #32]
 6d0:	ldp	x22, x21, [sp, #16]
 6d4:	ldp	x29, x30, [sp], #48
 6d8:	ret

00000000000006dc <ctf_arc_open>:
 6dc:	stp	x29, x30, [sp, #-48]!
 6e0:	stp	x20, x19, [sp, #32]
 6e4:	mov	x19, x1
 6e8:	mov	w1, wzr
 6ec:	str	x21, [sp, #16]
 6f0:	mov	x29, sp
 6f4:	mov	x20, x0
 6f8:	bl	0 <open>
 6fc:	cmn	w0, #0x1
 700:	b.eq	72c <ctf_arc_open+0x50>  // b.none
 704:	mov	x1, x20
 708:	mov	x2, xzr
 70c:	mov	x3, x19
 710:	mov	w21, w0
 714:	bl	374 <ctf_fdopen>
 718:	mov	x19, x0
 71c:	mov	w0, w21
 720:	bl	0 <close>
 724:	mov	x0, x19
 728:	b	740 <ctf_arc_open+0x64>
 72c:	cbz	x19, 73c <ctf_arc_open+0x60>
 730:	bl	0 <__errno_location>
 734:	ldr	w8, [x0]
 738:	str	w8, [x19]
 73c:	mov	x0, xzr
 740:	ldp	x20, x19, [sp, #32]
 744:	ldr	x21, [sp, #16]
 748:	ldp	x29, x30, [sp], #48
 74c:	ret
