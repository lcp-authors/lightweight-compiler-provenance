
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-rfkill_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004010d8 <_init>:
  4010d8:	stp	x29, x30, [sp, #-16]!
  4010dc:	mov	x29, sp
  4010e0:	bl	4013d0 <call_weak_fn>
  4010e4:	ldp	x29, x30, [sp], #16
  4010e8:	ret

Disassembly of section .plt:

00000000004010f0 <__libc_start_main@plt-0x20>:
  4010f0:	stp	x16, x30, [sp, #-16]!
  4010f4:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4010f8:	ldr	x17, [x16, #3776]
  4010fc:	add	x16, x16, #0xec0
  401100:	br	x17
  401104:	nop
  401108:	nop
  40110c:	nop

0000000000401110 <__libc_start_main@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401114:	ldr	x17, [x16, #3784]
  401118:	add	x16, x16, #0xec8
  40111c:	br	x17

0000000000401120 <abort@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401124:	ldr	x17, [x16, #3792]
  401128:	add	x16, x16, #0xed0
  40112c:	br	x17

0000000000401130 <__gmon_start__@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401134:	ldr	x17, [x16, #3800]
  401138:	add	x16, x16, #0xed8
  40113c:	br	x17

0000000000401140 <log_get_max_level_realm@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401144:	ldr	x17, [x16, #3808]
  401148:	add	x16, x16, #0xee0
  40114c:	br	x17

0000000000401150 <log_setup_service@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401154:	ldr	x17, [x16, #3816]
  401158:	add	x16, x16, #0xee8
  40115c:	br	x17

0000000000401160 <umask@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401164:	ldr	x17, [x16, #3824]
  401168:	add	x16, x16, #0xef0
  40116c:	br	x17

0000000000401170 <sd_listen_fds@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401174:	ldr	x17, [x16, #3832]
  401178:	add	x16, x16, #0xef8
  40117c:	br	x17

0000000000401180 <fd_nonblock@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401184:	ldr	x17, [x16, #3840]
  401188:	add	x16, x16, #0xf00
  40118c:	br	x17

0000000000401190 <open64@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401194:	ldr	x17, [x16, #3848]
  401198:	add	x16, x16, #0xf08
  40119c:	br	x17

00000000004011a0 <__errno_location@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4011a4:	ldr	x17, [x16, #3856]
  4011a8:	add	x16, x16, #0xf10
  4011ac:	br	x17

00000000004011b0 <log_internal_realm@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4011b4:	ldr	x17, [x16, #3864]
  4011b8:	add	x16, x16, #0xf18
  4011bc:	br	x17

00000000004011c0 <free@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4011c4:	ldr	x17, [x16, #3872]
  4011c8:	add	x16, x16, #0xf20
  4011cc:	br	x17

00000000004011d0 <read@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4011d4:	ldr	x17, [x16, #3880]
  4011d8:	add	x16, x16, #0xf28
  4011dc:	br	x17

00000000004011e0 <sd_notify@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4011e4:	ldr	x17, [x16, #3888]
  4011e8:	add	x16, x16, #0xf30
  4011ec:	br	x17

00000000004011f0 <fd_wait_for_event@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4011f4:	ldr	x17, [x16, #3896]
  4011f8:	add	x16, x16, #0xf38
  4011fc:	br	x17

0000000000401200 <calloc@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401204:	ldr	x17, [x16, #3904]
  401208:	add	x16, x16, #0xf40
  40120c:	br	x17

0000000000401210 <shall_restore_state@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401214:	ldr	x17, [x16, #3912]
  401218:	add	x16, x16, #0xf48
  40121c:	br	x17

0000000000401220 <read_one_line_file@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401224:	ldr	x17, [x16, #3920]
  401228:	add	x16, x16, #0xf50
  40122c:	br	x17

0000000000401230 <write_string_file_ts@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401234:	ldr	x17, [x16, #3928]
  401238:	add	x16, x16, #0xf58
  40123c:	br	x17

0000000000401240 <parse_boolean@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401244:	ldr	x17, [x16, #3936]
  401248:	add	x16, x16, #0xf60
  40124c:	br	x17

0000000000401250 <write@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401254:	ldr	x17, [x16, #3944]
  401258:	add	x16, x16, #0xf68
  40125c:	br	x17

0000000000401260 <safe_close@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401264:	ldr	x17, [x16, #3952]
  401268:	add	x16, x16, #0xf70
  40126c:	br	x17

0000000000401270 <ask_password_agent_close@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401274:	ldr	x17, [x16, #3960]
  401278:	add	x16, x16, #0xf78
  40127c:	br	x17

0000000000401280 <polkit_agent_close@plt>:
  401280:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401284:	ldr	x17, [x16, #3968]
  401288:	add	x16, x16, #0xf80
  40128c:	br	x17

0000000000401290 <pager_close@plt>:
  401290:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401294:	ldr	x17, [x16, #3976]
  401298:	add	x16, x16, #0xf88
  40129c:	br	x17

00000000004012a0 <mac_selinux_finish@plt>:
  4012a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4012a4:	ldr	x17, [x16, #3984]
  4012a8:	add	x16, x16, #0xf90
  4012ac:	br	x17

00000000004012b0 <log_assert_failed_realm@plt>:
  4012b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4012b4:	ldr	x17, [x16, #3992]
  4012b8:	add	x16, x16, #0xf98
  4012bc:	br	x17

00000000004012c0 <asprintf@plt>:
  4012c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4012c4:	ldr	x17, [x16, #4000]
  4012c8:	add	x16, x16, #0xfa0
  4012cc:	br	x17

00000000004012d0 <sd_device_new_from_subsystem_sysname@plt>:
  4012d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4012d4:	ldr	x17, [x16, #4008]
  4012d8:	add	x16, x16, #0xfa8
  4012dc:	br	x17

00000000004012e0 <sd_device_get_sysattr_value@plt>:
  4012e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4012e4:	ldr	x17, [x16, #4016]
  4012e8:	add	x16, x16, #0xfb0
  4012ec:	br	x17

00000000004012f0 <log_object_internal@plt>:
  4012f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  4012f4:	ldr	x17, [x16, #4024]
  4012f8:	add	x16, x16, #0xfb8
  4012fc:	br	x17

0000000000401300 <log_oom_internal@plt>:
  401300:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401304:	ldr	x17, [x16, #4032]
  401308:	add	x16, x16, #0xfc0
  40130c:	br	x17

0000000000401310 <sd_device_unref@plt>:
  401310:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401314:	ldr	x17, [x16, #4040]
  401318:	add	x16, x16, #0xfc8
  40131c:	br	x17

0000000000401320 <device_wait_for_initialization@plt>:
  401320:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401324:	ldr	x17, [x16, #4048]
  401328:	add	x16, x16, #0xfd0
  40132c:	br	x17

0000000000401330 <sd_device_get_property_value@plt>:
  401330:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401334:	ldr	x17, [x16, #4056]
  401338:	add	x16, x16, #0xfd8
  40133c:	br	x17

0000000000401340 <cescape@plt>:
  401340:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401344:	ldr	x17, [x16, #4064]
  401348:	add	x16, x16, #0xfe0
  40134c:	br	x17

0000000000401350 <strjoin_real@plt>:
  401350:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401354:	ldr	x17, [x16, #4072]
  401358:	add	x16, x16, #0xfe8
  40135c:	br	x17

0000000000401360 <sd_device_get_sysname@plt>:
  401360:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401364:	ldr	x17, [x16, #4080]
  401368:	add	x16, x16, #0xff0
  40136c:	br	x17

0000000000401370 <strcmp@plt>:
  401370:	adrp	x16, 41f000 <__FRAME_END__+0x1c310>
  401374:	ldr	x17, [x16, #4088]
  401378:	add	x16, x16, #0xff8
  40137c:	br	x17

Disassembly of section .text:

0000000000401380 <_start>:
  401380:	mov	x29, #0x0                   	// #0
  401384:	mov	x30, #0x0                   	// #0
  401388:	mov	x5, x0
  40138c:	ldr	x1, [sp]
  401390:	add	x2, sp, #0x8
  401394:	mov	x6, sp
  401398:	movz	x0, #0x0, lsl #48
  40139c:	movk	x0, #0x0, lsl #32
  4013a0:	movk	x0, #0x40, lsl #16
  4013a4:	movk	x0, #0x148c
  4013a8:	movz	x3, #0x0, lsl #48
  4013ac:	movk	x3, #0x0, lsl #32
  4013b0:	movk	x3, #0x40, lsl #16
  4013b4:	movk	x3, #0x2440
  4013b8:	movz	x4, #0x0, lsl #48
  4013bc:	movk	x4, #0x0, lsl #32
  4013c0:	movk	x4, #0x40, lsl #16
  4013c4:	movk	x4, #0x24c0
  4013c8:	bl	401110 <__libc_start_main@plt>
  4013cc:	bl	401120 <abort@plt>

00000000004013d0 <call_weak_fn>:
  4013d0:	adrp	x0, 41f000 <__FRAME_END__+0x1c310>
  4013d4:	ldr	x0, [x0, #3736]
  4013d8:	cbz	x0, 4013e0 <call_weak_fn+0x10>
  4013dc:	b	401130 <__gmon_start__@plt>
  4013e0:	ret
  4013e4:	udf	#0

00000000004013e8 <deregister_tm_clones>:
  4013e8:	adrp	x0, 420000 <completed.8445>
  4013ec:	add	x0, x0, #0x0
  4013f0:	adrp	x1, 420000 <completed.8445>
  4013f4:	add	x1, x1, #0x0
  4013f8:	cmp	x1, x0
  4013fc:	b.eq	401414 <deregister_tm_clones+0x2c>  // b.none
  401400:	adrp	x1, 402000 <determine_state_file+0x104>
  401404:	ldr	x1, [x1, #1240]
  401408:	cbz	x1, 401414 <deregister_tm_clones+0x2c>
  40140c:	mov	x16, x1
  401410:	br	x16
  401414:	ret

0000000000401418 <register_tm_clones>:
  401418:	adrp	x0, 420000 <completed.8445>
  40141c:	add	x0, x0, #0x0
  401420:	adrp	x1, 420000 <completed.8445>
  401424:	add	x1, x1, #0x0
  401428:	sub	x1, x1, x0
  40142c:	lsr	x2, x1, #63
  401430:	add	x1, x2, x1, asr #3
  401434:	cmp	xzr, x1, asr #1
  401438:	asr	x1, x1, #1
  40143c:	b.eq	401454 <register_tm_clones+0x3c>  // b.none
  401440:	adrp	x2, 402000 <determine_state_file+0x104>
  401444:	ldr	x2, [x2, #1248]
  401448:	cbz	x2, 401454 <register_tm_clones+0x3c>
  40144c:	mov	x16, x2
  401450:	br	x16
  401454:	ret

0000000000401458 <__do_global_dtors_aux>:
  401458:	stp	x29, x30, [sp, #-32]!
  40145c:	mov	x29, sp
  401460:	str	x19, [sp, #16]
  401464:	adrp	x19, 420000 <completed.8445>
  401468:	ldrb	w0, [x19]
  40146c:	cbnz	w0, 40147c <__do_global_dtors_aux+0x24>
  401470:	bl	4013e8 <deregister_tm_clones>
  401474:	mov	w0, #0x1                   	// #1
  401478:	strb	w0, [x19]
  40147c:	ldr	x19, [sp, #16]
  401480:	ldp	x29, x30, [sp], #32
  401484:	ret

0000000000401488 <frame_dummy>:
  401488:	b	401418 <register_tm_clones>

000000000040148c <main>:
  40148c:	sub	sp, sp, #0xa0
  401490:	adrp	x9, 402000 <determine_state_file+0x104>
  401494:	add	x9, x9, #0x4e8
  401498:	ldr	q0, [x9]
  40149c:	adrp	x8, 420000 <completed.8445>
  4014a0:	str	w0, [x8, #8]
  4014a4:	adrp	x8, 420000 <completed.8445>
  4014a8:	cmp	w0, #0x2
  4014ac:	stp	x29, x30, [sp, #64]
  4014b0:	stp	x28, x27, [sp, #80]
  4014b4:	stp	x26, x25, [sp, #96]
  4014b8:	stp	x24, x23, [sp, #112]
  4014bc:	stp	x22, x21, [sp, #128]
  4014c0:	stp	x20, x19, [sp, #144]
  4014c4:	add	x29, sp, #0x40
  4014c8:	str	x1, [x8, #16]
  4014cc:	str	q0, [sp, #16]
  4014d0:	b.lt	401514 <main+0x88>  // b.tstop
  4014d4:	mov	w0, wzr
  4014d8:	bl	401140 <log_get_max_level_realm@plt>
  4014dc:	cmp	w0, #0x3
  4014e0:	b.lt	401578 <main+0xec>  // b.tstop
  4014e4:	mov	w8, #0x5                   	// #5
  4014e8:	movk	w8, #0x4000, lsl #16
  4014ec:	adrp	x2, 402000 <determine_state_file+0x104>
  4014f0:	adrp	x4, 402000 <determine_state_file+0x104>
  4014f4:	adrp	x5, 402000 <determine_state_file+0x104>
  4014f8:	add	w1, w8, #0x11
  4014fc:	add	x2, x2, #0x4fb
  401500:	add	x4, x4, #0x50f
  401504:	add	x5, x5, #0x513
  401508:	mov	w0, #0x3                   	// #3
  40150c:	mov	w3, #0x115                 	// #277
  401510:	b	401c38 <main+0x7ac>
  401514:	bl	401150 <log_setup_service@plt>
  401518:	mov	w0, #0x12                  	// #18
  40151c:	bl	401160 <umask@plt>
  401520:	mov	w0, wzr
  401524:	bl	401170 <sd_listen_fds@plt>
  401528:	mov	w19, w0
  40152c:	tbnz	w0, #31, 401580 <main+0xf4>
  401530:	cmp	w19, #0x2
  401534:	b.lt	4015b8 <main+0x12c>  // b.tstop
  401538:	mov	w0, wzr
  40153c:	bl	401140 <log_get_max_level_realm@plt>
  401540:	cmp	w0, #0x3
  401544:	b.lt	401578 <main+0xec>  // b.tstop
  401548:	mov	w8, #0x5                   	// #5
  40154c:	movk	w8, #0x4000, lsl #16
  401550:	adrp	x2, 402000 <determine_state_file+0x104>
  401554:	adrp	x4, 402000 <determine_state_file+0x104>
  401558:	adrp	x5, 402000 <determine_state_file+0x104>
  40155c:	add	w1, w8, #0x11
  401560:	add	x2, x2, #0x4fb
  401564:	add	x4, x4, #0x50f
  401568:	add	x5, x5, #0x57a
  40156c:	mov	w0, #0x3                   	// #3
  401570:	mov	w3, #0x11f                 	// #287
  401574:	b	401c38 <main+0x7ac>
  401578:	mov	w19, #0xffffffea            	// #-22
  40157c:	b	401c40 <main+0x7b4>
  401580:	mov	w0, wzr
  401584:	bl	401140 <log_get_max_level_realm@plt>
  401588:	cmp	w0, #0x3
  40158c:	b.lt	40160c <main+0x180>  // b.tstop
  401590:	adrp	x2, 402000 <determine_state_file+0x104>
  401594:	adrp	x4, 402000 <determine_state_file+0x104>
  401598:	adrp	x5, 402000 <determine_state_file+0x104>
  40159c:	add	x2, x2, #0x4fb
  4015a0:	add	x4, x4, #0x50f
  4015a4:	add	x5, x5, #0x537
  4015a8:	mov	w0, #0x3                   	// #3
  4015ac:	mov	w3, #0x11d                 	// #285
  4015b0:	mov	w1, w19
  4015b4:	b	401c38 <main+0x7ac>
  4015b8:	cbz	w19, 40161c <main+0x190>
  4015bc:	mov	w26, #0x3                   	// #3
  4015c0:	mov	w0, #0x3                   	// #3
  4015c4:	mov	w1, #0x1                   	// #1
  4015c8:	str	w26, [sp, #24]
  4015cc:	bl	401180 <fd_nonblock@plt>
  4015d0:	tbz	w0, #31, 40163c <main+0x1b0>
  4015d4:	mov	w19, w0
  4015d8:	mov	w0, wzr
  4015dc:	bl	401140 <log_get_max_level_realm@plt>
  4015e0:	cmp	w0, #0x3
  4015e4:	b.lt	40160c <main+0x180>  // b.tstop
  4015e8:	adrp	x2, 402000 <determine_state_file+0x104>
  4015ec:	adrp	x4, 402000 <determine_state_file+0x104>
  4015f0:	adrp	x5, 402000 <determine_state_file+0x104>
  4015f4:	add	x2, x2, #0x4fb
  4015f8:	add	x4, x4, #0x50f
  4015fc:	add	x5, x5, #0x5fd
  401600:	mov	w0, #0x3                   	// #3
  401604:	mov	w3, #0x130                 	// #304
  401608:	b	4015b0 <main+0x124>
  40160c:	mov	w8, wzr
  401610:	neg	w9, w19
  401614:	sub	w19, w8, w9, uxtb
  401618:	b	401c40 <main+0x7b4>
  40161c:	adrp	x0, 402000 <determine_state_file+0x104>
  401620:	mov	w1, #0x902                 	// #2306
  401624:	add	x0, x0, #0x599
  401628:	movk	w1, #0x8, lsl #16
  40162c:	bl	401190 <open64@plt>
  401630:	mov	w26, w0
  401634:	str	w0, [sp, #24]
  401638:	tbnz	w0, #31, 40167c <main+0x1f0>
  40163c:	adrp	x19, 402000 <determine_state_file+0x104>
  401640:	adrp	x20, 402000 <determine_state_file+0x104>
  401644:	adrp	x21, 402000 <determine_state_file+0x104>
  401648:	adrp	x22, 402000 <determine_state_file+0x104>
  40164c:	adrp	x23, 402000 <determine_state_file+0x104>
  401650:	adrp	x27, 402000 <determine_state_file+0x104>
  401654:	adrp	x25, 402000 <determine_state_file+0x104>
  401658:	mov	w28, wzr
  40165c:	add	x19, x19, #0x630
  401660:	add	x20, x20, #0x4fb
  401664:	add	x21, x21, #0x50f
  401668:	add	x22, x22, #0x6c4
  40166c:	add	x23, x23, #0xbd0
  401670:	add	x27, x27, #0x778
  401674:	add	x25, x25, #0x7b5
  401678:	b	4016dc <main+0x250>
  40167c:	bl	4011a0 <__errno_location@plt>
  401680:	ldr	w19, [x0]
  401684:	mov	w0, wzr
  401688:	bl	401140 <log_get_max_level_realm@plt>
  40168c:	cmp	w19, #0x2
  401690:	b.ne	401e48 <main+0x9bc>  // b.any
  401694:	cmp	w0, #0x7
  401698:	b.lt	401e40 <main+0x9b4>  // b.tstop
  40169c:	adrp	x2, 402000 <determine_state_file+0x104>
  4016a0:	adrp	x4, 402000 <determine_state_file+0x104>
  4016a4:	adrp	x5, 402000 <determine_state_file+0x104>
  4016a8:	add	x2, x2, #0x4fb
  4016ac:	add	x4, x4, #0x50f
  4016b0:	add	x5, x5, #0x5a5
  4016b4:	mov	w0, #0x7                   	// #7
  4016b8:	mov	w1, #0x2                   	// #2
  4016bc:	mov	w3, #0x125                 	// #293
  4016c0:	b	401e3c <main+0x9b0>
  4016c4:	bl	4011b0 <log_internal_realm@plt>
  4016c8:	ldur	x0, [x29, #-16]
  4016cc:	bl	4011c0 <free@plt>
  4016d0:	ldur	x0, [x29, #-8]
  4016d4:	bl	4011c0 <free@plt>
  4016d8:	ldr	w26, [sp, #24]
  4016dc:	add	x1, sp, #0x8
  4016e0:	mov	w2, #0x8                   	// #8
  4016e4:	mov	w0, w26
  4016e8:	bl	4011d0 <read@plt>
  4016ec:	tbnz	x0, #63, 40173c <main+0x2b0>
  4016f0:	cmp	x0, #0x8
  4016f4:	b.ne	401c00 <main+0x774>  // b.any
  4016f8:	ldrb	w26, [sp, #12]
  4016fc:	cmp	w26, #0x8
  401700:	b.ls	401794 <main+0x308>  // b.plast
  401704:	mov	w0, wzr
  401708:	bl	401140 <log_get_max_level_realm@plt>
  40170c:	cmp	w0, #0x7
  401710:	b.lt	4016d8 <main+0x24c>  // b.tstop
  401714:	mov	w0, #0x7                   	// #7
  401718:	mov	w3, #0x15b                 	// #347
  40171c:	mov	w1, wzr
  401720:	mov	x2, x20
  401724:	mov	x4, x21
  401728:	mov	x5, x22
  40172c:	mov	w6, w26
  401730:	bl	4011b0 <log_internal_realm@plt>
  401734:	ldr	w26, [sp, #24]
  401738:	b	4016dc <main+0x250>
  40173c:	bl	4011a0 <__errno_location@plt>
  401740:	ldr	w24, [x0]
  401744:	cmp	w24, #0xb
  401748:	b.ne	401bc8 <main+0x73c>  // b.any
  40174c:	tbnz	w28, #0, 40175c <main+0x2d0>
  401750:	mov	w0, wzr
  401754:	mov	x1, x19
  401758:	bl	4011e0 <sd_notify@plt>
  40175c:	ldr	w0, [sp, #24]
  401760:	mov	w2, #0x4b40                	// #19264
  401764:	mov	w1, #0x1                   	// #1
  401768:	movk	w2, #0x4c, lsl #16
  40176c:	mov	w28, #0x1                   	// #1
  401770:	bl	4011f0 <fd_wait_for_event@plt>
  401774:	cmn	w0, #0x4
  401778:	b.eq	4016d8 <main+0x24c>  // b.none
  40177c:	mov	w26, w0
  401780:	tbnz	w0, #31, 401dd0 <main+0x944>
  401784:	cbz	w26, 401e08 <main+0x97c>
  401788:	ldr	w26, [sp, #24]
  40178c:	mov	w28, #0x1                   	// #1
  401790:	b	4016dc <main+0x250>
  401794:	ldrb	w24, [sp, #13]
  401798:	ldr	x26, [x23, w26, uxtw #3]
  40179c:	cbz	w24, 4018c0 <main+0x434>
  4017a0:	cmp	w24, #0x1
  4017a4:	b.eq	40185c <main+0x3d0>  // b.none
  4017a8:	cmp	w24, #0x2
  4017ac:	b.ne	4019c0 <main+0x534>  // b.any
  4017b0:	mov	w0, wzr
  4017b4:	bl	401140 <log_get_max_level_realm@plt>
  4017b8:	cmp	w0, #0x7
  4017bc:	b.lt	4017e4 <main+0x358>  // b.tstop
  4017c0:	ldr	w6, [sp, #8]
  4017c4:	mov	w0, #0x7                   	// #7
  4017c8:	mov	w3, #0x16c                 	// #364
  4017cc:	mov	w1, wzr
  4017d0:	mov	x2, x20
  4017d4:	mov	x4, x21
  4017d8:	mov	x5, x27
  4017dc:	mov	x7, x26
  4017e0:	bl	4011b0 <log_internal_realm@plt>
  4017e4:	ldr	w8, [sp, #24]
  4017e8:	stur	xzr, [x29, #-8]
  4017ec:	tbnz	w8, #31, 401e90 <main+0xa04>
  4017f0:	add	x0, sp, #0x8
  4017f4:	sub	x1, x29, #0x8
  4017f8:	bl	401efc <determine_state_file>
  4017fc:	tbnz	w0, #31, 4016d0 <main+0x244>
  401800:	ldr	w1, [sp, #8]
  401804:	ldur	x2, [x29, #-8]
  401808:	add	x0, sp, #0x10
  40180c:	bl	4022d4 <save_state_queue_remove>
  401810:	mov	w0, #0x1                   	// #1
  401814:	mov	w1, #0x28                  	// #40
  401818:	bl	401200 <calloc@plt>
  40181c:	cbz	x0, 4016d0 <main+0x244>
  401820:	ldur	x9, [x29, #-8]
  401824:	ldr	w10, [sp, #8]
  401828:	ldrb	w11, [sp, #14]
  40182c:	ldr	x8, [sp, #16]
  401830:	stur	xzr, [x29, #-8]
  401834:	str	x9, [x0, #24]
  401838:	str	w10, [x0, #16]
  40183c:	str	w11, [x0, #32]
  401840:	cbz	x8, 401a00 <main+0x574>
  401844:	mov	x9, x8
  401848:	ldr	x8, [x8]
  40184c:	cbnz	x8, 401844 <main+0x3b8>
  401850:	str	x9, [x0, #8]
  401854:	str	x0, [x9]
  401858:	b	4016d0 <main+0x244>
  40185c:	mov	w0, wzr
  401860:	bl	401140 <log_get_max_level_realm@plt>
  401864:	cmp	w0, #0x7
  401868:	b.lt	401894 <main+0x408>  // b.tstop
  40186c:	ldr	w6, [sp, #8]
  401870:	adrp	x5, 402000 <determine_state_file+0x104>
  401874:	mov	w0, #0x7                   	// #7
  401878:	mov	w3, #0x167                 	// #359
  40187c:	mov	w1, wzr
  401880:	mov	x2, x20
  401884:	mov	x4, x21
  401888:	add	x5, x5, #0x73c
  40188c:	mov	x7, x26
  401890:	bl	4011b0 <log_internal_realm@plt>
  401894:	ldr	w8, [sp, #24]
  401898:	stur	xzr, [x29, #-8]
  40189c:	tbnz	w8, #31, 401eb4 <main+0xa28>
  4018a0:	add	x0, sp, #0x8
  4018a4:	sub	x1, x29, #0x8
  4018a8:	bl	401efc <determine_state_file>
  4018ac:	ldr	w1, [sp, #8]
  4018b0:	ldur	x2, [x29, #-8]
  4018b4:	add	x0, sp, #0x10
  4018b8:	bl	4022d4 <save_state_queue_remove>
  4018bc:	b	4016d0 <main+0x244>
  4018c0:	mov	w0, wzr
  4018c4:	bl	401140 <log_get_max_level_realm@plt>
  4018c8:	cmp	w0, #0x7
  4018cc:	b.lt	4018f8 <main+0x46c>  // b.tstop
  4018d0:	ldr	w6, [sp, #8]
  4018d4:	adrp	x5, 402000 <determine_state_file+0x104>
  4018d8:	mov	w0, #0x7                   	// #7
  4018dc:	mov	w3, #0x162                 	// #354
  4018e0:	mov	w1, wzr
  4018e4:	mov	x2, x20
  4018e8:	mov	x4, x21
  4018ec:	add	x5, x5, #0x6fe
  4018f0:	mov	x7, x26
  4018f4:	bl	4011b0 <log_internal_realm@plt>
  4018f8:	ldr	w8, [sp, #24]
  4018fc:	stp	xzr, xzr, [x29, #-16]
  401900:	tbnz	w8, #31, 401ed8 <main+0xa4c>
  401904:	bl	401210 <shall_restore_state@plt>
  401908:	cbz	w0, 4016c8 <main+0x23c>
  40190c:	add	x0, sp, #0x8
  401910:	sub	x1, x29, #0x8
  401914:	bl	401efc <determine_state_file>
  401918:	tbnz	w0, #31, 4016c8 <main+0x23c>
  40191c:	ldur	x0, [x29, #-8]
  401920:	sub	x1, x29, #0x10
  401924:	bl	401220 <read_one_line_file@plt>
  401928:	cbz	w0, 401938 <main+0x4ac>
  40192c:	mov	w24, w0
  401930:	cmn	w0, #0x2
  401934:	b.ne	401a0c <main+0x580>  // b.any
  401938:	ldrb	w8, [sp, #14]
  40193c:	ldur	x0, [x29, #-8]
  401940:	adrp	x9, 402000 <determine_state_file+0x104>
  401944:	add	x9, x9, #0x85e
  401948:	cmp	w8, #0x0
  40194c:	adrp	x8, 402000 <determine_state_file+0x104>
  401950:	add	x8, x8, #0x85c
  401954:	csel	x1, x9, x8, eq  // eq = none
  401958:	mov	w2, #0x83                  	// #131
  40195c:	mov	x3, xzr
  401960:	bl	401230 <write_string_file_ts@plt>
  401964:	mov	w24, w0
  401968:	mov	w0, wzr
  40196c:	bl	401140 <log_get_max_level_realm@plt>
  401970:	tbnz	w24, #31, 401aa8 <main+0x61c>
  401974:	cmp	w0, #0x7
  401978:	b.lt	4016c8 <main+0x23c>  // b.tstop
  40197c:	ldrb	w8, [sp, #14]
  401980:	ldur	x7, [x29, #-8]
  401984:	adrp	x9, 402000 <determine_state_file+0x104>
  401988:	add	x9, x9, #0x85e
  40198c:	cmp	w8, #0x0
  401990:	adrp	x8, 402000 <determine_state_file+0x104>
  401994:	add	x8, x8, #0x85c
  401998:	adrp	x4, 402000 <determine_state_file+0x104>
  40199c:	adrp	x5, 402000 <determine_state_file+0x104>
  4019a0:	csel	x6, x9, x8, eq  // eq = none
  4019a4:	mov	w0, #0x7                   	// #7
  4019a8:	mov	w3, #0xa1                  	// #161
  4019ac:	mov	w1, wzr
  4019b0:	mov	x2, x20
  4019b4:	add	x4, x4, #0x8dc
  4019b8:	add	x5, x5, #0x844
  4019bc:	b	4016c4 <main+0x238>
  4019c0:	mov	w0, wzr
  4019c4:	bl	401140 <log_get_max_level_realm@plt>
  4019c8:	cmp	w0, #0x7
  4019cc:	b.lt	4016d8 <main+0x24c>  // b.tstop
  4019d0:	ldr	w7, [sp, #8]
  4019d4:	mov	w0, #0x7                   	// #7
  4019d8:	mov	w3, #0x171                 	// #369
  4019dc:	mov	w1, wzr
  4019e0:	mov	x2, x20
  4019e4:	mov	x4, x21
  4019e8:	mov	x5, x25
  4019ec:	mov	w6, w24
  4019f0:	str	x26, [sp]
  4019f4:	bl	4011b0 <log_internal_realm@plt>
  4019f8:	ldr	w26, [sp, #24]
  4019fc:	b	4016dc <main+0x250>
  401a00:	stp	xzr, xzr, [x0]
  401a04:	str	x0, [sp, #16]
  401a08:	b	4016d0 <main+0x244>
  401a0c:	tbnz	w24, #31, 401adc <main+0x650>
  401a10:	ldur	x0, [x29, #-16]
  401a14:	bl	401240 <parse_boolean@plt>
  401a18:	mov	w26, w0
  401a1c:	tbnz	w0, #31, 401b18 <main+0x68c>
  401a20:	ldr	w8, [sp, #8]
  401a24:	ldr	w0, [sp, #24]
  401a28:	mov	w9, #0x200                 	// #512
  401a2c:	sub	x1, x29, #0x18
  401a30:	mov	w2, #0x8                   	// #8
  401a34:	sturh	w9, [x29, #-20]
  401a38:	sturb	w26, [x29, #-18]
  401a3c:	stur	w8, [x29, #-24]
  401a40:	sturb	wzr, [x29, #-17]
  401a44:	bl	401250 <write@plt>
  401a48:	tbnz	x0, #63, 401b54 <main+0x6c8>
  401a4c:	mov	x24, x0
  401a50:	mov	w0, wzr
  401a54:	bl	401140 <log_get_max_level_realm@plt>
  401a58:	cmp	x24, #0x8
  401a5c:	b.ne	401b94 <main+0x708>  // b.any
  401a60:	cmp	w0, #0x7
  401a64:	b.lt	4016c8 <main+0x23c>  // b.tstop
  401a68:	ldur	x7, [x29, #-8]
  401a6c:	adrp	x8, 402000 <determine_state_file+0x104>
  401a70:	adrp	x9, 402000 <determine_state_file+0x104>
  401a74:	cmp	w26, #0x0
  401a78:	add	x8, x8, #0x85c
  401a7c:	add	x9, x9, #0x85e
  401a80:	adrp	x4, 402000 <determine_state_file+0x104>
  401a84:	adrp	x5, 402000 <determine_state_file+0x104>
  401a88:	csel	x6, x9, x8, eq  // eq = none
  401a8c:	mov	w0, #0x7                   	// #7
  401a90:	mov	w3, #0xb8                  	// #184
  401a94:	mov	w1, wzr
  401a98:	mov	x2, x20
  401a9c:	add	x4, x4, #0x8dc
  401aa0:	add	x5, x5, #0x986
  401aa4:	b	4016c4 <main+0x238>
  401aa8:	cmp	w0, #0x3
  401aac:	b.lt	4016c8 <main+0x23c>  // b.tstop
  401ab0:	ldur	x6, [x29, #-8]
  401ab4:	adrp	x4, 402000 <determine_state_file+0x104>
  401ab8:	adrp	x5, 402000 <determine_state_file+0x104>
  401abc:	mov	w0, #0x3                   	// #3
  401ac0:	mov	w3, #0x9f                  	// #159
  401ac4:	mov	w1, w24
  401ac8:	mov	x2, x20
  401acc:	add	x4, x4, #0x8dc
  401ad0:	add	x5, x5, #0x822
  401ad4:	bl	4011b0 <log_internal_realm@plt>
  401ad8:	b	4016c8 <main+0x23c>
  401adc:	mov	w0, wzr
  401ae0:	bl	401140 <log_get_max_level_realm@plt>
  401ae4:	cmp	w0, #0x3
  401ae8:	b.lt	4016c8 <main+0x23c>  // b.tstop
  401aec:	ldur	x6, [x29, #-8]
  401af0:	adrp	x4, 402000 <determine_state_file+0x104>
  401af4:	adrp	x5, 402000 <determine_state_file+0x104>
  401af8:	mov	w0, #0x3                   	// #3
  401afc:	mov	w3, #0xa5                  	// #165
  401b00:	mov	w1, w24
  401b04:	mov	x2, x20
  401b08:	add	x4, x4, #0x8dc
  401b0c:	add	x5, x5, #0x8e7
  401b10:	bl	4011b0 <log_internal_realm@plt>
  401b14:	b	4016c8 <main+0x23c>
  401b18:	mov	w0, wzr
  401b1c:	bl	401140 <log_get_max_level_realm@plt>
  401b20:	cmp	w0, #0x3
  401b24:	b.lt	4016c8 <main+0x23c>  // b.tstop
  401b28:	ldur	x6, [x29, #-8]
  401b2c:	adrp	x4, 402000 <determine_state_file+0x104>
  401b30:	adrp	x5, 402000 <determine_state_file+0x104>
  401b34:	mov	w0, #0x3                   	// #3
  401b38:	mov	w3, #0xa9                  	// #169
  401b3c:	mov	w1, w26
  401b40:	mov	x2, x20
  401b44:	add	x4, x4, #0x8dc
  401b48:	add	x5, x5, #0x908
  401b4c:	bl	4011b0 <log_internal_realm@plt>
  401b50:	b	4016c8 <main+0x23c>
  401b54:	mov	w0, wzr
  401b58:	bl	401140 <log_get_max_level_realm@plt>
  401b5c:	cmp	w0, #0x3
  401b60:	b.lt	4016c8 <main+0x23c>  // b.tstop
  401b64:	bl	4011a0 <__errno_location@plt>
  401b68:	ldr	w1, [x0]
  401b6c:	ldr	w6, [sp, #8]
  401b70:	adrp	x4, 402000 <determine_state_file+0x104>
  401b74:	adrp	x5, 402000 <determine_state_file+0x104>
  401b78:	mov	w0, #0x3                   	// #3
  401b7c:	mov	w3, #0xb3                  	// #179
  401b80:	mov	x2, x20
  401b84:	add	x4, x4, #0x8dc
  401b88:	add	x5, x5, #0x92a
  401b8c:	bl	4011b0 <log_internal_realm@plt>
  401b90:	b	4016c8 <main+0x23c>
  401b94:	cmp	w0, #0x3
  401b98:	b.lt	4016c8 <main+0x23c>  // b.tstop
  401b9c:	mov	w1, #0x5                   	// #5
  401ba0:	adrp	x4, 402000 <determine_state_file+0x104>
  401ba4:	adrp	x5, 402000 <determine_state_file+0x104>
  401ba8:	mov	w0, #0x3                   	// #3
  401bac:	movk	w1, #0x4000, lsl #16
  401bb0:	mov	w3, #0xb6                  	// #182
  401bb4:	mov	x2, x20
  401bb8:	add	x4, x4, #0x8dc
  401bbc:	add	x5, x5, #0x954
  401bc0:	bl	4011b0 <log_internal_realm@plt>
  401bc4:	b	4016c8 <main+0x23c>
  401bc8:	mov	w0, wzr
  401bcc:	bl	401140 <log_get_max_level_realm@plt>
  401bd0:	cmp	w0, #0x3
  401bd4:	b.lt	401c00 <main+0x774>  // b.tstop
  401bd8:	adrp	x2, 402000 <determine_state_file+0x104>
  401bdc:	adrp	x4, 402000 <determine_state_file+0x104>
  401be0:	adrp	x5, 402000 <determine_state_file+0x104>
  401be4:	add	x2, x2, #0x4fb
  401be8:	add	x4, x4, #0x50f
  401bec:	add	x5, x5, #0x67a
  401bf0:	mov	w0, #0x3                   	// #3
  401bf4:	mov	w3, #0x153                 	// #339
  401bf8:	mov	w1, w24
  401bfc:	bl	4011b0 <log_internal_realm@plt>
  401c00:	mov	w0, wzr
  401c04:	bl	401140 <log_get_max_level_realm@plt>
  401c08:	cmp	w0, #0x3
  401c0c:	b.lt	401dc8 <main+0x93c>  // b.tstop
  401c10:	adrp	x2, 402000 <determine_state_file+0x104>
  401c14:	adrp	x4, 402000 <determine_state_file+0x104>
  401c18:	adrp	x5, 402000 <determine_state_file+0x104>
  401c1c:	mov	w1, #0x5                   	// #5
  401c20:	add	x2, x2, #0x4fb
  401c24:	add	x4, x4, #0x50f
  401c28:	add	x5, x5, #0x69e
  401c2c:	mov	w0, #0x3                   	// #3
  401c30:	movk	w1, #0x4000, lsl #16
  401c34:	mov	w3, #0x157                 	// #343
  401c38:	bl	4011b0 <log_internal_realm@plt>
  401c3c:	mov	w19, w0
  401c40:	ldr	x20, [sp, #16]
  401c44:	cbz	x20, 401d4c <main+0x8c0>
  401c48:	adrp	x26, 402000 <determine_state_file+0x104>
  401c4c:	adrp	x27, 402000 <determine_state_file+0x104>
  401c50:	adrp	x21, 402000 <determine_state_file+0x104>
  401c54:	adrp	x22, 402000 <determine_state_file+0x104>
  401c58:	adrp	x23, 402000 <determine_state_file+0x104>
  401c5c:	adrp	x24, 402000 <determine_state_file+0x104>
  401c60:	add	x26, x26, #0x85c
  401c64:	add	x27, x27, #0x85e
  401c68:	add	x21, x21, #0x4fb
  401c6c:	add	x22, x22, #0x80d
  401c70:	add	x23, x23, #0x822
  401c74:	add	x24, x24, #0x844
  401c78:	b	401c94 <main+0x808>
  401c7c:	ldr	x0, [x20, #24]
  401c80:	bl	4011c0 <free@plt>
  401c84:	mov	x0, x20
  401c88:	bl	4011c0 <free@plt>
  401c8c:	ldr	x20, [sp, #16]
  401c90:	cbz	x20, 401d4c <main+0x8c0>
  401c94:	ldr	x8, [x20]
  401c98:	cbz	x8, 401ca4 <main+0x818>
  401c9c:	ldr	x9, [x20, #8]
  401ca0:	str	x9, [x8, #8]
  401ca4:	ldr	x9, [x20, #8]
  401ca8:	cbz	x9, 401cb4 <main+0x828>
  401cac:	str	x8, [x9]
  401cb0:	b	401cb8 <main+0x82c>
  401cb4:	str	x8, [sp, #16]
  401cb8:	ldr	w8, [x20, #32]
  401cbc:	ldr	x0, [x20, #24]
  401cc0:	mov	w2, #0x83                  	// #131
  401cc4:	mov	x3, xzr
  401cc8:	cmp	w8, #0x0
  401ccc:	csel	x1, x27, x26, eq  // eq = none
  401cd0:	stp	xzr, xzr, [x20]
  401cd4:	bl	401230 <write_string_file_ts@plt>
  401cd8:	mov	w25, w0
  401cdc:	mov	w0, wzr
  401ce0:	bl	401140 <log_get_max_level_realm@plt>
  401ce4:	tbnz	w25, #31, 401d20 <main+0x894>
  401ce8:	cmp	w0, #0x7
  401cec:	b.lt	401c7c <main+0x7f0>  // b.tstop
  401cf0:	ldr	w8, [x20, #32]
  401cf4:	ldr	x7, [x20, #24]
  401cf8:	mov	w0, #0x7                   	// #7
  401cfc:	mov	w3, #0xfd                  	// #253
  401d00:	cmp	w8, #0x0
  401d04:	csel	x6, x27, x26, eq  // eq = none
  401d08:	mov	w1, wzr
  401d0c:	mov	x2, x21
  401d10:	mov	x4, x22
  401d14:	mov	x5, x24
  401d18:	bl	4011b0 <log_internal_realm@plt>
  401d1c:	b	401c7c <main+0x7f0>
  401d20:	cmp	w0, #0x3
  401d24:	b.lt	401c7c <main+0x7f0>  // b.tstop
  401d28:	ldr	x6, [x20, #24]
  401d2c:	mov	w0, #0x3                   	// #3
  401d30:	mov	w3, #0xfb                  	// #251
  401d34:	mov	w1, w25
  401d38:	mov	x2, x21
  401d3c:	mov	x4, x22
  401d40:	mov	x5, x23
  401d44:	bl	4011b0 <log_internal_realm@plt>
  401d48:	b	401c7c <main+0x7f0>
  401d4c:	ldr	w0, [sp, #24]
  401d50:	bl	401260 <safe_close@plt>
  401d54:	bl	401270 <ask_password_agent_close@plt>
  401d58:	bl	401280 <polkit_agent_close@plt>
  401d5c:	bl	401290 <pager_close@plt>
  401d60:	bl	4012a0 <mac_selinux_finish@plt>
  401d64:	adrp	x8, 41f000 <__FRAME_END__+0x1c310>
  401d68:	ldr	x8, [x8, #3744]
  401d6c:	adrp	x20, 41f000 <__FRAME_END__+0x1c310>
  401d70:	ldr	x20, [x20, #3752]
  401d74:	add	x9, x8, #0x7
  401d78:	and	x21, x9, #0xfffffffffffffff8
  401d7c:	cmp	x21, x20
  401d80:	cset	w9, cs  // cs = hs, nlast
  401d84:	cmp	x8, #0x0
  401d88:	cset	w8, eq  // eq = none
  401d8c:	orr	w8, w8, w9
  401d90:	tbnz	w8, #0, 401da4 <main+0x918>
  401d94:	ldp	x0, x8, [x21], #16
  401d98:	blr	x8
  401d9c:	cmp	x21, x20
  401da0:	b.cc	401d94 <main+0x908>  // b.lo, b.ul, b.last
  401da4:	lsr	w0, w19, #31
  401da8:	ldp	x20, x19, [sp, #144]
  401dac:	ldp	x22, x21, [sp, #128]
  401db0:	ldp	x24, x23, [sp, #112]
  401db4:	ldp	x26, x25, [sp, #96]
  401db8:	ldp	x28, x27, [sp, #80]
  401dbc:	ldp	x29, x30, [sp, #64]
  401dc0:	add	sp, sp, #0xa0
  401dc4:	ret
  401dc8:	mov	w19, #0xfffffffb            	// #-5
  401dcc:	b	401c40 <main+0x7b4>
  401dd0:	mov	w0, wzr
  401dd4:	bl	401140 <log_get_max_level_realm@plt>
  401dd8:	cmp	w0, #0x3
  401ddc:	b.lt	401e74 <main+0x9e8>  // b.tstop
  401de0:	adrp	x2, 402000 <determine_state_file+0x104>
  401de4:	adrp	x4, 402000 <determine_state_file+0x104>
  401de8:	adrp	x5, 402000 <determine_state_file+0x104>
  401dec:	add	x2, x2, #0x4fb
  401df0:	add	x4, x4, #0x50f
  401df4:	add	x5, x5, #0x638
  401df8:	mov	w0, #0x3                   	// #3
  401dfc:	mov	w3, #0x14b                 	// #331
  401e00:	mov	w1, w26
  401e04:	b	401c38 <main+0x7ac>
  401e08:	mov	w0, wzr
  401e0c:	bl	401140 <log_get_max_level_realm@plt>
  401e10:	cmp	w0, #0x7
  401e14:	b.lt	401e40 <main+0x9b4>  // b.tstop
  401e18:	adrp	x2, 402000 <determine_state_file+0x104>
  401e1c:	adrp	x4, 402000 <determine_state_file+0x104>
  401e20:	adrp	x5, 402000 <determine_state_file+0x104>
  401e24:	add	x2, x2, #0x4fb
  401e28:	add	x4, x4, #0x50f
  401e2c:	add	x5, x5, #0x657
  401e30:	mov	w0, #0x7                   	// #7
  401e34:	mov	w3, #0x14f                 	// #335
  401e38:	mov	w1, wzr
  401e3c:	bl	4011b0 <log_internal_realm@plt>
  401e40:	mov	w19, wzr
  401e44:	b	401c40 <main+0x7b4>
  401e48:	cmp	w0, #0x3
  401e4c:	b.lt	401e80 <main+0x9f4>  // b.tstop
  401e50:	adrp	x2, 402000 <determine_state_file+0x104>
  401e54:	adrp	x4, 402000 <determine_state_file+0x104>
  401e58:	adrp	x5, 402000 <determine_state_file+0x104>
  401e5c:	add	x2, x2, #0x4fb
  401e60:	add	x4, x4, #0x50f
  401e64:	add	x5, x5, #0x5de
  401e68:	mov	w0, #0x3                   	// #3
  401e6c:	mov	w3, #0x129                 	// #297
  401e70:	b	4015b0 <main+0x124>
  401e74:	mov	w8, wzr
  401e78:	neg	w9, w26
  401e7c:	b	401614 <main+0x188>
  401e80:	cmp	w19, #0x0
  401e84:	mov	w8, wzr
  401e88:	cneg	w9, w19, mi  // mi = first
  401e8c:	b	401614 <main+0x188>
  401e90:	adrp	x1, 402000 <determine_state_file+0x104>
  401e94:	adrp	x2, 402000 <determine_state_file+0x104>
  401e98:	adrp	x4, 402000 <determine_state_file+0x104>
  401e9c:	add	x1, x1, #0x8c4
  401ea0:	add	x2, x2, #0x4fb
  401ea4:	add	x4, x4, #0xb8d
  401ea8:	mov	w3, #0xd0                  	// #208
  401eac:	mov	w0, wzr
  401eb0:	bl	4012b0 <log_assert_failed_realm@plt>
  401eb4:	adrp	x1, 402000 <determine_state_file+0x104>
  401eb8:	adrp	x2, 402000 <determine_state_file+0x104>
  401ebc:	adrp	x4, 402000 <determine_state_file+0x104>
  401ec0:	add	x1, x1, #0x8c4
  401ec4:	add	x2, x2, #0x4fb
  401ec8:	add	x4, x4, #0xad0
  401ecc:	mov	w3, #0xeb                  	// #235
  401ed0:	mov	w0, wzr
  401ed4:	bl	4012b0 <log_assert_failed_realm@plt>
  401ed8:	adrp	x1, 402000 <determine_state_file+0x104>
  401edc:	adrp	x2, 402000 <determine_state_file+0x104>
  401ee0:	adrp	x4, 402000 <determine_state_file+0x104>
  401ee4:	add	x1, x1, #0x8c4
  401ee8:	add	x2, x2, #0x4fb
  401eec:	add	x4, x4, #0x88d
  401ef0:	mov	w3, #0x8f                  	// #143
  401ef4:	mov	w0, wzr
  401ef8:	bl	4012b0 <log_assert_failed_realm@plt>

0000000000401efc <determine_state_file>:
  401efc:	sub	sp, sp, #0x70
  401f00:	stp	x29, x30, [sp, #64]
  401f04:	stp	x22, x21, [sp, #80]
  401f08:	stp	x20, x19, [sp, #96]
  401f0c:	add	x29, sp, #0x40
  401f10:	str	xzr, [sp, #24]
  401f14:	cbz	x0, 40226c <determine_state_file+0x370>
  401f18:	mov	x19, x1
  401f1c:	cbz	x1, 40228c <determine_state_file+0x390>
  401f20:	stp	xzr, xzr, [x29, #-16]
  401f24:	ldr	w2, [x0]
  401f28:	adrp	x1, 402000 <determine_state_file+0x104>
  401f2c:	mov	x20, x0
  401f30:	add	x1, x1, #0xa4d
  401f34:	sub	x0, x29, #0x10
  401f38:	bl	4012c0 <asprintf@plt>
  401f3c:	tbnz	w0, #31, 401fe8 <determine_state_file+0xec>
  401f40:	ldur	x2, [x29, #-16]
  401f44:	adrp	x1, 402000 <determine_state_file+0x104>
  401f48:	add	x1, x1, #0x9e4
  401f4c:	sub	x0, x29, #0x8
  401f50:	bl	4012d0 <sd_device_new_from_subsystem_sysname@plt>
  401f54:	tbnz	w0, #31, 402008 <determine_state_file+0x10c>
  401f58:	ldur	x0, [x29, #-8]
  401f5c:	adrp	x1, 402000 <determine_state_file+0x104>
  401f60:	add	x1, x1, #0xa81
  401f64:	sub	x2, x29, #0x18
  401f68:	bl	4012e0 <sd_device_get_sysattr_value@plt>
  401f6c:	tbnz	w0, #31, 40205c <determine_state_file+0x160>
  401f70:	ldur	x21, [x29, #-8]
  401f74:	str	xzr, [sp, #32]
  401f78:	cbz	x21, 401f8c <determine_state_file+0x90>
  401f7c:	mov	w0, wzr
  401f80:	bl	401140 <log_get_max_level_realm@plt>
  401f84:	cmp	w0, #0x7
  401f88:	b.ge	402244 <determine_state_file+0x348>  // b.tcont
  401f8c:	mov	x6, xzr
  401f90:	ldur	x8, [x29, #-24]
  401f94:	adrp	x9, 402000 <determine_state_file+0x104>
  401f98:	add	x9, x9, #0xa86
  401f9c:	cmp	x6, #0x0
  401fa0:	str	x8, [sp, #16]
  401fa4:	adrp	x8, 402000 <determine_state_file+0x104>
  401fa8:	adrp	x2, 402000 <determine_state_file+0x104>
  401fac:	adrp	x4, 402000 <determine_state_file+0x104>
  401fb0:	csel	x5, xzr, x9, eq  // eq = none
  401fb4:	add	x8, x8, #0xaaf
  401fb8:	add	x2, x2, #0x4fb
  401fbc:	add	x4, x4, #0xa56
  401fc0:	mov	w0, #0x7                   	// #7
  401fc4:	mov	w3, #0x5a                  	// #90
  401fc8:	mov	w1, wzr
  401fcc:	mov	x7, xzr
  401fd0:	stp	xzr, x8, [sp]
  401fd4:	bl	4012f0 <log_object_internal@plt>
  401fd8:	ldur	x21, [x29, #-8]
  401fdc:	mov	w22, wzr
  401fe0:	stur	xzr, [x29, #-8]
  401fe4:	b	4020f8 <determine_state_file+0x1fc>
  401fe8:	adrp	x1, 402000 <determine_state_file+0x104>
  401fec:	adrp	x3, 402000 <determine_state_file+0x104>
  401ff0:	add	x1, x1, #0x4fb
  401ff4:	add	x3, x3, #0xa56
  401ff8:	mov	w2, #0x4f                  	// #79
  401ffc:	mov	w0, wzr
  402000:	bl	401300 <log_oom_internal@plt>
  402004:	b	4020f0 <determine_state_file+0x1f4>
  402008:	add	w8, w0, #0x13
  40200c:	mov	w22, w0
  402010:	cmp	w8, #0x11
  402014:	mov	w21, #0x3                   	// #3
  402018:	b.hi	402038 <determine_state_file+0x13c>  // b.pmore
  40201c:	mov	w9, #0x1                   	// #1
  402020:	lsl	w8, w9, w8
  402024:	mov	w9, #0x2001                	// #8193
  402028:	movk	w9, #0x2, lsl #16
  40202c:	tst	w8, w9
  402030:	b.eq	402038 <determine_state_file+0x13c>  // b.none
  402034:	mov	w21, #0x7                   	// #7
  402038:	mov	w0, wzr
  40203c:	bl	401140 <log_get_max_level_realm@plt>
  402040:	cmp	w0, w21
  402044:	b.ge	4020c4 <determine_state_file+0x1c8>  // b.tcont
  402048:	mov	w8, wzr
  40204c:	neg	w9, w22
  402050:	mov	x21, xzr
  402054:	sub	w22, w8, w9, uxtb
  402058:	b	4020f8 <determine_state_file+0x1fc>
  40205c:	ldur	x22, [x29, #-8]
  402060:	mov	w21, w0
  402064:	str	xzr, [sp, #32]
  402068:	cbz	x22, 40207c <determine_state_file+0x180>
  40206c:	mov	w0, wzr
  402070:	bl	401140 <log_get_max_level_realm@plt>
  402074:	cmp	w0, #0x7
  402078:	b.ge	402258 <determine_state_file+0x35c>  // b.tcont
  40207c:	mov	x6, xzr
  402080:	adrp	x8, 402000 <determine_state_file+0x104>
  402084:	add	x8, x8, #0xa86
  402088:	cmp	x6, #0x0
  40208c:	csel	x5, xzr, x8, eq  // eq = none
  402090:	adrp	x8, 402000 <determine_state_file+0x104>
  402094:	adrp	x2, 402000 <determine_state_file+0x104>
  402098:	adrp	x4, 402000 <determine_state_file+0x104>
  40209c:	add	x8, x8, #0xa8e
  4020a0:	add	x2, x2, #0x4fb
  4020a4:	add	x4, x4, #0xa56
  4020a8:	mov	w0, #0x7                   	// #7
  4020ac:	mov	w3, #0x58                  	// #88
  4020b0:	mov	w1, w21
  4020b4:	mov	x7, xzr
  4020b8:	stp	xzr, x8, [sp]
  4020bc:	bl	4012f0 <log_object_internal@plt>
  4020c0:	b	4020f0 <determine_state_file+0x1f4>
  4020c4:	ldur	x6, [x29, #-16]
  4020c8:	adrp	x2, 402000 <determine_state_file+0x104>
  4020cc:	adrp	x4, 402000 <determine_state_file+0x104>
  4020d0:	adrp	x5, 402000 <determine_state_file+0x104>
  4020d4:	add	x2, x2, #0x4fb
  4020d8:	add	x4, x4, #0xa56
  4020dc:	add	x5, x5, #0xa62
  4020e0:	mov	w3, #0x54                  	// #84
  4020e4:	mov	w0, w21
  4020e8:	mov	w1, w22
  4020ec:	bl	4011b0 <log_internal_realm@plt>
  4020f0:	mov	w22, w0
  4020f4:	mov	x21, xzr
  4020f8:	ldur	x0, [x29, #-16]
  4020fc:	bl	4011c0 <free@plt>
  402100:	ldur	x0, [x29, #-8]
  402104:	cbz	x0, 40210c <determine_state_file+0x210>
  402108:	bl	401310 <sd_device_unref@plt>
  40210c:	tbnz	w22, #31, 4021b4 <determine_state_file+0x2b8>
  402110:	adrp	x1, 402000 <determine_state_file+0x104>
  402114:	add	x1, x1, #0x9e4
  402118:	add	x3, sp, #0x18
  40211c:	mov	x2, #0xffffffffffffffff    	// #-1
  402120:	mov	x0, x21
  402124:	bl	401320 <device_wait_for_initialization@plt>
  402128:	tbnz	w0, #31, 4021b0 <determine_state_file+0x2b4>
  40212c:	ldrb	w8, [x20, #4]
  402130:	cmp	x8, #0x8
  402134:	b.hi	4022b0 <determine_state_file+0x3b4>  // b.pmore
  402138:	adrp	x9, 402000 <determine_state_file+0x104>
  40213c:	add	x9, x9, #0xbd0
  402140:	ldr	x0, [sp, #24]
  402144:	ldr	x20, [x9, x8, lsl #3]
  402148:	adrp	x1, 402000 <determine_state_file+0x104>
  40214c:	add	x1, x1, #0xa15
  402150:	sub	x2, x29, #0x8
  402154:	bl	401330 <sd_device_get_property_value@plt>
  402158:	tbnz	w0, #31, 4021e4 <determine_state_file+0x2e8>
  40215c:	ldur	x0, [x29, #-8]
  402160:	bl	401340 <cescape@plt>
  402164:	cbz	x0, 40221c <determine_state_file+0x320>
  402168:	mov	x22, x0
  40216c:	adrp	x0, 402000 <determine_state_file+0x104>
  402170:	adrp	x2, 402000 <determine_state_file+0x104>
  402174:	add	x0, x0, #0xa32
  402178:	add	x2, x2, #0xa4b
  40217c:	mov	x1, x22
  402180:	mov	x3, x20
  402184:	mov	x4, xzr
  402188:	bl	401350 <strjoin_real@plt>
  40218c:	mov	x20, x0
  402190:	mov	x0, x22
  402194:	bl	4011c0 <free@plt>
  402198:	cbz	x20, 402200 <determine_state_file+0x304>
  40219c:	mov	w22, wzr
  4021a0:	str	x20, [x19]
  4021a4:	ldr	x0, [sp, #24]
  4021a8:	cbnz	x0, 4021bc <determine_state_file+0x2c0>
  4021ac:	b	4021c0 <determine_state_file+0x2c4>
  4021b0:	mov	w22, w0
  4021b4:	ldr	x0, [sp, #24]
  4021b8:	cbz	x0, 4021c0 <determine_state_file+0x2c4>
  4021bc:	bl	401310 <sd_device_unref@plt>
  4021c0:	cbz	x21, 4021cc <determine_state_file+0x2d0>
  4021c4:	mov	x0, x21
  4021c8:	bl	401310 <sd_device_unref@plt>
  4021cc:	mov	w0, w22
  4021d0:	ldp	x20, x19, [sp, #96]
  4021d4:	ldp	x22, x21, [sp, #80]
  4021d8:	ldp	x29, x30, [sp, #64]
  4021dc:	add	sp, sp, #0x70
  4021e0:	ret
  4021e4:	adrp	x0, 402000 <determine_state_file+0x104>
  4021e8:	add	x0, x0, #0xa32
  4021ec:	mov	x1, x20
  4021f0:	mov	x2, xzr
  4021f4:	bl	401350 <strjoin_real@plt>
  4021f8:	mov	x20, x0
  4021fc:	cbnz	x20, 40219c <determine_state_file+0x2a0>
  402200:	adrp	x1, 402000 <determine_state_file+0x104>
  402204:	adrp	x3, 402000 <determine_state_file+0x104>
  402208:	add	x1, x1, #0x4fb
  40220c:	add	x3, x3, #0xa1d
  402210:	mov	w2, #0x82                  	// #130
  402214:	mov	w0, wzr
  402218:	b	402230 <determine_state_file+0x334>
  40221c:	adrp	x1, 402000 <determine_state_file+0x104>
  402220:	adrp	x3, 402000 <determine_state_file+0x104>
  402224:	add	x1, x1, #0x4fb
  402228:	add	x3, x3, #0xa1d
  40222c:	mov	w2, #0x7b                  	// #123
  402230:	bl	401300 <log_oom_internal@plt>
  402234:	mov	w22, w0
  402238:	ldr	x0, [sp, #24]
  40223c:	cbnz	x0, 4021bc <determine_state_file+0x2c0>
  402240:	b	4021c0 <determine_state_file+0x2c4>
  402244:	add	x1, sp, #0x20
  402248:	mov	x0, x21
  40224c:	bl	401360 <sd_device_get_sysname@plt>
  402250:	ldr	x6, [sp, #32]
  402254:	b	401f90 <determine_state_file+0x94>
  402258:	add	x1, sp, #0x20
  40225c:	mov	x0, x22
  402260:	bl	401360 <sd_device_get_sysname@plt>
  402264:	ldr	x6, [sp, #32]
  402268:	b	402080 <determine_state_file+0x184>
  40226c:	adrp	x1, 402000 <determine_state_file+0x104>
  402270:	adrp	x2, 402000 <determine_state_file+0x104>
  402274:	adrp	x4, 402000 <determine_state_file+0x104>
  402278:	add	x1, x1, #0x8d6
  40227c:	add	x2, x2, #0x4fb
  402280:	add	x4, x4, #0x9a1
  402284:	mov	w3, #0x69                  	// #105
  402288:	bl	4012b0 <log_assert_failed_realm@plt>
  40228c:	adrp	x1, 402000 <determine_state_file+0x104>
  402290:	adrp	x2, 402000 <determine_state_file+0x104>
  402294:	adrp	x4, 402000 <determine_state_file+0x104>
  402298:	add	x1, x1, #0x9e0
  40229c:	add	x2, x2, #0x4fb
  4022a0:	add	x4, x4, #0x9a1
  4022a4:	mov	w3, #0x6a                  	// #106
  4022a8:	mov	w0, wzr
  4022ac:	bl	4012b0 <log_assert_failed_realm@plt>
  4022b0:	adrp	x1, 402000 <determine_state_file+0x104>
  4022b4:	adrp	x2, 402000 <determine_state_file+0x104>
  4022b8:	adrp	x4, 402000 <determine_state_file+0x104>
  4022bc:	add	x1, x1, #0x9eb
  4022c0:	add	x2, x2, #0x4fb
  4022c4:	add	x4, x4, #0x9a1
  4022c8:	mov	w3, #0x74                  	// #116
  4022cc:	mov	w0, wzr
  4022d0:	bl	4012b0 <log_assert_failed_realm@plt>

00000000004022d4 <save_state_queue_remove>:
  4022d4:	stp	x29, x30, [sp, #-96]!
  4022d8:	stp	x28, x27, [sp, #16]
  4022dc:	stp	x26, x25, [sp, #32]
  4022e0:	stp	x24, x23, [sp, #48]
  4022e4:	stp	x22, x21, [sp, #64]
  4022e8:	stp	x20, x19, [sp, #80]
  4022ec:	mov	x29, sp
  4022f0:	cbz	x0, 402420 <save_state_queue_remove+0x14c>
  4022f4:	ldr	x22, [x0]
  4022f8:	mov	x21, x0
  4022fc:	cbz	x22, 402404 <save_state_queue_remove+0x130>
  402300:	adrp	x26, 402000 <determine_state_file+0x104>
  402304:	adrp	x27, 402000 <determine_state_file+0x104>
  402308:	adrp	x23, 402000 <determine_state_file+0x104>
  40230c:	adrp	x24, 402000 <determine_state_file+0x104>
  402310:	adrp	x25, 402000 <determine_state_file+0x104>
  402314:	mov	x19, x2
  402318:	mov	w20, w1
  40231c:	add	x26, x26, #0x85c
  402320:	add	x27, x27, #0x85e
  402324:	add	x23, x23, #0x4fb
  402328:	add	x24, x24, #0xb49
  40232c:	add	x25, x25, #0xb61
  402330:	b	402354 <save_state_queue_remove+0x80>
  402334:	str	x8, [x9]
  402338:	ldr	x0, [x22, #24]
  40233c:	stp	xzr, xzr, [x22]
  402340:	bl	4011c0 <free@plt>
  402344:	mov	x0, x22
  402348:	bl	4011c0 <free@plt>
  40234c:	mov	x22, x28
  402350:	cbz	x28, 402404 <save_state_queue_remove+0x130>
  402354:	ldr	x28, [x22]
  402358:	cbz	x19, 40236c <save_state_queue_remove+0x98>
  40235c:	ldr	x0, [x22, #24]
  402360:	mov	x1, x19
  402364:	bl	401370 <strcmp@plt>
  402368:	cbz	w0, 402378 <save_state_queue_remove+0xa4>
  40236c:	ldr	w8, [x22, #16]
  402370:	cmp	w8, w20
  402374:	b.ne	40234c <save_state_queue_remove+0x78>  // b.any
  402378:	mov	w0, wzr
  40237c:	bl	401140 <log_get_max_level_realm@plt>
  402380:	cmp	w0, #0x7
  402384:	mov	x8, x28
  402388:	b.lt	4023bc <save_state_queue_remove+0xe8>  // b.tstop
  40238c:	ldr	w8, [x22, #32]
  402390:	ldr	x7, [x22, #24]
  402394:	mov	w0, #0x7                   	// #7
  402398:	mov	w3, #0xc3                  	// #195
  40239c:	cmp	w8, #0x0
  4023a0:	csel	x6, x27, x26, eq  // eq = none
  4023a4:	mov	w1, wzr
  4023a8:	mov	x2, x23
  4023ac:	mov	x4, x24
  4023b0:	mov	x5, x25
  4023b4:	bl	4011b0 <log_internal_realm@plt>
  4023b8:	ldr	x8, [x22]
  4023bc:	cbz	x8, 4023c8 <save_state_queue_remove+0xf4>
  4023c0:	ldr	x9, [x22, #8]
  4023c4:	str	x9, [x8, #8]
  4023c8:	ldr	x9, [x22, #8]
  4023cc:	cbnz	x9, 402334 <save_state_queue_remove+0x60>
  4023d0:	ldr	x9, [x21]
  4023d4:	cmp	x9, x22
  4023d8:	mov	x9, x21
  4023dc:	b.eq	402334 <save_state_queue_remove+0x60>  // b.none
  4023e0:	adrp	x1, 402000 <determine_state_file+0x104>
  4023e4:	adrp	x2, 402000 <determine_state_file+0x104>
  4023e8:	adrp	x4, 402000 <determine_state_file+0x104>
  4023ec:	add	x1, x1, #0x7fd
  4023f0:	add	x2, x2, #0x4fb
  4023f4:	add	x4, x4, #0xb0e
  4023f8:	mov	w3, #0xc4                  	// #196
  4023fc:	mov	w0, wzr
  402400:	bl	4012b0 <log_assert_failed_realm@plt>
  402404:	ldp	x20, x19, [sp, #80]
  402408:	ldp	x22, x21, [sp, #64]
  40240c:	ldp	x24, x23, [sp, #48]
  402410:	ldp	x26, x25, [sp, #32]
  402414:	ldp	x28, x27, [sp, #16]
  402418:	ldp	x29, x30, [sp], #96
  40241c:	ret
  402420:	adrp	x1, 402000 <determine_state_file+0x104>
  402424:	adrp	x2, 402000 <determine_state_file+0x104>
  402428:	adrp	x4, 402000 <determine_state_file+0x104>
  40242c:	add	x1, x1, #0x7fb
  402430:	add	x2, x2, #0x4fb
  402434:	add	x4, x4, #0xb0e
  402438:	mov	w3, #0xbf                  	// #191
  40243c:	bl	4012b0 <log_assert_failed_realm@plt>

0000000000402440 <__libc_csu_init>:
  402440:	stp	x29, x30, [sp, #-64]!
  402444:	mov	x29, sp
  402448:	stp	x19, x20, [sp, #16]
  40244c:	adrp	x20, 41f000 <__FRAME_END__+0x1c310>
  402450:	add	x20, x20, #0xc70
  402454:	stp	x21, x22, [sp, #32]
  402458:	adrp	x21, 41f000 <__FRAME_END__+0x1c310>
  40245c:	add	x21, x21, #0xc68
  402460:	sub	x20, x20, x21
  402464:	mov	w22, w0
  402468:	stp	x23, x24, [sp, #48]
  40246c:	mov	x23, x1
  402470:	mov	x24, x2
  402474:	bl	4010d8 <_init>
  402478:	cmp	xzr, x20, asr #3
  40247c:	b.eq	4024a8 <__libc_csu_init+0x68>  // b.none
  402480:	asr	x20, x20, #3
  402484:	mov	x19, #0x0                   	// #0
  402488:	ldr	x3, [x21, x19, lsl #3]
  40248c:	mov	x2, x24
  402490:	add	x19, x19, #0x1
  402494:	mov	x1, x23
  402498:	mov	w0, w22
  40249c:	blr	x3
  4024a0:	cmp	x20, x19
  4024a4:	b.ne	402488 <__libc_csu_init+0x48>  // b.any
  4024a8:	ldp	x19, x20, [sp, #16]
  4024ac:	ldp	x21, x22, [sp, #32]
  4024b0:	ldp	x23, x24, [sp, #48]
  4024b4:	ldp	x29, x30, [sp], #64
  4024b8:	ret
  4024bc:	nop

00000000004024c0 <__libc_csu_fini>:
  4024c0:	ret

Disassembly of section .fini:

00000000004024c4 <_fini>:
  4024c4:	stp	x29, x30, [sp, #-16]!
  4024c8:	mov	x29, sp
  4024cc:	ldp	x29, x30, [sp], #16
  4024d0:	ret
