
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lsefisystab.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_register_command>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	x3, [sp, #16]
  18:	mov	w4, #0x0                   	// #0
  1c:	ldr	x3, [sp, #16]
  20:	ldr	x2, [sp, #24]
  24:	ldr	x1, [sp, #32]
  28:	ldr	x0, [sp, #40]
  2c:	bl	0 <grub_register_command_prio>
  30:	ldp	x29, x30, [sp], #48
  34:	ret

0000000000000038 <grub_utf16_to_utf8>:
  38:	sub	sp, sp, #0x30
  3c:	str	x0, [sp, #24]
  40:	str	x1, [sp, #16]
  44:	str	x2, [sp, #8]
  48:	str	wzr, [sp, #44]
  4c:	b	39c <grub_utf16_to_utf8+0x364>
  50:	ldr	x0, [sp, #16]
  54:	add	x1, x0, #0x2
  58:	str	x1, [sp, #16]
  5c:	ldrh	w0, [x0]
  60:	str	w0, [sp, #40]
  64:	ldr	w0, [sp, #44]
  68:	cmp	w0, #0x0
  6c:	b.eq	184 <grub_utf16_to_utf8+0x14c>  // b.none
  70:	ldr	w1, [sp, #40]
  74:	mov	w0, #0xdbff                	// #56319
  78:	cmp	w1, w0
  7c:	b.ls	15c <grub_utf16_to_utf8+0x124>  // b.plast
  80:	ldr	w1, [sp, #40]
  84:	mov	w0, #0xdfff                	// #57343
  88:	cmp	w1, w0
  8c:	b.hi	15c <grub_utf16_to_utf8+0x124>  // b.pmore
  90:	ldr	w1, [sp, #44]
  94:	mov	w0, #0xffff2800            	// #-55296
  98:	add	w0, w1, w0
  9c:	lsl	w1, w0, #10
  a0:	ldr	w0, [sp, #40]
  a4:	add	w1, w1, w0
  a8:	mov	w0, #0x2400                	// #9216
  ac:	add	w0, w1, w0
  b0:	str	w0, [sp, #40]
  b4:	ldr	w0, [sp, #40]
  b8:	lsr	w0, w0, #18
  bc:	and	w1, w0, #0xff
  c0:	ldr	x0, [sp, #24]
  c4:	add	x2, x0, #0x1
  c8:	str	x2, [sp, #24]
  cc:	orr	w1, w1, #0xfffffff0
  d0:	and	w1, w1, #0xff
  d4:	strb	w1, [x0]
  d8:	ldr	w0, [sp, #40]
  dc:	lsr	w0, w0, #12
  e0:	and	w0, w0, #0xff
  e4:	and	w0, w0, #0x3f
  e8:	and	w1, w0, #0xff
  ec:	ldr	x0, [sp, #24]
  f0:	add	x2, x0, #0x1
  f4:	str	x2, [sp, #24]
  f8:	orr	w1, w1, #0xffffff80
  fc:	and	w1, w1, #0xff
 100:	strb	w1, [x0]
 104:	ldr	w0, [sp, #40]
 108:	lsr	w0, w0, #6
 10c:	and	w0, w0, #0xff
 110:	and	w0, w0, #0x3f
 114:	and	w1, w0, #0xff
 118:	ldr	x0, [sp, #24]
 11c:	add	x2, x0, #0x1
 120:	str	x2, [sp, #24]
 124:	orr	w1, w1, #0xffffff80
 128:	and	w1, w1, #0xff
 12c:	strb	w1, [x0]
 130:	ldr	w0, [sp, #40]
 134:	and	w0, w0, #0xff
 138:	and	w0, w0, #0x3f
 13c:	and	w1, w0, #0xff
 140:	ldr	x0, [sp, #24]
 144:	add	x2, x0, #0x1
 148:	str	x2, [sp, #24]
 14c:	orr	w1, w1, #0xffffff80
 150:	and	w1, w1, #0xff
 154:	strb	w1, [x0]
 158:	b	17c <grub_utf16_to_utf8+0x144>
 15c:	ldr	x0, [sp, #24]
 160:	add	x1, x0, #0x1
 164:	str	x1, [sp, #24]
 168:	mov	w1, #0x3f                  	// #63
 16c:	strb	w1, [x0]
 170:	ldr	x0, [sp, #16]
 174:	sub	x0, x0, #0x2
 178:	str	x0, [sp, #16]
 17c:	str	wzr, [sp, #44]
 180:	b	39c <grub_utf16_to_utf8+0x364>
 184:	ldr	w0, [sp, #40]
 188:	cmp	w0, #0x7f
 18c:	b.hi	1ac <grub_utf16_to_utf8+0x174>  // b.pmore
 190:	ldr	x0, [sp, #24]
 194:	add	x1, x0, #0x1
 198:	str	x1, [sp, #24]
 19c:	ldr	w1, [sp, #40]
 1a0:	and	w1, w1, #0xff
 1a4:	strb	w1, [x0]
 1a8:	b	39c <grub_utf16_to_utf8+0x364>
 1ac:	ldr	w0, [sp, #40]
 1b0:	cmp	w0, #0x7ff
 1b4:	b.hi	208 <grub_utf16_to_utf8+0x1d0>  // b.pmore
 1b8:	ldr	w0, [sp, #40]
 1bc:	lsr	w0, w0, #6
 1c0:	and	w1, w0, #0xff
 1c4:	ldr	x0, [sp, #24]
 1c8:	add	x2, x0, #0x1
 1cc:	str	x2, [sp, #24]
 1d0:	orr	w1, w1, #0xffffffc0
 1d4:	and	w1, w1, #0xff
 1d8:	strb	w1, [x0]
 1dc:	ldr	w0, [sp, #40]
 1e0:	and	w0, w0, #0xff
 1e4:	and	w0, w0, #0x3f
 1e8:	and	w1, w0, #0xff
 1ec:	ldr	x0, [sp, #24]
 1f0:	add	x2, x0, #0x1
 1f4:	str	x2, [sp, #24]
 1f8:	orr	w1, w1, #0xffffff80
 1fc:	and	w1, w1, #0xff
 200:	strb	w1, [x0]
 204:	b	39c <grub_utf16_to_utf8+0x364>
 208:	ldr	w1, [sp, #40]
 20c:	mov	w0, #0xd7ff                	// #55295
 210:	cmp	w1, w0
 214:	b.ls	234 <grub_utf16_to_utf8+0x1fc>  // b.plast
 218:	ldr	w1, [sp, #40]
 21c:	mov	w0, #0xdbff                	// #56319
 220:	cmp	w1, w0
 224:	b.hi	234 <grub_utf16_to_utf8+0x1fc>  // b.pmore
 228:	ldr	w0, [sp, #40]
 22c:	str	w0, [sp, #44]
 230:	b	39c <grub_utf16_to_utf8+0x364>
 234:	ldr	w1, [sp, #40]
 238:	mov	w0, #0xdbff                	// #56319
 23c:	cmp	w1, w0
 240:	b.ls	26c <grub_utf16_to_utf8+0x234>  // b.plast
 244:	ldr	w1, [sp, #40]
 248:	mov	w0, #0xdfff                	// #57343
 24c:	cmp	w1, w0
 250:	b.hi	26c <grub_utf16_to_utf8+0x234>  // b.pmore
 254:	ldr	x0, [sp, #24]
 258:	add	x1, x0, #0x1
 25c:	str	x1, [sp, #24]
 260:	mov	w1, #0x3f                  	// #63
 264:	strb	w1, [x0]
 268:	b	39c <grub_utf16_to_utf8+0x364>
 26c:	ldr	w1, [sp, #40]
 270:	mov	w0, #0xffff                	// #65535
 274:	cmp	w1, w0
 278:	b.hi	2f8 <grub_utf16_to_utf8+0x2c0>  // b.pmore
 27c:	ldr	w0, [sp, #40]
 280:	lsr	w0, w0, #12
 284:	and	w1, w0, #0xff
 288:	ldr	x0, [sp, #24]
 28c:	add	x2, x0, #0x1
 290:	str	x2, [sp, #24]
 294:	orr	w1, w1, #0xffffffe0
 298:	and	w1, w1, #0xff
 29c:	strb	w1, [x0]
 2a0:	ldr	w0, [sp, #40]
 2a4:	lsr	w0, w0, #6
 2a8:	and	w0, w0, #0xff
 2ac:	and	w0, w0, #0x3f
 2b0:	and	w1, w0, #0xff
 2b4:	ldr	x0, [sp, #24]
 2b8:	add	x2, x0, #0x1
 2bc:	str	x2, [sp, #24]
 2c0:	orr	w1, w1, #0xffffff80
 2c4:	and	w1, w1, #0xff
 2c8:	strb	w1, [x0]
 2cc:	ldr	w0, [sp, #40]
 2d0:	and	w0, w0, #0xff
 2d4:	and	w0, w0, #0x3f
 2d8:	and	w1, w0, #0xff
 2dc:	ldr	x0, [sp, #24]
 2e0:	add	x2, x0, #0x1
 2e4:	str	x2, [sp, #24]
 2e8:	orr	w1, w1, #0xffffff80
 2ec:	and	w1, w1, #0xff
 2f0:	strb	w1, [x0]
 2f4:	b	39c <grub_utf16_to_utf8+0x364>
 2f8:	ldr	w0, [sp, #40]
 2fc:	lsr	w0, w0, #18
 300:	and	w1, w0, #0xff
 304:	ldr	x0, [sp, #24]
 308:	add	x2, x0, #0x1
 30c:	str	x2, [sp, #24]
 310:	orr	w1, w1, #0xfffffff0
 314:	and	w1, w1, #0xff
 318:	strb	w1, [x0]
 31c:	ldr	w0, [sp, #40]
 320:	lsr	w0, w0, #12
 324:	and	w0, w0, #0xff
 328:	and	w0, w0, #0x3f
 32c:	and	w1, w0, #0xff
 330:	ldr	x0, [sp, #24]
 334:	add	x2, x0, #0x1
 338:	str	x2, [sp, #24]
 33c:	orr	w1, w1, #0xffffff80
 340:	and	w1, w1, #0xff
 344:	strb	w1, [x0]
 348:	ldr	w0, [sp, #40]
 34c:	lsr	w0, w0, #6
 350:	and	w0, w0, #0xff
 354:	and	w0, w0, #0x3f
 358:	and	w1, w0, #0xff
 35c:	ldr	x0, [sp, #24]
 360:	add	x2, x0, #0x1
 364:	str	x2, [sp, #24]
 368:	orr	w1, w1, #0xffffff80
 36c:	and	w1, w1, #0xff
 370:	strb	w1, [x0]
 374:	ldr	w0, [sp, #40]
 378:	and	w0, w0, #0xff
 37c:	and	w0, w0, #0x3f
 380:	and	w1, w0, #0xff
 384:	ldr	x0, [sp, #24]
 388:	add	x2, x0, #0x1
 38c:	str	x2, [sp, #24]
 390:	orr	w1, w1, #0xffffff80
 394:	and	w1, w1, #0xff
 398:	strb	w1, [x0]
 39c:	ldr	x0, [sp, #8]
 3a0:	sub	x1, x0, #0x1
 3a4:	str	x1, [sp, #8]
 3a8:	cmp	x0, #0x0
 3ac:	b.ne	50 <grub_utf16_to_utf8+0x18>  // b.any
 3b0:	ldr	x0, [sp, #24]
 3b4:	add	sp, sp, #0x30
 3b8:	ret

00000000000003bc <grub_cmd_lsefisystab>:
 3bc:	stp	x29, x30, [sp, #-96]!
 3c0:	mov	x29, sp
 3c4:	str	x0, [sp, #40]
 3c8:	str	w1, [sp, #36]
 3cc:	str	x2, [sp, #24]
 3d0:	adrp	x0, 0 <grub_register_command>
 3d4:	add	x0, x0, #0x0
 3d8:	ldr	x0, [x0]
 3dc:	ldr	x0, [x0]
 3e0:	str	x0, [sp, #56]
 3e4:	ldr	x1, [sp, #56]
 3e8:	adrp	x0, 0 <grub_register_command>
 3ec:	add	x0, x0, #0x0
 3f0:	ldr	x0, [x0]
 3f4:	bl	0 <grub_printf>
 3f8:	ldr	x0, [sp, #56]
 3fc:	ldr	x1, [x0]
 400:	ldr	x0, [sp, #56]
 404:	ldr	w0, [x0, #8]
 408:	mov	w2, w0
 40c:	adrp	x0, 0 <grub_register_command>
 410:	add	x0, x0, #0x0
 414:	ldr	x0, [x0]
 418:	bl	0 <grub_printf>
 41c:	adrp	x0, 0 <grub_register_command>
 420:	add	x0, x0, #0x0
 424:	ldr	x0, [x0]
 428:	bl	0 <grub_printf>
 42c:	ldr	x0, [sp, #56]
 430:	ldr	x0, [x0, #24]
 434:	str	x0, [sp, #72]
 438:	b	448 <grub_cmd_lsefisystab+0x8c>
 43c:	ldr	x0, [sp, #72]
 440:	add	x0, x0, #0x2
 444:	str	x0, [sp, #72]
 448:	ldr	x0, [sp, #72]
 44c:	ldrh	w0, [x0]
 450:	cmp	w0, #0x0
 454:	b.ne	43c <grub_cmd_lsefisystab+0x80>  // b.any
 458:	ldr	x0, [sp, #56]
 45c:	ldr	x0, [x0, #24]
 460:	ldr	x1, [sp, #72]
 464:	sub	x0, x1, x0
 468:	lsl	x0, x0, #1
 46c:	add	x0, x0, #0x1
 470:	bl	0 <grub_malloc>
 474:	str	x0, [sp, #48]
 478:	ldr	x0, [sp, #48]
 47c:	cmp	x0, #0x0
 480:	b.ne	498 <grub_cmd_lsefisystab+0xdc>  // b.any
 484:	adrp	x0, 0 <grub_register_command>
 488:	add	x0, x0, #0x0
 48c:	ldr	x0, [x0]
 490:	ldr	w0, [x0]
 494:	b	694 <grub_cmd_lsefisystab+0x2d8>
 498:	ldr	x0, [sp, #56]
 49c:	ldr	x3, [x0, #24]
 4a0:	ldr	x0, [sp, #56]
 4a4:	ldr	x0, [x0, #24]
 4a8:	ldr	x1, [sp, #72]
 4ac:	sub	x0, x1, x0
 4b0:	asr	x0, x0, #1
 4b4:	mov	x2, x0
 4b8:	mov	x1, x3
 4bc:	ldr	x0, [sp, #48]
 4c0:	bl	38 <grub_utf16_to_utf8>
 4c4:	strb	wzr, [x0]
 4c8:	ldr	x1, [sp, #48]
 4cc:	adrp	x0, 0 <grub_register_command>
 4d0:	add	x0, x0, #0x0
 4d4:	ldr	x0, [x0]
 4d8:	bl	0 <grub_printf>
 4dc:	ldr	x0, [sp, #48]
 4e0:	bl	0 <grub_free>
 4e4:	ldr	x0, [sp, #56]
 4e8:	ldr	w0, [x0, #32]
 4ec:	mov	w1, w0
 4f0:	adrp	x0, 0 <grub_register_command>
 4f4:	add	x0, x0, #0x0
 4f8:	ldr	x0, [x0]
 4fc:	bl	0 <grub_printf>
 500:	ldr	x0, [sp, #56]
 504:	ldr	x0, [x0, #104]
 508:	mov	x1, x0
 50c:	adrp	x0, 0 <grub_register_command>
 510:	add	x0, x0, #0x0
 514:	ldr	x0, [x0]
 518:	bl	0 <grub_printf>
 51c:	ldr	x0, [sp, #56]
 520:	ldr	x0, [x0, #112]
 524:	str	x0, [sp, #88]
 528:	str	wzr, [sp, #84]
 52c:	b	67c <grub_cmd_lsefisystab+0x2c0>
 530:	ldr	x0, [sp, #88]
 534:	ldr	x0, [x0, #16]
 538:	mov	x1, x0
 53c:	adrp	x0, 0 <grub_register_command>
 540:	add	x0, x0, #0x0
 544:	ldr	x0, [x0]
 548:	bl	0 <grub_printf>
 54c:	ldr	x0, [sp, #88]
 550:	ldr	w1, [x0]
 554:	ldr	x0, [sp, #88]
 558:	ldrh	w0, [x0, #4]
 55c:	mov	w2, w0
 560:	ldr	x0, [sp, #88]
 564:	ldrh	w0, [x0, #6]
 568:	mov	w3, w0
 56c:	adrp	x0, 0 <grub_register_command>
 570:	add	x0, x0, #0x0
 574:	ldr	x0, [x0]
 578:	bl	0 <grub_printf>
 57c:	str	wzr, [sp, #68]
 580:	b	5b4 <grub_cmd_lsefisystab+0x1f8>
 584:	ldr	x1, [sp, #88]
 588:	ldr	w0, [sp, #68]
 58c:	add	x0, x1, x0
 590:	ldrb	w0, [x0, #8]
 594:	mov	w1, w0
 598:	adrp	x0, 0 <grub_register_command>
 59c:	add	x0, x0, #0x0
 5a0:	ldr	x0, [x0]
 5a4:	bl	0 <grub_printf>
 5a8:	ldr	w0, [sp, #68]
 5ac:	add	w0, w0, #0x1
 5b0:	str	w0, [sp, #68]
 5b4:	ldr	w0, [sp, #68]
 5b8:	cmp	w0, #0x7
 5bc:	b.ls	584 <grub_cmd_lsefisystab+0x1c8>  // b.plast
 5c0:	str	wzr, [sp, #68]
 5c4:	b	648 <grub_cmd_lsefisystab+0x28c>
 5c8:	ldr	w1, [sp, #68]
 5cc:	mov	x0, x1
 5d0:	lsl	x0, x0, #1
 5d4:	add	x0, x0, x1
 5d8:	lsl	x0, x0, #3
 5dc:	adrp	x1, 0 <grub_register_command>
 5e0:	add	x1, x1, #0x0
 5e4:	ldr	x1, [x1]
 5e8:	add	x0, x0, x1
 5ec:	ldr	x1, [sp, #88]
 5f0:	mov	x2, #0x10                  	// #16
 5f4:	bl	0 <grub_memcmp>
 5f8:	cmp	w0, #0x0
 5fc:	b.ne	63c <grub_cmd_lsefisystab+0x280>  // b.any
 600:	adrp	x0, 0 <grub_register_command>
 604:	add	x0, x0, #0x0
 608:	ldr	x2, [x0]
 60c:	ldr	w1, [sp, #68]
 610:	mov	x0, x1
 614:	lsl	x0, x0, #1
 618:	add	x0, x0, x1
 61c:	lsl	x0, x0, #3
 620:	add	x0, x2, x0
 624:	ldr	x0, [x0, #16]
 628:	mov	x1, x0
 62c:	adrp	x0, 0 <grub_register_command>
 630:	add	x0, x0, #0x0
 634:	ldr	x0, [x0]
 638:	bl	0 <grub_printf>
 63c:	ldr	w0, [sp, #68]
 640:	add	w0, w0, #0x1
 644:	str	w0, [sp, #68]
 648:	ldr	w0, [sp, #68]
 64c:	cmp	w0, #0xe
 650:	b.ls	5c8 <grub_cmd_lsefisystab+0x20c>  // b.plast
 654:	adrp	x0, 0 <grub_register_command>
 658:	add	x0, x0, #0x0
 65c:	ldr	x0, [x0]
 660:	bl	0 <grub_printf>
 664:	ldr	x0, [sp, #88]
 668:	add	x0, x0, #0x18
 66c:	str	x0, [sp, #88]
 670:	ldr	w0, [sp, #84]
 674:	add	w0, w0, #0x1
 678:	str	w0, [sp, #84]
 67c:	ldr	w1, [sp, #84]
 680:	ldr	x0, [sp, #56]
 684:	ldr	x0, [x0, #104]
 688:	cmp	x1, x0
 68c:	b.cc	530 <grub_cmd_lsefisystab+0x174>  // b.lo, b.ul, b.last
 690:	mov	w0, #0x0                   	// #0
 694:	ldp	x29, x30, [sp], #96
 698:	ret
 69c:	nop
	...

0000000000000710 <grub_mod_init>:
 710:	stp	x29, x30, [sp, #-32]!
 714:	mov	x29, sp
 718:	str	x0, [sp, #24]
 71c:	adrp	x0, 0 <grub_register_command>
 720:	add	x0, x0, #0x0
 724:	ldr	x3, [x0]
 728:	adrp	x0, 0 <grub_register_command>
 72c:	add	x0, x0, #0x0
 730:	ldr	x2, [x0]
 734:	adrp	x0, 0 <grub_register_command>
 738:	add	x0, x0, #0x0
 73c:	ldr	x1, [x0]
 740:	adrp	x0, 0 <grub_register_command>
 744:	add	x0, x0, #0x0
 748:	ldr	x0, [x0]
 74c:	bl	0 <grub_register_command>
 750:	mov	x1, x0
 754:	adrp	x0, 0 <grub_register_command>
 758:	add	x0, x0, #0x0
 75c:	ldr	x0, [x0]
 760:	str	x1, [x0]
 764:	nop
 768:	ldp	x29, x30, [sp], #32
 76c:	ret
	...

0000000000000798 <grub_mod_fini>:
 798:	stp	x29, x30, [sp, #-16]!
 79c:	mov	x29, sp
 7a0:	adrp	x0, 0 <grub_register_command>
 7a4:	add	x0, x0, #0x0
 7a8:	ldr	x0, [x0]
 7ac:	ldr	x0, [x0]
 7b0:	bl	0 <grub_unregister_command>
 7b4:	nop
 7b8:	ldp	x29, x30, [sp], #16
 7bc:	ret
	...
