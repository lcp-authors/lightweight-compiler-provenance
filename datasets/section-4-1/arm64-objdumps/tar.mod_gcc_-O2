
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x700>:
   0:	str	xzr, [x0, #16]
   4:	ret
   8:	stp	x29, x30, [sp, #-32]!
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	ldr	x19, [x0, #80]
  18:	ldr	x0, [x19, #40]
  1c:	bl	0 <grub_free>
  20:	mov	x0, x19
  24:	bl	0 <grub_free>
  28:	adrp	x0, 0 <grub_mod_init-0x700>
  2c:	ldr	x19, [sp, #16]
  30:	ldr	x0, [x0]
  34:	ldp	x29, x30, [sp], #32
  38:	ldr	w0, [x0]
  3c:	ret
	...
  48:	stp	x29, x30, [sp, #-32]!
  4c:	mov	x3, x2
  50:	mov	x4, x1
  54:	mov	x29, sp
  58:	stp	x19, x20, [sp, #16]
  5c:	mov	x19, x2
  60:	mov	x1, #0x0                   	// #0
  64:	ldp	x20, x7, [x0, #80]
  68:	ldr	x2, [x0, #24]
  6c:	ldr	x5, [x0, #96]
  70:	ldr	x0, [x20]
  74:	ldr	x6, [x20, #24]
  78:	stp	x7, x5, [x0, #48]
  7c:	add	x2, x6, x2
  80:	bl	0 <grub_disk_read>
  84:	cmp	w0, #0x0
  88:	ldr	x1, [x20]
  8c:	csinv	x0, x19, xzr, eq  // eq = none
  90:	ldp	x19, x20, [sp, #16]
  94:	str	xzr, [x1, #48]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	ldr	x0, [x0, #40]
  a4:	b	0 <grub_strdup>
  a8:	sub	sp, sp, #0x270
  ac:	stp	x29, x30, [sp]
  b0:	mov	x29, sp
  b4:	stp	x27, x28, [sp, #80]
  b8:	mov	x28, x0
  bc:	add	x0, sp, #0x78
  c0:	stp	x19, x20, [sp, #16]
  c4:	mov	x19, x1
  c8:	mov	x20, x3
  cc:	stp	x21, x22, [sp, #32]
  d0:	add	x21, x0, #0x88
  d4:	mov	w22, #0x3                   	// #3
  d8:	stp	x23, x24, [sp, #48]
  dc:	add	x24, sp, #0x179
  e0:	adrp	x23, 0 <grub_mod_init-0x700>
  e4:	stp	x25, x26, [sp, #64]
  e8:	mov	w26, #0x0                   	// #0
  ec:	mov	w25, #0x0                   	// #0
  f0:	str	x2, [sp, #96]
  f4:	ldr	x2, [x28, #16]
  f8:	str	x2, [x28, #8]
  fc:	ldr	x0, [x28]
 100:	add	x4, sp, #0x78
 104:	mov	x3, #0x1f4                 	// #500
 108:	mov	x1, #0x0                   	// #0
 10c:	bl	0 <grub_disk_read>
 110:	cbnz	w0, 2b4 <grub_mod_init-0x44c>
 114:	ldrb	w0, [sp, #120]
 118:	ldrb	w1, [sp, #465]
 11c:	orr	w0, w0, w1
 120:	tst	w0, #0xff
 124:	b.eq	2d8 <grub_mod_init-0x428>  // b.none
 128:	ldr	x1, [x23]
 12c:	mov	x0, x24
 130:	mov	x2, #0x5                   	// #5
 134:	bl	0 <grub_memcmp>
 138:	cbnz	w0, 2c4 <grub_mod_init-0x43c>
 13c:	ldrb	w0, [sp, #276]
 140:	cmp	w0, #0x4c
 144:	b.eq	22c <grub_mod_init-0x4d4>  // b.none
 148:	cmp	w0, #0x4b
 14c:	b.ne	2e8 <grub_mod_init-0x418>  // b.any
 150:	add	x5, sp, #0xf4
 154:	mov	x27, #0x0                   	// #0
 158:	b	168 <grub_mod_init-0x598>
 15c:	orr	x27, x4, x27, lsl #3
 160:	cmp	x5, x21
 164:	b.eq	184 <grub_mod_init-0x57c>  // b.none
 168:	ldrb	w4, [x5]
 16c:	add	x5, x5, #0x1
 170:	sub	w1, w4, #0x30
 174:	and	x4, x4, #0xf
 178:	and	w1, w1, #0xff
 17c:	cmp	w1, #0x7
 180:	b.ls	15c <grub_mod_init-0x5a4>  // b.plast
 184:	ldr	x0, [x28, #48]
 188:	add	x26, x27, #0x1
 18c:	cmp	x0, x26
 190:	b.cc	200 <grub_mod_init-0x500>  // b.lo, b.ul, b.last
 194:	ldr	x4, [x28, #40]
 198:	mov	x3, x27
 19c:	ldp	x0, x2, [x28]
 1a0:	mov	x1, #0x0                   	// #0
 1a4:	add	x2, x2, #0x200
 1a8:	bl	0 <grub_disk_read>
 1ac:	cbnz	w0, 1e0 <grub_mod_init-0x520>
 1b0:	ldr	x1, [x28, #40]
 1b4:	add	x0, x27, #0x1ff
 1b8:	and	x0, x0, #0xfffffffffffffe00
 1bc:	mov	w26, #0x1                   	// #1
 1c0:	strb	wzr, [x1, x27]
 1c4:	ldr	x2, [x28, #8]
 1c8:	add	x2, x2, #0x200
 1cc:	add	x2, x0, x2
 1d0:	str	x2, [x28, #8]
 1d4:	subs	w22, w22, #0x1
 1d8:	b.ne	fc <grub_mod_init-0x604>  // b.any
 1dc:	mov	w0, #0x0                   	// #0
 1e0:	ldp	x29, x30, [sp]
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x23, x24, [sp, #48]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	ldp	x27, x28, [sp, #80]
 1f8:	add	sp, sp, #0x270
 1fc:	ret
 200:	lsl	x26, x26, #1
 204:	mov	x0, x26
 208:	bl	0 <grub_malloc>
 20c:	mov	x4, x0
 210:	cbz	x0, 2b4 <grub_mod_init-0x44c>
 214:	ldr	x0, [x28, #40]
 218:	str	x4, [sp, #104]
 21c:	bl	0 <grub_free>
 220:	ldr	x4, [sp, #104]
 224:	stp	x4, x26, [x28, #40]
 228:	b	198 <grub_mod_init-0x568>
 22c:	add	x2, sp, #0xf4
 230:	mov	x25, #0x0                   	// #0
 234:	b	244 <grub_mod_init-0x4bc>
 238:	orr	x25, x1, x25, lsl #3
 23c:	cmp	x2, x21
 240:	b.eq	260 <grub_mod_init-0x4a0>  // b.none
 244:	ldrb	w1, [x2]
 248:	add	x2, x2, #0x1
 24c:	sub	w4, w1, #0x30
 250:	and	x1, x1, #0xf
 254:	and	w4, w4, #0xff
 258:	cmp	w4, #0x7
 25c:	b.ls	238 <grub_mod_init-0x4c8>  // b.plast
 260:	add	x0, x25, #0x1
 264:	bl	0 <grub_malloc>
 268:	str	x0, [x19]
 26c:	mov	x4, x0
 270:	cbz	x0, 2b4 <grub_mod_init-0x44c>
 274:	ldp	x0, x2, [x28]
 278:	mov	x1, #0x0                   	// #0
 27c:	mov	x3, x25
 280:	add	x2, x2, #0x200
 284:	bl	0 <grub_disk_read>
 288:	ldr	x1, [x19]
 28c:	strb	wzr, [x1, x25]
 290:	cbnz	w0, 1e0 <grub_mod_init-0x520>
 294:	ldr	x2, [x28, #8]
 298:	add	x0, x25, #0x1ff
 29c:	and	x0, x0, #0xfffffffffffffe00
 2a0:	mov	w25, #0x1                   	// #1
 2a4:	add	x2, x2, #0x200
 2a8:	add	x2, x0, x2
 2ac:	str	x2, [x28, #8]
 2b0:	b	1d4 <grub_mod_init-0x52c>
 2b4:	adrp	x0, 0 <grub_mod_init-0x700>
 2b8:	ldr	x0, [x0]
 2bc:	ldr	w0, [x0]
 2c0:	b	1e0 <grub_mod_init-0x520>
 2c4:	adrp	x1, 0 <grub_mod_init-0x700>
 2c8:	mov	w0, #0x9                   	// #9
 2cc:	ldr	x1, [x1]
 2d0:	bl	0 <grub_error>
 2d4:	b	1e0 <grub_mod_init-0x520>
 2d8:	mov	w1, #0xffffffff            	// #-1
 2dc:	mov	w0, #0x0                   	// #0
 2e0:	str	w1, [x20]
 2e4:	b	1e0 <grub_mod_init-0x520>
 2e8:	cbnz	w25, 348 <grub_mod_init-0x3b8>
 2ec:	mov	x22, #0x0                   	// #0
 2f0:	b	300 <grub_mod_init-0x400>
 2f4:	add	x22, x22, #0x1
 2f8:	cmp	x22, #0x9b
 2fc:	b.eq	4f0 <grub_mod_init-0x210>  // b.none
 300:	add	x0, sp, #0x78
 304:	add	x0, x0, x22
 308:	ldrb	w0, [x0, #345]
 30c:	cbnz	w0, 2f4 <grub_mod_init-0x40c>
 310:	add	x0, x22, #0x66
 314:	bl	0 <grub_malloc>
 318:	str	x0, [x19]
 31c:	mov	x1, x0
 320:	cbz	x0, 2b4 <grub_mod_init-0x44c>
 324:	ldrb	w2, [sp, #465]
 328:	cbnz	w2, 4cc <grub_mod_init-0x234>
 32c:	add	x0, x1, x22
 330:	mov	x2, #0x64                  	// #100
 334:	add	x1, sp, #0x78
 338:	bl	0 <grub_memmove>
 33c:	ldr	x0, [x19]
 340:	add	x22, x0, x22
 344:	strb	wzr, [x22, #100]
 348:	add	x0, sp, #0x78
 34c:	add	x1, sp, #0xf4
 350:	add	x4, x0, #0x88
 354:	mov	x3, #0x0                   	// #0
 358:	b	368 <grub_mod_init-0x398>
 35c:	orr	x3, x0, x3, lsl #3
 360:	cmp	x1, x4
 364:	b.eq	384 <grub_mod_init-0x37c>  // b.none
 368:	ldrb	w0, [x1]
 36c:	add	x1, x1, #0x1
 370:	sub	w2, w0, #0x30
 374:	and	x0, x0, #0xf
 378:	and	w2, w2, #0xff
 37c:	cmp	w2, #0x7
 380:	b.ls	35c <grub_mod_init-0x3a4>  // b.plast
 384:	ldr	x1, [x28, #8]
 388:	add	x0, x3, #0x1ff
 38c:	and	x0, x0, #0xfffffffffffffe00
 390:	str	x3, [x28, #32]
 394:	add	x1, x1, #0x200
 398:	mov	x3, #0x0                   	// #0
 39c:	add	x0, x0, x1
 3a0:	stp	x0, x1, [x28, #16]
 3a4:	add	x0, sp, #0x78
 3a8:	add	x4, x0, #0x94
 3ac:	add	x1, sp, #0x100
 3b0:	ldr	x0, [sp, #96]
 3b4:	cbnz	x0, 3c8 <grub_mod_init-0x338>
 3b8:	b	3ec <grub_mod_init-0x314>
 3bc:	orr	x3, x0, x3, lsl #3
 3c0:	cmp	x1, x4
 3c4:	b.eq	3e4 <grub_mod_init-0x31c>  // b.none
 3c8:	ldrb	w0, [x1]
 3cc:	add	x1, x1, #0x1
 3d0:	sub	w2, w0, #0x30
 3d4:	and	x0, x0, #0xf
 3d8:	and	w2, w2, #0xff
 3dc:	cmp	w2, #0x7
 3e0:	b.ls	3bc <grub_mod_init-0x344>  // b.plast
 3e4:	ldr	x0, [sp, #96]
 3e8:	str	w3, [x0]
 3ec:	add	x0, sp, #0x78
 3f0:	add	x1, sp, #0xdc
 3f4:	add	x4, x0, #0x6c
 3f8:	mov	x3, #0x0                   	// #0
 3fc:	cbnz	x20, 410 <grub_mod_init-0x2f0>
 400:	b	450 <grub_mod_init-0x2b0>
 404:	orr	x3, x0, x3, lsl #3
 408:	cmp	x1, x4
 40c:	b.eq	42c <grub_mod_init-0x2d4>  // b.none
 410:	ldrb	w0, [x1]
 414:	add	x1, x1, #0x1
 418:	sub	w2, w0, #0x30
 41c:	and	x0, x0, #0xf
 420:	and	w2, w2, #0xff
 424:	cmp	w2, #0x7
 428:	b.ls	404 <grub_mod_init-0x2fc>  // b.plast
 42c:	ldrb	w1, [sp, #276]
 430:	str	w3, [x20]
 434:	cmp	w1, #0x32
 438:	b.hi	484 <grub_mod_init-0x27c>  // b.pmore
 43c:	cmp	w1, #0x30
 440:	b.hi	4bc <grub_mod_init-0x244>  // b.pmore
 444:	b.ne	450 <grub_mod_init-0x2b0>  // b.any
 448:	orr	w0, w3, #0x8000
 44c:	str	w0, [x20]
 450:	cbnz	w26, 1dc <grub_mod_init-0x524>
 454:	ldr	x0, [x28, #48]
 458:	cmp	x0, #0x64
 45c:	b.ls	498 <grub_mod_init-0x268>  // b.plast
 460:	ldr	x19, [x28, #40]
 464:	add	x1, sp, #0x115
 468:	mov	x0, x19
 46c:	mov	x2, #0x64                  	// #100
 470:	bl	0 <grub_memmove>
 474:	ldr	x1, [x28, #40]
 478:	mov	w0, #0x0                   	// #0
 47c:	strb	wzr, [x1, #100]
 480:	b	1e0 <grub_mod_init-0x520>
 484:	cmp	w1, #0x35
 488:	b.ne	450 <grub_mod_init-0x2b0>  // b.any
 48c:	orr	w0, w3, #0x4000
 490:	str	w0, [x20]
 494:	b	450 <grub_mod_init-0x2b0>
 498:	mov	x0, #0x65                  	// #101
 49c:	bl	0 <grub_malloc>
 4a0:	mov	x19, x0
 4a4:	cbz	x0, 2b4 <grub_mod_init-0x44c>
 4a8:	ldr	x0, [x28, #40]
 4ac:	bl	0 <grub_free>
 4b0:	mov	x0, #0x65                  	// #101
 4b4:	stp	x19, x0, [x28, #40]
 4b8:	b	464 <grub_mod_init-0x29c>
 4bc:	mov	w1, #0xa000                	// #40960
 4c0:	orr	w0, w3, w1
 4c4:	str	w0, [x20]
 4c8:	b	450 <grub_mod_init-0x2b0>
 4cc:	mov	x2, x22
 4d0:	add	x1, sp, #0x1d1
 4d4:	bl	0 <grub_memmove>
 4d8:	ldr	x0, [x19]
 4dc:	mov	w1, #0x2f                  	// #47
 4e0:	strb	w1, [x0, x22]
 4e4:	add	x22, x22, #0x1
 4e8:	ldr	x1, [x19]
 4ec:	b	32c <grub_mod_init-0x3d4>
 4f0:	mov	x0, #0x101                 	// #257
 4f4:	b	314 <grub_mod_init-0x3ec>
	...
 510:	sub	sp, sp, #0x220
 514:	mov	x3, #0x1f4                 	// #500
 518:	add	x4, sp, #0x28
 51c:	mov	x2, #0x0                   	// #0
 520:	mov	x1, #0x0                   	// #0
 524:	stp	x29, x30, [sp]
 528:	mov	x29, sp
 52c:	str	x19, [sp, #16]
 530:	mov	x19, x0
 534:	bl	0 <grub_disk_read>
 538:	cbnz	w0, 574 <grub_mod_init-0x18c>
 53c:	adrp	x1, 0 <grub_mod_init-0x700>
 540:	add	x0, sp, #0x129
 544:	mov	x2, #0x5                   	// #5
 548:	ldr	x1, [x1]
 54c:	bl	0 <grub_memcmp>
 550:	cbnz	w0, 574 <grub_mod_init-0x18c>
 554:	mov	x0, #0x38                  	// #56
 558:	bl	0 <grub_zalloc>
 55c:	cbz	x0, 574 <grub_mod_init-0x18c>
 560:	str	x19, [x0]
 564:	ldp	x29, x30, [sp]
 568:	ldr	x19, [sp, #16]
 56c:	add	sp, sp, #0x220
 570:	ret
 574:	adrp	x1, 0 <grub_mod_init-0x700>
 578:	mov	w0, #0x9                   	// #9
 57c:	ldr	x1, [x1]
 580:	bl	0 <grub_error>
 584:	mov	x0, #0x0                   	// #0
 588:	ldp	x29, x30, [sp]
 58c:	ldr	x19, [sp, #16]
 590:	add	sp, sp, #0x220
 594:	ret
	...
 5a8:	stp	x29, x30, [sp, #-48]!
 5ac:	mov	x29, sp
 5b0:	stp	x19, x20, [sp, #16]
 5b4:	mov	x20, x0
 5b8:	ldr	x0, [x0, #8]
 5bc:	ldr	x0, [x0]
 5c0:	str	x21, [sp, #32]
 5c4:	mov	x21, x1
 5c8:	bl	510 <grub_mod_init-0x1f0>
 5cc:	cbz	x0, 630 <grub_mod_init-0xd0>
 5d0:	adrp	x1, 0 <grub_mod_init-0x700>
 5d4:	mov	x2, x21
 5d8:	mov	x19, x0
 5dc:	ldr	x1, [x1]
 5e0:	bl	0 <grub_archelp_open>
 5e4:	mov	w21, w0
 5e8:	cbnz	w0, 60c <grub_mod_init-0xf4>
 5ec:	ldr	x0, [x19, #32]
 5f0:	str	x0, [x20, #64]
 5f4:	str	x19, [x20, #80]
 5f8:	mov	w0, w21
 5fc:	ldp	x19, x20, [sp, #16]
 600:	ldr	x21, [sp, #32]
 604:	ldp	x29, x30, [sp], #48
 608:	ret
 60c:	ldr	x0, [x19, #40]
 610:	bl	0 <grub_free>
 614:	mov	x0, x19
 618:	bl	0 <grub_free>
 61c:	mov	w0, w21
 620:	ldp	x19, x20, [sp, #16]
 624:	ldr	x21, [sp, #32]
 628:	ldp	x29, x30, [sp], #48
 62c:	ret
 630:	adrp	x0, 0 <grub_mod_init-0x700>
 634:	ldp	x19, x20, [sp, #16]
 638:	ldr	x0, [x0]
 63c:	ldr	w21, [x0]
 640:	mov	w0, w21
 644:	ldr	x21, [sp, #32]
 648:	ldp	x29, x30, [sp], #48
 64c:	ret
	...
 660:	stp	x29, x30, [sp, #-48]!
 664:	mov	x29, sp
 668:	ldr	x0, [x0]
 66c:	stp	x19, x20, [sp, #16]
 670:	mov	x20, x1
 674:	stp	x21, x22, [sp, #32]
 678:	mov	x21, x2
 67c:	mov	x22, x3
 680:	bl	510 <grub_mod_init-0x1f0>
 684:	cbz	x0, 6cc <grub_mod_init-0x34>
 688:	adrp	x1, 0 <grub_mod_init-0x700>
 68c:	mov	x19, x0
 690:	mov	x4, x22
 694:	mov	x3, x21
 698:	ldr	x1, [x1]
 69c:	mov	x2, x20
 6a0:	bl	0 <grub_archelp_dir>
 6a4:	mov	w20, w0
 6a8:	ldr	x0, [x19, #40]
 6ac:	bl	0 <grub_free>
 6b0:	mov	x0, x19
 6b4:	bl	0 <grub_free>
 6b8:	mov	w0, w20
 6bc:	ldp	x19, x20, [sp, #16]
 6c0:	ldp	x21, x22, [sp, #32]
 6c4:	ldp	x29, x30, [sp], #48
 6c8:	ret
 6cc:	adrp	x0, 0 <grub_mod_init-0x700>
 6d0:	ldp	x21, x22, [sp, #32]
 6d4:	ldr	x0, [x0]
 6d8:	ldr	w20, [x0]
 6dc:	mov	w0, w20
 6e0:	ldp	x19, x20, [sp, #16]
 6e4:	ldp	x29, x30, [sp], #48
 6e8:	ret
 6ec:	nop
	...

0000000000000700 <grub_mod_init>:
 700:	adrp	x0, 0 <grub_mod_init-0x700>
 704:	adrp	x1, 0 <grub_mod_init-0x700>
 708:	ldr	x0, [x0]
 70c:	ldr	x1, [x1]
 710:	add	x1, x1, #0x18
 714:	b	0 <grub_list_push>
	...

0000000000000728 <grub_mod_fini>:
 728:	adrp	x0, 0 <grub_mod_init-0x700>
 72c:	ldr	x0, [x0]
 730:	add	x0, x0, #0x18
 734:	b	0 <grub_list_remove>
	...
