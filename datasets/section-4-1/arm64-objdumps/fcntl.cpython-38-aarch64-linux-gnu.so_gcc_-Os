
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fcntl.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <.init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	1050 <ioctl@plt+0x10>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <memcpy@plt-0x20>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 13000 <PyInit_fcntl@@Base+0x1157c>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <memcpy@plt>:
     ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <PyModule_AddIntConstant@plt>:
     eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <PyEval_RestoreThread@plt>:
     ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <PyErr_SetFromErrno@plt>:
     ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <PyBuffer_Release@plt>:
     ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <PyBytes_FromStringAndSize@plt>:
     f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <PyErr_SetString@plt>:
     f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <flock@plt>:
     f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <_PyArg_Parse_SizeT@plt>:
     f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <PyLong_FromLong@plt>:
     f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <PyErr_Clear@plt>:
     f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <PyLong_AsUnsignedLongMask@plt>:
     f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <__gmon_start__@plt>:
     f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <_PyArg_CheckPositional@plt>:
     f80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <PyErr_Occurred@plt>:
     f90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <PyModule_Create2@plt>:
     fa0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <PyLong_AsLong@plt>:
     fb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <PyObject_IsTrue@plt>:
     fc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <fcntl64@plt>:
     fd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <PyEval_SaveThread@plt>:
     fe0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <PyObject_AsFileDescriptor@plt>:
     ff0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <PyErr_CheckSignals@plt>:
    1000:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <PyType_IsSubtype@plt>:
    1010:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <__errno_location@plt>:
    1020:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <_PyLong_AsInt@plt>:
    1030:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <ioctl@plt>:
    1040:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

Disassembly of section .text:

0000000000001050 <PyInit_fcntl@@Base-0xa34>:
    1050:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    1054:	ldr	x0, [x0, #4048]
    1058:	cbz	x0, 1060 <ioctl@plt+0x20>
    105c:	b	f70 <__gmon_start__@plt>
    1060:	ret
    1064:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1257c>
    1068:	add	x0, x0, #0x1e8
    106c:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x1257c>
    1070:	add	x1, x1, #0x1e8
    1074:	cmp	x1, x0
    1078:	b.eq	1090 <ioctl@plt+0x50>  // b.none
    107c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1157c>
    1080:	ldr	x1, [x1, #4000]
    1084:	cbz	x1, 1090 <ioctl@plt+0x50>
    1088:	mov	x16, x1
    108c:	br	x16
    1090:	ret
    1094:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1257c>
    1098:	add	x0, x0, #0x1e8
    109c:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x1257c>
    10a0:	add	x1, x1, #0x1e8
    10a4:	sub	x1, x1, x0
    10a8:	mov	x2, #0x2                   	// #2
    10ac:	asr	x1, x1, #3
    10b0:	sdiv	x1, x1, x2
    10b4:	cbz	x1, 10cc <ioctl@plt+0x8c>
    10b8:	adrp	x2, 13000 <PyInit_fcntl@@Base+0x1157c>
    10bc:	ldr	x2, [x2, #4064]
    10c0:	cbz	x2, 10cc <ioctl@plt+0x8c>
    10c4:	mov	x16, x2
    10c8:	br	x16
    10cc:	ret
    10d0:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1257c>
    10d4:	ldrb	w1, [x0, #488]
    10d8:	cbnz	w1, 111c <ioctl@plt+0xdc>
    10dc:	stp	x29, x30, [sp, #-32]!
    10e0:	mov	x29, sp
    10e4:	str	x19, [sp, #16]
    10e8:	mov	x19, x0
    10ec:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    10f0:	ldr	x0, [x0, #4016]
    10f4:	cbz	x0, 1104 <ioctl@plt+0xc4>
    10f8:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1257c>
    10fc:	ldr	x0, [x0, #216]
    1100:	bl	ef0 <__cxa_finalize@plt>
    1104:	bl	1064 <ioctl@plt+0x24>
    1108:	mov	w0, #0x1                   	// #1
    110c:	strb	w0, [x19, #488]
    1110:	ldr	x19, [sp, #16]
    1114:	ldp	x29, x30, [sp], #32
    1118:	ret
    111c:	ret
    1120:	b	1094 <ioctl@plt+0x54>
    1124:	stp	x29, x30, [sp, #-112]!
    1128:	sub	x0, x2, #0x2
    112c:	cmp	x0, #0x3
    1130:	mov	x29, sp
    1134:	stp	x19, x20, [sp, #16]
    1138:	mov	x19, x1
    113c:	stp	x21, x22, [sp, #32]
    1140:	mov	x22, x2
    1144:	stp	x23, x24, [sp, #48]
    1148:	stp	x25, x26, [sp, #64]
    114c:	b.hi	117c <ioctl@plt+0x13c>  // b.pmore
    1150:	ldr	x0, [x19]
    1154:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1158:	mov	w24, w0
    115c:	tbz	w0, #31, 119c <ioctl@plt+0x15c>
    1160:	mov	x0, #0x0                   	// #0
    1164:	ldp	x19, x20, [sp, #16]
    1168:	ldp	x21, x22, [sp, #32]
    116c:	ldp	x23, x24, [sp, #48]
    1170:	ldp	x25, x26, [sp, #64]
    1174:	ldp	x29, x30, [sp], #112
    1178:	ret
    117c:	adrp	x0, 1000 <PyErr_CheckSignals@plt>
    1180:	mov	x1, x22
    1184:	add	x0, x0, #0xf30
    1188:	mov	x3, #0x5                   	// #5
    118c:	mov	x2, #0x2                   	// #2
    1190:	bl	f80 <_PyArg_CheckPositional@plt>
    1194:	cbnz	w0, 1150 <ioctl@plt+0x110>
    1198:	b	1160 <ioctl@plt+0x120>
    119c:	ldr	x0, [x19, #8]
    11a0:	adrp	x26, 13000 <PyInit_fcntl@@Base+0x1157c>
    11a4:	ldr	x1, [x26, #4008]
    11a8:	ldr	x0, [x0, #8]
    11ac:	cmp	x0, x1
    11b0:	b.ne	11d0 <ioctl@plt+0x190>  // b.any
    11b4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    11b8:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    11bc:	add	x1, x1, #0xf36
    11c0:	ldr	x0, [x0, #4032]
    11c4:	ldr	x0, [x0]
    11c8:	bl	f10 <PyErr_SetString@plt>
    11cc:	b	1160 <ioctl@plt+0x120>
    11d0:	bl	1010 <PyType_IsSubtype@plt>
    11d4:	mov	w20, w0
    11d8:	cbnz	w0, 11b4 <ioctl@plt+0x174>
    11dc:	ldr	x0, [x19, #8]
    11e0:	bl	1030 <_PyLong_AsInt@plt>
    11e4:	mov	w23, w0
    11e8:	cmn	w0, #0x1
    11ec:	b.ne	120c <ioctl@plt+0x1cc>  // b.any
    11f0:	bl	f90 <PyErr_Occurred@plt>
    11f4:	mov	x21, x0
    11f8:	cbnz	x0, 1160 <ioctl@plt+0x120>
    11fc:	cmp	x22, #0x2
    1200:	b.gt	1214 <ioctl@plt+0x1d4>
    1204:	mov	x25, #0x0                   	// #0
    1208:	b	1290 <ioctl@plt+0x250>
    120c:	cmp	x22, #0x2
    1210:	b.le	1278 <ioctl@plt+0x238>
    1214:	cmp	x22, #0x3
    1218:	ldr	x25, [x19, #16]
    121c:	b.eq	1284 <ioctl@plt+0x244>  // b.none
    1220:	cmp	x22, #0x4
    1224:	ldr	x21, [x19, #24]
    1228:	b.eq	1264 <ioctl@plt+0x224>  // b.none
    122c:	ldr	x0, [x19, #32]
    1230:	ldr	x1, [x26, #4008]
    1234:	ldr	x0, [x0, #8]
    1238:	cmp	x0, x1
    123c:	b.eq	11b4 <ioctl@plt+0x174>  // b.none
    1240:	bl	1010 <PyType_IsSubtype@plt>
    1244:	cbnz	w0, 11b4 <ioctl@plt+0x174>
    1248:	ldr	x0, [x19, #32]
    124c:	bl	1030 <_PyLong_AsInt@plt>
    1250:	mov	w20, w0
    1254:	cmn	w0, #0x1
    1258:	b.ne	1264 <ioctl@plt+0x224>  // b.any
    125c:	bl	f90 <PyErr_Occurred@plt>
    1260:	cbnz	x0, 1160 <ioctl@plt+0x120>
    1264:	cmp	w23, #0x8
    1268:	b.ne	128c <ioctl@plt+0x24c>  // b.any
    126c:	mov	w0, #0x2                   	// #2
    1270:	strh	w0, [sp, #80]
    1274:	b	1294 <ioctl@plt+0x254>
    1278:	mov	x21, #0x0                   	// #0
    127c:	mov	x25, #0x0                   	// #0
    1280:	b	1264 <ioctl@plt+0x224>
    1284:	mov	x21, #0x0                   	// #0
    1288:	b	1264 <ioctl@plt+0x224>
    128c:	tbz	w23, #0, 1300 <ioctl@plt+0x2c0>
    1290:	strh	wzr, [sp, #80]
    1294:	stp	xzr, xzr, [sp, #88]
    1298:	cbnz	x21, 1320 <ioctl@plt+0x2e0>
    129c:	cbnz	x25, 1338 <ioctl@plt+0x2f8>
    12a0:	tst	x23, #0x4
    12a4:	mov	w0, #0x7                   	// #7
    12a8:	add	x22, sp, #0x50
    12ac:	strh	w20, [sp, #82]
    12b0:	mov	w20, #0x6                   	// #6
    12b4:	csel	w20, w20, w0, ne  // ne = any
    12b8:	bl	fe0 <PyEval_SaveThread@plt>
    12bc:	mov	x21, x0
    12c0:	mov	x2, x22
    12c4:	mov	w1, w20
    12c8:	mov	w0, w24
    12cc:	bl	fd0 <fcntl64@plt>
    12d0:	mov	w19, w0
    12d4:	mov	x0, x21
    12d8:	bl	ec0 <PyEval_RestoreThread@plt>
    12dc:	cmn	w19, #0x1
    12e0:	b.ne	1368 <ioctl@plt+0x328>  // b.any
    12e4:	bl	1020 <__errno_location@plt>
    12e8:	ldr	w0, [x0]
    12ec:	cmp	w0, #0x4
    12f0:	b.ne	136c <ioctl@plt+0x32c>  // b.any
    12f4:	bl	1000 <PyErr_CheckSignals@plt>
    12f8:	cbz	w0, 12b8 <ioctl@plt+0x278>
    12fc:	b	1160 <ioctl@plt+0x120>
    1300:	tbz	w23, #1, 130c <ioctl@plt+0x2cc>
    1304:	mov	w0, #0x1                   	// #1
    1308:	b	1270 <ioctl@plt+0x230>
    130c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    1310:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    1314:	add	x1, x1, #0xf5b
    1318:	ldr	x0, [x0, #4024]
    131c:	b	11c4 <ioctl@plt+0x184>
    1320:	mov	x0, x21
    1324:	bl	fb0 <PyLong_AsLong@plt>
    1328:	str	x0, [sp, #88]
    132c:	bl	f90 <PyErr_Occurred@plt>
    1330:	cbz	x0, 129c <ioctl@plt+0x25c>
    1334:	b	1160 <ioctl@plt+0x120>
    1338:	mov	x0, x25
    133c:	bl	fb0 <PyLong_AsLong@plt>
    1340:	str	x0, [sp, #96]
    1344:	bl	f90 <PyErr_Occurred@plt>
    1348:	cbz	x0, 12a0 <ioctl@plt+0x260>
    134c:	b	1160 <ioctl@plt+0x120>
    1350:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    1354:	ldr	x0, [x0, #4056]
    1358:	ldr	x1, [x0]
    135c:	add	x1, x1, #0x1
    1360:	str	x1, [x0]
    1364:	b	1164 <ioctl@plt+0x124>
    1368:	tbz	w19, #31, 1350 <ioctl@plt+0x310>
    136c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    1370:	ldr	x0, [x0, #4040]
    1374:	ldr	x0, [x0]
    1378:	bl	ed0 <PyErr_SetFromErrno@plt>
    137c:	b	1164 <ioctl@plt+0x124>
    1380:	sub	sp, sp, #0x4b0
    1384:	stp	x29, x30, [sp]
    1388:	mov	x29, sp
    138c:	stp	x19, x20, [sp, #16]
    1390:	stp	x21, x22, [sp, #32]
    1394:	mov	w21, w0
    1398:	mov	w22, w1
    139c:	stp	x23, x24, [sp, #48]
    13a0:	str	x25, [sp, #64]
    13a4:	str	wzr, [sp, #84]
    13a8:	cbnz	x2, 13e8 <ioctl@plt+0x3a8>
    13ac:	bl	fe0 <PyEval_SaveThread@plt>
    13b0:	mov	x20, x0
    13b4:	ldr	w2, [sp, #84]
    13b8:	mov	w1, w22
    13bc:	mov	w0, w21
    13c0:	bl	1040 <ioctl@plt>
    13c4:	mov	w19, w0
    13c8:	mov	x0, x20
    13cc:	bl	ec0 <PyEval_RestoreThread@plt>
    13d0:	tbz	w19, #31, 15b8 <ioctl@plt+0x578>
    13d4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    13d8:	ldr	x0, [x0, #4040]
    13dc:	ldr	x0, [x0]
    13e0:	bl	ed0 <PyErr_SetFromErrno@plt>
    13e4:	b	14c0 <ioctl@plt+0x480>
    13e8:	mov	x19, x2
    13ec:	add	x20, sp, #0x58
    13f0:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    13f4:	mov	w23, w3
    13f8:	mov	x2, x20
    13fc:	add	x1, x1, #0xf77
    1400:	mov	x0, x19
    1404:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1408:	cbz	w0, 1514 <ioctl@plt+0x4d4>
    140c:	ldr	x24, [sp, #88]
    1410:	ldr	x19, [sp, #104]
    1414:	cbz	w23, 1498 <ioctl@plt+0x458>
    1418:	mov	w1, w22
    141c:	cmp	x19, #0x400
    1420:	add	x3, sp, #0xa8
    1424:	b.gt	14d0 <ioctl@plt+0x490>
    1428:	mov	x2, x19
    142c:	mov	x1, x24
    1430:	mov	x0, x3
    1434:	bl	ea0 <memcpy@plt>
    1438:	strb	wzr, [x0, x19]
    143c:	bl	fe0 <PyEval_SaveThread@plt>
    1440:	mov	x25, x0
    1444:	add	x2, sp, #0xa8
    1448:	mov	w1, w22
    144c:	mov	w0, w21
    1450:	bl	1040 <ioctl@plt>
    1454:	mov	w21, w0
    1458:	mov	x0, x25
    145c:	bl	ec0 <PyEval_RestoreThread@plt>
    1460:	cmp	x19, #0x400
    1464:	ccmp	w23, #0x0, #0x4, le
    1468:	b.eq	147c <ioctl@plt+0x43c>  // b.none
    146c:	mov	x2, x19
    1470:	add	x1, sp, #0xa8
    1474:	mov	x0, x24
    1478:	bl	ea0 <memcpy@plt>
    147c:	mov	x0, x20
    1480:	bl	ee0 <PyBuffer_Release@plt>
    1484:	tbnz	w21, #31, 13d4 <ioctl@plt+0x394>
    1488:	cbz	w23, 14ec <ioctl@plt+0x4ac>
    148c:	sxtw	x0, w21
    1490:	bl	f40 <PyLong_FromLong@plt>
    1494:	b	14f8 <ioctl@plt+0x4b8>
    1498:	cmp	x19, #0x400
    149c:	b.le	14c8 <ioctl@plt+0x488>
    14a0:	mov	x0, x20
    14a4:	bl	ee0 <PyBuffer_Release@plt>
    14a8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    14ac:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    14b0:	add	x1, x1, #0xf80
    14b4:	ldr	x0, [x0, #4024]
    14b8:	ldr	x0, [x0]
    14bc:	bl	f10 <PyErr_SetString@plt>
    14c0:	mov	x0, #0x0                   	// #0
    14c4:	b	14f8 <ioctl@plt+0x4b8>
    14c8:	add	x3, sp, #0xa8
    14cc:	b	1428 <ioctl@plt+0x3e8>
    14d0:	cmp	x24, x3
    14d4:	b.eq	143c <ioctl@plt+0x3fc>  // b.none
    14d8:	mov	w0, w21
    14dc:	mov	x2, x24
    14e0:	bl	1040 <ioctl@plt>
    14e4:	mov	w21, w0
    14e8:	b	1460 <ioctl@plt+0x420>
    14ec:	mov	x1, x19
    14f0:	add	x0, sp, #0xa8
    14f4:	bl	f00 <PyBytes_FromStringAndSize@plt>
    14f8:	ldp	x29, x30, [sp]
    14fc:	ldp	x19, x20, [sp, #16]
    1500:	ldp	x21, x22, [sp, #32]
    1504:	ldp	x23, x24, [sp, #48]
    1508:	ldr	x25, [sp, #64]
    150c:	add	sp, sp, #0x4b0
    1510:	ret
    1514:	bl	f50 <PyErr_Clear@plt>
    1518:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    151c:	mov	x2, x20
    1520:	add	x1, x1, #0xf9a
    1524:	mov	x0, x19
    1528:	bl	f30 <_PyArg_Parse_SizeT@plt>
    152c:	cbz	w0, 1598 <ioctl@plt+0x558>
    1530:	ldr	x23, [sp, #104]
    1534:	ldr	x1, [sp, #88]
    1538:	cmp	x23, #0x400
    153c:	b.gt	14a0 <ioctl@plt+0x460>
    1540:	add	x19, sp, #0xa8
    1544:	mov	x2, x23
    1548:	mov	x0, x19
    154c:	bl	ea0 <memcpy@plt>
    1550:	strb	wzr, [x19, x23]
    1554:	bl	fe0 <PyEval_SaveThread@plt>
    1558:	mov	x2, x19
    155c:	mov	w1, w22
    1560:	mov	x24, x0
    1564:	mov	w0, w21
    1568:	bl	1040 <ioctl@plt>
    156c:	mov	w21, w0
    1570:	mov	x0, x24
    1574:	bl	ec0 <PyEval_RestoreThread@plt>
    1578:	mov	x0, x20
    157c:	tbz	w21, #31, 1588 <ioctl@plt+0x548>
    1580:	bl	ee0 <PyBuffer_Release@plt>
    1584:	b	13d4 <ioctl@plt+0x394>
    1588:	bl	ee0 <PyBuffer_Release@plt>
    158c:	mov	x1, x23
    1590:	mov	x0, x19
    1594:	b	14f4 <ioctl@plt+0x4b4>
    1598:	bl	f50 <PyErr_Clear@plt>
    159c:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    15a0:	add	x2, sp, #0x54
    15a4:	add	x1, x1, #0xfa3
    15a8:	mov	x0, x19
    15ac:	bl	f30 <_PyArg_Parse_SizeT@plt>
    15b0:	cbnz	w0, 13ac <ioctl@plt+0x36c>
    15b4:	b	14c0 <ioctl@plt+0x480>
    15b8:	sxtw	x0, w19
    15bc:	b	1490 <ioctl@plt+0x450>
    15c0:	sub	sp, sp, #0x460
    15c4:	stp	x29, x30, [sp]
    15c8:	mov	x29, sp
    15cc:	stp	x19, x20, [sp, #16]
    15d0:	mov	w20, w0
    15d4:	stp	x21, x22, [sp, #32]
    15d8:	mov	w21, w1
    15dc:	str	x23, [sp, #48]
    15e0:	str	wzr, [sp, #76]
    15e4:	cbz	x2, 16cc <ioctl@plt+0x68c>
    15e8:	mov	x19, x2
    15ec:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    15f0:	add	x3, sp, #0x58
    15f4:	add	x2, sp, #0x50
    15f8:	add	x1, x1, #0x7
    15fc:	mov	x0, x19
    1600:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1604:	cbz	w0, 16b0 <ioctl@plt+0x670>
    1608:	ldr	x2, [sp, #88]
    160c:	cmp	x2, #0x400
    1610:	b.ls	1648 <ioctl@plt+0x608>  // b.plast
    1614:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    1618:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    161c:	add	x1, x1, #0xa
    1620:	ldr	x0, [x0, #4024]
    1624:	ldr	x0, [x0]
    1628:	bl	f10 <PyErr_SetString@plt>
    162c:	mov	x0, #0x0                   	// #0
    1630:	ldp	x29, x30, [sp]
    1634:	ldp	x19, x20, [sp, #16]
    1638:	ldp	x21, x22, [sp, #32]
    163c:	ldr	x23, [sp, #48]
    1640:	add	sp, sp, #0x460
    1644:	ret
    1648:	ldr	x1, [sp, #80]
    164c:	add	x22, sp, #0x60
    1650:	mov	x0, x22
    1654:	bl	ea0 <memcpy@plt>
    1658:	bl	fe0 <PyEval_SaveThread@plt>
    165c:	mov	x23, x0
    1660:	mov	x2, x22
    1664:	mov	w1, w21
    1668:	mov	w0, w20
    166c:	bl	fd0 <fcntl64@plt>
    1670:	mov	w19, w0
    1674:	mov	x0, x23
    1678:	bl	ec0 <PyEval_RestoreThread@plt>
    167c:	cmn	w19, #0x1
    1680:	b.ne	1714 <ioctl@plt+0x6d4>  // b.any
    1684:	bl	1020 <__errno_location@plt>
    1688:	ldr	w0, [x0]
    168c:	cmp	w0, #0x4
    1690:	b.ne	1718 <ioctl@plt+0x6d8>  // b.any
    1694:	bl	1000 <PyErr_CheckSignals@plt>
    1698:	cbz	w0, 1658 <ioctl@plt+0x618>
    169c:	b	162c <ioctl@plt+0x5ec>
    16a0:	ldr	x1, [sp, #88]
    16a4:	mov	x0, x22
    16a8:	bl	f00 <PyBytes_FromStringAndSize@plt>
    16ac:	b	1630 <ioctl@plt+0x5f0>
    16b0:	bl	f50 <PyErr_Clear@plt>
    16b4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    16b8:	add	x2, sp, #0x4c
    16bc:	add	x1, x1, #0x24
    16c0:	mov	x0, x19
    16c4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    16c8:	cbz	w0, 162c <ioctl@plt+0x5ec>
    16cc:	bl	fe0 <PyEval_SaveThread@plt>
    16d0:	mov	x22, x0
    16d4:	ldr	w2, [sp, #76]
    16d8:	mov	w1, w21
    16dc:	mov	w0, w20
    16e0:	bl	fd0 <fcntl64@plt>
    16e4:	mov	w19, w0
    16e8:	mov	x0, x22
    16ec:	bl	ec0 <PyEval_RestoreThread@plt>
    16f0:	cmn	w19, #0x1
    16f4:	b.ne	172c <ioctl@plt+0x6ec>  // b.any
    16f8:	bl	1020 <__errno_location@plt>
    16fc:	ldr	w0, [x0]
    1700:	cmp	w0, #0x4
    1704:	b.ne	1718 <ioctl@plt+0x6d8>  // b.any
    1708:	bl	1000 <PyErr_CheckSignals@plt>
    170c:	cbz	w0, 16cc <ioctl@plt+0x68c>
    1710:	b	162c <ioctl@plt+0x5ec>
    1714:	tbz	w19, #31, 16a0 <ioctl@plt+0x660>
    1718:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    171c:	ldr	x0, [x0, #4040]
    1720:	ldr	x0, [x0]
    1724:	bl	ed0 <PyErr_SetFromErrno@plt>
    1728:	b	1630 <ioctl@plt+0x5f0>
    172c:	tbnz	w19, #31, 1718 <ioctl@plt+0x6d8>
    1730:	sxtw	x0, w19
    1734:	bl	f40 <PyLong_FromLong@plt>
    1738:	b	1630 <ioctl@plt+0x5f0>
    173c:	stp	x29, x30, [sp, #-48]!
    1740:	cmp	x2, #0x2
    1744:	mov	x29, sp
    1748:	stp	x19, x20, [sp, #16]
    174c:	mov	x19, x1
    1750:	stp	x21, x22, [sp, #32]
    1754:	b.ne	177c <ioctl@plt+0x73c>  // b.any
    1758:	ldr	x0, [x19]
    175c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1760:	mov	w21, w0
    1764:	tbz	w0, #31, 179c <ioctl@plt+0x75c>
    1768:	mov	x0, #0x0                   	// #0
    176c:	ldp	x19, x20, [sp, #16]
    1770:	ldp	x21, x22, [sp, #32]
    1774:	ldp	x29, x30, [sp], #48
    1778:	ret
    177c:	mov	x1, x2
    1780:	mov	x3, #0x2                   	// #2
    1784:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x57c>
    1788:	mov	x2, x3
    178c:	add	x0, x0, #0x86
    1790:	bl	f80 <_PyArg_CheckPositional@plt>
    1794:	cbnz	w0, 1758 <ioctl@plt+0x718>
    1798:	b	1768 <ioctl@plt+0x728>
    179c:	ldr	x0, [x19, #8]
    17a0:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1157c>
    17a4:	ldr	x1, [x1, #4008]
    17a8:	ldr	x0, [x0, #8]
    17ac:	cmp	x0, x1
    17b0:	b.ne	17d0 <ioctl@plt+0x790>  // b.any
    17b4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    17b8:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    17bc:	add	x1, x1, #0xf36
    17c0:	ldr	x0, [x0, #4032]
    17c4:	ldr	x0, [x0]
    17c8:	bl	f10 <PyErr_SetString@plt>
    17cc:	b	1768 <ioctl@plt+0x728>
    17d0:	bl	1010 <PyType_IsSubtype@plt>
    17d4:	cbnz	w0, 17b4 <ioctl@plt+0x774>
    17d8:	ldr	x0, [x19, #8]
    17dc:	bl	1030 <_PyLong_AsInt@plt>
    17e0:	mov	w20, w0
    17e4:	cmn	w0, #0x1
    17e8:	b.ne	17f4 <ioctl@plt+0x7b4>  // b.any
    17ec:	bl	f90 <PyErr_Occurred@plt>
    17f0:	cbnz	x0, 1768 <ioctl@plt+0x728>
    17f4:	bl	fe0 <PyEval_SaveThread@plt>
    17f8:	mov	x22, x0
    17fc:	mov	w1, w20
    1800:	mov	w0, w21
    1804:	bl	f20 <flock@plt>
    1808:	mov	w19, w0
    180c:	mov	x0, x22
    1810:	bl	ec0 <PyEval_RestoreThread@plt>
    1814:	cmn	w19, #0x1
    1818:	b.ne	1850 <ioctl@plt+0x810>  // b.any
    181c:	bl	1020 <__errno_location@plt>
    1820:	ldr	w0, [x0]
    1824:	cmp	w0, #0x4
    1828:	b.ne	1854 <ioctl@plt+0x814>  // b.any
    182c:	bl	1000 <PyErr_CheckSignals@plt>
    1830:	cbz	w0, 17f4 <ioctl@plt+0x7b4>
    1834:	b	1768 <ioctl@plt+0x728>
    1838:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    183c:	ldr	x0, [x0, #4056]
    1840:	ldr	x1, [x0]
    1844:	add	x1, x1, #0x1
    1848:	str	x1, [x0]
    184c:	b	176c <ioctl@plt+0x72c>
    1850:	tbz	w19, #31, 1838 <ioctl@plt+0x7f8>
    1854:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    1858:	ldp	x19, x20, [sp, #16]
    185c:	ldr	x0, [x0, #4040]
    1860:	ldp	x21, x22, [sp, #32]
    1864:	ldp	x29, x30, [sp], #48
    1868:	ldr	x0, [x0]
    186c:	b	ed0 <PyErr_SetFromErrno@plt>
    1870:	stp	x29, x30, [sp, #-48]!
    1874:	sub	x0, x2, #0x2
    1878:	cmp	x0, #0x1
    187c:	mov	x29, sp
    1880:	stp	x19, x20, [sp, #16]
    1884:	mov	x19, x1
    1888:	mov	x20, x2
    188c:	stp	x21, x22, [sp, #32]
    1890:	b.hi	18b8 <ioctl@plt+0x878>  // b.pmore
    1894:	ldr	x0, [x19]
    1898:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    189c:	mov	w21, w0
    18a0:	tbz	w0, #31, 18d8 <ioctl@plt+0x898>
    18a4:	mov	x0, #0x0                   	// #0
    18a8:	ldp	x19, x20, [sp, #16]
    18ac:	ldp	x21, x22, [sp, #32]
    18b0:	ldp	x29, x30, [sp], #48
    18b4:	ret
    18b8:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x57c>
    18bc:	mov	x1, x20
    18c0:	add	x0, x0, #0x8c
    18c4:	mov	x3, #0x3                   	// #3
    18c8:	mov	x2, #0x2                   	// #2
    18cc:	bl	f80 <_PyArg_CheckPositional@plt>
    18d0:	cbnz	w0, 1894 <ioctl@plt+0x854>
    18d4:	b	18a4 <ioctl@plt+0x864>
    18d8:	ldr	x0, [x19, #8]
    18dc:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1157c>
    18e0:	ldr	x1, [x1, #4008]
    18e4:	ldr	x0, [x0, #8]
    18e8:	cmp	x0, x1
    18ec:	b.ne	190c <ioctl@plt+0x8cc>  // b.any
    18f0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    18f4:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    18f8:	add	x1, x1, #0xf36
    18fc:	ldr	x0, [x0, #4032]
    1900:	ldr	x0, [x0]
    1904:	bl	f10 <PyErr_SetString@plt>
    1908:	b	18a4 <ioctl@plt+0x864>
    190c:	bl	1010 <PyType_IsSubtype@plt>
    1910:	cbnz	w0, 18f0 <ioctl@plt+0x8b0>
    1914:	ldr	x0, [x19, #8]
    1918:	bl	1030 <_PyLong_AsInt@plt>
    191c:	mov	w22, w0
    1920:	cmn	w0, #0x1
    1924:	b.eq	1938 <ioctl@plt+0x8f8>  // b.none
    1928:	cmp	x20, #0x2
    192c:	b.gt	1944 <ioctl@plt+0x904>
    1930:	mov	x2, #0x0                   	// #0
    1934:	b	1948 <ioctl@plt+0x908>
    1938:	bl	f90 <PyErr_Occurred@plt>
    193c:	cbz	x0, 1928 <ioctl@plt+0x8e8>
    1940:	b	18a4 <ioctl@plt+0x864>
    1944:	ldr	x2, [x19, #16]
    1948:	mov	w1, w22
    194c:	mov	w0, w21
    1950:	ldp	x19, x20, [sp, #16]
    1954:	ldp	x21, x22, [sp, #32]
    1958:	ldp	x29, x30, [sp], #48
    195c:	b	15c0 <ioctl@plt+0x580>
    1960:	stp	x29, x30, [sp, #-64]!
    1964:	sub	x0, x2, #0x2
    1968:	cmp	x0, #0x2
    196c:	mov	x29, sp
    1970:	stp	x19, x20, [sp, #16]
    1974:	mov	x19, x1
    1978:	mov	x20, x2
    197c:	stp	x21, x22, [sp, #32]
    1980:	str	x23, [sp, #48]
    1984:	b.hi	19b0 <ioctl@plt+0x970>  // b.pmore
    1988:	ldr	x0, [x19]
    198c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1990:	mov	w21, w0
    1994:	tbz	w0, #31, 19d0 <ioctl@plt+0x990>
    1998:	mov	x0, #0x0                   	// #0
    199c:	ldp	x19, x20, [sp, #16]
    19a0:	ldp	x21, x22, [sp, #32]
    19a4:	ldr	x23, [sp, #48]
    19a8:	ldp	x29, x30, [sp], #64
    19ac:	ret
    19b0:	adrp	x0, 1000 <PyErr_CheckSignals@plt>
    19b4:	mov	x1, x20
    19b8:	add	x0, x0, #0xf9d
    19bc:	mov	x3, #0x4                   	// #4
    19c0:	mov	x2, #0x2                   	// #2
    19c4:	bl	f80 <_PyArg_CheckPositional@plt>
    19c8:	cbnz	w0, 1988 <ioctl@plt+0x948>
    19cc:	b	1998 <ioctl@plt+0x958>
    19d0:	ldr	x0, [x19, #8]
    19d4:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1157c>
    19d8:	ldr	x1, [x1, #4008]
    19dc:	ldr	x0, [x0, #8]
    19e0:	cmp	x0, x1
    19e4:	b.ne	1a04 <ioctl@plt+0x9c4>  // b.any
    19e8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1157c>
    19ec:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    19f0:	add	x1, x1, #0xf36
    19f4:	ldr	x0, [x0, #4032]
    19f8:	ldr	x0, [x0]
    19fc:	bl	f10 <PyErr_SetString@plt>
    1a00:	b	1998 <ioctl@plt+0x958>
    1a04:	bl	1010 <PyType_IsSubtype@plt>
    1a08:	cbnz	w0, 19e8 <ioctl@plt+0x9a8>
    1a0c:	ldr	x0, [x19, #8]
    1a10:	bl	f60 <PyLong_AsUnsignedLongMask@plt>
    1a14:	mov	x22, x0
    1a18:	cmn	w0, #0x1
    1a1c:	b.eq	1a34 <ioctl@plt+0x9f4>  // b.none
    1a20:	cmp	x20, #0x2
    1a24:	b.gt	1a40 <ioctl@plt+0xa00>
    1a28:	mov	w3, #0x1                   	// #1
    1a2c:	mov	x23, #0x0                   	// #0
    1a30:	b	1a5c <ioctl@plt+0xa1c>
    1a34:	bl	f90 <PyErr_Occurred@plt>
    1a38:	cbz	x0, 1a20 <ioctl@plt+0x9e0>
    1a3c:	b	1998 <ioctl@plt+0x958>
    1a40:	cmp	x20, #0x3
    1a44:	ldr	x23, [x19, #16]
    1a48:	b.eq	1a7c <ioctl@plt+0xa3c>  // b.none
    1a4c:	ldr	x0, [x19, #24]
    1a50:	bl	fc0 <PyObject_IsTrue@plt>
    1a54:	mov	w3, w0
    1a58:	tbnz	w0, #31, 1998 <ioctl@plt+0x958>
    1a5c:	mov	x2, x23
    1a60:	mov	w1, w22
    1a64:	mov	w0, w21
    1a68:	ldp	x19, x20, [sp, #16]
    1a6c:	ldp	x21, x22, [sp, #32]
    1a70:	ldr	x23, [sp, #48]
    1a74:	ldp	x29, x30, [sp], #64
    1a78:	b	1380 <ioctl@plt+0x340>
    1a7c:	mov	w3, #0x1                   	// #1
    1a80:	b	1a5c <ioctl@plt+0xa1c>

0000000000001a84 <PyInit_fcntl@@Base>:
    1a84:	stp	x29, x30, [sp, #-32]!
    1a88:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1257c>
    1a8c:	mov	w1, #0x3f5                 	// #1013
    1a90:	mov	x29, sp
    1a94:	add	x0, x0, #0xe0
    1a98:	str	x19, [sp, #16]
    1a9c:	bl	fa0 <PyModule_Create2@plt>
    1aa0:	cbz	x0, 1f0c <PyInit_fcntl@@Base+0x488>
    1aa4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1aa8:	mov	x19, x0
    1aac:	add	x1, x1, #0x92
    1ab0:	mov	x2, #0x1                   	// #1
    1ab4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ab8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1abc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1ac0:	mov	x0, x19
    1ac4:	add	x1, x1, #0x9a
    1ac8:	mov	x2, #0x2                   	// #2
    1acc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ad0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1ad4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1ad8:	mov	x0, x19
    1adc:	add	x1, x1, #0xa2
    1ae0:	mov	x2, #0x4                   	// #4
    1ae4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ae8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1aec:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1af0:	mov	x0, x19
    1af4:	add	x1, x1, #0xaa
    1af8:	mov	x2, #0x8                   	// #8
    1afc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1b00:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1b04:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1b08:	mov	x0, x19
    1b0c:	add	x1, x1, #0xb2
    1b10:	mov	x2, #0x20                  	// #32
    1b14:	bl	eb0 <PyModule_AddIntConstant@plt>
    1b18:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1b1c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1b20:	mov	x0, x19
    1b24:	add	x1, x1, #0xbc
    1b28:	mov	x2, #0x40                  	// #64
    1b2c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1b30:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1b34:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1b38:	mov	x0, x19
    1b3c:	add	x1, x1, #0xc6
    1b40:	mov	x2, #0x80                  	// #128
    1b44:	bl	eb0 <PyModule_AddIntConstant@plt>
    1b48:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1b4c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1b50:	mov	x0, x19
    1b54:	add	x1, x1, #0xd1
    1b58:	mov	x2, #0xc0                  	// #192
    1b5c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1b60:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1b64:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1b68:	mov	x0, x19
    1b6c:	add	x1, x1, #0xd9
    1b70:	mov	x2, #0x0                   	// #0
    1b74:	bl	eb0 <PyModule_AddIntConstant@plt>
    1b78:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1b7c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1b80:	mov	x0, x19
    1b84:	add	x1, x1, #0xe1
    1b88:	mov	x2, #0x406                 	// #1030
    1b8c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1b90:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1b94:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1b98:	mov	x0, x19
    1b9c:	add	x1, x1, #0xf1
    1ba0:	mov	x2, #0x1                   	// #1
    1ba4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ba8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1bac:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1bb0:	mov	x0, x19
    1bb4:	add	x1, x1, #0xf9
    1bb8:	mov	x2, #0x2                   	// #2
    1bbc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1bc0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1bc4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1bc8:	mov	x0, x19
    1bcc:	add	x1, x1, #0x101
    1bd0:	mov	x2, #0x3                   	// #3
    1bd4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1bd8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1bdc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1be0:	mov	x0, x19
    1be4:	add	x1, x1, #0x109
    1be8:	mov	x2, #0x4                   	// #4
    1bec:	bl	eb0 <PyModule_AddIntConstant@plt>
    1bf0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1bf4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1bf8:	mov	x0, x19
    1bfc:	add	x1, x1, #0x111
    1c00:	mov	x2, #0x5                   	// #5
    1c04:	bl	eb0 <PyModule_AddIntConstant@plt>
    1c08:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1c0c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1c10:	mov	x0, x19
    1c14:	add	x1, x1, #0x119
    1c18:	mov	x2, #0x6                   	// #6
    1c1c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1c20:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1c24:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1c28:	mov	x0, x19
    1c2c:	add	x1, x1, #0x121
    1c30:	mov	x2, #0x7                   	// #7
    1c34:	bl	eb0 <PyModule_AddIntConstant@plt>
    1c38:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1c3c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1c40:	mov	x0, x19
    1c44:	add	x1, x1, #0x12a
    1c48:	mov	x2, #0x9                   	// #9
    1c4c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1c50:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1c54:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1c58:	mov	x0, x19
    1c5c:	add	x1, x1, #0x133
    1c60:	mov	x2, #0x8                   	// #8
    1c64:	bl	eb0 <PyModule_AddIntConstant@plt>
    1c68:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1c6c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1c70:	mov	x0, x19
    1c74:	add	x1, x1, #0x13c
    1c78:	mov	x2, #0xb                   	// #11
    1c7c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1c80:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1c84:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1c88:	mov	x0, x19
    1c8c:	add	x1, x1, #0x145
    1c90:	mov	x2, #0xa                   	// #10
    1c94:	bl	eb0 <PyModule_AddIntConstant@plt>
    1c98:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1c9c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1ca0:	mov	x0, x19
    1ca4:	add	x1, x1, #0x14e
    1ca8:	mov	x2, #0x0                   	// #0
    1cac:	bl	eb0 <PyModule_AddIntConstant@plt>
    1cb0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1cb4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1cb8:	mov	x0, x19
    1cbc:	add	x1, x1, #0x156
    1cc0:	mov	x2, #0x1                   	// #1
    1cc4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1cc8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1ccc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1cd0:	mov	x0, x19
    1cd4:	add	x1, x1, #0x15e
    1cd8:	mov	x2, #0x2                   	// #2
    1cdc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ce0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1ce4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1ce8:	mov	x0, x19
    1cec:	add	x1, x1, #0x166
    1cf0:	mov	x2, #0x5                   	// #5
    1cf4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1cf8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1cfc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1d00:	mov	x0, x19
    1d04:	add	x1, x1, #0x170
    1d08:	mov	x2, #0x6                   	// #6
    1d0c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d10:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1d14:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1d18:	mov	x0, x19
    1d1c:	add	x1, x1, #0x17a
    1d20:	mov	x2, #0x7                   	// #7
    1d24:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d28:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1d2c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1d30:	mov	x0, x19
    1d34:	add	x1, x1, #0x185
    1d38:	mov	x2, #0x2000                	// #8192
    1d3c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d40:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1d44:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1d48:	mov	x0, x19
    1d4c:	add	x1, x1, #0x18c
    1d50:	mov	x2, #0x400                 	// #1024
    1d54:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d58:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1d5c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1d60:	mov	x0, x19
    1d64:	add	x1, x1, #0x197
    1d68:	mov	x2, #0x401                 	// #1025
    1d6c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d70:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1d74:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1d78:	mov	x0, x19
    1d7c:	add	x1, x1, #0x1a2
    1d80:	mov	x2, #0x402                 	// #1026
    1d84:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d88:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1d8c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1d90:	mov	x0, x19
    1d94:	add	x1, x1, #0x1ab
    1d98:	mov	x2, #0x4                   	// #4
    1d9c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1da0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1da4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1da8:	mov	x0, x19
    1dac:	add	x1, x1, #0x1b3
    1db0:	mov	x2, #0x8                   	// #8
    1db4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1db8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1dbc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1dc0:	mov	x0, x19
    1dc4:	add	x1, x1, #0xe6
    1dc8:	mov	x2, #0x1                   	// #1
    1dcc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1dd0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1dd4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1dd8:	mov	x0, x19
    1ddc:	add	x1, x1, #0x1bb
    1de0:	mov	x2, #0x1                   	// #1
    1de4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1de8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1dec:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1df0:	mov	x0, x19
    1df4:	add	x1, x1, #0x1c5
    1df8:	mov	x2, #0x2                   	// #2
    1dfc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e00:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1e04:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1e08:	mov	x0, x19
    1e0c:	add	x1, x1, #0x1cf
    1e10:	mov	x2, #0x4                   	// #4
    1e14:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e18:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1e1c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1e20:	mov	x0, x19
    1e24:	add	x1, x1, #0x1d9
    1e28:	mov	x2, #0x8                   	// #8
    1e2c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e30:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1e34:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1e38:	mov	x0, x19
    1e3c:	add	x1, x1, #0x1e3
    1e40:	mov	x2, #0x10                  	// #16
    1e44:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e48:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1e4c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1e50:	mov	x0, x19
    1e54:	add	x1, x1, #0x1ed
    1e58:	mov	x2, #0x20                  	// #32
    1e5c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e60:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1e64:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1e68:	mov	x0, x19
    1e6c:	add	x1, x1, #0x1f7
    1e70:	mov	x2, #0x80000000            	// #2147483648
    1e74:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e78:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1e7c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1e80:	mov	x0, x19
    1e84:	add	x1, x1, #0x204
    1e88:	mov	x2, #0x409                 	// #1033
    1e8c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e90:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1e94:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1e98:	mov	x0, x19
    1e9c:	add	x1, x1, #0x210
    1ea0:	mov	x2, #0x40a                 	// #1034
    1ea4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ea8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1eac:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1eb0:	mov	x0, x19
    1eb4:	add	x1, x1, #0x21c
    1eb8:	mov	x2, #0x1                   	// #1
    1ebc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ec0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1ec4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1ec8:	mov	x0, x19
    1ecc:	add	x1, x1, #0x228
    1ed0:	mov	x2, #0x2                   	// #2
    1ed4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ed8:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1edc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1ee0:	mov	x0, x19
    1ee4:	add	x1, x1, #0x236
    1ee8:	mov	x2, #0x4                   	// #4
    1eec:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ef0:	cbnz	w0, 1f0c <PyInit_fcntl@@Base+0x488>
    1ef4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x57c>
    1ef8:	mov	x0, x19
    1efc:	add	x1, x1, #0x242
    1f00:	mov	x2, #0x8                   	// #8
    1f04:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f08:	cbz	w0, 1f10 <PyInit_fcntl@@Base+0x48c>
    1f0c:	mov	x19, #0x0                   	// #0
    1f10:	mov	x0, x19
    1f14:	ldr	x19, [sp, #16]
    1f18:	ldp	x29, x30, [sp], #32
    1f1c:	ret

Disassembly of section .fini:

0000000000001f20 <.fini>:
    1f20:	stp	x29, x30, [sp, #-16]!
    1f24:	mov	x29, sp
    1f28:	ldp	x29, x30, [sp], #16
    1f2c:	ret
